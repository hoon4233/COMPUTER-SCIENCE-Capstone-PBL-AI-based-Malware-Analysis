das
mov
adc
fist
adc
inc
out
scas
test
ds
(bad)
xor
in
adc
or
cdq
jne
into
(bad)
fisttp
cwde
cmps
aas
fxch
popa
xchg
and
int
cdq
mov
push
pop
inc
cmp
lds
aam
push
jns
add
sbb
lea
cdq
ret
lea
aaa
sbb
shl
xchg
fst
sub
clc
and
xchg
pusha
cmp
add
cmp
and
dec
int3
(bad)
inc
push
add
(bad)
mov
mov
movs
ss
mov
or
test
test
(bad)
mov
push
mov
lahf
mov
push
jmp
in
xchg
pop
xor
sbb
int3
jb
jo
cmp
clc
(bad)
mov
jle
lock
cmc
xchg
sub
xchg
sbb
add
pop
stos
aas
jo
mov
test
ins
loopne
fadd
sbb
ins
jb
loopne
dec
push
xor
inc
sub
lods
mov
fimul
mov
lds
call
icebp
adc
inc
sub
or
test
xchg
icebp
test
(bad)
in
or
frstor
int3
ins
shl
inc
pop
lods
jecxz
sub
fcomip
mov
jnp
ins
es
xor
jne
xor
mov
adc
sub
add
(bad)
sub
and
sbb
das
nop
add
dec
pop
and
adc
retf
pop
or
jl
ror
movs
jb
out
add
call
cld
(bad)
enter
daa
fcom
aas
sbb
bound
out
nop
lahf
daa
retf
scas
lds
or
lds
jmp
inc
inc
mov
fimul
lds
cmc
pop
repz
cmp
pop
call
mov
add
dec
xor
retf
ins
jae
jns
and
addr16
cmc
and
call
fldenv
push
ffree
push
jb
lods
pop
std
or
cld
gs
or
dec
cmc
(bad)
jmp
xor
cmp
jp
pop
ret
gs
mov
ja
jo
mov
xchg
fcomp
push
sahf
(bad)
arpl
or
test
jae
clc
ret
inc
les
fcmovbe
bnd
xchg
addr16
movs
mov
aaa
mov
adc
sub
xchg
loopne
daa
add
ins
dec
jo
xor
in
int
in
xor
stos
mov
jg
dec
(bad)
lea
cmps
sbb
add
add
ins
scas
cwde
lds
(bad)
or
and
sbb
scas
test
jnp
ret
popa
mov
pop
call
sub
xchg
add
scas
inc
jns
je
popa
mov
rcr
xor
mov
adc
stos
adc
mov
or
movs
cmp
mov
pop
cld
or
lea
push
and
sub
jo
push
push
adc
rcr
out
push
jae
jo
loope
fidiv
push
(bad)
ret
add
pop
fisubr
(bad)
int3
mov
jae
loope
xor
inc
repz
fcom
aaa
mov
push
scas
xor
mov
out
mov
inc
ja
inc
ffree
add
mov
add
(bad)
xchg
ret
xor
aaa
hlt
fiadd
adc
outs
xchg
and
stos
repz
mov
xor
lea
mov
mov
xor
test
repz
loopne
inc
cli
dec
rol
scas
inc
gs
(bad)
mov
dec
jl
push
movs
int
dec
inc
sbb
movs
xor
mov
cs
dec
inc
dec
bswap
mov
ret
xlat
cmp
ret
(bad)
imul
ds
imul
(bad)
sub
cli
xchg
inc
mov
loop
mov
mov
rol
leave
scas
cmp
fistp
inc
icebp
dec
fs
inc
loop
pop
outs
loope
movs
fimul
mov
push
ds
mov
test
xchg
mov
jbe
add
ret
add
push
jmp
xor
scas
jns
jmp
mov
mov
dec
lods
ret
inc
xchg
xor
push
mov
push
sub
lods
push
cli
(bad)
sbb
jg
jge
aam
cmp
out
wbinvd
rol
dec
mov
pusha
lods
jmp
not
out
mov
jb
mov
push
pop
test
test
pop
pop
stos
mov
das
repnz
inc
pop
repnz
xor
adc
jae
arpl
shl
sbb
in
lds
or
ror
enter
cld
dec
stos
pop
test
leave
das
out
clc
adc
inc
add
(bad)
neg
push
dec
ja
xor
pop
sar
mov
mov
mov
cdq
jl
aaa
retf
push
push
in
movs
inc
xchg
pop
xor
jmp
jbe
ins
mov
push
or
xchg
popf
inc
out
xchg
mov
(bad)
pop
daa
add
sbb
data16
mov
scas
aaa
sub
jns
out
iret
mul
adc
les
fadd
ret
push
xor
call
out
outs
test
inc
out
xchg
xor
inc
push
add
lods
jno
cmp
dec
and
retf
loop
lahf
add
or
fs
pop
les
ja
mov
jmp
scas
pop
(bad)
pop
mov
add
xor
dec
sub
not
out
xor
rol
jmp
fs
add
xchg
xchg
rol
imul
ja
xchg
stos
clc
mov
mov
je
int3
push
push
push
pusha
sbb
pushf
enter
idiv
cwde
adc
xchg
jae
icebp
aaa
mov
in
dec
jnp
adc
(bad)
out
ret
je
cli
jp
lock
sub
inc
loopne
hlt
stos
mov
jo
fs
cmp
push
pop
stc
or
mov
xor
retf
inc
inc
jge
(bad)
cdq
in
arpl
add
call
pop
sbb
jne
adc
les
cli
xor
inc
hlt
cmps
rcr
jne
adc
outs
mov
or
rol
cmp
push
lock
cmp
mov
jne
adc
and
push
push
loop
movs
retf
xchg
inc
popa
stos
mov
and
enter
repz
test
cs
fcomp
fsub
lods
dec
sbb
cwde
in
mov
iret
pusha
movs
sbb
push
(bad)
icebp
and
push
clc
in
pushf
xchg
push
movs
int
std
scas
dec
pop
hlt
jp
movs
mov
out
arpl
or
imul
mov
pop
dec
jae
outs
in
inc
fdiv
fwait
cwde
xchg
ret
add
and
push
(bad)
jmp
(bad)
sub
fisttp
sub
pop
jle
dec
push
jnp
enter
(bad)
mov
dec
dec
out
imul
push
aas
fs
xor
scas
cmp
mov
popa
xor
or
(bad)
(bad)
cdq
lods
idiv
test
nop
sbb
pop
mov
jne
mov
leave
adc
dec
jbe
popf
ret
push
mov
xchg
les
mov
test
jno
mov
dec
xchg
popa
and
cmp
scas
cmp
xchg
addr16
xor
push
iret
mov
rcr
xchg
daa
mov
es
mov
mov
jae
jmp
in
xor
add
jecxz
aam
jne
xchg
adc
adc
(bad)
fisttp
js
mov
(bad)
pusha
fiadd
scas
(bad)
add
fld
retf
repnz
xor
add
fmulp
or
imul
fidivr
jno
adc
sbb
xchg
fimul
pop
imul
arpl
das
popa
lahf
and
jecxz
inc
mov
and
cwde
and
dec
sub
and
(bad)
shr
sbb
ins
mov
xchg
jg
cmc
call
push
mov
enter
push
lahf
dec
xchg
cs
in
dec
rcl
jb
add
adc
call
out
mov
dec
mov
adc
aaa
sub
dec
bt
inc
push
stos
test
add
jo
pop
or
sub
fsubr
add
mov
nop
mov
adc
push
cli
test
mov
pop
leave
daa
je
(bad)
and
test
sub
cs
js
fwait
ins
sar
jnp
out
mov
cmp
cmp
hlt
xor
test
std
and
mov
popa
and
dec
sahf
mov
mov
stos
(bad)
in
(bad)
cwde
into
pop
sbb
xor
mov
adc
sti
dec
xchg
xchg
add
or
and
add
pop
mov
stc
loope
dec
sbb
icebp
push
mov
pop
(bad)
arpl
dec
cmp
pusha
xor
les
test
movs
jno
jle
and
lods
push
dec
ja
mov
(bad)
mov
addr16
cli
cwde
xor
pushf
fcmovbe
cmp
add
inc
test
ins
test
dec
jnp
push
cmp
pop
mov
mov
mov
mov
sub
cmp
push
xchg
ja
push
(bad)
jecxz
sbb
dec
hlt
(bad)
push
pushf
inc
jg
xor
or
ja
xor
mov
push
fnstenv
pushf
and
xor
adc
daa
cdq
cmps
jle
lahf
or
sub
dec
cli
outs
cmp
jl
jbe
xchg
and
add
stos
or
fdecstp
mov
mov
fld
(bad)
mov
repz
cmps
cwde
xor
fiadd
xlat
add
and
sbb
in
xor
lahf
mov
jge
mov
je
xor
arpl
adc
retf
lea
cmps
leave
das
pop
out
mov
adc
out
jl
cmp
int3
(bad)
psubsb
hlt
into
loope
call
mov
cmps
js
xchg
enter
jp
mov
push
pop
mov
cwde
in
dec
ins
shl
xchg
mov
in
aad
(bad)
push
dec
ins
fdiv
xlat
push
jmp
jmp
jle
(bad)
shl
test
imul
rcl
add
fild
cmp
fcmove
retf
popa
in
clc
jb
loopne
inc
sub
cld
mov
jge
rol
xchg
xor
push
scas
sbb
sub
or
ja
and
mov
push
dec
mov
and
sbb
fmul
retf
mov
xchg
lock
es
push
mov
movs
repz
inc
sbb
fmul
push
gs
(bad)
cmps
push
imul
cmps
ins
fdivr
fistp
retf
ja
scas
js
sbb
adc
in
mov
(bad)
or
pop
push
mov
xchg
jo
xchg
mov
xchg
cwde
sbb
pop
and
xchg
cmps
cmp
fistp
adc
and
(bad)
mov
scas
jbe
jl
fxch
and
mov
js
les
mov
mov
xor
fwait
or
push
jb
sbb
mov
add
aas
repz
inc
sub
imul
pop
cmp
add
ins
gs
and
adc
add
mov
and
dec
mov
inc
daa
inc
adc
mov
pusha
mov
cwde
xor
fcmovnu
or
mov
mov
and
in
gs
pop
aad
(bad)
dec
lods
les
dec
test
xor
ins
xor
push
xor
or
push
popa
les
mov
pop
adc
xchg
push
es
inc
adc
clc
repnz
fild
xchg
popa
inc
push
(bad)
fnstcw
mov
mov
out
xchg
jae
mov
mov
jmp
in
(bad)
ficom
(bad)
xor
inc
call
clc
mov
aam
jp
and
add
movs
not
mov
test
add
pop
cdq
xor
shl
and
into
pusha
pop
rcl
and
fcom
leave
rep
mov
mov
aad
or
mov
adc
and
maxps
mov
mov
inc
sti
mov
sbb
or
push
leave
inc
dec
mov
sbb
dec
out
push
push
fdivrp
addr16
cmp
test
test
pop
adc
add
jno
inc
and
mov
inc
dec
xor
mov
pop
imul
outs
fistp
(bad)
mov
fadd
pop
int
pop
inc
daa
push
inc
adc
pop
aas
repz
outs
xchg
fdiv
mov
fld
cmp
add
outs
int3
inc
mov
push
stos
inc
sbb
and
pop
or
xchg
adc
jecxz
xor
cmp
mov
(bad)
loope
pusha
cmc
gs
mov
call
(bad)
fnsave
inc
sub
inc
mov
in
ja
aaa
ret
add
adc
cli
adc
ret
pop
stos
not
shr
leave
(bad)
dec
mov
or
sbb
ret
add
or
pop
mov
shl
mov
(bad)
stos
xchg
test
out
mov
fsub
cli
push
inc
or
mov
jne
inc
lods
lock
dec
fcmovbe
clc
add
out
jl
add
lahf
inc
cmp
or
adc
and
mov
mov
fsub
mov
xor
div
push
(bad)
sbb
js
aad
enter
jnp
xor
neg
sub
jecxz
js
mov
xor
push
mov
in
adc
pop
test
les
stos
push
sbb
xchg
cwde
dec
aaa
mov
cwde
aad
hlt
sub
in
mov
neg
sbb
enter
and
jae
mov
(bad)
dec
inc
push
fidivr
push
push
mov
xlat
test
repz
into
jnp
aad
sbb
inc
popa
push
xor
cmp
sbb
sar
popf
push
push
add
call
push
pop
mov
(bad)
out
pop
sub
inc
sbb
loop
mov
mov
mov
sbb
and
push
jl
aas
cmp
sub
inc
aaa
dec
mov
jge
mov
dec
pop
daa
pop
js
pop
xlat
call
enter
cdq
mov
push
pop
mov
pusha
loopne
gs
(bad)
repz
test
mov
add
xchg
outs
(bad)
mov
fidivr
xor
dec
aad
dec
je
data16
push
push
(bad)
aas
dec
sbb
cli
cld
and
pop
lds
stos
loop
xchg
or
mov
imul
paddw
mov
xor
aam
xchg
adc
and
call
add
jmp
mov
xor
jne
in
mov
leave
mov
pop
fdivrp
dec
and
and
aam
xchg
pop
jp
sbb
adc
lds
ret
sar
cmp
outs
xchg
fbstp
xor
pop
sub
adc
frstor
loop
loop
and
push
scas
inc
mov
and
aad
xchg
outs
retf
push
and
mov
and
mov
xchg
xor
push
hlt
loopne
sbb
stos
pop
dec
scas
sahf
xchg
ret
lea
push
xchg
in
pop
sbb
ror
movs
dec
inc
lock
cld
rol
(bad)
or
sbb
js
xchg
cmp
push
or
in
lds
or
hlt
jb
movs
(bad)
add
jmp
mov
pop
pop
adc
iret
iret
or
inc
xchg
pop
and
adc
mov
aaa
(bad)
cwde
sbb
push
xlat
or
lds
mov
inc
sbb
scas
sub
gs
sbb
cli
jmp
pop
lea
jae
stos
xor
pop
cmp
push
je
sub
pushf
lock
out
std
cmp
pushf
mov
or
mov
imul
lock
and
sub
xchg
jne
inc
jo
gs
cmp
mov
(bad)
cmps
mov
and
add
fwait
jae
rol
cli
push
inc
retf
retf
popf
push
and
xor
sbb
fs
pop
sbb
or
cs
add
mov
mov
cmp
bound
int
push
mov
test
in
jl
mov
outs
arpl
add
mov
stc
jae
xchg
jae
ins
inc
xchg
stos
mov
cmp
iret
xchg
(bad)
repnz
jnp
adc
sub
push
into
pop
xor
jmp
pusha
(bad)
pushf
mov
(bad)
call
jo
call
jno
(bad)
jmp
mov
mov
scas
xchg
je
dec
sbb
sbb
in
lods
je
dec
(bad)
cmp
pushf
dec
add
and
sar
ficomp
movs
movs
clc
cli
test
repz
ja
mov
(bad)
fimul
leave
sbb
mov
and
pop
mov
ror
(bad)
xchg
inc
mov
mov
aad
adc
inc
(bad)
cld
pop
add
mov
mov
sub
(bad)
mov
cmp
outs
rcr
(bad)
scas
mov
mov
dec
mov
jl
pop
pop
mov
mov
das
sub
adc
addr16
inc
mov
js
sub
pop
jmp
daa
test
dec
xchg
lods
add
mov
jno
ss
out
cli
sbb
(bad)
xchg
fs
or
aad
dec
ror
or
or
or
gs
icebp
xor
fs
out
adc
stc
(bad)
daa
lods
ds
push
xchg
ins
jl
loop
out
sbb
sub
fwait
xchg
jle
mov
inc
cmp
daa
popf
sbb
(bad)
inc
lea
fcom
adc
(bad)
adc
mov
loop
xchg
push
sbb
sub
shl
lods
mov
inc
aaa
cmp
sar
nop
repz
pop
jmp
jecxz
jle
xchg
call
dec
sub
rcl
adc
repnz
sbb
mov
mov
or
jmp
adc
(bad)
aam
pop
aad
rol
mov
jmp
mov
fbstp
iret
adc
inc
shr
and
jmp
sub
add
sbb
gs
jne
push
jge
fild
leave
inc
out
fwait
lock
jmp
cdq
xchg
pop
movs
jno
bnd
dec
sub
fsubp
stos
shl
or
(bad)
scas
pop
jb
adc
sahf
test
pop
push
inc
cmps
cmp
mov
scas
loop
pop
loope
sbb
call
movs
pop
mov
outs
inc
pop
xchg
mov
mov
or
xor
cdq
cdq
mov
ret
add
sar
lods
pop
in
test
pop
and
push
mov
bnd
(bad)
mov
xchg
inc
cmp
dec
mov
lods
jmp
dec
iret
sub
jecxz
test
(bad)
cld
inc
cmps
(bad)
nop
pop
ret
out
mov
mov
jns
push
and
jge
mov
fwait
pop
and
popa
pop
sub
push
mov
sbb
ds
inc
dec
dec
xchg
pop
ja
mov
cmp
jnp
mov
jb
arpl
pop
mov
(bad)
loop
pop
add
ret
outs
stos
cmp
test
jecxz
jnp
fsub
stc
push
outs
lods
std
loop
or
aaa
retf
jno
inc
mov
out
inc
sub
ret
sbb
jmp
add
mov
cmp
imul
pop
ror
das
and
ins
push
push
in
dec
and
retf
imul
sub
jno
not
scas
jl
mov
xchg
sbb
data16
jo
jecxz
fs
cmps
jnp
popf
popf
daa
dec
inc
or
and
jo
push
mov
mov
dec
xor
and
loopne
cmp
cli
lea
out
lahf
cwde
add
(bad)
sbb
adc
ret
xor
xor
scas
push
dec
out
mov
bound
jnp
cmp
pop
and
push
xor
stc
inc
jns
xchg
push
jmp
stos
fcom
inc
mov
pop
or
jbe
xor
cmp
jle
and
cli
cmps
sub
gs
jmp
sbb
repz
adc
xchg
repz
scas
loop
cmp
xchg
loopne
mov
dec
jno
and
cmp
push
fimul
xchg
movs
imul
dec
(bad)
fcmovnu
jecxz
sti
shr
test
in
lock
cld
sar
std
mov
cmps
pop
(bad)
cld
sbb
ja
jecxz
mov
sub
retf
sbb
xor
ficomp
das
pop
aas
loope
sbb
fcomp
jmp
out
sahf
mov
nop
into
jo
in
cmps
(bad)
popf
dec
xor
sub
dec
push
out
ds
cmc
push
mov
jnp
cmps
sub
fbld
sbb
aaa
jo
sub
je
jno
hlt
xchg
aas
inc
inc
jo
fs
cmc
retf
push
gs
jle
out
xlat
popa
mov
dec
cli
and
mov
mov
stc
sbb
push
test
inc
cmp
add
les
push
cmp
fisub
fmul
dec
jne
cmp
fdiv
pop
(bad)
(bad)
outs
scas
push
pop
sub
push
inc
pop
cmp
xchg
mov
cmp
xor
sahf
and
inc
add
popf
mov
add
lds
inc
inc
mov
cmc
or
fild
or
or
and
sbb
xor
mov
mov
call
mov
leave
and
push
lods
cmp
stos
push
adc
cli
or
(bad)
dec
add
pushf
test
pop
cli
push
sti
mov
(bad)
inc
mov
lods
ror
(bad)
dec
sub
xchg
js
mov
mov
push
shl
jnp
rcr
les
out
cmp
push
loopne
pop
pop
sahf
mov
das
xchg
fmul
xchg
ja
fisttp
add
cwde
or
(bad)
xor
push
nop
sub
aaa
lahf
fsub
and
push
and
lds
push
sub
data16
cmp
pop
jl
mov
icebp
or
pop
sbb
std
lods
imul
adc
inc
and
or
sub
in
push
or
pop
mov
lea
cmp
imul
hlt
ds
adc
fbld
mov
push
push
ret
sti
lods
cmp
push
retf
jne
(bad)
sti
pop
mov
lods
aad
cmps
adc
or
pop
out
mov
outs
bound
sti
or
jnp
adc
(bad)
cli
jo
fstp
ror
and
push
add
sub
inc
fwait
pop
xlat
lods
lock
test
dec
cwde
sti
into
stos
(bad)
movs
and
lea
(bad)
mov
mov
push
or
dec
push
xor
push
js
mov
daa
xor
jae
ds
adc
sbb
mov
mov
xchg
cld
push
pusha
adc
pusha
mov
lods
add
add
mov
clc
sbb
jle
lahf
cmp
add
or
cmp
push
pop
pop
fidivr
jo
stos
push
in
arpl
mov
in
nop
ins
xchg
sbb
push
jb
cli
push
out
cwde
jmp
xor
jmp
fst
jb
push
push
mov
jnp
jp
outs
pop
inc
xchg
jle
retf
add
mov
fldln2
call
push
or
daa
cli
xlat
lahf
clc
inc
cmp
xchg
ins
jbe
and
mov
sbb
scas
xor
pop
xor
lock
dec
or
in
pop
dec
jge
fsub
inc
test
sub
in
cmp
jl
call
pop
rcr
push
jnp
ins
aas
mov
inc
mov
test
push
je
dec
shl
lock
cli
stc
int
retf
movs
std
enter
sub
push
call
cmp
pop
pop
repnz
into
in
cmp
cld
sar
mov
or
xor
mov
jne
push
push
jg
mov
mov
test
fidivr
inc
pop
cmp
adc
cdq
mov
inc
sub
xchg
repz
xchg
in
mov
jl
aad
call
shl
xchg
push
adc
mov
cwde
stos
or
enter
maxps
adc
push
jnp
jge
fcom
cli
pop
imul
mov
jmp
mov
outs
mov
xchg
movs
loopne
inc
pop
pop
jmp
(bad)
sub
jle
rcr
icebp
cld
jmp
cwde
sahf
cmp
icebp
int3
in
pop
and
pop
inc
in
push
stos
xchg
rcl
adc
retf
int3
adc
mov
jo
or
pop
cmovne
hlt
pusha
xor
movs
shl
xchg
and
push
aam
cwde
rol
dec
fcom
popa
or
sub
add
push
sub
icebp
xchg
je
sub
inc
xlat
sub
xor
popf
pop
jne
jecxz
loope
pushf
out
dec
add
or
repnz
lods
cmp
dec
out
inc
popa
pop
repnz
xchg
jge
out
shl
push
adc
stos
aad
jmp
scas
popf
xor
ret
sub
data16
aas
xchg
xchg
sub
movs
adc
push
jmp
mov
and
fmul
inc
xor
cmps
fs
and
popa
stos
push
push
jmp
mov
mov
cdq
sub
sub
(bad)
xor
div
fs
mov
or
cmp
out
gs
popf
pop
and
mov
arpl
xor
lods
inc
inc
pop
cwde
call
and
mov
sub
push
mov
ror
xchg
fidivr
arpl
xchg
sbb
mov
aas
xlat
jo
in
call
push
sub
sbb
jbe
int3
xor
mov
xchg
(bad)
(bad)
fwait
adc
aam
push
pop
add
nop
pop
fwait
jmp
mov
and
(bad)
movs
and
aad
mov
popf
or
ficomp
jo
imul
mov
sub
jno
js
pop
jbe
les
pop
push
in
pop
fstp
rcr
frstor
cld
xchg
cmp
inc
pop
inc
jecxz
sbb
jp
shl
sti
out
out
xor
pop
sub
jne
add
cmps
(bad)
es
pop
test
cmp
inc
sub
mov
mov
arpl
mov
jae
push
fcmovne
mov
out
adc
sub
shl
mov
push
repz
jno
jae
add
es
sbb
aad
push
push
fs
push
add
popf
in
lods
push
out
les
(bad)
fucomp
imul
div
xor
scas
push
cmp
dec
enter
add
enter
sub
dec
cmp
imul
repnz
ret
adc
daa
or
je
jmp
dec
adc
xor
and
stc
loopne
mov
repnz
and
jecxz
jmp
ins
outs
int
inc
or
cwde
jmp
dec
xor
sbb
dec
dec
inc
pop
and
sbb
push
cmp
push
add
test
cmc
mov
or
cdq
call
xor
lods
fcom
push
sbb
stos
cmp
push
sti
jl
leave
les
adc
test
loop
xchg
sahf
add
dec
sbb
ds
test
mov
mov
mov
pop
div
push
mov
fcom
jg
xchg
or
adc
add
mov
xchg
mov
inc
cwde
or
adc
push
(bad)
mov
popf
aam
lock
and
xor
sub
or
enter
sti
bound
mov
mov
mov
mov
add
cmp
jmp
jmp
dec
gs
mov
mov
pop
into
fld
call
xchg
pop
add
and
jg
xchg
jne
ret
dec
ret
in
or
xchg
dec
gs
inc
xor
retf
sti
pop
dec
stos
js
mov
adc
push
enter
add
jns
xor
test
sbb
stos
mov
inc
inc
fistp
(bad)
jl
gs
and
push
xor
call
popw
mov
mov
aam
fisubr
dec
dec
loope
js
scas
int
and
js
xchg
mov
call
push
adc
shl
outs
push
icebp
push
adc
cmp
out
mov
ins
mov
cmps
or
aad
sub
(bad)
mov
mov
mov
inc
popf
xchg
int3
jl
xchg
stc
shr
ret
loope
enter
mov
pusha
hlt
cmps
ss
scas
pop
mov
inc
(bad)
nop
xor
daa
or
mov
leave
fistp
push
xor
dec
push
cmps
lahf
or
and
sub
neg
lods
and
cld
push
enter
bound
pop
dec
scas
inc
cmp
cdq
dec
mov
push
fist
outs
inc
mul
jmp
add
(bad)
xor
cmps
ficom
mov
cli
leave
xor
mov
lahf
mov
stos
xchg
(bad)
(bad)
mov
cdq
mov
les
and
cmps
fs
sahf
nop
test
sbb
scas
fnsave
mov
mov
sahf
(bad)
and
aam
ret
hlt
fist
cld
mov
imul
js
not
sub
cmc
xchg
and
push
push
cmps
push
add
scas
add
and
nop
or
push
xor
outs
out
and
sub
cmps
fnsave
cwde
scas
daa
jo
les
pusha
imul
es
xchg
mov
call
test
mov
mov
adc
or
outs
and
and
sahf
ds
enter
cmc
cdq
fldcw
mov
mov
inc
je
xor
mov
je
sub
dec
sbb
mov
and
vpunpckhdq
mov
dec
leave
or
(bad)
cmc
add
je
and
out
sbb
sti
aas
and
pop
add
sbb
cli
push
pop
mov
adc
mov
pop
mov
movs
loopne
es
fstp
dec
fiadd
aas
cmp
jg
cdq
push
pop
les
xlat
test
mov
jb
invd
ret
or
je
xchg
repz
push
ror
pop
dec
add
mov
dec
push
and
pop
ror
add
inc
or
mov
fistp
mov
add
fisubr
ror
cmp
cdq
mov
and
jno
or
jb
mov
lods
jnp
call
pop
cld
inc
cmp
es
mov
mov
mov
jp
outs
fcmovnu
call
sub
mov
xor
mov
aas
push
inc
rol
mov
iret
mov
pop
pop
in
pop
xor
jne
(bad)
lods
mov
jb
dec
sub
xchg
sti
push
push
pusha
jp
jle
bound
cmp
mov
mov
pusha
sbb
pop
and
repnz
outs
cli
dec
rcr
sahf
repnz
sub
inc
cld
jae
push
adc
mov
xchg
cmp
mov
out
scas
mov
hlt
add
repnz
aam
or
(bad)
nop
sub
iret
cmp
and
ja
xchg
mov
push
out
sbb
pushf
xor
leave
dec
dec
mov
dec
xchg
popf
jnp
cwde
or
out
push
aaa
add
popf
mov
loopne
xor
scas
jmp
cdq
mov
dec
add
xor
and
shl
jb
int3
xchg
fld
pusha
xchg
sahf
idiv
fadd
pusha
xchg
stos
sub
adc
js
scas
jmp
movs
mov
fadd
ja
adc
aam
jne
js
lds
cmp
scas
rcr
jo
inc
nop
ss
dec
push
nop
sbb
and
mov
pop
test
(bad)
jb
test
fidivr
call
sbb
loop
push
sub
neg
and
dec
pop
repz
arpl
leave
xchg
cdq
out
aas
call
mov
jb
scas
shr
or
xlat
scas
scas
(bad)
push
(bad)
xlat
xor
push
mov
enter
retf
sbb
in
call
jg
jmp
leave
das
je
ja
call
xor
cmp
retf
mov
lea
setge
push
not
lock
push
cld
out
pop
popa
push
pop
rol
in
mov
lahf
push
(bad)
lds
push
not
pop
bound
movs
loope
lea
or
xor
and
in
cmp
xor
sahf
shl
push
inc
adc
dec
push
aaa
out
jge
and
push
cld
xchg
into
mov
dec
adc
(bad)
mov
mov
jae
mov
xor
mov
mov
jmp
div
shl
add
lds
in
fnstcw
mov
mov
fidivr
add
inc
cmp
xlat
sub
and
cli
fimul
add
(bad)
outs
jae
les
push
inc
shl
xchg
push
imul
push
cmp
js
xchg
sbb
test
jae
je
mov
mov
(bad)
fwait
and
cdq
les
fdivr
pusha
adc
xor
clc
les
mov
sub
sub
jecxz
retf
out
pop
mov
rol
popa
jmp
mov
loopne
cli
ja
mov
mov
sbb
fcomip
xchg
dec
nop
and
retf
stc
sub
jl
out
inc
jmp
dec
test
je
push
mov
(bad)
xor
jmp
pop
movs
inc
push
add
pop
xchg
xchg
aam
lock
pop
push
scas
lods
xchg
jmp
repz
xor
sub
inc
iret
test
mov
inc
cmp
xor
mov
adc
xor
add
fist
test
mov
mov
cmp
add
lods
dec
mov
or
call
add
test
or
not
mov
and
stos
(bad)
movs
ror
sar
push
shr
fmulp
sub
jp
add
pop
xchg
dec
rep
popa
movs
pop
popf
std
xchg
stos
and
xor
aam
mov
movs
cmc
int3
cld
nop
sub
mov
ret
push
cmp
pop
aam
(bad)
stos
mov
not
xchg
ret
test
add
mov
inc
pop
stos
fisub
call
aad
fstp
test
stos
(bad)
jo
es
jmp
ror
or
daa
add
in
add
div
sub
add
out
mov
jg
mov
inc
jb
lahf
inc
scas
shr
cmps
sbb
sbb
stc
pop
pop
(bad)
das
in
add
repz
jo
inc
dec
pop
cmp
and
je
aaa
inc
push
sbb
int
test
push
push
bound
adc
test
fistp
add
enter
push
fstp
int3
push
dec
jne
jns
dec
mov
sbb
clc
adc
cmp
mov
addr16
jb
jb
in
jg
dec
data16
out
push
fsub
push
mov
inc
adc
or
add
dec
(bad)
pop
xchg
add
jmp
movs
daa
out
jp
in
dec
mov
jbe
jo
js
or
int
test
xchg
cld
inc
outs
or
jmp
fwait
dec
lock
(bad)
push
xchg
scas
movs
cs
lds
cld
(bad)
ins
sahf
js
in
ror
sub
test
fimul
mov
cdq
and
xor
mov
mov
adc
cdq
xor
inc
shr
or
adc
xchg
push
jmp
(bad)
pop
in
or
xor
lea
adc
inc
lahf
add
lea
leave
outs
and
inc
cmps
in
rep
(bad)
call
test
fist
dec
(bad)
sub
mov
or
lock
push
pop
into
jge
mov
retf
mov
xchg
ret
adc
ret
sub
mov
bndldx
loope
nop
add
sahf
or
pop
mov
pushf
xchg
xor
das
cld
repz
dec
lahf
add
sub
aas
add
add
aam
sub
cs
hlt
nop
sub
cmp
mov
push
rep
jbe
mov
ss
aam
cmps
stos
adc
cwde
inc
scas
iret
mov
aas
inc
and
jne
cmps
jmp
push
std
mov
nop
test
mov
xchg
rol
jge
or
xchg
jl
add
push
mov
mov
mov
ins
(bad)
in
into
jecxz
clc
jno
mov
int3
adc
lahf
mov
mov
or
sub
mov
pop
movs
into
mov
lea
clc
test
add
pop
pop
cmp
xchg
into
fcmovnbe
or
iret
rol
jbe
mov
int3
pusha
and
or
push
sbb
cld
aaa
mov
adc
and
xchg
and
pop
cs
je
mov
lods
sar
aas
jne
fwait
cmps
inc
test
movs
jmp
push
xor
movs
scas
and
cld
fisub
adc
ds
cmp
mov
mov
jge
fwait
pop
push
clc
fs
push
sar
cld
in
popa
jl
ins
pop
(bad)
jmp
sbb
das
stc
jns
les
mov
mov
sub
mov
push
sub
xor
xchg
xor
cmps
pop
pusha
xchg
aas
pop
or
jb
out
sub
jge
cmp
es
and
dec
mov
inc
mov
jo
xchg
test
and
or
push
sahf
cmp
jb
jbe
fist
popa
push
stc
adc
adc
add
mov
pop
sbb
test
adc
inc
dec
sub
jnp
loope
pop
dec
xor
inc
sub
inc
enter
mov
lds
int
test
or
sbb
jo
and
mov
jno
(bad)
retf
xchg
das
out
test
ds
xchg
add
pusha
mov
mov
xchg
xor
fstp
or
cmp
push
jne
push
cmp
xchg
mov
imul
mov
fcmovnbe
jmp
(bad)
dec
mov
push
in
push
mul
sub
aam
scas
sbb
out
stos
cmp
pop
mov
leave
(bad)
sub
sbb
pop
int3
call
std
outs
push
(bad)
ja
cmp
lods
es
push
cld
mov
push
add
mov
dec
sbb
jg
jns
out
sbb
adc
adc
jnp
outs
push
xchg
adc
pop
cld
push
jne
adc
inc
loop
stc
jns
mov
int3
jp
daa
arpl
mov
aam
xchg
mov
into
jl
into
add
pusha
mov
in
sbb
cmp
adc
or
sbb
loop
xor
sbb
mov
push
and
sbb
sub
push
xor
ret
mov
jae
out
mov
mov
movs
psubq
sub
sub
ror
jns
repz
cmp
sub
xor
mov
inc
repz
test
test
int3
iret
fldcw
aas
sbb
push
cmps
shr
(bad)
push
cmp
pop
xor
sti
jl
lock
(bad)
rcr
aam
cmp
jecxz
imul
(bad)
retf
fs
adc
call
lods
aas
mov
xchg
pop
mov
or
sub
push
dec
call
or
movs
cmp
cs
lahf
mov
cmp
or
or
pop
jns
sub
sub
sub
xor
js
(bad)
xchg
lock
push
inc
mov
mov
enter
retf
mov
outs
mov
iret
dec
adc
mov
inc
out
lods
pop
or
pop
sub
sbb
cmp
dec
push
leave
cmp
sbb
daa
xchg
sub
jg
icebp
cld
out
jg
lds
loop
aas
test
test
popf
data16
mov
(bad)
sub
ja
dec
pop
mov
jp
scas
lods
jo
fst
sbb
push
dec
or
push
mov
movs
jge
pop
push
jmp
pop
add
or
sub
or
sti
loopne
popa
mov
inc
mov
cmp
or
and
ret
push
rcl
xor
shl
movs
ret
push
cmp
pop
leave
sbb
adc
dec
jge
(bad)
cmp
sbb
out
cld
gs
or
mov
mov
mov
into
dec
outs
inc
movs
movs
push
cmp
pop
mov
retf
and
jb
sub
cmp
push
lea
mov
and
fwait
sub
call
xchg
pop
je
repnz
mov
rcl
and
xor
lds
sar
clc
js
test
mov
into
or
or
loop
mov
mov
cdq
inc
pushf
test
les
icebp
cmp
mov
jge
fs
xchg
ficom
inc
sbb
icebp
mov
das
xchg
and
in
dec
les
dec
out
std
and
call
test
bound
mov
push
or
ja
(bad)
out
xchg
push
jno
push
cmp
test
push
ficom
ins
pop
jle
sbb
mov
pop
jno
popf
jne
ret
jecxz
je
fwait
les
in
out
adc
out
stc
dec
xchg
popa
test
fsub
jne
clc
add
into
in
mov
sub
jge
add
xchg
cmps
xlat
mov
fild
ret
xor
inc
pusha
adc
jns
rol
(bad)
fsubrp
in
imul
inc
inc
cmp
lds
hlt
sub
or
pop
jg
or
cmp
jmp
fld
mov
lods
inc
outs
jno
div
xor
or
out
lds
push
push
xchg
clc
bound
jmp
ins
push
call
sahf
loope
cdq
cld
fnsave
pop
push
lds
inc
retf
jecxz
pusha
mov
and
scas
(bad)
in
mov
sbb
cdq
mov
lea
movs
sub
cdq
adc
cmp
mov
je
mov
jge
loop
movs
push
ins
push
js
ror
inc
movs
sbb
jge
stos
sbb
in
fnsave
int3
icebp
mov
or
pop
jne
rol
mov
int3
inc
les
mov
or
xchg
push
pop
adc
push
movs
cmp
xor
hlt
fst
(bad)
test
or
or
ja
jo
add
lahf
out
sti
stos
adc
bound
dec
cmp
mov
mov
popa
adc
jmp
cmp
psadbw
int3
or
xor
mov
add
push
loope
fsubr
das
popa
pop
mov
push
push
stos
jmp
lock
loope
hlt
outs
fnstenv
mov
daa
mov
mov
and
test
jge
enter
sar
and
mov
das
pop
pop
nop
mov
out
test
cmp
or
lods
sti
fisttp
das
mov
sbb
cmp
xor
mov
sbb
int3
or
push
mov
adc
scas
neg
pop
mov
retf
lock
out
jb
les
icebp
test
stos
popf
shl
push
mov
das
sbb
scas
retf
mov
mov
fyl2x
or
shl
test
cwde
xchg
add
out
call
(bad)
test
daa
jno
jae
push
inc
pop
(bad)
add
test
fisttp
inc
aas
fcomp
mov
sbb
adc
mov
cmp
outs
mov
fdiv
cdq
adc
test
out
sbb
mov
test
das
push
push
out
ss
out
push
push
xchg
push
(bad)
jo
enter
mov
cmps
mov
fwait
outs
cmps
and
inc
lock
xchg
jl
imul
ja
dec
fadd
shr
inc
push
icebp
scas
js
sbb
sub
in
dec
inc
hlt
pop
ret
xchg
cld
jmp
rcl
push
cmp
out
ja
stos
rol
das
push
(bad)
stos
vunpckhps
sbb
lea
sub
mov
fsubr
std
aas
pop
adc
cwde
aaa
call
mov
sub
push
imul
jno
sub
enter
mov
sub
jno
arpl
dec
cwde
out
into
imul
mov
sbb
stos
stos
mov
push
mov
clc
aad
mov
push
xor
(bad)
int3
cmp
aas
push
ror
mov
mov
aam
fdivr
dec
xchg
(bad)
inc
mov
adc
push
(bad)
fsubr
lds
inc
int3
sbb
lea
scas
adc
(bad)
dec
and
push
dec
sub
and
xor
ds
out
and
jno
in
adc
and
adc
mov
mov
or
add
xchg
adc
sub
(bad)
pop
mov
xchg
xlat
loopne
shr
jno
sub
or
repz
sbb
outs
jno
mov
mov
fs
adc
sub
jle
xor
sbb
scas
adc
(bad)
xchg
aaa
sbb
mov
or
(bad)
fbld
push
jecxz
mov
cmp
leave
adc
inc
jb
aam
jne
popf
fs
mov
add
mov
call
in
mov
lods
addr16
lock
jne
xor
add
sbb
test
shl
pop
cmp
iret
mov
stos
cmp
push
callw
repnz
rcr
xchg
pusha
dec
ret
out
jnp
dec
inc
imul
sbb
stc
inc
jmp
sti
cld
mov
dec
int
mov
adc
inc
repz
cmps
mov
icebp
mov
xchg
mov
or
pop
xor
or
aam
std
sbb
cli
dec
movs
dec
inc
movs
add
mov
mul
adc
mov
arpl
or
push
or
(bad)
push
movs
or
fxam
pop
pop
xchg
mov
sbb
xchg
cmc
loop
xor
retf
jbe
xchg
and
push
xchg
mov
rcr
sbb
adc
xchg
dec
mov
lods
push
or
outs
fisttp
retf
pop
add
xor
push
push
pushf
adc
add
test
arpl
repz
pop
fwait
inc
xchg
push
and
adc
fild
in
inc
inc
xchg
jb
sbb
xchg
or
cmp
inc
and
popa
mov
cs
std
retf
add
jecxz
jo
dec
rcl
pop
call
test
mov
push
(bad)
fdivr
mov
dec
lahf
lahf
scas
out
js
out
pop
pop
cs
out
jecxz
dec
push
loopne
adc
repnz
jg
push
nop
jmp
cmps
mov
jbe
push
arpl
movs
jns
push
adc
rep
cmp
bsf
loop
js
xchg
fs
aad
inc
xchg
pop
leave
stos
cli
out
inc
fidiv
pop
jno
pop
push
(bad)
jmp
cdq
push
loopne
add
sub
pop
mov
mov
or
test
dec
lds
je
fcmovbe
adc
xor
mov
dec
mov
rcr
lods
sub
mov
mov
sbb
(bad)
loopne
ror
mov
push
push
clc
stos
sbb
inc
fisub
adc
aaa
ffree
cld
xchg
lahf
pusha
call
and
sub
sub
xchg
and
sbb
xor
int3
jb
push
adc
or
ret
in
xchg
inc
in
aam
loope
or
adc
cld
dec
retf
dec
scas
dec
std
fisub
shl
ret
fs
daa
push
mov
and
sub
iret
push
xchg
out
sub
jbe
(bad)
fwait
ds
ret
push
jmp
dec
pop
lds
mov
das
ret
shl
mov
(bad)
imul
mov
ds
retf
adc
jl
cs
mov
cmp
cmps
push
or
cmp
(bad)
out
jecxz
mov
fisttp
call
and
adc
xchg
leave
mov
(bad)
cld
mov
sbb
xor
nop
push
in
xchg
retf
add
add
repz
repz
jecxz
adc
sub
cmp
sub
fidivr
push
aaa
mov
out
int
mov
in
jmp
jg
inc
cli
push
inc
outs
cs
outs
pushf
push
inc
aad
out
shl
loope
add
push
jns
xchg
mov
movhlps
rcl
test
pop
push
in
stos
(bad)
dec
ret
inc
mov
ins
and
and
lock
lds
or
shl
imul
inc
rol
pusha
jne
xchg
sub
js
jae
sti
push
pop
in
mov
sub
pop
(bad)
jl
arpl
mov
cmp
push
std
or
pushf
mov
mov
cmp
dec
mov
pop
jbe
fsubr
inc
sub
clc
call
popa
xchg
xor
mov
sti
pop
dec
leave
(bad)
sahf
(bad)
and
adc
mov
mov
sahf
arpl
jne
dec
jns
js
jmp
jbe
adc
sbb
sub
hlt
push
jmp
sub
add
jae
mov
xchg
call
xor
div
jmp
loop
fstp
int3
mov
dec
add
mov
cmp
neg
leave
cs
mov
sub
arpl
mov
ficom
shl
(bad)
push
pusha
pop
ins
cmp
xchg
mov
pop
mov
je
and
test
aaa
mov
dec
out
ins
pushf
(bad)
xchg
push
pop
aas
adc
pop
jmp
pop
inc
jmp
repz
movs
pushf
and
xchg
leave
jae
cdq
mov
dec
push
add
arpl
mov
(bad)
mov
push
js
cdq
lock
lods
lock
or
movs
jmp
movs
jb
mov
pusha
out
outs
aad
(bad)
push
sahf
dec
loop
pop
icebp
sub
xchg
jp
fsubr
mov
imul
mov
xchg
imul
and
cmp
imul
js
ins
aaa
ins
xor
sub
ins
scas
push
or
mov
mov
pop
xlat
addr16
mov
imul
sub
nop
push
cmp
shr
xchg
inc
or
xor
jle
(bad)
mov
leave
in
jnp
push
aam
adc
adc
pop
pop
cwde
aam
jl
xchg
ret
xchg
cmps
mov
xchg
jns
mov
jl
add
repz
inc
xor
add
cmp
xchg
aaa
mov
(bad)
cdq
jne
iret
ja
loope
ret
cld
test
call
sti
or
adc
add
jne
fld
or
push
xlat
cli
iret
(bad)
jbe
dec
pusha
movs
pop
push
je
xor
scas
pop
mov
pop
rcl
arpl
iret
xor
test
push
call
jno
adc
sbb
mov
jmp
mov
mov
pop
or
sbb
outs
push
pop
(bad)
adc
add
test
pop
push
sub
jb
out
aad
mov
inc
scas
movs
mov
xor
adc
outs
or
mov
(bad)
pop
les
imul
es
cdq
arpl
dec
xor
jl
add
fxtract
test
cmp
cwde
loop
test
and
fs
inc
mov
dec
int
cmp
lods
call
arpl
mov
(bad)
ins
mov
pop
dec
ret
clc
stos
out
aas
fldcw
push
and
push
and
xor
add
push
add
enter
and
imul
ins
repnz
inc
dec
fdivr
ror
mov
in
mov
and
mov
(bad)
push
sbb
push
pop
mov
jbe
sahf
dec
test
fisub
rol
cmp
xchg
xchg
movs
or
cwde
sub
cmp
jmp
jg
xor
in
cdq
and
mov
or
aaa
imul
cmp
arpl
sub
ss
inc
pop
retf
test
xchg
xor
sub
cmovnp
sar
cmps
and
jmp
cmp
(bad)
mov
dec
xchg
repnz
ret
add
cmp
and
fcmovbe
xchg
sbb
add
sub
outs
loope
add
arpl
push
mov
push
gs
dec
add
dec
adc
call
xchg
mov
pop
xor
pop
jg
pop
cwde
push
imul
sub
sbb
iret
ret
mov
adc
xchg
cs
pushf
sbb
mov
xor
ds
jge
xchg
cmp
std
inc
sbb
mov
add
sub
jb
adc
mov
loop
stos
dec
arpl
sbb
fwait
cmp
movs
mov
fidiv
pop
out
cmp
mov
les
retf
sub
clc
adc
dec
jns
ja
push
jge
jno
rcl
aam
mov
jo
xor
pop
das
retf
mov
neg
mov
retf
ss
imul
sub
ror
mov
mov
push
fsubr
push
xchg
push
xchg
jo
jmp
adc
xlat
out
xlat
dec
or
outs
mov
call
push
jp
cmc
adc
data16
xchg
stos
pop
mov
mov
(bad)
inc
gs
cs
mov
sbb
pop
enter
shl
stos
dec
dec
mov
or
inc
int3
jne
jno
nop
xchg
and
ret
push
repz
sbb
push
daa
mov
pushf
mul
lock
adc
imul
cmp
jae
mov
dec
mov
fld
and
test
xchg
mov
loope
stos
mov
or
ficom
loope
adc
mov
into
pop
icebp
sub
outs
add
dec
mov
mov
shl
cld
(bad)
dec
rcr
inc
es
jne
pop
xchg
xchg
(bad)
mov
inc
pop
adc
inc
mov
or
ret
cmc
in
jbe
daa
jecxz
popf
mov
jmp
int3
(bad)
fmul
fidivr
gs
jns
jp
mov
call
cmc
sti
fbld
cmp
jbe
std
stc
aas
jnp
xor
ficomp
mov
popf
outs
mov
clc
mov
jno
in
(bad)
sub
cwde
leave
xchg
ret
mov
cmps
mov
adc
mov
pop
in
aad
mov
mov
leave
in
retf
cmps
je
push
xchg
jecxz
jbe
mov
dec
and
bound
pop
inc
lds
imul
or
mov
and
outs
xchg
stc
push
cli
fimul
jns
and
push
mov
fs
jbe
inc
test
in
in
cmc
ds
les
ins
adc
sub
popa
dec
repnz
cmps
outs
and
adc
aas
ror
lods
push
ror
(bad)
inc
xchg
aam
xchg
and
jb
add
cmps
sbb
test
jnp
jno
fs
sub
icebp
xchg
enter
cmps
dec
stos
xchg
int3
jecxz
std
cwde
xor
and
nop
sbb
and
xor
popa
inc
jne
ja
and
repnz
and
or
ins
inc
mov
mov
inc
iret
xchg
pusha
push
mov
xchg
aad
add
jae
adc
imul
mov
xchg
out
hlt
pop
sub
push
jb
je
dec
inc
ds
in
retf
ficomp
lds
pop
push
and
mov
jnp
data16
dec
std
sub
xchg
aaa
push
out
xor
dec
int3
dec
mov
push
jge
in
sub
mov
test
mov
push
rol
idiv
xchg
ins
pushf
push
icebp
(bad)
lods
in
adc
das
ja
inc
mov
fadd
shl
pusha
clc
outs
or
test
ds
sti
fst
icebp
inc
lds
mov
jecxz
js
int
nop
repz
cmp
pop
sti
mov
xchg
rcl
pop
mov
test
ror
and
das
jo
mov
arpl
xlat
mov
adc
mov
add
xchg
sub
dec
arpl
push
loope
mov
mov
dec
adc
jmp
mov
push
das
pop
or
cmp
and
imul
push
mov
sbb
pop
sbb
out
lahf
aaa
mov
mov
into
mov
and
or
adc
ror
sbb
mov
cli
xor
inc
push
xchg
sti
test
(bad)
jo
xor
dec
pop
or
and
cld
pop
or
xlat
mov
xlat
mov
out
pop
outs
int
(bad)
jns
das
push
inc
xchg
cwde
(bad)
inc
in
push
sub
xchg
test
xchg
dec
cdq
js
or
test
es
leave
rol
jnp
scas
shl
mov
xor
mov
cmp
cmps
(bad)
sbb
out
mov
test
sub
push
dec
clc
dec
add
pop
cli
or
jne
jae
adc
pop
mov
mov
cwde
mov
out
pop
les
(bad)
stc
mov
and
jp
pop
lds
cmp
mov
mov
dec
adc
stos
jmp
sub
aad
loope
jp
pop
sub
mov
inc
jno
xor
xchg
mov
sbb
sahf
inc
je
repz
xor
xchg
pop
lock
mov
fcom
dec
jno
lods
push
xchg
add
mov
and
mov
cwde
(bad)
xchg
push
mov
sar
es
mov
mov
push
sbb
xor
xchg
add
and
scas
jmp
and
inc
retf
dec
xor
cmps
arpl
sub
movs
(bad)
out
icebp
mov
leave
sahf
daa
fiadd
enter
outs
push
or
jge
neg
(bad)
mov
cld
aad
cld
xchg
out
movs
pop
xchg
xchg
gs
test
xchg
cmps
out
dec
pop
mov
and
or
int3
xor
xor
and
adc
inc
(bad)
sub
in
js
ds
push
stos
in
(bad)
mov
cld
sub
clc
addr16
fidivr
sahf
sahf
arpl
je
(bad)
push
retf
fld
fstp
xchg
add
push
xor
punpckldq
loop
lock
xchg
loop
mov
mov
gs
cmc
xchg
mov
xor
fsubr
mov
fist
mov
and
xchg
fistp
mov
mov
and
cmp
jae
xor
dec
jnp
xor
inc
mov
pop
push
cmp
and
sub
add
cmc
lahf
xor
fisttp
add
inc
es
(bad)
enter
sbb
data16
pop
in
pushf
add
jb
mov
out
mov
or
data16
add
outs
jg
fwait
sub
sub
add
pop
pop
push
sbb
push
cmp
test
addr16
hlt
jecxz
sub
mov
and
retf
inc
pop
push
jb
sub
leave
pop
scas
jg
ins
aas
mov
jp
in
and
adc
(bad)
xchg
jne
movs
shr
inc
sub
stos
and
push
retf
bound
jb
popf
cli
cmp
cmp
cld
cmp
repnz
sub
sti
add
fidivr
sar
stc
lahf
add
push
leave
or
xchg
push
sub
dec
es
ins
aam
lock
jecxz
xor
mov
and
dec
fld
mov
cmp
pushf
cdq
fcomp
mov
dec
sbb
es
dec
lods
adc
mov
mov
xchg
addr16
xor
jmp
mov
icebp
dec
ins
retf
ins
xor
jo
imul
mov
lock
sub
movs
popa
fsubr
mov
push
popa
retf
mov
xchg
les
adc
sub
daa
add
sub
ret
mov
adc
aad
add
push
inc
dec
xchg
div
xchg
jmp
iret
adc
mov
or
mov
xor
or
sar
and
sbb
fcomp
pop
add
sbb
popa
bound
out
mul
mov
jae
sub
lock
and
mov
pop
shl
fbstp
jae
inc
or
test
rcr
ins
loope
xchg
das
sub
(bad)
xchg
xor
mov
retf
pop
(bad)
fdivr
mov
int
push
push
inc
pop
fs
add
ds
lock
add
in
mov
xlat
daa
fcom
retf
jnp
cmp
in
xor
hlt
sub
add
push
mov
je
aad
mov
adc
shl
pop
push
mov
jnp
fnstsw
adc
aas
add
xor
push
frstor
pusha
mov
stos
int3
jmp
cmp
jo
inc
pop
mov
lods
inc
cmp
mov
mov
rcr
sub
add
push
fcom
mov
sbb
xchg
mov
inc
mov
mov
stos
mov
mov
hlt
mov
xor
fiadd
movs
dec
test
test
cmc
or
into
xchg
sub
or
pop
daa
rcl
dec
mov
and
pop
push
cmp
dec
or
xchg
sbb
stos
fwait
xchg
imul
sub
sub
bound
or
mov
fcom
nop
adc
mov
daa
push
push
jmp
dec
adc
xor
mov
in
dec
pushf
pop
mov
and
sbb
sub
and
fisttp
and
pop
cmp
dec
cld
mov
mov
outs
mov
adc
push
lock
jecxz
lea
test
addr16
retf
xchg
test
and
dec
hlt
mov
pop
mov
push
retf
mov
pop
addr16
ins
xchg
mov
mov
push
push
repnz
sub
mul
not
push
dec
add
jecxz
mov
xor
(bad)
mov
sbb
fwait
jb
jle
sub
mov
shl
iret
(bad)
icebp
je
retf
jb
call
test
cmp
push
push
and
mov
clc
push
jge
and
fucomp
je
mov
push
sbb
mov
int3
data16
ins
and
add
dec
icebp
xor
pop
or
cs
movs
inc
out
nop
pop
jmp
leave
adc
or
in
dec
xor
rol
mov
jmp
sbb
mov
cli
je
into
outs
imul
dec
pop
sbb
not
xchg
loope
push
mov
ss
and
fs
test
push
or
jb
ja
(bad)
movs
(bad)
popa
xor
ficom
add
cdq
in
and
mov
imul
fdiv
lods
cmp
and
nop
icebp
xlat
test
rol
adc
xchg
retf
pop
cmp
scas
in
pop
xor
(bad)
jge
pusha
(bad)
addr16
(bad)
outs
cmp
cmc
push
xchg
inc
mov
sub
daa
adc
pusha
cmp
aaa
je
in
arpl
jecxz
push
stos
ret
cmp
std
stos
gs
retf
adc
retf
push
xchg
test
call
test
adc
imul
mov
aas
dec
xchg
out
push
fisttp
fcomp
cwde
aaa
mov
adc
push
(bad)
into
xchg
xchg
gs
call
call
jno
fnstsw
xchg
sahf
mov
jne
push
inc
arpl
out
sbb
push
xor
mov
mov
repnz
jbe
mov
fwait
cmc
ins
lods
xlat
add
mov
aad
lods
push
test
xchg
push
out
mov
cmp
mov
retf
sbb
aad
stos
cld
pop
mov
dec
inc
adc
pop
cdq
nop
loop
retf
sub
and
jne
or
mov
mov
adc
mov
mov
push
leave
fistp
dec
jb
aaa
xchg
jmp
or
add
(bad)
jmp
push
mov
(bad)
movs
scas
stos
xchg
xor
into
aad
retf
mov
jbe
mov
dec
sub
push
sbb
mov
int3
push
loop
dec
stos
mov
(bad)
jmp
fstp
pop
icebp
stos
xchg
loopne
sbb
in
mov
and
scas
push
lock
pop
inc
shr
test
aam
in
push
mov
call
sbb
ret
pusha
sahf
add
cmp
mov
sbb
inc
sub
iret
jno
cmps
les
idiv
pop
les
leave
pop
ins
sbb
inc
push
pusha
pop
mov
jbe
test
adc
je
and
lods
in
jne
(bad)
dec
arpl
pop
mov
sub
stos
je
mov
daa
push
mov
or
cwde
xchg
div
in
(bad)
hlt
add
adc
in
push
add
cld
xchg
push
push
jecxz
xlat
call
fsubr
cmp
cmc
fdiv
outs
cld
xor
inc
lahf
pop
mov
mov
into
and
adc
in
sub
adc
push
add
and
sub
scas
in
push
ins
push
push
cmp
lods
adc
cld
fs
into
cld
rol
dec
adc
jecxz
test
adc
sub
sub
iret
xchg
clc
outs
hlt
push
xchg
mov
pop
aad
mov
adc
xor
stc
cmp
sbb
sub
sbb
and
inc
(bad)
es
fnstenv
sub
pop
jp
add
inc
cmps
arpl
add
aad
mov
mov
ja
es
adc
jle
adc
xchg
cmps
shr
(bad)
push
imul
mov
push
icebp
pop
mov
mov
mov
test
in
int3
lods
xor
fsub
xchg
stc
add
or
cwde
or
jno
mov
cdq
mov
cmp
cwde
jl
test
aad
pop
cwde
test
mov
inc
popf
jne
mov
mov
add
scas
mov
mov
test
daa
jo
jno
int
xchg
cmp
dec
jnp
cwde
adc
adc
jl
adc
add
sahf
push
xlat
mov
rcr
jmp
inc
mov
sub
dec
shr
pop
(bad)
in
push
cmc
cmps
out
mov
inc
test
add
in
add
in
push
adc
cmc
sbb
movs
add
retf
or
data16
mov
cmp
mov
pop
mov
les
jbe
cwde
mov
xchg
inc
adc
(bad)
ficom
adc
xchg
adc
or
mov
sub
out
jns
cli
mov
outs
jp
fcom
aam
call
arpl
push
jg
add
pop
das
loopne
(bad)
and
fistp
xlat
sahf
add
in
add
cmp
sbb
fsubr
jbe
add
dec
cmps
sub
mov
and
jmp
int
cdq
sbb
dec
push
or
movs
pop
out
ins
push
test
inc
inc
dec
into
xchg
dec
pop
cld
sub
icebp
rcl
pop
adc
pop
stc
inc
jp
into
cmp
sub
jo
mov
adc
push
cdq
jnp
xchg
adc
in
(bad)
outs
test
lock
adc
popf
or
repnz
xchg
stos
or
popf
dec
mov
cdq
jge
adc
push
jns
inc
out
daa
jne
fsubr
mov
mov
sub
adc
in
pop
fsubrp
cli
stos
sbb
cmps
pop
xchg
mov
ins
(bad)
lahf
dec
jmp
into
shl
pop
nop
cmp
es
dec
mov
fwait
out
je
sub
sbb
mov
retf
xchg
call
cmp
pusha
dec
cmp
xchg
aad
xchg
jmp
jmp
inc
xchg
shl
adc
adc
mov
sar
add
push
xchg
mov
push
mov
in
out
icebp
call
into
retf
push
(bad)
leave
call
cld
pop
or
dec
jge
sub
inc
aam
mov
add
arpl
shr
jmp
loope
pop
cmps
inc
inc
loopne
not
cmps
sti
les
inc
aaa
fild
stos
shl
inc
mov
and
xchg
xor
jle
cmp
ret
cmp
es
inc
clc
mov
inc
cs
outs
cld
jbe
aas
mov
cli
out
dec
mov
cs
rcr
loopne
cmp
ret
dec
add
xor
inc
mov
pop
outs
cld
sbb
stos
dec
ins
movs
imul
mov
inc
aad
inc
outs
sbb
pop
inc
adc
and
icebp
dec
imul
sbb
or
test
dec
inc
(bad)
fbld
es
or
pop
jbe
hlt
mov
xor
inc
(bad)
jb
jbe
jl
sbb
and
clc
or
push
pop
test
retf
xchg
adc
in
add
ja
mov
jge
mov
sahf
push
int
sbb
ins
aam
cli
pop
cs
rol
(bad)
repnz
pop
pop
mul
(bad)
push
pop
je
mov
jno
sbb
add
iret
rcl
jp
inc
xor
retf
sbb
or
push
stos
push
sti
cwde
int3
add
mov
call
fwait
and
(bad)
lods
jl
das
mov
add
adc
fisttp
fisubr
aaa
(bad)
or
xchg
je
je
hlt
test
adc
push
jecxz
arpl
mov
daa
mov
movs
jmp
lods
or
loope
hlt
pop
sub
arpl
das
and
inc
jnp
mov
pop
mov
push
(bad)
int3
mov
mov
push
dec
aam
ins
inc
sub
mov
call
inc
pop
sahf
pushf
inc
sbb
fsub
js
pop
ficomp
test
jbe
dec
mov
jl
jge
fldcw
sar
call
test
xor
and
fwait
xlat
jmp
sbb
add
and
dec
inc
lahf
repz
scas
lods
cmp
sbb
sub
jmp
hlt
cmp
stos
test
jne
ss
ds
jp
jmp
inc
lds
clc
mov
mov
lds
jb
lea
sbb
lds
stos
push
pop
fldpi
push
repz
movs
cmp
mov
ror
push
xor
test
jo
mov
add
pop
sub
popa
lock
jp
and
cmp
scas
loope
pop
push
mov
jne
out
mov
push
stc
push
sbb
fild
imul
push
push
popf
loope
push
test
sar
pop
jl
mov
rol
arpl
and
sub
sbb
dec
cmp
jb
(bad)
repnz
push
fist
sub
test
cld
pop
inc
or
es
xchg
dec
mov
push
mov
popf
jle
and
pop
ins
stos
dec
rcpps
xor
test
icebp
shl
pop
dec
mov
mov
adc
mov
pop
pop
push
xchg
xor
or
in
hlt
push
add
arpl
je
imul
icebp
fsubr
gs
ss
inc
sbb
push
pop
sbb
dec
pushf
mov
popf
cmps
test
(bad)
push
les
and
pop
mov
push
test
jne
xor
pushf
shl
push
lds
adc
cwde
cmp
mov
scas
pop
in
jmp
push
mov
movs
mov
cs
out
dec
inc
dec
cmc
jnp
sub
adc
push
outs
imul
clc
mov
adc
mov
pusha
popf
jbe
or
arpl
shl
push
adc
mov
in
pushf
(bad)
loopne
sbb
test
outs
cmp
push
inc
je
push
push
(bad)
mov
lods
sbb
imul
arpl
ror
jl
ror
xchg
or
cmp
retf
js
retf
out
inc
(bad)
cmp
mov
mov
fbstp
movs
inc
pop
fdiv
jge
callw
leave
ins
fimul
dec
pop
(bad)
dec
inc
jge
push
dec
lahf
repnz
aad
dec
ja
cdq
rcr
jl
sub
jl
sub
pop
aaa
loope
stos
scas
(bad)
lock
sbb
enter
or
pop
mov
aaa
mov
not
fldcw
lea
push
enter
jno
mov
add
or
jb
inc
pop
mov
in
das
jl
jle
dec
xlat
hlt
push
xchg
sub
adc
push
inc
fs
cmc
inc
jb
xor
pop
jg
dec
cmc
jb
cmc
scas
fsubr
mov
rol
out
mov
not
jno
inc
or
repnz
les
movs
pop
les
das
push
inc
pop
imul
sar
mov
shl
cvtsd2ss
faddp
pop
cmp
sub
mov
add
aas
pop
fiadd
sbb
out
mov
and
sub
mov
out
adc
and
mov
leave
adc
dec
(bad)
call
(bad)
mov
push
shl
pop
and
rcl
test
jmp
jg
jbe
jnp
dec
icebp
push
mov
or
sbb
or
in
xchg
imul
ins
dec
and
mov
inc
test
push
or
pop
and
inc
jae
push
dec
shr
sub
outs
bound
mov
loop
fst
shr
cmp
cmc
push
cs
pop
repnz
hlt
ffree
cmps
mov
fadd
fisttp
sbb
pusha
movs
in
(bad)
jb
adc
xchg
sbb
sahf
(bad)
mov
jle
dec
add
dec
add
mov
(bad)
cmc
add
lds
in
mov
(bad)
xor
out
sub
enter
dec
dec
jne
xchg
les
test
pop
fstp
inc
das
mov
and
dec
mov
xlat
add
mov
jmp
xchg
int3
dec
cmps
sbb
xchg
push
mov
lock
push
push
lods
stos
jl
das
push
hlt
lea
push
push
cs
add
push
mov
cwde
cld
jnp
(bad)
mov
cmp
(bad)
or
xchg
push
and
mov
out
sbb
sbb
cld
sbb
inc
leave
es
ins
out
lea
adc
mov
mov
dec
add
mov
dec
pop
fwait
add
cmp
xor
cmp
(bad)
or
dec
shr
pop
pop
fbld
add
repz
adc
inc
mov
repz
sbb
adc
cmp
sbb
call
hlt
dec
stos
pop
mov
pop
mov
dec
xor
daa
lods
mov
jne
jecxz
jle
shl
cld
push
mov
or
repnz
adc
(bad)
aas
pop
ds
psubd
hlt
mov
cmps
xchg
mov
retf
mov
adc
push
ja
loop
mov
leave
mov
nop
adc
pushf
movs
ret
mov
jge
or
outs
mov
pop
pop
sub
out
adc
sbb
out
int
(bad)
xchg
shr
cmp
dec
cmp
add
iret
(bad)
in
test
imul
nop
mov
(bad)
(bad)
cld
mov
out
lahf
mov
push
call
inc
retf
inc
mov
pop
(bad)
mov
push
push
mov
jns
dec
stc
les
dec
aaa
test
out
in
scas
bound
inc
and
ins
xchg
not
xchg
mov
and
ret
test
retf
xor
fadd
jmp
adc
pushf
mov
retf
dec
jmp
inc
push
xchg
cdq
dec
mov
div
push
cmc
jecxz
adc
or
scas
push
inc
add
stc
cmp
mov
stos
sub
stos
xor
xor
inc
repnz
mov
fiadd
add
add
and
mov
push
or
adc
(bad)
pop
mov
xor
pop
das
xchg
lods
(bad)
aad
sbb
sbb
dec
addr16
push
sti
jg
inc
pop
dec
push
sub
cdq
sbb
and
fwait
xchg
dec
jle
xor
sar
(bad)
cmp
ja
scas
push
inc
sub
ror
ja
pop
nop
fisttp
mov
les
lea
cdq
movs
mov
mov
cmps
test
xchg
jl
sbb
add
mov
push
shl
(bad)
xor
and
adc
add
popa
loope
mov
push
inc
and
pop
ret
or
aam
icebp
mov
adc
hlt
out
and
inc
in
mov
aaa
shl
popf
pop
add
push
lds
push
dec
retf
xor
test
xchg
jg
mov
jno
rol
mov
pop
mov
or
xchg
mov
aaa
jo
bound
push
data16
sar
mov
pop
pop
cs
call
and
sub
pushf
dec
in
jp
je
push
cmp
das
mov
push
mov
jmp
adc
cwde
pop
dec
xchg
xor
out
loopne
pop
mov
outs
sub
out
fstp
(bad)
fmul
jg
ins
gs
xchg
xor
cwde
or
and
mov
push
sbb
cmps
mov
xor
mov
xlat
adc
mov
xor
cdq
cmp
inc
mov
sbb
dec
push
pop
in
jo
cmps
cdq
out
(bad)
push
inc
mov
pop
ret
mov
retf
mov
inc
(bad)
push
jmp
push
into
jb
aaa
mov
xchg
jmp
inc
adc
fs
jns
aam
and
xor
cmp
sub
movs
out
pop
ret
mov
xlat
mov
mov
test
in
xchg
movs
add
pop
retf
mov
dec
mov
pop
inc
mov
and
js
les
sbb
lock
fiadd
enter
mov
out
push
push
ss
popf
xor
lahf
mov
push
mov
cwde
cmp
push
sbb
dec
pop
jmp
movs
out
int
sub
pop
cmp
push
push
dec
mov
sub
and
xor
xchg
or
lock
sbb
adc
stos
mov
push
mov
ds
icebp
dec
ret
mov
xor
mov
mov
out
fnstenv
xchg
jns
mov
ret
repnz
push
sub
repnz
and
ds
xor
mov
in
pop
(bad)
jns
aas
pop
and
test
add
add
mov
in
cli
ror
(bad)
mov
mov
sbb
pop
cmp
jecxz
aaa
es
mov
in
adc
fmul
stos
cmp
push
sbb
push
outs
test
lds
inc
cld
adc
inc
add
enter
arpl
xchg
inc
cmp
dec
test
cwde
mov
jmp
clc
dec
jb
push
jae
pop
(bad)
(bad)
in
aam
mul
lea
mov
retf
mov
mov
or
inc
xor
mov
mov
pop
jmp
jg
mov
and
sub
xchg
adc
aas
pushf
dec
or
mov
clc
xor
adc
int3
(bad)
sub
dec
inc
mov
adc
sub
cmp
pop
dec
aad
jb
xchg
xor
jge
aam
jno
xchg
cmps
push
mov
sub
enter
hlt
cld
pop
or
mov
retf
mov
xchg
stc
cwde
xchg
imul
cmp
sub
cmps
and
rol
xchg
popa
(bad)
aad
inc
repz
enter
xor
and
mov
or
scas
xor
loop
in
in
mov
ror
inc
jns
ja
ins
mov
movs
push
push
les
dec
push
pop
call
les
fucomip
dec
jl
cli
cmps
sar
push
add
inc
dec
aas
scas
iret
mov
dec
push
pop
sub
jbe
mov
push
stos
add
or
jecxz
nop
gs
add
push
movs
mov
aad
add
xlat
jp
loopne
das
cvtpi2ps
scas
loopne
jmp
or
not
les
jecxz
scas
sub
push
add
jae
sbb
popf
movs
cmps
fcmovnu
mov
cmp
xor
pop
mov
cli
outs
stc
frstor
in
nop
or
in
(bad)
sub
mov
mov
(bad)
out
movs
or
mov
mov
or
sbb
movs
mov
mov
bound
test
sub
fldenv
xchg
scas
cmp
pop
ret
aad
push
xchg
inc
pop
mov
inc
stos
cwde
or
outs
lahf
inc
push
les
mov
or
pushf
add
in
outs
xchg
sbb
push
lea
dec
inc
(bad)
cmp
aam
mov
or
lahf
fsubp
out
imul
cmp
mov
daa
xor
sbb
push
jnp
in
ss
jb
pop
push
mov
xchg
cmp
out
mov
in
std
test
loop
das
mov
pop
dec
push
sub
retf
call
adc
test
loop
cmp
cmp
std
fsubr
and
push
push
pop
int
mov
xchg
(bad)
fst
(bad)
cli
cmp
xchg
sub
mov
inc
adc
cwde
gs
fcmovnbe
(bad)
xchg
ficomp
fisttp
pop
mov
lahf
jecxz
jns
push
ins
pushf
test
dec
pop
(bad)
imul
hlt
xor
mov
and
cmp
sahf
inc
push
fistp
or
jge
mov
aad
dec
(bad)
cld
in
push
mov
ins
sub
and
mov
mov
push
cld
cmp
(bad)
not
repnz
(bad)
movs
dec
dec
mov
pop
aaa
lods
aaa
sub
cmps
cwde
xor
in
jae
jo
sub
jbe
add
push
sbb
out
inc
cdq
mov
and
xor
push
cmp
pop
jbe
call
jmp
mov
mov
or
neg
aaa
sub
or
inc
and
pop
jmp
jbe
std
mov
out
dec
cmp
add
sbb
jns
sahf
mov
test
(bad)
adc
mov
lea
test
stc
mov
xchg
addr16
push
jbe
in
sub
dec
sub
push
or
movs
xor
push
push
and
aam
xchg
fwait
sub
mov
xchg
outs
in
xchg
push
sub
out
movs
push
inc
jbe
js
adc
cdq
mov
inc
(bad)
fwait
into
sub
or
push
inc
mov
ret
xor
push
movs
jp
imul
cmp
sub
fiadd
call
cli
ds
ins
mov
sbb
fcomip
in
add
pusha
loope
lods
int3
ins
out
sub
adc
pop
push
stc
loop
jp
xor
nop
les
stos
inc
push
sub
aad
xor
mov
xchg
(bad)
(bad)
into
push
popa
jo
sbb
pop
lea
pop
popa
shl
push
xor
or
daa
mov
lock
sbb
jmp
out
aas
jb
inc
shl
std
pop
fmulp
sahf
ins
call
sbb
dec
xor
push
push
push
xchg
pop
xor
jae
mov
jge
pop
cmp
daa
add
test
retf
and
cmps
mov
xchg
sub
sub
push
shr
shr
mov
pop
stos
sbb
xor
(bad)
or
mov
fistp
pop
nop
and
lahf
mov
fistp
aaa
and
mov
mov
ss
int
aad
test
nop
pop
out
sbb
rcr
push
push
or
add
loopne
mov
sti
aaa
adc
or
or
inc
bound
jge
mov
cmp
pop
or
adc
sahf
imul
push
sub
cmp
cmps
add
sub
dec
pop
stos
leave
xchg
xchg
pop
or
movs
ins
scas
fnstcw
icebp
addr16
and
inc
int3
or
outs
xchg
lahf
pop
enter
iret
les
jne
jmp
and
sub
xchg
vmaxpd
retf
stos
and
xchg
ds
rol
jno
fs
retf
sub
popf
add
call
jb
pop
in
push
cmp
and
nop
or
add
lods
cwde
jno
ss
frstor
xchg
(bad)
mov
je
pop
pop
push
add
std
sub
dec
mov
call
mov
fwait
mov
or
adc
aas
inc
popa
aaa
loope
push
add
shl
sub
pop
retf
ror
xor
dec
push
test
mov
nop
sub
jno
cmp
movs
mov
mov
sub
aad
or
pop
add
fldenv
push
inc
xchg
in
inc
nop
(bad)
(bad)
(bad)
mov
mov
sbb
jb
xchg
mov
test
jp
pop
adc
push
mov
and
clc
sbb
out
test
fldenv
inc
js
retf
into
add
push
dec
(bad)
cwde
ror
push
loopne
test
sahf
jmp
push
cmp
loope
not
test
mov
sub
jmp
call
loope
adc
pop
pop
push
ds
push
icebp
push
pop
cmp
pop
mov
xchg
call
pop
pop
in
loope
jmp
cmps
(bad)
jmp
cdq
push
inc
stos
jge
movs
xor
cmps
int
call
pop
ja
shr
data16
ins
push
mov
or
leave
scas
push
adc
cmp
retf
cdq
jl
outs
popf
ret
dec
out
mov
nop
nop
jmp
sub
add
icebp
dec
xlat
loope
jp
jg
xor
into
and
or
push
mov
xor
adc
mov
sbb
pop
shr
(bad)
nop
mov
mov
pop
out
pop
xor
inc
repz
push
push
clc
mul
mov
lock
inc
sub
test
test
fimul
lds
jl
retf
xor
inc
test
xor
hlt
mov
push
inc
jmp
pop
ds
or
lods
add
out
jge
add
das
mov
push
sti
test
shl
adc
in
jmp
loopne
retf
scas
out
pop
pop
call
jecxz
xchg
scas
mov
cmp
and
push
mov
(bad)
mov
dec
popf
mov
sub
inc
fwait
cli
out
adc
(bad)
in
pop
push
aas
lods
sbb
aam
jmp
sar
lds
sbb
hlt
xor
and
mov
nop
jo
cwde
mov
and
add
gs
cmp
mov
and
data16
scas
push
(bad)
add
outs
sysenter
xchg
pop
ss
cdq
mov
hlt
jg
xor
mov
xchg
and
mov
clc
mov
push
(bad)
sub
sub
inc
je
aad
lock
mov
clc
dec
dec
sbb
adc
mov
stc
aaa
pusha
iret
icebp
dec
retf
icebp
rol
add
pop
aad
mov
stos
clc
int
fwait
and
mov
stos
push
xchg
dec
inc
loope
push
push
int3
xchg
sbb
es
push
lock
scas
lods
call
js
mov
cmp
mov
repnz
call
fldcw
pushf
add
retf
sub
lea
sahf
scas
push
add
(bad)
inc
mov
into
sbb
or
int3
fisttp
stc
sub
xlat
into
fist
in
push
xchg
scas
cmp
inc
sbb
push
push
stc
jnp
shr
dec
dec
sbb
mov
mov
lds
(bad)
adc
(bad)
dec
adc
scas
push
iret
push
movs
je
xor
xor
call
pop
xor
fwait
dec
mov
out
stos
leave
push
mov
test
dec
sub
or
xor
sahf
adc
inc
lods
adc
xchg
mov
outs
pushf
push
ret
jmp
bnd
test
cwde
jg
pop
pushw
jb
and
inc
repnz
aad
pop
mul
outs
test
pop
fwait
adc
pusha
shl
lods
loop
pop
gs
(bad)
push
mov
les
pop
int
sbb
push
xchg
xchg
rcl
mov
sbb
fsubp
mov
outs
hlt
push
cmp
addr16
jb
pusha
push
js
icebp
or
fs
push
shl
xchg
adc
cmp
inc
fiadd
fimul
loopne
lea
retf
sbb
rcl
pop
loope
scas
ds
jb
mov
ja
or
mov
add
mov
pop
(bad)
fisub
push
jecxz
(bad)
adc
fstp
call
push
jg
jecxz
pushf
je
jp
sub
popf
and
fstp
int
push
jb
push
xchg
clc
scas
add
sbb
stc
cdq
cs
mov
jg
ins
push
gs
hlt
popf
adc
mov
call
sahf
and
and
mov
popa
jge
xchg
cld
add
mov
mov
add
xchg
cmp
push
xchg
pop
inc
test
test
lock
xacquire
lea
inc
sub
jns
dec
movs
push
push
mov
adc
les
sti
adc
stos
std
retf
xor
add
out
cdq
mov
out
mov
push
scas
iret
or
iret
inc
jno
xchg
aaa
cld
(bad)
mov
sar
test
and
pop
xor
inc
jbe
cmp
jnp
andnps
cmp
mov
and
data16
inc
test
cwde
jge
int3
cdq
sti
shr
mov
pop
pop
movs
xor
(bad)
nop
imul
mov
and
mov
xor
cdq
pop
pop
add
pushf
xor
in
fld
add
rol
cdq
mov
push
fbstp
mov
mov
int3
sti
frstor
add
js
pop
cwde
add
pop
(bad)
ret
call
retf
repz
mov
cmps
jbe
rcl
dec
ror
loop
pop
jnp
pop
pop
nop
xchg
or
rcr
into
xchg
in
pushf
jno
(bad)
sbb
sub
mov
ins
in
mov
movs
push
int3
outs
or
xor
mov
outs
addr16
ins
cmps
push
push
add
stos
shr
lahf
lods
cld
or
xchg
xor
mov
add
mul
jp
push
xchg
aas
outs
push
pcmpgtb
daa
adc
xchg
and
mov
iret
aam
vminps
shr
(bad)
in
out
in
loope
fwait
push
or
jecxz
push
stc
pop
xchg
push
mov
mov
or
cmc
out
xor
add
ins
mov
sti
adc
(bad)
cmp
popa
call
fwait
and
into
cmp
retf
dec
fs
int
es
cdq
gs
mov
jmp
and
js
push
xchg
leave
outs
pop
aas
das
pop
sbb
xchg
pusha
mov
adc
sub
icebp
cmp
cmc
cmp
daa
ret
cdq
adc
repz
mov
xchg
sbb
jno
mov
xchg
sbb
jge
pop
cmp
nop
pop
pop
cmp
loop
pop
jge
dec
sub
(bad)
dec
mov
sub
imul
mov
jp
inc
mov
idiv
out
mov
sub
add
sbb
(bad)
sub
sar
loop
or
push
test
bound
pop
stos
mov
mov
call
ret
sbb
xchg
xor
dec
xchg
push
iret
test
ficom
call
xchg
repnz
add
adc
jecxz
and
add
sub
dec
adc
jne
int
inc
sub
in
imul
xchg
mov
les
mov
xor
outs
pop
cmc
idiv
jmp
dec
pop
imul
jne
dec
std
push
(bad)
rcr
movs
xchg
stos
(bad)
cmps
or
movs
ins
jno
inc
in
dec
and
in
mov
xor
sar
mov
fst
push
xchg
in
test
call
or
xlat
jmp
mov
enter
(bad)
sar
pop
mov
mov
adc
daa
sub
scas
push
test
push
xchg
and
mov
mov
mov
stc
mov
stos
lea
outs
test
lahf
mov
xchg
pusha
mov
jnp
test
and
add
cwde
xchg
add
dec
test
popf
or
inc
dec
fidiv
cmc
ins
pop
(bad)
xchg
dec
dec
lea
or
loope
mov
call
mov
pop
sbb
lahf
add
jns
adc
int3
mov
jb
jge
pop
sub
es
mov
into
stos
mov
(bad)
push
pop
adc
mov
jg
or
add
add
and
hlt
sbb
in
sbb
sub
mov
lds
cmp
xor
imul
dec
rol
and
adc
ret
cmps
les
pop
call
push
mov
sub
inc
pusha
jmp
sar
mov
aas
adc
fcom
js
cmp
icebp
(bad)
iret
xor
mov
inc
repz
(bad)
push
sahf
push
sub
push
retf
inc
imul
cmp
pop
xchg
add
movd
pop
test
aam
jle
ja
push
lock
inc
movs
rcr
sahf
push
clc
sti
(bad)
adc
push
add
inc
cmp
pop
jp
and
push
or
aaa
push
fs
and
jmp
mov
push
push
xchg
idiv
stos
pop
jbe
movs
ja
mov
stos
mov
fsubr
sti
cmps
loopne
and
retf
pop
or
jnp
in
nop
pop
cwde
clc
sub
push
add
cmp
lea
push
(bad)
cmps
adc
push
loop
gs
jbe
mov
xor
lods
mov
xor
cmp
add
jle
pushf
verw
jl
in
jb
dec
jbe
push
jmp
fs
dec
arpl
push
fnstcw
mov
add
test
push
inc
xchg
xor
xor
aad
mov
scas
jl
xor
test
in
push
xchg
(bad)
fstp
lods
dec
test
retf
mov
sbb
fsubrp
xor
and
cmps
sahf
cmp
mov
dec
aaa
pop
call
push
loope
mov
into
and
cmp
loopne
mov
(bad)
test
dec
adc
fwait
ret
mov
movs
pop
cmp
les
popf
mov
retf
mov
gs
mov
inc
jge
test
add
adc
loope
adc
imul
es
popa
add
cwde
pushf
ret
xchg
mov
imul
outs
test
pop
loope
loopne
fwait
call
push
loope
push
mov
xor
inc
fs
xchg
jmp
aas
dec
cs
sar
adc
mov
dec
(bad)
es
(bad)
mov
pop
xor
cdq
lods
lods
in
je
fprem
movs
mov
repz
inc
adc
inc
sbb
xchg
sbb
(bad)
cld
xor
mov
imul
es
nop
ins
add
pop
dec
inc
jmp
fist
mov
nop
push
loopne
dec
popa
(bad)
das
jns
je
inc
inc
movs
sbb
enter
daa
xor
pop
cmp
ret
jb
inc
scas
rcl
mov
jecxz
mov
sub
adc
out
test
inc
arpl
loop
and
call
dec
sub
adc
sbb
inc
out
pop
sbb
(bad)
lods
push
xor
std
xor
(bad)
repz
iret
mov
push
dec
cli
pop
nop
xchg
jo
and
dec
ins
scas
mov
adc
pop
daa
(bad)
xor
push
sbb
mov
clc
test
or
icebp
loopne
(bad)
cld
in
scas
in
inc
(bad)
jge
push
retf
inc
jo
inc
es
rep
push
ins
(bad)
adc
mov
repz
xor
outs
aas
jnp
and
pop
pop
lock
(bad)
jl
mov
ret
jmp
jl
dec
cld
dec
jmp
(bad)
sti
iret
mov
add
les
call
popa
imul
les
test
cmps
dec
imul
shl
fld
add
pop
sbb
sub
mov
scas
fidivr
pop
pop
push
sub
add
or
mov
xchg
les
daa
mov
cmp
add
pusha
pop
push
jmp
push
mov
ins
mov
fwait
xor
pop
or
faddp
cmps
aas
dec
repnz
and
sbb
xor
js
pop
adc
lods
enter
cmp
mov
inc
pushf
loopne
jns
cmp
fdivr
pusha
inc
jge
mov
mov
and
and
dec
std
xchg
out
or
mov
addr16
cld
in
pop
push
(bad)
adc
clc
mov
xchg
in
cmp
mov
jns
aaa
dec
pop
pusha
in
ins
adc
dec
pop
xchg
outs
mov
push
xchg
ins
dec
and
mov
push
icebp
imul
xchg
jns
push
lods
and
in
fiadd
je
jg
sti
call
sti
lahf
sub
push
cmp
loope
mov
in
in
stos
iret
dec
push
enter
xchg
dec
mov
pop
mov
sti
call
in
mov
inc
push
and
dec
call
pop
pop
aad
and
xor
jne
or
jne
push
(bad)
mov
stos
leave
pop
cmps
clc
in
jae
fwait
xor
mov
adc
ds
test
xor
in
and
fdivr
retf
mov
ds
mov
push
loop
cdq
jp
dec
stos
ret
loopne
lods
js
jae
ficom
inc
dec
fsubr
push
popa
(bad)
call
fsubr
in
pop
cmp
int
inc
mov
xchg
rol
dec
jmp
dec
out
adc
in
arpl
sub
adc
push
inc
fwait
imul
xlat
push
or
cld
loopne
sub
pop
imul
les
cwde
dec
mov
dec
add
addr16
xor
mov
gs
test
rol
outs
scas
repnz
fidivr
push
fld
or
xchg
xchg
xchg
arpl
cwde
lock
sub
or
mov
or
push
mov
ret
test
push
xor
sar
xchg
jne
lock
push
jmp
xchg
jno
leave
outs
cmp
mov
iret
jne
lea
or
sbb
xchg
and
push
adc
jle
movs
out
xor
pop
das
sbb
mov
sbb
pop
push
sbb
push
pop
mov
sti
packsswb
hlt
neg
popf
mov
and
and
inc
xchg
addr16
in
int
mov
lock
cmps
pop
mov
push
(bad)
xor
cmp
in
inc
gs
mov
jo
and
or
jb
ins
xor
fdiv
ror
pusha
fild
sub
xchg
cmp
ror
lods
inc
adc
outs
fnsave
dec
jno
xor
mov
movs
(bad)
pop
inc
out
xor
jnp
lds
sahf
fcos
rcr
mov
or
int3
mov
dec
aad
test
(bad)
dec
idiv
sahf
out
add
test
popa
dec
jnp
ja
les
jo
sbb
xchg
cmp
xchg
dec
or
jns
fcomip
cmps
push
(bad)
pop
inc
mov
int3
xchg
mov
mov
(bad)
(bad)
neg
push
ds
je
dec
or
mov
jb
jle
jns
ror
inc
retf
push
cmp
adc
push
std
jmp
gs
cmp
retf
ds
add
repnz
retf
jge
jge
jge
cmp
xchg
icebp
aaa
xchg
xchg
outs
mov
popa
movs
les
(bad)
mov
(bad)
pusha
mov
sbb
jmp
fist
jecxz
add
lods
jmp
xlat
cdq
(bad)
and
xor
call
and
bound
aad
(bad)
ins
adc
das
std
inc
nop
xor
fisttp
mov
mov
dec
in
(bad)
out
icebp
ins
xlat
pop
sub
out
sub
test
pop
mov
mov
push
fs
mov
ror
clc
addr16
lods
mov
push
(bad)
in
adc
leave
sbb
mov
fadd
adc
fnstenv
mov
lock
std
and
test
xor
jbe
inc
mov
mov
mov
mov
out
inc
adc
sbb
shl
aas
mov
adc
dec
scas
mov
mov
imul
mov
add
fiadd
add
inc
fst
not
mov
pop
adc
jmp
or
sti
fs
pop
inc
fld
cmps
xor
arpl
retf
inc
stc
mov
xchg
ss
mov
mov
add
scas
pop
mov
mov
jae
das
movs
adc
mov
mov
or
inc
sub
sub
fimul
lea
add
stos
xor
xchg
pop
add
add
push
rep
mov
push
pop
mov
sahf
fcmovu
jb
xchg
cmps
std
dec
jg
jae
xor
fcom
mov
test
xor
shr
mov
pop
into
mov
mov
xchg
jb
cmp
sbb
loop
je
lods
lds
fild
repz
cmps
ins
aaa
retf
push
test
mov
mov
aaa
xor
imul
dec
imul
test
pushf
ins
arpl
dec
(bad)
jmp
jmp
add
mov
inc
cmps
cmps
and
dec
add
pushf
inc
int3
push
push
aad
mov
mov
sbb
push
mov
iret
adc
mov
out
mov
or
xchg
inc
imul
fbld
dec
out
pop
inc
(bad)
sahf
mov
(bad)
rcl
aam
and
jl
add
sub
std
add
or
sub
(bad)
mov
outs
out
xchg
or
pop
rol
out
nop
out
cmps
fstp
cmc
fisttp
mov
and
mov
popf
jae
shl
sub
dec
mov
pop
ret
xchg
push
cld
fwait
(bad)
jp
mov
xchg
pop
mov
pop
ss
jge
pcmpeqw
and
xchg
lock
jecxz
adc
mov
jb
ret
(bad)
dec
inc
jl
fst
push
lahf
cdq
stos
inc
mov
bound
mov
add
repz
das
cs
fs
jmp
fisttp
call
ret
or
fwait
xchg
sahf
rcr
xor
xor
sbb
add
leave
mov
or
scas
dec
test
inc
and
push
scas
idiv
jo
push
fdiv
cmps
add
mov
(bad)
pop
jmp
fld
push
lea
jl
jb
fs
xchg
sub
mov
call
xor
imul
jg
inc
pop
ffreep
ret
cmp
shrd
jnp
mov
outs
jns
cmps
lea
and
push
int
popf
(bad)
std
jne
mov
shl
cmp
sub
mov
outs
cdq
dec
cli
mov
clc
pop
daa
test
jge
test
fidiv
and
or
add
xor
adc
jecxz
pop
inc
fisttp
shl
xchg
loop
cmc
shl
jecxz
or
das
cmp
sar
cld
add
imul
jno
jne
dec
push
js
scas
mov
inc
cmp
mov
pop
in
or
clc
mov
inc
cmp
aaa
rcl
cmp
test
jb
mov
cmps
je
dec
in
pop
nop
xlat
fcomp
xor
cmps
(bad)
push
or
loop
stos
inc
das
in
clc
fcmovnbe
add
popa
ins
ds
jmp
mov
lock
pushf
es
dec
mov
dec
sbb
mov
xchg
push
outs
mul
in
mov
lahf
add
int3
xor
pop
sar
sbb
fadd
fcom
sar
sub
imul
repz
cwde
dec
imul
aas
stos
scas
jl
mov
mov
jg
xor
mov
pop
sbb
mov
cmp
mov
mov
inc
retf
std
fcomi
aad
fist
cmps
mov
ds
xlat
ret
jmp
jecxz
call
movs
sub
pop
mov
retf
mov
sub
outs
sub
stc
ss
inc
xor
lods
push
xchg
sbb
mov
ins
sbb
mov
shr
sbb
sub
mov
cmps
cwde
jle
in
pushf
dec
push
out
in
mov
or
jmp
ins
rcl
sub
jno
out
imul
aad
popfw
repnz
lea
pop
nop
sbb
fcmovne
push
movs
mov
pop
data16
sbb
add
pop
cmp
add
sub
fistp
mov
idiv
retf
into
and
sub
shr
aad
dec
jae
(bad)
cmps
lea
xor
jmp
into
icebp
cmp
arpl
jg
(bad)
jno
scas
add
cmp
adc
mov
dec
lahf
test
sub
cmps
out
mov
xchg
sbb
rol
rcr
outs
shr
xor
sar
(bad)
fcmove
or
and
xor
pop
sub
jg
inc
push
mov
fnstcw
call
mov
mov
(bad)
imul
or
inc
lods
add
push
mov
out
xor
dec
xchg
jne
cmp
lds
pop
mov
icebp
imul
push
inc
popf
add
push
xor
dec
gs
ss
mov
jecxz
jge
pop
push
mov
(bad)
push
dec
loopne
imul
cdq
jg
inc
add
ss
leave
adc
shl
adc
push
dec
inc
adc
movs
out
push
dec
xchg
mov
add
ins
sbb
ja
xor
mov
addr16
repz
mov
mov
pop
pushf
xchg
dec
cmc
xor
(bad)
scas
cmp
pop
popf
ins
dec
rcr
and
xor
jge
xchg
xor
stc
stos
je
or
mul
mov
or
cdq
clc
in
xchg
push
xor
pop
repnz
fyl2x
lds
dec
rcr
xor
stos
pop
sbb
lahf
pop
js
push
mov
push
sub
add
or
ret
pop
or
lahf
mov
xchg
jbe
int
les
cmp
jmp
div
push
sbb
xchg
xor
call
ja
pop
loope
sti
shl
imul
or
jb
mov
jecxz
sub
jb
iret
dec
xchg
mov
mov
jne
into
mov
fdivr
xchg
mov
push
push
mov
dec
out
xor
add
ret
cmp
clc
pushf
retf
(bad)
xor
aaa
lahf
pusha
add
jnp
jmp
into
adc
mov
stc
rcl
cmp
lods
dec
push
jbe
adc
cld
add
std
cmp
movs
lds
scas
movs
repz
jecxz
test
ret
add
or
in
mov
ret
pusha
push
mov
add
xchg
or
std
mov
mov
pop
jae
call
push
xchg
or
pusha
adc
mov
sub
test
out
jbe
push
sar
mov
test
popa
push
cmps
or
mov
(bad)
xchg
jbe
repz
es
xor
pop
xchg
sahf
retf
lods
ds
jg
xor
xchg
pop
jg
aam
daa
ins
add
call
rcl
fs
jmp
and
dec
xchg
xchg
push
aas
aaa
push
or
dec
xchg
dec
(bad)
xor
(bad)
movs
shl
mov
adc
inc
jmp
loope
loope
cmp
movs
leave
sbb
adc
jb
popa
call
inc
jno
pmulhw
adc
pop
push
inc
lods
cmp
push
sub
inc
mov
or
sub
in
cmp
fsub
scas
imul
sbb
pop
and
aaa
pop
lods
jno
scas
sbb
inc
(bad)
call
mov
icebp
sar
cmp
iret
cld
inc
mov
and
pop
sub
mov
cmps
in
push
neg
stos
leave
sub
xor
mov
icebp
or
cmp
ret
push
jo
shl
adc
dec
mov
lea
jae
loope
jmp
jge
in
push
adc
arpl
sbb
jle
push
sbb
jg
xchg
and
jno
call
ds
dec
xor
(bad)
adc
push
add
test
xchg
inc
(bad)
xchg
jp
lds
dec
ss
pop
push
inc
mov
mov
sti
sub
cmps
(bad)
sbb
pop
push
mov
adc
xchg
or
imul
(bad)
bswap
(bad)
rcr
cwde
push
mov
mov
xlat
cmp
fstp
jmp
push
movs
enter
push
repnz
inc
fadd
mov
fld
pushf
dec
dec
std
out
mov
pop
nop
inc
sub
ret
fisub
pop
inc
mov
xchg
xor
jne
shl
gs
pop
jns
shr
sbb
mov
mov
pop
or
cmps
mov
ret
mov
in
lahf
aad
ret
stos
adc
sbb
cmp
enter
or
in
adc
adc
fistp
(bad)
adc
sbb
outs
push
aaa
push
pop
add
pop
dec
nop
mov
xor
fcom
cmp
in
inc
loope
dec
fwait
(bad)
jae
leave
push
shl
mov
mov
pop
inc
jg
frstor
mov
call
nop
xor
sbb
fwait
mov
push
lock
jo
mov
xchg
sahf
pop
push
dec
pop
ds
mov
mov
retf
test
and
and
cdq
mov
cmp
xchg
cmp
push
mov
movs
(bad)
pop
call
pop
bound
fstp
stos
fucomip
stc
in
dec
repz
pop
mov
mov
push
imul
add
jns
lahf
mov
mov
mov
shr
mov
sbb
shr
cld
loope
inc
idiv
push
neg
add
mov
add
adc
outs
xor
mov
ficomp
pop
dec
xchg
hlt
retf
mov
xchg
mov
mov
test
jae
add
sbb
popf
fidivr
add
lods
mov
es
je
loope
mov
ja
xor
xchg
loope
dec
dec
lds
in
dec
xchg
int3
xchg
cdq
xchg
jecxz
add
les
loope
cs
add
xchg
inc
inc
inc
mov
jno
mov
pop
daa
fs
aam
mov
(bad)
shl
and
enter
jne
lods
outs
adc
sbb
and
aas
cmp
dec
pcmpgtw
fucomi
sbb
int3
sbb
xchg
ds
xor
and
dec
call
fisub
rcr
push
rcl
icebp
shr
(bad)
jle
xchg
aaa
jae
cwde
or
in
mov
add
sbb
jae
jecxz
push
sub
mov
push
mov
adc
mov
mov
fidiv
ror
movs
xor
je
jmp
push
mov
in
repnz
cwde
mov
inc
scas
sbb
add
inc
lock
retf
test
scas
inc
mov
sbb
imul
fwait
mov
jp
pop
ror
loopne
div
fbstp
mov
xchg
push
dec
ja
sti
repz
call
bound
adc
hlt
pushf
lea
add
inc
mov
adc
sbb
(bad)
jb
pop
add
add
test
jo
cwde
or
ss
and
mov
test
cmp
movs
mov
pop
fs
(bad)
cmp
pop
mov
pop
pop
xchg
adc
cmps
dec
bextr
sub
pop
cdq
rcr
adc
xor
in
and
outs
pop
nop
call
inc
pop
stos
or
outs
into
test
or
xor
cmp
inc
rcr
daa
mov
jb
loope
je
fs
cmps
push
jmp
pop
mov
jle
lock
cmp
fs
aas
lea
ficomp
xchg
mov
call
test
and
fnsave
fnstsw
mov
out
js
test
adc
and
pop
sbb
shr
repnz
mov
lea
(bad)
in
mov
cmp
mov
es
xor
jne
jne
mov
mov
aas
stc
jbe
in
bound
mov
inc
or
xchg
xlat
sub
loopne
ds
xchg
dec
fild
mov
xor
push
or
adc
and
jns
(bad)
std
xor
mov
dec
ror
in
retf
fs
ss
dec
dec
stos
popf
aam
push
popa
cmp
push
or
xor
sub
jno
inc
jnp
call
arpl
mov
mov
mov
or
(bad)
sbb
sbb
les
cdq
repnz
(bad)
jge
into
adc
outs
cmp
mov
imul
loopne
cmp
sahf
cli
mov
shr
cmp
adc
add
loopne
xchg
sub
sub
dec
test
fcmovne
repnz
cld
push
(bad)
sbb
shr
xchg
xor
cmps
push
adc
scas
dec
push
and
clc
mov
dec
pop
xchg
mov
xchg
jmp
mov
push
dec
xchg
iret
pop
xor
addr16
test
xor
jg
retf
dec
iret
and
aad
dec
pushf
sahf
jle
dec
(bad)
les
xor
ins
mov
fmulp
jbe
retf
xor
cmp
jp
cdq
mov
add
xchg
mov
or
add
aas
out
enter
and
adc
cmp
push
dec
cmp
in
mov
ja
pop
and
xor
fldcw
mov
test
xchg
int
inc
fcomp
mov
mov
ds
stos
in
lahf
sbb
xchg
fnstsw
aad
add
xchg
dec
push
cmp
clc
das
nop
pop
mov
jmp
fild
or
nop
aam
cmp
dec
lock
fimul
dec
(bad)
lea
dec
xor
sbb
mov
push
ins
aas
mov
shr
iret
mov
outs
ins
jge
push
imul
push
push
and
and
add
popa
inc
outs
sub
int3
rcr
pop
adc
movs
out
jmp
cmp
ss
sbb
push
jno
pop
jmp
xor
in
aad
inc
push
push
cdq
ja
push
push
pop
cld
outs
sbb
(bad)
cmp
adc
lahf
inc
test
add
ja
bound
call
cwde
pop
mov
popa
push
shl
inc
jnp
test
mov
mov
mov
push
fcomp
int3
rcl
push
(bad)
fnstsw
jp
call
mov
shr
lods
ins
mov
jnp
mov
fnstenv
and
imul
(bad)
cmp
aam
and
test
jmp
mov
sbb
mov
push
mov
in
lea
loop
inc
pop
sbb
xchg
into
adc
adc
outs
fsub
out
or
cwde
inc
xchg
mov
ins
cmp
call
pop
aam
and
idiv
je
mov
mov
mov
push
mov
in
ret
clc
mov
rcr
rcr
jle
aas
or
gs
pop
mov
popf
outs
or
pop
movs
sub
mov
mov
inc
xor
lds
push
das
outs
jp
outs
xlat
retf
rol
lea
jecxz
cmp
aaa
ror
rcr
pop
xchg
push
push
fcomp
adc
es
popf
push
jnp
jge
scas
add
cmp
and
repnz
push
inc
inc
outs
mov
leave
fs
or
test
jno
sbb
inc
push
imul
std
cmp
push
retf
push
inc
mov
push
pop
push
adc
or
adc
pop
adc
jge
call
cmp
ja
sbb
jg
sbb
sub
and
xor
xchg
push
sahf
into
lods
mov
mov
push
push
push
das
in
xchg
(bad)
inc
adc
sub
lahf
inc
ja
fistp
sbb
ret
in
adc
sbb
inc
cmp
fcom
xchg
call
pop
pop
cdq
in
or
(bad)
cmc
enter
or
mov
or
enter
add
je
out
jmp
pop
aam
adc
test
mov
or
pop
popf
and
sub
ficomp
fsub
ds
lea
aam
mov
adc
sub
ret
pop
xor
inc
in
in
xchg
add
and
xrelease
inc
and
in
mov
jnp
push
out
xor
(bad)
mov
in
movs
imul
rol
add
pop
popa
cld
rcl
(bad)
push
jb
or
ins
mov
inc
mov
pushf
movups
inc
(bad)
int3
jo
and
bound
neg
mov
dec
fld
and
jne
dec
add
push
leave
sub
sti
sub
fmul
movs
out
jnp
movs
xchg
fsubr
sub
or
jmp
mov
mov
in
ds
push
jno
in
dec
mov
push
jmp
jge
add
push
mov
daa
dec
jb
and
or
mov
or
sbb
clc
fwait
stos
add
out
fucomi
retf
ss
cli
ret
push
push
inc
add
cmp
push
sbb
not
cdq
and
ret
in
and
or
sbb
jae
les
(bad)
rcr
mov
int
push
mov
add
out
ficom
sbb
es
dec
or
cli
in
dec
xor
fs
xchg
adc
adc
data16
loope
pop
fsub
adc
cmc
dec
fwait
repnz
movs
ret
mov
mov
popf
sar
shl
xor
bound
pop
ror
lock
lds
adc
adc
sbb
mov
pop
lods
jmp
adc
jno
mov
fcomi
pop
and
leave
fmul
fisttp
mov
out
daa
mov
das
or
mov
fstp
js
push
xor
fild
dec
retf
in
hlt
xchg
xor
add
jae
xchg
mov
in
mov
sbb
inc
jp
outs
ficomp
or
jg
mov
es
lock
cld
xor
retf
std
mov
pop
jp
xchg
jl
not
mov
data16
addr16
push
test
jne
jecxz
hlt
adc
adc
add
lods
push
popa
mov
mov
in
push
cmp
(bad)
aaa
fld
mov
add
sahf
xor
adc
out
mov
movs
clc
mov
nop
push
fwait
repnz
mov
add
movs
scas
ret
or
mov
inc
mov
fwait
sbb
es
enter
cmp
int
pop
sub
xchg
(bad)
mov
dec
add
push
mov
xor
sar
xchg
pop
mov
ret
sbb
fimul
test
lahf
pusha
add
and
cvttps2pi
das
test
mov
aaa
dec
pop
retf
jbe
std
mov
retf
mov
jecxz
push
call
lea
dec
sbb
mov
jb
add
mov
ss
cs
dec
enter
pop
and
dec
sub
(bad)
enter
sbb
jo
cmp
mov
or
mov
jecxz
adc
scas
inc
or
pop
or
rol
lea
fiadd
iret
dec
pusha
cmp
in
adc
sbb
adc
in
mov
and
daa
jge
xchg
and
add
loopne
cmc
cmps
dec
and
mov
cmp
inc
fsubr
out
mov
sbb
cmc
fidiv
adc
(bad)
fisttp
xchg
push
pop
mov
mov
aam
cdq
cld
ss
xchg
call
cwde
sbb
or
and
dec
mov
xor
sbb
mov
fs
ds
jmp
xchg
add
add
mov
out
mov
cwde
pusha
repnz
std
std
mov
inc
pop
xchg
mov
daa
xchg
ror
fimul
mov
and
or
dec
test
xchg
xchg
sub
dec
xchg
push
dec
popf
xchg
push
lods
mov
(bad)
pop
adc
cmp
inc
cld
add
sti
stos
inc
fdiv
or
cmp
outs
int3
lods
sbb
push
cmp
sub
test
rcl
cmp
(bad)
xchg
adc
sbb
push
rcr
pop
dec
sar
pop
test
iret
jns
jo
lds
push
dec
ror
or
add
shr
cmp
jmp
or
fisubr
lods
mov
ror
xor
push
popa
xlat
mov
and
inc
inc
je
icebp
cld
fcomp
and
loop
(bad)
add
out
ds
mov
sbb
les
jbe
jb
sar
and
adc
sub
std
sub
jb
mov
inc
ins
hlt
std
mov
xor
cli
ret
(bad)
adc
lea
lahf
mov
cmc
mov
bound
stos
mov
dec
xor
iret
or
(bad)
mov
shr
std
(bad)
shr
test
jge
jns
leave
test
sti
popa
and
mov
push
push
mov
and
add
sbb
into
pop
addr16
mov
push
adc
lock
or
mov
sbb
adc
and
sub
push
nop
outs
ror
(bad)
pop
test
fcom
pop
popf
pop
mov
mov
inc
push
dec
jle
add
sub
movs
sbb
lock
cwde
inc
repnz
jns
xchg
jmp
xchg
mov
je
and
xor
(bad)
xchg
mov
xor
fcomp
out
pop
mov
push
mov
lahf
jo
xchg
das
jns
and
pop
mov
push
cmp
inc
aam
mov
out
pop
adc
mov
pop
mov
pop
lods
cmp
mov
pop
in
or
stos
and
or
bound
test
ss
stos
ret
jnp
call
cmp
pop
mov
pop
(bad)
dec
sub
inc
sub
push
nop
and
inc
sbb
je
mov
daa
mov
mov
or
mov
fstp
lahf
call
jmp
and
mov
xor
and
mov
aam
aam
bound
fcomp
mov
fld
and
clc
in
push
adc
add
cdq
and
inc
pop
cli
popf
out
or
push
fisubr
xchg
or
or
shl
ds
lds
jl
jp
stos
dec
pop
xchg
push
das
bound
lds
(bad)
call
pop
lea
jmp
mov
cli
stos
les
gs
fisub
in
std
jmp
adc
stc
inc
mov
std
popf
fcmovbe
push
jmp
push
cmp
and
shl
aam
xchg
(bad)
in
cmp
dec
lahf
sbb
les
fdivrp
daa
mov
lods
mov
neg
or
jmp
retf
out
mov
lds
sbb
enter
adc
lods
push
movs
loop
sub
into
push
jge
jae
data16
fsubr
jmp
movs
bound
or
push
or
mov
inc
fldenv
enter
add
inc
pop
jns
and
and
sub
mov
repnz
xchg
mov
ficom
push
dec
ret
(bad)
mov
popf
sub
inc
not
and
cwde
mov
mov
jge
add
test
mov
push
xor
jg
rcr
xchg
push
(bad)
scas
and
and
push
lods
mov
add
lock
stos
mov
icebp
xor
(bad)
sbb
leave
mov
pop
in
test
dec
out
sub
(bad)
sahf
in
mov
jg
mov
ret
daa
dec
call
inc
xchg
int
rol
jmp
xor
dec
ja
fcmovu
inc
mov
adc
dec
int3
push
inc
push
daa
jns
mov
mov
and
xor
cmp
jns
imul
loop
pusha
pop
or
je
(bad)
outs
mov
nop
mov
test
mov
mov
or
xor
int3
jg
pushf
idiv
dec
in
retf
std
retf
lea
inc
stc
lods
cmp
sahf
loope
fistp
push
cmp
mov
sbb
or
and
into
repz
jnp
push
xor
icebp
out
cmp
test
retf
adc
inc
dec
sbb
mov
jbe
hlt
or
adc
cmp
jne
ror
daa
rcl
sub
xor
fld
sbb
adc
dec
sbb
mov
(bad)
xlat
outs
sub
std
xchg
add
sbb
adc
and
mov
mov
pop
out
cmps
inc
ss
(bad)
js
bound
inc
cmp
dec
rol
adc
adc
push
jae
ret
addr16
push
lods
aaa
int3
jo
cwde
loop
add
mov
pop
aam
mov
add
push
rcr
lock
mov
rcl
addr16
jns
test
dec
sub
dec
mov
pop
int3
daa
(bad)
sub
out
jns
es
repz
data16
in
out
push
adc
cld
sub
add
jne
cmp
fcmove
mov
or
iret
xchg
push
sbb
mul
jge
push
inc
pusha
mov
test
cmp
mov
inc
adc
cmp
xor
aam
outs
mov
push
jle
or
push
test
daa
add
mov
sahf
loope
int3
(bad)
lods
into
or
lods
xor
push
dec
das
lds
cmp
iret
loope
stos
in
scas
mov
cmp
addr16
pop
or
daa
pop
out
push
popf
jg
inc
scas
lock
outs
sbb
ss
push
mov
std
mov
sbb
jne
cwde
iret
shl
jp
xor
push
xchg
scas
and
pop
sbb
lds
shl
sub
cld
push
in
jo
xchg
mul
test
dec
jg
and
xchg
ins
mov
lahf
outs
mov
iret
mov
loopne
push
nop
or
cmp
repnz
das
fs
mov
mov
jnp
rol
mov
cmp
imul
inc
sub
cmps
aas
jmp
mov
inc
ficomp
data16
std
sub
sbb
pop
mov
jns
data16
and
add
pop
lahf
dec
ret
hlt
nop
jnp
bound
mov
and
ret
mov
sti
outs
mov
mov
add
xor
cmps
pop
ds
and
xchg
jne
pop
adc
add
xchg
cmps
repz
or
mov
(bad)
mov
rol
pop
sar
cmp
dec
repz
ror
test
jg
push
fldpi
hlt
sti
cmp
aad
test
adc
and
aam
sub
addr16
(bad)
fsub
popa
mov
aaa
dec
xchg
push
in
lahf
hlt
push
or
(bad)
or
(bad)
stos
mov
or
mov
and
push
leave
pop
jnp
mov
and
pushf
pop
out
popf
into
mov
xor
icebp
sub
es
or
sub
pop
inc
mov
cmps
loopne
cmp
mov
(bad)
push
add
xor
dec
mov
retf
daa
adc
dec
adc
fild
into
out
aam
mov
imul
sbb
outs
sahf
inc
or
xchg
push
(bad)
hlt
(bad)
shr
jbe
mov
fst
xor
cld
stos
mov
push
dec
js
pop
leave
ja
imul
cmp
pop
movs
dec
fidiv
cld
cmps
jl
cmp
outs
dec
cld
or
or
test
sar
and
ds
push
scas
xchg
mov
fldenv
(bad)
xchg
stc
test
dec
inc
xor
pop
imul
mov
xchg
jb
mov
xor
ins
mov
ror
out
movs
jno
loop
jns
inc
mov
inc
into
adc
cmp
cmp
cli
dec
shr
or
popf
adc
adc
fs
sbb
cli
loopne
iret
inc
pop
fwait
inc
shr
scas
jl
fs
or
shl
and
into
add
inc
and
daa
in
ja
xchg
lea
test
cmps
call
out
fdivp
dec
imul
pop
(bad)
call
mul
push
xor
fwait
loopne
xchg
jae
popa
int3
in
repnz
pop
jb
fldenv
add
sbb
inc
push
dec
(bad)
cld
(bad)
xchg
idiv
sbb
cdq
and
push
jmp
pop
mov
cdq
fisttp
mov
loope
movs
cmp
loopne
repnz
jbe
jmp
pop
or
pop
mov
add
addr16
gs
mov
and
sbb
enter
(bad)
clc
cdq
ins
fbstp
and
loope
pop
xrelease
movs
movs
imul
pop
into
lea
adc
and
out
dec
mov
lock
inc
call
xor
or
pop
jnp
and
fist
mov
sub
leave
int
inc
vsqrtss
xchg
mov
es
and
inc
pop
push
pop
and
jb
addr16
adc
sub
and
inc
sbb
jmp
cmp
lods
push
push
loope
push
call
popf
out
test
test
jb
push
pop
jge
add
cmp
test
adc
mov
mov
cld
xchg
xchg
push
mov
xchg
cdq
jnp
subps
daa
xor
mov
jo
fnstcw
(bad)
jnp
ins
ret
or
in
or
div
test
movs
popf
xchg
cmps
movs
push
sar
mov
es
arpl
dec
inc
call
adc
add
in
mov
loop
jnp
and
mov
inc
leave
sbb
inc
mov
xchg
push
lods
push
scas
pop
sbb
adc
(bad)
fmul
and
mov
enter
rol
xchg
call
call
ins
push
cmps
add
or
test
inc
nop
mov
(bad)
or
cmp
jns
add
pop
int3
(bad)
xchg
pop
shr
push
adc
jne
rcr
push
sub
pop
cmps
xor
xlat
sub
jns
scas
xchg
add
inc
pushf
nop
push
and
mov
pop
jl
test
add
fwait
inc
loopne
xor
jns
enter
cmc
add
and
inc
sub
inc
mov
and
jl
ror
pop
mov
push
mov
inc
outs
sti
jge
test
push
test
and
test
mov
mov
scas
stos
pusha
add
jmp
repz
popf
sub
push
pusha
inc
add
or
dec
mov
push
sub
mov
std
mov
scas
xchg
cdq
pop
push
gs
pop
std
out
pop
push
xchg
mov
sahf
cmp
movs
repz
daa
jp
in
lock
mov
mov
bound
mov
daa
div
xor
popf
ret
iret
add
pop
cmp
sbb
push
jne
push
ins
sahf
or
sub
dec
sbb
in
loope
jp
sar
stos
stos
(bad)
fcom
(bad)
aad
(bad)
mov
movs
xor
scas
ficomp
mov
push
push
add
call
cdq
add
mov
xor
sub
or
scas
mov
popa
pop
rcl
mov
loope
push
out
ret
les
xchg
and
sub
pop
sub
dec
pop
push
dec
out
xor
push
les
mov
dec
inc
sub
jmp
push
adc
xchg
gs
(bad)
or
sub
mov
xor
pop
mov
jns
or
shl
adc
(bad)
aam
add
sti
sbb
gs
push
retf
push
call
jmp
pop
sub
or
sar
sbb
add
movs
gs
scas
jns
mov
pop
mov
test
out
cli
pop
mov
pop
push
mov
out
cli
xchg
cdq
loope
ret
push
scas
sbb
sub
sbb
xor
clc
add
hlt
cmp
out
sub
mov
les
aas
pop
les
rol
in
stos
pop
jae
fs
dec
loop
cmc
aam
and
sbb
push
xor
mov
inc
je
mov
sub
popf
cmp
mov
adc
(bad)
std
cmp
or
xlat
cli
outs
mov
mov
and
fs
movs
outs
pop
or
ret
xchg
in
mov
rol
jmp
jbe
into
sar
outs
push
mov
sbb
xchg
pop
mov
pop
dec
push
mov
jmp
xchg
jp
dec
mov
pusha
inc
dec
sti
push
add
jne
mov
jle
fstp
clc
push
xchg
outs
sub
or
test
loope
xchg
fisttp
fdivr
and
daa
mov
sbb
add
pushf
adc
jl
fcom
and
jns
sub
jae
cmc
xlat
(bad)
inc
movs
or
sbb
loop
or
jmp
cmc
hlt
and
out
xchg
cli
arpl
and
mov
fld
es
(bad)
fld
aas
dec
xchg
test
mov
cmp
and
mov
repnz
mov
sbb
pop
sbb
xor
xor
sbb
das
shl
bnd
cmp
test
aam
scas
mov
enter
stc
call
push
(bad)
mov
repz
pop
pop
adc
cmps
mov
outs
inc
mov
call
xchg
push
xor
dec
popf
and
and
cwde
add
sysret
out
scas
repnz
lea
pop
int3
xchg
mov
sbb
push
xor
xchg
xchg
lds
sar
fcomp
mov
pop
and
mov
jb
icebp
jb
cwde
xchg
cmp
cmp
pop
pop
data16
dec
jg
je
lea
ds
call
fwait
leave
xor
addr16
ins
lods
and
(bad)
pop
sub
imul
idiv
je
(bad)
mov
rcl
scas
rcr
(bad)
rcr
sub
mov
retf
push
xor
hlt
ret
jge
(bad)
cmc
mov
push
sub
out
popa
aam
push
sbb
rcl
ja
push
jecxz
loope
mov
repnz
mov
inc
call
jb
mov
fld
test
mov
sbb
adc
cld
out
imul
dec
cwde
shl
stos
cmp
add
test
push
xlat
adc
iret
je
xlat
and
jbe
inc
pop
sahf
xchg
call
mov
dec
outs
stos
ror
pop
mov
sub
xchg
push
test
adc
call
pop
dec
or
pusha
lds
rcl
je
gs
mov
dec
loopne
or
retf
popf
adc
xchg
das
jl
out
iret
scas
ret
xlat
mov
gs
xchg
fdivr
jmp
jmp
js
mov
es
(bad)
mov
int
mov
repz
outs
or
jno
mov
add
outs
aad
sub
cmps
sub
jo
xchg
test
xchg
xlat
pop
xchg
imul
iret
sbb
sub
(bad)
cdq
push
in
lahf
movs
mov
dec
and
stos
ffree
pusha
mov
clc
in
mov
test
loop
add
(bad)
out
push
(bad)
add
in
push
out
daa
sahf
cmps
mov
mov
test
scas
xor
inc
and
ins
pop
shl
iret
add
(bad)
or
pop
test
arpl
sahf
aad
in
aam
clc
or
ret
out
fimul
mov
in
pop
int
adc
inc
inc
inc
bound
dec
mov
jmp
mov
mov
fcomp
shl
mov
pop
arpl
mov
add
push
shr
sbb
imul
jb
add
in
ins
(bad)
(bad)
mov
ret
out
push
int
pop
aaa
or
add
shr
cmps
faddp
bound
js
jno
stos
or
in
jo
scas
mov
sbb
ret
daa
pop
bound
es
lds
cmp
jne
stos
out
lods
ins
inc
push
(bad)
or
imul
in
ret
mov
(bad)
ficomp
rcl
cmps
(bad)
mov
dec
aas
call
scas
enter
cmc
inc
std
dec
les
ror
add
mov
cmp
and
pop
das
scas
xchg
inc
daa
or
jae
rcl
xchg
mov
jp
and
jns
jnp
(bad)
sbb
fisubr
jne
sahf
add
imul
adc
and
sub
push
mov
les
xchg
sub
and
rcl
adc
fwait
push
inc
or
inc
clc
arpl
xchg
cmp
xchg
stos
xchg
mov
int
push
push
out
push
push
mov
cmp
pop
std
mov
add
mov
sub
or
push
push
mov
adc
cmp
cs
push
jecxz
or
cdq
jb
or
fstp
mov
jbe
or
xor
fistp
(bad)
pop
sub
xchg
ja
(bad)
sub
ror
mov
sbb
fld
inc
pop
push
add
push
int3
pop
scas
mov
(bad)
aas
sbb
mov
jb
dec
mov
dec
pusha
int
sahf
xchg
adc
int3
push
sbb
push
scas
(bad)
retf
stos
pop
add
loope
(bad)
fsubr
jno
mov
call
add
icebp
add
sub
retw
jge
xchg
stc
xchg
jle
push
push
inc
push
ins
aas
in
sub
sub
xor
inc
jbe
scas
fdivr
call
adc
sahf
push
movs
enter
cdq
not
dec
push
xor
(bad)
iret
inc
movs
lahf
mov
or
push
test
push
dec
sbb
mov
sbb
push
std
mov
xor
and
jnp
scas
je
xor
(bad)
mov
rcr
mov
adc
popf
inc
data16
jno
scas
inc
push
mov
and
xor
push
loopne
scas
add
lea
cmp
or
je
cwde
stos
je
ins
jns
js
pop
push
pushf
xor
jp
sbb
sbb
xchg
xchg
mov
cwde
add
mov
pop
mov
xchg
test
or
add
cld
dec
test
or
cmc
sub
inc
push
(bad)
in
adc
jmp
xor
cmp
arpl
xor
loopne
movs
pop
pop
mov
push
inc
mov
sbb
ret
mov
sub
jmp
cmp
inc
nop
outs
or
push
popa
je
or
xlat
jnp
sbb
push
ins
lods
test
iret
lods
mov
cmp
and
(bad)
mov
xor
inc
test
inc
dec
push
rol
mov
outs
pop
mov
das
mov
js
pop
lods
enter
xlat
cmp
sub
scas
fild
pusha
fist
mov
cmp
pop
xor
or
xor
jae
cli
mov
mov
mov
jno
pushw
test
fidiv
cmp
cmp
push
mov
out
jo
sub
push
mov
in
sub
shr
push
das
dec
(bad)
add
inc
in
mov
dec
ret
mov
jo
lea
and
pop
dec
push
sbb
jmp
pop
xor
inc
es
xor
cmc
inc
lods
popa
lock
int3
aam
lock
mov
cwde
pop
jecxz
adc
pop
mov
adc
aad
dec
mov
push
jne
and
mov
sub
or
(bad)
(bad)
adc
scas
leave
mov
cmp
sbb
mov
xor
outs
loopne
cmp
jmp
jmp
sahf
cmp
in
mov
ins
sub
mov
or
mov
aam
push
pop
fidiv
cli
xchg
stos
push
jo
aaa
pushf
test
adc
mov
test
dec
pop
xor
outs
out
fdiv
popf
pushf
sbb
adc
shl
lahf
out
xchg
nop
pinsrw
test
ja
sar
add
inc
add
jg
ins
lods
inc
scas
daa
mov
sbb
sti
jle
mov
dec
loop
test
jmp
add
inc
jle
xor
dec
iret
mov
(bad)
stc
cwde
xchg
jbe
and
mov
enter
in
mov
push
jmp
inc
pop
jmp
jns
iret
push
mov
std
mov
jnp
fisub
inc
cli
adc
sar
or
mov
lahf
dec
jecxz
jae
lods
loope
std
sub
test
or
dec
add
das
push
outs
pop
xor
int3
cs
push
inc
push
shl
test
ds
mov
shr
dec
aam
(bad)
leave
ins
and
mov
repz
pop
aam
enter
add
test
cmp
daa
xchg
loop
stos
xor
inc
es
xchg
push
out
popa
mov
inc
push
push
int3
ret
shr
adc
test
ss
pushf
cmp
push
rol
in
adc
pop
or
push
add
pop
test
out
push
sbb
aad
add
rcr
inc
mov
or
aaa
pusha
or
test
(bad)
cmp
jl
mov
test
das
add
aaa
sbb
jb
ret
jl
push
js
push
mov
outs
sbb
push
push
mov
inc
mul
out
xor
and
je
dec
pusha
in
dec
test
jmp
inc
inc
jno
adc
or
mov
mov
retf
es
aam
pop
jae
cpuid
adc
mov
test
std
cmp
call
test
inc
jmp
mul
cmp
cmps
fstp
and
adc
mov
xchg
scas
nop
cmp
mov
rcl
dec
dec
enter
push
inc
or
xchg
push
out
sub
xor
cmp
jns
bound
loop
fs
pop
aaa
pop
in
xlat
push
jns
outs
clc
jmp
mov
sar
(bad)
std
sub
fs
outs
out
and
xchg
outs
push
pop
into
loop
sub
mov
fbld
mov
fadd
jnp
out
sub
push
cmp
pop
mov
test
sar
stos
jl
cmps
inc
fiadd
xor
and
movs
push
mov
test
adc
mov
jle
popa
xchg
sub
push
sub
stc
cwde
repz
or
sti
bound
push
pop
push
xchg
and
pop
mov
(bad)
mov
pushf
retf
aam
out
lahf
pop
xchg
sub
rcr
mov
pop
xchg
retf
test
dec
push
cmps
pop
xlat
movs
enter
xor
jecxz
jns
xchg
sub
dec
jecxz
adc
inc
jae
imul
outs
push
imul
lods
data16
idiv
(bad)
popf
mov
inc
in
outs
fdivr
adc
dec
add
mov
in
push
jae
cwde
mov
pop
jle
std
jle
ror
xchg
push
sub
sub
add
int
sub
and
cmp
mov
call
cmp
fwait
push
dec
xchg
lods
jae
lods
or
lods
scas
xor
sbb
in
aas
pop
pusha
and
jmp
xor
add
daa
aaa
das
adc
push
out
xor
sbb
idiv
dec
call
cli
pop
mov
pop
nop
mov
stc
nop
sahf
repz
retf
stos
mov
or
or
jnp
(bad)
push
push
or
mov
nop
push
inc
add
or
jecxz
xchg
xchg
les
mov
mov
mov
(bad)
pop
outs
or
xchg
in
stc
fst
xchg
jge
adc
clc
adc
shl
rol
pop
frstor
add
enter
jns
emms
add
mov
out
shl
pop
mov
sbb
out
into
jge
xor
lock
imul
in
pop
push
mov
scas
out
xchg
cmp
(bad)
mov
pop
dec
fnstsw
sbb
adc
mov
int3
fisubr
cmps
xchg
clc
(bad)
dec
scas
sbb
mov
pop
sub
scas
cld
dec
js
enter
dec
enter
pop
push
ins
out
pushf
pop
dec
cmps
rcl
sub
jbe
mov
jge
test
dec
repnz
mov
pop
test
push
cmp
xor
leave
imul
mov
aam
lods
aaa
test
add
jo
jmp
in
mov
sub
or
xchg
test
add
push
jge
add
jmp
dec
push
icebp
int
div
loop
popf
inc
cld
fimul
pop
push
gs
mov
sub
sar
inc
mov
cwde
ins
mov
es
(bad)
fidiv
popa
cmp
mov
lds
pusha
adc
and
cmp
sbb
icebp
push
into
ins
dec
push
out
sti
sub
mov
mov
cmps
mov
fnstsw
fidivr
fadd
scas
ror
fisub
movs
dec
je
aaa
out
dec
cmp
push
fsub
jno
(bad)
mov
shr
jbe
dec
jmp
dec
push
movs
push
imul
rcl
add
jo
cmp
xchg
xchg
mov
fs
cmp
cmp
dec
mov
fsub
or
or
add
mov
xor
test
or
sub
test
cmp
ret
jp
div
xchg
mov
add
push
stc
movs
add
dec
or
pop
nop
push
inc
movs
sbb
call
bound
lahf
adc
mov
dec
(bad)
(bad)
les
and
mov
inc
cmp
and
push
lds
fwait
sahf
xor
(bad)
fxam
cld
movs
out
pusha
out
jb
cmp
xchg
push
lods
xchg
pop
das
pop
cmp
std
mov
stos
ret
pop
mov
dec
jmp
mov
sub
imul
out
out
movs
mov
sbb
xchg
in
mov
in
test
call
push
sbb
aam
shl
stos
aas
push
dec
jnp
jecxz
add
pop
dec
ins
mov
out
xchg
int3
popa
pop
pop
gs
retf
fdiv
jg
cmp
dec
jae
pop
xor
push
test
fstp
adc
xchg
sbb
outs
fdiv
lock
ins
mov
jb
int3
and
stos
call
pop
mov
aas
shr
mov
dec
mov
sahf
push
push
mov
mov
mov
ins
pop
iret
xor
or
inc
cwde
and
mov
lods
mov
or
pop
sub
pop
push
mov
mov
add
int
add
or
adc
adc
ds
call
push
push
and
add
out
je
xchg
and
and
movs
(bad)
shr
mov
shl
xor
cdq
sub
xchg
push
scas
or
popa
and
mov
cmps
out
std
jae
cmps
mov
jl
mov
inc
setb
int
dec
mov
xor
popf
jne
sti
mov
inc
add
sbb
mov
adc
adc
jge
push
mov
ret
mov
xor
or
pop
daa
lahf
xlat
jbe
loopne
push
push
or
shl
frstor
fmulp
aaa
push
push
repz
add
xchg
in
push
movq
popf
int
ret
push
pop
pop
adc
aam
stos
xchg
test
loop
loop
(bad)
sbb
xor
xor
std
je
scas
push
and
ror
dec
mov
into
das
(bad)
bound
lods
scas
cli
fadd
and
lea
clc
(bad)
fnstcw
xchg
leave
cdq
ror
adc
jbe
(bad)
inc
mov
test
push
inc
popa
test
out
sub
pusha
mov
mov
and
mov
aas
not
sti
out
scas
push
jmp
mov
sub
cmps
or
scas
lahf
mov
pop
call
lods
fisub
leave
leave
pop
mov
jmp
ret
adc
pop
jmp
sahf
in
xchg
cmp
lods
popa
hlt
sub
in
or
cwde
add
fsub
mov
add
out
mov
sbb
mov
or
mov
adc
test
jb
adc
push
fisub
test
daa
inc
pop
mov
mov
sbb
int3
xchg
jge
fsubr
mov
pop
push
push
sbb
jp
ds
fld
retf
outs
sbb
(bad)
fcomp
cs
into
rol
jb
(bad)
sbb
jmp
sbb
js
mov
push
aas
xor
cmp
adc
aam
mov
js
into
push
fwait
push
js
data16
pop
push
call
je
fwait
mov
sbb
arpl
addr16
mov
sub
mov
rol
mov
sub
push
pop
div
mov
dec
mov
adc
cld
call
stos
sub
lods
pop
stos
pop
ins
inc
int3
cmp
div
out
xor
inc
push
jecxz
cmps
(bad)
loope
lods
mov
call
or
sub
fidivr
jnp
pusha
dec
imul
sahf
xchg
adc
pushf
in
lds
scas
cmp
sub
xchg
rcr
test
push
fsubrp
aam
retf
daa
out
cmps
jg
dec
scas
scas
add
loope
mov
rol
ror
jno
and
inc
dec
push
mov
jmp
cmp
mov
jmp
mov
in
rol
push
jnp
lahf
or
pop
sub
adc
sub
jmp
sub
pop
add
pop
jnp
mov
push
in
pop
and
pop
(bad)
inc
cmp
movs
pop
mov
in
ficom
loopne
adc
add
leave
xor
xlat
enter
ins
sbb
xor
xor
bound
inc
out
arpl
pop
iret
loope
hlt
xor
cld
fstp
ja
mov
or
mov
xor
dec
fmul
pop
push
clc
(bad)
push
enter
sar
outs
jnp
inc
adc
setl
imul
or
retf
fist
loope
sbb
mov
out
in
inc
shl
inc
jge
call
jge
scas
sbb
sub
mov
jl
xchg
mov
(bad)
sbb
or
call
dec
cmp
or
push
add
mov
jecxz
adc
xor
mov
jo
push
pop
test
add
(bad)
pusha
mov
nop
xor
cwde
je
leave
jno
adc
xor
mov
dec
sahf
adc
out
xchg
enter
test
int
neg
inc
mov
outs
cwde
adc
scas
mov
imul
or
les
xor
mov
lods
lea
dec
push
cmc
loop
xor
dec
adc
xchg
xchg
pop
fwait
outs
fbstp
mov
mov
(bad)
std
dec
mov
adc
adc
into
cmp
test
popa
mov
fldpi
or
jns
aas
jne
jmp
push
push
xchg
and
or
lds
inc
fcomp
mov
xchg
ins
les
push
push
jne
lods
clc
mov
cmps
xchg
(bad)
cmps
dec
jne
pop
jp
sti
pop
xor
out
mov
fnsave
in
cmp
push
imul
fbstp
pop
push
add
mov
add
femms
xor
and
retf
sub
data16
mov
test
xlat
mov
sbb
push
inc
jmp
jb
or
inc
jns
in
jmp
pop
mov
cmp
cwde
repz
sub
jl
push
pop
and
sub
pop
push
sub
mov
sbb
movs
not
cmc
in
leave
push
fldenv
fist
and
(bad)
mov
sub
dec
retf
sahf
lods
adc
fsub
adc
jmp
mov
jge
mov
mov
jl
gs
fstp
jns
into
lea
hlt
in
cli
push
popf
adc
mov
lods
mov
add
fisubr
cmps
cdq
fmul
and
mov
ret
lods
and
and
scas
jo
int
cmp
pop
jle
stos
and
lods
ss
jnp
and
jmp
dec
mov
inc
(bad)
cmp
adc
in
mov
cmp
jg
add
or
test
lock
sbb
mov
adc
fdivr
or
push
(bad)
out
cmovbe
mov
ss
mov
jg
mov
push
mov
xor
pop
xor
sub
mov
push
pop
les
pop
fscale
cmp
(bad)
jae
push
xchg
movs
push
cmp
int3
pop
pop
inc
ins
dec
popa
mov
dec
pusha
cwde
dec
cmp
and
pop
popf
jle
add
outs
jbe
dec
leave
ret
sbb
cli
je
loopne
pop
xchg
adc
or
int
(bad)
add
test
bound
mov
or
push
mov
sbb
xor
xchg
loope
push
cmc
sbb
fsubr
pop
mov
aaa
jmp
pop
cs
xor
frstor
and
adc
add
jnp
xchg
pushf
push
and
sahf
mov
adc
dec
add
push
inc
je
mov
push
sahf
aam
(bad)
icebp
lds
(bad)
in
sbb
cli
les
mov
sar
loopne
sar
inc
xchg
ds
sub
or
jae
cdq
imul
(bad)
push
stos
ja
std
bound
pop
sar
in
ins
ins
lods
js
cdq
pop
and
pop
pop
mov
add
push
add
sub
sub
cmp
sub
push
rcl
ds
scas
cmc
jne
es
mov
wrmsr
sbb
or
aaa
and
cmp
and
test
in
call
sar
aam
push
and
mov
jne
in
aam
mov
ss
loopne
mov
fwait
jb
test
es
aad
es
aad
out
push
and
mov
pop
sar
xchg
xchg
das
mov
pop
xchg
mov
cmp
inc
sbb
out
jnp
sub
or
xor
in
push
nop
aaa
mov
inc
xchg
pushf
jecxz
jecxz
lods
dec
adc
ds
mov
mul
pop
mov
add
cmp
gs
dec
push
mul
nop
loopne
jmp
xchg
mov
retfw
push
push
shl
popf
xchg
movs
jge
scas
arpl
rol
inc
mov
iret
xor
test
sbb
pop
aaa
xlat
push
pop
lahf
call
push
cmp
fmul
(bad)
jl
xor
stc
fisttp
push
clc
jmp
bound
mov
jmp
jae
or
jae
jne
jmp
jb
push
outs
(bad)
stc
mov
test
mov
cmp
adc
pop
cmc
and
ds
ds
jno
mov
imul
mov
inc
xchg
inc
mov
in
lds
(bad)
(bad)
(bad)
or
loop
movs
das
sar
jecxz
push
dec
jns
mov
inc
add
movs
push
fstp
jecxz
mov
(bad)
mov
popf
cmps
retf
xor
popf
iret
inc
sbb
inc
lds
push
cmp
fst
cmp
push
xor
nop
and
test
adc
jnp
outs
jno
lahf
or
mov
push
dec
fdiv
das
xchg
inc
sbb
cdq
fst
repnz
cli
or
jnp
add
(bad)
or
icebp
xor
inc
push
mov
enter
hlt
xor
rcl
pop
xchg
mov
(bad)
aas
inc
cmp
inc
add
sub
sub
mov
mov
mov
sub
xchg
adc
add
daa
sbb
push
jp
daa
xchg
leave
fstp
in
(bad)
dec
data16
add
pop
xchg
sbb
cmps
imul
mov
fs
cdq
addr16
hlt
cmp
icebp
add
inc
pusha
and
repnz
out
xchg
inc
add
fcmovne
cmp
jp
inc
data16
push
mov
xor
ss
jg
ins
sbb
loop
jnp
mov
sbb
jmp
jno
cmp
pusha
mov
ror
adc
push
push
jae
aaa
mov
fisubr
mov
loop
add
scas
xchg
sbb
and
add
mov
fsub
les
dec
test
sbb
dec
int3
outs
movlps
push
fbld
push
mov
test
icebp
(bad)
mov
xor
sub
int3
or
mov
das
jecxz
xchg
mov
dec
cmp
arpl
pop
aam
mov
xor
pop
sbb
imul
mov
mov
adc
xor
sub
ret
fisubr
sbb
iret
ror
xchg
pop
xor
jnp
sub
repnz
or
push
xchg
retf
mov
pop
pushf
push
gs
add
xchg
iret
mov
shl
fs
push
xlat
test
test
test
jmp
jo
push
loop
jge
ins
push
cmp
test
push
inc
sub
jo
adc
lods
loope
mov
mov
(bad)
sbb
sub
cs
(bad)
fadd
in
pop
mov
stos
pop
pop
dec
xchg
xchg
add
sbb
stos
push
mov
adc
adc
mov
mov
xlat
or
xchg
jg
cmp
xchg
sub
je
mov
jnp
jecxz
div
xchg
aad
inc
in
test
mov
cmp
jmp
and
sbb
lahf
aas
fidivr
and
js
jne
lods
xchg
test
(bad)
xlat
pop
ds
mov
cwde
ja
rcl
fmul
and
jle
push
mov
or
sub
mov
fisub
div
cmp
xchg
push
jne
retf
sbb
lods
cdq
movs
fwait
outs
push
shr
push
les
mov
test
mov
mov
sub
inc
repz
sbb
cmp
and
shl
cmp
push
dec
cmp
ret
sub
and
ret
ret
das
loopne
pop
pushf
jo
pop
addr16
cmc
mov
or
out
(bad)
pop
retf
mov
hlt
or
mov
ins
add
cli
or
push
cmp
shl
cmp
out
dec
xchg
(bad)
mov
cmp
inc
mov
xor
mov
cmc
fwait
push
aaa
pop
dec
arpl
enter
mov
mov
shl
add
sub
out
push
hlt
mul
cmp
(bad)
push
jns
pop
jl
enter
pop
int
pusha
or
cmc
inc
mov
cld
pop
pop
outs
aad
xchg
jne
in
xor
xor
movs
xchg
sbb
je
cmps
or
popa
pusha
dec
xor
add
inc
mov
and
adc
lods
inc
data16
test
(bad)
xor
mov
ror
or
retf
(bad)
cmp
pop
hlt
call
sub
ret
iret
dec
sbb
not
cmp
fwait
scas
pop
mov
dec
bound
xchg
pop
and
dec
in
push
xor
jl
adc
push
std
sub
xor
dec
int3
es
xchg
cmps
jnp
jno
xor
lock
es
fiadd
lock
cmc
xchg
and
mov
pop
xor
xor
and
push
sbb
jno
movs
pop
cmp
pop
in
loop
in
jno
ds
push
popa
push
jb
sbb
cmps
dec
shl
stos
repz
fidiv
icebp
scas
jge
lock
retf
(bad)
xchg
nop
push
mov
fdivp
adc
fldcw
xchg
ja
in
mov
dec
lea
inc
cmc
fs
ret
cmp
movs
out
lods
or
sbb
clc
cdq
arpl
xchg
mov
addr16
arpl
inc
or
mov
cli
pushf
dec
xchg
sub
lods
push
adc
or
sub
inc
int
enter
add
dec
pop
test
jmp
jae
std
cmps
sub
dec
inc
outs
fst
pop
inc
fs
ret
mov
xor
sbb
mov
cli
xchg
test
fcmovne
clc
fild
lock
test
out
mov
(bad)
ffreep
xor
stos
jmp
or
push
push
retf
pushf
call
cmp
mov
cmp
mov
sub
or
es
jnp
in
mov
dec
out
pop
stc
je
mov
sbb
adc
push
sub
or
push
mov
mov
pop
repz
test
pcmpeqd
je
and
ret
xor
adc
mov
push
shl
push
sar
lea
lea
mov
test
xlat
je
cmp
cmp
sub
jecxz
mov
xor
test
pop
dec
xchg
(bad)
mov
clc
scas
mov
pushf
leave
enter
(bad)
loope
push
xchg
(bad)
pop
call
aaa
into
mov
sub
jle
sub
push
into
sahf
cmp
jns
es
cmp
fbstp
and
and
and
bound
mov
out
sub
leave
outs
push
pushf
mov
jnp
clc
in
nop
xor
sub
mov
pop
ror
stos
or
jp
pop
aam
add
jae
sahf
pop
sbb
sub
popf
aad
xchg
mov
test
mov
mov
sub
shr
pop
mov
test
mov
rcl
mov
por
pop
dec
loope
lods
sahf
inc
pop
mov
dec
and
ret
mov
fisttp
push
push
cmp
inc
pop
mov
pop
cli
fs
enter
lock
add
cs
cs
jecxz
fwait
cmp
cmc
sti
mov
mov
inc
ss
ja
jle
in
das
cmp
mov
push
scas
cmp
scas
dec
xcrypt-ofb
cmps
push
mov
ds
stos
dec
pop
daa
stos
in
inc
lods
in
cmp
in
sbb
dec
inc
or
xor
pop
icebp
clc
test
mov
push
xchg
ds
mov
dec
push
and
push
in
imul
pop
inc
scas
rcl
scas
jb
ss
xor
and
mov
cmps
mov
scas
fild
dec
mov
mov
sub
and
mov
xor
xor
pusha
leave
fstp
stc
sub
call
pop
mov
arpl
mov
arpl
pop
or
push
and
sub
dec
jnp
lock
int3
leave
bound
pop
mov
mov
mov
xor
inc
and
pop
pusha
popf
aas
xor
fs
cmp
pop
call
test
xor
or
jl
fnsetpm(287
outs
and
fst
push
push
mov
ds
push
xchg
fwait
in
loopne
or
sub
push
inc
dec
(bad)
in
push
retf
or
retf
nop
cmp
sub
outs
and
cmps
test
dec
and
mov
(bad)
arpl
jp
aam
jns
add
fsub
lods
mov
cs
push
jle
fisttp
je
jle
pop
jbe
fnstenv
sub
inc
fcomp
cs
cmp
dec
popa
mov
jge
sbb
std
mov
test
or
sub
in
ja
ret
rol
xchg
pop
mov
(bad)
movs
xchg
push
ficom
enter
and
mov
sbb
cmp
mov
mov
cmps
pop
push
cmp
int3
fcmovne
push
cmp
sbb
mov
scas
push
xchg
mov
outs
jnp
fimul
bound
push
adc
mov
xchg
mov
or
jbe
push
bound
test
pusha
movs
rcr
cmp
or
xor
sbb
jecxz
pop
xor
iret
push
scas
xor
mov
mov
test
sbb
test
in
and
pusha
into
mov
mov
pop
push
into
stos
cmp
movs
jbe
jge
fabs
mov
mov
inc
jb
cwde
stos
cmc
sbb
xchg
push
xlat
xchg
loopne
in
mov
cmp
stos
pop
sub
mov
push
inc
dec
jb
shld
jmp
jo
stc
sti
add
jg
stc
(bad)
inc
retf
sbb
aaa
mov
adc
(bad)
stc
enter
push
in
jns
popa
or
pusha
inc
popf
adc
into
shl
cwde
adc
xlat
in
(bad)
stos
xor
dec
sub
ja
inc
jmp
das
ss
pop
int3
(bad)
dec
arpl
add
xchg
sti
aad
addr16
add
cwde
sbb
xchg
scas
sbb
aad
push
jg
xor
out
movs
or
sti
movs
daa
xchg
dec
xchg
in
movs
ins
arpl
scas
fstp
lods
pop
es
es
pop
push
add
into
push
iret
jmp
xchg
jnp
mov
pop
jge
idiv
fdiv
sub
cwde
outs
jo
mul
js
inc
adc
xor
jge
mov
lahf
or
mov
or
call
or
imul
mov
mov
push
or
jp
jo
les
cmovbe
ds
xlat
movs
push
or
sahf
data16
cmp
sub
scas
dec
(bad)
aad
(bad)
adc
adc
dec
xchg
mov
push
and
add
daa
mov
nop
std
faddp
or
and
repnz
sbb
mov
in
dec
dec
adc
hlt
loopne
in
je
cmp
adc
inc
scas
inc
inc
push
jge
push
sbb
mov
dec
out
imul
push
dec
ror
inc
and
out
inc
sub
pop
lahf
xchg
fs
fild
(bad)
shr
push
rcr
add
xchg
mov
add
data16
adc
clc
lahf
daa
out
dec
popf
sbb
push
cmp
fidivr
dec
xchg
mov
adc
xchg
loope
or
ds
mov
jno
dec
sub
fs
mov
pop
xchg
jbe
adc
inc
xor
out
call
shl
fdiv
xchg
call
add
xchg
pop
inc
or
outs
inc
call
push
mov
cli
jge
lods
cmp
mov
(bad)
repnz
dec
add
push
jne
dec
ss
mov
das
adc
cmp
xor
sub
rcl
fbld
lea
sbb
pop
jae
out
fsqrt
cmp
in
movs
repz
bound
inc
enter
cmp
ins
neg
dec
push
sub
popf
mov
mov
bound
nop
jecxz
(bad)
push
xchg
enter
push
rcr
cmp
(bad)
inc
jno
in
jecxz
fadd
jb
dec
test
mov
sbb
mov
jp
mov
or
(bad)
sbb
mov
ss
jge
(bad)
jp
test
and
mov
jne
mov
and
pop
dec
ret
push
fmul
mov
bnd
mov
adc
cld
sbb
pop
ss
jo
adc
xor
push
mov
imul
sub
xchg
enter
fisubr
or
loopne
jns
push
inc
xor
cdq
nop
or
mov
jmp
loopne
xchg
pop
test
jmp
mov
inc
xchg
push
xor
jmp
retf
movs
pop
not
loope
cdq
test
(bad)
fist
int
jmp
or
gs
ret
inc
sar
pop
and
ins
pushf
or
mov
push
pop
inc
mov
pop
movs
pop
stos
dec
sub
sahf
sbb
cs
in
repnz
jbe
es
add
xor
sbb
dec
inc
push
aaa
pop
pop
aam
lahf
xor
neg
or
sub
add
enter
xchg
mov
pop
sub
je
or
jmp
icebp
xor
fldcw
mov
mov
(bad)
inc
lods
inc
cmps
pop
cmp
jmp
lea
(bad)
pusha
dec
je
push
shr
scas
push
das
xchg
inc
pop
mov
arpl
cmp
mov
xor
ret
cwde
cli
add
lock
jle
jnp
dec
xchg
xor
inc
loopne
push
mov
aad
int3
mov
xor
les
cmps
sbb
dec
push
clc
xor
daa
into
loop
mov
adc
mov
(bad)
jo
outs
data16
inc
int
call
test
jg
mov
adc
mov
pop
daa
mov
cmp
push
adc
add
aaa
xlat
ror
xor
push
pop
lea
add
ja
lods
inc
ja
int
push
jecxz
xor
pop
dec
nop
dec
popa
xchg
test
xor
pop
fidivr
sbb
push
mov
or
mov
cmc
pop
xor
jl
scas
or
sbb
ins
cwde
cmps
xchg
lods
push
jo
sbb
dec
in
ins
(bad)
push
out
cs
or
cmp
(bad)
scas
xchg
ss
dec
leave
mov
in
push
aas
or
ss
jae
ins
or
dec
sti
pop
mov
ret
sub
and
lods
enter
mov
sub
pop
jp
loop
add
iret
test
pushf
clc
jle
push
xor
sub
mov
(bad)
adc
arpl
and
cmp
jmp
pusha
dec
scas
icebp
fimul
es
lods
(bad)
jmp
iret
xor
popf
cs
dec
lea
xchg
inc
and
mov
push
xor
pop
and
fld
inc
std
ror
ror
aam
dec
sahf
outs
and
pushf
(bad)
pop
test
mov
popa
pop
popa
outs
cmp
addr16
or
pop
sub
cmp
or
in
ret
test
cvtps2pi
mov
xchg
mov
xor
pop
mov
ret
js
stc
pop
mov
adc
scas
push
pushf
jno
call
adc
and
lahf
inc
cmc
enter
inc
mov
push
in
xor
jmp
or
rol
jmp
sub
ins
push
in
in
imul
jbe
dec
retf
aam
jnp
push
jo
and
int
arpl
call
lock
div
push
test
enter
jecxz
into
call
inc
sbb
neg
and
pop
or
xchg
cs
xchg
pop
(bad)
mov
push
sbb
sbb
dec
dec
adc
inc
pop
xchg
pop
jmp
mov
outs
(bad)
pusha
imul
and
mov
ss
mov
push
cdq
(bad)
mov
cmp
add
lods
sbb
es
push
stos
push
xchg
mov
push
push
inc
sbb
jne
test
popa
rcr
dec
push
mov
fldcw
stc
or
sub
push
inc
(bad)
pop
mul
xor
mov
fiadd
inc
mov
sub
cmp
aad
sub
jecxz
ja
retf
or
push
jmp
in
neg
pop
int
add
cmp
lahf
dec
cmp
pop
movs
not
retf
ins
je
aam
pop
jg
add
popa
inc
in
jmp
gs
mov
rol
out
in
fsub
movs
xchg
xor
xchg
imul
add
stos
fsub
(bad)
in
jno
hlt
cmc
xchg
icebp
sub
scas
mov
adc
mov
test
out
push
or
(bad)
jge
vmwrite
dec
shl
lods
ins
psubw
mov
retf
jecxz
mov
cmp
test
call
pop
addr16
fwait
arpl
sub
ror
test
jge
call
cld
test
rol
mov
cld
imul
mov
dec
ret
aaa
int3
ror
test
jmp
push
sub
inc
in
out
inc
ins
loope
loopne
mov
inc
push
lea
sti
jle
dec
pop
xor
nop
or
jle
cmps
in
sbb
movs
ffree
stos
mov
lods
rcr
push
add
ret
mov
inc
lahf
dec
std
rcl
call
int
pop
adc
outs
(bad)
and
pop
test
dec
stc
xor
add
inc
xchg
sub
push
push
cs
aam
call
cdq
dec
int3
cmps
sbb
jbe
call
ja
jmp
arpl
cmc
leave
mov
leave
xor
out
lods
sub
out
inc
aaa
(bad)
outs
mov
pushf
sbb
sub
jmp
jl
adc
shl
mov
fisttp
neg
fadd
ret
mov
sbb
lods
dec
xchg
stos
fild
dec
sbb
ja
fnstsw
sub
cmps
jns
popf
push
mov
inc
movs
ins
fidiv
idiv
mov
ins
mov
iret
mov
inc
enter
pop
in
mov
aam
stc
out
xor
push
mov
cdq
dec
sub
mov
cmp
lea
popa
mov
lock
mov
cmps
pop
out
(bad)
pop
or
dec
call
jg
sub
cmp
mov
lds
adc
push
daa
push
(bad)
pop
(bad)
sbb
pop
cdq
pop
sbb
push
inc
push
pushf
sub
inc
push
xor
push
push
dec
test
pop
in
xlat
xchg
fidivr
sbb
push
mov
stos
sub
mov
addr16
in
add
jae
or
cs
dec
hlt
out
and
int
jno
and
push
inc
pop
test
xchg
mov
mov
mov
inc
ror
hlt
stos
xor
(bad)
cli
sub
stos
cdq
add
retf
mov
or
add
mov
or
jmp
mov
adc
dec
neg
xchg
push
sti
inc
fwait
or
pop
or
outs
mov
push
or
add
adc
gs
enter
xchg
pop
das
and
rcr
ret
jg
rcr
popa
xor
adc
add
sbb
rcr
scas
ja
push
inc
out
xchg
pop
repnz
mov
xor
adc
dec
pop
xor
add
test
mov
mov
nop
xchg
imul
and
fld
sbb
mov
or
push
xlat
scas
data16
aaa
inc
xchg
mov
lds
mov
pop
out
adc
adc
sbb
lock
les
movs
ja
cld
loop
ror
sub
aas
mov
inc
nop
dec
cmp
xchg
pop
(bad)
stc
js
xor
push
sti
jbe
jno
or
mov
xchg
out
xchg
push
cld
push
or
cld
adc
mov
outs
push
cmp
push
or
mov
in
aaa
test
inc
pop
inc
pusha
loope
jg
and
jp
pop
jmp
pop
dec
sbb
or
stos
rol
pop
mov
adc
dec
inc
push
mov
mov
xchg
outs
outs
mov
shl
mov
dec
test
jecxz
call
xor
push
jno
cli
cs
(bad)
call
fist
xor
arpl
test
or
test
imul
cmp
adc
mov
aas
sub
ja
add
or
(bad)
mov
push
pop
cmps
push
adc
jnp
les
pop
fisub
push
stos
xchg
add
xchg
loopne
cmp
mov
mov
mov
das
sbb
loopne
sub
div
mov
or
sbb
push
in
jecxz
push
pop
lahf
in
mov
push
or
das
xlat
push
xor
push
ror
and
xlat
stc
or
sbb
(bad)
in
push
call
sbb
scas
stos
(bad)
push
sub
or
or
cmp
dec
movs
pop
sti
test
xor
idiv
mov
mov
push
sbb
hlt
rcr
dec
and
in
movs
(bad)
int3
push
inc
cmc
add
nop
gs
jmp
cwde
or
les
je
imul
shl
or
cmp
loopne
daa
in
push
xchg
das
pop
lock
xor
and
cmp
sub
pop
dec
jb
pop
sub
sub
test
aam
and
jle
std
jp
test
and
dec
dec
mov
jnp
cmp
mov
sbb
adc
pop
sbb
fsubr
lods
sti
push
dec
sub
mov
mov
cmp
cmp
mov
shl
xor
jnp
pop
xchg
mov
mov
arpl
inc
mov
sub
jae
jbe
add
test
in
mov
pop
gs
push
and
sbb
adc
pop
(bad)
das
into
mov
data16
sub
clc
cdq
inc
inc
push
lods
mov
call
rol
std
inc
cmc
(bad)
movs
std
rcl
aaa
jecxz
in
dec
enter
inc
pop
push
push
or
cmp
jbe
add
add
and
or
jle
or
daa
pushf
add
mov
dec
mov
repnz
in
dec
cld
pop
test
cmp
mov
cli
mov
pop
push
mov
dec
mov
sbb
pop
add
pop
lods
jb
nop
mov
imul
jno
jb
in
mov
js
and
and
sub
xlat
or
loopne
xchg
cld
jns
sahf
pusha
push
xchg
xchg
sbb
add
mov
push
and
push
adc
or
mov
shl
fnstenv
ds
in
jg
loop
mov
test
call
sbb
outs
dec
repnz
pop
cmps
int
enter
jo
pop
jl
mov
out
mov
cmp
mov
jecxz
push
stos
rcr
ins
cmp
or
sub
mov
inc
in
mov
mov
(bad)
pop
jecxz
scas
sti
fidivr
xchg
imul
lahf
popa
inc
pop
jmp
addr16
sbb
push
mov
mov
ror
jbe
hlt
int
add
mov
push
bound
add
test
nop
push
inc
retf
mov
stc
xor
add
inc
sbb
xor
retf
sub
fdivr
ret
xchg
fdivr
sub
dec
xchg
retf
shl
cmp
je
jecxz
xor
cmp
lods
mov
mov
int
shr
jmp
mov
cdq
cmp
or
or
cmp
push
les
test
dec
jo
push
aas
mov
or
mov
add
dec
mov
cld
mov
jmp
daa
sub
sub
xor
jno
pop
inc
mov
movs
fwait
adc
mov
loop
pusha
leave
sub
cwde
jge
fst
add
sti
bound
movhps
pop
mov
movs
outs
fisttp
in
bound
cmp
lock
out
push
dec
test
or
sbb
sbb
test
jecxz
das
jb
into
inc
dec
(bad)
and
inc
(bad)
push
dec
jmp
shl
xchg
mov
int
sub
xor
jle
lds
ds
mov
pop
popa
out
dec
xor
pusha
stc
mov
test
adc
inc
inc
push
mov
test
mov
ins
aad
mov
retf
dec
pop
das
fstp
push
xchg
jne
push
push
out
fs
jbe
inc
in
bound
cmps
xor
pop
or
popa
xchg
push
aas
rcr
stc
mov
xor
ja
shr
sar
sub
mov
lds
mov
add
push
pop
scas
push
and
mov
scas
sbb
mov
push
mov
pop
daa
fmul
dec
sahf
addr16
pusha
push
dec
sub
ret
call
nop
in
pop
cwde
ret
into
(bad)
sbb
pop
cmp
in
idiv
das
daa
or
mov
mov
inc
ds
dec
xor
ins
lods
mov
imul
cdq
imul
adc
dec
and
add
repnz
adc
jecxz
sub
fidiv
cld
jb
pop
ret
(bad)
push
jmp
and
add
mov
ds
xor
mov
into
or
pop
fld
gs
inc
ror
add
adc
arpl
push
fbstp
sbb
mov
xor
in
hlt
mov
shl
daa
jbe
daa
fild
dec
jg
xchg
xchg
jae
addr16
inc
popf
rcr
cli
fsub
enter
dec
rcl
shr
pop
xchg
cmp
sbb
sbb
call
mov
int
jle
xchg
mov
fadd
out
xchg
aas
sbb
sub
adc
repnz
adc
sub
inc
jmp
inc
mov
xor
rol
aad
inc
in
test
push
arpl
int3
cmp
gs
mov
cmp
mov
aas
push
lock
bound
fcomp
aam
in
or
repnz
aaa
jp
rcr
int3
mov
(bad)
hlt
xchg
cwde
int3
mov
mov
dec
push
xchg
sub
scas
in
add
dec
inc
dec
adc
es
xor
inc
sub
sub
inc
mov
loop
inc
xchg
cmps
cmps
and
dec
mov
vmread
mov
ins
mov
jnp
out
call
xor
inc
push
and
mov
xor
push
add
lock
jmp
fist
sbb
or
fcmovnb
retf
fs
adc
pop
cli
pop
scas
or
fwait
outs
mov
fistp
jo
mov
shr
jns
test
sub
adc
cmp
mov
xor
fsubr
nop
or
ret
xsaves
xor
xor
test
mov
out
(bad)
and
push
cli
xchg
dec
movs
dec
inc
cmps
pop
inc
or
sti
dec
push
clc
push
cwde
stc
pop
(bad)
loop
sbb
jg
mov
jg
cmp
call
jnp
mov
fdiv
push
mov
jp
shl
dec
mov
sub
cmps
cmp
(bad)
lock
mov
mov
jns
cmp
and
jmp
fwait
mov
cs
mov
mov
pop
clc
leave
or
sar
iret
loope
in
test
and
sar
mov
xchg
fwait
outs
mov
cs
cmc
fistp
mov
sbb
rcr
sub
shl
xor
mov
cwde
scas
mov
(bad)
pop
fimul
iret
jae
out
mov
mov
into
jne
pop
push
shl
xchg
jp
xor
out
jnp
cwde
jbe
and
mov
inc
xor
retf
sbb
inc
mov
std
xchg
ss
rcl
icebp
repnz
sbb
mov
sub
outs
sub
stos
pop
nop
sub
pop
jmp
cdq
mov
pop
and
mov
stos
jecxz
not
add
mov
jmp
mov
into
jp
retf
dec
fucomi
loope
xor
jle
pop
mov
or
psubusb
movs
(bad)
ficomp
mov
xchg
adc
adc
push
int3
retf
loopne
push
ret
pop
out
add
and
daa
adc
mov
ret
inc
fidivr
jge
cmp
(bad)
loopne
sub
imul
pop
push
mov
ins
xor
push
add
mov
clc
ss
bound
jnp
ss
shl
cmp
jbe
and
push
cmc
es
or
add
lods
sub
(bad)
push
xor
and
jge
loop
adc
addr16
jns
fcomp
cmp
jbe
out
scas
lss
ins
ins
cmp
or
fild
add
jnp
adc
sub
test
ja
push
or
js
jnp
pop
(bad)
aas
or
xchg
cmp
shl
call
cmp
fimul
adc
in
jo
jo
sbb
cwde
sbb
mov
mov
pop
retf
or
cmp
ret
call
xchg
add
fwait
pop
or
fdiv
xor
rol
push
add
js
and
and
pop
popf
xchg
jns
inc
xchg
push
sbb
scas
dec
inc
jbe
into
(bad)
sbb
pop
into
movs
pop
xchg
jae
outs
stos
(bad)
frstor
cmp
fistp
sbb
push
ficom
push
mov
fisub
add
pop
mov
jge
mov
(bad)
scas
lahf
mov
stc
push
fsub
jmp
and
mov
sbb
mov
pop
cmp
icebp
and
fild
adc
push
mov
push
es
mov
jp
pop
call
lahf
cmc
fsub
enter
sar
loop
leave
sti
add
data16
or
test
stos
xor
jmp
hlt
repz
add
icebp
mov
sbb
cmps
cmps
jg
scas
mov
ret
pop
xchg
(bad)
jb
test
and
push
pop
stos
push
popa
cmps
test
xor
xor
push
mov
setl
mov
and
retf
and
out
neg
sub
(bad)
or
and
push
in
push
popf
cmc
xchg
push
out
into
mov
inc
imul
or
xchg
jne
popa
inc
je
jns
fwait
ror
adc
aam
xor
mov
hlt
mov
jmp
add
pop
neg
das
and
xor
jge
lds
mov
mov
sub
xor
mov
mov
xchg
idiv
lods
xchg
test
jecxz
cdq
cmp
je
pop
call
movs
mov
sbb
popa
inc
test
inc
jecxz
inc
jne
inc
cmc
jnp
cdq
jb
mov
mov
jp
or
push
push
sbb
scas
push
inc
in
xor
mov
add
pop
fisub
adc
cld
imul
and
pop
xchg
cmp
cmps
add
lea
dec
scas
repnz
sub
mov
sti
mov
retf
jmp
lods
sti
xor
in
repz
test
add
div
leave
jl
push
ror
xor
mov
pop
loopne
or
scas
pop
or
xchg
xchg
shl
cwde
mov
fistp
or
xchg
lods
popa
scas
sbb
push
add
xchg
mov
add
xor
xor
and
dec
add
mov
xchg
test
pop
sar
in
mov
adc
and
ja
rcl
cmp
fstp
mov
mov
push
jmp
div
jl
xchg
aam
idiv
shl
mov
movs
stos
adc
inc
lods
push
out
jbe
mov
lahf
or
mov
mov
pop
or
in
rol
mov
xor
lds
sub
loope
outs
inc
mov
cli
cmps
add
shr
and
xchg
add
ret
ret
add
or
dec
pop
popf
xchg
mov
mov
xchg
and
push
sub
inc
mov
or
xor
enter
sub
adc
out
jno
mov
shr
xchg
mov
out
(bad)
ds
data16
fimul
push
xchg
jae
xor
push
or
mov
add
adc
int3
inc
inc
xor
dec
pop
ds
movs
lods
popa
(bad)
loop
pop
push
mov
pop
(bad)
or
mov
pop
push
push
imul
sti
js
lods
aaa
push
xchg
fs
mov
sub
pop
lock
les
(bad)
fcom
(bad)
xchg
xor
jne
cdq
(bad)
out
jl
(bad)
jne
retf
in
fld
pop
sar
out
jns
pop
push
ror
push
pop
xor
ret
ins
cmp
icebp
add
les
and
mov
cmp
cmp
add
mov
mov
sbb
sbb
ins
ret
push
outs
or
imul
cs
and
push
sub
push
addr16
dec
iret
xchg
mov
ds
in
dec
mov
add
mov
push
lds
call
mov
in
jl
call
inc
cli
pop
pop
nop
lods
icebp
mov
aas
dec
mov
movs
int3
jo
inc
mov
push
out
push
sub
mov
mov
push
repnz
enter
les
adc
fcmovne
pop
adc
pop
rol
gs
sbb
add
data16
fst
xor
pop
mov
js
pop
ds
into
push
jne
mov
scas
int
add
stos
jb
xor
ror
call
mov
sahf
nop
rcl
cmps
xchg
mov
rcl
mov
repz
inc
frstor
jmp
mov
xor
cdq
into
retf
jnp
(bad)
or
pop
(bad)
lods
dec
push
enter
jmp
mov
cwde
aas
fisub
and
or
dec
cmp
cmp
ins
mov
ds
aaa
mov
jmp
jmp
pop
shr
push
sar
and
cmp
lea
pop
fist
or
or
and
cmp
mov
sub
in
(bad)
mov
ins
stos
pop
jae
mov
sub
pop
sbb
pop
pop
jo
repnz
rcl
or
icebp
loop
mov
push
loopne
inc
leave
mov
mov
or
loop
add
in
loopne
imul
mov
cwde
xchg
stos
xrelease
fistp
clc
pop
fsub
inc
in
sub
ss
sbb
ret
add
xor
aad
dec
pop
dec
test
pop
aas
inc
cmc
aam
sbb
sub
out
mov
xchg
fld
pusha
jnp
push
test
xchg
imul
jmp
and
shl
dec
sbb
xor
cmp
jl
jmp
popf
cmp
ss
jl
sti
mov
out
popf
ffree
popa
push
aas
mov
sub
lock
pop
pop
pop
push
lea
fs
cdq
ret
cmp
pop
out
iret
adc
popa
sti
gs
inc
mov
push
ins
push
cli
shl
mov
and
jmp
lods
in
test
cmps
daa
mov
push
push
pop
out
xchg
add
fdivrp
fidivr
mov
stos
jmp
jo
or
fadd
div
enter
loopne
xchg
int3
xchg
jo
jns
jae
xchg
adc
outs
sub
adc
adc
adc
xchg
push
rol
je
cmps
pushf
enter
stc
call
mov
push
push
xlat
in
or
mov
cmp
loop
push
and
cwde
dec
mov
(bad)
fistp
in
and
retf
scas
add
sar
sub
mul
xlat
(bad)
mov
sbb
mov
aaa
dec
push
pop
dec
and
ror
pop
mov
lea
mov
lock
sub
enter
ja
sbb
and
dec
dec
push
iret
pop
nop
mov
push
jbe
inc
in
cmp
rol
ficom
fcmovbe
clts
mov
es
aad
and
xchg
fwait
call
add
add
fidivr
shl
popa
and
and
in
jns
pop
inc
movs
scas
(bad)
rol
retf
pop
sbb
inc
dec
or
cmp
leave
mov
dec
cmp
cmp
and
mov
lea
fidiv
popa
cmc
cmp
cld
shl
fisubr
mov
retf
jmp
ret
ins
cmp
mov
mov
imul
pop
(bad)
or
mov
sbb
ja
sar
test
mov
(bad)
or
fisubr
adc
cld
push
push
ret
addr16
unpcklps
dec
loope
fldenv
aad
mov
sar
aaa
rol
in
inc
xchg
mov
mov
cmc
sar
int
out
dec
jle
hlt
loopne
inc
or
pop
inc
jbe
jb
jg
out
pusha
out
mov
push
xlat
shl
or
ret
xchg
retf
cld
in
adc
xor
test
aas
gs
xor
add
test
pushf
adc
iret
dec
pop
and
xchg
int3
add
xchg
imul
sub
jmp
cdq
jmp
pusha
sti
push
cmp
pusha
cs
jae
neg
stos
jge
jbe
rcl
fwait
arpl
mov
push
xchg
sahf
push
adc
jno
jbe
cmp
and
dec
mov
in
xchg
sbb
scas
jo
das
in
mov
dec
mov
jle
outs
in
xchg
jb
cmp
enter
inc
sbb
or
dec
sub
fxtract
test
xor
int3
push
nop
dec
test
call
sub
fwait
test
dec
ss
ins
push
push
and
sub
mov
pop
cmp
or
adc
mov
cmc
andps
(bad)
push
scas
test
in
lods
push
cmp
jns
cmp
push
shl
pushf
iret
(bad)
clc
ss
sub
mov
lods
sti
mov
mov
jmp
jbe
aad
mov
lds
std
into
stos
xchg
or
jae
adc
fstp
mov
imul
out
out
sbb
(bad)
lahf
cmp
pusha
push
js
sbb
(bad)
pop
xor
repz
and
push
mov
pop
dec
xchg
popf
cmps
jge
sub
enter
popa
or
or
jp
xor
sbb
and
(bad)
sub
mov
or
push
ret
inc
mov
jp
xlat
call
xor
adc
dec
movs
cmc
dec
addr16
cmp
aam
or
(bad)
mov
sbb
repnz
pop
stc
faddp
dec
jnp
ret
sub
pop
mov
push
popf
adc
sub
or
inc
repnz
mov
(bad)
mov
sti
mov
ins
xlat
pop
cmp
scas
xlat
push
xchg
mov
outs
shr
jl
adc
mov
std
adc
in
lock
popa
or
sti
sar
test
rcl
aam
mov
cwde
mov
out
into
lahf
pop
outs
xchg
inc
(bad)
dec
pop
dec
mov
call
sub
pop
ins
xor
dec
jecxz
jmp
sar
xlat
jns
mov
sti
sbb
repz
out
cmp
loope
ja
js
xchg
repz
adc
outs
push
xor
push
adc
mov
push
push
lods
xchg
les
add
pop
and
fs
push
mov
or
sbb
push
sti
fucom
shl
jecxz
push
test
lods
adc
inc
ror
and
icebp
cdq
xor
mov
lods
not
(bad)
pop
call
sbb
ret
push
icebp
jecxz
jmp
ja
iret
xlat
xor
popa
fucomi
leave
imul
jmp
out
data16
fs
push
movs
leave
or
xor
pusha
int3
loope
nop
jle
pop
repz
mov
loopne
jno
jp
cmps
test
xchg
sbb
mov
je
and
lock
mov
jmp
cmp
mov
ins
into
mov
jo
jae
cmp
mov
or
xor
jl
lock
repz
xor
daa
(bad)
sti
xor
jae
fisttp
test
jmp
loop
add
lds
aaa
(bad)
sub
mov
(bad)
cs
das
test
shl
ins
das
(bad)
retf
(bad)
mov
ds
or
jb
ds
das
cmp
test
and
sahf
loop
es
xlat
jle
test
or
add
xchg
int3
data16
jecxz
sub
pop
mov
push
mov
jb
jmp
test
and
and
shr
add
lods
sbb
fmul
lods
in
add
hlt
sbb
pop
mov
inc
xchg
add
ja
jo
int3
sti
cs
scas
neg
sub
and
and
jmp
push
out
adc
fcomp
jg
add
imul
dec
push
mov
je
xchg
xchg
jae
arpl
push
push
xor
push
sbb
retf
mov
sub
jmp
sub
les
imul
lods
mov
pop
jp
or
jmp
fnstcw
fadd
pop
and
lods
je
add
lahf
mov
(bad)
dec
jmp
cmp
add
lods
add
daa
push
dec
dec
fcmove
out
pop
adc
(bad)
pop
mov
lods
inc
jne
in
push
mov
adc
sbb
js
clc
in
neg
push
adc
cmp
xlat
jle
sbb
push
repnz
loope
xlat
jmp
shl
(bad)
xchg
sbb
in
mov
xchg
push
in
shl
or
xor
in
imul
cli
and
adc
jne
mov
jge
pusha
test
mov
xchg
pop
in
ficom
mov
lock
sub
pop
lods
push
add
jno
xchg
cli
(bad)
jmp
pop
movs
push
cmp
stos
sub
pop
lock
clc
mov
sub
pusha
push
or
shl
popa
and
scas
jg
xor
sub
inc
aas
or
lea
push
mov
pop
imul
xchg
and
push
imul
rcl
sbb
cmp
clc
in
push
scas
in
ins
xchg
inc
int3
ja
mov
pushf
pop
imul
ins
shl
aas
sahf
fs
mov
push
movs
dec
jne
test
outs
cmp
pop
mov
lods
xchg
pop
pop
add
dec
dec
and
mov
jge
icebp
push
sbb
int
inc
jge
cmp
adc
bound
cwde
sub
pop
mov
ret
aas
aas
lds
sub
sub
adc
sub
out
out
std
daa
lds
cld
outs
mov
push
cld
pop
cmp
adc
push
sbb
test
mov
or
outs
sbb
popa
mov
(bad)
jle
cmp
jp
or
out
stos
jb
int3
jmp
sbb
and
int
fst
fcomp
cmp
mov
sub
sub
jae
outs
jp
(bad)
dec
mov
sub
fild
adc
pop
imul
or
push
fwait
add
xchg
mov
mov
pop
fs
je
mov
xchg
rcr
adc
cmp
hlt
ins
cmp
dec
lea
stc
sbb
inc
imul
neg
add
in
into
fdivr
add
sub
aaa
sbb
outs
or
ret
imul
gs
adc
push
sbb
cdq
sub
in
jp
int
dec
aad
adc
dec
xchg
push
dec
ss
les
mov
cmps
dec
pop
call
pop
jns
xchg
inc
and
jae
ins
fwait
iret
inc
sbb
sbb
cmp
aaa
in
sahf
xchg
push
add
out
lahf
lock
dec
pushf
push
xor
jecxz
jmp
fwait
xchg
inc
je
dec
jle
sbb
dec
jmp
sub
add
rcl
retf
jmp
and
mov
movs
daa
sbb
and
xchg
mov
xchg
dec
add
test
xchg
sets
fldenv
aad
mov
xchg
dec
mov
call
jb
pop
pop
push
sbb
xlat
jle
sbb
sub
lods
clc
cld
(bad)
jno
es
lahf
push
cmps
call
sbb
lahf
adc
push
and
mov
pop
xor
add
mov
mov
sbb
cs
into
div
and
js
stc
pop
ror
cmp
loope
or
sub
stc
call
sub
mov
add
out
pop
pusha
dec
dec
ret
les
xor
or
mov
mov
inc
dec
dec
sub
test
sub
mov
retf
cdq
dec
push
jmp
cmp
mov
(bad)
nop
inc
out
pop
mov
neg
xor
jne
arpl
cs
retf
inc
jno
jle
inc
or
push
int3
mov
pop
lods
mov
lods
add
pop
ret
xor
out
push
imul
loopne
add
xchg
dec
xchg
sbb
jo
mov
js
call
fldenv
imul
test
repnz
adc
(bad)
(bad)
das
fcomip
jnp
mov
pop
int3
icebp
dec
cli
movs
imul
leave
(bad)
add
xor
leave
hlt
cdq
fadd
popa
mov
jge
adc
rol
dec
out
jno
xchg
adc
mov
cmp
ins
xor
jnp
fstp
xor
dec
or
dec
cwde
test
fxch
push
xor
or
pop
int
push
retf
cld
pop
call
shr
xor
adc
cli
ret
inc
xor
in
div
nop
fcomi
pop
or
loop
aas
sahf
and
push
mov
push
dec
sub
loopne
mov
scas
jno
iret
mov
pop
outs
int
fyl2xp1
popa
cmc
aaa
popa
ficom
in
mov
jmp
aam
or
retf
loopne
mov
cmc
jl
outs
movs
push
dec
and
or
dec
sub
cmc
in
test
je
lods
push
sbb
adc
xchg
ss
inc
bound
fstp
mov
inc
mov
lock
push
add
mov
or
mov
fldenv
mov
pop
outs
cmps
xchg
mov
cwde
sub
movs
xchg
inc
sti
sub
push
in
mov
cmc
js
mov
fistp
scas
and
jmp
aad
test
mov
ret
cwde
or
dec
cmp
stos
ja
fidivr
mov
adc
stos
xchg
cmc
and
(bad)
(bad)
std
add
jp
or
inc
add
ret
add
add
aaa
mov
or
ds
push
hlt
nop
mov
cs
ret
call
mov
int3
sbb
rcr
fadd
lods
mov
sub
xlat
lds
mov
pop
push
(bad)
mov
push
arpl
xchg
shr
(bad)
fisub
repnz
ficom
adc
shr
xor
(bad)
mov
cmc
daa
adc
int
mov
xchg
scas
in
js
sbb
and
jg
mov
sti
ss
or
rol
adc
mov
pop
mov
and
cmp
ins
jno
inc
std
cwde
xchg
push
stos
cmps
pop
inc
bound
push
pop
jns
lahf
outs
cdq
push
mov
and
out
adc
mov
loopne
push
sub
iret
xor
adc
push
jbe
mul
movs
outs
repnz
leave
adc
push
inc
aaa
retf
jmp
push
add
and
or
lods
loopne
sub
(bad)
pop
retf
sbb
(bad)
movs
fsub
add
stos
mov
repnz
retf
dec
out
push
les
(bad)
lahf
xor
push
repnz
into
cmc
mov
inc
adc
mul
mov
fld
xor
jl
repnz
or
push
fdiv
xor
stc
inc
mov
mov
cmc
(bad)
mov
xchg
and
pop
mov
sti
inc
inc
inc
addr16
rcl
dec
idiv
mov
nop
push
mov
lock
cwde
arpl
out
mov
dec
dec
cmp
in
loope
rol
jp
pop
add
das
and
movs
(bad)
mov
cmp
repnz
push
repnz
imul
in
inc
in
fld
push
iret
(bad)
adc
mov
outs
pop
xor
mov
sbb
add
xchg
bound
sub
mov
sahf
inc
sub
ja
inc
fisub
sbb
add
adc
call
jle
or
mul
xchg
sub
adc
push
cwde
push
mov
shl
xchg
adc
xchg
mov
push
ins
jnp
les
sti
xchg
sbb
dec
jns
gs
add
or
popa
retf
jns
mov
inc
(bad)
inc
or
xchg
imul
pop
leave
xchg
ret
push
push
push
stos
fwait
push
js
adc
rcr
test
aas
sub
dec
xchg
pop
and
adc
ror
mov
dec
dec
fiadd
imul
xchg
std
or
mov
push
shl
sti
ins
ss
or
loope
inc
mov
lahf
mov
sub
jle
mov
mov
push
xchg
loope
lods
inc
jle
(bad)
cdq
mov
cmp
jns
and
(bad)
and
into
sbb
xor
ja
dec
fsubr
sub
ins
jo
out
and
adc
not
pop
daa
cmp
fisubr
push
mov
mov
int
sbb
rol
shr
pop
ss
out
push
mov
cmc
in
mov
cli
push
or
adc
sahf
mov
pop
sub
add
nop
sti
push
les
fadd
cmp
mov
sar
mov
pop
rcl
fcom
(bad)
sar
sahf
and
aaa
add
jo
sahf
inc
and
push
add
or
mov
dec
sbb
movs
ja
ficomp
cmp
cli
and
sub
ss
mov
fnstsw
pop
mov
add
inc
cmp
jo
neg
in
fist
add
cmc
dec
adc
add
sbb
test
(bad)
nop
push
or
sahf
cmps
popa
mov
xchg
cs
les
imul
dec
jne
pop
loop
sub
xchg
cmps
jnp
popf
rol
(bad)
aad
push
cli
clc
jecxz
mov
xor
xchg
jle
pop
repnz
or
adc
adc
push
shl
fbstp
or
ins
retf
enter
and
mov
mov
gs
sub
and
mov
test
test
jne
test
daa
dec
cmp
push
inc
mov
daa
dec
scas
nop
jns
mov
or
xor
ss
xor
cmp
gs
adc
cmp
and
sbb
shl
dec
jne
jecxz
push
dec
jecxz
loopne
daa
jnp
sti
push
inc
xchg
inc
sbb
xchg
gs
ret
fmul
retf
inc
ret
retf
sub
mov
jecxz
leave
jmp
mul
imul
aaa
add
pop
cmp
add
inc
push
mov
lock
stos
stos
pop
push
in
loop
shl
and
dec
mov
dec
and
mov
sbb
sub
pop
mov
test
jg
(bad)
push
mov
shl
mov
test
gs
pop
loop
push
dec
aad
jo
sbb
dec
call
dec
or
mov
add
movs
cli
add
leave
mov
and
jle
ret
out
mov
jno
sub
ret
cli
mov
jle
cmp
loopne
in
cmp
imul
jno
jae
inc
mov
pusha
mov
retf
retf
sbb
hlt
push
inc
xchg
test
jb
add
mov
or
stos
call
imul
pop
push
lods
call
inc
xchg
sub
mov
aaa
jl
cld
repnz
mov
adc
dec
test
inc
mov
repnz
(bad)
xor
test
jl
sbb
movs
ja
dec
inc
xor
pop
ins
and
push
inc
mov
(bad)
in
and
movs
shr
jp
jmp
test
cmp
(bad)
into
data16
sbb
out
add
or
jae
les
mov
dec
(bad)
lds
shl
lods
inc
cmps
in
push
sub
add
fistp
and
xor
div
cmp
cmp
clc
dec
add
cmp
dec
inc
and
and
dec
fisttp
gs
mov
mov
adc
xchg
inc
push
or
sub
mov
out
lea
pop
loope
adc
jno
add
mov
pop
sbb
int3
xor
cwde
adc
mov
dec
fst
imul
add
mov
xchg
pop
inc
dec
hlt
adc
cld
inc
pusha
(bad)
mul
sub
cdq
lahf
pop
scas
dec
sbb
mov
daa
mov
loop
xchg
mov
lods
dec
mov
or
ins
sbb
movs
xchg
icebp
fsubr
(bad)
pushf
mov
or
aas
cmp
lods
dec
xchg
dec
je
ret
inc
int
xchg
idiv
mov
call
std
(bad)
and
(bad)
mov
std
xchg
adc
jae
jp
mov
sbb
out
mov
neg
ret
xchg
xchg
imul
les
dec
mov
xor
test
popf
into
arpl
cld
outs
xchg
ss
add
jge
mov
or
jb
mov
inc
lods
movs
dec
in
mov
xchg
fisub
push
repz
std
lds
add
jge
lods
je
xchg
push
push
inc
inc
sub
in
and
arpl
into
jle
and
xor
xchg
jmp
jno
out
add
dec
jl
pushf
movs
mov
or
push
sbb
mov
scas
jo
out
adc
or
stc
cmp
test
adc
sub
sbb
in
mov
enter
cld
test
out
mov
daa
sbb
push
jg
pop
mov
shr
and
dec
ins
jae
inc
inc
sbb
stc
mov
pop
or
sbb
(bad)
sti
jmp
arpl
sub
arpl
int3
fld
je
cmp
(bad)
pop
hlt
mov
aam
or
gs
ja
jns
and
pop
xchg
mov
jb
not
jb
sub
sub
mov
and
dec
call
adc
mov
shl
imul
scas
add
mov
push
imul
rcr
inc
leave
aas
push
add
pop
inc
mov
mov
ins
aad
sahf
dec
mov
xlat
sahf
and
adc
xchg
rol
gs
aas
inc
rcl
add
or
dec
bound
pop
pop
mov
push
cdq
lock
inc
call
push
les
enter
out
out
scas
std
xor
imul
cmp
movs
ror
xchg
test
jmp
into
xchg
test
imul
and
xor
inc
xor
jmp
jecxz
fcmovnb
adc
pop
loopne
test
ficom
jne
pop
or
movs
stos
dec
fdiv
inc
stc
xchg
pop
inc
and
dec
sub
outs
enter
xchg
int
jmp
mov
mov
xchg
push
push
inc
hlt
jle
mov
inc
xlat
lods
cmp
inc
adc
into
ss
ret
dec
das
fisttp
les
push
cwde
mov
sbb
iret
aad
push
and
mov
cmc
cmp
lods
out
test
dec
popa
cli
imul
sbb
sub
xchg
and
test
push
xchg
out
icebp
mov
inc
repz
mov
or
int3
(bad)
cdq
add
retf
push
xchg
das
fnstsw
inc
fwait
jle
push
pop
xor
sbb
push
cmps
les
sbb
movs
xlat
push
xor
inc
test
pusha
push
jg
mov
cs
push
jecxz
mov
outs
inc
mov
jns
push
xchg
loope
clc
pop
sub
or
jae
fisub
mov
scas
ror
pop
jns
ja
(bad)
xor
or
jl
sbb
imul
outs
lds
shl
or
retf
sub
mov
hlt
jp
mov
push
cmp
lods
xor
mov
jb
mov
cs
stos
js
inc
sub
mov
stos
fidiv
add
movs
frstor
gs
pusha
mov
dec
mov
les
gs
xor
in
jns
in
pop
pop
dec
sub
xchg
pop
add
mov
stos
xor
out
cmps
mov
mov
(bad)
jne
adc
fwait
leave
fsubr
pop
adc
movs
retf
inc
and
retf
xchg
sahf
pop
lods
neg
mov
and
push
or
dec
ret
xor
pop
les
push
lods
adc
xchg
mov
enter
xor
pop
mov
in
adc
and
movs
xchg
inc
in
adc
shr
arpl
cmp
out
or
ja
jle
outs
dec
xor
mov
gs
push
outs
xchg
es
xor
movs
or
arpl
mov
dec
xchg
xor
imul
add
repnz
jecxz
pop
aas
adc
sub
jno
add
loope
dec
xchg
cmp
out
cmc
mov
mov
fst
inc
out
ins
mov
push
push
lahf
or
aam
push
jge
fcomp
pop
mov
cwde
push
stos
stos
movs
loope
sub
jecxz
inc
loop
test
push
add
scas
cld
out
xchg
into
sub
cmp
aad
dec
dec
sbb
cwde
push
jo
outs
repnz
push
js
icebp
mov
mov
je
pop
push
mov
stos
jmp
push
push
stos
dec
mov
lea
pop
sub
xchg
and
(bad)
loope
inc
and
dec
addr16
out
dec
(bad)
out
(bad)
retf
lds
sub
add
pop
sub
jnp
loopne
test
(bad)
mov
retf
out
jmp
rcr
outs
pop
push
(bad)
xchg
push
pop
aas
cmpxchg
push
int
add
lahf
xor
ds
stc
jmp
sub
sub
sbb
xchg
in
pusha
fwait
cmp
add
sub
pop
sahf
arpl
rcl
sar
mov
mov
jnp
fwait
lds
pop
push
mov
xchg
std
mov
mov
daa
jo
jp
out
push
xor
(bad)
ret
call
stos
daa
(bad)
sub
loop
or
(bad)
sti
add
add
in
sub
sbb
sub
inc
outs
into
aad
sbb
xor
dec
std
xchg
sub
mov
sbb
jecxz
add
xor
pop
sub
cmp
xchg
sbb
les
imul
sub
data16
sbb
enter
dec
test
cmp
jo
pop
jecxz
(bad)
mov
jne
jecxz
enter
xor
jnp
xor
js
xor
pop
inc
popf
inc
inc
and
pop
jmp
mov
pop
cmp
mov
jmp
add
pop
clc
aad
inc
js
mov
mov
fnstenv
sbb
adc
push
pop
push
outs
jo
or
mov
pop
cmp
retf
out
popf
ins
fucomip
add
jb
in
leave
in
ror
stc
sub
(bad)
call
jno
inc
repz
mov
xchg
xchg
jp
cmp
int3
sub
mov
and
adc
(bad)
int
pop
rcr
cmp
dec
ficomp
movs
add
sbb
xor
dec
pop
mov
cwde
mov
fld
es
push
movs
or
mov
dec
lods
cmp
je
(bad)
cmp
addr16
mov
cdq
dec
into
dec
mov
test
cmp
add
mov
fnsave
loopne
add
mov
ins
cmp
mov
outs
sub
das
dec
leave
cmps
aam
lods
mov
mov
scas
mov
jle
sbb
bound
sbb
add
test
stos
xchg
inc
ror
int3
cdq
cld
pop
repnz
dec
outs
jmp
mov
adc
xlat
call
push
sub
jno
mov
cdq
dec
mov
enter
clc
push
shl
aas
mov
dec
dec
sub
add
adc
pop
mov
lods
rol
add
addr16
xchg
pop
nop
retf
and
mov
mov
jno
mov
lahf
adc
out
not
jecxz
mov
xor
out
mov
xor
xchg
jb
cmp
dec
jb
mov
out
popf
sub
popf
paddsb
mov
pop
outs
cmp
dec
jg
pop
sbb
cs
sbb
ins
sub
sahf
inc
sub
jmp
lock
nop
retf
das
and
push
xchg
out
add
fidivr
neg
shl
popa
dec
fiadd
mov
outs
jno
jecxz
mov
and
mov
(bad)
xchg
fistp
pop
addr16
clc
(bad)
or
mov
int
or
aaa
adc
(bad)
jecxz
inc
test
in
mov
fbld
sub
outs
cmp
movs
cs
imul
inc
out
mov
inc
fwait
int
in
cs
xor
push
dec
movs
int3
inc
push
into
(bad)
pop
jmp
pop
aaa
push
inc
mov
enter
lds
vmread
dec
sub
fstp
add
out
int
sahf
out
daa
and
pop
pop
xor
sub
jle
leave
inc
bound
fisubr
movs
jg
stos
push
movs
jl
neg
es
sbb
je
(bad)
div
sbb
and
std
push
mov
es
push
int3
and
xor
test
jecxz
sbb
scas
dec
popa
je
outs
mov
or
xchg
xrelease
adc
xchg
sub
or
lods
add
aas
push
ss
inc
mov
hlt
in
push
daa
inc
data16
adc
retf
jg
jle
push
(bad)
push
pop
adc
cmp
stos
mov
xchg
xor
ret
loop
mov
push
jmp
mov
aas
pop
test
pop
in
mov
dec
and
fadd
push
mov
ja
ins
lods
cmps
(bad)
pop
mov
das
adc
ss
test
pop
dec
mov
mov
out
push
repnz
mov
adc
leave
push
out
sbb
xchg
mov
imul
xor
sub
jae
or
ss
mov
mov
inc
mov
int3
int
test
test
push
jp
xchg
stc
fstp
(bad)
xchg
dec
dec
(bad)
mov
ja
loope
cli
shl
rcr
jge
mov
and
mov
test
mov
stc
jecxz
std
cmp
push
mov
mov
xchg
cmp
loopne
push
inc
mov
or
cmp
push
inc
(bad)
dec
stc
in
sbb
fwait
dec
mov
fs
mov
dec
add
push
pusha
jp
aas
aam
std
dec
arpl
or
xchg
xor
ds
xlat
lods
pop
std
retf
call
ret
sbb
aad
and
push
mov
jmp
push
push
(bad)
fwait
and
mov
push
xor
jl
cmc
cdq
cs
loope
cs
in
popf
xchg
gs
pop
fild
sti
sub
(bad)
dec
dec
test
adc
cmp
repz
sti
add
xor
jg
out
jo
mov
lea
popf
inc
out
out
in
xlat
ret
push
inc
pop
mov
mov
(bad)
mov
(bad)
aam
mov
repz
stc
out
js
sbb
xchg
sbb
xor
pop
xor
inc
push
fdivr
inc
jmp
xchg
fs
sub
call
je
mov
(bad)
fs
add
cmp
jns
or
into
jp
mov
jl
adc
(bad)
cmp
or
mov
dec
in
das
jg
cld
ss
(bad)
cmp
and
inc
mov
cwde
in
mov
imul
int3
adc
cmp
in
test
mov
push
jae
bound
dec
sbb
outs
imul
xchg
mov
dec
or
inc
pop
and
xlat
fwait
lea
ret
repz
out
jecxz
sbb
or
mov
and
dec
addr16
fnstsw
push
mov
inc
sub
daa
shl
mov
push
clc
outs
xlat
dec
js
jg
mov
push
mov
in
fsubr
repz
les
out
lds
xor
xchg
mov
xor
mov
cmp
pusha
push
sar
or
out
sti
scas
jmp
iret
push
stos
add
xor
(bad)
clc
pop
mov
push
mov
push
mov
pop
cs
xchg
pop
sti
fistp
shl
(bad)
xlat
inc
stos
add
aad
jmp
popf
inc
repnz
push
repnz
jle
lea
xchg
cli
sub
mov
sbb
sub
out
mov
xchg
aad
out
fisttp
mov
sbb
pop
jb
inc
adc
mov
sub
js
fcomp
pause
aad
sbb
mov
loopne
push
inc
stos
imul
and
sbb
(bad)
scas
cwde
jp
ss
xor
pop
xchg
icebp
leave
clc
jno
repz
fdivr
cdq
in
(bad)
fcom
mov
fnstenv
mov
sub
mov
inc
jo
mov
sbb
cwde
mov
push
xor
jns
dec
outs
cmps
dec
mov
dec
int
(bad)
inc
jne
adc
fbstp
daa
jne
cs
dec
retf
sahf
mov
add
idiv
mov
rcr
icebp
add
sbb
cvtdq2ps
dec
mov
in
movs
inc
mov
mov
into
sbb
inc
adc
jecxz
rcr
ret
repnz
mov
pop
add
and
fild
xchg
and
xchg
adc
fisubr
daa
popa
int3
push
leave
push
imul
sbb
movs
cmp
jno
inc
sahf
xchg
and
jb
dec
or
in
ds
out
push
ins
sbb
push
icebp
les
inc
cwde
pushw
jo
nop
xchg
cmp
sub
jbe
jbe
add
pop
xor
not
(bad)
and
shl
ins
mov
jbe
fdivp
lock
out
adc
mov
mov
mov
add
cmp
lods
mov
cmps
and
sub
mov
mov
scas
pop
mov
adc
pop
push
ret
iret
shl
mov
inc
test
les
shl
add
(bad)
mov
mov
in
jmp
aaa
sahf
rcr
jg
rcr
xor
out
xchg
mov
sti
rol
pop
sub
call
outs
aam
cmc
sbb
pop
mov
daa
fiadd
inc
mov
jg
mov
paddw
jmp
imul
mov
sbb
inc
adc
retf
inc
jne
pop
jmp
arpl
mov
and
mov
rcr
outs
in
lds
imul
fdiv
push
mov
jno
xor
jae
jb
cmp
jmp
outs
mov
mov
stos
push
pop
(bad)
push
pop
add
(bad)
in
xlat
inc
push
dec
pop
mov
fldcw
fisttp
imul
lahf
(bad)
call
loopne
sbb
loope
pop
adc
sbb
sub
jmp
sub
mov
add
fwait
fwait
lods
dec
pop
cmp
xchg
inc
js
mov
outs
arpl
jae
push
leave
out
mov
xchg
retf
sahf
mov
fwait
test
dec
sbb
int
push
js
mov
mov
int3
dec
mov
cmp
mov
inc
dec
lock
cmp
clc
icebp
xor
xchg
cli
mov
jge
jo
cs
or
pop
add
xchg
gs
sub
daa
add
mov
add
cmps
adc
sbb
dec
mov
push
mov
jg
aad
rol
jge
mov
pop
or
xor
in
mov
dec
xchg
jo
jns
add
retf
dec
jecxz
jp
or
xchg
mov
inc
ins
dec
orps
adc
mov
cli
jge
aaa
std
in
fs
and
dec
sbb
cmp
shl
adc
push
xchg
xlat
mov
or
in
icebp
mov
std
aas
jnp
dec
jns
cmc
add
pusha
add
mov
mov
add
push
cwde
mov
inc
je
aaa
pop
push
add
cmp
test
in
sub
outs
fisub
imul
fst
sub
outs
inc
adc
(bad)
mov
adc
xor
xor
mov
fsub
sbb
shr
call
or
stc
mov
cmp
xor
mov
mov
es
mov
jne
and
int
rcr
gs
rol
call
or
xchg
sub
adc
retf
lahf
out
xchg
cwde
cmp
add
xor
mov
(bad)
xchg
and
bound
sub
std
mov
push
ins
inc
mov
(bad)
xchg
stc
push
dec
fs
dec
mov
int3
cmp
xor
test
sub
frstor
jb
push
add
jl
dec
or
mov
lods
mov
aad
adc
push
mov
fdivr
jbe
(bad)
cmc
cmp
or
data16
ins
push
mov
enter
mov
adc
enter
retf
xchg
xchg
xor
jae
push
xchg
ret
mov
and
mov
xor
dec
lock
dec
xlat
and
xchg
cwde
call
jle
stos
cmp
int
adc
pop
retf
cmc
and
mov
jmp
pop
int3
gs
mov
xchg
stos
push
dec
sbb
je
lock
lods
sbb
and
popa
or
not
jmp
ins
xchg
inc
dec
and
mov
pop
popf
shl
jb
test
cmc
loope
pop
mov
(bad)
mov
mov
inc
push
mov
mov
add
jmp
lea
sti
and
ss
test
cld
aas
add
mov
pop
lds
dec
sbb
sub
and
stc
xor
xor
data16
js
mov
out
pushf
push
mov
and
jb
mov
fist
mov
loope
sub
dec
inc
ja
xor
call
mov
jmp
jnp
dec
push
test
cmp
sub
ds
jmp
cld
idiv
or
and
sub
mov
mov
inc
mov
push
add
fisttp
sbb
div
push
out
popf
jle
ret
in
cs
and
inc
addr16
ffree
mov
sub
push
jnp
and
aaa
dec
jp
shr
jns
call
(bad)
outs
fwait
dec
mov
sub
cmp
xor
div
and
push
stos
sub
xor
dec
sub
or
push
lds
loopne
adc
out
in
icebp
mov
aad
imul
jno
ds
test
nop
(bad)
push
mov
call
sti
repz
retf
mov
and
jb
xchg
mov
int3
push
nop
dec
shr
rol
lahf
sbb
or
dec
mov
int
pop
call
sub
les
pop
sahf
adc
(bad)
sbb
sbb
popa
or
push
adc
inc
scas
fnstsw
or
es
sbb
push
and
cmp
mov
fadd
xor
clc
fstp
mov
fisub
and
add
(bad)
popf
or
loopne
(bad)
scas
push
xor
and
in
push
shl
mov
rol
std
push
push
cmp
aaa
into
lahf
clc
in
xor
ret
(bad)
popa
(bad)
neg
mov
cmp
inc
rol
adc
xchg
push
mov
mov
(bad)
mov
rol
and
movs
jge
int3
(bad)
aaa
mov
nop
adc
and
sub
in
mov
frstor
out
xor
les
pop
push
repz
imul
inc
adc
sbb
lock
aas
cmc
sbb
pop
popa
retf
inc
xchg
pop
div
xor
xor
mov
outs
inc
inc
pop
xor
scas
push
(bad)
imul
gs
mov
jge
test
sbb
scas
into
stc
sub
mov
sbb
mov
jae
out
inc
aas
stos
mov
or
ficom
vucomiss
cli
push
scas
push
jp
adc
into
mov
sbb
xchg
lods
push
arpl
lds
sbb
sahf
iret
in
mov
push
stos
sbb
pop
ins
loop
add
jecxz
call
and
ja
shl
cmp
mov
cmp
test
icebp
jne
mov
mov
aaa
std
push
sub
add
jecxz
movs
ins
fstp
aaa
xchg
fstp
xor
cmps
fbld
hlt
neg
rcl
dec
or
mov
shl
sahf
sub
push
fwait
into
cmp
dec
movs
cdq
mov
mov
xchg
shl
cld
js
xor
mov
fidiv
mov
test
dec
xor
fucomip
add
arpl
xor
pop
adc
push
pop
lea
and
cmp
rcl
mov
retf
dec
lock
gs
iret
dec
cwde
repz
mov
outs
lea
daa
out
jl
pop
pop
jp
popf
out
add
jbe
inc
mov
scas
sbb
cmps
xor
mov
add
mov
jp
aas
and
test
jmp
in
movs
pop
scas
or
loop
icebp
repnz
mov
mov
xchg
dec
add
data16
addr16
add
ret
arpl
out
mov
jno
pop
pop
and
sbb
xchg
sti
push
cdq
shl
scas
adc
test
xchg
sub
sbb
cmp
enter
cmp
mov
jmp
ficom
mov
data16
or
ret
inc
and
(bad)
cld
out
cs
in
(bad)
sbb
xchg
mov
repnz
sub
jmp
imul
dec
and
(bad)
rcl
call
push
and
dec
cmc
jno
jb
xchg
jmp
(bad)
mov
jge
xor
mov
or
dec
mov
mov
sar
jle
xor
in
sub
test
sbb
xor
out
lods
dec
dec
movs
sub
cmp
mov
call
ror
fidivr
sbb
adc
sbb
mov
in
icebp
pop
(bad)
daa
mov
push
pop
ret
xchg
cwde
cmp
jo
add
xchg
nop
push
mov
lock
ss
sbb
pop
push
js
std
mov
and
push
test
fcomp
mov
mov
inc
loope
and
add
and
(bad)
(bad)
popa
scas
xlat
in
fwait
jle
sub
not
xchg
std
pop
fbstp
inc
push
in
cmp
and
mov
add
xchg
cwde
mov
lods
gs
adc
stos
lock
dec
(bad)
push
fldenv
imul
add
jns
sub
pushf
out
ins
cmp
gs
cmps
enter
and
pop
fs
mov
xor
enter
ficom
pop
jl
xchg
push
shl
inc
outs
lds
pop
lahf
add
movs
adc
dec
cmp
pop
dec
in
fsubr
mov
aam
mov
fbld
cmp
les
push
adc
dec
sahf
fwait
inc
jnp
and
pop
dec
call
push
mov
push
or
add
dec
loope
adc
cmp
push
test
sub
push
fdiv
(bad)
movs
jo
inc
xlat
sbb
add
jae
sti
pop
aaa
inc
(bad)
rcr
cmp
and
dec
lea
add
mov
shl
jns
(bad)
jns
leave
imul
mov
xlat
outs
mov
cmp
push
pop
popa
add
test
retf
mov
mov
jno
test
lock
lods
loope
jge
stos
call
iret
leave
cmp
out
xchg
ja
retf
mov
stos
jle
push
sub
push
jno
sbb
jae
(bad)
jns
jno
pop
iret
in
popa
(bad)
mov
xor
dec
cmp
dec
nop
adc
in
sahf
xor
imul
xor
inc
in
fld
in
test
mul
scas
cwde
sub
jmp
hlt
loopne
jae
pop
add
imul
and
push
fcomip
push
and
xor
mov
scas
push
and
pop
fst
inc
or
sbb
cmps
jb
mov
imul
dec
psubsw
in
push
pop
push
sbb
xchg
mov
xchg
call
je
in
xor
or
mov
inc
adc
fsubr
add
test
push
push
or
out
mov
xor
cmps
adc
pushf
xchg
dec
out
mov
mov
push
cmp
push
ss
inc
dec
cmp
rcl
ret
movs
push
jmp
xlat
sub
sbb
shl
mov
aam
movs
(bad)
lock
cmp
popf
xor
and
sahf
xor
pusha
(bad)
cmps
(bad)
push
jae
mov
xchg
(bad)
pop
fsubr
ins
cmps
mov
lahf
fld
pop
cli
xor
xchg
mov
or
sub
in
inc
mov
dec
mov
mov
sub
sar
stos
jle
int
outs
pop
dec
pop
pop
adc
xor
sbb
push
mov
daa
bound
call
mov
mov
add
mov
mov
add
ret
and
and
frstor
out
movs
inc
sar
pop
dec
and
jl
push
dec
push
xchg
(bad)
(bad)
or
pop
xchg
fs
out
(bad)
inc
mov
inc
setns
repz
inc
ins
and
movs
push
and
(bad)
jb
and
push
into
dec
nop
add
and
loope
xchg
movs
inc
wbinvd
cmp
pop
mov
out
aas
imul
shl
movs
iret
ja
stos
xchg
xchg
dec
out
es
js
xor
rol
sub
icebp
aam
or
popf
pop
xchg
add
mov
pop
leave
inc
mov
call
pop
aad
arpl
sub
aaa
mov
add
aam
mov
mov
idiv
movs
stos
and
jmp
les
or
add
add
sub
push
xchg
push
jo
push
push
dec
imul
xor
and
mov
or
jp
test
out
in
cld
pushf
jnp
mov
and
pop
dec
sahf
loope
inc
inc
inc
cld
xchg
jge
or
test
adc
sbb
pop
fcmovb
mov
jl
pop
and
ss
push
les
(bad)
or
aas
mov
inc
scas
pushf
mov
cmp
cwde
dec
movs
daa
push
lock
jmp
inc
out
div
pop
xchg
and
xchg
adc
outs
jmp
pop
je
neg
inc
(bad)
das
cmp
pop
(bad)
cdq
inc
ret
ds
pop
inc
in
jp
add
sub
icebp
pop
clc
test
imul
retf
bound
jns
sar
in
xlat
int
jnp
imul
outs
cmps
push
test
scas
cmp
cs
cmp
push
cld
or
iret
jge
inc
ret
test
ret
pop
mov
add
push
ins
loope
jno
push
outs
cmp
jp
sub
mov
dec
inc
mov
dec
xor
dec
jo
jmp
push
inc
(bad)
fcomp
and
shl
push
shr
aad
hlt
pop
cld
loopne
std
xchg
mov
pop
cmp
jnp
cmp
push
enter
xor
jo
test
popa
imul
lea
push
ins
sub
sar
fnstcw
mov
jmp
mov
ffree
inc
(bad)
hlt
ret
mov
pop
ja
test
mov
leave
rcl
loop
popf
mov
(bad)
out
xchg
test
and
jo
sbb
scas
stos
pop
jae
aam
inc
add
sub
outs
mov
xchg
ret
jno
pop
pusha
cld
cmps
addr16
fcmovne
adc
adc
add
mov
fstp
sub
or
or
mov
mov
or
cmps
xchg
arpl
movs
jns
neg
push
iret
call
popa
aas
test
fwait
push
inc
lods
ins
(bad)
jae
rol
int
pop
push
movs
pop
mov
cmp
mov
outs
repz
adc
jne
pop
xchg
out
sbb
retf
pusha
nop
and
iret
icebp
cwde
call
mov
inc
cmps
sbb
outs
test
stc
call
shl
es
mov
out
(bad)
jmp
jmp
movs
dec
jno
xchg
adc
(bad)
adc
add
cmp
fild
mov
daa
or
xchg
div
mov
push
and
push
scas
jle
aad
adc
jle
test
pop
cmc
gs
or
mov
fsub
sti
pop
cdq
adc
pop
mov
fdiv
aas
(bad)
mov
mov
or
lahf
fcomip
jb
hlt
and
fistp
sub
cwde
mov
out
std
lock
jmp
out
cs
fadd
sub
xchg
inc
jb
fcomp
mov
xchg
js
inc
xor
jecxz
jbe
out
rcr
jmp
aam
or
in
sti
ins
nop
adc
les
loope
adc
mov
adc
(bad)
cmp
arpl
fisttp
retf
loopne
cmp
jmp
or
shl
dec
adc
js
test
scas
scas
cmp
push
popf
add
and
(bad)
in
cld
repnz
sub
paddw
sbb
xchg
xchg
jmp
xchg
push
call
mov
das
inc
lock
cmc
xchg
into
int3
jno
mov
je
and
fdiv
push
in
mov
sbb
push
(bad)
lahf
sub
xchg
add
adc
adc
stos
mov
rcl
mov
outs
call
xor
in
mov
inc
cmp
xor
xor
adc
inc
in
sub
push
inc
inc
stc
jle
ds
pop
movs
mov
mov
pop
scas
pushf
and
rcr
mov
dec
stos
mul
xchg
ins
jp
aam
scas
ins
rcl
dec
pop
sar
out
cmp
dec
or
outs
inc
push
xor
adc
xchg
(bad)
mov
outs
pop
inc
adc
xchg
jp
cmps
and
loope
addr16
(bad)
les
jmp
adc
movs
int
add
mov
xor
in
push
jle
inc
in
movs
mov
call
xchg
fld
and
sbb
cmc
xchg
pop
sub
cmps
pushf
in
popa
add
and
hlt
jp
sub
cmp
call
mov
test
jb
imul
arpl
jecxz
push
mov
out
add
push
je
xchg
dec
inc
inc
jne
sub
or
mov
pop
add
and
mov
popf
not
jge
sbb
cmp
ins
rcr
aad
cmc
push
or
jne
test
shl
gs
and
mov
sbb
mov
push
add
sbb
sbb
add
arpl
jbe
jne
xchg
test
jb
pop
cld
push
sub
movs
in
push
mov
daa
inc
js
push
dec
add
xor
dec
xchg
dec
test
test
jmp
pop
fwait
cmps
repnz
bound
push
cld
dec
std
(bad)
jns
or
xchg
dec
adc
rol
div
xchg
out
stos
aad
mov
pop
movs
dec
push
leave
dec
shr
push
cmps
sub
lock
sar
call
xchg
shl
jmp
into
stos
shl
mov
mov
test
imul
mov
jne
stc
mov
test
pop
and
push
loope
movs
out
fcom
stc
pusha
dec
(bad)
aas
xchg
cwde
repz
mov
jl
mov
mov
sbb
(bad)
sti
pop
aaa
dec
xor
xor
rol
shl
adc
jl
retf
aad
cmp
push
jmp
imul
addr16
mov
add
outs
call
jge
std
out
jl
das
or
(bad)
sub
add
or
das
mov
lods
mov
inc
sub
cmp
gs
mov
je
add
test
jnp
jns
jl
aam
scas
in
jb
adc
dec
sbb
inc
je
jecxz
fwait
hlt
mov
repnz
es
sbb
adc
pop
mov
aad
out
or
call
mov
cld
imul
push
in
inc
sub
and
mov
ins
xor
push
jge
xchg
inc
mov
xchg
jle
jg
stc
and
dec
out
inc
xor
mov
pusha
in
arpl
ret
jnp
push
aaa
pushf
push
std
fcmovu
or
adc
retf
inc
gs
pavgw
cmp
lds
mov
(bad)
repnz
test
sbb
addr16
xor
jle
push
in
fbstp
retf
xor
sub
loopne
in
push
aad
loopne
inc
push
lds
sub
hlt
xor
cmc
push
cmp
jmp
mul
aas
movs
xor
xchg
jne
out
(bad)
ds
ror
push
sbb
push
sub
aad
lods
in
pop
dec
addr16
xchg
enter
add
ror
dec
adc
or
jg
and
or
push
lods
popf
loop
bound
scas
adc
jo
stos
cwde
test
and
pop
out
inc
(bad)
jo
sbb
mov
jnp
not
ins
popf
jo
cdq
pop
mov
push
xor
jmp
add
js
leave
xchg
cdq
push
daa
fs
inc
cmp
cdq
es
add
movs
or
xchg
mov
mov
ror
mov
cmps
cmp
out
shl
or
or
cmp
loopne
add
rcr
icebp
inc
mov
and
in
cwde
xchg
sbb
sti
test
xor
ss
xchg
cmp
cmp
jb
out
ins
(bad)
adc
mov
stos
ss
test
add
(bad)
out
cmps
xchg
stos
out
scas
jecxz
nop
ffreep
xlat
push
pop
lea
mov
xlat
(bad)
cld
fcomp
xor
pop
sbb
jo
call
adc
ret
lods
xchg
das
clc
mov
add
pop
repz
std
mov
cdq
and
loop
rol
aam
jb
fnstenv
neg
pop
jne
jnp
ret
push
mov
xchg
in
lock
jmp
push
mov
or
sub
rcl
in
xchg
adc
outs
test
loop
push
adc
xchg
lds
sti
pop
jo
sub
sub
xor
neg
js
imul
inc
pop
jnp
inc
shl
push
adc
jne
scas
fbld
or
sub
push
mul
sbb
lahf
movs
add
add
pcmpgtw
sub
mov
mov
data16
jb
xchg
jmp
inc
or
add
movs
in
add
dec
(bad)
repz
jae
bound
dec
jl
rcl
mov
jg
jnp
or
sbb
icebp
push
sbb
icebp
daa
in
retf
xor
mov
js
movs
sub
sbb
dec
push
addr16
out
imul
cli
nop
add
(bad)
fistp
(bad)
dec
in
xchg
sub
pop
test
or
dec
sar
dec
cmps
cmp
mov
mul
pop
adc
iret
mov
jle
jmp
or
stos
in
mov
xchg
ss
imul
fdivr
add
mov
mov
lea
mov
popa
mov
jl
push
(bad)
xor
dec
clc
mov
retf
push
aas
mov
lahf
lods
cmps
dec
hlt
fld
retf
xchg
out
mov
loopne
and
cdq
xchg
xchg
pop
cmp
idiv
mov
test
jge
cs
xchg
fbld
test
subps
sbb
inc
mov
pop
mov
mov
or
xlat
pop
jnp
mov
shr
call
stos
push
int3
jbe
cmp
dec
(bad)
in
jmp
je
mov
je
mov
neg
mov
and
adc
popf
jno
and
ins
add
xor
pop
ss
rcl
xor
sar
repnz
aaa
and
xchg
ret
(bad)
out
and
mov
mov
enter
dec
cmp
jmp
in
and
pop
inc
pop
mov
jns
repz
xor
sbb
fstp
push
cmp
jb
cmp
dec
pusha
in
pusha
or
or
(bad)
mov
into
cmp
xor
(bad)
mov
icebp
je
sbb
inc
and
aas
xchg
out
jb
jmp
lds
jne
xchg
(bad)
dec
mov
dec
out
stos
adc
fldcw
mov
xchg
sar
jae
in
popa
push
cmp
fldenv
fisttp
xchg
adc
test
push
push
movs
jg
movs
(bad)
mov
inc
jmp
in
or
(bad)
pop
sahf
(bad)
addr16
sahf
mov
in
jns
minps
or
call
fs
cmp
mov
mov
dec
push
fcomp
addr16
icebp
cmp
retf
sahf
sbb
push
or
mov
xchg
fild
mov
fild
xchg
call
sub
mov
arpl
loop
jnp
stos
lahf
push
cmp
rcr
fsubrp
test
xor
adc
and
push
jp
scas
enter
mov
sub
sbb
rcl
sub
add
cmp
cdq
or
adc
xchg
xor
movs
js
scas
lds
and
outs
pop
arpl
retf
fbstp
xlat
xor
rcl
dec
and
in
push
xchg
movs
addr16
sub
push
icebp
scas
repnz
mov
inc
jmp
imul
lods
ins
fnsave
pop
aaa
jno
and
mov
out
inc
repnz
pushf
push
sahf
ret
sbb
pop
ss
mov
sbb
jnp
xor
call
jns
and
or
mov
push
jb
sbb
or
mov
cs
mov
inc
lods
repnz
xor
sbb
mov
xor
xchg
lods
and
lahf
adc
cdq
adc
test
add
ret
inc
(bad)
leave
call
xchg
outs
scas
push
fidiv
shl
daa
add
pushf
mov
lods
xchg
ret
outs
je
add
(bad)
sub
rcl
add
imul
sub
push
xor
mov
or
hlt
cmp
(bad)
xor
xchg
push
xchg
sbb
xor
jl
and
arpl
aad
(bad)
loope
sti
cmp
cld
jne
mov
sub
jbe
lock
cli
adc
xor
sti
imul
dec
mov
mov
inc
jecxz
sbb
test
hlt
jg
outs
dec
into
add
dec
lahf
xchg
cs
jl
ja
cmp
xor
enter
cli
shl
add
retf
retf
sar
ins
ret
pop
cmp
cmp
fiadd
aaa
pmaxsw
jg
(bad)
mov
xor
mov
rcr
inc
test
lods
sbb
retf
dec
es
mov
mov
rcl
jb
pop
ret
shl
aam
jp
in
popf
cmps
mov
adc
(bad)
xor
sub
inc
sti
cli
cmp
or
outs
retf
mov
ds
fcmovb
mov
dec
out
outs
test
loopne
add
data16
jmp
fwait
outs
test
jne
movs
xchg
mov
inc
and
sbb
pop
mov
sbb
xchg
jg
icebp
in
cli
push
mov
in
adc
fcmovne
test
adc
movs
aam
cmp
cmp
rcr
add
jno
outs
sbb
aas
icebp
jmp
cli
xchg
jmp
pop
mov
cld
xor
cmp
xchg
sub
inc
ins
test
mov
mov
sti
sub
xor
out
stos
or
out
or
imul
cld
cmps
pop
jmp
sahf
cmp
dec
xchg
pop
imul
inc
stos
pusha
pop
and
xor
adc
out
fst
ja
mov
nop
cmp
push
and
test
movs
add
shl
push
push
inc
out
test
sub
jne
scas
hlt
inc
stos
test
leave
lods
lea
push
nop
int3
mov
repz
xor
mul
aaa
outs
jbe
push
push
jae
pop
adc
lods
int
push
mov
xchg
mov
aas
and
in
jl
test
or
scas
xor
shl
sbb
pop
or
dec
and
jl
outs
idiv
fmul
jge
jmp
sti
clc
in
inc
mov
pop
not
lea
repnz
retf
xor
stos
sti
xchg
popf
scas
fcmovu
jp
hlt
or
adc
imul
mov
cmp
mov
mov
dec
inc
dec
push
push
stos
in
cli
ret
jecxz
cmp
ret
mov
mov
aaa
xchg
pop
enter
in
jno
lahf
push
and
inc
mov
rcl
xor
or
leave
fistp
repz
adc
mov
test
fisttp
or
pop
daa
sub
pop
inc
mov
xlat
pusha
repnz
shr
push
iret
jno
jo
cmc
and
lods
xchg
add
call
ror
jl
int
sub
xor
imul
in
xchg
mov
leave
nop
out
icebp
fst
sub
add
test
add
data16
out
mov
or
pop
ret
and
cli
mov
in
lock
xchg
jmp
pop
inc
lods
cli
xchg
test
aam
lods
and
jne
das
data16
add
outs
sahf
mov
mov
pop
popa
xor
inc
jge
fwait
test
add
rcr
scas
pop
sub
push
(bad)
aas
adc
jbe
leave
je
xchg
fdivr
add
adc
mov
pop
push
pop
jne
adc
pusha
sbb
fwait
retf
xor
cld
imul
enter
fisub
repz
cmp
mov
test
adc
enter
xor
or
aaa
and
movs
adc
cdq
popf
retf
mov
adc
push
pop
fs
mov
idiv
or
push
cli
push
cmp
xlat
or
and
push
cmp
mov
mov
in
out
fdivr
push
jle
push
xchg
pop
int3
imul
push
rcr
in
add
xchg
and
mov
pop
test
mov
push
sbb
repnz
mov
scas
dec
dec
pop
mov
retf
outs
leave
(bad)
mov
aam
test
xor
sub
retf
pusha
test
inc
or
in
and
arpl
or
push
int3
(bad)
cmp
ret
pushf
xchg
(bad)
retf
cmp
mov
pop
aaa
and
sbb
pop
fisttp
push
xchg
xchg
mov
mov
fisub
inc
fadd
test
stos
mov
mov
in
ror
sar
cs
xchg
fidiv
adc
inc
xchg
mov
mov
retf
popf
add
fwait
mov
fnstcw
in
or
ficomp
mov
retf
sar
stos
or
cs
call
sahf
dec
test
pop
iret
out
mov
or
retf
sbb
sub
mov
mov
xchg
arpl
mov
sub
into
inc
data16
add
lahf
nop
mov
std
mov
dec
dec
pushf
call
out
lods
adc
call
arpl
int
jae
jns
je
test
sbb
je
push
test
dec
sbb
sbb
loop
aas
shl
dec
push
sti
push
jl
imul
mov
popa
sub
icebp
mov
pushf
test
bsf
pop
shl
sub
inc
iret
fmul
jo
pop
cmp
sti
(bad)
xor
mov
retf
inc
push
add
push
jp
repnz
cmps
retf
cmp
into
push
popa
xchg
ins
je
pop
pop
(bad)
jmp
xchg
sub
rcl
repnz
or
aam
add
add
pop
sub
mov
mov
mov
leave
(bad)
xchg
or
jns
inc
es
adc
jle
or
repz
ret
inc
xor
sub
inc
retf
xchg
sahf
sub
fld
xor
das
loopne
icebp
stos
(bad)
and
xor
xor
test
dec
(bad)
mov
dec
cmp
pop
inc
adc
push
cld
push
pop
popf
cmp
cmps
xchg
jmp
test
xor
xchg
lods
rol
and
fist
hlt
jne
mov
cmp
sub
dec
adc
push
push
popa
adc
js
loopne
arpl
repz
loop
inc
xor
jne
jno
in
imul
push
xchg
pop
adc
or
adc
jbe
ficomp
mov
pop
loope
enter
call
(bad)
cmp
pop
mov
push
clc
mov
or
mov
int
sbb
adc
push
cmps
outs
(bad)
nop
adc
mov
jne
xor
xor
movs
jl
or
cmp
mov
mov
leave
(bad)
jno
outs
daa
and
fs
jecxz
mov
and
mov
dec
push
adc
stos
cli
(bad)
mov
popf
push
aam
aas
clc
ins
daa
sbb
out
or
fist
pop
pop
xchg
iret
mov
push
mov
add
jle
bswap
adc
push
or
mov
pop
sbb
jmp
cmp
loopne
push
push
mov
cli
or
adc
pushf
mov
dec
cmp
aaa
fsubr
adc
ja
adc
cmp
shr
lods
or
in
adc
jp
inc
dec
es
call
xchg
inc
mov
and
fwait
das
sub
dec
push
xchg
or
dec
ret
jecxz
or
sbb
push
pop
outs
adc
push
ds
add
fwait
xchg
scas
xor
jmp
push
mov
call
aam
push
stc
add
cmps
mov
pop
jle
ja
rol
push
sub
cmps
fsub
mov
hlt
stos
mov
je
xor
imul
xor
test
and
mov
add
pop
out
pop
push
icebp
dec
loope
aaa
nop
das
lahf
call
and
pop
ret
jae
and
jae
fld
xor
sbb
sbb
dec
aad
fs
sbb
and
push
lods
retf
jnp
cwde
mov
sub
or
add
sbb
fs
les
pop
scas
in
into
mov
mov
aad
jp
cli
jno
call
pop
mul
add
mov
in
jmp
push
jmp
loop
sbb
and
inc
ins
(bad)
gs
test
xchg
cwde
add
cmp
and
and
add
in
pop
cmp
jns
dec
sbb
mov
fdivr
scas
sub
add
int3
stos
pushf
or
rcr
pop
jge
xor
xchg
clc
xor
cwde
ja
mov
test
addr16
mov
cmps
mov
inc
fnstcw
xchg
xchg
cmp
ins
xor
rcl
retf
ins
adc
mov
jmp
(bad)
jmp
xor
movs
movs
loopne
dec
stos
jp
lods
mov
jo
sub
dec
fcomp
xchg
adc
mov
xchg
test
scas
sbb
stos
xor
jg
xor
mov
cld
mov
cs
xchg
(bad)
loopne
lea
cmp
cdq
ds
nop
push
mov
out
movs
popf
xor
xor
cwde
add
scas
jle
sbb
xor
cwde
mov
mov
jns
xchg
ret
add
xchg
jmp
dec
rcr
rcr
jecxz
pop
sti
pop
ss
or
fucomip
sbb
push
adc
push
sbb
enter
dec
mov
inc
mov
out
lock
rcr
adc
and
jmp
popf
push
stos
and
fild
adc
stc
xlat
(bad)
repnz
sub
jae
fwait
mov
cwde
ret
sar
ret
clc
xchg
xor
ud1
push
jmp
stos
add
push
arpl
sar
xor
jmp
sub
sub
repnz
jbe
and
imul
js
push
ret
add
xchg
scas
mov
(bad)
in
sub
ja
inc
je
cmp
mov
xchg
mov
xchg
in
ins
loop
je
addr16
xchg
mov
cmps
mov
sbb
xlat
test
lds
ds
(bad)
mov
mov
sbb
adc
gs
xchg
mov
popf
cwde
lods
pop
cmps
xchg
mov
mov
out
in
std
test
jmp
pop
push
movs
and
mov
idiv
mov
movs
lock
lds
fdiv
xor
pusha
(bad)
push
fcomp
addr16
mov
stos
sub
les
pop
add
test
ds
into
popa
jb
sbb
inc
sub
test
push
sbb
test
xor
imul
mov
push
dec
loope
(bad)
xchg
hlt
mov
js
cdq
sbb
rcr
ss
popa
adc
stos
add
pop
(bad)
pop
sub
je
mov
fld
retf
sub
lock
mov
aam
mov
jle
mov
test
lods
mov
and
adc
imul
iret
sub
mov
inc
(bad)
fisttp
popf
call
jl
jg
add
out
jb
stc
jo
(bad)
ss
cmp
mov
xlat
ret
and
jmp
xor
aaa
push
pop
inc
add
push
rcl
gs
xchg
adc
in
mov
lods
hlt
es
jg
sbb
adc
fcmovnbe
add
mov
sub
sub
das
dec
mov
aad
adc
not
push
int3
mov
mov
test
les
sti
stos
push
fs
inc
sub
jp
mov
adc
(bad)
repz
outs
std
loopne
sahf
cmp
mov
rcr
in
sbb
nop
shr
dec
inc
jecxz
mov
cmp
sub
jl
pop
test
adc
icebp
(bad)
shr
xor
fs
pop
popf
or
es
jecxz
mov
int
jge
xchg
sahf
push
dec
sub
pop
sbb
jle
mov
ficomp
mov
into
adc
xchg
cmp
into
ds
cmc
rcl
bound
jbe
mov
outs
and
sar
popa
(bad)
adc
xchg
jmp
loopne
jmp
mov
adc
div
adc
enter
mov
jmp
pop
mov
jg
imul
ja
sbb
pusha
sti
sbb
stos
xchg
jb
cmps
dec
mov
cmp
dec
mov
push
sbb
ret
push
stc
sbb
int
mov
xchg
outs
sti
jg
mov
repz
aaa
xchg
xchg
pop
lods
pop
xadd
pop
sub
inc
jmp
cs
xchg
loopne
sti
lock
or
sbb
js
scas
dec
dec
(bad)
ror
xor
sbb
xchg
into
dec
push
dec
dec
ret
mov
push
adc
mov
cmp
mov
not
jle
jp
js
outs
into
aaa
push
gs
scas
dec
retf
movs
lea
dec
ins
mov
fcmovnb
adc
out
mov
cmp
aam
js
mov
mov
xchg
(bad)
mov
out
popf
test
(bad)
arpl
dec
mov
push
outs
retf
loope
and
bound
into
cmp
imul
out
xchg
dec
cmp
ficomp
(bad)
popa
adc
dec
xor
mov
ret
in
pop
fsub
and
in
xchg
mov
outs
mov
int3
rcl
push
push
lock
xlat
add
dec
mov
push
cmps
cmc
jg
mov
popf
daa
inc
(bad)
sbb
iret
sub
jae
out
pop
jge
dec
dec
mov
jmp
cmp
adc
mov
or
xchg
iret
mov
xor
ins
mov
mov
ret
es
mov
add
sub
or
in
fist
(bad)
outs
ror
and
xlat
rcl
les
inc
adc
test
xor
icebp
adc
sub
pmaddwd
movs
jne
std
repnz
outs
mov
fxch
sub
mov
cmps
mov
rcr
in
sbb
ret
add
xchg
and
int3
push
fst
stc
adc
mov
iret
jl
int
in
call
lods
lea
je
out
push
or
xor
add
jg
pop
xor
and
xchg
add
sbb
loopne
mov
cmp
scas
cmp
inc
or
int3
jb
push
xor
es
popf
sti
repnz
(bad)
repnz
test
fisttp
in
mov
test
rol
imul
sbb
in
inc
aaa
inc
and
cmps
add
mov
push
mov
push
sub
stos
pop
cmp
pop
dec
mov
gs
xchg
es
dec
jp
push
cmp
xor
cmps
cmp
adc
mov
fild
aaa
jmp
ret
pop
ins
push
jge
cli
mov
xor
push
sbb
mov
xchg
or
push
push
sub
mov
div
xor
push
or
pop
shl
pop
dec
(bad)
adc
test
hlt
sub
dec
imul
mov
lahf
lock
imul
repz
out
adc
push
fs
sub
fcmovu
adc
mov
mov
rol
in
push
xor
cmovp
cmp
mov
pop
adc
sahf
dec
xchg
(bad)
sub
adc
adc
mov
inc
cmp
dec
aas
adc
jmp
out
mov
adc
cmp
cmp
rcl
mov
mov
fwait
hlt
dec
mov
gs
enter
jae
jl
sub
cmp
lahf
sbb
cmp
xchg
jl
jo
mov
cwde
sub
add
pop
cmp
out
push
inc
adc
in
cmp
push
xchg
ss
mov
int
jg
xchg
adc
repnz
dec
push
cmpxchg
xchg
fwait
mov
xor
ins
cmovb
or
aaa
out
push
mov
(bad)
stc
stos
and
ja
cmps
das
aam
mov
test
mov
(bad)
and
adc
in
stos
push
cmp
push
daa
mov
ss
ror
retf
add
xchg
xor
(bad)
mov
xchg
pop
cmp
or
cmp
pop
and
inc
fisub
or
inc
cli
shl
mov
out
fistp
scas
jnp
pop
jge
inc
in
push
dec
mov
inc
pop
push
xchg
push
jno
retf
adc
test
adc
das
cmp
mov
mov
cmp
stos
sub
mov
cli
mov
in
dec
pop
call
lds
cld
outs
xchg
xchg
and
sub
popf
sar
inc
rol
rcr
xchg
fwait
mov
push
and
pushf
xor
mov
inc
add
retf
jb
retf
and
addr16
or
stos
sub
lea
icebp
push
addr16
inc
inc
sub
xchg
test
aam
push
aaa
add
push
leavew
sbb
jge
sub
jg
lock
shl
push
cld
sbb
enter
jno
ret
cdq
mov
mov
dec
jb
and
fwait
push
xchg
add
sbb
ror
sub
or
int3
stos
jmp
out
sub
pop
xchg
pop
(bad)
dec
(bad)
popf
(bad)
fsub
leave
pop
hlt
sub
loop
jl
mov
fistp
or
pusha
mov
nop
movs
cmc
retf
pop
rol
mov
or
div
mov
loopne
jne
lods
fcmovnbe
mov
retf
ins
xor
pop
sub
inc
(bad)
std
or
mov
ss
sbb
retf
std
jne
adc
pop
xchg
outs
mov
jmp
in
or
imul
pop
dec
outs
fsubr
pop
mov
adc
outs
cmp
jb
in
jo
es
and
pop
pop
push
adc
(bad)
outs
ror
retf
mov
stos
mov
mov
shl
dec
xor
push
inc
mov
(bad)
mov
mov
and
(bad)
clc
add
and
dec
cmc
pushf
outs
push
push
sti
(bad)
push
mov
add
push
xchg
fcmovbe
mov
in
sub
jb
xlat
retf
leave
dec
jmp
pop
mov
sbb
inc
xchg
sbb
add
and
jle
(bad)
pop
mov
inc
pusha
mov
xor
aam
pop
mov
mov
rol
mov
push
retf
inc
sbb
pop
imul
mov
stos
xchg
adc
cmp
dec
repnz
addr16
fisttp
sti
jg
and
lods
mov
callw
adc
add
ds
sub
inc
frstor
int3
popf
push
mov
mov
inc
ja
jmp
mov
mov
jecxz
out
es
fprem
les
dec
cmp
aaa
add
popf
test
out
adc
push
pop
jle
sar
sbb
dec
dec
das
cmps
cmp
sar
or
mov
(bad)
aaa
fistp
push
rcr
jg
pop
pop
lea
popf
xchg
retf
arpl
stc
sub
push
hlt
shr
cmp
ins
(bad)
push
mov
sbb
mov
and
loope
ss
xor
sbb
mov
loopne
loope
push
mov
mov
mov
xchg
popa
cmps
adc
daa
inc
in
fs
pop
push
ja
xor
test
cli
aam
popa
push
data16
(bad)
mov
dec
test
xor
add
pusha
retf
test
cmps
dec
pop
movs
into
or
out
lods
movs
or
out
pop
xchg
fiadd
dec
push
xor
sub
add
mov
mov
outs
pop
fidivr
jno
push
cdq
test
pusha
inc
pop
movs
gs
jns
(bad)
stc
jl
pop
mov
neg
repz
mov
jp
les
leave
mov
ror
cmp
jle
push
adc
inc
in
adc
and
inc
idiv
clc
jmp
cmp
cmp
hlt
xlat
cmc
cmps
push
popa
pop
shr
arpl
mov
sub
dec
cmp
out
sub
lds
clc
cmp
mov
ja
xchg
cmps
jb
dec
cmp
jg
mov
xor
xchg
addr16
stos
ficom
movs
(bad)
rol
scas
stc
stc
jbe
mov
push
inc
cmp
xchg
mov
jns
and
add
dec
adc
frstor
int3
mov
add
adc
enter
sbb
cmp
imul
int3
out
dec
push
xchg
(bad)
loopne
in
outs
push
pusha
cmc
add
out
ins
dec
jmp
loopne
ss
and
inc
mov
pop
dec
popf
loope
(bad)
jl
push
cmp
pop
add
and
mov
std
aas
in
sbb
pusha
pop
mov
not
imul
push
aaa
mov
cmps
test
pushf
or
dec
jo
loopne
jge
fmul
les
cdq
mov
inc
test
fild
retf
xor
test
enter
or
in
and
scas
sub
test
mov
push
pop
call
test
add
sahf
lods
leave
xor
loopne
hlt
fnstenv
cmps
jns
add
ficomp
push
sbb
jnp
pop
jae
adc
pop
(bad)
test
ins
pop
pop
imul
lods
mov
cdq
call
ficomp
xor
jbe
loopne
or
push
lock
cmp
pop
push
cmps
data16
int
cli
xchg
cmc
inc
repz
and
pusha
push
sti
dec
cdq
pop
sbb
cs
aaa
cmc
sub
dec
repnz
nop
jp
and
scas
scas
lods
fdiv
adc
sbb
icebp
mov
frstor
imul
ja
and
jl
loopne
je
movs
das
stc
mov
fwait
mov
push
out
sub
lahf
loop
dec
mov
cdq
retf
je
jecxz
int3
xor
ficomp
sbb
into
out
and
mov
nop
mov
xchg
bnd
mov
cwde
pop
mov
pop
es
hlt
mov
hlt
mov
fldcw
cwde
test
sub
js
push
xor
mov
or
bound
(bad)
loopne
nop
dec
mov
jp
or
aad
inc
sbb
and
push
out
sar
mov
in
sbb
and
fsubr
push
cs
sub
les
pop
dec
aas
jmp
fimul
sub
cmps
pop
scas
or
inc
into
push
inc
pop
scas
sub
xchg
popf
push
scas
push
daa
hlt
in
retf
icebp
cmps
sbb
mov
pusha
or
sub
out
stos
popw
sub
ss
mov
adc
mov
cmp
enter
xchg
clc
jo
sub
int3
push
ins
fwait
movs
test
pop
int
out
lock
mov
push
test
and
cli
xchg
inc
test
dec
ins
sub
xchg
retf
movs
push
inc
daa
xchg
xor
iret
jno
push
pop
mov
push
lods
pop
cld
mov
and
xchg
ds
xchg
xchg
add
in
mov
sbb
sar
sbb
xor
fld
xor
jo
xchg
addr16
mov
pop
(bad)
pop
ret
loop
inc
outs
mov
jge
and
pushf
pop
lahf
mul
push
push
inc
imul
repz
lods
outs
pop
test
adc
push
jge
ins
push
(bad)
or
push
adc
(bad)
fild
aas
leave
sbb
cld
iret
mov
scas
mov
or
jne
xor
xor
mov
daa
sub
lods
jo
fwait
icebp
fdivr
pop
jg
test
sbb
xor
stc
enter
(bad)
loop
mov
fisub
inc
int3
loopne
cmp
mov
jg
or
dec
jg
jl
push
sti
mov
jmp
mov
pushf
or
cmp
mov
mov
push
push
mov
mov
test
mov
or
mov
or
jo
inc
outs
(bad)
arpl
(bad)
gs
ret
mov
mov
xor
in
sti
in
repnz
retf
xchg
daa
js
push
(bad)
push
push
jae
push
and
cmc
ins
outs
aad
mov
adc
xchg
mov
inc
cli
cmp
ror
or
and
fs
push
movs
mov
cmp
gs
add
pushf
dec
sub
xlat
fidivr
iret
pop
xor
mov
mov
xlat
mov
fild
rcr
adc
mov
cmp
pop
iret
xor
js
(bad)
adc
inc
popa
mov
ds
pushf
mov
cmps
push
xor
ins
xchg
jae
dec
push
cmp
scas
xchg
sahf
fadd
jecxz
hlt
lods
call
(bad)
mov
mov
repnz
mov
and
ret
pop
test
pop
ret
sub
outs
fsub
ret
jns
cmp
rcr
jmp
jecxz
pop
mov
xchg
dec
ja
(bad)
xlat
aas
and
pop
push
xor
(bad)
and
cwde
add
mov
(bad)
retf
sahf
mov
sbb
mov
xor
push
jmp
cmp
ss
adc
bound
repz
retf
dec
nop
add
(bad)
or
hlt
jge
mov
mov
adc
hlt
sub
test
ficom
cdq
aas
test
pop
arpl
popa
(bad)
cmp
push
mov
or
sub
sbb
repz
(bad)
(bad)
shr
call
push
or
xchg
out
mov
mov
push
pop
retf
xchg
dec
rol
mov
add
jbe
icebp
sub
outs
ins
inc
xor
sub
dec
xchg
pusha
in
jne
xchg
dec
mov
pusha
lahf
cld
test
(bad)
cmp
enter
jmp
lahf
adc
push
inc
and
ret
xchg
xchg
ds
cs
jnp
pop
int
shr
pop
test
xchg
jnp
(bad)
(bad)
adc
cmp
mov
in
and
sbb
or
or
adc
push
loope
jmp
push
test
outs
xlat
jo
push
sti
movs
inc
fcom
cmp
imul
lea
inc
xor
vmwrite
ret
cmp
xlat
std
std
outs
add
add
aad
retf
in
inc
imul
loop
push
and
imul
int
dec
pop
mov
xchg
in
outs
ds
mov
dec
(bad)
mov
iret
cmp
push
outs
imul
cli
(bad)
call
sbb
and
cmps
sbb
mov
jnp
jmp
cli
cmps
ins
jle
lock
adc
mov
push
pop
out
mov
mov
push
icebp
xor
xchg
xor
or
rcl
(bad)
ror
inc
ss
jnp
jle
sub
push
fwait
arpl
cld
add
add
in
fdivp
das
ja
dec
dec
cmp
hlt
test
(bad)
xchg
pushf
xchg
int
xadd
or
cmp
popf
sbb
cmp
dec
inc
dec
cwde
adc
push
and
xor
jno
mov
sub
cld
fist
push
adc
aam
and
inc
ss
sub
or
jo
outs
mov
out
call
call
sub
mov
and
pop
mov
stos
push
std
mov
push
imul
dec
adc
mov
fidiv
retf
mov
adc
test
loop
ja
(bad)
idiv
ror
fsubr
mov
lahf
dec
test
jp
sub
mov
into
int3
mov
iret
jno
jae
dec
pop
cmps
pop
aaa
in
nop
mov
adc
movs
pop
cmp
mov
push
(bad)
cmp
scas
cli
dec
dec
scas
sub
jle
cmp
gs
mov
ins
and
(bad)
dec
daa
sub
cmps
out
dec
add
fs
lds
in
adc
xor
out
xor
out
sbb
leave
leave
mov
or
mov
dec
xchg
arpl
jno
mov
repz
or
fwait
xchg
aam
repnz
mov
clc
mov
les
jne
push
out
jno
stos
and
mov
sub
push
iret
cs
sbb
pop
jnp
mov
pop
test
add
jno
sti
inc
sbb
jnp
imul
sbb
push
int3
int3
iret
test
sahf
sahf
stos
pusha
sub
jb
popa
in
xchg
and
int3
jecxz
shl
lods
in
mov
xchg
imul
fild
in
ss
push
pop
retf
push
xchg
lea
cmc
test
rcl
aas
(bad)
jecxz
jecxz
jae
cmps
ja
daa
icebp
sti
or
rcr
cwde
xchg
fidivr
mov
outs
ds
jns
pop
xchg
xlat
cli
daa
repnz
pop
ja
std
outs
mov
out
stc
xchg
(bad)
mov
xlat
mov
adc
lea
test
(bad)
sbb
mov
cmps
les
out
(bad)
mov
mov
shl
shl
inc
popf
lods
add
jno
mov
xor
adc
mov
stc
jo
inc
sar
movs
sub
or
push
pusha
add
mov
jo
les
mov
loope
test
xor
leave
dec
fwait
pop
in
in
xor
add
dec
push
inc
inc
shr
(bad)
out
retf
and
jbe
jno
mov
out
aad
sub
mul
mov
cli
out
xor
call
jmp
push
pop
inc
jle
repz
and
add
xor
ret
test
nop
in
and
jbe
push
enter
sbb
stos
jno
outs
movs
adc
mov
cs
shl
ja
push
test
cmp
cwde
cmp
aad
mov
mov
lods
lea
xchg
stc
mov
dec
retf
lea
sub
divps
pop
jbe
aaa
ss
aas
cmp
cmp
pop
add
fcomp
sub
in
stos
adc
test
xchg
int3
js
xchg
cmp
addr16
stos
out
jbe
iret
mov
sbb
int
and
imul
imul
cmp
sub
sub
push
lods
out
pop
test
fld
mov
add
imul
mov
sar
dec
aas
sbb
adc
jmp
add
fldcw
icebp
(bad)
es
jge
mov
xor
push
pop
inc
jecxz
out
add
sub
cs
ret
jg
in
cmp
mov
rol
and
xor
push
xchg
pop
jbe
cmc
mov
xchg
in
push
sti
pop
sub
sbb
sbb
stc
cdq
inc
inc
fwait
jle
and
jmp
std
fadd
adc
stos
loop
imul
mov
sbb
imul
xchg
jne
jge
in
jge
(bad)
outs
jae
ja
xor
leave
mov
loop
loop
stc
sbb
mov
repnz
mov
dec
and
xor
mov
pop
sti
scas
push
fs
sbb
mov
fnstcw
cmp
mov
scas
xor
lods
pop
daa
ret
fwait
ja
outs
mov
or
sbb
je
fcom
inc
mov
js
stos
aaa
xchg
sti
pop
popa
ja
jo
dec
frstor
das
arpl
lds
rcr
pop
mov
mov
test
pop
std
cmp
push
jnp
cmps
call
nop
loopne
cwde
adc
arpl
lock
int
lea
dec
sub
pop
mov
test
push
dec
loop
push
mov
add
mov
xor
add
push
data16
dec
add
xchg
sti
inc
and
loop
outs
addr16
arpl
(bad)
rol
dec
mov
adc
mov
repz
and
cmp
stos
jmp
fmulp
jp
mov
xor
mov
arpl
dec
call
cmp
(bad)
adc
push
dec
in
fisub
mov
cmp
mov
ins
fild
push
sahf
test
sbb
sbb
jns
lods
mov
hlt
outs
test
clc
jg
fwait
(bad)
or
shl
cdq
push
and
sbb
and
pop
ins
jnp
or
inc
mov
inc
fnsavew
xchg
fs
test
test
in
mov
mov
jmp
or
(bad)
sbb
pop
pop
idiv
call
cmc
sub
push
les
mov
retf
xor
push
popf
jge
movs
and
fnsave
add
dec
add
push
stos
push
dec
xchg
or
push
popa
bound
sub
mov
adc
shl
xor
add
xor
pop
loope
lods
ins
adc
add
xchg
icebp
shl
lahf
mov
cmp
push
adc
jmp
inc
ss
ret
or
mov
in
outs
cmps
push
pop
pop
outs
mov
and
push
aad
pop
jle
jbe
sbb
push
sub
jge
mov
jecxz
mov
cmps
cli
imul
mov
inc
stos
pusha
shr
xchg
and
aaa
ja
test
pushf
sub
fstp
mov
scas
add
add
jnp
jecxz
sbb
(bad)
jbe
or
jl
mov
cmp
xchg
sbb
dec
ret
cs
test
jno
into
sub
shl
leave
sbb
in
add
out
jmp
and
jecxz
cdq
and
pusha
lods
sbb
push
ss
and
ss
out
fwait
test
adc
test
nop
adc
cmp
mov
fst
fsub
cmc
push
call
jge
pusha
cmp
adc
mov
inc
ins
(bad)
cmp
xchg
ins
push
or
(bad)
xchg
(bad)
aas
test
sbb
adc
imul
xchg
sub
mov
mov
pop
aaa
retf
sbb
mov
jg
stc
jmp
pop
dec
adc
xor
mov
cmp
fs
xor
mov
pop
sbb
movs
les
sub
lods
push
outs
push
jns
arpl
aaa
leave
jmp
shr
lds
mov
test
scas
fs
dec
push
mov
jl
and
lock
jns
mov
cs
pop
dec
out
and
dec
sbb
dec
mov
scas
(bad)
or
push
adc
loopne
cli
fdivr
out
dec
cmp
pop
repnz
cmp
sub
push
movs
int3
dec
enter
sbb
mov
dec
pop
cmp
loope
lock
xchg
jne
loope
mov
xor
out
pop
dec
aas
xchg
sbb
aam
mov
inc
pop
test
rol
and
jg
or
xchg
ins
gs
and
add
mov
xchg
pushf
test
pop
ret
pop
lods
std
sahf
stos
adc
inc
das
xor
loope
jge
sti
dec
adc
xchg
push
loopne
popa
xor
sbb
and
aaa
aad
scas
mov
retf
fstp
or
out
bound
cld
clc
retf
ins
inc
mov
mov
sbb
dec
js
xchg
pop
mov
mov
stc
js
sub
add
lock
xlat
jge
outs
sbb
sti
jg
sbb
lock
(bad)
jb
jnp
jmp
out
pop
mov
push
ja
jbe
enter
repz
rcr
mov
push
push
pop
sub
add
out
das
sub
aaa
hlt
and
sub
hlt
jl
lock
aam
shl
dec
out
sbb
jo
iret
fidiv
(bad)
sub
inc
adc
jecxz
jg
cmps
jge
cld
inc
fucomi
add
popf
mov
jae
dec
mov
mov
xor
xor
out
into
pop
aaa
ja
popf
lods
or
in
xchg
xchg
shl
sub
or
loop
mov
fbstp
gs
int3
mov
shl
in
or
push
add
enter
adc
mov
dec
and
shr
adc
jns
les
pop
adc
rcl
cmp
cmps
xlat
pushf
cmp
inc
es
inc
das
mov
fisttp
lock
xor
dec
dec
dec
pop
xchg
test
sbb
xor
retf
inc
sbb
aaa
jb
cmps
rcr
fdiv
movs
mov
xor
pop
sti
in
aad
add
inc
fst
inc
les
rcl
out
dec
int3
mov
jmp
cmp
fsub
mov
and
push
sar
(bad)
scas
mov
das
sub
retf
(bad)
xlat
xchg
sbb
cli
mov
pop
pop
mov
or
add
push
cmps
retf
mov
mov
lock
cwde
pusha
stos
sub
jecxz
sahf
cld
retf
je
(bad)
in
test
(bad)
mov
push
jmp
jb
fwait
aam
addr16
jno
(bad)
xor
push
mov
pusha
loopne
fiadd
mov
cmp
jmp
(bad)
jmp
into
(bad)
rcl
rcr
pminsw
jmp
repnz
push
mul
gs
mov
in
fcmovu
test
jecxz
and
cmp
dec
aaa
hlt
cmp
jne
(bad)
mov
jmp
and
adc
jne
inc
mov
dec
test
inc
nop
(bad)
mov
repnz
mov
repnz
(bad)
lahf
rol
mov
sub
pop
cmp
jl
rcr
or
stos
sub
mov
pop
loop
hlt
ror
imul
dec
sar
jecxz
ins
or
lods
xchg
add
fiadd
das
jmp
std
hlt
pushf
retf
inc
push
adc
loopne
add
and
loope
seta
hlt
ins
mov
or
clc
addr16
adc
pop
(bad)
dec
mov
sti
icebp
push
and
daa
cmp
adc
fmul
inc
nop
dec
movs
mov
jae
stc
sbb
movs
gs
pop
sar
and
in
xor
jle
mov
mov
add
es
jmp
inc
sbb
xchg
sub
bound
ror
jp
cmps
sub
retf
xlat
adc
(bad)
pusha
rcr
cld
and
stc
mov
sub
xor
push
cmps
pushaw
loope
pop
enter
sbb
cmp
sbb
pop
shl
in
inc
stc
(bad)
push
dec
ficomp
in
hlt
mov
mov
jg
in
cmp
lds
inc
xchg
ins
out
lahf
rol
mov
jnp
mov
fucomp
sbb
and
call
xchg
(bad)
mov
jo
into
test
les
mov
les
or
mov
xlat
cmc
mov
push
push
jmp
dec
sbb
fadd
push
sbb
push
pop
test
les
test
ins
nop
add
jmp
loop
lds
push
imul
ins
(bad)
int3
mov
cmp
jne
xchg
movs
lea
stos
xchg
jge
adc
inc
and
pop
cli
inc
in
retf
inc
xchg
sbb
xor
out
sbb
xor
aaa
sub
pushf
cmp
or
cmp
pop
adc
jo
ret
jmp
addr16
addr16
add
hlt
repz
mov
inc
rcr
add
sbb
mov
and
sti
test
scas
or
mov
mov
mov
jne
test
sbb
test
mov
ss
retf
jmp
mov
xor
mov
icebp
adc
sar
jbe
mov
ja
sub
push
or
fidiv
loopne
sahf
gs
and
scas
mov
mov
jecxz
jae
loopne
loop
xchg
jecxz
fidivr
and
pop
fnstcw
mov
div
mov
xlat
push
ret
psubb
dec
sar
pop
test
adc
neg
mov
(bad)
sbb
fcomip
cdq
push
les
xor
xchg
shl
fstp
cmc
sub
jle
imul
mov
nop
sbb
push
in
xchg
mov
les
dec
jnp
inc
bound
hlt
push
inc
rcl
adc
jge
jge
xor
fst
pop
push
les
(bad)
push
xor
iret
stc
ror
das
and
mov
in
sar
adc
push
shl
or
dec
xor
loop
sub
popa
fldenv
inc
pop
add
popf
fs
leave
xor
and
loop
(bad)
sub
xchg
in
push
add
push
jne
in
mov
sub
dec
xchg
push
sub
daa
dec
(bad)
mov
inc
xor
adc
xor
mov
xchg
out
scas
jmp
mov
ds
in
loop
cli
cmp
pop
lea
pop
cmp
cmps
call
into
(bad)
mov
lahf
add
push
and
mov
dec
cs
retf
out
mov
dec
xchg
in
fidivr
fisubr
ins
lods
scas
das
sbb
and
jno
scas
in
dec
mov
cmc
xor
xor
cmp
add
stc
xor
(bad)
xor
jb
(bad)
adc
test
into
pop
mov
dec
cmp
or
xchg
cmp
fstp
fistp
mov
dec
ja
int3
out
add
push
icebp
mov
int3
inc
inc
add
call
mov
daa
mov
cmps
call
xchg
(bad)
mov
inc
cmovp
(bad)
xor
pop
inc
pop
jae
xor
addr16
fsubp
test
jne
cmp
mov
(bad)
jne
dec
and
or
in
xchg
imul
aas
mov
pop
cmps
into
dec
mov
jp
in
(bad)
data16
mov
cmc
mov
ss
ja
stc
push
pushf
pop
and
addr16
test
jb
adc
out
outs
dec
imul
cmp
idiv
(bad)
outs
pop
dec
mov
loope
addr16
and
jno
repz
push
dec
pusha
push
fisubr
repz
dec
cmp
mov
test
sub
pop
iret
push
adc
mov
dec
sub
mov
fisttp
and
xchg
sar
mov
dec
rol
test
ins
sti
jmp
stc
or
mov
lds
and
es
sti
sbb
mov
push
mov
test
push
push
mov
pop
xchg
(bad)
sub
cmp
cli
in
xchg
and
cli
jp
mov
sub
lods
push
push
dec
push
lock
push
xchg
loopne
neg
loopne
cld
push
ins
pop
jnp
sbb
push
shl
mov
aad
shl
mov
out
test
jmp
in
lods
inc
test
aas
xlat
aam
cmps
out
xchg
mov
cmp
movs
pop
rcr
dec
or
xor
out
cmp
adc
mov
fcmovnb
cwde
imul
mov
xor
mov
iret
add
cld
lea
or
clc
loope
mov
or
inc
mov
jno
jnp
bound
dec
or
jl
push
jl
mov
loope
cmp
sub
jns
jne
fistp
or
out
sbb
sti
dec
arpl
lds
ja
ret
aas
xlat
adc
pushf
xchg
lock
(bad)
push
push
pop
ja
cld
fsub
mov
(bad)
fistp
inc
out
mov
jnp
sub
movs
test
repz
fdiv
adc
outs
std
mov
dec
cmp
enter
mov
loopne
mov
lahf
dec
(bad)
jecxz
cli
fstp
inc
imul
pusha
push
xor
push
dec
aad
mov
cmps
cmp
jne
xchg
out
push
add
inc
jno
das
call
aam
imul
or
inc
lods
inc
xor
mov
pop
inc
push
ins
cmp
push
mov
sub
add
fidivr
mov
std
bound
retf
xor
push
inc
push
jg
jecxz
dec
sub
mov
mov
pop
mov
mov
shl
inc
or
mov
shl
mov
cmc
sbb
push
jne
push
sub
and
outs
push
or
test
adc
mov
push
pop
push
mov
mov
aaa
push
sbb
cmp
mov
(bad)
pop
or
out
xchg
out
and
mov
loope
fild
adc
ret
repz
dec
es
add
daa
adc
adc
mov
jl
test
jge
dec
mov
jno
int3
data16
inc
sub
mov
imul
test
sub
outs
rol
ret
cmps
daa
cwde
adc
fisttp
xchg
or
lods
inc
retf
loopne
pop
mov
das
pop
add
push
loopne
mov
(bad)
mov
push
sbb
or
or
popf
push
es
cmc
jb
xchg
or
mov
jmp
addr16
mov
test
jle
ror
and
stos
ss
les
neg
jmp
aad
jl
xor
mov
sub
int
out
rol
push
jae
pusha
cmp
jg
cmps
ret
nop
add
ds
pop
mov
adc
(bad)
and
push
adc
(bad)
push
sbb
pop
dec
xchg
in
sti
push
lock
mov
mov
fisttp
and
imul
nop
cvtps2pi
movs
in
shl
push
aaa
cld
jmp
inc
mov
(bad)
cld
arpl
pop
in
sbb
stos
lea
pop
js
dec
loope
sbb
sbb
not
xchg
les
jl
stos
inc
mov
in
imul
pop
out
pop
jmp
sub
mov
mov
jns
test
test
mov
jmp
cmp
pop
or
or
mov
bound
int3
push
les
xor
dec
sbb
cwde
addr16
xchg
cdq
in
frstor
fs
scas
pop
out
bound
(bad)
int3
sbb
(bad)
push
add
jl
out
inc
mov
xlat
mov
dec
call
jae
inc
adc
pop
push
out
xchg
daa
xchg
leave
xor
dec
cdq
inc
ins
push
mov
adc
loop
inc
daa
push
cmps
dec
(bad)
push
lds
ror
ret
or
pop
push
inc
ret
add
and
add
cmp
inc
retf
cmp
dec
xor
data16
in
xchg
jno
frstor
mov
fmul
call
adc
mov
mov
loope
adc
sub
das
nop
mov
sub
add
xchg
xor
addr16
jo
sbb
cmps
cmps
lock
stos
mov
jne
xchg
or
mov
inc
or
(bad)
cmp
add
mov
mov
or
paddq
pop
mov
mov
mov
fiadd
repz
rcl
pop
jb
aas
bound
ja
test
sub
pop
lods
stos
push
stos
ror
not
or
ja
xor
xchg
popf
fdiv
mov
lods
leave
jo
in
xlat
test
xor
cwde
jbe
sbb
push
pop
icebp
shl
ins
or
mov
mov
dec
cmps
mov
stos
mov
mov
loopne
inc
mov
dec
fs
xlat
xor
imul
rcl
icebp
imul
jmp
addr16
add
in
imul
jmp
dec
ror
cdq
pop
div
and
adc
pushf
repnz
push
nop
ret
aad
push
loope
mov
leave
fisttp
mov
call
cmp
cwde
scas
in
into
or
xlat
sub
xchg
xor
cmp
inc
jbe
arpl
and
pop
mov
ins
mov
or
mov
fwait
add
add
push
cmp
stc
pusha
out
xor
mov
repnz
xor
dec
retf
gs
sbb
rol
(bad)
or
jmp
fnsave
sub
into
call
xor
mov
push
mov
fcomp
push
adc
pop
xchg
pop
dec
ins
xchg
pop
xlat
xchg
and
mov
jl
mov
cld
(bad)
sbb
bswap
add
adc
pop
outs
dec
test
sbb
pop
lds
push
imul
and
and
cmp
idiv
(bad)
and
outs
cmp
addr16
nop
dec
pop
das
loopne
mov
ins
push
sub
rcr
xor
xchg
jmp
pop
sbb
fadd
dec
mov
jle
mov
adc
(bad)
in
loope
dec
dec
mov
and
cmp
push
add
jle
jns
je
xchg
mov
pop
cmc
or
xor
add
std
xchg
out
xlat
push
ss
rcr
push
xor
cmp
fxam
ret
out
(bad)
or
scas
imul
stos
mov
mov
adc
mov
daa
retf
xchg
push
push
fbld
ds
inc
lds
add
out
pop
call
icebp
cmp
movs
inc
inc
mov
xor
and
push
enter
les
or
ret
mov
adc
adc
pop
adc
dec
test
adc
cmp
xor
push
or
sti
(bad)
or
mov
sbb
mov
(bad)
sbb
daa
jle
mov
and
pop
sbb
jle
jecxz
add
or
adc
shr
mov
iret
sahf
pushf
pop
es
jmp
shr
mov
jns
xchg
xchg
arpl
sub
ror
sub
scas
mov
(bad)
aam
ja
outs
fstp
add
inc
(bad)
into
xchg
mov
jnp
mov
clc
loop
out
fstp
idiv
imul
test
or
fst
mov
mov
cmp
xchg
in
(bad)
ret
push
jae
mov
cmp
orps
aad
xor
imul
adc
sbb
sbb
xor
call
mov
and
sbb
inc
ja
sbb
daa
(bad)
or
jp
dec
ins
xchg
loop
ins
std
dec
enter
xchg
dec
sbb
ret
ficom
lods
xchg
cmp
stos
and
scas
mov
sahf
cmc
test
arpl
data16
enter
xchg
add
cld
fdivr
cs
inc
out
aaa
pop
mov
aad
sub
test
stc
jbe
imul
or
(bad)
dec
sub
pop
arpl
std
out
mov
cmp
pop
jno
add
mov
mov
loope
ins
and
mov
sub
ds
pop
add
and
imul
and
and
inc
repnz
cwde
hlt
add
or
int
jb
scas
add
sbb
in
mov
mov
pop
stos
adc
dec
jns
arpl
fcom
bound
push
jne
mov
jns
movs
mov
jno
imul
test
addr16
test
scas
mov
inc
out
imul
clc
sub
in
gs
push
adc
push
fadd
dec
and
stc
sub
or
test
daa
in
int3
cwde
fdivr
cmp
xchg
pop
pop
push
out
aam
push
test
push
iret
mov
cli
mov
test
push
xchg
mov
int3
gs
and
sub
arpl
inc
mov
sub
pusha
dec
mov
xor
mov
mov
aas
dec
xchg
inc
jns
(bad)
adc
dec
les
jae
or
jne
mov
int
into
mov
sti
test
pop
jp
or
add
test
adc
fsubr
pop
xchg
mov
mov
leave
sbb
pop
fstp
inc
xor
add
iret
mov
pop
(bad)
sbb
repnz
mov
xor
push
adc
call
(bad)
push
adc
jns
mov
movs
(bad)
es
mov
pop
ja
lahf
sar
hlt
outs
xchg
ds
shr
jnp
xchg
shl
scas
imul
sti
sbb
(bad)
loop
in
sbb
fwait
(bad)
mov
fldenv
int3
pop
sbb
xchg
sub
repnz
xchg
test
stc
jle
outs
test
add
dec
mov
loop
cmc
out
and
dec
or
mov
jo
hlt
ror
push
scas
or
shl
call
or
jl
fadd
mov
out
push
cmps
xor
into
adc
push
fmul
popa
repz
idiv
jge
mov
clc
push
rol
sbb
or
sub
sub
xor
and
sub
aam
bound
mov
sub
xchg
mov
rol
rcr
repnz
out
pop
push
clc
aam
mov
xchg
nop
sbb
gs
inc
neg
jmp
aam
outs
jg
sub
in
jb
push
hlt
add
into
sbb
jno
sbb
ds
mov
cmps
popf
pop
mov
fadd
mov
mov
outs
dec
icebp
mov
std
mov
movs
pop
jge
xchg
dec
out
mov
add
or
ja
(bad)
std
cmp
in
das
out
int3
mov
push
and
mov
xchg
jmp
jne
nop
push
fistp
sbb
xchg
push
movs
(bad)
mov
test
fwait
into
test
adc
fst
(bad)
cmp
xor
sahf
mov
(bad)
or
movs
cs
fwait
ins
cli
xchg
add
mov
call
int3
fwait
cmp
shl
mov
loop
cs
cmp
das
dec
fld
cmp
cmp
(bad)
aad
jno
test
pop
cmp
ins
dec
sub
lds
repz
sbb
pop
and
mov
and
jnp
iret
dec
cmp
neg
sbb
inc
lds
out
jo
in
stc
ror
lds
or
or
in
test
dec
sbb
jge
ins
dec
inc
loope
(bad)
shr
inc
push
xor
sti
pop
mov
adc
mov
inc
or
pop
cmc
repz
das
movs
mov
xlat
imul
dec
cwde
ror
mov
jp
int
out
or
retf
and
and
in
xchg
dec
or
push
(bad)
aaa
out
rcl
je
test
dec
sub
clc
pop
sbb
xchg
pop
xchg
xor
gs
sub
daa
cmps
xor
repz
sbb
imul
mov
jge
movs
and
mov
xchg
mov
push
xchg
out
test
pop
fsubr
ret
mov
sub
iret
(bad)
or
and
pop
adc
stos
xor
retf
lods
inc
ds
ret
paddw
xor
mov
mov
xchg
sbb
sub
nop
adc
or
int
and
cmp
sbb
push
outs
aaa
sbb
sub
adc
adc
ins
rcl
(bad)
jmp
(bad)
pop
fcmovne
cmp
test
fmul
fstp
or
cmc
pop
cmp
mov
aaa
xor
sbb
jne
inc
daa
repz
jl
jb
xchg
xor
mov
pop
fiadd
mov
sub
xchg
adc
fbld
ds
push
mov
jecxz
jg
in
stos
enter
or
pop
sbb
mov
jecxz
retf
arpl
adc
inc
push
shr
jae
sbb
imul
rol
mov
ins
dec
mov
stos
push
sbb
jo
mov
shl
push
imul
scas
jnp
sub
dec
dec
push
adc
jo
gs
test
push
stos
pop
adc
push
inc
scas
cmp
stos
cmp
add
jecxz
fidivr
es
daa
adc
xchg
add
push
loopne
push
(bad)
mov
int3
pop
xor
cmp
repnz
pusha
inc
mov
std
outs
sbb
jno
lods
lds
jb
pusha
sbb
sbb
and
or
dec
push
gs
fs
inc
out
mov
push
cdq
out
mov
imul
ret
add
shl
mov
dec
fld
das
pop
mov
daa
or
neg
imul
lods
lea
sbb
mov
xchg
loopne
enter
xchg
push
jno
mov
and
imul
es
dec
shl
push
cwde
(bad)
shl
in
xor
and
sbb
(bad)
adc
xchg
push
cmp
push
or
xor
sti
pop
std
gs
mov
test
push
sbb
fld
or
fmul
shl
(bad)
pop
jle
and
or
xchg
xchg
dec
jmp
adc
mov
es
or
or
fld
stc
push
movs
movs
sbb
in
xchg
or
cmc
(bad)
mov
sub
fidivr
adc
and
and
addr16
xor
inc
test
repnz
xor
pop
and
cli
je
jns
jns
push
hlt
and
adc
and
popf
repnz
inc
push
(bad)
inc
test
push
mov
cmp
sub
in
add
jbe
stc
dec
mov
in
lods
xchg
cmp
sar
es
mov
(bad)
dec
jmp
dec
jge
xor
movs
cmp
mov
add
(bad)
fwait
enter
pop
aaa
cmp
(bad)
lock
push
sti
jecxz
push
sbb
mov
aaa
sub
add
in
adc
ins
jns
jmp
ret
jne
gs
pop
adc
cwde
push
pop
dec
inc
mov
xchg
push
rol
pop
mov
lds
jmp
jg
lods
ins
pop
call
test
and
sbb
sbb
adc
fucom
aam
int3
les
push
neg
rcr
mov
push
mov
scas
lahf
pop
push
xchg
mov
call
adc
fs
clc
and
sbb
not
lea
in
ret
pop
cmp
xchg
out
or
and
mov
inc
mov
inc
fwait
dec
stos
mov
dec
jecxz
push
int
push
neg
or
sub
out
in
nop
jne
mov
mov
test
stos
cld
and
adc
fstp
mov
data16
sub
rep
retf
fisttp
push
inc
sub
call
cli
mov
call
push
sub
push
push
shr
push
cmp
xlat
pop
ret
push
cs
push
and
push
loop
ja
bts
call
in
xor
scas
call
pop
sbb
aad
sub
fsub
inc
aas
or
in
in
(bad)
xchg
sub
sub
or
jge
mov
jae
scas
mov
(bad)
and
mov
cmps
gs
inc
fnstcw
adc
xlat
and
add
arpl
mul
and
mov
gs
jg
pop
xor
push
dec
sub
ds
pop
frstor
(bad)
shl
cdq
adc
std
xchg
and
loope
push
jle
(bad)
or
rcl
mov
mov
(bad)
retf
test
data16
js
or
mov
movs
ss
das
std
inc
pop
aaa
and
in
(bad)
int
cmc
arpl
cmp
lods
pop
inc
xor
ret
(bad)
lock
mov
cmps
sub
add
pushf
leave
call
into
lahf
ficom
pop
mov
fcmovnbe
xchg
cmp
xchg
in
xlat
jo
inc
xor
pop
popa
into
mov
pushf
adc
ss
fwait
(bad)
lods
(bad)
or
mov
push
xchg
(bad)
sub
retf
push
push
xchg
fbstp
shl
push
ds
ds
fist
add
test
xchg
adc
movs
dec
sbb
jg
sbb
icebp
mov
sbb
push
out
lods
cdq
or
mov
dec
cli
test
ins
mov
popf
fwait
pop
vpmulhuw
sar
sub
or
xlat
push
jle
xchg
push
fwait
pop
rol
pusha
mov
stos
shl
xor
dec
jbe
mov
jbe
xlat
inc
push
xchg
out
cmc
je
sbb
sahf
into
out
sbb
stos
sbb
jmp
sbb
push
adc
shl
jle
sub
or
test
push
(bad)
jg
xchg
test
mov
retf
fadd
mov
mov
sbb
push
bnd
popa
mov
fldcw
dec
cwde
ins
out
sub
mov
inc
mov
add
icebp
mov
mov
cmp
xor
sti
outs
fstp
out
mov
adc
ret
xor
in
scas
jl
mov
call
mov
loop
lahf
repz
push
jo
cld
dec
cvtps2pi
push
jnp
mov
cmp
jmp
xchg
rdmsr
dec
jns
mov
repz
loop
or
test
out
adc
inc
test
cmps
dec
ficom
xor
(bad)
jo
cmp
iret
xchg
jb
sbb
sbb
push
dec
xchg
leave
stos
mov
rcl
ds
jbe
mov
or
xor
adc
mov
push
iret
inc
xor
test
lahf
mov
mov
(bad)
mov
aam
xor
mov
aad
sub
cmps
das
mov
loope
int
cmp
ror
xchg
and
and
out
repnz
into
in
mov
ins
pushf
adc
push
sub
jle
mov
push
in
dec
mov
mov
or
dec
mov
call
leave
adc
popf
add
cmp
stc
cs
loopne
mov
push
popf
dec
mov
sbb
xor
sbb
lods
lahf
cmps
iret
mov
loope
inc
in
(bad)
ja
or
jnp
dec
aaa
dec
popf
xlat
xchg
jne
movs
and
pop
mov
add
(bad)
cmps
sub
imul
dec
dec
lds
jge
jmp
push
adc
jbe
leave
sub
add
jns
not
loope
push
xor
ds
and
dec
fsubp
sbb
movs
enter
clc
jb
jp
push
adc
adc
sub
ja
inc
ret
and
out
xor
mov
mov
cmp
adc
aas
and
add
and
(bad)
jle
push
adc
ins
lods
jmp
sbb
cmp
mov
dec
mov
outs
inc
fld
into
or
mov
and
pop
add
jae
mov
div
gs
xlat
mov
mov
in
movs
pop
add
nop
xor
inc
fist
call
std
fldenv
add
int3
fldcw
xor
mov
imul
and
scas
xchg
das
sub
sub
push
out
call
push
cs
mov
jecxz
outs
mov
fs
fld
jae
je
ja
add
shr
mov
mov
mov
xor
push
adc
dec
inc
mov
inc
bound
(bad)
shl
and
cmp
mov
ja
aad
rcr
jmp
mov
or
jle
adc
int
fnsave
scas
pop
jae
lea
(bad)
mov
(bad)
dec
dec
in
push
hlt
test
or
dec
movs
dec
or
iret
aam
(bad)
fild
scas
out
(bad)
shl
push
push
sbb
enter
push
test
mov
sub
adc
cld
call
hlt
mov
test
cmp
inc
hlt
retf
mov
push
je
cmp
cld
(bad)
(bad)
cmps
mov
xor
in
or
sbb
into
sbb
xchg
add
or
xchg
push
mov
stc
mov
cmc
sub
mov
mov
and
mov
pop
jno
xor
aaa
call
push
xor
fcmovnb
mov
sti
icebp
arpl
and
jno
psraw
into
jno
fsubr
mov
and
loope
cmp
jae
(bad)
pop
dec
cmp
(bad)
mov
xor
fmul
out
or
jne
aad
cmp
lds
(bad)
jne
test
(bad)
inc
add
sbb
pushf
pop
inc
mov
sub
push
or
mov
mov
scas
call
mov
mov
pop
cli
adc
clc
push
sub
stos
rcl
pop
push
pop
push
pop
mov
ins
adc
mov
cmp
jbe
fwait
jns
les
sub
mov
into
movs
clc
cld
scas
test
retf
sbb
in
sbb
and
loop
lahf
pop
shl
sbb
nop
in
js
(bad)
hlt
and
outs
add
ds
pushf
jnp
inc
jmp
repnz
popa
jmp
push
push
retf
out
jge
adc
jne
lods
fiadd
idiv
and
xchg
frstor
adc
pop
add
inc
cmps
fist
shl
cmp
add
cmp
mov
mov
mov
jmp
stc
add
fwait
push
nop
inc
xor
push
test
sar
add
imul
xchg
into
cmp
stos
xchg
dec
dec
ss
or
sti
ja
test
and
sti
sub
jns
push
dec
loopne
ins
(bad)
push
push
or
out
shl
cmp
xchg
push
push
movs
fistp
outs
pop
in
sbb
add
jnp
fisubr
jbe
mov
inc
and
dec
mov
dec
mov
jae
mov
or
dec
out
adc
stos
xor
and
(bad)
and
pop
ret
ror
into
fsubp
mov
arpl
add
pop
cwde
mov
add
push
pop
sti
push
mov
jnp
pop
mov
xchg
mov
dec
icebp
rcl
or
or
mul
xor
(bad)
lds
ror
jmp
repnz
jbe
push
xchg
and
jmp
cmp
enter
sahf
ss
mov
stc
lods
cmps
cmps
jb
push
imul
mov
jmp
outs
jge
aam
ficom
ret
in
mov
je
outs
push
imul
cdq
pop
mov
push
inc
push
or
fnsave
jns
out
ficomp
adc
imul
or
jae
scas
inc
xchg
sub
mov
lock
sbb
in
icebp
lock
adc
cld
mov
xor
inc
into
push
mov
aas
(bad)
lds
imul
(bad)
dec
cmp
pop
mov
ficom
sahf
cmp
cwde
fimul
sub
pop
pop
mov
or
mov
pop
inc
push
jnp
out
je
pop
adc
sti
jmp
pop
mov
addr16
xchg
clc
jmp
jnp
leave
pop
(bad)
xchg
cmp
fsub
pxor
xchg
pop
cli
bound
mov
dec
fld
(bad)
mov
(bad)
push
mov
cdq
xchg
(bad)
aam
in
sub
xchg
and
es
shl
dec
call
adc
cmp
jl
mov
and
or
push
ror
xchg
fisubr
adc
stos
push
pop
push
std
bound
lea
imul
cmp
sub
sti
loope
cmp
test
movs
jae
adc
jecxz
xor
push
pop
fisttp
jl
and
shl
sub
mov
jmp
mov
mov
in
inc
loop
jmp
fldcw
add
pushf
fisub
aas
loopne
cmps
pop
sbb
(bad)
movs
ret
lds
or
sbb
xor
push
shr
xchg
adc
mov
mov
mov
sub
adc
jle
mov
sti
xchg
loopne
into
dec
adc
mov
xchg
clc
dec
fs
sbb
ss
pop
in
dec
push
mul
push
jb
cmps
movs
test
pop
dec
call
(bad)
push
test
push
and
movs
movs
cmps
mov
fst
push
pop
inc
(bad)
cmps
xchg
aam
adc
jne
cmp
push
add
push
push
sti
mov
sub
mov
ja
sbb
cmps
loope
in
xor
adc
sub
xor
out
daa
dec
push
(bad)
(bad)
call
(bad)
mov
xchg
cmp
dec
fdiv
pusha
adc
dec
or
push
fwait
mov
aam
out
sub
test
inc
xchg
cwde
mov
cmp
sahf
lock
fwait
hlt
sub
cmp
lahf
sub
popa
or
test
xor
outs
and
ds
adc
cs
mov
or
pop
xor
cmc
jmp
jnp
pop
(bad)
jbe
push
adc
repz
xchg
mov
and
iret
cmp
xor
cwde
shr
dec
jg
sub
jmp
iret
and
inc
test
retf
jne
fsub
call
xchg
clc
frstpm(287
mov
push
lock
pop
stos
fstp
push
dec
hlt
mov
mov
cmps
fs
leave
or
fnstcw
sbb
test
sbb
pop
adc
and
add
js
mov
call
stos
push
sar
in
adc
lods
pop
mov
mov
ja
push
shr
sahf
xlat
lods
fidivr
enter
pusha
push
sar
test
cmp
push
retf
and
cli
ins
adc
mov
(bad)
popa
and
movs
sub
sti
push
xchg
or
scas
xchg
je
xchg
enter
vxorps
sub
mov
and
lock
xchg
cmp
xlat
push
xchg
jae
push
and
ss
movs
movs
popa
fs
xor
sub
or
sub
add
out
pop
lods
sub
sar
frstor
pop
dec
fstp
xchg
rol
pop
int3
icebp
pop
add
pop
loopne
psrld
sub
pop
sub
xchg
(bad)
imul
mov
dec
cwde
ret
(bad)
fsubr
push
pushf
push
add
std
inc
iret
add
shl
popf
lods
lods
ret
sbb
dec
mov
mov
sub
icebp
xor
xchg
push
in
mov
mov
mov
int3
and
mov
clc
call
shl
sahf
xchg
aas
mov
mov
sahf
stos
adc
mov
pop
pop
or
add
dec
js
sbb
push
push
mov
sahf
rol
cld
in
sub
xor
aas
pop
inc
lock
stos
jbe
or
add
sbb
push
repz
sub
sub
sbb
xchg
sub
cmc
xchg
and
sub
test
mov
les
call
xor
not
pop
add
inc
out
sbb
push
xor
idiv
idiv
add
push
add
adc
test
fdiv
mov
daa
mov
scas
xchg
pop
icebp
sub
cld
mov
push
int
fimul
(bad)
iret
iret
dec
fcom
jecxz
mov
xchg
jo
xchg
inc
and
inc
test
mov
pop
inc
aam
jae
dec
push
pop
bound
xchg
scas
cmp
in
adc
push
jmp
jae
shl
clc
dec
jnp
xchg
jne
push
hlt
es
out
cmps
inc
clc
mov
fwait
sti
adc
ror
mov
jo
or
ja
pusha
mov
jg
popf
cdq
pop
imul
and
and
xor
mov
inc
mov
jmp
add
and
mov
push
add
frstor
(bad)
jle
sub
adc
ja
sub
pop
sbb
sahf
xlat
pop
div
arpl
dec
dec
push
mov
pop
push
mov
pop
cli
push
xchg
pop
scas
retf
and
in
sbb
push
xchg
jne
dec
sbb
jo
(bad)
sub
sub
ins
jbe
xchg
pop
das
adc
mov
cs
sub
cmps
leave
out
cmc
test
cdq
push
cdq
fadd
aaa
repnz
bound
xchg
lahf
push
fcomi
sti
loop
xchg
mov
inc
shr
cmc
fwait
outs
mov
(bad)
es
outs
mov
mov
shl
add
add
xchg
adc
cdq
int3
in
mov
int
lock
lods
xchg
push
push
stos
popa
sbb
in
dec
shl
mov
xlat
je
push
fld
fdiv
mov
in
test
lds
dec
test
jno
(bad)
cs
cmp
jns
scas
inc
lea
dec
jae
stos
mov
mov
aas
enter
frstor
push
cwde
mov
pop
(bad)
ds
fidivr
push
fist
mov
and
mov
inc
lar
dec
sti
cmp
mov
(bad)
and
int
gs
xchg
(bad)
addr16
sbb
inc
mov
sub
inc
stos
icebp
mov
add
adc
xchg
lods
rcl
adc
and
fnstenv
jne
pop
pop
sbb
mov
das
cmps
fldenv
retf
and
fisubr
xchg
aad
pushf
bound
push
fisubr
lods
in
out
fimul
dec
out
dec
outs
pop
mov
ret
sub
xchg
jne
inc
imul
or
mov
int3
inc
or
mov
sbb
stos
outs
jmp
push
add
mov
lahf
bound
or
adc
push
add
in
into
rol
xlat
jno
cmps
and
ret
std
fistp
or
cmps
mov
jl
popa
mov
int
and
push
mov
jno
mov
in
je
fisub
test
fild
jp
jp
inc
add
adc
fs
out
icebp
pop
jge
or
(bad)
sub
out
push
add
daa
xchg
mov
dec
xor
jmp
push
cdq
push
jne
jmp
sbb
aam
pop
sbb
xchg
adc
xchg
in
(bad)
dec
mov
dec
daa
aam
xor
sbb
les
pop
adc
cli
sti
movs
push
sub
add
jle
sbb
inc
mov
sbb
sar
fdiv
mov
mov
mov
mov
int3
lock
gs
push
add
inc
jg
mov
pop
pop
inc
sbb
sbb
test
ret
aas
(bad)
lock
push
inc
mov
push
xor
out
jge
es
add
fnsave
pop
stos
cmps
or
stos
shr
push
ss
mov
clc
mov
fcmovb
stos
push
mov
inc
ins
mov
aam
sbb
js
outs
xlat
(bad)
(bad)
loopne
and
dec
xchg
loop
and
jmp
lea
xchg
in
mov
or
inc
inc
jge
jns
ins
ins
cld
jb
inc
sbb
lahf
sbb
retf
xchg
push
mov
jge
sub
sbb
adc
cmps
dec
aaa
sub
dec
cwde
mov
outs
int
inc
add
mov
sbb
cmps
loope
sub
fild
dec
in
pop
adc
add
mov
cmp
push
dec
mov
pop
mov
sub
fwait
mov
mov
jle
dec
push
pop
cmp
adc
or
jg
hlt
cwde
sbb
or
pop
cmps
test
out
repnz
jns
pop
rol
data16
xlat
ror
int
or
jecxz
movs
jnp
fs
je
dec
ficomp
call
dec
pushf
aas
rol
pop
mov
das
loopne
jp
jg
lods
rol
push
idiv
aas
xor
sbb
pop
mov
cli
push
gs
sub
(bad)
js
sub
(bad)
mov
mov
dec
jl
or
cmp
ins
loopne
pusha
rol
cmp
clc
psubsw
fistp
jp
das
jmp
movs
pop
adc
and
call
cmp
psubd
and
jmp
ffree
(bad)
jp
inc
lods
sub
aam
or
push
cmp
addr16
stos
stos
push
mov
lock
mov
and
call
and
sbb
repz
mov
xchg
jmp
sub
xor
cmc
jns
or
stc
cmc
xchg
loop
or
mov
adc
(bad)
sbb
jnp
mov
fisttp
retf
lods
je
sbb
(bad)
aam
out
jnp
pop
sbb
arpl
aaa
sub
call
inc
cmp
pop
cmps
ja
aam
xchg
xchg
mov
xchg
xchg
jle
nop
repnz
push
std
cmp
inc
repz
cmp
cdq
fsub
adc
push
cdq
int3
mov
pop
inc
inc
inc
xor
rol
mov
int3
jp
je
movs
jo
inc
popf
in
mov
jo
adc
sbb
cmps
sti
inc
sub
call
imul
or
jmp
out
cmc
das
xor
sbb
sbb
bound
fs
adc
xor
pushf
in
scas
jg
mov
imul
adc
and
sbb
adc
mov
dec
sbb
aaa
xchg
js
jmp
and
fstp
dec
stc
jmp
jae
xor
cmp
ret
pop
lock
loopne
lahf
cmp
pusha
jg
movs
xchg
jb
rcl
hlt
mov
ins
fs
call
dec
add
push
out
xchg
add
cmp
(bad)
lock
add
and
mov
loopne
retf
push
jmp
loop
in
das
mov
pand
xchg
mov
out
push
sub
and
out
test
cmc
into
test
inc
add
sub
xchg
jg
fwait
push
test
test
pop
clc
icebp
jb
sbb
mov
mov
in
not
(bad)
mov
push
jns
pop
fidivr
imul
lds
inc
adc
mov
and
enter
(bad)
jnp
xor
jmp
add
jbe
mov
movs
sbb
scas
ins
cmp
fistp
jg
xor
adc
push
jp
or
shl
mov
std
(bad)
retf
pop
retf
addr16
mov
and
mov
loopne
sbb
and
aas
iret
ins
add
es
xchg
stos
(bad)
cmps
xchg
add
stc
push
mov
(bad)
(bad)
shl
jl
inc
rcr
mov
pop
les
sub
and
xor
aaa
xor
loop
test
in
jecxz
daa
das
xor
jns
pop
inc
xchg
add
(bad)
js
out
or
adc
mov
test
pusha
push
ja
(bad)
in
fsubr
repnz
sahf
je
movs
jne
ins
aas
mov
xchg
stos
addr16
add
cmp
sub
jp
fwait
repnz
call
jb
lea
(bad)
lds
pop
push
push
inc
shl
and
aas
sbb
dec
pop
sub
mov
ds
mov
or
jg
mov
aam
ins
rcr
lock
je
(bad)
jnp
mov
mov
or
mov
test
jecxz
and
lahf
adc
div
jae
dec
sar
call
cmp
out
out
leave
in
outs
in
aas
cmp
adc
dec
clc
int
or
xchg
xchg
out
shr
rep
push
std
adc
call
das
or
cmp
pop
nop
sbb
into
outs
call
jg
or
push
cmp
mov
add
inc
xor
pop
push
enter
add
xchg
ds
jo
icebp
movs
add
sub
sti
pop
dec
movs
pop
aad
nop
pop
inc
clc
pop
or
add
push
jp
test
(bad)
rcl
sub
pop
add
xchg
sbb
mov
xor
mov
pop
jmp
add
sub
or
mov
std
jb
jl
arpl
cmp
ins
add
sub
cs
pop
rol
and
outs
sub
retf
fs
push
sti
(bad)
mov
ficom
mov
and
pop
popf
mov
ins
out
cmc
or
mov
xlat
shl
sub
(bad)
xor
push
imul
xor
int
and
clc
adc
lahf
xor
and
adc
(bad)
mov
sbb
repz
jp
cdq
adc
dec
dec
inc
xchg
jb
xor
clc
or
mov
popa
jg
pusha
dec
lods
fucomip
stos
in
dec
cmp
call
cmps
sbb
into
das
and
aas
daa
pop
cmp
pop
test
ror
xor
dec
test
jbe
into
mov
cmp
push
push
jb
push
mov
aam
jbe
add
cmp
inc
pop
(bad)
rcr
sub
ror
xor
je
in
jb
xor
push
xor
mov
jo
dec
or
fisttp
rcl
scas
adc
stos
xchg
mov
mov
out
enter
sub
pop
leave
(bad)
nop
mov
push
add
imul
out
cmp
xor
pop
pop
mov
retf
int3
call
retf
jo
mov
adc
cs
jg
jp
pushf
fadd
adc
jo
inc
arpl
and
mov
cld
(bad)
xchg
inc
push
push
stc
es
cmp
add
ja
adc
add
cwde
mov
mov
mov
mov
xchg
enter
out
xor
movs
jne
dec
push
mov
pop
stos
mov
dec
sub
xchg
xchg
lock
fild
push
outs
adc
add
int
pop
dec
pop
add
hlt
add
push
dec
inc
test
sbb
(bad)
xor
cmp
ficomp
jg
pushf
mov
jnp
adc
xor
mov
push
movs
add
or
cmc
cmp
int3
ret
movs
sub
out
fidiv
jge
jg
inc
call
xor
dec
pop
stc
jmp
jmp
ja
test
out
xor
dec
dec
jecxz
mov
test
retf
scas
mov
push
push
lahf
imul
dec
inc
sbb
pop
rcl
es
shl
jbe
or
mov
fnsetpm(287
jb
jo
pop
pusha
nop
push
fwait
jb
hlt
ds
in
dec
ins
test
in
xor
bound
scas
icebp
inc
outs
mov
ret
mov
cmp
cdq
xchg
jne
and
or
push
sub
mov
dec
inc
arpl
push
(bad)
push
mov
je
fcmove
retf
pop
shr
xor
push
movs
outs
fcom
ror
popf
sbb
cmc
xchg
mov
sahf
xchg
cmp
mov
adc
(bad)
adc
push
call
(bad)
sbb
sbb
loope
pop
inc
stos
daa
inc
ret
sahf
sub
cld
popa
pushf
out
aaa
(bad)
gs
pop
pop
mov
dec
jmp
inc
push
xor
and
add
jo
dec
aad
iret
xchg
cmps
sbb
std
jne
and
bsr
xor
cmp
cld
retf
jno
xchg
add
inc
nop
xor
sub
mov
pop
mov
and
ja
bound
imul
cmc
sbb
sub
sub
mov
xchg
enter
pop
sub
fisubr
and
push
mov
jl
pop
xor
sbb
lds
xlat
test
cdq
sahf
xchg
sahf
cld
mov
fdiv
test
push
mov
pop
movs
sub
pop
jecxz
pop
aaa
add
or
fcom
inc
repz
and
shr
fist
pop
retf
xor
in
(bad)
jg
adc
nop
sub
xor
or
mov
test
mov
cmp
jnp
int3
fiadd
jb
ss
(bad)
jle
dec
jle
cmp
inc
jno
pop
mov
rcl
aaa
in
cmc
mov
repz
cs
add
call
xlat
(bad)
das
push
and
jp
cmp
cmp
test
pop
in
sbb
ret
cmp
xchg
clc
popa
mov
mov
fadd
fistp
add
ins
ret
std
mov
retf
inc
imul
cmp
cmp
mov
push
push
rcl
jle
arpl
sbb
push
test
mov
or
(bad)
xchg
and
cwde
mov
in
sbb
shl
inc
pop
sub
mov
ss
jne
jp
add
or
(bad)
cwde
clc
stos
fsub
sbb
ds
inc
mov
jo
jecxz
adc
pop
mov
sub
daa
pop
dec
in
jb
and
repz
pusha
rcr
cmp
cmp
adc
mov
adc
jb
and
pop
or
mov
push
call
loop
mov
jae
(bad)
cmp
pop
add
test
mov
pop
adc
inc
dec
fs
pop
jb
aad
scas
ss
loope
cwde
lock
jo
adc
fistp
fist
push
jo
fnsave
leave
jae
in
(bad)
fstp
imul
inc
xchg
pushf
ret
or
push
rcl
adc
fwait
stos
mov
push
arpl
and
jmp
mov
or
sbb
sbb
dec
inc
rcr
data16
rol
call
stos
sti
xchg
inc
out
push
mov
jo
jno
pop
mov
and
and
push
xor
jg
xor
out
jle
sbb
pushf
test
mov
xlat
xchg
addr16
test
sar
and
sub
adc
mov
call
sbb
je
cmp
mov
and
cmps
neg
push
lock
inc
jmp
or
and
xchg
popf
mov
cmp
enter
jmp
mul
outs
adc
pop
mov
fisttp
push
xor
aaa
test
inc
test
xor
(bad)
sbb
iret
push
and
lods
loope
mov
jb
push
mov
stos
retf
mov
mov
pop
mov
cmp
mov
push
and
xchg
or
jmp
mov
xor
xchg
test
fidivr
test
jecxz
sti
in
fstp
and
shl
jbe
mov
cmc
sub
rcl
popf
jo
cmps
aaa
add
dec
fist
inc
imul
pop
xchg
retw
and
and
jmp
lea
shl
mov
push
movs
sete
add
sti
inc
or
push
pop
jno
xchg
cmps
cmc
pusha
(bad)
movs
sub
or
movs
in
xor
jo
sbb
add
hlt
arpl
inc
shl
mov
pop
push
(bad)
into
rcr
out
jne
ss
mov
jmp
test
xchg
add
movs
adc
xchg
(bad)
dec
or
mov
push
or
cmps
arpl
scas
fstp
mul
adc
adc
push
and
jbe
scas
sub
pop
and
fiadd
xchg
jp
lea
sti
xor
cmps
outs
mov
add
adc
dec
imul
sbb
add
add
les
into
pop
cmc
xchg
fisub
icebp
test
push
es
push
aad
mov
xchg
push
sub
(bad)
(bad)
repz
test
lahf
inc
mov
mov
dec
mov
loop
(bad)
aaa
jle
inc
pop
or
scas
aad
sbb
inc
ret
jg
jge
test
cli
enter
in
std
pop
cli
movs
lock
pop
ins
pushf
loope
xchg
scas
fprem
je
into
into
xchg
(bad)
jns
iret
outs
cmc
sub
fwait
and
arpl
cmp
inc
sahf
jnp
ja
push
dec
cli
xor
cmp
pop
popa
inc
pop
pop
jmp
arpl
pop
(bad)
js
pop
aaa
les
int
out
and
cmps
xchg
xchg
js
push
cmp
rcr
mov
outs
test
mov
push
dec
mov
mov
sub
inc
mov
lahf
adc
dec
stos
mov
int
sahf
jmp
jmp
stc
mov
sbb
loope
(bad)
(bad)
addr16
xchg
pop
fld
cmc
idiv
add
stos
pushf
imul
fsubr
cmp
cld
loope
mov
push
les
push
mov
push
mov
std
fsubr
(bad)
mov
sub
cmps
sbb
sbb
into
cmp
and
fnstsw
out
(bad)
in
fs
rcl
and
sub
mov
push
add
dec
or
mov
jmp
pop
lds
jmp
xchg
mov
mov
popf
jae
mov
not
mov
push
test
out
pop
mov
jg
pop
mov
pop
ds
add
lahf
shl
out
loopne
ror
stc
and
lahf
add
jecxz
mov
jbe
fcomp
sbb
dec
mov
mov
and
(bad)
mov
dec
(bad)
dec
jae
or
ja
mov
popa
mov
or
inc
cmp
fimul
imul
fmul
(bad)
gs
fisubr
mov
pop
adc
inc
fsubr
add
mov
xchg
aaa
inc
js
es
hlt
cdq
mov
sub
sahf
jl
dec
dec
mov
xor
push
pop
gs
mov
rcl
inc
int3
pop
cmp
jne
enter
and
jge
shl
mov
fwait
jnp
inc
dec
add
mov
test
push
inc
stos
fnstenv
cmps
xchg
lods
movs
xor
int3
jo
call
push
outs
jmp
xchg
jne
mov
test
add
fsub
fimul
push
add
int3
mov
or
inc
cmp
push
cmps
add
and
scas
mov
jns
push
pop
aas
push
xchg
jae
aas
dec
dec
mov
pusha
les
aaa
dec
or
cwde
cld
mov
sub
push
addr16
popa
xchg
sbb
div
mov
cmp
pop
loopne
pop
jecxz
dec
mov
sbb
mov
push
aam
fsubr
cmps
mov
push
lock
fistp
cmp
or
ror
sub
(bad)
xor
rcr
mov
loop
in
dec
aam
xchg
push
das
sub
fcomp
xor
xchg
jae
pop
cmp
arpl
js
push
in
sar
je
jle
int
inc
mov
pop
test
iret
add
stos
xor
fwait
cmp
push
mov
cmp
xor
pusha
in
in
mov
sub
loope
stos
push
stos
out
sub
push
loop
lods
cmc
ret
neg
leave
outs
cmp
and
movs
push
mov
add
test
sbb
(bad)
sub
nop
icebp
mov
stos
dec
cdq
ins
(bad)
pop
icebp
push
sbb
cs
popf
or
lods
js
jg
mov
cmp
mov
stos
push
mov
adc
push
mov
xor
outs
stc
dec
sbb
sbb
test
fmulp
pop
dec
sub
inc
push
ins
xchg
push
mov
pop
je
(bad)
aad
inc
mov
lods
lods
aaa
jmp
inc
or
test
lods
pop
sbb
add
int
inc
or
jno
repnz
aad
jnp
push
retf
cmc
std
jp
repnz
add
fnstsw
mov
in
sbb
sar
test
(bad)
mov
sbb
pop
in
fs
cmps
pop
lds
or
aas
mov
test
icebp
inc
mov
mov
ja
jmp
stos
fisttp
cli
pop
cmp
xor
retf
call
out
fisub
and
call
sub
fidivr
inc
sub
push
pushf
and
fcom
mov
add
add
xor
popf
movhps
movs
and
and
xchg
std
mov
mov
dec
shr
or
xchg
out
imul
sbb
cmp
inc
fldcw
sbb
push
in
xchg
fcmovne
shl
fidiv
add
js
xor
inc
inc
out
mov
jecxz
hlt
sub
sbb
fwait
sbb
xchg
lahf
hlt
ins
add
adc
stc
sbb
nop
jle
push
cmp
mov
push
mov
ins
js
mov
or
movs
(bad)
dec
retf
je
arpl
push
cmc
jp
inc
push
mov
shr
sub
xor
mov
push
sbb
adc
jb
xchg
xchg
jl
or
(bad)
adc
jecxz
dec
int3
in
inc
les
mov
in
sub
loop
icebp
adc
jne
inc
les
lds
loope
and
outs
test
stos
mov
mov
out
or
loopne
sub
push
cmp
sbb
les
adc
pop
ret
popa
push
jl
xlat
lods
enter
fs
std
test
inc
mov
or
or
add
push
movs
shr
add
lods
test
stc
xchg
fwait
jl
sub
mov
pop
mov
jne
pop
call
scas
or
adc
fcom
scas
jno
rcr
inc
mov
dec
fcom
enter
inc
push
mov
dec
mov
out
loope
pop
mov
or
and
aaa
mov
and
fild
sbb
pop
dec
cs
mov
bound
pusha
fsub
xchg
push
lea
aaa
cmps
popf
sbb
inc
xlat
fiadd
adc
pop
mov
push
lea
inc
adc
cmp
add
ds
test
sar
lds
dec
rcr
leave
push
cmp
idiv
test
lea
in
sbb
ds
xchg
push
(bad)
leave
inc
push
mov
jmp
cmc
ds
cmp
jmp
push
scas
push
stos
dec
pop
mov
xlat
jmp
popa
or
leave
ds
or
adc
add
scas
icebp
enter
cmp
mov
mov
or
pop
inc
stos
and
dec
rcl
test
or
rol
xor
icebp
stc
mov
mov
or
dec
mov
fst
in
inc
xchg
pop
sbb
xchg
aas
push
jmp
fwait
popf
mov
mov
mov
jl
mov
xchg
mov
adc
mov
mov
ins
sbb
dec
popw
lds
mov
movs
push
xchg
sub
pop
inc
dec
inc
jno
sahf
sar
pop
rol
scas
mov
and
sub
lods
loope
shr
mov
mov
mov
pop
dec
sub
retf
(bad)
cmp
shr
call
rol
cmps
loopne
rol
pop
retf
aad
or
aad
or
adc
stos
cmp
sub
push
mov
push
sub
mov
stos
dec
or
and
call
(bad)
push
loopne
scas
jns
jo
xchg
neg
pusha
and
popf
add
sbb
out
imul
enter
dec
or
sbb
(bad)
sbb
jg
sbb
jmp
popa
xor
push
jl
adc
sub
sahf
mov
dec
stos
sub
push
add
setnp
or
add
mov
and
(bad)
pop
fsub
cmp
test
stos
retf
int3
or
test
pusha
imul
xlat
xchg
clc
xor
mov
pop
push
ret
stos
dec
or
and
inc
push
mov
movs
pushf
dec
test
cli
or
sub
push
mov
mov
jmp
je
popa
xlat
int
cli
dec
jno
pop
movs
cmps
adc
hlt
repnz
pop
mov
add
mov
sahf
fisttp
addr16
xchg
dec
je
mov
jnp
mov
pop
js
es
xchg
dec
sbb
adc
mov
mov
add
mov
cmp
jp
aad
cmps
nop
or
inc
leave
mov
mov
out
jno
enter
cmp
stos
les
mov
mov
sub
dec
mov
pop
in
sbb
bnd
rep
inc
mov
xchg
stc
retf
mov
and
stos
mov
dec
xor
and
fs
adc
aas
cmp
fisttp
mov
jnp
inc
(bad)
aam
outs
mov
lock
xor
das
lock
xchg
dec
ins
ror
out
cmp
cdq
es
fdivr
je
out
or
scas
cld
pop
adc
cwde
aas
lock
(bad)
out
or
mov
dec
dec
sbb
aas
ja
jmp
icebp
rcr
and
mov
jne
pop
jmp
dec
cmp
loope
cmps
xor
pop
jae
mov
mov
mov
movs
xchg
sbb
in
jno
ins
es
jbe
pop
mov
or
mov
pop
jmp
cs
call
sub
sar
repnz
pop
nop
push
es
jno
arpl
mov
enter
push
or
mov
adc
es
outs
in
mov
dec
or
cwde
xor
pop
cmps
add
sbb
and
adc
jg
jnp
mov
test
jae
dec
and
in
inc
sub
push
mov
aam
jns
xchg
(bad)
push
mov
sub
jp
push
mov
push
jp
retf
mov
aam
nop
loopne
cmc
leave
aaa
adc
ins
mov
call
mov
(bad)
mov
clc
push
jmp
xor
pop
mov
sub
xor
lea
and
xchg
je
lods
inc
movs
iret
repz
enter
adc
xchg
test
ss
in
addr16
mov
fwait
pop
scas
ficomp
popa
psubsb
(bad)
mov
adc
jp
test
rcr
mov
pop
push
add
aad
daa
les
or
or
les
outs
enter
mov
jae
pop
inc
test
les
jne
retf
jge
sbb
xor
enter
cs
inc
jbe
mov
jp
loopne
std
sbb
add
stc
aaa
mov
ds
lods
sbb
rcr
mov
ins
ds
shr
out
pop
lods
gs
iret
jg
jg
leave
data16
inc
fcomp
pop
mov
inc
gs
sub
mov
adc
xor
mov
mov
scas
lods
pop
cdq
es
dec
jno
xchg
cmp
ins
inc
(bad)
popw
out
push
sbb
ja
adc
test
push
fsubr
mov
fisubr
cmps
mov
adc
jbe
stc
add
jmp
or
dec
adc
xchg
(bad)
fwait
jbe
mov
sub
sub
sbb
sar
es
in
out
stos
adc
xchg
cs
xchg
mov
enter
dec
mov
aam
in
call
shr
jnp
test
xchg
outs
push
cmc
jle
push
add
mov
scas
and
cmp
inc
dec
(bad)
adc
fldcw
stos
rol
dec
imul
ins
cld
inc
sub
int3
dec
pop
ins
cwde
aas
(bad)
xchg
mov
adc
imul
shl
push
xchg
adc
int3
inc
xor
sub
mov
mov
popa
xchg
sub
ret
jae
outs
std
or
push
js
and
pop
sub
jns
cs
fdivr
xor
mov
leave
jle
aad
push
cdq
fiadd
push
or
adc
outs
jae
sahf
sub
stc
and
out
adc
sar
inc
sub
mov
repz
mov
mov
mov
mov
imul
enter
or
cmp
push
pushf
loopne
mov
ins
xor
jo
lock
jg
mov
push
xchg
popf
aas
xchg
inc
and
jg
ins
push
ret
sub
jbe
lock
inc
pop
dec
jecxz
imul
enter
arpl
icebp
or
dec
test
std
ds
cmc
pusha
add
sti
icebp
mov
das
pop
cmp
pop
xchg
push
inc
jge
push
je
or
scas
and
loop
adc
pop
bound
pop
mov
retf
cmp
mov
push
jne
inc
cmp
lods
and
and
lods
icebp
mov
adc
ins
pop
gs
jns
sub
sub
bound
shl
call
mov
and
jnp
loope
xor
pop
lahf
sbb
jbe
sub
(bad)
retf
mov
lahf
or
fild
dec
and
bound
push
stos
or
mov
sbb
xlat
jmp
clc
lods
pop
inc
cmps
outs
xchg
aad
add
sbb
fs
in
ficomp
adc
adc
xchg
stos
imul
pop
xor
(bad)
sub
add
call
pop
jmp
or
daa
sbb
mov
mov
jecxz
retf
daa
retf
in
or
rcr
mov
in
xor
movs
mov
xor
adc
pop
push
scas
aad
add
sub
dec
xchg
sbb
mov
imul
pop
aas
cdq
arpl
(bad)
sub
not
ja
inc
mov
fmul
ss
pop
clc
xchg
rcr
movs
imul
add
popf
jecxz
popf
in
rcl
pop
cmc
inc
das
dec
mov
iret
mov
in
push
inc
in
scas
mov
imul
jb
les
scas
sar
cmps
imul
aas
icebp
fdivr
push
lock
xchg
mov
xor
mov
pop
jg
addr16
jbe
push
gs
fidivr
shr
mov
in
(bad)
imul
cdq
repnz
xor
retf
sbb
loope
dec
jle
pop
pop
retf
cmp
rol
stc
inc
popf
or
imul
jb
nop
xor
sub
xlat
mov
lods
test
or
test
push
ds
pop
jmp
mov
mov
mov
adc
jo
jl
dec
ja
aaa
pop
add
mov
jb
xchg
loop
ja
mov
repnz
inc
push
cmp
push
sub
inc
fisttp
mov
jmp
out
retf
sub
jp
mov
push
shl
push
in
mov
sub
lds
dec
loope
xchg
push
or
lock
pop
sub
adc
xchg
(bad)
mov
nop
sbb
(bad)
loope
retf
scas
fld
enter
enter
jo
out
ret
int3
dec
pushf
add
push
pop
and
addr16
xchg
dec
cmp
ret
(bad)
loopne
retf
sbb
(bad)
into
dec
xchg
mov
aas
cmc
daa
icebp
ret
not
xchg
mov
or
sub
scas
(bad)
xchg
jno
pop
fdivr
mov
sahf
dec
mov
aas
les
(bad)
repz
(bad)
leave
jecxz
stos
jmp
pop
mov
jno
icebp
and
mov
jl
jg
dec
imul
movs
daa
aam
test
(bad)
mov
push
jg
jl
(bad)
push
test
mov
cld
test
mov
cli
fld
int
je
inc
push
into
lahf
addr16
out
xor
add
mov
mov
mov
jmp
jns
out
xchg
fdivr
js
stos
push
out
pop
jns
push
push
popa
popa
js
mov
add
ss
and
pop
icebp
push
mov
mov
repnz
jmp
outs
retf
mov
push
push
(bad)
xchg
mov
mov
ror
test
sbb
neg
fcom
xor
and
cmp
cwde
push
pop
mov
and
push
je
push
fadd
sti
dec
sahf
mov
call
mov
xchg
fsub
loopne
mov
(bad)
add
loop
jmp
dec
rol
cmp
lods
xchg
cmps
pop
mov
in
mov
mov
pop
adc
or
imul
push
or
inc
int3
in
iret
mov
sbb
ss
sahf
in
xchg
mov
pop
fwait
adc
xor
mov
push
test
stos
scas
mov
imul
xchg
not
push
out
xor
and
repz
ds
pushf
bound
xor
das
pusha
jo
ret
leave
cmp
xor
in
(bad)
add
movs
pop
test
xor
gs
int
gs
js
cmp
ud1
xor
fwait
(bad)
pop
add
out
sahf
jmp
cmp
pop
(bad)
add
stos
or
aad
xchg
in
xor
mov
jno
inc
cmp
jle
shl
jecxz
out
ror
add
popf
int
pop
mov
das
sbb
loop
cmp
mov
xor
cmp
dec
xor
sbb
dec
and
(bad)
jmp
push
xchg
and
cld
sub
xor
jle
inc
mov
or
dec
add
push
mov
pop
loope
sub
pop
dec
je
popa
imul
aad
dec
lock
mov
pop
inc
pop
das
test
sbb
push
loopne
loopne
iret
cmps
pop
pop
adc
mov
nop
or
push
mov
mov
xlat
stos
cmp
mov
movs
fld
pop
pop
sar
jmp
mov
mov
in
enter
popa
sbb
std
jno
sbb
inc
push
and
jmp
retf
xchg
retf
sub
sub
ja
aaa
jns
loop
in
mov
enter
les
iret
cwde
xchg
ror
sub
push
add
xchg
add
push
in
dec
gs
sub
push
xchg
idiv
adc
sub
ins
(bad)
das
dec
es
or
daa
pop
mov
popf
jmp
js
leave
or
or
test
movs
mov
push
cli
dec
es
dec
adc
arpl
faddp
xor
xchg
retf
mov
icebp
xchg
dec
or
push
mov
sub
repz
(bad)
ret
and
dec
popf
in
jl
pop
mov
repz
lea
cvtps2pi
push
push
in
xor
mov
adc
inc
or
iret
xchg
out
fldlg2
mov
int
cmc
ret
xchg
icebp
add
sub
cmp
xlat
ret
int3
cmp
or
pop
xor
in
xchg
mov
sub
repnz
or
ror
push
out
fwait
xchg
add
add
pop
cwde
sbb
fiadd
sub
adc
jbe
add
or
fabs
add
loopne
ret
xor
pop
cwde
add
dec
mov
(bad)
iret
sbb
(bad)
popa
jbe
pop
test
test
retf
xchg
pop
fs
jge
sbb
repz
into
mov
mov
and
in
mov
or
shl
test
stc
mov
rol
aaa
cmp
push
shl
js
clc
mov
pop
or
in
sub
rcr
jnp
(bad)
lds
and
inc
in
adc
cld
jnp
into
lods
pop
(bad)
or
out
jg
pop
push
out
xor
fs
push
stc
adc
in
sahf
xor
sub
lods
xchg
pop
scas
hlt
lds
(bad)
dec
test
xchg
pop
xchg
push
mov
add
imul
cli
pop
xchg
lea
stc
movs
jmp
xor
dec
leave
popf
xchg
in
push
bound
stc
xchg
cld
push
dec
cld
sub
ret
lods
aaa
mov
and
data16
cmc
sbb
retf
mov
push
push
mov
ffree
cmp
dec
push
out
jo
stos
mov
cmp
push
fdiv
popf
hlt
and
aam
fwait
call
pusha
loope
jmp
or
stos
ins
test
mov
ret
adc
xor
pop
test
in
mov
inc
adc
jle
mov
bswap
xchg
fisub
jmp
in
push
mov
dec
push
xchg
add
sti
xor
enter
call
std
add
shl
mov
xor
push
shl
xor
add
dec
(bad)
cmp
inc
and
retf
push
int
loop
addr16
in
in
test
cmp
stos
jge
or
(bad)
sti
stos
cli
test
xchg
aaa
je
stc
xlat
xor
adc
xchg
cmps
aad
dec
xor
sbb
sub
fsub
sbb
rol
loope
lahf
mov
mov
aam
fnstcw
jmp
(bad)
cmp
int
or
stos
sbb
inc
dec
push
jle
inc
mov
sbb
sbb
fild
mov
pusha
push
sub
les
cs
xchg
into
js
lods
fs
sub
fdivr
fisubr
xchg
pop
add
xchg
mov
lock
mov
push
mov
imul
push
retf
in
jmp
sbb
cmps
les
or
cmp
pop
(bad)
jo
or
xor
push
and
inc
in
retf
cld
dec
sub
inc
out
adc
scas
pusha
inc
daa
xchg
inc
rcl
add
adc
push
pop
(bad)
mov
and
cmps
adc
jae
push
hlt
dec
scas
ss
out
(bad)
pop
cmp
inc
pop
cmp
adc
or
xor
ss
push
or
push
sbb
addr16
mov
fucom
jecxz
sbb
push
js
inc
xchg
(bad)
ffreep
adc
add
test
inc
push
cmp
daa
lods
popf
bound
pushf
sub
lahf
cs
fwait
xchg
int3
bound
lds
scas
push
jmp
int3
adc
mov
rol
fsubr
adc
xchg
leave
add
cmp
ds
inc
sub
sub
mov
mov
jns
shl
int
mov
les
dec
dec
icebp
pop
adc
add
mov
out
mov
int3
aad
push
fwait
cmps
or
jbe
movs
bound
dec
fld
int3
je
xchg
shl
sbb
mov
mul
adc
stc
jbe
sub
(bad)
or
mov
sar
xchg
jmp
mov
out
xor
mov
fmul
or
fs
inc
jbe
and
mov
jno
sub
arpl
icebp
ss
loop
cs
sbb
inc
(bad)
pop
pop
mov
pop
mov
push
sub
push
ins
inc
add
test
sbb
inc
xchg
(bad)
loope
cmp
lds
ins
iret
mov
mov
pop
loop
int
pop
popa
rol
stc
out
mov
enter
loop
stc
cmp
repnz
cdq
(bad)
aad
call
xchg
outs
fs
pusha
pop
ds
push
cmps
mov
ins
mov
ret
call
jae
jno
mov
dec
fcmovbe
lds
lea
mov
sahf
push
mov
clc
add
jbe
in
mov
sbb
les
add
and
jmp
aas
int
lods
mov
or
jge
adc
push
nop
out
inc
jo
add
mov
outs
inc
inc
neg
out
jne
jno
js
xor
xor
cmc
sahf
sub
add
jb
and
pop
add
or
jno
rcr
and
inc
sbb
aad
cmps
xchg
adc
cdq
rcl
dec
add
js
(bad)
xchg
sub
sub
addr16
movups
mov
scas
sbb
xor
cwde
bound
cmp
sbb
adc
aam
pop
or
cmp
movs
lds
xor
outs
aaa
adc
shl
and
movs
jl
push
and
lods
sub
int3
sub
inc
in
test
movs
into
add
call
jb
fst
adc
stos
jns
dec
cmp
jge
xor
inc
jmp
data16
or
jp
arpl
dec
pusha
test
popa
shl
sbb
imul
call
push
pusha
cld
dec
out
imul
ja
aas
inc
ds
inc
stos
retf
sbb
lods
jle
xchg
and
inc
fmulp
push
or
mov
mov
test
or
pop
mov
test
mov
leave
leave
aaa
mov
outs
imul
repz
mov
sbb
mov
adc
cmp
adc
out
pop
stos
arpl
xchg
(bad)
mov
fwait
pop
stos
sub
xor
test
sti
jae
sbb
push
mov
test
cmps
mov
sbb
xor
jecxz
jecxz
mov
test
xchg
setnp
mov
xor
cmp
fsub
sub
mov
jb
sub
jno
xchg
retf
repnz
cdq
ss
movs
loope
js
iret
hlt
jecxz
imul
or
inc
(bad)
loop
stos
cmps
ret
add
xor
add
jae
repz
sub
gs
inc
add
out
push
fld
add
xor
test
dec
ss
cmp
test
bound
jecxz
pop
inc
mov
cmp
dec
aam
nop
xor
jg
mov
out
(bad)
mov
push
inc
cwde
xor
add
scas
dec
adc
aas
mov
fwait
arpl
lods
into
mov
inc
sbb
clc
test
inc
mov
clc
jg
jnp
enter
loope
bound
add
scas
xor
push
cmps
imul
ins
xlat
ja
lahf
and
dec
and
add
movs
mov
ins
xchg
xor
mov
or
outs
mov
int
sahf
cmp
cdq
push
lea
pop
jecxz
call
je
lods
cmc
out
inc
or
mov
jmp
in
sub
and
inc
mov
xor
pop
sbb
in
aaa
xor
jge
aad
push
pop
gs
cmps
adc
sbb
test
and
stc
dec
je
or
(bad)
cld
inc
push
inc
jo
iret
push
lods
fistp
and
fisttp
test
xor
lea
pop
lock
mov
jbe
lock
pusha
ins
mov
repz
je
ret
xchg
mov
inc
lods
test
mov
shl
(bad)
shl
xchg
jl
and
sbb
addr16
mov
mov
jecxz
pop
fiadd
mov
fisttp
stos
ins
jnp
xchg
cmps
push
nop/reserved
or
or
stos
cdq
fisttp
std
xchg
iret
jbe
sub
movs
ficomp
mov
xchg
push
clc
dec
icebp
mul
div
adc
mov
add
dec
or
pop
jmp
ds
fdivr
loope
ss
inc
mov
xor
dec
pop
jl
inc
jno
loope
fimul
inc
aad
dec
jmp
dec
xor
and
ficom
sahf
daa
scas
(bad)
test
or
jns
stos
scas
cwde
cmp
jmp
adc
shl
test
outs
mov
test
add
jmp
cmp
icebp
sti
inc
lea
bound
push
adc
inc
fdivr
aam
or
mov
and
xor
scas
add
jne
adc
shl
or
jbe
mov
dec
sahf
dec
out
pop
push
add
js
test
out
cmp
jnp
retf
xchg
sbb
mov
add
mov
xor
lahf
out
int
popa
adc
xchg
lods
imul
test
adc
xor
sbb
cmp
add
shl
cmp
mov
(bad)
push
(bad)
pop
int
stos
mov
addr16
inc
add
enter
mov
aaa
das
push
cwde
xchg
mov
pop
std
and
jnp
sar
jo
mov
fist
push
mov
imul
mov
bound
sub
repnz
xlat
mov
mov
(bad)
sbb
cli
mov
and
push
jl
dec
repz
mov
xor
jbe
sub
fbld
popf
mov
mov
cmc
or
js
stos
jbe
int3
cmp
inc
arpl
fmul
adc
sbb
adc
fwait
loope
dec
add
into
xor
jae
movs
inc
push
aam
dec
push
rcl
loope
or
addr16
enter
jns
into
or
mov
leave
mov
cli
neg
mov
mov
pop
rol
pusha
jg
sahf
(bad)
dec
cli
dec
stos
sub
mov
aaa
add
push
ja
movs
test
call
les
jae
mov
(bad)
mov
in
ret
ret
sahf
mov
pop
mov
mov
out
inc
ror
int3
dec
mov
mov
cmp
das
pop
pop
bound
xchg
out
fild
jecxz
aaa
cmp
hlt
jle
das
add
sub
clc
dec
sub
clc
dec
push
aaa
gs
into
jbe
int
inc
sub
rol
mov
mov
xchg
sbb
adc
adc
es
jge
sahf
cmp
mov
inc
xor
call
add
push
retf
sbb
arpl
cmp
arpl
xor
addr16
stc
(bad)
xchg
add
jnp
mov
jmp
dec
mov
mov
in
lock
loopne
inc
fs
pop
pushf
cmp
and
ror
out
mov
jecxz
fnstenv
arpl
lahf
ret
add
test
in
adc
xchg
and
sbb
inc
(bad)
les
int3
pop
in
addr16
xor
sub
hlt
push
in
lods
dec
bound
xor
cdq
leave
repz
stos
repz
xor
mov
aas
scas
mov
out
push
and
cmps
xchg
shl
rcl
enter
cmp
repnz
std
aaa
hlt
fwait
cmp
xchg
pop
mov
add
stos
popa
adc
mov
repz
out
jecxz
imul
ror
movs
sahf
test
sub
fiadd
cmp
in
fidivr
pop
adc
mov
shl
in
out
std
pop
or
out
in
mov
cmp
inc
sub
mov
pop
pop
out
dec
popa
or
dec
sbb
cmp
mov
lods
sbb
mov
addr16
mov
aad
push
fnsave
sbb
mov
fist
xchg
adc
test
ds
xor
xor
push
repnz
push
retf
dec
aaa
inc
ja
sub
push
cld
dec
pushf
push
data16
dec
mov
bound
and
pop
(bad)
out
mov
in
clc
push
and
and
fadd
retf
pop
repz
mov
loop
cmp
sbb
fisub
aam
cmps
cmp
pop
(bad)
fild
dec
ins
loop
or
std
(bad)
lock
lea
outs
lock
push
lea
cmp
retf
movs
test
test
push
and
repz
pop
jns
jmp
jae
mov
jecxz
fldcw
cdq
ja
jno
add
push
cwde
jecxz
into
mov
push
in
loop
xor
mov
inc
fucomip
mov
inc
les
std
push
and
jns
daa
mov
popf
daa
jp
popf
into
sub
iret
xchg
mov
pop
dec
pop
imul
dec
or
out
sahf
ret
cmp
xchg
rol
add
mov
out
inc
int
xor
rcr
xlat
mov
fild
mov
std
xchg
fbld
dec
shr
mov
adc
mov
pop
repnz
xchg
push
repz
sub
arpl
sbb
sar
xchg
pop
loopne
cli
jno
inc
clc
pop
in
dec
xchg
jge
adc
cld
or
jecxz
push
leave
sub
(bad)
mov
neg
dec
mov
dec
rol
mov
aaa
fst
xchg
imul
stc
loope
lock
(bad)
stos
js
mov
sub
pop
xchg
repz
pop
mov
jl
popa
imul
in
xchg
lahf
sar
jne
dec
leave
jmp
inc
jno
repnz
lahf
pushf
aad
sub
mov
ins
sub
call
into
pop
(bad)
cmc
pusha
xlat
test
hlt
xlat
aaa
cs
pop
xchg
outs
xchg
xchg
scas
aas
xor
std
push
lods
call
pushf
push
mov
cmps
xchg
enter
push
and
jbe
inc
pop
pop
cmp
repnz
cmp
cmp
fs
movs
and
leave
addr16
iret
pop
xchg
add
int
adc
jb
cmp
mov
xchg
and
sbb
imul
ss
lea
fsub
mov
int
imul
dec
cmp
push
pop
add
mov
imul
and
mov
ja
push
pusha
repz
movs
xchg
inc
ficomp
ins
dec
inc
shl
(bad)
scas
clc
sbb
nop
outs
jge
dec
jno
or
and
enter
(bad)
cmp
fs
push
adc
sbb
mov
pop
jno
pop
daa
xchg
or
jl
jecxz
in
repz
mov
push
mov
call
add
or
push
push
mov
xor
imul
rol
adc
aam
cwde
push
into
mov
les
dec
rcl
jne
mov
cmc
sub
test
push
test
sub
jne
clc
fbstp
cs
push
sbb
cmp
rol
loopne
les
mov
inc
icebp
std
mov
mov
int3
and
ret
enter
mov
cwde
mov
cmp
std
pushf
inc
fcmovnb
mov
das
sbb
dec
fisub
adc
push
pop
xor
xor
sahf
pop
call
jge
xchg
adc
adc
lods
sbb
adc
jmp
xchg
imul
cmp
dec
inc
mov
cmp
cs
pushf
or
jbe
sti
adc
repz
loopne
ins
out
movs
or
sub
and
mov
(bad)
call
mov
into
jb
mov
sub
push
or
mov
pop
imul
fs
xchg
mov
mov
ins
nop
(bad)
daa
add
inc
add
push
ins
out
mov
add
sub
or
fsubr
dec
js
lods
sub
add
popf
repz
mov
popa
pop
xor
and
or
ss
div
sbb
fsubr
add
idiv
inc
and
add
pop
ret
stos
jg
sbb
les
add
int
dec
cli
pop
sub
not
push
xor
bound
mov
mov
adc
test
jge
dec
mov
nop
outs
push
sbb
pop
xchg
cmp
aam
add
adc
mov
push
iret
ret
retf
ds
jg
dec
xor
cmps
sub
pop
or
push
mov
mov
jmp
retf
cld
cmp
xor
mov
aad
and
(bad)
aas
mov
sti
xor
push
jl
in
cmc
or
inc
out
lea
xlat
mov
clc
jno
mov
mov
cld
and
push
aad
jnp
sub
mov
inc
aad
test
adc
fistp
call
scas
push
xlat
inc
inc
or
stc
sbb
jmp
jb
mov
jnp
mov
pop
pop
mov
lahf
das
add
imul
push
pop
cmp
cmp
mov
stos
push
ss
aam
dec
mov
ret
in
aam
mov
mov
add
mov
lods
call
sbb
mov
mov
jnp
cmp
cmp
shl
mov
popa
mov
out
test
into
enter
mov
xor
ja
pop
xchg
out
mov
push
xchg
push
inc
pop
dec
sbb
je
and
sbb
mov
mov
cs
(bad)
sub
movs
in
mov
push
pop
cli
sub
push
jns
fucomip
mov
or
pop
push
out
pop
stos
fisttp
push
test
mov
dec
and
jno
xor
enter
sti
std
xchg
mov
sbb
push
in
ja
stos
jl
dec
not
jge
ja
in
fld
retf
retf
add
jne
or
or
jnp
cmp
pop
cs
repz
aad
outs
test
mov
add
mov
and
xchg
ss
add
imul
daa
retf
je
outs
(bad)
mov
leave
or
inc
xchg
mov
push
push
xchg
push
jge
dec
int
inc
jae
dec
clc
pop
cmp
or
ins
rcr
cld
sub
ss
push
pop
pop
jmp
push
push
aas
inc
and
jge
inc
jle
loope
stos
cmp
ret
jbe
mov
xchg
imul
pop
call
lods
jge
int3
dec
xchg
pop
stc
(bad)
cmps
sub
xchg
pop
dec
cs
xchg
push
mov
shl
hlt
(bad)
cld
(bad)
fisubr
add
push
inc
adc
jae
and
mov
loopne
imul
pop
popf
mov
out
icebp
cmp
call
and
enter
cmp
inc
add
inc
push
jmp
mov
popa
pop
iret
mov
dec
lahf
cwde
jae
jo
(bad)
repnz
fdivr
imul
les
int
mov
enter
inc
arpl
scas
jnp
sub
xchg
adc
inc
pop
inc
ds
mov
sbb
push
mov
nop
push
pop
repz
fsub
mov
dec
add
(bad)
cmps
push
test
or
stc
jl
mov
es
mov
pop
xchg
mov
push
cmc
dec
lds
pop
test
movs
push
xor
enter
inc
mov
(bad)
mov
sbb
enter
pop
or
xchg
cmp
stos
sub
sahf
inc
jmp
adc
dec
pop
sbb
call
xor
jnp
cli
scas
cmp
hlt
and
cli
ror
cdq
jb
push
mov
in
push
movs
lock
push
cmps
mov
inc
dec
aaa
xchg
inc
and
mov
ins
xchg
loop
push
add
push
pop
jmp
ret
cmp
(bad)
stos
inc
shl
mov
lea
neg
(bad)
sbb
repz
cwde
inc
call
mov
jns
pop
mov
in
shl
jecxz
jbe
lock
mov
jle
dec
lock
and
cwde
pop
cwde
jge
loope
daa
jnp
cli
mov
pop
add
dec
pop
test
xor
enter
lahf
sbb
mov
cmp
add
xor
sub
call
or
iret
loopne
jns
popf
sbb
sub
call
xchg
jno
cld
or
sti
add
sbb
not
pop
sub
jge
cli
cwde
mov
push
popa
jns
out
cmps
mov
jp
sub
dec
cli
adc
xor
mov
outs
arpl
mov
pop
test
add
das
push
stos
jno
cmc
in
push
sub
imul
mov
cmc
xchg
jbe
mov
xlat
rol
cs
or
cli
mov
loop
and
inc
mov
leave
mov
xor
pop
lahf
(bad)
push
jmp
ins
jmp
jmp
das
pusha
inc
cdq
jnp
cmps
pop
shr
pop
test
jb
push
pop
lods
ss
mov
pop
inc
pop
jge
cwde
adc
push
nop
inc
mov
in
cmp
push
stos
add
xchg
add
cmp
aas
add
cmp
test
retf
push
push
psubsw
mov
popf
adc
jb
xor
dec
fs
jo
fistp
dec
and
add
out
pushf
fist
mov
and
or
shl
ins
fisttp
dec
inc
push
lahf
daa
xchg
jns
icebp
fld
mov
dec
jb
loop
fistp
mov
push
clc
push
(bad)
mov
dec
test
inc
mov
shr
std
mul
outs
(bad)
mov
test
call
add
inc
adc
lods
dec
and
and
cdq
loope
pop
mov
(bad)
inc
adc
jae
xchg
inc
inc
fisubr
mov
jnp
push
add
add
rcr
jns
pop
out
lods
push
dec
xchg
jo
jb
int
pop
es
call
test
test
mov
mov
popf
mov
shl
imul
pop
nop
cmps
aas
push
mov
and
xor
rol
jge
repz
mov
sub
scas
int3
sar
xor
and
push
mov
loopne
inc
fcmovbe
lods
push
sub
bound
ror
mov
gs
mov
cmp
dec
movs
stos
push
cmp
clc
mov
lahf
add
xchg
mov
lahf
lea
sbb
mov
repnz
xor
outs
jb
hlt
xor
pop
arpl
aam
push
loopne
imul
jmp
inc
sbb
jns
push
iret
dec
nop
dec
div
inc
dec
arpl
pop
or
into
neg
push
mov
lea
or
mov
adc
retf
and
jae
inc
pop
mov
push
dec
dec
lahf
ror
lods
lock
jbe
es
cdq
and
mov
lds
cmps
mov
sub
fld
xor
sub
test
or
mov
mov
popa
fcmovu
pop
mov
inc
inc
push
out
iret
sbb
sahf
movs
pusha
je
fbld
mov
popa
sub
sti
mov
cmps
push
sahf
(bad)
(bad)
jle
jnp
sub
cmp
mov
idiv
adc
ja
out
add
push
lea
nop
sub
or
xor
push
mov
adc
or
jo
ficomp
in
rol
xchg
mov
mov
rol
stos
cmp
dec
push
and
dec
imul
pop
xor
iret
and
mov
ret
and
xchg
inc
fwait
ja
int
sub
mov
fcom
(bad)
mov
sbb
sahf
or
fstp
and
dec
ins
fwait
outs
enter
add
jnp
inc
mov
movs
push
add
mov
mov
sbb
in
aaa
xchg
aas
sbb
(bad)
push
dec
arpl
iret
mov
(bad)
(bad)
mov
ret
jp
cwde
adc
stc
fs
idiv
push
jecxz
push
add
jecxz
and
xor
mov
ds
es
xor
(bad)
adc
jge
mov
les
jo
or
cmps
inc
or
jo
ret
es
aad
cmp
inc
mov
or
inc
cmp
pop
scas
jge
mov
cmp
mov
fs
pop
test
test
sub
cmp
cld
in
add
test
sbb
cmp
sub
fisub
dec
lods
xchg
pop
cs
jp
add
dec
std
jmp
popf
dec
int3
xchg
sbb
jae
pop
out
rol
push
jns
sti
push
pop
jnp
in
push
xchg
daa
fdiv
push
jb
ret
dec
(bad)
jge
ins
repnz
cwde
movs
mov
and
jp
add
clc
leave
lahf
mov
fnstenv
shl
aad
(bad)
nop
lea
in
cmp
mov
loopne
aaa
out
out
stc
fmul
inc
and
mov
(bad)
mov
jmp
or
mov
(bad)
dec
xor
and
and
cmp
jle
out
and
lods
add
sub
pop
das
inc
mov
imul
out
adc
data16
mov
pop
pop
stc
dec
sar
cmp
shl
jb
sbb
test
retf
loope
das
data16
fldenv
sub
nop
cli
or
inc
test
movs
xor
(bad)
idiv
mov
mov
xor
sar
cmps
test
cmp
mov
xchg
outs
inc
fnstcw
int3
jno
xor
fnstcw
add
enter
outs
pushf
aaa
sub
mov
push
cmps
mov
jb
adc
cli
outs
xlat
pop
push
jnp
pop
sbb
sbb
loop
shr
lods
aam
xchg
(bad)
mov
inc
push
fcmovnu
xchg
add
mov
push
je
es
scas
out
push
sbb
mov
(bad)
in
xor
jp
pop
or
cmp
jo
cli
mov
stos
mov
xor
repnz
idiv
jbe
adc
sahf
sub
lock
or
jmp
jl
inc
lahf
in
jmp
sbb
leave
scas
cs
ins
or
sti
pop
jg
add
jns
shl
cmp
scas
jg
cmp
(bad)
mov
mov
push
push
mov
push
sbb
loop
inc
cdq
jo
in
jmp
xchg
aaa
popf
int
sub
xor
out
rol
and
jg
(bad)
sti
inc
dec
mov
push
int3
retf
xchg
ins
mov
sbb
test
mov
mov
fwait
(bad)
sub
or
popf
lock
and
pop
clc
dec
pop
mov
push
and
dec
jmp
mov
add
inc
dec
rol
xchg
daa
loopne
xchg
or
pop
xchg
pmaxub
adc
and
sub
pop
pusha
sbb
icebp
retf
test
xor
sub
push
popf
aaa
shl
jmp
(bad)
into
jle
fmul
and
add
mov
out
jae
or
das
xor
movs
sub
loope
cli
in
adc
mov
xchg
es
test
jbe
mov
loopne
int3
jge
daa
out
dec
je
inc
push
(bad)
cmp
not
lods
push
out
jo
clc
or
push
ja
in
(bad)
pop
xlat
mov
dec
cmps
ins
adc
and
jg
pop
pop
outs
mov
pop
add
push
cmp
leave
call
xchg
mov
int3
stos
inc
(bad)
cmc
pop
inc
retf
xor
rcl
les
cmc
and
popf
mov
cmp
out
xor
call
(bad)
rcr
or
sti
mov
dec
(bad)
stc
hlt
inc
lahf
std
aam
adc
hlt
pop
jo
pusha
(bad)
mov
mov
dec
push
mov
cmp
mov
mov
push
movs
mov
dec
xchg
pusha
fsub
call
cs
les
adc
ss
sub
cdq
dec
imul
jae
fadd
jbe
pop
or
mov
out
dec
jnp
out
xor
pop
sub
cmp
jmp
cs
stos
not
dec
add
mov
les
ja
dec
sbb
stos
sub
hlt
add
push
neg
adc
cdq
add
xacquire
mov
out
loop
leave
cmps
test
arpl
out
fstp
rcl
sub
push
dec
fwait
jle
imul
js
inc
adc
repnz
mov
outs
and
dec
mov
or
pop
lahf
int3
(bad)
mov
into
lea
pop
les
psubq
jne
cmp
jmp
push
pop
ffree
xlat
xchg
faddp
loop
push
xor
ror
hlt
inc
inc
push
sbb
ret
mov
push
repnz
sbb
mov
or
push
out
sbb
push
sub
cmc
(bad)
lock
leave
jg
jae
xchg
loop
pop
ret
dec
cli
ret
push
inc
mov
leave
mov
int3
jecxz
dec
pop
adc
push
cmc
push
mov
mov
and
sbb
mov
sbb
fst
sahf
data16
cmp
xchg
(bad)
xchg
aam
aam
and
and
push
movs
movs
pop
adc
out
mov
fidivr
enter
push
adc
rol
dec
jmp
or
xor
cmp
sub
push
mov
(bad)
inc
pushf
cmp
adc
movs
ret
ficom
pop
or
out
out
inc
shl
xor
xlat
fcmove
sbb
mov
popf
jmp
add
add
out
rcr
cdq
popa
jmp
mov
sbb
cmp
pop
pop
imul
hlt
xchg
or
sub
gs
xchg
hlt
icebp
cmps
sbb
jno
sar
sbb
push
into
pop
inc
xor
movs
cmp
mov
out
int
mov
call
(bad)
jle
push
(bad)
sub
adc
arpl
cwde
adc
and
inc
xlat
push
mov
cwde
jg
outs
stc
mov
cmp
cmp
das
aas
cmp
leave
xor
addr16
pusha
in
repz
adc
add
(bad)
stos
out
sub
into
ins
ror
and
xchg
cmp
dec
xchg
push
jbe
fistp
or
outs
test
inc
adc
scas
push
int
sub
jmp
fld
cmp
inc
add
dec
jg
xor
das
jns
cmp
fbld
stc
loopne
out
aaa
test
loope
repz
popf
in
or
ror
(bad)
(bad)
xchg
cdq
int3
addr16
ins
cmc
push
xchg
lahf
add
cdq
push
push
mov
cmp
sbb
add
add
mov
pop
mov
xchg
jae
aad
rcl
test
sub
addr16
shr
(bad)
sbb
popf
call
ffreep
adc
jp
xor
in
cli
mov
mov
test
ins
and
sub
js
mov
mov
aaa
jae
ins
pop
arpl
js
rol
cli
leave
sub
jg
mov
jns
hlt
movs
int
in
retf
add
mov
sbb
mov
loopne
out
add
stc
ficomp
or
int
(bad)
addr16
(bad)
jns
add
cmp
inc
les
(bad)
into
add
inc
inc
popa
sbb
arpl
out
jmp
adc
sub
addr16
mov
push
call
cli
mov
ss
mov
push
fsubr
sti
sbb
push
pop
and
fsub
cs
fs
fnsave
fcomp
cmps
cmp
xchg
ror
mov
mov
cli
dec
in
adc
retf
push
or
and
push
and
cmp
xchg
int3
or
sbb
push
(bad)
ds
and
and
push
inc
jle
xchg
pop
fucom
xchg
adc
dec
fs
cli
sbb
repz
lods
es
jo
and
fiadd
fwait
iret
and
les
cmc
mov
loop
outs
test
pop
ficomp
retf
pop
ins
ins
dec
rcr
mov
mov
xor
add
or
pop
or
(bad)
dec
xor
pop
mov
pop
adc
cmc
cmps
sbb
fstp
test
call
push
popa
pusha
or
add
push
xchg
mov
repz
adc
out
(bad)
pusha
jge
aam
pop
pop
xor
push
sbb
fwait
lock
(bad)
icebp
pop
nop
scas
sub
push
cmp
push
fsubr
lea
mov
aam
nop
outs
imul
sub
or
jo
cmps
mov
jp
push
clc
mov
pop
mov
fbld
mov
shr
inc
pop
xchg
je
out
push
add
xor
icebp
rol
ins
test
xchg
(bad)
jl
jmp
jns
push
fisub
jns
popa
stos
(bad)
push
push
inc
mov
add
dec
call
ret
mov
cmp
cmc
sbb
dec
xchg
(bad)
sub
int
pop
push
ret
mov
ins
cmc
loop
cmc
cwde
mov
das
icebp
dec
repnz
jo
fcomi
mov
shl
repnz
add
mov
les
sbb
fwait
stos
dec
cmp
xchg
dec
adc
jmpw
and
icebp
data16
mov
jg
out
mov
xchg
adc
xchg
xabort
clc
dec
push
test
enter
xchg
movs
repz
adc
int
call
sbb
in
aas
shl
sub
cs
jbe
jp
scas
cmp
out
jb
movs
xor
cmp
int3
call
repnz
xchg
inc
retf
and
or
add
mov
mov
jmp
jge
(bad)
bnd
sbb
mov
sub
in
outs
jge
mov
xchg
pop
pusha
xor
ins
mov
lahf
add
aas
xchg
add
fstp
xor
aas
js
popf
pop
pop
push
lds
jno
call
or
iret
or
push
sub
cmp
sbb
outs
retf
pop
jp
inc
mov
cmps
and
dec
mov
sbb
cmp
not
(bad)
jns
arpl
scas
sti
ins
shl
dec
in
mov
dec
push
pusha
cld
cmps
jle
mov
mov
cmps
out
dec
pop
cmp
setnp
mov
pop
cwde
mov
sbb
ins
push
pop
cmp
push
movs
mov
pusha
dec
rol
in
in
into
and
pushf
test
rcr
ins
dec
push
movs
sbb
pop
push
ins
ror
cmp
mov
jmp
popf
rcl
xchg
lods
call
inc
cwde
sub
dec
arpl
dec
push
fstp
daa
sub
pop
pop
inc
jns
fdiv
sbb
mov
cmp
mov
retw
setb
mov
cmps
mov
add
aam
mov
dec
mov
pslld
xchg
mov
adc
out
test
gs
push
adc
imul
sub
outs
out
repnz
mov
mov
pop
add
sub
out
enter
mul
mov
inc
jne
jle
cmp
xchg
mov
jle
pop
jecxz
ss
pop
dec
(bad)
fwait
test
dec
gs
pop
aas
push
mov
nop
xchg
ja
xchg
add
jge
es
xor
ss
mov
xor
in
mov
jno
mov
jno
(bad)
pop
jbe
test
mov
fiadd
add
ja
retf
jae
aam
out
add
push
push
gs
icebp
push
mul
in
lds
adc
mov
cs
outs
mov
mov
mov
movs
call
call
push
add
out
adc
sub
das
into
and
sbb
mov
xor
aas
cmp
mov
shr
xor
cmp
into
popf
in
cli
js
nop
test
retf
ins
gs
call
add
cld
sbb
sub
mov
out
sub
mov
movs
jae
cmp
mov
ret
mov
mov
add
cs
mov
aas
add
cmp
stos
loope
loop
dec
stos
jmp
dec
fwait
push
push
fist
push
and
pop
outs
adc
repz
pushf
pop
retf
in
add
push
test
or
mov
aas
mov
mov
dec
mov
add
inc
dec
les
scas
rcr
jb
out
sub
and
inc
add
in
aam
pop
add
and
outs
jbe
fwait
call
mov
inc
iret
jmp
call
ret
into
dec
xchg
mov
scas
mov
mov
(bad)
int3
or
and
(bad)
sbb
cmp
dec
push
in
cdq
or
stos
sahf
push
movs
movs
push
mov
or
mov
scas
jo
add
inc
sar
cmp
adc
lock
adc
add
jmp
ret
add
arpl
xor
sti
test
mov
pop
or
outs
ds
sub
das
mov
imul
and
mov
shr
scas
xor
arpl
imul
push
xor
pop
pop
out
iret
jge
cmp
xor
or
xchg
adc
or
mov
dec
inc
or
stos
or
sbb
mov
jge
movs
xchg
push
repnz
jp
push
stc
stos
les
pop
xlat
mov
pop
mov
faddp
imul
xchg
mov
cli
add
push
sbb
sub
inc
inc
hlt
enter
das
adc
pop
add
daa
aad
pop
xor
es
xchg
test
adc
xchg
sub
jmp
(bad)
push
pop
xor
dec
mov
hlt
adc
or
div
add
scas
cmp
mov
in
xlat
xchg
add
jmp
add
loop
push
pop
stos
and
xor
push
sub
loope
inc
and
sahf
mov
leave
and
pop
sbb
aad
push
(bad)
jno
loope
mov
add
(bad)
jmp
stos
inc
int3
mov
ret
rcl
jbe
mov
or
and
push
add
adc
push
stos
push
jmp
pop
mov
add
push
dec
je
cmps
cli
stc
cs
jb
mov
add
jp
pop
ins
dec
ret
aad
sar
test
lods
fs
xor
or
clc
lods
jp
gs
push
pop
iret
jmp
xchg
jg
adc
imul
stc
cmps
cdq
pop
adc
lock
jo
xchg
retf
imul
push
pop
shr
les
add
outs
les
ja
pop
sub
aaa
sub
jo
mov
xor
fsubr
test
and
retf
jmp
sahf
dec
mov
or
add
xor
rcl
fdiv
xor
arpl
xchg
mov
pushf
dec
cs
jo
pop
jg
into
or
sti
movs
fisubr
das
das
out
mov
fucom
pop
(bad)
sbb
rol
call
retf
test
push
add
mov
adc
aas
loop
fdiv
push
leave
push
or
iret
xor
cmps
push
pusha
pushf
jp
xchg
cwde
movs
add
stc
add
sub
call
push
mov
or
cdq
xor
and
add
mov
fidivr
adc
xor
pop
pop
pop
xor
fidiv
and
nop
and
pop
cmc
scas
or
in
dec
sub
outs
fst
jne
jmp
sar
mov
(bad)
inc
mov
retf
loopne
cli
pop
cmp
xchg
outs
hlt
cmp
repnz
inc
fnstsw
(bad)
fscale
loope
pop
std
add
pop
sbb
(bad)
sub
push
pop
xchg
stos
sub
jmp
cwde
mov
jno
mul
push
adc
or
sub
ret
rcl
test
push
rcl
push
jae
jecxz
sbb
jb
inc
or
ins
xchg
pop
imul
sbb
xchg
cdq
add
out
or
xor
std
add
or
out
call
enter
ror
or
sub
test
pushf
xor
jo
leave
mov
inc
ret
pop
xor
jne
pop
jecxz
inc
fs
mov
cli
push
fld
sbb
xchg
xchg
into
repz
add
and
sub
fsubr
add
sbb
push
cmps
sahf
pusha
repnz
and
jp
push
(bad)
test
xchg
dec
(bad)
xor
push
add
xchg
or
mov
pop
stos
jb
dec
mov
test
xchg
ins
fidiv
int3
push
call
lds
cmp
pop
out
jae
pop
imul
mov
test
adc
test
icebp
push
sub
in
or
mov
xchg
pop
add
xchg
stos
sbb
ds
xchg
sub
jecxz
mov
inc
dec
push
mov
or
jge
push
pop
jp
inc
(bad)
cmp
xor
std
cmps
sti
xchg
add
dec
xor
pop
bound
mov
int
cs
adc
stos
pop
sahf
jge
aam
aad
rcr
(bad)
stos
xchg
imul
(bad)
push
pop
popf
bound
xor
cmps
mov
inc
adc
mov
cs
pop
pop
mov
push
call
adc
and
movs
or
push
jbe
inc
retf
add
push
mov
shr
mov
out
les
nop
or
stc
ds
mov
vphaddubd
clc
pop
or
sbb
fiadd
mov
sar
mov
or
arpl
addr16
rol
pop
cmp
ds
pusha
push
jle
mov
inc
loope
adc
add
scas
sti
inc
data16
test
mov
sub
and
jmp
jmp
repz
dec
jmp
pop
mov
sub
lea
xor
jnp
ja
inc
movs
dec
and
and
or
dec
int3
jg
les
push
dec
xchg
adc
(bad)
aad
hlt
or
stc
lods
clc
rol
shr
or
sti
xor
sbb
movs
push
neg
dec
cli
push
fdivr
sub
add
cwde
or
mul
mov
sahf
sub
push
jno
mov
and
bound
mov
aam
lea
cmp
std
push
push
fdivr
push
cmp
cdq
xchg
lods
jl
add
xchg
mov
sahf
iret
fidiv
std
pop
int3
jmp
mov
das
daa
dec
out
ins
in
out
dec
nop
xchg
and
push
int
adc
add
jnp
movs
out
fist
push
pop
mov
pop
clc
cmp
in
mov
lahf
xor
add
test
xor
and
and
cmp
mov
adc
push
sub
mov
fild
mov
mov
or
ss
call
pushf
mov
sub
ret
ror
js
ud1
add
xchg
mov
or
outs
fcomip
cmp
bound
push
mov
int
mov
fld
jmp
test
mov
jnp
pop
jbe
std
fucompp
inc
mov
sbb
or
aad
inc
xchg
pop
rcl
sub
cmps
dec
imul
cmp
jmp
cs
push
mov
loopne
into
(bad)
retf
jb
pushf
sbb
ins
xchg
mov
int3
rol
outs
dec
inc
mov
je
loop
jmp
jmp
jmp
stc
push
fiadd
mov
js
inc
cdq
push
push
arpl
adc
jne
or
scas
mov
das
out
lar
jg
mov
in
push
sub
sub
ins
sub
and
lods
fstp
adc
inc
dec
(bad)
call
div
cwde
imul
pop
mov
imul
in
rol
fdiv
imul
(bad)
inc
sbb
mov
(bad)
mov
jecxz
in
(bad)
or
mov
mov
adc
or
leave
xchg
push
pushf
call
dec
jecxz
icebp
add
or
pop
das
sub
and
sbb
cmps
inc
arpl
outs
in
mov
lea
into
(bad)
mov
or
fistp
hlt
gs
imul
push
aas
fstp
or
outs
stos
fisttp
push
push
inc
pop
lds
push
mov
retf
ss
fiadd
leave
pop
and
ins
movs
or
jbe
pop
aad
jg
cmp
xchg
xchg
shl
test
cdq
or
jmp
jg
out
mov
movs
not
and
xchg
mov
sar
xor
dec
int3
and
(bad)
mov
imul
mov
xor
cmp
fcmovnb
sbb
add
retf
mov
mov
xchg
jl
enter
sar
test
xor
dec
in
lods
mov
nop
xchg
push
inc
inc
push
jmp
cs
mov
out
pop
lods
enter
cmp
dec
cmp
stos
fdiv
clc
xlat
inc
hlt
stos
mov
rcr
mov
retf
jle
test
or
adc
jne
lahf
adc
adc
(bad)
dec
dec
sbb
mov
jle
push
xchg
xchg
dec
mov
dec
xor
adc
aaa
pop
mov
pop
and
rcl
jne
dec
adc
fyl2xp1
nop
pop
pushf
xor
push
jge
mov
out
inc
ins
imul
jecxz
push
xor
adc
ret
mov
or
rcr
or
pop
jne
and
dec
mov
push
cmp
inc
lods
xor
xchg
xor
outs
cdq
add
mov
add
inc
ss
dec
sub
ds
ret
pop
add
mov
lods
cmp
push
mov
pop
sub
pop
add
pop
dec
jmp
add
jae
dec
jl
daa
add
xor
sbb
pop
lea
es
lds
pop
ret
arpl
test
jns
xchg
sub
mov
fidiv
dec
int3
adc
mov
(bad)
cli
loop
push
sbb
mov
not
jmp
lock
jo
fisttp
add
ins
mov
mov
mov
je
xchg
aaa
inc
adc
cmc
inc
(bad)
es
mov
push
xor
std
ficom
xchg
or
lods
adc
enter
pop
pop
test
pop
addr16
jne
mov
aas
loope
mov
sub
leave
mov
adc
cdq
lods
jae
jp
mov
cwde
adc
sbb
and
fwait
push
xor
les
xchg
inc
js
mov
test
pop
adc
jne
enter
ja
aaa
pop
sub
movs
add
push
cmp
xchg
dec
push
aam
and
outs
ins
push
mov
mov
sahf
stc
mov
push
test
and
fcom
ret
fadd
in
ds
and
fcomi
and
(bad)
std
daa
int
jne
or
mov
fimul
call
sar
pop
adc
pop
add
sbb
ins
jl
sub
inc
scas
(bad)
and
mov
sub
adc
das
jnp
das
and
in
add
jp
adc
ret
fcmovnb
repz
jae
cmps
bound
lock
ds
stos
mov
int3
js
xchg
add
popf
shr
adc
pushf
xchg
call
sbb
mov
lods
imul
cwde
sub
(bad)
rol
into
or
jmp
sbb
adc
jl
mov
cmp
cmp
je
push
mov
xor
in
clc
fstp
sub
dec
jnp
outs
es
mov
push
jnp
stos
mov
out
inc
xchg
imul
ja
sub
xchg
(bad)
in
nop
xor
lods
and
into
fistp
mov
cld
cwde
sete
(bad)
lods
adc
adc
(bad)
mov
(bad)
sbb
pop
jns
sbb
add
mov
jbe
inc
outs
outs
xor
ins
mov
push
cdq
ds
ins
idiv
loope
pop
out
jb
mov
rcr
mov
adc
cmp
xchg
add
cmps
mov
add
dec
add
(bad)
mov
inc
or
(bad)
jp
data16
mov
fild
imul
pop
mov
enter
test
sub
stos
jmp
daa
and
sub
push
inc
xchg
or
mov
(bad)
cmc
xchg
lahf
scas
jl
(bad)
into
inc
scas
add
mov
sbb
rol
dec
mov
lahf
ds
sti
iret
sub
mov
cli
dec
in
imul
push
or
sbb
movs
and
jge
push
mov
mov
out
dec
es
outs
push
sbb
mov
inc
cmp
sti
aaa
retf
cmp
dec
or
jns
ficom
mov
sbb
xchg
jnp
inc
imul
xchg
or
jmp
push
mov
mov
inc
xor
jns
std
add
imul
into
js
loopne
mov
cli
(bad)
fisubr
bound
(bad)
imul
mov
in
mov
ins
cmp
xchg
scas
or
aaa
push
test
xchg
(bad)
jo
sub
out
mov
jno
test
xor
mov
icebp
daa
mov
stos
cmc
enter
mov
retf
xchg
push
lock
mov
and
jbe
push
inc
outs
and
dec
mov
js
and
adc
dec
sbb
adc
dec
pop
and
out
imul
jbe
outs
and
dec
repnz
cmps
push
jge
(bad)
push
stos
mov
int3
mov
in
push
push
or
xor
shr
pop
aas
and
aam
dec
int
sub
js
rcl
inc
cmp
dec
and
gs
je
push
fstp
jle
adc
mov
jne
and
ja
add
je
(bad)
aaa
pop
and
xor
rcl
sbb
mov
(bad)
fadd
xchg
call
lock
scas
push
fidiv
mov
sbb
data16
aaa
aaa
add
xchg
pop
push
(bad)
pop
pop
stc
sub
or
in
cdq
xor
xchg
add
jmp
loope
mov
fisub
jle
bound
scas
in
sub
cmp
(bad)
loopne
shr
push
jo
scas
and
pop
cld
iret
mov
in
cmc
cmp
jmp
inc
ja
cmp
call
nop
push
(bad)
bnd
xchg
mov
jne
mov
sub
rcl
aaa
into
xlat
push
ficom
idiv
inc
push
and
in
mov
daa
sbb
call
ja
fs
cdq
and
jb
mov
mov
inc
add
xchg
aas
stc
inc
cs
cmp
lea
lods
ret
jnp
push
jmp
dec
lock
jge
mov
mov
lea
imul
ret
cmp
xlat
pop
cmp
shl
mov
mov
cld
mov
mov
pushf
mov
mov
jecxz
imul
push
pop
inc
bound
jo
retf
xor
enter
movs
ret
das
pop
sbb
cmps
aaa
(bad)
dec
xor
in
imul
lods
in
mov
push
aad
ss
test
push
xchg
mov
push
rol
cld
mov
and
pop
xchg
cmps
jo
cmp
cmp
icebp
jbe
inc
dec
cs
sti
ja
jae
popf
fdivr
push
mov
mov
iret
adc
in
inc
sbb
inc
call
shl
sbb
pop
ds
das
sbb
ret
mov
dec
ja
dec
mov
dec
push
js
xchg
not
xchg
jb
or
jmp
push
dec
pushf
lahf
ror
sti
mov
sub
jno
mov
ss
mov
mov
mov
lds
cmp
fimul
jno
sub
mov
or
pop
jge
inc
fisttp
push
mov
cmp
cmps
xchg
pop
push
dec
or
(bad)
lds
xor
or
and
push
cwde
fwait
sbb
xchg
add
std
push
sbb
xor
inc
movs
sbb
ret
(bad)
mov
cmc
out
mov
mov
sahf
push
aas
stc
mov
push
dec
or
dec
pop
xor
idiv
mov
ins
mov
mov
test
jmp
push
pushf
je
pop
(bad)
das
mov
pop
(bad)
outs
out
(bad)
lds
(bad)
inc
add
bound
cmp
mov
xchg
(bad)
mov
inc
sbb
loop
mov
mov
jno
push
and
dec
or
xlat
ror
mov
dec
in
cmp
xor
ret
mov
loope
cdq
leave
lea
aad
int3
in
in
sbb
sti
int3
cmp
add
loope
rep
mov
fs
scas
dec
sbb
imul
into
mov
outs
push
or
sahf
sbb
rcl
pop
sbb
jno
inc
sub
div
gs
ret
ds
and
fiadd
pusha
pop
lods
mov
jmp
sub
adc
pop
adc
mov
push
(bad)
cmp
mov
xor
pop
mov
adc
(bad)
cmp
xor
in
in
jecxz
inc
lods
call
push
mov
mov
lds
and
test
pop
fiadd
hlt
or
sahf
stos
daa
mov
cmp
scas
xlat
addr16
add
jge
and
add
sbb
xor
mov
push
mov
dec
jmp
jg
mul
int
push
ins
pushf
jno
mov
push
ins
mov
and
div
pop
cmp
push
repnz
lea
xor
xchg
inc
cmps
test
xchg
or
xor
inc
xor
popa
rcr
jb
add
(bad)
nop
jbe
pop
jmp
push
jno
adc
dec
lahf
push
add
or
sbb
push
fidivr
cmp
adc
inc
leave
in
gs
popf
jne
(bad)
xchg
adc
pop
cwde
rcl
xor
mov
leave
imul
stos
inc
sar
sub
mov
mov
xor
ins
fild
adc
mov
aaa
jb
in
xor
movs
stos
cmp
mov
int3
cmp
into
cmp
jmp
call
pop
push
sbb
(bad)
fsub
repnz
retf
add
lods
dec
and
jae
es
ds
mov
daa
fdivr
test
lahf
mov
sub
loopne
inc
xor
ror
shl
aam
div
pop
or
mov
popa
out
or
fld
sub
sahf
fldenv
addr16
das
lods
(bad)
outs
mov
jg
push
fisttp
pusha
mov
cmps
mov
jmp
lods
push
sbb
movs
or
mov
cmp
push
push
xchg
popa
lahf
xchg
enter
sub
clc
mov
pusha
test
inc
out
push
aad
push
pop
aam
cmc
sub
(bad)
xor
sub
cld
mov
repz
cs
adc
and
movs
das
stos
arpl
bound
lock
add
mov
movs
or
fwait
rol
xchg
cs
xchg
push
(bad)
std
inc
imul
ins
mov
imul
xor
mov
stos
pop
js
push
sub
xchg
xor
xchg
mov
movs
add
(bad)
clc
sub
mov
xor
jne
mov
jb
rol
imul
rcr
arpl
fidivr
stc
retf
jae
add
jle
push
mov
es
push
xor
movs
cmp
in
or
neg
in
mov
aas
jae
pushf
ja
push
das
pop
mov
sbb
rol
pop
or
and
pop
stos
jmp
cdq
rcr
push
stos
call
scas
mov
mov
loopne
pop
div
mov
leave
cmp
test
pop
push
test
lea
test
mov
xor
test
xchg
push
stc
pop
jl
fwait
mov
pop
mov
push
jmp
adc
imul
inc
cdq
pushf
jl
(bad)
jns
mov
jbe
pop
or
int3
popa
fiadd
add
loop
inc
xchg
pop
pushf
les
sbb
or
mov
mul
iret
pop
and
xor
out
push
int
test
jns
and
push
jns
idiv
lods
stos
test
push
pusha
ror
push
fwait
popf
sbb
fistp
je
mov
dec
xor
mov
xchg
(bad)
fwait
mov
js
push
mov
out
leave
fimul
cdq
jge
inc
ins
mov
jae
mov
cmp
mov
bound
sub
mov
scas
mov
int
imul
lods
scas
out
movntq
jne
retf
enter
jl
into
jne
lods
and
enter
in
xor
icebp
leave
pop
rcl
xchg
in
add
(bad)
dec
pop
dec
adc
pop
or
(bad)
sub
and
ja
icebp
mov
xchg
sahf
inc
stos
pop
or
(bad)
mov
jle
add
push
mov
sbb
inc
das
xlat
inc
or
ins
out
jge
jmp
std
pop
mov
sti
adc
(bad)
xor
call
test
cdq
inc
jnp
pop
cmp
not
sub
cmp
xchg
mov
adc
and
inc
cmp
and
cmp
inc
push
pop
push
pop
test
in
add
jg
mov
mov
in
xchg
sbb
imul
adc
aaa
ja
out
test
jp
mov
xor
mov
dec
dec
push
mov
aam
test
add
and
jmp
loop
mov
jg
icebp
fwait
sbb
mov
xadd
repz
in
dec
outs
cmp
dec
jmp
retf
mov
ins
and
adc
and
and
inc
mov
jo
pop
dec
jno
ret
lds
sbb
loope
pop
cmps
movs
xchg
fld
ds
sbb
jg
fs
(bad)
cmp
stos
fadd
scas
nop
je
mov
call
mov
movs
popa
ss
or
leave
popf
clc
mov
in
(bad)
es
cmps
jnp
(bad)
pop
rcr
pop
jnp
neg
call
jmp
xchg
ins
push
(bad)
rcr
dec
bound
cmc
and
gs
xchg
out
out
add
ret
imul
(bad)
out
push
loop
(bad)
inc
push
add
scas
inc
(bad)
adc
xchg
inc
sbb
sub
mov
xor
out
cwde
push
test
pop
xchg
sub
inc
bound
outs
adc
ins
ret
mov
out
dec
jmp
push
movs
cmp
and
cmps
call
or
adc
mov
pop
cmp
(bad)
call
cld
fldenv
and
ja
jmp
jecxz
sbb
push
push
fistp
into
mov
dec
sbb
shl
xlat
xor
mov
jno
(bad)
out
inc
mov
loope
mov
xchg
push
xlat
mov
jle
pop
mov
add
sbb
outs
and
cmps
adc
adc
mov
je
out
add
jnp
enter
mov
dec
test
jbe
add
or
and
mov
or
fcom
dec
adc
push
mov
rcr
not
pop
int
js
mov
adc
mov
lock
pop
or
sbb
ins
mov
adc
pop
lock
or
dec
or
push
inc
retf
add
into
loopne
and
inc
push
mov
and
aam
mov
adc
inc
movs
pop
or
sar
addr16
pusha
inc
cmps
xchg
mov
and
pop
call
idiv
pop
loope
add
pop
cmp
inc
lds
mov
cmp
push
xor
shr
push
jmp
movs
lahf
dec
scas
cmp
cmp
jmp
call
les
sti
xchg
adc
add
jmp
mov
out
(bad)
jae
mov
push
in
rcr
jl
pop
cmps
cdq
xor
cdq
idiv
or
sbb
xor
inc
mov
sub
mov
iret
and
movs
dec
fistp
or
ds
(bad)
ret
js
push
dec
cmps
cmc
ja
fstp
cmp
jecxz
xor
adc
or
xchg
loopne
xor
jecxz
adc
mov
or
(bad)
stc
loope
and
push
pop
iret
mov
test
and
inc
mov
fmul
les
addr16
(bad)
xchg
ret
cwde
ins
and
xchg
inc
push
cmp
(bad)
xchg
and
pop
mov
outs
aam
jnp
xchg
movs
sub
xor
pop
push
into
movs
push
int3
and
jbe
std
jmp
sbb
nop
or
mov
jb
ins
in
mov
adc
sub
mov
dec
loope
xor
mov
inc
data16
pushf
outs
dec
sbb
stos
loopne
test
dec
(bad)
mov
pop
fsubr
jne
cs
mov
stos
hlt
push
push
mov
push
ss
ins
out
mov
pop
pop
in
clc
xor
jnp
aad
jp
mov
add
int
dec
in
int3
and
mov
mov
add
or
das
sbb
js
and
dec
jp
test
cwde
adc
mov
and
retf
dec
lahf
add
sbb
adc
andps
pop
stos
pop
loop
adc
cli
sub
sub
inc
mov
adc
sahf
mov
sahf
js
stos
loopne
pushf
mov
pop
or
shl
add
fcmove
jbe
pop
sbb
lea
jmp
fs
pop
jl
mov
repz
jle
jo
dec
push
test
jmp
push
xor
inc
mov
push
cwde
in
mov
cld
adc
jge
cmp
push
dec
rcl
mov
jne
sbb
fwait
inc
sbb
adc
gs
push
dec
rcl
lods
cmp
push
ret
pushf
add
dec
imul
imul
pop
nop
ins
leave
dec
mov
mov
pop
lea
shl
pop
jg
jno
repz
push
test
xor
fidivr
hlt
pop
mov
xor
nop
loope
(bad)
sbb
sbb
xchg
dec
mov
jmp
loop
mov
pop
in
loop
sub
and
fsub
mov
ins
retf
mov
lods
mov
jne
xlat
es
out
sbb
or
xlat
cmps
test
and
pop
aas
or
sub
aad
xchg
(bad)
inc
pop
ficomp
sti
inc
inc
stos
pop
out
lods
jb
mov
mov
add
imul
xor
mov
daa
out
push
adc
in
(bad)
sub
cld
mov
mov
out
retf
lahf
movs
retf
mov
mov
push
mov
scas
or
xchg
cmp
daa
(bad)
jo
sti
xor
ja
loop
and
jp
ror
ins
push
adc
retf
cmp
ds
cdq
jl
cwde
jns
sbb
mov
repz
aas
inc
pop
test
call
aad
(bad)
mov
sahf
jg
leave
dec
and
bound
jmp
inc
outs
cmc
dec
(bad)
sub
pop
hlt
dec
adc
dec
adc
or
cli
aad
pop
loope
adc
push
and
push
imul
sar
dec
scas
aam
mov
dec
push
repnz
bound
add
xchg
leave
mov
cmp
cmp
push
jb
sub
imul
mov
test
test
fstp
mov
lods
dec
xchg
retf
cli
inc
add
loop
xlat
mov
cmp
jmp
adc
aad
pop
in
jge
in
cdq
std
xchg
jecxz
sub
cmp
xor
daa
scas
jmp
adc
outs
xor
enter
mov
push
das
xor
mov
shr
pop
call
cmps
pop
inc
neg
cs
rcl
out
lea
cmp
loope
frstor
in
ret
sbb
cmps
mov
sbb
ins
push
loop
push
movs
xor
rcr
fsubr
clc
or
cmp
cmc
jg
xchg
pop
lahf
pop
stos
aam
sbb
xor
mov
inc
pop
and
call
out
jmp
xchg
mov
fnstcw
jmp
in
pop
push
mov
stos
dec
cmc
sub
sub
nop
jmp
ds
ds
pushf
aam
push
stos
(bad)
repnz
push
icebp
xlat
push
js
add
and
lds
jbe
std
stos
xor
leave
fwait
scas
mov
jmp
pop
dec
stos
les
pop
adc
mov
fsubr
jp
ds
cli
mov
mov
shr
cdq
inc
or
in
out
ret
jmp
push
nop
fwait
xchg
neg
and
sahf
add
inc
in
sbb
call
dec
xchg
inc
fwait
mov
and
jp
movs
outs
adc
fmul
xor
inc
add
cwde
inc
or
pop
imul
push
test
ror
pop
out
leave
shl
xor
aad
clc
shl
pop
addr16
lea
fwait
in
fwait
cdq
leave
push
push
int
pusha
dec
aas
jle
fstp
sbb
mov
push
enter
scas
dec
cli
push
mov
mov
cmc
pop
add
cmp
ins
fist
shr
into
mov
out
cmp
fidivr
jmp
jo
aam
(bad)
call
add
xchg
ret
lods
enter
jmp
aas
stc
mov
adc
add
push
fwait
dec
push
cmc
(bad)
outs
mov
mov
test
xlat
mov
ds
jo
push
or
in
mov
inc
cmp
mov
ficomp
loopne
cmc
rol
cmp
xchg
loope
dec
dec
fmulp
add
pop
lock
lock
mov
xchg
mov
mov
cmp
movs
data16
(bad)
test
cmps
(bad)
cld
aad
in
jmp
inc
int
sbb
pop
and
jp
xchg
xor
pop
mov
cmp
fld
inc
loopne
cwde
sub
arpl
adc
cmp
fiadd
js
(bad)
aad
out
jmp
push
pop
leave
rcl
pop
mov
or
push
or
in
addr16
lea
data16
pop
mov
loop
ins
dec
jmp
inc
aaa
inc
mov
add
or
(bad)
ror
push
pusha
int
push
lods
fadd
leave
mov
sbb
jl
mov
push
iret
mov
push
ficomp
cs
and
fist
push
xor
lods
add
popf
(bad)
xchg
sahf
push
inc
jb
sub
and
inc
in
sub
xchg
scas
in
aas
dec
mov
mov
aas
pop
xchg
retf
xadd
xchg
inc
sbb
xor
push
ss
pop
push
adc
ret
mov
pushf
dec
sbb
xchg
push
dec
dec
outs
push
push
ins
aaa
cld
xor
push
xchg
jno
adc
outs
fldenv
jmp
or
loopne
dec
ror
arpl
xor
in
pop
mul
lahf
mov
or
test
addr16
jg
ror
cmps
pop
out
test
fisttp
scas
arpl
repz
pop
das
jns
test
je
jmp
jp
retf
fstp
shl
pop
scas
jb
cli
adc
out
push
das
(bad)
sti
cmp
push
push
and
sti
jo
cmp
pop
mov
push
dec
fiadd
rol
mov
mov
stos
sahf
cmp
dec
xor
inc
int3
repnz
ja
sub
loop
mov
lds
cdq
and
out
xor
dec
sub
xchg
and
imul
jle
ss
sub
fstp
or
dec
retf
mov
or
and
jl
push
stos
aad
(bad)
enter
lea
inc
ret
outs
adc
aaa
inc
or
ss
sbb
mov
test
mov
dec
fnsave
dec
std
ss
sti
xor
or
inc
push
push
adc
ror
dec
pop
loopne
(bad)
xor
cld
xchg
adc
push
call
inc
inc
cmps
idiv
shl
loop
dec
cmps
ja
push
(bad)
jmp
sbb
test
cmps
pop
pop
imul
std
lock
dec
arpl
ss
sahf
jmp
test
fmulp
xor
push
or
iret
sbb
outs
mov
pop
dec
mov
xor
mov
out
dec
add
sbb
test
cmp
pop
mov
pop
enter
xchg
dec
sbb
cmc
sub
push
ins
mov
lahf
test
dec
cld
cmc
sbb
inc
xor
xor
fcom
xor
inc
dec
sub
cmp
mov
cmps
cdq
inc
(bad)
inc
jl
cdq
push
push
aam
cs
int
les
ss
mov
(bad)
outs
jmp
lock
push
cdq
jnp
push
adc
cmp
mov
bound
xchg
loopne
loop
in
jle
mov
xor
mov
int
ins
lods
jb
call
add
dec
cmp
das
(bad)
pop
sbb
movs
sub
xchg
ficom
pop
dec
and
dec
sub
push
xor
jmp
jb
aaa
stos
mov
sbb
jp
add
mov
jle
add
mov
dec
pop
sub
mov
into
retf
ret
test
and
jg
push
pop
add
(bad)
jo
imul
hlt
and
or
shld
jb
fld
add
lea
sar
add
dec
sbb
jne
mov
mov
adc
sbb
mov
and
rcr
mov
ja
xor
jo
cmp
dec
into
sbb
cmps
lds
sahf
inc
push
cmp
mov
push
adc
xor
jnp
sub
mov
int3
mov
xlat
ins
xchg
mov
jne
xchg
repz
xchg
fcmovb
mov
sar
sub
enter
mov
xchg
arpl
sbb
sub
pop
cli
movs
add
call
ins
imul
jb
dec
push
and
dec
pop
(bad)
data16
test
mov
pop
sub
cmp
push
pop
cmp
mov
rcr
inc
add
push
push
pop
cld
mov
mov
xor
es
imul
sub
iret
daa
clc
cli
test
pop
mov
lea
into
jne
ds
fcom
sub
shl
inc
or
rcr
and
aam
adc
sub
mov
inc
scas
sti
mov
sub
stos
(bad)
push
retf
lods
jmp
xor
add
push
scas
xchg
xchg
add
enter
out
sub
(bad)
stc
jl
mov
not
outs
mov
loopne
fst
cmp
jecxz
pop
xor
adc
and
jecxz
xor
xor
in
mov
fisttp
cld
movs
(bad)
lock
pop
jp
mov
dec
and
rcr
sub
rol
jmp
fdiv
repnz
mov
add
jp
mov
cli
sbb
xlat
hlt
stos
dec
xchg
add
fidiv
jecxz
dec
sbb
ja
repz
xchg
jns
shl
cmp
in
(bad)
xor
cdq
xlat
xlat
test
inc
pop
cmp
ins
gs
(bad)
cmp
pop
icebp
cmp
add
lds
inc
fdivr
jo
imul
pushf
and
dec
stc
inc
dec
pushf
push
adc
push
lds
(bad)
in
xchg
cwde
mov
adc
sahf
pop
mov
loop
movs
xor
inc
xchg
fldenv
push
xor
mov
in
inc
arpl
lods
and
movs
ins
jp
jecxz
cwde
out
push
jmp
sbb
jb
cmp
inc
(bad)
imul
xlat
jecxz
mov
cmp
inc
dec
pop
repz
fs
outs
push
add
mov
test
stc
jl
and
clc
xor
jp
mov
inc
fwait
cmp
in
shl
es
xlat
xchg
fisttp
jns
cli
mov
jg
add
cmps
scas
ins
sub
bound
mov
add
gs
add
cmp
or
fbstp
lock
aam
jmp
cmp
push
pop
push
sub
popa
shr
inc
fwait
pushf
fimul
mov
mov
cmp
and
and
or
das
xor
popf
loopne
jp
mov
push
mov
test
repz
shr
jg
xor
xchg
shl
mov
add
cmpxchg
mov
xor
ss
movs
cmps
inc
(bad)
js
int3
mov
aam
lds
sub
rcl
inc
rcl
mov
xor
sub
mov
popa
movs
hlt
push
loop
push
and
jg
fdiv
add
jg
(bad)
adc
sub
cli
test
sub
in
xchg
mov
pop
ret
daa
cmc
cs
es
fisubr
jp
adc
mov
cs
push
jae
jle
mov
cmp
mov
push
retf
or
jp
rol
ds
fadd
(bad)
mov
neg
mov
inc
fs
aaa
xchg
adc
mov
sbb
mov
sbb
out
jns
addr16
pop
fldcw
pop
ret
fs
mov
mov
dec
ss
scas
lahf
add
ja
iret
jecxz
mov
pop
mov
dec
xor
adc
sub
lahf
mov
ficom
dec
jmp
loop
adc
in
sbb
imul
xchg
or
shl
rol
adc
int
icebp
repz
pushf
jp
nop
ficom
mov
fwait
dec
xchg
dec
inc
mov
test
in
iret
jne
repnz
daa
jbe
sar
adc
push
mov
les
xlat
jb
fiadd
cld
outs
(bad)
aad
inc
iret
xchg
xor
mov
cmp
int
fs
dec
add
pop
inc
sub
jb
dec
xor
cdq
shl
adc
mov
jecxz
psubb
sbb
aas
inc
jo
xor
inc
add
in
inc
stos
xchg
stc
sbb
dec
ins
outs
pop
lea
ds
into
ss
jle
out
ficom
int3
(bad)
ja
xlat
xchg
mov
fstp
sbb
fld
ins
shl
lods
nop
xchg
dec
lahf
mov
loop
clc
mov
xor
push
aas
pop
outs
mul
movs
retf
xor
out
jmp
int
inc
adc
pop
test
cwde
push
or
call
inc
mov
inc
push
(bad)
mov
nop
xchg
jno
(bad)
fisttp
cmp
out
or
dec
mov
cmps
or
aam
cmps
into
mov
xchg
sbb
shr
jae
xchg
push
mov
sub
scas
push
fld
sahf
clc
rcr
mov
out
cld
sub
shl
ret
sub
pop
mov
loopne
scas
dec
nop
iret
mov
xchg
sbb
scas
mov
sahf
push
xchg
xor
lods
ins
stos
inc
es
mov
or
mov
adc
pop
mov
dec
pop
sub
aas
ins
push
mov
ins
cwde
add
hlt
shr
xchg
ret
xchg
loopne
punpcklwd
push
pop
fwait
retf
jmp
ficom
push
mov
imul
gs
ds
mov
jge
mov
call
mov
add
mov
je
pop
sti
inc
call
pop
sbb
stos
add
mov
sbb
fiadd
ins
and
dec
jmp
sub
dec
mov
mov
pop
hlt
fwait
xlat
and
cdq
in
mov
xor
retf
stos
xor
fwait
add
in
in
inc
pop
add
enter
jo
cli
or
sub
push
adc
xor
test
fs
mov
(bad)
sub
xor
fpatan
(bad)
xchg
or
push
hlt
mov
jo
iret
(bad)
outs
dec
mov
mov
ret
out
inc
add
(bad)
cs
out
ret
mov
push
xchg
cmp
adc
in
mov
fld
jbe
psubb
test
mov
call
pusha
pop
shr
call
(bad)
retf
jmp
xchg
mov
cld
pop
test
jl
push
jl
xchg
cmp
ficom
jo
nop
or
inc
add
adc
test
xor
or
xchg
pop
(bad)
sbb
(bad)
jp
adc
mov
pop
mov
pop
fstp
push
mov
sub
mov
lods
mov
add
out
jb
ja
xchg
pop
inc
mov
or
push
std
xchg
retf
lods
mov
or
and
scas
fsub
and
mov
cld
pop
jno
add
loopne
aaa
std
ja
cmp
xor
add
mov
pop
mov
pop
jb
jnp
data16
lock
jl
(bad)
out
sbb
shl
xchg
or
stos
out
(bad)
ja
sub
les
pop
(bad)
call
mov
fisub
enter
add
sub
loope
dec
ss
jb
pop
mov
jb
sbb
stc
addr16
dec
pop
movs
pop
jbe
push
sbb
push
call
push
(bad)
retf
lods
xchg
out
call
mov
dec
jle
xchg
in
xchg
loope
sub
add
in
shl
sar
int
icebp
aas
popa
jmp
call
mov
repnz
push
jl
ret
fwait
enter
pop
inc
or
jp
ins
mov
push
out
out
cwde
or
mov
cmp
outs
mov
dec
jnp
push
cmps
sub
mov
inc
retf
sub
push
add
mov
jg
or
mov
cld
stos
mov
mov
dec
sub
mov
add
xor
sbb
adc
pushf
jnp
dec
lock
ds
test
ins
ja
ror
test
lahf
add
cmp
out
das
dec
pop
mov
repnz
retf
pusha
fwait
test
sbb
(bad)
outs
push
adc
xchg
add
fisub
cli
out
clc
xor
sub
outs
cmp
or
div
shl
rol
mov
and
movs
or
outs
inc
lea
xor
popf
inc
xor
shl
adc
mov
pop
xchg
xor
jmp
jnp
ss
inc
cld
aam
rcl
cmp
mov
fnstsw
cmp
jo
ret
rcl
jmp
xlat
jmp
call
inc
fcmovnu
in
in
sub
xor
ins
adc
cmps
cld
mov
pop
sbb
inc
int
inc
imul
xchg
mov
cmp
pop
mov
pop
in
aas
lds
mov
into
adc
test
in
ror
fistp
jae
adc
xchg
in
popf
loop
fcomp
imul
xor
push
in
fcomp
inc
push
xchg
add
in
movs
push
lods
jnp
mov
out
xor
mov
les
enter
or
imul
cmc
movs
push
rcl
pop
jnp
fs
sbb
dec
jne
sbb
jmp
sbb
xchg
je
sahf
add
sub
ins
cli
push
dec
jmp
push
xchg
stos
movs
jae
arpl
into
lea
cld
cmp
lods
out
jmp
cmp
mov
cmp
in
pop
push
(bad)
fisttp
loope
pop
popf
mov
test
lods
out
push
test
pop
xchg
fild
dec
xchg
cmp
xchg
fstp
add
mov
jmp
sbb
dec
jge
mov
pusha
cmc
sbb
jp
xchg
xlat
dec
xor
jb
fwait
scas
xor
icebp
inc
xor
mov
dec
jge
xchg
pop
mov
stos
jno
ss
pusha
jbe
push
mov
aas
cdq
mov
sahf
push
inc
loop
add
xchg
xor
daa
scas
jecxz
aam
daa
(bad)
in
sub
int
xchg
test
movs
adc
mov
xor
jne
adc
and
or
jp
pusha
sbb
add
mov
and
lods
xchg
or
jmp
mul
add
jp
mov
pop
stc
outs
repz
pop
bt
mov
or
add
mov
push
sahf
mov
lock
or
push
mov
mov
movs
std
sti
mov
adc
xchg
xlat
and
and
lods
push
cmp
jl
popa
popf
add
ds
cwde
aas
lock
shr
outs
or
out
cli
xchg
dec
and
pop
shl
and
jle
add
imul
jg
mov
push
ret
dec
mov
stos
xor
into
inc
mov
mov
xor
add
int3
outs
sbb
xlat
xor
fmul
mov
pop
xchg
in
push
cs
pop
sbb
div
or
jmp
test
inc
mov
pop
cmp
scas
inc
xchg
mov
js
aam
jnp
xchg
fwait
xor
movs
lock
scas
aas
push
das
pop
out
test
mov
enter
cmp
fistp
jb
push
repnz
rol
jae
mov
lods
fisttp
or
inc
add
push
sub
dec
inc
lock
scas
jno
inc
fwait
jle
clc
rcl
mov
rcr
inc
fsubrp
call
imul
rcl
(bad)
mov
push
add
inc
loopne
pop
or
mov
dec
and
in
ss
mov
into
fwait
addr16
adc
mov
push
in
rcr
cmp
lea
mov
inc
outs
pop
out
mov
dec
popa
mov
dec
sub
aad
adc
xchg
outs
cmp
and
sbb
hlt
mov
into
dec
push
or
xchg
push
xchg
shl
sbb
retf
cmp
push
stos
movs
pop
sbb
sbb
push
mov
push
and
sub
sub
adc
pop
cli
inc
loop
out
sub
call
test
jbe
mov
or
outs
or
stos
imul
icebp
pushf
div
mov
rcr
cmp
das
fcmovbe
shld
shr
stos
arpl
les
adc
out
les
inc
mov
pushf
and
(bad)
iret
and
sbb
xor
test
ins
mov
jmp
mov
push
xchg
loopne
push
in
or
cmp
call
adc
sub
add
in
outs
dec
movs
rcr
(bad)
cli
jae
xchg
fcmovb
(bad)
iret
cmp
push
add
out
jnp
lock
lock
and
lods
push
aam
neg
stos
sub
push
or
jmp
das
mov
cmp
rcr
or
fwait
inc
rcr
jecxz
add
(bad)
std
dec
mov
les
outs
push
loope
add
mov
movs
adc
xor
sahf
or
pop
add
push
inc
pushf
sahf
push
out
mov
mov
idiv
into
inc
jecxz
mov
pop
imul
sub
je
imul
in
cmp
ret
sub
cmp
shl
imul
call
(bad)
mov
(bad)
adc
scas
enter
fs
int
sub
aad
lods
pushf
or
jb
jmp
push
test
mov
das
iret
dec
stos
stc
or
add
neg
shr
xor
out
sahf
ror
push
sbb
bound
pop
imul
cmp
fbld
push
adc
sub
call
js
cmp
loopne
sar
les
xor
inc
je
daa
bnd
shl
jae
cdq
scas
sbb
mov
sbb
pop
out
xor
(bad)
mov
lahf
jmp
(bad)
add
ins
inc
add
scas
sub
push
push
push
sbb
repz
repz
mov
push
shl
sbb
out
or
ja
jne
and
pop
adc
movs
popf
stos
stos
inc
ja
xchg
mov
sbb
call
into
lods
test
call
sbb
xchg
jbe
loop
lds
push
or
sub
es
adc
je
sub
pop
fcom
rcr
dec
xor
push
cmp
push
add
mov
inc
not
mov
push
mov
movs
cmps
cmp
dec
lods
fbld
scas
addr16
push
into
ins
dec
mov
add
inc
ds
lea
cli
lock
pop
ret
fimul
push
push
fwait
ss
pop
imul
add
int3
jbe
fwait
movs
(bad)
mov
pop
ins
sub
ror
and
pop
gs
and
(bad)
sbb
das
sub
dec
mov
rcr
push
popa
(bad)
hlt
shl
bound
mov
fs
push
dec
retf
ret
pop
das
jb
mov
mov
in
jecxz
das
fmul
ja
pop
xchg
push
push
test
and
xor
jg
xor
or
sti
mov
(bad)
into
cmp
mov
cld
ffree
out
lea
pop
xchg
cmp
and
xlat
shl
mov
add
aad
fisub
mov
cmp
aad
mov
cld
or
fstp
inc
ror
add
aas
retf
inc
cmp
lock
adc
inc
push
push
icebp
dec
cs
std
call
sbb
movs
lock
xchg
cmp
pop
and
adc
pop
icebp
sub
mov
xchg
inc
inc
mov
sbb
mov
pusha
xchg
and
adc
les
push
mov
push
les
mov
clc
imul
leave
jb
pop
loope
adc
fdiv
imul
in
adc
adc
scas
mov
in
int3
xchg
xchg
push
mov
movs
imul
mov
xchg
int3
push
and
mov
enter
mov
fild
cmp
imul
in
test
jns
cli
jnp
mov
test
aaa
dec
std
push
js
and
std
push
push
inc
int
sub
sub
ds
or
in
fadd
fsubr
fwait
les
mov
je
inc
xchg
xchg
movs
sub
inc
or
leave
xor
or
add
test
fs
fwait
xor
push
sbb
das
pop
aas
jae
in
push
lds
dec
sbb
sbb
push
pop
jnp
fsubr
adc
mov
dec
in
cmp
push
lahf
nop
jmp
and
out
lods
sahf
and
lods
out
dec
out
or
loopne
lahf
lea
push
jbe
dec
jecxz
or
(bad)
cmp
aaa
mov
cmp
mov
mov
push
stc
lds
sbb
out
sub
int3
shl
pop
mov
mov
inc
call
aaa
mov
ja
sub
mov
stos
in
retf
and
ds
retf
bound
sar
enter
mov
dec
or
pop
jae
les
sar
scas
and
inc
push
leave
add
ss
push
push
mov
add
hlt
ror
pop
push
xchg
ret
pop
(bad)
out
ins
xor
fmul
xlat
imul
dec
clc
mov
loopne
mov
rol
sahf
cmp
ja
push
(bad)
xlat
push
push
aaa
sub
mov
lahf
fisubr
dec
out
xchg
cmp
nop
mov
in
pop
mov
cmp
movs
ins
(bad)
xlat
mov
jmp
add
(bad)
mov
xor
jmp
pop
sub
sbb
iret
and
imul
ror
or
bnd
dec
push
cmp
stc
call
cmp
or
adc
sbb
test
or
pusha
mov
push
sub
or
mov
ror
(bad)
cmp
ss
push
fdiv
daa
loopne
ins
sub
out
jle
popf
fcomp
in
pop
movs
add
push
or
pop
in
fidivr
xchg
lahf
pop
in
xlat
or
push
sub
test
mov
xchg
loopne
(bad)
pop
cmps
lahf
push
or
inc
add
call
pusha
jno
dec
sahf
leave
ss
(bad)
in
adc
out
inc
sbb
and
mov
xchg
ds
xchg
into
jb
or
retf
xchg
iret
mov
adc
test
cwde
fs
retf
dec
nop
fcomp
test
(bad)
adc
push
inc
xchg
(bad)
imul
push
addr16
xchg
cmp
shl
xchg
jne
popa
inc
ror
addr16
and
jle
sbb
popa
push
jmp
push
jmp
inc
lods
sub
fisttp
mov
mov
fild
mov
add
push
fwait
jmp
fsubr
mov
cs
pop
dec
cdq
(bad)
push
or
cmc
jns
dec
pop
pop
scas
les
mov
int3
test
dec
inc
adc
lahf
xor
arpl
ja
in
hlt
fcom
scas
nop
addr16
out
push
dec
inc
jge
icebp
stos
inc
pusha
mov
fnsave
cmp
mov
repnz
jle
shl
cs
adc
ds
sbb
mov
ret
dec
test
inc
nop
idiv
mov
cmp
pop
mov
fcomp
or
(bad)
test
fbstp
sbb
sub
sbb
icebp
sbb
pop
fwait
nop
jno
or
sub
cdq
mov
std
data16
pop
int3
(bad)
pusha
cmp
cdq
popf
retf
cmp
arpl
pop
and
(bad)
loope
in
cdq
stc
fst
imul
adc
les
shl
js
movs
mov
inc
or
shl
mov
inc
sbb
ficomp
lahf
int
(bad)
fcmovne
stos
mov
mov
adc
pop
mov
cmp
js
mov
loopne
cmps
int3
fcmovb
fld
retf
ins
enter
mov
jp
test
ja
push
and
dec
xchg
cs
cmc
pop
sub
xor
cmp
jnp
jnp
mov
rcr
int3
pop
push
sub
outs
in
cmp
out
inc
mov
cmp
or
mov
inc
mov
adc
sub
mov
xchg
movs
and
test
lods
mov
fistp
call
stc
int3
push
cld
retf
aad
or
adc
in
jle
xchg
jmp
or
(bad)
call
fdivr
mov
out
test
sar
aaa
sbb
pushf
pop
cmp
clc
or
nop
and
pushf
cmp
mov
sub
iret
(bad)
sbb
push
fidiv
xchg
mov
(bad)
jbe
xchg
add
xor
push
mov
hlt
mov
sbb
cwde
cld
inc
(bad)
cmps
cmps
mov
mov
in
in
test
pushf
pop
sti
in
imul
mov
xor
dec
pusha
in
mov
dec
std
or
add
pusha
pop
sub
mov
loop
mov
mov
dec
sbb
sub
movs
ins
dec
aas
(bad)
sbb
jnp
adc
adc
mov
push
lods
rcl
lahf
hlt
in
xchg
and
mov
pop
addr16
inc
xchg
push
and
pop
aam
xor
push
shl
into
test
xor
push
mov
jo
sbb
leave
ja
aam
mov
repz
push
ficomp
test
jo
jle
mov
stc
cmp
test
imul
pop
push
lea
dec
stos
and
(bad)
jne
cmp
mov
jmp
sub
mov
fmul
(bad)
mov
push
aad
push
test
mov
jne
dec
repnz
ins
jae
ja
retf
enter
shl
or
iret
adc
xor
nop
pop
hlt
aaa
xchg
push
(bad)
push
(bad)
int
cmp
xchg
inc
xchg
xor
dec
fwait
dec
inc
pop
lods
repnz
outs
leavew
stc
les
sahf
ins
pop
jmp
add
inc
(bad)
pusha
add
and
movs
mov
cmp
std
(bad)
or
or
fcmovnb
(bad)
fistp
mov
sbb
sbb
cmps
dec
push
bound
ret
inc
ins
cdq
cmp
push
cmp
les
ins
into
sbb
mov
xor
fwait
jne
push
aam
mov
or
add
test
mov
mov
pop
clc
sbb
pop
jns
outs
sbb
jns
jmp
sbb
push
popa
sti
and
sub
sbb
aas
mov
jmp
aam
push
daa
pop
mov
(bad)
lds
ins
mov
mov
aas
xor
jmp
pop
addr16
add
mov
xchg
addr16
aas
iret
cmp
jp
cmps
fcmovbe
ret
inc
out
push
inc
cdq
push
mov
mov
in
xor
test
inc
jp
test
movs
dec
shr
cmps
dec
stos
idiv
in
es
mov
sets
std
sub
sbb
(bad)
outs
enter
push
xor
sahf
stos
sub
out
(bad)
pop
out
dec
mov
pushf
adc
jmp
xchg
popa
cmps
ss
jmp
jmp
retf
aaa
add
shl
jno
loopne
xor
push
jle
add
imul
mov
int3
jmp
in
imul
data16
jp
std
push
jp
pop
mov
outs
ja
aam
inc
fdiv
dec
sub
cmp
stos
call
add
jle
sar
(bad)
xor
jg
int3
jbe
sbb
jbe
sbb
xchg
test
mov
pop
in
cmp
jle
mov
outs
out
jecxz
dec
dec
jp
test
jecxz
jg
inc
int
mov
pop
add
shl
jle
bound
push
sub
stos
sbb
mov
cmp
dec
fdivr
mov
jbe
outs
jno
cdq
cmp
add
and
fs
stos
or
fst
idiv
in
(bad)
sti
xor
add
ins
sbb
jne
mov
inc
mov
pushf
loop
mov
fbstp
cmp
adc
shl
jmp
adc
test
xor
popf
and
xchg
mov
or
in
sti
das
mov
pushf
jmp
or
push
add
ret
mov
or
or
pushf
cmps
dec
push
in
(bad)
adc
or
sbb
imul
xchg
cmc
andnps
cmp
dec
int
mov
cmp
shr
les
xchg
in
mov
stc
pop
add
pop
hlt
or
bound
push
jp
pop
das
in
outs
fld
push
mov
aam
cld
or
clc
inc
jp
xchg
xchg
pusha
dec
(bad)
push
test
mov
je
lock
add
hlt
cmp
(bad)
mov
xor
cmp
test
mul
(bad)
sbb
sbb
sub
lock
or
xor
out
mov
addr16
jmp
and
arpl
retf
sbb
js
adc
xor
cmp
out
sub
mov
mov
int
cdq
sbb
push
mov
pushf
repnz
push
cmp
sbb
push
mov
hlt
or
shl
cdq
sub
or
pop
xchg
fiadd
sbb
pop
jbe
xchg
jle
int3
mov
xor
repz
cld
iret
lods
out
or
pushf
push
cmc
call
lock
sub
ja
retf
ret
or
test
imul
mov
pushf
sbb
mov
clc
jns
jle
data16
in
imul
retf
push
or
adc
lods
add
test
ins
les
cmp
mov
pop
xchg
iret
(bad)
ficomp
inc
push
test
out
aaa
adc
jo
mov
hlt
rcl
mov
fwait
pop
push
cs
outs
hlt
ret
fstp
mov
sbb
adc
sub
movs
sub
or
(bad)
xchg
mov
jnp
jg
test
cmp
mov
sub
cs
das
pop
mov
fstp
sub
mov
push
lods
sub
fcomp
rol
jno
data16
std
inc
jns
(bad)
adc
push
dec
dec
push
or
and
dec
xchg
adc
cwde
mov
rcr
ret
out
inc
test
nop
inc
xor
dec
js
inc
jge
mov
xlat
out
mov
push
xchg
push
jnp
stos
gs
sub
sbb
xor
xchg
cmp
sbb
mov
sbb
inc
fstp
sub
fldcw
mov
out
jns
and
mov
clc
(bad)
ficomp
ins
mov
repnz
pop
or
xor
push
dec
jecxz
(bad)
nop
xor
pop
lods
add
push
call
or
ds
and
mov
in
inc
sub
jle
xor
jb
ds
and
sub
movs
inc
xchg
xchg
cmp
jbe
pop
idiv
cld
cmps
xchg
pop
dec
retf
out
repz
inc
mov
jns
cld
jns
cmp
pop
mov
loopne
xor
(bad)
je
(bad)
loopne
fisubr
mov
pop
mov
or
cmp
sub
mov
test
ja
jno
xchg
push
and
movs
mov
arpl
or
mov
lods
rcl
mov
inc
push
pop
add
mov
shr
scas
loope
cwde
sbb
xchg
sbb
aad
out
ret
push
retf
(bad)
xchg
cs
mov
adc
jmp
fdiv
mov
pop
push
(bad)
inc
jno
jo
aam
inc
sbb
mov
jle
sbb
cwde
jno
jge
call
fnsave
or
jnp
push
cmp
push
cmc
rcr
xchg
sub
push
clc
cmps
mov
ja
enter
push
mov
sub
in
retf
jg
mov
push
mov
fisubr
xchg
push
shl
xlat
jno
fsubr
or
clc
mov
cmp
push
inc
jo
mov
adc
in
ret
mov
xchg
xor
mov
sbb
mov
adc
mov
retf
retf
loope
inc
inc
cwde
cdq
dec
fsub
clc
add
(bad)
cwde
pop
mov
cmc
cmp
iret
sti
or
xor
push
pop
sti
shl
mov
mov
scas
dec
std
in
mov
repz
mov
ror
jge
out
mov
xchg
lock
xor
ret
pop
lods
dec
pop
iret
xor
lods
cdq
test
retf
rol
mov
mov
mov
loope
cli
mov
ds
or
or
jl
xor
movs
daa
cmps
add
mov
or
mov
stc
in
jge
hlt
push
gs
inc
fsubr
fistp
mov
jge
mov
sti
inc
int
mov
mov
and
sar
jae
push
dec
inc
pop
jo
mov
cmc
xchg
ss
mov
ja
mov
mov
fsub
xchg
imul
push
popfw
lods
int
and
and
mov
mov
and
or
out
push
adc
add
int3
bound
jle
inc
test
lea
div
sbb
xchg
mov
adc
adc
int
jp
cdq
add
jnp
imul
inc
pop
loopne
popf
popa
nop
push
in
jecxz
jge
iret
pop
jge
cmps
(bad)
shl
popf
fldcw
mov
inc
out
into
ins
push
fnstcw
inc
mov
push
add
mov
sbb
js
nop
out
add
dec
lds
pop
icebp
mov
push
push
arpl
leave
test
or
sub
sub
inc
cmc
push
(bad)
retf
xor
push
iret
outs
movs
dec
clc
loope
(bad)
(bad)
rcl
out
xor
xchg
loopne
test
lods
inc
shl
fbstp
push
pop
rcl
mov
jp
cmp
add
or
fcomp
outs
pop
call
cld
jb
pop
(bad)
pop
inc
mov
mov
or
sbb
lods
(bad)
push
and
cmp
stc
lds
add
jbe
cmp
mov
pusha
dec
dec
add
pop
inc
mov
sbb
push
(bad)
mov
fsubr
mov
mov
jecxz
fmul
outs
test
push
(bad)
in
push
loopne
push
jecxz
xchg
dec
or
out
(bad)
or
sbb
and
call
dec
fisttp
rcr
jmp
push
int3
stos
or
inc
fs
add
outs
xchg
dec
int3
pop
pshufw
sbb
pop
xlat
movs
jo
fist
pop
(bad)
push
or
je
jp
jae
loop
inc
stos
cwde
inc
mov
or
jb
icebp
sbb
or
lods
loopne
sub
push
mov
jne
hlt
push
jmp
ins
gs
sbb
or
sbb
cs
or
jb
frstor
add
outs
cmps
ror
jp
lds
call
inc
inc
jecxz
sbb
add
pop
mov
mov
(bad)
aad
adc
lock
hlt
add
data16
jnp
xchg
jnp
outs
xor
dec
and
push
mov
inc
outs
arpl
stos
int3
(bad)
jl
sbb
mov
loopne
cwde
arpl
int
cwd
mov
push
mov
adc
test
int3
pop
push
fs
xor
sub
cmp
ins
fstp
out
mov
and
outs
push
test
fstp
bnd
mov
lods
mov
xchg
dec
sbb
adc
mov
jecxz
mov
sub
xchg
clc
mov
and
or
dec
xor
fisubr
mov
cmp
or
add
je
pop
jmp
fstp
jmp
cmp
push
xchg
aas
lds
es
(bad)
xchg
sbb
int
sbb
ss
dec
jns
dec
sahf
loop
ja
arpl
mov
dec
dec
inc
and
add
sbb
xchg
xor
jge
xchg
in
bswap
bound
repz
xchg
imul
or
jnp
jl
mov
in
pop
adc
xchg
pop
rcl
xchg
push
or
int
mov
movs
push
mov
jnp
lds
ins
leave
dec
cmp
hlt
popa
leave
call
and
and
adc
xor
pop
add
adc
xor
dec
stos
mov
fdivp
fbld
push
ja
xchg
retfw
sub
add
xor
cmp
sbb
fnstcw
add
xor
lahf
inc
(bad)
btr
ror
jo
mov
cld
leave
cmp
xchg
jmp
pop
cmp
outs
mov
mov
js
cmps
push
ret
(bad)
pop
cs
xchg
ficomp
clc
retf
xchg
pop
mov
test
mov
and
shl
fisub
lahf
or
sub
bound
in
add
add
pop
je
push
bound
pop
stc
movs
cmps
push
mov
inc
mov
and
loope
mov
pop
inc
mov
push
adc
add
rcr
cdq
push
test
into
mov
rcl
xchg
or
aas
mov
mov
(bad)
mov
imul
jbe
lods
ret
loop
dec
fiadd
pop
out
add
adc
sbb
push
loopne
mov
cs
lahf
jno
(bad)
jne
dec
jle
push
int
jb
cmps
mov
fisubr
and
inc
jge
push
or
fisttp
mov
lea
retf
ja
push
cld
jb
xchg
lock
push
shl
or
das
into
push
je
ins
adc
fisubr
dec
mov
out
cmp
sub
fcmovbe
add
ins
dec
ja
jae
shl
test
fs
fcom
adc
jmp
imul
outs
fdivr
add
push
movs
ret
call
inc
sub
mov
jnp
(bad)
sahf
xchg
in
mov
int3
aad
cmps
fcmovnb
xchg
dec
sub
cmps
inc
adc
inc
jae
xor
xor
sbb
fsub
test
rcl
mov
mov
rcr
xor
popa
ds
into
jno
push
sub
repnz
mov
sbb
jmp
push
sub
pop
das
push
or
jbe
test
push
cld
and
gs
xor
dec
sbb
xchg
mov
shl
push
jnp
fadd
out
ss
dec
jg
jle
sub
inc
add
(bad)
into
loop
ss
cmps
iret
jl
sbb
ins
repnz
cmp
test
hlt
xchg
push
sub
jnp
pop
ds
ss
add
fst
repnz
dec
leave
out
rcl
pop
mov
outs
nop
popa
icebp
push
sub
mov
sahf
pop
pop
call
(bad)
dec
sbb
or
add
dec
pop
out
add
and
mov
test
xor
push
outs
into
ja
or
push
scas
mov
push
jle
adc
mov
je
or
ficom
stos
js
out
pusha
sbb
xchg
shr
pop
data16
push
or
and
adc
call
test
ja
jge
pop
rcr
push
xchg
mov
aam
in
int3
mov
call
int3
mov
or
(bad)
push
mov
jecxz
jl
ret
jo
mov
add
dec
dec
movs
or
hlt
add
inc
xlat
mov
and
in
(bad)
das
sti
and
nop
xchg
sbb
enter
xchg
jae
fcomp
cmp
mov
cmp
mov
sbb
add
pop
sahf
and
mov
ret
in
add
or
cmp
mov
mov
sti
(bad)
ss
in
int3
rcr
mov
mov
outs
repz
ret
fisttp
sbb
scas
cmp
jmp
and
nop
cmp
jne
and
jg
test
push
xchg
aad
cli
imul
cmps
idiv
dec
call
(bad)
dec
inc
pop
adc
ret
movs
add
sub
adc
ficom
xor
jecxz
mov
sbb
mov
ins
cwde
loop
pop
nop
inc
mov
jb
jns
mov
mov
div
jmp
jecxz
pusha
shr
out
fwait
inc
(bad)
jnp
psrlw
cs
sbb
mov
or
popa
xor
bound
cmp
pop
in
stos
test
lods
mov
lock
sar
ret
fwait
inc
pushf
push
mov
cld
jb
inc
iret
loope
xor
jle
pop
inc
adc
push
push
add
pop
shl
or
dec
mov
fsub
cld
mov
movs
dec
fidiv
fcom
daa
(bad)
fisttp
or
sbb
cmps
(bad)
jle
hlt
loopne
aad
cmp
mov
pusha
retf
jne
mov
inc
int
pop
jge
xor
dec
sbb
xchg
xor
xchg
call
xor
adc
aas
mov
inc
xchg
aam
js
aas
pop
xchg
xor
or
sub
popa
gs
stc
(bad)
mov
mov
jmp
or
adc
and
dec
lahf
mov
outs
adc
sub
aas
int3
addr16
sbb
sub
jp
in
(bad)
push
push
push
test
or
enter
ret
(bad)
sub
(bad)
aad
dec
mov
adc
dec
pushf
mov
mov
hlt
rol
pop
xchg
pop
leave
sbb
js
sub
mov
(bad)
imul
add
sbb
push
iret
dec
imul
rcl
inc
ss
mov
inc
inc
mov
in
dec
bswap
bound
inc
lea
test
cmp
test
arpl
ret
mov
mov
adc
push
sti
sar
xchg
inc
add
mov
out
mov
cdq
xlat
jmp
xchg
dec
int
add
out
pop
rcl
cmps
push
fwait
cmp
cmps
adc
std
popa
and
(bad)
js
jg
push
sub
sbb
inc
aaa
in
jnp
adc
jl
popa
inc
dec
jb
ins
cmp
dec
ins
pop
ret
fidivr
fist
push
in
test
xor
mov
(bad)
gs
jge
push
and
loopne
mov
imul
popa
addr16
mov
mov
mov
push
jns
pop
repz
cmp
xor
adc
add
hlt
pop
(bad)
fnstcw
mov
int3
sbb
xchg
mov
int
cmps
jge
scas
test
out
jbe
or
rcl
cmp
jo
adc
mov
mov
adc
seta
jbe
mov
scas
pop
pop
mov
mov
in
mov
mov
cmps
mov
loopne
or
shl
stos
add
xlat
xor
push
add
aam
xchg
gs
adc
mov
xchg
dec
jae
fld
mov
in
jae
jmp
ins
mov
mov
mov
push
push
mov
and
pop
pop
mov
add
or
shr
lahf
retf
repz
and
fmul
jecxz
nop
add
sbb
mov
mul
mov
sbb
aaa
icebp
xor
call
push
out
aaa
inc
mov
push
hlt
lods
fist
outs
fild
aaa
rcr
push
mov
sti
stos
dec
out
iret
mov
add
pop
cmps
add
mov
out
out
add
(bad)
fmul
and
(bad)
mov
ret
enter
cli
dec
mov
ror
bnd
fst
outs
idiv
test
or
inc
pop
jmp
ret
sbb
adc
das
mov
adc
mov
movs
sahf
(bad)
aam
cld
sahf
xchg
clc
cmp
jecxz
inc
jg
fcom
dec
dec
mov
loopne
stos
test
or
push
jb
data16
xor
xor
arpl
test
int3
mov
add
(bad)
xchg
mov
call
inc
in
sbb
ins
sbb
or
xor
xor
ror
int3
adc
xchg
sti
jbe
cmps
adc
addr16
frstpm(287
jg
push
jnp
dec
mov
mov
add
imul
(bad)
(bad)
shl
sbb
sbb
jnp
mov
in
iret
pop
out
and
(bad)
(bad)
sbb
xor
scas
mov
shl
sub
frstor
retf
sar
pushf
push
rcl
ret
cld
stc
and
fadd
cmps
scas
ins
and
mov
push
sbb
sub
inc
mov
xchg
mov
inc
inc
mov
xchg
mov
or
mov
jnp
dec
jle
rcl
sub
(bad)
scas
ins
xchg
into
pusha
mov
fidivr
arpl
hlt
push
pusha
(bad)
cmp
cdq
sub
sti
push
xchg
(bad)
jno
ins
inc
cmp
enter
mov
push
push
aas
leave
cmp
cwde
ds
push
fcom
aas
jno
xor
rep
iret
push
add
xchg
dec
pop
movs
or
sbb
add
mov
lods
aas
sub
aam
jmp
shl
rcl
pop
mov
push
xchg
idiv
push
je
pop
fisttp
dec
xchg
pushf
fnstcw
mov
adc
push
scas
pop
push
pushf
ret
arpl
and
mov
and
adc
push
aaa
cld
(bad)
pop
clc
imul
aas
lds
xor
(bad)
fwait
inc
iret
in
test
aas
xchg
fsubrp
sti
int
cmc
dec
ror
sbb
xchg
clc
inc
lock
jle
imul
mov
cs
fimul
fdivr
sub
popa
(bad)
jmp
mov
sar
cdq
mov
mov
add
je
adc
pop
adc
pop
aas
popa
and
inc
dec
mov
pop
(bad)
arpl
adc
or
je
fimul
mov
jp
outs
sbb
mov
and
push
mov
adc
xchg
push
inc
aam
inc
adc
mov
xchg
repnz
mov
sbb
sub
out
out
jmp
pop
repz
xor
sub
test
and
pop
ret
jmp
mov
shl
adc
and
(bad)
stc
frstor
mov
jmp
mov
lahf
ds
mov
aam
sbb
call
cmps
sti
loopne
mov
movs
fadd
fcom
ret
or
fwait
enter
inc
sub
test
(bad)
je
or
sbb
pop
call
cmp
pop
js
xor
retf
dec
push
sub
adc
sub
adc
jle
mul
mov
outs
repz
lock
push
cmc
sub
adc
xlat
rol
cmp
fist
popa
xchg
test
dec
add
mov
(bad)
arpl
stos
mov
push
push
mov
jmp
cmp
sbb
int
cmp
lods
xchg
fwait
sub
sti
xlat
ins
aad
mov
clc
mov
and
aas
cdq
bound
mov
retf
movs
xchg
ss
daa
dec
add
dec
mov
adc
pop
mov
ror
dec
pusha
pusha
xchg
bound
mov
imul
outs
xchg
mov
and
enter
sub
sahf
cli
fwait
mov
aad
pop
das
dec
out
stos
inc
cdq
mov
mov
mov
pop
jo
push
cmp
pop
mov
movs
inc
and
push
jmp
es
xor
mov
ins
dec
outs
ret
and
pop
xchg
jmp
fsub
sbb
inc
das
mov
cmp
sbb
pop
cmps
bound
push
mov
(bad)
pop
aad
push
inc
pop
fistp
fcomp
and
jmp
sbb
cli
cmp
mov
sub
xchg
lods
pop
jle
sbb
data16
adc
cmp
dec
ja
sbb
retf
adc
and
cmp
dec
jp
mov
sbb
xor
jmp
xor
popa
std
xchg
mov
stos
ficomp
(bad)
jno
fisubr
mov
adc
dec
shl
mov
and
pop
cmp
fs
call
sti
ds
(bad)
repz
sub
adc
sbb
je
pushf
ins
or
jbe
lods
(bad)
out
xor
and
fstp
sahf
fwait
push
jl
inc
ins
movs
push
add
shl
jle
aad
aaa
ja
pop
or
xchg
enter
fisttp
out
cmp
cdq
add
cli
das
stos
mov
or
or
cmp
mov
push
stos
xor
sub
jnp
ret
fidivr
pop
mov
push
pushf
test
cmp
fwait
adc
test
push
push
sbb
sbb
add
fwait
ja
mov
dec
jle
xchg
jnp
mov
(bad)
sahf
outs
xchg
ja
push
nop
pop
inc
dec
jle
inc
das
fsubp
ret
jmp
mov
rcl
out
cmp
daa
movs
fistp
dec
fisub
mov
jb
dec
fsubr
jl
mov
pushf
call
enter
test
daa
loope
cmp
ins
add
inc
(bad)
jmp
xchg
fidivr
xor
push
mov
pop
shl
push
movs
lahf
not
int3
outs
inc
push
int
add
lock
fiadd
or
ror
mov
iret
push
aaa
outs
je
cmp
push
lahf
fimul
fbstp
out
call
cmp
out
ins
and
(bad)
hlt
es
out
not
icebp
lds
push
jbe
jle
mov
in
arpl
(bad)
and
mov
cmp
pop
sub
cmps
xchg
jge
pop
and
cmp
jl
les
loopne
mov
(bad)
jae
pop
sar
pop
mov
leave
sbb
mov
ret
repnz
mov
mov
addr16
(bad)
xlat
imul
je
aas
aam
(bad)
ret
mov
xchg
(bad)
imul
add
popa
mov
aad
rcl
gs
das
xchg
inc
in
retf
jo
xlat
or
push
lods
out
cmp
out
add
inc
xor
xchg
cld
dec
repnz
pop
popf
rcl
push
in
pop
mov
jb
xchg
mov
sub
loope
add
icebp
mov
fdivr
jbe
lds
addr16
xchg
inc
push
fcom
fwait
or
or
and
icebp
ins
add
ret
sbb
loop
pop
ficomp
outs
int
cdq
(bad)
push
or
outs
data16
into
loopne
in
mov
and
lods
adc
push
mov
pop
adc
or
leave
fwait
xchg
call
pop
js
rcl
pop
mov
popf
test
dec
shr
mov
mov
shr
in
data16
into
into
fs
int
dec
test
xchg
enter
popf
mov
pop
data16
std
mov
nop
movs
jmp
jmp
test
dec
idiv
push
inc
aad
out
pop
(bad)
in
lea
pop
cli
or
sbb
mov
jg
xor
xchg
sub
ins
xchg
dec
mov
cmp
cwde
(bad)
fisttp
fincstp
adc
repz
mov
imul
push
(bad)
sar
int
clc
lods
cld
mov
rcr
inc
jo
in
js
or
cmp
cdq
lsl
scas
pop
les
push
in
sbb
xchg
sub
mov
in
mov
mov
xchg
ficom
add
add
sbb
jne
sub
aam
shl
jbe
cmc
mov
test
sub
xor
jbe
pop
repnz
into
mov
ret
adc
in
leave
mov
sub
push
mov
clc
dec
shl
push
push
and
sub
mov
push
movs
dec
mov
mov
out
pop
cli
fdivr
mov
in
shr
stc
mov
jmpw
sbb
idiv
mov
movs
or
ins
xor
jl
jg
cmps
stos
xor
call
ret
mov
dec
jl
(bad)
jmp
sbb
outs
sub
cmp
movs
and
stos
lds
mov
mov
adc
add
dec
push
push
xor
or
pop
pusha
std
mov
shr
(bad)
pop
or
jo
pop
lds
jae
sahf
jne
stc
cmps
stos
push
adc
retf
dec
ins
push
call
xchg
mov
movs
jp
push
enter
ret
pop
jg
adc
mov
fsub
xchg
push
ins
or
xlat
loop
or
mov
sbb
inc
or
mov
jbe
lods
or
inc
jecxz
out
xor
lods
retf
jne
lahf
ds
rcr
and
inc
jae
inc
jp
fwait
jp
(bad)
dec
and
mov
ret
xchg
bound
fbld
xchg
cmps
pusha
dec
mov
out
push
inc
mov
sbb
mov
test
jae
xor
out
popa
and
std
std
push
lods
cmps
fiadd
sbb
mov
jl
sbb
std
xchg
ins
sbb
jns
gs
aad
xchg
mov
cmps
fdivrp
cwde
xchg
pop
xor
stc
test
and
jae
push
xor
cmp
pop
cmps
les
inc
(bad)
mov
push
gs
mov
and
add
mov
mov
mov
and
push
xchg
or
and
scas
mov
fild
loopne
dec
lock
pop
cdq
imul
jo
cmps
cmc
sbb
adc
jb
data16
add
sub
dec
mov
xor
dec
pop
push
and
fcmovu
add
retf
sub
xor
pop
sub
lds
cmp
dec
nop
stos
cmp
inc
out
test
push
and
or
sti
in
pop
les
pop
mov
sahf
and
jo
sub
int3
cld
jge
mov
pop
mov
movs
sbb
and
push
sub
jb
mov
dec
hlt
or
mov
movs
and
push
cmp
js
sub
js
pop
out
(bad)
xor
pop
push
mov
call
mov
jge
movs
pop
mov
add
cmp
in
aad
lods
cli
test
ins
adc
lock
mov
sti
push
lds
fdiv
(bad)
rol
or
dec
mov
stos
leave
cwde
arpl
pop
repnz
cdq
fst
rol
test
icebp
shl
mov
movs
xchg
inc
pop
popa
xchg
cwde
icebp
fimul
outs
inc
cmps
mov
popf
xchg
ds
xlat
out
stos
fidiv
mov
xor
shr
adc
int3
cwde
inc
add
dec
inc
mov
iret
jmp
push
push
fist
cmp
pop
mov
pushf
lahf
cmp
loope
jl
inc
ret
pop
pop
jo
sbb
lods
call
mov
or
mov
adc
pusha
jl
sub
dec
xchg
xor
cmp
mov
xchg
xchg
fadd
push
shl
nop
kandnw
ret
or
cmp
adc
(bad)
cmp
out
mov
adc
cs
xor
(bad)
or
adc
(bad)
jo
movs
nop
push
or
jg
xor
aad
les
jg
push
pusha
mov
sahf
jnp
(bad)
aas
fcom
repnz
xor
jmp
cmp
inc
out
sbb
cwde
dec
dec
arpl
xor
mov
outs
or
outs
out
rol
pop
push
xor
(bad)
and
(bad)
jg
fisttp
or
mov
test
nop
dec
add
sahf
sbb
jg
sahf
adc
shl
pop
dec
stos
icebp
test
mov
jbe
or
call
cmp
test
iret
aaa
cmp
ror
out
push
mov
xchg
in
outs
add
nop
and
cmc
inc
sub
push
shl
add
cmps
retf
clc
pop
push
stos
xchg
addr16
(bad)
imul
xchg
addr16
lods
fisubr
jmp
or
pop
mov
pusha
sbb
fidivr
call
lds
call
and
or
mov
or
loop
mov
push
add
sbb
retf
cmp
cmp
adc
retf
in
or
cmc
xor
daa
(bad)
jno
cli
fnstcw
cmp
int
outs
cmp
mov
retf
fldcw
sub
fs
(bad)
cwde
pop
stos
jle
jns
cmp
fidivr
pop
inc
inc
daa
or
xlat
jno
fistp
jmp
cmp
mov
inc
push
push
fs
adc
and
stos
xchg
add
sbb
pop
bound
add
loopne
cmp
(bad)
mov
movs
mov
xlat
jno
jns
in
pushf
ret
js
xor
xchg
sar
test
add
sub
sub
sub
fwait
pop
aam
mov
jmp
sub
xchg
mov
push
mov
sar
iret
sub
add
addr16
js
out
add
arpl
jmp
pusha
out
mov
sahf
test
test
adc
mov
jb
xor
xor
shl
push
mov
cli
call
stc
js
leave
add
(bad)
data16
cdq
or
out
test
(bad)
hlt
and
int
sbb
cdq
xor
out
popf
or
jae
mov
xlat
or
js
add
scas
mov
xchg
mov
mov
out
cli
call
add
leave
xchg
mov
lock
pop
xor
mov
inc
lods
push
stc
inc
int
dec
dec
outs
fisub
pop
push
jge
sub
shl
add
mov
xor
movs
pop
push
outs
or
xchg
fdiv
push
xchg
sbb
dec
adc
dec
mov
mov
idiv
(bad)
cld
neg
loop
call
cmp
xor
mov
push
push
mov
aad
arpl
xchg
adc
(bad)
mov
loope
sar
xchg
jp
inc
jno
mov
mov
sahf
ja
xchg
stos
int
mov
push
movs
pop
or
fcomp
hlt
xor
(bad)
icebp
js
xor
cli
neg
pop
inc
mov
stos
push
mov
aad
mov
inc
shl
xchg
test
scas
mov
cmc
or
push
call
push
mov
sbb
test
adc
jnp
cmp
cwde
mov
lea
lods
(bad)
mov
stos
or
pop
xchg
mov
or
mov
out
inc
lods
add
cli
adc
cmp
pop
jmp
pushf
mov
sub
jle
xlat
aad
out
cmp
mov
data16
arpl
test
xchg
ror
jbe
push
ret
push
sbb
or
or
xor
aad
xchg
xor
jl
loopne
in
cmp
sub
sbb
(bad)
shl
sbb
dec
aad
push
(bad)
and
cwde
js
push
sub
fisttp
sbb
push
ret
in
jl
outs
mov
mov
jl
out
ins
sbb
cmps
enter
out
mov
(bad)
jno
add
lahf
(bad)
out
out
call
pop
push
push
addr16
sub
sbb
and
les
dec
popf
mov
test
sub
mov
xlat
jb
leave
mov
lahf
pusha
inc
pop
into
mov
jecxz
retf
xor
pop
lahf
loopne
loopne
xchg
adc
mov
sti
cmp
pusha
in
pop
imul
fwait
cmp
aaa
inc
cmp
inc
mov
jbe
pop
mov
push
and
push
push
and
repz
or
es
inc
add
pop
push
mov
jmp
xor
fst
mov
pop
sbb
js
inc
add
xlat
mul
and
das
shr
push
jl
fisub
sub
retf
sbb
aam
test
pop
(bad)
loopne
loope
or
je
pusha
adc
stos
sbb
add
pop
jmp
imul
and
fcomp
inc
jmp
outs
loop
lock
jmp
inc
mov
mov
outs
out
lea
stos
fist
int3
pop
call
movs
pop
in
or
bound
das
lock
out
nop
jns
add
mov
mov
mov
jno
and
out
cmp
rcr
adc
shl
test
mov
inc
lods
mov
in
(bad)
pop
cmp
add
sti
xchg
inc
(bad)
fst
dec
aad
ftst
aam
or
jne
outs
jl
jp
mov
fmul
inc
adc
test
out
add
xchg
push
mov
add
push
fldcw
jmp
test
cmp
xlat
repz
lods
int
ins
pop
and
or
cmp
lea
sub
scas
mov
ficomp
jg
push
dec
scas
mov
loop
jl
pop
lahf
sahf
push
add
pop
sbb
std
test
pushf
iret
icebp
inc
and
scas
stc
add
cwd
push
sub
fisubr
xchg
retf
arpl
cld
scas
and
sbb
cdq
and
jmp
pushf
sbb
cmp
popa
sar
and
(bad)
inc
ins
dec
sbb
and
dec
xchg
hlt
mov
test
cmc
push
and
arpl
shl
add
xor
sub
or
dec
pop
add
push
push
push
outs
js
(bad)
rcl
dec
mov
mov
dec
mov
addr16
push
aam
mov
pop
scas
rcr
(bad)
(bad)
jmp
xchg
fimul
xor
hlt
fs
shl
xchg
mov
lea
or
mov
les
ins
in
stc
mov
xor
inc
mov
dec
push
cmp
mov
ficomp
push
fisttp
add
aad
mov
or
and
pop
pop
(bad)
jecxz
mov
jecxz
mov
rol
cmps
popa
popf
sbb
cwde
sbb
push
cmps
mov
cli
rcpps
dec
test
mul
loope
in
cmps
aaa
push
sbb
fwait
data16
aaa
test
in
push
dec
aaa
jne
dec
std
pop
aad
pop
aas
ss
inc
push
mov
push
jno
dec
or
mov
pop
stc
xchg
clc
push
cwde
retf
neg
push
mov
leave
sbb
push
jnp
ds
test
jmp
pop
shl
add
and
ret
and
mov
jp
pusha
gs
push
repz
mov
pop
mov
dec
pop
fstp
mov
inc
in
aam
sub
les
jge
movs
mov
test
xchg
inc
(bad)
jge
cmp
cmps
inc
fsubr
jnp
sbb
into
mov
(bad)
xchg
jae
lahf
rcr
sbb
mov
cmc
inc
movs
imul
mov
pop
test
jmp
and
dec
repnz
or
add
xor
mov
test
sbb
inc
stc
lds
mov
and
jae
jbe
daa
lods
rcr
ds
or
test
add
ret
iret
dec
(bad)
mov
loope
jg
imul
xchg
sti
mov
sub
div
push
xor
ds
mov
xor
xor
imul
(bad)
adc
dec
rcr
mov
add
rol
sbb
pop
shl
outs
inc
movs
cmp
mov
iret
and
jmp
outs
jecxz
setnp
je
mov
lods
repnz
xchg
fsubr
stos
adc
pop
pusha
rcl
sbb
mov
in
add
aad
mov
mov
fadd
jbe
in
shl
adc
rcl
int3
mov
or
mov
and
xor
push
xor
xchg
ins
jb
hlt
xor
inc
inc
jns
add
and
mov
mov
add
out
adc
xor
mov
daa
out
adc
push
mov
cmp
pop
pusha
xchg
ins
push
cmp
cs
mov
cwde
(bad)
xchg
adc
test
add
in
ret
sub
ficom
sub
xor
dec
outs
sar
push
repz
jb
(bad)
sub
mov
push
jl
mov
cs
jb
mov
cmp
jne
hlt
mov
pop
push
mov
push
xchg
add
xchg
cld
ror
fild
rcl
push
cld
movs
add
dec
scas
adc
push
in
in
dec
or
in
hlt
mov
dec
pop
or
sar
in
sti
daa
adc
imul
ss
dec
push
repz
mov
ror
xchg
mov
jge
(bad)
ins
xor
fidiv
mov
call
out
or
inc
call
or
adc
lea
daa
cs
and
nop
imul
cmp
fisttp
in
jnp
adc
push
adc
mul
ret
loop
mov
out
mov
imul
jns
xchg
rol
push
in
jns
xor
cmp
repz
test
out
aaa
mov
std
sub
dec
or
stos
inc
push
sub
mov
(bad)
(bad)
cdq
fisub
sub
push
loopne
mov
mov
std
jno
sahf
push
mov
jbe
icebp
xor
mov
inc
dec
loope
(bad)
(bad)
mov
mov
out
loopne
in
mov
jbe
leave
lock
es
dec
shr
or
inc
mov
ja
push
cmps
call
mov
inc
out
cmps
scas
pop
out
sti
xor
dec
xchg
cdq
mov
test
push
sub
lods
xchg
daa
cmp
xor
cmp
aad
add
jmp
xchg
vpmadcswd
(bad)
inc
jle
add
jne
adc
pop
mov
push
adc
and
jno
imul
test
jl
into
push
stos
jo
cdq
sbb
(bad)
jb
stc
cli
arpl
mov
mov
les
sar
and
cmp
jae
call
sub
add
pop
pop
aam
jecxz
cmp
and
leave
adc
repnz
xchg
push
xlat
ja
nop
mov
enter
pop
cmp
push
ror
mov
xchg
dec
iret
jg
imul
std
pop
mov
push
mov
mov
and
jnp
daa
mov
ror
fidivr
stos
xchg
cvtdq2ps
mul
cld
mov
scas
jb
loop
jecxz
cdq
push
dec
int
ror
pop
push
cmp
sub
fmul
(bad)
push
movs
push
push
xchg
sbb
mov
out
cmp
mov
ror
retf
jp
outs
or
cmp
push
cmp
sub
adc
jns
pop
popa
sub
fs
out
xchg
and
movs
jmp
mov
jae
cmc
ins
inc
out
sahf
outs
je
jnp
or
dec
ret
sti
inc
and
jmp
icebp
jge
test
and
daa
ficom
movnti
mov
pop
sub
fsub
test
push
xchg
push
inc
adc
xor
pop
arpl
cmp
sbb
shr
or
jl
sbb
jo
or
inc
xor
jns
popa
repz
cs
sar
stos
xchg
push
dec
movs
jp
(bad)
xchg
add
loop
daa
sub
rol
pop
mov
sub
and
dec
adc
push
test
mov
push
mov
xor
add
fisub
inc
popa
push
inc
mov
xchg
and
mov
(bad)
(bad)
fs
(bad)
hlt
dec
(bad)
fdiv
jbe
sub
fisttp
or
adc
daa
xchg
jecxz
xor
jg
mov
retf
cli
loopne
sub
imul
and
das
sti
popa
add
mov
or
mov
loope
cvtpi2ps
lods
push
aaa
pop
mov
add
sub
or
xchg
popw
xchg
neg
mov
hlt
xor
nop
mov
pop
inc
sub
repnz
ins
loope
mov
sbb
xchg
les
pop
cdq
pop
xchg
(bad)
out
mov
dec
push
test
jbe
mov
adc
jnp
xchg
mov
pop
add
adc
pop
dec
mov
pop
cmp
xor
cmp
inc
xor
push
ret
mov
sbb
out
mov
nop
jnp
xchg
imul
push
xor
mov
sub
dec
push
stc
hlt
adc
fwait
popf
iret
or
pop
dec
(bad)
xchg
loop
movs
iret
int3
aam
jmp
add
lods
mov
movs
push
daa
xor
movs
xor
and
sahf
loop
retf
xchg
enter
fwait
inc
int3
cmp
int3
jne
dec
mov
imul
jne
ds
es
lds
lock
cs
jo
sbb
leave
jecxz
cwde
mov
hlt
bound
bound
sub
mov
pop
inc
daa
pop
jmp
test
add
clc
sub
dec
rcl
xchg
add
stc
xchg
cdq
and
adc
js
retf
xchg
mov
das
mov
test
sub
cld
pop
dec
cmp
outs
push
or
pop
addr16
std
test
test
or
ja
enter
pop
cmps
je
jl
shr
lock
cdq
sbb
jecxz
sbb
stos
xor
movs
mov
dec
sub
push
jns
mov
pop
cmc
clc
inc
lods
nop
jne
dec
ins
and
int3
imul
xor
cmp
jne
repz
jmp
xchg
mov
push
call
and
jp
pop
xchg
cld
in
test
sahf
arpl
xor
pcmpeqd
and
dec
loop
dec
rol
stos
sbb
push
mov
dec
jmp
inc
cmp
push
loopne
and
sbb
mov
imul
aam
jge
call
dec
mov
pop
adc
push
jp
mov
adc
xchg
push
iret
jae
faddp
pop
lods
shr
xor
cmps
xor
sub
inc
repz
pop
dec
pop
add
cmp
pop
outs
dec
(bad)
sub
dec
enter
add
jmp
jne
adc
test
(bad)
jmp
fidivr
outs
jmp
mov
aad
jno
push
inc
inc
hlt
sar
pop
xor
add
push
and
int
sbb
or
cmps
jl
arpl
fnstsw
inc
jmp
xor
mov
in
dec
add
jb
push
das
adc
ror
div
jb
xor
stos
sub
sub
inc
imul
push
adc
mov
mov
cld
out
shr
fld
jp
pushf
das
out
fild
int3
add
shr
add
addr16
sub
adc
adc
mov
sar
ja
adc
ret
fstp
mov
mov
lods
addr16
bound
pop
pop
cld
lock
loope
lds
jmp
and
jp
mov
push
sub
xor
cmp
inc
(bad)
push
push
xor
iret
sub
xchg
repz
pop
jno
xor
mov
xor
imul
in
cs
int3
jae
ret
jb
inc
dec
dec
inc
adc
push
pop
or
sbb
or
cmps
jo
mov
(bad)
rcr
cmp
mov
sbb
fwait
xchg
xor
push
xor
stos
lods
pop
pop
test
inc
push
mov
jb
adc
ins
int
(bad)
lea
retf
retf
xchg
cmp
jne
(bad)
mov
js
ficomp
ficomp
push
xlat
xor
sbb
dec
cld
imul
jmp
add
js
scas
sbb
in
push
shr
lea
mov
call
pop
sub
or
mov
xlat
inc
gs
mov
jmp
dec
fstp
loop
cmp
pcmpeqd
es
in
jns
cmp
cmp
bound
outs
adc
xchg
jl
icebp
ror
pop
mov
loop
(bad)
sbb
add
loopne
push
adc
es
enter
dec
sbb
inc
or
add
pop
push
dec
inc
daa
add
fs
pop
loope
ret
mov
mov
mov
push
jne
xchg
ds
pop
in
cdq
inc
clc
ja
push
pop
mov
out
retf
je
mov
div
lmsw
sbb
jo
xor
jecxz
and
stos
push
inc
out
sub
mov
dec
adc
jns
popf
test
(bad)
mov
mov
ret
movs
lds
sub
xor
cmc
pusha
je
inc
sub
jbe
mov
out
stc
push
cmc
mov
add
fcmovu
stos
pop
cmc
dec
cmp
jno
cmp
or
pop
jg
scas
aad
push
cmp
sub
pusha
sbb
mov
jae
mov
fadd
cmc
retf
xor
pusha
pop
int3
add
loopne
retf
cmp
lahf
and
in
in
ins
mov
sbb
sub
and
mov
cwde
ss
adc
inc
jae
inc
fwait
xchg
xchg
cmp
cmp
shr
stc
cmp
rep
jmp
jo
sbb
fild
push
(bad)
(bad)
js
pop
mov
ins
aaa
int3
jmp
and
not
mov
cmps
add
xchg
mov
dec
mov
into
cmp
pushf
lea
icebp
adc
mov
mov
adc
push
fldcw
mov
push
arpl
popf
add
rcl
push
xchg
cmp
push
mov
add
xor
rol
hlt
sub
mov
bound
add
xchg
pop
adc
cmc
out
xor
push
ss
imul
xchg
loopne
cmp
cwde
movs
ror
ja
ret
mov
xchg
jns
cmp
dec
xchg
jp
xor
leave
xchg
mov
(bad)
(bad)
cwde
jmp
iret
xor
js
inc
dec
retf
cmp
imul
cwde
mov
sub
stos
push
loop
jno
push
inc
scas
adc
stos
imul
xor
sub
scas
int3
and
xchg
fs
sahf
dec
ss
jae
dec
(bad)
mov
cwde
lock
sar
ins
xlat
or
mov
imul
adc
or
fdiv
clc
imul
rcl
jg
inc
lods
(bad)
jbe
mov
outs
push
mov
pop
mov
jb
xchg
popa
out
inc
into
and
mov
xor
aad
enter
xor
in
movs
pop
popa
push
movs
bound
fcomp
xchg
mov
int
sub
cmp
ds
ins
cmps
dec
loopne
int
pop
repnz
pop
cmp
add
shl
gs
popf
rol
cli
or
or
sub
mov
enter
add
adc
mov
xchg
shr
mov
push
push
test
pop
scas
sbb
ins
pop
mov
test
pop
sub
clc
mov
leave
mov
cdq
sar
inc
scas
fnstenv
push
(bad)
mov
mov
xor
dec
mov
mov
push
mov
fsubr
mov
(bad)
cdq
ror
adc
pop
pop
fwait
pop
mov
mov
repz
push
out
lds
call
das
std
movs
and
repz
xchg
iret
bound
sti
or
push
out
or
cli
int
mov
test
movs
call
dec
js
aad
enter
xor
add
dec
int
lock
add
push
push
mov
xor
xchg
jns
popa
scas
fnstsw
scas
aad
data16
test
jbe
and
xchg
test
test
mov
xchg
in
dec
aam
repz
pushf
add
retf
es
or
pushf
lea
es
xabort
out
cmp
inc
push
and
arpl
and
adc
je
jle
in
(bad)
loop
adc
test
mov
bound
mov
je
rcl
out
xor
inc
dec
and
xchg
cmp
sub
jle
sti
dec
(bad)
mov
daa
pop
arpl
inc
sahf
cld
sbb
jb
retf
mov
ds
push
pop
jnp
push
xchg
pop
fimul
jno
cli
imul
movs
push
sbb
iret
xchg
and
cmps
xchg
jle
cs
push
dec
pushf
add
push
(bad)
mov
sub
(bad)
gs
(bad)
add
in
popa
sbb
add
ret
icebp
cmp
push
push
mov
sub
sti
xchg
lahf
sbb
sbb
pusha
or
xor
and
push
push
out
xchg
xor
into
inc
cmc
cmc
clc
int
cmp
lds
adc
mov
arpl
push
push
or
dec
shl
add
lahf
mov
repnz
out
ins
popf
enter
push
xchg
div
movs
xor
add
jmp
es
lea
mov
add
xor
xchg
xchg
packsswb
scas
dec
cmp
push
pop
push
je
and
jno
std
inc
imul
ja
hlt
jmp
adc
shr
dec
ja
and
test
bound
or
rol
(bad)
sbb
call
and
sub
jge
ins
mov
mov
retf
gs
mov
mov
inc
jmp
jo
shr
jl
stc
jle
xchg
and
push
sbb
aas
dec
sbb
push
inc
sub
sub
es
dec
scas
fs
retf
push
fucomi
mov
add
xchg
fwait
fs
mov
leave
and
into
lods
test
mov
nop
add
push
mov
(bad)
mov
add
xchg
add
call
in
sti
nop
ss
cmc
mov
sub
(bad)
pop
push
stos
push
xor
cld
(bad)
loope
or
ds
push
les
inc
push
jns
adc
adc
cmp
loop
out
rol
test
dec
jb
inc
push
jmp
lods
in
nop
mov
ja
adc
or
fisubr
and
in
xor
aas
dec
mov
cmp
(bad)
jl
addr16
lahf
clc
mov
int
dec
push
lock
popa
or
mov
call
adc
(bad)
test
mov
sub
mov
stos
sbb
sub
ret
(bad)
loopne
frstor
(bad)
outs
push
xchg
xor
outs
jle
mov
imul
ds
add
xor
cmps
cli
stc
or
out
mov
cmp
sub
push
jmp
test
stos
loop
adc
sub
adc
mov
push
(bad)
cmp
jg
mov
mov
or
sbb
and
jmp
mov
push
shl
cdq
fistp
icebp
mov
retf
and
jl
in
(bad)
cmp
and
and
cdq
sub
arpl
mov
clc
xor
xor
and
dec
push
push
cmp
shl
dec
movs
(bad)
cmp
pusha
shl
loope
sahf
fst
pop
neg
loope
or
std
push
(bad)
retf
adc
push
aas
fwait
sar
arpl
into
call
inc
out
jle
aad
jge
pop
outs
dec
add
dec
xor
cwde
sbb
icebp
dec
sahf
test
in
inc
and
(bad)
out
xor
jmp
icebp
sub
xor
mov
mov
(bad)
xor
xor
jmp
into
enter
mov
mov
gs
es
dec
xchg
push
adc
data16
js
inc
cmps
faddp
sti
xchg
mov
data16
jecxz
adc
push
movs
rol
xchg
xchg
stos
jne
xor
fs
mov
add
(bad)
jle
cmp
push
xor
fidivr
and
aas
enter
xchg
pop
fcomi
or
jl
idiv
add
aaa
out
or
lods
das
sbb
cmc
adc
pop
fbstp
pop
cmp
jge
xchg
(bad)
push
mov
push
inc
mov
fst
add
pop
rcl
mov
xor
stos
popa
pop
jnp
shl
add
sbb
add
(bad)
int
test
pop
imul
sahf
js
pop
(bad)
not
pop
retf
mov
jbe
outs
inc
lock
jmp
mov
sbb
cmps
cli
enter
mov
xor
retf
cmps
mov
stos
aas
sub
mov
and
mov
dec
xor
sbb
dec
mov
mov
push
scas
test
fldcw
imul
mov
jp
fcomp
ins
or
fdivrp
adc
leave
sbb
cld
mov
mov
test
je
stc
add
jle
movntq
jbe
mov
(bad)
xor
dec
cmp
stos
dec
sub
fdivp
jno
rol
sar
js
pop
dec
adc
and
lahf
cs
pop
inc
xchg
out
pop
bound
fmul
repz
scas
xchg
xchg
sub
jmp
rol
sbb
rol
adc
cmp
add
paddusb
xchg
ds
cwde
xchg
sbb
jns
jmp
dec
and
mov
pop
in
cs
push
ds
jbe
in
mov
fisubr
and
movs
push
cld
test
jne
mov
sub
xchg
push
mov
sub
outs
loop
push
mov
cld
push
data16
pushf
xor
mov
dec
lods
jne
xor
ins
fisub
imul
xchg
sti
invd
xor
jb
push
shl
lds
jg
add
je
xchg
cmp
jp
push
add
(bad)
in
lods
push
popf
pushf
sbb
outs
adc
pop
lock
iret
addr16
cmps
ret
dec
push
adc
pop
dec
cld
mov
std
adc
fld
popa
push
cmp
stos
cmp
das
lock
das
mov
les
xor
cmps
mov
pop
(bad)
mov
stc
repnz
xor
dec
jp
and
sbb
aam
xor
pop
dec
sbb
fs
pusha
repnz
cdq
xor
sbb
pop
out
hlt
mov
popa
cmp
and
jle
rcl
jmp
fisttp
shl
sbb
out
cmp
in
mov
fst
bnd
xor
jb
das
adc
pop
mov
add
mov
adc
neg
fidiv
jno
aaa
add
and
fdivr
mov
add
hlt
and
int3
mov
popa
jnp
test
dec
ret
jmp
xor
lods
xchg
jo
pop
cwde
sbb
ins
adc
push
mov
mov
xchg
jl
pop
adc
into
cmp
cs
lock
pusha
and
mov
mov
jo
test
fst
movs
jecxz
outs
fist
mov
dec
mov
jbe
cdq
movs
sbb
and
aaa
es
mov
cmp
shr
ret
stc
ja
das
cmp
pop
and
mov
mov
int3
cdq
sub
data16
xor
pop
gs
push
std
inc
sub
outs
pushf
pop
repnz
cld
sbb
hlt
aad
cmc
pop
test
ins
pop
cwde
das
add
push
mov
xor
mov
loopne
push
mov
and
stos
cwde
push
cmp
mov
test
jno
adc
jnp
mov
cmp
jge
push
adc
ret
push
movs
lahf
push
sbb
(bad)
adc
or
xlat
and
ja
and
fwait
aad
xor
jmp
je
imul
rcr
data16
leave
into
pop
pop
pop
enter
add
fs
jne
(bad)
dec
sar
imul
sbb
call
pop
lahf
mov
rcr
add
bound
adc
mov
(bad)
fild
cmp
sub
sahf
push
mov
retf
jno
pop
popa
sub
and
jno
jmp
enter
sbb
addr16
mov
ins
xor
or
push
mov
out
push
retf
jp
inc
jnp
xchg
xchg
movs
shl
dec
sbb
inc
or
(bad)
sub
ror
pusha
ret
pop
push
imul
sub
aad
ins
(bad)
daa
pop
push
xchg
cs
adc
lods
xor
or
and
shl
ins
jl
mov
xchg
addr16
sub
repz
(bad)
mov
dec
ins
sbb
mov
inc
out
xchg
fwait
and
aad
and
xchg
mov
dec
cmp
mov
jns
mov
mov
mov
xchg
imul
mov
loopne
xchg
sbb
xor
shl
push
mov
pop
retf
dec
retf
fcomp
mov
pop
leave
inc
or
push
test
loope
mov
and
add
shl
(bad)
fwait
ror
inc
(bad)
nop
sbb
sub
xor
das
adc
out
nop
rcl
fcomp
sub
add
jns
jb
scas
cmp
mov
fidiv
add
iret
inc
data16
push
dec
lods
inc
inc
adc
pop
and
xchg
(bad)
scas
cdq
dec
add
das
(bad)
xchg
pop
scas
mov
cmps
jge
dec
(bad)
jge
arpl
icebp
dec
xchg
mov
sub
inc
sbb
push
jecxz
arpl
pop
mov
cld
add
arpl
sbb
and
xor
or
lea
dec
stc
aad
adc
fsubr
pushw
inc
ror
mov
dec
mov
pop
out
jmp
xchg
rcl
sub
fidivr
shl
sbb
jl
cmp
dec
(bad)
adc
mov
ffreep
pop
push
add
(bad)
loop
iret
lock
mov
push
cmp
ss
shl
popa
mov
std
sub
inc
lds
popf
pop
call
sbb
or
adc
jb
push
call
js
jecxz
xor
push
jmp
mov
fimul
shl
sti
xor
sub
cmc
loop
ja
scas
das
jo
cdq
sbb
rol
mov
push
sbb
out
inc
jl
ret
rep
jmp
inc
jmp
inc
dec
es
or
adc
jg
scas
fs
and
push
jmp
jnp
repz
mov
inc
inc
xchg
sub
in
lods
ja
mov
pop
mov
test
iret
scas
or
ror
in
add
inc
push
retf
mov
in
mov
or
shl
inc
sbb
mov
dec
rol
jle
fnstenv
jg
inc
add
cmp
xchg
cwde
adc
xchg
add
xor
and
mov
add
shl
xchg
mov
fcomp
imul
ds
dec
xor
imul
clc
mov
nop
mov
mov
fxch
pop
add
lahf
or
xor
lods
ja
push
shl
rcl
cwde
sub
in
or
push
xor
sbb
mov
mov
mov
push
ret
test
pop
xor
xor
jp
jmp
fnstsw
cmp
movs
jb
fcomp
sti
ja
push
inc
icebp
aad
xchg
loope
loopne
pop
jnp
(bad)
pop
mov
mov
std
pop
in
and
add
repz
aaa
dec
jbe
lock
int3
xchg
rcr
inc
jmp
jno
test
xor
pop
xor
pop
inc
adc
dec
ret
sub
xor
retf
repnz
repz
jns
pop
rcl
jl
leave
or
xor
shl
pop
inc
stc
add
mov
or
and
push
push
push
xchg
sbb
imul
(bad)
stc
icebp
pushf
mov
cmp
push
test
cmp
out
inc
jae
call
jmp
pop
mov
inc
mov
dec
and
aam
cmp
sbb
clc
push
jo
push
add
push
jo
(bad)
rcr
es
inc
jle
into
push
movs
mov
mov
and
push
(bad)
sti
imul
pop
inc
rcr
mov
lahf
fild
inc
iret
movs
jno
fimul
sub
mov
sbb
jne
bnd
and
fldenv
cmp
lock
ror
push
mov
jp
mov
xchg
ret
cmp
imul
xor
sahf
push
std
scas
lds
jo
call
and
push
push
mov
push
cs
mov
pusha
add
mov
xor
icebp
cmp
pop
loope
jne
cmp
inc
jmp
mov
test
je
mov
xchg
out
imul
fwait
and
and
rcl
test
sbb
outs
stos
xor
ins
rol
pop
pop
and
dec
movs
pop
in
bound
js
or
fild
and
(bad)
arpl
popa
and
scas
pop
mov
es
out
cmp
in
pop
cmp
jp
add
and
mov
push
daa
or
les
imul
jmp
enter
mov
mov
data16
cmps
mov
or
pop
add
outs
sub
cmps
fcomp
mov
out
sahf
xchg
mov
in
mov
stos
std
scas
jg
in
xor
daa
sar
xchg
mov
test
loopne
pop
lea
outs
add
mov
repnz
bound
jb
in
push
stos
mov
mov
arpl
popf
pop
and
(bad)
cs
mov
inc
jmp
clc
sub
fild
test
in
in
(bad)
xlat
add
jg
cmps
and
sbb
add
xchg
mov
cmp
hlt
or
imul
mov
scas
inc
mov
fimul
xchg
idiv
pop
fucomp
scas
mov
movs
push
sahf
mov
pusha
js
push
push
data16
sti
mov
nop
adc
mov
or
shl
pop
out
inc
push
test
das
(bad)
jns
jg
lds
inc
push
ins
sbb
jbe
outs
dec
scas
xchg
test
icebp
adc
stos
lock
out
inc
xchg
xchg
pop
test
pop
shr
stc
xchg
mov
int3
xor
xor
dec
xor
xor
ret
lds
sar
pushf
in
icebp
add
loope
adc
mov
mov
dec
outs
add
ja
imul
popa
adc
jb
mov
xlat
(bad)
pop
mov
mov
call
femms
mov
inc
retf
pop
stc
pop
push
jp
mov
cmps
xor
adc
daa
(bad)
leave
push
or
aam
out
jp
cs
fimul
test
mov
mov
mov
inc
in
mov
push
(bad)
xchg
cmp
jmp
imul
dec
addr16
sbb
test
add
dec
bsr
xor
in
and
lods
inc
or
repnz
cmp
loopne
xchg
stos
mov
mov
and
push
jp
clc
gs
cmp
mov
jg
call
out
sub
and
(bad)
jl
dec
fidivr
xor
fistp
mov
push
inc
jmp
sbb
jne
or
xor
mov
inc
inc
xchg
adc
div
nop
outs
enter
out
dec
push
xlat
mov
adc
push
aas
mov
aaa
jge
cmps
retf
(bad)
test
or
sub
in
jae
pop
xor
in
and
xor
arpl
lea
mov
push
jae
bound
sub
ins
xor
jl
sbb
and
jle
ins
xor
fcom
js
fwait
cmp
in
mov
pop
pusha
add
test
fisubr
not
inc
cmc
(bad)
push
mov
jo
mov
loopne
stos
in
inc
jmp
div
jp
aad
nop
clc
out
clc
and
inc
xlat
std
fnstcw
int3
fwait
jb
inc
int3
jge
pusha
hlt
add
pop
mov
ficom
and
inc
mov
mov
aam
sti
popw
ret
outs
xchg
(bad)
jmp
movs
pop
and
les
rcl
(bad)
push
stc
mov
xor
(bad)
dec
add
mov
add
xchg
fidivr
mov
popa
xor
fsub
jg
fst
das
and
sti
xchg
add
fstp
inc
add
aad
je
xchg
gs
loop
sub
sar
mov
push
lds
imul
sbb
inc
add
call
mov
shl
mov
shl
mov
add
(bad)
icebp
ret
leave
cmp
rcl
mov
jge
pusha
pop
out
cmp
or
xor
retf
inc
dec
(bad)
fsubr
mov
cmps
hlt
pop
inc
mov
push
(bad)
outs
and
call
lods
sub
push
dec
adc
mov
add
pop
js
jmp
ja
cmp
daa
add
dec
and
lods
mov
push
in
or
jmp
xor
cwde
leave
mov
je
push
shr
xchg
inc
mov
dec
inc
mov
ret
jl
jno
pop
daa
adc
sahf
out
call
push
or
ss
xchg
dec
int3
int
dec
adc
int3
and
loopne
mov
loop
adc
cdq
aad
sbb
sbb
pop
aas
cmp
adc
clc
add
fist
cmps
xor
mov
mov
or
out
push
mov
lock
mov
mov
xchg
mov
stos
mov
out
out
pop
xor
pop
sbb
adc
fs
adc
and
pop
test
pop
xchg
loope
(bad)
fcomp
sbb
or
mov
dec
jl
daa
lea
outs
cmp
out
icebp
pop
xor
sbb
ret
aaa
cdq
xchg
js
jp
cwde
xor
mov
mov
mov
movs
icebp
fmul
lods
mov
retf
fcom
or
jae
push
pop
inc
jle
movs
mov
mov
add
sbb
(bad)
fsub
push
inc
xchg
mov
fnstcw
lods
dec
movs
jl
fwait
jne
dec
mov
cmp
jbe
je
xor
cmc
push
popf
leave
in
mov
js
sbb
imul
test
lea
in
cmps
bound
jo
aaa
outs
push
mov
push
outs
xchg
fld
dec
pop
repz
mov
dec
imul
out
outs
sti
retf
fisub
jbe
ret
and
lods
rol
cli
ds
(bad)
imul
jno
sub
repnz
cmp
fst
dec
add
sub
and
popa
mov
idiv
sbb
mov
cmp
les
sub
xchg
mov
out
sub
add
xchg
adc
push
imul
scas
fwait
test
xchg
std
add
adc
or
or
xchg
pop
aam
mov
cmp
add
iret
in
(bad)
xor
mov
arpl
jge
shl
iret
adc
sbb
xchg
sub
neg
out
pop
mov
sar
or
loope
dec
push
and
adc
mov
outs
stos
enter
xlat
pop
mov
cmp
pop
xor
jl
(bad)
fucomp
xor
inc
mov
xchg
mov
jb
mov
inc
mov
fcmovnbe
cdq
xor
mov
sub
fldcw
dec
in
dec
and
pop
mov
mov
call
idiv
inc
sahf
mov
push
fwait
dec
add
add
adc
stos
pop
ja
dec
test
or
les
lods
jecxz
repz
mov
fs
jp
fidivr
or
mov
and
mov
xor
dec
push
mov
jecxz
nop
and
(bad)
dec
(bad)
std
ds
push
les
and
xchg
cdq
push
add
aad
push
jl
in
repz
pop
pop
jmp
xchg
push
stos
and
leave
cwde
jno
test
cmps
cdq
mov
scas
add
dec
(bad)
cmp
xchg
add
call
pop
dec
call
mov
call
mov
and
cmp
mov
popa
aas
mov
push
add
repz
xor
or
jmp
test
cmps
movs
and
mov
rcl
mov
jmp
hlt
jmp
sub
out
dec
pop
mov
out
xor
aas
xor
repz
(bad)
(bad)
lock
(bad)
sahf
mov
push
nop
daa
xchg
cmp
nop
sub
sahf
xchg
jle
test
push
mov
dec
sbb
jne
jmp
cli
adc
cli
neg
mov
mov
icebp
sbb
push
test
outs
jecxz
fwait
push
out
test
xchg
out
std
cmp
int
pop
mov
ret
adc
mov
dec
mov
adc
xchg
or
ins
test
or
ins
mov
push
sbb
or
lds
fsub
inc
loope
pop
cmp
push
repz
pop
pop
data16
dec
fwait
cmc
popa
mov
add
and
push
ds
pop
pop
fdivr
xor
dec
call
mov
mov
std
jl
ss
mov
retf
or
ss
or
mov
push
xor
mov
inc
mov
sahf
push
aas
lahf
jnp
sub
aam
fstp
mov
nop
and
mov
out
xchg
cmc
pop
sahf
xchg
rol
loop
ret
sub
mov
loopne
lea
push
jmp
or
aaa
loope
retf
or
es
pushf
lods
mov
je
push
push
push
pop
sbb
retf
ins
gs
inc
fidiv
push
xchg
fdivr
stc
xchg
or
push
and
mov
mov
stc
mov
add
or
(bad)
std
or
(bad)
fs
inc
jb
sbb
call
mov
dec
fisubr
lds
test
popa
cmps
sbb
bound
and
fsubr
aaa
jmp
(bad)
std
out
adc
push
call
push
dec
test
repz
(bad)
push
inc
nop
ins
test
call
test
or
dec
and
dec
inc
adc
jbe
nop
sti
and
add
imul
pop
into
jno
push
loopne
xor
cmp
adc
mov
je
scas
and
in
jmp
xchg
je
(bad)
dec
cli
sbb
addr16
in
add
shr
out
bound
dec
lods
adc
mov
jl
fwait
mov
ins
xchg
push
test
or
loope
pop
ins
les
or
xor
sbb
and
jno
mov
mov
xor
add
(bad)
adc
mov
repz
out
lods
mov
repnz
scas
inc
cmc
xor
dec
pop
push
js
push
cmp
push
pop
dec
mov
inc
aas
das
(bad)
jae
push
fdiv
and
adc
neg
xor
xchg
cld
(bad)
adc
ret
pop
push
inc
aad
xchg
sti
fldcw
jbe
inc
add
push
ret
xchg
imul
lds
and
xor
inc
into
sub
call
xlat
test
es
jnp
lods
jp
test
mov
dec
inc
sbb
mov
enter
push
jmp
leave
pop
addr16
xor
mov
cmp
cmps
test
sub
imul
lahf
cmc
adc
cwde
lods
in
push
inc
lods
adc
add
mov
jne
int
out
hlt
mov
test
mov
add
mov
(bad)
mov
jno
adc
xor
imul
cmps
fsubr
jecxz
and
repz
in
gs
loope
leave
cmc
ins
gs
enter
sub
mov
fcmovne
(bad)
fadd
and
stc
sti
cmp
inc
cmp
sbb
pop
push
movs
add
mov
and
sti
dec
mov
(bad)
fnstenv
push
out
push
mov
sub
sbb
adc
dec
dec
dec
dec
push
jae
cmp
rcl
repnz
not
jecxz
fild
mov
jge
cmps
pop
mov
jne
(bad)
mov
push
xchg
add
leave
pop
cli
push
jmp
pop
in
scas
jmp
adc
cmp
out
and
jo
pop
xlat
mov
test
jo
or
mov
aas
jle
arpl
test
push
rcr
jnp
fstp
rcr
int
and
push
stc
retf
mov
stos
mov
cmp
xor
pop
sbb
and
out
fstp
or
repz
mov
inc
and
cmc
push
enter
mov
xor
(bad)
addr16
bound
xchg
xchg
xchg
int
sbb
enter
ss
lea
adc
jo
sub
imul
ds
ins
add
push
dec
inc
push
je
in
ficomp
push
inc
push
sub
and
in
push
ins
pusha
bound
jecxz
add
add
push
cli
jne
jnp
arpl
dec
ja
cli
sti
pop
aad
leave
push
mov
das
or
cdq
test
push
jbe
(bad)
lods
in
inc
fs
pop
loop
adc
adc
shr
cmps
cdq
adc
retf
mov
mov
shl
pop
mov
sahf
adc
fs
or
inc
dec
add
dec
cmp
neg
leave
xchg
or
push
jecxz
dec
adc
pop
les
mov
fwait
add
inc
div
inc
call
ja
loopne
inc
cmp
pop
enter
pmulhuw
inc
(bad)
in
xlat
pop
loopne
add
ror
pop
ja
sahf
mov
sub
out
dec
aam
dec
loope
jg
pop
je
sub
aas
(bad)
enter
dec
lods
xchg
adc
mov
lock
lea
pusha
aam
xchg
data16
dec
mov
mov
jp
lock
enter
lods
jecxz
call
mov
jecxz
add
and
pop
pop
cmp
sahf
sbb
add
and
cmp
xor
stos
out
sbb
mov
xor
jno
out
push
pop
loop
pop
pop
mov
lea
enter
mov
daa
jae
pushf
fisub
iret
push
mov
adc
repz
ja
fnstenv
mov
fwait
fwait
jno
pushf
jmp
push
das
scas
xor
jmp
call
xchg
and
out
pop
fs
jl
jb
lods
ret
jle
dec
mov
push
mov
and
sbb
dec
inc
or
aam
cmp
scas
mov
cli
repz
mov
pop
fiadd
lahf
fnstcw
das
push
pushf
or
jp
sub
or
dec
rol
iret
bound
dec
sub
push
inc
cmps
mov
pusha
dec
inc
inc
test
jnp
mov
pop
icebp
cmp
dec
jmp
mov
(bad)
(bad)
mov
das
inc
jae
jno
push
movs
pushf
stc
push
stos
push
mov
push
(bad)
mov
push
mov
push
ret
push
adc
mov
icebp
inc
das
mov
retf
outs
(bad)
(bad)
aad
fstp
retf
jge
clc
stos
inc
xchg
push
xchg
popf
push
push
inc
mov
xchg
add
std
pop
cmps
fcmovne
mov
dec
in
out
and
outs
daa
mov
or
dec
mov
push
lahf
cld
jl
xor
mov
rol
outs
push
add
shr
repz
in
add
test
cmps
jmp
(bad)
pop
sbb
call
hlt
call
xor
lock
mov
mov
sub
rcl
dec
das
ins
fsubr
fidivr
shl
je
xor
(bad)
xchg
or
sub
fwait
pop
inc
dec
jg
fs
and
pop
mov
sar
movs
adc
inc
push
and
adc
sbb
xor
out
dec
popa
mov
nop
lods
mov
jo
fnsave
nop
ja
fdivr
mov
push
jge
popf
fs
movs
test
mov
cmp
jg
pusha
or
movs
lock
aam
mov
xor
xchg
mov
ins
mov
mov
pop
push
jl
cmp
or
mov
cld
inc
mov
dec
lds
jg
or
dec
out
mov
xchg
scas
in
pusha
hlt
pop
stos
or
ins
mov
xor
inc
iret
sub
retf
retf
lahf
mov
aad
repnz
adc
nop
jmp
sub
outs
mov
pop
xor
push
clc
int3
pop
mov
nop
nop
mov
ss
xor
pop
shl
ror
retf
xlat
(bad)
jmp
xchg
pop
enter
retf
add
add
(bad)
out
retf
aaa
mov
cmp
pop
push
jo
movs
cdq
lds
data16
mov
sub
add
add
stos
loop
imul
jb
mov
add
inc
data16
mov
add
or
ficomp
dec
pop
xorps
inc
sub
outs
out
sub
fs
ja
out
cmp
arpl
xchg
movs
pushf
cli
xor
(bad)
mov
aas
mov
jne
xchg
fs
pop
cmps
rep
aaa
aad
add
sbb
das
jecxz
inc
aam
dec
cld
jecxz
mul
mov
(bad)
push
(bad)
cs
adc
retf
pop
shr
movs
outs
into
jo
push
xchg
cmp
ror
ja
adc
aaa
leave
and
inc
push
rcl
enter
ins
shl
dec
(bad)
and
imul
shld
or
inc
adc
(bad)
fsubr
lods
(bad)
mov
mov
dec
or
or
nop
xchg
push
scas
gs
outs
push
imul
daa
mul
push
xchg
pop
call
and
jb
rcr
inc
in
inc
or
push
push
in
call
xor
int
cmp
aam
xor
jecxz
inc
or
sbb
dec
xor
sbb
mov
mov
retf
xor
mov
lods
mov
dec
jbe
cmp
cmps
xchg
hlt
jp
xchg
ins
cmc
imul
dec
xchg
push
jge
sub
and
pop
jae
mov
out
sbb
xchg
leave
push
imul
movs
sbb
add
sub
mov
sahf
bound
adc
xor
push
and
add
mov
ret
xlat
add
sub
or
into
loopne
push
clc
js
xchg
pop
push
pop
aas
push
jecxz
xchg
jle
arpl
mov
je
mov
cmp
mov
lahf
dec
cmp
pop
cs
lods
scas
mov
adc
inc
icebp
shr
stc
in
rcl
js
rol
jge
jb
push
xchg
in
dec
int3
mov
cmc
stc
adc
jmp
jmp
mov
and
in
push
fist
jmp
fdivr
xor
add
adc
mov
js
xchg
mov
dec
inc
mov
aam
mov
pop
jno
outs
cld
out
outs
xor
jp
mov
int
and
adc
cmp
xor
outs
mov
sub
test
jmp
or
add
sbb
sbb
mov
(bad)
in
and
clc
repnz
mov
add
pop
cmp
pop
(bad)
stos
(bad)
mov
pop
sbb
add
and
int
addr16
ret
add
mov
pusha
sbb
pop
ret
xor
xchg
in
jmp
add
mov
vmwrite
movs
retf
repz
(bad)
sbb
clc
and
adc
(bad)
cld
push
nop
mov
in
jb
or
adc
jae
arpl
test
sub
mov
pop
and
and
cdq
(bad)
pop
in
inc
test
out
mov
sahf
push
out
dec
retf
cmp
or
dec
inc
mov
hlt
hlt
mov
jno
loop
aaa
xor
push
mov
pop
popf
movs
fcomp
jl
push
fidivr
push
es
sbb
cld
retf
inc
xchg
push
xchg
jecxz
rol
xor
dec
js
pushf
cmp
adc
xor
ins
in
mov
push
test
mov
ficomp
das
mov
mov
leave
mov
add
push
mov
sti
stc
push
and
(bad)
xchg
xlat
aas
mov
fstp
cli
scas
dec
cmp
inc
mov
stos
in
jg
mov
push
cs
xor
loop
repnz
push
stc
cmp
push
pop
imul
jnp
xor
push
out
dec
nop
ret
gs
or
or
dec
push
fistp
daa
pop
jmp
sbb
or
jae
adc
je
mov
cmps
stc
mov
iret
pop
adc
xchg
lds
xchg
inc
pop
int
mov
addr16
enter
fcmovb
xchg
xor
and
(bad)
jl
and
dec
mov
leave
jno
aam
inc
jmp
enter
xlat
dec
test
bound
sub
sub
jp
adc
fild
lods
adc
xchg
mov
mov
cmps
pop
push
fidivr
xor
add
dec
sbb
js
das
stos
and
dec
ret
es
ins
les
add
test
mov
lock
leave
cmp
push
jbe
inc
les
mov
mov
push
stc
int3
adc
jbe
les
sahf
retf
mov
rcl
push
fs
xor
mov
je
xchg
jmp
(bad)
or
pushf
loopne
repz
lods
enter
retf
sub
mov
dec
repnz
lock
stc
inc
imul
rcr
pop
movs
mov
(bad)
je
sub
sbb
ret
call
add
imul
sub
add
fldz
hlt
mov
mov
cmp
sub
cwde
mov
loopne
leave
bound
fstp
pop
shl
mov
js
adc
pop
pop
in
sar
gs
jmp
cwde
sub
jb
mov
mov
sbb
scas
inc
xor
stos
jbe
cli
xchg
dec
fdiv
out
jmp
out
push
pop
movs
mov
inc
pop
push
mov
icebp
lods
add
int3
test
jo
xchg
inc
mov
push
pop
popa
or
cmp
adc
add
push
push
iret
fld
or
or
and
rcl
push
mov
mov
fs
mov
out
es
cmp
jno
xchg
mov
imul
lahf
aas
pop
or
pop
sahf
fadd
fst
iret
mov
xor
xchg
addr16
sahf
lock
pop
imul
sti
and
inc
ins
jne
xor
shl
push
xor
mov
xchg
dec
pop
mov
push
jo
daa
push
xlat
sbb
out
sub
add
(bad)
mov
pop
retf
cdq
add
mov
ds
inc
and
(bad)
sbb
jl
sub
inc
lods
enter
dec
js
pusha
inc
(bad)
mov
pop
cld
and
add
jne
out
inc
leave
push
xchg
jns
(bad)
cmp
xchg
sub
aaa
out
daa
clc
mov
and
stos
pop
push
jl
sbb
popa
mov
jb
jle
push
cmp
mov
jmp
iret
xchg
add
sub
inc
inc
ins
cmps
je
and
mov
int
dec
test
out
out
shr
sbb
neg
jns
mov
cmp
je
mov
cmp
mov
scas
loop
pop
test
push
fcmovb
jecxz
push
loop
ins
in
popf
mov
gs
arpl
push
sar
fs
(bad)
mov
ret
or
xchg
loope
or
out
addr16
dec
dec
or
cmp
xlat
mov
lods
ret
adc
out
xchg
daa
cdq
ret
pop
mov
aam
inc
adc
imul
pop
enter
sbb
ins
or
xor
xchg
sub
xor
jb
mov
jb
dec
mov
out
mov
bound
dec
loop
dec
jae
pop
xor
add
jmp
outs
fld
sbb
jle
mov
popa
ins
xchg
add
es
xor
gs
add
retf
inc
cmp
cld
push
mov
pop
mov
leave
je
psubw
fdiv
cmp
jno
pop
in
adc
jmp
mov
xor
dec
jle
cs
into
in
jl
mov
mov
cwde
test
aam
test
and
add
iret
(bad)
gs
jno
lahf
outs
add
ins
jge
sbb
xor
int3
cmp
cmps
push
mov
xor
inc
and
xor
popf
pop
xor
mov
adc
mov
sub
out
adc
sub
clc
ret
(bad)
sub
stos
into
sbb
sub
inc
mov
mov
cdq
shl
sbb
cmp
call
pop
in
or
push
pop
sub
cmp
cmps
push
mov
lods
pop
lahf
inc
lea
sub
sbb
cmp
ror
push
lea
inc
mov
push
add
test
fst
dec
adc
sbb
xor
and
ret
cmp
leave
inc
imul
sahf
into
add
(bad)
jecxz
addr16
cmps
(bad)
scas
(bad)
loope
mov
sub
arpl
pop
into
scas
fidivr
sahf
cli
push
sbb
push
jge
adc
or
fwait
push
adc
sbb
sar
dec
sub
es
loope
mov
adc
loop
(bad)
sub
jae
xlat
outs
mov
jnp
mov
imul
daa
test
fisub
mov
sbb
movs
sbb
xor
push
sub
xchg
pop
or
sti
push
mov
pop
in
out
xchg
addr16
mov
into
xchg
das
outs
xchg
les
jmp
pop
shl
sub
test
jbe
lock
jle
addr16
jmp
cmp
(bad)
mov
pop
out
lods
sub
cmc
inc
xor
(bad)
(bad)
fs
sub
jmpw
pop
scas
sub
cmp
imul
sti
fsubp
inc
sar
enter
mov
add
inc
cmps
fprem
addr16
xchg
pop
scas
xchg
ins
sar
fwait
pop
shr
jge
or
cld
sbb
in
inc
xchg
sbb
fs
scas
sbb
unpckhps
push
and
jne
inc
sub
push
adc
sub
cwde
icebp
loopne
adc
int
out
aaa
movs
xchg
cli
ss
call
mov
iret
dec
push
es
fidivr
clc
adc
cmp
mov
push
lea
imul
mov
pop
or
fcomp
sbb
daa
daa
sahf
and
mov
cli
jns
cli
inc
inc
out
div
retf
daa
setle
jbe
fisubr
mov
inc
into
jbe
xchg
nop
pop
mov
mov
sub
and
test
sbb
(bad)
and
popf
sbb
les
popf
add
push
and
mov
dec
jne
push
int
call
popf
int
rol
je
fsub
or
and
pop
and
ss
retf
sub
movs
ror
rol
dec
arpl
sbb
icebp
pop
mov
pop
js
ja
addr16
jle
(bad)
xor
fst
sbb
rcl
and
sub
pop
jg
mov
or
stos
cmp
dec
sbb
mov
ffreep
jo
rcr
std
dec
jo
dec
and
mov
hlt
ds
xor
adc
mov
lds
mov
(bad)
xchg
sub
call
mov
ss
call
fdiv
mov
lahf
mov
sub
sti
sbb
add
pop
mov
divps
inc
fisubr
aam
imul
mov
mov
pop
(bad)
mov
(bad)
sub
cmc
fcomp
mov
int
(bad)
movs
(bad)
mov
and
dec
cmc
mov
jp
jo
je
sbb
jnp
add
inc
ficomp
inc
pop
outs
xor
in
cmps
std
popa
pop
icebp
and
les
push
pusha
mov
imul
cmp
add
ins
js
call
mov
sub
pop
jmp
mov
push
call
sub
js
or
call
fdivr
cmp
cwde
mov
mov
int3
inc
push
add
and
jg
dec
retf
push
mov
jno
adc
jo
inc
in
push
test
push
pushf
pushf
mov
ja
mov
xor
sub
test
jge
cmps
jle
adc
jns
jmp
repz
sub
adc
adc
cmp
pop
add
push
pushw
sub
inc
push
pop
outs
push
adc
jmp
xchg
outs
icebp
sbb
mov
cld
jno
(bad)
mov
scas
xchg
jecxz
jl
mov
cs
cmp
mov
mov
add
adc
sub
mov
aaa
dec
xor
xchg
xor
ja
inc
(bad)
iret
sub
sub
jmp
cli
icebp
jae
fwait
xor
cmp
scas
test
cmc
test
mov
iret
pop
cmp
pop
out
sub
bound
inc
mov
pop
xor
leave
ins
lea
dec
nop
bound
and
sub
adc
in
push
shr
enter
add
stos
aaa
xchg
pop
fisttp
leave
ret
aaa
adc
jnp
fidiv
cwde
cdq
dec
pop
pop
fwait
inc
cmps
or
mov
ret
cmp
cwde
daa
call
movs
jbe
fisub
or
xchg
mov
pop
(bad)
out
xor
xchg
xchg
fs
daa
ja
and
add
fcom
fst
xor
rcl
sbb
or
mov
les
mov
call
adc
mov
xor
and
jp
cmps
popa
jecxz
lock
iret
jnp
lods
ins
lea
mov
mov
or
add
dec
faddp
cmc
outs
mov
mov
data16
xchg
jg
or
pop
dec
push
(bad)
out
add
cmp
bound
pop
mov
mov
xchg
add
mul
stos
fnstcw
fs
adc
movs
xor
mov
pop
xchg
popa
xchg
lods
mov
ds
ja
test
ss
mov
fnstcw
pop
test
jle
cmp
aad
or
cmc
pushf
pop
pushf
icebp
xor
push
out
inc
inc
jecxz
int
es
ds
and
cmp
mul
data16
pmaxub
stos
dec
sbb
in
mov
(bad)
sar
or
inc
neg
and
mov
mov
in
add
jmp
sub
or
addr16
sbb
es
jmp
mov
(bad)
in
arpl
add
sub
enter
mov
(bad)
xor
hlt
jo
inc
jb
popf
je
imul
shr
mov
clc
bound
push
in
cmp
sub
adc
xor
pop
scas
fsubr
inc
pop
lahf
(bad)
sbb
push
icebp
sbb
cs
and
cmp
mov
nop
mov
mov
or
xor
fist
ds
jo
cld
adc
inc
cwde
push
mov
sbb
push
xchg
cmp
out
jmp
scas
push
cmp
idiv
cdq
aam
sub
js
inc
cmp
mov
cmp
test
jbe
mov
in
repz
xor
nop
outs
out
arpl
xor
and
fs
pop
in
outs
inc
add
ds
push
dec
jne
or
int
ins
xor
into
push
fistp
sbb
mov
outs
and
rol
aad
aad
jmp
into
add
fdivr
push
retf
lock
ret
adc
add
mov
mov
out
ror
inc
pop
xchg
or
aas
inc
jmp
sub
sbb
outs
sub
mov
fsubr
mov
cmp
pop
fdivp
ficomp
push
scas
outs
scas
xchg
dec
sbb
cmp
retf
inc
jp
mov
jo
fdiv
jecxz
ja
sahf
es
xor
mov
jge
ds
mov
fiadd
xchg
rcr
cdq
loopne
cs
lods
sub
test
push
pop
cmp
leave
shr
int
jns
das
jl
imul
hlt
sub
mov
and
lea
ror
test
mov
mov
inc
sar
dec
push
xlat
out
cmp
inc
and
std
scas
cmp
stos
sbb
(bad)
scas
cmp
jae
aas
enter
push
shl
das
fmul
or
push
test
les
retf
arpl
adc
pop
je
jmp
out
mov
mov
ficom
dec
in
pop
mov
fdivr
jl
push
inc
in
mov
dec
mov
sbb
leave
fsub
xor
dec
jecxz
lods
jp
imul
jbe
loop
push
stos
add
je
add
or
jge
jbe
in
in
jb
(bad)
fistp
(bad)
call
leave
sahf
pop
clc
sbb
int
sbb
rcl
pusha
push
push
daa
jmp
js
in
stos
mov
fild
adc
rcl
cwde
jnp
fisub
sti
cmp
inc
mov
jae
dec
in
test
inc
cs
les
adc
aam
out
call
adc
inc
ja
push
arpl
(bad)
enter
pop
xchg
loopne
daa
mov
jge
or
test
ror
pop
sbb
out
mov
gs
or
xlat
out
xor
mov
mov
add
dec
out
cmp
js
test
shr
adc
test
adc
(bad)
in
push
pop
fidivr
and
ins
jbe
fbstp
sahf
cld
shr
daa
aas
outs
inc
es
xor
out
xchg
or
cmp
(bad)
mov
inc
out
sbb
(bad)
ss
test
jg
xchg
jns
mov
mov
std
mov
in
add
jnp
jmp
les
dec
jg
movs
jl
aam
xchg
or
cwde
movs
xor
adc
popf
dec
adc
and
mov
sbb
xlat
cld
std
mov
cmp
inc
push
pop
pop
jle
cmps
arpl
jge
test
pushf
xchg
xor
test
enter
ror
dec
and
adc
cmp
pop
inc
in
mov
mov
mov
add
push
mov
jp
lods
data16
movs
lods
je
lock
lahf
ja
sub
mov
dec
xchg
lods
cmp
cld
jge
sub
jb
test
mov
pop
(bad)
popf
movs
hlt
cld
push
add
aaa
or
pop
sub
and
iret
icebp
in
mov
adc
cmovbe
retf
repnz
jae
out
cmp
lahf
jg
cli
sar
mov
xor
or
aad
push
ss
jp
jmp
or
stc
movnti
add
movs
pop
push
push
pop
cmp
in
mov
pop
mov
and
adc
adc
fwait
rcl
clc
adc
dec
inc
cmc
not
cmp
jle
mov
push
popa
mov
mov
cmp
dec
sub
es
inc
ja
nop
sub
push
ja
cs
outs
and
xchg
repz
imul
jno
ins
int3
xchg
mov
push
sub
sbb
cdq
scas
stos
inc
sbb
inc
cmps
mov
jecxz
lock
aaa
pushf
stos
arpl
inc
mov
ficomp
xchg
or
call
sbb
sbb
mov
icebp
sub
push
scas
cmp
push
mov
cmp
repnz
ds
pop
jmp
daa
stos
add
into
ds
rcl
push
xor
add
and
icebp
xchg
cld
aaa
bound
arpl
mov
test
and
push
in
jmp
lahf
and
mov
push
adc
ins
or
adc
loop
mov
adc
pop
inc
or
ret
sbb
bound
jne
(bad)
push
mov
ret
add
xlat
rcl
mov
mov
sub
push
push
into
(bad)
cld
ja
pushf
jecxz
ret
dec
jp
sub
in
pop
mov
add
sbb
xor
call
cmc
sbb
mov
mov
inc
pusha
xor
aam
push
popa
jno
faddp
xor
lds
push
jne
sub
xchg
sbb
mov
mov
imul
retf
push
xchg
adc
repz
mov
dec
enter
or
push
jge
xor
jecxz
cmp
mov
mov
mov
loop
cmp
outs
jmp
xor
loope
fsub
btc
dec
sub
lods
hlt
adc
and
jp
out
cmps
pop
cmps
dec
ins
mov
xchg
rcr
push
inc
mov
inc
sub
jbe
push
xchg
pop
inc
in
sub
sbb
mov
loop
inc
push
mov
jae
push
sar
pop
loop
mov
inc
or
test
int
cdq
inc
jecxz
cmps
imul
mov
push
pop
cmp
mov
dec
fwait
pop
mov
jb
mov
xchg
dec
inc
xchg
cwde
inc
mov
test
xor
dec
test
(bad)
sahf
fdiv
iret
in
iret
cmp
sahf
and
pop
adc
sahf
pop
(bad)
(bad)
stc
sbb
cld
shl
cmps
mov
push
js
push
aas
std
cmp
cmp
test
xchg
enter
cdq
ret
add
call
bound
rol
std
cmp
pusha
lock
push
shr
pop
ins
pop
sub
adc
add
lods
jmpw
sbb
stos
dec
jb
les
xlat
loop
lods
mov
jb
test
cmps
push
adc
sbb
scas
sbb
gs
cmps
push
push
scas
dec
mov
test
call
popf
or
adc
lods
jne
out
ret
jbe
mov
push
mov
aaa
fnstenv
mov
repz
shr
iret
inc
inc
ret
ja
adc
lahf
push
xor
mov
test
sbb
xor
outs
ins
xlat
add
sbb
xor
xlat
lods
sbb
fnstsw
mov
ins
test
xor
icebp
sub
aad
leave
xlat
sbb
sub
mov
mov
mov
inc
outs
imul
ins
adc
cmps
mov
(bad)
mov
pop
mov
mov
inc
mov
scas
(bad)
xor
push
je
mov
fdecstp
cmps
fadd
inc
iret
loope
cs
cmp
xchg
lock
cli
sub
and
xor
jl
jns
sbb
das
push
jno
push
jnp
loopne
add
inc
je
and
jne
stos
fs
(bad)
fwait
dec
cli
pop
inc
inc
mov
outs
(bad)
jle
stos
cmp
push
sub
adc
or
push
sti
cmp
or
xchg
pop
fcomp
add
inc
outs
dec
dec
sub
loope
scas
mov
add
cmp
push
mov
mov
sbb
inc
jecxz
aas
lods
jecxz
dec
stc
xchg
push
pop
std
or
inc
jmp
xlat
inc
pop
mov
pop
lahf
cmp
and
cdq
or
mov
mov
sbb
outs
stc
inc
xchg
jb
fincstp
inc
das
pop
test
mov
xchg
bound
cmp
fwait
clc
loope
or
sub
pop
nop
fwait
dec
sbb
aas
hlt
sub
push
dec
sub
sub
in
(bad)
cld
dec
pop
xchg
out
cs
in
fist
and
mov
in
daa
push
cmp
jle
cmp
sar
add
movs
mov
mul
out
popa
mov
cdq
jns
xor
inc
add
pop
inc
mov
imul
pop
cmp
jno
aaa
push
cmp
mov
mov
mov
jp
jnp
xor
jl
scas
sahf
inc
and
cmp
adc
lds
and
cmp
stc
fs
hlt
jb
and
jge
jo
push
rol
push
(bad)
mov
sub
jo
data16
out
jmp
pop
cmp
cmp
jnp
pop
inc
clc
(bad)
cmp
test
mov
pop
scas
xor
out
frstor
cmp
pop
les
or
popf
fwait
movs
ins
inc
add
ret
shl
test
or
jbe
mov
je
adc
xchg
xor
cmp
mov
xor
xchg
lea
pushf
pop
mov
and
mov
aad
or
les
mov
jmp
jmp
mov
push
add
sti
mov
adc
stos
stos
or
aam
mov
rol
pmaxub
push
mov
inc
sahf
mov
cmc
(bad)
sub
push
aad
jp
fs
xor
(bad)
loope
outs
inc
jne
dec
mov
dec
or
add
jl
imul
mov
mov
xor
mov
or
(bad)
mov
jnp
pop
cdq
mov
mov
jmp
pusha
sub
mov
cld
sub
push
das
fwait
(bad)
xor
or
lods
pop
test
outs
(bad)
jmp
sub
jl
xchg
inc
and
enter
outs
(bad)
out
imul
data16
test
pop
sti
lahf
test
jnp
fild
xchg
inc
mov
ror
jmp
cs
dec
push
fisub
js
or
sbb
les
cli
xor
fwait
jl
xchg
mov
dec
(bad)
sbb
mov
not
rcr
mov
aad
mov
sbb
add
std
or
mov
xor
mov
mov
call
pop
pop
pusha
push
cmp
and
out
mov
(bad)
push
call
popa
and
push
imul
fnstcw
(bad)
inc
int3
(bad)
cmc
xor
daa
push
mov
lds
dec
es
dec
jne
cmp
test
or
push
pop
(bad)
mov
and
sub
mov
outs
jo
daa
ja
jmp
inc
hlt
push
pop
mov
mov
cld
cmps
sub
icebp
jmp
jmp
push
shl
jbe
adc
in
cmp
(bad)
nop
add
daa
cwde
fucomp
dec
dec
sub
repnz
add
leave
add
ja
aaa
push
dec
and
push
lods
dec
adc
loopne
pop
cmp
mov
scas
call
(bad)
leave
xchg
push
ins
sahf
pop
sub
dec
pusha
aad
and
mov
xor
cs
push
xchg
add
adc
ins
sbb
push
stc
mov
cld
dec
jmp
stos
aas
jbe
and
mov
add
mov
push
daa
push
movs
ins
cmp
or
std
dec
mov
or
lock
pushf
movs
jge
sub
inc
daa
mov
sbb
aas
pop
fisttp
pusha
jg
sub
dec
test
daa
nop
mov
lahf
sbb
xchg
cmovl
jl
xchg
sbb
(bad)
outs
lds
push
hlt
cdq
or
xchg
scas
sbb
into
push
push
gs
mov
mov
jp
jo
add
aas
in
adc
dec
mov
sub
popa
mov
test
mov
mov
dec
(bad)
fisub
adc
lahf
ins
outs
mov
xor
or
lahf
mov
stc
idiv
call
lock
mov
sbb
stos
mov
pusha
xor
adc
pusha
and
pop
cmp
mov
and
rcr
lock
mov
and
xchg
in
dec
js
dec
and
mov
xor
mov
jbe
sub
jbe
pop
scas
cmp
or
fild
int3
mov
or
add
push
data16
pop
lea
push
sar
leave
cmp
adc
pushf
je
sti
movs
sub
imul
jo
fbld
inc
imul
xor
in
dec
scas
sbb
lock
push
sbb
popf
sub
or
repz
js
pop
xor
(bad)
loop
je
dec
mov
call
ret
ret
push
or
ror
movs
add
shl
into
imul
fiadd
in
pop
mov
ds
pop
mov
pop
cli
pusha
enter
movs
pop
mov
xchg
pop
push
rcr
inc
(bad)
into
outs
mov
inc
pop
push
dec
jnp
arpl
mov
lahf
jg
add
(bad)
loopne
js
xor
icebp
imul
add
cmp
aad
push
cmp
inc
arpl
and
xor
adc
cwde
int3
xor
jo
std
inc
aad
pop
mov
icebp
test
mov
pop
test
cmp
sub
aad
es
inc
das
inc
add
xchg
xor
mov
idiv
inc
pop
ror
dec
test
fadd
addr16
jl
lock
cmp
test
adc
leave
add
or
or
int3
sub
pop
retf
out
dec
cmp
pop
add
fsub
ja
mov
outs
iret
imul
push
into
fmul
scas
popf
or
loope
jg
iret
adc
or
loopne
pop
pop
sub
pushf
dec
push
scas
out
and
pop
arpl
inc
push
dec
int
stos
push
(bad)
push
sub
outs
push
(bad)
fs
cmps
pop
enter
push
cs
test
ins
and
in
mov
add
sbb
(bad)
sti
and
or
call
mov
nop
mov
rcr
clc
scas
mov
jl
cmps
or
sahf
movs
ins
adc
in
pop
daa
sub
pusha
jmp
mov
adc
mov
adc
cdq
inc
repnz
jmp
jg
mov
sub
mov
xchg
mov
xchg
adc
or
repz
imul
cs
adc
mov
out
cmp
sbb
(bad)
retf
dec
jecxz
mov
aad
lds
inc
aaa
push
ret
imul
inc
mov
pop
jg
pushf
mov
ja
in
clc
shl
stos
jmp
mov
repnz
ret
jb
shl
in
(bad)
out
mov
mov
hlt
and
xor
xchg
jecxz
push
fwait
push
or
mov
add
xchg
idiv
fsubr
cmp
xchg
(bad)
adc
hlt
cmp
movs
xchg
mov
cmps
push
pushf
ins
add
adc
xor
(bad)
jmp
adc
out
pusha
push
xchg
cdq
ret
sbb
retf
out
aad
test
mov
or
xchg
aad
(bad)
in
or
sub
movs
(bad)
cmp
fwait
out
inc
in
mov
mov
sub
mov
cwde
add
gs
push
fs
in
pop
lea
unpckhps
cmp
pop
movs
mov
cmc
les
lods
pop
cmp
dec
clc
mov
jnp
jmp
sbb
outs
inc
xor
repnz
dec
dec
sbb
pop
std
call
lock
jle
adc
xchg
mov
sbb
pop
adc
fiadd
movs
or
add
int
sub
in
addr16
adc
lss
add
mov
cmc
(bad)
(bad)
mov
mov
gs
popa
sub
arpl
xor
hlt
cmp
or
mov
out
push
sub
mov
xchg
loopne
lds
imul
sub
idiv
inc
push
fnop
clc
call
add
inc
push
test
and
jne
adc
fcmove
inc
dec
xchg
jg
sub
cmc
inc
mov
dec
jbe
mov
inc
adc
sbb
clc
(bad)
jmp
push
pushf
pop
lods
or
mov
inc
mov
inc
push
push
mov
scas
movs
jne
lock
push
cwde
stos
jns
xor
cmps
jecxz
cmp
mov
xchg
movs
psubb
sub
daa
sub
aam
lods
outs
sub
xchg
mov
or
or
in
xchg
pop
cmps
push
call
add
retf
add
jecxz
push
jo
pop
dec
jge
sub
sar
sbb
lods
jp
jnp
sbb
pop
stos
add
stos
rol
call
pop
pusha
popf
lods
cdq
mov
lock
rcr
jg
leave
jbe
add
mov
mov
push
(bad)
push
fwait
std
ror
jb
call
cmp
xchg
xchg
popf
int
ror
movs
popf
xchg
out
aad
lea
addr16
push
shl
add
shr
sub
mov
repz
xor
dec
add
adc
loope
call
mov
xchg
(bad)
adc
jmp
jge
jnp
sbb
ss
icebp
clc
aaa
imul
mov
dec
inc
cdq
adc
lods
fmul
mov
(bad)
sti
pop
inc
and
or
sub
scas
iret
jecxz
cli
jl
mov
jle
pop
rol
cdq
cdq
mov
add
test
cmp
jge
lods
and
sub
add
nop
in
(bad)
js
cld
fwait
(bad)
daa
or
mov
and
mov
inc
stc
(bad)
cwde
ds
add
and
dec
adc
push
mov
cmp
push
xor
repz
mov
outs
loope
add
and
or
sar
mov
jle
popf
jl
(bad)
jnp
js
repnz
in
das
inc
and
and
and
stc
stos
jge
or
(bad)
sbb
shl
ficom
adc
fnstenv
mov
(bad)
jo
mov
nop
push
pop
sbb
cdq
pop
setbe
movs
mov
jns
repnz
adc
sar
sbb
pop
sbb
sub
sbb
jmp
xchg
jns
mov
lock
jle
outs
push
xor
into
ins
adc
cwde
cmps
mov
sbb
jnp
popf
sbb
dec
call
jp
loop
popf
mov
or
retf
dec
inc
(bad)
pop
jbe
sbb
xchg
mov
pop
push
iret
(bad)
cli
rol
fadd
jle
add
sbb
scas
sbb
and
shr
inc
mov
out
xchg
dec
fmul
les
gs
fsubp
mov
(bad)
bound
jnp
push
inc
push
cmp
inc
in
dec
mov
sub
pop
nop
lods
mov
sbb
push
jbe
cmp
into
aad
jmp
pusha
sahf
cmps
xor
mov
scas
pop
ss
pop
xor
xor
mov
jne
push
or
inc
jmp
nop
fiadd
jmp
and
pop
clc
fldenv
jg
fadd
jae
inc
jmp
icebp
scas
ins
sub
and
sbb
(bad)
mov
pusha
and
ss
into
jb
push
push
jmp
cmps
jmp
and
or
vpaddusb
in
mov
xchg
outs
xlat
jmp
mov
xchg
xchg
shr
pop
test
xor
or
fs
test
mov
aad
jns
adc
adc
stc
and
inc
sub
retf
outs
adc
pusha
push
xchg
push
jne
(bad)
mov
jle
repz
adc
bound
psubd
xchg
(bad)
movs
pusha
call
or
shl
rol
lahf
inc
out
ds
inc
push
repnz
xchg
retf
fs
test
adc
lock
dec
mov
inc
mov
or
outs
push
inc
push
popa
cmp
cwde
clc
sbb
mov
outs
pop
fbld
cmp
push
je
dec
mov
mov
aaa
lods
pop
mov
xor
sar
mov
ins
pushf
loope
push
arpl
inc
add
cmp
cld
in
dec
scas
mov
daa
and
jae
fdivr
std
sub
push
das
pop
jl
add
sbb
adc
ret
jl
push
mov
ss
stos
pop
jecxz
sbb
gs
push
push
xchg
int
cmp
or
sbb
pop
scas
or
mov
xor
mov
scas
bndstx
bnd
movs
or
and
cmps
scas
mov
xchg
data16
pop
(bad)
or
pop
out
ds
xor
cmp
push
inc
test
dec
ret
ja
hlt
jle
xchg
retf
call
cld
mov
fstp
push
vmptrld
cmp
push
xor
xor
in
push
mov
xchg
movs
(bad)
mov
js
aaa
adc
adc
sbb
push
push
and
ins
push
faddp
push
mov
jg
lahf
and
lahf
js
xchg
frstor
fmul
test
push
popf
gs
stos
repz
dec
js
adc
mov
hlt
test
outs
dec
xchg
les
ins
out
inc
dec
popw
xor
call
addr16
retf
lea
xchg
sub
sub
sub
iret
fbstp
(bad)
shr
loop
cwde
cmp
pop
mov
sar
inc
xor
movs
sti
pop
xchg
mov
scas
push
sbb
scas
popf
pop
adc
in
xor
mov
inc
mov
or
jbe
inc
out
mov
dec
adc
push
shl
jns
sub
jge
inc
mov
in
aas
repnz
ficom
mov
or
sub
retf
mov
or
sbb
and
repz
pop
add
mov
ret
adc
ins
loope
xor
shl
mov
xchg
aas
mov
fnsave
shl
push
cmp
icebp
jmp
sbb
sbb
bound
xchg
retf
sbb
mov
pop
aaa
int
sub
xchg
mov
push
ja
adc
pop
ror
sbb
lds
jne
mov
dec
xchg
sub
mov
shl
(bad)
and
loopne
inc
repnz
cmps
pop
sahf
in
mov
xchg
jae
ins
imul
mov
cld
push
add
mov
xor
or
es
ins
adc
ror
jle
jns
mov
jae
call
xchg
pushf
add
push
mov
pop
pop
call
mov
push
bound
and
fdiv
adc
pop
sub
mul
icebp
push
int
fcom
stos
ja
mov
div
mov
mov
push
enter
mov
and
sahf
ss
lahf
ror
and
sub
scas
iret
xor
push
enter
xchg
outs
das
mov
add
rcl
hlt
inc
gs
div
mov
cmp
jmp
push
xor
pop
in
xchg
pop
mov
daa
or
inc
fldlg2
or
cmp
mov
jl
jo
lahf
cmp
call
movs
loop
(bad)
je
cmps
ret
pop
je
adc
fisttp
pop
out
push
adc
add
xlat
clc
stc
stc
(bad)
hlt
in
aam
dec
jle
imul
cmp
add
sub
mov
add
pop
jle
xchg
sub
push
fld
add
cmp
out
into
adc
(bad)
sbb
and
jae
ja
stc
shl
daa
jmp
inc
mov
fisttp
or
mov
jmp
sub
loope
in
icebp
imul
jg
xchg
jmp
fistp
inc
jl
push
adc
fs
clc
es
dec
mov
and
inc
sub
and
cmp
push
nop
mov
sub
(bad)
fisttp
push
or
pop
and
mul
popf
aam
repz
adc
mov
lods
movs
cmp
lds
ror
sub
in
jbe
sbb
push
js
mov
gs
pusha
imul
retf
mov
ins
jbe
push
push
icebp
mov
lock
iret
or
push
scas
mov
arpl
pop
sbb
mov
pusha
jge
or
not
push
xchg
inc
cmc
mov
(bad)
and
push
push
add
cmps
sub
push
inc
fcom
jmp
sbb
imul
(bad)
test
dec
pop
js
(bad)
push
mov
movs
aam
xchg
and
sbb
in
fisttp
jp
xor
ins
xor
jecxz
mov
std
jmp
pop
add
repnz
adc
sbb
out
jge
cli
(bad)
pop
lea
outs
(bad)
cmp
mov
adc
enter
mov
cmp
mov
mov
mov
jl
scas
rol
inc
jge
sti
push
cmp
jecxz
dec
or
(bad)
push
arpl
sar
and
std
sbb
push
bound
mov
das
and
movs
mov
push
fndisi(8087
cwde
pop
jbe
adc
cs
test
stos
jecxz
inc
test
sahf
jg
in
rol
mov
dec
mov
xchg
retf
mov
lock
inc
sbb
lahf
xor
and
std
out
aaa
xchg
push
dec
in
sbb
jmp
dec
mov
imul
mov
dec
nop
jge
into
imul
(bad)
pop
add
jo
xchg
xlat
movs
add
cwde
(bad)
or
sbb
jg
sahf
pop
out
push
cmp
shl
sub
bound
cwde
xchg
out
push
mov
sbb
addr16
jns
leave
mov
fxch
adc
mov
inc
mov
mov
add
fs
(bad)
out
xchg
add
mov
jb
cmp
adc
clc
lods
and
retf
sbb
sub
mov
out
inc
and
or
loopne
jp
cmp
mov
popa
in
std
mov
add
cld
mov
and
lahf
push
int3
pop
out
shl
out
cmp
jle
sub
aad
mov
out
and
or
xchg
jge
pop
stos
jle
add
mov
fcomip
sbb
jmp
jecxz
push
es
loop
push
ret
enter
inc
ins
jb
push
jno
neg
movs
dec
push
sti
jecxz
jno
pop
mov
mov
sbb
xor
(bad)
pop
inc
mov
ins
push
dec
icebp
imul
cmps
movs
mov
pop
sbb
inc
test
mov
dec
daa
or
jl
cmp
sti
gs
gs
je
mov
xor
cmp
xchg
stos
sbb
inc
add
popa
pop
sbb
fisttp
fild
xor
dec
js
ja
fwait
icebp
loop
push
add
outs
ds
in
pop
test
int
or
vcvttpd2dq
or
inc
xchg
xchg
cmp
cmp
out
sbb
cmp
fwait
mov
ins
pop
rcl
push
push
rcl
outs
jle
call
in
mov
dec
mov
sbb
(bad)
inc
cmps
sub
out
fwait
sbb
push
icebp
mov
scas
jp
xor
mov
push
dec
sbb
popa
out
add
xchg
mov
mov
faddp
js
xchg
stos
mov
sub
or
jmp
xor
jb
bound
push
inc
(bad)
mov
jns
movs
shr
jmp
sbb
or
jae
pusha
inc
fidiv
lods
push
xor
sub
fnsave
js
xchg
cmps
or
fst
sbb
sub
test
(bad)
pushf
mov
bound
add
ret
sbb
pop
pop
add
inc
dec
push
mov
mov
xor
jns
and
inc
and
je
fcomp
in
cmp
push
inc
mov
xor
cmp
jns
add
icebp
xchg
mov
push
mov
push
outs
add
pop
mov
push
mov
addr16
push
push
push
stos
aam
xor
push
add
out
pop
and
retf
int
xchg
out
je
sbb
add
sbb
fs
pop
cmp
xchg
enter
repz
adc
xchg
nop
pop
cmc
fmul
add
retf
pop
jmp
xchg
jne
outs
in
jne
sbb
(bad)
mov
(bad)
mov
cs
aam
mov
or
push
inc
xor
sub
imul
xor
iret
movs
(bad)
adc
push
rcl
shl
adc
popa
xor
mov
(bad)
loopne
xchg
xchg
cdq
stos
mov
jb
lods
xlat
cmp
push
cmp
cmc
dec
cmp
adc
cmps
je
adc
xchg
inc
dec
clc
and
inc
xchg
loop
pop
mov
or
movs
imul
inc
aas
scas
movs
cmp
fnstcw
call
lahf
test
lock
stos
xchg
sar
mov
xchg
jne
in
and
mov
pop
add
std
or
push
int3
ss
push
shr
int
addr16
adc
or
xchg
mov
push
xchg
sub
aaa
jno
call
in
push
cmp
dec
fnstsw
cmp
idiv
sbb
test
test
dec
fs
pop
and
jp
arpl
jge
ja
into
int3
pop
mov
outs
pop
mov
xchg
push
rcl
mov
sahf
stos
fcom
es
fwait
in
js
push
pop
xchg
sub
scas
ds
sbb
daa
and
jae
mov
push
retf
mov
dec
popa
pop
push
pop
xchg
cs
sbb
mov
jmp
clc
cmps
xlat
in
fstp
jbe
inc
xor
sub
pop
and
sbb
push
gs
push
push
fst
repz
lds
push
sti
push
out
pop
add
ins
mov
inc
lea
mov
hlt
push
xor
xchg
fiadd
test
ins
mov
inc
aad
aaa
addr16
scas
fsubr
mov
dec
dec
call
or
ss
retf
inc
sahf
cli
pushf
cli
sbb
icebp
xor
cmp
lea
pop
pop
push
icebp
xchg
sub
mov
inc
aas
es
mov
jg
pop
or
sub
dec
pop
push
bound
and
push
cmp
and
jecxz
xor
jmp
inc
call
push
push
sbb
imul
mov
imul
pop
sbb
xchg
mov
fwait
push
jg
unpcklps
or
shl
fild
or
xor
cli
mov
fs
das
cld
(bad)
lds
mov
mov
test
push
es
scas
retf
pop
fmul
mov
mov
loop
mov
ret
inc
mov
sar
pop
and
js
sub
out
frstor
add
retf
call
pusha
dec
clc
ror
dec
mov
mov
mov
or
int3
call
dec
stos
mov
xchg
es
ds
cmp
daa
repnz
bound
fild
ret
push
sbb
retf
xchg
mov
fisub
es
std
dec
int
mov
nop
std
dec
xlat
scas
push
sub
(bad)
aas
lods
imul
icebp
sbb
pop
int3
pushf
ss
test
push
add
jbe
test
mov
dec
test
push
repnz
xchg
cwde
mov
push
aam
xchg
retf
or
adc
daa
sbb
xchg
(bad)
cmp
mov
push
idiv
scas
sub
leave
rcr
and
(bad)
loope
push
or
enter
ret
mov
inc
repz
daa
xor
push
add
ins
ds
stos
dec
(bad)
push
jle
and
out
sub
popf
movs
pop
lahf
stos
add
ret
add
xlat
sub
repnz
cmp
inc
sahf
ins
sub
cmp
sub
loopne
xchg
leave
ss
mov
and
in
leave
es
sbb
pop
push
adc
mov
jmp
out
fsubr
jne
mov
mov
add
test
arpl
and
aas
mov
aaa
jmp
inc
sar
imul
pop
fdiv
aad
std
mov
add
jns
push
mov
push
adc
push
dec
scas
mov
jecxz
je
scas
dec
sbb
and
jmp
cld
xor
out
stos
call
std
dec
dec
dec
or
in
rcl
inc
inc
popf
ins
sbb
into
jnp
lea
dec
mov
cmc
push
pop
imul
xchg
leave
movs
retf
cli
sbb
dec
sub
aad
pop
lea
inc
jnp
mov
out
imul
stc
or
sahf
ins
out
fdivr
mov
pop
xchg
sbb
mov
adc
mov
aaa
hlt
mov
repz
ins
mov
xlat
inc
inc
in
sub
and
ret
jne
std
scas
mov
inc
inc
push
push
jne
pop
scas
adc
cmp
or
nop
cmp
xchg
ja
sbb
je
data16
xor
pop
pop
daa
test
xchg
cdq
dec
xchg
cwde
rol
mov
or
jmp
add
dec
inc
jecxz
sbb
adc
pop
es
and
xchg
mov
mov
jle
push
jmp
jo
sahf
enter
xchg
xor
mov
fisub
xchg
sbb
mov
jmp
dec
dec
xor
mov
in
imul
retf
jl
adc
in
movs
cmp
enter
jne
xor
and
pop
push
cmp
xor
inc
scas
adc
int
dec
shr
int
dec
hlt
movs
pop
add
stos
or
movs
sub
mov
sub
test
fcom
jbe
aam
outs
mov
aad
test
jle
outs
stc
sub
stos
loope
pop
fdiv
jp
jle
and
sbb
or
pushf
jns
out
rcl
rcr
and
bound
and
pop
dec
scas
and
sub
mov
stos
sub
cmp
dec
movs
aad
fidivr
add
mov
shl
mov
icebp
ficomp
sub
and
dec
dec
mov
xchg
enter
sbb
nop
jnp
dec
and
dec
xchg
pop
xor
xor
es
push
pop
cld
jae
jmp
pop
and
pop
xchg
mov
(bad)
jl
and
mov
cmp
xchg
arpl
(bad)
scas
cmc
out
lods
inc
jg
mov
neg
fwait
leave
sub
mov
sub
sti
mov
mov
inc
test
sar
test
lods
lahf
jp
xchg
loopne
jl
stos
push
push
sub
dec
pop
aas
int3
mov
imul
or
nop
es
fiadd
adc
mov
outs
mov
ss
sbb
sub
into
and
mov
sub
(bad)
enter
push
inc
imul
push
es
(bad)
pushf
call
mov
bound
xor
push
repz
ret
mov
adc
cmps
jbe
pop
and
sub
mov
ret
(bad)
xor
pop
xor
fnstcw
int
fdivr
(bad)
cdq
and
fimul
xchg
fcmovnu
push
mov
sub
(bad)
aaa
test
sub
sbb
or
adc
loopne
in
push
jnp
loopne
out
ficomp
xor
out
hlt
lea
movq
idiv
std
nop
add
imul
inc
xchg
aaa
push
and
(bad)
popa
movs
mov
mov
cwde
div
int3
lods
int
pop
mov
pop
or
push
fisttp
shr
adc
sbb
inc
mov
ret
test
jp
out
xchg
shr
xor
hlt
movs
inc
jle
jmp
fld
test
sar
or
xchg
sbb
sub
inc
jb
(bad)
js
out
(bad)
sbb
mov
mov
std
je
(bad)
sbb
es
cmp
jmp
jne
mov
adc
inc
(bad)
sbb
test
ret
xor
mov
sbb
es
push
lds
jg
je
iret
jno
(bad)
inc
das
cmp
out
test
(bad)
fisttp
shl
push
out
xor
div
lahf
push
test
add
fs
mov
test
push
adc
xor
push
js
in
jmp
aas
push
inc
fdiv
(bad)
or
mov
clc
mov
and
sub
mov
xlat
mov
(bad)
sub
into
xchg
jp
cmp
cmp
sub
mov
mov
lock
cmc
inc
nop
gs
retf
pop
push
imul
push
mov
(bad)
pop
xchg
push
jecxz
fwait
push
mov
or
mov
movs
mov
and
push
cdq
push
in
scas
or
inc
xchg
sub
into
out
fisub
and
add
mov
dec
ds
js
fcmovbe
pop
and
sbb
and
iret
dec
int
popf
hlt
popf
mov
adc
xor
dec
imul
push
cwde
and
pop
repnz
mov
and
inc
frstor
push
imul
push
inc
jg
push
aad
cmps
mov
sbb
cmp
mov
shr
outs
xchg
xor
mov
xchg
mov
mov
scas
iret
in
dec
iret
int3
dec
fcomp
inc
add
xchg
ret
fst
pop
and
int3
jmp
fwait
push
and
lods
inc
sbb
adc
inc
jns
ret
in
adc
out
mov
or
test
popa
dec
inc
sbb
outs
xor
call
retf
pop
neg
gs
js
outs
in
jmp
cmp
nop
inc
int
cmp
in
or
loop
inc
and
in
adc
sahf
mov
nop
out
xor
hlt
lea
push
dec
push
push
int
lods
aad
xor
jmp
xor
cwde
ficomp
push
dec
mov
bnd
movs
ds
je
jae
fcmovbe
fidivr
push
test
xor
push
hlt
xchg
(bad)
push
push
pop
shr
add
xor
and
out
and
jecxz
mov
jnp
jge
or
outs
test
mov
arpl
or
sbb
outs
cmp
lock
mov
mov
test
dec
pop
into
dec
ja
pop
leave
push
out
ins
mov
mov
(bad)
cmc
test
and
retf
lock
fild
jmp
cli
sar
movs
stos
dec
pop
inc
add
mov
and
and
sub
jo
iret
shl
(bad)
iret
test
adc
sar
jmp
inc
enter
and
or
pusha
out
pop
outs
gs
xchg
in
pop
ret
adc
dec
push
dec
jmp
mov
and
pop
jns
js
loope
adc
stos
dec
pusha
adc
mov
stc
sbb
mov
jnp
sahf
lahf
stc
into
hlt
mov
pushf
call
fs
es
sub
in
leave
ret
out
pop
or
xchg
dec
add
clc
or
or
aad
and
fisubr
out
mov
mov
jbe
sbb
cmc
adc
in
jge
and
mov
adc
mov
out
cmp
cdq
push
(bad)
aad
data16
mov
or
ret
mov
jo
fldl2e
adc
push
xchg
sbb
clc
inc
xchg
adc
pop
pop
outs
jp
(bad)
js
enter
ss
jb
inc
scas
scas
sbb
fs
mov
pop
imul
rcl
mov
out
cdq
adc
aaa
mov
test
sbb
call
mov
stc
mov
jne
jno
inc
cld
fst
and
or
dec
imul
jmp
std
adc
cmp
std
dec
cli
(bad)
mov
iret
mov
xor
pop
movs
add
push
cmc
dec
jg
and
xchg
adc
out
cs
daa
ds
mov
bound
sbb
sbb
fdiv
out
adc
jg
jns
sahf
push
das
sbb
add
jmp
pop
inc
stos
mov
or
jmp
sahf
scas
add
cmps
cld
jp
mov
test
sbb
push
adc
mov
dec
outs
dec
sub
xchg
cdq
fiadd
jae
sbb
mov
xchg
cmp
jae
data16
mov
int3
inc
jmp
(bad)
and
dec
or
jb
or
(bad)
jbe
inc
add
push
out
(bad)
push
mov
sbb
fs
mov
stos
add
scas
mov
jp
scas
jge
leave
scas
add
mov
je
push
cs
sbb
xchg
sub
xor
xor
pop
sbb
fnstcw
stc
scas
add
adc
xchg
mov
stos
(bad)
cdq
imul
sub
xor
(bad)
push
fstp
and
stos
push
out
or
inc
test
cmp
jg
jle
nop
pop
int
or
dec
xchg
inc
xor
or
(bad)
ja
aaa
mov
push
fistp
das
or
sbb
jge
arpl
xchg
adc
jge
pop
shl
ret
dec
or
push
add
adc
inc
pop
out
add
push
cmp
outs
ins
shl
jecxz
bound
sbb
mov
mov
jge
pop
pop
fcmovu
dec
(bad)
out
jle
movs
out
sub
add
mov
into
jo
inc
and
mov
push
test
repz
inc
and
inc
int
leave
iret
push
inc
cmp
inc
outs
sbb
xchg
jae
cmp
sbb
push
pop
enter
retf
cmc
pushf
push
fcomp
cld
push
inc
mov
cmp
mov
int3
mov
cmp
pop
xor
cmp
sub
out
rcr
fild
and
inc
(bad)
mov
nop
(bad)
aam
fisttp
shl
out
push
aaa
mov
int3
gs
or
pop
pop
sub
lds
ss
into
mov
les
dec
xor
push
inc
cli
mov
push
pop
or
fld
dec
sub
loope
int3
mov
in
sbb
addr16
add
mov
js
sbb
test
sbb
jo
push
xor
cmp
lock
and
cld
add
popa
ss
scas
inc
addr16
mov
sti
popa
retf
retf
or
push
test
add
test
(bad)
mov
dec
xor
xchg
ins
retf
out
lods
jbe
loope
inc
xor
sti
ja
xor
jmp
out
mov
and
(bad)
les
aam
mov
sbb
es
shr
and
pop
add
xchg
cli
out
movs
enter
popa
dec
lods
push
movs
jl
sub
out
adc
repz
std
cmp
cmp
or
push
aam
std
adc
pop
mov
adc
daa
jnp
sbb
dec
imul
iret
daa
mov
mov
cmp
dec
(bad)
in
outs
stc
ror
mov
mov
ds
pop
inc
stos
dec
adc
inc
jecxz
data16
adc
sti
sbb
cmp
outs
stos
sbb
and
sbb
mov
jno
mov
mov
pop
in
test
cmp
mov
mov
daa
xchg
rcr
add
cmc
mov
jg
sbb
mov
jecxz
dec
les
add
push
repnz
jae
sahf
scas
mov
popf
sbb
outs
pop
ret
xchg
or
ret
adc
aas
jmp
fmul
stc
mov
xor
sub
push
mov
js
lahf
bound
mov
arpl
fidivr
rol
push
lods
cmp
push
sahf
mov
ret
std
test
icebp
mov
in
js
movs
jb
rcr
(bad)
in
push
inc
jg
inc
pop
cmps
adc
rol
in
clc
and
sub
into
sub
push
push
ret
sub
sub
cmps
sub
call
lods
xchg
mov
inc
ja
mov
ins
cmps
jb
xchg
inc
or
in
xor
aaa
test
mov
(bad)
scas
pushf
xor
test
sub
in
jae
loop
mov
push
push
repnz
in
dec
ficomp
jmp
int3
jl
push
mov
ret
pop
(bad)
aam
jl
xchg
push
ja
sti
clc
and
into
and
ret
aad
cmp
mov
mov
sbb
sbb
rcl
je
dec
out
or
mov
sub
push
sub
add
lds
sbb
movs
jg
stos
cmp
repz
mov
cmp
das
and
cmps
adc
mov
sbb
and
xchg
lods
(bad)
mov
bswap
pop
xchg
mov
or
xchg
mov
push
xor
es
and
test
push
movs
hlt
push
(bad)
mov
mov
rcr
inc
stos
stc
push
or
dec
lahf
ret
mov
ins
or
sbb
test
mov
mov
cmps
retf
or
sti
nop
cmps
pop
fsubp
bound
shl
or
lea
cli
pop
(bad)
mov
mov
mov
call
aad
fnstsw
in
sub
sahf
shl
stc
repnz
retf
mov
aam
cwde
sti
rcr
lds
xor
sbb
xor
sahf
shl
pop
xchg
test
jmp
mov
jo
(bad)
ja
and
add
cmp
aas
dec
jno
mov
lds
dec
jmp
rol
jle
aaa
out
neg
cld
je
mov
inc
outs
xor
fnstenv
mov
aad
scas
mov
mov
int3
fild
retf
mov
bound
add
cmp
push
push
mov
fldcw
cmps
xor
lds
pusha
les
push
rcr
and
sbb
or
cld
mov
lock
jae
add
test
mov
enter
ret
and
xchg
mov
push
ss
shl
sbb
stos
lsl
jnp
dec
rep
xchg
pop
fiadd
inc
loopne
pop
inc
psubusb
inc
jle
or
or
sub
xor
pop
jo
sbb
sbb
add
pop
xchg
dec
pop
xchg
enter
dec
daa
dec
xchg
xor
sti
add
inc
mov
enter
mov
mov
inc
icebp
aaa
js
outs
xchg
xor
outs
push
cmp
shr
call
jmp
mov
test
dec
mov
pop
std
jb
push
pop
outs
arpl
mov
xor
aam
movs
arpl
mov
mov
mov
addr16
lock
shr
push
cmps
loopne
jbe
lds
sub
out
cmp
arpl
inc
inc
xchg
outs
pushf
inc
jle
dec
xchg
push
mov
xchg
test
mov
mov
in
scas
ja
inc
(bad)
and
sbb
adc
scas
rcr
ret
out
mov
pop
in
ja
sub
inc
fdivr
cmc
sti
dec
fwait
clc
push
out
aam
cmp
lahf
aad
rol
mov
ret
mov
loope
add
fadd
mov
adc
fidivr
xchg
imul
add
inc
arpl
adc
mov
clc
out
mov
retf
xchg
bound
lods
inc
out
and
mov
jg
loope
fs
repnz
fsincos
sub
call
data16
or
fwait
sar
xor
(bad)
mov
fs
mov
mov
ret
adc
pop
cmp
add
xor
fs
stos
neg
and
cmps
mov
lock
mov
repz
jmp
mov
adc
cmp
jmp
je
mov
push
add
lds
xor
xor
or
push
jo
das
shl
dec
jno
sub
cmp
mov
outs
outs
inc
dec
jno
mov
enter
xor
imul
inc
push
retf
sar
nop
pop
sub
xchg
std
(bad)
ja
mov
lods
xor
fstp
jnp
aam
data16
inc
pop
inc
inc
(bad)
pop
adc
xor
mov
mov
std
cmp
aas
cmc
mov
ret
shl
inc
test
mov
pop
iret
push
arpl
or
sti
gs
icebp
ror
add
out
inc
lea
pop
push
cmp
daa
push
lahf
or
out
jmp
dec
sub
ret
out
push
gs
pop
jb
sbb
jae
adc
es
sub
mov
and
adc
out
pop
pop
xchg
inc
xchg
inc
scas
lock
dec
mov
dec
push
add
movs
daa
mov
stos
xchg
stos
inc
test
pslld
xor
jge
dec
sbb
and
shr
or
ins
(bad)
xor
inc
add
pop
jg
mov
pushf
(bad)
stc
test
imul
push
or
ja
mov
mov
retf
in
push
cs
pop
in
loope
sub
mov
imul
adc
cmp
ds
aas
jmp
jbe
sbb
ds
loope
(bad)
stc
cld
test
hlt
add
div
mov
jo
mov
es
push
push
hlt
ins
jge
retf
neg
scas
inc
and
inc
xchg
test
ins
mov
fdivp
push
pop
xchg
dec
pushf
pop
pop
mov
xchg
jmp
jno
and
das
xor
and
pushf
and
or
es
xor
adc
scas
in
jp
lods
fwait
pop
aam
fnsave
jg
shl
call
sar
loope
fcmovnu
xor
push
inc
ja
pop
xor
cmps
fs
dec
cwde
pusha
imul
loope
add
cmc
mov
xchg
ds
jmp
pop
test
cmp
outs
adc
rcr
inc
(bad)
mov
sti
inc
add
mov
daa
or
mov
and
movs
adc
mov
rol
push
sbb
cmp
loop
scas
fsubr
int3
out
xchg
loopne
ja
push
jno
gs
in
mov
dec
xchg
(bad)
ss
dec
dec
cmp
in
mov
sti
cwde
dec
mov
inc
movs
daa
and
xchg
hlt
pop
aam
scas
es
bound
repnz
in
js
cmp
adc
or
js
outs
imul
jae
mov
scas
nop
fcom
stos
out
jp
arpl
dec
cmp
(bad)
sub
mov
or
test
pop
pop
jle
push
shr
sbb
outs
lahf
lahf
cmps
inc
and
push
jb
mov
mov
push
and
repnz
dec
aam
inc
inc
arpl
jno
fisubr
std
rcr
ss
jge
cmp
dec
fldenv
retf
xor
jge
and
cmp
or
adc
dec
jno
call
daa
sbb
xor
js
xor
cmp
lods
jp
movs
popa
(bad)
fild
pop
cmc
or
add
shr
add
jg
pop
push
arpl
inc
mov
stos
jno
fcom
jno
mov
xor
or
cli
cmps
loope
dec
pop
xlat
aas
mov
xor
jle
cmps
js
add
(bad)
dec
popa
shl
je
xchg
jg
xchg
daa
movs
loope
aas
popa
xlat
jb
jbe
imul
push
dec
test
ins
add
and
or
shl
and
loopne
std
lods
xchg
pop
xchg
mov
test
(bad)
mov
mov
test
ja
pusha
adc
mov
cs
pop
mov
jmp
mov
push
leave
shl
or
pop
les
dec
mov
adc
sar
pop
or
icebp
sub
loope
pop
cmp
and
pop
into
nop
sbb
ss
jbe
xchg
stc
inc
add
push
inc
adc
push
ror
mov
cmc
pop
push
or
xchg
add
jmp
ret
add
inc
js
mov
xor
jmp
push
mov
neg
out
stc
cmp
xchg
sbb
out
dec
(bad)
rol
imul
(bad)
imul
mov
push
ins
test
dec
(bad)
mov
xchg
iret
dec
xchg
dec
(bad)
xchg
jmp
cmp
sub
jmp
cdq
adc
push
and
sbb
fldenv
push
mov
xchg
add
or
js
push
imul
xor
adc
push
test
sbb
lods
leave
mov
ins
sub
pop
int
fnstsw
addr16
fcomp
stos
jle
lahf
pop
and
jae
or
jl
(bad)
push
repnz
mov
jne
out
xor
cmps
cli
mov
mov
fs
div
xchg
in
cmp
pop
ins
jmp
scas
mov
push
jecxz
xor
jmp
aaa
pop
jl
sbb
je
jg
mov
pop
pop
fadd
loop
sbb
adc
(bad)
sub
test
sub
loope
cmps
xor
mov
in
xchg
push
test
pop
jo
and
test
xor
call
jae
ror
sub
imul
in
es
xor
xchg
cwde
iret
retf
scas
mov
pop
xor
les
sbb
jnp
fldenv
mov
scas
gs
and
aas
mov
cmps
add
adc
fidivr
rcr
loopne
sub
and
pop
cmc
lods
fmulp
pop
clc
add
scas
imul
xchg
sbb
jl
lds
xchg
mov
jbe
or
jecxz
bound
jne
push
jae
dec
adc
jo
jns
psubw
cli
mov
sub
(bad)
sub
mov
jo
adc
or
imul
mov
xchg
(bad)
mov
leave
add
and
and
ret
mov
test
pop
mov
xor
sbb
xchg
mov
or
stc
cmp
push
loop
sub
ret
push
mov
mov
outs
add
cs
fcmovnbe
inc
lds
pop
inc
cmps
stos
pop
ret
test
pop
fs
and
pop
cmp
add
sahf
retf
movs
pop
mov
lds
sti
xchg
fs
std
ins
and
clc
sub
pop
rcr
pusha
add
or
mov
clc
stc
mov
and
imul
jo
jae
fcomp
fwait
loopne
jne
xchg
push
adc
jge
aam
push
repnz
jb
dec
sbb
cmc
jmp
pop
jge
inc
cmp
xchg
fmul
and
imul
inc
inc
test
xor
add
jle
sbb
sbb
arpl
ins
retf
mov
mov
call
lods
aas
sub
addr16
clc
mov
fiadd
mov
cmps
push
adc
out
shl
rcr
hlt
push
out
inc
cli
test
sub
lock
nop
or
fsub
inc
mov
sbb
lods
jl
(bad)
sti
or
and
xor
pop
dec
cmp
ja
stc
or
mov
add
cmps
fcomp
pusha
push
or
xchg
jmp
nop
or
sub
push
pop
jge
sub
push
outs
pop
lahf
in
xor
or
(bad)
cmp
icebp
jge
sub
nop
adc
adc
mov
jno
(bad)
stos
lea
jo
out
je
(bad)
imul
hlt
xor
das
xchg
movs
sbb
or
jnp
xchg
fdiv
nop
ret
(bad)
mov
inc
mov
jge
lea
or
mov
fisub
mov
push
adc
ja
js
stc
ja
or
js
(bad)
shl
fsub
cdq
dec
cmp
fs
or
inc
les
xchg
and
jo
jp
jnp
(bad)
shr
add
jmp
call
cmp
(bad)
sub
inc
enter
cmps
stos
cmp
repz
mov
inc
dec
push
pop
sub
lea
xchg
imul
frstor
cmp
and
popf
pop
push
cld
jmp
inc
jmp
sbb
inc
(bad)
sbb
lea
adc
sbb
pop
dec
pop
sub
sbb
bound
inc
ficom
shl
sbb
icebp
retf
pop
xor
sbb
in
ret
ret
test
fidivr
xchg
mov
iret
adc
fst
dec
movs
dec
sub
in
test
jae
scas
mov
or
repnz
xchg
aas
jae
jecxz
cwde
in
rcr
test
xor
jecxz
loop
mov
mov
popf
scas
push
push
jns
push
inc
cmp
pop
push
les
inc
dec
add
rol
ja
les
pop
(bad)
mov
hlt
mov
into
outs
or
push
std
lods
(bad)
sbb
or
push
push
xchg
mov
adc
dec
sar
pop
(bad)
adc
pushw
sbb
inc
pop
mov
in
data16
and
xlat
add
dec
add
lock
shl
pop
mov
aaa
aad
lahf
pop
cdq
dec
xor
mov
sub
pushf
mov
add
sub
(bad)
cld
and
pop
loopne
loope
pop
mov
push
push
push
fisubr
cdq
jl
pop
pop
fucomp
cmp
lea
cs
mov
mov
leave
xchg
mov
aad
mov
and
push
mov
scas
dec
jmp
std
(bad)
test
or
adc
inc
adc
cs
xchg
pop
jl
and
(bad)
jns
or
call
data16
outs
(bad)
xchg
push
mov
loop
movs
ins
mov
mov
fisttp
push
ret
xor
ror
push
sub
fsubr
inc
(bad)
jmp
(bad)
inc
sbb
(bad)
ds
out
jno
ins
(bad)
clc
clc
sbb
pop
pushf
pushf
loope
mov
aad
inc
mov
scas
adc
and
dec
test
mov
mov
or
lock
(bad)
and
xchg
aad
fwait
dec
jb
bound
adc
push
mov
scas
lds
xchg
(bad)
xchg
sahf
cmp
and
pop
cwde
imul
popf
out
movs
mov
xchg
adc
(bad)
jg
cmp
pop
es
rcpps
sbb
push
mov
xor
mov
mov
retf
int
push
test
push
cmps
call
add
jb
mov
and
test
outs
stc
adc
fist
pop
inc
mov
pop
sti
and
jle
jle
mov
cmp
arpl
jnp
(bad)
pop
iret
push
lods
stos
in
rcr
push
xchg
sub
xchg
cmp
mov
test
xchg
retf
shl
retf
jbe
dec
aaa
sti
fidiv
mov
cmp
shr
cld
sbb
or
bound
sbb
fld
es
test
hlt
scas
out
jmp
fsubr
je
lods
cmp
imul
mov
retf
cmp
(bad)
icebp
push
arpl
jne
xor
or
ror
gs
push
add
movs
xor
ss
addr16
lahf
mov
pop
shl
add
sub
scas
dec
or
and
sbb
or
push
lea
mov
iret
mov
xchg
lds
dec
iret
xor
popa
repnz
(bad)
imul
cmp
aas
jmp
or
ret
mov
cmp
stos
cwd
push
in
sbb
(bad)
push
push
loope
pop
movs
lods
aaa
call
push
jge
fs
inc
inc
in
pop
mov
push
aam
mov
push
retf
cmp
add
push
jg
or
fwait
jmp
add
mov
dec
addr16
and
out
adc
retf
xchg
int3
cmc
inc
adc
and
adc
int
into
dec
jnp
pop
adc
(bad)
data16
les
ds
dec
dec
add
sbb
sub
retf
push
inc
fisub
sub
mov
push
add
or
xchg
outs
rcl
icebp
fs
dec
sti
cld
inc
sahf
rcr
dec
mov
and
and
xlat
jo
xchg
xchg
pop
mov
and
or
jae
sub
add
inc
push
test
popa
xor
in
fisub
gs
xor
test
xlat
dec
adc
ins
sahf
dec
mov
iret
mov
cmp
dec
dec
adc
pop
jns
lahf
fucom
inc
lods
jns
inc
and
or
popa
adc
daa
faddp
in
xor
xchg
sbb
(bad)
lock
jmp
fnstsw
das
rcr
mov
retf
mov
fisttp
aam
cli
cmp
lods
mov
sbb
dec
(bad)
adc
fwait
push
pushf
enter
jb
push
xchg
add
add
es
fwait
cld
lods
cmp
scas
push
sti
imul
inc
mov
les
sub
fwait
and
push
pop
loop
imul
gs
pop
mov
mov
mov
stc
test
mov
stc
inc
cmps
dec
fimul
clc
push
sub
mov
adc
data16
aam
inc
outs
jb
(bad)
jmp
mov
adc
sub
cmp
sbb
push
dec
jmp
cli
cmc
xor
cmp
jge
mov
push
call
jnp
mov
mov
inc
aas
cmp
push
xlat
cdq
das
pushf
pop
pop
(bad)
repz
test
(bad)
ds
fild
retf
mov
pushf
(bad)
jbe
push
fistp
jmp
jecxz
sbb
jbe
call
stos
(bad)
sbb
(bad)
fdivr
sbb
xchg
sahf
jnp
in
push
fldcw
mov
gs
dec
xor
and
ret
jne
cmp
lds
retf
sbb
popf
fs
inc
dec
pop
push
es
push
pop
xchg
leave
inc
out
pop
mov
pushf
repz
push
jecxz
cmp
mov
call
test
fmul
test
xchg
(bad)
sbb
imul
mov
pop
scas
inc
(bad)
ins
mov
cmp
neg
int3
inc
pop
(bad)
and
int
pop
imul
mov
or
jge
inc
cmp
jmp
cs
sbb
cmp
stc
or
js
(bad)
call
mov
jle
push
mov
popa
out
fld
jnp
scas
(bad)
adc
cmp
mov
lods
(bad)
fdivr
pop
mov
int3
xchg
fmul
call
aam
and
jle
add
xchg
or
test
or
pop
clc
(bad)
loopne
jl
jb
inc
add
(bad)
jmp
push
xchg
loop
and
test
inc
sub
jl
mov
adc
adc
test
dec
cli
mov
adc
mov
hlt
dec
sbb
xchg
push
jmp
and
dec
add
in
stc
inc
test
dec
test
int3
xchg
xor
push
sub
mov
(bad)
leave
inc
add
cmc
mov
lahf
inc
inc
repnz
cli
inc
or
inc
cli
sbb
xor
loopne
push
jnp
inc
jae
(bad)
call
stos
adc
in
adc
repz
mov
sbb
aad
jns
es
push
sub
test
pushf
xlat
or
pop
pop
mov
xor
inc
shl
push
push
sbb
add
xchg
retf
movs
adc
and
ss
(bad)
mov
je
sbb
xchg
ss
jno
aam
ja
or
cmp
outs
mov
xchg
aas
pop
out
jmp
cmp
push
dec
pop
jae
loope
add
xlat
and
imul
push
inc
imul
into
icebp
fidivr
gs
jl
(bad)
jno
mov
adc
mov
mov
jmp
cmps
push
sti
test
cmp
jne
imul
mov
loop
je
sar
jae
sub
movs
mov
sbb
sub
add
xor
(bad)
cmp
test
dec
popa
adc
ds
jecxz
and
add
cmp
jp
cmps
test
fmul
nop
adc
push
enter
pop
fiadd
pop
cwde
sbb
dec
xlat
(bad)
call
movs
xchg
mov
xlat
pop
cwde
and
dec
dec
sub
cmp
sbb
rcl
nop
mov
xlat
lahf
loope
retf
lods
loop
mov
out
(bad)
fwait
imul
inc
mov
clc
int3
les
inc
push
jne
add
fwait
mov
adc
loope
push
sbb
mov
mov
scas
mov
sub
(bad)
out
in
or
outs
test
fdivr
pop
and
adc
pop
pop
icebp
bound
inc
cmp
or
out
in
repnz
adc
iret
dec
add
jle
movs
enter
out
dec
sbb
cwde
mov
iret
dec
sbb
movs
or
push
add
jne
retf
dec
shl
pmulhw
sub
cdq
dec
call
inc
mov
push
add
into
leave
adc
imul
fwait
sub
lea
sub
stos
sub
mov
pop
dec
retf
aas
push
imul
mov
(bad)
leave
xor
test
pop
je
or
(bad)
in
js
inc
mov
(bad)
cmp
imul
mov
xor
fidivr
pop
push
ja
mov
dec
push
sbb
cmps
sbb
js
mov
ja
pop
cdq
xor
stc
sbb
mov
popf
cmp
data16
test
pop
push
shl
pusha
push
jp
mov
test
add
repnz
in
pushf
sub
sar
xchg
cmps
dec
or
loopne
out
xor
dec
inc
xchg
ins
and
js
inc
fdivr
xchg
xor
(bad)
ins
jp
inc
mov
in
jg
arpl
sbb
jecxz
fidiv
inc
xchg
cmp
dec
cmp
sti
int
sbb
outs
mov
jle
xor
pushf
das
inc
pop
xor
shr
mov
push
cmp
push
mov
cmp
mov
jge
fadd
dec
int3
(bad)
xchg
push
sbb
movs
mov
xor
mov
rcr
mov
inc
bound
pop
pop
lahf
mov
outs
xchg
dec
fs
ds
or
icebp
in
jno
mov
dec
imul
loop
pop
sti
sbb
sub
adc
sti
xchg
push
(bad)
sub
add
sub
inc
in
call
xor
cmps
inc
popf
push
bound
stos
addr16
and
test
xor
cmp
push
daa
inc
aas
inc
js
jp
loop
and
repz
out
mov
sbb
imul
test
xchg
in
arpl
jl
pop
add
repz
fwait
pop
or
mov
popf
and
(bad)
call
test
adc
repnz
out
cmp
popf
sbb
xchg
push
xchg
pop
jnp
adc
jb
xchg
xchg
pop
inc
dec
adc
push
add
dec
adc
mov
pop
cmp
or
mov
sub
pop
xchg
cmp
icebp
pop
and
adc
xchg
jle
test
dec
imul
add
cld
add
dec
addr16
mov
add
int3
xchg
sbb
jbe
pop
in
mov
sub
add
out
mov
xor
test
addr16
dec
xor
mov
pusha
shufps
pop
cmps
mov
pop
pusha
mov
jno
rcr
fwait
pop
push
xor
sahf
adc
pop
es
test
mov
movs
repz
aas
cmp
or
(bad)
stc
cs
mov
xchg
and
or
mov
shl
scas
rcl
dec
cmps
jno
xchg
gs
mov
cmp
out
enter
or
popa
mov
inc
jmp
push
icebp
jg
fbld
adc
mov
stc
xchg
dec
push
xchg
pop
retf
in
pop
ret
push
movs
ret
shr
adc
adc
xor
sub
outs
sbb
bound
mov
or
add
addr16
jle
jne
shr
repnz
mov
imul
addr16
lds
push
daa
sbb
and
mov
dec
inc
pop
(bad)
cmp
mov
ss
pop
inc
retf
sub
mov
jbe
mov
cmp
(bad)
ins
ins
(bad)
xchg
retf
(bad)
and
pop
cmp
mov
inc
mov
fist
iret
add
rcl
xor
rcl
inc
jle
pop
inc
cmp
and
into
push
mov
and
ins
out
aaa
add
mov
mov
repnz
adc
adc
fsub
in
sub
jle
pop
adc
rcr
push
fld
in
and
retf
add
cmp
(bad)
(bad)
push
ja
inc
sar
fisttp
xor
icebp
mov
bound
add
push
jb
dec
push
mov
lods
in
jg
enterw
xor
stos
pop
or
jle
icebp
fstp
or
cmps
or
(bad)
sub
inc
mov
dec
mov
push
inc
mov
push
xor
fsubr
inc
out
push
mov
dec
test
sahf
repz
sbb
cmp
push
pop
push
loopne
out
and
stos
mov
retf
sbb
mov
les
movs
mov
and
jmp
test
jp
push
aaa
test
test
jnp
aam
je
in
loope
std
xchg
out
lds
jb
data16
ins
lods
mov
add
fldenv
inc
lds
jecxz
dec
cwde
(bad)
dec
loopne
adc
icebp
ja
fld
int
jnp
adc
pop
add
scas
cli
lock
add
inc
stc
dec
and
rcl
es
inc
loopne
pop
das
mov
xchg
mov
ja
ret
cmp
jmp
jnp
xchg
adc
aas
push
push
xlat
push
or
jecxz
adc
add
or
push
xor
xlat
(bad)
movs
sbb
xor
pop
and
push
pop
nop
cmps
adc
mov
push
xlat
push
or
pushf
shl
jo
xlat
es
xchg
mov
retf
out
idiv
in
pop
cmp
cmc
xor
adc
cli
lea
je
pop
inc
test
leave
inc
push
pop
arpl
out
jecxz
jmp
int
retf
sbb
fidiv
(bad)
jl
and
dec
fmul
adc
ror
or
mov
bound
shr
cld
or
data16
jge
xchg
mov
cmp
retf
adc
outs
dec
jno
adc
cmp
imul
pop
scas
test
mov
repz
mov
aam
jbe
mov
ror
add
fwait
outs
(bad)
jmp
mov
xchg
or
and
mov
jmp
sar
lea
stc
mov
fcomp
jmp
sbb
ror
test
loopne
or
add
call
inc
jecxz
ds
jnp
lahf
and
frstor
std
(bad)
(bad)
mov
or
add
push
cli
test
pop
jae
gs
enter
nop
xor
adc
jne
xor
jmp
in
mov
cmp
pop
jge
xchg
pop
adc
jnp
out
shl
lods
ins
add
push
and
adc
into
loopne
xchg
xchg
mov
push
call
sti
xor
add
cmp
in
sbb
jge
pop
xor
inc
or
int
fsub
jno
push
push
push
out
inc
mov
jae
int3
inc
sub
adc
adc
shl
dec
lods
mov
cs
sbb
rol
jle
clc
xor
js
cwde
mov
inc
ins
shl
cli
jmp
xor
mov
movs
lock
pushf
(bad)
jnp
cli
aas
int3
sbb
push
sub
int3
ret
sbb
xor
stos
inc
mov
out
mov
push
and
nop
imul
sub
jo
add
es
ss
xlat
das
cmp
hlt
xchg
dec
repz
and
and
cmovge
inc
add
fstp
push
jae
stc
push
xor
aaa
daa
cmp
sub
dec
cmp
pop
cld
and
aaa
and
add
jno
arpl
push
jnp
jl
inc
je
stc
cmc
push
xchg
(bad)
xchg
and
outs
fst
cmp
fnstenv
push
xor
sbb
xchg
cmp
sub
mov
sub
mov
mov
movs
jmp
xchg
mov
je
mov
sar
fmul
mov
sub
call
mov
leave
cs
add
popa
movs
adc
mov
dec
fsubr
(bad)
mov
mov
xchg
ds
jb
adc
inc
ficom
outs
xor
je
mov
(bad)
popa
add
mov
or
ss
pop
sbb
or
inc
arpl
adc
sbb
fs
rcr
(bad)
jmp
sub
(bad)
or
xor
shl
jnp
add
imul
imul
sbb
daa
pusha
stc
ins
movs
out
fdiv
add
mov
test
test
sbb
adc
xchg
jo
lea
push
mov
mov
ins
cmp
sub
or
repz
fidivr
pop
inc
sub
add
call
cwde
cld
sub
jl
pop
in
(bad)
sahf
loope
xchg
xor
aam
push
mov
mov
lea
(bad)
mov
sub
cld
adc
lock
pusha
mov
or
in
push
ficomp
pop
data16
inc
(bad)
xor
(bad)
sbb
shr
les
sti
ja
jbe
xor
out
fld
daa
fnstsw
jmp
ret
ret
lods
sub
sbb
js
iret
jmp
push
jg
xchg
pop
inc
outs
es
cs
icebp
mov
fbld
ja
dec
dec
inc
out
(bad)
xlat
mov
xor
mov
clc
out
ret
pop
add
(bad)
mov
jo
rol
inc
out
test
dec
sbb
leave
aam
imul
push
jae
cmp
(bad)
sub
in
xchg
mov
push
mov
les
and
push
in
xor
gs
icebp
mov
mov
push
sbb
jo
lea
push
and
sub
and
retf
aas
mov
dec
mov
test
js
mov
(bad)
jmp
pop
pop
(bad)
fidiv
fs
cmp
loop
jp
pop
aaa
addr16
into
cli
jno
add
dec
das
jge
iret
ret
jno
leave
mov
mov
adc
push
push
mov
pop
jmp
(bad)
fsub
xchg
xor
scas
(bad)
xor
js
pop
pop
fs
sub
add
stos
or
pop
ins
clc
xor
mov
cmp
fs
cmps
shl
sub
test
sar
(bad)
jmp
push
and
mov
jle
push
sub
imul
mov
xor
mov
mov
mov
jae
(bad)
iret
xchg
push
aad
pop
inc
in
inc
and
in
scas
or
or
les
xchg
lea
pusha
push
imul
test
popa
adc
mov
inc
mov
pop
ror
scas
or
icebp
pop
jb
inc
mov
push
push
rcl
inc
cmps
aas
out
push
cmp
jo
loopne
es
ret
push
push
in
mov
fwait
clc
adc
xchg
(bad)
mov
adc
push
iret
add
sbb
adc
movs
mov
sub
fcomp
inc
aaa
or
mov
push
imul
retf
pop
out
xor
dec
or
ret
leave
sti
lods
outs
cmp
mov
cmp
out
inc
fnsave
xlat
xchg
inc
adc
(bad)
aaa
idiv
cmc
ss
mov
int3
imul
cmp
je
cmp
add
dec
fisttp
adc
pop
xchg
ret
out
mov
cmps
jmp
dec
mov
pop
outs
leave
mov
or
mov
inc
mov
leave
pushf
sar
lahf
aas
(bad)
jb
lods
mov
shl
movs
ds
sub
call
(bad)
mov
cld
inc
hlt
cmp
fwait
mov
push
repz
dec
cmc
cmp
mov
in
xor
jle
mov
add
mov
jne
push
ss
jo
or
xchg
sub
mov
or
sub
pop
inc
imul
and
repnz
push
and
pusha
or
sbb
jecxz
pop
out
test
inc
and
or
out
jmp
and
shl
loope
inc
xor
into
movs
jo
(bad)
and
xchg
adc
outs
jns
dec
ss
mov
imul
bound
ds
popa
dec
shl
xor
mov
ins
push
pop
jp
test
sbb
xor
movs
xchg
xchg
in
pusha
movs
and
out
inc
xchg
iret
jbe
cmps
pop
pop
mov
mov
mov
xchg
imul
dec
dec
iret
xchg
(bad)
mov
das
gs
and
mov
(bad)
fiadd
cmp
repnz
(bad)
ja
add
xchg
jle
cmps
pop
sbb
adc
test
mov
(bad)
mov
popa
lods
outs
data16
add
add
mov
stos
test
ds
mov
mov
sar
nop
jae
out
cmps
sbb
loope
popa
addr16
scas
popf
dec
int
test
fstp
icebp
xor
(bad)
cmp
shl
and
dec
and
std
push
addr16
push
pop
pop
add
cmps
dec
fild
jno
and
mov
arpl
inc
sub
and
adc
addr16
sub
or
retf
cmp
jnp
cmp
shr
dec
sbb
(bad)
cmp
jecxz
dec
mov
jmp
mov
mov
add
xchg
adc
push
jne
jle
xchg
inc
sbb
daa
scas
mov
mov
and
dec
dec
mov
popf
mov
jmp
pop
jg
fs
cdq
in
mov
shr
movs
ja
pop
test
loop
cld
movs
fst
cs
jo
rcr
cmp
xchg
jg
pushf
dec
out
iret
adc
add
xor
mov
sub
div
sti
sbb
jae
jns
dec
or
and
push
int3
fnsave
clc
cmp
sahf
aaa
adc
in
cmp
(bad)
and
(bad)
push
nop
push
cld
push
dec
mov
pop
aas
mov
jo
xchg
push
jnp
loope
cwde
push
sti
mov
icebp
adc
pop
mov
lods
cdq
or
and
mov
jb
xor
fimul
neg
nop
ret
repz
in
movs
and
outs
popa
sbb
ins
adc
jp
ret
cmp
das
int3
push
push
aas
adc
scas
cmp
cwde
cmp
jae
(bad)
js
(bad)
jle
mov
es
add
mov
cmp
pop
xchg
mov
add
sub
xor
xchg
sahf
cmp
(bad)
push
or
push
into
mov
les
in
sbb
sbb
adc
fs
loop
out
cli
int
xor
mov
adc
jecxz
push
jmp
sub
cmps
das
adc
ret
mov
mov
or
xor
lods
push
or
scas
inc
call
adc
bound
sub
pushf
push
in
dec
jbe
test
sbb
test
inc
mov
fcomp
icebp
mov
ret
cmp
adc
scas
and
test
ror
pop
and
adc
or
xchg
push
pop
cld
pop
lods
pop
ins
pop
adc
stc
inc
sub
imul
or
daa
retf
inc
sub
jl
xchg
jmp
into
push
cli
jo
inc
mov
das
and
sub
inc
div
lahf
adc
nop
iret
mov
(bad)
push
mov
or
jmp
in
add
lods
sub
dec
push
adc
jg
es
(bad)
jne
sbb
add
xor
dec
(bad)
cli
test
popf
xchg
movs
out
jns
ret
mov
push
and
mov
ds
sub
call
outs
jmp
or
mov
pusha
shl
xor
mov
das
cld
js
cmc
movs
sub
dec
and
or
stos
out
sbb
cs
mov
les
push
xlat
fcmovnu
sbb
retf
jmp
cdq
dec
imul
ret
jecxz
leave
and
repnz
cmc
fcom
pop
xchg
xchg
idiv
mov
nop
fstp
cli
std
test
dec
cmps
xchg
in
jns
mov
adc
ret
xchg
lahf
stos
(bad)
(bad)
sbb
inc
mov
adc
xor
(bad)
int3
mov
(bad)
fdiv
ret
dec
push
mov
jns
into
cmp
fstp
hlt
cmp
push
fcom
dec
outs
sub
sbb
jae
dec
jno
and
shr
jno
dec
stos
clc
clc
ins
cmp
add
ins
aaa
in
rcl
mov
xchg
jb
cmps
nop
jae
sbb
shl
adc
(bad)
int3
(bad)
call
sub
nop
aas
aad
fidiv
cmp
iret
mov
ret
xchg
sahf
push
js
icebp
jmp
mov
pop
xor
fmul
fcom
xor
adc
mov
cli
cmp
hlt
add
fcmove
fisubr
add
out
leave
pop
mov
(bad)
cmp
outs
sub
dec
and
mov
jo
jnp
xchg
jmp
pop
in
add
jbe
sub
xchg
lods
scas
jecxz
imul
sbb
frstor
or
mov
ret
and
mov
das
cdq
call
iret
mov
je
out
jecxz
out
xchg
pop
dec
cmp
or
dec
mov
mov
adc
mov
js
mov
iret
inc
arpl
mov
xor
add
jle
add
mov
cmp
mov
rcr
add
shl
xor
out
mov
pop
loopne
hlt
pushf
imul
pop
adc
xchg
pop
hlt
or
and
nop
jl
or
xchg
push
xor
(bad)
mov
je
stc
pushf
cmps
test
jmp
mov
das
bound
dec
aad
xlat
or
pop
test
xor
mov
cmp
inc
bound
cmps
and
push
cdq
inc
sub
adc
bound
inc
movs
arpl
adc
cmps
and
in
repz
lea
add
outs
movs
int
dec
inc
retf
xor
not
cdq
scas
inc
call
mov
inc
imul
adc
sub
test
cdq
rcl
pushf
jmp
dec
dec
add
frstor
mov
add
add
cmp
push
jo
hlt
int3
and
xchg
pusha
jge
pop
cwde
cmps
aam
push
xchg
push
nop
fistp
jge
mov
xrelease
and
cmps
sbb
xor
jno
inc
mov
(bad)
call
aam
mov
out
pop
cmc
pop
xor
push
fstp
pop
imul
sti
inc
jge
fisub
shl
pop
mov
shr
mov
(bad)
add
xlat
(bad)
cmp
mov
xchg
sbb
(bad)
push
inc
mov
xchg
cmp
test
xchg
xchg
mov
or
jo
pop
in
mov
cmp
inc
rol
clc
and
mov
and
inc
push
pop
xlat
xor
jle
jo
pop
ucomiss
call
inc
aas
add
or
cmp
add
xor
test
mov
dec
movs
test
std
jp
xchg
cmps
sub
sub
mov
pop
shl
sti
aaa
push
bound
into
dec
inc
out
cli
mov
add
and
hlt
jno
push
cdq
test
push
xchg
sbb
js
dec
xor
lods
mov
xor
inc
sbb
ds
jmp
sbb
sub
add
test
sub
scas
sbb
pop
jge
int
shr
test
int3
dec
fistp
pushf
out
sbb
or
sub
jmp
call
mov
adc
push
inc
(bad)
out
rcr
js
leave
xlat
out
lahf
mov
cld
cmp
sbb
(bad)
jae
pop
adc
div
dec
xor
popa
inc
cmc
cmps
out
add
std
clc
clc
(bad)
jbe
mov
outs
in
sbb
out
pop
sub
clc
jecxz
push
push
test
ja
mov
cmovbe
stos
inc
xchg
jb
adc
inc
sbb
cmp
sub
jle
jp
pop
mov
mov
fld
daa
(bad)
mov
mov
fs
inc
pop
icebp
cdq
and
(bad)
sahf
rcr
pop
or
mov
jecxz
mov
add
push
sub
popa
sahf
inc
mov
xor
or
in
dec
sbb
inc
(bad)
ret
push
(bad)
call
or
test
dec
jns
cli
pusha
push
mov
retf
sub
shr
out
dec
ficom
mov
mul
ret
sbb
mov
add
test
std
mov
leave
mov
and
adc
sub
ja
push
or
push
mov
inc
in
cmp
loope
retf
sbb
mov
sbb
fisub
mov
sbb
push
test
dec
xor
retf
xor
(bad)
out
mov
mov
clc
int
jbe
mov
or
(bad)
mov
test
vandnpd
aad
push
mov
test
and
lahf
std
js
and
dec
mov
stos
dec
add
and
inc
cmps
dec
ror
movs
push
arpl
push
and
push
loop
jb
test
test
dec
jb
das
mov
cdq
fisttp
outs
cmp
or
xlat
ss
retf
mov
or
call
mul
mov
imul
fs
sahf
aaa
and
lods
cmp
mov
and
cmp
inc
sbb
outs
out
(bad)
movs
xor
stos
push
stos
inc
xchg
jns
mov
mov
push
cli
xchg
(bad)
rcr
fidiv
sub
inc
popa
call
mov
inc
adc
lock
dec
xchg
aad
scas
jne
dec
push
pop
jmp
inc
xor
lahf
xchg
pop
mov
lahf
int
inc
mov
lods
cmp
cmp
push
xchg
mov
cmp
sub
nop
dec
add
or
aad
mov
xlat
cmp
sub
in
pop
push
pop
pusha
or
push
iret
in
inc
movs
xchg
loopne
jae
jne
outs
mov
cwde
jmp
cmps
iret
(bad)
mov
mov
rcl
jmp
test
dec
outs
les
shr
push
test
xor
bound
subps
cli
dec
push
adc
push
sub
lahf
(bad)
dec
adc
sar
das
in
int
lea
ret
int3
movs
movs
and
rcl
cmp
xchg
(bad)
jns
jo
inc
sub
in
mov
gs
aaa
add
adc
xor
xlat
jno
sbb
loope
mov
std
mov
cmp
popf
call
shr
shl
retf
sahf
sbb
icebp
jle
movs
mov
int3
addr16
into
movs
push
adc
cmp
stos
test
ret
add
or
mov
dec
sti
push
loop
cmp
push
ins
mov
adc
cmp
(bad)
cmp
jp
xchg
stc
lock
popf
std
test
adc
mov
bound
cs
stos
mov
lock
adc
dec
cdq
fxch
rcr
xchg
and
pop
xor
neg
sar
mov
xor
push
ss
adc
test
into
mov
inc
cmp
shr
loop
pop
adc
xlat
and
add
ficomp
jae
push
lea
les
mov
call
cmps
js
dec
sti
fiadd
sbb
(bad)
pop
out
sti
jg
cmp
icebp
std
sbb
test
rcr
cmc
add
shr
xlat
into
xchg
mov
sub
aam
sub
mov
sub
and
out
imul
jmp
stc
sahf
or
pop
stos
sbb
xor
push
pop
movs
add
int
ins
ja
xchg
push
cmp
xchg
and
mov
mov
cmp
xchg
mov
arpl
xor
test
jo
add
sbb
pop
pop
mov
and
inc
xchg
jo
cmc
pushf
mov
mov
jp
add
cmp
clc
aam
rcr
ret
cmp
stc
rcl
jg
stos
push
mov
nop
clc
mov
fisttp
pop
mov
or
out
(bad)
jp
(bad)
rol
std
clc
inc
jnp
cvtpi2ps
test
addr16
sub
retf
mov
std
fadd
push
sub
mov
(bad)
gs
mov
xchg
ror
or
lock
push
and
push
repnz
fcom
xor
outs
test
mov
pop
shl
daa
pop
or
mov
js
aaa
jecxz
fcomp
ret
mov
mov
cmc
push
stos
mov
sbb
fist
lods
fs
ss
nop
ins
nop
xchg
mov
add
mov
pop
mov
xor
lea
adc
ins
mov
mov
mov
outs
add
mov
push
cmp
lahf
bound
sbb
repz
adc
ins
rcl
sbb
mov
push
cmp
inc
dec
into
fwait
cld
jge
int
(bad)
cli
test
add
or
sub
out
push
ret
call
sbb
mov
push
retf
dec
fisubr
test
xchg
scas
lahf
and
xchg
call
pop
dec
loop
cmp
int
fdivr
neg
push
in
jns
les
ret
jmp
sar
mov
aad
cmps
or
and
xor
mov
fcomp
mov
fild
xor
rcl
and
stos
mov
out
shr
lahf
test
lds
daa
mov
xchg
pop
dec
push
xchg
clc
cmps
sbb
push
repz
push
in
cmp
mov
lds
xchg
iret
cli
xchg
neg
cdq
cmp
jg
adc
inc
xor
loope
mov
cmps
aad
pop
lods
adc
les
addr16
pop
add
and
cmp
(bad)
ret
cmp
mov
add
out
fs
cld
cmp
cmp
ret
neg
mov
je
ins
ds
jb
les
push
not
cwde
das
mov
or
test
rcl
cs
(bad)
push
call
out
mov
ss
nop
mov
imul
jae
xor
icebp
ins
mov
cmc
inc
movs
and
adc
aaa
and
push
pushf
jae
dec
scas
pusha
jge
and
data16
pushf
or
dec
mov
sub
dec
leave
xlat
shr
dec
or
fadd
xchg
mov
cmp
jge
cmp
jmp
fist
and
std
ins
push
push
mov
xchg
mov
ins
add
inc
cmp
sbb
imul
js
cdq
xchg
div
mov
arpl
dec
dec
ins
lahf
jnp
adc
bound
xor
stos
jg
sbb
jp
clc
mov
xor
add
xchg
or
addr16
sahf
test
addr16
xor
inc
(bad)
cmp
call
clc
sub
mov
std
push
or
xchg
push
dec
cwde
ret
dec
or
xchg
add
xor
or
sub
mov
cli
repz
lods
push
les
and
(bad)
and
adc
(bad)
call
popf
xchg
dec
(bad)
jmp
sub
or
or
cld
jle
jecxz
das
and
fdiv
sbb
push
adc
xchg
in
add
sahf
leave
dec
or
jmp
xor
sbb
mov
xchg
fadd
and
or
(bad)
dec
adc
cmp
xor
mov
lods
jae
push
movs
das
scas
jmp
(bad)
jg
scas
adc
pop
loop
lock
cld
icebp
pop
(bad)
outs
xor
cmp
ret
mov
xor
out
jecxz
cmp
outs
hlt
mov
xchg
lahf
inc
fmulp
push
mov
mul
ja
cli
adc
adc
cld
inc
jb
cs
les
movups
test
inc
not
in
ins
mov
arpl
xor
dec
xor
pop
sbb
pop
out
cmp
scas
sbb
mov
nop
out
test
pop
pop
int3
test
jmp
sbb
nop
push
and
push
xor
std
adc
mov
mov
add
inc
pop
mov
es
adc
call
inc
inc
or
adc
test
xchg
pop
push
or
scas
pop
and
pop
cmps
mov
in
cmp
cmp
sbb
pop
mov
sti
dec
or
icebp
fldl2e
sub
jb
enter
frstor
mov
sub
cmp
jnp
pop
mov
lods
pop
add
adc
jg
fadd
out
add
popf
cmp
idiv
xchg
aad
inc
popf
mov
mov
jge
sub
add
dec
bound
dec
adc
pop
mov
pusha
je
scas
xchg
jo
xchg
daa
out
pop
mov
adc
out
xchg
push
mov
mov
out
mov
stc
sahf
cmp
movs
lds
les
dec
inc
xlat
mov
jge
nop
stos
cmp
dec
stos
inc
push
rcl
aas
pop
or
mov
(bad)
jmp
loope
jp
fnstcw
gs
mov
nop
xchg
push
mov
jns
sub
fdiv
enter
in
leave
push
and
lds
sbb
push
adc
xchg
aas
imul
cmps
je
dec
mov
and
xchg
sbb
call
jmp
xor
int
sub
setne
sub
(bad)
fidivr
jp
test
je
dec
ret
adc
xor
(bad)
out
add
dec
inc
cmp
cwde
or
pop
test
in
jg
inc
popf
mov
and
add
clc
mov
fiadd
loop
test
leave
rcr
sub
xchg
jge
cmc
sbb
fwait
add
adc
cmp
lock
inc
addr16
jb
sbb
pushf
mov
adc
or
inc
inc
sbb
nop
lods
fs
pop
pop
hlt
stos
xchg
and
test
sbb
or
cli
xor
iret
or
jecxz
nop
mov
cmps
hlt
dec
int3
ds
in
in
icebp
pop
mov
(bad)
aam
cmc
mov
inc
jecxz
mov
int3
dec
retf
movs
and
inc
les
push
stos
mov
ja
sub
dec
and
movq
sbb
leave
mov
inc
repz
jle
xor
pop
loope
add
add
(bad)
neg
(bad)
pop
sub
je
mov
jmp
iret
and
pop
retf
dec
xchg
inc
daa
idiv
jmp
and
das
mov
add
and
or
xor
jne
pop
sub
push
dec
jmp
push
mov
cmps
pop
sbb
jmp
pop
sbb
push
mov
lock
cmp
xor
pusha
dec
dec
cmp
jne
mov
push
lahf
mov
loop
mov
and
adc
int3
call
out
jl
stos
mov
adc
outs
cli
xor
xchg
jae
pushf
cmp
pop
jl
cmps
mov
dec
out
mov
xchg
add
fidiv
push
in
nop
jecxz
push
mov
out
xchg
inc
fist
enter
in
test
les
loopne
loope
push
sbb
mov
les
cmp
fist
retf
imul
pop
sub
lds
or
inc
cwde
jge
cmp
(bad)
(bad)
pop
mov
pop
lock
ret
xor
cdq
inc
out
xchg
ret
xor
imul
or
fisttp
add
test
jmp
fldcw
jns
pusha
sub
stos
mov
sub
sub
mov
sub
jns
jl
(bad)
dec
sub
ins
iret
dec
iret
cmp
sbb
jmp
xor
pushf
and
cmp
adc
xor
aaa
xor
push
add
push
es
xchg
leave
add
push
xor
sar
push
and
or
jmp
loope
fsubr
sub
push
push
fiadd
adc
imul
dec
jge
pusha
inc
xor
xchg
jge
ds
shr
in
inc
inc
imul
jno
xlat
ror
aas
and
aaa
cld
mov
imul
push
and
cmp
jno
sar
sbb
mov
jmp
pop
sub
leave
push
aam
pop
mov
jg
push
arpl
sbb
dec
ror
push
jl
test
jo
mov
out
hlt
xchg
and
and
aas
ss
lods
jns
lea
and
adc
sbb
(bad)
cmps
jg
sub
cwde
loopne
mov
and
jb
data16
sbb
jmp
sub
fstp
jbe
rcr
mov
mov
lods
cvttps2pi
movs
into
sub
inc
mov
into
xchg
pop
into
mov
mov
dec
inc
es
sahf
mov
dec
loop
sub
aas
rol
test
mov
test
repz
add
xor
ret
and
loop
aaa
ret
push
fs
bound
aaa
inc
jle
xor
(bad)
ds
xchg
in
test
test
mov
rcl
icebp
jmp
and
xor
fisttp
dec
xor
pop
xchg
jp
cmp
int3
cdq
mov
int3
jmp
les
add
add
setne
out
push
out
dec
sub
sbb
xchg
ffree
ret
push
xchg
sbb
rcr
lds
cdq
xor
xchg
mov
lods
xchg
push
test
or
out
pop
(bad)
jae
test
test
ficomp
sar
shr
xlat
clc
xor
and
repz
lock
sbb
push
repnz
push
out
enter
mov
jg
nop
mov
ins
ja
jbe
mov
or
mov
jno
cmp
(bad)
xor
ror
add
dec
jbe
fisttp
lea
(bad)
adc
scas
inc
dec
jl
in
push
rol
(bad)
out
leave
cmp
add
ror
jne
mov
(bad)
retf
lods
aam
pop
pop
in
sub
shr
push
push
xchg
into
(bad)
jmp
push
imul
mov
repz
xor
mov
cmp
jp
pop
cmc
dec
movs
jb
cmp
mov
js
retf
fs
jp
cmc
xlat
repnz
mov
fsub
add
outs
out
sbb
lods
dec
jecxz
out
inc
iret
jg
sbb
or
push
int3
jg
inc
ret
mov
call
(bad)
sub
cwde
gs
aad
pop
ins
loope
push
pop
(bad)
scas
inc
fwait
aam
lds
out
into
and
lds
pop
in
das
cdq
mov
cmovb
adc
push
sub
stos
stos
bnd
sub
cmp
pop
fnstsw
mov
push
sub
scas
aad
xchg
ficomp
or
xor
xchg
lea
test
jbe
push
cli
dec
pop
xchg
xchg
sbb
dec
arpl
test
les
push
add
arpl
stos
cli
jp
(bad)
fucomp
daa
in
push
and
loope
and
sub
mov
les
sbb
jo
aaa
fisubr
mov
fdiv
hlt
mov
mov
repnz
xchg
jno
push
cmp
aad
jmp
popf
shl
pop
outs
and
sub
gs
sbb
inc
mov
sahf
jno
push
repz
mov
shl
cmp
call
sub
je
mov
sahf
ror
jmp
in
sar
pop
addr16
pop
inc
adc
xchg
rcl
sub
ficomp
addr16
jg
mov
loope
daa
jle
adc
xchg
sub
ss
inc
aam
dec
sub
fld
scas
inc
call
push
or
pop
(bad)
jge
test
call
sub
or
mov
xchg
mov
pop
lods
dec
rol
je
mov
das
lods
add
sbb
enter
mov
call
cmp
add
js
pop
adc
lods
scas
mov
mov
or
(bad)
shl
pop
test
pop
lahf
sbb
out
mov
cmp
adc
dec
mov
inc
out
jecxz
dec
xor
push
cdq
or
push
push
mov
mov
iret
jbe
aas
inc
imul
xor
out
jns
dec
fnsave
cmp
mov
lods
or
fimul
outs
sbb
fidivr
mov
aas
cs
clts
das
sbb
aad
inc
jmp
jmp
call
jae
in
leave
sub
and
push
loop
fnstcw
iret
out
add
test
cs
pop
cmc
dec
mov
mov
out
scas
jecxz
jbe
pop
sbb
imul
jbe
mov
ret
jmp
mov
cmp
fnsave
jmp
in
std
xlat
mov
pusha
xchg
stos
fwait
out
sub
jnp
(bad)
adc
xchg
adc
pop
mov
ret
mov
push
daa
retf
aaa
out
sbb
loope
leave
(bad)
inc
std
sahf
jb
mov
in
push
and
and
mov
xchg
xlat
xchg
adc
loop
inc
test
push
das
fs
pop
or
cmps
add
and
mov
out
jnp
in
sahf
xchg
stc
sub
sbb
js
push
dec
fs
and
jmp
cmp
mov
and
stos
pop
sub
push
mov
rcl
scas
and
dec
sbb
adc
mov
sub
jno
jns
test
movs
sub
inc
imul
cmp
fs
xor
sub
les
test
inc
cmc
icebp
fldenv
mov
mov
retf
mov
push
mov
xchg
cli
out
inc
xchg
aas
mov
or
iret
pop
push
xchg
pop
pop
inc
je
jo
or
mov
xchg
pusha
inc
xor
out
sahf
push
sbb
neg
out
adc
test
push
add
out
sbb
sbb
pop
fwait
push
out
push
jmp
dec
jle
mov
push
call
inc
dec
loopne
cmp
push
cmps
add
cmp
into
loope
pop
xlat
aas
jge
add
aad
mov
add
and
jne
or
dec
jecxz
arpl
add
adc
out
inc
cmp
mov
adc
outs
and
push
ins
inc
inc
enter
sbb
ss
jecxz
or
cwde
inc
push
mov
outs
je
test
test
and
jo
sbb
enter
sub
sub
xlat
fcmove
mov
push
pop
dec
pop
jmp
dec
pop
aam
pop
prefetcht0
ret
cmp
inc
cmp
stc
das
(bad)
pusha
jle
scas
add
dec
sub
jo
(bad)
es
fwait
jmp
pop
popa
repz
imul
addr16
xchg
les
pop
xor
xor
sub
test
mov
mov
aaa
lods
sahf
inc
fxch
ds
loopne
test
mov
test
cdq
into
mov
inc
and
jmp
sahf
adc
push
mov
test
inc
cwde
inc
xchg
xchg
fsub
ret
jmp
inc
daa
outs
clc
cdq
push
cmps
fbstp
daa
adc
push
push
and
mov
sub
sbb
bound
in
fisttp
call
mov
add
(bad)
adc
mov
dec
dec
jae
jnp
ds
jmp
jae
fisttp
mov
test
mov
jno
or
pop
test
or
xchg
sub
fcomip
mov
inc
call
dec
sub
call
prefetchwt1
mov
jae
adc
xor
(bad)
push
repnz
gs
jmp
mov
in
mov
mov
bound
add
xchg
dec
lahf
mov
lahf
in
call
and
jb
dec
ss
test
fs
shl
xlat
sbb
xchg
scas
jno
sbb
sbb
mov
add
or
or
push
dec
(bad)
call
sbb
xor
push
dec
stc
mov
mov
fdivr
daa
call
push
dec
repnz
dec
call
clc
cmp
jge
test
cmp
inc
cmp
dec
nop
jae
stos
sub
aaa
std
cmp
mov
movs
cmps
push
adc
retf
retf
mov
in
je
sub
push
mov
cs
out
in
arpl
xor
pop
jl
xchg
call
dec
sub
jl
mov
ins
and
stos
push
pop
out
in
pusha
sbb
xor
add
pop
dec
shr
fsub
sbb
mov
ins
adc
ja
fisttp
retf
push
add
lods
dec
ins
or
retf
sbb
add
sbb
push
jo
test
mov
xchg
xor
scas
adc
rsm
push
mov
out
sub
fxch
sbb
pop
jge
mov
out
jl
and
jle
cmps
jb
xchg
lock
clc
(bad)
in
stc
cmp
jns
iret
imul
rcl
fild
cmp
push
(bad)
ins
fst
cmp
pop
push
jns
pop
xchg
inc
test
ret
out
mov
addr16
retf
cmps
jnp
mov
xchg
sub
ins
fs
aaa
jne
imul
call
pop
fs
xchg
dec
or
sub
ficomp
call
popf
push
fwait
int3
push
clc
pop
mov
addr16
sub
into
xor
inc
and
test
ret
lods
jg
ss
fimul
mov
add
je
aam
pop
jl
push
sub
ffree
jge
sbb
imul
iret
mov
lahf
es
xchg
bound
xor
es
int
sub
mov
outs
add
inc
fmul
scas
fst
push
or
cmps
jb
les
std
push
xchg
fild
cmp
fsub
and
dec
inc
xchg
adc
iret
cmc
add
out
mov
mov
jecxz
and
jp
mov
aad
lods
loop
inc
mov
pop
dec
call
in
jns
je
and
cmps
add
jae
ret
adc
popa
jl
cmps
and
and
hlt
loope
xchg
sub
pushf
mov
push
sub
into
sub
ds
xchg
stos
cdq
push
pop
and
push
dec
sub
jmp
sub
dec
adc
adc
sbb
or
pop
stos
iret
stos
scas
clc
mov
fisub
pop
lock
pushf
push
mov
sbb
mov
mov
mov
bound
push
lahf
ss
fcmovbe
mov
pop
call
add
fisubr
mov
or
fsub
xchg
push
push
mov
cwde
mov
(bad)
push
loop
xlat
cmps
xchg
and
push
fistp
fcom
mov
jle
push
addr16
xor
lahf
mov
xchg
in
xchg
test
pop
inc
xor
in
lods
lahf
xor
cdq
sub
mov
div
fcom
push
mov
ja
or
pop
mov
cli
or
push
and
mov
shr
xor
xor
mov
inc
sub
fbstp
xchg
mov
ss
inc
cli
add
imul
jbe
mov
das
jle
jmp
in
push
xor
test
out
aad
sub
inc
sub
int3
(bad)
retf
sar
stc
mov
fistp
sbb
loope
mov
ror
xchg
xor
aas
jecxz
pop
pop
fstp
mov
dec
scas
test
sub
xor
inc
and
sub
adc
lahf
mov
imul
push
loopne
ret
loop
xor
pop
dec
sahf
xor
cmp
add
mov
mov
adc
(bad)
or
push
pop
dec
cmp
mov
mov
push
sar
js
ficomp
cmc
mov
jl
xor
out
add
cld
jecxz
ins
push
js
popf
xchg
sub
xchg
jne
arpl
mov
sub
mov
aas
ficomp
sbb
xor
xchg
ins
retf
sar
jl
(bad)
rcr
outs
cmp
jecxz
mov
and
aam
push
sbb
(bad)
and
pop
out
and
(bad)
mov
(bad)
xlat
mov
mov
or
test
pop
xlat
mov
fdivr
outs
jb
mov
clc
sub
sti
inc
dec
aad
dec
cs
and
int
xchg
add
pop
adc
pop
cmp
mov
jmp
(bad)
pop
jne
dec
push
js
int3
arpl
xor
jmp
std
add
sar
sub
xchg
fstp
xor
movs
mov
in
and
mov
std
and
pop
jae
mov
jns
xor
retf
jae
call
cwde
adc
push
xor
lea
cmps
dec
(bad)
xchg
lods
shr
scas
out
mov
in
or
and
dec
stc
into
jne
sbb
cwde
pushf
push
jg
cmc
mov
inc
add
and
mov
lahf
mov
cmp
cmp
fwait
movs
xchg
sar
mov
or
aaa
pop
ja
mov
mov
ror
mov
fsub
mov
jl
or
hlt
cmc
xchg
push
loopne
inc
popa
jno
test
mov
daa
and
nop
and
pop
cmp
jle
mov
push
retf
xchg
jno
sub
push
shrd
test
mov
inc
fyl2xp1
arpl
popa
lds
nop
out
cmp
lds
sbb
mov
bound
loopne
jge
in
imul
test
retf
xchg
test
lea
ret
sbb
push
icebp
sbb
fadd
(bad)
div
into
inc
test
out
push
xchg
out
addr16
fdivr
add
int
sbb
push
test
push
push
cmp
xchg
adc
sbb
ficom
xchg
call
dec
dec
loopne
movs
adc
xor
lea
nop
out
cmp
es
xor
add
xchg
mov
das
or
jb
dec
push
cmp
ss
mov
gs
stos
dec
lds
cs
or
add
repz
sar
pop
jb
mov
mov
iret
inc
push
sub
movs
xchg
shl
aad
add
fst
loope
stos
pop
in
sub
or
and
mov
gs
in
fucomp
jae
(bad)
cmps
push
cli
xor
sbb
imul
loop
outs
adc
mov
outs
inc
pop
stos
mov
sbb
mov
inc
add
pop
mov
or
imul
sbb
or
jecxz
gs
mov
sub
adc
cdq
mov
push
test
push
xor
pop
pop
mov
add
jae
pop
call
ror
xor
inc
push
iret
cmp
rcl
pusha
mov
outs
cwde
and
sar
sbb
add
jne
in
cmps
ss
jne
test
ds
mov
and
cli
stos
jg
fld
inc
mov
pop
test
push
jge
out
std
pushf
jnp
mov
xor
lahf
mov
sub
jmp
cmp
pop
dec
xchg
je
mov
dec
jbe
mov
icebp
pusha
mov
xchg
or
out
adc
push
xor
cwde
outs
cmps
sub
sbb
(bad)
cld
fistp
cli
jmp
out
mov
sub
test
rol
pop
add
test
jo
ja
adc
and
in
pop
mov
push
xor
lock
xchg
xlat
out
test
retf
mov
push
pushf
jg
cli
lea
nop
mov
inc
iret
and
push
mov
mov
aam
xlat
iret
in
jg
cmp
push
in
inc
shl
xchg
mov
mov
test
dec
mov
je
mov
pop
push
movs
aas
push
mov
push
dec
or
ficom
lods
pop
dec
aad
or
das
dec
icebp
jns
inc
loope
sub
push
iret
inc
mov
cmps
inc
retf
add
mul
jae
adc
mov
mov
ins
sub
ins
cmps
not
leave
cmp
add
jmp
inc
in
out
loope
jle
mov
(bad)
stc
fdivrp
mov
popa
pop
das
popa
adc
adc
jle
mov
and
mov
sub
or
mov
dec
push
jns
mov
lds
cmp
loope
rcl
test
lds
lods
mov
shl
fiadd
lods
jmp
loopne
sahf
mov
jns
mov
add
mov
jne
(bad)
fmul
add
xchg
daa
xor
es
rcr
xor
mov
outs
retf
arpl
sbb
cmp
sbb
xchg
repz
rol
mov
xor
push
shl
push
cmp
ror
das
mov
adc
ror
das
or
retf
repz
sub
pushf
sti
or
and
(bad)
xor
inc
stc
test
pop
test
mov
inc
fsubr
pushf
out
push
push
push
not
xor
or
or
ins
nop
mov
mov
stos
sub
jmp
mov
cdq
int3
bound
hlt
pop
cmps
mov
aas
sub
repnz
cld
cmp
inc
inc
or
in
stos
movlps
push
adc
in
jge
call
jae
dec
or
aaa
mov
sub
ror
mov
pop
cmps
cmc
jne
jne
xor
push
loop
pop
aaa
(bad)
lahf
scas
xor
xchg
mov
inc
cmp
lock
or
aad
sub
dec
jl
push
sbb
je
pop
lds
jnp
jbe
jge
(bad)
(bad)
xlat
mov
jmp
mov
cmp
sub
out
dec
pop
fst
jne
cli
mov
fidivr
mov
sub
gs
and
(bad)
cmps
jns
or
(bad)
ins
rcr
stos
mov
jecxz
push
mov
xor
ins
stos
cs
into
xchg
fldcw
in
inc
jg
loop
ds
stos
das
sbb
mov
adc
add
xor
jns
mov
fucomi
mov
pop
xchg
xor
fimul
xchg
mov
scas
adc
jae
xor
xor
imul
out
(bad)
push
cmp
pop
int3
inc
retf
jge
shl
mov
sbb
inc
jb
push
jo
mov
fs
fiadd
mov
leave
cmp
(bad)
repnz
bound
mov
mov
push
jnp
xchg
test
shl
clc
adc
sbb
mov
js
mov
add
lods
fmul
add
ins
leave
jp
xsha1
cmps
int
or
div
add
iret
out
dec
repz
imul
les
mov
add
mov
add
imul
imul
mov
mov
shl
enter
ja
aaa
(bad)
jne
cmp
cli
call
out
xchg
ins
cli
dec
push
adc
iret
add
cmc
push
inc
mov
ja
ja
loopne
mov
pop
jae
dec
adc
jl
mov
out
nop
dec
imul
and
int3
ss
and
xor
add
mov
dec
push
fist
dec
xchg
sti
in
stos
sub
cmp
jnp
cmps
ds
adc
mov
mov
push
add
aam
xchg
jg
popf
cdq
scas
inc
mov
popf
in
in
sub
dec
cmp
mov
mov
dec
mov
cmp
iret
jmp
and
rol
mov
pop
xor
pop
retf
rcr
jg
pop
sar
cmp
lods
jmp
(bad)
and
mov
fistp
cmp
or
add
push
xor
xchg
aas
mov
pop
push
imul
in
lea
push
xchg
or
mov
jge
ins
bt
loop
sub
loope
xchg
xchg
jmp
pop
icebp
xor
sbb
bnd
lods
inc
repz
dec
add
xlat
push
pop
mov
mov
fisttp
add
mov
ficomp
and
dec
mov
add
pop
pop
cwde
sbb
pop
arpl
scas
adc
sub
jmp
jp
dec
int
mov
aad
cmp
jp
cld
inc
mov
jo
add
call
dec
pop
pop
outs
lds
push
or
or
aas
jb
neg
je
lods
xor
inc
xor
sbb
(bad)
sub
sub
fisttp
adc
bound
inc
mov
cmp
cli
fs
movs
jl
out
out
add
repnz
and
lock
xchg
lock
or
test
pop
out
ja
jl
mov
mov
push
xor
sti
jae
xchg
jmp
fnstsw
or
(bad)
mov
add
cli
ficom
fstp
movs
lea
add
lods
or
pop
and
or
pop
and
shl
jno
jl
jbe
mov
ret
add
hlt
adc
push
add
or
inc
jne
or
es
fwait
retf
dec
or
push
sbb
je
sar
in
or
or
inc
sub
enter
shl
les
rcr
inc
jmp
jo
xor
std
js
fldcw
xor
mov
sub
and
jb
add
retf
jb
pop
std
movs
xchg
mov
pusha
mov
retf
push
cld
cmp
outs
mov
add
je
vcmpps
xor
jl
xor
push
stos
mov
fidivr
or
mov
push
jp
js
call
pop
test
scas
mov
or
push
sbb
mul
jo
add
addr16
call
dec
mov
mov
call
inc
fldenv
or
jmp
mov
xor
dec
mov
push
adc
scas
adc
mov
inc
scas
xchg
pop
jmp
dec
or
scas
repz
ins
and
mov
fbstp
imul
mov
ret
cmp
mov
or
fcmovu
test
cmp
ds
test
in
sub
and
loope
mov
sbb
es
dec
sbb
xchg
jl
and
push
pop
ror
hlt
mov
cdq
pop
scas
(bad)
fisttp
fmulp
pop
cmps
aas
jmp
lds
cmp
scas
lea
aas
mov
in
scas
mov
xor
aaa
push
sbb
pop
fstp
bnd
clc
xor
xchg
add
scas
loop
int3
imul
std
push
fidiv
push
fcmovnbe
movs
dec
sbb
cmp
cmp
adc
sbb
lods
sahf
sar
pop
outs
mov
and
mov
out
sub
lea
call
fwait
and
cmps
enter
adc
sbb
ror
push
ja
rcr
imul
mov
jge
(bad)
push
inc
jp
inc
dec
adc
into
xor
dec
mov
repnz
in
pop
add
ret
xor
gs
and
xor
imul
sub
mov
inc
loope
xor
jae
pop
mov
or
jmp
add
sar
sub
daa
add
out
int
mov
mov
adc
or
dec
lock
sub
cmp
or
sbb
mov
jne
cmps
fsubr
imul
arpl
fiadd
popa
pushf
or
js
retf
mov
mov
jns
inc
jge
ss
aad
ret
push
cmp
mov
xor
cdq
sbb
test
fist
ins
cmc
mov
push
sar
test
and
cmp
xlat
pushf
movs
inc
xchg
outs
dec
mov
xchg
shr
dec
jmp
push
cmp
sub
or
mov
cmps
mul
mov
ret
cmp
mov
fist
dec
ss
add
vpshlw
inc
jmp
mov
daa
or
push
stos
dec
mov
repz
mov
cmps
inc
xor
dec
pop
aam
adc
popa
repz
fidiv
loopne
(bad)
enter
inc
shl
ret
fcom
and
test
lods
aam
cmp
push
push
mov
xchg
fwait
retf
sbb
sar
cmp
fimul
mov
dec
add
and
addr16
lock
pop
mov
fist
test
lahf
popf
pop
in
fistp
pop
cwde
push
inc
or
jnp
lahf
leave
mov
(bad)
or
mov
add
push
sub
mov
sbb
cmps
ret
sub
in
cli
mov
je
mov
jmp
mov
jbe
inc
xchg
push
cmp
ret
pop
mov
ins
mov
push
xchg
add
call
xchg
mov
in
jae
fcmovu
fstp
int3
clc
jbe
add
sub
add
push
sbb
or
mov
mov
mov
sahf
loope
xlat
mov
pop
xchg
outs
(bad)
mov
pusha
aaa
mov
and
into
mov
mov
add
cdq
jne
pop
(bad)
fcom
cmp
xchg
icebp
call
jg
repz
sub
mov
clc
push
int
(bad)
adc
xlat
ss
ficomp
push
xor
lds
jl
inc
push
pop
cwde
xor
daa
mov
mov
pop
test
push
call
jmp
jbe
sti
push
ins
scas
jns
pop
jge
aaa
sbb
mov
or
icebp
sub
lock
jl
mov
xor
inc
adc
ret
stc
mov
add
fdivr
shr
pop
add
call
mov
dec
push
cmps
call
xor
mov
dec
sub
xchg
das
pop
or
add
inc
jmp
xchg
mov
cmp
or
pop
test
pusha
pop
or
mov
inc
and
jb
neg
(bad)
jo
adc
arpl
mov
je
aam
cwde
jbe
mov
(bad)
fcom
mov
lods
pusha
loopne
mov
xchg
pop
fisubr
xchg
(bad)
dec
ror
push
mov
xchg
mov
mov
call
add
jecxz
add
inc
mov
(bad)
scas
repnz
test
mov
cmp
popf
lea
xlat
push
cmps
ins
inc
mov
shl
add
std
ret
shl
in
jae
jae
inc
mov
imul
inc
stos
sti
cmc
fidiv
and
or
ret
ret
in
jns
xor
scas
jmp
test
fwait
cld
cs
jae
xchg
jmp
cwde
jno
push
mov
mov
mov
or
es
adc
pop
sbb
pop
add
cmp
mov
(bad)
rcl
int
push
add
sbb
enter
and
jp
xor
cs
push
inc
ret
sahf
rol
stos
fsubr
mov
ret
out
mov
jno
mov
xchg
repnz
aas
cs
shl
cli
dec
jge
pop
jb
fisttp
ret
and
and
leave
int
outs
inc
aad
jo
clc
ret
ds
lahf
pop
cmp
cmps
pop
cld
(bad)
and
jmp
nop
dec
out
or
sbb
cmp
sbb
mov
scas
xor
dec
ins
push
cmp
xchg
int
sub
test
(bad)
sub
js
shl
sbb
ins
xchg
out
xchg
and
loope
call
dec
xor
jge
cwde
cmp
cmps
mov
jb
dec
loopne
arpl
cdq
mov
dec
inc
(bad)
cmc
retf
xchg
mov
loop
jne
fucomip
(bad)
cs
push
adc
inc
(bad)
mov
imul
mov
mov
sub
into
pop
push
(bad)
cwde
xchg
and
jns
sub
push
push
int3
(bad)
mov
shr
data16
or
mov
rcl
clc
js
jp
mov
sbb
retf
mov
push
push
xor
sbb
sti
mov
xchg
out
lods
dec
dec
call
xchg
popf
outs
jmp
mov
stos
jno
gs
mov
xchg
aaa
shl
jb
mov
pop
scas
sub
push
imul
fwait
or
add
inc
jae
xor
mov
pop
sub
jmp
sar
xor
xchg
jl
add
adc
stos
xchg
lock
push
mov
clc
lods
xchg
or
pop
push
xchg
xor
cmp
test
int
call
sbb
add
lods
in
sbb
xchg
scas
pop
xchg
cmc
stc
mov
dec
xlat
ins
js
into
xchg
out
adc
sbb
adc
sbb
mov
dec
in
rcl
in
popf
sub
and
and
shl
push
pop
pushf
movs
add
sub
hlt
(bad)
pop
out
adc
add
rcl
mov
dec
vmwrite
jns
bound
and
or
movs
mov
icebp
push
sub
sub
addr16
cmp
push
iret
bound
pop
mov
lahf
fs
add
push
dec
and
ins
fcmovnb
inc
add
xchg
es
jae
or
sub
mov
mov
out
int
popa
inc
je
mov
aas
pushf
jmp
fmul
adc
leave
push
fisubr
and
aas
jmp
jmp
cmps
jge
ret
(bad)
jno
sub
(bad)
xor
in
pop
int3
(bad)
daa
pop
int
mov
lods
cwde
pop
and
enter
ss
push
ja
push
xchg
idiv
movs
scas
pop
jmp
les
jmp
mov
enter
std
pop
ror
sbb
ja
inc
jno
jmp
push
rcr
jno
mov
adc
push
nop
adc
pusha
pushf
sbb
mov
out
repz
cs
xchg
imul
mov
clc
pop
and
xchg
sar
push
xor
push
ss
test
push
stos
dec
adc
arpl
or
leave
and
enter
jecxz
jne
ins
pmaxub
jmp
mov
mov
sub
mov
sbb
jg
outs
jecxz
aaa
xchg
mov
pop
pushf
pop
ja
pop
jmp
xor
push
dec
push
or
cmp
pop
mov
mov
jnp
push
jns
aaa
arpl
sbb
fdivr
mov
call
jns
fidivr
outs
inc
fsubr
jns
cs
ret
mul
repz
push
cwde
push
mov
pop
xchg
pushf
cmp
loopne
sub
dec
xor
retf
xchg
cmp
cdq
add
sbb
shl
cmp
mov
adc
jl
dec
bound
pop
daa
movs
dec
pop
push
sti
inc
add
or
sub
mov
dec
pop
js
cs
push
nop
adc
jg
bound
std
and
mov
out
and
loope
push
push
mov
ret
ret
xlat
pop
jmp
pushf
mov
cvtdq2ps
mov
clc
imul
add
jo
mov
call
clc
adc
or
adc
div
fidiv
pop
fadd
mov
add
and
inc
dec
inc
sub
cdq
mov
pop
out
imul
rcr
pop
mov
mov
add
jl
in
mov
push
mov
and
pop
bound
or
jo
xor
push
xchg
sub
cmc
mov
imul
fs
and
lods
setge
sbb
jae
push
mov
jp
jnp
dec
int
out
jmp
cmp
mov
lea
pop
ins
ds
int3
mov
scas
pop
loope
lods
arpl
or
cmc
inc
adc
xor
rcl
and
or
add
outs
dec
fnstcw
mov
xchg
sbb
pop
xor
in
xor
mov
imul
scas
mov
or
ss
push
(bad)
xlat
in
imul
addr16
inc
cmps
test
das
pop
or
cmp
test
or
call
jmp
pushf
inc
xor
(bad)
or
or
scas
retf
inc
pop
rol
xchg
aaa
mov
adc
cmp
inc
data16
out
jp
inc
arpl
push
push
mov
jge
push
cmps
or
(bad)
pop
pop
jbe
lea
cmc
push
rcr
add
lock
movs
dec
loope
inc
push
ins
rcl
pop
xchg
icebp
sub
in
pop
aam
cmps
xchg
cs
dec
out
cmc
(bad)
xor
cld
xchg
inc
repz
xchg
pusha
xor
fdiv
push
daa
shl
inc
(bad)
jns
pop
int3
xchg
in
popa
jmp
out
sbb
jmp
stos
mov
jle
adc
cmc
mov
and
mov
test
fcmovnb
xchg
icebp
add
xor
(bad)
(bad)
enter
cld
jge
dec
or
out
je
or
xor
xor
jle
retf
test
cld
adc
mov
cmp
xor
mov
mov
inc
push
addr16
sub
adc
shr
push
sbb
mov
fld
xchg
xchg
and
push
jo
dec
xor
(bad)
sbb
cmp
dec
rcr
push
jp
sbb
ja
icebp
ds
push
dec
cmc
aas
stos
imul
pusha
dec
add
mov
int3
fcom
or
clc
jge
jbe
or
add
and
mov
dec
aam
and
cmp
fs
(bad)
jno
jnp
mov
int3
out
mov
in
rol
xchg
inc
jns
inc
mov
mov
(bad)
cld
in
jae
xor
mov
mov
lahf
les
ins
ja
cmps
pop
sub
(bad)
(bad)
out
pusha
sbb
inc
pop
pop
in
icebp
clc
sbb
and
sti
xor
xor
shr
or
and
mov
inc
mov
xchg
or
mov
frstor
cmps
cmp
fld
repnz
lods
xor
sbb
jb
mov
or
(bad)
fs
jmp
xchg
push
loopne
rol
sub
jmp
add
add
xchg
push
cmp
ins
push
add
jmp
cmp
rcl
loopne
jbe
into
add
ins
imul
jae
pop
repnz
and
xor
sti
sub
push
and
aas
cli
test
lods
or
(bad)
fisttp
cmp
ror
mov
dec
mov
test
fcomi
xchg
loop
jne
lods
sbb
mov
xchg
and
dec
cmp
movs
scas
jle
test
cmps
inc
pushf
mov
cmp
push
fadd
fisub
mov
xchg
mov
arpl
sahf
mov
cli
cmp
push
movs
pushw
xchg
ja
and
pusha
cwde
mov
adc
dec
xor
in
loope
mov
not
and
pop
pop
(bad)
outs
mov
adc
mov
in
sub
mov
add
stos
or
jmp
retf
jle
sbb
pop
and
jge
int3
into
iret
sub
out
movsx
shl
jae
adc
repnz
or
div
xor
cld
adc
out
jnp
mov
imul
mov
inc
xchg
fild
imul
gs
mov
in
add
cwde
or
mov
mov
ins
xor
sub
xchg
inc
retf
ret
sbb
pop
sub
pop
in
push
std
(bad)
into
sbb
mov
call
mov
jno
xchg
adc
(bad)
(bad)
mov
mov
pop
fdivr
fwait
cmp
and
and
and
xor
cdq
pop
out
cmp
dec
shl
jns
addr16
sub
je
loopne
pop
stc
pop
push
jb
dec
mov
jno
enterw
mov
ins
dec
pop
xchg
and
(bad)
mov
aad
dec
dec
xor
pop
mov
and
addr16
mov
adc
(bad)
cmp
add
xor
jb
pop
shl
pop
lahf
push
fsub
mov
out
or
test
pop
(bad)
inc
sub
stc
cmp
inc
ret
dec
sti
and
scas
js
sbb
jmp
std
push
inc
popf
sbb
ja
xor
jbe
outs
icebp
xchg
jle
push
or
cmp
std
sar
xchg
cmc
les
mov
outs
or
je
pop
arpl
xchg
repz
mov
hlt
hlt
sbb
rcr
adc
js
adc
jg
das
push
fwait
adc
mov
or
and
aad
adc
addr16
outs
faddp
fwait
pop
in
pop
lods
jle
mov
cmp
(bad)
mov
adc
xchg
inc
ins
mov
inc
inc
pushf
(bad)
retf
repz
arpl
scas
lahf
cmp
ss
lock
mov
sbb
test
or
imul
(bad)
pop
das
fild
das
fadd
inc
fld
push
pop
imul
pop
or
pop
ret
and
push
xchg
in
sbb
aam
aas
lods
xchg
int3
into
mov
mov
mov
push
cwde
mov
bound
sahf
test
dec
lds
rol
mov
and
bound
jmp
sti
and
fs
inc
ret
leave
iret
clc
jl
push
xchg
inc
xchg
sub
mov
cmp
bnd
add
or
lods
xchg
mov
test
fiadd
daa
data16
jmp
or
pop
push
sbb
cmp
into
push
in
in
xchg
ficom
inc
pop
jmp
ret
mov
mov
and
int3
mov
and
adc
sub
test
jle
mov
cli
retf
mul
push
or
xchg
add
mov
or
add
jno
inc
loop
gs
mov
popf
popa
fwait
mov
mov
add
stc
mov
mov
rcr
movs
and
shr
inc
outs
inc
pop
sti
jge
hlt
jp
ret
adc
pop
xchg
sbb
and
out
(bad)
pop
mov
adc
mov
or
out
stc
dec
vpmaddwd
cmp
inc
adc
fwait
and
pop
(bad)
cs
jl
jae
dec
shl
(bad)
fcom
popa
sbb
cmp
pop
dec
lods
add
aad
mov
daa
popf
sar
(bad)
jno
repnz
mov
cmc
mov
add
popf
icebp
push
inc
aad
das
add
(bad)
into
sub
icebp
and
xchg
mov
or
or
pop
xchg
popf
mov
pop
sub
fadd
(bad)
cmp
and
cmps
jmp
adc
lahf
add
icebp
imul
pop
ins
lahf
out
push
icebp
aas
add
mov
sub
add
sub
xchg
cmp
in
jne
test
ds
in
fiadd
out
mov
gs
repz
sub
out
lock
mov
hlt
inc
cmp
push
dec
xchg
lock
rol
xor
out
inc
iret
je
outs
mov
dec
(bad)
and
call
lods
add
stc
xchg
inc
sub
dec
add
add
sbb
push
or
fldl2e
mov
aaa
loop
mov
bound
mov
cmp
mov
outs
ret
ja
push
jmp
fimul
jl
out
add
icebp
and
rep
inc
sub
je
mov
test
xor
fcmovu
shr
data16
test
inc
sbb
js
and
mov
(bad)
push
ins
jbe
mov
push
stos
sub
cld
xor
ret
sub
sub
(bad)
lea
sub
inc
mov
aam
scas
inc
loopne
dec
hlt
adc
(bad)
mov
jg
pop
mov
out
ins
ficomp
cmp
mov
jo
(bad)
outs
in
sbb
sbb
pushf
cli
test
push
scas
pop
mov
fldenv
leave
in
rcl
jno
fcom
mov
retf
pop
pushf
mov
aam
push
cwde
xchg
leave
sub
je
push
or
daa
stos
pop
rcl
push
aaa
adc
mov
xor
xlat
int3
fidivr
pop
(bad)
mov
mov
mov
lahf
aam
cmc
xor
test
push
mov
jg
(bad)
xor
jl
adc
cmps
pop
pop
jl
adc
add
xor
add
mov
arpl
mov
out
or
fsubr
dec
mov
xor
mov
outs
lea
xor
icebp
inc
int
imul
xor
sub
add
add
xchg
xchg
fsubp
dec
cli
mov
popf
(bad)
sbb
test
sbb
xchg
push
fdivr
in
js
and
out
imul
push
(bad)
icebp
jne
repnz
in
sub
xchg
addr16
imul
push
pop
rol
rcr
aas
and
mov
std
or
aaa
bound
loop
xor
lahf
inc
mov
in
sbb
inc
add
std
ror
jg
mov
shl
cmc
popf
imul
imul
inc
inc
inc
fmul
push
jg
cmp
fwait
inc
pop
and
adc
dec
xor
fwait
sbb
cld
ret
icebp
inc
test
fistp
mov
mov
adc
inc
lahf
pop
mov
lahf
dec
fnstcw
xlat
xor
push
imul
arpl
in
jle
js
fstp
pop
movs
cwde
sbb
sub
or
sub
sub
ss
pop
icebp
dec
je
test
sahf
popa
retf
add
jo
fsubr
nop
cmc
icebp
inc
push
stc
adc
add
jb
clc
xchg
push
call
jecxz
gs
test
nop
inc
aam
mov
mov
jb
sub
std
fwait
gs
in
out
(bad)
(bad)
out
iret
in
xor
shr
mov
mov
mov
scas
(bad)
dec
xlat
es
rol
add
mov
mov
or
aas
push
popa
or
or
sub
or
rcr
std
rcl
rcr
jns
add
mov
jp
into
daa
leave
add
adc
or
aad
inc
push
ins
pusha
mov
std
fwait
gs
mov
xchg
mov
(bad)
inc
add
cmp
mov
in
in
pop
mov
int3
adc
push
ds
(bad)
popf
push
fdiv
dec
add
cmp
out
adc
mov
pop
repz
jl
cmp
push
popa
imul
sub
xchg
fld
retf
out
jbe
jge
aaa
cmps
or
push
pusha
mul
loope
enter
adc
cmp
test
inc
mov
sahf
mov
loop
leave
dec
mov
jg
xor
xor
clc
adc
scas
xlat
retf
mov
bound
call
add
test
jl
ins
fsubr
xchg
loopne
enter
aam
xchg
rol
sub
cdq
mov
pop
shl
fimul
rcr
stos
and
jmp
in
(bad)
out
pop
sub
repz
xor
nop
pusha
jae
adc
pop
pop
hlt
push
int
repz
push
cli
mov
mov
add
pop
sbb
pop
out
ss
dec
aam
out
mov
mov
pop
mov
nop
fimul
jge
mov
call
mov
adc
movs
test
icebp
je
cmp
jbe
push
call
xor
mov
mov
adc
dec
and
shl
aad
popf
movs
add
inc
cwde
test
cmc
movs
addr16
xchg
push
ret
cmp
jg
call
xchg
jbe
dec
and
mov
xlat
xor
dec
pop
mov
fs
inc
jle
and
mov
aaa
movs
mov
jno
ror
push
js
pop
jg
in
cmp
sbb
or
jmp
pop
dec
retf
lods
adc
inc
mov
mov
xchg
cmps
xchg
sub
inc
outs
sub
or
shl
mov
lock
mov
mov
xor
loope
ror
mov
pop
arpl
mov
retf
ret
dec
cmps
sub
daa
dec
cmp
dec
sub
mov
jo
mov
les
sbb
scas
int3
xor
jo
fwait
and
mov
retf
popf
lds
hlt
retf
(bad)
ja
mov
lea
and
icebp
push
cld
mov
les
sahf
fdivp
and
loopne
add
fistp
cdq
jb
pop
cdq
push
test
dec
mov
and
jae
mov
and
stc
push
addr16
push
mov
jmp
lea
clc
xor
and
sbb
inc
sbb
imul
jge
jno
jne
ja
nop
inc
cmps
pop
push
scas
push
inc
pushf
mov
mov
lea
or
mov
cmp
mov
adc
xor
sbb
jae
mov
jecxz
inc
mov
sahf
sbb
leave
cld
loope
jmp
leave
jmp
add
inc
and
inc
aad
stos
xor
daa
mov
rcl
loope
mov
push
rcr
in
loope
xor
xchg
mov
call
pop
(bad)
call
pop
in
imul
mov
into
add
outs
push
sub
in
sub
repnz
pop
out
out
sbb
sbb
mov
and
cs
mov
jmp
cs
sub
push
inc
les
cmp
push
clc
scas
mov
push
sub
add
fidiv
xchg
jg
sub
cmps
popa
(bad)
push
(bad)
mov
mov
xor
aas
and
in
mov
clc
fs
sub
dec
fucomi
sbb
or
sub
repnz
add
mov
pusha
in
stos
shr
adc
(bad)
(bad)
das
push
adc
movsx
adc
inc
cmp
jl
add
mov
in
cdq
stos
stos
aad
inc
aaa
rcl
mov
add
xor
lods
mov
pop
in
cmp
sbb
jl
push
jbe
pop
sub
xchg
imul
push
fcomp
movs
ins
push
repz
loopne
and
push
jp
dec
movs
outs
or
fldlg2
adc
mov
aad
jne
cmps
ja
in
xor
pop
mov
push
sbb
gs
sbb
shl
retf
push
repz
call
mov
mov
inc
xor
xor
xlat
int
or
or
stos
test
jae
xor
inc
sbb
jmp
mov
movs
jb
cwde
mov
or
jae
mov
push
(bad)
sti
or
jno
mov
and
and
inc
xor
mov
adc
lahf
mov
pop
data16
sbb
xchg
jbe
mov
cmp
aad
and
imul
mov
xchg
inc
jecxz
(bad)
push
jb
into
test
popa
repz
int3
mov
(bad)
imul
outs
call
inc
aad
loop
push
sbb
in
adc
lahf
jns
sub
out
ss
or
popf
aad
inc
inc
fcomi
call
push
mov
inc
sbb
cmp
mov
pop
lds
imul
mov
adc
xor
jne
pop
retf
dec
bswap
or
add
and
in
sbb
ret
into
xchg
daa
and
rcl
inc
push
shr
mov
jns
or
inc
jb
or
std
in
call
repz
clc
dec
add
test
adc
mov
out
cmp
push
jmp
jecxz
mov
retf
mov
and
test
xchg
add
mov
clc
or
dec
gs
or
lods
add
inc
mov
je
dec
cmps
xchg
fisttp
mov
sar
int3
test
mov
and
jle
mov
push
out
inc
lock
push
push
push
icebp
jo
dec
and
xor
and
sbb
push
add
mov
jmp
test
inc
sbb
cmp
lods
mov
lahf
in
ins
sbb
cmp
cli
les
xchg
(bad)
psubb
sbb
dec
dec
std
and
push
mov
lds
inc
dec
mov
out
stc
mov
push
xor
add
pop
test
movs
inc
cmp
mov
cmps
and
mov
dec
pop
mov
adc
lods
sub
inc
fadd
add
cdq
xchg
inc
ret
enter
push
dec
inc
and
arpl
inc
jg
dec
push
adc
jb
fs
ins
pop
mov
push
pop
xor
jae
cmp
xchg
out
repnz
inc
push
rcl
cdq
push
adc
cmps
hlt
jl
dec
stos
out
retf
stos
repz
pop
imul
cmp
sbb
jo
shl
je
ret
ficom
and
adc
inc
retf
lea
sbb
dec
retf
xor
repnz
out
fistp
pop
add
cmp
jb
lods
iret
inc
lahf
xor
and
sbb
mov
and
xor
xchg
test
icebp
xchg
push
cmp
inc
add
scas
pop
mov
xchg
into
mov
and
jle
inc
mov
inc
iret
cmp
mov
shl
jb
aas
int3
mov
icebp
mov
and
or
jb
mov
arpl
(bad)
pushf
mov
or
xchg
icebp
mov
push
stos
pop
add
(bad)
stc
out
mov
and
js
pop
sub
daa
les
pop
xor
call
sub
adc
adc
or
jle
xor
inc
xchg
sar
fwait
adc
sub
inc
outs
and
or
adc
jmp
addr16
mov
mov
or
cmps
adc
jno
mov
enter
lea
mov
dec
cmp
cli
push
loopne
out
sti
hlt
test
(bad)
sub
jecxz
fisub
cmp
pusha
fistp
cwde
stos
ins
jo
inc
test
sti
test
add
into
jp
retf
(bad)
mov
mov
sahf
inc
inc
dec
add
dec
cmps
adc
xchg
clc
fdivr
into
rol
fisttp
ja
pop
popa
lock
sbb
pop
stos
pop
outs
sbb
cwde
shr
inc
dec
scas
or
ins
dec
jns
mov
sti
sahf
outs
or
jmp
xor
stos
in
rcl
sbb
dec
popa
add
iret
sbb
data16
imul
xor
(bad)
jg
sub
in
test
sahf
sbb
and
xchg
xor
xchg
xor
test
jecxz
or
pop
(bad)
xor
(bad)
in
add
test
sub
js
cmp
jae
(bad)
pop
and
mov
cmc
or
mov
or
test
sub
adc
inc
ds
push
cmc
push
xor
cmp
mov
mov
push
ret
ror
mov
stos
sbb
inc
dec
test
xchg
rcr
xchg
aad
sbb
dec
cli
aas
jge
and
cld
nop
inc
inc
sub
ret
vpshufhw
mov
ror
cld
jnp
fwait
push
arpl
pop
fs
mov
cld
mov
pop
push
jb
(bad)
rcr
pop
ins
out
les
mov
mov
ror
sbb
ret
jno
icebp
outs
out
aam
mov
mov
cld
int
mov
push
mov
adc
push
sub
jecxz
inc
cmp
sbb
mov
adc
sbb
push
adc
add
push
scas
jp
dec
and
vmread
jb
loope
xchg
mov
cmp
mov
enter
cld
into
dec
xchg
add
cld
xchg
add
cmps
nop
jns
add
cmps
inc
rcr
sbb
cmp
sbb
call
xor
nop
arpl
add
add
scas
dec
call
cli
mov
xchg
sbb
rcl
repz
out
das
mov
cld
cmps
mov
test
data16
mov
mov
dec
mov
fmul
sub
inc
push
mov
jmp
mov
dec
outs
xchg
out
push
or
or
xchg
xor
das
rol
stc
or
neg
adc
dec
sub
fwait
dec
cmps
leave
sti
mov
jmp
aam
sub
das
jb
cmps
in
mov
hlt
out
ds
call
scas
push
popa
adc
lahf
cmp
push
aas
(bad)
les
daa
or
pop
fld
iret
leave
mov
jmp
adc
sub
pop
aam
in
fimul
jmp
nop
cmp
fiadd
mov
push
sti
mov
mov
js
pushf
jmp
xchg
(bad)
and
ins
push
dec
out
lds
dec
dec
stos
mov
test
mov
test
and
fwait
push
mov
test
pop
jmp
push
and
scas
imul
sub
int3
adc
vprotd
sub
push
ja
adc
fmul
adc
into
pop
dec
sub
xor
addr16
div
les
sub
outs
dec
outs
and
pop
retf
aad
jle
aas
inc
inc
cmp
aam
aad
cmp
mov
cmps
outs
cld
mov
mov
and
int
es
jo
cdq
push
ins
pop
stos
sbb
inc
lds
in
stos
loopne
fstp
shl
push
jecxz
inc
or
movs
test
cmp
sbb
cmp
dec
ffree
sub
jle
push
mov
push
pushf
xlat
cmp
xlat
add
inc
xor
sub
imul
hlt
dec
shr
xchg
lock
xor
inc
jns
ss
pop
jnp
(bad)
cmp
and
jno
fstp
jmp
test
sahf
xchg
movs
jmp
xor
pop
mov
ret
and
adc
xchg
jnp
imul
jno
out
mov
in
push
sub
xor
enter
ja
ins
cmp
push
arpl
iret
enter
add
mov
mov
test
cld
or
retf
mov
ins
pusha
je
or
imul
test
inc
push
icebp
rcl
out
fcmovu
stc
arpl
xchg
jnp
out
adc
adc
push
mov
lds
add
pop
ret
mov
dec
pop
cmp
push
sub
inc
jae
loopne
fdiv
add
sar
inc
(bad)
bnd
dec
or
sbb
mov
hlt
(bad)
lahf
fisttp
adc
imul
pop
sbb
(bad)
push
cmp
cdq
arpl
jp
cdq
sub
or
cmp
ret
je
mov
inc
nop
xchg
movs
pop
cmp
hlt
cmps
ds
in
pushf
sahf
cld
sub
test
sub
sub
mov
jb
adc
add
fisttp
in
mov
retf
cmp
mov
sbb
test
cmc
push
dec
sub
js
sbb
das
int
fdivr
pop
scas
inc
dec
ins
mov
(bad)
in
pop
out
imul
enter
mov
adc
dec
jg
data16
data16
pusha
shl
test
xor
fwait
mov
and
inc
je
and
fidivr
je
and
icebp
and
push
push
das
outs
cmc
sbb
repnz
mov
jmp
cwde
pop
test
hlt
imul
mov
inc
movs
jmp
mov
dec
aas
mov
sub
mov
in
sbb
sahf
aas
(bad)
loope
popf
bound
mov
test
dec
mov
(bad)
ficom
aas
cmc
cmp
xor
xor
inc
rol
mov
popa
xchg
leave
sub
hlt
into
lahf
out
mov
jns
in
pop
int
ja
mov
xchg
out
bound
inc
pop
jnp
push
mov
data16
adc
cmp
jge
cwde
out
shr
pop
cld
psllw
cdq
xchg
xor
mov
jge
mov
mov
xlat
jbe
jnp
test
mov
inc
les
push
movs
(bad)
jnp
inc
aad
shr
popf
(bad)
xor
dec
adc
iret
outs
js
ins
sti
mov
sbb
ret
shr
push
stos
sub
loopne
stc
xchg
mov
xchg
mov
ss
pop
sub
mov
adc
pushf
ret
mov
std
push
xchg
jmp
lock
movs
retf
xchg
dec
inc
mov
out
ficomp
mov
push
or
loop
or
popf
jmp
lods
in
sahf
jmp
cmp
stos
dec
xor
jne
mov
shr
lods
pop
mov
xchg
jne
sub
jb
xor
int3
xchg
int
cs
pop
adc
js
mov
and
xor
add
paddusw
mov
pop
push
push
fwait
aad
(bad)
iret
mov
xchg
cli
jb
test
pop
int3
xchg
xlat
movs
jns
lds
in
jle
dec
shl
or
ins
pop
ja
add
pop
pop
movs
les
imul
(bad)
sbb
mov
push
repnz
lds
cli
aas
fbld
dec
fwait
xor
(bad)
add
ja
jno
jge
out
pop
pop
js
sub
mov
(bad)
push
mov
push
xchg
mov
mov
ins
dec
outs
cs
push
out
and
jecxz
push
add
retf
xchg
lods
out
imul
das
out
popa
mov
test
or
xor
test
pop
inc
or
xchg
sub
sub
mov
enter
and
lods
(bad)
out
push
std
pop
shl
mov
pusha
pop
sbb
js
cdq
idiv
adc
or
xor
loop
ja
clc
loopne
dec
mov
add
leave
lock
in
dec
jns
push
xor
addr16
enter
dec
outs
sub
movs
les
pop
ret
jae
fwait
push
fadd
push
stos
inc
jns
cmps
icebp
inc
xlat
or
inc
xor
into
xchg
repz
and
xchg
in
(bad)
sbb
pop
sti
sbb
push
dec
or
jg
ins
cmps
or
ins
mov
nop
xchg
mov
es
xor
leave
xchg
imul
test
push
push
in
outs
jo
addr16
cmc
outs
outs
add
aaa
or
push
mov
cdq
imul
retf
sub
sbb
inc
arpl
or
out
sub
bound
movs
dec
push
repz
out
gs
and
in
sub
lahf
leave
cmc
adc
adc
mov
out
stos
sbb
jb
sub
or
pushf
addr16
add
imul
jmp
xchg
dec
jmp
sub
sbb
adc
call
fistp
repz
outs
clc
lock
pxor
sbb
mov
xchg
ds
fsub
fisub
inc
vmread
mov
ret
inc
imul
mov
mov
mul
scas
xchg
jmp
icebp
mov
cmps
adc
inc
popf
xor
pop
push
or
xor
or
jno
and
jecxz
sbb
das
xchg
scas
sub
adc
outs
fadd
xor
pop
push
sahf
xchg
fs
pop
mov
leave
mov
inc
jb
sbb
call
push
mov
(bad)
scas
test
cmp
inc
sahf
or
movs
stos
xchg
fwait
or
sbb
add
mov
inc
cmp
jmp
cmp
les
(bad)
sbb
adc
dec
stos
push
sub
or
es
push
and
xchg
push
pop
inc
jno
mov
dec
mov
(bad)
cld
popa
inc
xchg
leave
xchg
lahf
mov
adc
dec
push
cmp
rcr
add
cwde
xchg
into
clc
pop
mov
push
jle
int3
jmp
add
dec
mov
arpl
mov
fdivrp
mov
sbb
mov
pop
pushf
lock
inc
mov
test
add
fld
mov
xlat
call
xchg
push
leave
push
mov
call
dec
repz
mov
cmp
repz
scas
out
and
add
popf
(bad)
jmp
inc
cmp
push
dec
sahf
pop
push
pop
mov
repz
pop
in
jnp
pop
jecxz
inc
mov
mov
data16
mov
fdiv
cmc
popa
inc
pop
sbb
mov
sbb
jge
cmp
xor
test
and
lock
fsub
pop
imul
mov
jg
xor
sbb
outs
pop
xchg
cmp
adc
xchg
dec
xchg
sbb
pop
scas
xor
ins
(bad)
stc
fisub
movs
jno
jge
bound
das
jbe
or
pop
mov
mov
shr
pop
push
pop
lahf
push
nop
sbb
out
das
fldcw
adc
mov
or
adc
adc
pop
in
data16
mov
int3
call
std
repz
pop
mov
xor
sbb
sbb
xchg
cmps
cmp
jb
sahf
xchg
aaa
mov
std
mov
int
push
leave
(bad)
jg
imul
addr16
and
les
(bad)
xchg
xchg
jp
inc
push
mov
xchg
jno
or
call
xchg
xor
mov
jg
mov
inc
loope
call
push
mov
sub
cmp
(bad)
mov
push
push
mov
div
add
cld
inc
retf
mov
pop
dec
mov
loopne
pop
push
loop
pop
(bad)
int3
mov
std
test
imul
jb
hlt
pop
mov
pop
and
test
out
jnp
(bad)
mov
shr
icebp
pop
cs
and
xchg
aad
add
mov
add
in
test
out
int3
fwait
dec
out
xchg
ins
inc
mov
in
popa
add
mov
(bad)
xlat
retf
loop
jo
mov
jge
sub
mov
dec
fs
clc
div
sahf
cld
stos
mov
jae
mov
push
test
call
mov
in
push
setg
cwde
test
adc
or
pushf
shr
mov
mov
and
in
sbb
mov
push
sub
xchg
cmc
dec
mov
xor
mov
adc
test
jp
jbe
icebp
mov
fst
mov
xchg
xchg
bound
(bad)
into
inc
pop
jge
mov
bound
xchg
aas
and
cwde
push
mov
not
mov
jmp
outs
adc
shl
ja
inc
aad
xor
fst
daa
mov
(bad)
sbb
pushf
xor
fsub
imul
lock
dec
adc
neg
ja
repnz
push
mov
inc
sbb
inc
mov
push
mov
mov
sub
jo
xor
mov
or
push
cmp
popf
sbb
mov
jne
mov
fistp
jmp
leave
and
adc
mov
sbb
inc
es
inc
ins
adc
jne
mov
into
jl
sahf
dec
fiadd
pop
mov
lahf
lea
imul
stos
pop
dec
xchg
push
jbe
sbb
jecxz
fcmovu
pop
xlat
pop
ins
jg
jp
and
add
movs
adc
(bad)
ins
sti
or
sbb
idiv
or
pop
in
adc
loope
ret
inc
das
fwait
adc
leave
inc
jl
mov
mov
inc
fcmove
cmp
adc
dec
add
int3
ret
or
inc
(bad)
and
je
retf
out
mov
movs
ret
adc
(bad)
or
adc
iret
mov
jecxz
inc
mov
arpl
repnz
jno
sub
scas
loopne
xlat
fadd
add
or
adc
mov
stos
adc
or
cmp
sub
dec
mov
sti
jmp
adc
jne
das
call
jl
pop
loope
and
int
sti
adc
inc
inc
bnd
xchg
sbb
fst
add
test
leave
ss
mul
mov
and
inc
mov
mov
dec
dec
stos
cmp
repnz
sub
push
mov
xchg
sub
jb
sub
in
pushf
adc
and
xchg
pop
cwde
and
jb
fdiv
mov
mov
ds
xor
in
scas
icebp
add
inc
inc
scas
inc
shl
xor
mov
mov
push
leave
leave
inc
test
and
mov
push
loope
ins
dec
mov
std
in
outs
jne
push
in
ret
sub
mov
cmp
cmc
pop
int
mov
ds
fnsave
outs
xor
xor
and
push
push
cmp
lea
and
adc
imul
pop
lds
pop
sahf
mov
stos
in
mov
cmp
ins
and
or
dec
ss
cmp
js
call
push
sub
mov
retf
pop
xor
ficom
mov
out
jg
push
xchg
mov
mov
retf
cdq
add
sahf
lods
fisubr
hlt
inc
cmp
call
inc
daa
ret
lods
in
sbb
mov
adc
imul
add
adc
neg
stc
repz
loop
arpl
scas
into
or
clts
xchg
adc
fisub
and
sub
dec
out
pop
adc
sbb
movd
mov
sub
sub
rep
mov
bound
jae
fidiv
sbb
je
bound
sbb
inc
clc
xlat
xor
xor
movs
sub
xchg
sub
add
xchg
nop
xor
dec
adc
ss
aas
mov
ja
sub
nop
call
jo
xchg
pusha
mov
push
mov
pop
(bad)
jmp
mov
adc
daa
icebp
call
mov
fadd
jae
ins
imul
dec
addr16
xchg
ret
add
push
mov
mov
jns
add
arpl
pop
push
xchg
mov
push
movs
cmp
movs
(bad)
mov
repz
jp
adc
push
mov
or
clc
rcl
or
jmp
cmp
mov
add
out
ja
neg
xchg
daa
jns
cmp
pop
xchg
cmp
pop
fs
test
fnsave
adc
cs
push
pop
scas
call
daa
inc
repz
icebp
dec
not
xchg
repnz
add
xor
dec
adc
aaa
test
mov
cdq
bsf
jae
cmps
sbb
push
dec
sahf
hlt
mov
push
ja
dec
rcl
mov
cmp
daa
sysret
mov
les
cmps
dec
sub
pushf
test
adc
std
out
aaa
sub
int
icebp
adc
jl
cmc
cmps
test
mov
sub
pop
ret
ror
ficomp
cli
and
mov
imul
mov
rcr
rcl
sbb
cmp
gs
sbb
mov
popf
out
xchg
dec
arpl
inc
dec
nop
add
loope
test
shl
sub
mov
mov
cdq
fs
pop
cwde
fidiv
pop
lock
xor
retf
mov
cwde
jg
in
retf
clc
sbb
icebp
loope
xor
push
sbb
mov
lea
mov
inc
push
mov
ja
dec
adc
int3
add
cs
cmp
pushf
push
and
gs
mov
and
dec
inc
imul
cs
add
jbe
mov
mov
jnp
xchg
ds
mov
nop
push
pop
inc
or
rol
cli
imul
xchg
xor
or
scas
retf
jns
dec
in
mov
adc
aas
out
inc
jmp
in
les
ret
ror
fcomip
int3
sbb
movs
(bad)
mov
mov
push
les
adc
retf
xor
repz
and
cwde
add
xor
punpckldq
jnp
push
mov
mov
lock
pop
push
les
(bad)
mov
(bad)
popa
cmp
mov
and
mov
pop
(bad)
dec
popf
jne
shl
xchg
and
cmps
add
retf
movs
xor
or
stos
mov
arpl
popf
inc
mov
ja
into
ins
xor
out
in
dec
loope
jp
pop
int
clc
lahf
and
push
mov
aad
pop
in
push
sub
adc
mov
fisub
into
ins
in
cmp
mov
mov
adc
lahf
or
jecxz
or
int
adc
add
rol
mov
inc
mov
pushf
mov
std
test
ins
sub
aaa
inc
jle
ins
fadd
cmp
or
icebp
sub
fst
imul
mov
lods
jbe
fbld
out
movs
pusha
xor
ins
fcom
mov
jmp
gs
loop
fnstsw
fist
jbe
mov
call
js
pop
dec
mov
mov
adc
mov
fiadd
cmp
sbb
mov
test
leave
mov
xchg
je
outs
lea
xchg
dec
dec
sbb
in
rcl
lock
and
outs
mov
rcl
sahf
xlat
xchg
cld
in
ins
call
inc
inc
ins
(bad)
bound
call
or
pusha
mov
pop
mov
mov
jno
mov
add
in
out
adc
jge
sub
lock
jbe
add
sbb
movs
jbe
or
int
call
int3
fcmovnu
mov
fidivr
mov
sub
aam
jge
fcom
vmovupd
dec
xchg
add
loopne
enter
pop
pop
mov
mov
adc
stos
sbb
(bad)
leave
sbb
dec
ja
pop
jnp
shl
bound
add
nop
or
inc
xor
fdiv
jns
mov
jbe
dec
hlt
lods
ret
arpl
add
xor
push
test
js
xchg
shl
cmp
mov
xchg
ret
iret
push
pop
pop
jnp
pop
xchg
repz
pop
mov
or
fadd
adc
dec
cmp
push
sahf
add
scas
mov
mov
call
sub
(bad)
(bad)
sub
nop
fild
jmp
xchg
test
out
dec
cli
mov
mov
out
sbb
aas
setge
push
leave
aad
pop
or
ja
aam
popa
pop
stos
ret
push
pop
xor
add
cmp
lods
cdq
repnz
adc
out
add
inc
(bad)
xchg
xchg
in
push
push
pop
pop
sub
sbb
inc
or
mov
push
jb
jmp
test
sbb
retf
popa
sub
or
dec
test
pop
and
lock
in
cmps
sbb
ja
loope
imul
jbe
push
repnz
xchg
(bad)
mov
jbe
into
mov
imul
add
cwde
and
add
mov
adc
inc
add
fimul
aaa
sbb
adc
lods
out
inc
outs
loope
jno
adc
push
gs
or
xchg
mov
scas
pop
adc
cmps
in
add
fs
mov
lock
adc
pop
popf
test
out
or
fstp
push
push
jge
inc
data16
es
out
lds
mov
or
hlt
out
or
cwde
add
fld
mov
mov
lds
lods
pop
mov
xchg
stos
call
adc
dec
jp
lock
cwde
lock
mov
xchg
cwde
sub
aam
ins
adc
retf
jb
cs
jl
sub
pop
int3
jmp
xor
int
loope
cmp
sub
imul
movs
rcr
popf
ret
enter
cmp
or
inc
inc
add
or
xor
adc
add
mov
jg
(bad)
push
out
sub
(bad)
in
sub
lahf
jns
pushfw
add
cs
dec
jo
cs
lods
sbb
cld
jecxz
push
inc
por
pop
movs
mov
jb
xchg
fild
mov
inc
int3
(bad)
sbb
sar
or
pop
in
pop
mov
cmc
sbb
popa
mov
xchg
popa
test
push
inc
jne
mov
add
mov
loope
cmc
pop
loope
jmp
daa
jae
sub
aam
call
icebp
pop
ins
pop
fbstp
(bad)
mov
xor
mov
imul
mov
stos
mov
dec
and
adc
and
and
sub
cli
lea
les
out
fild
lods
pop
js
jl
(bad)
jo
call
mov
popf
test
lahf
push
sahf
call
mov
(bad)
sbb
das
push
lea
out
ja
xchg
in
pop
dec
call
(bad)
fisttp
push
adc
jg
aas
dec
les
(bad)
sbb
out
add
xchg
movs
test
or
add
ds
fnstenv
cdq
xchg
(bad)
(bad)
fnstenv
adc
mov
aas
inc
push
ret
outs
in
inc
dec
push
mov
cli
dec
data16
sbb
and
iret
jbe
repnz
in
fsub
lods
push
jp
aas
xchg
pop
movs
inc
mov
aam
sub
cld
xor
dec
leave
push
mov
int
imul
push
adc
push
jns
or
jbe
rcr
lods
scas
cdq
add
out
popa
and
stos
cmp
retf
sahf
adc
lods
movs
movs
mov
xchg
mov
adc
dec
push
(bad)
in
xor
xor
sub
dec
out
inc
imul
in
fbstp
mov
unpcklps
cmp
mov
add
mov
and
mov
cmp
stos
xchg
pop
fidivr
xor
scas
xor
addr16
cli
call
lea
in
shr
sub
or
push
xor
mov
lock
in
push
push
xchg
adc
dec
loope
cli
jmp
test
jp
int3
lds
fmul
add
inc
sar
adc
in
popa
add
cmp
test
scas
cmc
adc
push
int
sti
xlat
ins
out
bound
cmp
xchg
and
mov
and
rol
push
adc
push
rcr
ret
mov
arpl
xchg
fsub
stc
jnp
test
test
test
jp
add
xchg
xor
ss
mov
sub
outs
pusha
and
and
loopne
xchg
sub
(bad)
movs
mov
enter
iret
imul
addr16
xchg
hlt
jns
sub
mov
jmp
out
repz
cs
jg
dec
std
cmc
xchg
jno
int
cmps
test
adc
inc
sub
adc
sbb
jle
imul
dec
jp
push
add
adc
cs
xchg
dec
scas
xchg
xchg
inc
mov
xor
fs
xchg
adc
not
adc
sbb
xor
not
sti
mov
mov
lea
add
cmp
out
sub
jecxz
push
mov
out
fld
stos
into
outs
and
mov
inc
add
or
add
mov
sbb
and
fisttp
or
mov
push
lahf
or
lock
movs
mov
mov
es
push
aas
cmc
icebp
cmp
adc
add
or
add
(bad)
jno
push
hlt
int
icebp
ins
xchg
pop
das
pop
fidivr
sub
out
sti
cmps
imul
icebp
sub
add
mov
aas
loope
push
and
repz
dec
test
stos
xchg
out
cmp
dec
lds
and
popf
fsub
(bad)
lds
dec
jnp
or
xor
lock
das
fwait
and
cdq
and
fs
in
movs
cmp
test
mov
sti
push
add
hlt
mov
cmp
test
movs
and
(bad)
scas
push
pop
fdivp
(bad)
or
xchg
pop
xchg
sbb
leave
mul
pusha
leave
add
ds
loop
push
pop
push
push
mov
inc
mov
adc
push
jbe
mov
mov
jne
addr16
test
jle
mov
repnz
shl
mov
loopne
cmp
cs
movs
or
loope
iret
ret
ds
adc
or
cmps
loopne
ror
adc
retf
test
std
cdq
lods
outs
jp
push
aad
sub
push
xor
jno
xchg
inc
or
mov
popa
sub
pop
cld
je
push
pop
pop
out
mov
fcomi
test
and
xor
adc
pop
shr
mov
xchg
push
fdivr
jle
xlat
jp
xchg
xchg
sar
xor
add
out
mov
cmps
out
jnp
push
add
pop
dec
xchg
sbb
push
xchg
vmovntps
popa
test
mov
pop
add
add
inc
mov
out
or
adc
fadd
addr16
pop
dec
aas
outs
xchg
aaa
xor
push
pop
ins
sub
retf
imul
sbb
mov
mov
adc
inc
cwde
cmps
xor
jae
or
aaa
mov
outs
or
shl
cs
cmp
and
mov
push
push
cmp
repz
mov
aas
mov
push
fldcw
mov
imul
dec
push
dec
xchg
pop
(bad)
fld
test
lds
adc
jae
pop
pop
mov
mov
push
imul
cmp
and
push
xor
xor
mov
outs
sbb
test
iret
sahf
inc
or
fwait
in
mov
sub
fcom
mov
ja
cdq
sub
cmp
jno
retf
inc
ss
push
mov
fisttp
sbb
sub
push
jle
mov
dec
push
fld
mov
sub
mov
imul
sub
cwde
pop
xor
push
sbb
ins
test
xor
test
adc
out
cmp
cmps
xor
xchg
in
sbb
pop
inc
sbb
scas
cmp
pop
not
popa
inc
push
ins
and
xor
stos
xchg
and
neg
call
mov
and
cmp
in
int
and
fsubr
add
popf
(bad)
mov
xor
shl
loope
push
xchg
sbb
mov
stc
in
fdecstp
mov
xchg
rcl
out
push
lods
(bad)
mov
inc
sub
outs
or
dec
and
or
(bad)
lock
neg
ds
movs
adc
or
pop
data16
jge
cmps
sbb
mov
aas
or
inc
jle
pusha
pop
cld
and
rol
les
sahf
mov
loope
daa
out
mov
into
into
lods
pushf
mov
jp
enter
lea
sub
out
dec
and
dec
out
movs
xchg
jmp
mov
ror
cmps
mov
ret
loop
imul
dec
jle
(bad)
js
inc
leave
mov
mov
cmp
pop
imul
jno
and
aaa
test
rcr
or
mov
int
xchg
(bad)
or
js
mov
out
xchg
sub
sti
das
dec
xchg
cmps
xor
or
enter
or
xchg
test
pop
xor
jmp
mov
dec
pop
mov
xchg
das
cmp
add
int3
dec
jae
adc
jo
daa
arpl
sbb
in
sub
test
jl
bound
mov
loopne
jecxz
xor
call
imul
mov
fnsave
loopne
(bad)
ucomiss
jp
gs
pop
(bad)
ins
dec
xchg
les
clc
inc
or
push
xchg
cli
dec
pop
xchg
jae
pop
mov
sbb
imul
stos
pop
xchg
push
and
xchg
or
mov
mov
out
cld
out
fsubr
pusha
popf
xor
ins
adc
mov
clc
or
jecxz
inc
or
push
lods
fxch
in
sub
mov
pop
push
ja
pop
test
out
aam
jbe
adc
rcl
and
mov
arpl
icebp
sub
xchg
pop
das
int3
jb
fld
hlt
mov
std
lods
hlt
int3
fdiv
jnp
neg
out
lds
dec
ss
add
sbb
push
jnp
imul
lahf
aam
xor
mov
pop
sbb
fild
cdq
cmp
xchg
add
ins
cld
rol
daa
into
jbe
push
mov
adc
cli
(bad)
cmp
sbb
ja
mov
mov
push
pop
in
push
adc
inc
std
lock
mov
pop
lods
sbb
ins
je
mov
jns
pop
xchg
ins
fld
retf
bound
dec
push
and
js
push
repnz
or
fidivr
adc
jb
pop
jo
mov
sbb
push
sub
in
cmp
mov
sti
mov
scas
inc
xchg
mov
inc
daa
xlat
pop
popf
repz
(bad)
cmp
adc
enter
add
mov
dec
pusha
xor
mov
jmp
je
mov
ins
jbe
sub
xor
pop
cmp
aaa
scas
call
fisub
je
push
mov
(bad)
ret
dec
aas
sub
in
mov
jnp
sbb
sar
jecxz
or
adc
arpl
or
xor
sbb
sbb
jae
into
inc
add
mov
add
dec
sbb
(bad)
jp
stc
xchg
mov
lods
repnz
or
lock
xor
(bad)
aad
in
pop
cmp
stos
outs
inc
aam
add
mov
xor
mov
les
aas
jmp
fidiv
les
and
bound
movs
out
inc
push
mov
inc
retf
xor
add
fsub
fucomp
cli
xchg
xchg
jbe
sbb
fsubr
inc
xchg
mov
sub
mov
xor
pop
adc
jnp
cmp
xchg
mov
pop
mov
and
shr
and
jns
inc
std
xor
popf
inc
add
movs
ror
movs
out
pop
gs
test
les
(bad)
leave
mov
ror
sub
(bad)
xor
push
dec
fsub
mov
mul
int
jl
and
or
cld
sahf
pop
or
fcomp
in
in
stos
ds
and
in
inc
xchg
ret
mov
pop
(bad)
in
dec
inc
cmps
mov
stc
ss
inc
lds
xchg
(bad)
sbb
jmp
in
cmp
pop
das
inc
xor
adc
addr16
in
sub
sti
retf
arpl
ins
popa
out
xchg
out
retf
cmps
rol
test
dec
and
jge
sbb
add
leave
sar
mov
adc
leave
dec
push
xchg
dec
xchg
or
adc
or
add
lea
mov
lods
cmp
ficom
add
dec
add
data16
jg
and
inc
mov
pop
outs
cmp
pushf
pop
gs
mov
pop
ins
adc
clc
mov
(bad)
jmp
nop
push
retf
(bad)
cmp
sub
addr16
pop
xchg
push
imul
arpl
jl
mov
mov
call
das
mov
mov
inc
cmp
push
xlat
sahf
mov
jns
addr16
ins
mov
sbb
adc
sbb
dec
gs
icebp
dec
xor
mov
cmps
mov
neg
loop
inc
(bad)
lahf
es
dec
lods
jp
push
mov
mov
je
jns
or
sub
mov
fwait
bound
xchg
cld
inc
push
rcl
pop
cmc
jmp
xchg
and
mov
sbb
or
push
or
sub
out
jb
lods
and
inc
mov
stos
mov
ins
jo
mov
mov
(bad)
cmp
add
adc
scas
fiadd
lods
mov
dec
in
mov
pop
cmc
and
xchg
inc
mov
loope
cdq
pop
dec
and
sub
mov
mov
cmp
out
jl
aaa
or
es
repz
rcr
jle
sar
mov
adc
call
fld
dec
ins
inc
ficomp
into
push
outs
(bad)
stc
test
fsub
pusha
clc
cmp
or
dec
inc
sbb
xor
add
stos
fwait
aaa
jne
sar
ss
popf
cdq
std
and
lods
or
aam
shl
fld
jns
fst
sbb
xor
jg
mov
fnstenv
jmp
retf
adc
in
jno
pop
push
icebp
jp
in
or
jo
cmp
test
cmp
push
pop
into
movs
imul
scas
int3
sbb
jmp
rol
or
popa
xchg
pop
pop
inc
test
scas
adc
jp
add
push
jns
pusha
or
cdq
retf
sub
stos
or
fwait
pop
jnp
pop
mov
outs
adc
(bad)
out
sbb
test
int
in
add
in
imul
std
mov
push
mov
sbb
les
mov
lock
clc
in
jb
fwait
or
sar
dec
cmp
add
jnp
adc
repz
pop
inc
pop
(bad)
jnp
fwait
retf
stos
adc
mov
and
pop
imul
ret
(bad)
inc
mov
mov
imul
cmc
or
pop
stos
mov
fs
jge
pop
dec
push
mov
mov
shr
shl
add
out
stc
int
aaa
rcl
pop
std
xchg
mov
inc
add
ins
(bad)
fisttp
cmp
hlt
loope
and
fisubr
adc
dec
mov
fld
sub
stc
outs
movs
mov
or
stos
lock
stc
cli
pop
push
jo
jle
pusha
addr16
inc
jns
sub
iret
pop
and
mov
and
shr
popa
(bad)
sahf
cmc
in
pop
mov
pop
jbe
pop
imul
je
push
out
jne
ins
push
js
enter
movs
pop
out
mov
push
loop
push
mov
lods
mov
jmp
jmp
ins
(bad)
imul
cmp
cmp
movs
cli
sbb
sub
mov
lds
(bad)
mov
lods
mov
mov
mov
in
(bad)
clc
pusha
add
fiadd
dec
push
int
mov
(bad)
lahf
adc
mov
out
and
movs
lock
xchg
(bad)
std
ja
lea
popf
adc
in
sub
or
test
push
sbb
pop
sbb
cmp
inc
retf
xlat
out
cmp
pop
sub
addr16
popa
icebp
jbe
xchg
adc
sub
mov
xchg
and
cmps
add
imul
adc
dec
xchg
jbe
fsubr
sbb
or
or
(bad)
daa
adc
cmps
shr
mov
out
adc
lds
shl
inc
cdq
jmp
inc
mov
je
jo
adc
xchg
movs
xor
aam
daa
sbb
push
ins
add
cmp
ror
lock
pop
shl
or
sub
sub
cld
idiv
in
push
xor
stc
xor
xchg
ins
in
mov
jmp
shl
sbb
adc
mov
cld
pop
aas
lods
mov
(bad)
fst
imul
xchg
(bad)
imul
mov
push
(bad)
mov
popa
dec
inc
sbb
rol
mov
scas
ret
das
sub
xchg
cmp
push
mov
sbb
neg
jge
movs
jg
or
jae
popa
push
xor
xor
push
sub
xor
push
jnp
sub
pop
jbe
xor
xor
cmps
mov
mov
icebp
jecxz
(bad)
cmp
out
movs
fiadd
aam
push
arpl
xchg
mov
add
ret
and
cmp
daa
cwde
jmp
popa
(bad)
mov
jp
rol
xchg
fistp
dec
shl
pop
(bad)
aaa
push
out
jge
aaa
nop
jnp
mov
in
ret
or
sbb
jne
test
add
cmps
jg
mov
fucomip
dec
push
adc
sahf
mul
mov
popa
or
pop
mov
fcomp
dec
pop
sti
cs
and
mov
sub
iret
push
sub
xchg
je
add
icebp
inc
or
cmp
shl
xor
jo
(bad)
rcr
jmp
xor
xor
jmp
sbb
inc
mov
popf
push
mov
arpl
js
outs
cmc
pusha
xchg
push
lahf
vcvtsi2ss
sub
pop
mov
mov
sbb
push
popa
cmp
pop
push
pop
shr
call
into
jle
call
jne
(bad)
bound
js
icebp
out
jae
rcl
mov
xor
cmp
mov
pushf
icebp
cmp
pop
cmp
or
jae
(bad)
arpl
fcomi
outs
dec
not
in
jno
mov
mov
mov
dec
popa
dec
xchg
mov
push
ja
dec
push
or
ds
enter
pop
push
and
cld
ja
xor
xor
jbe
ror
sub
sbb
push
xor
in
pop
aas
out
(bad)
cmp
(bad)
iret
adc
mov
dec
pop
fstp
add
inc
cld
cld
adc
nop
mov
jo
mov
cmp
gs
ror
stos
inc
mov
repz
sbb
sbb
inc
dec
ficomp
aad
arpl
in
mov
pop
or
int
ret
call
adc
jb
lea
jl
xchg
call
mov
push
ja
test
cmp
add
xor
(bad)
scas
rcl
loop
sbb
and
and
lahf
jnp
es
sbb
xor
push
sbb
add
ins
ret
sbb
push
std
jne
and
enter
sbb
jle
or
aad
outs
mov
inc
stos
enter
lahf
loope
or
or
mov
fnsave
addr16
leave
rcl
or
lds
inc
fstp
lods
push
mov
gs
mov
fs
jl
ficom
outs
lock
mov
jle
or
es
lea
mov
imul
(bad)
sbb
aad
xor
and
ds
mov
imul
clc
js
hlt
adc
out
pushf
fwait
xor
jg
loopne
adc
push
js
mov
pop
xchg
cmps
cmp
in
inc
jge
xor
pop
mov
mov
add
mov
aad
ror
ret
ds
adc
popa
xrelease
in
dec
xchg
jp
add
mov
ds
pop
mov
xchg
inc
and
popf
push
in
rcl
scas
icebp
xchg
sub
movs
jg
xor
push
fcom
xchg
cmp
fild
dec
int
ss
(bad)
cmps
jge
jp
dec
fadd
popa
mov
dec
sbb
repnz
pop
jne
lahf
cld
mov
std
jb
cmps
inc
in
or
xchg
out
loop
dec
push
xchg
iret
scas
and
arpl
mov
ss
jae
popf
imul
mov
pop
enter
call
js
xlat
loopne
call
sub
in
and
cs
sub
stos
ret
jmp
les
int
jb
mov
imul
js
mov
push
xor
pusha
lds
gs
sti
mov
jp
sysenter
daa
in
enter
push
pusha
in
lock
xor
in
push
retf
jb
scas
adc
les
imul
test
in
icebp
mov
or
inc
pusha
xor
cs
inc
xchg
aam
cmps
stc
int
daa
lock
lahf
push
repnz
and
loop
adc
xor
popa
aaa
xchg
lods
or
sub
jne
xchg
sbb
lahf
xchg
repz
stc
jmp
in
int3
xor
enter
pop
pop
adc
shl
jbe
cmp
push
mov
retf
push
not
lds
fcom
jg
pusha
sub
pop
daa
jmp
pushf
push
lfs
inc
mov
bound
call
(bad)
adc
(bad)
jo
stos
stc
sub
es
mov
in
ss
or
xlat
repz
lock
xor
xor
xor
rcr
inc
cwde
out
sbb
mov
jno
push
scas
add
sub
and
cmp
push
xchg
or
in
int3
ret
(bad)
xlat
xor
pop
cs
mov
sahf
add
inc
cmp
ror
mov
dec
scas
stos
(bad)
aaa
adc
pop
imul
cmps
inc
and
and
push
hlt
mov
push
ret
mov
add
jl
add
pop
sti
xchg
add
imul
mov
mov
or
cdq
std
adc
adc
xor
dec
dec
test
inc
fisub
jmp
ret
xrelease
sar
enter
repnz
mov
sub
jns
inc
sub
push
jnp
xlat
cld
cwde
or
imul
popf
cmc
fidivr
inc
jae
jnp
data16
cmp
fiadd
mov
mov
and
das
and
mov
ficom
sahf
pop
loopne
cmp
outs
sar
sub
add
es
rcr
(bad)
in
fld
inc
repz
ror
daa
rcr
cmp
xor
cmp
gs
pmaxsw
loopne
push
push
xchg
cli
sti
ret
les
push
or
js
stos
xlat
xchg
fld
inc
stos
add
test
ret
sar
ins
test
jcxz
mov
add
in
jno
xchg
xchg
adc
scas
inc
imul
mov
scas
frstor
mov
hlt
cmp
int
cmp
sub
(bad)
(bad)
outs
xchg
cmp
cli
enter
push
jmp
popf
js
jbe
pop
lods
call
test
push
mov
sbb
xor
xchg
sahf
and
push
jne
jne
pop
add
je
aam
xor
inc
dec
sbb
ins
mov
daa
mov
in
xchg
lahf
cdq
pop
repnz
jmp
jns
mov
mov
and
cmps
cmp
test
mov
jb
loop
dec
sti
dec
jno
cmp
retf
ja
retf
bound
(bad)
int
cs
push
adc
hlt
ret
sbb
hlt
repz
fnstsw
clc
(bad)
out
xor
ret
int
popf
cld
xor
daa
je
sub
aam
imul
(bad)
enter
lock
inc
fisttp
add
adc
and
jge
xchg
sub
call
adc
stos
jmp
sub
jae
xchg
dec
mov
cmp
cld
(bad)
mov
loope
cmp
std
(bad)
xor
ins
fwait
jg
jmp
cmp
mov
xchg
sub
push
sbb
and
mov
cmp
mov
fwait
idiv
mov
jp
adc
cmp
sbb
fdivr
fcom
shl
mov
dec
scas
xchg
test
je
mov
jns
pop
popa
gs
push
or
pop
lods
idiv
pop
ja
pop
shl
add
push
cmp
leave
and
ins
outs
fisttp
inc
xchg
jmp
jo
bound
shl
cmp
stos
inc
cwde
xchg
enter
or
(bad)
adc
lea
in
sub
jmp
cli
mul
daa
lods
fs
cmc
inc
ins
mov
pop
jecxz
mov
jecxz
fwait
scas
sub
inc
pop
sbb
and
mov
sbb
imul
iret
dec
enter
mov
and
inc
dec
inc
rcl
pop
push
xor
mov
in
mov
rcl
mov
pop
xor
push
adc
gs
mov
pop
fwait
inc
sub
mov
jbe
test
sbb
or
fild
inc
jl
(bad)
enter
sar
imul
xchg
xchg
out
scas
stc
cmp
lods
cwde
jmp
lods
ret
adc
push
add
imul
rcr
xchg
mov
fimul
dec
push
loope
or
and
outs
repz
loopne
pop
pop
cmps
jg
push
outs
xchg
push
dec
lods
(bad)
mov
xor
nop
pop
jmp
cmp
lds
sar
mov
push
pushf
(bad)
out
loopne
add
mov
bts
xor
or
mov
in
jp
(bad)
addr16
imul
fstp
push
fld
push
mov
int
sahf
xor
call
jl
cmovne
outs
push
addr16
xchg
add
mov
je
and
xor
push
and
push
into
loope
(bad)
inc
in
jg
adc
dec
es
push
cld
ds
xchg
xlat
jbe
shr
jge
sti
movs
aad
imul
or
lods
inc
hlt
out
pop
enter
add
das
jnp
sub
movs
push
xchg
push
mov
jnp
xor
in
jmp
adc
ret
sub
mov
aad
test
jmp
in
(bad)
cld
ror
scas
ret
cdq
leave
sbb
push
jmp
mov
sbb
and
adc
pop
or
and
dec
adc
gs
or
stos
add
dec
jecxz
mov
out
xor
retf
iret
cmps
xchg
inc
jne
add
mov
sbb
nop
sbb
scas
movs
push
stos
imul
clc
loop
hlt
imul
addr16
and
dec
pop
dec
gs
fwait
xchg
pop
xchg
pop
lock
add
aad
stc
adc
xchg
div
outs
dec
test
data16
call
into
mov
(bad)
retf
xchg
(bad)
cwde
ss
add
add
add
jl
das
or
or
arpl
movs
push
inc
or
enter
pop
pop
mov
popa
sbb
clc
js
mov
and
jnp
sbb
or
inc
add
jge
jae
inc
sti
hlt
sbb
ins
inc
mov
sbb
cld
xor
sub
push
popa
or
in
cmp
dec
add
repz
xchg
jle
shl
xor
or
stos
fwait
pop
jb
mov
cmp
push
jo
mov
or
addr16
mov
sar
scas
fcomip
scas
and
add
mov
in
or
leave
(bad)
pop
sub
dec
ds
sar
dec
daa
loop
fild
in
dec
popa
bound
jo
adc
imul
cmp
sbb
loopne
inc
jmp
push
ins
jecxz
xor
lods
push
scas
jno
inc
cmp
nop
out
xchg
lock
je
mov
jecxz
(bad)
(bad)
ja
xchg
sahf
pop
jmp
out
dec
jecxz
pop
mov
outs
adc
jmp
pop
popf
push
mov
rcl
jp
jb
punpckhdq
dec
or
mov
nop
ss
mov
xchg
mov
sub
push
aam
jp
xor
xor
test
sbb
or
or
push
jb
xor
test
adc
sub
ss
fstp
dec
popf
inc
xchg
sub
dec
popa
das
adc
jl
sbb
mov
loop
push
lahf
mov
cmc
inc
in
fimul
stc
ds
inc
push
xor
fwait
clc
mov
pusha
arpl
retf
loopne
scas
loop
shr
cld
icebp
sbb
dec
pop
sbb
das
iret
cwde
ror
cdq
mov
mov
push
add
mov
clc
or
loopne
adc
xchg
clc
sbb
mov
daa
(bad)
xlat
push
sub
cmp
or
xchg
and
push
xlat
shl
call
aad
rcr
jmp
stos
retf
xor
cmp
arpl
mov
cmp
outs
push
imul
and
mov
dec
mov
lds
fbstp
fsubr
mov
mov
sub
fisubr
jecxz
add
shl
mov
fstp
inc
out
cdq
sbb
fst
imul
movs
imul
sbb
fcmovb
sbb
inc
(bad)
sti
xchg
popa
test
ret
gs
fcmove
retf
fbstp
mul
iret
shl
mov
arpl
adc
(bad)
sar
jmp
movs
jbe
jae
push
or
add
sub
aas
stc
iret
xor
xor
pop
and
movs
sti
into
xor
and
jp
lock
ret
(bad)
dec
mov
hlt
mov
pop
std
pop
xor
jmp
mov
out
in
sub
or
add
cmps
imul
test
adc
dec
cmc
clc
mov
sub
and
dec
xchg
dec
inc
add
push
add
mov
jno
xchg
xchg
popf
jg
fidivr
jg
fldenv
and
ss
fdivr
into
movs
int
clc
push
add
(bad)
or
mov
popf
ret
sbb
and
rcl
push
scas
inc
mov
mov
jo
inc
(bad)
sbb
dec
jp
retf
inc
jp
jle
sub
repnz
jne
rcl
and
pop
fadd
jle
or
(bad)
je
jge
cmp
xchg
push
or
push
inc
inc
test
add
imul
(bad)
and
push
pop
cmp
cmps
scas
cmps
out
xchg
stos
add
stos
fwait
xlat
xchg
fucomi
loope
mov
aad
jl
in
push
js
adc
fmul
and
sbb
sbb
xor
neg
cmc
call
out
jge
pop
loop
dec
loop
and
or
dec
pop
pop
push
nop
imul
retf
(bad)
out
push
inc
ins
mov
je
ss
dec
pop
push
je
fs
test
push
cmps
add
call
push
jl
mov
jle
mov
aaa
jnp
out
daa
mov
adc
jp
es
mov
mov
fsub
std
mov
adc
into
push
sub
loopne
aaa
ins
sar
cmp
and
test
inc
test
mov
test
dec
cmp
push
fidiv
popa
xor
pop
adc
cmp
adc
jg
mov
inc
aad
pop
pop
rcl
test
mov
nop
mov
adc
test
xchg
fsubr
out
popa
cmps
and
sub
push
mov
int
pop
(bad)
pop
not
and
push
fldln2
dec
cmps
inc
sub
fdivr
cmp
aam
sub
xor
mov
stos
sub
dec
dec
lahf
cmc
mov
jo
aad
lea
or
push
out
rcl
aad
gs
add
mov
stos
sbb
fyl2x
push
stos
aaa
sbb
and
das
ja
int3
xchg
cmps
adc
int3
(bad)
cmp
lods
stos
lahf
jns
fdivp
mov
xor
adc
adc
add
repz
cwde
mov
mov
bt
sub
adc
stos
ret
setns
xor
outs
fnstsw
pop
mov
fcomp
leave
sti
or
fs
pop
div
retf
mov
pushf
out
repz
movs
into
iret
and
push
lods
sbb
and
sbb
fnstenv
stc
sbb
(bad)
bnd
aam
loope
das
ret
(bad)
xchg
adc
or
adc
mov
push
adc
cwde
test
mov
dec
in
mov
adc
test
sub
pushf
dec
jnp
js
in
es
lods
lea
mov
cmp
xchg
push
push
in
and
aam
pop
inc
repz
mov
imul
cmp
dec
add
add
cmp
xor
imul
fld
pop
int
push
push
inc
fsub
(bad)
pusha
or
xchg
xchg
jae
pop
or
pushf
sub
sub
(bad)
aaa
sub
in
movs
xor
scas
mov
jp
sbb
sti
pusha
cmp
jg
imul
cmp
movs
enter
ins
stos
mov
in
das
fst
shl
mov
out
pop
call
push
jmp
out
test
mov
call
lock
addr16
cs
pop
fst
cmc
imul
stos
std
xor
dec
fsubr
jno
fsqrt
movs
fnsave
mov
pop
push
fdiv
sbb
ja
adc
pop
inc
sbb
jb
daa
test
outs
arpl
inc
loopne
outs
push
in
(bad)
popa
jmp
inc
mov
cmc
jo
stc
test
jle
movs
fs
or
daa
mov
mov
loop
ss
xor
add
jne
call
and
mov
dec
mov
pop
mov
and
pop
jns
xor
hlt
pusha
jge
sub
jmp
and
test
sbb
or
or
pop
xchg
int
push
int
movs
or
sbb
out
jmp
add
mov
mov
call
adc
call
in
aaa
or
pushf
push
outs
int
aad
pop
inc
retf
pop
sub
and
(bad)
fldcw
jge
(bad)
lock
cwde
ins
inc
je
cmp
pop
movs
iret
inc
js
mov
int
cs
call
sbb
xchg
pop
in
and
adc
sbb
xor
loopne
outs
dec
mov
sbb
inc
and
push
in
pop
fisubr
fucomp
push
xor
jmp
ja
sub
(bad)
adc
ror
movs
jg
jle
pop
cmp
fwait
push
xchg
mov
adc
pop
sbb
mov
inc
add
sar
fild
fist
mov
dec
xor
pop
arpl
cmp
outs
sub
clc
std
xchg
mov
retf
js
dec
rcl
and
push
inc
jns
mov
sbb
xor
test
gs
pop
out
adc
popa
dec
ret
les
imul
mov
fidivr
data16
or
(bad)
inc
adc
pop
and
not
mov
in
cwde
ins
pop
jnp
ret
lahf
rcr
(bad)
js
dec
sub
fnsave
xchg
aam
and
pop
and
es
sar
outs
xchg
push
sub
sub
sub
mov
rol
in
push
cmc
cs
aaa
mov
fs
push
sub
fs
dec
sub
dec
ds
mov
ins
cmc
cmp
stc
or
icebp
inc
jo
mov
sti
test
xlat
xchg
mov
mov
adc
lods
cmp
pslld
mov
mov
mov
add
shl
mov
sti
test
adc
enter
xchg
scas
test
retf
inc
push
pop
scas
stos
retf
cld
dec
push
pop
stc
mov
inc
mov
bound
inc
inc
xchg
xchg
dec
jle
pop
into
mov
and
jge
movs
adc
lods
push
int
out
mov
cmps
pop
(bad)
jo
or
push
mov
pop
sbb
ds
das
lahf
fadd
or
xor
ret
jmp
mov
jmp
mov
xchg
das
pop
xor
adc
pop
dec
loopne
xor
clc
and
fwait
xchg
jecxz
movs
ja
xchg
das
mul
jne
loop
in
sbb
out
pop
jg
sub
adc
in
jl
dec
outs
xor
xchg
and
jge
lahf
addr16
jb
das
ss
xchg
push
lahf
loop
pushf
jge
dec
lahf
xchg
xchg
lds
or
pop
(bad)
out
out
loop
push
push
loopne
xchg
std
mov
mov
cmc
inc
cmp
inc
lock
inc
xor
or
pop
xchg
inc
aam
add
retf
xchg
test
daa
mov
call
cmp
scas
and
mov
test
(bad)
lods
ffreep
push
pop
es
div
mov
lock
ja
xor
push
cmp
lods
out
ja
jecxz
lods
nop
mov
dec
test
cmp
test
inc
mov
mov
imul
sub
(bad)
jle
ror
and
mov
or
les
(bad)
in
imul
nop
enter
xor
sbb
jle
push
push
sub
into
push
jae
outs
adc
cwde
xchg
and
test
push
inc
dec
int
retf
push
fldcw
arpl
sub
adc
pop
(bad)
int
(bad)
les
in
mov
pushf
es
setle
add
cmp
leave
xor
xor
test
push
jno
lods
aam
repnz
fs
adc
idiv
mov
push
or
xchg
cmps
push
mov
js
pop
add
dec
jno
dec
inc
in
daa
fistp
pop
stos
popa
shl
mov
pop
enter
pop
adc
xor
add
add
push
stos
aas
adc
jmp
add
movs
pushf
hlt
pushf
daa
ror
add
sub
dec
leave
hlt
leave
push
adc
enter
mov
dec
test
sub
sub
int3
aam
and
cli
sbb
leave
sub
div
das
cmp
mov
imul
and
les
mov
nop
push
stc
dec
call
(bad)
adc
(bad)
(bad)
dec
test
dec
in
and
pop
aam
mov
rol
cli
cld
repz
retf
mov
mov
add
lods
fs
fwait
loopne
push
push
sti
xchg
jae
ins
sub
leave
mov
test
pop
(bad)
enter
pop
sub
inc
add
outs
mov
repz
test
pusha
adc
es
out
xlat
sbb
(bad)
push
sbb
dec
and
loope
sub
add
test
scas
aam
daa
jl
or
adc
test
cdq
mov
xchg
push
or
cld
dec
dec
ins
push
sbb
push
inc
jg
jl
and
pushf
pusha
pop
lahf
fs
adc
mov
mov
enter
sahf
jle
xchg
sub
cs
outs
arpl
aam
jno
pop
add
imul
rol
loope
dec
sti
in
push
ss
xor
rcl
cli
loop
pushf
enter
(bad)
or
push
and
test
jp
dec
xor
inc
xor
cli
jl
ins
push
adc
and
xchg
nop
ins
cld
mov
sub
js
push
sahf
pushf
scas
lahf
pop
pop
lock
loope
adc
popa
push
outs
cmp
cmp
nop
mov
aas
sbb
mov
sbb
mov
repnz
cmp
xchg
add
jae
inc
fiadd
sub
mov
pop
mov
lahf
sub
xor
adc
push
stos
adc
jle
push
mov
jp
xor
cmp
test
cmps
dec
shl
adc
shl
xchg
int3
or
xor
ffree
and
adc
add
cmp
(bad)
dec
or
in
xchg
ror
repz
out
cwde
fisttp
pushf
out
mov
cs
xchg
jge
inc
xor
arpl
mov
jnp
popf
push
gs
fild
sub
ret
dec
repz
leave
mov
inc
inc
(bad)
out
mov
cmp
and
rol
icebp
push
jo
sub
gs
fist
add
push
add
jmp
push
pop
xor
jp
out
outs
jge
loope
shl
ret
neg
dec
dec
pop
(bad)
cld
push
fwait
aas
xchg
cmp
push
stos
das
push
pop
xchg
inc
das
add
loope
lock
fcmove
mov
mov
or
out
das
inc
jmp
fist
add
lods
xchg
sahf
call
dec
in
jo
out
pop
movs
cmps
mov
ja
mov
push
iret
gs
adc
push
shl
sahf
adc
int3
aam
jo
aad
dec
push
popa
test
add
xor
gs
lahf
js
mov
cmp
cs
mov
and
dec
dec
(bad)
ror
xadd
(bad)
pusha
jns
mov
adc
pop
sbb
sub
and
jl
mov
adc
idiv
pop
pop
mov
mov
ret
test
arpl
in
pop
mov
inc
call
into
call
(bad)
cmc
or
pop
xchg
xchg
xchg
mov
mov
pusha
sub
pusha
push
pop
xor
shl
jge
sti
scas
inc
inc
dec
stos
(bad)
push
xlat
or
pop
ret
psubusb
repnz
push
ret
(bad)
repz
mov
cmp
dec
icebp
mov
rcr
pop
ret
cwde
cmps
lahf
pop
data16
sbb
mov
jg
cwde
ds
sahf
mov
xchg
sbb
push
adc
movs
popf
sbb
imul
add
pop
inc
xchg
adc
sub
mov
mov
movs
cmp
mov
repz
push
movs
jmp
je
mov
inc
rcr
or
sub
mov
retf
ds
mov
cmps
mov
pop
icebp
stc
inc
cmp
sbb
or
adc
dec
push
mov
jo
and
sahf
adc
mov
sub
xor
pop
mov
xor
and
and
jmp
and
pop
aas
xor
push
pop
jp
outs
jnp
adc
and
sbb
inc
xchg
fld
mov
mov
push
call
jmp
mov
ret
ret
xchg
in
mov
clc
outs
xchg
push
iret
xlat
std
add
adc
rol
aam
outs
lock
stos
push
pop
lds
in
inc
pop
jno
pop
jmp
pop
std
inc
fsubr
jae
pop
sbb
inc
add
or
stc
aas
jo
mov
mov
push
int3
fldz
std
xchg
inc
xlat
sbb
(bad)
in
adc
xchg
cmp
sbb
xchg
add
mov
stos
xchg
fidiv
cmp
in
scas
cmp
outs
das
movs
cmc
push
adc
jmp
push
pop
cmp
and
sub
push
sub
sar
arpl
mov
dec
shl
out
pop
pop
outs
xchg
sub
les
xor
and
(bad)
div
push
mov
shr
mov
jmp
xlat
xchg
ret
imul
push
mov
inc
arpl
cdq
(bad)
inc
fnop
gs
es
mov
mov
out
mov
xor
pop
ret
fisubr
call
ds
imul
jae
retf
loopne
inc
jmp
add
and
pop
retf
push
mov
and
(bad)
fucomi
int
and
mov
and
pop
xchg
jge
sub
dec
mov
xchg
xor
push
outs
sub
sub
xchg
cmp
cmp
push
mov
(bad)
imul
and
js
add
imul
and
dec
imul
push
(bad)
ins
pop
adc
and
xchg
lea
xor
out
lahf
loop
mov
fcomp
add
inc
retf
popa
xor
sub
mov
sahf
(bad)
fsub
mov
mov
mov
xchg
sbb
inc
mov
outs
add
retf
out
stos
out
aas
sbb
mov
fwait
mov
mov
inc
loop
pop
add
outs
xlat
jg
mov
js
dec
arpl
mov
mov
aaa
inc
fcomip
(bad)
imul
scas
push
mov
mov
cmp
vpmullw
scas
cld
push
dec
retf
xor
jnp
xor
gs
sbb
cmp
cmp
cs
leave
jl
movs
jl
gs
test
adc
sub
dec
icebp
popa
pop
mov
or
and
rcr
fsubp
add
adc
push
add
push
js
jp
mov
jmp
and
sub
adc
mov
adc
enter
push
pop
std
sbb
jmp
iret
mov
cwde
cmp
and
jl
and
xor
push
jno
rol
adc
push
dec
ret
cmp
mov
cmp
loopne
adc
nop
add
pop
xchg
and
(bad)
std
mov
(bad)
std
jmp
addr16
lods
push
dec
sbb
outs
xor
dec
and
sar
movs
jne
inc
popa
pop
xchg
mov
je
hlt
mov
push
test
das
dec
rcr
test
enter
mov
ss
mov
rcr
jmp
mov
(bad)
or
mov
cmp
shrd
push
cmp
or
pop
in
sub
outs
mov
std
jnp
adc
mov
movs
mov
and
mov
pop
call
sbb
std
inc
xor
push
mov
xor
mov
loope
pop
lahf
pop
sub
mov
inc
or
pop
cmp
xchg
jecxz
fsubr
std
inc
mov
pop
in
jo
stc
mov
mov
sub
mov
int
jmp
rol
imul
hlt
adc
scas
cmps
fnstsw
cmp
test
call
adc
test
rcl
pop
cld
mov
out
adc
lds
push
loop
mov
add
arpl
and
mov
jmp
lods
mov
nop
lods
fld
push
jge
pop
mov
clc
fsub
ret
jo
jb
pop
mul
dec
push
leave
add
cmp
jo
push
mov
imul
mov
call
fcomp
loop
sbb
daa
push
mov
sbb
xchg
and
retf
scas
push
jo
pop
or
hlt
cmp
pop
dec
or
daa
retf
jb
inc
mov
and
loop
stos
ret
push
jae
lods
aam
test
xor
jns
or
sti
movs
in
popf
xor
xchg
jbe
(bad)
das
out
ret
xor
inc
neg
mov
loop
int
jl
mov
inc
repz
pop
pop
jge
xor
cmp
les
jns
adc
jmp
mov
cmp
out
pop
sti
xchg
sti
adc
outs
cli
stc
pusha
inc
ss
cmp
aad
jb
cmp
pop
xchg
sbb
push
(bad)
cli
push
adc
add
jp
pop
sti
pop
cmps
retf
or
test
inc
mov
rcr
and
xchg
mov
sbb
dec
nop
mov
adc
jb
nop
and
inc
test
div
jno
daa
(bad)
jl
cmp
scas
jo
add
push
(bad)
fstp
das
les
(bad)
pushf
aaa
leave
fadd
mov
push
jge
hlt
in
xlat
dec
mul
int3
ret
clc
dec
mov
popa
test
push
xchg
sbb
xor
cmp
xor
inc
enter
scas
jnp
jno
addr16
add
ret
lahf
mov
adc
cmc
(bad)
popa
xor
aam
mov
out
push
mov
push
mov
mov
test
mov
out
pop
popa
in
in
sahf
(bad)
sbb
clc
rcr
fstp
xor
(bad)
mov
inc
scas
cmc
sub
sbb
icebp
into
add
sbb
into
inc
push
jb
gs
inc
mov
ret
cmp
icebp
dec
cdq
xchg
inc
mov
xchg
cli
ret
aam
or
ror
inc
lds
call
mov
frstor
xchg
add
jp
imul
das
add
sub
mov
pop
imul
bound
mov
stos
adc
pusha
cmp
inc
and
mov
add
adc
mov
sub
leave
ins
fistp
pushf
or
pop
stos
test
sub
and
fs
jge
dec
inc
les
jmp
jecxz
pop
(bad)
inc
pop
in
mov
mov
sub
jle
(bad)
pop
movs
lea
clc
push
adc
icebp
mov
daa
inc
or
xor
sysexit
push
aam
loop
sbb
mov
(bad)
lahf
int
jmp
leave
xor
shr
out
in
jmp
and
aas
shl
cwde
inc
xchg
pusha
dec
cli
inc
(bad)
xor
pop
xor
out
mov
gs
dec
and
push
or
scas
pop
add
xchg
mov
jns
xor
lea
stos
add
push
jae
jne
in
test
dec
addr16
outs
addr16
dec
adc
js
test
pusha
inc
mov
jmp
nop
fnstenv
jle
aas
push
xchg
rcl
mov
push
push
jns
push
push
xchg
lock
inc
or
inc
lds
xor
lahf
aas
cmp
repz
call
pop
or
jo
stos
dec
cmp
mov
mov
stc
mov
push
push
sbb
fadd
js
fadd
call
icebp
jne
scas
cmc
sbb
push
test
repz
push
and
(bad)
fist
jp
inc
push
and
fwait
icebp
cmp
je
sahf
repnz
push
or
xchg
leave
ds
cmps
cmps
fistp
shl
dec
push
xchg
cmp
lahf
data16
(bad)
dec
xchg
push
pop
movs
or
mov
pop
dec
fidiv
and
ds
xchg
movs
mov
cli
sbb
jge
mov
neg
fucomip
nop
mov
fldz
cmp
repnz
push
mov
jbe
movs
xchg
pop
xchg
stos
xchg
outs
jae
cmp
jnp
test
add
lahf
mov
outs
pusha
popa
adc
aaa
ins
mov
fs
sbb
cld
fmul
aas
xchg
movsx
mov
cmc
cmps
mov
retf
inc
dec
pop
outs
std
add
xlat
test
shl
data16
je
cmp
ds
and
out
dec
adc
jmp
xchg
scas
rol
je
add
push
jne
pop
fstp
add
or
pusha
lods
(bad)
push
mov
pop
sbb
sbb
dec
add
call
pop
sbb
stos
adc
push
sbb
sbb
dec
repnz
dec
nop
xchg
jmp
call
adc
loop
outs
repz
and
inc
not
nop
or
sub
mov
jl
inc
and
lods
mov
pop
cmc
sub
into
inc
mov
dec
pop
arpl
jmp
rcl
fs
lahf
jge
mov
addr16
pop
xor
jns
out
jge
add
jnp
ja
cwde
and
sub
pushf
mov
loop
sub
in
aam
add
xchg
cs
test
out
dec
fsub
shl
test
dec
clc
add
stc
sbb
rcl
push
in
mov
mov
jmp
jne
addr16
icebp
out
xor
xchg
or
inc
push
xchg
add
push
sub
sub
sbb
push
add
jge
cli
or
fistp
(bad)
int
and
je
(bad)
dec
popf
push
ins
add
mov
repnz
punpcklbw
nop
jo
scas
mov
add
add
pushf
pusha
in
call
(bad)
mov
cmp
jb
add
mov
js
cmps
push
sti
aam
xchg
push
inc
pop
dec
inc
stos
les
call
cwde
dec
sub
mov
iret
push
test
mov
jno
cdq
dec
pop
enter
or
push
mov
and
mov
js
aam
rcr
sub
or
mov
jbe
jno
mov
call
cld
mov
nop
add
fnsave
or
in
stos
call
cli
cmp
push
cmp
mov
retf
retf
add
repz
pushf
cld
popf
mov
outs
pop
dec
dec
push
cwde
sbb
jmp
into
jmp
push
pop
or
cmp
push
idiv
jmp
cwde
aad
call
hlt
scas
imul
jmp
pop
out
out
pop
repz
out
adc
push
scas
and
and
push
cmp
ficom
cmp
(bad)
int
int
fistp
xlat
jge
lods
aad
mov
cmp
pushf
or
cmp
cmp
scas
in
mov
imul
retf
inc
test
inc
shl
pushf
xor
add
mov
aaa
push
sub
popa
xchg
xor
fistp
dec
add
push
lods
pop
cmp
int3
dec
push
out
pop
xchg
or
push
arpl
xor
add
mov
dec
popa
cmp
das
lock
mov
(bad)
loope
adc
add
cmps
test
sub
xchg
sbb
in
sbb
jmp
sbb
dec
sahf
and
push
dec
cmp
mov
push
inc
ins
in
jmp
cmps
lds
(bad)
and
sbb
or
lods
mov
bound
push
fistp
cwde
jmp
add
out
and
ror
lahf
sahf
or
add
dec
fistp
lea
dec
jne
repnz
imul
xchg
inc
cmp
ja
(bad)
dec
and
push
sbb
mov
fs
repnz
imul
push
or
adc
mov
add
xchg
jno
cmp
inc
bound
push
cmps
lods
ror
pop
lahf
xchg
hlt
jmp
xor
pop
push
jns
ja
jmp
ret
shl
outs
stos
push
loop
and
push
popa
fdiv
int3
xor
mov
cmp
dec
(bad)
sbb
mov
inc
pop
jmp
jbe
adc
into
leave
cmp
shl
ins
loop
leave
jne
int3
mov
(bad)
daa
enter
sub
jno
lahf
sti
xchg
pop
test
adc
cwde
mov
(bad)
sahf
arpl
out
fdivr
pop
add
(bad)
mov
push
cmp
sub
addr16
jmp
mov
fcomp
mov
xchg
jae
pcmpgtw
or
mov
pop
xchg
push
sbb
cmp
dec
int3
daa
(bad)
dec
sub
idiv
jle
or
movs
cld
nop
shl
out
inc
fstp
(bad)
mov
mov
jg
jno
adc
sbb
dec
in
adc
in
push
jge
push
das
leave
fidivr
in
pop
fld
xor
jmp
addr16
daa
loop
ret
mov
dec
(bad)
sub
lock
out
add
push
je
outs
pop
pop
fmul
sub
leave
xor
inc
pop
lods
rol
pop
bound
sub
(bad)
fdivrp
mov
and
add
std
fimul
xor
ror
dec
ret
popa
xchg
arpl
xor
iret
test
jg
mov
retf
jne
out
mov
mov
jno
xchg
adc
jno
imul
push
xchg
or
(bad)
aaa
jmp
mov
mov
ret
repz
xor
mov
adc
(bad)
fisttp
(bad)
(bad)
fst
retf
or
mov
je
cmps
pop
cmc
mov
ret
out
test
mov
lahf
popa
mov
jns
iret
cmps
rcl
icebp
es
dec
mov
mov
xchg
add
add
fnstenv
hlt
mov
and
or
mov
ja
arpl
mov
lods
es
adc
in
aad
xchg
pop
cs
fist
push
leave
xchg
mov
int
clc
xchg
xchg
jae
sub
push
push
push
mov
mov
adc
xchg
bound
jbe
lahf
mov
stos
sbb
jbe
lahf
sbb
inc
xor
mov
push
test
pop
push
fisub
and
inc
stc
and
rol
into
pusha
jb
sti
xchg
vmwrite
inc
aad
and
mov
gs
push
lods
shr
inc
iret
jns
xor
sub
loopne
popf
out
and
or
xor
xchg
add
xor
popa
call
xor
lods
jb
mov
fisub
rol
dec
inc
je
mov
(bad)
mov
fisttp
ins
(bad)
jl
jg
test
push
ins
adc
pop
test
or
pop
mov
push
mov
jns
fs
iret
adc
rcr
addr16
test
inc
cdq
fcomp
out
adc
lods
jno
inc
je
sbb
ss
cmc
pop
mov
imul
xlat
xor
ins
mov
mov
nop
mov
mov
pop
loopne
mov
call
sti
adc
(bad)
cmp
xchg
mov
pop
cmps
cmps
inc
retf
aam
scas
and
sbb
push
cmp
mov
call
out
movs
dec
mov
icebp
push
mov
dec
mov
stc
loop
call
pop
popf
rcr
dec
push
push
sub
push
xor
adc
jl
inc
cwde
ins
mov
or
lahf
cmp
xor
mov
aaa
and
inc
test
inc
jmp
cs
std
or
leave
bound
mov
fcmovnu
inc
or
xor
xchg
in
lods
fucom
test
rol
xor
(bad)
lds
mov
mov
mov
test
sub
dec
pop
call
aaa
push
shr
cld
lock
inc
shld
xchg
mov
loope
sbb
sub
mov
das
inc
xlat
or
sbb
out
cli
fisttp
test
repnz
fdiv
mov
jg
dec
cli
pop
mov
push
icebp
in
jnp
pop
mov
adc
retf
pop
mov
mov
push
loop
test
mov
and
out
adc
push
xor
jno
xor
pop
cdq
sub
nop
push
xor
fwait
or
(bad)
aaa
ins
inc
cmp
clc
movs
pop
ret
mov
pop
cmp
in
add
lea
pmullw
rol
in
lods
dec
(bad)
cmp
data16
sti
test
add
jns
popa
or
sbb
dec
cs
out
fisubr
add
jmp
cmps
idiv
fwait
les
lock
cwde
ss
mov
lods
push
cmp
in
cmp
inc
xchg
mov
xchg
test
std
xchg
cdq
add
mov
clc
and
in
mov
mov
sti
cli
and
mov
mov
and
jbe
call
dec
xchg
hlt
mov
shl
frstor
mov
pop
jne
dec
jmp
scas
fwait
shl
jnp
mov
pop
popa
lea
ja
enter
in
je
repz
xlat
enter
mov
repz
or
pop
pop
pop
inc
jmp
pop
pop
and
pusha
mov
rol
cmps
fs
xchg
sbb
std
jmp
inc
xchg
in
aaa
out
or
cmps
arpl
sbb
add
int
repz
pop
pop
mov
fist
enter
and
aam
push
or
fiadd
add
sub
jnp
outs
movs
dec
js
cmps
jg
add
adc
cs
mov
push
test
sub
xor
add
add
fdivr
call
cmp
adc
add
mov
daa
sar
test
ins
dec
dec
int3
scas
(bad)
push
push
sub
and
fcom
sbb
xor
add
dec
mov
pop
mov
mov
imul
add
std
ds
scas
xor
fmul
mov
mov
inc
mov
imul
push
xchg
mov
and
xlat
cmp
imul
adc
arpl
ja
mov
outs
sbb
xchg
repz
ret
stc
(bad)
fnstsw
inc
mov
int
rol
or
pop
mov
sub
sub
dec
cli
nop
mov
bound
mov
fldenv
push
mov
ds
fmul
fcom
xchg
in
fwait
popa
pop
cli
inc
(bad)
cli
jmp
inc
cmp
xor
js
pop
data16
pop
leave
mov
ficomp
pop
jne
mov
out
(bad)
fpatan
mov
cdq
add
cmp
dec
cmps
mov
cmps
or
sbb
int3
and
(bad)
mov
inc
gs
cmp
arpl
and
ins
mov
fld
popa
popf
not
cmp
enter
mov
dec
stos
imul
icebp
ss
push
(bad)
jmp
sbb
in
cmp
cmp
mov
mov
stc
mov
sbb
or
cmp
jne
daa
pop
mov
jge
mov
mov
cdq
jle
cmp
push
ss
mov
call
xor
jle
adc
sbb
sbb
jge
dec
jbe
loopne
fisttp
popa
jns
jge
mov
sbb
push
daa
push
aam
rol
push
sbb
cmp
jg
jb
add
imul
cmp
push
jle
sub
xchg
sub
adc
cmp
pop
outs
loop
test
sahf
pushf
ss
hlt
nop
mov
add
jg
and
jle
mov
ja
popf
xor
jge
sub
add
stos
bound
daa
ins
or
or
jo
dec
shr
push
in
scas
nop
fwait
sar
pop
and
add
push
dec
or
stc
push
push
sti
arpl
mov
dec
into
dec
rcr
cli
xchg
push
es
mov
dec
(bad)
mov
mov
sti
cmps
ret
adc
sbb
sub
inc
inc
mov
stos
sbb
push
lods
mov
hlt
xchg
movs
outs
inc
push
lea
jl
sbb
bound
(bad)
push
jg
cmp
js
rol
pop
loope
jle
call
inc
mov
jl
std
or
test
mov
cmp
inc
mov
sub
and
(bad)
dec
xchg
xchg
leave
cs
(bad)
and
outs
xor
(bad)
shl
test
sub
mov
pop
or
push
add
pop
jl
jb
push
sub
inc
cmp
push
(bad)
cmp
(bad)
fld
js
jp
add
int
push
jb
and
cli
imul
xor
xchg
mov
sub
push
sbb
jne
ss
push
pop
adc
stos
in
outs
cdq
out
add
fdivr
pop
inc
pop
inc
push
adc
ins
sahf
repz
jl
push
mov
dec
idiv
and
xor
or
repnz
iret
sbb
test
or
push
jmp
push
mov
or
mov
fdiv
adc
pop
(bad)
in
leave
push
pushf
mov
pop
cmp
mov
out
adc
js
scas
loop
les
mov
sbb
int
and
xor
xchg
shl
pusha
outs
or
sbb
or
in
in
aad
push
in
inc
jb
ror
pop
xchg
mov
fcom
in
or
cmp
scas
out
pop
cmp
jmp
imul
out
test
je
vmwrite
(bad)
lods
inc
push
(bad)
inc
inc
jb
outs
test
jne
xor
add
aaa
mov
or
add
pop
mov
cmps
mov
xchg
imul
cs
movs
and
inc
cwde
mov
arpl
in
adc
jnp
cli
dec
xor
je
(bad)
jbe
or
shl
sbb
dec
cmp
scas
cmp
mov
adc
xchg
pop
fsincos
and
sbb
int3
xor
pop
and
xor
xor
push
xchg
test
lea
in
or
movs
movs
mov
loop
mov
cli
sub
inc
xchg
arpl
xchg
sbb
jns
and
test
push
mov
inc
dec
jo
test
sbb
ja
mov
cli
repz
xchg
mov
popa
mov
mov
push
adc
inc
pop
mov
mov
add
movlps
cli
xchg
dec
and
inc
cli
lods
xor
jg
xchg
cmp
sub
push
inc
fsubr
pop
xor
and
frstor
rcr
and
mov
mov
ret
sar
add
cmp
cld
clc
test
ins
mov
dec
stos
mov
neg
pop
sub
(bad)
jg
ret
ror
mov
(bad)
xchg
cs
jns
out
cmps
inc
loopne
in
in
shl
test
mov
jle
add
(bad)
in
adc
xor
movs
ret
nop
or
xor
adc
adc
ret
(bad)
js
push
sub
dec
add
add
jb
xchg
loope
or
push
iret
jl
or
retf
add
js
xor
and
ret
(bad)
jmp
jmp
jge
test
push
cli
mov
mov
imul
xchg
pop
aaa
push
scas
fimul
jge
sub
ds
pop
and
push
push
(bad)
xor
setle
daa
(bad)
in
cs
or
pop
(bad)
jg
pop
ja
cmp
addr16
push
xor
or
stc
mov
test
aam
pop
aad
mov
pop
lea
mov
inc
sbb
(bad)
jle
leave
fs
icebp
pop
in
push
jp
cmps
mov
movs
pushf
data16
adc
xchg
push
and
mov
sub
popa
dec
ret
aad
cmp
cmps
dec
inc
test
call
xor
stos
jp
fadd
dec
push
dec
loop
adc
xor
enter
jmp
jl
dec
lahf
test
adc
mov
clc
test
fldenv
xchg
test
shr
sahf
bound
adc
ja
enter
test
(bad)
fs
and
leave
sub
xor
sbb
leave
loopne
xchg
or
popa
test
and
ret
jo
mov
add
adc
add
jp
inc
gs
jbe
jecxz
and
or
jmp
stos
fs
popf
push
shl
mov
movs
mov
je
rol
retf
mov
xchg
test
xchg
cs
inc
stc
mov
gs
dec
mov
lds
lds
add
pop
or
mov
enter
sbb
imul
cmps
pop
mov
sar
push
ret
ja
and
int3
call
test
xchg
in
push
add
mov
fld
dec
mov
(bad)
test
xchg
(bad)
jmp
push
mov
pop
jbe
push
stos
inc
cmp
dec
add
pop
push
adc
push
adc
pop
imul
jmp
rol
add
jle
mov
sahf
push
inc
add
test
sbb
(bad)
ret
enter
push
pop
mov
inc
or
sbb
ror
out
or
sub
mov
and
push
shl
add
jno
pushw
bound
inc
pop
inc
imul
add
jl
mov
sub
int3
hlt
rcl
jge
fs
mov
mov
cmps
adc
jecxz
(bad)
pop
dec
cmp
and
shr
fisttp
je
imul
ror
imul
stc
mov
out
sbb
or
pop
xchg
add
sbb
gs
xchg
pop
xor
cld
inc
or
mov
dec
jg
sbb
and
cmp
jecxz
or
jge
dec
pop
cmp
pop
add
push
mov
mov
fcomp
jecxz
inc
add
test
push
pop
add
(bad)
or
call
jmp
sub
ins
mov
xchg
xchg
cmp
hlt
mov
add
stos
iret
call
jle
mov
push
and
fwait
push
and
aaa
call
add
push
and
jne
(bad)
or
(bad)
jb
xor
mov
xor
dec
push
push
test
cmp
inc
push
xor
rol
out
dec
jmp
jecxz
dec
pop
mov
sub
pusha
xchg
inc
int
mov
test
cmp
outs
xchg
sbb
imul
push
dec
inc
enter
outs
repnz
lods
add
dec
push
out
sbb
jmp
test
cld
sbb
jge
pop
test
bound
sub
loope
retf
and
test
xchg
jb
(bad)
sar
(bad)
popf
ss
call
cli
clc
imul
cli
xor
pop
mov
test
cdq
inc
add
mov
or
cmc
(bad)
loope
inc
jle
bnd
out
inc
ds
in
inc
xchg
push
imul
pop
dec
retf
shrd
pop
pushf
fist
icebp
sti
cwde
push
scas
push
or
dec
mov
pop
stos
pop
ja
xchg
mov
rcr
xchg
imul
mov
or
cmp
in
xchg
dec
push
mov
and
xlat
sar
aas
mov
dec
and
imul
fcmovne
sti
cli
clc
xor
add
ret
das
push
popf
call
jle
movs
fld
or
sub
add
lods
rol
sub
fndisi(8087
mov
sub
sub
shl
jecxz
push
scas
add
push
les
cdq
mov
mov
and
adc
rol
pop
mov
pop
(bad)
fwait
test
in
mov
pop
(bad)
push
xchg
lahf
xchg
mov
test
lods
or
dec
mov
pop
sub
test
inc
mov
je
jp
adc
and
std
inc
and
xchg
mov
sbb
mov
shl
lds
in
fbld
jecxz
jp
rcr
jae
push
cmp
icebp
fsub
adc
aad
fadd
pop
int3
and
idiv
jae
clc
cmp
push
or
push
imul
fsub
dec
fs
js
fwait
xchg
pop
xor
mov
fs
sub
pop
fs
dec
loop
mov
sbb
cdq
ss
sar
cmp
cmps
repnz
xor
out
xchg
sti
or
iret
add
dec
or
push
loop
cmp
xchg
and
je
syscall
inc
cli
test
cmps
push
or
fdivr
ins
jmp
xlat
and
inc
push
pop
ds
jmp
jge
loopne
iret
dec
retf
dec
mov
loopne
push
sub
xor
push
jmp
ds
mov
ins
arpl
pop
push
sbb
sub
neg
and
mov
jb
add
mov
and
jecxz
pop
jbe
repz
xchg
ror
dec
jp
out
mov
ss
call
inc
sahf
push
pop
(bad)
mov
mov
inc
dec
mov
mov
push
dec
ret
cmps
inc
push
frstor
rcl
pop
pop
and
pusha
and
pop
jmp
neg
js
fadd
sar
fcomp
imul
in
imul
cld
stos
(bad)
mov
in
fmul
cld
mov
and
loopne
sub
xor
xor
sbb
movs
add
imul
cmp
xor
clc
ret
ins
test
xor
cdq
pop
add
sub
bound
lock
and
arpl
loop
pop
jge
or
cs
es
xchg
scas
jae
mov
mov
stc
or
push
dec
mov
add
jo
test
xchg
mov
push
out
lea
int
push
aas
or
xchg
mov
nop
in
test
and
cdq
mul
loop
loopne
jnp
add
xchg
xor
shl
cmp
sbb
and
inc
out
xor
and
scas
es
pushf
fsubr
(bad)
mov
xor
fucom
mov
cmps
push
enter
push
pop
ja
mov
cmp
and
mov
push
clc
jmp
cmp
test
mov
mov
sar
xchg
aas
mov
(bad)
adc
adc
push
cmp
or
dec
xor
rcl
jmp
jge
xchg
lea
int3
mov
lea
cmc
mov
mov
aaa
fiadd
or
cmp
lods
mov
in
pop
stos
test
loope
jb
das
dec
and
mov
or
cmp
cs
adc
jno
mov
inc
xchg
lock
loop
mov
mov
dec
xor
mov
push
push
jge
ffree
ins
push
arpl
out
dec
inc
xor
xor
mov
shl
ror
mov
pusha
rcr
mov
cmp
mov
mov
sbb
sub
sbb
inc
xchg
cld
xchg
ins
xor
cwde
inc
rcr
add
and
or
in
sub
xchg
pop
push
mov
(bad)
and
add
sbb
mov
mov
call
out
adc
mov
push
imul
cmp
cmps
push
fwait
sbb
xchg
je
sub
fnstcw
push
mov
sbb
jno
sbb
outs
jmp
and
pop
aas
(bad)
ins
cmc
lods
sub
jno
mov
xrelease
mov
div
mov
mov
sti
adc
daa
push
imul
syscall
in
pop
cmp
adc
pop
sbb
lea
in
xlat
pop
bound
arpl
ror
js
cmp
add
call
cmp
jmp
in
scas
sub
push
pop
push
adc
xor
push
inc
test
sahf
cmp
xor
or
and
fwait
dec
and
dec
movs
gs
out
(bad)
lock
(bad)
mov
jbe
adc
sub
mov
xchg
jbe
ret
add
cmp
push
iret
dec
push
mov
and
mov
sub
(bad)
icebp
es
fisttp
xchg
loopne
loopne
inc
nop
leave
cmp
scas
fsubr
xor
pop
jge
daa
test
cmp
dec
loope
test
mov
xchg
inc
xchg
jge
fnstenv
popf
cmp
and
cmp
shl
nop
outs
retf
pushf
cmp
popf
(bad)
aad
sub
adc
inc
fist
hlt
or
(bad)
jo
jmp
ins
inc
loopne
pop
outs
retf
test
add
mov
inc
popa
pop
jo
inc
xchg
pop
movs
shl
stos
mov
sub
cmp
adc
xchg
imul
lahf
xchg
(bad)
pop
movs
neg
or
das
cs
xor
xchg
mov
arpl
add
mov
inc
fs
push
xchg
gs
and
outs
je
stc
nop
cs
sbb
sub
sbb
inc
ret
rol
mov
rcr
iret
sbb
jle
mov
mul
xchg
jnp
dec
iret
(bad)
jnp
xchg
xchg
test
inc
(bad)
into
data16
dec
sub
xor
cmp
pop
es
jl
xchg
pop
stos
add
jo
jl
int
sbb
leave
adc
addr16
add
and
xchg
push
dec
jmp
or
mov
(bad)
pop
daa
sub
or
xor
adc
xchg
xor
movs
push
mov
or
inc
retf
jne
sbb
imul
jmp
push
mov
dec
loop
call
adc
sub
sti
and
in
out
xor
xchg
xchg
movs
aas
push
mov
pop
jg
or
sti
pop
mov
icebp
dec
pop
cmp
xchg
jae
enter
and
int3
pop
leave
mov
xor
add
test
pop
mov
arpl
add
lahf
dec
dec
cld
sbb
aas
push
mov
add
pushf
cli
es
xchg
mov
arpl
pop
jae
cs
les
dec
adc
add
js
int3
pop
or
add
arpl
sbb
movs
jne
ja
inc
cs
jg
pop
pusha
inc
cmp
push
fcmove
cdq
scas
sub
out
add
sar
frstor
adc
push
test
push
lods
mov
adc
retf
sub
fisttp
(bad)
adc
loope
int
ins
inc
xlat
jns
and
(bad)
hlt
ds
pop
cmp
loopne
dec
add
mov
call
retf
dec
out
and
data16
test
stos
xchg
psubusb
daa
and
jle
lods
xchg
pop
mov
or
mov
pop
mov
jno
neg
imul
sbb
into
adc
scas
mov
dec
retf
pop
int
push
aam
test
jmp
out
(bad)
lock
div
fisub
pop
test
sti
dec
lds
mov
in
pop
jge
jecxz
and
(bad)
hlt
pop
adc
mov
add
ja
pop
inc
cmp
movs
jnp
or
movs
pop
arpl
daa
cwde
test
xchg
jle
(bad)
arpl
push
inc
aad
jbe
aam
rcl
inc
jl
loop
movs
sahf
out
jg
jmp
loope
inc
scas
sub
(bad)
or
mov
std
mov
sti
pop
cmps
mov
mov
mov
(bad)
push
mov
mov
retf
or
push
inc
(bad)
jle
aaa
or
div
inc
push
imul
pop
inc
push
adc
xchg
add
xchg
mov
add
es
das
xor
rol
cmp
and
int3
sbb
or
(bad)
movs
mov
and
pop
es
ficom
outs
push
jmp
pusha
dec
pop
fucomi
ret
inc
ja
sbb
imul
test
daa
push
mov
mov
adc
rcl
test
fdiv
cdq
iret
out
xor
or
jbe
cmc
movs
jle
(bad)
pop
jb
stos
xchg
loopne
clc
sar
mov
retf
lock
fcom
inc
into
jle
fstp
popf
cs
(bad)
jns
xor
inc
iret
cmp
or
enter
or
retf
(bad)
shl
mov
mov
mov
jne
jb
adc
dec
add
shl
sbb
cld
popa
leave
xchg
hlt
and
movs
inc
pop
rcr
mov
clc
push
retf
dec
or
je
jae
int3
sub
fwait
loope
cli
retf
xor
ins
or
inc
jp
mov
pop
call
add
mov
and
test
not
clc
mov
jne
pop
mov
or
xchg
test
sbb
sbb
sbb
inc
mov
test
test
push
inc
and
pop
adc
out
cli
(bad)
loop
xchg
push
push
xor
stc
pop
lods
mov
jecxz
mov
cmp
jnp
lahf
and
or
mov
sbb
out
leave
or
mov
iret
jge
clc
call
aaa
add
cdq
scas
lods
cli
pop
sub
inc
or
xchg
pop
push
jmp
jno
shl
loopne
aad
pop
xchg
retf
js
xchg
call
popf
and
push
in
ds
or
push
ja
jl
mov
push
mov
mov
inc
push
inc
(bad)
lods
fs
fs
jbe
sub
push
jbe
imul
and
jge
mov
sub
adc
ins
in
je
dec
leave
inc
call
mov
repz
mov
mov
or
data16
mov
mov
cmp
popa
jbe
pop
fcmovnu
add
ret
dec
cmps
dec
pop
mov
xchg
repz
inc
jge
call
lock
and
xor
adc
cmp
cmp
scas
inc
test
mov
and
xchg
jo
mov
cmp
cmps
jg
mov
sti
shr
inc
(bad)
lahf
mov
sahf
xchg
adc
retf
aad
lods
push
movs
inc
mov
cmp
mov
bound
inc
std
ret
jg
loope
into
dec
adc
test
fxch
clc
into
movs
add
adc
hlt
add
push
mov
aam
cmp
cmp
(bad)
mov
cmp
fcmovu
mov
dec
test
or
inc
adc
pop
test
mov
push
jmp
push
ds
in
mov
jno
push
and
std
test
push
push
dec
(bad)
imul
pop
icebp
add
or
rcl
popa
jne
out
fidivr
mov
or
xchg
shr
cdq
mov
jno
mov
cmps
iret
imul
jne
pop
arpl
mov
and
sub
dec
jbe
or
stc
je
pop
shr
jp
or
call
pop
xor
jl
cmps
add
fsubr
scas
adc
std
pop
inc
mov
stos
and
test
cmp
push
repz
sbb
movs
daa
jmp
inc
cli
out
retf
mov
in
jp
ror
out
mov
jb
jns
scas
in
or
or
je
inc
dec
mov
jne
sub
popa
push
jl
add
mov
sbb
dec
bound
ret
mov
sar
push
sar
jns
cvtdq2ps
repnz
cmp
outs
sub
aaa
fcmovnbe
movs
pop
(bad)
aam
add
jne
mov
pop
stc
int
repz
add
push
sbb
out
cmc
xchg
push
pop
cmp
xchg
push
fcom
and
(bad)
cmp
pop
fldenv
jae
dec
mov
ins
inc
cdq
lahf
in
clc
mov
js
xor
jl
(bad)
fidivr
fs
jnp
cli
movs
in
cmc
push
adc
xlat
sbb
ror
xor
mov
adc
pop
js
rcr
aas
repnz
mov
scas
cld
cli
imul
add
add
loopne
cld
inc
pusha
jo
pop
adc
cmp
cwde
sub
sbb
sar
retf
jmp
call
daa
icebp
test
add
cmps
stc
std
cmp
cld
in
add
or
adc
rcr
aam
mov
xchg
sbb
add
imul
xchg
test
jb
retf
out
retf
xlat
cdq
bound
xor
lds
push
clc
enter
outs
pop
test
ja
repz
hlt
pop
fimul
aad
adc
sub
stos
ss
ja
push
call
imul
retf
ins
adc
mov
mov
xchg
jne
fwait
inc
add
popf
adc
jno
mov
scas
fwait
xchg
xor
inc
dec
mov
sub
(bad)
mov
mov
nop
rcl
test
push
mov
xor
fld
dec
lods
je
sub
inc
xchg
(bad)
aam
push
inc
lods
into
mov
leave
int
mov
adc
stos
sahf
sbb
lds
pop
mov
jae
out
and
and
pop
clc
iret
dec
cmp
jns
in
retf
scas
adc
dec
ret
data16
js
pop
xchg
out
mov
jb
das
aad
(bad)
loope
in
pop
cmp
sar
aaa
sub
sbb
push
cmp
mov
dec
nop
cdq
movs
retf
fwait
es
shl
std
dec
dec
aaa
loope
jecxz
mov
mov
stos
mov
jno
movs
and
fldenv
xor
sub
add
xchg
sti
adc
aam
jno
in
mov
cmp
lods
jl
inc
in
lds
xor
jmp
jnp
aas
dec
fdivr
jg
xor
cdq
fcomp
push
repz
inc
lea
(bad)
cdq
cld
(bad)
mov
cs
in
lahf
inc
or
inc
mov
ins
mov
pop
(bad)
rcr
pop
push
repnz
outs
ret
jge
push
mov
(bad)
test
scas
jb
dec
add
or
test
pop
xor
push
sbb
lock
bound
int3
push
jnp
add
(bad)
sbb
adc
sti
lock
test
dec
cld
or
inc
jmp
ins
test
and
or
cmp
test
push
dec
or
ds
push
pop
pop
stos
inc
jo
aam
call
pop
sub
into
into
push
dec
push
loop
ins
call
mov
push
cmc
mov
xchg
mov
ins
dec
into
pop
mov
sbb
(bad)
pop
inc
or
(bad)
loope
loope
int
xor
neg
retf
inc
cmps
jae
inc
fwait
cmp
(bad)
neg
push
dec
mov
pop
enter
out
adc
or
ror
out
movs
cld
(bad)
and
sbb
es
push
out
sub
cli
cli
inc
(bad)
mov
mov
sbb
mov
call
mov
pushf
mov
aad
fbstp
test
outs
cmc
xor
or
lods
mov
jb
imul
jecxz
sub
jmp
xchg
fs
xor
(bad)
mov
mov
sbb
pop
leave
mov
aas
sbb
and
xchg
popf
mov
push
xlat
push
pushf
lods
call
pop
retf
sub
xor
dec
call
arpl
stos
push
cld
xor
and
adc
and
dec
aaa
jns
sbb
xor
dec
call
aas
pop
xchg
popa
nop
sub
jmp
and
retf
stos
sbb
stos
add
in
sbb
stos
cmp
add
js
das
rcr
inc
femms
add
inc
cmps
add
add
push
xchg
loopne
popa
sbb
dec
cmp
xrelease
cmps
sub
add
test
mov
fldenv
mov
shr
arpl
shr
push
fadd
(bad)
pop
out
rcr
mov
mov
or
test
pushf
add
(bad)
and
mov
lods
cwde
adc
push
aam
xor
loopne
push
xchg
cmp
aas
push
call
xor
retf
inc
in
popa
push
add
divps
inc
sub
or
data16
jp
or
xor
out
ja
aaa
sbb
adc
add
repnz
xchg
test
xchg
sbb
dec
mov
std
test
pop
jnp
xchg
dec
mov
pop
and
xchg
icebp
ins
pushf
cmp
stos
add
pmaxub
pop
cmp
push
out
and
xor
js
rcl
inc
inc
loope
mov
stc
mov
add
cmc
aaa
mov
pop
outs
div
jmp
jae
cmps
jg
sub
outs
ret
(bad)
data16
xor
loope
sbb
jge
outs
add
sub
xlat
fistp
enter
push
jb
and
(bad)
push
sbb
pop
push
or
sub
fstp
leave
mov
mov
nop
or
mov
out
jecxz
jne
shl
cdq
sbb
jmp
inc
sbb
and
dec
sub
out
sub
pop
mov
push
xor
inc
cmp
push
idiv
movs
loopne
retf
cmp
lods
jnp
inc
in
jns
(bad)
xchg
into
pop
stos
pop
out
rol
shr
mov
or
(bad)
pop
pushf
jl
push
daa
push
arpl
popa
ins
pushf
jne
dec
sbb
pusha
cld
loop
hlt
pop
jns
and
inc
nop
jmp
stos
fnstsw
test
xor
mov
mov
scas
into
inc
add
lds
fwait
mov
(bad)
fiadd
loop
jg
push
adc
cmp
and
syscall
outs
mov
rcl
out
push
cmp
not
pop
xor
dec
jb
inc
pop
mov
idiv
sub
mov
add
movs
mov
sub
loop
add
stc
lock
mov
adc
add
xchg
test
and
jecxz
shl
ret
mov
arpl
hlt
in
cli
hlt
jno
fdivr
jmp
loope
loope
ss
out
repz
aam
sub
and
lds
mov
jle
mov
xlat
pop
mov
imul
je
xor
or
inc
mov
push
bound
icebp
xchg
gs
dec
test
leave
xchg
pavgb
stos
sbb
into
js
call
retf
push
outs
jmp
gs
cmp
ins
cs
loop
fild
out
or
inc
cli
jecxz
mov
outs
adc
ins
rcl
out
imul
mov
psubusw
adc
or
lea
sub
cmps
adc
dec
rol
loopne
mov
pusha
mov
push
ss
sbb
shl
inc
(bad)
mov
sub
jmp
push
out
ds
pushf
jg
fnsave
push
cwde
imul
mov
stos
loopne
hlt
rcl
push
sub
inc
repz
ret
popa
(bad)
(bad)
mov
mov
stos
repz
sub
or
dec
(bad)
rcr
data16
dec
scas
push
jmp
xchg
ins
sti
and
test
push
mov
and
adc
rol
sar
int
popa
call
lds
stc
rcr
pushf
add
shl
pushf
jp
add
cmps
jnp
jle
test
cmp
cli
inc
adc
or
loop
shl
cmp
jb
clc
add
jns
shl
rcl
xchg
outs
pop
add
enter
sbb
push
sub
pop
xchg
(bad)
xchg
ja
xchg
dec
mov
in
mov
sti
pop
cli
mov
add
gs
out
sti
pushf
mov
xlat
lds
in
(bad)
inc
in
(bad)
mov
mov
movq
xor
sbb
mov
nop
scas
lods
dec
enter
inc
add
mov
loop
stc
jo
mov
mov
cmp
es
outs
aaa
push
push
ds
cdq
(bad)
mov
mov
mov
mov
retf
dec
in
mov
in
lahf
pop
(bad)
aam
jne
mov
inc
enter
rcl
adc
imul
cmc
hlt
jge
sbb
ret
jmp
dec
add
cli
aad
pop
sbb
leave
and
fst
push
lea
shl
daa
push
mov
aas
hlt
lods
mov
(bad)
dec
movs
enter
cmps
push
jmp
int
icebp
icebp
mov
mov
jbe
mov
pop
(bad)
push
adc
cmps
movs
mov
retf
mov
test
fadd
dec
shr
std
bound
pop
adc
xor
xor
sahf
aaa
addr16
jo
repz
push
dec
mov
pop
repnz
cld
enter
das
cmc
mov
out
pop
push
dec
mov
lock
push
mov
sub
sub
cdq
sub
and
pop
aaa
push
jp
aaa
lahf
sub
icebp
push
pop
mov
xchg
sub
stos
aas
sub
push
sahf
aaa
lahf
stos
cld
loopne
xchg
call
(bad)
mov
or
push
mov
or
push
leave
cmp
cmp
outs
xor
mov
mov
cmp
lds
fldcw
inc
pop
xchg
push
cmc
imul
dec
push
inc
adc
pushf
sub
add
(bad)
cli
shl
mov
(bad)
out
fcomp
out
add
inc
shl
dec
inc
xchg
int3
xor
pop
das
jle
jmp
jno
mov
mov
test
lahf
mov
pop
ss
hlt
cmps
adc
cdq
iret
(bad)
push
test
(bad)
data16
sub
mul
xor
push
aas
into
mov
addr16
test
inc
cmp
inc
cmp
test
adc
mov
pusha
into
fcom
adc
sub
jae
xchg
and
(bad)
inc
cmp
out
aaa
cmp
enter
mov
and
leave
js
adc
sbb
jae
jb
ror
rol
inc
jns
or
shl
fcomp
js
cs
sbb
push
mov
mov
dec
scas
out
and
mov
xlat
cdq
adc
cwde
rcl
imul
mov
sbb
mov
popf
or
cmp
mov
stc
push
xchg
movs
push
clc
fstp
js
inc
dec
dec
or
popa
xrelease
mov
fcomp
jmp
lea
fiadd
xchg
in
jmp
add
push
sub
dec
sbb
cli
sbb
cmps
push
repz
sbb
stos
mov
sbb
push
push
push
xor
in
add
sbb
xor
in
rol
ins
jmp
dec
fist
cmp
rol
rcl
stos
sub
(bad)
aas
in
ss
shl
xchg
push
or
lods
sti
mov
loope
adc
nop
jnp
in
mov
adc
mov
shl
gs
xchg
or
aas
hlt
xchg
push
add
xor
int
movs
add
and
jns
(bad)
mov
xchg
cdq
nop
adc
push
pop
mov
jmp
jp
retf
inc
out
sub
in
inc
push
pop
mov
add
test
jnp
mov
clc
stc
fdivr
xchg
fiadd
pop
mov
sub
xor
xchg
add
jno
popa
push
and
out
aas
push
xchg
jecxz
cmp
stc
and
mov
jle
sbb
xchg
adc
gs
fcomip
imul
mov
ins
outs
fisubr
mov
hlt
push
mov
mov
je
(bad)
push
popa
das
ret
jne
xchg
in
test
pop
cmp
pop
or
and
sub
push
mov
das
rol
neg
ja
(bad)
adc
adc
sti
(bad)
retf
les
mov
pop
addr16
inc
mov
xchg
inc
bound
lods
ja
mov
pop
out
arpl
sbb
sar
pop
out
pop
cli
sub
pop
xlat
les
ins
push
xchg
jne
cmp
pop
sbb
cmp
xchg
out
mov
jae
and
pop
push
add
mov
adc
fs
mov
push
push
push
dec
or
loopne
data16
out
and
int3
lds
and
jbe
push
mov
or
pop
repz
cwde
push
adc
fild
shl
pop
sub
movs
jne
(bad)
pop
in
jp
je
mov
ds
xor
jecxz
lods
movs
jl
movs
inc
fdiv
push
clc
cmps
xchg
or
sub
(bad)
call
jns
dec
mov
and
dec
inc
dec
arpl
je
mov
mov
leave
push
leave
or
dec
dec
jb
movs
imul
inc
idiv
jne
push
inc
sub
js
jae
int
cld
std
shl
fidiv
jne
test
leave
fisub
add
push
push
mov
inc
les
inc
jb
ror
lods
jecxz
adc
bnd
xchg
or
or
(bad)
imul
int
rcl
sub
jp
mov
or
stos
ss
das
popa
push
add
sbb
dec
cmp
sub
fnstsw
push
shr
push
pop
je
rcl
adc
cmp
ss
(bad)
fidivr
dec
dec
or
or
inc
test
dec
sbb
shr
push
scas
sub
adc
imul
icebp
push
xchg
and
xchg
xlat
loope
sar
jp
cmp
into
in
add
fisub
call
fwait
jp
test
sub
xchg
cmps
or
dec
pop
(bad)
pop
sbb
mov
(bad)
fstp
sti
js
jle
imul
iret
imul
or
sbb
shl
sub
dec
fcmovu
ds
lock
verr
jns
shr
imul
adc
fcmovb
iret
fdivrp
data16
mul
popf
cmp
ret
ins
frstor
add
call
not
fsub
call
lods
aaa
mov
mov
fsubr
sbb
in
aas
sub
xchg
lods
(bad)
aam
out
or
sub
sub
hlt
mov
mov
pop
sub
push
loope
xchg
out
(bad)
loope
jmp
fprem1
fidiv
daa
pop
outs
cmp
dec
iret
add
jmp
inc
sub
pop
sahf
cmp
adc
test
cmp
dec
push
jl
inc
cmp
arpl
pop
xor
js
cmp
xchg
add
ss
and
mov
daa
or
and
pushf
aad
(bad)
xchg
js
pop
xchg
std
mov
xchg
pop
push
bound
mov
ss
mov
addr16
jns
fxch
loopne
data16
inc
fwait
sar
inc
bnd
fimul
push
popf
xor
adc
fwait
sahf
xchg
into
add
cmp
xchg
xchg
inc
test
gs
push
mov
mov
xchg
fld
cmp
and
popa
test
js
loopne
ins
ret
mov
test
ins
jmp
mov
cmps
jae
lds
xchg
xor
jae
std
fucomp
adc
or
in
iret
mov
imul
push
jmp
loopne
pop
fadd
ja
fwait
loope
inc
mov
mov
out
inc
xchg
std
js
push
dec
(bad)
cld
aas
loope
addr16
and
jmp
sar
push
stos
add
jns
sub
loope
loopne
ret
xchg
fwait
movs
cmp
std
lods
sbb
cmp
xor
leave
and
sub
mov
pop
mov
ror
ja
xor
mov
ds
and
inc
stc
aas
add
lea
outs
mov
or
out
jae
into
lahf
push
push
inc
sub
jmp
push
loop
add
scas
iret
and
es
cmps
adc
sbb
in
bound
or
je
in
stc
pop
in
stos
inc
jns
lds
(bad)
jmp
mov
mov
jmp
sahf
repz
jb
xchg
(bad)
mov
movs
sbb
mov
out
inc
int
adc
mov
cmp
jle
in
mov
xchg
mov
sub
or
xlat
or
(bad)
jmp
xchg
cmp
je
or
(bad)
in
xor
out
mov
mov
pop
stos
xchg
xchg
int3
mov
sub
inc
pop
mov
repnz
and
inc
xchg
(bad)
shl
mov
rcr
aam
or
sub
xchg
imul
neg
rcr
(bad)
fwait
inc
mov
aam
adc
pop
scas
fld
ret
xor
(bad)
(bad)
xchg
push
icebp
jg
cwde
mov
pop
jp
mov
(bad)
loope
dec
xor
sti
ds
test
hlt
out
aad
nop
cs
mov
inc
nop
retf
xchg
push
cmps
daa
push
lahf
xlat
nop
jo
mov
mov
mov
ret
(bad)
ret
mov
daa
fidivr
ror
ror
shr
inc
leave
jge
xchg
int
sti
stos
mov
sub
cli
out
cmps
hlt
pusha
icebp
dec
(bad)
xchg
loopne
mov
ret
lahf
(bad)
aam
cmp
sub
xchg
add
sar
xchg
pop
les
hlt
adc
xor
ds
and
or
sub
popa
ds
push
push
pop
mov
adc
dec
xor
pop
fbld
jl
add
retf
adc
jno
iret
push
sub
daa
sbb
jmp
fild
sub
cmps
jno
mov
mov
outs
and
dec
pop
test
scas
cmp
xchg
jmp
sbb
add
push
sub
add
pop
xor
lods
pop
cmp
dec
cmp
xor
cdq
test
and
jo
xor
int
int3
and
mov
pushf
inc
mov
(bad)
mov
dec
push
cwde
cdq
xor
mov
iret
cmp
into
sub
xchg
cmp
sbb
inc
movs
xchg
(bad)
adc
ins
or
das
test
in
xchg
mov
sbb
ja
cmps
stc
icebp
fisttp
inc
aam
fdiv
clc
retf
repnz
cdq
push
pop
cmps
dec
push
bound
ss
sbb
push
pop
stos
cmp
mov
jge
jne
jne
lock
mov
push
fcom
pop
xor
rcl
inc
fwait
pop
sub
retf
loopne
xchg
cwde
adc
ja
mov
push
(bad)
aad
gs
test
lods
js
dec
pop
push
mov
test
sbb
gs
stc
movs
adc
jo
mov
outs
nop
jecxz
fcom
jnp
call
sbb
pop
add
mov
pop
bound
in
fistp
je
mov
cmp
jecxz
xor
and
sub
jb
cmp
pop
mov
dec
or
ins
xchg
stc
daa
add
adc
sti
(bad)
xlat
scas
dec
xchg
lea
pop
enter
sbb
adc
mov
jno
cmp
inc
(bad)
sub
inc
leave
jno
adc
int3
xor
scas
dec
aam
rcl
mov
sub
mov
xor
jge
pop
ret
mov
push
sbb
inc
(bad)
stos
mov
sbb
jmp
add
aas
mov
inc
cmp
mov
neg
and
dec
stos
pushw
mov
aas
rol
nop
inc
or
scas
or
dec
ror
jp
xor
xchg
je
push
das
mov
ds
dec
adc
test
lahf
loop
mov
test
or
mov
mov
out
cwde
and
mov
and
push
cwde
pushf
or
dec
xchg
inc
dec
inc
sub
pop
ror
dec
js
adc
fiadd
lds
mov
mov
and
mov
push
fnstcw
(bad)
sub
xchg
sub
add
(bad)
loopne
fld
xor
imul
jle
and
dec
fs
jmp
ret
lahf
rol
push
(bad)
call
lahf
mov
outs
clc
test
test
sub
cdq
inc
xor
and
ret
adc
jge
push
mov
popa
push
(bad)
js
mov
mov
into
aam
jecxz
or
fwait
bound
adc
aam
jmp
sub
and
rol
ficomp
push
jo
xchg
xchg
shl
sbb
jmp
ja
cmp
jl
(bad)
outs
lock
fwait
cli
ds
imul
clc
call
lods
push
add
jge
in
sub
lods
mov
jns
adc
xchg
call
dec
xor
cmc
pop
bound
mov
mov
popa
push
mov
pop
stos
mov
mov
cli
leave
aad
jl
cmps
xchg
int
cli
push
arpl
xchg
push
in
xchg
mov
in
lods
mov
xchg
xchg
fidivr
jl
jno
mov
mov
pop
aas
sub
mov
sbb
push
pop
xor
xor
out
push
dec
jg
cmps
mov
test
not
dec
mov
add
popf
or
movs
mov
dec
inc
fsubr
pop
ror
(bad)
fwait
sbb
fimul
mov
or
adc
mov
out
pusha
inc
int3
int
ds
fisubr
test
mov
and
xor
or
add
push
inc
jg
cmp
call
cld
and
inc
push
test
mov
dec
pop
add
jns
sub
cli
das
adc
mov
cmp
and
xor
(bad)
arpl
shr
ins
sar
jne
call
mov
and
mov
enter
test
push
test
adc
jmp
push
retf
xor
inc
retf
xor
aad
sub
fwait
add
fidivr
inc
scas
lods
jle
inc
adc
pop
jno
jecxz
sbb
and
push
cld
fdivp
sbb
ret
pop
repz
push
stos
xchg
fcomp
pop
je
lods
daa
xor
out
cmp
lods
inc
fimul
jp
add
inc
push
jbe
aad
dec
out
adc
cmp
mov
pop
arpl
push
jns
(bad)
or
aaa
retf
addr16
xor
sub
push
push
or
pop
push
dec
das
xor
lds
lahf
ds
imul
adc
push
pushf
and
pop
lds
aaa
fidivr
daa
or
popa
call
jmp
or
push
xor
xchg
ja
jmp
cmps
sub
or
sub
or
ins
sub
les
dec
or
jmp
cmp
adc
push
sahf
test
adc
pushf
ror
nop
arpl
mov
repz
ins
gs
adc
imul
push
jg
ss
fldenv
add
jo
fidivr
cli
mov
xchg
adc
mov
(bad)
inc
mov
mov
push
adc
les
fidiv
mov
sahf
daa
push
into
push
mov
cmp
fwait
out
lods
fisttp
(bad)
rcr
add
push
not
(bad)
cld
aam
iret
lods
sub
adc
in
inc
fstp
xchg
pop
int
mov
sub
repnz
jmp
(bad)
and
fidiv
pop
or
pushf
mov
pop
cmp
add
xchg
outs
mov
inc
mov
scas
pushf
daa
stos
out
sub
std
ja
stos
xor
push
(bad)
sbb
pop
sub
mov
inc
jnp
jmp
mov
pop
outs
or
sbb
(bad)
mov
or
gs
pop
dec
mov
mov
xchg
jg
fld
jmp
pop
repz
mov
jmp
cmp
sub
mov
retf
test
ins
ja
push
in
test
shl
fsub
(bad)
or
xlat
(bad)
jno
stc
cwde
daa
adc
cld
jno
ss
push
stos
or
mov
enter
pop
inc
call
jmp
out
mov
or
adc
rcr
xor
pushf
mov
in
inc
mov
lahf
mov
cmp
jbe
js
add
mov
add
ret
pop
adc
xchg
pop
pop
xor
pusha
mov
shr
pop
add
lods
jmp
jg
cmp
lds
imul
out
cmp
icebp
loop
or
and
std
pop
dec
(bad)
scas
cmp
add
mov
mov
ss
pop
popa
inc
ss
cmp
dec
jp
dec
gs
dec
test
addr16
push
xor
cmp
not
sbb
fimul
das
in
ror
in
movs
mov
or
add
arpl
sar
dec
jle
jne
or
(bad)
cmp
sbb
out
jbe
cmovnp
mov
push
xor
dec
sub
rcl
jns
cs
dec
jmp
idiv
jecxz
in
outs
dec
bswap
scas
jg
add
pop
sbb
mov
push
xchg
retf
xor
inc
or
jle
push
push
outs
mov
outs
xchg
iret
sub
mov
xor
pop
pop
add
ds
cmps
scas
cmp
cmps
jmp
mov
out
sub
out
pslld
dec
inc
inc
call
(bad)
mov
add
addr16
sub
iret
aaa
rcr
add
mov
dec
and
jne
xchg
xchg
test
cld
xchg
add
mov
shr
arpl
sbb
mov
or
pop
std
adc
and
pop
scas
lock
dec
xchg
idiv
sbb
xor
cmp
mov
pop
ret
ficom
xchg
aad
add
sti
mov
dec
lods
jnp
sbb
stc
into
push
aad
call
stos
mov
cmp
ret
cmps
mov
(bad)
adc
sub
adc
push
xchg
lds
fs
pop
inc
push
test
out
or
lods
pop
repnz
loop
adc
idiv
bound
not
retf
or
dec
imul
mov
jge
adc
push
inc
rol
adc
(bad)
mov
pop
dec
fiadd
stos
in
jg
rcl
mov
ins
enter
dec
dec
pop
scas
and
cmp
hlt
ins
cmc
push
xor
(bad)
(bad)
cld
(bad)
cmps
adc
ds
mov
mov
retf
call
sub
dec
xor
pop
cmp
xchg
out
mov
(bad)
lock
test
dec
out
loop
cmp
jle
bound
xor
int
ja
jmp
dec
push
xchg
dec
scas
pop
ret
fcom
pop
loope
add
lds
and
xchg
test
mov
jg
in
enter
mov
adc
pop
or
loop
inc
sti
shr
xor
shl
push
outs
jne
data16
push
rol
out
pop
inc
xor
lea
adc
adc
sti
mov
(bad)
cwde
(bad)
and
into
fild
sub
dec
or
std
xor
push
xor
adc
je
adc
pop
or
in
or
xchg
std
inc
imul
push
mov
cmc
xor
loope
pop
or
(bad)
cmp
daa
in
and
mov
mov
xchg
cmc
pop
dec
or
mov
(bad)
push
sub
repz
xchg
sbb
inc
fcmovne
push
pusha
jb
mov
push
mov
in
mov
xor
mov
je
push
lods
(bad)
or
sbb
fadd
push
jl
sbb
add
pop
mov
inc
dec
les
daa
call
dec
ffreep
data16
push
call
call
sub
mov
inc
enter
test
mov
xchg
fisub
and
cmp
test
pop
push
push
dec
sti
shl
enter
pop
lock
jmp
call
push
outs
cmc
fidiv
(bad)
inc
outs
cmp
mov
jo
pop
sub
shr
inc
inc
xchg
aaa
mov
sbb
add
call
sub
push
out
fwait
dec
push
xchg
sbb
std
jp
sub
jb
icebp
sar
add
sub
fcomp
stos
jb
aas
ret
stc
gs
rcr
lods
sar
lahf
sahf
(bad)
pop
pop
add
or
cmp
aaa
dec
and
adc
jo
sbb
sub
xchg
dec
punpckhbw
int
cmp
out
jbe
aaa
jne
push
data16
repnz
mov
scas
pusha
mov
enter
inc
(bad)
jge
inc
dec
sar
rcr
jle
push
add
pop
ja
pusha
cmp
js
mov
mov
push
adc
dec
sti
mov
pushw
sahf
cdq
ret
out
std
inc
and
push
sub
mov
rol
cs
cmp
imul
dec
ret
loopne
test
inc
jge
(bad)
fdiv
loope
xor
xchg
sbb
add
sub
push
je
stos
int
jmp
mov
add
arpl
push
ja
add
cmp
xchg
adc
jnp
xchg
gs
stos
and
(bad)
and
aad
mov
dec
or
pop
test
aas
sub
mov
sub
inc
in
xor
call
int3
aam
push
mov
movs
sub
fwait
pop
or
stos
xlat
mov
int
dec
jmp
psrlq
scas
imul
rcl
and
bound
int3
aad
or
test
and
call
rol
pop
jb
mov
popa
push
jl
hlt
test
dec
retf
sbb
cdq
mov
cwde
inc
jg
xor
repz
rcr
call
push
movs
sub
inc
pop
push
je
sar
retf
push
rcl
add
sub
jmp
push
lods
xchg
bound
pop
shl
pop
call
sbb
mov
xchg
add
jl
stos
push
sbb
and
sbb
fwait
or
aad
int3
test
lea
jmp
sub
pusha
ret
sbb
xchg
fidiv
fnstenv
aaa
movs
mov
mov
pushf
mov
and
outs
sbb
mov
rcr
scas
cmp
push
inc
jbe
pop
(bad)
inc
movs
cmps
aam
pushf
pop
xchg
(bad)
ficom
ss
sbb
or
xchg
inc
test
sbb
sub
sub
pop
mov
shr
inc
mov
lods
xor
push
sbb
xchg
cwde
xchg
mov
movs
and
mov
ss
movs
lods
nop
mov
bound
sahf
inc
mov
jno
aam
(bad)
jg
mov
xchg
dec
not
jns
adc
adc
ss
and
adc
daa
pop
out
cmp
push
mov
dec
loop
leave
nop
dec
into
xchg
mov
pusha
add
add
mov
sub
enter
jnp
cwde
push
loope
xchg
stos
mov
or
push
rol
not
dec
inc
out
mov
(bad)
pop
(bad)
pop
add
or
or
pop
arpl
mov
or
adc
stos
es
and
jl
cld
scas
out
aam
mov
lahf
push
or
repz
lods
lds
lock
push
(bad)
and
cmp
mov
out
lock
test
jae
popa
mov
stos
adc
icebp
fwait
jecxz
add
xor
jmp
mov
pop
inc
nop
dec
sbb
sbb
retfw
retf
jnp
ins
jg
mov
js
and
xchg
xor
jecxz
xchg
add
push
push
mov
and
gs
inc
ret
fdivr
mov
push
jecxz
rcr
xchg
cmps
ret
xchg
sahf
(bad)
not
fs
add
adc
repz
fincstp
enter
js
mov
outs
add
mov
mov
pop
iret
stos
add
xchg
sbb
fisubr
cmp
jnp
xor
sbb
sbb
cwde
aad
sbb
test
lahf
push
imul
push
jae
fs
(bad)
ins
mov
sub
shr
jae
ret
repnz
arpl
jl
rol
xchg
fwait
and
sbb
mov
mov
pop
jno
push
sub
mov
xchg
cmp
int3
pop
sub
(bad)
daa
and
push
scas
(bad)
sti
jno
inc
in
fldenv
and
jbe
mov
jmp
iret
add
popf
pop
repz
inc
test
adc
jl
jge
sbb
(bad)
out
add
push
cmp
xchg
outs
jb
(bad)
popa
jo
ret
js
push
aad
pop
or
xor
xor
fist
mov
xchg
icebp
cmp
pop
xchg
out
pop
add
stos
bound
sbb
nop
nop
cmps
and
jmp
push
and
repnz
clc
push
or
cmps
jne
dec
mov
(bad)
fdivr
inc
in
sbb
inc
leave
mov
dec
test
(bad)
xchg
dec
addr16
adc
push
(bad)
idiv
lods
jge
adc
push
jmp
mov
rol
pop
(bad)
outs
ret
loop
jnp
stc
call
adc
and
jle
dec
cmp
mov
icebp
scas
das
cli
mov
add
mov
test
test
aaa
dec
mov
rcl
call
mov
mov
ret
push
pop
(bad)
out
jb
or
ret
push
out
or
in
retf
or
aas
test
fbld
sub
push
pop
jnp
or
add
adc
imul
cs
adc
popa
add
mov
outs
mov
pop
mov
jo
cdq
xor
ror
mov
icebp
sub
scas
jbe
aam
outs
cmp
add
sti
out
bound
ret
sahf
xchg
pusha
dec
mov
pop
xchg
in
adc
adc
std
push
scas
pop
mov
imul
icebp
pushf
inc
int3
push
push
mov
aas
xor
add
je
or
call
pushf
pushf
(bad)
std
dec
rcl
daa
or
cmp
sub
loope
sub
mov
cmp
in
push
sub
inc
jmp
and
(bad)
ret
xchg
dec
idiv
mov
fs
retf
out
pop
mov
inc
ins
inc
shl
jb
and
push
sti
ins
jge
ins
std
dec
retf
pop
fcomi
jp
push
push
push
cmp
adc
dec
stos
fdivr
xchg
mov
je
cmp
inc
dec
xor
add
fsubr
stos
sbb
jno
hlt
jbe
gs
(bad)
cmp
inc
cwde
daa
xchg
push
sahf
mov
mov
and
stos
mov
mov
mov
push
or
arpl
add
push
test
pushf
test
pop
mov
dec
out
mov
out
ror
mov
mov
dec
fidiv
cmps
mov
inc
add
sbb
mov
adc
or
xchg
sub
es
pushf
mov
sub
mov
dec
dec
hlt
sbb
mov
sub
je
mov
cwde
push
cs
ss
std
mov
xlat
pop
push
movs
sbb
dec
pop
ins
nop
xor
lahf
xchg
iret
add
push
xchg
xchg
ss
test
pop
sub
jns
push
je
dec
adc
mov
cs
out
xor
ins
mov
xchg
pushf
dec
rcr
push
xor
int3
fwait
sub
out
cmc
sbb
loopne
or
ret
inc
enter
mov
xor
fstp
pop
xchg
hlt
mov
daa
test
add
pop
and
dec
jmp
dec
adc
xchg
loope
bound
add
pop
(bad)
int
push
sub
cmp
cmp
pop
xchg
aaa
add
sbb
xchg
jo
fimul
xor
imul
mov
loope
mov
data16
jns
dec
enter
mov
mov
movs
(bad)
add
sbb
jae
xor
pushf
sub
lock
ds
psubq
push
mov
daa
xor
xor
test
xchg
je
jne
and
ins
in
ror
jecxz
push
and
scas
(bad)
mov
add
shl
test
sub
enter
imul
adc
lds
sub
sbb
push
int3
and
jnp
pop
dec
xchg
sbb
(bad)
push
jne
cli
push
repnz
adc
cmp
inc
movs
(bad)
add
sub
pop
out
dec
mov
and
push
in
adc
push
jl
jge
sbb
stos
lea
dec
jne
push
stc
je
jge
add
cmp
out
xor
mov
clc
fst
jg
ror
xchg
out
add
inc
pusha
pop
dec
ret
lock
popa
sbb
std
xchg
xor
cmp
inc
inc
cmp
test
adc
loope
ret
xlat
js
(bad)
push
iret
out
pop
and
adc
loopne
int
inc
pop
bound
test
pop
mov
sbb
loope
xlat
fsubr
popa
ja
cmp
sub
shl
(bad)
jp
sbb
jp
test
scas
aaa
inc
mov
sub
mov
pop
mov
sahf
cpuid
xchg
(bad)
hlt
bound
lock
mov
cmp
mov
outs
jge
push
popf
and
adc
lahf
fcom
inc
fisub
das
dec
xor
sub
mov
cmp
(bad)
out
jns
(bad)
fidivr
(bad)
pop
jmp
rol
mov
cmc
push
jb
ins
pop
fcomp
sahf
cwde
hlt
mov
mov
bound
sub
ja
fcmovu
les
cmp
inc
sbb
adc
xchg
mov
push
mov
sbb
push
add
sbb
cdq
int3
and
push
mov
dec
pusha
sahf
mov
jne
shr
or
jns
push
cmc
fisub
aas
jmp
aam
arpl
push
or
fs
cmp
int3
mov
sbb
dec
sub
inc
push
xor
xor
pushf
push
sbb
inc
xchg
jo
adc
add
or
fidivr
xchg
mov
cmp
mov
inc
fistp
(bad)
scas
cmc
rol
mov
dec
xor
push
mov
int3
std
cwde
cld
test
xchg
(bad)
push
push
xchg
sbb
add
jo
or
mov
sbb
push
clc
pop
push
sub
rol
xchg
ss
sbb
loopne
sbb
in
int3
adc
les
and
adc
pushf
stos
sub
enter
sub
sbb
sub
mov
sbb
sbb
je
mov
hlt
inc
or
mov
rol
outs
and
sbb
xor
and
push
(bad)
add
cwde
lods
jns
add
sub
adc
mov
jmp
pop
cs
and
mov
sub
adc
test
xor
adc
cmps
aad
lds
repnz
add
int
adc
sub
sub
(bad)
out
add
or
jnp
xlat
mov
xor
sbb
mov
push
adc
push
mov
ins
icebp
scas
push
dec
sbb
push
outs
jne
mov
arpl
movs
or
leave
xchg
mov
scas
sbb
(bad)
retf
sti
cld
sbb
or
jae
aaa
faddp
imul
and
and
push
and
hlt
or
mov
pop
fnsave
cmp
or
mov
adc
sub
cdq
outs
or
inc
pop
xor
cli
iret
rol
add
dec
cmc
sub
imul
out
aad
xchg
sub
add
xchg
shl
jno
ss
jp
das
add
pop
vsqrtps
std
pop
movs
or
test
sbb
loope
mov
retf
js
xor
cmp
adc
fdiv
mov
lods
mov
inc
jb
ficomp
shr
push
jecxz
mov
xlat
cwde
mov
push
push
(bad)
addr16
jnp
lds
retf
neg
test
fnstcw
loopne
dec
xchg
pop
sbb
jp
data16
dec
cmp
(bad)
xor
and
jmp
mov
dec
mov
std
and
std
retf
std
loopne
nop
imul
lea
inc
sbb
adc
fst
sub
and
push
adc
pop
inc
imul
jl
mov
mov
xchg
pop
aad
mov
adc
push
sti
mov
mov
push
or
jno
mov
dec
mov
(bad)
sbb
outs
pop
int
mov
or
mov
aam
and
test
pop
retf
fild
xchg
push
mov
push
adc
cwde
ss
mov
cmp
push
int
push
test
aad
cmp
cld
and
or
ins
add
out
inc
mov
cmp
dec
lods
xchg
mov
mov
imul
mov
hlt
or
mov
(bad)
int
mov
icebp
ja
fild
shl
push
mov
fbld
inc
adc
fdivr
pop
cli
aad
pop
mov
js
xor
fstp
xchg
adc
mul
add
out
add
dec
ficomp
out
sti
mov
test
mov
sub
cmp
mov
int
jmp
push
dec
add
addr16
pushfw
sahf
hlt
mov
cmp
shl
push
and
jl
fucomp
les
push
adc
jns
hlt
out
shl
pop
fcom
adc
jle
jmp
add
jmp
lods
adc
popa
js
icebp
pop
in
mov
mov
(bad)
pop
pop
push
add
cld
push
(bad)
xlat
dec
scas
sub
mov
pop
sub
push
imul
ja
retf
jle
push
imul
psllw
and
push
mov
inc
shl
mov
mov
inc
mov
stc
(bad)
pop
adc
mov
shl
pop
sahf
call
and
(bad)
mov
pop
lahf
mov
xchg
retf
mov
in
inc
in
(bad)
fsubr
rcl
mov
int
jb
cmc
imul
inc
(bad)
in
xor
mov
xchg
arpl
xor
shl
lods
std
sub
jp
movs
mov
adc
jbe
jmp
sti
sub
arpl
lahf
out
xchg
retf
xchg
icebp
sahf
pop
fidivr
and
mov
lods
call
push
aas
inc
inc
je
sti
je
loope
sahf
mov
js
lock
(bad)
iret
xor
jl
mov
xor
xor
xchg
out
cmp
test
mov
push
mov
mov
xlat
ror
enter
and
stc
pusha
cmps
cwde
add
(bad)
xor
arpl
xor
jmp
mov
xchg
pushf
out
xor
sub
sub
dec
leave
mov
(bad)
inc
popf
das
cmp
cmc
outs
or
sbb
push
mov
jecxz
jl
repz
add
hlt
gs
ss
jle
cli
(bad)
xchg
jl
iret
imul
(bad)
xchg
jecxz
dec
outs
inc
fabs
jmp
ins
rcl
stc
xor
lea
or
outs
xchg
or
retf
dec
inc
movs
mov
lahf
lods
pop
push
cmps
mov
in
sti
add
jp
adc
push
mov
pop
test
dec
leave
loope
jno
mov
xor
pop
mov
dec
pop
cwde
pop
sahf
push
stos
dec
or
retf
pushf
es
add
paddusb
idiv
mov
dec
loop
mov
and
add
mov
rcl
aaa
pop
inc
jecxz
data16
and
fsub
cwde
fwait
pop
mov
iret
jns
bound
mov
mov
cs
pushf
retf
call
dec
aas
rcr
scas
push
pushf
dec
mov
cmp
cwde
pop
jg
jnp
fsubp
xchg
add
jb
push
test
push
sub
pop
ror
lea
push
fucomip
push
mov
and
inc
loop
xchg
ds
outs
popf
sbb
ins
jecxz
sbb
and
dec
pusha
leave
mov
daa
sbb
dec
out
jl
mov
(bad)
mov
rcl
mov
sub
sub
(bad)
mov
adc
and
out
shl
cwde
scas
inc
repz
ja
in
cmp
xor
addr16
push
out
inc
retf
hlt
add
out
or
inc
dec
call
or
and
sub
add
push
mov
xchg
int3
shr
jmp
mov
mov
cmp
scas
xor
mov
pusha
xchg
cmps
add
test
out
mov
fcom
stos
cmp
jne
(bad)
minps
add
inc
add
ss
mov
inc
call
jns
inc
jnp
fucom
out
push
leave
mov
jne
int3
sbb
mov
ror
shl
fdivrp
add
shr
dec
push
mov
xchg
fst
dec
pop
mov
jp
jmp
xchg
aam
cmp
jns
jp
mov
jns
sti
jmp
sbb
xor
jecxz
mov
cmp
test
lock
push
add
mov
push
lea
test
xor
out
out
(bad)
push
cli
jno
std
pop
adc
and
mov
push
dec
jmp
(bad)
cmp
cmp
push
adc
add
imul
pop
sbb
shl
aad
shl
mov
adc
xor
pusha
jmp
test
lahf
dec
lds
ss
push
add
pop
ss
mov
xchg
hlt
sub
lahf
add
push
sbb
adc
pop
out
aas
xchg
xchg
aaa
iret
and
(bad)
and
out
dec
retf
jnp
push
das
mov
into
or
and
sub
sub
dec
mov
mov
push
shl
ficom
je
clc
icebp
or
inc
iret
aaa
into
sbb
jp
jne
push
out
outs
icebp
aas
std
mov
sahf
retf
lahf
jmp
pop
xchg
pushf
retf
dec
outs
fs
or
popa
sbb
imul
sbb
in
mov
sub
xchg
push
jbe
xchg
pop
je
test
bnd
mov
sbb
stos
cld
(bad)
in
outs
dec
test
pop
scas
aas
sti
add
sub
and
int
or
ret
or
imul
outs
inc
inc
mov
mov
in
out
xchg
ins
fld
adc
pop
popf
bound
xchg
mov
in
loopne
inc
jnp
retf
adc
jae
stos
scas
ds
cs
dec
inc
movs
pop
jns
in
add
cmp
and
scas
mov
jne
jbe
ror
push
jb
pusha
cmp
pop
ret
mov
pop
sub
loopne
or
mov
inc
mov
and
shl
sbb
push
mov
add
fsubr
(bad)
and
jbe
mov
getsec
mov
mov
xchg
std
xchg
(bad)
pop
pop
pop
pushf
outs
aas
sub
in
cmp
adc
(bad)
gs
call
les
out
cwde
and
jecxz
(bad)
clc
pop
ins
mov
(bad)
fs
loope
mov
data16
out
jno
fbld
repz
xor
mov
pop
fsub
call
add
jmp
int
sub
not
and
test
push
sub
sub
bound
mov
pxor
pop
add
popf
cmps
das
aad
inc
out
shl
mov
cmp
arpl
arpl
mov
xchg
sub
test
je
sbb
fisttp
fcomp
cmp
mov
dec
repnz
loopne
inc
and
ret
les
pop
repnz
pop
push
ficomp
(bad)
mov
or
stos
xchg
jmp
test
mov
sti
aas
ins
ret
xchg
dec
mov
add
loop
inc
dec
fisubr
cmp
dec
fsub
adc
mov
lods
pop
cmps
pop
imul
bound
xchg
arpl
call
mov
sar
outs
push
xor
fadd
cmp
cmp
jmp
add
out
outs
fstp
(bad)
mov
jb
sbb
retf
addr16
bound
push
push
push
call
pop
rcr
ret
dec
xchg
jae
es
pop
cmp
popf
add
xchg
aam
inc
add
retf
imul
sub
push
cmps
xchg
pop
inc
repz
push
loop
xor
(bad)
mov
add
shl
es
in
sbb
stos
xlat
adc
push
mov
retf
adc
mov
inc
(bad)
mov
jle
sub
rcl
data16
dec
mov
cmp
jl
scas
push
pop
retf
sub
push
mov
(bad)
mov
push
cmp
mov
push
mov
lds
xchg
jge
adc
push
stos
clc
push
in
mov
jb
mov
mov
js
ror
mov
cmp
std
mov
lods
mov
(bad)
sbb
sar
mov
dec
and
dec
gs
xchg
push
add
je
ins
dec
and
cmp
dec
repnz
movs
mov
movs
das
xlat
sar
sub
ffreep
pop
(bad)
mov
and
addr16
jmp
repz
sar
add
mov
xor
mul
mov
mov
int3
xlat
cmp
and
add
and
inc
push
outs
fist
sub
mov
xor
and
outs
sahf
jmp
les
nop
pop
clc
mov
and
sahf
and
jb
xchg
mov
dec
out
mov
(bad)
sti
mov
mov
and
dec
push
mov
mov
repz
add
addr16
mov
jns
nop
push
call
dec
xchg
push
mov
mov
and
jg
mov
adc
out
sbb
imul
loopne
fnstcw
adc
sbb
mov
out
cmp
mov
rol
mov
pop
pop
(bad)
or
cmps
sti
sub
pop
xchg
stos
(bad)
(bad)
and
por
fcomp
ret
inc
loop
mov
lods
(bad)
mov
xchg
imul
push
adc
inc
shr
int
inc
push
push
pushf
sti
out
sbb
daa
movs
xor
xor
jae
pop
cdq
pop
icebp
in
cmp
mov
push
push
mov
jge
fsubr
and
shr
jl
scas
sar
sub
xor
jbe
aam
inc
push
mov
ins
and
dec
cmp
cs
(bad)
in
and
popf
loope
arpl
jg
xchg
lock
pop
hlt
xchg
xchg
fmul
cmp
cmp
push
adc
sbb
shr
jle
cmp
imul
stos
outs
pop
sub
dec
(bad)
dec
push
xchg
sub
outs
lods
enter
pop
gs
das
push
movs
and
lock
lock
(bad)
jae
pop
movs
or
clc
movs
out
outs
push
rol
aaa
(bad)
fwait
test
xor
xor
jns
xchg
xor
cmp
dec
sub
gs
sbb
ja
in
mov
push
sbb
cwde
sub
pop
xor
inc
lods
add
sub
mov
repnz
xlat
mov
adc
push
stos
stc
xor
test
mov
pop
cmp
test
(bad)
ror
fld
add
xor
and
sub
jmp
daa
loop
xchg
inc
sub
ss
outs
lahf
mov
(bad)
pop
push
push
fs
or
add
xchg
lods
sbb
fimul
fsubr
fimul
pop
sbb
add
scas
mov
shl
jbe
mov
sub
add
xchg
call
push
cmp
add
inc
xchg
int3
inc
mov
push
push
mov
icebp
mov
ret
sbb
sub
arpl
mov
ret
push
cmp
cmp
adc
jo
lea
sbb
cmp
outs
outs
(bad)
mov
scas
(bad)
sbb
jmp
mov
sub
xchg
into
int3
(bad)
addr16
mov
xchg
inc
xor
sbb
das
sub
gs
out
ins
mov
fisubr
sbb
ret
adc
xchg
(bad)
pop
or
and
add
push
xor
xorps
pop
cmp
es
cmp
int3
xchg
sub
pop
jbe
mov
call
inc
push
jns
fst
jle
sub
movs
imul
stos
sub
popa
test
pop
or
add
out
nop
sub
adc
mov
or
push
mov
fdiv
(bad)
bound
sahf
shl
cs
cmp
adc
adc
xchg
mov
sahf
mov
or
mov
inc
xchg
mov
dec
test
inc
add
jae
lods
mov
inc
push
jae
push
xchg
push
cmps
and
push
add
(bad)
scas
mov
xor
fld
mov
inc
pop
dec
test
sub
fwait
sbb
cmc
lods
xchg
addr16
push
hlt
(bad)
adc
xor
or
ins
and
xor
shr
mov
jo
add
inc
cmp
jae
or
pop
outs
mov
int3
xchg
xor
inc
xor
and
xor
push
icebp
sti
dec
jbe
int3
push
dec
jno
call
xchg
enter
pop
jo
or
pop
mov
xchg
xor
or
ficomp
xor
sbb
inc
mov
or
scas
jmp
mov
inc
cmp
pop
push
dec
repz
pop
mov
setno
mov
mov
mov
adc
sub
es
fmul
xchg
jle
rep
adc
pop
jecxz
test
sbb
pop
std
into
push
(bad)
ds
add
retf
aaa
sub
out
fstp
lock
pop
and
mov
fs
popa
sti
adc
test
xchg
shr
call
pusha
push
xchg
test
test
fmul
xchg
cmp
sub
push
add
popa
imul
jno
popa
dec
sbb
shl
or
xor
icebp
xor
dec
in
js
pop
int3
sub
dec
mov
mov
or
and
stos
sti
popa
pop
(bad)
sub
mov
lds
fisubr
jo
ret
or
nop
pop
adc
daa
test
aam
push
jle
fld
(bad)
in
in
jne
dec
ds
bound
jns
xor
imul
in
add
lds
mov
add
and
fiadd
ret
adc
shl
repnz
xchg
lahf
movs
or
mov
sbb
sbb
add
and
mov
sar
(bad)
repnz
fs
mov
fisub
imul
add
xchg
outs
aas
pop
or
push
mov
ins
mov
repz
loopne
(bad)
pop
lea
push
out
inc
add
jg
jbe
aam
push
(bad)
fwait
xor
and
push
clc
xchg
xlat
and
inc
retf
cld
mov
in
jae
cmps
sub
xchg
push
(bad)
jg
pop
pusha
or
lds
mov
and
pop
inc
add
(bad)
and
les
hlt
push
cmp
icebp
(bad)
mov
sbb
fadd
bound
add
mov
mov
push
sub
repnz
add
call
jmp
xor
test
sbb
loope
xchg
mov
push
adc
mov
aad
lods
out
hlt
sbb
test
ret
inc
add
retf
icebp
mov
icebp
jmp
mov
jge
js
xchg
mov
jnp
sub
dec
mov
test
arpl
hlt
ret
xchg
xchg
mov
cld
pop
clc
movs
add
(bad)
mul
and
js
les
in
push
mov
leave
mov
adc
jne
sbb
pop
mov
push
and
ret
fnstcw
dec
jl
retf
dec
lods
jmp
inc
cs
jmp
sbb
inc
cmp
mov
xchg
mov
movs
inc
mov
or
jbe
sbb
int3
jmp
fwait
mov
lahf
int3
jnp
xchg
call
out
mov
bound
xchg
mov
dec
mov
sahf
dec
xor
adc
mov
add
mov
div
and
fdivr
cmc
or
icebp
icebp
into
xchg
std
mov
push
pop
push
leavew
sti
cmc
inc
xchg
and
push
adc
inc
outs
or
or
xor
lods
in
inc
fbstp
jl
addr16
or
cmp
add
mov
cmp
mov
in
mov
adc
imul
dec
pop
jge
hlt
ja
sti
jecxz
lahf
inc
mov
outs
into
ret
das
pop
fist
loop
and
dec
sub
sbb
push
xor
rcl
mov
sub
fmul
daa
fwait
jle
mov
jns
xor
and
add
(bad)
sar
adc
(bad)
mov
sbb
adc
sbb
push
nop
jg
add
enter
(bad)
xor
scas
addr16
add
loopne
ffree
in
nop
inc
stos
mov
repz
mov
jmp
das
clc
jl
push
int3
fadd
dec
add
int3
mov
scas
call
sbb
push
ss
jmp
nop
cmp
pop
inc
mov
hlt
ss
out
aam
(bad)
js
icebp
jmp
cmps
sub
mov
push
jb
aad
test
inc
xchg
and
inc
inc
jae
mov
aad
push
ss
test
ret
sub
push
dec
mov
mov
fwait
pop
cwde
pop
mov
fisttp
jmp
gs
fst
fwait
je
or
repnz
and
push
movs
mov
test
ins
add
shl
or
mov
in
ss
inc
or
pusha
aaa
daa
test
sbb
stc
nop
xor
imul
ss
in
mov
sahf
push
jb
jecxz
call
test
ret
test
ds
imul
jnp
jmp
mov
xchg
cdq
popf
and
cmp
es
in
inc
push
mov
add
cld
(bad)
(bad)
test
sub
and
ret
sub
mov
data16
(bad)
and
push
push
pusha
mov
or
jbe
mov
aad
mov
dec
jl
inc
pop
loope
mov
mov
ficomp
xchg
test
cmps
pop
inc
dec
mov
adc
iret
or
idiv
mov
sbb
fwait
push
push
cdq
pushf
pusha
jbe
pop
ds
dec
icebp
cli
jmp
sub
hlt
fist
pop
push
nop
sbb
das
mov
fdivr
cmpxchg
ret
int
sahf
pop
out
imul
fwait
pop
jae
call
xor
pop
test
jno
(bad)
rcl
sbb
mov
ficom
mov
mov
(bad)
pop
cmps
retf
pop
aas
sub
dec
in
cmp
xlat
fcmovne
js
adc
push
scas
xor
mov
inc
push
cmp
cmp
mov
stc
jge
movs
sbb
loop
clc
sub
dec
and
lods
call
imul
adc
adc
popf
pop
xor
js
mov
xchg
(bad)
jb
xor
stos
scas
ror
cmps
mov
xchg
jecxz
mov
mov
movs
bound
(bad)
sub
sub
pop
jmp
jmp
cmp
xchg
stc
stos
sbb
cli
mov
jnp
and
pusha
push
jl
jnp
sub
add
jne
add
vpaddq
aam
mov
ins
push
mov
mov
icebp
xor
scas
aam
adc
or
xchg
ror
adc
mov
push
iret
pop
cdq
loop
mov
pop
cmc
mov
xchg
dec
jb
xchg
mov
jmp
daa
lahf
and
in
fdiv
lds
mov
adc
call
jg
and
adc
je
fild
xchg
cmp
fld
inc
mov
inc
add
sub
pop
lea
xchg
outs
xor
in
push
out
or
dec
daa
dec
or
pop
data16
in
mov
mov
inc
mov
push
imul
push
mov
cli
mov
mov
push
pusha
(bad)
aam
mov
ret
and
sahf
fild
es
fwait
xchg
mov
mov
pop
jnp
ins
ja
es
ret
std
sub
call
and
mov
mov
ficom
inc
lea
shl
sub
int3
push
push
xchg
mov
mov
les
adc
adc
sbb
jmp
xchg
mov
cmp
pop
sbb
movs
test
imul
push
int
mov
mov
sub
jnp
aaa
sub
cmps
cmps
cli
mov
xor
scas
mov
test
loope
in
push
inc
test
dec
clc
fidiv
adc
scas
loopne
(bad)
movs
imul
outs
fstp
cmp
imul
mov
rcl
ret
iret
inc
and
sbb
ds
jb
xchg
xor
cmp
in
mov
fwait
outs
aaa
mov
cmp
push
inc
jnp
stos
popf
cmp
ffree
and
mov
push
inc
je
jns
sti
adc
cs
les
mov
xor
outs
push
les
dec
push
ds
les
test
cli
push
sbb
cld
mov
mov
(bad)
push
mov
imul
in
test
cs
retf
(bad)
adc
into
cli
fld
in
adc
rol
pop
and
sub
cmp
push
je
xchg
xor
sar
leave
and
test
into
fst
pop
push
sub
fisub
push
fisub
xor
mov
xchg
mov
add
jnp
mov
loope
xor
gs
iret
inc
adc
mov
sar
sbb
fsubrp
add
pop
dec
ret
fidiv
scas
mov
add
fdiv
pop
cld
cmps
shl
sub
xor
and
aas
mov
and
outs
repz
jns
enter
clc
jge
pop
adc
sahf
rcl
test
and
stos
(bad)
rcl
in
je
jecxz
dec
out
sahf
inc
jno
mov
pop
fwait
pop
repz
retf
mov
and
pop
push
and
retf
in
jmp
ret
out
aad
imul
adc
dec
sbb
mov
out
out
jmp
adc
(bad)
xor
mov
inc
je
aaa
test
int3
mov
shl
test
sbb
xor
fcomp
fcmovne
adc
add
cli
out
pop
in
shr
push
mov
and
sahf
pop
dec
sbb
push
daa
xor
in
and
sar
fld
rcl
xchg
mov
imul
mov
call
stos
out
add
sar
mov
ss
add
(bad)
fcmovu
test
test
jns
mov
xor
adc
popf
or
int
xchg
into
pop
in
dec
jl
mov
jmp
cs
mov
repnz
arpl
mov
sbb
push
jge
arpl
shl
and
shl
adc
lahf
icebp
bound
data16
aam
or
vpunpckhbw
mov
sub
test
pop
mov
imul
daa
sti
sbb
sub
lock
in
pusha
shl
cmp
hlt
and
mov
or
in
lods
stos
push
jge
mov
sbb
cmp
jno
dec
cdq
repz
(bad)
pop
add
cwde
mov
cli
cld
xchg
mov
mov
dec
jne
data16
cmp
inc
cmp
sbb
xchg
sbb
cmc
cmps
mov
mov
pop
scas
push
sub
sbb
retf
xchg
imul
jg
dec
sub
cmp
stos
push
addr16
cld
xor
mov
or
shr
mov
cmps
and
mov
jmp
(bad)
in
js
rol
(bad)
cmp
popf
movs
jp
dec
push
clc
hlt
das
enter
out
cmp
jle
pop
xlat
dec
int3
repnz
jg
sub
into
sbb
add
mov
es
jg
push
icebp
cmp
int
sub
or
clc
sti
or
rol
rol
pop
test
fisttp
imul
mov
or
fild
movs
ds
test
jae
shl
ret
inc
ret
jb
inc
sub
div
in
push
jo
adc
sub
cli
and
stos
ds
lahf
ret
in
nop
push
xchg
neg
imul
push
adc
icebp
xlat
mov
rol
je
std
test
fcmovb
or
inc
fidiv
scas
fidivr
pop
arpl
dec
pushf
imul
or
jmp
fstp
mov
mov
push
jp
jmp
test
mov
adc
ins
call
ror
fnsave
cdq
outs
xor
mov
dec
aad
xor
jl
mov
dec
pop
ret
nop
nop
mov
xchg
sub
cmp
jle
adc
imul
jnp
loopne
jne
ja
jecxz
sbb
sub
mov
out
xor
loope
retf
sub
push
gs
mov
mov
scas
adc
sub
std
mov
iret
add
scas
rcr
mov
cmp
sub
in
sahf
jae
jge
lahf
dec
paddsw
mov
jp
arpl
push
sbb
ss
mov
inc
add
int3
(bad)
cmp
sbb
sti
xchg
and
xchg
(bad)
mov
not
jo
push
gs
int3
adc
inc
iret
xor
adc
jecxz
adc
repnz
push
addr16
push
mov
jne
push
dec
out
sub
imul
xlat
sar
xor
dec
mov
cdq
(bad)
scas
pop
mov
jnp
adc
xor
cli
inc
inc
dec
(bad)
dec
sbb
aaa
mov
iret
adc
cmp
pushf
fwait
dec
push
popf
scas
shl
mov
aad
aas
xor
and
sub
add
cli
sbb
scas
movs
pop
shl
ja
ja
sub
jnp
xchg
pushf
jno
data16
dec
cld
aad
popa
lock
jg
pushf
stc
call
in
ficom
arpl
jbe
ja
and
sti
pop
sahf
sub
dec
pop
mov
xchg
stos
(bad)
ss
cld
mov
sti
adc
inc
mov
in
mov
inc
or
push
loope
fimul
push
xchg
jle
pop
pop
iret
inc
and
mov
fmul
int3
mov
dec
repnz
mov
std
lahf
mov
xor
dec
pop
daa
ja
inc
fmul
push
(bad)
push
fidivr
dec
or
jge
jo
sbb
sbb
(bad)
out
mov
ret
push
xor
popa
repnz
jp
fimul
mov
add
xor
push
fistp
mov
hlt
repz
push
mov
(bad)
sub
cld
bnd
push
mov
cmp
jmp
mov
nop
outs
bound
les
sub
xor
in
enter
and
ss
mov
pop
ret
inc
sbb
ins
add
jbe
mov
xchg
sbb
xor
xchg
jbe
out
push
movs
push
retf
outs
jl
jnp
in
or
pushf
scas
jns
sub
dec
dec
mov
xor
jnp
daa
jp
dec
push
fisub
dec
xchg
sysexit
ss
cmp
xor
xlat
push
arpl
jo
or
push
pop
stc
push
add
push
push
sbb
adc
jmp
cmc
int3
cmp
outs
xor
or
movs
and
or
or
push
jle
iret
sub
xor
pushw
div
and
in
test
shr
scas
xchg
test
outs
mov
mov
push
sub
pop
pop
push
aas
fdiv
mov
pusha
push
xchg
pushf
inc
xlat
adc
dec
retf
out
dec
daa
jl
push
test
or
push
xor
and
mov
xchg
and
jo
scas
cmps
mov
in
daa
retf
push
mov
mov
pop
call
sub
pop
sub
dec
push
lahf
dec
dec
popf
mov
xchg
sub
in
pusha
cmp
lods
jno
push
daa
adc
pop
mov
sub
xchg
retf
mov
iret
fistp
scas
dec
(bad)
xlat
mov
sub
sub
out
nop
(bad)
push
scas
icebp
adc
orps
dec
push
(bad)
inc
test
out
mov
jmp
stos
sbb
cli
retf
inc
call
mov
mov
lods
jp
add
push
out
ins
mov
cmps
xor
test
inc
xchg
std
and
nop
sub
popa
pusha
mov
retf
and
ror
(bad)
retf
scas
frstor
scas
adc
icebp
dec
imul
rcr
cmp
outs
sub
add
mov
mov
xor
daa
cmps
add
jmp
mov
daa
add
jbe
imul
add
jb
adc
mov
sar
pusha
jmp
bound
jmp
sub
push
ror
push
mov
out
push
push
push
ret
fstp
bnd
sar
pushf
into
shl
es
and
sbb
jg
dec
test
stc
push
lods
das
dec
fild
dec
hlt
jno
pop
out
dec
sub
fst
adc
push
stos
lods
cmp
lock
push
arpl
jno
add
arpl
and
xchg
mov
and
enter
dec
add
mov
mov
repz
fs
mov
lahf
add
xchg
jns
mov
or
sbb
out
sub
sub
mov
mov
and
cmp
pop
arpl
cmp
add
push
out
jmp
dec
mov
(bad)
mov
dec
ja
scas
ret
cmps
rcr
cwde
pop
mov
pop
(bad)
scas
xchg
mov
push
pop
ins
lods
jecxz
aas
call
add
jae
fstp
jecxz
imul
lea
sar
frstor
or
mov
clc
repz
fisttp
cmps
cmc
push
in
cmps
aas
adc
in
scas
jb
cmp
out
das
loope
push
icebp
adc
outs
adc
pop
sbb
in
fdivr
dec
sub
das
retf
cmp
mov
xor
push
(bad)
and
push
fiadd
jnp
and
xor
mov
xlat
outs
jle
fidivr
popa
nop
sar
inc
cli
(bad)
mov
pop
ret
scas
push
fdiv
jnp
test
xchg
daa
cld
cmp
imul
jne
adc
or
sub
(bad)
es
movs
pushf
or
xchg
or
into
adc
mov
mov
ins
push
rcl
sbb
mov
enter
sbb
sub
push
mov
stc
adc
jnp
sbb
jne
call
dec
jno
addr16
sub
push
sbb
aas
adc
nop
cld
cpuid
sbb
push
pushw
push
hlt
push
pusha
fisub
adc
push
aad
xchg
fwait
push
or
xlat
mov
push
imul
mov
mov
faddp
sub
and
gs
lahf
push
push
push
sub
in
inc
jae
adc
out
(bad)
push
adc
add
out
ja
mov
adc
dec
cwde
mov
call
add
ins
ins
gs
movd
xchg
sbb
adc
icebp
xchg
pop
adc
sbb
cmps
pop
sbb
cmp
test
xchg
add
cmp
jmp
enter
sub
cmps
sbb
xchg
jmp
push
leave
jmp
int
add
mov
jbe
pop
adc
aaa
push
je
leave
xchg
popa
inc
mov
stc
jnp
push
(bad)
out
and
dec
push
ins
push
sub
popa
mov
xor
ret
stc
pop
jae
or
jmp
dec
scas
sahf
out
ret
stos
adc
stos
jmp
fcom
xor
lea
xchg
pop
jo
mov
(bad)
pop
push
and
(bad)
cmps
or
fldenv
mov
(bad)
pop
aas
pop
sti
adc
(bad)
out
mov
mov
(bad)
(bad)
stc
or
stos
ds
mov
shl
xchg
xchg
popa
push
add
cdq
cmp
enter
xor
aaa
movs
mov
out
xlat
xchg
vpminub
jl
xor
add
cwde
jmp
pop
adc
call
cmp
push
das
jmp
lock
sub
jp
sbb
xchg
jae
out
add
loope
mov
(bad)
lods
sub
cmp
ror
gs
pusha
rcl
fidivr
cwde
pop
lds
sbb
fmul
sbb
xchg
es
dec
call
movs
mov
pop
test
jl
add
lods
fwait
pop
jno
int
inc
xchg
jae
enter
dec
cld
aas
out
mov
ins
and
in
or
neg
jp
jae
mov
imul
fld
mov
or
xchg
cwde
lock
push
pop
sub
aas
cmp
in
sti
inc
sbb
jmp
and
out
lea
mov
pop
pop
add
pop
add
cmp
or
test
sub
pop
xlat
pop
pusha
retf
das
lahf
not
fisubr
mov
shl
in
mov
jns
shl
sbb
(bad)
fdivr
enter
(bad)
sbb
push
test
(bad)
(bad)
dec
out
mov
xchg
(bad)
xor
mov
outs
retf
fs
adc
mov
sbb
xchg
xchg
xchg
call
out
inc
fdiv
cmp
inc
mov
adc
(bad)
repnz
imul
and
loopne
or
or
cmp
sub
push
or
push
add
in
adc
cs
lds
fimul
mov
(bad)
(bad)
jae
xchg
adc
xchg
arpl
pcmpgtd
xchg
leave
push
mov
jo
xor
push
(bad)
xchg
in
sbb
(bad)
fsubp
cld
test
cmp
dec
or
ret
jecxz
cdq
div
cmps
lods
fcmovnbe
jl
mov
xor
sbb
adc
aad
mov
retf
in
pop
pop
pusha
rcr
scas
dec
xlat
mov
lds
push
pop
mov
popf
inc
nop
xchg
pop
mov
cmp
cmp
aaa
outs
xor
push
mov
and
xor
(bad)
(bad)
in
and
out
test
ret
mov
call
push
inc
and
mov
inc
ror
jns
pop
outs
imul
into
pusha
push
mov
jmp
test
xor
jae
sub
adc
xchg
scas
ret
nop
or
mov
(bad)
movs
jbe
sbb
dec
cs
jne
loop
retf
lea
aad
cmp
dec
shl
fmul
loope
call
lods
loope
xor
out
jns
pop
mov
cwde
lahf
mov
pusha
js
imul
in
pop
mov
mov
xor
xor
sbb
inc
lods
xchg
lds
retf
clc
sbb
inc
jp
leave
jo
jo
cmp
scas
les
push
sti
jecxz
or
add
inc
jg
in
push
adc
out
es
adc
push
xchg
inc
and
(bad)
ror
into
sbb
ja
test
stos
cld
dec
nop
jnp
psadbw
stos
xor
xchg
leave
add
sub
push
inc
sbb
int3
out
std
inc
push
or
adc
(bad)
lock
mov
dec
sub
sti
jo
push
xor
je
lods
cli
aaa
(bad)
xor
fcom
inc
push
adc
cmp
push
das
popa
movs
stos
bound
push
cwde
inc
xlat
add
das
fdivr
test
xchg
imul
call
in
pop
es
(bad)
lods
imul
sbb
adc
mov
cwde
and
xor
cmc
pop
call
enter
pop
sbb
fs
stos
push
and
pusha
cmc
clc
or
(bad)
push
jmp
int
and
mov
and
lahf
jmp
adc
jecxz
movs
or
into
mov
inc
push
xchg
stos
push
push
sbb
cli
cmp
fidivr
mov
sbb
repnz
push
sub
jne
ss
xchg
cmps
sti
xor
mov
mov
dec
les
lahf
or
js
data16
lods
push
sub
adc
call
xchg
mov
and
cmp
retf
cmp
mov
pop
lds
dec
xchg
cmc
xchg
je
cmp
cwde
inc
push
loopne
leave
inc
or
and
dec
add
int3
addr16
sahf
dec
loope
fsub
cmp
jg
sub
adc
jae
jecxz
dec
add
jno
sahf
jbe
jne
mov
or
and
push
lods
push
cmps
fnstenv
jle
fadd
mov
sar
repz
into
mov
add
sub
jp
aas
adc
xchg
popf
inc
jecxz
daa
arpl
data16
jnp
mov
jg
push
jne
call
addr16
sbb
jge
outs
xor
xor
fisubr
inc
pushf
test
nop
xchg
sub
push
push
data16
jp
popf
inc
pop
jbe
xchg
inc
std
frstor
mov
ficomp
(bad)
mov
test
mov
lods
fdivr
daa
adc
in
mov
fisub
inc
cmp
sbb
faddp
retf
xchg
inc
fnsave
idiv
les
popa
xchg
jl
dec
scas
inc
and
sbb
nop
(bad)
enter
adc
pop
xor
inc
lock
cmp
pop
ss
imul
cs
in
inc
xchg
popa
jge
aas
mov
fimul
repnz
dec
mov
xor
xor
cli
mov
push
adc
pop
test
inc
idiv
jmp
(bad)
mov
imul
xchg
pop
imul
lods
dec
inc
nop
adc
sub
pop
add
inc
and
cli
adc
and
xor
mov
push
lahf
mov
loopne
jmp
push
pop
mov
pop
lods
je
data16
pop
xchg
jg
pop
dec
adc
mov
dec
pop
cwde
inc
ss
stc
xchg
jmp
jl
ret
cli
dec
jnp
push
aad
loope
dec
pop
fistp
pop
pcmpeqw
out
sub
cmp
push
inc
pushf
stos
loope
mov
push
lods
add
dec
movs
mov
fnstcw
sahf
(bad)
adc
shl
popa
ins
aaa
repnz
mov
jp
cmc
test
clc
dec
bound
test
xchg
push
in
and
push
inc
mov
xor
jg
mov
sbb
(bad)
push
sbb
cmp
test
fucompp
clc
xor
jmp
mov
pop
sbb
test
push
dec
mov
mov
add
ret
test
call
dec
dec
hlt
adc
cmps
cld
bound
xchg
fsubr
fidivr
ret
xor
push
imul
lahf
jae
cmp
rcl
in
idiv
fld
je
lea
addr16
mov
xor
xchg
ins
lds
or
jg
inc
fnsave
mov
call
hlt
mov
and
ins
sbb
(bad)
cld
jbe
(bad)
arpl
test
popa
lss
ins
xlat
dec
sahf
mov
les
and
aam
in
in
push
stos
xor
lock
mov
mov
jmp
push
xchg
add
mov
jge
mov
xor
call
add
inc
add
leave
cmp
fcom
data16
pusha
xor
mov
push
pusha
mov
idiv
retf
inc
pop
lods
pop
dec
dec
push
cli
jns
je
gs
push
sar
iret
inc
sub
mov
xchg
(bad)
scas
add
test
es
test
data16
test
push
jb
add
aad
(bad)
jle
jl
pop
gs
bound
into
sub
lock
pop
in
dec
jle
ficomp
mov
pop
ret
or
cmp
sbb
and
push
es
sbb
jmp
cdq
add
cdq
dec
mov
fisttp
cli
mov
or
(bad)
movs
cwde
ret
adc
push
in
movs
add
fstp
repz
repz
aad
push
sub
inc
and
sub
sbb
and
sub
lods
add
cld
mov
inc
cmps
and
int
mov
mov
shld
add
movs
into
aas
jge
fbstp
pop
mov
repnz
repz
mov
hlt
pop
pop
pop
fld
out
cmp
(bad)
inc
outs
gs
sub
add
aaa
dec
jo
and
(bad)
ds
sub
adc
inc
push
xor
dec
neg
je
stos
adc
or
test
neg
and
adc
jne
inc
fdivr
jle
mov
or
fs
and
pop
jecxz
popa
adc
and
rcl
sar
outs
cmc
adc
icebp
xchg
loope
(bad)
fld
rcl
jmp
in
scas
enter
pop
mov
push
(bad)
js
sbb
mov
pop
pop
sub
xor
in
or
adc
mov
je
add
pushf
adc
mov
adc
push
in
sahf
test
xor
push
outs
fldcw
xchg
xlat
push
neg
inc
retf
ins
hlt
adc
push
fcmove
loopne
hlt
or
int
fild
sbb
sub
adc
add
cld
cli
pop
sbb
(bad)
and
xor
adc
test
rol
mov
jge
push
or
cmp
or
xor
pop
repz
out
mov
jle
std
push
mov
mov
scas
leave
sub
je
cmps
mov
cs
cmp
and
cli
sub
loope
mov
adc
outs
repz
add
and
loopne
sub
fdivrp
push
adc
aas
pop
xchg
bnd
mov
jo
daa
push
sbb
imul
adc
or
fbld
push
fist
inc
or
adc
jl
outs
push
push
cmp
xor
or
lods
xor
inc
jns
(bad)
int
(bad)
pusha
jl
enter
jg
movs
and
sub
test
cdq
out
sbb
scas
fcmovu
cdq
(bad)
pop
mov
in
mov
(bad)
and
dec
pop
or
or
pop
pop
cmp
cmp
cmp
push
push
scas
test
add
cli
adc
push
ins
mov
mov
xadd
xchg
pop
fs
sar
push
push
daa
shr
jns
les
xchg
inc
dec
jl
jne
dec
cmp
mov
add
ja
xor
imul
movs
out
fist
pop
push
data16
push
mov
sub
cmps
movntq
pop
jge
loop
pop
in
lahf
fwait
ss
mov
out
xor
mov
shl
lods
cmp
push
adc
mov
pop
mov
out
add
mov
inc
add
iret
xlat
and
movs
retf
test
ret
in
adc
jp
mov
jne
cmp
mov
or
jg
in
mov
mov
loop
mov
das
sbb
test
scas
jb
outs
mov
dec
pop
pop
daa
sub
push
mov
call
mov
mov
mov
mov
rcr
mov
sub
imul
pop
scas
(bad)
mov
and
sbb
push
mov
inc
or
retf
repnz
popf
inc
ja
mov
fs
mov
xchg
adc
pop
jg
daa
fcomp
cdq
sbb
aaa
add
ror
and
xchg
mov
(bad)
addr16
cmp
loopne
mov
ret
dec
add
add
je
inc
retf
xchg
add
repz
in
cmp
inc
fldcw
test
js
mov
inc
pop
dec
out
jo
int
lods
stos
es
dec
cmc
ret
aas
in
pop
fwait
(bad)
into
iret
lahf
mov
into
mov
mov
inc
loop
xor
lock
ret
pusha
jo
retf
inc
jno
inc
out
call
loope
sbb
push
adc
test
mul
jle
cs
popf
add
out
mov
in
cmp
fsub
pop
and
cmps
retf
icebp
out
mov
xchg
xchg
pusha
jnp
or
int3
xchg
sub
stos
mov
xcrypt-cbc
cmps
adc
shl
dec
out
cmc
xchg
adc
lods
sub
lahf
loop
ja
inc
je
adc
cmp
sbb
mov
aas
mov
jne
sbb
jne
sbb
stc
sbb
lods
cld
es
dec
loope
inc
mov
(bad)
icebp
dec
(bad)
fidiv
xchg
aad
fdivp
adc
call
mov
xor
les
bound
lahf
imul
sub
push
push
into
out
inc
int
adc
loope
or
loop
add
hlt
dec
fidiv
mov
pop
pop
inc
das
stos
add
inc
popa
cmp
(bad)
fcomi
call
jo
sbb
retf
dec
outs
add
and
cmc
jo
mov
jmp
push
retf
mov
cmp
dec
call
fucomip
push
pop
addr16
test
rcl
pop
pop
sbb
xor
and
addr16
add
add
fsub
adc
mov
repnz
int
mov
xchg
dec
sbb
retf
add
push
xchg
inc
ss
stos
lock
(bad)
test
mov
sub
in
movs
aas
sbb
cli
mov
(bad)
inc
mov
or
std
test
or
mov
(bad)
mov
scas
shr
cli
mov
jb
jp
retf
imul
inc
dec
adc
inc
push
jne
or
call
adc
test
jmp
pop
dec
cli
pop
ja
sti
xor
test
aaa
test
fnsave
dec
inc
dec
mov
mov
adc
inc
jmp
mov
xor
lods
mov
dec
xor
jmp
addr16
mov
and
add
fmul
ret
jns
js
out
or
and
ret
mov
(bad)
dec
xor
or
mov
sub
out
or
xor
cli
xchg
push
mov
mov
mov
mov
or
test
xor
mov
scas
pop
lods
(bad)
and
stos
push
or
mov
sbb
mov
jmp
push
das
fldpi
adc
sbb
cmps
sahf
mov
push
(bad)
cwde
loopne
xor
cdq
in
add
in
inc
int3
mov
and
and
call
jns
cs
std
cdq
and
stc
and
mov
push
fld
push
xor
bound
mov
lea
cmp
mov
(bad)
loop
pop
sub
mov
call
icebp
repnz
inc
cdq
mov
jge
dec
adc
inc
mov
mov
mov
mov
pop
(bad)
shl
dec
pop
(bad)
xor
add
sti
xchg
sub
pushf
(bad)
and
cli
jl
frstpm(287
push
xor
loopne
add
lods
sub
mov
ja
daa
addr16
sbb
cmp
test
mov
into
mov
add
movs
sbb
mov
aad
push
pop
cmp
lock
sets
jg
shr
dec
xor
jmp
imul
iret
xor
shl
cmps
mov
es
cmc
push
add
xchg
dec
jmp
je
xor
push
ret
xlat
icebp
mov
movs
(bad)
das
xor
jae
sti
add
xchg
mov
repnz
pop
jg
rol
adc
mov
pop
jno
jecxz
(bad)
loopne
std
(bad)
arpl
mov
clc
adc
mov
repnz
outs
retf
fs
sbb
push
arpl
pop
dec
push
rcr
(bad)
cmc
push
cmp
outs
lods
mov
pop
lds
je
jecxz
ins
or
dec
push
pop
adc
dec
test
push
loopne
or
mov
jmp
xor
(bad)
leave
imul
movs
cld
xchg
xor
mov
ror
gs
inc
push
mov
sbb
mov
sbb
and
push
inc
je
nop
cmp
pop
adc
push
inc
pop
push
sbb
and
cli
cmp
pop
pop
xor
ret
add
xor
inc
mov
push
jae
in
jge
fdiv
xchg
int
cmp
cmp
cmp
shr
call
retf
clc
addr16
sbb
cld
mov
jge
stc
push
div
pop
xchg
and
scas
out
xchg
inc
ins
xchg
arpl
adc
inc
push
cmp
inc
jmp
adc
xchg
pop
cmp
bound
call
dec
fnstenv
cwde
pop
xchg
(bad)
pop
mov
int3
xor
mov
dec
or
and
cli
outs
stc
pop
inc
push
push
bound
cwde
mov
jmp
outs
inc
mov
mov
fwait
dec
cli
mov
or
jo
cwde
loopne
fcmove
pop
mov
arpl
sub
in
xchg
and
pop
das
retf
push
test
xor
inc
sub
mov
in
xor
rcr
xor
inc
xchg
push
inc
mov
scas
ss
retf
imul
or
mov
loop
mov
push
and
mov
aaa
xchg
pusha
out
pop
imul
fld
cmp
das
or
mov
and
jnp
mov
not
push
call
mov
pushf
in
mov
mov
(bad)
push
(bad)
stc
cs
repz
jbe
push
rol
hlt
and
xor
retf
ret
daa
sahf
inc
(bad)
lds
push
sub
outs
mov
xchg
shr
cmp
ret
xchg
clc
and
imul
enter
mov
cmp
(bad)
shl
rcl
mov
retf
int3
aad
inc
int3
add
movs
cmp
jno
or
outs
jns
sub
mov
in
add
inc
mov
pop
pop
(bad)
fs
jecxz
and
dec
adc
fnstcw
jp
jl
fsubp
or
mov
adc
inc
gs
mov
jbe
cwde
and
jae
jecxz
dec
push
xchg
adc
sbb
sbb
inc
gs
cli
sbb
adc
sbb
add
imul
fisttp
mov
xchg
add
dec
test
(bad)
adc
dec
adc
cmp
ret
int
aaa
ja
out
inc
aas
add
xor
jge
outs
push
(bad)
stc
cs
inc
sbb
push
push
arpl
inc
inc
les
fmul
imul
inc
(bad)
cld
jl
push
or
push
dec
push
(bad)
jle
sbb
fcom
imul
int3
pop
addr16
popf
cmp
inc
aam
adc
jp
and
mov
mov
pop
mov
jnp
call
rol
add
frstor
retf
outs
ss
jl
inc
test
xchg
adc
mov
inc
sbb
(bad)
retf
add
fistp
ds
mov
cmp
stos
push
movs
movs
inc
mov
cmc
mov
out
or
fldcw
dec
jle
(bad)
call
cli
xor
ret
std
adc
sub
retf
cmp
pop
inc
and
retf
mov
arpl
sub
xchg
inc
or
push
xchg
outs
je
mov
dec
or
xor
jg
stos
mov
adc
adc
test
push
(bad)
fild
sahf
xor
jne
lea
aas
aad
sub
push
hlt
leave
xchg
int
dec
or
cmc
mov
and
xchg
stc
jae
in
add
add
ds
pop
and
jecxz
in
stc
mov
mov
pop
add
xlat
adc
sub
ds
fdiv
imul
out
inc
inc
mov
dec
pop
push
jle
and
shr
cmp
aam
ss
cmp
int3
les
and
out
inc
inc
mov
aad
push
ins
add
or
les
mov
or
mov
loop
ret
push
icebp
dec
xchg
(bad)
cld
sbb
pop
not
loop
jmp
dec
pushf
out
cli
in
lea
push
in
int3
loope
js
jp
or
push
mov
sub
inc
iret
sti
bound
xchg
fdivrp
mov
xchg
sub
jmp
jbe
mov
xchg
aaa
push
arpl
cld
nop
sub
push
sbb
or
(bad)
fs
rol
add
jb
pop
inc
stc
lock
pop
outs
mov
rcr
movs
(bad)
pusha
jns
xchg
jle
outs
sbb
dec
repnz
mov
sbb
sub
pop
dec
inc
xchg
leave
pop
cmps
mov
sub
adc
fisubr
js
jl
add
mov
(bad)
pushf
inc
jecxz
pop
sbb
rol
jo
sub
add
adc
mov
fdivr
xor
xchg
or
inc
cmp
mov
adc
int3
inc
or
ror
(bad)
gs
cwde
sub
jae
xchg
mov
cmp
sbb
test
cdq
push
inc
jbe
test
cld
ja
or
adc
addr16
dec
push
mov
add
dec
xchg
cmp
mov
add
shl
retf
mov
pop
mov
stc
call
inc
xchg
sbb
dec
fcomi
retf
xchg
jns
adc
arpl
fcom
dec
xchg
cmp
push
and
or
xor
and
repnz
shr
pop
ret
or
sub
fimul
and
jg
not
mov
cmps
jnp
loop
cmp
jp
add
xor
adc
out
push
mov
xchg
push
cmp
jmp
sub
fcmovu
ds
loop
dec
inc
xchg
gs
inc
sbb
das
clc
or
je
add
in
je
call
add
jb
gs
and
inc
or
jbe
popf
imul
dec
adc
movs
cdq
icebp
mov
sub
ficom
sbb
jae
push
test
jne
jne
cld
fwait
scas
clc
add
xchg
mov
or
aas
mov
mov
xor
rol
adc
xchg
sahf
(bad)
cmp
push
in
ret
loope
jbe
mov
jne
out
pop
push
inc
call
ja
aas
jo
clc
or
call
imul
add
mov
pop
repnz
div
test
xor
pop
adc
mov
mov
or
jb
jge
movntq
add
popf
cmp
and
xchg
and
dec
fisubr
adc
xchg
jo
mov
daa
out
cdq
adc
mov
pusha
(bad)
(bad)
(bad)
out
cli
cmps
cmp
mov
scas
cmp
out
adc
push
fdivr
leave
sub
dec
ss
jo
pop
jecxz
or
and
lock
popa
(bad)
int3
or
dec
retf
shl
jnp
stos
test
lds
inc
jo
xchg
inc
mov
and
ins
iret
cmps
mov
add
pushf
movs
pop
ds
hlt
jbe
xchg
jns
fnstenv
pop
jmp
bound
popa
(bad)
outs
dec
adc
jns
sbb
jp
jb
sbb
int3
mov
sbb
test
lods
mov
inc
fisub
ret
test
push
jl
ret
mov
in
sub
mov
int
adc
sub
dec
push
shr
xor
and
push
repz
jbe
xchg
(bad)
cmp
mov
sub
pop
sti
ret
(bad)
cmp
sub
aas
adc
xchg
mov
mul
int3
cli
or
cmp
mov
iret
sbb
ds
push
and
cmp
cmp
mov
cmps
mov
sub
test
mov
stc
ds
jb
popa
int3
(bad)
jge
adc
outs
std
xor
cmps
mov
pop
dec
inc
sqrtps
xor
shl
fdivr
ja
(bad)
test
push
repnz
test
call
jle
lods
mov
shr
(bad)
nop
inc
sti
cmp
jp
dec
inc
lahf
sbb
mov
or
enter
(bad)
mov
fdiv
out
mov
ret
ins
lods
xchg
outs
pop
xchg
fcomp
bnd
int
mov
push
int3
fbstp
mov
cld
xchg
aam
sar
jo
inc
jae
in
fwait
rcl
clc
add
and
inc
(bad)
mov
dec
jg
sbb
dec
mov
mov
pop
sbb
mov
push
inc
(bad)
das
aas
ss
sbb
inc
cwde
push
(bad)
gs
and
mov
ret
in
pop
xchg
xor
pop
adc
pop
aaa
ds
mov
dec
ja
mov
shl
imul
nop
and
(bad)
ins
sub
mov
mov
jne
xchg
and
push
sub
adc
into
push
jmp
std
cmc
adc
data16
test
xor
cdq
jl
aaa
sbb
aam
add
mov
inc
loope
shr
in
(bad)
pushf
pop
sbb
sbb
nop
je
or
jl
sahf
ret
test
mov
xor
lahf
xor
and
sahf
jbe
jno
ret
loope
push
xchg
int
sub
das
mov
test
sti
and
aaa
jmp
aad
inc
fidiv
xor
mov
neg
ror
movs
js
data16
push
add
push
cld
pop
ss
ret
cmp
cs
push
sbb
push
rol
cdq
push
outs
sub
icebp
and
inc
push
adc
inc
cmp
mov
lahf
push
rcr
or
xchg
add
jge
lea
dec
inc
xor
push
push
mov
or
inc
adc
stc
and
jae
push
stc
scas
xlat
jbe
bound
lock
jle
xchg
ret
outs
pop
out
addr16
mov
cmps
out
scas
xor
cld
pushf
pop
loop
out
pop
mov
retf
icebp
lea
xlat
and
xchg
iret
xor
add
(bad)
xor
mov
inc
rcr
jb
jle
or
ffreep
out
in
add
fs
sbb
xchg
pop
ret
pop
mov
sbb
xor
iret
lahf
sub
cs
adc
mov
push
jb
push
mov
sar
mov
in
sbb
mov
adc
fistp
stos
sti
fisubr
int3
mov
mov
(bad)
in
dec
xor
(bad)
pop
mov
lea
adc
adc
push
jbe
aad
enter
mov
inc
ror
ins
sbb
enter
sbb
inc
jae
mov
outs
leave
push
mov
pop
sbb
test
pop
cmp
popf
jb
or
test
add
or
mov
xchg
push
dec
sbb
(bad)
fisubr
shr
pop
ins
scas
and
inc
push
or
sub
inc
iret
adc
or
or
gs
mov
jb
jle
cmp
adc
aam
daa
aas
jnp
mov
sub
inc
retf
lods
sub
sti
cli
or
aad
dec
dec
or
mov
pop
(bad)
fimul
mov
in
arpl
es
jge
pop
jo
cmp
add
pop
aad
mov
sub
jno
dec
in
rcl
or
and
push
push
add
aaa
mov
mov
dec
inc
jp
sbb
sub
and
or
dec
ret
xor
shl
sub
inc
dec
js
in
sub
dec
(bad)
sbb
pop
jmp
inc
(bad)
cmps
imul
iret
inc
movs
xchg
pusha
mov
(bad)
retf
out
aad
jle
cmp
ins
fwait
add
mov
inc
inc
bound
jg
push
mov
loop
aam
and
aad
xchg
xlat
pop
ins
stos
fstp
cli
shr
sub
ins
div
mov
fistp
adc
bound
xor
sub
popa
sbb
je
icebp
icebp
jg
ds
cmc
mov
retf
jns
mov
cmp
outs
out
add
arpl
dec
jb
pop
jl
sbb
lea
jne
or
jmp
pop
arpl
ss
jg
push
xchg
push
adc
int
push
sub
jns
mov
out
sbb
push
mov
mov
pushf
pop
fcomp
sub
fwait
adc
dec
mov
icebp
adc
out
jae
das
test
push
cs
jp
ja
inc
movs
repnz
movs
dec
daa
mov
mov
xor
xchg
push
inc
lock
pushf
mov
rol
inc
pop
ins
sbb
in
fcmovu
outs
dec
cli
and
and
mov
mov
inc
cmp
and
enter
jge
add
shl
push
push
les
cmps
jmp
ficomp
(bad)
and
xlat
cmc
lahf
inc
icebp
ret
js
in
jmp
les
sub
sub
xchg
jnp
pop
push
(bad)
shl
ins
in
das
cwde
into
pusha
cmp
cmp
loop
(bad)
(bad)
xchg
mov
sbb
fmul
test
scas
mov
mov
cmp
aam
pop
push
mov
pushf
(bad)
repz
arpl
fchs
imul
and
cmp
loop
or
jb
lds
inc
fnstcw
sbb
pop
popf
cli
and
add
push
mov
mov
pusha
not
push
sar
lods
or
(bad)
ds
arpl
push
cld
jnp
test
ror
add
pop
idiv
or
push
(bad)
sti
xor
out
data16
dec
jbe
add
and
mov
shl
cmp
cmp
xchg
or
stos
adc
xor
stos
xor
sbb
rcl
mov
(bad)
xlat
fmul
mov
(bad)
adc
pusha
xor
and
jl
dec
mov
or
sar
inc
xor
data16
pop
xor
mov
arpl
sub
dec
imul
lock
retf
es
fcomip
out
fild
sbb
fst
jb
jno
mov
cli
pop
xchg
add
push
cmp
shl
jb
sbb
and
shl
push
addr16
iret
jb
xor
jg
jl
and
retf
push
cmc
pop
aas
(bad)
push
jns
adc
mov
sub
jecxz
js
jae
dec
lods
jecxz
lea
ja
mov
sub
pop
mov
btc
push
and
(bad)
fidiv
and
movs
out
(bad)
movs
nop
xchg
stos
int3
sub
sbb
dec
mov
cmp
loopne
push
out
cmc
mov
fwait
xor
lahf
lahf
xor
pop
cmps
je
and
jns
pop
call
add
scas
mov
xor
jg
data16
push
mov
and
add
mov
inc
push
mov
mov
aad
mov
dec
and
adc
dec
sbb
push
dec
mov
es
dec
into
je
sbb
push
outs
adc
movs
mov
addr16
ror
jb
int3
mov
fist
out
pop
mov
lods
test
aad
jb
sub
pop
mov
icebp
shr
dec
push
or
dec
cmp
mov
inc
out
pop
sbb
jl
loope
fist
lods
stos
mov
div
ficom
xchg
(bad)
repnz
cmp
lea
and
repnz
fdivr
lods
or
out
aaa
dec
movq
mov
ss
(bad)
pop
aam
scas
push
add
fild
jecxz
out
das
and
mov
lods
jmp
jl
lahf
jg
das
push
mov
cmc
sub
in
xor
nop
rcr
mov
int3
(bad)
in
push
das
cmps
mov
mov
jecxz
jb
and
ins
sub
or
lea
aas
hlt
add
pop
fild
icebp
or
sbb
outs
sub
in
jns
into
inc
test
pop
pushf
cld
or
adc
rcl
dec
jl
adc
ret
jns
inc
dec
dec
xor
mov
lock
cdq
dec
jbe
cdq
std
mov
lea
mov
mov
in
sar
pop
and
stc
adc
push
(bad)
mov
jns
movs
mov
rcr
out
jle
cmp
loopne
or
mov
adc
cdq
shl
je
sub
add
(bad)
fld
cli
xor
lock
inc
fs
leave
inc
mov
rcr
popa
cwde
jo
aad
movs
sub
inc
xor
fldenv
fstp
sbb
push
in
xchg
mov
aam
loope
mov
cmps
je
xchg
jmp
sbb
cmp
fisubr
xchg
retf
imul
push
sahf
outs
mov
movs
aaa
jl
inc
aad
push
enter
dec
call
sahf
sub
jae
inc
pop
(bad)
call
mov
call
ins
jle
jae
(bad)
aas
das
cwde
pop
sub
test
inc
pop
xchg
test
div
jns
data16
sbb
push
inc
mov
les
push
adc
lods
lea
lahf
retf
inc
xor
sbb
mov
inc
xchg
dec
and
dec
push
dec
add
and
xchg
ret
cmp
sahf
dec
mov
xchg
mov
mov
pusha
sbb
shl
retf
popf
sbb
ror
xchg
adc
inc
mov
add
and
jmp
scas
mov
das
js
test
arpl
xchg
adc
hlt
addr16
(bad)
fwait
pop
ret
mov
retf
(bad)
xchg
push
(bad)
push
imul
bound
mov
or
adc
push
fcmovnbe
mov
push
ffreep
call
sahf
sbb
lea
xchg
ficomp
bound
sbb
(bad)
or
popf
adc
popf
idiv
test
inc
fs
jl
lahf
test
cli
nop
pushf
rcr
dec
mov
mov
cmp
mov
ret
push
adc
out
out
xchg
xor
pop
or
loope
adc
mov
xchg
aas
push
clc
imul
scas
rcl
pusha
sti
movs
mov
and
and
mov
test
ins
icebp
push
imul
movs
jno
and
fdiv
aas
jmp
sub
push
popf
jbe
arpl
ss
ss
imul
ret
push
in
ins
inc
fisub
fwait
ja
fnstsw
xchg
adc
mov
sbb
retf
int
mov
mov
aaa
and
pushf
jb
cmps
(bad)
or
jb
xor
xchg
xor
hlt
mov
outs
add
gs
xchg
fld
push
push
inc
fld
in
sub
fadd
push
(bad)
in
adc
movs
sar
xchg
sbb
lods
xchg
adc
push
pusha
mov
mov
xchg
jno
or
shl
jae
push
outs
jmp
repz
lods
adc
cmp
xchg
pop
and
sti
sbb
outs
xchg
add
add
lds
pushf
and
and
(bad)
pop
fst
pop
fs
daa
mov
xor
or
ror
mov
idiv
or
aas
jecxz
xor
jns
inc
jb
mov
sbb
and
rcr
adc
mov
xchg
jg
neg
outs
and
lea
mov
jp
fwait
sub
adc
stos
push
mov
mov
into
or
jnp
adc
icebp
mov
ins
mov
movs
mov
adc
int
inc
xchg
pushf
sbb
cld
inc
ds
mov
out
jmp
add
pop
dec
adc
out
or
popa
dec
test
es
dec
mov
and
jmp
mov
test
out
sbb
cmps
(bad)
movs
jmp
push
pop
cmp
(bad)
rcr
hlt
loope
in
out
cmp
and
mov
xor
mov
outs
dec
pop
sets
mov
mov
sub
and
dec
xor
mov
xchg
jo
mov
xor
jo
aas
dec
mov
sub
sub
add
jb
dec
cmp
in
ja
mov
movs
ds
mov
pop
adc
dec
jmp
out
outs
aas
mov
sbb
je
aam
pop
hlt
mov
popa
in
and
xor
data16
leave
gs
out
xchg
int
lea
adc
push
cmp
jbe
mov
mov
inc
and
xor
popfw
hlt
(bad)
fldenv
push
mov
cmp
sub
jle
(bad)
xor
pop
fnstcw
mov
dec
call
jbe
push
push
into
hlt
mov
jno
gs
push
aad
jge
(bad)
jbe
jge
call
ds
sbb
xchg
push
fimul
ror
stc
inc
lods
sub
add
ss
sbb
push
out
(bad)
fdiv
mov
sbb
mov
sub
xchg
push
daa
out
add
mov
repz
mov
arpl
dec
jmp
in
mov
inc
aad
mov
dec
ja
fstp
push
mov
mov
mov
lods
xor
sub
repnz
call
fmul
xchg
data16
dec
popa
nop
push
std
adc
loopne
mov
stos
pop
test
loopne
fcom
inc
add
mov
bound
inc
fs
and
dec
mov
sar
movsx
repnz
clc
out
mov
sub
jbe
add
leave
pop
outs
pop
push
das
out
ret
mov
mov
out
call
add
pop
cs
inc
loop
add
push
sub
cs
mov
adc
sub
data16
xchg
sbb
dec
mov
call
ds
push
adc
es
add
add
test
or
push
push
jle
cmp
scas
sub
shr
in
jle
dec
outs
das
dec
nop
outs
sbb
jnp
test
xor
cmps
dec
lods
xlat
das
dec
cmc
aaa
push
test
push
into
pop
in
scas
pop
(bad)
jno
cli
cmps
dec
out
mov
mov
ins
pop
fdivp
test
cmc
mov
add
iret
mov
out
lods
out
jl
or
or
gs
mov
and
dec
xchg
in
je
movs
jge
or
loopne
fdiv
clc
int3
mov
sbb
mov
inc
add
push
fld
push
dec
int3
mov
sub
and
jnp
sbb
ds
pop
adc
dec
jae
xchg
inc
jbe
(bad)
cmp
int
outs
mov
scas
rcl
call
sbb
adc
pop
pusha
sbb
pop
jmp
ins
cmp
stos
(bad)
xor
push
sub
jp
and
push
ret
dec
mov
cmps
cmp
(bad)
fldcw
sub
(bad)
mov
jge
call
dec
pop
or
pop
(bad)
adc
out
push
stc
mov
mov
ss
add
aaa
sub
jbe
scas
mov
inc
repz
(bad)
hlt
rol
fldenv
rcr
sar
(bad)
retf
add
repnz
jmp
hlt
retf
(bad)
outs
push
xor
jno
popf
mov
retf
mov
out
retf
nop
or
or
das
push
and
test
fcomip
sub
movs
je
fldcw
fidivr
mov
(bad)
aad
lahf
or
cli
(bad)
mov
lea
jle
out
lods
imul
fdiv
adc
data16
adc
push
cmps
pushf
mov
das
cdq
test
in
mov
sub
pop
jmp
sub
ds
dec
xor
inc
add
push
call
inc
aam
mov
cdq
retf
jp
adc
xor
sbb
bound
neg
(bad)
mov
into
jne
icebp
sbb
mov
xchg
fadd
jg
(bad)
loopne
mov
xlat
mov
mov
mov
gs
out
aad
mov
jne
and
rcl
push
push
jno
out
leave
inc
xchg
stc
or
fisubr
outs
xchg
xchg
jge
pusha
(bad)
shr
mov
aaa
mov
aas
xor
cmps
mov
jmp
xor
aaa
out
inc
test
sti
mov
sahf
mov
outs
test
add
stos
sbb
ret
hlt
adc
pop
into
loope
clc
into
loope
dec
mov
test
and
mov
gs
mov
push
inc
loope
ja
cwde
mov
pop
test
ret
enter
cmps
out
clc
mov
xchg
std
fwait
dec
sbb
sub
mov
mov
pop
aad
fstp
adc
cs
push
dec
jns
mov
fcom
les
add
add
cwde
loope
daa
retf
jl
shl
jns
into
shl
push
add
mov
adc
pop
gs
adc
push
mov
sar
cmp
ror
cmp
popf
in
rcr
jmp
jb
pushf
xchg
fsubp
daa
repnz
mov
call
push
cmp
or
xor
push
mov
mov
adc
and
pushf
xchg
xchg
and
mov
mov
sbb
(bad)
out
rcl
jae
adc
mov
push
in
mov
aam
pop
nop
sub
pop
std
dec
adc
push
enter
or
into
inc
push
add
or
int3
call
jecxz
add
adc
jecxz
cmp
pop
out
aas
mov
jbe
into
clc
push
mov
je
mov
and
js
adc
mov
stos
xlat
cmp
(bad)
hlt
and
icebp
mov
dec
outs
fisttp
outs
fstp
sub
mov
add
cld
sbb
pop
dec
repz
sti
xor
adc
rcl
fs
push
pop
sbb
mov
or
push
in
in
shr
add
mov
cmp
(bad)
outs
mov
scas
fist
xor
loope
pop
mov
jp
pop
pop
hlt
sbb
mov
out
adc
pop
xchg
jbe
leave
xchg
arpl
cmc
push
out
addr16
inc
push
xchg
sub
xor
cmc
cmps
arpl
and
icebp
cmp
cmp
mov
sub
xor
test
cmp
mov
imul
icebp
cld
ins
shl
or
dec
xchg
test
leave
dec
call
or
add
xchg
fild
sbb
inc
fldenv
or
mov
adc
movs
pop
daa
outs
inc
scas
aas
popa
fwait
dec
dec
(bad)
mov
addr16
out
or
xor
mov
pop
dec
dec
bound
xchg
or
mov
cmp
arpl
ja
das
aaa
dec
(bad)
imul
push
jae
popf
outs
pop
hlt
xchg
jmp
xor
sar
cmp
data16
movs
adc
aam
push
push
xchg
add
lods
mov
vmovq
loope
pop
movs
bswap
jp
je
sub
pushf
mov
lahf
int
and
jmp
movs
and
cmp
mov
jae
ins
or
lods
sub
mov
jne
aaa
cmc
bound
sbb
push
dec
movs
rcr
push
arpl
test
pop
mov
stos
leave
stos
pop
sub
mov
fld
push
(bad)
and
push
mov
push
idiv
fbld
fldpi
loop
jns
pop
cmp
xchg
call
sahf
add
dec
mov
inc
fs
inc
out
stos
inc
dec
lea
ins
xchg
popf
mov
cmp
cmp
imul
retf
fistp
add
xor
je
popw
sbb
inc
mov
xchg
dec
cmp
movq
xchg
jle
mov
lods
mov
scas
lds
aam
sbb
xchg
lea
push
add
loope
cmc
or
shr
inc
call
add
xor
pop
enter
push
cmp
mov
pop
dec
std
leave
daa
adc
sub
or
or
inc
pop
scas
sub
jmp
ret
xchg
(bad)
jmp
scas
xor
test
(bad)
jns
inc
out
cwde
mov
mov
inc
or
stos
out
jns
movs
cmc
call
pop
push
sbb
(bad)
retf
retf
xchg
test
into
repz
sbb
out
scas
push
add
push
xor
js
xor
fnsave
xlat
test
and
stc
sbb
pop
add
in
sbb
xor
add
es
inc
gs
push
or
data16
sub
adc
stos
jmp
sbb
xchg
jle
and
cmp
jecxz
and
adc
and
loopne
or
rcl
cmp
sub
mov
mov
jne
lods
shr
inc
sbb
cwde
jmp
scas
mov
add
fwait
adc
shl
xchg
in
lods
add
lods
push
aaa
push
stc
fcomp
cmp
sbb
or
pushf
mov
jb
fwait
mov
sti
or
les
repnz
sbb
mov
xchg
js
aas
mov
out
bound
ds
call
cmp
adc
sbb
mov
sub
icebp
retf
mov
aaa
jp
and
jae
lahf
jmp
adc
pop
xor
(bad)
xor
mov
mov
dec
fwait
push
cmp
add
or
sbb
and
test
mov
clc
outs
xor
loopne
test
add
mov
cmp
loope
dec
cli
pop
shr
fdiv
loop
movs
push
add
pushf
pusha
push
lahf
fs
test
imul
aaa
push
data16
int
arpl
hlt
mov
mov
dec
fsub
bound
pop
jecxz
and
xchg
cmc
dec
sbb
or
in
outs
and
arpl
fsubr
xor
pop
les
mov
or
xchg
call
adc
shl
push
xchg
aas
dec
inc
pop
push
push
pop
enter
push
and
shr
cmps
or
pop
stos
cmp
push
xor
sub
aad
call
pop
int
movs
in
inc
stc
sbb
pop
xor
inc
movs
sbb
adc
cmc
cld
add
je
rcl
push
psrlq
mov
fisttp
push
test
fisttp
mov
jns
int
mov
enter
push
cmp
push
cld
jmp
xor
push
lods
pop
daa
jle
inc
push
ror
jle
not
jno
int
xor
shl
hlt
mov
pop
cmps
jns
pandn
movs
inc
add
inc
pop
mov
adc
sbb
dec
jnp
cld
(bad)
lds
adc
outs
push
fcom
pop
mov
in
mov
lock
mov
sbb
stos
mov
sahf
stos
nop
test
dec
std
aam
and
hlt
in
pop
pop
repnz
sub
retf
popa
push
fld
cmp
push
mov
push
ss
xchg
inc
into
or
mov
xlat
sbb
cmps
mov
sbb
ds
adc
sar
test
dec
xlat
fdivr
pop
fld
fisub
or
(bad)
adc
mov
or
jns
out
lods
ud0
fcom
ja
mov
scas
out
add
in
cmp
clc
xor
adc
push
cmp
leave
sbb
das
popf
push
sbb
push
nop
test
xor
cmps
iret
mov
push
push
out
outs
std
out
adc
shl
mov
not
adc
dec
xor
dec
enter
and
add
jle
cmp
adc
enter
hlt
or
fstp
adc
push
ds
in
xchg
mov
jnp
test
adc
fisubr
pop
in
mov
mov
inc
mov
sbb
xchg
popf
sbb
call
aas
pop
retf
popa
scas
pop
push
mov
mov
(bad)
js
jbe
shr
out
jecxz
mov
jno
aad
mov
mov
and
mov
adc
fs
ss
xor
push
sti
test
mov
ja
pop
dec
rcr
and
fs
into
push
mov
js
mov
add
popa
stc
adc
xor
sti
daa
outs
pop
cmc
fistp
ficomp
sbb
mov
int
in
dec
inc
jle
xchg
addr16
jbe
adc
jae
cmp
(bad)
in
(bad)
sbb
mov
mov
ror
xchg
test
fucomp
push
sahf
mov
call
cmc
or
je
cpuid
jecxz
xchg
fdivr
mov
inc
xchg
jg
inc
inc
mov
ds
or
out
call
inc
fidiv
aad
pop
jno
jne
dec
ins
pusha
pop
sbb
nop
pop
popa
push
mov
loop
or
jmp
xchg
cmp
pop
movs
inc
adc
pop
dec
aas
arpl
fimul
xor
into
sbb
ss
cmps
jb
mov
push
mov
xchg
cmp
push
in
adc
ds
mov
iret
dec
stc
es
hlt
lahf
pop
ja
sub
sbb
rol
sub
push
shl
ds
call
cli
inc
aad
icebp
cld
mov
dec
adc
out
xor
mov
jmp
cmp
adc
mov
pop
sar
push
hlt
shr
call
adc
shl
pop
and
adc
xchg
cld
or
mov
lds
mov
(bad)
and
xor
push
enter
movs
movs
out
cdq
aas
into
mov
push
popf
mov
and
std
pop
imul
sahf
fadd
xchg
fsubr
(bad)
mov
dec
or
nop
addr16
mov
mov
xchg
mov
icebp
push
ds
and
in
pop
lahf
(bad)
jl
cmc
and
sbb
pop
jo
ret
cmps
popa
enter
es
xchg
mul
sar
rcl
mov
repz
push
jne
test
jo
and
xchg
shl
imul
(bad)
jo
into
pushf
mov
mov
add
xchg
shl
rol
mov
xlat
push
mov
clc
lods
jns
or
xor
es
add
inc
pop
push
and
nop
jo
xor
aas
(bad)
sub
cld
rol
fild
mov
xor
or
mov
adc
or
sti
and
jo
and
in
inc
adc
cli
jp
sbb
sbb
adc
in
cmovo
push
outs
shl
fld
push
cwde
mov
dec
pop
mov
rol
enter
sub
push
adc
mov
sub
sbb
push
mov
retf
fdiv
cmp
test
mov
push
fmul
mov
stos
shl
aad
std
xchg
push
ret
enter
push
aad
es
mov
fstp
mov
int
adc
mov
push
and
aam
pop
mov
and
cmp
inc
mov
xchg
icebp
stc
mov
xor
adc
cli
xor
push
and
stos
in
ror
dec
out
mov
retf
sti
jo
inc
in
xor
and
adc
and
sub
or
das
cmp
inc
sbb
mov
push
mov
and
pop
or
outs
gs
mov
adc
hlt
sti
sbb
movs
ja
dec
mov
lods
aam
add
jge
add
mov
mov
xor
cmp
dec
shl
jg
add
inc
mov
addr16
dec
and
outs
mov
mov
dec
(bad)
xchg
out
dec
jmp
xchg
inc
sub
stos
cmp
dec
outs
jmp
mov
aaa
aad
sub
sbb
es
sub
xchg
cmc
dec
test
cwde
hlt
pop
and
xor
jl
mov
jb
mov
sub
or
push
push
nop
stos
in
(bad)
(bad)
out
xor
xchg
pop
shl
ins
cmp
scas
cmovle
dec
sub
cmp
adc
gs
cmc
xlat
ja
push
out
mov
clc
shl
int3
loop
sidtd
inc
sbb
jbe
mov
out
pop
pop
xchg
xlat
mov
adc
out
fimul
fidivr
cmc
push
in
xlat
add
add
add
mov
in
outs
sbb
repz
sub
rol
cdq
pop
popa
and
jmp
cmc
pop
(bad)
in
je
jecxz
lahf
sbb
enter
js
push
fidiv
sbb
pop
pusha
imul
mov
movs
test
sub
cmps
popa
cmp
enter
ret
mov
and
pusha
movs
dec
jno
xor
or
iret
retf
inc
je
imul
sbb
xchg
in
loope
adc
lock
xor
stc
(bad)
cmp
popa
sbb
lods
add
nop
mov
fs
or
fisubr
shl
and
jecxz
adc
pop
rcr
mov
jmp
inc
add
mov
repz
mov
(bad)
rcl
lods
movs
inc
cmps
adc
inc
(bad)
jl
fst
daa
and
rol
or
and
add
das
jl
pop
movs
outs
rcl
sti
xchg
sahf
fcmovne
ins
sub
das
retf
shl
xchg
(bad)
neg
dec
adc
clc
jb
push
daa
pop
add
sub
xchg
test
aas
add
movs
xchg
push
dec
xor
les
dec
mov
jl
imul
aaa
sti
xchg
inc
retf
(bad)
xor
inc
mul
and
sti
and
mov
jle
adc
ins
jmp
pop
inc
ins
and
fld
mov
addr16
inc
aad
inc
ins
push
dec
ja
pop
pop
adc
jno
loope
ins
mov
cmp
mov
retf
sbb
leave
and
(bad)
and
pop
push
movs
add
push
daa
mov
jl
pop
xor
sub
in
cmc
sbb
push
mov
xchg
cmp
loopne
add
sub
xchg
out
pop
shr
scas
mov
push
int
sbb
ins
and
add
and
dec
inc
add
ret
aaa
mov
jmp
in
xor
xlat
and
fmul
or
jae
dec
mov
lahf
xchg
xor
and
pop
cmc
fidiv
fcomp
test
fnsave
sub
retf
sub
xchg
pop
xchg
xchg
mov
repnz
sub
dec
dec
div
push
or
gs
mov
or
mov
fwait
inc
in
jg
mov
enter
lds
and
and
sbb
jecxz
push
fcmovnu
jae
dec
pop
dec
add
adc
iret
push
xor
cwde
test
mov
push
int3
push
mov
jl
imul
mov
(bad)
call
mov
fisub
mov
sub
ret
fadd
mov
shr
push
adc
mov
sub
mov
ror
loope
stc
push
xor
sti
int
sub
cld
inc
and
push
test
mov
dec
add
mov
cdq
call
stc
call
aaa
push
test
cld
je
(bad)
in
dec
cdq
jge
push
fistp
sbb
or
outs
cwde
jno
xchg
sub
push
pop
jecxz
push
out
xchg
stos
xor
jge
(bad)
jl
sbb
mov
jmp
push
in
jbe
(bad)
adc
xlat
adc
push
dec
rol
mov
xor
neg
and
arpl
jbe
mov
jg
ins
push
inc
fcom
fadd
data16
dec
adc
inc
bnd
rol
retf
mov
cmp
cwde
aad
mov
xchg
clc
bound
dec
mov
rcl
retf
push
mov
sbb
push
adc
and
push
js
sbb
cmp
leave
in
sbb
mov
mov
ins
or
xlat
and
scas
push
add
pop
pop
jb
jnp
sar
fs
enter
add
(bad)
enter
ja
movs
imul
mov
and
add
mov
xchg
mov
fiadd
pop
arpl
push
rcl
inc
das
cwde
ss
ja
fsubr
xor
fld
sub
shl
loope
cli
out
les
mov
out
pop
iret
xor
jg
stos
loop
xchg
pop
outs
stc
push
sar
ret
jmp
jae
sbb
xor
dec
icebp
loope
inc
mov
pop
jns
scas
test
add
ins
mov
jg
mov
mov
stc
push
sahf
push
sub
jecxz
(bad)
jne
jo
sbb
gs
push
mov
ret
or
les
mov
ret
frstor
push
data16
or
sbb
adc
sti
sar
sub
mov
retf
scas
mov
xchg
add
mov
pop
addr16
ins
pop
call
je
jno
jno
int3
in
xchg
xchg
push
xchg
ins
jge
aas
push
or
or
aad
xchg
adc
pop
in
dec
adc
add
sbb
das
mov
jne
jae
int
fisub
neg
movs
mov
sti
clc
cmp
pop
pop
adc
in
stos
test
mov
mov
sub
shl
sar
retf
sub
jge
es
adc
inc
push
in
xor
lods
mov
std
pop
(bad)
push
pushf
movs
gs
(bad)
fnsetpm(287
mov
and
sbb
sub
or
ret
or
xchg
lods
jae
xchg
je
in
jmp
arpl
jg
es
aas
inc
pop
dec
shl
dec
adc
pop
and
repz
push
mov
push
out
add
lock
icebp
lods
gs
cmp
mov
mov
daa
push
push
dec
shr
sub
xchg
cmp
sbb
shl
xchg
xchg
fsubr
or
pop
out
ins
stos
dec
ja
repnz
push
in
arpl
les
bound
std
scas
shr
cmp
aad
rcl
cmp
or
xor
ds
aaa
push
stc
jge
leave
ja
test
test
cmp
adc
adc
addr16
mov
fldcw
mov
push
mul
das
push
jbe
inc
mov
xchg
mov
nop
and
mov
push
mov
mov
(bad)
lahf
fdivr
cmp
sub
fcmovnu
sub
sar
and
cmps
scas
ins
or
pop
fcom
add
fimul
pop
pop
jmp
dec
std
sub
fist
xor
mov
sbb
stc
cmp
into
fistp
cmp
int
jbe
test
repz
mov
adc
in
adc
mov
ror
push
add
cmc
mov
jns
cmp
pop
ret
xchg
xor
ret
out
jmp
add
push
pop
out
dec
adc
sub
xchg
xor
xchg
dec
cmps
ret
je
dec
out
movs
test
loopne
out
cld
jmp
movs
repnz
fiadd
out
sbb
sub
sub
add
xchg
sbb
cmc
mov
mov
inc
aam
cmp
ret
in
setle
cwde
pop
mov
sub
mov
je
stc
cmp
(bad)
mov
lods
fild
rcl
mov
pop
mov
mov
jmp
mov
in
mov
adc
mov
mov
or
test
ins
or
xor
scas
push
leave
mov
(bad)
aad
ret
mov
scas
push
mov
jbe
cmp
jb
jnp
and
add
lods
out
outs
fwait
das
aam
push
cmp
pop
sbb
adc
push
cli
xor
mov
cmp
jmp
sub
dec
mov
fistp
scas
push
test
jmp
xchg
cmp
int3
lock
or
sub
or
and
imul
mov
ja
mov
cmp
xor
cli
cmp
mov
fadd
in
mov
inc
dec
in
cmps
fadd
loope
add
sub
adc
cmps
adc
inc
test
push
icebp
push
loope
sub
mov
pop
lods
(bad)
out
pop
cmp
imul
sub
push
sar
cdq
push
fs
scas
push
cmp
mov
neg
inc
adc
mov
cmps
fwait
push
fwait
cmp
test
add
ror
popf
mov
mov
sub
sahf
push
and
das
pop
jb
out
dec
js
fnsave
dec
pop
stc
out
movs
xlat
adc
inc
fstp
xor
out
jmp
pop
push
inc
mov
mov
jo
(bad)
sbb
jl
ins
jp
stc
or
adc
leave
pop
xchg
js
imul
idiv
out
cmp
mov
add
and
jae
loop
jl
outs
repnz
xor
cmps
lods
mov
jmp
je
nop
mov
cmp
das
dec
or
movs
nop
lea
lods
(bad)
xchg
jbe
push
xchg
(bad)
out
adc
xor
rol
pop
call
cmp
aad
lea
adc
shr
(bad)
jl
call
int
pop
sti
jne
cwde
push
adc
xchg
dec
jae
das
das
jae
stc
push
retf
mov
(bad)
fs
(bad)
mov
idiv
add
rol
popf
and
xchg
out
inc
ds
xchg
aad
stos
jge
out
push
addr16
sub
mov
popf
mov
ficomp
sub
fisttp
(bad)
pop
das
add
jmp
dec
mov
pop
daa
es
fidiv
inc
fcom
les
adc
in
pop
(bad)
xor
cmps
loope
pop
push
je
fadd
xor
or
mov
and
aaa
fstp
cs
xor
and
sub
cmc
pop
les
rcl
dec
push
pusha
pop
xor
stos
movs
jl
pop
mov
jbe
mov
pop
dec
push
add
adc
mov
ror
mov
pop
icebp
hlt
push
or
outs
fsub
sar
sbb
dec
outs
jmp
push
imul
add
loop
jb
rcr
push
or
in
in
dec
hlt
and
fs
xchg
add
sub
sub
hlt
xchg
xor
xor
fidivr
cmps
cmc
ins
push
cwde
xchg
ins
jns
push
cmp
jbe
out
jbe
inc
(bad)
imul
xchg
mov
or
pop
popa
loop
push
mov
pop
lods
das
jge
daa
adc
ret
push
jnp
jg
mov
jle
std
sbb
mov
cld
je
sti
sti
sbb
sub
sub
adc
ja
jnp
aas
jecxz
pop
inc
mov
sub
loopne
xor
ss
add
clc
das
push
pop
push
jecxz
leave
mov
adc
fadd
and
shl
popf
add
fmul
fwait
and
sbb
push
(bad)
adc
inc
ja
sti
sti
outs
cmp
push
or
and
add
adc
adc
in
sub
inc
adc
bound
xlat
mov
call
sbb
in
jne
mov
pop
fiadd
inc
bound
adc
mov
stos
js
sbb
inc
cmp
add
ins
or
leave
sub
js
xchg
addr16
jmp
addr16
push
sbb
sub
xor
pop
pop
arpl
sub
mov
xor
dec
mov
xchg
sti
inc
bound
jns
and
xchg
scas
xchg
cmps
xchg
cmp
test
outs
gs
popf
jno
lds
lods
mov
aad
ds
cmp
(bad)
in
and
clc
jl
jmp
inc
adc
das
jns
dec
mov
mov
test
not
iret
gs
sbb
mov
sbb
add
pop
rcl
jb
test
bound
pop
mov
dec
jecxz
fild
or
in
rcl
xchg
out
fsubr
cmp
inc
push
cmp
push
pop
inc
mov
sub
jo
ins
adc
repz
adc
pop
inc
adc
cmp
and
sbb
shl
pop
jl
mov
sbb
js
sub
mov
mov
cmp
mov
jl
jp
or
loop
ins
dec
out
mov
mov
add
rol
jo
stos
or
loopne
sbb
cmp
cwde
addr16
pop
(bad)
jl
add
call
test
sbb
mov
and
test
xlat
loopne
xor
inc
mov
xchg
and
ss
inc
jno
out
scas
mov
cmp
call
ins
ja
lods
ret
inc
push
call
pop
ret
aad
pop
add
(bad)
hlt
sbb
adc
pusha
ins
fnstenv
in
add
fwait
scas
(bad)
or
cmps
popf
and
inc
es
push
mov
(bad)
cmp
ins
out
adc
cmp
mov
inc
aad
lods
sbb
xchg
dec
pop
in
test
test
push
mov
mov
out
dec
pop
(bad)
sbb
mov
mov
dec
sub
dec
outs
push
arpl
sub
and
push
ret
movs
dec
push
stos
(bad)
jmp
leave
retf
xchg
sbb
mov
sbb
mov
stc
ins
push
mov
mov
xor
ficomp
and
dec
xor
pop
dec
mov
sbb
sub
mov
repnz
aas
mov
loopne
xchg
cmp
sbb
cwde
movs
add
out
ins
(bad)
jmp
add
movs
add
call
aad
fstp
int3
add
dec
adc
(bad)
pop
push
jmp
inc
repnz
or
dec
push
xor
sub
mov
dec
sbb
imul
and
rcl
call
inc
push
mov
pop
pop
jecxz
lea
div
outs
aas
push
lea
mov
push
or
mov
cmp
xchg
out
push
jle
push
popf
xor
rcr
add
pop
jbe
test
mov
mov
out
xchg
dec
fstp
mov
(bad)
pop
gs
ins
int3
lock
or
out
loope
sub
xchg
add
sub
rcr
aad
push
fstp
outs
call
cmp
imul
mov
pop
or
inc
ss
mov
(bad)
call
pop
dec
push
mov
stos
cs
jle
mov
sbb
or
jo
and
xor
into
addr16
dec
arpl
push
adc
jo
stc
xchg
push
xchg
sub
aas
and
cmc
cli
sbb
nop
jge
(bad)
adc
pop
fcom
push
push
ds
xor
or
xchg
loopne
clc
sub
ret
fstp
adc
mov
add
sahf
outs
cmp
mov
ror
test
ss
jecxz
test
mov
ins
push
dec
pop
pop
cmp
mul
idiv
fcmovbe
pop
adc
adc
adc
in
daa
aam
aam
or
inc
jmp
fstp
ins
iret
repz
lds
xor
mov
fild
xchg
icebp
add
jmp
adc
mov
xor
xchg
mov
dec
add
pusha
aas
sub
push
sub
pop
(bad)
je
not
adc
inc
jo
mov
(bad)
sti
fs
lods
cmp
ror
das
dec
inc
lods
hlt
outs
jb
add
test
mov
xchg
jmp
fnstcw
cmp
hlt
cmp
sub
scas
jmp
or
fist
dec
sbb
jmp
mov
outs
int3
cmps
stc
mov
imul
retf
stos
lods
sbb
retf
lds
dec
dec
out
jle
es
inc
popf
in
mov
mov
out
mov
(bad)
xor
(bad)
push
imul
pushf
inc
int
stos
add
dec
cli
(bad)
and
xchg
shl
das
sub
add
mov
add
imul
push
adc
mov
icebp
pop
jne
dec
aas
xchg
or
aaa
dec
test
xchg
pop
setbe
or
out
mov
adc
add
mov
xor
cmps
adc
cmp
adc
shl
cmps
loope
xchg
xor
sar
nop
push
sbb
ret
push
into
cmp
push
ds
lahf
pop
ret
xor
ins
jl
lea
cs
mov
mov
add
mov
pop
or
sub
ror
call
add
and
int3
mov
js
sbb
jl
iret
or
jp
lods
and
adc
loopne
sbb
jne
sub
cmp
sub
dec
push
popf
(bad)
test
pop
data16
mov
add
out
add
add
push
jnp
xor
test
lds
fsub
sub
scas
ins
arpl
movs
cmp
and
scas
lds
mov
bts
and
inc
xchg
enter
fwait
add
jns
lds
add
xchg
(bad)
shl
popa
adc
dec
enter
add
(bad)
pop
jle
and
cli
and
iret
les
retf
fistp
inc
out
or
add
stc
xchg
pusha
mov
(bad)
sub
rol
nop
cwde
or
cmc
mov
and
cmc
mov
sub
xchg
dec
jo
jb
ret
(bad)
add
jecxz
jae
mov
push
pop
dec
stos
sahf
popf
mov
jnp
mov
addr16
retf
pusha
push
(bad)
mov
mov
jge
adc
mov
cwde
fwait
push
arpl
mov
jno
jnp
add
pop
mov
ficom
xor
pushf
mov
into
pop
daa
add
sub
test
test
(bad)
mov
(bad)
cmp
push
cmp
mov
out
bnd
ins
jnp
and
in
dec
(bad)
fisttp
dec
pop
dec
sahf
pop
arpl
outs
out
idiv
test
stos
sbb
xchg
xchg
mov
adc
dec
jbe
or
retf
ret
outs
cmp
out
xor
xor
movs
inc
jecxz
and
icebp
out
sub
ret
mov
mov
into
mov
cmps
pop
in
movs
pushf
neg
sub
fidiv
mov
popa
sahf
dec
nop
rcl
dec
mov
adc
mov
cmp
cwd
into
adc
std
fs
sbb
cmps
cld
and
sbb
sahf
pusha
aaa
mov
adc
push
xor
(bad)
cld
xchg
mov
xchg
imul
cmp
adc
pop
fs
enter
(bad)
icebp
jns
(bad)
cs
popf
out
push
mov
icebp
fldenv
pop
es
cs
cmc
push
sbb
cmp
xchg
add
dec
mov
dec
dec
daa
ret
call
sub
mov
dec
loope
xchg
mov
mov
jne
adc
inc
outs
call
cs
push
aaa
jnp
pop
pop
fcmovu
and
loope
mov
xchg
movs
fadd
cdq
jo
cdq
test
ret
test
mov
cmp
sbb
xchg
repnz
pop
mov
cmp
mov
stc
mov
mov
sub
mov
fidivr
xchg
(bad)
lods
cs
and
mov
add
jo
(bad)
inc
xor
lods
fld
imul
push
and
sti
mov
dec
lods
cmp
mov
xchg
xchg
xchg
jne
scas
jns
aad
dec
xchg
ja
xchg
mov
test
cmp
cmp
and
push
cmp
dec
test
leave
lods
in
sbb
loope
sbb
xchg
cdq
mov
pop
pop
or
mov
sbb
sbb
ror
jb
jle
add
dec
xchg
xchg
add
call
adc
push
hlt
or
nop
adc
call
das
inc
rcl
jg
cmp
repnz
js
lods
int
dec
cmps
icebp
sbb
xor
xchg
cld
outs
and
push
fwait
push
mov
xlat
sbb
push
and
pop
retf
mov
inc
inc
xchg
mov
xor
shl
and
call
mov
push
mov
icebp
jmp
or
add
inc
inc
repz
jns
mov
mov
jno
fidivr
inc
push
js
stc
popa
cmc
in
pusha
dec
inc
or
cmp
mov
or
inc
adc
out
mov
or
repz
dec
sub
and
or
adc
or
je
cmps
retf
jge
xchg
(bad)
(bad)
sbb
xchg
push
sub
out
mov
cmp
ja
ss
inc
pop
add
retf
sub
mov
popf
mov
cmc
aam
add
es
pop
jne
xchg
out
mov
shr
adc
shl
fbstp
lea
or
mov
(bad)
cdq
push
test
add
lock
idiv
and
sbb
mov
mov
or
mov
cmps
jge
fsubr
cmp
cmps
imul
mov
sbb
stc
int3
jno
jnp
and
ins
xchg
jecxz
jmp
out
inc
jle
sub
adc
dec
mov
jle
pop
add
xchg
xchg
call
outs
add
xchg
loope
and
les
sub
mov
mov
or
fs
xchg
or
addr16
inc
sub
mov
mov
in
push
and
and
jmp
mov
xchg
mov
int3
loop
mov
stc
mov
nop
jns
add
xchg
mov
mov
(bad)
scas
dec
call
jmp
mov
adc
pop
or
sub
nop
stos
add
rol
call
rcl
int3
mov
inc
aad
push
les
mov
aas
in
sti
push
lods
push
dec
xchg
push
jl
ret
fistp
in
imul
sub
scas
ret
gs
add
nop
cmc
outs
pop
inc
xchg
out
adc
sti
mul
jle
in
mov
xor
(bad)
pop
ds
add
mov
test
and
cmp
jb
cmp
in
pop
sbb
xor
outs
movs
jmp
push
daa
shl
repz
scas
add
daa
mov
das
mov
cs
(bad)
inc
fsub
mov
and
cmp
xor
and
(bad)
pop
cld
adc
dec
sahf
cmps
pop
xor
lods
jge
sub
sbb
mov
das
push
dec
jg
shr
into
int
fist
sub
or
pop
push
push
jns
jle
fist
nop
xchg
in
add
mov
add
nop
lea
inc
sti
popf
icebp
jbe
ficomp
pop
adc
jl
(bad)
jb
scas
int3
dec
mov
jp
pop
or
in
or
in
hlt
sub
xor
adc
and
and
sub
jg
jl
dec
push
out
ins
jg
in
adc
out
mov
add
mov
xchg
mov
popf
ret
pop
shl
add
push
movs
or
ins
(bad)
outs
cmp
inc
adc
or
jl
xchg
ds
jmp
push
add
mov
jo
mov
(bad)
lahf
ret
lods
mov
in
(bad)
in
int
out
inc
inc
pusha
inc
mov
add
sub
into
add
mov
cs
push
push
out
sub
add
xchg
mov
lahf
neg
push
repz
mov
xchg
out
push
or
inc
pop
pushf
mov
std
lods
jb
test
jmp
test
xor
cmp
add
mov
jno
mov
pop
mov
jle
pop
repnz
pop
inc
pop
rcr
jg
out
fwait
xchg
test
inc
adc
mov
test
loopne
ins
test
scas
and
push
or
jbe
adc
push
sbb
sub
adc
mov
into
mov
mov
daa
xlat
push
addr16
ficom
out
cmp
jb
icebp
push
pop
sbb
fwait
sub
(bad)
je
adc
stc
loopne
xchg
dec
pop
adc
mov
shl
mul
push
cmps
inc
dec
cli
sahf
sahf
test
dec
cld
pop
push
enter
pop
les
pop
enter
in
add
pop
ja
fsubrp
into
gs
out
mov
xor
mov
mov
aam
add
das
mov
inc
adc
dec
cmps
stc
push
mov
scas
rol
imul
repnz
repz
aaa
test
jae
xlat
fxch
cmp
push
push
and
cmp
mov
aaa
aaa
jmp
sti
mov
ins
into
xchg
jp
pop
rcr
inc
rcr
inc
inc
fsub
adc
(bad)
aas
dec
dec
test
scas
xchg
dec
jecxz
outs
sub
mov
jno
mov
pop
mov
movs
sbb
xchg
inc
xor
out
jg
push
sbb
mov
adc
adc
mov
in
push
pop
inc
xor
repz
jge
fisubr
add
xchg
cmp
push
sbb
call
inc
xor
add
push
sbb
xor
push
pop
imul
cmps
stc
sub
push
outs
sahf
mov
mov
pop
sub
cs
push
scas
(bad)
jmp
or
jmp
ds
push
xor
leave
ret
fcom
sbb
je
pop
test
fmulp
stos
iret
mov
push
rol
test
mov
sub
or
jnp
into
adc
mov
cwde
inc
(bad)
mov
mov
or
jo
sub
sbb
jno
cmp
jbe
ss
cmc
pop
rcr
xchg
imul
bound
add
dec
repz
mov
ffreep
div
jb
mov
inc
enter
mov
lock
rcl
cli
aam
push
mov
test
cmps
mov
push
sti
ins
icebp
inc
dec
iret
mov
mov
push
outs
or
push
and
xlat
in
or
(bad)
shl
mov
push
popf
jb
(bad)
popf
xchg
retf
mov
pop
mov
mov
add
pop
retf
inc
add
cld
jo
mov
and
out
and
sbb
pusha
adc
cli
pop
stc
sahf
mov
sub
jmp
je
lahf
fcom
push
fdivr
mov
mov
push
fimul
icebp
shl
mov
push
push
mov
dec
cmp
mov
dec
jmp
inc
or
mov
in
sahf
shl
sbb
xor
inc
sbb
into
outs
(bad)
lea
xor
push
popa
int3
jmp
push
lds
lods
and
and
shl
inc
lods
loop
std
push
out
pop
addr16
gs
mov
push
retf
call
pop
fbstp
les
jo
add
in
mov
mov
mov
jmp
in
neg
test
sub
imul
call
mov
(bad)
fadd
mov
into
retf
stos
(bad)
iret
fisubr
test
aaa
cmps
xchg
pop
jmp
jl
pop
xchg
popf
sbb
and
adc
mov
js
xlat
or
jb
test
cmp
jo
jbe
or
push
dec
aas
pop
call
jg
push
retf
xor
mov
cs
xor
out
and
rcl
jmp
inc
(bad)
and
pop
fisttp
adc
cli
inc
xchg
ret
scas
xlat
(bad)
mov
imul
mov
daa
cmp
test
cmp
cdq
in
sub
pushf
iret
sti
sbb
daa
repnz
cmp
fst
and
jb
ja
cli
pop
push
cwde
xchg
xchg
fisubr
push
cli
shl
lods
xchg
addr16
out
fisttp
xor
movs
push
sbb
mov
sub
xchg
mov
push
in
xor
add
xor
pop
cs
js
les
pop
cdq
movs
lods
(bad)
shl
pop
sub
cmp
cli
jle
sub
icebp
(bad)
mov
adc
xchg
leave
sub
fbld
adc
add
mov
aad
(bad)
dec
jmp
out
mov
inc
fldln2
fisub
mov
popf
mov
fwait
nop
and
dec
and
xor
mov
(bad)
enter
adc
mov
xchg
cmp
jp
test
mov
bound
lea
fstp
xlat
mov
repnz
cmp
addr16
cmp
xchg
ins
inc
cmps
xchg
sub
cdq
cdq
sub
xchg
rcr
add
mov
cmp
pop
sbb
xchg
cmp
imul
push
(bad)
jne
out
mov
movs
mov
add
mov
(bad)
xor
lods
(bad)
jno
jne
icebp
or
loopne
add
add
jle
repnz
dec
mov
or
inc
lea
test
(bad)
jecxz
or
arpl
leave
(bad)
nop
add
push
cmp
jmp
sub
ins
inc
paddusb
mov
and
ins
out
xor
and
cmp
jmp
mov
and
sar
test
xor
push
pop
inc
mov
cmp
add
inc
dec
mov
std
daa
sbb
(bad)
adc
test
lds
jno
jb
cmp
jg
pushf
push
pushf
pop
(bad)
loopne
adc
adc
fstp
jecxz
ret
push
arpl
mov
sbb
adc
push
dec
es
sub
add
add
ret
adc
fwait
pop
add
xor
or
pop
mov
mov
jo
in
sbb
and
std
(bad)
push
aad
sub
push
adc
cmp
movs
inc
mov
in
mov
jne
pop
test
ret
nop
addr16
jb
enter
sub
xchg
imul
cdq
(bad)
and
scas
push
call
rcr
mov
lods
xchg
adc
mov
and
mov
fxch
in
(bad)
int3
add
mov
adc
sti
push
pusha
inc
daa
out
test
mov
(bad)
cwde
ror
out
pop
inc
xchg
adc
xchg
push
cwde
or
mov
(bad)
pop
aam
inc
out
jmp
stos
or
sub
xchg
loopne
xchg
cmp
scas
mov
dec
clc
mov
cmps
push
mov
mov
adc
jge
adc
dec
leave
rcr
jmp
fdivr
mov
xor
cmc
mov
jo
cmc
daa
std
pop
mov
mov
ds
cmp
sahf
ds
fcmovnb
adc
call
dec
loop
inc
xor
add
xchg
iret
fstp
mov
cmc
inc
mov
ss
shl
jmp
mov
cmc
ret
xor
sar
int
xchg
stos
arpl
push
push
lock
pop
push
sbb
cmp
call
sbb
sti
xor
cwde
retf
mov
adc
push
mov
xor
adc
scas
or
shl
add
imul
mov
add
imul
rol
popf
pop
jo
adc
loope
mov
push
inc
pushf
test
(bad)
(bad)
mov
mov
(bad)
xchg
inc
pop
inc
jns
leave
jmp
add
mov
jmp
ret
lahf
popa
lahf
retf
in
sub
dec
or
jg
jnp
xor
push
mov
loop
jno
aaa
push
sahf
test
jno
js
inc
adc
iret
mov
mov
cld
gs
pop
push
je
push
cdq
xchg
xlat
std
ret
pushf
rol
(bad)
into
(bad)
out
ror
shr
cmp
jne
inc
out
xchg
mov
into
pop
out
pop
cmp
inc
mov
(bad)
sbb
test
or
mov
mov
dec
(bad)
dec
test
rol
retf
adc
pushf
cdq
and
repnz
jb
xchg
push
pop
stc
loop
cmp
sbb
outs
jg
mov
push
or
mov
mov
inc
call
fwait
sbb
jp
cmp
imul
cmps
mov
cli
outs
cwde
cmp
add
call
inc
and
pop
call
in
mov
adc
es
sti
mov
push
jmp
mov
jmp
js
mov
ret
lea
(bad)
xlat
out
cmp
mov
dec
test
jmp
(bad)
clc
mov
pop
loop
cmp
repnz
sar
(bad)
xor
push
add
int3
xor
mov
gs
dec
imul
push
sbb
cmp
mov
into
mov
jp
sub
out
jnp
xchg
and
inc
push
(bad)
pop
sbb
cmp
retf
jge
repnz
in
iret
retf
xor
imul
xor
mov
pop
mov
fdiv
pop
aas
retf
and
in
push
sbb
or
int3
sub
test
ret
imul
or
cs
icebp
xor
hlt
dec
mov
xor
jge
adc
mov
cs
(bad)
mov
xor
movs
pop
(bad)
xchg
stos
loopne
out
pop
sbb
mov
mov
cdq
jnp
fnsave
jno
pusha
dec
pop
jns
xor
ds
push
popf
scas
mov
loop
dec
ins
xchg
mov
cmp
mov
movs
mov
adc
xchg
cld
movntps
fs
es
aaa
push
and
aad
xor
mov
clc
enterw
out
ror
pop
dec
push
inc
ss
aaa
repnz
push
cmp
mov
adc
xchg
and
and
scas
loop
sbb
xor
shl
inc
cmp
adc
test
xchg
outs
xchg
xor
mov
cmc
and
(bad)
in
stos
and
(bad)
addr16
xor
push
mov
pop
std
sti
push
loopne
inc
dec
mov
sub
out
and
test
jg
loope
les
repz
imul
adc
lea
push
in
cwde
mov
xchg
cdq
aad
ins
xchg
jecxz
call
in
mov
mov
xchg
(bad)
cmp
lahf
mov
cmp
sub
dec
sub
xor
ins
inc
cmp
outs
cwde
(bad)
jge
or
aas
mov
or
mov
cmc
cs
lea
cs
sub
mov
mov
push
adc
jnp
jno
mov
xchg
sbb
or
mov
sar
hlt
push
fwait
cmp
cwde
mul
sbb
fiadd
push
sar
cmp
xchg
idiv
mov
push
cmps
cwde
stc
add
std
ja
gs
je
out
jmp
retf
inc
mov
mov
mov
ja
cs
sbb
mov
nop
adc
jmp
iret
loop
jns
mov
jb
aad
call
lods
xor
sar
sub
mov
cli
and
jge
push
jmp
mov
les
retf
aad
ja
pop
daa
mov
mov
fisub
dec
daa
mov
sbb
imul
sub
mov
push
mov
mov
rcl
repz
sub
mov
cmp
jno
lahf
call
dec
mov
push
(bad)
xchg
pop
aas
jmp
xchg
pop
xor
and
retf
call
push
outs
xchg
stos
pop
je
loop
sbb
ret
jmp
push
call
int3
jns
cs
xor
sbb
push
leave
xchg
adc
dec
mov
daa
xchg
iret
loope
icebp
leave
(bad)
cwde
xor
dec
cmp
pop
arpl
into
scas
mov
(bad)
movs
mov
dec
(bad)
cmovae
cld
(bad)
in
pop
fldenv
or
leave
mov
dec
adc
sti
pop
dec
out
xchg
mov
mov
int
mov
test
cmp
test
mov
inc
or
mov
pop
push
(bad)
nop
ss
imul
mov
cs
mov
(bad)
mov
lahf
or
cmc
xchg
add
xchg
popf
das
imul
push
in
sbb
xchg
pop
jge
push
add
popa
pop
ins
(bad)
shr
cmc
push
jge
inc
daa
or
and
cmps
and
js
push
stos
jle
pop
sbb
ja
pop
fnstcw
lea
mov
adc
cmp
js
sub
cmp
sbb
xchg
mov
aam
out
(bad)
sti
mov
jp
mov
sti
cmps
pmuludq
cmp
dec
sbb
push
cld
int3
(bad)
jl
inc
ret
lock
test
add
nop
adc
aam
aas
jnp
into
sar
pop
cmp
push
mov
cld
cmc
mov
push
inc
lea
xor
lahf
inc
push
jnp
sub
loope
mov
sbb
sbb
mov
mov
fnstcw
cmc
int3
cs
popa
inc
push
cmp
sbb
loop
xor
(bad)
jmp
push
mov
in
add
shl
sbb
push
mov
cmp
mov
xchg
add
aaa
ins
int3
or
pop
ret
or
cwde
xchg
sbb
imul
fs
cmc
test
jge
fistp
hlt
scas
pop
repz
inc
ss
movs
add
add
test
push
rol
add
sub
push
in
mov
push
jne
cmps
mov
push
loopne
pop
lods
pop
lds
adc
xchg
pop
jmp
js
std
ss
addr16
cmps
in
aad
or
fiadd
and
push
or
push
inc
(bad)
mov
out
jo
loop
test
add
adc
rol
movs
xchg
test
adc
rol
stc
test
repz
or
mov
cmc
sbb
lds
mov
pop
ret
jno
and
or
into
xchg
lea
leave
daa
add
sub
mov
add
pop
mov
add
pop
xor
sub
pop
and
(bad)
jmp
out
mov
xor
and
mov
outs
cmp
push
jmp
push
xchg
pop
sub
aam
pop
and
ret
arpl
hlt
or
lahf
mov
outs
test
out
xchg
ja
inc
add
xchg
and
int3
scas
cwde
inc
test
push
retf
mov
lods
sbb
pop
gs
mov
iret
pop
arpl
inc
ja
arpl
xor
ja
add
push
ss
in
dec
adc
jle
jae
js
jns
enter
push
pop
lahf
adc
mov
xor
sar
mov
push
dec
add
cmp
nop
jns
icebp
and
pop
rcr
add
or
dec
adc
cmp
mov
rcl
dec
aas
shl
shr
mov
or
push
jg
bound
mov
fldl2e
jle
arpl
inc
inc
mov
dec
push
mov
jbe
mov
fcom
je
inc
mov
dec
and
shr
repz
jl
or
add
scas
outs
ins
and
ret
ds
test
xchg
pop
adc
or
mov
das
xor
xchg
mov
inc
rol
data16
add
pushf
cmp
and
(bad)
fadd
xor
jo
xor
mov
sub
inc
scas
xor
ret
mov
aaa
out
test
in
jae
dec
or
loop
fs
push
mov
inc
push
iret
stos
(bad)
repnz
sbb
jae
dec
pop
pop
(bad)
jmp
repnz
ins
inc
mov
dec
das
mov
pop
repz
inc
in
repnz
imul
je
outs
lock
push
dec
push
xlat
(bad)
sbb
pop
mov
into
sar
mov
adc
xor
jg
pop
leave
lock
in
fstp
rcl
xchg
es
pop
rcl
mov
cmc
sub
and
adc
add
dec
movs
sub
ss
mov
or
cmp
inc
pop
xlat
fldcw
push
adc
xor
popa
aas
pop
pop
mov
push
jo
dec
in
shr
fdivr
xor
pop
xor
pop
or
mov
lods
sub
and
push
les
aad
sbb
pusha
jl
div
(bad)
jns
xchg
(bad)
pop
sar
add
movs
scas
inc
cmp
pop
ret
bound
and
stos
in
or
std
inc
cmps
in
(bad)
cmp
dec
repz
mov
fisub
sahf
in
and
adc
mov
leave
adc
les
jns
shl
(bad)
sbb
cmp
mov
mov
fidivr
ss
aaa
or
jmp
loopne
hlt
in
fistp
push
dec
js
icebp
inc
dec
mov
leave
adc
pop
and
inc
gs
enter
or
shl
fadd
push
adc
xor
jmp
sub
and
add
cdq
sub
mov
jne
ja
mov
int3
fstp
(bad)
inc
adc
pop
jae
pop
sub
push
jl
aas
(bad)
dec
cs
jae
push
pop
das
ror
lds
pop
mov
sub
cmp
or
lock
out
mov
stos
cld
sbb
push
nop
cli
(bad)
and
cmp
pop
test
clc
push
out
fidiv
mov
scas
and
pop
push
xchg
xchg
std
aad
shl
js
arpl
xlat
sbb
movs
rol
gs
cdq
ret
add
push
(bad)
or
cmp
test
mov
mov
add
dec
pusha
loop
shr
cmps
stc
pop
outs
push
fimul
xchg
push
sub
pop
push
pop
loop
mov
shl
fwait
mov
mov
(bad)
mov
mov
ins
mov
inc
and
cmp
inc
inc
fisubr
mov
cs
xchg
mov
dec
out
pop
mov
jne
dec
imul
jo
push
inc
mov
push
fadd
cmp
lahf
cmp
fstp
shl
ret
sub
pop
fsub
pop
and
sub
inc
pusha
test
ins
aaa
test
xchg
fstp
mov
push
scas
pusha
(bad)
ins
addr16
jg
sub
ret
ins
into
mov
inc
aaa
add
mov
cmp
out
jle
pop
cmp
jmp
add
in
sahf
(bad)
jmp
(bad)
and
sbb
add
add
jbe
into
cdq
int
xchg
add
mov
xor
adc
(bad)
test
ins
out
sbb
mov
je
xchg
fs
lds
stos
jp
cdq
out
pop
push
imul
imul
add
cmc
in
nop
and
inc
xchg
push
fist
es
jecxz
sbb
loop
daa
jge
sbb
neg
ins
(bad)
sti
inc
cmp
inc
in
mov
pop
or
out
mov
pop
jp
ja
in
mov
lods
pop
add
lods
sbb
and
cmp
test
or
cmc
inc
push
(bad)
frstor
mov
cli
mov
test
mov
and
or
(bad)
add
clc
iret
sti
mov
add
lock
push
add
cmps
and
popf
mov
or
movs
push
pop
or
mov
loope
stos
sbb
imul
jp
ret
fisubr
(bad)
mov
cmp
sbb
(bad)
not
mov
push
mov
sub
pop
dec
mov
sar
retf
pop
cdq
aad
dec
test
fdivr
shr
dec
sbb
fidivr
mov
jl
or
lds
call
cs
stc
in
push
add
(bad)
cwde
popa
sbb
cs
xor
inc
pop
add
imul
shl
or
je
dec
mov
xchg
(bad)
and
xchg
ficom
int
mov
rcl
pop
leave
fldenv
pop
enter
jae
mov
cdq
ror
cmps
inc
icebp
cmp
call
sub
jno
dec
mov
sub
(bad)
and
lods
pop
xchg
and
addr16
popf
loop
fbld
xchg
cdq
imul
inc
inc
cmp
retf
imul
mov
je
jg
xchg
ds
arpl
aam
push
jnp
(bad)
xor
mov
and
lods
dec
fwait
pop
xor
mov
cs
and
xchg
jg
bound
mov
or
jae
mov
pop
ja
mov
(bad)
jl
aaa
xchg
and
(bad)
imul
call
inc
mov
stc
mul
inc
dec
push
enter
loopne
call
test
push
mov
push
lahf
fadd
push
(bad)
in
int3
ins
xlat
add
sar
pop
movs
add
popf
enter
push
or
add
sub
xlat
adc
into
loope
pop
xor
xlat
adc
mov
sbb
sbb
mov
das
fs
and
jbe
imul
jnp
fimul
push
sbb
pop
or
sbb
pop
cmp
add
shl
ret
push
fs
cmp
and
(bad)
aam
jmp
pop
mov
bound
inc
stos
mov
dec
xchg
out
into
into
and
popa
cmp
stos
mov
dec
test
xor
test
fs
test
fstp
mov
ret
sub
loope
outs
inc
sbb
loop
in
dec
inc
sub
movntq
sub
(bad)
push
sbb
sbb
mov
std
mov
imul
cmps
int
out
cmp
add
loopne
cmc
xchg
xchg
mov
jae
test
mov
fisubr
xchg
nop
sub
lods
dec
mov
jecxz
fistp
xlat
push
shr
xor
or
in
fbld
add
test
push
push
xor
or
dec
ds
dec
jbe
inc
push
inc
push
jbe
stos
stos
ja
mov
mov
cmp
mov
daa
mov
sahf
or
pop
dec
mov
cld
jae
out
shr
mov
and
mov
in
test
test
sub
fcomp
pop
shr
push
aam
pushf
arpl
push
mov
jo
out
adc
retf
mov
and
cmp
add
add
les
pop
dec
xchg
imul
adc
test
mov
or
pop
icebp
pushf
int
xlat
xchg
mov
mov
daa
adc
jnp
aad
das
cmps
fmul
mov
xor
ret
sub
out
jo
cmp
in
mov
scas
xchg
into
mov
add
add
jbe
lock
pop
lock
dec
icebp
rcr
sub
dec
fs
test
xor
and
in
sahf
push
push
sbb
xchg
mov
pop
hlt
pop
jmp
iret
cmp
xchg
and
scas
push
and
int3
cmp
cmp
pop
xor
push
hlt
xor
data16
push
push
inc
fwait
in
fst
loope
loop
add
jns
mov
push
imul
or
mov
mov
mov
mov
and
inc
lock
mov
test
cmp
inc
push
sub
xchg
shr
outs
jo
push
jns
scas
out
fxch
(bad)
aas
enter
movs
pop
mov
pop
add
jp
and
ds
into
enter
gs
test
jecxz
ds
xor
std
inc
mov
cmp
ins
mov
(bad)
rcl
adc
add
dec
push
loop
retf
lock
push
(bad)
retf
mov
inc
cmp
and
adc
mov
adc
mov
pop
cli
in
jo
sar
sar
shr
jecxz
xor
loopne
add
add
sbb
adc
clc
push
push
mov
push
push
xchg
dec
lahf
ficomp
pop
add
cs
sbb
sbb
jb
inc
lea
mov
xor
iret
jmp
rcl
jae
jl
inc
shl
mov
mov
mov
pop
and
scas
inc
nop
add
and
les
sbb
not
aaa
xor
loop
leave
xchg
jae
das
div
adc
dec
hlt
jnp
xchg
sub
rcl
test
dec
inc
xchg
call
mov
push
adc
or
mov
dec
aam
xor
(bad)
fiadd
cmc
lahf
cmp
cmc
(bad)
fcmove
pusha
dec
dec
mov
mov
add
imul
cmp
shl
jecxz
sub
cmps
sti
loop
xchg
xchg
fcom
and
sbb
or
arpl
pop
xchg
adc
addr16
(bad)
mov
sub
int3
adc
repz
test
sti
xor
mov
pop
pop
sti
adc
and
sub
pop
daa
mov
mov
shr
adc
and
add
jmp
aam
pop
dec
leave
(bad)
cmp
adc
cmp
mov
scas
fimul
lods
cli
cdq
mov
adc
daa
mov
inc
mov
and
(bad)
lods
xor
mov
push
sbb
mov
mov
cld
movs
xchg
push
xchg
inc
add
sbb
xlat
imul
ins
rcl
dec
jnp
mov
add
inc
(bad)
xlat
call
mov
repnz
fwait
imul
jne
xor
in
adc
sub
lock
jnp
cmc
mov
sub
stc
sub
ds
ret
push
fwait
lahf
sar
ins
dec
ss
jp
dec
push
js
and
mov
xor
(bad)
iret
lds
sub
(bad)
sbb
cmp
cdq
pop
fnstsw
jo
ins
cmc
mov
stos
fcmovne
retf
loopne
sub
push
sbb
ss
std
xchg
push
inc
sar
mov
int
retf
cmc
(bad)
mov
fs
jmp
or
in
aas
sub
xchg
movs
or
jg
popf
loopne
popa
scas
gs
ret
int3
xlat
pop
imul
mov
sbb
mov
cmp
mov
inc
movs
imul
xchg
(bad)
pop
sub
out
fucom
sub
pop
or
test
jmp
in
and
outs
sbb
mov
or
in
dec
mov
adc
pusha
mov
sbb
frstor
pop
dec
or
inc
leave
das
(bad)
cld
mov
ja
add
inc
jns
dec
jmp
inc
mov
adc
mov
jle
mov
and
mov
pop
in
and
mov
xor
mov
call
call
jnp
jl
ja
nop
out
gs
cld
fwait
ret
jmp
fcomp
out
icebp
mov
sbb
paddq
mov
repnz
cmp
jne
in
xor
dec
sub
mov
mov
sub
xchg
push
jb
imul
push
icebp
ins
int
enter
xor
sbb
ss
push
addr16
fistp
movs
mov
sar
xor
test
push
dec
mov
lock
mov
popa
mov
jg
push
stos
(bad)
popf
mov
out
arpl
and
pusha
stos
mov
xor
int
test
push
data16
movs
leave
xchg
int3
mov
sahf
xor
xor
jmp
xchg
(bad)
pop
adc
sbb
xor
test
push
shl
cdq
out
ret
outs
loop
dec
cdq
out
fucom
repnz
adc
clc
shl
sub
(bad)
enter
jns
sbb
popa
push
dec
mov
add
push
pusha
inc
add
mov
jle
add
fcom
lods
xor
sbb
adc
ret
outs
aam
out
jmp
pop
push
retf
movs
fdiv
jp
test
imul
pop
sub
dec
mov
mov
call
jns
int3
push
or
xor
gs
neg
cwde
int3
jno
push
cmps
pause
inc
jl
add
xchg
or
icebp
and
mov
outs
loope
test
pop
mov
pop
push
xchg
imul
xlat
adc
es
aad
and
in
shl
pop
mov
xchg
dec
push
mov
sbb
xchg
jne
sub
cmps
sar
clc
and
nop
xor
out
in
lock
add
and
mov
jle
mov
push
sub
or
and
mov
mov
push
dec
mov
push
add
(bad)
dec
fist
mov
fcomp
out
stos
adc
xor
fmul
or
rol
imul
test
out
pop
pop
pop
bnd
cmp
or
sub
nop
inc
jbe
aam
inc
inc
xor
adc
out
fdiv
nop
jnp
aad
mov
ret
repnz
pop
test
scas
shl
lahf
popa
mov
into
hlt
cmc
idiv
int3
stc
leave
movs
shl
out
call
int
in
mov
mov
inc
cmps
push
fcomi
dec
mov
sbb
adc
sar
movs
fdivr
popf
sbb
or
(bad)
mov
push
or
inc
in
add
ffree
test
pusha
and
test
adc
hlt
popf
dec
test
push
mov
xchg
fistp
jnp
loope
and
xchg
gs
sbb
or
int
icebp
loope
xor
pushf
mov
mov
sti
enter
pushf
fild
hlt
jmp
cli
shr
jns
xor
mov
dec
fmul
ret
call
mov
dec
call
mov
pusha
fs
ss
mov
sub
dec
es
bound
cmp
pop
popf
xchg
or
dec
inc
in
jns
lods
ret
add
sbb
mov
out
inc
(bad)
mov
dec
int
dec
xchg
(bad)
cld
xchg
push
xchg
mov
xchg
lea
loope
mov
mov
(bad)
shr
mov
inc
pop
push
scas
mov
repz
sub
cli
dec
push
cmp
inc
fcmovbe
inc
std
jnp
jg
test
in
in
xchg
pop
sub
sbb
inc
add
mov
mov
aas
hlt
dec
call
mov
mov
cmp
xor
rol
or
xchg
inc
lods
add
jne
jo
das
xor
lds
stos
mov
popa
loop
inc
cmc
adc
arpl
dec
call
mul
mov
mov
add
or
rcl
or
ror
cli
dec
pusha
add
(bad)
imul
or
gs
inc
mov
std
mov
in
sbb
add
push
and
mov
nop
jmp
gs
add
mov
les
(bad)
adc
sahf
sbb
xchg
pop
xchg
cmp
mov
push
mov
test
pop
pop
loope
jp
jge
adc
mov
jns
jge
lds
cdq
popf
mov
cmp
out
mov
repz
(bad)
mov
mov
dec
fldenv
sub
lods
imul
aad
inc
in
cmp
pop
jge
or
dec
rcr
sbb
movs
aaa
mov
add
add
or
jecxz
adc
mov
xchg
sbb
lods
daa
xlat
sahf
imul
or
cmp
dec
dec
and
sti
mov
xchg
retf
lahf
stos
jmp
mov
xchg
inc
cmc
jle
dec
(bad)
jge
mov
or
int3
mov
mov
arpl
xchg
xchg
loope
retf
add
jnp
imul
push
push
mov
shl
pop
popa
or
or
aas
push
sbb
or
sub
mov
daa
push
mov
neg
xchg
pushf
test
aas
pop
sub
das
or
rol
sub
xchg
mov
frstor
and
mov
pop
mov
es
lods
mov
pop
repz
rcl
out
int3
mov
push
ss
shl
out
outs
push
dec
add
mov
retf
pop
adc
pushf
mov
shl
push
aaa
pop
push
add
bound
lds
mov
aaa
pop
cmp
jmp
push
push
pop
jns
mov
sti
arpl
jg
lea
retf
das
cmp
push
adc
ins
jmp
cmp
les
aas
mov
rcl
nop
sub
cmp
xor
sub
jl
mov
push
and
dec
add
adc
arpl
outs
pop
dec
push
pop
push
xchg
inc
pusha
int
test
mov
xchg
sub
das
jno
(bad)
cmp
push
sub
add
push
xor
or
dec
xlat
or
adc
aaa
test
lock
push
sub
and
sti
add
mov
push
mov
repnz
ss
push
leave
xor
daa
std
xor
pop
rcl
push
mov
add
in
call
popa
inc
mov
xor
cmp
dec
sahf
test
hlt
std
mov
jmp
fld
mov
dec
sub
adc
cdq
and
imul
adc
mul
cwde
ja
push
rol
xchg
or
cmps
fxch
js
or
stos
scas
pop
shl
pop
call
mov
cs
cmps
int
cmp
jmp
rcr
and
adc
fidiv
push
test
adc
(bad)
xchg
push
jae
not
cmp
mov
rcl
inc
fwait
lock
pop
cs
mov
jae
push
xchg
inc
jae
popa
and
sbb
sub
in
pop
pushf
jle
test
aad
pop
(bad)
test
mov
cdq
aad
and
or
aad
mov
pusha
xor
and
mov
mov
or
sub
aam
out
dec
add
loope
push
sub
jae
sbb
pop
aaa
or
lahf
cmp
ss
sbb
jg
xchg
cmp
outs
mov
sub
jmp
and
add
mov
fdivr
xchg
cmp
(bad)
sub
and
pop
add
ins
movs
mov
adc
xchg
xchg
dec
dec
inc
sbb
adc
int
inc
jle
(bad)
and
add
mov
and
adc
cmp
xor
lea
es
ss
xchg
lods
adc
mov
ret
xor
push
call
mov
push
add
or
push
and
test
push
pop
in
test
outs
(bad)
cmp
jae
mov
jle
ins
inc
mov
test
and
leave
xchg
repnz
jae
retf
add
xchg
jmp
cmp
or
fbstp
aam
mov
or
adc
mov
cmp
rcr
int3
jp
dec
(bad)
pusha
sahf
aaa
data16
push
dec
outs
push
scas
test
mov
fsub
pop
test
aad
fld
out
push
leave
mov
lock
int
jecxz
push
clc
add
and
add
test
mov
and
fwait
leave
pop
dec
adc
sbb
sub
mov
aad
sbb
mov
in
bound
loopne
xchg
loop
fwait
sbb
mov
gs
lods
push
push
inc
jb
daa
test
ss
jle
(bad)
cmp
aam
push
xor
ret
jae
cwde
call
into
cmp
mov
sbb
sbb
in
in
scas
daa
(bad)
pop
popa
mov
(bad)
dec
xchg
xchg
sub
stos
pop
popa
add
xchg
dec
dec
shr
pusha
fmulp
pop
jg
fld
idiv
sahf
jo
cmps
rcr
les
sbb
out
outs
adc
popa
arpl
lea
mov
sbb
icebp
and
dec
pushf
dec
dec
das
jae
mov
popf
aas
mov
sbb
sub
inc
(bad)
push
sbb
ret
fsub
pop
call
mov
fst
adc
sub
xlat
and
dec
pushf
bnd
pop
inc
jge
(bad)
mov
mov
ins
gs
push
cmp
push
xchg
mov
lds
sbb
jns
inc
lock
xor
lea
mov
call
pop
or
outs
pop
(bad)
pop
or
jmp
or
cmp
int
xor
cmps
ss
adc
(bad)
mov
or
(bad)
mov
push
jbe
ins
jbe
sub
mov
sub
or
js
icebp
or
(bad)
cld
ins
stos
imul
push
cmps
jmp
and
std
sbb
out
stos
fwait
push
cmp
lds
cmp
out
or
iret
push
dec
cmp
and
cmps
cmp
jge
sbb
cld
xor
lahf
pop
loopne
push
ror
push
inc
jnp
dec
lods
cmps
mov
pushf
stc
mov
inc
inc
jg
sub
(bad)
mov
fwait
outs
leave
sbb
xchg
leave
ja
add
jge
sbb
or
and
rcr
jl
xchg
addr16
jno
adc
jae
jg
(bad)
sbb
dec
inc
cld
das
push
and
and
(bad)
ins
jbe
imul
test
imul
inc
das
in
sub
mov
lock
adc
push
stc
(bad)
int
dec
fldcw
ficomp
fisttp
(bad)
xor
mov
and
jbe
xor
loopne
enter
push
or
sti
mov
lods
dec
xchg
ror
inc
inc
das
popf
or
xchg
mov
pop
inc
mov
frstor
cs
pop
stos
cmp
xchg
sahf
loop
xchg
loopne
and
lahf
mov
add
gs
mov
jg
dec
mov
lea
mov
mov
movs
clc
lods
sub
push
pop
js
sbb
fstp
inc
xor
or
mov
mov
inc
push
inc
lods
test
add
cmp
push
dec
add
add
push
les
cmp
adc
movs
xor
and
mov
adc
or
in
loope
xchg
and
je
ins
pop
iret
test
pop
xchg
mov
dec
repnz
push
icebp
and
aad
mov
loop
out
mov
or
xchg
loopne
pop
pop
dec
mov
ret
jecxz
out
movs
ds
mov
sbb
inc
pop
mov
dec
dec
push
cmp
xchg
sbb
int
movs
ret
dec
pusha
sub
jno
cmc
mov
cmp
ror
jmp
cmc
pop
outs
ja
arpl
xchg
fwait
push
clc
or
enter
xor
or
popa
lods
fld
pop
jb
add
push
inc
daa
stc
popa
aaa
stos
mov
cmp
and
xchg
add
stos
lods
sbb
stos
xchg
and
dec
mov
scas
(bad)
mov
sahf
or
mov
cli
pop
les
mov
sbb
es
jo
int
out
jmp
das
mov
push
pop
daa
aaa
lock
cli
ret
out
add
ins
jl
jmp
cmps
sbb
pop
push
mov
push
cmp
aad
cmps
xchg
xor
jp
cwde
xchg
cmp
cmps
cmp
inc
mov
sar
fidiv
push
push
sahf
mov
inc
scas
jne
sti
inc
adc
jle
sub
loopne
pop
ret
rcr
fwait
test
add
lahf
fucomp
xchg
retf
xlat
jno
adc
mov
call
mov
mov
and
stos
and
cmp
popf
and
pop
leave
jle
imul
imul
add
mov
ds
test
dec
test
lahf
popf
inc
test
or
jae
jbe
push
cmp
mov
push
inc
sbb
and
imul
call
call
mov
sbb
into
or
cmc
imul
xchg
add
mov
rol
rcl
hlt
scas
adc
cmp
icebp
jmp
enter
mov
retf
lds
jne
or
pusha
ins
xlat
fldcw
pop
retf
fistp
xchg
jg
movs
sbb
pop
pushf
pop
jb
ins
popa
retf
xor
les
mov
popf
aaa
(bad)
in
mov
mov
fsubr
icebp
cmp
mov
in
mov
sbb
pop
mov
int3
sbb
sbb
xchg
dec
fisub
inc
(bad)
pop
jbe
xchg
or
leave
ror
shr
aaa
and
and
call
outs
cmp
adc
mov
add
jb
xor
inc
sbb
mov
lahf
or
fld
cmp
outs
sub
jno
imul
inc
xchg
xchg
adc
test
or
xlat
(bad)
sbb
jns
mov
clc
cmps
fbstp
mov
aas
ret
push
stos
in
sbb
add
pop
repnz
les
sub
push
cwde
sub
push
add
arpl
sbb
lods
mov
jge
in
mov
jnp
mov
jmp
or
sub
cmps
leave
mov
aam
or
adc
mov
mov
jmp
mov
aas
jmp
popf
push
adc
lahf
add
push
push
jne
cli
imul
mov
repnz
fild
dec
xchg
sti
retf
fld
sub
inc
out
push
sub
mov
pop
fidiv
(bad)
cmp
std
push
jne
sub
xor
xchg
xor
or
sub
xlat
sub
icebp
push
int3
pop
test
scas
leave
mov
xchg
inc
mov
(bad)
jp
nop
xor
fst
push
xor
or
push
push
jmp
int
jl
ja
mov
test
fidiv
adc
xor
repnz
fimul
push
xlat
jecxz
nop
dec
ss
mov
jnp
cmp
retf
ja
push
sbb
loop
test
(bad)
mov
mul
rcl
lock
sahf
jmp
dec
sbb
ds
(bad)
fild
push
(bad)
fidiv
stos
push
dec
jg
sub
popf
or
fucomi
jp
popf
das
arpl
pusha
and
leave
push
cmp
dec
xchg
sbb
stc
sbb
ds
mov
inc
dec
movs
loopne
popa
sbb
add
sbb
sahf
pop
into
xor
imul
mov
aad
and
jecxz
jne
mov
in
xchg
jne
in
adc
fwait
(bad)
retf
sub
mov
mov
repz
xor
(bad)
dec
test
aaa
dec
sti
hlt
bound
popf
pusha
hlt
(bad)
pop
and
push
jmp
out
fwait
inc
cmp
inc
push
aas
mov
call
mov
sbb
mov
and
ins
sub
(bad)
sub
pop
lds
aam
cmps
clc
in
mov
or
and
sub
in
xchg
call
pop
rep
outs
push
pop
scas
aad
or
jne
enter
sub
sub
cli
das
push
or
loopne
rol
(bad)
sbb
data16
movs
lods
and
icebp
add
out
fwait
nop
xor
out
out
aas
xor
inc
loope
mov
cmp
inc
jp
pop
(bad)
adc
inc
add
cmp
arpl
ret
adc
jo
xchg
sbb
push
repnz
aad
inc
jae
add
arpl
call
arpl
xlat
test
ficom
or
jae
mov
int
in
and
inc
add
pop
in
pop
lahf
out
mov
cmp
and
xor
jae
out
addr16
mov
test
jne
adc
cmp
out
add
int
inc
(bad)
rcr
xchg
(bad)
jnp
icebp
repnz
adc
sub
xchg
pop
mov
daa
jno
xor
aaa
inc
ins
retf
loop
push
imul
pop
into
inc
push
push
int3
mov
mov
or
in
lods
movs
xchg
js
push
imul
xchg
pop
sbb
xchg
sbb
and
mov
leave
pop
(bad)
jmp
test
(bad)
retf
mov
leave
mov
pop
mov
xchg
cmps
cmps
and
aam
dec
or
mov
fsubr
dec
ret
xchg
loope
xchg
out
inc
jg
daa
jl
inc
pop
add
mov
jp
fwait
inc
or
dec
mov
or
sub
scas
(bad)
mov
cmps
xor
xchg
(bad)
fild
jo
in
(bad)
in
jbe
and
and
adc
(bad)
lods
and
(bad)
push
mov
jnp
cmp
out
adc
in
xor
jne
sbb
gs
jle
in
int
arpl
mov
xchg
movs
mov
imul
shl
push
mov
xchg
std
loopne
mov
jmp
sub
add
das
outs
xor
mov
mov
stos
sbb
cs
inc
dec
xor
outs
popa
jns
mov
nop
mov
into
outs
cwde
pop
mov
jb
(bad)
ret
adc
popf
out
jns
inc
push
imul
cli
cmp
je
(bad)
arpl
and
dec
mov
out
lods
sar
gs
add
jp
push
sub
sbb
(bad)
jecxz
inc
mov
shl
or
push
popa
sbb
cli
mov
xchg
or
shl
push
push
add
shl
ror
lea
ror
jmp
cmps
stos
cld
xchg
(bad)
cmp
xchg
push
xchg
mov
imul
push
cmp
(bad)
in
or
sub
ss
repnz
add
pop
pop
cs
out
pusha
fsubr
or
cmp
jne
int
sub
xchg
push
cmp
mov
rcr
jecxz
dec
pop
in
jbe
dec
in
lods
pop
es
pop
(bad)
jp
jae
jb
loope
int3
or
xchg
mov
test
rcl
inc
fild
ret
inc
inc
repz
mov
call
pop
jbe
lahf
jp
in
test
jl
test
sub
aaa
imul
fs
mov
nop
fisttp
lds
cmc
bound
add
test
(bad)
rcr
icebp
daa
fldenv
adc
sbb
pop
jbe
out
mov
mov
mov
in
ret
xor
out
adc
pop
cmps
sti
ins
sbb
jle
(bad)
(bad)
push
push
inc
nop
mov
cld
adc
lock
ins
push
mov
cs
inc
xor
and
into
lea
pusha
mov
add
stos
dec
imul
call
xchg
adc
ins
mov
loopne
xchg
mov
sti
(bad)
rcr
(bad)
movs
cld
jno
jmp
pop
daa
add
xchg
sar
daa
mov
sbb
in
push
jl
aam
xor
gs
vpmacssdd
cld
sub
pop
mov
xchg
dec
jp
mov
push
mov
repnz
adc
(bad)
iret
jbe
sbb
inc
push
mov
pop
out
in
outs
je
pop
bnd
xchg
hlt
mov
arpl
(bad)
mov
xchg
pushf
loope
inc
mov
stc
xchg
inc
test
ins
push
ja
out
cmp
stos
xchg
js
sub
loopne
mov
sbb
(bad)
mov
pop
enter
out
daa
popf
sub
in
gs
inc
push
rcr
dec
jns
sub
push
xor
scas
cmc
enter
cld
cmps
lods
add
shl
adc
mov
or
mov
pop
fidivr
(bad)
sar
inc
adc
out
scas
cmps
repnz
adc
paddsw
inc
in
mov
out
push
mov
pop
dec
jae
sub
lods
adc
add
sub
jl
cmp
out
ret
call
(bad)
out
mov
ror
loopne
aam
cmp
cli
scas
sub
push
shr
sti
loopne
mov
(bad)
stos
dec
fmul
sbb
adc
shl
mov
push
loopne
lds
jno
sbb
push
jb
mov
push
xchg
in
loopne
sbb
in
dec
outs
stos
in
pop
out
in
bound
cmc
sbb
pop
sbb
mov
cdq
outs
ss
inc
out
dec
or
mov
mov
or
dec
and
add
outs
xchg
add
xor
cmc
(bad)
movs
sbb
cmp
mov
(bad)
sbb
retf
clc
mov
popf
jmp
mov
or
dec
pop
stos
ins
adc
jns
(bad)
cvtpi2ps
adc
jne
retf
cmp
pop
sbb
jne
mov
mov
inc
add
out
mov
adc
jle
add
stos
push
push
ss
cmp
mov
mov
or
pushf
mov
fmulp
fistp
mov
fisttp
push
mov
test
nop
pop
inc
push
cdq
fldenv
ins
lock
push
hlt
xor
inc
adc
jg
inc
sbb
and
ret
or
lea
mov
inc
jnp
arpl
das
addr16
inc
pop
jbe
push
inc
add
cmp
mov
in
sbb
fimul
mov
cwde
xchg
retf
(bad)
mov
sub
shl
mov
mov
fmul
lahf
mov
mov
jle
mov
fsub
push
ins
sbb
mov
or
sbb
push
js
sub
mov
xor
and
sbb
push
icebp
mov
pop
push
mov
ret
mov
jle
stos
mov
in
ret
xchg
mov
jae
cmc
jmp
push
retf
test
fisub
loope
call
popa
out
aaa
sub
or
movs
shr
adc
push
sbb
mov
pop
lahf
lods
inc
sbb
cmps
inc
add
jmp
or
and
adc
mov
jne
cmps
jne
mov
pop
pop
mov
cmp
in
dec
cwde
js
loopne
pop
(bad)
sahf
mov
inc
jno
xchg
out
and
daa
add
aam
shl
repnz
loopne
mov
std
(bad)
mov
clc
dec
or
das
stos
adc
jge
xchg
mov
adc
in
fcomp
cmp
sar
mov
push
sub
popf
cmp
xchg
mov
or
fwait
ss
or
fwait
push
push
adc
jbe
lock
cli
in
jns
jns
imul
(bad)
cdq
pop
push
add
pop
cmovbe
fimul
xor
pop
popf
ss
out
movs
or
adc
sahf
xor
pop
repz
int
mov
clc
dec
test
cmc
cmp
les
into
push
mov
addr16
xchg
pusha
cmp
sbb
jecxz
scas
lahf
arpl
aaa
xchg
jb
loopne
push
into
dec
mov
inc
mov
push
stos
ret
js
inc
les
ins
fwait
mov
inc
sub
in
xchg
pop
add
retf
adc
cmp
and
xor
hlt
jae
pushf
adc
inc
fisubr
scas
mov
xchg
cmp
mov
nop
jg
mov
pop
fisubr
out
stc
imul
jg
pop
mov
cmp
out
xor
sbb
ds
fdivr
pop
adc
lds
xchg
push
and
(bad)
adc
pop
jge
mov
rol
xchg
push
or
les
inc
lods
sbb
js
shr
xor
hlt
sbb
and
sahf
pop
dec
pop
and
fistp
call
jmp
xchg
retf
mov
rcr
ins
xor
push
pushf
inc
in
orps
xchg
ins
adc
inc
push
or
mov
xchg
sbb
jns
push
xor
out
pop
mov
inc
clc
cwde
test
jne
and
cmp
es
out
daa
fstp
mov
cld
add
test
adc
and
out
repnz
add
and
std
mov
lds
mov
pop
jno
and
adc
loop
push
or
mov
in
mov
aas
and
iret
dec
and
loope
cmps
push
jno
jmp
es
or
xchg
or
mov
jmp
or
pop
pop
or
mov
pop
pop
push
cmp
out
pop
mov
pop
inc
stos
jae
out
(bad)
or
ss
xor
cmp
jle
mul
clc
ds
cmp
aad
sbb
cdq
loopne
lods
jg
in
mov
(bad)
jmp
mov
enter
mov
stc
out
loop
inc
xchg
pushf
outs
outs
(bad)
push
push
and
test
jo
add
mov
jp
jbe
mov
mul
xlat
inc
jg
lds
lock
push
xchg
scas
xor
mov
cli
call
daa
xchg
(bad)
xor
into
pop
xor
push
sub
call
bndldx
call
sahf
into
or
push
retf
pop
push
mov
lds
fnstenv
cmps
dec
outs
adc
jp
loopne
xchg
xor
sbb
sub
fnsave
mov
call
mov
jmp
call
mov
sub
loopne
test
xchg
out
inc
add
mov
std
shl
jle
not
ins
sub
cdq
xchg
mov
xchg
iret
pop
adc
cmp
dec
dec
add
retf
icebp
jbe
jo
and
mov
and
in
mov
mov
inc
arpl
jno
push
add
into
jbe
dec
out
iret
and
fsubr
mov
movlps
add
jns
movs
aaa
xchg
test
fwait
into
sbb
push
mov
inc
das
sbb
inc
or
pop
xchg
xchg
add
sbb
jmp
pop
jg
fisubr
test
fild
xchg
outs
cmp
adc
pop
push
sbb
and
mov
and
and
retf
stos
ss
inc
mov
fcmovbe
cwde
add
and
add
inc
mov
loope
dec
ret
sbb
out
pop
sub
dec
jb
cdq
mov
sub
(bad)
fisub
dec
pusha
fidiv
sbb
push
lods
cmp
test
mov
xor
and
test
fwait
stos
out
xchg
or
xor
in
mov
ds
cli
push
inc
inc
int
add
neg
cmc
jp
imul
mov
sbb
cdq
push
mov
push
jbe
cmp
xchg
call
inc
imul
sub
cld
jmp
pop
(bad)
xchg
neg
ds
sbb
and
(bad)
out
retf
popf
arpl
jno
out
xor
cld
fidivr
jge
stc
jno
jmp
aaa
or
mov
(bad)
lahf
jo
pop
out
mov
inc
outs
das
les
jmp
and
dec
call
push
ret
xor
mov
out
inc
mov
sbb
lods
add
add
mov
std
jecxz
sbb
icebp
test
add
pop
push
xor
add
jl
jle
adc
std
inc
and
aam
mov
or
cmp
jb
pop
bound
scas
mov
ja
pop
push
nop
aad
mov
add
addr16
pop
xchg
jle
in
sti
jmp
dec
add
sti
fidivr
aas
mov
retf
std
inc
popa
out
pop
cmp
test
fild
and
cmp
fadd
sbb
repz
mov
push
mul
pop
push
shr
jmp
out
xchg
or
leave
sbb
cmps
xor
loopne
jnp
mov
dec
add
sbb
or
aam
jae
pop
xchg
outs
mov
mov
adc
xchg
pop
sbb
jnp
adc
sbb
jb
dec
cld
sar
dec
lahf
scas
hlt
hlt
(bad)
jl
sub
inc
push
pop
into
pop
xlat
or
or
(bad)
stc
gs
jno
pop
mov
shl
mov
and
and
jl
je
jge
dec
or
int
or
add
mov
sbb
(bad)
push
imul
xchg
jp
sub
xor
outs
es
(bad)
ins
or
push
rol
lods
push
icebp
sahf
ins
adc
xor
call
add
adc
sar
mov
xor
mov
push
int3
and
mov
leave
dec
inc
mov
shl
jb
xor
jecxz
ins
pcmpeqd
add
shr
pop
mov
(bad)
hlt
add
stos
cmp
pusha
outs
cmp
in
add
and
mov
aas
imul
lahf
xchg
cmp
out
in
dec
iret
in
cld
fiadd
sbb
jecxz
mov
and
pop
ret
inc
sub
cli
push
or
enter
leave
cmp
and
jmp
xlat
icebp
imul
rol
pop
adc
sub
js
sbb
out
sub
mov
lods
ss
xchg
es
ins
cmp
rcl
popa
ss
adc
test
sar
retf
jns
or
and
in
nop
mov
add
inc
gs
sub
lea
inc
dec
xlat
pop
mov
(bad)
test
mov
push
cmps
fwait
jle
pop
xchg
mov
test
jns
and
sub
or
xchg
inc
cli
mov
das
or
add
sbb
dec
cmp
cmp
test
adc
out
mov
sub
add
inc
inc
fcmovnu
pop
inc
xor
mov
pop
and
data16
dec
pushf
and
fwait
pop
shl
adc
fbld
(bad)
ds
jl
mov
dec
mov
cmps
add
movs
inc
dec
mov
jp
dec
out
retf
arpl
divsd
sti
retf
adc
mov
push
imul
mov
cmp
cdq
sub
call
add
call
sbb
dec
push
jo
pop
mov
(bad)
push
cdq
push
cmp
int3
(bad)
movs
add
scas
int
test
push
mov
xchg
ret
mov
inc
rcr
xlat
mov
and
adc
repz
loopne
cld
push
push
gs
jle
ret
mov
adc
adc
xor
movs
ret
stos
xchg
pop
pop
xor
sbb
and
inc
jle
jmp
and
daa
in
mov
movs
mov
fisttp
lods
push
daa
pop
mov
arpl
adc
in
sbb
dec
or
pop
inc
xlat
data16
inc
jge
fst
and
mov
xchg
add
sbb
push
mov
jbe
pop
xor
xlat
ja
fld
xchg
outs
ja
xor
in
push
inc
cmp
push
iret
pusha
mov
dec
stos
fistp
or
fmul
and
push
mov
loope
push
ins
outs
int
mov
lods
shr
scas
fwait
retf
ret
out
loop
push
dec
or
mov
loop
imul
xchg
sbb
gs
fisttp
mov
adc
jmp
cwde
repnz
mov
loop
ss
mov
inc
out
xchg
fs
jae
jne
mov
ins
lock
sbb
or
loopne
jns
cmp
sub
xor
hlt
mov
jae
fadd
xchg
scas
sar
popa
and
leave
mov
call
mov
cmp
call
pop
test
sti
jnp
sub
xor
fwait
pusha
adc
push
(bad)
dec
sbb
sahf
add
fstp
lods
and
sbb
jmp
inc
rol
push
mov
icebp
xchg
inc
inc
cmp
imul
gs
mov
in
in
loope
into
jle
into
dec
xor
adc
out
push
pop
mov
or
jno
loop
mov
sub
push
enter
ret
in
push
out
repz
sub
mov
cmp
test
in
inc
or
dec
ja
mov
nop
lahf
cmc
fimul
test
mov
in
int
(bad)
stos
gs
mov
cmp
stc
jnp
dec
mov
xor
loope
loopne
shl
test
and
pop
or
std
out
sar
out
mov
xchg
inc
mov
loope
or
sbb
mov
mov
mov
movs
xchg
add
pop
(bad)
mov
popa
dec
mov
mov
lods
movs
call
mov
inc
std
cmp
sbb
xchg
call
jecxz
or
(bad)
ins
adc
retf
mov
test
adc
pop
jne
sub
mov
int
pushf
je
fisub
xchg
push
or
gs
pusha
adc
sub
push
aad
into
ins
scas
mov
mov
rcr
scas
movs
pop
fld
sbb
sub
mov
adc
test
sub
and
cmp
jb
cmps
jg
sbb
jo
jg
jge
in
test
aad
sub
cmp
and
push
mov
pop
pop
lahf
aad
in
or
xor
push
add
push
mov
dec
(bad)
mov
mov
cli
out
les
mov
mov
pop
scas
dec
movs
int3
pop
and
ins
and
push
dec
in
jns
popf
repnz
cmp
mov
dec
clc
(bad)
test
dec
add
mov
cmp
(bad)
icebp
adc
jl
jne
and
sbb
int3
mov
nop
hlt
stos
inc
push
in
mov
sub
daa
push
ins
rcr
inc
aas
cmps
(bad)
or
stos
pop
sbb
xor
push
pop
mov
mov
imul
mov
daa
sub
or
scas
fsub
dec
int3
xchg
mov
push
stos
mov
fdiv
ds
mov
cdq
add
or
mov
mov
xor
hlt
arpl
dec
jbe
cld
data16
mov
in
sbb
cmp
jbe
cmp
test
add
fmul
cwde
call
popf
les
mov
cwde
and
push
mov
lock
(bad)
jmp
cld
or
scas
push
data16
fdivr
scas
xchg
fild
push
mov
push
stos
ret
lods
sbb
dec
bound
test
and
sub
or
push
pop
jo
outs
(bad)
int3
mov
xor
adc
not
retf
add
cmp
jno
test
ja
adc
lods
pop
inc
hlt
or
lods
rcl
fstp
lods
rcr
mov
xor
dec
xor
out
test
mov
cmps
repz
repz
sbb
adc
pop
dec
popf
dec
mov
mov
rol
stc
or
dec
push
jg
aaa
daa
cwde
test
pop
popf
fs
stc
stos
jmp
leave
adc
outs
ins
add
mov
xchg
push
popf
je
dec
jmp
and
movs
fdivr
sti
iret
into
sbb
ja
stos
jg
data16
mov
js
lods
ja
in
inc
lods
sub
mov
xor
lock
out
sbb
or
sbb
dec
cwde
adc
mov
xchg
out
xor
jmp
lods
addr16
and
call
movs
je
mov
aas
ss
popf
jmp
pop
cmps
sub
mov
sahf
mov
fisttp
(bad)
jle
cmps
xor
mov
rol
pop
imul
xor
sub
inc
fsub
jp
dec
loope
and
jno
dec
int
mov
jne
or
je
in
mov
mov
inc
cmp
stc
mov
xor
mov
jmp
pop
cdq
push
adc
pop
xor
xor
leave
(bad)
aam
or
jb
sahf
or
adc
push
xlat
xchg
test
scas
push
adc
dec
adc
sar
jl
sbb
pmaxsw
shl
sbb
jno
and
push
aaa
push
jnp
dec
scas
and
sbb
in
pop
dec
stos
sub
mov
jnp
icebp
pop
sub
daa
xchg
out
dec
mov
js
or
fmul
add
(bad)
cmps
add
mov
mov
sbb
lods
or
mov
jg
shl
lock
ins
sbb
jb
(bad)
fist
stc
les
jl
xor
xchg
lods
dec
pop
cmp
and
mov
imul
jge
xor
jle
jns
jp
jge
mov
dec
(bad)
movs
pop
movs
test
lock
gs
fcmove
mov
bound
(bad)
sub
mov
pop
lds
xchg
addr16
mov
inc
xchg
aaa
outs
cli
ds
cmp
jmp
jl
iret
jnp
inc
es
stc
push
mov
xchg
xor
out
data16
xor
xor
bound
adc
shl
xchg
outs
mov
ins
pop
or
les
push
mov
cs
stc
sbb
mov
les
mov
bound
ins
xchg
pop
xchg
push
xor
mov
cmp
adc
fwait
dec
xchg
lods
dec
push
push
jmp
stc
add
xchg
adc
or
shl
or
aam
retf
push
je
pop
sub
test
enter
lea
adc
retf
nop
clc
stos
out
(bad)
out
mov
pop
mov
stos
adc
dec
out
(bad)
std
(bad)
inc
pop
cmc
jae
pusha
test
aam
out
bnd
clc
das
pop
inc
ss
pop
mov
adc
xor
jmp
repz
jmp
stos
stc
xchg
lods
mov
inc
push
mov
xchg
ret
ds
sub
fcom
sub
mov
push
scas
cli
add
jg
mov
or
inc
mov
stos
pushf
xor
sub
push
pop
jge
je
fld
enter
xor
dec
fimul
xchg
push
lea
dec
xlat
inc
xchg
push
xor
push
ins
aaa
mov
(bad)
dec
fwait
xor
push
ret
jg
sbb
and
retf
inc
mov
inc
mov
xchg
fidivr
pusha
fidivr
cmp
retf
sbb
lea
bound
sub
jo
mov
xchg
mov
xchg
loop
pop
fild
mov
int
pop
jp
or
mov
dec
adc
mul
test
test
jecxz
dec
loopne
inc
pusha
lods
mov
repnz
cmps
enter
int3
xlat
sbb
leave
repz
ret
inc
ins
xchg
call
mov
fisttp
push
leave
push
out
outs
idiv
ret
add
dec
push
(bad)
leave
dec
adc
je
xor
std
jle
lahf
aas
repnz
shr
in
arpl
ins
daa
push
pop
(bad)
mov
retf
mov
xchg
mov
retf
ja
inc
test
imul
pop
stos
inc
xlat
inc
out
inc
sar
imul
cvttps2pi
and
xor
inc
retf
inc
lahf
mov
push
lods
es
mov
mov
mov
je
push
idiv
bound
in
aaa
bound
sbb
and
push
scas
and
push
fistp
idiv
sbb
pop
xor
xchg
cld
mov
xchg
sub
pop
mov
jge
inc
(bad)
mov
cwde
test
xchg
pop
mov
adc
mov
xchg
jge
sbb
sub
mov
sbb
push
inc
les
loope
dec
or
add
retf
ret
aam
pop
sbb
pop
jl
retf
shr
push
xor
clc
cmp
call
push
adc
cmp
mov
pop
loope
into
repz
fwait
xor
dec
mov
jne
enter
movs
cmp
mov
mov
inc
adc
jne
jns
xchg
jp
and
popa
cmps
mov
inc
adc
in
sub
mov
add
sbb
or
imul
sub
jecxz
in
rcl
mov
push
lock
push
pop
scas
dec
stos
push
sar
jne
scas
cmp
inc
imul
mov
stos
les
div
add
cmc
aad
iret
cmp
jge
mov
add
sbb
sbb
and
rol
inc
ja
nop
aaa
(bad)
es
test
mov
adc
lea
sbb
or
lahf
dec
stos
mov
popa
xor
aad
jg
sub
lahf
sub
sub
push
pop
push
cld
enter
pop
fldenv
fs
push
int3
hlt
and
push
inc
imul
and
test
mov
adc
cld
mov
shr
ins
jno
adc
cmp
jbe
jnp
shr
data16
mov
aaa
hlt
iret
mov
push
cmp
gs
fidiv
and
sub
repnz
mov
(bad)
js
(bad)
push
test
pop
xor
sbb
push
push
adc
cs
xchg
mov
movs
pop
and
cmp
push
fiadd
xor
mov
sub
hlt
dec
(bad)
lock
pop
sub
jg
sti
dec
and
dec
leave
pushf
and
bound
(bad)
xchg
repnz
sbb
dec
fdiv
xor
mov
xchg
or
les
ror
repz
retf
rol
cmps
popf
add
pop
imul
xor
add
pop
inc
les
xor
(bad)
dec
enter
ins
jecxz
lods
sub
(bad)
inc
xor
mov
mul
mov
(bad)
mov
add
(bad)
ins
bound
repz
movs
fcom
pop
icebp
dec
outs
loope
mov
sar
push
sub
fs
mov
push
xor
push
clc
(bad)
dec
icebp
test
adc
dec
and
ins
arpl
cmps
out
imul
xor
or
mov
inc
mov
inc
outs
data16
in
pop
scas
fldenv
jg
stc
jp
mov
shl
loope
nop
out
pop
leave
pop
out
popa
mov
pusha
push
xor
stos
jp
or
push
mov
mov
xchg
push
adc
lock
movs
fbld
fisubr
dec
sub
mov
xchg
push
(bad)
icebp
push
add
sub
(bad)
push
xchg
(bad)
mov
dec
add
jg
(bad)
aas
adc
mov
jmp
leave
xchg
mov
cs
pusha
shr
cmc
lds
bound
idiv
pop
into
or
xor
cmps
jge
xor
mov
mov
pop
shl
pusha
mov
mov
jle
test
ficom
inc
push
stos
adc
out
xlat
popa
mov
sbb
in
scas
and
loope
cmp
inc
mov
pop
in
mov
dec
pop
lock
jl
jo
cli
mov
inc
jle
push
sar
arpl
fild
or
sbb
je
fsubr
fimul
out
(bad)
popa
adc
jmp
aaa
ins
jbe
adc
mov
cmp
sbb
adc
xchg
mov
dec
rcl
jno
adc
xor
aaa
sub
loope
adc
aaa
sub
jl
cmp
in
mov
pop
push
jb
fisttp
push
xor
test
data16
dec
nop
mov
or
add
nop
ins
fistp
mov
mov
xor
mov
pop
das
out
cmp
inc
mov
sbb
adc
arpl
pusha
push
xchg
xor
sub
xchg
dec
xor
dec
mov
xchg
cmp
sub
popf
clc
lahf
and
jne
adc
das
(bad)
pop
sub
cmp
cli
push
mov
cmp
cmp
dec
repz
pop
mov
clc
sbb
mov
cmp
imul
sbb
hlt
xchg
xchg
test
pop
sar
cmps
jns
mov
test
cwde
adc
pusha
ja
and
clc
jns
or
xchg
pop
neg
sbb
into
sahf
(bad)
cmp
inc
pop
xchg
jle
loope
xchg
inc
les
retf
adc
jbe
rcl
jecxz
leave
and
sahf
push
xchg
or
ficom
shl
mov
push
shr
les
and
sbb
adc
jmp
add
pop
shl
push
rcr
gs
mov
jo
jp
(bad)
xor
mov
adc
mov
call
cld
in
or
adc
jo
mov
adc
std
jecxz
call
sbb
int3
inc
or
jnp
sub
xchg
bswap
daa
xchg
push
push
xor
jne
jp
or
dec
add
in
mov
test
adc
add
call
retf
(bad)
scas
(bad)
pop
sub
mov
xor
retf
inc
or
into
jge
js
mov
sub
fmul
scas
jae
adc
xchg
in
loopne
jmp
icebp
mov
out
lods
mov
mov
push
pop
and
cli
pop
mov
pushf
dec
xchg
int
mov
popa
xor
and
cli
mov
js
sbb
aaa
sbb
dec
imul
pop
mov
mov
cmp
push
push
jmp
addr16
(bad)
dec
jns
nop
js
aas
outs
xchg
ret
fsub
jl
dec
inc
icebp
aad
push
mov
das
cmps
inc
je
xlat
(bad)
(bad)
add
push
loop
loopne
cmc
pop
add
adc
sbb
mov
dec
xchg
xchg
cdq
dec
int
sub
loopne
lds
jnp
and
fisubr
(bad)
and
xor
inc
std
outs
inc
popf
mov
jno
fistp
loopne
xor
xchg
in
int
popf
inc
or
xchg
sbb
loop
jb
pop
gs
into
gs
rcl
add
mov
ror
loop
das
fild
dec
je
jne
cs
dec
mov
push
ds
iret
inc
add
lock
dec
push
cld
fistp
and
xlat
packsswb
out
outs
es
pop
jmp
cmps
cmp
mov
inc
imul
sbb
jmp
retf
dec
pop
cmps
sub
repnz
cmp
les
sti
imul
(bad)
fiadd
mov
shl
retf
ret
aad
sub
ins
fidivr
inc
xchg
jg
sub
out
data16
xchg
sub
add
and
or
repz
pop
ds
lock
into
xor
sti
cdq
xchg
xor
aam
fcom
hlt
ret
push
sub
mov
sbb
rcr
dec
(bad)
xchg
lods
div
ret
mov
ins
je
nop
loope
sbb
popa
inc
std
inc
in
xchg
es
inc
cmp
jns
in
in
xor
xchg
push
jns
xor
ror
(bad)
sbb
inc
pusha
popa
femms
dec
jo
repz
pop
daa
dec
push
pop
loop
add
mov
and
xor
xor
cmp
jnp
pop
stos
mov
add
xchg
push
je
cmc
loop
mov
push
int
lds
scas
or
mov
dec
les
dec
lods
stc
and
jbe
add
cmp
(bad)
lahf
sbb
mov
lods
dec
adc
out
je
push
not
push
mov
fsub
jp
dec
mov
repz
fcomp
mov
mov
sbb
pop
lock
xchg
jns
mov
inc
mov
dec
push
push
jae
lock
mov
xor
ds
inc
push
nop
dec
xor
sbb
lahf
mov
push
sti
lahf
jae
pop
(bad)
movs
push
cmp
dec
addr16
aaa
add
cmp
test
and
mov
sti
jge
lods
js
into
aam
cdq
call
mov
and
xchg
pop
sub
mov
shl
jno
outs
(bad)
leave
fst
pop
pop
mov
cmps
movs
mov
pop
out
or
pop
push
into
mov
pop
push
sbb
xchg
scas
push
xchg
fld
test
pop
call
and
dec
sub
popa
or
sub
out
cwde
or
dec
loopne
xchg
sub
cmc
add
je
and
sbb
pop
xor
xor
push
ds
div
mov
loop
fcmovbe
fistp
(bad)
and
cmp
xor
mov
gs
xchg
(bad)
daa
cmp
sub
in
mov
push
lea
dec
cmp
shl
je
xchg
add
push
movs
xchg
xor
shl
jns
sbb
stc
and
add
stos
repnz
jl
sub
xchg
test
mov
enter
cmc
outs
arpl
and
jno
shl
sahf
shl
sbb
mov
rcl
push
cmp
mov
leave
sub
shl
stc
xor
and
push
or
jns
and
xacquire
out
repz
rcl
lods
push
ja
or
xor
dec
retf
or
adc
push
(bad)
int3
mov
addr16
(bad)
dec
jo
adc
jle
test
fwait
dec
mov
ds
inc
adc
mov
jmp
push
repz
dec
jmp
push
test
pop
repz
add
xor
adc
xor
mov
cs
not
mov
nop
cwde
mov
lods
push
ja
mov
int3
mov
mov
pop
out
lds
shl
inc
inc
outs
or
mov
mov
idiv
cmp
mov
loopne
sub
sbb
pop
inc
mov
(bad)
es
sub
pop
ret
arpl
cmps
pop
loope
xchg
push
add
iret
add
push
mov
cld
(bad)
into
jns
in
xor
jae
nop
nop
addr16
in
iret
mov
ds
cmc
in
popa
das
adc
fwait
test
mov
stos
mov
ja
adc
adc
inc
lods
cmp
nop
mov
jne
lods
outs
movs
adc
test
fbld
dec
outs
pop
loope
xlat
jge
pop
retf
fdiv
xor
jmp
imul
adc
jo
mov
xchg
lea
ins
scas
jo
enter
inc
dec
inc
out
and
xchg
xchg
mov
outs
add
or
loope
test
data16
xchg
gs
retf
mov
cmps
add
stc
jno
sbb
push
mov
dec
jp
mov
outs
sub
xor
retf
jns
popf
pop
outs
cmps
push
inc
dec
xchg
cmp
and
fucomp
and
push
pop
fcom
pop
jmp
or
sbb
jb
shl
dec
sub
mov
into
push
arpl
mov
cmps
cmp
(bad)
mov
cwde
inc
xchg
add
dec
int3
gs
loop
mov
or
inc
aad
ins
mov
mov
repz
and
jp
cmp
push
push
in
(bad)
pusha
cmp
lea
mov
jne
out
cmp
jmp
hlt
das
les
cmp
aam
inc
fistp
repz
add
mov
mov
fistp
xchg
pop
sub
sbb
iret
dec
sbb
pop
mov
add
mov
fs
jne
dec
cmp
mov
stc
out
mov
test
push
pusha
sub
dec
repnz
in
sbb
inc
push
add
ret
or
add
or
and
xchg
cmps
mov
daa
popa
in
jge
adc
in
jg
jecxz
sbb
jle
clc
pop
cmps
xor
imul
in
popf
clc
cmc
lds
xor
push
xchg
sar
or
sub
push
xchg
imul
add
or
lds
push
or
ret
ss
inc
test
lea
test
inc
inc
into
xor
leave
pusha
arpl
mov
das
or
loopne
fimul
add
sub
ja
cmp
(bad)
jg
inc
xchg
dec
dec
ficom
(bad)
jbe
dec
out
mov
jnp
xor
mov
jg
pop
fsubr
pop
mov
imul
mov
data16
dec
lods
inc
scas
cli
sub
jmp
mov
sub
jnp
push
mov
cli
xchg
pop
mov
shl
fmul
das
repz
or
les
adc
fwait
ds
xchg
shr
push
scas
mov
sub
ret
adc
adc
loope
xchg
jecxz
sub
(bad)
popa
push
nop
mov
mov
jnp
mov
cmp
in
xchg
imul
in
jno
mov
in
mov
in
pushf
outs
clc
jle
or
aam
inc
mov
dec
cmp
and
xor
(bad)
pop
movs
(bad)
int3
pop
mov
sub
adc
mov
(bad)
sbb
enter
stos
xchg
ror
ret
pop
xchg
mov
ret
leave
mov
fwait
xchg
jb
sbb
sub
(bad)
idiv
mov
mov
jmp
jle
jmp
lahf
mov
inc
push
mov
(bad)
xchg
xchg
and
div
push
xor
(bad)
adc
jne
dec
aaa
push
dec
sub
shld
push
out
mov
std
push
mov
and
stos
pop
inc
mov
xchg
stc
ficom
in
retf
(bad)
mov
sahf
inc
sbb
sub
pop
sub
into
stos
fdiv
mov
in
mov
or
rol
gs
(bad)
dec
and
das
pop
rcr
(bad)
xchg
pop
dec
or
scas
sbb
frstor
adc
or
sub
cdq
aaa
icebp
das
cvtdq2ps
fld
pop
repnz
sbb
and
ficomp
lea
mov
mov
mov
push
ins
aaa
push
add
fldenv
jmp
mov
sahf
mov
mov
jno
sub
cmp
out
test
push
movs
cmps
popa
jne
(bad)
ins
jl
inc
scas
xchg
mov
pop
xchg
bnd
xchg
add
cld
inc
mov
lods
aad
xchg
inc
ficomp
fild
in
add
xchg
lock
in
sbb
cdq
cmp
loope
jnp
cmp
xchg
test
xchg
cli
fcom
sub
push
sbb
push
clc
ins
jno
xlat
push
push
mov
push
fistp
add
push
mov
rcr
jecxz
mov
in
inc
xchg
test
xor
and
inc
ror
sub
and
test
out
sbb
icebp
push
aad
xchg
push
push
sub
lahf
imul
sbb
call
aaa
mov
pop
sahf
dec
retf
adc
xchg
shl
div
jnp
les
xchg
in
dec
cld
ret
lea
jmp
xchg
inc
mov
jle
cdq
push
fs
call
jae
adc
xchg
xor
dec
sub
inc
push
bound
imul
or
mov
xor
retf
xor
adc
push
call
call
and
cmp
nop
nop
xchg
(bad)
leave
and
xchg
pop
push
xchg
sahf
add
cdq
in
sub
aam
outs
xor
mov
cmp
inc
xchg
lods
push
pushf
pop
sbb
js
mov
and
js
push
mov
shrd
pop
xlat
addr16
ja
test
rol
mov
jmp
and
push
test
sub
mov
fstp
std
push
push
cmps
in
dec
enter
leave
xchg
test
das
das
add
iret
mov
jb
movs
ds
int3
jmp
push
in
adc
mov
xchg
inc
pusha
shl
sbb
adc
and
add
add
ret
ins
pop
rcl
(bad)
pushf
ja
dec
xor
add
pop
mov
icebp
int
repnz
push
cwde
sub
hlt
(bad)
xchg
sub
sar
pop
dec
mov
adc
inc
mov
cs
mov
mov
sbb
or
movs
inc
cdq
xlat
push
cli
clc
outs
in
ret
pop
sub
hlt
mov
scas
cmp
sahf
cld
cld
jno
sub
xchg
aam
xchg
xchg
fwait
and
mov
mov
mov
cmp
addr16
cmp
xchg
sar
sbb
mov
repz
pop
jp
dec
mov
int
imul
inc
xor
inc
sbb
xchg
loope
cmp
je
dec
call
test
cld
and
cli
enter
dec
add
or
pop
mov
bound
mov
jno
inc
mov
push
(bad)
call
sbb
jle
jg
frstor
dec
mov
and
jmp
cdq
dec
test
mov
add
fild
pop
push
jnp
fwait
jp
mov
inc
sbb
aaa
(bad)
cmps
pop
adc
inc
xchg
add
mov
nop
add
call
adc
bound
mov
int3
dec
ret
cmc
test
sub
lahf
sti
daa
dec
cmp
xchg
inc
push
imul
pop
loopne
sahf
imul
out
xlat
rol
test
stos
push
xchg
mov
imul
retf
xor
sti
jl
xor
dec
shr
cli
push
dec
xor
xchg
xor
pop
fild
push
imul
mov
inc
push
sub
add
js
inc
bound
loop
outs
xchg
scas
add
int
nop
test
jne
xor
pusha
ins
jmp
inc
xchg
sub
(bad)
mov
lea
cld
enter
xchg
mov
sub
int3
test
shr
ins
jmp
mov
movs
mov
cmps
inc
jns
ins
into
arpl
dec
inc
adc
jno
mov
xor
mov
shr
repnz
(bad)
sbb
jbe
clc
jl
adc
movs
add
les
retf
push
pop
sbb
xchg
gs
push
mov
fs
jge
cmp
into
inc
mov
jbe
jg
imul
pop
mov
dec
adc
pop
xchg
pop
mov
in
fmul
(bad)
loope
enter
mov
les
jae
cli
add
pop
call
fstp
cmp
js
push
popf
sti
jle
and
test
idiv
sbb
retf
clc
push
jns
inc
enter
push
mov
fadd
jo
or
mov
dec
das
ins
xchg
sar
and
sbb
and
adc
xor
repz
jae
movs
or
jecxz
or
call
je
push
(bad)
mov
dec
sbb
push
sti
test
arpl
inc
cs
jbe
push
mov
adc
mov
sti
mov
cwde
out
pop
dec
test
dec
in
inc
add
ret
mov
jmp
out
and
sub
lds
mov
inc
mov
call
sbb
jmp
cld
test
div
add
lods
sub
jnp
jb
sub
mov
and
mov
push
not
sbb
push
xor
fistp
xor
jmp
mov
push
cli
pop
enter
xchg
jno
aaa
aam
inc
mov
mov
clc
mov
adc
retf
dec
out
scas
aam
xor
mov
popf
and
popa
fwait
sub
aaa
mov
jecxz
popf
pop
out
push
cmps
push
dec
cmp
push
mov
jge
shr
sbb
xchg
pop
mov
int3
in
inc
ins
xchg
loopne
bound
js
and
data16
aaa
addr16
xlat
xchg
vandnps
and
jge
fs
ret
fld
sbb
sbb
or
fnclex
pop
mov
mov
(bad)
cli
add
fs
cld
add
jmp
inc
mov
xchg
sub
sbb
dec
mov
cmp
jae
push
aas
jecxz
icebp
jp
cmp
retf
pop
xlat
or
or
imul
aam
ja
mov
sub
and
mov
inc
clc
gs
cmp
or
(bad)
out
pop
or
jae
dec
sbb
loop
iret
jecxz
jb
out
adc
and
ret
mov
jbe
add
jecxz
sbb
test
sub
lds
mov
and
cdq
xor
stos
push
pop
xchg
push
sti
or
dec
adc
push
(bad)
in
mov
push
(bad)
sub
fsubr
sub
mov
ds
cld
inc
sbb
push
jns
push
mov
loop
cs
into
add
lock
rol
mov
in
les
and
jmp
loope
fcom
jno
and
add
xor
mov
and
push
add
or
ins
adc
xor
push
pop
mov
fs
sbb
mov
addr16
mov
mov
stos
dec
loop
jmp
outs
jmp
por
mov
inc
cmp
push
mov
lock
std
nop
out
push
pop
and
scas
cld
add
add
pushf
cmp
push
dec
retf
loopne
mov
leave
sbb
nop
push
jp
add
aam
push
out
and
sub
jne
pop
jge
adc
(bad)
jmp
push
push
sbb
imul
sbb
inc
mov
aas
sar
je
jae
lods
xchg
push
sub
xchg
int3
in
xor
shr
xor
popf
cmps
push
mov
mov
sti
sub
sbb
and
jl
xchg
mov
inc
in
ror
popf
mov
jae
or
mov
cmp
lock
mov
into
jecxz
mov
ins
dec
out
cmp
gs
fs
sbb
jno
out
add
mov
shl
into
sub
popa
sbb
leave
adc
and
cld
xor
in
mov
fst
sbb
data16
xchg
dec
inc
jns
xor
mov
(bad)
cmc
dec
not
fcomip
mov
(bad)
mov
sbb
inc
sar
dec
adc
sub
and
sahf
outs
push
pop
cdq
cs
gs
lock
mov
shl
aas
xchg
sbb
ror
mov
fld
xor
shr
cmp
lock
jne
pop
pushf
test
xor
retf
push
jno
ja
(bad)
jge
lds
cmps
stos
xor
out
lock
mov
xchg
aad
jge
sar
fdiv
mov
into
data16
sbb
out
mov
das
xchg
xchg
add
add
cmp
xor
dec
es
pop
push
sti
adc
mov
inc
sub
loopne
out
xchg
movs
push
mov
dec
xchg
pop
add
mov
das
daa
int
cmp
addr16
xchg
mov
dec
add
outs
xchg
sbb
rol
das
int3
pop
das
adc
pop
mov
mov
inc
mov
iret
adc
jo
outs
mov
and
jmp
mov
cld
cdq
mov
clc
xor
arpl
xor
sbb
cmps
fld
and
ret
je
enter
(bad)
pop
retf
dec
ins
and
sub
lea
sub
lock
test
sar
xlat
sub
jecxz
add
rcl
and
fmul
mov
push
inc
int
xchg
imul
into
(bad)
in
ret
jl
add
mov
sti
xacquire
test
sbb
ins
or
movs
mov
cmps
mov
dec
stc
cmp
stc
pusha
test
xchg
repnz
out
fld
mov
scas
clc
dec
jg
mov
rcr
je
shl
push
xor
inc
loopne
sbb
sbb
push
(bad)
push
dec
mov
lods
jae
scas
sub
loop
sub
test
stos
or
sbb
inc
fdiv
leave
fwait
mov
or
rcr
push
test
dec
stos
lea
xor
mov
push
or
popa
movs
lods
xor
xor
test
add
pushf
lock
mov
in
sub
(bad)
push
mov
js
ja
cmp
test
mov
sub
push
mov
mov
xor
mov
stc
aam
stos
ds
jmp
xor
xor
adc
xor
ins
mov
sbb
sbb
or
cdq
ret
xlat
int
mov
mov
jae
sub
clc
push
lahf
retf
cwde
jp
shr
shl
cmps
aaa
ret
adc
mov
push
cmovae
cmp
pop
fneni(8087
adc
test
and
fcom
push
pop
cmp
push
xor
jmp
lods
stos
adc
cld
jecxz
xchg
xor
and
push
xchg
cmps
mov
mov
es
or
mov
inc
or
inc
xor
in
push
out
xchg
inc
xor
ja
sub
push
add
fdivp
push
fld
popa
push
test
test
stos
adc
sbb
mov
outs
mov
cmp
pop
inc
dec
mov
pop
call
les
aaa
sahf
push
(bad)
pop
xchg
aam
mov
shl
dec
push
mov
enter
sti
adc
fcmovne
and
sbb
mov
outs
pop
cmp
mov
pop
repz
sub
(bad)
cmps
in
add
dec
test
out
cmp
ror
mov
xor
bnd
test
mov
(bad)
mov
clc
stos
int3
shr
aad
sub
popa
adc
xchg
ins
subps
cmc
int
cmp
and
push
aam
jbe
pop
daa
cdq
repz
xchg
xor
aaa
movs
pop
cmps
dec
adc
pop
mov
xor
inc
pop
xor
xchg
mov
mov
xchg
pusha
cwde
pop
cmps
(bad)
adc
loop
cmp
add
inc
pop
sbb
pop
pop
or
shl
mov
cmp
fcmovnu
imul
arpl
pushf
and
addr16
mov
ror
mov
enter
mov
inc
mov
jg
(bad)
jns
ins
sub
or
retf
push
xchg
out
arpl
or
mov
cmp
jle
daa
mov
xchg
mov
bound
sbb
fs
inc
je
cmp
push
int3
cmp
and
sbb
sbb
or
lahf
jp
out
or
adc
pop
cmp
loope
add
fs
xor
push
mov
mov
sub
fistp
adc
into
jg
add
xor
jnp
fld
mov
sahf
push
fcomp
das
pop
test
shl
retf
test
xor
(bad)
pusha
shl
xchg
dec
jns
mov
mov
mov
add
inc
enter
lods
int
dec
add
pop
jge
add
ins
les
mov
inc
addr16
dec
or
xor
mov
mov
sub
xor
or
xor
scas
or
popa
out
mov
and
sti
test
fcom
into
dec
push
xor
sahf
dec
add
sbb
lods
push
and
jnp
inc
stc
frstor
mov
loope
dec
dec
imul
mov
dec
stc
movs
mov
dec
and
js
shl
dec
xchg
fcomp
aam
sub
(bad)
pop
jmp
aas
call
mov
jmp
movhps
test
fptan
daa
gs
test
adc
mul
add
(bad)
int3
icebp
sar
xor
xchg
push
icebp
mov
mov
add
mov
push
test
daa
hlt
pop
xlat
sub
aad
dec
mov
cmp
aad
jnp
push
push
add
mov
outs
mov
in
shl
mov
dec
mov
adc
lea
mov
in
ja
(bad)
stc
sub
or
adc
in
pop
in
iret
imul
pusha
xor
pop
sbb
cmp
jno
fisttp
jmp
clc
xor
xor
icebp
ins
sbb
and
mov
and
mov
and
xor
sti
mov
mov
jo
fucomip
out
loopne
shl
pusha
jb
mov
adc
(bad)
or
mov
(bad)
cmp
mov
lds
call
xor
jp
add
inc
xchg
inc
in
cwde
aas
pop
outs
pushf
sbb
inc
mov
ficomp
outs
add
fstp
mov
aas
xor
test
int3
mov
sbb
dec
cmp
pop
sbb
or
ret
or
cmc
add
(bad)
and
add
jmp
aam
test
sbb
jne
fadd
pop
cwde
cmp
sub
push
jg
or
jle
test
push
rcr
adc
ins
cmc
arpl
mov
je
dec
xor
adc
aas
jmp
push
mov
cwde
dec
iret
xchg
xchg
sub
lods
jb
aaa
jecxz
jo
and
sub
mov
dec
sbb
or
mov
rol
sub
and
repnz
dec
xchg
mov
je
lds
cmp
xor
cmps
mov
mov
jmp
adc
icebp
nop
icebp
outs
inc
mov
scas
or
out
xor
adc
adc
ins
dec
or
cmovb
pop
cli
jmp
cmc
cmps
jle
mov
in
cmc
cmp
and
dec
mov
jecxz
rcr
movs
sti
jae
movs
call
pop
adc
(bad)
mov
cmps
loopne
xchg
in
xor
shl
mov
adc
xchg
lods
mov
repnz
cmps
xchg
lods
in
ins
repz
jg
xchg
or
imul
clc
ins
movs
fcmovbe
scas
push
je
ds
pop
mov
aad
or
sti
sub
jne
daa
data16
ficomp
pop
xchg
cwde
jmp
icebp
clc
mov
inc
sub
or
sti
rcr
dec
adc
pop
and
sub
push
imul
(bad)
scas
popa
push
add
xchg
(bad)
xchg
aam
enter
cmp
es
in
inc
mov
aas
std
jg
dec
(bad)
sbb
and
das
out
and
frstor
mov
add
(bad)
pop
xor
(bad)
enter
sub
icebp
xchg
rol
movs
out
addr16
mov
adc
je
std
mov
mov
int
popa
(bad)
and
out
xor
lahf
xor
adc
sub
mov
add
prefetch
out
(bad)
in
jle
sbb
sub
repnz
cmp
mov
cli
pop
xchg
jmp
pop
cmp
xor
out
push
loopne
adc
pop
pop
pop
xlat
and
call
cmp
mov
sub
cmp
jne
es
sub
or
xchg
adc
repz
or
out
scas
or
xor
or
sub
pop
(bad)
jne
sub
xchg
jl
push
sbb
in
sbb
sbb
int3
movs
pop
lods
ins
add
sub
inc
adc
daa
fadd
cmps
mov
stc
jbe
movs
mov
mov
mov
inc
sbb
cs
into
outs
ss
jbe
mov
sbb
or
in
pushf
iret
pop
and
mov
jns
scas
repz
sub
jl
aam
add
dec
sbb
fs
jecxz
xchg
jl
jmp
scas
or
repz
xchg
jbe
xchg
bound
rcr
dec
sbb
add
int3
jmp
call
(bad)
(bad)
mov
pop
jl
lahf
pop
push
xchg
mov
cli
dec
out
jecxz
sub
pop
cmp
(bad)
cmp
adc
push
dec
jno
stc
mov
imul
repz
xchg
lahf
mov
mov
adc
arpl
out
push
xchg
fldenv
std
xor
imul
xlat
mov
cmp
mov
fisub
xor
sub
and
mov
xchg
loop
adc
out
(bad)
loope
out
inc
sahf
pop
out
popa
out
xor
cmp
addr16
std
stos
adc
test
lock
jnp
test
inc
outs
cli
test
or
dec
mov
add
cld
mov
cmp
push
pop
mov
xor
fucomip
jae
lds
in
dec
inc
push
push
repz
and
ror
inc
add
bound
fld
into
adc
dec
movs
adc
cmp
pop
gs
jno
push
out
or
adc
call
mov
nop
pop
or
xchg
dec
aas
sbb
ds
repnz
pop
add
(bad)
xor
pop
sahf
lea
lea
(bad)
jge
test
xlat
mov
add
ss
loop
jae
push
test
mov
mov
pop
enter
ss
bound
stc
add
int
add
inc
mov
es
jmp
cwde
mov
mov
mov
jne
or
retf
push
nop
jmp
shl
movs
push
(bad)
aaa
loopne
xlat
js
push
retf
dec
add
pop
dec
iret
add
popf
loop
(bad)
fild
push
aad
cmp
ja
fwait
sub
jmp
mov
mov
out
aam
into
ja
adc
(bad)
xlat
cmc
dec
jae
outs
and
jg
adc
mov
mov
pop
xor
fsubr
cwde
sti
adc
mov
popa
or
(bad)
shl
ret
jb
inc
jecxz
inc
jmp
push
sub
mov
push
leave
xor
sub
adc
mov
mov
sbb
mov
push
pop
lahf
fmul
xchg
sub
xchg
push
stc
add
xchg
dec
push
scas
xchg
popa
jg
pusha
or
movs
int
daa
jae
repz
pop
sbb
pop
repz
or
pop
pop
jo
xchg
leave
push
sbb
xchg
cvttps2pi
cmps
pop
cs
sub
dec
xor
clc
adc
push
imul
mov
loop
cmp
popf
loopne
mov
int3
gs
add
mov
out
icebp
add
add
dec
dec
nop
jg
aaa
out
vcvtsi2sd
call
ins
mov
ds
mov
mov
ret
stos
dec
enter
mov
or
xor
pop
mov
movs
arpl
jmp
dec
fnstcw
adc
clc
jmp
sbb
inc
adc
xor
adc
fwait
retf
enter
mov
pop
and
sahf
push
pop
popf
retf
shl
add
ins
in
rcl
mov
push
jmp
pop
cmp
sbb
movs
mov
out
sbb
loope
aad
cld
push
hlt
int3
push
clc
mov
daa
fdiv
xchg
dec
and
sub
mov
adc
ss
mov
jae
xor
xor
int3
fdiv
cli
loope
into
xor
retf
mov
das
dec
push
mov
xlat
cli
sub
jle
push
sar
mov
cdq
out
jl
sub
mov
imul
dec
cmps
xor
(bad)
cdq
lods
dec
cmps
ss
not
shr
ror
add
mov
jb
je
sub
inc
mov
fwait
sub
lahf
int
daa
xchg
es
mov
add
mov
and
sub
int3
out
int
or
jmp
xchg
jecxz
mov
xor
cld
or
int3
inc
xchg
pop
mov
and
clc
outs
inc
popa
push
xor
mov
rcl
fadd
and
inc
xchg
hlt
test
dec
inc
fs
push
inc
pop
dec
cdq
add
es
test
cmps
imul
test
daa
lahf
mov
aas
xchg
arpl
in
xor
fdivr
push
dec
pmaxsw
jmp
push
neg
movs
stc
xor
pop
xchg
jo
out
mov
in
retf
add
mov
out
rcr
xor
js
mov
mov
and
movs
pop
jecxz
fcmove
sbb
push
cmp
jb
scas
push
adc
xchg
adc
in
xchg
mov
dec
mov
and
cmp
std
out
jl
mov
mov
stos
push
aas
or
stc
pop
lock
fcomp
push
je
pusha
in
stc
xor
repnz
sbb
imul
cwde
jb
frstor
adc
imul
jmp
in
inc
sahf
xchg
popf
enter
into
retf
jmp
lods
push
mov
and
push
mov
jae
lock
cdq
je
cli
pop
xchg
daa
jnp
neg
cmps
push
push
imul
inc
je
test
stos
mov
mov
popf
add
hlt
jg
xor
mov
pop
hlt
sbb
movs
and
mov
add
ret
xchg
dec
jmp
cwde
cmp
or
data16
sbb
das
mov
pop
jo
es
in
or
pop
test
xor
fnclex
xchg
aad
jnp
xor
fiadd
int
in
bnd
and
gs
adc
dec
fild
test
mov
imul
jg
sub
dec
push
jmp
cmp
cmp
pop
add
sti
mov
push
xchg
and
(bad)
xchg
adc
sbb
ins
mov
mov
pop
ja
clc
ret
xor
outs
out
cmp
aad
mov
mov
movs
(bad)
retf
jmp
dec
adc
ret
or
hlt
test
ins
pop
movs
je
mov
adc
repnz
xor
into
outs
add
sbb
add
mov
adc
test
pushf
sub
add
sub
inc
pop
aad
(bad)
cmp
stos
pop
popa
fxch
push
call
fwait
mov
sbb
(bad)
add
popa
lahf
cmp
lock
enter
(bad)
sbb
sub
mov
jl
je
imul
xor
mov
icebp
inc
sub
pop
push
lea
or
imul
out
dec
and
pmuludq
lods
test
and
lock
stos
adc
jne
sub
mov
push
cmp
cdq
imul
test
js
xchg
mov
call
rol
call
mov
xchg
dec
and
iret
out
movs
inc
xor
mov
or
jno
aam
add
cmp
daa
mov
xchg
mov
and
cs
mov
cmps
sub
dec
add
pop
sbb
sub
dec
mov
jo
aam
(bad)
push
mov
jmp
scas
push
pop
scas
fs
jbe
les
retf
mov
adc
and
cwde
sahf
leave
xchg
cmps
test
ror
sub
sbb
movs
and
cdq
aam
mov
cmp
fst
stos
pop
add
xor
push
mov
jge
test
mov
lods
or
in
xchg
ss
and
and
pop
aas
push
add
es
xchg
or
inc
pop
and
repz
out
mov
lock
int3
cmp
pop
bound
lods
in
mov
push
popf
xor
or
stos
mov
pop
adc
inc
dec
pop
nop
mov
gs
mov
mov
sbb
rcl
enter
mov
or
mov
movs
or
jno
push
jnp
cmp
cmps
xchg
cmp
scas
fwait
mov
(bad)
nop
call
je
stc
rcl
sbb
aam
mov
lahf
cmps
mov
add
dec
pusha
ins
push
or
out
cli
mov
retf
loope
or
xor
pop
push
aas
jecxz
and
or
sub
mov
call
lods
push
shr
icebp
(bad)
inc
jnp
inc
out
test
arpl
jmp
call
(bad)
imul
cmps
adc
jno
cmc
push
dec
fsub
sahf
mov
dec
ja
sub
movs
inc
int3
dec
clc
and
vandnps
xchg
aam
rcl
or
mov
test
jl
pushf
mov
mov
push
mov
pop
xlat
test
mov
xchg
dec
and
(bad)
sar
jecxz
cdq
inc
dec
retf
xchg
sub
pushf
xor
neg
mov
mov
and
jo
int
scas
adc
xchg
and
mov
dec
jae
loop
mov
jno
imul
(bad)
rcr
retf
mov
shl
inc
out
inc
fisttp
mov
lds
js
jp
fidiv
lock
mov
inc
sbb
shl
cmp
lods
sub
inc
ins
pop
cmp
add
adc
adc
pop
dec
std
out
jmp
xchg
call
jb
mov
sub
scas
add
outs
scas
stc
bound
cmp
xchg
sub
imul
lahf
sbb
pop
fdivr
push
adc
mov
mov
ss
adc
xor
clc
jae
and
cmps
mov
mov
push
pusha
shl
adc
add
lods
ret
in
pop
std
push
shl
xchg
in
ret
retf
fcom
inc
and
adc
sbb
adc
sub
push
push
rol
pop
adc
sti
xor
aaa
les
out
int3
cmc
mov
pushf
test
xchg
adc
sub
jbe
add
and
pop
dec
sub
jnp
aas
call
push
dec
add
shr
inc
fild
jne
cmp
fidiv
push
jl
mov
and
mov
test
dec
jmp
mov
sti
(bad)
cmp
jecxz
fdiv
test
adc
jo
xchg
out
pusha
(bad)
mov
sub
jge
sub
push
cld
xchg
pop
int3
aas
jge
das
sub
adc
xor
xlat
mov
jle
cwde
repz
test
mov
adc
dec
xchg
neg
mov
sub
mov
or
dec
dec
imul
mov
push
pop
sub
test
mov
push
inc
dec
fcomp
popa
and
idiv
imul
inc
push
mov
movs
pushw
fldenv
pop
icebp
or
icebp
mov
xchg
(bad)
cld
xchg
cmp
add
mov
lds
cmp
sub
xchg
imul
in
ret
jae
xchg
cli
(bad)
pop
sbb
data16
shl
xor
dec
push
cmp
out
(bad)
mov
fidiv
out
push
sti
lahf
movs
(bad)
mov
push
gs
push
pop
(bad)
mov
xor
push
adc
cmp
ds
pop
inc
dec
rep
call
and
fwait
pop
mov
in
rcr
int3
loope
gs
lahf
or
xchg
test
xor
pop
(bad)
mov
mov
sbb
aad
cmp
lea
pop
or
les
add
sti
leave
xor
xor
cmp
cmc
sub
dec
out
mov
ins
or
pop
xchg
data16
pushf
and
jne
xchg
cmp
lea
out
jge
pop
fwait
mov
std
jle
mov
mov
sbb
cmc
pop
lods
int
js
enter
div
mov
and
std
lods
cmp
xchg
pop
and
adc
retf
stc
xor
inc
rcr
ja
mov
aam
dec
sbb
movs
cmp
inc
sbb
pop
xchg
cdq
arpl
pop
pushf
clc
jo
loop
test
dec
mov
mov
iret
in
push
push
cmp
dec
lahf
xchg
mov
mov
fwait
pop
xor
cmp
leave
xchg
xor
sbb
out
ss
jge
aaa
test
das
in
dec
xchg
adc
add
into
stos
cmp
adc
mov
sti
cmps
(bad)
loope
sub
fild
ds
add
in
ret
sub
push
nop
fst
int3
mov
lods
jmp
in
mov
push
shl
push
adc
cmps
cmp
addr16
jno
(bad)
mov
ja
pop
or
mov
adc
in
jp
imul
sahf
mov
adc
std
push
ror
addr16
outs
addr16
ret
sbb
cmp
ss
or
(bad)
jne
cmps
std
xor
inc
xchg
stc
cmc
or
scas
nop
dec
sbb
addr16
sub
or
nop
pop
punpckhbw
mov
enter
dec
not
mov
retf
jno
or
aaa
push
xchg
lods
cmp
jne
pop
fabs
jns
sub
and
cmp
int3
aas
int3
jg
repz
out
fwait
pop
ins
jbe
and
cmp
dec
jmp
jmp
mov
mov
pushf
sbb
popf
imul
popf
call
mov
jmp
pop
outs
ror
popf
adc
mov
cmps
cmp
aaa
cmp
popf
fisub
mov
mov
loop
add
cli
inc
jb
mov
stos
loope
mov
int
gs
ja
push
mov
adc
stos
sar
sbb
loopne
shl
fistp
hlt
push
adc
ror
popa
jmp
cmp
mov
and
cmp
aas
out
pop
je
cmp
add
call
mov
jmp
xor
push
dec
das
outs
mov
jp
xor
cmp
xchg
fwait
mov
cmps
in
jge
inc
adc
mov
mov
fcmovnbe
adc
lock
fmul
sub
inc
mov
pop
movsx
ss
ror
test
mov
arpl
mov
mov
xchg
pop
mov
sti
add
mov
add
iret
push
or
jle
and
cmp
or
cmp
mov
add
adc
sbb
ficom
mov
or
imul
xor
lods
mov
inc
mov
ds
ins
fistp
add
or
cmp
inc
mov
mov
dec
cli
xchg
xlat
jo
ins
aaa
(bad)
xor
fsub
mov
or
gs
sub
les
mov
or
sub
adc
std
pop
inc
(bad)
mov
and
jl
out
in
fld
lea
outs
jbe
xor
int
stos
jae
sbb
push
mov
or
xor
add
ret
les
cwde
jb
enter
scas
add
stos
stc
test
adc
icebp
rol
and
jg
mov
ficom
cs
pop
or
jmp
sahf
xchg
mov
outs
aad
xchg
push
nop
mov
pop
int3
adc
xor
fist
xchg
xchg
clc
jecxz
fistp
jns
cmc
push
cdq
or
push
imul
enter
push
gs
stos
icebp
jecxz
sbb
push
cmp
in
and
ins
imul
int3
or
sbb
rol
cmp
or
xlat
fld
loop
ds
mov
test
ins
(bad)
mov
xchg
fs
pop
daa
cmp
out
mov
push
xor
lds
jbe
adc
inc
(bad)
mov
das
shr
push
and
sbb
aam
inc
aad
xchg
xlat
xlat
jbe
jns
and
xchg
push
(bad)
push
adc
or
aad
and
aam
bound
int
xor
xlat
inc
leave
addr16
lea
mov
hlt
pop
les
movs
pop
out
out
cwde
ins
das
pop
(bad)
and
loop
push
or
fabs
xor
and
mov
or
sub
ja
add
repz
mov
addr16
sub
je
push
out
adc
int
pop
clc
mov
pop
mov
out
xchg
out
sbb
and
aaa
popa
mov
inc
out
out
pop
loop
mov
fidiv
mov
pop
out
not
js
xchg
xchg
fsub
push
mov
das
ja
pop
aam
outs
jmp
sbb
and
and
arpl
scas
movs
push
in
jge
sub
pop
dec
sahf
push
adc
daa
test
push
rol
popa
ror
jb
(bad)
or
test
push
movs
sub
out
mov
pop
cs
pop
and
and
outs
cli
(bad)
repnz
stos
cmp
in
enter
add
sbb
push
fbstp
inc
mov
push
scas
or
jp
lods
mov
push
and
sar
mov
sub
inc
pop
inc
outs
in
ret
xchg
ds
cmps
lahf
jbe
sbb
jae
jle
adc
icebp
jo
dec
in
push
aaa
jle
into
inc
in
lahf
lahf
add
mov
(bad)
fldenv
mov
loop
mov
adc
push
pop
jg
sub
xor
xor
or
mov
test
cmc
push
cmps
imul
test
fidiv
out
imul
enter
xor
ins
stc
das
xchg
in
daa
retf
xchg
pop
rol
push
iret
inc
outs
push
jo
adc
outs
adc
imul
push
adc
dec
and
fistp
pusha
xchg
out
dec
aas
movs
imul
push
int
fisubr
mov
cmp
in
jmp
or
(bad)
fs
dec
inc
add
inc
jno
mov
arpl
jbe
add
scas
icebp
jo
leave
jecxz
push
push
jp
cmps
ret
pushf
pusha
popf
jg
es
jl
cmp
xchg
or
jne
or
je
mov
push
cdq
in
add
mov
push
fisttp
out
mov
jb
or
adc
push
sub
pop
push
jge
xlat
xor
adc
cdq
lds
loop
mov
push
daa
das
mov
cmp
and
dec
retf
cmp
mov
pop
ss
scas
js
aas
nop
xor
push
mov
sub
jbe
cwde
sbb
repz
outs
mov
std
pop
xchg
out
xor
mov
add
and
dec
sahf
mov
or
sbb
mov
jns
cwde
xchg
adc
mov
xchg
(bad)
sbb
ja
inc
mov
push
jne
(bad)
dec
dec
push
jl
out
inc
push
inc
push
or
xchg
add
sub
dec
pop
sahf
fstp
adc
pop
fs
pop
jecxz
adc
fst
shl
pop
fwait
cmp
cli
loopne
push
fstp
or
in
btc
jp
daa
dec
fst
sbb
add
aaa
sub
add
jg
mov
pop
adc
shr
scas
xchg
mov
iret
adc
push
xchg
pop
les
cmp
pop
add
mov
cmc
adc
mov
inc
in
adc
sbb
jecxz
cwde
loop
inc
adc
into
sbb
dec
daa
pop
(bad)
inc
(bad)
repz
add
imul
jl
mov
inc
push
lahf
push
rcl
call
pop
or
cmc
cld
lahf
cmp
int3
jge
daa
pop
mov
xor
mov
dec
dec
push
stos
mov
add
add
inc
std
or
int
dec
pop
cmp
and
mov
mov
leave
cmp
push
jmp
scas
test
or
fcomp
outs
sbb
mov
cmp
or
es
sbb
pop
mov
push
aam
ret
(bad)
sub
adc
push
pusha
jae
add
lock
adc
rol
mov
jmp
inc
stos
jg
repz
sub
daa
push
mov
js
fsubr
or
cmps
and
cs
nop
shr
lock
popa
sub
or
js
jae
adc
xchg
sbb
jb
clc
inc
push
jle
fbld
mov
lea
and
or
(bad)
cmp
test
xor
outs
(bad)
xlat
mov
stc
adc
inc
loop
je
mov
loop
(bad)
lds
sub
xor
popf
mov
(bad)
retf
das
pop
sbb
jno
xor
mov
pop
(bad)
wbinvd
or
jge
xor
push
cdq
xchg
dec
adc
call
ss
push
pop
lock
push
lods
test
push
xlat
and
(bad)
xchg
sbb
int
mov
adc
or
ins
mov
adc
adc
mov
stos
aam
xchg
jmp
(bad)
lea
daa
inc
outs
or
lea
xchg
adc
bound
popf
in
and
sbb
xchg
stos
movs
push
nop
ss
xor
cmp
lds
jecxz
(bad)
and
je
and
retf
ins
fist
add
jb
push
das
push
fcom
jno
movs
movs
jae
int
mov
dec
(bad)
cmp
push
or
cli
aad
pusha
fcmovnu
mov
and
fimul
pop
cmc
push
sbb
jno
inc
stos
adc
aad
cmp
xor
push
xor
sbb
mov
int
cmp
stc
cmp
pop
movs
rol
std
or
sar
ins
lds
imul
and
out
add
push
mov
out
xor
scas
shl
jne
mov
push
sbb
xor
xchg
push
xchg
in
mov
arpl
(bad)
scas
xchg
js
sbb
cwde
mov
jmp
call
jo
ins
inc
sti
mov
xor
dec
mov
mov
push
retf
in
fidiv
jle
and
ins
icebp
fld
dec
or
sahf
outs
ja
arpl
jbe
mov
xor
xchg
and
ficomp
in
mov
push
leave
repz
adc
outs
dec
pop
add
jmp
sar
inc
std
mov
xlat
xchg
out
mov
stos
adc
inc
jmp
xor
fcomi
inc
das
adc
stos
push
mov
and
pop
jne
or
jg
jle
das
sbb
mov
cvtpi2ps
sbb
(bad)
lods
stc
int
or
iret
jnp
pop
xor
in
cld
(bad)
pop
hlt
jl
mov
and
out
adc
fild
movs
add
ja
jmp
data16
cmps
clc
or
cmp
jmp
ds
xor
outs
push
adc
xchg
push
sqrtps
fwait
inc
imul
push
cmp
jae
out
sti
jl
icebp
mov
push
aad
sub
inc
xor
stc
mul
jnp
add
mov
(bad)
xchg
xchg
dec
adc
les
in
xchg
sub
fiadd
clc
push
push
dec
pushf
call
sub
cld
retf
adc
pushw
pusha
outs
pop
mov
add
pop
test
js
dec
and
jl
jns
cwde
dec
adc
ins
add
std
cmc
push
rcl
(bad)
movs
std
repz
jecxz
pop
sbb
cli
int
movs
dec
in
dec
jns
sbb
xchg
mov
dec
jecxz
int3
fwait
jbe
or
in
adc
xchg
jp
dec
scas
xchg
dec
dec
push
(bad)
ret
mov
add
jp
inc
sbb
jae
pop
shl
aas
ret
or
aam
mov
cli
aaa
inc
mov
aas
sub
iret
sar
mov
pushf
add
leave
sub
fwait
ins
mov
cdq
xchg
cdq
jb
pop
cmp
xor
imul
mov
das
scas
lods
std
xchg
sar
adc
adc
cli
pop
dec
movs
ret
mov
cld
mov
pop
jge
test
test
or
inc
mov
adc
dec
ror
xchg
ret
push
xor
or
lods
jg
and
enter
cmp
sub
ror
mov
ins
movs
add
js
pop
rcl
or
addr16
xor
sub
pop
jle
ficomp
mov
inc
mov
push
or
or
jge
ret
sub
nop
nop
rcl
cmp
push
inc
test
mov
daa
pop
push
mov
fdiv
sbb
jnp
pop
push
out
pushf
js
mov
(bad)
daa
jne
jecxz
mov
dec
nop
in
leave
inc
and
jecxz
retf
lahf
inc
cs
wrmsr
adc
popf
dec
ins
test
cmp
cmc
in
ja
cwde
test
loop
cmps
test
inc
jbe
mov
mov
mov
cmp
mov
sahf
inc
adc
cmps
in
stc
pushf
sub
imul
sub
lock
xor
adc
lahf
pop
pop
or
jns
xchg
add
pop
outs
xchg
popa
cwde
sub
icebp
movs
or
mov
in
dec
cld
sbb
popa
sbb
iret
dec
std
xchg
pshufw
mov
jne
or
adc
mov
push
or
cmp
sbb
(bad)
rcr
xchg
retf
loopne
gs
mov
fstp
idiv
pop
fucomip
jno
les
jge
jge
ficom
mul
aad
sub
jl
or
xor
mov
sub
cmp
pop
and
stos
mov
test
jl
or
jg
add
or
fst
clc
sub
loop
cmp
dec
mov
jo
sub
push
dec
cmp
cld
cmp
jecxz
imul
dec
mov
or
pop
dec
xchg
cmp
add
inc
retf
mov
sbb
cmovne
sbb
mov
and
rol
sahf
arpl
int3
int
jecxz
popa
pop
xlat
in
cmp
mov
add
mov
inc
bound
cwde
(bad)
jns
test
fdivr
or
fistp
sbb
retf
nop
lds
add
ins
test
fwait
or
int3
push
mov
das
and
ret
test
jg
or
or
sahf
loop
aas
repnz
(bad)
cdq
pop
dec
mov
mov
movs
pop
xor
ss
and
xchg
xchg
inc
dec
dec
fldln2
out
lea
jle
inc
ret
adc
xor
pop
loope
mov
jg
jnp
loop
xchg
je
cld
ss
arpl
jl
in
mov
sub
mov
and
retf
outs
test
cmp
iret
dec
call
dec
add
std
push
pushf
xor
jae
mov
pop
push
cmps
icebp
inc
xlat
ficomp
sbb
lods
or
es
out
ret
cmp
loope
sahf
addr16
lahf
ret
and
bound
cs
push
add
pop
scas
or
std
push
aas
add
and
ja
aad
fwait
aaa
je
addr16
arpl
add
(bad)
pop
call
add
or
cmps
inc
xchg
pop
neg
xor
pop
jnp
cmp
xlat
mov
jno
jle
out
(bad)
clc
sub
js
(bad)
repz
shl
rol
dec
inc
cmps
dec
push
cmp
fwait
mov
push
dec
iret
add
aad
fiadd
imul
addr16
mov
ins
scas
std
adc
add
jecxz
out
or
fdiv
xor
xlat
data16
je
xchg
lahf
sahf
dec
pop
sbb
addr16
scas
sbb
add
in
mov
test
test
jnp
mov
push
stc
adc
inc
jg
xchg
sub
add
sub
imul
mov
or
cwde
mov
mov
dec
push
setle
sti
sbb
jns
mov
icebp
push
call
inc
push
in
ror
cwde
mov
push
xchg
and
or
dec
dec
imul
dec
mov
inc
jecxz
jmp
(bad)
jmp
mov
sub
movs
mov
mov
cld
sub
push
and
pop
outs
js
mov
jmp
into
and
add
adc
iret
mov
xor
aam
jmp
fbstp
out
div
fld
out
cmp
mov
ja
shr
in
dec
lock
int
or
fdivr
sbb
add
xor
xor
aas
dec
dec
retf
push
data16
mov
scas
or
dec
push
(bad)
stos
sub
mov
and
ins
push
mov
adc
push
adc
out
jno
nop
jecxz
aas
xor
sbb
xor
call
lea
les
mov
sar
fadd
push
pop
push
ins
inc
sub
ficom
xor
mov
out
addr16
jmp
scas
jo
add
inc
fadd
mov
jg
jecxz
add
or
push
sub
pop
sub
sub
mov
scas
out
xor
mov
xchg
int
arpl
aas
ds
cmc
loop
in
cld
popf
dec
mov
aas
nop
retf
jge
sbb
pop
mov
in
and
imul
jb
in
or
fiadd
add
jmp
cs
sub
js
sti
jl
mov
popa
xor
dec
sbb
out
in
sbb
xchg
imul
enter
mov
xchg
idiv
pop
push
repnz
sub
dec
mov
lock
dec
jns
xchg
dec
push
sbb
mov
push
out
jmp
and
in
lea
cwde
sub
mov
iret
fisub
xor
addr16
xchg
data16
jb
scas
jns
cmp
std
inc
lahf
lods
leave
stc
jmp
sub
ret
lock
adc
xchg
lock
retf
jl
(bad)
dec
mov
ror
repz
std
mov
push
fstp
fimul
lds
push
push
mov
sbb
jae
aas
jmp
les
mov
clc
dec
outs
sti
lea
xor
sub
mov
add
push
stos
or
gs
jbe
in
aad
loope
clc
push
mov
xchg
add
xor
or
loop
sub
adc
xlat
sbb
jnp
add
add
push
cmp
and
sahf
fild
out
cmp
bound
cmp
mov
sar
cmp
loope
push
nop
movs
repnz
out
mov
dec
mov
xor
repnz
pushf
iret
inc
mov
jmp
lods
jl
push
adc
loop
adc
adc
add
or
jmp
sub
xor
hlt
mov
rcl
addr16
ret
pop
jmp
inc
inc
jb
mov
loop
mov
and
xchg
(bad)
cmp
mov
popf
loop
fisubr
and
ffreep
adc
ret
cmp
test
inc
add
fwait
xlat
mov
push
call
adc
shl
xchg
ss
(bad)
iret
cmp
and
imul
(bad)
cmc
in
ret
xor
repz
ss
dec
scas
enter
in
cwde
mov
aas
or
inc
shr
clc
mov
clc
and
xor
mov
test
sub
cmp
dec
cmp
and
inc
outs
and
pop
cmps
sbb
inc
leave
and
sbb
std
dec
movs
add
sbb
adc
mov
mov
fcmovbe
inc
lds
dec
pop
icebp
repz
sub
lds
jmp
imul
rol
or
mov
xlat
cmp
(bad)
mov
lock
ret
mov
sbb
push
repz
call
jle
adc
cli
push
dec
and
dec
push
sub
mov
jb
js
in
fwait
js
mov
cmp
daa
mov
movs
test
sbb
stos
test
jnp
sbb
mov
sahf
into
loopne
xchg
pop
aaa
xchg
push
int3
xor
jnp
mov
dec
mov
push
cs
mov
add
adc
xchg
fs
sti
adc
inc
inc
pop
into
js
add
frstor
sbb
daa
(bad)
enter
leave
xchg
and
pop
fsubp
cmp
shr
scas
(bad)
fild
cli
xor
or
lea
in
adc
push
sbb
mov
call
or
pusha
pop
mov
sar
cld
(bad)
mov
jb
jp
dec
mov
test
aas
jmp
push
push
mov
test
mov
sbb
pop
sbb
mov
clc
or
inc
das
lock
stos
repz
call
pop
ret
call
add
test
xor
inc
outs
rcr
stc
popa
(bad)
fidivr
test
push
or
bound
data16
fs
pop
pop
fwait
adc
aas
cmp
push
pop
retf
xchg
inc
idiv
xchg
fwait
retf
adc
pop
popf
shr
aas
pop
out
daa
jo
clc
jae
imul
jns
fisubr
(bad)
cld
push
dec
mov
popf
sar
jmp
adc
shl
xchg
cli
dec
sbb
bound
mov
pushf
dec
xchg
cdq
inc
test
dec
and
pop
sub
das
xor
mov
jnp
pusha
shl
aad
ret
sub
cmp
imul
jmp
jns
jmp
enter
mul
(bad)
sti
cmp
push
jne
aad
movs
xchg
jb
pop
mov
frstor
mov
dec
jl
pop
shl
stc
int3
aaa
test
repz
xor
fiadd
or
aaa
mov
(bad)
inc
(bad)
fdiv
cmc
enter
pop
outs
in
repnz
or
inc
in
retf
and
in
inc
dec
sahf
add
dec
jnp
cmc
pop
jbe
mov
and
cwde
rcr
out
les
xor
push
scas
add
sbb
lea
leave
loopne
out
push
sub
cmp
push
movs
fidivr
enter
mov
dec
pop
pop
cwde
mov
outs
push
out
xchg
sub
leave
add
cmp
xchg
jae
jne
dec
inc
aas
les
leave
data16
(bad)
sbb
mov
(bad)
push
lahf
ds
pop
pop
cmps
xchg
dec
mov
push
lods
ret
mov
cmp
xchg
shr
les
call
sub
enter
setb
adc
dec
jle
dec
test
xlat
mov
mov
test
fisubr
shr
ffreep
lds
clc
mov
out
pop
cdq
inc
push
lahf
add
push
add
jge
sub
fst
push
mov
movs
inc
jmp
out
push
sub
cmp
and
cli
retf
cmp
ror
xchg
bound
dec
rcr
icebp
cli
scas
adc
mov
mov
push
mov
sub
popa
dec
mov
loop
aam
fld
mov
jecxz
cli
add
xlat
lahf
push
in
lea
pop
xor
retf
mov
mov
std
lds
push
aam
test
lock
mov
data16
fxch
xor
fwait
and
lock
xchg
sub
add
xchg
outs
jns
rcr
scas
sub
add
dec
ror
vpshuflw
imul
push
adc
in
xchg
sub
fst
enter
rcr
mov
mov
mov
cmp
add
mov
test
pop
aaa
enter
je
cmp
and
sub
mov
cmc
les
jae
sti
sahf
(bad)
jne
clc
inc
lock
pop
cmp
lahf
cld
cmps
int3
cdq
mov
inc
jp
xchg
imul
mov
inc
lea
push
repz
arpl
les
enter
push
pop
pop
mov
sbb
mov
sub
jno
mov
and
dec
(bad)
shr
mov
arpl
loop
dec
sbb
push
jmp
dec
jno
bound
adc
xchg
sub
dec
sbb
sub
into
sbb
xchg
lods
push
cmp
cmps
fldcw
mov
loopne
cmp
pop
test
xchg
or
adc
inc
popf
popa
retf
outs
test
and
aam
push
xor
or
(bad)
bound
mov
stc
jp
add
or
dec
mov
idiv
imul
in
mov
test
cdq
and
out
pop
sbb
inc
pop
cwde
aad
xchg
mov
sub
shl
test
push
jmp
mov
and
iret
neg
adc
adc
dec
adc
jnp
aad
repz
outs
jno
enter
push
into
dec
inc
sbb
push
push
sub
pushf
mov
mov
jae
sbb
pop
and
mov
add
mov
and
add
xor
dec
sbb
ja
sub
jmp
jbe
mov
fadd
inc
mov
xor
dec
pop
test
sub
(bad)
shl
sar
ficomp
out
repz
aam
xchg
(bad)
dec
out
mov
je
ret
add
inc
in
js
cmps
mov
popa
mov
mov
loop
mov
fsubr
out
lahf
push
push
pop
test
xchg
je
dec
jmp
cmps
push
or
cmp
mov
xchg
pop
mov
fwait
mov
pop
int
test
and
ret
dec
xor
clc
pop
sub
jmp
push
add
test
adc
inc
push
cwde
jge
ror
shr
cmp
pusha
jne
xor
cmp
push
mov
push
popa
ins
xor
hlt
outs
dec
adc
mov
popa
ins
or
hlt
xor
jns
(bad)
push
clc
xor
into
hlt
std
cli
call
dec
stos
jp
int
test
lahf
push
outs
or
scas
xchg
cwde
into
loope
outs
jmp
fsubr
add
in
clc
cmp
xor
mov
jmp
cmps
push
cmp
jns
push
cmp
xchg
and
jne
(bad)
cmp
xchg
inc
pop
jecxz
pop
dec
sbb
dec
stc
retf
mov
popa
dec
pop
mov
sbb
sahf
inc
(bad)
jmp
fcom
(bad)
cmps
mov
dec
inc
mov
js
test
or
test
daa
fcomp
es
sbb
int3
rol
and
xchg
or
mov
mov
push
jne
jp
sar
inc
mov
lods
xor
mov
jae
ss
mov
leave
inc
lods
jmp
pop
xchg
popf
loop
ffree
xchg
dec
test
and
movs
cdq
xchg
data16
(bad)
out
or
sbb
push
pop
xchg
cmp
ror
jbe
fdivr
cmc
inc
adc
mul
loop
jle
(bad)
das
pushf
and
dec
(bad)
aad
or
cwde
jl
adc
dec
aad
std
sahf
pop
adc
rcl
jns
and
push
push
push
pop
retf
rol
add
inc
jmp
push
push
adc
inc
movs
mov
imul
pop
pop
mul
leave
sbb
out
xchg
dec
icebp
jbe
pop
rcr
fsub
inc
mov
sti
xchg
adc
jle
jb
xchg
jo
push
shr
add
in
sub
xlat
movs
cli
ss
dec
data16
test
call
push
es
sbb
add
push
std
cmp
in
das
jb
xchg
int3
leave
pop
xchg
push
adc
pop
sub
test
pop
add
cmc
mov
daa
push
sub
and
xchg
aam
int3
pop
lods
sbb
stos
out
inc
cmps
cmps
inc
cmp
push
inc
(bad)
sbb
mov
sbb
or
xor
fs
sbb
xor
sub
sbb
mov
out
push
call
mov
adc
push
and
xchg
mov
cmc
sahf
loope
fstp
pop
push
mov
ins
(bad)
mov
pop
xor
mov
lods
sub
cmp
shl
mov
nop
jmp
sub
and
imul
and
dec
lea
xlat
mov
xor
mov
arpl
pop
or
mov
xor
xor
xchg
(bad)
pop
mov
ds
mov
and
and
jbe
cmps
xchg
loopne
call
jmp
scas
enter
jbe
(bad)
fnstsw
cmp
test
sahf
ret
sub
(bad)
and
out
mov
iret
cmp
retf
push
mov
mov
imul
loop
stc
stos
mov
pushf
mov
mov
or
shr
push
xor
fisttp
(bad)
xchg
xor
mov
or
sub
or
xor
mov
sub
or
inc
add
shl
(bad)
in
pop
loope
xchg
push
push
inc
ins
sub
add
test
es
mov
in
rol
ret
popf
mov
je
lods
or
push
gs
push
pop
jge
mov
jne
jnp
push
jg
loopne
push
fwait
lahf
adc
cmc
(bad)
or
ins
mul
pushfw
push
cwde
push
scas
(bad)
leave
stos
addr16
call
sbb
lahf
clc
imul
mov
repz
add
loope
lock
loop
add
add
mov
push
fdiv
dec
xor
lds
jbe
jns
mov
dec
cmp
jecxz
ror
cli
mov
jae
xchg
mov
sbb
push
iret
dec
(bad)
push
pop
or
cmp
pusha
dec
popa
retf
cmp
je
mov
leave
in
scas
mov
das
xor
shl
retf
adc
xor
mov
shl
xor
movs
in
popa
xchg
mov
mov
or
int3
sub
cmps
inc
add
xor
inc
pop
shr
add
xlat
inc
and
sbb
repz
cmps
jmp
and
outs
inc
lahf
sar
lea
pop
and
sbb
mov
push
cs
jg
mov
lods
(bad)
xlat
pop
push
retf
mov
es
dec
lock
xchg
dec
sbb
adc
loop
inc
mov
repnz
sub
stos
adc
xchg
mov
xchg
xchg
cwde
cmps
aad
popf
(bad)
add
cmp
jo
push
sub
jmp
add
leave
cs
stos
retf
cmp
xor
loope
jae
and
mov
cmp
retf
add
xchg
push
fldcw
ret
mov
lods
mov
(bad)
loopne
lods
outs
cmp
pop
lahf
lfs
stos
add
stos
adc
(bad)
or
iret
dec
inc
ja
dec
add
jne
in
push
out
aam
call
cmp
and
adc
push
imul
lods
in
out
mov
xor
arpl
push
cmp
xor
nop
jmp
cmp
push
ja
xor
pop
sar
push
push
fiadd
lock
out
xchg
jns
adc
sub
(bad)
mov
dec
int
push
and
(bad)
sub
mov
ret
test
and
lods
dec
pop
ffreep
enter
cmp
jl
cmp
add
les
lahf
int3
jp
div
pop
mov
jle
sbb
fs
sbb
inc
test
lods
jbe
into
outs
loop
shl
mov
sub
loope
inc
mov
add
retf
int3
mov
bound
out
mov
stc
jbe
xor
mov
mov
sbb
mov
jno
jnp
out
push
xor
jae
movs
jmp
cmp
sub
xchg
mov
fisub
xor
ds
xor
or
clc
sub
mov
fdiv
cs
retf
cdq
or
call
mov
loopne
inc
rol
mov
xor
mov
cmps
jl
popa
sbb
jne
icebp
lds
(bad)
loope
xchg
ja
dec
jmp
test
add
cwde
sbb
sub
div
repnz
enter
jae
and
aas
xchg
outs
xor
repnz
xor
cdq
xchg
cmp
inc
jb
sub
and
push
sbb
test
sbb
daa
xchg
jle
outs
push
fbld
sbb
icebp
fsub
ret
repz
nop
jmp
lods
fimul
jbe
mov
sbb
pop
xor
(bad)
adc
add
ss
out
cmp
pop
loop
sub
mov
push
mov
movs
cwde
(bad)
lods
scas
pop
sbb
cwde
repnz
jle
out
pop
ret
pop
repz
or
sbb
not
adc
add
scas
push
inc
loop
inc
pop
div
cmps
enter
stos
into
jbe
jae
dec
mov
pop
jae
or
add
cmps
ja
inc
sbb
test
sub
stos
adc
call
sti
fmul
fst
mov
push
arpl
push
xchg
icebp
test
movs
mov
test
adc
xor
stos
aad
popf
xor
xchg
rol
pop
clc
fs
mov
jge
jge
aad
in
xor
pop
or
je
inc
mov
imul
and
jp
into
test
repz
(bad)
push
scas
rol
shl
(bad)
xchg
clc
jl
adc
test
mov
pop
pop
dec
dec
or
fdiv
repz
dec
aas
data16
(bad)
push
(bad)
cdq
sub
sar
cmp
pusha
inc
lea
in
push
jecxz
inc
aaa
cmc
pop
inc
dec
mov
rol
int
loope
jmp
lock
daa
or
cmps
das
or
push
mov
sti
stos
movs
ins
mov
or
mov
ret
or
inc
mov
xor
sbb
mov
aaa
or
mov
cmp
cdq
fistp
stos
ret
cmp
xor
int3
mov
imul
inc
jb
adc
ss
cli
lahf
movs
sbb
mov
and
or
ds
aas
jge
sbb
hlt
inc
or
int3
mov
mov
(bad)
in
imul
mov
mov
push
iret
shr
xchg
in
enter
in
push
jmp
(bad)
ficomp
jl
fisub
popf
jbe
add
cmp
or
mov
sbb
xor
inc
jp
mov
mov
pop
add
push
sti
push
test
mov
add
int
pop
out
xor
fld
enter
adc
loope
xlat
dec
(bad)
imul
xchg
adc
mov
clc
into
push
(bad)
arpl
(bad)
out
cli
xchg
test
std
(bad)
and
inc
and
stc
and
push
movs
fs
or
inc
adc
add
add
call
push
fisub
cmp
jmp
sub
(bad)
jp
jmp
in
arpl
dec
and
pop
mov
dec
dec
push
jae
fcom
xor
aam
(bad)
fistp
push
call
repz
in
push
pop
and
imul
inc
rcr
sub
push
jl
adc
adc
or
call
call
mov
in
movs
cmp
adc
movs
mov
pop
mov
cmps
fsubr
jbe
jns
sub
dec
jns
js
adc
ins
or
jecxz
imul
dec
add
stc
push
cli
push
js
bound
sub
ins
or
mov
fmul
test
in
test
pop
(bad)
pop
shl
call
and
mov
pushf
retf
outs
sbb
inc
stc
sub
fistp
repz
mov
ss
add
xchg
jg
and
mov
dec
pop
mov
ret
add
pop
ss
fmul
inc
mov
sbb
rcl
sub
ins
test
sub
ds
jecxz
pop
dec
sbb
(bad)
sub
(bad)
or
dec
mov
and
rcl
icebp
xchg
lock
jl
adc
rcr
pop
and
push
mov
add
je
lock
daa
fbstp
lahf
cmps
ret
ret
push
sub
ss
push
rcr
or
push
clc
loopne
cmp
repz
mov
mov
xor
stc
ja
ror
stc
add
adc
xor
adc
addr16
mov
icebp
or
je
dec
cmps
lahf
shl
sbb
sbb
fsubr
repnz
(bad)
sti
inc
outs
inc
lahf
jb
div
movmskps
rcr
push
jge
std
js
cli
stos
push
mov
pop
fdivr
ins
cld
mov
loope
(bad)
retf
mov
shl
xchg
mov
pop
inc
dec
xchg
je
jne
cdq
sub
xchg
ins
push
fst
cld
dec
(bad)
dec
jns
cmps
fistp
inc
rcr
lods
adc
pop
mov
push
sub
test
xchg
clc
mov
push
(bad)
cmps
test
push
or
adc
push
in
mov
cmps
mov
pushf
sbb
mov
xor
pop
in
(bad)
xor
jnp
repnz
dec
inc
cmc
in
fimul
inc
cmp
and
jmp
cmp
repz
jnp
pop
imul
push
jns
add
outs
nop
push
(bad)
xor
cmp
repnz
(bad)
scas
xor
test
lea
mov
out
test
outs
xor
shl
das
dec
pop
fs
int3
jecxz
ins
mov
sbb
stos
ss
xchg
push
cmc
out
pop
ins
call
call
mov
das
in
shl
mov
jbe
cmp
aad
stos
xlat
mov
movs
xchg
jp
lea
sub
cs
inc
(bad)
stos
inc
sub
fimul
mov
push
push
xor
adc
mov
sbb
xchg
jp
lds
popa
push
pop
inc
aaa
ficom
retf
or
repz
push
dec
std
dec
ss
push
mov
fnsave
lea
dec
call
mov
xchg
fisttp
(bad)
shr
js
jno
dec
mov
xchg
sahf
cdq
(bad)
lock
mov
out
lahf
fwait
sbb
cmp
cmp
inc
or
popf
fild
hlt
imul
push
fsubr
dec
push
rcr
dec
or
sbb
test
xor
sidtd
xor
stos
push
cmc
inc
push
mov
jno
cmp
adc
loop
jp
mov
mov
xlat
adc
xlat
inc
jl
push
sub
test
pop
jno
loope
scas
or
and
aas
out
es
inc
pop
fstp
and
inc
sti
or
shl
mov
jmp
iret
mov
fdivr
lock
jo
pop
dec
fs
dec
mov
cmp
ja
(bad)
jg
xchg
aam
and
or
rol
cmps
fs
test
pop
sbb
adc
movs
loope
cmp
test
clc
in
je
add
mov
jecxz
mov
dec
lods
loope
fsubr
pop
push
push
sahf
daa
(bad)
xor
adc
jle
xlat
push
mov
xchg
cli
mov
jne
mov
dec
adc
mov
xchg
nop
sbb
fistp
stc
mov
imul
or
fisub
shl
jmp
xchg
mov
and
sar
or
inc
xor
mov
scas
pushf
cdq
jae
jmp
les
sbb
ja
test
sahf
les
jge
sub
xor
loope
ins
jecxz
ror
cs
inc
pusha
test
pop
add
jg
mov
jne
jmp
cmp
call
cmp
(bad)
add
movs
outs
nop
ds
jl
xchg
xchg
cmps
scas
jnp
in
mul
mov
pop
and
repz
mov
aad
les
lock
xchg
js
cmc
out
mov
fisttp
push
dec
sub
inc
aaa
xchg
jle
lods
in
adc
ds
loopne
dec
jo
icebp
cmp
or
nop
xor
cmp
js
jnp
(bad)
(bad)
cmp
add
sti
mov
jg
jo
in
cmps
sub
test
push
and
inc
add
arpl
test
mov
fbld
mov
jmp
add
rol
loop
xchg
or
in
jmp
lods
or
dec
je
iret
sbb
ror
cmp
push
repnz
xchg
xchg
pop
dec
js
and
dec
mov
test
outs
lods
retf
adc
sub
and
push
mov
or
sbb
loopne
mov
push
and
xchg
(bad)
jmp
push
push
or
mov
stos
mov
adc
push
int
inc
mov
fs
pushw
inc
push
pop
dec
fld
addr16
or
ret
or
cmp
clc
push
mov
add
cs
std
xlat
mov
clc
adc
out
clc
mov
dec
mov
lahf
in
sub
jmp
pop
mov
sti
add
add
jp
outs
inc
(bad)
cmp
clc
mov
cli
lods
push
jecxz
pop
push
into
cdq
cmc
std
or
jnp
xor
out
(bad)
ret
push
retf
enter
sbb
xchg
shl
mov
inc
dec
jecxz
loope
fcomp
fisubr
ret
and
lahf
cld
and
cmp
repnz
xchg
jg
outs
sti
cmps
fst
adc
clc
sub
mov
cmp
test
and
add
sub
dec
jbe
mov
or
jecxz
jecxz
mov
mov
mov
pop
mov
pushf
out
pop
add
(bad)
jns
(bad)
jmp
popa
or
cmc
rcl
lods
outs
push
icebp
in
fwait
(bad)
mov
mov
jle
jo
fiadd
lock
push
les
xchg
ins
and
popa
fistp
sub
push
mov
add
cmps
mov
inc
out
xor
cmc
(bad)
sbb
loope
stos
or
push
push
xor
mov
jl
imul
mov
call
push
not
mov
test
mov
std
ret
mov
or
mov
dec
test
jp
or
movs
xchg
cld
ds
popa
xchg
mov
jle
ret
xor
xor
clc
daa
(bad)
(bad)
ja
pusha
mov
out
ins
cli
dec
or
shl
pop
rcr
jne
rcr
mov
xchg
xor
xor
add
mov
sahf
test
sbb
inc
mov
(bad)
out
push
jno
inc
outs
js
sbb
stos
pop
mov
mov
pop
(bad)
int
add
scas
push
or
mov
and
push
cmps
movs
inc
push
fild
ret
shl
sub
mov
cmc
or
shl
cli
out
push
sar
fcom
sbb
mov
sub
jecxz
loope
aaa
ss
mov
movs
ja
jo
jecxz
call
cs
sbb
lock
mov
scas
cli
test
ret
pop
mov
retf
aaa
mov
loope
mov
loope
rol
shl
mov
jns
cs
mov
test
lahf
call
lahf
repz
adc
push
stos
jae
fnstsw
push
mov
enter
lods
(bad)
stos
in
or
xor
out
or
mov
and
arpl
dec
xchg
sbb
cmp
add
in
ins
push
jb
aad
add
movs
fsubp
xchg
pushf
test
jns
inc
dec
mov
cmp
lock
loope
or
sbb
adc
sbb
mov
stos
pop
push
inc
and
lahf
push
inc
or
sbb
rol
cmps
xchg
repz
push
mov
xor
lock
push
xor
in
jp
outs
es
retf
jno
je
leave
imul
(bad)
leave
out
mov
addr16
movs
jmp
or
mov
mov
jmp
fdiv
jge
pop
jno
outs
pop
mov
inc
outs
(bad)
dec
fisttp
mov
lock
bound
inc
test
xchg
mov
jle
movs
aam
lahf
in
sub
adc
mov
jp
push
rcr
pop
in
aaa
jb
push
ret
cwde
dec
dec
mov
inc
add
test
dec
xchg
mov
add
pop
mov
dec
out
pop
adc
dec
sbb
imul
ins
adc
clc
call
scas
xchg
add
cmp
enter
les
mov
xor
out
or
xchg
sub
js
sbb
cmp
jns
sub
loop
mov
cs
cs
gs
pause
xor
xchg
out
test
cmc
sbb
cmp
inc
xchg
xlat
pop
fstp
out
icebp
sub
dec
test
stc
lods
and
jnp
jg
retf
aaa
fdivrp
sar
jmp
and
je
mov
add
inc
pop
sub
movs
sahf
or
sbb
(bad)
push
adc
dec
jle
mov
pop
jae
lahf
mov
cmps
inc
push
movs
mov
jbe
clc
scas
push
call
fadd
add
out
rcr
sbb
sub
fs
xchg
dec
xor
xchg
adc
push
xchg
adc
xor
fdiv
push
pusha
xor
jle
into
mov
add
aam
hlt
pop
jo
loopne
das
push
retf
int
daa
adc
out
jmp
push
int
(bad)
out
mov
xchg
inc
cmp
sbb
fistp
test
cld
sbb
gs
adc
pop
adc
fild
retf
pop
push
cwde
adc
ins
(bad)
mov
bound
jg
scas
pop
pop
xor
mov
stos
pop
dec
mov
add
js
pop
or
loopne
cmp
retf
inc
imul
ins
call
outs
shl
loopne
loopne
inc
pop
add
ds
push
inc
stc
enter
pop
mov
aad
(bad)
repz
and
adc
out
loope
sbb
push
xor
(bad)
lods
(bad)
xchg
out
aaa
mov
je
dec
sahf
mov
xor
movs
and
mov
mov
leave
and
mov
call
(bad)
mov
mov
int3
loop
cmp
sbb
fisttp
fidivr
cli
and
retf
(bad)
iret
inc
xchg
sub
cdq
pop
xor
lods
lods
cs
(bad)
jnp
pop
clc
jl
mov
jb
mov
dec
add
out
data16
das
add
iret
test
xchg
xor
rcl
dec
dec
scas
cmp
and
add
mov
adc
sub
xor
and
xor
xor
xor
fdivrp
jp
clc
jns
fldenv
imul
aam
sbb
mov
inc
xor
xor
loopne
repz
fcmovnbe
bound
ins
cmps
xchg
fcom
jns
xor
in
jns
jp
or
or
cmp
add
clc
imul
mov
cdq
push
mov
enter
jnp
push
pop
dec
lods
aam
cmp
xchg
movs
jg
lds
mov
rcr
(bad)
dec
add
mov
aaa
aas
seta
add
enter
rol
mov
out
enter
in
bound
xchg
hlt
in
fisub
pop
aad
push
repz
xor
aad
rol
push
jno
adc
ret
ret
sub
inc
and
dec
scas
mov
clc
(bad)
sbb
dec
test
popa
test
(bad)
mov
test
push
pushf
ds
cmp
rcr
sub
test
jo
mov
push
nop
fcmovne
lock
sub
leave
pop
mov
(bad)
sub
adc
mov
jne
gs
adc
or
xor
xchg
icebp
les
xchg
fidiv
or
and
inc
mov
es
sbb
mov
inc
push
int
in
inc
sbb
retf
pusha
or
sahf
jp
xchg
jmp
in
ds
jne
(bad)
xchg
jnp
sub
ret
or
sub
cdq
xor
retf
jp
icebp
mov
inc
inc
mov
pop
icebp
sub
add
mov
pop
pop
dec
cdq
int
xchg
into
data16
and
and
sub
lods
ja
sbb
mov
lds
cli
sbb
dec
push
pop
bound
jmp
cwde
mov
push
js
ds
mov
(bad)
fst
pop
nop
push
scas
xor
in
push
jg
push
xchg
dec
jp
into
xchg
adc
and
pop
pop
adc
mov
icebp
jo
jp
jg
leave
jb
mov
xor
sub
push
cmp
out
cmp
daa
or
and
mov
out
loope
shl
das
sbb
int3
aam
mov
retf
xor
xchg
jo
add
fisttp
inc
jg
sub
in
lods
pusha
adc
adc
add
out
mov
mov
out
and
push
aam
cld
push
mov
jl
or
cmp
jb
sub
out
rcr
inc
or
ss
jl
sub
js
sbb
cmp
sub
jns
or
inc
xor
or
inc
mov
aad
iret
nop
popa
outs
pop
aas
scas
cmp
ins
int
mov
sti
loopne
les
push
adc
and
in
xor
hlt
aaa
data16
mov
xlat
add
pop
or
sbb
cmps
jb
push
movs
adc
mov
mov
jbe
inc
test
mov
loopne
test
mov
xor
and
dec
fisubr
and
repnz
cmc
mov
add
mov
mov
jmp
xor
dec
in
sub
mov
mov
arpl
mov
pop
xor
scas
xchg
and
push
(bad)
test
retf
test
pop
push
jnp
pop
int3
push
fisub
test
test
call
sbb
fcomp
and
add
adc
aaa
data16
loop
cmp
mov
idiv
stc
push
mov
push
pop
cmps
loopne
outs
sub
scas
stos
and
cmp
test
jecxz
mov
pop
aam
js
xchg
jbe
push
xchg
xchg
repnz
hlt
add
sub
cli
jno
or
data16
lods
push
enter
inc
test
dec
pop
clc
into
loope
mov
dec
sbb
xor
cwde
imul
addr16
jb
sub
dec
sub
jmp
pop
push
fdivr
jp
inc
fisttp
leave
xchg
hlt
shl
jp
out
in
inc
pop
pop
fadd
add
stc
(bad)
mov
adc
shr
(bad)
sbb
cmp
add
fsubr
add
inc
inc
imul
push
pop
pop
mov
sub
mov
sti
sbb
pop
cmc
mov
dec
jbe
mov
xchg
push
push
mov
(bad)
in
(bad)
mov
out
jecxz
dec
les
adc
pop
xchg
fwait
cmp
jns
and
sub
div
sub
pop
cmps
addr16
popa
jle
pop
(bad)
inc
adc
xchg
call
sti
xchg
or
jp
push
in
(bad)
cs
leave
inc
add
in
int
xchg
das
pop
mov
inc
or
mov
sub
jno
pop
jecxz
fsubr
dec
out
and
dec
clc
and
ficomp
mov
mov
mov
xchg
dec
sbb
push
xchg
pop
aad
test
mov
stos
jge
lods
mov
xchg
fsub
mov
push
mov
loope
push
xor
sbb
cs
mov
out
ret
add
into
xchg
add
jl
sub
stos
cmp
shl
adc
xchg
jecxz
pop
add
jno
movs
pop
xor
test
out
and
sar
mov
jo
loopne
pop
mov
and
jb
cmp
adc
or
dec
pop
fisub
pop
outs
inc
int
xchg
and
lods
mov
fwait
(bad)
cli
xchg
je
mov
popf
inc
fidivr
movs
inc
dec
test
call
out
dec
sub
ret
fst
jle
int
rol
and
dec
outs
ret
cmp
and
sti
jmp
daa
addr16
push
sub
xchg
and
fisubr
push
cmps
pop
aam
std
jmp
dec
nop
xchg
loope
sbb
inc
inc
sbb
scas
aaa
mov
mov
jb
ret
pop
(bad)
inc
pushf
xlat
sbb
jmp
fsub
cli
gs
xlat
cdq
bound
fs
mov
cmp
ror
inc
pop
dec
icebp
in
pushf
dec
js
bound
mov
add
jno
mov
scas
mov
push
leave
adc
xchg
mov
repz
mov
push
retfw
int
push
and
dec
das
outs
outs
movs
xchg
retf
add
adc
test
(bad)
mov
dec
mov
outs
push
mov
(bad)
jbe
and
daa
je
push
js
add
call
mov
xchg
cmps
popa
cs
in
in
pop
jns
push
cmp
retf
sub
add
push
test
(bad)
ja
ja
add
lods
imul
inc
inc
mov
call
mov
data16
or
loop
pop
inc
lods
in
mov
push
bound
jl
dec
sbb
and
movs
inc
mov
das
pop
mov
(bad)
cdq
rcl
dec
addr16
xor
loop
add
aas
inc
(bad)
push
cmp
shr
push
and
jo
pop
fsub
mov
jo
lahf
arpl
push
not
pop
or
ins
adc
dec
adc
add
call
push
in
daa
push
pop
push
and
and
fnsetpm(287
xor
in
cld
shl
retf
(bad)
inc
icebp
mov
stos
in
pusha
pop
jb
xchg
popaw
call
test
push
scas
cmp
and
sbb
cmps
and
mov
sub
lock
sub
loopne
jno
adc
jne
dec
mov
push
mov
mov
inc
jle
xlat
xchg
out
mov
push
(bad)
out
cli
cmps
callw
shl
leave
not
xor
jb
cld
jns
in
add
fs
std
imul
test
sbb
icebp
adc
sti
mov
push
not
or
nop
mov
int3
lds
ins
and
sbb
adc
nop
in
aam
push
sbb
in
(bad)
and
sub
dec
dec
fsubr
xor
fst
mov
cmps
mov
fcomp
inc
push
jno
ret
loope
add
sbb
sub
and
xchg
cmp
pop
fild
jno
jg
and
dec
pushf
add
in
add
mov
push
aam
fwait
leave
(bad)
push
imul
jmp
push
shl
cmp
ret
dec
jae
loope
test
bound
call
mov
sbb
(bad)
and
mov
sbb
jmp
cmp
loopne
(bad)
jns
retf
sbb
mov
dec
fwait
xor
jge
pop
sub
and
push
mov
mov
ins
mov
jmp
div
jnp
mov
out
dec
jnp
popa
in
iret
push
dec
jns
fisttp
div
ret
push
xchg
jae
clc
cmps
fcomp
xchg
pop
jl
clc
push
add
adc
push
pop
sar
pop
movs
lock
ins
cmp
mov
push
inc
movs
inc
pop
inc
and
dec
bound
push
clc
jmp
mov
push
popa
lahf
xor
jmp
cdq
dec
cli
ins
inc
out
lods
jmp
push
mov
pop
into
sti
lods
fnstcw
retf
push
mov
inc
lds
icebp
ss
sti
mov
call
scas
dec
out
les
lds
mov
jp
(bad)
push
jmp
mov
paddw
sub
hlt
mov
jl
stos
daa
mov
jmp
xchg
(bad)
pop
sbb
jmp
outs
into
ret
add
dec
neg
(bad)
mov
push
loopne
sbb
in
sbb
add
or
mov
repnz
imul
add
es
shl
lahf
mov
pop
xor
cmp
test
sub
add
inc
imul
in
push
adc
cmp
test
push
mov
jns
sti
pop
pop
inc
aam
arpl
adc
dec
cmp
inc
add
data16
mov
js
and
pop
inc
mov
stos
jmp
jns
push
jmp
mov
pop
pop
pop
sbb
lods
add
xchg
in
jnp
pop
mov
ret
nop
sub
cmp
popa
xor
mov
hlt
mov
bound
inc
sub
jmp
sar
mov
jbe
into
lea
push
and
std
sbb
test
mov
out
push
lahf
push
fwait
dec
movs
cmp
xchg
sbb
mov
xchg
xchg
sbb
pusha
sub
ins
push
mov
mov
js
adc
and
aad
popa
ins
ss
push
mov
sub
inc
mov
pop
shl
push
dec
fst
jnp
mov
inc
je
out
and
add
clc
ins
out
test
and
add
inc
cdq
loope
ins
mov
xor
(bad)
div
dec
and
bound
mov
xor
jmp
mov
pop
enter
mov
popa
sub
and
scas
add
loopne
xor
popf
loopne
pop
ss
loopne
cmp
add
pop
fsub
bnd
enter
jmp
add
pop
mov
cmp
loope
mov
push
dec
in
push
xor
pusha
jb
ins
jns
loopne
fadd
inc
fcmovnb
or
adc
lods
xor
inc
xor
push
dec
adc
or
test
test
imul
push
ror
cdq
mov
mov
repnz
imul
push
mov
pop
in
push
out
and
push
adc
dec
and
(bad)
pop
mov
or
xchg
mov
fsubr
add
fidiv
jae
mov
fdiv
push
repz
stos
aam
pusha
in
in
pop
int3
xchg
pop
push
and
add
jb
movs
inc
hlt
call
out
and
repz
into
add
out
cmp
cs
aad
stc
mov
out
(bad)
mov
inc
ror
pop
adc
add
cs
mov
sbb
add
xchg
sbb
or
pop
idiv
xchg
mov
xchg
je
imul
mov
iret
jae
inc
dec
aad
sub
pop
gs
dec
ins
mov
mov
mov
pop
and
mov
sti
xor
clc
ins
cmp
sbb
neg
or
loope
(bad)
xchg
sub
pop
inc
in
sahf
mov
ret
mov
mov
xchg
std
test
mov
push
mov
adc
or
test
scas
pop
inc
retf
jmp
ja
sbb
xchg
push
test
or
retf
cmc
loope
inc
sahf
or
mov
xor
xchg
out
jle
xchg
or
out
cmp
jecxz
or
pop
jb
add
test
popf
dec
ret
dec
push
into
pusha
mov
jp
jae
sar
loope
xlat
imul
mov
ja
jge
adc
pop
mov
idiv
loope
je
mov
sub
mov
push
xchg
retf
daa
inc
cmps
jp
imul
loop
mov
xor
mov
lahf
into
adc
or
jg
push
push
jg
out
jmp
scas
mov
pushf
add
js
nop
xchg
call
sub
(bad)
jae
mov
sub
pop
out
sahf
les
mov
nop
stos
jg
cmp
dec
mov
movs
xchg
jg
mov
push
leave
in
or
stos
test
jp
fcom
stos
hlt
rol
(bad)
pop
pushf
mov
outs
es
or
adc
push
les
cmp
out
and
lahf
inc
cdq
fimul
outs
pop
outs
lds
or
dec
pop
mov
rcl
ja
pop
add
stos
jg
jmp
or
or
outs
sbb
push
adc
mov
ficomp
inc
test
adc
shl
lods
icebp
rol
jbe
push
pop
cmp
pop
repnz
cli
ins
rep
fild
js
test
ret
pop
add
daa
stc
ss
xchg
push
aaa
sub
jg
xor
les
pop
popa
ds
jecxz
sub
pusha
mov
fwait
das
pop
adc
in
sti
mov
(bad)
imul
fdiv
imul
inc
ss
push
imul
fdiv
cmp
or
sub
jg
and
cmps
jno
adc
(bad)
push
jle
movs
icebp
retf
cli
adc
lds
jmp
xor
push
adc
push
or
imul
lock
scas
sbb
sbb
cmps
push
and
retf
jae
and
add
jmp
push
push
loope
shl
call
cmp
stc
dec
test
aas
jnp
stos
fst
bound
in
adc
jbe
in
push
ja
mov
sub
dec
dec
iret
pop
int
out
int
sete
lahf
xchg
lock
retf
out
into
adc
sub
nop
mov
jb
sbb
adc
xchg
add
jo
push
lahf
jecxz
push
sub
sub
xor
add
cdq
xchg
adc
dec
xchg
xchg
sar
ftst
adc
ins
dec
test
pop
pop
mov
mov
or
push
in
push
in
fimul
xchg
stos
arpl
sti
or
sub
mov
and
pop
iret
push
fwait
push
(bad)
mov
shl
aad
sbb
add
cli
call
dec
(bad)
(bad)
adc
test
push
sar
fwait
pop
xor
out
nop
jmp
push
xor
jecxz
pop
es
enter
mov
sub
push
jb
cwde
cmp
cdq
clc
retf
mov
cmp
repnz
adc
mov
fmul
mov
and
jg
dec
push
data16
ret
test
jno
mov
scas
into
push
jmp
popf
stc
out
pop
ds
repnz
add
push
jnp
aaa
add
pop
jae
dec
fimul
mov
and
jecxz
pop
xchg
xor
mov
outs
and
iret
mov
xlat
push
fdiv
pushf
fcmovnu
nop
pop
fsub
cmp
lea
outs
arpl
xlat
sub
sbb
jmp
ret
loop
loop
sbb
dec
pop
cmps
out
or
xor
les
pop
stos
rol
aad
jb
add
in
rol
dec
mov
mov
repz
sub
xchg
xchg
xor
inc
loopne
ins
stos
outs
call
jp
(bad)
mov
jno
adc
fiadd
je
mov
not
inc
test
mov
(bad)
cmc
dec
(bad)
fsubr
fisubr
xchg
adc
out
push
in
adc
ds
push
pop
in
pushf
mov
das
aad
push
and
iret
xchg
aaa
sub
mov
in
adc
cmc
sti
sub
xor
in
dec
xlat
into
dec
lahf
test
hlt
and
or
lea
inc
(bad)
mov
mov
dec
add
xchg
int
xor
cmps
int
pop
sbb
lahf
fs
icebp
mov
je
dec
and
call
(bad)
out
sbb
ds
jle
pushf
dec
xor
jno
xor
or
mov
mov
push
mov
mov
test
push
jne
mov
cmp
add
xchg
xchg
adc
and
mov
das
mov
push
cwde
pop
lods
fstp
mov
dec
xchg
mov
aam
adc
push
dec
mov
mov
push
pop
loopne
and
(bad)
adc
or
jp
(bad)
cmp
dec
or
div
test
into
adc
sbb
bound
stc
ret
ins
mov
xchg
nop
xchg
adc
push
out
or
idiv
movs
inc
inc
mov
mov
xchg
or
mov
and
clc
enter
sbb
mov
jnp
clc
test
add
stos
and
out
mov
xlat
mov
aad
mov
js
daa
or
bnd
mov
test
div
imul
mov
dec
inc
xchg
xchg
movs
xor
or
inc
imul
lea
cmp
fadd
push
mov
add
rcl
inc
ror
scas
out
cmps
mov
push
sbb
not
mov
shl
mov
pusha
mov
xor
sbb
fsubr
mov
cmp
fsub
push
imul
adc
icebp
imul
bound
jle
ret
pop
push
rol
mov
imul
retf
outs
retf
pop
push
sub
je
dec
sahf
gs
pusha
mov
and
jmp
cs
js
jle
xor
jle
pusha
inc
mov
fmul
pop
in
lods
sub
imul
mov
stos
int
das
mov
movs
push
shl
lahf
movs
jbe
int
fbstp
xchg
test
aam
in
outs
push
jne
jno
jmp
push
jbe
adc
test
out
sbb
fst
lods
dec
push
in
add
mov
test
or
jg
mov
add
gs
ss
retf
out
lea
iret
loop
int3
daa
(bad)
div
(bad)
dec
add
inc
fcomp
data16
test
sar
pop
push
shl
jb
or
xor
jo
fsub
and
dec
cmps
sbb
xlat
call
jo
adc
jno
push
test
and
push
inc
pop
jg
ins
cmp
sub
dec
and
stc
shl
and
clc
ss
or
xor
push
iret
cmp
repnz
jecxz
jbe
adc
js
pop
popa
test
add
sub
ja
das
pop
retf
sub
xor
push
dec
xchg
cmps
sub
imul
xor
scas
inc
mov
jne
in
sbb
sub
mov
pop
mov
dec
mov
fsub
mov
or
push
adc
daa
xchg
je
push
std
mov
in
icebp
xchg
add
xor
adc
pop
call
clc
dec
xchg
push
dec
mov
mov
(bad)
mov
ret
add
jmp
dec
std
pop
fcomp
aam
push
pop
pop
xchg
push
or
ror
sub
pop
stos
enter
leave
sbb
es
ret
rcr
sub
sar
add
test
(bad)
cmp
inc
jno
mov
js
ret
jbe
xor
jmp
inc
mov
push
dec
push
fisub
fbld
cmps
fistp
mov
mov
popf
das
imul
aam
lods
jecxz
(bad)
jmp
in
(bad)
ret
int
xchg
jg
mov
imul
repnz
dec
leave
mov
loopne
stos
add
js
shl
sub
inc
push
cdq
out
sub
xchg
push
ins
xchg
aad
div
fcomp
jb
shl
push
mov
pushf
push
or
xor
push
add
xor
int
xor
loope
(bad)
cld
(bad)
sub
cwde
add
fmul
cld
in
(bad)
jmp
push
xor
or
mov
cwde
cli
xchg
pop
mov
or
sub
fdiv
fs
cli
(bad)
cld
pop
inc
add
movs
inc
mov
iret
ins
ja
push
inc
mov
mov
push
inc
cmp
(bad)
mov
sub
(bad)
dec
in
fstp
jb
xchg
paddb
mov
sub
pop
cli
adc
inc
(bad)
cld
test
int3
mov
lods
jns
mov
je
dec
mov
test
adc
pop
imul
ret
push
(bad)
in
pop
push
adc
pusha
scas
pop
add
jmp
hlt
xor
adc
movs
push
fiadd
mov
push
lods
je
rol
out
stc
mov
sub
mov
pop
inc
pop
adc
push
jp
ss
sbb
jmp
and
loope
cmps
ficomp
(bad)
mov
or
test
push
rcl
jae
add
ja
adc
leave
sbb
jmp
mov
cmp
loope
pop
add
cs
rcr
or
xor
cdq
adc
dec
jle
xor
dec
pop
sub
lahf
lahf
mov
cwde
and
not
(bad)
mov
push
add
ins
sbb
call
cwde
jnp
xor
(bad)
daa
cld
jbe
or
inc
push
jae
dec
js
inc
(bad)
cmp
ror
mov
fisubr
adc
jl
and
jmp
jno
dec
nop
push
or
mov
cmp
repz
xor
sub
xchg
sahf
imul
in
sbb
cmp
pusha
frstor
pusha
inc
xchg
dec
and
fiadd
push
sti
add
jno
jno
cdq
add
mov
jl
cld
(bad)
rcr
or
xchg
sub
pop
and
mov
stos
jp
push
cmc
sahf
mov
lods
fnstcw
adc
fwait
je
int3
and
std
in
aaa
out
fmul
fld
dec
ret
sahf
jl
lea
xchg
add
sub
mov
fstp
jnp
inc
aas
in
es
popf
dec
stc
(bad)
sbb
dec
xor
xor
mov
imul
mov
fsubp
push
mov
and
xor
bound
add
sub
movs
imul
in
fild
fld
fwait
test
push
ret
mov
add
lods
call
retf
and
es
cmp
dec
bound
(bad)
jle
and
repnz
add
add
std
cmps
xor
call
stos
adc
jbe
inc
xchg
push
nop
jnp
dec
repnz
pop
lods
fist
stos
xlat
adc
pop
or
fsub
mov
inc
jmp
ret
ror
test
mov
aas
jp
retf
fist
cmp
mov
inc
mov
fcom
in
xor
sub
lock
xchg
test
in
aad
jecxz
push
fs
mov
in
enter
jb
bound
mov
push
and
push
jmp
push
repnz
ret
retf
jmp
stos
out
out
movs
mov
pop
adc
rcr
jg
mov
or
push
fisub
add
daa
lock
outs
test
test
icebp
in
das
outs
push
mov
je
xor
add
loopne
xor
cs
mov
cmps
daa
or
gs
push
or
inc
jmp
push
push
inc
lods
jo
js
sbb
mov
dec
ds
or
pop
adc
shl
fist
std
arpl
pusha
cmp
mov
neg
scas
and
dec
xchg
retf
push
push
and
mov
call
jmp
dec
dec
inc
out
jmp
iret
fmul
test
imul
add
mov
int
mov
test
inc
jmp
adc
add
pop
stc
ds
lods
stc
mov
mov
sub
push
aas
mov
mov
cmp
repnz
mov
sub
daa
xorps
pop
in
sub
dec
imul
cdq
out
sub
jbe
stc
pop
enter
pop
icebp
pop
lods
or
pop
dec
cld
adc
repz
fdiv
push
repz
movd
mov
cmps
lahf
jp
jnp
outs
sbb
jge
jg
jmp
lahf
iret
retf
jecxz
sub
loop
cli
and
iret
ja
repnz
(bad)
jae
cmp
push
add
dec
push
cmp
push
sub
cmp
ja
push
pop
xor
push
aaa
scas
iret
mov
mov
push
adc
jns
sbb
push
lock
call
int3
hlt
pop
mov
cmp
push
xor
mov
into
hlt
mov
cmp
aaa
mov
aas
add
mov
and
dec
dec
fwait
pop
push
xchg
test
sbb
sub
cmp
push
push
out
pop
ret
pushf
and
mov
cmp
mov
test
xchg
add
push
stc
ds
mov
push
scas
jno
pop
pop
in
push
cmps
pop
mov
push
popa
bnd
cmp
icebp
in
scas
fwait
out
mov
cdq
fiadd
xor
push
inc
rcl
jno
cmp
or
mov
lea
mov
add
push
hlt
test
(bad)
jno
stos
icebp
outs
xchg
retf
or
inc
mov
sbb
sbb
xor
xor
lahf
xor
and
cmp
cmp
out
test
xchg
and
leave
lea
lods
das
jnp
and
xchg
imul
sbb
mov
xor
mov
repnz
js
loop
dec
aas
cmp
sbb
and
mov
or
repnz
or
loopne
jmp
cs
les
pop
ret
inc
dec
adc
pop
fisttp
arpl
add
pop
jmp
mov
mov
shl
push
repnz
and
jb
cld
ret
or
ds
push
fs
jmp
test
dec
sbb
or
pop
inc
pop
out
nop
jmp
call
add
jmp
ins
xor
pop
sub
in
outs
and
fiadd
jnp
fdivr
mov
sub
stos
xchg
dec
pusha
or
add
ret
data16
cmp
shl
push
inc
gs
adc
dec
mov
add
sub
mov
pop
nop
scas
jmp
cmp
inc
mov
jno
adc
retf
mov
mov
lock
js
adc
cmc
dec
and
xor
fs
(bad)
dec
(bad)
or
adc
sti
xlat
sub
push
cmp
mov
adc
inc
jg
pop
fadd
imul
sub
jbe
pop
stos
aas
push
(bad)
jmp
lahf
mov
rcr
pop
bound
push
leave
mov
arpl
int3
cwde
sub
or
push
jp
or
or
xor
and
mov
mov
daa
loopne
and
or
xor
mov
enter
dec
sahf
dec
(bad)
jnp
xchg
retf
clc
jns
mov
inc
imul
adc
and
scas
(bad)
neg
iret
movs
bound
out
sub
(bad)
shr
pop
xchg
in
pop
adc
mov
mov
call
repz
mov
cmp
leave
sbb
call
mov
aaa
gs
out
(bad)
pop
jne
pop
sbb
mov
jmp
ror
mov
scas
or
js
sub
pop
sub
loope
jmp
lock
jp
and
xchg
and
add
sbb
ret
loope
shl
mov
(bad)
outs
scas
aas
(bad)
pushf
adc
mov
mov
mov
inc
lods
(bad)
push
into
icebp
and
and
movs
lahf
and
out
jae
xor
int
pop
inc
jbe
dec
lahf
jmp
retf
inc
xor
push
ins
cmps
in
(bad)
ss
in
scas
in
fwait
pop
push
sbb
or
or
and
sbb
adc
inc
inc
das
adc
xor
fadd
retf
outs
push
dec
data16
xor
sub
retf
xlat
lock
pusha
(bad)
adc
gs
mov
add
jns
daa
pop
sub
adc
jg
xchg
inc
dec
imul
hlt
or
mov
xor
push
mov
add
loop
shr
pop
int
dec
jo
iret
retf
or
xor
enter
scas
test
lods
ja
shl
cdq
loopne
inc
outs
cmps
dec
xchg
cmp
hlt
sub
and
mov
pop
rcl
ja
adc
or
enter
enter
fnsave
aad
fisttp
arpl
ins
fnstcw
and
inc
adc
cmp
adc
adc
dec
and
clc
fwait
and
js
es
mov
mov
xchg
or
mov
and
icebp
fiadd
add
outs
adc
xor
imul
push
mov
(bad)
push
call
mov
(bad)
push
mov
std
imul
scas
pusha
mov
out
outs
fwait
repz
mov
sti
clc
mov
out
cwde
call
pop
test
loope
add
or
and
(bad)
add
jb
inc
cmps
and
pop
(bad)
dec
cmp
push
stc
lahf
std
push
pop
lods
adc
shl
movs
sub
push
cmp
fs
inc
jmp
das
ret
test
psrlq
mov
mov
sti
aaa
movs
dec
mov
lahf
lods
and
loope
call
pusha
mov
scas
popa
mov
bound
mov
add
mov
rcl
cmps
mov
mov
sub
lds
jo
push
call
in
jne
mov
iret
add
pop
std
js
hlt
dec
xchg
mov
xchg
fisub
pop
outs
pop
jg
push
mov
imul
in
add
call
dec
push
sbb
mov
mov
sub
aas
imul
add
cld
or
and
dec
into
pop
(bad)
push
sahf
pop
mov
hlt
and
or
rcr
jae
inc
jns
mov
aad
or
dec
or
adc
mov
jmp
inc
popa
sbb
and
add
xchg
dec
call
mov
push
(bad)
or
jno
fs
jp
mov
xor
(bad)
lock
and
arpl
in
xchg
pop
cmp
add
dec
mov
shr
jne
mov
fisub
mov
mov
and
pop
int3
or
inc
jg
arpl
test
enter
push
jge
mov
fsub
call
or
bound
jns
cmp
xchg
ja
aaa
push
scas
pop
daa
pop
dec
mov
xchg
icebp
fcomp
aam
shl
or
pop
loopne
add
mov
rol
(bad)
jmp
sbb
cmp
mov
adc
test
jmp
mov
ficomp
int3
xchg
outs
cmp
xchg
in
push
out
ins
aas
and
pop
jnp
xor
inc
arpl
fld
jo
(bad)
icebp
and
ret
(bad)
js
iret
lock
sbb
jmp
pop
cwde
fcom
addr16
jp
pop
dec
stc
mov
inc
inc
std
add
xor
xchg
loope
mov
jns
add
mov
popf
cli
test
push
ror
ins
nop
gs
mov
lods
rcl
jmp
pop
in
mov
(bad)
jp
xlat
add
in
imul
cld
or
repz
retf
dec
into
fst
test
sbb
xor
aaa
popf
not
xchg
mov
loopne
adc
inc
mov
sub
push
dec
sub
repnz
imul
jmp
push
mov
in
add
mov
sahf
ret
xchg
repz
loop
sbb
fs
aad
xchg
aas
add
and
dec
iret
or
inc
fisubr
test
inc
out
mov
cmp
push
in
fisub
xchg
(bad)
ficomp
dec
nop
add
xor
dec
xchg
sub
xchg
stos
test
pop
adc
jno
scas
aad
mov
popa
shl
std
loopne
fist
icebp
ds
pop
push
mov
ins
stc
stos
hlt
adc
mov
ret
push
enter
fist
dec
or
pop
ficom
or
ins
xchg
loope
jne
fdiv
jmp
fst
loopne
nop
mov
repz
pop
mov
adc
mov
sub
push
(bad)
and
inc
stmxcsr
rol
mov
push
mov
adc
sbb
pop
pop
test
add
cmp
fstp
lahf
and
dec
mov
push
icebp
(bad)
fidiv
aaa
pop
inc
xchg
adc
inc
call
scas
stos
fcomp
fs
fidivr
lea
icebp
stos
xor
xchg
inc
dec
xor
stos
push
push
stos
xchg
ins
(bad)
jnp
pusha
pop
push
mov
push
outs
push
sub
loopne
sub
pop
mov
icebp
adc
sar
ja
jo
pop
xchg
xor
mov
dec
mov
jae
(bad)
int3
cmps
dec
(bad)
(bad)
loope
fwait
sti
inc
xchg
mov
loope
push
pop
mov
adc
scas
inc
push
out
in
in
push
dec
nop
push
mov
mov
jg
fsub
pop
btr
jmp
mov
out
add
mov
nop
pop
sahf
xor
or
test
or
call
cmps
sub
scas
data16
sti
add
aaa
mov
sub
add
jb
mov
loopne
mov
mov
and
or
iret
pushf
push
in
add
jae
nop
jmp
lods
into
jg
jl
mov
ret
jmp
xchg
rol
rol
cwde
push
les
dec
out
js
aas
js
gs
sbb
xor
mov
sub
cld
fbld
(bad)
dec
fdivr
xchg
ss
xchg
cmp
push
or
outs
dec
idiv
cmps
or
xchg
push
leave
mov
fiadd
mov
pop
es
xlat
mov
add
xor
add
mov
jb
push
xchg
loop
sub
jne
dec
xor
push
mov
pop
test
push
test
int
data16
retf
ds
pop
sbb
(bad)
jnp
test
adc
loopne
ret
jns
add
int3
arpl
(bad)
mov
xor
fidiv
popa
dec
push
daa
enter
mov
cmp
cs
jl
dec
mov
xchg
stos
sbb
jbe
sbb
retf
inc
lock
sbb
mov
jg
ds
jo
loope
cmc
out
jmp
test
arpl
ror
movs
cli
jnp
dec
adc
or
scas
adc
dec
xor
test
cs
int3
jno
push
test
aas
inc
mov
mov
jne
add
push
aas
addr16
push
bound
outs
jae
jo
ins
jnp
out
jmp
in
mov
and
loop
and
cmp
data16
ret
mov
push
xchg
sub
xchg
in
mov
lahf
mov
xor
test
cld
(bad)
cmps
mov
(bad)
in
jg
outs
sbb
jp
cmp
xchg
jnp
dec
xchg
push
cmps
(bad)
mov
test
dec
repz
dec
mov
add
mov
mov
aad
pop
lock
sub
(bad)
jo
imul
test
mov
bound
sbb
les
pop
aaa
ret
test
repnz
xor
xchg
int3
push
mov
pop
mov
icebp
sub
xor
mov
nop
daa
and
hlt
movs
(bad)
popf
(bad)
arpl
jecxz
data16
ror
xchg
dec
push
movs
iret
pop
cmp
or
cmps
repz
sbb
sbb
pop
jae
mov
adc
mov
arpl
dec
mov
add
enter
nop
mov
in
add
cmp
inc
in
daa
inc
in
fmul
inc
jnp
ficom
mov
repz
cmps
mov
cmp
pushf
rcr
loopne
adc
push
ins
sbb
xor
jl
dec
outs
push
sub
pop
xor
mov
test
ss
xchg
xchg
jnp
retf
sbb
xor
pusha
mov
lock
xor
jnp
test
(bad)
arpl
jb
jae
mov
jno
aam
in
mov
ss
pop
jo
enter
sbb
jno
or
or
dec
in
jnp
aam
paddusb
inc
fidiv
pusha
in
add
mov
outs
adc
stc
sub
adc
add
(bad)
cld
cs
ficom
loopne
push
out
pop
stos
adc
fnsave
dec
xchg
xlat
jge
xchg
or
call
xor
and
adc
bound
sar
or
leave
mov
jp
push
or
mov
das
fmul
pushf
in
dec
test
test
sti
inc
aad
add
and
inc
adc
ret
cwde
imul
test
pop
sub
ds
repz
das
mov
pop
inc
in
repnz
cld
outs
test
imul
repz
add
add
pop
inc
push
pop
lock
xlat
in
mov
and
fmul
icebp
ds
and
sbb
or
mov
push
pusha
sbb
js
(bad)
jae
(bad)
mov
sti
xlat
test
mov
or
cmps
mov
pop
test
lea
jbe
sbb
jle
adc
and
or
and
mov
mov
iret
iret
repnz
sub
inc
mov
cmp
(bad)
xchg
repnz
js
push
sub
inc
aad
dec
inc
mov
in
scas
int3
push
(bad)
loopne
inc
int3
sti
jns
cmp
out
adc
add
push
add
jecxz
mov
lock
lods
push
addr16
pop
add
cmps
pop
je
adc
cmp
xchg
sti
xor
js
jp
imul
inc
retf
rcr
mov
out
faddp
and
mov
cmp
push
dec
jle
pop
push
js
mov
sar
dec
mov
push
pop
rcl
outs
push
push
std
vmovntpd
ja
add
leave
push
je
out
pop
aad
push
pop
add
fcmovnu
ret
adc
loope
push
mov
and
outs
popa
xlat
push
jmp
jecxz
call
push
aad
jmp
mov
inc
lds
into
cmps
ja
out
out
retf
mov
xor
mov
rcl
mov
cmp
inc
mov
in
sub
ret
or
or
push
push
movs
cmp
mov
push
sbb
add
jne
pop
pop
repnz
adc
add
pop
nop
lds
xor
mov
rcr
retf
sub
cmp
mov
or
retf
dec
pop
dec
push
cmp
push
sar
data16
xor
(bad)
mov
mov
add
pop
es
mov
cwde
pushf
dec
xchg
xchg
imul
sub
pop
out
xchg
fucom
push
cmc
or
sbb
out
adc
push
das
push
mov
loop
xchg
jle
pop
idiv
and
or
rol
stc
pop
sti
ret
ss
sub
outs
sub
dec
cwde
mov
stos
cwde
xor
dec
cmp
icebp
xchg
stos
push
mov
neg
xor
aas
icebp
dec
and
outs
cmp
scas
repz
push
xchg
sbb
mov
imul
xchg
sbb
in
xor
dec
popa
mov
nop
jne
(bad)
mov
xor
pop
jl
(bad)
out
xchg
mov
push
push
pusha
add
push
shl
add
into
push
(bad)
fs
push
cs
add
dec
and
out
jl
fiadd
bound
mov
xchg
push
dec
add
cmp
push
and
xchg
adc
mov
or
lods
mov
fadd
xor
mov
jns
stos
mov
repnz
enter
and
aam
pop
inc
add
ja
sahf
mov
and
push
and
out
adc
retf
inc
and
clc
mov
push
or
pop
aas
add
mov
arpl
test
fs
ss
xchg
test
arpl
or
or
les
mov
jb
dec
or
inc
mov
pop
mov
retf
ss
lods
or
lods
inc
fwait
pop
add
xlat
fwait
or
(bad)
hlt
sti
cmp
repz
xlat
outs
and
inc
mov
(bad)
pop
push
inc
add
adc
xor
addr16
lods
pop
inc
neg
jae
mov
inc
and
dec
add
aas
movs
jecxz
add
cs
bnd
outs
mov
sub
dec
xchg
int3
push
cli
jno
popf
imul
xor
out
jo
cmp
ins
jns
pop
div
out
dec
test
pop
popa
xor
(bad)
jne
es
jae
cmp
push
xor
sar
mov
aas
test
sahf
js
xchg
dec
push
xor
cmps
sub
dec
ins
dec
scas
movq
iret
daa
add
fst
and
adc
sub
sbb
jecxz
pop
mov
jns
in
cli
cmp
fadd
fimul
iret
pop
xor
shl
sub
jne
lods
push
test
scas
scas
mov
hlt
outs
cmp
mov
cdq
inc
js
pop
aas
shr
sbb
fst
popf
pop
inc
xor
inc
mov
(bad)
(bad)
aam
idiv
cmps
(bad)
jb
xor
pop
xor
and
fimul
inc
sub
adc
mov
int3
or
cmps
lods
mov
xchg
dec
enter
imul
pop
jle
jb
mov
out
sub
add
jg
imul
and
test
sbb
hlt
jno
mov
stos
into
dec
pop
add
into
and
dec
sbb
cmp
pushf
repz
shl
ins
and
cli
mov
lock
dec
mov
daa
les
fnstsw
xlat
add
inc
sub
sbb
jecxz
inc
(bad)
ss
(bad)
sbb
pusha
add
stos
xchg
or
out
icebp
hlt
jmp
cld
mov
out
push
inc
jns
sub
cmps
and
aam
push
dec
ds
cmp
mov
pop
js
ss
mov
inc
add
mov
(bad)
adc
or
sub
test
cmps
sub
push
fcom
rcl
pop
pop
dec
add
push
sub
aad
and
test
xchg
js
call
dec
sti
dec
leave
icebp
clc
fcmovu
push
fadd
mov
lea
int3
adc
inc
(bad)
mov
aaa
xchg
imul
stos
push
xchg
mov
mov
dec
add
xor
mov
(bad)
mov
mov
fadd
in
lea
xlat
scas
(bad)
cmps
dec
ds
popf
sub
clc
ret
sub
scas
mov
movs
and
shl
push
adc
mov
sbb
int3
or
or
and
loop
loope
(bad)
mov
std
lods
cmp
ss
fcmovnu
jecxz
mov
cmp
inc
xlat
push
sub
test
sub
pop
inc
in
cmp
pop
mov
jle
ins
or
sahf
aaa
imul
(bad)
call
inc
mov
fbstp
cmps
ror
xor
add
xchg
jecxz
imul
stos
xor
inc
call
push
xor
pop
push
(bad)
adc
ror
mov
cli
cli
xchg
and
popa
fldcw
lods
or
mov
cmp
or
mov
sbb
mov
inc
mov
sbb
and
mov
js
xchg
out
fist
xchg
and
lea
sti
mov
and
dec
xchg
pop
fild
mov
loopne
fdivp
and
adc
mov
push
in
fucomi
xor
rcl
inc
mov
jp
stos
cdq
nop
test
jbe
movs
(bad)
or
aam
outs
cli
cs
stc
inc
aaa
adc
loopne
stos
fstp
add
aaa
fcom
pop
jp
sub
pop
xchg
shr
cs
stos
int
inc
ins
clc
add
mov
jmp
xchg
popf
aam
je
adc
cdq
cmp
add
ret
(bad)
push
adc
stc
pushf
xor
out
inc
pop
aaa
test
sub
xor
mov
and
add
mov
out
mov
jl
push
add
mov
xor
mov
test
xchg
push
mov
ds
or
xchg
jg
nop
pop
cmp
push
push
and
inc
(bad)
pop
sbb
fdiv
out
enter
mov
and
ins
adc
mov
das
push
lds
mov
cmp
xor
and
push
hlt
jns
inc
stc
scas
iret
dec
dec
movs
repz
sbb
outs
out
pop
stos
push
fwait
jns
dec
xchg
movs
sub
or
data16
cs
and
cmp
scas
pop
ret
(bad)
pop
xchg
or
mov
jecxz
nop
jge
fisttp
test
fisubr
xchg
push
mov
shl
xor
call
int3
mov
shr
fst
into
inc
in
and
xchg
push
jns
cld
fbstp
call
sub
imul
hlt
lock
xlat
push
push
cli
popa
jmp
adc
jge
retf
inc
rcr
mov
into
inc
dec
push
mov
and
loop
push
xor
(bad)
scas
dec
and
add
imul
loope
mov
adc
outs
ror
lds
lds
jns
push
imul
fbstp
inc
jns
sub
bound
addr16
xor
mov
mov
sub
neg
mov
sub
es
mov
mov
pop
mov
dec
sub
jecxz
xlat
mov
cld
adc
rcl
xor
xor
call
popf
jmp
mov
jecxz
popf
pop
mov
push
enter
jno
movs
(bad)
jle
iret
in
in
loope
shl
icebp
mov
enter
fimul
and
data16
cmps
retf
in
nop
imul
cmps
sbb
dec
in
out
and
inc
xor
mov
mov
ret
ins
sahf
ss
xchg
adc
jns
sub
mov
das
aaa
sbb
(bad)
loopne
cmp
lock
popa
cs
and
outs
fimul
dec
lock
popa
and
push
leave
xchg
mov
and
sbb
(bad)
aam
pusha
pop
pop
outs
xchg
and
ins
and
into
and
inc
push
or
pop
shr
fst
xor
cmps
mov
mov
lea
dec
push
scas
mov
call
sbb
xchg
sbb
mov
mov
fcomp
outs
out
inc
xchg
mov
mov
dec
adc
mov
fcomp
mul
mov
fdivr
out
packuswb
mov
add
mov
cwde
adc
imul
leave
pushf
pop
mov
jg
mov
pop
addr16
dec
push
mov
sahf
into
push
inc
lods
outs
mov
aam
(bad)
pop
jnp
fisub
test
xor
pop
test
push
inc
enter
movs
xor
imul
mov
inc
pop
add
sbb
cmp
mov
cmp
sti
repz
stos
dec
push
retf
hlt
retf
addr16
ss
mov
(bad)
repz
add
and
lds
fucomp
mov
lods
inc
ds
mov
cld
test
jle
xor
inc
(bad)
dec
mov
ret
pop
pop
arpl
mov
ins
test
pop
mov
pop
out
out
xor
pop
mov
out
mov
ds
inc
jg
mov
cmp
mov
test
push
shr
sbb
or
cmp
popa
ins
pop
cmp
xor
cmp
int3
pop
fs
cmp
imul
jno
jge
int
sub
test
fsubr
xchg
lea
push
and
ret
sub
sti
pushf
in
mov
add
cmp
movs
add
mov
retf
int
xchg
sahf
add
int
cli
pop
sar
popa
lods
sar
xor
retf
jmp
fsub
mov
lods
lock
push
add
imul
in
pop
jmp
iret
shl
stc
in
adc
imul
push
fwait
ret
gs
out
inc
and
cmp
retf
cmp
data16
movs
lods
push
xchg
bound
jmp
(bad)
pop
rep
lock
mov
pop
dec
dec
mov
movs
mov
jge
sbb
adc
outs
or
neg
ja
add
jae
arpl
push
xchg
loop
push
adc
lods
cmp
iret
ds
mov
or
icebp
cmp
out
cmps
mov
cmps
jae
dec
xchg
fwait
xor
out
ss
adc
and
mov
pop
call
das
sub
mov
gs
sub
fbld
dec
add
mov
rol
std
aaa
ss
push
pop
adc
pop
lea
mov
stos
stos
arpl
(bad)
outs
adc
jo
ins
sar
jnp
outs
fdiv
mov
inc
aaa
push
lds
lds
inc
jle
adc
movs
and
or
into
aad
jle
mov
retf
cmps
sti
dec
in
push
jo
(bad)
sti
xor
or
retf
cs
aaa
pop
jp
pop
inc
inc
mov
dec
cmp
mov
fwait
loop
push
mov
push
dec
cs
xchg
mov
das
mov
mov
pusha
fmul
mov
ins
(bad)
jo
(bad)
push
into
xchg
cdq
cmps
pop
dec
pop
punpcklbw
add
mov
pop
ss
mov
jecxz
ins
xchg
arpl
mov
or
xchg
sbb
sub
and
imul
xchg
jnp
dec
outs
pop
rcr
xchg
aad
fsub
and
loopne
ja
cmp
dec
cs
mov
call
sbb
stos
outs
fstp
scas
ins
data16
add
push
pop
test
push
aad
in
jmp
ret
gs
xchg
xchg
test
pop
cmp
das
jne
movs
adc
(bad)
pop
dec
mov
sahf
dec
ja
inc
mov
mov
mov
mov
adc
mov
out
sti
pusha
or
adc
imul
cmps
pop
jne
shr
ins
out
imul
test
test
sbb
call
xlat
lock
push
inc
sbb
and
out
mov
pop
pop
ss
pop
xor
clc
sar
test
enter
retf
mov
mov
ffreep
ret
aaa
pop
inc
sub
int3
jbe
mov
sar
xchg
ins
pop
movs
inc
mov
retf
jmp
sbb
jmp
adc
add
loop
sub
push
xchg
push
adc
enter
and
call
mov
mov
(bad)
jb
mov
aam
inc
inc
cmp
mov
lods
xchg
mov
or
mov
clc
xlat
dec
xor
adc
add
mov
cdq
sub
stc
mov
pop
push
rcl
push
outs
daa
pop
(bad)
je
cmp
nop
push
shr
xchg
push
pusha
(bad)
cmpxchg
mov
sub
icebp
mov
arpl
fcmovb
imul
xor
in
cmps
inc
cmp
sbb
inc
dec
inc
add
stos
inc
xor
std
imul
push
retf
cmp
shl
movs
popw
xor
jmp
test
xor
pop
or
es
mov
cli
or
inc
std
out
in
rcr
stc
lods
ins
out
or
call
popa
aas
pop
jge
dec
sbb
imul
cmp
lods
and
mov
mov
xor
jnp
test
sbb
pop
xchg
mov
adc
add
mov
mov
arpl
dec
repnz
pop
outs
cli
rcl
stos
fisubr
xor
jge
retf
cld
add
xor
push
mov
dec
inc
cmp
cmp
fld
and
push
fldcw
inc
sub
sub
jg
std
push
add
dec
fistp
hlt
pop
add
mov
cdq
imul
sbb
out
rcr
jo
inc
cmc
shl
inc
jle
mul
and
push
add
dec
enter
hlt
xchg
imul
jnp
cmp
jo
or
cdq
lahf
int3
mov
test
pop
or
xlat
addr16
ror
ret
sbb
pop
jmp
stc
lock
mov
push
addr16
xchg
push
aad
test
mov
mov
and
(bad)
xor
or
inc
lahf
test
test
ins
cmp
sub
in
or
xchg
cmp
sub
mov
xchg
mov
aam
jp
out
jae
pop
sbb
add
mov
lea
pop
repz
fdivr
mov
call
cmp
jecxz
mov
pop
imul
and
shl
xor
mov
cmps
xor
or
rcl
or
push
mov
adc
ins
xchg
mov
inc
dec
push
ss
adc
jp
xchg
mov
push
fbld
outs
imul
pop
mov
es
ins
inc
or
or
loop
add
loopne
jge
int
jo
fucomp
cwde
sar
cld
test
or
shl
dec
xchg
iret
stc
xchg
sub
jno
ret
pop
jae
cmp
sbb
lods
push
xor
xchg
jle
xchg
popa
mov
fwait
cdq
xor
adc
pop
fidiv
dec
adc
aam
xchg
sbb
and
and
ja
fadd
pop
cmp
lods
into
sti
ss
mov
retf
xchg
in
and
idiv
xchg
(bad)
int
xchg
add
sbb
(bad)
cld
popa
push
jmp
scas
mov
mov
aas
mov
ja
(bad)
xor
adc
and
rol
mov
lods
lds
inc
jno
and
pop
cmp
push
xchg
nop
(bad)
shl
jno
cwde
fmul
and
mul
les
sub
div
mov
dec
jmp
pop
fs
loop
sbb
cdq
neg
out
(bad)
pop
mov
enter
imul
dec
push
fnstcw
mov
into
call
jmp
or
dec
or
cmc
in
daa
(bad)
xchg
(bad)
lahf
pushf
daa
fdiv
enter
inc
aaa
pop
outs
mov
int3
push
pusha
dec
cmp
hlt
push
test
push
fs
mov
add
pop
(bad)
rcl
jb
inc
mov
and
imul
pushf
pop
rcl
mov
and
fnstsw
fmul
cmp
mov
(bad)
loopne
xchg
dec
ins
or
add
call
repz
jno
pop
sub
(bad)
mov
cmc
into
sbb
dec
sbb
add
jbe
sub
sub
and
icebp
push
neg
jmp
or
scas
repnz
aas
scas
test
scas
lea
cli
test
(bad)
jbe
pop
pushf
in
scas
gs
cdq
pusha
popa
lods
adc
and
pop
xchg
popa
scas
push
mov
or
repz
cs
inc
pop
adc
cmps
fndisi(8087
or
jg
jne
push
push
(bad)
daa
es
call
push
cs
xor
enter
cs
in
cmp
imul
pop
iret
push
cld
pop
sub
sbb
ror
or
jae
push
xlat
ins
jne
lods
(bad)
and
push
dec
sbb
sub
jecxz
pop
je
mov
dec
cmp
popa
sub
loope
xor
inc
add
inc
ins
push
test
pop
sbb
mov
and
(bad)
in
pushf
movs
and
iret
push
out
and
xchg
inc
cld
enter
or
arpl
xor
mov
clc
adc
daa
out
xlat
in
mov
mov
jb
sub
fistp
dec
cmp
sbb
push
arpl
inc
das
adc
ja
push
lock
fidivr
ja
sub
and
xchg
or
push
xor
mov
out
cmp
cmps
repnz
mov
inc
loope
pop
fidiv
dec
cmp
popa
mov
jg
ret
dec
push
xor
dec
push
hlt
xchg
(bad)
je
in
stos
push
aaa
inc
mov
inc
xchg
dec
scas
jg
int
je
out
pushf
and
add
jns
stos
dec
lahf
push
cmps
and
jo
mov
pop
out
and
or
mov
sbb
xor
jbe
es
popf
sar
mov
xor
pop
adc
sub
pop
cmp
retf
mov
popa
idiv
sub
xchg
jmp
ror
dec
xchg
dec
mov
dec
sub
cmps
unpckhps
adc
cmp
int3
dec
pop
test
jecxz
xor
xchg
dec
jecxz
sbb
sub
(bad)
shr
and
push
mov
mov
jecxz
mov
sti
pop
repnz
mov
cmps
enter
or
outs
lods
je
sub
lods
clc
jmp
arpl
and
mov
add
and
mov
cmp
sbb
mov
add
push
adc
outs
push
cwde
adc
adc
xor
fnstcw
ret
(bad)
shl
(bad)
cmc
jnp
push
repnz
outs
mov
and
mov
lock
cmc
inc
sbb
cdq
rcl
int
mov
ror
xor
or
out
js
jne
loope
pop
mov
scas
and
pushf
in
sbb
out
jo
call
push
(bad)
dec
int
fldcw
in
push
movs
daa
cli
mov
sub
outs
jo
dec
mov
push
sub
cmp
test
cmp
pusha
and
rol
pop
rcr
mov
xor
cwde
std
inc
pop
nop
pushf
mov
(bad)
mov
sahf
xchg
aaa
inc
sti
arpl
ja
mov
data16
js
push
jnp
nop
adc
push
mov
xchg
mov
sub
ja
jecxz
sub
cmps
ins
sbb
pop
inc
rol
enter
imul
lds
(bad)
stos
aaa
push
(bad)
dec
jo
cmp
cwde
cmps
cmp
and
bound
das
jge
loopne
or
les
pop
cmp
jo
cmp
mov
movs
in
mov
(bad)
iret
enter
mov
pop
push
add
rol
jne
push
fwait
cld
stos
adc
gs
dec
retf
xor
lds
sahf
retf
fiadd
inc
arpl
push
arpl
push
cmp
fldcw
into
xchg
mov
stc
push
rcl
test
xlat
cli
enter
cmc
push
fs
retf
push
jbe
jg
mov
ss
inc
out
dec
sbb
mov
xor
dec
add
(bad)
(bad)
cmp
fst
outs
add
shr
fsubr
xor
push
clc
lock
test
or
cwde
sbb
xchg
mov
inc
mov
adc
pop
les
in
push
mov
jo
pop
xorps
xor
mov
sub
pop
push
mov
push
jo
inc
add
pop
loopne
xor
das
shl
aaa
scas
movs
cmps
adc
and
vcvtsi2ss
lds
mov
(bad)
bound
mov
mov
push
cld
lock
lods
in
sub
(bad)
mov
sbb
mov
jno
ret
das
cmp
cmp
xchg
mov
out
sub
enter
fbstp
mov
(bad)
outs
jl
popa
shr
jmp
xor
push
mov
mov
pop
test
and
inc
xchg
xor
and
lock
pop
lds
mov
jno
xchg
pop
cs
ror
sub
mov
mov
(bad)
in
(bad)
ror
std
out
test
dec
sbb
ins
inc
ror
outs
dec
(bad)
stos
mov
nop
push
aad
xchg
in
out
inc
jnp
sbb
mov
in
in
or
jo
lods
(bad)
stc
fmul
sub
dec
div
hlt
pop
or
mov
loop
lahf
and
adc
call
and
nop
call
pop
sub
jg
pusha
jmp
push
dec
scas
sub
lahf
xlat
sbb
jg
mov
shl
fs
xor
ds
lahf
das
call
out
movs
test
retf
shr
aaa
add
in
add
popa
cmp
shr
sub
imul
ds
add
dec
sub
(bad)
pop
mov
sub
jle
cmp
xchg
into
(bad)
fsub
int3
int
push
pop
ja
mov
arpl
shl
rcl
mov
int
cmp
sahf
sub
imul
inc
sub
in
sub
push
loop
fimul
and
xor
mov
cmps
push
xor
ds
dec
je
mov
imul
stos
lea
inc
lods
paddsb
mov
add
mov
and
inc
es
jb
push
sub
ja
ss
push
sahf
mov
adc
fs
fs
mov
out
jle
clc
iret
dec
das
(bad)
push
ret
mov
adc
sti
(bad)
sti
xchg
or
and
cmp
xlat
lods
ins
hlt
cmps
lea
push
mov
push
leave
pop
jae
xlat
aaa
fadd
ja
dec
or
and
sbb
jo
out
std
mov
mov
shl
jle
cmps
mov
or
add
and
cmp
mov
push
in
and
xor
lahf
jns
ret
jbe
test
test
mov
xor
sahf
pop
pop
and
mov
ror
inc
dec
inc
fnsave
outs
inc
jbe
and
sbb
je
push
mov
pop
adc
pop
cmp
xlat
ret
daa
stc
mov
pop
aam
out
sub
cmp
ja
out
jns
das
cmps
pop
retf
pause
add
mov
adc
inc
icebp
mov
test
cmps
mov
adc
dec
jae
mov
dec
or
sbb
aaa
clc
pop
and
mov
mov
mov
sub
shr
test
les
loope
sbb
or
sbb
pushf
add
cmp
call
and
pop
push
push
adc
gs
int3
sub
push
(bad)
xchg
rcr
(bad)
fidivr
lods
clc
push
xor
aas
idiv
jne
repnz
pop
ja
dec
mov
or
shr
dec
xor
sar
cmp
out
cmp
adc
lods
je
fsub
mov
es
rol
mov
pop
imul
sub
cmps
cmc
in
dec
movs
pop
in
shl
cmp
or
scas
test
es
mov
cmp
sub
cwde
test
shl
pushf
dec
sbb
test
push
in
jb
dec
sahf
pop
inc
mov
xchg
call
into
std
loop
mov
lods
mov
jmp
int
in
inc
mov
push
test
jnp
cmp
and
gs
xor
mov
lods
(bad)
in
fadd
test
int
push
adc
cmp
scas
jmp
mov
sub
xor
outs
popf
idiv
xchg
into
mov
or
arpl
in
and
cmp
mov
xchg
loopne
stc
pop
(bad)
call
rcl
shr
adc
push
test
xchg
xchg
(bad)
stos
loop
adc
mov
xchg
pop
rcr
inc
xchg
inc
sbb
out
movs
test
mov
jbe
call
cmp
jno
dec
in
je
mov
jmp
(bad)
out
push
xor
data16
adc
imul
fisttp
jmp
and
out
gs
imul
loopne
xchg
shl
xchg
dec
dec
in
jns
lods
jle
or
(bad)
xor
lds
jb
ficom
add
test
jle
clc
adc
jg
test
pop
pop
in
(bad)
fbstp
pop
or
dec
test
jae
xchg
aad
arpl
shr
inc
pop
jg
dec
rcr
push
sbb
pop
jb
xchg
leave
cmp
push
mov
mov
jmp
repz
xor
cmps
mov
(bad)
pushf
mov
mov
stos
sbb
add
or
ret
movs
xlat
jmp
pmaddwd
pop
sahf
or
sub
mov
int
scas
push
pop
outs
sbb
int3
mov
adc
mov
call
or
push
xchg
xchg
adc
xor
mov
ds
cdq
xchg
ins
movs
stos
add
in
std
pop
icebp
fsubr
cmp
dec
add
fwait
push
mov
outs
movs
and
pop
loope
imul
mov
xor
adc
jno
(bad)
or
dec
test
xor
cli
int3
ss
mov
xor
outs
jg
in
in
fist
jb
dec
(bad)
(bad)
out
push
add
inc
popf
push
stos
rol
push
scas
jge
push
daa
mov
lods
add
sti
jbe
(bad)
iret
sub
xchg
out
mul
add
sub
dec
cmp
repz
imul
mov
adc
in
and
into
and
sbb
stc
sub
cmp
daa
sbb
retf
inc
cmc
mov
and
jae
aaa
sbb
xor
dec
fld
inc
push
jmp
shr
fsub
add
cwde
rcl
outs
xchg
add
rol
idiv
jo
mov
outs
jns
mov
sbb
inc
pop
jbe
aam
mov
jmp
dec
jne
aad
popa
aam
call
stos
inc
stos
daa
adc
movs
es
pop
sub
jne
xchg
mov
cmp
push
mov
repz
jno
psubsw
inc
popa
push
retf
loopne
pop
sub
addr16
mov
in
jle
mov
mov
mov
mov
xchg
mov
mov
iret
aad
cdq
add
(bad)
push
xchg
call
sbb
or
mov
enter
push
out
(bad)
pop
in
(bad)
mov
inc
add
cmps
mov
aad
(bad)
out
jno
fsubr
(bad)
sbb
sti
or
xchg
add
imul
(bad)
and
sti
(bad)
push
out
or
sbb
xchg
movs
cmp
xlat
cs
mov
(bad)
and
mov
sub
inc
pushf
and
mov
cmc
(bad)
in
cld
mov
iret
lock
push
cmp
mov
xchg
mov
push
(bad)
cmp
jmp
andnps
cmp
ja
call
mov
dec
mov
movs
mov
test
xor
mov
scas
cdq
les
js
ret
(bad)
mov
cmps
xor
push
repz
into
pop
scas
daa
sub
test
sbb
push
dec
and
(bad)
fucom
mov
xchg
add
and
push
fcmove
mov
outs
push
mov
push
idiv
push
jmp
sahf
pop
ja
pop
(bad)
fmul
pop
mov
and
shr
mov
cwde
cld
clc
retf
test
xchg
test
sahf
xchg
das
xchg
repnz
pop
push
loopne
dec
fnstcw
mov
popa
add
mov
inc
sbb
xchg
pop
mov
pop
pop
data16
cdq
jbe
cs
and
push
mov
les
leave
pop
retf
int3
test
pop
jo
stc
nop
sub
push
push
loopne
jecxz
xor
or
mov
mov
jno
sub
add
sub
lods
adc
dec
sub
in
sbb
mov
fistp
inc
mov
fsub
xchg
xor
sub
pop
stc
fsubp
push
test
outs
push
sub
fld
mov
popa
pop
add
xchg
dec
popa
xor
adc
fstp
add
mov
imul
shr
xor
xchg
mov
dec
(bad)
dec
dec
adc
xchg
xchg
dec
jno
retf
js
pop
or
mov
pop
push
mov
shr
lock
jno
sub
test
xchg
dec
xor
leave
push
into
repz
adc
sub
push
dec
ss
sar
mov
adc
add
pop
xor
loopne
mov
scas
cmp
inc
test
lea
shr
aaa
jmp
aas
lods
mov
call
xor
jge
mov
sub
pushf
aam
mov
vpmacssdd
mov
mov
aaa
jo
mov
daa
out
push
retf
or
push
fisttp
neg
adc
ins
sub
cdq
pop
(bad)
rcl
retf
sbb
push
mov
fcomp
add
test
jae
mov
mov
mov
call
jecxz
out
inc
xchg
in
cld
xchg
dec
lods
pop
lods
cmp
test
inc
mov
push
dec
mov
in
(bad)
mov
mov
mov
dec
in
inc
sbb
int
mov
push
dec
adc
test
pop
cmp
cmp
je
xchg
ja
and
dec
add
mov
cmp
outs
stos
push
in
mov
dec
push
ja
fdivrp
dec
fisubr
sbb
push
sub
aas
push
retf
pop
mov
ds
mov
std
mov
clc
push
pusha
std
push
add
scas
dec
lock
mov
mov
je
loopne
jno
dec
cmp
into
push
push
ret
or
push
jecxz
mov
inc
scas
adc
adc
sbb
cdq
nop
push
push
sbb
pop
retf
in
sti
jne
adc
call
xchg
cmp
sub
arpl
pop
in
lock
cmp
cmp
xor
out
xchg
loopne
add
xor
(bad)
push
mov
push
rcl
or
in
adc
mov
jne
inc
cmps
sub
push
inc
(bad)
sahf
inc
mov
lock
xor
call
and
(bad)
out
adc
ja
xchg
inc
push
iret
inc
inc
mov
lock
sub
or
call
stos
xchg
sub
aaa
and
outs
(bad)
jmp
cmps
mov
sbb
ds
(bad)
push
push
cld
rcl
mov
pop
mov
xor
add
pop
pop
jo
pop
fisub
(bad)
sub
sub
out
int
mov
xor
popa
cmp
test
xchg
jmp
(bad)
mov
popa
add
xor
mov
out
cmps
shr
and
mov
not
dec
or
pop
jmp
jp
push
or
fst
cmp
imul
push
in
iret
ss
sahf
scas
ret
sub
xor
test
mov
arpl
icebp
push
and
jae
add
xor
sub
sub
pop
ja
cwde
pop
cld
mov
xchg
test
or
xor
add
pop
jecxz
cmp
xchg
xor
push
gs
jns
sbb
or
int3
aad
push
popa
xchg
adc
push
inc
inc
pop
inc
out
mov
call
fst
pop
jg
and
push
add
xchg
rol
(bad)
pushf
xchg
push
adc
in
mov
cmp
pop
xor
inc
dec
js
pop
mov
push
ins
sbb
push
jb
es
fst
inc
frstor
inc
scas
push
ins
inc
inc
jb
(bad)
adc
cmps
mov
fstp
adc
push
movntq
jnp
cld
gs
mov
cmp
retf
mul
or
inc
mov
mov
adc
xchg
dec
cmp
xor
lock
es
cmp
out
js
loopne
lds
aas
sbb
rol
add
lods
xchg
shl
mov
out
popf
pop
mov
cmps
push
cli
mov
mov
inc
jno
stos
push
xchg
dec
sti
out
dec
push
and
mov
push
cmp
jge
in
mov
inc
ds
cmp
mov
xchg
push
dec
jecxz
jns
mov
xchg
mov
pop
and
test
loop
mov
mov
psllw
push
pop
inc
enter
or
call
arpl
xor
and
mov
mov
pop
sbb
cmp
sub
push
out
mov
inc
inc
mov
pop
retf
rol
stc
ds
mov
mov
jmp
iret
nop
mov
fnstsw
loope
ds
inc
scas
repz
pop
mov
cld
popa
inc
aas
cmp
aad
lock
sti
ins
xchg
sbb
or
clc
movs
pop
cld
scas
imul
hlt
out
adc
shl
push
dec
push
jecxz
mov
or
jae
jns
jg
pop
jae
rcr
mov
inc
dec
test
(bad)
push
sahf
arpl
mov
mov
xor
ret
push
aad
in
pop
jae
stos
dec
bound
dec
in
add
add
in
mov
pop
inc
jo
adc
add
leave
mov
neg
pusha
xor
dec
adc
cmp
mov
pop
into
nop
add
mov
out
sar
add
out
pop
scas
xor
push
daa
and
shl
mov
out
test
inc
mov
fst
das
fnsetpm(287
mov
sub
sti
and
and
pop
leave
mov
sar
mov
mov
enter
sbb
mov
in
add
push
pop
push
dec
mov
sub
xor
mov
sub
push
dec
shr
sub
or
adc
mov
mov
sti
repz
xor
jbe
and
cli
mov
out
mov
out
xchg
loope
loope
and
aad
jnp
imul
push
bound
sub
add
add
in
ins
mov
sub
inc
inc
or
cmp
jge
test
ss
xor
and
cmps
cmp
jbe
xor
mov
sbb
xor
cwde
daa
leave
sti
mov
inc
add
stos
add
adc
pop
mov
int
icebp
adc
stos
sub
sub
ins
fsin
dec
jno
add
out
push
ins
jne
(bad)
adc
cli
cmps
inc
mov
inc
es
mov
xor
stos
call
fldenv
or
mov
mov
dec
inc
out
ins
daa
imul
pop
aaa
mov
jmp
fnstsw
in
scas
add
in
inc
jne
(bad)
fidivr
test
mov
inc
mov
mov
push
xchg
jmp
dec
push
fldenv
scas
xchg
aaa
add
push
stos
push
lfs
push
jl
dec
mov
(bad)
lds
sbb
ds
pop
in
aaa
jecxz
cdq
sbb
retf
mov
loope
mov
add
xchg
jmp
pop
jae
ins
stos
adc
lock
push
mov
xor
mov
adc
in
retf
jg
xor
lods
lods
clc
fnstsw
std
popa
lods
jnp
aaa
xor
sbb
adc
mov
adc
cmp
push
scas
xchg
(bad)
int3
sub
outs
in
xchg
jae
xchg
xchg
fs
push
jmp
(bad)
xchg
hlt
cmps
inc
gs
xchg
inc
adc
inc
mov
gs
mov
push
sbb
mov
push
jnp
add
dec
xor
lahf
pusha
pop
test
xchg
xor
es
push
mov
push
retf
out
cdq
out
mov
xlat
or
cmp
or
or
pop
cmp
pop
pop
call
iret
sub
pop
movs
pushf
je
popf
inc
sti
int
cmp
out
neg
bound
adc
inc
inc
in
aad
popa
test
mov
or
out
ret
push
adc
dec
ficom
mov
mov
add
cmc
mov
js
gs
mov
aas
mov
push
and
aad
cli
adc
int
fst
mov
cs
in
xor
int
pop
dec
and
pop
inc
popf
call
and
int
jnp
cmps
js
inc
rcr
popa
or
ret
push
add
push
arpl
add
imul
retf
inc
pop
(bad)
cmp
pushf
push
movs
mov
pop
test
jge
mov
inc
xchg
scas
ret
jns
into
add
sbb
call
icebp
lods
test
pop
frstor
and
int3
outs
aaa
cmp
fxch
ins
xor
add
xor
out
mov
cmp
mov
push
pop
into
stos
into
sar
dec
xchg
xor
xor
dec
sahf
imul
int
cmp
pop
xchg
in
add
jecxz
aaa
adc
cmp
jle
bound
sbb
sub
outs
add
and
icebp
fnstsw
and
xor
mov
bound
scas
das
sbb
xchg
add
iret
push
(bad)
pusha
out
mov
addr16
dec
fbstp
and
jmp
xor
out
pushf
cmps
mov
in
div
sbb
cmp
dec
adc
dec
and
pop
stc
inc
test
arpl
out
or
cmps
jle
popa
and
or
pop
dec
out
in
mov
or
mov
xor
pusha
adc
mov
mov
cld
sub
loope
jnp
ins
jo
sub
test
mov
div
int3
add
loop
clc
aam
clc
pop
ror
ror
popa
mov
or
das
push
sub
inc
inc
div
mov
jmp
imul
or
and
pop
mov
adc
pop
xor
cmp
cwde
inc
jl
push
fdivr
das
imul
pop
fcomp
(bad)
js
and
(bad)
out
dec
std
push
loopne
mov
inc
movs
sahf
into
mov
and
dec
ffree
add
es
out
jae
rcr
js
jae
or
arpl
dec
sbb
or
pop
int
ss
xor
push
repz
mov
sbb
mov
out
and
jne
lds
adc
ins
dec
pandn
jecxz
popa
inc
mov
pop
leave
jmp
fwait
cs
sub
repnz
push
cmc
out
pop
xchg
cs
stos
out
jo
sti
xchg
ins
rol
stc
adc
inc
jne
and
inc
add
test
cs
mov
fst
push
xor
mov
repnz
scas
sub
es
scas
pop
pop
repnz
stos
jecxz
outs
jb
dec
jae
repz
or
pop
not
and
adc
dec
mov
test
jne
repnz
xor
lods
mov
out
mov
sub
fcomp
sub
das
ret
mov
adc
mov
xchg
xlat
leave
cmps
rcl
test
data16
not
(bad)
lods
ss
sbb
push
adc
mov
or
in
mov
mov
movs
ins
jmp
fdivr
adc
in
inc
jns
(bad)
fs
aas
mov
je
(bad)
(bad)
test
pop
pop
call
lds
out
add
cmps
jae
fdiv
mov
test
add
sahf
dec
pop
outs
shl
out
loop
xchg
push
dec
ficom
xchg
ds
test
push
iret
daa
cdq
stos
push
ror
mov
arpl
loope
xchg
add
outs
arpl
xchg
movs
mov
or
cmp
mov
push
outs
sbb
scas
cwde
add
adc
and
add
pop
xchg
adc
jno
test
int
mov
aas
xchg
lods
scas
js
in
out
cwde
(bad)
fstp
or
movs
or
add
sub
cmps
mov
sbb
mov
jmp
inc
outs
fisub
sub
jae
mov
and
mov
pop
adc
or
inc
and
out
cs
adc
stos
jp
or
mov
cdq
dec
mov
stos
xchg
test
jecxz
add
pop
push
or
sbb
mov
repz
add
mov
mov
inc
popa
int
xchg
cmc
out
aas
sti
call
(bad)
imul
xchg
sub
sub
or
add
xor
rcr
adc
mov
inc
mov
push
aam
sub
sub
sbb
jmp
cmp
fld
(bad)
dec
leave
call
inc
jecxz
pop
sbb
or
inc
jno
jne
mov
push
inc
rcl
movs
inc
pop
cmp
jae
inc
stos
(bad)
lods
jecxz
ss
inc
stos
mov
dec
call
xchg
in
mov
ins
jg
mov
ror
fwait
repnz
repz
push
cmp
imul
add
aam
mov
mov
adc
xor
stc
add
sub
enter
push
xor
mov
push
mov
sbb
lahf
or
or
mov
xor
mov
sbb
push
jb
mov
mov
sbb
popf
test
hlt
jmp
xor
les
stos
int3
sub
clc
jle
ss
add
fwait
cwde
adc
cmc
and
xchg
sbb
push
inc
daa
push
push
clc
adc
sub
jo
test
mov
sbb
outs
cmp
push
jno
or
in
cmp
dec
ss
pop
sub
aam
dec
cmp
push
fisubr
pop
in
mov
lahf
aaa
add
test
cwde
out
inc
bound
sub
jmp
mov
xor
out
fisttp
mov
nop
movs
mov
mov
imul
addr16
mov
add
push
ins
cmps
xchg
out
inc
test
mov
jmp
stos
jmp
pop
and
mov
sahf
adc
mov
add
mov
out
stc
xor
mov
xchg
fwait
and
push
mov
cmp
adc
push
pop
sbb
jns
cli
call
pop
push
xchg
mov
dec
mov
or
dec
push
sbb
mov
sbb
xor
xchg
mov
rcl
(bad)
push
xchg
addr16
fcomp
jl
inc
sbb
jb
fnstenv
fmul
add
pop
outs
hlt
mov
inc
(bad)
scas
jnp
xor
popa
add
enter
int3
and
mov
shl
pop
cs
inc
mov
ror
push
cli
fild
aam
(bad)
or
out
or
das
jnp
mov
mov
jge
cmps
daa
rcr
and
jne
std
stos
fs
dec
pop
xchg
cmp
pop
and
xor
mov
dec
pop
mov
scas
mov
mov
cwde
retf
lea
psraw
sub
in
dec
clc
in
push
cli
mov
loop
fld
in
lds
xor
mov
jmp
in
sbb
(bad)
sti
in
mov
cmp
ss
arpl
popf
jl
shl
or
ror
loopne
pop
mov
outs
rol
bound
call
popf
popf
mov
movs
adc
xor
and
imul
fidiv
lods
icebp
(bad)
lods
scas
rol
cmps
in
fisubr
addr16
scas
add
std
test
mov
xor
dec
test
inc
daa
mov
jne
adc
out
repz
movs
adc
rcr
cli
inc
out
xchg
mov
retf
and
imul
aam
test
test
fs
mov
fst
sar
ficom
rcr
aaa
cmc
sub
jns
push
and
and
(bad)
jb
mov
and
sbb
arpl
sbb
xchg
das
data16
xchg
jl
or
dec
cmp
pop
jmp
cld
cwde
jbe
mov
rol
aam
test
ret
mov
cmps
mov
lods
scas
shl
std
xor
sub
dec
xchg
mov
sub
lds
ret
(bad)
xor
les
daa
add
popf
repz
mov
inc
loope
xchg
adc
xlat
adc
test
movs
cli
je
das
push
fldln2
in
ss
stos
pop
call
sub
fstp
rol
(bad)
xor
and
jae
and
and
sub
mov
mov
mov
(bad)
pop
and
add
cmp
inc
hlt
mov
push
inc
xor
cmp
outs
cs
dec
cs
inc
cmp
pop
scas
add
or
mov
stc
retf
fwait
popf
imul
push
cmc
xchg
repnz
sbb
add
pop
ins
jle
cmps
inc
in
inc
push
(bad)
or
hlt
cmp
or
mov
retf
sbb
ss
add
aam
xor
int3
(bad)
aam
cld
adc
nop
(bad)
cmps
xor
es
mov
ss
lods
add
add
sub
xor
cmp
lods
cli
jbe
sbb
repnz
sub
push
scas
xchg
in
fst
fidiv
push
test
or
cmp
mov
mov
imul
push
loopne
add
pop
in
push
sub
jne
pusha
and
push
fcom
jg
aas
push
mov
mov
mov
dec
inc
sar
push
hlt
inc
pop
cmp
ret
movs
lods
xor
pop
ss
lock
les
mov
shl
add
das
sti
xchg
jmp
mov
jmp
xchg
mov
repnz
push
xor
cmp
mov
popf
cmps
stc
push
sbb
and
pop
js
cmps
popf
mov
add
sbb
inc
cmp
loopne
or
push
pop
pusha
inc
pop
and
pop
data16
hlt
rol
push
(bad)
xor
imul
mov
push
inc
dec
xor
pop
or
cwde
lahf
shr
fisubr
mov
addr16
inc
pusha
fisub
popf
mov
mov
xrstor
xor
mov
addr16
sub
xor
mov
mov
(bad)
enter
pop
mov
or
push
into
xchg
jp
dec
push
dec
das
pop
cmp
mov
lods
or
mov
mov
gs
aad
jb
test
jne
xlat
xor
push
and
lock
imul
mov
loop
shl
pop
gs
(bad)
out
jmp
adc
test
xchg
arpl
add
xor
addr16
inc
repnz
rcr
mov
(bad)
jae
repz
lods
(bad)
and
(bad)
imul
enter
jns
mov
xor
mov
sbb
pop
movs
test
pop
mov
(bad)
xchg
jmp
mov
cmps
push
mov
cwde
dec
js
pop
adc
or
sub
sub
add
mov
fwait
test
(bad)
popa
scas
inc
jnp
jp
pop
cdq
xchg
or
push
rcl
mov
or
dec
jbe
call
mov
dec
frndint
pushf
dec
xchg
cld
cli
sahf
jecxz
or
or
mov
dec
mov
cmp
mov
(bad)
mov
shl
inc
loopne
repnz
xor
or
fld
pop
jp
adc
sbb
(bad)
jmp
fcom
dec
ja
aad
mov
xchg
mov
imul
fisub
std
or
mov
inc
lods
mov
mov
movs
xchg
cli
scas
cmp
dec
retf
pop
movs
cmp
mov
push
and
add
sbb
retf
cmp
and
jle
inc
jmp
mov
pop
call
adc
popa
sbb
fs
sti
pusha
mov
mov
in
lods
cmp
clc
lods
mov
cld
ja
cmc
(bad)
mov
ss
and
in
jle
stc
rol
cwde
and
pop
out
addr16
jg
inc
push
shr
sub
add
sub
stos
das
fstp
push
push
(bad)
movs
fwait
mov
mov
lods
and
inc
sti
mov
or
outs
inc
das
ins
cwde
xor
jp
aaa
int
xchg
stos
xchg
out
dec
in
call
lea
adc
dec
arpl
fsubr
aad
retf
inc
test
pop
adc
clc
inc
int
push
or
mov
in
add
mov
arpl
push
adc
das
cmp
mov
mov
out
cmp
fs
in
xchg
mov
icebp
or
xchg
xchg
arpl
jmp
retf
mov
cli
les
hlt
mov
rol
scas
pop
enter
aas
push
out
jecxz
into
or
test
and
jmp
loopne
ins
mov
jmp
push
sbb
and
cmp
pop
cmp
mov
lods
es
ror
clc
imul
icebp
(bad)
mov
(bad)
fist
fcom
add
pop
je
jl
mov
mov
test
inc
mov
fsub
mov
mov
out
int
mov
pusha
mov
dec
cmp
cld
pop
leave
sub
push
rol
inc
inc
sbb
cmp
mov
push
aam
and
outs
xchg
aas
mov
push
adc
push
jns
stos
repnz
mov
jecxz
inc
ja
fs
out
fidivr
jnp
in
or
sbb
sub
push
cli
int
push
and
std
push
jae
stos
stos
cdq
push
data16
or
cmps
das
inc
neg
lock
out
and
in
jo
and
mov
ret
jo
mov
shl
out
dec
fadd
inc
cmc
jle
mov
mov
xor
sub
sbb
enter
and
xchg
movs
jmp
push
lea
les
adc
jae
mov
inc
inc
cwde
lahf
movs
cmp
mov
in
mov
sub
scas
xor
inc
push
popa
lods
fdivr
or
popf
(bad)
dec
aad
ja
mov
xchg
hlt
icebp
inc
call
jl
dec
popf
addr16
mov
ret
fcom
xchg
fcomi
xor
ror
pop
iret
add
lock
(bad)
push
dec
test
adc
xchg
dec
mov
dec
test
mov
add
lds
push
add
cld
scas
and
mov
fcmove
stos
pop
sub
mov
repnz
aas
sbb
sub
mov
ins
inc
out
(bad)
out
fdiv
jecxz
sub
cmp
arpl
jnp
add
nop
inc
sbb
jb
xchg
inc
hlt
fbstp
sub
adc
scas
pop
stos
test
xor
push
sbb
movs
sar
(bad)
movs
repz
dec
add
in
xor
and
pop
mov
data16
cmp
jmp
pop
out
push
sbb
cmps
mov
mov
ins
or
(bad)
nop
aas
push
pop
(bad)
or
jbe
mov
sbb
call
sbb
(bad)
jle
pop
xor
retf
and
call
(bad)
jns
jge
inc
retf
(bad)
add
sub
mov
jmp
test
ins
push
cmp
xor
ret
fcomp
out
in
mov
idiv
mov
shr
push
fdecstp
sahf
pop
or
sbb
xor
mov
lea
into
dec
sbb
mov
icebp
sub
inc
aam
pop
or
test
mov
dec
fld
inc
inc
popa
add
in
mov
mov
leave
pusha
dec
ret
xor
pmuludq
out
hlt
xchg
adc
add
stos
and
adc
push
push
arpl
fsub
mov
int3
(bad)
pop
mov
cmp
ins
jns
lods
pop
or
dec
xchg
or
dec
ret
pop
mov
movs
mov
jmp
or
or
ret
cdq
cmp
adc
popf
cmps
in
cmps
(bad)
fisubr
daa
inc
jb
rol
jbe
fidivr
cld
push
into
jns
lea
and
cmp
add
cmc
ja
stos
imul
aas
mov
adc
out
xchg
dec
test
scas
dec
inc
cmp
add
js
mov
int
mov
dec
mov
fdivr
sub
movs
ins
inc
mov
mov
push
pop
sbb
xor
add
fs
fdivp
cmps
xor
xchg
jmp
mov
addr16
out
daa
adc
add
pop
xchg
dec
jns
test
sub
int3
sar
sahf
lods
in
jns
mov
dec
push
mov
sbb
punpckhwd
push
xor
or
or
pop
into
scas
repnz
mov
popf
or
stos
push
jbe
out
addr16
mov
push
call
mov
xlat
iret
lahf
sub
sub
scas
fisubr
sub
or
mov
add
or
dec
aas
shl
xchg
cmp
ret
dec
adc
lahf
push
or
mov
sub
xor
icebp
jmp
repz
push
pop
xor
mov
adc
pop
push
mov
xor
push
add
xor
cmps
ror
(bad)
shr
dec
test
jno
cmp
fdivr
adc
hlt
scas
mov
ins
out
orps
and
mov
cmp
stos
inc
dec
push
pop
xchg
or
xchg
inc
lock
loopne
mov
add
jmp
imul
xchg
sbb
pop
sbb
iret
adc
jl
jbe
and
push
es
mov
out
sub
hlt
bound
and
or
or
adc
movs
out
mov
mov
pop
lock
or
xor
mov
mov
jae
arpl
jne
mov
push
fsubr
pop
hlt
mov
cmp
adc
mov
sub
int
pop
mov
fiadd
sub
popf
or
jmp
loop
shr
cmps
adc
aad
cmp
mov
adc
add
jns
movs
inc
loopne
pop
popa
inc
dec
push
mov
jmp
in
daa
xchg
rcl
jae
cwde
push
aas
(bad)
or
sbb
popa
(bad)
xchg
popa
mov
xor
sub
push
rcr
stos
sub
stos
lods
mov
push
rcr
push
movsx
fimul
adc
sar
mov
lahf
ja
sahf
mov
shr
push
mov
aaa
mov
rcr
hlt
xchg
cs
lahf
mov
push
fld
cmp
fcomp
sti
lods
loopne
xchg
aas
iret
in
push
push
xor
movs
in
push
pop
jns
fwait
sbb
push
retf
shr
cmp
add
rcr
mov
clc
sbb
jecxz
xchg
push
mov
fwait
retf
adc
fst
fs
dec
mov
add
push
imul
bound
mov
sub
add
xor
in
les
pop
test
jo
cmp
or
jl
retf
ror
jg
stos
aaa
jecxz
xchg
movs
imul
cmp
and
cmp
dec
js
and
cmps
clc
int
call
rcl
std
xor
loope
cmc
dec
ror
sbb
dec
mov
jno
daa
outs
push
leave
adc
das
xchg
js
jle
mov
and
push
pop
add
aam
cmps
loopne
xchg
out
add
aam
lock
and
out
mov
aam
jmp
cld
mov
inc
aas
test
jge
in
mov
aad
dec
mov
int3
pop
pop
and
outs
sar
cdq
inc
ja
outs
out
push
adc
fucomip
dec
mov
retf
xchg
cli
out
das
inc
dec
stos
jmp
jnp
xor
xchg
mov
cmp
push
jle
pop
sahf
in
mov
add
mov
mov
mov
imul
aam
and
mov
fsubr
cwde
mov
jne
ins
dec
xor
and
jae
lahf
lods
xchg
pop
or
xor
fnstenv
ss
imul
mov
push
sahf
nop
cs
pop
xor
pop
push
mov
inc
retf
fwait
jae
ret
rcl
outs
push
fdiv
adc
sbb
loopne
ins
ins
xor
lods
enter
inc
mov
scas
stos
mov
push
ins
sub
test
and
test
xchg
pop
jle
push
mov
fsubr
cdq
pusha
mov
mov
clc
mov
mov
push
mov
and
push
int
mov
sbb
xor
or
shr
xchg
mov
call
push
mov
cmp
ret
push
rcr
gs
xchg
cld
sbb
or
out
mov
into
mov
mov
mov
mov
xchg
xchg
xchg
jae
sbb
add
jno
fmul
mov
je
push
push
movs
xor
add
mov
jle
ss
idiv
fsub
popa
mov
test
sti
in
xor
mov
sahf
mov
ja
in
mov
mov
clc
mov
mov
mov
das
mov
mov
mov
fldenv
and
pop
out
shr
(bad)
pop
test
push
repnz
push
inc
pop
jg
pop
test
pop
push
mov
push
mov
cmp
push
nop
pop
loope
pop
add
push
xor
pop
dec
adc
out
push
pop
xchg
xor
xchg
mov
mov
imul
mov
xchg
aam
jns
xor
cs
dec
movs
pushf
out
aad
sbb
sbb
adc
hlt
es
out
add
fild
loop
(bad)
push
clc
es
cli
mov
pusha
inc
in
inc
out
xchg
pop
movs
sbb
daa
xchg
aas
sbb
adc
das
jae
jl
mov
(bad)
pop
and
in
jl
mov
repz
bound
jo
adc
nop
in
icebp
push
loopne
les
lahf
fbstp
jnp
pushf
dec
punpckhwd
push
inc
inc
jbe
ret
mov
retf
push
imul
test
loopne
jbe
mov
add
in
lea
outs
jnp
ins
push
xlat
add
and
out
dec
jle
sub
clc
sub
or
jne
pop
dec
mov
loope
mov
pop
sub
push
int
mov
sbb
neg
sub
out
jmp
fild
xchg
stc
inc
movaps
mov
movs
sbb
addr16
sbb
movs
int3
jmp
dec
not
push
fld
nop
stos
jle
pop
push
pop
mov
jmp
aad
add
(bad)
cs
cmp
push
popa
pop
in
adc
fwait
adc
pop
imul
test
pop
mov
mov
imul
fimul
push
lock
iret
jns
imul
gs
ins
sbb
(bad)
repz
movs
jne
js
sar
ja
push
aam
push
push
pop
out
add
daa
outs
jb
icebp
call
or
mul
pop
loop
loop
not
test
sbb
fstp
pop
jmp
add
hlt
dec
ds
sti
sbb
test
pop
arpl
nop
test
mov
lods
inc
xchg
daa
fwait
jmp
clc
inc
dec
repnz
adc
cs
adc
mov
jb
bound
cmc
(bad)
sbb
pand
fistp
or
adc
in
or
jae
out
dec
jno
adc
add
mov
mov
call
adc
jo
push
leave
int3
and
sbb
mov
test
xchg
mov
mov
pop
pop
retf
imul
xchg
(bad)
push
dec
sbb
xchg
add
pop
sub
scas
dec
push
iret
mov
call
xchg
mov
imul
mov
and
mov
not
push
enter
retf
push
btr
mov
into
movs
mov
in
sub
jns
sti
std
popf
and
cli
push
pop
(bad)
jmp
sbb
xchg
or
(bad)
mov
pop
gs
(bad)
stos
adc
inc
xchg
ds
nop
adc
(bad)
loop
push
scas
jo
jo
lea
sbb
pop
lods
pop
ror
fs
pop
and
addr16
les
jecxz
das
sbb
sbb
fist
mov
xor
xchg
pop
pop
sbb
mov
mov
xor
lahf
leave
push
dec
(bad)
in
jmp
sahf
push
je
mov
xor
addr16
ret
scas
ss
jmp
mov
mov
dec
push
loop
test
and
fwait
sti
(bad)
movs
ins
sbb
aaa
ins
outs
je
and
icebp
pop
xor
lock
(bad)
push
pop
in
mov
sbb
cli
ret
dec
sbb
mov
iret
mov
jg
lods
imul
stos
dec
mov
(bad)
xchg
iret
dec
sbb
aas
and
xchg
xor
cs
in
shr
pop
je
sub
das
scas
lods
jl
fs
dec
push
and
movs
mov
call
(bad)
push
test
mov
int
popf
xchg
push
mov
fsubr
mov
push
fsubr
add
or
dec
(bad)
fld1
imul
nop
stc
or
mov
xor
fld
call
inc
pop
xlat
xchg
push
popf
jmp
mov
(bad)
cld
mov
jge
xchg
push
push
pop
bound
xor
and
mov
(bad)
dec
int
sub
out
retf
(bad)
jo
and
movs
(bad)
in
int3
or
mov
arpl
aam
mov
pop
jae
call
inc
jge
lea
sbb
pop
data16
jmp
mov
cld
jo
aaa
or
(bad)
sub
push
aam
xchg
rcl
(bad)
hlt
add
pop
push
xchg
imul
sbb
sub
and
or
adc
xchg
push
lods
mov
add
xchg
cmps
outs
in
rcr
dec
inc
dec
jae
jmp
(bad)
mov
aas
adc
icebp
enter
mov
pop
stos
stos
or
xor
xor
push
ss
icebp
daa
not
(bad)
pop
imul
jmp
sbb
jnp
aad
mov
inc
pop
push
int3
jnp
mov
fist
movs
cs
mov
push
jp
hlt
jg
out
pusha
mov
out
clc
cmps
sbb
out
out
dec
ins
sbb
sub
or
xchg
loopne
jle
adc
xchg
sub
outs
mov
lea
idiv
adc
jnp
mov
lea
and
mov
jecxz
aas
in
push
push
and
mov
ins
mov
retf
in
ret
loop
je
sbb
jle
inc
jno
(bad)
out
xor
jae
xor
pop
cdq
add
and
cwde
push
mov
ja
push
ror
mov
mov
out
or
fs
stc
shr
lods
ret
sahf
dec
addr16
popf
dec
dec
bound
xor
or
adc
loopne
adc
jno
adc
xor
jg
or
es
or
movs
push
jle
xor
adc
ins
add
and
outs
loope
je
or
test
xor
and
lods
mov
xor
and
jmp
mul
xchg
stc
mov
lahf
pusha
nop
fist
mov
inc
(bad)
push
jb
mov
inc
in
push
xchg
push
cli
push
shrd
mov
imul
dec
retf
inc
dec
(bad)
inc
add
mov
xor
add
call
dec
dec
xchg
mov
inc
fnstcw
imul
push
sub
bound
leave
movs
or
mov
fs
cmove
enter
jae
push
pusha
sbb
mov
ss
loope
fxch
pop
daa
test
enter
mov
ss
ds
pop
pop
and
stos
cwde
and
pop
mov
scas
xchg
sub
cmp
nop
fmul
or
leave
pusha
hlt
cld
dec
call
les
cmp
ffree
test
ffreep
xchg
mov
dec
jnp
dec
cmp
push
dec
xor
sbb
dec
or
ins
in
sbb
sti
xor
xchg
jmp
xlat
arpl
fcmovb
jmp
inc
inc
(bad)
and
add
sbb
out
retf
mov
xor
and
push
jns
xchg
cmp
mul
inc
shl
push
imul
dec
jp
mov
add
and
pop
mov
std
inc
xchg
add
shl
test
sbb
mov
outs
cmp
push
push
sbb
pop
xor
imul
cli
scas
sub
inc
retf
lds
fs
leave
pushf
mov
aaa
xor
or
ja
sar
and
mov
lahf
push
jmp
or
sbb
popf
mov
iret
mov
scas
in
loop
sahf
xchg
iret
push
pop
mov
js
icebp
loop
push
jmp
imul
dec
mov
xchg
pop
pop
neg
push
jmp
stos
pop
movsx
scas
addr16
mov
stc
(bad)
lds
xlat
xchg
pop
or
repnz
add
xchg
movs
sbb
pop
ja
ds
mov
xchg
sar
adc
gs
dec
stos
retf
pop
inc
nop
call
jl
push
lods
pop
(bad)
idiv
pop
ret
pop
enter
fldenv
ins
cmp
jbe
xchg
xchg
fdiv
dec
loopne
pop
xchg
ss
cli
test
std
xor
xchg
xchg
pop
sub
retf
add
and
jno
repz
clc
sub
lods
mov
or
cmps
inc
int
fcomp
mov
xchg
cdq
imul
(bad)
fnstsw
sub
and
dec
pusha
in
push
cld
inc
bound
pop
add
adc
into
jo
aam
mov
pop
dec
mov
xchg
popa
jle
inc
repnz
(bad)
stc
mov
mov
mov
shl
(bad)
pop
ret
out
arpl
loopne
jb
xor
xchg
add
pop
(bad)
sub
mov
inc
and
mov
jp
add
mov
dec
add
xor
(bad)
das
test
add
xor
cmp
pop
inc
add
push
push
fmul
addr16
mov
add
inc
rcl
pop
xchg
mov
adc
sub
sbb
addr16
ror
or
(bad)
push
(bad)
xchg
fcmovnbe
cs
mov
test
call
enter
push
push
(bad)
in
(bad)
loop
jns
int
jmp
jmp
ss
into
jmp
in
adc
pop
mov
test
daa
(bad)
pop
push
jl
sbb
jns
or
ret
xchg
es
mov
out
push
cmp
mov
mov
leave
ins
push
pop
ror
inc
dec
mov
lea
in
mov
cmp
(bad)
and
add
add
mov
dec
int3
scas
addr16
bound
js
je
jp
int
dec
je
add
push
mov
stc
cli
pushf
sub
adc
mov
mov
push
mov
cmp
(bad)
test
jnp
mov
pop
in
icebp
jecxz
mov
pop
push
fprem
xchg
xchg
inc
scas
mov
stc
jno
scas
inc
sub
jmp
aam
mov
push
stc
jp
sbb
jmp
test
pop
repnz
shl
xchg
mov
mov
sbb
mov
mov
(bad)
push
push
adc
mov
cmp
push
out
lods
sub
(bad)
retf
and
aas
ficom
lea
clc
xchg
cmc
mov
mov
ins
test
inc
loopne
push
and
ins
jno
cmp
jne
ret
jns
dec
call
pop
add
add
xlat
xor
push
dec
(bad)
jbe
loopne
lock
dec
xor
imul
cld
(bad)
sub
scas
sub
ror
and
(bad)
in
neg
cmp
setbe
sbb
cmps
and
ss
dec
jae
cmps
mov
jge
test
or
int3
in
movs
stos
mov
push
bound
fsub
inc
gs
jmp
sbb
jbe
cmc
mov
mov
adc
data16
xor
sar
sbb
jmp
aad
sbb
push
dec
mov
int3
xchg
repz
dec
or
mov
xchg
pop
mov
xor
lds
ret
rcr
push
inc
push
xchg
cld
adc
xor
mov
jo
push
add
lods
dec
cmp
cmp
xchg
xor
adc
out
push
mov
out
and
ret
jmp
fs
mov
lods
pop
test
pop
dec
inc
mov
rcr
dec
jecxz
jg
sbb
out
outs
call
mov
mov
or
mov
sub
jp
mov
xlat
cwde
(bad)
sbb
mov
jnp
rol
mov
fadd
push
pop
mov
adc
push
mov
hlt
jbe
ds
jmp
aad
pop
push
pop
pop
push
adc
add
retf
mov
(bad)
jg
fild
xor
mov
popf
into
and
cdq
mov
dec
cmp
loop
dec
dec
std
xchg
je
mov
push
loop
pop
add
and
push
cli
and
fs
cdq
cmps
leave
or
xor
sub
ss
inc
in
sub
mov
adc
test
retf
mov
ds
mov
nop
ror
mov
mov
call
es
out
movs
ins
inc
pop
pop
sbb
sub
xchg
or
call
adc
inc
mov
repz
xlat
stos
cdq
push
sub
jb
sti
shr
push
cli
dec
and
cli
ficomp
or
cmp
jmp
cmps
enter
stos
cmp
cli
sbb
ins
retf
sub
push
lods
push
push
sti
icebp
out
pop
jno
or
fild
mov
fld
bound
jp
fsub
outs
in
mov
in
sub
das
and
push
mov
je
loope
sbb
cmp
mov
push
pop
in
mov
aam
(bad)
ins
loopne
push
lods
loope
cdq
rol
inc
sub
outs
or
enter
movs
cmp
pop
in
hlt
in
push
shl
cmc
push
sub
xchg
jmp
shl
pop
dec
pusha
pop
push
sub
and
xor
out
mov
shr
push
std
ja
and
inc
xor
cmp
loop
mov
shl
daa
jmp
ret
and
mov
dec
hlt
dec
cmp
dec
pop
ss
lock
xor
pop
pop
shl
lock
jmp
dec
loop
push
rol
test
movs
mov
retf
pop
outs
mov
cmp
pop
push
enter
repnz
(bad)
(bad)
push
shl
jmp
lds
mov
ret
out
sbb
imul
call
into
inc
dec
mov
cmps
ror
hlt
enter
movs
rcl
xchg
push
push
ins
adc
scas
test
mov
retf
imul
ja
inc
adc
and
push
icebp
mov
and
(bad)
jno
xchg
pop
cdq
cmp
and
push
push
lods
jnp
mov
dec
fisubr
pop
adc
inc
jae
in
pushf
js
rcl
rol
cmc
out
scas
push
add
dec
mov
mov
sub
xor
dec
je
(bad)
les
xchg
call
mov
xor
dec
imul
jno
leave
lods
adc
jl
jo
cmp
cld
jmp
push
bound
mov
pop
push
out
fdivr
xor
mov
pop
bound
arpl
repnz
aam
ret
dec
xchg
inc
das
ret
test
cmps
inc
call
dec
pop
push
aad
fldenv
int
and
add
and
xor
out
sbb
xor
loope
cwde
and
fwait
dec
cmp
mov
test
loop
cmps
scas
(bad)
xchg
ret
pusha
or
nop
lds
pop
fcmovnu
cdq
shr
iret
pop
mov
idiv
push
out
retf
cmp
xor
inc
sub
mov
cmps
mov
xlat
dec
pushf
(bad)
popa
fwait
jle
mov
mov
xchg
push
in
stos
aam
rcl
into
js
stos
cld
fisub
shl
dec
mov
pusha
(bad)
pminub
(bad)
stos
inc
sbb
pop
and
mov
in
pop
or
and
jmp
inc
mov
enter
out
imul
mov
inc
cmp
jne
xchg
dec
or
ficomp
ins
cli
jns
rcr
test
pop
pop
adc
test
nop
or
or
push
mov
(bad)
mov
push
call
call
jbe
out
lea
and
bound
jno
sbb
test
push
mov
mov
mov
outs
daa
xchg
jl
push
jmp
sbb
test
mov
(bad)
loopne
sti
add
mov
lods
jbe
jmp
adc
jae
fcomp
mov
ds
ins
adc
inc
loop
xchg
cmps
push
in
and
gs
(bad)
xchg
repz
xor
fistp
test
push
ds
nop
in
int
in
or
pop
mov
fld
cli
push
jnp
sbb
dec
and
js
xor
add
cli
cmp
pop
stos
into
mov
jecxz
jnp
or
outs
sub
and
push
rcl
(bad)
retf
(bad)
and
jns
adc
call
sbb
ret
mov
add
pop
dec
jle
(bad)
jle
call
jmp
call
fistp
stc
push
add
cmp
sti
sub
pop
sbb
ins
mov
lds
stc
hlt
mov
dec
sbb
les
inc
fwait
push
in
(bad)
test
int
inc
or
mov
or
fidivr
aad
loope
push
test
dec
xor
xchg
loopne
lods
or
sahf
enter
and
or
into
xchg
fsubr
mov
pop
fwait
xchg
adc
mov
arpl
add
stc
icebp
scas
or
in
dec
into
out
and
mov
mov
and
addr16
inc
jp
call
xlat
call
mov
push
sub
loopne
or
in
aas
(bad)
popa
and
adc
mov
inc
or
(bad)
mov
jg
clc
cdq
mov
jle
sahf
xchg
mov
xor
nop
xor
xchg
(bad)
mov
mov
or
int3
mov
mov
pop
lock
mov
sub
jo
call
idiv
mov
xchg
push
mov
mov
out
adc
inc
js
sti
or
pop
and
rcl
cmp
xchg
lods
jae
push
jg
je
aas
ins
push
cmps
lock
inc
lods
cmc
stos
sti
xchg
cmp
mov
inc
sbb
push
call
mov
jb
sub
enter
test
lods
movs
repz
call
idiv
out
aam
jle
pop
lds
jl
cmp
pop
sbb
inc
ss
xchg
sbb
fist
(bad)
jl
sbb
pop
fsub
popa
pop
ja
xchg
or
jl
mov
hlt
aad
cmp
(bad)
xor
mov
sbb
(bad)
dec
fisub
jle
es
lea
dec
mov
std
(bad)
push
inc
fld
and
scas
xor
xor
jmp
test
scas
sti
mov
lock
ins
shl
pop
idiv
(bad)
out
cmc
nop
in
aad
int3
lea
jle
stos
stos
jno
into
inc
lods
aam
je
sub
dec
mov
ret
xchg
add
fs
in
xchg
bound
or
mov
and
call
fistp
les
inc
es
mov
mov
dec
and
inc
movs
mov
imul
mov
out
in
xchg
mov
push
add
(bad)
mov
inc
cs
cmc
mov
arpl
jo
adc
int3
jbe
retf
mov
or
loope
push
cmps
and
sbb
in
jmp
mov
shl
inc
mov
add
dec
mov
push
icebp
loop
test
inc
push
pop
movs
aaa
lods
jle
shl
lods
sbb
push
es
inc
jl
fs
xlat
jecxz
mov
ja
cmp
aas
nop
xrelease
xlat
popa
lahf
dec
in
mov
adc
jmp
pop
lock
and
add
xchg
cwde
pop
pop
fwait
adc
or
cmp
repz
lods
add
and
stc
call
ret
sub
test
je
mov
shr
pop
adc
ss
push
(bad)
ror
fsubr
ja
adc
sub
jbe
je
jmp
xor
fdivr
sub
sbb
int3
jbe
xchg
xchg
cmp
inc
sub
cmp
ret
ret
mov
mov
cli
lahf
dec
cli
pop
fidivr
mov
ror
rol
or
jg
mov
or
cmp
icebp
scas
sbb
sbb
test
aam
jae
pop
and
push
jl
push
dec
in
loop
ficomp
cmp
out
rol
adc
add
je
adc
bound
jecxz
xor
ja
loop
jne
jge
dec
and
push
sbb
scas
push
pop
fcomp
test
pushw
pop
jmp
shl
dec
mov
jbe
add
nop
icebp
lods
fwait
loope
les
shl
pop
pop
popa
jp
cmp
pop
push
xchg
mov
cs
mov
pop
dec
nop
xor
and
fisubr
xchg
mov
xor
pop
inc
test
imul
sbb
shr
out
ret
sub
mov
add
sub
aaa
(bad)
out
outs
popa
dec
inc
push
sbb
mov
xrelease
push
push
dec
push
add
out
call
xchg
adc
pop
mov
scas
pop
pop
jg
out
sti
cmp
aas
loope
lods
out
aam
mov
push
cmp
cmps
dec
or
sbb
arpl
mov
or
push
dec
adc
and
outs
adc
fcomp
mov
push
push
push
fnstenv
into
retf
dec
push
sub
cmp
jecxz
mov
or
mov
inc
mov
fst
test
jp
pop
mov
movs
pop
xor
jecxz
sar
idiv
dec
add
jl
or
push
imul
bound
aaa
jbe
outs
xchg
or
jb
push
clc
fldl2e
data16
jae
jnp
aaa
fdivr
out
xchg
mov
or
push
sub
mov
dec
cmps
rcl
sub
or
xchg
mov
repnz
or
les
in
cs
fdivr
dec
jno
(bad)
repz
mov
mov
inc
ins
shl
ins
push
jo
imul
mov
push
pop
mov
in
mov
pop
ins
inc
data16
sbb
into
mov
mov
sbb
pop
mov
aas
adc
push
repz
es
cli
adc
ret
jo
cmp
xor
jge
jnp
mov
arpl
iret
leave
jb
xchg
sub
enter
pop
test
mov
leave
push
jg
arpl
mov
xchg
into
adc
or
fimul
mov
lock
mov
out
xor
pop
mov
(bad)
fcom
enter
mov
push
mov
fwait
into
aas
sub
frstpm(287
ja
cs
(bad)
leave
ficom
(bad)
push
and
(bad)
pop
jbe
mov
lds
lods
mov
pop
push
add
iret
push
sbb
(bad)
arpl
xchg
fstp
sbb
rcr
or
lods
lea
xchg
(bad)
xchg
push
mov
std
(bad)
in
out
out
pop
icebp
sub
imul
push
js
mov
jl
pop
dec
sti
addr16
inc
jecxz
jb
fisttp
pop
and
fxam
fs
xchg
pushf
sbb
das
cmp
addr16
movs
add
(bad)
mov
pop
dec
mov
push
sub
call
ss
stos
dec
movs
cmp
mov
les
enter
dec
mov
push
pop
jne
mov
shl
sti
mov
pushf
dec
ret
arpl
and
(bad)
add
aaa
add
sub
lea
bswap
data16
xchg
cmp
mov
jne
fs
cld
imul
and
mov
clc
repz
push
push
jp
cmc
sahf
xchg
test
pop
pop
enter
iret
cmp
mov
cld
jmp
pop
dec
repz
cld
jl
cmp
sbb
(bad)
lods
xchg
sub
(bad)
out
dec
in
aam
les
cwde
push
pushf
jns
dec
mov
cld
add
movnti
xchg
xchg
retf
retf
jecxz
and
push
mov
test
popf
cdq
into
out
mov
outs
not
cmps
rcl
sub
adc
pop
jge
imul
sahf
iret
pop
fsubrp
pop
rol
loope
push
mov
or
push
lods
int3
fdivr
jnp
cdq
aad
adc
push
loop
out
retf
ja
pop
fldcw
or
(bad)
jb
ins
retf
xchg
in
fsubr
mov
adc
shr
pop
pop
arpl
mov
adc
daa
mov
ds
lahf
and
inc
mov
das
inc
or
outs
and
or
xlat
xchg
cdq
cmp
in
sbb
xor
aam
mov
mov
xchg
pusha
ja
jno
dec
mov
lods
sub
and
sbb
push
mov
xchg
xlat
sbb
ret
outs
xor
shr
xor
enter
mov
hlt
sub
loop
cmp
sub
fisub
aas
inc
or
and
mov
cdq
fwait
jg
cmps
mov
ss
jecxz
(bad)
(bad)
xchg
ins
mov
das
fimul
movs
cmps
lea
cmc
pop
xchg
xor
mov
jl
add
xor
jg
mov
push
pop
mov
or
cmps
pop
sub
inc
clc
sub
dec
sbb
add
jmp
aaa
mov
leave
js
push
push
add
repz
daa
xchg
das
cmps
scas
pop
movs
cmps
cdq
mov
loope
jmp
pop
or
jg
das
cwde
fwait
fwait
jne
mov
sub
popa
(bad)
test
jle
inc
(bad)
jecxz
clc
or
sbb
inc
jge
dec
mov
les
lods
test
push
loopne
imul
rcl
iret
mov
adc
out
data16
icebp
shr
mov
repz
mov
jae
movs
inc
sub
push
movs
or
mov
sub
test
ror
add
add
adc
dec
lods
add
mov
fsub
pop
mov
and
push
ds
xor
pop
mov
mov
push
cmp
fs
sbb
in
push
cwde
xchg
jge
test
clc
xor
mov
mov
sbb
js
xchg
sub
xchg
jp
and
adc
mov
push
and
test
shl
std
mov
outs
ins
dec
pop
sbb
fld
adc
add
(bad)
fcomp
rcl
sbb
cmp
fisubr
jo
sbb
clc
xlat
mov
mov
(bad)
aad
sbb
mov
outs
xchg
sti
lock
xor
(bad)
jo
rcl
mov
jb
push
adc
mov
add
outs
lahf
push
xchg
dec
push
and
dec
xor
loopne
push
sub
stos
mov
cmp
out
lea
movs
cmp
rol
popf
and
adc
jg
mov
iret
mov
push
push
xor
pop
arpl
cs
pushf
adc
test
out
repz
jne
mov
and
xor
inc
retf
or
and
ds
xchg
cmps
jnp
daa
inc
xchg
movs
(bad)
cld
cli
mov
sub
xchg
ja
add
sbb
pop
dec
lock
dec
fwait
xchg
dec
cdq
aam
mov
inc
pop
xchg
fimul
xor
out
mov
inc
es
xchg
pop
inc
inc
pop
or
cmp
xor
mov
mov
ret
inc
je
lods
inc
jnp
mov
sub
std
mov
test
test
xor
push
mov
push
inc
stos
mov
loope
add
rol
daa
add
mov
inc
(bad)
jge
stc
xor
xor
sub
jp
mov
inc
dec
push
xor
cmp
cmp
cld
pop
push
ins
(bad)
shl
xchg
jmp
add
adc
lods
push
mov
std
sahf
std
push
xchg
dec
lahf
mov
cmp
sub
sti
cmp
mov
cmp
inc
and
jne
jno
in
mov
nop
xor
aad
mov
mov
xchg
lods
pop
(bad)
jmp
adc
or
out
add
arpl
dec
inc
xlat
popf
push
adc
leave
dec
jns
psubw
jp
(bad)
loop
test
fdiv
pop
xlat
mov
ret
bnd
xor
or
int3
outs
xchg
xor
fsubr
and
hlt
mov
or
repnz
nop
mov
xor
push
push
push
lock
retf
cmp
inc
mov
pop
pop
fbld
inc
fdiv
xchg
jle
arpl
jns
pop
cs
dec
ror
jmp
mov
arpl
pop
sub
retf
xchg
ins
loope
cmps
loope
xchg
movs
js
sbb
push
js
mov
push
test
loopne
cdq
mov
fimul
and
push
mov
movs
pop
inc
test
push
cmp
mov
daa
cmps
mov
pop
sti
nop
and
xchg
arpl
cdq
mov
adc
ret
iret
inc
int3
js
mov
aam
xor
jns
shl
stos
idiv
cmp
and
cmp
pop
sub
xor
in
sub
and
and
sahf
sub
fcomi
scas
mov
cwde
test
xor
rcr
loope
or
and
or
inc
add
out
retf
and
in
(bad)
ror
outs
pop
pop
lea
or
xor
in
into
movs
daa
repz
rcl
rcr
addr16
aam
repnz
add
add
xor
sahf
adc
scas
inc
dec
xor
retf
inc
(bad)
mov
stc
mov
lahf
mov
arpl
dec
shl
jl
ss
sub
push
ja
adc
jl
mov
je
(bad)
div
mov
mov
jmp
mov
push
cmp
add
outs
jb
xchg
test
add
arpl
ja
es
aaa
adc
xor
pop
retf
repnz
jo
push
loop
mov
mov
fwait
xor
fdivr
mov
mov
xchg
enter
mov
bts
jo
xchg
mov
adc
scas
sbb
inc
dec
jno
push
push
pop
ins
and
lods
shl
sub
xor
sub
or
push
(bad)
aad
stos
shl
push
push
jmp
inc
mov
adc
inc
or
mov
inc
and
jb
int3
sbb
pusha
cmps
inc
inc
fdivrp
xchg
arpl
mov
jne
cmps
push
pop
push
push
cli
inc
jae
pop
rol
inc
imul
in
rol
and
mov
shl
or
fstp
loop
cmp
fisttp
mov
popf
jb
mov
mov
hlt
sar
loope
push
in
adc
dec
test
icebp
xchg
rol
xchg
jp
adc
mov
jp
scas
mov
push
cmp
inc
mov
les
out
stos
sub
imul
in
leave
cmp
dec
stos
shl
mov
fcom
stos
repnz
les
add
sbb
stos
cmp
pop
scas
or
int
push
mov
adc
fadd
pop
sub
cdq
sub
ds
cli
shl
pop
jnp
inc
lods
mov
loop
imul
repnz
es
ss
mov
push
dec
mov
neg
cmp
scas
call
xor
stc
mov
jmp
mov
and
cld
adc
call
cmps
(bad)
mov
dec
add
aas
mov
mov
test
fidivr
jno
mov
pop
cmps
cmp
or
sub
mov
imul
mov
rcl
add
jmp
jp
sub
jno
cmps
cmp
pushf
sub
pop
lods
imul
inc
sbb
or
cmp
out
dec
mov
(bad)
fiadd
adc
mov
mov
xchg
iret
pop
jno
ins
push
pop
iret
and
mul
add
sbb
and
mov
imul
add
call
xchg
lods
cmp
int
jbe
jl
(bad)
imul
loop
push
aaa
dec
aaa
jbe
(bad)
pop
sub
fcmovbe
test
or
nop
dec
adc
packsswb
in
push
xchg
div
out
gs
inc
cmc
stos
ins
mov
push
retf
jmp
loope
or
out
xchg
adc
xchg
loope
icebp
loop
mov
je
repnz
mov
fwait
test
inc
call
cwde
mov
movs
mov
imul
add
push
repnz
inc
jnp
aas
jmp
sub
icebp
dec
mov
sahf
dec
addr16
cmps
leave
leave
fild
inc
jo
sahf
push
js
movs
mov
or
sub
push
xchg
xor
inc
cmp
mov
pop
xchg
fcmovb
fsub
xlat
push
xchg
ja
sbb
push
pop
add
movs
pop
mov
cs
(bad)
adc
and
mov
mov
or
jns
xchg
add
outs
mov
or
mov
into
mov
push
xchg
pop
lahf
outs
repnz
push
loopne
dec
sti
pop
call
dec
add
mov
xor
ins
fcomi
or
inc
add
fdiv
fild
ss
jne
mov
arpl
(bad)
repnz
jmp
fcomp
fwait
jns
sbb
cmp
push
jno
test
xor
or
out
out
aaa
xchg
(bad)
stos
pushf
pusha
rcl
and
push
hlt
rcr
cli
cmp
fneni(8087
dec
mov
icebp
neg
sbb
iret
or
cmp
imul
ss
outs
stos
mov
or
daa
mov
push
(bad)
cmp
ror
adc
je
push
sbb
inc
and
test
push
mov
(bad)
pop
mov
or
call
xor
jo
jg
inc
jg
lods
and
or
jp
xchg
loope
(bad)
loope
outs
loop
stos
and
push
aaa
neg
mov
outs
stc
popa
popf
mov
movs
push
pusha
mov
jbe
sbb
dec
cmps
mul
lock
je
lods
out
xchg
mov
mov
jle
loopne
adc
jp
mov
test
or
ins
xchg
ins
je
xchg
(bad)
in
lock
xchg
lock
and
sbb
adc
movs
pop
scas
outs
sbb
jno
js
outs
not
lods
outs
(bad)
xor
pop
pop
movs
aas
ret
inc
mov
jecxz
push
scas
(bad)
(bad)
hlt
sbb
scas
sub
int
and
add
dec
sub
and
loop
jp
mov
adc
pop
lods
xor
aam
je
fs
test
mov
outs
out
xchg
es
and
pop
movs
inc
mov
xor
add
mov
jle
test
jp
mov
out
xchg
jno
shr
fcomi
enter
ja
aam
aam
sbb
mov
lea
jno
(bad)
mov
dec
call
cs
mov
jl
dec
sub
push
mov
int
cmp
arpl
sub
xor
loop
dec
jp
mov
jo
xor
jb
cdq
inc
and
mov
popa
and
(bad)
sbb
inc
sti
jl
cmp
push
sti
jl
paddsb
jae
xchg
ret
loopne
int
je
int
mov
out
shr
adc
(bad)
pusha
inc
mov
je
mov
inc
sti
arpl
cmc
lock
(bad)
jae
jge
rcl
cwde
pop
mov
jnp
sub
cmps
movs
and
idiv
bound
adc
pop
add
fadd
push
nop
movs
mov
cs
aaa
or
(bad)
aad
loope
daa
pop
mov
inc
popa
pop
sbb
je
(bad)
or
fs
cmps
ffree
enter
mov
fwait
xor
gs
push
sti
cwde
sub
test
js
mov
jmp
clc
cwde
(bad)
fnsave
setp
adc
xor
popa
push
popf
mov
pop
lods
test
retf
or
cmp
jp
xchg
jne
or
sub
scas
xor
mov
inc
mov
jno
mov
mov
jle
call
push
mov
inc
xchg
lods
xor
call
cmc
mov
daa
inc
test
pop
mov
test
aaa
(bad)
pop
fiadd
out
rcr
loope
mov
dec
mov
shl
(bad)
mov
(bad)
dec
test
sub
aaa
mov
(bad)
stc
mov
fild
add
jae
sub
mov
jbe
sahf
fild
or
lahf
mov
mov
ret
fsubp
mov
or
add
hlt
cmp
call
call
pushf
jno
mov
mov
lods
pop
add
add
or
inc
aam
sbb
mov
addr16
fwait
scas
and
cwde
adc
fst
mov
xchg
lods
in
xchg
add
or
lods
inc
adc
ret
pop
push
ss
gs
mov
sub
jnp
push
outs
sahf
pop
pop
add
mov
xor
jne
push
fdivr
xchg
jns
and
inc
adc
es
xchg
xchg
add
pop
xor
pop
popa
adc
mov
xchg
aas
fucom
imul
push
and
leave
out
mov
mov
retf
out
push
add
mov
jge
dec
jno
jne
sbb
add
sbb
lods
adc
aam
(bad)
mul
loop
pop
dec
out
sbb
cs
add
cmp
jmp
jl
ret
fst
ja
mov
mov
mov
(bad)
hlt
add
iret
outs
std
fisttp
scas
pop
nop
jmp
adc
repnz
stos
mov
inc
fld
mov
(bad)
out
fst
push
aaa
push
push
adc
dec
lods
loop
push
lock
xchg
sbb
xor
add
fwait
call
mov
sbb
mov
shl
cmps
sub
xor
mov
sbb
in
in
inc
repnz
aam
popa
jae
mov
repz
pop
lods
call
and
xor
lods
(bad)
inc
les
(bad)
leave
and
xchg
test
gs
lods
les
sub
cli
ret
inc
and
add
(bad)
jle
test
inc
(bad)
iret
out
mov
arpl
pop
je
shl
jecxz
imul
add
xor
sbb
sbb
cld
inc
and
cmps
movs
xchg
cwde
mov
jecxz
mov
repnz
jge
popf
repnz
push
xchg
pop
pop
aas
pop
dec
lds
mov
sbb
cmp
minps
xchg
outs
pop
jp
data16
cmp
mov
adc
out
daa
mov
je
mov
stc
rcl
(bad)
pop
add
add
clc
inc
push
scas
xchg
or
pop
loop
int
test
push
or
cmp
sbb
in
mov
or
mov
dec
pop
out
(bad)
fldcw
adc
rol
mov
xchg
mov
xor
ins
mov
mov
out
aad
xor
test
adc
cmps
xchg
xor
mov
jno
cs
cmp
xchg
cmps
bound
cmp
push
lds
inc
sahf
mov
dec
fs
push
pop
fisttp
dec
into
and
das
sub
push
retf
out
sbb
ret
push
inc
int3
push
mov
popf
jne
sub
lahf
xor
xchg
dec
scas
inc
hlt
pop
cmp
mov
xchg
xchg
cmc
adc
xchg
into
fisubr
push
sub
fwait
add
adc
pop
add
mov
pop
inc
sbb
inc
std
or
mov
in
xchg
mov
and
sub
loop
push
bound
stc
fmul
sahf
mov
or
cli
inc
xchg
stos
xor
push
pop
gs
mov
pusha
push
mov
inc
std
imul
stos
(bad)
popa
mov
clc
loopne
cmc
cmps
stos
mov
dec
pop
mov
je
inc
jns
gs
jbe
inc
inc
sbb
test
daa
nop
aaa
sub
out
or
mov
and
cmps
int
fild
cmp
jmp
sub
inc
and
sahf
xchg
adc
mov
pop
pop
cmps
sub
cld
aas
sbb
inc
jle
pop
and
(bad)
xchg
loopne
lock
jg
push
mov
fisubr
(bad)
aas
stos
je
les
dec
out
cmps
dec
xlat
or
dec
or
retf
sub
hlt
sub
or
adc
and
sar
dec
in
mov
inc
jecxz
xchg
xor
into
and
adc
mov
sahf
xchg
mov
ss
stos
cwde
in
add
das
push
push
push
add
dec
out
jl
mov
pop
call
adc
pop
and
fisttp
pop
lods
fcmovne
jns
stos
jne
lods
mov
gs
mov
shl
movs
xchg
loopne
neg
mov
jmp
stos
test
retf
jg
or
jle
pop
outs
not
and
push
dec
mov
adc
jle
push
repnz
fstp
movs
(bad)
mov
pop
cmp
pop
dec
push
aaa
mov
or
(bad)
aas
nop
cmp
mov
loopne
ss
in
ins
adc
jl
and
out
inc
jl
jae
jmp
inc
inc
jnp
out
adc
pop
pop
push
dec
bswap
lods
inc
jle
add
or
pusha
lods
div
rol
scas
bound
jno
sbb
cmp
push
js
or
das
clc
ins
xor
push
xchg
inc
xor
out
add
stos
xor
push
pop
idiv
in
xchg
xchg
loopne
push
cmp
fimul
cli
sub
arpl
and
pop
mov
std
shr
cmp
or
xchg
outs
xor
cmps
(bad)
arpl
std
xor
fwait
and
mov
add
jbe
shl
push
cwde
scas
mov
push
cmp
fnstsw
popa
sub
xor
rcl
call
ins
jl
aaa
push
cmps
lds
sub
mov
aam
xor
inc
sbb
fwait
mov
dec
jmp
mov
dec
shr
inc
(bad)
jbe
ret
or
ins
jmp
aam
add
mov
jns
out
push
pop
dec
sbb
addr16
mov
cmp
or
dec
push
mov
cld
sub
cli
mov
sbb
sbb
dec
cmp
mov
data16
jecxz
or
test
rol
sbb
popf
adc
jo
cmp
cmc
fmul
daa
outs
fwait
mov
shl
jmp
adc
xchg
xchg
or
(bad)
push
and
outs
pop
(bad)
sbb
mov
push
mov
hlt
iret
mov
xor
push
into
hlt
rcl
mov
push
dec
add
cli
fld
or
inc
mov
and
int
sbb
icebp
mov
out
mov
aaa
mov
mov
xchg
imul
sar
sar
loop
cmc
dec
loope
ror
test
pop
les
inc
out
cmp
jmp
mov
test
sti
xor
adc
aad
mov
sti
cli
fcmovbe
add
pop
hlt
cmp
dec
loopne
mov
stos
jb
sbb
adc
imul
sub
out
mov
in
pop
jecxz
cmc
jae
ja
xor
cmp
pop
adc
add
mov
push
jmp
jge
cmps
cdq
cli
les
(bad)
or
lea
gs
sbb
mov
int
adc
mov
cmps
push
pop
(bad)
mov
inc
xchg
int
fimul
jae
fcmovnb
ret
xor
cmp
pop
dec
cdq
or
out
inc
outs
mov
scas
xchg
lock
mov
mov
sub
push
outs
ds
shr
retf
and
fist
ret
lods
popf
cld
jo
xchg
push
jb
sub
fimul
add
cmp
fmul
lods
cmp
adc
ja
mov
dec
sbb
jge
pop
repz
mov
ins
clc
dec
cli
stc
fbstp
mov
and
push
jg
mov
lahf
and
inc
add
aad
ficomp
sub
jmp
mov
push
cmp
mov
in
sub
idiv
jle
jns
out
cmc
cmp
test
fmul
xlat
jmp
call
xchg
shl
mov
rcl
mov
fcomip
test
cmp
adc
cmps
retf
ficomp
xor
cli
mul
jne
ss
mov
lock
cmc
push
mov
pop
ins
add
(bad)
fwait
std
in
imul
cmps
sbb
dec
inc
gs
imul
stc
sahf
add
sahf
push
jb
adc
inc
call
ds
cmp
into
ja
retf
int3
iret
cmp
jbe
cmps
mov
mov
ficom
imul
cmp
(bad)
adc
jb
dec
adc
ss
arpl
(bad)
sahf
jmp
popa
int3
mov
xor
push
mov
sbb
jmp
pop
es
push
cmps
out
jns
push
ss
stc
adc
pushw
stos
jmp
in
scas
loop
and
jg
add
jl
sbb
or
inc
jmp
inc
xchg
stos
rol
or
stos
mov
int3
mov
ins
lock
xchg
mov
(bad)
out
mov
jecxz
mov
inc
sub
add
pop
and
push
cli
loopne
pop
imul
jmp
inc
arpl
repnz
jae
and
sub
out
dec
retf
es
mov
or
or
inc
sub
jge
push
(bad)
pop
cmp
test
and
or
cdq
cmps
sbb
xchg
int
std
in
fwait
push
mov
or
ficom
mov
dec
lods
sbb
push
bound
lds
sub
nop
mov
pop
xor
pop
sti
lds
jbe
pop
dec
dec
or
add
dec
sbb
pusha
push
cld
out
imul
test
lahf
retf
ins
inc
stos
and
mov
jmp
hlt
cmp
movs
dec
cmp
es
ds
and
inc
pusha
pop
add
cmp
xchg
xchg
(bad)
sub
shr
or
mov
iret
jmp
cmp
mov
stos
aas
adc
loopne
aas
xchg
xchg
jbe
mov
jne
mov
test
pushaw
jge
arpl
fisttp
cmp
bts
mov
mov
sbb
inc
jne
pop
jge
daa
sti
inc
fstp
xor
aas
mov
pop
cs
dec
lds
ret
stc
jg
outs
(bad)
ficomp
xor
lods
and
das
xlat
ins
scas
add
push
add
and
mov
dec
push
mov
jno
(bad)
or
fld
sub
das
mov
mov
in
sbb
sbb
fwait
or
cmps
adc
dec
fwait
test
imul
dec
sbb
cwde
push
lea
inc
or
jo
rcr
gs
inc
adc
push
shr
push
sub
(bad)
stos
mov
into
or
pop
and
xor
push
fidivr
(bad)
push
or
jmp
mov
pushf
std
dec
inc
inc
mov
jo
je
arpl
or
sub
je
mov
(bad)
sbb
fst
mov
neg
mov
sbb
ret
add
scas
jmp
scas
leave
jg
pop
jae
adc
mov
mov
rol
aad
push
or
out
retf
mov
lods
inc
ins
in
cmp
jg
rcl
jbe
clc
add
adc
mov
inc
mov
push
pop
and
lea
fst
aas
add
cmps
inc
mov
in
pop
test
(bad)
clc
icebp
addr16
jle
adc
(bad)
in
cmps
out
mov
gs
(bad)
inc
pop
(bad)
mov
lahf
sbb
xchg
stos
movlps
(bad)
mov
push
ret
ret
xor
ja
aas
jnp
jmp
jns
mov
lds
sbb
ret
and
mov
clc
mov
push
inc
ss
(bad)
xor
scas
pop
jl
pop
ficomp
and
mov
cdq
ja
mov
sub
movs
push
fld
addr16
add
bound
push
or
xchg
mov
out
cmps
ss
pop
pushf
adc
add
jns
ins
and
mov
mov
loope
retf
popaw
mov
sub
stc
jmp
dec
les
dec
pop
add
push
scas
mov
mov
cmp
(bad)
out
test
jg
aas
add
dec
add
mov
jns
hlt
pop
mov
test
div
inc
sub
cmps
jns
sub
aas
mov
push
out
and
push
mov
cmps
mov
popf
gs
pop
xchg
pop
jbe
fs
or
mov
fisub
loopne
repz
or
sti
xchg
adc
push
dec
aad
xor
xlat
scas
lock
aaa
xchg
xor
jl
and
in
nop
jecxz
xchg
add
pop
ret
push
pop
data16
jmp
push
xlat
dec
lods
xor
leave
bound
mov
sbb
dec
jg
cli
or
repnz
test
jge
lods
cld
pop
push
cld
loope
xor
arpl
fnstsw
popa
clc
loopne
pop
outs
outs
jnp
ss
add
dec
es
inc
xor
sub
dec
sub
mov
mov
adc
iret
inc
neg
jmp
cmp
inc
fistp
xor
add
mov
push
push
pop
lds
out
pop
mov
test
lods
jo
mov
int
dec
imul
sbb
dec
retf
sbb
lea
cmps
push
xor
jmp
push
or
mov
daa
push
adc
sahf
inc
add
push
scas
lock
mov
loope
clc
jmp
(bad)
fidivr
rcl
cwde
dec
or
jmp
cld
adc
js
push
or
inc
xchg
jbe
sub
pop
mov
xchg
neg
xchg
jo
idiv
sbb
mov
rol
(bad)
sub
dec
dec
adc
dec
mov
push
daa
rol
hlt
cmp
and
or
and
dec
jmp
and
mov
push
mov
cmp
cdq
pop
jmp
fld
dec
mov
test
jnp
dec
mov
mov
mov
xchg
ret
ror
loope
pop
inc
push
das
and
mov
cld
fild
or
bound
push
test
push
inc
pop
dec
push
jge
dec
sbb
cmp
push
in
hlt
neg
imul
mov
shl
dec
push
sub
sub
icebp
fimul
arpl
jne
adc
retf
push
mov
jne
mov
(bad)
out
mov
mov
loope
mov
xchg
or
call
mov
sti
mov
out
mov
mov
punpckhbw
push
xchg
iret
mov
movs
int3
and
(bad)
mov
jo
leave
adc
mov
outs
ret
mov
repz
mov
scas
jb
aaa
sbb
test
popf
jg
pop
pop
xchg
lock
dec
ins
test
cmp
dec
adc
ret
je
lds
jns
sbb
sub
cmps
mov
cmp
adc
fcom
les
cwde
(bad)
sbb
in
fld
mov
add
jbe
and
ja
aam
mov
sbb
mov
mov
add
xor
mov
lds
xor
jl
repnz
fsub
xchg
xchg
pop
pop
dec
shl
out
mov
mov
add
xchg
inc
jno
pop
imul
sbb
mov
mov
jno
xchg
adc
sub
push
xchg
inc
mov
xor
call
(bad)
imul
hlt
into
rol
mov
mov
repnz
mov
sub
pop
or
outs
out
xor
cs
mov
inc
pushf
jle
add
das
aas
clc
adc
adc
pusha
aaa
out
add
mov
mov
xor
xchg
iret
scas
pop
mov
enter
cmc
push
cmp
inc
mov
frstor
cmps
mov
mov
enter
loop
ret
imul
or
cli
push
lea
mov
in
in
cmp
imul
arpl
repnz
je
jae
sub
iret
push
jl
sub
xchg
data16
outs
jecxz
xchg
ds
test
sbb
and
mov
pop
adc
cli
push
jl
jb
xor
jns
and
mov
adc
leave
jmp
and
jnp
mov
push
mov
sbb
or
mov
jns
fild
xor
pop
repz
pop
(bad)
clc
or
adc
pop
shr
push
aam
imul
std
push
cmps
int
fsubr
movs
mov
pop
pop
js
inc
pop
push
mov
mov
jge
js
shl
add
(bad)
(bad)
repnz
outs
cli
push
aaa
fstp
lea
sub
scas
sub
jnp
ja
push
and
cmc
mov
jl
popf
fisub
aaa
and
xor
out
adc
lahf
jmp
cmp
test
test
sar
push
ret
pop
and
pop
mov
dec
xchg
aad
outs
jne
jmp
cmp
stos
xor
scas
out
add
pop
sub
das
in
mov
mov
ins
mov
test
cmp
aas
in
pop
add
movs
inc
push
adc
push
(bad)
(bad)
cli
xor
sbb
out
xchg
out
js
rcl
je
ins
mov
mov
xchg
lods
adc
pop
mov
mov
and
bound
jns
xchg
jmp
pop
jne
nop
mov
fsubr
jle
mov
into
pop
or
test
jg
adc
popa
call
xchg
loop
rcr
in
cmp
adc
pop
dec
test
mov
cmps
xchg
xchg
pop
inc
out
jae
mov
dec
sti
pmulhuw
xor
and
lds
stos
fisttp
dec
shl
pop
pop
cmp
test
mov
sub
add
push
pop
pushf
sub
mov
movs
mov
hlt
(bad)
icebp
pop
sbb
loopne
es
sbb
mov
add
xor
frndint
adc
addr16
dec
jns
fwait
daa
push
stc
lock
out
add
int3
test
lods
push
test
xlat
mov
fucomip
sub
dec
mov
sbb
movs
jmp
cmp
ja
icebp
cmps
cmp
cmp
or
mov
sbb
jb
pop
aaa
push
cmp
xchg
repnz
jecxz
adc
adc
iret
int
sbb
inc
sub
repnz
push
js
out
adc
inc
outs
cs
add
cs
push
out
icebp
addr16
dec
pop
dec
xchg
stc
lock
scas
adc
fwait
mov
xchg
mov
lods
pusha
rol
fld
adc
or
sbb
mov
jnp
je
retf
dec
push
adc
fsub
inc
pop
jo
sub
dec
repnz
xchg
cmp
pop
int
xlat
test
lock
hlt
stos
cs
outs
scas
ret
aam
dec
fisub
jno
mov
mov
aaa
arpl
pop
stc
mov
sahf
loopne
mov
mov
mov
dec
push
in
ins
ficomp
rcr
mov
sar
adc
sbb
inc
jno
or
sub
out
(bad)
test
outs
jae
mov
cmp
lock
daa
xor
sbb
and
js
sub
iret
rol
xor
xchg
inc
je
scas
daa
inc
adc
ret
gs
pop
mov
stc
pop
adc
jecxz
ret
call
jae
pop
sbb
add
mov
stos
out
lea
inc
scas
fwait
jmp
loop
and
sbb
cmp
aad
pop
dec
fistp
mov
std
rcl
popa
sub
inc
and
hlt
xchg
fmul
daa
mov
outs
(bad)
pop
jle
add
es
add
pop
adc
ins
mov
xchg
inc
(bad)
ins
jne
mov
mov
test
jp
dec
movs
jl
xchg
cmps
dec
or
test
pop
inc
fiadd
sbb
ins
xlat
xchg
sub
pop
xor
ins
repnz
(bad)
or
xor
pop
jno
sub
out
cs
ret
aam
lea
in
or
dec
mov
pushf
jmp
das
xchg
sbb
cmp
test
mov
push
pop
lock
ret
mov
jmp
xchg
in
aad
dec
out
xchg
pushf
dec
(bad)
pop
mov
sbb
popf
fcomp
sbb
int3
std
jne
inc
out
jle
push
test
or
test
push
cmps
add
mov
loopne
je
adc
dec
ins
std
push
inc
out
jecxz
rcr
pusha
add
add
xor
mov
in
mov
mov
and
sub
mov
and
sbb
xchg
(bad)
cli
test
sbb
inc
pop
jb
adc
and
sub
cmps
fwait
test
int
or
xor
adc
xchg
pop
addr16
push
pop
aad
je
stc
setge
nop
jge
xor
test
ins
xchg
jne
or
and
mov
dec
cli
icebp
push
dec
sahf
scas
adc
ret
push
sahf
enter
mov
xchg
mov
pop
push
repnz
mov
mov
in
jb
xchg
dec
jmp
jne
bnd
or
mov
scas
mov
daa
ds
xchg
cs
push
mov
cmc
fadd
mov
cdq
shr
cli
cdq
scas
mov
cmp
je
push
fcomp
retf
push
mov
sub
dec
xlat
imul
mov
and
(bad)
retf
repz
fs
sub
cli
or
mov
xor
mov
sbb
add
popf
out
mov
js
imul
xor
and
daa
sub
addr16
push
jbe
std
jp
ins
sbb
call
(bad)
fucomip
mov
cld
pop
push
dec
imul
and
fcmovne
xchg
sub
ja
add
jb
cmps
es
mov
jmp
imul
and
xchg
imul
cwde
test
scas
pushf
add
inc
call
shl
in
fsub
not
xchg
adc
push
mov
mov
pop
iret
(bad)
in
es
icebp
mov
call
pop
test
sbb
jle
lea
in
mov
adc
pop
imul
pop
inc
or
ss
retf
xchg
xor
leave
arpl
lods
xor
jnp
ret
mov
lds
jns
and
cmp
jnp
fprem1
sub
ins
mov
cmp
out
xor
push
enter
arpl
push
out
movs
mov
mov
xchg
jl
xor
out
mov
fwait
mov
mov
lods
(bad)
les
xchg
sub
outs
imul
dec
xor
xor
loop
loope
cli
into
mov
push
imul
clc
loopne
pop
jne
push
jno
pop
push
cmp
popa
xor
ss
sbb
ror
retf
pop
cmc
lahf
fistp
jne
loope
mov
aas
push
xlat
in
jmp
jae
sbb
push
jle
add
push
loope
lock
sub
cmp
(bad)
(bad)
in
call
jne
ss
sub
loope
push
scas
mov
xchg
(bad)
sbb
ins
call
jmp
cs
push
or
mov
in
popa
jp
mov
sub
sbb
mov
or
sbb
stos
jmp
pop
std
call
in
lock
xchg
add
dec
jmp
push
and
or
(bad)
loop
push
sbb
outs
cld
inc
and
pop
jmp
dec
lahf
movs
sahf
mov
movs
sbb
out
das
sub
sti
dec
cdq
enter
mov
pop
xlat
adc
jo
aad
inc
imul
mov
pop
jae
sti
pop
shl
fwait
into
call
and
dec
loopne
dec
pop
add
mov
aas
jbe
lahf
pop
outs
icebp
push
ins
jmp
push
xor
cmps
das
sbb
lock
idiv
fist
mov
ds
jmp
xor
out
inc
xor
add
xchg
or
test
mov
imul
pop
pop
data16
std
add
leave
dec
mov
and
call
inc
mov
cdq
clc
fnstsw
outs
pop
scas
mov
cmp
out
test
mov
shl
ss
lods
xor
xor
push
xchg
xor
xchg
sbb
adc
and
out
in
popf
in
fs
arpl
sub
call
or
(bad)
xor
jmp
out
rcr
idiv
leave
sbb
or
arpl
push
mov
outs
push
hlt
cli
xchg
int
sti
sub
xor
sbb
retf
fdivr
loopne
ins
mov
test
test
lea
pop
in
pop
mov
sub
push
adc
add
and
inc
mov
cmp
ror
dec
sbb
pusha
fstp
add
or
fisub
push
ret
fild
js
les
ffree
fninit
fwait
dec
out
es
mov
icebp
mov
bound
xchg
mov
lahf
outs
addr16
dec
mov
dec
jo
xchg
mov
or
adc
stos
bnd
cmp
adc
sub
lods
std
pop
dec
out
cs
aam
mov
jns
sbb
push
(bad)
mov
adc
call
aaa
and
add
mov
sub
gs
push
pop
mov
std
test
pop
push
jns
jno
lods
xchg
rcr
dec
xor
(bad)
pusha
or
xlat
enter
idiv
sub
push
dec
not
push
ret
movs
iret
outs
cmps
pop
ja
sub
(bad)
ss
push
add
outs
repz
push
gs
(bad)
shl
stos
push
mov
push
sub
pop
mov
push
pop
push
sbb
sub
add
dec
push
jle
lds
cmp
dec
addr16
out
or
sub
loop
adc
mov
pop
push
inc
push
adc
sahf
pop
or
xchg
in
dec
adc
mov
push
xor
jge
retf
sub
(bad)
inc
adc
fsubr
cmp
sbb
sbb
outs
sbb
imul
repz
(bad)
loope
push
jne
add
lods
lea
out
cmc
pusha
mov
sbb
les
jmp
(bad)
cdq
lahf
xchg
les
(bad)
ror
outs
dec
or
add
pop
push
pop
arpl
add
scas
in
loop
test
add
lock
dec
dec
jno
mov
xchg
(bad)
fsubp
xor
mov
mov
pop
mov
pop
add
xchg
psrld
or
movs
loope
aad
mov
loopne
mov
jle
mov
mov
inc
add
cdq
adc
jne
clc
(bad)
add
push
mov
fdiv
dec
dec
adc
addr16
loop
mov
call
inc
cmp
idiv
loope
ds
inc
mul
jmp
cmp
cdq
cmps
mov
sub
jns
(bad)
xor
dec
ja
data16
in
retf
and
pop
not
sti
sbb
mov
cmp
das
arpl
dec
sbb
ficom
xchg
and
adc
mul
cwde
popf
ret
push
push
call
mov
out
dec
mov
mov
mov
add
or
aad
je
and
and
cdq
pop
cmps
sbb
pop
lds
out
mov
add
sub
cmps
jge
addr16
andnps
add
popf
xor
int
sti
push
mov
xchg
retf
bnd
jbe
cs
fs
push
movs
and
movs
cwde
fs
and
xchg
inc
ss
ins
and
mov
gs
repnz
jns
or
jno
jbe
push
cmps
movs
mov
sti
pop
mov
ja
dec
shr
sub
dec
gs
xlat
outs
adc
fwait
mov
(bad)
in
mov
mov
enter
in
jg
dec
dec
ins
jbe
xor
fmul
jg
jg
cdq
imul
inc
dec
mov
fld
pop
js
es
pusha
cmp
add
in
dec
imul
retf
xor
fdivr
pop
dec
mov
aas
int
push
jmp
int
fdiv
test
push
adc
xor
repnz
sub
test
loopne
nop
les
sbb
fst
xor
cmc
in
hlt
clc
and
cs
mov
jns
dec
mov
js
mov
adc
or
dec
imul
cwde
ja
je
cmc
scas
push
outs
dec
mov
xchg
popf
mov
int
aaa
aaa
xor
sbb
add
les
push
shl
inc
sahf
pop
mov
xor
mov
stc
mov
push
ds
jmp
imul
scas
fst
std
or
xlat
push
add
fdivr
sbb
stos
inc
shl
movs
inc
jp
pop
mov
test
cmp
or
lods
adc
adc
jnp
mov
pop
xchg
jb
fild
sahf
sbb
mov
in
into
jl
jge
sub
into
add
xor
cmp
movs
inc
lea
push
aaa
outs
or
pop
xchg
loope
pop
mov
mov
ret
das
mov
retf
jo
sbb
daa
test
jl
sub
fisttp
or
fs
fild
xchg
pop
mov
pop
arpl
sbb
mov
mov
inc
imul
inc
or
and
stc
enter
jno
(bad)
popa
push
jmp
(bad)
enter
xor
inc
pusha
xor
xchg
lods
cmc
xor
imul
ret
cmp
xor
mov
out
aaa
mov
pop
pop
out
jecxz
ficomp
add
es
mov
clc
(bad)
(bad)
xchg
add
out
jns
dec
sar
(bad)
push
and
mov
mov
xchg
fild
ds
jecxz
dec
pop
xchg
mov
pop
push
xchg
call
mov
mov
shl
sbb
fs
je
add
ds
mov
ficom
ret
leave
pushf
scas
ins
mov
sub
cmp
into
lods
jle
nop
xchg
xor
scas
test
aas
push
mov
ins
int3
xor
mov
cwde
and
pop
imul
out
out
or
fxch
inc
stc
pop
inc
into
loop
pop
sti
aad
(bad)
xor
mov
sbb
xchg
imul
mov
push
scas
pop
imul
lods
push
jecxz
int
add
push
(bad)
pop
in
jg
sar
loop
inc
movntq
mov
cmp
loopne
add
adc
call
(bad)
mov
mov
sahf
ss
lahf
sysenter
int3
test
add
(bad)
loop
popf
fsub
mov
sub
mov
or
rol
and
std
dec
pop
jmp
sbb
mov
cdq
push
movs
lods
adc
push
data16
movs
cmp
mov
out
cmps
cmp
xor
mov
xor
and
xor
sahf
and
icebp
movs
mov
mov
push
add
outs
mov
test
sti
dec
add
sub
sbb
ret
cdq
rcl
add
and
arpl
nop
inc
arpl
popa
mov
stc
and
mov
icebp
push
in
adc
(bad)
and
nop
push
(bad)
movs
leave
or
push
pop
inc
adc
imul
stos
jmp
stos
cmp
pop
(bad)
fnstenv
jg
or
fmul
dec
push
mov
in
cdq
fwait
cmp
aas
loop
mov
mov
adc
pop
mov
retf
jbe
and
addr16
aam
add
cmp
arpl
mov
add
stc
push
loop
ficom
xchg
rcl
sbb
cld
jge
mov
xchg
imul
mov
jae
mov
das
ins
(bad)
xor
icebp
dec
mov
cmp
jge
or
jmp
push
cmps
mov
and
mov
aad
cmp
int
neg
adc
pop
jl
jecxz
mov
dec
movs
lea
dec
sub
test
push
or
sbb
xor
popf
nop
gs
pop
push
xchg
mov
xor
xor
test
mov
cmp
mov
into
loope
das
mov
jbe
jno
fdiv
dec
mov
pusha
call
or
call
in
dec
mov
test
and
cs
cmp
das
into
fcomp
(bad)
jns
adc
pushf
jg
popa
fisubr
inc
aam
sub
mov
sub
mov
fcmovnbe
add
add
dec
lds
xchg
gs
mov
mov
mov
mov
out
repnz
add
xchg
popa
retf
sbb
test
leave
daa
cld
mov
ja
ret
fild
mov
inc
mov
popf
mov
and
mov
jl
mov
fisubr
and
(bad)
add
inc
stos
pop
xchg
mov
dec
pop
mov
jmp
ret
leave
push
jle
dec
ss
pusha
cmp
in
pop
outs
inc
push
jl
mov
movs
gs
daa
adc
mov
add
push
mov
cmc
jno
mov
lea
cld
add
(bad)
leave
mov
stos
mov
out
outs
inc
dec
dec
mov
xor
aas
lea
dec
(bad)
lods
push
aam
js
sub
pop
sub
inc
out
je
movs
fst
(bad)
test
sub
mov
cmc
dec
enter
int3
dec
mov
and
hlt
mov
xchg
add
sar
mov
mov
outs
stos
or
pop
xor
and
mov
aas
fst
pusha
aad
fwait
add
loopne
add
add
mov
and
push
fs
pop
xor
sub
div
int3
shr
xlat
xlat
inc
mov
jo
or
repnz
mov
imul
jmp
shl
jnp
sar
mov
xchg
lods
icebp
or
sbb
add
inc
xchg
ins
fldcw
jbe
call
(bad)
lods
ja
dec
add
add
sub
jmp
adc
push
mov
mov
stos
xchg
mov
push
mov
xchg
daa
xchg
pop
push
scas
mov
jns
or
mov
lods
jge
or
inc
ret
sub
mov
lds
dec
mov
jl
pop
js
mov
mov
jno
and
lock
xor
ret
pop
inc
add
hlt
cmp
je
jmp
sar
inc
push
jl
push
arpl
sti
cmp
sbb
jle
arpl
xchg
xor
hlt
addr16
push
xchg
pushf
(bad)
xor
cmp
add
add
bound
aas
je
sub
sub
mov
xchg
data16
cli
fidivr
outs
ret
(bad)
bound
add
in
icebp
push
mov
popa
add
inc
and
jmp
iret
mov
lds
pop
sub
js
mov
sub
enter
daa
xchg
inc
neg
loope
shl
push
sahf
fwait
mov
adc
mov
and
retf
or
xchg
cs
push
and
out
xchg
inc
push
dec
sbb
outs
arpl
jne
outs
ins
arpl
scas
mov
jae
xor
into
gs
push
mov
cmp
scas
push
and
jmp
pop
je
mov
or
add
pop
inc
pop
xor
push
shl
lods
xchg
out
dec
ret
div
fmul
mov
repz
dec
(bad)
shl
jmp
push
inc
mov
push
cmp
ret
icebp
aaa
and
pop
clc
xor
pop
xchg
inc
movs
and
add
lods
icebp
(bad)
xor
cmp
mov
pop
mov
sar
xchg
cmps
xor
inc
push
xor
test
jb
add
cmp
repz
out
das
inc
in
add
mov
push
sbb
in
dec
jno
fwait
pop
jae
lea
inc
je
xchg
or
jbe
pop
jne
push
xchg
pusha
ins
mov
xchg
adc
call
jne
pop
mov
enter
jnp
in
div
pusha
cli
xchg
es
arpl
cmp
mov
xchg
cmps
dec
enter
in
(bad)
sbb
xor
fsubr
cs
ds
sub
test
or
pop
mov
nop
jne
jle
lea
xor
lods
xor
push
cmp
push
push
cwde
xor
scas
ror
pop
in
mov
mov
and
xchg
(bad)
in
add
mov
push
scas
jbe
or
adc
sbb
xchg
cs
add
dec
mov
sbb
or
test
sub
mov
inc
jge
push
stc
fist
leave
adc
sub
dec
cwde
xchg
fnstcw
nop
sub
and
or
jno
pop
std
or
cli
outs
lea
repz
or
adc
lods
xchg
aam
push
jne
in
rol
sub
(bad)
jecxz
push
shl
jg
bound
(bad)
scas
mov
ins
(bad)
mov
lahf
pop
retf
push
(bad)
jle
(bad)
jmp
aad
imul
(bad)
clc
sub
sbb
jae
repnz
xor
fst
add
dec
inc
enter
mov
jmp
push
mov
mov
inc
or
icebp
call
adc
repz
cmp
inc
call
hlt
cmp
fisub
loopne
sbb
rcr
fwait
cmc
add
ins
cmp
sahf
jnp
fistp
jo
call
out
pop
jo
xchg
add
in
jbe
xchg
or
jo
xchg
or
dec
xor
loope
gs
xor
jl
fst
lods
pop
cmp
inc
std
xor
aas
icebp
scas
adc
inc
inc
into
gs
out
pusha
or
neg
fwait
sub
xchg
enter
bnd
popf
push
inc
mov
rol
(bad)
push
add
xor
jns
iret
not
int3
ror
aad
(bad)
sbb
xor
jo
jle
cmps
test
(bad)
xchg
out
movs
les
aaa
mov
pop
dec
data16
aaa
or
retf
adc
jae
jne
adc
dec
(bad)
les
stos
mov
dec
test
cmp
xchg
sar
push
pushf
or
and
jl
dec
mov
stos
shl
jmp
adc
xchg
mov
test
mov
pop
jge
fdecstp
arpl
shl
add
sti
ins
les
loope
cmp
adc
push
aaa
addr16
xchg
popf
fwait
add
cdq
mov
jmp
push
ja
sbb
sub
push
and
(bad)
fstp
popf
pop
dec
fstp
js
cmp
(bad)
je
into
pusha
(bad)
add
push
retf
xchg
xchg
push
hlt
lahf
xchg
out
aaa
icebp
adc
add
jmp
adc
cdq
popa
sub
mov
mov
jecxz
adc
stc
sbb
retf
sub
into
es
fdivr
into
sbb
out
and
(bad)
(bad)
in
pushf
mov
scas
mov
out
scas
push
jb
inc
or
jl
fdiv
shl
cmp
jns
add
(bad)
pop
pop
dec
sbb
dec
cmp
adc
int
jmp
fs
shl
and
adc
into
icebp
fsubr
sbb
cmp
popa
cdq
mov
mov
ror
js
retf
js
xchg
mov
jno
sub
mov
rcr
add
(bad)
pop
pushf
imul
mov
hlt
sbb
fmul
push
cmp
pop
stos
and
xchg
imul
xchg
cmp
icebp
pop
sbb
cmc
push
sub
xor
mov
jo
push
xchg
cmps
or
loopne
mov
lock
xchg
inc
repnz
jg
xchg
ret
jne
jbe
add
loope
out
daa
mov
and
sbb
mov
or
test
sbb
pop
ret
aaa
sub
add
std
dec
out
jecxz
ficomp
out
jbe
jecxz
ficom
icebp
inc
sbb
mov
cwde
push
adc
mov
or
or
jb
cmp
imul
sar
pop
shl
daa
mov
pop
mov
adc
add
shr
cmp
mov
and
pushf
mov
sbb
jge
mov
jnp
sbb
inc
add
mov
inc
jl
bound
cld
pop
(bad)
stc
mov
inc
movs
or
loope
cwde
mov
xor
call
sub
addr16
popa
push
fwait
or
adc
out
adc
loope
mov
and
mov
fst
and
mov
xchg
mov
inc
dec
sub
and
daa
retf
stos
mov
div
out
xlat
or
jns
into
mov
mov
inc
sbb
data16
pop
outs
int
adc
pop
mov
xor
xchg
mov
(bad)
sub
dec
fisttp
sbb
sub
mov
mov
aaa
fiadd
cmp
pop
mov
das
pushf
push
(bad)
push
cld
add
arpl
mov
inc
fwait
mov
jae
mov
xchg
pop
push
cmps
aam
sub
stc
xchg
adc
mov
imul
fild
sar
mov
dec
pop
dec
and
pop
lds
(bad)
pop
mov
ins
cmc
loope
loop
lahf
push
cdq
jecxz
ins
xchg
ins
call
sar
pop
sub
(bad)
jno
pop
inc
addr16
mov
aas
sar
mov
int
jo
int
mov
aad
sti
sbb
jle
adc
adc
cmp
fucomp
sbb
mov
sbb
push
push
add
or
test
add
and
ret
out
(bad)
not
jo
mov
loope
jle
fstp
shr
lds
arpl
fild
rcl
mov
xchg
fs
add
lahf
in
fwait
mov
mov
xor
mov
rcl
movs
mov
dec
loopne
mov
dec
test
cmp
cdq
xchg
lods
test
mov
push
mov
cmp
pop
ja
or
mov
xchg
jno
push
dec
idiv
ss
or
fld
out
loop
es
nop
daa
out
jo
sbb
(bad)
ror
cdq
and
enter
imul
movs
dec
mov
adc
add
inc
xor
movs
xchg
inc
rol
pushf
movs
arpl
and
aaa
push
mov
shr
mov
dec
mov
push
pushf
int
retf
add
scas
retf
sub
inc
dec
je
add
mov
mov
iret
lds
cmc
push
test
fs
adc
imul
pop
(bad)
cmp
inc
sbb
jb
xlat
dec
mov
cs
dec
or
enter
mov
in
adc
in
and
and
sub
push
cmp
iret
lods
ins
or
sti
jb
or
pop
mov
pop
or
mul
dec
ror
xchg
iret
xchg
push
or
outs
jp
nop
cmps
xor
push
inc
pop
and
jmp
dec
and
add
cmps
pop
xchg
retf
test
retf
xchg
push
push
add
add
cmp
inc
mov
dec
mov
xor
imul
jmp
pop
mov
cli
jl
cli
xchg
lods
dec
int3
lods
push
mov
or
mov
sbb
sbb
mov
std
lahf
xchg
mov
into
jmp
push
loop
loope
rcl
in
pop
pop
repnz
or
scas
shr
loopne
pop
icebp
mov
xchg
push
out
cmp
inc
pop
retf
rcl
in
loope
je
popf
mov
pop
imul
sar
xchg
gs
xchg
cmp
cs
pop
add
push
mov
(bad)
in
cwde
mov
test
mov
out
in
push
mov
and
ror
retf
push
jo
push
bound
or
sti
ss
in
and
repnz
pop
aad
xchg
repnz
stos
pop
repz
mov
fadd
outs
cdq
cli
ins
inc
les
mov
lock
aaa
pop
jne
mov
or
dec
sar
mov
ret
add
loopne
mov
xor
jb
ja
mov
push
add
fimul
push
push
xor
mov
adc
sti
shl
adc
neg
jmp
push
ja
(bad)
stos
and
sbb
dec
jno
inc
das
xlat
sar
or
adc
rol
adc
or
out
arpl
sub
mov
pop
sti
cmps
add
ins
mov
je
or
ficomp
sub
xchg
inc
sbb
xor
inc
dec
out
mov
cmp
ss
cmp
inc
dec
cli
mov
out
mov
cmps
push
imul
icebp
add
retf
fstp
mov
push
push
push
xchg
cmc
(bad)
scas
mov
ror
push
lock
imul
and
xor
(bad)
ins
es
popa
clc
into
jg
xor
mov
xchg
add
pop
mov
sub
cli
lds
rcl
daa
in
daa
mov
out
and
fwait
jge
cli
dec
(bad)
fnstcw
inc
ret
pushf
aas
fidiv
rol
in
inc
(bad)
push
sub
fild
sar
adc
push
push
mov
pop
daa
mov
int3
or
or
adc
inc
adc
and
test
bound
or
das
cvtdq2ps
xor
es
loop
sar
jge
ja
fisttp
(bad)
push
mov
fild
adc
sub
leave
stos
sahf
push
movs
push
std
mov
lock
or
xchg
cmc
cdq
xlat
xchg
rcr
xor
cld
test
clc
pop
mov
data16
jmp
bound
shl
pop
sbb
or
and
lds
mov
nop
xor
fistp
hlt
stos
xlat
jns
out
mov
mov
xchg
call
xchg
nop
add
jmp
push
outs
push
test
retf
mov
ds
out
cmps
stos
sbb
in
sbb
push
(bad)
dec
sub
into
popa
mov
imul
fcmovnbe
lock
cwde
jl
imul
adc
sub
into
jg
xchg
cwde
or
push
adc
aad
adc
and
outs
cmp
popa
sti
lock
mov
scas
inc
cmc
lds
xor
dec
xchg
inc
sbb
(bad)
es
and
add
or
mov
xor
xor
aam
xchg
shl
repnz
rol
dec
scas
cmp
mov
jecxz
push
sbb
cdq
sub
cmps
adc
push
(bad)
sub
sub
and
sub
cli
fimul
retf
inc
es
test
pop
adc
add
adc
out
stos
es
dec
loopne
stc
je
jp
jmp
pusha
sub
mov
rcl
je
and
lock
xor
add
mov
fisttp
or
push
inc
mov
sbb
dec
dec
push
ret
stos
rcr
test
out
imul
mov
sub
daa
cmp
cmp
mov
push
cmp
adc
or
out
push
je
cmps
cld
iret
inc
or
push
add
imul
int3
aaa
frstor
and
imul
inc
mov
or
(bad)
sti
cmp
mov
sar
add
or
in
lahf
sbb
xchg
lahf
mov
and
sbb
(bad)
cs
sbb
add
jg
push
inc
sub
arpl
stos
mov
ja
call
and
lods
aas
add
std
ret
and
mov
popa
inc
lock
xchg
xchg
lds
jns
add
(bad)
in
leave
mov
nop
sub
mov
rol
dec
ss
mov
imul
cld
ror
cmp
mov
lea
jne
dec
inc
jns
cmp
push
dec
hlt
or
fwait
push
ret
data16
js
pop
mov
std
mov
js
aaa
out
mov
cmp
in
rcl
sub
dec
jmp
call
jge
mov
popa
or
and
nop
aam
push
inc
and
call
aas
ret
cwde
xor
mov
das
out
inc
push
popf
jmp
sub
daa
aam
mov
out
or
or
outs
mov
and
mov
and
sbb
push
mov
mov
adc
inc
ror
shr
xor
push
xor
jo
mov
cmp
sbb
ret
add
or
adc
out
sbb
push
xchg
pop
xor
jmp
fcompp
movs
jle
or
push
retf
arpl
or
cld
dec
ja
ins
fisub
inc
xchg
adc
retf
adc
retf
dec
push
(bad)
(bad)
sbb
lock
sbb
bound
(bad)
fld
ror
into
mov
les
and
mov
xchg
cmp
std
stos
ficomp
out
sub
jbe
pop
fisttp
jae
and
jo
cmp
sbb
mov
leave
dec
sub
cmps
mov
xchg
loope
movs
ss
stc
jl
daa
imul
and
pusha
call
mov
icebp
ret
lahf
ss
inc
clc
adc
paddusb
dec
mov
cmps
cmp
push
stc
retf
pop
xchg
ret
dec
clc
repnz
sar
add
ins
std
addr16
sub
lock
loope
nop
outs
or
pop
jmp
sbb
xchg
in
fistp
cdq
sub
out
or
(bad)
aam
in
shl
sub
shl
out
(bad)
xor
in
loope
mov
or
mov
push
push
das
mov
jle
add
call
movs
mov
fidivr
call
adc
pop
out
out
clc
mov
enter
add
adc
mov
dec
hlt
sub
jnp
cmp
push
cmps
xor
movs
and
sbb
mul
imul
cmp
mov
in
add
outs
sbb
xchg
retf
push
in
jle
xchg
add
ss
gs
cmp
lods
js
jb
sti
inc
mov
(bad)
dec
les
inc
add
pusha
xchg
pushf
movnti
jbe
adc
xor
add
pop
lahf
jae
xor
stos
in
das
inc
pmaddwd
pop
out
cdq
retf
pop
daa
jecxz
mov
jnp
repz
cli
jns
mov
pusha
out
inc
ss
in
mov
pop
fcomp
xchg
sub
mov
movs
in
and
mul
in
jno
adc
push
clc
pop
mov
loop
popf
adc
ret
push
xor
and
mov
xchg
sti
fwait
or
jb
dec
sar
adc
in
xchg
fistp
ins
and
sub
jo
icebp
into
and
loope
sar
ja
cmp
mul
xchg
out
and
out
(bad)
mov
push
push
sub
pop
add
sbb
sub
inc
stc
sub
enter
ret
rcl
test
(bad)
stc
or
test
xor
push
mov
xor
sahf
out
movs
cmp
xor
add
lea
xor
adc
imul
adc
call
iret
push
push
or
sbb
adc
out
dec
xor
test
dec
sahf
dec
dec
push
sbb
popf
pop
sti
enter
push
sub
clc
adc
in
mov
sub
cs
and
inc
int3
mov
pop
xchg
or
out
movs
sbb
call
call
xor
add
outs
fcmovnbe
jge
pop
inc
lds
push
cmp
mov
mov
sbb
adc
mov
arpl
jb
test
mov
pop
mov
mov
dec
and
pushf
cmps
(bad)
cmp
fdiv
adc
int3
aam
and
in
not
lods
mov
and
stos
popf
sub
fwait
cs
push
(bad)
imul
sbb
mov
jmp
retf
xchg
pop
mov
adc
ins
sub
std
adc
es
bnd
add
rol
and
arpl
xchg
adc
fcmovnb
ins
scas
loopne
stos
in
sbb
je
retf
or
or
in
sahf
aaa
movs
popa
add
enter
pop
out
ins
xor
add
pop
rol
jp
(bad)
jp
(bad)
stos
in
push
adc
mov
hlt
sbb
add
jno
retf
mov
add
inc
inc
xchg
lods
addr16
mov
or
pop
(bad)
call
xchg
repnz
xor
pop
cs
imul
nop
push
jg
rep
ret
repz
mov
or
xchg
jno
fs
inc
sti
enter
cli
stc
pminub
stos
push
xchg
sahf
inc
dec
adc
adc
in
lods
sub
mov
dec
jno
sub
(bad)
enter
jp
gs
ret
cwde
cmc
pop
leave
add
sbb
dec
inc
mov
(bad)
jle
sbb
mov
cmp
mov
repz
(bad)
int
rcl
or
or
mov
out
jne
cmp
test
idiv
jmp
cli
pop
arpl
shr
mov
lds
pop
mov
push
push
mov
cdq
xor
ins
int3
inc
add
fdivr
push
jle
mov
enter
shr
push
mov
ins
ror
stos
adc
ror
(bad)
fidivr
or
test
mov
xchg
nop
movs
inc
sub
pop
sub
jno
fwait
repnz
inc
nop
jns
(bad)
xor
pop
pushf
push
ins
test
mov
out
push
adc
jbe
shr
les
das
ins
cmps
jno
sub
(bad)
mov
ret
(bad)
sub
xchg
sbb
dec
sar
push
mov
cdq
xchg
fisubr
jne
xchg
xor
xor
fwait
mov
out
dec
jmp
nop
in
loopne
cmc
gs
jne
(bad)
or
out
sahf
push
xchg
fs
mov
dec
je
into
pop
push
push
push
in
ins
xchg
aad
mov
sahf
pop
inc
dec
fldenv
jecxz
mov
jbe
fs
sbb
xchg
mov
pop
sbb
xor
mov
out
dec
sbb
mov
(bad)
and
dec
js
sbb
iret
pop
loop
cmps
test
mov
es
lahf
xor
push
imul
(bad)
mov
mov
pop
dec
fdivr
jle
mov
pop
and
or
mov
cmp
fwait
idiv
fimul
sub
dec
xchg
add
test
jnp
daa
pop
mov
mov
pop
sub
aaa
cmp
dec
sbb
fwait
test
cmp
fdivr
add
or
mov
sub
in
xor
xchg
cdq
test
push
mov
js
adc
xor
jp
ins
test
ret
fcmovbe
daa
in
sub
mov
sub
test
aaa
stc
aas
and
nop
add
add
(bad)
cmps
pop
in
imul
mov
dec
jns
adc
in
xor
jne
sub
cmp
inc
in
or
(bad)
std
retf
loop
mov
mov
pusha
xchg
ins
add
pop
xchg
jno
push
add
adc
test
mov
test
cmp
sti
jbe
inc
jge
and
outs
loop
pop
movs
and
dec
dec
push
scas
adc
dec
jecxz
pushf
and
jl
jg
in
jo
popf
add
mov
les
sar
dec
mov
inc
push
xor
outs
cld
outs
test
and
jecxz
pop
push
mov
pusha
popf
or
(bad)
or
push
jb
fcmovnu
jne
in
mov
ror
pusha
and
mov
cmp
mov
(bad)
sbb
mov
xor
sbb
jb
mul
jbe
pushf
mov
cmp
icebp
sahf
inc
sbb
mov
lods
sbb
inc
icebp
test
xchg
sub
(bad)
xor
pop
das
adc
push
ja
jb
fstp
inc
cmp
and
inc
lahf
jp
cmp
mov
or
cwde
repnz
callw
mov
mov
xchg
mov
jecxz
xchg
sbb
cli
mov
xchg
out
call
and
inc
sar
js
ss
fiadd
aas
jbe
inc
jne
add
(bad)
xchg
pop
dec
pop
xor
stos
push
int3
arpl
add
aad
jmp
add
dec
jl
jbe
mov
xchg
out
and
mov
sbb
pop
xchg
or
jle
out
add
out
test
loop
mov
pop
aaa
jl
retf
leave
repz
ss
lea
out
xchg
dec
(bad)
cmp
mov
aaa
xchg
jmp
push
repnz
loopne
pop
push
xchg
shl
ret
dec
adc
mov
adc
cs
sahf
dec
pop
xor
pop
mov
mov
cmp
mov
dec
mov
cmp
jmp
pop
gs
or
movs
not
mov
sar
push
jne
enter
sbb
lea
push
pop
arpl
les
mov
or
mov
fistp
cmp
dec
pop
inc
rcr
sub
inc
fist
enter
xor
les
int
(bad)
in
and
lds
pushf
xchg
and
icebp
(bad)
mov
(bad)
in
push
pop
and
movs
push
sahf
daa
das
inc
push
out
rcr
(bad)
fdivr
rcr
hlt
adc
ss
ds
into
fisub
mov
or
lock
imul
ja
add
loop
adc
add
pusha
mov
cmps
in
xchg
mov
xor
test
jle
inc
or
adc
xor
mov
mov
addr16
loope
add
out
fnsave
inc
and
add
mov
add
jp
aaa
aaa
mov
jge
test
xor
in
or
mov
cmc
pop
iret
nop
push
xchg
loop
jmp
dec
popa
cli
fstp
cmp
ret
add
jecxz
mov
jb
test
ret
cmps
popa
fisub
mov
cli
push
test
rol
cmp
xor
das
sbb
loop
mov
mov
xor
ret
xor
les
cmc
(bad)
inc
mov
mov
xchg
inc
(bad)
jg
aaa
xor
jg
retf
pop
jle
mov
test
test
iret
ror
stos
xchg
ret
popf
cs
cmc
stc
ins
fadd
int
dec
xor
rol
pop
mov
addr16
lods
add
(bad)
mov
pusha
jl
call
mov
dec
repz
or
jbe
sub
xchg
jne
xchg
inc
jae
sub
outs
fsub
movs
jne
or
sub
cwde
inc
mov
mov
out
sar
push
mov
enter
sar
cmps
(bad)
idiv
call
inc
scas
jne
jg
(bad)
jb
cld
dec
shl
add
lea
out
icebp
dec
dec
test
stos
mov
adc
call
adc
xchg
aam
and
cmp
popa
aas
xchg
push
inc
lea
ficomp
pop
sub
repz
dec
xor
cmp
rcl
cmps
iret
mov
(bad)
jmp
mov
cmc
aam
call
and
rcl
pop
repz
add
div
aam
pop
jo
or
or
lahf
cld
das
sbb
sahf
(bad)
shr
mov
(bad)
arpl
sub
and
mov
dec
mov
dec
les
clc
push
jmp
sti
(bad)
scas
iret
mov
jmp
or
fwait
imul
push
jns
iret
mov
bound
je
in
imul
mov
mov
jmp
mov
sub
ret
mov
add
adc
js
inc
and
mov
jnp
loop
nop
xchg
shl
add
mov
imul
arpl
pop
aaa
inc
jle
sbb
test
dec
sub
call
add
inc
push
cmps
mov
cmp
xchg
push
dec
dec
rol
inc
shr
xchg
stc
push
mov
into
inc
enter
sahf
je
ror
into
adc
cmp
fstp
pusha
bndstx
mov
fld
ds
pop
cmps
out
pop
call
pop
out
leave
jb
add
dec
adc
or
jmp
sbb
popf
cld
arpl
xlat
adc
stos
or
dec
or
lds
mov
je
inc
xor
aas
pop
fist
div
movs
outs
mov
push
bound
jnp
pusha
(bad)
scas
jecxz
cli
jl
mov
inc
call
(bad)
mov
in
cmp
xchg
mov
fnstcw
xchg
sti
dec
sub
(bad)
cmp
push
sbb
jne
xor
lock
mov
std
enter
push
mov
hlt
sub
std
repz
jg
xor
loope
lods
fld
jae
pop
clc
inc
test
sti
sar
fcmovnu
mov
shl
sub
sub
jmp
iret
js
repz
ds
mov
mul
ret
int3
fadd
cmps
mov
in
aam
jo
out
fwait
cmp
dec
fnstcw
cmps
call
outs
cmps
xchg
ret
xor
fstp
mov
ja
xor
retf
mov
jo
cmp
mov
jge
ins
xchg
push
push
push
sub
int3
movs
inc
adc
sub
pop
in
lds
xor
jg
mov
push
pop
addr16
out
shr
jmp
call
cs
mov
aaa
data16
(bad)
pop
cmp
movs
mov
js
push
pop
jbe
dec
or
repz
les
imul
sti
out
xchg
sub
adc
repnz
push
or
hlt
sbb
jno
sub
test
mov
xor
jae
sbb
push
and
push
test
clc
or
aam
hlt
retf
dec
fild
ins
cli
sub
cwde
iret
mov
mov
push
xor
push
adc
mov
sub
mov
sbb
xchg
out
pop
mov
sbb
mov
fst
les
pop
ins
jbe
xor
js
out
mov
ret
add
mov
aam
add
xlat
mov
pusha
stos
lds
sub
mov
sbb
pop
(bad)
outs
jnp
push
dec
pop
aaa
(bad)
je
fsubrp
dec
mov
cmp
pop
sahf
or
mov
fild
out
mov
fs
loopne
xchg
sub
ja
xchg
nop
lods
sbb
das
and
xor
dec
cmp
add
(bad)
adc
sbb
rol
and
into
(bad)
push
inc
daa
daa
jle
mov
stos
or
enter
ret
inc
out
mov
nop
inc
ret
call
icebp
jl
daa
sub
leave
add
sbb
mov
pop
or
call
mov
test
pop
sbb
push
mov
jno
push
mov
mov
adc
popf
dec
and
jnp
and
mov
jnp
xchg
cmp
test
scas
imul
or
xlat
pop
adc
dec
pusha
pop
mov
into
popf
mov
cwde
dec
or
jmp
jno
out
(bad)
mov
das
stos
xchg
(bad)
mov
inc
int3
sbb
and
xchg
sahf
cmp
andnps
dec
pop
sbb
dec
sbb
retf
xor
or
dec
xchg
test
out
adc
pop
retf
sub
mov
pop
movs
xchg
lods
mov
or
je
jae
push
adc
into
js
cmp
sbb
rol
adc
mov
lock
or
call
xchg
mov
repz
adc
mov
(bad)
icebp
inc
sti
jns
fnstcw
pop
cmc
mov
inc
push
ins
sti
outs
fsub
inc
mov
ret
jbe
loopne
mov
xchg
sti
and
div
sti
sbb
xchg
shr
mov
loop
sahf
ror
xchg
dec
ins
jle
and
je
mov
(bad)
and
mov
add
jmp
jl
inc
jnp
and
adc
retf
sbb
xchg
pushf
outs
dec
sub
pop
leave
dec
cmp
loopne
call
cmovnp
ret
xor
dec
shr
mov
je
sbb
xchg
adc
and
fld
outs
sub
sar
mov
pop
out
adc
mov
jnp
dec
rol
pop
(bad)
jnp
adc
or
cmp
aad
movs
pushf
int3
ds
sbb
stc
jns
retf
out
jmp
loop
test
mov
mov
push
mov
push
xor
pusha
sahf
dec
(bad)
mov
fdivr
or
scas
lods
push
sub
fdiv
add
push
inc
dec
iret
mov
mov
into
jp
nop
pop
dec
ror
mov
int
xor
fist
and
pop
iret
ret
add
sub
test
mov
jle
xchg
(bad)
sub
idiv
sub
shl
push
test
jae
cmp
out
or
jnp
sbb
test
fucomp
push
inc
mov
xchg
mov
sahf
jge
imul
or
in
push
imul
cmp
sbb
out
std
in
aas
sbb
push
lock
push
adc
ins
icebp
or
out
stc
push
(bad)
int
jne
push
(bad)
xlat
loope
sub
sar
mov
xor
cmp
in
out
test
or
jae
or
lods
dec
mov
and
jge
pop
cli
jl
movs
out
mov
push
cs
dec
mov
jmp
push
lahf
mov
test
lods
ds
add
js
cmp
push
adc
xchg
mov
xchg
mov
pop
xchg
jno
movs
adc
add
pop
xchg
xchg
xor
mov
popf
pop
adc
shl
or
mov
and
xor
jno
push
dec
(bad)
cs
mov
repz
adc
js
fbstp
(bad)
icebp
mov
jne
ret
pop
or
dec
es
mov
jbe
jbe
push
enter
mov
call
daa
push
mov
sahf
sub
sbb
mov
cmp
fistp
gs
xor
and
in
cdq
hlt
adc
test
pop
pusha
mov
push
mov
and
mov
jnp
push
mov
js
(bad)
loopne
xor
mov
mov
cmp
cdq
push
jecxz
int
cmps
cmp
jmp
ins
push
push
rcl
aas
fiadd
push
test
std
inc
rcr
fcomip
dec
cmc
out
popa
movs
aam
pop
xor
and
aaa
mov
imul
mov
push
add
push
xor
rol
xchg
dec
push
aas
ins
sbb
jp
loopne
jg
push
loopne
mov
jo
mov
mov
loope
loope
sbb
(bad)
gs
int3
test
sbb
dec
aaa
loope
nop
dec
mov
imul
ret
rol
adc
mov
aas
lea
lds
mov
out
lahf
iret
mov
dec
lock
cwde
mov
mov
mov
jle
dec
sbb
adc
in
jb
ret
and
outs
jecxz
loope
popf
addr16
and
jle
xchg
imul
dec
lahf
adc
jg
adc
inc
xchg
cmps
into
arpl
jge
sbb
imul
and
das
enter
cli
ret
scas
jne
dec
add
retf
pop
jecxz
pop
xchg
fadd
mov
mov
in
out
movs
pop
nop
cli
cmp
lods
mov
out
adc
xor
mov
scas
jmp
out
mov
rcl
adc
xor
rcr
fwait
or
mov
ins
sbb
mov
and
mov
stos
and
mov
cmp
(bad)
jmp
mov
jle
shr
xchg
ja
pop
int3
adc
sahf
shl
(bad)
pusha
xor
in
sbb
or
sub
mov
push
out
jg
push
jmp
sbb
jno
fnstenv
xchg
jge
push
jmp
pop
cmp
test
movs
xchg
aad
rcl
xor
mov
rcr
jns
push
arpl
xor
push
dec
mov
push
push
and
nop
adc
add
mov
cmp
or
mov
imul
in
mov
fldenv
daa
stos
push
in
clc
add
mov
aaa
es
pop
std
into
pandn
ins
xor
stos
and
fimul
or
xchg
lahf
mov
add
ja
sub
nop
retf
mov
adc
js
xchg
dec
pop
cmp
mov
pop
ds
stos
out
adc
jo
cmp
les
hlt
pop
(bad)
xor
icebp
inc
test
jp
data16
sbb
and
aam
lds
jge
movs
inc
pop
push
add
mov
retf
dec
and
adc
sub
ret
push
xor
test
fiadd
in
(bad)
mov
mov
pop
xor
jg
mov
imul
add
jae
mov
stc
sub
adc
sbb
cld
mov
ins
loope
cs
ret
xchg
mov
sub
sub
xchg
jb
imul
mov
pusha
lea
test
dec
loop
ins
stos
pop
bound
sbb
and
or
fcomi
aaa
cli
lds
adc
xor
jno
outs
or
(bad)
pop
mov
xchg
pop
in
div
fcomp
aaa
pop
cmps
test
mov
push
cdq
mul
jb
aad
add
xor
lock
jge
lock
and
int
mov
mov
cli
jo
sbb
xor
mov
jno
xor
loope
dec
rcr
adc
push
fwait
push
xchg
mov
sbb
aad
or
pop
pop
imul
xor
mov
shl
movs
xchg
push
sbb
sub
sbb
in
aaa
cmp
mov
pusha
es
scas
mov
mov
sti
sbb
inc
cs
jmp
pop
lahf
xchg
data16
jge
jns
cmps
lahf
popf
pop
pop
xchg
cdq
add
call
mov
pop
jo
cmps
(bad)
(bad)
js
ror
std
mov
sub
or
cmps
lods
push
call
iret
mov
pop
fadd
int
adc
call
(bad)
xchg
test
jle
sub
add
sahf
mov
xchg
leave
jg
add
jae
mov
xchg
ins
ret
jnp
je
pushf
popa
xor
mov
mov
pop
xchg
mov
scas
jo
dec
lods
sbb
(bad)
pop
adc
in
daa
xchg
rcr
mov
push
sub
in
sbb
stos
stc
adc
retf
xor
shr
shr
cmp
outs
jge
inc
out
in
cmp
mov
fsubrp
or
scas
dec
aaa
aas
inc
xor
mov
loope
dec
(bad)
imul
ss
fmul
nop
dec
pusha
int3
test
add
xor
in
pop
xchg
push
daa
test
sub
mov
aaa
movs
mov
fs
inc
mov
add
inc
imul
lea
cmp
pusha
int
test
aam
jae
shl
sbb
push
push
xchg
and
dec
cwde
sbb
inc
and
cmps
out
xor
dec
jns
ins
adc
push
mov
and
jbe
jmp
nop
(bad)
cld
jb
add
rol
ins
pop
xlat
jbe
retf
mov
icebp
mov
mov
mov
mov
out
sbb
pop
xor
jecxz
scas
retf
sbb
mov
aas
mul
je
mov
jge
push
imul
pop
loope
dec
aad
dec
aaa
stos
xchg
stos
xchg
je
jb
in
into
pop
and
aaa
movs
or
cmps
inc
pop
mov
inc
adc
mov
movs
scas
add
ds
push
in
fidivr
inc
add
sub
enter
sub
movs
out
sub
aaa
outs
(bad)
mov
mov
scas
xor
(bad)
imul
inc
repnz
ret
adc
xchg
mov
je
push
out
cmps
stos
push
dec
and
xor
mov
scas
sar
or
cmp
jbe
sahf
jge
xlat
(bad)
lods
scas
mov
sbb
loopne
aas
aas
sbb
dec
mov
jb
ins
pusha
lahf
or
inc
jmp
(bad)
mov
clc
stos
pop
das
lahf
(bad)
clc
shl
xchg
or
jmp
jo
imul
push
mov
out
jbe
in
jns
push
mov
xchg
inc
sahf
rcr
push
dec
fbld
mov
and
sbb
mov
inc
fwait
mov
push
loop
add
(bad)
cli
in
xchg
xchg
jmp
and
test
icebp
es
aaa
add
cdq
or
in
xor
(bad)
daa
or
in
hlt
pop
test
mov
pop
je
cmp
mov
mov
push
fnstsw
scas
pop
rol
dec
movs
jnp
xchg
fisttp
or
scas
idiv
adc
jo
mov
pop
push
nop
fadd
fldcw
push
xchg
and
movs
rcl
es
cdq
iret
and
jle
or
stos
push
fsub
dec
add
fucom
jge
cmp
mov
cmps
inc
and
sub
retf
dec
xor
scas
gs
mov
and
adc
pop
xchg
xchg
cmp
or
xchg
add
push
scas
ror
or
out
outs
jnp
jmp
je
add
mov
rol
sbb
or
mov
cwde
cld
sub
aam
mov
xchg
cmp
pop
sub
pop
mov
dec
xor
std
jno
pop
sbb
nop
std
hlt
sub
les
add
aad
(bad)
in
out
cmp
retf
enter
jle
bound
mov
int3
jb
cmps
fist
sbb
xchg
cmp
ror
rcl
dec
popf
les
inc
rcl
push
imul
loope
add
daa
cwde
inc
jne
mov
xor
std
sti
aaa
adc
aad
and
add
in
sub
pop
adc
inc
inc
xor
cmp
fs
inc
cdq
inc
mov
or
jns
sub
cmc
sub
jmp
imul
mov
fistp
pop
test
inc
sbb
mov
jb
adc
dec
sub
pop
cs
or
cmp
mov
add
sub
fldl2t
or
cmp
mov
sbb
adc
in
movs
xchg
push
frstor
mov
push
mov
sbb
jne
sub
adc
(bad)
iret
dec
mov
repz
aas
hlt
mov
jle
mov
cmps
rcl
or
push
stos
mov
xlat
or
mov
add
ret
fdivr
shr
scas
and
mov
pusha
add
adc
imul
sbb
fist
(bad)
fstp
sahf
cmp
jecxz
jle
fstp
xchg
aad
push
xchg
jl
mov
mov
push
div
xlat
adc
inc
mov
mov
jne
ret
outs
pop
push
add
cmp
sti
mov
int3
and
mov
aas
inc
lods
jae
mov
in
lea
jecxz
fmul
mov
test
xchg
pop
mov
cmps
call
(bad)
sbb
test
enter
xor
mov
cs
push
jb
out
dec
cmps
out
push
add
xor
sahf
dec
mov
push
shl
mov
inc
jge
in
adc
fmulp
lahf
aas
(bad)
adc
out
js
outs
mov
aam
sub
cmp
(bad)
adc
xchg
sbb
inc
push
mov
pop
mov
dec
sub
sub
xchg
loop
das
sub
inc
pop
cmps
adc
jp
jmp
add
cmp
mov
xlat
inc
inc
scas
(bad)
mov
dec
stc
es
fs
mov
adc
loope
scas
xchg
lds
mov
mov
es
ds
sbb
dec
xchg
mov
das
adc
xchg
in
leave
clc
mov
mov
inc
add
mov
pop
mov
lahf
inc
retf
xchg
mov
push
sub
or
and
cmp
je
lods
mov
or
jl
or
in
test
mov
pop
mov
xchg
jl
imul
pop
dec
jp
mov
add
sub
and
jmp
sub
jl
or
rep
lds
and
icebp
cs
cmp
stos
fisub
push
cdq
and
sbb
or
mov
lds
xor
mov
push
imul
push
movs
fadd
mov
test
add
lods
fist
push
rol
movs
inc
push
xor
mov
test
imul
mov
dec
jmp
fmul
out
push
imul
xor
out
(bad)
ret
sub
pop
retf
mov
lods
inc
mov
cmps
push
or
push
sub
xlat
xlat
xchg
xchg
cmp
lds
sub
add
cmp
push
cmp
pushf
pushf
push
sub
jne
mov
push
push
fist
clc
imul
pop
mov
shr
cmps
cli
add
sbb
popa
test
repz
in
adc
jne
cmps
or
mov
jmp
jb
scas
test
mov
push
add
push
mov
mov
nop
jl
sbb
add
push
pushf
fstp
mov
inc
jo
cmp
(bad)
mov
xchg
sbb
mov
call
ins
jo
stc
inc
stos
pop
lods
sbb
ja
enter
scas
jmp
pmuludq
pop
loope
cmp
push
pop
push
movs
lea
inc
add
sbb
stos
stos
bound
aas
xchg
mov
push
pop
jle
fst
pop
sub
lods
rcl
sbb
mov
mov
les
or
cs
jns
leave
pusha
sub
jle
retw
ror
dec
cmp
stos
outs
cmp
inc
and
lock
inc
rcr
sbb
movs
adc
jmp
adc
sahf
ret
push
popa
add
sbb
dec
mov
aaa
jnp
sub
movs
cdq
loopne
(bad)
mov
pop
bound
push
out
das
cmp
iret
(bad)
hlt
cmp
push
adc
jno
int3
cli
xchg
push
add
shl
or
or
xchg
lock
dec
mov
out
js
pop
mov
rol
das
shl
push
mov
push
jns
sub
sbb
lods
xchg
sahf
mov
inc
dec
mov
movs
int
outs
hlt
je
call
dec
xchg
inc
cwde
mov
xchg
and
lods
ins
pop
and
push
leave
mov
push
mov
jmp
sub
xor
sbb
dec
adc
mov
je
out
outs
cwde
add
inc
jnp
retf
sbb
les
call
mov
or
nop
(bad)
cmp
push
jmp
movs
aad
aam
inc
or
repz
lock
adc
xchg
lods
jb
aaa
jbe
data16
adc
ss
pop
(bad)
xchg
mov
cmp
inc
(bad)
lds
sbb
xchg
div
outs
and
aad
mov
test
out
pop
cmc
or
mov
and
pop
dec
jns
pusha
js
cmps
test
loop
icebp
gs
mov
sub
cs
fisttp
call
div
mov
gs
lea
jnp
fldlg2
mov
sub
fisttp
repz
sub
movs
fistp
xchg
sbb
fdiv
sar
dec
pop
test
test
fisttp
js
or
mov
dec
out
aas
sbb
sub
ds
cmps
in
ret
and
loopne
std
push
rep
xor
mov
sbb
jl
inc
lock
iret
mov
pop
pop
cmp
aam
ret
mov
popa
lods
les
(bad)
jle
daa
mov
aaa
int
ins
ror
rol
sub
fisubr
dec
inc
pop
rcr
fadd
cmp
std
ss
pop
into
dec
rol
jmp
lods
bound
mov
pop
popf
call
(bad)
enter
mov
fs
ins
push
adc
repnz
imul
movs
pop
in
int
and
sub
dec
test
pop
xor
clc
inc
rcr
fwait
nop
push
mov
cmps
mov
lods
sbb
retf
iret
pop
jne
mov
xchg
out
pusha
cmp
or
test
mov
mov
mov
and
push
ins
mov
js
or
adc
fcomp
adc
xor
arpl
mov
adc
into
push
mov
cmp
dec
jmp
ret
pop
inc
test
pop
xchg
pushf
(bad)
das
jne
mov
clc
shl
je
aam
std
mov
mov
cmps
das
les
cmp
(bad)
dec
xor
lods
aam
test
loopne
xor
(bad)
mov
and
dec
pop
sbb
xchg
stos
in
retf
hlt
jge
inc
(bad)
fidivr
int3
ins
int3
sub
pop
cmp
mov
repz
mov
cmp
jnp
xchg
loope
mov
or
(bad)
popa
loop
sbb
pop
repnz
push
add
xor
data16
pushf
mov
mov
and
ret
lods
sar
aas
push
fst
mov
jnp
jno
pop
push
add
les
push
adc
repz
push
push
popa
dec
adc
cmc
ins
jl
aaa
cmps
push
cmp
out
push
ins
fisub
dec
(bad)
fld
mov
add
pushf
mov
les
pop
cs
out
inc
pop
sbb
daa
(bad)
jo
adc
mov
push
jmp
out
cmp
idiv
jmp
jae
jnp
cmp
loop
add
mov
push
loopne
jb
call
pop
cmp
or
fld
xchg
fsub
inc
ins
iret
mov
scas
xlat
add
imul
cmp
pop
ret
inc
push
cmps
cmp
xchg
and
(bad)
sbb
mov
jp
mov
ja
(bad)
push
int
fmul
cwde
or
cwde
mov
int3
push
loopne
ret
inc
or
inc
jle
jb
sti
and
cmp
pop
jge
or
mov
aaa
fld
shl
popf
mov
xchg
inc
mov
int3
or
out
inc
int
xor
enter
dec
sub
mov
inc
outs
int
mov
jg
jbe
ins
cmp
and
sbb
inc
add
(bad)
and
jmp
sub
jb
int
outs
scas
pop
ja
stos
rcr
mov
mov
stos
inc
inc
xchg
(bad)
sub
xor
repnz
fxch
add
out
adc
dec
popf
jmp
je
dec
mov
cmp
jno
adc
aas
call
in
(bad)
movs
addr16
in
cmp
jno
adc
movs
call
xchg
in
mov
jae
inc
ins
push
xor
mov
idiv
call
pop
pop
ins
xor
push
out
into
jp
add
aas
int3
mov
or
aad
push
cmp
in
adc
sub
mov
dec
int3
cmps
pop
push
sbb
aam
jle
out
loope
scas
or
test
bound
mov
test
ret
shr
mov
adc
ins
mov
pop
dec
add
fistp
push
or
dec
push
hlt
lods
push
mov
and
xchg
pop
fdivr
pop
mov
jge
xor
out
dec
retf
mov
mov
mov
xor
loope
retf
mov
outs
int3
cmp
and
xor
or
pop
not
out
(bad)
daa
mov
inc
and
loop
xchg
cs
(bad)
mov
adc
or
mul
daa
lods
cmp
ss
and
cmps
out
fmul
cmp
xor
retf
push
pop
lods
jnp
imul
aas
or
jmp
mov
repnz
xor
pusha
push
pop
and
outs
jae
retf
movs
int3
call
add
fs
jg
fstp
pop
call
inc
mov
sbb
enter
jns
and
es
xor
repnz
or
lahf
dec
adc
pop
pop
loope
je
pop
pusha
sub
xor
pop
sti
adc
pop
fild
mov
pop
adc
xor
and
das
push
jmp
dec
push
sbb
and
push
iret
and
adc
sbb
inc
or
std
mov
pop
rcr
mov
sbb
cmc
or
icebp
cmps
or
or
or
push
loope
jb
aaa
ret
add
popf
scas
outs
cmp
ja
adc
xor
jl
stos
xor
(bad)
xor
mov
jg
and
out
jg
loopne
(bad)
cmp
outs
add
std
push
mov
or
xchg
jmp
call
sahf
cld
pop
push
cmp
ins
cmp
xchg
xadd
push
add
fstp
pop
sub
dec
inc
fcomp
dec
or
pop
out
add
or
hlt
sub
mov
jnp
and
mov
or
push
and
out
pop
popa
mov
adc
jge
das
fld
ins
mov
std
xlat
and
ja
or
fst
push
jmp
cld
adc
lods
dec
push
pop
xor
jg
imul
dec
pop
(bad)
hlt
out
mov
les
test
ret
xor
sub
idiv
xor
ror
loope
cmp
pop
lods
enter
mov
fidiv
sbb
(bad)
xor
mov
xor
sbb
pop
outs
xor
scas
call
jl
div
cmc
add
cmp
aaa
bound
pop
xchg
cmp
pop
push
and
and
test
imul
(bad)
cwde
loope
xchg
pusha
out
jmp
inc
xlat
mov
mov
cmp
je
adc
sti
lds
lods
mov
dec
sub
pop
aad
lea
and
inc
enter
push
fsub
je
movs
sahf
push
inc
gs
ins
push
ss
sbb
sub
in
xchg
icebp
xor
mov
div
cmp
int3
mov
cmp
mov
ds
(bad)
leave
fs
mov
(bad)
mov
or
dec
test
into
(bad)
ds
sar
in
mov
pusha
and
add
shr
hlt
pop
imul
adc
fwait
jecxz
pop
cmp
call
(bad)
sub
gs
sbb
enter
jbe
cdq
fistp
inc
push
retf
sahf
pop
or
cmp
rol
popf
push
jns
sub
xchg
push
movs
imul
xchg
jne
lods
mov
pop
and
push
jle
iret
inc
mov
xor
out
mov
icebp
jg
adc
inc
xchg
sbb
out
push
fprem
mov
inc
daa
ret
add
dec
jo
or
(bad)
mov
stos
push
out
cmp
mov
out
ret
cmps
or
cmp
push
shr
jmp
stos
pop
inc
jo
or
and
pop
test
push
movs
sbb
or
xor
mov
movs
xor
lock
jecxz
or
add
cmp
test
jle
in
movs
iret
das
inc
xchg
in
cwde
aad
push
mov
inc
mov
fwait
jmp
call
adc
addr16
lahf
and
push
outs
in
test
inc
xchg
fs
rcr
sbb
or
rcl
mov
loopne
add
(bad)
scas
inc
xchg
pop
fs
jbe
push
cmp
mov
sub
sub
mov
retf
xchg
pushf
std
pop
xchg
loope
nop
mov
add
and
mov
jle
mov
xor
call
pop
cmp
xor
bound
mov
or
shl
cmp
addr16
test
mov
xchg
fisubr
int3
inc
lea
dec
movs
hlt
(bad)
cmp
xchg
adc
aam
xchg
add
shl
xchg
xor
cli
cmc
sbb
jg
pop
mul
cmp
loop
ja
mov
test
fs
hlt
or
ret
dec
push
push
cmp
loop
push
imul
cmc
daa
and
xchg
xchg
cmp
mov
mov
fst
fiadd
xchg
loop
push
xchg
std
jnp
dec
cmc
cmp
mov
jns
xchg
or
aas
out
fdiv
loop
inc
cmp
popf
int
push
loop
out
movs
jp
mov
sbb
pusha
mov
and
push
and
add
mov
ss
mov
cmp
xchg
pusha
arpl
cli
(bad)
in
sbb
xor
mov
pop
adc
add
mov
adc
xchg
imul
jo
pop
dec
xor
xchg
add
rol
adc
jne
(bad)
xchg
mov
dec
aam
ret
mov
mov
lds
jg
jno
sub
sub
push
sbb
xor
sti
fisubr
add
xchg
cli
ds
inc
enter
fucom
cmp
inc
call
retf
shl
ret
idiv
hlt
sbb
fnstenv
test
pop
pop
call
in
in
imul
(bad)
xchg
jmp
mov
jmp
or
not
std
xchg
arpl
mov
into
or
and
int
movs
(bad)
scas
add
xor
mov
add
sub
xor
mov
push
add
das
sti
pop
push
jle
mov
push
pop
dec
dec
pusha
gs
popf
imul
sbb
mov
dec
scas
mov
dec
jl
add
add
js
sbb
jge
pop
xor
popf
icebp
scas
cs
inc
mov
outs
cmps
xchg
sbb
sbb
adc
mov
fidiv
mov
je
pop
sbb
pop
loop
cli
fild
cmps
fstp
js
sbb
cmp
jge
adc
nop
hlt
clc
and
mov
xchg
std
mov
ret
xchg
sar
cmp
adc
repnz
into
aas
mov
cmp
aaa
adc
mov
mov
inc
cmc
jbe
mov
push
dec
jle
or
das
retf
lods
mov
pop
int
jb
shr
dec
retf
sub
add
jb
scas
adc
and
fimul
js
sub
push
xchg
icebp
mov
sbb
inc
and
(bad)
add
pop
loopne
jo
xor
push
pop
jne
rcr
aam
xor
jae
outs
into
sbb
int
mov
cdq
dec
aas
mov
loop
pusha
xchg
mov
fwait
js
call
ins
inc
fnstcw
mov
imul
ret
mov
dec
or
aas
push
xchg
jmp
or
jo
scas
jmp
mov
lahf
jae
mov
cmps
mov
neg
lahf
test
jmp
or
push
rol
ror
or
std
cmc
pop
je
(bad)
in
or
mov
xchg
sub
cwde
and
mov
in
and
mov
pop
push
sahf
add
std
dec
fidivr
(bad)
push
xor
and
and
push
into
sub
cmp
daa
arpl
sbb
or
mov
rol
test
(bad)
in
out
clc
cmps
mov
adc
lea
fsubr
sub
xchg
add
test
dec
inc
jae
sub
adc
mov
xor
icebp
mov
mov
mov
daa
sbb
test
in
adc
scas
xchg
test
inc
(bad)
or
nop
mov
sub
push
push
push
dec
test
pusha
push
repnz
js
(bad)
out
arpl
sub
aad
cld
daa
mov
es
mov
retf
outs
rol
push
mov
fisubr
in
mov
es
test
mov
add
test
xchg
call
(bad)
cli
jmp
nop
scas
nop
push
jg
dec
in
jecxz
ror
lea
add
add
das
or
retf
test
ror
adc
sti
fwait
aas
jl
add
xor
fnsave
sub
adc
pushf
mov
scas
fadd
rol
jg
mov
fdivr
dec
jmp
dec
dec
(bad)
push
pop
dec
cmp
adc
push
enter
jnp
scas
out
imul
jp
cmc
inc
outs
mov
push
mov
hlt
mov
push
cmp
int3
rol
mov
inc
mov
ret
adc
leave
shr
das
pop
pop
imul
xchg
xchg
cmp
sub
scas
sbb
pop
mov
mov
xchg
stos
ss
(bad)
out
gs
int
cdq
test
push
rcl
jmp
dec
lods
sub
cwde
imul
xor
push
cmp
add
out
es
add
in
mov
retf
sub
mov
jns
and
lds
loope
push
int
fsub
or
rol
jmp
mov
dec
aad
mov
dec
stos
lods
dec
sub
pop
call
loopne
cmc
cmp
push
das
ret
adc
xchg
push
aam
xchg
push
(bad)
or
xor
ins
call
dec
retf
push
cmp
movs
sar
pop
xchg
push
lds
xchg
mov
mov
mov
push
push
cwde
xchg
ret
inc
inc
push
sbb
stos
xor
rcr
adc
xor
cwde
mov
ja
inc
pop
scas
stc
dec
ins
and
aas
lds
jge
sbb
inc
in
xchg
enter
stos
mov
push
pushf
add
xchg
xor
sti
fisttp
shr
in
push
outs
mov
jae
js
push
pop
bswap
or
push
out
cmp
pop
inc
cli
ins
xchg
cmp
dec
ins
jnp
and
or
hlt
dec
mov
into
push
aaa
(bad)
fisttp
and
dec
bound
sbb
xlat
cs
aam
fcomp
mov
cli
jne
rcl
dec
and
add
mov
mov
add
in
out
jae
add
push
sbb
enter
dec
out
xchg
dec
scas
pop
adc
cmp
std
jmp
ss
test
sub
and
or
mov
or
jb
sbb
movs
pop
ins
sbb
dec
mov
pop
test
add
inc
mov
push
xor
mov
jp
pop
mov
lahf
leave
adc
sbb
div
jecxz
cmp
nop
cs
imul
and
mov
mov
(bad)
stos
dec
pop
ss
fimul
add
jmp
jnp
movs
xor
imul
(bad)
outs
or
sub
fsubr
cli
adc
nop
push
cwde
jl
xor
aad
test
les
xchg
aaa
(bad)
pop
jb
or
dec
lds
inc
retf
(bad)
gs
clc
adc
imul
xchg
mov
and
call
pop
dec
mov
imul
out
out
mov
adc
fcomi
xchg
sbb
enter
lahf
nop
fbld
adc
gs
loop
or
shl
(bad)
shl
fld
push
rcr
outs
sub
inc
sbb
mov
xchg
lahf
jns
rcl
xchg
inc
push
lds
xchg
add
leave
mov
mov
stos
adc
mov
dec
mov
aad
pop
(bad)
jmp
xchg
and
add
data16
jl
mov
xchg
retf
leave
repz
inc
or
xchg
jmp
movntps
or
mov
and
popa
inc
daa
pop
mov
inc
retf
pop
into
push
mov
jle
test
je
sub
inc
push
ja
inc
aaa
call
lahf
inc
jb
imul
cwde
sbb
lea
add
sti
jb
ret
sbb
mov
push
(bad)
jo
call
fld
and
pushf
pop
cwde
sbb
(bad)
jle
sub
ja
mov
xchg
or
mov
movs
ss
lahf
sub
pop
cwde
cmp
inc
or
aam
and
xchg
sahf
inc
push
imul
in
in
call
push
dec
mov
in
lock
mov
push
vmovshdup
push
dec
adc
addr16
out
jmp
(bad)
push
wrmsr
mov
dec
sub
inc
pop
frstor
ins
shr
fldcw
test
push
cwde
iret
add
xchg
push
and
test
inc
lea
and
adc
sbb
jne
std
fmul
cwde
inc
mov
bound
das
dec
and
setnp
mov
push
inc
and
sbb
cs
dec
lock
ret
mov
fisttp
push
jge
or
jmp
add
ja
or
cmps
sub
lods
popf
dec
fst
sub
mov
out
xor
rcl
in
inc
outs
div
js
imul
sbb
cmp
mov
xor
mov
push
push
mov
add
out
sub
pop
call
aaa
cs
test
in
jge
push
test
xchg
stos
fimul
call
inc
inc
pop
xchg
outs
ins
fnsave
sbb
sbb
or
mov
mov
outs
push
cmp
aad
mov
dec
ss
lods
adc
popf
xchg
mov
push
bound
sbb
mov
clc
mov
retf
cli
iret
mov
mov
or
das
mov
mov
repnz
jl
xor
test
hlt
dec
jmp
pusha
sahf
mov
cmp
xchg
mov
pop
pushf
in
mov
loop
pusha
xchg
repnz
mov
ret
clc
add
loopne
inc
dec
dec
hlt
scas
mov
adc
jecxz
add
xchg
push
push
std
pop
loope
add
cld
xchg
mov
(bad)
mov
scas
test
arpl
mov
adc
ror
or
xchg
inc
or
pop
add
jp
mov
or
dec
retf
mov
mov
test
add
stc
mov
fwait
xchg
js
adc
mov
imul
nop
sahf
aam
xchg
and
call
jno
fcmovne
mov
leave
fwait
pop
xor
loopne
or
sub
out
dec
jl
sbb
and
push
push
mov
stos
out
mov
mul
sbb
punpcklbw
imul
cmp
ins
rol
dec
mov
in
push
dec
xor
test
sete
cmps
cwde
ret
mov
xchg
cmp
rcl
pusha
fmul
or
or
pusha
inc
pop
jo
sub
outs
cmp
int3
outs
jo
xor
or
push
aas
jo
dec
jne
sar
out
fadd
arpl
add
or
mov
xor
stos
mov
aad
icebp
mov
mov
dec
aas
and
jns
xor
hlt
push
mov
jo
mov
mov
cmc
push
ficom
push
sub
pop
push
xchg
punpckhbw
mov
xchg
jmp
or
jno
mov
cmp
fadd
jae
(bad)
mov
dec
rcl
repnz
shl
stc
sbb
scas
loope
fdiv
pop
jb
dec
push
mov
int
xor
xor
xor
mov
inc
andps
fwait
cmp
ss
fld
daa
div
ja
sar
pop
inc
imul
int3
lods
mov
sub
dec
or
mov
inc
inc
clc
push
aam
push
and
jg
fsubr
mov
lods
ret
xor
jns
icebp
jae
adc
mov
cmps
push
test
cmp
loope
xchg
xor
adc
addr16
inc
pop
pop
sar
daa
mov
loope
stos
rcr
inc
popa
aas
out
jne
stc
stos
mov
mov
xor
mov
cld
dec
push
sub
dec
ret
and
mov
add
cld
(bad)
jmp
out
and
xchg
inc
jbe
or
inc
jo
sbb
js
push
push
xchg
sbb
xchg
push
ror
add
call
std
test
pusha
xchg
mov
jge
cld
sub
mov
repnz
cmp
adc
test
mov
sbb
movs
pop
lods
jmp
in
mov
test
cmp
pop
mov
pop
adc
lods
clc
fwait
test
(bad)
mov
in
fs
int
mov
das
mov
(bad)
shl
mov
in
(bad)
daa
aad
jo
or
mov
jge
xor
mov
(bad)
repnz
fucom
loopne
xor
or
sub
aas
adc
jns
rol
jnp
dec
in
sub
aaa
movs
and
pop
jnp
push
jo
add
sub
or
retf
adc
mov
xchg
push
and
push
or
sbb
retf
or
mov
add
jle
mov
or
mov
dec
push
cmp
dec
lea
outs
sub
fsubr
mov
lock
mov
push
mov
dec
jl
add
push
fiadd
lods
retf
fsub
xor
mov
out
mov
jmp
pop
or
jae
and
xchg
push
int3
rcr
(bad)
push
bswap
sub
dec
test
cmps
(bad)
jbe
jns
sbb
jl
cwde
and
leave
fisubr
jb
xchg
and
cmp
sbb
xor
adc
add
scas
mov
ror
inc
test
and
sub
jo
fnsave
cmc
repz
cmc
sbb
(bad)
sub
clc
mov
scas
push
mov
(bad)
std
pushf
mov
enter
arpl
jp
and
lods
xchg
repz
sub
inc
fstp
sbb
inc
mov
mov
and
mov
cdq
sar
jae
mov
cli
or
imul
add
add
or
inc
fimul
xchg
test
pop
sbb
or
idiv
pop
sbb
push
int
neg
aam
rol
add
and
aas
dec
sti
jnp
push
jbe
movs
in
push
xchg
enter
lock
cmc
or
xchg
ret
add
popf
inc
sti
fisttp
pop
add
pop
push
pop
(bad)
jp
push
or
push
clc
cld
inc
inc
sub
mov
(bad)
xchg
sbb
fwait
js
add
dec
outs
(bad)
pop
in
(bad)
sbb
mov
cld
aam
pop
stc
mov
ja
fwait
inc
xchg
test
inc
xchg
retf
or
cdq
stos
push
push
imul
jle
clc
xchg
push
pop
pusha
pusha
pop
mov
push
jl
call
sub
fdiv
lds
jmp
jo
daa
adc
les
adc
mov
pop
cmp
sub
sar
fist
pop
call
jnp
repnz
pop
push
pop
les
out
push
jne
int
jne
or
dec
xor
ror
inc
hlt
scas
ins
jmp
jecxz
mov
push
(bad)
mov
adc
sbb
enter
mov
xchg
sub
dec
inc
retf
lock
lock
or
pop
in
pushf
retf
ds
(bad)
pop
add
data16
jp
sub
or
out
cmp
std
fwait
test
lock
push
mov
aad
lods
sub
imul
popf
rcl
fmul
mov
and
js
mov
cld
xchg
dec
or
cmp
xor
loope
shl
jns
call
push
xor
jnp
or
ret
mov
push
xchg
jmp
cwde
adc
fnstsw
mov
(bad)
rep
xchg
mov
dec
cmp
sbb
pop
mov
ret
nop
outs
lds
jg
cmp
sbb
arpl
test
movs
mov
xlat
cwde
scas
(bad)
fstp
mov
mov
outs
mov
inc
cmps
sub
or
rol
cmp
mov
push
add
movs
cmp
add
iret
leave
sar
pop
dec
pop
lods
push
adc
test
mov
pop
aad
push
mov
ss
std
ins
mov
cmp
and
mov
bound
sub
xor
out
fisttp
fwait
pop
and
call
adc
fidiv
lds
in
xchg
jl
inc
mov
or
sub
shr
fild
mov
pop
mov
adc
and
pop
enter
sbb
das
imul
sbb
cmp
xchg
cmps
or
jns
mov
mov
mov
add
adc
lds
jae
jb
lahf
jg
sub
aam
sub
sub
mov
jl
mov
or
xchg
test
int
pop
call
jae
push
xor
loop
add
lock
add
imul
push
add
jne
mov
icebp
sub
call
cmp
nop
bnd
pop
xor
ins
push
mov
scas
xchg
out
push
jae
int
or
loopne
push
mov
jmp
push
add
and
adc
push
loopne
jl
jb
xchg
shr
dec
aas
out
repz
imul
or
(bad)
repnz
or
cld
jno
push
ret
adc
or
or
ja
push
data16
retf
cmps
and
pop
xchg
rol
outs
push
outs
pop
or
ins
shl
mov
cmps
dec
sti
std
pop
movs
ret
add
add
lea
in
fisttp
cwde
sahf
stc
push
iret
pop
popf
pop
aaa
(bad)
pop
mov
xlat
xchg
jmp
sti
jnp
aad
or
xchg
mov
mov
into
xchg
pop
outs
pop
sbb
popf
fidivr
mov
mov
nop
movaps
test
xchg
cmps
rol
mov
ins
fadd
aas
shl
inc
(bad)
mov
cld
xchg
popf
jg
jg
sbb
imul
(bad)
mov
mov
punpckhwd
add
dec
icebp
das
push
jne
jne
jne
push
cmc
pop
pop
imul
jl
cmp
mov
stos
(bad)
std
xchg
in
xor
adc
aam
jbe
or
mov
cmc
in
mov
lea
shl
adc
or
addr16
mov
jp
mov
sbb
xor
aaa
call
imul
sub
mov
stos
divps
xor
mov
das
lahf
cld
popf
inc
test
pop
ja
push
xor
fwait
xchg
hlt
push
dec
add
test
pop
mov
or
and
xor
cs
nop
sub
mul
repnz
mov
ret
mov
aam
xchg
js
popf
dec
mov
aaa
jmp
jg
pop
sbb
inc
ret
cmp
retf
pop
push
sbb
movs
push
sbb
aam
ret
push
dec
lock
pop
ret
sub
sub
and
int
mov
stos
in
sub
int3
popf
loope
fist
sbb
in
push
mov
scas
xchg
push
retf
popf
xor
hlt
test
mov
(bad)
out
lea
sub
jne
jb
out
pop
mov
dec
popf
mov
out
pop
adc
imul
inc
clc
mov
dec
or
push
dec
jecxz
fwait
popa
pusha
(bad)
sbb
clc
shr
shr
mov
movs
fdiv
rcl
xor
int3
mov
mov
pusha
push
lds
push
in
repnz
addr16
sub
xor
mov
ins
lock
aam
imul
int3
loop
xchg
sbb
stos
push
mov
or
mov
pusha
cdq
ds
adc
mov
dec
sub
loopne
xlat
and
dec
loope
retf
sbb
mov
push
out
jmp
leave
shl
jle
pop
(bad)
pusha
es
addr16
push
mov
loop
push
mov
mov
mov
cwde
xor
(bad)
int
lock
pushf
jae
les
or
std
test
aaa
fldenv
dec
or
xchg
mov
cdq
in
call
ret
cmc
popf
jle
adc
outs
out
add
cwde
xlat
mov
call
into
push
mov
gs
lods
pop
psubsw
ds
fnstsw
jge
mov
xchg
ret
jne
into
test
js
jecxz
std
inc
call
mov
jmp
cmp
cmc
gs
es
rep
aaa
dec
je
mov
arpl
sub
cmp
mov
hlt
imul
pop
pop
jo
dec
fstp
clc
leave
add
mov
aad
or
cmps
jb
cmc
inc
xchg
je
das
cmp
mov
inc
xchg
jbe
fsub
xor
sahf
mov
xor
outs
adc
adc
popa
gs
push
cmp
push
ret
test
ret
inc
mov
fisttp
mov
mov
push
bound
mov
sub
cwde
stos
loop
xchg
ror
pop
and
(bad)
xor
in
add
cmp
inc
adc
cmc
into
jmp
jge
jnp
rcl
push
push
sub
jmp
push
xchg
pusha
call
adc
mov
repz
xchg
xchg
sub
out
mov
loop
fstp
call
dec
js
sub
hlt
adc
sbb
cmc
mov
cli
sub
int3
dec
fistp
repz
aam
cmp
dec
push
push
mov
mov
or
jmp
in
mov
dec
or
repz
rcl
icebp
rol
sub
inc
aaa
mov
jnp
ret
(bad)
cld
pushf
xchg
push
leave
gs
dec
mov
and
inc
pop
cmps
xchg
nop
cmps
adc
call
mov
and
and
add
ds
cmps
repnz
dec
inc
push
fisub
mov
add
clc
loop
dec
imul
mov
test
mov
je
sub
inc
cmp
dec
and
cwde
mov
mov
inc
nop
xchg
lock
pop
or
ins
push
xor
mov
pop
scas
es
xor
mov
(bad)
(bad)
or
int
pop
test
add
stos
adc
xor
inc
nop
hlt
pop
xchg
enter
xor
mov
cmps
std
in
or
mov
push
pop
repz
lock
push
inc
push
ins
or
addr16
pop
ret
pop
jo
int
les
add
jecxz
test
repz
push
ss
shl
dec
cmp
aaa
cmps
dec
mov
mov
cdq
sbb
daa
stc
into
add
jns
add
jno
mov
les
sar
mov
lahf
leave
xor
pop
pop
test
enter
aas
daa
xchg
mov
inc
dec
push
ds
mov
call
popf
or
pop
sub
js
add
adc
popa
in
sti
pop
shl
jo
ds
jb
cmp
adc
arpl
xor
adc
xchg
mov
mov
jg
push
mov
shl
adc
cmp
cmps
mov
mov
aaa
or
in
loop
loop
push
shl
push
std
pinsrw
fisttp
xor
sbb
pop
in
pusha
ret
in
mov
div
gs
xchg
cmp
mul
sbb
pop
xchg
rol
lds
bound
inc
leave
cwde
push
outs
test
push
(bad)
push
jg
shr
jne
retf
lods
out
imul
pop
pop
cmp
(bad)
bound
test
fs
data16
dec
mov
vcvtss2sd
inc
add
push
movs
lahf
stos
lods
pop
push
or
xchg
xchg
pop
scas
icebp
xchg
dec
mov
pop
jno
cmp
sub
shl
es
dec
or
jle
jl
sub
jb
adc
ror
push
pop
xor
jb
xor
jb
jno
cdq
mov
jb
xchg
(bad)
(bad)
fidivr
dec
xchg
mov
or
outs
mov
push
push
fidivr
add
cdq
dec
adc
(bad)
sar
shr
shl
popf
fcomip
mov
pop
cld
fsubr
jbe
cld
in
pop
ss
call
jle
sbb
cdq
popa
dec
out
push
add
je
jecxz
cmps
push
and
mov
inc
cld
test
test
ss
imul
rcl
dec
jle
inc
jl
aad
xor
add
add
shl
imul
jge
or
inc
les
ds
xchg
xchg
test
push
sahf
clc
push
jne
dec
jo
push
cmps
(bad)
(bad)
add
or
or
mov
jge
sub
xchg
sbb
retf
mov
mov
mov
mov
inc
int
inc
aaa
lds
imul
ds
pop
call
mov
push
pop
retf
ins
out
adc
sub
push
out
nop
loope
pop
mov
std
and
dec
outs
push
scas
hlt
inc
fistp
cs
mov
iret
addr16
mov
push
xor
repnz
xchg
scas
xchg
ficomp
push
fisubr
ficom
or
stc
push
mov
jecxz
sub
(bad)
pop
pop
rdpmc
push
dec
int
mov
(bad)
das
xor
mov
sbb
xchg
xor
loop
aam
push
out
push
mov
(bad)
cs
sub
add
xor
push
jmp
lods
jnp
stc
push
sbb
loop
ja
push
cmps
jp
call
(bad)
jnp
gs
retf
push
(bad)
or
and
sahf
jg
sbb
sahf
mov
add
jae
pop
cmp
sbb
xor
scas
call
jge
test
push
add
movs
push
jmp
or
xor
popf
cmp
rol
sub
ss
pop
sbb
xchg
test
jmp
das
ja
(bad)
data16
aad
cmps
jae
addr16
(bad)
adc
jae
sbb
out
mov
inc
inc
rcr
out
sub
jl
inc
mov
rcr
(bad)
enter
loopne
scas
xor
ja
mov
in
les
test
adc
dec
cmp
std
sub
cmps
push
push
adc
or
inc
mov
mov
cmp
xor
mov
shr
push
mov
pop
inc
mov
mov
pop
repnz
jge
and
mov
imul
add
mov
mov
mov
test
ret
xchg
repnz
mov
(bad)
jg
nop
shl
stc
cmp
or
add
xor
(bad)
pop
(bad)
arpl
pop
shl
add
push
cmc
dec
mov
loop
mov
(bad)
add
push
rcr
jmp
push
dec
aas
sub
shl
es
xor
mov
sub
test
mov
sar
(bad)
push
fs
xlat
xchg
inc
mov
push
cdq
mov
sub
ficom
or
mov
dec
adc
test
pop
cmp
in
inc
xor
adc
push
mov
aad
dec
dec
lahf
inc
jge
cmp
fnstenv
test
pop
push
cmp
in
inc
jg
add
and
and
add
jne
in
in
imul
enter
sbb
psllw
(bad)
js
arpl
mov
xor
sub
mov
sub
pop
push
mov
dec
adc
mov
inc
xchg
or
and
xchg
loope
or
pop
lds
test
dec
sub
dec
cs
sbb
(bad)
stc
retf
jg
sub
out
add
adc
movs
dec
sar
lea
leave
pop
pop
sar
cdq
inc
mov
pop
pop
aad
mov
mov
stos
dec
idiv
jb
mov
jae
push
jmp
leave
mov
ret
xchg
add
push
mov
jg
xchg
xchg
rcl
mov
in
xchg
inc
pushf
mov
or
xchg
ret
cli
cdq
cli
push
imul
movs
inc
stos
repnz
retf
es
xchg
icebp
(bad)
(bad)
inc
daa
cmp
fbstp
sub
push
pop
mov
adc
push
jnp
xor
cmps
add
stos
mov
mov
mov
xor
jecxz
pushf
xor
mov
or
pop
dec
loopne
data16
rcl
cmp
movs
jae
mov
pop
arpl
movs
mov
ins
sti
inc
xchg
jp
iret
add
inc
ja
mov
ja
dec
sbb
xchg
shr
das
jbe
cwde
mov
push
aas
adc
inc
xchg
lods
cmps
ins
push
rol
loopne
call
cmp
nop
adc
stc
aad
xor
es
test
sub
inc
dec
in
(bad)
xor
stos
xor
(bad)
ss
xchg
das
jb
inc
cdq
adc
inc
in
sub
repnz
(bad)
push
jno
mov
sub
mov
mov
repnz
shr
sbb
dec
shl
mov
pop
cld
or
jne
jns
sub
mov
xor
mov
movs
sub
adc
jl
popa
out
jl
sti
or
mov
fisttp
pop
xor
sbb
shr
fdiv
jno
shl
in
or
test
xor
cmp
xchg
nop
mov
jns
rcr
scas
in
and
cmp
(bad)
aam
xor
icebp
fimul
xor
fcom
and
std
jmp
mov
sub
cmps
mov
mov
mov
push
test
cmp
pusha
scas
push
inc
mov
fld
xchg
adc
das
pusha
or
sbb
sub
sub
shl
adc
jbe
nop
nop
add
jne
pop
push
js
inc
pop
and
repz
adc
fwait
cmp
xor
cli
xor
adc
cmp
cmps
pop
popa
cmp
jge
mov
add
and
fld
nop
or
add
jmp
das
xchg
jle
inc
adc
dec
je
stos
cld
and
inc
cmc
jmp
popf
loope
jge
xor
mov
jno
jno
jns
add
push
loop
pop
add
pop
iret
jg
mov
pop
or
cmp
inc
inc
mov
dec
push
ret
ja
lods
std
xor
sbb
in
mov
inc
cld
addr16
ficom
cdq
cmp
out
or
push
sbb
ds
bound
ror
adc
lahf
cld
(bad)
xor
mov
add
pop
mov
rol
jge
sub
or
jne
jnp
aad
push
out
jmp
mov
sti
sub
mov
stos
or
xor
inc
rcr
xchg
mov
pop
fisubr
pop
dec
pop
ret
ss
sbb
repz
outs
addr16
pop
(bad)
mov
sub
repnz
pop
dec
and
xor
loop
sbb
mov
int3
ret
enter
add
pop
lods
outs
mov
inc
jge
jo
inc
jge
adc
add
into
fs
stos
cmp
(bad)
loop
inc
call
jno
pop
frstor
dec
adc
les
dec
fild
dec
popa
cdq
(bad)
int
pop
mov
jp
fcmovne
jno
inc
or
je
dec
jmp
or
fld
lock
push
fistp
jae
aam
or
mov
jns
ins
xchg
sub
mov
jge
lock
push
jmp
mov
jge
add
aas
xchg
iret
add
and
inc
in
lahf
push
data16
pop
test
call
dec
inc
mov
sahf
add
rcl
ret
dec
xchg
inc
jg
daa
gs
push
lea
fwait
scas
imul
xlat
sbb
and
inc
sub
or
or
cmps
add
(bad)
sbb
xor
pop
mov
cs
das
jmp
jmp
leave
call
add
inc
sbb
push
mov
push
cmps
cmp
add
ja
(bad)
or
or
add
add
dec
add
or
dec
push
jnp
adc
out
or
fs
movs
enter
imul
retf
ins
into
das
pop
or
push
cmp
dec
das
(bad)
jnp
std
push
and
inc
vpaddq
xchg
mov
nop
pop
cli
outs
mov
xchg
aaa
pop
fisub
call
int
setge
cdq
sub
mov
jge
push
add
ds
push
test
xchg
or
mov
hlt
mov
fnstsw
inc
cdq
adc
lock
(bad)
lea
and
out
jecxz
mov
jmp
push
xor
cmp
push
jge
je
pop
ds
lahf
sub
add
aaa
adc
pop
push
cmps
in
int
popf
dec
and
das
dec
cmp
sti
aaa
pop
loopne
in
xchg
mov
test
call
(bad)
movs
mov
cmps
push
jecxz
mov
retf
mov
sub
loope
pop
sbb
and
xchg
adc
cmc
lahf
sbb
pop
dec
cmps
jb
mov
and
push
lea
push
mov
push
sub
or
out
xchg
jp
dec
adc
outs
mov
cmp
leave
xchg
jg
stc
cld
jge
ret
push
dec
js
cmps
pop
xchg
inc
or
push
test
scas
cmps
dec
jmp
cmp
sub
or
push
loopne
(bad)
js
jp
inc
and
cld
in
popa
xchg
push
repz
mov
arpl
mov
or
jp
test
xchg
pop
pop
scas
cmps
pusha
dec
shl
imul
in
pusha
lea
sbb
test
mov
sahf
ja
xor
ins
pop
adc
inc
in
call
mov
adc
jae
mov
push
xchg
xchg
mov
mov
and
cli
in
ja
or
mov
adc
or
inc
pop
push
and
or
pop
mov
js
fbstp
pop
push
jb
mov
sti
in
pop
xor
enter
(bad)
mov
jb
mov
icebp
add
mov
cmp
fst
jmp
pop
and
into
mov
cmp
sbb
jmp
jnp
cli
dec
scas
sti
jp
popf
push
jne
loop
fwait
je
out
rcr
int3
mov
lea
cmps
jb
xchg
xor
fistp
push
int3
dec
in
fild
inc
dec
mov
jae
adc
or
mov
xor
mov
cwde
xchg
mov
(bad)
xchg
dec
into
test
leave
stos
jmp
sub
test
fist
jno
push
add
es
cmp
out
popf
pop
inc
bnd
mov
mov
ss
jnp
mov
mov
sub
add
jecxz
pop
xor
scas
xchg
cwde
mov
ins
and
jmp
in
pop
xchg
setg
mov
ret
rcl
das
cmp
es
fsub
jmp
je
lds
js
test
sub
sbb
dec
sub
and
add
daa
sub
clc
jmp
and
leave
cmp
or
cdq
daa
(bad)
push
push
xchg
outs
mov
(bad)
jne
neg
mov
push
pop
adc
mov
stos
xor
xchg
or
dec
out
mov
adc
aad
rcr
or
out
lock
outs
in
retf
or
jb
cmp
pop
pop
add
mov
xor
jp
(bad)
sahf
shl
mov
xor
js
enter
and
shr
addr16
fistp
outs
test
mov
les
pop
retf
add
mov
push
neg
xchg
cmc
push
pop
mov
push
(bad)
scas
daa
jge
fs
jne
addr16
jb
lahf
into
and
jge
int
mov
mov
lahf
sub
scas
retf
jnp
fcom
and
fisubr
nop
stos
adc
shr
bound
gs
fwait
les
xor
stc
mov
sub
lea
pop
sub
cmps
mov
jne
sbb
inc
pop
out
test
movs
mov
jae
jnp
push
in
or
in
inc
std
and
jp
dec
scas
icebp
movs
cmc
fcmove
int3
pop
(bad)
pop
dec
push
adc
nop
pop
pop
lea
(bad)
out
cmc
mov
shl
aas
cs
xchg
or
pop
sbb
inc
mov
cmp
cmc
outs
xor
(bad)
outs
jmp
out
retf
repz
dec
pop
mov
add
test
imul
(bad)
adc
fsubrp
pop
push
test
arpl
lea
lahf
xor
mov
mov
aas
adc
jmp
loopne
ror
test
pop
fild
mov
and
xor
jns
xchg
lods
ficom
mov
sub
pop
loopne
mov
inc
mov
jge
sbb
scas
xchg
out
scas
cmp
mov
jecxz
imul
cmp
push
fimul
pop
aam
hlt
xlat
inc
aad
imul
ds
fsubr
mov
mov
mov
lahf
mov
or
aad
sti
cmp
retf
movs
and
pop
xchg
arpl
sub
cdq
fbstp
pop
push
fistp
cdq
enter
add
jno
jae
xchg
loope
xor
popa
(bad)
retf
sbb
pop
cwde
call
lods
cmp
enter
inc
cmps
sub
and
mov
pop
push
repz
lods
mov
test
ficomp
xor
jp
movs
stc
xor
hlt
inc
push
repz
ss
cmps
or
repnz
and
std
repz
gs
mov
xor
mov
xchg
and
movs
ss
cmp
in
leave
sub
fadd
pop
ret
and
add
cs
inc
xchg
call
sbb
mov
xchg
jp
out
(bad)
cmp
mov
rcl
jnp
sbb
or
sub
leave
or
outs
cmc
ds
in
jno
pop
cmc
into
xchg
arpl
cmp
imul
shr
add
iret
sub
loope
sti
shl
pusha
lods
pmulhuw
aad
inc
pop
sub
mov
les
or
pop
pop
sbb
pop
mov
sbb
adc
sar
cmp
jae
inc
adc
popa
(bad)
pop
pop
mov
repnz
cli
cmp
mov
out
jb
xchg
add
call
dec
lahf
(bad)
cld
call
jne
sub
add
push
lock
jcxz
outs
cwde
mov
dec
enter
dec
jle
(bad)
sbb
add
cmp
outs
imul
or
pop
aad
test
inc
jo
adc
cwde
mov
lock
test
xchg
xchg
mov
mov
inc
loopne
enterw
sub
mov
int3
loope
bound
or
dec
push
(bad)
inc
dec
push
cmp
push
sub
and
fadd
mov
sub
pop
sbb
movs
push
nop
movs
xor
pop
fs
test
(bad)
into
push
push
lods
shl
movsx
sbb
mov
cmp
sub
(bad)
(bad)
call
ja
pusha
loope
adc
jmp
add
pop
add
sti
push
int3
pusha
int
xor
cdq
xchg
adc
pop
or
scas
sub
xlat
mov
xchg
in
call
aam
jecxz
adc
leave
push
repz
test
mov
jne
xchg
adc
add
les
lock
xor
movs
cld
xchg
cld
in
sar
test
movs
iret
push
dec
push
mov
out
sbb
les
cmps
test
xchg
jl
popa
rol
jl
push
mov
xchg
mov
loopne
sub
test
ins
(bad)
jnp
(bad)
lahf
pop
mov
out
or
push
je
mov
add
repz
xor
add
mov
icebp
jp
lahf
in
sub
mov
cmp
xor
mov
gs
and
and
enter
data16
aaa
retfw
call
xchg
xor
cmc
pop
rol
xor
call
(bad)
pop
jl
xchg
inc
mov
or
imul
sub
pusha
cmp
pop
push
dec
and
ret
outs
fldenv
jnp
scas
cdq
fld
fwait
dec
mov
shl
and
pop
adc
push
or
jne
fld
loop
xor
xchg
jb
(bad)
(bad)
xchg
rol
pop
mov
cwde
movs
sub
and
jp
pop
and
sub
pusha
xor
arpl
push
test
sub
adc
jp
call
test
lahf
outs
in
cmps
fwait
adc
mov
mov
scas
dec
call
mov
clc
mov
add
ret
adc
aas
jl
ret
mov
iret
jl
xlat
in
fnsave
rcl
cmp
jmp
mov
leave
pushf
inc
and
fsubr
ss
mov
ja
retf
sbb
(bad)
sbb
fwait
add
iret
xchg
cdq
pop
push
out
out
ret
add
sbb
clc
mov
lds
jns
add
test
call
(bad)
xchg
(bad)
in
lahf
aaa
enter
pop
(bad)
clc
(bad)
(bad)
mov
push
cmc
mov
xchg
repz
jmp
cwde
jmp
xor
mov
vpsrlw
mov
jecxz
and
retf
or
enter
mov
pop
mul
popa
out
test
mov
(bad)
test
fild
push
dec
dec
push
ja
aam
add
sub
xor
jecxz
ss
inc
(bad)
frstor
out
test
fwait
aad
adc
pop
cli
movs
sub
jnp
cmp
adc
sbb
dec
fstp
(bad)
cli
js
mov
add
repnz
dec
aam
cmp
mov
in
cli
pusha
push
adc
lock
add
out
jmp
xchg
repz
jecxz
cmc
pop
ret
jns
xchg
cdq
fidiv
push
mov
lock
cmp
(bad)
idiv
add
mov
mov
or
mov
or
add
retf
outs
aas
jmp
xor
loope
imul
out
push
pop
scas
sub
pop
cmp
movs
mov
test
in
scas
loopne
mov
stc
push
repz
fisttp
push
or
xchg
movsx
lock
mov
data16
add
inc
and
call
out
mov
push
push
jno
and
sbb
scas
mov
sub
das
sbb
or
cdq
ja
scas
push
aam
add
neg
(bad)
enter
int3
mov
sub
cmps
pop
dec
mov
push
pop
mov
les
xchg
repz
xlat
mov
xchg
mov
inc
mov
and
ins
or
call
cs
add
fild
jecxz
fmul
dec
and
mov
lea
adc
and
push
xlat
repz
jnp
adc
jmp
vpbroadcastq
mov
rcl
and
ror
sub
fstp
xchg
scas
cli
jmp
mov
mov
fsub
shl
rcl
or
xchg
out
or
lock
and
adc
xchg
fbld
in
mov
aam
in
shr
xor
jae
push
retf
enter
pop
push
mov
push
sub
dec
in
mov
je
push
sub
loope
rcr
retfw
or
mov
not
js
in
lods
pop
and
repz
push
jo
in
jmp
jp
inc
loope
pop
sbb
bound
sbb
das
add
sbb
jns
pusha
sbb
or
fadd
mov
fadd
jae
dec
aas
add
jg
dec
jmp
push
outs
(bad)
adc
sub
rol
pusha
sub
retf
les
rol
pop
xor
aam
ins
pushf
lods
mov
mov
dec
mov
dec
test
adc
fcmove
repnz
stos
sub
fs
pop
push
aam
pusha
fistp
jecxz
rcr
mov
pop
jmp
jb
cmp
loope
pop
xor
cmp
sbb
cwde
lahf
jno
jae
push
inc
mov
mov
neg
popa
mov
cmp
xchg
xor
ret
xor
fs
or
push
add
sub
loopne
jb
pop
jl
cwde
stos
pusha
push
add
ins
lahf
xchg
scas
sub
mov
sbb
clc
mov
bound
aam
ins
push
pop
push
in
ds
outs
pop
(bad)
lock
xchg
sbb
xchg
in
aaa
ins
(bad)
mov
pop
mov
stos
pop
mov
fwait
ret
xor
dec
loopne
xchg
jg
mov
ret
cmp
and
jb
fidivr
xor
cmps
or
mov
ret
dec
imul
repz
(bad)
not
jg
hlt
jo
fs
push
call
mov
into
mov
fwait
push
mov
iret
leave
cmp
cmp
push
cli
adc
dec
and
xor
add
sbb
gs
cmp
ret
jne
nop
sbb
pop
xor
push
sub
jns
lds
dec
cmps
(bad)
mov
movs
inc
retf
xor
fmul
dec
mov
push
xor
mov
xor
(bad)
mov
and
cli
pop
(bad)
cmps
adc
(bad)
dec
cmps
pop
test
(bad)
fs
mov
or
pop
mov
sub
or
and
imul
mov
or
imul
sbb
pop
inc
hlt
pop
ret
lahf
and
jbe
rcl
push
push
daa
add
xor
jmp
fisubr
cmp
push
inc
stos
pusha
nop
ss
xchg
sub
sar
rcl
movs
shl
push
inc
xchg
xor
bound
mov
and
popf
aaa
jns
cmp
adc
imul
sub
sbb
push
jno
mov
mov
jecxz
ret
xchg
or
or
sub
xor
cmp
out
mov
int3
sub
repz
lds
jmp
pushf
sub
ins
jecxz
or
loopne
adc
and
lods
push
push
and
mov
and
sahf
dec
mov
mov
mov
imul
pushf
mov
ret
pop
mov
call
jno
clc
adc
fidiv
pop
pop
pusha
mov
ret
(bad)
fcomp
cdq
inc
scas
adc
ds
(bad)
fwait
ja
fisttp
mov
retf
arpl
jecxz
popf
ins
icebp
or
fcmovnu
sbb
push
imul
xor
mov
out
in
push
pop
mov
and
dec
jp
and
inc
sub
add
pop
cmp
loop
adc
outs
test
ds
add
popf
or
popf
pop
ins
scas
adc
ja
hlt
rol
and
lods
movs
cs
jae
add
inc
mov
mov
bound
gs
jg
push
test
inc
pop
arpl
jo
push
sbb
(bad)
into
cmc
stos
enter
or
popf
push
retf
in
iret
ffreep
dec
inc
ds
ret
push
(bad)
pop
aam
push
loop
mov
rcr
out
xor
js
mov
or
icebp
(bad)
pop
fild
ja
imul
mov
cmp
and
push
jno
xchg
sub
test
mov
shr
into
ins
js
cwde
cs
cmp
(bad)
push
and
retf
xor
call
(bad)
mov
out
dec
add
dec
or
inc
mov
adc
mov
push
stos
cmp
popa
add
add
mov
mov
add
mov
mov
inc
add
adc
inc
(bad)
test
mov
adc
xchg
clc
add
or
icebp
pop
or
xchg
repz
lea
mov
and
(bad)
loope
cmp
outs
or
stos
les
xchg
out
ficom
or
dec
cmps
push
test
mov
call
aaa
mov
cmova
call
dec
jle
xor
sbb
test
xor
push
fist
and
jecxz
mov
mov
mov
shr
push
dec
lds
mov
adc
(bad)
loope
add
adc
adc
int3
add
fnstsw
lds
icebp
hlt
gs
xchg
pop
call
xor
cld
or
and
(bad)
in
push
dec
call
cli
popa
sbb
outs
iret
cdq
sbb
pop
popa
xchg
mov
call
xchg
outs
mov
std
push
mov
inc
sub
cld
push
push
mov
lods
pop
push
mov
movs
adc
lods
retf
adc
movs
int
pop
gs
xchg
inc
arpl
jbe
fwait
mov
inc
(bad)
dec
mov
inc
pop
rcr
mov
xor
xchg
dec
call
sbb
sub
fcomp
mov
call
push
push
les
cmp
out
std
(bad)
call
jae
jno
adc
dec
pop
daa
sbb
sbb
add
cmc
jl
or
popf
lds
add
jo
or
jp
lods
retf
ret
and
mov
std
jmp
std
cmp
fidiv
inc
push
int
xchg
ror
and
mov
dec
test
jecxz
shr
fisub
aas
pop
mov
hlt
int3
add
pop
pop
pop
outs
sbb
inc
mov
sub
leave
cmp
dec
jp
imul
lds
jge
fldcw
fwait
pop
aam
mov
and
(bad)
sub
xor
xchg
cmp
imul
pop
ins
icebp
test
adc
mov
and
mov
(bad)
cmps
in
(bad)
out
jge
fnstenv
arpl
xor
aas
pop
sub
or
pop
sub
loop
pop
and
out
repz
mov
xchg
pop
mov
popa
mov
addr16
aad
in
push
sub
pop
sub
xchg
ss
sti
daa
imul
lock
xchg
lods
test
xor
add
int3
lahf
mov
hlt
fs
stos
mov
or
adc
aaa
out
stos
popf
and
xor
std
js
xlat
and
adc
pusha
gs
(bad)
out
je
gs
cld
pop
sahf
ja
dec
mov
or
sbb
and
stc
adc
fs
dec
mov
fnsave
sti
mov
and
mov
ins
rcr
mov
mov
sbb
inc
icebp
jle
ins
aaa
ja
push
and
pop
fsub
xor
add
aaa
ret
adc
mov
sub
in
fsub
mov
inc
dec
out
inc
stos
pop
adc
not
push
neg
jae
rep
mov
gs
stc
cwd
cmp
sti
adc
or
ja
cdq
jno
mov
mul
pushf
or
or
call
and
pop
sbb
vpmaxub
jo
jecxz
sbb
nop
(bad)
mov
adc
inc
stc
jbe
(bad)
popf
rcl
das
popa
aad
mov
pop
xchg
mov
jmp
and
ret
cwde
fild
ins
mov
push
add
in
or
les
pusha
mov
div
dec
mov
adc
(bad)
xchg
or
(bad)
push
jns
int3
icebp
test
mov
scas
adc
test
mov
jmp
adc
bound
aaa
int3
cli
mov
mov
push
push
mov
dec
inc
cmp
adc
xchg
inc
cwde
out
ror
test
cs
and
add
popa
jg
int3
inc
mov
add
sbb
or
in
pushf
jmp
add
and
call
rcl
mov
shr
movs
ret
sar
xor
pushf
push
push
add
mov
adc
push
lahf
(bad)
add
cmc
mov
sub
mov
lods
icebp
jno
stc
inc
mov
mov
imul
mov
(bad)
mov
mov
xor
mov
inc
xlat
mov
jbe
pop
call
dec
lock
xchg
push
(bad)
jae
xchg
ret
sbb
outs
push
push
sbb
mov
mov
mov
stc
pop
fwait
pop
call
pop
mov
push
sub
xor
dec
std
adc
outs
cmp
outs
jnp
mov
pop
mov
push
jb
xor
pusha
xor
adc
loope
ror
adc
arpl
(bad)
js
jnp
sahf
pop
fld
jg
mov
leave
dec
inc
test
in
clc
scas
and
xchg
mov
imul
push
adc
ror
cmp
mov
in
lahf
adc
xchg
into
or
pop
push
not
popf
mov
arpl
out
lods
push
push
fwait
data16
jne
xchg
lds
lods
(bad)
fwait
lods
adc
xchg
or
jmp
retf
in
mov
cmc
mov
push
ror
push
xchg
out
aas
sub
cmp
sbb
dec
les
(bad)
in
push
dec
sbb
fwait
data16
push
ds
mov
inc
icebp
ss
jmp
aad
mov
shl
jp
xor
fs
scas
mov
add
xor
mov
ins
inc
xor
shl
hlt
sub
repnz
je
or
xor
jnp
cmp
repnz
dec
pop
das
int3
push
sub
add
rol
popa
jnp
test
std
clc
pop
dec
push
int
out
test
mov
mov
pop
div
sub
cmps
shl
jns
mov
push
cmp
repnz
int3
outs
and
add
bound
movs
add
add
je
fwait
mov
push
test
mov
sub
movs
jmp
pop
jl
enter
pop
add
add
ret
mov
xchg
fs
mov
inc
pop
test
ins
add
or
in
fiadd
call
pop
add
jns
inc
jbe
loope
cmps
std
pop
jmp
stc
repz
sbb
mov
fwait
addr16
arpl
xor
mov
pop
xchg
in
mov
nop
ds
pop
sar
jp
pop
fstp
sbb
and
sti
fnstcw
mov
and
test
adc
enter
xchg
cmp
popf
and
cli
inc
mov
pop
xor
cs
push
inc
xchg
sub
push
cld
inc
lods
xchg
sub
xlat
push
dec
xor
mov
pop
inc
gs
or
bound
or
fs
mov
jb
dec
pop
pop
scas
pushf
xlat
sub
push
cdq
ja
ss
(bad)
xor
das
ins
add
call
sahf
cld
ret
(bad)
jmp
cmps
mov
ds
adc
fldenv
addr16
push
xor
cdq
movs
mov
push
mov
mov
mov
sub
push
mov
call
push
jecxz
ret
pop
leave
out
jmp
dec
pop
cmp
lods
xor
aad
popa
and
sbb
pcmpgtd
jo
lock
call
lahf
shr
cwde
shr
mov
loop
repz
jmp
fcmovb
arpl
sub
dec
ins
xchg
int3
mov
sbb
shl
test
rcr
and
lds
cmp
mov
pusha
sar
push
popf
lock
or
ret
addr16
jbe
mov
adc
and
repnz
xchg
and
inc
and
gs
jnp
jae
add
push
and
mov
mov
sbb
ret
retw
push
mov
das
scas
js
fiadd
pop
ror
dec
inc
xchg
mov
jecxz
test
xchg
inc
mov
cli
je
push
cmp
sub
fstp
sbb
jmp
xchg
test
or
js
lods
cmp
cmc
outs
fnstcw
xchg
pop
arpl
lahf
(bad)
shl
cmp
js
jno
or
js
mov
mov
das
lock
cmp
jle
scas
mov
push
mov
sbb
sbb
mov
js
jle
add
push
into
stos
mov
inc
scas
sbb
xor
loope
or
bound
inc
in
adc
das
or
repz
test
scas
inc
or
pop
cmp
xor
dec
xchg
dec
push
sahf
ss
daa
mov
hlt
int
pop
sbb
bnd
pop
shl
repnz
test
gs
add
in
push
or
xor
mov
jmp
xor
cmp
hlt
not
push
lea
pop
dec
cmp
fld
jb
push
in
xor
push
xor
fist
jmp
stos
aam
imul
push
xor
repz
jle
sahf
hlt
enter
aad
test
push
movs
and
cli
stos
stc
mov
sti
jg
inc
xchg
mov
aad
out
cs
push
in
aad
adc
sti
outs
adc
sbb
mov
xor
mov
mov
xchg
scas
dec
cs
sub
arpl
aaa
imul
les
add
xchg
sbb
lods
fist
cmps
nop
jnp
sub
imul
lock
sub
fild
mov
dec
mov
jl
lahf
add
repz
cmp
addr16
mov
enter
sahf
addr16
mov
cs
pop
push
jnp
push
outs
mov
ss
jl
mov
mov
cli
in
sbb
jae
push
pusha
add
hlt
mov
ret
jl
inc
push
mov
hlt
gs
sti
cs
jo
retf
mov
xchg
lea
inc
lods
sub
xchg
popf
sub
adc
out
into
sbb
push
add
mov
mov
pop
cmps
push
ins
mov
xchg
imul
dec
push
mov
sub
push
xchg
das
sbb
xor
mov
jg
lds
rcr
cmps
outs
scas
inc
jecxz
(bad)
pop
and
add
pop
ficomp
sbb
inc
sahf
ss
jb
(bad)
into
cld
mov
jne
xor
jp
cmp
push
mov
jnp
ins
ins
push
js
jle
push
imul
pop
push
mov
mov
movs
adc
cmp
mov
xchg
and
mov
or
jb
ret
jmp
cmp
jmp
inc
pop
dec
lahf
popf
and
jno
or
out
adc
lahf
stos
and
pop
sub
sub
(bad)
retf
faddp
dec
push
shl
sbb
fdivr
aam
xor
pop
(bad)
sub
mov
iret
dec
stos
push
push
push
call
adc
adc
mov
and
icebp
call
aam
jnp
mov
push
(bad)
imul
fistp
fld
jmp
into
mov
fucomp
push
pop
xor
add
and
mov
jne
add
popa
pop
arpl
jbe
mov
(bad)
clc
jmp
mov
ret
int3
mov
cli
out
cli
div
add
jns
test
ret
sub
sub
cmp
fs
leave
in
push
nop
xchg
(bad)
jmp
add
(bad)
cli
mov
push
adc
jns
mov
not
call
test
xor
out
cmps
inc
int3
fcomp
jle
outs
mov
in
mov
imul
movq
jmp
jmp
push
arpl
push
fdivr
jmp
and
dec
lock
gs
mov
imul
mov
push
iret
ss
fld
std
xchg
bound
sbb
test
pushf
daa
aam
mov
dec
xchg
push
neg
add
adc
inc
dec
fdivr
mov
jmp
xor
push
pop
cmc
push
retf
enter
xlat
adc
mov
icebp
xchg
leave
pop
test
add
cwde
xchg
push
rcr
test
push
mov
rol
cmps
jp
aad
mov
lods
lock
enter
icebp
mov
(bad)
(bad)
daa
cdq
mov
add
xor
sbb
pop
and
js
push
ror
call
and
pop
lds
mov
test
pop
daa
dec
outs
mov
push
mov
mov
lds
jns
sub
sbb
movs
add
jecxz
test
rol
lds
and
repz
out
js
(bad)
test
or
call
pop
fs
ja
push
sbb
mov
add
mov
aad
lods
or
pop
push
push
retf
mov
ins
jmp
jo
pusha
iret
loope
xchg
out
sub
scas
jns
add
aas
cmp
mov
xchg
add
ret
sub
push
adc
xchg
int
mov
push
adc
push
inc
push
mov
rol
rcr
mov
push
aam
push
xor
sbb
inc
bound
xor
add
enter
sar
pusha
pop
icebp
mov
sbb
stos
stos
fstp
scas
frstor
adc
or
cmp
and
das
adc
fild
cmp
xor
daa
or
or
and
push
loopne
adc
fimul
push
clc
inc
push
retf
test
std
mov
bound
aas
lods
or
jo
pop
hlt
stc
mov
movs
loopne
and
xor
pop
add
aaa
imul
jecxz
icebp
aad
xor
into
add
xchg
adc
(bad)
or
or
sar
clc
aaa
jg
mov
mov
sbb
movs
add
inc
cmp
xchg
and
lods
dec
mov
mov
and
mov
movs
add
mov
stos
xor
stos
jno
xchg
xrelease
ror
cmc
repnz
sbb
cwde
mov
clc
dec
xor
clc
mov
aaa
jnp
lods
dec
jmp
pop
shl
ss
xchg
fs
retf
push
sti
mov
retf
loop
neg
add
inc
sti
pusha
outs
aas
push
das
jne
test
add
pop
test
inc
adc
repnz
add
sub
mov
or
mov
into
mov
inc
fs
mov
int3
xor
scas
add
repnz
push
in
xchg
adc
(bad)
mov
or
or
and
rol
push
retf
loopne
sub
popf
(bad)
cdq
outs
(bad)
int3
or
jmp
(bad)
out
daa
neg
pop
add
stos
cmc
ss
sbb
xor
loopne
jne
cmp
bound
xor
cli
xchg
sbb
pop
iret
adc
inc
pop
retf
loope
outs
push
imul
jbe
add
je
dec
jg
repnz
mov
pop
mov
out
rcr
dec
in
push
mov
push
in
sub
xor
loop
stos
fdivr
into
shl
arpl
and
ret
sbb
nop
stc
ins
call
sbb
dec
cmp
and
inc
scas
dec
sbb
in
jecxz
lods
cmp
mov
jmp
xor
jbe
pop
mov
xor
push
mov
out
push
test
mov
xor
jae
rol
dec
pop
cmps
ficom
call
sub
inc
div
lods
or
pop
push
or
cmp
stos
cwde
jge
adc
jmp
mov
mov
test
or
sbb
cmp
clc
rcr
loope
ret
lods
cli
cmps
scas
fwait
mov
scas
movs
xchg
ret
aas
dec
js
aas
inc
mov
jmp
jmp
je
mov
push
sub
dec
fist
sahf
ficomp
cld
aaa
movs
fistp
inc
or
test
add
add
aaa
fild
or
push
sbb
(bad)
jno
repz
mov
inc
cmps
adc
pop
push
scas
sub
(bad)
in
shr
adc
sbb
popa
cli
sti
(bad)
add
mov
stos
xchg
sbb
xchg
loope
dec
enter
in
sbb
mov
dec
out
xchg
and
rol
loope
mov
bound
(bad)
imul
imul
(bad)
std
xchg
mov
inc
mov
xor
ret
ss
jae
and
mov
ins
daa
and
inc
adc
shl
loope
dec
jns
mov
push
cdq
or
mov
push
mov
hlt
pop
stos
loope
and
idiv
cmps
test
pop
add
push
es
or
mov
gs
cmp
retf
sbb
das
imul
jge
xor
or
lods
sub
dec
out
(bad)
into
bound
movs
sar
stos
inc
dec
lahf
test
fs
mov
outs
test
fcomp
jl
pushf
lods
mov
test
outs
out
mov
xchg
push
fcom
sub
std
data16
bound
hlt
scas
or
sahf
push
je
pop
outs
adc
mov
scas
inc
fist
push
in
test
adc
pusha
mov
dec
test
ins
lods
pop
jo
or
sti
sti
dec
jmp
and
lds
(bad)
inc
ss
inc
(bad)
fld
push
fld
ds
and
cmc
pop
mov
mov
inc
add
mov
data16
aam
inc
test
ret
cmp
and
push
and
aam
retf
xchg
mov
xchg
inc
cmp
add
lock
sbb
mov
repz
cmp
dec
or
inc
mov
xor
xor
mov
fisub
mov
lahf
push
pop
jnp
jp
dec
ds
iret
std
or
dec
sub
pop
icebp
cld
push
adc
mov
push
retf
push
jmp
scas
cmp
push
mov
or
out
lock
xor
lahf
sbb
adc
mov
fs
cli
mov
xor
lea
mov
in
inc
mov
in
bound
mov
jmp
and
ds
or
ins
retf
fst
jmp
adc
xchg
cmp
or
test
xchg
ds
(bad)
pop
sahf
add
mov
mov
push
out
xlat
add
mov
stc
cmp
mov
add
retf
add
pop
or
add
cwde
cwde
cli
call
jae
xlat
jmp
adc
or
jae
rol
cmps
and
mov
iret
mov
out
arpl
movs
mov
sub
sub
cmps
sub
aaa
out
and
sbb
mov
mov
ror
retf
cdq
test
xor
inc
push
sahf
in
xchg
mov
dec
out
sti
sub
jmp
sti
mov
in
and
(bad)
xor
rol
and
retf
cmps
fdivp
mov
in
call
sahf
not
add
outs
xor
xchg
mov
jg
stc
call
push
rol
into
outs
enter
dec
push
fisub
fidiv
mov
ins
dec
adc
mov
cs
or
and
xchg
(bad)
adc
scas
push
in
pop
cmp
out
mov
retf
les
hlt
xchg
test
adc
adc
stos
les
xchg
test
pusha
dec
retf
clc
arpl
add
arpl
dec
jmp
adc
or
lahf
test
cwde
xlat
xchg
test
lock
(bad)
fdiv
retf
das
jmp
out
enter
jo
sbb
pop
fimul
xchg
loopne
xor
stc
cmp
gs
jns
sbb
jge
pop
mov
lock
push
pop
fst
aam
dec
jb
or
push
sbb
adc
sbb
cmc
fild
push
adc
arpl
xor
jbe
sar
mov
sbb
adc
adc
scas
ret
mov
dec
sbb
inc
fcom
and
dec
cmp
aad
mov
(bad)
addr16
dec
call
lock
(bad)
cmp
push
sbb
dec
jg
lods
loopne
je
loop
jae
adc
xor
stos
test
adc
pop
fwait
test
or
das
outs
cwde
fbld
push
jecxz
cli
aam
into
rcl
xor
jp
jl
sbb
lock
jbe
inc
gs
test
movs
mov
dec
(bad)
call
or
adc
fdiv
pusha
ins
cmp
jg
fwait
mov
popf
lods
jmp
mov
loopne
jo
dec
repnz
ss
add
mov
mov
test
cwde
jmp
pop
in
pop
ror
mov
mov
(bad)
call
and
inc
(bad)
js
sar
pop
jecxz
adc
ss
xchg
in
add
dec
xor
retf
fsubrp
frstor
sbb
sub
es
retf
sbb
sub
popf
test
mov
cmp
test
inc
xor
mov
loop
push
fidiv
mov
ret
ins
pop
inc
dec
lds
push
hlt
jbe
data16
movs
in
add
xlat
jg
jnp
dec
jmp
add
cmp
das
mov
push
jo
fwait
cli
int
in
pop
pop
or
mov
jle
ja
adc
xchg
test
push
and
sbb
icebp
leave
sbb
mov
int
shl
sbb
sub
mov
add
lea
lea
sub
push
xor
sbb
je
cld
ins
sti
scas
inc
lds
mul
mov
and
test
call
cli
or
mov
mov
pop
movs
std
cmc
xlat
stos
pop
jg
pusha
addr16
inc
jns
jmp
repnz
mov
popa
xor
or
jne
scas
and
cmc
cmp
add
ror
scas
inc
sbb
ja
or
xchg
fwait
mov
call
sub
cmp
into
lods
mov
jecxz
sbb
adc
push
mov
inc
sub
sbb
into
test
adc
cmp
cmp
pop
(bad)
push
mov
pop
xchg
in
inc
add
fnsave
push
shl
movs
imul
push
call
inc
call
fisttp
pop
scas
jecxz
lods
push
mov
std
in
aaa
out
push
dec
pop
(bad)
dec
(bad)
test
imul
cmp
mov
inc
je
stc
sub
jl
fcmovb
cmp
mov
sub
or
adc
lds
aaa
dec
gs
adc
int3
push
mov
xchg
movs
adc
jg
sahf
repnz
ret
push
daa
daa
jnp
inc
out
jp
and
hlt
sar
xchg
mov
dec
cmp
sub
or
les
jecxz
nop
lods
and
leave
xchg
sbb
inc
jl
shl
push
iret
sub
dec
loopne
out
bnd
push
sbb
mov
outs
mov
adc
push
aaa
daa
push
xchg
pop
daa
jns
pop
inc
xchg
mov
jno
pop
mov
fild
cmp
and
mov
add
sti
xor
and
pop
inc
mov
mov
fild
cmovae
loop
mov
jp
shr
add
pop
test
mov
cmp
cmp
(bad)
lahf
cmc
mov
ja
shl
cmp
ret
adc
es
cmps
pop
inc
mov
adc
sbb
rcr
pop
bound
and
int3
bound
das
dec
loop
ret
ja
or
xor
xlat
fs
daa
sahf
pop
rol
jecxz
sbb
lods
inc
xchg
imul
add
fwait
or
in
fucom
add
jmp
inc
push
cmp
jne
push
jno
push
cmc
mov
pop
push
call
into
adc
sti
pop
fadd
inc
in
or
add
push
std
sahf
mov
ja
test
or
mov
xchg
sahf
shl
dec
sbb
mov
sahf
push
nop
push
xchg
sbb
(bad)
lahf
hlt
fidivr
mov
mov
mov
mov
xor
jp
stos
mov
iret
ret
repnz
pop
cmps
in
jmp
push
(bad)
loope
xchg
push
repnz
push
ret
(bad)
and
inc
cmp
fidivr
xchg
test
mov
adc
idiv
fimul
cmps
scas
jmp
add
loope
xlat
mov
in
pop
mov
sbb
xor
pop
lss
call
or
jnp
push
adc
(bad)
mov
xor
ret
push
and
mov
pushf
sbb
fwait
cmp
mov
push
mov
xchg
sbb
pushf
inc
mov
ficom
nop
js
push
and
shl
ror
lahf
sbb
into
ret
not
js
and
dec
jb
mov
xor
inc
add
popa
pop
shl
inc
cmp
ins
ret
push
jae
ins
sbb
inc
jnp
adc
or
sub
sahf
pop
pop
sbb
fisubr
fs
cmp
hlt
shl
lahf
das
(bad)
mov
mov
add
ret
inc
push
(bad)
xchg
ret
fist
repnz
push
jno
cmc
jb
jge
fdivr
das
mov
popf
xor
jbe
lock
scas
cdq
fld
mov
movs
(bad)
nop
imul
dec
jle
pop
mov
sub
outs
xchg
inc
dec
rcr
rcl
xchg
lock
gs
call
ret
dec
loopne
mov
xor
daa
jns
mov
mov
push
mov
cmp
imul
nop
scas
inc
ret
into
or
sub
in
inc
icebp
sbb
test
mov
xchg
jl
or
mov
in
repz
(bad)
cld
int
test
xchg
mov
call
xor
mov
addr16
jb
retf
xchg
fdivr
jnp
adc
pop
push
inc
shl
xchg
dec
shl
test
sar
test
js
jp
push
outs
jne
cmp
cmpps
cld
adc
scas
or
std
jl
sti
imul
sbb
inc
icebp
pusha
xchg
imul
xor
push
mov
and
ret
cmp
mov
sbb
or
cmp
adc
or
adc
push
stos
jle
mov
inc
mov
push
mov
push
nop
jbe
bswap
jmp
inc
(bad)
into
jno
dec
jb
add
rol
js
sbb
(bad)
jmp
fild
and
xchg
test
shl
jl
sbb
and
push
dec
outs
mov
das
inc
fisttp
xor
fwait
or
cld
loopne
adc
inc
out
or
dec
aad
cmps
shl
rol
cmp
retf
out
xchg
xchg
fcom
inc
lock
push
or
cmp
in
int
push
jmp
dec
sbb
dec
or
push
pop
arpl
add
aas
adc
clc
inc
pop
cmp
test
loopne
repnz
repnz
ds
int3
ret
fs
cmp
mov
dec
jl
xchg
dec
xchg
and
fild
xor
cmps
jg
sub
sbb
sub
sub
aas
movs
mov
lods
ins
sbb
(bad)
out
test
outs
sti
xor
ret
les
sub
mov
and
dec
inc
cmc
inc
ret
mov
push
jo
es
loop
xor
mov
cwde
out
push
xor
mov
gs
and
sbb
idiv
pop
xchg
jecxz
sub
jb
stos
loopne
cmp
test
arpl
inc
fstp
js
shl
mov
sub
ds
pop
push
(bad)
push
in
and
pop
pushf
or
and
cmp
adc
repnz
add
xlat
repnz
leave
in
mov
cmp
jnp
shl
fsub
jp
rcl
cmp
sub
sti
xor
test
mov
pushf
jl
test
mov
dec
sti
or
lea
push
inc
enter
cld
inc
xchg
test
or
dec
movs
adc
aas
add
fnstcw
sbb
xor
add
inc
test
lods
fisttp
or
sbb
pop
and
leave
mov
rol
fisub
and
mov
in
push
shr
dec
and
nop
test
enter
pop
imul
adc
cmp
sbb
test
mov
fs
pop
cld
sub
dec
test
ss
adc
and
xor
dec
imul
dec
mov
xor
aam
xor
stos
adc
icebp
adc
fsub
add
xor
push
jl
jns
sbb
and
inc
inc
outs
(bad)
cli
mov
inc
push
lahf
shl
and
dec
xlat
ds
mov
adc
cmc
scas
mov
pop
xlat
adc
stos
test
dec
ret
push
leave
jne
std
dec
adc
es
mov
xchg
ficom
ret
push
pop
in
in
pop
iret
cmps
int
pop
dec
sub
fwait
retf
lea
mov
dec
xor
aam
sub
mov
xchg
sub
enter
mov
rcr
and
jne
idiv
fld
pop
push
mov
xor
add
loopne
sar
or
push
mov
add
nop
xchg
xor
(bad)
cli
rol
repz
bound
jae
jo
push
add
sub
inc
cmp
add
sub
inc
fwait
sahf
push
mov
ret
std
shl
and
in
movs
sub
sub
push
add
mov
call
(bad)
sti
lahf
dec
jne
mov
pop
xor
inc
bound
icebp
pop
pop
mov
pop
xchg
cwde
inc
mov
mov
fimul
mov
pop
or
arpl
sub
test
adc
out
xchg
push
push
test
jmp
test
push
hlt
jae
push
sbb
lea
in
sar
inc
je
pop
cmc
das
pushf
shr
inc
xchg
xor
sbb
push
cld
sbb
js
cmp
jmp
mov
and
ror
jnp
ins
mov
dec
hlt
aas
scas
out
data16
lea
jmp
out
jb
mov
stc
xor
shl
test
(bad)
mov
mov
jne
bnd
mov
(bad)
loopne
mov
add
pop
enter
mov
movs
mov
ss
jg
lods
stos
xor
movs
scas
or
dec
jle
cmp
sbb
or
xlat
test
loope
sahf
cld
push
hlt
jge
pop
popa
inc
or
xchg
cmps
pop
sub
out
pusha
stos
sub
add
jecxz
adc
push
jle
adc
or
addr16
hlt
and
add
in
ins
imul
mov
inc
pop
fistp
(bad)
outs
lods
mov
neg
call
jns
pop
cmp
or
retf
into
jg
loope
inc
mov
leave
ds
and
scas
fcomp
js
cmp
je
add
and
inc
out
ficomp
gs
loop
add
fnstcw
retf
add
in
mov
mov
mov
fwait
or
adc
loope
jmp
jo
add
pop
inc
fisttp
stos
mov
push
clc
mov
int
jl
jmp
sub
xchg
or
push
shl
test
sub
add
mov
sub
or
sahf
mov
push
push
xor
sbb
adc
cmp
jle
fbstp
test
push
xor
inc
sbb
xor
push
cld
add
pop
imul
(bad)
add
xor
pop
daa
sub
dec
mov
jecxz
cdq
or
loope
pop
push
mov
test
jne
xchg
aaa
inc
push
mov
pop
cmps
inc
pop
fistp
push
dec
push
cmp
xchg
mov
push
mov
mov
mov
xlat
addr16
daa
repnz
cmp
pop
sub
bound
mov
jg
mov
(bad)
pop
iret
out
mov
or
(bad)
das
lods
lock
inc
test
cdq
leave
inc
or
inc
sub
xchg
and
lods
in
push
jecxz
loope
mov
(bad)
int3
out
ret
mov
repnz
fs
out
gs
push
test
outs
nop
push
call
lock
cmp
cmps
in
push
jne
ss
jno
pop
out
and
xor
rol
in
scas
retf
and
jmp
push
xor
sub
rol
adc
sbb
jne
retf
push
adc
loope
dec
jecxz
mov
ret
js
popf
retf
xchg
mov
mov
shl
push
cdq
fadd
or
inc
cmps
jo
jecxz
loope
sub
cmp
or
ss
xchg
test
inc
xchg
out
cmps
std
sub
fisub
in
xchg
push
nop
add
xlat
dec
or
dec
adc
mov
test
ret
std
(bad)
mov
pushf
dec
ins
or
mov
cli
mov
setae
sub
ss
movs
std
cmp
nop
cmp
aad
cmp
in
jle
scas
inc
jl
push
xchg
dec
rcr
je
es
dec
or
mov
pop
sbb
add
jns
xor
retf
daa
arpl
or
inc
and
xchg
loopne
out
call
sbb
stos
mov
pop
sub
xlat
mov
push
nop
xchg
nop
mov
sub
dec
std
repnz
pop
cmp
(bad)
push
ficom
cmps
stos
ins
hlt
mov
cmp
out
push
div
add
or
jmp
xor
xor
adc
sbb
cli
dec
jo
and
jp
adc
iret
stos
add
daa
shl
outs
pop
in
arpl
gs
in
xor
test
add
jnp
or
mov
int
cld
hlt
int3
cwde
ret
xchg
and
dec
jmp
mov
std
push
mov
dec
cwde
out
int3
xchg
jecxz
test
push
or
out
mov
ss
or
sub
xchg
cmp
fld
or
sbb
fwait
xchg
in
adc
iret
aaa
out
jg
adc
int
jne
fstp
test
xlat
out
shr
xor
xchg
sbb
aaa
pop
push
adc
dec
cld
test
lock
pop
xor
sub
fimul
int3
neg
pop
in
push
int3
add
cmc
mov
ror
or
fiadd
or
cmp
cmp
into
add
retf
add
inc
fadd
inc
push
jo
into
xor
out
ins
mov
mov
sbb
sbb
icebp
loope
sbb
add
push
shl
lods
and
jle
push
or
je
xchg
xor
gs
ret
push
add
adc
(bad)
pusha
stos
fwait
scas
aad
xchg
mov
push
retf
push
fsub
pop
scas
ja
sub
sbb
ret
cmps
adc
mov
fnclex
mov
push
jne
mov
int3
mov
push
cmps
fs
xor
stos
out
sbb
push
push
aam
dec
jmp
lods
cmp
or
aas
cmp
or
cmp
fimul
pop
xchg
lods
rcl
fwait
ret
idiv
push
ss
xor
fisubr
mov
lahf
aaa
test
add
dec
movs
or
es
mov
mov
mov
sub
jae
sub
or
xor
dec
jg
iret
int3
fwait
adc
mov
xchg
inc
fisub
pop
or
xchg
xor
js
pushf
push
sub
je
xchg
cmp
sub
xchg
into
pop
add
push
out
scas
fwait
push
sub
(bad)
mov
add
imul
outs
xchg
sbb
sub
in
sub
rcr
sub
in
xchg
xchg
mov
cmp
sbb
scas
movq
xchg
imul
fst
sub
loopne
in
xor
push
lds
mov
fdivr
dec
(bad)
mov
test
into
push
(bad)
xchg
and
repz
inc
push
hlt
adc
out
ror
int3
push
push
adc
out
adc
xor
imul
jns
daa
repz
inc
dec
mov
mov
loopne
mov
fld
xor
clc
cmp
ja
mov
daa
xchg
mov
push
mov
mov
xlat
lods
mov
dec
loopne
scas
gs
push
inc
jmp
xchg
repnz
pop
adc
mov
xor
mov
sbb
inc
lahf
data16
xchg
sbb
adc
mov
pop
cdq
bound
pop
push
out
dec
sbb
jmp
jb
pop
cs
(bad)
xchg
mov
push
je
dec
jmp
jb
lods
fld
push
mov
sub
mov
pop
fucomp
mov
out
retf
mov
test
mov
mov
(bad)
stc
and
cmp
lods
mov
(bad)
int3
je
dec
sub
and
xchg
(bad)
mov
adc
call
retf
xchg
sub
cmp
outs
sbb
test
test
mov
gs
int
cmp
xchg
lods
or
stc
cmp
xchg
mov
sub
mov
or
lods
(bad)
mov
imul
mov
fsubr
sahf
sbb
jecxz
xchg
and
push
scas
push
int
cwde
cwde
ds
pop
retf
lea
test
pop
int
das
cmp
pusha
ficom
in
push
cmps
lea
(bad)
mov
fsubr
gs
push
iret
push
jne
mov
fld
jl
cwde
shl
popf
retf
sub
xchg
or
ds
xchg
pop
jnp
sahf
add
test
mov
jp
mov
ror
inc
push
adc
cmp
int
js
sbb
mov
(bad)
and
xchg
inc
pop
mov
stos
cwde
cmps
(bad)
xlat
inc
jmp
mov
call
push
js
dec
xor
or
movs
xchg
push
popf
mov
test
adc
jae
jae
jl
xor
outs
or
mov
add
adc
(bad)
mov
mov
mov
push
mov
sbb
scas
cmp
push
ficom
xor
stc
xlat
daa
mov
push
outs
clc
stos
mov
inc
cmps
popf
jmp
ins
repnz
push
loop
pop
mov
jecxz
adc
cs
inc
adc
iret
mov
adc
jmp
dec
(bad)
fistp
xor
test
into
(bad)
jp
sar
gs
mov
jle
xchg
fstp
pop
push
mov
int3
sub
xor
(bad)
xchg
cmps
xchg
bound
mov
leave
test
jns
(bad)
mov
arpl
repz
daa
(bad)
retf
popa
or
fild
dec
xchg
out
adc
push
jmp
(bad)
lock
jmp
in
ret
pop
cwde
fsub
mov
cwde
test
jb
dec
scas
outs
mov
repz
inc
adc
inc
mov
cmp
push
stos
xchg
and
dec
jg
je
movs
rol
scas
outs
mov
sub
nop
aaa
push
enter
ins
xchg
cmps
ins
iret
mov
lods
push
inc
mov
aad
push
js
fst
mov
dec
mov
cmp
in
jle
out
adc
adc
mov
xchg
ja
push
fisttp
pop
cmp
enter
repnz
or
cli
shr
test
and
pop
mov
sbb
(bad)
and
dec
and
std
or
out
mov
or
popf
xchg
and
dec
imul
or
jg
in
scas
xchg
aam
stc
or
mov
or
fstp
push
mov
and
or
sub
cdq
jecxz
dec
dec
or
fstp
and
pop
sub
out
inc
arpl
cmp
arpl
push
fisub
cdq
cmp
inc
std
jae
add
pop
mov
push
inc
rol
dec
(bad)
scas
das
adc
int
jbe
popf
jmp
daa
dec
cld
(bad)
jno
mov
test
jae
push
jb
xchg
aam
xor
jno
sbb
add
jg
cmc
popa
aad
bswap
fidiv
push
push
xchg
frstor
dec
mov
inc
shl
aaa
popa
outs
es
jbe
shl
in
in
jne
cmp
xor
pop
xchg
add
xchg
or
add
lock
sub
ror
mov
mov
dec
adc
dec
or
(bad)
aas
sbb
std
pop
or
adc
test
mov
popa
mov
mov
repnz
(bad)
(bad)
in
push
bound
add
popa
stc
retf
fmul
mov
dec
sbb
gs
push
mov
leave
mov
xor
mov
ds
jg
int
or
push
or
mov
push
hlt
jo
push
sub
cmp
cdq
mov
jmp
lods
pop
ins
mov
xchg
(bad)
lds
ret
movs
bound
loop
sbb
push
sbb
mov
pop
cld
adc
mov
ret
gs
retf
adc
push
jl
test
mov
push
mov
inc
adc
pop
(bad)
jp
or
sub
out
or
gs
mov
add
mov
in
pop
movs
enter
push
sbb
and
and
dec
jmp
into
pop
push
fsub
xor
add
jne
push
popf
dec
jno
xor
in
fsubr
cli
scas
adc
pusha
and
jb
add
mov
or
cld
push
int
je
mov
out
call
add
(bad)
(bad)
mov
out
jbe
mov
add
pop
mov
sti
popf
hlt
dec
mov
push
mov
pusha
call
outs
inc
dec
sub
clc
sub
sub
push
int3
shr
mov
cwde
mov
loopne
lds
fimul
pop
fadd
sub
sub
push
lea
mov
out
clc
test
jo
xlat
jecxz
sub
inc
or
sahf
sub
sub
leave
sub
hlt
jne
xchg
pop
adc
pop
(bad)
push
add
mov
xor
mov
scas
fidivr
movs
cwde
cmp
adc
or
push
stos
sub
inc
adc
loopne
std
retf
cld
dec
rol
movs
add
div
cs
int3
fwait
scas
cmp
mov
mov
sbb
and
push
sub
(bad)
cld
xor
fiadd
popf
jl
inc
bound
das
mov
dec
jl
push
push
xchg
sub
pop
inc
xor
not
add
xchg
das
cmp
push
lods
push
loopne
mov
fadd
inc
jg
xor
pop
ins
jg
fidiv
movs
rol
rcr
pop
push
loope
scas
inc
lea
dec
dec
sahf
cdq
cmps
call
xor
xchg
test
cdq
outs
mov
in
add
cmp
pop
repnz
add
cld
pop
add
out
jb
fbld
imul
push
jle
and
xchg
lods
mov
clc
sbb
and
push
iret
clc
jne
arpl
adc
mov
adc
(bad)
int3
(bad)
shl
and
xchg
(bad)
aad
stos
gs
jge
jns
mov
into
pop
lods
cmp
xor
lods
and
mov
sub
sti
(bad)
rcr
pop
xchg
xchg
cmc
xor
mov
ror
addr16
sbb
test
fdivr
push
inc
je
push
pop
std
scas
push
jmp
add
inc
cmp
pop
idiv
jne
jne
xchg
addr16
xchg
dec
push
xor
ins
arpl
(bad)
std
and
aad
lea
xor
rol
(bad)
pop
mov
mov
mov
je
std
fsub
xchg
shl
sahf
cmps
mul
xor
(bad)
ss
mov
bound
scas
sti
pop
sub
add
adc
repnz
stc
stc
aas
jo
stos
inc
xor
dec
dec
add
(bad)
cs
add
ins
jmp
adc
mov
mov
adc
rol
jg
mov
ret
std
rcr
call
mov
jmp
(bad)
mov
shl
test
mov
div
inc
or
hlt
xor
sbb
jo
cmp
js
retf
dec
in
jmp
das
mov
mov
ins
rcl
icebp
cs
push
pop
inc
adc
mov
push
hlt
or
sub
jmp
(bad)
movs
sub
cmp
rep
dec
inc
fs
mov
outs
test
add
(bad)
icebp
jg
pushf
jle
jae
fidiv
push
cmps
sub
dec
pop
push
xlat
cmp
idiv
mov
push
xor
stos
std
rol
and
test
dec
mov
repz
mov
loopne
xor
pop
jp
mov
mov
les
push
sbb
adc
and
mov
jne
inc
in
js
jmp
dec
cmp
pop
fcom
je
mov
jg
push
sahf
cwde
icebp
scas
ins
aas
adc
arpl
jne
mov
out
inc
out
ficomp
dec
es
ret
mov
add
lods
sub
and
sub
(bad)
mov
sbb
cmp
xor
mov
mov
(bad)
lds
outs
sub
inc
out
into
push
mov
fstp
out
dec
xor
fwait
gs
and
les
adc
push
jg
adc
fnsave
test
cmps
ja
or
jg
imul
loop
inc
in
ret
xor
test
fwait
cmps
scas
daa
mov
pop
push
dec
push
mov
sbb
das
push
(bad)
push
or
retf
mov
xchg
or
leave
xchg
jge
sbb
retf
in
pop
sbb
jns
les
sti
inc
out
ins
std
xchg
dec
lahf
mov
mov
cmp
jl
push
adc
dec
mov
iret
ds
push
and
adc
test
or
lahf
mov
pushf
in
fmul
(bad)
les
imul
push
hlt
jecxz
les
setns
sbb
sbb
dec
sbb
jmp
std
call
jo
cdq
dec
add
push
push
mov
ss
imul
pusha
jb
xchg
mov
push
addr16
cmp
test
int3
stos
in
cmc
xor
fild
arpl
cmp
jno
mul
adc
js
(bad)
test
push
pop
(bad)
inc
mov
fidivr
in
cmp
aam
stos
inc
mov
add
out
leave
and
fstp
add
and
enter
mov
in
mov
test
mov
jge
jp
repnz
mov
fxtract
or
lods
dec
jo
jl
and
mov
ins
add
fcom
fnsave
jo
mov
loope
jp
loopne
add
mov
and
push
(bad)
mov
jae
ficom
cld
push
sub
push
mov
in
sbb
pop
rcr
in
jp
push
push
xor
cmp
in
jb
in
push
int
mov
mov
(bad)
dec
cmp
dec
pop
dec
das
cmp
ja
dec
xor
imul
scas
xor
cmp
xchg
jo
lods
mov
aad
lods
sub
rol
jns
aaa
push
call
dec
stc
xchg
jbe
pop
dec
mov
inc
add
push
rcl
sbb
mov
cli
sub
jle
(bad)
mov
and
or
add
cdq
inc
out
xchg
cmps
loope
rcl
in
xor
mov
out
ret
pushf
dec
fnstsw
retf
retf
dec
test
sub
pop
sub
push
xor
add
fwait
ds
adc
stc
int3
or
test
sub
mov
mov
jmp
inc
sub
ds
inc
popf
call
xchg
test
data16
ins
mov
dec
sar
loopne
in
push
mov
sub
add
cmc
adc
retf
gs
ds
adc
pop
xor
dec
stc
scas
cmp
aas
adc
mov
pop
mov
retf
int3
jge
inc
jbe
mov
fwait
pusha
lea
fwait
jne
adc
xchg
jmp
les
(bad)
retf
mov
retf
cmp
sti
push
sbb
xor
jle
sets
xchg
dec
push
cmps
scas
popf
hlt
cs
adc
sub
popa
cmp
leave
mov
(bad)
mov
or
fild
in
inc
int3
push
push
pop
or
mov
xchg
stos
cs
adc
and
push
mov
pop
and
dec
lods
rcl
push
lds
inc
inc
int
push
xor
mov
sbb
aas
adc
xchg
jmp
int
outs
cs
sbb
xor
mov
cmp
fadd
or
mov
mov
mov
dec
loop
pop
(bad)
ret
(bad)
out
pusha
dec
out
inc
and
xor
adc
and
xchg
push
or
sub
fs
push
mov
inc
sub
sub
gs
shl
mov
cdq
or
jge
(bad)
int
and
adc
xchg
cwde
jg
ficom
mov
or
add
adc
add
xor
sbb
push
retf
sti
cmps
push
sub
mov
pop
sar
dec
jge
inc
fldcw
int
mov
adc
add
ret
cmp
test
popa
pop
jmp
pusha
out
lahf
test
mov
into
je
test
cs
ss
pop
lds
cld
rcl
out
fistp
pushf
jmp
pushf
fistp
and
inc
test
and
fisttp
lds
mov
add
ret
es
push
outs
jne
inc
mov
in
xor
pop
not
jae
add
icebp
fwait
loope
icebp
pusha
(bad)
sahf
xchg
hlt
sti
in
out
lea
test
lock
jb
push
sub
cmp
daa
mov
fist
mov
xchg
fiadd
inc
push
xchg
repnz
add
or
dec
jl
data16
mov
cmp
mov
out
mul
(bad)
xor
mov
in
pop
or
iret
stc
stos
xor
push
popa
add
inc
jbe
jge
test
imul
ins
adc
in
les
sub
ret
(bad)
push
jp
lods
call
jecxz
fnstsw
gs
jnp
xor
cmp
and
fild
aaa
jnp
sahf
cmc
jb
push
adc
pushf
and
sbb
add
xchg
outs
pop
adc
xor
add
popa
xchg
addr16
je
mov
idiv
aad
jmp
push
movs
js
jle
sub
call
jmp
lods
sbb
gs
js
rcl
inc
fs
or
pop
mov
push
add
mov
imul
sbb
shl
lods
(bad)
repz
xchg
mov
mov
jle
movs
push
jno
inc
loop
jg
sbb
or
repz
pop
sub
outs
cdq
sar
dec
adc
pop
jne
and
mov
or
scas
aad
inc
dec
lahf
stos
into
jmp
imul
imul
idiv
add
rol
iret
xchg
arpl
xor
pop
inc
xlat
push
outs
daa
ins
lock
leave
pop
adc
jo
and
adc
fisubr
call
repz
loopne
cmovge
add
test
loop
sbb
iret
mov
or
xor
mov
pushf
push
or
pop
xchg
jl
test
add
adc
dec
jle
cmc
fisttp
mov
push
add
inc
sti
popa
pop
and
call
sub
outs
inc
arpl
shr
xchg
mov
test
add
jbe
ins
cli
inc
out
xchg
arpl
jae
cmp
lods
pop
pop
sub
mov
or
ss
outs
in
or
add
mov
mov
jecxz
cs
ret
std
mov
and
das
(bad)
cmp
ins
jb
pop
fstp
lock
jg
mov
mov
push
xchg
das
mov
in
(bad)
das
mov
inc
movs
push
mov
jl
call
movs
fs
rol
pop
movs
mov
xor
shr
mov
in
add
push
jnp
enter
jo
dec
call
mov
nop
xlat
test
jns
js
inc
js
ins
jae
lahf
or
cmp
mov
sub
cld
jae
sub
scas
mov
or
jbe
jnp
mov
test
in
shl
sub
xor
sub
xor
push
cmp
jmp
jge
jne
popa
icebp
pmuludq
sub
arpl
fisub
ins
mov
xchg
fnstenv
ja
mov
cli
add
mov
in
push
push
loopne
adc
push
jmp
adc
aas
outs
mov
cmp
dec
in
xchg
(bad)
mov
xlat
mov
pop
add
jo
call
sbb
xchg
pusha
dec
push
sar
in
fld
mov
dec
scas
or
add
mov
jb
adc
je
stos
scas
fisttp
in
sub
cdq
cmp
test
in
sub
ins
push
add
mov
or
das
xchg
scas
imul
mov
je
and
xor
xor
or
lea
in
out
cmp
pushf
ja
jecxz
sub
fcmovnbe
fsub
fimul
pop
shr
imul
fldenv
stc
mov
stos
test
mov
(bad)
adc
aad
cdq
inc
push
xor
movs
sub
vandnps
ss
mov
clc
sar
jmp
fsubr
xor
popf
shl
pusha
shr
ss
js
adc
xchg
sbb
cld
cli
push
fs
nop
lsl
test
fwait
mov
je
ds
nop
sub
dec
dec
mov
xor
into
push
pand
jecxz
mov
aas
in
test
mov
pop
dec
or
dec
ret
mov
ret
outs
sahf
rcl
inc
test
cmps
or
lahf
aas
jle
rcr
jo
cli
inc
aas
ins
add
lods
sub
and
out
aas
ficomp
es
sub
aaa
arpl
mov
movs
inc
cmps
je
outs
cmp
xchg
mov
sub
sbb
mov
neg
pop
lea
xor
cmp
ret
xchg
mov
mov
or
xchg
arpl
cmp
pop
mov
xor
cmp
pushf
inc
jbe
mov
jo
pop
add
dec
inc
test
pop
mov
adc
retf
mov
inc
pop
(bad)
call
xor
cld
jp
fidivr
popa
add
xchg
(bad)
xchg
mov
cmp
stc
lds
inc
jae
fisubr
loope
push
xchg
jge
push
in
ds
inc
pop
test
xchg
mov
pop
or
(bad)
mov
pushf
in
lea
mov
mov
es
pop
dec
(bad)
inc
aaa
movs
je
lea
fnstcw
stos
icebp
push
js
xchg
scas
shr
push
jbe
imul
aas
jecxz
sub
imul
mov
adc
pop
test
retf
sub
add
adc
cmp
test
dec
lods
popa
adc
or
(bad)
push
daa
mov
(bad)
ins
je
outs
xchg
xor
lds
cmps
jecxz
push
sahf
gs
add
xor
xchg
push
dec
clc
cld
adc
add
icebp
nop
std
cdq
sub
(bad)
in
das
mov
fdiv
scas
or
dec
xchg
loop
sub
inc
movs
call
and
aam
shl
mov
dec
inc
sbb
xchg
mov
sbb
inc
and
or
xor
test
add
out
sar
call
hlt
push
rol
xor
jns
and
sbb
shl
mov
imul
adc
mov
inc
outs
icebp
int3
mov
push
adc
xchg
out
or
retf
adc
cmp
mov
push
jb
jne
outs
dec
adc
push
adc
cmp
mov
arpl
fsub
(bad)
test
dec
inc
jne
(bad)
fucomp
cli
adc
xchg
push
dec
push
or
ret
push
retf
mov
or
push
sub
dec
mov
js
aam
pop
je
ins
out
pop
not
push
(bad)
pop
mov
popa
fnstsw
pcmpeqb
dec
aad
cmc
loopne
jo
inc
xor
jle
pop
cmovle
jge
xchg
push
jge
popa
outs
mov
stc
das
push
jmp
std
and
aaa
sar
fld
loopne
out
mov
mov
jecxz
xlat
add
push
fdivr
cmp
inc
daa
xchg
fcom
push
dec
es
cmp
in
mov
je
out
inc
rol
dec
ds
or
xor
xchg
lock
mov
and
jnp
inc
stc
push
lods
ss
retf
sti
inc
les
dec
jmp
cmps
(bad)
xchg
inc
das
pop
idiv
push
and
fiadd
and
mov
dec
xchg
call
inc
fadd
lea
push
int
leave
repz
fs
pop
mov
arpl
adc
aaa
aad
sbb
pop
xchg
xor
shr
push
xor
push
sbb
dec
adc
push
push
enter
xchg
jo
int
clc
jmp
inc
in
sbb
enter
sub
or
gs
xor
dec
xchg
sbb
aad
shl
cmc
mov
ja
aaa
cmps
es
mov
fstp
push
adc
or
ins
xlat
addr16
aas
cmps
mov
(bad)
adc
xchg
sbb
fnsave
stos
arpl
retf
add
repnz
test
arpl
mov
sahf
imul
add
pusha
cmp
xchg
(bad)
(bad)
not
jle
lods
add
sbb
sbb
call
or
mov
jno
imul
cmc
inc
mov
jg
inc
fadd
push
ins
mov
or
push
mov
icebp
jp
test
push
xor
arpl
aam
cld
rcl
mov
(bad)
mov
mov
cmp
inc
sbb
adc
mov
sbb
mov
mov
pusha
das
adc
sbb
or
xchg
push
mov
scas
jne
mov
repnz
ins
xchg
into
adc
call
(bad)
mov
push
ret
ins
scas
or
pop
das
sub
mov
and
imul
cdq
jmp
nop
out
mov
repnz
fisttp
xor
cmps
je
mov
adc
push
push
addr16
jo
fistp
(bad)
and
enter
mov
das
aas
(bad)
cmp
out
sub
clc
inc
dec
les
mov
fisub
ret
adc
adc
or
cmp
popf
and
jno
pop
bound
gs
lahf
es
imul
loope
(bad)
pop
jmp
jmp
std
ins
xchg
inc
add
(bad)
mov
(bad)
push
jp
cmp
jb
cmp
ret
out
jae
dec
(bad)
out
mov
sub
pop
and
mov
lea
dec
xor
mov
dec
cwde
adc
dec
dec
aad
stos
mov
hlt
mov
(bad)
aas
jno
std
sti
add
cld
das
cmps
es
or
pop
outs
or
inc
pop
test
add
cmps
daa
adc
in
std
imul
in
sbb
pop
mov
mov
icebp
and
fstp
mov
mov
loopne
cmp
cdq
lock
clc
cli
inc
movs
push
push
bound
mov
mov
lea
test
ror
neg
loop
int
std
test
push
push
and
int
adc
ret
in
jg
xchg
mov
movs
mov
mov
xchg
call
fs
push
jp
cli
not
lods
mov
imul
bswap
shl
icebp
mov
addr16
mov
pop
inc
cmp
push
arpl
inc
stos
lea
dec
inc
adc
sbb
inc
adc
or
mov
scas
xchg
mov
add
out
jbe
jl
sub
mov
xor
adc
gs
push
inc
iret
cli
and
mul
adc
jp
dec
sbb
out
call
add
sbb
push
(bad)
ss
not
cmc
jmp
scas
jnp
xlat
cmps
add
push
pop
cmp
ror
inc
cmp
xor
retf
push
je
pushf
sbb
std
outs
push
mov
mov
cmp
retf
push
xor
sahf
xchg
lea
imul
pop
retf
push
xchg
mov
or
ds
lods
pop
(bad)
push
es
lods
or
pop
pop
jo
(bad)
sahf
hlt
push
adc
push
pusha
jae
jecxz
and
jmp
fidiv
sbb
dec
lds
sub
jo
mov
add
sti
fidivr
repnz
sbb
xor
pushf
dec
lock
adc
repz
mov
aam
fmul
inc
sar
es
jecxz
or
mov
xchg
mov
push
adc
xor
popf
jmp
jle
push
cld
scas
mov
jge
add
xchg
sbb
inc
mov
jp
imul
mov
nop
popf
sub
cmps
add
push
or
dec
and
loope
je
push
jno
cmp
mov
sub
xchg
mov
and
push
hlt
cld
fwait
add
dec
inc
in
add
ret
xlat
stos
aaa
mov
push
adc
mov
sti
stos
mov
cmps
pop
mov
retf
jne
hlt
arpl
push
sub
mov
jg
xchg
cmp
jne
xor
dec
jg
js
out
pop
jae
push
aam
cmp
fnstsw
jp
and
addr16
cmps
shl
rcr
mov
popf
mov
adc
inc
xchg
mov
xor
cmp
shr
sbb
inc
sahf
(bad)
mov
push
xchg
jno
lods
push
ins
push
sahf
mov
push
and
cmp
mov
mov
idiv
stos
xor
pusha
adc
loop
scas
or
in
xchg
fs
and
xchg
pushf
and
mov
xor
cmp
push
out
add
pop
push
lods
call
push
jecxz
push
cmp
dec
jb
push
retf
dec
pop
inc
jg
cli
mov
cmp
sbb
xlat
pusha
and
jns
data16
sub
daa
cmp
hlt
pop
or
bound
xlat
add
mov
push
retf
mov
nop
stos
mov
fisttp
xor
mov
cmps
cdq
rcr
sbb
and
jmp
sahf
and
ins
inc
fs
jnp
jnp
cmc
test
push
aas
in
sbb
test
movs
pop
scas
xchg
cmp
(bad)
xchg
push
pop
in
stos
inc
push
mov
gs
xor
xchg
jmp
fild
sbb
rol
xchg
loopne
mov
pop
iret
push
adc
or
(bad)
jle
imul
mov
repnz
push
cmp
gs
dec
xor
sahf
hlt
mov
scas
mul
adc
inc
or
movs
xchg
and
or
xor
shl
pop
dec
lahf
lahf
aas
test
xchg
pushf
fsubr
push
aad
pop
scas
pop
xlat
ins
ds
pop
icebp
leave
push
fsubr
loope
out
or
xchg
std
stos
arpl
inc
mov
sub
mov
and
pop
cmp
and
je
jne
dec
sbb
loopne
les
mov
fwait
(bad)
pop
jge
adc
jl
jmp
out
stos
fdivrp
cmp
jl
mov
(bad)
add
push
(bad)
cmp
jmp
std
pop
les
mov
inc
xor
push
adc
and
push
je
push
not
xor
in
sub
pop
sahf
sahf
popa
jo
sub
xchg
xor
gs
aad
push
pop
push
or
sub
outs
jnp
dec
dec
xchg
jle
mov
cs
call
mov
cld
loopne
pop
push
fist
pop
aas
sbb
cmp
mov
push
xchg
out
imul
popa
dec
stos
idiv
rcr
test
and
fs
dec
xchg
mov
add
jnp
fsincos
xchg
scas
and
rcr
push
lds
loop
(bad)
test
jecxz
push
dec
in
fnstcw
mov
mov
nop
test
add
imul
dec
lahf
in
and
add
into
subps
clc
push
and
in
lock
push
dec
push
mov
ins
add
dec
or
and
push
lahf
ret
icebp
jle
loopne
aad
pop
call
and
gs
fdivr
push
pop
push
sahf
mov
mov
call
(bad)
jecxz
inc
push
shr
ret
or
mov
aas
aam
or
movs
sub
outs
cmp
aam
and
mov
popf
repz
cdq
jp
mov
clc
dec
fstp
push
pop
mov
test
push
sti
je
pop
xchg
pushf
aad
sub
inc
fs
jl
lahf
dec
sub
ror
sbb
lock
cmp
daa
jl
js
adc
scas
or
ins
lds
dec
sti
out
xchg
imul
mov
loopne
lahf
mov
dec
fmul
mov
or
call
adc
xchg
faddp
jb
sub
test
xchg
add
cmp
mov
loop
les
xor
pop
mov
jae
mov
mov
pop
mov
jg
cmp
sar
mov
inc
stc
mov
mov
inc
pop
xor
jle
aas
repz
inc
addr16
sbb
dec
jle
icebp
mov
add
dec
xchg
test
popf
mov
mov
sti
adc
enter
mov
or
arpl
jecxz
adc
and
cld
sbb
xchg
add
jp
popf
mov
dec
push
or
loope
inc
mov
xchg
(bad)
test
jle
and
push
mov
movs
and
mov
mov
mov
mov
or
xchg
call
sbb
cmp
cmp
add
xor
cmp
and
sbb
shr
add
mov
das
mov
test
lahf
(bad)
jbe
call
xchg
xchg
inc
xchg
imul
ret
outs
ror
rol
pop
sti
call
and
es
ins
push
jmp
sar
test
outs
inc
jg
push
cmp
pop
leave
push
jno
loop
movs
icebp
or
popa
jle
loop
pop
rcr
adc
jmp
or
xchg
stos
cwde
push
or
mov
pop
icebp
cmp
dec
ror
sbb
xor
xor
push
xchg
out
stos
ds
mov
adc
frstor
push
loop
pushf
push
mul
or
les
cwde
or
xor
pop
xchg
inc
rcl
loop
sbb
repz
push
(bad)
hlt
jge
pushf
sti
iret
cli
mov
dec
xchg
sahf
ins
fild
es
aas
mov
and
mov
and
scas
push
in
repz
xor
sub
je
inc
xor
mov
test
ins
pop
or
push
in
cmp
into
clc
nop
pop
inc
cmp
xchg
outs
xchg
fwait
mov
push
repz
push
push
js
push
adc
and
mov
hlt
fadd
scas
sbb
or
repnz
shr
mov
imul
stos
iret
pushf
loop
cmp
mov
repz
adc
in
pop
xor
or
retf
sbb
add
mov
imul
arpl
mov
inc
out
(bad)
xchg
sahf
push
out
mov
jle
int3
shl
cmps
xor
clc
lea
mov
mov
enter
jecxz
cli
sub
mov
nop
push
jae
shr
cmps
lods
lods
pop
push
sbb
(bad)
mov
(bad)
in
fdivr
xor
add
cld
int
scas
adc
xchg
mov
inc
dec
cmps
jno
outs
ficom
test
xor
test
fsubr
jb
fisttp
mov
shl
xlat
imul
fadd
add
ja
cdq
xchg
fld
cmps
mov
push
repz
hlt
lahf
mov
or
push
mov
out
jns
lods
xchg
popf
pushf
pop
das
pop
popf
sbb
xchg
jnp
cs
fnstenv
inc
mov
mov
pop
inc
mov
sbb
sub
in
add
mov
dec
ja
xchg
mov
popa
popa
mov
addr16
hlt
jmp
adc
je
outs
sub
mov
inc
and
sar
inc
dec
movs
push
leave
and
mov
repnz
dec
cs
dec
inc
mov
push
jno
mov
icebp
jl
xlat
popf
add
add
add
mov
cmp
dec
fs
xchg
pop
or
mov
cmp
arpl
xor
jg
arpl
jne
pop
std
xchg
leave
xchg
adc
and
or
jmp
cmps
movs
nop
iret
push
mov
stos
dec
int
in
jbe
mov
jno
add
jne
sub
test
xchg
jno
push
inc
repnz
mov
and
xchg
lock
jge
mov
test
sbb
pusha
xor
xchg
sahf
mov
rcr
adc
add
or
xchg
inc
push
dec
or
mov
fdiv
dec
aad
add
adc
bound
xor
mov
movs
pop
push
mov
outs
mov
stc
cmp
out
(bad)
jmp
mov
(bad)
mov
xor
mov
push
adc
scas
pop
fist
lods
add
pop
jnp
sub
inc
push
es
jecxz
hlt
es
pop
div
dec
(bad)
in
jmp
push
xchg
mov
repnz
jle
cmps
dec
out
jmp
ss
sahf
test
or
pop
xor
mov
addr16
cmp
test
jne
ret
mov
pop
lahf
inc
add
js
fstp
jle
pop
stos
shl
fild
mov
jmp
and
je
aad
scas
or
mov
test
dec
inc
jns
xor
cmps
jmp
xchg
cs
mov
pop
aad
xchg
jmp
add
and
mov
dec
pushf
sahf
push
mov
cs
pop
mov
fs
shr
call
stc
cmp
mov
test
add
pop
pop
neg
push
imul
push
sbb
xor
inc
cwde
fiadd
mov
outs
and
sbb
dec
out
sub
(bad)
and
push
mov
jne
rol
ret
and
cli
pop
shr
shl
mov
or
sti
xor
mov
lods
mov
jo
das
inc
int
icebp
daa
jne
fdivr
and
pop
add
inc
in
inc
loop
in
aad
xchg
outs
mov
mov
inc
dec
clc
mov
test
mov
lahf
ds
add
adc
mov
cdq
and
ret
push
or
mov
mov
cmp
aaa
add
mov
sub
xchg
mov
push
ja
dec
out
in
pop
xor
inc
push
xchg
xor
retf
daa
xor
cmps
call
or
xchg
(bad)
in
jns
or
inc
cld
shr
inc
lea
xchg
test
sub
cs
or
and
jns
pushf
sub
retf
xchg
cmp
xor
jns
test
add
pushf
scas
loope
add
sub
inc
jo
imul
inc
dec
jno
ds
xor
xchg
sub
mov
pusha
sbb
call
inc
fnstsw
adc
push
jecxz
mov
xor
cld
stos
ss
shr
repz
movs
push
mov
fcmove
xchg
add
retf
push
jecxz
in
fwait
cmps
cld
imul
(bad)
xor
mov
int3
adc
push
ret
sub
and
(bad)
stc
(bad)
div
mov
fbld
jmp
add
sahf
test
ds
xchg
and
les
sub
xchg
in
lock
lahf
cdq
pop
mov
sub
cmp
add
in
fld
xor
es
rcr
daa
sbb
call
jecxz
and
test
xchg
fisub
loope
xlat
mov
ja
jecxz
popa
call
cmp
out
inc
imul
jne
xor
or
xchg
movs
pop
cmps
mov
fcomp
push
mov
dec
popa
lock
cmp
fiadd
mov
or
movs
shl
mov
in
mov
lock
test
sub
mov
out
mov
add
pop
addr16
mov
lods
popa
lods
push
or
lock
xor
jb
dec
lods
xchg
fs
ja
(bad)
sbb
push
push
push
jns
mov
adc
and
cld
or
lds
repnz
sub
jmp
jno
mov
fdivr
jne
scas
fscale
sbb
jbe
fwait
cmp
xchg
imul
es
and
xchg
mov
pop
pop
call
mov
jmp
aas
or
fwait
inc
push
scas
jp
sub
and
or
test
or
inc
in
(bad)
int
arpl
cld
ror
mov
cld
xor
mov
push
popf
in
into
push
int3
pop
pop
mov
into
test
(bad)
out
jns
in
dec
xchg
mov
push
xchg
add
jb
lahf
inc
mov
in
push
(bad)
mov
pop
adc
inc
shl
xlat
dec
sbb
jg
lea
in
dec
dec
cmps
or
sub
lock
test
cmp
mov
(bad)
xor
loop
inc
out
sti
lock
mov
push
js
in
popf
repnz
add
and
outs
xchg
les
fdivr
xchg
in
pop
or
frstor
test
jo
mov
leave
(bad)
xchg
sti
xchg
push
mov
inc
fst
outs
pushf
ficomp
bound
mov
jp
int
stos
popf
call
add
cmp
enter
lods
lea
and
mov
fsub
mov
jnp
push
das
outs
pop
rol
and
and
jmp
and
sbb
shl
aad
mov
enter
lock
loope
add
xlat
int
test
pop
ret
xor
xchg
and
mov
das
dec
cli
addr16
push
shr
(bad)
or
mov
xor
ficomp
and
test
mov
call
je
cmps
(bad)
ins
jl
sub
sar
test
dec
mov
test
out
int3
mov
js
cmp
jbe
adc
sbb
push
hlt
inc
sbb
or
push
ret
or
add
retf
mov
sub
pushf
mov
pop
pop
mov
fwait
ret
mov
fisttp
and
mov
inc
push
adc
retf
aad
iret
stos
xchg
xchg
push
xor
test
jbe
adc
push
push
fstp
stc
sbb
inc
dec
mul
pushf
mov
je
in
iret
fcom
movs
ins
call
mov
push
pop
daa
pop
adc
push
scas
test
pop
gs
dec
cs
stos
push
(bad)
xor
or
mov
das
mov
scas
scas
mov
mov
jge
ror
xor
mov
cmps
push
or
push
sar
xor
jmp
push
or
dec
jo
cmp
mov
sub
pop
inc
int
sbb
fiadd
and
into
clc
(bad)
jns
out
fstp
sub
rol
adc
mov
aaa
pop
(bad)
jg
jmp
outs
stc
mov
ja
push
aaa
fdivr
aas
ins
ds
fwait
adc
nop
and
xor
ret
push
dec
fs
sub
movs
cmps
xor
pop
in
imul
mov
xchg
push
loop
and
shr
adc
sbb
mul
inc
jl
dec
xor
test
xor
data16
sbb
clc
push
xor
cmps
cs
adc
imul
mov
rol
pop
rol
jne
test
pop
xchg
test
ins
not
ret
call
les
imul
mov
pop
call
nop
mov
and
mov
jmp
loopne
lds
and
or
sub
scas
es
sub
adc
adc
adc
stos
fdiv
lea
push
cmp
in
or
sbb
test
pop
push
movs
popa
loop
mov
ror
data16
rcr
pop
loop
repz
inc
enter
ss
mov
(bad)
loope
mov
ret
mov
jb
enter
hlt
mov
xor
outs
ror
xchg
or
dec
rol
enter
mov
xor
push
hlt
fidiv
mov
idiv
xchg
push
je
movs
pop
sub
sub
cmp
push
push
push
pop
dec
jnp
mov
shr
inc
jmp
xchg
pop
xor
jl
ror
mov
aas
test
mov
out
xchg
and
out
test
gs
cld
xchg
adc
sbb
and
cmps
div
mov
pop
clc
out
mov
outs
and
mov
out
push
imul
ins
xchg
dec
mov
lods
sbb
ins
or
fcomp
fwait
add
and
loope
les
jg
imul
xchg
push
mov
retf
cmps
ret
mov
icebp
push
retf
xor
add
pop
add
cmps
xchg
dec
pop
dec
lods
rcl
lods
adc
(bad)
(bad)
push
ja
dec
jno
inc
jp
lea
ret
aaa
or
xor
mov
xor
stos
and
icebp
ja
in
in
cmp
stos
cmc
pop
push
jo
sbb
ficom
fabs
cli
test
fstp
push
shl
pop
call
add
(bad)
adc
jns
pop
jmp
sub
imul
mov
jmp
xchg
jb
sar
dec
mov
push
add
mov
adc
jbe
es
(bad)
xor
sti
mov
cmc
outs
imul
inc
sub
sub
xor
mov
pop
inc
mov
call
popf
inc
mov
std
sub
xor
push
cmps
call
jnp
xchg
stos
das
sbb
arpl
jmp
add
jne
dec
sbb
mov
pop
mov
jbe
mov
call
int
or
in
ret
mov
rol
inc
mov
scas
fist
out
(bad)
test
test
xchg
inc
adc
or
test
inc
sahf
inc
ins
cli
cli
cmp
lods
pop
stos
cmp
push
out
les
push
pop
mov
mov
ss
popa
stc
out
cmps
jge
push
dec
ins
mov
ret
movs
or
jb
mov
jne
(bad)
jmp
xchg
aas
sbb
mov
outs
sbb
mov
xchg
inc
les
data16
data16
leave
push
(bad)
jo
loope
jg
in
push
repz
adc
mov
lahf
or
cmp
pusha
mov
xchg
sub
mov
dec
test
test
dec
icebp
mov
pop
into
push
and
sar
mov
and
pop
mov
inc
xor
sub
xchg
add
and
inc
aam
ret
inc
les
popa
push
push
and
add
add
js
fsub
loopne
and
push
scas
inc
jbe
mov
ins
inc
int
into
push
mov
jmp
inc
pop
jecxz
mov
xchg
cmp
cmp
jle
aas
clc
imul
cli
sbb
test
add
repz
xor
fnstsw
sbb
pop
xchg
int3
mov
loop
cmp
into
sub
mov
rol
cwde
mov
cmp
and
jmp
jmp
in
jge
xchg
xor
mov
in
xchg
cmp
cmp
and
retf
in
push
imul
les
mov
jp
and
int
or
inc
sbb
jp
inc
xchg
pop
add
and
xchg
fistp
xor
cmp
imul
or
push
push
jp
aad
ja
add
add
pop
mov
dec
or
mov
add
movs
fiadd
mov
cmp
add
sahf
daa
idiv
and
xchg
in
or
fsubr
(bad)
xlat
jp
dec
nop
adc
pop
adc
bound
sbb
lds
mov
popf
or
rol
add
xchg
add
repz
xchg
hlt
test
int
add
stos
cdq
sub
mov
in
clc
out
pop
jl
or
dec
adc
enter
stos
ret
inc
neg
mov
xchg
ficomp
pop
fist
out
xor
sub
push
jge
xchg
stos
rcr
jmp
pop
add
push
pop
pop
sbb
lea
xor
sbb
xchg
pop
stc
add
push
int3
(bad)
jp
scas
jecxz
cmp
test
or
sbb
inc
jne
adc
gs
ret
inc
shr
les
pop
bound
jmp
dec
pop
ds
ins
jmp
mov
(bad)
fst
bound
retf
xor
dec
push
mov
pop
mov
test
test
add
sbb
ret
or
inc
out
mov
rol
call
inc
cld
or
dec
pop
mov
jge
(bad)
aad
dec
cmp
xor
xchg
cmp
clc
sbb
jle
push
xor
test
inc
clc
sbb
aas
push
popf
(bad)
retf
shl
jg
stos
fidiv
inc
inc
xlat
or
cmp
xchg
in
sbb
mov
ins
in
arpl
jecxz
aas
adc
cwde
push
mov
sar
mov
test
mov
mov
or
in
call
mov
daa
scas
test
es
adc
pop
loopne
add
inc
inc
and
outs
mov
rcl
into
cmp
mov
mov
jl
sub
jmp
dec
(bad)
push
jecxz
mov
in
popf
faddp
xchg
push
ins
dec
ret
popa
cmc
sysret
retf
je
adc
stos
test
idiv
outs
lods
jno
pop
jbe
add
aad
mov
js
out
mov
gs
xor
fbld
sar
sub
in
dec
push
add
scas
test
jp
push
and
inc
push
js
out
or
cmc
adc
dec
pop
mov
rcr
repz
hlt
mov
pop
jl
add
imul
fwait
add
push
dec
inc
shl
sbb
pop
push
or
sub
pushf
leave
mov
ja
dec
inc
dec
or
pop
jp
daa
dec
rep
lods
jl
dec
jo
movs
sbb
lods
sahf
sbb
test
mov
push
push
sbb
add
fwait
sub
in
push
adc
or
loop
aaa
lahf
adc
scas
mov
add
les
hlt
(bad)
(bad)
repnz
cdq
test
adc
push
dec
in
test
and
call
enter
ret
xor
xchg
fist
mov
test
outs
xchg
cmp
pusha
xchg
jle
cmp
mov
jle
(bad)
or
mov
loopne
inc
call
push
dec
ret
imul
fs
inc
imul
ins
sbb
or
and
mov
sbb
(bad)
sbb
mov
leave
sub
repnz
lock
cld
(bad)
cdq
test
jno
sahf
dec
mov
icebp
adc
inc
pop
sub
lods
push
sti
cmps
xor
sar
fcomp
xor
hlt
jbe
loope
adc
hlt
scas
pop
das
adc
mov
jnp
and
xchg
fcmovnb
sbb
mov
mov
pop
and
sar
adc
xchg
pop
or
adc
pop
in
push
push
dec
pushf
out
mov
ins
pop
or
push
das
lds
add
push
cmp
(bad)
std
mov
mov
pop
loop
adc
pop
jle
cli
add
hlt
mov
jg
dec
xchg
nop
aam
shr
loop
bnd
(bad)
stc
pop
scas
push
sub
and
dec
push
and
inc
xchg
cli
jb
mov
fnstenv
sbb
sbb
add
daa
jns
shr
fidiv
je
inc
pop
mov
leave
scas
xor
js
mov
fdiv
push
mov
and
adc
in
(bad)
arpl
push
mov
fcomp
movs
mov
scas
ja
xchg
leave
int
std
daa
mov
adc
mov
out
mov
imul
push
fcomip
xor
(bad)
jecxz
(bad)
or
or
ins
mov
int
call
mov
std
pop
xchg
inc
aam
jae
mov
adc
ret
or
jle
jnp
test
pushf
out
clc
jae
inc
adc
mov
pusha
fnstenv
dec
loope
(bad)
(bad)
mov
fild
add
fwait
jp
test
push
and
mov
xor
lock
mov
cs
in
ror
xchg
xor
pop
ja
or
mov
js
sub
cmps
push
andps
ins
and
ins
push
xor
cdq
push
shl
(bad)
xchg
and
xchg
or
pop
cmp
test
sbb
lods
test
lea
popa
inc
cmc
xor
or
jmp
inc
inc
pop
jmp
add
lahf
pop
cmc
xchg
and
scas
das
mov
(bad)
outs
ins
jnp
cmp
mov
cdq
lods
loopne
xor
pop
mov
mov
dec
cmp
push
mov
lods
sub
push
outs
loopne
lds
mov
jae
lods
cwde
dec
add
push
mov
xchg
and
sbb
les
inc
jecxz
retf
mov
nop
shr
xchg
sub
imul
adc
icebp
(bad)
xchg
fsubrp
movs
push
pop
sbb
sbb
enter
dec
sub
test
jmp
daa
hlt
push
mov
in
jbe
or
loopne
jnp
(bad)
jge
cmp
out
xor
pop
push
jno
xchg
std
sbb
jns
shr
mov
stc
rcr
xor
sub
push
das
and
pusha
ja
call
jmp
inc
cli
dec
cs
mov
gs
fidivr
xchg
movs
push
lds
inc
dec
inc
stos
add
lea
sbb
add
not
and
in
into
loopne
push
das
pop
rol
mov
inc
hlt
xchg
xchg
test
(bad)
shr
jo
inc
pop
fwait
mov
retf
ret
lock
sbb
imul
sbb
test
mov
(bad)
mov
mov
pop
call
es
xchg
imul
inc
frstor
cmp
pop
inc
or
adc
retf
je
jmp
repnz
fs
mov
sub
sub
sar
push
jae
adc
sub
adc
pop
sbb
jg
les
fnsave
xchg
lea
sahf
arpl
mov
les
sbb
ja
and
xor
jae
imul
xor
and
push
sub
shl
xchg
push
shl
push
int
into
mov
cmp
adc
scas
rcr
pop
popa
ficom
inc
cmp
add
xor
pop
mov
mov
jae
cmp
push
push
sbb
inc
and
push
fidiv
ror
xchg
xchg
pop
jge
mov
jp
test
aas
or
jecxz
test
in
ror
std
jmp
cmc
out
mov
and
mov
cmps
out
ret
ins
fs
push
adc
loopne
ret
adc
rcl
xor
loop
add
test
retf
add
xchg
jbe
nop
jo
dec
mov
jnp
adc
leave
mov
jmp
jmp
inc
mov
push
mov
inc
mov
adc
(bad)
mul
mov
out
rol
cmp
test
xchg
cmp
push
adc
dec
mov
fucom
cmc
fst
xchg
jmp
retf
std
inc
es
mov
xor
popa
lods
fdivrp
movs
xchg
fcomp
outs
mov
inc
cmps
pop
pop
add
cmp
mov
js
iret
or
mov
cmp
mov
lock
jae
pop
push
adc
push
lods
rcl
cs
scas
or
jb
add
mov
and
pop
pop
nop
or
push
fld
sbb
call
and
btr
jmp
jmp
xchg
xchg
imul
mov
outs
push
push
mov
lea
fcomp
cmc
into
in
jp
pop
cmp
mov
ret
cmps
adc
popf
jl
(bad)
mov
xchg
movs
repnz
or
mov
in
cmp
xchg
pop
inc
cmp
inc
push
cwde
jnp
jbe
xor
mov
(bad)
fisub
icebp
cmps
sub
inc
xchg
sub
jb
mov
iret
ret
push
scas
xchg
les
dec
(bad)
jp
hlt
movs
aad
cmp
xor
repz
add
pop
xchg
pavgw
repz
ret
pop
inc
shl
aas
scas
mov
inc
dec
dec
outs
xor
cmps
or
mov
inc
inc
or
pop
inc
enter
cwde
xchg
(bad)
or
sub
ror
sub
push
popa
sub
xor
cmp
fwait
add
ror
dec
ret
mov
sub
loope
inc
stos
in
in
pop
push
loope
(bad)
out
pop
iret
pop
or
out
pop
jmp
ret
mov
jecxz
mov
jmp
mov
aad
and
xor
vpaddusb
movs
(bad)
xchg
mov
popf
mov
cmp
int3
adc
mov
repz
imul
(bad)
call
test
dec
es
icebp
sbb
pusha
call
push
mov
ja
mov
pop
int
aam
adc
ss
dec
dec
idiv
dec
ins
mov
aas
in
mov
aad
mov
xor
(bad)
call
jo
out
push
fcom
ret
sub
mov
mov
mov
xchg
and
movs
dec
lods
adc
cmp
mov
add
push
jmp
cmp
gs
pop
inc
xor
add
mov
mov
xor
nop
call
dec
mov
push
repnz
adc
outs
(bad)
imul
and
push
addr16
pop
push
and
push
push
lahf
and
adc
jnp
cmp
imul
fmul
mov
fmulp
fdivp
retf
jp
hlt
push
ja
lods
js
mov
add
(bad)
or
frstor
out
push
pop
mov
fistp
(bad)
aas
inc
mov
lods
das
mov
mov
mov
lahf
and
sti
fstp
xor
push
mov
lods
mov
push
jnp
arpl
or
lds
je
std
sbb
adc
retf
icebp
mov
xchg
pop
dec
mov
xchg
aam
and
lods
adc
xchg
ds
lea
dec
add
mov
clc
adc
ss
hlt
and
pop
arpl
mov
out
(bad)
iret
cmp
cmp
jmp
loope
lds
jmp
int
jmp
mov
push
sbb
push
(bad)
jp
imul
add
pop
sub
jns
(bad)
pop
fdivrp
hlt
dec
xchg
in
dec
fmul
repz
daa
fcom
pushf
adc
jb
repz
(bad)
xor
inc
movs
stos
push
mov
cmp
test
ins
mov
fld
rcr
imul
mov
jae
mov
retf
cwde
xchg
mov
rol
jmp
push
dec
aas
mov
or
mov
adc
push
inc
bound
and
ja
sub
add
mov
repnz
dec
cli
cs
ins
and
rcr
pop
cmp
mov
cld
jno
mov
push
out
or
cld
pop
mov
(bad)
fcmovb
shl
sub
mov
fwait
xor
(bad)
mov
mov
cdq
hlt
or
(bad)
inc
(bad)
pop
cmps
jo
inc
loope
outs
jno
int
loope
push
data16
ja
sub
test
add
aas
adc
sbb
ins
or
or
cmp
or
stos
add
ret
cdq
mov
in
ins
call
ret
push
cmp
mov
or
pop
sbb
rcl
(bad)
jge
push
dec
sub
pusha
cld
pop
and
inc
out
mov
cmp
mov
sti
mov
stos
xlat
invd
inc
or
fnstsw
jb
(bad)
mov
jb
mov
push
(bad)
mov
mov
rcl
inc
mov
mov
inc
jb
shl
ins
adc
push
push
sbb
adc
popf
push
loop
inc
cmc
add
fdivr
dec
(bad)
movs
test
outs
cmp
sub
adc
push
cmc
sbb
jb
call
push
movs
out
scas
xor
stc
lds
pop
push
inc
xor
or
test
scas
retf
cmp
adc
inc
jl
mov
mov
adc
repnz
xor
pop
mov
push
test
jae
cmps
daa
xchg
sbb
or
cli
fldcw
nop
stos
int3
push
or
out
mov
loope
mov
inc
sbb
lods
clc
aaa
into
mov
not
(bad)
iret
ret
dec
mov
outs
std
add
shr
mov
xor
mov
iret
push
or
cmp
xchg
movs
push
push
pop
and
jmp
sbb
xor
iret
in
xlat
ja
(bad)
(bad)
scas
int3
mov
xchg
sub
mov
inc
(bad)
push
lea
cli
inc
adc
out
in
jge
and
jmp
xchg
pop
or
add
or
mov
xrelease
pop
addr16
(bad)
leave
add
movs
dec
cs
add
imul
cld
push
dec
stos
jg
test
ins
xor
(bad)
mov
xchg
dec
(bad)
add
xor
push
push
pusha
sbb
loope
sub
call
nop
scas
or
out
or
je
(bad)
mov
ret
push
fild
push
icebp
mov
jecxz
retf
inc
jns
call
adc
clc
jae
xchg
dec
std
sbb
arpl
inc
and
dec
dec
shr
cmps
pop
or
push
jge
shr
ds
imul
sub
dec
pusha
xor
getsec
jp
(bad)
fwait
dec
inc
sub
or
pop
and
es
sahf
fstp
pop
pop
aam
rol
xor
xor
push
adc
(bad)
and
or
enter
sub
(bad)
adc
cmp
mov
arpl
jbe
dec
das
pop
lods
jnp
push
xchg
jae
leave
cwde
fisttp
push
or
bound
inc
jmp
xor
(bad)
push
mov
mov
aam
add
add
xor
retf
or
(bad)
sub
pushf
cs
mov
pop
xor
out
xchg
xchg
sub
pop
mov
mov
mov
sbb
fs
inc
std
movs
dec
add
sub
xchg
outs
mov
pop
in
and
out
test
dec
cmp
rcl
push
movs
das
cwde
push
xlat
cwde
(bad)
rol
(bad)
and
xchg
xchg
out
ret
into
adc
jno
push
adc
fisubr
out
jns
push
idiv
xlat
loopne
cmc
dec
(bad)
sbb
sahf
sbb
pushf
mov
(bad)
inc
mov
jmp
je
mov
je
dec
jp
cdq
es
int3
add
adc
data16
je
add
xor
in
in
int
mov
retf
sub
cmp
ins
xor
lock
scas
pop
add
fadd
mov
push
sub
daa
aad
pop
std
pop
sbb
pop
dec
repnz
xor
(bad)
jmp
(bad)
jp
mov
jbe
das
add
out
lock
cmp
xlat
mov
add
rep
push
outs
adc
add
test
lock
mov
xchg
pop
stc
inc
xor
push
movs
cli
mov
mov
push
addr16
stos
aas
cmp
pop
inc
jp
ins
retf
push
cs
scas
mov
icebp
sbb
ja
cmp
cmc
fisubr
out
xchg
sub
fsub
shr
pop
cmc
and
adc
sbb
aam
fsub
add
jl
(bad)
repz
daa
mov
jle
or
stos
test
or
mov
lahf
jg
shr
sar
add
jmp
pop
cmp
hlt
and
add
mov
fmul
(bad)
jg
mov
xchg
or
cs
mov
cmps
pop
icebp
jecxz
or
shr
lea
pop
fnstenv
and
jmp
adc
and
sub
mov
mov
push
xor
sbb
or
xlat
xchg
test
inc
test
cmp
(bad)
in
enter
std
addr16
fimul
xchg
sub
pop
fsub
push
rcl
fisubr
cmp
gs
sti
(bad)
fwait
adc
sub
mov
ds
lds
xlat
pop
xlat
sub
outs
add
jp
or
ret
cs
xlat
cld
mov
cwde
sbb
int
fidivr
xchg
(bad)
cmp
mov
test
cmp
sub
cli
xchg
(bad)
ja
not
and
lea
xchg
mov
sub
sbb
lock
fistp
xchg
jo
or
loopne
(bad)
jno
jmp
or
gs
dec
das
sub
mov
fiadd
push
sbb
shr
xor
jnp
pop
add
inc
ret
cwde
out
adc
out
xor
addr16
sub
cmp
dec
xor
fist
mov
jl
push
test
and
sbb
jae
dec
jmp
or
div
dec
dec
and
in
xchg
clc
adc
or
in
lds
sar
mov
and
retf
mov
adc
lods
fistp
bound
and
cmp
xor
push
xchg
call
or
adc
js
aas
test
repz
push
or
fdiv
out
xchg
dec
mul
or
mov
fld
jp
inc
outs
pop
ret
ins
cmp
inc
aam
pushf
dec
dec
sub
and
sbb
xchg
out
and
dec
fwait
in
jg
add
cmp
mov
xor
retf
pop
mov
pusha
adc
into
and
or
dec
ins
(bad)
dec
cmp
out
call
inc
lods
mov
fisub
repnz
dec
in
iret
(bad)
mov
test
call
aas
ja
fxch
call
sub
outs
adc
adc
xchg
jmp
outs
adc
aas
out
jmp
cmps
jle
jbe
push
add
dec
adc
or
dec
call
call
pop
inc
mov
aam
sbb
cdq
iret
jne
lahf
sbb
cmps
pop
fisttp
fisttp
mov
int3
sahf
cmp
or
dec
sbb
addr16
mov
mov
addr16
in
or
cmp
xchg
mov
add
sar
stc
ror
sar
das
pushf
xlat
dec
cmps
ds
les
cwde
enter
imul
(bad)
cmps
mov
cs
mov
add
out
pushf
je
rcl
mov
jns
in
pusha
push
leave
scas
sar
xchg
ins
mov
es
jbe
jmp
(bad)
xchg
inc
sahf
shr
mov
sub
mov
inc
ins
sti
sbb
mov
xor
cmps
xchg
call
int
xor
mov
mov
cwde
mov
mov
outs
repz
dec
inc
and
adc
and
loop
out
mov
jl
and
adc
les
neg
fisubr
jne
inc
cmp
mov
jmp
and
out
jns
or
fcomp
mov
in
sahf
sub
sub
leave
add
fs
test
mov
mov
push
cmp
call
xor
fst
jl
mov
aam
mov
movs
dec
sbb
dec
mov
pop
int3
cld
sahf
inc
ret
xchg
rcl
clc
mov
adc
jb
xor
push
jmp
clc
mov
ss
mov
jb
femms
inc
add
sub
push
mov
cmp
and
cld
jp
push
call
(bad)
jle
nop
mov
dec
(bad)
inc
pop
lods
clc
dec
pop
repz
aam
and
add
(bad)
repnz
sahf
and
mov
cmc
xor
adc
xchg
push
sub
mov
jnp
and
mov
xor
pop
out
sar
mov
(bad)
jmp
adc
xchg
inc
mov
arpl
or
dec
jae
dec
cmp
adc
es
outs
mov
popf
cdq
adc
xor
mov
int
push
dec
mov
jp
sub
cli
gs
bound
pop
jmp
sub
sub
xchg
cs
push
push
retf
enter
fsub
ret
pop
mov
seta
mov
dec
retf
cmp
xor
xchg
sub
jmp
movs
ds
fidivr
sbb
sbb
xor
std
dec
in
fs
ds
pop
dec
jno
sub
mov
or
mov
cmp
fld
aas
xor
xor
popf
pop
jl
adc
test
test
sbb
clc
call
xchg
retf
les
push
repz
nop
data16
leave
call
cs
sbb
xchg
(bad)
out
push
sub
into
jnp
lds
mov
inc
push
sub
pop
jmp
sahf
mov
xchg
xchg
push
jae
sbb
sbb
push
dec
adc
gs
cld
out
loopne
ror
shl
aam
sub
scas
push
loop
xor
dec
xchg
std
shr
out
sbb
or
cli
ins
ror
cld
pop
cwde
sbb
xor
repz
addr16
call
call
or
mov
call
hlt
scas
std
leave
sar
jmp
cmps
xchg
pop
xchg
test
and
ins
push
inc
adc
icebp
movntq
dec
test
push
retf
fidiv
jmp
call
sub
jmp
inc
inc
loopne
ffree
adc
and
push
ret
jl
imul
mov
cmp
std
sahf
in
out
call
je
test
adc
cmps
xor
inc
xlat
scas
adc
icebp
fwait
mov
mov
xor
xchg
add
adc
cs
addr16
in
mov
or
scas
cdq
push
inc
push
dec
clc
lods
xchg
cmps
shl
movs
dec
push
sar
call
inc
adc
sub
push
sbb
add
mov
inc
mov
inc
inc
jns
xchg
cmc
xchg
mov
in
in
retf
sahf
xor
sar
pop
mov
loope
ret
fisttp
inc
std
loope
into
xchg
pop
xchg
aad
xchg
cmc
sub
mov
jmp
dec
fidivr
aas
les
mov
cmp
cmp
pop
je
call
xchg
pop
dec
pop
mov
arpl
push
jno
sbb
rol
daa
iret
mov
mov
inc
inc
pop
and
ror
lea
add
(bad)
push
into
add
push
cmp
sub
stos
xor
repnz
loopne
cmp
sub
pop
or
pop
mov
xchg
mov
sub
pop
jae
outs
xchg
test
test
pop
mov
mov
neg
(bad)
mov
jge
icebp
dec
mov
add
push
je
xchg
dec
mov
add
jmp
repnz
rol
lahf
sbb
sbb
pop
(bad)
lock
or
daa
jl
nop
mov
mov
push
mov
dec
or
mov
jl
pop
ins
xor
mov
add
mov
sub
imul
push
popa
stc
dec
sbb
ds
lahf
repz
mov
icebp
xchg
ds
retf
push
movs
scas
sbb
stos
jmp
nop
and
test
mov
pop
fimul
jl
push
sbb
lahf
gs
mov
test
loop
cmp
sbb
push
aad
adc
xchg
push
lea
mov
fsubr
clc
jecxz
adc
mov
sub
jno
mov
mov
jmp
hlt
imul
arpl
imul
mov
xchg
pop
push
mov
push
xchg
lods
mov
mov
(bad)
adc
cmp
mov
mov
and
dec
shl
stc
inc
inc
psrlw
ins
scas
adc
or
adc
retf
ror
inc
jge
pop
fwait
mov
sbb
xchg
neg
mov
jmp
sbb
xlat
stos
in
xchg
xor
imul
rol
jns
inc
ret
and
xchg
in
sub
rcl
xchg
(bad)
cdq
jno
dec
popf
ficomp
loop
fld
and
xchg
adc
and
mov
push
hlt
ins
pop
cwde
push
test
mov
jno
adc
ror
and
mov
mov
add
rcl
inc
leave
js
adc
stos
inc
mov
add
xchg
addr16
dec
out
or
jmp
std
pop
sub
in
inc
clc
test
push
lahf
(bad)
or
loope
imul
in
in
fistp
pop
retf
pop
ins
jae
cs
and
or
iret
jo
shr
ds
mov
retf
and
adc
sbb
mov
push
xchg
vandnps
out
outs
cwde
test
jmp
xchg
dec
std
pop
imul
(bad)
mov
mov
push
cmps
xchg
ins
test
inc
(bad)
stc
and
or
test
lahf
test
scas
test
and
inc
div
jb
(bad)
inc
add
call
pushf
pusha
shl
ins
sub
shl
mov
or
inc
cdq
int
test
sbb
int3
test
ins
stc
outs
xchg
pusha
cmp
xor
push
and
jae
lea
inc
rcr
sbb
add
add
push
or
xchg
je
mov
scas
(bad)
mov
lock
mov
and
in
mov
cmp
mov
retf
mov
aas
add
test
mov
sbb
pusha
adc
xlat
es
sub
inc
and
cli
lea
ja
test
xor
cmp
push
ftst
sbb
mov
lods
or
dec
adc
outs
je
cld
mov
in
ret
ds
int
jle
repz
rcr
je
sahf
or
out
(bad)
jns
add
mov
out
inc
fbstp
add
xor
(bad)
dec
pop
push
retf
call
ins
arpl
ret
or
cmp
js
test
fs
imul
dec
retf
inc
add
xor
and
xchg
cmc
sti
cmp
loopne
push
mov
xlat
pop
repnz
push
loope
lds
fild
push
les
rcl
fdivr
daa
arpl
sbb
and
arpl
and
add
shl
outs
call
mov
cmc
push
add
sub
pushf
cmp
arpl
popa
and
inc
test
push
mov
pop
jp
sub
push
ret
lahf
int
popf
push
movs
jl
inc
dec
sbb
and
push
add
test
ins
push
mov
push
xchg
push
push
(bad)
sbb
bnd
xor
test
outs
loope
inc
inc
or
ds
adc
call
fsubr
data16
xor
mov
pop
adc
and
jl
or
add
fs
pop
scas
jge
cmps
fdiv
jmp
outs
pop
lock
xor
fcomp
retf
cs
mov
mov
sbb
movs
inc
or
pop
xor
rcr
pusha
mov
pop
out
call
or
sahf
ins
inc
scas
jl
inc
repz
jns
test
and
xchg
iret
pop
cmps
(bad)
arpl
sbb
les
ins
mov
cwde
xchg
dec
rol
ins
int
mov
in
rcr
or
dec
jmp
sbb
mov
stos
inc
imul
arpl
xchg
jmp
imul
int3
dec
xor
in
aaa
ins
cmps
add
daa
clc
pusha
mov
inc
add
pop
(bad)
in
call
data16
xlat
push
(bad)
pop
inc
cmp
jbe
imul
add
ficomp
mov
imul
or
xchg
es
ror
inc
cld
repz
ins
mov
(bad)
dec
push
dec
xchg
sbb
test
xchg
fisttp
cmp
jp
(bad)
in
mov
imul
xor
mov
bound
adc
stc
cld
mov
and
in
ins
popf
ret
or
push
imul
shr
mov
test
lds
dec
mov
lds
adc
sub
inc
cmp
(bad)
fld
imul
cmp
xchg
sub
cmps
mov
aad
mov
pop
ror
loop
mov
push
mov
(bad)
out
cmc
and
add
jne
les
repz
pop
add
fild
pushf
lods
push
(bad)
adc
fld
sub
(bad)
sbb
inc
xor
out
mov
aam
ja
int
and
popf
push
les
jge
sbb
imul
call
(bad)
push
xor
add
ret
popf
jmp
or
sub
hlt
in
mov
pop
out
push
mov
outs
pop
xchg
ja
dec
fcom
cld
fimul
lahf
mov
xlat
aad
lahf
movs
(bad)
inc
fbld
dec
movs
stos
fisttp
cmps
lods
xor
aad
push
icebp
fabs
dec
adc
jp
ret
cmp
push
cdq
xchg
pop
and
das
xor
mov
test
cmp
das
or
test
xchg
cld
inc
jae
out
imul
push
in
cmps
test
lods
mov
(bad)
cwde
xor
mov
sbb
mov
movs
push
or
dec
cli
leave
imul
pushf
or
xchg
xor
mov
into
ret
push
cli
sub
(bad)
aad
mov
mov
xchg
mov
xchg
daa
xor
push
xchg
and
cmps
sbb
ret
(bad)
mov
ins
ins
push
pop
or
das
fcomip
fadd
sbb
cmc
mov
ret
popf
loope
add
movs
pop
imul
icebp
popf
shr
addr16
fs
pop
jae
shl
xchg
jp
cmp
mov
sub
mov
movs
lahf
jno
in
mov
adc
xor
mov
cld
jmp
cwde
xchg
into
pop
out
dec
shl
hlt
mov
sti
sbb
or
jl
jbe
(bad)
std
inc
add
lods
movs
mov
dec
cdq
xor
aaa
pop
add
xor
dec
outs
test
push
xor
cmp
push
sbb
sub
jge
cmp
mov
sub
loopne
dec
call
inc
sub
add
js
shl
bnd
imul
mov
fdiv
std
push
lods
nop
mov
je
ds
push
and
outs
mov
xchg
sub
xchg
sbb
inc
cld
mov
aad
jae
cld
jbe
mov
push
add
pop
dec
mov
lods
data16
mov
int
push
add
or
and
mov
pop
call
sbb
jmp
push
(bad)
mov
mov
mov
inc
mov
pop
adc
ins
jle
adc
or
rcr
jp
cdq
adc
inc
shl
std
sti
lods
sti
or
(bad)
adc
bound
push
(bad)
fldenv
or
add
mov
push
ret
cdq
cmp
sbb
shr
les
bound
jno
aaa
inc
xchg
fcomp
xor
adc
ins
cmp
bound
mov
sub
leave
xor
dec
mov
sub
std
pop
ret
aad
imul
cmp
lods
pusha
jae
jnp
movs
cmp
add
lds
hlt
gs
je
call
jo
pop
and
int3
mov
retf
push
popf
ss
iret
pop
enter
mov
inc
add
mov
mov
push
loop
dec
test
je
out
inc
sar
jne
stc
cmps
and
jbe
cmp
mov
mov
jmp
lods
out
fistp
xchg
aad
add
xchg
or
ins
retf
mov
(bad)
lds
jmp
push
pop
sub
mov
or
dec
mov
movzx
outs
pushf
cmp
pop
mov
xlat
iret
lds
shl
pop
lds
(bad)
test
shl
xchg
clc
dec
data16
mov
movs
pop
pop
mov
pop
add
pushf
ss
adc
mov
jl
mov
out
mov
mov
mov
shl
mov
bound
adc
add
dec
sbb
mov
int3
sti
repz
pop
(bad)
or
pop
jmp
repz
mov
leave
or
fidivr
cmp
adc
sbb
xor
out
movs
(bad)
dec
xor
xor
mov
dec
shl
push
jmp
loopne
cmp
cmp
add
fld
idiv
pop
and
retf
movs
(bad)
jbe
inc
out
ss
fcmovnu
adc
jae
jbe
xor
cwde
mov
ins
ret
fcomi
sub
pop
cdq
mov
mov
sub
aam
enter
xor
mov
mov
dec
mov
push
cmps
(bad)
dec
and
inc
pop
add
clc
lea
xchg
(bad)
imul
fnstenv
das
add
push
(bad)
ret
and
or
inc
movs
nop
movs
lea
repnz
xchg
xchg
cmp
and
sub
not
test
test
cmp
push
in
push
xchg
xchg
jns
(bad)
int3
push
xchg
xor
jl
xchg
xlat
mov
jne
dec
scas
sub
arpl
movs
push
popf
dec
adc
push
mov
into
dec
xor
lods
jno
adc
sub
mov
lds
xchg
sti
xchg
imul
into
dec
xor
(bad)
out
in
call
cld
hlt
cwde
sbb
jmp
lahf
xchg
mov
add
cmps
xchg
cmp
mov
lds
mov
out
xor
pop
push
mov
dec
shr
cmp
cld
xor
sbb
out
mov
es
mov
mov
jno
pop
int
outs
(bad)
push
movs
pop
lahf
scas
clc
jo
in
mov
cmovb
jp
adc
mov
push
xchg
jg
dec
jne
pop
jge
cmp
jnp
push
push
in
lahf
jp
in
aam
jp
or
es
fwait
loopne
push
shl
and
cmp
pop
and
dec
mov
mov
xchg
xchg
outs
inc
cld
pop
pop
add
xchg
fcmovne
mov
stos
icebp
and
jb
aam
jno
or
xor
outs
ror
push
jl
xchg
push
ds
ins
push
repz
mov
xor
mov
add
sbb
jns
push
add
cmps
cdq
jnp
inc
sbb
iret
lock
push
pop
dec
arpl
cmp
popa
fbld
mov
sub
adc
inc
pop
imul
jbe
bound
cmp
sub
push
cld
mov
dec
lods
xor
stc
jecxz
fwait
pop
push
add
nop
push
(bad)
loop
mov
add
data16
push
in
push
sbb
js
repz
cmp
sub
jnp
xor
and
inc
movs
mov
(bad)
inc
fdivr
xchg
les
popa
hlt
std
and
mov
out
iret
and
pop
fcomp
mov
in
cmp
movs
jge
repnz
mul
jp
ret
scas
pop
shr
add
inc
ins
test
sahf
ss
sbb
pop
leave
loop
jecxz
add
movs
mov
sbb
push
pusha
add
ins
ss
push
inc
aad
inc
xor
retf
cmps
rcl
lahf
jl
sub
and
push
call
fcomp
inc
ss
add
outs
inc
dec
repz
mov
jg
mov
push
popf
mov
pop
(bad)
into
jle
jo
push
sbb
dec
jmp
jb
mov
jae
in
loope
and
ret
test
sbb
pop
jle
mov
cmc
xchg
push
cmp
sbb
vmwrite
gs
add
mov
or
mov
pushf
pop
ja
or
cmp
je
jg
aam
lds
stc
inc
and
out
cmc
scas
outs
aam
xchg
loop
jae
pop
add
xor
loope
jmp
jecxz
inc
(bad)
jne
pop
or
sbb
loope
imul
push
aaa
jmp
iret
(bad)
xor
lahf
sbb
pushf
mov
mov
push
push
xchg
and
jae
popa
rcl
shr
test
aam
mov
sub
imul
aas
xchg
cmps
push
or
inc
les
dec
loopne
cwde
mov
nop
adc
inc
je
or
inc
inc
fs
jns
shl
adc
mov
int3
(bad)
push
dec
mov
mov
pop
mov
dec
pop
push
(bad)
add
js
pop
mov
jne
rol
pop
cmp
xor
mov
lahf
ret
sbb
lea
mov
sti
sbb
movs
lods
mov
and
stos
mov
ss
sbb
js
jg
cs
cmp
inc
mov
shr
adc
stc
mov
mov
je
shl
xor
in
adc
bound
std
bound
push
and
push
je
lahf
push
push
add
or
dec
xchg
mov
stos
xchg
pushf
jmp
xor
mov
fnsave
repz
jno
xchg
mov
jg
xchg
pop
inc
pop
fst
gs
iret
xor
imul
jge
mov
inc
jecxz
xor
sbb
xchg
inc
call
(bad)
jns
addr16
stc
fisttp
fdivr
je
jae
aad
mul
rcl
test
rep
pop
aas
mov
add
mov
dec
ret
movs
dec
aad
push
in
das
mov
and
ins
inc
leave
sub
jg
xchg
test
mov
aas
cdq
xor
mov
lahf
loope
xor
cwde
xor
inc
inc
repnz
xor
shld
jmp
test
mov
mov
aam
cmps
adc
das
(bad)
push
ja
out
ss
or
int3
mov
mov
adc
add
in
imul
add
jecxz
cwde
dec
sbb
sbb
xor
cmp
call
add
push
cmps
(bad)
or
pop
push
inc
mov
push
fwait
adc
fcomp
shl
scas
mov
fild
adc
int3
and
dec
mov
and
pop
scas
les
repnz
mov
xchg
push
outs
mul
hlt
out
or
inc
pop
xor
mov
data16
outs
pop
je
jno
jbe
mov
mov
das
aam
fcomi
popa
lock
mov
shl
cmc
cmp
mov
jnp
inc
loope
fcom
stos
inc
fwait
sbb
(bad)
fs
adc
and
xchg
sbb
out
ret
pop
or
lods
jb
movs
ret
cmc
aam
add
and
cli
or
out
and
call
jae
xchg
xor
(bad)
dec
movs
in
inc
repz
jl
add
shr
add
pop
sbb
push
adc
pop
pop
mov
out
retf
scas
jo
outs
out
push
add
mov
jge
xchg
aas
pop
sub
jmp
xchg
mov
cmps
pop
div
sbb
mov
rol
cmps
push
mov
sbb
ret
mov
nop
adc
push
jb
push
aas
lahf
push
lds
arpl
jns
sub
shl
jne
retf
pop
xor
stos
add
ja
aam
inc
mov
pop
cmp
xor
popa
jb
dec
sbb
adc
ror
cmp
mov
ret
cmp
xlat
pop
clc
push
adc
dec
mov
sbb
je
jmp
mov
test
mov
cmps
repz
outs
ret
mov
push
ret
xor
jle
loop
(bad)
mov
ret
and
fisttp
push
sub
pop
mov
cmp
dec
pusha
mov
dec
call
mov
mov
push
mov
out
pop
mul
fild
jge
cmp
scas
loopne
push
add
jecxz
pusha
and
mov
mov
pop
retf
fdiv
jge
sti
je
cmc
mov
push
cmc
push
out
inc
popf
test
fldcw
mov
mov
and
add
and
sub
ins
pop
ror
mov
movs
pop
mov
jl
aad
lea
pop
(bad)
mov
cmp
jno
lods
jnp
mov
ja
add
ret
mov
sbb
leave
xchg
fldcw
lods
push
cmp
mov
pop
shl
add
and
xchg
shr
dec
mov
push
stc
ficomp
mov
aaa
sbb
xor
cmp
stos
sbb
mov
sbb
cs
in
jp
jnp
sti
cmp
stc
mov
aaa
es
xor
lahf
cdq
jno
ret
mov
cmp
push
fimul
stos
mov
cmp
adc
xchg
xor
xor
pop
and
mov
push
fisttp
jnp
mov
out
push
push
dec
push
xor
mov
pop
sub
add
in
xchg
outs
ret
add
loopne
xchg
pop
and
stc
sub
push
(bad)
pushf
xor
xchg
push
push
jae
sti
mov
enter
cld
out
popa
xchg
pop
push
push
xor
mov
lahf
das
repz
dec
into
xor
pop
cli
je
mov
mov
cmp
adc
loopne
pushf
mov
cmp
cmps
shr
jns
out
xchg
push
repz
out
and
push
sbb
sbb
push
sbb
sar
aas
push
xor
sbb
ins
icebp
gs
mov
cmp
jne
sbb
mov
xor
adc
je
jge
scas
sbb
out
mov
or
add
(bad)
sbb
lds
std
(bad)
shl
ins
arpl
fstp
cmp
mov
popa
adc
scas
js
add
imul
xchg
inc
pushf
ins
pop
mov
xchg
in
mov
add
mov
mov
mov
adc
loop
xchg
adc
adc
push
pusha
fisub
into
jp
stos
(bad)
mov
push
mov
and
dec
dec
nop
xor
push
out
xchg
push
out
add
sbb
clc
shr
dec
loop
sbb
push
and
mov
jmp
xor
imul
enter
pop
pop
xchg
mov
push
out
mov
daa
ret
xchg
loop
ins
mov
and
add
in
lea
inc
in
push
cmp
rol
pop
and
into
push
cmp
xor
jne
clc
pop
push
jge
int3
fcmovnb
out
mov
mov
fnstcw
pop
rol
nop
daa
push
and
sti
cdq
mov
test
es
and
adc
push
cmp
sub
lahf
imul
cli
xchg
sahf
in
pusha
inc
sahf
rol
stos
xchg
or
cmps
sub
(bad)
fs
or
movs
dec
in
pop
cwde
leave
cmp
retf
sti
out
test
hlt
mov
mov
das
dec
jmp
std
mov
inc
es
push
and
test
cmp
fs
xor
aad
mov
out
call
pop
jnp
cdq
push
or
iret
sbb
mov
mov
jmp
xchg
add
sub
sbb
pop
loope
loopne
xchg
test
xor
xor
sbb
cmp
(bad)
popf
xor
retf
sti
sbb
icebp
add
mov
outs
ja
fmul
pop
call
push
push
push
add
adc
push
int
scas
mov
xor
pushf
adc
dec
retf
iret
lods
pop
js
test
push
cli
and
retf
mov
xchg
into
arpl
adc
mov
xor
loope
and
sbb
jne
fldpi
ror
mov
sbb
mov
stos
(bad)
mov
push
movs
fwait
sub
int
add
push
jp
pop
mov
add
cmp
mov
fdiv
or
push
jns
movs
leave
adc
jb
mov
mov
leave
dec
cmps
xor
(bad)
sub
mov
mov
jl
dec
bound
pop
xchg
aad
int
mov
push
leave
aam
mov
rol
jbe
pop
inc
push
retf
iret
cld
xchg
call
xor
mov
iret
out
mov
adc
dec
cmps
outs
cmp
gs
cdq
jmp
pop
xchg
sti
or
stos
cmps
sbb
lahf
pop
les
mov
jp
in
or
or
mov
scas
or
fcom
std
enter
dec
je
xor
xchg
xchg
int3
iret
jbe
jmp
mov
jp
je
dec
pop
ror
setl
test
pop
xchg
inc
mov
xlat
mov
mov
into
jmp
enter
xor
jle
pop
push
shr
out
movs
push
fsub
fincstp
or
add
xchg
sub
icebp
call
jg
mov
and
pop
pushf
jno
stos
jbe
jmp
rcr
data16
imul
js
jle
(bad)
fsub
into
adc
inc
push
(bad)
ds
repz
nop
pop
jo
adc
stc
arpl
(bad)
je
sub
mov
(bad)
in
lock
jbe
test
inc
mov
je
loope
push
dec
adc
push
adc
js
xlat
lock
mov
retf
loopne
mov
or
cmp
mov
call
ret
xchg
lea
dec
ret
in
mov
pop
sbb
sub
cld
dec
and
out
push
inc
add
pop
lods
fimul
dec
xchg
jecxz
xor
popf
pushf
in
scas
or
stos
clc
and
jp
cmc
mov
and
jecxz
jle
data16
sbb
int3
shl
stos
stos
mov
test
and
and
mov
shl
fimul
stc
arpl
rcl
in
xchg
cmp
cmc
dec
retf
or
jmp
dec
(bad)
fimul
sub
jge
test
pop
outs
mov
sti
(bad)
mov
mov
lds
nop
mov
adc
loopne
bnd
cmp
js
retf
add
adc
fnstcw
inc
inc
or
adc
out
adc
push
imul
xchg
arpl
cmp
xrelease
ret
jecxz
scas
sbb
inc
jge
push
mov
bound
ret
inc
scas
adc
ja
mov
hlt
and
test
cwde
ror
outs
mov
xchg
and
dec
scas
jmp
stos
jmp
test
data16
xor
shl
cmps
mov
mov
es
arpl
or
test
out
pop
jnp
mov
pop
inc
je
in
sahf
repz
mov
sbb
and
dec
fcmovne
add
pop
cdq
pop
adc
leave
je
movs
jno
aam
imul
lds
inc
push
xor
push
out
add
fdivr
cmp
hlt
or
mov
imul
bound
mov
add
in
aaa
push
jl
clc
(bad)
sub
sub
aad
into
test
cld
out
addr16
into
sbb
in
test
stos
add
inc
jno
sbb
std
not
into
movs
iret
cmp
call
xor
fisub
imul
jbe
stos
mov
and
adc
cmp
in
dec
xor
in
dec
mov
mov
jae
add
and
sbb
mov
pop
xor
jns
movs
cs
or
retf
rcr
mov
shl
mov
inc
fadd
mov
inc
aad
into
mov
push
cmp
sbb
sub
jnp
dec
and
lods
dec
pusha
fucomip
outs
dec
dec
dec
aam
or
mov
mov
movs
test
jo
mov
jne
sahf
out
mov
or
je
retf
(bad)
in
sbb
xchg
aam
test
rcr
leave
cmp
add
stc
cmp
movs
mov
mov
daa
mov
and
sbb
push
xor
jne
inc
lods
fsubr
gs
xor
mov
push
lahf
cmps
dec
jg
hlt
(bad)
call
jl
loopne
clc
mov
adc
or
push
psllq
or
jl
mov
push
adc
cwde
xlat
fcomp
cli
sub
push
inc
mov
imul
cwde
cmp
inc
test
adc
dec
fdiv
fneni(8087
sar
or
push
icebp
mov
pop
or
in
movs
lods
mov
xchg
fidiv
inc
int3
fimul
aam
adc
push
aaa
xchg
inc
ds
int
aam
in
lock
lahf
mov
test
jbe
push
(bad)
lods
sti
xchg
pop
movs
sub
dec
adc
mov
icebp
lds
repz
dec
sbb
ds
movs
cmps
adc
icebp
mov
fiadd
push
es
cmps
cmps
mov
enter
jge
add
imul
mov
or
add
jge
dec
mov
push
add
cwde
dec
fs
bound
sahf
mov
cmps
pop
dec
pop
imul
ficomp
shl
xor
mov
nop
mov
dec
shl
dec
sbb
sahf
jmp
add
cmp
aam
(bad)
mov
(bad)
cmp
repz
nop
ficomp
ja
mov
addr16
jae
sti
sbb
xor
jae
in
lahf
das
jle
shr
shl
sub
adc
jp
mov
enter
je
sbb
addr16
pop
xchg
dec
push
jnp
dec
and
imul
ret
sub
sbb
xchg
rcr
xor
and
pop
jns
sub
or
and
cli
stc
jo
jecxz
xor
mov
cmc
outs
rcl
lods
dec
pop
sbb
cmps
mov
adc
mov
jns
add
push
add
push
pushf
in
call
les
cwde
cmps
les
test
push
xor
jle
mov
mov
sbb
xor
(bad)
pop
scas
adc
out
cld
dec
dec
and
test
mov
outs
pop
sar
(bad)
mov
cmps
(bad)
cmc
aam
mov
push
fsubr
imul
das
dec
jns
xor
cmc
nop
mov
fild
add
test
jno
ror
push
add
(bad)
leave
sub
inc
jmp
cmp
call
mov
mov
pop
dec
imul
push
jns
mov
aaa
ss
call
jb
jno
add
stos
loope
xor
and
fsub
scas
arpl
shl
dec
fsub
push
push
jns
push
aas
fisub
pop
dec
call
mov
int
xchg
aad
imul
adc
push
ins
out
shl
inc
or
ret
lea
(bad)
inc
mov
sub
inc
push
mov
scas
sub
push
jnp
sub
mov
lea
cmps
stos
rol
push
cli
dec
and
inc
pop
add
and
adc
shl
xchg
stos
sbb
jge
shr
sete
in
out
sub
sti
push
ficom
nop
movs
jbe
pop
ja
jp
pop
xchg
xchg
push
jmp
lods
lea
or
push
addr16
cmps
jge
push
mov
pop
xchg
mov
mov
cwde
add
and
or
push
ret
sbb
movs
repz
shl
iret
and
xor
cli
mov
scas
ficomp
in
stos
call
cmp
pop
and
icebp
fcom
pushf
in
fsub
lods
prefetchw
or
or
jb
lds
push
cmc
cs
gs
push
retf
sbb
fcomp
cmp
imul
inc
mov
add
cmp
cmp
jnp
test
jno
and
sub
ins
mov
sbb
rol
sub
pop
cmp
mov
es
jp
(bad)
in
push
pop
nop
bound
mov
sbb
cli
sti
in
pop
mov
fdivr
jne
pop
pop
mov
call
cmp
cmc
pop
adc
or
popf
push
or
push
repz
dec
mov
jge
sbb
mov
cmps
and
mov
imul
dec
rol
cmc
lds
lahf
sbb
je
ss
pop
or
dec
adc
push
movs
sbb
pop
and
rcr
mov
jp
xor
(bad)
inc
outs
push
pop
movs
das
inc
ret
push
sar
adc
scas
sbb
repnz
pop
and
movs
lods
xchg
dec
jp
push
pop
pushf
mov
mov
fs
pop
push
inc
inc
(bad)
dec
or
es
xlat
cmp
mov
loop
stc
jno
(bad)
sahf
pop
test
or
adc
or
outs
pop
mov
add
push
loop
ror
pop
leave
fst
fadd
data16
push
jno
xchg
and
or
stc
jge
push
xchg
dec
sub
out
or
adc
jnp
jno
enter
inc
xchg
adc
add
pop
jmp
fwait
and
xor
xor
or
outs
jne
movs
push
aaa
push
shr
or
fcmove
sbb
mov
retf
push
call
jle
gs
pop
inc
pop
adc
mov
out
xor
cmc
push
pop
cli
pop
add
pusha
fwait
je
ds
pusha
dec
fsubp
add
ret
inc
xrelease
icebp
xchg
xchg
mov
sbb
jnp
hlt
inc
(bad)
in
mov
mov
imul
movs
ret
sbb
lds
jo
sub
inc
jno
push
fs
mov
stos
fincstp
out
inc
call
jbe
jne
clc
outs
and
imul
mov
retf
jnp
test
push
xor
scas
inc
clc
(bad)
hlt
popf
xor
mov
shl
std
jns
sbb
pop
sbb
in
rcl
iret
push
in
addr16
mov
jp
or
stc
mov
fiadd
cmp
mov
ss
sbb
mov
imul
imul
mov
pop
xor
mov
lds
cmc
mov
stc
mov
dec
dec
jge
push
cmp
add
adc
nop
xchg
jp
lea
outs
call
and
fsubr
push
and
adc
add
cs
cmps
cdq
cdq
je
add
mov
pop
xor
lods
sbb
pop
jmp
adc
ficomp
inc
(bad)
stc
push
stos
mov
pop
adc
adc
mov
mov
or
jl
cmp
mov
pop
xchg
in
sub
sbb
cmps
pusha
xor
pop
push
add
sti
inc
popa
and
add
mov
out
jnp
mov
out
mov
jl
sbb
div
ja
push
pop
pop
js
inc
push
imul
jnp
mov
lds
mov
push
cmps
in
jbe
inc
int
call
mov
gs
sub
sub
cmp
(bad)
mov
mov
mov
scas
add
push
aas
nop
sub
out
(bad)
scas
pushf
sub
pop
and
and
fadd
xchg
and
fild
cmp
repnz
or
xor
pushw
fs
sub
add
sar
in
sbb
fsubp
mov
icebp
or
lods
pushf
add
call
sub
rcr
sbb
push
aas
and
push
push
rdpmc
push
sub
lods
mov
inc
jmp
push
sbb
mov
mov
adc
dec
cli
into
or
or
sub
sub
xor
ins
xchg
add
jo
mov
add
dec
push
jl
dec
daa
and
fisub
cmp
cmp
lods
mov
clc
cmp
xchg
mov
dec
shl
ror
mov
sbb
xor
jecxz
mov
imul
sbb
(bad)
pop
test
loopne
add
xchg
mov
repnz
push
inc
into
xchg
loopne
cld
dec
lea
pop
jae
cwde
into
jne
mov
std
fsubp
sub
popa
cs
loop
data16
mov
fsubr
or
loope
adc
data16
sbb
mov
sar
xchg
pop
loopne
sbb
mov
enter
jmp
gs
jbe
jg
and
in
pushf
mov
jecxz
scas
xchg
hlt
add
push
fwait
push
fcomp
or
add
mov
mov
push
mov
mov
cwde
pop
jecxz
cld
adc
or
es
test
push
jg
or
jecxz
mov
xchg
push
mov
loopne
ret
hlt
stos
push
xor
sar
test
and
int3
cli
sbb
stc
dec
ja
and
in
fidivr
fwait
pop
fcomp
adc
jo
push
mov
and
aas
jne
in
push
xor
dec
stc
or
push
mov
fucomi
lahf
das
retf
xchg
mov
test
or
mov
cli
lahf
xor
push
jge
imul
dec
pop
pop
jnp
cs
mov
enter
pushf
sti
mov
jb
mov
mov
mov
movs
retf
popa
jg
jmp
dec
mov
jo
push
ins
lods
movs
pusha
push
dec
cs
stos
into
pop
and
cmc
push
fld
bound
js
mov
jge
or
das
mov
mov
mov
cli
inc
fimul
inc
jg
mov
loopne
int
in
lahf
loope
js
test
scas
jno
pop
mov
(bad)
and
jno
mov
cmp
or
data16
les
popa
out
push
mov
push
jne
cmp
push
sub
or
lea
test
adc
xchg
loop
inc
int
or
idiv
add
adc
rcl
xchg
mov
pusha
out
xchg
call
outs
enter
call
push
out
lahf
lahf
mov
adc
scas
push
or
ficom
fs
jno
mov
je
jno
cmp
daa
jecxz
mov
(bad)
test
popa
in
pop
push
xchg
mov
loop
push
jp
cmp
(bad)
push
pop
loopne
lahf
sub
popf
mov
and
test
stc
shl
fadd
mov
(bad)
jmp
mov
mov
into
push
xchg
dec
sub
fisttp
inc
int3
call
outs
lods
add
rol
cli
cmp
sub
outs
sub
pop
jl
xchg
dec
aas
out
inc
loope
popf
add
pop
push
mov
ds
je
repnz
inc
pop
sbb
ret
jmp
dec
neg
idiv
call
dec
(bad)
jns
cmp
icebp
dec
lods
pop
arpl
dec
inc
ret
mov
and
jo
sub
movs
xor
pusha
dec
lea
push
xchg
push
lds
popa
and
arpl
sbb
pop
mov
push
mov
mov
jl
retf
add
add
mov
aad
dec
add
(bad)
xor
dec
mov
sti
and
adc
jno
fld
xor
fldcw
hlt
data16
aas
hlt
dec
(bad)
enter
hlt
retf
inc
xchg
call
ins
gs
or
pop
cmp
xchg
push
sbb
and
cli
iret
imul
pushf
fdivr
push
pop
shl
ret
and
aam
data16
cld
nop
(bad)
jns
mul
ret
pop
push
add
and
push
or
dec
int3
mov
pop
cwde
xor
scas
ja
loop
ret
imul
jmp
dec
outs
or
lock
pop
xor
add
out
sbb
mov
imul
pop
shl
push
and
sbb
mov
push
jae
mov
dec
jge
arpl
hlt
adc
inc
and
inc
push
mov
cmp
aaa
cs
cmp
jecxz
movs
fild
sub
push
push
rol
movs
mov
and
test
fcom
popa
scas
jne
rcl
sahf
or
jmp
call
jecxz
dec
movs
xor
in
push
lods
inc
mov
cdq
dec
xchg
cmp
mov
push
mov
rcr
in
not
neg
mov
sub
mov
jp
dec
outs
data16
scas
pop
jno
leave
cmp
push
cdq
out
adc
retf
or
push
outs
idiv
mov
enter
inc
inc
cmp
jo
test
xor
imul
int
xchg
nop
sub
jp
mov
adc
lods
(bad)
pandn
jno
pop
mov
mov
cld
pop
sbb
dec
popa
pop
aad
xor
jb
test
lock
add
call
xor
mov
iret
fiadd
sub
bt
xor
mov
push
shr
cmp
inc
arpl
das
or
pushf
dec
loopne
pushf
pop
xchg
dec
inc
jmp
dec
ins
or
cmp
je
fs
xor
add
mov
or
loopne
xor
pop
xlat
mov
jb
pop
gs
sbb
not
rol
fcom
add
pop
retf
call
aaa
and
int
les
mov
in
call
ja
mov
pop
add
xchg
sar
and
outs
jno
pop
jbe
sub
adc
lds
cmps
cmc
mov
mov
jmp
cmc
dec
mov
push
pop
sub
cmp
aad
mov
mov
out
mov
and
and
sub
pushf
mov
and
cmp
in
(bad)
push
out
jl
pop
ins
(bad)
xchg
adc
movs
cmp
sub
xchg
mov
mov
loopne
rol
mov
enter
adc
enter
mul
js
ds
mov
xchg
push
push
push
loope
pop
repnz
jns
mov
or
and
push
mov
sub
jae
in
pop
aas
rcl
cmps
movs
in
mov
pop
xchg
jp
xchg
xchg
nop
and
cmp
movs
dec
int3
and
mov
sahf
cmp
mov
sahf
popa
mov
int3
arpl
pop
lods
or
push
sub
neg
out
and
cmp
idiv
in
(bad)
ja
fidiv
cmp
add
sbb
fmul
out
mov
fild
shr
int3
mov
cmps
clc
cmp
cmp
sub
mov
fmul
loop
rol
ins
iret
scas
stc
dec
jl
cmp
fistp
mov
pushf
scas
out
lea
and
cmc
mov
ds
es
jmp
sub
cli
shl
mov
fdivr
mov
loope
pusha
xor
ins
jne
es
inc
adc
xchg
xchg
fdiv
data16
fbstp
pop
outs
shl
(bad)
call
shl
jnp
int3
imul
pusha
mov
(bad)
pop
fbld
or
xchg
lods
ds
sahf
nop
push
clc
loopne
adc
mov
jae
inc
scas
sub
add
mov
inc
sbb
(bad)
mov
neg
stc
push
aam
test
dec
mov
xchg
pop
xlat
mov
or
inc
mov
sub
mov
cmc
cmps
aas
mov
cdq
sti
mov
movs
pop
std
gs
jne
push
xchg
jl
sbb
mov
(bad)
loop
sub
les
xchg
adc
ins
and
mov
iret
pop
fsub
in
add
jno
sar
(bad)
and
data16
cmp
mov
repz
xor
adc
push
stos
cwde
or
push
shr
push
sbb
xchg
test
test
mov
xor
popf
arpl
bnd
sbb
fiadd
pop
cmp
inc
sbb
pop
cmp
pushf
and
jno
dec
enter
popf
addr16
jl
nop
jns
sar
loop
xor
retf
mov
int3
js
mov
ss
mov
cmps
cmp
inc
mov
loope
ffree
add
xchg
sub
leave
loop
xor
add
aam
add
gs
aad
inc
adc
jecxz
inc
xor
add
push
fldenv
push
xcrypt-ctr
cmps
sbb
pop
push
dec
adc
mov
jbe
xor
jbe
or
jl
xor
cmps
sbb
es
sbb
lock
or
jnp
fdivr
push
outs
mov
stos
enter
pop
cmp
cmp
ins
cmps
test
stos
jp
pop
loopne
jl
sub
call
and
adc
push
fs
cmp
sub
mov
jnp
pop
pop
mov
cs
out
outs
fimul
cmp
push
push
inc
jp
inc
push
cwde
add
sar
mov
shr
sbb
pop
arpl
xchg
push
or
pop
jnp
or
mul
jne
test
jecxz
jp
test
cmc
and
(bad)
adc
ja
pop
(bad)
jge
and
dec
pop
daa
(bad)
fstp
(bad)
jno
into
fisubr
test
mov
cdq
dec
test
mov
cmp
ins
add
stc
scas
push
add
mov
xor
mov
inc
xlat
rcl
dec
pusha
ror
push
inc
adc
test
add
xor
dec
(bad)
or
push
mov
por
in
outs
xor
into
xor
dec
les
rcr
call
hlt
fstp
sbb
adc
adc
jo
int3
ja
jle
xchg
call
jns
aas
add
dec
icebp
dec
popf
pop
hlt
mov
adc
ror
mov
lahf
(bad)
dec
cmp
in
sub
in
jnp
clc
xor
imul
add
dec
fdivr
jb
pusha
dec
out
jns
mov
movs
cld
repnz
inc
add
cmp
mov
test
(bad)
mov
and
adc
inc
adc
ja
in
fbld
imul
call
pop
div
outs
popf
sub
mov
(bad)
mov
mov
minps
xchg
sbb
xor
stos
cmp
inc
loope
stc
stos
jo
push
inc
test
sbb
inc
dec
loopne
sub
sub
movs
je
push
sbb
mov
xor
test
dec
xor
mov
jne
ins
dec
es
mov
jle
adc
mov
repz
mov
cld
xchg
clc
sbb
fsub
adc
ja
and
repnz
push
mov
mov
popa
fmul
cmp
mov
sbb
cmp
push
lds
retf
ret
xchg
shl
pop
retf
ficom
test
ins
in
inc
(bad)
xchg
enter
jg
leave
xor
dec
(bad)
loope
sub
push
adc
aam
ror
xchg
mov
sbb
ret
inc
loop
fwait
fs
fbld
pop
cli
mov
jne
and
xchg
xor
fs
dec
push
movs
dec
(bad)
fstp
dec
mov
(bad)
xor
mov
in
sub
(bad)
push
div
loop
inc
inc
addr16
(bad)
jmp
sar
out
push
rcl
inc
ja
fstp
cdq
dec
adc
fstp
push
xchg
dec
xchg
pop
dec
sub
push
out
adc
fwait
(bad)
into
and
mov
xlat
jmp
jmp
push
push
jge
mov
movs
xchg
in
pop
pushf
mov
ds
sbb
jg
inc
add
mov
nop
mov
stos
lahf
ret
mov
sub
sub
xchg
test
(bad)
xor
outs
pop
out
xor
jl
les
sub
daa
adc
adc
ja
add
sbb
adc
imul
cwde
in
jnp
ret
cmp
mov
pusha
mov
pop
daa
sub
scas
sub
and
or
mov
sbb
adc
sahf
in
repnz
mov
stos
jg
jge
mov
jae
test
imul
add
sub
(bad)
daa
loop
mov
xchg
dec
test
pop
mov
jge
xchg
jl
and
fidiv
fisttp
sbb
push
iret
hlt
mov
loopne
test
shl
fidiv
rcl
loopne
jl
xor
inc
test
and
not
and
mov
pop
jno
shl
je
jmp
jle
pop
stos
and
or
jns
lahf
cmp
dec
mov
imul
xor
jp
retf
movs
inc
and
sbb
pop
xor
in
das
xchg
mov
mov
iret
sar
inc
xor
pop
pop
cmc
xchg
or
mov
pushf
xchg
mov
xchg
pushf
push
mov
mov
sub
sub
and
fwait
mov
loop
out
mov
mov
repz
(bad)
and
pop
xor
mov
enter
(bad)
stc
sub
imul
cwde
xor
dec
ror
jmp
xor
dec
ret
push
cmp
mov
bound
popa
cli
adc
or
inc
fnsave
icebp
push
ins
aad
lods
sub
fldcw
lock
and
inc
les
icebp
xor
cmp
test
push
mov
dec
lea
and
sbb
test
sbb
clc
dec
adc
ficom
in
ins
stos
add
in
cmps
adc
mov
and
and
ret
push
pop
jmp
out
arpl
and
inc
ror
les
dec
jo
aam
sub
js
mov
shr
mov
pop
lods
xchg
fidiv
inc
nop
push
push
hlt
nop
pop
movs
push
js
retf
xchg
mov
jmp
adc
out
dec
fild
ror
cld
scas
add
pusha
mov
jo
jp
push
inc
adc
mov
repnz
adc
inc
dec
inc
std
push
pop
pop
retf
aas
movs
cmp
pop
fsubr
test
pop
and
movs
gs
jo
sahf
sbb
repz
mov
xchg
cli
dec
pop
xchg
dec
sti
fild
push
lds
aas
mov
cld
mov
loop
sub
test
mov
mov
fimul
mov
(bad)
pop
aaa
inc
push
mov
fidiv
test
add
arpl
jbe
ins
jmp
pop
xchg
imul
shl
inc
out
sbb
and
nop
sub
jle
cmp
das
push
test
cs
mov
adc
xor
mov
cwde
mov
pop
inc
les
pop
test
mov
cmp
rcl
dec
pop
xchg
add
lock
pop
(bad)
test
stc
jno
in
and
sub
adc
cs
lahf
fdivr
lods
and
xchg
mov
mov
push
pop
jmp
rcr
mov
pop
aad
mov
push
or
in
dec
outs
xchg
imul
mov
inc
clc
ins
xchg
or
enter
mov
ins
jmp
fsub
out
dec
cmp
xor
dec
popf
sub
mov
xor
icebp
ja
dec
shr
dec
cmps
into
jmp
imul
ins
outs
pop
push
rol
xchg
sbb
int3
cmps
inc
push
(bad)
call
and
ds
scas
cdq
in
push
fs
and
sbb
push
jg
(bad)
ret
lea
mov
arpl
mov
scas
push
xor
mov
sbb
mov
aad
das
fdiv
add
push
inc
and
jmp
jmp
mov
stos
mov
or
pushf
adc
(bad)
stos
push
pop
mov
pop
jg
cwde
inc
jge
sbb
or
cmp
inc
rcr
aas
lock
mov
sub
pop
add
aas
imul
sub
dec
inc
shl
imul
fs
les
popa
mov
xchg
sub
sahf
hlt
lock
jnp
in
pop
mov
jp
mov
into
punpckldq
lods
movs
iret
or
ss
dec
push
sti
stc
aaa
out
fwait
lahf
sub
inc
mov
add
inc
scas
test
gs
test
rcr
adc
add
je
add
ins
or
push
test
out
pop
mov
(bad)
movntps
and
retf
fbstp
ret
pop
iret
dec
(bad)
icebp
leave
sub
dec
sbb
cmp
push
mov
out
pop
test
and
fwait
pop
inc
fdivr
test
cmp
nop
push
xlat
mov
jge
rcr
stc
test
mov
xlat
pop
xor
xor
xchg
lock
in
in
repnz
or
fisub
xor
xchg
(bad)
mov
sub
mov
push
push
jns
pushf
pop
fiadd
fabs
push
mov
adc
aaa
mov
cmps
inc
and
xchg
jno
jg
lock
xchg
test
xor
(bad)
fist
imul
movs
and
add
ss
and
mov
or
(bad)
call
scas
inc
rcl
jnp
jle
cmc
xchg
fwait
cmp
out
cdq
xchg
mov
outs
xor
test
dec
xchg
leave
and
int3
test
mov
out
je
adc
(bad)
ins
mov
lahf
adc
xchg
lahf
imul
jmp
mov
add
sbb
adc
sar
pop
and
add
pushw
das
inc
push
inc
rcr
rcr
ss
retf
neg
or
leave
in
(bad)
data16
shl
xor
inc
cmp
shl
push
(bad)
adc
stc
jmp
sub
(bad)
test
jnp
lds
xchg
shl
add
scas
jns
out
push
or
sub
fstp
mov
in
sbb
jle
in
shl
mov
xor
push
fcomp
sub
outs
sbb
cmp
xchg
inc
enter
es
push
test
adc
or
adc
mov
mov
cmp
pop
xchg
jmp
arpl
mov
mov
inc
(bad)
jne
aas
push
fcomp
in
cmp
push
popa
push
or
jge
or
sbb
mov
push
movs
or
lds
pop
inc
mov
shr
xchg
dec
in
pop
div
loope
inc
mov
cmp
xlat
data16
mov
and
mov
add
pop
or
popa
xchg
adc
mov
test
and
jl
rcl
clc
in
int3
jmp
es
xor
jae
push
inc
scas
mov
xchg
out
xor
jl
jmp
out
mov
xchg
xchg
pop
mov
jb
mov
jno
enter
outs
int
int3
repz
stos
xchg
dec
pusha
jecxz
lahf
loopne
pop
jmp
add
daa
pop
mov
test
mov
aas
mov
js
dec
sbb
aaa
push
jecxz
sbb
jae
mov
or
cmp
mov
mov
jmp
jge
xlat
dec
ins
fwait
shl
xor
repz
mov
into
adc
es
movs
cmps
and
push
push
add
xor
mov
in
sti
mov
jl
mov
fist
(bad)
loopne
mov
mov
aam
inc
nop
xor
call
adc
sub
and
mov
out
dec
jbe
inc
icebp
scas
mov
push
adc
dec
inc
pop
(bad)
fisttp
clc
add
sub
mov
pop
lods
sub
pop
or
ret
pushf
leave
loope
rol
or
dec
jecxz
and
mov
(bad)
loopne
addr16
leave
mov
repnz
stos
adc
add
scas
mov
pop
mov
mov
ins
xchg
out
and
std
je
clc
jne
add
inc
mov
push
ins
rol
push
xchg
ds
mov
push
pop
or
stos
movs
xchg
inc
cmp
jo
cwde
adc
test
sbb
retf
ja
xchg
mov
sbb
bound
add
test
clc
adc
add
push
jmp
retf
test
addr16
mov
sub
mov
outs
sub
sbb
xchg
loopne
push
shl
ds
test
(bad)
jl
jb
jmp
inc
mov
scas
xor
fdivrp
call
xchg
xchg
add
mov
pop
rol
test
(bad)
dec
cld
inc
jl
push
mov
outs
fs
inc
dec
sbb
call
test
dec
(bad)
ds
int3
cmps
and
int3
xchg
xor
jo
test
(bad)
xchg
stc
sub
inc
jmp
jnp
lods
push
mov
mov
mov
cdq
sti
loop
and
rcr
mov
sub
push
mov
cmp
mov
xor
mov
pop
add
or
and
std
out
and
(bad)
int
fstp
or
xchg
fnstcw
adc
fsin
mov
dec
fs
imul
sub
xor
das
dec
mov
sbb
mov
cmps
adc
or
in
mov
loop
or
pop
imul
out
stos
sbb
cli
jmp
mov
mov
push
retf
das
xor
jmp
mov
imul
pop
shr
pop
inc
outs
ret
adc
pop
lahf
out
mov
rcl
retf
inc
jno
sbb
jl
push
adc
aas
int3
repz
pop
sub
(bad)
push
inc
jnp
jns
icebp
or
sbb
mov
test
(bad)
sbb
jb
push
iret
and
and
mov
mov
shl
ret
fs
lahf
movs
mov
mov
inc
(bad)
das
or
mov
pop
lahf
scas
stos
outs
mov
aaa
adc
into
and
js
ins
outs
fild
scas
je
sub
cmp
push
add
pusha
(bad)
adc
fwait
out
jbe
call
inc
mov
imul
mov
cmp
stc
mov
push
adc
fiadd
out
loopne
aas
aas
or
lods
cld
pop
inc
fiadd
sbb
jmp
pop
jo
movs
test
mov
sbb
xor
xor
jnp
and
sub
xlat
dec
mov
jge
push
xchg
fwait
push
mov
inc
sbb
inc
aas
pop
clc
mov
jns
jae
(bad)
and
jbe
(bad)
xchg
sub
ins
loope
vmovdqa
aaa
pop
add
sub
sbb
stos
pop
xchg
or
scas
shl
test
fistp
leave
inc
scas
pop
and
mov
sub
mov
jno
pop
call
dec
mov
sub
adc
cmp
mov
js
int
mov
mov
rcr
aas
leave
mov
sar
lock
add
int
and
mov
push
movs
out
inc
jecxz
nop
mov
push
stos
cdq
int3
adc
jl
ror
das
int3
aam
sbb
(bad)
push
out
inc
retf
add
loopne
pop
cmp
ret
sub
addr16
in
lahf
enter
adc
repnz
push
out
and
mov
mov
imul
stc
mov
repz
pusha
mov
test
cld
lods
inc
pop
adc
aas
push
retf
and
cli
call
lods
cdq
jb
jp
fimul
mov
push
inc
xlat
imul
into
mov
sahf
adc
mov
nop
popf
arpl
inc
add
aaa
and
daa
int
sub
sahf
xor
cdq
pop
mov
data16
pop
jecxz
pushf
mov
lds
sub
xchg
push
mov
repnz
cmps
xchg
xchg
adc
ins
mov
xchg
sbb
jge
mov
jmp
push
pushf
adc
call
js
retf
(bad)
push
es
sub
sti
pop
push
arpl
(bad)
or
inc
xchg
mov
pop
in
shl
fcom
mov
xor
(bad)
movs
cmp
or
push
pop
out
rcr
sbb
mov
dec
rcr
fmul
repz
inc
daa
rcr
js
shl
cmps
in
xlat
leave
call
inc
clc
cmps
xor
cld
sub
cmps
pop
aam
push
stos
push
stos
(bad)
mov
paddw
mov
sbb
repnz
push
js
fs
sbb
loopne
mov
dec
movs
movs
mov
xor
out
jmp
(bad)
inc
das
(bad)
out
movs
(bad)
call
push
inc
outs
pop
inc
mov
lea
lahf
scas
cli
outs
shr
movs
ds
mov
mov
push
mov
movs
lds
push
inc
pop
xor
std
inc
pop
mov
push
retf
shl
mov
add
je
inc
outs
sahf
xlat
ss
int3
mov
sbb
test
fild
cmp
push
ss
in
push
movs
fnstcw
shl
popa
dec
outs
pop
and
fmul
push
and
out
js
inc
jmp
or
enter
out
mov
inc
into
movs
inc
sbb
cmp
mov
jns
pop
inc
push
ja
or
jmp
or
call
push
mov
lods
aam
iret
inc
dec
ja
inc
or
stos
dec
add
dec
push
pop
and
adc
rcl
xchg
ret
xor
xor
pop
mov
mov
mov
iret
or
std
cmp
cli
jns
pop
outs
add
sar
and
cdq
out
adc
fimul
ins
sub
les
inc
das
cmp
mov
push
adc
std
cmp
push
or
sbb
pop
jbe
and
or
imul
mov
test
sub
repz
cli
inc
xchg
(bad)
ja
cmp
ins
jl
xor
push
jmp
lea
cmps
jle
mov
pop
xchg
lods
retf
push
dec
imul
or
rcr
inc
xchg
gs
ss
iret
pop
dec
cmp
pushf
inc
dec
sbb
sub
inc
mov
mov
ret
jle
inc
mov
repz
mov
inc
(bad)
in
push
imul
hlt
and
mov
dec
xchg
dec
arpl
ss
mov
iret
repnz
mov
outs
jge
inc
pop
add
push
les
mov
jp
mov
ja
(bad)
repnz
sbb
xchg
gs
jmp
mov
sub
xor
ror
inc
popf
addr16
mov
cmp
dec
out
mul
fcomp
add
xlat
push
sahf
push
nop
clc
mov
inc
mov
test
dec
ja
mov
add
inc
retf
pop
pusha
push
fsubr
scas
mov
aad
stc
sar
addr16
dec
scas
scas
push
xchg
rcr
jmp
sahf
call
add
in
sbb
xor
mov
push
fldlg2
mov
inc
add
stc
cs
addr16
mov
rcl
xor
sub
mov
add
jmp
and
pop
adc
push
(bad)
dec
sub
hlt
sahf
das
pop
xor
mov
bnd
mov
(bad)
stos
test
mov
ret
cdq
inc
dec
idiv
mov
cmp
mov
sub
mov
add
dec
loop
das
je
cmp
stc
cld
add
push
mov
sbb
sbb
add
lahf
outs
pop
out
test
neg
fs
rcl
enter
sar
mov
cwde
ret
mov
cmp
loop
lods
divps
adc
add
rol
adc
imul
fs
mov
jnp
rol
mov
ds
mov
cmp
loop
pop
cmp
mov
fisttp
aad
ins
mov
leave
ror
mov
mov
clc
push
add
iret
mov
lea
jle
or
sub
popa
add
mov
mov
jp
xor
ss
ret
cmp
mov
mov
push
jmp
or
dec
ja
adc
xor
les
test
repnz
cmp
cmp
jbe
xor
jecxz
jmp
adc
mov
mov
dec
loopne
aas
xchg
test
(bad)
push
aas
xor
in
lods
inc
or
cmp
cmp
push
je
jg
cmp
iret
or
lds
movs
push
test
sbb
rol
fst
lds
and
dec
(bad)
aam
in
sbb
pop
xchg
fmul
push
aad
cmp
mov
call
loope
icebp
(bad)
adc
inc
pushf
cli
mov
pusha
push
arpl
xor
sub
cmc
adc
fmul
push
dec
xor
js
pop
sbb
dec
or
popf
mov
pop
int
mov
sbb
push
das
sub
loop
out
push
nop
addr16
dec
jmp
cmp
cmps
cmps
pop
inc
jbe
mov
or
pop
stc
add
js
adc
data16
mov
add
loopne
jl
xchg
dec
enter
jns
jge
or
sub
xchg
out
sub
push
push
jmp
mov
mov
mov
mov
lds
push
or
add
out
xor
(bad)
ficomp
mov
cmp
movs
popf
sahf
jg
stos
mov
gs
push
mov
(bad)
scas
cdq
fnstenv
cmp
inc
pop
ja
pop
ja
jae
retf
test
mov
stos
shl
inc
sub
rol
push
scas
bound
mov
std
pop
inc
adc
loopne
call
ror
jmp
pop
js
pusha
retf
mov
rcl
and
fisttp
mov
daa
xchg
fld
or
mov
xchg
mov
rol
xor
sub
push
(bad)
adc
jp
jb
enter
xchg
mov
in
lock
mov
icebp
xchg
mov
loope
pop
jmp
cmps
ss
pop
inc
shl
fstp
(bad)
mov
loope
jo
inc
push
jp
jo
adc
cmp
mov
in
and
mov
sub
add
(bad)
(bad)
push
call
sub
cs
pusha
popf
inc
sub
shr
out
add
fnstenv
out
or
(bad)
adc
outs
push
call
in
shl
jnp
shl
test
adc
repnz
ss
jp
mov
ret
cwde
sub
jle
pop
push
inc
xchg
jne
stos
pop
push
cmp
push
mov
fmul
je
mov
xor
stos
rcr
ins
sub
mov
sub
je
fild
mov
ffree
inc
push
xor
sbb
les
mov
int3
add
push
xchg
pop
pop
xor
add
int3
adc
dec
not
push
xlat
dec
mov
test
shl
arpl
sbb
inc
cmc
fistp
xlat
lahf
mov
nop
outs
xor
test
pushf
and
fwait
pusha
cs
or
or
ror
xor
xchg
mov
jmp
xchg
mov
in
js
pop
jg
adc
mov
imul
ret
and
push
adc
pop
inc
es
sbb
inc
rcl
shr
imul
inc
lock
ins
adc
test
scas
cmp
std
clc
xchg
rcr
lock
ins
sahf
jne
jo
(bad)
inc
cmp
dec
outs
xor
loopne
ss
js
push
sbb
push
gs
cli
jne
dec
or
aam
sbb
rcr
jb
bound
pop
sub
pop
rcr
adc
add
icebp
sub
mov
div
mov
xor
pop
loope
loopne
pop
test
(bad)
fbstp
mov
adc
xchg
mov
xchg
cdq
mov
shl
popf
mov
jne
imul
cmp
pop
or
xor
sub
rol
cmp
mov
test
lods
xchg
cli
mov
or
or
scas
js
je
dec
xchg
call
(bad)
gs
es
je
dec
add
inc
xor
cmp
sub
inc
outs
fnsave
rcl
sti
or
cdq
mov
pop
test
into
rcr
and
jge
fild
neg
inc
adc
out
cmc
and
inc
xor
lahf
aaa
outs
out
xchg
mov
(bad)
cmp
ret
inc
ret
mov
data16
lods
out
push
ds
add
xchg
mov
mov
dec
retf
int
cdq
pop
dec
pop
pop
pop
inc
inc
push
push
push
ins
mov
adc
out
in
push
fwait
inc
jmp
mov
cmc
out
gs
mov
inc
jb
cmps
add
inc
mov
loop
stos
(bad)
lods
in
cmps
and
in
cmps
xor
sub
pusha
pop
dec
mov
add
mov
xchg
and
bound
sar
and
scas
call
les
or
cs
sub
adc
and
daa
inc
scas
(bad)
and
xchg
cmp
mov
xchg
mov
push
(bad)
pushf
push
shr
pop
retf
(bad)
cmp
jg
repnz
ret
mov
jb
ret
popa
dec
inc
retf
adc
pop
push
mov
lahf
or
sub
push
sbb
in
inc
mov
push
mov
psrad
popf
jb
ret
mov
or
scas
mov
mov
or
(bad)
movs
enter
dec
sub
nop
jg
(bad)
ins
movs
push
es
push
lahf
push
test
add
scas
scas
jmp
dec
in
ss
movs
lock
repnz
cmp
cmps
jne
cmc
pop
sub
xchg
sbb
jmp
outs
outs
fs
pushf
fidiv
loope
les
xchg
fwait
and
and
sub
push
cmp
adc
int3
pop
hlt
inc
cli
push
cs
cmp
(bad)
cmc
push
jmp
std
xor
rol
mov
fsub
rcr
movs
xchg
xchg
fisub
(bad)
loopne
and
outs
cli
sbb
lahf
adc
movs
mov
sahf
(bad)
push
ins
sub
in
mov
push
jns
lock
or
and
mov
mov
and
inc
xchg
mov
shr
dec
mov
(bad)
cmp
cmps
jge
mov
cmp
cwde
dec
sub
rcr
mov
inc
clc
mov
lahf
jae
push
inc
scas
rol
pop
adc
leave
js
loope
dec
xchg
xor
andnps
sti
in
ds
jo
das
or
scas
std
addr16
sbb
retf
inc
sbb
push
lods
cli
sbb
jle
inc
xchg
cmc
cs
shl
(bad)
push
mov
sub
imul
mov
shl
xor
ds
jmp
arpl
inc
dec
ins
cmps
mov
test
add
ficomp
aad
aaa
nop
and
(bad)
pop
inc
xor
addr16
test
addr16
add
lea
out
dec
ins
fsubr
jecxz
(bad)
stc
int3
mov
dec
adc
call
aad
and
pop
pop
(bad)
mov
fs
test
cwde
jb
xchg
and
sub
and
repnz
cmp
lea
scas
arpl
retf
stos
dec
imul
xchg
or
xchg
shl
mov
js
neg
(bad)
enter
xor
cmp
cmp
movlps
retf
in
ja
(bad)
iret
outs
mov
pusha
mov
aad
and
and
(bad)
mov
shl
outs
fcom
push
mov
in
adc
shr
test
stc
lds
call
(bad)
jp
sub
jbe
sub
outs
inc
loope
adc
repnz
call
mov
push
pop
loopne
out
shl
mov
and
dec
dec
cs
je
int3
ja
jno
std
in
cmp
(bad)
in
retf
ror
addr16
sbb
fistp
(bad)
mov
mov
jmp
aad
inc
enter
xchg
popf
aaa
or
xchg
dec
mov
jno
cwde
mov
fdivr
push
(bad)
mov
ret
bound
xor
jecxz
add
frstor
test
out
mov
and
jge
into
lds
or
ret
inc
loopne
cmp
mov
pop
test
scas
retf
arpl
xor
pop
and
movs
push
and
adc
jmp
dec
fucom
sbb
sahf
inc
xchg
(bad)
outs
es
cmc
pop
add
pop
into
ret
dec
cmp
sub
aaa
jge
les
add
enter
jne
pusha
(bad)
stc
push
mov
add
sahf
jae
jmp
mov
and
push
jno
mov
mov
enter
aaa
pop
pop
aad
outs
test
dec
sub
jno
imul
or
daa
fwait
outs
jae
jmp
shl
std
out
push
cdq
rcr
sti
in
addr16
push
or
out
mov
imul
cmp
scas
les
add
cmp
pop
adc
not
cs
das
mov
inc
addr16
ror
call
mov
mov
icebp
xlat
lds
in
fstp
xor
push
sbb
cli
push
pushf
call
dec
aas
sti
cmps
and
pop
out
pop
das
xchg
mov
mov
cmp
sbb
mov
dec
pusha
jecxz
sbb
test
sub
sbb
repz
aam
popf
or
test
(bad)
fxch
outs
sbb
inc
inc
push
pop
xor
jl
pop
and
bound
fadd
xor
mov
imul
sahf
and
je
ja
frstor
pop
fwait
jle
or
xor
cmp
add
pusha
call
mov
fild
mov
hlt
nop
mov
rcr
jno
sar
mov
and
imul
call
retf
push
imul
call
in
add
js
popf
movs
push
inc
pusha
pushf
out
fnstsw
xlat
add
(bad)
hlt
call
gs
adc
and
jecxz
push
fsubr
and
ds
or
or
jnp
xchg
repnz
pop
cdq
pusha
fwait
cmp
cmc
sub
rcr
out
dec
jle
out
jns
loope
ss
xchg
mov
mov
push
lea
adc
adc
or
dec
test
stc
cmps
dec
inc
inc
(bad)
xchg
mov
in
ficom
sub
mov
retf
das
clc
xor
jmp
int
jne
and
xor
sub
dec
push
rol
mov
and
cmp
push
cdq
aam
fadd
add
mov
(bad)
push
pop
icebp
mov
cli
dec
push
xor
mov
sbb
xchg
jmp
pop
js
push
inc
adc
xchg
test
in
je
pushf
inc
cmp
mov
in
mov
popa
lods
call
xchg
or
push
fwait
inc
in
mov
cmp
push
shl
(bad)
cmp
out
mov
in
shr
icebp
leave
mov
xchg
rcr
cmc
adc
cmps
or
xlat
dec
ror
movs
pop
pop
mov
push
ror
rcr
jmp
or
adc
(bad)
out
xchg
aaa
mov
fsub
jecxz
shl
popa
pop
int3
jmp
push
test
add
xchg
arpl
dec
mov
in
(bad)
add
adc
xchg
add
and
cmp
sub
nop
int
mov
inc
(bad)
aas
neg
jae
xor
iret
fcomp
pop
pop
gs
scas
daa
jl
lahf
fucomi
nop
fstp
je
xchg
test
pop
bnd
pop
push
dec
adc
int
nop
ror
data16
jo
cmp
mov
inc
pop
in
push
pop
rcr
mov
pop
mov
mov
push
gs
mov
sub
test
or
(bad)
lahf
sub
sbb
fwait
cld
call
xlat
rol
out
and
mov
and
daa
and
fcom
inc
adc
xchg
mov
cs
(bad)
(bad)
call
call
jno
push
push
test
loopne
and
pop
mov
xor
jmp
jge
xchg
jl
xchg
xor
js
or
rcr
stos
(bad)
cmp
out
movs
call
rcr
xchg
mov
pop
adc
movs
mov
inc
push
test
adc
and
popa
cmp
cmp
inc
fistp
push
test
call
and
call
inc
jmp
dec
mov
bound
fmul
clc
jno
cwde
or
lahf
dec
sub
push
pop
and
sub
xor
into
stos
jle
and
mov
or
aas
nop
mov
add
mov
or
adc
cdq
mov
out
call
push
push
sub
pusha
ja
cmp
adc
add
pop
in
iret
imul
repnz
xchg
(bad)
jo
pop
sub
xchg
adc
sbb
mov
out
dec
mov
mov
leave
js
push
xor
call
ficomp
push
jns
inc
pop
cmp
push
sbb
daa
sub
out
jb
daa
cmp
or
dec
ret
pop
loop
pop
sub
push
pop
ret
and
mov
push
test
popf
clts
ret
add
addr16
rol
mov
daa
aad
mov
sahf
nop
add
mov
and
in
or
xor
jl
mov
in
sbb
mov
mov
stc
(bad)
cmp
or
outs
sub
data16
outs
fldenv
movs
js
movs
sbb
ins
dec
mov
in
gs
out
out
sub
xchg
dec
in
sub
cmp
push
mov
cmps
mov
adc
jge
loop
xor
es
pushf
adc
push
retf
iret
and
fadd
aad
xchg
mov
stos
in
xchg
leave
xor
aaa
dec
outs
shl
xchg
(bad)
stc
mov
idiv
call
test
dec
fist
arpl
dec
in
sub
daa
call
in
or
mov
pop
inc
mov
or
cli
push
in
(bad)
(bad)
sti
push
mov
out
mov
add
sub
bound
call
lea
jno
(bad)
lods
xchg
into
add
(bad)
push
xchg
imul
inc
inc
push
ret
inc
jb
neg
mov
not
scas
fwait
adc
daa
cmp
sbb
loopne
pop
jmp
cmp
imul
js
out
test
sub
push
cmp
lea
icebp
in
out
pop
js
mov
packsswb
clc
retf
stos
cmps
rcl
(bad)
jb
mov
leave
push
push
loop
mov
jg
scas
and
xchg
test
fst
sub
pop
mov
jo
push
or
es
das
loopne
adc
pop
add
test
pop
mov
cmp
js
add
sub
xor
pop
adc
xor
pop
out
mov
xchg
and
add
out
pop
aam
mov
mov
adc
push
repz
fidiv
xor
pushf
pop
lds
scas
adc
push
outs
shr
cmp
dec
jbe
fnstsw
gs
adc
mov
inc
sbb
inc
xchg
xchg
jecxz
movs
sub
sbb
xchg
push
movs
pop
test
pop
ins
imul
fdivr
(bad)
fnstcw
ins
adc
dec
test
add
xlat
push
jmp
cmc
mov
rol
pop
arpl
dec
sbb
push
popf
jo
xor
mov
call
push
adc
(bad)
repz
add
sbb
shl
or
(bad)
or
dec
loope
pop
adc
scas
in
into
add
push
xchg
test
imul
xchg
push
scas
cmps
sbb
mov
xchg
sar
cmps
popa
adc
(bad)
sub
sub
retf
xor
retf
imul
test
cmp
bound
pop
jg
cwde
mov
pop
outs
adc
mov
das
mov
shl
loopne
mov
cdq
cmps
add
ins
pop
dec
rcr
shl
or
(bad)
mov
adc
les
mov
jbe
in
inc
frstor
aas
fcmove
sbb
dec
mov
loop
repz
out
pop
data16
inc
jbe
mov
cld
sub
or
ds
inc
pop
xor
leave
aaa
push
mov
push
div
pop
popf
add
push
or
shr
in
adc
iret
mov
not
add
lods
cli
dec
cmc
shr
js
jp
adc
loopne
push
movs
sub
dec
test
or
or
out
mov
pop
gs
clc
mov
fcom
jb
xchg
add
cmp
adc
addr16
push
xchg
test
das
lods
pop
dec
popa
pop
popf
sub
int
loope
stos
mov
pop
ja
mov
cli
xor
bnd
ficom
sti
mov
sub
push
mov
shl
add
inc
pop
out
sub
lods
jne
cmc
xor
add
jae
mov
adc
movs
shr
mov
adc
in
fstp
imul
jle
nop
ret
xchg
mov
leave
push
push
mov
push
mov
mov
scas
pusha
push
pop
jnp
mov
fidivr
addr16
popa
in
das
sbb
gs
add
and
repnz
lods
inc
push
mov
sub
ja
adc
push
push
nop
sub
cld
imul
add
sbb
mov
xor
outs
ins
jno
jne
xor
push
adc
sub
xchg
add
adc
adc
test
or
(bad)
sahf
mov
push
jbe
dec
jl
in
sar
mov
mov
cmc
sbb
mov
mov
scas
dec
mov
cli
ret
jns
xor
test
mov
xchg
add
push
popf
cmp
jns
into
add
imul
add
popa
sub
fwait
pop
loopne
imul
xchg
pop
push
dec
or
leave
mov
loop
inc
push
sbb
lods
mov
icebp
cmp
shl
fnsave
or
xchg
pop
mov
mov
mov
out
mov
cmp
popf
push
push
mov
mov
stos
mov
add
rol
das
push
pop
jbe
add
adc
inc
rol
adc
cmp
add
(bad)
clc
mov
mov
arpl
inc
and
js
repnz
sub
push
arpl
xchg
mov
enter
xlat
ja
pop
xchg
bound
stos
iret
iret
mov
dec
xchg
fdivr
fnstsw
push
icebp
popf
cld
push
ret
and
or
stos
fnstcw
(bad)
fsubr
mov
adc
loop
inc
adc
out
pop
push
xchg
add
sti
mov
cld
inc
ss
sbb
movs
and
inc
je
ins
rol
shr
dec
gs
pop
add
xor
add
and
sbb
mov
dec
(bad)
lods
dec
leave
fidiv
push
sahf
xor
push
fimul
push
scas
ins
xor
mov
stc
pop
inc
iret
and
mov
add
mov
mov
fdiv
jne
dec
out
adc
pop
clc
dec
adc
sub
pop
jp
push
sar
in
lods
cld
cmp
jno
sub
inc
push
jmp
xchg
pushf
into
jnp
test
push
into
int3
mov
mov
xor
adc
jns
jp
dec
aas
adc
je
adc
sbb
push
cwde
arpl
jns
jl
push
xchg
push
jecxz
retf
mov
lods
mov
aad
scas
mov
pusha
dec
(bad)
out
fisttp
in
test
jmp
lock
dec
dec
fild
sti
xchg
dec
rcl
adc
fld
inc
(bad)
into
pop
dec
(bad)
retf
and
iret
push
mov
sub
adc
ret
mov
mov
xor
jle
pop
mul
fstp
mov
or
pop
ror
out
hlt
pusha
sub
out
add
mov
int
nop
and
pop
xor
nop
cmp
int3
out
sub
call
(bad)
(bad)
dec
popa
(bad)
cmps
outs
nop
sahf
and
(bad)
mov
push
push
fstp
inc
mov
(bad)
mov
hlt
cmps
jge
dec
and
call
retf
test
out
mov
inc
xchg
dec
mov
outs
pushf
push
sbb
test
sub
push
push
popa
test
sub
push
(bad)
jmp
das
jne
push
add
(bad)
sub
adc
and
jmp
aaa
inc
mov
dec
jns
(bad)
pop
push
dec
mov
outs
push
and
cld
setp
or
dec
ds
sbb
xchg
and
push
adc
nop
outs
cmp
inc
pop
lods
cmps
(bad)
xor
fcom
inc
shr
shr
std
sahf
imul
mov
xor
mov
jb
pop
mov
jecxz
cli
dec
xchg
cs
leave
pop
push
sbb
lds
scas
in
and
je
(bad)
cwde
fdiv
cmps
cmp
sti
mov
test
mov
data16
(bad)
std
mov
mov
loopne
stos
cmc
gs
xchg
xor
add
xchg
hlt
cmp
cdq
ja
out
(bad)
ror
xchg
pop
push
ins
mov
mov
repz
dec
inc
in
xrelease
mov
pop
(bad)
enter
pop
cmp
xor
test
mov
out
retf
gs
add
pop
push
jo
shl
je
add
xor
dec
pop
or
hlt
fabs
fadd
push
pop
and
popa
sbb
int
int3
fmulp
in
(bad)
mov
push
jne
leave
loope
sbb
mov
stos
fcomp
jle
jo
mov
inc
gs
cmp
out
ins
call
cmps
xchg
data16
jecxz
inc
adc
lods
imul
push
das
adc
cmp
movs
xchg
aam
frstor
femms
iret
push
mov
mov
les
push
add
jecxz
sbb
retf
add
(bad)
jle
repz
push
jge
ror
xchg
sub
sub
xor
pop
pop
les
xchg
sbb
pop
shl
aas
sar
inc
cmp
xchg
aaa
dec
out
sub
outs
xlat
add
mov
sub
ins
out
add
pushf
mov
test
push
cmc
sahf
aaa
addr16
jge
jmp
ror
add
test
mov
mov
out
mov
or
fwait
xchg
scas
mov
push
out
call
inc
and
fdivr
sub
mov
mov
inc
cmc
or
fild
xor
movs
repnz
gs
jae
mov
out
jbe
stos
mov
and
push
sbb
es
dec
(bad)
push
cmp
mov
les
in
jbe
adc
mov
cmc
pusha
jp
push
add
movs
(bad)
mov
xchg
icebp
cwde
xchg
add
shl
push
or
(bad)
jle
pop
sbb
or
mov
mov
dec
or
sti
into
repz
sbb
sub
sbb
add
lods
cmp
jl
xchg
or
dec
sub
dec
(bad)
xor
(bad)
mov
aas
ja
cmps
or
pop
push
das
or
mov
add
pusha
ins
test
add
scas
(bad)
push
outs
lahf
not
cmc
aad
repz
int
sub
mov
push
ja
icebp
in
stc
call
popf
dec
cli
fld
popf
cmp
je
lds
fiadd
xor
xlat
ins
or
add
cmp
mov
mov
test
and
ret
mov
lahf
xchg
mov
mov
jns
ins
mov
xor
loop
cwde
int
add
mov
outs
pushf
mov
or
push
jb
retf
push
dec
popf
dec
iret
int
xor
push
pop
xor
out
ss
or
mov
fwait
adc
mov
sbb
lahf
or
mov
pop
lahf
pop
mov
lahf
sub
js
(bad)
jae
inc
lods
test
adc
add
pop
dec
ret
cs
inc
arpl
das
jmp
fistp
mov
adc
call
sub
cmp
mov
gs
xchg
fst
daa
outs
in
sub
add
cmp
cld
mov
pop
shr
xchg
adc
add
adc
mov
cmp
repz
mov
and
and
sahf
dec
dec
neg
std
or
(bad)
jae
cs
push
sub
out
jb
(bad)
pop
xor
gs
sub
retf
xchg
sbb
(bad)
dec
jmp
or
adc
mov
pop
mov
xor
push
rcr
inc
sti
jmp
pop
mov
fld
dec
lahf
sub
daa
loopne
iret
leave
in
in
adc
loopne
cmp
(bad)
aam
inc
pop
je
jno
icebp
jo
cmc
(bad)
in
mov
pop
int
xchg
xchg
jl
aam
jo
sahf
aam
jmp
mov
jle
arpl
xor
ret
sbb
push
repz
sbb
mov
aam
pop
mov
retf
dec
neg
outs
fcom
and
pop
cmp
lods
lahf
mov
stc
aad
je
pop
loope
push
rcl
xor
in
ret
xlat
in
les
pop
mov
jae
cwde
mov
sub
aaa
ficom
ins
pop
daa
push
loop
loopne
out
cdq
imul
dec
call
imul
push
fs
popf
mov
xchg
dec
push
xlat
dec
outs
dec
ja
mov
fucomi
adc
sub
pop
jnp
pop
mov
imul
add
(bad)
pop
aas
pop
ds
cmp
test
cmp
int
or
int
jns
xor
push
std
jns
sub
inc
mov
je
or
data16
jo
movs
xchg
adc
bound
test
bound
stos
push
add
mov
cmc
jnp
push
xor
jns
aas
(bad)
rol
test
jmp
jmp
push
imul
mov
dec
gs
ret
inc
and
sub
dec
(bad)
cmps
fisttp
push
mov
cmps
je
daa
jg
sub
mov
or
jae
ret
push
sbb
inc
or
dec
retf
stos
adc
inc
ja
call
pop
call
pop
pop
shr
pushf
add
pushf
inc
jno
push
or
mov
popa
sub
retf
push
or
ss
and
cmp
arpl
pop
frstor
push
add
clc
mov
fcomp
pop
fidiv
dec
xchg
sbb
xor
aas
dec
pop
imul
inc
outs
sti
scas
pop
or
push
or
in
mov
sub
mov
std
sub
imul
je
push
sub
mov
lds
imul
inc
ds
mov
pop
fiadd
dec
pop
mov
cmps
test
lahf
out
lock
jne
jne
xchg
xchg
dec
pop
in
popf
xchg
mov
imul
mov
or
mov
ret
mov
test
inc
cmp
ret
pop
and
pop
jae
mov
dec
jbe
mov
adc
pop
jbe
xchg
leave
sub
test
rol
lds
sub
ins
loope
addr16
aaa
add
arpl
pop
addr16
mov
sbb
and
bound
das
jecxz
outs
call
ficomp
nop
xchg
mov
push
or
or
out
dec
(bad)
xlat
adc
push
cmp
push
ins
add
xchg
push
loop
and
xchg
rol
sub
push
enter
loopne
xchg
and
aas
jp
adc
sbb
and
sub
pop
adc
pop
retf
bound
sub
push
sar
xor
repnz
cmp
dec
test
or
mov
sub
mov
xor
sbb
addr16
xchg
retf
mov
mov
or
mov
pop
(bad)
push
icebp
push
xchg
cmps
loopne
pop
jge
(bad)
int3
(bad)
test
stos
jb
add
sub
leave
cli
sar
icebp
in
xchg
dec
rcl
out
pop
dec
adc
addr16
push
mov
dec
push
pop
call
ins
in
iret
push
jge
xchg
bound
cli
call
cld
pop
loopne
mov
xchg
cmp
jg
out
xchg
pop
ds
cmc
inc
mov
xor
push
jg
and
sub
push
mov
cmp
push
mov
(bad)
(bad)
xor
inc
pop
xchg
jl
adc
arpl
sub
cwde
cmp
daa
xor
and
mov
dec
adc
inc
repz
and
push
jecxz
cmp
shl
mov
fisttp
or
xchg
or
push
icebp
inc
inc
mov
cld
dec
call
aad
int
out
stos
loop
adc
iret
jge
adc
mov
pop
push
out
pop
outs
lods
jl
pop
iret
inc
jl
xchg
jbe
repnz
ins
pop
in
ja
jb
loopne
sub
aaa
push
stos
imul
xchg
jb
fs
fimul
push
sti
adc
stc
cmp
jno
adc
fwait
dec
dec
rol
cmps
arpl
cmp
mov
or
adc
les
fdivr
xor
sti
dec
pop
jle
sub
mov
leave
loope
dec
repnz
test
int
adc
push
in
jb
leave
add
push
mov
nop
ficomp
out
add
shl
jecxz
leave
sub
and
mov
lods
dec
lods
sahf
mov
mov
outs
inc
jle
adc
repz
cmp
xchg
pop
(bad)
in
lahf
stos
movs
fdivr
repz
jg
ins
stc
fs
cmp
mov
fwait
es
or
mov
sbb
out
popf
stos
xchg
seta
xor
sbb
jmp
push
add
push
add
in
cmp
pop
adc
jmp
aas
test
pushf
je
cmp
dec
jl
out
or
push
retf
mov
movs
outs
popa
test
scas
adc
(bad)
je
sub
and
xor
inc
not
pop
adc
jb
std
vmovq
or
add
aad
mov
call
pop
jg
icebp
cmp
or
and
bound
mov
cmp
mov
and
sbb
hlt
push
xor
pop
push
mov
mov
aad
inc
sbb
(bad)
repnz
call
jmp
shl
ja
push
mov
in
fisubr
movs
mov
add
cmps
pusha
ins
iret
shr
retf
push
cmp
pop
data16
fld
pop
loop
add
adc
jge
xor
cli
movs
mov
jno
push
popf
imul
ror
pop
mul
(bad)
cmp
fdivr
push
in
sahf
jecxz
lea
xor
(bad)
sub
das
div
mov
jge
lods
pop
stos
(bad)
js
daa
sub
adc
lahf
out
movs
pop
pop
xchg
sahf
sbb
jmp
je
lock
add
pop
ret
call
pop
jmp
add
mov
das
add
(bad)
pusha
sub
icebp
ret
es
loop
in
data16
icebp
or
inc
inc
inc
push
inc
push
sub
out
bound
jae
lock
pusha
add
aas
mov
idiv
dec
xchg
mov
test
mov
test
mov
icebp
sub
push
sub
sahf
ret
pop
lds
inc
out
aam
setl
std
and
aam
rcr
add
jmp
adc
lock
popf
inc
cwde
push
call
repz
cmp
jae
or
pop
popa
cmps
sbb
outs
ins
lods
mov
out
je
mov
test
cli
pop
in
lea
dec
(bad)
mov
push
loopne
xchg
push
add
ds
mov
mov
mov
inc
in
xor
push
mov
mov
outs
xor
pusha
bound
mov
movs
push
add
mov
xchg
ss
imul
stc
xor
adc
pop
inc
jmp
js
push
bound
sub
dec
fs
je
xchg
mov
mov
dec
jo
pop
std
sub
dec
out
push
arpl
adc
dec
in
ins
mov
add
add
mov
stos
or
push
inc
sbb
xchg
(bad)
pop
dec
ins
sbb
test
mov
lds
(bad)
int3
pop
xchg
push
int
dec
jmp
(bad)
xor
jbe
xchg
mov
cmp
adc
mov
push
jmp
mov
xchg
sub
out
loop
sub
add
inc
dec
pop
jns
lds
inc
neg
mov
mov
mov
jle
inc
sbb
pop
mov
(bad)
sub
cmps
in
sti
inc
addr16
cmp
call
inc
pop
ja
aaa
scas
sub
push
in
(bad)
in
gs
xor
cmp
das
sub
stos
jne
scas
xchg
or
sub
(bad)
mov
in
mov
jmp
add
mov
scas
and
ffreep
shl
fnstcw
test
pop
xor
hlt
retf
add
xchg
pop
aam
adc
movs
out
lock
cmps
cmp
xchg
mov
icebp
push
int
lock
div
pop
sub
mov
sbb
bound
adc
push
adc
mov
lock
push
xchg
test
push
dec
movs
xchg
xchg
loopne
clc
xor
mul
inc
push
dec
jmp
scas
xchg
pop
mov
mov
cmp
rcr
cld
push
push
test
sbb
fbstp
loop
xor
push
cmp
jl
or
dec
mov
jbe
stos
loope
lea
scas
xor
inc
cmp
dec
js
xor
adc
call
jp
sbb
or
rcl
mov
cmps
aaa
int3
mov
pop
jl
pop
arpl
fisttp
lods
mov
adc
pop
shl
xchg
xchg
jmp
adc
inc
push
sbb
loopne
fwait
dec
jne
fldcw
sbb
aad
inc
loopne
addr16
out
push
cdq
add
mov
ror
adc
(bad)
movs
pop
sub
inc
jmp
sbb
xor
adc
pushf
jmp
je
ret
dec
out
cli
jb
xchg
and
xor
pop
stos
cmp
sbb
dec
in
out
sub
dec
les
jno
popa
inc
aas
dec
and
push
arpl
jge
movs
adc
je
stos
xchg
jge
cmps
pop
and
std
jp
push
les
mov
mov
push
mov
dec
push
or
pop
add
push
cmp
retf
sbb
cld
mul
jg
or
js
lahf
dec
mov
or
mov
cmc
xor
into
out
add
fidivr
mov
movs
cmps
sbb
ficom
push
js
sbb
fs
rol
mov
pusha
mov
repz
pop
dec
jg
ror
adc
jmp
and
mov
jb
push
cwde
ins
pop
fisttp
jmp
call
add
push
sub
pop
xor
mov
pop
dec
ret
aad
out
clc
inc
stc
daa
xchg
pop
push
push
loopne
call
hlt
sub
inc
push
pushf
movs
xchg
mov
jle
push
mov
inc
mov
lahf
cdq
enter
jg
ins
mov
(bad)
push
imul
arpl
nop
imul
mov
cmc
movs
dec
push
mov
inc
mov
cmp
jne
fs
sub
add
je
(bad)
mov
pop
sbb
ror
and
cmp
lods
outs
das
push
sbb
jb
ret
ins
inc
cs
pop
movs
pop
add
sbb
sbb
jae
rcl
mov
mov
out
ja
push
(bad)
nop
rcr
call
call
mov
jno
pop
jmp
xchg
mul
das
lock
and
and
test
aas
ja
je
and
cli
mov
outs
inc
jge
jl
(bad)
push
mov
out
inc
jbe
aaa
shr
dec
repnz
pusha
retf
scas
push
inc
cmp
rcl
call
add
add
fbld
sbb
and
lahf
movs
sub
push
push
hlt
cld
lea
dec
xchg
outs
aad
and
pop
stc
mov
mov
imul
mov
dec
cs
mov
push
and
(bad)
dec
add
jecxz
scas
mov
aas
cs
mov
or
and
ficomp
test
xor
inc
jle
js
mov
lea
outs
dec
mov
fisub
mov
arpl
(bad)
int3
and
je
dec
xlat
sub
sbb
jp
cmp
jp
out
sbb
fs
into
daa
ja
lahf
setb
(bad)
push
mov
dec
(bad)
cmp
or
xchg
aad
(bad)
adc
inc
(bad)
sbb
ins
or
rol
dec
adc
or
movs
jns
loop
ja
popf
pushf
mov
and
push
clc
push
mov
mov
scas
js
add
mov
or
sub
or
mov
push
cdq
jno
test
call
icebp
call
mov
aas
cmp
cmp
or
push
(bad)
lods
(bad)
mov
repnz
mov
mov
inc
cwde
ror
pusha
cmc
cmp
push
loopne
mov
jg
mov
fwait
pop
or
and
(bad)
mov
push
scas
dec
outs
stos
sahf
adc
test
inc
xchg
enter
dec
ds
mov
mov
fwait
jmp
cmc
add
fld
outs
outs
xchg
stos
inc
sub
mov
add
ja
out
cwde
jge
mov
dec
xchg
inc
mov
dec
mov
cdq
or
mov
mov
xor
movs
cmp
sub
lahf
aam
dec
push
inc
xor
sub
inc
shr
adc
cdq
leave
xchg
mov
inc
or
and
xor
lea
jle
je
or
ins
cmps
int
push
sub
ror
inc
xchg
outs
add
push
dec
bound
inc
xor
mov
push
cmp
ret
ja
adc
push
pop
stc
mov
xor
stos
shr
sbb
xlat
cmc
cmp
clc
(bad)
stc
ds
gs
fiadd
mov
pop
cmp
fimul
push
xor
mov
push
dec
mov
out
add
and
mov
ret
cwde
fisubr
retf
sbb
cli
lods
addr16
fild
es
jp
mov
inc
adc
push
push
pop
in
nop
ins
mov
stc
xor
xchg
jnp
push
dec
or
jmp
push
and
enter
dec
push
lahf
xor
and
cli
vhaddps
(bad)
je
rcr
in
rcr
jb
inc
push
scas
test
jecxz
movs
jmp
sbb
pop
iret
inc
pop
inc
dec
xchg
lock
cmp
outs
pusha
cmp
scas
lahf
stos
push
pop
mov
pop
sbb
add
out
mov
out
bound
add
aad
dec
sbb
gs
mov
mov
xchg
jecxz
call
mov
retf
xchg
mov
adc
in
or
dec
xlat
push
mov
push
mov
ins
test
lea
mov
scas
cmp
inc
cs
in
int
jle
shrd
mov
dec
adc
mov
cmp
xchg
mov
out
pop
mov
sub
push
ficom
mov
out
out
jp
movs
cs
adc
xchg
lea
bound
xchg
push
jmp
retf
ins
inc
mov
pop
push
push
fld
fisubr
add
mov
ins
fisttp
dec
jmp
xchg
shl
jecxz
pop
mov
retf
mov
js
retf
mov
dec
bound
jl
addr16
movs
pop
icebp
push
mov
jnp
and
daa
inc
(bad)
and
mov
into
std
mov
jbe
sbb
xor
cld
ffreep
xor
mov
pop
sbb
sub
or
add
mov
adc
outs
pop
push
aas
cmc
dec
adc
nop
fcmovb
sbb
in
pop
xchg
cmp
pop
(bad)
sub
fs
(bad)
int3
test
add
add
sbb
jecxz
data16
clc
adc
into
cld
dec
ss
mov
xchg
dec
jge
cmp
mov
rcr
arpl
dec
stos
je
and
or
cld
outs
fld
sub
fidiv
mov
aad
mov
iret
mov
test
jbe
fnstenv
push
and
pop
int
js
loop
call
movs
pop
and
(bad)
xor
jb
cmp
push
cmp
mov
or
or
mov
mov
push
aas
mov
cmp
out
shl
pop
mov
mov
jne
out
pop
sbb
call
cmp
adc
popf
es
push
sti
inc
adc
(bad)
pop
leave
(bad)
cmp
out
mov
stos
sub
dec
(bad)
mov
repz
mov
dec
loop
sahf
mov
test
je
xchg
pop
cmp
mov
push
loop
push
xchg
sub
jo
inc
jge
inc
or
inc
adc
mov
iret
and
test
pop
jg
adc
outs
cmp
into
jne
pop
fs
xor
cwde
test
je
fld
cmp
lods
sub
push
inc
push
sbb
lods
sbb
fisub
rol
mov
mov
mov
ror
add
xchg
jge
(bad)
into
leave
jnp
dec
test
add
in
stos
jmp
add
cmp
xchg
sbb
fwait
jp
stos
sbb
in
stc
das
xor
xor
pushf
je
cmc
cmp
enter
(bad)
rcl
inc
add
mov
outs
sbb
sbb
test
xor
outs
sbb
in
dec
je
lea
sbb
sti
imul
in
adc
iret
leave
shr
fild
(bad)
jecxz
inc
sub
les
into
mov
cs
xor
fmulp
fst
push
push
cld
fsubr
bound
mov
scas
mov
cmp
jmp
test
movs
pop
dec
rcr
retf
xchg
(bad)
nop
mov
push
dec
pop
cmp
pop
cmp
inc
je
in
(bad)
aaa
fmul
add
or
iret
stc
push
mov
fisttp
loop
jo
loop
push
add
inc
fisub
movs
imul
sbb
inc
cs
lds
scas
leave
and
jl
popf
jmp
adc
mov
test
fucom
fs
cs
movs
std
std
enter
and
mov
xor
jnp
mov
jle
inc
add
or
leave
fldcw
or
mov
jns
test
sar
or
jb
pop
dec
inc
dec
ret
sbb
push
fs
dec
addr16
hlt
mov
pop
lea
jp
(bad)
ficomp
mov
std
icebp
movs
xchg
sub
call
pop
outs
mov
add
enter
dec
adc
dec
sub
sub
out
xor
shr
es
cld
dec
retf
(bad)
out
lock
mov
mov
aad
jmp
in
movs
sbb
jmp
(bad)
(bad)
cs
(bad)
out
loop
mov
dec
(bad)
lock
mov
faddp
test
cmp
dec
sti
jo
scas
push
xchg
xchg
out
ror
xchg
or
sub
adc
clc
scas
pop
push
loop
jnp
fcom
int
dec
outs
mov
jno
sbb
adc
xchg
xchg
fisub
test
pop
xor
push
lock
push
xchg
or
mov
jmp
mov
shr
lea
ror
int3
fucom
and
xchg
mov
pop
xchg
ret
mov
mov
inc
sub
inc
push
fistp
mov
fstp
or
fcomp
and
add
xor
jae
jno
imul
add
into
add
cmp
push
leave
pop
xchg
mov
mov
jecxz
mov
(bad)
mov
inc
paddsw
nop
cmp
xchg
lock
cmp
shl
add
rol
xor
mov
or
xchg
xor
movs
fist
push
test
popa
cmp
jp
jae
sbb
lahf
add
dec
xchg
jp
pop
test
retf
mov
mov
xor
xor
in
retf
nop
and
add
adc
mov
fcmovnbe
aaa
mov
ret
inc
cmp
cmp
cdq
sbb
hlt
stc
lahf
and
mov
sub
cs
call
icebp
sbb
mov
outs
push
aaa
sbb
mov
cdq
mov
cmp
push
and
add
hlt
not
mov
clc
push
cmps
repnz
inc
ret
pop
jg
push
jmp
mov
mov
xor
mov
(bad)
or
mov
je
or
adc
cld
dec
lods
(bad)
fisubr
cmp
sbb
jle
dec
movs
cmp
sub
inc
and
sbb
jl
push
push
ror
xchg
jb
jb
cmp
aaa
push
dec
pop
jno
fcomp
jnp
push
(bad)
jmp
data16
test
ja
cmp
aas
xchg
jns
mov
nop
or
jmp
lea
or
in
cmp
add
je
adc
jns
mov
adc
or
mov
pop
push
idiv
and
out
xchg
jg
push
cli
push
jns
call
mov
pop
and
adc
and
xor
sub
push
dec
push
pop
div
enter
pop
lods
mov
cmp
pusha
cmp
sub
jle
jp
mov
shr
and
fmul
enter
mov
dec
bound
pop
xchg
push
test
xchg
inc
mov
mov
stos
data16
or
arpl
out
jl
idiv
rcl
push
xlat
jg
(bad)
fcom
je
sub
sbb
out
mov
(bad)
stos
rcr
pop
or
fsubr
test
ficomp
add
push
test
je
arpl
sub
sub
push
add
and
jb
sti
xlat
push
jo
and
fadd
xchg
sbb
mov
pop
and
fisubr
js
in
ror
push
pop
xchg
mov
fild
mov
popa
(bad)
repz
mov
pop
inc
inc
mov
adc
iret
loopne
fadd
push
hlt
and
aas
mov
ret
ds
mov
inc
xor
lea
movs
aas
scas
(bad)
enter
dec
xor
fsub
in
add
mov
out
cmp
sar
jbe
(bad)
ins
pop
xor
(bad)
jmp
clc
cmp
lds
inc
adc
mov
add
inc
jp
jne
loopne
cmp
jecxz
sbb
repz
dec
push
add
out
add
xor
add
mov
mov
push
sbb
pushf
aas
mov
and
adc
and
pop
xchg
cmp
les
adc
add
repz
neg
loop
das
jp
test
sbb
inc
push
mov
pusha
push
call
xor
xchg
inc
retf
pop
stc
aad
xchg
outs
jecxz
push
cmps
sub
push
and
retf
addr16
push
jmp
in
das
cli
mov
push
mov
dec
clc
sti
imul
or
repnz
or
xchg
stos
cdq
out
xchg
mov
fidivr
mov
jnp
inc
xchg
xchg
mov
imul
mov
xlat
inc
(bad)
in
pop
pop
leave
popa
mov
lds
or
iret
in
int
or
jmp
push
cmp
outs
push
pop
mov
loop
push
pop
mul
and
hlt
push
cdq
mov
movs
or
fiadd
std
push
push
push
shl
dec
dec
mov
pop
sub
js
push
mov
inc
inc
lods
hlt
jns
fisttp
inc
jecxz
and
add
jbe
stos
adc
stos
iret
and
xchg
xchg
cmp
cld
loop
push
out
inc
adc
jb
xchg
daa
ja
fcmovnb
sub
xor
or
dec
pop
and
sbb
push
mov
fld
aas
pop
inc
xchg
int3
ins
and
sbb
aas
mov
mov
test
shr
inc
pextrw
and
adc
ret
ss
dec
cli
(bad)
popa
adc
rcl
in
dec
jo
dec
and
jecxz
dec
mov
xchg
dec
add
ret
mov
int3
inc
rcr
sbb
ins
movs
cmp
mov
push
mov
sar
jecxz
jl
retf
jae
push
ret
fs
ins
push
inc
and
push
mov
test
daa
retf
adc
retf
lock
mov
and
lds
into
jnp
adc
add
sub
add
jmp
xchg
xor
stc
(bad)
enter
not
fild
fucom
sub
cmps
inc
cmc
push
add
stos
dec
mov
retf
lock
jmp
push
jns
pop
dec
inc
pop
sti
cdq
mov
or
push
loope
lods
cmp
lahf
mov
dec
push
call
(bad)
mov
xchg
sbb
mov
sti
adc
dec
fidivr
mov
adc
fucom
pop
es
xchg
cli
fwait
jbe
mov
(bad)
in
push
mov
mov
add
push
lods
fld
jp
not
or
ja
loope
or
xchg
push
mov
adc
cs
inc
sub
das
scas
jge
jmp
xor
push
cmp
sbb
xchg
iret
lods
retf
lock
fcomp
push
sub
push
rol
mov
push
pop
jmp
pop
clc
mov
push
jno
dec
aam
(bad)
pusha
fiadd
and
jbe
cld
mov
repz
push
jg
enter
ss
daa
rcl
imul
in
loope
mov
bound
fwait
jecxz
imul
sbb
xchg
mov
and
in
add
bound
inc
cmp
test
lds
jo
test
pop
cmp
cli
stc
loopne
test
addr16
repnz
inc
fild
enter
pop
sbb
mov
mov
lock
and
aad
repnz
bound
sbb
into
add
jmp
sbb
(bad)
nop
cmp
mov
cmp
jns
mov
mov
xor
jecxz
or
inc
dec
(bad)
aas
ins
bound
adc
jne
call
pop
jno
jo
sbb
lds
ss
jecxz
lods
add
clc
ror
push
or
jge
test
fcmovbe
dec
jae
ret
push
cmp
das
cdq
in
jecxz
xchg
das
ins
inc
or
aas
add
pop
pop
and
and
movs
sbb
lds
xchg
xor
test
adc
cli
repz
test
xor
add
xlat
mov
sbb
icebp
or
mov
jo
call
or
mov
les
gs
mov
and
loope
jae
push
xchg
pushf
mov
fst
push
out
dec
fucom
iret
gs
jns
sbb
ficom
inc
sub
rcl
pop
sub
mov
and
and
or
je
ror
sub
jp
sub
or
and
popf
cwde
bound
mov
retf
setp
imul
mov
jmp
bound
in
dec
mov
inc
xor
in
fiadd
dec
jmp
cmp
bnd
cdq
stos
ss
pop
cmp
and
sbb
pop
mov
out
inc
test
and
mov
mov
daa
jo
push
outs
std
aaa
mov
dec
mov
fdiv
mov
out
test
jae
sub
push
int
enter
call
xchg
xchg
jl
sbb
imul
mov
xchg
sahf
inc
(bad)
push
dec
inc
adc
dec
add
fstp
pop
fnstcw
sub
sahf
sti
mov
fisub
push
pop
(bad)
shl
shl
add
shl
movs
push
and
enter
fwait
daa
clc
ins
xchg
mov
std
test
sub
cmps
xchg
in
jbe
fucomi
scas
cmp
mov
pop
sbb
dec
mov
pop
push
push
(bad)
dec
movs
retf
repnz
push
mov
mov
ds
add
xor
adc
xchg
pop
pop
sbb
push
xchg
cmp
xor
pop
mov
(bad)
in
test
(bad)
loop
bound
mov
retf
inc
push
(bad)
xor
ja
mov
push
cmp
mov
push
sub
hlt
adc
cwde
(bad)
js
xchg
xchg
sbb
mov
mov
or
xor
ret
cmps
xor
scas
push
popf
and
jnp
in
push
inc
dec
ret
arpl
xor
jns
push
dec
sti
into
jo
enter
lock
jmp
inc
dec
adc
and
cli
test
aas
pop
popa
mov
sar
add
out
(bad)
xor
pushf
in
cld
ins
mov
rol
es
stos
lods
jmp
pop
sub
xor
adc
mov
mov
mov
jge
pop
ror
repnz
imul
sub
adc
inc
imul
test
outs
push
or
xchg
xor
cmp
aas
mov
mov
mov
int
repz
mov
or
sub
sbb
aaa
cmc
clc
ins
in
retf
fcom
inc
dec
repz
ret
mov
les
sti
test
or
mov
in
call
cmp
mov
jb
lea
jl
test
mov
stos
loop
and
add
stc
or
outs
(bad)
cmp
adc
arpl
out
outs
test
pop
mov
xchg
xor
push
or
jno
dec
nop
and
ins
xor
ffree
(bad)
mov
or
add
movs
aas
gs
or
dec
sbb
imul
mov
outs
retf
popa
call
outs
pop
jne
dec
or
adc
push
enter
scas
xor
fbstp
cmps
xchg
test
inc
xchg
pusha
mov
or
pop
mov
scas
adc
loopne
jmp
mov
das
fild
in
stos
fwait
add
movs
sti
mov
inc
push
cmc
rcl
cmps
ds
ret
popa
jb
cmp
aam
adc
jmp
ror
sahf
jne
cwde
or
(bad)
icebp
mov
icebp
loop
sub
stc
(bad)
test
adc
nop
pop
call
xor
sub
popf
adc
xlat
push
(bad)
sub
ret
out
xor
dec
into
mov
push
mov
loope
div
mov
pop
inc
ss
adc
test
jmp
lahf
mov
or
out
loopne
push
sub
lock
mov
jno
std
jb
in
add
cwde
sub
cmp
dec
loopne
in
pop
shl
and
sub
xchg
sbb
sbb
(bad)
cmps
dec
into
dec
adc
fld
xor
mov
sub
jp
add
(bad)
jb
nop
and
pop
cmps
pop
cmp
and
(bad)
jns
and
out
adc
mov
add
sbb
xor
loope
xor
int3
add
(bad)
mov
popa
imul
adc
xor
push
pop
jle
pop
cs
jl
aad
icebp
xchg
mov
pop
aas
fiadd
pop
push
xchg
pop
cdq
jge
movs
pop
call
pop
xor
adc
jg
sbb
and
dec
inc
into
xchg
movs
inc
enter
int
sbb
sbb
int
sbb
dec
int
and
retf
dec
stc
inc
pop
ds
xlat
push
add
xchg
dec
repz
aas
outs
aam
jl
fistp
(bad)
(bad)
aaa
fiadd
dec
cmps
shr
cld
xchg
mov
fimul
lahf
pop
out
movs
sbb
fisub
fnsave
inc
ret
imul
cld
pop
fld
scas
shr
sbb
popa
cwde
inc
sbb
mov
mov
(bad)
sbb
loope
movs
jne
mov
sti
scas
or
daa
push
sbb
das
sub
cmp
into
adc
cmp
rol
mov
push
ins
mov
mov
xchg
shl
les
mov
push
dec
lods
retf
ror
mov
ds
push
inc
xchg
sti
mov
repnz
and
je
xchg
ins
or
mov
hlt
cmp
ret
inc
in
mov
scas
clc
jl
lods
pop
cli
pop
jp
lds
cmp
rcl
add
mov
cs
xchg
inc
mov
xor
adc
adc
jg
into
daa
sbb
in
fidiv
ds
inc
cmp
sbb
aad
mov
push
fwait
div
sub
mov
xchg
sbb
aaa
pop
or
sub
mov
pop
mov
repnz
loope
jne
and
in
xchg
fwait
icebp
(bad)
cmp
iret
sbb
cmp
ds
inc
bound
jmp
in
jno
(bad)
or
jle
or
popf
fcom
in
out
xchg
inc
push
dec
jnp
repz
fcom
in
pushw
iret
push
inc
push
adc
outs
test
cmp
pop
test
rol
sub
mov
and
call
adc
mov
aas
stos
loop
cmp
stos
fnstcw
cmps
mov
bound
cmps
and
ja
and
mov
lods
les
sbb
mov
repnz
and
out
popa
or
mul
pop
push
sbb
dec
scas
mov
cmp
clc
pop
call
imul
sti
shl
pop
or
gs
adc
pop
(bad)
cmps
es
fcomp
adc
retf
daa
xchg
repnz
test
pop
push
adc
cmp
fbstp
xchg
push
sbb
mov
jecxz
jg
test
psubusw
(bad)
cmp
dec
std
fst
out
out
mov
rcr
sub
outs
out
pushf
sar
scas
data16
mov
push
cli
popf
sub
mov
iret
push
fwait
xor
mov
mov
xor
cmps
enter
pop
imul
ins
hlt
pop
call
test
mov
sbb
imul
xchg
call
cmp
sbb
mov
xor
push
jge
pop
data16
frstor
sbb
stos
xchg
mov
cmps
addr16
jne
fimul
ja
cli
push
push
mov
sub
sub
scas
shr
mov
push
push
mov
adc
mov
rol
clc
pop
adc
mov
dec
or
sbb
(bad)
push
mov
pop
jecxz
out
loop
push
push
dec
hlt
daa
sahf
mov
mov
mov
cmp
cmps
out
inc
cld
or
in
push
fcmovnbe
ins
retf
pop
in
ret
sub
mov
movs
stc
pusha
jg
push
ins
xor
rcl
in
(bad)
mov
mov
and
jle
mov
sbb
out
movs
js
adc
imul
add
lock
or
sub
jb
mov
bound
pop
sub
ds
push
stos
pop
cmp
in
imul
test
movs
rcr
les
inc
mov
aaa
imul
in
call
cmp
addr16
or
pusha
or
xor
jmp
push
mov
pushf
adc
cmp
repnz
xchg
mov
xor
mov
jbe
in
sub
or
dec
mov
shl
jmp
call
fild
xchg
mov
add
mov
and
fstp
jge
jmp
pop
sbb
sub
arpl
test
mov
in
fidiv
jo
push
cmp
mov
imul
jp
test
push
xchg
aas
cmps
es
push
movq
dec
mov
in
rol
push
add
enter
int
push
push
icebp
mov
ss
sti
jbe
xor
(bad)
retf
pusha
inc
ins
jbe
push
nop
cmp
cld
sbb
adc
popf
shl
inc
inc
out
jbe
adc
pop
xor
ret
xor
out
push
dec
loope
iret
ins
hlt
jbe
add
loop
fbstp
ss
push
jmp
sbb
xchg
dec
ja
pop
bound
mov
lods
push
enter
(bad)
or
and
or
push
out
movs
jne
fsub
pushw
jecxz
retf
pop
nop
add
jb
inc
gs
out
mov
pop
fimul
rcl
fcom
push
or
add
push
ss
mov
es
sub
inc
mov
aas
or
xor
mov
adc
jae
in
(bad)
pop
dec
test
cmp
push
fild
mov
cmp
lds
mov
mov
iret
and
int
mov
sub
jl
push
test
sub
inc
gs
pop
xchg
les
or
ret
mov
xchg
mov
mov
pop
out
pop
cmp
inc
dec
push
popa
jmp
jno
test
add
mov
pop
mov
repnz
cmps
adc
xor
mov
push
push
push
inc
mov
lods
add
xchg
in
je
test
and
cmps
out
lds
cs
jb
popf
in
hlt
leave
pushf
pushf
or
push
and
gs
cmps
retf
sub
scas
ret
fs
push
ja
or
xlat
pop
out
sbb
outs
mov
mov
dec
movs
retf
push
and
scas
std
push
sbb
jb
out
(bad)
clc
adc
cmp
or
loopne
lea
jmp
test
rcl
cmc
xor
mov
jne
sub
sub
nop
sbb
dec
mov
xchg
inc
dec
fs
icebp
es
inc
pop
cmp
adc
add
das
cmp
pushf
or
mov
push
lock
mov
dec
imul
xchg
and
push
loop
fadd
repnz
ja
and
nop
fwait
jnp
sub
cmps
ja
cmp
or
push
rcr
test
xchg
fsubr
lods
call
mov
test
pop
xchg
neg
pop
int3
add
sub
test
leave
pop
jb
mov
push
scas
aam
rcl
imul
jp
and
scas
outs
arpl
jne
mov
out
cmp
mov
and
pop
xchg
or
sbb
movs
jle
xchg
xchg
and
adc
xor
out
jmp
out
ror
mov
fcomp
(bad)
loop
daa
movs
jmp
lock
jg
shr
nop
and
cmp
mov
cmps
jno
xchg
mov
sub
and
xchg
mov
icebp
inc
sar
jmp
sub
and
arpl
mov
loop
ds
mov
dec
or
or
push
xor
and
sar
jmp
cld
xchg
loope
sub
xchg
scas
outs
and
jg
xchg
movs
or
imul
jns
xor
dec
pop
retf
fldcw
fdivr
ins
adc
call
mov
bnd
mov
sub
inc
push
push
into
jmp
ficomp
fsub
mov
rol
vcmple_oqpd
int
clc
imul
dec
pop
sti
shl
push
shr
xchg
cld
mov
pop
dec
xor
or
int3
inc
(bad)
shr
addsubpd
ror
movs
mov
push
ds
movs
ja
and
stc
jo
loope
dec
jno
ja
fst
imul
rcl
push
jns
xor
pop
fldcw
fld
pop
adc
xchg
test
fwait
push
mov
pusha
fcom
(bad)
jns
aaa
pop
ins
repnz
(bad)
mov
repz
or
idiv
unpcklps
sbb
mov
pop
jns
mov
test
cs
or
jb
push
sbb
sbb
push
aad
ret
and
not
ds
rcl
jne
xor
mov
and
mov
add
arpl
ja
clc
sahf
jns
pop
loopne
sub
ja
adc
adc
mov
pop
(bad)
loopne
cld
retf
imul
or
sub
and
shl
mov
or
mul
xchg
dec
mov
jb
in
call
xor
ficom
pop
addr16
xchg
retf
xchg
sub
call
push
repz
dec
ins
jb
pop
mov
(bad)
mov
pushf
out
aad
sbb
dec
std
or
cdq
outs
enter
ret
jmp
sub
mov
mov
xchg
dec
out
xlat
adc
fcmovnbe
push
(bad)
out
add
frstor
mov
jnp
add
jle
das
stc
lea
jae
push
out
and
rol
mov
pop
xor
ds
inc
mov
out
add
stc
dec
aam
push
ins
in
loop
sbb
rol
loopne
popf
and
jo
in
cmps
adc
enter
adc
retf
mov
sbb
out
adc
mov
lock
repnz
xchg
jle
ret
sti
sbb
jmp
add
stos
xor
lock
scas
xor
mov
outs
jge
lea
std
daa
cmp
retf
aam
int3
pop
fadd
test
dec
outs
inc
outs
cmp
and
div
fld
xchg
and
mov
xor
(bad)
sbb
sub
or
aas
test
jle
pusha
cmc
retf
test
dec
rcr
xor
jg
jne
pusha
dec
mov
and
out
cli
cdq
fisubr
jne
(bad)
push
fcomp
stos
jge
sub
add
sti
stc
call
sbb
xor
jle
push
inc
loop
push
test
mov
dec
cdq
sbb
cmps
xor
add
stos
scas
xor
cmp
pop
or
movs
sbb
jge
loope
hlt
imul
loope
sahf
push
jecxz
mov
or
jb
call
mov
clc
cmp
movs
mov
in
inc
xchg
rcl
dec
xchg
les
sahf
add
pushf
jb
test
mov
cmps
ret
mov
in
cmp
push
mov
jge
or
(bad)
jmp
(bad)
(bad)
add
push
and
(bad)
loope
mov
mov
(bad)
iret
popa
inc
inc
sbb
data16
cmc
aam
cmp
xor
not
test
bound
mov
call
xor
(bad)
ds
xchg
cmp
mov
fwait
mov
fldcw
ins
dec
mov
int3
or
xor
sahf
xor
retf
jno
xor
lock
mov
jle
dec
ds
sbb
cmp
popa
sbb
bound
push
sahf
and
sti
adc
or
dec
or
sti
push
mov
push
fidiv
stc
pushf
inc
hlt
sbb
clc
fbstp
and
aam
gs
test
mov
xor
mov
xchg
scas
xlat
stc
push
ins
imul
popa
mov
sbb
mov
fldcw
dec
ja
test
jbe
pop
out
dec
and
sbb
shl
div
stos
jmp
inc
inc
mov
aam
add
jmp
fld
sbb
loopne
aaa
push
sti
popf
icebp
aad
hlt
mov
push
dec
mov
mov
jae
outs
and
mov
push
in
cmp
push
aaa
inc
int
cli
mul
jl
mov
int3
and
xlat
aas
scas
(bad)
in
enter
(bad)
vpunpckhwd
mov
iret
js
ds
jmp
pop
(bad)
jb
leave
pop
adc
lods
push
xchg
and
test
xor
fsub
jnp
sbb
scas
add
sbb
or
sbb
ins
inc
pop
dec
and
xor
pushf
mov
mov
dec
rcr
dec
and
cli
outs
ss
inc
inc
xor
scas
pop
and
jge
add
or
push
xor
(bad)
iret
popa
jp
or
cmps
into
push
push
mov
ds
movs
inc
ins
and
scas
sbb
xlat
xchg
popf
(bad)
in
xor
jns
pushf
movs
mov
mov
dec
xor
jnp
adc
stos
push
das
jmp
pop
test
test
mov
inc
mov
out
hlt
pop
iret
stc
je
mov
lds
mov
(bad)
mov
dec
fsub
rcl
ss
jno
addr16
or
movs
(bad)
adc
or
hlt
(bad)
imul
popf
cmp
(bad)
cmp
sar
jo
cs
push
adc
out
(bad)
push
push
inc
dec
out
pop
cdq
xchg
dec
lds
inc
mov
std
out
mov
mov
xchg
ja
inc
adc
jnp
pop
sbb
jae
je
test
outs
sub
mov
cmp
xchg
iret
xchg
sub
add
cwde
repz
pop
(bad)
icebp
mov
popf
imul
cmp
mov
scas
test
mov
push
pop
pop
pop
loope
(bad)
iret
es
call
iret
pop
mov
jo
adc
fs
xchg
jno
jo
push
mov
sbb
xchg
stos
fnstcw
jae
stos
fwait
movs
stc
int3
in
push
sbb
mov
es
add
push
cmp
or
jae
xchg
ficom
xchg
mov
push
ins
mov
jge
or
rcr
test
xor
and
mov
outs
(bad)
repnz
push
fist
or
add
(bad)
mov
cmps
xor
jmp
enter
adc
cmp
outs
fmulp
rcl
cmc
mov
sub
lds
mov
cmps
cmps
stos
jmp
pusha
or
hlt
dec
jmp
scas
pop
jo
outs
pop
push
pop
fisub
push
xchg
dec
outs
mov
dec
out
aaa
fisub
push
inc
add
or
in
sub
cmp
adc
loope
nop
pop
pop
jge
mov
dec
mov
or
add
in
add
inc
fisubr
pusha
cmc
pop
pop
test
hlt
repz
loope
and
pushf
jnp
push
mov
into
fcom
cmp
dec
pop
and
iret
dec
dec
xor
push
cmp
cmps
lods
inc
mov
jno
hlt
retf
dec
mov
mov
dec
arpl
xor
(bad)
push
jle
aam
(bad)
pop
int
or
test
outs
leave
imul
xchg
push
rcr
cwde
out
mov
hlt
js
sbb
loop
add
or
out
lods
pop
lods
push
or
popa
and
push
scas
pop
jnp
or
pop
jo
jae
loope
push
mov
in
shl
pop
sub
mov
push
in
cmc
cmp
push
pop
jmp
rcl
cmp
cmps
push
push
stos
sbb
and
das
aad
inc
rcr
ret
ret
out
xchg
add
dec
inc
mov
in
jno
and
ret
fistp
mov
dec
pop
xchg
jge
outs
xor
cdq
mov
inc
push
sbb
enter
mov
rcr
addr16
sub
cdq
loop
adc
xor
inc
je
addr16
xchg
fiadd
mov
push
mov
mov
push
loope
gs
jns
test
pop
mov
cmc
mov
and
lods
test
jecxz
mov
dec
outs
adc
inc
repz
jmp
test
inc
fst
cmps
mov
js
ret
or
frstor
jae
cmp
mov
adc
push
push
mov
push
and
fisttp
jmp
scas
lds
or
retf
mov
pop
jp
xlat
add
test
mov
push
inc
aam
and
jbe
push
popa
xchg
mov
dec
xchg
xchg
mov
mov
test
adc
outs
hlt
out
inc
fadd
mov
cmps
mov
sbb
pop
xor
imul
ret
cmp
jbe
cmp
lea
pop
bnd
rol
xor
aaa
xchg
xchg
adc
cwde
sbb
xor
sub
aas
mov
gs
inc
scas
stos
mov
rcl
call
cmp
xor
mov
jmp
and
(bad)
mov
aas
cld
(bad)
repz
push
pop
or
xor
retf
jbe
mov
call
mov
jg
pop
scas
pushf
mov
sub
add
cli
pop
or
inc
mov
push
push
aaa
out
and
imul
dec
push
setno
ficomp
repz
movs
mov
in
imul
add
fld
out
daa
call
pop
mov
add
lods
cmc
call
and
stos
fnstsw
mov
arpl
cmp
cmp
mov
xchg
sbb
fwait
lods
dec
out
imul
ss
rcr
(bad)
jp
repz
adc
(bad)
loope
inc
dec
ja
xlat
jmp
inc
(bad)
mov
adc
(bad)
ror
pushf
inc
jg
fisttp
or
mov
sbb
cmps
xor
xor
sbb
popf
clc
jnp
xchg
imul
xor
cmp
ss
neg
lods
jno
mov
pop
mov
stc
lock
sbb
lahf
cmp
out
inc
shl
and
xchg
popf
data16
pushf
push
jmp
pop
jl
mov
mov
jg
lods
lods
aam
rol
sbb
xchg
pop
scas
inc
adc
mov
push
loopne
jmp
fild
sub
cwde
dec
sub
mov
(bad)
cmp
sub
cmp
ja
pop
fnstenv
call
mov
inc
(bad)
call
or
adc
test
lock
mov
inc
fs
jg
jne
in
fs
adc
das
jae
jmp
add
in
imul
sbb
out
xchg
scas
ret
adc
add
jmp
xchg
js
adc
push
pop
sar
pop
stos
(bad)
popf
or
or
mov
rol
mov
jne
nop
adc
xchg
jmp
xor
add
mov
mov
dec
stos
lds
stos
mov
pop
inc
mov
jno
add
cli
mov
pusha
xchg
stos
xchg
(bad)
jmp
jg
cmp
add
inc
inc
xor
test
add
outs
scas
cwde
pop
clc
call
rol
imul
sub
pop
fnstsw
cmp
rcr
addr16
das
cwde
inc
mov
retf
pop
xor
xor
sar
pop
(bad)
test
call
push
cwde
inc
inc
add
sahf
dec
out
jnp
push
scas
add
enter
jb
addr16
cwde
call
out
test
les
sbb
bound
mov
out
and
cmp
nop
aaa
add
loope
stc
cmp
into
add
in
sub
nop
fidivr
(bad)
into
mov
data16
jns
iret
and
std
add
not
nop
mov
and
idiv
push
or
imul
dec
stos
push
js
xor
pop
and
jg
int3
outs
push
ds
jb
jo
xor
cwde
stos
retf
push
jb
dec
mul
or
pop
or
jnp
mov
lods
daa
mov
aas
mov
sar
cdq
lahf
pop
test
mov
js
loop
mov
mov
xchg
(bad)
and
mov
sub
jae
pusha
and
jbe
and
rcr
jmp
retf
push
enter
push
and
and
pop
add
xor
out
jb
inc
sbb
add
cli
push
dec
sub
mov
mov
mov
imul
je
pop
inc
call
push
sub
dec
xchg
jmp
inc
sti
add
mov
jecxz
add
mov
mov
retf
fwait
cld
push
inc
xor
(bad)
xor
test
iret
inc
add
mov
out
stos
or
(bad)
xchg
xchg
jecxz
cmp
lahf
inc
loope
shr
lods
ins
push
lock
adc
das
cmp
ss
mov
sub
arpl
popa
aad
mov
add
cmp
sub
inc
neg
fidivr
stc
clc
(bad)
cmp
cmp
jne
sub
sub
xor
adc
addr16
repz
into
(bad)
mov
loop
xor
fsub
hlt
repnz
or
(bad)
out
je
addr16
pushf
mov
cmps
push
sbb
cmc
jb
jge
scas
test
pushf
sti
das
imul
rol
and
retf
cmp
inc
mov
dec
add
xchg
xchg
push
lea
leave
fidiv
and
jae
shr
xchg
adc
pop
ror
sub
push
inc
mov
neg
mov
test
int
pop
xchg
xchg
adc
sbb
xor
movs
into
add
in
xchg
xchg
(bad)
jno
and
sub
mov
aaa
pop
push
call
pusha
cmp
mov
jne
mov
div
xchg
ror
lahf
adc
fist
mov
sbb
(bad)
(bad)
push
out
ss
inc
cdq
pushf
sbb
push
test
int3
call
in
jmp
lahf
pop
xchg
adc
movs
and
cmp
push
mov
rol
arpl
int3
inc
push
mov
inc
aas
cmp
push
cmp
add
or
ja
and
push
and
xchg
dec
add
frstor
xor
and
and
sbb
pusha
inc
dec
jo
icebp
jl
sbb
mov
jl
push
pop
outs
outs
sub
(bad)
add
sub
add
int
fld
rcr
xchg
sahf
call
push
jge
xchg
mov
in
in
test
cmps
push
cmp
and
inc
cmp
mov
mov
mov
mov
push
ret
inc
push
inc
in
add
and
test
push
jle
xchg
dec
or
retf
inc
adc
popf
push
xchg
imul
retf
xchg
mov
ja
int
jle
or
push
enter
retf
mov
jb
repnz
stos
jecxz
sar
mov
dec
sub
je
dec
jo
adc
hlt
jb
mov
mov
arpl
or
not
test
sahf
mov
push
adc
outs
mov
xchg
mov
sub
mov
mov
sti
call
push
in
hlt
cmp
out
out
and
ja
sub
aas
push
jp
loope
in
out
shr
xchg
imul
test
or
aam
adc
test
push
xor
ficomp
mov
and
in
and
sbb
inc
ror
push
mov
sbb
xchg
jl
call
or
ret
pop
mov
mov
ins
pushf
fstp
fistp
cs
je
leave
or
jp
lea
or
mov
sbb
(bad)
call
in
dec
sbb
std
int3
cmp
mov
cmp
imul
lock
pop
fstp
mov
cmp
cmps
jmp
jp
mov
push
(bad)
lahf
repnz
push
xlat
dec
push
add
mov
imul
imul
int3
shr
jl
and
adc
lahf
imul
add
ror
add
popf
test
push
out
push
lods
clc
aad
ds
push
adc
sgdtd
popf
lods
jp
inc
mov
in
mov
pop
jbe
iret
push
pop
not
lods
call
jmp
enter
pop
mov
sbb
popf
(bad)
arpl
inc
outs
ficom
adc
xchg
xor
int
es
hlt
xchg
and
aas
jae
cwde
inc
das
pop
addr16
out
cmp
adc
daa
push
mov
ds
cmps
jb
mov
cld
cmps
xor
mov
mov
ds
mov
mov
aam
iret
xor
outs
or
in
cmc
shl
jmp
movs
data16
test
ds
lock
push
hlt
movs
sbb
jmp
mov
or
inc
out
pop
adc
mov
(bad)
jmp
pop
adc
add
or
pusha
fpatan
or
(bad)
mov
jb
data16
sub
mov
pop
mov
ss
repz
icebp
xlat
les
imul
sub
test
push
push
cmp
(bad)
mov
int3
ret
cdq
and
sbb
sub
cmc
shr
push
stos
ds
outs
dec
test
adc
lock
sbb
xchg
ins
sub
mov
test
pop
pop
push
jge
pusha
mov
sbb
jb
in
fidivr
test
mov
test
adc
adc
adc
loop
jns
sahf
lods
fcmove
nop
xlat
sahf
mov
gs
sbb
into
popf
retf
outs
push
xchg
mov
sub
lea
jg
loop
mov
cli
repnz
mov
(bad)
push
mov
ror
or
out
adc
adc
or
dec
sub
mov
movs
cmp
inc
sub
mov
mov
pop
retf
fcom
jns
mov
daa
inc
cdq
cmp
inc
ret
mov
sti
push
push
add
cmp
sbb
sbb
xchg
sbb
xor
jp
rcr
ret
mov
int3
adc
adc
cmp
cmp
(bad)
rcr
mov
sbb
add
retf
aam
int3
mov
mov
inc
mov
xor
mov
mov
(bad)
mov
xchg
jl
out
xor
dec
(bad)
int
dec
cmc
sahf
aaa
mov
mov
std
daa
pushf
je
popa
adc
neg
or
in
push
cmp
popa
xchg
mov
dec
inc
pop
scas
sahf
mov
icebp
pop
pop
rol
dec
mov
push
test
jecxz
add
mov
(bad)
imul
in
in
xchg
cmp
jmp
loopne
push
aad
ins
jl
mov
add
pop
xor
aam
push
inc
add
pop
pop
add
or
mov
ret
push
adc
push
retf
xchg
es
inc
mov
pop
enter
jmp
psubsw
push
imul
dec
fdiv
pop
cmps
dec
inc
inc
pop
popf
push
inc
f2xm1
or
shl
cld
xor
test
adc
lock
ins
shl
add
mov
mov
and
repnz
push
es
stos
mov
and
push
and
fisubr
xchg
or
pop
or
in
addr16
imul
out
imul
push
jne
sbb
push
fidiv
jno
sub
imul
shr
push
repz
rcr
xchg
iret
xchg
push
jmp
or
push
cs
push
jnp
scas
movs
jp
mov
aaa
xor
and
lds
add
push
cmp
or
push
mov
push
pop
mov
and
pop
add
cmp
in
test
dec
cmp
(bad)
and
sub
mov
mov
sub
xor
cdq
aaa
rcl
sar
movs
ss
adc
push
xor
adc
or
ret
lods
fild
mov
xor
jl
test
retf
in
imul
dec
cmp
xor
gs
das
lds
xlat
popf
hlt
add
arpl
mov
test
scas
cdq
bound
and
push
pop
out
in
into
push
addr16
dec
daa
shl
sub
adc
mov
adc
pop
cmp
shl
pop
xor
xchg
lods
dec
sbb
not
fs
cld
inc
push
nop
or
push
sub
div
cmp
ins
arpl
jp
(bad)
mov
add
lea
mov
sbb
adc
inc
add
cmps
jg
sub
loop
fistp
mov
pop
pusha
in
dec
pop
cs
pop
aad
xor
push
ss
xor
xchg
or
cs
lods
jnp
rcr
mov
stos
loop
adc
sbb
and
ins
js
mov
test
add
hlt
and
or
sbb
into
xor
ins
mov
jle
xor
pushf
stos
aas
movs
cmp
sub
vorpd
daa
rol
mov
cmp
sbb
add
sub
mov
int3
add
cmps
fsubr
sbb
fwait
test
lds
fadd
lds
(bad)
mov
bound
inc
es
jns
lods
out
or
pop
jae
pop
push
mov
pop
lods
sahf
cmp
hlt
xor
pop
rcr
cmp
mov
mov
push
mov
(bad)
int
loopne
(bad)
(bad)
(bad)
pop
rcr
jge
push
pop
mov
inc
iret
test
cs
(bad)
push
sbb
in
out
jg
imul
(bad)
loope
inc
retf
scas
aaa
inc
pusha
(bad)
and
(bad)
jecxz
pop
(bad)
mov
and
xchg
mov
stos
pushf
fidiv
imul
pop
push
popf
cmp
cmp
fimul
inc
mov
into
sub
out
push
push
sar
dec
idiv
shl
jge
jne
mov
jmp
out
pusha
out
dec
ja
out
arpl
add
xor
mov
fcmove
sar
je
enter
jl
cdq
fmul
push
lahf
fwait
mov
cmp
mov
jmp
int
sub
xchg
sbb
lock
add
push
imul
pop
xchg
mov
enter
push
jno
and
int
xchg
dec
mov
ins
into
(bad)
leave
fistp
mov
push
add
xchg
pop
cmp
ja
jge
push
pop
aas
cwde
inc
cs
mov
and
adc
(bad)
xchg
stos
nop
sahf
jecxz
mov
fistp
(bad)
outs
xlat
sub
cmp
and
pusha
movs
and
and
(bad)
aad
cmp
mov
neg
lds
in
aad
xor
mov
pop
stos
push
sub
adc
repz
mov
(bad)
cdq
mov
fs
inc
addr16
sub
(bad)
push
add
addr16
mov
inc
xor
lods
mov
adc
lea
mov
sbb
pushf
mov
push
sbb
add
push
gs
outs
sub
out
jecxz
repnz
movs
loopne
xchg
push
dec
hlt
retf
data16
mov
fmul
imul
test
in
cmp
sub
aaa
dec
movs
push
lock
ret
loopne
dec
sti
push
ja
add
cmp
dec
mov
shl
xchg
dec
int
fimul
emms
mov
out
popa
sbb
xchg
(bad)
(bad)
repz
setns
stos
xor
push
mov
jns
cmp
xchg
sbb
xchg
dec
(bad)
cld
test
or
mov
shr
xor
test
pop
mov
pop
mov
sbb
popf
fstp
out
push
add
loope
add
outs
mov
add
pushf
call
inc
dec
sar
pop
push
adc
and
cmp
mov
lods
mov
call
ret
mov
jne
call
mov
call
int3
jmp
or
rol
(bad)
hlt
dec
inc
aam
cs
add
xchg
retf
adc
push
test
inc
mov
scas
(bad)
cld
sub
imul
xlat
shl
iret
push
sbb
std
clc
inc
je
rol
lds
es
dec
add
popa
stos
add
lds
ror
push
add
aaa
cmps
int3
add
push
inc
in
mov
adc
fwait
int
outs
bound
scas
stos
push
in
rol
sub
sbb
jne
xor
push
and
loope
xchg
pop
cs
xchg
or
sub
inc
cdq
add
mov
pop
jmp
add
imul
es
cwde
mov
cmp
mov
iret
loopne
add
mov
scas
mov
push
retf
pop
in
push
mov
movs
or
(bad)
mov
inc
into
xchg
pop
pop
and
and
xchg
sub
mov
push
xchg
shr
mov
jl
add
outs
out
sbb
mov
add
push
inc
out
sub
pop
sti
frndint
jo
data16
xchg
retf
stos
call
add
iret
call
test
push
add
and
mov
mov
adc
push
popf
mov
pop
and
xlat
(bad)
and
adc
mov
fistp
ret
sub
sub
fwait
push
stc
jno
std
(bad)
mov
int
int
pop
jbe
popf
mov
in
mov
xchg
imul
mov
dec
sahf
icebp
mov
aam
add
outs
add
fwait
div
inc
mov
ret
inc
mov
add
and
pop
dec
dec
test
cmp
jb
pop
pop
test
pop
dec
sbb
(bad)
jae
movs
cld
mov
in
dec
or
dec
xlat
sahf
cwde
cmp
dec
fstp
stos
and
mov
inc
outs
inc
sub
and
mov
je
push
and
test
sbb
dec
loop
and
xor
mov
movs
ds
test
or
mov
ins
or
stos
xchg
ret
adc
xor
mov
push
mov
push
cmp
xchg
(bad)
cmc
jecxz
hlt
jno
mov
das
pop
bound
add
mov
mov
add
ja
pusha
push
rcr
cwde
lods
gs
jl
outs
(bad)
adc
sub
adc
cli
cmps
sbb
xchg
sub
jmp
ficom
(bad)
jbe
jg
lods
ins
xchg
fistp
xchg
xchg
movs
fstp
xchg
jae
fs
out
cmps
retf
cs
push
sub
push
inc
sahf
add
sub
bound
mov
mov
in
fs
call
je
adc
sub
and
push
retf
cmc
dec
(bad)
pop
dec
imul
dec
xchg
ror
mov
and
fcompp
gs
int3
outs
cmp
xchg
push
icebp
jmp
xor
inc
stos
jl
push
enter
bound
mov
mov
in
into
jle
push
out
mov
jns
leave
or
mov
mov
cmps
mov
jg
cmp
es
data16
jo
lea
add
mov
repz
fld
or
cmp
mov
xchg
imul
ror
cdq
or
jge
jno
cdq
imul
int
push
dec
mov
mov
call
test
pushf
pop
outs
push
jnp
lahf
fld
sub
cld
les
(bad)
mov
jmp
xchg
out
repnz
movs
cmps
cmp
mov
jg
scas
jbe
je
and
sbb
push
arpl
adc
inc
xchg
or
scas
cs
jae
outs
scas
jnp
imul
or
fld
lea
test
out
call
add
les
lock
rcl
add
int3
adc
outs
outs
stc
jle
xchg
lods
ins
ret
(bad)
adc
test
pop
and
add
int
ds
and
sub
daa
sub
inc
ret
jp
adc
pop
xchg
sub
xor
inc
adc
pop
xchg
mov
lock
lods
jae
sub
pop
jecxz
ja
adc
cmp
sbb
cdq
jmp
inc
mov
adc
aaa
xchg
scas
fist
xor
int3
retf
jmp
jle
and
(bad)
mov
scas
fstp
mov
adc
ja
mov
(bad)
pop
jne
sub
xchg
pop
xor
jecxz
sub
clc
mov
sbb
mov
cmp
inc
push
loopne
xor
loopne
or
mov
jno
mov
dec
outs
sbb
ins
out
shr
jmp
or
push
push
stos
ror
pop
addr16
sub
pop
and
dec
sbb
adc
xor
loopne
leave
test
push
ja
pop
sub
xor
pop
cmp
sbb
mov
sub
dec
cmp
xor
hlt
fcomp
sub
mov
jmp
push
push
adc
push
sbb
jb
movs
inc
or
cmc
movs
jle
inc
stos
pop
(bad)
out
pusha
rol
stos
and
popa
xchg
call
call
test
ret
mov
xchg
daa
daa
mov
adc
inc
repnz
xchg
loopne
or
mov
rcl
(bad)
xchg
or
fwait
into
out
cwde
and
adc
push
repz
pop
(bad)
loopne
xor
das
lods
or
popa
js
ror
shl
ins
pushf
ins
dec
push
xchg
outs
mov
enter
mov
jbe
lock
call
enter
not
fisubr
bnd
shl
jae
pop
sub
cmp
push
int3
scas
push
jo
sbb
add
mov
in
ret
test
int3
pop
outs
xchg
aam
loop
push
cmp
dec
lea
dec
inc
rcr
shl
fidivr
sub
pop
loop
add
mov
cs
inc
into
add
push
xchg
or
adc
fadd
es
pop
mov
fnstenv
sub
add
jne
jno
dec
pop
dec
xchg
xchg
inc
out
sahf
pop
fmul
add
mov
and
and
fsubr
ss
aad
sub
sub
enter
mov
mov
jmp
and
xchg
and
cmps
fwait
jecxz
in
movs
sub
dec
xor
mov
push
dec
fwait
les
or
pop
dec
xor
xor
idiv
adc
iret
push
or
push
fiadd
mov
jne
call
adc
mov
and
xor
dec
shl
enter
lods
jmp
add
sub
dec
ficomp
dec
cs
cmp
shr
lods
cld
loopne
xor
mov
das
sub
pop
jmp
fisub
push
fisttp
cmp
xchg
push
fucomi
mov
sbb
dec
dec
xor
retf
ins
sub
push
cwde
out
lds
jg
cli
cs
ja
call
or
shr
mov
loope
or
add
dec
xlat
pop
out
fwait
pop
fst
jae
arpl
sub
mov
prefetchnta
sub
sahf
pop
mov
cld
pop
jg
and
ins
mov
mov
dec
icebp
fiadd
and
int
(bad)
xlat
jle
cmp
mov
int
pop
add
inc
(bad)
rcl
mov
stos
sbb
xor
mov
cmp
inc
popa
or
jns
stos
fwait
push
es
lds
push
add
sbb
adc
xchg
fwait
pop
cmps
pop
leave
arpl
pop
stos
pop
in
(bad)
lds
pusha
push
xchg
movs
neg
not
cwde
sub
out
ret
imul
call
jae
xchg
add
gs
fbld
mov
mov
adc
mov
xor
outs
iret
sti
jb
inc
out
jae
xchg
ret
jge
jle
repz
dec
hlt
cmc
or
sub
push
daa
arpl
mov
enter
xchg
je
or
xor
inc
lods
(bad)
scas
call
popf
cmp
xchg
cld
mov
stos
fistp
and
xor
fs
mov
sub
xchg
in
fbld
dec
rol
stos
js
mov
outs
and
jmp
inc
xor
pop
test
xor
aam
je
mov
fucomp
clc
retf
out
and
retf
in
fistp
test
cmps
lock
repz
shr
sbb
je
popf
das
push
js
sbb
mov
dec
cld
into
add
int
and
mov
test
cmp
jmp
(bad)
cmovs
bound
jb
iret
fwait
out
iret
cwde
mov
and
mov
mov
shl
mov
out
and
aaa
xor
cmp
or
mov
mov
lds
retf
in
and
dec
pop
mov
push
and
pop
icebp
stos
aas
in
or
inc
test
inc
xchg
sbb
add
mov
repz
cli
into
into
pop
lock
cmp
ss
push
or
das
fwait
xor
dec
aam
add
int3
mov
xchg
int3
push
je
jg
sti
pushf
sbb
jg
jne
mov
fstp
ret
xchg
nop
adc
mov
inc
cmps
imul
and
push
fwait
jnp
or
jmp
push
cmps
cmps
or
sbb
les
push
aad
leave
sbb
mov
popa
xor
jmp
rcr
outs
dec
xchg
inc
daa
add
and
pop
pop
in
push
repnz
or
cmp
pop
out
fwait
sbb
popa
adc
push
leave
imul
out
inc
xchg
adc
and
inc
data16
int3
fdivr
mov
xchg
cli
out
sbb
sar
out
test
ret
sar
xlat
mov
add
fst
mov
mov
jae
test
jb
lahf
das
adc
ss
cli
jge
mov
aam
test
rcr
fs
jae
dec
jl
mov
in
fidivr
jbe
add
dec
push
cmps
inc
sbb
mov
and
cwde
jne
stc
xor
test
popf
jb
lods
sbb
push
pop
out
fwait
mov
jae
cmp
aaa
fcmovnb
jno
xchg
xchg
fcomp
push
dec
add
js
mov
xor
mov
add
dec
pop
cmps
add
cmp
ja
fisub
pop
lock
fs
pop
inc
mov
xchg
les
push
bound
sbb
mov
adc
mov
out
mov
scas
(bad)
dec
call
xchg
adc
or
mov
xor
out
jns
jne
ret
xchg
jp
jle
mov
or
sbb
pop
and
sub
enter
outs
xor
das
dec
push
adc
dec
dec
addr16
xor
xchg
fdivr
cwde
mov
or
mov
jns
xchg
rcl
outs
xchg
aas
mov
add
loope
mov
fsubr
cmc
push
sbb
fdiv
jecxz
ds
fdivp
and
arpl
sbb
cmp
pusha
(bad)
test
dec
out
pop
inc
fist
pop
add
out
xor
mov
xchg
and
xchg
add
retf
sbb
inc
dec
out
push
aad
xor
retf
and
ds
je
scas
dec
cmp
mov
stos
xchg
sar
ror
imul
xchg
cmps
stc
dec
sbb
push
jnp
jp
and
jae
jge
rcr
adc
inc
out
repz
xor
nop
xchg
in
add
arpl
sbb
sbb
or
mov
pop
and
gs
sti
retf
mov
xor
dec
and
sbb
inc
addr16
push
push
and
jg
fisub
sbb
cmp
test
xchg
retf
push
cmp
jo
xor
add
aam
fild
sbb
or
mov
cmp
movs
movs
mov
fld
xor
scas
int3
cmps
xlat
push
push
xchg
arpl
movs
call
xlat
jmp
pop
mov
and
mov
(bad)
mov
movs
xchg
pop
mov
adc
(bad)
imul
imul
pop
jns
(bad)
and
lods
add
mov
loope
mov
mov
ja
stc
loop
int3
inc
cs
in
movs
shl
in
and
movs
jnp
xlat
add
adc
nop
push
inc
sar
xor
xchg
and
inc
fdivr
xchg
push
inc
daa
stos
push
push
jp
ja
xor
out
stc
inc
daa
jmp
out
sti
jbe
repnz
xor
bound
pop
iret
mov
sbb
or
xchg
ja
mov
xor
test
int3
jo
xor
daa
pop
inc
jae
xlat
push
add
aas
mov
imul
(bad)
cld
mov
cmp
cs
sbb
sub
in
jg
retf
mov
xor
mov
dec
pop
mov
add
ret
xor
ds
dec
jge
cmp
sbb
(bad)
sub
add
repz
and
es
bound
ins
sub
sub
iret
inc
out
es
dec
fucomip
cmp
cld
ds
inc
cld
sub
cld
imul
mov
sar
out
mov
sub
out
dec
cmp
bound
stos
adc
add
push
jge
jne
lock
xor
addr16
(bad)
dec
jne
addr16
out
hlt
out
cmp
pop
fdivr
push
lods
fst
cmps
mov
mov
and
ss
lahf
loop
scas
xor
mov
adc
sub
xor
data16
pusha
inc
fadd
loopne
(bad)
or
into
sar
(bad)
xchg
shl
inc
(bad)
sbb
mov
cmp
cmp
mov
rol
les
pop
repnz
inc
mov
lods
sbb
adc
dec
push
sbb
and
leave
enter
out
xor
jo
sbb
dec
and
ds
cmp
clc
in
mov
pop
rol
xor
pusha
fldenv
test
ret
std
leave
loop
popf
lods
lods
inc
push
cld
or
(bad)
push
xchg
iret
cs
retf
mov
sub
push
jmp
ds
adc
sub
pop
xor
popa
les
mov
cmps
int3
sbb
mov
xor
imul
sub
js
jg
paddq
rcr
ja
adc
mov
(bad)
adc
lahf
mov
push
dec
outs
mov
rcr
retf
sub
sub
mov
mov
adc
ds
data16
and
imul
push
and
xor
cld
and
jns
xchg
sub
mov
xlat
sbb
stc
repz
les
jecxz
and
cmp
bound
retf
adc
stos
test
imul
push
dec
in
push
or
les
addr16
cdq
inc
mov
int3
mov
cli
loop
in
sbb
cmp
push
sysret
or
ror
jmp
aaa
retf
in
mov
add
dec
imul
inc
gs
mov
pop
and
cmp
jae
clc
mov
sahf
jecxz
jmp
xor
in
jno
ret
cmp
dec
push
jne
test
out
jbe
lahf
sbb
out
adc
ret
mov
int
fimul
push
rol
cmp
adc
mov
mov
inc
mov
cli
dec
or
adc
pop
pop
add
sbb
ds
mov
cmp
xor
mov
lahf
xor
pop
pop
xchg
dec
and
jge
or
in
sub
push
(bad)
enter
push
enter
add
mov
cs
test
xor
add
jge
stos
dec
or
mov
mov
popf
adc
jp
leave
xor
cmp
hlt
sub
pop
push
sbb
push
dec
mov
adc
push
mov
sub
xchg
pop
loope
fistp
dec
inc
(bad)
js
mov
nop
xchg
ins
(bad)
pushw
sbb
xchg
loopne
sti
sbb
cld
das
and
test
cmps
cmp
or
jecxz
call
cmc
cmc
or
cmc
mov
pop
xlat
dec
popa
icebp
pop
aaa
inc
aam
add
mov
movs
adc
xchg
cmp
ds
push
xchg
jmp
mov
aaa
scas
(bad)
iret
sbb
xchg
mov
push
imul
push
popa
inc
stos
dec
pop
push
ins
add
pop
mov
js
les
retf
movs
mov
dec
std
enter
add
add
test
loopne
sub
cmp
cmp
mov
sbb
(bad)
das
popa
enter
mov
adc
xchg
xlat
mov
and
mov
fbld
sbb
push
adc
and
mov
pushf
push
ins
sbb
jg
jns
pop
xor
sahf
(bad)
and
sbb
stos
mov
lds
pop
ja
mov
add
outs
push
mov
jmp
push
fnstsw
mov
mov
pop
fnstenv
test
rcr
mov
or
test
pop
xor
pop
jb
xor
in
(bad)
(bad)
add
push
loop
call
mov
stos
pushf
je
add
rcr
mov
push
cmp
push
aas
push
pop
test
out
add
pop
dec
xchg
jecxz
cmp
outs
out
mul
xchg
rol
xchg
pop
aad
rcr
inc
mov
loope
leave
sbb
mov
mov
out
sub
xchg
imul
cmp
pop
bound
call
icebp
or
icebp
ret
call
mov
jecxz
push
(bad)
mov
mov
push
jnp
push
inc
xlat
ret
cmp
movs
imul
or
das
movs
or
and
lea
jge
data16
jb
sahf
cmc
add
retf
add
lods
sbb
push
and
out
movs
jne
pop
mov
cmc
mov
sub
lds
xchg
bound
dec
das
mov
and
xchg
xor
push
or
jns
xchg
add
sbb
add
pop
clc
fcmovnbe
xchg
mov
cs
mov
(bad)
xchg
enter
adc
fcmovne
inc
cwde
xor
jmp
mov
mov
outs
pop
in
mov
cmps
call
or
inc
mov
mov
clc
nop
adc
sub
sub
jl
sbb
push
sahf
(bad)
cmps
scas
leave
adc
sbb
push
out
stc
pop
stos
push
(bad)
retf
jne
add
mov
mov
cmp
add
inc
mov
rcr
mov
cdq
aas
je
mov
push
pop
cmps
arpl
test
stc
retf
cwde
push
mov
sahf
dec
hlt
mov
dec
(bad)
pusha
mov
dec
aad
test
cmps
jecxz
and
into
fld
pushf
inc
push
xchg
dec
fwait
or
xor
fwait
(bad)
and
pop
and
mov
call
sti
pop
xchg
mov
nop
xchg
mov
aad
scas
stos
xlat
loopne
ret
and
mov
mov
(bad)
hlt
sbb
cmp
xchg
(bad)
mov
cmc
inc
mov
test
or
xlat
leave
or
and
mov
das
jecxz
leave
stc
lock
mov
std
dec
mov
rcr
inc
dec
fldenv
aas
mov
push
fs
popa
mov
or
mov
fcmovnbe
xchg
sbb
mov
fiadd
aas
mov
or
xor
adc
scas
pop
stos
adc
or
dec
cmps
hlt
(bad)
cld
adc
jmp
aam
leave
aad
jb
in
aas
cmp
scas
jne
pop
adc
jne
cmps
jo
loope
mov
adc
mov
inc
cmp
adc
sub
retf
sbb
push
pop
fisubr
imul
lock
sahf
sub
popf
xor
daa
shr
lock
fist
sub
addr16
inc
push
dec
mov
pop
stos
dec
pop
jns
jne
je
clc
push
dec
xchg
pop
pop
bnd
in
mov
je
retf
out
pop
scas
fidiv
out
dec
inc
inc
cmps
jae
mov
pushf
jne
hlt
dec
add
pop
lea
out
int
jecxz
sub
cld
xor
or
cmp
mov
pop
mov
push
mov
ins
xchg
push
pop
xor
icebp
pop
mov
fcmovb
jno
xchg
xchg
daa
lds
pop
(bad)
pop
xchg
fs
cmp
(bad)
jmp
in
inc
mov
ins
jg
adc
cmp
cwde
mov
pop
leave
xlat
icebp
cmps
add
jmp
pop
adc
lahf
ins
lods
xor
or
lods
shl
in
sbb
or
retf
fwait
pop
dec
push
pop
enter
aam
pop
jle
pusha
aad
inc
call
pop
lds
mov
outs
cmp
sbb
cmp
fidivr
xchg
fs
jo
mov
push
inc
pushf
mov
sub
inc
dec
and
mov
sbb
adc
pop
fisttp
mov
call
nop
xlat
mov
jmp
mov
fist
sti
in
imul
addr16
int3
jo
imul
dec
inc
jg
out
fbld
popf
mov
int3
pop
scas
outs
jo
(bad)
out
ss
inc
or
fmul
pusha
or
fsubr
in
test
lods
sbb
test
je
jmp
rol
ja
fst
adc
out
and
push
pop
aaa
sbb
fimul
add
rcr
test
icebp
fcos
mov
mov
jp
popf
jg
jns
ror
or
cmps
xlat
mov
ret
repnz
push
lds
inc
or
mov
sub
adc
inc
rcr
(bad)
daa
sbb
(bad)
ins
jne
dec
adc
pop
iret
mov
pop
in
or
and
push
stos
lods
xchg
mov
retf
inc
push
enter
jmp
xchg
xchg
pop
addr16
ds
or
repz
xor
push
test
or
daa
test
mov
push
into
(bad)
adc
fisttp
outs
push
pop
push
in
jmp
adc
sbb
je
jmp
fst
loopne
inc
leave
loopne
inc
mov
fcmovne
scas
daa
bound
dec
out
cmp
and
mov
and
fld
(bad)
mov
out
and
push
jno
lock
idiv
inc
call
fmul
dec
sub
mov
lahf
out
cli
or
xchg
cmp
push
retf
clc
mov
mov
xor
test
jnp
repnz
xchg
jmp
cmps
repnz
pop
shl
in
sbb
cld
push
sti
les
jmp
pop
xor
sbb
rcr
inc
xchg
movs
mov
mov
loopne
push
adc
fs
jle
cmps
xlat
cmp
mov
mov
pop
pop
push
sbb
cmp
sub
(bad)
fimul
sahf
popf
and
xchg
or
in
jmp
inc
out
leave
out
retf
inc
inc
(bad)
sbb
in
adc
pop
add
out
sbb
popa
dec
clc
inc
or
and
stos
xor
inc
dec
gs
mov
sbb
and
stos
inc
dec
cld
dec
xchg
out
cmp
pop
or
jns
shr
out
sub
int3
mov
push
aaa
imul
mov
fidiv
sbb
fadd
and
das
bound
dec
int
sbb
(bad)
or
mov
inc
lods
in
sbb
sbb
into
ds
add
test
push
rcr
fbld
jne
jmp
not
and
in
cdq
sub
and
jmp
pop
mov
jae
adc
jnp
jle
pop
xlat
xor
loop
xor
les
test
sbb
fs
std
movs
inc
xchg
dec
inc
xchg
pop
mov
cmps
bndldx
mov
pop
jae
or
xchg
arpl
outs
mov
mov
stos
repz
scas
imul
or
xchg
inc
jmp
lods
sub
xchg
mov
jb
data16
dec
push
mov
popf
pop
mov
mov
mov
fstp
fild
pop
std
not
jmp
test
retf
mov
ficom
ss
lahf
inc
or
cmp
push
jns
jp
sar
imul
pop
or
mov
scas
mov
(bad)
pop
loope
cwde
dec
test
(bad)
in
push
push
sub
push
dec
lea
sub
scas
inc
ins
adc
xchg
mov
bound
mov
sub
jae
outs
int
dec
pop
or
inc
jge
(bad)
push
pop
sub
out
mov
jbe
pop
je
(bad)
mov
mov
push
pop
jl
mov
mov
std
fcmove
jo
enter
jg
dec
fist
pop
jne
fucom
iret
in
imul
repnz
mov
push
ret
jecxz
sub
adc
ins
test
in
out
sbb
imul
idiv
xlat
push
ins
aas
dec
outs
std
inc
jmp
(bad)
stos
(bad)
mov
std
sbb
jns
cld
repz
std
movs
(bad)
pushf
push
xor
stos
adc
lea
xor
cmp
xlat
shl
test
cld
(bad)
or
pop
push
mov
fadd
mov
cmps
xchg
xchg
retf
sahf
jo
inc
cmp
test
mov
push
dec
fst
push
dec
mov
pop
adc
int
push
push
outs
cmp
mov
retf
pushf
cmp
int3
fadd
ret
int
and
xchg
adc
push
inc
lahf
xor
cmp
fst
add
or
inc
and
out
(bad)
dec
movs
inc
cld
call
inc
pop
outs
dec
(bad)
mov
push
sub
adc
mov
mov
stos
das
and
jnp
fwait
xor
mov
outs
fldl2t
sbb
rol
rol
adc
sub
inc
(bad)
push
mov
or
sbb
jecxz
test
addr16
or
mov
int3
adc
into
jbe
daa
aaa
fdivr
call
pusha
pop
movs
int3
push
sbb
aam
pop
loope
xchg
cs
dec
sbb
sub
or
pop
jg
enter
repz
repnz
loopne
inc
out
and
daa
out
xor
pop
inc
xlat
dec
xchg
add
pop
dec
xor
dec
pushf
pop
lock
inc
std
out
repnz
fisubr
sbb
mov
inc
js
aad
aaa
jge
pop
aad
into
aas
in
cmp
cmps
sbb
lds
pushf
sub
adc
shl
(bad)
push
jecxz
and
scas
inc
inc
outs
movs
mov
mov
movs
mov
dec
mov
js
sbb
sbb
mov
cld
push
cmp
sub
sbb
dec
mov
ins
mov
inc
sahf
sbb
outs
jl
call
mov
mov
(bad)
xchg
shl
xchg
mov
(bad)
out
cmc
(bad)
fiadd
in
scas
in
das
inc
sbb
xchg
pop
(bad)
jno
loope
or
dec
mov
mov
call
cdq
and
sub
push
xchg
push
xchg
jmp
stc
pop
sbb
jl
xchg
iret
pop
or
leave
or
mov
mov
and
sbb
mov
add
mov
mov
stos
push
cmp
sub
ficom
mov
ds
jbe
mov
pop
inc
fcom
xchg
lahf
mov
inc
(bad)
cld
test
jmp
clc
sub
sbb
test
mov
dec
scas
sub
mov
movs
lahf
add
fxch
cmp
inc
cmovo
inc
mov
sbb
jl
mov
loope
push
fwait
and
add
cdq
retf
mov
xchg
mov
mov
dec
call
(bad)
ds
mov
jnp
adc
sbb
sub
fabs
pop
add
sahf
lock
mov
mov
mov
test
sbb
dec
je
fcom
in
pop
mov
inc
add
push
push
pcmpeqw
(bad)
fcomp
iret
test
add
sub
mov
test
or
(bad)
or
mov
shl
test
xchg
in
push
xchg
je
(bad)
in
push
push
in
retf
mov
leave
pop
push
xor
retf
dec
enter
adc
xchg
lea
pop
pop
mov
(bad)
enter
xchg
aam
imul
(bad)
scas
shr
fdiv
sahf
sbb
out
xlat
push
cld
dec
xor
push
repnz
loope
sbb
ret
add
mov
aam
mov
xor
ror
and
out
daa
(bad)
mov
test
aad
arpl
dec
push
pop
sub
ja
out
inc
pop
(bad)
idiv
popf
clc
cli
sbb
lahf
xchg
inc
adc
pop
mov
mov
mov
rcr
dec
mov
(bad)
(bad)
jg
out
js
add
cmp
rcl
or
pop
je
int
scas
lds
ror
cmp
mov
cmp
popf
sbb
aam
leave
into
inc
call
mov
fild
sbb
mov
out
outs
ins
pop
jb
mov
lock
jbe
ds
inc
push
jne
sbb
sub
in
or
mov
sub
call
scas
dec
jbe
sbb
cmp
loopne
add
xor
stc
dec
sub
out
out
jmp
jmp
(bad)
fnstcw
movs
mov
in
in
dec
fadd
les
fwait
pushf
xlat
fsub
adc
hlt
icebp
sbb
sbb
cmp
pop
and
add
icebp
push
(bad)
cmps
sbb
cmp
or
nop
pop
cmp
or
lds
inc
out
jbe
mov
xchg
xchg
(bad)
pop
pop
repz
repz
fs
scas
adc
mov
ficom
arpl
popf
daa
loop
ficomp
sahf
add
mov
les
mov
sub
mov
sbb
ret
add
inc
or
psrad
mov
sahf
xor
mov
sbb
rol
ja
in
stc
nop
adc
push
mov
fld
lahf
push
lods
mov
sub
loope
inc
ficom
in
jge
mov
popa
loopne
xchg
in
aas
mov
stos
jmp
call
pop
ds
adc
jmp
stos
imul
bound
cmp
dec
outs
mov
dec
popf
cmp
sub
xor
popf
dec
fs
xchg
cmp
or
popa
adc
test
jge
pop
test
call
jle
loop
cmp
call
shl
mov
push
std
sbb
loopne
fisttp
test
sub
popf
push
pop
xor
shr
mov
xor
sub
sbb
mov
jg
ret
mov
cld
mov
push
mov
adc
enter
sub
mov
test
in
cmc
mov
add
popf
sahf
pop
ds
(bad)
in
sti
xchg
movs
inc
mov
fsub
xor
ds
test
add
aaa
xchg
add
out
in
fist
pop
jecxz
stos
inc
setb
(bad)
push
xor
not
popa
lea
rol
mov
(bad)
dec
and
mov
(bad)
xchg
add
sub
addr16
cmc
stc
out
movsx
ins
sub
sbb
pop
adc
test
jnp
xchg
nop
outs
aas
add
sbb
sub
out
jecxz
push
pop
sbb
out
and
(bad)
sbb
cld
mov
pop
or
xchg
enter
cmp
jns
call
push
add
mov
arpl
gs
jns
pushf
jno
jb
mov
pop
pop
idiv
dec
mov
push
dec
lock
sbb
(bad)
mov
sahf
pop
add
jnp
(bad)
jae
jbe
adc
ror
fist
and
fcom
(bad)
mov
jns
loop
ret
adc
lock
pop
inc
sbb
cmp
cmc
push
out
push
xchg
push
fcomp
daa
push
aad
sbb
scas
inc
cmp
dec
test
dec
push
add
add
fs
push
out
call
(bad)
mov
hlt
add
xor
dec
sbb
cmp
sbb
cli
pop
mov
sbb
iret
fcmovbe
adc
leave
rcl
arpl
test
(bad)
mov
enter
lods
mov
pushf
nop
push
out
pushf
and
add
mov
add
or
fucomp
nop
das
das
xchg
sar
jmp
sbb
cmc
xchg
adc
push
cmp
push
and
sbb
fadd
jecxz
es
add
mov
sbb
mov
bound
jb
sbb
js
sbb
xor
aas
outs
add
sbb
or
sub
push
mov
jg
clc
iret
cmc
je
repnz
mov
cmp
ret
sub
push
and
movs
sub
enter
and
ins
in
outs
adc
bound
lahf
jmp
dec
add
cmps
sub
xchg
mov
inc
jno
jmp
outs
jno
(bad)
push
cwde
xchg
pop
call
sbb
push
enter
sub
jl
lahf
loope
push
(bad)
pop
mov
xor
xchg
retf
adc
in
stos
or
lock
ror
sub
mul
rcr
aad
lods
jae
mov
in
cmp
push
dec
xchg
or
xor
xor
or
cmp
cmc
imul
call
add
jp
shl
cmp
jae
push
in
mov
loope
mov
mov
xor
push
push
pushf
outs
ins
pop
pop
mov
jge
mov
and
xor
dec
push
hlt
stc
(bad)
fcmovnu
les
pop
add
sahf
push
add
mov
pop
sbb
push
mov
scas
ret
leave
(bad)
cld
scas
call
aam
push
cld
nop
add
mov
mov
push
leave
sbb
jp
jne
mov
dec
mov
cld
dec
call
adc
clc
js
push
adc
ja
bound
(bad)
ret
mov
and
leave
lock
(bad)
ins
jnp
icebp
fwait
xchg
fst
jle
xchg
cmp
sti
aas
jg
mov
test
dec
popa
daa
jp
cwde
xor
dec
test
les
adc
mov
or
or
add
lahf
(bad)
ret
mov
das
imul
sbb
les
push
push
jle
cdq
xchg
jbe
scas
call
icebp
retf
jb
push
stc
ror
xchg
inc
push
outs
loop
and
dec
cs
cli
inc
icebp
xor
fs
xor
jne
sub
mov
cmp
out
neg
jno
test
js
inc
imul
inc
in
sar
(bad)
pop
mov
or
or
dec
or
ins
into
mov
add
inc
mov
push
mov
lahf
inc
test
sbb
sbb
dec
in
aas
loope
xchg
out
mov
fdiv
cwde
mov
mov
or
in
pusha
cmp
dec
cdq
mov
out
add
imul
sbb
cli
mov
loop
mov
fisub
and
inc
rol
(bad)
and
push
stos
imul
dec
jnp
sar
(bad)
arpl
je
lea
shl
imul
movs
mov
mov
jne
jl
out
xchg
cmp
dec
and
jecxz
xchg
fwait
dec
mov
arpl
mov
sub
push
or
stc
pop
out
cmp
or
jnp
lods
push
push
(bad)
loop
cmp
outs
jmp
xor
in
fadd
adc
cmc
adc
cmps
mov
gs
push
mov
es
shl
ja
(bad)
or
or
mov
ficom
cmp
cmc
stos
or
loope
sub
and
xor
icebp
stos
call
jecxz
ds
adc
add
into
stos
push
jbe
sub
mov
inc
ror
xchg
aad
xchg
sbb
lahf
retf
lods
das
out
xor
cwde
inc
xchg
sub
jno
shr
or
outs
sub
mov
inc
xor
mov
jp
into
into
or
fwait
xchg
pop
mov
in
adc
jecxz
js
sahf
pop
push
cwde
pusha
out
sbb
cmp
fst
(bad)
and
push
cmp
icebp
rep
imul
clc
imul
fs
stos
cdq
int
daa
or
mov
(bad)
popf
sub
push
cmp
int
movs
in
cwde
(bad)
mov
and
sub
xchg
aad
push
xchg
jnp
aam
out
inc
jae
test
cmp
jae
je
or
ss
xor
jne
fxsave
jge
mov
sbb
dec
xchg
push
in
daa
std
and
out
inc
pusha
inc
mov
retf
fwait
cmp
jmp
jnp
popa
leave
icebp
out
dec
pushw
(bad)
mov
movs
sub
mov
lods
sti
ds
out
sbb
and
nop
xchg
imul
fcom
mov
addr16
aas
xchg
mov
inc
mov
std
dec
mov
iret
pop
in
push
pop
push
in
mov
adc
call
sub
sar
sbb
jecxz
mov
mov
mov
test
rcl
sub
xchg
sub
pop
call
inc
(bad)
(bad)
xor
add
ins
pop
or
ror
dec
test
push
cmp
mul
sbb
pop
inc
mov
cmp
cmp
pop
inc
xchg
pop
pop
lods
mov
pop
add
sbb
xor
popf
cmp
les
into
push
cmp
cmp
cmp
(bad)
xlat
in
mov
push
(bad)
repnz
xlat
pop
rcr
jbe
addr16
or
or
into
pop
xor
sbb
add
add
and
cmps
out
pop
xor
push
dec
icebp
rol
clc
jge
xchg
movs
xchg
fdivr
mov
fstp
cmp
mov
test
mov
inc
pushf
adc
push
pusha
leave
nop
mov
jmp
dec
test
and
or
xor
or
mov
xchg
and
sti
mov
mov
jmp
dec
jle
xchg
sbb
push
pop
iret
sub
rol
push
je
jmp
xor
or
jne
imul
sub
rep
dec
jo
fisttp
mov
xchg
xor
leave
mov
mov
push
clc
hlt
fild
sub
mov
xchg
pusha
or
dec
inc
aam
popf
push
je
mov
into
push
call
and
inc
cdq
ins
fcomp
dec
cmp
sub
sub
pop
call
add
fsub
mov
pop
add
fidivr
or
arpl
fs
add
int
mov
into
cmp
imul
mov
test
sub
push
out
int
inc
inc
sub
xchg
xor
jno
ins
push
pop
mov
bound
iret
jle
popa
push
mov
hlt
add
inc
add
add
idiv
sub
pop
mov
jae
xchg
mov
jmp
shr
fstp
cmp
add
adc
push
mov
ins
jo
inc
sub
sub
repz
outs
js
pop
or
xlat
mov
ss
mov
nop
dec
ror
sub
fisttp
rcl
pop
jg
test
cmps
push
push
das
add
ins
cmp
dec
cmp
gs
and
arpl
and
and
jmp
ins
adc
push
shr
push
xchg
xor
mov
jl
dec
sbb
dec
(bad)
fild
stc
adc
out
ror
daa
stc
mov
inc
mov
clc
sub
and
mov
and
sub
sbb
pop
int
mov
out
and
sbb
cmp
das
mov
cs
loop
or
and
aas
add
cmp
sti
xchg
out
jno
adc
pop
lahf
repnz
or
enter
sub
hlt
or
cwde
hlt
outs
out
xor
sbb
fdiv
or
ret
shr
mov
lds
push
(bad)
out
pop
mov
retf
pop
scas
movs
in
push
pop
add
(bad)
std
mov
in
into
inc
add
jmp
add
fwait
or
fnstsw
test
call
jo
push
xchg
js
ficomp
and
movs
enter
cmp
dec
pusha
inc
jae
mov
push
cli
test
ss
xchg
leave
imul
jge
pushf
push
ja
rcr
xor
scas
jmp
mov
adc
clc
xor
pop
jmp
sti
add
stos
xor
pop
pushf
pop
cmp
mov
adc
test
mov
dec
push
stos
mov
fmul
test
jns
sub
test
inc
daa
and
mov
std
and
in
cmc
and
call
into
jne
jno
xchg
push
pushf
or
or
mov
div
ror
cmp
fnstcw
cmp
enter
cmp
mov
or
je
cmp
xchg
mov
ins
call
cmp
push
or
inc
scas
in
jp
or
sbb
getsec
in
xchg
fld
loopne
cmp
dec
cmp
in
jmp
or
sbb
out
sub
out
mov
or
(bad)
(bad)
xor
lods
outs
(bad)
or
jmp
les
xchg
aam
cmp
ror
mov
add
ficomp
ss
add
dec
arpl
mov
or
xor
or
imul
popf
rcl
daa
cmps
hlt
xchg
pusha
and
jle
dec
xor
xor
ror
pop
xchg
jl
add
inc
(bad)
mov
jmp
ja
xchg
mov
pusha
push
clc
lea
push
sbb
pop
ficomp
aas
lods
mov
dec
sbb
(bad)
mov
in
js
dec
add
jp
fdivr
push
(bad)
jbe
fst
mov
xor
mov
push
pop
or
retf
out
ins
aad
leave
sub
lock
mov
sti
cmps
test
nop
fist
js
shl
add
(bad)
out
test
jl
and
in
inc
jmp
cs
inc
cmp
fsub
xor
ds
mov
dec
jne
inc
ret
xor
outs
sbb
and
xor
out
adc
inc
enter
pop
jl
loop
push
les
(bad)
pushf
into
jbe
into
repnz
push
sbb
(bad)
test
fadd
fwait
in
test
mov
mov
ins
mov
adc
push
js
mul
add
popf
lahf
neg
int
add
daa
cmps
call
xor
addr16
sbb
ds
pop
jne
lods
shr
bound
mov
pop
sbb
adc
inc
pop
or
xchg
aad
repz
lods
les
int3
pop
sub
xor
push
sub
std
sub
stos
neg
inc
loope
js
pop
adc
cdq
cld
push
xchg
ror
jmp
ins
les
jle
lds
dec
jo
fs
clc
jmp
(bad)
jge
mov
jp
gs
scas
jne
sub
test
rcl
mov
call
sbb
outs
sub
cdq
gs
out
stos
push
inc
mov
cdq
dec
call
test
in
sub
mov
dec
adc
push
rol
icebp
dec
lahf
jl
dec
pop
call
inc
aas
(bad)
mov
scas
jmp
xchg
je
mov
rcl
pop
popf
lods
jmp
mov
int
stos
inc
jb
xor
iret
in
xor
(bad)
ret
lods
imul
mov
pop
xchg
(bad)
and
push
sbb
push
xchg
jmp
pop
and
es
mov
outs
and
xchg
clc
sbb
or
imul
pusha
mov
ror
jl
arpl
add
xor
dec
and
add
iret
loope
es
add
adc
(bad)
sbb
cmp
inc
cmps
into
dec
mov
and
adc
jb
push
mov
call
push
xchg
ret
mov
xchg
scas
shr
mov
xchg
push
cmp
mov
push
test
sbb
inc
mov
cwde
mov
pop
jg
inc
aas
(bad)
xchg
std
and
in
mov
mov
sbb
xchg
out
xchg
push
and
pop
loop
int
sbb
mov
sub
xor
sub
in
daa
int
cli
nop
lds
cmc
retf
sub
push
cdq
outs
inc
adc
mov
imul
repz
push
imul
(bad)
xchg
call
cmp
popa
mov
sbb
mov
mov
adc
fimul
pusha
inc
out
pusha
jmp
outs
cmp
out
cmps
ror
(bad)
ins
das
adc
imul
arpl
or
sbb
cmp
fmul
leave
add
inc
fcmovnbe
fs
push
popf
icebp
and
cli
idiv
fadd
in
repnz
and
inc
jp
jle
add
dec
rol
clc
push
add
(bad)
scas
or
mov
outs
icebp
xchg
out
gs
cmp
push
inc
xchg
xchg
sbb
push
cmps
cdq
sahf
xor
out
xor
dec
hlt
and
push
in
inc
out
push
mov
stos
xor
sti
xor
movs
stos
das
push
repnz
jmp
sbb
mov
or
jbe
pop
cmp
jmp
mov
and
cmp
pop
xchg
(bad)
les
add
jle
imul
xchg
add
cmp
mov
adc
(bad)
test
rdmsr
lahf
xor
jl
bound
popf
sbb
dec
jb
ret
mov
pop
xchg
jmp
xchg
push
call
add
aas
mov
pop
dec
ja
push
enter
jne
dec
jmp
adc
hlt
cs
dec
add
pop
xchg
sbb
pusha
out
(bad)
and
push
dec
lods
addr16
mov
stc
lds
push
outs
lods
inc
cwde
lea
xor
pop
push
mov
jmp
xchg
je
aas
sar
sbb
clc
lds
mov
pop
cmp
sbb
adc
adc
pop
xchg
adc
iret
sbb
cmp
div
inc
jmp
fwait
or
stc
scas
les
push
mov
lds
js
movs
xor
pop
fwait
inc
lahf
jmp
aas
jne
imul
mov
xchg
adc
icebp
jge
xor
sbb
imul
mov
dec
inc
push
xchg
xchg
push
add
adc
xor
mov
fdiv
(bad)
lock
push
xor
cmp
push
pop
jno
hlt
ds
cmp
int3
ret
mov
(bad)
test
add
cld
std
(bad)
outs
jne
lock
push
bound
(bad)
cmp
add
(bad)
loope
push
les
scas
xor
(bad)
jae
pop
cdq
js
push
mov
inc
pop
in
jb
sbb
pushf
adc
popa
mov
pop
das
cmp
mov
jae
out
ds
cmps
add
sub
les
jbe
jmp
ds
and
outs
cmp
dec
and
test
jb
sub
jno
dec
mov
or
mov
lea
addr16
arpl
fdivr
add
xchg
stos
xor
(bad)
ds
aad
dec
sahf
xor
jno
inc
rcl
fdiv
ror
(bad)
push
xor
push
imul
je
push
cmp
repz
adc
sub
movs
push
sbb
jp
addr16
dec
loope
inc
repnz
sbb
lahf
xchg
mov
cwde
xor
adc
push
and
and
mov
scas
add
xor
mov
xor
add
mov
push
adc
pop
and
int
jns
cli
push
loopne
jns
loope
push
(bad)
mov
aaa
or
addr16
push
in
dec
mov
shl
outs
xchg
add
addr16
push
mov
shl
mov
fdivr
fimul
adc
sbb
ins
test
stc
in
mov
int
pusha
mov
mov
pop
ror
xchg
and
in
cmp
push
mov
mov
cmps
in
dec
(bad)
arpl
and
dec
sub
(bad)
arpl
mov
scas
push
loope
(bad)
mov
iret
int3
cmc
addr16
mov
iret
mov
mov
sbb
xchg
cmp
jno
loope
mov
das
mov
cmp
inc
lods
xor
mov
es
cdq
movs
pushf
mov
faddp
jno
sub
test
sbb
add
int
cmp
push
xlat
dec
cmp
loope
loopne
mov
mov
ins
xor
pop
or
dec
shl
xor
(bad)
cmc
fist
xchg
sub
dec
xor
pop
loopne
and
loope
xor
add
retf
fsub
or
xor
shl
in
and
loopne
pushf
or
mov
xor
pop
int
xor
adc
fld
(bad)
xchg
sub
xor
cmc
shl
sbb
aam
imul
mov
mov
call
jg
sub
dec
push
lahf
js
shr
xlat
rcl
pop
leave
test
or
mov
ja
ins
push
ins
rcl
sbb
xchg
imul
mov
mov
cmps
cwde
out
loope
add
fcom
dec
mov
jae
inc
es
(bad)
xlat
lods
or
add
icebp
push
fwait
inc
movs
sbb
mov
cld
sub
dec
imul
mov
enter
add
test
loop
jp
lea
jmp
imul
pop
iret
xor
outs
sub
movs
imul
and
and
imul
movs
jno
add
jecxz
jmp
dec
scas
imul
sti
fs
add
arpl
leave
mov
jb
adc
sar
repnz
es
mov
arpl
imul
call
sub
mov
gs
or
sbb
ds
sub
fstp
(bad)
ja
pop
ss
xchg
mov
sbb
or
jge
pop
cmp
popf
adc
das
repnz
outs
stos
arpl
in
mov
cmp
cmp
gs
sbb
jge
dec
mov
mov
mov
imul
int
retf
mov
push
adc
fdiv
xor
jp
fmul
or
adc
mov
fdiv
push
sub
inc
in
inc
sar
jno
sbb
xchg
imul
and
in
cmps
sbb
pop
sub
repnz
dec
ins
in
mov
pslld
xor
push
(bad)
aam
inc
imul
mov
mov
jge
mov
(bad)
mov
jnp
imul
jne
add
jbe
test
pop
pop
aad
movs
popa
sub
adc
into
and
(bad)
movs
pop
or
in
lea
pop
xor
sub
or
jg
test
std
cmc
dec
retf
call
fst
les
cmp
lods
test
ret
jbe
jg
test
test
pusha
sub
xchg
loopne
test
js
call
loopne
jo
sub
ror
mov
adc
mov
shl
xor
pushf
xor
lds
in
inc
scas
je
xchg
and
pop
mov
scas
xor
mov
cld
adc
in
xor
(bad)
repnz
jl
sahf
push
mov
ret
pop
inc
mov
and
cmps
in
cmp
and
jmp
xchg
cld
in
sub
mov
and
aaa
and
mov
ret
cmc
sub
js
xchg
jae
cmc
in
mov
inc
mov
inc
fstp
and
retf
inc
sbb
int
inc
ins
mov
jle
add
or
iret
stos
adc
push
cdq
push
test
xor
cmp
xchg
je
retf
xchg
pop
imul
fcom
adc
out
push
and
and
mov
xor
aaa
sub
fadd
js
ret
mov
jmp
daa
jecxz
cmp
dec
add
push
and
test
inc
sub
out
cdq
mov
test
mov
inc
out
jno
and
cmp
dec
out
and
ins
ja
dec
pop
mov
adc
call
out
cmps
scas
sub
test
std
mov
jle
add
xor
out
jbe
(bad)
in
addr16
(bad)
lea
mov
jns
sub
add
jp
out
dec
add
fs
pop
stos
imul
add
popf
aad
test
inc
in
stos
xchg
movs
cli
shl
pop
push
retf
mov
and
test
push
lea
dec
jne
mov
cmp
cmp
rcl
cmps
xchg
repnz
jne
dec
push
push
cmp
in
and
adc
mov
out
js
xchg
mov
(bad)
ds
stos
inc
jg
push
mov
mov
xchg
add
pop
add
jmp
cdq
mov
in
ret
mov
add
shl
xor
mov
rol
mov
jmp
das
test
outs
(bad)
sti
ja
mov
fs
push
xor
dec
fbstp
fwait
adc
cld
add
xor
xor
jmp
ficom
clc
mov
mov
pop
mov
jmp
lock
imul
mov
pop
loop
not
sbb
fwait
xor
push
cmp
fldln2
repnz
fbld
test
sub
call
jbe
push
push
cmps
push
aad
test
xchg
ss
popa
xchg
mov
out
push
jmp
push
sbb
sub
sti
xor
mov
out
sub
mov
sbb
lods
jg
jg
cmp
inc
mov
cs
sbb
sub
mov
and
fistp
adc
fidivr
mov
enter
or
out
inc
adc
mov
mov
mov
push
es
ror
sbb
rcr
or
mov
xor
sub
ds
push
in
xchg
ret
dec
add
inc
add
mov
lahf
in
add
ins
xor
sub
push
push
pop
xchg
paddq
push
mov
jne
mov
cmps
adc
(bad)
(bad)
mov
mov
ret
xor
repnz
out
pop
and
sub
lods
lock
pop
adc
xor
rep
sbb
xchg
xchg
loopne
push
jo
adc
daa
xor
sub
dec
mov
mov
xchg
ror
mov
xor
mov
mov
fidivr
data16
repnz
sbb
iret
adc
out
or
std
mov
stos
ins
movs
sbb
test
leave
popf
adc
inc
test
(bad)
in
sbb
out
xchg
push
and
sub
mov
dec
inc
scas
outs
pop
push
fs
loope
xchg
jbe
sub
push
movs
lods
fidiv
fdiv
rcl
fcomp
jl
(bad)
fnsave
dec
cld
ins
imul
add
out
and
shl
xchg
cmps
ds
movs
cmc
sti
aaa
mov
(bad)
loope
pop
test
push
dec
and
dec
inc
outs
mov
jne
clc
loope
(bad)
push
jae
pop
xchg
ja
(bad)
and
rol
clc
fild
mov
pop
iret
cmc
lods
adc
cs
jp
add
xor
mov
or
div
xchg
out
mov
fadd
push
push
inc
pop
mov
push
jns
add
inc
push
sti
push
dec
sub
add
movs
dec
inc
push
pop
or
jbe
xor
rcr
out
and
ficom
imul
pop
pop
mov
addr16
xor
dec
ins
cmp
push
jae
addr16
push
cmp
sbb
adc
inc
mov
lods
call
lods
daa
mov
mov
pop
sahf
and
dec
sbb
out
mov
in
xchg
xchg
ins
enter
jno
mov
or
inc
xor
stos
jno
cdq
push
sub
add
jae
add
adc
sbb
push
adc
and
xchg
and
sub
call
xor
mov
dec
cmps
or
cmps
retf
fwait
out
or
push
repnz
adc
inc
lds
in
xor
mov
mov
scas
sub
mov
mov
lds
xchg
pop
enter
popa
data16
stos
in
sbb
add
or
rcl
sar
mov
sub
jo
jbe
movs
xor
jnp
ss
imul
and
movs
ret
mov
lea
mov
pusha
xlat
test
in
push
pop
popa
inc
js
daa
mov
retf
and
pop
push
inc
jle
leave
mov
jecxz
test
idiv
rcr
call
fisttp
or
sub
out
pop
xlat
mov
dec
pop
adc
or
fdiv
mov
int
pop
cmps
xor
(bad)
xchg
mov
jnp
mov
stos
inc
fild
test
xchg
jle
xor
dec
sub
loop
push
(bad)
mov
clc
mov
sbb
sbb
pop
cld
(bad)
popf
and
pop
(bad)
retf
outs
add
mov
stos
jecxz
lods
(bad)
lea
cmp
(bad)
push
(bad)
ds
ficomp
xchg
movs
mov
inc
sbb
jge
adc
in
movs
pop
xlat
xor
xchg
stc
xor
adc
and
mov
scas
push
mov
jle
push
xchg
call
xchg
std
sahf
sar
and
push
jle
call
dec
(bad)
mov
inc
sbb
sub
sub
xor
ins
pop
test
ins
add
bound
loope
cli
in
nop
pop
fimul
sbb
mov
test
iret
dec
test
std
sbb
fadd
xchg
stos
cmp
push
nop
xchg
push
out
sub
ret
dec
shr
jb
mov
inc
mov
js
sbb
pop
arpl
stos
movs
dec
frstor
and
jbe
jae
xchg
(bad)
dec
add
push
popf
sub
(bad)
dec
cmc
sbb
lods
leave
or
rol
dec
fisub
clc
retf
mov
jmp
movs
xchg
mov
mov
(bad)
(bad)
into
sub
std
sub
fistp
hlt
sub
add
push
mov
inc
fimul
xor
xchg
inc
inc
xchg
mov
shr
pushf
fcomp
add
cmp
xchg
gs
xchg
not
xchg
push
adc
pop
jb
mov
movs
mov
pop
ja
sub
xchg
scas
inc
aad
in
int
sbb
push
xor
pop
div
mov
xchg
les
imul
sbb
inc
xchg
jne
lock
sbb
outs
mov
xchg
inc
xchg
ret
xchg
adc
dec
cmp
sub
scas
adc
ja
sbb
jmp
clc
inc
xor
daa
js
into
cld
inc
iret
and
sub
sahf
out
sbb
mov
dec
jl
push
push
pop
cs
jle
add
xlat
mov
add
xchg
das
das
inc
in
push
add
inc
aad
dec
and
aas
loope
jl
loopne
xchg
xchg
in
pop
mov
out
fwait
sbb
movs
push
jo
or
mov
test
jle
inc
ss
xor
mov
jp
ret
out
cli
ret
mov
sub
in
enter
shufps
outs
cvtps2pi
loopne
jb
mov
mul
jmp
fbstp
lods
sbb
and
or
xor
imul
sub
(bad)
jecxz
cmp
inc
cmp
sub
scas
push
repnz
mov
cdq
int
into
jb
aad
mov
cmp
outs
ret
xor
shl
or
out
cmp
loopne
loopne
iret
in
mov
sti
add
out
xor
push
pop
cmp
xor
xchg
lock
retf
dec
push
shl
lods
or
icebp
mov
and
push
cmps
inc
or
out
pop
out
std
sbb
jmp
loop
add
ret
outs
daa
or
pop
je
inc
jo
xlat
push
(bad)
je
maskmovq
neg
push
mov
mov
ins
movs
in
mov
jg
inc
neg
mov
jmp
mov
pop
inc
sbb
cmps
xor
jp
push
and
or
or
xor
repnz
out
inc
sbb
mov
cmc
pop
jmp
inc
or
pop
mov
out
mov
(bad)
or
(bad)
cmps
mov
in
mov
adc
or
int3
or
add
adc
ret
push
xchg
push
add
adc
div
ins
mov
(bad)
lock
adc
push
adc
jl
cmovge
ror
push
test
jo
xchg
sahf
in
sub
inc
push
add
push
jnp
aas
jle
add
in
ds
dec
jno
add
es
fisubr
cmp
ja
add
push
repnz
inc
jcxz
scas
pop
dec
aas
inc
or
mov
das
dec
lea
adc
and
arpl
std
sub
push
and
scas
sar
mov
push
(bad)
jle
out
push
add
mov
retf
or
add
mov
dec
les
je
mov
cdq
dec
aam
dec
lock
fisub
jl
cmp
pop
and
push
clc
sub
out
mov
inc
enterw
(bad)
push
and
add
inc
ret
adc
cld
in
pop
xchg
ja
push
xchg
inc
mov
mov
fnstsw
dec
push
mov
arpl
push
lahf
inc
mov
xor
mov
rcl
into
das
into
fisubr
mov
dec
and
jo
push
sti
lods
xor
inc
or
aad
mov
push
out
cld
xchg
je
mov
test
jg
(bad)
je
jns
sbb
sbb
daa
pop
fdivr
push
sub
in
les
sbb
mov
call
push
cld
nop
mov
or
fisttp
cmps
sub
movs
ds
inc
(bad)
cwde
out
ins
sub
mov
mov
mov
fldenv
jg
adc
add
(bad)
movs
mov
mov
outs
push
or
mov
retf
mov
imul
iret
je
outs
jbe
sbb
jl
leave
sub
add
mul
imul
bound
lds
popf
pop
mov
pop
leave
not
es
xor
mov
xchg
pop
sahf
iret
add
lea
mov
sub
shl
push
and
add
idiv
jge
sahf
xor
pop
pushf
jb
jo
pop
xchg
fnsave
push
push
jno
fild
int3
ins
arpl
lods
scas
sub
sub
or
pusha
and
aas
jne
mov
cmp
mov
and
in
daa
dec
dec
imul
pop
repz
lahf
fsubr
stos
jecxz
into
scas
movs
popf
arpl
xchg
cs
divps
test
mov
adc
inc
dec
sbb
add
in
dec
nop
gs
shl
cwde
ss
mov
mov
jmp
(bad)
xchg
stc
rcl
mul
cmp
pop
mov
shl
and
mov
imul
es
mov
scas
mov
loop
loope
push
xchg
lea
dec
jae
pavgw
rcl
jns
lea
fisttp
leave
mov
ins
fs
push
dec
cwde
cmp
aad
and
xchg
cli
push
cmp
push
sub
jae
sbb
xchg
pop
test
popa
dec
jp
imul
pop
add
retf
lods
xor
adc
aaa
jae
movs
pop
push
push
xchg
and
ror
jmp
add
or
ins
adc
inc
add
adc
ja
(bad)
mov
scas
mov
push
ins
in
jecxz
(bad)
ins
out
fild
mov
in
cmp
out
rol
cmp
dec
mov
xor
xor
(bad)
scas
and
mov
sbb
push
sbb
sbb
mov
mov
push
in
and
cs
add
cmp
mov
sub
mov
xor
aad
inc
dec
repnz
add
enter
push
and
dec
dec
movs
and
cs
lods
mov
sub
mov
movs
je
cmp
(bad)
xor
jne
clc
pop
push
ret
xchg
ret
adc
cmc
(bad)
shl
iret
push
xchg
or
imul
cmp
in
sub
pop
std
and
mov
aas
mov
loop
aas
dec
inc
sub
dec
cmp
mov
jbe
mov
test
daa
lds
inc
pop
or
out
iret
xchg
push
mov
retf
int
mov
cmc
outs
mov
lds
cmp
je
cwde
(bad)
stc
mov
out
loop
jmp
cmp
mov
xor
movs
pop
das
or
mov
retf
adc
shl
pop
fimul
xor
mov
pop
mov
pop
sbb
aas
mov
in
jb
dec
sbb
test
mov
mov
jno
mov
cmp
jge
xchg
cs
es
inc
cdq
out
mov
mov
notrack
inc
jmp
push
sub
sahf
adc
rcr
sbb
int3
out
cmp
lahf
loop
mov
ror
push
js
lock
jno
mov
cmps
xor
jae
ds
aam
mov
ins
test
mov
sub
retf
loop
sti
outs
imul
push
or
cld
add
popa
arpl
dec
je
xchg
adc
es
sbb
mov
push
lea
sti
jmp
xor
pop
cld
xchg
jnp
imul
mov
and
jbe
sbb
je
mov
inc
aas
cmp
push
inc
je
mov
in
or
dec
and
mov
(bad)
adc
cmc
adc
mov
scas
in
push
or
das
(bad)
iret
jne
fbld
nop
inc
lock
inc
cmp
not
mov
fisttp
dec
xor
in
xchg
ins
mov
push
cmp
cwde
rol
mov
rcl
fs
mov
xchg
ud2
mov
int3
pop
in
lock
cmp
add
mov
outs
dec
repnz
test
dec
xchg
add
ss
or
adc
stos
mov
inc
(bad)
cmp
mov
shr
sahf
lock
movs
movs
out
or
pop
and
repz
jb
dec
daa
les
push
(bad)
(bad)
push
test
push
lock
xchg
pop
jnp
cdq
xchg
lods
into
out
fcom
lods
leave
rol
add
fcmovne
jmp
retf
xor
dec
clc
cdq
fild
sahf
shr
(bad)
fsubr
loope
fsubr
in
das
or
int3
cmps
xor
pop
push
sub
cwde
mov
call
jno
outs
mov
pop
ss
shr
push
mov
sub
(bad)
into
push
fidiv
adc
iret
test
mov
jmp
adc
(bad)
je
enter
push
sub
psubq
xor
jl
dec
stos
sbb
xchg
call
je
xchg
sub
push
jno
xor
cmps
cmp
arpl
push
pop
xchg
push
hlt
loop
mov
xchg
cld
shl
imul
pop
std
and
xchg
(bad)
push
aam
push
sub
outs
cld
in
mov
not
pop
scas
fild
js
mov
cmp
pop
dec
mov
jecxz
mov
add
mov
outs
jl
add
jge
call
mov
shr
jae
and
popa
(bad)
in
fwait
enter
inc
popf
and
mov
into
das
xchg
les
mov
mov
bound
inc
sub
xchg
aam
ror
outs
pop
xor
jmp
aaa
pop
inc
stc
dec
imul
in
ins
mov
mov
adc
in
stc
fdiv
arpl
dec
repz
push
add
ret
xor
jmp
adc
hlt
xchg
jle
dec
inc
mov
mov
sub
mov
mov
enter
popf
std
mov
popa
punpckhbw
jns
call
adc
push
push
aas
xchg
push
mov
icebp
jns
jbe
pop
sbb
ret
push
bound
mov
fst
jmp
xlat
scas
inc
jmp
aas
repz
fisubr
adc
sbb
inc
rol
das
lods
ins
int
fsub
les
scas
jecxz
rcr
imul
ret
lods
mov
xchg
jae
mov
jns
adc
lds
js
push
dec
jne
fdiv
shl
in
inc
mov
movs
add
cdq
scas
stos
and
sbb
cmp
in
ror
cmp
lea
in
push
xchg
and
je
push
mov
push
sbb
xor
shr
dec
ss
cdq
cmp
cdq
sub
sbb
add
mov
dec
sub
into
pop
adc
xchg
jbe
aam
cld
pop
in
rol
fldz
adc
cmc
fld
dec
push
push
jno
sbb
mov
in
mov
stos
bound
mov
and
xchg
mov
lods
add
repnz
test
stos
push
push
dec
dec
sbb
lds
jecxz
call
(bad)
dec
jle
inc
sahf
iret
add
sbb
sbb
mov
adc
scas
(bad)
and
mov
fcom
bound
dec
jecxz
jnp
fs
jnp
cmp
lock
mov
dec
jbe
push
movs
enter
test
pop
xchg
xor
lahf
xor
test
mov
repnz
fcom
push
ds
sub
and
fld
pop
jmp
mov
sub
xor
push
mov
test
push
xchg
mov
mov
mov
fnsave
rcl
outs
pop
pop
jmp
ror
pop
mov
dec
outs
xor
test
int3
stc
cmp
pop
push
push
int3
fwait
loop
jg
mov
stos
adc
test
jmp
jmp
shl
stc
sub
inc
neg
test
mov
mov
adc
mov
cmps
and
ss
cmp
cmp
cs
jbe
push
bound
(bad)
pop
push
pop
popa
icebp
lahf
push
(bad)
clc
jbe
dec
lods
pop
pop
jmp
gs
sti
arpl
out
push
or
rcl
dec
retf
xchg
(bad)
push
adc
lock
aaa
cmp
mov
lahf
adc
pop
jecxz
sub
add
jns
sub
popa
test
inc
aam
addr16
test
mov
mov
(bad)
jnp
aad
mov
fcmovb
inc
dec
cmp
cmp
dec
es
push
out
dec
pop
rol
aas
sti
sti
adc
adc
sbb
xchg
fsubr
xchg
sahf
push
pop
xchg
ins
loop
sbb
mul
jbe
dec
mov
xchg
fst
retf
mov
pusha
fnsave
jb
aad
xor
loope
dec
sub
cmp
into
popf
fstp
or
or
aaa
pop
jb
jmp
or
loopne
or
inc
and
ror
outs
idiv
cmc
adc
lock
outs
sub
addr16
pop
xchg
out
frndint
shl
inc
js
push
xchg
push
mov
inc
dec
(bad)
xchg
popf
inc
sub
rol
xchg
enter
sub
retf
cmps
fidivr
jle
nop
movs
or
jae
adc
adc
jb
mov
pop
inc
lds
rep
sub
mov
inc
xchg
inc
mov
imul
cwde
jno
mov
into
out
sti
js
mov
clc
fiadd
cld
fnstsw
xor
xchg
inc
fwait
cmp
and
mov
std
ficomp
neg
push
xor
xor
stos
or
cmc
cmp
fs
xor
jmp
cmp
fxch
jge
nop
sub
(bad)
mov
and
cli
or
fsub
sub
mov
mov
stos
and
leave
idiv
pop
clc
jg
xor
mov
mov
ins
and
in
mov
int
add
enter
push
cmp
test
sti
das
idiv
jge
or
and
dec
xchg
and
popf
ja
xchg
loopne
adc
cli
or
pop
test
cld
loope
fld
shl
inc
jns
ss
mov
inc
pop
test
das
je
ins
push
mov
jmp
mov
(bad)
in
push
outs
xor
das
mov
sbb
adc
mov
mov
jl
xchg
int
mov
(bad)
in
jmp
or
mov
je
fwait
mov
mov
fwait
jbe
push
and
imul
mov
lea
xchg
popf
sub
arpl
jne
or
mov
call
push
mov
jmp
mov
xchg
mov
out
gs
stc
jl
rcl
lds
mov
ja
scas
pop
mov
cmp
adc
daa
movs
jb
jnp
imul
sbb
sti
stos
mov
mov
mov
pop
aad
out
scas
jg
mov
rol
mov
dec
sbb
inc
push
jbe
mov
jne
popa
push
jne
ret
ret
mov
nop
test
movs
xor
sbb
mov
cmp
and
dec
adc
cmp
js
call
dec
clc
or
sbb
cmps
pop
mov
pop
arpl
or
adc
mov
push
dec
imul
mov
add
(bad)
ss
push
xchg
ror
xor
push
pop
and
std
dec
js
inc
push
jle
popa
xchg
rol
mov
pusha
mov
repnz
inc
cmp
push
mov
imul
call
js
xor
leave
popa
lock
shl
mov
dec
push
imul
adc
dec
jnp
sub
or
xchg
arpl
inc
xor
clc
sbb
sahf
jle
jo
stos
repnz
pop
mov
mov
mov
xor
mov
add
(bad)
js
and
and
(bad)
push
shl
enter
jmp
and
jge
nop
pop
sbb
lahf
das
iret
iret
adc
sbb
mov
lods
movs
push
sub
xchg
(bad)
ror
lods
mov
aas
jecxz
or
dec
jle
mov
cs
inc
test
adc
(bad)
pop
movnti
lods
sub
xchg
xor
fcom
pusha
cwde
push
pop
adc
aad
or
cli
jbe
or
mov
adc
test
gs
jb
push
jno
test
ja
fidiv
jbe
movs
pop
enter
cmp
push
cs
lock
sbb
enter
ds
jle
adc
cmp
or
inc
sub
inc
and
jb
(bad)
aad
push
sbb
aaa
jno
enter
dec
in
xchg
inc
dec
sub
xchg
mov
sbb
push
push
jmp
fld
add
or
cmc
sbb
xor
lock
nop
xor
inc
mov
hlt
mov
push
aam
in
adc
jl
adc
(bad)
out
cmp
out
inc
push
pop
cmp
ja
mov
or
loope
push
mov
push
hlt
ja
dec
aad
mov
loope
sub
pop
mov
mov
mov
clc
or
xchg
sar
push
xchg
out
fdivr
xchg
fucomi
dec
stc
lahf
lods
dec
stos
xor
(bad)
enter
imul
xchg
or
xor
push
inc
cmp
pushf
pop
sbb
mov
pop
in
clc
jb
in
and
and
ss
cmp
out
inc
out
hlt
pusha
enter
mov
or
gs
not
repnz
jl
(bad)
mov
mov
out
leave
cmp
pop
sub
out
jno
jle
sahf
je
add
jnp
lahf
cmp
inc
or
imul
push
lahf
out
sub
add
cdq
fdiv
rcr
ficomp
(bad)
std
aas
call
icebp
ja
nop
and
stos
dec
xor
call
pop
mov
jno
sbb
adc
fwait
xchg
ret
jbe
mov
inc
push
adc
nop
dec
pop
ja
jns
mov
lods
jo
test
mov
sub
arpl
sub
pushf
lods
sahf
test
test
add
sbb
mov
pushf
movs
jae
jge
adc
dec
cs
ror
xor
in
jle
jnp
test
jge
inc
xor
js
lock
mov
addr16
sbb
outs
adc
adc
sub
cmp
icebp
stc
or
popa
sti
xchg
ins
hlt
jns
pop
enter
movs
push
dec
cli
push
jl
shl
and
jae
cmps
jne
int3
jns
fsub
lods
cld
out
jle
inc
aam
ss
mov
mov
ja
sbb
or
and
fsubr
enter
cmp
add
mov
nop
in
push
aaa
cmp
fst
les
bound
inc
mov
cmps
mov
xor
pop
pop
xchg
xchg
dec
adc
fisttp
xchg
pop
fwait
pusha
push
mov
retf
stc
xor
fs
xor
leave
ds
pop
jmp
jns
out
jo
mov
ss
and
pushf
loop
fild
ins
push
shr
and
pusha
xor
push
jl
push
repnz
sub
sub
dec
and
ins
cld
in
lds
push
and
fcom
jo
push
xchg
push
inc
in
scas
xlat
shl
leave
out
or
mov
movs
jl
xlat
sub
sbb
add
psrlw
mov
dec
inc
and
(bad)
xlat
pop
pushf
sub
inc
mov
lods
pop
retf
movs
xchg
stos
ja
test
mov
push
loope
push
cs
xchg
cmp
push
dec
sub
mov
adc
test
hlt
pop
in
mov
ficomp
pop
mov
and
sahf
cmps
aas
pop
push
leave
dec
test
popa
mov
mov
loopne
push
cs
and
cmp
mov
ja
dec
jle
jl
test
add
ins
jge
movs
movs
test
imul
(bad)
ins
xor
jg
and
push
cmp
leave
mov
subps
cmp
sbb
fst
mov
jp
or
into
add
cmp
xchg
cmc
es
push
cmp
hlt
cdq
mov
jmp
stc
push
xchg
gs
into
jo
mov
mov
mov
pop
aas
hlt
scas
leave
mov
sti
sbb
fisubr
(bad)
adc
stc
movs
and
call
or
jns
not
ror
and
jle
or
std
mov
daa
add
mov
cmp
imul
mov
cmps
or
fdivrp
mov
and
outs
loope
std
pushf
xlat
push
call
daa
mov
ds
shl
retf
sbb
xchg
xchg
call
fbld
rol
aaa
rcr
icebp
div
test
lods
xor
mov
call
retf
xlat
sub
aaa
cmp
addr16
retf
inc
movs
push
(bad)
cs
shl
pop
mov
pop
push
outs
cld
clc
dec
xor
out
push
ds
outs
cs
out
cmp
cmp
mov
xchg
mov
push
add
in
inc
mov
lea
pop
xor
rol
lahf
dec
pop
scas
dec
inc
and
repnz
xchg
or
std
pop
jo
adc
pop
mov
xor
sub
(bad)
cmp
jmp
add
fidiv
pop
cmovnp
mov
pop
mov
daa
adc
clc
(bad)
clc
inc
or
mov
xchg
loopne
emms
aaa
lods
push
loope
jl
jns
pop
adc
fiadd
jp
les
in
js
sbb
imul
in
test
sbb
gs
daa
es
pop
mov
inc
xchg
test
mov
fist
aam
jmp
(bad)
adc
arpl
add
push
push
sbb
push
mov
sbb
xor
sbb
mov
cmp
add
data16
xchg
sbb
loopne
ins
pop
lock
adc
mov
adc
adc
adc
inc
xchg
repnz
es
and
cmp
mov
mov
push
nop
jb
out
adc
test
je
test
xchg
arpl
sbb
int
sbb
and
xor
movs
shl
jns
sahf
loop
pop
inc
add
push
lock
in
and
aad
push
(bad)
int3
push
dec
out
mov
addr16
ror
dec
test
mov
popa
jle
xlat
and
mov
inc
adc
sbb
adc
xor
popa
movs
or
mov
cmp
pusha
(bad)
mov
pushf
loopne
adc
jmp
(bad)
imul
push
fcomp
xor
fdiv
mov
sbb
sbb
xchg
test
pop
pop
xchg
or
gs
xor
mov
in
lea
mov
lods
mov
pop
sbb
mov
ficomp
push
and
stos
loop
pop
(bad)
ror
pop
lahf
aad
daa
ret
dec
outs
sbb
ficomp
or
mov
ds
dec
mov
xchg
and
lods
dec
ss
(bad)
movd
sbb
inc
push
jge
shl
jge
push
shr
xchg
push
dec
mov
enter
scas
pop
fwait
ret
push
es
icebp
aaa
cmps
js
xchg
loope
out
int
stos
xor
cmp
jmp
dec
lds
or
loopne
test
or
dec
pop
xchg
int
or
xor
icebp
cmps
or
leave
stc
mov
pop
cmc
rcr
cmp
push
iret
pop
pushf
cmps
sti
adc
(bad)
xchg
push
xor
cmps
fwait
xchg
mov
jns
loop
loop
cld
or
mov
repz
sub
dec
sti
arpl
xlat
jmp
mov
and
mov
call
scas
cmps
loop
les
push
jae
ret
fmul
sub
popa
es
xchg
aam
call
dec
mov
sub
mov
xor
imul
clc
js
mov
popa
fistp
neg
jg
mov
(bad)
test
push
ret
test
dec
mov
test
add
xor
jge
pusha
outs
mov
push
fwait
ins
xchg
daa
cmp
imul
cdq
xchg
out
mov
dec
sub
imul
xchg
repz
push
mov
je
pop
sub
sahf
mov
inc
push
call
push
xor
sub
fdivr
mov
out
mov
xlat
cmc
adc
scas
stos
ss
pusha
scas
stos
mov
xlat
jl
out
or
xchg
aad
std
adc
sbb
sbb
mov
inc
or
jge
or
cli
loopne
dec
jmp
mov
mov
jae
xor
mov
or
mov
ror
sbb
jae
mov
adc
or
and
or
jl
and
push
or
or
(bad)
cmps
jno
sbb
and
xor
retf
inc
sbb
pushf
pop
ins
mov
inc
mov
jmp
push
and
pop
popa
loop
(bad)
sbb
and
mov
cmp
aaa
mov
int3
sbb
rcr
lods
xlat
adc
adc
inc
xor
push
hlt
adc
jmp
ror
mov
or
inc
fsubr
push
mov
iret
mov
mov
cmp
or
pushf
pop
dec
aam
fisttp
ds
jbe
aaa
adc
adc
mov
pop
lds
fwait
in
inc
add
retf
jmp
stos
sub
test
jmp
in
iret
ss
pop
sub
outs
nop
push
retf
loop
cmp
retf
and
test
int3
ror
mov
mov
inc
and
dec
lods
into
pop
cmp
loopne
cmps
movs
mov
cmps
ret
shl
inc
or
xchg
hlt
sub
sub
ja
cmp
mov
mov
mov
scas
mov
pushf
inc
ss
movs
cmp
jno
push
add
inc
mov
movs
pop
mov
cmc
add
dec
push
inc
or
out
xchg
out
test
(bad)
in
or
xchg
cmp
dec
les
cmc
adc
and
pop
xor
and
sahf
je
cld
inc
leave
mov
repz
stc
add
or
pop
sbb
in
jne
adc
iret
imul
not
or
mov
ins
fs
sar
aaa
dec
sbb
mov
daa
push
mov
pop
adc
mov
lods
int
jmp
loopne
mov
or
sbb
dec
pop
shl
push
aam
lahf
adc
pop
pop
std
mov
push
cdq
inc
icebp
es
out
push
bound
fidiv
push
in
ss
dec
push
ror
arpl
aam
sbb
jnp
test
stos
adc
(bad)
push
mov
mov
hlt
out
outs
inc
inc
arpl
jnp
pushf
jbe
and
pusha
mov
lahf
retf
aad
sub
imul
sbb
xchg
xchg
addr16
adc
inc
ins
loopne
les
(bad)
cmp
rol
sbb
retf
test
pop
fdivr
xchg
rcr
stos
push
repz
(bad)
fwait
push
std
outs
cmp
ins
nop
jbe
cmp
jmp
push
(bad)
cmp
mov
dec
shl
inc
xchg
adc
mov
rol
test
pop
fsub
sub
movs
repnz
ret
out
mov
mov
in
mov
shr
xor
div
dec
rcr
adc
cld
pushaw
pop
sub
mov
mov
rcr
ss
popf
mov
cmps
pop
dec
push
lahf
mov
loope
fld
mov
rol
sub
xor
jne
mov
and
jp
jle
stc
jmp
sbb
sbb
out
aas
xchg
sti
arpl
repz
je
dec
or
xor
inc
and
sbb
addr16
gs
pop
nop
cmc
push
imul
mov
stc
pop
dec
lea
ins
cdq
push
mov
sub
rsqrtps
divps
mov
stos
bound
pop
push
ror
inc
jmp
push
loope
fmul
movs
retf
bound
stos
add
mov
aam
(bad)
xor
dec
dec
in
std
cdq
push
and
jl
es
test
or
push
ret
ds
adc
xchg
push
or
jmp
adc
out
in
loop
cmp
cdq
and
pop
(bad)
dec
xchg
pop
inc
and
test
push
scas
addr16
call
(bad)
sbb
add
add
aam
scas
mov
aam
pop
sub
jle
xchg
dec
dec
adc
xlat
lock
(bad)
iret
dec
adc
jae
pop
fdivr
add
push
jae
unpcklps
and
imul
push
add
push
sub
stc
in
mov
bswap
or
xchg
or
dec
(bad)
sbb
retf
pushf
push
test
pop
nop
add
push
and
xchg
sbb
inc
icebp
inc
and
int
xor
xchg
jg
int3
cwde
aad
repnz
stc
in
lahf
nop
push
rcr
jg
rcr
add
movs
(bad)
popa
(bad)
popf
mov
sbb
out
push
or
xor
cmp
ret
stc
mov
sub
xor
push
or
out
pop
xor
jmp
shl
test
xor
cmp
push
idiv
adc
ja
cmp
cmp
adc
push
fisub
sub
cmp
add
es
aas
out
adc
push
fucomp
dec
mov
sbb
shl
mov
aaa
int3
in
xchg
sub
(bad)
fisttp
mov
or
sub
dec
adc
push
xlat
idiv
test
pusha
jg
test
adc
icebp
arpl
outs
int
mov
add
lahf
mov
sar
ffree
test
loop
mov
rcr
mov
mov
inc
or
sbb
(bad)
add
push
ret
scas
fs
ds
fadd
jecxz
shr
adc
push
xchg
ds
mov
stos
(bad)
(bad)
out
push
fldl2e
mov
sbb
push
push
mov
(bad)
sub
in
sub
ret
div
push
test
xor
pop
fdiv
std
sub
nop
pop
jge
mov
lods
mov
push
fld
xor
mov
inc
shl
bnd
add
test
push
in
mov
fcmove
jbe
xor
xor
push
sub
sbb
loope
mov
aas
bound
mov
pop
lahf
mov
in
dec
cmp
push
rcl
(bad)
mov
iret
dec
push
and
arpl
inc
cmp
xchg
test
sbb
test
mov
mov
xchg
or
test
and
adc
xor
pop
rcl
out
cmps
jno
retf
add
jo
dec
aad
fidiv
cmp
popw
push
fwait
std
test
aad
jne
scas
js
stc
xlat
repz
xor
pop
cmp
push
ret
and
xlat
outs
data16
adc
inc
xchg
sub
out
or
add
mov
dec
pop
mov
lods
js
jno
or
and
out
(bad)
iret
push
xlat
xchg
mov
(bad)
jmp
das
jp
jmp
cmp
bound
out
dec
inc
daa
fsubr
iret
dec
xor
fadd
icebp
adc
lahf
shl
pop
push
push
dec
test
fistp
push
lahf
xlat
rcl
inc
add
fldcw
cld
call
ins
test
es
sysenter
jae
or
hlt
gs
mov
js
pop
add
jmp
pop
js
adc
pop
mov
pop
dec
popa
add
cmp
data16
adc
push
stc
xor
mov
pop
sbb
dec
jbe
out
shr
xchg
mov
dec
in
mov
out
mov
jo
(bad)
jmp
test
or
or
loop
pop
pop
out
fdivr
lea
fnstenv
xor
dec
dec
mov
cmp
adc
out
mov
xchg
jmp
adc
fcomp
jge
mov
mov
jmp
outs
inc
jecxz
mov
cmps
pop
mov
es
nop
pop
xchg
mov
adc
xchg
shl
loop
or
fild
jns
gs
adc
(bad)
loope
fisttp
mov
jae
lds
sbb
inc
cmp
lods
(bad)
mov
lock
pop
jnp
fwait
aad
es
add
mov
scas
sbb
enter
inc
mov
mov
out
popa
cs
test
scas
push
jl
imul
mov
outs
call
xchg
call
add
sti
ret
icebp
jb
adc
pop
stos
mov
sbb
or
pop
fdivr
jns
jns
(bad)
mov
cmp
mov
mov
jo
call
ins
mov
cmp
jle
stc
loope
icebp
out
out
fwait
mov
call
dec
sbb
mov
and
aad
sbb
mov
das
dec
xchg
dec
adc
dec
addr16
fld
pop
xchg
sbb
shl
lea
mov
mov
or
imul
rcl
imul
sbb
inc
sub
sub
mov
in
fsubr
jp
(bad)
mov
fst
popf
sbb
sbb
scas
push
inc
aaa
xchg
and
jns
dec
adc
cmp
dec
adc
sar
cmps
call
movs
test
data16
xchg
mov
pop
xlat
ret
fs
xchg
lods
(bad)
rol
or
loope
outs
cmp
call
hlt
std
dec
jbe
mov
leave
cmp
call
xchg
call
hlt
jns
fnstcw
out
or
push
repnz
and
push
ins
inc
sub
jbe
cmps
pushf
data16
and
mov
push
or
xchg
mov
push
mov
push
sub
out
xor
mov
aaa
mov
leavew
(bad)
in
xlat
mov
ror
mov
xor
sbb
add
jmp
inc
sar
je
mov
inc
push
jno
jb
push
js
sbb
mov
stos
mov
adc
imul
adc
add
mov
mov
in
inc
and
cmp
test
jo
sbb
(bad)
pusha
mov
xor
mov
jns
xchg
test
jae
call
into
gs
xor
jbe
loope
sbb
xor
daa
or
or
and
sbb
in
lock
adc
push
in
push
inc
inc
mov
cmp
or
inc
data16
ins
repz
and
mov
cmps
mov
mov
in
stos
lds
out
mov
shl
dec
fcmovnbe
dec
pop
sbb
out
push
mov
push
sahf
arpl
sbb
dec
pop
out
jl
scas
bound
hlt
leave
adc
and
dec
cwde
sub
outs
mov
xlat
stos
jbe
mov
or
movs
sbb
inc
out
cwde
aaa
pop
mov
(bad)
ins
mov
pop
push
jl
xlat
jg
mov
stos
cmp
pop
sub
or
adc
retf
ficomp
(bad)
out
mov
pop
ficom
push
enter
stos
movs
mov
push
fsub
adc
sub
arpl
mov
jle
movs
mov
outs
xor
sbb
mov
in
lods
push
sbb
ret
into
adc
out
inc
xor
lock
add
jno
mov
outs
adc
add
adc
adc
mov
cmps
test
xchg
loop
mov
adc
pop
add
sbb
push
ret
mov
jp
scas
pop
pop
adc
test
dec
ins
xor
adc
mov
(bad)
loopne
mov
jge
out
pusha
or
lods
or
push
sub
cmp
lea
mov
(bad)
mov
rol
in
push
popf
cmp
(bad)
mov
add
stos
pop
mov
or
jp
call
ja
xor
or
or
add
test
fcmove
in
out
xchg
sahf
(bad)
cmp
stos
mov
xchg
and
jmp
fmul
neg
adc
(bad)
and
jb
mov
int3
push
fisttp
cmp
mov
test
pop
mov
mov
lahf
mov
push
mov
cli
add
xchg
loop
sbb
mov
popa
cmp
ds
movups
pop
mov
pop
push
cdq
mov
test
pop
dec
bound
dec
mov
sti
dec
pusha
icebp
fisttp
out
fs
xchg
jae
je
dec
push
push
in
mov
xchg
ret
jno
aas
mov
xor
mov
mov
shr
ror
mov
jmp
mov
mov
and
push
cmp
xchg
movs
test
xchg
(bad)
push
cmps
ja
ret
(bad)
mov
out
xchg
rcr
icebp
xchg
fsubr
push
out
jp
push
das
fidiv
cmp
mov
addr16
push
adc
sbb
inc
push
adc
mov
jl
popa
ret
ins
push
sub
mov
or
sbb
ror
jecxz
es
adc
mov
adc
out
scas
or
fcomp
push
jmp
and
mov
mov
dec
ss
jl
adc
dec
stos
out
arpl
cwde
aas
rcr
mov
ja
addr16
pop
aam
stc
pop
data16
or
jno
xor
mov
and
cmp
xor
jecxz
in
mov
sbb
pop
jbe
(bad)
fwait
jmp
aas
mov
adc
cmp
xor
fs
push
in
sahf
mov
out
jno
fbld
add
pop
pop
push
sub
jns
pop
cmp
ins
in
or
xchg
sbb
fld
fucom
mov
jne
rcl
mov
inc
cmp
in
push
mov
in
xchg
fbstp
mov
sahf
lds
pop
jg
arpl
sub
shl
jp
jg
inc
or
repnz
aas
rol
in
pop
dec
xchg
popa
pop
test
inc
aaa
push
xor
jp
sbb
or
rol
cmc
ret
jae
xchg
jns
ins
pop
jmp
cmp
rcr
mov
push
push
loopne
adc
ret
das
ret
and
fcom
xchg
inc
cmp
int3
and
mov
aad
push
out
(bad)
sbb
sub
bnd
mov
push
clc
scas
sub
mov
test
jl
pop
xlat
cld
sahf
out
mov
repnz
inc
mov
sbb
cmp
std
or
mov
adc
(bad)
jbe
pop
lock
lea
xlat
retf
adc
out
add
lods
push
movs
fidivr
call
dec
call
lods
(bad)
mov
sbb
retf
push
lods
mov
mov
mov
arpl
lock
and
xchg
xor
adc
sub
test
add
aas
push
push
push
add
(bad)
xchg
sub
and
cmps
push
mov
xchg
push
in
and
pushf
(bad)
out
sub
sub
int
push
popf
push
jno
pop
push
mov
adc
mov
inc
out
pushf
pop
test
push
dec
mov
sub
xchg
xor
es
test
scas
sbb
cmp
adc
sub
out
jle
dec
lahf
cmp
shl
jecxz
mov
ja
xchg
in
imul
mov
(bad)
mov
rcr
sti
dec
jmp
into
jo
fdivrp
add
dec
sub
mov
push
iret
pop
dec
xchg
inc
mov
arpl
movs
push
jno
shl
(bad)
jp
dec
lods
retf
fs
push
jmp
cmp
jo
mov
cmps
push
mov
or
shl
scas
xor
mov
sahf
scas
push
pop
adc
sar
adc
retf
ret
and
mov
stos
mov
sahf
adc
inc
ins
or
icebp
scas
jno
(bad)
xlat
push
ds
ficom
xchg
mov
ja
sub
or
jle
sbb
sub
inc
cmp
(bad)
xor
ss
sub
(bad)
mov
rol
aad
cmc
inc
jnp
std
sbb
cli
mov
mov
lods
dec
inc
cmp
dec
sub
popa
into
retf
test
mov
sbb
mov
scas
adc
or
mov
outs
cld
fs
dec
stos
sbb
lahf
xchg
cld
pushf
int
aaa
xor
call
imul
jne
push
mov
xchg
mov
and
fild
imul
repnz
aaa
daa
bound
test
push
cmp
mov
dec
lods
aas
mov
pop
ins
adc
repnz
pop
push
dec
fsub
mov
xchg
jg
mov
call
or
aaa
adc
fsub
push
and
jae
cmps
xchg
mov
es
mov
sahf
(bad)
cmp
stos
jge
jno
sbb
adc
mov
repnz
cld
ja
sub
sbb
stos
int
ds
jne
mul
hlt
inc
cmp
int
jmp
add
pushf
leave
jl
mov
mov
sar
addr16
out
mov
dec
es
pop
aaa
ss
push
mov
xchg
inc
iret
jo
adc
icebp
icebp
and
pushf
jno
ja
shr
adc
shl
(bad)
es
clc
sub
pop
mov
lock
dec
mov
push
and
or
cmp
das
sub
or
mov
call
cmp
jno
sbb
adc
and
sbb
icebp
and
inc
psubusw
sub
pop
fimul
repnz
fmul
jbe
xchg
ds
mov
dec
adc
xor
xchg
fnsave
adc
mov
fcmovnb
jg
ds
hlt
idiv
jmp
cmp
shl
mov
mov
pop
fst
mov
mov
mov
outs
cmp
push
das
(bad)
jmp
rol
int
xor
push
pop
mov
sbb
test
(bad)
icebp
jne
mov
xchg
dec
pop
dec
shl
pushf
rcl
ds
push
imul
test
popa
aam
ss
xchg
cmps
push
fimul
neg
cmp
cmp
adc
pop
cli
aad
das
xchg
mov
mov
xor
lods
imul
clc
pop
into
ja
(bad)
int3
sti
or
cs
lods
ret
arpl
into
aas
jle
dec
or
cmp
or
dec
aaa
mov
adc
in
add
inc
dec
clc
push
sar
ficomp
sbb
cmps
ins
dec
inc
call
js
loop
shl
adc
pop
push
int
dec
test
fisubr
not
jmp
ficomp
pushw
mov
sbb
lea
lods
sbb
je
jb
aaa
sahf
jnp
je
xor
adc
sub
sahf
dec
jecxz
inc
jns
push
sti
cmp
ss
fs
mov
push
lock
pop
mov
pop
(bad)
jne
sti
imul
test
pop
pusha
push
xchg
sahf
push
cmp
cmps
sub
rcr
push
and
loop
ds
xor
xchg
loop
xchg
jae
cmc
push
fst
sbb
popf
sub
or
xchg
inc
lods
mov
mov
sbb
enter
jecxz
fcomp
mov
push
scas
js
idiv
(bad)
repz
fldenv
sti
jae
daa
push
ficom
cmps
pop
pop
xchg
cmp
sub
lock
fisubr
or
push
push
pop
add
cmp
rol
imul
cmps
sub
in
fcom
dec
fldcw
ret
jne
sbb
out
hlt
lock
push
inc
xor
add
aaa
imul
xchg
jge
xor
std
pop
xchg
mov
ins
adc
add
loop
dec
sbb
xchg
cmp
add
jns
(bad)
mov
jecxz
movs
dec
scas
and
lahf
or
adc
stc
xchg
xor
inc
mov
pop
scas
out
fidivr
mov
mov
ins
add
adc
nop
sbb
mov
and
dec
dec
pushf
(bad)
push
sub
xchg
jmp
xchg
imul
xchg
sar
or
dec
daa
fst
mov
mov
xor
xchg
retf
outs
adc
loop
jne
sti
repnz
adc
sub
(bad)
call
cmps
push
mov
push
xchg
fidivr
rol
dec
or
inc
pushf
mov
dec
imul
cwde
and
sub
nop
enter
cmp
retf
fs
aad
dec
sbb
lahf
inc
out
hlt
packssdw
inc
or
cmp
retf
and
jno
pop
loop
leave
mov
xlat
ins
mov
mov
cmps
mov
(bad)
loop
mov
in
mov
imul
out
sub
data16
xor
(bad)
call
fistp
inc
ret
loop
retf
gs
repz
hlt
fadd
imul
mov
jbe
fadd
ds
xor
adc
imul
into
and
jae
(bad)
sbb
and
ret
cs
inc
xor
es
xchg
es
aas
adc
ins
mov
sbb
mov
hlt
es
pop
fist
out
bound
or
aas
xchg
shl
lods
outs
cmp
or
(bad)
int3
add
fnstcw
ret
cdq
mov
sub
cmp
and
mov
push
push
out
dec
test
ficom
push
fdiv
cmp
mov
clc
xor
rcl
push
out
dec
jnp
cs
aam
es
out
out
cvtps2pi
pop
fdiv
out
sub
dec
push
and
mov
into
cmc
mov
out
js
mov
cmps
pusha
inc
adc
adc
add
mov
mov
lahf
xor
icebp
pop
mov
mov
mov
das
sub
nop
pop
imul
mov
mov
(bad)
(bad)
dec
xchg
jle
out
ss
call
push
ins
mov
dec
fdiv
fidivr
in
jae
outs
cwde
inc
sub
mov
mov
xchg
mov
mul
or
mov
js
les
mov
popf
sub
xchg
cli
push
loopne
push
stc
shr
in
jns
push
jl
imul
fwait
pop
jb
movs
and
shr
pop
jl
jne
fisubr
fist
and
pop
cwde
xor
test
inc
xor
xor
lea
test
(bad)
jmp
ds
dec
repz
xchg
ss
loop
int
fmul
mov
rol
(bad)
gs
dec
inc
aam
lods
fldcw
ins
loop
and
retf
mov
stos
dec
and
ins
inc
sub
sbb
xchg
sub
pop
lahf
mov
dec
jno
mov
in
je
call
shl
out
push
test
jg
arpl
push
mov
jb
cli
fsubr
fmul
pusha
pop
push
(bad)
int3
pop
dec
dec
push
xor
dec
outs
xor
jecxz
call
sar
popa
aad
dec
js
push
xchg
inc
pop
or
inc
cwde
cmp
adc
(bad)
aas
xor
dec
xor
mov
push
pop
cmp
jl
(bad)
push
movs
lods
and
out
ins
dec
ins
cmc
mov
js
xor
aam
int
mov
iret
sub
lock
nop
retf
xchg
xchg
sub
scas
jle
fnstcw
fwait
mov
push
test
push
xor
mov
xor
add
inc
shl
cmp
mov
cmp
cld
add
movs
adc
bound
outs
scas
aaa
data16
dec
cwde
inc
add
push
pop
imul
dec
not
mov
cld
push
repz
loop
dec
int3
movs
sbb
mov
pop
mov
push
in
sbb
and
les
mov
popa
mov
pop
mov
cs
adc
out
gs
pop
add
fstp
cld
mov
mov
call
jp
push
(bad)
retf
fisubr
stos
mov
les
jno
dec
fs
es
(bad)
test
adc
(bad)
mov
xchg
sub
dec
dec
ror
cmp
(bad)
jmp
push
adc
and
ins
imul
and
int
xchg
xor
push
sahf
jmp
xchg
das
and
int
or
mov
lea
lea
and
lock
mov
and
inc
in
jne
mov
fnstenv
test
fwait
jl
push
cmp
pop
xlat
leave
cmp
std
stc
aam
pop
inc
popa
jns
mov
ss
cmp
pop
inc
add
je
cmp
leave
pop
jmp
leave
jmp
loope
js
push
mov
mov
out
ret
shl
dec
jae
repnz
movs
lods
out
sbb
xchg
jae
pop
call
(bad)
mov
pushf
jg
adc
cmp
mov
dec
dec
mov
aad
push
pop
mov
imul
popa
mov
cmp
xor
enter
aas
sbb
mov
dec
jg
stc
xchg
retf
xor
cmps
add
ins
mov
jnp
nop
jae
xchg
das
out
push
pusha
je
cmp
mov
xor
mov
mov
push
jo
imul
call
dec
rcr
and
sti
sbb
out
push
pop
or
or
int
and
jge
movs
add
inc
ret
and
movs
ret
sub
(bad)
je
xchg
mov
adc
pop
cmp
push
push
and
icebp
add
fs
push
fs
jecxz
xor
mov
adc
lods
pop
xchg
cwde
into
push
cld
or
fisubr
lea
mov
ret
stos
dec
mov
popf
cmps
scas
adc
movs
ficomp
xchg
rcr
outs
es
jne
jmp
push
fcomi
or
push
pop
cmp
dec
dec
mov
out
(bad)
sbb
mov
test
pop
ret
mov
xchg
aad
aam
scas
not
aad
adc
adc
inc
sbb
cmp
fs
call
add
rcr
cmc
in
mov
mov
lock
bound
rcr
push
push
ja
push
or
lods
sbb
cs
mov
aaa
jbe
xor
xlat
sbb
sti
sbb
inc
or
mov
jle
jmp
dec
sbb
cmp
adc
or
sti
div
sbb
adc
in
and
mov
inc
cmp
fst
push
push
cmp
ret
adc
adc
mov
mov
add
sbb
imul
dec
cli
add
push
and
sahf
mov
push
pop
enter
mov
dec
call
cmp
mov
mov
or
jg
sub
out
sbb
adc
retf
sar
scas
sbb
cs
dec
popf
test
jbe
add
mov
rcl
sbb
mov
cli
sbb
fs
mov
pushf
sub
test
pop
repnz
into
mov
or
or
jl
inc
mov
cmc
push
lods
hlt
sbb
pop
mov
rol
cmps
loopne
scas
cld
ss
jo
cmp
test
cmps
xchg
arpl
cmp
sub
ret
cs
cwde
mov
(bad)
push
jae
out
mov
(bad)
xor
jmp
and
adc
jae
out
xchg
xlat
jmp
xor
mov
pop
xchg
(bad)
jp
pop
cmp
pop
imul
xchg
popf
jo
inc
enter
mov
jae
push
sbb
enter
cmp
cmp
fdecstp
imul
and
pop
repz
jae
std
stos
push
sbb
sbb
and
pop
xor
stos
movs
sub
dec
add
pop
sub
jle
jb
retf
arpl
daa
jecxz
lods
or
adc
pop
xchg
xchg
mov
pop
stos
jmp
fist
fwait
mov
and
ja
sub
mov
mov
rcl
jmp
cmp
mov
scas
jecxz
mov
mov
mov
dec
xchg
cli
xchg
xor
add
mov
cmc
sbb
clc
lods
jnp
aaa
fstp
(bad)
push
repz
in
ret
jmp
jmp
sbb
mov
(bad)
pop
sub
adc
or
and
imul
and
ins
outs
sub
mov
pop
(bad)
push
cmps
lds
test
cmps
mov
iret
jns
jg
icebp
xlat
sbb
or
mov
xchg
push
dec
retf
rol
mov
push
jb
retf
int
imul
xlat
mov
jge
cmp
ss
xor
sbb
and
icebp
mov
mov
mul
jne
cwde
jne
inc
lds
xchg
mov
pop
jo
ss
iret
dec
loop
out
pop
inc
adc
loopne
push
mov
and
arpl
and
sbb
call
mov
outs
mov
(bad)
dec
popa
ret
mov
adc
or
mov
push
sbb
repnz
fstp
pop
jmp
push
scas
test
(bad)
push
ret
(bad)
dec
aad
push
jb
ret
or
sbb
mov
sbb
lods
or
je
gs
pop
fldcw
push
aam
(bad)
popa
push
jecxz
push
xchg
into
sub
(bad)
jae
jnp
cmp
mov
pop
clc
movs
in
or
push
sbb
nop
int
aaa
pop
bound
mov
gs
cmp
fdiv
sahf
sti
inc
inc
std
mov
sbb
fcomp
pop
ret
push
loop
mov
retf
cmpps
mov
outs
mov
cmp
in
test
mov
fs
cmc
ds
mov
sbb
aas
xor
je
push
xor
push
fwait
loop
push
jae
call
jbe
push
pop
pop
int3
arpl
add
ja
adc
int3
test
xchg
mov
int
lea
cmp
(bad)
xor
lea
(bad)
cmp
stos
fwait
dec
pushf
pop
aam
(bad)
ds
mov
sub
fs
pop
xchg
or
push
(bad)
mov
(bad)
in
rcl
sbb
pusha
cs
jle
pop
sub
test
jno
das
repnz
cmp
rcr
mov
dec
jo
push
jns
fadd
hlt
sub
mov
mov
call
add
cmp
jmp
or
sub
mov
xor
xchg
push
ss
pusha
mov
push
(bad)
mov
push
aam
or
xor
call
cmp
rcl
push
imul
mov
popf
mov
(bad)
repz
xchg
pop
out
sti
daa
xor
adc
(bad)
bound
adc
sbb
ss
sub
idiv
rcr
mov
ficom
daa
jecxz
sbb
push
xchg
xor
ins
(bad)
sbb
hlt
mov
sub
pop
mov
loopne
inc
and
mov
jle
mov
scas
jmp
bound
dec
imul
inc
xlat
ss
aaa
test
jp
xchg
mov
and
and
enter
sub
jecxz
lock
aad
arpl
jmp
into
cmp
xchg
fisubr
fbld
jle
(bad)
daa
mov
dec
sub
test
mov
mov
pop
mov
enter
out
out
pop
es
in
pop
fsubr
dec
repz
retf
fdivr
hlt
xor
gs
jge
out
ins
daa
lods
loope
push
cmc
les
aad
mov
out
icebp
xchg
push
adc
sbb
addr16
jmp
mov
shl
sbb
pop
mov
aam
sub
jbe
jmp
pop
popf
in
adc
jae
sysexit
inc
add
cmp
outs
and
sbb
in
(bad)
jmp
adc
or
inc
jmp
stos
fs
mul
push
push
scas
mov
fcom
es
scas
jge
mov
ins
xor
cmp
sbb
sbb
push
pop
push
icebp
xor
std
out
jecxz
fcom
inc
into
mov
inc
inc
nop
fcmovnb
dec
push
xor
pop
adc
xchg
out
cmps
xlat
sub
lods
ret
scas
fimul
dec
mov
sub
push
lahf
xchg
inc
std
lock
mov
test
and
inc
(bad)
mov
pop
stos
dec
mov
test
mov
pop
int
ins
or
xchg
mov
popf
test
xchg
out
sbb
es
adc
shl
adc
aaa
loope
mov
cli
mov
pop
stc
mov
or
mov
cmp
shr
xor
not
lahf
jmp
imul
push
fsub
loopne
xchg
div
ins
sub
cli
or
add
jno
fdiv
ficom
mov
push
(bad)
push
add
pop
outs
push
or
iret
or
pop
dec
sub
imul
lahf
jno
ffree
mov
mov
mov
nop
out
std
mov
iret
and
lods
and
adc
das
nop
fist
sbb
ins
push
ret
int
pop
and
test
xchg
fimul
leave
ret
xchg
les
out
xchg
fild
jmp
scas
ins
xor
ror
adc
rcr
jne
xchg
fstp
jle
pop
imul
lea
push
stc
cmps
out
sar
dec
inc
xchg
fist
mov
add
loope
adc
jle
aas
pusha
scas
push
mov
mov
mov
repz
loop
call
leave
stc
or
mov
inc
rol
in
cmp
push
jmp
push
xchg
jnp
xchg
pop
xchg
jnp
dec
test
add
dec
mov
pop
sbb
out
movs
stc
ins
cli
arpl
sub
loope
mov
add
mov
dec
ss
jmp
add
ds
cmps
mov
jae
cdq
data16
stos
daa
inc
shl
stos
lds
pop
and
ret
repz
das
inc
movs
or
je
pusha
push
sti
jge
sub
sbb
aas
sbb
xchg
adc
jl
aad
fstp
inc
out
daa
je
(bad)
out
dec
mov
xlat
cmp
jecxz
jns
test
(bad)
inc
inc
loop
mov
inc
sti
rcr
(bad)
cmp
dec
push
and
push
mov
dec
repnz
add
dec
mov
dec
push
pop
or
pop
mov
retf
movs
sar
add
out
in
add
xchg
sbb
stos
xchg
xor
in
mov
lods
aas
push
stos
mov
cld
jbe
xchg
arpl
sub
out
xor
adc
sub
pop
jo
std
cdq
mov
std
push
or
push
cwde
or
xchg
repnz
push
dec
addr16
cmp
mov
pushf
xor
movs
mov
adc
cmp
movs
outs
mul
pop
cld
test
mov
fld
test
shl
aam
test
fadd
cmp
(bad)
imul
mov
sbb
push
popa
call
mov
adc
jnp
adc
mov
cmc
push
push
add
scas
fld
int3
fcomip
rol
movs
xor
jg
sub
mov
outs
addr16
aaa
ja
outs
xor
and
xchg
inc
add
out
jne
mov
into
lea
sbb
add
test
cmc
push
mov
mov
sub
stc
or
dec
dec
addr16
dec
or
int3
inc
movs
rcr
jae
sub
push
cmp
push
nop
adc
add
movs
sub
outs
push
adc
enter
in
mov
dec
mov
cmp
fimul
or
and
aaa
ficomp
icebp
mov
adc
jle
xor
add
mov
pop
push
xor
xor
mov
jns
(bad)
ja
pop
ds
in
xor
cld
mov
cli
addr16
pop
in
xchg
cmp
hlt
popa
jno
imul
pushf
leave
sub
inc
jb
dec
jl
call
or
(bad)
dec
test
mov
inc
push
retf
adc
and
jge
imul
adc
and
ror
cwde
repz
lods
and
in
pop
cmps
in
leave
mov
pushf
jecxz
loop
(bad)
push
clc
push
(bad)
leave
repnz
jge
ins
out
sbb
cmp
inc
repnz
aas
(bad)
retf
(bad)
pop
adc
adc
adc
mov
inc
imul
lods
fstp
div
mov
lds
(bad)
push
inc
jb
push
dec
push
xchg
push
aam
lahf
lods
xchg
mov
add
and
jno
push
aad
and
push
loop
cwde
iretw
das
jno
out
push
leave
and
pop
retf
adc
dec
enter
xchg
cmps
and
shl
xor
mov
xchg
and
(bad)
dec
jmp
jnp
popa
xor
pop
popa
add
xchg
bound
xchg
sub
movs
stc
nop
ins
fcomp
mov
xor
(bad)
dec
mov
inc
jle
ds
nop
xchg
sub
sbb
sahf
xor
push
push
pop
dec
xor
push
in
adc
inc
cmp
in
jmp
xor
inc
xchg
loopne
adc
outs
fadd
push
fsub
adc
repz
repz
data16
jbe
pop
add
sbb
mov
in
adc
sbb
fist
loope
jbe
mov
fidiv
dec
or
sbb
push
cwde
in
les
(bad)
dec
scas
xchg
jg
(bad)
ds
or
add
push
xchg
enter
mov
cmp
cmp
daa
aaa
xor
mov
hlt
jae
gs
pushf
jg
inc
ss
cmp
lock
or
push
(bad)
push
scas
push
pop
push
(bad)
pop
pop
lahf
js
pop
js
cmp
cdq
inc
add
sub
scas
jecxz
(bad)
and
jecxz
add
mov
mov
mov
std
pop
xlat
in
push
xchg
call
(bad)
fcomp
cmp
fisub
js
xchg
sar
clc
add
inc
clc
dec
adc
fstp
test
pop
shr
mov
movs
add
adc
pop
ins
dec
or
repnz
jge
je
cdq
fs
inc
js
sub
xor
jle
cs
mov
push
mov
in
sbb
daa
jge
sbb
(bad)
jb
jno
pop
add
out
test
pop
mov
je
fldcw
in
sbb
jge
jle
mov
repnz
test
in
imul
push
push
shr
aaa
jb
mov
(bad)
int
mov
mov
out
jp
fmul
call
ret
fbstp
rol
pop
add
cmp
adc
xchg
adc
cmc
mov
lea
cmp
push
scas
shl
movs
inc
sbb
fs
(bad)
in
(bad)
add
inc
sbb
sbb
iret
adc
popa
dec
(bad)
movs
out
jge
aad
aad
neg
pop
fwait
mov
scas
mov
sub
enter
cmp
test
adc
sbb
inc
cmp
dec
adc
mov
cmp
inc
jmp
jo
inc
xchg
jmp
test
cmp
or
mov
push
nop
inc
add
lods
mov
pop
pop
je
xor
pop
call
ins
xor
or
aam
(bad)
scas
and
sbb
je
lea
add
inc
pop
call
(bad)
fcomip
pop
add
ins
es
and
aaa
retf
ss
lods
dec
xor
cmp
popf
dec
in
(bad)
sbb
push
arpl
daa
add
adc
mov
mov
loop
push
adc
nop
(bad)
mov
pop
hlt
adc
in
pop
cwde
or
mov
in
mov
cmps
pusha
jae
jge
pop
movs
jp
adc
gs
sbb
mov
out
shl
add
jmp
pop
aam
sub
mov
sub
ss
dec
or
imul
or
rcl
xor
mov
fldenv
dec
cmp
scas
js
cmp
scas
sbb
rcr
pop
std
arpl
sub
mov
fnstcw
out
pop
cmc
cmp
and
xor
dec
inc
adc
movs
cmc
hlt
ret
add
sub
jns
ins
push
jg
test
cmp
aam
test
dec
hlt
imul
jmp
add
pop
push
cmp
fdiv
dec
aas
xor
xchg
sbb
(bad)
pop
push
mov
sbb
or
sti
pop
das
jecxz
push
push
sahf
adc
sbb
int
pop
ins
xor
scas
jl
push
push
into
repnz
dec
dec
mov
adc
rcl
sbb
jge
lea
pop
mov
jns
or
imul
dec
dec
sbb
ret
adc
imul
out
or
mov
int3
pushf
dec
dec
loop
pop
mov
in
(bad)
pushf
jmp
shr
pushf
(bad)
mov
xlat
inc
pop
cmc
leave
and
nop
std
pop
sub
je
mov
sbb
std
sbb
ret
outs
or
cwde
(bad)
or
adc
xchg
xchg
pushf
cmps
mov
push
jg
maskmovq
test
call
add
dec
movs
xchg
dec
hlt
sbb
sbb
mov
inc
mov
lods
fistp
lods
and
push
add
push
jmp
mov
dec
or
push
sub
jle
jbe
or
xchg
call
and
test
(bad)
in
mov
push
sub
push
mov
mov
sbb
fwait
add
and
(bad)
loop
mov
stc
jg
jno
add
cmp
adc
adc
call
rcl
imul
push
mov
mov
and
and
outs
adc
cmps
iret
retf
sbb
push
ss
mov
sbb
add
loope
mov
pop
dec
ins
add
mov
mov
add
push
rcl
jnp
loope
mov
scas
pop
pop
jmp
and
mov
rcr
out
pop
mov
gs
mov
data16
int
jne
repnz
cwde
loope
dec
ret
xor
pop
inc
mov
xlat
sub
ins
leave
xor
stc
inc
ins
mov
scas
popf
sub
mov
and
xchg
push
lahf
mov
jae
and
rcr
pop
arpl
and
sbb
pusha
int
aad
(bad)
xor
into
push
jb
or
repnz
into
adc
sub
loop
push
xchg
rcr
xlat
dec
jbe
fnop
nop
xchg
in
xchg
in
or
pop
xor
nop
mov
(bad)
jecxz
das
fsubr
test
adc
fs
rcl
xchg
xor
jo
(bad)
adc
fcmove
ins
scas
mov
add
and
cmps
mov
inc
sbb
movs
out
aaa
test
or
mov
sbb
repnz
or
push
arpl
dec
add
call
push
outs
xor
(bad)
lea
clc
inc
push
xor
cmp
mov
sbb
(bad)
xchg
leave
daa
mov
adc
sbb
ror
ins
ds
dec
scas
ror
mov
xlat
call
movups
fwait
xchg
add
inc
mov
push
or
sub
sbb
xlat
add
sbb
mov
and
jnp
mov
sahf
fstp
cld
scas
inc
xor
lods
push
xchg
and
push
imul
js
out
jnp
mov
mov
sahf
fld
std
stos
mov
scas
mov
add
nop
and
iret
pop
addr16
dec
xor
ds
jle
inc
fstp
inc
jns
dec
hlt
inc
xchg
js
xor
pusha
scas
sub
shr
push
pop
sbb
mov
add
sbb
ficom
movs
ss
fcom
(bad)
rcl
jno
adc
loop
mov
cmp
or
sub
dec
xchg
ds
jp
or
fimul
into
ficomp
in
cmps
sbb
sar
fxch
sar
test
mov
popf
sbb
and
inc
lock
imul
hlt
hlt
movs
pop
cmps
sub
add
dec
mov
mov
in
xor
pop
ror
sub
pop
fwait
push
inc
and
add
sar
jge
mov
jg
push
test
mov
sbb
scas
xchg
sub
cmc
out
shr
arpl
cmp
jae
sub
shr
ret
and
shl
push
sbb
inc
shl
pop
jmp
ficomp
mov
fdivr
jle
sbb
sub
jne
fwait
xor
fist
mov
push
inc
(bad)
mov
test
in
nop
test
(bad)
jno
aad
sbb
rcl
mov
das
in
xor
ins
(bad)
lahf
xchg
or
sub
and
sbb
lods
clc
neg
lock
outs
inc
popa
push
gs
mov
es
and
fs
in
jle
mov
icebp
mov
xchg
ss
imul
mov
mov
dec
sbb
div
into
add
push
test
jno
and
xchg
fldenv
imul
lahf
fadd
push
iret
cmps
inc
push
cwde
std
jge
jmp
cmps
mov
gs
enter
push
push
mov
add
xchg
push
jl
jle
cmp
lea
inc
pop
cmps
jecxz
adc
outs
cmp
mov
mov
aam
cmp
cld
ret
movs
lock
retf
call
xchg
ret
adc
mov
jnp
push
ret
lods
fisub
mov
xor
adc
jb
aaa
dec
in
inc
(bad)
sbb
inc
lea
sbb
(bad)
cmp
loopne
ja
test
inc
mov
nop
setle
push
pop
into
or
cmps
xchg
mov
cmp
jno
cdq
dec
sbb
imul
rcl
xchg
movs
call
xchg
ss
pop
fcom
adc
repz
out
add
sub
or
xor
daa
test
jge
xchg
ds
dec
or
push
mov
jl
mov
popa
mov
aam
jge
and
xor
inc
mov
cwde
mov
sar
or
or
sbb
or
pop
xor
inc
ror
dec
call
int
add
mov
(bad)
cld
test
push
mov
aam
not
xchg
stc
lock
sub
scas
fadd
or
mov
xchg
sbb
and
pop
lods
xor
enter
bound
ret
int
sbb
std
gs
movs
lods
addr16
pop
push
pop
loope
dec
fstp
test
jmp
dec
test
and
jae
mov
popa
scas
pop
and
push
imul
pop
sub
stc
cmps
es
jae
push
jne
cdq
pop
add
push
xor
push
fdivr
sbb
add
xor
add
inc
jle
pop
mov
or
movs
mov
xor
out
and
gs
jmp
or
repz
dec
je
pop
mov
push
pop
nop
sbb
dec
mov
fwait
sub
dec
or
inc
es
jno
iret
fstp
daa
pop
xchg
leave
sbb
jae
xchg
adc
mov
(bad)
mov
add
repz
push
and
test
or
sub
xchg
mov
test
xchg
cmps
nop
jl
mov
cmp
sbb
ret
jnp
add
std
inc
outs
pop
jp
movs
out
jmp
inc
mov
adc
jmp
sub
or
(bad)
out
and
xor
mov
data16
outs
adc
jne
mov
test
test
jmp
xchg
gs
fistp
enter
enter
add
sub
mov
inc
adc
or
sbb
mov
ret
inc
cld
push
mul
xchg
push
fdivr
stos
push
je
xchg
jnp
dec
scas
cld
adc
mov
and
clc
mov
jnp
jnp
xor
jb
test
sub
push
fadd
ret
add
jge
enter
cmp
add
mov
and
pop
mov
push
cmp
hlt
push
xchg
mov
stc
pop
out
adc
cmp
or
pop
push
call
push
adc
jb
mov
arpl
sbb
ret
push
push
test
mov
sub
xchg
jb
adc
dec
inc
jmp
sub
jmp
mov
pop
or
push
(bad)
scas
dec
cmp
push
sbb
push
add
pusha
mov
add
mov
cmp
stos
movs
ins
(bad)
cli
xor
add
aad
sub
ror
loope
lahf
mov
retf
dec
sti
out
not
xlat
push
jno
in
pop
sbb
inc
arpl
in
mov
add
inc
or
movs
into
xchg
in
sub
in
mov
and
push
scas
nop
ss
outs
or
dec
ins
xor
loope
push
mov
and
xchg
and
mov
mov
and
iret
(bad)
movs
xlat
lods
mov
sahf
mov
repnz
sbb
shr
popf
lods
pop
mov
add
out
imul
inc
sub
loope
aas
xchg
or
sbb
push
aad
cwde
push
stos
mov
fnsave
addr16
jae
(bad)
(bad)
addr16
push
xchg
adc
sub
jmp
cs
iret
mov
cmps
ins
pop
scas
push
cmps
out
mov
in
out
lods
sti
test
imul
dec
dec
scas
addr16
in
add
(bad)
hlt
scas
(bad)
mov
out
neg
adc
hlt
aad
fidiv
ja
pop
cmps
gs
xlat
cmp
mov
scas
cmc
call
add
mov
popa
adc
sbb
cld
repnz
push
inc
fucom
(bad)
outs
adc
adc
(bad)
int3
fcom
pusha
add
pop
mov
dec
leave
add
div
sub
sbb
sub
inc
aam
or
pop
inc
lods
(bad)
js
imul
mov
rcr
pop
arpl
ret
adc
aam
aad
aad
rcr
sbb
cmp
adc
in
xor
adc
pop
cwde
fimul
and
mov
test
test
hlt
inc
mov
dec
jns
mov
pop
das
mov
cs
outs
es
mov
inc
aam
outs
clc
jge
xor
inc
test
and
dec
in
xor
pop
je
stc
adc
lods
cmp
xchg
mov
rol
pop
dec
mov
mov
fistp
jne
and
in
dec
mov
xor
push
sub
ins
xchg
mov
sbb
cmp
lods
pop
fistp
mov
dec
ja
push
(bad)
xor
ficomp
movs
sbb
cmp
ret
adc
(bad)
sbb
cwde
xchg
(bad)
mov
fcomp
lea
cdq
sub
lods
push
mov
add
lods
dec
out
xor
fdivp
hlt
cmp
hlt
jle
iretw
call
hlt
sub
or
(bad)
jmp
fcom
iret
(bad)
jo
pop
sub
dec
je
or
(bad)
fidivr
(bad)
jle
and
lahf
fdiv
cmp
sahf
(bad)
dec
jp
test
stos
jp
out
mov
movs
out
jmp
mov
cmp
and
push
jb
aad
jno
inc
xchg
dec
in
push
push
cld
ja
xor
jae
bound
jo
mov
mov
les
pop
jno
push
and
sub
ins
les
add
in
in
xchg
cmp
les
dec
and
pop
shr
adc
aam
nop
jle
mov
dec
nop
aas
jo
pop
jmp
mov
cmp
inc
pop
repz
scas
jg
jg
lods
loope
jp
jbe
pusha
mov
jns
xor
int
fstp
lea
jb
push
jnp
es
jnp
lahf
cld
cli
mov
leave
jle
cmp
movs
pop
daa
iret
push
sbb
and
or
xchg
out
and
pop
sar
push
xor
stc
mov
sbb
fbstp
xlat
and
pop
xchg
lods
jmp
xor
ja
and
es
pop
push
pop
adc
test
ret
push
or
pop
imul
aad
int3
jae
dec
and
xor
scas
pop
imul
xor
jb
add
fist
mov
fcom
sbb
cli
lock
sbb
ins
inc
fst
dec
std
out
cmp
stos
imul
pop
aad
int3
xchg
add
cmp
lods
retf
aas
pusha
xor
ja
sahf
cli
repz
inc
out
push
xchg
int
push
(bad)
inc
pop
jno
inc
mov
mov
clc
inc
inc
mov
(bad)
mov
cmp
inc
outs
sbb
cwde
fisttp
stos
lahf
cmp
mov
jne
mov
push
sub
stos
(bad)
dec
iret
dec
scas
jns
mov
dec
xchg
pop
mov
push
dec
mov
dec
lock
aas
and
adc
(bad)
jne
xchg
cli
fmul
addr16
mov
lods
arpl
das
outs
ins
xor
test
or
pop
js
outs
xchg
ins
push
pop
push
or
mov
sbb
call
lahf
retf
sbb
fisub
sahf
movs
pand
repnz
cmps
jecxz
es
test
push
xchg
and
test
dec
in
ficomp
push
pop
adc
pop
push
hlt
and
mov
pop
rcr
sahf
les
in
mov
dec
imul
in
in
and
push
inc
mov
push
push
mov
lods
pop
in
push
pop
in
in
or
cmp
push
xchg
mov
es
jnp
push
lock
and
loop
mov
mov
(bad)
scas
push
mov
fisubr
loopne
in
jecxz
or
aaa
jg
in
mov
or
sbb
(bad)
inc
push
mov
inc
and
push
cmp
fwait
dec
cld
pop
dec
inc
adc
aad
cmp
xchg
in
retf
pop
retf
retf
push
push
jbe
call
xor
(bad)
jmp
and
pop
daa
sub
(bad)
cmps
jo
push
dec
sub
(bad)
call
call
jne
ret
pop
int3
ret
sbb
jmp
push
call
sbb
mov
test
push
(bad)
xor
add
pop
pop
fnstcw
push
jl
outs
add
mov
adc
dec
xor
arpl
shl
pop
push
stos
(bad)
(bad)
test
mov
les
lds
ret
ins
pop
mov
xor
cmp
dec
gs
mov
push
loope
dec
imul
add
js
loope
push
add
pop
jns
sbb
mov
pop
sti
push
mov
gs
add
push
jg
(bad)
cs
cmp
xor
(bad)
addr16
jb
outs
jo
adc
fs
popa
fldenv
jle
in
push
sub
or
and
and
add
inc
icebp
xor
xchg
xchg
jne
call
xchg
dec
adc
mov
pop
sbb
int3
jbe
mov
jbe
(bad)
call
rcl
jg
sbb
mov
mov
in
jmp
ss
sar
(bad)
pop
mov
fs
xor
test
(bad)
popf
repz
enter
add
loope
push
or
ret
das
xor
or
pop
and
mov
or
and
aaa
sbb
loopne
lahf
pop
xor
mov
xor
xchg
pusha
dec
and
bound
test
bound
add
repnz
xor
cmp
ins
rcl
sti
loope
mov
mov
outs
add
pop
push
das
pop
dec
loop
shl
pop
enter
cdq
cwde
cs
sbb
push
enter
push
mov
xor
jg
out
cmps
ins
and
data16
je
out
mov
mov
add
aas
adc
ds
cmp
and
push
mul
xchg
outs
movs
xchg
dec
pop
cmp
mov
push
imul
cmp
ret
movsx
fcomp
push
cld
jmp
(bad)
lock
cmp
push
and
or
inc
jle
sub
imul
sub
movs
(bad)
bound
(bad)
enter
push
cs
(bad)
mov
mov
jnp
adc
pushf
push
imul
jmp
(bad)
push
inc
jmp
xchg
push
jp
dec
add
xor
repnz
or
hlt
adc
ins
mov
sbb
xchg
shr
xchg
xor
mov
xor
push
adc
adc
and
int3
cmp
mov
xor
adc
das
mov
cmp
outs
cmp
sub
pop
test
in
call
(bad)
mov
and
jo
ins
rcl
mov
jae
data16
push
aaa
cmp
mov
and
or
sbb
jg
or
pop
mov
aad
rcl
fisttp
pop
xchg
mov
rcl
add
mov
imul
aaa
dec
jl
(bad)
(bad)
fmul
adc
cmp
and
cmc
cmps
add
fdiv
sub
ins
sub
cmp
pop
test
(bad)
pop
js
push
sbb
mov
or
outs
inc
mov
test
adc
dec
ror
xchg
lods
push
sahf
mov
adc
inc
xchg
loopne
stos
(bad)
(bad)
call
(bad)
call
int
scas
int3
jo
int3
popa
sbb
ss
jle
out
push
sub
stc
int
add
push
mov
push
fwait
mov
sub
push
leave
stos
cmp
dec
mov
mov
mov
loopne
mov
cmp
hlt
jno
ja
mov
or
loope
xlat
jp
adc
cmp
retf
mov
or
cmp
add
pop
sub
popa
add
dec
sub
pop
rcr
and
push
cld
jns
leave
aam
sub
inc
movhps
jns
xor
mov
xchg
out
out
std
pop
cmp
pop
fwait
nop
push
dec
pop
ror
sub
jle
mov
or
push
es
and
sbb
mov
repz
stc
ins
xchg
movs
adc
sahf
mov
cmp
call
jne
cmp
or
or
push
mov
rol
push
stos
test
add
adc
scas
add
loopne
out
les
in
inc
in
lahf
or
fisubr
jg
adc
shl
sub
push
out
fcomp
cli
in
loope
xchg
cmp
inc
iret
push
es
jns
adc
retf
data16
loopne
add
call
xchg
cld
cmp
in
xor
js
jne
xlat
jl
repnz
bound
rcr
test
xor
stc
in
inc
mov
push
cmps
ret
and
sahf
ja
retf
add
cld
shr
cmc
jb
dec
sbb
mov
(bad)
std
aad
push
sti
aam
add
mov
or
mov
jp
and
jecxz
jg
and
mov
out
push
fsubr
in
stos
dec
clc
xor
call
ins
fistp
or
mov
cmp
inc
mov
mov
div
jecxz
shl
aas
in
sub
mov
mov
in
cmp
sub
fst
mov
xchg
dec
cmps
shr
pusha
lds
hlt
inc
push
push
dec
(bad)
imul
inc
(bad)
inc
dec
clc
adc
cs
inc
cmp
dec
pusha
in
mov
loop
push
pop
nop
test
sub
loopne
cwde
fs
inc
xor
mov
pop
xchg
dec
sub
mov
sahf
push
xchg
(bad)
ss
and
addr16
jecxz
loop
rcl
bound
dec
jge
neg
gs
outs
sbb
adc
cs
scas
sub
jae
or
shr
ins
or
popa
test
cdq
jae
sbb
les
mov
xor
sbb
out
or
xchg
aad
cmp
push
sar
mov
push
jae
outs
cmp
in
popf
adc
imul
add
mov
xor
clc
(bad)
int
ret
daa
daa
in
jge
mov
in
rol
cmp
pushf
sub
int3
dec
add
in
into
enter
std
and
push
mov
xchg
pushf
mov
push
adc
dec
pop
jle
xor
hlt
les
cmp
movs
cmp
(bad)
mov
pop
lods
push
(bad)
sub
mov
mul
xchg
and
in
lds
add
pop
sub
push
sti
aas
sub
mov
mov
mov
or
xchg
jbe
pop
xchg
inc
sbb
fisttp
imul
cmp
loopne
add
xor
in
mov
cwde
jle
jne
sbb
outs
mov
push
aaa
xchg
scas
jg
out
mov
imul
bound
aaa
mov
xchg
clc
mov
lock
jae
dec
xchg
adc
mov
pop
in
inc
outs
dec
js
stos
add
pop
mov
test
test
xor
je
icebp
xchg
mov
sbb
pop
inc
leave
dec
enter
clc
pop
mov
movs
ds
dec
jb
daa
fisttp
daa
ret
xor
cmps
xor
jg
push
mov
xchg
push
pop
int
popa
repz
int
or
push
inc
pop
es
inc
adc
add
test
adc
jge
call
sub
stos
leave
daa
push
mov
add
not
push
xor
sbb
fwait
cmp
out
mov
scas
sbb
ins
lods
movs
fisub
fidiv
jbe
test
retf
and
sbb
in
mov
xlat
mov
sub
gs
mov
xor
call
mov
arpl
add
dec
fisubr
cld
(bad)
lods
mov
or
xchg
or
jb
add
neg
push
and
mov
sbb
sar
cli
inc
and
mov
les
add
pushf
lods
jecxz
mov
jmp
lods
sub
mov
aad
cmp
ret
adc
out
test
add
dec
push
push
int3
inc
lods
jmp
push
adc
sti
and
push
(bad)
xchg
cld
jns
dec
call
in
gs
in
sti
jmp
dec
dec
retf
fiadd
cli
imul
ja
xor
adc
dec
pop
cmp
cmp
fbld
jbe
jb
sbb
repnz
dec
repz
mov
push
mov
add
and
ret
out
and
and
test
mov
stc
(bad)
jbe
sbb
sub
lods
sbb
sub
inc
pop
out
or
outs
out
sar
jbe
das
push
add
mov
adc
cmc
lods
test
sbb
xor
xor
mov
popf
gs
stos
lds
aam
jb
fwait
push
ror
iret
outs
sbb
or
stos
call
loop
ins
inc
ret
mov
mov
add
add
or
pop
pop
ret
xchg
shl
rol
jmp
not
cmp
xor
cwde
stc
in
sub
pop
ficomp
sbb
sub
popa
push
ds
and
jnp
and
add
std
into
xor
jge
lahf
(bad)
nop
mov
fprem1
sti
mov
leave
pop
push
jg
add
push
loop
pusha
test
adc
(bad)
cmps
mov
mov
jo
icebp
std
dec
mov
mov
jmp
outs
clc
test
ficom
cld
pop
cmp
pop
xchg
ds
(bad)
popf
sti
loop
mov
pop
pop
xchg
loop
les
cmp
not
stos
mov
(bad)
ret
addr16
pop
movd
sbb
pop
dec
pushf
inc
and
pusha
fdivrp
hlt
inc
or
sbb
cli
mov
xchg
sub
aaa
push
inc
jle
lahf
pop
jmp
scas
sub
(bad)
inc
(bad)
fmul
jnp
cmp
cmp
movs
xchg
(bad)
sub
(bad)
rcr
mov
fstp
sar
cmp
ds
or
fsub
fwait
lods
lds
mov
mov
mov
pop
hlt
adc
(bad)
pop
loopne
repz
adc
dec
mov
js
inc
sbb
(bad)
and
mov
test
pop
leave
rol
jno
push
xor
arpl
xlat
inc
sar
(bad)
dec
cmc
mov
pop
(bad)
into
out
mov
inc
(bad)
lea
jg
fisub
jns
repz
or
cmp
inc
imul
arpl
mov
xor
mov
sahf
fwait
dec
or
stos
jo
xchg
mov
stos
ret
mov
frstor
repz
mov
imul
jecxz
lea
mov
cli
icebp
scas
popa
lea
imul
(bad)
jns
or
bound
dec
scas
and
punpckhwd
mov
dec
jns
mov
cmc
mov
retf
xchg
mov
clc
cs
jecxz
cmp
leave
fcom
mov
jb
xor
jge
cmp
push
sub
or
jge
cmp
mov
(bad)
xchg
data16
gs
jb
addr16
bswap
dec
mov
cld
lds
adc
or
sub
sti
sbb
sbb
inc
and
pop
jle
mov
inc
repz
les
fdivr
jne
dec
xor
imul
cwde
jecxz
loope
mov
aas
mov
mov
not
xchg
int
retf
int3
xchg
call
dec
xor
ins
icebp
fdiv
pop
jmp
lods
cmp
shr
xor
xor
fiadd
fs
(bad)
das
add
es
shl
mov
nop
test
imul
dec
pushf
cdq
in
outs
sbb
test
or
js
and
jo
mov
pop
push
xor
leave
cmp
test
inc
pop
test
dec
gs
jno
cld
enter
movs
ror
mov
xchg
push
xor
sbb
mov
ja
mov
push
adc
fcom
popa
mov
hlt
pop
xchg
hlt
xchg
adc
inc
scas
jnp
mov
pop
pop
adc
or
pop
lahf
jl
(bad)
mov
dec
pop
jnp
jge
push
dec
scas
(bad)
adc
pushw
xchg
lahf
test
sahf
xchg
mov
sbb
repz
xor
scas
inc
cmp
mov
jge
sbb
jmp
js
cmp
pop
es
lods
add
jnp
or
mov
scas
movs
push
xchg
outs
mov
or
sbb
(bad)
sub
and
outs
mov
jnp
inc
and
jg
mov
add
loope
adc
add
adc
in
push
mov
imul
clc
inc
ss
lea
jge
cmp
add
or
cmp
inc
ins
mov
loope
in
lock
shl
mov
xor
hlt
fnstenv
fsubr
sub
jl
dec
test
jmp
sbb
mov
add
mov
ja
(bad)
rcl
sub
imul
ror
pop
call
dec
mov
sbb
es
jo
je
lahf
fistp
cmp
cmc
pop
mov
ss
gs
push
(bad)
pop
fild
or
sbb
popa
pop
daa
aad
out
inc
push
repz
adc
addr16
push
sub
cmp
imul
outs
fist
push
dec
jmp
js
or
std
repnz
lea
push
add
mov
outs
fistp
sub
or
pop
pusha
xchg
loopne
cmps
fidiv
fsincos
nop
rcl
adc
pusha
imul
mov
aad
stos
pop
push
lds
mov
out
popa
fst
mov
(bad)
lods
jae
cmp
stos
xor
pushf
push
loop
rcr
retf
and
xchg
(bad)
and
sbb
loop
stos
mov
retf
inc
(bad)
xchg
sbb
cmp
pushf
popa
mov
cld
inc
inc
(bad)
(bad)
dec
xlat
fiadd
push
push
sbb
mov
scas
push
or
and
fisttp
dec
push
ret
in
lods
fld
push
jg
add
ins
cmp
int
mov
sub
movs
sub
and
adc
in
sbb
jne
sbb
call
cmc
xchg
fild
or
xor
sahf
xor
dec
cmc
mov
inc
pop
xor
enter
sub
loopne
pusha
xchg
call
daa
push
sahf
enter
add
and
aas
sbb
sbb
repnz
mov
cmc
jmp
mov
add
(bad)
fs
stc
cmp
pop
xlat
ror
mov
jg
dec
inc
push
adc
mov
add
or
es
das
leave
test
dec
xlat
cs
test
jno
mul
adc
and
aas
xchg
shr
jecxz
jmp
jle
leave
push
cli
stos
cmp
imul
cwde
imul
jge
push
cmp
sahf
add
jmp
lock
sub
cmp
scas
inc
inc
mov
push
xchg
hlt
inc
pop
push
jecxz
jp
inc
sbb
retf
jmp
inc
out
xor
xchg
std
dec
enter
sbb
mov
imul
or
adc
xchg
jmp
or
sahf
xchg
out
pushf
push
pop
fsub
popf
push
rcl
mov
popf
mov
mov
retf
retf
sbb
popa
inc
ins
sbb
push
sub
in
mov
mov
adc
push
xchg
stc
adc
out
js
cmp
mov
addr16
push
mov
dec
mov
and
movs
lock
sbb
pop
jg
pop
pop
mov
fist
call
mov
mov
mov
xor
jne
repz
jmp
pop
scas
(bad)
in
mov
sub
pop
dec
nop
std
inc
mov
in
push
out
mov
test
fcomp
sbb
imul
retf
xchg
bound
loope
outs
sahf
js
cmp
add
xor
jns
in
aad
xchg
les
xchg
pushf
daa
lods
sbb
aaa
lods
jb
cmp
jecxz
dec
xor
pop
mov
push
pop
cmp
gs
punpcklwd
or
jnp
das
xchg
mov
mov
pop
sahf
cmovs
test
outs
mov
shl
es
inc
jmp
push
pushf
sbb
sub
rcl
and
daa
pushf
mov
in
rol
fs
inc
test
jno
call
xchg
iret
or
lock
pusha
(bad)
lock
cmc
and
pop
jg
xchg
scas
cmp
lods
or
imul
xchg
mov
inc
mov
or
je
in
iret
call
(bad)
pop
jmp
add
out
adc
push
in
daa
mov
scas
test
dec
cmps
cmp
add
inc
jo
jo
mov
inc
jmp
stc
jo
adc
jmp
or
pop
or
lock
fs
inc
mov
js
xchg
mov
test
scas
push
and
cmp
jecxz
jp
fidiv
fsub
lock
push
das
dec
and
cmp
dec
sub
xchg
and
jb
adc
fidiv
xor
lea
out
push
xchg
dec
push
out
movs
push
push
pusha
inc
dec
push
neg
cs
push
(bad)
test
dec
outs
push
pop
push
sti
sbb
ret
out
pop
mov
push
cmp
popf
cli
and
shl
sbb
jno
push
(bad)
xchg
sbb
sbb
push
jge
(bad)
shl
cmc
mov
dec
aad
addr16
mov
mov
jmp
push
int3
(bad)
push
mov
popa
outs
pop
mov
mov
push
push
jmp
inc
dec
dec
xchg
pop
push
mov
jo
out
mov
popa
pop
jne
and
add
icebp
push
arpl
jg
inc
jns
xor
and
cwde
push
jg
xor
int3
push
and
xchg
lea
(bad)
aad
cmp
shl
xchg
and
sbb
jp
shl
sub
dec
js
ret
(bad)
(bad)
dec
pop
repz
shr
fcomp
imul
shr
(bad)
in
fidiv
jno
shr
jbe
ss
mov
int
push
sahf
and
mov
xor
lea
inc
and
(bad)
fbld
push
inc
les
shl
mov
and
out
cs
in
scas
(bad)
fdiv
imul
ds
outs
jg
scas
test
outs
mov
fld
int3
jne
enter
mov
fwait
into
mov
loop
or
push
cs
jmp
cli
mov
add
retf
lods
mov
jle
pushf
jmp
js
test
xchg
jae
jae
mov
cmp
sub
test
add
fnstcw
mov
xor
icebp
movs
dec
ins
retf
call
mov
mov
bound
(bad)
cmp
jl
sbb
(bad)
test
lock
ins
stos
out
(bad)
fld
dec
sti
test
xor
jne
(bad)
xchg
and
cmp
inc
cli
mov
jo
inc
push
adc
mov
mov
sbb
push
sbb
mov
es
aas
sbb
push
sbb
push
sub
inc
dec
outs
xchg
scas
lods
movs
test
and
push
xchg
mov
inc
arpl
xchg
cdq
fsub
ror
push
and
ins
fnstenv
test
dec
out
mov
mov
mov
or
jecxz
std
mov
adc
and
cmps
and
cmp
cdq
aas
mov
pop
sub
jecxz
inc
adc
idiv
mov
push
test
push
lods
call
jne
lods
out
outs
sahf
sar
stos
in
imul
in
cs
in
mov
xchg
and
mov
movs
jae
xor
cmc
cmp
inc
call
fisttp
jb
dec
adc
pushf
pop
jo
(bad)
dec
pop
(bad)
dec
sar
push
jmp
frstor
cmc
add
add
test
xor
jl
in
xlat
dec
nop
dec
shl
loopne
lods
sbb
xchg
mov
repnz
xor
out
leave
jmp
aaa
bnd
lea
adc
pusha
hlt
fcomp
xchg
call
pop
push
mov
xchg
js
xlat
and
pop
pop
clc
xchg
fsub
cmp
sti
adc
sbb
fsub
ins
push
in
scas
mov
icebp
les
(bad)
scas
xlat
fucomp
jmp
jl
dec
mov
inc
(bad)
nop
test
xor
cli
jb
jno
dec
xchg
add
cmc
adc
pushf
aas
out
idiv
cli
outs
jo
or
(bad)
sub
lock
inc
pushf
cmp
jbe
xor
aas
inc
ret
out
push
mov
xchg
imul
into
aad
mov
cmp
cmp
arpl
xchg
pop
icebp
jle
or
fld
loop
or
xor
into
jae
inc
inc
dec
xchg
popf
iret
imul
int3
(bad)
movs
or
out
ins
hlt
pop
(bad)
xchg
leave
stc
jns
mov
sbb
fs
iret
pop
xchg
add
dec
lds
adc
and
test
push
loope
ret
jmp
es
ins
jae
sti
mov
bound
jne
pop
call
(bad)
push
ficom
icebp
sbb
sbb
sub
inc
pop
and
pop
bnd
cmp
pushf
rcr
fs
push
jl
pop
mov
loop
or
rol
cmp
ins
or
adc
and
mov
xchg
ficom
aaa
ror
inc
cld
push
add
jno
sbb
call
test
jecxz
xchg
inc
(bad)
mov
cmp
adc
ins
out
retf
outs
mov
pusha
xchg
aam
out
dec
xchg
mov
xor
jb
loope
xor
inc
repz
fidivr
aaa
cmp
loopne
dec
mov
out
test
add
jp
retf
in
lock
push
push
adc
fincstp
mov
fcmovbe
pop
xchg
in
xchg
push
jno
push
enter
clc
or
test
(bad)
retf
aam
es
or
pushf
mov
xchg
sub
les
jle
mov
push
sti
sbb
ret
xchg
fsub
mov
sub
out
mov
lods
xchg
inc
or
loopne
sub
loopne
mov
lahf
sbb
mov
mov
inc
sti
cmp
js
movs
fst
lahf
cs
inc
push
xchg
inc
and
rcr
shl
adc
stos
dec
dec
sbb
js
jle
cmp
int
pause
std
jl
push
sub
xchg
xor
inc
jb
gs
adc
xlat
mov
sub
mov
adc
jle
mov
pop
aam
xlat
daa
(bad)
nop
cwde
push
jbe
icebp
push
shr
in
add
jp
mov
mov
xchg
push
test
mov
repnz
cs
xlat
push
xor
arpl
data16
adc
test
sbb
cmp
mov
xchg
adc
inc
mov
mov
dec
movzx
or
inc
lds
cmps
rep
pusha
(bad)
pop
out
cmp
repnz
jb
outs
xchg
xor
adc
mov
jmp
shl
ins
ins
ffreep
xor
enter
mov
fwait
call
sub
push
imul
adc
les
sub
push
pop
shl
pop
jns
aaa
outs
and
push
sti
pop
mov
bound
mov
jne
mov
ss
push
adc
pusha
(bad)
sub
push
popa
pop
jmp
or
neg
or
pop
inc
aas
mov
add
(bad)
pop
sub
test
fst
lods
loop
dec
push
popf
mov
push
push
inc
xchg
mov
inc
inc
(bad)
test
mov
mov
mov
lods
rcr
arpl
(bad)
fbld
add
fistp
add
pop
cmp
add
pusha
cld
mov
push
sub
and
ret
shl
pop
and
xchg
add
imul
movs
pushf
(bad)
lods
dec
fisubr
out
jl
imul
lock
mov
sbb
sbb
mov
sbb
pop
or
movs
jmp
mov
sub
dec
fbld
mov
rcr
in
jo
and
test
cmp
inc
and
mov
out
ret
hlt
hlt
xchg
pop
imul
je
mov
add
iret
(bad)
retf
push
loop
push
scas
dec
push
jle
and
lea
in
in
pop
cmp
xchg
(bad)
mov
bound
pop
movs
inc
cdq
pusha
jns
or
sbb
xchg
imul
xchg
test
mov
push
inc
scas
and
push
aaa
je
mov
ins
mov
push
lea
jle
test
mov
lock
xchg
jns
ror
and
xchg
sti
add
mov
ds
or
fild
cmp
push
pop
in
cs
stos
push
add
popf
inc
sub
(bad)
in
clc
jae
dec
pop
push
mov
test
adc
ja
out
sbb
pop
jmp
cli
mov
push
ret
mov
repz
in
mov
call
mov
dec
clc
or
add
jle
test
lods
and
sub
pushf
mov
rcr
pop
ret
je
pop
rcr
adc
jnp
movs
adc
out
adc
fwait
lods
adc
cmps
lock
jle
(bad)
sub
das
pop
pusha
mov
jmp
mov
cwde
out
and
lds
sbb
jo
mov
sub
xchg
mov
fwait
jo
sub
sub
push
pop
sub
inc
gs
lods
pop
sbb
int
nop
mov
mov
and
xor
dec
mov
pop
enter
pushf
or
hlt
push
test
movs
pop
push
dec
shl
pop
rol
adc
imul
fnstsw
mov
out
xchg
cmp
xor
clc
into
scas
add
dec
add
ret
outs
xor
jbe
(bad)
test
shl
daa
ins
outs
or
cmps
jmp
das
int
fst
dec
sub
test
sbb
sub
jle
cs
jo
sbb
and
repnz
sbb
jmp
and
dec
sbb
clc
pusha
push
push
sahf
movs
xchg
outs
je
sub
(bad)
in
fwait
les
pushf
pop
call
js
mov
mov
xchg
mov
jge
iret
push
aas
adc
out
add
xchg
adc
dec
imul
call
mov
jae
stc
test
rcr
or
mov
sahf
es
pop
das
mov
push
jg
popa
or
enter
scas
lods
cmps
loopne
rcl
xchg
jmp
addr16
ins
rcl
pop
pushf
adc
aam
sub
xchg
arpl
rcl
pop
ins
sbb
dec
int
xchg
inc
popf
icebp
lea
mov
sub
pop
test
enter
jo
in
imul
retf
adc
movs
push
adc
movs
loope
pop
test
rol
aaa
iret
xchg
adc
dec
imul
scas
push
test
xlat
and
or
mov
xchg
outs
push
inc
(bad)
loope
sub
push
fwait
into
dec
cdq
retf
mov
and
sbb
ins
mov
ret
cmp
mov
or
pop
xor
stos
mov
xchg
push
cmp
out
out
scas
xchg
pop
cmp
add
sub
aam
adc
inc
push
dec
jns
in
adc
fcmove
pop
or
push
fdiv
mov
sar
mov
jmp
inc
lds
xor
sti
repnz
aaa
(bad)
adc
scas
sbb
bound
repnz
mov
sub
shl
in
or
ss
repz
ins
jp
push
inc
sar
jl
aaa
out
jae
lahf
push
aas
out
xor
pop
jae
movs
cmc
in
in
xchg
aas
loop
pop
jg
push
mov
jecxz
jp
mov
dec
push
stc
or
pop
pop
lods
iret
adc
fucomip
jne
jl
xchg
sbb
ret
dec
xlat
mov
loop
outs
cmp
jo
fwait
mov
aad
(bad)
xchg
pop
imul
lahf
call
add
clc
xchg
xor
add
mov
test
adc
or
add
loopne
xchg
pop
inc
sbb
lock
mov
inc
dec
dec
sbb
mov
out
repnz
mov
repnz
movs
push
sbb
mov
dec
loop
(bad)
dec
push
inc
sub
daa
int
int3
and
call
xlat
neg
mov
std
(bad)
jno
pop
jne
les
iret
push
fsub
icebp
sbb
popa
and
sahf
push
out
(bad)
enter
fadd
adc
jno
pop
jg
retf
ret
mov
in
scas
(bad)
dec
sbb
adc
(bad)
es
mov
shl
and
pusha
in
xchg
fbld
lods
jecxz
sbb
cmc
jns
adc
cmp
xchg
imul
rol
in
ja
jbe
loopne
stos
aad
mov
fiadd
push
les
fbld
pop
lds
jecxz
pop
push
sub
push
push
ficomp
jmp
xchg
std
dec
mov
arpl
mov
sub
inc
sbb
clc
jle
lds
cmp
push
repnz
xchg
dec
in
push
add
outs
sti
mov
pop
and
push
data16
sub
sbb
mov
or
aam
frstor
dec
test
xchg
xchg
dec
xchg
mov
xchg
fnstcw
in
lods
stc
sbb
lea
pop
div
and
mov
pop
nop
(bad)
arpl
or
xchg
daa
inc
(bad)
sub
clc
xchg
out
mov
jp
retf
call
pusha
push
adc
xor
push
out
add
xchg
cmps
test
push
fdiv
cmp
test
stc
pop
jno
xor
jg
cli
fwait
lea
cmp
sahf
in
cmp
outs
mov
mov
and
clc
pusha
in
mov
cmc
inc
sub
add
fst
xor
mov
push
int3
dec
dec
inc
xor
enter
je
push
fstp
into
dec
ror
sub
jns
mov
pusha
jge
mov
xlat
in
(bad)
sub
aam
push
repz
retf
fcmovnb
mov
xchg
sbb
lea
enter
push
add
arpl
jbe
dec
or
adc
enter
dec
test
xchg
cld
sbb
push
xchg
ret
xchg
inc
into
test
idiv
xchg
(bad)
rcl
sub
xchg
enter
adc
test
sub
sbb
and
dec
sahf
add
adc
xchg
jno
sub
aas
jg
mov
xor
push
xor
shl
and
out
jg
in
xor
aam
lods
adc
or
jmp
xor
inc
es
cmps
mov
push
sbb
inc
mov
cdq
das
adc
xchg
sub
cwde
(bad)
test
cmp
jnp
or
cdq
and
push
pusha
and
lock
pop
inc
cmp
and
(bad)
int3
movs
cmps
ins
popf
cmp
div
adc
out
mov
jbe
mov
rcr
jnp
pop
xchg
ret
cli
fist
aam
mov
outs
call
xchg
pop
cmps
adc
push
ror
ins
push
in
mov
int
das
xchg
ret
push
test
stc
data16
pop
popa
or
das
call
push
out
(bad)
cmps
into
mov
or
mov
inc
sbb
ins
jmp
imul
mov
gs
push
lods
inc
test
mov
je
and
hlt
addr16
addr16
fs
sub
xchg
sbb
xor
ret
ret
push
stc
jae
mov
in
xchg
push
neg
bound
jno
dec
daa
xor
xchg
jg
jl
iret
inc
sahf
pop
mov
dec
xlat
arpl
adc
test
repnz
jl
mov
sub
push
int
fadd
repnz
jb
imul
jae
std
out
lods
cmps
dec
pop
mov
mov
push
repz
adc
jns
dec
fs
sub
add
scas
fisttp
test
(bad)
cmp
clc
fnstenv
and
push
(bad)
jecxz
nop
jo
mov
int3
shl
jbe
shl
xchg
pop
jno
hlt
xchg
cmc
mov
push
sti
xchg
arpl
das
repz
xor
xchg
dec
jge
jno
neg
push
in
jmp
ret
fiadd
dec
out
ja
jne
mov
aam
es
lock
pop
jg
out
cmc
mov
jl
jnp
std
cmp
sbb
adc
cmps
cs
jo
xor
add
aas
pushf
jle
cmps
sbb
std
rcl
fsubr
in
mov
push
test
pop
xor
pop
pop
cmp
add
jmp
and
out
and
popf
and
psllw
pop
sub
add
mov
and
mov
repnz
add
jo
jmp
rcl
sub
sti
ja
jno
xlat
inc
lods
pop
pop
movs
sar
and
xchg
gs
mov
mov
sub
into
ret
xlat
leave
rcl
dec
cmps
es
les
pop
ror
sbb
xchg
jb
rol
std
cmps
out
push
sub
cmp
cmc
fstp
mov
ss
jl
loope
sub
mov
test
xchg
pop
test
mov
adc
out
pop
mov
pushf
outs
outs
repz
or
rcr
in
jnp
pop
gs
es
movs
aad
and
outs
cmp
lods
enter
inc
jbe
add
sub
xchg
dec
out
pop
leave
cmp
cld
mov
pop
aas
push
lea
adc
jb
retf
cs
test
repz
sbb
test
es
arpl
push
in
stc
jmp
stos
dec
or
call
and
jno
in
jmp
dec
movs
mov
scas
push
not
ret
dec
xchg
xchg
add
xchg
shl
and
es
movs
addr16
push
push
ret
inc
pop
jle
push
(bad)
sub
test
jg
mov
mov
scas
adc
dec
cmp
repnz
shl
dec
mov
in
push
or
mov
jle
cmp
scas
in
loop
or
jns
sbb
pop
test
cmp
es
in
aas
mov
jo
xchg
dec
in
test
mov
dec
loop
or
mov
mov
outs
test
cmp
cmp
stc
adc
imul
imul
jp
retf
clc
jno
cwde
jbe
and
cmp
pop
stc
and
mov
xor
push
stos
push
jmp
rcr
test
mov
dec
mov
sub
and
adc
lds
mov
por
jp
xchg
pop
ret
(bad)
jl
cmp
mov
xchg
lods
in
movs
add
push
daa
cld
add
jge
sbb
leave
adc
imul
icebp
xchg
(bad)
pop
push
or
ret
pop
and
or
and
or
sbb
loop
sbb
jg
in
sub
ja
sbb
add
push
dec
mov
shl
bswap
xchg
and
rol
repz
mov
nop
sub
nop
xor
add
xor
mov
stc
mov
push
test
iret
ret
into
cmp
(bad)
add
ror
inc
daa
fwait
out
(bad)
call
xor
jp
mov
(bad)
dec
enter
mov
call
popa
xor
and
mov
mov
sbb
(bad)
lods
mov
push
aad
fnsave
outs
push
and
inc
xor
loop
mov
es
jecxz
out
mov
pop
xor
push
icebp
les
jb
cmps
cmps
cli
mov
inc
loop
popa
sbb
imul
enter
(bad)
call
mov
mov
cmp
mov
popf
rcl
pop
mov
daa
js
mov
clc
loop
(bad)
aad
mov
jae
jne
rol
sbb
retf
std
mov
ficom
lods
push
lock
mov
jno
add
dec
nop
push
dec
jge
inc
test
leave
push
inc
fistp
out
aas
and
lods
add
psrad
push
movs
ret
add
cmp
je
add
in
lods
dec
xchg
pop
test
inc
js
imul
pop
dec
fucomi
fsub
pcmpgtb
dec
mov
add
cmp
pushf
add
leave
(bad)
(bad)
jns
add
mov
rol
ds
jg
push
sti
xchg
retf
(bad)
xlat
in
or
pop
jns
jno
mov
sbb
pop
mov
mov
jnp
cli
lods
add
and
mov
sub
pop
pop
ja
ret
push
int
scas
jg
push
popa
rcr
xor
fldcw
mov
mov
int3
stc
repz
jecxz
cmc
es
(bad)
(bad)
mov
push
or
sbb
dec
scas
jp
or
(bad)
sbb
ficomp
int3
inc
int3
je
xchg
mov
xchg
out
lods
jns
or
repz
jnp
pop
in
mov
mov
or
and
cmps
test
mov
and
in
clc
mov
into
(bad)
jns
mov
push
ficom
movs
shl
ja
jle
push
(bad)
add
ret
xchg
pop
xchg
iret
jb
mov
dec
pop
stos
mov
mov
jecxz
das
int3
aas
dec
pop
or
pop
cdq
ror
dec
or
(bad)
std
test
sbb
add
enter
call
and
and
jecxz
jmp
sbb
pop
imul
or
cdq
adc
cmp
int3
push
and
or
in
inc
pop
out
mov
test
mov
sbb
pop
xlat
pop
push
lahf
mov
(bad)
(bad)
xchg
pop
add
xchg
clc
mov
idiv
add
test
xor
mov
mov
xchg
mov
das
iret
mov
xchg
adc
add
scas
call
push
mov
lahf
pop
jne
stos
ins
in
pop
or
and
dec
movs
cmps
(bad)
int3
mov
arpl
aam
xlat
ret
clc
inc
push
and
xor
stos
pop
cs
popa
sub
sub
retf
mov
pmaxub
test
xor
mov
push
mov
inc
int
push
pusha
xor
pop
jg
into
ja
sahf
(bad)
lods
sti
mov
fwait
imul
cmp
movs
sbb
dec
inc
jmp
add
jp
adc
pusha
cmp
push
cmp
mov
rol
sub
push
pushf
jecxz
sahf
and
out
sub
inc
leave
daa
jg
xchg
imul
pop
sbb
inc
shl
daa
nop
add
xor
pop
iret
out
inc
gs
aad
or
sbb
pop
les
jle
sbb
jne
push
xchg
fnstcw
out
clc
cld
xchg
gs
inc
pop
int3
call
inc
inc
mov
lahf
shl
cmp
mov
fisttp
in
mov
shl
jmp
das
xor
lods
and
jge
cmp
add
push
mov
push
cld
push
push
mov
or
test
pop
call
xchg
not
std
movs
jbe
mov
mov
mov
loope
stc
xchg
(bad)
(bad)
jp
addr16
dec
movs
fsub
jl
jmp
jae
xchg
leave
ror
jb
mov
inc
out
std
adc
or
(bad)
or
mov
fist
sbb
pop
ficomp
inc
fwait
xchg
outs
jecxz
leave
sub
jl
push
cmp
scas
pop
js
dec
cmp
push
in
cmp
inc
and
sbb
push
pop
cmp
pop
jmp
nop
(bad)
mov
mov
or
nop
or
xchg
loop
ret
(bad)
xchg
movs
gs
loope
lea
movs
mov
cmp
dec
call
test
or
(bad)
jb
mov
mov
pop
je
xchg
inc
xchg
out
xchg
shl
fstp
mov
mov
mov
cld
push
mov
pusha
mov
inc
inc
push
shr
or
pop
mov
fnstsw
add
pushf
adc
jle
pusha
mul
and
mov
scas
and
push
or
fsubr
call
xor
mov
jecxz
jne
dec
add
idiv
in
aad
shl
lock
fs
xchg
adc
xor
jmp
xchg
ins
add
bsf
dec
mov
ror
add
scas
dec
xor
adc
or
or
sub
pop
adc
pop
sbb
mov
in
mov
add
cs
pop
or
adc
dec
sbb
push
add
push
icebp
mov
sub
shl
and
cmp
mov
in
dec
mov
nop
cdq
ins
cmp
retf
mov
push
je
xchg
std
or
jl
sbb
(bad)
je
mov
fs
ins
push
push
hlt
push
jmp
push
sub
scas
ret
cmp
(bad)
in
sub
inc
(bad)
sub
into
jb
cmps
dec
sub
dec
cdq
xchg
out
cmps
(bad)
push
cmp
out
jp
aaa
or
mov
cmp
jecxz
dec
aad
and
call
xchg
push
nop
fmul
mov
mov
js
(bad)
nop
add
ret
arpl
daa
hlt
stos
fnstcw
les
sbb
cmp
outs
(bad)
mov
adc
jmp
push
sahf
xor
dec
pop
pop
dec
lods
mov
iret
sahf
or
stos
enter
test
push
(bad)
aaa
or
inc
and
dec
pushf
inc
jbe
mov
test
mov
sub
ret
daa
mov
push
jbe
test
lds
repz
aam
mov
cmp
ja
not
mov
lods
adc
out
outs
mov
test
enter
push
cs
adc
jne
or
ret
fwait
and
cmp
clc
dec
out
loopne
(bad)
xchg
xchg
scas
push
adc
mov
jb
clc
imul
dec
xchg
int
pop
sti
and
and
cwde
and
xor
repz
sbb
jl
enter
cmp
es
pop
lock
dec
repnz
nop
daa
or
push
out
adc
sub
(bad)
jmp
sub
(bad)
daa
jge
not
cmps
pop
or
mov
cmps
in
arpl
adc
dec
sub
push
sbb
fist
inc
sub
dec
mov
ror
(bad)
cmps
sbb
xchg
rcl
fwait
push
cmc
xor
jo
sbb
or
dec
pop
sbb
cmp
hlt
mov
pushf
sahf
xchg
pop
rol
mov
mov
loop
repz
(bad)
push
sar
sub
cmp
repnz
and
pop
xchg
stos
add
pop
pop
cwde
or
add
fs
cli
test
mov
jo
ret
push
jl
jmp
adc
ins
jle
outs
ss
sbb
cmp
jo
int3
push
pop
(bad)
or
inc
aam
dec
jle
mov
jge
arpl
mov
les
push
test
in
stos
rcr
sahf
fild
std
cmp
or
mov
outs
cmp
sub
fisubr
mov
inc
cli
inc
outs
fwait
xor
cmp
and
jb
lds
std
sub
xlat
fnsave
pusha
mov
jl
addr16
mov
shl
loopne
aaa
jg
push
pop
sub
mov
sbb
stc
dec
aaa
xchg
int3
jp
adc
daa
test
pop
daa
in
mov
js
mov
lods
push
out
cmps
xor
and
jnp
or
cld
in
dec
hlt
aaa
repz
and
lods
out
dec
inc
(bad)
ins
sub
sub
and
and
test
aam
(bad)
enter
sub
repz
aaa
adc
mul
out
stos
ins
or
mov
aad
inc
xor
into
jecxz
jmp
out
loopne
shl
(bad)
jno
sbb
pop
aaa
imul
xchg
inc
push
hlt
xchg
repz
mov
cmp
inc
ror
cmp
pushaw
pop
les
cli
ja
mov
retf
push
mov
mov
dec
push
mov
push
mov
push
ins
cmp
xor
push
cmps
push
jl
imul
add
jle
cwde
test
sub
in
lea
mov
test
add
cs
movs
sbb
dec
popf
retf
pop
daa
jae
pop
sar
jo
adc
call
push
jbe
and
call
jmp
repnz
mov
push
int
sbb
cmps
inc
shl
in
lods
xor
fucomi
call
jb
ret
les
cmp
int3
mov
mov
add
aam
leave
and
jmp
jns
jecxz
pop
mov
sbb
inc
lea
scas
daa
rcl
mov
adc
push
mov
pop
aam
aad
lea
movs
(bad)
mov
scas
imul
popa
addr16
and
cmp
cmps
or
retf
sub
cmp
mov
rcl
push
adc
scas
xchg
out
push
js
jmp
loop
pop
lock
std
mov
(bad)
nop
inc
xchg
fnstsw
movs
sub
in
and
mov
pop
and
push
pop
imul
jns
test
aad
pextrw
test
inc
mov
push
test
(bad)
jo
icebp
fld1
mov
cmp
pop
movs
jl
neg
std
or
fcomp
outs
xchg
or
aam
pop
mov
test
push
rcr
les
lea
lock
mov
jbe
or
adc
jae
test
(bad)
adc
jo
xor
test
inc
and
sub
aam
sub
(bad)
cmp
pop
out
imul
sahf
loop
aad
xor
pop
dec
sbb
mov
jmp
cmp
sub
gs
shl
mov
add
iret
inc
out
pop
cmps
pop
in
or
pop
mov
nop
pop
sbb
loopne
int3
scas
(bad)
aas
es
movs
pop
out
sbb
in
ins
sbb
add
mov
movs
or
(bad)
gs
(bad)
push
adc
cmp
add
or
shr
dec
popf
ret
imul
daa
adc
mov
push
cmps
xor
jae
xchg
call
jb
dec
jp
jle
ja
sub
inc
and
pop
les
ss
sub
(bad)
push
test
ret
lea
push
in
fldcw
xor
mov
push
mov
lods
push
fdivr
mov
and
add
out
aaa
loopne
mov
fistp
cdq
pop
sbb
mov
(bad)
out
mov
adc
dec
aaa
add
out
sbb
inc
cld
jp
test
inc
push
scas
sbb
dec
dec
call
push
call
cmp
xchg
ffreep
fisubr
aaa
(bad)
ss
or
add
xor
push
js
push
jmp
fstp
xor
cld
add
cmp
shl
in
inc
or
xchg
xchg
ret
lods
mov
dec
jl
jmp
inc
jo
aaa
jmp
jmp
mov
ja
push
adc
push
dec
xchg
xchg
inc
xchg
dec
das
adc
cmc
stos
shl
sub
ins
add
in
lock
mov
jl
mov
and
aas
fisttp
loope
shl
add
fidivr
(bad)
das
retf
jecxz
xor
inc
adc
cmp
gs
ror
sti
aas
movs
and
push
(bad)
les
jb
ins
xor
sbb
mov
ret
sub
mov
sbb
mov
daa
cmp
xchg
addr16
aaa
aaa
and
pop
xchg
jl
pop
popa
fsubr
ins
pusha
jmp
jbe
push
out
mov
imul
inc
fidiv
add
adc
imul
les
or
add
pop
mov
pop
retf
and
mov
mov
fadd
sbb
mov
ja
jge
pop
pushf
push
jae
(bad)
shl
adc
(bad)
mov
dec
outs
mov
sti
cmp
rcl
lds
and
sbb
mov
jmp
pop
dec
or
lods
adc
push
ret
adc
or
mov
jnp
gs
je
(bad)
jns
fwait
les
jp
mov
mov
push
loopne
fwait
mov
jnp
ret
ds
mov
sbb
div
pop
mov
fidiv
jg
sbb
and
xchg
sub
adc
out
xchg
test
ins
sbb
cmps
jl
push
fwait
int
js
mov
jmp
jns
pop
jb
mov
cld
cld
jae
sbb
pop
fimul
and
das
xchg
mov
aad
dec
popa
jb
daa
loopne
out
icebp
push
pop
inc
ret
cmp
cmp
sti
sub
xor
(bad)
dec
inc
in
bound
dec
jmp
jmp
mov
mov
xlat
cmp
jmp
les
imul
dec
or
out
cs
vmovdqu
lahf
push
mov
fs
fs
sar
adc
xor
pop
push
push
cmc
pop
arpl
dec
(bad)
test
ja
sbb
push
xchg
cmps
and
sar
push
pop
out
pop
mov
inc
lea
add
icebp
cmp
or
js
ins
and
and
dec
mov
xchg
mov
outs
mov
int3
jns
stos
in
xor
clc
xchg
xchg
cld
data16
aad
and
outs
mov
jg
inc
imul
repnz
xor
or
push
call
mov
cmp
outs
popa
mov
lock
xchg
dec
inc
outs
or
pop
dec
sbb
popf
and
cld
adc
out
add
add
fisubr
add
mov
jmp
cmp
int3
push
inc
sub
mov
add
jmp
push
ret
xchg
les
dec
jmp
pop
stos
cmp
or
clc
mov
ja
dec
or
and
mov
das
or
or
shr
push
adc
pop
jo
xchg
cmp
add
cmps
call
xchg
sar
sub
sbb
stos
mov
inc
into
imul
out
or
push
mov
loop
mov
mov
or
dec
add
mov
add
(bad)
jns
imul
fist
sbb
adc
int3
in
jb
jp
retf
ds
imul
movs
and
xor
loopne
push
add
jg
mov
call
jge
test
or
mov
xor
mov
dec
xor
xchg
aad
lds
mov
push
mov
shr
repnz
(bad)
dec
cmps
sbb
jnp
(bad)
test
sub
sub
mov
and
add
cs
mov
cmps
xchg
fimul
pop
adc
sar
cmps
mov
in
out
fiadd
mov
js
shr
outs
pop
hlt
inc
mov
jo
xor
ret
sub
out
fild
sbb
je
mov
push
pop
sub
or
push
xor
cmp
loope
or
mov
ins
sbb
pushf
cmp
mov
xchg
scas
ret
(bad)
lahf
mov
jae
xchg
push
sub
ins
(bad)
jnp
push
aaa
scas
aas
inc
xchg
stc
in
pop
add
into
neg
int
adc
rcr
movs
pop
xchg
pushf
cmp
call
mov
sub
lds
xchg
in
cwde
popa
retf
int3
or
add
jbe
lock
rol
clc
out
sahf
arpl
movs
or
jg
jge
enter
mov
xor
sbb
push
jmp
sub
test
adc
lock
mov
stos
dec
jne
shl
fist
xchg
movs
aaa
popa
pop
jbe
cmp
adc
mov
fxch
dec
dec
push
cld
das
and
shr
mov
call
out
movs
mov
rol
push
data16
xchg
dec
jle
test
pop
test
mov
sbb
outs
mov
push
mov
clc
mov
add
and
fstp
sub
sahf
dec
ja
popf
scas
cs
xlat
xor
lods
sub
add
and
push
mov
(bad)
not
imul
(bad)
add
popf
jae
jae
mov
add
addr16
mov
push
mov
addr16
mov
mov
ins
lods
adc
dec
repz
lods
mov
iret
cli
mov
scas
sbb
xchg
es
jno
(bad)
bound
icebp
xor
test
int
mov
imul
(bad)
xchg
fs
pop
shl
loope
pop
or
movs
test
jecxz
xlat
and
ja
inc
out
adc
pushf
mov
jecxz
loopne
dec
int3
sahf
data16
nop
imul
(bad)
mov
and
nop
aaa
(bad)
mul
iret
idiv
gs
sub
stos
or
adc
in
cdq
mov
sub
clc
in
lods
mov
ret
lods
sahf
out
jno
(bad)
or
mov
xchg
sar
xchg
mov
mov
pop
and
nop
(bad)
mov
sbb
jb
jle
or
push
inc
cmp
jge
ret
sub
shrd
sbb
mov
sbb
lahf
loop
pop
aam
call
jmp
stos
fwait
in
lahf
or
pop
out
sahf
mov
(bad)
ja
not
pop
enter
rcr
inc
sahf
es
jge
cwde
loope
mov
lds
pop
xchg
shr
pop
pop
outs
pop
fisttp
nop
mov
cs
adc
lods
mov
or
mov
mov
mov
jle
inc
sar
test
out
stc
scas
ins
jmp
xor
cmp
sbb
xchg
inc
je
fprem1
lahf
adc
mov
push
retf
pop
(bad)
push
scas
movs
push
add
xchg
enter
and
(bad)
jmp
dec
jo
mov
test
fimul
aad
push
call
mov
jl
mov
push
lds
iret
jno
jle
adc
sbb
(bad)
xchg
and
ficomp
mov
dec
repnz
arpl
and
cmp
push
mov
shr
iret
pop
ins
mov
rcl
xlat
clc
dec
hlt
and
cld
sub
push
stc
retf
mov
adc
sbb
js
mov
add
lea
in
jl
leave
and
(bad)
icebp
add
scas
push
pushf
(bad)
(bad)
dec
loop
mov
ret
and
sbb
rol
pop
mov
popa
mov
daa
lods
sar
cld
das
arpl
addr16
in
jnp
push
or
inc
cmp
jns
rol
dec
call
push
sbb
inc
mov
mov
sub
xor
test
in
fisub
js
mov
xchg
xchg
jae
in
repnz
pop
and
cmp
cwde
arpl
in
xchg
repnz
(bad)
xor
daa
mov
dec
pop
push
xor
push
enter
jle
mov
rcl
scas
fwait
pop
sub
cmp
or
cwde
mov
mov
div
inc
and
out
xlat
cwde
ins
ret
iret
stc
dec
or
xor
fmulp
in
ins
mov
add
cmp
imul
and
xor
sbb
mov
sti
mov
mov
sti
ret
ins
fcos
adc
add
cli
jge
jle
sbb
lods
imul
or
or
aas
data16
test
xor
add
mov
push
cmp
rcr
mov
push
fiadd
inc
mov
jp
bound
popf
dec
fsubp
pop
push
adc
adc
xor
in
jmp
outs
icebp
add
pusha
inc
movs
jo
sbb
int
iret
jns
inc
xor
test
sub
or
ss
push
retf
mov
aad
mov
push
lock
mov
loope
fmul
dec
mov
lahf
test
inc
mov
dec
ror
push
sbb
scas
adc
int3
adc
mov
outs
cmp
inc
(bad)
xchg
jb
aam
sbb
div
sbb
outs
xor
mov
out
xlat
add
daa
pop
rol
ss
lock
enter
rcl
sub
add
mov
rcr
mov
jb
jno
sub
js
adc
jmp
retf
xchg
jno
xchg
daa
mov
mov
hlt
push
ret
je
lods
popf
ins
mov
lahf
mov
ja
or
(bad)
out
jmp
mov
jbe
jbe
loope
pop
shl
lock
sub
or
out
out
sbb
mov
inc
push
aam
xor
xchg
mov
dec
pop
fst
div
xchg
jecxz
call
mov
mov
js
cmp
push
jg
xor
mov
sub
sbb
daa
call
cmp
int
ins
aam
fcom
pop
pop
mov
and
dec
mov
enter
ds
ror
push
sub
imul
aam
cmp
jbe
aas
iret
push
jp
adc
add
ja
sbb
ja
add
jmp
bound
mov
(bad)
xrelease
push
push
cld
push
arpl
lods
mov
jmp
add
mov
pop
pop
ins
push
retf
test
fdivr
je
iret
stc
adc
pop
dec
out
push
aad
js
es
inc
popa
lods
pop
test
xor
and
pop
addr16
scas
xor
je
imul
ins
fucom
cvtps2pi
lahf
fstp
(bad)
lods
popf
gs
int3
dec
pop
repnz
jg
(bad)
imul
xor
test
push
ja
out
popa
jle
xchg
cmp
sbb
mov
push
push
lds
push
in
xchg
shr
je
js
out
mov
push
cwde
ja
int3
sbb
or
pop
mov
in
in
es
xchg
aas
jno
or
jbe
xor
xor
add
jmp
movs
sbb
arpl
loop
pushf
adc
mov
ret
in
rcr
push
fnstsw
add
das
lea
retf
push
mov
cmp
push
add
in
hlt
add
ret
xor
pop
lea
xor
fbstp
call
iret
cmp
lahf
push
mov
jo
mov
pusha
push
jbe
stos
dec
dec
(bad)
stc
inc
scas
mov
vmwrite
mov
test
mov
and
or
in
pop
xor
mov
sbb
xor
cmc
les
mov
fwait
mov
pop
pusha
je
push
mov
fwait
outs
imul
cmp
out
xor
push
cmp
jge
jmp
jle
jl
mov
rol
xchg
mov
sahf
loope
aad
jnp
sbb
ret
mov
xor
out
xchg
pushf
xchg
and
xor
stos
movs
push
and
pop
add
in
push
fisubr
sbb
je
fsub
lods
iret
adc
fistp
mov
jne
pushf
jg
jns
cs
add
pop
retf
stos
mov
pop
leave
dec
adc
data16
jmp
jno
leave
cmc
call
std
pushf
(bad)
mov
pop
xchg
mov
push
adc
mov
xchg
xchg
fnstenv
cdq
outs
and
cmps
ret
shl
das
adc
in
sub
push
xlat
push
fidiv
pop
push
inc
rcl
test
dec
inc
push
rcl
repz
jmp
int3
mov
ds
hlt
ins
xchg
mov
icebp
into
xchg
xchg
data16
xor
rcl
popf
add
sbb
mov
bnd
popw
push
fs
fimul
ror
mov
or
jbe
fist
jne
push
adc
jne
and
mov
inc
rcl
mov
xchg
je
ins
lahf
out
inc
into
add
in
inc
sbb
add
ret
bound
push
dec
popf
mov
shl
or
adc
mul
repnz
mov
(bad)
sbb
or
jle
jbe
es
and
dec
test
in
ja
es
cld
inc
push
retf
imul
iret
jmp
std
lods
and
inc
xorps
adc
cs
imul
call
mov
pop
cmc
push
adc
push
push
xor
push
and
lock
inc
adc
fwait
push
movs
push
xor
sub
rol
mov
rol
shl
pop
push
mov
dec
data16
add
mov
(bad)
stc
scas
fld
push
jmp
aam
add
inc
cmps
inc
jo
mov
push
push
push
push
or
or
cmp
mov
scas
push
ret
test
mov
push
call
aam
lahf
test
mov
shl
das
mov
in
or
movs
pop
sub
(bad)
in
sub
inc
pop
fdiv
loop
mov
adc
mov
pusha
sti
fisubr
sbb
sub
push
dec
inc
popf
outs
push
lahf
xchg
push
or
inc
adc
inc
arpl
lea
int
gs
(bad)
nop
das
(bad)
sub
mov
jp
cmc
add
and
push
(bad)
cdq
push
lods
or
cwde
lds
mov
icebp
sub
sub
mov
sbb
cmp
not
test
aaa
aaa
jecxz
mov
pop
fs
cmp
loop
xor
aaa
mov
xchg
pushf
sar
push
out
sbb
push
pushf
or
xor
sub
mov
lock
or
and
xor
mov
ins
shl
dec
ficom
adc
mov
pushf
imul
or
popa
into
pop
mov
rol
icebp
stos
xchg
retf
xchg
cmp
mov
jmp
inc
imul
mov
les
iret
dec
stos
cwde
and
mov
cld
leave
push
nop
mov
sbb
sbb
mov
imul
add
(bad)
idiv
and
mov
xor
mov
test
mov
push
dec
pop
push
mov
add
sub
or
retf
cmps
fidivr
xor
fisttp
bound
shl
stos
jle
fld
jg
icebp
cmps
xlat
push
and
push
mov
dec
push
repnz
xlat
(bad)
and
push
push
das
xchg
and
jmp
in
push
aam
mov
mov
rcr
add
or
push
int3
xchg
cmps
jae
imul
mov
inc
jns
dec
adc
xlat
adc
sar
lods
and
adc
add
inc
push
movs
and
inc
and
mov
mov
xor
and
pop
shl
jl
stos
test
fcomp
fsubr
mov
daa
add
push
push
mov
popa
sbb
fwait
jmp
jnp
jne
inc
in
stos
test
add
mov
push
aas
lock
push
iret
jl
loopne
loop
fiadd
aad
lods
sub
int3
push
addr16
stos
sti
add
inc
shl
jns
hlt
sub
mov
push
out
mov
popa
pusha
pop
or
rol
pop
xor
pushf
xor
fst
rcl
and
retf
cld
outs
or
push
es
sub
mov
inc
xor
test
lods
sub
xor
cmc
xor
xchg
pop
(bad)
loope
xor
mov
das
sbb
and
push
xchg
scas
pop
out
pop
xchg
dec
inc
loop
gs
or
(bad)
cmp
nop
(bad)
data16
iret
movs
jmp
leave
inc
out
ins
mov
aas
xor
rcl
out
dec
addr16
mov
mov
icebp
mov
adc
(bad)
gs
loopne
dec
or
mov
dec
jnp
ins
pop
hlt
fmul
imul
mov
mov
lahf
jo
push
mov
add
fstp
fbstp
mov
popf
jmp
call
and
mov
dec
popa
pop
jo
or
cli
mov
and
cld
jo
icebp
inc
ins
adc
jnp
lea
mov
inc
shl
fldenv
sub
sbb
fild
mov
push
xor
fimul
add
push
ds
and
push
cmp
and
add
adc
or
xchg
mov
dec
lds
push
clc
jl
push
mov
push
cli
mov
(bad)
sahf
dec
inc
ins
mov
inc
retf
pop
sub
cmp
inc
es
popa
xlat
push
xchg
xchg
dec
or
inc
js
popf
int3
ficomp
cmc
cmp
leave
mov
mov
push
loopne
sub
cmp
pop
and
mov
aaa
mov
sbb
fs
jb
ja
and
dec
dec
sbb
mov
inc
mov
imul
mov
dec
push
mov
mov
pop
push
(bad)
neg
xor
pop
fistp
out
dec
inc
push
call
jae
out
push
sahf
popf
scas
outs
repz
add
pusha
adc
sbb
mov
ins
loopne
js
push
jp
inc
mov
mov
lods
pop
outs
fld
cmp
bound
leave
icebp
add
test
cmp
sti
and
scas
or
jns
daa
popa
pop
les
cmp
fbld
call
fisttp
jp
cmp
popa
jb
xor
nop
jl
fwait
sbb
or
push
cmps
(bad)
sbb
gs
mov
cli
(bad)
lock
push
adc
pcmpeqb
test
mov
cld
adc
dec
sbb
dec
add
je
dec
mov
call
jle
fsub
cdq
into
out
aam
lock
cmp
adc
ficomp
sbb
add
icebp
popa
push
scas
mov
sbb
rcr
mov
out
fldl2t
ss
xor
dec
je
int
stos
leave
dec
cld
dec
cli
jns
ins
jbe
and
adc
int
xchg
jecxz
not
xchg
ret
mov
into
(bad)
jmp
add
aaa
int
data16
push
add
jl
call
retf
and
rcr
jl
or
push
jle
movs
vmovaps
in
dec
loop
loope
jle
enter
push
cmp
jmp
in
imul
mov
rcl
pop
sbb
mov
sub
ficomp
mov
mov
cmp
fild
scas
xor
(bad)
mov
xor
push
sbb
ret
jae
add
fwait
or
push
movs
xchg
div
cmp
dec
pop
mov
imul
pop
add
rcr
and
sahf
xor
pop
mov
pop
int3
test
xor
dec
mov
aam
jns
mov
sbb
mov
dec
movs
daa
jmp
stc
mul
dec
mov
jnp
dec
jmp
(bad)
fild
in
nop
fs
push
mov
jbe
(bad)
loopne
mov
outs
in
fistp
int
js
movs
movs
mov
popf
arpl
lods
cs
je
add
imul
add
jmp
daa
sbb
scas
sbb
leave
jge
jecxz
in
and
movs
mov
lds
xor
and
mov
ss
push
mov
rcl
(bad)
jbe
mov
jmp
scas
add
test
aad
loopne
push
xchg
push
pop
dec
xchg
out
sub
adc
fsub
(bad)
cmp
cmp
jmp
cmps
xchg
data16
sbb
rcr
xchg
je
aam
or
cmp
xchg
sti
arpl
push
aad
jno
int
xor
cs
mov
cmp
sub
std
pushf
sbb
out
(bad)
jl
adc
mov
cmps
xor
stos
ret
add
adc
jae
push
mov
sub
or
das
call
fwait
in
stos
lods
loope
repz
xchg
mov
dec
and
sbb
xchg
pop
adc
push
sbb
rcl
inc
rcl
sbb
mov
sbb
mov
adc
stos
mov
jae
dec
mov
imul
(bad)
clc
adc
stos
sti
int
enter
sbb
(bad)
in
out
lds
sbb
xor
ja
and
jbe
sub
mov
mov
call
test
inc
clc
int3
mov
data16
pop
inc
or
mov
hlt
sbb
scas
dec
int
sub
sar
push
xor
dec
in
in
rcr
out
in
cmc
in
retf
(bad)
xchg
mov
out
js
fimul
leave
cmp
cmpxchg
movs
lahf
mov
cmc
add
cmp
jmp
adc
mov
sbb
add
in
mov
or
sbb
test
popf
adc
fwait
hlt
dec
mov
sbb
mov
cmp
cli
push
add
(bad)
xor
and
and
xchg
pop
mov
out
in
and
outs
xor
pushf
cmp
jnp
ins
pop
dec
sbb
sub
or
push
movs
lock
dec
or
mov
sbb
stos
add
push
jnp
cmp
test
les
add
loopne
add
mov
fsub
inc
sub
cmovns
and
cmp
icebp
mov
je
mov
push
enter
cmp
fwait
repz
add
and
mov
jl
push
cmp
rcl
movs
push
shl
jecxz
add
push
push
or
cmp
pop
jp
retf
(bad)
(bad)
js
mov
iret
xor
shl
push
add
cmp
jge
jmp
add
div
in
xor
mov
ds
retf
mov
call
and
out
mov
adc
inc
jle
ins
push
cmps
add
and
leave
inc
hlt
jns
push
push
mov
lods
mov
cwde
cld
rcr
out
(bad)
popa
mov
dec
pop
mul
jo
sub
scas
mov
movs
xor
adc
in
mov
sub
sub
xchg
mov
ja
mov
inc
mov
jecxz
mov
xchg
sbb
or
repz
or
pushw
cwde
hlt
dec
xchg
sbb
inc
add
int3
shr
mov
daa
xchg
sbb
cmp
repz
pop
loopne
es
and
pop
push
std
jo
cmp
pop
iret
shr
lods
push
cmp
aad
leave
inc
sub
dec
lds
dec
out
jae
cs
xor
inc
pushf
mov
popf
cwde
in
mov
and
adc
(bad)
pusha
pop
sbb
add
sahf
mov
cmp
inc
sbb
push
cs
mov
sbb
nop
stos
fnstsw
(bad)
in
loope
aam
stos
push
outs
lods
sbb
jle
test
loope
mov
inc
fld
std
cmp
pop
(bad)
popf
mov
xchg
dec
hlt
sbb
push
sahf
inc
lea
push
in
jb
iret
dec
or
(bad)
sbb
fxam
bound
or
xchg
test
pop
jmp
cld
mov
ret
xchg
sbb
dec
pop
imul
jae
jmp
add
repz
inc
or
fdiv
movaps
popa
cmp
aad
dec
inc
xchg
sbb
mov
outs
push
pop
adc
scas
and
cld
sub
sub
movs
or
inc
pop
outs
pop
mov
(bad)
pusha
outs
push
sub
xchg
sub
dec
adc
sbb
xchg
test
or
or
sbb
ret
dec
sbb
push
mov
stc
stos
addr16
(bad)
popa
sbb
icebp
inc
push
push
idiv
mov
inc
jbe
daa
call
xchg
add
xor
call
mov
jne
test
mov
sbb
outs
xlat
ins
fsub
or
rcl
pop
es
xor
call
add
jmp
pop
outs
fsubrp
test
xchg
jge
sub
or
inc
sbb
inc
aas
stos
xlat
mov
inc
mov
mov
ret
inc
movs
add
cmps
add
mov
pushf
in
loop
test
jp
mov
nop
xor
inc
xor
sar
retf
adc
rcr
or
pop
and
inc
mov
sbb
in
push
(bad)
aam
lock
retf
clc
popf
int3
call
add
loopne
lods
pop
xchg
xchg
xchg
jmp
mov
call
xchg
inc
jo
cwde
stos
lahf
and
lods
cmp
enter
adc
iret
sti
stos
shl
push
xchg
pop
loopne
pop
pop
(bad)
(bad)
retf
cmps
push
mov
call
je
out
adc
mov
inc
xchg
mov
jp
or
pop
js
inc
ret
cwde
dec
cmps
in
jle
pusha
aas
sub
add
xchg
dec
retf
xchg
arpl
mov
stos
ins
jno
in
into
mov
fsubr
xor
adc
retf
push
(bad)
push
neg
fcom
es
push
test
xchg
inc
jmp
push
push
or
jnp
ins
hlt
addr16
mov
xchg
(bad)
pushfw
es
inc
adc
mov
repnz
push
inc
pusha
and
pop
mov
ins
cmp
int3
xor
ret
cli
cs
cmc
call
push
mov
test
test
xchg
dec
lahf
outs
xor
and
test
pop
pop
xchg
xor
inc
test
aas
xor
imul
fwait
xchg
push
sub
pop
mov
lea
sbb
adc
sub
movs
jle
cmp
inc
cmp
xchg
push
push
cmc
cli
adc
mov
dec
inc
iret
push
(bad)
sbb
cmps
loope
repnz
in
fst
xchg
test
shl
stos
mov
xor
adc
lahf
adc
dec
jmp
arpl
push
sub
cdq
push
and
(bad)
jmp
scas
rcr
jge
fidiv
clc
cmp
pusha
inc
jp
cmp
jne
scas
add
add
mul
out
cmp
inc
sbb
jmp
mov
jl
mov
sar
retf
popa
pushf
dec
pop
mov
jmp
outs
in
fdiv
stos
(bad)
push
dec
dec
lods
icebp
xchg
adc
ret
xchg
sub
and
adc
xchg
leave
sbb
test
fcmovnb
mov
dec
out
xor
sub
ss
aad
pop
mov
aad
sbb
mov
xor
sub
add
daa
jg
mov
mov
mov
shr
push
cld
or
(bad)
clc
shl
push
nop
stos
lahf
dec
pop
fld
and
leave
test
aad
or
sub
jmp
dec
sub
push
in
mov
push
cli
test
mov
xchg
jg
stos
ds
ins
mov
out
fsubr
mov
mov
imul
aas
mov
xchg
enter
fcomp
retf
jno
jecxz
stos
inc
jge
or
fwait
pushf
xchg
jle
scas
aaa
dec
mov
nop
test
out
or
addr16
in
jmp
dec
mov
inc
aam
dec
cmp
(bad)
mov
mov
not
(bad)
ds
jmp
mov
outs
rcr
adc
(bad)
push
out
inc
xchg
mov
into
push
out
inc
retf
test
fistp
div
sbb
mov
adc
xor
and
in
test
xor
sahf
dec
pavgb
xchg
ins
rcl
das
cmp
dec
cdq
pop
add
mov
push
sbb
call
mov
cmp
add
xchg
cmc
and
adc
xor
in
(bad)
pop
mov
fs
fstp
push
sub
mov
add
imul
in
cmp
mov
shl
outs
jg
xlat
or
out
dec
fldenv
mov
and
add
shl
and
scas
cwde
test
cmps
mov
sub
xchg
or
sbb
ja
(bad)
fldcw
jmp
pushf
fwait
mov
les
sub
sbb
ins
or
xlat
bsr
mov
mov
cmps
frstor
dec
rcr
shr
inc
push
mov
jns
sar
cdq
cmc
jp
xchg
and
push
jno
adc
mov
mov
loopne
mov
outs
push
inc
fnstcw
or
repz
test
mov
(bad)
test
xchg
mov
sbb
test
fadd
mov
push
or
cmp
sub
cmp
xchg
out
(bad)
arpl
lods
pop
mov
out
jmp
fsubr
popf
sar
fistp
inc
int3
mov
sub
cmps
icebp
adc
push
mov
out
add
outs
inc
mov
aam
lock
repnz
fsubr
xlat
lods
push
inc
mov
rol
bound
out
sub
push
cdq
mov
retf
sbb
jmp
add
pop
cmp
adc
push
gs
mov
adc
pop
les
sahf
xor
cmp
xlat
cmp
and
inc
xchg
cmp
dec
cmc
or
rcr
(bad)
int3
imul
or
push
fadd
enter
pop
adc
lock
and
dec
jge
cmps
enter
dec
jns
movs
popa
call
fisttp
jno
in
ja
lahf
ret
inc
pushf
sub
std
lock
xchg
ins
mov
cmp
sbb
push
rcl
cmp
popf
mov
ffreep
stos
cmp
sub
cmc
xlat
cmps
or
xor
fdivrp
mov
cdq
pop
sbb
stos
test
add
mov
push
scas
ins
dec
neg
sub
sbb
xor
adc
or
popf
cmp
ins
test
mov
mov
sbb
adc
and
mov
and
add
imul
and
sahf
(bad)
inc
call
adc
mul
inc
mov
and
xor
sbb
jb
je
jnp
popa
fwait
lahf
add
repz
movs
push
or
cwde
out
(bad)
fiadd
xchg
xlat
add
test
add
cmp
(bad)
sar
pop
push
add
push
push
mov
push
or
dec
push
jns
sub
xchg
out
mov
pop
gs
pop
rcl
inc
loope
mov
icebp
out
mov
enter
push
sub
pop
icebp
lock
(bad)
adc
aad
xchg
adc
leave
fnstsw
push
jecxz
jns
sbb
out
outs
mov
jo
stc
sbb
fdivp
pop
or
mov
test
push
fcos
add
popa
mov
cs
or
lea
imul
xchg
xor
jp
lods
pop
ins
mov
je
shl
and
xchg
pop
pop
pop
in
fwait
(bad)
std
loop
dec
(bad)
movs
dec
fnstenv
jmp
(bad)
fwait
ja
pop
popf
pop
pop
int3
ss
idiv
cdq
jns
jmp
xchg
adc
repz
add
adc
enter
xchg
fdiv
push
scas
stc
and
pop
jne
shr
aad
mov
sbb
pop
mov
mov
jns
or
loopne
lock
mov
adc
ror
xor
xchg
jg
sahf
inc
push
xor
cmp
push
pop
jns
cmp
stos
sub
nop
test
hlt
push
or
outs
jp
add
out
scas
pop
mov
xchg
dec
jmp
stos
in
mov
jmp
push
xchg
adc
aad
add
xor
(bad)
and
xlat
jecxz
xchg
mov
push
aam
out
aam
fistp
inc
lods
mov
mov
retf
mov
out
movs
adc
cld
or
int3
cld
xchg
rcr
adc
dec
mov
test
or
std
fwait
out
mov
mov
or
lods
loop
out
sbb
pop
xchg
jno
fmul
int
mov
retf
xchg
jo
cmc
mov
hlt
or
add
cmp
gs
xchg
call
xor
cmp
cmp
sbb
and
add
int
lods
ja
(bad)
ffreep
stos
adc
add
dec
(bad)
aad
fs
pop
pop
sar
test
stos
jno
jno
bound
or
inc
movs
inc
(bad)
mov
jecxz
fsubr
dec
xchg
and
jle
mov
das
int3
mov
inc
call
jl
repz
fdiv
jp
inc
(bad)
push
sub
xor
aaa
mov
mov
ja
iret
dec
mov
retf
xor
sub
outs
jne
loope
in
aam
loopne
fwait
jecxz
jae
dec
mov
adc
cmp
or
outs
loope
in
(bad)
push
bound
call
jmp
in
(bad)
add
cmc
add
adc
jmp
movs
xchg
pop
scas
mov
jl
xor
or
enter
int3
add
push
lahf
(bad)
xchg
in
shl
mov
xchg
jge
mov
rcl
sbb
push
aad
cmp
pop
clc
xchg
adc
test
adc
into
and
pop
dec
neg
sahf
repz
pop
add
cmp
adc
pop
leave
iret
inc
sub
sub
mov
sbb
sbb
repnz
in
jo
fwait
or
mov
rcr
call
icebp
gs
ds
aaa
cmp
jle
fadd
retf
les
les
sub
sub
invd
push
rcl
or
mov
mov
jbe
mov
fidivr
push
xchg
jae
ret
addr16
jp
call
pop
dec
mov
repz
clc
mov
xor
lock
aas
jp
dec
fidivr
mov
mov
movs
dec
adc
std
xchg
pushf
jmp
push
lods
inc
rol
push
hlt
repnz
or
fidivr
and
test
dec
fs
sub
pop
test
dec
jle
inc
jns
cmp
fstp
xchg
ror
retf
stos
mov
mov
xchg
shl
in
es
lock
lahf
push
bound
add
std
mov
js
xlat
adc
and
shl
adc
sbb
enter
rol
test
jg
movs
sbb
ret
add
pushf
out
or
ror
repnz
or
and
fnstenv
xchg
mov
adc
sbb
scas
mov
jb
scas
mov
add
mov
add
sub
xchg
xchg
ror
int3
(bad)
pop
sbb
gs
mov
mov
xlat
xchg
add
inc
iret
es
movs
cmps
or
mov
in
fs
and
mov
and
mov
stc
or
mov
sar
repnz
and
in
ret
xor
and
inc
cli
xor
jle
out
shl
repnz
or
push
push
sbb
mov
pop
loope
mov
fsubr
ins
gs
cli
retf
outs
stos
shl
jb
or
jg
add
iret
pop
fmul
mov
cmp
call
or
adc
jp
cmp
mov
and
cld
pop
ret
add
ret
xor
addr16
scas
jp
inc
jno
and
sub
je
sub
mov
out
or
cmp
mov
das
outs
ins
dec
adc
sub
or
xor
mov
int
add
ja
add
sbb
add
mov
mov
aad
push
test
xor
lahf
repz
popf
out
and
jmp
and
and
rol
leave
(bad)
sti
stos
loop
rol
mov
fstp
test
ret
xor
repnz
sbb
adc
fs
jecxz
repnz
loop
fld
(bad)
add
pusha
mov
fs
xchg
ror
into
movs
add
fs
cmp
adc
outs
popf
mov
gs
push
test
push
mov
mov
movs
ror
ret
test
xchg
into
mov
gs
ret
stos
xchg
xor
pushf
jb
xchg
xchg
add
jne
jecxz
add
leave
and
xchg
sbb
mov
xchg
cmc
outs
xchg
ss
push
push
retf
adc
jne
adc
push
sbb
fmul
and
test
cmp
aad
pusha
mov
shl
xor
mov
mov
mov
pusha
add
fimul
and
sub
cld
cdq
push
loopne
aad
nop
(bad)
fnsave
lahf
mov
fs
mov
sbb
cmp
and
and
mov
lea
or
and
dec
xchg
(bad)
pushf
lods
pop
outs
retf
das
add
adc
add
mov
mov
in
cld
pop
fcmove
dec
fsubr
jae
mov
inc
dec
loopne
fcomp
retf
addr16
dec
fucomip
jl
dec
cwde
leave
sbb
sub
push
and
push
fnstenv
add
imul
cli
mov
mov
sub
gs
jmp
cmc
jmp
popf
and
or
sbb
jbe
bound
cld
stos
jne
data16
mov
push
cmp
mov
jb
cmp
jmp
jb
jmp
retf
ins
dec
and
fwait
or
lahf
paddsw
jns
retf
or
(bad)
mov
sub
mov
mov
imul
push
inc
bound
fidiv
xlat
or
adc
mov
mov
sbb
mov
xchg
jge
aaa
mov
or
mov
es
jge
cli
and
retf
push
cmp
dec
arpl
pop
and
xchg
mov
jg
xor
out
cdq
sub
dec
cmps
ss
xor
push
arpl
and
ins
xchg
push
call
or
mov
cmp
cdq
adc
mov
addr16
cmp
mov
sahf
scas
jp
cmps
in
or
mov
outs
rcr
inc
jo
jl
xchg
sbb
iret
fs
adc
add
fs
cmp
pop
add
pop
mov
mov
adc
pop
pop
mov
add
(bad)
stos
mul
into
sbb
(bad)
out
ins
dec
in
repnz
push
jae
ficomp
mov
mov
adc
imul
inc
repnz
push
or
and
push
aam
aaa
aam
jo
mov
ins
add
pop
push
retf
inc
sub
lock
jns
dec
(bad)
xor
add
mov
stos
inc
push
out
lock
lods
sub
popa
inc
add
(bad)
cld
mov
addr16
movs
push
aas
mov
test
pop
int3
js
js
sbb
add
pusha
mov
inc
inc
sbb
int
fldenv
cwde
pop
pop
stos
mov
dec
loop
jbe
or
jl
hlt
mov
lods
iret
test
ss
cmp
and
dec
jnp
mov
repz
shr
retf
mov
les
(bad)
push
sub
or
add
pop
dec
(bad)
jge
retf
xchg
inc
retf
and
and
mov
pop
cli
ficom
ss
repnz
test
icebp
into
jp
leave
add
cli
mov
xchg
push
ret
sbb
stos
push
and
xor
loop
inc
inc
mov
mov
inc
and
mov
xchg
clc
(bad)
adc
mov
mov
or
shl
inc
and
mov
idiv
(bad)
out
imul
ins
sahf
rol
push
test
mov
popa
ss
mov
mov
movs
sahf
cwde
popf
ror
mov
xchg
jge
stos
ficom
or
xor
mov
movs
mov
and
ret
xor
inc
fcomp
mov
je
in
add
sahf
sub
dec
je
sbb
jmp
jle
adc
xor
xor
fcom
cmp
cmp
(bad)
(bad)
in
adc
in
scas
mov
les
mov
in
cmp
ins
cld
int
daa
mov
hlt
fisubr
rcl
mov
jo
sub
into
push
inc
ja
sahf
(bad)
xlat
pop
das
jge
sbb
xchg
pop
aad
push
cmp
mov
test
jl
jmp
jne
pushf
fstp
dec
ret
aas
mov
mov
cmp
(bad)
jo
int
sti
jnp
cld
int
fsub
dec
jae
add
bound
ret
mov
mov
addr16
xchg
inc
mov
inc
into
hlt
fisub
push
stc
fadd
sbb
aaa
push
mov
scas
clc
in
add
cwde
out
test
jp
loope
jmp
inc
es
enter
xor
pop
mov
out
out
stos
and
or
ret
and
fistp
push
inc
push
es
aad
add
out
jno
adc
mov
test
das
and
mov
dec
push
retf
movs
in
xchg
rcl
in
jae
jmp
adc
cdq
or
push
push
sar
xchg
punpcklwd
fild
test
repz
xchg
(bad)
popf
jbe
inc
pop
call
xchg
inc
sar
sahf
loopne
sub
jg
outs
jmp
jecxz
adc
in
imul
push
mov
cli
xchg
mov
in
daa
(bad)
adc
je
pop
push
rcl
cmp
nop
loop
sbb
or
rol
and
push
inc
jecxz
aad
scas
repnz
lods
repnz
jbe
sar
call
mul
arpl
lahf
sub
cli
inc
aaa
ins
ffreep
mov
aas
xchg
inc
push
je
aam
inc
mov
movs
fs
out
mov
shl
gs
les
stos
push
ins
jmp
push
in
xor
adc
retf
xchg
mov
scas
cs
push
sub
add
mov
and
fwait
push
add
mov
sbb
jg
fisttp
fistp
inc
mov
int
xchg
fs
(bad)
mov
dec
push
mov
fist
das
repnz
cld
xor
test
cmc
sbb
add
pop
lods
sub
add
mov
mov
(bad)
push
bound
jb
push
aad
es
pop
xchg
dec
loope
xor
mov
int
jmp
mov
sbb
(bad)
es
sbb
ins
bound
jns
stc
push
das
dec
xchg
dec
retf
xlat
out
mov
or
jb
call
jg
call
push
fdivr
ja
out
icebp
adc
gs
xchg
out
and
sti
cmp
out
cmp
xchg
sbb
cmp
and
ins
or
inc
pop
es
iret
(bad)
ror
lock
ins
and
sub
cmp
mov
mov
sub
fsubr
cld
cld
mov
mov
dec
(bad)
jecxz
mov
cdq
dec
sbb
int3
mov
add
jecxz
ja
sub
stos
popa
dec
pop
add
out
dec
lea
lock
xchg
xchg
inc
pusha
(bad)
fistp
stc
xchg
ret
movs
aam
push
push
jnp
mov
inc
daa
retf
and
sub
xor
mov
ins
mov
lods
test
or
push
inc
inc
add
fadd
cmp
jnp
ret
adc
clc
add
mov
sbb
fwait
adc
jle
add
out
(bad)
pop
call
inc
sub
sub
inc
dec
pop
push
mov
pop
jmp
dec
scas
mov
push
hlt
jl
mov
push
imul
inc
imul
scas
xchg
int
cmc
lods
pushf
leave
inc
andps
xchg
push
mov
or
or
push
in
jae
fs
adc
jnp
sbb
mov
inc
mov
cmp
jbe
cli
lahf
pop
mov
fmul
cmp
mov
enter
inc
(bad)
pop
ss
inc
adc
daa
xor
and
leave
mov
jns
jecxz
xchg
sub
cmp
mov
pop
enter
outs
adc
arpl
dec
cmps
sub
sahf
lods
(bad)
and
rep
pop
and
pop
add
sub
dec
cmp
and
or
xchg
call
push
mov
adc
lahf
add
xchg
test
sub
xchg
addr16
jae
and
mov
mov
push
xchg
pop
xchg
in
xchg
nop
and
xlat
push
pop
aad
sti
mov
or
mov
loop
jbe
add
ret
shr
ss
or
xchg
out
xlat
inc
movs
mov
fwait
in
(bad)
aaa
clc
xchg
mov
fst
inc
pop
(bad)
pop
into
std
and
push
push
ds
test
add
dec
stos
aaa
aam
pop
push
mov
lods
inc
int
popa
sub
push
aad
cmp
sbb
push
mov
push
rcr
xchg
rol
or
inc
push
cmp
cli
ror
pop
cwde
xchg
popa
mov
or
dec
dec
stos
fsqrt
imul
sub
stos
pop
in
call
mov
and
xchg
retf
stos
fwait
mov
ins
xchg
ret
or
push
add
mov
popf
jae
sbb
retf
icebp
cmp
aaa
popa
jge
push
pop
mov
jmp
mov
mov
xchg
ret
or
clc
sbb
scas
adc
jl
cmp
fild
sub
jo
sbb
call
sub
sbb
xor
in
xor
sbb
icebp
jo
adc
(bad)
dec
test
enter
sbb
pop
jmp
je
out
cld
adc
cmps
retf
add
dec
enter
fidivr
ret
or
fxch
sub
and
scas
xor
in
lea
(bad)
jmp
pop
push
(bad)
sbb
or
cmp
sbb
inc
mov
ja
arpl
mov
fs
fst
loopne
jno
rcr
retf
pop
repnz
mov
mov
shl
and
aam
jmp
cmp
pusha
lahf
gs
nop
cmp
mov
pusha
in
and
add
dec
das
xlat
mov
cld
and
icebp
or
nop
sahf
push
mov
and
adc
mov
sbb
bound
add
stos
test
rol
pop
mov
sahf
dec
xlat
leave
push
adc
data16
imul
sbb
arpl
fistp
mov
or
je
loop
dec
jmp
mov
and
(bad)
and
in
pop
or
mov
pop
sub
mov
or
add
cmc
xchg
cmp
imul
and
cmp
xchg
loopne
pop
xor
repz
and
arpl
aam
mov
icebp
mov
ja
dec
adc
mov
bound
and
jnp
scas
pop
js
fwait
push
mov
out
add
repz
xchg
cmp
enter
ins
xchg
push
clc
stos
inc
sbb
xchg
pop
xchg
rcl
inc
popa
gs
(bad)
in
jge
inc
scas
jp
in
jno
fcomp
(bad)
cmp
jo
push
clc
pop
retf
ret
mov
xchg
inc
sub
xchg
ds
test
mov
jo
lea
in
in
test
outs
cmps
lea
and
outs
popa
aas
outs
pop
in
(bad)
int3
sub
ss
into
cmp
test
call
pusha
leave
test
pop
jnp
or
lock
push
jle
int
cmp
or
arpl
xchg
stos
pusha
lods
dec
test
push
fdiv
and
retf
and
pop
cmp
mov
push
sahf
push
xchg
or
mov
or
cmc
cmps
stc
lods
jo
inc
pop
and
retf
mov
xor
lods
js
pop
les
sub
mov
inc
and
xlat
ja
sbb
div
dec
pop
or
inc
jno
mov
jb
movs
mov
xor
inc
or
mov
jne
sub
imul
(bad)
mov
(bad)
sub
mov
add
fs
xor
jle
lods
fistp
adc
pop
out
dec
out
mov
in
push
iret
(bad)
test
cli
sbb
cmp
sti
push
cmp
int3
test
loopne
pop
icebp
inc
inc
xor
pop
push
in
inc
sbb
sahf
dec
adc
retf
movhps
mov
ds
outs
mov
shr
inc
aam
jnp
dec
cmp
lods
call
sub
popa
retf
test
jb
adc
cli
and
fsubr
adc
jecxz
xchg
mov
jge
mov
(bad)
sti
mov
sub
test
xor
movs
mov
fcomip
dec
mov
sub
dec
xor
or
cld
dec
pop
pop
xchg
add
sahf
pusha
sti
push
push
ss
sahf
iret
into
out
inc
inc
and
jnp
push
cmp
mov
repnz
pop
sub
fcomp
xchg
pop
mov
fmul
js
aas
in
std
bound
adc
cmps
ins
cwde
les
inc
jb
loopne
dec
jmp
retf
pop
xchg
and
repz
(bad)
fadd
dec
and
ds
cwde
sahf
stc
xchg
jl
xchg
cmp
mov
or
cld
mov
pop
rol
ds
sub
fld
push
mov
mov
or
jmp
sub
repnz
push
ret
add
outs
xchg
movs
mov
xchg
jle
mov
fisub
sbb
xchg
aaa
mov
xchg
sub
push
jle
gs
hlt
inc
cmp
xchg
dec
int3
cmps
jbe
loope
scas
in
(bad)
cmp
push
loope
jecxz
stc
pop
dec
(bad)
lahf
mov
adc
xchg
popa
xlat
pop
retf
pusha
loope
(bad)
inc
dec
jae
dec
ds
jmp
(bad)
cmps
call
dec
pushf
jbe
xlat
pop
mov
out
lods
int
cmp
cmp
pop
pushf
nop
adc
retf
mov
pushfw
mov
stc
inc
mov
aad
movs
iret
pusha
(bad)
fimul
jecxz
jp
cmp
mov
inc
gs
dec
jl
mov
lock
mov
lods
nop
mov
ins
shl
adc
xchg
or
cmp
sub
iret
addr16
out
addr16
(bad)
popf
adc
jb
movs
xchg
mov
push
test
int
add
es
js
add
mov
das
xchg
mov
jmp
jb
adc
xor
movs
jns
pop
mov
push
sbb
mov
fs
add
retf
add
jno
fisub
ret
sti
ja
mov
and
mov
mov
or
shl
mov
(bad)
and
xor
les
sbb
mov
fldenv
mov
dec
sub
ds
lea
adc
pop
pop
push
mov
adc
mul
mov
icebp
xor
les
jbe
je
out
sbb
je
pushf
shl
out
add
jne
test
imul
out
dec
adc
aas
gs
jne
pcmpeqb
sub
mov
arpl
xchg
inc
cs
les
add
sub
(bad)
dec
xchg
(bad)
into
sub
add
cmp
not
mov
sub
xchg
cwde
push
aam
pop
adc
sub
xchg
fsin
mov
mov
xor
fbld
cmp
xchg
cs
fld
or
mov
pop
(bad)
fwait
out
cmp
jg
push
popf
cmps
mov
cwde
add
rcl
and
inc
pop
rcl
mov
ret
inc
in
mov
inc
int3
mov
jnp
fld
push
adc
cmps
or
push
pop
sbb
xchg
iret
call
into
add
mov
iret
neg
outs
lahf
push
push
pop
cmp
bnd
out
out
xchg
jmp
into
jmp
push
cdq
pop
add
vpsubb
push
imul
xchg
jmp
ja
cld
imul
push
inc
icebp
or
mov
rcr
cli
imul
call
xchg
lods
loopne
stos
pop
js
or
fiadd
or
fsub
std
and
push
shl
or
fisubr
jno
cmp
lods
das
sbb
pop
lods
inc
adc
mov
mov
ficom
sbb
jns
das
pop
std
add
pop
jne
push
mov
push
gs
test
jb
jmp
cwde
sub
or
mov
push
movs
mov
or
mov
pop
mov
retf
out
test
mov
inc
dec
or
dec
dec
cdq
push
push
dec
enter
pop
ins
cmc
in
jge
retf
mov
in
ins
in
(bad)
int
mov
fnstsw
pop
(bad)
retf
js
fdiv
fistp
jmp
out
adc
mov
popf
in
dec
shl
loop
adc
jnp
mov
popf
or
in
inc
mov
scas
mov
xchg
out
lock
or
shr
cmc
xor
mov
es
cmove
mov
in
mov
jmp
mov
and
pop
xlat
movs
shl
imul
adc
fsub
sub
xlat
neg
and
sahf
stos
mov
test
cmc
int3
mov
inc
mov
and
cdq
cmp
push
add
xchg
cmp
aas
mov
loopne
fiadd
sbb
syscall
mov
cmp
sar
sbb
sti
cmp
jp
mov
sub
stos
cmp
retf
xor
mov
dec
sub
mov
outs
pop
jmp
jne
nop
adc
(bad)
int
sbb
les
ds
xor
or
stos
or
lahf
add
adc
icebp
mov
fs
fwait
xor
(bad)
pop
or
mov
leave
xor
dec
or
out
sahf
mov
out
mov
mov
adc
inc
ja
sbb
lods
pop
dec
mov
mov
loopne
add
mov
hlt
std
lds
and
retf
adc
push
mov
jge
test
js
out
pop
xchg
mov
mov
(bad)
fcomp
jno
mov
push
sub
scas
and
sub
push
rcl
outs
in
adc
(bad)
pusha
pop
arpl
xor
stos
add
jecxz
scas
ja
push
mov
sbb
and
cwde
stos
aad
jmp
jae
jp
(bad)
push
pop
cmp
push
dec
add
fcomp
and
add
adc
dec
mov
fwait
into
jl
push
and
adc
fisttp
popf
pusha
ret
es
pop
cmp
mov
out
mov
and
dec
jp
and
push
in
(bad)
stos
icebp
fldcw
les
and
loope
pop
push
cmc
inc
and
arpl
pop
gs
test
push
dec
mov
cli
fisttp
xchg
movups
clc
push
and
adc
mov
pushf
mov
sbb
fidivr
mov
jmp
mov
push
in
sahf
in
inc
mov
test
jno
jmp
dec
(bad)
stos
jno
dec
lea
mov
mov
jns
or
sbb
call
jmp
xor
int
out
xchg
popfw
mov
xchg
cmps
xchg
xor
push
jnp
or
add
mov
push
loopne
movhps
sbb
xchg
ds
mov
push
ds
jmp
push
test
adc
cdq
popa
ret
std
mov
adc
retf
int
sub
arpl
(bad)
fcomi
cmps
mov
in
jmp
jae
dec
addr16
xchg
jno
xor
sub
jg
cmp
pop
inc
loop
retf
jns
xor
sub
imul
xchg
mov
or
test
fld
imul
std
mov
mov
icebp
jecxz
push
xchg
sbb
out
das
(bad)
jns
inc
mov
mov
xchg
addr16
xchg
leave
push
pusha
push
push
sbb
pop
mov
cmp
fist
inc
ret
call
(bad)
xchg
aad
cs
inc
cmc
or
inc
jmp
pop
cmp
cmp
xor
adc
mov
push
mul
or
packsswb
sub
pushf
out
lods
jno
push
mov
popa
mov
(bad)
cdq
jle
xchg
cwde
sti
xchg
or
cwde
mov
and
(bad)
aad
jo
jp
mov
hlt
test
shr
aad
sub
and
aad
int3
mov
test
ret
xchg
xchg
je
pop
cmc
xor
loope
pop
push
or
scas
stc
pop
sbb
es
jo
mov
outs
push
sbb
mov
mov
(bad)
int
or
in
sub
inc
push
xchg
inc
cmps
push
call
fwait
push
fs
mov
in
jmp
pushf
sar
add
and
(bad)
stc
sub
ret
lahf
(bad)
rcl
pop
ja
and
stos
sub
mov
cli
cmp
dec
lods
jb
mov
das
mov
and
mov
or
pop
das
mov
scas
movs
sbb
stc
pop
hlt
sar
movs
lea
add
pop
pop
test
adc
jmp
jle
add
pop
cwde
inc
xor
dec
fidiv
fst
(bad)
mov
push
ffreep
ins
popf
and
jmp
push
mov
xchg
cmp
dec
mov
jmp
jecxz
rep
pop
test
xchg
scas
cwde
fwait
data16
pop
mov
repz
int
cmp
out
sar
and
shl
jne
add
test
lea
into
mov
pop
push
jecxz
enter
jae
xor
add
mov
(bad)
xor
(bad)
mov
nop
dec
pop
dec
fisttp
dec
inc
test
dec
inc
icebp
xor
and
mov
loope
js
push
scas
push
bound
mov
mov
or
push
test
jp
and
push
mov
mov
stc
pop
pop
(bad)
les
scas
and
jecxz
mov
pop
js
rcr
repnz
adc
push
xchg
int
cmp
xor
in
imul
shl
cld
mov
(bad)
loope
pop
pop
arpl
inc
jns
push
ss
int3
fs
(bad)
test
or
jbe
mov
push
mov
movs
(bad)
in
inc
or
loopne
or
jle
shl
jmp
(bad)
mov
push
iret
fisttp
fdivr
mov
pushf
ja
in
in
sahf
in
out
sbb
inc
adc
(bad)
sbb
mov
fnstsw
mov
dec
jl
cmp
outs
iret
push
cdq
movs
jo
fld
or
cmp
dec
nop
sbb
(bad)
inc
mov
scas
frstor
popf
loopne
inc
mov
and
hlt
(bad)
cli
rcl
push
and
(bad)
jo
pop
ffreep
std
cli
imul
inc
ret
repz
jmp
fisttp
pmaxub
pop
in
sbb
(bad)
(bad)
jp
xor
stos
xchg
lahf
cmp
aam
push
leave
les
jge
aaa
inc
dec
or
push
scas
aas
minps
xchg
pop
outs
mov
movs
mov
(bad)
pop
add
or
ds
mov
mov
sub
div
sti
add
push
imul
shl
xchg
movs
dec
cmc
pop
pop
imul
lods
push
push
icebp
xchg
mov
repz
dec
pop
jo
dec
test
pop
ins
adc
sti
clc
bnd
push
cmps
pusha
test
mov
adc
arpl
dec
inc
adc
in
lods
push
rol
fnstenv
into
lods
add
sar
xor
rcl
jp
sbb
xchg
cwde
xor
cmp
and
shl
icebp
enter
jle
out
ins
fild
aam
call
or
xlat
push
jae
hlt
pusha
addr16
clc
mov
(bad)
stc
stos
fdivr
lods
xchg
sbb
je
fs
cmp
add
xor
xor
in
int3
out
ror
fimul
aas
add
(bad)
loop
inc
and
bound
adc
add
(bad)
jne
movs
pop
mov
popf
jmp
jmp
movs
dec
popa
fwait
cli
shl
call
out
js
lahf
xchg
lods
(bad)
sbb
(bad)
cmp
mov
pop
popf
mov
dec
sub
jmp
cwde
fdivr
punpcklwd
scas
jp
js
xor
in
lock
sub
daa
and
ja
inc
clc
cmp
(bad)
ret
mov
pusha
jmp
sub
mov
cmp
inc
jo
mov
add
sbb
fwait
add
call
fbstp
mov
sti
lea
cmp
call
or
cmp
out
sar
(bad)
ins
pop
adc
xor
sub
mov
stos
xchg
and
cld
fbld
sbb
cmp
std
push
imul
repz
xchg
or
jae
mov
mov
cmc
sub
dec
imul
and
xchg
shr
inc
arpl
pop
popf
xchg
imul
(bad)
cmp
inc
aaa
fcomp
fisubr
cmps
dec
sar
sbb
adc
mov
mov
mov
sahf
push
fiadd
movs
sub
mov
fdiv
ins
xor
mov
add
and
pop
jnp
movs
xchg
jge
mov
and
ss
into
inc
adc
add
mov
sub
fbstp
loop
retf
call
in
sub
or
nop
outs
jg
fnstsw
sbb
push
enter
mov
dec
ds
jo
xchg
xor
leave
retf
fst
outs
ja
movs
and
cmp
aam
mov
mov
loop
cmps
and
mov
cs
std
jmp
(bad)
mov
xchg
mov
pop
stos
shr
aas
stos
in
pushf
mov
jno
(bad)
pop
scas
inc
dec
addr16
inc
mov
jl
shl
dec
cmp
sub
adc
es
jno
out
(bad)
xchg
pushf
sub
push
mov
jge
sub
daa
aas
mov
and
adc
jno
nop
mov
pop
arpl
outs
jne
cwd
in
scas
repz
add
in
cli
mov
jle
xchg
sub
aam
call
fistp
pop
jmp
xchg
repz
cmp
lods
ss
mov
dec
cld
in
dec
rcl
jecxz
hlt
addr16
clc
adc
pop
push
cld
and
jnp
mov
pop
or
or
ins
iret
lds
xchg
adc
cmp
rcr
mov
adc
fild
and
xchg
jbe
sbb
out
xor
pop
sbb
or
pop
aas
xchg
ja
out
nop
mov
push
movs
xchg
div
or
pushf
jle
js
stos
fdivr
mov
icebp
shl
or
xor
xor
fisub
sbb
jbe
xchg
dec
sti
jno
cmp
cmp
or
push
icebp
adc
sar
mov
fiadd
sbb
sub
pushf
push
add
jno
shl
scas
mov
and
jns
(bad)
xor
hlt
xchg
gs
xrelease
sbb
std
loop
xor
popf
and
jmp
mov
lahf
mov
(bad)
lea
mov
mov
and
dec
cld
fistp
rcr
iret
sub
(bad)
push
sar
cmp
stos
std
repz
and
push
bound
push
inc
call
push
call
push
inc
pushf
nop
lods
sbb
or
out
cmp
mov
inc
jle
ret
lahf
adc
and
call
or
xor
push
cdq
(bad)
loop
cmp
dec
rcr
hlt
push
dec
adc
xlat
imul
and
bsr
es
mov
fbstp
adc
aad
adc
or
shr
push
cmp
push
rcr
fcmovb
mov
jl
dec
je
xor
mov
lea
pushf
shr
icebp
pop
jge
push
(bad)
enter
cld
push
daa
sub
or
cmp
dec
xchg
inc
stc
mov
xor
add
xlat
inc
sub
fwait
retf
sbb
pop
bound
pop
jg
pop
mov
clc
cmp
stc
leave
jge
fldcw
js
maxps
sub
mov
aam
dec
mov
add
xchg
rcr
inc
call
mov
cmp
mov
rcr
clc
add
mov
jmp
push
push
pop
(bad)
mov
enter
leave
mov
out
cmp
pop
test
adc
aaa
cs
lods
cmp
out
sbb
push
xchg
inc
xchg
xchg
rol
adc
mov
push
mov
rcr
lock
cmp
xor
icebp
bound
imul
push
pop
inc
mov
popa
jmp
icebp
jo
sbb
ds
add
xor
mov
sub
call
xor
cwde
push
jmp
and
sub
mov
mov
fbld
outs
jge
jno
stos
sub
shl
adc
mov
stos
repnz
nop
cmp
movs
cmps
inc
jbe
jmp
and
fisubr
call
dec
in
jmp
push
cdq
fwait
scas
(bad)
or
push
call
nop
pop
scas
inc
and
dec
aad
dec
call
sub
aaa
jge
jnp
push
xor
call
fs
dec
hlt
sti
rcr
out
mov
sbb
dec
test
xchg
test
mov
add
ret
in
or
aaa
fldl2e
imul
jb
lods
mov
jle
cmp
idiv
ficom
cmp
aas
jmp
jmp
scas
cli
repz
xchg
ds
dec
es
mov
xchg
scas
(bad)
cdq
stos
push
data16
cmp
cs
mov
iret
not
cmp
or
das
and
or
das
dec
pop
out
or
add
fsubrp
pop
iret
enter
hlt
jg
fld
retf
fild
es
push
cmp
ret
add
add
adc
test
add
in
fdivp
mov
xor
xor
repz
div
inc
ror
(bad)
cmp
xor
dec
(bad)
loop
jne
pop
gs
mov
ret
or
push
push
into
not
sahf
outs
aad
out
jne
test
and
pop
jmp
pop
cmp
jle
data16
xor
adc
dec
cli
lds
aaa
fwait
adc
daa
addr16
cmp
jb
scas
gs
mov
or
xchg
mov
retf
mov
or
xchg
arpl
(bad)
pop
or
enter
adc
fldl2t
es
jae
dec
dec
mov
xor
xor
jle
dec
ds
js
ficomp
or
mov
inc
mov
je
out
enter
jnp
call
gs
mov
mov
inc
and
push
mov
aad
cmp
retf
xor
xor
rol
cmp
rcr
inc
pop
dec
aaa
adc
mov
inc
inc
inc
jo
xchg
dec
gs
leave
out
lahf
test
lea
js
(bad)
jmp
sti
out
dec
(bad)
call
pop
clc
dec
jns
inc
mov
dec
rol
or
inc
cmps
adc
mov
ret
jl
movs
arpl
ins
retf
out
mov
and
mov
xor
pop
mov
retf
or
xor
cmp
push
xor
mov
sub
inc
cmps
nop
sti
test
popa
xchg
push
into
test
jmp
mov
push
jecxz
push
stc
fldenv
mov
mov
dec
cmc
out
fld
push
cwde
and
cmp
inc
jmp
jbe
movs
ja
test
or
and
inc
(bad)
jge
pop
jne
pop
push
sbb
add
mov
add
nop
iret
test
stc
xchg
xchg
mov
cmp
mov
out
(bad)
lods
ficom
mov
xor
rol
ja
add
div
daa
jecxz
mov
or
int3
mov
push
xchg
shl
sub
push
mov
sub
xchg
sub
out
mov
mov
mov
cdq
je
mov
aaa
cmp
push
ja
sahf
aas
mov
inc
cmp
and
retf
sti
xor
or
(bad)
push
jmp
inc
mov
cdq
lea
cld
stos
out
mov
xchg
mov
nop
das
add
fdivr
dec
test
and
ins
xchg
ins
test
pop
sub
stos
call
js
mov
cmp
jae
xchg
ret
add
xchg
cmps
ret
and
cmc
fdiv
xchg
loopne
inc
(bad)
stc
adc
sub
mov
xor
xchg
pop
dec
in
nop
jg
and
adc
in
jne
sbb
push
add
pushf
mov
mov
or
mov
int
xor
jb
mov
add
mov
fmul
lahf
in
jne
fidivr
jg
test
lahf
cmc
xor
jmp
cmp
repnz
arpl
mov
popa
cwde
scas
xchg
sub
test
pop
aad
push
mov
xchg
jmp
stos
out
mov
out
test
jne
ficom
push
mov
in
sub
mov
and
lds
repz
add
pop
inc
les
clc
xchg
xlat
or
mov
aad
loopne
pop
test
hlt
xor
or
rcr
or
call
outs
jnp
xchg
jo
loopne
xchg
test
inc
outs
xor
xchg
xor
popa
(bad)
rcr
xor
push
sub
enter
and
dec
ret
loop
xor
or
inc
repz
rol
add
ins
push
into
adc
in
imul
sbb
inc
sbb
loopne
xor
xor
not
jo
pop
adc
sub
jg
mov
inc
lods
push
lods
int
shr
and
ins
and
test
fnclex
ss
xchg
pop
es
jmp
xor
adc
push
retf
push
sbb
out
sub
push
push
outs
jle
into
call
(bad)
repz
sbb
mov
and
dec
(bad)
cs
aad
pop
(bad)
repnz
call
outs
pop
out
sub
jae
movs
xlat
xor
xor
push
ret
repz
cdq
int
out
mov
sahf
pop
dec
sahf
xor
out
iret
test
or
(bad)
mov
loope
sbb
lods
and
leave
dec
inc
in
mov
jl
shl
fst
ss
cmps
in
inc
mov
cmp
pop
test
or
ret
out
sbb
lods
push
out
lahf
je
int
aaa
cmc
es
inc
and
xchg
into
mov
sub
jnp
cdq
mov
sbb
and
movs
shl
mov
add
out
pop
pop
popa
hlt
add
aam
fwait
push
je
imul
ins
cmp
mov
inc
jg
dec
outs
xchg
push
dec
sub
(bad)
data16
adc
cmp
aam
arpl
lods
jg
pop
push
aas
jp
enter
daa
sahf
ins
aad
dec
lahf
lods
bound
ror
sbb
les
or
test
or
js
mov
mov
xchg
sub
ds
out
(bad)
sub
sbb
cmp
ficomp
push
dec
or
xchg
push
out
lea
mov
int
fadd
stos
xor
cmp
aas
mov
stos
pop
adc
push
mov
cmp
mov
jecxz
stos
mov
cmova
mov
mov
cmp
pop
or
and
mov
(bad)
in
(bad)
loopne
sahf
cmp
pop
adc
push
imul
cdq
call
xchg
cmp
sub
fwait
cmps
icebp
dec
sub
pop
lahf
lods
mov
push
mov
mov
pop
fsub
sti
mov
js
cmps
std
iret
push
adc
push
sub
push
adc
clc
add
bound
jecxz
mov
repnz
les
push
test
pop
out
pushf
xchg
cld
mov
push
stos
fdiv
popa
mov
mov
push
mov
fcom
adc
imul
pop
adc
aas
int
fucomi
sub
jmp
call
aas
add
xor
inc
mov
fidivr
addr16
mov
adc
sub
mov
sub
retw
push
addr16
popa
iret
mov
ja
dec
cs
xlat
and
fild
rcr
addr16
and
das
fcom
fcomp
mov
cs
fadd
dec
push
inc
pop
sub
mov
xchg
push
add
jecxz
movs
mov
dec
jmp
and
adc
mov
js
leave
mov
in
dec
push
imul
mov
test
imul
xchg
test
dec
popf
pop
xchg
loope
pusha
sbb
(bad)
nop
ret
jbe
sbb
sub
mov
es
outs
call
sbb
(bad)
jmp
dec
std
out
inc
mov
push
add
xor
out
xchg
mov
xor
ss
xchg
jae
and
jmp
push
fcomip
and
sar
jl
mov
jno
jl
adc
xchg
sbb
jnp
inc
push
call
loopne
int
mov
shr
es
xor
add
add
popa
cmp
add
cmp
ja
push
(bad)
mov
cmp
mov
xchg
mov
imul
test
inc
sbb
inc
leave
dec
pop
jecxz
dec
das
cmp
xchg
loop
or
hlt
xchg
mov
dec
rol
hlt
sub
pop
cmp
cmp
push
push
iret
mov
ja
test
ffree
in
sbb
xchg
sbb
dec
adc
and
loope
ds
pop
pop
mov
or
test
lods
ror
or
push
mov
in
jae
pop
push
(bad)
(bad)
mov
cmp
loope
cmc
adc
push
mov
dec
lea
movs
or
add
js
movs
bound
call
fnstsw
jle
or
sub
leave
jmp
sub
call
inc
mov
mov
pop
test
sti
div
cmovs
lods
(bad)
mov
call
sub
pushf
xchg
and
cld
js
mov
cmp
sub
int3
repz
inc
je
ror
or
push
jl
stos
std
push
cmp
call
mov
xchg
repz
daa
dec
arpl
or
push
repnz
dec
jae
push
into
add
cmps
xchg
ja
xor
nop
jp
ja
sti
jns
js
ds
outs
jmp
dec
or
imul
lods
nop
sahf
(bad)
into
rcl
xchg
inc
pop
jbe
sbb
cmp
adc
jmp
adc
sub
or
jge
mov
inc
(bad)
cs
rol
inc
add
add
aaa
(bad)
mov
adc
sub
pop
inc
loopne
outs
loopne
(bad)
jmp
fistp
test
bound
retf
js
shl
inc
add
(bad)
das
mov
nop
jmp
rcr
jmp
mov
adc
dec
and
xchg
aad
inc
sub
push
cmp
pop
mul
jl
jp
outs
sbb
ror
call
dec
(bad)
scas
xor
aas
fistp
nop
cs
add
push
inc
pop
call
jo
mov
cmp
arpl
call
fwait
add
mov
jo
xor
pushf
sub
shr
test
retf
int3
cli
lds
out
lods
repz
push
xlat
fadd
xor
pop
cmc
out
fldenv
cmp
bound
dec
sub
jae
jo
clc
mov
xchg
inc
cdq
(bad)
sub
add
leave
jns
into
cmps
imul
test
clc
sbb
or
inc
imul
add
pop
adc
hlt
mov
add
test
mov
(bad)
ds
jmp
dec
ja
in
movs
push
ret
sub
sub
jo
inc
dec
pop
popf
ret
rcl
dec
push
mov
mov
pop
or
retf
cmp
mov
out
xchg
aaa
popa
push
cmp
cmp
jo
lock
aam
scas
(bad)
xor
sub
jmp
cmps
pop
adc
imul
mov
test
bound
mov
gs
mov
xchg
arpl
xrelease
into
imul
jne
in
mov
vandps
retf
repnz
jg
nop
mov
js
jmp
imul
adc
scas
cmp
jmp
jl
out
scas
div
pop
mov
or
jmp
lods
je
adc
jle
fisttp
fcomp
dec
fld
add
leave
int3
and
pop
pop
jmp
xor
jno
ret
sahf
cmp
mov
dec
fisttp
jg
pop
adc
shr
sub
into
jecxz
out
cli
cmp
and
jbe
mov
mov
iret
int3
or
jbe
jns
ja
cli
aaa
push
js
xor
(bad)
xor
xchg
and
or
dec
add
fcom
sub
(bad)
fiadd
pop
ret
or
mul
sti
xor
xchg
mov
das
cmp
fs
fidivr
out
rcr
int3
call
jg
repz
loope
and
mov
fcomp
(bad)
nop
add
jnp
cmp
cmp
inc
call
sbb
mov
cwde
mov
cdq
stos
call
adc
jno
sbb
sub
mov
pop
shl
xchg
shl
adc
imul
xchg
mov
or
dec
dec
mov
jns
cmovnp
or
pop
rol
push
mov
add
jmp
call
call
pop
imul
sub
xchg
cmp
dec
in
mov
jge
scas
xor
out
or
movs
aam
hlt
sub
pop
mov
pop
mov
xor
mov
clc
push
jne
aam
lock
repnz
jb
sahf
push
inc
loope
rcr
pushw
adc
mov
push
lods
pop
aad
retf
adc
loop
out
xchg
(bad)
pop
or
in
inc
jp
pop
sar
lods
pop
in
xchg
pusha
xchg
into
inc
jg
jbe
clc
xor
rol
int
jno
enter
neg
jno
mov
mov
push
aas
adc
jae
nop
mov
lahf
pusha
sti
icebp
and
xchg
in
jg
imul
mov
and
push
jns
pop
push
xor
xor
ret
lods
lds
mov
and
loop
jle
call
inc
push
adc
popf
xor
add
jmp
fwait
addr16
pop
dec
sbb
mov
jle
aad
pusha
pop
fsubr
and
gs
adc
jb
jp
adc
jge
ror
andnps
stos
or
or
call
dec
pusha
repz
sub
pop
loopne
cmp
sar
or
mov
arpl
data16
js
mov
inc
ror
cld
out
mov
rol
mov
inc
scas
cld
in
jne
jl
paddusw
imul
pop
lods
pop
sbb
pop
out
sub
pop
inc
push
enter
add
nop
jmp
inc
and
cmp
inc
cmps
data16
mov
xor
cmp
test
dec
or
je
add
ins
jne
pop
xor
or
jns
mov
and
in
pop
(bad)
xchg
ja
xor
call
pusha
movs
shr
mov
fistp
pop
and
fnstenv
or
ja
jg
ret
rcr
iret
jae
test
push
retf
mov
push
inc
aas
mov
xchg
es
xchg
leave
push
clc
loope
pop
xor
sub
ds
push
repnz
ret
push
out
sub
shl
push
inc
(bad)
fdivr
ins
pop
outs
test
add
mov
leave
pushf
nop
mov
sub
mov
push
not
mov
fmul
jecxz
iret
cmp
push
pop
dec
aaa
xchg
jge
jo
je
dec
ss
loop
je
test
mov
push
stos
sbb
popf
int
aam
add
test
test
stc
daa
icebp
cmp
adc
imul
out
jmp
mov
ja
add
icebp
inc
aad
cli
fnsave
icebp
not
pop
dec
jmp
mov
div
rol
cmp
mov
dec
xor
fiadd
aas
add
add
jecxz
push
jae
jb
retf
data16
outs
fwait
add
aaa
movs
mov
mov
rol
outs
xchg
jge
scas
mov
lock
adc
pop
cmp
int3
pushf
sub
push
jmp
push
ins
fist
daa
mov
pop
(bad)
(bad)
cmps
inc
fiadd
jns
ja
loope
daa
neg
outs
sbb
sub
dec
or
(bad)
hlt
test
lods
stos
sar
sbb
or
pop
push
loope
or
mov
pop
(bad)
jg
and
push
leave
xor
stos
cmp
mov
inc
(bad)
pop
pop
ja
iret
ret
and
push
or
cmp
add
in
cmp
pop
sbb
arpl
jne
push
mov
ds
mov
rep
scas
mov
jbe
jge
rcl
xor
fidivr
call
cmps
iret
jb
dec
mov
xchg
jno
pop
push
xor
add
imul
out
mov
xadd
das
sub
fst
add
js
int
sub
jge
lahf
jns
mov
dec
add
mov
xchg
sbb
(bad)
mov
mov
jbe
pop
push
enter
cmp
cmps
sbb
sub
loope
ret
in
dec
bound
pusha
loopne
add
lea
daa
jl
mov
mov
cmp
adc
sbb
retf
nop
stos
xor
jno
in
xlat
or
mov
outs
mov
pop
mov
mov
lods
clc
pop
nop
ins
sub
xor
pop
int3
sub
sbb
dec
mov
sbb
mov
mov
test
ret
xlat
and
jg
jp
dec
cmc
add
mov
pushf
pop
mov
movs
or
xor
test
add
pop
jle
or
daa
movs
and
or
xchg
cmps
ficomp
jl
add
xchg
call
mov
leave
sbb
pop
push
pusha
or
mov
add
add
test
arpl
scas
mov
stc
pop
xchg
add
jp
pop
imul
cld
push
sbb
mov
xchg
cmp
inc
bswap
cs
sbb
inc
mov
xchg
js
mov
add
out
xor
fcomp
jb
xchg
mov
loop
fldl2e
iret
lds
sub
mov
pop
repnz
or
in
fst
xchg
ins
mov
add
cmp
adc
sub
sbb
push
test
test
push
jmp
xchg
jns
sbb
dec
lock
(bad)
cmp
pop
out
mov
ja
push
pop
scas
adc
es
inc
push
loope
cmp
int3
or
(bad)
ja
jmp
retf
mov
jns
call
(bad)
cmc
inc
mov
mov
dec
in
pop
mov
and
pop
push
cs
adc
and
push
cdq
sbb
in
stc
stc
in
or
sub
cmp
push
data16
aaa
cmp
jmp
fisubr
in
aas
xchg
xchg
sub
test
mov
mov
scas
dec
mov
jmp
(bad)
mov
xor
sub
dec
aad
jecxz
fmul
ins
push
mov
sti
sbb
adc
fucomi
cmp
sahf
aas
mov
aad
inc
int3
or
leave
and
mov
add
dec
or
dec
fsubr
cdq
bound
jmp
mov
pop
pop
mov
cmps
inc
inc
jae
nop
loop
and
pop
adc
mov
les
aam
mov
cmp
mov
(bad)
das
jl
pop
bound
call
enter
dec
inc
xor
fsub
lods
sbb
adc
in
retf
fild
pop
int3
stos
push
lods
in
add
es
or
aam
arpl
(bad)
jns
push
or
outs
pop
(bad)
call
loopne
sbb
mov
jge
das
add
icebp
jl
int3
xor
dec
mov
out
vpcmpgtb
daa
clc
adc
add
sbb
dec
cwde
sub
sub
inc
cmp
push
push
or
sub
mov
loop
mov
xchg
repz
sub
fnop
jecxz
add
ins
xor
enter
xor
xchg
fcomi
shl
imul
shr
dec
xor
cmp
add
adc
adc
cmps
cld
cmc
ja
out
shl
cmp
sbb
sbb
push
icebp
movs
nop
(bad)
sar
rol
int
jecxz
push
inc
scas
loop
mov
int3
ins
adc
mov
cmc
gs
pop
and
hlt
cmp
and
pop
pop
jnp
retf
dec
or
ficom
sbb
or
sbb
fistp
fidivr
aam
test
es
(bad)
fs
bound
jg
inc
cmp
aas
push
or
addr16
aam
fs
push
mov
sbb
pop
cmps
push
push
call
(bad)
fwait
dec
or
aad
and
pop
jns
adc
or
into
(bad)
hlt
fwait
pop
repz
sbb
mov
pop
mov
push
jo
das
mov
ret
mov
jp
fsubr
fld
shld
ffree
pop
push
call
mov
pop
cmc
mov
sbb
or
shl
std
dec
dec
dec
dec
repnz
das
mov
shl
mov
xchg
or
cs
bound
mov
test
pop
jge
xor
cmp
and
les
mov
test
es
and
imul
mov
dec
rcr
mov
inc
xor
adc
adc
stos
ja
xor
mov
xchg
not
xor
pusha
cmp
mov
jl
gs
leave
ins
dec
or
add
scas
and
shl
mov
sub
jne
add
push
mov
mov
ja
mov
sub
pusha
mov
jle
xchg
xchg
pop
jmp
je
dec
test
loope
mov
inc
popf
fs
fcom
int3
xor
jb
sub
movs
xor
dec
cmps
mov
mov
fst
pop
retf
bound
sbb
or
push
add
sbb
call
loope
xchg
test
frstor
lahf
jae
jle
pushf
ret
dec
out
xor
mov
or
daa
mov
pop
lock
fld
jmp
jmp
jno
xor
adc
(bad)
std
call
inc
cdq
jl
call
mov
jp
mov
jl
retf
push
gs
sub
into
mov
and
mov
ss
scas
mov
in
mov
cmps
ja
outs
xor
sbb
scas
mov
xchg
nop
add
xor
jg
adc
lods
rcl
scas
push
fstp
and
pop
int3
dec
pop
dec
inc
in
jbe
pop
xchg
and
test
cli
aas
ins
pop
clc
jns
jmp
push
test
pop
mov
cld
adc
mov
outs
add
rol
adc
adc
push
and
in
push
fsub
mov
je
inc
(bad)
leave
mov
push
mov
mov
lds
out
pop
dec
push
retf
aad
sbb
std
inc
retf
push
ss
sub
sub
mov
dec
sbb
xchg
cmp
pop
sub
test
push
gs
dec
sti
xor
adc
popa
scas
or
xchg
ret
div
dec
cmps
loopne
dec
xchg
add
add
out
add
jmp
pop
xor
and
mov
adc
and
cld
call
jno
cld
mov
jae
inc
mov
inc
mov
xor
ss
mov
jg
jnp
or
xchg
or
cld
movs
inc
aad
cdq
in
sub
dec
sub
hlt
mov
dec
dec
mov
outs
(bad)
jle
nop
loopne
icebp
sub
xor
call
test
sbb
mov
jecxz
push
pop
jp
xchg
or
retf
out
adc
adc
and
and
imul
repz
dec
inc
out
shl
dec
jecxz
push
push
out
jns
mov
lahf
iret
push
or
sub
pop
pop
imul
add
push
out
cld
dec
cli
jl
dec
pusha
dec
popf
mov
(bad)
loop
out
rcr
adc
jl
sbb
mov
gs
(bad)
mov
push
cs
stos
cs
dec
loop
add
mov
pop
adc
imul
jle
ds
lahf
dec
popa
mov
pop
imul
mov
pop
sub
or
retf
sahf
jl
and
mov
sub
sbb
mov
add
lds
and
xchg
push
jmp
daa
movs
inc
loope
mov
lock
dec
ror
icebp
fisub
mov
movs
lahf
or
enter
or
sub
cmp
xlat
sub
dec
or
ja
imul
sbb
push
scas
or
sub
xor
arpl
inc
push
popa
jbe
pop
retf
popf
and
shr
lods
call
lds
cwde
inc
xor
pop
pop
push
or
mov
mov
(bad)
push
cwde
mov
dec
jl
dec
loop
mov
dec
jne
mov
aad
push
or
fisub
mov
arpl
movs
movs
pop
sti
mov
mov
ret
lods
sar
add
inc
sbb
mov
shl
bound
sets
add
push
movs
stc
mov
jl
or
cdq
int
mov
stc
xor
in
xor
cmp
lds
mov
in
in
cmp
inc
and
inc
stos
shl
jl
mov
popa
add
pop
sub
data16
js
mov
pop
rcr
mov
mov
lahf
(bad)
std
lods
add
fist
(bad)
sub
(bad)
scas
sub
mov
cmp
stc
lods
and
sub
inc
sbb
adc
imul
push
or
mov
cmc
ffreep
mov
test
jne
test
ror
sar
push
mov
cmp
dec
and
test
xchg
jmp
and
retf
imul
sub
sbb
xchg
(bad)
pusha
cmps
inc
push
in
xchg
mov
push
frstor
inc
fstp
and
cmp
sbb
(bad)
lods
and
adc
mov
(bad)
mov
in
xor
(bad)
ret
and
and
cmp
sub
mov
mov
rol
inc
sbb
push
cld
dec
jae
mov
sub
add
cli
add
pusha
mov
int3
(bad)
fstp
jae
xor
ror
das
or
pop
gs
jbe
test
sub
xchg
test
mov
sbb
jno
dec
pop
push
test
icebp
ins
push
dec
xlat
das
ror
mov
sbb
ss
sbb
add
xchg
jmp
movs
or
enter
sbb
ds
inc
sbb
popaw
inc
push
je
cmps
addr16
pop
mov
das
hlt
push
xchg
pop
mov
add
sbb
jbe
pop
dec
inc
dec
mov
loope
dec
iret
mov
mov
(bad)
loopne
jle
pop
dec
or
xor
xchg
cwde
in
inc
mov
push
sub
jg
gs
movs
int3
sar
stos
mov
dec
daa
sub
(bad)
jnp
adc
adc
xlat
(bad)
lahf
mov
xchg
mov
fld
out
dec
push
pop
enter
dec
dec
and
popf
into
dec
xor
push
in
lods
xor
clc
push
in
cs
(bad)
jl
je
ja
imul
out
xor
pop
ret
rcr
jnp
or
fld
fs
int
push
sbb
push
pop
sbb
hlt
sub
mov
jae
cdq
fild
dec
movs
pop
sbb
cs
cs
mov
jge
dec
repz
dec
inc
jbe
jbe
pop
xchg
data16
int
leave
out
pop
jns
jle
dec
cmp
ret
and
movs
inc
aam
test
call
test
(bad)
outs
xor
in
fsub
mov
jae
cli
xor
or
mov
xor
in
mov
xor
rcl
rcl
je
cmps
xlat
pop
cld
rcl
push
cmp
stos
test
xchg
add
cmp
mov
push
mov
sub
ins
push
jo
mov
inc
addr16
sub
not
dec
aaa
jl
in
retf
in
out
fld1
mov
xlat
scas
js
mov
add
out
push
and
and
sti
jmp
xor
ficom
pop
jne
or
iret
mov
mov
dec
sbb
jae
push
repnz
mov
cmc
xor
push
test
and
dec
inc
call
xchg
fadd
xchg
inc
rcl
sti
jb
sbb
adc
test
mov
in
call
(bad)
or
(bad)
or
dec
jmp
popf
aas
mov
leave
test
and
dec
jge
fcmovnb
lds
fimul
sar
pop
arpl
and
cli
mov
dec
dec
int3
jns
cmp
jecxz
adc
ror
inc
fmul
sub
push
mov
sub
cmp
pop
lods
test
push
fistp
cmps
loop
pop
sub
ss
ins
rcr
mov
inc
rcl
lods
xor
jle
imul
mov
inc
sar
or
xor
test
push
ds
daa
push
dec
outs
mov
push
xor
pushf
fld
and
inc
jne
xlat
in
push
xchg
lods
dec
or
jge
sub
nop
adc
xor
neg
inc
in
pop
dec
pop
cmp
jp
fwait
xor
shl
in
imul
mov
cmps
xor
xor
inc
jecxz
imul
cli
dec
xchg
movs
add
dec
arpl
outs
xchg
or
sub
mov
xlat
sub
mov
call
xchg
idiv
dec
mov
add
stc
iret
mov
sbb
hlt
addr16
push
jl
das
daa
xor
mov
(bad)
cmc
pushf
push
movs
add
push
inc
sbb
mov
jecxz
popa
cmp
retw
and
fs
mov
mov
movs
jae
and
hlt
push
ds
aad
outs
sub
pop
(bad)
jns
xor
call
xor
sub
js
mov
cli
jmp
js
add
fst
pop
repz
mov
jge
or
rcr
adc
and
retf
mov
inc
sahf
faddp
lods
add
sub
cmp
aam
repnz
(bad)
mov
rcl
xchg
out
push
xor
cmp
cwde
lea
fsubrp
cmps
mov
std
sbb
out
loope
enter
jo
pop
aam
sub
es
jne
outs
push
fstp
mov
fst
adc
pushf
sub
cmp
in
mov
adc
in
hlt
fimul
mov
or
fstp
out
icebp
or
mov
cmp
xor
rcr
jg
push
sti
ret
out
out
inc
lods
jmp
shl
pop
rol
mov
or
inc
cs
mov
sub
pop
pop
add
cli
sub
and
paddsw
repnz
pop
jmp
or
sub
pop
dec
leave
lahf
dec
push
and
ins
dec
inc
scas
dec
push
sub
add
icebp
push
jnp
cmp
das
jmp
(bad)
fs
sbb
fldcw
mov
or
pop
rcl
mov
cmp
xchg
dec
out
jg
jae
icebp
repnz
push
and
mov
inc
daa
cmovae
sbb
outs
repz
dec
adc
push
xor
or
and
jmp
cwde
mov
loopne
pop
inc
mov
dec
fs
xor
outs
outs
push
add
mov
adc
mov
retf
outs
jb
push
mov
cs
pop
outs
outs
sub
cmps
mov
stc
add
sub
aas
mov
or
or
addr16
cwde
lock
inc
mov
lods
xor
(bad)
or
fisttp
div
inc
mov
adc
inc
adc
pop
sbb
shl
add
mov
cmps
enter
add
jae
lea
clc
xchg
xchg
and
fcomp
xor
idiv
push
leave
push
(bad)
sti
inc
inc
in
jle
cdq
jae
ja
pusha
add
(bad)
adc
sti
cmps
stos
aad
scas
dec
pop
jcxz
test
aaa
stos
addr16
jo
mov
mov
adc
and
xor
cmp
pop
fs
or
lea
jecxz
stos
lahf
outs
dec
mov
pop
dec
imul
stos
and
push
fiadd
mov
icebp
pop
dec
mov
inc
repz
aas
or
mov
hlt
sub
cmc
sub
sahf
mov
pusha
and
jl
pusha
dec
jno
xor
sar
fnstsw
dec
mov
out
jg
lea
sbb
mov
lods
loopne
push
jae
mov
dec
lahf
push
repz
or
outs
(bad)
(bad)
adc
dec
repz
xchg
dec
in
loope
sub
inc
ret
pop
adc
test
jo
arpl
dec
je
jnp
xchg
cmc
mov
(bad)
add
outs
scas
in
pop
ins
rcr
sub
imul
aaa
bound
push
sbb
add
pop
int
mov
mov
cdq
je
lods
dec
mov
dec
out
rcr
outs
rol
jne
xchg
leave
adc
pop
fadd
retf
js
and
dec
int3
or
sbb
dec
push
daa
in
jle
nop
loope
nop
mov
mov
andps
repz
jns
add
stc
xchg
sbb
call
std
mov
mov
xchg
dec
mov
scas
pop
inc
or
shr
fcmovnb
call
or
cmp
cwde
mov
in
leave
adc
in
sub
and
imul
pop
mov
(bad)
xchg
inc
cdq
push
repnz
into
(bad)
(bad)
adc
pop
cmps
fimul
jg
nop
mov
(bad)
outs
stos
or
pop
enter
rcr
jg
aas
aaa
ins
mov
outs
xor
test
jnp
jae
cmps
xor
call
loope
data16
adc
adc
ret
inc
jbe
aas
(bad)
retf
mov
pop
aas
test
jmp
pop
add
mov
add
mov
xchg
sub
inc
mov
push
mov
and
or
mov
push
popa
mov
jp
idiv
cli
and
and
lods
out
rcr
ficom
sbb
retf
(bad)
xchg
nop
sbb
adc
out
aam
push
dec
out
stos
imul
retf
pop
mul
xor
dec
ret
or
inc
pop
mov
xchg
mov
jecxz
add
cmc
ja
js
mov
mov
enter
pop
jmp
test
xchg
test
rcl
imul
(bad)
(bad)
pop
(bad)
test
push
xchg
stc
jae
stos
add
mov
std
fistp
sub
repnz
xor
push
mov
xchg
cmc
mov
je
mov
mov
ins
mov
ror
popf
xchg
xchg
push
pushf
scas
bound
aaa
mov
sub
maskmovq
not
das
cmp
les
mov
push
cmp
dec
enter
dec
and
xchg
or
jo
or
push
scas
dec
outs
cmp
mov
loopne
xor
dec
mov
test
cmp
xor
add
shl
cli
or
push
fcmovnu
pop
scas
mov
(bad)
leave
push
jmp
into
jecxz
push
mov
or
ror
push
fsubr
sub
stc
and
xchg
in
xchg
cs
(bad)
xchg
dec
lock
xor
push
xchg
and
les
jecxz
xor
dec
sbb
not
stos
not
gs
cwde
int3
imul
and
mov
sbb
aam
or
sub
or
mov
cmp
fcomp
inc
scas
lock
dec
inc
sahf
xor
pusha
fucomip
inc
mov
mov
adc
sub
jne
fcom
lahf
xchg
xor
push
xor
aaa
pop
mov
ss
out
mov
pop
jb
stos
scas
ret
mov
add
fild
or
stos
inc
(bad)
hlt
pop
stc
movs
iret
pop
mov
adc
repz
pop
ret
adc
rol
pop
call
and
push
fsubr
push
cmp
push
dec
push
push
inc
xchg
pop
adc
es
push
ins
xor
(bad)
push
mov
out
shl
cld
jp
ret
fs
es
xor
push
mov
hlt
ror
ss
adc
cmp
in
ret
xor
adc
into
imul
dec
lds
dec
fimul
mov
push
scas
call
or
clc
xor
ja
pop
mov
push
cmp
sti
lods
sbb
test
push
or
sub
inc
inc
or
dec
jne
aas
fwait
mov
inc
scas
imul
out
or
xchg
pop
arpl
jmp
mov
fst
mov
es
fcmovb
jnp
jne
(bad)
mov
dec
std
sbb
jno
dec
shr
(bad)
scas
jb
fs
fucomip
fdivr
aaa
sti
outs
loope
popa
xor
jno
xor
xor
popf
cmp
inc
(bad)
sub
mov
push
lds
cmp
cdq
imul
loopne
mov
mov
push
pop
dec
ja
es
pusha
movs
addr16
arpl
xor
adc
(bad)
xchg
scas
cmp
sbb
dec
repnz
ins
dec
mov
sub
cmps
mov
clc
and
dec
push
jge
mov
pop
cmc
test
aaa
aam
cmp
cs
(bad)
adc
add
fcom
dec
lea
jnp
inc
pop
iret
iret
jmp
fsubp
je
adc
outs
xchg
arpl
cdq
neg
jle
xchg
push
es
jno
xor
mov
pop
addr16
push
repnz
or
ins
mul
(bad)
fstp
or
pusha
jp
pushf
push
test
sbb
ficomp
xchg
jp
xlat
mov
test
test
add
mov
popf
fisub
jns
fwait
jmp
inc
mov
sub
jo
mov
push
adc
out
mov
sub
cmps
pusha
cmp
js
inc
leave
sub
loopne
xchg
xchg
cmp
out
push
mov
xor
cmps
punpckhdq
mov
mov
pop
xchg
xchg
jmp
pop
xchg
mov
cld
hlt
xlat
xchg
xor
mov
adc
jmp
in
pop
ret
push
ss
repz
push
stc
mov
(bad)
cmp
mov
movs
(bad)
fst
push
mov
mov
(bad)
fnstsw
cld
mov
sub
add
fcomp
mov
pop
push
xlat
pop
pop
(bad)
xchg
or
mov
sub
xchg
mov
lods
sub
test
inc
(bad)
mov
add
in
or
pushf
xchg
and
movs
cmp
lods
jmp
dec
(bad)
mov
inc
mov
push
mov
outs
shl
mov
sbb
xchg
ror
and
mov
imul
sar
imul
xlat
movs
outs
rcr
fs
pusha
call
sti
xor
xchg
mov
jecxz
cli
cmp
lods
int
in
mov
(bad)
pushf
(bad)
mov
imul
out
cmp
in
inc
sahf
stos
dec
fwait
mov
in
inc
inc
xchg
or
inc
dec
mov
clc
sub
mov
aas
adc
mov
dec
xchg
(bad)
es
movs
enter
pop
daa
fcom
dec
pop
in
fldenv
fild
outs
xchg
pop
lds
lahf
shl
and
sbb
adc
sar
add
mov
sti
out
sbb
xor
xchg
jae
sbb
mov
xchg
aad
jbe
adc
into
jg
ficomp
scas
aas
mov
jmp
ins
xchg
es
or
sbb
pop
int3
std
pop
xor
nop
xor
push
sub
pop
mov
mov
movs
xor
fbld
loope
outs
test
stos
jnp
int3
adc
fiadd
jae
shl
arpl
adc
aad
movs
or
(bad)
and
or
and
inc
jo
aas
mov
fcmovne
sub
fst
xchg
hlt
adc
sub
test
out
jmp
xchg
jo
retf
in
mov
xchg
iret
sahf
mov
mov
movs
adc
and
or
pop
test
aam
xor
lods
hlt
leave
adc
loopne
jae
jne
adc
mul
add
in
retf
push
stos
retf
dec
je
mov
fidivr
adc
and
add
repnz
push
sub
aaa
in
test
retf
lods
movs
scas
cdq
mov
mov
aaa
lods
and
cmp
out
xor
and
cmp
int3
clc
cmps
mov
mov
inc
pop
inc
aad
std
stc
aaa
jp
cmp
and
sar
arpl
cli
call
jge
stos
xor
inc
jae
mov
scas
test
pmovmskb
sub
retf
sbb
xor
sbb
gs
push
idiv
mov
daa
stos
ret
pop
dec
(bad)
mov
loopne
test
or
ret
fnsave
or
je
mov
ret
jne
xor
je
mov
push
int3
pop
in
lahf
shr
pushf
fwait
pop
mov
xchg
jo
xor
rcl
sub
or
xchg
cmc
movs
add
mov
fisub
stos
cdq
les
push
cmp
pop
mov
or
mov
push
iret
pushf
inc
mov
jg
int
and
push
sub
ret
adc
fld
add
dec
add
add
cmp
call
xchg
enter
pushf
rol
(bad)
jae
sar
in
(bad)
sti
mov
repnz
test
repz
std
fstp
jmp
(bad)
iret
cmp
mov
adc
push
(bad)
out
stc
fild
adc
cmp
dec
or
xor
xchg
retf
loop
pop
or
push
inc
cmp
mov
loopne
cmp
div
mov
pop
jo
adc
mov
mov
cmovae
dec
and
jno
bound
push
inc
or
movs
mov
and
jg
and
mov
xor
fsub
and
je
mov
or
in
mov
jp
dec
dec
sub
push
adc
lea
out
mov
mov
mov
shl
call
rol
jmp
xchg
cmp
sbb
adc
fcomp
mov
add
or
dec
jmp
jns
ins
rcl
cs
xor
and
sti
or
push
sbb
dec
mov
fistp
(bad)
hlt
loope
loope
icebp
inc
push
stc
stc
(bad)
jle
mov
clc
lds
lock
ret
jb
adc
addr16
(bad)
sub
xchg
sub
in
add
xor
mov
stos
pop
clc
mov
mov
cmps
or
push
and
pop
inc
bound
mul
(bad)
jmp
ins
mov
pop
pop
push
mov
mov
loop
push
out
mov
cwde
aad
adc
pop
and
sti
sub
xchg
cmps
call
pop
rol
mov
ror
(bad)
repnz
ja
or
lods
mov
push
stos
or
enter
dec
pusha
sub
(bad)
xor
int
xor
jo
pop
fist
lock
mov
sbb
les
ins
cmp
fiadd
add
add
jbe
movs
add
xchg
popf
and
mov
push
outs
push
hlt
out
dec
aaa
mov
lods
and
cli
jne
lds
cmps
std
push
push
push
outs
(bad)
sbb
and
int
xor
adc
inc
mov
cli
jns
je
pop
or
in
ret
cdq
int3
xor
xchg
hlt
aaa
cwde
out
scas
out
mov
(bad)
(bad)
scas
cmp
inc
pop
scas
push
mov
jo
adc
std
imul
xor
lahf
mov
(bad)
mov
test
jp
inc
dec
sbb
loope
lods
adc
jle
gs
mov
jnp
mov
jg
push
dec
mov
ror
repz
jmp
xlat
sub
xor
push
ja
inc
mov
jo
rol
lea
ins
push
sbb
sub
neg
movs
pop
std
sbb
cdq
in
mov
pop
aam
push
pop
adc
mov
add
fnstsw
in
inc
fsub
jmp
ret
cmp
add
add
fcmovb
neg
popf
xor
and
or
call
mov
je
cmp
ret
scas
ins
shl
enter
retf
imul
mov
call
jmp
pop
lahf
push
aad
adc
and
xchg
add
xor
xchg
repz
xchg
xor
inc
ret
and
dec
dec
dec
pop
cld
adc
(bad)
es
cli
cmps
cmp
mov
jl
icebp
icebp
mov
add
ss
mov
stos
scas
mov
push
fnsave
push
aad
aas
jl
jg
sar
push
mov
or
pop
inc
std
(bad)
out
int3
fs
push
ret
icebp
mov
fs
shr
jo
mov
jg
jl
dec
xchg
and
retf
sar
clc
cmp
inc
fwait
sbb
scas
mov
test
pushf
cdq
retf
xlat
adc
or
fidiv
dec
push
sub
sub
mov
test
push
push
or
rcr
leave
xchg
into
stos
mov
loopne
dec
pusha
adc
jno
frstor
loop
inc
shl
clc
or
adc
in
jne
mov
ins
push
bound
adc
popa
inc
mov
cli
(bad)
repz
sbb
or
xchg
push
pushf
pop
loope
mov
lahf
xchg
in
clc
sub
mov
in
orps
das
out
or
int
(bad)
push
jae
sub
call
jns
pop
adc
jg
fdivr
(bad)
aad
dec
sub
out
lods
mov
xchg
or
lahf
push
sub
mov
mov
jne
ret
loop
and
ret
inc
or
or
pop
js
mov
pop
sbb
jo
xchg
xchg
loope
addr16
adc
sub
xor
nop
movs
or
shl
jno
ret
sbb
cdq
mov
inc
mov
dec
pusha
fldenv
dec
mov
ret
repz
dec
lock
fisttp
in
sub
jo
and
setp
xchg
ret
mov
push
mov
pop
jno
(bad)
loop
xor
xor
mul
sub
xchg
xchg
pop
push
jbe
sbb
xor
inc
dec
push
add
(bad)
dec
push
test
in
loopne
imul
mov
xchg
jmp
and
jnp
cs
(bad)
fdiv
dec
(bad)
scas
xchg
sbb
lods
cmp
jbe
stos
test
icebp
sbb
gs
jbe
pop
aad
xor
pop
lea
loop
shl
ret
cmp
dec
sub
push
xchg
xchg
inc
aad
mov
mov
(bad)
hlt
adc
je
les
out
int
mov
cmp
mov
push
ins
mov
xor
stc
popa
cli
imul
xchg
mov
or
sub
jecxz
push
scas
add
fwait
mov
(bad)
ficomp
jp
push
cmps
cmp
stc
mov
xor
sar
(bad)
xor
inc
jecxz
adc
mov
out
cmp
push
sbb
dec
sbb
inc
out
dec
icebp
and
inc
inc
mov
and
lods
mov
xlat
leave
scas
push
pushf
cmp
outs
lock
(bad)
ret
shr
clc
fcomip
bound
jmp
adc
adc
xor
mov
push
call
fs
iret
jl
sbb
mov
mov
bound
ror
je
pop
sti
push
pusha
xchg
test
push
adc
pop
xchg
(bad)
xor
sbb
imul
nop
sbb
inc
neg
cld
imul
mov
and
sub
int
aas
aam
cld
xchg
adc
in
dec
push
mov
movs
ret
jo
mov
(bad)
ret
stc
mov
test
lock
pop
push
popf
and
hlt
dec
aam
sbb
dec
push
mov
xchg
push
pop
fsubr
and
(bad)
out
xchg
ja
mov
inc
inc
and
and
dec
rcr
sub
mov
into
scas
pop
mov
or
scas
jb
test
popf
mov
(bad)
pop
inc
pop
xor
dec
inc
xchg
pop
les
push
jbe
xor
jo
repz
fmul
lods
or
retf
sub
mov
push
movs
iret
pop
inc
out
xchg
(bad)
call
xchg
or
fdivr
das
scas
xor
in
ja
jmp
imul
lock
repz
int3
call
sub
mov
sub
mov
stos
nop
sbb
sbb
dec
dec
movs
sub
xor
imul
neg
pop
sbb
mov
jmp
call
pop
std
dec
hlt
outs
dec
xchg
and
cmp
pop
enter
cmp
mov
fadd
cdq
fild
cmps
test
dec
(bad)
stc
jecxz
das
push
add
shr
and
aaa
mov
add
lds
xchg
cmc
lods
jae
data16
loop
rol
daa
pop
lahf
or
outs
popf
push
gs
and
fwait
mov
daa
jmp
cmp
sbb
sbb
jmp
mov
add
movs
test
out
sub
cmps
in
call
(bad)
iret
idiv
xchg
adc
in
jnp
ror
jmp
ins
in
test
lods
add
rol
rcr
cmp
xchg
add
mov
test
push
ror
in
shl
mov
or
aam
jg
lods
jmp
jge
sub
push
sbb
stos
ficom
ret
test
call
aas
pusha
stos
test
mov
mov
imul
aad
leave
int3
mov
cli
xor
xchg
fcom
adc
sub
mov
adc
mov
fisttp
jg
sti
add
adc
push
inc
rcr
ins
or
ret
shl
repz
rol
sbb
scas
fld
ret
dec
push
pop
(bad)
mov
enter
push
pop
jp
jecxz
inc
xor
xor
arpl
mov
xor
cmp
add
mov
dec
fild
bound
cld
cmc
mov
push
pushf
mov
pop
mov
fcmovnu
fistp
add
cmp
gs
stos
mov
hlt
push
les
jbe
mov
ins
cmp
xchg
xchg
mov
mov
lods
cmp
or
sbb
dec
jecxz
adc
cli
dec
sbb
push
xchg
mov
aaa
mov
clc
xchg
xchg
adc
out
stos
data16
jnp
or
in
jmp
shl
pushf
push
pop
in
sbb
mov
sahf
sbb
jbe
adc
call
xor
mov
mov
jns
clc
mov
pop
sar
das
cmp
mov
and
into
lahf
das
pop
jo
movs
dec
push
stos
or
xchg
dec
jae
jle
mov
jmp
sbb
add
in
cmp
xchg
mov
mov
(bad)
or
scas
or
test
(bad)
in
jne
stos
loopne
in
or
popf
cmp
imul
pop
addr16
sub
push
test
rol
cmp
call
cs
ds
pop
xor
addr16
push
or
movs
call
sbb
and
in
inc
repnz
dec
ins
scas
ror
adc
ja
inc
lods
dec
mov
inc
add
jmp
std
mov
push
pusha
and
mov
inc
push
inc
loop
pop
pushf
mov
test
push
shr
fst
ds
pusha
mov
loop
sbb
inc
mov
xor
sar
in
push
xor
imul
mov
or
hlt
push
jp
sbb
or
stc
lods
imul
sub
or
das
mov
or
cmp
mov
push
inc
cmp
jmp
jbe
jmp
adc
sub
std
imul
xchg
ret
movs
lods
fdivr
push
inc
add
add
add
loope
xchg
pop
ins
pop
(bad)
dec
in
cmp
sbb
pop
cwde
xor
imul
sub
(bad)
lods
inc
hlt
and
aas
or
adc
stc
sub
in
mov
gs
loope
mov
arpl
mov
cmp
fldenv
fidivr
mov
aas
mov
fdiv
or
into
mov
rol
std
xchg
ins
mov
xlat
lea
dec
or
and
xlat
dec
(bad)
jno
cs
in
pop
enter
push
and
sti
sub
lods
rcr
adc
in
xchg
cmp
mov
bnd
push
mov
in
jg
cmp
rcl
imul
aas
inc
out
sbb
imul
loopne
add
sub
add
mov
adc
sbb
dec
fistp
and
mov
(bad)
jmp
mov
xchg
repz
scas
popa
or
and
mov
aas
je
xchg
or
ja
call
scas
stc
xor
lea
pop
dec
es
adc
aad
jecxz
js
inc
mov
xchg
xchg
dec
mov
ss
cmp
(bad)
movs
adc
pushf
sbb
mov
mov
pop
xchg
add
xchg
dec
mov
sbb
pop
ret
cdq
inc
mov
test
popa
cmp
in
or
sbb
pop
inc
scas
jl
cld
xor
jmp
jmp
add
inc
nop
fnstsw
(bad)
mov
pop
cld
jne
dec
loop
xor
lahf
sub
idiv
in
cmp
pop
or
cmp
les
dec
pop
xchg
sar
cmp
test
jnp
iret
fadd
lock
sub
pop
call
cmp
pop
add
push
xchg
shl
sar
push
mov
cmps
cdq
js
mov
popfw
sub
jb
xchg
out
and
out
cld
ret
fmul
ret
push
sahf
or
cmps
imul
in
push
sub
xor
xchg
mov
pop
sbb
mov
xor
imul
popf
les
cmp
pop
popf
outs
mov
repnz
inc
call
add
ds
cmp
mov
push
xchg
xchg
aas
cld
xlat
mov
mov
inc
fcom
push
mov
test
pusha
mov
icebp
adc
ja
or
inc
dec
mov
or
mov
arpl
jnp
in
mov
pop
sbb
scas
push
pop
rcr
mov
pop
stos
inc
lahf
in
loopne
das
pop
cmp
inc
mov
adc
fldcw
xlat
iret
or
mov
push
loopne
add
outs
cmp
xchg
aad
repnz
push
out
loop
pusha
lds
push
fisubr
and
jp
gs
popf
retf
mov
mov
or
mov
scas
mov
rcl
sub
inc
lea
in
pop
cdq
pop
sub
dec
cli
mov
das
mov
repz
fwait
in
dec
out
sahf
jge
in
dec
and
push
mov
pop
scas
imul
jb
sbb
inc
mov
into
loopne
enter
push
cmc
out
xchg
jnp
xor
mov
loop
jb
sahf
add
ja
xor
lock
xchg
daa
mov
es
xchg
outs
xor
ror
xlat
ror
popa
outs
rol
dec
mov
scas
test
jge
xor
adc
sub
pop
dec
xor
xor
outs
out
sar
dec
cmps
or
stos
in
inc
clc
push
inc
mov
mov
jno
dec
(bad)
jmp
cmps
dec
mov
inc
xor
pop
aas
xchg
mov
test
push
nop
cs
addr16
dec
orps
(bad)
pcmpeqb
fs
mov
sbb
pop
ret
push
nop
or
jl
and
cmp
(bad)
mov
imul
or
jmp
es
mov
and
cmp
push
fwait
xor
mov
or
mov
inc
cmc
movs
mov
hlt
shr
fcmovbe
aad
test
xlat
pusha
out
pushf
mov
jge
aaa
inc
cmp
std
jo
repnz
xor
adc
ja
xchg
out
cdq
inc
movs
int
not
fist
in
adc
fwait
das
jb
loope
jae
adc
fs
cld
cmp
outs
mov
lods
fwait
jno
jb
sbb
push
lea
and
call
(bad)
(bad)
es
push
arpl
jnp
ins
push
dec
add
push
lods
in
xor
clc
jnp
pop
push
jmp
add
jl
sub
lea
xor
aaa
out
add
cmp
ret
fadd
inc
pop
sub
sbb
jae
fs
jg
inc
les
lods
xchg
aad
dec
sub
push
lds
xchg
or
test
leave
(bad)
pop
jmp
retf
xchg
inc
sahf
jo
add
lahf
repnz
in
mov
das
cdq
dec
dec
mov
mov
mov
scas
jnp
ficomp
add
in
and
dec
rcr
add
add
pusha
jae
sub
pop
enter
push
xor
test
cmc
and
cld
(bad)
sbb
xor
xor
jp
into
inc
(bad)
xor
mov
mov
(bad)
pop
jns
cmp
or
popf
xchg
dec
inc
in
mov
call
in
pushf
mov
les
jl
jmp
inc
js
jg
add
test
pop
mov
jb
(bad)
pop
adc
aas
out
push
and
mov
sahf
adc
ror
xor
xor
dec
ror
retf
xlat
loope
and
push
push
call
cmp
int
push
adc
addr16
pop
mov
dec
dec
iret
push
pop
lds
hlt
dec
rcr
or
test
add
repz
pop
cmps
lea
mov
cmp
inc
sbb
cmps
cmp
out
inc
sar
mov
(bad)
mov
push
add
inc
out
ficom
cmp
gs
repnz
cs
jecxz
push
cmp
xchg
and
xchg
into
or
xor
lods
je
adc
loopne
push
dec
push
out
mov
jl
popa
push
pusha
cmps
enter
and
jge
adc
arpl
pop
xchg
es
pusha
dec
xchg
dec
inc
xchg
cmc
(bad)
frstor
loopne
icebp
sub
pop
fnstenv
mov
je
shl
cwde
pop
xchg
loope
push
cdq
push
xor
cmp
mov
imul
adc
mov
dec
dec
or
mov
in
and
loop
adc
jb
adc
mov
xchg
stos
inc
daa
or
xchg
mov
div
xchg
mov
mov
je
outs
mov
mov
cmp
push
pop
pushf
dec
test
repnz
adc
loopne
aas
xchg
xor
jecxz
and
jmp
and
imul
(bad)
adc
sbb
add
or
lock
mov
lods
dec
cmps
gs
push
enter
in
mov
dec
clc
fstp
pushf
pop
sbb
cmp
loope
dec
adc
pop
ror
test
jbe
cld
out
hlt
fstp
jae
jg
xor
dec
inc
mov
retf
sub
fistp
dec
xor
dec
jecxz
shl
sbb
cmp
sub
pop
repz
cmp
loopne
xor
xor
in
push
cmps
dec
aas
fdivrp
xor
sbb
dec
push
add
test
lock
into
ret
xchg
lds
fucom
or
aas
mov
mov
mov
popa
cs
scas
inc
and
xor
cmps
(bad)
jb
mov
ror
xchg
dec
fsubr
xchg
call
cld
push
jns
pop
mov
cmp
outs
std
nop
push
sub
xchg
inc
ret
adc
cdq
cwde
je
sub
pop
jl
add
push
mov
hlt
inc
jb
popa
jmp
fisttp
jecxz
out
add
fs
mov
(bad)
int
push
in
jecxz
int
call
in
sbb
std
push
or
repz
mov
leave
sahf
addr16
into
cmp
mov
std
rol
lods
sbb
mov
xor
fdivrp
mov
leave
sbb
(bad)
xor
mov
cli
retf
dec
fild
cmp
mov
icebp
std
outs
std
adc
ret
mov
xor
mov
push
lods
push
or
cwde
mov
jbe
mov
outs
pop
xchg
jecxz
cmps
mov
cmps
mov
jl
repz
test
xchg
(bad)
es
cmp
push
push
adc
int
js
ror
mov
hlt
jno
inc
sahf
jge
lahf
push
jae
xor
add
cmp
mov
jecxz
mov
adc
inc
jno
out
xchg
call
js
mov
mov
mov
jg
out
lods
push
cld
adc
ds
and
lock
dec
xor
rcl
mov
or
xchg
jnp
aam
cmp
push
bound
add
fist
js
mov
adc
pop
inc
xor
sbb
lods
jmp
fstp
inc
movs
fisttp
or
retf
or
cmp
ror
shl
repnz
sar
pop
je
mov
jle
xor
shl
mov
sbb
sbb
lahf
mov
movs
ins
xor
call
fwait
leave
add
mov
(bad)
daa
xchg
xor
add
test
fiadd
sub
jle
cmp
les
sbb
scas
sub
mov
cmc
sub
jbe
cmp
into
sub
sbb
movs
xlat
jnp
call
loope
cmps
aad
adc
jo
mov
into
mov
dec
cmp
sbb
sub
test
mov
lahf
sub
(bad)
sbb
popa
lahf
lods
cmp
or
pop
mov
int
in
add
outs
dec
sbb
and
pop
xchg
int3
cs
cld
pop
neg
gs
cdq
sub
dec
cmp
jo
cmps
ins
sub
sbb
mov
and
inc
and
sbb
xor
dec
cmp
jns
lock
call
iret
(bad)
mov
mov
add
inc
(bad)
pop
pop
(bad)
and
xor
adc
test
mov
dec
xchg
push
inc
jp
jnp
push
daa
outs
pushf
mov
inc
or
ret
lahf
clc
adc
lahf
not
dec
and
and
loopne
sub
ss
loopne
mov
cmp
and
pop
jnp
cs
xchg
push
pop
iret
sbb
jge
push
test
outs
fs
cmp
cli
mov
cmp
jp
lods
dec
xor
imul
adc
arpl
pop
mov
es
jo
push
js
and
mov
mov
mov
cwde
push
inc
aad
into
mov
pop
neg
sti
dec
push
mov
lods
xor
mov
arpl
ins
std
or
sub
ror
dec
and
sub
push
inc
fsub
sti
out
sbb
xor
loope
push
scas
jae
add
inc
(bad)
inc
imul
pop
lahf
xchg
les
push
loopne
jns
jbe
dec
icebp
mov
movs
sar
or
loope
cs
js
adc
pushf
sbb
in
cmps
jg
xchg
mov
xor
in
outs
dec
retf
sub
repnz
popf
pop
cdq
pop
push
das
fwait
shl
or
out
pop
xor
mov
inc
mov
or
xchg
pop
fisubr
shl
rcl
div
push
xchg
pop
inc
ret
dec
aas
js
mov
daa
or
iret
outs
xchg
sti
mov
loope
mov
ret
sub
mov
inc
clc
or
or
xchg
imul
fistp
out
retf
pop
in
out
mov
not
xor
push
mov
cmp
stc
and
mov
mov
xchg
mov
mov
push
mov
adc
xchg
es
retf
arpl
call
push
fadd
(bad)
loopne
adc
popf
pop
adc
loope
test
or
leave
jnp
jg
adc
int3
push
or
shrd
outs
out
xchg
mov
pop
pop
and
call
rol
pop
push
es
dec
inc
fsub
pop
sti
into
cwde
pop
inc
mov
ror
inc
mov
popf
cwde
xchg
dec
sahf
lods
fwait
test
adc
test
aas
pop
adc
sbb
push
push
adc
sbb
cmp
jnp
dec
es
inc
push
imul
dec
push
sub
ret
out
in
push
repnz
push
outs
dec
fidiv
mov
mov
xchg
pop
cmovp
push
nop
inc
xchg
movs
sbb
fwait
inc
outs
jne
ins
mov
(bad)
dec
loope
add
mov
mov
mov
imul
aam
lds
scas
sbb
mov
mov
jecxz
popa
adc
inc
retf
inc
dec
push
xor
shl
outs
xchg
cmp
scas
jmp
fadd
mov
dec
push
in
inc
(bad)
sub
sahf
les
popa
mov
jmp
or
adc
mov
bound
xchg
shl
rcr
dec
push
jmp
popf
push
jmp
pusha
push
js
dec
cmp
aad
add
arpl
inc
mov
dec
lods
repz
movs
call
addr16
inc
fs
add
fsubr
inc
fsin
nop
jecxz
(bad)
mov
into
push
jge
cld
push
pop
adc
pusha
xchg
mov
xchg
les
data16
sub
mov
leave
and
push
mov
ja
pop
popf
shl
and
jecxz
xchg
jnp
push
in
les
cmp
(bad)
(bad)
movs
inc
lds
cmp
adc
sbb
mov
(bad)
adc
pushf
pop
pop
inc
and
push
cmc
cmc
jb
pop
and
xor
xor
aam
out
xor
xchg
xchg
dec
jo
mov
and
jge
pop
xlat
clc
jmp
cli
inc
and
bswap
sub
and
jecxz
dec
inc
imul
inc
sub
mov
mul
dec
mov
xchg
xor
mov
inc
xor
add
mov
pop
mov
das
adc
aaa
shl
mov
mov
and
jbe
or
push
lea
push
sbb
fst
cs
pop
std
or
add
cmc
mov
lock
scas
in
push
icebp
push
out
std
mov
jmp
xchg
cdq
scas
and
jmp
jb
and
arpl
sbb
xor
add
sub
out
rcl
fnstsw
rcl
dec
sbb
nop
popf
fstp
sahf
mov
and
ins
sti
dec
jns
dec
or
sbb
xchg
or
sub
mov
mov
and
pushf
pop
fdivr
jne
xchg
sub
fadd
fstp
mov
jecxz
sahf
dec
xor
xor
retf
push
pop
mov
inc
and
cmp
mov
xchg
(bad)
pop
sub
jecxz
inc
lock
lds
mov
jmp
and
lods
sbb
test
fucom
add
push
call
(bad)
mov
dec
pop
push
dec
stos
push
stos
leave
ror
jecxz
xor
sub
addr16
aad
mov
xchg
jmp
loopne
stc
push
add
pop
cdq
fnstcw
mov
push
inc
ss
xor
cmp
psubq
aaa
dec
aaa
jnp
fild
push
in
test
popa
xchg
(bad)
push
(bad)
ror
sbb
aam
mov
retf
div
std
sub
test
mov
movs
mov
inc
and
fcom
fs
out
mov
sbb
jle
addr16
leave
and
test
loop
jbe
xor
xchg
pop
pushf
hlt
adc
movs
mov
or
stc
or
dec
cmps
mov
mov
out
cs
ret
mov
(bad)
push
adc
cmp
ss
test
jge
sbb
jno
fsubr
push
sbb
fs
fidiv
popf
or
ins
in
lods
jae
bound
jno
ins
popf
mov
mov
and
cmp
stc
fwait
ret
lock
std
ja
imul
inc
lock
aam
fld
jl
adc
xbegin
cs
and
push
sar
enter
fistp
mov
addr16
adc
(bad)
(bad)
sub
or
sar
push
out
mov
xlat
mov
jo
les
add
cdq
xchg
iret
ins
pop
and
dec
cs
lds
adc
aad
gs
daa
cmps
mov
pusha
sub
jg
pop
pop
out
or
mov
aad
adc
dec
int
jb
push
mov
aam
mov
xchg
mov
imul
inc
lea
sub
mul
mov
sbb
pcmpeqb
push
outs
jp
in
outs
shr
dec
xor
lahf
pusha
mov
pop
jle
bound
imul
out
xchg
mov
adc
push
mov
xor
jnp
nop
repz
iret
add
pop
xchg
daa
das
test
jle
popa
mov
scas
cwde
aas
dec
jp
push
mov
cmp
jmp
sbb
sti
and
stos
jne
je
cmp
sub
and
loop
dec
cmp
jecxz
or
mov
std
push
cmc
and
inc
xchg
mov
dec
(bad)
and
out
lods
push
push
jmp
push
push
ins
mov
out
xor
jmp
stos
icebp
adc
test
nop
adc
mov
out
mov
inc
xchg
adc
jle
in
rcl
out
stos
push
push
out
jne
idiv
loope
sub
test
cmps
leave
mov
test
adc
aas
pusha
call
dec
mov
rcr
xchg
xor
repnz
movs
jp
mov
sbb
mov
cmps
rcl
hlt
jl
les
rol
inc
xor
inc
call
push
xor
rcr
pop
ins
and
lods
xor
(bad)
push
push
in
lock
cmp
fsubr
inc
mov
mov
jmp
(bad)
out
jl
xchg
hlt
scas
mov
js
cmp
enter
mov
or
xor
jge
xor
dec
and
mov
aas
pop
lods
sbb
mov
cmp
shl
jle
mov
xchg
outs
jno
ds
push
adc
sbb
gs
jnp
retf
mov
and
pusha
dec
jmp
dec
stos
jecxz
popf
add
sbb
mov
lock
aad
mov
cmps
aaa
jmp
cmps
ins
xor
dec
dec
loope
xor
inc
popa
repz
xchg
push
ret
pop
fsubr
repnz
fcomp
retf
or
push
shl
neg
prefetch
mov
or
les
inc
outs
addr16
lahf
push
lock
in
ror
retf
out
cmp
push
jmp
pop
scas
rcr
(bad)
dec
fistp
mov
push
pushf
mov
mov
pop
mov
xor
pop
or
std
pop
mov
inc
or
std
pop
pusha
pop
(bad)
cdq
push
xchg
push
ror
inc
inc
add
jns
ret
mov
(bad)
add
adc
call
mov
mov
mov
popf
jmp
retf
inc
cmp
fxch
dec
xor
movs
mov
pushf
sub
dec
(bad)
fsub
push
in
dec
gs
test
jbe
loope
les
jo
rcl
ins
push
xor
cmps
inc
push
add
xor
xchg
or
cmc
jmp
mov
das
or
test
fstp
adc
mov
and
jecxz
inc
jnp
mov
inc
pop
imul
(bad)
fs
xchg
jge
jge
jns
stos
mov
cmps
push
xchg
mov
loope
lods
pop
jmp
in
icebp
sub
aad
imul
hlt
sub
adc
cmp
enter
mov
or
dec
cmps
aaa
aas
btc
jl
xchg
pop
dec
imul
loop
xchg
repz
call
nop
mov
jmp
scas
mov
(bad)
jnp
jle
hlt
dec
xor
in
es
les
mov
push
lock
mov
cmp
pusha
sbb
jmp
xchg
and
pop
cwde
inc
xchg
cli
xchg
ja
loop
inc
sti
shr
and
pushf
jb
js
mov
pop
jne
xchg
pop
lea
mov
(bad)
mov
mov
push
(bad)
loopne
xchg
xchg
fldlg2
leave
pop
jo
clc
sahf
in
(bad)
fsubr
repz
lods
in
je
test
and
mov
sbb
(bad)
jmp
je
sbb
push
pop
cmps
lods
cmp
out
int3
clc
adc
sbb
push
mov
cli
iret
int
and
pop
ja
mov
outs
add
xchg
mov
fnstcw
sbb
pop
push
inc
cdq
xchg
mov
mov
dec
in
cmps
dec
add
jo
mov
inc
fisttp
sub
cmps
movs
ret
mov
ror
test
push
xchg
mov
push
inc
or
mov
pushf
sub
rcl
stos
movs
rol
sbb
sar
add
das
inc
mov
mov
push
push
in
xchg
mov
pushf
mov
outs
aad
push
addr16
repnz
ins
push
pop
fdiv
je
mov
sahf
and
xor
mov
(bad)
iret
in
and
dec
pop
(bad)
test
std
lahf
mov
xchg
mov
sub
add
mov
xchg
xchg
jecxz
inc
push
jle
and
xor
out
and
or
popf
cs
fcmovnu
or
int
mov
ret
pop
push
mov
bound
imul
sub
cdq
add
stos
leave
xor
xlat
and
pop
dec
popf
mov
push
sbb
outs
in
sub
jnp
sub
popf
xchg
cmps
sbb
dec
mul
in
popa
sbb
mov
jecxz
mov
test
inc
lahf
or
push
cmc
fstp
or
out
or
(bad)
jno
sbb
int
mov
or
and
mov
mov
cli
fidiv
add
fst
dec
adc
xchg
push
fisttp
xchg
nop
mov
pop
aad
and
adc
dec
dec
(bad)
and
push
cmc
cs
pop
outs
push
shl
jne
out
sbb
push
and
ror
cdq
ins
aam
loopne
jl
clc
mov
cmp
stc
pop
idiv
fstp
ret
add
(bad)
xor
mov
and
jo
pop
push
sbb
ja
xchg
ja
mov
inc
movs
push
(bad)
lea
push
xchg
dec
mov
inc
fmul
cwde
cmp
iret
(bad)
mov
dec
xor
push
push
cdq
pop
shl
jmp
fdivr
mov
inc
icebp
les
out
retf
sbb
sub
mov
pop
ss
add
sbb
inc
mov
pop
pop
int
es
jl
and
mov
lods
mov
pusha
jp
ds
cmp
sub
pop
cmp
dec
retf
loopne
sbb
add
add
dec
jae
cli
popf
int3
daa
enter
lods
int3
mov
rol
push
jp
ss
mov
dec
stos
icebp
icebp
retf
outs
lahf
test
push
in
cmp
cmp
movs
adc
dec
aad
dec
mov
mov
(bad)
xor
repz
xchg
mov
mov
hlt
movs
cmp
adc
pop
mov
mov
lods
mov
jne
movs
imul
stos
adc
cmps
lea
sbb
ret
add
cdq
into
ins
in
push
enter
sub
out
ins
add
add
push
or
pop
xchg
cmps
cmps
cli
das
cwde
xor
sub
loope
cld
fisub
out
test
fwait
xchg
inc
and
mov
jl
call
sub
out
mov
inc
mov
push
push
fadd
mov
sahf
sub
aad
std
and
rol
jg
dec
mov
sar
dec
dec
push
and
shl
jae
leave
cmc
mov
push
or
je
lods
call
jns
(bad)
lock
add
jg
pop
hlt
jae
xchg
jg
(bad)
cli
dec
ret
mov
fiadd
adc
test
loop
scas
push
(bad)
jecxz
inc
pop
jno
aas
sti
pop
add
fdiv
jb
loope
outs
mov
jg
ins
jne
sub
sbb
fnsetpm(287
in
lds
in
inc
add
xchg
aaa
enter
stos
(bad)
lock
int3
push
mov
call
mov
xchg
fdiv
xchg
enter
fdiv
mov
pop
ins
jb
fistp
mov
jnp
es
xor
loopne
dec
arpl
push
cmp
jle
fstp
retf
jge
push
or
(bad)
outs
mov
addr16
sub
(bad)
ret
or
lock
inc
pop
stos
shl
pop
pop
ins
mov
and
iret
sbb
sub
pop
loop
test
inc
or
std
xchg
mov
(bad)
fisttp
int
adc
nop
aaa
jmp
adc
and
imul
xchg
std
push
retf
mov
cdq
shrd
cmp
sahf
cmp
mov
mov
and
inc
xchg
in
fist
mov
aad
dec
xor
nop
je
repz
call
and
mov
and
adc
mov
xchg
pop
xlat
pop
cmps
mov
mov
gs
inc
(bad)
fldcw
dec
mov
jne
ins
clc
arpl
jo
mov
sbb
test
jecxz
jmp
push
inc
rcl
repz
push
or
mov
dec
test
push
xchg
inc
mov
mov
inc
mov
rcl
mov
(bad)
stc
sti
mov
and
jbe
(bad)
mov
(bad)
std
inc
jb
stos
bnd
xchg
inc
(bad)
mov
inc
dec
iret
jp
jae
ins
enter
movs
mov
mov
or
sahf
ins
and
cmps
pop
push
jle
rol
or
mov
dec
inc
xchg
out
push
pop
jae
outs
cwde
mov
rcl
xchg
lods
ins
push
(bad)
dec
test
lods
aam
push
cmps
out
adc
or
jp
call
inc
inc
dec
jle
hlt
loopne
je
out
lea
dec
loop
data16
enter
sub
or
and
mov
(bad)
jae
inc
outs
outs
xchg
mov
lahf
rcr
aaa
clc
push
sahf
push
jae
and
mov
mov
mov
ret
shl
pop
cmp
out
cs
ret
adc
inc
jo
rol
not
and
or
iret
mov
add
sub
sub
(bad)
and
xor
loopne
fadd
xchg
shr
xchg
mov
add
popf
mov
sbb
sub
jmp
ins
jge
inc
and
sbb
mov
dec
lods
jb
xor
das
clc
and
das
mov
ret
push
sub
shr
aas
int3
push
add
mov
sbb
leave
cmp
(bad)
fimul
bound
dec
jmp
mov
inc
xor
scas
repz
daa
cmps
mov
adc
fsubp
inc
jg
out
lock
out
mov
push
mov
pop
repnz
bound
stos
bound
adc
aad
ja
aas
(bad)
cmp
push
mov
xchg
(bad)
sub
test
sub
xchg
push
fnstcw
cmp
or
mov
movs
push
xchg
lods
(bad)
retf
lods
adc
or
pop
adc
das
fist
mov
push
inc
test
xor
out
dec
stos
xchg
mov
ins
aas
push
in
movs
sahf
ins
jmp
adc
mov
mov
(bad)
ins
or
pop
fiadd
jb
dec
mov
jno
adc
jge
fwait
mov
sbb
adc
loopne
add
cmp
adc
enter
jg
cld
fbld
(bad)
sbb
je
push
call
push
and
repnz
jecxz
movs
sbb
jecxz
jno
cmp
loope
es
ins
call
pop
jnp
sbb
xchg
in
cmp
daa
dec
pop
pop
mov
stc
pusha
inc
stos
sub
mov
mov
(bad)
mov
mov
xchg
add
xor
sbb
cdq
cs
push
(bad)
xchg
mov
cld
ds
(bad)
and
xchg
push
arpl
outs
inc
sbb
xlat
cmp
xchg
add
push
(bad)
or
cdq
xor
loop
mov
shl
lods
cmovs
enter
hlt
cli
add
mov
cli
aas
dec
mov
push
ror
mov
outs
cmp
or
mov
or
jmp
inc
lods
aaa
sbb
adc
lods
imul
mov
jecxz
mov
leave
mov
enter
clc
fimul
jnp
(bad)
movs
mov
repz
(bad)
xor
call
sbb
mov
popa
mov
adc
aad
and
adc
ss
xor
mov
xor
cs
mov
push
leave
retf
inc
imul
dec
xchg
loope
mov
dec
rcr
clc
js
jns
and
lods
push
jbe
ss
sbb
mov
mov
mov
int3
pop
jl
adc
add
cs
jo
into
xchg
stos
and
outs
mov
jecxz
mov
push
arpl
dec
arpl
ja
mov
add
cmps
adc
xchg
pop
cmc
push
and
sub
xchg
hlt
out
fnstcw
xchg
xor
mov
pop
jne
out
fidivr
mov
dec
shl
retf
loop
and
mov
cdq
mov
je
mov
push
(bad)
dec
push
mov
mov
ds
imul
mov
jns
sub
les
call
sbb
fist
es
cmp
(bad)
mov
sub
xor
inc
mov
fld
jmp
js
das
push
adc
mov
xor
cmp
jl
xchg
mov
lea
fistp
ja
movs
mov
mov
ds
out
repz
pop
call
inc
je
cmp
jmp
and
mov
xlat
dec
shl
sub
xchg
ja
clc
test
xchg
mov
push
cmp
xchg
adc
inc
xchg
or
mov
inc
sbb
mov
pop
fldcw
xor
xchg
movs
push
enter
outs
(bad)
sbb
pop
call
ret
jle
sub
repnz
inc
(bad)
call
adc
cdq
out
pop
repz
gs
mov
push
fsub
mov
pshufw
xor
mov
movs
pop
mov
int3
sub
test
adc
cmc
jno
jno
mov
pop
outs
les
and
sbb
xor
mov
sub
out
mov
test
stc
sbb
jge
xchg
retf
push
cs
std
cmp
test
lds
pop
dec
mov
add
fs
push
mov
js
sub
out
ret
es
(bad)
push
(bad)
or
cmps
sub
and
test
push
sar
jmp
cld
add
adc
nop
fisttp
les
inc
push
xchg
jns
sar
mov
adc
or
jb
cmp
mov
pop
ret
sar
iret
rol
movs
mov
dec
push
sub
mov
lods
fwait
sbb
adc
jle
jbe
mov
movs
mov
mov
int
out
xchg
repz
mov
cmc
loopne
inc
jnp
adc
inc
push
pop
jb
cmp
imul
call
cmps
add
ret
xchg
outs
in
adc
add
xchg
mov
sar
pop
push
lea
add
data16
out
jmp
test
out
and
cmp
cld
in
sti
stos
fmul
stos
add
inc
mov
inc
jne
push
leave
daa
adc
stos
repz
sahf
into
pop
adc
(bad)
loopne
movs
enter
scas
inc
test
sbb
push
mov
aam
mov
add
jge
imul
or
scas
fsubr
out
mov
add
mov
mov
mov
(bad)
scas
push
mov
jns
sar
sub
xor
push
nop
(bad)
int
dec
movs
es
xor
xchg
jb
pop
fbstp
add
test
mov
inc
jns
inc
das
add
or
popf
pop
sub
adc
dec
jmp
lods
jp
xchg
jmp
jae
movs
mov
pop
test
jg
jnp
je
and
cmp
retf
call
pop
xor
inc
nop
jl
mov
jp
enter
aas
addr16
add
gs
cmp
pop
sbb
xchg
in
inc
in
and
pop
pushf
jp
ds
sbb
and
imul
inc
imul
jo
addr16
mov
xchg
stc
or
daa
xlat
cld
push
mov
adc
mov
popa
or
scas
fwait
add
hlt
fisub
ins
cmps
mov
ret
xor
clc
(bad)
(bad)
sub
mov
in
sub
movd
jg
jns
jno
rcr
std
pop
push
mov
js
sbb
rcr
out
adc
inc
jge
js
xor
jb
das
shl
sbb
jb
popa
cmps
jp
adc
xor
mov
adc
sub
bound
adc
mov
adc
test
fs
mov
jne
jecxz
xchg
jge
lods
mov
dec
fisubr
inc
outs
or
fwait
push
xor
xor
xor
into
and
sbb
jmp
mov
cwde
jbe
cmp
fidiv
nop
mov
push
jnp
push
test
loope
sbb
mov
or
out
push
jb
mov
rcl
push
(bad)
call
lds
add
push
mov
add
fistp
or
pop
loop
push
enter
xchg
sub
(bad)
push
mov
adc
ret
add
js
loop
push
add
push
pushf
cdq
imul
jo
fsubr
shl
sbb
pop
(bad)
jl
and
daa
out
hlt
inc
inc
push
shr
out
dec
sbb
ja
out
lods
or
or
adc
jae
mov
pop
rcl
inc
mov
in
push
mov
dec
in
dec
adc
cwde
xchg
repnz
movs
adc
cdq
retf
jbe
jmp
ja
mov
cmps
lods
mov
xchg
jne
mov
loopne
mov
loop
sbb
push
push
adc
or
lods
cmp
mov
imul
and
adc
lock
imul
mov
inc
mov
(bad)
and
je
inc
pusha
or
push
sbb
es
xchg
ret
cmp
mov
push
xchg
mov
and
(bad)
aam
lods
jle
add
push
(bad)
int
adc
popa
sar
aaa
dec
addr16
or
mov
xchg
add
out
mov
cdq
in
rcl
scas
mov
dec
mov
test
cmp
add
push
cld
jnp
jmp
jg
xchg
push
outs
sub
cmp
add
cmps
push
jmp
aaa
loope
popf
inc
mov
pop
sub
mov
sub
xchg
sub
out
jmp
scas
inc
pushf
pop
jae
jo
fbld
xor
call
xor
jecxz
ins
and
jp
add
dec
or
push
adc
sti
scas
outs
rcl
pop
inc
mov
pop
add
push
inc
push
adc
pop
push
push
dec
fucomip
cwde
push
or
cld
mov
mov
jmp
push
mov
ret
cmp
xor
pop
cmp
cmp
add
hlt
aaa
adc
les
xor
mov
neg
cmp
(bad)
cmp
cmp
jmp
(bad)
push
in
icebp
enter
aam
cmp
push
mov
push
test
mov
ins
into
(bad)
xchg
pop
push
retf
add
fcmovb
push
and
pop
sti
push
out
outs
jle
dec
dec
cmps
fdivrp
imul
test
bound
jae
shr
jnp
loopne
xchg
or
fstp
cmp
ds
lds
pop
retf
inc
aaa
lods
sub
xor
push
ins
imul
push
retf
stos
xor
jmp
aaa
in
mov
add
push
loope
cmp
inc
aad
jae
pop
rcl
imul
ins
adc
rcr
mov
mov
xor
(bad)
mov
outs
sub
sbb
stos
daa
out
cmp
xchg
cmc
sbb
mov
jnp
(bad)
mov
movs
loop
mov
test
cld
push
das
ret
and
mov
lahf
jno
shl
xor
dec
jo
sahf
sahf
jno
dec
add
shl
aas
sbb
cmps
push
in
movs
push
aaa
scas
jl
cdq
adc
jns
pop
inc
sbb
stos
mov
es
mov
fisttp
sub
bound
rol
xchg
test
mov
hlt
mov
pop
loope
pop
adc
xchg
aad
(bad)
in
xor
adc
cmps
retf
ret
add
or
iret
inc
mov
scas
mov
test
call
and
push
or
enter
jmp
popa
sti
push
mov
inc
iret
pop
dec
pushf
pop
popf
test
jnp
movs
ins
pop
je
and
sub
rcr
mov
xchg
sbb
cmc
inc
ret
out
lahf
lods
inc
das
or
ret
cld
xchg
cdq
cmps
jae
push
rol
dec
xchg
and
push
out
je
dec
lahf
jae
mov
push
call
or
shl
fadd
xchg
mov
outs
in
sti
xchg
jl
push
jmp
fimul
imul
mov
inc
push
fadd
call
test
(bad)
sub
das
js
sub
jb
(bad)
lahf
and
iret
popa
mov
fmul
cmp
lea
aad
push
cmps
out
out
pop
sbb
adc
inc
ret
movs
rcl
jmp
(bad)
push
imul
call
nop
(bad)
das
adc
mov
into
outs
and
push
cwde
mov
inc
fild
and
cli
add
add
mov
outs
lods
pop
loope
adc
stos
cld
loop
push
outs
dec
aas
xchg
xchg
rol
jbe
sub
lds
and
pusha
lods
movs
(bad)
retf
cwde
mov
call
sub
stos
jmp
mov
loopne
sub
or
xor
rcl
es
jb
ret
shl
dec
xlat
imul
sar
jg
xor
mov
je
pop
jl
iret
fst
ins
jge
test
outs
add
jno
cmp
in
popf
push
and
jg
stos
(bad)
nop
fbld
pop
mov
out
dec
sti
xor
cmps
push
mov
inc
push
out
lods
test
movs
fisub
adc
(bad)
push
call
pop
aam
icebp
dec
sahf
pop
mov
retf
adc
sub
and
(bad)
call
mov
push
mov
les
test
inc
sbb
pop
movs
test
add
push
cdq
rcl
cmp
sbb
data16
push
(bad)
iret
xor
cs
imul
or
ins
jno
(bad)
xchg
push
aad
mov
xlat
dec
adc
fcom
movs
test
fwait
push
jge
aam
dec
iret
mov
lock
dec
jo
push
add
addr16
push
lds
add
ret
or
push
add
sub
jg
aas
or
and
mov
push
in
rol
pusha
fidivr
sub
fcmovnb
scas
retf
lods
outs
shl
stos
pop
stos
pushf
mov
inc
xchg
pop
mov
aaa
je
stc
jnp
outs
pop
shl
fcmovne
fadd
lea
jge
sbb
into
cmc
xor
mov
sbb
adc
test
push
mov
in
sub
add
(bad)
push
dec
xor
xor
fwait
(bad)
mov
sbb
xlat
inc
aaa
clc
jae
sahf
and
mov
and
push
dec
inc
jo
mov
xor
pop
scas
aas
dec
mov
add
xchg
lea
stos
icebp
jnp
sbb
adc
mov
mov
xor
in
and
pop
clc
mov
xchg
dec
add
fwait
inc
mov
dec
enter
aas
pop
ja
xor
mov
mov
xchg
xchg
(bad)
cmp
(bad)
lods
mov
sahf
xor
pop
push
inc
out
psllq
adc
or
fadd
xchg
es
sbb
push
fldenv
dec
out
scas
xor
addr16
std
(bad)
icebp
enter
or
adc
data16
rol
bound
outs
jecxz
in
pop
jno
xor
jmp
cmp
jp
mov
xor
daa
inc
in
adc
fisubr
pop
call
outs
mov
inc
pusha
shr
in
push
jge
adc
mov
lds
scas
mov
dec
std
cwde
pop
inc
les
mov
and
jmp
fbld
inc
or
push
cmp
mov
shl
arpl
fwait
(bad)
call
addr16
retf
inc
inc
pop
out
xchg
xor
inc
cmps
pop
jg
enter
xor
cwde
(bad)
ret
xchg
push
test
push
inc
adc
jns
sbb
in
enter
test
pusha
in
lds
sar
mov
mov
mov
imul
push
leave
enter
pop
neg
leave
out
test
cdq
adc
jle
hlt
scas
add
imul
loope
lods
or
stos
and
mov
stos
jmp
mov
test
adc
mov
dec
in
cmc
test
push
popf
enter
pop
hlt
sub
dec
cmp
lock
lea
int3
clc
pushf
cwde
test
test
out
adc
push
fld
mov
dec
into
cmp
jle
sti
cmp
jp
lea
xor
pop
mov
test
retf
dec
mov
daa
mov
clc
inc
lods
stc
adc
xor
fiadd
cld
and
(bad)
in
les
push
inc
and
iret
rcl
mov
jg
jl
xor
pop
mov
and
dec
or
and
mov
out
ja
fucom
arpl
idiv
jmp
leave
and
jl
inc
lods
xor
dec
dec
fs
xchg
adc
push
repz
sahf
dec
ss
adc
retf
jmp
cmp
pop
dec
mov
ins
jmp
jbe
or
or
xchg
popf
mov
arpl
sbb
js
aaa
mov
not
fucomip
jno
sub
ins
xchg
xchg
(bad)
mov
mov
mov
in
xchg
out
mov
aam
jae
das
movs
aas
cmp
ror
jnp
inc
test
dec
outs
mov
and
mov
ds
pop
pop
jle
fmul
xor
sub
(bad)
pop
leave
mov
cwde
ja
xchg
icebp
pop
ja
adc
loopne
sbb
dec
arpl
sbb
sti
add
stos
pop
cmp
adc
cmp
sub
jg
into
cli
add
jns
dec
fcomp
clc
sahf
or
aaa
retf
mov
out
sub
add
jne
add
fdivr
call
sbb
daa
int3
and
cmp
xchg
mov
stos
sbb
sub
call
shl
mov
les
arpl
xor
xor
ins
jmp
xlat
mov
repz
mov
mov
stos
inc
fild
arpl
shl
iret
ins
scas
ret
and
imul
sub
mov
popf
cbw
retf
sahf
mov
inc
xchg
mov
cmp
mov
mov
pop
xchg
push
call
sub
push
jmp
sbb
ins
call
test
jb
pop
xchg
mov
data16
jno
nop
test
js
or
aas
sub
mov
cs
or
jbe
add
xor
dec
pshufw
dec
cli
xlat
mov
lds
pop
scas
call
aam
stc
mov
jno
xchg
sbb
(bad)
mov
xchg
push
inc
mov
jb
inc
or
in
loope
loope
add
jno
and
jns
ficom
scas
jmp
jmp
jae
cmp
movs
(bad)
outs
repz
into
cmp
mov
mov
pushf
cmp
cmp
es
mov
rcr
ret
mov
mov
call
pusha
mov
inc
loopne
bound
inc
push
xor
(bad)
shr
data16
dec
mov
movs
jmp
cmp
jno
call
fadd
add
mov
fistp
icebp
das
outs
or
xor
adc
inc
fidivr
push
sbb
sti
xchg
(bad)
in
sbb
jb
mov
jbe
cmp
sbb
mov
bound
test
inc
call
out
daa
jmp
jo
and
sar
int
inc
int3
ds
add
aas
jns
ret
in
pop
or
xor
xlat
retf
cld
popf
lock
mov
pmulhw
mov
jno
loope
jae
out
movs
cmp
mov
jg
push
add
scas
cmp
mov
mov
add
test
jg
icebp
inc
push
fadd
int
adc
das
fmul
repnz
xor
hlt
or
jmp
dec
jo
ss
repz
sahf
jmp
scas
sub
inc
mov
enter
pop
mov
sub
xchg
cmc
sub
int3
jnp
jge
test
sbb
rol
and
sbb
push
stc
or
out
loope
mov
xor
sub
mov
in
addr16
(bad)
dec
std
dec
cmp
sbb
mov
adc
(bad)
and
mov
fdivr
push
nop
push
sub
out
xchg
sub
imul
push
inc
(bad)
arpl
test
xor
js
and
xchg
push
fsubr
or
jne
dec
sbb
mov
or
adc
js
xchg
jb
into
pop
and
pop
data16
xor
pop
or
ins
mov
dec
mov
mov
call
fcmovbe
dec
or
and
cmc
jbe
popf
jo
mov
aas
imul
addr16
js
jo
cmp
stos
shr
lods
add
cli
jle
outs
inc
retf
je
leave
retf
or
ins
adc
hlt
and
(bad)
dec
lea
dec
test
jb
mov
or
outs
inc
outs
(bad)
cmps
aaa
(bad)
cmp
sbb
cli
cmp
(bad)
addr16
inc
push
rcr
push
call
jge
xlat
repnz
pop
stos
cmps
add
dec
std
xor
add
xchg
push
shl
cmps
mov
push
adc
dec
lods
dec
push
dec
loope
ret
movs
jl
loope
cdq
test
mov
push
(bad)
mov
or
aad
out
test
add
dec
stos
cmp
outs
outs
aam
cmc
xchg
push
xlat
retf
adc
cwde
xor
push
or
cwde
sbb
cmp
fstp
es
xchg
inc
mov
push
dec
movs
fdiv
mov
dec
dec
and
push
rcl
popa
lods
rcl
lds
imul
add
shr
adc
sahf
test
loop
lahf
into
pop
outs
in
in
sahf
push
push
dec
call
mov
arpl
jecxz
xchg
pop
outs
inc
outs
mov
in
mov
outs
hlt
dec
pop
dec
stos
shl
jmp
and
sar
test
xor
hlt
cli
mov
pop
enter
push
pop
xchg
sub
sub
cmp
or
add
ins
jae
test
and
lahf
pop
and
sub
aam
xchg
les
cwde
sub
pop
ret
or
sub
pop
add
dec
shr
scas
ds
inc
mov
ror
mov
push
sub
xor
ins
sti
or
add
xchg
cmc
cwde
cmps
sub
mov
(bad)
mov
int
ds
cmp
adc
(bad)
retf
test
adc
sbb
(bad)
jo
sub
and
pushf
sub
retf
stos
jo
mov
xchg
mov
popa
test
retf
mov
repnz
or
jne
(bad)
pop
ins
fs
pushf
(bad)
call
mov
and
cwde
add
nop
mov
pushf
and
lods
cdq
adc
cli
imul
sub
sub
cld
jnp
ja
xchg
dec
mov
cwde
mov
or
cmp
and
cmp
and
je
push
data16
add
push
or
in
or
out
fiadd
mov
ins
mov
daa
fstp
aam
nop
gs
mov
nop
sar
jecxz
jae
mov
pop
mov
inc
dec
xchg
adc
iret
out
mov
aam
sahf
add
mov
scas
mov
mov
push
ret
ds
sahf
or
sbb
inc
sub
ficom
bnd
jmp
or
div
pop
inc
stc
cs
mov
xchg
mov
ret
in
mov
dec
and
popf
cmp
fwait
ins
or
imul
cmp
rcr
scas
out
ret
mov
out
enter
xor
pusha
cmp
jmp
push
inc
aas
add
dec
lods
jecxz
test
xchg
loopne
dec
in
add
shr
jnp
imul
sub
cmps
mov
mov
mov
mov
ins
call
popa
sub
mov
cmc
jo
sar
sti
cmc
hlt
mov
push
inc
jmp
mov
out
(bad)
jl
idiv
in
rcr
xor
nop
popf
dec
icebp
cs
call
pusha
fs
push
xor
(bad)
repz
jmp
fcmovnbe
dec
mov
and
mov
and
outs
sti
fwait
aad
fdivr
push
jl
ret
cwde
xor
sbb
sbb
je
leave
sbb
jne
inc
loopne
icebp
imul
(bad)
and
cmps
mov
ja
inc
dec
retf
cld
push
jmp
pop
mov
ds
es
mov
lea
inc
sub
adc
(bad)
xchg
cmps
pop
repnz
or
add
add
push
cmp
test
add
popf
popa
(bad)
push
ss
jmp
mov
(bad)
mov
or
imul
or
cmp
imul
dec
fcmovnbe
push
mov
mov
xchg
dec
in
aas
daa
xor
(bad)
sub
les
repz
scas
push
pop
jns
push
pop
loope
(bad)
jge
ja
std
ja
pop
jae
xor
and
ficomp
cwde
dec
shr
ret
dec
mov
outs
jae
jmp
mov
test
in
xchg
fsubr
add
hlt
imul
lods
mov
adc
push
adc
imul
push
(bad)
sti
xchg
(bad)
push
pop
inc
add
test
stc
jne
div
push
sbb
movs
lds
shr
jbe
popf
pop
mov
loopne
pushf
mov
fcomp
sbb
dec
add
in
xchg
inc
or
aaa
data16
xchg
fld
and
jge
les
xor
mov
cmp
outs
cmp
or
or
repnz
(bad)
cmp
das
stc
xchg
pop
and
cmp
pop
fldenv
sti
mov
fimul
inc
adc
pop
fs
inc
cmp
xchg
stos
mov
mov
fcom
ins
jb
imul
push
sub
(bad)
fidivr
push
fstp
fisubr
icebp
pop
add
adc
das
test
push
es
(bad)
mov
or
push
fs
adc
mov
add
and
movs
dec
cmp
daa
push
movs
fwait
inc
aam
push
and
leave
dec
hlt
inc
xor
inc
ret
fnstsw
inc
rcl
mov
sbb
int3
sub
sbb
xor
fist
push
inc
and
loopne
(bad)
mov
inc
ret
mov
repnz
call
mov
xor
loop
js
sub
(bad)
fsub
push
cmp
push
enter
das
test
es
xlat
fcom
inc
xchg
and
ins
xchg
push
xchg
dec
push
test
or
add
loop
out
js
movs
(bad)
ins
leave
cdq
ja
repz
je
repnz
ret
and
lods
sub
sbb
ret
and
scas
mov
out
mul
popa
add
mov
inc
cmp
pusha
gs
sbb
push
data16
sub
cmp
stos
adc
pop
xor
xor
dec
cld
xor
cmc
jno
leave
rcl
fmulp
add
dec
lods
hlt
inc
in
mov
mov
imul
and
ss
icebp
or
(bad)
mov
xchg
pop
out
jmp
sbb
cmp
or
pusha
xchg
push
outs
add
sub
pop
scas
mov
test
loop
repz
jge
sub
popa
enter
hlt
jne
dec
mov
sar
inc
ret
adc
aaa
bound
inc
push
sbb
mov
pop
and
and
add
jae
and
rol
sub
dec
xlat
cli
push
mov
cmp
ror
push
aam
sub
jg
out
mov
ret
test
jmp
in
test
mul
inc
ds
aad
xor
sbb
cmps
cmp
or
xor
je
bound
push
movs
cmp
imul
dec
add
out
push
(bad)
ret
retf
out
jle
daa
imul
js
mov
inc
pop
(bad)
pusha
test
ficom
test
mov
dec
cmps
sbb
push
push
shl
je
movs
cmc
into
xchg
jbe
sbb
sbb
jnp
(bad)
mul
pop
cmps
ins
fstp
mov
push
outs
mov
test
shl
aas
gs
push
(bad)
sar
mov
xchg
pop
shr
xchg
xor
push
mov
xor
or
lods
mov
iret
xchg
adc
jae
and
mov
and
mov
fs
cmp
cmps
loopne
push
movs
push
mov
(bad)
std
xchg
icebp
mov
fs
lahf
sbb
shr
sbb
pusha
add
add
jno
adc
or
in
sub
test
adc
cmp
xchg
adc
xchg
cwde
(bad)
pop
idiv
ins
mov
inc
ja
dec
push
mov
jge
bound
mov
mov
push
xchg
xchg
lock
fst
mov
ret
xor
clc
fs
in
mov
retf
popa
xor
jl
aaa
cmps
and
call
cmp
loopne
xor
jge
call
test
push
inc
imul
outs
jb
add
inc
cmp
cmp
int
popf
(bad)
jmp
das
mov
mov
stos
test
(bad)
mov
fimul
mov
jo
sub
or
or
dec
cmp
rcl
xlat
dec
ins
ins
jp
aas
(bad)
mov
add
cmps
or
inc
push
bound
cdq
jmp
dec
aaa
adc
dec
sub
in
cmp
call
popa
mov
mov
in
test
mov
mov
(bad)
jg
mul
jnp
inc
mov
fidivr
outs
inc
out
xchg
inc
sar
lahf
mov
lods
outs
jle
fild
xor
sahf
xchg
xor
jg
idiv
(bad)
cmp
jle
cmp
scas
cmp
int3
push
test
jl
sbb
mov
inc
sub
test
cmp
push
stc
sub
push
mov
outs
test
xchg
in
and
nop
shr
popf
mul
stos
stos
and
aam
push
ins
inc
xchg
and
inc
mov
adc
(bad)
xchg
leave
cld
mov
imul
cwde
cmp
pop
les
cmp
out
(bad)
call
sbb
push
xchg
pop
inc
sahf
lea
adc
dec
and
imul
sbb
add
add
sbb
pop
pusha
sub
xlat
adc
pop
mov
jns
inc
mov
push
jmp
cmc
sub
dec
(bad)
xor
jae
push
(bad)
ins
adc
mov
(bad)
jbe
adc
daa
js
cs
into
aas
std
jmp
push
pop
push
mov
push
add
ins
mov
mov
mov
jo
(bad)
in
dec
pop
pop
jae
inc
pop
dec
fwait
iret
xchg
dec
xchg
stos
sub
jbe
test
loop
and
mov
ret
pop
imul
icebp
stc
cld
(bad)
out
pop
imul
or
push
mov
or
into
sub
xchg
add
fist
fadd
mov
or
add
mov
xchg
fs
mov
stc
loope
fimul
adc
imul
sbb
ficomp
cmp
repz
xor
(bad)
dec
rol
lds
imul
adc
cmp
sbb
adc
or
or
mov
aaa
dec
push
sub
ins
push
dec
add
push
cmc
stos
mov
mov
and
enter
sbb
sub
mov
inc
cmps
inc
mov
xlat
in
cwde
out
or
xchg
jae
mov
sti
sbb
scas
cmp
call
or
xchg
sbb
push
ja
push
fild
xchg
dec
cmp
xchg
mov
stc
push
adc
mov
or
mov
retf
xchg
aas
aam
pop
int
push
sub
mov
dec
test
sbb
outs
mov
inc
sbb
sbb
add
std
sub
test
dec
enter
pop
add
xchg
(bad)
clc
cmps
ja
pop
or
out
mov
ds
cmp
cmp
and
add
pop
sbb
and
mov
retf
ins
dec
mov
(bad)
mov
fldenv
or
shr
cdq
pushf
mov
call
daa
mov
jb
push
sbb
dec
inc
cmp
xchg
retf
in
scas
daa
imul
int3
or
xchg
(bad)
dec
mov
pop
js
jp
jo
dec
mov
fsubr
lahf
jmp
push
jns
mov
lahf
ss
cs
xor
sbb
outs
ret
dec
test
test
or
mov
push
fdiv
inc
dec
and
push
outs
repnz
add
push
cld
pop
retf
adc
xchg
stos
ins
mov
push
pop
pop
sbb
(bad)
fcmovb
xor
in
sub
mov
lods
pop
push
xor
sbb
add
into
sub
add
or
adc
idiv
jae
jp
jecxz
into
adc
rcl
xor
mov
xchg
movs
das
mov
clc
xchg
aam
movs
xchg
ins
sti
xor
bound
xor
xlat
pusha
arpl
sub
leave
xor
nop
bsr
lods
pusha
xchg
clc
or
jp
(bad)
fnstsw
mov
lods
sbb
sub
aaa
cs
int3
inc
call
lock
mov
pop
loopne
sar
stc
jmp
mov
repnz
pop
mov
sar
xchg
aaa
fld
cmps
shl
jmp
sbb
mov
mov
pop
mov
ins
push
adc
push
mov
pusha
imul
daa
pop
and
bound
push
jg
pop
out
addr16
cmp
jl
loope
arpl
add
inc
push
movs
xchg
pop
xor
ins
and
add
sbb
cld
xchg
cdq
call
or
mov
lahf
sub
adc
inc
push
push
fisubr
mov
outs
movs
jae
daa
jl
mov
mov
jg
leave
jne
in
movs
push
mov
inc
retf
jg
std
mov
stc
mov
mov
out
loopne
add
scas
or
es
dec
pop
and
scas
aad
sbb
test
stos
jb
stos
int
sbb
aaa
add
jmp
cwde
inc
push
sti
ins
ret
out
daa
sbb
push
stc
fs
and
lds
stos
out
sbb
jge
xchg
xchg
int
(bad)
adc
add
pop
xor
mov
fnstenv
lods
adc
adc
mov
jae
out
inc
repz
mov
jmp
or
vucomisd
mov
je
or
fwait
adc
(bad)
std
aas
xchg
or
xor
in
pop
adc
(bad)
iret
and
sbb
adc
or
ins
fwait
mov
xchg
(bad)
imul
fwait
inc
dec
not
enter
mov
sar
and
fstp
mov
jno
test
mov
imul
pop
dec
or
and
in
push
add
fstp
rcl
push
or
ror
int3
pop
cmp
adc
and
and
(bad)
jno
mov
stos
dec
mov
add
lea
(bad)
fcomp
adc
jge
push
shl
into
out
xlat
addr16
xchg
dec
mov
cdq
movs
ins
(bad)
mov
fcmovbe
push
data16
inc
stos
mov
fimul
aaa
xchg
xchg
das
bound
mov
xor
jecxz
(bad)
push
cld
xchg
and
or
adc
inc
in
and
or
mov
movs
cdq
nop
clc
push
cmc
shl
aaa
add
in
cmp
xor
ret
cmps
(bad)
cmc
fdivr
pop
inc
outs
or
xchg
mov
cmp
jnp
sub
(bad)
(bad)
popf
mov
cdq
push
xor
jns
dec
sub
push
xchg
mov
inc
aad
adc
aaa
stos
mov
ja
sub
test
(bad)
jg
dec
mov
jle
neg
mov
rol
paddsb
or
sub
test
add
inc
aam
adc
mov
idiv
sub
pop
inc
icebp
push
xor
mov
nop
call
or
cmc
inc
movs
push
loop
add
add
cwde
cmps
pop
mov
dec
jbe
jno
mov
jmp
adc
cmp
(bad)
das
xor
int
xchg
sub
and
popa
xchg
stos
fld
push
(bad)
push
retf
sub
and
push
and
mov
mov
bound
movs
adc
push
test
xor
jo
int3
xchg
sbb
pop
mov
mov
gs
ret
push
(bad)
(bad)
jb
mov
push
inc
mov
dec
inc
aad
stc
mov
div
enter
mov
jmp
xchg
inc
je
sub
xchg
pop
shr
outs
es
mov
dec
mov
xchg
call
mov
je
mov
sbb
cmp
cmp
leave
jne
cld
test
repz
aam
(bad)
stos
mov
aas
mov
ins
xor
sbb
fwait
push
xor
cmp
inc
cmc
jge
ja
sbb
push
dec
mov
sbb
out
sahf
rcr
sub
mov
fcomp
sub
mov
and
int3
or
in
or
int
in
add
ret
loope
push
and
fs
adc
repz
(bad)
jp
mov
dec
cmovbe
adc
sbb
scas
mov
aam
call
pop
push
fisttp
neg
and
test
sbb
sbb
es
fchs
jecxz
in
stos
inc
sbb
push
into
xchg
shl
xor
(bad)
xchg
mov
movs
jbe
loopne
xor
test
xchg
ror
sub
mov
test
mov
pop
xchg
mov
idiv
sbb
(bad)
mov
mov
mov
jecxz
int
mov
movs
jge
data16
lahf
mov
add
mov
sub
add
inc
and
cdq
(bad)
pop
xchg
mov
call
or
loopne
(bad)
mov
push
sub
call
pop
add
retf
ds
add
out
(bad)
in
push
push
or
vpshufd
dec
mov
stc
sub
xor
add
ins
mov
xchg
and
cld
sar
mov
inc
and
push
jne
call
mov
sub
pop
dec
repz
mov
add
pop
cmp
sbb
xor
add
xor
inc
push
xor
nop
inc
popf
add
mov
sub
and
pop
fiadd
clc
mov
pusha
dec
pop
jns
hlt
shl
or
(bad)
jge
(bad)
stc
test
jae
sub
pop
js
inc
into
inc
pop
mov
xchg
icebp
sbb
add
push
adc
mov
test
and
jg
or
pop
mov
arpl
test
mov
(bad)
dec
mov
add
rcr
add
int3
inc
addr16
sub
inc
movs
aam
xchg
ror
out
sub
inc
jecxz
(bad)
mov
sub
js
cmp
or
movs
movs
inc
adc
lahf
out
sbb
jmp
mov
fst
mov
or
jecxz
or
push
sbb
push
lss
aam
cmp
(bad)
pop
mov
jne
mov
adc
xchg
push
fild
sbb
fsub
out
stc
cwde
sbb
mov
hlt
pop
mov
retf
repz
loop
(bad)
jo
test
loopne
mov
add
jle
dec
adc
imul
xor
push
inc
lds
das
gs
pushf
stos
mov
sar
int3
jp
fs
or
jnp
push
add
aad
jmp
cwde
cmp
pop
mov
neg
aad
xchg
pop
and
call
jnp
push
inc
mov
push
mov
lock
xor
push
mov
sbb
and
xor
mov
pop
inc
ret
cwde
add
dec
xlat
ds
stc
or
ja
sub
pushf
fisub
dec
mov
xchg
push
inc
or
stos
jns
sub
cmp
jb
pop
sub
fst
(bad)
mov
stc
cmp
cwde
and
xor
mov
pop
retf
loop
je
mov
adc
stc
sbb
int
fs
mov
(bad)
dec
cmp
push
inc
xchg
push
fxch
sub
sbb
push
jecxz
jb
scas
mov
sub
pushf
(bad)
jg
cmps
dec
outs
pop
scas
das
jl
sbb
ds
push
rol
inc
mov
cli
dec
add
mov
js
rcl
pusha
jg
daa
out
pusha
cld
imul
sbb
popa
out
sub
pusha
mov
scas
sub
xor
add
cmps
or
mov
cld
mov
xchg
arpl
fcomi
inc
mov
adc
sub
sbb
clc
or
fs
ins
xchg
push
mov
gs
int
cmps
cmovno
sub
shr
dec
push
adc
and
rcl
ss
jbe
fnsave
mov
pop
test
les
jne
adc
jp
or
mov
cmp
cmp
push
lea
(bad)
shl
out
push
push
and
dec
dec
xchg
jp
fcom
and
int
loope
fucomip
cmp
pop
aam
push
outs
add
add
inc
mov
mov
sub
stos
retf
xor
icebp
inc
ja
jbe
push
(bad)
in
mov
push
idiv
jo
pop
out
clc
test
mov
mov
and
dec
cmp
jle
aas
ret
mov
(bad)
push
sub
retf
scas
lds
xchg
jg
fild
cmps
lods
adc
jns
lahf
jmp
mov
stos
hlt
aam
mov
jecxz
mov
mov
jmp
add
dec
jns
adc
pop
push
add
fcomp
add
int
div
mov
icebp
dec
or
mov
jae
push
add
int3
add
xlat
mov
cmps
ret
pop
fadd
sub
mov
adc
test
push
pop
cmp
leave
adc
in
adc
and
xchg
cmp
call
nop
push
jmp
(bad)
mov
jb
jg
sub
or
fiadd
jle
lods
and
mov
mov
sbb
lock
retf
push
jmp
xor
jns
xchg
hlt
push
nop
mov
ficom
stos
sbb
ret
iret
test
cmp
rcl
or
ss
add
lock
scas
mov
and
retf
int3
sbb
fst
pop
xor
stos
int
xor
clc
outs
arpl
adc
xor
cld
pop
push
mov
hlt
push
pushf
add
push
adc
cld
in
dec
and
xchg
nop
(bad)
sar
out
jmp
sti
cmps
lods
dec
cmc
ret
in
cld
int3
(bad)
ins
repz
icebp
jmp
add
cmp
xchg
das
and
sub
xlat
out
scas
or
mov
shl
adc
lea
das
cmc
shl
adc
adc
scas
jecxz
jne
xchg
aam
stc
mul
mov
loope
fwait
jge
scas
xor
div
and
mov
out
cmps
das
aam
jmp
test
xchg
lods
dec
pop
iret
pop
cmps
push
test
mov
and
cmps
int3
sbb
stos
push
pop
jb
push
adc
add
in
mov
int
add
test
xor
or
adc
cmps
and
add
int3
push
lahf
or
push
fs
sub
call
enter
or
xchg
ins
(bad)
int3
xchg
int3
pop
push
sbb
mov
mov
data16
mov
push
test
aas
and
xchg
imul
mov
adc
or
xchg
ss
push
imul
and
(bad)
rcr
pushf
adc
jns
and
aad
mov
mov
mov
(bad)
xchg
or
dec
ja
mov
test
fiadd
scas
sub
or
lods
pop
mov
(bad)
movsx
and
aas
pop
push
(bad)
aas
aad
push
aaa
icebp
rcr
lods
and
xchg
dec
mov
scas
jp
mov
nop
mov
lods
aam
scas
rol
adc
inc
rcl
cmps
jmp
sbb
ds
into
and
dec
and
mov
adc
sub
mov
mov
or
sub
inc
stc
jb
cmp
mov
mov
sub
leave
add
stc
inc
bound
pusha
das
cmp
mov
in
popf
call
mov
das
icebp
sub
mov
inc
(bad)
cmc
fldenv
adc
mov
sub
enter
test
imul
adc
das
ds
sub
retf
fdivr
dec
xchg
movs
addr16
mov
pop
out
mov
adc
mov
cmp
out
icebp
pop
jl
push
xor
push
int
das
std
movs
(bad)
cmp
jmp
dec
cmp
cmp
jns
pop
inc
in
push
mov
dec
or
push
(bad)
add
or
scas
lea
xchg
mov
pushf
dec
fwait
xchg
aad
mov
push
push
sbb
mov
lods
(bad)
sbb
and
jmp
push
(bad)
nop
inc
xchg
das
mov
js
(bad)
stc
sbb
mov
ins
cmp
sub
leave
mov
mov
add
shr
mov
repz
popa
jb
pop
inc
and
add
ds
and
lds
in
hlt
mov
xchg
sbb
jg
mov
inc
dec
fwait
dec
or
xor
test
mov
test
repnz
mov
not
in
loope
mov
pushf
xor
mov
shl
mov
and
mov
mov
xchg
repz
jb
(bad)
sti
dec
xchg
and
(bad)
dec
daa
(bad)
xchg
mov
jns
add
fs
(bad)
xor
jl
outs
mov
inc
mov
mov
mov
out
mov
and
jmp
xor
sbb
xchg
int3
test
mov
mov
jmp
sahf
std
inc
push
jmp
or
jmp
xchg
or
xchg
mov
adc
inc
mov
inc
stos
xlat
hlt
and
mov
push
jge
xchg
mov
movs
aad
cs
sbb
int3
loope
in
or
mov
mov
mov
dec
nop
add
mov
jo
fdiv
test
inc
adc
stos
nop
test
jmp
retf
mov
mov
pop
ret
mov
in
xchg
or
lahf
mov
test
ins
and
(bad)
jns
inc
aam
popa
rol
fimul
or
stos
rcr
xchg
iret
pop
add
sbb
xchg
pop
call
jmp
add
cli
pop
push
mov
xor
and
inc
sbb
or
mov
out
imul
cmp
clc
xor
sbb
fmulp
mov
cwde
icebp
ja
xchg
lea
fisubr
inc
imul
sub
cmps
jmp
aas
pop
mov
pop
hlt
das
stc
out
mov
adc
mov
mov
movs
sub
cmp
or
dec
adc
and
ss
data16
es
leave
or
cmps
inc
scas
inc
clc
and
add
xchg
pop
mov
push
or
out
push
nop
js
xchg
xor
(bad)
in
mov
rol
sub
add
lods
dec
call
fsub
sub
popf
push
cmps
ins
mov
push
clc
int
jmp
push
push
add
movs
fsub
sbb
into
mov
ds
push
pop
sbb
loopne
outs
or
sbb
sbb
jp
push
sub
or
sub
sub
lods
push
xor
push
xchg
(bad)
bound
out
sub
fdivr
dec
(bad)
pop
sbb
scas
xor
xchg
add
movs
rcr
enter
ins
mov
ins
pushf
adc
ds
enter
into
sbb
je
test
out
nop
xlat
(bad)
and
call
jmp
(bad)
retf
push
mov
cmp
lds
mov
xchg
lods
adc
hlt
pop
ins
(bad)
adc
mov
call
push
or
jg
(bad)
daa
dec
in
or
lock
cmps
dec
jns
cli
loopne
sub
addr16
ror
jns
addr16
jmp
adc
adc
sub
gs
repnz
jmp
or
jmp
daa
popa
and
cmp
in
mov
jge
xor
stc
push
pop
test
mov
out
pop
adc
loopne
test
cs
push
nop
aas
add
fist
inc
jmp
fisttp
pop
(bad)
jl
or
rcl
pop
push
xlat
add
push
sahf
lds
out
ins
and
loope
arpl
aad
mov
cmp
mov
inc
out
mov
(bad)
repnz
xor
add
lahf
mov
clc
jne
sub
int
push
push
pop
nop
and
(bad)
retf
push
jecxz
jbe
das
setb
fmul
xor
fild
sub
cmp
ret
dec
loopne
push
cmp
daa
mov
ret
(bad)
(bad)
repz
scas
cmps
mov
jnp
arpl
popa
(bad)
xchg
aad
fdivr
(bad)
(bad)
rol
and
add
adc
adc
xor
jp
cmp
(bad)
fwait
lods
out
dec
test
sbb
inc
jne
aad
repz
xchg
cs
mov
mov
sbb
ror
into
jnp
and
sbb
pop
ss
movs
or
inc
lds
and
cli
or
inc
mov
retf
jge
lods
mov
(bad)
jge
dec
sub
dec
push
jmp
js
sahf
xchg
or
sub
add
das
mov
not
(bad)
cld
dec
xchg
test
lods
xchg
mov
dec
lods
outs
xor
js
lea
jae
jbe
aad
and
xor
jl
pop
fist
bound
in
fnstcw
pop
out
add
dec
fidivr
gs
mov
js
or
int3
xor
xchg
sub
jb
sbb
xor
(bad)
pop
scas
out
mov
jmp
mov
movs
gs
stos
xor
mov
adc
mov
adc
fbstp
sbb
pop
enter
shl
in
inc
daa
movs
rcr
sahf
fnstenv
xchg
mov
mov
sbb
stos
jge
pop
fcmovnbe
jmp
retf
pop
loop
cmp
jmp
je
mov
pop
mov
inc
sbb
lods
mov
mov
jmp
pop
mov
push
xor
and
iret
cmp
out
lods
mov
loopne
addr16
mov
sub
int
ret
adc
les
out
inc
lds
fmul
sar
sub
pop
call
and
sub
dec
xor
xor
jp
xor
cmps
push
push
mov
mov
and
mov
call
push
call
cmp
jns
and
adc
or
lock
adc
rcr
mov
sub
leave
pop
add
adc
xchg
and
mov
xchg
int3
js
pusha
dec
repz
dec
jno
scas
dec
mov
add
mov
call
lea
sub
sar
fiadd
loop
cmp
or
pop
call
jnp
xor
add
jl
dec
jle
mov
sbb
repnz
in
push
jecxz
or
movs
jo
adc
mov
and
lea
ss
and
(bad)
stos
movs
pcmpgtw
mov
push
fidivr
jmp
cmps
and
push
(bad)
ds
int3
es
fnstsw
imul
fsubrp
dec
out
or
fmul
stc
jno
cli
stc
in
shl
xchg
inc
jo
call
xor
scas
xor
add
nop
out
cmp
fs
jecxz
and
movs
cdq
dec
aam
mov
stos
cmp
(bad)
out
xchg
add
or
dec
jmp
cwde
int
add
mov
mov
es
clc
add
fisub
sub
and
push
repnz
(bad)
cmc
repz
or
inc
or
cli
shl
pop
stc
(bad)
xlat
jne
cld
int3
neg
sub
mov
xor
push
loop
dec
and
ds
sub
push
inc
shl
cmps
or
jns
inc
sti
rcl
int
add
mov
aas
push
imul
adc
push
mov
loope
movs
inc
xchg
sbb
or
loop
ret
iret
add
(bad)
retf
sub
inc
inc
bound
aas
push
sbb
pop
shl
fadd
ds
repnz
dec
stos
jno
push
inc
rcr
rol
pop
stos
cmp
xlat
mov
and
stos
imul
jge
adc
adc
(bad)
sub
pop
ret
cmp
outs
and
add
cmp
or
and
mov
sub
mov
inc
fld
pop
sbb
lahf
(bad)
xlat
cmc
xchg
xlat
addr16
mov
or
sub
sub
push
xor
ficomp
and
add
arpl
xchg
mov
leave
mov
xchg
sub
xchg
or
sub
sub
scas
xchg
jmp
loopne
pop
imul
call
stc
mov
popf
mov
pop
push
mov
adc
push
in
or
stos
bound
xor
into
xor
imul
push
add
push
repnz
mov
fiadd
clc
jmp
mov
xchg
popa
mov
lods
mov
sub
stos
add
(bad)
sub
leave
inc
in
jge
mov
dec
aad
std
cwde
mov
mov
and
loop
mov
pop
out
inc
fsubr
imul
push
xor
jge
xor
loope
js
cs
bound
call
cli
(bad)
pop
cmps
adc
into
int3
test
jbe
mov
jecxz
mov
nop
adc
xor
fidivr
pop
or
loopne
mov
sub
outs
xchg
lock
xor
mov
mov
es
dec
jo
sahf
movs
dec
add
daa
adc
es
pusha
cdq
mov
or
push
adc
pop
pop
xchg
inc
lods
jp
call
ret
sbb
dec
out
lods
dec
les
ret
adc
or
rcl
or
or
xor
or
inc
mov
mov
loope
push
lahf
or
loop
inc
hlt
inc
push
mov
sbb
pusha
xchg
in
sub
or
add
dec
rcl
jns
int3
out
sub
add
sahf
pop
dec
cmc
ja
test
movs
ffree
xchg
mov
jae
jg
mov
lahf
rcl
sub
jno
xor
cmp
addr16
cmp
iret
fwait
dec
push
int
mov
(bad)
xchg
aam
mov
in
or
in
jae
add
cdq
aam
mov
je
in
in
imul
movs
mul
stos
hlt
dec
and
pop
push
retf
mov
pop
ss
adc
mov
shr
sbb
push
sbb
imul
sbb
call
add
inc
ret
repnz
test
mov
mov
call
adc
push
rcl
and
hlt
xor
cli
inc
xor
add
pop
imul
pop
xor
jo
in
cmp
xor
adc
shl
daa
aaa
jno
and
in
into
es
jne
jp
ret
lahf
push
push
clc
aam
or
loope
add
mov
jae
outs
fistp
in
pop
xor
inc
dec
xor
mov
jns
mov
xchg
in
mov
jno
mov
sbb
inc
xchg
mov
ins
iret
jge
sub
outs
jbe
mov
nop
adc
add
movs
call
mov
js
push
jl
cwde
cs
(bad)
mov
bound
rol
and
ret
mov
test
xlat
push
ret
jp
push
stos
fld
mov
scas
jg
jmp
jno
xor
imul
loopne
push
xor
fld
add
inc
adc
sahf
cmp
rol
pop
dec
sti
mov
jp
ins
(bad)
daa
jnp
das
adc
daa
mov
test
mov
arpl
adc
mov
gs
mov
cmp
xor
popa
sbb
movs
push
sbb
dec
pusha
lds
(bad)
popa
and
or
js
fucomip
jbe
rol
lea
xor
or
pop
sar
nop
(bad)
out
jge
push
jo
data16
fsubr
daa
push
push
or
stos
int3
inc
dec
lock
das
loope
pop
lahf
inc
push
in
push
xchg
push
add
or
add
add
add
pop
xchg
adc
das
mov
outs
xchg
adc
xchg
nop
dec
into
aaa
push
fwait
adc
mov
out
inc
mov
test
and
or
hlt
imul
push
mov
loope
add
fidiv
lods
jmp
pop
aad
mov
mov
and
push
test
pop
pop
adc
jno
lea
add
mov
dec
push
inc
sbb
(bad)
js
cmp
mov
inc
jne
sub
sub
aaa
push
cmps
dec
xchg
adc
loopne
(bad)
mov
and
ss
iret
mov
cmp
aas
jbe
cmp
stos
pop
ja
adc
add
rol
push
dec
or
ficomp
xor
lahf
jp
bnd
xor
les
aam
push
repz
(bad)
jle
fwait
push
daa
pop
jns
jnp
adc
dec
das
inc
adc
jmp
or
xor
shl
arpl
test
loop
loope
inc
call
fcomp
fisttp
in
sar
push
xor
inc
mov
jo
imul
aam
adc
sub
je
retf
xor
pop
sbb
xor
jmp
test
mov
ret
jo
popa
mov
mov
lds
dec
dec
in
(bad)
adc
mov
(bad)
xchg
stos
repnz
(bad)
in
jp
jmp
inc
jge
lods
pusha
fld
jb
call
mov
and
jmp
dec
xchg
adc
push
mov
ret
push
sbb
lods
push
imul
(bad)
in
pop
dec
out
cld
aam
jmp
mov
lods
aas
(bad)
mov
push
or
xchg
mov
and
jnp
xchg
std
adc
pop
dec
cwde
data16
adc
jge
shl
mov
jl
sbb
addr16
ret
sbb
rcr
jl
test
pop
xchg
imul
push
and
pmulhw
iret
mov
dec
call
jmp
push
daa
stc
mov
mov
jns
dec
mov
fadd
fs
mov
popa
mov
push
rcl
js
and
js
retf
adc
nop
adc
loopne
adc
and
cmc
sti
ret
loopne
out
dec
scas
outs
jnp
dec
cdq
adc
push
pop
outs
push
push
cmp
(bad)
xchg
pop
jle
adc
adc
sub
push
retf
repz
leave
mov
mov
sbb
dec
or
mov
or
dec
add
test
mul
je
pop
and
sar
push
pop
ds
out
push
mov
fld
sub
aad
and
inc
(bad)
in
(bad)
jnp
rol
aad
dec
call
loop
in
sub
test
fidiv
dec
outs
lods
sub
pop
cli
arpl
(bad)
xchg
popf
or
iret
ret
pop
and
cmp
popa
jae
add
pop
test
sub
stc
and
push
mov
fwait
sbb
cmp
dec
dec
rcr
cmp
(bad)
mov
fwait
test
test
push
pop
jo
mov
lahf
scas
adc
add
cmp
mov
dec
and
sahf
inc
test
pop
cwde
fmul
inc
cmp
int3
and
imul
xchg
inc
mov
and
inc
(bad)
pushf
ror
daa
mov
iret
fistp
test
and
dec
push
fimul
aas
add
(bad)
call
or
mov
iret
das
dec
dec
xor
das
xor
xchg
jne
add
sub
cmp
cmp
xchg
ret
popf
cs
outs
into
je
aam
popa
div
sbb
fsubr
(bad)
(bad)
and
cmp
out
cmp
sub
mov
sub
test
test
add
cwde
mov
fs
clc
jo
in
mov
mov
push
je
cmps
pop
pop
cmp
stos
outs
sti
icebp
(bad)
sbb
(bad)
in
cmps
es
add
push
daa
scas
mov
mov
aas
inc
ret
mov
mov
adc
rcl
or
in
das
rol
pop
and
and
inc
aas
sti
out
or
add
test
data16
shr
mov
cmp
dec
cmp
fdiv
and
xchg
popf
sub
adc
inc
daa
jmp
(bad)
mov
mov
sahf
dec
test
arpl
mov
(bad)
icebp
dec
retf
popa
out
cwde
push
inc
inc
jp
std
mov
ins
(bad)
retf
xor
shl
push
scas
test
mov
mov
addr16
pusha
iret
adc
cmps
arpl
shl
inc
dec
std
sbb
add
les
push
aad
jmp
mov
fimul
and
sbb
mov
or
sbb
inc
xchg
rcr
mov
sub
cmp
xor
mov
inc
cmp
and
or
inc
fdivr
movs
fstp
outs
stos
loopne
mul
mov
adc
out
stos
out
popf
std
arpl
push
xchg
shr
cmps
cdq
pop
xchg
mov
or
ja
mov
jmp
vmovaps
cmp
push
jp
sub
jle
add
xchg
inc
mov
out
adc
outs
adc
inc
mov
out
sub
add
cld
and
pop
push
inc
leave
retf
es
sbb
jg
ins
and
adc
pop
mov
sbb
test
idiv
add
pop
xchg
jle
mov
jmp
lock
pushf
xchg
jle
or
out
push
cmp
pop
jb
jle
loopne
jne
icebp
js
jae
mov
jge
ror
sub
loopne
test
mov
adc
(bad)
das
repz
cwde
popa
mov
les
xor
outs
xchg
fbld
fcom
cwde
xor
popf
mov
xor
sbb
mov
jmp
aaa
xor
mov
cli
fstp
xchg
icebp
(bad)
retf
inc
adc
inc
in
jmp
arpl
(bad)
sub
or
sbb
imul
mov
push
sub
mov
adc
mov
jp
inc
es
in
mov
add
xor
int3
mov
sbb
ret
xor
popf
dec
xchg
sbb
test
jmp
push
mov
mov
out
push
sub
retf
or
inc
mov
std
mov
movs
les
sahf
iret
stc
cs
pop
ffree
in
mov
loop
dec
sbb
inc
xorps
push
(bad)
(bad)
xlat
rcl
js
or
xchg
div
or
clc
imul
sbb
outs
xor
inc
iret
pand
in
scas
(bad)
ss
mov
sbb
popa
jmp
adc
in
push
mov
and
jmp
mov
xor
(bad)
lahf
shl
adc
or
sbb
ins
sti
aas
push
aad
shl
mov
cmp
mov
mov
in
fldcw
test
inc
mov
cmc
xchg
pop
mov
push
scas
mov
ins
xor
inc
cmps
fistp
(bad)
mov
cmp
ins
xchg
inc
sbb
ds
mov
int
add
movs
xor
jecxz
dec
push
xor
and
retf
cwde
inc
mov
dec
xor
std
ins
test
lock
add
ss
test
dec
or
xchg
and
shr
in
enter
push
div
mov
dec
mov
xor
imul
cmc
xor
xchg
mov
arpl
pop
(bad)
push
retf
and
arpl
(bad)
or
lods
out
mov
stos
scas
loopne
pop
sbb
test
mov
ror
into
les
sahf
sbb
xor
das
dec
sub
and
call
pop
mov
sub
mov
xchg
fs
mov
and
lods
jecxz
cld
push
sar
xor
mov
inc
mov
push
into
xlat
sub
ret
pop
in
adc
test
loop
js
addr16
xor
data16
aaa
test
aaa
test
or
enter
push
scas
add
cmps
mov
push
(bad)
stc
dec
adc
js
fisttp
xor
dec
aam
sub
xchg
fst
stc
cwde
out
nop
mov
shl
cmp
and
dec
out
cli
add
cmp
jmp
push
sbb
push
ja
ret
push
lods
pop
pop
jne
fcom
clc
xor
cmp
mov
jne
stos
cwde
cmp
mov
ds
or
adc
movs
mov
lods
xlat
push
out
lahf
mov
cli
jnp
xlat
scas
loop
std
(bad)
arpl
dec
lods
dec
xor
jb
scas
arpl
lods
out
jne
sub
pusha
outs
xchg
dec
and
mov
retf
cmp
scas
adc
pop
nop
scas
sar
clc
jmp
out
pop
lods
cmp
cmps
lahf
and
ret
cmps
out
pop
inc
xor
sub
aad
fld
clc
fs
aad
(bad)
scas
(bad)
sub
jno
pushf
fcomp
adc
push
ja
adc
pop
mov
mov
sub
jmp
clc
xchg
push
pop
push
mov
lods
mov
or
mov
xchg
xor
add
cmp
outs
es
xchg
inc
adc
stos
daa
mov
sbb
out
add
fild
mov
cdq
xor
pop
popa
out
cmp
repz
mov
push
das
push
cmp
push
inc
out
test
in
mov
or
fcom
lahf
mov
hlt
and
leave
into
outs
mov
int3
lods
mov
(bad)
mov
iret
sbb
or
jno
je
test
jbe
sbb
rol
sbb
es
and
daa
inc
out
shl
out
and
jmp
repz
dec
scas
mov
fistp
push
inc
ins
and
pop
inc
(bad)
scas
push
imul
and
lds
push
daa
push
mov
fwait
icebp
out
sti
push
sti
das
mov
cmp
movs
xlat
push
shr
push
test
add
push
pushf
in
ja
push
inc
in
mov
stc
test
jns
outs
cmp
jge
or
outs
mov
jge
inc
add
iret
dec
sbb
adc
jb
sbb
mov
hlt
inc
sbb
loopne
(bad)
retf
ins
cmp
mov
rcr
(bad)
stc
sbb
(bad)
or
and
sahf
je
push
test
add
in
sbb
outs
packsswb
cmp
das
or
es
cdq
popa
mov
cmps
push
lods
jne
out
iret
xlat
add
mov
xchg
aaa
inc
mov
(bad)
and
stos
fst
mov
daa
nop
push
mov
fisubr
inc
mov
jnp
rcr
push
push
hlt
push
div
mul
push
jo
push
mov
pop
jge
and
xchg
jb
aaa
and
sahf
cwde
push
repnz
xor
sub
jae
jp
fdiv
mov
inc
ins
xor
shl
and
push
add
iret
gs
mov
popf
mov
cvtps2pi
ins
stc
imul
adc
inc
add
out
call
or
xchg
iret
sub
jmp
pop
(bad)
rol
fisub
hlt
xor
cmp
xlat
mov
xor
out
lods
push
add
sahf
sar
add
movs
scas
mov
pop
mov
xor
cmp
sub
cmp
adc
rol
out
cmps
pusha
pop
stc
js
mov
sub
stos
mov
adc
(bad)
mov
xor
outs
cmc
push
cmps
cmp
and
inc
inc
adc
jbe
adc
call
add
repnz
leave
jmp
mov
das
test
outs
cli
inc
push
movs
mov
cmp
mov
xor
pop
sbb
lods
mov
jecxz
ret
adc
and
repnz
and
xor
loope
lock
fiadd
jmp
pop
jnp
inc
repz
hlt
jns
retf
pop
pop
jecxz
in
in
ja
pop
call
xor
and
call
xchg
test
pusha
dec
xor
popf
sbb
(bad)
test
lahf
test
lds
push
(bad)
clc
adc
ins
jmp
clc
inc
mov
lods
xchg
(bad)
fwait
pop
xchg
mov
inc
mov
mov
mov
mov
das
push
les
xor
sub
stc
mov
mov
jmp
lods
inc
aad
adc
les
cmp
pop
inc
pop
inc
pop
cwde
mov
das
leave
fnstcw
mov
mov
add
xor
and
jmp
or
dec
int3
pop
push
mov
(bad)
push
sub
or
div
and
xor
inc
push
dec
cmp
or
or
mov
dec
pop
xchg
scas
sub
das
and
pop
dec
xchg
or
jne
imul
xchg
iret
xchg
mov
out
sbb
imul
inc
popf
call
xor
dec
jns
jg
leave
in
jnp
ds
sbb
jae
test
scas
out
dec
je
cs
sub
cmps
in
out
sub
xor
mov
inc
aam
leave
jle
das
sahf
fstp
in
sti
jno
or
movs
lea
movs
xchg
and
mov
jge
jb
call
and
inc
lock
or
ins
sub
xchg
pop
(bad)
xchg
(bad)
mov
mov
push
jnp
adc
scas
sahf
push
or
push
inc
iret
mov
add
ins
sub
pmulhw
loopne
pop
cdq
push
jmp
icebp
mov
xor
and
popf
or
jge
jns
retf
lods
loop
aad
fdivr
les
lds
(bad)
sbb
movs
pop
push
arpl
pop
sub
dec
call
repnz
mov
imul
inc
es
cmp
rcr
add
loopne
(bad)
mov
leave
ins
jg
mov
jg
jbe
inc
dec
cld
dec
enter
pusha
add
lds
and
dec
push
jno
push
fxch
push
mov
xor
push
cmps
xor
jb
js
popa
das
sub
lock
and
call
inc
nop
jecxz
imul
push
leave
stc
lock
pop
inc
add
jg
inc
scas
jmp
xor
mov
push
ret
clc
in
adc
jb
inc
push
fmul
sbb
stc
mov
add
adc
mov
(bad)
jmp
hlt
cld
pop
(bad)
mov
or
jnp
loop
add
int
adc
rcr
jg
jne
mov
jb
ins
jmp
rcl
sub
inc
mov
pop
iret
push
pop
nop
fsub
pop
adc
out
sbb
mov
xchg
adc
sub
and
jbe
bound
mov
scas
ja
pop
mov
das
or
sbb
jle
jecxz
cld
mov
dec
add
adc
xor
push
fisubr
(bad)
leave
add
mov
jno
(bad)
lods
and
pop
xchg
shr
dec
pop
mov
hlt
jno
shr
std
cmp
or
push
call
test
std
in
xchg
ror
lds
stos
pop
adc
cmp
jge
sub
jle
mov
push
push
jnp
out
add
and
mov
shl
dec
fwait
add
in
sub
ja
mov
scas
cmp
sbb
mov
add
dec
out
mov
aas
push
out
shr
mov
pop
lods
pop
add
retf
mov
mov
aad
xchg
xor
stos
push
in
mov
ss
mov
jl
inc
(bad)
mov
push
ins
sar
sub
cdq
mov
je
sub
push
test
pop
popa
xchg
mov
xchg
adc
pop
ror
push
adc
pop
retf
or
imul
outs
xchg
jno
shr
pusha
in
nop
add
push
outs
cmp
adc
jns
sbb
mov
jg
dec
sbb
mov
pop
xor
(bad)
scas
call
or
and
fmul
add
inc
jmp
dec
mov
jb
test
jns
cli
jbe
dec
add
add
mov
xchg
retf
inc
dec
repz
mov
or
test
jne
sbb
repnz
and
and
repnz
mov
cmp
pop
rcl
push
jno
imul
nop
jae
mov
and
add
mov
inc
mov
fisttp
stos
std
xor
jbe
dec
dec
pop
mov
mov
pop
lods
add
jg
stos
out
and
xor
cmc
jnp
push
inc
iret
cmp
nop
mov
add
test
sub
imul
pop
sysexit
or
adc
xchg
push
out
outs
mov
pop
shr
xchg
retf
jo
mov
les
(bad)
sbb
out
jl
es
ja
inc
mov
shl
hlt
push
ret
xchg
mov
stc
ds
sbb
shr
ret
clc
jge
adc
fs
or
xchg
ret
xchg
aas
stc
add
jmp
mov
pop
and
jmp
push
icebp
ror
push
inc
rcr
or
push
xchg
sti
or
mov
lods
(bad)
jp
sub
cmp
xlat
fwait
gs
adc
std
jo
stc
mov
inc
out
ins
adc
rcr
imul
div
sahf
mov
xor
inc
icebp
inc
cmp
cmc
xchg
cmp
js
cmps
pop
xor
mov
jns
call
int3
or
pop
hlt
jp
outs
mov
or
lds
mov
je
mov
or
not
je
iret
xchg
out
ds
retf
xor
mov
test
jecxz
frstor
mov
xchg
ret
xchg
push
dec
fild
jmp
pop
(bad)
mov
jmp
popa
push
push
retf
call
aas
mov
je
mov
repz
mov
hlt
xchg
mov
xor
add
clc
sar
out
ss
shl
jecxz
xor
add
add
inc
or
in
js
in
xchg
test
mov
push
jae
sbb
cmps
ret
fsubr
push
cmps
push
add
mov
pop
mov
loop
pushf
daa
out
push
ja
adc
xor
sti
movs
std
xor
jmp
gs
mov
push
and
loop
dec
test
(bad)
and
clc
fcom
ret
pop
sbb
int
dec
outs
out
loope
bound
jl
scas
test
lahf
push
mov
mov
cmp
(bad)
sub
jp
sub
mov
dec
sub
cmp
adc
jmp
cdq
fdivr
inc
jb
or
mov
fwait
xchg
stos
out
ret
ficomp
and
cmp
dec
(bad)
push
loope
xchg
jno
pop
mov
push
jbe
gs
and
pop
test
js
inc
repnz
stos
mov
mov
ins
xchg
loope
push
jmp
into
rep
sbb
jno
out
jp
pop
sub
push
clc
add
das
iret
fstp
push
bnd
jnp
pop
sbb
out
in
or
sti
(bad)
sub
pop
fist
stos
dec
(bad)
or
cmps
or
hlt
scas
push
sbb
lods
retf
fcom
push
push
imul
popf
adc
sub
mov
hlt
cmps
fwait
and
jp
push
aas
add
inc
scas
push
jne
daa
and
test
dec
cmp
cdq
xchg
mov
leave
jmp
add
mov
inc
bound
mov
test
mov
inc
popa
adc
scas
jns
imul
xchg
add
lods
push
sbb
and
inc
xchg
shl
popw
mov
jb
stos
std
push
jns
int
movs
aas
cmp
les
stos
push
sub
jne
mov
jecxz
test
xchg
cmp
bound
sub
pusha
clc
jecxz
lock
mov
iret
or
push
jb
movs
inc
jbe
loope
call
mov
(bad)
or
das
pop
enter
xor
jmp
(bad)
pusha
jnp
fnsave
ins
mov
iret
push
push
ret
inc
cmp
jl
mov
and
or
push
adc
mov
adc
cld
hlt
test
or
jmp
jp
lock
je
mov
dec
or
jo
test
jne
int3
mov
iret
jnp
xor
shr
xchg
shl
jmp
fisttp
popa
mov
inc
sbb
retf
xlat
cmp
data16
xor
mov
inc
das
arpl
mov
sbb
pop
push
jae
adc
sub
int
cli
or
cmps
fld
cmps
sbb
cmp
aaa
mov
aad
xchg
adc
mov
fs
mov
cmps
mov
outs
push
cmps
stc
mov
fwait
ins
stos
jb
in
mov
and
mov
xchg
jae
jle
xchg
in
push
xor
lahf
or
mov
imul
mov
sbb
popa
xchg
sub
sbb
pop
mov
(bad)
nop
mov
mov
or
mov
(bad)
aam
int
jg
sar
jmp
jg
lahf
mov
xchg
les
aad
rcr
xor
pop
sbb
dec
cmc
push
jecxz
mov
loop
sub
(bad)
retf
cmp
aam
aaa
jo
mov
jae
icebp
scas
inc
jle
(bad)
in
mov
das
jae
stos
sbb
sub
adc
sti
mov
jbe
sub
lock
fcom
xchg
sbb
inc
or
jbe
mov
push
push
movs
fisub
iret
jle
push
mov
mov
sbb
xchg
ss
arpl
std
lods
in
push
pop
daa
jb
inc
lods
mov
push
cli
rcr
jno
mov
scas
loope
and
mov
cli
out
cmp
aam
clc
(bad)
pop
fdiv
or
dec
jo
or
pop
add
cmp
cmp
push
sbb
jle
cmp
mov
int3
lock
call
sub
ss
mov
push
pusha
cdq
cmp
xchg
add
cmc
arpl
push
pushf
inc
ins
or
push
mov
jmp
mov
cmps
outs
test
cmps
(bad)
xor
mov
push
xchg
addr16
out
idiv
(bad)
sbb
mul
fst
call
push
cmp
pop
add
shl
idiv
lods
push
xchg
pop
and
or
xor
pop
retf
ficom
aaa
mov
(bad)
mov
push
xchg
inc
call
mov
ins
int3
xchg
cmps
enter
sbb
out
rcr
aam
retf
jae
movs
clc
scas
mov
out
xor
rol
aad
adc
movs
mov
mov
cmps
int3
inc
adc
xchg
pop
sub
push
mov
gs
arpl
out
xchg
cmps
inc
fwait
ret
in
jmp
ds
adc
xchg
inc
xchg
call
mov
bound
repnz
or
push
xor
pop
fsub
mov
cdq
adc
mov
inc
nop
mov
sbb
xchg
jae
xor
xor
mov
push
jbe
test
outs
push
sti
add
dec
add
inc
or
jp
and
lods
dec
call
or
into
mov
cmp
hlt
push
jg
hlt
add
es
jecxz
inc
jmp
pushf
mov
aaa
inc
fucomi
sahf
sbb
cmps
scas
adc
xor
ss
jns
fistp
repz
(bad)
data16
xor
dec
cmps
leave
test
stos
mov
dec
in
lahf
mov
add
xor
fwait
test
int
rcl
and
inc
sub
pop
mov
push
sbb
call
dec
and
fs
xor
add
jmp
inc
repz
cld
not
fwait
inc
pop
mov
xchg
adc
cli
mov
inc
in
mov
dec
jns
sub
stos
mov
data16
jo
(bad)
rol
mov
mov
adc
cli
in
sbb
jmp
je
mov
not
arpl
mov
cmp
push
push
pop
ins
(bad)
into
int3
(bad)
add
pop
aam
pushf
pop
adc
pop
mov
nop
xchg
adc
in
ret
push
leave
mov
xchg
jnp
dec
fisttp
pop
xor
push
jl
aaa
test
movs
jp
mov
sti
mov
std
mov
out
xor
and
in
jecxz
fs
aad
inc
dec
sub
pushf
sub
leave
mov
mov
or
jp
xchg
es
dec
xchg
push
mov
push
push
lock
clc
inc
loop
dec
popf
cwde
xor
sub
(bad)
out
cli
fs
fistp
fidivr
sbb
and
imul
pop
ja
xchg
(bad)
movs
ja
adc
fs
popa
call
mov
aaa
outs
xchg
mov
shl
or
pusha
mov
(bad)
push
pop
adc
or
pop
fdivrp
out
adc
jbe
ss
push
movs
sub
test
cmc
shr
mov
cwde
mov
cld
mov
enter
xchg
mov
pop
bound
inc
xchg
xchg
div
push
movs
or
mov
inc
or
cmp
add
xchg
movs
pushf
jns
mov
push
sub
repz
mov
and
mov
xor
dec
int3
arpl
movs
mov
sub
jo
or
pushf
inc
mov
daa
push
shr
test
push
adc
ret
sub
push
pop
rol
jg
jb
sub
or
add
inc
fadd
outs
push
jb
js
push
pop
sti
popf
out
sbb
nop
and
mov
popa
xor
and
dec
mov
adc
aam
jge
jnp
scas
xor
inc
add
test
int
lahf
pop
add
lahf
mov
jp
(bad)
or
retf
lods
jnp
mov
pop
dec
rcl
loop
enter
(bad)
sahf
mov
push
sbb
add
mov
test
jno
adc
push
add
xchg
ins
cmps
cmp
mov
stos
lods
gs
mov
dec
and
dec
imul
mov
ret
cld
gs
mov
ret
adc
fcomp
les
icebp
adc
jge
dec
lds
xor
arpl
inc
addr16
(bad)
test
jnp
rol
mov
cmp
xchg
adc
stos
call
data16
jge
js
xlat
fmul
or
mov
dec
lahf
in
bound
cmp
mov
push
inc
stos
pop
fstp
jl
imul
aas
and
mov
aaa
jne
cld
fst
adc
call
ss
jne
das
iret
dec
pop
mov
or
jo
mov
fwait
sbb
sbb
cmp
aaa
(bad)
mov
or
pusha
std
dec
popa
adc
sbb
(bad)
popf
add
adc
adc
cmp
xor
(bad)
mov
mov
jg
mov
lods
(bad)
sub
jmp
outs
fidiv
je
and
fmul
sub
cmp
mov
xchg
std
jg
pop
jmp
mov
sub
bound
imul
in
clc
leave
out
shr
outs
aaa
jb
mov
jg
push
mov
cmc
arpl
push
call
out
call
leave
inc
push
pop
(bad)
sub
xor
dec
sbb
lds
sbb
inc
xchg
(bad)
pop
sti
shl
adc
gs
test
xchg
enter
and
popa
and
dec
in
inc
push
adc
adc
loop
out
aam
pop
jbe
and
cmps
sub
push
dec
jno
sub
js
push
popa
jnp
inc
mov
mov
xchg
jae
scas
jbe
dec
cmps
repnz
mov
xor
(bad)
shl
aas
cmps
cmps
stos
adc
and
out
pop
add
sub
mov
or
ffree
pop
je
gs
add
mov
add
push
mov
es
ret
fwait
ins
jo
jmp
mov
daa
not
and
mov
cmp
sbb
push
imul
or
push
pop
fwait
imul
adc
cld
or
jl
mov
push
je
and
repz
sub
sar
test
mov
push
sti
out
push
lods
xchg
iret
sbb
icebp
mov
clc
mov
les
pop
xor
addr16
sbb
ret
xor
adc
mov
enter
pop
fbld
ret
clc
adc
xchg
sbb
inc
jnp
xor
inc
mov
xchg
retf
xor
mov
fld
push
fisub
scas
xor
pushf
pop
dec
mov
jl
lds
call
push
add
aad
xlat
ss
adc
add
sub
cmps
(bad)
adc
fstp
idiv
adc
pop
and
or
pop
push
fst
sub
into
xchg
stc
bound
pushf
jns
es
or
sbb
adc
cmp
pop
mov
jmp
fisub
retf
cmp
or
int3
sub
(bad)
push
ret
bound
add
adc
retf
lds
stos
add
jo
int
adc
mov
inc
push
xor
sub
call
(bad)
and
lods
jmp
addr16
loope
and
add
dec
add
or
das
(bad)
mov
hlt
pop
loopne
mov
jmp
arpl
clc
dec
sbb
pop
sbb
pop
into
not
outs
jge
aas
cmp
push
jmp
loope
retf
mov
stos
mov
mov
in
test
jge
or
scas
cs
test
sbb
jmp
retf
and
mov
arpl
shr
cmp
xchg
mov
push
mov
loopne
stos
les
ficom
pushf
shl
ficom
cmovle
test
enter
jo
cmp
xchg
dec
mov
das
std
sbb
inc
in
adc
cmp
pop
sub
mov
mov
push
mov
cdq
jbe
mov
push
xchg
test
arpl
bound
aam
add
movs
dec
out
iret
mov
repnz
pop
mov
(bad)
and
adc
aas
in
mov
cmp
(bad)
repz
cmp
shl
xor
cmp
pop
pusha
leave
addr16
inc
bound
xchg
sbb
sbb
xor
mov
mov
repz
dec
and
movs
mov
push
ret
ins
sbb
imul
pop
or
xchg
cwde
mov
clc
push
ss
aas
nop
repz
fnstenv
int
xor
ret
dec
mov
scas
or
adc
lods
inc
out
mov
and
faddp
inc
add
xchg
mov
adc
ffree
xor
pop
mov
retf
pop
add
push
ret
(bad)
fnstsw
mov
iret
mov
lods
cdq
ret
jo
pop
mov
call
mov
xchg
fdivr
stos
or
fcmovnbe
push
lock
mov
in
sub
dec
dec
jb
adc
adc
add
dec
aad
push
aad
stos
and
xchg
jne
jmp
imul
stos
xor
retf
fwait
sbb
mov
(bad)
bound
gs
stc
xchg
movs
sbb
push
mov
nop
and
rol
cmp
stc
cld
int3
bound
pushf
xlat
dec
ins
fld
xor
test
xchg
or
gs
call
mov
mov
xchg
fwait
adc
popa
inc
dec
test
jno
jl
mov
jg
xchg
pop
mov
inc
xchg
sub
push
leave
jp
enter
pop
call
ins
jae
and
pop
sub
in
sbb
pop
data16
(bad)
adc
dec
jl
pop
rcr
bound
inc
bound
pop
and
or
pop
pop
mov
in
xchg
pushf
shl
data16
or
fidivr
add
bswap
rcr
gs
mov
push
mov
shl
pusha
fisubr
fidivr
mov
and
shr
dec
lods
cdq
ja
jmp
lods
mov
push
call
shl
xchg
or
inc
and
into
daa
(bad)
fldenv
xchg
enter
cwde
dec
test
je
jo
popa
pop
aad
addr16
jne
adc
sub
jo
aas
cld
and
in
outs
jo
js
mov
inc
lods
mov
sbb
cmp
scas
sub
mov
push
movs
lds
xchg
pop
mov
cmps
and
rol
mov
js
sti
scas
mov
push
loopne
bound
hlt
fmul
adc
mov
jne
adc
in
adc
mov
jmp
sub
add
mov
xchg
out
sti
push
mov
add
adc
xchg
push
jnp
into
push
lods
push
inc
mov
mov
cdq
test
ds
inc
aas
push
addr16
xor
or
cmps
inc
rcl
(bad)
lods
ins
or
xor
xchg
add
mov
test
ja
(bad)
fdivr
fiadd
and
cmc
dec
and
pusha
cmp
and
pushf
jmp
add
jmp
jmp
add
mov
test
fdiv
or
lods
push
fs
addr16
pop
xor
cmp
cs
mov
jmp
pop
sbb
push
or
sbb
adc
push
test
inc
xchg
int
pusha
mov
jae
dec
test
outs
xchg
push
xchg
adc
inc
xchg
push
sbb
jbe
loopne
pusha
fs
clc
cmp
add
xor
cmps
mov
outs
pusha
inc
or
into
and
pop
or
pop
lea
mov
and
xchg
xchg
push
in
sub
test
mov
mov
clc
sub
in
icebp
mov
(bad)
xlat
mov
pop
cmps
mov
ror
push
xchg
ds
push
shr
jecxz
into
rcl
mov
xlat
add
xchg
inc
xor
jns
xor
repz
xor
imul
and
test
and
push
das
and
test
rcr
aas
add
sub
out
push
and
sub
ja
mov
push
adc
sti
lds
shl
dec
not
in
popa
and
push
xchg
dec
js
les
xchg
shl
jae
lods
aaa
mov
lods
ret
imul
jle
test
mov
(bad)
div
mov
repnz
fidivr
inc
leave
stc
xchg
ds
icebp
adc
mov
jnp
and
mov
std
sbb
daa
cmp
icebp
sub
jmp
leave
jb
repnz
push
dec
dec
dec
push
ins
inc
and
outs
in
retf
mov
dec
jb
inc
mov
fdivr
ins
pop
push
nop
mov
cmc
or
jbe
add
pop
add
jnp
rol
call
dec
out
xor
gs
adc
xor
adc
int
xchg
dec
and
shl
ds
aaa
lahf
push
sub
cld
sub
pop
mov
jmp
fs
jns
in
push
js
cmp
push
jge
jl
dec
and
mov
shl
jecxz
rol
call
inc
repz
ret
or
add
movs
icebp
ins
popf
loop
mov
bound
lahf
or
pop
add
jno
shr
dec
sbb
xchg
jecxz
(bad)
ss
mov
xchg
pop
sub
cmp
imul
pushf
lods
adc
inc
ins
retf
cmps
mov
push
addr16
add
out
push
stos
aaa
idiv
sub
mov
mov
mov
lock
mov
push
inc
test
aaa
(bad)
mov
outs
pop
movs
xor
push
or
mov
pop
sub
mov
jle
jle
addr16
or
imul
mov
dec
add
dec
inc
add
sar
into
cli
repnz
mov
adc
sub
aas
xor
test
add
bound
dec
sub
shr
push
pop
std
je
cmp
dec
inc
cli
jg
lods
add
inc
aad
sub
sbb
xor
imul
lods
retf
jb
mov
in
leave
shl
addr16
in
cmp
xchg
sub
mov
mov
push
or
push
mov
pop
adc
clc
xchg
sti
push
push
inc
movs
or
push
sbb
dec
pop
push
xor
jp
daa
fisttp
bound
pop
push
add
pop
ins
push
loop
pop
in
in
and
sbb
imul
xor
ret
xchg
xchg
lock
outs
sbb
inc
sar
js
leave
xchg
jb
dec
fwait
adc
and
xor
pop
scas
shl
pop
or
mov
dec
push
jbe
retf
repnz
(bad)
aad
dec
lea
cmp
xchg
cmp
cmps
ret
test
stos
sub
sbb
lock
iret
dec
push
in
pushf
pop
popa
cdq
jb
xor
cwde
js
xchg
fcomp
mov
js
std
lods
xor
jl
mov
popa
pop
loop
cmc
fdivr
sub
int
in
pop
call
mov
inc
fldl2t
out
movs
test
adc
jns
test
cs
mov
sub
cmc
jp
shl
inc
jg
dec
cld
push
cmp
(bad)
out
add
imul
xchg
je
push
lock
push
and
stos
inc
pop
rcr
mov
push
xor
mov
imul
push
mov
fiadd
cmps
outs
shl
enter
aas
mov
push
xchg
mov
push
ja
inc
fwait
push
repz
cmps
test
xchg
jp
adc
ret
popf
clc
mov
sub
xchg
add
in
xchg
pop
call
ret
jge
jmp
sar
push
add
stos
dec
dec
call
mul
les
mov
mov
ds
movs
pop
lods
lea
ret
jne
cmp
cmp
push
cwde
pop
in
pop
out
pop
fcmovnb
retf
mov
int3
pop
in
cmp
sbb
add
loopne
retf
data16
arpl
push
lods
les
pop
ja
mov
int
loop
daa
cld
fdiv
hlt
lahf
xchg
imul
rol
xor
popf
lods
cwde
mov
xor
inc
repnz
cmps
or
repz
or
cli
adc
add
shl
push
push
xchg
dec
add
add
mov
out
fmul
sbb
fwait
xchg
je
loopne
jno
aaa
icebp
jg
ret
adc
ins
fistp
jecxz
rcr
ds
or
les
or
mov
movs
push
inc
sahf
xchg
mov
retf
in
and
sbb
cmps
or
pop
mov
daa
mov
cmps
mov
call
cli
cmp
test
dec
das
test
cmps
mov
loope
and
jmp
dec
push
mov
mov
fwait
pop
enter
mov
not
(bad)
and
fs
out
mov
dec
pop
daa
jl
jbe
aas
fsub
in
mov
sub
ffreep
add
lds
cmp
pop
or
inc
or
pusha
lods
repz
push
in
sbb
push
(bad)
out
jl
jno
mov
sbb
cli
fs
mov
dec
inc
xor
xor
pop
out
movs
int
sub
cmp
sbb
mov
adc
cmp
adc
mov
or
mov
out
cmps
lock
mov
mov
xlat
pop
inc
dec
jp
xchg
enter
addr16
imul
inc
retf
gs
or
mov
loopne
ja
fcom
jo
mov
out
movs
(bad)
sti
in
movs
add
int3
sahf
cli
push
sub
aam
dec
push
jge
daa
out
movs
mov
bound
sbb
mov
sbb
ror
ficom
(bad)
jle
jae
push
or
xchg
cdq
pop
sub
cli
sub
mov
sahf
sbb
pop
scas
in
pop
mov
fld
xor
repnz
sbb
outs
push
pop
and
dec
dec
ret
fnstenv
jmp
test
xor
lock
mov
mov
push
and
js
and
fldenv
sar
inc
adc
sbb
ins
sahf
aad
dec
fwait
and
idiv
pop
push
lahf
mov
out
test
adc
js
inc
pop
xchg
mov
cmp
xchg
mov
pop
pop
push
faddp
jge
xchg
push
xor
push
xor
sahf
inc
pushf
(bad)
test
pop
mov
inc
mov
mov
dec
adc
movs
and
pop
popf
and
dec
dec
xor
es
and
fcom
adc
in
cmps
jns
stos
jecxz
cmc
lods
xor
sbb
cmp
dec
mov
out
inc
pop
lea
sbb
mov
mov
pop
xlat
inc
jns
int3
call
dec
push
push
mov
xor
inc
mov
repnz
fcomp
and
pop
mov
mov
lahf
sub
cmp
cmp
or
out
jle
(bad)
jge
and
(bad)
(bad)
shl
leave
or
xchg
mov
repz
add
cmp
nop
mov
sbb
and
(bad)
mov
mov
cmps
outs
push
cmp
jae
cmovle
xchg
loope
xchg
xchg
cdq
(bad)
lock
fld
(bad)
in
pop
mov
cld
xchg
mov
dec
call
(bad)
out
loop
mov
sahf
aad
sbb
add
jl
mov
and
lds
pop
cmps
add
pop
cmp
es
fdivp
jmp
jns
sahf
icebp
jns
mov
pusha
push
mov
jne
loope
in
jp
repnz
jno
stc
and
xor
mov
(bad)
in
dec
out
cs
mov
dec
jge
or
sbb
scas
clc
dec
add
cmps
imul
jno
xor
popa
push
into
push
aam
pusha
jmp
dec
outs
sub
push
sbb
ss
out
rcr
jns
movs
mov
mov
(bad)
inc
das
or
ins
test
adc
pushf
push
mov
je
xchg
mov
xchg
shr
xchg
inc
test
rcl
cmps
or
sub
repz
sti
pop
mov
cmp
xchg
sub
push
pop
dec
pop
out
mov
push
dec
jmp
mov
pop
pop
(bad)
(bad)
rol
pop
mov
adc
call
mov
sar
push
mov
arpl
dec
sub
cmps
sub
mov
das
test
jmp
les
pop
sbb
pop
and
lods
jae
nop
bnd
es
in
icebp
xlat
push
scas
mov
mov
jae
mov
das
xchg
pop
sahf
lds
call
pusha
pop
mov
pop
pop
je
pop
shr
loop
movs
xchg
std
outs
mov
out
cs
movs
icebp
mov
push
inc
stos
mov
mov
cbw
pop
inc
pop
daa
lahf
lods
outs
push
inc
mov
stos
imul
jmp
ret
(bad)
push
aas
aad
iret
adc
xchg
xor
hlt
in
adc
cmp
mov
sub
(bad)
fimul
movs
mov
inc
rcl
pop
push
sub
stc
rcr
jmp
sub
add
cs
or
sbb
loop
sti
repnz
aaa
cmp
iret
js
jl
fild
sbb
mov
mov
jmp
(bad)
fstp
in
inc
popf
jp
(bad)
outs
cmp
dec
cmps
imul
dec
xor
imul
std
mov
xchg
ret
add
dec
inc
pop
dec
aaa
push
pop
mov
pop
fmul
mov
cmps
and
aas
rcr
or
add
popa
xlat
sbb
fld
ins
fimul
out
hlt
imul
push
mov
mov
icebp
into
in
xchg
gs
adc
fisub
and
jmp
pop
and
push
xor
je
mov
push
dec
ds
and
xor
push
int
rol
push
cmp
aas
mov
pop
lea
mov
lahf
lahf
jne
aaa
cmps
ss
sbb
fdiv
and
aas
(bad)
push
dec
mov
mov
out
mov
cmp
mov
cmp
sbb
add
pop
aaa
jmp
int
mov
(bad)
fdivp
aam
push
icebp
xchg
in
inc
push
adc
inc
in
xor
jbe
ins
cmp
loopne
push
hlt
adc
sbb
mov
or
cmp
cmps
lock
in
sar
mov
clc
xor
loop
shl
or
jbe
mov
rcr
fistp
icebp
movs
shl
and
popf
xchg
pop
and
ins
xchg
iret
xor
fistp
iret
jbe
int
sub
push
test
sbb
lods
lock
xor
aad
pop
rcr
aas
cld
push
or
arpl
jge
xchg
fisub
ja
sub
iret
dec
dec
mov
adc
add
mov
movs
adc
jnp
adc
call
mov
xchg
dec
dec
adc
pop
mov
add
add
cmp
loopne
into
jmp
cmp
or
cmc
mov
cmp
imul
div
js
in
popa
sbb
jp
dec
push
out
cwde
ins
outs
rcr
dec
call
cmp
cld
jbe
cmps
test
bound
xchg
call
sbb
(bad)
addr16
mov
fnstenv
leave
xor
mov
adc
and
jb
mov
stos
pusha
xchg
in
or
adc
(bad)
aas
inc
pusha
dec
int
fdivp
sahf
adc
or
bound
pop
add
imul
and
in
pop
ret
sbb
pop
call
mov
dec
stos
ret
push
xor
xchg
sub
into
lods
loopne
mov
inc
sub
xor
mov
cmp
pop
push
(bad)
mov
clc
push
jg
cmc
cmp
xchg
and
out
mov
clc
and
push
call
aas
xchg
mov
xchg
jle
ffreep
aam
imul
rol
outs
push
dec
(bad)
push
inc
or
fcom
stos
lahf
ins
into
and
cmc
sub
addr16
pop
mov
push
jo
div
mov
pop
shl
das
add
inc
lods
lods
cdq
xchg
xor
sbb
push
or
inc
lea
inc
pop
jns
mov
pop
inc
js
jo
rcl
lods
cwde
sbb
push
in
jle
jmp
fidiv
movs
mov
dec
xchg
dec
mov
add
ins
dec
call
lahf
xor
fs
add
ins
adc
and
mov
out
cmps
div
enter
fwait
jle
mov
jae
mov
dec
lds
mov
(bad)
retf
test
pop
mov
mov
inc
adc
mov
mov
mov
punpckhdq
nop
lock
sbb
out
scas
sub
icebp
xchg
pop
xchg
jns
mov
loope
les
jl
pop
std
and
nop
rcl
cmp
lods
je
(bad)
fdivr
pop
push
mov
aad
jg
dec
pushf
fcomp
push
xchg
add
push
retf
ja
mov
inc
int3
in
fwait
mov
fchs
out
lock
jo
into
dec
mov
ret
int
daa
retf
(bad)
or
outs
ficom
mov
sub
jb
cmp
pusha
pop
stos
cmps
or
and
popa
pop
mov
jp
sbb
xchg
mov
mov
out
sub
fild
add
nop
pushf
add
popf
call
xchg
(bad)
and
shr
(bad)
dec
push
jmp
jae
mov
cmp
lahf
popf
xchg
mov
lahf
outs
sub
add
ret
cs
popa
xchg
dec
xchg
fadd
jo
mov
(bad)
mov
test
ja
push
xor
xchg
xchg
adc
retf
int3
rep
cmp
or
mov
loop
ins
ins
cmps
arpl
mov
inc
loop
ja
je
les
jb
or
pop
ret
mov
nop
dec
jne
or
cmp
sub
bnd
scas
test
push
push
mov
or
call
cmps
jbe
(bad)
call
out
xor
cdq
(bad)
test
sbb
or
inc
push
push
fldenv
test
pusha
test
inc
ret
fild
push
cmp
fsubrp
cmp
mul
(bad)
or
push
sub
pop
push
xor
sahf
dec
adc
sub
xor
xchg
retf
aaa
push
fdivrp
dec
add
xchg
test
std
pop
xor
aad
sti
mov
and
jl
adc
or
push
xlat
clc
xchg
int3
loop
lods
mov
and
jl
fadd
or
sub
adc
inc
imul
out
ror
ret
mov
js
pop
xchg
xchg
ins
dec
mov
data16
xlat
rcl
pop
fstp
sbb
mov
xchg
jne
jmp
cmps
call
(bad)
sti
mov
or
sub
push
xor
push
and
inc
pop
les
push
xchg
xor
inc
inc
outs
outs
sbb
(bad)
into
and
mov
sub
lock
jmp
cmps
jnp
dec
lea
mov
cmp
retf
pop
inc
ror
or
or
int3
cmp
fistp
or
inc
outs
mov
xchg
sub
xor
loopne
in
stc
push
inc
dec
pop
lock
cmp
dec
(bad)
in
inc
add
mov
dec
(bad)
icebp
jle
xchg
rcl
and
jp
push
xchg
xchg
das
inc
jne
mov
retf
mov
out
fidivr
and
mov
push
aam
ja
mov
dec
push
out
mov
test
or
test
cmp
add
jae
out
adc
pop
ror
cmp
test
icebp
pop
mov
jns
dec
and
mov
dec
cmps
mov
jnp
or
push
je
add
ins
in
mov
xor
adc
xor
push
movs
or
pop
push
xchg
mov
adc
aad
push
jge
add
cmp
inc
(bad)
mov
jp
inc
inc
push
cmp
mov
push
aas
scas
fadd
adc
lea
jb
(bad)
scas
pop
dec
test
bound
stos
jno
fadd
repnz
adc
add
shr
(bad)
adc
int
in
mov
int3
loop
rol
xchg
stos
xchg
jecxz
loopne
mov
mov
inc
xor
pop
in
mov
or
xor
push
xor
dec
pushf
pop
push
repnz
sub
hlt
adc
fimul
scas
mov
mov
mov
dec
imul
push
cmps
mov
and
fidiv
in
jl
jno
shl
scas
mov
adc
dec
pop
(bad)
stc
mov
add
mov
fs
add
out
pop
add
or
fistp
mul
xor
lock
add
push
outs
loopne
pusha
dec
sub
lods
jg
in
pusha
cdq
scas
fnstcw
push
or
outs
dec
mov
psubd
push
adc
(bad)
in
add
call
xchg
out
(bad)
in
mov
stos
stc
adc
jb
mov
add
test
jle
push
push
jo
(bad)
push
xchg
(bad)
fs
push
push
push
push
cs
icebp
aas
bsf
outs
adc
clc
retf
mov
or
inc
les
cmp
ins
imul
inc
je
gs
enter
cmps
imul
push
dec
das
ficomp
mov
adc
test
sahf
sbb
xchg
push
xor
adc
addr16
mov
(bad)
pop
loop
sub
dec
pop
or
xchg
xor
fwait
sar
inc
cmp
mov
leave
clc
jge
sti
inc
jb
addr16
pusha
jle
cmp
repnz
mov
sbb
pop
iret
pushw
movs
add
mov
push
fwait
imul
mov
pop
mov
clc
in
in
push
(bad)
retf
cmp
cwde
lahf
jmp
adc
cdq
pop
and
and
loop
hlt
sub
push
jo
cdq
(bad)
cmp
pop
xchg
call
aas
sbb
cmp
fidiv
or
and
loopne
jl
pop
pop
inc
add
dec
xchg
and
imul
mov
sub
das
sbb
cmp
add
pop
iret
rol
mov
arpl
jle
stos
fsubr
sub
inc
and
and
inc
push
rol
xor
pop
mov
mov
or
cmp
dec
lods
jno
mov
fucomp
rol
sub
sub
int
retf
push
cmp
ficom
dec
int3
xor
and
(bad)
pop
shl
mov
mov
add
inc
jp
dec
cwde
shr
dec
jp
jne
jne
xchg
xchg
stos
daa
or
lods
mov
xor
cmp
ficom
sti
mov
lock
jns
xchg
sahf
dec
in
push
les
call
test
mov
pop
(bad)
pop
test
ss
test
data16
and
sub
cmp
aaa
xchg
in
pop
cli
jl
and
inc
mov
sub
sbb
sti
addr16
ret
sub
pop
and
jne
pop
or
jnp
mov
ror
call
pop
and
pop
fadd
or
lods
cli
or
adc
or
enter
cdq
sub
scas
popa
enter
imul
sub
fld
js
popa
in
push
pop
fyl2x
shl
add
add
mov
add
mov
(bad)
xchg
jmp
jmp
lea
aaa
in
and
add
(bad)
and
dec
(bad)
sub
or
mov
cld
or
in
push
xchg
movs
xchg
mov
jns
add
sbb
shr
lods
mov
fwait
jbe
pop
sbb
cmp
mov
xor
addr16
jno
jle
(bad)
push
lock
or
pop
mul
push
loopne
mov
mov
push
dec
adc
shr
mov
leave
int
jae
jle
push
mov
adc
add
jge
into
lds
cmovno
cmp
dec
ds
test
push
loopne
ins
adc
imul
dec
call
rcl
or
jae
call
loopne
scas
movs
mov
loope
push
dec
pop
stos
dec
mul
or
mov
ret
dec
aas
push
xor
jo
test
imul
daa
ret
mov
fwait
clc
sbb
dec
xor
data16
aam
inc
(bad)
out
push
cdq
xchg
push
jmp
fidivr
or
pop
arpl
sub
inc
sbb
and
je
pop
sahf
fwait
loope
dec
ins
fcomp
xchg
call
xchg
push
and
int
lock
cmps
retf
cmps
retf
jmp
dec
add
jo
daa
mov
mov
test
mov
cmp
jl
pop
cmp
mov
cmps
mov
lods
inc
inc
cmp
test
mov
sti
adc
popf
cs
mov
pop
or
cmps
mov
cmp
div
imul
stos
js
cmps
jle
in
fsub
pop
imul
jb
fs
in
pop
rol
mov
jo
dec
add
pop
mov
or
sub
xchg
adc
rcr
fwait
push
add
movs
inc
xor
mov
aam
mov
imul
mov
(bad)
mov
std
pop
push
push
cli
loopne
or
xchg
mov
jnp
imul
cwde
jge
cmp
sbb
push
fisubr
xchg
mov
data16
push
jl
and
movs
call
nop
(bad)
ds
cli
in
mov
push
clc
test
mov
push
out
or
lds
popf
fild
sar
and
test
(bad)
sub
pop
loopne
mov
sbb
stos
push
in
retf
lock
add
pop
rcl
jl
mov
fs
adc
aaa
shl
mov
dec
leave
pop
mov
test
pop
bound
daa
mov
xchg
push
(bad)
jo
icebp
adc
jns
pop
aaa
repz
pop
and
jb
(bad)
popf
fsubr
out
repnz
mov
hlt
sbb
popf
repz
adc
or
loopne
inc
loop
jl
cmp
adc
nop
jno
arpl
inc
and
call
call
jbe
retf
add
inc
retf
inc
cmp
ja
xchg
cld
sbb
add
lods
and
cmc
imul
push
xchg
pop
xchg
dec
cld
stos
pop
inc
idiv
aas
mov
or
jp
cmp
pop
sar
mov
cmc
loope
test
stc
xchg
jg
push
push
ins
outs
cmp
adc
les
test
gs
add
addr16
jecxz
test
mov
jmp
and
pop
mov
cmp
ins
jl
or
ud1
dec
rcl
ror
pusha
test
push
mov
popf
adc
dec
ror
xchg
jmp
mov
retf
addr16
mov
dec
imul
fcom
shl
pop
sbb
mov
cmp
inc
sub
jmp
sub
jg
pop
cmps
mov
adc
cli
or
popf
inc
xchg
fcom
add
mov
add
popf
aam
data16
jg
stos
cli
dec
cli
mov
push
pop
push
jmp
add
dec
rcr
nop
cmps
nop
mov
sub
cld
dec
jp
xchg
imul
fdiv
jmp
adc
mov
ja
loop
and
out
in
add
aad
into
repz
mov
pop
aam
popa
xchg
add
in
push
pop
adc
cmp
iret
xor
sub
mov
(bad)
aas
dec
outs
add
sub
mul
inc
inc
xor
or
in
or
xchg
hlt
xor
pusha
xor
mov
out
ficom
mov
pushf
xor
loope
push
fnstsw
pop
cmp
inc
repnz
aad
push
jbe
es
pop
imul
and
in
pop
adc
arpl
sbb
jl
jno
mov
cmps
jmp
popa
jo
jbe
(bad)
and
adc
call
mov
lds
inc
out
mov
gs
imul
call
test
sbb
or
fisubr
cmp
pop
outs
jmp
jl
mov
xchg
or
and
sbb
data16
mov
inc
mov
test
retf
rol
ins
cmp
rcr
stos
mov
xlat
cmp
inc
pop
cwde
pop
sub
hlt
mov
push
icebp
mov
push
retf
int3
push
pop
jnp
dec
rcl
addr16
pushf
sar
dec
in
imul
sbb
mov
cmps
xor
jno
ins
mov
xor
shr
stos
add
dec
cmp
in
sub
nop
dec
icebp
pushf
fs
pop
mov
(bad)
cwde
mov
gs
pop
cmp
hlt
and
inc
scas
add
push
and
fadd
lods
pushf
mov
xor
call
sbb
sbb
xchg
mov
out
xor
sbb
mov
mov
cmps
pop
sahf
ror
out
lock
movs
call
and
push
mov
aad
pop
fadd
popf
out
jne
aad
cmp
jae
pop
mov
enter
and
inc
neg
leave
cmp
add
adc
pop
test
bound
push
lods
pusha
adc
sbb
std
lods
or
xor
test
int
das
add
add
push
fisttp
sbb
popa
dec
aas
xor
push
jl
retf
lods
and
adc
and
aaa
sub
sar
mov
arpl
jecxz
loop
dec
cwde
std
cwde
push
inc
xchg
leave
xchg
jg
mov
lods
mov
sbb
mov
(bad)
int
jmp
call
loope
inc
xchg
out
cmp
add
bound
gs
cmp
jl
cmps
jbe
mov
pop
arpl
add
retf
cmp
popa
(bad)
xor
pop
jl
cwde
movs
jns
ret
mov
xor
jmp
fisttp
pmaddwd
pop
into
out
jl
mov
in
loope
pop
or
movs
push
push
sar
push
or
sub
out
inc
fwait
lea
fist
pop
cli
loop
xor
push
jbe
repnz
or
and
cmp
jmp
sbb
add
and
test
(bad)
dec
jns
sub
jmp
mov
fs
aaa
add
xchg
pusha
test
mov
jg
sub
test
jne
inc
dec
or
mov
es
(bad)
(bad)
pop
repnz
push
inc
sub
sbb
add
(bad)
mov
jmp
call
std
retf
or
fcomp
jp
cmps
dec
pop
adc
adc
cmps
xor
loope
fnstenv
and
dec
adc
mov
(bad)
cmc
or
xor
jne
cmp
js
jmp
and
jp
or
into
sub
dec
inc
xor
test
test
jle
cs
pop
scas
lea
dec
pop
out
(bad)
(bad)
xor
jno
stc
lock
dec
inc
add
shl
mov
push
adc
push
pop
dec
or
in
push
xor
repz
xchg
or
mov
mul
int
sub
jns
push
movs
xchg
jg
xchg
jne
ja
test
test
or
(bad)
xor
lock
or
cmp
jg
or
push
leave
enter
dec
pop
enter
sub
ret
cdq
add
int3
hlt
aas
das
shl
inc
mov
jb
(bad)
rol
pop
jmp
out
cmp
inc
nop
addr16
sbb
pusha
cmp
test
icebp
pop
sub
je
pop
cmp
sbb
mov
push
xor
std
inc
ror
cmp
mov
fistp
shr
jne
test
xor
inc
or
cdq
sub
jnp
js
dec
outs
clc
push
mov
cmp
call
cmp
(bad)
jo
or
add
sub
and
(bad)
sbb
(bad)
push
mov
xor
(bad)
sbb
jno
push
xchg
fwait
jb
pop
xor
loop
mov
pop
arpl
sbb
mov
fstp
lock
dec
cmp
hlt
jb
xchg
pop
loope
sub
popf
inc
add
push
mov
mov
sub
dec
stos
das
adc
(bad)
sti
inc
mov
aam
sbb
test
pop
sub
push
popa
das
mov
loop
rol
cmp
dec
je
mov
ds
push
mov
sbb
mov
push
or
call
jp
es
mov
lods
sbb
dec
push
push
mov
add
sub
fcom
aas
jns
ds
jbe
fbstp
outs
sub
xor
(bad)
dec
repnz
(bad)
lock
mov
jo
xchg
sbb
(bad)
aam
mov
dec
mov
add
sub
push
sub
loop
push
cdq
cmp
sar
jno
les
or
sub
pop
adc
fld
test
test
les
ret
clc
lock
dec
inc
fbstp
data16
xchg
jle
and
sub
sar
lods
sub
imul
fisub
cmp
cdq
scas
out
mul
jmp
pop
and
dec
gs
retf
xor
lods
xor
lods
pop
(bad)
scas
fisttp
add
mov
(bad)
jbe
xor
pop
ja
sub
faddp
push
cwde
stos
std
mov
xchg
cmp
cmp
(bad)
leave
outs
mov
sub
mov
push
(bad)
into
sub
pop
push
pop
fsubr
in
inc
test
jns
or
pop
mov
int3
dec
cs
push
shl
push
retf
(bad)
xchg
pop
ins
loopne
jnp
sub
call
shl
ret
ins
pushf
neg
enter
xchg
cmp
ins
pop
cwde
jg
push
xchg
add
mov
xchg
add
popa
xchg
sbb
mov
xchg
out
nop
outs
mov
jb
inc
(bad)
movs
xor
and
sub
mov
xchg
sbb
rcr
adc
(bad)
sub
mov
je
push
cmp
xchg
push
dec
test
jae
pop
add
lahf
(bad)
mov
jecxz
cmp
movs
aaa
call
adc
mov
dec
mov
push
nop
mov
sub
cmps
sub
retf
adc
add
push
fs
into
mov
je
pop
mov
loop
xchg
jle
scas
adc
call
je
mov
mov
loope
sub
mov
jg
stc
aam
mov
ds
jmp
dec
fwait
stos
je
dec
clc
int3
ins
or
add
xchg
lea
mov
xlat
cwde
jnp
out
pop
popf
iret
div
(bad)
pop
mov
push
xchg
cmp
loop
rol
imul
fwait
stos
xlat
adc
out
ins
aam
xor
sub
push
in
hlt
sahf
outs
and
sub
dec
mov
lahf
shl
dec
cmp
dec
sub
aam
xchg
test
push
xor
idiv
rcr
jb
and
xchg
sbb
xchg
sbb
test
pop
xor
stos
lahf
stos
cmp
pop
fbld
jmp
fistp
lds
cmp
inc
mov
add
xchg
arpl
add
fwait
add
jo
shr
test
scas
scas
retf
das
mov
rcl
jns
loopne
imul
(bad)
fwait
push
push
movs
out
sub
adc
pop
jb
mov
lahf
(bad)
out
jb
and
add
add
iret
jae
cli
iret
shl
ficomp
fmul
mov
in
sbb
movs
cmp
add
(bad)
mov
je
jle
mov
cmp
test
dec
mov
in
iret
sub
je
out
xor
or
into
imul
add
aam
dec
adc
inc
lock
jns
bound
xchg
imul
xchg
jno
xchg
adc
ror
fisubr
bnd
jns
adc
ja
mov
mov
inc
in
jge
es
jns
sbb
sub
dec
dec
adc
xlat
dec
lock
in
int
adc
out
ds
and
jae
ret
jge
sti
add
lods
cmp
jne
add
pop
mov
ins
pop
aad
imul
or
pusha
fidivr
xchg
gs
ins
inc
jns
xor
aas
movs
sti
cdq
mov
sar
or
and
and
(bad)
mov
inc
hlt
ficom
push
mov
or
mov
int3
jae
xchg
cwde
pop
cmp
sbb
es
add
test
and
clc
dec
mov
sbb
mov
push
imul
mov
pop
mov
mov
jbe
ret
loopne
loope
(bad)
hlt
xor
mov
add
outs
dec
adc
push
mov
and
xor
jle
mov
imul
pop
mov
adc
fsub
cmp
retf
in
and
jle
cmp
aam
add
cmp
jnp
jb
sbb
movs
push
(bad)
fld
gs
cld
or
imul
loope
xchg
std
push
mov
fisubr
adc
retf
sahf
jne
jo
mov
mov
stos
xchg
or
(bad)
cmc
jle
push
iret
cmps
xchg
jbe
sub
pop
and
mov
shl
sti
icebp
loop
add
sub
inc
jmp
push
xor
add
imul
xchg
xchg
cmp
pop
retf
or
shr
pop
js
push
pop
clc
into
add
aas
dec
pop
jp
sahf
cmc
jg
stos
loope
sub
out
xchg
sbb
and
in
cs
call
jp
mov
xchg
lock
pushf
(bad)
or
xchg
cwde
(bad)
popa
fist
call
popf
repz
add
aaa
pop
in
test
mov
out
push
mov
rdpmc
fdiv
dec
mov
call
dec
xchg
push
ins
and
test
jg
sub
rol
mov
adc
pop
lods
and
test
mov
inc
iret
mov
test
xor
mov
in
or
mov
mov
scas
jbe
xchg
push
mov
jnp
adc
cmc
ins
push
push
mov
loop
shr
(bad)
mov
jp
jge
xchg
mov
fs
ins
push
ret
cmp
mov
adc
xor
(bad)
jns
rep
push
cmp
(bad)
mov
int
cwde
mov
clc
ss
loopne
std
adc
push
scas
ret
push
mov
loopne
ins
xor
jecxz
cli
(bad)
fbld
jb
idiv
rcl
loope
mov
lods
lods
xor
ins
stos
mov
dec
(bad)
cld
xchg
jnp
mov
fidiv
call
cwde
nop
cmp
sbb
mov
cld
cmps
lds
fisttp
mov
loop
xlat
movs
or
aam
repz
dec
jo
xchg
pop
mov
out
add
ret
mov
imul
pushf
fisubr
aad
add
mov
in
bound
bound
sub
xchg
nop
mov
jno
inc
push
jae
retf
test
jge
jbe
mov
sbb
fcom
call
xor
stos
pushf
inc
int
jle
adc
cld
push
adc
jmp
sub
or
out
sub
(bad)
or
lods
mov
call
add
ins
ret
pop
xor
add
jmp
and
lods
dec
ret
dec
ja
mov
call
lods
and
jp
mov
jge
xchg
and
jnp
pop
sbb
adc
mov
jmp
mov
push
xchg
sub
sbb
fcmovbe
dec
sub
push
mov
sub
repnz
adc
pop
dec
and
test
push
leave
in
popa
xchg
cmp
(bad)
jnp
sub
cdq
out
jmp
inc
(bad)
jl
in
and
dec
mov
or
xchg
test
or
cmc
mov
js
inc
and
mov
jo
add
idiv
psubd
inc
(bad)
imul
add
imul
loope
adc
mov
mov
shl
jbe
mov
xchg
jmp
leave
dec
push
ret
call
adc
or
mov
dec
call
add
arpl
retf
daa
push
test
fist
pop
ror
jo
inc
xor
fidiv
xor
test
push
fwait
adc
not
adc
stos
sbb
sahf
rcl
mov
movs
ins
clc
fadd
stc
movs
or
sub
out
iret
mov
movs
int
ins
add
xor
sub
test
sub
cmp
shl
mov
popa
loopne
add
jl
and
test
(bad)
xor
sti
sub
clc
push
test
inc
movs
out
or
ss
adc
lds
pop
cli
xchg
cmp
mov
xchg
imul
mov
aad
and
mov
mov
faddp
scas
push
mov
ja
push
loope
lock
mov
and
loop
inc
test
cmps
pop
test
nop
cli
iret
xchg
jb
or
sub
adc
dec
jg
mov
cmps
enter
retf
jmp
int
pop
loopne
(bad)
rol
es
inc
ins
add
push
and
jb
in
(bad)
(bad)
je
xchg
xor
test
popf
and
cmp
mov
inc
mov
push
xchg
in
jo
test
sbb
(bad)
xchg
fxtract
mov
mov
jecxz
cmpps
mov
out
mov
setne
mov
addr16
out
cdq
les
xchg
repnz
jg
movs
in
sub
pop
fpatan
adc
call
std
xchg
and
sub
scas
int3
test
jns
jae
repnz
dec
mov
push
movs
sbb
sar
xchg
sbb
jl
fs
fsubr
jne
lock
xchg
pop
data16
adc
fisub
inc
or
cld
aam
test
xor
add
xor
les
rol
ins
push
repz
jle
mov
cmp
xchg
or
cli
push
retf
outs
enter
lahf
pushf
xchg
lock
xchg
sbb
jb
loopne
pop
and
add
jae
mov
pop
test
gs
jg
call
or
inc
push
fadd
test
repnz
pop
dec
push
mov
retf
or
pop
jo
daa
mov
cmp
loop
repnz
jl
std
adc
sbb
jp
mov
sub
sahf
mov
hlt
pushf
inc
sub
lahf
in
and
bswap
dec
out
jg
cli
push
pop
sbb
adc
out
pop
push
loopne
push
jg
xchg
popa
sub
mov
addr16
adc
sbb
jmp
xchg
sahf
xchg
fwait
ds
cmp
mov
mov
pop
jae
cs
jmp
cmc
push
mov
ja
(bad)
in
sbb
(bad)
mov
mov
repnz
jge
sub
mov
in
(bad)
and
and
and
dec
repz
loopne
dec
and
ror
hlt
or
inc
mov
(bad)
cmp
add
sbb
xchg
int3
jns
dec
mov
ret
push
(bad)
imul
xor
xlat
imul
(bad)
jg
out
clc
sti
and
jmp
jmp
push
cmp
lea
fmul
pop
(bad)
push
add
push
pusha
out
or
fnsave
aas
lea
and
push
push
and
jle
pop
mov
fidivr
fwait
jno
test
xor
mov
mov
jle
nop
inc
and
test
push
push
sub
inc
push
movs
out
mov
pushf
cs
add
xchg
add
mov
jbe
movs
sbb
fstp
loope
(bad)
lahf
or
repnz
out
add
(bad)
daa
(bad)
icebp
mov
call
jbe
fwait
popa
jmp
mov
push
in
push
std
div
cmp
sub
retf
inc
mov
pop
loop
or
loop
popf
pop
loopne
in
iret
jnp
inc
xor
pusha
es
test
inc
movs
out
ret
lahf
pop
ror
push
movs
leave
cdq
jns
xor
pop
jg
xchg
(bad)
dec
or
out
jae
xchg
xchg
imul
nop
sbb
add
sbb
adc
lahf
movs
jo
out
mov
(bad)
mov
(bad)
bound
sub
es
(bad)
imul
aad
adc
into
fdivp
(bad)
mov
jne
aam
or
(bad)
cmp
inc
int3
arpl
hlt
(bad)
mov
push
or
xchg
addr16
pop
mov
jp
pop
lock
scas
push
cmp
call
add
xor
bound
cmc
mov
inc
sub
mov
dec
adc
iret
imul
jl
sbb
stos
mov
nop
lahf
and
xchg
clc
lea
in
call
ret
inc
or
mov
dec
and
push
mov
shl
sub
and
inc
add
sub
mov
jne
mov
jo
mov
daa
cs
lods
in
clc
stos
xor
in
cmp
mov
mov
movups
ins
add
in
mov
std
mov
lahf
outs
jl
push
adc
xor
fcomp
in
mov
scas
mov
lea
call
(bad)
pop
xchg
into
lock
push
ror
push
scas
mov
mov
push
xor
pop
ins
fist
pushf
inc
mov
mov
in
adc
mov
mov
out
or
stos
mov
pop
mov
lds
jae
stos
sub
ins
rol
shr
div
in
xchg
repz
jecxz
sub
inc
mov
in
lock
bound
xor
fisubr
fs
adc
jns
adc
fild
shl
test
or
arpl
outs
shl
lds
add
jnp
repz
dec
adc
out
add
sahf
imul
out
mov
adc
push
pushf
cmps
cmp
or
jp
push
or
push
pop
xor
dec
dec
ins
mov
das
mov
cdq
dec
or
push
pop
add
ds
fadd
cdq
cmc
push
mov
std
movs
sub
jne
pop
pop
imul
mov
adc
jns
xchg
and
aas
mov
ss
push
push
jae
add
sub
fmulp
jl
sub
sub
jg
rcl
dec
(bad)
arpl
cmp
pop
jb
int
dec
jp
test
ins
lock
ja
rol
test
pop
xchg
cmp
jno
inc
push
(bad)
repz
mov
loopne
cdq
mov
add
adc
dec
add
mov
ja
in
clc
pop
pop
xchg
cli
lea
xor
pop
fnsave
cmps
fidivr
ror
(bad)
xor
pushf
mov
mov
jmp
in
push
fldcw
xor
xor
pop
add
jmp
sub
sbb
pop
fdivp
gs
add
or
repnz
fiadd
ficom
test
mov
or
pop
dec
in
into
leave
jns
mov
stc
sub
sti
lods
xor
(bad)
sub
add
mov
stos
dec
add
sahf
mov
jp
inc
dec
mov
jno
clc
pop
call
cld
ins
rol
(bad)
jmp
fisubr
movs
xchg
push
pop
int
cmps
popa
mov
cmovg
xor
cmp
js
out
adc
fdivr
mov
fild
sub
cli
dec
add
xchg
adc
sbb
pop
xchg
js
push
adc
jne
jno
dec
sbb
popa
retf
mov
and
xchg
mov
rcpps
(bad)
loope
repnz
(bad)
sub
mov
sbb
sbb
adc
ret
(bad)
pop
jb
xchg
xchg
out
jp
or
pop
or
sub
outs
movs
nop
cmp
sbb
les
xchg
push
xchg
leave
xor
sub
xchg
cdq
out
jne
mov
inc
adc
jne
mov
add
out
jmp
jge
shl
pop
fs
lods
mov
(bad)
scas
or
shl
in
loope
push
dec
shl
fdivp
sbb
jns
jg
sub
hlt
mov
std
sti
aas
jmp
xor
nop
pop
cdq
jo
pop
inc
inc
or
jge
test
mov
div
fcomp
in
mov
ins
aaa
mov
(bad)
mov
je
sub
cmp
mov
leave
mov
imul
ds
adc
int3
pop
inc
push
out
inc
lahf
jae
xchg
dec
stos
aas
test
or
stos
jmp
lods
mov
aad
(bad)
imul
and
mov
pop
mov
adc
pusha
mov
outs
push
or
ds
imul
mov
add
fisttp
mov
push
call
pop
xor
mul
cmps
push
fsub
cmp
push
pop
jmp
xchg
pop
dec
xchg
xchg
ins
scas
sub
jp
fsubr
jns
in
sub
popf
in
cmp
hlt
and
lock
sbb
int3
jnp
mov
push
push
push
addr16
fdivr
cmp
inc
push
ins
sbb
cmps
daa
sti
rcr
call
loop
cmp
jl
clc
cmp
xchg
and
mov
lods
dec
add
out
imul
(bad)
rol
fcmovbe
sub
add
pop
test
test
vpsrlw
lock
ret
in
dec
add
add
std
das
jns
retf
inc
dec
jmp
push
sbb
sub
pop
push
inc
cdq
sub
xchg
jo
leave
inc
out
cmps
pusha
into
jns
ss
sbb
fimul
cmp
ret
add
mov
xchg
and
push
pop
scas
(bad)
std
aaa
xchg
shl
push
jg
(bad)
pop
pop
cmp
push
cmp
mov
mov
jmp
xor
out
add
push
mov
in
fsub
cmp
imul
hlt
jle
inc
out
call
out
mul
pop
(bad)
mov
inc
mov
cwde
mov
(bad)
mov
pop
jg
or
cwde
add
int3
pusha
std
out
sub
aad
test
mov
jl
fs
mov
sahf
cmps
(bad)
pop
or
or
push
loop
push
fcmove
cmp
je
adc
rol
add
pop
pop
jne
clc
inc
rep
nop
in
push
jns
mov
xchg
mov
movs
cmp
ret
je
rcr
ror
(bad)
shr
jle
sbb
xchg
fisub
mov
mov
and
xor
iret
ja
int3
pop
stos
loope
mov
rcl
mov
sahf
stos
ins
fwait
or
ficomp
or
test
popa
das
clc
xor
mul
aad
jae
lahf
popa
push
icebp
cmps
test
xor
into
iret
adc
xor
lock
lods
xchg
ret
bnd
ret
shl
ror
pushw
icebp
dec
adc
hlt
mov
into
outs
sub
pop
sbb
repz
sbb
aam
mov
jmp
fild
mov
mov
inc
fcom
xlat
test
ins
push
call
inc
dec
sub
pop
(bad)
jne
in
and
fimul
loopne
(bad)
cmp
sub
icebp
lahf
jmp
xor
xor
adc
jae
mov
push
sub
out
push
push
sub
xacquire
cmp
pop
in
dec
stos
bound
retf
aaa
mov
mov
leave
call
pop
in
or
test
add
imul
pop
cmp
mov
into
sar
outs
xor
push
add
outs
stc
xor
shl
dec
std
add
push
mov
or
and
in
sub
cs
sbb
jo
into
inc
inc
arpl
loope
out
lods
inc
sahf
es
lock
and
loope
cwde
call
rcl
push
cmps
dec
xchg
out
push
pop
cmp
ins
xchg
or
sbb
sti
mov
ja
sub
aad
int3
push
(bad)
out
into
ficomp
in
daa
or
mov
stc
pop
dec
xor
push
arpl
loop
int3
cli
push
push
xor
pop
sbb
inc
cmp
add
add
scas
sbb
and
sbb
add
enter
push
scas
and
data16
and
call
mov
mov
cmc
inc
push
loope
xor
pop
test
mov
sbb
push
add
repnz
imul
or
test
mov
add
outs
dec
adc
sbb
cmp
or
cmp
mov
dec
mov
inc
ja
or
fdivp
mov
sbb
add
cmps
and
adc
fldenv
pop
ins
adc
cmp
jne
(bad)
pop
imul
cmps
iret
js
out
push
in
cmp
mov
mov
mov
cmp
mov
movs
int3
sahf
mov
pop
sbb
cmp
stos
and
inc
sub
sahf
dec
nop
ret
int3
sbb
fwait
mov
(bad)
fbld
adc
arpl
cmps
mov
xor
mov
inc
aaa
or
inc
sbb
mov
movs
xchg
gs
pop
ins
in
fld
dec
xchg
repnz
pushf
movs
dec
push
gs
fs
int3
mov
scas
push
sbb
les
into
jns
pushf
mov
inc
mov
(bad)
std
outs
mov
test
arpl
idiv
jmp
shr
cmc
into
fisubr
loope
inc
jno
rcl
in
loope
(bad)
(bad)
xchg
sar
std
lods
xor
inc
or
sbb
nop
pop
add
and
add
mov
cmps
cmp
and
cmp
out
pop
dec
mov
arpl
mov
rcl
cmp
sub
push
cmp
push
test
push
and
push
jle
dec
sbb
leave
jb
inc
cmp
mov
xchg
pop
es
outs
test
jg
xchg
outs
test
jp
cmps
ins
inc
xchg
dec
sahf
dec
in
jne
xchg
daa
pusha
dec
sar
cmp
stos
loop
stos
add
sahf
jns
shr
sar
cmc
xor
jnp
mov
and
cs
ret
(bad)
hlt
push
jno
cmp
sbb
push
or
inc
aas
mov
ret
leave
in
cdq
shl
pop
arpl
cmp
mov
sub
cld
in
or
cmp
mov
sub
(bad)
xchg
leave
jmp
sub
(bad)
xchg
push
xor
jbe
pop
mov
(bad)
or
jmp
movs
rcr
jb
(bad)
pusha
shl
push
jmp
shl
aad
inc
and
loop
xchg
push
cmp
(bad)
push
xchg
das
mov
outs
sbb
mov
inc
xor
mov
and
mov
retf
xchg
mov
test
call
push
out
cwde
jno
adc
das
push
mov
push
mov
in
fcmovb
icebp
enter
mov
cmp
push
scas
ret
lea
or
ins
retf
xchg
jecxz
outs
jbe
test
cwde
jmp
pop
or
out
or
jp
xor
shr
not
loop
js
jle
cmc
push
retf
fild
fwait
pop
jnp
and
daa
jmp
aam
add
imul
inc
into
lea
pop
mov
push
inc
mov
cmp
adc
cmps
cwde
jp
and
lods
clc
xor
mov
push
mov
adc
jo
loop
jbe
imul
jmp
add
fadd
inc
mov
dec
mov
bound
in
pop
mov
mov
pop
and
adc
xor
jno
fldcw
stos
mov
dec
jecxz
xor
jle
xchg
cdq
mov
pusha
xchg
mov
(bad)
out
dec
mov
(bad)
pop
jecxz
pushf
outs
fidivr
xchg
repnz
cmps
mov
jecxz
pop
cmp
push
(bad)
pusha
fldenv
loopne
lock
arpl
jp
popa
mov
aas
cmp
jg
outs
jg
(bad)
mov
test
inc
movs
dec
ror
jb
sar
add
in
inc
js
pop
push
gs
sub
loop
jle
jg
xlat
sub
mov
data16
sub
fst
inc
imul
clc
pop
pop
and
retf
call
fcomp
scas
in
adc
outs
outs
(bad)
mov
push
ins
xchg
(bad)
mov
xchg
cmc
ret
add
icebp
sahf
stos
jmp
inc
mov
call
out
or
or
ds
mov
push
pop
lods
loopne
dec
adc
cmps
(bad)
push
mov
jae
fwait
out
js
ror
pop
jbe
pop
push
and
xchg
cmps
rcr
retf
repz
xchg
sub
cmp
adc
fs
jecxz
rcr
shl
and
sub
ror
jl
cdq
push
inc
std
rcl
dec
jle
movs
(bad)
pop
xor
xchg
sub
jnp
add
scas
les
sub
pop
aam
mov
push
or
leave
in
out
cmp
ja
fsubr
jl
cmc
repnz
xchg
adc
(bad)
mov
or
out
mov
mov
xchg
jle
shl
jne
das
test
jl
jnp
test
mov
xchg
cmp
sbb
cmp
movs
push
mov
push
push
and
out
dec
jge
and
mov
inc
iret
es
lods
std
fsubr
inc
mov
inc
pop
in
push
mov
xchg
aaa
xchg
test
fcomp
mov
vrcpps
setnp
xor
fidivr
mov
clc
xlat
jne
jg
(bad)
sbb
mov
mov
sbb
idiv
leave
cmp
fistp
jno
test
mov
sbb
xchg
fimul
jl
push
cmps
mov
pop
or
ret
mov
xor
and
and
out
mov
rcr
out
call
jb
stos
stc
(bad)
cli
add
stos
pop
in
xchg
sub
mov
jmp
or
jns
lds
das
add
lods
mov
retf
xor
mov
mov
ins
pop
sub
xor
adc
ins
xor
jl
sbb
mov
mov
pop
xchg
xchg
sti
enter
mov
jle
add
in
mov
cmp
xor
fild
inc
test
push
jl
adc
into
fld
cmp
lahf
pop
idiv
cmps
nop
mov
inc
jl
mov
push
jle
mov
mov
pushf
cmp
fs
xor
into
lds
dec
test
sbb
xchg
out
pop
ficomp
adc
sub
daa
cmp
jns
add
push
inc
inc
shr
inc
fldcw
jnp
lock
mov
jmp
(bad)
dec
and
sbb
xor
cmps
cmps
or
fstp
in
retf
jo
data16
xchg
in
dec
mov
pop
xchg
push
test
scas
sbb
(bad)
movs
or
xor
loopne
cmps
jns
mov
jb
jecxz
xchg
mov
lods
cdq
push
add
leave
ds
pop
or
mov
xchg
shr
cmps
repz
stos
push
arpl
and
cmc
loope
pop
add
add
adc
mul
mov
jno
mov
sbb
inc
lock
push
fadd
mov
pop
in
test
jbe
or
xchg
sbb
mov
outs
lods
dec
mov
cmp
into
pushf
jns
pop
inc
retf
push
dec
into
les
ret
adc
pop
and
lods
or
push
ja
stc
add
in
aas
xchg
or
(bad)
mov
xor
bnd
jl
pushf
sbb
fsub
mov
push
push
push
pop
cmp
popa
and
xlat
test
lock
push
add
sub
loope
ja
jns
je
popf
cmp
shr
dec
jle
pop
jo
sbb
bound
dec
mov
lods
and
data16
cwde
out
add
inc
rol
cmp
leave
pop
test
repz
or
aad
loope
int
std
nop
rol
ja
arpl
pusha
hlt
mov
sub
std
pop
cmp
push
push
add
jl
loopne
aaa
inc
ds
ror
mov
jle
cdq
es
or
repnz
jmp
jge
shl
push
adc
xchg
xchg
or
icebp
ins
jns
dec
jo
adc
and
cdq
addr16
sub
mov
out
jg
stos
aaa
repnz
push
pusha
mov
cmp
xchg
lods
cmp
(bad)
inc
jmp
adc
or
popa
push
rol
lods
daa
dec
push
mov
fldcw
and
xchg
and
addr16
and
hlt
ins
xchg
cs
cmp
cmp
inc
inc
sahf
je
ret
mov
sub
inc
xchg
mov
cmp
xor
test
add
mov
out
loop
sub
xor
jg
push
mov
rol
pop
jl
or
lds
rcr
cli
and
xor
fwait
sub
aaa
lea
push
cmps
aad
xchg
push
popa
inc
popf
inc
and
nop
xchg
out
xchg
xlat
fiadd
xchg
in
test
cs
pop
jns
xchg
out
ds
jl
leave
call
push
xor
sub
shl
inc
popa
test
dec
sub
and
fwait
call
fistp
push
xor
stc
icebp
or
popf
out
dec
mov
inc
adc
fs
and
mov
test
mov
jge
mov
fwait
push
aaa
or
cmc
jo
jle
dec
(bad)
daa
jmp
(bad)
jbe
pop
mov
xlat
sub
sub
dec
retf
aam
cmp
dec
sub
and
mul
inc
mov
and
fs
popf
(bad)
xchg
lds
ss
push
out
push
sbb
cmps
add
lea
xor
sti
cdq
add
ror
sub
(bad)
xor
aaa
xor
pop
cmp
les
ror
lds
xor
push
or
cmp
jl
adc
pushf
sub
sub
popa
dec
jmp
dec
cmp
pop
movs
push
pop
sbb
mov
pop
mov
inc
(bad)
mov
cld
(bad)
out
push
mov
movs
fsub
inc
les
mov
scas
in
cmp
adc
in
mov
jl
xchg
cli
dec
mov
and
pusha
adc
cmp
push
jmp
inc
mov
(bad)
sbb
cld
out
adc
push
push
imul
mov
or
pop
inc
repz
mov
aam
pop
dec
rcl
mov
and
sahf
(bad)
fucomi
dec
mov
mov
jle
sub
imul
pop
adc
add
retf
push
mov
xchg
jne
pop
add
lds
pop
mov
pop
adc
aam
mov
dec
push
sbb
mov
out
pop
jnp
out
cmp
and
je
jmp
daa
lds
lea
sub
stos
(bad)
movs
outs
cmp
cmp
rcl
xchg
cmp
xor
mov
mov
and
jno
sub
test
jg
pop
nop
retf
xchg
aad
mov
inc
xchg
pop
pop
imul
outs
push
loope
push
es
js
imul
inc
push
mov
fld
das
iret
pop
pop
nop
sub
sub
cmp
mov
adc
pop
or
dec
mov
popf
xchg
cmp
xor
dec
dec
not
adc
cdq
scas
ret
dec
fwait
repz
push
inc
or
jge
mov
fsub
int
jo
cmp
bound
mov
push
adc
bound
and
jne
mov
stos
clc
and
retf
and
aam
scas
in
inc
test
pushf
cmp
cmp
rol
fld
jecxz
jp
ss
xor
out
sbb
shr
ds
fwait
sti
int
jmp
mov
mov
jecxz
lock
mov
jne
je
ja
mov
sbb
in
xchg
xor
ror
ja
inc
xor
jns
in
int
stos
pop
in
jmp
rcr
pop
cli
inc
pop
dec
cmp
addr16
add
add
and
sbb
pushf
push
xchg
scas
add
fisub
inc
int
inc
cmp
mov
and
arpl
cld
mov
fiadd
xchg
or
shl
das
pop
in
sti
ror
aad
dec
adc
jge
enter
(bad)
hlt
jnp
dec
add
(bad)
push
ins
pop
mov
sub
push
push
pop
pop
cmp
stc
enter
(bad)
repz
cld
sbb
jecxz
pop
lods
dec
jnp
jo
pop
inc
sub
xor
jp
test
mov
add
dec
inc
js
lgs
pusha
call
inc
in
pop
xor
sahf
sbb
xchg
sbb
mov
mov
sub
aaa
xchg
dec
add
xchg
das
add
cmp
or
int
adc
push
push
sub
xor
xchg
js
rol
enter
ss
push
fs
(bad)
ss
das
in
outs
sub
fwait
jb
test
imul
repnz
cdq
mov
(bad)
sti
dec
aaa
leave
mov
sbb
sbb
dec
cdq
mov
cmps
jb
mov
imul
sbb
cli
outs
aad
arpl
aam
mov
add
test
xchg
inc
addr16
jnp
cld
arpl
shr
popa
pop
hlt
stc
addr16
push
outs
xor
iretw
jl
xor
jl
clc
or
mov
js
add
repz
arpl
xchg
retf
and
dec
repnz
lods
lock
outs
dec
es
lods
sbb
mov
push
addr16
(bad)
jp
mov
xor
shl
pop
shr
test
aam
push
mov
loopne
das
push
adc
lods
or
and
ror
sub
icebp
jno
scas
dec
jge
cmc
pop
push
sub
or
lods
(bad)
fsubr
jge
out
stc
push
loopne
pop
jne
sub
xchg
ja
fisttp
mov
xlat
xchg
xchg
retf
out
adc
inc
cwde
std
inc
push
les
nop
iret
or
adc
add
or
es
in
or
ins
and
call
out
jmp
retf
out
and
fadd
push
mov
iret
mov
cwde
in
fs
(bad)
mov
xchg
(bad)
out
ss
enter
sbb
mov
(bad)
in
call
std
sub
cmp
int3
in
fsub
lods
inc
sbb
jle
(bad)
fwait
pusha
loope
mov
and
jne
test
imul
mov
out
or
cli
xchg
push
or
xor
in
pop
pop
cmp
(bad)
mov
xchg
fldcw
popa
adc
hlt
or
lods
fwait
movs
inc
les
in
sub
sub
pop
mov
stos
cmp
sbb
mov
mov
out
xchg
(bad)
stos
es
test
inc
xor
sub
push
dec
push
adc
aam
dec
inc
xor
rcl
repz
jmp
cmp
adc
pop
jmp
push
sub
movs
(bad)
js
scas
pop
pop
dec
and
outs
push
pop
pop
inc
ja
add
addr16
jb
sbb
mov
xor
and
xchg
jl
(bad)
retf
(bad)
push
jl
pop
jnp
cmc
cwde
bound
fnstsw
inc
add
dec
xchg
jecxz
jl
sar
mov
(bad)
xor
mov
mov
es
xor
cwde
(bad)
xchg
inc
daa
stc
cs
int
xor
in
cmp
cmp
push
jno
xor
scas
cmp
out
movlps
or
aam
pop
in
push
ret
les
sti
jecxz
jmp
sbb
sbb
in
jbe
and
in
mul
jne
xchg
xchg
cmp
outs
adc
lods
int3
push
mov
out
hlt
cmp
sub
(bad)
in
add
retf
mov
lock
adc
inc
jg
pop
mov
clc
pushf
mov
add
gs
cmp
rol
sti
dec
cli
pop
and
mov
rcl
shl
xchg
cmps
jmp
scas
repnz
and
aad
add
jb
sbb
daa
loopne
mul
stc
push
fisttp
call
adc
retf
mov
xor
sbb
(bad)
sbb
push
fs
inc
cmp
int
dec
jmp
adc
imul
lea
cmps
sbb
stos
pop
xor
xor
shr
jns
cld
in
jmp
pop
sub
stc
nop
iret
jecxz
mov
push
div
xchg
out
ret
dec
dec
add
xchg
and
adc
pop
xchg
cli
sbb
push
sbb
jno
(bad)
es
stos
sar
dec
daa
cmp
sub
jmp
call
nop
push
jns
popf
cs
pop
cmp
int3
popa
sbb
pop
sub
rol
sbb
popa
adc
jno
mov
adc
mov
push
(bad)
pushf
in
out
jno
cmp
stos
push
xchg
mov
jmp
mov
dec
xlat
(bad)
dec
inc
jb
popf
outs
es
mov
test
cwde
dec
and
test
push
ret
jle
aas
mov
pop
clc
lahf
ficomp
push
add
movzx
sahf
mov
aad
mov
das
push
push
ds
jl
push
add
cmp
fsub
les
ss
add
in
mov
pop
mov
push
movs
jb
popa
ins
stos
pop
mov
cmc
mov
sbb
sbb
add
mov
inc
mov
repnz
arpl
cdq
fs
jmp
and
fisub
cwde
adc
mov
pop
popa
shl
sbb
mov
iret
outs
call
push
aaa
sbb
adc
addr16
push
daa
sti
sbb
dec
int3
xchg
repz
cdq
sbb
add
ja
pop
sub
sub
leave
into
rcr
ret
xor
hlt
jle
mov
inc
mov
pop
or
pop
cmp
sbb
push
push
mov
inc
adc
cli
jne
in
push
adc
aaa
(bad)
retf
mov
mov
out
xchg
and
fs
ret
pop
push
inc
std
adc
test
nop
aas
cwde
neg
mov
adc
fsub
icebp
jno
aam
mov
and
stos
ins
sub
cmp
mov
shl
aad
outs
sbb
test
hlt
mov
dec
inc
stos
fxch
cmp
mov
cmps
cmps
popf
lock
pop
xchg
mov
(bad)
xor
loope
xor
xor
adc
adc
jg
jmp
push
pop
xor
jge
imul
mov
es
(bad)
and
xor
out
push
pop
je
inc
loope
sub
adc
sub
xchg
sub
mov
icebp
lock
push
in
ins
pop
mov
mov
sub
fnstenv
mov
mov
mov
add
mov
cdq
bnd
ins
lods
dec
loopne
(bad)
and
push
adc
cmp
sub
push
arpl
add
ja
dec
xchg
data16
call
push
sub
into
fimul
cli
jecxz
scas
push
mov
ficomp
aam
jp
les
lea
fwait
hlt
push
push
mov
mov
mov
(bad)
lahf
push
inc
fidivr
adc
xlat
mov
add
sar
in
test
jnp
sub
in
in
cs
or
ss
jb
hlt
sbb
movs
inc
mov
cmp
xor
dec
xchg
icebp
fwait
outs
dec
pop
(bad)
shl
dec
push
in
cmp
dec
mov
adc
sbb
push
push
and
inc
push
xchg
hlt
mov
pop
dec
shr
(bad)
arpl
xchg
pop
mov
and
daa
cdq
test
jmp
lods
adc
rol
sbb
pop
mov
test
xchg
push
cmp
scas
lods
clc
and
iret
sbb
adc
jl
lods
adc
ret
mov
push
lahf
push
mul
(bad)
xor
(bad)
jnp
dec
pop
mov
pop
and
xor
ret
icebp
movs
push
aad
outs
mov
aas
aam
push
retf
and
dec
aam
mov
loope
pop
in
movs
jbe
mov
xchg
xchg
jne
pop
mov
xor
mov
sbb
sub
in
xor
sub
mov
or
push
mov
mov
and
xlat
sub
mov
and
xor
xchg
push
pop
fmul
xchg
lods
xor
xor
pop
push
lods
add
fstp
mov
das
lahf
adc
sub
dec
pop
sub
shl
xchg
or
jg
(bad)
jne
sub
xchg
mov
stos
jns
test
jecxz
mov
sub
mov
clc
lods
jb
imul
(bad)
ret
mov
add
and
mov
pop
aam
mov
xchg
xchg
jae
add
loope
xchg
leave
xchg
jae
push
call
push
push
pop
xor
jecxz
jecxz
aaa
leave
std
popf
push
lahf
pop
jmp
out
push
sbb
fst
or
jnp
adc
ficomp
es
adc
sar
jns
cs
dec
aas
sahf
push
outs
rol
cld
mov
jge
push
fstp
inc
add
movs
dec
cmp
repz
push
xchg
mov
in
inc
xchg
stc
pop
xchg
xchg
pusha
xchg
add
test
js
push
mov
lahf
loopne
jb
push
inc
ret
and
and
jne
ret
xor
add
fistp
dec
jne
out
jge
out
jnp
push
out
dec
call
shrd
push
and
sar
mov
push
inc
hlt
cmp
in
lods
mov
(bad)
stos
ret
inc
into
sti
mov
inc
int
mov
out
lea
data16
or
ins
pop
sub
mov
movlhps
push
mov
sub
xchg
shr
popa
jecxz
inc
int
daa
call
xor
sahf
or
stos
sti
mov
inc
add
sbb
mov
ins
ffree
icebp
push
and
enter
jmp
jns
add
outs
ror
jl
push
(bad)
and
out
mov
(bad)
xchg
ret
fdiv
or
pusha
jnp
enter
stos
jnp
xchg
lahf
sbb
jle
xor
loope
mov
data16
dec
pop
repz
mov
xchg
jo
mov
out
sub
je
clc
jg
aaa
jecxz
adc
sbb
sti
push
push
pop
lock
aaa
and
add
aad
sub
js
mov
mov
mov
sub
xchg
(bad)
xchg
mul
mov
cli
add
repnz
ret
mov
mov
add
xchg
lds
sbb
mov
inc
lahf
ins
jno
icebp
xchg
sub
xor
jo
and
mov
retf
mov
je
test
xchg
xchg
out
ret
push
nop
sbb
in
mov
cmp
inc
mov
ficom
div
push
sbb
cmp
leave
dec
push
mov
iret
push
push
dec
in
inc
(bad)
(bad)
dec
inc
jmp
sub
or
sbb
es
xor
mov
scas
cmps
not
cwde
xchg
push
iret
pushf
push
jbe
pop
movs
call
push
push
push
dec
inc
xchg
inc
xor
(bad)
jne
(bad)
aam
int3
sbb
pop
clc
cmps
add
adc
mov
stc
sub
(bad)
loopne
jmp
jmp
sub
mov
mov
or
adc
fistp
(bad)
int3
jmp
pop
in
inc
test
loop
(bad)
lock
or
cmp
in
pop
lods
ds
(bad)
jae
imul
(bad)
xchg
retf
jae
sbb
out
jp
adc
adc
fwait
(bad)
push
shl
frstor
pop
pop
mov
jnp
xchg
call
sbb
xor
lea
in
je
push
imul
outs
and
and
mov
in
data16
mov
pop
outs
pop
aas
jp
aas
fisub
mov
cmc
push
out
xchg
rcr
int3
repnz
pop
imul
inc
cmp
pop
dec
cmps
mov
jp
sub
jbe
adc
adc
dec
mov
aad
add
push
(bad)
mov
mov
cmps
jecxz
aad
jmp
scas
xrelease
lahf
jns
rcr
ja
cld
(bad)
mov
cmp
sub
stc
test
int
lahf
sbb
adc
add
aas
mov
scas
movs
or
jmp
aad
lods
push
add
loop
fcmovnbe
sub
mov
jg
jbe
shl
cmp
xor
test
clc
rcr
dec
sub
js
test
mov
mov
adc
mov
lahf
jl
push
in
das
loop
mov
xor
xchg
cmp
mov
xchg
sub
inc
jno
mov
icebp
aad
xchg
mov
jo
mov
push
inc
add
dec
cmps
test
push
into
or
cmp
sbb
cmp
bound
lods
fcomp
cmps
nop
js
repnz
in
in
(bad)
retf
inc
mov
xor
clc
sahf
dec
enter
xchg
cmp
cwde
add
sub
retf
cld
xchg
xchg
mov
leave
(bad)
pop
mov
out
cmp
sbb
mov
fwait
sub
or
jno
and
xor
lock
pop
ror
mov
scas
fild
test
lock
adc
scas
sbb
jle
sbb
imul
dec
dec
ror
mov
adc
in
and
inc
mov
popf
shl
sbb
jns
sub
in
and
in
stos
(bad)
lods
jp
or
or
push
popa
add
pop
lods
jno
imul
dec
bound
call
xchg
add
sahf
repnz
iret
adc
outs
nop
test
ret
bsf
dec
out
adc
mov
mov
mov
scas
push
jmp
sbb
sbb
jl
dec
enter
and
push
jbe
sar
xchg
mov
repz
(bad)
cmp
ror
add
scas
jl
xor
push
movs
lods
push
jo
and
in
and
loop
call
out
mov
paddb
scas
in
jmp
or
cmp
sub
ret
int
jne
in
dec
call
or
push
aam
and
gs
or
out
loope
jp
ins
add
mov
xchg
call
push
cmp
add
out
or
stos
leave
inc
cmps
mov
and
sub
or
sti
sahf
push
out
shl
stos
pop
xchg
ins
fisttp
push
mov
adc
lock
inc
push
out
mov
lds
arpl
dec
jnp
cmp
mov
push
dec
xor
(bad)
jmp
xor
dec
cmps
adc
lock
mov
pop
xchg
retf
lds
test
cmp
in
xlat
sub
xchg
daa
mov
push
rcr
fldl2e
out
inc
iret
fwait
shl
and
mov
jbe
bound
into
bound
repnz
adc
or
es
or
popa
aaa
in
rol
(bad)
fmul
jg
movaps
shr
(bad)
add
xchg
cmp
push
fbstp
movs
dec
pop
fld
repnz
and
mov
push
push
push
mov
fs
push
nop
jae
fbstp
shl
xchg
sub
and
std
mul
mov
lock
stc
add
inc
adc
jmp
and
pop
jmp
aam
xor
jno
dec
imul
and
sub
fimul
adc
stos
cmp
inc
dec
sti
adc
sbb
cmp
mov
(bad)
nop
xor
clc
fisttp
jl
xor
iret
jne
out
int
sbb
shr
mov
lods
mov
in
leave
xor
mov
push
inc
push
xor
mov
and
cli
mov
mov
mov
dec
pop
out
arpl
push
sub
pop
pop
cdq
movs
mov
loope
cs
adc
hlt
mov
jns
idiv
out
dec
jl
add
mov
pop
jae
push
dec
adc
push
movs
shr
sbb
shl
out
inc
or
jae
mov
mov
dec
and
push
mov
or
pop
pop
fiadd
push
mov
mov
out
xchg
jp
dec
adc
dec
fcom
push
sub
dec
shr
iret
in
out
sbb
sbb
mov
ins
fwait
mov
out
pop
fsubr
or
sub
ror
icebp
cmps
inc
cmp
into
mov
scas
sbb
mov
add
adc
xchg
leave
rcr
pop
xchg
push
mov
fsub
test
adc
repz
xchg
adc
loopne
and
and
stos
ret
sub
and
outs
fdivr
or
mov
outs
(bad)
push
dec
dec
in
add
mov
push
outs
sub
nop
and
inc
and
aas
inc
adc
push
add
add
shl
daa
cmp
jnp
xchg
lods
mov
mov
push
mov
or
pop
inc
ds
sub
inc
es
leave
repnz
push
mov
add
pop
jl
je
into
add
xchg
jmp
jno
or
xchg
aad
cdq
popa
xchg
into
and
sub
iret
pop
pop
push
pop
call
iret
xchg
push
inc
inc
or
aam
stc
mov
les
sbb
xlat
sbb
sub
jnp
push
in
mov
pushf
jmp
mov
repz
popa
dec
cdq
mov
jno
cmc
sub
mov
inc
jno
jp
xchg
jae
test
push
xchg
push
mov
js
call
adc
inc
test
mov
loope
loope
das
aad
dec
jmp
add
pop
jl
dec
cmps
and
fstp
in
popf
(bad)
loopne
pop
popa
xchg
lds
int
(bad)
pop
rcr
aam
shr
and
jmp
adc
ja
das
mov
lds
sbb
(bad)
adc
(bad)
jg
mov
mov
and
pop
sub
dec
mov
lds
or
iret
xor
outs
push
out
not
fcomip
(bad)
out
push
jecxz
push
rol
or
push
icebp
jle
add
cmp
mov
shl
mov
icebp
pusha
add
and
out
add
inc
xchg
dec
iret
inc
fwait
pop
mov
shr
aad
xchg
jno
cmp
and
and
push
jmp
cvttps2pi
cld
cmp
je
xchg
fiadd
add
gs
xor
push
aad
xchg
sub
(bad)
mov
push
inc
jg
push
and
sbb
pop
xor
pop
ds
cs
das
dec
mov
dec
fisubr
icebp
lods
fidiv
sar
push
je
mov
mov
fpatan
cmp
jae
pushf
rol
gs
inc
jl
jo
adc
int3
mov
loop
cmp
dec
adc
int
jp
(bad)
jo
adc
push
aaa
leave
mov
xchg
sub
rcr
cmps
xchg
jmp
aad
xchg
mov
fnstcw
pop
mov
and
sub
inc
mov
inc
aad
imul
jmp
inc
arpl
add
mov
dec
jo
cmp
out
and
cmp
(bad)
dec
mov
xchg
mov
push
stos
sbb
mov
mov
mov
inc
mov
aam
push
gs
cmp
xor
sbb
repz
mov
rcl
cmp
pop
sub
adc
popf
cmp
out
mov
mov
repnz
aaa
dec
mov
push
mov
xchg
idiv
test
adc
dec
sbb
and
cmp
cmp
jp
jmp
je
cmps
scas
mov
jae
jge
out
mov
mov
not
sar
ror
jns
fisubr
pop
dec
fwait
lahf
pop
jb
cwde
xchg
cmps
nop
and
add
(bad)
cwde
mov
hlt
dec
jmp
ss
lock
cmp
mov
push
icebp
jle
test
jle
mov
cmps
aad
jns
fisub
mov
(bad)
or
jnp
mov
repnz
add
add
push
cld
jmp
(bad)
mov
or
leave
fwait
rol
push
jnp
std
dec
(bad)
mov
sar
and
sbb
xchg
movs
or
repz
mov
cmp
idiv
xchg
mov
repz
aas
xor
mov
xlat
(bad)
push
jne
push
add
dec
mov
sub
inc
out
outs
jae
xchg
pop
and
fsubr
inc
inc
xchg
mov
inc
mov
xlat
scas
xor
stc
cwde
jmp
ret
and
(bad)
cs
(bad)
aad
retf
fild
dec
pop
adc
(bad)
pop
pop
or
lea
retf
mov
xchg
mov
out
pop
arpl
or
xchg
and
mov
ficomp
cmp
mov
bound
neg
mov
shl
std
xor
cmps
pop
cmps
shl
xchg
and
cmc
push
fcomp
xchg
pop
fnsave
jmp
and
cmp
pop
fistp
or
xchg
sahf
test
sbb
or
outs
cmp
loopne
push
bound
retf
mov
js
jmp
inc
icebp
aaa
iret
jnp
popa
dec
fisttp
jecxz
ins
or
xor
sahf
xchg
pop
mov
ja
xor
leave
xor
inc
and
cmp
sti
scas
movs
lea
pop
pop
push
int
or
inc
stc
into
xlat
jg
add
ins
adc
(bad)
aas
aaa
fisttp
(bad)
dec
sub
pop
(bad)
clc
imul
inc
shl
inc
jmp
jmp
fistp
rcl
fwait
mov
imul
add
inc
fisubr
jnp
push
inc
adc
mov
adc
mov
popa
cmp
sar
ret
cmp
dec
push
xchg
jmp
ja
mov
push
nop
xchg
retf
mov
sbb
adc
mov
push
adc
(bad)
pusha
pop
mov
mov
out
nop
cdq
in
mov
mov
mov
add
in
jl
rdmsr
xchg
repz
jge
xlat
push
mov
popa
sub
pop
mov
int
sar
fmul
push
pusha
addr16
lods
cmps
out
cmp
sub
imul
inc
dec
xor
out
mov
pushf
out
sbb
pop
pop
or
ror
sub
push
hlt
cmp
push
pop
adc
call
nop
jns
add
cmp
add
les
pop
pop
fnstsw
cmps
push
cmp
add
xchg
xor
xchg
jne
test
jl
outs
scas
das
xchg
lods
movs
das
cmp
dec
ss
fcom
sti
cs
jmp
imul
mov
push
jbe
iret
(bad)
adc
in
fs
mov
push
cmp
mov
aam
loope
ins
lock
cmps
add
nop
sahf
inc
stos
add
add
sbb
dec
mov
mov
test
fisubr
sub
jae
mov
sub
ins
adc
sti
cld
jns
xor
sub
jbe
shl
mov
pushf
and
hlt
push
mov
mov
mov
pop
push
leave
mov
jo
sub
cmovg
(bad)
imul
xchg
push
mov
cmp
sbb
sti
fild
clc
fcom
push
loopne
push
sbb
popf
ja
pusha
xchg
or
(bad)
(bad)
adc
jmp
sbb
nop
loopne
jns
mul
push
mov
add
xchg
leave
bswap
retf
xchg
push
rcr
xchg
jo
call
(bad)
and
(bad)
mov
fadd
fistp
and
sti
fsub
clc
dec
test
xchg
dec
cmp
ds
mov
push
pop
fstp
loop
loop
(bad)
mov
xor
mov
adc
ins
aaa
mov
mov
cmc
call
adc
xchg
cdq
inc
sar
jecxz
or
test
lea
jnp
cmps
cmc
daa
aas
dec
pushf
out
ds
test
dec
out
fsub
fdiv
inc
jmp
(bad)
js
jle
or
inc
xchg
(bad)
xchg
mov
test
sbb
mov
mov
jg
mov
or
(bad)
jae
test
or
int
fs
jle
iret
loop
nop
(bad)
xchg
push
sub
mov
sahf
mov
push
mov
mov
add
popf
test
cmps
jnp
jns
sbb
lods
leave
inc
shr
(bad)
imul
xor
into
sub
xor
mov
pushf
push
inc
add
or
sbb
outs
pop
sbb
jmp
aad
inc
dec
dec
test
cli
add
push
push
rol
mov
jmp
mov
cmps
fstp
(bad)
clc
jmp
les
jg
mov
and
stos
jo
nop
jge
stc
sahf
outs
inc
xchg
iret
adc
test
fs
dec
lods
out
and
es
or
sar
xor
or
push
cmp
or
sbb
mov
enter
pop
jecxz
mov
test
xchg
loopne
mov
add
stos
adc
mov
or
mov
loope
imul
add
les
adc
lahf
cmp
sbb
jge
mov
icebp
xchg
cld
movs
data16
dec
pusha
or
(bad)
inc
xor
mov
in
repnz
test
sub
fwait
stos
or
je
call
xlat
popf
fwait
addr16
xor
mov
ror
test
loope
dec
fmul
xchg
loopne
cwde
shl
(bad)
dec
loopne
cmc
xchg
adc
push
in
dec
and
cdq
pop
dec
sub
loop
adc
lahf
add
das
dec
or
popa
nop
sbb
div
jmp
ret
dec
les
or
and
xor
in
push
mov
iret
and
push
or
push
cmps
stos
into
popf
call
add
xchg
in
mul
retf
aaa
(bad)
push
sub
jg
(bad)
hlt
mov
(bad)
push
test
shl
leave
ret
sub
adc
std
mov
jb
ja
mov
inc
mov
mov
adc
ret
pop
fdiv
inc
gs
imul
pop
xchg
jbe
movs
mov
imul
rcr
push
mov
mov
cmp
fst
push
push
movs
mov
pop
jnp
pop
push
mov
sub
sti
das
adc
fmul
jecxz
in
inc
iret
mov
sbb
adc
push
or
repnz
or
mov
cmps
fstp
in
mov
xor
sbb
lea
cmp
sbb
call
ror
cmp
mul
xlat
adc
scas
mov
(bad)
push
jmp
jb
std
lea
push
ret
mov
jle
jo
pop
fidivr
adc
pop
mov
jbe
xchg
repnz
and
dec
mov
xchg
arpl
out
jg
push
ss
xchg
das
mov
jae
jle
push
adc
lea
test
pusha
pop
xchg
inc
movs
push
stc
(bad)
neg
movs
fucomip
cmp
jns
push
xchg
sti
sub
sbb
in
int
inc
retf
adc
dec
push
ret
sub
adc
lods
jne
out
xchg
je
xchg
mov
adc
(bad)
loop
and
pop
jmp
clc
int3
dec
ja
arpl
jo
push
scas
inc
sub
pop
push
cmp
test
popa
mov
jno
enter
sbb
mov
xchg
jge
shl
jo
sub
pop
jg
cli
dec
into
pop
je
lds
stos
adc
les
mov
xchg
das
push
(bad)
mov
and
test
lods
pop
lods
and
sub
int3
xchg
adc
cmp
jge
stos
gs
inc
pop
push
arpl
xlat
sti
loop
out
fdiv
xchg
in
cs
daa
ja
mov
push
mov
cmc
fsubr
mov
add
imul
add
test
add
push
xchg
xchg
sub
dec
cmp
out
cmps
sti
cli
inc
jno
mov
(bad)
out
pop
mov
pop
sbb
sbb
stc
push
mov
stos
sbb
out
inc
sub
pop
cmp
cwde
pusha
std
push
enter
and
out
mov
ja
xor
pop
dec
idiv
cmp
(bad)
mov
and
scas
lods
and
daa
xor
(bad)
mov
cdq
int3
repz
std
scas
fmul
push
mov
stos
mov
push
add
stos
daa
pop
and
aas
dec
pushf
sbb
stos
adc
push
daa
hlt
test
jle
mov
and
lock
sbb
mov
aam
xchg
inc
call
push
inc
lds
(bad)
hlt
mov
mov
xchg
and
movs
xor
xchg
xchg
daa
popf
shl
jl
(bad)
in
in
pop
xchg
mov
je
jo
or
movs
(bad)
jge
mov
sub
or
xor
push
push
or
pop
push
(bad)
adc
pop
inc
sti
xor
inc
push
not
adc
push
jmp
nop
outs
in
ror
es
(bad)
rol
mov
daa
dec
mov
pop
and
lock
mov
xchg
test
(bad)
push
push
les
or
sti
inc
shl
xlat
ja
push
xchg
sub
fstp
inc
mov
or
cmp
seto
shl
xchg
jo
outs
adc
adc
shl
push
adc
sub
push
jne
xor
test
inc
sbb
ja
adc
mov
call
mov
jge
push
(bad)
mov
add
jne
or
rcl
mov
xchg
divps
sbb
cmp
and
add
jb
(bad)
mov
mov
push
mov
adc
rcl
fistp
pushf
addr16
bound
das
push
or
adc
imul
in
sbb
adc
in
(bad)
rcr
cli
test
shl
fisttp
(bad)
je
inc
in
cs
add
cmc
sbb
sbb
cmc
add
out
jno
push
stc
jns
xor
sub
xchg
xor
cdq
test
imul
fwait
ss
mov
ds
lock
push
dec
test
sub
inc
loope
pop
out
(bad)
xchg
dec
clc
js
ret
dec
leave
dec
jmp
sar
inc
inc
aad
xchg
xchg
es
arpl
loopne
test
and
rcr
jl
dec
ja
jns
pop
xchg
stc
shl
shl
or
or
cdq
fs
push
in
xor
inc
mov
inc
mov
in
push
leave
stos
xchg
out
or
xor
pushf
xchg
in
push
or
jmp
enter
nop
into
pop
jmp
arpl
add
fidiv
xor
add
addr16
adc
into
push
ss
xor
pop
test
xor
adc
and
xlat
and
es
sbb
xchg
mov
pop
ret
mov
add
adc
inc
xor
scas
add
in
sub
adc
jnp
push
aam
call
jbe
in
adc
ror
mov
or
arpl
xor
xor
cmp
popf
mov
mov
pop
test
sahf
mov
inc
ins
xor
les
jnp
pop
or
idiv
dec
aas
daa
pop
(bad)
fdivr
imul
add
jg
cmp
jecxz
nop
xlat
movs
sub
inc
mov
pop
mov
(bad)
push
jno
mov
jae
out
cmp
stos
hlt
(bad)
or
mov
push
lods
inc
cdq
adc
inc
std
mov
mov
push
pop
scas
pop
je
push
xchg
(bad)
dec
imul
xor
sbb
rol
xor
test
das
xchg
hlt
es
aaa
inc
inc
jne
fsubr
pop
and
sahf
fwait
push
not
xor
cmp
sbb
mov
sar
inc
sbb
xlat
xor
mov
bnd
or
push
push
jecxz
jl
addr16
fist
dec
xchg
jns
pushf
sbb
cmc
retf
pop
int3
adc
out
nop
jns
adc
popa
add
adc
xchg
cli
cmp
adc
jecxz
das
loop
sub
test
mov
in
pusha
inc
sbb
jnp
aad
inc
sbb
data16
cmp
dec
push
ret
pusha
aaa
imul
shl
call
cld
xor
pop
je
mov
dec
inc
test
icebp
cmps
test
fs
sbb
iret
inc
cmps
add
push
pop
mov
fwait
cwde
out
lods
inc
inc
dec
data16
mov
mov
arpl
cmp
adc
stos
fsub
(bad)
and
movs
inc
aas
inc
add
les
xchg
cmps
cmp
jnp
outs
jmp
jmp
test
or
in
dec
pop
sub
mov
jno
jo
rcl
(bad)
mov
test
mov
cld
jmp
hlt
pop
mov
sub
out
sbb
rep
js
dec
mov
cmp
mov
mov
add
sbb
rol
pop
nop
shl
popf
cmps
dec
cs
push
adc
sbb
cmp
push
sub
xor
xor
cli
in
xlat
cli
stos
aad
pop
out
xor
lahf
jmp
pop
sbb
out
cmp
sub
leave
je
and
enter
inc
(bad)
(bad)
jecxz
out
sbb
data16
fnsave
mov
sbb
cmp
dec
addr16
je
mov
out
mov
jle
add
mov
inc
leave
aad
adc
or
dec
in
adc
jmp
imul
and
sub
in
jno
lods
shr
test
xchg
jne
sub
int3
das
and
sti
loop
lods
inc
push
cdq
mov
ret
fld
sbb
out
xor
mov
adc
dec
pop
shr
rcr
pop
(bad)
movs
lahf
inc
scas
ins
cmc
mov
mov
loope
in
aam
and
addr16
cmp
or
xor
pop
inc
fisub
ja
xor
mov
(bad)
or
or
and
xchg
clc
aad
push
(bad)
xor
xchg
jb
jp
popf
cmps
pop
setbe
pop
xchg
inc
out
jl
mov
imul
icebp
vmwrite
and
out
popf
(bad)
xor
or
xor
movq
arpl
and
sbb
enter
stc
mov
push
sti
cmps
test
sahf
fild
or
mov
ficomp
imul
cmps
hlt
scas
mov
bound
fst
rcr
xchg
cld
movs
das
inc
or
ins
sbb
cmp
scas
outs
dec
retf
or
push
ins
mov
dec
pushf
ss
ss
push
jge
and
sub
imul
push
inc
cmc
pop
mov
mov
sbb
add
daa
nop
mov
sahf
in
dec
out
sub
sub
xlat
push
das
pusha
jne
dec
popa
pop
adc
outs
cmp
jmp
loopne
popf
xchg
pop
cmps
fimul
or
push
enter
ins
rol
push
cs
mov
bound
inc
or
(bad)
and
retf
xchg
sbb
or
mov
or
popf
(bad)
shr
xor
in
shl
lds
cmps
dec
pop
je
inc
push
mov
jge
pop
jl
fld
xor
xchg
in
imul
test
add
mov
shl
iret
lock
aam
inc
aad
xchg
xchg
or
cmps
fs
mov
xchg
jne
push
fcomp
call
xchg
mov
loope
mov
mov
sub
and
in
fstp
adc
sbb
mov
out
push
jp
rcr
cmp
mov
xchg
ret
popa
or
inc
mov
sub
jnp
pop
inc
(bad)
cmp
ins
aaa
sbb
std
aaa
(bad)
sbb
jmp
mov
or
inc
xlat
mov
aas
mov
sub
pop
mov
push
mov
daa
sub
mov
pop
pop
adc
test
sbb
test
or
ret
push
sub
cs
xchg
push
and
mov
retf
xchg
repnz
cmp
pop
loop
call
inc
push
movs
push
cwde
pop
cld
xchg
sub
add
cmc
pop
jmp
jmp
dec
in
aam
cmp
or
test
retf
syscall
ds
test
outs
add
dec
call
lock
cli
div
cmp
mov
sbb
pop
mov
test
jnp
adc
psllq
mov
test
add
jl
test
call
pushf
inc
das
inc
mov
imul
aad
adc
and
sbb
(bad)
and
cwde
movs
jo
mov
jl
cmc
and
cmp
jl
je
hlt
mov
outs
xchg
scas
sar
imul
jge
mov
dec
call
(bad)
push
retf
xor
sar
adc
jmp
jg
pop
retf
fstp
call
cmp
push
je
mov
mov
mov
cmp
inc
nop
clc
adc
pop
jle
test
push
fistp
or
fisub
xor
sbb
mov
and
arpl
fcmovbe
xchg
cmps
adc
repz
cmp
cmps
outs
dec
aaa
xor
not
sbb
inc
les
clc
push
jns
test
push
fstp
sub
sub
pop
(bad)
xchg
sub
fdivr
imul
sub
aad
aas
and
mov
xor
add
mov
push
neg
pop
mov
push
push
push
cmc
sbb
jl
push
nop
pop
js
(bad)
mov
mov
in
movs
test
and
sub
sub
and
mov
repz
ds
push
bound
jns
ins
clc
push
mov
mov
sbb
sub
iret
lods
sub
and
mov
fs
sbb
and
and
xchg
add
dec
jmp
mov
adc
cwde
or
out
repz
in
xchg
(bad)
scas
push
(bad)
aam
jmp
popf
adc
ret
adc
sub
and
jecxz
jae
(bad)
cmp
popa
in
jno
pop
jp
dec
into
leave
push
in
mov
sbb
push
scas
into
mov
popa
jge
mov
or
adc
sub
in
vpmadd52luq
out
or
xchg
inc
mov
sub
sti
inc
imul
sbb
into
cwde
cmp
test
leave
adc
int
jmp
in
fsub
fwait
xchg
movs
(bad)
or
add
std
pushf
fwait
and
es
cmp
dec
ss
jmp
xchg
cmp
add
and
mov
adc
and
aaa
inc
into
pop
in
pusha
loopne
cdq
fimul
dec
ins
loope
sub
ret
or
jecxz
sub
outs
jbe
push
outs
pop
or
pushf
inc
scas
pop
ins
push
(bad)
push
cmp
mov
inc
out
pop
cmp
sub
xor
es
jle
fsubr
mov
jmp
jns
dec
nop
xor
mov
adc
leave
bound
inc
cmp
xor
popa
enter
lods
push
stos
lods
inc
mov
aas
push
dec
push
jmp
inc
call
xchg
dec
push
pop
sahf
cmp
in
and
out
cmp
movs
jge
adc
fwait
or
lahf
sti
clc
(bad)
adc
mov
cmps
push
and
add
addr16
cdq
jmp
(bad)
jle
inc
out
mov
mov
vzeroupper
dec
add
jle
jecxz
retf
les
mov
inc
loopne
fnstcw
jno
hlt
mov
adc
inc
stos
add
adc
dec
mov
test
xchg
(bad)
sbb
jl
repz
mov
jecxz
pushf
adc
sbb
int3
outs
ucomiss
(bad)
sti
sbb
in
adc
push
xchg
bound
loop
dec
inc
in
(bad)
inc
and
mov
sahf
fistp
xchg
cld
std
xor
and
loopne
add
fcmovbe
xchg
popa
push
inc
or
iret
cmp
xchg
sub
xor
dec
fwait
ret
nop
mov
adc
xor
mov
and
out
inc
cli
jge
mov
jmp
fisub
pop
add
imul
xor
inc
adc
stc
pop
fmul
fild
mov
ds
mov
mov
test
pop
inc
mov
or
dec
les
inc
sbb
in
out
or
mov
leave
jmp
loopne
int
and
aas
xchg
mov
and
jecxz
push
cmp
mov
sbb
in
dec
std
jg
fdiv
cmps
pusha
xor
sub
sar
rcr
(bad)
ja
push
dec
push
fadd
mov
ret
fadd
inc
push
adc
in
int3
push
mov
and
xor
mov
pop
or
aad
repz
mov
ss
outs
mov
mov
ins
or
xchg
and
scas
mov
mov
and
in
jae
lods
outs
sbb
fmul
jge
mov
cmps
imul
xchg
shl
xor
or
push
les
mov
mov
pop
push
adc
sti
retf
pop
cmp
push
xor
mov
loope
add
pusha
loopne
nop
frstor
jl
jne
fnstsw
das
push
xchg
iret
ja
mov
inc
xchg
test
mov
and
dec
sub
out
inc
pop
sbb
call
les
add
mov
mov
sar
adc
and
(bad)
sub
lds
inc
jecxz
es
mov
cmps
iret
je
xlat
mov
xor
or
ds
or
call
test
shl
out
pop
(bad)
bound
xchg
pop
fcmovb
mov
out
mov
dec
cmc
inc
test
ret
ja
hlt
movs
inc
stos
jns
data16
and
fucomp
dec
dec
iret
inc
sub
mov
fnstcw
pop
es
xchg
jne
and
dec
sbb
inc
cmp
clc
mov
(bad)
clc
retf
out
or
cld
leave
mov
xchg
(bad)
jl
push
fwait
mov
stos
ror
xor
call
addr16
mov
fs
push
sahf
pop
and
fadd
lock
adc
fs
dec
add
sub
nop
sbb
aaa
add
out
dec
add
inc
outs
mov
add
and
push
pop
out
pushf
not
xor
aas
lods
clc
jnp
fwait
jg
mov
mov
(bad)
das
out
jae
dec
and
inc
movs
push
clc
and
jnp
pushf
pop
xchg
add
imul
mov
push
stos
call
mov
cmp
mov
test
popf
or
mov
out
hlt
mov
mov
bound
and
cmps
mov
add
ss
add
mov
or
outs
add
push
inc
or
or
mov
xchg
repz
push
lahf
xor
(bad)
xchg
repz
mov
sbb
inc
and
mov
adc
call
lock
push
jbe
iret
add
mov
mov
jle
push
dec
call
or
(bad)
out
and
mov
push
int
mov
movs
mov
adc
xchg
je
xchg
pop
pop
jno
ret
in
mov
arpl
adc
mov
sti
and
xchg
add
or
mov
in
xchg
jbe
push
jbe
scas
adc
inc
add
popf
mov
jle
sbb
sub
lods
dec
mov
add
jmp
push
inc
fisttp
dec
addr16
rol
lock
push
cmps
gs
test
jne
jg
push
push
cmps
xchg
push
xchg
add
add
inc
in
push
in
jbe
icebp
je
xor
inc
pop
sub
mov
pop
or
xor
mov
mov
std
jl
jmp
push
jb
and
lods
mov
adc
dec
outs
pop
out
shl
mov
bound
sub
or
push
xchg
fstp
push
call
scas
out
mov
push
(bad)
fstp
xchg
aaa
lods
jg
mov
das
xchg
and
fiadd
lods
or
shl
and
jg
and
mov
sti
mov
push
aam
rcr
int3
cmp
add
int3
pop
repz
enter
mov
xor
mov
ins
(bad)
mov
test
rol
add
out
inc
cs
retf
out
add
ja
push
sub
jle
pop
push
mov
int3
pop
frstor
adc
cmp
fisubr
and
cmps
or
ret
data16
xor
mov
mov
ins
adc
out
adc
stos
lock
mov
push
sti
adc
mov
ficom
jns
xor
dec
iret
stc
mov
mov
in
outs
mov
arpl
sub
aas
jge
pop
xor
cli
jp
and
fcomi
mov
pop
lahf
xchg
dec
push
aam
fist
inc
mov
pushf
nop
xlat
loop
cld
in
cmp
std
iret
hlt
mov
xchg
popa
aam
in
sbb
or
mov
push
sub
nop
in
sbb
xchg
xor
pop
(bad)
daa
(bad)
sbb
ins
adc
in
pusha
pop
and
pop
mov
mov
bound
lahf
out
loopne
ins
(bad)
mov
dec
leave
push
adc
in
mov
dec
aad
cmp
std
push
out
mov
pop
or
and
hlt
pop
(bad)
inc
sbb
mov
leave
push
push
dec
or
jmp
cmc
icebp
inc
xor
pop
dec
sub
(bad)
(bad)
cli
xchg
sbb
mov
ret
jmp
(bad)
fs
push
adc
xor
rcr
nop
shl
or
push
mov
ror
lahf
div
push
mov
jno
clc
(bad)
mov
mov
pop
and
sub
adc
jne
popa
sbb
push
lahf
xchg
sub
jmp
cmp
inc
xor
retf
add
jmp
and
xor
add
and
stos
aam
mov
ins
shl
in
or
cwde
mov
fadd
stc
jg
(bad)
loopne
fstp
mov
xchg
cmp
ret
sbb
test
movs
and
out
loopne
jg
adc
jbe
aam
mov
and
inc
cmps
shl
call
jno
fisub
sbb
xchg
push
push
scas
call
outs
test
test
call
ds
and
ja
pop
fldenv
iret
lea
in
cli
pushf
dec
(bad)
dec
cld
addr16
cmps
std
shl
jbe
or
lds
push
loop
xor
sub
cld
mov
mov
aas
push
xchg
ret
jg
adc
fnstenv
adc
shl
xchg
or
popf
test
gs
mov
mov
in
shl
cmp
outs
mov
sbb
inc
cmp
ror
ja
mov
retf
lahf
arpl
lea
test
or
out
jne
nop
iret
sbb
loopne
dec
mov
xchg
bound
mov
and
mov
mov
or
int
clc
push
jp
xor
mov
mov
xor
(bad)
sbb
dec
push
adc
xchg
test
add
(bad)
adc
in
push
in
repnz
xchg
mov
pop
dec
push
aad
xchg
out
ins
mov
push
lahf
or
xchg
repnz
repnz
push
add
jo
les
mov
adc
popa
adc
clc
ror
and
and
or
jge
mov
aaa
stos
sub
pop
adc
(bad)
addr16
pop
setg
pop
add
ror
test
push
dec
dec
sub
retf
retf
hlt
push
dec
push
cmps
jb
movs
adc
pusha
jno
lock
mov
outs
cld
add
das
cmp
dec
pop
mov
mov
add
stos
sub
stos
cmp
stos
arpl
popf
out
inc
iret
jle
imul
pop
sub
icebp
adc
xor
jg
add
out
(bad)
pushf
repz
movs
adc
addr16
sub
xor
addr16
inc
repz
or
fist
lds
or
rcr
dec
scas
popa
mul
(bad)
lock
data16
dec
or
aad
xchg
push
dec
pop
push
jmp
idiv
pop
fwait
adc
fisttp
adc
sub
mov
pop
mov
or
add
sbb
mov
or
cmps
xor
ret
fnstenv
sar
and
xchg
xor
cs
cmp
(bad)
sbb
mov
sbb
aam
jecxz
jae
(bad)
(bad)
outs
cli
aas
sub
imul
pop
mov
pop
jmp
iret
mul
push
cmp
sbb
and
mov
xchg
inc
sahf
fld
icebp
add
and
dec
lea
pop
pop
adc
xchg
jle
pop
mov
lock
mov
sub
cmp
arpl
xchg
cmp
jecxz
sti
(bad)
in
mov
or
test
outs
mov
jbe
pop
push
fst
call
out
cmp
lea
aas
ret
in
or
ret
cld
loop
das
cmp
add
repnz
(bad)
dec
mov
pop
xchg
pop
cmp
pop
pop
dec
lods
out
mov
movs
mov
sub
inc
lea
xor
gs
cmc
fwait
xor
cld
maskmovq
test
fcmovnbe
inc
aad
stc
in
cmps
lds
lahf
hlt
cli
mov
popf
xchg
and
fld
push
mov
sub
jne
imul
dec
cli
xor
push
add
and
sti
cld
and
(bad)
scas
cld
(bad)
popa
push
mov
loop
dec
icebp
or
mov
mov
cmc
out
std
ins
iret
inc
rcl
rol
out
xor
cmp
pop
cmp
fld
xchg
hlt
mov
push
mov
ins
fisttp
mov
retf
xor
mov
imul
fs
jmp
sbb
daa
push
sub
dec
and
fnstcw
inc
cmp
push
sub
pop
push
imul
jb
test
dec
xchg
(bad)
add
adc
sbb
or
jg
retf
mov
sub
pop
dec
leave
or
mov
aad
mov
pop
mov
clc
rol
push
ins
cmp
sbb
dec
sahf
xor
dec
mov
inc
mov
repnz
and
loop
inc
test
mov
pop
mov
out
xor
jg
adc
pop
out
xchg
mov
cmp
mov
pop
call
jmp
loope
mov
loope
lods
pop
ja
dec
ss
ins
xchg
icebp
sbb
cdq
out
add
and
scas
cli
mov
pop
repnz
ins
xor
xor
cmps
ins
pusha
xchg
ftst
int
push
add
xchg
rol
das
test
xchg
aas
xor
sbb
test
mov
sub
lahf
sbb
into
adc
ja
adc
pusha
(bad)
mov
rol
inc
int
adc
push
aam
pop
ins
xchg
sbb
in
jbe
add
enter
dec
mov
adc
loop
adc
nop
inc
jg
sub
repnz
cmp
out
aad
sub
sub
cmps
mov
fsubr
mov
adc
outs
push
inc
loopne
outs
in
xchg
cmp
cmp
push
and
addr16
xlat
fsub
and
into
sub
mov
cmc
stc
push
adc
push
fcomp
movs
sti
xor
das
mov
cmp
sub
sbb
and
jmp
fs
cmp
repnz
cmps
mov
movs
enter
fwait
cmps
pop
cli
xchg
sub
push
xchg
clc
jmp
inc
push
test
xchg
dec
int3
cld
sub
movs
adc
jb
inc
fnstenv
cmp
cmp
push
jle
pop
repz
hlt
push
push
push
mov
push
loop
scas
(bad)
xor
or
aam
sub
push
aaa
push
push
ficomp
retf
adc
call
movs
aad
test
test
out
lods
or
xchg
xchg
and
outs
call
loope
stc
xor
and
retf
cmc
outs
mov
cli
jecxz
int3
jns
xchg
xchg
fstp
xor
and
loope
lods
push
add
enter
cld
jb
leave
sub
(bad)
push
out
(bad)
in
or
inc
xchg
int3
mov
enter
clc
es
gs
jle
fwait
in
cmp
loope
shr
(bad)
leave
push
imul
or
push
jbe
lds
ret
and
stos
inc
enter
pusha
dec
cdq
pop
cmp
leave
sbb
loopne
fnstcw
jmp
jp
out
xor
ret
fsubr
pop
pop
adc
bound
mov
pusha
cmp
push
fild
fwait
or
add
fs
adc
outs
xchg
lods
fst
pop
push
push
sbb
or
adc
mov
aaa
mov
(bad)
xor
dec
xlat
out
movs
mov
cmp
pop
dec
adc
scas
lea
cmp
bound
or
jo
repz
mov
xchg
daa
pop
mov
cld
dec
push
repz
fstp
out
bound
js
in
adc
jg
into
push
repnz
mov
jl
mov
cmp
dec
push
xor
cdq
mov
retf
dec
mov
loopne
jno
std
pop
fdiv
(bad)
adc
test
shl
cmp
lock
enter
cmp
loopne
sbb
pop
les
mov
cs
xchg
add
mov
aas
fnstsw
or
cld
sbb
push
test
push
or
push
aam
jno
sbb
aas
sub
adc
jg
in
cmp
mov
sahf
outs
and
and
jge
mov
mov
dec
cmp
loop
sti
mov
retf
pop
pusha
inc
and
call
fmul
imul
mov
scas
cmc
bound
call
push
xchg
sub
retf
lods
sti
(bad)
jmp
jmp
adc
xchg
jmp
addr16
mov
retf
push
add
pop
ds
cmps
cmp
out
(bad)
pop
add
pop
scas
in
leave
sub
pop
pop
push
out
or
dec
mov
cmp
push
sbb
sub
pop
or
je
cmps
hlt
loopne
mov
sub
in
jno
mov
or
imul
out
or
cmp
mov
mov
inc
test
mov
inc
xlat
cwde
lods
pop
inc
push
dec
pushf
sub
jnp
inc
push
or
mov
arpl
push
jle
push
ret
ror
hlt
sub
adc
sbb
xchg
push
mov
dec
test
cwde
data16
sbb
mov
aaa
sbb
or
push
sbb
(bad)
call
push
pop
es
imul
repnz
jnp
adc
int
pushf
int
sbb
scas
jg
lock
sahf
jecxz
and
or
cmp
push
add
test
shl
in
add
pop
addr16
adc
les
rcr
and
push
mov
push
inc
(bad)
jmp
pop
or
xchg
jmp
out
(bad)
mov
add
or
icebp
push
xchg
push
in
shl
mov
lock
cld
jmp
loop
jmp
popa
mov
in
push
stos
imul
cld
loope
mov
mov
aam
scas
jl
hlt
mov
cmp
jl
pop
jae
hlt
out
shl
mov
dec
fst
cwde
dec
fwait
add
push
lods
dec
pop
cwde
mov
data16
cdq
icebp
mov
loop
shl
push
inc
xchg
out
pushf
and
sbb
in
or
sar
jb
fld
outs
or
sahf
cwde
or
push
mov
aaa
mov
inc
fadd
xchg
sbb
cdq
adc
ins
int3
and
xor
ds
jecxz
fwait
imul
dec
fbstp
mov
inc
pop
fmul
or
lea
sub
loop
lock
jecxz
les
hlt
sbb
out
outs
dec
enter
movs
sub
jb
cmp
in
mov
push
je
mov
pop
jo
pop
add
mov
jg
fadd
sbb
aad
sbb
fdivr
rcl
ss
clc
arpl
fsub
jbe
cmp
cs
hlt
xchg
in
push
(bad)
mov
cmp
aam
add
push
push
nop
push
or
mov
pop
jne
int
ins
imul
hlt
mov
mov
xchg
and
cli
cmc
and
ret
fiadd
hlt
les
xchg
out
pop
out
mov
mov
mov
xchg
inc
mov
xchg
cld
dec
int3
cli
clc
adc
aam
arpl
arpl
aaa
xor
call
jno
loop
lahf
dec
and
les
pop
out
mov
push
das
lods
push
movs
jmp
inc
lods
add
jns
sub
adc
ins
(bad)
xchg
mov
or
(bad)
jmp
push
inc
mov
cmp
cmp
xchg
push
out
xor
rol
jns
push
in
add
mov
dec
mov
dec
lea
or
(bad)
jge
ffree
loope
adc
dec
jb
pop
(bad)
jmp
jae
adc
jae
out
mov
adc
aaa
int
mov
setns
outs
leave
mov
lods
pop
dec
nop
push
xchg
daa
repnz
jbe
bound
and
into
dec
cdq
adc
sbb
mov
movs
daa
stc
fist
mov
repz
xchg
imul
or
ja
sbb
push
xchg
aad
adc
das
aas
mov
pop
in
dec
jo
jo
rcr
mov
adc
enter
inc
mov
int3
fbstp
test
test
fist
dec
int3
jns
push
jle
xchg
xchg
call
push
jmp
call
das
popa
mov
add
je
lock
fucomip
jle
ins
fwait
icebp
retf
pop
out
not
jmp
aad
pushf
ss
fistp
call
ins
mov
cmps
jle
jnp
shr
or
or
mov
mov
test
(bad)
ds
pop
ret
push
cmp
mov
cmp
jbe
test
adc
cmp
xor
mov
fnstcw
in
xor
or
std
(bad)
movs
lea
(bad)
outs
pop
add
fsub
adc
pop
jb
lahf
add
mov
in
fisttp
dec
cmps
scas
sub
cmp
(bad)
cmc
inc
pop
outs
adc
push
sub
jmp
cld
and
(bad)
aas
mov
bound
cmp
or
sbb
leave
(bad)
or
(bad)
fimul
sbb
rol
aas
lods
aaa
push
dec
loopne
in
movs
lahf
sahf
jmp
push
aas
dec
out
(bad)
mov
dec
mov
fisubr
xor
inc
dec
test
and
idiv
imul
push
lods
int3
jbe
mov
sub
and
jno
ret
(bad)
(bad)
aaa
aam
dec
sar
pop
mov
xchg
mov
push
rol
aad
xchg
retf
clc
std
adc
(bad)
sub
das
scas
cdq
pop
or
xor
in
adc
and
js
dec
pop
jno
(bad)
in
dec
sub
sbb
call
push
lock
cli
and
out
xchg
sar
lods
pop
sub
xchg
adc
jp
js
scas
or
imul
(bad)
js
add
mov
push
push
inc
popf
sahf
xchg
jnp
add
sar
xchg
sbb
push
out
or
lods
pop
jo
or
push
out
push
sar
push
add
xor
push
jbe
and
mov
(bad)
push
xchg
lea
adc
and
cmp
jl
mov
xor
scas
mov
retf
data16
gs
cmps
shl
cli
iret
ja
mov
jmp
(bad)
pusha
sub
imul
and
jecxz
shl
inc
icebp
imul
mov
sub
fbstp
xchg
mov
ja
mov
daa
jle
repz
or
jecxz
int3
jbe
sbb
add
and
stos
shl
cs
(bad)
jle
inc
pusha
xor
ret
add
imul
dec
(bad)
out
shl
sub
mov
(bad)
cld
mov
gs
es
movs
lea
(bad)
(bad)
sub
or
xchg
pop
stos
xchg
jmp
addr16
mov
shl
mov
mov
sub
sbb
mov
jmp
pop
xchg
rol
jmp
test
ror
cmp
lahf
adc
or
pusha
add
daa
mov
mov
aad
and
xor
out
dec
movs
test
jg
cwde
jo
lods
lock
sar
jg
sbb
push
hlt
popa
xchg
popa
mov
sti
or
mov
xchg
les
fsub
mov
xchg
cdq
pop
jo
pop
ins
or
xor
jmp
ds
mov
retf
jmp
mov
(bad)
mov
aam
adc
stc
fidivr
pop
sbb
mov
inc
cli
(bad)
gs
nop
and
inc
pop
sbb
data16
adc
or
jns
icebp
xchg
clc
cmp
and
addr16
and
retf
dec
popa
add
into
cvttps2pi
inc
test
inc
std
jne
push
cmp
pop
scas
and
mov
mov
mov
pop
xchg
popa
mov
test
fild
movs
std
cdq
bound
xchg
mov
pop
sti
sub
cmp
sbb
lods
fdivr
jae
or
ss
shl
imul
popa
xchg
daa
push
add
loop
clc
add
lods
jg
ficom
out
ins
(bad)
mov
inc
adc
add
push
dec
repnz
sbb
retf
sub
mov
cld
mov
and
ss
add
cmp
fstp
into
in
jmp
cmp
fcomp
add
outs
push
dec
in
stc
pusha
rcl
adc
add
jnp
(bad)
stos
cmps
shld
lock
jmp
dec
imul
cmp
out
cmps
jmp
ja
or
and
lea
ins
pop
leave
mov
pop
cmc
imul
push
jl
push
adc
or
ja
cmps
les
mov
call
ret
enter
and
mov
shr
pop
cld
adc
jecxz
mov
jp
fs
xlat
mov
mov
lods
sub
lock
xchg
sub
mov
xor
inc
popf
cwde
jmp
sbb
sbb
push
pop
mov
and
xlat
push
nop
iret
sub
bound
sub
wrmsr
mov
int
cmp
fld
mov
inc
sbb
mov
in
mov
mov
xchg
dec
out
retf
inc
dec
ss
push
(bad)
cmp
lds
leave
mov
mov
out
mov
lock
cmp
inc
stc
adc
pop
push
cld
adc
adc
xor
dec
sbb
pop
and
or
xchg
xor
mov
sub
pop
mov
popf
movs
or
dec
cmp
mov
xor
sbb
pop
jl
outs
(bad)
adc
jns
neg
dec
sbb
sbb
mov
je
xor
inc
pop
adc
ss
cmp
cmc
xor
das
mov
repz
xchg
outs
and
call
mov
xlat
mov
ficomp
push
loop
push
sti
stc
xchg
mov
fiadd
add
out
push
popf
stc
sbb
jbe
xor
sub
cmp
outs
popf
pop
fstp
scas
jae
cli
out
or
mov
inc
and
inc
or
in
add
int3
sbb
into
aad
std
fadd
out
inc
test
(bad)
frstor
das
retf
push
or
rol
sub
pushf
test
dec
jge
(bad)
cmove
sar
jo
out
sbb
ja
cmp
push
and
xchg
in
(bad)
push
pop
loop
out
sbb
push
cmovp
cmp
mov
inc
sahf
js
adc
(bad)
leave
ror
xchg
orps
xchg
sub
jae
push
lods
in
bound
cmps
or
inc
xchg
into
(bad)
retf
hlt
enter
inc
fbld
iret
repnz
xor
(bad)
jo
fsubr
rol
jae
out
jle
cld
mov
cli
sahf
out
jnp
lea
test
cmp
jno
jns
cld
mov
shr
jge
sbb
(bad)
xchg
arpl
jmp
fcom
sbb
data16
mov
hlt
fndisi(8087
mov
fmul
mul
fmul
and
jmp
xor
adc
cmps
push
jo
inc
in
jl
and
repz
mov
(bad)
jnp
inc
jmp
adc
push
inc
push
cmp
aam
rcl
inc
shl
inc
mov
xlat
mov
test
stos
mov
in
adc
jmp
mov
fs
scas
pop
ss
shr
pusha
jne
cmp
mov
xchg
sub
push
mov
mov
jp
mov
xchg
mov
out
fmul
pop
and
jbe
mov
xchg
pop
retf
mov
in
mov
mov
test
(bad)
out
and
jecxz
mov
push
aas
pop
sub
or
dec
jecxz
sub
dec
in
cwde
sahf
adc
mov
out
mov
(bad)
push
inc
pop
push
ret
aam
or
dec
nop
popa
int
cld
pop
lods
sub
jge
imul
lock
xchg
push
add
pop
outs
mov
cmp
xchg
enter
test
jo
push
adc
nop
pop
sbb
inc
dec
pop
mov
sub
mov
jl
pushf
pop
pop
ret
outs
sti
dec
add
sbb
bound
(bad)
in
mov
sbb
jo
or
rcr
dec
pop
dec
push
lea
aas
mov
mov
test
jmp
jmp
pop
mov
pop
and
inc
add
lock
push
popa
loop
out
arpl
cli
xor
pop
hlt
loop
xchg
adc
jae
sub
push
pop
ins
(bad)
inc
ins
sti
mov
jecxz
bound
dec
cmp
and
cli
icebp
jmp
or
push
fwait
jl
sar
push
imul
aad
stos
inc
pop
(bad)
cmps
vmovd
push
inc
out
xor
pop
(bad)
cwde
mov
push
jb
dec
jno
cwde
cs
cli
push
push
push
xchg
aas
jo
imul
pop
les
sub
test
mov
add
or
loopne
ins
pusha
pop
retf
lea
mov
loope
pushf
mov
test
xchg
lds
jnp
xor
sub
push
js
add
cmps
push
add
mov
adc
xchg
push
xor
sub
imul
sbb
out
sbb
fs
clc
bound
mov
pusha
out
sub
jecxz
xchg
jns
shr
add
push
jp
sub
cs
push
pop
out
pop
inc
daa
sub
call
fild
cmp
push
repz
dec
loope
out
in
xor
mov
sbb
aad
jb
inc
(bad)
jo
mov
mov
and
dec
jg
std
and
and
xchg
ret
lods
in
sti
adc
mov
out
mov
jecxz
je
add
fs
sbb
cmp
fwait
mov
pop
inc
sbb
mov
jae
cmp
adc
mov
int3
sub
nop
add
(bad)
imul
iret
mov
rcl
xchg
xor
movs
into
jnp
jae
je
and
or
and
mov
fdivr
(bad)
xchg
dec
xor
add
push
inc
push
aad
and
cmp
mov
hlt
or
push
sub
repnz
loopne
xchg
push
dec
in
pop
sti
test
fucomp
test
xchg
ds
mov
repnz
mov
xchg
inc
popf
adc
cmps
addr16
dec
push
mov
or
pop
add
popa
vpsllq
and
stc
push
(bad)
pusha
sub
add
cmps
pop
inc
jmp
jmp
lock
out
inc
cs
push
test
sbb
aad
xchg
mov
jecxz
cmp
cmc
mov
mov
cmps
retf
sbb
pop
lds
dec
jg
popa
lods
push
out
add
sbb
loop
shl
stc
and
xchg
(bad)
mov
jge
push
mov
cs
and
xor
iret
push
fld
movs
(bad)
loope
sti
dec
popf
or
stc
xchg
jns
adc
mov
cmp
leave
ret
jns
retf
dec
dec
mov
js
imul
ins
mov
fsub
aaa
sbb
push
mov
mul
sbb
xlat
cs
inc
sub
dec
in
pop
or
dec
mov
loopne
adc
xor
clc
imul
movs
loop
push
push
push
addr16
test
scas
leave
aad
push
scas
mov
cs
push
mov
aad
push
addr16
je
out
loope
fistp
jg
xor
nop
or
scas
out
pop
mul
push
sbb
fcom
pusha
(bad)
pop
in
movs
(bad)
cs
(bad)
ds
adc
jne
pop
xchg
pop
and
movs
cs
fwait
rol
add
xor
cld
add
mov
jnp
jno
fdiv
ss
adc
dec
shl
jns
jg
aam
cmp
jg
(bad)
movs
out
and
out
data16
push
jae
cmc
(bad)
mov
out
pop
inc
jnp
jo
and
fimul
add
mov
push
inc
icebp
adc
out
nop
sub
cmp
xchg
xor
xlat
xchg
mov
imul
jg
mov
jmp
leave
sbb
push
mov
dec
(bad)
ficomp
cwde
test
jge
cmps
dec
adc
mov
sbb
sbb
jne
fcom
ret
aaa
mov
sbb
add
aam
in
push
or
mov
inc
(bad)
call
mov
jle
inc
mov
inc
mov
aam
ficomp
mov
out
and
mov
mov
lds
mov
mov
int3
inc
lahf
jmp
jmp
imul
in
fnstcw
adc
jne
add
inc
stos
scas
push
scas
out
(bad)
dec
stc
dec
pusha
jmp
cmp
mov
mov
xor
jno
push
repnz
movs
dec
inc
(bad)
mov
xchg
int3
iret
pop
imul
push
das
rcr
call
and
mov
inc
pop
mov
jnp
sbb
clc
movs
test
into
cmp
mov
fnstcw
jb
ret
aaa
or
je
imul
cmp
mov
add
fs
mov
and
popf
cmp
fisttp
ret
dec
cmp
sbb
pop
mov
cmc
push
repnz
(bad)
jmp
enter
and
add
sbb
mov
push
jo
pop
enter
icebp
out
pop
xchg
scas
jg
icebp
lahf
inc
mov
addr16
dec
dec
inc
fisttp
add
adc
push
stos
lock
shr
in
ins
sub
test
push
push
iret
stc
mov
mov
jo
cmp
mov
or
xchg
cld
stc
add
retf
jno
mov
pushw
aam
jl
(bad)
push
inc
sbb
call
xchg
jl
or
outs
push
push
dec
push
inc
mov
in
std
mov
in
ror
loope
mov
arpl
xchg
mov
sar
fmul
xor
popf
sbb
jnp
jo
dec
(bad)
jbe
icebp
cmc
sbb
jb
sub
mov
and
xor
xor
repz
clc
scas
int
aad
or
or
xor
cdq
hlt
cld
in
dec
das
test
inc
jo
pop
mov
mov
popa
dec
xchg
daa
loopne
xchg
dec
mov
lods
xor
outs
rol
lahf
ja
add
imul
leave
lea
sti
into
xchg
aad
xor
test
hlt
inc
iret
add
pop
jge
into
fs
inc
push
out
dec
js
pushf
ss
pop
shl
cmp
and
push
pop
pop
pop
jmp
ss
imul
jge
imul
outs
inc
jmp
test
cdq
(bad)
adc
lds
ror
stc
(bad)
jecxz
dec
add
jecxz
or
fs
push
xchg
inc
mov
in
dec
das
neg
inc
adc
fst
jae
test
jge
int
sbb
push
(bad)
or
xor
cwde
leave
mov
cmc
sahf
(bad)
xor
xor
push
mov
add
setne
mov
lods
jmp
mov
repnz
js
pop
repnz
adc
jle
into
sahf
out
cdq
jb
push
call
mov
push
fnsave
daa
mov
fmul
fstp
or
(bad)
adc
and
adc
sbb
mov
mov
mov
pop
jmp
sar
mov
bndldx
mov
add
jmp
adc
scas
bound
pop
jmp
test
pop
pop
inc
test
cmp
sahf
mov
sbb
loope
rol
xchg
sbb
push
ins
mov
outs
mov
hlt
adc
push
dec
stos
jmp
test
int3
loopne
sbb
xchg
sbb
cwde
and
pop
(bad)
jns
shr
js
push
pushf
loopne
mov
repnz
nop
out
sub
fwait
mov
or
(bad)
int
cmp
xlat
mov
loopne
js
cmp
in
daa
clc
dec
xor
pop
bound
pop
cwde
adc
dec
call
pop
mov
rcr
fwait
loope
or
aam
loopne
sub
ffree
scas
mov
adc
cmp
fsub
ja
sub
rcr
adc
mov
add
dec
popf
outs
push
clc
xchg
sti
out
dec
jo
mov
or
js
cmp
adc
arpl
add
mov
xchg
mov
dec
sahf
test
push
cli
or
imul
inc
(bad)
pop
aas
dec
(bad)
mov
das
jecxz
pop
aaa
into
shl
(bad)
mul
jae
(bad)
out
jne
sub
movs
mov
or
ja
xor
sbb
pop
dec
retf
and
jl
mov
les
cwde
pop
repnz
dec
jno
stos
sbb
push
movs
push
not
pushf
iret
lock
push
test
sahf
int
mov
sub
gs
(bad)
aaa
ret
aad
cmps
and
add
mov
add
push
daa
sar
and
add
rol
repnz
out
arpl
sti
sub
or
sahf
scas
in
dec
and
je
mov
add
out
pop
iret
aad
lods
scas
jbe
add
or
aas
stos
int3
sbb
mov
(bad)
movs
adc
mov
inc
or
int3
clc
inc
mov
xor
cmp
ja
cmp
push
mov
jmp
cmp
mov
push
icebp
fcom
xor
pusha
nop
add
sbb
aas
int
sti
movs
jne
jo
sbb
lods
push
rcr
imul
fs
mov
inc
cmps
std
push
hlt
loope
cmp
hlt
cmps
std
xor
scas
jmp
sbb
inc
cli
add
jno
xchg
ror
mov
xor
mov
sub
outs
mov
cmp
(bad)
pop
xchg
inc
fwait
cmp
sub
mov
cmp
icebp
inc
and
into
sti
cld
stc
push
xchg
add
sub
cmp
fisub
cwde
push
xchg
cwde
push
shl
jae
xchg
aam
(bad)
xor
or
pop
add
call
shl
dec
xor
dec
mov
shl
loop
aaa
nop
sbb
outs
out
push
xor
push
outs
das
cmp
loope
(bad)
pop
lods
and
movs
dec
fbld
into
dec
inc
call
adc
in
cmps
jns
lods
imul
push
out
add
push
jb
lds
push
pop
test
push
or
sbb
jno
scas
aad
push
xchg
cmp
cwde
inc
sbb
adc
or
add
add
pop
aaa
mov
(bad)
cmps
loopne
movs
inc
not
cli
or
xchg
pop
test
add
dec
sub
add
(bad)
jmp
mov
lds
fld
inc
xchg
adc
xchg
pop
daa
push
xlat
and
inc
into
stos
retf
sbb
pop
inc
cmps
or
xchg
pop
sub
rol
adc
out
cwde
out
arpl
sbb
mov
add
add
xor
out
push
adc
(bad)
gs
rol
mov
mov
mov
sub
retf
in
and
adc
jge
push
mov
dec
add
inc
xor
mov
mov
ins
adc
test
cmp
xchg
jg
cmp
out
xchg
or
jmp
mov
inc
push
jl
or
push
mov
push
lods
inc
cmp
fdiv
xchg
xchg
scas
mov
out
retf
push
push
inc
dec
mov
cmp
inc
cld
sti
jecxz
add
repnz
add
jne
stc
fcom
and
daa
jno
xchg
retf
mov
sbb
lds
loop
mov
dec
cmc
loope
test
sbb
or
(bad)
push
fisubr
hlt
inc
sub
aaa
test
movs
popa
and
int
in
ret
mov
leave
inc
int
cmps
repnz
in
mov
out
mov
out
xor
les
xlat
int
test
ins
(bad)
int
and
(bad)
lds
mov
sbb
dec
retf
pusha
popa
call
pop
dec
repz
push
scas
in
cld
or
aam
jae
pop
neg
cli
bound
inc
push
cs
mov
nop
ret
pop
push
mov
js
push
icebp
push
xchg
es
jne
clc
out
sub
adc
dec
xchg
shr
aaa
retf
sbb
mov
or
xor
or
add
add
pop
jne
jbe
retf
addr16
inc
js
aas
cmps
outs
fimul
xchg
cmp
cmp
add
js
popa
sub
clc
test
mov
and
mov
popa
push
cmp
dec
inc
fcom
test
test
(bad)
lods
pusha
jle
cmps
neg
mov
xchg
movs
xchg
loope
call
inc
sbb
jle
mov
lahf
xor
jmp
(bad)
in
and
xchg
dec
fadd
sar
jmp
cmps
cmp
add
jmp
jl
jne
out
jge
aam
and
cmp
imul
push
or
(bad)
mov
fimul
sub
loope
leave
jecxz
mov
mov
outs
dec
add
lods
push
or
and
repz
movs
adc
pop
outs
mov
fwait
cwde
push
je
pop
test
les
or
bound
mov
mov
dec
cmps
jmp
pop
cmps
pcmpgtd
loop
mov
pushf
cdq
sub
add
dec
fwait
inc
inc
ret
into
or
sub
lods
mov
rcl
lock
sub
das
ror
les
pop
inc
into
sbb
jmp
sub
jp
and
or
push
push
add
in
push
(bad)
mov
mov
mov
add
pop
xchg
pop
xchg
jmp
icebp
xchg
pop
pushf
pop
in
mov
das
and
xchg
or
mov
add
pop
and
cmps
je
add
push
mov
lods
pop
movs
pop
adc
mov
test
mov
xor
(bad)
cld
inc
gs
pop
xor
and
adc
stos
cmps
cmc
jns
jle
jecxz
push
mov
lods
or
cmp
imul
push
push
(bad)
out
bound
mov
lahf
rcr
ret
adc
fsubr
aas
mov
cld
aas
stc
aaa
inc
cmp
push
pop
inc
jb
in
std
popf
loop
sahf
in
and
ins
mov
pop
add
and
mov
inc
(bad)
mov
or
leave
or
lock
scas
loop
enter
jg
(bad)
or
or
pop
leave
loop
ja
sub
rcl
fdivrp
and
sti
xchg
or
loope
adc
and
and
inc
test
inc
int
cmp
dec
test
mov
or
call
pop
mov
lds
inc
(bad)
mov
xor
xor
mov
or
rcr
(bad)
mov
xor
(bad)
mov
lds
pusha
data16
push
dec
hlt
shl
sbb
gs
popf
jmp
cs
xlat
pusha
jb
shr
mov
pop
mov
sbb
(bad)
mov
nop
jp
lea
or
shr
imul
sub
rol
frstor
mov
sbb
adc
or
ffree
loope
adc
push
sbb
dec
jmp
jp
jecxz
mov
pop
cmp
mov
ins
dec
inc
or
mov
aad
pop
mov
clc
jne
xchg
ss
inc
adc
mov
push
fbld
(bad)
sub
sub
rol
cs
push
pop
cwde
cld
scas
imul
leavew
xchg
aas
mov
pop
jmp
call
inc
sar
jmp
shl
fmul
xchg
pop
add
das
or
addr16
and
call
mov
retf
ret
addr16
fld
lahf
dec
adc
fsubr
(bad)
(bad)
or
jnp
dec
fdivr
push
jmp
leave
jp
in
fstp
iret
sub
push
pop
add
jge
ins
dec
aam
cmps
xchg
dec
mov
jnp
loopne
leave
aad
or
pop
out
mov
mov
pushf
jp
mov
into
stc
adc
mov
cmp
xor
loop
xchg
cmps
dec
mov
push
sbb
std
push
sbb
jo
jecxz
or
jp
xchg
into
lock
jae
test
dec
pop
cs
mov
rcr
push
sub
fstp
imul
shl
cmp
cmps
sub
mov
imul
xor
retf
aas
ins
fs
aaa
or
dec
imul
nop
jmp
mov
idiv
xchg
jg
push
icebp
xor
cmp
fldcw
sbb
mov
test
xchg
dec
add
idiv
loope
push
test
xchg
mov
xchg
cmps
push
movs
imul
jno
jp
dec
xor
call
adc
imul
mov
jb
shl
in
inc
imul
pop
stc
call
inc
sub
jae
clc
mov
push
and
in
inc
ds
inc
add
gs
xchg
dec
mov
std
test
pop
push
dec
xchg
shl
and
jae
add
(bad)
cwde
xchg
and
add
cmps
inc
jge
adc
xchg
fisub
les
cli
adc
loopne
sbb
rcr
and
push
adc
mov
mov
mov
push
push
sbb
jno
inc
cdq
loope
or
cwde
mov
and
popf
test
and
rol
arpl
push
pop
sub
dec
cmp
jns
sub
pop
fsubr
adc
fist
sbb
test
inc
jge
ret
xchg
in
addr16
inc
push
in
xchg
nop
or
sub
ret
ds
stc
sub
push
cmp
add
leave
lock
xchg
pop
push
(bad)
aas
push
ins
mov
cmps
retf
sub
pop
mov
leave
inc
or
sub
nop
inc
add
jnp
sbb
pushw
(bad)
mov
inc
mov
add
cwde
pusha
xchg
sbb
bound
pop
xchg
mov
mov
inc
ins
dec
sbb
fidivr
or
(bad)
adc
mov
jbe
lds
out
push
add
ret
jge
addr16
fdiv
stos
aad
div
std
(bad)
aad
(bad)
imul
sti
or
mov
push
sub
iret
push
dec
push
inc
sub
xlat
mov
mov
and
pop
sbb
jle
mov
test
daa
inc
rcr
add
pextrw
adc
mov
cmp
inc
pop
in
pop
int3
mov
add
(bad)
ss
aam
sbb
ds
xchg
sar
out
sar
push
dec
sbb
mov
sub
call
jb
scas
inc
hlt
outs
pop
inc
ins
popf
cmp
add
mov
daa
mov
out
arpl
imul
aam
test
or
movs
mov
ret
push
cmp
stc
cli
es
rcr
lods
and
xor
rcr
mov
xor
in
push
fmul
scas
and
dec
cmps
sbb
xor
mov
sub
stos
xchg
fadd
and
stc
inc
cld
sub
pop
mov
iret
push
mov
int3
in
loope
in
movs
out
add
lock
sti
jbe
ret
push
push
pop
pop
int3
jae
cmp
retf
dec
pop
pop
push
fimul
mov
sub
ja
div
fcom
lea
fstp
or
mov
imul
mov
sbb
jne
push
mov
push
fisubr
xchg
xor
push
or
loopne
jmp
pop
jmp
iret
push
(bad)
xchg
out
dec
add
icebp
inc
fwait
sahf
jmp
shl
aam
jecxz
rcr
mov
arpl
cwde
adc
sbb
mov
pop
sbb
xchg
jmp
sbb
cmp
and
icebp
pushf
mov
and
adc
xor
mov
leave
mov
loope
jg
xchg
or
xchg
pop
dec
jle
(bad)
stc
xlat
fsubr
ins
mov
movs
push
bound
(bad)
cmp
jb
fiadd
add
mov
push
inc
movs
mov
push
mov
push
push
ret
iret
dec
push
das
mov
and
push
fwait
mov
jo
push
mov
mov
jnp
push
call
movs
rcr
fnstsw
jg
dec
mov
sahf
imul
cmp
push
pop
pop
addr16
inc
out
xchg
jnp
(bad)
and
sbb
in
cmp
in
mov
lahf
mov
xor
pop
jno
inc
xor
add
addr16
lahf
rcl
movs
or
add
movs
adc
in
shl
sbb
sbb
push
or
pop
mov
pop
jnp
cli
mov
mov
sbb
push
mov
leave
adc
scas
cmp
add
sub
ror
addr16
out
dec
push
push
fcom
jmp
and
sub
pop
(bad)
iret
fcmove
mov
inc
or
dec
mov
and
std
iret
(bad)
sub
test
fistp
pop
(bad)
cld
xchg
sbb
pop
push
sbb
mov
imul
sbb
mov
xchg
cmp
mov
cmp
xor
popa
(bad)
xchg
shr
dec
or
or
lea
rcl
popf
mov
add
out
mov
inc
adc
adc
mov
add
out
mov
xchg
push
int
lods
inc
in
fs
repz
inc
mov
push
daa
lods
pop
push
mov
xchg
push
icebp
dec
sbb
add
push
add
adc
dec
mov
(bad)
dec
in
push
std
cmps
mov
aaa
push
cld
test
loope
push
xlat
leave
and
inc
pop
pusha
adc
sbb
jg
mov
push
and
mov
out
push
daa
loop
pop
dec
jb
pop
push
xlat
xor
mov
cs
or
and
icebp
adc
test
and
xor
xchg
addr16
jo
add
mov
nop
sar
imul
daa
pop
(bad)
mov
test
out
push
call
je
shl
adc
lods
nop
pop
add
mov
loopne
dec
add
lods
lods
adc
dec
inc
mov
dec
inc
dec
cmps
cld
sbb
lds
mov
retf
call
ret
xchg
movs
ds
inc
jecxz
imul
cmp
sbb
pusha
mov
cld
shr
shl
loope
call
jle
add
fldcw
mov
cmc
mov
fist
js
int3
jle
repz
jg
ins
loop
sub
xor
push
xchg
sub
push
sub
(bad)
frstor
mov
mov
aam
inc
loope
setle
ja
pop
dec
mov
xchg
sbb
ins
adc
add
out
cmp
xchg
push
push
add
arpl
jae
pop
sbb
popf
sub
int
inc
fwait
sbb
and
pop
or
out
fisttp
icebp
xchg
sub
out
fisubr
mov
sub
int
add
fld
stos
cmp
les
mov
leave
in
jae
jl
jmp
xor
ja
sbb
addr16
mov
test
jecxz
sbb
fwait
push
push
in
and
fnstcw
jmp
sbb
cs
retf
leave
dec
test
sahf
push
retf
clc
add
xor
add
loopne
sub
mov
pop
repz
outs
call
and
push
pop
cli
jg
pop
cmps
dec
imul
mov
sub
mov
loop
sub
mov
xor
aam
mov
xlat
mov
test
xchg
test
fst
pop
and
fld
jmp
fsubr
xchg
call
test
lds
and
jecxz
stc
add
add
test
test
xchg
jnp
aam
mov
dec
enter
mov
or
inc
lods
mov
pusha
fstp
mov
hlt
ds
add
ret
pop
(bad)
test
sub
lds
jp
sbb
xchg
loopne
inc
in
popf
(bad)
dec
dec
retf
(bad)
je
dec
cmp
jns
xchg
xchg
pop
jne
dec
jg
cmc
add
jecxz
stos
cmp
push
jp
test
sti
jbe
inc
mov
mov
dec
mov
cmps
push
scas
mov
cmp
sub
mov
mov
push
ins
xor
pop
call
cmps
adc
movs
cdq
clc
cmc
sbb
repz
faddp
inc
repz
add
jmp
gs
cdq
cmp
cwde
mov
xor
inc
and
jo
push
and
test
fist
loop
clc
test
out
push
pop
int
rol
jecxz
push
adc
out
xchg
add
ins
mov
sti
xchg
mov
and
mov
call
int
inc
(bad)
xchg
out
aam
pusha
icebp
ds
adc
fstp
icebp
and
mov
(bad)
jo
pop
aas
inc
fucomip
dec
sbb
daa
mov
sub
daa
fisttp
xchg
or
cmc
outs
call
mov
arpl
push
into
shl
popf
adc
sbb
cmp
mov
(bad)
jno
jno
in
inc
std
ds
sbb
in
gs
jl
data16
out
push
inc
cmp
dec
xor
xor
scas
adc
jg
ret
sub
idiv
and
push
ret
retf
mov
pop
mov
fmul
dec
in
mov
inc
sbb
cmp
imul
jmp
ja
shl
jg
pushf
pop
ficom
jo
mov
bound
rcl
enter
call
mul
push
cmp
jae
cmp
pop
scas
mov
test
js
mov
ss
shr
(bad)
test
test
inc
bound
mov
xor
push
jne
in
mov
adc
cmp
xchg
jp
lds
fdivr
jbe
lock
lods
sub
dec
mov
fmul
js
pop
sub
ds
stos
xchg
addr16
jb
pop
jbe
lods
mov
push
aam
cmp
cmp
xchg
movs
into
adc
inc
jg
movs
in
mov
xchg
xor
dec
pusha
loop
setle
dec
dec
sbb
ret
mov
pop
sahf
outs
cdq
cmps
rcr
add
inc
(bad)
jge
(bad)
aas
cmps
dec
push
mov
mov
xor
inc
mov
add
mov
adc
fsubr
push
rol
or
fidiv
leave
or
mov
and
cmp
test
jns
(bad)
in
mov
mov
dec
aas
(bad)
aam
or
jno
ss
in
dec
mov
ficom
dec
push
xor
mov
dec
lods
xor
shl
or
push
cdq
pop
add
dec
outs
cmps
test
inc
(bad)
stos
sbb
ja
in
and
mov
pop
mov
or
xor
add
xor
push
push
in
xor
mov
imul
ins
sub
inc
out
xchg
inc
leave
ret
ret
mov
mov
sub
add
repz
sub
add
lea
mov
out
dec
dec
jp
lahf
out
ret
es
sub
int
sahf
jmp
ret
mov
popf
dec
sbb
lock
fdivr
xchg
add
dec
leave
mov
push
(bad)
adc
sub
cld
mov
xor
out
push
or
pop
push
(bad)
stc
(bad)
aad
fcom
int
push
mov
in
and
ret
loop
push
dec
adc
imul
loopne
inc
xchg
test
push
int
push
mov
jl
js
sbb
pop
jbe
and
push
(bad)
xchg
in
jae
nop
shl
jmp
adc
enter
ins
out
(bad)
push
stos
aam
inc
shl
test
or
pushf
xchg
test
pusha
in
push
mov
ret
push
mov
pop
inc
aaa
jbe
jns
imul
clc
push
push
div
in
cld
addr16
push
cmp
mov
mov
pushf
pop
cld
adc
mov
sub
aad
je
stos
aas
iret
jbe
cwde
jae
mov
jae
inc
add
rcr
dec
cli
fwait
dec
xchg
fld
dec
arpl
in
and
jne
aad
sbb
mov
xchg
or
aas
mov
neg
sub
push
pushf
xlat
adc
test
hlt
imul
(bad)
push
out
test
sub
mov
fist
cmps
shl
push
inc
xchg
mov
popf
int
ins
pop
fdivp
xchg
xchg
dec
loopne
jp
hlt
mov
add
pushw
test
sub
xchg
mov
adc
xor
adc
mov
je
or
sub
jne
(bad)
arpl
jne
cld
mov
sbb
add
xor
mov
cs
cmc
inc
cld
daa
ins
inc
test
cmp
(bad)
lahf
and
sub
and
dec
jmp
mov
dec
cmps
repnz
push
cs
mov
inc
stc
sub
loop
add
gs
jae
rcl
mov
jmp
push
mov
movs
sbb
pop
mov
(bad)
in
cmp
bound
adc
rcl
not
sar
bound
fild
lea
push
shl
jg
sub
cmovne
add
test
add
icebp
dec
sbb
push
mov
scas
popa
jb
xchg
int3
push
jo
jle
sub
sbb
fiadd
mov
sbb
mov
inc
sbb
inc
mov
cmovo
repz
ret
xchg
out
sbb
(bad)
and
mov
push
in
(bad)
pop
pop
cmp
mov
out
popf
pop
test
pop
mov
lock
adc
popa
loope
mov
dec
pop
dec
loop
lahf
mov
push
push
push
inc
pop
aaa
int3
sbb
add
mov
fs
dec
out
inc
push
mov
loopne
inc
pop
pusha
loop
jns
retf
adc
iret
pop
cmp
bswap
mov
mul
jae
in
pushf
xor
clc
push
sbb
adc
add
lahf
in
and
jle
jle
pop
cli
out
pop
mov
das
mov
jmp
push
rcr
pop
cmp
mov
fldenv
mov
jns
xchg
inc
or
and
jecxz
inc
mov
jno
xchg
push
pushf
adc
lss
sub
sub
lds
test
push
pushf
les
push
cmp
mov
and
push
pop
xchg
pushf
jb
inc
cmp
outs
cmp
std
clc
mov
aad
pushf
cmc
movs
pop
fnstsw
pushf
stos
and
or
lock
xor
aad
mov
mov
jae
pop
inc
std
add
hlt
cmps
jl
jmp
xor
inc
xchg
and
std
fcompp
xchg
xor
jl
and
or
das
aas
(bad)
rol
jbe
jmp
shr
repz
outs
shl
mov
sub
ins
sbb
add
xchg
sbb
es
addr16
dec
jns
cli
in
into
mov
ret
cmps
push
cmp
xchg
ret
push
push
push
cmc
xchg
cmc
sub
test
dec
mov
in
stos
dec
cmc
jmp
cmp
add
lahf
popf
mov
add
pop
dec
push
or
lock
xchg
addr16
sti
mov
xor
push
push
and
xor
movs
rol
jnp
shl
je
jmp
les
shr
(bad)
and
movs
mov
in
push
stos
mov
retf
gs
rol
jnp
ror
les
jno
sbb
fiadd
movs
aaa
mov
xor
and
dec
out
jne
mov
cli
cmc
or
pushf
or
outs
jmp
call
mov
inc
cmp
jge
mov
push
xor
loop
mov
test
push
pop
aas
arpl
mov
fcmove
xchg
jmp
pop
xchg
and
or
fisub
lea
out
jbe
scas
scas
jbe
adc
sbb
push
je
push
mov
and
jmp
mov
xchg
aas
adc
call
jl
dec
mov
dec
xchg
in
dec
ja
addr16
jge
repz
and
fisubr
and
xchg
jge
xchg
mov
ins
dec
adc
pop
loopne
inc
ds
cmp
fwait
pushf
pusha
out
(bad)
jge
push
daa
inc
inc
into
mov
mov
mov
sub
inc
jno
popa
out
mov
sub
xchg
(bad)
and
les
and
inc
and
pop
xor
ds
lods
mov
stos
adc
ds
mov
cs
pop
cmp
(bad)
xor
sub
sub
pop
push
adc
nop
test
imul
lahf
(bad)
cmc
cmp
or
sub
inc
dec
sub
ds
sahf
cmp
jb
jns
fld
in
mov
mov
jnp
cmps
aad
aad
pushf
fdivrp
jmp
imul
dec
leave
push
mul
mov
out
cmp
and
mov
lds
xor
and
push
lock
xlat
int
sub
icebp
mov
cmps
mov
daa
push
xor
std
mov
push
call
dec
or
mov
jns
cmp
arpl
sbb
dec
add
mov
push
movs
or
push
jg
add
lods
sbb
jae
out
cwde
jg
loopne
push
movs
inc
outs
inc
fcom
pop
inc
enter
push
and
xchg
std
or
xchg
cmp
inc
xchg
popa
gs
fisubr
movs
push
mov
and
fstp
pop
jge
dec
xor
cmp
inc
aaa
rdtsc
(bad)
dec
pop
sbb
(bad)
cli
add
or
shl
fisub
and
mov
fnstsw
dec
imul
cwde
cmp
pusha
xor
inc
ins
daa
mov
int
out
cmc
iret
test
xchg
rol
sbb
mov
mov
xor
add
push
sbb
mov
adc
stos
and
pop
aam
or
sbb
mov
jnp
fsubr
es
dec
shr
(bad)
push
js
mov
or
mov
jns
xor
lods
daa
ret
ds
push
cmps
sbb
xor
cmps
neg
and
xchg
push
in
sbb
push
fld
mov
pusha
shr
(bad)
mov
jbe
jns
cmp
pop
jmp
leave
jmp
pop
std
mov
pop
sbb
adc
shr
or
mov
lods
or
in
push
stos
push
lds
and
fiadd
mov
xchg
xchg
xchg
push
sub
jp
push
cmc
mov
jne
xor
or
pop
(bad)
stc
js
and
add
push
test
pop
mov
sub
jmp
jecxz
std
(bad)
mov
fisttp
icebp
push
inc
jle
add
int
es
xchg
lock
bnd
xchg
or
aas
inc
dec
or
sub
add
retf
jge
call
sar
sahf
cdq
mov
jno
jg
scas
icebp
and
and
pop
pop
dec
rcl
outs
repz
cs
call
xor
out
sti
loope
imul
add
es
cs
lahf
push
in
mov
sbb
xor
push
mov
dec
and
loopne
cld
mov
mov
addr16
push
pusha
mov
and
or
xor
inc
hlt
rol
cwde
inc
fcmovnbe
cdq
sub
das
js
xor
mov
jno
(bad)
(bad)
push
fimul
add
in
push
fidiv
inc
xchg
sub
jnp
push
push
js
jmp
loopne
push
dec
pop
mov
sar
adc
nop
stos
cmp
push
(bad)
jmp
clc
ds
bound
nop
fidiv
mov
out
adc
lods
dec
dec
dec
ja
cmps
jae
je
lahf
xchg
stos
cmp
int3
retf
arpl
inc
jno
je
test
loope
pop
xchg
fdivrp
mov
xor
std
jnp
sbb
popf
retf
nop
and
pop
movaps
fld
test
jno
sbb
xchg
ja
mov
mov
mov
ja
les
jnp
retf
(bad)
or
js
push
pop
leave
push
xor
dec
loopne
jmp
or
push
inc
adc
push
in
inc
std
std
clc
cmp
and
retf
mov
jp
sub
in
mov
fld
dec
fidivr
jmp
ins
pop
fs
aam
leave
pop
xchg
ds
popf
sbb
ficom
mov
jne
(bad)
lock
cmp
fcomp
jae
mov
jae
push
call
sbb
ret
retf
mov
in
jne
pop
push
aaa
outs
mov
push
ficomp
out
dec
jl
ror
cmp
adc
cmps
mov
outs
mov
dec
jge
adc
sbb
lock
mov
sub
cmp
loopne
sahf
pop
clc
lods
mov
xor
fild
fild
jp
test
push
mov
sbb
and
(bad)
fs
loop
xchg
add
das
xor
push
pop
fidiv
and
xchg
jbe
cli
and
fisubr
jmp
fst
mov
push
xor
mov
(bad)
cld
pop
scas
fisub
cmp
mov
xlat
out
jecxz
scas
out
mov
pop
aas
adc
daa
in
adc
jb
add
jmp
fmul
arpl
(bad)
jl
popf
das
ret
test
les
fcomp
pop
out
push
lds
jge
mov
cmps
(bad)
jns
pushf
jl
jle
les
push
call
dec
and
adc
sbb
mov
inc
loop
mov
popf
sbb
jb
cmp
jne
mov
or
in
aas
jp
lds
enter
mov
sahf
mov
aam
ds
inc
and
mov
and
pusha
les
int
sbb
fld
movs
test
push
push
test
jns
push
ret
sbb
sbb
jl
ins
pusha
repz
mov
mov
mov
repnz
das
xchg
jge
mov
xlat
js
aas
jg
push
inc
sti
fs
pop
cmps
stos
mov
pop
adc
test
iret
jl
loopne
pusha
cmps
lds
mov
les
call
movs
xor
repnz
or
and
test
xlat
(bad)
adc
push
nop
xchg
mov
ins
shl
jmp
sti
leave
add
jne
daa
cmp
mov
xor
jne
pop
mov
pop
movs
shl
fist
pop
mov
fbstp
test
es
dec
xchg
pop
xchg
pop
je
xchg
(bad)
pop
jns
or
ss
mov
mov
add
cmp
and
rcr
mov
(bad)
jmp
xchg
cwde
test
sbb
mov
mov
pop
jne
fistp
sub
loope
out
pop
adc
cmp
xchg
cmc
sar
cmp
(bad)
ds
fwait
mov
imul
retf
shr
xchg
inc
popa
movs
mov
mov
ret
mov
iret
jb
add
stc
jmp
stos
sub
call
test
movs
mov
pushf
mov
sub
shl
xor
int
nop
sub
xchg
pop
mov
ins
xchg
icebp
or
xor
cmp
ret
push
cmp
in
mov
retf
mov
div
mov
adc
xchg
jmp
in
fwait
jo
out
jl
test
sub
ins
xor
mov
cli
mov
and
pop
pop
rol
xchg
add
nop
stc
ret
xor
out
clc
mov
jb
mov
lock
push
xor
xor
mov
(bad)
hlt
xchg
(bad)
sub
test
cld
into
cli
sbb
inc
(bad)
fmul
cmp
xchg
cmp
fwait
mov
mov
sbb
pusha
and
push
out
not
jmp
dec
push
jp
mov
stc
mov
pop
in
and
fistp
cs
dec
mov
repnz
scas
mov
mov
jecxz
hlt
adc
(bad)
rcl
inc
out
add
cld
jge
test
jmp
out
pop
xchg
ja
out
adc
cmp
sub
sub
xor
inc
mov
mov
sub
jmp
sar
es
jne
stos
push
inc
xchg
or
dec
mov
add
jmp
sar
cmps
cld
and
xchg
arpl
cwde
push
adc
jp
sub
int
mov
push
mov
adc
test
(bad)
in
stos
into
push
fidiv
repz
leave
cli
outs
adc
aam
ret
cdq
pop
mov
mov
rol
xlat
xchg
movs
mov
cmps
jnp
and
lahf
je
cmp
mov
addr16
(bad)
into
xchg
retf
mov
shr
xor
(bad)
ret
dec
push
inc
or
push
sub
xchg
repz
jl
scas
imul
(bad)
mov
push
mov
push
add
aad
xchg
test
(bad)
fs
out
out
sbb
sub
ss
pop
int
jge
out
pushf
in
pop
add
ss
test
adc
fldenv
imul
push
mov
dec
ins
pop
sbb
adc
cmps
inc
cwde
ret
xchg
aam
hlt
mov
push
fwait
and
push
sahf
xlat
mov
fistp
jge
(bad)
std
fcom
lea
daa
fistp
leave
jb
xchg
cmp
push
mov
shl
jmp
mov
inc
cli
xor
inc
or
repz
and
or
retf
lods
lods
adc
jns
adc
imul
fnsave
mov
(bad)
adc
das
scas
data16
push
neg
lods
gs
aas
lock
das
ret
xor
movs
dec
ss
mov
pop
jmp
mov
push
bound
in
pop
ja
aas
(bad)
fld
stc
pop
xor
sar
mov
and
sbb
sbb
mov
call
mov
cmp
dec
daa
or
adc
adc
mul
jmp
scas
stc
mov
adc
cli
daa
retf
imul
pop
pop
fstp
jb
in
(bad)
xchg
in
cwde
push
jmp
ds
in
imul
push
call
test
iret
xor
xchg
pop
ins
push
jno
addr16
push
jo
shl
dec
inc
adc
dec
mov
loopne
sub
lea
push
ins
retf
fmul
ret
sbb
lods
je
out
sub
shl
call
mov
retf
cld
and
ds
in
rcr
imul
cmc
mov
mov
jecxz
pop
push
(bad)
ffreep
xchg
and
sahf
(bad)
mov
adc
or
cmp
cwde
aam
sbb
pusha
inc
hlt
or
jae
loopne
xchg
fldcw
sub
mov
mov
add
jg
mov
out
daa
pop
xor
fdiv
mov
cmp
jmp
inc
xchg
jl
push
and
mov
add
xchg
rol
rcr
rol
add
xor
mov
or
scas
test
cwd
fidiv
mov
xchg
pop
jo
(bad)
xor
sbb
dec
inc
(bad)
test
dec
test
pop
std
mov
stos
mov
xchg
ja
loope
push
sar
sbb
ficom
jle
mov
cmp
adc
dec
jne
push
push
test
(bad)
fisttp
jl
scas
out
sub
or
jno
xchg
xor
inc
lea
ja
and
out
pop
cs
sub
cmp
cmps
fsubr
sbb
dec
sbb
inc
sub
pushf
ja
pop
ret
mov
sbb
daa
mul
mov
lea
hlt
stos
js
repz
and
mov
jp
jno
push
stc
js
retf
xchg
sbb
pushf
and
loope
sar
loop
call
mov
fistp
test
xor
mov
add
mov
mov
std
sub
movs
movs
cmp
mov
sti
pop
jno
or
mov
aam
das
push
sub
mov
mov
test
int
in
ins
sbb
rcr
pop
cmp
pushf
or
and
imul
pop
retf
cli
out
fucomip
push
(bad)
(bad)
or
mov
sub
or
push
push
or
pop
mov
mov
ja
push
and
sub
mov
cmp
add
inc
mov
movs
jb
stos
jmp
out
cdq
stc
add
adc
or
sub
xor
jns
mov
or
aam
push
xchg
jecxz
test
sti
lods
aad
outs
cmp
sub
sub
call
sbb
bound
cmps
mov
mov
daa
sahf
pop
mov
out
jne
adc
into
pushf
xchg
push
fcomp
add
mov
bound
pop
scas
dec
(bad)
mov
dec
in
fs
adc
jmp
xor
inc
inc
push
(bad)
fbstp
push
mov
or
ins
shl
sar
mov
or
add
rcr
pop
loop
outs
jns
call
sub
sub
mov
cmps
mov
cwde
jnp
repnz
dec
outs
addr16
push
loop
xchg
cwde
pop
ficom
cmps
(bad)
adc
clc
dec
xchg
xchg
out
xchg
mov
ja
inc
mov
mov
push
and
inc
js
jnp
adc
mov
lock
pop
loope
cmp
ins
je
movs
or
jne
dec
nop
in
imul
in
lds
xlat
mov
or
mov
mov
test
sahf
pop
adc
ss
xchg
(bad)
aad
pop
inc
adc
mov
adc
or
stc
mov
scas
mov
pop
sbb
test
jbe
and
push
loope
mov
push
ror
pop
rol
jns
mov
mov
(bad)
sub
or
push
jne
mov
add
fist
pop
sti
push
mov
outs
inc
cmp
sbb
in
add
add
shr
rol
jne
dec
cmp
mov
jecxz
cmp
push
into
rol
xchg
jns
std
movs
aad
xchg
std
xor
or
loop
ds
sbb
mov
sub
movs
adc
in
icebp
je
mov
ret
jb
fist
mov
sbb
jnp
xchg
dec
(bad)
popf
std
pusha
xchg
aam
cs
ror
popa
aam
pop
or
push
jmp
(bad)
jae
frstor
stos
mov
dec
icebp
rcl
xchg
in
or
mov
(bad)
stos
fild
push
add
shl
inc
jl
sbb
dec
or
and
add
or
mov
ror
repnz
cs
leave
in
setp
(bad)
mov
jg
sbb
jbe
jne
pop
mov
mov
push
retf
adc
(bad)
rcr
jle
or
dec
mov
add
das
and
shr
jecxz
and
add
mov
stc
cmp
push
test
(bad)
and
xchg
fwait
and
mov
mov
aad
dec
rcr
cmp
add
fcomp
sub
mov
enter
cli
cmp
cmp
add
out
jbe
pop
mov
add
or
fadd
xchg
sbb
out
icebp
popa
add
(bad)
xor
jns
sub
in
call
pop
push
ror
nop
push
xchg
xchg
scas
shr
lods
fdiv
(bad)
mov
push
out
mov
in
xor
cdq
clc
addr16
pop
pop
mov
and
call
jge
and
lds
fcomp
ins
iret
or
adc
aam
addr16
shl
jge
or
pop
sub
push
scas
pop
dec
scas
add
cmps
push
or
gs
int
pop
loop
ins
mov
gs
out
inc
or
clc
add
push
das
add
inc
and
jno
sub
xchg
adc
(bad)
(bad)
stc
loopne
xchg
popf
xor
bound
push
add
push
ins
xor
cmps
jb
xor
mov
rol
fisttp
int
pop
hlt
jge
outs
fiadd
ja
ins
in
xchg
inc
inc
imul
cmp
icebp
or
pop
xchg
inc
jmp
push
je
and
adc
cmp
mov
jg
es
inc
mov
or
add
retf
or
mov
inc
cmp
pop
loopne
sub
rol
ret
in
pop
sub
repz
jno
inc
stos
das
loop
push
jae
push
cs
pushf
fst
xchg
scas
pop
add
fadd
pop
jbe
xlat
clc
sbb
pop
xor
mov
ins
sub
and
and
jno
push
sbb
adc
mov
sbb
jnp
lahf
pop
push
cwde
cli
jecxz
mov
sub
mov
jmp
repz
or
xchg
test
push
sahf
push
and
(bad)
or
cmps
int
je
cwde
data16
lea
xlat
cmp
aas
repz
(bad)
ror
movs
lods
pusha
pop
mov
or
aad
mov
(bad)
inc
sub
xchg
aas
bound
xor
adc
xor
cmc
xchg
mov
out
dec
call
cmp
arpl
inc
loopne
sar
adc
dec
mov
test
push
(bad)
sub
mov
repz
or
stos
push
aaa
je
sub
push
jno
jg
push
test
push
rcl
push
mov
mov
mov
mov
in
out
(bad)
mov
inc
sti
or
inc
mov
in
sahf
sub
cmps
sbb
jg
xchg
fld
inc
dec
ins
lods
add
or
mov
cmp
sti
stos
cmp
rol
mov
jg
(bad)
(bad)
pusha
scas
xor
xor
std
and
in
jle
imul
push
and
xlat
dec
int3
fucomp
shr
or
jmp
lods
and
vcomisd
es
aad
push
lds
aad
iret
jb
nop
ret
cdq
dec
mov
dec
and
jae
dec
mov
nop
push
dec
cmp
je
ror
(bad)
xor
jmp
clc
inc
sti
mov
xchg
mov
sahf
and
scas
inc
cmp
call
jmp
cld
(bad)
push
jge
scas
cmp
xchg
mov
sub
mov
and
ss
xor
test
inc
das
jo
ss
mov
out
mov
(bad)
ror
mov
ror
push
mov
je
sti
test
push
nop
div
inc
nop
add
stos
jo
(bad)
cld
or
mov
mov
out
out
fcmovnbe
pop
arpl
jbe
outs
jnp
xchg
adc
pop
std
jns
adc
adc
dec
cmc
dec
cs
jae
sub
jl
out
pop
ins
push
pop
jmp
cli
inc
enter
pop
imul
out
mov
mov
mov
mov
inc
push
in
daa
mov
movs
or
sub
or
xor
jo
xchg
std
cmps
sub
test
imul
mov
cmps
add
adc
(bad)
ss
inc
inc
jnp
sbb
mov
shl
ja
(bad)
pop
int
jo
dec
add
cwde
sbb
pop
(bad)
jb
rep
xlat
xor
cdq
arpl
jmp
push
int
(bad)
data16
mov
int
push
adc
stos
imul
and
xchg
mov
cmps
inc
enter
adc
sbb
addr16
mov
js
xor
test
inc
push
xchg
pop
pop
out
fldcw
sub
clc
sub
adc
pop
add
dec
loope
inc
and
test
add
in
gs
movs
sub
cmp
in
cmc
test
sub
jmp
push
dec
xor
jae
sbb
or
clc
call
shr
adc
xchg
add
add
pop
cmp
popf
and
arpl
cmp
and
push
mov
mov
aaa
lds
hlt
aaa
pop
jb
into
pop
xchg
mov
sub
adc
push
cdq
(bad)
mov
push
repz
out
into
or
push
sub
cmp
jmp
das
scas
retf
(bad)
xchg
test
xor
das
mov
sub
mov
ror
sbb
mov
or
fst
add
nop
call
mov
or
es
js
lods
adc
(bad)
fstp
out
sub
push
cli
mov
mov
add
and
mov
ror
mov
sub
add
or
push
pop
jg
lods
daa
add
and
lds
jnp
dec
cmps
sub
mov
sbb
push
mov
add
and
add
test
std
and
aas
(bad)
push
xor
daa
mov
les
sar
ss
sbb
in
outs
pushf
or
adc
push
aam
mov
jnp
clc
jno
inc
fstp
mov
shr
mov
xchg
add
test
dec
cmp
mov
adc
fwait
mov
xchg
test
into
loopne
hlt
add
es
outs
or
test
fstp
push
xor
sbb
addr16
xor
(bad)
neg
jae
mov
in
pop
fwait
je
or
(bad)
pop
fwait
out
out
push
dec
dec
inc
imul
ja
xchg
jl
add
imul
call
pop
aas
sbb
dec
fldenv
xchg
mov
ins
out
cmc
test
inc
add
add
daa
ret
jns
in
hlt
outs
xchg
lea
xor
in
imul
imul
and
pop
pop
jno
sub
jmp
lods
and
xchg
and
lods
and
repnz
dec
gs
stos
sub
xchg
popf
neg
xchg
stc
jo
dec
out
cmp
jl
push
inc
out
mov
cdq
xchg
sub
arpl
pop
sar
sahf
in
cmp
adc
or
(bad)
adc
addr16
cmps
mov
dec
jmp
sahf
out
out
pop
ret
fldcw
jecxz
sbb
jl
inc
fldenv
call
xlat
pop
movs
dec
adc
shld
jne
lds
mov
fidivr
add
aad
adc
push
pop
jmp
jle
mov
rcr
pop
pop
in
mov
push
or
ss
cmp
or
outs
mov
sbb
xchg
dec
pop
or
in
rcl
cmp
adc
and
data16
or
xchg
ins
push
cmp
cmp
and
outs
mov
sbb
jl
leave
std
cmp
call
aam
mov
iret
les
push
lahf
arpl
jne
inc
data16
xchg
jl
inc
outs
das
fiadd
in
scas
and
movs
imul
xchg
pop
dec
add
pop
movs
sbb
jge
cmp
dec
stos
jg
std
jmp
popf
mov
test
mov
sbb
movs
cmp
sub
ss
sbb
xor
or
aam
add
and
jb
or
push
(bad)
retf
sub
inc
pop
sbb
mov
mov
pop
push
inc
mov
adc
ficom
push
add
test
pop
(bad)
ds
dec
inc
(bad)
mov
mov
jl
add
pop
jae
sub
hlt
pop
(bad)
pop
mov
sbb
dec
or
test
pop
clc
sub
out
stc
ret
mov
inc
retf
jmp
jne
outs
enter
jg
jo
inc
add
mov
or
das
scas
int
dec
call
and
std
inc
fwait
popf
in
ss
stos
xchg
xchg
mov
adc
ins
jne
dec
mov
dec
jnp
imul
(bad)
cmps
stc
mov
or
shr
xchg
js
push
adc
inc
or
cmps
cmc
mov
inc
sub
dec
mov
repnz
ss
mov
repz
add
das
cmp
lahf
pushf
lods
jmp
popa
fidivr
dec
mov
sub
cmps
or
aas
pop
pop
xchg
popf
xchg
fs
(bad)
push
push
hlt
mov
retf
mov
dec
mov
push
ins
xchg
repz
lods
sahf
bound
sub
sbb
pop
push
cmp
std
adc
bnd
cdq
cld
ss
fucom
dec
jl
sub
fwait
test
lds
sub
fcom
pop
push
xchg
loopne
jl
cmp
mov
mov
aas
xchg
xchg
lods
cmp
sub
ficomp
adc
mov
xchg
repz
dec
xchg
push
das
sbb
pusha
sub
dec
jns
xchg
scas
or
xchg
fbstp
dec
mov
mov
jg
gs
push
pushf
push
lods
rol
push
push
(bad)
ins
jecxz
iret
add
add
je
cdq
stos
and
and
repz
in
ror
pusha
jbe
jmp
adc
imul
pop
es
sub
ret
lea
mov
mov
(bad)
fwait
and
sbb
inc
retf
adc
in
adc
repz
hlt
add
mov
imul
push
es
mov
xor
inc
stos
in
dec
fsubr
mov
cmps
or
pop
add
cmp
jle
aad
ins
pop
frstor
aad
cmp
sub
xchg
ins
jl
mov
cwde
cmp
in
and
jo
test
shl
imul
aad
sti
in
(bad)
inc
addr16
ret
int3
mov
out
movs
mov
addr16
fnstcw
xor
fnsave
inc
into
leave
adc
mov
jo
fmul
mov
retf
ja
mov
fs
mov
adc
push
push
dec
and
push
(bad)
push
std
out
shl
or
pop
dec
jle
(bad)
cmp
cmp
out
mov
mov
jo
mov
mov
ror
call
xchg
inc
scas
jae
gs
xor
xor
mov
or
and
mov
mov
xchg
cli
ficomp
pop
pop
rol
or
or
xor
or
test
inc
push
xor
fdivr
leave
push
push
jo
clc
jle
push
push
outs
xchg
sub
aaa
fldcw
movs
and
mov
jbe
xor
push
or
and
push
cli
mov
stos
and
aad
cmp
(bad)
and
or
icebp
lea
add
test
sub
jbe
jp
xlat
mov
dec
push
mov
std
sbb
xchg
push
sub
loope
cmp
fmul
add
adc
jns
pop
mov
int
ret
(bad)
push
jnp
mov
jp
inc
test
int3
test
xlat
loop
inc
xor
adc
or
fdiv
add
repz
fmulp
sub
or
in
sbb
enter
cmc
ret
push
scas
test
enter
call
repz
cmp
popa
inc
addr16
fcomp
out
lock
mov
adc
repz
(bad)
js
pop
fdiv
mov
mov
fcos
sti
sbb
adc
mov
test
ss
pop
ret
aaa
pop
jmp
out
fwait
jl
mov
cmps
into
or
jnp
sti
call
mov
pop
xchg
cmp
mov
sti
rol
pop
and
test
aaa
push
loope
jl
mov
sahf
cmc
outs
pushf
fld
xchg
ja
sbb
dec
(bad)
(bad)
inc
dec
sub
dec
inc
jl
cmps
(bad)
js
pop
scas
pop
cmp
cld
loope
fs
fwait
mov
pop
arpl
lahf
fs
dec
lds
ins
test
pop
dec
mov
aad
mov
jb
mov
(bad)
adc
pop
cli
and
das
fwait
sub
jp
lea
jp
jge
mov
(bad)
lahf
movs
sbb
mov
rol
push
int3
or
(bad)
cs
in
mov
leave
aad
test
test
mov
cmp
mov
inc
dec
sbb
popa
mov
cmc
add
out
(bad)
sbb
scas
adc
retf
cmp
stos
data16
ret
ret
sbb
outs
loope
and
xor
jns
into
shl
mov
xchg
jo
adc
pop
xor
mov
jecxz
sub
push
mov
mov
movs
jge
mov
out
or
xchg
pop
pusha
mov
mov
push
cmp
jns
call
xor
push
sbb
call
inc
test
jbe
sbb
(bad)
xlat
mov
popa
sbb
out
adc
mov
add
pop
cmp
or
nop
add
clc
xlat
adc
mov
dec
ins
ins
push
and
gs
mov
aam
cdq
imul
mul
mov
(bad)
mov
push
or
imul
aad
push
jo
fcom
pop
aam
push
std
movs
sub
xchg
lods
std
in
push
push
push
sbb
lea
in
mov
arpl
push
lea
mov
add
mov
jns
stc
not
mov
out
es
pop
jg
mov
push
outs
pop
into
ins
adc
jle
dec
les
stos
das
mov
jg
and
inc
int
pop
push
popa
cmp
sbb
mov
and
push
iret
pushf
or
pop
push
dec
lods
(bad)
jnp
leave
test
rol
mov
test
sar
xchg
ret
jl
icebp
pop
jo
ret
cmp
push
pop
lds
xchg
mov
retf
or
hlt
ins
or
movs
rcl
mov
or
sub
loop
jae
loope
fild
jmp
shr
lea
fisttp
push
scas
xchg
pop
jae
pop
lods
popa
call
into
adc
inc
aam
cmps
out
mov
mov
out
call
pop
or
jnp
jecxz
pop
(bad)
xor
pop
or
or
jo
aam
push
(bad)
out
jmp
dec
jp
leave
daa
pushf
mov
clc
nop
adc
or
scas
pop
movs
pop
mov
retf
xlat
dec
inc
dec
mov
mov
mov
xchg
fcomp
push
add
stos
scas
not
ins
sbb
add
cmc
or
(bad)
cmp
xor
(bad)
(bad)
aam
mov
in
add
neg
adc
(bad)
xor
aas
sbb
ror
sbb
push
sub
sub
xchg
fadd
fs
retf
jp
nop
nop
aaa
cmp
inc
mov
adc
sbb
sub
sub
ret
xor
scas
dec
ins
and
fcomp
stos
idiv
ss
(bad)
sbb
retf
lods
ds
adc
adc
dec
or
pop
dec
mov
mov
mov
or
cld
and
sub
movntps
cmc
adc
mov
adc
ds
pop
and
nop
xchg
ret
movs
xchg
adc
cmp
lods
jp
xor
inc
cmps
int
sbb
aaa
mov
test
dec
adc
mov
retf
push
inc
push
push
mov
stc
cmp
jo
mov
mov
ret
sub
mov
jecxz
sbb
aam
retf
add
or
scas
or
jb
(bad)
aas
push
dec
stos
dec
pop
sub
inc
out
xlat
cmp
mov
pusha
hlt
addr16
or
rol
lea
leave
push
push
mov
cmps
ret
fadd
gs
nop
int3
xchg
lahf
int
adc
xor
mov
push
aas
les
mul
(bad)
aad
inc
dec
jne
shl
cmp
cmp
mov
jns
push
pop
sets
add
fdivr
retf
jg
mov
add
ss
xchg
add
in
ror
sub
add
loopne
jbe
push
cwde
ret
pop
fldcw
jle
add
sbb
aad
xchg
and
dec
mov
test
les
es
push
and
inc
sub
test
sub
xchg
push
outs
xchg
jnp
fcmovb
lods
and
sub
mov
popf
inc
and
ror
ds
stos
into
int
cmps
xor
inc
sahf
dec
pop
inc
sbb
(bad)
aas
cmp
add
test
pop
adc
cmp
pop
mov
or
push
fiadd
push
hlt
sbb
xchg
cmp
sar
ins
inc
in
sub
xchg
daa
aad
es
sub
imul
mov
pop
mov
mov
into
fdiv
(bad)
(bad)
out
arpl
(bad)
pop
es
fisub
pop
jno
test
sar
movs
or
mov
cwde
sbb
std
pop
push
adc
aaa
and
call
xor
jmp
mov
adc
mov
push
stos
cmp
loopne
pusha
nop
imul
not
and
mov
cwde
xor
mov
mov
jl
pop
push
das
aas
push
add
sub
repnz
pop
in
inc
dec
jl
pop
inc
push
push
pushf
cmps
mov
push
jge
push
(bad)
fld1
add
push
pop
cs
out
scas
jae
cmp
int
mov
add
ret
loope
adc
fisttp
psubusb
cmp
jecxz
sbb
(bad)
push
ins
inc
push
jp
outs
push
addr16
in
leave
jmp
rcr
movs
das
push
or
pop
shl
jg
inc
mov
pop
loopne
dec
add
cmp
fcomp
jb
sbb
clc
dec
xchg
push
push
pop
leave
xchg
inc
leave
out
mov
(bad)
xor
mov
or
mov
lds
mov
mov
out
push
(bad)
xchg
push
mov
in
call
into
loope
and
ds
int
js
pop
rcr
aam
cmps
jnp
inc
jecxz
stos
out
push
not
fucomp
data16
(bad)
popa
sbb
or
sahf
jp
(bad)
daa
imul
jge
movs
jae
adc
push
push
add
arpl
mov
and
hlt
dec
lods
mov
jp
jmp
mov
xor
inc
mov
inc
imul
mov
(bad)
cmp
mov
xor
ins
cmp
sar
fadd
mov
icebp
mov
lock
in
es
cmc
es
add
sbb
movs
adc
pop
rcr
inc
fist
movs
(bad)
fs
push
mov
pop
stc
daa
test
cmc
je
imul
mov
in
leave
cdq
out
loope
jmp
hlt
xchg
add
les
daa
push
or
fld
imul
mov
inc
pop
sub
mov
(bad)
rcl
push
inc
cld
mov
ins
and
popa
fisub
lods
in
xchg
dec
mov
pushf
lds
sbb
dec
jecxz
retf
add
xlat
adc
pop
mov
cmp
or
(bad)
enter
cmp
cmp
xchg
xlat
mov
pop
cmps
shl
mov
outs
ja
mov
sub
push
icebp
test
sar
adc
outs
mov
retf
dec
test
cmp
(bad)
ret
or
je
out
bound
das
mov
lods
inc
mov
iret
xor
inc
inc
xlat
jnp
xor
pop
push
std
and
popf
fimul
pop
xchg
cmp
js
outs
(bad)
mov
sub
fwait
mov
addr16
or
pop
sub
pop
push
repz
hlt
sub
add
pop
icebp
out
enter
popf
daa
iret
push
jae
push
repz
adc
dec
lods
loope
or
das
aam
imul
aad
fwait
or
(bad)
fist
push
ret
xchg
inc
xchg
rcr
dec
adc
dec
test
movs
dec
cmp
sar
mov
retf
dec
and
in
sbb
rol
mov
jmp
inc
in
and
mov
and
xor
cld
vcvtsi2sd
push
pop
cmp
cmp
outs
fxch
cwde
shl
inc
test
add
sub
imul
mov
mov
outs
stos
jge
xchg
hlt
mov
(bad)
daa
xor
enter
pop
stc
xchg
or
scas
(bad)
aad
push
leave
sub
ins
shl
or
sub
sbb
xchg
ds
ins
and
sti
push
mov
xlat
pop
push
push
sub
out
(bad)
xlat
dec
cld
inc
push
jge
jno
popa
push
int
loop
inc
shl
test
sahf
mov
push
or
jo
cld
ficomp
push
out
lahf
ins
daa
out
pusha
scas
inc
int3
clc
push
fcomp
pop
cmps
pop
ficom
or
popf
jo
push
push
xor
aam
pop
aad
xchg
mov
aas
xchg
mov
jg
stc
icebp
add
scas
cwde
je
loopne
xchg
fcomp
jne
ror
pusha
push
test
push
push
retf
inc
(bad)
mov
xor
fist
cmp
xchg
xor
mov
cmps
ret
add
xchg
pop
ror
sbb
or
ins
dec
pop
xchg
arpl
ins
pop
jl
jp
or
mov
aaa
mov
pop
xor
sbb
xadd
push
pop
inc
jg
or
cmps
jne
rcl
sub
xor
pop
xchg
xor
fadd
mov
in
and
gs
mov
cdq
fsub
xor
cld
jmp
cli
loopne
push
cmps
nop
jne
cli
push
mov
push
xlat
push
adc
sbb
imul
jo
(bad)
push
jno
sti
xor
mov
repnz
jp
sbb
fist
neg
test
mov
inc
mov
hlt
ror
push
test
pop
adc
and
mov
lea
sbb
inc
pusha
addr16
jo
cld
mov
repz
mov
fistp
xchg
mov
pop
jecxz
lea
inc
inc
push
ins
cwde
shr
rcl
loopne
sub
sub
xor
(bad)
fsub
int
push
sahf
outs
outs
nop
out
arpl
mov
mov
dec
or
(bad)
cmc
mov
or
sub
je
aaa
lock
retf
sub
repz
bound
lock
jb
sti
fwait
inc
pop
hlt
adc
int3
and
hlt
and
xor
push
in
inc
xor
clc
je
in
aad
stc
jo
aas
(bad)
lds
stos
test
imul
mov
jnp
xchg
int
inc
ins
or
sbb
cmp
imul
sbb
in
cmp
pusha
add
fidiv
(bad)
mov
xor
cmp
jbe
(bad)
ja
dec
aam
and
dec
push
jns
push
sub
stos
xor
and
jl
rcl
dec
mov
xchg
push
std
mov
mov
jb
xchg
pop
lahf
div
add
cmp
xor
push
fidiv
popf
mov
xor
mov
pop
xchg
cdq
fdiv
pop
xor
fs
jno
jmp
xchg
mov
push
cli
and
xchg
mov
popa
into
ins
mov
(bad)
mov
mov
pop
les
les
int3
sub
test
pop
push
add
arpl
or
or
xchg
fld
iret
fidivr
pop
movs
cmps
cmps
aas
cmp
xchg
push
imul
pop
adc
mov
add
push
popa
(bad)
pop
sub
adc
rcr
test
mov
push
push
sub
push
mov
mov
inc
(bad)
sbb
imul
call
mov
enter
xlat
pushf
stos
std
jmp
stos
and
jo
jnp
pop
cmp
int
and
cli
(bad)
push
hlt
mov
xchg
cwde
cdq
xchg
jnp
adc
cs
xchg
cmp
pop
lds
and
stos
pop
mov
loope
or
adc
pop
mov
xor
pusha
pop
jmp
and
out
test
aas
jnp
or
arpl
ret
cmp
inc
add
or
inc
aad
sbb
test
addr16
xlat
and
pop
and
sbb
and
in
dec
cmp
ins
inc
clc
mov
push
lods
sub
test
daa
and
cld
cli
jnp
test
sar
ins
xchg
jg
mov
mov
aam
fmul
cmp
loopne
ds
push
int3
mov
cs
xchg
push
or
lds
or
(bad)
mov
mov
popf
les
mov
xor
lods
and
mov
sub
xor
xor
pop
cmp
dec
into
das
in
pop
dec
fist
push
mov
test
sbb
xor
adc
test
arpl
(bad)
cli
inc
xchg
pop
mov
fwait
or
inc
pushf
fstp
addr16
mov
mov
push
jmp
ja
add
loopne
or
pop
lock
xchg
cmp
out
dec
xchg
neg
rcl
sub
sub
push
adc
mov
mov
repnz
dec
sub
add
dec
push
inc
sbb
pop
adc
pop
rcr
js
adc
or
sbb
rol
sahf
sub
jb
inc
rol
add
sti
out
adc
stos
add
dec
xchg
push
fisttp
out
dec
mov
call
fprem1
in
dec
sahf
jp
jns
jb
shl
pop
out
lock
cli
ins
cld
sbb
xor
lods
ss
ins
stos
cmp
cdq
or
mov
mov
fisub
les
sbb
or
(bad)
adc
cwde
(bad)
push
and
popf
inc
push
jae
adc
sub
mov
test
inc
pop
out
xchg
mov
popa
push
not
sbb
stos
jns
ja
push
push
jmp
(bad)
fcomp
mov
cmps
test
jns
jae
loop
cs
pop
add
mov
jae
repz
call
test
mov
rcr
psrld
call
(bad)
loopne
mov
lock
push
sub
in
push
dec
mov
mov
dec
mov
sbb
shl
cmp
int3
pop
pop
cmps
adc
adc
cmp
xor
xchg
cli
(bad)
push
mov
dec
test
inc
cmps
mov
retf
outs
mov
test
loop
sar
cmps
mov
pushf
mov
dec
sahf
pop
(bad)
adc
xchg
dec
(bad)
repz
scas
pop
cld
mov
jl
push
loop
cwde
dec
jmp
test
cdq
mov
sub
fidiv
and
fild
fistp
fucomi
inc
fs
mov
pushf
jge
mov
adc
(bad)
lock
icebp
or
inc
loop
push
mov
lahf
xchg
daa
sub
inc
inc
ja
ja
dec
nop
cmp
fbld
outs
jbe
das
sub
jb
jno
fmul
dec
mov
(bad)
sub
jl
xchg
sub
rol
mov
aad
js
sub
adc
push
add
mov
cmp
ja
pop
or
jmp
sbb
xchg
xor
mov
sbb
loopne
popf
mov
sbb
rcl
push
stos
clc
dec
fldenv
iret
test
dec
jns
retf
pop
addr16
or
div
fnstenv
push
cmps
sahf
fcom
shr
adc
mov
xchg
das
sbb
stos
jl
xchg
push
sbb
out
or
icebp
mov
mov
(bad)
lods
pop
sub
dec
fld
adc
xchg
dec
loope
xchg
cmp
or
add
enter
or
aad
sub
fmul
jp
punpckhdq
enter
xchg
fwait
aam
mov
push
ss
fadd
xor
out
adc
fwait
sar
or
pop
cmp
inc
bound
sbb
xor
call
jns
pop
(bad)
pusha
imul
xor
enter
rcr
pop
mov
pop
mov
out
dec
fldcw
mov
sahf
jae
mov
adc
sbb
call
addr16
aam
mov
sbb
pop
rol
jl
xor
cmps
dec
mov
push
(bad)
jne
jmp
jae
adc
adc
adc
pop
jmp
push
out
out
fnstcw
or
push
push
int
sti
mov
nop
add
sub
inc
in
mov
je
xor
fdiv
cmc
add
pop
call
outs
inc
inc
sub
shr
fstp
cmp
or
in
jns
or
mov
(bad)
jl
out
adc
cmp
nop
not
mov
call
jge
push
and
xor
xor
sub
adc
xchg
jne
cmc
stos
inc
repnz
addr16
mov
lods
ja
cli
push
cmp
int
pusha
mov
jb
cmc
sub
xor
pop
xchg
xchg
or
push
cmp
(bad)
jg
cld
stc
sbb
fist
repz
ss
adc
lods
movs
push
sbb
xchg
jnp
ret
mov
xor
lock
push
xchg
mov
push
inc
bswap
dec
push
dec
test
test
int
aam
mov
or
popa
neg
cmp
retf
test
jnp
and
int3
ds
sbb
mov
inc
inc
and
pusha
pop
das
dec
dec
lea
jnp
push
mov
enter
std
icebp
inc
rcl
lds
loope
jle
pop
pop
out
rol
sub
cmp
mov
rol
imul
lahf
in
cmps
mov
adc
(bad)
je
ss
and
pop
dec
cmp
push
outs
outs
lahf
jle
out
es
add
dec
cli
dec
push
idiv
loope
mov
xor
sbb
call
add
gs
fst
xor
and
sub
scas
jnp
xchg
loope
sbb
cmps
in
fisttp
xchg
or
mov
pop
mov
xchg
dec
fucomp
sub
mov
sbb
(bad)
lods
int
cwde
ret
mov
push
pop
pop
add
test
adc
aaa
jmp
dec
shl
pop
pusha
mul
movs
adc
sahf
mov
mov
arpl
ficomp
mov
mov
sbb
mov
inc
cld
in
iret
mov
(bad)
fadd
push
arpl
jg
out
pop
mov
jg
pop
dec
mul
out
fcmovnb
lahf
aam
iret
fist
or
dec
ret
and
mov
inc
xchg
(bad)
add
mov
call
jmp
mov
add
pop
(bad)
cmps
mov
cmps
lods
mov
aam
(bad)
cmc
xlat
call
inc
out
dec
push
pop
adc
mov
test
cld
mov
lods
call
add
and
mov
mov
bound
jnp
push
popa
dec
ins
stos
xchg
mov
or
loope
fs
adc
das
cmp
fmul
adc
inc
rcl
mov
lods
scas
inc
and
fimul
mov
cmp
sub
xchg
sub
test
cmps
sub
jo
mov
ret
push
lea
sub
ficomp
and
dec
add
push
sub
cmps
ins
mov
bound
scas
cmps
or
jmp
test
(bad)
jl
push
inc
addr16
test
cdq
mov
jecxz
inc
jbe
dec
dec
data16
mov
gs
fidivr
stos
into
mov
cmp
xlat
sbb
sub
xor
jge
mov
lods
stc
push
out
inc
jns
adc
test
loop
test
pop
jmp
xor
jb
test
es
popf
ins
pop
pushf
jae
xchg
in
xchg
cmps
(bad)
movs
add
mov
sub
mov
movs
dec
sbb
leave
icebp
cmps
fisttp
add
sar
(bad)
out
or
ror
inc
jle
mov
add
fld
mov
ficom
jmp
icebp
or
xchg
inc
and
xchg
gs
fstp
and
nop
mov
sub
fdiv
hlt
jle
mov
out
dec
lds
jp
fsubr
lods
xchg
std
adc
mov
mov
outs
push
push
cmc
retf
dec
pusha
sub
popa
inc
pop
jnp
push
inc
fcmovbe
pusha
push
jecxz
cmp
(bad)
cmp
sub
dec
inc
out
jb
mov
jns
pop
add
fwait
test
div
adc
cdq
repnz
pop
mov
cmp
clc
mov
push
or
adc
retf
enter
xlat
sub
cmp
(bad)
mov
or
in
popf
cli
(bad)
jmp
jmp
xchg
(bad)
std
add
adc
pop
lods
jne
call
lahf
push
test
std
nop
dec
sub
inc
test
inc
cmp
rcr
xchg
mov
mov
mov
adc
fld
(bad)
cmps
mov
pop
sub
dec
daa
push
lea
popf
jno
scas
daa
stc
or
aad
(bad)
adc
and
or
mov
push
xlat
fnstsw
and
push
xor
jns
pop
mov
sub
ja
movs
cdq
cmp
jne
outs
movs
fcom
shl
ja
push
outs
push
cmp
test
add
outs
adc
out
stos
pop
mov
jge
sbb
adc
test
int
push
dec
and
xor
and
(bad)
xchg
nop
jle
lds
in
scas
inc
retf
sub
xchg
mov
mov
hlt
sub
into
sub
(bad)
jecxz
ror
retf
pop
ds
push
daa
stos
sbb
jbe
aad
sbb
push
sub
cmp
adc
rcl
push
popa
sbb
cmp
sub
sbb
ss
cmps
adc
sbb
ret
das
mov
cwde
mov
xor
scas
pop
es
or
mov
push
fcom
mov
pushf
out
and
pop
(bad)
not
outs
pop
iret
cli
xor
add
push
adc
sbb
rcl
inc
inc
adc
scas
pop
xchg
stos
push
jno
xchg
inc
add
push
mov
in
es
retf
out
shl
mov
fst
add
mov
out
or
call
fxch
(bad)
mov
sbb
dec
cmp
sbb
lock
int3
movs
xor
push
test
idiv
adc
pop
and
pop
aas
xor
movs
loop
jo
mov
jo
imul
and
push
mov
xor
jns
int
cmp
jmp
test
push
imul
jo
add
jmp
(bad)
pmaddwd
popf
in
sub
jbe
pop
cmp
inc
nop
ret
enter
jb
push
repz
fdivr
inc
and
dec
leave
dec
push
sbb
or
rcl
dec
add
push
sub
hlt
sar
adc
lock
out
dec
sbb
hlt
(bad)
aam
xchg
mov
je
fs
push
sbb
jae
test
push
jmp
enter
xor
(bad)
jne
cmp
(bad)
xor
push
sar
lods
ficom
imul
and
add
dec
jle
cmp
mov
ret
in
sbb
cdq
pop
fs
call
jae
(bad)
jmp
shl
push
or
xchg
jmp
lods
adc
mov
xchg
mov
or
inc
adc
pop
push
pop
jmp
mov
push
shl
sub
imul
ret
jo
mov
jo
std
ds
mov
or
pop
daa
sub
(bad)
imul
outs
test
mov
and
sub
(bad)
and
or
(bad)
dec
or
mov
lea
pop
stc
cs
adc
mov
mov
into
fbstp
in
mov
dec
inc
inc
xchg
nop
pop
jmp
push
xlat
mov
xor
int
jp
mov
out
jno
and
add
ror
mul
xor
ret
js
or
mov
jle
mov
pusha
ffreep
mov
push
pop
in
sbb
mov
jl
adc
je
mov
das
fisttp
push
lea
adc
cwde
arpl
stos
ins
into
addr16
cmp
popf
pop
jp
fisub
xchg
inc
sbb
jne
pop
xchg
jmp
push
and
test
or
xchg
cmp
jb
xchg
push
or
clc
jmp
out
lods
call
arpl
js
xchg
test
(bad)
mov
sub
cli
mov
in
xchg
mov
call
into
in
cmp
adc
repnz
enter
mov
sbb
das
or
push
bound
sub
pop
fs
inc
repnz
mov
test
mov
sub
data16
inc
xor
fbld
bound
dec
out
ror
lahf
inc
inc
in
call
jp
sbb
mov
ficomp
(bad)
es
fisttp
int
sbb
rol
xchg
mov
pop
cmp
cmps
(bad)
outs
dec
(bad)
sbb
xchg
jbe
push
xor
das
les
shr
fsubr
outs
sahf
pop
sbb
aaa
les
shr
cmps
mov
sbb
int
xchg
pop
xor
faddp
sbb
sub
inc
push
jo
adc
call
stc
dec
lahf
jmp
cmps
jae
mov
add
mov
(bad)
xor
sub
mov
out
into
add
cdq
or
les
push
xor
retf
test
fild
mov
in
movs
jp
hlt
add
ret
adc
loopne
mov
imul
pop
(bad)
or
add
das
mov
jno
int
test
adc
cmp
or
retf
das
imul
xchg
(bad)
mov
adc
ins
jle
mul
jns
int3
in
int
outs
retf
push
out
js
sub
inc
not
mov
push
push
jge
lds
fwait
lock
push
aas
sub
test
iret
test
mov
fdivrp
push
xchg
dec
jecxz
push
xor
push
adc
imul
lock
inc
test
xor
and
retf
hlt
sub
jge
xor
ret
adc
and
scas
test
fsub
pop
(bad)
(bad)
aad
xor
repnz
int
gs
adc
xor
leave
mov
jmp
jg
scas
jmp
jns
add
pop
pop
sbb
mov
sub
sbb
repnz
je
jmp
in
in
sub
sub
inc
jbe
test
lds
data16
mov
outs
dec
aas
xchg
repz
shr
outs
rcl
jns
sbb
jle
push
or
mov
icebp
xor
mov
pop
int3
in
loop
jmp
out
daa
dec
mov
mov
push
adc
lds
and
dec
mov
into
mov
dec
mov
pop
xchg
pushf
ffree
daa
mov
push
rcr
cmp
sbb
popa
sbb
stos
ret
adc
mov
dec
call
fcom
bound
mov
add
mov
dec
and
adc
stos
xchg
pop
mov
aad
lock
inc
popa
aas
loop
adc
xchg
dec
stos
cmc
inc
sbb
rcl
out
add
adc
cmp
pop
rcr
movs
mov
sti
mov
jmp
(bad)
out
int3
push
inc
xor
inc
enter
xor
push
push
ins
push
ins
inc
gs
jmp
scas
mov
mov
sub
xor
fimul
stos
mov
je
shl
xchg
fnstcw
mov
cmp
adc
add
jge
pop
adc
outs
pop
mov
jg
mov
test
inc
sub
sub
lods
std
push
jns
xor
xchg
jno
mov
dec
xchg
std
pushf
addps
pop
div
das
mov
dec
or
scas
ror
shr
test
retf
jecxz
gs
xor
mov
(bad)
inc
enter
sbb
loopne
and
bound
shl
(bad)
pop
sub
xlat
inc
mov
sbb
es
sbb
adc
jnp
nop
pushf
(bad)
addps
or
pop
rcl
pop
fsubr
imul
cs
fwait
xor
loop
std
dec
mov
or
mov
gs
sbb
data16
scas
enter
mov
mov
lods
fmulp
lds
push
add
repz
xchg
xor
in
mov
repnz
fistp
sub
and
pop
dec
cs
dec
push
cmp
in
sbb
adc
dec
add
pop
mov
push
rcr
jecxz
imul
add
sub
test
fwait
nop
inc
aad
jle
gs
enter
pop
outs
popa
sahf
jnp
icebp
dec
mov
fdivr
mov
mov
xlat
sbb
mov
ins
xchg
push
jns
cdq
retf
sbb
shr
std
movs
pop
inc
shl
jbe
xlat
add
movs
or
inc
xchg
mov
or
cmp
je
out
adc
into
inc
mov
xchg
(bad)
fdivr
stos
cs
jne
xchg
sbb
jp
pop
(bad)
jmp
pusha
inc
cli
mov
or
ds
and
push
pushf
rol
dec
js
push
sub
fidivr
mov
xchg
mov
cwde
jo
xor
inc
sbb
inc
mov
or
(bad)
or
pop
jmp
xor
fnstsw
inc
inc
aas
mov
rcl
cmp
add
cmp
(bad)
imul
jo
push
pop
mov
bound
icebp
fnstenv
jecxz
dec
cmp
jmp
mov
sahf
cmps
out
outs
jo
push
xor
adc
(bad)
scas
lea
into
ret
cld
arpl
scas
add
cmps
xchg
rcr
sbb
jne
stc
stc
mov
jb
mov
lea
pusha
or
push
mov
or
(bad)
sbb
ds
xchg
or
push
inc
(bad)
dec
mov
imul
push
cmp
repz
retf
jne
imul
mov
sbb
mov
aam
(bad)
and
lods
xchg
stos
and
mov
iret
mov
mov
cmp
leave
cmp
mov
fild
in
stc
mov
pop
call
mov
sahf
jmp
js
jno
lock
sbb
mov
cdq
xchg
dec
outs
cli
adc
mov
xchg
cmp
je
ret
jg
sbb
cld
inc
xchg
push
cmp
cmps
ret
(bad)
cli
daa
xchg
iret
dec
shr
inc
sub
mov
mov
sbb
ret
mov
add
(bad)
shl
test
shl
push
imul
scas
and
inc
not
and
push
js
stos
stos
push
sbb
lock
ins
or
sbb
xor
ja
inc
xchg
icebp
popa
mov
cmps
pop
gs
cmp
test
xchg
and
cmp
fadd
jae
xchg
push
pop
or
and
xchg
mov
call
sub
rcr
mov
jmp
add
scas
inc
or
or
sbb
jl
mov
fist
pushf
dec
jecxz
imul
sahf
dec
pushf
(bad)
sar
jecxz
cli
jge
cmc
rcl
and
mov
shl
jbe
dec
push
and
inc
das
das
mov
pop
xchg
add
xchg
lahf
inc
nop
cli
push
mov
aad
fimul
mov
mov
sub
cmp
push
les
push
lock
mov
add
xchg
outs
gs
jmp
xor
loop
cmp
dec
fidiv
xor
ins
not
dec
(bad)
stos
mov
inc
aas
cmp
rcl
lock
aas
(bad)
push
add
popa
clc
sbb
push
outs
retf
inc
mov
push
inc
push
xlat
retf
test
shl
test
out
test
inc
shl
jp
mov
cmp
(bad)
push
add
mov
jbe
daa
cmp
aaa
mov
fidiv
in
in
inc
jge
loopne
mov
xor
adc
sub
sbb
loope
dec
jo
push
or
into
adc
nop
inc
sbb
dec
mov
pop
sub
cmp
int3
shr
xlat
ror
gs
xor
push
clc
adc
adc
adc
fld
sub
mov
push
cmp
iret
dec
inc
xchg
sbb
sbb
fwait
add
test
ret
rcr
add
pusha
sub
pop
sbb
sbb
test
pop
loopne
out
int3
fistp
lds
aaa
mov
jg
aam
call
xchg
mov
dec
setbe
mov
dec
add
adc
inc
mov
lock
shr
xchg
call
adc
pop
addr16
sub
icebp
cmps
shl
hlt
rcr
call
sar
(bad)
out
lds
jp
fild
fcomp
aas
xlat
sub
pop
sub
pop
xor
(bad)
sbb
sub
stc
mov
adc
imul
pop
push
jae
rol
call
mov
add
jno
add
cmp
sub
iret
es
or
ror
or
enter
lock
neg
push
(bad)
pop
fmul
inc
sub
jbe
mov
sbb
jne
and
push
cmc
test
arpl
or
hlt
data16
fs
push
jne
imul
nop
push
retf
lea
adc
or
daa
scas
stc
adc
add
sahf
or
xchg
lock
(bad)
ins
jecxz
mov
inc
cdq
outs
pop
daa
test
push
ins
push
jle
pushf
int3
cs
icebp
das
js
enter
outs
xlat
jmp
add
pushf
int3
out
jl
jl
add
out
daa
dec
push
dec
and
adc
xor
sbb
mov
or
push
push
xchg
sub
mov
xlat
les
adc
add
add
mov
xchg
add
push
jo
adc
mov
sub
repz
loope
cmp
iret
inc
mov
adc
sub
add
inc
test
fmul
test
int3
call
mov
sub
jecxz
nop
or
mov
rcr
sbb
(bad)
and
push
push
retf
add
in
retf
xlat
inc
xchg
or
sbb
mov
aaa
xchg
bound
jae
add
pop
xchg
push
arpl
call
mov
mov
jp
jg
sub
jmp
sub
adc
test
push
mov
xchg
push
pop
adc
dec
push
enterw
dec
push
add
(bad)
jl
sub
aad
leave
mov
icebp
push
js
call
inc
pop
cmp
push
ffreep
rol
add
adc
mov
push
push
stc
jae
sbb
pop
mov
loope
ficomp
jb
sbb
push
je
dec
pop
clc
in
cmp
movs
sub
cdq
sbb
and
push
mov
mov
mov
ds
sub
sub
jg
fst
mov
mov
jle
jmp
mov
call
(bad)
jl
sar
aam
cmps
adc
inc
ins
dec
dec
mov
lock
mov
xor
es
(bad)
enter
into
in
push
cmp
mov
or
mov
or
(bad)
ret
jle
xor
repz
rol
loop
in
xchg
popa
and
dec
add
(bad)
pop
cmps
es
daa
adc
jmp
test
out
jno
mov
pop
stos
test
mov
and
mov
out
movs
neg
xchg
cmp
mov
add
cmp
or
adc
ret
mov
stc
xchg
push
mov
push
push
out
mov
sbb
lods
mov
js
mov
or
scas
test
aad
loop
inc
sub
cli
mov
adc
sahf
cmp
inc
repz
fs
mov
jno
cdq
sub
stos
cli
ds
or
sbb
dec
scas
mov
leave
push
xchg
xor
adc
mov
jmp
clc
aam
fwait
int3
int3
push
cmp
int3
ins
mov
sar
fld
ins
adc
jnp
enter
dec
in
aaa
arpl
inc
int3
pop
popf
inc
jo
jl
lods
pop
int3
in
pop
pushf
test
xchg
and
jns
ins
xor
and
ret
mov
clc
push
add
lods
xchg
ins
jg
out
dec
fldenv
out
out
jmp
mov
dec
or
shr
aas
call
(bad)
mov
int3
cs
dec
in
idiv
or
jo
or
lds
xor
and
fwait
ret
push
jmp
daa
test
and
dec
shr
lods
add
xchg
inc
cmc
jne
(bad)
hlt
sahf
push
rcr
ret
retf
and
mov
or
adc
mov
mov
and
dec
push
cmp
ds
cmps
dec
mov
out
fild
add
leave
add
mov
pusha
mov
add
(bad)
sub
sbb
arpl
sub
mov
jecxz
test
rcl
xchg
mov
jae
mov
mov
jnp
cwde
jmp
mov
push
adc
mov
or
xor
adc
sahf
in
dec
repz
xchg
fucomip
iret
fdivrp
dec
jmp
adc
sbb
sbb
cli
ins
enter
js
aas
fs
sahf
out
cmc
ror
stos
dec
adc
test
cmp
add
mov
ror
movs
mov
xor
jmp
add
retf
ficomp
xchg
xor
dec
add
jg
in
push
jge
mov
aaa
mov
cwde
(bad)
ins
mov
dec
test
cli
or
jbe
test
sub
aam
pop
mov
pop
(bad)
bnd
test
mov
arpl
jge
mov
out
mov
mov
cmp
int3
dec
inc
jecxz
dec
aam
test
push
jbe
fisubr
icebp
lods
push
jns
lods
cld
pop
dec
cmp
push
arpl
sub
dec
xor
retf
or
pop
enter
enter
mov
push
mov
pop
and
pop
add
lock
pop
pop
push
jnp
dec
jmp
jmp
in
movs
ret
fsubr
jae
cmp
inc
mov
mov
or
pop
cli
iret
icebp
push
and
or
jne
ja
sbb
cs
mul
lahf
adc
lahf
leave
js
push
dec
dec
mov
mov
cmp
out
lods
aaa
mov
test
mov
jne
shl
outs
sub
daa
xchg
cmp
fdiv
sbb
repnz
mul
std
call
mov
repnz
jne
pushf
dec
pop
pop
jb
pop
or
xor
mov
(bad)
out
inc
call
and
out
adc
rol
ds
dec
shr
pop
pop
lods
inc
adc
push
mov
cmp
arpl
jmp
mov
push
jecxz
aas
aas
or
loopne
mov
push
mov
jp
cmp
adc
and
arpl
fwait
jne
fwait
js
or
or
inc
pushf
push
and
loop
repz
test
ins
rcr
or
pop
sub
cmp
lods
jmp
mov
pop
lds
pop
push
lods
add
lods
shl
test
into
bound
cs
int
out
dec
jge
cmp
mov
adc
rcl
aad
dec
fwait
inc
mov
aam
cwde
gs
fs
js
into
nop
call
daa
jmp
fadd
in
in
jne
addr16
lahf
adc
loopne
sub
retf
jl
mov
mov
out
pushf
sbb
loop
test
push
adc
pusha
push
scas
fcom
nop
and
xor
es
data16
push
sub
jbe
test
ins
pop
inc
into
add
inc
lea
test
adc
(bad)
jo
add
pop
scas
sbb
test
fs
sbb
push
mov
cmp
jmp
jl
shr
dec
sbb
dec
test
ret
cmps
loop
dec
adc
sub
push
int
js
xchg
dec
icebp
pop
mov
sahf
ja
sbb
mov
and
ins
hlt
enter
in
loop
ja
bound
xchg
bswap
pushf
inc
push
sub
mov
bound
popa
push
rol
and
(bad)
push
les
mov
cmp
iret
sahf
sub
push
daa
std
cmp
fwait
push
pop
or
retf
or
stc
jnp
cmp
push
inc
in
add
outs
sti
inc
test
mov
xchg
(bad)
(bad)
pusha
mov
out
stos
adc
ss
cmp
ja
mov
inc
stc
mov
dec
je
mov
or
pusha
(bad)
ss
nop
leave
and
das
shl
nop
jecxz
mov
cmp
dec
mul
ss
call
fsub
dec
add
in
in
add
sub
or
push
mov
popa
js
icebp
(bad)
aad
sar
movs
mov
inc
rol
mov
jbe
ja
test
sbb
in
addr16
add
test
je
into
jp
in
xchg
jbe
call
jl
stc
es
sub
fld
xor
icebp
lea
jmp
repnz
mov
mov
ret
data16
add
sub
pop
daa
mov
inc
ret
dec
in
iret
ret
mov
push
xlat
ficomp
and
cmp
cld
xchg
movs
mov
pop
cmps
test
add
mov
pslld
hlt
push
push
test
and
adc
int3
and
int3
adc
xchg
xor
ret
push
es
(bad)
push
push
pop
mov
mov
xor
or
mov
leave
out
jns
out
sete
adc
inc
fcomp
call
mov
ja
mov
mov
or
xchg
popa
(bad)
ins
or
mov
fsubr
add
in
sub
test
es
mov
mov
jmp
fld
lods
cwde
pop
sub
push
loope
ret
mov
mov
xor
jae
jmp
aas
in
pop
sub
jb
xor
add
push
mov
retf
push
pop
jno
mov
push
(bad)
fwait
and
or
aad
rep
mov
cmp
pop
imul
mov
xchg
dec
aam
aas
mov
push
jb
lods
jo
cmp
int3
push
pop
push
movs
mov
and
mov
daa
pop
mov
xor
fwait
aam
cmp
jno
ins
popf
mov
mov
mov
and
inc
inc
fisttp
adc
mov
fld
lds
stos
rcl
in
pcmpgtd
(bad)
jne
xchg
cmp
rcr
imul
leave
xor
scas
dec
pop
(bad)
out
test
sub
popa
inc
bound
das
dec
add
dec
mov
or
dec
mov
or
xchg
scas
popf
lea
repnz
pop
jae
inc
movs
or
mov
inc
test
pop
mov
pop
mov
mov
and
xor
cmp
pop
inc
push
fild
mov
(bad)
mov
mov
icebp
add
rol
cwde
in
jne
int3
mov
push
cmps
mov
adc
call
inc
dec
imul
push
retf
test
push
jno
jno
cli
outs
fs
ins
pop
pusha
pop
pop
icebp
pop
adc
pop
cmps
jmp
cmp
adc
jmp
ja
sbb
push
mov
pop
jle
jge
and
mov
or
and
ret
mov
dec
std
jle
popf
daa
sub
outs
mov
in
dec
jno
jmp
sbb
ror
les
inc
call
mov
push
or
add
adc
test
dec
jb
cmc
inc
ds
ret
ret
push
mov
div
test
adc
jbe
int3
push
pop
xchg
and
ds
or
and
add
and
je
sub
xor
sbb
dec
push
dec
hlt
scas
adc
and
jo
fs
cmp
push
push
sahf
popa
pop
cmp
imul
iret
dec
sar
push
pop
cmp
fidiv
in
rol
xchg
mov
and
sub
and
sub
mov
fisub
out
adc
loopne
(bad)
mov
adc
mov
addr16
pop
fisttp
jmp
cmc
xchg
pop
jl
and
fldenv
mov
in
(bad)
dec
mov
and
and
ror
mov
nop
cmovg
sbb
or
push
scas
push
or
add
pushf
(bad)
jl
sub
cli
sbb
mov
jne
ja
es
and
mov
iret
aad
out
jmp
test
fimul
cdq
xor
mov
mov
fadd
nop
test
cmc
add
shl
jp
dec
mov
inc
div
jmp
test
int3
daa
fimul
sub
mov
jns
pop
xchg
ins
sbb
pop
mov
mov
and
aas
mov
outs
dec
hlt
fdiv
lock
pop
jne
cli
jp
adc
(bad)
fild
push
int3
ficom
scas
clc
movsx
add
inc
xor
pusha
sub
aaa
push
xor
out
pop
xchg
push
jp
cmp
(bad)
nop
imul
add
mov
or
cmp
in
jmp
push
ret
push
outs
lods
add
jns
push
jg
mov
or
jnp
fisttp
mov
sbb
ror
cmp
or
ins
mov
inc
adc
pushf
sbb
je
aas
jae
repz
xchg
xor
std
xlat
pushf
cmp
push
xchg
or
(bad)
outs
fwait
hlt
sbb
mov
ins
sub
imul
dec
cmp
int3
inc
sbb
loopne
js
xchg
push
and
(bad)
pop
ret
loop
fwait
push
or
jge
outs
mov
test
js
or
push
lea
mov
add
in
(bad)
repz
push
jmp
push
mov
popa
cdq
ds
sub
xchg
jne
jle
icebp
test
inc
add
sub
jmp
aam
scas
xor
imul
(bad)
daa
sbb
jmp
mov
dec
dec
int
je
xchg
lahf
std
and
add
dec
jns
ds
cmp
fwait
mov
or
scas
push
jg
adc
mov
pop
jae
js
fsubrp
adc
inc
pop
xor
mov
push
mov
mov
xchg
cmps
jl
sbb
cdq
mov
jnp
out
pop
dec
fimul
iret
lahf
sub
or
int3
adc
pop
adc
jns
into
sub
jle
add
(bad)
ret
push
adc
sbb
xor
add
hlt
aas
inc
mov
push
sub
sbb
jl
std
aaa
dec
sbb
sub
cwde
cmps
scas
pop
icebp
mov
shld
fld
xchg
pop
adc
mov
(bad)
cmps
mov
jp
cwde
fstp
sbb
jg
mov
cld
sub
mov
out
sub
push
cmps
mov
mov
sahf
test
pop
test
push
cdq
cmp
cmp
adc
fsubr
mov
lds
fwait
test
adc
enter
mov
xor
std
mov
test
rcl
lds
js
sbb
fisttp
sbb
ja
into
jo
xor
pop
adc
jl
mov
mov
int
outs
push
cli
rcl
pop
clc
jge
in
int
call
nop
aas
xor
out
adc
or
(bad)
jmp
mov
(bad)
cmp
es
push
pop
mov
inc
cmp
push
outs
adc
loope
daa
shr
loop
pop
mov
repz
in
mov
loopne
pop
hlt
add
lods
mov
adc
ins
in
dec
sub
and
push
pop
scas
xor
push
scas
bound
mov
jle
and
push
loopne
test
xchg
mov
nop
ins
ins
pop
mov
test
jmp
sbb
mov
ins
shl
or
ret
cdq
repz
pop
dec
inc
out
xor
and
push
jno
dec
mov
ja
test
mov
mov
mov
xchg
loope
out
adc
cmp
or
add
dec
ss
call
mov
sbb
pop
call
cmps
leave
push
scas
(bad)
aam
xchg
jmp
xlat
pop
fcomp
dec
mov
jmp
test
push
or
jno
popa
stc
push
dec
out
xchg
lods
pop
test
push
push
sbb
outs
mov
sub
sbb
test
push
stos
mov
das
call
clc
nop
pop
fdiv
push
cmc
xchg
mov
mov
scas
push
vmread
in
sbb
inc
dec
imul
daa
push
mov
repnz
cmp
cmc
mov
or
call
out
cwde
jne
stos
adc
mov
(bad)
into
pop
sti
mov
push
xchg
hlt
mov
jns
xor
cli
add
sti
setp
lods
adc
pop
jnp
mov
mov
sub
pop
shl
cmps
cmp
jbe
je
fmul
inc
add
push
mov
add
dec
mov
ret
inc
cmp
(bad)
daa
push
cmps
mov
mov
rol
loopne
adc
pop
(bad)
jbe
sub
clc
xlat
imul
stos
jne
imul
pop
and
dec
xchg
cdq
adc
add
xchg
xor
push
lock
mov
push
push
push
aaa
cli
ja
jp
add
ficomp
cmc
clc
jo
mov
rcr
(bad)
xchg
retf
mov
mov
aas
and
jg
cmp
push
fsub
mov
test
xor
pop
test
push
and
mov
sar
push
adc
ret
scas
add
pop
out
inc
(bad)
cmp
push
pop
mov
shl
or
push
rol
test
add
jns
nop
pusha
xor
pop
movs
cmp
xor
pushf
in
push
test
loope
out
out
popf
fmul
call
or
jp
mov
fcmovbe
test
clc
pop
mov
popa
jbe
in
shl
xchg
fbld
in
jg
sbb
in
jge
fmul
retf
jo
ds
out
stc
mov
add
shl
arpl
cli
bound
jb
fstp
stc
mov
adc
cmova
push
jns
dec
(bad)
and
arpl
xchg
mov
mov
adc
icebp
retf
ss
cld
sub
dec
jne
stc
test
push
xchg
jnp
cwde
ret
xchg
add
bound
jg
repz
sub
sub
cs
out
(bad)
aas
in
mov
push
imul
mov
jae
pushf
std
push
popa
call
std
test
mov
js
sub
cmp
inc
leave
and
call
std
fbld
or
mov
repz
jge
push
jg
and
cmp
test
jmp
push
xor
shr
jnp
inc
cmp
ret
fwait
jb
jmp
arpl
add
push
jbe
or
mov
inc
jl
mov
jecxz
cmp
fs
(bad)
in
pop
(bad)
sub
push
fst
mov
lea
fwait
mov
adc
xor
push
push
mov
iret
in
jns
xchg
nop
jecxz
sbb
stos
sar
mov
xor
sub
(bad)
mov
push
cmps
mov
jp
pop
push
test
dec
es
mov
cmp
cmovp
push
cmp
xlat
(bad)
jg
jo
rcl
sbb
xchg
lea
jae
push
frstor
stc
cmps
add
or
mov
test
out
(bad)
nop
loop
bound
dec
je
mov
jno
retf
add
pop
fnstcw
sar
inc
fist
fwait
loope
jno
ficom
mov
loopne
es
xchg
ror
stc
test
jg
movs
adc
ss
ret
ins
add
ret
es
push
lea
xor
shl
ins
mov
ret
js
cmp
cmp
jg
stc
dec
push
stos
xor
and
outs
mov
mov
xchg
int
sub
push
(bad)
outs
mov
(bad)
pop
rcl
mov
ret
mov
cmp
imul
push
mov
ja
shl
sbb
mov
jno
push
(bad)
or
xor
ret
(bad)
(bad)
jnp
and
aaa
mov
or
mov
mov
jb
movs
pop
sahf
loopne
or
push
cmovo
cmps
add
sbb
pop
add
sbb
add
mov
lock
cmp
rcl
out
pop
sti
xor
inc
dec
mov
pusha
add
test
xchg
jmp
adc
and
xor
into
push
invd
xchg
mov
jae
frstor
das
push
pop
sbb
and
push
stc
rol
dec
neg
mov
mov
mov
shl
retf
fcomp
retf
mov
dec
sub
mov
test
dec
and
push
push
cwde
ins
out
rcl
call
out
sbb
adc
mov
int
sub
add
xor
sbb
push
ret
je
sbb
and
jl
loopne
pop
int
fisubr
nop
mov
xchg
jmp
jo
je
lea
and
cmps
adc
lock
jl
mov
lea
jmp
test
sbb
inc
inc
sbb
inc
lods
pop
stc
mov
popa
enter
xor
xor
mov
push
sahf
les
arpl
movs
test
inc
xor
xchg
aam
aam
pop
push
adc
mov
cmp
repnz
scas
xchg
rcl
call
xor
iret
les
mov
dec
mov
and
iret
xsha256
cmps
push
mov
sbb
push
cmp
push
and
fdivr
push
movs
or
jl
lods
js
jnp
cmp
and
mov
rol
stos
test
cmp
pop
in
adc
gs
icebp
mov
push
call
xor
adc
clc
inc
and
push
(bad)
sub
adc
mov
xchg
mov
aaa
xor
push
out
jae
in
inc
cs
in
mov
cld
or
inc
adc
aaa
arpl
and
sub
and
outs
(bad)
mov
sahf
stos
cwde
je
imul
scas
gs
xor
push
xchg
mov
xchg
inc
das
(bad)
push
xchg
push
sub
pop
ret
in
mov
outs
hlt
mov
cmp
mov
xchg
pusha
fcomp
in
aad
mov
add
jmp
adc
call
sub
mov
jg
into
ds
lds
pop
ins
sub
sahf
pop
push
xchg
pop
pusha
(bad)
inc
shr
leave
je
mov
lahf
xlat
dec
adc
xlat
push
push
mov
movs
push
pop
cmp
xlat
imul
jmp
stos
jmp
sar
cli
cmp
xchg
je
jecxz
push
fcomip
jns
mov
(bad)
dec
xor
xchg
leave
inc
jb
outs
dec
mov
sub
pop
mov
cmps
daa
cmp
retf
shr
cmps
out
mov
xor
push
ins
jnp
ins
cs
jecxz
cdq
loopne
test
lods
push
retf
sub
sub
or
push
sub
push
repz
jns
mov
fmul
cmp
lea
xor
xchg
add
clc
cmps
push
arpl
pusha
out
fcmovne
cmps
ss
sbb
sub
rcr
sahf
or
jecxz
inc
pop
jo
dec
mov
sub
and
jmp
(bad)
loop
sbb
jne
es
sub
fbstp
bound
xchg
add
push
or
xor
dec
pop
sbb
add
dec
dec
sbb
ins
xchg
xor
imul
sub
test
jge
add
in
mov
in
out
pop
jecxz
mov
into
jg
push
cmp
sbb
ret
inc
pop
cli
je
mov
icebp
dec
sub
add
push
retf
icebp
enter
outs
jle
lock
rcl
aad
mov
fs
ins
mov
xor
imul
cmps
add
addr16
xchg
push
ret
push
mov
fldenv
inc
mov
pop
aaa
push
xchg
(bad)
test
js
loopne
mov
imul
xor
stos
sar
dec
fisttp
xorps
cmc
xor
(bad)
(bad)
popa
xchg
mov
test
inc
int3
das
daa
int3
push
cmps
in
push
mov
dec
push
add
popa
loopne
in
or
mov
sbb
push
daa
push
sti
add
std
arpl
mov
mov
(bad)
int3
in
cmp
out
test
and
pusha
sub
xchg
scas
fs
(bad)
sub
sub
jecxz
mov
ins
repnz
mov
mov
(bad)
dec
mov
push
daa
xchg
iret
data16
xlat
sar
xlat
repnz
mov
dec
imul
jmp
lea
mov
inc
mov
int
dec
jg
jb
lock
out
and
or
into
popa
dec
pop
add
xor
add
ror
or
pop
lea
inc
xchg
mov
daa
pop
sub
push
out
icebp
loopne
outs
xchg
jecxz
lods
(bad)
ret
cmp
(bad)
add
dec
xchg
push
fild
rcl
dec
leave
inc
push
stc
daa
rcr
push
and
(bad)
add
pop
(bad)
loope
stc
push
rol
jg
cld
push
int3
xchg
idiv
aam
jmp
push
jnp
or
sar
cwde
jge
test
inc
mov
xor
hlt
in
les
xchg
inc
cmp
and
xchg
aad
add
and
jnp
inc
cmp
mov
pop
push
cld
fadd
jecxz
pop
(bad)
out
neg
xchg
repz
(bad)
pop
and
call
mov
sahf
add
repnz
inc
xor
or
mov
or
xchg
in
cmp
or
and
in
sub
rol
jns
dec
movs
in
in
popa
jae
jmp
dec
sbb
mov
ror
jb
rcl
imul
into
retf
out
in
sbb
push
aaa
xchg
cmp
push
inc
mov
test
stos
(bad)
mov
test
cmp
pop
and
mov
iret
and
mov
mov
and
outs
test
mov
adc
movs
loope
inc
retf
and
inc
cwde
sbb
ret
add
push
test
mov
loopne
adc
test
mov
popa
mov
ja
jnp
adc
cld
loop
rcl
push
lahf
call
cld
pushf
cs
les
lock
or
sar
test
int
icebp
rcl
bound
pop
les
cmc
lea
pushf
push
lea
and
cmp
ret
pushf
and
shl
cmps
xor
cld
xchg
lea
bswap
and
pop
jb
or
xchg
adc
aam
push
inc
sbb
(bad)
xor
or
loope
test
jge
rcr
cmps
adc
xchg
sbb
icebp
ss
adc
sbb
gs
std
cdq
ins
test
lods
addr16
xchg
aas
cli
adc
ror
or
dec
mov
mov
(bad)
loop
stos
xlat
das
fiadd
inc
(bad)
push
fs
jmp
push
jbe
(bad)
adc
and
repnz
push
mov
sbb
fidiv
hlt
ror
pop
mov
je
add
mov
inc
mov
mov
int3
mov
inc
(bad)
iret
pop
xor
(bad)
imul
and
and
jle
sub
push
aaa
mov
mov
(bad)
into
pop
or
test
adc
ins
inc
(bad)
fs
mov
in
xchg
lods
pop
and
xor
cmc
aaa
mov
adc
movs
rcl
pop
cmp
xchg
jns
push
sbb
movs
lahf
mov
loopne
mov
mov
jmp
mov
add
movzx
gs
std
das
arpl
xchg
mov
and
lods
es
dec
inc
sbb
push
fcomp
out
ja
and
out
mov
(bad)
bts
scas
inc
mov
pop
fistp
ret
jo
jg
adc
sub
jne
stos
jns
cmc
retf
js
cli
ins
jno
int
stc
in
mov
fcom
iret
push
push
xor
lock
add
pop
xor
pop
jl
mov
adc
xor
mov
loop
pop
iret
pop
pusha
pop
dec
jmp
mov
mov
sahf
xchg
xchg
lods
out
push
cwde
loope
fsub
add
out
js
mov
mov
dec
sub
jns
call
mov
es
mov
int3
aad
pushf
push
and
out
psubw
dec
cwde
xor
lods
std
popa
push
xor
mov
loop
push
mov
add
jmp
mov
aam
pop
inc
jb
pop
scas
cmp
lock
inc
icebp
xor
inc
add
mov
jne
lds
pop
fidivr
ins
(bad)
(bad)
xor
jns
xchg
je
cmps
or
das
cmps
dec
dec
loop
out
pop
les
in
fnstenv
ds
jae
xor
in
push
push
(bad)
cmp
lods
push
push
mov
mov
les
add
(bad)
cli
add
or
mov
or
pop
outs
loopne
movs
xor
popf
mov
xchg
xchg
scas
call
imul
lock
jns
call
adc
cli
pop
dec
inc
jp
adc
loop
mov
and
inc
mov
inc
jno
into
and
sahf
mov
in
cmp
mov
shl
pop
nop
dec
cdq
adc
sbb
fs
mov
mov
les
pop
dec
push
adc
lahf
dec
push
out
mov
icebp
(bad)
jne
xchg
mov
aas
cmp
inc
scas
and
sub
loope
cmps
loop
xchg
pop
and
shl
fiadd
or
ins
jb
xor
jmp
int3
or
(bad)
sti
push
div
add
inc
dec
es
pop
jno
adc
cmp
pop
or
imul
cmp
shr
jbe
cwde
or
cmc
mul
jle
imul
push
pop
fnsave
(bad)
pop
cmp
fucomi
inc
pop
movs
jg
movsx
pop
loopne
clc
shr
add
push
or
das
sbb
mov
add
and
and
lds
(bad)
cmps
and
jae
dec
mov
test
outs
xor
out
lea
push
sbb
mov
mov
not
bound
or
mov
leave
frstor
adc
pushf
leave
aaa
and
dec
(bad)
in
xchg
imul
retf
aaa
int
mov
es
jmp
loopne
add
test
dec
les
mov
ins
push
cmps
sub
test
nop
inc
test
femms
sbb
or
shl
outs
mov
in
xchg
inc
mov
mov
mov
or
sub
inc
stos
scas
lods
jp
pop
dec
or
enter
mov
xor
nop
inc
retf
mov
or
xchg
sub
adc
fistp
mov
(bad)
sbb
ds
xchg
dec
lods
int3
xchg
sbb
or
arpl
test
sub
sar
and
xchg
sbb
sahf
dec
fnstcw
sbb
shr
in
das
test
mov
hlt
mov
loop
int3
dec
outs
jg
les
jg
lock
or
mov
jmp
das
movs
and
cs
repnz
cmps
mov
mov
mov
sub
sub
retf
ins
mov
pop
stc
and
out
daa
je
and
pusha
add
push
adc
add
daa
jl
cmc
sahf
xchg
dec
pop
mov
push
mov
mov
or
xchg
sbb
cmp
xor
test
fdiv
sbb
sbb
arpl
inc
dec
cmp
mov
loope
fld
xor
daa
xchg
mov
jbe
repz
push
loop
xchg
dec
xlat
sbb
pop
jg
rcl
loope
fbstp
sbb
ss
das
lock
out
outs
push
dec
dec
cmp
les
cmps
mov
jo
aaa
jmp
adc
add
push
into
push
jle
cld
xor
pushf
jbe
push
mov
pushf
cmp
cmps
not
sbb
fstp
jb
pop
gs
aad
inc
icebp
mov
dec
inc
(bad)
xchg
mov
pushf
fwait
into
sub
push
adc
adc
(bad)
or
xor
scas
test
stc
dec
scas
xchg
inc
je
test
and
out
ret
inc
pop
(bad)
cwde
cwde
cmps
(bad)
and
xor
mov
retf
test
lahf
add
and
gs
cli
lods
sbb
or
pop
fld
inc
jne
xchg
pop
add
mov
or
dec
inc
mov
fs
mov
adc
pop
fistp
sbb
add
popa
adc
inc
mov
ja
add
jb
out
add
scas
loope
rcr
sti
add
lods
ins
mov
jno
xor
cwde
shl
test
jp
bnd
mov
out
push
ins
cwde
movs
dec
cmp
in
in
out
aas
adc
mov
in
adc
int3
aaa
bound
add
aad
int3
fwait
in
jg
cmp
and
mov
push
xchg
push
sbb
int
cld
shl
bound
cmp
push
push
ins
cmp
jle
fcomp
adc
mov
jmp
mov
fiadd
mov
add
cmp
lods
pop
inc
inc
xchg
jecxz
sub
mov
scas
aam
cli
push
mov
xchg
adc
xchg
das
xchg
inc
shr
jbe
sbb
js
pop
mov
dec
cmps
(bad)
mov
adc
data16
sbb
pop
outs
sti
xor
mov
test
pop
fstp
jge
mov
ss
mov
in
repnz
cmp
pop
int3
stos
dec
scas
mov
loope
mov
rcr
mov
out
int
dec
scas
pop
cld
into
ds
out
test
js
bound
or
mov
mov
repnz
imul
jmp
stos
ret
mov
push
sbb
mov
div
pop
inc
cmp
push
or
mov
sub
lods
jl
movs
aas
div
or
sub
daa
retf
push
sbb
iret
mov
push
sub
sub
sub
add
xchg
mov
and
mov
shl
retf
lahf
mov
scas
retf
inc
retf
pushf
ret
(bad)
xor
stc
cmp
and
mov
xchg
xchg
mov
repnz
(bad)
cld
push
cmp
call
lds
retf
sub
je
mov
sub
xchg
push
bound
jge
fisttp
int
loop
outs
fnstsw
in
mov
sub
xchg
inc
and
xor
gs
mov
push
outs
adc
jp
stos
mov
(bad)
sti
call
arpl
push
sbb
aaa
in
lods
jmp
aaa
pop
adc
fldenv
add
jp
dec
or
push
add
test
in
popa
jle
je
cmc
pop
es
js
(bad)
enter
ja
sahf
jle
ja
push
inc
mul
shl
or
retf
xchg
sub
jge
mov
xchg
shr
sbb
(bad)
cmp
int
fidivr
ficom
push
and
pop
mul
movs
in
xchg
pop
pop
inc
pop
les
stc
leave
push
popf
jne
pop
pop
mov
imul
and
xchg
dec
push
mov
mov
retf
dec
das
push
xor
in
lahf
test
popa
mov
loope
hlt
rcl
sub
call
cmp
mov
mov
stos
inc
inc
sub
inc
lods
imul
mov
(bad)
lods
(bad)
in
ja
mov
pushf
movs
cwde
push
loop
shl
xor
and
or
addr16
lods
jb
sub
push
mov
out
jmp
popf
dec
mov
sti
stos
retf
mov
mov
sub
ficom
stos
daa
jecxz
shl
fisubr
lahf
fld
xor
inc
out
or
mov
data16
stos
fdiv
push
jns
in
loop
push
dec
xor
or
pusha
fdivr
ds
adc
ja
inc
cli
mov
sub
cmp
push
iret
add
mov
neg
in
xor
dec
dec
mov
in
icebp
lahf
iret
inc
mov
jmp
pop
nop
(bad)
pop
sub
dec
sub
or
les
pop
jnp
test
inc
pop
ja
repnz
xchg
jmp
(bad)
and
xchg
sub
in
out
dec
movs
inc
push
sub
dec
dec
push
and
jo
jmp
push
jp
inc
push
lods
ja
movs
push
sub
(bad)
dec
arpl
dec
movs
(bad)
pop
popa
jp
add
mov
inc
sub
xchg
xor
in
jno
fisub
adc
pop
jecxz
sub
inc
mov
outs
cmp
push
xchg
add
sbb
jmp
mov
loop
xchg
xchg
and
and
jmp
je
scas
mov
sbb
mov
hlt
and
vmwrite
pop
movs
ficomp
xchg
(bad)
mov
idiv
mov
mov
jecxz
push
xor
pextrw
scas
ss
push
mov
stos
cwde
and
or
dec
rcl
rol
out
repnz
jp
push
cmc
test
je
(bad)
in
retf
adc
sbb
out
xchg
adc
xor
in
jmp
push
aam
das
push
and
inc
xor
enter
mov
(bad)
inc
mov
cmps
gs
cmps
xchg
add
add
sbb
outs
or
clc
ficomp
and
jmp
adc
imul
in
xor
pusha
or
jo
je
push
pusha
fimul
cmp
pop
lods
js
xchg
(bad)
cli
outs
push
pop
mov
xor
call
retf
fadd
pop
cdq
pop
xchg
sub
repnz
pop
xchg
dec
lods
call
adc
pop
or
std
repz
lock
push
or
inc
or
and
cmc
jbe
sub
pop
ins
out
movs
add
pop
mov
out
push
cli
dec
cs
push
and
mov
push
or
rcr
sbb
adc
xlat
in
cmps
or
pushf
mov
jmp
stos
push
inc
shl
inc
(bad)
jle
inc
xor
call
stc
lods
mov
add
and
push
(bad)
push
fisttp
mov
cmp
sbb
enter
inc
cmp
push
or
ret
mov
repnz
neg
ins
in
sub
mov
scas
pop
mov
gs
mov
adc
or
add
(bad)
call
and
(bad)
movs
addr16
test
neg
into
pop
lods
mov
sahf
stos
mov
je
cmc
xchg
in
cmp
scas
mov
lds
test
test
sbb
sbb
add
push
std
dec
test
(bad)
mov
jl
and
lahf
fst
jbe
fcmovu
imul
jmp
outs
jecxz
retf
icebp
cmp
data16
pop
sbb
daa
xchg
cdq
mov
dec
and
addr16
sub
sti
jnp
add
rol
push
ror
and
das
dec
xor
int3
and
push
imul
xchg
out
das
cld
mov
sub
cs
ret
sbb
int3
in
jl
add
sbb
mov
jmp
cmp
push
pushf
sub
cli
das
cli
mov
jmp
push
movs
cmc
jp
imul
pop
inc
jmp
out
jmp
sbb
pop
push
lds
push
add
cmp
cmc
(bad)
cmp
pop
inc
dec
aad
cmp
cmc
das
pop
mov
and
idiv
test
cli
jo
or
or
ret
cmps
clc
icebp
xchg
fcomp
ret
shl
fsubr
repz
inc
pop
(bad)
jl
dec
mov
call
das
inc
call
push
je
inc
xchg
cmp
jo
enter
or
adc
test
call
jge
popf
pop
mov
mov
xchg
jb
push
hlt
ret
lahf
lahf
add
adc
mov
outs
inc
or
sbb
(bad)
(bad)
in
inc
fnstcw
outs
cmp
and
mov
inc
pop
popa
lahf
cmps
in
rol
and
push
ja
or
add
stos
adc
fstp
push
xor
arpl
inc
dec
adc
jbe
sbb
pop
(bad)
jmp
cmps
mov
sbb
mov
mov
push
and
inc
sbb
jnp
std
jl
retf
jne
mov
lock
stc
shr
int3
and
cdq
dec
mov
and
adc
push
jecxz
dec
ret
xchg
faddp
push
mov
inc
push
or
not
pop
cmp
or
dec
fbld
stos
dec
dec
nop
cmp
or
and
imul
and
scas
and
inc
cmc
inc
data16
inc
xor
test
jno
push
pusha
or
adc
or
cwde
or
jmp
int3
jecxz
push
fist
mov
popa
loop
add
xor
and
rol
push
jmp
push
cs
inc
movs
stos
das
lods
xor
adc
cmp
push
out
jo
ja
add
mov
fdivr
leave
push
inc
inc
pop
popa
mov
dec
cwde
mov
mov
or
fs
xchg
mov
jecxz
sub
add
fadd
mov
mov
xchg
xlat
ret
inc
cmp
push
xchg
adc
adc
in
mov
pop
xor
stos
or
sar
(bad)
outs
cmp
xchg
sbb
sub
test
ins
retf
mov
cmps
mov
pop
sbb
xor
dec
cmp
cmps
ds
std
std
push
rcr
add
test
pop
cmc
cmc
and
ret
ret
fistp
lods
aad
ins
xor
xchg
mov
std
add
mov
popf
and
dec
js
xor
add
loop
inc
retf
mov
cwde
cmp
dec
sub
lea
int
(bad)
jmp
sbb
pushf
push
or
retf
outs
shr
cmp
pop
sub
(bad)
push
imul
cmps
hlt
outs
xchg
inc
inc
add
(bad)
test
sbb
jae
std
repnz
push
or
test
sub
rcl
ins
dec
test
dec
push
mov
int3
shr
xlat
dec
jnp
pop
jl
loopne
mov
mov
xor
lea
int
mov
xor
shr
and
mov
inc
(bad)
fisttp
pop
cmp
mov
push
icebp
mov
mov
and
pop
add
addr16
push
sbb
pop
cmp
test
call
sub
sub
aaa
lods
pusha
in
imul
add
pop
cmp
mov
push
enter
js
out
sbb
sub
cmps
out
jb
sub
mov
ss
cmp
fs
stos
push
test
push
dec
or
dec
nop
stos
shl
ror
inc
shl
jle
sar
rcl
cmovnp
(bad)
mov
sbb
ja
mov
mov
retf
cmp
in
fwait
pop
out
sub
mov
and
sbb
or
jmp
jno
lods
mov
sbb
xor
sbb
fidivr
scas
daa
mov
add
push
imul
icebp
xchg
inc
and
fcom
repnz
stos
adc
retf
lock
stc
cmp
xchg
inc
pop
jae
mov
call
fstp
adc
push
pop
sahf
pop
xchg
je
mov
push
and
outs
sbb
imul
lahf
pop
pop
je
shl
dec
test
jmp
cmp
pushf
push
lock
ins
or
lods
cdq
xchg
setp
or
lods
test
inc
aaa
cmp
cmp
stos
test
adc
inc
add
aas
enter
fsub
push
mul
dec
adc
cmps
in
sar
or
shl
dec
add
popf
add
cld
dec
in
in
leave
xchg
or
xor
xor
mov
cmps
and
out
inc
pushf
dec
dec
sbb
ja
and
mov
mov
lods
inc
addr16
into
mov
icebp
std
sbb
inc
xor
push
dec
mov
(bad)
sbb
pop
test
xchg
pusha
sahf
pop
cmps
popf
in
and
inc
cmp
ror
scas
popf
xchg
xchg
mul
inc
adc
lahf
or
push
mov
mov
mov
(bad)
jb
scas
sbb
ins
popf
xchg
cmps
pusha
out
(bad)
(bad)
xchg
push
and
arpl
ds
leave
jmp
cmp
dec
mov
sub
dec
out
push
lods
dec
dec
jmp
lods
loop
adc
jnp
cmp
jge
add
rcr
fidiv
nop
jecxz
shl
cs
or
adc
add
push
mov
es
fs
push
xchg
cmps
call
lds
sub
inc
cli
cld
lock
sbb
xchg
push
bound
sbb
test
lods
mov
lahf
push
mov
adc
jne
nop
dec
adc
sbb
or
retf
xchg
out
(bad)
aaa
fstp
mov
iret
jg
retf
popa
inc
cmp
push
adc
iret
xchg
call
hlt
nop
add
jnp
daa
js
sub
fdivr
icebp
jmp
push
arpl
and
push
add
cmp
mov
enter
xor
mov
outs
(bad)
aad
push
jns
fs
ins
into
fadd
xchg
out
sbb
test
mov
xor
xchg
fnstenv
cmp
fsubp
ret
xor
cdq
jg
rol
enter
aas
inc
xchg
fs
int
push
jnp
es
sbb
nop
xor
in
adc
jle
sub
dec
sub
movs
jg
sahf
ror
shl
in
lahf
mov
add
jnp
inc
ret
mov
test
stos
ret
dec
adc
adc
dec
test
ins
inc
ror
(bad)
neg
xor
out
ins
and
std
pop
hlt
cmp
add
mov
(bad)
std
mov
fidivr
xor
and
nop
arpl
jecxz
dec
adc
sbb
and
lods
cmc
xor
add
add
(bad)
out
and
shr
(bad)
add
cmp
jp
sub
mov
xor
retf
stc
cwde
mov
mov
scas
(bad)
mov
stos
push
push
jne
inc
sar
into
scas
in
push
ins
and
dec
mov
xchg
dec
fstp
imul
loopne
sub
repnz
and
jp
xor
enter
imul
adc
cli
sbb
sub
popa
outs
popa
inc
xchg
test
and
mov
das
add
xor
cmp
mov
xchg
test
retf
(bad)
mov
fdivr
test
jb
sar
aad
es
addr16
jle
nop
mov
leave
inc
dec
out
(bad)
ja
popf
int
add
cmps
inc
leave
pop
outs
add
xor
adc
pop
pop
sub
shl
adc
lea
push
pop
jmp
lock
enter
(bad)
test
fisubr
in
das
clc
xchg
stos
movs
leave
stos
and
add
or
repnz
test
xor
cmp
and
lock
jmp
xchg
mov
nop
or
push
enter
test
shl
movs
ja
fstp
test
dec
xchg
inc
addr16
mov
test
xor
adc
ins
pop
les
jbe
xor
out
sub
mov
xchg
pop
sbb
adc
add
mov
jmp
dec
sbb
push
push
cmp
push
push
leave
mov
stos
in
lods
retf
push
(bad)
icebp
fdiv
xor
pop
mov
adc
dec
test
sub
nop
adc
mov
jno
mov
push
lock
addr16
cdq
xor
adc
adc
fidiv
out
rol
pop
sti
neg
(bad)
hlt
sub
clc
sbb
and
pop
sub
scas
mov
es
mov
fst
cmp
jno
pop
and
cmp
sbb
cmp
mov
dec
push
sbb
ret
aas
dec
addr16
add
or
inc
jns
add
mov
pop
dec
jo
std
sbb
je
imul
xor
fdivp
loop
(bad)
sbb
dec
fidiv
dec
xor
adc
je
adc
pop
mov
sti
cmp
xor
mov
dec
xor
xchg
cmp
loope
or
sub
scas
shl
mov
sti
mov
dec
sub
data16
inc
mov
shl
lds
jo
pop
ret
shr
xchg
in
(bad)
cmc
repz
xlat
leave
jmp
fsubr
fldcw
hlt
es
and
jp
rol
test
fild
mov
jge
jge
sbb
je
push
add
add
mov
xlat
jg
fisub
add
xor
jne
jge
stos
cmp
stos
in
push
jge
dec
xor
js
add
add
fs
and
sbb
adc
mov
push
pop
data16
sub
mov
adc
jnp
test
dec
cwde
aas
lods
lods
(bad)
ficom
in
inc
ret
mov
fs
loop
ret
sub
mov
les
adc
fdivp
daa
aaa
sub
xor
sub
out
or
and
jg
in
cld
lods
dec
clc
dec
aam
xchg
dec
test
sub
xchg
js
inc
add
pop
lods
xchg
push
fsubr
xor
into
inc
cmp
dec
and
xlat
jo
and
outs
sub
data16
iret
arpl
into
add
push
mov
hlt
test
jmp
jmp
ret
aas
jp
cdq
xchg
imul
mov
test
mov
bound
out
adc
pushf
sar
sub
and
loop
fisttp
dec
cmps
test
adc
imul
mov
icebp
movs
sahf
inc
in
int
mov
iret
inc
(bad)
pop
jno
jge
sbb
jecxz
fsubr
cmps
mov
mov
mov
push
jnp
daa
mov
ficom
lods
fnstsw
lock
call
movs
mov
fs
ret
push
mov
shl
add
test
nop
fs
fs
sub
enter
std
push
add
fldcw
call
cmp
test
pop
mov
loopne
sub
or
(bad)
sbb
lds
jo
lea
scas
sahf
cmc
mov
xlat
(bad)
mov
or
dec
ret
xchg
pop
push
ins
rcr
xchg
and
daa
push
xchg
mov
mov
loope
dec
xlat
outs
fwait
lods
push
cmp
shr
and
test
out
mov
push
dec
div
out
rol
jecxz
pop
xchg
adc
add
mov
xchg
std
sbb
jp
movs
cmp
out
in
ret
and
adc
dec
jb
adc
sub
and
mov
sub
outs
movs
mov
or
inc
jmp
(bad)
and
imul
xor
fild
add
jae
push
cld
in
add
sub
lods
pop
ret
arpl
dec
outs
mov
xor
leave
popa
mov
fld
pop
sbb
ficomp
retf
pop
pusha
mov
fcomp
jmp
lods
add
mov
push
add
(bad)
and
or
int
in
xchg
fisttp
shl
add
dec
add
pop
adc
jno
sti
cld
push
mov
pop
cmp
inc
sub
les
and
sub
pop
loope
adc
dec
loopne
sub
and
inc
xchg
jg
sub
int3
test
stos
push
int
jno
dec
cmc
and
enter
jp
fwait
cwde
in
mov
test
mov
test
xor
fidivr
xchg
mov
mov
cmc
shr
movs
(bad)
mov
fsubr
jp
push
stos
es
or
push
mov
repz
and
xlat
add
(bad)
mov
dec
jns
pusha
(bad)
mov
xchg
popa
jle
xor
daa
lods
stc
scas
jle
fchs
mov
mov
inc
sub
dec
dec
cmp
pop
ficomp
or
ins
enter
jl
sub
sub
mov
inc
fs
cwde
xchg
jmp
inc
dec
ret
sahf
pop
fdiv
xchg
mov
xchg
lds
popf
int3
mov
jge
mov
add
mov
cmp
push
cmp
push
mov
cmp
ffree
mov
add
cmp
and
add
add
outs
outs
dec
lahf
pop
cmp
outs
repnz
add
xor
test
test
pop
xchg
fldpi
mov
dec
mov
sbb
in
dec
mov
inc
mov
mov
mov
sti
mov
mov
bound
imul
mov
xor
scas
xchg
jno
pop
adc
push
das
fst
and
jbe
jo
xchg
xor
jo
fsubr
push
(bad)
in
int
mov
movs
outs
stc
inc
pop
push
jne
cld
outs
arpl
lods
fisubr
iret
out
or
push
leave
imul
pop
and
cld
leave
cmp
jnp
retf
scas
test
push
in
pop
and
xor
and
jae
stc
xchg
(bad)
cmp
push
mov
cs
fldcw
jecxz
mov
jle
cwde
sub
(bad)
and
xor
jge
sub
ret
dec
aam
pop
scas
dec
call
inc
lock
icebp
xor
addr16
(bad)
in
push
out
jnp
es
mov
sahf
push
mov
test
movs
mov
xchg
push
mul
pop
dec
gs
dec
ja
dec
jo
jge
shr
cdq
and
lock
or
mov
test
call
xchg
clc
mov
daa
mov
std
jl
into
int
cmp
dec
scas
adc
in
and
lods
ret
xchg
push
test
mov
out
sbb
scas
(bad)
jmp
lods
shl
jb
dec
cmp
jl
add
or
and
jb
pop
(bad)
into
out
sbb
inc
sub
mov
mov
sar
cmps
add
push
outs
enter
lods
mov
xor
ret
std
jne
pop
fsubr
push
sbb
arpl
repnz
inc
and
pop
push
and
test
fidiv
sbb
retf
mov
int3
mov
jo
jg
fdiv
lahf
adc
push
call
add
sub
(bad)
jno
sar
ins
pop
and
inc
imul
lds
mov
test
jae
mov
xchg
jge
or
aam
xor
clc
xor
jmp
daa
jnp
fild
mov
adc
push
lds
cmp
inc
popf
or
xchg
xchg
push
push
xor
stos
and
inc
add
data16
std
push
mov
fcmovnbe
push
push
push
mov
push
cdq
adc
loope
sbb
push
pusha
xchg
push
ins
mov
ror
cmp
stos
mov
jp
add
(bad)
sbb
inc
and
and
push
and
in
mov
mov
sbb
mov
pop
xor
int
hlt
sbb
aas
sub
(bad)
pop
mov
pushf
in
dec
mov
imul
cld
pop
shr
inc
pop
xchg
dec
push
call
push
dec
imul
cld
daa
mov
inc
scas
enter
sub
pop
dec
push
loopne
rcr
adc
push
xchg
dec
fisttp
pop
movs
jecxz
imul
lds
out
loope
test
mov
icebp
daa
push
and
xor
lds
pusha
xchg
jp
and
rcr
in
mov
clc
xor
mov
adc
arpl
hlt
xchg
mov
daa
jbe
stos
out
sub
out
pop
sti
pop
and
movs
jae
xchg
push
fwait
jl
pusha
(bad)
jmp
mov
or
fnsave
cmps
inc
inc
xor
popf
fstp
adc
outs
adc
cmp
or
or
cmp
and
call
std
sub
mov
imul
mov
sbb
jl
jmp
xchg
ret
cmps
or
pop
out
sub
or
mov
push
dec
inc
test
pop
sbb
outs
adc
out
daa
xchg
js
or
lahf
push
jb
pusha
retf
adc
mov
push
js
sbb
bound
jns
xchg
and
in
mov
jb
xor
loope
or
mov
pop
ja
inc
sar
out
pop
inc
add
mov
jno
push
ja
dec
sbb
mov
in
les
push
cwde
cmp
dec
mov
xlat
add
das
fdivr
(bad)
push
mov
xor
test
and
mov
cld
prefetchw
jo
add
aam
push
fisub
imul
popa
fcom
xor
or
xchg
ret
icebp
retf
add
aad
adc
sar
jp
vpmulhuw
push
mov
or
(bad)
push
(bad)
mov
out
addr16
pop
dec
gs
push
pop
add
mov
test
jns
mov
std
stos
in
adc
mov
test
outs
cld
push
mov
out
pop
xchg
js
fild
push
test
mov
int
mov
fdivr
mov
pop
dec
out
loop
inc
mov
lea
lahf
xor
jne
(bad)
scas
sub
cmp
stos
pop
ret
sub
pop
jmp
pusha
cdq
add
ins
mov
xchg
cwde
adc
cmp
sti
(bad)
ins
into
and
test
jle
sar
pop
cwde
push
jle
xor
inc
inc
mov
adc
sub
stos
mov
imul
jae
test
cmps
addr16
cmp
jnp
mov
ret
mov
push
push
hlt
cld
in
aad
mov
sbb
cmp
hlt
adc
push
pusha
rcr
mov
ds
mov
mov
sbb
ret
in
ins
pop
outs
mov
sub
cmc
xchg
dec
pop
xor
and
in
shl
retf
cmc
addr16
call
daa
inc
adc
pop
das
mov
xchg
xlat
fdivr
pop
or
dec
dec
daa
push
sub
xchg
push
mov
push
rol
test
xor
mov
pop
push
imul
jae
into
int
dec
call
dec
into
ficom
xor
ret
popa
xchg
(bad)
out
and
push
mov
sbb
out
xchg
scas
dec
inc
sahf
in
or
xor
and
sbb
push
sahf
inc
pop
push
inc
push
and
mov
imul
imul
mov
jno
xchg
xchg
popf
test
jbe
pop
bound
dec
mov
add
push
pop
adc
mul
(bad)
jmp
push
out
rol
and
jno
int
jmp
cld
dec
shr
les
rcl
loopne
mov
arpl
cwde
(bad)
fstp
pop
int3
int
in
(bad)
(bad)
fisub
or
add
and
mov
aam
les
arpl
test
dec
adc
psubb
cmp
repnz
aam
dec
leave
outs
mov
(bad)
adc
mov
popf
xchg
push
je
and
mov
jnp
cs
mov
xchg
adc
cmp
jno
movs
jle
push
mov
jge
sub
xor
test
mov
and
sbb
cli
jne
cmp
push
mov
sbb
and
std
jg
es
ss
mov
lock
js
jl
cmp
jae
sbb
fwait
ja
mov
xor
sbb
scas
loopne
mov
cmp
jmp
xchg
push
bound
fcomp
pop
inc
pop
sbb
or
sub
mov
call
mov
push
js
pop
jmp
int
retf
or
push
fsubr
push
loope
enter
sub
shl
int3
inc
pushf
fs
ret
idiv
nop
jg
and
mov
mov
pop
jbe
daa
leave
push
sbb
je
jbe
mov
outs
nop
test
test
jmp
inc
xor
mov
xchg
out
pop
or
lds
lods
call
cdq
cmps
cmp
sub
push
cdq
push
nop
jg
out
cs
mov
jmp
aas
inc
mov
pop
iret
inc
or
bound
mov
xlat
nop
enter
shl
mov
(bad)
adc
cld
test
inc
jo
cmp
int3
das
jg
pop
in
in
in
dec
pop
pop
fistp
setb
ror
int
ins
call
sbb
mov
or
push
cmp
popf
and
sbb
je
sbb
and
xchg
je
sbb
es
fsubr
int
mov
rcl
push
shl
sub
pushf
cmp
sub
call
xor
mov
xor
push
push
fs
xor
rep
fld
stc
rcl
mov
(bad)
sub
xchg
push
retf
call
pop
add
add
stc
mov
or
repnz
lods
pushf
stos
lahf
cmp
dec
out
fnsave
and
mul
pushf
aaa
movs
out
push
out
sub
sub
mov
sub
mov
std
outs
jo
xchg
cmc
pop
adc
inc
loope
test
cmpxchg
(bad)
jmp
xlat
adc
add
call
stos
push
mov
adc
xor
adc
dec
xchg
push
unpckhps
push
xor
scas
add
fld
addr16
jb
add
jae
dec
inc
mov
or
cmp
movs
or
add
mov
xchg
mov
ret
mov
je
cmp
fistp
leave
jo
imul
mov
sbb
mov
rcr
iret
mov
call
loopne
pop
aad
loop
lock
sbb
dec
mov
mov
ret
add
jg
stos
pop
ror
mov
mov
imul
loop
popa
cmc
mov
inc
mov
and
repnz
or
ds
mov
add
rcl
scas
mov
mov
cdq
repnz
dec
in
lea
sbb
pop
sub
mov
in
scas
sub
jns
adc
or
push
out
or
cli
cmps
jle
xchg
and
cmp
sbb
xchg
inc
(bad)
call
std
iret
pop
push
(bad)
mov
test
sbb
test
sbb
stos
xlat
test
xor
clc
imul
pop
cmp
rcl
imul
cmp
adc
inc
enter
or
bound
add
shl
pusha
movs
push
cwde
sti
lock
div
stos
dec
sub
jo
ficom
pop
aad
and
jle
or
inc
call
test
scas
push
ret
jge
pop
das
scas
xchg
iret
outs
mov
idiv
scas
mov
push
shr
pop
xlat
sub
call
es
push
cld
shr
inc
sbb
ins
jne
cmp
inc
adc
mov
sbb
jno
je
cs
pop
cmp
push
push
int
or
mov
ret
jecxz
xchg
push
aam
cs
shl
adc
jmp
mov
push
neg
lock
mov
inc
sub
ror
pop
jmp
out
mov
push
imul
dec
out
mov
pushf
mov
jbe
imul
pop
push
mov
cmc
inc
push
xchg
out
mov
jbe
lods
ret
fstp
mov
pop
sbb
dec
das
or
shl
cmps
mov
mov
add
jbe
pop
xor
les
jno
sub
(bad)
pop
xor
sbb
fs
retf
push
aaa
out
data16
leave
or
adc
mov
int3
adc
adc
out
adc
test
dec
xchg
(bad)
inc
ss
pop
ins
inc
loop
fmul
mov
arpl
fistp
cwde
or
xchg
mov
sbb
jns
ds
movs
idiv
xor
sbb
jo
jl
(bad)
sbb
add
push
mov
sbb
push
movs
ss
dec
scas
aad
inc
aaa
movs
mov
std
mov
jp
(bad)
aad
movs
push
jb
in
test
add
sub
push
int
mov
and
data16
stc
retf
cmp
xlat
add
jns
outs
inc
addr16
xrelease
fmul
or
fdiv
popf
xor
aas
mov
jns
imul
syscall
ins
cmps
xchg
cli
test
dec
or
les
inc
push
mov
sbb
adc
cmp
das
xchg
jo
adc
jg
repz
push
pusha
jns
jge
sub
ret
dec
cli
jmp
cmp
xchg
cmps
clc
jmp
repnz
jne
je
test
int
and
xchg
cmp
or
dec
push
sbb
inc
dec
xchg
fs
pop
push
push
and
lea
mov
adc
shl
push
or
aaa
cmp
in
sbb
(bad)
pop
pop
imul
ret
pop
out
jmp
imul
rcl
pop
pop
mov
fistp
popf
jle
and
jg
jg
lods
inc
scas
xchg
sub
leave
push
lods
fbstp
and
pop
rcr
and
stos
icebp
cmps
movs
sar
imul
adc
and
jecxz
outs
push
push
(bad)
sub
inc
mov
add
pop
mov
mov
mov
pushf
xchg
loope
js
mov
inc
mov
mov
(bad)
pop
jno
lods
lds
jo
xchg
sbb
gs
bound
ret
cmp
sbb
push
call
stos
mov
inc
rol
vfmaddss
cmc
add
aaa
or
cmp
js
sub
jecxz
mov
push
fs
call
aam
mov
xchg
mov
aaa
inc
mov
mov
push
jb
leave
retf
jp
jo
das
inc
ja
js
(bad)
out
mov
addr16
jb
add
lock
pusha
xor
pop
out
popa
inc
dec
neg
cmps
mov
or
out
retf
sbb
loopne
push
dec
ss
sahf
ret
xchg
sbb
mov
jnp
mov
sbb
pop
xchg
inc
jb
aad
or
pop
jg
ror
add
int3
sub
cmp
jne
xchg
aas
fsubr
popa
xchg
pop
movs
scas
loopne
push
ret
imul
adc
fild
mov
stos
test
or
jne
test
push
xchg
mov
ja
fsubr
xchg
das
pop
loop
push
xchg
lea
push
mov
(bad)
aad
adc
fstp
inc
out
test
stc
(bad)
das
shr
iret
stc
jl
xchg
mov
div
lods
xchg
stc
cmc
movs
aas
mov
cmp
dec
and
loopne
sub
adc
aaa
(bad)
pop
mov
cli
inc
nop
imul
ja
lds
push
sbb
bound
push
xchg
inc
pop
loopne
inc
xor
push
inc
xor
fnsave
(bad)
mov
add
sbb
jnp
(bad)
je
fisttp
rcr
push
dec
mov
lods
in
mov
or
test
adc
popa
int
imul
pop
xchg
nop
outs
je
inc
jno
fld
inc
(bad)
loopne
xchg
daa
shl
sbb
ds
fisub
add
adc
int
inc
aam
push
clc
jo
in
cli
xchg
fsub
cmovs
inc
in
test
sub
or
and
fcmovnb
mov
outs
loope
es
pop
test
aad
adc
in
jne
dec
loopne
aad
gs
push
sub
(bad)
adc
pop
add
sub
sub
imul
cmps
dec
xor
jg
fnstsw
scas
add
jmp
les
adc
cli
movs
adc
jo
xchg
add
or
xchg
cmp
cld
and
hlt
dec
mov
adc
add
stc
inc
and
leave
mov
pop
shr
jae
dec
push
push
out
xor
ret
sub
mov
mov
ja
out
test
sbb
fild
(bad)
and
add
mov
mov
adc
movzx
xor
arpl
sub
mov
xchg
(bad)
retf
dec
in
mov
jo
cmp
inc
add
mov
test
repnz
and
or
mov
jns
outs
push
popf
push
xor
aas
not
adc
or
inc
mov
mov
jnp
(bad)
xchg
fild
mov
cs
jle
ret
push
(bad)
ins
call
cmp
jmp
cmp
mov
std
(bad)
adc
cmp
push
jnp
add
cli
fwait
(bad)
scas
inc
in
popa
or
in
jmp
jmp
inc
add
nop
in
daa
or
cmp
(bad)
icebp
repz
call
sbb
std
sub
lods
(bad)
mov
int
push
cli
in
push
pop
add
xor
and
jo
shl
loope
inc
mov
inc
aaa
jno
add
push
loop
sub
add
mov
push
test
pop
cmps
dec
xchg
sbb
add
push
or
mov
xchg
ss
fs
inc
(bad)
arpl
lds
lds
rcr
outs
jb
adc
mov
cmps
cmps
hlt
dec
sub
in
aad
into
xor
test
push
sbb
add
inc
push
dec
test
scas
pushf
mov
sub
pop
popf
neg
icebp
mov
xchg
lock
outs
fmulp
xchg
mov
xchg
push
out
mov
mov
pop
call
fwait
xchg
sbb
jne
in
call
imul
fldenv
add
cmps
cld
xchg
outs
push
adc
mov
je
pusha
jg
add
lock
push
scas
retf
inc
cmp
cmp
fs
push
enter
inc
fcmovnu
inc
gs
test
dec
xchg
data16
out
movs
cwde
jle
stos
sub
inc
adc
sub
xor
popa
pop
and
aas
push
push
dec
(bad)
mov
inc
cmp
and
dec
mov
lods
mov
mov
bound
mov
enter
loop
mov
les
out
in
pushf
xchg
mov
in
cmp
mov
dec
movs
lods
pop
into
retf
subps
inc
ss
push
fistp
inc
loope
cmp
loop
lock
retf
cmp
icebp
loope
fild
adc
add
pushf
into
adc
lock
cs
cmps
ror
out
adc
arpl
jmp
outs
inc
cwde
and
and
xchg
fistp
sti
outs
and
(bad)
adc
push
mov
iret
mov
jge
push
pop
(bad)
stos
mov
and
ja
movs
int3
cmp
sub
stos
push
into
dec
iret
sub
sahf
jmp
mov
jmp
sahf
pop
dec
retf
shl
sbb
rcr
sbb
cs
fcom
pop
cwde
(bad)
jbe
cmp
mov
(bad)
(bad)
arpl
push
icebp
push
(bad)
lods
movs
and
sbb
jne
into
ins
cmp
inc
push
cmps
jle
dec
dec
add
jl
sbb
xor
sbb
test
addr16
mov
cmp
pop
(bad)
and
inc
mov
adc
xor
shl
and
push
test
clc
arpl
push
xlat
into
xor
inc
xchg
and
mov
mov
jle
enter
push
call
out
lods
mov
dec
sub
js
je
xor
cdq
push
hlt
repz
pop
lahf
cmps
push
int3
pop
mov
pop
push
inc
jns
inc
mov
cmp
pop
or
mov
or
and
les
(bad)
loop
mov
jl
xchg
xor
and
dec
(bad)
jmp
xor
push
pushf
movs
or
or
xchg
fwait
mov
cmp
jbe
aaa
rcr
stc
jl
sahf
and
js
sub
pop
jbe
xor
loop
cli
mov
clc
cmp
inc
ins
jle
sar
imul
xchg
sbb
sub
push
imul
shr
imul
addr16
imul
mov
inc
sahf
sti
mov
sub
outs
push
out
pop
mov
push
push
cmp
test
cdq
psllq
cmps
out
repnz
fidivr
mov
xor
pop
mov
test
(bad)
stc
or
cmps
cdq
test
fsub
push
retf
jae
movs
dec
rcl
shl
cmps
inc
retf
loopne
cmps
sbb
dec
fistp
mov
xchg
dec
adc
test
dec
push
xor
mov
adc
xor
hlt
push
pop
ret
and
test
stc
adc
ja
and
fistp
clc
fsubr
popa
cmp
repz
pop
mov
xchg
ds
jge
movs
stos
(bad)
and
outs
loopne
push
cmps
lds
fiadd
cmp
retf
fnsave
fdiv
mov
push
adc
xor
mov
movs
in
ficom
cmp
adc
out
push
pop
cmp
sbb
or
mov
cmc
hlt
shl
lock
mov
rcr
in
push
movs
or
lods
push
dec
jnp
sub
pusha
stos
mov
mov
mov
xchg
pusha
jp
add
imul
or
not
in
xchg
call
mov
mov
and
jl
jbe
loop
pop
cmp
cmp
sbb
js
clc
pop
pop
repz
pop
dec
push
ss
retf
int
outs
jbe
xor
out
scas
outs
ror
or
ror
and
sti
add
sbb
iret
popf
xchg
es
repnz
mov
inc
fnstcw
retf
idiv
mov
repz
adc
aad
jge
mov
jmp
push
(bad)
mov
xor
in
test
aas
test
xchg
fcomp
sahf
cwde
es
pop
stos
adc
test
lods
lea
add
bound
xlat
adc
hlt
dec
loop
push
mov
inc
push
nop
ins
add
sbb
repz
les
and
mov
lahf
xor
imul
sbb
rol
xor
aad
(bad)
jle
xchg
pop
xchg
jge
mov
and
ins
js
in
aam
cmc
push
sar
loop
push
ja
repnz
xchg
cmp
xchg
cmp
(bad)
fmul
test
jp
xor
add
pop
push
arpl
fidiv
or
dec
push
repz
fistp
xchg
out
(bad)
leave
into
mov
iret
enter
jg
addr16
push
pop
mov
pop
push
stc
xchg
and
in
je
xchg
mov
cli
mov
in
scas
clc
imul
mov
into
shl
cmp
pushf
lods
out
repnz
ret
cmp
das
sbb
dec
sar
add
das
ss
xchg
push
addr16
lea
retf
arpl
xor
js
pop
mov
mov
movs
jnp
jecxz
or
push
sbb
push
stos
dec
repnz
fdiv
mov
aad
and
hlt
cmp
outs
stos
fstp
mov
retf
vpmuludq
inc
jge
or
xor
mov
jg
sbb
ds
aad
icebp
dec
outs
retf
clc
(bad)
into
sbb
jg
sar
pop
jb
push
push
mov
pusha
sbb
iret
bound
repz
int3
jnp
add
movs
cmps
rcr
mov
jne
rcl
pop
sbb
pop
push
jg
aas
mov
sbb
inc
lea
mov
add
iret
push
hlt
das
into
dec
mov
mov
dec
into
scas
outs
cwde
inc
cwde
pop
lock
sbb
add
fsubr
loop
fwait
retf
aaa
setl
fidiv
mov
cmp
dec
xor
adc
jno
sub
ss
dec
mov
pop
push
rol
lods
int
outs
dec
add
pushf
push
pop
sbb
in
clc
sbb
in
jle
scas
std
sub
adc
gs
mov
icebp
stos
jnp
adc
cwde
xchg
je
sub
movs
in
or
js
not
in
jle
outs
pop
dec
lds
pusha
push
xor
idiv
mov
cmp
cwde
and
mov
and
int3
xor
jbe
cmp
and
cmp
jecxz
inc
mov
sub
push
aad
mov
fs
sub
sar
imul
mov
gs
add
arpl
leave
cmp
stc
sbb
int3
push
int
fild
xchg
daa
mov
mov
adc
and
fs
fwait
pop
outs
xor
daa
or
jmp
and
push
lds
push
test
out
inc
ds
les
mov
gs
stos
mov
inc
repz
adc
test
sub
retf
lock
adc
jge
add
stos
cli
outs
fmul
mov
shl
and
int
stc
xchg
or
out
imul
retf
popa
in
jb
jo
imul
dec
mov
and
shr
outs
push
mov
rcl
push
pop
or
imul
cmc
sar
mov
fiadd
in
test
dec
test
fldlg2
adc
pop
mov
inc
sub
mov
pop
popf
(bad)
jbe
test
mov
push
(bad)
sub
push
cmp
arpl
jno
or
addr16
adc
adc
jge
aam
mov
pop
or
bnd
and
jl
fmul
dec
dec
out
inc
sub
iret
aam
sbb
sub
retf
les
into
xor
(bad)
out
push
dec
dec
sub
cmp
jmp
and
push
and
sbb
nop
aaa
into
jae
mov
xchg
ins
cmp
pop
loopne
(bad)
sub
xchg
pushf
cmp
pop
sbb
cli
xor
cmp
xchg
fcomp
mov
push
xchg
loop
fidiv
cmp
xor
mov
mov
fs
mov
loope
pop
lds
adc
and
sti
outs
pop
xchg
or
and
icebp
inc
cmovl
fcmovnu
mov
fcomip
and
jle
inc
into
scas
push
test
xchg
outs
pop
push
cmp
leave
add
xchg
jns
movs
in
mov
push
jmp
outs
push
sbb
jns
or
sub
popf
fild
lods
test
push
shr
inc
hlt
inc
pop
outs
test
push
bound
jne
mov
and
in
(bad)
out
mov
sub
mov
adc
pop
test
cmp
loope
les
ins
inc
inc
adc
jmp
nop
jge
sub
les
jge
scas
popf
(bad)
fwait
sti
push
xchg
in
icebp
(bad)
lock
cs
lock
jnp
rol
stos
jle
into
add
(bad)
bound
add
add
pushfw
xchg
les
or
cwde
in
push
adc
shl
ficomp
rcl
das
je
out
pop
retf
mov
in
and
adc
nop
dec
xor
daa
shr
pop
inc
fnsave
dec
fstp
and
or
sti
adc
test
pop
fadd
cmp
dec
mov
sub
cs
jmp
fidivr
push
push
jp
push
inc
add
mov
mov
sub
pop
sbb
fld
lea
mov
mov
fcom
stc
daa
dec
mov
ins
mov
dec
xchg
push
sub
and
push
xor
ins
retf
arpl
add
xor
es
and
mov
jbe
jg
psubsw
pop
call
jmp
icebp
ja
in
cdq
dec
xlat
cmp
push
fisttp
jge
pop
inc
cmps
bound
lock
jne
adc
inc
cwde
cs
adc
into
jge
int
and
and
xchg
repnz
mov
repnz
das
sub
jmp
pop
and
aam
mov
scas
jle
arpl
sub
inc
(bad)
push
mov
aam
retf
mov
cmp
mov
jno
shl
pop
iret
outs
jnp
adc
or
loopne
inc
jmp
adc
mov
imul
int
mov
inc
data16
arpl
add
sbb
adc
int3
add
pop
sbb
adc
out
test
(bad)
lods
test
(bad)
call
add
sbb
inc
jmp
fs
push
(bad)
inc
in
imul
sbb
pop
sbb
sbb
adc
test
les
mov
xchg
aad
adc
jnp
ja
gs
lock
or
mov
or
test
cmp
rcl
(bad)
mov
pusha
mov
ss
shl
sbb
scas
cvtpi2ps
xchg
pop
dec
hlt
ins
movs
jb
xlat
add
div
sbb
mov
push
ror
mov
push
mov
or
(bad)
call
jmp
pop
pop
mov
cmc
out
xchg
mov
inc
lds
jo
vmovntdq
cmp
adc
cmp
mov
pusha
lea
pop
loope
or
mov
jne
dec
cmc
cmps
pop
dec
and
adc
repz
jmp
shl
jb
push
stos
jmp
inc
mov
call
ins
mov
dec
sar
and
mov
scas
pop
cdq
jnp
or
pop
cli
push
pop
mov
(bad)
adc
jle
in
or
and
push
and
xchg
pusha
es
fs
js
xchg
add
or
and
pop
and
xchg
(bad)
pop
aas
or
ret
jge
xor
mov
cmp
in
inc
dec
xchg
mov
imul
daa
stos
cmp
in
retf
jmp
jno
iret
arpl
inc
ficomp
inc
rcr
retf
clc
ficom
sub
mov
jae
mov
push
adc
sub
cmp
ins
daa
or
cwde
mov
inc
and
adc
adc
and
js
xor
pusha
pop
push
(bad)
xor
xor
outs
sbb
loopne
rol
cmps
pop
push
test
dec
xchg
aas
loopne
sbb
rol
push
shl
ja
and
cwde
jo
or
xor
ret
test
jbe
test
jp
xchg
ret
mov
adc
mov
pop
lods
mov
jne
in
mov
jo
inc
xchg
shl
cwde
inc
ja
scas
or
add
(bad)
std
es
push
bswap
mov
fild
add
inc
in
inc
jecxz
push
mov
xor
jno
mov
cmp
hlt
popa
out
push
add
stc
inc
gs
inc
movs
xor
fcmovb
aas
add
add
mov
mov
and
shl
fimul
ror
mov
sbb
cmps
push
mov
pop
hlt
sahf
sbb
aas
or
fst
mov
inc
pushf
push
or
stc
jmp
jle
outs
popf
cmps
mov
mov
xchg
in
ds
cmps
dec
mov
scas
mov
inc
nop
cmps
sub
ins
leave
dec
dec
mov
sub
cdq
arpl
jg
jb
push
push
aam
sar
shr
cmc
xor
xor
frstor
shr
cmc
mov
lahf
and
push
xchg
rcr
cmp
cmp
mov
jg
jg
call
inc
push
mov
inc
cmps
loope
pusha
inc
in
pop
mov
enter
xor
jns
mov
push
sub
(bad)
ins
ror
nop
pop
or
test
sub
mov
cld
popa
sub
sahf
fdiv
or
aad
mov
push
lock
mov
cmp
in
jmp
inc
push
push
enter
pop
fstp
adc
aam
mov
xor
cmp
mov
xlat
and
pop
and
fadd
add
fwait
adc
adc
inc
adc
cmp
jg
sub
rcl
mov
mov
dec
ja
dec
and
fstp
mov
pusha
ret
inc
mov
outs
dec
push
mov
addr16
cdq
fld
sbb
cs
mov
dec
addr16
mov
jecxz
xchg
xchg
cli
retf
sbb
(bad)
xchg
xor
adc
push
cmp
mov
aad
adc
fsub
jle
pop
jg
dec
xchg
(bad)
out
(bad)
bound
iret
cmps
mov
loope
xor
ja
sub
cwde
add
stc
imul
arpl
movs
or
pop
pop
sbb
movs
cmp
sub
jns
imul
std
mov
or
cmps
fwait
gs
inc
mov
das
std
test
mov
(bad)
aas
cdq
sub
ins
call
sbb
lock
cmp
or
sub
dec
mov
push
imul
push
or
cmp
jmp
cwde
(bad)
rcr
xchg
cmp
dec
mov
adc
cmpxchg
xchg
call
mov
and
pop
(bad)
retf
push
and
push
mov
inc
or
or
cmp
mov
pop
into
fs
mov
test
mov
ds
arpl
cmp
and
test
sbb
jbe
xor
mov
adc
jno
cli
add
call
scas
add
push
mov
sahf
sub
lods
mov
ror
xchg
add
(bad)
mov
(bad)
xor
sbb
dec
es
push
inc
ret
nop
inc
call
pop
or
pop
or
ins
inc
aam
hlt
dec
mov
repnz
fcomp
outs
add
stos
inc
sub
dec
cmp
outs
or
cmp
ins
pushf
adc
fild
fwait
xchg
lahf
sti
cld
enter
mov
test
jmp
jecxz
mov
(bad)
ins
repnz
dec
or
ss
add
inc
mov
push
xor
test
(bad)
gs
inc
mov
pop
loop
aam
jns
sbb
test
test
push
rep
mov
lods
cmp
dec
(bad)
scas
shl
jb
fsub
adc
pop
add
test
mov
neg
imul
and
js
sub
cmc
das
or
sub
xor
loop
xlat
push
lods
popf
jl
dec
mov
movs
in
jno
sub
ins
int
lock
adc
mov
loop
aad
ret
pop
pop
aas
adc
jnp
iret
in
dec
mov
hlt
xchg
inc
icebp
add
xor
fadd
out
loop
in
ret
enter
mov
outs
stos
add
mov
int
in
xor
or
mov
out
adc
lea
bound
cli
mov
cmp
movs
sbb
imul
test
lods
mov
mov
lea
movs
push
retf
pop
lods
aad
ds
cmps
aam
fnsave
jbe
add
retf
je
frstor
jne
cmp
dec
in
adc
cdq
push
push
fild
bound
shl
ror
mov
repz
xor
push
repnz
hlt
push
sub
sub
stos
cmp
sbb
frstor
les
adc
mov
mov
sbb
lods
fisttp
pop
dec
dec
or
and
or
aad
test
ins
pop
cmp
push
loope
cmp
sbb
ds
enter
mov
sbb
retf
test
sahf
es
rol
rol
pushf
dec
mov
mov
xor
xchg
mov
xor
aas
test
cmps
je
sbb
cmp
pop
in
push
cdq
call
xor
cmp
test
out
add
lods
jg
mov
test
clc
push
aaa
mov
aas
outs
dec
mov
dec
iret
adc
fdiv
push
add
loopne
daa
into
or
es
daa
add
mov
in
sub
push
stc
pop
call
lock
push
pop
cmp
sub
pop
push
mov
push
sbb
sub
sub
test
jecxz
and
xchg
pop
arpl
push
addr16
fadd
es
outs
mov
jmp
jns
out
imul
call
(bad)
adc
mov
pop
pop
cmp
aaa
data16
sbb
or
daa
adc
cmp
stos
shr
mov
push
push
mov
xchg
push
mov
repz
lods
adc
mul
mov
gs
(bad)
scas
push
push
xor
mov
push
pop
leave
add
adc
jmp
(bad)
cmc
nop
mov
mov
jp
call
adc
sub
mov
aaa
into
mov
add
push
inc
test
sbb
mov
imul
gs
cmc
popa
adc
mov
push
fs
gs
test
inc
ds
mov
data16
(bad)
rcr
arpl
or
setne
lods
sbb
add
(bad)
mov
cmp
stos
xor
(bad)
xchg
in
cmp
fs
cli
add
scas
dec
(bad)
imul
jmp
sub
dec
fcom
lods
push
push
and
loop
gs
sub
push
mov
ins
sbb
mov
cs
scas
retf
xchg
sbb
and
mov
pop
adc
mov
call
jno
enter
push
xor
push
test
rol
and
aad
adc
ds
repnz
lock
mov
mov
inc
ds
jne
sbb
movs
hlt
mov
es
jg
mov
test
aaa
aaa
cli
ins
daa
ror
mov
inc
neg
push
test
pop
sbb
adc
sti
push
in
adc
leave
cmps
enter
into
jecxz
mov
fsubr
inc
div
stos
aas
test
in
jge
jmp
movs
test
mov
mov
rol
cmp
pop
ss
push
(bad)
fdivr
pop
mov
jge
add
cmc
adc
push
add
es
push
retf
mov
stc
sbb
pusha
shl
and
call
sub
repz
repz
xchg
jmp
xor
fwait
inc
dec
or
repz
retf
push
repz
pusha
scas
fmul
imul
push
ja
mov
mov
ja
js
loopne
out
xchg
pop
mov
adc
adc
js
mov
inc
jmp
sbb
movs
and
sti
inc
mov
xor
pop
adc
and
and
rcr
call
mov
lea
mov
add
(bad)
into
jge
(bad)
cmps
pop
(bad)
std
outs
jb
adc
sub
jb
stos
xchg
mov
dec
dec
pop
mov
push
sub
cmc
or
inc
es
in
mov
cmp
sub
sbb
lahf
mov
ins
jne
sub
add
xchg
inc
cmp
dec
(bad)
cmps
das
xchg
pusha
xchg
pop
adc
fidivr
in
cmp
mov
mov
xchg
mov
stos
inc
dec
dec
push
jmp
push
div
outs
ret
ret
mov
dec
xlat
retf
or
(bad)
cmc
push
or
or
aad
ins
iret
jmp
idiv
mov
xchg
jge
and
imul
call
mov
mov
cli
jl
and
imul
sub
aam
sbb
push
xchg
lods
dec
mov
jnp
push
aam
enter
nop
xchg
mov
std
es
mov
out
(bad)
out
jae
loopne
inc
jge
sbb
mov
mov
cmp
sahf
(bad)
mov
aam
imul
popa
push
popf
inc
xlat
xor
lea
scas
shr
lods
imul
cs
xlat
cmp
push
stos
ss
push
scas
dec
sbb
cmp
movs
sub
adc
sub
mov
and
mov
xchg
cmp
xchg
jmp
nop
mov
adc
xchg
das
in
aas
jmp
(bad)
fdiv
jmp
sub
xchg
in
pop
mov
stos
inc
cmp
les
sar
dec
aas
mov
push
je
mov
mov
mov
fs
nop
xor
sti
lds
cmp
sahf
mov
or
push
add
or
xlat
cmp
jmp
mov
xor
in
je
add
popf
or
ins
xor
adc
pop
imul
mov
jecxz
(bad)
enter
pop
mul
sub
ins
(bad)
and
xchg
fiadd
pop
adc
sub
fdiv
and
jo
dec
mov
add
out
jmp
inc
fdivr
dec
scas
jne
(bad)
repz
xor
mov
mov
(bad)
sub
xor
mov
sbb
pop
jecxz
sbb
and
or
pop
je
push
dec
jle
push
sbb
xchg
int
xchg
(bad)
in
pop
xor
ficomp
adc
mov
inc
movs
inc
xchg
aad
pop
movs
mov
int
lds
(bad)
pusha
mov
aas
push
rcr
frstor
mov
rcr
scas
rol
pop
add
pop
loop
mov
adc
pop
inc
lahf
gs
dec
mov
fisub
xlat
pop
cli
pusha
test
add
mov
in
retf
in
push
xchg
ror
mov
into
pop
inc
addr16
lods
(bad)
jmp
cmp
sub
xor
pop
not
add
jne
mov
scas
lahf
scas
pop
pop
outs
call
pusha
or
mov
jo
fdiv
pop
sub
js
repz
fdiv
cli
mov
dec
fild
cmp
push
addr16
and
retf
repnz
cmp
dec
dec
outs
adc
fimul
jne
jo
sbb
sub
stos
add
in
hlt
retf
and
fldlg2
loop
jae
inc
mov
sub
jns
or
inc
rcr
nop
dec
call
sbb
push
or
add
stos
repz
and
(bad)
call
xchg
stc
test
mov
cmp
aad
test
sbb
and
fsub
gs
jmp
out
ret
inc
mov
in
out
fs
sub
push
cmp
ins
call
test
adc
fimul
and
push
aad
xor
mov
and
mov
mov
jae
imul
and
and
add
daa
mov
add
xlat
mov
jbe
and
fnstcw
add
adc
or
das
mov
leave
sub
pop
aaa
cmp
xlat
test
xor
(bad)
(bad)
and
and
mov
cmp
cli
mov
adc
bound
das
retf
or
push
mov
pusha
arpl
call
cli
out
adc
add
dec
xchg
inc
mov
xor
aaa
sub
ss
xchg
stos
pop
add
ret
movs
addr16
jp
dec
xchg
clc
(bad)
and
out
jge
jbe
sub
add
inc
add
mov
jecxz
xor
dec
inc
mov
fisttp
jle
ds
fs
dec
and
(bad)
sub
and
retf
mov
dec
mov
sbb
imul
push
adc
shl
mov
pop
outs
pop
enter
sub
mov
jb
ja
cli
das
outs
push
adc
das
imul
inc
mov
mov
movs
mov
pop
cmp
jg
cmp
jmp
jge
push
mov
push
xor
xor
adc
pop
dec
retf
xor
xchg
(bad)
aad
mov
addr16
hlt
jle
outs
mov
pushf
cmp
xlat
pop
jmp
fnsave
pop
mov
jae
jno
cli
mov
push
sub
lock
jge
cmp
xchg
xchg
add
cmp
gs
or
add
nop
mov
lds
iret
icebp
add
ds
sbb
dec
xchg
xchg
dec
mov
rcl
jle
xor
and
sti
(bad)
rcr
sub
aas
cli
ror
movs
jmp
inc
in
sbb
bound
cdq
inc
aad
icebp
fdiv
jno
cli
dec
sbb
sub
fild
sub
mov
mov
lahf
push
push
xor
rcl
mov
lock
ret
(bad)
mov
mov
gs
(bad)
daa
rcl
push
jecxz
mov
sbb
jg
mov
scas
sbb
xchg
push
fcmovbe
test
jmp
cmp
xor
sbb
call
sbb
ss
mov
test
mov
add
pop
ret
out
je
jg
cli
out
retf
daa
push
sbb
add
shr
ret
lea
xchg
fsub
mov
adc
fist
aaa
lock
sbb
cmp
mov
lahf
add
popf
mov
mov
fdiv
(bad)
repz
cmp
xor
pop
popf
dec
sbb
lods
jecxz
xor
outs
xchg
test
push
pop
xor
cmp
sbb
scas
in
pop
ret
add
sub
lock
mov
retf
mov
inc
xchg
sar
pop
and
out
add
xor
rcr
std
push
test
movs
loopne
xlat
rol
test
sbb
cmp
je
and
push
fbld
sub
sub
out
adc
sbb
loop
sahf
xchg
loope
or
inc
xchg
sbb
add
hlt
mov
mov
ja
pop
and
es
(bad)
xor
cmp
out
mov
sar
and
es
push
jns
and
cld
jmp
rcl
test
cwde
fbld
sbb
and
sub
cwde
push
jge
ror
dec
xor
mov
push
or
leave
push
or
dec
xor
mov
fistp
mulps
movs
mov
ins
fldenv
mov
movs
sub
inc
adc
mov
movs
dec
lahf
rcr
repz
or
adc
stc
je
test
mov
push
cmp
retf
leave
mov
imul
mov
jge
add
sar
daa
fwait
arpl
push
out
adc
xor
fwait
xchg
popa
mov
(bad)
ret
ret
aad
retf
cmp
je
pop
and
pmaddwd
inc
outs
or
push
sar
(bad)
mov
fwait
xor
inc
movs
push
add
xor
adc
call
add
(bad)
test
adc
ins
add
add
xchg
daa
je
fstp
loope
jle
jge
pop
cdq
loop
popf
dec
stos
pusha
daa
hlt
jo
iret
mov
jmp
out
push
repz
cli
loopne
jp
push
xlat
or
(bad)
mov
jmp
loopne
xchg
jecxz
movs
leave
out
add
std
int
fs
sub
stc
sar
fs
mov
xorps
mov
xchg
mov
ins
add
popa
popf
adc
xchg
push
jne
retf
imul
mov
push
jle
lods
lods
inc
shl
jne
or
(bad)
hlt
sbb
vpmacssww
pop
sub
das
mov
ret
iret
aad
sbb
pop
std
test
xchg
mov
pop
sbb
cmp
js
sub
xlat
ss
add
dec
out
and
aam
scas
dec
sub
cmp
mov
mov
fldenv
outs
add
and
mov
pop
hlt
xchg
ret
icebp
or
pushf
dec
je
xor
sub
sub
add
loope
sbb
mov
out
add
cmp
mov
sub
mov
loope
xor
adc
je
shl
mov
ds
jl
enter
add
test
lods
xchg
mov
inc
retf
or
daa
cli
pop
mov
gs
inc
adc
ss
xchg
popa
lock
pop
push
aas
or
jp
aas
and
pop
jnp
lahf
add
retf
xor
jmp
stos
daa
pop
push
jg
icebp
add
xchg
mov
adc
xchg
push
adc
outs
dec
xchg
fucomp
(bad)
mov
xchg
mov
das
and
repnz
xchg
in
popa
jo
jp
daa
sar
cmps
outs
loopne
int3
xchg
mov
cpuid
addr16
sar
hlt
call
adc
ins
lods
xchg
shr
test
aad
adc
mov
clc
pusha
dec
xchg
add
das
add
pushf
mov
xor
sub
out
xlat
sub
pop
push
inc
add
cdq
pop
push
xor
mov
ret
pop
sub
retf
hlt
(bad)
mov
pop
xlat
enter
lock
adc
adc
daa
jbe
out
jb
cmp
mov
out
hlt
cmp
dec
jge
xlat
shl
ficomp
jns
fwait
jge
and
in
mov
push
pusha
int
xchg
sub
rol
xchg
in
std
fsubr
xchg
inc
jnp
scas
and
fld
mov
jbe
mov
test
jmp
sub
xchg
inc
mov
mov
cmp
sbb
xor
or
jae
inc
fs
pop
enter
dec
dec
(bad)
push
or
adc
dec
test
cdq
retf
xchg
in
out
fcmovne
sbb
or
adc
(bad)
imul
xor
aad
test
popf
loop
inc
or
or
(bad)
in
xchg
pop
cdq
dec
cmp
lock
(bad)
xchg
xlat
retf
adc
mov
aaa
jmp
jl
jmp
into
xchg
call
pop
int3
jl
cs
sbb
xchg
popa
stc
mov
add
sbb
rol
push
mov
mul
mov
in
test
inc
(bad)
aas
and
xor
mov
xchg
(bad)
je
test
inc
gs
fnstcw
jle
pop
push
das
jnp
out
jnp
std
adc
push
mov
int3
push
lock
and
xor
mov
fbstp
neg
push
xor
jnp
sub
mov
dec
add
sub
sub
xchg
sbb
in
and
imul
pand
pop
pop
xchg
jmp
ja
xor
adc
pop
pop
aas
adc
sbb
out
inc
and
dec
jns
retf
sbb
sahf
push
xchg
inc
loope
mov
inc
jbe
(bad)
into
push
lock
and
sub
into
mov
lock
jnp
in
loope
inc
sahf
bound
fs
push
imul
xor
sbb
outs
loopne
jo
mov
cmp
out
cs
push
sar
fdiv
ins
(bad)
lock
and
(bad)
jge
mov
daa
outs
xchg
inc
sub
adc
cli
pushf
and
fdiv
call
in
repz
adc
mov
add
dec
sbb
push
out
shl
mov
push
add
cli
push
nop
into
or
mov
nop
add
sbb
mov
je
outs
mov
pop
inc
cmp
mov
cmps
icebp
add
inc
clc
cmp
push
iret
stos
sub
dec
jb
push
jo
pushf
mov
dec
fs
dec
ror
pop
lahf
(bad)
push
dec
rcr
sub
jbe
sbb
push
jae
sbb
xor
popf
icebp
icebp
or
jne
leave
adc
pop
in
and
call
add
xchg
sub
cmps
sbb
mov
pop
int3
xacquire
es
xchg
shl
cmp
xlat
ds
clc
repnz
in
pop
mov
push
iret
jge
pusha
(bad)
pop
xchg
lods
xchg
mov
sub
(bad)
xchg
(bad)
movs
cmp
stos
aam
jb
call
dec
movs
in
sbb
sbb
vpaddusw
mov
jmp
(bad)
jb
inc
call
inc
cmc
ffree
aaa
cmovle
inc
out
xchg
aad
jmp
mov
or
pop
and
jge
ss
test
imul
xchg
es
sub
jb
cdq
cmps
or
push
stos
inc
mov
or
mov
inc
pushw
cmp
mov
mov
inc
stos
adc
test
cwde
in
xchg
jl
xor
push
sbb
icebp
in
in
imul
test
inc
movs
lea
aam
out
test
out
adc
dec
test
cmp
sbb
(bad)
lahf
stc
imul
mov
(bad)
dec
fldcw
sbb
cmps
push
pop
into
jg
inc
and
adc
or
mov
xchg
mov
arpl
dec
stos
jge
aaa
add
mov
cld
lds
std
retf
pop
push
ret
loop
adc
(bad)
sub
inc
std
leave
xlat
inc
xor
sahf
std
jmp
icebp
pop
or
jb
and
loopne
inc
cmp
dec
jle
pop
cmc
mov
pop
mov
or
inc
adc
sub
rcr
ins
push
push
out
xchg
rcl
(bad)
fist
iret
fisub
adc
aaa
aad
fadd
add
scas
dec
and
xchg
das
xchg
shl
stos
pop
or
leave
aaa
jb
dec
add
js
pusha
retf
rol
pop
or
dec
mov
test
out
mov
daa
into
fnsave
scas
mov
sbb
ds
xor
mov
push
xor
in
push
pop
mov
push
sub
sub
lds
lods
pop
jae
movs
dec
inc
push
jmp
mov
or
mov
fld
cmp
jb
cmp
mov
icebp
jl
mov
pop
test
sahf
lods
mov
jmp
mov
dec
ret
mov
popf
popf
lock
jge
not
and
mov
or
adc
movs
mov
or
adc
retf
lea
out
pop
adc
mov
into
int3
jns
xor
push
add
jge
add
mov
shl
(bad)
jnp
jecxz
sbb
fsubr
sub
outs
ins
sbb
xor
retf
jge
xchg
cmp
xor
jp
pop
sar
test
sbb
hlt
mov
hlt
add
iret
cwde
lods
cdq
aaa
add
pop
iret
xor
mov
movs
inc
icebp
hlt
frstor
jae
neg
outs
ds
and
push
pop
sbb
call
retf
pop
gs
add
or
cmp
push
and
cmp
inc
cmp
jnp
jbe
xor
retf
mov
dec
pop
xchg
mov
sub
sbb
dec
mov
cld
fidivr
adc
jl
adc
cli
mov
adc
xchg
cdq
test
ror
int3
(bad)
fs
lods
stc
and
mov
stos
sbb
and
ret
setno
test
adc
inc
cmp
repnz
data16
movs
mov
sti
sub
jge
mov
ret
and
addr16
test
xchg
mov
adc
add
dec
mov
or
jp
stos
pusha
into
into
pop
mov
jmp
jnp
sub
pop
mov
jp
test
in
popa
xlat
mov
addr16
leave
nop
jne
pop
into
in
mov
repz
nop
ss
xchg
jecxz
hlt
cmp
cmp
shr
and
lock
jb
fdivp
sub
push
ror
sar
xchg
cmp
iret
xchg
retf
xor
or
jle
xor
cmp
fadd
add
push
ds
repz
loope
fadd
dec
add
fcomp
push
bound
add
int
aam
das
clc
fmul
add
ins
fild
add
fcomp
jbe
add
sub
inc
outs
(bad)
fstp
push
jg
jg
sahf
pushf
in
test
add
add
js
int
(bad)
popf
xor
or
in
(bad)
jg
jp
nop
scas
repnz
call
fsubr
adc
push
pop
adc
mov
into
or
bound
aaa
push
dec
jnp
jle
push
imul
popf
mov
add
movs
push
cmp
stc
mov
enter
leave
out
pusha
stos
and
call
cmp
in
or
adc
ror
loop
pop
xor
(bad)
jp
fdiv
test
icebp
mov
jb
mov
fs
sbb
repz
xchg
jno
das
pop
retf
nop
xchg
cwde
aaa
sbb
push
pop
jae
mov
dec
leave
xor
dec
fisub
iret
lods
aas
or
out
add
sbb
sti
lods
dec
cmp
loope
inc
mov
lahf
jecxz
sub
sbb
ret
ds
int
jne
cdq
pop
dec
lds
lods
pop
popa
xor
dec
pop
push
jno
and
out
call
mov
mov
es
and
adc
push
nop
pop
jne
mov
in
call
loope
lock
mov
inc
xlat
and
loope
loopne
rcr
ins
sub
jmp
test
mov
xchg
cmps
jbe
adc
or
call
stos
mov
pushf
not
stos
adc
xor
jne
stos
leave
bound
push
mov
(bad)
or
pop
push
xchg
call
pop
call
xchg
(bad)
out
lods
dec
sub
test
mov
inc
in
xor
movs
inc
and
push
icebp
inc
mov
call
repnz
jmp
mov
jnp
and
pop
pop
mov
jnp
call
nop
pushf
add
call
test
pop
jmp
pop
push
jg
enter
and
cmp
cdq
scas
jge
pop
and
fcomip
leave
xor
push
les
and
push
test
and
(bad)
pop
leave
data16
mov
xor
aad
loop
sub
mov
adc
int
pop
shr
inc
xchg
nop
mov
cwde
(bad)
jns
sub
ins
mov
scas
rcr
div
nop
loope
dec
push
es
or
gs
dec
js
jbe
jmp
out
daa
cdq
fptan
push
ror
inc
pushf
popa
jl
add
cld
mov
bound
push
repnz
xchg
or
xchg
(bad)
fld
xor
ror
jecxz
cld
(bad)
repnz
mov
adc
scas
xchg
sbb
cmp
xchg
sub
(bad)
jne
mov
xor
and
push
push
ret
das
call
or
fiadd
and
dec
mov
jb
ficomp
pop
aam
push
jmp
retf
push
into
lods
jo
add
xor
or
jge
fisubr
and
mov
add
push
cmps
cmc
js
stos
daa
ins
inc
mov
push
push
fdivr
repnz
sbb
dec
pop
dec
aam
mov
(bad)
push
and
dec
stos
aad
pusha
ror
sub
clc
adc
sub
or
int3
int3
inc
mov
pusha
adc
jecxz
push
retf
jmp
mov
(bad)
mov
jo
(bad)
or
pop
stc
jg
fistp
out
pcmpgtw
pop
inc
jbe
pop
inc
dec
fdiv
out
or
cmp
jb
inc
loop
mov
test
test
xlat
cmp
idiv
inc
xlat
arpl
cs
add
test
mov
out
repz
pop
mov
and
jae
pop
daa
xchg
loope
fild
xor
das
mov
cmp
aam
jne
imul
inc
dec
or
xor
inc
loope
aad
outs
jmp
rol
cmp
xlat
mov
movs
jl
icebp
and
std
jns
rcl
xchg
cmp
jmp
xor
hlt
sub
nop
int
sub
xor
lea
inc
fst
cmp
loopne
jge
pop
call
aam
cmp
jmp
jnp
test
pop
jmp
or
jmp
pop
mov
lea
xchg
or
repz
sbb
sbb
je
data16
imul
sub
js
gs
ror
sub
das
inc
cs
add
sub
call
inc
into
fdiv
mov
xchg
(bad)
enter
mov
add
and
mov
jl
daa
hlt
mov
ficom
xchg
jmp
sbb
pop
loop
xor
or
rol
out
test
dec
sub
mov
fs
inc
push
bound
sub
pop
cmps
dec
in
sbb
cld
sbb
sbb
dec
fsubr
mov
repz
cwde
adc
cmp
inc
outs
enter
fs
or
ins
xchg
mov
dec
ret
lock
inc
int3
pop
inc
es
inc
xlat
(bad)
fidivr
push
repz
stc
(bad)
push
push
add
(bad)
and
ins
(bad)
jl
or
sub
stos
dec
out
push
jns
adc
daa
loopne
aas
mov
dec
adc
or
mov
(bad)
sub
push
adc
pop
enter
jecxz
jne
add
cdq
mov
shr
fs
call
mov
cmp
adc
sar
loop
in
jns
stc
inc
add
ja
lods
ja
dec
dec
adc
int
(bad)
fiadd
clc
sub
push
push
loopne
xchg
inc
(bad)
aaa
and
int
jl
in
jne
pop
xchg
ja
xor
pop
ins
int3
(bad)
loopne
scas
push
adc
(bad)
mov
mov
add
inc
push
jmp
or
inc
pop
cmp
in
lock
bound
pop
int
or
lods
push
cmp
dec
mov
addr16
xlat
mov
lock
test
xor
icebp
fs
enter
(bad)
jmp
lods
addr16
movs
movs
mov
je
arpl
jae
and
mov
div
xchg
es
fmulp
push
xchg
icebp
sti
shl
and
mov
cmps
fs
lods
and
mov
sahf
and
pop
mov
mov
movs
push
adc
out
cmps
cmp
sbb
pusha
inc
sub
(bad)
(bad)
lahf
push
inc
mov
xlat
mov
and
dec
sub
test
sub
adc
loop
cmp
adc
sbb
dec
cmp
lock
movs
jmp
sbb
stos
push
lock
mov
pop
(bad)
mov
movs
mov
lea
test
std
xchg
mov
add
mov
mov
dec
cmps
ret
pop
(bad)
fsubr
sub
mov
movs
push
cmp
adc
loopne
mov
or
cld
cmp
sub
lods
mov
add
mov
mov
(bad)
and
mov
xchg
or
sub
lahf
dec
adc
movs
fst
mov
xchg
inc
or
lods
mov
xor
iret
cli
das
std
je
pop
loopne
xor
add
adc
jmp
push
adc
mov
sbb
xchg
mov
xchg
add
mov
cmp
jo
std
cs
pushf
pop
mov
xchg
lods
mov
pop
inc
mov
pop
les
mov
xchg
cmp
jne
xchg
icebp
mov
out
shl
es
gs
pop
lds
aaa
inc
jnp
add
sbb
dec
or
jae
xchg
sbb
repz
push
movs
adc
sub
xchg
test
xchg
cmps
jbe
mov
rol
fild
pop
xor
jbe
push
loope
(bad)
cmovge
sbb
test
jle
leave
fdiv
movs
enter
sub
(bad)
iret
inc
mov
call
idiv
fs
pop
(bad)
cmp
shl
cmps
cld
arpl
push
adc
sti
cmc
test
mov
pop
stos
jae
mov
jmp
adc
xor
or
lods
std
mov
pop
adc
shl
out
and
sahf
fadd
inc
std
fcomp
mov
ret
add
mov
mov
jle
das
es
pop
push
cld
inc
loopne
cmp
jmp
outs
fist
inc
add
(bad)
dec
push
mov
mov
mov
pop
mov
outs
sbb
bound
sbb
cmps
adc
int
jno
jmp
ss
mov
inc
call
lock
pop
xchg
and
pop
les
jge
pop
add
jo
js
dec
je
test
leave
sub
mov
mov
push
or
fstp
mov
(bad)
aas
jp
stos
pop
fsubr
cmp
push
mov
dec
add
jno
pop
and
dec
mov
arpl
std
into
mov
shl
sub
xchg
(bad)
cmps
or
mov
sbb
xchg
retf
inc
int3
xlat
mov
(bad)
fbld
call
jo
fidiv
or
fcomi
push
cmp
or
mov
scas
jo
data16
(bad)
xchg
inc
mov
or
mov
(bad)
jbe
jb
or
sti
inc
or
jmp
mov
leave
test
repnz
push
out
adc
ror
(bad)
cmp
mov
cli
das
fidivr
or
xchg
mov
and
lds
data16
and
mov
out
pop
and
sahf
xchg
dec
cmps
push
sub
sbb
push
lods
push
or
scas
es
sub
pop
sub
or
add
cmp
loopne
fdivp
inc
push
dec
mov
sbb
ss
aas
mov
add
in
mov
fidiv
shl
ins
sahf
pushw
test
jge
out
dec
(bad)
and
mov
mov
mov
mov
cmc
mov
int
aaa
xchg
sahf
adc
mov
pop
push
or
cmp
push
cmp
scas
rol
mov
jp
sub
inc
add
int
cmps
sub
mov
repnz
mov
out
lods
or
imul
xor
mov
pop
cmp
xchg
ins
loopne
jl
dec
imul
push
pop
into
ss
sbb
lea
adc
jg
cwde
ja
mov
push
inc
cs
fidiv
xor
pushf
and
pop
sub
ins
scas
(bad)
cmp
clc
movs
xor
icebp
cmc
jmp
pop
add
aam
sbb
or
call
inc
in
scas
cli
nop
loopne
rol
retf
mov
inc
mov
push
jecxz
in
sub
(bad)
neg
xchg
pop
daa
add
imul
out
mov
pushf
xor
dec
mul
dec
sub
pop
movs
jnp
fcom
push
cmp
into
cmp
dec
ja
fwait
jp
punpcklbw
mov
ret
add
jno
dec
stos
jmp
and
add
xor
pop
fsubr
or
add
mov
jno
pop
(bad)
retf
pop
mov
jmp
call
stos
(bad)
or
and
push
stc
push
arpl
add
stc
test
cmp
jb
fucomip
sbb
rol
ret
sbb
inc
ret
cdq
out
mov
xchg
adc
call
inc
lea
xchg
daa
loop
mov
fwait
daa
cli
out
xor
clc
xchg
adc
in
add
rcr
adc
cwde
pop
xor
and
push
adc
popa
rcr
test
sahf
scas
rol
test
and
add
loope
jmp
ds
js
xchg
popa
xor
leave
jl
(bad)
mov
iret
sub
cmp
icebp
push
xor
or
shl
xor
and
retf
push
fcomp
xchg
mov
pextrw
jg
aaa
das
cmp
jmp
mov
repnz
pop
sar
add
xlat
push
in
mov
xor
push
test
mov
pop
mov
stos
(bad)
lods
gs
retf
inc
fisttp
sbb
aad
push
adc
jmp
popa
in
(bad)
xchg
pop
stos
es
cmp
int3
lods
ja
mov
imul
dec
inc
pop
or
cld
inc
adc
pop
sub
or
sbb
clc
mov
(bad)
loope
test
cmps
jns
add
xchg
(bad)
shl
test
inc
mov
outs
sbb
pop
add
retf
jns
mov
sbb
push
daa
sbb
jae
cs
pushf
dec
xor
jecxz
clc
mov
adc
jne
dec
test
cmp
test
inc
pusha
enter
pop
dec
push
stc
and
mov
sub
test
lea
mov
add
in
fld
enter
aaa
in
sub
ror
jle
or
sub
add
dec
movs
push
pop
jbe
mov
enter
test
cdq
jmp
xor
(bad)
fdiv
sub
mov
movs
pushf
test
mov
cs
inc
jg
les
jmp
sbb
call
shl
mov
xor
xchg
xchg
daa
stc
rcr
push
xor
jl
pop
or
mov
add
outs
sbb
xchg
scas
rol
add
das
mov
and
pop
pop
in
aam
xlat
sub
mov
cmp
and
lea
inc
hlt
adc
mov
lods
ror
push
lea
ret
push
mul
push
jne
mov
dec
sbb
mov
pop
retf
push
ficomp
xor
pop
sbb
jg
mov
inc
mov
mov
call
ins
pop
into
and
push
sahf
out
imul
into
mov
in
cmp
mov
mov
ret
xchg
call
mov
in
cmps
popa
pop
sbb
std
cmp
nop
test
ret
aas
outs
dec
sub
cwde
push
pop
int
sbb
gs
scas
ror
iret
adc
cli
fwait
adc
xchg
mov
ret
and
sti
hlt
aam
das
int
cmp
cmp
dec
scas
add
fst
jle
or
stc
stc
mov
jmp
xor
(bad)
and
and
fdivr
mov
add
mov
cmp
aaa
call
mov
outs
(bad)
adc
dec
inc
(bad)
enter
sbb
in
fisub
adc
add
fwait
(bad)
lock
hlt
push
jae
(bad)
adc
push
std
lock
jae
sub
pop
imul
mov
and
daa
jae
retf
xchg
bound
cwde
stos
sti
arpl
push
xor
mov
adc
test
ins
loope
rcl
loope
adc
mov
ins
pop
std
push
jg
fcmovne
scas
mov
gs
jp
cmp
sbb
cwde
les
cmps
jle
(bad)
int
jnp
sbb
push
ins
mov
jmp
sbb
dec
mov
pop
aam
aam
mov
rcr
inc
enter
jmp
cmp
ficomp
mov
jl
push
mov
fyl2xp1
xchg
sar
stos
xchg
jge
inc
push
add
dec
cdq
(bad)
pop
inc
aad
cmps
mov
ins
mov
inc
adc
xchg
jmp
inc
rep
jo
mov
pop
ficom
ss
pop
jp
fs
lds
daa
pop
cmc
mov
sti
aam
inc
xor
adc
das
test
and
stc
mov
out
push
cmps
scas
adc
call
push
jo
test
fwait
mov
daa
push
xchg
sub
inc
mov
(bad)
adc
and
out
idiv
mov
mov
xor
cwde
repz
dec
push
push
dec
loop
mov
aam
jge
jg
jae
ret
lea
xchg
sahf
(bad)
je
loop
sti
mov
test
imul
jb
(bad)
ins
popf
push
and
push
xchg
cmp
int
fs
mov
in
cmp
fmul
fild
mov
fs
fist
push
xchg
sti
mov
xor
inc
push
pop
movs
pop
or
push
and
xchg
xchg
(bad)
aad
xor
sub
pushf
mov
gs
mov
or
xor
push
add
mov
lods
mov
imul
in
jle
inc
bound
or
dec
jp
adc
mov
sbb
(bad)
(bad)
mov
retf
test
jmp
iret
not
pop
into
into
sar
popf
mov
cmps
je
mov
mov
fiadd
jae
iret
test
jl
mov
mov
loopne
sar
adc
mov
mov
fnstcw
or
mov
cmps
mov
cmp
sub
push
adc
dec
dec
inc
int
inc
adc
cmp
aas
aaa
(bad)
repz
mov
or
push
dec
xchg
stos
pop
sbb
in
mov
imul
shl
cmc
mov
pop
call
inc
shr
add
mov
loope
cmp
sbb
push
or
pop
adc
mov
adc
xor
into
dec
and
into
cmovne
std
jg
nop
std
imul
adc
mov
out
fisubr
popa
jae
frstor
movs
icebp
mov
and
mov
push
sbb
add
dec
and
xor
and
or
shr
cmp
fisub
retf
push
xor
imul
push
mov
xchg
inc
inc
cs
mov
retf
xor
cs
inc
loop
and
adc
mov
jecxz
icebp
sub
cmp
dec
loop
add
cmc
add
push
xchg
outs
fist
and
cmp
inc
adc
jnp
test
xor
push
aam
test
enter
sahf
fiadd
mov
loope
xchg
and
xrelease
mov
fldcw
stc
mov
fst
add
pop
out
in
int3
push
dec
and
hlt
inc
ja
int
sub
fcmove
aaa
aas
mov
jmp
add
fsub
xchg
push
daa
xchg
jno
sbb
out
sbb
mov
mov
mov
neg
xchg
and
adc
inc
push
mov
cwde
jae
sbb
ja
jmp
and
adc
add
hlt
fdivr
fistp
sub
xor
pop
mov
inc
adc
outs
stos
div
jns
sar
lahf
sub
aam
(bad)
sti
(bad)
mov
push
sub
jmp
jno
mov
ret
icebp
call
or
leave
movs
xchg
out
push
cli
xchg
fld
mov
mov
mov
retf
je
or
xlat
inc
ss
jnp
ret
jns
pop
sub
test
dec
sbb
and
outs
jae
(bad)
push
cmp
fdivp
std
arpl
pushf
sub
and
movs
in
dec
fistp
xchg
aad
or
je
mov
adc
jg
push
rol
xor
(bad)
jnp
mov
call
or
cmp
repz
mov
adc
pop
cli
cmovne
bound
ret
rcr
push
mov
js
or
sbb
aad
push
rdtsc
cmp
push
jb
outs
ins
cdq
adc
push
imul
sub
shl
cdq
test
movs
lods
sbb
sub
push
push
jle
add
aam
mov
dec
dec
sti
sub
xor
scas
das
mov
sub
outs
mov
xlat
mov
arpl
test
push
stos
mov
push
jae
loopne
adc
cs
mov
xchg
pop
dec
cmp
jb
adc
nop
fist
dec
add
rol
cmps
xchg
mov
cmp
push
cmc
jno
scas
in
mov
jg
pop
fist
mov
and
fs
adc
dec
mov
mov
ret
aam
sub
fs
jnp
out
pusha
fnstsw
or
mov
jl
call
call
push
jnp
lock
pop
adc
mov
enter
pop
or
shl
jp
or
jl
pop
xchg
inc
mov
(bad)
sub
ret
(bad)
fcom
or
sub
sbb
jmp
lds
push
cdq
or
add
cmp
sub
push
sub
inc
ins
cmp
into
mov
pop
repz
mov
jns
sub
sbb
rcr
ror
movs
push
mov
jecxz
gs
outs
adc
out
in
(bad)
and
inc
rol
push
mov
lods
mov
sbb
push
jns
call
fidivr
or
cdq
pushf
stos
stos
(bad)
out
lds
cmc
(bad)
sbb
lods
jp
push
(bad)
nop
and
fwait
call
cli
sbb
or
jbe
mov
sbb
and
stc
repnz
sbb
ret
xor
jmp
adc
adc
xchg
in
mov
mov
xchg
cmps
ins
ins
cmps
dec
dec
mov
sbb
leave
pop
pop
push
pop
test
std
push
stos
adc
cmps
xor
mov
push
mov
outs
fwait
scas
xchg
test
lds
leave
(bad)
repz
inc
fst
nop
jae
(bad)
cmp
push
icebp
mov
mov
pusha
jbe
out
ins
sti
mov
jne
jo
mov
jno
cmc
cmp
cli
and
pop
adc
mov
nop
push
mov
mov
lods
xor
adc
push
out
ins
sbb
sub
loope
sub
imul
aam
rol
cs
(bad)
test
mov
sahf
xor
xor
sbb
shl
fistp
add
pop
xchg
cmp
jle
xchg
inc
das
jae
sar
mov
jmp
pop
pop
jmp
loope
or
(bad)
sbb
jo
pop
xlat
popa
sub
or
clc
sbb
cmp
lock
enter
mov
leave
mov
push
sbb
or
pop
pop
ja
aad
das
cmp
inc
jmp
mov
push
hlt
test
pop
adc
push
sub
mov
rol
dec
jge
push
test
scas
mov
rol
aad
mov
mov
mov
and
sub
jno
sub
out
out
fadd
jne
inc
mov
adc
mov
sbb
xchg
xor
mov
cs
(bad)
out
or
dec
std
fs
shl
shr
dec
sbb
sbb
in
fisubr
stos
(bad)
mov
and
xor
pop
cmp
cmps
inc
frstor
lods
fld
mov
xor
cld
jbe
pop
rol
outs
cmps
ins
dec
fwait
stos
push
cmps
(bad)
mov
push
retf
add
cmps
out
in
sbb
lea
in
sub
mov
(bad)
icebp
mov
xchg
or
fwait
cdq
stc
xchg
je
das
inc
ds
sub
mov
push
xor
pop
mul
ror
mov
or
pop
or
xor
imul
(bad)
fstp
movs
mov
inc
(bad)
sub
stos
xor
sub
rcr
pushf
push
adc
cwde
test
and
xor
dec
push
scas
mov
fwait
aas
jl
test
imul
inc
inc
aaa
out
push
push
hlt
ret
mov
jecxz
inc
jo
add
fbstp
and
fsubr
mov
cmps
jnp
pop
test
xor
mov
imul
fisub
sub
loopne
xor
sub
addr16
jne
icebp
sbb
push
mov
push
adc
push
stc
aad
xor
ret
pop
rcr
xchg
in
lods
pop
jle
jnp
mov
cli
dec
fstp
dec
and
adc
ins
repz
mul
shl
addr16
push
test
cli
cdq
(bad)
xchg
jle
mov
mov
repz
and
in
retf
push
add
std
cmp
push
and
and
jecxz
sub
cmps
jl
fst
jecxz
jmp
in
loop
pushf
add
pop
js
push
sbb
xchg
repnz
push
inc
sbb
push
ins
(bad)
xor
es
mov
mov
stos
gs
stos
test
ds
xchg
adc
mov
cmp
gs
xor
adc
add
sub
sub
in
adc
cwde
xor
xor
inc
in
pop
xchg
push
clc
mov
inc
fnstcw
int3
(bad)
std
mov
ret
(bad)
sub
xor
sar
les
rol
mov
aam
pop
xchg
popa
jmp
or
pop
imul
inc
(bad)
hlt
mov
loope
mov
fadd
(bad)
repz
sar
cmp
inc
mov
loope
popa
sub
jne
sub
xor
sub
xchg
jp
aas
sub
scas
mov
adc
dec
and
dec
jae
(bad)
sbb
rcl
sbb
mov
pop
or
push
mov
push
or
mov
jnp
pop
clc
xor
or
sbb
ret
sub
mov
jecxz
(bad)
xchg
mov
jne
and
push
sbb
xchg
movs
add
xlat
cli
pop
(bad)
in
cmc
dec
jl
add
pop
call
sbb
pop
pslld
xchg
xor
sahf
das
mov
pop
inc
imul
shl
push
and
cdq
mov
mov
(bad)
mov
retf
adc
cmp
jmp
mov
jmp
pusha
aaa
sub
jns
es
je
(bad)
outs
adc
xchg
and
fcmove
sub
int3
mov
ss
shl
pop
in
mov
mov
out
in
test
jle
push
adc
fiadd
inc
mov
imul
cmovle
mov
inc
in
std
jb
push
lods
xchg
and
xchg
mov
mov
test
xor
aam
retf
sbb
xor
test
jecxz
mov
sub
in
clc
lock
mov
jle
sbb
mov
sti
arpl
mov
and
dec
sub
jae
jne
mov
add
xchg
jge
push
scas
push
lods
es
adc
mov
fild
int
and
mov
xchg
pop
rol
mov
sbb
(bad)
clc
add
xor
dec
call
sbb
inc
enter
mov
pop
shr
sub
cld
daa
loop
(bad)
mov
test
push
xor
cmp
cmp
cld
fwait
nop
mov
sub
cmp
int3
stos
out
cdq
call
inc
(bad)
scas
or
pop
cmp
mov
fwait
mov
mov
imul
add
pusha
sub
and
dec
lock
sets
int3
and
or
push
xchg
(bad)
mov
dec
sub
adc
jge
retf
call
ret
adc
xchg
lock
test
in
imul
mov
pop
clc
push
xor
lods
cmp
mov
mov
and
cmp
ja
inc
mov
push
popf
fwait
les
jb
pop
sbb
mov
out
push
data16
outs
mov
mov
mov
xor
adc
pusha
xor
mov
mov
fwait
daa
cwde
lods
es
inc
add
test
xchg
daa
pushf
push
sub
sbb
cli
or
add
icebp
inc
push
and
sub
or
jne
xor
dec
test
iret
pop
and
xor
mov
retf
in
fld
inc
(bad)
jmp
inc
pop
pop
jp
cmp
cmp
repnz
dec
sbb
push
shr
adc
mov
add
shl
data16
and
inc
pop
jmp
push
inc
push
mov
sub
test
daa
call
int
cmp
cmps
mov
into
pop
sbb
dec
pop
cmp
xlat
jns
mov
jg
sbb
out
adc
out
in
leave
xor
ds
pop
dec
dec
loop
call
and
lods
retf
sub
jmp
inc
xchg
dec
ret
stc
mov
xchg
ss
pop
dec
shl
and
xchg
sub
pop
mov
in
test
xor
jp
mov
pop
jl
aad
adc
ffreep
sub
lahf
test
or
and
xchg
imul
sbb
dec
and
pusha
mov
jecxz
shl
jne
test
fidiv
fisttp
cdq
fcom
dec
fst
cli
not
repnz
outs
pusha
jnp
inc
sub
outs
aaa
add
iret
push
mov
jl
retf
icebp
mov
loopne
cmps
stos
imul
jns
adc
push
cmps
xor
enter
mov
sub
add
mov
(bad)
and
xor
jp
dec
mov
or
push
out
adc
mov
jb
or
daa
jmp
mov
jbe
inc
rol
jmp
ins
loop
clc
pop
out
ins
dec
xor
add
mov
and
xchg
imul
or
jp
cs
cli
cli
call
scas
xchg
cmp
adc
mov
sbb
shr
pop
inc
adc
nop
sub
and
mov
adc
outs
and
push
jge
and
sub
mov
mov
in
jle
les
mov
adc
and
mov
cmp
sbb
xor
cmp
xchg
lods
inc
(bad)
fadd
imul
push
add
addr16
pop
in
ror
jg
mov
push
in
cmp
xchg
mov
ja
sbb
add
sar
and
(bad)
sub
inc
jbe
sbb
sub
movs
mov
cmp
fs
mov
test
sub
call
inc
sub
pop
jb
jmp
test
stos
outs
inc
gs
jae
inc
(bad)
push
push
jge
pavgw
lock
inc
call
xor
pop
add
ins
popf
dec
mov
pop
adc
add
pushf
xor
pop
cmp
mov
mov
mov
(bad)
mov
cdq
xchg
sub
push
lds
outs
movs
cld
stos
std
xor
sbb
fcomp
inc
mov
stc
fisttp
dec
fstp
lds
or
sub
cli
int3
(bad)
addr16
iret
cmp
inc
lea
xchg
repz
outs
sub
fmulp
popw
mov
call
(bad)
fcom
cmp
and
lahf
dec
jnp
xchg
fwait
pop
push
out
les
push
or
scas
lock
repnz
cmp
dec
pop
jmp
jp
rol
and
(bad)
out
das
ret
pop
sub
adc
mov
push
fldenv
xchg
push
push
mov
jmpw
test
pop
rcr
or
mov
pop
mov
out
mov
jae
bound
pop
enter
ins
ds
std
into
jo
out
loope
cwde
push
or
test
sbb
test
sbb
adc
or
or
aaa
(bad)
stos
je
jbe
(bad)
push
lds
mov
mov
sub
inc
sbb
inc
cli
test
retf
stc
dec
mov
inc
mov
in
nop
mov
or
dec
(bad)
repz
dec
(bad)
cdq
mov
shl
out
push
cli
sbb
add
sub
sbb
xor
shl
pusha
adc
hlt
(bad)
mov
add
in
int
or
mov
push
int3
inc
imul
fild
cld
lock
sahf
mov
push
xlat
jle
call
push
and
xchg
lock
inc
mov
push
aam
add
and
cs
xor
aad
and
pop
aaa
fsubr
outs
jg
mov
mov
pop
xchg
sbb
jmp
dec
inc
pop
test
jmp
stos
sub
mov
xchg
cmp
iret
mov
shr
lock
ins
xlat
cmp
inc
sbb
push
jae
mov
xor
inc
cdq
das
ret
mov
test
sub
cwde
les
ret
mov
mov
idiv
shl
je
frstor
cmp
push
push
sahf
push
stos
stos
pop
jb
xchg
or
ret
mov
mov
mov
mov
lahf
cmps
dec
xchg
or
and
or
cwde
(bad)
scas
sbb
int3
mov
loope
repnz
mov
fisubr
lahf
or
jl
rol
(bad)
xlat
lea
xor
out
and
dec
add
lahf
repnz
pop
into
fs
xchg
mov
cmp
retf
aas
hlt
dec
jmp
jo
outs
mov
sub
lods
push
adc
mov
adc
in
jl
pop
cmp
inc
mov
dec
pop
retf
test
imul
mov
ss
push
stos
add
pop
sub
jb
clc
adc
push
sub
jae
scas
(bad)
in
imul
cmp
in
(bad)
out
cld
sub
pop
fneni(8087
loope
test
mov
push
mov
imul
in
mov
dec
cdq
push
mov
jg
cmp
call
xor
outs
cmp
push
mov
outs
xlat
out
mov
or
cmp
dec
popa
gs
push
mov
aas
pop
inc
jmp
(bad)
test
jmp
xor
ret
push
sub
out
sbb
cmp
call
cdq
mov
sahf
cld
stos
xlat
mov
push
and
jg
mov
mov
xor
fnstenv
jns
push
fild
cmp
(bad)
in
ja
loope
enter
mov
sar
repnz
mov
jae
inc
pusha
pop
cdq
cmp
xchg
fnstsw
mov
inc
push
repnz
lea
aam
sub
mov
aam
cdq
or
jo
and
pop
cmp
and
pop
loope
dec
xor
out
xchg
aam
push
inc
fdivr
add
push
mov
pop
out
test
fucomip
leave
jl
jle
or
fidiv
jmp
test
call
mov
jle
push
call
loop
jmp
jns
mov
cs
aaa
(bad)
sub
ficomp
into
cmp
pusha
imul
jmp
and
hlt
sub
push
push
cmp
popf
mov
scas
mov
jp
adc
and
cmp
outs
pop
test
das
scas
push
dec
movs
in
fsub
xchg
fist
mov
fisub
cmp
test
addr16
outs
into
pop
aam
jge
jl
push
je
mov
fdiv
out
push
or
mov
daa
shl
and
mov
and
popa
addr16
mov
out
dec
jle
not
stos
xlat
test
leave
push
push
xor
(bad)
cmc
in
xor
int3
cmp
test
je
rol
adc
rcr
cmc
sar
ret
adc
push
adc
xchg
ds
mov
cmp
adc
cmp
xchg
into
push
mov
scas
xchg
cmp
fs
pushf
test
daa
fnstenv
fisub
cmc
pop
outs
jp
out
adc
sbb
mov
mov
pop
mov
gs
sbb
jns
and
std
cmp
jl
(bad)
icebp
pop
iret
inc
cld
mov
dec
rcl
stos
mov
ds
imul
shl
dec
movs
xchg
ror
mov
(bad)
sahf
and
cmp
in
mov
fstp
cmp
mov
jo
mov
aas
jnp
ins
(bad)
rcr
xchg
cmp
jo
les
out
retf
out
mov
(bad)
mov
sub
gs
inc
mov
mov
xor
mov
sub
cs
pop
mov
pushf
bound
ret
icebp
jb
ins
pop
cli
pop
ror
push
add
jbe
test
mov
xchg
fcmovnu
ja
push
cmc
or
and
dec
sbb
leave
test
test
into
mov
sub
out
icebp
push
lods
popa
jecxz
jecxz
pop
jae
mov
inc
imul
les
inc
xlat
xor
mov
push
shr
adc
imul
inc
test
xchg
jp
xchg
mov
aas
pushf
add
cmp
push
pop
lods
arpl
in
stos
or
fwait
ja
sbb
sub
push
mov
fwait
in
pop
push
sbb
(bad)
push
(bad)
push
(bad)
adc
pop
and
mov
adc
sbb
not
ss
movd
cwde
lahf
stos
int3
fisttp
add
mov
dec
aad
call
out
jl
cdq
cdq
push
sti
pop
add
neg
or
xor
jp
pop
test
das
jns
imul
lea
sbb
dec
gs
je
sbb
mov
xchg
mov
jl
test
push
mov
pop
jo
mov
pop
inc
lds
adc
mov
push
sti
inc
pop
mov
mov
add
push
les
dec
js
fild
and
lods
push
push
or
out
dec
xor
cmp
jbe
sub
xlat
cwde
repz
mov
add
shl
fisubr
dec
fsubp
add
jbe
xor
out
std
jge
fdivr
cmps
mov
cmc
pop
push
call
(bad)
and
cli
(bad)
lods
call
nop
pop
cmps
mov
jns
push
pusha
lea
ficom
fwait
ss
dec
loop
mov
pusha
dec
or
dec
sahf
adc
dec
push
inc
cmp
push
stos
sbb
or
cmps
not
fidivr
mov
mov
(bad)
pop
mov
dec
cmp
xchg
pop
and
mov
sub
cli
jb
imul
(bad)
pop
(bad)
mov
nop
in
xchg
push
shl
inc
loopne
lock
mov
iret
lock
and
adc
fwait
mov
dec
inc
lods
cli
add
scas
jb
dec
cmps
test
mov
push
or
fwait
mov
sub
xor
mov
loopne
jl
sub
ins
adc
addr16
or
test
loope
push
mov
out
call
push
xchg
popa
fnsave
cmp
fild
pop
js
outs
inc
mov
ret
fs
jecxz
mov
sbb
mov
daa
pop
(bad)
sbb
mov
inc
call
loope
pop
sub
retf
jle
jae
js
push
sbb
je
call
loop
jae
jns
dec
fadd
fs
push
inc
xchg
leave
popf
out
lods
inc
xchg
mov
hlt
retf
xor
mov
mov
aam
mov
add
nop
jmp
add
std
out
repz
das
pusha
scas
pop
movs
dec
sub
ret
les
mov
(bad)
int
jg
pushf
les
(bad)
(bad)
jg
jmp
out
pop
aam
enter
and
sbb
add
sar
int3
pop
adc
rcr
jle
jb
retf
loopne
pop
rol
sub
dec
adc
and
(bad)
ficom
rcr
outs
add
mov
jno
or
mov
test
pop
add
xchg
hlt
setnp
sub
add
sbb
scas
popf
cmp
scas
mul
cmp
sub
call
and
(bad)
mov
in
dec
xchg
adc
and
sub
loopne
mov
ins
stc
mov
xor
sqrtps
or
or
stos
int3
mov
jg
fwait
sub
cmp
add
cmp
arpl
mov
jb
mov
mov
pop
jl
in
(bad)
cs
js
pop
pop
jb
lods
xor
inc
sbb
popa
add
mov
mov
jp
stos
jg
jecxz
jae
xchg
mov
jnp
hlt
imul
add
dec
popf
cli
call
cmp
leave
adc
mov
fisttp
test
mov
aaa
sbb
xor
sub
dec
dec
jnp
sahf
movs
add
aam
arpl
icebp
mov
stc
jno
in
das
sti
sbb
out
sahf
push
fdivr
ins
jne
xor
rol
push
clc
cli
mov
cmp
scas
add
sub
and
mov
rcl
nop
clc
ins
sub
es
or
or
push
les
mov
add
(bad)
je
ret
fwait
inc
cli
jnp
rcr
xchg
pop
ret
lea
dec
aaa
xchg
dec
out
fcomp
fisttp
sbb
xor
and
in
pop
jge
sub
xchg
push
or
add
add
(bad)
in
xchg
ss
fs
mov
sbb
jmp
mov
adc
sbb
xchg
sbb
inc
mov
cld
daa
and
(bad)
outs
inc
jg
aas
dec
inc
xor
xchg
cmps
add
and
pushf
sub
mov
cmp
xchg
push
adc
dec
aam
sub
xor
inc
xor
gs
adc
lahf
outs
(bad)
pop
stos
sub
jb
push
dec
push
sbb
imul
popa
pushf
mov
mov
jnp
pop
icebp
or
clc
mov
xchg
xor
pop
xor
push
(bad)
mov
add
scas
cld
add
rol
mov
cwde
inc
sahf
imul
popa
jb
test
sar
out
or
sub
arpl
jge
fsubr
push
fwait
into
and
sbb
stos
and
push
std
js
pop
(bad)
cld
stc
loop
inc
mov
into
or
cwde
mov
fist
loope
cmc
xor
pop
jmp
fwait
out
ins
xor
ss
test
mov
xchg
dec
scas
push
movs
mov
adc
pop
push
retf
mov
imul
mov
(bad)
mov
int3
pushf
dec
mov
(bad)
aam
fimul
das
aaa
mov
inc
pop
ja
hlt
lahf
test
(bad)
cmp
es
rol
(bad)
js
shld
or
pop
push
sub
jo
add
sbb
imul
das
cmp
dec
lahf
adc
jge
pop
push
aaa
sub
push
popf
cs
mov
into
and
shl
adc
xchg
sti
adc
push
cmps
jae
or
fwait
stos
fisttp
pop
pop
sbb
jmp
push
jp
aad
mov
lea
mov
sub
mov
cmps
xchg
retf
outs
add
or
lahf
or
mov
and
cmp
push
add
test
add
and
ins
push
js
push
mul
jecxz
push
sbb
mov
jg
das
mov
xor
mov
pop
push
sti
cld
adc
enter
mov
or
stos
inc
mov
lds
cmc
pushf
dec
add
pop
in
inc
out
(bad)
push
mov
into
je
mov
ds
cmp
mov
ss
pop
push
fninit
jmp
mov
inc
mov
sbb
sbb
mov
dec
in
ror
imul
push
das
push
fbld
or
pusha
mov
push
out
adc
xchg
call
rol
shl
xor
iret
add
push
jp
add
dec
dec
gs
sub
clc
mov
call
dec
scas
shr
push
xchg
xor
add
imul
jmp
je
in
retw
js
pop
div
sbb
sub
mov
pop
fimul
sub
arpl
outs
dec
push
jno
and
cmps
push
mov
or
xor
and
retf
lods
sbb
adc
adc
or
int3
mov
loopne
cmp
cmp
push
cmp
push
inc
sub
push
das
cmps
jmp
dec
loop
cmp
inc
int
cmps
mov
and
jne
mov
sub
jg
mov
push
(bad)
popa
clc
in
and
jmp
sar
in
int3
cld
xchg
push
push
sbb
or
mov
jb
js
leave
iret
xlat
fisttp
les
inc
mov
add
pop
adc
inc
sti
jp
adc
cmps
or
test
or
repnz
pop
sub
prefetch
or
fwait
int3
pusha
inc
push
retf
daa
and
daa
dec
mov
sub
and
adc
xor
push
ss
xchg
lods
ret
or
dec
mov
sbb
jno
imul
lahf
pop
ret
xor
xchg
jmp
cwde
push
frstor
cdq
outs
or
cmp
cmp
or
sbb
and
call
jg
or
jp
and
jae
jb
inc
jae
push
jmp
or
fwait
sub
inc
cmp
cmps
cmp
inc
mov
add
xlat
dec
aas
mov
outs
nop
or
and
int3
loope
push
mov
dec
inc
in
jg
mov
xchg
test
or
imul
xor
retf
pop
imul
cmp
xchg
inc
mov
daa
out
mov
ret
ins
push
push
mov
pop
jmp
xchg
xchg
cmp
mov
aaa
mov
retf
icebp
fwait
cli
mov
ret
rcl
shr
cld
fs
fwait
mov
and
xor
sbb
push
cdq
lds
adc
add
and
adc
int
popf
int3
dec
xchg
xor
add
icebp
push
cs
stos
dec
stos
jns
mov
mov
(bad)
and
mov
stc
adc
or
adc
in
fwait
ins
stos
mov
dec
retf
pop
scas
ret
aam
mov
fcomp
jp
pop
dec
mov
push
popf
fist
das
jmp
xchg
sbb
and
aas
(bad)
jecxz
inc
xchg
inc
inc
lods
sub
cmp
(bad)
(bad)
jmp
mov
and
sub
not
test
dec
add
adc
xor
mov
and
push
jae
es
xchg
dec
movs
hlt
push
cwde
movs
stos
je
dec
cmp
jmp
add
xor
jle
aad
lods
mov
ins
xchg
aas
cli
leave
cmp
pop
leave
and
xchg
repz
mov
fwait
xchg
dec
inc
inc
xchg
loop
mov
cmp
stos
call
and
xchg
adc
test
adc
and
fs
or
retf
inc
and
into
adc
test
pop
cmps
adc
push
mov
loop
inc
mov
xor
addr16
arpl
sub
(bad)
rcl
sub
sub
inc
or
je
cld
mov
(bad)
aas
jmp
(bad)
scas
out
or
inc
xor
mov
mov
mov
mov
call
sbb
xchg
fldenv
fwait
sbb
and
xchg
xchg
dec
lahf
ficom
and
pop
in
out
cmp
je
add
or
mov
mov
pop
pop
pop
cld
mov
jmp
movs
out
mov
xchg
daa
cmps
out
ret
jae
cmps
movs
mov
out
ins
jb
cmc
int
out
mov
dec
jns
les
neg
call
mov
retf
fxch
sub
aas
aam
mov
ror
xchg
dec
pop
test
out
cli
jnp
dec
sti
xchg
ror
aam
jecxz
mov
repnz
ja
add
mov
xchg
idiv
outs
into
outs
aas
add
inc
bound
aas
push
icebp
out
call
push
loop
xchg
fcomp
es
loopne
loope
lds
les
int3
push
daa
nop
mov
push
jbe
pop
xchg
dec
mov
(bad)
pop
arpl
outs
and
fisttp
stos
pushf
fld
mov
ins
adc
or
and
xlat
jmp
dec
repnz
fucomp
sbb
adc
xchg
daa
fs
push
push
mov
(bad)
jbe
lea
jns
int3
pop
into
jbe
(bad)
push
int
sub
pop
fimul
popa
cmc
lods
pop
mov
icebp
sti
xchg
add
jmp
ins
ins
arpl
jp
adc
aad
mov
test
test
or
jbe
mov
aad
js
xor
push
jmp
and
or
daa
sub
jmp
pop
and
mov
and
hlt
iret
jne
clc
jno
mov
(bad)
mov
jmp
in
call
ins
xlat
stc
xchg
dec
push
fcom
jp
test
push
xor
jo
jmp
jb
leave
jb
mov
mov
sub
out
sbb
add
in
pop
push
mov
nop
and
jno
(bad)
imul
sbb
cmp
call
mov
fwait
xor
mov
rol
jnp
movs
push
cmp
imul
out
imul
mov
cmp
xchg
sub
ins
jnp
and
mov
xchg
sar
shl
jle
or
mov
imul
cmc
ret
scas
pop
push
fstp
dec
cmp
fldenv
aas
ja
(bad)
stos
pusha
cmp
test
add
lods
loopne
xchg
pop
cmp
ret
xchg
sub
aas
mov
neg
jo
test
inc
stos
repz
jae
gs
push
popf
icebp
and
sbb
jbe
sahf
gs
int3
ins
mov
loop
rcr
mov
vmwrite
test
and
ret
es
fs
inc
mov
ror
hlt
pushf
pop
cmp
lea
and
mov
gs
jmp
push
fmulp
ficom
std
je
add
mov
adc
rol
mov
sbb
sbb
push
(bad)
add
data16
and
pop
shl
sbb
adc
bound
inc
pushf
adc
loope
pusha
int
pop
inc
pop
xor
mov
jl
adc
icebp
jns
mov
fnstsw
push
iret
movs
in
rol
mov
sub
add
jecxz
cmp
dec
lds
add
pop
aaa
lea
sbb
in
imul
sbb
(bad)
sub
mov
fwait
arpl
int
or
inc
inc
sbb
mov
push
inc
pop
in
mov
bound
xchg
xor
jbe
push
mov
jmp
sahf
cmp
xchg
scas
pop
mov
xor
aaa
arpl
jno
test
mov
or
ss
adc
mov
mov
inc
pop
sub
push
add
mov
sub
pop
out
pop
mov
vandnps
mov
dec
imul
adc
mov
inc
mov
dec
ret
pop
jno
adc
clc
xrelease
aam
xchg
fwait
jbe
mov
jae
jb
jbe
cld
inc
fwait
dec
jmp
ins
fstp
jne
xchg
dec
sub
xchg
stos
pop
xchg
bound
cmp
mov
(bad)
mov
dec
movs
jne
cmps
mov
jno
xor
mov
mov
(bad)
pop
jmp
ficom
mov
mov
or
out
(bad)
jns
sbb
(bad)
(bad)
lods
mov
inc
rcl
jae
dec
and
mov
out
dec
aas
xchg
fdivp
jns
daa
mov
dec
push
adc
dec
sbb
cmp
sub
mov
pop
shr
xor
push
sbb
xchg
inc
push
daa
popa
pop
push
repz
jmp
mov
in
mov
ja
sbb
fbstp
clc
js
jp
dec
xchg
enter
out
in
lds
gs
cmp
pusha
ds
mov
add
sahf
ficom
popa
inc
cmp
xchg
cmp
sbb
cmp
jne
repnz
fwait
hlt
xlat
shl
ret
dec
loopne
xchg
dec
lahf
(bad)
stos
aaa
(bad)
lods
and
movs
into
clc
and
(bad)
mov
xchg
out
jnp
or
mov
mov
retf
xchg
cmp
ss
add
(bad)
jnp
icebp
sub
retf
ds
sub
or
cli
addr16
or
xchg
test
cmp
inc
dec
inc
push
push
shl
je
cmp
ins
sbb
or
cwde
out
arpl
inc
cmp
mov
dec
jmp
data16
mov
mov
adc
pusha
push
inc
jg
or
mov
dec
js
iret
(bad)
adc
push
pop
sbb
rcr
inc
xor
iret
std
outs
retf
(bad)
push
xchg
in
dec
pop
inc
nop
loop
mov
(bad)
pop
call
pop
fucomp
xor
mov
lods
loope
retf
jmp
lods
cmp
in
stc
sahf
xor
sbb
fldenv
push
dec
or
push
std
xor
aas
push
mov
sbb
mov
jmp
sub
scas
inc
sub
mov
jne
lock
stos
cmps
inc
loop
adc
jnp
fdiv
mov
addr16
jge
clc
cmp
inc
jo
sbb
jg
adc
inc
and
leave
iret
jnp
lea
cmp
rcl
imul
adc
cdq
vcvttpd2udq
or
ja
mov
lods
out
aad
xchg
add
not
sahf
outs
not
mov
jp
mov
xchg
inc
pop
push
or
js
arpl
adc
sahf
push
mov
stc
mov
jmp
js
jl
repnz
jnp
add
rcl
je
outs
mov
fistp
xchg
je
fxam
(bad)
sbb
ss
(bad)
mov
rcr
repz
add
(bad)
pusha
cmps
mov
jp
mov
movs
in
ret
xchg
adc
pushf
xor
and
ss
adc
mov
test
and
sti
cmp
lock
xor
adc
pop
in
dec
sub
aad
inc
mov
ins
enter
cs
pushf
js
sub
loope
and
jae
bound
fldenv
cdq
sub
idiv
add
xchg
paddd
(bad)
in
leave
cmp
jne
leave
sahf
cwde
jns
jge
mov
enter
dec
pop
inc
addr16
add
pop
cdq
aaa
or
addr16
daa
xchg
jb
and
dec
xchg
fstp
dec
and
pop
jae
inc
ret
mov
out
xchg
mov
sub
aad
pop
pop
jmp
xchg
sub
sub
push
test
cdq
inc
cmps
call
rep
mov
les
pop
daa
pop
mov
and
aad
shl
lahf
mov
aaa
add
sbb
push
pop
jbe
mov
(bad)
pusha
shl
jle
sqrtps
add
push
lahf
inc
mov
test
pop
add
idiv
dec
pop
jle
ret
or
inc
xchg
not
lock
js
scas
sub
out
loope
jge
cwde
mov
movs
ret
push
fadd
xlat
and
mov
les
push
or
je
pop
cld
inc
sbb
mov
cmp
sub
xchg
inc
bnd
movs
shl
xchg
mov
mov
ss
gs
pop
repnz
inc
(bad)
or
xor
mov
cmp
in
(bad)
jge
or
scas
(bad)
push
cmc
jnp
inc
adc
adc
xchg
push
sar
retf
sub
(bad)
fcom
(bad)
repnz
cmp
cmp
or
cs
cmp
fiadd
aaa
out
mov
mov
xchg
mov
outs
loope
movs
out
loopne
test
dec
rol
mov
push
xchg
mov
stos
add
(bad)
jne
loope
dec
dec
movs
stos
mov
inc
xchg
aad
iret
hlt
adc
hlt
mov
(bad)
retf
pop
leave
jle
jb
push
cli
jae
cmp
cmp
or
add
jb
lds
xchg
pop
retf
xchg
cmc
cwde
mov
add
mov
cmps
mov
dec
sbb
mov
push
xchg
xchg
ja
push
outs
bound
mov
inc
push
out
mov
jg
movs
in
aad
ret
jl
add
fcomp
cmp
ret
call
or
into
adc
loop
adc
data16
cmps
inc
push
cwde
pop
imul
in
pop
(bad)
xor
ds
dec
int3
shr
sbb
inc
add
pop
sub
(bad)
and
xchg
jns
rol
movs
test
movs
popf
daa
mov
pop
dec
cmp
cmp
mov
in
in
or
xchg
sbb
mov
mov
xor
sbb
ret
daa
daa
lahf
in
pop
out
fdivr
xchg
mov
pop
enter
test
clc
push
mov
jg
mov
in
push
addr16
push
sahf
ficomp
adc
ins
inc
shl
mov
movs
or
lods
inc
inc
mov
sbb
inc
and
bound
push
xchg
sub
out
fist
pop
and
fs
int
aaa
lods
in
mov
add
pop
inc
add
jge
ja
imul
push
in
outs
add
pop
lea
pop
pop
inc
pop
jo
cmp
js
gs
xor
jo
push
repz
sub
cli
mov
push
jne
xor
fs
cmp
xchg
test
scas
cld
jp
and
sbb
mov
dec
xchg
jns
xchg
or
sbb
add
xchg
xchg
hlt
fwait
add
mov
out
mov
ret
and
mov
sub
cmps
out
addr16
pop
mov
jno
icebp
mov
xchg
xlat
mov
mov
in
push
xchg
retf
test
sub
mov
jb
les
daa
adc
stos
int
mov
shl
enter
ror
scas
sub
xchg
out
sbb
adc
xor
test
faddp
scas
dec
jmp
fnstsw
lea
push
nop
sub
shl
or
jns
cdq
push
xchg
sub
or
std
sub
sar
jmp
test
add
xchg
pushf
test
or
mov
xor
mov
into
push
mov
mov
fdivr
jp
mov
jo
sbb
lds
int3
push
popa
leave
daa
jg
adc
mov
rol
pop
je
and
rcr
popa
xor
or
or
jae
add
shl
mov
push
inc
rol
outs
mov
cmps
out
jbe
or
sbb
mov
dec
mov
or
push
push
ficom
jmp
stos
mov
call
mov
mov
dec
std
lahf
enter
mov
(bad)
mov
leave
cmp
mov
es
les
sbb
or
std
xor
gs
ficomp
or
into
scas
push
mov
xchg
pop
test
or
data16
cmps
jp
lods
loopne
mov
push
bound
adc
jae
in
cmp
mov
xor
push
jae
loopne
imul
cdq
or
cmp
jle
gs
mov
dec
mov
lea
(bad)
adc
mov
mov
mov
in
in
(bad)
icebp
pop
movs
pusha
and
xchg
pop
xchg
pop
xor
sbb
das
shl
inc
xchg
rol
pop
outs
into
jae
lahf
jmp
inc
scas
adc
sbb
lods
cmp
or
sbb
pop
pop
jmp
mov
icebp
xor
jecxz
push
fstp
cmp
push
or
jmp
shl
out
int3
(bad)
fild
jge
sti
in
lahf
sbb
sbb
dec
or
call
adc
scas
add
dec
retf
jecxz
ret
mov
sub
test
mov
lahf
in
stos
xchg
xchg
jle
js
aas
retf
jmp
popf
mov
adc
or
jmp
mov
cmp
mov
out
out
inc
adc
adc
sub
lods
(bad)
movsx
sahf
push
cmps
loope
push
aad
clc
data16
(bad)
int3
dec
sbb
lods
movs
or
pop
and
dec
pop
xor
xchg
das
stos
shl
push
xor
cmc
retf
js
fist
push
push
add
push
out
repnz
mov
lea
pop
fcom
lahf
jae
int
lods
xchg
lahf
sar
lds
scas
inc
dec
movs
cmc
(bad)
mov
add
outs
stos
fisub
dec
ins
out
scas
jmp
(bad)
in
dec
mov
pusha
iret
movs
inc
ins
pusha
popa
jl
hlt
aad
inc
daa
mov
push
js
mov
div
gs
ins
and
xchg
sub
imul
push
(bad)
jmp
jl
mov
mov
int3
mov
xchg
out
adc
jmp
hlt
retf
test
adc
dec
loopne
add
int
ret
sbb
add
je
(bad)
push
cmp
xchg
adc
outs
dec
test
cmp
gs
pop
movs
pop
adc
dec
xchg
hlt
cmp
ss
je
xchg
out
arpl
jne
dec
mov
fstp
mov
sbb
mov
inc
js
or
push
inc
bound
and
out
out
retf
cmp
dec
test
add
es
rcr
add
mov
arpl
or
xor
es
out
test
hlt
and
movs
add
mov
bound
repz
jmp
loope
lods
arpl
out
sub
imul
cwde
stos
mov
mov
dec
js
ja
xchg
or
fbstp
and
jae
loopne
ror
mov
sub
stc
repnz
movs
(bad)
or
and
idiv
outs
mov
out
mov
cmp
inc
aas
cmc
fdivr
mov
push
sahf
ror
(bad)
xchg
or
shl
test
popf
xor
or
mov
pop
es
and
pop
pop
dec
enter
mov
mov
mov
mov
lock
mov
jl
aad
cwde
sub
test
mov
inc
cmps
ss
into
stos
pop
and
inc
rcr
pop
push
dec
in
cmp
mov
pop
adc
daa
pop
push
sub
dec
or
mov
shr
lods
imul
jbe
cmps
xchg
xor
fxch
xor
in
in
xor
adc
iret
pop
or
or
imul
mov
push
push
(bad)
jo
pop
in
dec
ds
mov
leave
push
inc
jg
mov
imul
push
dec
adc
fist
stos
shr
xor
pusha
es
inc
sbb
ret
fcmovne
jae
pop
lock
jge
jmp
repz
movs
movs
(bad)
imul
sti
enter
sbb
in
jge
jmp
pop
inc
pushf
sar
push
push
xchg
inc
rcl
mov
xor
ja
cmp
retf
inc
out
aam
sbb
das
icebp
mov
gs
mov
test
ret
mov
mov
imul
jge
je
adc
cmp
inc
inc
mov
push
add
std
xchg
mov
inc
and
push
imul
imul
pop
cli
int
sbb
cmp
aaa
jg
cmp
(bad)
and
in
data16
add
retf
call
(bad)
out
jp
sub
sub
loopne
cmp
ror
jmp
pusha
into
push
or
and
mov
shr
sbb
shl
xchg
mov
(bad)
and
push
lds
mov
cmp
jp
les
pop
xchg
mov
fmul
push
push
mov
ret
inc
xchg
jg
inc
cmp
aad
or
jle
mul
repz
or
pop
movups
mov
xor
cmps
outs
and
add
fisubr
sub
test
stos
imul
xor
xor
xchg
push
std
(bad)
cmps
push
and
aaa
mov
stos
or
dec
ss
jmp
mov
cmp
cs
icebp
ins
mov
mov
adc
aaa
sub
lods
jle
or
cli
push
dec
call
aad
sub
xchg
inc
cmp
or
mov
popf
jbe
and
mov
scas
in
sbb
adc
mov
outs
xor
mov
shl
aad
lds
jmp
loope
outs
mov
sub
jg
je
ds
add
cmps
mov
call
mov
sbb
mov
mov
aas
hlt
pop
sti
mov
pop
sub
sbb
xor
stos
retf
mov
int3
aas
pushf
jecxz
test
and
xlat
xchg
push
(bad)
mov
cmp
mov
pop
cmp
sbb
and
add
xchg
movs
xchg
lea
movs
mov
fwait
xor
xchg
hlt
jl
in
shl
(bad)
je
ror
sti
pusha
jge
sahf
daa
pop
aad
xor
push
rol
and
adc
mov
mov
int
mov
push
scas
ja
push
mov
adc
push
ja
push
fnstenv
adc
hlt
dec
jae
data16
cmp
adc
imul
xor
sti
pop
sbb
repnz
add
push
inc
add
stos
outs
adc
jnp
jle
xchg
mov
fldcw
pushf
imul
pop
cmp
sub
push
out
pop
movs
in
(bad)
fadd
push
loop
stc
dec
in
sub
xor
mov
xchg
sbb
(bad)
es
dec
pop
test
add
adc
xchg
pusha
scas
aam
mov
lods
(bad)
movs
stos
(bad)
fcom
mov
mov
sub
add
mov
xchg
inc
jae
es
rcr
cmps
loop
icebp
push
pop
xchg
aad
adc
fild
out
or
mov
pop
mov
mov
pop
pop
xchg
mov
retf
mov
jmp
ficomp
data16
push
add
(bad)
or
and
sub
stos
add
stos
lock
jmp
div
js
jne
jnp
arpl
adc
not
push
sub
jb
mov
imul
mov
adc
aad
es
jbe
out
dec
call
(bad)
adc
or
dec
hlt
loope
popf
ret
add
inc
mov
mov
shl
lds
cli
and
aaa
mov
std
aad
xchg
mov
sbb
lea
jne
repz
pop
aam
cmp
mov
lahf
stc
ins
fdiv
call
out
push
mov
cmp
xchg
and
cmp
xor
out
xchg
mov
leave
push
pusha
xlat
jl
fwait
imul
out
arpl
and
or
push
(bad)
in
dec
ds
cmp
nop
xchg
scas
jo
xchg
ins
mov
leave
adc
adc
dec
jne
adc
xor
adc
sub
scas
inc
in
sub
fcomp
cmp
push
pop
pop
push
jle
aaa
and
popf
mov
adc
ret
call
idiv
icebp
mov
outs
in
mov
ds
mov
fcmovu
add
stos
xchg
div
popf
jo
or
xchg
lods
mov
jbe
ss
jo
jns
mov
sub
jbe
jae
push
inc
push
loop
retf
jbe
sbb
or
pop
leave
and
jmp
inc
out
lea
dec
nop
addr16
push
imul
sbb
xchg
leave
jo
mov
mov
dec
loopne
push
or
xchg
push
cmps
sbb
inc
mov
(bad)
xchg
fisubr
rol
stc
sub
dec
and
push
push
loope
movs
aas
lock
sbb
ja
xor
fnstsw
nop
pop
lods
mov
into
jge
dec
retf
mov
sbb
pop
pop
xchg
ds
leave
retf
scas
in
fsubr
mov
and
lock
fistp
sar
push
mov
sub
movs
aad
xor
aad
daa
mov
jo
mov
js
mov
loope
fcomi
jle
dec
xor
add
cmc
add
dec
cmp
push
lea
addr16
mov
es
dec
ins
cmp
xor
xor
jne
inc
ror
aam
inc
push
xchg
xchg
xchg
les
sti
cmp
inc
loope
scas
jne
xchg
pop
retf
inc
mov
popa
adc
arpl
xor
or
cmp
call
sbb
fisubr
jecxz
out
(bad)
loopne
ja
xchg
push
scas
push
xchg
xchg
pop
pop
jl
or
cmp
loopne
(bad)
enter
inc
sbb
bound
add
jle
xor
mov
pushf
out
icebp
mov
addr16
aam
mov
mov
out
fst
daa
add
sub
clc
nop
out
call
(bad)
clc
jno
iret
add
sub
xor
or
repnz
xor
mov
fs
pop
mov
adc
or
js
mov
gs
adc
mov
ret
ja
ss
nop
enter
hlt
stos
mov
cmp
aas
mov
pusha
stc
xor
mov
outs
arpl
fwait
and
jno
jo
sub
rcl
xor
jge
or
adc
xchg
std
pop
sti
adc
mov
push
or
aaa
(bad)
shl
push
push
add
mov
fs
jp
test
stos
push
addr16
sub
jb
(bad)
inc
or
lds
(bad)
fs
(bad)
sti
loope
jne
mov
shl
mov
movs
inc
jno
aaa
xor
jp
arpl
xchg
pop
pusha
or
out
push
clc
pop
lods
or
iret
xchg
les
inc
jl
mov
and
jle
pusha
fwait
les
(bad)
inc
enter
shr
xchg
mov
mov
add
ins
inc
movs
iret
jns
dec
inc
popf
or
sub
or
dec
mov
mov
cli
pop
cmp
cmp
cwde
mov
fnstcw
and
(bad)
cmps
fbld
pop
call
outs
in
aad
push
xor
mov
lods
jle
pop
mov
xchg
xchg
push
fidiv
push
adc
jp
jne
outs
sbb
mov
je
sti
sub
jmp
leave
xor
add
adc
inc
outs
(bad)
push
sbb
ja
out
push
dec
jae
xor
push
shl
ss
add
sub
into
mov
sub
mov
dec
mov
sbb
scas
cmc
xchg
mov
adc
mov
add
dec
cmp
loopne
dec
cdq
pop
and
pop
arpl
rol
test
xchg
xchg
cli
dec
dec
jns
cmp
cmp
je
test
jmp
adc
or
test
pop
add
rol
fistp
dec
mov
sub
sub
xchg
jo
push
mov
aam
adc
inc
add
in
in
jno
and
mov
icebp
and
test
add
cmp
pushf
lahf
jbe
mov
in
nop
pop
push
push
xor
not
test
aaa
(bad)
ficomp
loope
jmp
aas
cmps
mov
mov
jge
sbb
dec
addr16
sbb
loope
mov
inc
xchg
sbb
jo
push
in
jns
daa
les
or
cmp
and
mov
jl
dec
push
int3
xor
sub
dec
add
nop
jge
dec
lock
cmp
cmp
or
dec
mov
xchg
lods
xchg
scas
lock
push
lea
cmp
add
retf
xchg
in
sahf
xor
dec
bound
call
adc
pushf
dec
imul
popa
out
out
xor
xchg
mov
push
imul
loope
dec
push
or
mov
scas
push
mov
sbb
inc
or
retf
xchg
xchg
mov
and
ins
cmp
mov
fld
pop
lods
sbb
push
fldenv
pop
mov
dec
xchg
fcomp
adc
sti
mov
(bad)
fucom
jp
enter
inc
pusha
push
test
dec
je
mov
mov
pop
pop
clc
clc
mov
jl
fistp
fld
lahf
movs
imul
(bad)
push
ss
mov
add
pop
push
adc
daa
xchg
stos
mov
sub
scas
jl
es
shr
sbb
fs
lods
inc
push
adc
pop
cmp
retf
sbb
xchg
iret
lods
push
pop
jg
and
fist
pushf
stos
inc
lods
mov
pop
loope
retf
clc
neg
sub
bound
popf
xor
sub
xor
jl
cwde
repz
popa
ret
or
dec
push
push
push
push
(bad)
cmc
xchg
cmp
ins
cdq
retf
test
arpl
jge
in
pop
imul
push
and
popf
ret
sub
stos
gs
sbb
sahf
in
cwde
push
mul
push
jmp
pop
sahf
stos
outs
add
mov
and
daa
or
int
mov
mov
sub
repnz
icebp
mov
cmps
pop
jp
jle
pop
jb
push
add
(bad)
enter
outs
pop
sahf
and
fisub
sbb
xchg
shrd
dec
xchg
test
inc
mov
xchg
push
mov
adc
mov
iret
(bad)
aad
(bad)
pop
test
(bad)
jl
or
xlat
mov
fist
mov
and
xchg
neg
xchg
push
xchg
imul
ds
mov
fdiv
push
arpl
hlt
xor
jbe
or
fcmovu
shl
cmp
dec
in
or
dec
mov
or
aam
push
jp
mov
retf
bound
fild
sbb
ds
mov
shl
imul
add
stc
jg
mov
daa
jo
inc
inc
sub
inc
lds
add
xchg
idiv
cs
pop
pop
rol
mov
and
ret
jmp
ss
adc
or
sar
xchg
xchg
int3
dec
pop
stc
mov
mov
cmc
or
jge
cmp
(bad)
pop
movs
rcl
mov
pop
push
add
adc
jg
mov
push
(bad)
push
ss
repz
nop
inc
mov
sbb
retf
inc
or
ins
cwde
outs
mov
push
jne
sub
sub
bound
repnz
cld
fsub
gs
ss
cmp
push
mov
fst
push
adc
mov
pop
jl
mov
mov
jg
es
out
inc
shl
(bad)
repz
add
call
adc
inc
je
movs
dec
sub
or
mov
mov
ds
or
inc
stc
sbb
adc
mov
mov
(bad)
cmp
sub
xchg
icebp
fmul
adc
es
jp
add
sbb
nop
add
mov
jecxz
arpl
jne
cmp
cmp
or
mov
xlat
loope
add
dec
push
fwait
mov
mov
and
loope
imul
push
pusha
xchg
push
xor
rcl
jecxz
or
cmp
cmp
push
bnd
xor
xor
sbb
pop
pop
and
and
jge
stos
test
adc
mov
push
xchg
jae
imul
xor
jno
cli
pop
mov
add
pop
ret
and
mov
cmps
dec
cmp
adc
ret
inc
nop
sub
dec
dec
pop
xor
ins
call
sub
push
cmp
mov
repnz
inc
out
(bad)
mov
outs
cwde
inc
mov
ins
xchg
xor
push
jmp
sbb
dec
jle
push
pop
es
inc
sub
mov
mov
push
xor
xchg
or
dec
adc
jbe
mov
sbb
aam
jge
loope
and
test
dec
jbe
add
inc
out
push
mov
and
lock
cs
(bad)
mov
cmp
js
rcl
ret
lock
sbb
jmp
test
adc
and
jne
lock
int
mov
repnz
cmc
hlt
pop
push
lock
and
out
out
mov
jg
loopne
cli
daa
sahf
addr16
loopne
sti
mov
icebp
and
popf
loop
mov
neg
out
cwde
ret
daa
adc
or
rcl
data16
or
adc
repnz
imul
int
sub
jb
adc
pop
movs
pushf
mov
(bad)
test
push
cmp
dec
pop
scas
mov
movs
(bad)
ror
test
aaa
adc
sbb
stos
loop
inc
cld
push
add
aas
ror
cmc
xadd
lods
pop
pop
mov
jae
or
mov
jo
jo
push
int3
rcr
addr16
ja
push
leave
icebp
inc
xor
in
push
out
int
popf
or
mov
fild
cmps
dec
outs
mov
test
mov
(bad)
jmp
dec
cmps
out
in
out
lods
test
retf
mov
data16
cmc
imul
mov
xor
cmc
call
jno
cld
ds
inc
push
mov
cmp
xchg
add
or
mov
cmps
cmps
enter
adc
jecxz
xor
mov
stc
push
xor
push
xchg
fs
push
aam
push
mov
out
loope
lods
sti
jmp
aad
clc
(bad)
js
shl
test
imul
es
jbe
je
loop
dec
fwait
aaa
cli
pop
adc
out
jno
and
out
into
enter
pop
lahf
jo
jmp
int
div
and
test
pop
sbb
aad
dec
aaa
jne
int3
adc
cmps
not
stos
xchg
mov
push
and
sub
aam
push
ds
ds
inc
rcr
sub
push
xor
cli
jb
test
mov
xsaves
jle
jo
xor
clc
loope
mov
fstp
dec
mov
fwait
gs
pusha
aad
out
fucomi
repnz
rol
jmp
xchg
mov
jnp
leave
addr16
test
xchg
pop
inc
ins
in
mov
lahf
ret
ficomp
shr
out
cmps
jbe
push
xchg
repnz
mov
dec
cmp
aad
lahf
sbb
cs
jnp
dec
adc
or
call
dec
pop
retf
idiv
xor
fwait
daa
ja
mov
fcom
sti
test
inc
sbb
sar
or
cvtps2pi
and
ins
stc
sahf
div
call
call
lods
push
scas
aaa
jo
and
add
sbb
out
fisubr
gs
pop
aad
mov
xchg
lahf
iret
adc
or
jae
imul
sbb
mov
jl
adc
int3
ja
fsub
cld
mov
retf
mov
xchg
mov
xor
leave
sbb
dec
int
or
inc
jmp
aam
fld
jmp
addr16
sub
xor
dec
xchg
push
jae
xchg
inc
pop
stos
push
movs
movs
mov
pop
jl
ret
jp
mov
dec
mov
add
and
(bad)
mov
mov
je
add
retf
cld
mov
sub
loope
xor
nop
sbb
in
sub
aas
les
inc
inc
cld
jne
jmp
out
jo
mov
dec
mov
or
or
test
mov
jno
mov
adc
cmp
pop
adc
retf
dec
or
rcl
out
fwait
xchg
in
test
or
imul
push
js
(bad)
call
push
js
lock
push
add
push
xor
lods
mov
fcomp
and
or
fwait
jnp
(bad)
jns
bound
mov
repnz
test
rol
es
jo
arpl
fdiv
xor
pop
sub
add
push
push
ja
dec
jnp
repz
fcomp
imul
mov
inc
pop
push
or
mov
outs
(bad)
not
jne
ret
sbb
or
xchg
das
adc
xor
mov
aas
mov
inc
xchg
scas
clc
inc
retf
mov
lods
in
sub
clc
or
mov
jnp
sbb
ja
daa
not
in
xor
in
sar
mov
mov
jg
jp
ds
sbb
bound
xor
mov
jmp
jmp
sub
fwait
adc
fistp
mov
popf
mov
ss
adc
ss
adc
hlt
mov
jnp
repnz
push
aam
fsubp
cmp
std
sbb
jl
repnz
mov
in
or
fist
hlt
fidiv
int3
jne
(bad)
jmp
sti
jb
in
lock
loopne
cmps
sub
mov
mov
retf
dec
dec
inc
call
test
inc
fucomp
or
xor
pop
xchg
mov
cld
loopne
add
pushf
cwde
adc
or
adc
fst
adc
jle
fisttp
and
xchg
dec
push
mov
mov
inc
fadd
popf
(bad)
stc
xor
push
mov
jecxz
and
shl
sub
call
mov
and
pop
lea
hlt
inc
mov
in
push
int
fs
or
lods
inc
jmp
fadd
mov
pop
shl
jbe
adc
mov
fistp
bound
mov
cli
ja
xchg
out
xchg
in
sub
clc
pop
cwde
and
out
dec
jno
jmp
call
ins
mov
cli
les
jge
dec
xchg
out
das
aad
adc
(bad)
jecxz
inc
pop
and
clc
add
push
cmp
dec
fucomip
push
adc
xor
repnz
push
cmp
push
or
sub
test
jo
lds
push
imul
or
sahf
add
int3
jno
pop
inc
fnsave
out
push
call
xchg
cmp
movs
mov
jae
sub
fidiv
pop
fwait
jmp
mov
jns
pushf
jecxz
mov
xchg
ds
pop
mov
sub
das
mov
ss
icebp
dec
mov
mov
outs
jnp
rcl
loope
xchg
mov
shl
mov
xchg
cdq
fcomp
xor
lahf
xchg
and
lock
(bad)
mov
aam
cwde
push
fst
movs
lds
and
xor
out
cli
mov
clc
mov
mov
out
popf
push
xchg
adc
stos
inc
add
inc
mov
or
aaa
cmps
cmp
outs
cld
mov
popf
mov
sbb
pop
ret
mov
sbb
imul
xor
ret
dec
popa
push
xchg
imul
std
pop
pop
sti
fwait
sub
mov
mov
mov
sti
and
push
les
(bad)
stos
push
xor
and
outs
add
test
bound
(bad)
pop
cli
jns
jp
or
mul
push
loope
ficom
cmp
sub
aas
mov
pop
push
div
cmps
fbld
lods
ret
adc
retf
mov
sub
pop
popf
outs
sub
shr
cmps
inc
or
sub
mov
sbb
ret
(bad)
shl
or
pop
cmps
push
or
movs
test
mov
jle
popa
lahf
mov
mov
loopne
and
fmulp
mov
stos
ror
mov
xlat
lods
je
fs
adc
daa
mov
cwde
imul
test
jae
xchg
fistp
adc
iret
std
inc
scas
call
imul
sub
inc
test
dec
dec
or
add
sti
mov
inc
jnp
push
stc
ror
and
xor
sub
repnz
or
pop
mov
push
cwde
adc
imul
out
sbb
mov
int
sub
jne
loop
rcr
out
hlt
sub
out
mov
xor
int
cld
neg
pop
mov
hlt
rcl
adc
sbb
push
(bad)
mov
sbb
jns
pop
jp
icebp
push
loopne
js
push
add
rol
or
test
loop
shl
xchg
mov
ja
sbb
repnz
div
jns
sar
fnsave
push
lods
cdq
and
jecxz
fcomp
sub
ins
shr
push
adc
push
sub
push
jae
or
cmp
xor
or
xchg
xchg
in
sbb
and
mov
cmp
(bad)
or
add
push
out
mov
mov
sub
cmc
push
inc
test
lods
(bad)
jno
mov
(bad)
mov
jle
mov
pop
mov
ss
mov
repnz
(bad)
xor
out
loopne
ins
dec
(bad)
in
sbb
pop
fdivrp
daa
mov
call
dec
rol
gs
aam
pusha
pop
mov
mov
rcl
cmc
icebp
cli
imul
arpl
lods
mov
outs
cmp
out
adc
fcomp
mov
xlat
and
lss
loop
mov
out
or
mov
sub
or
push
sub
test
ss
mov
(bad)
or
adc
imul
arpl
hlt
adc
xchg
xor
jns
mov
data16
retf
pop
sbb
js
out
test
mov
sahf
movs
inc
mov
sti
ficom
cmc
fxch
sti
cmc
aaa
(bad)
into
gs
pop
jmp
aas
ja
add
push
ins
mov
jecxz
(bad)
fisttp
mov
sub
and
sub
sub
xor
loopne
cdq
push
or
jecxz
arpl
sbb
inc
push
pop
add
mov
xchg
xchg
dec
repz
lds
adc
pop
adc
mov
mov
shl
cmp
icebp
mov
dec
pop
inc
(bad)
pop
push
sub
and
sbb
xor
and
pop
sahf
jno
xchg
enter
cs
sahf
push
mov
(bad)
mov
jl
scas
out
rol
inc
(bad)
ins
int3
ror
cs
pop
pop
movs
sbb
sub
in
jmp
scas
dec
mov
(bad)
sbb
dec
xchg
jne
inc
dec
pusha
es
push
push
inc
or
lea
in
loope
or
pop
cmc
push
adc
push
jno
jae
es
test
clc
pop
and
jg
ss
mov
push
pop
fcmove
hlt
dec
fld
pop
sbb
fnstenv
cmp
xor
or
pushf
(bad)
retf
repnz
pop
inc
outs
jecxz
(bad)
std
dec
std
xor
jb
in
pop
and
aas
xchg
mov
mov
movs
aaa
push
ins
push
div
retf
xor
xchg
sub
fstp
adc
adc
sbb
arpl
cmps
pop
pop
inc
(bad)
sbb
xor
and
cwde
(bad)
test
or
test
sbb
cs
scas
mov
pop
into
icebp
push
aam
push
fadd
dec
sbb
pop
std
or
cmps
sbb
scas
and
fdiv
mov
leave
lds
or
enter
stos
clc
lock
xchg
sub
sub
iret
(bad)
fwait
addr16
push
push
scas
xor
adc
inc
jmp
aad
(bad)
jns
test
lahf
push
sbb
rol
dec
std
push
dec
fisttp
ds
or
psubsw
pop
stos
mov
xor
and
jnp
in
nop
add
mov
shl
sbb
pusha
aaa
cdq
dec
repnz
fcmove
(bad)
pop
popf
retf
add
or
out
sbb
and
dec
or
(bad)
stc
inc
mov
cwde
pop
sub
int
dec
xchg
mov
test
mov
lea
xchg
dec
(bad)
xor
sub
daa
outs
cs
(bad)
cmc
mov
adc
loope
add
stc
mov
or
xchg
enter
dec
pop
arpl
es
es
inc
mov
pop
mov
xor
ffreep
test
hlt
mov
mov
clc
test
dec
rcl
rol
jbe
ds
xor
dec
mov
push
mov
xor
iret
mov
jmp
call
sub
inc
mov
push
ficomp
sbb
stos
ins
sub
sub
pop
fidivr
(bad)
adc
mov
hlt
or
xchg
mov
cwde
adc
scas
cmp
inc
arpl
stos
stos
aad
cmp
mov
sti
and
ins
js
lods
cwde
adc
and
(bad)
push
push
loopne
push
mov
div
jnp
ins
std
and
rcr
aaa
(bad)
(bad)
push
int3
in
cli
mov
jb
(bad)
int
mov
jecxz
arpl
je
xchg
mov
(bad)
push
out
stc
mov
loope
pushf
pop
cmp
or
adc
pusha
push
jl
inc
in
cdq
add
(bad)
stc
jle
aam
mov
sahf
pushf
jb
iret
imul
call
movs
leave
ds
jecxz
fisubr
jmp
pop
imul
dec
int3
hlt
fstp
aam
cwde
sub
sub
in
imul
pushf
int3
dec
xor
dec
cld
stos
jle
mov
or
sub
adc
in
pop
cmps
mov
sar
clc
out
pop
push
xchg
push
sub
sbb
mov
lds
jne
clc
(bad)
(bad)
xchg
push
jno
xchg
or
mov
enter
fidivr
sub
movs
mov
and
cmp
jbe
loopne
mov
add
xchg
jns
(bad)
lock
adc
lahf
push
inc
shl
ret
lea
push
sbb
mov
mov
(bad)
ror
mov
mov
xor
or
dec
test
mov
(bad)
mov
call
call
adc
and
mov
sahf
mov
dec
scas
pop
shl
mov
cld
mov
or
sbb
push
aas
sub
fcom
inc
mov
aad
mov
les
dec
push
jg
mov
shl
ficomp
pop
push
rcr
gs
aam
jmp
loopne
pop
imul
cmps
repnz
dec
or
hlt
ret
or
adc
mov
adc
pop
in
test
sbb
fld
jbe
loopne
adc
push
in
cmp
rcl
push
push
xchg
add
icebp
mov
mov
ss
fld
cmp
out
pop
cmps
retf
sbb
adc
adc
push
lods
cli
scas
ds
rol
inc
jle
cmp
fcomp
xchg
lea
ds
pop
hlt
(bad)
lea
es
je
es
jecxz
in
movs
adc
std
movs
sub
retf
movs
or
clc
shr
jmp
(bad)
ins
std
mov
adc
lock
out
in
dec
mov
xchg
in
cmc
js
inc
pop
ins
push
out
jmp
andps
aad
mov
add
out
stc
jmp
(bad)
mov
cmp
and
mov
pushw
(bad)
shl
test
mov
cmp
(bad)
mov
fwait
scas
les
sub
dec
mov
push
aaa
lods
and
xchg
ret
ins
ds
mov
leave
xchg
sar
sbb
gs
js
dec
rol
icebp
and
lock
test
mov
nop
pusha
jge
cmp
xor
bound
jnp
stos
mov
pop
and
dec
test
fisttp
dec
and
jl
jle
sahf
push
inc
sbb
push
sahf
sub
cmps
cmc
movs
push
sub
jecxz
out
sbb
sub
pop
ret
pop
popf
sbb
(bad)
fdivr
out
jl
aaa
jmp
sub
movs
and
fcomp
add
jnp
mov
and
push
mov
mov
sbb
sar
repnz
add
mov
add
or
repnz
out
push
repz
jge
push
cmp
test
mov
(bad)
xchg
or
sbb
add
xchg
push
or
pop
stc
paddq
in
out
and
pop
movs
std
icebp
aad
lock
lea
nop
inc
cld
xchg
gs
iret
xor
pop
mov
pusha
cmps
rol
xchg
add
jle
pop
ret
test
cdq
out
sti
cmp
add
mov
ins
(bad)
lods
dec
and
add
sub
add
dec
ins
movs
pop
lods
icebp
cwde
xchg
fs
sub
cmp
push
mov
and
jle
test
call
mov
fmul
cmp
mov
and
mov
jns
mov
test
std
xchg
jp
neg
add
arpl
cmp
mov
pop
dec
and
cwde
adc
cmp
out
adc
bound
leave
sar
test
js
or
fld
pop
sbb
lahf
adc
jno
mov
push
repnz
mov
int
enter
mov
or
jl
xor
dec
sub
retf
push
movs
xchg
sub
in
push
xor
xor
out
enter
cmp
sbb
arpl
push
pop
(bad)
push
ins
(bad)
sub
cmps
inc
mov
mov
inc
ins
sub
(bad)
cmp
aad
ins
push
dec
loope
mov
mov
jp
shl
scas
adc
out
dec
stos
popa
xor
mov
or
pop
mov
lock
pop
fild
inc
xchg
popa
retf
mov
inc
fsub
test
int
fcmovb
pushf
xlat
jns
mov
add
(bad)
fdivr
loop
sahf
into
aad
dec
es
ret
inc
pop
push
jg
std
retf
mov
add
clc
pop
into
mov
mov
jo
dec
rcl
mov
jmp
mov
rcl
cmc
cmp
xor
add
in
dec
(bad)
push
retf
lods
or
sbb
scas
mov
adc
or
inc
pop
dec
lea
dec
xor
cmp
push
pop
push
sub
ins
mov
xchg
and
or
popa
jb
call
into
ret
mov
(bad)
(bad)
add
push
and
ins
or
mov
aaa
jmp
mov
mov
add
fmul
jae
pop
pop
jns
mov
xchg
cmp
inc
dec
shl
sub
cmp
sbb
xchg
es
ss
(bad)
shr
aad
test
test
popf
dec
xchg
jno
(bad)
fwait
(bad)
jp
sub
repz
pop
test
cmc
sbb
jbe
(bad)
test
and
cld
adc
cmps
jae
outs
fwait
xchg
xor
call
jno
loopne
mov
stos
jnp
rcl
jb
push
mov
test
pusha
cmp
retf
(bad)
pop
scas
push
push
ret
test
mov
sti
int3
xor
push
adc
lods
jg
pop
mov
push
pop
add
adc
dec
out
xchg
(bad)
in
popa
movs
xchg
add
mov
mov
and
push
inc
pop
pop
(bad)
and
and
push
hlt
aas
jmp
retf
dec
stos
pop
xchg
mov
fimul
out
sti
jnp
or
imul
fmul
push
xchg
add
ins
xor
(bad)
cmps
or
(bad)
shl
mov
rcl
add
cli
ret
push
cmp
into
xor
mov
das
lea
mov
xchg
lock
push
mov
dec
dec
inc
aas
push
in
in
mov
push
sub
loope
mov
ins
clc
rol
imul
call
jecxz
bound
(bad)
adc
outs
jne
popf
in
in
pop
inc
mov
cdq
in
jmp
sar
mov
mov
pop
out
fs
clc
dec
les
cdq
cli
in
mov
movs
fidivr
es
scas
cmp
jecxz
mov
enter
add
jns
xor
mov
cmps
cli
and
cdq
cld
mov
mov
xchg
and
shr
pop
pop
add
inc
mov
shl
adc
jmp
adc
ret
clc
and
adc
dec
mov
pop
cdq
jmp
(bad)
jmp
xchg
ja
in
mov
test
sub
and
lea
inc
dec
mov
sahf
int
sub
ins
fwait
pop
sbb
push
loope
xor
(bad)
push
mov
jo
pop
xchg
or
(bad)
out
xor
in
jne
or
int3
shl
push
arpl
add
rcr
push
ret
(bad)
and
mov
mov
std
push
mov
xchg
outs
ins
ja
bound
jecxz
int3
push
add
imul
mov
scas
rcl
inc
xchg
push
sbb
xor
adc
stc
cmp
rcl
shr
add
sub
rcr
dec
jnp
xor
dec
cli
ss
xchg
jo
out
fmul
(bad)
sub
adc
add
repnz
stos
inc
dec
or
and
jmp
scas
cdq
popa
call
ss
inc
popf
xchg
repnz
fs
lods
pushf
jbe
adc
mov
add
daa
fisubr
retf
inc
fmul
ror
ret
dec
dec
pop
inc
sub
leave
ja
mov
mov
mov
dec
pop
(bad)
sbb
add
test
test
outs
sub
add
sbb
dec
lds
push
(bad)
lds
mov
fcomp
fbld
inc
gs
jo
jo
inc
sbb
xchg
test
cmp
pushf
ret
jb
mov
ficom
adc
add
inc
push
pop
aad
mov
lea
fdivp
fist
jecxz
jl
or
and
and
sbb
fisttp
mov
out
es
xlat
clc
call
neg
popf
jp
push
icebp
pop
ficom
or
rol
jg
(bad)
cmps
pop
sub
ss
lds
sub
push
sub
pop
clc
xlat
repnz
dec
push
inc
dec
jle
mov
je
cs
arpl
push
mov
ror
cmp
pop
cmp
or
mov
dec
sbb
adc
jae
inc
bound
(bad)
mov
mov
jg
mul
or
outs
outs
aam
dec
pop
push
out
rep
add
push
add
add
imul
xchg
rcr
mov
out
pop
fidiv
movs
cmps
cmps
sbb
pop
push
mov
sbb
mov
or
scas
cmp
aad
fwait
inc
(bad)
fstp
imul
adc
sbb
cmp
jg
mov
jns
push
cmps
test
dec
repnz
sub
mov
in
sti
aad
mov
inc
mov
das
xchg
inc
mov
pop
cmpxchg
sbb
cmps
adc
out
daa
mov
imul
cmps
mov
mov
lahf
mov
out
(bad)
fidiv
adc
sahf
int3
push
push
jge
jo
movs
cwde
or
and
mov
iret
xor
sahf
xor
pop
imul
jge
adc
push
ret
mov
aam
int3
mov
cwde
cwde
jl
jae
xor
ficom
push
sub
mov
xchg
dec
push
and
repnz
pop
fcmovbe
xor
mov
adc
jnp
xchg
dec
movs
das
sub
(bad)
sbb
(bad)
and
lods
retf
push
test
sub
movs
mov
scas
dec
push
xchg
xchg
jmp
xor
mov
lods
fucomp
push
std
jp
sbb
imul
mov
repz
outs
fdivr
imul
jmp
inc
inc
aam
movs
pop
dec
jo
or
enter
std
or
mov
cmp
cmp
out
sbb
clc
xor
mov
add
inc
cmp
xchg
sbb
movntps
daa
push
(bad)
ins
sar
mov
cmp
(bad)
out
inc
push
jmp
cli
cmp
xor
es
add
sub
mov
test
(bad)
(bad)
cld
enter
inc
out
push
push
das
and
push
or
add
mov
retf
ins
retf
inc
inc
std
xchg
dec
jl
mov
das
rcr
test
cs
popf
push
jge
fcomp
inc
gs
push
shl
repnz
(bad)
pop
rcl
or
sar
nop
push
aam
add
sub
cmps
inc
or
test
inc
xchg
sar
add
cmp
jne
cmp
stos
bound
or
int
retf
out
fstp
xchg
(bad)
les
mov
adc
adc
scas
push
ss
imul
arpl
(bad)
jb
xor
js
jae
mov
sbb
inc
xor
stos
pop
int
imul
and
ror
shl
ins
jg
add
enter
cmp
clc
and
gs
mov
cmps
xor
fnstcw
sbb
lock
clc
jge
ins
add
dec
dec
xchg
dec
das
call
mov
push
dec
ja
shl
mov
cmp
xor
mov
sbb
or
and
in
xchg
dec
mov
mov
add
adc
sub
loope
jns
push
or
in
sub
loope
jne
sub
xchg
movs
or
out
sub
call
push
ja
stc
xor
xlat
pop
aaa
retf
cli
sub
xchg
push
push
enter
add
cld
sti
or
ja
nop
shl
push
je
(bad)
push
mov
loop
jns
add
mov
in
push
mov
test
test
and
xchg
pop
sub
xor
add
and
test
mov
mov
jae
in
sti
cmps
(bad)
out
aam
sub
cmc
popa
inc
pusha
arpl
retf
xor
fadd
rol
dec
retf
dec
stos
out
push
(bad)
call
mov
ficom
xchg
jnp
jmp
and
jp
jno
rcl
repnz
scas
stos
leave
mov
std
call
stc
inc
xor
sub
das
add
pop
aaa
loopne
sbb
pop
sbb
cmp
sahf
mov
fldcw
xor
addr16
mov
push
(bad)
enter
mov
dec
jg
fwait
cdq
ret
ror
out
mov
pop
mov
dec
in
mov
fcom
xor
mul
sub
add
retf
out
test
sbb
(bad)
push
jne
dec
jp
add
mov
jg
mov
or
fs
mov
mov
popa
sbb
(bad)
pop
xchg
movs
pop
add
fsubr
pcmpeqd
lods
in
cmp
mov
cmps
dec
sbb
test
mov
fucomp
in
imul
inc
mov
cvtps2pi
pop
aam
sub
sbb
sti
and
push
sub
xor
icebp
jecxz
mov
out
jae
pushf
jge
ror
fidivr
cwde
pop
cmps
jmp
sbb
mov
jmp
test
ret
movs
dec
retf
inc
mov
sbb
(bad)
ins
cwde
sbb
jnp
jmp
add
push
xlat
mov
and
add
cmp
fidiv
addr16
xchg
pop
xchg
pop
sbb
inc
push
out
loopne
mov
mov
mov
fnstsw
movs
add
xchg
mov
test
sbb
clc
and
cmp
mov
outs
js
retf
shr
jmp
jmp
sahf
sub
add
add
shr
(bad)
mov
outs
mov
sahf
mov
add
mov
rol
and
daa
pushf
repz
(bad)
ins
mov
dec
and
bound
adc
(bad)
std
rcl
sbb
jae
(bad)
(bad)
dec
dec
mov
sahf
and
outs
jg
fiadd
pop
cld
adc
loopne
dec
xchg
lods
sbb
sqrtps
cmp
push
loopne
sbb
sub
push
stos
xchg
hlt
jecxz
adc
mov
or
retf
cdq
jmp
in
imul
inc
and
add
xchg
shl
arpl
call
rol
ret
fwait
aam
cld
xor
enter
data16
je
les
out
rol
retf
iret
add
and
mov
or
call
add
cmc
push
push
dec
retf
lahf
ins
outs
cmp
call
push
or
dec
fcmovu
in
mov
sbb
mov
xor
lahf
pop
adc
cli
fimul
iret
sti
adc
lock
adc
mov
inc
push
mov
and
mov
cmp
jb
outs
movs
les
lea
test
clc
mov
jae
or
aad
aam
int3
dec
sub
jnp
(bad)
int
mov
push
cli
retf
mov
cli
das
sbb
inc
dec
fsub
xchg
or
and
loopne
rcr
outs
cmp
add
out
lds
fwait
or
mov
mov
push
mov
or
ins
dec
sbb
shl
mov
push
adc
sbb
scas
cmp
frstor
xchg
cs
outs
or
jns
and
ins
shr
aad
push
imul
xchg
mov
aam
sbb
pop
imul
sbb
xchg
sahf
cmp
jae
jge
lahf
movs
fidiv
outs
xor
sub
cmps
stos
cmp
dec
pop
mov
cli
and
jmp
adc
pop
loopne
dec
jmp
cmp
xchg
stos
pop
mov
cdq
mov
ror
test
jno
repz
shr
call
jae
push
addr16
cmp
in
test
hlt
jne
mov
lock
xchg
stos
xor
not
outs
sbb
outs
test
sub
neg
xchg
dec
lea
sbb
inc
aaa
xchg
or
dec
bound
push
rcr
ins
push
retf
jp
cli
inc
(bad)
cdq
mov
push
sub
fldenv
pop
and
adc
dec
dec
daa
push
dec
xchg
sub
jge
dec
xchg
dec
sub
imul
int
push
sbb
lea
jno
cmc
cwde
jle
ret
inc
xchg
jnp
je
fwait
or
adc
xor
call
push
sbb
in
fsub
aaa
fldenv
cmp
mov
inc
or
xchg
neg
add
sti
mov
cmp
sub
mov
mov
fld
inc
clc
ror
mov
dec
ret
mov
cmp
add
dec
fidiv
test
aaa
sti
jmp
cwde
loope
and
adc
push
mov
sub
stos
push
popa
fist
or
stos
and
scas
mov
sbb
jbe
loope
fist
add
or
pop
fistp
dec
mov
arpl
add
ja
psrad
fst
cld
sub
dec
mov
dec
fisttp
out
add
jmp
lods
and
push
in
(bad)
xor
test
lods
push
and
inc
fstp
xor
out
das
xchg
push
fs
int3
pop
pop
dec
xor
add
xchg
xor
and
lea
std
mov
inc
rcl
mov
jmp
fbld
test
test
mov
das
pop
sar
in
cmp
mov
adc
dec
push
cmc
iret
jae
cmps
test
rcr
jns
ja
sub
imul
pop
movs
test
or
xor
inc
push
(bad)
lods
pushf
shr
sub
push
out
repz
test
add
popf
mov
int
inc
push
aad
jp
pop
popa
ds
nop
rcr
cmp
jp
loope
mov
add
xchg
ret
adc
mov
out
repnz
dec
sub
icebp
cmp
jo
and
out
pop
(bad)
mov
or
pop
or
cmc
push
push
sub
pop
xor
mov
ins
cmp
mov
test
lock
push
jg
jmp
aad
mov
xchg
mov
daa
enter
jns
notrack
pop
ins
sbb
pop
jno
popa
inc
ret
xchg
pop
inc
cli
sar
pusha
jl
(bad)
xchg
jmp
mov
fcom
movs
cld
imul
sahf
call
aas
sbb
test
aad
fst
xor
daa
loop
sbb
and
xor
arpl
dec
add
test
jle
mov
iret
sbb
xor
jbe
mov
scas
or
jge
clc
or
jno
popf
fdiv
or
stos
(bad)
sbb
popa
hlt
push
sub
xlat
pop
je
out
and
push
in
mov
leave
dec
pop
add
outs
movs
adc
data16
rcr
aad
cmp
sqrtps
ds
dec
mov
add
push
sti
shl
pop
sub
dec
adc
(bad)
inc
push
inc
add
jo
mov
aaa
out
dec
xchg
out
and
xchg
jl
pusha
outs
mov
push
or
mov
jle
inc
adc
and
loope
dec
or
je
jmp
nop
cli
push
pop
test
cmp
mov
xchg
cmp
mov
mov
add
jmp
(bad)
jl
test
mov
or
es
(bad)
cdq
inc
pop
(bad)
or
lahf
cmps
scas
pop
lahf
div
int
(bad)
test
(bad)
es
pop
fist
jns
push
xor
jnp
mov
mov
jl
inc
dec
dec
into
mov
or
jg
sbb
add
xor
daa
jno
push
data16
inc
mov
mov
shl
(bad)
lds
mov
mov
jmp
(bad)
in
sbb
fcom
retf
inc
lock
pop
or
jnp
gs
imul
adc
or
pop
into
push
push
mov
jb
pop
xor
movs
lea
jb
sub
or
push
aad
push
inc
scas
xchg
imul
push
mov
pop
xlat
ret
adc
popa
out
push
xor
clc
loopne
mov
(bad)
retf
xor
int3
xor
sbb
aaa
rcl
pop
daa
cmp
xor
aas
lds
push
or
adc
mov
test
fstp
loope
mov
sub
fmul
push
mov
push
and
xchg
cs
test
xchg
push
add
sub
dec
icebp
pop
pushf
icebp
test
ret
movs
dec
add
sbb
inc
pop
aam
test
cmp
push
xor
clc
fld
imul
ror
mov
dec
push
popa
pop
ror
xchg
(bad)
xor
cmp
ficom
or
jne
(bad)
and
popa
lea
(bad)
pop
call
les
cwde
movs
test
sbb
jp
push
outs
jmp
test
jecxz
xor
pop
std
cdq
shl
ds
pop
sbb
in
push
(bad)
lahf
sub
mov
scas
lods
idiv
call
mov
popf
lock
and
outs
lahf
jno
bound
pop
mov
mov
test
push
fidiv
jmp
push
loopne
cmc
sbb
jae
fnstcw
mov
mov
cmps
ret
push
xor
sbb
mov
pop
pop
cmp
dec
mov
shr
test
dec
pop
cmp
cld
xor
xchg
cli
(bad)
xchg
es
pushf
ins
sbb
fs
dec
xor
adc
fisub
movs
xchg
lds
dec
push
xor
mov
call
sub
sbb
movs
xchg
lahf
(bad)
out
push
push
enter
shr
xchg
sbb
outs
(bad)
lods
ror
add
adc
retf
imul
pop
in
sbb
outs
pop
cli
aad
lea
mov
lods
and
fdivr
cld
call
cmps
pop
add
dec
in
pushf
into
pop
mov
inc
(bad)
scas
imul
nop
pop
aas
mov
mov
push
int3
daa
sub
add
inc
leave
add
stc
frstor
sbb
lock
sbb
es
mov
mov
adc
daa
shl
cmp
(bad)
je
(bad)
xchg
mov
jnp
cmp
or
jno
test
sub
mov
add
arpl
in
jmp
(bad)
stos
or
scas
out
jbe
jmp
pop
push
cmp
sbb
pop
inc
pop
in
retf
rcl
mul
ds
hlt
loopne
add
mov
aaa
dec
in
and
imul
jl
popa
jmp
aas
jge
arpl
loopne
shr
cmp
mov
(bad)
mov
pop
mov
jns
push
call
mov
lahf
pop
and
test
adc
cmps
inc
clc
sahf
test
and
xchg
retf
xor
push
lods
inc
in
cwde
add
or
cmp
push
popf
cmp
stc
fnstenv
push
sbb
in
cdq
cmp
das
ss
cmp
pop
cmp
test
daa
cmc
ja
adc
pop
dec
sub
adc
mov
cmp
cmps
repnz
add
jae
(bad)
mov
loopne
test
fidivr
repnz
dec
jmp
out
ins
popa
fwait
xchg
pop
mov
out
pop
fiadd
outs
clc
sti
aaa
stos
pop
std
push
(bad)
mov
push
int
and
add
fwait
sub
xchg
xor
imul
fist
cmp
adc
inc
sti
sbb
push
push
mov
dec
mov
mov
jmp
fwait
neg
sub
push
and
inc
lods
jbe
and
mov
jae
nop
add
add
jno
fnstsw
and
je
mov
sub
cmps
mov
ret
inc
sbb
mov
retf
into
js
mov
(bad)
fild
add
aaa
jae
dec
xchg
adc
(bad)
popf
retf
(bad)
ja
icebp
fisub
sub
es
or
and
inc
dec
sbb
mov
cmp
xsaves
fnsave
ja
mov
xor
movs
test
xlat
test
cmp
jmp
pusha
mov
mov
and
inc
pop
pushf
repnz
mov
push
cmp
mov
(bad)
stc
xor
mov
movs
mov
fs
mov
push
mov
pop
or
pop
mov
shr
adc
pop
ret
and
mov
imul
cmps
pusha
stos
push
add
out
xchg
cwde
jge
cmc
sub
dec
mov
sub
clc
pop
(bad)
sub
pusha
mov
ds
popf
jno
jnp
rcr
ss
idiv
push
add
sahf
push
or
ret
or
cli
loop
ja
std
mov
cmps
sbb
mov
out
sbb
add
pushf
sahf
and
jle
stos
add
mov
dec
or
push
mov
(bad)
fdivr
dec
aaa
pop
idiv
imul
mov
add
jmp
ins
and
add
xchg
push
dec
js
push
add
cli
je
in
cmps
dec
and
push
xor
jbe
push
jecxz
mov
out
mov
leave
fwait
cmp
int3
push
xor
xchg
stos
imul
mov
adc
arpl
lahf
je
fbld
(bad)
cmp
into
jle
jne
sbb
rcr
mov
inc
and
and
mov
cmp
push
inc
adc
jmp
ins
in
add
pop
push
push
push
mov
sti
mov
popa
cmp
push
push
ss
or
dec
fistp
fnstcw
nop
fst
mov
gs
aas
jmp
rsm
lods
cli
dec
adc
sar
movs
jmp
dec
ret
push
xor
jmp
mov
or
pusha
cmc
ds
jno
or
adc
setg
dec
outs
test
mov
rcl
rcl
mov
pop
push
movs
ins
add
fs
fs
inc
xor
mov
sbb
add
cmps
ins
mov
add
rcr
and
call
ss
das
mov
sbb
mov
xor
imul
(bad)
in
clc
outs
mov
mov
cld
xchg
es
jmp
mov
xchg
test
outs
shl
xchg
push
lahf
mov
jbe
test
and
mov
push
mov
aas
stos
and
xchg
mov
fistp
stos
cmp
jg
mov
jge
dec
mov
and
mov
mov
mul
pop
pop
add
in
enter
shl
test
sub
xchg
pushf
(bad)
es
jns
int3
jmp
mov
mov
fiadd
or
sbb
mov
push
cld
mov
cdq
mov
stos
xor
loope
sti
push
paddq
(bad)
fdivr
mov
sub
mov
rol
popf
mov
out
jp
dec
cwde
mov
fisttp
sub
cmp
stos
inc
mov
repz
adc
and
mov
mov
shl
cwde
fst
aas
jbe
dec
das
test
aad
mul
ret
retf
sub
cmp
fdivr
cld
push
jae
mov
pop
jnp
push
pop
fiadd
dec
inc
das
inc
mov
pop
mov
xor
mov
cdq
lds
mov
mov
popf
lods
xchg
push
movs
ins
iret
xchg
je
jb
push
mov
dec
test
mov
push
and
sbb
xor
jge
pop
repnz
(bad)
and
mov
xor
retf
cmp
iret
mov
add
sbb
jns
or
cmp
cmp
test
pusha
push
scas
mov
add
or
cmp
cmp
ins
xor
(bad)
outs
lea
inc
mov
addr16
xor
push
or
je
not
push
ret
les
lds
pop
mov
(bad)
mov
(bad)
cmp
test
movs
xchg
cdq
sbb
mov
mov
xchg
cmp
enter
and
sub
(bad)
mov
xor
out
lea
pushf
inc
xor
sub
mov
inc
mov
outs
or
xchg
test
stc
ins
jl
dec
xor
dec
movs
push
sbb
add
add
fmul
push
fdivrp
mov
es
mov
pop
fisttp
inc
and
add
push
pop
aas
aas
add
sub
int
jl
jecxz
push
mov
mov
push
sar
and
jmp
push
push
xor
or
ins
add
xchg
rcl
sbb
ins
adc
xor
mov
jne
add
sar
xor
jmp
jg
xlat
loope
in
push
adc
scas
stos
cwde
mov
sbb
hlt
jle
pop
cmc
pop
ss
jns
xchg
adc
pop
mov
cmp
call
rcl
push
aad
daa
xor
xchg
test
and
push
cmp
fnsave
mov
(bad)
push
repnz
add
sub
out
xchg
or
jmp
inc
jmp
rcl
fwait
gs
add
test
pop
xchg
cdq
sub
(bad)
pop
ds
retf
fadd
jo
or
dec
sahf
(bad)
push
ror
out
add
ficomp
bound
jmp
xchg
sbb
inc
push
jl
cs
cmps
jnp
mov
fdiv
mov
push
inc
inc
inc
push
test
rcr
mov
xchg
sub
lds
stos
imul
mov
adc
ficomp
xchg
(bad)
leave
push
cmc
in
std
sub
mov
lods
je
inc
es
add
lds
push
xchg
push
cmp
cmp
lahf
retf
out
adc
pop
xor
and
mov
mov
cwde
loop
fwait
lods
fnstsw
push
mov
and
inc
retf
scas
mov
arpl
fdivr
es
pop
movs
call
jmp
call
jne
sub
ins
iret
imul
ret
xchg
mov
fsin
push
js
dec
in
imul
ret
sbb
(bad)
or
jmp
add
shl
and
xor
push
pop
jno
mov
cs
inc
and
jbe
fstp
cmp
retf
sub
xchg
jle
push
shl
icebp
pop
push
cmp
sbb
inc
push
movs
addr16
jne
mov
xchg
scas
fst
jo
sbb
dec
cmp
mov
adc
mov
mov
daa
imul
dec
leave
in
out
scas
xor
lea
jbe
sub
(bad)
repnz
pop
and
outs
pop
imul
bound
cmps
dec
xchg
jo
inc
xchg
leave
ss
ror
jmp
push
sbb
sbb
sahf
ss
cmps
dec
adc
jnp
mov
imul
sbb
dec
int3
mov
and
loopne
and
cwde
sahf
mov
mov
push
xchg
daa
packssdw
or
jo
sbb
test
pop
cmc
and
mov
js
ret
shr
je
and
dec
retf
xchg
mov
data16
es
sar
or
popa
jnp
or
test
into
fdivr
cmp
aas
aaa
fbld
xchg
mov
add
lea
das
hlt
mov
sbb
mov
fwait
ins
jo
xchg
and
test
call
cmp
daa
adc
sbb
bound
shr
xor
cmp
jge
cmp
add
dec
and
ds
movs
(bad)
push
or
jge
pop
dec
and
xchg
pop
mov
ja
mov
sbb
dec
jae
add
(bad)
pop
pop
jae
fidiv
call
mov
inc
xchg
pop
cld
mov
ror
rcr
inc
sub
aas
cld
ss
or
jle
jmp
(bad)
xchg
int3
out
and
xor
push
jno
pop
dec
fisub
mov
pop
xor
jmp
pop
ja
sub
sbb
xchg
mov
push
sar
mov
into
shl
imul
cmp
and
xor
mov
frstor
push
adc
lahf
mov
and
int
arpl
js
add
(bad)
test
and
in
jge
mov
outs
cmp
aam
cmp
scas
jo
popf
xchg
mov
xchg
sar
xchg
(bad)
sub
aas
addr16
mov
mov
mov
imul
pop
ret
add
adc
rol
push
mov
fstp
jbe
dec
cmp
pop
or
lods
aas
outs
sar
(bad)
iret
fidiv
push
xor
inc
adc
cwde
jo
adc
xchg
mov
nop
daa
cli
stos
int
cmps
mov
inc
push
gs
shl
xor
dec
in
or
jp
adc
outs
mov
cdq
mov
or
pop
dec
sub
push
jo
sub
call
xchg
pop
fcom
imul
out
cmc
data16
xor
jl
cmp
(bad)
or
mov
mov
test
shl
icebp
aam
sbb
int3
nop
mov
dec
pop
ss
fadd
ret
xor
je
mov
(bad)
into
nop
xor
mov
ja
sub
idiv
jge
xchg
ret
das
sbb
and
xchg
fidivr
retf
sub
jae
xor
cs
in
out
shl
push
push
jne
(bad)
outs
daa
and
arpl
xor
in
out
mov
nop
xor
nop
push
mov
xchg
sbb
(bad)
ror
dec
push
mov
inc
xlat
jmp
mov
loopne
mov
push
mov
pop
and
js
adc
sbb
adc
ins
(bad)
or
cmps
test
and
mov
xchg
mov
sub
fisubr
je
mov
loop
out
and
fldcw
data16
xchg
mov
lahf
push
cmovle
xchg
(bad)
jno
pop
sub
outs
adc
mov
push
jbe
xor
jnp
cmp
dec
jo
je
stc
shr
lods
nop
sbb
xchg
lea
xchg
enter
fidiv
mov
(bad)
push
jnp
cmp
add
push
inc
mov
and
and
jo
into
dec
sbb
mov
into
sbb
and
cmc
jmp
jmp
jp
push
popf
push
movs
ja
or
dec
fbld
sbb
mov
fwait
out
nop
dec
jg
xor
ficom
int3
lock
pop
xor
jl
or
dec
sbb
fldl2t
int3
cmps
call
jb
loope
lahf
mov
xlat
(bad)
fadd
dec
repz
retf
out
xor
add
sbb
aam
or
retf
test
adc
mov
mov
(bad)
in
cmp
bound
sbb
sti
mov
cli
hlt
inc
dec
dec
(bad)
sti
adc
lock
push
test
jle
mov
rol
push
iret
add
ja
ins
(bad)
loopne
sub
sbb
cmp
mov
fbld
sub
pusha
int3
dec
in
add
data16
adc
(bad)
cmp
rol
xchg
aam
xchg
pop
cmp
dec
sub
cmp
jne
mov
dec
sti
or
xor
fwait
imul
inc
push
clc
adc
jmp
cmc
jp
adc
cmp
sub
(bad)
xchg
mov
inc
and
pusha
lea
adc
pop
sbb
inc
test
dec
sub
add
lods
rcr
ss
mov
mul
in
lahf
(bad)
popf
mov
shl
das
sti
sub
adc
ja
add
cmp
cld
cmp
dec
sbb
fwait
sub
xor
mov
or
mov
jnp
ss
mov
mov
cmc
cmp
xchg
or
in
or
and
jae
out
or
ja
mov
mov
fwait
sbb
rcr
(bad)
ss
pop
pop
cwde
shl
shr
inc
bound
sub
cmp
pop
mov
mov
push
pop
in
stc
mov
inc
inc
cdq
mov
in
adc
dec
xchg
retf
or
sbb
adc
fnstenv
adc
shr
cmp
mov
dec
xchg
push
adc
xchg
mov
jp
shr
(bad)
push
mov
(bad)
test
mov
(bad)
out
cmp
pushf
imul
pop
ja
dec
fdivr
adc
sahf
mov
pop
ins
cmps
or
add
sti
std
addr16
inc
loope
ret
adc
stos
in
ss
push
push
bound
mov
push
in
mov
js
jl
out
stos
lock
out
(bad)
(bad)
rcl
mov
inc
inc
jno
push
cmps
cmp
fldenv
sub
sub
jno
(bad)
inc
inc
cmps
popa
jmp
mov
sbb
je
(bad)
dec
lds
mov
cmc
shr
inc
dec
push
fisttp
leave
mov
rcr
loope
mov
jl
int3
popf
adc
das
div
mov
les
adc
sbb
sbb
fbld
mov
push
in
(bad)
jecxz
mov
xchg
cs
mov
adc
cli
ret
dec
(bad)
(bad)
loopne
pushf
jge
pop
cmp
int
out
mov
pop
cmp
inc
icebp
adc
xchg
mov
dec
stos
pop
in
mov
int
adc
lock
fs
xchg
mov
xchg
sub
push
les
xor
addr16
adc
pop
sub
ins
cmp
adc
dec
dec
jecxz
test
mov
stos
jns
(bad)
xchg
out
scas
dec
loope
stos
vmwrite
popa
(bad)
dec
popa
cld
jp
sub
aaa
scas
shl
out
mov
or
dec
xor
pop
mov
jp
es
sbb
ins
loop
xchg
cmps
lds
jnp
lock
sub
jg
repnz
pop
jge
shl
ss
ret
xor
add
rcl
push
mov
jmp
cmp
ins
rcr
(bad)
into
nop
inc
adc
call
and
out
cmp
adc
cdq
stos
mov
push
xchg
dec
cmc
or
leave
push
fisubr
adc
mov
nop
jg
aad
pop
int3
adc
cmp
movs
add
or
sbb
dec
inc
adc
ror
arpl
add
ins
popa
mov
and
push
stc
clc
lods
add
out
dec
outs
pop
sahf
in
(bad)
mov
movs
aas
jmp
mov
xor
sbb
fstp
fdiv
es
(bad)
aas
movs
in
fcmovu
lods
and
in
push
sub
ret
sub
push
jae
xor
repnz
clc
popa
cmp
imul
shl
fwait
stos
retf
pop
xchg
mov
sbb
sahf
pop
hlt
aas
mov
in
inc
dec
jo
mov
or
sbb
pop
and
fisubr
shl
addr16
xor
test
pop
cmps
jge
test
dec
fadd
xor
mov
(bad)
jmp
push
mov
mov
dec
adc
cmp
mov
cli
jo
fadd
dec
jae
mov
xor
adc
ret
adc
(bad)
je
pop
and
fidiv
ror
add
adc
ins
adc
pop
idiv
mov
enter
imul
cli
std
fstp
cwde
sub
adc
cs
rep
dec
out
fwait
add
pop
dec
jmp
repz
dec
sti
enter
inc
loopne
xchg
lods
int
fwait
mov
mov
ja
mov
and
mov
jne
jb
cmps
pop
fmul
mov
xchg
sbb
enter
xchg
sub
or
nop
je
outs
jne
sbb
xchg
xchg
push
rcr
dec
push
and
iret
sbb
sub
cli
out
xor
cmp
leave
cmps
(bad)
mov
pop
inc
sbb
push
outs
xchg
xchg
hlt
dec
xor
mov
push
dec
jl
mov
bnd
jo
test
xor
mov
mov
rol
xlat
(bad)
fild
sub
jmp
dec
or
adc
jo
add
ja
mov
hlt
push
cld
int3
dec
mov
adc
ins
jnp
pop
xchg
mov
jecxz
(bad)
cmp
adc
retf
mov
push
mov
or
jns
and
out
mov
(bad)
push
leave
cdq
adc
std
jns
fisubr
js
addr16
hlt
cmp
mov
pop
adc
jmp
js
adc
xor
je
jecxz
mov
pusha
mov
(bad)
pusha
std
shl
cwde
xor
int
push
pop
push
neg
fldenv
push
inc
mov
sbb
sub
xor
(bad)
in
push
(bad)
vpmuludq
in
test
cmps
adc
mov
je
(bad)
push
push
mov
fucomip
inc
mov
int
push
pop
ret
fldcw
cmp
stos
mov
pushf
(bad)
adc
mov
push
adc
aad
mov
mov
ja
and
ror
lea
xlat
sbb
call
retf
int3
sbb
out
mov
mov
mov
leave
gs
mov
inc
mov
mov
jns
aaa
push
lods
outs
fld
pop
(bad)
sbb
jl
call
mov
out
mov
test
or
pop
(bad)
or
fld
int
mov
popa
ins
pushf
mov
inc
fild
ins
pop
lahf
inc
mov
jb
dec
inc
mov
icebp
mov
push
add
add
das
mov
jnp
xchg
(bad)
stos
xchg
push
jno
stc
xchg
push
(bad)
out
shl
mov
mov
lock
js
retf
lods
xchg
mov
(bad)
outs
ins
adc
pop
clc
sbb
pusha
sbb
js
jecxz
fnstsw
ins
pushf
sub
jg
cmc
and
lods
scas
ds
or
std
or
mov
(bad)
xlat
aam
cli
mov
ins
sti
add
xchg
test
movs
or
sub
or
xor
push
test
or
ja
dec
ret
xor
hlt
mov
lahf
or
nop
pop
(bad)
sahf
fsubr
repz
call
and
std
outs
jl
mov
cmp
sbb
inc
lock
mov
xor
mov
and
jb
xchg
or
arpl
xor
adc
mov
push
into
outs
ins
adc
(bad)
dec
and
out
mov
repz
cdq
add
mov
adc
add
and
lahf
in
sbb
stc
or
mov
pushf
add
inc
jno
outs
daa
retf
xchg
stc
mov
popa
popa
iret
stos
and
ja
cmp
fsub
in
xor
sub
fxch
paddsw
dec
in
pop
add
mov
xchg
xor
movs
xor
push
lock
test
mov
push
pop
aam
mov
inc
ret
jns
dec
adc
pop
(bad)
push
aam
imul
lock
getsec
cmp
ret
dec
cwde
push
cmp
jle
nop
lods
push
loope
sub
femms
pop
adc
out
add
sub
int3
sbb
mov
dec
repnz
pop
sar
stos
fwait
not
pop
cmps
mov
es
cmovl
outs
fild
and
data16
int3
inc
hlt
cmp
test
cwde
fidivr
adc
dec
int3
clc
int
pop
stos
jmp
repz
out
(bad)
fsubr
test
dec
dec
jnp
xchg
into
jb
cmp
sbb
dec
dec
xchg
jl
push
jns
movs
mov
and
mov
sar
jmp
sub
cwde
fnstenv
jns
sub
inc
add
imul
ds
jbe
aaa
cmp
and
jno
inc
not
or
xchg
(bad)
stc
jecxz
xchg
jl
mul
scas
jns
cmp
aad
cmp
mov
mov
mov
adc
xchg
xor
ins
das
fs
fcom
pop
mov
lds
cmp
stc
nop
add
xchg
inc
pop
les
gs
rcl
cld
call
jne
mov
rcr
loopne
mov
ins
shr
gs
push
cld
fbld
add
es
adc
or
mov
dec
sahf
into
gs
mov
and
dec
in
sbb
stos
test
rcr
lods
jmp
out
adc
jb
fwait
outs
ins
jmp
mov
sti
adc
mov
ins
fs
jne
shl
ins
add
or
shl
mov
pop
push
pushf
lea
mov
pop
jge
inc
rcr
int
xchg
sbb
and
dec
sar
(bad)
mov
xor
and
popa
repnz
jb
inc
dec
push
sub
cmps
dec
aad
fs
pop
test
sbb
mov
mov
in
(bad)
es
mov
or
imul
clc
push
loopne
inc
in
shl
pop
in
mov
pop
adc
or
std
fdivr
dec
ds
xor
div
xor
ins
out
adc
jns
aam
nop
fdiv
and
mov
mov
scas
cmp
push
in
jge
xor
and
popf
(bad)
popa
jne
pop
sbb
add
pop
push
bound
stos
push
or
adc
mov
repz
(bad)
in
sub
ret
add
cwde
loop
mov
jge
xor
repz
xor
jb
hlt
gs
shr
mov
repnz
cmps
in
repz
mov
scas
aad
xchg
pop
js
imul
adc
mov
or
clc
mov
cmc
loope
and
pop
(bad)
aas
test
cmc
sub
popa
jo
sub
add
sub
jp
movs
mov
mov
push
idiv
mov
in
mov
jns
icebp
lds
inc
call
ja
jle
lahf
inc
sti
addr16
mov
popa
jo
xchg
mov
mov
jnp
dec
fidivr
inc
les
fsubr
cmp
iret
and
xchg
cwde
mov
sti
ret
cmps
pop
and
inc
mov
and
(bad)
push
jnp
dec
data16
into
add
xchg
sbb
mov
or
pop
pop
cli
fdivr
or
pushf
adc
int
scas
cld
adc
movs
jbe
inc
xchg
push
ret
xchg
dec
sub
out
mov
js
mov
mov
adc
xchg
jb
jmp
ficom
(bad)
mov
shr
and
cwde
sar
ret
and
fs
aaa
repz
inc
push
push
into
pop
js
add
daa
mov
fmulp
sbb
scas
inc
fnsave
xor
movs
cmp
jae
stc
js
push
stc
test
jns
call
outs
xchg
or
jne
jg
mov
shl
adc
das
dec
bound
jmp
mov
or
push
cmp
cmp
ds
adc
sub
xchg
sub
into
and
mov
cli
push
data16
popf
popf
clc
ins
daa
pusha
test
mov
(bad)
cmp
(bad)
stos
sub
dec
cld
fcmovb
scas
(bad)
xor
pop
add
outs
push
jl
sti
imul
ja
(bad)
jns
(bad)
imul
sahf
push
jge
jge
push
jns
jmp
cwde
test
add
push
ds
clc
and
xchg
cmp
cmp
pop
aam
aaa
xchg
jno
cld
cmp
xchg
mov
xor
mov
fild
add
xor
cmp
in
dec
xchg
sbb
xchg
cmp
ds
aam
sub
jl
inc
jae
ins
dec
outs
daa
cld
cmp
push
jecxz
xor
cmp
xchg
adc
fcmovbe
jle
call
inc
push
fild
pop
ja
adc
movs
gs
and
mov
mov
sub
adc
jge
cmp
push
(bad)
push
cwde
push
mov
fabs
cmp
pop
movs
mov
cmp
pop
xchg
mov
out
add
mov
jmp
imul
leave
jmp
sbb
daa
and
sub
arpl
sti
xlat
je
je
(bad)
inc
pop
(bad)
int3
test
push
clc
loop
daa
rcl
movs
sahf
and
ret
xor
sahf
les
leave
leave
ret
xor
mov
add
lock
sbb
jbe
cmp
xor
or
in
xchg
add
dec
jae
lods
push
and
call
dec
stc
into
xchg
movs
xlat
cmp
mov
sahf
push
cmp
sbb
xlat
dec
dec
repz
cmp
xchg
enter
xchg
cdq
xchg
jmp
int
shl
out
sbb
or
test
sub
mov
call
jmp
sti
cwde
inc
or
xor
jg
inc
or
mov
(bad)
push
(bad)
rol
out
sub
ins
shl
jl
pushf
and
jge
cmp
mov
dec
mov
sub
pusha
push
psubusb
jg
cmp
nop
pushf
jp
ins
int3
mov
outs
loope
pop
adc
mov
jmp
mov
push
dec
xor
adc
jnp
rcr
xchg
xchg
sub
push
jl
ds
int
pop
adc
dec
aas
jbe
ror
push
or
jmp
xchg
jmp
sub
dec
mov
fisttp
or
fnsave
pop
cli
outs
mov
dec
inc
jle
dec
test
mov
std
jmp
pop
push
sub
jp
push
push
aad
cmp
cmp
hlt
hlt
add
pop
cld
cs
sqrtps
call
jle
cmp
and
mov
inc
push
sub
sbb
add
jno
sub
(bad)
(bad)
dec
mov
sbb
sbb
jp
icebp
mov
sub
hlt
cmp
push
push
ret
inc
inc
mov
fld
mov
mov
sub
mov
sti
jbe
out
jecxz
outs
loope
aam
pop
sbb
mov
pop
or
ret
test
in
shr
and
push
adc
xchg
dec
adc
iret
jle
aaa
out
sbb
push
jns
test
cmc
sub
ret
test
jno
nop
inc
mov
mov
call
mov
scas
sar
cmp
xchg
cmp
aam
aaa
mov
mov
push
(bad)
push
fdiv
out
cmc
call
(bad)
bound
lgs
sbb
pushf
mov
mov
scas
test
(bad)
div
sub
sti
mov
mov
pusha
xchg
jp
jb
cmovo
mov
cdq
enter
pop
pop
sbb
(bad)
and
xchg
lods
test
mov
rol
inc
movs
fs
clc
into
retf
std
movs
cdq
in
xchg
das
rcr
cmc
lods
scas
lds
push
mov
fisubr
das
or
sub
inc
mov
adc
fcomi
or
sbb
inc
mov
inc
fiadd
enter
xchg
lock
out
sub
aas
sbb
inc
fst
add
into
adc
(bad)
jae
outs
retf
dec
std
sub
lods
push
pop
addr16
stc
dec
mov
cmp
clc
jmp
hlt
addr16
mul
cwde
add
fsubp
sahf
cwde
rol
xchg
outs
call
fwait
icebp
aam
in
popf
jmp
mov
inc
dec
sti
push
and
mul
out
pop
cmp
sub
ret
in
movs
cli
mov
loopne
add
mov
add
pop
shr
adc
sub
in
or
inc
fiadd
call
adc
loope
pop
inc
xlat
xor
pusha
mov
fdiv
cli
loop
cmc
dec
jg
dec
bound
(bad)
mov
jmp
push
mov
in
repnz
rcl
movs
and
mov
lods
push
clc
push
fistp
inc
mov
aaa
jo
adc
or
cmp
add
adc
or
mov
mov
cmp
mov
sbb
ffreep
sub
aad
(bad)
pop
jbe
test
mov
inc
and
addr16
scas
sub
sti
iret
inc
push
idiv
or
cmc
xchg
inc
aaa
out
popf
xchg
cmc
ja
test
aas
rcl
add
adc
or
cmp
push
cmp
push
sub
rcl
sahf
ins
xlat
sub
cmp
inc
fs
mov
push
imul
(bad)
movs
mul
mov
fadd
mov
ins
jmp
jl
sub
inc
mov
and
xor
pop
jmp
std
pop
adc
js
sub
and
jne
inc
cmps
jo
in
in
xor
cmp
cmps
inc
mov
cmp
sbb
mov
dec
fst
or
hlt
loopne
enter
outs
add
mov
(bad)
es
xchg
popa
outs
cmp
movs
test
mov
cmp
dec
ror
loopne
mov
jns
int3
scas
enter
mov
jecxz
push
mov
ss
lods
sbb
mul
ror
sbb
ss
lock
aas
sbb
inc
sbb
or
fimul
adc
mov
call
sbb
test
pop
test
ds
lock
mov
aam
mov
mov
xlat
iret
nop
lds
pop
cld
xlat
ss
lods
out
sub
fs
fldenv
lods
inc
int
jo
mov
or
(bad)
into
mov
mov
retf
xlat
popf
add
mov
mov
jl
mov
add
sub
int3
inc
scas
fisub
pop
or
setb
stos
xchg
mov
popf
jo
or
outs
mov
lea
out
(bad)
dec
stos
dec
mov
pusha
cmp
xchg
sub
inc
cmp
mov
dec
aam
movs
mov
jg
and
ficom
retf
inc
push
sub
(bad)
std
mov
or
xor
pop
adc
sub
sbb
jmp
cmp
jge
ret
in
cmp
xchg
xor
adc
mov
mov
jno
xchg
daa
cmps
fadd
gs
dec
mov
add
(bad)
mov
fcmovnb
in
mov
stos
ja
ja
jns
cli
mov
add
and
jne
(bad)
loope
ret
(bad)
push
and
sub
pop
hlt
dec
psadbw
mov
and
nop
dec
inc
ins
adc
push
out
pop
loopne
inc
sbb
in
or
xchg
and
and
xor
pop
mov
popa
sbb
cdq
sub
ins
push
call
dec
ss
shl
mov
push
push
popf
int3
push
adc
jno
inc
call
cli
jae
imul
fbstp
jo
jae
inc
push
mov
push
xor
xor
mov
mov
popf
inc
jge
jecxz
push
push
aaa
shr
hlt
arpl
cld
nop
ds
and
or
loope
retf
xor
xlat
mov
jns
sbb
xchg
sub
stos
cmp
xchg
int3
push
movs
push
sbb
lock
stc
cmps
mov
lods
retf
test
test
les
clc
clc
add
in
xchg
ret
nop
and
fucomip
jg
sbb
ss
pop
mov
enter
jne
add
inc
and
and
test
add
add
xchg
sbb
ds
sahf
shl
int3
sbb
or
das
and
lods
jp
jmp
cld
push
fstp
mov
int
sbb
mov
inc
pop
adc
push
rol
pop
jmp
scas
or
inc
aad
push
sbb
mov
pop
mov
mov
jg
mov
arpl
pusha
test
ret
push
rcl
cmp
jle
fimul
cmps
jl
xor
push
dec
js
or
iret
jo
daa
in
push
mov
in
xlat
push
or
sub
pop
addr16
mov
repnz
fstp
in
jecxz
scas
sbb
xchg
pop
xor
idiv
fnstenv
inc
lds
les
das
mov
popa
dec
mov
sbb
jg
cs
jl
jg
mov
mov
dec
div
arpl
mov
jge
(bad)
xchg
movs
scas
sar
or
dec
outs
fdiv
sub
cli
clc
fmul
int3
test
test
cmc
push
lea
mov
and
es
jge
retf
jle
add
sbb
movs
or
and
adc
push
pusha
sbb
scas
or
mov
jl
xchg
inc
stos
dec
gs
dec
imul
rcr
loope
mov
es
mov
dec
fiadd
pop
xchg
dec
pop
add
jbe
xchg
push
(bad)
enter
pop
inc
fiadd
jmp
mov
sti
mov
mov
xor
nop
mov
inc
and
std
popa
retf
fcmovbe
outs
sbb
mov
es
lahf
out
movs
fist
out
inc
sbb
inc
bound
cli
add
gs
push
pop
mov
sahf
test
xor
outs
add
dec
imul
mov
jp
test
jne
lds
jge
push
xor
and
cmps
sbb
shr
test
mov
dec
div
leave
and
xchg
adc
imul
push
sub
(bad)
mov
arpl
call
stos
out
cmps
sti
jae
cwde
cli
int
adc
fs
cmp
push
mov
or
fidivr
das
add
jo
(bad)
dec
arpl
jp
xchg
popf
and
add
xchg
mov
inc
push
jnp
ds
dec
push
or
xchg
jne
cli
add
adc
mov
push
lahf
test
mov
mov
xchg
and
movs
push
icebp
mov
call
sub
icebp
adc
mov
pop
not
pop
aas
dec
or
pop
sbb
adc
rdmsr
adc
cmp
scas
movs
gs
mov
sbb
xor
mov
in
dec
loop
or
mov
pop
mov
jae
sub
jbe
mov
(bad)
jmp
xchg
inc
push
das
and
mov
dec
popf
push
mov
dec
addr16
or
or
ret
pushf
xor
out
pop
js
in
mov
jp
ins
out
aad
shl
mov
adc
jo
in
rol
outs
or
fcom
popf
ds
out
arpl
fild
test
leave
lods
cmp
mov
sti
enter
mov
outs
mov
cmps
sbb
push
push
int
push
add
scas
pop
push
frstor
adc
out
stos
dec
fild
repnz
add
jmp
xor
ffree
cld
ins
mov
sbb
mov
fst
in
lock
or
lock
mov
clc
push
xchg
(bad)
jp
push
cmp
mov
pop
das
call
mov
inc
jnp
clc
hlt
dec
mov
retf
(bad)
pop
add
test
add
int3
bound
xchg
inc
shl
dec
das
es
xchg
repz
adc
sbb
stos
hlt
push
sub
pop
dec
lods
dec
repz
pop
pusha
or
(bad)
cmp
inc
movs
sub
ins
mov
mov
loopne
jne
dec
push
and
ret
and
fild
xor
xor
adc
push
dec
pusha
inc
fisttp
mov
pop
lds
mov
jg
pop
add
fwait
mov
xlat
jge
sbb
push
pop
pop
test
jp
pop
fcmovnu
mov
fwait
bound
test
mov
mov
add
jne
sub
out
cmps
xchg
ds
out
scas
add
fnstsw
and
fcmovnb
mov
mov
dec
adc
arpl
ffree
mov
enter
xlat
inc
dec
hlt
sub
rcr
push
ss
aad
call
mov
jnp
aas
cmp
inc
add
lahf
add
daa
inc
imul
frstor
mov
mov
cmps
pop
ins
dec
lock
pop
movlps
shl
add
leave
mov
iret
cmc
inc
outs
or
push
scas
jne
leave
adc
dec
or
dec
ins
nop
xor
call
js
add
push
and
sbb
repnz
xchg
push
addr16
add
inc
xchg
into
ja
inc
test
shl
push
cdq
(bad)
retf
push
fidiv
sar
movs
inc
cdq
jp
cwde
punpcklbw
out
retf
shl
test
pop
fsub
lds
test
mov
and
sbb
ins
jp
mov
push
stos
ja
xchg
push
call
jmp
mov
dec
lock
and
imul
mov
ret
dec
push
jge
sbb
cmp
add
add
mov
(bad)
cmc
leave
in
ret
fdivrp
sbb
pop
or
scas
hlt
rcl
sub
imul
stos
pop
(bad)
push
cmps
xlat
repz
and
inc
sbb
jp
mov
add
dec
test
in
sahf
repz
icebp
out
scas
mov
push
or
sbb
dec
sub
xchg
fnstsw
add
mov
dec
daa
loope
lods
pop
jl
push
sub
push
(bad)
mul
nop
sbb
jns
clc
and
adc
cmp
loopne
xor
mov
repnz
cld
xlat
mov
inc
repz
shl
mov
sub
cmp
mov
jo
gs
jb
cmp
add
out
jae
leave
aam
jg
and
jl
bnd
out
mov
dec
test
inc
sbb
out
mov
out
arpl
add
loopne
fst
xor
mov
es
iret
(bad)
lock
pop
aad
cmc
pop
stos
ins
ss
push
ror
push
data16
jmp
mov
sbb
mov
or
scas
push
test
mov
daa
mov
mov
and
pushf
mov
lock
pop
test
call
jl
fwait
pop
dec
jl
ficom
add
lahf
add
enter
popf
(bad)
mov
push
adc
cmp
pop
call
pop
hlt
loop
dec
xchg
jo
sub
loope
xacquire
cld
pop
stos
dec
jecxz
push
mov
xor
jno
lods
test
xor
imul
xchg
cs
sahf
scas
dec
test
ror
sbb
test
add
pop
fidiv
or
pop
push
and
fs
xchg
sub
sub
arpl
add
dec
pop
lods
(bad)
dec
hlt
in
jmp
mov
add
loope
(bad)
mov
mov
mov
pop
inc
hlt
push
into
pop
and
mov
dec
test
pop
loope
xor
in
adc
shl
mov
adc
push
sbb
dec
jge
mov
je
icebp
xor
push
inc
imul
rol
ror
sbb
retf
sub
add
jns
fisttp
cld
sbb
mov
loope
stc
in
(bad)
push
and
icebp
mov
mov
push
loope
loop
add
pop
not
xchg
movs
shl
dec
stos
sbb
or
retf
cdq
cli
jp
pop
jbe
popa
test
sahf
cmc
mov
mov
mov
pop
sbb
dec
daa
(bad)
mov
cdq
xchg
scas
retf
mov
dec
pop
and
add
fwait
in
in
add
cdq
jg
add
retf
dec
sbb
das
js
hlt
mov
jp
rol
push
xor
and
jge
mov
jp
adc
aas
pop
mov
adc
xchg
aas
aam
sbb
xchg
push
enter
inc
sbb
scas
mov
jmp
sti
xchg
fld
xor
pop
mov
outs
and
pop
fld
fidiv
dec
loop
shr
and
adc
sti
dec
das
pop
mov
add
xor
jle
dec
sbb
test
fdivr
fdivr
inc
cmp
xchg
sub
fucomip
repnz
shl
jns
mov
loopne
xchg
(bad)
call
jle
hlt
jae
aas
imul
cmp
and
jb
jp
ret
push
jmp
out
and
xor
jnp
jecxz
xchg
mov
scas
dec
sbb
mov
rol
jmp
jmp
pop
ja
imul
cmp
pushf
jo
xor
lods
mov
cmp
addr16
fbld
add
mov
pop
xlat
adc
out
xchg
xor
lds
(bad)
jo
rcl
dec
or
mov
adc
aad
cmp
pop
cmps
neg
(bad)
(bad)
push
add
jnp
inc
enter
mov
sti
leave
test
fld
stos
pop
and
nop
xor
iret
dec
enter
lods
jne
jecxz
fwait
and
push
jno
mov
adc
push
das
jp
xor
add
and
movs
sub
add
mov
sbb
xor
xchg
and
cmp
(bad)
cdq
push
xchg
les
push
pop
adc
cmp
mov
mov
jle
mov
or
cmps
xor
jo
movs
adc
fs
pop
enter
add
dec
sub
add
fs
shr
retf
call
pop
int
inc
and
fdivr
mov
out
je
pop
adc
pop
cmps
push
mov
add
jnp
jecxz
iret
js
ret
in
sbb
push
popa
bound
mov
mov
jmp
xor
or
bound
icebp
outs
pop
mov
call
mov
imul
outs
cmps
sahf
pop
in
jp
sub
xor
in
lods
xor
(bad)
and
mov
mov
jl
mov
jecxz
cmp
cs
mov
or
mov
popf
pusha
jno
ret
or
jp
push
xchg
sub
jecxz
mov
add
mov
xchg
xchg
loope
mov
nop
pop
push
pushf
dec
pop
in
sbb
xor
adc
rol
pop
jl
mov
std
jl
cmp
pop
fmulp
ins
fs
xchg
adc
or
sbb
daa
mov
mov
xchg
sbb
dec
pop
pop
inc
int3
aad
pushf
jo
sub
adc
push
shr
jo
pop
popf
leave
cmps
push
cmc
movs
cmp
inc
loopne
add
push
gs
push
scas
xchg
loopne
adc
push
ja
pop
mov
mov
jbe
dec
sub
inc
mov
das
mov
stc
or
pop
mov
push
data16
pop
(bad)
in
jae
popa
mov
xlat
shr
push
mov
cmp
pop
enter
add
dec
ins
lahf
gs
cmc
and
test
jp
ds
in
push
inc
mov
add
and
cmps
(bad)
push
pop
jns
lock
xchg
push
call
inc
popf
mov
push
enter
xor
jmp
dec
es
fcom
out
and
sbb
jno
jge
in
jecxz
xchg
xchg
in
je
and
cmp
sahf
in
cmp
sub
popf
aad
leave
mov
(bad)
pop
mov
or
cmps
lea
cmc
imul
pushf
or
jle
pop
outs
cmp
xor
ret
(bad)
je
movs
(bad)
dec
imul
mov
or
icebp
jnp
inc
out
dec
jle
sbb
call
xchg
jnp
and
mov
aas
aad
xchg
xor
push
inc
push
pop
jp
fwait
xchg
mov
(bad)
jg
jns
addr16
es
sbb
in
imul
(bad)
or
sub
mov
push
pop
mov
push
cmp
test
inc
(bad)
sub
adc
retf
sbb
sub
arpl
popf
das
sbb
(bad)
jno
dec
mov
cli
stc
xchg
aad
xchg
test
out
or
(bad)
nop
adc
add
ins
mov
mov
sbb
pop
mov
xor
jle
pop
cmp
ins
adc
add
jl
xor
cmps
jmp
or
pop
mov
jp
fisub
prefetcht0
push
not
add
push
sub
repz
xchg
jg
in
retf
cli
fbld
mov
or
add
in
(bad)
jmp
std
push
ins
and
mov
fst
(bad)
add
retf
sbb
loop
(bad)
enter
fild
mov
adc
inc
fiadd
mov
push
xchg
or
and
call
cmp
and
xor
jmp
sti
xchg
nop
lods
(bad)
aad
leave
imul
or
sbb
or
and
outs
clc
mov
push
jge
mov
rep
in
inc
push
in
das
je
aaa
mov
daa
in
add
cmp
add
mov
push
lods
aaa
sub
mov
aad
jge
or
xlat
push
inc
add
xchg
and
push
mov
mov
aas
jg
inc
inc
ss
ds
clc
sub
mov
popa
pushf
fiadd
add
icebp
sbb
(bad)
adc
jle
xor
mov
and
scas
mov
jno
shl
loope
push
test
jp
mov
cwde
pushf
pushf
cli
and
jmp
and
fld
inc
mov
add
out
dec
jne
push
retf
adc
dec
popf
cs
stos
add
jb
xor
arpl
cmp
add
(bad)
jbe
(bad)
pop
loop
mov
ins
mov
pusha
jnp
pop
imul
pop
jns
jns
in
test
push
jge
sbb
and
cmp
or
aam
add
cmp
inc
mov
jp
lea
mov
mov
sti
pop
jo
sbb
cmp
mov
loope
repz
out
lea
stc
ror
addr16
out
ds
cmp
xor
ror
je
mov
(bad)
xchg
push
movs
sub
mov
sbb
pop
mov
mov
inc
or
rol
je
js
loop
xchg
daa
add
stc
shl
jl
mov
sbb
xor
movs
mov
out
lea
and
jp
mov
mov
(bad)
mov
xor
pushf
aas
xchg
mov
dec
sbb
lea
xchg
je
(bad)
stc
in
adc
dec
mov
sbb
mov
jno
xor
test
retf
adc
push
push
xor
imul
cmp
push
xchg
mov
out
xchg
arpl
jg
xchg
jb
mov
mov
ret
mov
jo
sub
jg
call
arpl
push
mov
mov
add
mov
loop
push
call
data16
iret
rol
or
repz
(bad)
xchg
add
sbb
xchg
adc
fwait
push
inc
jge
psllw
fs
push
jnp
ja
in
imul
outs
mov
mov
and
jns
sbb
jge
in
mov
rcl
aas
int
xor
add
fs
sti
mov
and
nop
enter
repz
xchg
mov
(bad)
into
jp
pop
add
xor
and
mov
hlt
sub
mov
call
test
or
popa
aas
test
xchg
lds
into
ss
movs
cs
std
jp
(bad)
clc
sub
pop
and
jg
imul
lahf
jo
aas
inc
cdq
int
xlat
addr16
shl
xor
jl
lds
movs
jmp
dec
pushf
sbb
jbe
add
and
or
sub
pop
xchg
sbb
aam
rol
jns
push
jge
call
cdq
adc
in
pop
jo
xor
out
adc
xor
mov
ins
out
adc
or
or
mov
addr16
push
adc
and
ins
(bad)
ret
mov
xchg
fld
pushf
lods
out
out
pushw
sub
lds
pop
pop
push
xchg
daa
lods
int
sub
pop
xchg
xchg
inc
aas
mov
test
stc
cmp
fld
ret
fild
pop
loopne
adc
dec
add
jmp
or
cwde
pop
push
(bad)
jl
cmp
push
ins
cwde
loop
dec
mov
aaa
xchg
stc
inc
shl
lods
sub
pop
sar
retf
mov
sub
mov
repz
jno
leave
fmul
test
pop
sti
jnp
push
or
shl
xor
aas
je
push
imul
clc
inc
xor
repz
sbb
fwait
inc
bound
mov
mov
cmp
dec
fstp
mov
into
scas
adc
xchg
mov
jae
shr
gs
loop
or
xor
add
inc
mov
scas
inc
mov
push
out
sar
stos
in
bound
fcmovu
int
fistp
xchg
aam
in
cmp
lahf
movs
and
xchg
mul
das
cmp
sbb
enter
in
adc
mov
(bad)
jg
push
cmp
loop
(bad)
and
lahf
cmp
cli
imul
and
jnp
pushf
(bad)
(bad)
dec
jnp
cmc
imul
retf
lods
sbb
cmp
mov
sub
push
das
push
in
mov
mov
mov
mov
push
mov
enter
sub
pop
mul
mov
daa
xor
lds
out
jnp
or
loope
ins
jl
inc
js
jb
add
mov
stc
and
xor
cmp
int3
jmp
jnp
not
test
stos
nop
icebp
mov
je
cmp
add
clc
mov
sub
movs
nop
xor
and
clc
push
cdq
mov
imul
xor
dec
dec
(bad)
rol
or
leave
das
mov
jp
(bad)
clc
test
and
add
cwde
mov
popf
mov
fisttp
(bad)
out
xor
mov
(bad)
scas
clc
in
fadd
arpl
js
mov
(bad)
sub
je
inc
ins
dec
repz
outs
std
cmp
clc
movs
cmp
or
add
jns
out
aaa
out
mov
cmps
and
jns
adc
xlat
push
push
stos
dec
pop
and
ins
sbb
jg
inc
int
sub
test
and
add
inc
xor
pop
aam
leave
outs
mov
add
shl
movs
cmp
jno
movs
cmps
inc
sub
jmp
sub
add
int3
lea
mov
mov
addr16
inc
(bad)
out
xchg
xchg
mov
int3
or
into
sbb
mov
sti
inc
scas
scas
mov
(bad)
cmps
cmps
pop
test
mov
cmp
lahf
cmp
hlt
lahf
adc
repz
bound
sub
push
mov
sti
adc
aaa
ficomp
nop
xlat
dec
retf
cmc
pop
stc
inc
dec
push
in
mov
lahf
mov
imul
enter
mov
inc
jno
shl
in
movs
dec
and
sbb
ins
pushf
js
sbb
dec
xchg
jns
jae
mov
in
adc
and
xchg
aad
in
jne
sub
out
(bad)
ror
loopne
and
xor
push
cmp
fs
add
xor
jl
in
mov
dec
jns
mov
lods
pop
mov
es
es
addr16
add
sub
xchg
mov
mov
stos
test
mov
test
fs
xor
inc
popf
pop
ret
bound
pop
push
pusha
mov
mov
xor
push
xchg
mov
jo
ret
sub
sar
xchg
and
out
xor
ds
les
cmps
and
sbb
int3
xor
nop
xlat
sub
jb
pop
fwait
inc
xor
in
mov
mov
dec
in
sbb
pop
stc
in
xor
xor
pop
js
cmps
jae
inc
pop
sbb
mov
lds
(bad)
inc
cmps
xor
jb
out
imul
pusha
fwait
mov
std
aam
(bad)
aas
push
xor
out
test
ja
lods
or
sahf
shl
or
outs
and
or
add
loope
fdiv
push
mov
jne
sahf
mov
pop
dec
cld
loop
pop
pop
fs
sar
repnz
dec
mov
push
cdq
aam
and
mov
mov
lahf
addr16
pusha
(bad)
sbb
in
lods
add
ins
cld
arpl
dec
lahf
daa
mov
mov
pushf
cmps
jbe
jl
mov
pop
ret
fs
fadd
(bad)
std
or
jae
frstor
repz
adc
loop
mov
sbb
add
in
mov
add
test
ins
mov
iret
retf
scas
pop
daa
or
mov
inc
xor
loopne
xchg
add
jo
jg
out
or
mov
(bad)
xchg
and
xchg
inc
pop
sub
stc
or
sahf
rol
outs
and
xor
cmp
mov
xor
test
std
mov
movs
inc
xchg
mov
retf
xchg
popf
into
scas
cmc
fcom
(bad)
mov
rol
jle
or
pop
xchg
pop
(bad)
jp
jl
dec
fldcw
push
mov
pop
cmp
iret
lds
ret
aaa
jp
shr
adc
xchg
and
sbb
push
sbb
mov
scas
mov
xlat
sbb
adc
mov
data16
cmps
in
cwde
out
div
mov
push
push
jae
inc
xchg
adc
inc
cmp
addr16
jp
push
cld
inc
out
cs
jp
mov
add
adc
rcr
jge
iret
les
jno
sub
aas
inc
daa
unpcklps
and
xlat
push
into
add
or
mov
sti
imul
es
mov
jge
xchg
cmp
cmp
xchg
jp
fcomp
sub
fnclex
cmp
and
mov
aam
xor
push
frstor
loope
pushf
aam
sbb
ja
into
and
pop
arpl
jb
mov
mov
mov
xchg
dec
adc
add
lods
mov
mov
hlt
lods
add
pop
cmp
jne
dec
mov
lods
cmp
pop
mov
or
adc
mov
cli
xor
ret
outs
fidivr
icebp
mov
int
pop
lea
push
int
mov
push
in
mov
hlt
push
inc
pusha
mov
xchg
aaa
cmp
ins
movs
mov
push
aaa
dec
xor
test
jp
(bad)
shr
pop
sbb
push
sub
int3
mov
inc
iret
cmp
(bad)
mov
sub
sbb
in
mov
xchg
fcmovnbe
inc
outs
mov
cmp
cli
xchg
js
pop
push
push
xor
adc
jo
add
xchg
out
xor
hlt
sbb
fiadd
rcl
mov
iret
sbb
pop
xlat
movs
outs
test
mov
arpl
ret
ds
mov
clc
inc
(bad)
push
jp
stc
sbb
or
push
mov
mov
das
mov
mov
xor
cld
lods
jge
sbb
and
push
jl
call
inc
mov
push
lds
cmp
std
push
fcmovu
outs
push
adc
cs
fsubr
shl
mov
fdivr
arpl
imul
lods
imul
sub
xchg
mov
add
out
cli
mov
jle
cmps
cmp
cdq
xchg
fcomp
jb
inc
aaa
call
out
jmp
out
cs
push
inc
sub
(bad)
jge
pusha
(bad)
mov
aas
xor
ds
loopne
inc
cwde
stos
xor
and
pop
xchg
sub
mov
lds
push
inc
cld
out
fist
jge
daa
es
fwait
jbe
mov
push
mov
mov
rcr
sar
ins
jbe
mov
arpl
test
xchg
pop
(bad)
and
inc
sbb
xchg
mov
gs
and
in
(bad)
mov
jno
jl
lahf
leave
clc
es
cmp
popf
ror
lock
jmp
and
repnz
fdivr
ret
inc
jmp
adc
daa
jecxz
jp
bound
stos
(bad)
les
or
dec
adc
stos
bound
in
popa
ret
sbb
shl
ret
cmps
jae
mov
adc
out
cmp
test
(bad)
mov
aam
xchg
stos
add
push
sub
pop
adc
cmps
test
je
lds
pop
fcomp
and
stc
inc
pusha
dec
es
sbb
or
dec
xor
jmp
cmp
pusha
mov
pushf
xlat
ins
loop
dec
repz
or
(bad)
jg
mov
mov
ja
fild
dec
retf
outs
ja
inc
or
xchg
repnz
in
pushf
sbb
cmc
movs
adc
jns
es
cmp
sub
xchg
cmp
icebp
enter
xor
cmp
jne
xchg
push
xchg
pop
mov
data16
dec
inc
(bad)
inc
jg
sbb
inc
call
mov
fiadd
fwait
dec
push
xchg
pop
mov
inc
js
fidiv
hlt
xor
pop
xchg
retf
sbb
dec
adc
xor
mov
sub
dec
ror
std
adc
rcr
mov
leave
mov
pop
sbb
or
pushf
sbb
cmc
mov
mov
add
enter
loope
cwde
pop
or
in
arpl
and
pop
(bad)
mov
rol
pop
dec
aam
imul
mov
pop
in
(bad)
fdivr
xchg
mov
neg
inc
lds
movs
sbb
push
jmp
int
loope
leave
outs
dec
lea
pop
push
xchg
loope
enter
cmp
mov
xor
jecxz
dec
pushf
push
fstp
les
inc
and
sti
(bad)
fcomp
out
inc
call
push
cmp
mov
cmps
adc
cli
xor
jno
jae
ins
(bad)
les
dec
into
xor
les
inc
cmp
push
xor
add
std
aas
add
mov
add
bnd
mov
and
lods
or
scas
shr
fwait
cmp
pop
por
test
out
aam
mov
loopne
(bad)
sub
push
ret
jae
cmp
stos
loope
add
pop
sbb
fs
and
adc
sbb
jbe
add
div
shl
sub
dec
jbe
and
pop
(bad)
mov
in
inc
stos
ror
jns
push
fbstp
adc
cmps
fs
xchg
pop
scas
ret
out
push
sub
(bad)
les
xor
mov
mov
push
sbb
scas
loop
push
fs
mov
shr
lock
inc
ret
das
repnz
push
push
jmp
sub
and
jmp
xor
sub
in
enter
outs
xchg
das
adc
pop
sbb
dec
add
dec
xchg
cld
cmp
leave
jl
cmp
xor
dec
(bad)
jb
xchg
mov
push
or
inc
push
cmps
push
and
(bad)
and
shl
call
pop
pop
imul
pusha
push
aas
mov
xchg
aas
fcom
ds
or
mov
pop
mov
retf
xlat
xor
and
loopne
out
xchg
cmc
jge
xchg
add
dec
enter
stc
mov
mov
not
push
into
mov
test
or
sub
add
push
das
sahf
out
jae
sbb
dec
push
dec
dec
fwait
iret
in
nop
addr16
mov
rcl
xchg
cmp
imul
and
mov
cmc
test
jecxz
mov
ins
cmp
push
ins
and
fldenv
jnp
adc
mov
jmp
popa
popa
mov
jg
imul
or
stos
pop
xor
std
inc
mov
mov
pop
xchg
or
mov
arpl
sbb
sahf
adc
mov
mov
pop
loop
iret
test
and
pop
adc
xlat
push
mov
pop
dec
mov
sub
or
or
cdq
lods
mov
cmp
addr16
mov
mov
cmp
loop
push
pushf
out
lods
in
push
xchg
ins
inc
arpl
jns
inc
into
fmul
shr
sub
fild
cmps
ds
jb
or
xchg
mov
xchg
adc
xchg
pop
inc
shl
adc
aaa
pop
inc
imul
shr
push
xchg
and
fdivr
cld
inc
(bad)
arpl
and
jle
mov
jne
stos
xchg
add
inc
push
mov
lahf
mov
or
sub
xchg
sar
mov
xchg
scas
mov
lods
cs
dec
hlt
ins
imul
daa
and
not
jbe
mov
frstor
rol
jo
sbb
and
add
push
scas
lods
nop
mov
aas
cmp
jne
cwde
aad
jg
retf
sbb
and
push
movsx
lock
xor
xor
jecxz
mov
fucomp
dec
cli
cmp
adc
cmps
mov
push
and
push
xchg
bound
and
inc
in
add
jp
test
and
xor
adc
mov
sub
xchg
gs
mov
and
lea
shl
stc
jmp
(bad)
ss
scas
or
add
mov
jmp
sbb
cs
ss
ins
jecxz
jle
pop
fsub
addr16
pop
xor
mov
and
mov
cmps
test
mov
jmp
mov
pop
fwait
shl
enter
loopne
js
div
clc
out
sar
or
int
cli
pop
fcom
fmul
cmp
inc
xchg
cmps
jmp
dec
dec
sub
add
dec
mov
adc
push
or
not
nop
pop
mov
mov
inc
inc
inc
repnz
mov
lea
and
int3
ins
adc
test
mov
sbb
mov
std
movs
out
pusha
fwait
pop
jns
sbb
push
push
dec
adc
or
es
dec
sbb
shl
test
movs
out
std
sbb
adc
mov
pop
inc
inc
push
out
xchg
jle
aaa
call
xchg
fild
pop
add
xor
lock
and
mov
rcl
mov
dec
ins
data16
popa
add
mov
(bad)
repz
in
and
sahf
(bad)
adc
or
xor
lahf
mov
shl
inc
jae
pop
mov
xchg
mov
push
xchg
mov
and
outs
dec
xchg
repz
fwait
std
push
ss
push
xchg
loopne
push
push
mov
mov
rcl
mov
outs
scas
mov
dec
pop
or
ret
inc
push
mov
dec
inc
mov
inc
mov
lock
sbb
in
add
fs
push
cmp
inc
or
inc
clc
jno
jmp
das
lea
cdq
inc
imul
or
outs
mov
scas
jo
int3
fidiv
shr
(bad)
das
mov
retf
sbb
pop
es
js
or
in
call
jo
setbe
jp
dec
dec
xchg
dec
dec
mov
or
or
fisub
sbb
mov
loopne
mov
aas
daa
sti
dec
es
fcomp
sub
or
pushf
jp
call
fist
mov
fld
outs
ss
test
xor
inc
retf
jae
shl
stc
push
dec
mov
and
sub
pop
dec
fwait
loopne
sbb
push
pop
pop
dec
call
or
in
std
aas
rol
dec
clc
aas
xor
pop
push
mov
cli
sub
into
jle
mov
mov
inc
mov
inc
idiv
scas
int3
shl
rcl
aad
cmp
mov
inc
outs
mov
jp
das
xor
mov
pop
jl
(bad)
jae
and
fsubr
out
clc
mov
test
fld
mov
scas
mov
retf
(bad)
in
jbe
int
in
adc
xchg
add
push
cmps
add
xchg
sbb
out
xor
gs
pop
ja
out
xor
cmps
push
hlt
and
clc
cmc
test
jbe
(bad)
fnstenv
leave
lods
sbb
aaa
inc
cmp
mov
sbb
iret
inc
or
push
xor
shr
xor
repnz
push
lods
dec
pop
mov
ja
fidiv
cmp
xchg
jl
and
pop
lea
fwait
loopne
adc
aad
mov
sub
fsubr
fidivr
bound
mov
sbb
lds
aas
jnp
mov
ds
cmp
push
(bad)
mov
sub
out
test
push
inc
cld
xor
add
iret
xor
push
inc
inc
mov
sub
adc
clc
sub
jmp
mov
repnz
lahf
test
mov
sahf
stc
iret
(bad)
cmp
jle
neg
xchg
or
inc
stc
into
cwd
out
or
clc
pushf
or
lods
cmp
push
repz
das
xor
push
pop
add
(bad)
cld
mov
adc
inc
shr
and
pop
in
inc
push
mov
outs
pop
scas
cmp
retf
xor
jae
dec
les
sub
or
adc
movs
leave
push
jnp
out
ret
mov
xor
mov
pop
mov
inc
lds
cmc
mov
pop
xchg
pop
pop
mov
(bad)
dec
(bad)
es
aaa
add
scas
jp
add
movs
jae
xor
and
dec
adc
and
adc
in
test
push
inc
mov
stos
mov
jne
mov
dec
xor
add
sahf
out
xor
out
mov
push
cli
xor
fstp
cmc
dec
mov
jns
popa
add
cli
ja
jmp
es
sub
aaa
or
test
scas
dec
pop
out
idiv
cld
mov
shl
call
out
fnsave
jp
loop
scas
mov
lods
cmp
not
aam
leave
ficom
push
mov
inc
inc
sbb
pop
jle
arpl
jl
xor
cdq
int3
cmc
mov
jns
sahf
scas
or
push
shr
imul
dec
aam
addr16
mov
arpl
inc
jnp
std
sub
retf
in
icebp
push
or
lods
cmps
or
push
int
not
mov
mov
sahf
outs
xor
xchg
mov
dec
sahf
popf
pop
ins
mov
inc
lods
mov
fisttp
call
das
pop
fld
and
fnstenv
mov
(bad)
push
leave
call
je
push
je
jl
stos
imul
stos
aas
jecxz
or
das
and
xchg
jo
fld
ins
mov
pop
mov
pop
xor
jnp
dec
sti
adc
sbb
and
or
fiadd
or
nop
jle
int
pop
aam
cmps
push
in
cmp
sub
dec
test
lock
or
daa
pop
ins
xchg
sbb
push
scas
rcl
retf
mov
retf
lods
jne
das
dec
sub
int3
jp
mov
sbb
adc
inc
add
std
sbb
fild
in
mov
shl
cmp
pop
mov
cs
movs
push
mov
adc
rcl
aam
cmp
sbb
mov
or
mov
fistp
adc
xchg
mov
dec
call
maxps
shl
sub
sub
jge
rcl
hlt
pop
(bad)
and
test
lods
es
or
loopne
loopne
inc
mov
mov
popa
pop
pop
icebp
push
icebp
shr
loope
loop
outs
dec
bswap
fcom
dec
jns
scas
or
and
jl
inc
xchg
movs
call
lock
clc
mov
pushf
enter
lahf
mov
clc
int3
sub
push
loope
inc
sbb
arpl
ins
pusha
pop
cmp
sub
call
imul
dec
retf
aad
and
add
cs
mov
pop
ss
or
sahf
cmp
stos
in
retf
les
sbb
fsubr
shl
stos
sbb
jo
mov
dec
int
cmp
dec
adc
mov
lea
lea
fcom
mov
rol
sub
shl
bound
cld
mov
cli
aad
dec
addr16
and
fmulp
add
je
ins
mov
inc
sar
out
push
ret
scas
jae
xchg
test
les
mov
gs
xor
dec
repz
bswap
xchg
jg
cmp
gs
in
dec
stos
sub
pusha
xchg
mov
mov
cmp
push
dec
add
fwait
xor
jle
fisub
shl
adc
(bad)
cmp
out
in
lods
retf
or
xchg
xchg
test
dec
and
jmp
call
jae
lahf
rcl
fisub
pop
pop
movs
cmp
mov
cmps
std
movs
test
test
inc
mov
js
lods
and
mov
mov
bound
ret
push
push
sub
std
pop
pop
jle
inc
(bad)
je
push
pop
mov
call
ror
adc
mov
hlt
das
imul
in
fsubr
mov
pop
dec
out
cmp
push
cmp
adc
cdq
movs
(bad)
lahf
xchg
aam
or
movs
aad
scas
int3
pop
in
mov
sub
pop
sbb
clc
data16
fisubr
jge
mov
dec
fsub
enter
je
cli
repz
push
inc
mov
and
stc
dec
jmp
xor
adc
cmp
jle
jp
rcr
mov
(bad)
jmp
xor
test
retf
outs
das
jbe
test
jnp
mov
jge
jb
ret
xor
cmps
fild
xchg
xor
mov
mov
xchg
sub
pop
out
sbb
rcl
stos
and
push
pop
sub
movs
or
clc
ret
(bad)
inc
test
pop
cdq
xchg
jns
das
rol
pop
mov
xor
std
scas
push
or
push
push
and
inc
adc
das
into
ja
mov
pop
or
jecxz
pop
push
inc
out
iret
int
jmp
inc
retf
mov
sub
std
ror
and
add
enter
in
lods
sub
lds
sub
inc
mov
pusha
mov
inc
daa
jecxz
or
repz
or
add
mov
adc
lock
inc
xlat
sbb
push
jmp
mov
mov
mov
dec
add
xor
enter
or
adc
(bad)
mov
mov
mov
lds
and
push
push
and
sbb
shr
mov
mov
pop
push
aad
inc
scas
inc
repnz
dec
mov
clc
sbb
sub
xlat
add
dec
fisubr
mov
scas
cdq
test
cmp
sub
xor
jl
repnz
bound
jmp
out
je
ins
dec
mov
inc
cmp
jae
in
int
mov
sbb
lea
xchg
or
xchg
idiv
cdq
in
int3
in
hlt
inc
int
xchg
xor
cs
arpl
mov
in
jo
cmps
das
pop
lea
sub
add
(bad)
imul
pop
loope
mov
pop
cmp
xchg
pop
push
pushf
jg
es
and
adc
adc
push
xor
out
std
push
cmps
mov
cli
bound
lods
stc
fisttp
sar
cmps
sub
jmp
mov
mov
std
push
dec
push
cmp
lds
scas
adc
xor
cmp
dec
movs
iret
push
ret
mov
fst
adc
push
in
sbb
push
push
xor
jae
adc
daa
sbb
mov
sahf
push
fwait
push
push
jno
mov
jb
push
test
enter
call
xor
mov
(bad)
cmp
gs
dec
enter
aam
call
cmp
sub
xor
xor
aas
xchg
test
cmps
(bad)
pushf
seta
addr16
push
and
retf
push
sub
movs
pop
add
ss
mov
push
xor
inc
int
int3
sub
cdq
mov
aas
push
hlt
push
(bad)
pop
cli
mov
fst
and
pop
add
stos
sbb
mov
std
sub
rcr
pop
push
leave
push
lods
lods
clc
and
add
dec
and
or
out
jl
mov
sub
inc
mov
dec
mov
inc
rol
sbb
pop
xlat
mov
test
hlt
mov
das
stos
cmps
aad
std
cmp
leave
fnstsw
cld
cmp
inc
rol
pusha
or
sub
xor
dec
push
mov
dec
lods
fsub
ins
fs
stos
lods
int3
pop
add
adc
test
xor
mov
inc
xor
xchg
adc
or
(bad)
ret
lds
adc
xor
mov
xor
and
push
out
mov
ret
lods
mov
adc
add
fstp
das
mov
imul
lock
mov
lods
pop
pcmpeqb
mov
ins
and
stos
sub
pop
jae
loopne
repnz
(bad)
or
mov
(bad)
fcom
mov
fcomip
bound
shl
addr16
(bad)
fnstsw
inc
inc
dec
and
(bad)
cmp
pusha
pusha
cmp
jno
scas
out
lea
shl
sbb
gs
pop
cmps
adc
add
sub
sub
sbb
mov
sbb
shl
dec
or
fs
pop
stc
push
sbb
cmp
xchg
popf
mov
xchg
outs
or
lds
(bad)
pop
push
out
popa
rcr
jno
and
xchg
mov
test
or
fs
mov
jp
xchg
das
pop
mov
sub
xchg
arpl
and
dec
dec
pop
jb
cmp
in
or
sbb
jg
lock
jecxz
(bad)
jg
ja
inc
push
jae
jge
mov
xor
xchg
fidivr
and
pop
popa
std
retf
sbb
pop
stc
(bad)
jbe
sub
dec
cmp
and
and
ret
dec
dec
in
jbe
push
mov
pop
mov
call
sub
xlat
sti
xchg
jmp
inc
jmp
retf
push
(bad)
fwait
loopne
sbb
dec
mov
cwde
cmp
mov
aam
and
mov
cmp
sbb
in
sub
pop
jb
cmp
lahf
ins
lods
inc
sbb
mov
fnsave
inc
mov
xor
jecxz
inc
dec
sub
pop
mov
xchg
mov
in
loope
retf
fistp
xchg
icebp
retf
mov
aam
cs
jge
out
lahf
cld
mov
cmp
inc
(bad)
stos
retf
mov
adc
imul
and
and
pusha
xchg
pcmpeqb
mov
xor
mov
stc
iret
xchg
mov
aaa
mov
shr
outs
mov
pop
mov
mov
jmp
gs
mov
pop
fild
lahf
push
mul
dec
xor
fnsave
(bad)
daa
int
mov
and
cli
mov
xchg
cmps
shl
add
pop
not
fsubr
jmp
add
or
icebp
lods
retf
xor
mov
xor
les
pop
cmp
dec
pop
sbb
jle
pop
stos
cmp
push
aaa
rol
sub
inc
or
push
xchg
jge
retf
packsswb
mov
jbe
pop
xchg
imul
sbb
out
mov
out
cmc
sbb
pop
stos
aam
inc
fidiv
je
cmps
cmp
jl
push
adc
xchg
inc
cwde
or
shl
mov
mov
jae
ja
cmp
push
mov
mov
dec
sub
scas
shl
cmp
pop
jg
add
jnp
enter
adc
stos
fldenv
test
and
cmps
add
mov
call
dec
rcl
pop
arpl
mov
test
cmp
movs
fidiv
stc
add
ror
je
push
femms
jmp
push
pop
sub
cmp
outs
sub
shl
or
cmp
mov
es
mov
stos
leave
test
gs
and
jmp
sar
aam
sub
aad
cmps
xor
jns
pop
sub
dec
out
xor
rcl
dec
dec
mov
(bad)
je
ja
xchg
mov
(bad)
lahf
mov
add
or
dec
push
aad
fild
ror
mov
sbb
fdiv
push
outs
or
fwait
dec
lea
(bad)
pop
(bad)
stos
retf
xchg
pop
stc
push
xchg
jl
dec
adc
mov
mov
call
aam
test
sub
call
mov
cmp
xchg
jmp
repnz
jne
or
mov
inc
or
mov
(bad)
test
cld
sbb
push
mov
xchg
and
and
or
test
(bad)
iret
call
xchg
fwait
inc
pop
sub
adc
mov
test
push
out
out
movs
fcom
xchg
push
jns
push
adc
or
in
mov
sbb
int
adc
push
pop
sahf
sub
pop
fwait
fs
(bad)
clc
cmp
movs
add
xor
cmp
push
sar
rcl
ret
xor
scas
test
rol
adc
xchg
push
xchg
sbb
out
jo
mov
imul
inc
inc
nop
mov
jmp
in
mov
xchg
call
bound
and
movs
cld
scas
arpl
xchg
out
daa
(bad)
or
sbb
enter
jmp
pop
shl
mov
scas
(bad)
pop
and
(bad)
ds
mov
ja
push
jg
jae
mov
jg
daa
inc
sbb
sbb
scas
les
jge
(bad)
pop
jmp
push
(bad)
lods
mov
jmp
retf
sbb
out
les
sub
ins
pop
(bad)
int3
push
rol
inc
mov
cmp
cmps
in
stos
movs
cmp
push
retf
dec
cmp
sbb
into
xor
mov
rcr
and
jns
call
arpl
push
mov
sbb
inc
xchg
pop
cmp
mov
add
mov
add
jmp
jecxz
into
cwde
push
cdq
push
popa
jmp
push
jne
jl
or
add
and
arpl
pop
daa
xlat
pushf
out
sbb
cmp
pop
out
hlt
push
das
lds
dec
popf
jae
js
bound
push
add
(bad)
dec
push
xchg
and
mov
adc
jle
imul
sub
jle
inc
jg
sub
push
jg
xchg
mov
xchg
stc
push
or
pop
sub
loopne
or
movs
or
loope
ja
daa
test
js
inc
adc
inc
sbb
pop
es
mov
pop
cdq
js
repnz
test
mov
xchg
movs
fist
lahf
or
es
mov
lds
add
ins
pusha
mov
es
(bad)
cmps
cmps
and
data16
ins
cmc
ins
push
stc
jae
mov
inc
xor
pop
leave
mov
mov
inc
push
std
daa
arpl
loop
dec
push
addr16
dec
test
jge
int3
clc
call
leave
adc
mov
jecxz
ret
outs
inc
test
ja
or
or
mov
mov
cmp
bound
movzx
push
cmp
ror
sbb
fdivr
or
and
out
mov
pop
aam
ins
inc
js
mov
push
in
retf
stos
fistp
in
pushf
inc
jnp
pushf
pop
and
push
xor
xchg
pop
gs
scas
popa
push
pop
std
test
add
push
cmc
imul
sub
ja
dec
and
shl
es
or
add
dec
xor
xchg
daa
sub
pushf
fidiv
sub
iret
imul
in
mov
sahf
mov
add
push
adc
and
test
retfw
pop
dec
push
test
repz
mov
push
dec
sub
and
and
call
arpl
pop
push
enter
sbb
pop
jg
pop
neg
cli
rol
inc
xor
test
call
inc
dec
stos
in
jne
or
ins
inc
movs
lods
mov
movs
pusha
pop
(bad)
into
ins
lock
xchg
icebp
mov
cdq
test
inc
jg
dec
cmp
push
jo
out
ins
mov
fnstcw
dec
mov
add
loop
cmp
ins
aam
fs
call
adc
les
dec
call
add
pop
ins
add
add
pushf
mov
loopne
fimul
mov
add
cmovnp
loop
xor
ror
push
inc
jl
sbb
or
cdq
nop
leave
sub
enter
mov
shl
rcl
mov
mov
pop
jae
imul
mov
mov
addr16
imul
lea
xchg
fs
sub
mov
fucomi
mov
retf
jl
fsubr
outs
adc
pop
push
add
psrlw
(bad)
jbe
inc
jae
sbb
call
pusha
pop
push
pop
xchg
adc
call
ds
push
out
lahf
(bad)
int
rol
sar
cmp
sahf
jno
adc
xchg
clc
jmp
add
jne
test
mov
jmp
jo
clc
lea
shl
data16
ins
sub
push
ret
shl
cs
inc
jg
push
(bad)
out
adc
push
call
aas
cmp
push
jl
sahf
movs
aad
inc
jne
mov
ja
imul
mov
adc
icebp
les
(bad)
fisttp
dec
loop
es
xchg
push
pop
stc
fidivr
inc
mov
cmp
lahf
vmovdqu
stos
cmps
pusha
shl
xchg
(bad)
pop
ret
or
mov
push
cmp
rol
inc
mov
jo
xchg
jnp
mov
push
test
retf
out
jnp
pop
stc
dec
test
pop
push
sbb
div
cdq
mov
pop
sbb
(bad)
sbb
adc
cmp
pop
inc
push
push
mul
adc
dec
and
jp
jle
ss
aad
(bad)
ror
inc
mov
pop
push
inc
and
jmp
pop
das
cld
pop
and
xor
adc
addr16
add
push
jg
retf
cmps
xor
inc
in
cwde
das
(bad)
outs
pop
jl
call
pop
shr
loope
push
or
fst
xor
jns
jl
ret
mov
imul
mov
mov
dec
(bad)
aas
inc
pop
pop
js
xchg
add
jmp
sbb
fist
fimul
add
jmp
dec
fidiv
pop
or
scas
outs
cmp
push
push
idiv
into
repz
fs
xor
cmp
in
dec
mov
or
lahf
arpl
sbb
aaa
push
out
sbb
leave
stos
cmps
mov
retf
inc
jo
rol
pop
scas
jle
jp
hlt
fst
push
sub
outs
mov
call
outs
dec
popa
push
jno
loope
jp
shl
jmp
dec
(bad)
jmp
jns
outs
push
dec
xlat
push
aas
call
(bad)
mov
and
xor
out
(bad)
and
mov
hlt
imul
pop
dec
cmc
push
loope
mov
pop
inc
imul
jp
xchg
xlat
out
add
stos
push
clc
pop
mov
frstor
shl
(bad)
imul
inc
out
int
aas
(bad)
push
xor
xchg
cwde
inc
xchg
repz
in
xchg
sub
cmp
div
iret
mov
jmp
cli
dec
inc
or
faddp
jp
jb
aad
int
xor
aas
in
inc
(bad)
icebp
push
or
div
dec
push
mov
mov
xchg
aas
out
leave
xchg
inc
dec
pop
cs
sbb
push
pop
rol
mov
mov
jo
cli
or
or
outs
into
lea
ret
icebp
xchg
cmp
fwait
adc
out
out
push
test
and
scas
cli
sbb
rcl
mov
mov
or
cli
aaa
xchg
or
xchg
daa
fcmovnb
fdivr
sti
ror
mov
inc
mov
mov
lock
fldcw
aaa
xchg
jp
adc
xchg
aam
cld
jecxz
(bad)
shl
mov
div
sahf
add
pop
xlat
out
pop
adc
loop
pop
add
push
pop
inc
cmps
fist
std
daa
sub
sahf
push
bound
je
ins
and
std
hlt
xchg
dec
iret
jmp
mov
nop
je
adc
ins
mov
fnstsw
ja
mov
in
std
push
lods
jne
loope
cld
not
mov
dec
jge
jbe
in
xchg
cmc
xchg
push
sahf
xor
fistp
aas
scas
retf
jge
push
adc
arpl
test
call
adc
js
ret
adc
rol
stc
retf
fisttp
jl
rol
jecxz
dec
cmp
addr16
fsub
push
arpl
retf
dec
shl
rol
add
jmp
jge
stc
in
xchg
and
push
and
jbe
adc
mov
(bad)
(bad)
ja
mov
iret
shl
test
and
mov
and
movs
bound
repnz
add
inc
icebp
sbb
imul
mov
cmp
sti
icebp
mov
inc
mov
xchg
cmps
and
dec
adc
outs
adc
sub
addr16
mov
and
ja
inc
test
rol
cmp
dec
imul
sbb
cmp
outs
out
push
(bad)
mov
repz
fidiv
dec
lods
int
pop
push
add
mov
bound
adc
sti
les
icebp
popf
repnz
fwait
or
jg
jns
cdq
xor
push
jnp
pushf
dec
jle
mov
sysexit
add
mov
mov
xor
dec
(bad)
(bad)
iret
xor
xchg
mov
inc
push
div
aad
loope
data16
push
cmps
lods
out
rol
cmp
pop
mov
mov
or
imul
xor
mov
cld
lahf
push
test
and
jnp
sub
mov
cli
test
mov
rol
fstp
and
mov
and
jmp
ins
daa
scas
pop
iret
popa
push
(bad)
mov
inc
dec
dec
popf
inc
fisttp
lods
xor
dec
addr16
in
xchg
(bad)
or
mov
aad
cmps
gs
movs
inc
sbb
xchg
add
mov
fld
icebp
popf
movs
in
lea
jo
and
sbb
mov
out
test
inc
xchg
call
call
jp
sbb
pop
dec
jnp
xor
(bad)
push
xchg
test
push
lds
pop
nop
mov
mov
js
(bad)
xchg
int3
fs
dec
xor
xor
mov
add
enter
pop
sub
dec
xlat
pop
jmp
xchg
push
or
jecxz
jg
mov
push
gs
movs
fisttp
enter
push
mov
call
scas
push
or
int
inc
je
mov
xor
std
inc
add
or
mov
or
inc
movs
stos
or
add
xchg
push
and
pop
in
sub
movs
dec
fst
jp
inc
and
jb
pusha
xchg
push
mov
xchg
fimul
inc
sbb
inc
lock
jae
sbb
sbb
jmp
les
pop
mov
ror
jno
fnstsw
fs
(bad)
cmp
mov
mov
sbb
xchg
frstor
push
jne
pop
xchg
add
pop
xor
jo
xchg
shl
push
leave
mov
push
push
in
jne
test
inc
(bad)
lds
jmp
xor
pop
jg
(bad)
push
xchg
xchg
js
jmp
lds
adc
sbb
fstp
jb
out
stos
hlt
fwait
xchg
pop
jge
and
repnz
sbb
xchg
dec
cwde
dec
(bad)
push
clc
push
sub
nop
add
and
icebp
inc
push
je
push
popf
(bad)
mov
dec
imul
mov
ret
sub
push
xchg
xchg
or
repnz
dec
clc
jl
xor
inc
ret
outs
aad
inc
jnp
jle
test
sbb
adc
mov
and
xchg
sbb
push
popa
add
xor
aad
push
xor
loop
es
mov
add
pop
pushf
jnp
jns
fidivr
lock
mov
adc
int3
jbe
cmp
fcom
push
(bad)
xchg
mov
inc
add
pushf
sar
push
jns
call
(bad)
jns
cmp
out
mov
fisub
jnp
sub
xchg
das
sub
cmc
fidivr
pop
xor
add
or
or
sbb
adc
jns
sbb
rcr
inc
movs
dec
fidiv
adc
xor
imul
loop
test
inc
les
std
sub
xor
(bad)
into
out
mov
stc
mov
xor
fimul
jne
pop
or
inc
xchg
or
(bad)
ins
xchg
rcl
lods
adc
adc
sti
jmp
arpl
or
push
and
(bad)
jmp
xor
cmp
loopne
sbb
shl
aad
xchg
stos
add
xor
mov
mov
leave
icebp
scas
movs
daa
sbb
or
hlt
pop
(bad)
bound
cmp
push
daa
dec
xchg
cmp
es
bt
test
(bad)
mov
das
leave
and
jns
movs
mov
push
mov
pushf
je
jmp
scas
cmovno
mov
adc
pop
clc
outs
out
xor
sub
sub
push
repz
inc
xchg
loope
sbb
xchg
(bad)
jp
jge
dec
rcr
arpl
addr16
xchg
jle
xchg
in
xor
xchg
cdq
adc
mov
je
sbb
xchg
pop
enter
sub
es
test
and
aas
jecxz
scas
jmp
inc
fs
xor
mov
adc
int3
stc
rep
and
(bad)
pushf
arpl
adc
in
and
into
stc
lea
aam
mov
mov
mov
addr16
push
xor
into
in
xchg
(bad)
in
out
iret
jl
jns
pop
setle
push
dec
xchg
adc
(bad)
rcr
jg
pop
pop
int
mov
add
xor
aad
arpl
fwait
iret
in
imul
icebp
mov
pop
repz
jge
inc
jae
arpl
dec
jge
jp
pushf
mov
pop
data16
pop
mov
add
ret
test
jno
adc
cmp
ret
retf
jmp
rcl
jmp
push
jo
dec
adc
adc
dec
or
not
retw
xor
shl
dec
mov
pop
sbb
mov
xchg
xchg
fucom
ficom
(bad)
daa
lods
enter
shl
(bad)
mov
fiadd
adc
pop
sbb
fdiv
jl
std
outs
jp
ret
leave
data16
iret
call
or
ret
jmp
mov
dec
xchg
fwait
mov
daa
pop
jnp
mov
call
add
jp
lods
in
jnp
inc
xchg
data16
xchg
sbb
in
mov
jno
or
or
pop
xchg
out
inc
retf
idiv
cmps
cmps
lock
or
mov
lods
push
iret
cli
xor
cli
in
jo
mov
cwde
jmp
xchg
arpl
sub
ror
(bad)
nop
imul
push
push
jne
inc
jnp
pop
cmps
cli
mov
dec
sbb
gs
test
dec
scas
and
fwait
test
(bad)
jae
dec
mov
(bad)
loope
sub
and
add
popa
int
hlt
std
mov
inc
shr
cmps
push
repnz
push
or
scas
cli
inc
pop
mov
add
in
jbe
je
ret
xchg
pop
xor
sub
sbb
(bad)
push
fist
sahf
fmul
sbb
aad
jo
int
loope
xchg
out
ds
push
cmp
jmp
and
pop
iret
mov
sbb
jmp
loop
mov
adc
in
add
mov
cli
adc
fsubr
imul
push
sub
repnz
fcomp
lods
or
jno
push
mov
mov
mov
jo
sub
sub
push
xor
cmc
fs
gs
mov
mov
in
test
call
add
xor
inc
sub
cmp
push
mov
out
pop
adc
sub
jle
outs
scas
xchg
adc
jle
or
mov
or
pop
cmp
ds
mov
dec
pusha
cmp
dec
xor
pop
in
ret
mov
add
mov
mov
add
dec
mov
movs
and
push
mov
mov
stos
loope
repz
push
cmp
dec
adc
outs
lods
or
pminsw
imul
cmps
fisubr
stc
dec
outs
ins
lahf
xor
popf
adc
cmps
test
sub
out
cmps
cmc
lea
lea
cdq
push
(bad)
push
cli
call
stc
jno
xchg
adc
xor
xchg
out
dec
scas
pop
pop
inc
stos
call
repz
jo
std
cmp
aaa
dec
iret
neg
adc
ins
stos
into
fsubrp
scas
cmp
in
mov
and
push
inc
sub
sbb
ds
imul
inc
ja
mov
dec
jmp
addr16
and
push
xchg
icebp
out
iret
ret
mov
sbb
sub
push
mov
fnsave
fucomp
sbb
icebp
call
sub
int3
and
fsub
jo
mov
push
xor
out
test
jo
nop
jp
mov
push
(bad)
out
dec
inc
rep
in
ficomp
or
adc
jmp
dec
fnstcw
jmp
mov
sbb
je
nop
mov
daa
jmp
repz
cdq
loop
pop
sbb
inc
and
or
push
in
sbb
out
jmp
outs
pop
inc
sbb
xchg
and
imul
fdiv
(bad)
jnp
inc
mov
popa
inc
mov
mov
xchg
ins
mov
mov
add
inc
pop
hlt
push
mov
ja
(bad)
sbb
dec
clc
repz
dec
pop
dec
fldenv
pop
and
inc
add
push
jmp
stos
mov
fstp
cdq
test
adc
out
push
mov
outs
(bad)
leave
arpl
repz
test
cmps
mov
push
mov
jbe
hlt
stos
jg
call
mov
xchg
ss
jg
into
dec
inc
cmp
jle
mov
pop
push
pop
es
sub
mov
sub
mov
fld
(bad)
push
ja
sub
xchg
xchg
pusha
retf
add
xchg
retf
jmp
inc
sub
and
cmc
jecxz
mov
xchg
cmp
call
mov
add
popf
sbb
sbb
daa
mov
sub
dec
outs
std
lea
push
push
fist
arpl
movs
sub
push
ja
jnp
jae
sbb
aam
push
dec
jmp
ret
add
xlat
inc
push
mov
xor
cmc
or
cmp
iret
sub
gs
push
mov
xchg
sar
and
das
push
shrd
cmp
mov
inc
sbb
mov
fisttp
stos
and
sbb
inc
push
jl
movs
inc
xchg
js
repz
mov
inc
dec
cdq
xchg
loopne
dec
sub
mov
or
arpl
sbb
push
jl
sbb
sub
hlt
(bad)
sar
hlt
jnp
jmp
xor
xchg
or
mov
shl
(bad)
in
sub
ds
inc
rcl
js
cmp
stos
add
xchg
jne
lock
pop
leave
cmp
(bad)
call
dec
test
test
pushf
pop
mov
mov
push
shr
jae
push
shl
mov
fbstp
pop
jmp
or
jge
adc
xchg
jae
(bad)
cld
add
xor
fwait
or
xchg
adc
ret
xchg
mov
in
sbb
xchg
sar
mov
repz
sti
jmp
(bad)
add
jp
pop
cwde
sbb
jmp
and
xchg
or
rol
sti
in
dec
mov
sbb
sbb
lock
add
adc
js
test
arpl
scas
gs
mov
dec
adc
sub
aam
xor
aaa
xchg
xchg
into
push
inc
rol
lock
test
cmp
pop
inc
push
cmp
rcl
mov
test
(bad)
ror
lahf
jns
xchg
sbb
repz
pop
or
push
xchg
in
fadd
jns
mov
sub
jg
outs
int
adc
sti
call
xchg
(bad)
cmp
call
mov
pop
jg
sbb
fnsave
out
mov
push
xlat
push
pusha
ret
add
jno
or
sbb
sub
lods
mov
mov
ja
inc
cmp
sbb
or
lea
sub
or
mov
push
mov
pxor
sar
fwait
lods
jb
add
dec
jle
inc
xchg
les
arpl
shl
cmc
cld
outs
call
mov
scas
das
rcl
sbb
xor
sbb
mov
xor
jmp
lahf
das
daa
lea
sbb
mov
mov
pusha
pusha
sbb
aad
mov
jle
enter
in
sbb
dec
inc
mov
xchg
or
fistp
shl
pop
pop
into
jnp
xchg
cli
pop
add
sti
jmp
aad
xchg
das
xor
scas
out
xor
or
sbb
add
dec
fimul
es
fld
and
loope
fsub
cld
sbb
cmp
ror
js
pop
mov
ret
int
or
repnz
sub
shl
lahf
aad
fwait
jo
loop
out
inc
add
push
hlt
pop
addr16
push
fild
jl
add
pushf
adc
sbb
cmp
jno
inc
shl
lds
and
lahf
idiv
xor
adc
pop
jne
data16
ss
sbb
mov
sbb
mov
add
shl
retf
xor
mov
dec
jb
mov
clc
xchg
xchg
adc
fiadd
(bad)
sbb
push
aad
pusha
call
in
ret
adc
fnstsw
push
inc
outs
lods
mov
push
ret
test
stc
or
jae
xlat
lods
fst
xchg
push
jp
in
add
sbb
cmps
mov
inc
(bad)
(bad)
loopne
rcl
or
rcl
dec
mov
push
pop
call
jno
pop
fisub
cmps
adc
xchg
pop
movs
dec
shl
mov
adc
ins
mov
and
mov
rcl
mov
push
xlat
cmp
loope
and
push
cmps
inc
out
mov
mov
hlt
movq
sbb
jns
sbb
lahf
lds
cmp
adc
jmp
sbb
scas
les
push
leave
inc
test
and
mov
scas
sub
enter
dec
cli
fcmovb
imul
push
es
fild
or
mov
rcl
xor
push
loope
pop
hlt
jecxz
std
cld
pop
(bad)
fsubr
jmp
test
cmp
into
out
xchg
fimul
pop
or
sbb
scas
mov
xor
xchg
cmp
push
retf
sahf
popa
mov
push
xchg
repnz
(bad)
lock
xchg
dec
xchg
sub
xchg
sbb
into
inc
mov
sahf
(bad)
nop
mov
xchg
mov
dec
jno
stc
pop
adc
or
mov
icebp
sahf
pop
mov
sbb
xlat
or
and
(bad)
clc
xchg
ja
scas
xor
in
or
jo
(bad)
xchg
popa
aad
sbb
sbb
jle
mov
mov
cli
mov
fldcw
fsub
dec
aad
add
shl
jp
or
shl
test
pop
dec
sbb
invd
ins
(bad)
mov
pop
mov
or
scas
jb
call
mov
dec
xchg
daa
push
inc
cmp
push
lds
adc
int
xor
(bad)
pop
out
inc
add
xor
fild
xor
xchg
cmp
(bad)
repz
popf
outs
mov
daa
cld
xchg
jmp
aam
xchg
stos
nop
aaa
call
popf
ins
mov
pop
pop
pop
xor
xchg
out
xchg
imul
cdq
pop
adc
and
sbb
mov
sub
push
mov
and
lods
or
or
int3
sti
push
mov
add
cmp
loop
mov
fisttp
pop
dec
sbb
cli
push
add
call
fstp
mov
xchg
inc
xlat
test
push
das
out
lods
xor
mov
inc
fdivr
fwait
outs
push
dec
xor
inc
jo
mov
and
adc
daa
and
sub
sbb
mov
jp
nop
ror
shl
adc
test
stos
test
xchg
cdq
(bad)
sahf
xchg
fisttp
mov
mov
pop
cli
mov
xor
push
cli
shld
and
leave
mov
out
in
lock
mov
mov
loope
dec
push
pop
scas
popf
push
xor
mov
lock
cmps
push
imul
push
sub
sar
pop
sbb
arpl
jnp
dec
hlt
mov
cdq
out
test
stos
test
lds
scas
cmps
sbb
les
pop
out
add
add
xchg
out
mov
imul
push
sbb
dec
mov
bound
or
pop
(bad)
push
mov
mov
push
hlt
stc
mov
xchg
adc
mov
movs
lahf
sar
pop
or
xchg
cld
fist
adc
mov
test
shl
add
push
mov
sbb
outs
jmp
and
mov
pop
retf
jmp
jge
fmul
lods
sbb
mov
nop
mov
push
and
or
in
or
repnz
(bad)
mov
push
cmps
cmps
push
in
fld
mov
cmp
mov
sub
cmp
cs
ss
fs
ret
clc
jb
sbb
pop
xchg
jge
adc
cdq
dec
loopne
inc
jno
sub
mov
cmp
pop
add
push
jmp
mov
fdivr
push
push
sbb
pop
adc
mov
inc
and
cmp
movs
push
call
dec
outs
xchg
call
xor
addr16
push
push
mov
dec
imul
or
lds
adc
test
xchg
sub
jp
push
js
popa
mov
ins
sub
jne
fistp
mov
push
xor
jge
addr16
jmp
call
outs
adc
add
xchg
sbb
aad
sub
data16
push
sbb
xor
pop
jbe
or
sub
xchg
arpl
mov
test
pop
cmps
inc
mov
xor
pop
cmp
popf
mov
sbb
jp
sahf
jmp
cmp
cs
arpl
mov
rep
sbb
sub
scas
xchg
or
jp
ds
add
pop
dec
(bad)
cs
adc
sub
sub
(bad)
in
dec
mov
je
das
call
loope
push
daa
fistp
loopne
sti
out
test
(bad)
pushf
adc
aad
push
add
pop
sub
out
aas
and
push
daa
add
inc
or
jo
ins
jl
mov
ss
call
fwait
sbb
xchg
xor
loopne
popf
jle
popf
cwde
dec
sti
scas
out
push
adc
mov
es
inc
dec
aas
les
fmulp
mov
push
cmp
not
xchg
inc
scas
imul
imul
mov
xchg
ret
dec
mov
js
xor
dec
rcr
pop
ficomp
push
call
xchg
into
int3
cld
into
push
sbb
or
push
cld
jg
and
sbb
adc
cmps
addr16
sbb
inc
ds
(bad)
(bad)
in
pop
push
aam
aaa
jns
(bad)
pusha
iret
fld
out
push
ret
cdq
cmp
cwde
fucomi
cmp
lods
out
mov
sar
fisub
(bad)
nop
mov
sub
lahf
xchg
and
movs
jne
shr
cmps
imul
sub
pushf
mov
xchg
xchg
push
pop
cmps
in
arpl
pop
stos
in
test
aaa
aam
addr16
loopne
push
adc
push
jmp
sbb
dec
jb
cwde
xor
cmp
lods
sbb
sti
lods
xor
shl
mov
fwait
bound
lahf
jno
add
dec
push
mov
dec
xchg
pop
and
pop
xchg
add
mov
pop
ret
rol
(bad)
jmp
hlt
stc
pop
inc
mov
stc
cs
adc
das
inc
pop
push
shl
sub
mov
and
mov
adc
add
push
jp
sahf
call
out
and
outs
xor
sahf
pusha
lds
add
sub
xchg
add
mov
or
enter
adc
inc
xchg
jge
mov
dec
cmps
and
popa
or
shr
movs
cwde
cld
test
mov
sbb
(bad)
jg
outs
or
shl
(bad)
out
pushf
daa
lock
sbb
mov
mov
repnz
add
hlt
fadd
imul
cmps
cmc
mov
sbb
loopne
jo
out
push
xor
mov
jmp
stos
loop
mov
or
sar
adc
retf
and
lods
mov
mov
rcl
std
(bad)
hlt
out
cwde
popa
inc
jno
push
push
(bad)
adc
aam
stc
cwde
inc
sub
stos
test
int
sar
ficomp
sbb
push
lods
sbb
add
sub
dec
adc
adc
and
sbb
into
push
inc
lea
or
cwde
add
mov
call
shl
test
add
inc
cmps
xor
sar
or
int3
into
cld
scas
lds
sar
push
mov
add
sub
add
jbe
test
sbb
add
add
adc
xor
and
(bad)
dec
rcl
xor
and
xor
das
scas
push
out
dec
adc
and
dec
mov
push
fbstp
push
sub
out
outs
jl
(bad)
and
mov
hlt
jnp
fs
jecxz
pusha
inc
(bad)
arpl
mov
adc
or
xor
xchg
push
mov
repnz
xor
dec
and
icebp
push
jmp
dec
push
aas
pop
aad
xchg
mov
inc
or
jnp
pop
cmp
call
mov
lock
push
xchg
sub
shl
(bad)
xchg
jno
pop
dec
mov
jp
test
mov
mov
push
(bad)
jecxz
lods
mov
sub
push
mov
fiadd
dec
les
pop
in
adc
fs
test
rol
gs
dec
push
xchg
or
and
ffreep
sahf
push
jp
and
jmp
dec
cmp
lahf
push
int3
rcr
push
pop
pop
jbe
cs
pop
aad
sar
daa
add
scas
jnp
retf
enter
adc
jecxz
imul
cmp
push
call
push
shl
(bad)
test
pop
jb
pop
mov
xor
mov
scas
neg
out
inc
das
mov
icebp
inc
hlt
mov
sahf
test
sub
mov
xchg
mov
sub
mov
pop
sar
pop
jg
ror
loope
pop
mov
and
xchg
mov
mov
add
dec
bound
fisub
pop
inc
iret
mov
aam
enter
test
sbb
jnp
push
(bad)
mov
cmp
cmp
add
dec
cwde
ins
in
stos
les
popa
jo
xor
cmps
movs
bound
dec
push
inc
call
mov
sub
mov
xchg
fwait
leave
xor
sub
and
in
push
inc
jno
adc
jne
cmc
inc
cdq
call
push
lods
or
add
pop
sbb
xor
push
jecxz
pop
cs
(bad)
fcom
int
mov
ins
sti
aam
js
jb
imul
or
mov
and
fstp
cs
pop
scas
sub
loope
push
pop
mov
outs
add
xor
lock
sbb
xor
mov
shl
cmps
or
aas
inc
call
xor
xor
mov
dec
div
push
pop
bound
push
add
mov
(bad)
mov
in
push
xchg
test
inc
xchg
adc
xchg
call
push
nop
(bad)
add
push
pop
dec
rcl
mov
movntps
sbb
add
sbb
(bad)
mov
ds
rcr
cmp
ins
aaa
test
cmps
stos
cdq
dec
mov
push
shl
adc
and
ret
addr16
jl
test
xchg
xlat
sub
arpl
dec
adc
jmp
add
and
out
mov
dec
sub
sub
shl
add
dec
aaa
cld
xor
and
jo
call
or
mov
or
test
xor
jns
dec
jecxz
xchg
daa
mov
push
repnz
xchg
ret
in
mov
push
push
push
xor
clc
inc
dec
es
push
lds
(bad)
pushf
add
jg
cmp
mov
mov
lahf
inc
outs
fild
inc
in
fidiv
mov
pushf
sub
in
mov
lea
inc
pusha
adc
cwde
inc
iret
aad
jae
mov
xchg
mov
inc
je
add
je
sub
es
addr16
fisubr
sets
mov
xor
pop
fcom
mov
push
dec
repz
fwait
pop
call
sbb
bound
mov
dec
pop
inc
mov
push
xchg
rcr
xchg
push
cmc
pop
pop
sbb
push
mov
pop
call
out
pop
dec
xchg
push
push
sbb
jns
sub
fstp
pop
mov
dec
(bad)
call
into
adc
inc
into
jmp
mov
retf
test
cmp
aas
xchg
add
dec
popf
stos
imul
and
sub
sub
mov
int3
ins
das
dec
jae
pop
das
jns
ror
sbb
(bad)
shl
pop
xchg
ret
pop
or
mov
loopne
pusha
cmps
or
lods
mov
mov
loope
mov
(bad)
adc
add
mov
xor
mov
jmp
cli
mov
adc
retf
(bad)
loop
jecxz
cmp
loopne
mov
mov
add
push
pop
mov
hlt
loope
loope
dec
xchg
mov
scas
fild
out
jnp
inc
xchg
push
ficom
add
das
ret
int3
(bad)
outs
(bad)
scas
jae
stos
xchg
push
push
repz
cld
les
and
sahf
outs
leave
add
sti
jns
in
retf
sbb
into
dec
pop
ja
fbstp
pop
je
stos
(bad)
add
(bad)
cmp
enter
jecxz
push
mov
std
aam
stc
xchg
xor
fist
rcr
xchg
loop
push
icebp
xor
mov
sub
shl
adc
xor
jmp
cli
je
(bad)
push
ins
stos
push
adc
xor
fwait
(bad)
mov
xor
cmp
idiv
mov
in
fbstp
jnp
jp
aam
ss
leave
test
ds
(bad)
pop
xor
and
xor
out
xor
mov
add
mov
xchg
mov
test
push
dec
pusha
js
aaa
call
shl
add
add
mov
mov
push
imul
mov
fstp
cwde
pusha
mov
aaa
loop
add
aad
repnz
push
xchg
or
outs
sub
(bad)
xchg
aaa
icebp
test
movs
xor
and
out
mov
mov
inc
push
sub
xchg
and
fadd
jo
repz
push
sbb
pop
aam
nop
cmps
nop
cli
mov
mov
sbb
push
inc
pop
sub
jmp
mov
imul
xchg
inc
cli
int
fisubr
sbb
push
movs
into
adc
xchg
sub
outs
mov
jle
push
adc
adc
mov
pop
sbb
pop
fild
pop
int
(bad)
(bad)
push
sub
add
sub
or
fld
loopne
loopne
and
jnp
outs
fisttp
add
fs
or
dec
sbb
les
inc
data16
gs
push
jbe
outs
or
les
hlt
cmp
inc
add
stos
jle
mov
pushf
inc
cwde
xchg
xlat
and
cmp
stos
add
pavgw
and
inc
lea
sahf
lods
scas
mov
mov
mov
jge
ins
pop
xchg
in
jge
daa
loop
xlat
adc
ss
cdq
lods
fstp
test
imul
outs
dec
loopne
jl
xor
and
lods
jbe
out
xchg
ret
and
aaa
xor
das
mov
arpl
fstp
ret
sub
sbb
or
xlat
mov
and
aam
cmp
or
ins
and
aaa
jno
cmp
sahf
iret
lds
mov
add
mov
sti
loope
lods
mov
mov
test
imul
or
es
jge
xchg
pusha
mov
jb
cmps
jg
cmp
inc
mov
popf
mov
xchg
push
pop
nop
jb
dec
test
dec
pop
stos
add
pop
and
add
ret
jmp
std
mov
shl
repz
sbb
inc
retf
fs
dec
mov
hlt
or
cmp
dec
imul
or
sbb
jge
mov
sbb
mov
pop
shl
mov
sbb
dec
ja
jmp
frstor
sbb
pop
xchg
fisubr
sub
popf
cmps
pop
fcomp
pop
jne
nop
pop
add
ins
call
or
enter
jle
popa
loop
push
add
mov
mov
sub
test
jne
cmp
mov
push
pop
int3
mov
sbb
arpl
loopne
pop
sar
call
ja
adc
cmp
inc
fsub
push
test
xchg
in
sub
xor
fidiv
rol
push
repz
dec
retf
out
lahf
leave
fisubr
mov
jp
std
cmps
cmp
stc
jns
xchg
lock
cmp
add
sbb
adc
stos
jmp
aad
(bad)
sbb
and
mov
call
and
shl
je
push
pop
dec
in
fwait
cmp
mov
in
mov
or
icebp
test
(bad)
mov
iret
adc
and
inc
or
jo
pop
ja
xchg
xchg
inc
jns
movs
out
inc
test
fadd
into
sbb
add
popa
inc
push
and
repnz
call
add
scas
cdq
adc
scas
lea
into
xchg
mov
fldenv
ss
ss
test
test
pop
pop
xchg
mov
dec
rcr
mov
mov
adc
clc
jmp
xor
xchg
ss
sbb
call
mov
sub
jecxz
add
leave
xchg
call
adc
xchg
mov
div
or
dec
push
enter
push
push
jmp
pop
cwde
cs
inc
scas
dec
out
mov
imul
xchg
mov
sbb
adc
and
popf
int
inc
(bad)
out
shl
push
xor
cmp
pushw
mov
ficom
aam
movs
xor
ss
jbe
inc
cmps
loop
pop
sahf
pop
push
fild
retf
dec
enter
fcom
sub
arpl
dec
pop
push
jns
outs
mov
add
inc
mov
xchg
nop
xchg
push
addr16
and
loope
mov
mov
test
enter
add
adc
mov
push
rcr
xor
mov
icebp
cmps
inc
fs
xor
in
sbb
push
out
sahf
ins
pop
call
and
cmp
loopne
pop
mov
das
fbld
sub
mov
sbb
enter
test
dec
xchg
sub
cmp
mov
repz
jno
adc
jns
movs
pop
mov
out
out
jg
xor
and
jno
movs
mov
ins
out
dec
adc
aas
outs
loop
cmps
pushf
shr
sub
xor
rcr
add
dec
jae
lea
mov
inc
and
(bad)
js
pop
cmc
mov
jmp
pop
sbb
out
add
pop
jmp
push
outs
aad
mov
enter
pop
pop
jae
sub
das
bound
scas
popf
ror
and
in
mov
adc
dec
xor
sbb
mov
push
icebp
pop
inc
int
push
xor
not
cmp
(bad)
jp
push
cld
jb
mov
mov
stos
pop
shl
stos
iret
push
cmp
inc
mov
out
and
xchg
(bad)
pop
mov
pop
movs
aas
or
fbld
lahf
imul
cmp
mov
fdiv
push
not
adc
test
push
gs
and
stc
dec
movs
pop
xor
push
retf
mov
out
(bad)
clc
xchg
(bad)
outs
mov
or
mov
out
aaa
jmp
sbb
jmp
jne
mov
(bad)
jmp
cmp
aam
push
aam
ficomp
mov
mov
js
sub
sub
enter
loope
sbb
push
xchg
and
add
clc
mov
dec
pushf
adc
mov
or
pop
shr
dec
inc
out
loope
dec
jb
not
jmp
hlt
into
jbe
dec
das
out
mov
add
int3
and
push
or
inc
daa
or
inc
mov
scas
push
jne
mov
push
mov
and
pushf
push
movs
iret
add
jno
xchg
inc
pushf
mov
(bad)
jmp
push
jo
xlat
pop
mov
cmc
mov
push
retf
in
mov
jecxz
cmp
xlat
jmp
int3
xlat
xor
jmp
mov
sub
add
inc
mov
inc
lds
pop
fs
jbe
fimul
std
in
int
sub
pushf
ret
mov
test
push
or
inc
jle
jbe
out
ficomp
(bad)
in
jle
push
jecxz
inc
xor
sbb
inc
jo
push
xchg
ret
jmp
push
mov
add
add
cmc
adc
jo
sub
and
mov
jg
pop
inc
js
cld
rol
pop
fs
push
adc
in
xchg
das
out
aaa
pop
(bad)
popf
lods
loopne
add
pop
push
add
imul
and
addr16
add
push
adc
push
push
js
inc
(bad)
test
cs
adc
mov
pushf
adc
daa
sub
movs
(bad)
popa
inc
in
xlat
je
sbb
adc
inc
es
mov
cmps
and
jp
sbb
cmc
cmc
inc
fistp
jo
iret
lahf
sbb
xor
cmp
dec
xchg
mov
inc
movs
dec
aaa
sar
dec
ret
sbb
es
pop
fnsave
pushf
sbb
cmp
or
and
mov
addr16
call
push
or
pop
inc
cmps
fwait
jmp
daa
adc
pop
jno
es
sbb
mov
and
push
jae
jge
stos
test
dec
test
sub
test
cli
clc
xor
mov
or
dec
jbe
(bad)
clc
jg
cmps
xchg
push
neg
cmc
cmc
lds
movs
add
mov
xchg
adc
xor
cmp
mov
jae
xor
inc
neg
jns
ins
fwait
jl
cmc
add
test
pusha
jo
pop
jle
pop
aaa
add
or
ret
adc
jae
out
xor
sahf
push
(bad)
mov
mov
addr16
shl
push
push
push
xchg
pop
and
rcr
call
pop
stos
dec
lods
push
xchg
mov
fdiv
cmps
adc
mov
xchg
sbb
ret
scas
in
adc
pop
outs
je
gs
bound
imul
xor
stos
jmp
lods
rcr
ror
adc
fmul
mov
xchg
add
cdq
push
sbb
test
dec
adc
add
loope
fwait
gs
mov
out
xchg
fcmovnbe
(bad)
bound
push
xchg
sti
arpl
mov
hlt
cmp
inc
lods
or
add
ret
mov
popa
add
sub
dec
xchg
movs
lahf
cld
ret
nop
popf
mov
popa
lds
lods
rcr
sbb
sub
or
arpl
icebp
imul
jb
lds
ror
mov
or
sbb
dec
retf
call
shl
stc
dec
add
cmp
inc
mov
into
add
and
sub
sbb
loopne
mov
add
cmc
lahf
and
das
xchg
pushf
and
loop
shl
dec
inc
push
mov
mov
xor
push
(bad)
lock
xchg
sub
mov
lahf
mov
jge
cmp
fdiv
push
ds
inc
icebp
sub
std
push
fidiv
ds
pop
jge
or
fxam
ins
cli
test
pop
ins
xchg
pop
out
int
scas
mov
in
cli
bound
js
aad
int3
jo
cmps
mov
and
pop
ins
lods
adc
jp
mov
test
(bad)
sbb
pop
sar
inc
ss
sar
ss
lea
pop
cmp
cmc
out
dec
imul
das
out
push
mov
mov
call
or
lods
pop
jmp
std
js
pop
inc
mov
(bad)
mov
pop
outs
cmp
ja
retf
ret
stos
push
sub
jmp
xchg
popa
jmp
push
dec
test
rol
inc
out
iret
(bad)
or
frstor
dec
pop
outs
cmps
push
fwait
call
test
adc
xor
xor
push
shl
cli
sub
cmps
jbe
inc
mov
test
in
jae
jbe
sub
sbb
dec
mov
test
add
cmp
mov
hlt
mov
retf
xor
shr
cdq
push
xchg
add
lods
inc
mov
or
xor
lahf
in
je
lea
mov
shr
aas
inc
and
pop
(bad)
pop
mov
shr
xor
mov
arpl
jge
push
aam
mov
xchg
pop
mov
jge
xchg
and
sub
push
xor
(bad)
(bad)
out
ins
add
pop
mov
fstp
jge
jns
cmps
jle
cmp
adc
push
xor
pop
ds
and
and
pop
cs
inc
cld
std
sub
jge
enter
xor
fsubp
(bad)
shr
mov
imul
jae
xchg
jmp
in
sti
cmp
and
loopne
sub
pop
add
imul
sbb
mov
xchg
out
fimul
or
dec
daa
lods
fscale
mov
xor
lds
inc
and
and
ficom
xor
jnp
test
mov
stc
stos
sahf
jns
inc
out
mov
scas
push
int
in
xchg
jp
lods
aaa
dec
iret
jge
fsub
adc
push
sbb
xchg
mov
mov
ret
add
ds
adc
jp
das
arpl
and
outs
adc
imul
(bad)
cmps
xor
inc
test
cmp
imul
pop
xor
push
pop
push
dec
stc
mov
cmp
leave
or
aam
dec
(bad)
cmps
icebp
inc
mov
jge
shl
jle
pop
repz
out
fdivr
adc
adc
adc
out
mov
jo
(bad)
xchg
gs
icebp
fld
push
cmp
mov
push
(bad)
repz
in
sub
push
out
push
js
and
inc
mov
(bad)
lods
je
cmp
mov
mov
sbb
sahf
icebp
adc
ins
fnsave
js
mov
jl
int3
sbb
jmp
pop
xchg
mov
out
(bad)
mov
rcl
pusha
mov
push
std
fldcw
fcomi
addr16
pop
sar
iret
mov
mov
push
xchg
pop
xor
cli
mov
jmp
jbe
aad
adc
scas
test
es
movs
or
jmp
adc
scas
fiadd
lock
arpl
sub
jnp
mov
add
imul
push
push
(bad)
jge
add
cmp
and
or
ret
pusha
dec
add
cmps
xchg
in
jbe
scas
repnz
jo
movs
rol
mov
ds
loop
inc
popa
popf
retf
shr
xchg
pop
cs
adc
cld
ins
(bad)
adc
std
pop
retf
and
mov
add
out
mov
mov
xchg
sti
fs
nop
test
stos
mov
enter
dec
pop
outs
xchg
inc
xor
out
adc
xchg
(bad)
sbb
jne
jl
jnp
hlt
or
out
loope
jle
xchg
add
dec
push
sub
pop
inc
sub
das
in
das
push
fisubr
shl
das
mov
ja
sbb
push
fstp
scas
jmp
inc
dec
mov
cmc
mov
inc
clc
sbb
ret
dec
in
test
inc
xchg
fwait
not
fucomp
push
mov
sub
xchg
sub
and
fnstsw
retf
dec
fdiv
mov
adc
xor
(bad)
dec
ret
imul
and
xchg
mov
mov
xchg
push
sbb
jl
out
hlt
mov
fwait
ret
clc
cmp
mov
ret
sbb
add
push
mov
aaa
sbb
push
fyl2xp1
xor
sahf
pop
push
xor
xchg
pusha
bswap
(bad)
out
enter
jb
sti
je
xchg
mov
mov
inc
stc
mov
ficom
loop
sub
cmp
or
movs
rcl
push
bound
xchg
sbb
push
push
int
call
or
in
sbb
cmp
scas
sub
retf
ret
jmp
je
aaa
add
call
add
or
out
or
lahf
dec
mov
mov
push
xlat
(bad)
call
add
add
(bad)
jl
shr
push
push
or
xor
xchg
cdq
fldenv
sub
xchg
xor
mov
bnd
dec
cmps
(bad)
jnp
hlt
and
outs
leave
rol
inc
scas
mov
dec
cmp
jbe
sub
dec
not
outs
(bad)
shl
dec
jmp
adc
xor
ja
lock
xor
fst
sti
dec
mov
or
push
mov
mov
adc
sub
cmps
mov
ins
clc
hlt
in
fmul
sbb
push
out
mov
mov
pop
dec
pop
pop
sbb
aas
bswap
add
mov
mov
cwde
js
jmp
test
shl
xlat
cmp
xchg
popf
mov
popf
add
mov
xor
test
daa
inc
fwait
inc
xchg
cmp
dec
stos
(bad)
push
jmp
jnp
shl
inc
xchg
test
push
test
sbb
xchg
je
icebp
xor
xchg
inc
aad
iret
lds
inc
cmps
inc
mov
scas
sub
mov
enter
xor
popa
push
inc
in
gs
retf
out
mov
jmp
lahf
pop
pop
push
(bad)
loope
pop
adc
es
lock
xor
inc
fbld
cmp
adc
int
jp
pop
and
lods
jge
cmp
in
nop
xchg
sub
cmc
or
adc
dec
je
shl
popf
dec
sbb
lahf
push
call
stos
jg
lods
sti
fdivr
in
ds
data16
and
xor
outs
add
sub
ficom
inc
mov
test
sbb
repz
xchg
mov
cld
xchg
cmc
repz
popa
or
outs
push
inc
xor
(bad)
cs
(bad)
dec
fnstcw
dec
jae
cdq
push
mov
shr
push
into
(bad)
imul
iret
retf
xchg
push
(bad)
jg
xchg
aad
ror
inc
sbb
xor
mov
xchg
cmps
stos
mov
mov
leave
ds
(bad)
ss
in
pop
ins
mov
xor
mov
push
shr
adc
pushf
mov
das
jnp
xchg
push
pop
repz
sbb
into
sbb
scas
adc
and
mov
out
ficomp
pop
cwde
(bad)
mov
push
inc
push
dec
in
in
sub
movs
out
scas
pop
in
xchg
ret
xchg
xchg
push
addr16
jnp
rcr
add
jp
shl
mov
mov
arpl
push
stos
fistp
mov
clc
ret
and
sbb
mov
sub
lods
pop
fild
sti
std
jmp
xchg
add
stos
xor
mov
jl
dec
mov
cmp
rsm
(bad)
sbb
stos
jmp
adc
push
adc
mov
and
mov
pusha
call
xor
(bad)
sub
mov
cmp
adc
cdq
retf
ss
pop
aam
push
imul
mov
push
pop
push
or
push
mov
retf
(bad)
dec
and
in
sbb
xor
push
out
out
repz
andps
sti
call
call
inc
imul
xchg
dec
push
imul
cmp
popa
inc
xor
test
cwde
fstp
std
mov
push
jnp
aaa
lock
jne
and
adc
sub
jnp
sbb
jp
xchg
ja
movs
out
mov
int3
sbb
mov
shl
outs
daa
stos
push
or
push
cmp
or
stc
inc
inc
mov
push
fadd
jnp
outs
(bad)
jmp
mov
inc
pop
pop
cld
movs
ret
pop
adc
mov
jmp
jbe
gs
into
lds
js
or
push
push
pop
arpl
fnsave
test
enter
js
dec
push
cmc
push
loope
test
femms
gs
fist
push
iret
xor
ss
call
mov
xchg
xchg
stos
ja
jecxz
cdq
mov
lds
push
mov
mov
out
inc
xchg
fiadd
pop
(bad)
cmps
inc
sub
cdq
xchg
cs
xchg
sbb
push
fdivr
ins
mul
hlt
jne
adc
and
mov
pop
movs
shr
outs
cs
aam
push
outs
aaa
cli
push
jnp
pop
ins
pop
test
add
xor
mov
test
jo
aam
(bad)
push
adc
loopne
and
idiv
jg
ja
xchg
jb
xchg
popf
stc
in
mov
push
cmp
mul
push
or
cmp
mov
das
aaa
pop
fist
sbb
leave
adc
in
mov
xchg
mov
pop
rol
sub
mov
cmp
xchg
lahf
or
aad
cmp
xor
call
rcr
mov
pushf
sahf
cmps
mov
mov
mov
cmp
mov
adc
pop
and
jp
clc
mov
mov
jle
test
pop
pop
and
rcr
jbe
or
inc
dec
js
jbe
xor
cmp
mov
or
push
xor
fistp
aaa
add
out
cmp
adc
and
dec
or
jnp
clc
cmp
movs
cmp
jecxz
xchg
xchg
inc
mov
lahf
(bad)
sbb
aaa
inc
stos
in
shl
into
sub
pop
popf
dec
and
inc
push
jne
and
sub
pop
dec
xchg
mov
test
cmp
aad
jmp
jecxz
cld
jp
pop
xchg
das
xlat
dec
mov
adc
lds
je
ins
xor
xchg
adc
out
and
xchg
jecxz
inc
repz
or
jmp
add
adc
arpl
mov
adc
lock
cmp
in
and
inc
fcom
lea
add
add
leave
ret
cmp
pop
jno
adc
adc
ffree
xchg
or
fld
lahf
sti
mov
push
lock
mov
xlat
out
or
movs
or
repz
jb
imul
or
aad
lods
push
cmps
pop
dec
push
push
ror
out
adc
xor
cmp
sti
jg
jbe
sar
rdtsc
enter
xchg
rcr
pop
xor
jne
jne
scas
das
jb
jbe
rcr
sub
and
dec
xchg
aad
jae
xchg
pop
or
dec
sub
outs
inc
int3
ret
inc
je
jno
dec
dec
out
dec
pop
push
sbb
retf
lock
cmp
xor
mov
scas
out
pop
mov
inc
shl
adc
scas
imul
out
inc
cmp
jae
xor
mov
mov
dec
(bad)
or
imul
push
sub
lea
fcmovb
fldcw
cmp
cld
jns
ja
test
outs
int
mov
push
shl
inc
ins
js
lea
add
sub
push
int3
out
movs
fst
pop
sahf
aas
dec
cmc
addr16
imul
jne
mov
(bad)
into
push
test
repz
mov
fmul
jo
push
push
or
out
daa
xchg
int3
pop
push
pop
ins
dec
mov
mov
or
sbb
xor
dec
xor
mov
sbb
mov
outs
cmp
cs
sub
inc
xchg
test
sbb
ss
pop
pushf
ds
call
retf
cmps
jnp
(bad)
das
adc
sahf
cmps
push
jp
(bad)
mov
and
pop
push
mov
cmp
xchg
or
mov
or
xchg
add
(bad)
rep
mov
xchg
sub
mov
jg
mov
jae
jge
jae
mov
outs
adc
ret
loopne
scas
lock
or
in
addr16
loopne
and
mov
leave
push
fimul
sub
mov
js
fidiv
mov
test
xchg
repz
test
sub
arpl
xchg
pop
push
cdq
lods
xchg
pop
retf
lahf
inc
popf
mov
add
pop
movs
mov
lds
mov
sbb
jge
adc
xchg
mov
(bad)
loop
xchg
and
cli
mov
mov
push
(bad)
pmaxub
adc
(bad)
test
ror
ja
or
jae
xchg
sub
cld
hlt
pushf
aas
sar
and
mov
lahf
xor
popf
lock
sti
push
bound
dec
jb
xchg
out
inc
and
into
mov
dec
sbb
mov
push
leave
imul
add
xor
sbb
mov
ins
jno
leave
jle
add
fidivr
xlat
idiv
imul
fld
sub
scas
imul
push
and
sub
je
push
cdq
pop
lea
inc
cmps
lds
mov
jecxz
js
mov
xchg
ss
add
inc
mov
sub
mov
into
jl
sub
pusha
fwait
out
js
(bad)
dec
(bad)
jp
xchg
pop
inc
test
mov
out
and
daa
jp
(bad)
sahf
mov
cld
xchg
jg
cmp
(bad)
neg
cmps
dec
fs
push
cmp
cmp
dec
xor
xor
mov
outs
rcr
mov
fcomp
sbb
push
cmp
sub
cmp
mov
test
cld
in
clc
jg
add
adc
xor
jg
daa
sub
xor
sub
in
fsub
xchg
xlat
push
(bad)
cdq
mov
add
ins
aad
lds
xor
sub
fst
adc
cs
push
or
or
push
dec
mov
and
xchg
or
(bad)
sbb
jb
js
ficom
fbld
xor
stos
mov
rdtsc
pop
in
mov
add
inc
fucomp
stos
xchg
dec
data16
pushf
or
xor
fidiv
sbb
push
sar
inc
icebp
sahf
ret
inc
cmp
jecxz
or
mov
js
push
push
imul
imul
sub
jmp
inc
adc
or
add
xchg
icebp
addr16
cmp
call
xchg
add
inc
inc
call
add
xchg
stc
mov
stos
cli
dec
mov
cdq
in
and
sub
xor
jns
into
fdiv
mov
or
mov
and
test
mul
int
or
iret
retf
sbb
mov
(bad)
pop
xor
mov
or
add
(bad)
mov
test
adc
xchg
aaa
push
jg
gs
mov
inc
xchg
or
cmp
ins
lahf
pop
in
push
mov
fwait
inc
in
in
or
mov
test
add
jmp
bound
and
fstp
fdivr
xchg
cs
push
movs
mov
cmp
mov
sbb
jbe
mov
mov
mov
repnz
add
outs
pop
pushf
ret
mov
scas
push
sbb
xor
cmp
pushf
jge
jno
adc
enter
mov
rcr
xchg
push
inc
mov
repnz
jbe
(bad)
cmp
jno
push
mov
mov
inc
xor
ror
inc
retf
sbb
and
fstp
sub
sub
and
pop
(bad)
fmulp
xor
shr
repnz
mov
fild
cmp
mov
pop
add
and
shl
lds
add
fs
sub
sub
test
jmp
xchg
ret
cmp
cld
into
xchg
jo
(bad)
rol
rcr
into
jbe
jbe
mov
out
inc
mov
(bad)
inc
lock
xlat
out
push
xor
inc
movs
push
mov
(bad)
sub
paddq
(bad)
mov
adc
dec
mov
xor
retf
enter
repz
inc
(bad)
cmp
xchg
jo
add
mov
xor
addr16
xchg
sub
dec
add
mov
lahf
dec
arpl
push
hlt
jg
cmp
jno
mov
and
ss
pop
jecxz
mov
sar
std
ret
inc
rol
inc
cmps
pop
inc
mov
aad
cmps
jb
xchg
in
cmp
fcmovu
(bad)
jl
dec
movs
sbb
push
cld
ret
jbe
xchg
out
pop
push
daa
gs
inc
mov
mov
stc
retf
popa
mov
std
pop
push
gs
jmp
aaa
rcl
cmp
jp
in
or
or
cdq
cmps
ja
push
inc
mov
adc
clc
lds
xchg
or
scas
inc
push
xor
leave
sub
cmp
mov
pop
jg
arpl
jbe
xlat
jmp
and
inc
mov
mov
popf
mov
sahf
lock
into
ficom
stos
mov
xchg
fwait
jl
test
cmps
dec
ret
cmc
leave
jmp
cmp
push
cmp
in
loope
imul
ja
cs
cmps
jl
xacquire
sub
inc
dec
push
inc
adc
sahf
sub
mov
(bad)
int3
jg
call
xor
in
in
jg
addr16
cdq
out
mov
mov
xchg
fsubr
pop
(bad)
cmp
ficom
mov
add
mov
loopne
adc
movs
rol
adc
bound
lea
sar
jnp
movs
in
mov
xchg
clc
scas
scas
or
sar
adc
and
(bad)
cmp
retf
fs
fld
enter
adc
mov
add
lea
js
fistp
cld
dec
sar
inc
(bad)
xor
ror
sub
sahf
pop
fiadd
adc
hlt
aad
dec
dec
inc
xor
lock
rol
je
(bad)
fisub
xchg
sbb
mov
jle
push
in
rol
daa
jl
sub
inc
(bad)
ja
ret
cmp
es
xchg
xchg
enter
inc
das
clc
cwde
dec
inc
sub
fmul
test
mov
fcmovne
in
push
mov
sbb
or
ret
frstor
push
sbb
adc
dec
xlat
and
popf
lods
jo
inc
in
add
fucomp
push
test
(bad)
cmps
sub
(bad)
sbb
sbb
aad
call
jno
mov
retf
dec
scas
mov
adc
out
and
jns
xor
add
mov
or
push
pop
je
rol
arpl
popa
rcl
add
jg
jnp
imul
dec
xchg
cmps
in
std
dec
ds
jmp
xor
mov
pop
pop
ror
ss
adc
dec
cmp
lods
rcr
or
shl
add
retf
fmul
jmp
adc
es
mov
outs
push
popf
and
(bad)
call
pop
mov
adc
cmp
mov
or
dec
push
cld
lea
dec
rcl
lahf
push
gs
lds
push
sbb
sub
add
mov
les
pop
sbb
cli
mov
xor
push
ins
pop
mov
mov
dec
fdivp
sti
bound
mov
push
adc
or
fsub
fwait
pop
into
dec
add
(bad)
popf
pop
cmp
push
add
pop
cdq
aas
cli
push
fadd
sbb
ficom
jb
add
or
xchg
aas
sar
push
or
popf
sbb
push
add
(bad)
push
xchg
and
xchg
or
mov
xchg
lods
scas
cs
sbb
jmp
adc
(bad)
out
pop
adc
xor
in
dec
jae
cmp
jg
sbb
out
mov
dec
mov
xchg
push
sub
fs
or
adc
mov
clc
repz
dec
dec
cmp
cmp
les
pop
test
outs
cld
xchg
clc
cdq
mov
ds
dec
imul
test
int
dec
cmp
push
xchg
or
mov
fs
mov
mov
dec
mov
test
aaa
mov
mov
pushf
sbb
gs
test
sub
inc
ret
jmp
push
pop
inc
sbb
dec
lahf
dec
pop
(bad)
cmc
push
in
sub
das
sar
es
xchg
mov
movs
pop
enter
sbb
dec
push
sar
jle
div
sbb
push
loope
add
fstp
aad
test
sbb
jno
lds
int
retf
cmp
xor
adc
xchg
or
and
and
mov
sbb
stos
mov
mov
sbb
mov
cwde
repnz
mov
push
mov
std
out
es
jl
aas
shl
pop
(bad)
loop
mov
gs
push
ret
int
xchg
inc
jg
repz
mov
into
stos
or
jg
push
adc
enter
adc
jmp
inc
or
or
outs
sbb
repnz
out
(bad)
in
mov
mov
sub
inc
pop
xor
retf
jl
mov
clc
pop
xor
sbb
adc
and
push
call
pop
jne
mov
push
mov
sbb
cwde
xchg
jo
push
lahf
and
xchg
ins
popa
push
ins
sbb
sub
aaa
cmp
jbe
(bad)
sub
inc
test
in
jge
push
push
and
mov
out
out
pusha
aad
shl
or
rcr
js
mov
pop
cmp
outs
mov
or
and
or
mov
or
inc
sub
pushf
mov
test
lea
out
cmp
pop
bound
call
cmp
mov
mov
leave
mov
inc
push
adc
cmp
not
add
jbe
or
lock
into
add
push
sub
adc
test
mov
adc
call
popa
test
jge
ret
fbld
cli
mov
and
pop
lahf
(bad)
jl
jo
gs
loope
cmp
lds
cwde
sub
pop
jns
mov
adc
arpl
pushf
aam
into
or
movs
and
inc
inc
jmp
cs
adc
cmps
mov
xor
rcr
jae
mov
fcomp
int3
(bad)
sbb
movs
or
popa
outs
aaa
or
cdq
scas
pushf
adc
fcmovb
outs
jg
push
ret
jecxz
dec
add
lock
sub
pop
and
inc
xor
int3
sbb
sahf
aaa
mov
call
mov
sar
xor
aas
ret
jp
mov
lea
or
sub
cmp
lods
push
outs
push
mov
lods
dec
pushf
popa
iret
mov
dec
out
push
out
nop
nop
mov
stos
cmp
xor
rol
sub
push
cmp
loopne
xchg
(bad)
sahf
adc
fst
inc
loope
mov
mov
adc
add
inc
cmp
(bad)
ins
xchg
call
fsubr
aad
pop
add
mov
cwde
and
and
add
cs
(bad)
pop
xchg
cmps
sar
ss
fimul
xchg
pop
scas
stos
outs
inc
xor
inc
sub
pusha
test
inc
inc
or
push
adc
scas
mov
push
mov
daa
sbb
xchg
push
xor
lods
test
xchg
jecxz
pop
push
mov
xor
(bad)
das
in
outs
mov
cmp
cmp
ins
mov
cli
and
sub
mov
mov
cmc
cmc
sub
fcmovbe
inc
or
inc
mov
sub
sbb
(bad)
repnz
adc
push
inc
inc
push
mov
and
adc
mov
in
push
push
fsub
pop
movs
push
movs
movs
jno
inc
rol
shr
mov
jg
mov
cld
pushf
inc
out
xor
ror
repnz
stc
out
mov
cmc
cmps
and
arpl
sbb
das
inc
mov
jo
test
jmp
adc
fs
ss
dec
xchg
jmp
mov
xor
xlat
ret
cmp
mov
out
imul
fisttp
shl
mov
xor
or
sbb
pop
iret
lock
sub
js
cmps
add
push
mov
out
dec
iret
xchg
mov
mov
(bad)
arpl
fdiv
rol
sub
ret
fcomip
xchg
xor
scas
push
pop
cld
sar
inc
movs
cmp
rcr
fidiv
cmp
dec
inc
(bad)
lods
mov
loope
cmps
shr
xchg
icebp
aas
fisttp
fisttp
test
push
scas
xchg
fstp
pop
bnd
div
push
sahf
cmc
addr16
stos
arpl
xor
lock
dec
and
jns
cmps
sub
jae
xor
pusha
jb
mov
(bad)
call
xchg
mov
mov
(bad)
push
js
int
stos
fidiv
mov
add
lock
fwait
inc
xchg
mov
sub
cld
js
clc
test
mov
inc
icebp
dec
movs
adc
js
mov
adc
mov
repnz
inc
or
int
mov
cmp
cmp
in
test
inc
call
fcmovu
push
and
inc
xchg
jo
mov
xchg
sbb
jge
sbb
ficom
push
sub
cmp
cmp
mov
aam
mov
sub
pop
inc
(bad)
outs
sbb
push
mov
inc
inc
cmc
sub
push
mov
loop
cmp
mov
mov
sub
fcom
dec
je
sbb
into
sub
xor
mov
jno
push
out
fs
std
sub
ficomp
in
sbb
or
test
pop
stos
and
rol
outs
repz
or
outs
mov
add
out
movs
iret
pop
rcl
(bad)
jg
sahf
xchg
jmp
(bad)
out
and
push
sbb
lahf
and
mov
pop
or
sub
xor
dec
popf
fidiv
outs
xor
mov
jge
ret
icebp
jb
out
mov
cmc
loope
cli
mov
or
or
pop
or
sub
ds
scas
pop
call
fsub
(bad)
repnz
ja
mov
add
mov
adc
add
shl
push
sbb
fwait
xchg
mov
pop
fcomi
nop
shl
lods
inc
(bad)
cdq
cmp
jle
(bad)
sub
mov
aam
sub
jmp
pop
xchg
xchg
add
psadbw
stos
in
add
fdiv
mov
sti
jge
jl
imul
(bad)
fsubr
cmp
(bad)
pop
inc
jecxz
xchg
lods
(bad)
push
push
mov
movs
mov
pusha
lds
and
pop
add
add
and
out
push
ficomp
das
jno
and
and
sbb
xor
jp
or
stc
jmp
into
push
daa
pop
sar
inc
loope
pop
inc
dec
push
dec
ja
or
or
adc
sub
lds
pop
or
repnz
push
call
ins
xlat
mov
mov
xchg
js
out
or
xchg
rol
jmp
shl
pushf
ror
inc
push
rcl
cmpxchg
lds
and
lea
mov
or
mov
sahf
xchg
xor
xor
jmp
xor
adc
js
pop
inc
mov
arpl
jmp
dec
mov
mov
inc
jmp
cdq
inc
mov
(bad)
adc
push
mov
into
push
cmp
or
cmp
add
pop
or
sub
sbb
retf
mov
mov
push
loope
movs
call
or
pop
int3
mov
jg
loopne
movs
xchg
xchg
xchg
movs
repz
out
adc
scas
shr
or
push
sub
loope
aas
icebp
inc
jmp
xchg
nop
ins
add
retf
cld
sub
cmp
mov
mov
xchg
mov
mov
mov
add
ds
repnz
arpl
add
lahf
nop
fld
cli
dec
push
jns
mov
into
mov
jae
adc
rcr
mov
jns
xchg
data16
xor
push
xor
adc
mov
dec
(bad)
in
shr
mov
stos
clc
shr
aad
xor
xor
ficom
int3
mov
adc
je
push
outs
pop
or
ret
cmps
mov
les
out
push
xchg
xchg
mov
icebp
dec
xchg
jae
sub
ds
dec
add
fwait
je
xor
xchg
fidivr
(bad)
cli
cmp
cli
mov
scas
and
jnp
cmp
shl
stc
push
push
cmc
shl
leave
adc
sbb
pop
pop
mov
sbb
or
cmp
pop
or
inc
mov
test
cmps
cmp
imul
sbb
pop
push
xchg
and
stos
fwait
jnp
test
mov
cmp
or
push
mov
xor
lock
xchg
lahf
inc
jle
stc
cmps
retf
pop
push
xchg
stc
jne
add
adc
int3
push
xor
paddsw
mov
lock
cmp
imul
in
outs
mov
out
movs
add
xlat
int
mov
leave
or
out
mov
sbb
movsx
sar
mov
sbb
push
shl
inc
push
mov
sbb
sub
xchg
xchg
es
sub
mov
dec
push
pop
jno
mov
test
push
js
push
icebp
jecxz
stos
in
clc
loope
pop
test
inc
jo
cli
sbb
in
add
lahf
dec
mov
aad
dec
mov
adc
mov
jecxz
lds
in
push
aaa
icebp
mov
xor
xor
fs
int
aam
call
aaa
in
sbb
xchg
adc
cmp
push
rcl
cmp
jle
pop
push
ret
fucomip
adc
mov
lods
jmp
test
adc
push
jle
jns
xchg
fwait
cmps
and
sub
repz
mov
mov
sahf
stc
mov
es
out
and
je
jno
mov
pop
cwde
nop
int3
lods
adc
loope
dec
repnz
mov
mov
movs
cmp
jge
pop
ins
fwait
addr16
cmp
dec
inc
and
nop
push
movs
jbe
and
scas
inc
xchg
movs
pand
or
rcl
sub
iret
mov
inc
and
stc
int3
and
(bad)
ds
ins
xor
add
jb
xchg
ss
or
and
mov
mov
sub
outs
push
test
(bad)
xchg
ret
das
out
iret
add
push
jmp
retf
ins
sbb
mov
(bad)
sbb
popa
pop
xchg
(bad)
enter
push
sbb
push
adc
sbb
sub
int3
push
inc
or
or
jle
cmc
push
fninit
inc
leave
jle
sub
call
aas
pop
cmc
or
pop
jg
cmp
jecxz
add
mov
call
imul
pop
jp
int3
sub
lock
dec
out
addr16
sub
mov
mov
fldcw
sbb
dec
in
push
repnz
jge
stos
push
aad
aaa
jge
adc
push
hlt
xchg
add
inc
cmp
inc
pushf
mov
gs
je
cmp
imul
int
mov
jne
(bad)
fnsave
and
fsubr
hlt
mov
les
cmp
scas
sbb
push
push
push
movs
loopne
movs
mov
xchg
dec
jmp
stos
push
ins
in
bound
(bad)
lock
mov
push
sbb
mov
xchg
lock
bound
add
push
or
adc
or
pushf
cs
ficomp
daa
jl
(bad)
cs
sbb
outs
xchg
jle
jmp
stos
rsqrtps
pop
mov
cdq
push
mov
pop
sti
icebp
fild
xchg
adc
adc
mov
rcl
adc
dec
cmp
(bad)
mov
push
cld
popa
mov
mov
ins
mov
xchg
mov
das
push
inc
nop
inc
cmp
mov
(bad)
xchg
or
sbb
mov
fwait
mov
minps
mov
lods
cdq
dec
xchg
inc
sub
and
out
push
imul
inc
xchg
cmc
movs
rcr
pop
jl
jb
inc
mov
push
aaa
aaa
in
push
and
mov
leave
aaa
sbb
xchg
cmp
mov
mov
and
out
lods
pop
js
jp
sub
or
mov
ins
iret
aad
loop
scas
mov
mov
add
mov
jns
data16
push
pop
(bad)
or
cwde
sbb
cmp
les
xchg
mov
pusha
jb
sbb
pop
fs
fcom
mov
sub
cmp
aaa
gs
fstp
nop
push
shl
jnp
and
lds
mov
xor
les
inc
mov
cdq
add
sub
adc
mov
xchg
out
out
cld
fdiv
pop
retf
mov
(bad)
repz
test
cmp
aas
fprem
shl
adc
push
mov
sub
xchg
add
push
add
add
push
mov
rol
mov
pop
je
rol
imul
enter
or
cmp
jne
sub
es
mov
js
mov
(bad)
test
xchg
jl
mov
sub
in
test
inc
repnz
shr
test
fnsave
cmc
push
scas
jo
sub
out
sbb
mov
push
and
sub
xchg
add
dec
sbb
stos
cmp
popa
(bad)
inc
add
bound
stc
cs
and
lds
retf
push
dec
and
push
mov
jecxz
test
js
inc
mov
jmp
cmps
add
pop
sti
inc
in
retf
xor
clc
popf
sub
and
stos
addr16
call
retf
nop
sub
(bad)
stos
or
in
int3
fs
pop
shl
sahf
popf
add
rcr
inc
sbb
pop
ins
inc
dec
cli
movs
lea
aas
iret
repnz
sub
arpl
fcom
cmc
ficomp
sbb
mov
clc
xchg
inc
pushf
(bad)
psubq
lock
mov
lods
lods
out
mov
(bad)
jno
(bad)
jmp
or
pop
sbb
les
inc
fwait
mov
mov
in
loop
sahf
adc
or
jns
ja
ja
or
out
int3
test
dec
idiv
int3
jg
mov
or
add
inc
push
rcl
jo
jnp
mov
inc
call
sub
cwde
push
pop
mov
cwde
xor
lock
xchg
rcr
out
mov
idiv
mov
mov
mov
test
mov
xlat
push
jl
icebp
pop
out
outs
retf
pushf
cwde
push
test
dec
jg
hlt
cmp
dec
jle
jp
ins
ret
mov
or
mov
test
mov
movs
ret
sahf
mov
mov
or
bound
and
xor
add
xchg
adc
xor
push
mov
jae
xor
and
push
mov
or
pop
das
xor
xchg
(bad)
repz
ja
or
sub
push
mov
sbb
cmp
es
jnp
data16
cmp
in
rcr
dec
cdq
push
das
jb
mov
jmp
shl
test
jo
push
xor
push
in
js
inc
call
imul
(bad)
cmp
mov
das
mul
cmc
pusha
sti
mov
jo
sub
mov
(bad)
sbb
fwait
xlat
or
outs
dec
mov
push
sub
stos
push
cld
fsub
xor
sub
xor
fistp
pop
hlt
mov
and
loopne
xchg
sub
xchg
cs
or
stos
stos
push
push
aas
inc
xchg
jmp
mov
fidivr
int3
in
xchg
xor
xor
cli
add
call
cmp
xchg
jp
xor
xor
repnz
lea
sub
imul
stos
xchg
pushf
mov
mov
push
out
and
inc
xchg
jbe
mov
dec
stc
or
fwait
aaa
xchg
xchg
push
mov
sub
xor
shr
cs
or
ins
pop
and
lods
pop
das
mov
cmp
or
and
loope
sbb
jge
fidivr
sub
pop
test
mov
jo
inc
retf
popf
pop
pcmpeqd
rol
cmp
stos
dec
test
push
pop
fdivr
dec
xlat
sbb
add
pop
sar
add
sbb
push
out
mov
pop
push
xor
and
outs
xchg
pushf
pusha
pop
jns
shr
bound
in
and
xor
xchg
and
cmp
cld
push
xchg
adc
add
mov
lds
sub
daa
pop
add
mov
ss
gs
je
arpl
imul
push
dec
adc
cmp
jmp
nop
stos
push
cmps
and
adc
push
sub
xchg
mov
daa
or
xor
inc
(bad)
mov
cmps
fnstcw
je
inc
push
outs
mov
aas
fnstcw
retf
mov
adc
addr16
ror
cmp
mov
pop
inc
cmc
repnz
movs
pop
jg
xchg
mov
add
push
sahf
sub
push
scas
cmp
scas
movs
and
xor
mov
outs
scas
es
rcl
mov
dec
jp
ror
jo
push
cmp
test
jb
(bad)
lahf
test
(bad)
adc
mov
pop
sgdtd
push
aam
mov
push
fs
add
sti
jb
adc
cli
stc
popa
movs
mov
div
test
imul
jp
loope
nop
push
sbb
jbe
add
sbb
push
es
cld
fstp
(bad)
jns
mov
xchg
mov
lds
es
mov
sbb
cld
mov
and
mov
mov
hlt
(bad)
icebp
inc
leave
sub
fwait
aad
xor
dec
sbb
mov
in
xor
pop
lahf
push
push
outs
sbb
vmwrite
jmp
shl
out
pop
ins
inc
(bad)
mov
test
repnz
daa
push
pop
outs
test
sahf
shl
jnp
sub
jge
das
jl
shr
lock
rol
in
jnp
cmp
add
xor
outs
test
push
xlat
lds
jmp
xor
sbb
or
pop
or
mov
or
jae
fdivr
or
add
(bad)
in
scas
mov
sar
or
dec
rol
pop
gs
mov
fild
aam
call
sbb
dec
lods
call
push
jge
bound
ds
cs
dec
es
call
mov
inc
adc
xchg
mov
pop
sub
sbb
mov
cmc
out
call
das
les
push
popf
jne
jmp
push
mov
jmp
mov
xor
aaa
xor
or
push
pop
cmps
sub
das
jle
je
sub
in
sbb
lock
sub
lods
push
out
cmp
mov
or
fsub
fwait
dec
mov
ror
add
cmp
pop
mov
xchg
jb
aas
retf
lods
jb
out
addr16
fcmovb
and
outs
mov
fidiv
int
and
push
dec
dec
fwait
cmps
outs
pop
cld
repnz
test
cmp
push
jmp
jmp
retf
outs
push
lods
add
js
pusha
aad
(bad)
jae
add
sbb
inc
(bad)
std
icebp
inc
ins
mov
ffree
pushf
in
sbb
mov
popf
or
and
shl
daa
cvtps2pd
jmp
retf
mov
fisubr
sub
fisttp
add
ins
xchg
shr
ins
jno
or
adc
mov
adc
or
int
out
stos
ins
mov
inc
sub
or
pushf
cmp
adc
bound
push
pop
dec
mov
outs
out
hlt
call
mov
inc
pop
push
mov
xlat
movs
adc
psrld
pop
sbb
mov
data16
jmp
sub
ds
pop
and
mov
or
cmp
ja
int3
arpl
sub
fadd
(bad)
fs
ja
mov
movs
ins
outs
and
cmp
shrd
leave
gs
xor
xchg
ins
push
push
dec
sar
sbb
mov
xor
(bad)
pop
cwde
sahf
leave
cs
adc
pop
mov
jbe
mov
sti
xchg
pop
jl
push
mov
jne
mov
add
les
add
inc
jb
or
mov
ss
pop
and
sub
inc
jae
mov
mov
in
dec
cmp
cld
xor
add
loop
je
rcl
push
add
add
aam
aam
pop
and
data16
repnz
sub
mov
dec
(bad)
pop
mov
mov
push
out
push
mov
fbstp
jmp
adc
xchg
test
and
sub
out
inc
loopne
jae
jmp
mov
push
mov
js
and
test
sub
or
xor
xor
rcl
out
adc
(bad)
sti
test
jns
xchg
jns
aad
dec
cmps
jae
fstp
push
xchg
std
jl
in
jns
in
sbb
mov
(bad)
mov
inc
adc
sbb
jmp
fcomp
cwde
cmp
sub
jno
and
and
or
mov
ret
ss
jno
adc
pop
dec
mov
lahf
inc
rcr
push
or
pusha
scas
push
fnstenv
gs
dec
cmp
in
and
cmp
loope
cmp
or
or
je
and
inc
mov
mov
mov
jp
xor
inc
jne
int
mov
test
ins
enter
sub
lods
enter
ror
cmps
jle
and
addr16
sbb
sbb
(bad)
cli
mov
leave
aad
pop
cmp
fisttp
loope
loopne
push
hlt
mov
jecxz
out
sbb
xor
push
call
xchg
fidiv
lods
mov
push
push
inc
inc
mov
nop
outs
mov
lock
out
mov
shr
mov
or
das
push
jns
fmul
adc
repnz
int
and
inc
xchg
fbld
inc
fmul
iret
cdq
das
fisttp
mov
cmps
inc
ds
in
inc
pushf
pop
call
data16
rol
iret
jae
sbb
jnp
loop
and
inc
push
outs
fdiv
and
dec
movs
les
xor
pop
push
aaa
test
int3
in
xchg
ss
jbe
xchg
jmp
ins
cmc
adc
pop
sub
aas
scas
xor
inc
popa
popa
mov
jp
xor
mov
xor
dec
jmp
mov
xchg
or
add
gs
ret
std
jge
mov
jle
dec
xchg
and
pop
push
pop
sbb
push
pushf
xchg
jmp
push
movs
cli
sbb
sub
sub
adc
or
and
test
mov
icebp
jb
adc
jae
jmp
jg
gs
in
sub
xchg
enter
fiadd
and
jbe
fcom
jns
stos
push
add
push
jbe
push
cwde
int3
push
mov
retf
bound
dec
ja
mov
mov
leave
and
mov
sti
aam
push
lds
and
pop
clc
adc
jo
mov
add
loop
(bad)
jle
das
int
and
xor
out
jecxz
inc
pop
nop
push
icebp
or
call
dec
cmps
and
dec
mov
je
push
mov
and
arpl
inc
or
adc
inc
retf
test
push
(bad)
stos
adc
lds
push
retf
cli
sub
dec
push
(bad)
sbb
push
pop
in
ret
add
mov
aad
pop
sub
mov
iret
cmp
mov
ror
xchg
mov
jecxz
inc
ins
xor
js
sub
cmps
xor
mov
sbb
sub
sub
inc
or
js
fcomp
data16
(bad)
cli
mov
mov
pop
out
and
ror
xchg
push
cmp
xor
(bad)
xor
pushf
and
xor
and
fldenv
cmc
xchg
test
mov
dec
sti
pop
or
pop
jmp
std
retf
or
adc
sti
(bad)
xor
mov
jno
add
mov
mov
imul
inc
sub
cld
and
les
mov
cmp
addr16
inc
push
and
pop
mov
mov
sbb
ins
mov
jbe
dec
inc
mov
fs
fcmovbe
inc
pop
mov
add
push
test
xchg
es
add
adc
dec
movs
xor
pop
outs
imul
adc
loope
mov
and
or
das
dec
jp
loope
or
icebp
or
mov
or
cvtps2pi
call
retf
push
jne
in
add
inc
imul
adc
push
sub
jmp
jnp
xchg
sar
jmp
es
dec
mov
xchg
hlt
cmp
addr16
ret
imul
loope
mov
retf
push
sbb
sub
rcr
stc
add
and
movs
mov
fst
sti
jmp
retf
and
mov
or
stos
je
out
dec
mov
adc
clc
or
outs
adc
dec
leave
imul
mov
dec
enter
into
ss
cmps
sub
inc
(bad)
out
pop
fwait
mov
mov
cmp
jo
push
(bad)
and
sbb
mov
rol
jno
and
sub
add
xchg
fidivr
sub
push
imul
dec
fs
sbb
mov
jmp
mov
mov
cmp
mov
outs
cdq
sbb
fcmove
sbb
push
out
push
jbe
std
mov
es
mov
push
sti
loope
inc
dec
xchg
fisttp
pop
and
jle
dec
pop
push
mov
out
mov
out
cli
and
out
ret
sbb
lea
(bad)
add
mov
pop
sahf
mov
dec
jecxz
mov
inc
lods
add
test
int3
and
mov
or
mov
sbb
push
sbb
add
lahf
mov
jl
ins
inc
retf
in
adc
and
stc
adc
and
xchg
xor
in
or
fsubr
ret
in
dec
pop
cmp
mov
shl
cmp
add
xor
adc
pop
(bad)
imul
push
xchg
movs
cmps
xor
ds
aaa
sbb
scas
fild
stc
popa
mov
int3
dec
jae
sub
mov
neg
cmps
xchg
dec
fadd
adc
push
imul
pop
and
(bad)
dec
lahf
sub
call
cwde
cmps
xor
mov
fs
popf
dec
mov
push
(bad)
in
std
push
jns
sbb
inc
add
ret
std
or
mov
sbb
inc
inc
inc
(bad)
add
adc
repz
dec
icebp
adc
daa
into
rcl
xchg
test
lahf
call
ja
xor
jnp
cld
add
xlat
std
adc
xor
push
cmps
mov
dec
cli
aaa
mov
sbb
and
or
dec
cmp
add
xor
xchg
cld
pop
data16
mov
sub
rcr
jmp
mov
jmp
jg
gs
dec
adc
js
mov
mov
inc
ins
stc
jecxz
das
sar
enter
mov
adc
cmp
push
ret
arpl
xor
push
mov
push
push
jns
dec
inc
adc
mov
or
push
sar
outs
and
cs
sti
test
sub
or
mov
nop
push
lods
add
jge
jmp
and
push
cmp
jnp
into
imul
adc
daa
adc
fdiv
push
in
dec
pop
(bad)
xchg
pop
(bad)
jae
mov
xchg
xchg
movs
pusha
fs
jge
xor
aas
int3
sar
(bad)
pmuludq
fwait
jno
sar
sub
jmp
mov
jg
lahf
je
dec
xchg
cmp
(bad)
rol
sub
imul
mov
mov
jge
pop
(bad)
int3
fwait
test
mov
jl
sub
and
pushf
add
pop
add
xchg
mov
in
ret
(bad)
lea
test
cmp
xlat
mov
mov
mov
or
icebp
add
pop
cdq
jmp
(bad)
add
enter
ins
cdq
mov
push
xchg
push
pop
cmp
lods
mov
mov
scas
mov
adc
or
dec
push
dec
lods
xchg
je
shl
test
sub
pushf
out
adc
mov
out
fld
cmp
bound
push
mov
cli
cmps
mov
mov
jne
adc
xchg
popa
jnp
imul
add
int3
mov
jmp
and
and
jae
aaa
pop
shr
dec
jmp
out
sub
mov
inc
sbb
lea
cmp
aad
xchg
outs
xor
outs
adc
aad
inc
add
retf
and
sbb
adc
ret
out
stc
test
into
daa
dec
mov
imul
ret
(bad)
stc
nop
add
xor
jb
arpl
xchg
movs
jecxz
(bad)
jmp
xor
lods
lahf
imul
es
icebp
aaa
pushw
ss
inc
fisttp
in
movs
stos
xchg
sub
mov
arpl
jno
push
(bad)
cmp
pop
jmp
in
push
loop
aad
sub
ds
add
inc
jl
dec
fdiv
add
repnz
out
loope
(bad)
xchg
les
imul
lods
push
push
in
mov
test
scas
rcl
adc
xlat
adc
les
bound
inc
test
not
imul
std
clc
pop
retf
sbb
cmps
shl
inc
daa
sti
les
jge
cld
ror
ret
in
sbb
inc
(bad)
sbb
test
mov
aad
(bad)
jmp
jo
cmp
shr
dec
(bad)
dec
jmp
mov
sbb
test
ret
jb
ss
inc
add
in
xor
mov
test
inc
sub
jecxz
jne
pop
mov
pop
xor
cmp
pop
lods
and
dec
or
mov
mov
jecxz
xor
xlat
pop
punpcklwd
dec
mov
jo
(bad)
mov
push
or
push
mov
cld
mov
clc
mov
add
or
pop
add
shl
sti
sbb
mov
sub
add
add
push
test
imul
daa
int
and
lahf
xchg
in
jo
jns
fistp
dec
or
mov
push
jge
rcr
arpl
in
mov
cmc
outs
xchg
push
movs
push
mov
mov
imul
inc
mov
xchg
cmp
mov
daa
aaa
sbb
scas
jp
jo
jae
jae
into
sub
mov
cdq
(bad)
(bad)
aaa
dec
dec
mov
sti
mov
mov
arpl
mov
cmp
sub
mov
fmul
pop
jne
mov
inc
push
or
(bad)
mov
mov
jns
fwait
int
in
push
ds
inc
adc
dec
loop
mov
out
or
push
xchg
je
pop
sub
add
out
cmp
std
popa
cmp
out
xchg
adc
mov
xchg
outs
or
in
ja
fs
jecxz
sub
leave
jno
lea
out
push
test
dec
dec
sub
movs
cmps
jg
sbb
shr
fild
mov
bound
sub
repz
stc
mov
xor
repnz
xchg
ror
add
mov
adc
scas
das
or
(bad)
in
test
mov
out
fld
les
mov
jns
jmp
lea
jno
adc
jns
mov
jmp
xchg
add
mov
jecxz
and
pop
mov
aas
pop
lea
arpl
movs
into
cmp
movs
(bad)
jmp
ds
shl
and
stc
dec
pushf
lock
sti
adc
cli
lods
bound
jle
jae
xchg
in
cmps
int
pop
mov
sub
js
test
jbe
inc
xchg
push
mov
movs
loope
inc
mov
xor
popa
cwde
xchg
test
sub
mov
sub
fsub
xchg
je
xchg
or
xor
cld
mov
and
push
inc
fadd
(bad)
rol
sbb
out
push
test
scas
loopne
mov
xor
test
ret
(bad)
jmp
(bad)
dec
inc
mov
stos
jbe
xor
cmp
cmp
scas
pop
xchg
(bad)
sbb
jge
inc
fisubr
daa
xchg
(bad)
out
mov
jno
cli
aas
lahf
bswap
call
test
je
outs
inc
stos
xor
data16
mov
pop
adc
pop
(bad)
xchg
cmp
sbb
and
or
out
fsub
in
xor
in
dec
mov
add
push
pop
dec
jnp
fnclex
inc
fld
adc
and
mov
lahf
ins
and
inc
leave
loopne
fldcw
rcr
call
push
fdiv
pop
stos
add
int
or
ficomp
(bad)
jge
popf
shl
ins
mov
out
enter
or
fucomp
outs
jecxz
(bad)
mov
mov
push
test
adc
sbb
xor
inc
sbb
ret
jmp
xor
rcr
cdq
ja
aad
and
jecxz
mov
jns
sub
test
mov
ja
popa
push
sub
mov
sbb
xor
pop
cld
and
sbb
sahf
cdq
adc
call
dec
jge
sbb
je
xor
imul
aaa
mov
shr
lock
xchg
mov
add
fsubr
add
mov
loope
daa
int
clc
jbe
loop
mov
pop
mov
and
mov
cmp
stos
push
xor
sbb
mov
retf
lods
mov
fs
xchg
jae
imul
jnp
iret
in
jg
std
dec
inc
retf
gs
and
pop
jecxz
sub
dec
aas
fmul
mov
into
jge
push
dec
push
pmaddwd
jo
enter
adc
sti
scas
mov
cs
cmp
mov
inc
call
push
fcomp
ss
mov
popa
mov
gs
mov
enter
mov
sub
repz
lock
rol
add
aam
sbb
mov
je
sub
mov
data16
mov
loop
jmp
or
cdq
cmp
push
jbe
pop
bound
mov
push
jae
out
fs
pushf
(bad)
fstp
(bad)
mov
rol
cmp
(bad)
clc
jp
sbb
mov
retf
stos
daa
imul
pop
popa
(bad)
push
add
mov
add
cld
leave
fsubr
sub
dec
jae
xchg
and
lea
gs
adc
ja
pop
gs
push
cmp
jno
mov
add
push
and
mov
ss
not
and
pop
repnz
push
test
addr16
fmul
mov
dec
push
adc
cmp
xchg
push
movs
cmp
int
std
mov
arpl
pop
mov
dec
aas
out
push
cmc
push
and
cmp
test
(bad)
nop
imul
dec
test
aad
retf
stos
push
mov
mov
in
mov
mov
add
mov
dec
popf
test
jle
inc
dec
je
pop
jmp
sbb
sub
mov
cs
fisub
sub
stos
mov
jge
dec
or
nop
jle
dec
jns
dec
dec
mov
fisub
es
ds
inc
loop
mov
adc
arpl
add
add
xor
push
jmp
or
pushf
jmp
sub
push
dec
cmp
xchg
dec
dec
rol
sbb
movs
xor
rcr
pop
(bad)
mov
pop
mov
or
fsub
or
or
test
lods
push
cmp
jmp
arpl
into
loope
jo
maskmovq
idiv
and
int3
adc
mov
sub
frstor
ror
(bad)
and
or
jae
pop
pop
cmp
(bad)
shr
sbb
inc
nop
call
sub
ins
cmp
mov
sub
pop
ins
loopne
xchg
gs
adc
sbb
cmc
movs
ja
test
loop
aam
fstp
inc
mov
jl
xchg
ror
mov
fdiv
mov
mov
fiadd
mov
scas
cmc
sub
(bad)
movs
push
ja
inc
iret
sub
mov
sti
shl
and
jno
stos
mov
xchg
xchg
pusha
dec
pop
bound
mul
jmp
push
cli
sbb
das
fmul
push
scas
imul
mov
and
ins
inc
(bad)
xlat
cmps
mov
out
mov
imul
jmp
js
test
or
add
dec
mov
and
mov
popf
jecxz
rol
add
dec
add
rol
xor
push
and
xchg
sub
xchg
std
xor
pop
ja
jl
lds
ret
pop
dec
scas
pop
lahf
test
das
push
xchg
mov
xchg
cmp
cmps
mov
ds
ins
jmp
movhps
add
out
loop
pop
jno
pop
scas
(bad)
cmp
ins
mov
xor
leave
popa
addr16
push
lds
xor
mov
xor
adc
xchg
mov
repz
fisubr
into
ja
not
dec
jmp
sub
jno
add
cmp
xchg
dec
pop
daa
(bad)
rcr
xchg
and
clc
mov
cmps
imul
cmp
test
mov
sub
aas
xchg
sbb
das
inc
inc
push
test
inc
lock
xchg
adc
int
push
fcmovne
inc
dec
push
mov
movs
inc
lods
int
inc
mov
sbb
retf
aam
mov
mov
xor
out
sbb
scas
mov
rcl
mov
mov
mov
ror
mov
dec
call
outs
aas
out
inc
mov
in
lock
dec
xor
mov
xor
xchg
inc
jb
mov
add
inc
mov
add
jmp
or
pop
fcomp
or
daa
pop
mov
mov
adc
int
xor
adc
inc
push
inc
and
jne
mov
les
adc
out
push
jo
push
pop
imul
xor
cmp
sub
mov
in
stos
jo
push
into
mov
mov
push
loop
jle
stos
adc
jle
bound
xor
xchg
das
mov
mov
sub
loopne
mov
out
push
pop
es
mov
fcmovu
loop
loop
xchg
std
std
push
push
les
push
push
mov
(bad)
scas
scas
inc
push
cmc
cld
rol
fld
jmp
push
out
and
fsubp
sub
jae
lock
or
sub
push
xor
addr16
and
hlt
push
sub
je
push
pop
jns
ja
xor
call
ins
jmp
sbb
dec
jge
mov
daa
std
pop
cli
dec
(bad)
jnp
sbb
or
push
or
lods
mov
xchg
pop
adc
daa
add
mov
stos
mov
add
cmps
lfs
xor
adc
addr16
xchg
daa
jg
ss
std
push
rcr
out
mov
dec
sbb
mov
sub
in
mov
mov
sbb
imul
xchg
inc
push
or
mov
pusha
repnz
sub
cld
popf
pop
retf
cmp
cmp
sub
(bad)
mov
inc
arpl
adc
mov
imul
outs
cwde
mov
sar
push
pop
xchg
call
sahf
cmps
hlt
test
inc
xchg
xor
aaa
lods
mov
lods
call
shl
mov
stos
jb
mov
pushf
or
xchg
dec
sar
push
test
adc
and
dec
arpl
es
mov
dec
sub
xchg
fistp
add
xlat
(bad)
push
out
mov
loopne
mov
jno
bound
or
push
test
pop
(bad)
fstp
adc
dec
sbb
test
js
ins
(bad)
xor
loopne
sub
cmps
das
adc
mov
or
(bad)
fadd
inc
cmp
pop
mov
mov
xor
fdivr
outs
inc
xchg
pop
xchg
inc
jle
loope
in
pushf
call
mov
push
out
in
or
jg
mov
arpl
sub
dec
mov
and
fadd
add
repz
xor
fild
mov
pop
stos
or
mov
inc
adc
or
mov
pop
xor
xor
sbb
xchg
fisubr
ins
ret
add
inc
mov
push
mov
sti
cwde
pusha
repz
lahf
or
sbb
dec
jge
cmp
xor
outs
mov
jnp
push
inc
ins
push
mov
(bad)
mov
inc
call
stos
xchg
mov
cmps
mov
(bad)
adc
pop
ja
pusha
pop
pop
mov
add
or
ret
push
mov
jle
gs
scas
sahf
loopne
(bad)
div
aas
les
push
inc
ds
out
jg
pop
movs
or
popf
and
inc
xor
ja
jle
mov
xor
shl
shrd
(bad)
jl
scas
(bad)
ins
xchg
outs
mov
je
sbb
sub
cmps
push
inc
std
adc
xchg
xchg
sahf
lock
cmps
fst
sub
and
push
fadd
adc
cmps
pop
ret
xchg
inc
mov
or
out
lods
(bad)
xor
out
popf
cmp
push
pushf
sahf
je
add
fs
add
aam
int3
pop
dec
inc
sar
sti
adc
jmp
test
dec
into
fistp
pop
retf
cdq
into
dec
out
fmul
mov
dec
ins
xchg
std
dec
mov
mov
nop
shl
cmp
stos
or
pop
lods
cmp
jae
mov
imul
inc
and
jno
sub
and
mov
out
(bad)
or
sbb
into
cmps
imul
retf
and
pusha
call
int
pop
xchg
mov
jmp
jae
push
dec
(bad)
popa
sub
dec
push
push
or
imul
scas
popf
cmps
mov
xor
sbb
mul
fstp
out
(bad)
(bad)
mov
inc
or
and
or
sbb
xchg
push
and
push
nop
push
pop
aaa
adc
test
ret
cmp
and
cmps
stos
imul
push
cmp
das
or
fwait
imul
test
aaa
aaa
stos
push
out
inc
sub
sub
jle
push
pop
into
into
pop
mov
or
aad
fstp
sub
adc
popf
daa
imul
imul
pop
ret
mov
and
add
sub
jns
jmp
cmp
mov
mov
push
ss
out
sbb
arpl
pop
adc
sar
pop
adc
dec
ror
enter
pop
push
sbb
xchg
xchg
jle
adc
mov
push
test
mov
mov
dec
add
push
cmc
adc
mov
jns
mov
mov
jbe
sbb
pop
mov
int
fucomp
mov
repz
and
dec
int
pop
lods
cmp
push
in
inc
push
nop
pop
stos
outs
inc
sub
jmp
sbb
les
data16
push
or
loopne
shl
mov
xchg
int
ret
push
dec
adc
add
cmc
push
or
cld
mov
and
ret
jle
adc
xor
movs
lds
mov
les
xor
adc
(bad)
jmp
cdq
outs
js
jno
imul
loopne
aas
ror
sub
or
retf
xchg
inc
mov
lds
mov
stos
popf
ror
cmp
mov
inc
arpl
jg
inc
jo
popa
sbb
es
dec
imul
out
ss
jge
mov
retf
cld
jb
xor
rol
mov
bound
mov
add
cld
adc
pop
test
pusha
inc
popf
inc
adc
les
idiv
jecxz
fist
out
jnp
push
int3
aaa
jmp
pop
movd
jmp
or
retf
data16
xchg
push
(bad)
ds
out
aas
push
retf
inc
inc
add
sbb
iret
push
add
pop
(bad)
jecxz
mov
lods
xchg
pop
jmp
inc
xchg
adc
jo
int3
dec
mov
xlat
sbb
pop
pop
cmp
jne
das
outs
pop
push
sbb
inc
jnp
test
sbb
imul
fisttp
dec
(bad)
cmp
jbe
scas
add
imul
retf
cdq
mov
mov
xor
inc
jecxz
xor
ins
mov
xchg
mov
dec
push
dec
sar
ja
sub
xor
aad
mov
mov
fisttp
daa
add
cmc
arpl
cli
add
in
movs
cdq
cmps
in
dec
shr
dec
iret
xor
jno
stc
cmp
inc
push
cmp
cdq
jp
xchg
aad
loope
dec
sub
sub
mov
or
std
icebp
ins
jns
xor
sub
sbb
mov
sub
cmc
aam
mov
and
mov
and
mov
movs
adc
imul
ret
push
fld
scas
fsubr
enter
lock
mov
shr
push
cmp
loope
test
jae
cmp
ret
ins
(bad)
aas
jmp
xlat
push
add
mov
es
push
cmp
xlat
and
sub
mov
xchg
jbe
cmp
xor
push
gs
jmp
fdivr
xchg
adc
dec
mov
fcmovnbe
mov
inc
xchg
mov
cmc
mov
cmp
in
sbb
outs
cs
sub
rcr
cmp
mov
add
lods
iret
dec
cmp
inc
in
push
rcr
jne
inc
outs
pop
call
shl
adc
inc
inc
dec
popf
mov
pop
inc
stc
lock
mov
ror
mov
jp
or
bound
in
adc
jp
pop
pop
in
mov
dec
sbb
adc
mov
mov
gs
jmp
fwait
cmp
pop
pop
push
fwait
sub
repnz
jge
cmc
ins
sub
mov
ret
cld
popa
int3
sub
mov
push
add
adc
mov
fistp
shl
cmps
xchg
data16
dec
cmp
cmp
push
mov
sub
out
jno
inc
cwde
pop
or
add
sbb
loop
shl
mov
pushf
xchg
scas
fs
sti
lods
shl
sahf
in
lds
dec
xchg
es
out
ins
pop
sbb
dec
add
out
nop
adc
cmp
or
into
sub
pop
fild
mov
dec
jo
push
cmp
jno
or
xor
inc
dec
add
cs
lahf
inc
jb
jmp
outs
inc
movs
fwait
iret
(bad)
mov
and
push
adc
rol
or
mov
or
dec
push
imul
add
out
mov
or
lahf
es
xlat
jge
and
(bad)
fcmovb
mov
sbb
xchg
pop
mov
mov
mov
sub
fwait
call
push
fisub
add
popf
in
inc
pop
into
mov
pushf
pop
mov
arpl
call
sub
and
fs
icebp
iret
sahf
or
ins
dec
push
mov
out
stos
outs
lods
pop
cmp
cmp
not
cmp
jle
test
pushf
lds
je
pushf
daa
leave
lock
lods
jno
fcomp
xlat
je
push
mov
cmc
retf
push
mov
movs
stc
cld
inc
jne
push
ds
and
pop
popf
dec
inc
inc
pop
pmulhuw
mov
sbb
inc
mov
neg
out
add
das
jnp
cmp
ret
mov
cmp
jbe
dec
cld
or
repz
sbb
(bad)
dec
popa
pop
fs
test
aaa
(bad)
ret
push
rcl
sub
inc
xlat
or
xchg
mov
adc
cwde
mov
sbb
loopne
movs
xor
jb
adc
daa
call
cld
ins
mov
cmp
sbb
(bad)
sar
and
and
ins
(bad)
mov
xchg
into
xlat
jae
lahf
jnp
xchg
jno
jno
mov
addr16
push
bound
mov
loope
dec
jmp
test
dec
shl
jno
or
xchg
sbb
outs
xor
cmp
cmp
jmp
retf
push
repnz
jle
xchg
dec
jmp
ds
and
dec
test
mov
adc
scas
xor
mov
fild
std
or
mov
mov
sahf
shr
jb
das
out
ss
ins
ror
sbb
and
xchg
sub
mov
fwait
sub
cmc
addr16
call
xchg
and
mov
cmp
imul
not
loop
mov
or
mov
xchg
cwde
fdivr
add
add
rcl
adc
jmp
push
mov
add
or
cmp
and
imul
mov
loope
popa
ja
cmp
fs
jno
add
icebp
xchg
dec
dec
std
gs
rcr
sub
jecxz
bnd
popf
addr16
dec
xchg
in
cmps
aaa
loope
push
fs
out
call
mov
fst
add
push
cmp
stc
cmp
mov
(bad)
push
std
cwde
and
jb
mov
jge
sub
arpl
push
int3
ss
pushf
xchg
add
mov
loopne
lods
xchg
movs
les
or
rol
push
dec
fisttp
out
mov
sub
dec
or
pop
mov
popf
adc
inc
dec
xchg
jmp
xchg
repz
dec
les
addr16
and
dec
test
ins
int
xchg
pop
mov
aam
test
bound
hlt
in
out
pop
fbld
jl
data16
mov
shl
add
pop
xor
outs
mul
xor
out
enter
sbb
dec
add
push
iret
cmp
popf
mov
jae
xor
sub
mov
call
add
xchg
and
adc
popa
fild
push
mov
iret
(bad)
scas
test
fild
cmp
add
push
add
xor
xlat
jno
jmp
add
in
in
cmp
adc
neg
sub
cld
pop
mov
iret
mov
xchg
out
dec
int3
mov
adc
mov
jbe
jecxz
arpl
lds
test
add
pop
adc
adc
(bad)
cmp
mov
jmp
sbb
jnp
jbe
sbb
sahf
inc
fiadd
hlt
leave
and
add
jmp
or
pop
pop
mov
cmp
aad
sbb
mov
mov
dec
out
xchg
dec
std
cmp
xchg
xor
fist
mov
in
mov
or
je
jo
in
sbb
ror
sar
mov
xchg
inc
mov
mov
mov
push
mov
pop
xor
add
or
repz
adc
dec
inc
xchg
(bad)
imul
cmp
js
push
inc
mov
xchg
into
mov
pop
(bad)
push
sub
push
mov
mov
shl
adc
fs
adc
xchg
sbb
loope
inc
xor
ret
dec
mov
add
repnz
es
cmp
sbb
call
cmp
adc
lea
push
das
dec
clc
xchg
xchg
ficomp
je
inc
out
ins
jnp
adc
out
test
sub
adc
rcl
mov
mov
(bad)
push
bound
adc
ja
aaa
cmc
int
lods
cmps
fdivrp
inc
mov
dec
jno
jmp
fucomi
mov
ins
popf
mov
push
or
and
and
imul
jne
xor
cmps
clc
frstorw
mov
push
retf
and
or
sub
fwait
(bad)
in
ror
cmps
daa
les
mov
pop
ret
stos
pop
aaa
sub
jge
jmp
(bad)
aad
sub
fld
pop
cs
push
dec
adc
mov
cmps
cli
inc
ss
sbb
or
lea
add
cmp
jmp
pop
mov
leave
and
lahf
and
mov
xor
clc
pop
out
lods
cmps
mov
inc
or
ja
test
or
pop
cmp
mov
ror
mov
cmps
stc
stc
jg
in
cmps
pop
sub
jmp
jb
out
push
(bad)
xor
cmp
out
jecxz
leave
fwait
and
imul
shl
push
int3
pop
mov
pop
cwde
popa
adc
call
cmp
xor
jmp
mov
lods
pop
mov
add
jge
leave
inc
outs
add
and
inc
sti
das
in
inc
fidiv
test
mov
cmp
aam
jbe
pop
jmp
ins
test
xor
test
hlt
retf
and
in
push
dec
jmp
repz
sub
popa
inc
scas
inc
adc
repnz
push
fs
adc
push
mov
fs
daa
fsub
push
jo
push
iret
xchg
xor
jo
mov
mov
rol
movs
jbe
sbb
pop
fild
jg
pop
and
inc
test
fdecstp
popa
add
mov
aam
or
inc
jle
mov
inc
jne
je
popa
cld
cmp
and
add
mov
mov
and
sub
pop
push
cmp
adc
dec
aas
inc
mov
adc
jb
or
mov
push
dec
jo
xchg
pop
js
sbb
inc
cmps
imul
pop
test
xor
or
outs
push
lahf
jb
in
or
aas
sar
test
jne
aad
or
jb
rcl
ds
movs
(bad)
jle
(bad)
int3
inc
ret
cmp
pop
js
mov
test
sbb
cmp
xor
adc
push
mov
call
cld
shl
mov
sub
dec
mov
nop
sbb
out
mov
jns
mov
je
jmp
mov
inc
adc
dec
movs
fmul
add
xor
wbinvd
or
adc
add
sub
fwait
xchg
jg
in
mov
in
jle
clc
loope
or
mov
jg
in
dec
add
icebp
mov
ror
jle
cmp
int3
sbb
dec
stos
test
mov
mov
cmp
jns
dec
cmp
mov
adc
imul
xchg
cmps
outs
cmps
aam
fbld
ret
(bad)
and
jae
jg
push
fs
loope
push
lods
pop
frstor
xor
lea
ins
cmp
fdiv
sbb
cs
or
ror
mov
cli
sbb
out
popa
pop
pop
dec
bound
and
call
push
lods
add
outs
dec
aad
mov
sub
imul
mov
sbb
ins
fild
sub
and
jne
ss
arpl
push
loope
(bad)
(bad)
shr
push
mov
sub
push
test
loope
in
loope
lea
retf
es
fs
ror
pop
test
sbb
(bad)
mov
push
push
cmp
mov
mov
das
clc
or
mov
sub
inc
cs
pop
and
(bad)
mov
and
xchg
test
mov
aaa
pop
ins
push
fdiv
xlat
mov
push
cli
test
pop
sti
dec
mov
pusha
sbb
out
jns
mov
outs
cs
sbb
aad
xor
leave
jns
push
lods
jb
jae
or
or
cmp
adc
aad
push
xlat
sbb
and
xchg
into
lock
mov
je
clc
div
pop
mov
xor
xchg
mov
add
mov
sbb
cdq
fcom
add
lods
(bad)
test
mov
loope
iret
test
ret
fs
ins
rcl
sub
cmp
fldcw
xor
pop
cld
pop
cmps
bound
cmp
mov
mov
jbe
(bad)
call
shl
xlat
dec
cmc
pop
sub
ss
sbb
or
pop
loope
xchg
fcom
iret
adc
int3
outs
les
mov
sub
xchg
jnp
dec
inc
cmp
mov
ficomp
and
test
test
(bad)
lds
push
adc
xlat
dec
mov
add
ret
loopne
or
test
jecxz
xchg
dec
int3
daa
pop
cmp
les
movs
or
push
adc
push
cli
jmp
push
loope
movs
fsin
frstor
sti
push
fild
pop
ss
xor
scas
pop
stc
mov
mov
fisubr
fs
sti
pop
aaa
and
in
sbb
addr16
xchg
outs
xor
push
mov
pop
xchg
fldcw
ds
sub
stos
and
rol
dec
mov
loope
xchg
leave
ds
fwait
push
fs
sysenter
xchg
ss
jns
mov
or
mov
mov
cdq
pop
in
call
pop
shl
jno
(bad)
icebp
adc
cmp
nop
sbb
lock
mov
inc
sbb
iret
dec
sar
jno
xor
(bad)
outs
mov
mov
pop
push
pop
cmp
pop
setne
cmp
lds
add
jno
xlat
retf
cmp
cmc
add
cmp
xor
add
push
cmp
and
daa
aas
rcl
mov
mov
jbe
inc
dec
or
frstor
fwait
and
lock
fdiv
(bad)
mov
sub
jle
sbb
pop
pop
shl
outs
(bad)
jns
dec
xor
arpl
mov
adc
in
lock
mov
fisttp
xchg
mov
and
xor
clc
nop
and
or
fnsave
idiv
sub
jnp
fldenv
pavgw
sar
(bad)
(bad)
call
fidiv
jmp
mov
cld
clc
lock
adc
xor
cmc
mov
xor
cmp
ja
sti
sub
arpl
cmp
pop
pop
ficom
jecxz
int
adc
sub
cld
(bad)
lods
fs
add
test
es
fcom
(bad)
iret
pushf
stos
mov
out
jns
shl
jo
iret
dec
add
xchg
les
das
repnz
addr16
jp
test
cld
xlat
cwde
out
and
outs
sbb
cwde
(bad)
lods
push
pop
xlat
test
cmp
fist
fiadd
mov
push
push
loope
push
pop
mov
ins
mov
cmp
stos
mov
pop
aad
and
xor
or
sub
adc
xor
xor
push
ss
jp
aaa
pop
adc
or
push
jecxz
xchg
add
into
ret
imul
into
mov
pop
push
mov
lock
loopne
jns
add
cmps
loopne
fidivr
cmp
pop
scas
sub
sbb
pop
mov
cmp
jecxz
mov
mov
pushf
in
sbb
xor
sbb
loop
mov
aam
test
mov
mov
fisttp
push
mov
jmp
mov
lods
sub
neg
js
bound
test
sqrtps
outs
adc
xchg
mov
cs
sbb
loopne
gs
xlat
outs
aad
sbb
push
arpl
push
(bad)
and
lods
mov
or
jle
retf
mov
adc
lods
rcl
ss
rol
fmul
jmp
lahf
out
mov
das
fs
ins
rcl
or
scas
daa
fsub
xor
loopne
retf
lds
inc
jae
pop
popf
xor
mov
mov
push
jo
daa
push
mov
movs
gs
jno
xchg
loop
outs
sbb
(bad)
and
(bad)
cli
fimul
xchg
cmp
out
in
repz
xor
les
les
push
adc
push
jp
outs
sub
sbb
sbb
out
cmp
aad
fs
cmp
out
rcr
sbb
out
jae
pop
loope
into
push
scas
in
pusha
mov
out
loopne
data16
lea
jge
xor
dec
mov
sbb
cli
sbb
jne
jne
mov
int
jmp
adc
enter
mov
xor
(bad)
xor
and
and
sar
or
cli
pop
mov
pop
jnp
xor
mov
sbb
sti
or
aad
adc
pop
xor
repz
xchg
dec
jno
dec
or
xchg
sbb
shl
nop
push
inc
test
inc
pop
pop
mov
fwait
jno
add
fist
icebp
inc
nop
xchg
dec
pop
lock
mov
xor
mov
mov
out
ret
mov
fwait
inc
pushf
xchg
mov
xchg
xchg
cld
jno
(bad)
xor
sub
fwait
mov
aam
pop
test
mov
out
fdiv
mov
pop
sbb
add
lock
xor
out
shl
mov
inc
jmp
xchg
mov
push
pop
data16
jo
push
fcmovbe
add
mov
xor
daa
add
push
pop
imul
call
push
mov
push
push
es
outs
inc
xchg
inc
fucomip
je
mov
add
add
inc
xor
fist
clc
xchg
mov
add
inc
push
cmp
dec
and
dec
aam
arpl
pop
xor
jmp
mov
cmp
cmp
mov
cmps
dec
jno
enter
es
dec
mov
and
movs
cmc
push
loope
fdivr
je
adc
jge
outs
or
in
adc
sbb
mov
or
adc
mov
shr
mov
ss
push
cs
cmps
movs
push
mov
mov
(bad)
pop
jecxz
nop
or
jl
push
das
cwde
mov
xor
mov
mov
int3
cdq
adc
pop
xor
fld
mov
cmp
ret
cwde
leave
mov
push
leave
xchg
mov
arpl
adc
icebp
(bad)
outs
stos
leave
dec
and
scas
cmp
jl
cmps
outs
cwde
push
inc
mov
xchg
mov
(bad)
cmp
ret
mov
or
dec
shl
and
xchg
ret
mov
mov
fsub
mul
cmp
mov
add
xor
into
push
mov
sub
rcl
xchg
xchg
(bad)
pusha
jp
ins
icebp
add
push
not
ret
mov
mov
sahf
jecxz
xchg
cmps
pushf
fmul
test
sub
sub
xchg
and
add
shr
fnstenv
loop
inc
xchg
outs
mov
(bad)
std
add
scas
lods
into
push
arpl
xlat
and
test
in
add
push
xchg
pop
add
or
sahf
dec
sbb
test
aam
test
fst
jl
dec
ins
mov
clc
mov
rcl
cmps
or
jo
push
aam
push
imul
and
lds
es
stos
mov
retf
adc
xor
cmp
mov
rcl
jns
iret
hlt
std
mov
enter
dec
aad
and
push
inc
push
jns
shr
js
mov
sub
sbb
push
sub
pop
ja
jnp
jbe
push
sahf
mov
ret
das
mov
mov
mov
add
and
sti
movs
pop
int
fucom
xchg
pop
push
add
push
jnp
js
stos
fnstsw
adc
in
(bad)
in
adc
and
ds
dec
or
cld
sbb
sbb
push
inc
rcr
call
mov
cmps
(bad)
mov
add
jge
fcom
ret
stos
ins
xor
push
mov
jns
sbb
sbb
cli
loope
or
dec
cli
mov
(bad)
iret
sub
stos
les
mov
out
dec
sbb
dec
cmp
mov
adc
cmp
inc
ja
and
cmp
sbb
dec
mov
ins
or
push
aam
cmp
iret
xor
push
lds
inc
dec
sbb
pop
sbb
push
retf
js
or
(bad)
pop
xor
xor
lods
dec
hlt
sub
rsm
inc
jmp
psubw
std
pop
xchg
sbb
daa
mov
xor
out
lock
rcr
xor
xor
or
ret
sub
push
xlat
fimul
call
xchg
retf
ins
push
ret
pop
jmp
fmul
and
cld
lods
fdivr
icebp
dec
mov
or
aad
icebp
xchg
cs
test
push
rcl
bound
(bad)
aaa
xor
ss
jge
mov
nop
mov
inc
cmp
sub
lahf
leave
cwde
(bad)
(bad)
jmp
and
xlat
lahf
pop
pop
es
cmp
cmp
popf
mov
(bad)
js
fwait
inc
ret
nop
cmc
call
and
cld
stc
cmps
popf
mov
and
daa
sub
lahf
loop
inc
inc
retf
jnp
sub
jmp
sub
arpl
imul
test
iret
outs
mov
inc
sub
push
adc
mov
add
adc
jae
jp
mov
sub
xchg
in
cli
mov
sub
outs
cli
ss
rcr
sbb
into
outs
cmc
jno
ins
adc
xor
std
push
xor
xlat
xchg
dec
in
test
cs
sti
test
xchg
push
sub
fsubr
dec
dec
rcl
imul
rol
outs
mul
int3
cmp
xor
mov
test
icebp
mov
(bad)
and
and
inc
in
add
cmps
or
push
mov
fisub
jl
fcomip
xor
out
data16
dec
sbb
or
mov
fimul
stos
pop
imul
sbb
mov
add
mov
scas
int3
and
cmc
sbb
sub
mov
lock
and
enter
or
int
inc
sbb
cli
ins
imul
hlt
cmp
jle
ror
fwait
xor
idiv
push
in
sub
cmp
popf
or
sbb
pusha
cmps
jmp
loop
or
movs
in
jg
or
int3
xchg
rol
push
lods
and
or
xlat
dec
ds
cld
jnp
inc
out
stos
jbe
adc
pusha
pop
jno
jp
sub
xor
and
outs
sub
repnz
sub
jge
std
imul
fidiv
cmp
sbb
lods
outs
in
in
in
fstp
jo
fwait
push
mov
jae
ss
sub
pop
xchg
mov
xor
sar
push
xchg
aas
or
mov
adc
movs
rcl
add
ins
in
xchg
or
mov
dec
cwde
mov
cmp
je
hlt
mov
xor
add
or
sbb
stc
mov
data16
jae
and
inc
add
(bad)
sbb
popf
sub
push
sbb
cmps
sub
sub
icebp
jo
mov
es
adc
call
js
push
out
out
fidiv
ins
dec
repnz
cmp
sbb
gs
add
lods
jo
sti
ja
(bad)
push
enter
shl
add
or
jmp
in
fsub
sbb
dec
stc
adc
add
sbb
imul
leave
jg
rcpps
and
pop
outs
mov
cwde
sahf
call
retf
push
dec
popf
(bad)
jno
inc
mov
jl
outs
rol
dec
leave
pop
pop
aas
std
retf
mov
fidiv
sbb
adc
cwde
dec
dec
inc
fwait
loope
adc
stc
in
das
xchg
scas
dec
jbe
movs
enter
(bad)
leave
or
fimul
fwait
cmc
xor
aad
mov
mov
ret
adc
or
inc
mov
pop
lea
xor
mov
les
xor
js
cmp
mov
mov
scas
je
mov
iret
dec
shl
pop
sbb
dec
test
retf
das
xchg
fsub
mov
(bad)
gs
mov
xor
sar
push
dec
or
or
cdq
xor
or
in
or
inc
cmp
cmp
xchg
sub
lods
retf
push
fs
pop
xor
dec
aas
(bad)
es
mov
in
in
inc
test
jnp
cmc
jbe
inc
pop
xor
in
sub
mov
xchg
ins
enter
pop
lds
or
inc
fwait
and
ja
cld
and
daa
loopne
mov
jecxz
add
dec
pop
rcr
aaa
inc
adc
repnz
sub
loop
pushf
sub
sbb
dec
xlat
and
ss
(bad)
xchg
jne
lods
jo
dec
xor
cli
dec
jp
cmps
sbb
(bad)
and
fistp
inc
jge
inc
or
jne
push
add
add
pop
xchg
xor
jecxz
cmp
daa
test
jne
repz
shr
adc
xor
outs
aad
mov
dec
lds
xor
(bad)
(bad)
adc
adc
leave
xlat
movs
adc
adc
ret
ss
adc
sbb
pop
(bad)
rep
xchg
es
movs
and
xchg
sub
jae
jmp
push
inc
movs
push
jns
sahf
out
sbb
into
and
into
sub
test
loopne
pop
cmp
loope
push
pop
pop
neg
movs
and
push
scas
in
jb
jns
pop
rol
fdivr
mov
mov
dec
int3
push
outs
xchg
cmp
imul
xchg
dec
xchg
fimul
enter
or
adc
test
hlt
dec
jae
stc
pop
cld
fsubr
mov
inc
fimul
sub
imul
dec
mov
retf
loope
dec
pushf
cmp
pop
xchg
loopne
fdivp
nop
jmp
sub
int3
cmps
push
(bad)
test
(bad)
pop
jne
js
fwait
(bad)
enter
mov
stc
stos
imul
inc
xchg
sub
or
adc
jo
idiv
mov
fiadd
adc
mov
scas
(bad)
stc
(bad)
pushf
loop
mov
ficomp
xlat
repz
dec
outs
pop
call
xor
sub
icebp
push
xlat
sub
and
pop
jge
rcl
mov
push
ja
test
mov
(bad)
mov
pop
add
or
jnp
sub
mul
or
repz
jmp
push
jnp
fmul
push
mov
or
shr
xor
add
ins
jno
enter
lods
leave
mov
lock
dec
add
mov
jl
push
xchg
clc
div
(bad)
sub
fbstp
call
repnz
mov
cmp
stc
sbb
dec
and
loop
sub
inc
std
push
out
loopne
aas
fwait
inc
ret
mov
rcr
pushf
xchg
fist
mov
cmp
sahf
and
out
add
lds
imul
fld
cli
add
jnp
inc
or
jo
sub
xchg
inc
stos
mov
jmp
push
jmp
cmp
xchg
fadd
xor
repnz
mov
dec
mov
sahf
dec
js
aaa
outs
into
push
sub
nop
dec
movs
out
stos
(bad)
push
mov
mov
pushf
je
push
aas
add
sub
(bad)
mov
and
test
sub
sub
pop
pop
push
mov
dec
int
dec
mov
retf
into
pop
xor
sahf
cdq
bound
retf
xor
sub
frstor
add
sti
jecxz
dec
in
repz
xchg
xor
and
dec
imul
and
lods
out
dec
daa
jne
xchg
inc
in
test
pop
leave
jecxz
push
add
icebp
cmp
sbb
jbe
movs
js
add
add
aas
stos
scas
add
add
mov
xchg
or
idiv
into
jecxz
inc
in
and
or
mov
inc
dec
inc
and
clc
bnd
xchg
test
push
inc
jmp
in
sub
aam
inc
(bad)
leave
xchg
xchg
xchg
mov
sbb
(bad)
imul
push
ret
xor
nop
pop
xor
pushf
imul
aad
dec
lods
jge
movs
pop
and
(bad)
push
mov
sub
movs
mov
scas
jmp
js
test
fcom
pop
pop
push
jbe
std
enter
xor
setl
cmp
sbb
mov
push
xchg
shr
hlt
rcl
hlt
fwait
pop
add
enter
ss
repz
mov
cmp
int
jno
inc
retf
add
pop
in
xchg
pop
enter
pop
pushf
sar
adc
das
push
mov
psubq
cmp
es
rcr
and
xor
jbe
mov
sub
pushf
mov
movs
jno
mov
push
jmp
mov
ds
and
shl
jp
xor
stos
call
xor
int
shr
jl
icebp
fs
mov
push
mov
and
pop
push
xchg
or
mov
push
inc
mov
cmp
stos
sub
inc
mov
pop
cs
in
pop
jbe
mov
retf
jmp
clc
cli
hlt
sub
mov
dec
push
not
mov
or
xchg
jns
or
and
and
rol
stos
fs
iretw
pusha
cmps
jmp
sub
sbb
add
ins
xchg
pop
inc
(bad)
and
mov
rcr
in
out
cmp
(bad)
retf
loopne
mov
jnp
test
mov
mov
push
cmp
adc
cmp
out
xchg
push
ds
cmp
push
dec
jl
adc
sbb
call
retf
cmp
dec
dec
hlt
jbe
xor
retf
push
xor
(bad)
aas
or
dec
mov
jecxz
pop
cmp
xlat
int
push
mov
out
push
out
add
dec
mov
stc
xor
xor
loop
add
scas
pop
xchg
push
loop
cmps
pop
stc
not
loope
test
or
pop
inc
fld
mov
ds
shl
(bad)
adc
push
cmp
ret
repz
(bad)
fild
pusha
jno
xchg
outs
jb
lods
(bad)
mov
mov
mov
fwait
xor
retf
popf
retf
les
sub
js
jge
push
lea
cwde
leave
pop
ficom
ror
pop
mov
or
movs
hlt
mov
jb
pop
in
jbe
add
and
leave
retf
retf
cmp
dec
sbb
mov
jo
mov
pop
bound
push
out
movs
enterw
add
jns
(bad)
mov
stos
dec
arpl
mov
add
jmp
pop
lock
movs
mov
je
loop
cmp
mov
mul
jbe
push
out
popf
inc
inc
lods
loopne
or
imul
into
or
sbb
mov
jg
cmovne
sar
fadd
jg
mov
push
mov
inc
xchg
test
mov
sbb
ret
mov
pop
cld
cmp
push
dec
iret
dec
cmp
sub
cli
call
cmp
dec
das
xchg
mov
xchg
xchg
mov
mov
imul
mov
ror
sub
out
push
lds
icebp
pushf
jo
into
iret
nop
push
mov
jge
adc
jmp
cmp
rcl
es
cmp
movs
mov
int
dec
mov
mov
mov
xor
test
mov
shl
jg
xchg
nop
fisub
inc
repnz
in
pop
stos
int3
movs
or
ret
or
jmp
prefetch
pop
push
pop
and
and
cwde
adc
xor
and
jbe
push
push
push
mov
rcl
hlt
push
icebp
jge
arpl
stos
inc
into
add
ds
dec
sub
mov
dec
xor
or
ret
fild
jo
cmp
(bad)
outs
aaa
pop
jmp
dec
pop
dec
fdivr
adc
into
scas
xor
cmp
hlt
shl
mov
fcomp
fist
cmovle
jbe
add
movs
inc
xchg
test
retf
out
or
fs
(bad)
jne
or
fsub
enter
aas
add
int3
mov
xchg
cmp
mov
nop
pop
repz
or
out
aas
dec
push
lahf
mov
es
or
cmp
in
ss
sti
call
jp
dec
(bad)
pop
dec
icebp
in
aad
aam
mov
and
mov
sbb
sar
inc
aam
jb
push
dec
jae
sbb
sub
call
mov
jge
aam
jb
das
mov
dec
pop
push
test
jo
dec
xor
idiv
mov
dec
lods
jg
loopne
adc
mov
(bad)
pop
jno
scas
mov
mov
or
sti
xchg
cdq
add
dec
push
lea
out
add
add
xchg
(bad)
cwde
div
cdq
test
stos
jle
xchg
jl
and
pop
lds
sbb
push
test
movs
std
dec
enter
cli
mov
fld
test
loopne
cwde
adc
imul
xchg
dec
push
std
mov
cmp
jmp
idiv
ret
loope
inc
jmp
and
nop
jg
(bad)
pop
sbb
pop
push
and
mov
jge
das
or
mov
sbb
jg
inc
loop
dec
sbb
jb
inc
cmp
inc
dec
inc
push
out
cld
test
or
repnz
pop
cmps
dec
jnp
es
js
add
jne
sub
adc
sbb
mov
js
xchg
fwait
das
xor
or
mov
out
and
pushf
jbe
iretw
jae
inc
jae
fs
pushf
fidiv
mov
mov
test
jg
es
es
pop
loope
inc
inc
das
pop
adc
fwait
or
xor
cmc
enter
popf
dec
xchg
ret
push
and
jp
cmps
out
add
push
jne
ins
call
mov
or
jb
jp
ins
cmp
aad
call
sbb
cmps
push
sar
dec
jge
mov
mul
jno
gs
inc
jg
sti
addr16
rol
push
adc
sub
xlat
sub
jecxz
scas
xchg
jp
cmp
cdq
js
arpl
arpl
dec
push
adc
mov
jne
inc
aam
dec
div
sub
push
mov
sbb
xor
fsubr
fnstsw
aaa
add
repnz
dec
idiv
adc
scas
adc
das
outs
jl
or
pop
pop
inc
cmp
cmp
outs
pop
sbb
mov
imul
int
inc
mov
push
pop
movs
ds
sub
sub
xchg
out
dec
pop
pop
fld
mul
ja
ror
and
adc
and
clc
stos
movs
shr
bound
pop
ja
jle
push
adc
out
mov
loope
loope
sbb
and
pop
and
add
stc
jae
jb
daa
(bad)
fadd
adc
inc
or
dec
test
xchg
ret
xchg
bound
sbb
and
out
es
cmp
call
(bad)
push
fcom
sar
out
(bad)
cli
in
xor
cld
invd
xchg
cmp
popf
stos
push
cmp
es
and
jb
ds
jne
mov
in
pop
je
jecxz
test
fistp
and
sub
aaa
cmp
pop
xchg
scas
cmc
fidiv
xchg
pop
sbb
cmp
jle
mov
jae
sub
cdq
fs
mov
and
fadd
cmps
mov
lock
add
mov
pop
or
ins
pusha
inc
js
push
nop
cmp
push
popa
pop
aam
cmp
retf
(bad)
and
lahf
pop
xchg
jmp
aas
sbb
test
es
rcr
aas
shl
pop
cmp
movs
xor
sub
movs
rol
sub
push
cmp
push
je
lea
pop
xor
or
jo
lahf
dec
mov
push
movs
daa
adc
gs
pop
pop
mov
ror
xlat
and
cmp
xchg
(bad)
(bad)
push
fstp
xor
push
repnz
popf
mov
cmp
xchg
push
call
add
test
pop
mov
test
xchg
push
aad
add
cmc
xchg
jbe
stos
test
pushf
mov
fwait
test
push
(bad)
xchg
idiv
push
shr
pop
jg
cmp
lock
mov
add
adc
mov
sub
in
clc
imul
sbb
pop
psubq
adc
mov
adc
push
fstp
xlat
sti
div
dec
cmps
mov
sbb
js
imul
lahf
repnz
lods
fsubp
cmp
pushf
jp
inc
cmps
inc
ret
dec
xor
movs
fnstenv
jl
sbb
jle
push
loop
xor
stc
sub
out
ret
out
push
ja
and
je
repz
xchg
sub
fimul
dec
nop
jp
int
ret
dec
dec
xchg
push
mov
fcomp
stc
push
mov
(bad)
sub
(bad)
add
and
jbe
inc
or
pop
push
cld
fadd
jle
out
loop
mov
fist
mov
and
into
mov
cmp
xchg
scas
(bad)
mov
adc
pop
shl
pop
test
sub
pushf
aad
mov
js
(bad)
inc
ds
js
fidivr
sub
ins
inc
pop
sbb
inc
jbe
sub
lds
xor
adc
ret
xchg
mov
mov
aam
cmp
hlt
add
pushf
ss
xlat
lock
inc
mov
addr16
jo
lods
movs
cmp
cs
sar
pop
daa
pop
sub
dec
data16
and
add
ss
add
enter
add
cli
xor
sbb
xor
sub
cdq
(bad)
push
shl
dec
dec
sbb
and
iret
repnz
loope
addr16
(bad)
mov
je
dec
lods
(bad)
ja
dec
cmp
jo
rep
fs
pop
in
push
mov
or
sub
arpl
jbe
(bad)
rcl
inc
adc
pusha
clc
mov
int3
imul
mov
pop
test
adc
pop
cmc
ins
stos
loopne
fst
xor
sbb
dec
mov
and
stos
out
sub
dec
sbb
xlat
lea
add
pop
call
push
mov
push
test
jns
jle
mul
imul
and
jge
iret
rol
int
jecxz
xchg
cmp
fmul
aad
inc
jae
cmp
std
lods
retf
cmp
adc
lds
xchg
dec
scas
or
cmps
fldenv
xchg
shl
cld
sbb
inc
mov
lds
mov
and
jb
inc
mov
jbe
jbe
popa
jl
lods
push
ja
stos
or
xlat
jo
int
pop
and
jbe
pop
(bad)
cld
inc
push
jbe
lahf
imul
xlat
inc
shr
jbe
popa
pusha
dec
push
sub
bound
sub
sar
enter
fcomp
pop
aas
and
adc
xchg
(bad)
xchg
cmps
or
push
push
fistp
out
test
in
pop
xchg
cs
xchg
dec
xchg
int3
xchg
mov
jb
sub
xor
sbb
adc
in
add
pop
les
out
(bad)
jl
xchg
adc
cmp
sub
mov
cmp
ins
jl
jo
fs
cli
mov
mov
ins
mov
jns
movs
ins
pop
mov
cdq
mov
inc
mov
adc
adc
add
jbe
pusha
cmp
pusha
gs
jnp
xchg
shr
sub
and
push
jmp
cwde
test
jno
(bad)
lds
mov
or
(bad)
out
and
imul
sbb
js
sti
ficomp
mov
dec
dec
leave
repnz
arpl
mov
cs
adc
(bad)
ds
jecxz
ja
jb
jbe
in
cmp
add
mov
mov
mov
mov
sub
inc
cmp
das
mov
leave
fldenv
cs
inc
fwait
or
xor
aam
mov
pop
arpl
fdiv
cli
neg
adc
and
leave
jae
daa
adc
test
jg
pop
ja
in
aas
xchg
scas
and
imul
cmp
push
daa
push
stc
lods
test
test
xchg
aam
mov
sub
push
mov
inc
jnp
fidivr
mov
out
jge
adc
mov
retf
dec
xchg
fs
out
jg
pushf
mov
daa
inc
push
sub
or
test
out
sahf
or
inc
xchg
cli
push
inc
fidivr
cdq
mov
xor
pop
(bad)
scas
arpl
aam
or
int
push
push
popw
outs
arpl
xchg
test
int
adc
sub
or
push
add
(bad)
rol
jle
xor
outs
push
loop
pop
cmps
jne
pop
add
push
mov
mov
inc
inc
push
fst
dec
pop
push
mov
mov
jnp
jo
bound
mov
mov
sbb
dec
pop
cmps
idiv
xchg
iret
and
pusha
sbb
mov
mov
int3
pop
sbb
cmp
push
dec
lock
cwde
scas
ret
pop
mov
lea
or
cmps
aad
xor
iret
das
leave
das
and
jbe
(bad)
adc
push
lock
mov
into
sub
push
je
or
mov
xlat
movsx
data16
js
dec
pop
std
or
or
popf
sbb
pop
pop
loop
sub
cmp
or
and
push
xor
push
in
and
in
xor
and
mov
dec
inc
jbe
adc
sub
xor
sub
pop
out
test
icebp
jp
pop
lea
sbb
ja
cmps
nop
cld
retf
inc
idiv
dec
not
adc
xor
add
jne
xlat
sti
mov
lea
(bad)
sub
into
je
mov
mov
push
repnz
push
jg
(bad)
dec
sahf
mov
mov
popa
ret
scas
pushf
test
fs
clc
sbb
int
jmp
ins
movs
daa
jns
call
xor
ret
jge
ficom
mov
(bad)
into
inc
hlt
dec
into
popa
pushf
xor
push
pop
and
mov
mov
jge
xchg
mov
dec
inc
scas
ss
pop
push
mov
push
add
and
xchg
pop
mov
push
and
lods
ins
cs
imul
les
jmp
xor
sub
(bad)
xchg
sahf
jno
int
repnz
out
cdq
in
mov
pop
pop
dec
xor
xlat
mul
leave
pop
xor
sbb
dec
cwde
mov
pop
lods
jle
push
mov
dec
sbb
or
mov
and
(bad)
or
add
dec
jge
leave
or
fcomp
xor
test
sub
fisttp
inc
sbb
bound
jb
mov
pop
std
mov
pushf
out
xor
mov
inc
hlt
adc
jg
push
call
add
mov
cmp
ror
mov
mov
inc
addr16
hlt
sbb
fdivr
ror
cmc
mov
mov
ror
jae
cmp
and
int3
mov
int
fdiv
xchg
xor
loop
push
test
dec
out
shr
xchg
hlt
(bad)
fsin
test
xchg
adc
loope
ins
jb
sbb
call
outs
int
push
jg
sub
jo
mov
or
or
lods
or
xchg
adc
jecxz
sub
push
pushf
mov
push
int
nop
(bad)
adc
dec
or
cmp
xor
fisub
xor
dec
cs
xchg
cwde
ficom
xchg
stos
into
dec
push
out
dec
jb
shl
outs
push
dec
jl
ret
jp
mov
loop
dec
loop
in
das
mov
call
adc
push
xor
pushf
xlat
cmps
mov
adc
inc
push
xchg
dec
push
sub
gs
sbb
lods
jbe
imul
int3
push
cs
mov
cmp
xchg
aam
int
loop
loop
jbe
cld
push
mov
cmc
add
mov
or
and
ins
cmp
xor
ins
rcl
sub
mov
sbb
popf
scas
popa
xchg
cmp
cmp
shl
and
mov
fcmovne
cwde
test
(bad)
out
(bad)
movs
inc
adc
push
int
and
(bad)
xor
addr16
sub
popa
call
mov
call
retf
xlat
hlt
cmp
sbb
inc
in
mov
loopne
adc
pop
out
movs
inc
ficom
jmp
aad
popa
pop
es
jecxz
arpl
mov
or
stos
xchg
xchg
lods
pop
das
add
daa
pop
and
push
pushf
(bad)
adc
mov
cmps
or
sub
popa
repnz
pop
mov
arpl
jg
mov
jmp
mov
inc
call
cmp
fild
mov
retf
outs
add
cwde
add
add
int3
sub
jl
imul
xchg
lods
mov
ins
xchg
repnz
sub
xlat
inc
loop
mov
rcr
cmps
add
mov
ror
lods
mov
out
xor
xchg
outs
xchg
es
push
cmp
ret
inc
xor
gs
ss
inc
das
mov
or
and
add
ror
addr16
in
test
aaa
sti
xchg
adc
mov
pop
sbb
mov
ror
inc
test
mov
mov
in
aaa
paddd
leave
sub
xchg
inc
jno
mov
lea
cmp
mov
(bad)
sbb
mov
dec
mov
mov
arpl
add
fwait
xchg
cmp
movs
xor
xlat
retf
mov
into
imul
mov
nop
outs
inc
add
cmp
pop
aaa
movs
out
out
xor
dec
mul
xchg
jae
mov
fwait
mov
pop
fs
clc
int
dec
iret
cmpps
outs
fstp
cmp
pop
add
jbe
jge
idiv
das
test
fstp
jns
aam
(bad)
mov
cwde
pop
dec
shl
test
fwait
in
xlat
out
mov
and
nop
dec
and
imul
mov
inc
jmp
es
std
pushf
push
mov
aaa
fnstcw
cmp
xlat
dec
lock
or
loop
pop
adc
or
inc
stos
std
lock
scas
push
idiv
iret
mov
dec
sub
shl
cmp
dec
scas
mov
fisub
fiadd
jno
and
scas
inc
add
mov
push
adc
mov
sub
jae
loope
add
inc
inc
enter
shr
jb
shl
adc
sub
mov
and
retf
in
jo
mov
mov
or
and
lock
push
mov
mov
pop
ret
add
mov
jb
adc
lds
cmps
pop
push
outs
push
test
xor
imul
cmp
pop
jecxz
pop
dec
sti
ds
test
and
mov
jg
mov
add
dec
mov
test
arpl
idiv
test
das
inc
xor
in
(bad)
xor
jne
dec
xchg
sub
xchg
xchg
fiadd
jne
arpl
inc
xlat
rol
add
xchg
test
imul
pushf
hlt
xchg
add
out
jbe
cmp
add
push
dec
cmps
adc
and
daa
push
pop
shl
test
inc
xor
arpl
adc
repnz
xchg
jmp
hlt
repnz
sahf
xlat
mov
mov
stos
xchg
mov
sub
sbb
jmp
xor
jbe
in
pop
icebp
adc
gs
in
icebp
(bad)
fisubr
mov
rcl
or
push
movs
push
cmps
bound
(bad)
xor
jge
stc
(bad)
lods
xchg
les
scas
dec
xor
sub
inc
push
pmulhw
xchg
fcom
inc
retf
and
and
ficomp
pop
dec
push
jmp
dec
imul
jle
push
mov
sahf
push
cmps
ss
je
adc
add
retf
popf
fmul
xor
pop
int3
icebp
mov
xor
call
stc
add
mov
and
jmp
xor
cmps
adc
and
jle
rol
jns
leave
adc
mov
shl
aaa
retf
sub
lods
data16
test
aaa
jmp
or
fimul
(bad)
iret
cmps
push
retf
pop
adc
dec
or
aad
sub
or
out
ss
or
ret
aas
test
xchg
fstp
mov
test
add
mov
and
adc
popf
add
xchg
jae
rcr
es
jg
clc
mov
in
cmp
mov
psubw
adc
(bad)
cmc
push
or
ror
push
imul
icebp
fdivr
sbb
(bad)
push
rcr
test
loope
inc
or
mov
adc
gs
mov
fwait
popa
push
mov
cdq
sub
pop
add
jae
dec
cmp
sub
sub
out
pop
xchg
rcr
pusha
out
and
div
add
sbb
mov
inc
ret
in
mov
mov
pushf
pop
add
sbb
in
and
sti
loop
xchg
ret
retf
xor
sub
stos
or
add
and
adc
xor
sub
and
out
dec
sub
push
movs
dec
push
test
dec
inc
or
dec
push
cwde
bound
mov
push
inc
dec
add
imul
sbb
push
add
ret
arpl
mov
add
stos
in
call
sbb
and
pop
js
sbb
popf
(bad)
pop
xchg
push
rcr
imul
loop
pop
cmps
push
inc
in
cs
dec
pop
push
cwde
ds
mov
xchg
sbb
ret
add
push
imul
sbb
xchg
or
push
dec
dec
in
and
push
mov
gs
outs
outs
cwde
inc
and
aaa
sar
inc
xor
mov
add
out
shr
add
not
cmp
adc
aad
sbb
adc
dec
dec
inc
stos
jp
mov
imul
or
cmps
sub
adc
fwait
push
test
mov
mov
xor
jg
jb
(bad)
fs
add
fsub
inc
xor
sub
sub
push
test
sti
sub
cli
jne
dec
xchg
int3
ret
inc
adc
stc
xor
mov
push
ret
inc
fdiv
imul
push
stos
push
jbe
lock
mov
fwait
je
fcmovnb
repnz
mov
cwde
push
repz
movs
add
adc
dec
fwait
mov
or
cmp
or
and
xchg
outs
jne
out
add
mov
ficomp
xchg
icebp
jmp
les
shl
test
xor
ffree
and
sbb
dec
push
mov
arpl
inc
adc
movs
int
mul
imul
(bad)
xchg
loop
sbb
call
xchg
jle
mov
hlt
call
pop
call
push
pop
xchg
into
cmc
mov
in
jmp
nop
test
sub
jmp
and
fwait
daa
sub
xor
jo
test
imul
sub
mov
push
pop
fsub
or
or
movs
mov
in
cmp
inc
cmps
je
or
xchg
dec
mov
dec
mov
sub
and
fld
mov
mov
jo
loopne
das
stos
ds
push
push
dec
in
into
push
ss
addr16
pop
push
mov
jno
pop
mov
neg
mov
aam
in
cwde
aad
in
fucomi
mov
jmp
enter
ds
jnp
mov
mov
jge
scas
jp
xor
dec
mov
(bad)
mov
pop
movs
pop
sub
sti
adc
mov
or
icebp
pop
clc
or
ficomp
add
xor
dec
jne
mov
mov
cli
mov
push
or
push
loope
ins
inc
bound
fstp
or
or
pop
cmp
cmp
mov
bound
in
cwde
repnz
mov
hlt
out
mov
in
xchg
jo
(bad)
ror
mov
and
shl
scas
into
dec
jbe
test
cmp
mov
sub
inc
stos
add
fisub
add
mov
ins
mov
call
retf
cmp
outs
test
jno
xor
fwait
jecxz
push
mov
and
(bad)
leave
test
jae
data16
push
in
mov
mov
cmps
lock
mov
rcr
ss
adc
xor
mov
mov
xchg
scas
ja
aas
aas
lahf
fimul
or
sbb
dec
fs
push
in
push
add
in
mov
cwde
and
or
xchg
out
sub
inc
jbe
xchg
add
call
inc
xchg
lea
inc
sbb
out
push
sar
add
sbb
loop
sub
and
add
adc
xchg
nop
sub
and
cmp
xchg
pusha
or
xchg
mov
fdiv
std
cmp
mov
add
shl
and
mov
jo
push
or
fwait
addr16
xor
sub
inc
clc
adc
(bad)
fdiv
repz
dec
push
jns
pop
add
pop
movs
test
(bad)
inc
fild
push
sbb
push
sub
and
mov
add
aam
xchg
jno
adc
loopne
lds
gs
push
outs
loopne
dec
jle
sbb
mov
daa
add
mov
adc
repz
hlt
dec
cs
out
imul
ficomp
mov
dec
mov
aad
push
and
fwait
or
xlat
push
aaa
push
sbb
push
push
stc
push
dec
aam
sbb
jno
pushf
push
or
int
adc
aam
sbb
push
push
and
mov
lahf
cmp
ret
out
jg
push
dec
loop
pop
pop
fldenv
shl
jmp
xor
cli
mov
push
push
dec
cli
add
scas
retf
pop
movs
jmp
mov
cmp
fsubr
iret
loopne
(bad)
mov
je
jg
dec
js
out
jg
xor
in
pop
sbb
fistp
retf
dec
stos
xor
imul
loopne
lahf
inc
xor
lea
cmps
mov
pop
and
add
imul
jmp
pop
ret
cmp
leave
xor
lods
sbb
fcomp
xor
gs
dec
shl
mov
in
daa
hlt
pop
ins
hlt
(bad)
clc
adc
or
pusha
fldenv
sbb
js
ror
mov
jmp
lds
in
xchg
mov
xor
pushf
lahf
mov
inc
mov
sub
sub
ss
inc
cmps
and
sub
aas
out
(bad)
or
push
mov
dec
stc
jnp
dec
jo
stos
lods
pop
push
iret
inc
sahf
ret
fld
mov
mul
mov
aas
mov
mov
inc
ins
loope
push
ficomp
fst
fst
pusha
retf
iret
pop
inc
cmps
pop
sbb
sub
test
sahf
ja
cmp
add
pushf
inc
hlt
xlat
push
jmp
fwait
(bad)
xor
push
lock
popfw
add
xchg
arpl
jae
clc
mov
cmps
(bad)
xchg
clc
jle
inc
pop
xor
sar
loop
or
movs
xchg
dec
xchg
cwde
retf
add
pop
push
in
mov
pop
popa
pop
pop
mov
pop
xchg
adc
fsubr
cs
or
xor
push
mov
int
popf
ss
cmp
and
mov
data16
adc
or
das
mov
addr16
pop
lods
outs
inc
and
repz
pop
fistp
imul
dec
int3
xchg
mov
adc
mov
out
mov
fs
(bad)
pop
xchg
pop
lds
xchg
ret
adc
mov
retf
in
add
lods
hlt
push
mov
mov
ins
sub
xchg
xor
sahf
cwde
out
loop
ds
jns
mov
mov
and
dec
in
in
call
fisub
jl
mov
sahf
repnz
xor
sub
jge
retf
pop
stos
js
push
mov
pusha
mov
xchg
mov
sbb
test
mov
loope
pop
mov
test
sub
(bad)
cli
aam
jne
(bad)
(bad)
sub
test
data16
aas
das
dec
mov
les
movs
es
mov
cmc
mov
push
fs
mov
push
xor
retf
mov
mov
cdq
out
imul
repz
mov
jg
mov
or
arpl
ja
ror
ret
or
xor
call
dec
iret
cmp
pop
ins
cmps
xor
pop
hlt
and
sbb
sub
popf
cmps
cmp
and
out
add
or
mov
cmp
fwait
loope
std
je
in
push
mov
adc
xor
ret
inc
xchg
cmp
pop
xlat
mov
iret
addr16
dec
cmp
push
stos
inc
xchg
call
retf
or
xchg
sbb
adc
jb
sahf
stos
and
adc
imul
cmp
sub
not
inc
test
call
xor
aam
cmps
aam
or
jge
mov
ror
js
retf
mov
sub
das
repz
and
lock
xor
xchg
and
mov
in
adc
sbb
aas
popa
xor
ds
xchg
dec
in
push
dec
adc
and
ss
sbb
retf
call
sbb
pop
repnz
xor
adc
sbb
fs
icebp
mov
ja
or
out
(bad)
ds
sub
mov
scas
fucom
mov
retf
sub
fld
cld
adc
inc
pop
clc
mov
and
mov
fwait
xchg
pop
fcmovu
lods
inc
sub
outs
adc
sbb
inc
mov
lock
mov
inc
jno
mov
ror
cmp
mov
imul
das
outs
pop
sbb
xchg
inc
mov
mov
sbb
repnz
inc
xchg
movs
xor
xchg
gs
sti
dec
inc
es
xor
stos
mov
xor
jp
cmps
ja
cld
or
and
jecxz
lock
jecxz
sete
and
out
sub
dec
fimul
dec
xor
cmp
jmp
repnz
lods
std
mov
xchg
pop
inc
push
xchg
arpl
out
repnz
mov
or
sbb
jb
int
xchg
imul
jae
neg
xlat
out
pop
js
scas
jbe
adc
pop
jne
or
jmp
std
jl
mov
adc
pop
cmp
push
imul
pop
imul
bound
je
mov
cmp
repnz
fnstcw
mov
je
or
ret
pop
shl
mov
mov
(bad)
retf
scas
or
popa
popf
and
pop
icebp
pop
dec
dec
cmp
cli
mul
inc
or
out
cld
xor
(bad)
jmp
lods
dec
fistp
aam
pop
sti
mov
daa
popf
mov
sbb
mov
out
xchg
shl
mov
fmul
xchg
adc
sbb
xchg
jge
loope
loop
mov
fdiv
dec
retf
mov
mov
jbe
rcl
fwait
or
(bad)
out
arpl
out
(bad)
sti
sti
sbb
sub
loope
popf
int3
push
cdq
sub
sbb
shr
call
cmp
retf
aas
and
bound
push
jp
lods
xchg
call
sahf
xor
out
adc
in
mov
sub
cmp
aam
push
and
add
mov
je
fstp
xchg
arpl
adc
add
retf
jne
mov
repz
ret
jmp
xchg
xchg
cmc
xor
add
lods
xlat
pop
jmp
cmc
pop
fidiv
shl
ins
sahf
jmp
jmp
fistp
idiv
fisttp
(bad)
dec
xor
out
add
fucomip
xor
fild
mov
cmc
adc
mov
push
test
jmp
je
cld
dec
in
adc
mov
repz
gs
add
sbb
out
pusha
es
test
sbb
jg
sub
das
repz
mov
fst
into
retf
push
ss
mov
and
je
cld
movs
add
push
shl
and
jns
jl
not
inc
cs
call
inc
mov
pop
sub
(bad)
pusha
ret
dec
sbb
(bad)
fmul
iret
pop
or
mov
mov
mov
pop
int3
jp
sbb
inc
inc
imul
mov
pusha
mov
stos
not
mov
mov
add
dec
enter
addr16
out
in
dec
or
jmp
ds
cli
jns
or
mov
xor
std
mov
inc
push
mov
es
mov
repz
pushf
pop
rcl
inc
push
dec
adc
dec
sahf
not
mov
fld
pop
push
xchg
adc
in
fiadd
add
data16
mov
push
add
mov
mov
(bad)
jo
cmp
or
xchg
mov
lea
xchg
(bad)
iret
inc
retf
in
jle
cmp
and
mov
lds
cmp
pop
fiadd
and
fs
fdivr
or
and
fdivr
les
inc
adc
cli
cmp
sahf
test
adc
sar
add
into
jle
mov
test
push
pop
dec
inc
pop
popa
lds
push
sbb
inc
xor
test
ins
enter
add
push
or
add
inc
call
sbb
push
sbb
jae
mov
cs
sub
jo
scas
mov
scas
cmp
fsubp
and
and
popf
cmp
pop
pop
pusha
inc
inc
cmp
pop
jmp
add
xor
fs
scas
pop
adc
in
rol
fs
iret
xchg
cmp
or
rol
popf
popf
in
inc
push
hlt
dec
and
push
fcom
sub
adc
aad
test
test
adc
adc
pop
pop
or
out
mov
sbb
sub
jno
div
hlt
adc
ret
mov
loope
(bad)
adc
add
xchg
pop
sbb
or
les
adc
in
jns
mov
scas
arpl
xor
mov
add
sar
pop
popf
imul
pop
lods
mov
pop
jmp
xchg
adc
cmp
clc
add
inc
mov
das
mov
adc
jbe
les
add
pop
push
imul
cli
ds
sub
cmp
cld
sub
cwde
adc
or
test
loopne
in
push
retf
or
or
add
pop
sbb
pop
shl
jbe
dec
cmps
sbb
rcr
mov
and
out
pop
fild
adc
movs
aad
sbb
jmp
xor
into
adc
sbb
jp
cld
je
idiv
(bad)
or
jp
fist
pusha
in
(bad)
repnz
int3
push
sub
jl
cmps
clc
add
push
rcr
not
mov
popa
inc
xor
or
push
aad
mov
outs
inc
mov
inc
bound
mul
push
jb
cmps
sbb
mov
xchg
ds
mov
arpl
ret
and
jmp
adc
cwde
mov
aad
inc
pop
adc
or
fisub
mov
push
rcl
cmc
sar
push
jmp
scas
fldenv
nop
movq
jnp
in
loop
sub
lahf
sub
xor
inc
mov
ins
in
imul
scas
mov
adc
std
and
mul
jmp
pop
rol
(bad)
jp
call
ins
ret
lds
jle
loop
mov
(bad)
pusha
dec
in
adc
std
std
fs
lds
cs
pop
ins
or
jne
and
nop
cs
stos
loope
shl
mov
inc
mul
mov
fwait
sbb
mov
push
sbb
mov
out
dec
loope
leavew
gs
in
dec
mov
and
or
lods
xchg
jmp
sti
xchg
dec
movs
ins
and
ja
sub
ret
bound
clc
aas
les
jnp
je
aad
dec
jg
cli
cmp
cmp
ja
(bad)
scas
or
das
scas
xor
mov
jecxz
outs
movs
and
dec
ja
call
mov
cdq
push
lods
inc
mov
in
inc
(bad)
and
add
inc
xchg
cmp
(bad)
mov
icebp
in
jle
movs
mov
jecxz
push
mov
inc
cmp
jl
sub
in
add
ins
nop
cmc
stos
fcom
movs
nop
leave
push
repnz
adc
in
xchg
test
ds
in
in
xchg
pop
icebp
push
cmp
inc
adc
adc
test
inc
fimul
xchg
jbe
adc
mov
movs
aaa
ret
jbe
add
es
sbb
cld
js
jg
cmc
shl
push
fst
jo
rol
push
stos
fcmovu
adc
mov
js
pop
cmps
push
sar
push
adc
lahf
daa
cld
pop
mov
(bad)
cwde
sub
adc
in
add
jb
mov
push
dec
xor
fdivr
adc
lea
xchg
ret
fnstcw
pop
sub
shl
outs
jg
out
mov
cmp
cmps
cmc
(bad)
inc
pop
inc
fs
lds
stos
push
dec
aam
mov
add
mov
mov
rol
syscall
inc
popa
mov
add
adc
scas
xor
mov
push
mov
outs
sahf
push
stos
or
inc
sub
and
push
ret
xor
enter
mov
out
call
cmp
jae
push
mov
pusha
pop
xor
pusha
test
retf
cmps
jns
and
pop
hlt
inc
std
pusha
fadd
sbb
(bad)
(bad)
rol
iret
push
imul
mov
dec
mov
arpl
jge
mov
out
cli
pop
dec
iret
scas
scas
push
aad
std
push
lock
mov
call
cmp
push
xchg
and
jle
xchg
retf
bound
adc
dec
fwait
int3
mov
mov
mov
(bad)
push
(bad)
popf
inc
push
ret
xchg
cmp
std
arpl
sbb
int3
fsubrp
movs
or
sub
jmp
sar
mov
jmp
(bad)
je
push
retf
mov
mov
dec
sbb
cmc
(bad)
dec
xchg
mov
jmp
push
sub
cli
xchg
xchg
mov
push
push
cmp
stc
pop
mov
aad
cld
jle
or
jp
add
xchg
jmp
test
lods
xlat
jp
pop
cmp
mov
dec
cdq
inc
sub
imul
mov
sbb
mov
sbb
dec
and
inc
and
dec
pop
xchg
push
jnp
mov
mov
into
push
test
lea
mov
sub
dec
sub
fcmovnu
out
push
test
cmps
test
jnp
inc
inc
dec
jp
or
lds
mov
and
jb
mov
xchg
mov
jecxz
gs
pop
fstp
pushf
icebp
je
fadd
mov
sub
push
ins
bound
adc
jmp
(bad)
ss
sar
out
out
repz
mov
outs
int
sahf
adc
pop
out
arpl
ficomp
lahf
mov
push
push
rep
and
or
fldenv
sub
jg
sbb
pop
xchg
pushf
test
push
aam
out
addr16
(bad)
je
mov
xchg
sbb
nop
adc
mov
leave
inc
xchg
sub
adc
std
dec
sub
dec
cmp
(bad)
mov
dec
ret
inc
jge
mov
pop
(bad)
sbb
movs
or
fwait
adc
dec
push
fimul
ret
mov
inc
js
mov
push
pushf
cmp
repnz
dec
jge
xchg
push
inc
call
xor
sub
imul
jl
pop
and
les
out
sahf
jmp
(bad)
retf
jb
sub
cmp
inc
dec
sub
test
ret
ret
xlat
add
xchg
je
addr16
mov
scas
retf
and
adc
pusha
(bad)
bound
cmp
xor
mov
xor
jle
pusha
dec
or
outs
jnp
sub
ds
mov
dec
cmp
push
push
adc
push
data16
jo
fsub
retf
jb
cmc
push
adc
aaa
daa
mov
in
enter
lea
daa
sub
in
pop
jne
dec
mov
jmp
int3
inc
xchg
inc
mov
or
retf
addr16
jmp
int
shr
movlps
repz
or
and
jns
std
pop
cwde
call
cmp
or
pop
push
mov
inc
data16
pusha
sub
cli
dec
xchg
dec
jl
ficom
lods
jl
mov
mov
pushf
or
sbb
std
lea
pop
sbb
mov
sar
cwde
mov
jbe
pop
inc
addr16
sub
jnp
fst
mov
push
or
cs
stc
xlat
and
out
pop
pop
pop
cmp
mov
add
adc
jae
xchg
popf
cmp
sbb
xchg
and
pop
add
or
ret
pushf
aad
lahf
mov
sub
loopne
jmp
cdq
inc
das
fwait
out
hlt
xchg
sbb
jo
fdiv
inc
fbld
popf
cwde
punpcklbw
xchg
mov
mov
or
mov
and
jge
mov
stos
test
scas
(bad)
mov
push
mov
repz
mov
jmp
jmp
jnp
(bad)
out
out
sub
fist
pushf
pop
cmps
out
retf
sbb
mov
loopne
call
arpl
and
push
sbb
sbb
test
and
and
inc
push
loopne
fist
mov
mov
xchg
pop
jmp
std
or
and
cmp
sbb
jo
xor
sbb
popa
push
movs
dec
mov
movs
xchg
adc
icebp
push
xchg
mov
in
mov
inc
add
and
dec
sub
sar
das
dec
and
sbb
das
nop
data16
in
xchg
ficomp
inc
cmps
mov
mov
arpl
(bad)
sar
fbstp
shl
js
mov
mov
popf
cmp
dec
test
adc
and
cmp
ret
out
push
inc
cli
imul
push
xchg
mov
pop
mov
(bad)
mov
dec
inc
dec
push
pop
xchg
into
push
mov
add
pop
xor
nop
dec
ins
call
pop
aas
cwde
stos
pop
cwde
in
adc
mov
cmps
shl
out
sbb
test
add
xor
aam
pop
cmps
imul
ds
aad
mov
jmp
mul
xor
cmp
clc
cmp
sar
in
pushf
and
int
and
int3
ins
data16
std
push
jb
or
push
xor
retf
mov
fldcw
mov
jns
mov
inc
jmp
mov
bound
dec
sbb
call
xor
dec
add
sbb
mov
adc
clc
or
xchg
jae
hlt
dec
cmp
in
stc
js
cmp
or
(bad)
int3
clc
sub
repnz
stos
repnz
in
jae
xor
jno
cmc
daa
jne
outs
sbb
iret
push
mov
or
call
cmp
mov
(bad)
aas
mov
clc
mov
push
shr
ins
lahf
pop
out
ins
aaa
mov
sti
std
cmp
adc
aas
ss
inc
or
or
shl
cmp
test
add
jle
(bad)
test
cmp
gs
int3
add
jae
jge
push
mov
shl
sub
mov
ss
shr
xchg
inc
mov
cmp
loop
(bad)
push
inc
out
outs
sbb
mov
add
xor
loope
(bad)
sbb
idiv
fsubr
dec
cmc
and
push
push
in
or
jl
fwait
add
mov
and
fisttp
cmp
push
xor
pop
ud1
jge
cmps
fsub
mov
mov
pop
pop
ds
mov
dec
xor
leave
or
xor
bound
mov
aam
mov
jecxz
and
(bad)
lea
movs
enter
movs
aam
or
dec
push
int3
mov
mov
push
and
mov
sti
dec
int3
scas
mov
hlt
jnp
or
fnstcw
rol
out
xchg
xor
inc
xor
test
popa
loope
pop
xchg
stos
repnz
push
mov
aas
repnz
mov
ror
or
adc
iret
(bad)
into
(bad)
dec
inc
mov
popf
outs
xchg
lock
or
pop
or
(bad)
dec
cld
xor
ins
inc
sub
adc
(bad)
in
ret
adc
xor
ss
cli
mov
mov
pop
push
jmp
and
xor
and
or
fnstenv
shl
jno
cmp
jno
(bad)
and
adc
sub
in
xchg
leave
out
inc
and
je
or
and
js
call
xor
cmp
sub
outs
jno
movs
jle
mov
loopne
aaa
cmc
or
and
repnz
pop
cwde
jl
pop
mov
imul
xor
outs
push
jne
pop
push
loop
jl
sub
inc
not
push
sub
push
sub
movs
rol
inc
pushf
xchg
jae
aad
or
sub
arpl
xchg
mov
mov
adc
cs
add
sbb
mov
ret
or
ins
push
mov
mov
xchg
add
int3
imul
lds
cmp
jb
call
mul
pusha
or
jns
(bad)
cmp
push
pop
loop
mov
neg
jmp
xor
fsub
call
or
mov
les
fsub
or
lods
out
push
mov
cmps
in
int3
dec
imul
mov
adc
pusha
fnstsw
aaa
imul
scas
sub
adc
sbb
into
test
lods
mov
test
call
mov
lea
cmps
dec
mov
sahf
or
fistp
sub
mov
jb
addr16
ficomp
retf
or
jnp
scas
xchg
inc
inc
xchg
into
mov
pop
hlt
sbb
and
fsubr
and
push
outs
and
cmp
push
dec
add
hlt
in
xchg
inc
ins
imul
xor
dec
sahf
mov
sbb
or
mov
pop
shl
dec
in
add
pop
aad
and
addr16
add
retf
cmp
inc
shl
xchg
cmp
push
scas
and
cmp
mov
sub
fsubrp
inc
fistp
xchg
pop
in
push
add
in
inc
inc
bound
dec
push
dec
bound
xchg
popf
int3
pop
jb
sbb
shl
adc
jnp
fnstcw
icebp
jle
popa
xchg
add
loope
inc
mov
(bad)
in
iret
test
bound
ins
xor
mov
inc
in
addr16
adc
dec
sahf
sbb
pop
sub
mov
add
out
lahf
push
test
mov
scas
out
cmps
mov
push
shr
mov
retf
fimul
sbb
(bad)
jnp
lods
add
clc
xor
aad
shl
call
or
or
sbb
icebp
(bad)
imul
jmp
aam
cmps
mov
(bad)
adc
(bad)
mov
jnp
xchg
cmp
jmp
push
mov
add
sub
push
es
fstsw
adc
dec
fstp
jmp
stc
or
test
mov
sbb
adc
push
sbb
cmp
ins
jbe
and
add
cld
test
fiadd
std
cmpps
pop
fnstcw
pop
(bad)
mov
jge
sbb
mov
sbb
and
xor
and
fcmovne
out
stc
jg
mov
xor
xchg
int3
mov
jg
pop
push
std
jmp
pusha
ret
enter
out
aaa
mov
popa
fiadd
mov
adc
jg
push
nop
sbb
adc
in
dec
xor
push
aas
daa
(bad)
mov
mov
cwde
cmp
icebp
mov
pop
and
adc
add
shr
nop
jbe
adc
jmp
push
jae
mov
sahf
rcl
mov
in
call
ret
out
adc
xchg
out
clc
addr16
rcr
adc
rol
les
mov
mov
cld
fs
push
xor
cmp
xor
cmp
lock
mov
stos
dec
std
mov
out
dec
sbb
in
pop
in
push
sbb
call
dec
arpl
push
movs
jge
popf
pop
ror
fcmove
push
xchg
mov
adc
xor
dec
cmps
pop
cdq
add
clc
mov
enter
aam
push
aas
xchg
adc
and
add
retf
xchg
adc
xchg
mov
pop
ja
dec
leave
pop
pop
dec
xchg
add
ficom
adc
pop
icebp
pop
push
addr16
cs
pop
cwde
and
xchg
xchg
cmp
movs
outs
and
xchg
lds
jo
and
int3
jl
or
hlt
adc
or
cmp
aad
out
mov
stos
jmp
jbe
ss
call
adc
or
jp
adc
xor
adc
or
add
rcr
repz
xor
fld
aaa
iret
test
dec
xor
xor
fistp
mov
repz
add
and
add
loopne
jns
cmps
mov
pop
mov
xchg
aad
ja
sub
out
cmp
call
inc
add
xor
popa
ss
bound
(bad)
inc
inc
loopne
dec
jo
or
stos
sub
push
stos
add
adc
jns
(bad)
popa
cwde
add
loop
jbe
ss
outs
test
cmp
(bad)
cmp
addr16
mov
jl
mov
mov
push
les
pop
nop
and
iret
sub
sub
jle
ja
xchg
cdq
outs
sub
in
jmp
pop
sub
sub
pop
cmp
xor
adc
jp
cs
jo
jge
rol
sub
and
add
aam
pushf
inc
cmp
inc
clc
(bad)
cmps
dec
fsub
inc
(bad)
inc
ror
ins
cmp
pushf
jmp
adc
push
pop
(bad)
mov
cmp
loopne
and
aam
and
xor
pop
hlt
inc
cmp
ret
lods
test
push
stos
dec
adc
push
out
push
add
jle
add
lahf
xor
data16
mov
jbe
ins
cwde
sbb
xchg
dec
push
test
push
fsubp
cli
stos
pop
and
(bad)
cmp
sub
sahf
jmp
in
rcr
dec
movs
iret
adc
mov
js
call
xor
push
push
arpl
es
lds
call
xchg
sub
push
fist
loope
cmc
cmp
pop
or
xchg
mov
sbb
xchg
stc
fild
dec
add
pusha
ss
mov
jno
cli
pop
cmp
fld
pop
shl
loope
in
or
xor
js
(bad)
movs
in
sub
xor
push
pushf
add
pop
aas
adc
pop
add
adc
ret
data16
jns
(bad)
adc
call
ror
(bad)
and
mov
mov
dec
sub
ret
inc
or
pop
cli
push
pop
ss
int3
mov
std
outs
shl
mov
xchg
mov
in
shr
pushf
outs
adc
xor
jp
(bad)
xor
sub
stos
xor
push
sub
out
dec
adc
mov
imul
pop
test
stos
movs
fs
add
lods
mov
adc
push
jecxz
sar
adc
loope
cli
xchg
adc
xor
mov
adc
test
shl
inc
sahf
out
lods
adc
xchg
into
dec
imul
fstp
sub
mov
pop
sub
pop
add
pop
jno
xchg
clc
xchg
mov
(bad)
pop
inc
inc
jecxz
aas
inc
jne
or
dec
inc
fsubr
lods
retf
cmps
jp
push
cmps
cmp
sbb
pop
cmc
cmp
xor
xchg
pop
in
jmp
jmp
add
xchg
imul
je
xor
mov
aas
(bad)
sbb
xchg
push
or
mov
bound
mov
inc
and
xor
jp
inc
outs
repnz
jle
cwde
push
out
and
sahf
add
cmps
ficomp
xchg
jmp
pop
xor
sub
xchg
adc
out
mov
call
sub
and
sub
lea
aaa
cmp
(bad)
dec
mov
add
lods
icebp
add
out
add
call
xchg
push
stos
mov
aas
mov
mov
(bad)
out
cmp
jl
push
repz
inc
cmps
dec
sub
loop
xor
push
ret
sub
mov
(bad)
clc
(bad)
inc
dec
jno
or
jne
jp
ficomp
(bad)
mov
inc
jae
mov
pusha
fld
pop
outs
(bad)
cmps
pop
scas
test
sub
or
imul
mov
outs
pop
ins
lods
ret
scas
(bad)
out
or
test
mov
rol
adc
xor
in
std
in
ret
push
jnp
add
xor
and
jl
fstp
pop
rol
xrelease
(bad)
aad
call
jecxz
lock
pusha
in
sub
or
fisub
and
enter
ins
jns
cld
mov
fstp
dec
dec
sar
loop
xor
movs
ret
scas
fistp
int
hlt
and
xchg
leave
push
adc
or
mov
fidiv
pushf
ss
lods
jp
ja
movs
jbe
cmp
pop
arpl
dec
stos
adc
sti
ror
imul
out
rcr
sahf
dec
retf
bound
or
stos
jmp
and
scas
call
jnp
push
xchg
and
fadd
push
sub
inc
adc
mov
les
sbb
dec
and
mov
mov
(bad)
out
jnp
xchg
xchg
test
jne
sahf
mov
jnp
or
ins
or
cmp
test
pop
mov
mov
out
mov
push
bound
xchg
aam
ja
movs
add
or
stos
enter
dec
jle
xchg
outs
mov
(bad)
lods
push
sbb
movs
adc
pop
pavgw
or
push
mov
cmc
cmp
pop
xchg
add
jmp
cs
mov
out
in
sub
xchg
inc
push
(bad)
mul
dec
scas
sub
and
in
mov
pop
mov
mov
dec
fld
mov
xor
(bad)
rol
and
loop
sbb
sub
popf
fsubr
(bad)
xchg
pop
das
dec
lahf
imul
nop
(bad)
out
xor
in
lea
popa
rcr
rol
aaa
xor
jp
nop
ret
pop
jae
sub
cmps
pop
cdq
cdq
push
inc
fs
mov
sub
sub
es
add
cld
push
imul
aas
sub
mov
xlat
shl
out
jmp
inc
push
xchg
xchg
xor
rol
rcr
mov
sub
cmp
pop
fiadd
jno
mov
fsubr
iret
aad
and
and
std
fsub
mov
mov
push
dec
fadd
jnp
ficom
adc
xor
inc
inc
ret
shl
jne
cdq
test
xchg
test
test
pop
(bad)
dec
or
xchg
and
and
sbb
xlat
xor
xchg
cmp
or
and
cmp
add
jb
addr16
sub
lods
(bad)
in
aam
pop
es
mov
mov
in
shl
mov
jecxz
cdq
scas
push
cmps
xchg
inc
xchg
adc
outs
cs
stos
pop
mov
loope
faddp
xchg
fild
(bad)
sub
jb
call
jp
outs
and
cmp
adc
mov
mov
jmp
add
jge
and
pusha
fcmovbe
dec
out
or
xor
and
mov
dec
inc
retf
movs
mov
add
call
pslld
xor
shl
fdivr
cli
pmulhuw
cmp
or
and
mov
jg
lds
inc
pop
inc
inc
hlt
ret
xchg
adc
and
les
and
jns
mov
xchg
and
test
jns
(bad)
lods
xchg
bound
pop
sbb
cmp
add
stos
movs
cmps
mov
add
mov
movs
fldcw
(bad)
mov
dec
out
fstp
iret
push
shl
iret
sti
sub
jne
and
mov
test
push
sar
inc
inc
sub
fdivrp
push
jne
mov
imul
fsub
nop
das
sub
push
inc
pop
inc
and
adc
ins
xor
sub
cwde
out
ds
dec
hlt
stos
or
push
dec
call
gs
and
fistp
fs
pop
pop
ret
dec
retf
fiadd
xchg
push
dec
jmp
pop
or
or
sti
in
jmp
cmp
xchg
cmps
jbe
adc
test
push
jmp
mov
test
push
jle
es
dec
jge
in
gs
into
and
iret
and
scas
and
pop
arpl
push
das
frstor
push
imul
jb
movs
dec
les
add
int3
mov
fdiv
dec
fsubr
inc
aas
cmc
jne
hlt
stos
into
or
add
pop
jbe
pushf
cmc
dec
push
arpl
(bad)
dec
sub
or
push
shr
mov
leave
xchg
push
push
aaa
lahf
ja
mov
aas
or
or
mov
jecxz
mov
out
(bad)
nop
frstor
push
inc
nop
movs
dec
(bad)
stos
jae
mov
sbb
(bad)
movs
or
nop
xor
ss
jmp
in
outs
sub
(bad)
push
js
cli
pop
pop
sbb
dec
xchg
outs
movs
outs
dec
stc
test
shl
out
jnp
ins
sbb
pop
enter
xchg
mov
push
mov
cmps
adc
mov
xchg
dec
retf
push
add
cmp
das
mov
das
inc
jle
ins
jecxz
ret
jle
dec
call
fwait
test
shr
jo
or
into
jo
sub
shr
test
dec
pop
inc
jp
dec
dec
mov
je
int3
xor
out
sahf
pop
jae
arpl
jbe
and
fdiv
adc
dec
(bad)
xchg
ja
neg
add
mov
cmp
push
and
test
mov
test
xchg
popf
ins
fs
xchg
cld
test
mov
mov
leave
int
mov
push
(bad)
lods
fs
aas
pop
pop
addr16
retf
icebp
fstp
idiv
mov
cmp
mov
xor
jle
clc
cld
inc
aam
(bad)
lods
lock
pop
mov
lea
int
aam
mov
push
ds
dec
mov
es
jge
test
push
loop
repz
out
in
adc
push
and
push
(bad)
xor
ret
or
ret
jnp
dec
add
in
or
push
jns
dec
sbb
pop
mov
(bad)
cdq
loopne
mov
in
(bad)
xor
test
enter
sahf
mov
repnz
jecxz
push
cmp
movs
lods
loope
pop
movs
xor
dec
dec
adc
(bad)
int3
stos
loope
mov
sub
stos
cmp
dec
mov
cmps
inc
xor
test
pop
dec
add
rol
lods
rcl
hlt
pop
pop
cmps
push
loope
mov
ret
jns
data16
ret
sbb
sbb
sub
ss
(bad)
cmps
enter
cmc
mov
call
inc
add
cdq
imul
loop
je
sahf
or
and
out
inc
push
in
in
into
je
xor
ss
inc
dec
dec
xchg
jecxz
fmul
retf
dec
xor
(bad)
jns
inc
cmc
adc
jae
retf
or
push
cmps
xor
mov
cmp
jge
mov
rcl
(bad)
sbb
jg
sub
test
ins
inc
fdivr
cmp
loop
xchg
mov
stos
pop
pusha
cli
(bad)
xlat
and
and
push
jmp
pop
not
or
(bad)
dec
push
xchg
cmp
aaa
pop
sub
mov
dec
pop
cmc
xor
push
push
and
imul
mov
pop
mov
or
icebp
mov
inc
loop
(bad)
test
int
int
imul
jmp
data16
cmps
imul
ficomp
imul
jns
add
xchg
push
out
mov
xchg
xor
mov
les
aam
mov
rcr
jne
shl
les
sub
dec
sub
jnp
pop
pop
cs
(bad)
ror
pop
cwde
adc
push
jbe
pusha
sub
pop
std
pmaxub
test
repz
ret
and
in
adc
imul
push
test
cmp
(bad)
test
sbb
ficomp
lods
xor
cld
mov
call
mov
lea
mov
push
mov
pop
sub
int3
test
push
inc
cmc
in
ss
mov
rol
sbb
pusha
and
add
ret
test
cwde
sbb
jp
std
add
not
out
sbb
pop
sbb
xchg
arpl
punpckhdq
ds
fisub
pop
stc
repz
jmp
mov
xchg
cmp
shl
in
aad
popf
fsubr
mov
add
jnp
lahf
aaa
lods
push
enter
xlat
push
test
push
xor
iret
scas
sahf
cdq
jmp
sub
and
push
and
pop
mov
inc
into
cmps
sahf
aam
(bad)
js
mov
cmc
or
fwait
or
rcl
test
adc
pop
mov
scas
or
jl
mov
(bad)
push
scas
push
inc
in
fiadd
movs
cmps
mov
dec
mov
adc
xchg
cmp
jo
movs
and
mov
push
dec
and
icebp
data16
pop
cmp
fs
jbe
test
imul
sub
adc
js
or
pop
mov
daa
jno
xchg
dec
ret
mov
pop
(bad)
jle
(bad)
stos
ja
fild
add
pop
popf
ins
dec
(bad)
out
mov
out
push
mov
inc
aam
dec
mov
imul
xchg
mov
dec
test
ret
cmp
xor
mov
jmp
not
inc
jecxz
sbb
ret
(bad)
sbb
addr16
mov
jp
sbb
xchg
out
scas
or
pop
(bad)
mov
test
dec
push
add
or
cmps
jo
jmp
mov
inc
mov
adc
xchg
retf
retf
cmp
and
fcmovne
cli
cld
mov
and
adc
mov
xor
pop
push
add
bound
inc
push
add
js
fisub
mov
dec
and
push
sti
rcr
pop
das
out
lahf
int
mov
push
pop
xchg
inc
xor
inc
push
push
dec
mov
stos
sbb
ss
xchg
lea
mov
xchg
iret
pushf
mov
fdiv
aam
data16
fdivr
in
xor
loop
es
retf
ss
aad
test
ja
or
cld
inc
cwde
push
xchg
pop
mov
cmovno
inc
fiadd
ss
dec
jne
stc
mov
dec
xor
xchg
gs
inc
into
pushf
adc
shl
ret
xor
es
xchg
scas
cmp
xor
and
and
mov
adc
rcl
push
xor
ds
mov
les
outs
sti
inc
addr16
jo
sbb
sbb
mov
push
xorps
ss
cmps
in
pop
popf
daa
shl
inc
imul
pop
popa
xor
xor
or
and
and
mov
dec
out
repnz
aaa
mov
jl
test
xchg
inc
adc
xchg
inc
sbb
xor
jno
int3
cli
push
mov
shl
pop
cmp
mov
inc
stos
lods
sbb
pop
int3
and
adc
icebp
shl
cmc
stos
sbb
pop
xchg
xor
fld
pop
scas
pop
ins
iret
cmp
sar
mov
nop
add
ret
jp
stos
jp
adc
cdq
call
jns
xor
rol
jmp
cwde
das
cmps
mov
inc
adc
dec
into
outs
xor
iret
adc
out
cmps
or
jb
fcomp
(bad)
push
cmp
call
leave
(bad)
out
ja
xlat
lods
mov
mov
mov
push
inc
ror
pmaddwd
mov
mov
les
sub
fbstp
or
pusha
jge
sbb
add
shl
cmc
mov
(bad)
icebp
dec
xchg
push
cmc
sub
ins
sbb
jne
fdiv
mov
mov
sbb
add
jl
xacquire
(bad)
outs
(bad)
sbb
fcom
jl
or
mov
in
out
push
loopne
std
(bad)
mov
pop
inc
mov
cwde
jmp
bound
dec
outs
clc
(bad)
jg
add
jp
xor
pop
or
lods
sub
cmp
push
dec
sub
mov
mov
mov
xor
or
jns
mov
adc
popa
sub
xor
jno
jns
and
(bad)
lahf
mov
inc
cmp
scas
lods
inc
jmp
or
(bad)
lea
xor
rol
fcmovu
sub
jb
in
pop
retf
sub
cwde
dec
xor
out
(bad)
xchg
and
ja
xor
in
adc
loopne
rcr
dec
idiv
and
stos
xor
inc
fistp
or
inc
(bad)
and
retf
inc
in
daa
arpl
push
sub
(bad)
call
jecxz
in
fistp
inc
mov
retf
(bad)
fist
or
and
retf
and
shr
out
push
shl
(bad)
push
cmps
jo
mov
pushf
repnz
div
iret
and
cmc
lahf
mov
xor
fcomp
fs
pop
test
sbb
addr16
cwde
adc
cs
add
sbb
inc
mov
jmp
cs
inc
xchg
xchg
ja
mov
iret
xor
dec
scas
cmps
es
add
xchg
dec
loope
scas
and
sar
add
loop
push
icebp
fisttp
inc
mov
jns
lock
cmps
mov
fwait
jg
fwait
mov
rcl
adc
xchg
dec
jmp
mov
ins
es
fst
mov
jo
mov
out
sub
popa
aam
gs
scas
inc
sahf
pusha
adc
push
push
rcr
jns
xor
mov
js
mov
dec
xor
pop
loop
in
inc
or
or
jg
fistp
rol
pusha
cwde
sub
jecxz
imul
xor
ror
cmp
jl
or
or
mov
xor
cs
dec
push
imul
sbb
not
fwait
inc
aaa
ret
xchg
jae
les
idiv
test
pushf
push
call
fadd
das
lock
mov
bound
mov
fbld
jb
push
xor
and
mov
pop
imul
adc
inc
sub
popa
push
neg
pop
popa
push
adc
cmp
jmp
jnp
sub
xor
mov
cli
sub
mov
mov
outs
inc
mov
fmul
imul
in
sub
mov
sub
test
neg
pop
into
cld
imul
and
and
mov
push
or
loop
mov
add
lods
sbb
loopne
jne
scas
ins
xor
int3
or
jl
or
arpl
je
fnstenv
sbb
aas
jb
xchg
pop
fisub
xchg
pop
push
(bad)
std
outs
jle
enter
loopne
pop
repnz
ds
imul
mov
inc
add
sub
add
imul
cli
jo
mov
push
xchg
sub
cmp
mov
and
mov
mov
adc
retf
ss
cmc
in
and
lahf
scas
dec
adc
aas
jmp
adc
fs
pop
je
jno
inc
mul
ret
cmps
scas
sub
xor
sbb
mov
pop
movs
lods
inc
les
fimul
fmul
mov
les
or
pop
retf
jne
stos
push
std
xlat
mov
sbb
and
adc
popa
out
xchg
adc
jns
das
(bad)
pop
cmp
pop
sar
mov
cmp
mov
addr16
loopne
jne
pop
out
and
jbe
mov
xchg
pop
xchg
lods
pushf
shl
push
xchg
hlt
sbb
xor
mov
lods
aas
aas
inc
push
lds
or
lds
sub
into
mov
pop
pop
iret
cli
push
cmps
rcr
add
stc
inc
mov
cmps
pop
dec
xor
test
xchg
mov
dec
loopne
rcr
cmc
int
sbb
jmp
mov
inc
ja
cmps
scas
enter
call
push
popf
fcom
mov
mov
icebp
cli
pop
outs
xchg
jo
push
cmp
inc
mov
scas
rep
clc
icebp
hlt
fld
pop
sub
adc
outs
loope
mov
ins
scas
sbb
cmp
test
adc
test
loop
scas
repnz
adc
stos
push
mov
ss
ret
xchg
jmp
ins
dec
mov
dec
xor
inc
sub
loopne
xor
jb
lods
sahf
sub
fnsave
dec
push
pop
sbb
and
outs
retf
and
or
sbb
add
fs
repnz
mov
xor
ret
xchg
mov
xchg
xchg
cli
pop
mov
outs
outs
fs
dec
(bad)
fisubr
jl
xor
(bad)
add
test
push
jae
aad
loop
sbb
js
cdq
leave
push
neg
inc
fdiv
mov
lods
jge
sbb
cmc
dec
rcr
xchg
ret
stc
in
mov
sub
pop
push
push
cmp
sub
(bad)
xchg
xchg
push
aas
jb
push
fst
xchg
shr
mov
fwait
jmp
and
push
pop
jo
mov
pop
add
out
ds
xchg
test
jnp
inc
movs
inc
or
fdiv
pushf
or
pop
outs
pusha
js
cs
mov
retf
inc
in
outs
add
arpl
cli
jae
loop
fdivr
push
xchg
lahf
mov
test
not
icebp
jg
add
sbb
pop
adc
cmps
jg
fnstenv
push
mov
shl
(bad)
int
mov
adc
(bad)
imul
sub
das
pop
scas
clc
sub
or
or
push
rol
add
leave
addr16
test
ins
xchg
fwait
cmp
sub
out
mov
sbb
repnz
ror
or
jl
mov
cmps
jge
jb
sub
jle
inc
jl
mov
pop
je
pop
xchg
xor
or
sbb
mov
rcl
jl
inc
mov
sub
into
add
enter
pop
dec
shl
imul
fst
push
je
mov
enter
(bad)
fsubr
(bad)
(bad)
mov
dec
and
jns
sub
pop
fcmovnu
dec
shr
(bad)
rcl
adc
outs
cli
jne
test
inc
xchg
inc
and
imul
push
jle
jns
popa
call
sahf
nop
mov
enter
movs
jns
pop
mov
adc
push
ja
adc
mov
(bad)
adc
stos
in
or
mov
loop
retf
ror
xchg
test
jl
and
addr16
test
and
jg
sub
jns
test
mov
sub
and
pusha
jno
dec
or
xor
les
popa
dec
int3
sti
shr
mov
(bad)
scas
neg
jbe
xchg
xor
push
outs
out
xlat
xor
xor
pop
xchg
movs
mov
mov
fbld
jae
push
jo
loope
(bad)
shl
pop
add
xchg
sbb
fwait
lea
mov
and
test
test
jno
inc
push
mov
jg
push
jbe
(bad)
leave
cs
jmp
mov
aas
jle
pop
fisub
mov
out
sub
and
into
out
into
and
into
outs
add
xor
adc
test
mov
push
sbb
cdq
mov
retf
push
mov
int3
push
aad
or
popa
and
loop
in
inc
in
and
dec
imul
push
and
or
add
test
lea
mov
mov
fs
ds
push
mov
jmp
dec
div
pop
sbb
sgdtd
inc
push
pop
sbb
push
sub
xchg
(bad)
ins
mov
inc
jl
cdq
inc
cli
push
loopne
imul
cdq
out
scas
cmp
sbb
and
pop
pop
push
aad
and
gs
(bad)
frstor
loopne
int
jno
adc
pushf
jbe
outs
sbb
test
mov
xchg
or
fwait
mov
xchg
dec
sbb
dec
jo
push
fnstcw
shl
cmps
loope
rcl
add
mov
add
mov
lds
mov
in
xor
ret
push
or
ins
mov
xchg
fidivr
inc
not
push
retf
xchg
push
and
fsqrt
fs
jno
and
inc
test
adc
and
jecxz
je
daa
pop
mov
in
pop
repz
test
push
stos
cwde
or
inc
pop
fldenv
inc
mov
stc
mov
inc
iret
stc
addr16
pusha
(bad)
push
mov
fs
cli
out
sti
test
repnz
bound
cmp
add
mov
cs
mov
outs
jb
cmp
mov
mov
std
out
fisttp
iret
mov
lods
mov
sbb
cmp
lea
repz
sub
aam
nop
adc
arpl
(bad)
fld
fwait
pop
ror
mov
retf
fs
call
leave
iret
xlat
mov
or
cdq
fwait
popf
dec
test
xlat
leave
add
sbb
pop
ins
adc
lds
and
jecxz
gs
and
lock
inc
ss
sub
inc
lahf
icebp
jbe
add
sahf
pop
and
cmps
out
xor
push
adc
fisubr
xor
push
jge
jle
xlat
neg
or
inc
jmp
xchg
pop
call
in
adc
imul
fs
ja
inc
cmp
adc
cmc
(bad)
and
lea
int
jg
test
out
je
jmp
out
mov
dec
inc
push
pop
xlat
cld
jb
push
cwde
and
call
ret
add
test
xchg
test
arpl
retf
sub
fmul
cmp
adc
leave
int3
adc
adc
mov
pop
xor
push
mov
pop
adc
inc
pop
add
(bad)
ins
xor
enter
jmp
call
out
xchg
int3
pop
jne
or
mov
inc
xchg
dec
xor
enter
in
jb
enter
xchg
ficom
dec
fsubr
aad
jbe
adc
inc
add
loopne
push
mov
pop
cmp
cmp
xchg
xor
push
mov
outs
push
ds
and
jmp
les
jmp
shl
or
pop
sahf
fdivr
push
pop
fstp
push
cmp
xchg
movs
add
xor
xor
push
(bad)
push
jnp
ja
ds
add
mov
push
out
cmp
rcr
sub
(bad)
dec
std
(bad)
mov
movs
ret
add
dec
xchg
in
in
test
push
jl
adc
jne
out
sbb
data16
push
ins
int
dec
mov
jecxz
pop
xchg
mov
push
xchg
in
push
cwde
test
and
cmc
test
sahf
push
in
cmc
test
ficomp
add
retf
lea
scas
ds
cmp
cmps
pop
pop
mov
add
in
mov
or
mov
adc
pop
push
icebp
push
mov
jl
iret
faddp
pop
mov
cmp
bound
dec
scas
loope
(bad)
lahf
icebp
ret
lock
adc
xchg
arpl
sbb
xor
xor
mov
leave
arpl
sub
push
xchg
mov
cmps
bound
das
inc
int3
rcl
xlat
dec
cwde
aaa
ins
mov
xor
dec
pop
cmps
dec
arpl
xchg
sbb
lods
dec
scas
xchg
loope
fsub
mov
idiv
dec
mov
or
lock
cmc
mov
inc
nop
rol
test
xor
push
lds
sub
jle
xor
push
cmp
add
lock
sbb
shl
mov
pop
lods
xor
lods
mov
adc
mov
pusha
or
iret
lock
mov
push
mov
(bad)
clc
das
je
lock
push
sti
mov
jmp
ins
push
fst
mov
mov
leave
fwait
mov
icebp
ins
cld
clc
mov
add
(bad)
cmp
stos
fldcw
mov
sub
js
or
push
jbe
jne
mov
jp
daa
shl
cli
in
add
pop
mov
outs
pop
mov
inc
mov
mov
repz
xor
out
add
fwait
test
pushf
loope
pusha
xchg
push
sahf
loope
jo
dec
mov
cmps
ins
ss
add
pusha
dec
ss
adc
cmp
mov
leave
test
sub
and
push
xor
ds
mov
pop
div
cld
xor
adc
sbb
mov
into
mov
test
fs
imul
pop
xchg
loope
popf
jl
repz
popa
sbb
dec
push
mov
cmp
sub
pop
(bad)
jle
jbe
mov
mov
sbb
iret
lock
sub
retf
clc
les
sbb
sub
fisttp
inc
inc
mov
loope
jb
(bad)
xchg
sbb
fsubr
std
fs
fmul
adc
or
out
out
in
or
loope
int
xchg
or
adc
adc
loope
dec
test
pop
(bad)
clc
lahf
sub
push
xchg
icebp
adc
jns
pop
dec
dec
xchg
mov
mov
sbb
jl
sbb
(bad)
pop
lods
sti
imul
scas
or
retf
int
inc
pop
cmp
dec
xor
mov
sub
or
jge
retf
xchg
(bad)
jl
imul
push
repz
mov
aaa
add
enter
jnp
xor
stos
test
stc
cmovge
push
loopne
pusha
lods
mov
in
xor
lahf
jns
call
icebp
cmp
xor
shl
lods
(bad)
mov
adc
cmp
mov
and
movs
push
and
movs
pop
and
cld
aas
add
inc
call
js
inc
mov
xor
retf
xor
shr
inc
rcl
push
fist
fcom
adc
mov
and
shl
fimul
sub
or
and
jae
lahf
mov
ror
scas
jb
xchg
stos
jmp
stos
push
or
mov
sbb
imul
mov
cld
sbb
push
jge
sub
mov
add
push
xor
addr16
cmps
addr16
repnz
mov
push
pusha
in
cmp
outs
sbb
out
xor
into
fdivr
shr
call
or
add
test
push
jle
sar
or
sbb
cld
mov
out
cmp
ins
jp
mov
pop
ret
add
and
cwde
lahf
inc
in
aam
mov
test
dec
push
sub
push
mov
mov
mov
push
stos
dec
clc
outs
dec
pusha
test
dec
jbe
xor
popa
ret
ret
movs
daa
and
in
dec
ins
shl
push
sbb
hlt
push
adc
clc
add
dec
jecxz
test
jbe
mov
shl
sub
leave
xor
out
retf
jno
sar
and
je
popa
inc
(bad)
int
lods
aam
nop
sub
or
das
or
arpl
push
test
xchg
add
shl
setno
xchg
cvttps2pi
pop
out
es
xor
or
lods
xor
xor
(bad)
nop
jmp
(bad)
dec
test
stc
pop
inc
xchg
jle
retf
out
mov
push
mov
jl
wrmsr
add
rep
mov
jg
adc
or
jl
add
popf
xchg
nop
push
cdq
add
jae
bound
jp
aam
movs
dec
adc
cdq
mov
push
mov
ret
fsub
push
push
rcl
sbb
in
pop
lods
ret
lods
add
mov
rcl
push
(bad)
mov
jmp
dec
stos
xchg
jbe
lahf
mov
dec
or
and
test
xchg
cld
cmp
cmp
sub
and
ret
into
inc
add
or
mov
inc
cmp
iret
and
fs
int
pop
fnstsw
out
cmc
in
jbe
cmp
cmp
push
cmc
and
push
lods
loope
sbb
or
stos
ins
and
sbb
pop
mov
push
rcl
into
data16
je
je
inc
cmp
push
call
repnz
pop
jmp
push
js
jp
hlt
into
jmp
out
lds
dec
fs
je
inc
inc
push
repz
dec
dec
adc
leave
add
jo
test
mov
std
mov
jg
adc
add
test
int3
(bad)
enter
push
fsin
push
outs
adc
pusha
inc
jno
add
jnp
pop
cmps
std
sbb
lods
ss
(bad)
movs
or
push
jne
test
dec
ins
jp
mov
(bad)
xchg
push
xlat
hlt
and
jne
dec
mov
jne
ret
(bad)
clc
rcr
mov
(bad)
daa
cdq
jnp
mov
jbe
mov
adc
outs
xor
push
and
and
mov
fwait
mov
scas
and
jbe
pusha
arpl
xchg
mov
sti
and
out
repz
imul
or
xchg
imul
cmps
or
rcl
fiadd
in
iret
xchg
sub
sbb
inc
hlt
cmp
arpl
mov
push
(bad)
add
inc
mov
adc
push
sbb
cmps
xor
dec
dec
test
dec
xlat
dec
int
pop
push
pop
push
mov
cmps
pop
test
fadd
std
lds
sub
mov
fild
xor
rep
popf
sub
outs
xchg
push
imul
lods
leave
je
add
inc
cmp
jecxz
xor
hlt
popa
movs
mov
fmul
ret
aaa
fst
sbb
adc
sahf
retf
ss
mov
into
fs
add
mov
sub
scas
add
jb
pop
add
push
jl
fsubr
dec
(bad)
std
and
test
lea
loopne
imul
cmp
popf
ds
jmp
lea
xchg
test
hlt
xor
xchg
imul
(bad)
and
xlat
mov
push
push
outs
sahf
aaa
adc
or
ror
sbb
cmp
mov
pusha
pop
fwait
jnp
sahf
add
mov
popa
inc
dec
and
mov
inc
lds
mov
out
or
das
mov
out
test
inc
out
iret
pop
aad
nop
mov
xor
call
adc
dec
xor
lods
lods
or
icebp
out
call
retf
repnz
and
mov
sub
in
aas
mov
jmp
stc
mov
sub
adc
das
mov
(bad)
sar
retf
imul
pop
or
add
mov
call
loopne
sbb
mov
mov
jp
ins
pusha
rcpps
in
add
movs
inc
mov
les
ins
push
leave
(bad)
retf
mov
or
dec
scas
and
or
xchg
adc
or
xchg
mov
pop
xchg
rcr
adc
jns
rcr
nop
mov
or
or
dec
jns
pop
push
add
repnz
jl
mov
pop
cmps
add
sar
ja
xor
fcomp
pop
test
or
xchg
push
xchg
imul
xor
shl
xchg
pop
(bad)
imul
xlat
fcmovnbe
and
and
sub
jg
add
pop
xor
and
push
lahf
push
xor
outs
ss
mov
jmp
je
jmp
jge
shl
imul
call
dec
aad
cmp
stos
or
or
dec
(bad)
lock
sbb
jg
mov
lods
(bad)
mov
aad
ret
push
js
xchg
in
add
mov
imul
adc
add
(bad)
sets
add
lock
push
aam
ins
cmps
aaa
jg
cmp
sbb
rol
push
sub
mov
outs
aas
sub
test
cmps
sar
xor
xlat
gs
adc
or
adc
(bad)
shl
xchg
mov
sub
(bad)
cmp
outs
sbb
and
mov
mov
cmc
rcr
lds
rcl
mov
mov
dec
xor
push
stc
jno
push
lods
jo
push
(bad)
jg
rol
sbb
xchg
in
pop
xor
xor
mov
into
mov
cmp
lea
push
fidivr
cwde
pop
sbb
enter
shr
sub
aaa
movs
cmp
sub
pop
sahf
mov
jmp
js
inc
loope
(bad)
push
add
jno
jns
add
ds
jmp
or
ds
sbb
in
cdq
or
push
shl
dec
fdivr
es
rcr
cli
inc
(bad)
sbb
(bad)
sub
je
retf
jmp
cli
outs
mov
shl
jb
cmps
push
jp
mov
mov
push
inc
in
mov
inc
dec
jl
xor
mov
push
mov
rol
sbb
data16
fs
mov
hlt
fnstsw
xor
ret
fcom
loope
stos
xor
jp
fsub
fnsave
movs
xor
into
sub
test
fisttp
push
adc
test
and
ss
jp
pusha
sbb
jecxz
scas
xor
cld
push
enter
outs
xor
shr
lea
stc
out
lahf
jge
(bad)
mov
pop
idiv
fld
xlat
pop
mov
dec
sub
sbb
cwde
xor
mov
les
cmp
push
inc
pop
jns
jbe
inc
sbb
(bad)
icebp
or
es
mov
scas
adc
sub
call
inc
in
loope
add
adc
std
dec
outs
push
icebp
xchg
or
pop
imul
repnz
jbe
push
pop
adc
arpl
fnstsw
aaa
clc
xor
popf
push
mov
jno
ret
xchg
sbb
mov
jecxz
cmps
in
mov
popf
dec
xlat
pop
mov
ds
and
aaa
ja
out
push
xchg
imul
fidiv
push
loopne
and
sbb
shl
(bad)
fucomi
out
ins
xchg
imul
xor
add
mov
push
mov
mov
mov
cmc
xor
ficom
xchg
mov
lea
scas
stos
mov
push
or
dec
pop
xor
add
scas
mov
rcl
dec
in
ret
cmp
sahf
add
(bad)
xchg
mov
adc
mov
ret
ss
xor
xor
inc
jge
rcl
push
cmps
dec
mov
int3
mov
xchg
dec
add
push
and
adc
pop
jne
pop
and
mov
rcr
lock
fs
imul
rol
pop
cmp
pop
dec
jo
cmps
in
repz
fld
or
inc
scas
mov
xchg
jg
pop
cli
neg
dec
xchg
shl
mov
sbb
cmc
push
push
test
sub
mov
and
out
sbb
or
xor
mov
adc
xor
dec
sysret
cdq
or
int3
jp
and
and
dec
dec
and
cli
jnp
jge
inc
data16
xchg
jp
mov
pushf
out
cmps
imul
dec
cmp
dec
sti
push
sub
loopne
loop
aas
rcl
dec
mov
shl
and
cmp
push
mov
call
or
mov
jle
mov
mov
out
mov
clc
and
shl
sbb
repz
push
adc
xchg
shl
mov
push
repz
push
pop
ds
push
adc
stos
add
fcmovb
jbe
retf
pushf
xor
jl
(bad)
cmp
in
arpl
fisubr
int
lahf
in
xchg
leave
bound
call
sbb
in
arpl
add
adc
inc
or
(bad)
dec
jmp
mov
out
out
packuswb
movs
pop
stos
jns
xchg
pop
out
ins
or
adc
jge
pop
and
shr
sub
sahf
push
sub
xor
cmps
adc
shl
adc
jmp
push
mov
sub
cmp
push
int3
hlt
cmc
int3
popf
pop
jp
shr
mov
cmc
fimul
outs
pop
jns
mov
dec
adc
ret
sub
outs
inc
lea
push
inc
(bad)
in
(bad)
mov
jmp
mov
lea
xor
repz
test
retf
xchg
mov
jae
add
or
stos
mov
in
mov
mov
out
in
or
nop
aad
xchg
jg
in
dec
imul
xchg
jmp
jp
or
js
mov
int3
pop
mov
imul
fs
xchg
leave
mov
or
aas
leave
retf
jl
inc
sub
aaa
sub
idiv
jnp
push
ss
xor
mov
jbe
mov
stos
stos
aas
jl
or
inc
call
hlt
imul
mov
xor
mov
and
jl
lods
fadd
push
fmul
jmp
or
jbe
rcl
xor
push
mov
(bad)
cmps
jge
jno
adc
inc
les
adc
loope
dec
xchg
std
outs
jecxz
fistp
es
stc
shl
scas
push
sbb
pop
sbb
leave
cmp
nop
shl
(bad)
jae
and
mov
out
ror
mov
sbb
test
cld
sub
js
push
fistp
imul
inc
test
mov
mov
mov
ja
leave
std
adc
ror
pop
ret
lahf
inc
and
xor
fimul
pop
pop
jo
mov
loop
bnd
add
pop
sub
pop
pop
cmp
xchg
jge
fistp
scas
jmp
outs
xor
rcl
cwde
out
or
rcl
mov
out
mov
pusha
or
and
(bad)
(bad)
in
aas
xor
(bad)
in
pop
mov
loope
aas
mov
fdivr
test
fwait
movs
push
cli
scas
repnz
jmp
int
(bad)
cld
xor
mov
stc
(bad)
xor
xlat
jmp
outs
sti
pop
inc
jno
fldcw
es
cmc
retf
mov
sti
ficomp
mov
jo
jmp
push
aaa
add
movs
pop
mov
xchg
inc
ror
idiv
movs
(bad)
mov
mov
mov
lods
inc
add
mov
add
mov
test
aas
lods
aas
lahf
mov
or
dec
and
inc
gs
cmps
pop
out
mov
out
mov
and
pop
mov
cmp
movs
and
cdq
jns
sub
mov
ins
clc
mov
push
in
repz
lods
fldl2t
repz
add
clc
mov
or
int3
out
mov
jns
test
icebp
(bad)
rcl
push
jns
hlt
lahf
call
outs
dec
mov
xor
cmp
stc
pop
mov
std
or
mov
mov
jl
jecxz
xor
daa
jp
xor
cmp
repz
gs
fs
pop
xor
push
pop
cli
stos
add
jecxz
mov
into
push
jo
rcr
adc
(bad)
adc
adc
inc
push
hlt
test
outs
stos
mov
stos
lds
xor
mov
retf
test
js
sub
pop
ins
push
pop
mov
add
mov
and
push
fadd
ins
test
aam
repz
sub
xor
cmp
jecxz
jbe
dec
fs
inc
sbb
mov
out
call
div
bound
and
inc
loope
into
jmp
fcmovbe
clc
xor
xchg
dec
arpl
mov
fwait
in
push
fwait
jmp
shld
mov
and
cmp
pop
lds
stc
cmc
std
xchg
stos
xchg
sub
jle
cmp
dec
test
aad
test
mov
stc
gs
or
scas
add
and
jo
nop
fstp
js
cmps
xchg
mov
xor
cmp
add
xchg
mov
cmps
cmp
fld
push
sbb
adc
mov
inc
and
jbe
fistp
xchg
push
ds
dec
or
and
test
aam
mov
adc
xor
cmp
mov
outs
call
mov
pop
rcl
pop
out
popa
dec
fmul
jmp
inc
stos
sbb
sbb
jne
enter
jo
ror
nop
mov
lahf
(bad)
mov
mov
jmp
ins
xor
movs
test
cmp
das
retf
pop
mov
xchg
in
rcr
cli
inc
xor
cli
in
ret
sub
in
icebp
inc
mov
or
mov
shl
daa
pop
pop
lahf
adc
into
lea
mov
add
pop
data16
stos
mov
cmps
mov
dec
jae
ror
movs
jg
int
pop
mov
arpl
inc
cmp
xchg
ds
jmp
icebp
jl
mov
push
jecxz
sub
or
xchg
add
jmp
xlat
xchg
clc
inc
pop
movs
sub
pop
adc
inc
inc
stos
ret
das
xchg
pop
dec
mov
inc
mov
push
mov
std
rcr
aam
rol
pusha
xchg
rol
iret
pop
and
mov
mov
int
std
add
shrd
or
dec
mov
adc
movs
gs
out
xchg
int3
xchg
aaa
jbe
sahf
jno
repz
sbb
idiv
or
inc
inc
in
mov
cmp
adc
out
into
out
out
jae
mov
test
ficomp
and
(bad)
and
(bad)
push
lahf
mov
sar
xchg
adc
pop
mov
inc
sub
jg
sahf
xchg
dec
inc
mov
or
sub
sahf
inc
cs
adc
or
xor
mov
lahf
nop
push
and
retf
cmps
and
gs
jmp
setbe
mov
stos
or
ret
mov
add
mov
lahf
push
fwait
sar
inc
test
ret
inc
and
aaa
add
or
xchg
pop
shr
std
mov
xor
in
fwait
dec
cmp
and
xor
and
fwait
in
ds
mov
test
pop
jo
fs
sar
pop
imul
cmp
cmp
aas
inc
cmp
cld
movs
mov
mov
xor
retf
inc
adc
pop
push
or
mov
inc
pop
cs
sub
es
std
mov
xchg
inc
adc
pop
movs
sbb
sbb
retf
adc
loop
aas
cld
cmp
stos
sbb
xchg
jecxz
or
clc
push
ss
push
aad
stc
xor
lock
test
mov
push
lahf
loopne
adc
jnp
jbe
jb
int3
push
jge
jl
in
int3
inc
jnp
pop
dec
mov
outs
int
mov
xchg
in
ret
(bad)
je
pop
and
ror
cmc
xor
fcomp
addr16
lds
sub
ds
int
cmp
test
shl
lods
cmp
and
ret
dec
pop
xchg
nop
lods
jae
and
out
clc
adc
pop
gs
in
mov
add
ja
mov
idiv
or
jb
xor
sub
(bad)
jbe
xchg
outs
mov
mov
cwde
or
dec
sahf
aad
aaa
sbb
lahf
pop
outs
mov
mov
mov
xchg
jge
int3
cmps
sbb
xchg
lods
outs
mov
das
adc
outs
scas
ja
mov
xor
xor
jbe
int
pop
inc
mov
jno
add
daa
or
mov
test
rcl
daa
or
pop
pop
ret
pop
xor
mov
in
and
std
arpl
fwait
ss
out
(bad)
add
xchg
push
ret
sbb
data16
cmc
out
mov
shl
xor
inc
or
aam
movs
xor
xor
pop
add
sar
mov
ror
lock
pop
lds
pop
paddusb
pop
add
adc
mov
xor
inc
adc
and
fst
(bad)
mov
mov
mov
and
xor
lahf
cmps
sub
jmp
pop
(bad)
arpl
outs
fnsave
fisub
int
jne
jmp
call
mov
out
loopne
call
lods
(bad)
addr16
lods
mov
sbb
(bad)
mov
sbb
push
cmp
mov
aas
push
mov
into
pop
repz
pop
jmp
push
test
sbb
out
sbb
mov
cmp
mov
mov
data16
repz
(bad)
xchg
repnz
mov
or
mov
ret
add
add
mov
inc
cwde
or
cdq
(bad)
and
sub
test
cs
aas
fisubr
popf
xchg
mov
retf
std
mov
arpl
sahf
fs
dec
mov
dec
mov
retf
sbb
and
pop
add
cmps
repz
inc
out
mov
add
out
adc
mov
mov
outs
mov
xchg
es
pop
mov
dec
mov
sbb
pop
(bad)
clc
(bad)
mov
mov
mov
mov
mov
xor
sti
(bad)
je
std
xor
lock
(bad)
and
inc
fisub
sub
retf
adc
lods
imul
xchg
in
mov
xor
inc
addr16
jge
pop
sub
bound
dec
and
lahf
icebp
call
adc
or
retf
imul
cmps
btc
adc
out
mov
pop
sub
pusha
push
push
fsub
xchg
xor
push
add
imul
lods
push
xchg
mov
sti
mov
and
into
fidivr
inc
cmc
inc
xor
mov
repnz
pop
jns
jp
faddp
inc
mov
dec
add
xchg
lahf
cmps
xchg
ja
inc
ret
int3
ja
cmp
leave
sub
mov
dec
gs
xor
mov
enter
pop
outs
adc
div
jne
push
adc
sub
mov
xor
or
mov
ror
add
lds
mov
dec
retf
jecxz
xor
sub
ins
test
outs
(bad)
shl
push
popf
inc
ret
mov
xchg
mov
mov
jo
fwait
sbb
pop
out
add
push
int
mov
mov
mov
cmps
aaa
ret
adc
(bad)
clc
fnstenv
or
jns
cmc
sahf
pop
test
idiv
dec
aas
xchg
inc
daa
or
addr16
jae
neg
lods
or
mov
and
adc
nop
sub
imul
sub
inc
adc
cmc
cli
jp
arpl
cmp
es
nop
shl
sahf
wbinvd
cld
push
xchg
rol
mov
cmp
sbb
test
or
mov
xor
dec
gs
call
dec
ret
sub
stos
mov
and
jne
inc
inc
xor
shrd
push
hlt
clc
sub
push
dec
add
mov
mov
std
cwde
push
in
loop
mov
fldenv
mov
mov
inc
adc
(bad)
dec
(bad)
ja
adc
mov
bound
(bad)
icebp
in
fild
push
xor
cdq
fidiv
in
imul
adc
push
jecxz
sbb
pop
out
add
les
xchg
dec
push
fidivr
mov
sbb
mov
aad
inc
ficom
mov
inc
xchg
xchg
mov
inc
dec
mov
jge
and
scas
and
cmp
xlat
pop
shl
mov
mov
stos
cmc
out
jg
and
inc
push
sbb
nop
mov
outs
rol
jbe
xchg
push
xor
mov
inc
add
pushf
fdivr
push
push
xchg
and
add
popa
adc
mov
js
mov
shl
pop
scas
mov
icebp
test
hlt
dec
xchg
(bad)
or
jo
push
push
sub
sub
bound
ss
shr
inc
push
sbb
jmp
and
and
loopne
jle
push
jmp
sub
jle
repnz
fmul
dec
push
enter
dec
stos
mov
and
imul
add
xchg
jmp
enter
or
popa
ins
cli
xor
jns
cld
push
hlt
push
lahf
xchg
add
pop
daa
jge
xchg
and
mov
xchg
lds
cmp
dec
inc
dec
mov
cmp
movs
push
mov
pop
int
repz
mov
xor
mov
or
test
sbb
jae
xor
iret
pusha
cwde
cdq
cmp
loope
les
sti
fcom
push
cwde
or
mov
(bad)
imul
mov
loopne
out
xor
test
sbb
add
cmps
mov
jp
retf
(bad)
stos
sti
jg
out
jmp
mov
shl
push
jp
mov
mov
xchg
bound
mov
aad
mov
sub
push
sbb
push
adc
pop
mov
jmp
sahf
in
nop
inc
pop
call
xchg
les
mov
xchg
mov
mov
fist
sbb
rol
test
or
inc
fidiv
jns
add
bound
int3
mov
mov
idiv
jb
fucompp
mov
or
cmp
clc
adc
mov
mov
cmp
int3
jmp
sub
dec
test
pop
fmul
sbb
fstp
jge
jp
cmp
jae
jne
(bad)
xor
call
dec
xor
out
in
pushf
sti
xor
faddp
push
xlat
or
dec
mov
sub
(bad)
out
dec
cmp
mov
sub
inc
cmps
movs
mov
and
call
dec
cld
in
push
(bad)
(bad)
sbb
test
aaa
(bad)
push
adc
sti
pop
sbb
out
sbb
jns
mov
push
mov
cs
data16
loopne
sbb
sahf
dec
dec
js
cs
les
lds
pop
(bad)
mov
and
inc
test
rcr
inc
xchg
inc
pop
leave
jge
popa
popa
rcr
mov
sbb
adc
or
fild
out
jns
fnsave
jle
xchg
and
cmps
loop
pop
js
inc
xchg
into
int3
sub
sub
imul
pop
ds
in
sub
cmc
stos
jno
push
inc
fcomp
jecxz
sbb
shl
adc
bound
mov
sbb
sub
out
and
jnp
sbb
ss
arpl
ret
xchg
sub
pop
push
jnp
pop
call
js
(bad)
sub
dec
add
mov
mov
pusha
cmp
or
pop
mov
adc
movs
mov
adc
call
out
lods
mov
dec
mov
ds
test
fisttp
jmp
sti
cmps
inc
inc
jb
mov
mov
push
mov
push
je
imul
mov
mov
call
js
inc
fbstp
mov
sbb
push
cmp
cwde
daa
jo
fbstp
cmc
fdivr
cmc
inc
rcr
call
cmp
test
loop
jno
test
xchg
jb
cmp
aaa
repnz
push
(bad)
fadd
fwait
call
dec
aaa
retf
aam
and
and
cld
mov
adc
test
dec
scas
mov
cli
cwde
test
iret
ja
ins
lods
or
jbe
jae
rcr
push
and
js
ss
sub
into
iret
sti
dec
cmp
gs
adc
mov
add
sti
call
aad
stc
jne
pop
call
mov
adc
xchg
mov
mov
cmps
push
inc
inc
or
iret
xchg
or
and
movs
jge
adc
inc
lds
fcom
mov
popf
ret
ret
icebp
sbb
pop
nop
pop
dec
lods
xlat
xlat
xor
iret
in
(bad)
jmp
mov
ja
fimul
cwde
inc
out
xchg
pop
push
mov
inc
jo
sti
cmp
cmp
movs
cdq
daa
xor
cld
fadd
jg
adc
sub
gs
cmps
push
(bad)
jmp
in
rol
scas
adc
cmp
cmc
pop
enter
cli
out
jno
or
scas
xlat
(bad)
xchg
push
test
loop
xchg
test
fadd
shr
mov
clc
mov
and
cmc
dec
cdq
ds
clc
inc
lods
jns
das
iret
mul
ss
aam
push
mul
jne
shl
aaa
cmc
ficom
adc
sahf
call
push
ficom
in
adc
pop
repz
sar
push
ret
inc
stos
jno
mov
cmp
push
call
out
cld
mov
call
outs
or
aad
mov
dec
mov
lods
enter
xor
pop
xchg
sub
mov
xor
jg
push
jmp
fwait
aaa
aaa
add
add
jne
cli
jge
leave
pop
shr
(bad)
ror
ds
clc
cmp
dec
fwait
push
out
nop
jae
sub
dec
inc
aam
xlat
push
sbb
pop
cmps
jne
xchg
pop
das
data16
or
popa
cmps
or
mov
in
jnp
adc
xchg
hlt
ins
aam
arpl
arpl
gs
xchg
icebp
data16
int
repnz
mov
les
and
ja
push
shl
ret
push
js
add
ret
and
out
mov
cwde
cmp
in
sahf
std
pop
aad
sub
dec
daa
mov
jmp
mov
shl
add
shl
mov
rcl
pop
sub
sahf
adc
xor
inc
xor
add
ins
sbb
ja
cmps
in
xchg
imul
ret
mov
je
ror
imul
mov
sbb
fst
js
and
les
sub
add
(bad)
pop
cli
push
mov
aaa
xchg
pop
jmp
mov
xchg
xchg
ss
push
mov
inc
dec
imul
xor
jns
jge
mov
dec
sub
test
sbb
jp
mov
(bad)
(bad)
ret
xchg
iret
fmulp
inc
sub
dec
jp
xchg
jl
push
sbb
jle
cmps
ja
arpl
das
cmps
inc
mov
mov
jge
outs
push
mov
mov
fwait
xchg
adc
or
adc
imul
stos
fdiv
mov
push
fucomp
popa
pop
fnsave
xchg
(bad)
and
or
lods
cmps
in
push
add
repnz
leave
mov
rol
sub
jnp
xor
jecxz
cmps
(bad)
mov
pop
inc
sbb
inc
sbb
or
xchg
test
pop
or
fld
lock
dec
rcr
push
push
xor
aad
and
sbb
dec
jnp
(bad)
jae
adc
push
ja
movs
retf
cmp
test
pop
fstp
(bad)
jg
pop
clc
jbe
js
mov
and
lods
lock
in
std
pop
pop
stos
loope
daa
into
jae
and
xchg
es
dec
hlt
sbb
cs
sub
sbb
in
iret
sbb
leave
cmp
push
push
nop
icebp
push
sahf
push
in
loopne
loop
out
xchg
jmp
fsubr
adc
or
out
sbb
leave
or
sub
clc
test
jle
and
imul
push
cmp
fdiv
repz
into
iret
cld
pusha
cmp
outs
lods
neg
int
mov
push
out
or
div
cmp
adc
mov
hlt
(bad)
sbb
sbb
jae
cmps
outs
xadd
push
xchg
inc
jg
xor
add
mov
mov
add
mov
sbb
cmp
pushf
sbb
out
mov
stc
mov
push
int3
pop
test
mov
add
add
jecxz
dec
jmp
dec
jmp
js
in
dec
test
out
movs
cmp
rcl
sbb
mov
arpl
push
cmp
add
or
fild
jns
and
and
xchg
inc
sti
pop
call
aaa
adc
push
shl
jmp
lds
xchg
jb
cmp
mov
movs
push
or
fist
mov
adc
out
cmps
fcomp
mov
xchg
and
xchg
or
push
mov
pop
lods
sahf
out
and
or
mov
mov
data16
xchg
sbb
jnp
sbb
mov
out
and
mov
aas
add
mov
sahf
jl
lock
cs
mov
arpl
in
dec
sub
js
or
add
jg
push
sub
pushf
jge
sbb
push
popf
xlat
and
inc
inc
les
push
mov
cmp
pop
je
lock
add
(bad)
and
sbb
or
xchg
cmps
mov
je
shl
ficom
pop
(bad)
push
jp
mov
stos
mov
pop
mov
add
sbb
fstp
cmp
sbb
or
faddp
cmp
mul
fsubr
ret
mul
or
mov
mov
rol
add
jb
pop
(bad)
out
or
lock
sti
imul
cmp
and
mov
push
adc
xchg
ins
mov
mov
mov
(bad)
jne
push
cld
push
and
add
jp
add
jne
adc
addr16
scas
dec
xor
jl
xchg
sar
lahf
(bad)
cmp
dec
mov
inc
push
test
arpl
sub
sahf
cwde
mov
or
and
leave
sbb
pop
hsubpd
lods
pop
push
push
or
cmp
cld
add
push
ins
fnstenv
pop
jle
cmc
popa
call
pop
lods
js
je
ret
addr16
push
jecxz
add
mov
mov
movs
inc
adc
daa
adc
add
sub
xchg
jg
inc
outs
and
stos
sub
xchg
sub
(bad)
(bad)
enter
test
pushf
cwde
(bad)
push
inc
ss
or
adc
popf
jns
ror
(bad)
inc
and
inc
popf
add
retf
mov
inc
jb
lds
push
xchg
jno
lock
popf
aad
xchg
popa
and
cdq
leave
arpl
aad
mov
sub
inc
(bad)
lods
arpl
in
xchg
mov
mov
inc
repz
out
std
imul
rol
test
imul
add
cmp
push
mov
popa
or
and
fwait
or
mov
inc
add
loop
cld
xchg
sar
and
jae
pop
(bad)
cmp
(bad)
popa
jae
sbb
repnz
mov
mov
adc
pop
jbe
inc
fsub
test
dec
xchg
iret
cmp
adc
int3
stos
retf
jmp
dec
fld
mov
rcl
test
rol
mov
pop
xchg
mov
jno
mov
inc
xchg
stos
and
lea
adc
jmp
mov
and
repz
push
je
xchg
inc
mov
or
clc
out
hlt
xor
mov
(bad)
fcmovb
loopne
and
daa
xchg
mov
push
adc
loope
sub
out
xor
icebp
dec
js
pop
cli
push
inc
and
pop
outs
dec
fstp
mov
pop
test
mov
and
add
cmc
xchg
jnp
pop
cmps
out
mov
rol
push
sahf
mov
stos
int
pop
cmp
push
inc
aas
add
repz
test
xor
mov
in
mov
jmp
jne
sub
stc
mov
sar
add
pusha
xchg
ficom
or
push
adc
rol
xchg
lods
xor
adc
push
dec
daa
inc
or
icebp
inc
fcomp
ja
sbb
in
sti
mov
xchg
adc
jmp
lods
jmp
jns
int
mov
aas
outs
inc
cmp
jne
mov
repnz
inc
pop
dec
iret
pop
dec
(bad)
jle
fld
push
lods
clc
add
jp
jmp
and
(bad)
pushf
das
mov
push
add
or
inc
mov
xor
outs
jle
repnz
scas
sub
push
cmp
popa
shl
fwait
test
ficomp
mov
mov
cmp
gs
(bad)
xchg
cwde
mov
inc
xchg
xchg
in
mov
sub
push
shl
adc
pmaddwd
add
int3
leave
jge
push
xor
imul
add
and
stos
adc
imul
aam
xor
bound
pushf
in
int
es
pop
and
es
les
cmp
(bad)
or
mov
add
and
lock
and
sahf
xchg
les
dec
lock
xor
mov
stos
scas
xlat
jno
out
out
pusha
aaa
push
sub
pop
jmp
lods
pop
(bad)
sbb
out
add
xor
int3
mov
mov
shl
into
int
push
push
mov
mov
pop
and
jb
loope
out
sub
jbe
(bad)
ja
cmp
out
stos
jo
mov
lds
jp
xor
adc
pop
push
data16
mov
mov
inc
stc
push
adc
imul
clc
dec
sub
or
sub
xchg
jmp
mov
pop
dec
dec
pop
cmps
imul
add
pop
push
icebp
jne
fs
das
mov
xchg
cld
fmul
out
adc
adc
loopne
mov
and
imul
retf
fdivr
add
dec
pop
sahf
fwait
or
out
jae
or
fsubp
sti
aas
stos
jmp
test
adc
popa
mov
movs
(bad)
cdq
add
leave
mov
dec
push
cmp
in
call
stos
sub
in
ds
pop
stc
and
mov
xchg
mov
pop
mov
mov
cmp
jmp
jb
add
cmps
rcl
mov
jo
in
sub
test
mov
jle
push
in
(bad)
aad
clc
mov
test
sbb
loope
push
push
add
sbb
mov
stos
out
in
lods
dec
mov
cmp
dec
pop
push
push
ret
fdivr
adc
js
fcmovnb
and
aad
adc
pop
pop
cli
popf
imul
sbb
sub
ins
xchg
pop
jecxz
pop
out
cmps
push
shl
mov
mov
sub
aaa
dec
je
mov
pop
xor
push
xchg
popf
arpl
pop
push
cmps
test
push
push
pop
sbb
ret
jge
or
push
div
jg
aad
popa
sub
mov
cdq
mov
call
and
sti
fbld
dec
rol
mov
inc
add
loope
add
loopne
gs
aaa
gs
into
ins
cmps
push
dec
sub
ins
xchg
fimul
in
js
dec
dec
inc
inc
rcl
inc
adc
imul
iret
pop
adc
(bad)
xor
std
(bad)
cmp
stos
es
mov
mov
nop
ret
fld
mov
push
or
adc
dec
mov
jl
add
cmp
hlt
iret
push
std
add
sahf
or
rcl
push
stc
jecxz
out
cli
shl
jecxz
xchg
adc
dec
or
fidiv
mov
fsub
and
mov
sub
sbb
ficom
out
aam
scas
xchg
or
ficomp
xchg
ins
fcomp
mov
xchg
mov
sub
cmp
mov
cld
cmp
iret
cmp
ds
jp
sbb
push
lahf
push
shld
jbe
rol
pop
push
xor
(bad)
(bad)
xor
xchg
mov
sbb
test
inc
gs
pop
cmp
out
mov
push
inc
outs
mov
(bad)
pop
add
cmp
out
push
stos
pop
xor
sbb
call
imul
xchg
cld
dec
mov
sub
idiv
inc
mov
les
push
inc
ss
inc
rol
xchg
dec
jle
jp
pop
rcl
cli
push
cli
sub
add
sahf
mov
or
and
loopne
rol
add
mov
sbb
hlt
inc
cmp
movs
jp
cld
pop
jnp
fnsave
xor
mov
pushf
pusha
in
stos
test
stc
xor
sub
xchg
mov
fbld
jbe
cwde
fild
rcl
inc
dec
mov
retf
mov
add
into
xchg
mov
loope
je
mov
inc
sbb
test
push
(bad)
mov
mov
xlat
jne
fnsave
mov
icebp
pop
ror
ror
pop
ret
hlt
pop
xchg
test
inc
jle
sti
sbb
scas
mov
retf
outs
xchg
xor
lods
enter
int3
ja
call
cmp
cmp
sbb
lds
out
mov
mov
push
aaa
ins
cmp
and
mov
push
leave
push
xor
std
or
cmc
js
adc
ins
popf
push
ds
(bad)
retf
int
add
jo
and
sub
sar
imul
xchg
cmps
mov
cmp
jmp
sbb
add
dec
mov
jnp
pmulhuw
js
loope
sbb
push
sub
sbb
jl
mov
aad
xchg
mov
popf
lods
add
and
hlt
outs
jnp
int
loope
dec
inc
scas
dec
xchg
ins
xor
aas
push
movs
mov
push
mov
call
pop
fsubr
sar
lods
xchg
and
adc
sbb
cld
data16
cmp
mov
cli
call
jo
(bad)
cmc
inc
pop
imul
mov
xchg
int
push
xchg
aaa
cli
test
hlt
or
outs
arpl
mov
push
cmp
pop
les
jns
push
pop
out
sahf
mov
xlat
in
pop
jmp
pop
rcr
into
pusha
das
mov
dec
out
mov
mov
pop
rcl
div
mov
jg
sub
mov
or
ret
push
or
mov
inc
push
(bad)
lahf
sub
nop
adc
sar
mov
xlat
sub
out
fcom
nop
pop
push
inc
add
mov
push
data16
in
popa
lahf
pop
mov
pop
mov
cwde
mov
push
xchg
mov
jb
xchg
jbe
xchg
imul
in
mov
sbb
es
daa
aad
mov
(bad)
movs
xor
cld
mov
out
fild
pop
jmp
ret
xchg
lock
push
push
sub
lahf
xchg
pop
push
movs
sub
xor
das
mov
push
ficomp
and
fisubr
xor
pop
push
push
xchg
cs
test
pusha
xor
mov
pusha
cmps
in
adc
scas
xor
push
or
in
ficom
xlat
jae
xor
lods
aas
call
adc
xor
jbe
add
in
pop
retf
mov
cld
jae
popa
xchg
mov
or
(bad)
imul
lahf
outs
lds
push
pushw
jae
sbb
dec
adc
jo
jl
mov
push
es
fiadd
push
(bad)
iret
dec
dec
je
scas
dec
ins
push
cdq
popf
jge
mov
(bad)
sbb
test
mov
arpl
or
int
inc
test
pop
mov
xchg
sar
(bad)
dec
cmp
(bad)
out
fbstp
and
out
sbb
mov
lea
test
sahf
jae
cmps
stos
push
cmps
mov
into
jo
in
add
ins
or
adc
mov
cld
test
xor
mov
ins
repnz
(bad)
jo
aas
fist
dec
dec
xor
pushf
(bad)
cmc
shl
inc
cwde
cmp
imul
test
sub
pushf
push
xchg
ins
aad
pop
enter
dec
mov
inc
aam
jg
stos
pop
fadd
test
push
adc
cdq
sub
pop
or
in
aaa
xchg
cmp
aaa
test
push
sbb
pop
sbb
mov
pusha
out
xor
stc
fucomip
outs
mov
xchg
bound
push
fs
add
sub
pop
mov
sti
enter
cmps
outs
jo
jno
mov
xchg
cmp
adc
cmps
cdq
inc
sbb
fdivr
jl
inc
aas
fdivr
xchg
bound
hlt
sbb
shr
sbb
data16
xchg
xchg
dec
pop
pop
or
xor
in
sub
test
pop
mov
lock
add
outs
mov
(bad)
pop
mov
mov
push
ret
(bad)
fwait
sub
fisttp
(bad)
jb
sbb
stc
push
sub
sub
mov
cli
sub
jbe
jns
dec
les
sub
mov
cs
sar
and
(bad)
enter
data16
mov
xor
mov
mov
test
hlt
fdiv
sub
mov
cmp
vpand
ret
xchg
push
adc
mov
and
int
jge
or
push
cli
sbb
inc
sub
arpl
loope
sub
mov
(bad)
mov
(bad)
mov
sbb
(bad)
and
call
dec
cs
jmp
out
loop
in
scas
push
jge
xor
cmps
pop
mov
and
fucomi
pushf
lods
jge
mov
pop
rcr
or
ret
and
cdq
push
into
bound
mov
test
pushf
push
dec
leave
push
xchg
mov
nop
and
inc
fs
loop
jae
test
icebp
leave
jns
test
dec
loopne
loopne
push
loopne
out
fidiv
xchg
mov
dec
push
sahf
es
add
ds
add
gs
inc
scas
(bad)
adc
std
sbb
cmp
out
std
jecxz
lea
sub
push
cmp
cmp
test
push
mov
loope
dec
in
xchg
scas
mov
inc
in
scas
adc
iret
hlt
ss
sub
and
cmps
mov
(bad)
shl
xchg
adc
call
mov
pusha
jmp
cmp
lock
xor
mov
iret
int
pop
sbb
dec
xchg
jbe
leave
call
por
iret
cmp
push
lods
push
scas
call
pop
and
pop
push
rol
push
fst
cld
in
mov
sbb
or
(bad)
adc
mov
adc
dec
sbb
out
movs
push
lds
inc
mov
fnstenv
inc
sbb
dec
call
xor
pop
mov
stc
dec
daa
push
inc
adc
lock
sub
shr
idiv
add
sahf
sub
in
in
mov
imul
add
adc
lock
shl
xchg
dec
cdq
mov
cmc
lock
lods
std
mov
ja
(bad)
dec
push
jg
test
(bad)
(bad)
in
ror
ror
mov
hlt
jmp
repz
xlat
ja
jge
jle
and
inc
jg
(bad)
adc
mov
mov
popa
push
add
pop
lods
mov
jp
nop
fmul
cmp
mov
mov
dec
ss
sbb
mov
aaa
xchg
jl
cld
out
push
ficom
loopne
movs
xchg
cmp
pop
mov
xchg
cmps
lds
sub
movs
xor
dec
aaa
inc
scas
aaa
pop
arpl
mov
mov
shl
dec
sar
imul
and
xor
cld
test
loop
and
pop
outs
neg
push
xchg
adc
vmulps
xchg
mov
or
aaa
cmp
push
sub
sbb
gs
jno
jp
jnp
xlat
xor
push
nop
ja
jnp
push
add
pop
imul
xchg
int3
push
es
jg
inc
xor
sahf
mov
ror
mov
cmp
xor
retf
shl
mov
xor
and
dec
jle
hlt
and
inc
push
mov
movs
out
fisttp
nop
dec
fistp
sti
mov
std
jle
pop
daa
xchg
mov
sti
stos
xor
lahf
daa
sbb
jecxz
cmp
push
sub
pop
pop
in
dec
jle
jmp
enter
in
sbb
sbb
push
ds
out
leave
pop
sbb
aas
cld
jp
fidiv
cmc
std
lahf
inc
arpl
mov
xchg
(bad)
aas
fsqrt
loop
enter
fucom
daa
cdq
ins
fstp
fisttp
stos
(bad)
in
jmp
je
sub
scas
out
(bad)
addr16
pushf
and
dec
inc
and
mov
sar
push
xchg
cmp
cdq
mov
sub
retf
push
add
mov
push
in
repnz
mov
inc
cmp
enter
mov
xchg
xchg
ret
cmp
shl
jmp
push
lods
imul
aam
jmp
lods
dec
retf
jg
push
fist
inc
lods
leave
imul
dec
xchg
scas
sbb
sbb
jl
add
jg
xchg
out
xchg
stos
daa
push
jle
sar
push
dec
fmul
mov
xchg
adc
inc
add
push
out
jo
jns
sub
pop
cs
inc
mov
adc
mov
cmps
and
jbe
sti
cli
adc
cli
push
ror
fcmovu
xchg
sub
hlt
(bad)
jbe
add
add
hlt
jge
add
xchg
enter
sub
test
ror
mov
sub
pushf
and
dec
std
and
mov
mov
mov
cld
or
aad
jno
adc
mov
in
loope
ror
fst
(bad)
int3
push
movs
xor
adc
inc
test
or
aas
imul
mov
and
dec
fwait
daa
hlt
pop
movs
fsubr
inc
add
(bad)
jmp
lahf
neg
jp
xchg
pop
cmp
fsub
and
fnstcw
mov
mov
cmp
pop
pop
pop
mov
jge
pop
xchg
imul
cmp
xor
push
dec
bound
out
(bad)
mov
loop
dec
loop
inc
sahf
imul
mov
in
push
clc
(bad)
imul
xchg
pop
add
sbb
or
inc
mov
out
mov
pop
xchg
test
scas
cld
call
(bad)
ss
dec
cmp
mov
sub
sti
mul
sub
mov
daa
mov
cmps
fwait
dec
inc
(bad)
push
and
cwde
adc
repz
bound
inc
pop
stos
mov
mov
call
mov
add
fst
nop
push
pushf
stc
fst
xchg
iret
jg
fstp
push
adc
clc
pop
push
push
ss
test
push
popa
pop
mov
sbb
inc
leave
or
les
jl
dec
sub
xor
out
loop
popa
xchg
imul
jl
push
dec
mov
xchg
mov
xchg
popf
push
pop
pop
je
and
mov
push
mov
push
jbe
mov
sub
pop
leave
and
mov
lock
mov
inc
clc
jecxz
dec
xchg
scas
xchg
inc
dec
sbb
repnz
bswap
ins
fstp
sbb
push
xchg
inc
(bad)
mov
and
shr
dec
bound
ret
ins
mov
test
sar
cmp
in
lahf
shl
jecxz
or
or
lea
or
rol
or
mov
imul
fs
loopne
sahf
push
mov
inc
jmp
movs
pop
mov
dec
push
dec
mov
lods
mov
daa
pop
clc
out
sbb
dec
xor
and
mov
mov
mov
enter
and
ja
pop
out
cmp
mov
hlt
mov
js
xor
xchg
cmp
js
dec
pop
xchg
retf
(bad)
jmp
cmp
jle
add
push
push
int
dec
inc
or
sar
jecxz
aam
jmp
pop
mov
fdiv
ret
add
jne
std
fdivr
push
xchg
mov
rep
lds
push
adc
inc
push
sbb
xchg
sub
mov
cmp
aaa
lods
add
repz
add
lahf
jmp
jbe
aad
enter
push
shr
cmps
pop
dec
cmp
stos
ret
fidiv
add
mov
adc
jl
cmps
add
pop
icebp
cld
xor
lock
xor
neg
(bad)
xor
mov
sbb
jo
and
call
popf
cmps
xchg
push
into
jae
outs
(bad)
hlt
or
sti
push
(bad)
(bad)
out
ss
or
cmc
imul
pop
mov
xchg
cld
inc
hlt
movs
jo
mov
ror
add
scas
pop
aam
cmp
or
cmc
sar
jae
xchg
dec
sbb
fs
or
enter
mov
aaa
xor
int3
repz
fadd
adc
inc
fsub
mov
dec
addr16
nop
push
stos
stos
movs
push
pop
ror
rol
dec
push
dec
aad
ficom
pop
or
aas
js
mov
sbb
mov
call
test
sub
push
mov
gs
scas
jmp
xchg
mov
jno
sub
push
arpl
push
ja
push
jb
aad
mov
mov
mov
fs
mov
push
mov
xchg
jns
inc
sub
int
enter
cmp
sbb
jmp
fadd
xchg
sub
xchg
sti
(bad)
outs
(bad)
ja
mov
cmp
jmp
adc
into
push
adc
jl
pop
fst
fwait
mov
pusha
shl
ss
jg
xchg
cmps
je
iret
(bad)
out
outs
dec
arpl
sub
test
mov
or
(bad)
jmp
dec
sbb
sti
dec
ins
fist
call
adc
out
xchg
fisttp
loop
xchg
jecxz
mov
retf
add
pop
sbb
inc
jbe
test
push
sub
mov
xor
and
pop
jb
lahf
sbb
test
xchg
outs
scas
fadd
sahf
es
icebp
mov
aam
lds
cld
imul
lods
dec
popf
ss
aaa
ins
and
push
sbb
add
fidiv
add
xchg
ss
pop
sbb
cmp
in
ins
int3
and
jmp
out
pop
cli
std
pop
adc
ins
enter
adc
imul
pop
sahf
push
aaa
(bad)
clc
stos
jg
cli
push
jb
daa
out
mov
nop
pop
jp
sub
ss
adc
stos
mov
bound
pop
movs
(bad)
rol
ds
jp
inc
(bad)
aad
push
ins
push
push
cmp
fcom
dec
les
mov
mov
adc
sub
loope
fdivrp
mov
jmp
fiadd
mov
call
cmp
dec
pop
js
push
jbe
sbb
retf
mov
jecxz
mov
sti
fwait
retf
std
fcomp
adc
and
or
pop
fcom
xor
and
test
in
loopne
pandn
adc
xchg
adc
fistp
xchg
es
or
xor
mov
xchg
mov
pop
push
ds
(bad)
adc
(bad)
(bad)
mov
(bad)
mov
jno
clc
pop
test
bound
in
enter
dec
xor
add
pop
aad
pop
aam
adc
jb
iret
push
lods
in
mov
xchg
leave
fild
mov
inc
jb
cmps
repz
sub
mov
mov
cmp
dec
mov
and
or
push
lods
xor
jnp
mov
jno
and
loope
call
mov
test
mov
aad
xchg
xchg
adc
cmp
add
sbb
dec
inc
mov
sub
jg
pavgb
in
mov
adc
imul
ins
scas
push
loope
mov
gs
sahf
das
sub
daa
std
jmp
cmp
jp
dec
jle
popa
out
sub
clc
outs
xor
mov
or
xchg
pop
push
adc
push
in
cmp
imul
mov
jnp
jle
mov
jnp
fucomi
pop
popf
mov
sbb
mov
mov
push
push
mov
cmps
iret
or
out
jmp
adc
dec
in
aas
gs
pusha
dec
pop
mov
mov
jmp
iret
test
jbe
pusha
gs
push
stc
not
jnp
div
xchg
jae
arpl
cmc
jo
sub
aad
lock
or
cli
adc
xlat
push
aas
or
and
sbb
add
add
cdq
adc
pop
nop
dec
call
popa
ret
in
cdq
mov
mov
ins
jo
das
out
out
not
xor
ja
mov
jo
cmps
pop
arpl
or
(bad)
repz
push
sar
mov
data16
loope
adc
jmp
ins
jno
js
and
test
shl
dec
out
arpl
(bad)
jge
js
xor
mov
or
dec
sbb
add
pop
sbb
fdivr
(bad)
iret
mov
cmc
push
ins
das
lea
aas
addr16
lods
shl
xor
sub
push
aam
push
jle
out
mov
push
add
(bad)
push
mov
out
call
add
sub
mov
mov
sbb
push
dec
push
cmps
pop
and
push
js
xchg
sub
mov
mov
add
mov
sbb
call
xchg
xor
je
enter
movs
add
nop
popa
jae
jmp
pop
fstp
ret
and
mov
and
sub
out
ds
jns
inc
add
shl
and
loope
adc
shr
fcomp
adc
inc
(bad)
iret
test
and
daa
jp
pop
or
aas
mov
mov
out
dec
imul
mov
xchg
sti
inc
sbb
mov
dec
fimul
fdiv
mov
mov
ins
mov
mov
push
imul
xlat
in
into
jae
inc
(bad)
pop
jg
cmc
out
shr
int
repnz
fs
xor
sub
mov
ss
into
push
js
xchg
jle
cmp
adc
cmp
mov
mov
mov
inc
xchg
pusha
sub
retf
jmp
add
out
arpl
loope
xchg
sbb
mov
and
sbb
shr
mov
mov
loopne
stos
cmp
out
inc
lock
inc
inc
or
scas
dec
cmp
cmp
sti
mov
repz
pop
jl
lds
pop
sub
cmp
push
outs
xchg
js
adc
shl
aad
jg
pop
sub
xor
sbb
in
cmp
adc
dec
dec
popa
cmps
(bad)
jns
in
pop
jmp
mov
adc
pop
add
retw
mov
and
cdq
retf
cmp
pop
push
xchg
mov
xor
shl
xor
inc
pop
cmps
push
mov
xchg
sbb
stos
fs
aas
push
sub
inc
xchg
bound
jno
jne
mov
call
pop
sbb
shl
adc
jl
imul
nop
iret
xor
mov
mov
ins
push
sub
adc
cmp
adc
xor
je
bound
and
loop
pop
ins
std
jle
jle
push
jae
repz
sti
mov
push
je
cmps
stos
cmp
dec
adc
and
mul
xor
pop
sub
leave
aas
mov
dec
or
mov
loopne
xor
pop
cmp
fwait
xchg
push
movs
dec
xchg
mov
and
add
jge
(bad)
(bad)
cmp
cmc
repnz
fs
into
cdq
ud0
xchg
xchg
mov
jg
jae
jecxz
int
jecxz
cwde
mov
test
xchg
sub
jae
je
adc
mov
inc
inc
mov
ret
shr
pop
sub
dec
adc
test
stos
lahf
push
std
inc
fwait
xor
push
jmp
pop
shl
pop
jl
cli
out
sub
push
mov
loope
sbb
(bad)
dec
addr16
aad
(bad)
faddp
mov
jns
and
inc
jne
mov
adc
loop
sub
call
retf
and
mov
add
mov
xor
mov
cmp
ret
repz
out
xchg
addr16
push
pop
int
mov
pop
pop
cli
cmps
or
imul
dec
int
scas
pop
cwde
fild
sbb
push
mov
popa
aam
dec
sub
inc
or
and
ret
sub
sbb
dec
scas
shl
jecxz
sar
xor
cmp
inc
lods
jno
stos
int
pop
sub
mov
popfw
out
cmovs
fisubr
inc
and
jle
mov
xor
dec
dec
ficomp
fst
mov
add
es
data16
cmp
pushf
xchg
sub
ds
in
cwde
shr
inc
mov
mov
imul
xor
sub
mov
nop
sbb
mov
xchg
push
jbe
jle
mov
dec
les
les
and
xor
xor
pop
jo
(bad)
jmp
pop
adc
mov
dec
xchg
xchg
adc
in
out
cmps
sub
fs
stos
or
xor
loopne
mov
xchg
jo
xchg
mov
xor
popa
aad
sub
jmp
(bad)
je
mov
ret
es
pop
jns
push
add
adc
mov
mov
inc
dec
pop
out
addr16
sub
xor
mov
fwait
rol
adc
ficom
(bad)
idiv
es
jnp
cmps
push
(bad)
xor
xor
mov
retf
clc
mov
adc
dec
lods
cmp
cmp
dec
add
repnz
call
sbb
bound
push
push
inc
jnp
dec
jle
pop
pop
push
enter
sub
fbld
pop
sub
shr
mov
(bad)
aas
jl
fadd
lea
mov
push
mov
rol
loope
mov
xchg
and
(bad)
pusha
adc
dec
icebp
dec
stos
sub
arpl
xchg
retf
movs
outs
ja
(bad)
push
test
cmp
xchg
xchg
jmp
call
mov
aaa
scas
dec
add
inc
loop
inc
cld
ficomp
addr16
inc
mov
pop
sbb
or
popf
add
mov
in
xchg
adc
and
outs
inc
jp
call
retf
inc
rcl
adc
mov
sahf
cmp
dec
(bad)
cld
cmp
xacquire
xor
out
fldcw
fwait
mov
pop
cmp
dec
pusha
mov
mov
outs
stos
js
xor
adc
jge
into
into
or
mov
jg
(bad)
les
mov
cdq
test
jl
inc
push
shl
xchg
ret
jmp
dec
pop
sub
mov
cli
jge
retf
shl
dec
fnstsw
xlat
jae
iret
hlt
pushf
dec
test
in
pop
or
pop
xor
aas
adc
(bad)
call
cld
pushf
push
xor
clc
adc
(bad)
test
sub
inc
jle
xchg
dec
pop
xor
xchg
xor
xchg
arpl
cmp
fnstenv
int3
stc
inc
sti
jb
jmp
push
pop
std
pop
inc
sub
mov
jmp
push
pop
mov
cmp
sti
xor
cmp
lock
nop
aam
ins
cmp
movs
pop
js
cmps
push
pop
nop
cmp
out
push
jp
mov
nop
pusha
lahf
dec
fsubr
fild
call
lds
xchg
aad
jb
vmovq
dec
clts
shr
in
popa
inc
dec
sahf
and
push
xlat
shl
es
mov
inc
sub
ins
leave
pusha
in
test
jnp
inc
xor
bound
je
push
pop
push
daa
icebp
sbb
adc
lods
mov
shr
pushf
or
mov
add
and
retf
dec
(bad)
cmp
mov
(bad)
lahf
inc
inc
and
jo
or
fiadd
mov
outs
mov
add
rcl
xlat
push
fwait
out
mov
mov
and
mov
jge
xchg
ror
in
inc
and
xor
mov
imul
fstp
ret
xchg
mov
pop
nop
fs
stos
sbb
mov
popa
and
jmp
icebp
push
sub
jno
cmps
xchg
test
stos
gs
or
pop
fldenv
rol
pop
clc
loopne
xchg
idiv
repnz
xchg
mov
push
cmp
xor
inc
push
fdivr
add
aam
fidiv
sub
icebp
xchg
dec
dec
fcomp
outs
fadd
inc
cmps
mov
jp
pusha
xchg
jne
nop
adc
xchg
dec
cmovae
or
pushf
mov
in
sub
cld
jnp
sub
test
sti
sahf
mov
add
push
adc
jmp
(bad)
jmp
int
inc
dec
dec
in
int
xor
push
loop
mov
mov
mov
pop
pop
ffree
mov
inc
jmp
mov
mov
pop
dec
ror
push
or
jae
into
std
jmp
sub
mov
sub
xor
sbb
sbb
aam
adc
les
ins
mov
or
jbe
enter
(bad)
(bad)
xor
imul
cdq
jle
outs
push
out
sbb
mov
in
push
xchg
push
jns
cli
mov
mul
adc
cmp
fwait
inc
mov
lea
mov
inc
add
adc
imul
lock
adc
retf
sbb
repz
xor
or
adc
pop
jecxz
push
je
in
jmp
fwait
jb
mov
sahf
sub
adc
sub
jb
gs
sbb
icebp
cwde
cmp
push
or
aas
or
xchg
sub
div
ins
adc
add
mov
mov
push
inc
scas
test
popf
lock
addr16
add
mov
add
inc
lea
push
sbb
movs
pop
cmp
cld
ins
mov
mov
stos
js
loopne
jge
mov
xchg
aaa
imul
push
retf
mov
push
mov
sbb
cmps
bound
or
mov
push
mov
or
jb
int
iret
push
scas
ds
jge
js
mov
es
test
pop
mov
xchg
(bad)
out
std
adc
dec
xchg
pop
inc
movs
jmp
inc
arpl
jnp
movs
cmp
out
ins
dec
xchg
ins
in
jnp
jb
ror
rcl
daa
mov
inc
or
mov
inc
dec
int3
loop
fild
add
fdivr
cmp
(bad)
lock
jo
daa
push
loopne
cmp
shld
push
outs
or
mov
addr16
inc
jbe
sbb
sbb
cmps
jae
mov
mov
(bad)
push
movs
lods
xor
adc
jge
popa
push
mov
adc
in
ror
mov
adc
xchg
ret
adc
fisubr
ror
addr16
inc
lds
in
js
rol
and
pop
inc
sar
retf
test
cli
jmp
mov
or
sbb
mov
jnp
adc
lds
inc
out
call
mov
or
mov
fisubr
out
retf
repnz
xor
mov
mov
dec
mov
pop
loop
in
(bad)
and
xor
ja
inc
or
mov
inc
call
jge
cwde
pop
mov
xchg
pop
rol
sub
shl
sub
sub
jae
mov
dec
push
ror
hlt
xchg
and
mov
mov
add
push
fiadd
adc
adc
xchg
jmp
in
xor
int3
mov
jne
mov
fnstenv
aas
fwait
xlat
sbb
test
iret
add
or
retf
xchg
scas
xchg
xchg
rol
mov
adc
mov
jbe
dec
bound
lods
xchg
sub
fdivr
xchg
pop
ret
fdivr
jecxz
les
dec
and
cli
(bad)
fld
sub
aaa
rcl
arpl
out
inc
mov
cld
or
(bad)
out
pushf
arpl
aaa
cli
dec
inc
dec
aam
shl
pop
inc
jmp
lods
jmp
sbb
adc
(bad)
adc
sub
sub
shl
mov
adc
into
movs
inc
inc
add
mov
add
pop
out
lea
loop
jbe
jno
jno
loope
pop
jo
(bad)
pop
fild
xchg
jb
pop
popa
inc
shl
sub
mov
sub
test
and
dec
ds
cmps
js
cwde
repz
adc
jmp
jae
xlat
inc
mov
and
hlt
or
daa
pop
enter
add
fcomp
test
inc
lock
push
mov
jl
imul
test
jns
and
adc
add
jno
xlat
xor
lods
xchg
push
jae
ficom
in
inc
fldenv
(bad)
popf
push
dec
inc
(bad)
into
movs
mov
icebp
nop
adc
xchg
adc
loope
in
retf
repnz
enter
jge
jno
push
adc
pop
pushf
js
aas
shl
pop
adc
(bad)
jb
mov
out
pop
cmp
(bad)
push
jns
mov
pop
push
mov
repz
jmp
int
sub
idiv
jmp
add
pop
push
dec
shr
cwde
xchg
jno
mov
xchg
test
mov
mov
idiv
push
jmp
dec
cvttps2pi
mov
fild
and
xchg
pushf
dec
call
dec
bound
mov
mov
fidivr
rcl
dec
sub
rcr
cli
xchg
push
pop
(bad)
out
ss
cmps
mov
sub
pop
pop
pop
xor
push
dec
pop
sub
nop
sub
pop
xchg
sbb
out
jmp
outs
jo
mov
mov
pop
sub
sbb
nop
mov
test
mov
jb
mov
stos
jo
ds
dec
je
dec
ins
aaa
cs
mov
(bad)
in
sbb
es
pusha
imul
inc
ficomp
sub
ds
pop
ss
pop
outs
mov
sbb
repnz
jnp
sbb
dec
add
cld
icebp
xchg
ja
push
xlat
sbb
dec
xchg
cmps
cmp
push
aas
and
xor
add
cmp
popf
ror
and
lds
(bad)
add
push
nop
popa
loopne
loopne
xchg
adc
lock
ret
(bad)
mov
arpl
xor
cmps
adc
xlat
inc
cmp
std
test
inc
jae
dec
push
cmp
mov
loop
(bad)
jge
scas
scas
ret
(bad)
cmp
mov
fwait
cmps
inc
and
lods
sti
pop
and
jo
xchg
dec
not
push
mov
(bad)
call
int
mov
pop
sbb
lahf
and
and
repnz
sub
sbb
push
adc
add
shl
inc
mov
in
mov
sub
and
retf
inc
push
xchg
(bad)
inc
in
xchg
(bad)
xor
mov
xor
fidivr
aad
fidivr
xchg
gs
fwait
arpl
cmp
xlat
mov
(bad)
fbld
cmp
sub
cmp
rcl
xlat
cmp
test
cld
mov
dec
ss
sub
sti
push
sub
xor
inc
jbe
daa
hlt
fsub
pop
pusha
nop
jp
repnz
psubw
fmul
xchg
sbb
sbb
and
push
xlat
shl
test
jb
popf
mov
cmp
inc
mov
jbe
push
arpl
imul
ja
dec
pop
ret
lahf
dec
pop
repz
mov
jg
shl
xchg
add
xchg
or
sbb
push
test
loop
call
sub
bound
pop
cmp
mov
repnz
cmps
(bad)
(bad)
mov
push
rcl
pop
jmp
ret
lods
pop
mov
cmp
aad
test
lds
or
dec
stos
rcr
(bad)
arpl
push
mov
jae
repnz
inc
push
mov
push
retf
int3
or
sub
js
and
jmp
dec
mov
pop
dec
pop
push
sub
test
inc
dec
xor
mov
or
pop
sti
sub
ja
stc
repz
pop
pop
ins
mov
sub
not
fsub
xchg
fwait
pop
pop
imul
in
imul
in
je
add
out
dec
(bad)
std
sahf
add
pop
fs
mov
sub
shr
push
ror
push
cld
xchg
mov
pop
pop
aas
push
or
sub
sbb
cmps
shl
inc
(bad)
pusha
jge
sbb
(bad)
xor
cmp
fimul
xchg
imul
mov
cmps
popa
call
jo
lods
ja
mov
mov
in
into
or
sbb
sub
cmp
jmp
dec
jb
xchg
aad
idiv
mov
es
xchg
lods
sahf
icebp
mov
xchg
add
xor
mov
mov
cmps
xchg
mov
xchg
js
xchg
cli
add
imul
xlat
jb
out
dec
ja
xor
movs
add
test
imul
mov
mov
je
mov
hlt
fistp
push
nop
push
jae
sub
push
push
jbe
sub
pop
das
jg
aas
mov
cmp
inc
sub
cs
cmp
add
(bad)
xor
pop
adc
cmp
jns
(bad)
ror
sub
repnz
ins
jo
mov
jnp
je
pop
in
jno
sbb
movs
loop
push
in
arpl
sbb
xchg
mov
cmps
sub
mov
xor
or
stc
cmp
enter
stc
mov
mov
jl
mov
adc
mov
sbb
and
add
xchg
push
dec
xchg
cmp
cmps
fidivr
iret
(bad)
ins
mov
hlt
and
hlt
in
add
sbb
xor
or
inc
shl
addr16
mov
bound
lods
stos
repnz
xor
call
xor
xchg
fwait
mov
mov
adc
scas
test
sti
jns
inc
and
mov
rcr
fsubr
ror
loop
dec
mov
cdq
sbb
add
sub
out
mov
in
out
sub
sbb
pusha
dec
leave
retf
push
cmp
in
jecxz
fabs
(bad)
mov
clc
dec
xchg
push
gs
mul
mov
mul
pop
mov
loope
push
mov
add
or
push
dec
xor
add
dec
retf
shr
call
lock
sbb
cmp
xchg
fwait
pop
jae
xor
mov
push
add
inc
xor
lock
test
dec
xor
jmp
arpl
jb
mov
jns
call
push
sub
push
jbe
std
cli
push
mov
lea
inc
fidivr
mov
je
jmp
hlt
pushf
mov
call
adc
out
inc
push
inc
movs
fsubr
cmp
xchg
or
test
sub
scas
xchg
sbb
ret
mov
(bad)
dec
aam
lods
stos
sti
retf
xor
jmp
jns
shl
aaa
(bad)
inc
stos
fimul
dec
mov
std
jge
in
jecxz
ror
sub
inc
jl
adc
xor
leave
test
cmps
push
jo
fnstcw
imul
cld
daa
adc
je
pop
jp
mov
call
data16
cmp
pop
jb
pusha
sub
inc
jecxz
mov
pop
mov
nop
xor
mov
ret
loop
lock
inc
arpl
push
mov
fst
test
and
and
mov
(bad)
or
mov
add
xor
mov
push
jle
push
pushf
out
outs
ret
dec
loopne
mov
mov
arpl
loopne
icebp
sub
jb
mov
sbb
icebp
jo
mov
xchg
stos
movs
fsub
fidivr
mov
sub
icebp
pop
mov
xor
cmp
xchg
shl
ror
das
ja
popf
add
pop
xchg
test
test
lds
rol
inc
cs
cmp
push
xor
out
es
cmp
mov
and
ins
adc
(bad)
xlat
pop
cld
shr
mov
stos
xchg
push
call
aad
sbb
sbb
sbb
adc
mov
sub
jne
daa
push
out
push
sbb
xor
ror
cs
loope
pop
adc
aam
aaa
push
push
or
fistp
mov
gs
mov
mov
add
ret
out
jne
outs
mov
retf
movs
push
mov
loop
ror
dec
jge
mov
or
std
call
mov
cmp
cmp
(bad)
out
repnz
push
add
xor
add
sahf
scas
repnz
imul
xor
es
sub
out
mov
mov
xchg
outs
idiv
push
sub
sub
inc
or
sub
aas
out
loopne
xor
push
outs
clc
mov
or
mov
mov
ja
fidivr
js
jbe
(bad)
sbb
jle
test
into
push
pushf
push
lahf
sbb
cld
loopne
pop
inc
mov
mov
cmp
out
mov
mov
jne
cs
js
mov
dec
scas
xor
and
jle
retf
mov
inc
or
mov
mov
hlt
xor
cdq
cmp
fmul
jnp
leave
test
push
test
(bad)
jmp
jl
(bad)
fbstp
xor
lahf
inc
dec
mov
xor
popf
rol
sub
addr16
lahf
lahf
pusha
ss
arpl
push
shr
sbb
cmc
xchg
inc
mov
sti
call
sbb
gs
sbb
jmp
push
addr16
std
(bad)
pop
push
pop
mov
xchg
jb
icebp
or
in
xor
in
sar
sub
retf
sub
cmp
sti
jne
push
sub
repnz
inc
arpl
leave
xchg
and
jb
ins
repnz
cmps
ds
pop
push
add
hlt
shl
push
sbb
mov
xor
nop
ja
pushf
dec
mov
cmp
sub
dec
aaa
add
jp
lods
adc
mov
adc
scas
retf
adc
lea
mov
retf
sub
or
mov
in
lahf
bound
xor
and
adc
icebp
xchg
lods
in
jecxz
inc
in
lock
fnstenv
jmp
sub
pop
mov
jmp
push
push
sbb
aam
pop
ins
sti
call
mov
and
and
adc
idiv
mov
push
pushf
shl
sar
and
mov
nop
xor
bound
pop
adc
fadd
ins
mov
cmp
test
mov
int
repz
sbb
push
std
aad
sub
cmp
neg
cmp
pop
test
leave
jecxz
mov
mov
inc
loopne
sbb
mov
gs
adc
nop
(bad)
xor
push
lods
push
or
xchg
fwait
and
popa
mov
outs
cmp
adc
or
in
nop
ja
shl
ror
leave
dec
std
xchg
sub
mov
fwait
data16
jp
mov
sub
mov
jmp
inc
or
sub
mov
jne
mov
add
sbb
fadd
and
push
fcmovb
pop
pop
imul
fnstenv
pop
scas
out
cdq
aad
push
pop
das
push
outs
mov
xchg
or
sub
jecxz
sbb
call
mov
adc
mov
add
out
push
loope
push
in
ret
push
stos
or
in
mov
hlt
mov
mov
gs
sub
shl
mov
(bad)
loop
add
mov
popf
xlat
add
mov
hlt
dec
or
mov
(bad)
xor
sub
mov
ss
fs
xor
ret
mov
test
stos
xchg
push
mov
push
or
xchg
lea
mov
rcl
xor
es
mov
cwde
shl
adc
popa
sub
jle
in
mov
adc
push
cmp
xlat
imul
mov
cmps
sub
call
lods
imul
(bad)
xchg
ret
mov
and
or
call
inc
shl
lods
xchg
xlat
aam
dec
jbe
mov
lahf
fsub
pop
and
inc
retf
push
push
test
scas
mov
test
shl
cli
stos
cmps
outs
or
loope
fdiv
stos
cdq
xor
mov
xchg
pop
sbb
jns
cmp
test
fisubr
out
mov
daa
retf
pop
out
sub
imul
sti
out
and
lock
mov
pop
mov
xor
inc
pop
sti
xchg
or
add
jl
pushf
inc
mov
pop
xchg
cmp
movs
add
loope
(bad)
mov
es
and
xchg
push
mov
mov
add
pusha
push
pop
ret
adc
(bad)
xor
pop
mov
pop
push
call
ins
dec
cmc
pop
push
and
fdiv
xlat
out
or
push
cli
xchg
ror
pop
fistp
sub
xchg
mov
xchg
ins
les
fwait
retf
sahf
sbb
push
xchg
pop
into
scas
and
les
pushf
cmc
mov
popf
out
pop
outs
addr16
lods
in
sti
or
sub
in
arpl
xchg
adc
lahf
xor
aam
jae
mov
ret
sub
mov
xchg
xchg
ret
cmc
aad
das
pop
inc
out
inc
cmp
stc
call
fwait
lods
popa
ja
pop
push
ds
adc
or
sbb
(bad)
fldenv
mov
(bad)
fcmovnu
or
(bad)
repz
mov
sbb
and
pop
pop
mov
clc
xor
mov
das
sub
jbe
es
fwait
add
daa
(bad)
mov
clc
enter
inc
mov
jmp
mov
test
xchg
inc
push
xchg
push
inc
test
mov
popf
test
cdq
cs
sub
clc
xchg
ror
into
jmp
mov
xchg
aam
ds
clc
es
repnz
mov
mov
mov
mov
push
pop
pop
push
cmp
dec
ret
rcr
adc
data16
and
shr
aam
or
dec
mov
push
(bad)
cwde
mov
addr16
(bad)
sahf
repnz
std
dec
inc
mov
sub
mov
jge
cmp
fimul
ret
xchg
pop
and
xchg
xchg
jmp
stos
jo
xor
inc
in
fs
fld
jae
cmp
dec
inc
pop
ja
fcmove
xchg
inc
stc
lahf
imul
je
mov
es
loope
adc
mov
cmp
and
add
ror
jae
sub
cmps
jb
sbb
fsubr
imul
inc
push
sbb
adc
aas
sti
int
int
mov
pop
xor
ja
fnstsw
ror
xor
icebp
adc
sub
jge
retf
(bad)
push
ss
inc
dec
xor
mov
les
mov
mov
clc
(bad)
adc
mov
ja
stos
inc
jbe
leave
pop
push
mov
jmp
call
fs
imul
test
push
cmp
repnz
daa
lea
js
sub
pop
fidivr
push
add
mov
es
xchg
jmp
rol
jp
fisub
sbb
data16
cwde
das
outs
add
cdq
aaa
js
out
call
pop
push
ins
mov
call
adc
inc
in
call
mov
mov
and
adc
cmp
popf
call
(bad)
int3
movs
cmps
xor
scas
cli
push
pop
add
dec
jbe
rol
in
cmp
pop
iret
out
fstp
cdq
and
out
and
dec
mov
js
fbstp
push
jmp
clc
test
mov
(bad)
shl
jg
lds
ins
es
lds
sbb
push
rcr
cmp
xor
pop
mov
out
and
xor
sbb
jmp
add
je
jle
push
clc
sti
fwait
icebp
sbb
inc
mov
cmp
xor
add
(bad)
cmp
xchg
into
loope
jg
dec
jmp
jb
aaa
call
icebp
mov
arpl
mov
and
ror
outs
fstp
leave
and
add
sub
mov
iret
in
mov
sbb
icebp
cwde
push
loope
repz
nop
gs
ficom
push
addr16
push
pop
mov
cdq
popa
into
push
jmp
jl
sub
scas
add
push
sub
lods
mov
mov
fs
outs
stos
inc
or
lods
test
mov
(bad)
fnstcw
add
sub
int
adc
dec
cs
movd
rcl
dec
and
xchg
adc
(bad)
ret
fs
neg
push
scas
into
inc
dec
ficomp
add
jmp
int
cmp
mov
in
ins
and
xchg
popf
fnstenv
scas
xchg
push
push
push
push
sbb
test
(bad)
mov
movs
arpl
rcl
jmp
das
jg
sbb
pop
xlat
adc
out
(bad)
rcl
adc
scas
jo
sub
xor
sbb
ss
in
lock
inc
icebp
scas
dec
mov
cmps
mov
leave
std
ficomp
mov
test
cmp
push
pushf
xchg
xor
jmp
pusha
or
push
out
stos
jae
cmps
push
js
mov
arpl
xchg
and
shl
mov
jle
xor
pop
sbb
sub
jge
adc
adc
int3
push
stc
movs
ror
fs
adc
jae
dec
push
mov
lea
in
sbb
ja
call
int
mov
in
stc
push
or
cmp
into
lar
fwait
das
(bad)
int3
retf
popw
or
ret
push
scas
push
fcomp
inc
scas
retf
int
and
and
or
out
xor
mov
outs
les
call
das
push
repz
bound
mov
or
cmps
add
sub
cwde
sbb
ret
inc
test
sub
(bad)
(bad)
mov
cmp
jbe
stc
and
jnp
fisub
jl
adc
scas
call
ds
popa
je
dec
adc
lods
loope
jmp
(bad)
jo
push
inc
xchg
cmp
inc
xchg
or
shl
mov
pop
shl
cmp
adc
stos
xor
xchg
hlt
mov
mov
xlat
fidiv
fwait
lahf
push
and
jle
lods
js
(bad)
loope
lods
or
jnp
outs
dec
mov
or
and
scas
arpl
mov
jmp
sbb
(bad)
inc
je
jbe
scas
ficom
fwait
push
enter
or
sbb
mov
into
outs
shr
pusha
mov
or
adc
or
push
ficomp
out
inc
inc
mov
sbb
fistp
fdivr
int
in
imul
daa
fild
xchg
mov
jle
fdiv
xchg
lods
sub
shl
fwait
sbb
jecxz
addr16
fcmove
add
ins
cmp
xchg
shl
shl
jl
inc
fldcw
cmp
js
inc
add
retf
mov
mov
push
mov
add
push
mov
fidivr
add
fst
scas
fs
push
mov
addr16
push
dec
xchg
xchg
xor
jno
push
pop
mov
dec
idiv
xor
add
cdq
pop
add
mov
pop
aam
imul
or
rcr
mov
mov
fldenv
ss
mov
imul
inc
and
loop
or
aam
je
in
pop
fwait
and
pop
inc
(bad)
cmp
clc
jae
scas
jg
xchg
sub
mov
mov
mov
push
repz
cmc
shl
inc
stos
shl
mov
dec
es
cmp
mov
enter
xchg
xchg
add
dec
sbb
mov
fnstenv
and
dec
not
push
fwait
test
fidiv
stos
sub
retf
mov
dec
lahf
fadd
jg
jae
push
mov
jnp
lar
inc
dec
std
sahf
and
mov
sti
daa
in
dec
pushf
jnp
dec
retf
and
cmps
add
xchg
neg
neg
fsubp
xchg
pop
xchg
mov
pop
adc
stos
stos
sahf
test
je
rcr
aas
xchg
or
push
clc
and
(bad)
icebp
push
clc
cmp
pop
adc
push
cwde
xor
repnz
cmp
fisttp
adc
popf
xchg
cwde
fnstcw
clc
ins
shl
clc
les
mov
movs
jg
mov
imul
inc
jb
pushf
je
cmp
cdq
repnz
pop
fdivp
mov
ret
pusha
sbb
xchg
xchg
sub
fxtract
cli
and
loop
rcr
leave
loope
scas
adc
cmp
pop
loope
push
les
sub
ret
sbb
icebp
jecxz
adc
cmp
jbe
cmp
jmp
dec
call
ins
ud0
dec
mov
stc
push
hlt
and
in
in
sahf
aas
push
push
xor
out
jp
mov
mov
daa
(bad)
stos
add
dec
shl
dec
imul
out
test
test
xor
in
fst
es
stc
in
mov
inc
mov
xchg
and
jno
jnp
(bad)
jno
mov
lods
jbe
sti
add
and
push
sar
adc
pop
fistp
adc
fmul
std
cli
mov
lea
scas
dec
out
je
dec
nop
pop
mov
sbb
push
adc
xchg
mov
imul
sub
mov
fisttp
pushf
ds
int3
pmullw
(bad)
pop
adc
mov
cli
xor
movs
cwde
mov
mov
in
(bad)
push
outs
mov
loopne
ds
dec
std
mov
in
dec
mov
retf
fdivrp
js
ret
push
bound
pause
and
lds
mov
mov
into
mov
(bad)
pop
icebp
xor
pusha
cld
add
stos
dec
push
jecxz
in
test
cmps
sbb
daa
pop
outs
or
inc
lahf
test
cmp
rcr
arpl
xor
pop
add
int3
into
std
mov
inc
movs
add
int3
cmp
xchg
push
adc
mov
test
(bad)
call
scas
in
sub
xchg
psubb
cmp
sub
ret
cmp
shr
std
scas
test
jae
add
xor
aas
cmp
aam
fs
lods
and
std
js
ds
ficomp
sub
mov
jns
(bad)
call
mov
test
outs
xchg
mov
stc
push
call
fs
sbb
pop
aam
push
jecxz
test
or
test
jmp
push
add
adc
or
(bad)
pop
dec
cdq
or
pop
sbb
push
data16
retf
fwait
push
nop
adc
sbb
(bad)
push
(bad)
xchg
lds
mov
sub
sub
adc
sub
mov
call
aaa
xchg
push
inc
aad
sub
icebp
push
sti
add
cmp
and
adc
jno
add
sub
or
aad
aad
and
dec
fcmovnbe
fdivp
clc
push
mov
out
lea
adc
jecxz
jp
jl
js
jle
jno
push
out
dec
or
idiv
dec
sbb
loopne
xchg
inc
arpl
ror
mov
fwait
pop
sub
sub
push
es
std
jl
int3
jl
sbb
scas
cmp
cli
lea
inc
adc
cmp
rol
push
enter
cld
mov
jae
cmps
dec
daa
or
mov
and
cdq
loope
retf
pop
pop
xchg
bnd
cmp
xchg
adc
sahf
xlat
cdq
cmp
int
fisttp
(bad)
ror
jno
mov
mov
mov
and
jbe
(bad)
js
fistp
cld
cli
and
mov
xor
cli
fcmovnb
cwde
push
push
cs
xchg
pop
sub
test
xchg
jge
or
adc
dec
mov
(bad)
loopne
cmc
push
push
inc
push
jle
sbb
mov
stos
fld
lea
(bad)
mov
mov
jp
call
inc
add
sbb
mov
xor
push
scas
push
jo
mov
in
cmp
in
fadd
adc
jle
jae
jns
push
dec
pop
in
jp
loopne
cmp
addr16
dec
das
inc
inc
int
clc
out
stos
inc
cmps
lods
inc
inc
pusha
jns
mov
inc
in
cmp
fcom
hlt
out
mov
push
inc
cmc
xchg
mov
cmps
adc
(bad)
(bad)
mov
lods
sahf
sub
cmp
mov
nop
in
data16
xor
xchg
sti
int
rol
xchg
js
outs
ja
cmps
push
aaa
js
mov
cs
sub
jle
popa
popa
dec
out
pop
out
jmp
dec
jbe
cmp
mov
fwait
ror
jb
cwde
dec
and
sub
mov
and
loope
sbb
dec
xchg
cmp
pop
or
sub
mov
pop
ror
(bad)
mov
jnp
jo
mov
inc
aad
dec
loope
inc
movs
retf
(bad)
shl
gs
scas
in
pop
push
inc
and
enter
sahf
out
mov
in
adc
xchg
cmp
cwde
loope
mov
jns
cmp
cwde
add
push
mov
popf
(bad)
(bad)
fwait
movs
add
mov
stos
jbe
xchg
and
push
clc
out
aas
xor
imul
jmp
cmpps
cdq
push
in
and
xor
fimul
out
jnp
jnp
jge
repnz
and
inc
add
pop
fdiv
inc
mov
int
cmp
xor
xchg
js
add
add
jg
fadd
aam
das
shr
dec
sub
xchg
aad
push
test
scas
xchg
cmp
push
or
inc
push
arpl
test
fadd
sub
loope
imul
adc
stos
fwait
push
imul
cmc
pop
cs
cld
xor
fwait
ret
fwait
repz
xor
shl
jge
dec
movs
or
inc
pop
xchg
sbb
xchg
inc
jo
dec
jns
and
mov
mov
and
fild
call
stc
push
ds
adc
popa
cmp
in
sbb
mov
das
pop
scas
dec
ja
loopne
sbb
dec
aam
inc
pop
std
inc
mov
jle
cmp
(bad)
xchg
nop
fst
dec
imul
div
retf
mov
out
stos
add
out
popa
mov
idiv
lds
add
fucomip
(bad)
into
cmp
xor
mov
mov
dec
fisub
inc
pop
test
outs
mov
sbb
cmps
out
jg
fwait
mov
rol
push
sahf
cmp
ja
(bad)
push
mov
(bad)
arpl
and
sub
add
ja
sub
push
imul
es
mov
shl
retf
push
pop
gs
in
inc
movs
sbb
and
push
xor
fadd
add
inc
xor
fs
jp
xor
or
mov
mov
mov
adc
pop
jl
add
sbb
sbb
and
call
inc
jmp
or
cmc
cmps
cmc
push
pop
xchg
sub
inc
pushf
jecxz
jmp
jns
sahf
and
mul
je
jmp
in
sub
(bad)
in
daa
(bad)
ror
cdq
outs
mov
jb
outs
call
ins
mov
sbb
div
xor
stos
xor
(bad)
je
sbb
cmp
je
jns
aaa
pop
ss
pop
scas
push
test
int3
test
test
pushf
ror
xchg
push
sti
mov
push
push
ror
out
inc
add
or
adc
sbb
(bad)
aam
mov
scas
loop
sub
sub
mov
push
mov
js
lods
add
psrlw
(bad)
cmp
cmp
push
mov
fisttp
mov
(bad)
ins
mov
loope
sub
and
imul
push
cmp
pop
ror
cmc
or
jmp
cmp
stos
mov
push
dec
cs
or
loopne
xchg
xchg
sub
mov
jns
xor
jle
retf
div
pusha
in
(bad)
mov
ffree
adc
daa
cmps
adc
mov
(bad)
xor
pop
stos
(bad)
pop
or
loop
sar
sub
iret
lods
xor
scas
cli
fisubr
loope
call
sar
mul
xchg
scas
inc
sbb
(bad)
into
mov
shl
adc
dec
jmp
loop
aas
and
mov
adc
pop
iret
xor
scas
mov
pop
jmp
jle
mov
mov
pop
mov
hlt
xor
xchg
inc
(bad)
sub
or
sti
scas
or
jmp
adc
mov
inc
daa
or
pop
nop
sbb
xor
cmp
(bad)
cmp
cmps
outs
adc
out
mov
xchg
sahf
adc
mov
stos
pop
dec
dec
push
pop
dec
nop
mov
in
sub
pop
retf
sahf
fisub
fsubp
jbe
cmp
push
xchg
pop
fstp
jl
mov
je
in
pop
xlat
xchg
iret
push
dec
sbb
xor
push
fdiv
ror
mov
inc
add
es
test
xchg
push
fwait
xlat
mov
mov
daa
int3
movs
and
cmp
push
das
sub
sti
push
shl
pop
ja
mov
jge
pop
jnp
mov
dec
sub
push
sbb
sub
sbb
pop
push
lods
xor
and
jg
push
push
push
sub
push
cs
push
ins
shr
sub
stos
dec
xchg
or
or
jb
mov
and
ins
stos
cmp
mov
xchg
cmp
and
in
mov
xchg
xchg
mov
jo
cmp
dec
sbb
push
mov
xor
xchg
(bad)
add
(bad)
mov
test
frstpm(287
xor
test
in
jb
dec
jecxz
or
test
sub
test
push
push
mov
inc
stc
adc
dec
mov
neg
adc
not
adc
mov
or
sahf
mov
jge
ret
ja
fsubr
test
(bad)
cmp
fs
or
lock
popa
xchg
lods
dec
in
inc
mov
out
cs
sub
in
sub
in
adc
mov
retf
frstor
pop
inc
es
sahf
das
scas
xor
cmp
inc
popa
mov
fdiv
jo
pop
stc
xchg
mul
loopne
lods
(bad)
mov
hlt
sbb
jns
add
ins
inc
into
popf
xlat
(bad)
das
rcr
and
dec
mov
clc
outs
jns
(bad)
retf
jle
mov
jmp
push
xor
fs
pop
push
jmp
mov
xor
outs
xor
inc
dec
mov
call
jmp
fsubr
les
cmp
add
repnz
or
lea
xor
xchg
hlt
ret
cmp
mov
xor
cmp
xchg
in
mov
rcl
jl
inc
test
sub
push
fmulp
xchg
sub
push
imul
jae
stos
jge
aam
fadd
and
add
ds
sti
lods
push
mov
jg
iret
xchg
in
(bad)
cld
out
dec
in
mov
iret
(bad)
and
jge
mov
xchg
(bad)
into
cmp
push
in
adc
cwde
ins
push
outs
lea
loope
xchg
ins
mov
ds
cmp
lock
ror
cwde
and
(bad)
pop
push
sub
mov
jmp
xor
xchg
loop
and
lock
xchg
mov
dec
das
pop
cwde
ins
adc
add
xchg
in
adc
sti
out
adc
xor
and
jnp
mov
cdq
adc
rcl
push
inc
push
xor
das
mov
jecxz
inc
fld
xchg
lock
loope
test
push
pushf
mov
dec
aas
lock
jmp
fucomip
data16
test
sbb
aam
or
jg
leave
aas
and
mov
jns
pop
jmp
cmp
loop
inc
hlt
pop
cmps
(bad)
out
imul
pop
ficomp
dec
inc
or
push
dec
out
push
mov
and
adc
std
mov
(bad)
inc
or
push
mov
sbb
outs
or
inc
mov
inc
cmp
sub
adc
cwde
addr16
sti
call
pop
cmp
jge
mov
addr16
cmp
or
arpl
mov
cmp
sar
jae
test
loope
dec
adc
push
icebp
adc
sub
xor
jmp
jg
ds
or
mov
loop
int3
adc
adc
xchg
mov
pop
cmp
outs
add
jns
in
(bad)
into
adc
mov
ficom
xchg
inc
xor
lods
shr
xchg
inc
mov
fbstp
stos
jo
or
mov
(bad)
hlt
hlt
mov
cdq
mov
(bad)
xchg
dec
sbb
popa
iret
sub
or
xchg
dec
push
mov
imul
mov
adc
jae
xchg
mov
pop
in
repnz
pop
je
jmp
call
fist
das
shl
lods
psubq
or
push
stos
sub
sub
cmp
out
adc
hlt
inc
imul
repz
iret
not
dec
test
fcom
in
mov
mov
ret
test
ins
out
add
in
nop
inc
jnp
dec
scas
xchg
jmp
mov
cmp
dec
pop
sbb
push
pop
cmp
fs
movs
push
(bad)
or
pop
(bad)
dec
inc
mov
xchg
mov
mov
mov
pop
aad
int
jnp
mov
popa
pop
fimul
push
sbb
xor
pop
jmp
ror
je
imul
or
mov
mov
(bad)
xlat
cmc
push
cmp
retf
mov
in
mov
push
inc
inc
cs
pop
mov
or
cmp
or
xchg
int3
and
and
icebp
sub
test
div
xchg
test
push
mov
mov
out
jb
cs
iret
cmp
popa
jbe
int3
into
jnp
and
into
fisub
push
adc
ja
cmc
dec
mov
or
add
sbb
pusha
dec
cmps
repz
push
jno
sub
dec
jne
add
xchg
das
(bad)
out
inc
stos
stos
mov
pop
out
xchg
pop
mov
add
imul
add
sbb
inc
pop
retf
cli
mov
sbb
ja
xchg
xchg
jg
mov
icebp
rol
cmp
out
pop
sub
sbb
(bad)
adc
les
and
loop
mov
fcmovnbe
or
out
arpl
mov
and
shr
mov
push
(bad)
push
dec
jl
xchg
rcl
inc
gs
xchg
jnp
loope
mov
psllw
pop
mov
pop
imul
xor
movs
dec
jo
push
cwde
int
inc
aad
mov
adc
mov
xor
jmp
fld
push
cs
movaps
or
stc
inc
dec
in
and
add
sahf
arpl
ret
movs
outs
sbb
cli
retf
pop
dec
mov
cmp
add
les
retf
add
lea
ficom
dec
xchg
fild
rcl
and
pop
clc
loop
js
retf
add
push
mov
or
cmps
jp
cmps
sti
call
cdq
aaa
js
lods
nop
aam
ins
xor
push
cmp
(bad)
fwait
mov
aad
lds
(bad)
mov
dec
clc
pop
lahf
test
retf
lds
adc
dec
jmp
jmp
and
jo
popa
popa
cdq
test
push
aad
retf
sub
scas
fbstp
xor
std
adc
clc
movs
jecxz
in
ins
sub
rcr
sub
fnsave
push
les
(bad)
adc
sbb
jecxz
lock
pop
and
daa
fwait
call
sahf
mov
fmul
mov
xchg
pushf
dec
(bad)
mov
adc
adc
in
fcmovne
dec
mov
sbb
fstp
inc
mov
in
dec
fist
scas
or
mov
mov
leave
ss
int3
ds
jle
mov
div
loop
repz
idiv
xor
push
xchg
sub
leave
xor
(bad)
std
mov
jg
retf
cmps
push
lahf
xor
or
gs
add
jo
data16
and
mov
inc
sbb
lods
push
mov
addr16
xor
punpcklbw
stos
add
out
loop
xchg
jmp
test
add
xchg
or
arpl
push
mov
fidivr
mov
dec
fdiv
sti
fidiv
add
in
push
mov
sahf
dec
lahf
ja
das
imul
outs
outs
(bad)
inc
jmp
call
mov
in
iret
push
pop
mov
inc
ficomp
mov
xchg
pop
pusha
(bad)
pop
push
sahf
inc
push
jp
out
sti
jp
jo
jo
xchg
fdivr
pop
shr
gs
cmp
imul
cmp
or
fist
adc
mov
cld
imul
inc
adc
mov
push
not
loopne
ds
sub
fnstcw
push
xor
adc
add
in
xchg
xor
dec
pop
ins
inc
stos
sbb
stc
jmp
scas
fucomi
cli
inc
and
(bad)
out
adc
pop
pop
in
cmc
rcr
push
pop
sub
pop
adc
xchg
(bad)
call
imul
jno
dec
popa
xchg
mov
dec
inc
fiadd
pop
jl
dec
pop
dec
fld
imul
push
sti
sub
mov
fsubr
and
xchg
dec
mov
call
cld
leave
sbb
mov
and
scas
gs
aas
enter
cmp
pop
movs
cli
imul
ret
ins
cld
xor
into
mov
dec
test
mov
pop
xchg
xchg
and
ins
inc
idiv
ret
loope
mov
stos
icebp
cli
jecxz
sub
or
push
push
stos
(bad)
add
cld
adc
cmp
outs
pop
push
xchg
jno
and
lock
push
cwde
sbb
scas
jp
add
inc
lock
cmps
mov
mov
sbb
jae
pop
add
adc
push
ja
push
add
enter
dec
fisub
imul
stc
call
sub
lods
in
loopne
aaa
shl
push
ins
mov
bound
push
aas
push
sbb
ret
lock
mov
lods
sbb
cmps
aad
rcr
or
push
xchg
call
addr16
sti
ret
shl
jno
mov
xchg
push
retf
into
int
mov
mov
int
ret
mov
mov
mov
add
or
jl
in
pusha
mov
add
or
dec
inc
fs
je
shr
test
mul
in
ret
mov
inc
lahf
cmp
das
sub
mov
xchg
mov
sub
int3
add
icebp
jmp
push
mov
sti
shr
sub
shl
popa
xchg
mov
test
mov
inc
jecxz
or
gs
or
xlat
sar
push
(bad)
mov
pop
jmp
arpl
push
out
inc
xlat
pop
cli
mov
call
sub
mov
sub
cdq
push
outs
sbb
inc
ror
int
rcr
div
jo
dec
jo
mov
mov
jne
dec
mov
(bad)
mov
mov
or
aad
push
je
cdq
arpl
pushf
rol
cmp
adc
ss
xchg
push
(bad)
in
and
push
mov
push
not
jnp
dec
in
sbb
dec
ret
cdq
js
add
dec
outs
daa
(bad)
fs
loopne
mov
adc
clc
and
in
fst
test
fwait
test
sub
mov
std
cli
push
adc
and
in
mov
xor
movs
push
pop
pop
ret
(bad)
clc
loope
ss
test
lods
cmp
fcomi
outs
mov
test
dec
popf
lods
sbb
imul
mov
xor
push
cmp
pop
fbld
es
mov
sti
rcr
xor
sbb
or
cmp
mov
inc
mov
lahf
pop
adc
jne
sub
jmp
addr16
push
pop
ins
xor
std
lock
sti
push
sbb
ins
fs
sbb
xlat
pop
pop
xchg
sub
mov
jg
xor
cs
inc
sbb
pop
scas
sub
stos
adc
ror
das
push
push
push
mov
ja
clc
ss
mov
add
add
jnp
cmc
into
popf
rcr
inc
movs
cmp
mov
fwait
xlat
test
jns
jge
outs
into
jl
cmc
dec
scas
mov
test
jae
add
pop
lods
mov
aaa
jl
(bad)
jge
mov
jns
js
mov
or
mov
fsub
sub
call
add
aad
cmp
pop
push
jne
pusha
dec
lods
jle
add
mov
sub
pop
xor
inc
mov
inc
mov
ja
xlat
test
out
ret
sbb
repz
sub
jecxz
repz
sbb
enter
pop
cmps
pusha
mov
sub
dec
fwait
cli
fcom
dec
jmp
and
push
mov
mov
xchg
xor
push
mov
cmps
cmps
inc
xchg
fcomp
add
sub
xchg
inc
inc
dec
mov
dec
mov
aaa
cli
je
(bad)
outs
les
js
jmp
jo
hlt
sbb
in
pop
cli
xchg
repnz
mov
in
cwde
test
shl
shl
xchg
cmp
aaa
mov
or
out
enter
jo
adc
aad
and
jmp
or
pop
xor
add
popa
jo
ret
arpl
mov
ret
adc
inc
dec
cld
fcom
minps
movs
outs
or
or
dec
shl
mov
sub
xchg
das
or
frstor
mov
out
jo
mov
sbb
sahf
cmp
out
jnp
add
movs
cmp
loop
xchg
mov
mov
dec
mov
clc
(bad)
in
dec
ja
add
mov
leave
adc
mov
das
test
pop
inc
mov
mov
stc
frstpm(287
div
xchg
or
cdq
(bad)
imul
adc
adc
call
pop
fwait
mov
push
inc
test
movs
aam
inc
in
inc
inc
cmp
daa
xchg
sub
loopne
lahf
cmps
pushf
sbb
sbb
addr16
jle
jle
or
dec
ret
popf
mov
out
mov
or
xchg
std
je
adc
lods
or
(bad)
xchg
pop
add
test
movs
push
mov
call
fdivrp
pop
dec
ror
into
sbb
popa
push
es
xchg
popa
cwde
and
jnp
xchg
cli
daa
mov
out
add
push
xchg
cmps
jae
sub
adc
sbb
mov
in
xor
cmc
sub
lea
fs
push
add
inc
xor
push
(bad)
jmp
mov
pusha
loop
pop
inc
cmp
popf
fmul
cmps
pop
in
test
std
test
or
dec
sti
outs
gs
and
sub
adc
(bad)
jnp
call
out
and
movs
pop
pusha
fidivr
ret
fs
or
mov
mov
cmps
jp
jge
dec
fs
mov
xchg
xchg
xchg
cmp
shl
push
sub
adc
mov
addr16
enter
and
pop
or
jb
adc
mul
lock
pop
mov
push
stos
mov
jo
(bad)
loop
cmps
(bad)
sbb
lahf
xchg
daa
push
pop
out
movs
popf
cmp
sub
push
and
jne
shl
sbb
jno
pop
xchg
cmp
jnp
inc
xor
das
call
psadbw
ja
stos
and
sub
push
adc
outs
(bad)
jmp
pop
lock
fs
dec
push
push
not
push
(bad)
aam
test
fsub
cmp
or
loop
adc
mov
add
cmp
push
mov
clc
jmp
cld
jg
fdiv
mov
adc
ror
add
fcom
(bad)
xor
sub
sub
leave
xchg
mov
retf
xchg
adc
je
stos
pop
or
sub
fst
pop
shr
sbb
add
jnp
loop
ficom
(bad)
ror
mov
sub
jmp
std
adc
sub
jp
dec
in
mov
sbb
or
into
sbb
push
daa
scas
mov
xchg
mov
addr16
mov
test
jl
push
adc
mov
jns
xchg
sub
jo
sbb
adc
sub
jg
(bad)
cmps
push
pop
fnstsw
rcr
xor
jmp
fnsave
aam
mov
enter
mov
fldcw
sub
(bad)
sub
pop
sub
mov
xor
cmp
rcr
stos
(bad)
jmp
mov
ret
(bad)
(bad)
leave
push
jle
imul
clc
cmp
mov
pop
mov
(bad)
xchg
cmc
jle
jmp
aam
data16
or
aas
dec
xor
imul
xchg
imul
test
pop
jg
mov
fucomp
push
push
push
and
pop
add
daa
(bad)
mov
outs
xlat
jae
(bad)
int3
push
push
clc
lea
shr
mov
shr
xchg
je
and
daa
std
dec
xchg
push
lds
mov
pushf
jl
mov
cmps
pop
ret
dec
cmova
jbe
cmp
ins
adc
xchg
jecxz
lods
ret
rol
dec
sbb
fcomp
scas
lds
sub
pop
popa
out
loop
push
xchg
int3
add
test
sub
mov
sub
xchg
pushf
lods
repnz
fidivr
rcl
jnp
lods
push
sub
mov
jno
stc
mov
stc
and
ret
out
xchg
pop
gs
push
mov
in
and
retf
push
ret
sbb
(bad)
call
popa
push
and
jno
cmp
in
jb
push
sub
mov
sbb
in
(bad)
(bad)
inc
jnp
aam
arpl
jle
out
enter
int
dec
lods
test
pop
sbb
mov
xor
lea
lahf
aad
shl
lods
inc
adc
(bad)
mov
retf
rdmsr
fldcw
jg
gs
mov
inc
sbb
mov
mov
mov
adc
jg
aad
repnz
cwde
and
pop
pop
mov
pop
add
cld
dec
inc
mov
sbb
fnstenv
sahf
mov
(bad)
xchg
(bad)
pop
jg
jl
cmc
js
sbb
dec
mov
pop
push
lea
jle
loope
push
pop
movs
mov
jno
jnp
shl
mov
dec
xor
leave
int3
nop
pop
mov
and
pop
jl
jmp
cwde
fwait
sbb
or
repnz
rcr
sub
pop
retf
mov
in
pop
fcmovbe
or
dec
int3
push
inc
into
cmps
inc
outs
mov
jns
pop
inc
sub
xchg
addr16
sbb
push
cmp
mov
stos
mov
sub
ja
mov
inc
imul
cwde
in
or
xor
sar
gs
test
retf
cmps
(bad)
pop
adc
sbb
movs
jae
pop
push
mov
jns
cmc
mov
rcr
sub
pop
sub
cmp
jmp
ss
mov
inc
pop
enter
jb
push
not
dec
cld
or
in
sub
ss
and
sub
outs
adc
(bad)
push
out
pop
dec
jmp
in
in
fdiv
cmp
aaa
fsub
hlt
enter
xchg
jge
sbb
jle
ret
push
cmps
inc
push
adc
sub
or
clc
je
data16
sub
repz
inc
mov
bnd
sbb
inc
or
mov
data16
mov
in
mov
mov
mov
sub
movs
mov
popf
outs
jl
aam
int
jg
mov
adc
fs
popf
ja
and
js
lods
and
sub
mov
nop
sub
lds
inc
call
add
jecxz
inc
popa
add
xor
rcl
add
xchg
adc
sar
jmp
mov
add
pop
jp
jle
inc
ins
sub
cdq
push
sbb
sub
addr16
pop
xchg
adc
mov
aaa
lds
jne
adc
test
xchg
xor
inc
inc
pop
mov
jmp
jl
sub
jbe
ds
stos
scas
and
and
push
xchg
push
jo
add
test
ds
pop
es
popa
iret
add
pop
mov
cld
jle
sub
dec
test
xchg
mov
sti
in
loope
inc
push
div
or
xchg
shl
sub
pop
fidivr
dec
icebp
movs
cmp
xor
enter
int
or
sub
dec
call
cwde
shl
(bad)
push
pop
movs
jne
sti
mov
sub
movs
nop
repz
dec
xor
add
push
in
imul
jb
jg
xor
stos
repnz
mov
loope
jle
test
sbb
ret
xchg
shl
daa
and
or
mov
cmp
adc
jmp
idiv
dec
mov
mov
clc
out
xor
mov
(bad)
(bad)
retf
and
push
pop
push
mov
cdq
cmps
test
jbe
push
mov
clc
sub
mov
cdq
imul
and
or
leave
push
mov
loopne
push
dec
add
add
mov
mov
push
cmp
repnz
jle
and
inc
es
(bad)
push
pop
mov
jp
mov
out
in
mov
mov
sti
mov
adc
push
cmp
pop
sub
call
mov
sub
dec
fistp
sub
mov
pop
and
mov
popa
or
xor
addr16
inc
icebp
xchg
fcomp
into
scas
inc
or
loope
or
add
shl
mov
inc
(bad)
adc
and
xor
out
dec
mov
xchg
scas
and
mov
pushf
gs
dec
push
(bad)
hlt
inc
repnz
mov
pushf
mov
sub
push
inc
push
jmp
push
and
cmps
arpl
or
push
cmp
jecxz
sbb
add
out
sub
mov
mov
adc
call
adc
scas
lods
retf
out
sub
(bad)
sub
push
and
addr16
xchg
add
outs
add
cdq
push
rol
push
(bad)
lock
mov
and
addr16
mov
aad
pop
data16
add
leave
(bad)
stos
loopne
mov
xchg
inc
movs
and
mov
scas
mov
and
jg
push
scas
pop
fs
xor
cmps
bt
add
xchg
add
pop
sub
dec
sbb
cdq
sbb
ins
push
test
imul
mov
push
pop
rcl
cld
xor
aaa
hlt
daa
test
mov
stos
inc
jne
dec
in
inc
cmp
mov
mov
ds
outs
sbb
loopne
mov
mov
pop
mov
bound
dec
sar
shl
jmp
push
clc
aam
jb
loope
leave
out
test
sahf
sbb
or
cld
xor
cld
push
jmp
mov
(bad)
data16
ds
sub
adc
mov
dec
and
jmp
loope
sbb
stos
rol
fs
(bad)
dec
hlt
inc
xchg
and
sbb
dec
es
inc
sbb
shr
movs
repnz
aaa
pushf
add
movs
or
stos
inc
cmp
mov
imul
call
mov
jmp
fld
fwait
rcl
jnp
out
xchg
clc
outs
and
jb
lea
adc
enter
cmp
jnp
(bad)
mov
mov
push
xor
gs
inc
pop
add
dec
addr16
repz
rol
(bad)
mov
cdq
mov
nop
test
xchg
shl
and
xor
dec
push
retf
lea
fistp
in
adc
jne
mov
push
scas
mov
cwde
jmp
pop
mov
sahf
xchg
jmp
inc
mov
mov
pop
ins
shl
je
fs
ror
or
ja
xor
jmp
lods
fsubr
loopne
xor
popf
fisubr
jg
jmp
(bad)
mov
shl
lds
sbb
fcmovb
ret
jnp
xor
sub
add
sub
adc
imul
and
mov
stos
repnz
imul
pop
and
repz
push
jecxz
push
xchg
or
pop
add
outs
sbb
or
loope
fs
xor
sub
rcr
cmp
or
cmp
sbb
jl
(bad)
pop
adc
mov
ficom
sbb
and
loopne
xor
(bad)
out
mov
mov
fs
adc
(bad)
rol
scas
mov
aam
pop
push
ror
fistp
pop
(bad)
adc
lods
je
pop
add
fidivr
nop
int3
mov
mov
jl
dec
xor
je
cdq
xor
push
out
fistp
jecxz
mov
lahf
push
add
retf
mov
jg
or
into
jmp
and
mov
pop
jp
loopne
adc
adc
pop
icebp
jecxz
call
arpl
and
dec
and
pushf
fnsave
inc
sub
sbb
scas
sti
(bad)
push
push
clc
jmp
int
push
mov
fldenv
popf
push
pop
mov
lock
mov
sahf
dec
pop
aas
dec
in
and
adc
enter
pusha
sbb
xor
jle
sub
xchg
sub
jne
add
lods
jo
int
jne
rcl
mov
jle
jne
inc
out
dec
mov
and
xlat
int
adc
shl
fld
rcr
test
(bad)
or
pop
or
gs
nop
add
cmc
pusha
out
in
(bad)
pop
sbb
pop
shl
and
mov
ins
xor
popf
cmp
rcl
nop
lds
in
jbe
outs
inc
sub
adc
cmc
loope
push
or
fs
outs
add
jl
xor
ins
movs
or
mov
sbb
jmp
jge
int3
add
sbb
or
inc
xchg
ror
jns
pop
mov
jge
push
js
mov
mov
sub
jl
sub
add
ss
push
fwait
ja
pop
aad
rdtsc
pop
call
cs
cwde
push
ficom
ins
mov
(bad)
inc
ds
push
pop
idiv
fnsave
in
fisttp
in
dec
cmps
dec
adc
repnz
outs
cmp
cmc
pop
imul
lea
dec
add
dec
movs
ret
dec
aam
mov
pop
leave
call
dec
pusha
mov
sbb
loope
xor
mov
pop
sbb
loope
push
jl
mov
test
push
dec
mov
dec
jmp
adc
(bad)
test
sub
mov
retf
sahf
mov
or
xchg
fadd
mov
sub
fld
aad
es
jge
pusha
iret
retf
and
or
pop
xchg
cmp
aaa
bound
repnz
or
lods
and
repnz
jmp
push
mov
repz
ret
loopne
mov
movs
mov
(bad)
icebp
ss
push
sub
pop
outs
ror
ds
and
das
mov
aam
cmp
dec
movs
sar
rcl
xchg
cli
push
push
ss
mov
or
fld
sub
ret
sbb
mov
cmp
pop
je
cli
add
pop
jnp
pop
cmp
repnz
sbb
push
and
pusha
retf
fs
retf
call
hlt
cld
inc
sbb
cwde
adc
repz
hlt
bound
addr16
xchg
push
xor
lods
pop
sub
mov
test
out
xor
loopne
dec
inc
mul
inc
dec
hlt
sar
push
and
cwde
mov
fadd
push
mov
jns
neg
jo
xchg
mov
sbb
mov
xchg
int
imul
es
inc
cld
lods
cwde
sub
inc
cmp
sbb
cdq
pop
xor
int
ror
inc
mov
pop
imul
xchg
call
pop
pop
jmp
repz
(bad)
out
test
mov
inc
in
out
dec
xor
mov
sub
dec
xor
sub
mov
sti
mov
pop
push
inc
mov
pushf
int
paddq
cmps
xchg
pop
pushf
(bad)
mov
dec
sbb
fwait
push
inc
ret
mov
mov
mov
ror
add
jle
ror
adc
mov
mov
ret
movs
xchg
daa
jge
and
nop
and
rcl
(bad)
mov
mov
gs
fistp
int3
aam
sub
cmps
imul
jne
inc
and
xchg
push
inc
adc
mov
clc
mov
push
inc
loopne
jne
retf
pop
dec
leave
cmps
sub
jecxz
lods
js
es
mov
cmps
les
out
repz
xchg
es
(bad)
jmp
in
pop
imul
mov
fnsave
xchg
cmp
inc
inc
push
repz
mov
mov
cld
jno
aam
or
sub
xor
jge
rcr
cmp
push
add
cmp
xor
cmp
cmc
in
mov
outs
sbb
jg
loop
inc
or
cmc
call
adc
icebp
pop
popf
mov
in
(bad)
xor
jp
das
push
mov
lods
popa
mov
xlat
mov
std
xchg
pop
add
in
push
jnp
cwde
xor
fdivr
cmps
push
sbb
shl
sbb
dec
adc
mov
imul
and
dec
adc
mov
aam
rcr
cli
imul
movs
sub
pop
es
jp
jno
mov
push
ror
int3
pop
mov
mov
jmp
adc
sub
xchg
popf
jge
pop
popa
sbb
call
pop
lea
mov
mov
pusha
stos
xchg
inc
(bad)
outs
jmp
xchg
repnz
and
fwait
pop
cmp
stos
or
mov
and
pop
adc
jge
pop
retf
add
jb
(bad)
fstp
mov
mov
std
popa
adc
pop
int
pop
add
push
std
inc
mov
int3
adc
sti
cmp
or
fld
pop
sub
cwde
jae
movs
push
imul
dec
mov
loop
sub
pop
jmp
je
sbb
jbe
aas
pop
aad
push
pop
fs
cmp
add
xor
sbb
gs
inc
pop
adc
popf
lods
rol
daa
push
and
sbb
lods
pushf
xchg
jg
push
cs
fimul
fadd
ja
jle
retf
cmps
mov
or
push
mov
je
popa
jo
scas
lock
fsubr
in
test
(bad)
scas
dec
add
dec
cmp
or
arpl
pop
xor
cvtps2pi
sahf
xor
mov
movs
and
sub
jnp
(bad)
mov
xchg
dec
add
cs
shl
dec
push
jbe
fnstsw
fmul
call
and
rol
(bad)
sub
outs
inc
arpl
adc
or
jp
inc
cmp
cli
imul
xor
pop
not
mov
jnp
pop
sti
cmc
pop
add
jnp
sti
jb
push
jg
cwde
mov
push
inc
ret
and
lods
xchg
out
shl
jle
repnz
cli
test
inc
iret
inc
ret
ss
adc
dec
into
je
rcl
stc
or
mov
jg
or
sub
pop
movs
aad
loope
fild
sbb
retf
movs
in
push
push
sub
pop
push
std
pop
mov
out
jbe
mulps
sub
sar
xlat
mul
das
(bad)
movs
mov
sbb
repz
or
pop
stos
jnp
or
jne
xchg
jl
jg
ficomp
sbb
call
lea
xor
hlt
jecxz
jmp
mov
int3
gs
xor
into
ficomp
jmp
neg
inc
add
retf
sbb
out
bsr
add
cmp
xchg
jbe
mov
push
bnd
cld
es
mov
aad
jmp
lds
les
les
call
mov
dec
inc
mov
mov
sbb
cwde
inc
(bad)
mov
xor
ret
sar
xor
out
mov
lea
cld
pop
add
outs
ret
lds
cli
adc
jmp
in
aas
pop
pop
pop
ret
outs
add
repz
aas
jbe
jbe
fsub
jp
sub
xchg
or
rol
pop
sbb
mov
and
add
jl
(bad)
loope
cmp
out
outs
dec
enter
out
(bad)
jmp
push
push
inc
mov
fdiv
cmps
inc
ror
fistp
js
sub
pop
mov
push
mov
aaa
fistp
les
push
jns
cmp
push
and
cmp
imul
jl
lods
mov
fbld
sbb
xor
pusha
mov
xor
mov
mov
inc
xchg
jae
mov
int
hlt
sar
sub
add
mov
and
xchg
pushf
add
push
sti
aam
push
pushf
inc
call
icebp
gs
es
fadd
aad
cmps
fnstcw
cdq
and
xchg
inc
es
fldenv
jecxz
and
push
xchg
sub
in
sbb
ret
test
mov
adc
enter
inc
cmps
mov
bound
into
(bad)
adc
jae
inc
lock
xor
fs
lock
xchg
mov
or
or
xchg
std
addr16
add
fidiv
or
cmps
fwait
js
das
jg
outs
cmp
adc
sar
ret
out
aas
xchg
nop
movs
push
pop
add
pop
xchg
push
xor
inc
(bad)
movs
mov
jl
cmps
dec
hlt
test
out
jecxz
mov
mov
mov
in
sbb
adc
push
in
cmp
adc
lock
mov
jns
cmp
or
push
pop
ins
mov
mov
lea
sbb
push
push
les
dec
adc
xchg
mov
fcom
jecxz
cmp
(bad)
mov
mov
aam
test
fwait
or
aaa
push
jl
mov
push
sbb
sub
sbb
movs
jne
add
mov
outs
stos
ss
inc
pop
mov
js
mov
mov
loope
test
cmp
or
xchg
jmp
(bad)
loop
cmp
or
out
dec
loop
and
xor
cmp
movs
mov
pushf
and
xchg
mov
test
hlt
into
dec
mov
push
jle
push
(bad)
shl
inc
cdq
adc
ds
nop
sahf
repz
aad
sbb
dec
pop
mov
fs
psadbw
call
ins
clc
jns
push
adc
shl
xor
adc
cld
adc
push
jnp
xchg
mov
xor
sub
dec
dec
icebp
dec
(bad)
mov
cld
jnp
enter
aaa
xlat
or
mov
test
or
push
xor
lods
fs
pop
int3
movs
addr16
sbb
sub
out
test
jp
fild
(bad)
sub
xchg
iret
jnp
fcomp
xor
(bad)
adc
iret
retf
cmp
leave
or
xor
inc
mov
jg
inc
inc
out
jns
fs
mov
movq
sub
aam
iret
mov
enter
jmp
pop
int3
cmp
adc
add
pop
mov
loopne
pusha
jno
and
iret
pop
cs
xchg
cdq
lods
mov
cmps
and
outs
xor
inc
xor
retf
mov
aad
pop
mov
out
(bad)
test
call
in
imul
sbb
into
mov
sbb
jp
test
mov
and
inc
sub
push
nop
(bad)
in
cmp
and
xchg
jae
xchg
dec
sub
lock
(bad)
test
outs
out
or
stos
aam
aaa
mov
xchg
daa
in
pushf
mov
nop
cli
mov
add
rcl
mov
in
fucomp
popf
aas
loope
inc
out
xchg
push
jbe
xor
cwde
xchg
dec
and
enter
stos
(bad)
call
xchg
outs
pop
pusha
mov
stos
out
mov
dec
scas
jmp
mov
dec
popf
loopne
pop
mov
clc
fs
pop
cld
sbb
sub
xor
dec
(bad)
pop
fcomp
push
retf
sbb
sahf
scas
or
dec
cs
jecxz
or
mov
repnz
cmp
rol
jne
dec
jle
cmp
mov
sti
xchg
outs
(bad)
stos
push
es
adc
xor
jecxz
clc
mov
fsub
mov
fiadd
test
ds
mov
adc
push
je
mov
inc
xchg
jmp
cwde
pop
mov
add
(bad)
mov
inc
mov
sbb
into
adc
mov
inc
jle
dec
jl
call
adc
outs
or
fdiv
and
shl
shr
pop
adc
mov
mov
xchg
inc
rcl
shr
mov
imul
aas
jl
sbb
pop
mov
ror
add
or
cmp
test
jnp
lds
psubq
pop
nop
cli
push
mov
inc
jecxz
div
test
mov
in
jmp
push
jns
scas
ror
add
movs
jl
hlt
in
into
and
popf
imul
leave
or
adc
xor
shl
dec
mov
jp
mov
mov
cmp
dec
daa
jecxz
pushf
mul
push
fwait
push
add
push
lods
bound
inc
cdq
test
jae
xchg
push
and
push
retf
sub
(bad)
ss
cs
repz
daa
cmc
sbb
add
inc
pusha
and
xor
push
and
ins
data16
loopne
mov
in
clc
sbb
adc
retf
xchg
adc
push
xchg
cld
jecxz
rcl
cs
in
ins
ins
pop
sub
sub
dec
cmp
jb
pop
sti
movs
inc
jg
popa
sub
in
fdiv
sbb
mov
or
dec
xchg
sub
aad
dec
add
dec
xor
cmc
xchg
into
cmp
adc
cmp
jne
adc
popa
(bad)
mov
add
enter
scas
push
ss
jp
jle
cmps
ins
in
adc
mov
mov
and
push
or
dec
cmp
push
adc
fs
stos
sbb
gs
dec
sbb
fidivr
idiv
xor
aaa
int3
or
clc
outs
sub
call
push
nop
xchg
imul
jae
jmp
dec
jp
stos
or
div
push
push
add
and
nop
retf
popf
jle
sbb
adc
arpl
aam
cmc
adc
pop
sub
cld
inc
shl
data16
out
test
push
adc
inc
mov
push
enter
push
retf
mov
int3
sti
mov
div
test
std
(bad)
push
sbb
aaa
sbb
test
cmp
loopne
jbe
fdivr
adc
clc
push
mov
rol
in
sub
dec
xlat
jmp
push
shl
xchg
cmps
cmp
(bad)
xor
or
stc
push
aaa
sbb
sti
inc
mov
mov
mov
mov
inc
xchg
fcomp
hlt
paddq
hlt
xchg
add
aam
ins
shr
adc
push
jp
loop
xchg
es
iret
mov
daa
test
mov
pop
pop
cmp
mov
lea
sbb
dec
jns
add
xor
out
mov
pop
xor
jae
in
or
sbb
arpl
adc
mov
ret
outs
cmp
push
rol
hlt
ds
pop
or
iret
dec
repnz
gs
sbb
adc
sar
mov
ss
in
jo
je
aas
xor
pop
push
adc
adc
xor
outs
pop
xchg
add
mov
xor
fwait
jmp
mov
mov
cld
ins
and
cdq
push
push
or
test
jae
mov
and
clc
sub
fwait
imul
mov
scas
push
cdq
and
fild
outs
jle
jno
retf
and
ins
xor
test
scas
bound
sub
pop
cs
lods
and
fmul
jge
and
pop
xor
or
(bad)
leave
cli
jne
loopne
cmps
add
inc
mov
dec
inc
fwait
add
sbb
leave
mov
push
jnp
mov
mov
jg
cmovg
push
out
fild
hlt
loopne
cmc
out
aas
sbb
loopne
sahf
xor
test
idiv
stc
outs
sti
sti
dec
out
adc
inc
gs
push
mov
out
jle
ja
pop
dec
push
in
push
jle
jmp
test
js
in
mov
add
sub
out
adc
jg
in
mov
int3
add
cli
or
fdivr
xchg
sbb
and
call
push
dec
sbb
(bad)
xlat
mov
stos
cmps
stos
popf
shl
ss
pop
and
aaa
inc
mov
leave
out
mov
fwait
fwait
outs
jmp
aam
pop
ret
fbld
aam
mov
test
mov
cmp
cmp
mov
xchg
jae
sub
in
xor
mov
jnp
fwait
mov
cs
test
cmp
adc
push
cmp
scas
addr16
dec
lds
sar
mov
mov
dec
mov
es
aas
mov
arpl
dec
push
xlat
in
repnz
adc
adc
mov
stc
clc
jb
aad
(bad)
les
pop
(bad)
fnstcw
loopne
adc
jno
(bad)
jmp
imul
dec
ds
lea
cmp
outs
rcr
dec
mov
push
and
fild
cmps
push
sub
ds
xchg
and
cs
clc
mov
lea
and
sbb
aad
jae
aad
and
add
aam
ins
sub
mov
inc
das
dec
ja
fsubr
int
push
std
xor
cmp
push
pop
or
mov
xchg
mov
aam
add
inc
jno
sbb
inc
outs
sbb
xor
push
mov
fldenv
clc
outs
and
cld
inc
stc
mov
adc
rcl
mov
dec
or
enter
adc
hlt
fisubr
jnp
rol
nop
enter
sub
push
push
mov
(bad)
xchg
int3
test
jp
jbe
jmp
dec
xchg
dec
pop
arpl
fadd
dec
test
jnp
jp
pop
(bad)
outs
cmp
fucomip
arpl
mov
cmc
sahf
mov
es
imul
cmc
mov
push
pop
daa
jmp
adc
xor
xchg
shl
cmp
bnd
rcr
cmps
xor
sub
add
mov
gs
jecxz
and
aad
jg
sub
mov
icebp
pop
pop
mov
mov
push
dec
and
not
shl
int3
out
cmp
jp
call
ja
icebp
push
pop
mov
call
lods
ins
or
mov
pop
add
mov
rcr
dec
mov
pop
jl
movs
call
pop
out
jns
inc
jno
iret
sti
cs
inc
push
setne
sbb
loopne
pop
cmp
cmp
push
sub
dec
sub
or
gs
add
jecxz
xchg
into
add
mov
and
add
mov
mov
add
mov
inc
out
lahf
push
mov
fld
sbb
and
push
pusha
(bad)
jbe
imul
sub
add
repz
sub
fbstp
inc
stos
in
cmps
adc
retf
cmp
ins
sbb
pop
mov
mov
cmps
xchg
lea
push
adc
nop
stos
ja
int3
sti
dec
pushf
pop
cmp
push
loope
push
cld
lds
push
scas
add
cmp
dec
out
xchg
fs
mov
mov
pop
dec
int3
lods
mov
or
or
lds
mov
jb
pop
jo
jbe
pop
jg
out
jp
and
cmp
pop
dec
add
cmp
stc
pop
push
sub
into
in
ror
fs
test
fldl2e
fwait
xchg
jmp
cmps
dec
leave
xor
xor
and
aad
jno
leave
out
sbb
adc
push
push
sbb
lods
inc
ins
fidivr
or
fisubr
lods
adc
adc
push
in
(bad)
pushf
or
(bad)
sar
mov
loope
sbb
frstor
outs
pusha
xchg
imul
lea
add
loopne
and
rcl
fwait
popf
mov
test
fs
dec
aam
push
sbb
cmp
movs
repz
push
mov
xor
ficomp
mov
push
mul
xor
pop
xchg
call
imul
loop
add
and
iret
call
and
mov
xor
mov
gs
and
mov
js
pop
jge
push
test
mov
xchg
sub
adc
outs
add
das
mov
jle
sub
or
jmp
cmp
mov
xor
cld
outs
fbstp
and
ds
fsubr
xchg
inc
ffreep
int3
adc
jl
ret
das
pop
sti
enter
jmp
jae
fcomp
in
mov
cli
inc
pop
mov
fild
cwde
cs
ds
dec
repnz
xchg
cli
cmp
and
lods
(bad)
leave
xchg
jb
callw
xchg
jecxz
jbe
cmps
jp
mov
jmp
shr
fist
xchg
fisttp
popa
repz
mov
pop
push
mov
ins
jecxz
mov
and
leave
and
jns
pop
movs
outs
xor
shl
retf
or
outs
outs
push
fs
enter
rcr
mov
cmps
xchg
retf
sub
and
xor
add
lahf
jecxz
pop
jno
jmp
in
stos
cmc
je
rcr
fdiv
js
dec
sub
dec
repnz
jbe
push
enter
dec
cmp
test
mul
dec
push
test
rcr
ja
xchg
lock
icebp
pop
pop
jl
dec
test
in
cmp
movhps
push
sub
cdq
mov
inc
cmp
and
sbb
push
sbb
xchg
int3
pop
ja
sbb
sti
xor
movs
pop
lock
pop
aad
xchg
fidivr
push
rcl
je
xchg
mov
inc
or
test
sub
dec
mov
ja
out
inc
rcr
das
mov
bound
fstp
push
adc
add
lahf
jp
add
push
sub
out
out
mov
stos
mul
scas
add
pop
out
dec
lods
test
mov
jp
fld
cmp
lods
loope
mov
ror
inc
cmp
fmul
fcom
jo
lahf
pop
mov
shr
daa
out
loope
cs
(bad)
clc
mov
pop
ins
mov
cld
out
or
cmp
push
or
cwde
and
dec
mov
scas
sub
add
dec
sub
scas
cmc
jbe
into
push
mov
adc
pushf
cmps
cmp
cs
imul
inc
loope
dec
popa
xchg
push
xor
add
sbb
xor
div
jmp
or
out
loop
dec
dec
repnz
xchg
mov
mov
sub
pusha
mov
daa
call
jle
sbb
call
(bad)
daa
outs
cwde
mov
adc
and
pop
push
test
jecxz
inc
push
int
dec
adc
pop
cli
mov
outs
call
pop
jns
aad
cmp
mov
inc
cli
xlat
add
sbb
fistp
lock
xor
and
jg
xor
(bad)
retf
jle
ins
stc
mov
jnp
inc
jmp
and
fdiv
ja
sbb
push
sub
add
jmp
add
pop
cmp
or
fnstcw
cmps
neg
fnstenv
push
ins
retf
dec
adc
stos
out
icebp
(bad)
cmp
pop
lods
xchg
and
jg
jl
fldcw
xchg
adc
daa
ret
adc
in
fldcw
sub
lods
rcr
pop
dec
mov
imul
mov
test
sahf
into
fiadd
xor
ret
xor
mov
es
shr
imul
mov
fild
in
pop
cmp
inc
mov
xor
bound
shl
add
test
sub
add
retf
test
mov
cmp
mov
mov
push
sti
dec
jmp
mov
pop
retf
dec
push
cmp
ins
mov
mov
pop
mov
mov
popa
dec
mov
lahf
out
(bad)
or
loop
pop
stos
sub
outs
adc
mov
js
dec
push
cmpxchg
out
mov
adc
or
jl
sub
or
sub
icebp
or
and
int3
inc
cmps
or
shl
stos
fnstenv
dec
jmp
xchg
daa
and
cwde
or
sub
loope
xor
dec
out
popf
sahf
pop
retf
ins
jne
retf
into
mov
hlt
cmc
mov
and
xchg
inc
lock
inc
xchg
add
cmps
rol
mov
int
cmp
mov
(bad)
fisubr
rcl
icebp
repnz
cmp
cmp
dec
jb
enter
jge
jns
popf
fwait
sbb
jg
mov
out
and
mov
out
aaa
mov
jo
add
xchg
ja
clc
movs
xor
pop
sub
fwait
jno
pop
sub
clc
pushf
fisttp
sbb
push
fcom
repz
fiadd
dec
mov
xchg
call
test
jmp
jmp
push
add
test
in
cwde
mov
mov
cmp
and
sahf
(bad)
loope
das
jg
test
xor
lds
or
mov
sbb
cwde
out
sahf
aad
outs
ins
jmp
ds
lahf
fnstcw
popf
stc
mov
das
sahf
mov
mov
adc
neg
arpl
scas
xlat
and
xchg
pop
gs
popf
or
rol
or
rcr
test
jl
into
and
loop
xchg
aam
pusha
test
jbe
loop
push
or
lds
pop
push
sub
push
movs
push
movs
mov
out
test
jbe
jg
xor
shl
in
and
aad
int3
or
inc
aad
mov
push
(bad)
jae
sub
dec
movs
cmps
das
add
ja
lock
shr
je
mov
xchg
add
ficom
stos
out
cmp
pop
jo
jbe
push
cmp
pop
add
and
xchg
sbb
movs
aas
fsub
or
pop
dec
adc
or
xchg
xor
mov
int
ret
mov
cmps
cmc
inc
js
sbb
jmp
aad
sub
ss
or
retf
cdq
fwait
sub
into
pop
fistp
xor
xchg
mov
adc
test
push
pop
rcr
jne
jo
jmp
xchg
xor
cli
fdivr
lahf
ror
cmp
(bad)
or
push
mov
jno
push
addr16
inc
push
add
pop
cmp
enter
mov
not
nop
jmp
sub
sub
pop
sbb
test
out
aam
xchg
repnz
out
dec
sub
iret
repnz
out
jmp
lahf
pop
(bad)
lods
out
push
jnp
push
jnp
mov
push
cmp
pop
and
dec
lock
xsaves
scas
push
sub
add
pop
(bad)
fist
mov
mov
jmp
add
in
fucom
sub
ins
sbb
or
xor
shr
cdq
jle
je
xchg
std
xchg
dec
adc
jge
cmp
loopne
mov
stc
inc
pop
cmps
adc
lea
or
inc
imul
cs
daa
push
jg
retf
or
into
cmp
mov
cmp
stos
into
jbe
jp
add
mov
cmps
pop
add
pop
xchg
jae
jecxz
imul
xor
rol
sbb
into
xor
add
push
add
popa
or
pop
out
mov
sbb
cmp
mov
mov
or
jecxz
or
fcomp
lods
cmp
pusha
xchg
(bad)
pop
outs
ror
sti
enter
ret
icebp
inc
(bad)
pop
xlat
stos
push
ficom
cmp
int
pusha
xor
fdivr
mov
push
(bad)
jmp
(bad)
jmp
out
sub
sbb
test
push
jg
xchg
sub
retf
mov
or
outs
shl
cwde
mov
leave
mov
sbb
scas
sbb
push
lds
rcl
call
gs
sbb
ins
and
or
mov
pop
push
(bad)
in
iret
jns
fld
jo
movs
adc
fsub
or
iret
cli
mov
dec
fwait
pusha
cmps
xchg
mov
sub
div
dec
ja
cs
mov
cld
mov
xchg
dec
(bad)
es
loop
jl
or
fiadd
add
test
test
aam
jbe
mov
popf
cmc
(bad)
jg
and
fwait
xchg
xchg
inc
iret
(bad)
ficomp
cmp
into
cdq
test
jp
mov
dec
sbb
movs
or
mov
sbb
jge
ficom
cs
mov
sbb
dec
pushw
adc
xchg
push
stc
or
push
mov
push
int
xor
or
fwait
xor
or
pop
je
jp
sub
mov
adc
(bad)
(bad)
in
add
cmp
or
sub
daa
stc
lods
clc
aaa
psraw
mov
mov
mov
fs
cmp
call
add
nop
loopne
inc
test
stos
les
pop
fisub
(bad)
test
out
sub
aas
pop
stos
(bad)
xor
jne
out
ret
mov
mov
jo
and
in
fcmovbe
(bad)
jae
mov
(bad)
cld
ffree
xchg
xlat
retf
and
push
or
fdivr
in
daa
pop
mov
mov
sbb
sub
push
imul
xchg
adc
pop
out
push
ins
fsubr
inc
mov
cmps
xor
and
and
push
in
test
lock
xchg
push
hlt
add
jbe
jg
ds
mov
push
pop
push
fild
stos
cmp
in
in
cld
test
fwait
lds
cmp
jo
push
sbb
test
and
jle
cmp
test
jmp
fwait
push
out
ret
xlat
(bad)
loope
adc
inc
fild
jns
fldenv
or
sbb
lea
sub
(bad)
mov
lea
leave
popf
ficomp
mov
add
sub
xchg
dec
cmp
push
ja
inc
cmps
mov
fld
jmp
pop
jmp
mov
in
mov
in
jg
das
aam
dec
mov
push
jle
shr
test
xor
sbb
stos
xor
es
pop
inc
adc
les
mov
push
mov
stos
aam
ds
inc
aam
out
pop
and
cmps
sub
or
fst
mov
test
in
in
(bad)
in
sbb
jae
cmc
int3
add
xchg
sbb
popa
(bad)
mov
mov
(bad)
or
mov
fnstcw
ret
xor
xchg
aam
jmp
jmp
leave
lahf
sub
lss
mov
pusha
push
inc
test
push
lock
or
arpl
mov
dec
icebp
int3
inc
mov
xchg
nop
xchg
xchg
cdq
repnz
retf
in
mul
cmp
shl
sbb
ins
mov
jns
cmps
pop
mov
clc
cmps
lahf
fs
add
cmp
jp
jmp
in
push
push
fimul
xchg
cmps
push
xchg
push
std
cwde
outs
cmps
mov
or
(bad)
mov
lahf
inc
bnd
fsubp
xchg
or
leave
push
cmp
jo
pop
loopne
pushf
xlat
nop
sar
outs
and
mov
je
lods
push
sub
mov
mov
sbb
aas
or
cmps
push
dec
adc
xor
cmp
adc
cmp
iret
push
jno
xor
into
ins
and
loope
jno
fxam
imul
cwde
je
dec
fsub
jae
ds
push
imul
xor
adc
shl
or
inc
(bad)
cmp
inc
ins
xchg
(bad)
aam
push
mov
call
div
in
jne
gs
mov
mov
scas
scas
bound
bound
or
test
inc
out
ja
sub
addr16
addr16
leave
(bad)
cwde
sbb
or
pop
not
inc
icebp
movs
hlt
loop
mov
cmc
adc
sahf
or
shl
icebp
pop
mov
lods
das
aad
enter
shr
inc
and
cwde
xor
in
mov
enter
shr
or
retf
jbe
dec
add
add
xor
or
ret
iret
and
mov
sub
sbb
scas
sub
mov
dec
mov
sub
pop
stos
in
popa
mov
adc
ins
xlat
and
sbb
bound
push
and
xchg
ror
mov
mov
xor
and
mov
aaa
fwait
inc
xlat
mov
scas
dec
leave
in
std
out
xchg
push
xchg
mov
and
dec
mov
popa
and
add
imul
call
mov
call
push
loop
inc
cdq
enter
jnp
sbb
nop
imul
xchg
push
pusha
pop
sbb
cdq
je
lds
sub
add
mov
xchg
and
cmps
xor
fsub
imul
popf
aad
dec
sti
sbb
scas
pop
xor
xor
pushf
cmp
clc
rcl
mov
mov
mov
pop
int
retf
or
or
outs
sbb
(bad)
(bad)
mov
xchg
push
mov
push
mov
stc
push
mov
xchg
push
push
mov
call
xor
or
sti
shr
xor
cmp
es
jp
ss
sbb
sub
ret
add
push
movs
mov
ss
repz
js
shl
adc
loope
fstp
mov
mov
sub
xchg
push
fistp
jmp
pop
mov
jmp
aaa
sti
ror
xor
je
es
pop
inc
cwde
data16
add
adc
fisubr
mov
xchg
dec
test
scas
test
outs
mov
push
(bad)
sub
adc
bound
push
jae
jns
es
outs
into
xchg
xchg
sub
add
(bad)
inc
sbb
sar
jl
jne
scas
test
mov
and
mov
jo
int
arpl
scas
or
inc
or
std
adc
aas
repnz
xor
rol
sbb
pop
fbld
dec
nop
jmp
sub
jp
(bad)
scas
aas
push
sbb
cmp
cmc
and
jo
hlt
clc
jecxz
and
bound
sti
rcl
loopne
int3
cmp
in
movs
repz
and
add
scas
clc
and
ds
sti
mov
lock
push
and
out
push
sbb
adc
push
or
int3
sbb
mov
push
ins
mov
inc
or
sub
mov
dec
jmp
cmp
jns
mov
pop
sahf
clc
mov
out
scas
jo
cmp
dec
rol
pop
xchg
adc
lds
ds
mov
push
jno
frstor
or
imul
push
jnp
cld
cdq
sbb
(bad)
cmp
xchg
cmp
jb
dec
cwde
dec
xor
pusha
leave
nop
mov
jp
sub
pop
int
jecxz
xchg
xchg
sbb
xor
jge
dec
stos
test
and
je
popa
jbe
push
sbb
xchg
sub
xor
push
fadd
repnz
in
in
popa
daa
xor
lods
lahf
push
jns
pmuludq
lds
and
inc
xor
retf
mov
pop
repz
push
test
stc
movzx
inc
fwait
jne
(bad)
iret
mov
rcr
in
std
int
sbb
ss
stos
ja
mov
add
jmp
sub
(bad)
aam
enter
sub
movs
pop
call
jmp
fnstsw
inc
js
in
dec
in
add
iret
sbb
mov
sar
mov
adc
inc
xchg
push
outs
sbb
fdivr
movs
dec
push
idiv
sbb
(bad)
mov
out
cmp
jp
mov
lods
or
sbb
(bad)
ins
lea
pop
rcr
xchg
mov
xor
aas
movs
adc
pusha
bound
(bad)
and
xchg
les
mov
or
fistp
xchg
and
add
popa
cmp
push
push
rcr
dec
das
mov
repnz
jmp
retf
cmp
cmp
in
aam
jg
iret
push
add
arpl
lahf
or
cwde
fsubr
into
sbb
fs
fidivr
sub
icebp
sbb
jmp
leave
lds
jbe
adc
pop
xchg
test
xchg
stc
cmp
pop
ja
pop
dec
add
faddp
cmp
mov
sub
and
push
ds
scas
or
cmc
push
sub
imul
retf
stos
add
inc
call
stc
(bad)
aam
lea
scas
adc
ret
pop
mov
sub
test
xchg
aam
pop
adc
push
pop
jle
pop
test
int
sub
jbe
std
sbb
jg
and
jo
mov
pop
cli
movs
xchg
and
jp
imul
jmp
aam
mov
add
call
sar
scas
or
xchg
pop
outs
mov
pusha
jne
jle
inc
pop
test
cs
sub
fxch
dec
mov
fdivr
sar
nop
fisttp
inc
pushf
aad
in
cdq
cld
jle
call
jne
xor
addr16
jne
das
bound
outs
(bad)
xlat
mov
ins
inc
aaa
stos
test
rcr
out
pusha
adc
fcom
dec
or
xchg
pop
dec
xchg
cs
add
pop
into
daa
mov
xchg
xor
pushf
mov
mov
call
mov
mov
push
iret
dec
test
jle
xor
or
mov
ins
and
jnp
nop
test
mov
jp
and
add
pop
jecxz
cmp
jecxz
pop
retf
inc
fistp
movs
jge
test
sbb
popf
xor
pusha
cmp
imul
std
and
sti
(bad)
adc
inc
or
mul
sub
sbb
xor
stos
fisubr
mov
(bad)
in
mov
mov
jmp
(bad)
(bad)
shr
test
inc
mov
dec
stc
dec
add
cdq
mov
lods
(bad)
dec
pop
jbe
fwait
mov
jg
int3
mov
push
mov
in
cmps
pop
dec
ficom
movs
aas
jp
ret
mov
fisubr
mov
push
cli
push
xchg
clc
mov
jae
and
dec
mov
mov
sbb
mov
cdq
cmc
dec
or
jg
pop
jge
mov
shr
inc
loope
mov
not
pop
std
sar
(bad)
in
popa
xor
jnp
mov
imul
bound
ret
(bad)
enter
dec
push
mov
retf
sub
mov
mov
jo
push
dec
out
arpl
sbb
ds
out
dec
mov
inc
push
stos
shl
xor
add
aas
lds
mov
fcom
gs
xlat
cld
xchg
mov
jp
inc
pop
out
das
adc
pop
adc
add
push
mov
add
lods
pop
jge
push
pop
jnp
and
push
out
inc
sbb
ins
xlat
loope
test
mov
shl
xchg
inc
mov
call
xchg
repz
push
test
jbe
xor
rcl
jge
push
add
inc
div
push
out
mov
iret
cmp
cmp
repnz
rcl
mov
and
push
retf
into
jno
stos
xor
iret
fs
cdq
inc
jmp
lahf
pop
mov
fcmovnbe
fstp
outs
fsubr
xor
dec
pop
or
sub
repz
les
xor
iret
retf
sbb
jge
sti
and
je
arpl
mov
rcr
adc
adc
ret
(bad)
iret
sar
int3
out
out
cmp
xor
xor
jecxz
dec
sbb
cmps
xchg
jne
xchg
repz
mov
pop
dec
push
mov
sbb
dec
fucomip
rol
inc
push
shl
repnz
mov
cmp
cmc
cmp
repz
adc
sahf
scas
stos
aam
jmp
mov
imul
or
pop
sahf
jmp
or
inc
clc
mov
cmp
(bad)
scas
scas
xchg
fisub
and
ret
sahf
int
xor
push
outs
sub
inc
fsub
(bad)
scas
enter
int
jb
and
mov
or
sahf
ds
adc
xchg
adc
xchg
call
imul
cmp
call
jne
inc
inc
jo
imul
push
shl
inc
adc
fidivr
imul
dec
and
aaa
dec
ror
jmp
jno
push
mov
in
mul
mov
mov
jle
xchg
sub
cmp
cwde
lods
push
adc
in
cli
pop
cwde
lods
loop
dec
push
mov
pusha
les
push
cmp
and
dec
pop
movs
or
loopne
ret
push
je
sbb
xor
or
repz
cmp
pop
imul
cmc
movs
pop
xchg
or
add
add
in
inc
mov
stos
or
inc
aas
loopne
mov
mov
cmp
iret
pop
mov
das
retf
adc
in
xor
sub
jmp
aad
cmp
dec
and
sbb
es
pop
xchg
push
test
or
jae
or
ss
sbb
fsub
(bad)
shr
dec
and
mov
dec
mov
in
jne
jl
and
cs
mov
scas
dec
adc
push
or
sbb
inc
lahf
mov
mov
data16
jno
jmp
rcr
stos
cdq
adc
xchg
jmp
ja
pop
dec
mov
push
repz
or
push
jge
scas
push
sbb
pop
rcr
mov
jecxz
jnp
cwde
jmp
fmul
sbb
or
sub
xchg
push
sbb
vpsadbw
loope
fsubr
adc
mov
mov
pop
cmps
cmp
adc
movs
xor
dec
adc
push
es
adc
push
fbstp
mov
sub
je
jo
or
add
ja
mov
ds
sahf
and
loopne
mov
loopne
mov
outs
sub
jmp
or
xchg
das
clc
in
js
xor
(bad)
fcomp
inc
int
add
push
mov
jnp
sub
dec
dec
xchg
rep
pop
mov
int3
inc
stos
cwde
jge
mov
cwde
mov
sbb
inc
mov
inc
clc
btr
pop
jns
pop
xor
repz
push
(bad)
cs
(bad)
call
jo
mov
stc
mov
ret
arpl
sub
inc
dec
inc
(bad)
cld
lods
(bad)
adc
pop
jnp
inc
sub
out
push
cli
aad
in
inc
push
mov
(bad)
bound
mov
or
fs
retf
fsub
pop
dec
push
jb
cld
cdq
ret
push
pop
jae
iret
inc
jmp
cld
cmp
popa
jmp
retf
inc
ds
jecxz
and
xchg
(bad)
stos
not
(bad)
cdq
mov
sti
lods
int
sub
pop
xchg
cmp
mov
mov
loopne
cmp
shr
sub
jae
pop
jb
aas
mov
mov
jae
add
into
inc
sbb
mov
jnp
pop
pop
mov
jle
cld
xchg
jno
sub
aad
mov
into
sti
push
out
ret
enter
mov
inc
ds
arpl
mov
add
daa
cmp
fisttp
test
aas
dec
inc
fdivp
xor
jp
mov
jne
mov
pop
retf
fiadd
cld
dec
out
cmp
dec
ja
rol
movs
adc
push
dec
movs
mov
(bad)
fadd
sub
push
mov
ret
or
xchg
mov
std
ins
pop
popf
xchg
sbb
stos
das
cdq
retf
shl
icebp
or
jb
sar
pop
xchg
inc
out
pop
sub
sbb
xchg
rcl
xchg
rcl
push
bound
in
movs
nop
jg
aam
dec
in
mov
icebp
mov
xor
xor
fmul
std
sar
mov
cdq
les
lock
cmp
mov
out
mov
cmp
xchg
cwde
(bad)
mov
aaa
cdq
shl
xchg
dec
cs
push
cwde
fcomp
fs
push
fmul
pop
mov
cmp
pop
and
cdq
mov
cmps
aad
cmp
in
adc
lock
imul
sub
les
pusha
loopne
inc
sbb
lahf
retf
sbb
repz
dec
jp
jmp
adc
mov
push
je
sti
and
xor
push
xchg
sbb
jmp
add
mov
xchg
fadd
jb
xor
fwait
bound
frstor
pop
arpl
jnp
or
div
fcom
xlat
rcr
out
mov
push
pop
mov
sbb
dec
addr16
cld
cmp
(bad)
mov
push
bound
movs
and
dec
aad
pop
into
cmp
mov
xor
xchg
mov
test
ins
int3
sar
cmp
in
pusha
and
fbld
xchg
loop
mov
jp
push
adc
dec
dec
lea
push
and
sub
(bad)
push
mov
push
lock
in
push
dec
xchg
inc
inc
mov
fdivr
ss
stos
arpl
stos
mov
mov
mov
frstpm(287
(bad)
or
std
pop
xor
(bad)
dec
lds
cs
std
inc
call
fmul
inc
push
and
fwait
std
push
(bad)
jmp
dec
call
jge
xor
gs
test
sub
les
jmp
push
mov
gs
inc
call
movs
pop
xor
dec
sub
sbb
dec
pop
popf
movs
cmc
jmp
dec
shr
pop
adc
inc
add
popa
pavgb
pop
stc
xchg
sub
push
adc
push
mov
cmp
(bad)
out
inc
dec
sar
pop
adc
push
sub
ss
inc
loop
or
xchg
retf
stc
loop
call
movs
xchg
test
jno
add
inc
lods
out
into
push
mov
cli
ja
cwde
dec
aaa
sbb
xchg
in
sub
cwde
mov
imul
bound
sahf
mov
int
fcmovbe
mov
dec
sbb
mov
or
pop
mov
or
aad
inc
clc
mov
xchg
ds
mov
xor
xor
mov
pushf
mul
sub
cmc
push
xchg
fisubr
test
push
imul
aam
adc
xchg
push
ss
ins
movsx
push
scas
xlat
mov
inc
cs
ins
bound
mov
mov
adc
cdq
addr16
cmps
or
popf
in
fcmovne
sub
div
inc
test
in
or
inc
push
sub
int
xor
push
xor
(bad)
mov
loope
adc
sahf
test
call
dec
mov
mov
out
push
aad
std
mov
fwait
dec
jge
or
pusha
mov
inc
popa
int3
mov
mov
or
pop
je
push
leave
push
pop
retf
pop
xchg
int
cwde
cld
ins
dec
fld
ds
add
inc
add
and
addr16
pop
lahf
inc
mov
xchg
leave
pop
leave
ret
sar
dec
in
or
retf
sub
inc
bound
xchg
mov
lock
push
fild
push
stos
ds
ret
cmp
fild
mov
mov
cmp
adc
pusha
mov
bound
xchg
pop
and
xor
jnp
cmps
rcl
dec
adc
sbb
mov
shl
jl
mov
mul
rcl
jmp
cmps
ins
jmp
cs
push
adc
jo
mov
jp
mov
imul
addr16
(bad)
shl
sub
cmp
cmp
sbb
fmul
xchg
add
aad
addr16
cld
sbb
rol
aam
mov
sub
dec
cmp
repnz
cdq
sub
test
add
int3
pop
div
inc
std
xchg
pop
jne
popf
fistp
in
fdivr
popa
pop
mov
int
ds
fstp
xor
mov
loopne
jl
mov
hlt
mov
in
ror
pusha
mov
stos
jl
fisubr
jne
mov
inc
xchg
mov
cmp
push
pop
sbb
jg
pop
clc
dec
(bad)
mov
les
xchg
mov
or
adc
aaa
leave
or
xchg
out
push
aaa
(bad)
test
sub
push
ins
in
mov
or
dec
or
icebp
xchg
xchg
aam
pop
lds
add
sub
es
and
dec
adc
jo
xor
mov
mov
inc
sti
or
jo
inc
pop
jne
mov
scas
mov
pop
xor
adc
mov
cli
fld
ret
jbe
sub
jle
inc
jle
xchg
pop
mov
mov
fcomp
loope
daa
icebp
int3
inc
add
(bad)
hlt
pusha
adc
mov
adc
call
cwde
adc
punpckhbw
adc
clc
xchg
sbb
jmp
out
arpl
pop
rcl
inc
pop
mov
dec
mov
imul
mov
adc
cmp
ret
jb
jle
cmp
mov
call
cmp
retf
ins
sbb
adc
xchg
xchg
fidiv
data16
jle
push
iret
inc
sub
not
ret
and
int3
out
ins
fwait
outs
cli
enter
xchg
or
test
in
pop
scas
lds
icebp
mov
repz
push
push
dec
mov
xor
sti
sbb
sahf
mov
inc
mov
std
cmp
sbb
xchg
xchg
fcomi
xchg
nop
sub
add
in
sub
jae
push
sub
test
in
push
ja
outs
xor
fcomip
aad
pushf
sub
daa
add
and
pop
popa
out
clc
fstp
cmp
sbb
movups
push
popa
outs
nop
loope
add
push
and
je
dec
out
inc
fnstcw
inc
cmp
xchg
xchg
inc
sub
xchg
mov
jne
or
add
mov
dec
mul
fidivr
mov
cmp
ficom
and
scas
ins
loop
std
sbb
std
es
bound
dec
or
rcr
outs
inc
cli
lods
lock
(bad)
into
mov
add
xchg
lahf
inc
sub
and
dec
mov
mov
push
and
(bad)
sub
mov
xor
les
nop
sbb
fmul
(bad)
int3
mov
push
int3
pop
inc
int
outs
jmp
lea
lea
mov
nop
icebp
push
outs
loop
xchg
mov
sbb
test
(bad)
retf
sub
bound
and
arpl
adc
fcmovb
gs
inc
and
scas
xchg
add
mov
(bad)
ror
sub
and
js
test
das
dec
stc
xchg
xor
mov
xchg
cmp
outs
stos
dec
loop
push
push
inc
jmp
inc
aaa
jmp
loop
addr16
call
sbb
mov
test
jae
mov
int3
mov
mov
stos
jmp
mov
mov
ror
(bad)
das
fldcw
mov
dec
pop
jge
stos
scas
jmp
mov
mov
and
mov
push
fs
fld
ds
pop
dec
popa
mov
inc
xchg
sub
pop
inc
mov
xchg
sbb
sub
fidiv
(bad)
je
mov
fld
pop
dec
out
in
push
icebp
loopne
popa
ja
push
dec
das
je
pop
jle
daa
es
push
icebp
(bad)
imul
add
xor
dec
fucomip
lds
cmp
dec
das
xchg
pop
pop
pop
outs
xor
jnp
(bad)
jbe
cs
movs
jnp
xor
xchg
dec
ja
in
clc
out
pop
pushf
add
pop
mov
xor
push
test
aam
leave
dec
mov
jecxz
aam
sbb
pusha
scas
inc
cwde
das
mov
cdq
push
sbb
daa
dec
sti
push
outs
fcom
das
add
test
(bad)
(bad)
mulps
push
out
dec
je
or
retf
jo
or
add
aaa
push
inc
or
sahf
push
cmp
mov
aad
and
popf
cmp
xor
sub
in
and
rcl
jno
push
outs
das
std
popa
fs
mov
pop
push
mov
outs
cli
test
push
xor
in
lock
pop
mov
or
pop
pop
push
retf
and
mov
cmps
and
xchg
das
aad
mov
jl
or
rcr
and
dec
xchg
push
ins
mov
ins
xchg
inc
mov
and
sub
sbb
jmp
cmps
es
icebp
pop
xchg
popf
inc
imul
stc
push
or
adc
cli
jns
test
bound
movs
mul
adc
imul
out
sub
pusha
push
xor
push
push
stos
pop
and
movs
lahf
pop
fiadd
adc
cmp
enter
nop/reserved
inc
sub
getsec
aam
cmp
jo
not
les
push
sub
arpl
dec
jnp
rep
dec
mov
sub
mov
int3
fnstcw
adc
mov
jno
(bad)
aad
nop
vmwrite
shr
cmp
xor
addr16
in
push
inc
or
dec
mov
push
pop
or
sbb
sub
jnp
sub
mov
inc
ja
sahf
jmp
nop
mov
mov
sahf
fisub
sbb
cmps
in
lods
fisubr
mov
pop
or
sti
arpl
mov
xchg
sbb
cmp
enter
mov
fadd
test
cld
cwde
test
lea
jl
icebp
cmc
fistp
sti
(bad)
call
aam
and
sahf
xchg
aas
jl
push
out
xchg
lds
icebp
mov
pop
cmp
push
shr
adc
cdq
rol
nop
pop
xchg
movs
cmps
mov
shr
xchg
sub
aad
jmp
and
outs
sti
mov
loopne
loope
pop
sbb
movs
adc
not
fidiv
and
daa
(bad)
movs
mov
js
outs
and
xchg
jae
addr16
push
adc
inc
jecxz
xchg
adc
je
in
inc
or
mov
(bad)
aad
mov
jl
les
and
mov
mov
popa
push
ins
sbb
les
inc
xchg
inc
jmp
pop
cs
cmc
movs
sti
rcr
fld
jno
mov
lds
xchg
jo
pop
pop
(bad)
mov
and
movs
pop
mov
sbb
sar
sub
sbb
js
lahf
ret
aas
pop
push
pop
icebp
add
cmp
xchg
jmp
popf
cmp
sbb
xchg
aam
sahf
sbb
dec
in
add
jle
mov
lods
pop
xor
daa
inc
int3
popf
inc
sbb
add
loop
cwde
out
mov
ss
jo
jo
dec
add
or
je
mov
push
cmps
mov
cld
jle
xor
out
sub
jne
jge
cmp
lods
in
in
adc
or
sub
lea
dec
dec
out
lds
add
adc
inc
ins
mov
dec
sbb
stc
mov
mov
xchg
add
push
mov
neg
aaa
mov
addr16
xchg
(bad)
cli
test
pop
nop
adc
jne
mov
pop
pop
cmp
cdq
ror
mov
pop
(bad)
rcr
add
xor
sahf
int
sti
xor
fisttp
rcl
adc
clc
push
ror
jno
int
rol
imul
and
mov
push
cmp
add
rcl
test
push
ret
fdiv
shl
xor
jb
lahf
arpl
mov
cdq
enter
push
out
cmps
jbe
sub
lock
push
jmp
movs
xchg
mov
xor
in
sbb
sbb
mov
dec
add
cs
(bad)
std
cmp
and
xchg
popf
aas
or
jne
mov
adc
xor
cmp
push
inc
mov
cmps
int
fnstsw
or
ror
outs
mov
xor
sbb
dec
inc
and
pop
cmp
out
int3
int3
mov
dec
and
sub
ficomp
push
xor
adc
fild
rol
repnz
cmp
imul
iret
mov
and
fwait
shr
push
dec
and
adc
push
or
push
stc
xor
ins
jmp
fs
push
cmps
dec
dec
adc
cmps
stos
adc
icebp
mov
sbb
or
in
and
sbb
int3
iret
arpl
or
test
scas
ja
adc
ror
add
retf
loope
repz
sbb
xchg
inc
and
test
sub
es
add
outs
push
lods
cmp
push
addr16
push
sub
jecxz
ja
adc
movs
lea
jne
pop
stos
mov
mov
outs
cmps
jecxz
out
test
push
cs
xchg
cli
push
sar
fisttp
cmps
push
add
pop
ja
cmp
and
dec
jno
mov
mov
add
jmp
enter
jl
and
push
mov
adc
fwait
sub
xor
sbb
mov
jecxz
(bad)
cmp
rol
adc
xor
xor
aaa
fcom
outs
push
outs
pop
jecxz
lods
retf
sub
ins
fadd
or
jge
dec
stc
gs
push
imul
sub
push
out
mov
arpl
push
add
sbb
ret
out
retf
mov
out
inc
pop
sbb
mov
aam
(bad)
in
add
jl
rcl
rcl
imul
dec
dec
js
fdiv
pop
rcl
movs
fimul
(bad)
push
xor
mov
pop
inc
inc
pop
dec
add
pop
push
pushf
lahf
and
out
cmp
pop
inc
pop
neg
pop
add
(bad)
or
and
arpl
rcr
popf
shl
paddb
sub
push
lods
pop
fs
xchg
(bad)
in
pop
call
mov
push
es
fsubr
adc
addr16
or
lea
es
cmp
and
adc
xor
cmps
fstp
xor
sbb
int3
push
adc
cli
test
dec
mov
(bad)
repnz
push
xchg
in
ror
ds
cld
sbb
aas
stc
inc
mov
mov
mov
ret
and
(bad)
fldenv
and
and
mov
jge
les
(bad)
sbb
or
mov
out
dec
test
sti
test
mov
mov
jne
lods
addr16
push
mov
cmps
lods
fndisi(8087
dec
aaa
cmc
push
sbb
xor
mov
add
enter
sub
mov
mov
fdivr
ins
mov
mov
outs
out
pop
inc
mov
les
imul
mov
cmp
stos
mov
sbb
sbb
sbb
dec
push
dec
xor
push
ins
push
sub
imul
repz
xlat
mov
cmps
loop
xchg
ss
bound
ror
add
int3
imul
shl
push
xchg
push
repnz
mov
xor
inc
push
leave
fdiv
fisubr
xchg
popf
xchg
cmp
lds
std
mov
and
pushf
dec
mov
sti
add
mov
nop
imul
call
inc
cmps
inc
stos
enter
out
mov
sbb
xor
pop
jo
arpl
sbb
adc
mov
out
inc
(bad)
push
push
pop
push
pop
lea
dec
jns
call
adc
add
das
adc
outs
ja
mov
loopne
mov
lea
and
sub
call
int
adc
mov
cld
stc
mov
(bad)
mov
test
dec
iret
jl
repnz
sub
xchg
fadd
sub
sbb
or
(bad)
cmp
or
pop
adc
and
push
in
into
mov
hlt
and
in
mov
jo
ja
stc
scas
call
pop
call
jl
sbb
adc
sub
pop
jmp
and
sub
rcl
call
mov
in
test
xor
invd
clc
xchg
arpl
ficomp
xor
xor
loop
inc
adc
fs
push
jge
push
inc
push
retf
repnz
fldl2e
sub
inc
lods
enter
mov
push
mov
enter
dec
icebp
fnstenv
sub
mov
sub
rol
lahf
xchg
stc
inc
cli
inc
mov
or
ror
jae
fsubr
inc
jno
or
inc
xchg
sbb
push
imul
cwde
std
xor
push
xor
xchg
cli
movmskps
add
or
adc
mov
mov
shl
rcl
mov
dec
pop
adc
leave
ret
(bad)
fild
mov
in
je
dec
in
push
mov
out
xor
cwde
and
clc
ds
cmp
xor
ret
ret
cdq
fsub
fucomip
fiadd
sbb
repnz
dec
xor
or
sub
push
mov
repz
mov
push
test
movlps
pop
(bad)
rol
pop
pop
or
retf
push
pop
xor
pop
cmp
mov
test
push
add
xlat
pop
sbb
mov
fs
xlat
push
add
pop
mov
mov
fldenv
or
xor
cmp
push
mov
pop
sbb
push
stos
lock
fucomi
xor
les
xchg
leave
data16
mov
dec
mov
movs
mov
jae
dec
inc
jb
sbb
pop
jmp
dec
std
(bad)
push
add
ds
shr
fwait
imul
mov
sbb
xor
lds
loope
ret
icebp
inc
push
in
test
inc
fisub
cdq
in
adc
xchg
or
lock
push
mov
pop
and
jnp
call
push
cli
dec
cmp
mov
jmp
gs
inc
icebp
xchg
jmp
icebp
mov
xchg
call
ror
mov
int
dec
mov
into
fiadd
and
retf
xor
sbb
scas
push
lahf
(bad)
jge
sub
push
mov
fs
sub
hlt
stos
push
push
setp
pop
cld
inc
mov
mov
ficomp
mov
jl
outs
aad
add
fstp
(bad)
cmp
or
xor
mov
and
cmp
push
and
call
pop
push
mov
mov
adc
cmp
cld
dec
mov
mov
cmp
clc
movs
or
test
fld
sbb
retf
push
push
sbb
(bad)
shl
imul
mov
fstp
xlat
mov
mov
dec
mov
inc
loopne
inc
ins
imul
(bad)
mov
or
pop
mov
mov
push
test
loop
adc
add
mov
imul
inc
stos
jp
ds
jge
add
inc
data16
int
inc
inc
mov
test
sti
in
xchg
pop
adc
xchg
rcl
adc
fsin
jge
or
xor
(bad)
mov
rol
cmps
push
xor
inc
xchg
in
xchg
xchg
xor
pushf
xchg
sbb
popa
shl
cs
mov
ins
sbb
aad
xchg
mov
fidivr
or
nop
jns
pusha
jg
mov
mov
outs
retf
inc
inc
test
shr
push
ins
cmp
pop
inc
int3
fs
jno
loope
xor
sbb
daa
xor
sahf
cmp
call
adc
int
push
cmp
repz
in
jmp
(bad)
lock
lods
sub
push
ret
sbb
outs
xor
sub
jne
cmps
into
ss
mov
sub
sub
sub
cmp
push
pop
cmp
leave
dec
loopne
test
nop
movs
in
dec
push
dec
faddp
je
(bad)
push
cdq
cmps
fwait
addr16
xchg
sub
fst
xchg
aam
pop
fs
out
dec
rcr
sub
xchg
pop
cmp
jle
ins
jb
mov
cdq
clc
jbe
dec
aad
jg
cmps
and
movs
mov
sub
jge
ins
retf
xor
mov
pusha
mov
xchg
sub
sub
add
add
out
outs
jecxz
outs
sub
sti
cmps
mov
push
retf
xchg
mov
pop
pop
cmps
not
aas
imul
sti
in
jmp
or
into
push
mov
int
das
inc
mov
popf
ffree
sub
out
mov
or
pop
out
sahf
xor
push
lock
mov
adc
and
xchg
pop
xlat
int3
fsubr
lds
les
cmp
push
cmp
cmp
mov
mov
out
push
aad
mov
push
adc
(bad)
rol
or
cmp
pop
shr
sub
pushf
test
or
shl
push
bound
in
mov
and
xchg
aam
adc
xchg
mov
sbb
push
dec
shr
fs
fldpi
cmc
mov
lods
arpl
scas
imul
out
mov
mov
out
pushf
bound
inc
js
retf
gs
push
xchg
and
inc
test
(bad)
retf
call
fs
xchg
or
and
cmp
and
mov
cmp
fsub
mov
jnp
xchg
lds
sbb
retf
test
mov
push
arpl
call
je
leave
imul
in
lahf
mov
(bad)
mov
cld
cmps
sahf
cmp
std
lock
inc
jl
pop
data16
jle
mov
lods
adc
leave
and
mov
add
test
inc
pop
xor
sub
add
es
mov
and
imul
fbstp
pop
(bad)
lea
cmp
loopne
scas
sub
mov
aas
adc
add
xchg
aaa
fild
xlat
or
add
mov
in
fisttp
pop
sub
setbe
xor
aas
xor
xor
stos
xchg
sbb
sbb
sub
push
dec
fwait
mov
in
(bad)
push
pop
dec
ins
sub
loop
dec
xor
and
loopne
fist
or
mov
cmc
xor
jecxz
fst
mov
outs
test
dec
jbe
not
fldcw
push
clc
inc
jno
mov
ror
loope
jg
cmp
sbb
push
mov
or
cwde
sbb
sbb
iret
push
mov
pop
outs
pop
inc
and
fist
stc
push
xchg
cmp
push
test
push
inc
adc
fadd
cmc
ror
call
lahf
mov
sub
pop
outs
mov
pop
or
mov
mov
and
vpaddb
call
pushf
mov
lods
clc
xchg
adc
aas
inc
fstp
scas
pop
out
pop
pop
das
out
stos
xrelease
addr16
mov
fs
sahf
test
sub
mov
cmp
sar
stos
jl
sub
jmp
jmp
pop
mov
retf
mov
int
mov
cli
jbe
repnz
push
loope
iret
stc
jo
sbb
push
push
push
add
sub
xlat
imul
jne
daa
and
jne
sbb
mov
xor
int3
outs
add
push
sub
outs
xchg
and
aaa
mov
jae
and
movs
jo
jb
jo
lds
dec
jl
mov
pop
daa
xlat
mov
sbb
xchg
and
pop
pop
push
mov
out
(bad)
enter
in
mov
mov
adc
jmp
cmc
movs
lahf
inc
test
pop
stos
xor
mov
test
xor
pop
cmp
int
mov
std
(bad)
retf
pop
in
xchg
cwde
push
stc
out
mov
ds
retf
clc
pop
aam
sub
data16
ins
aas
sub
jl
xor
mov
outs
stos
xor
lar
add
xor
pop
stos
pop
movs
sbb
push
call
sti
inc
mov
(bad)
add
fnstsw
sub
pop
push
mov
mov
jbe
xchg
ss
pop
mov
adc
inc
fisubr
jbe
sar
mov
lea
adc
jno
xor
stos
je
ret
stc
in
xchg
test
call
(bad)
push
or
dec
mov
rcl
add
mov
repz
xchg
sub
push
sbb
jnp
mov
xchg
cwde
adc
retf
fnop
push
adc
jge
push
pop
dec
push
mov
xchg
(bad)
cmps
xor
pop
aad
sub
sub
out
jnp
scas
jmp
aaa
sbb
xor
push
mov
out
dec
and
inc
pop
jo
push
div
aad
pushf
xchg
sub
les
or
aaa
jae
cs
not
call
adc
mov
cdq
icebp
and
(bad)
or
sbb
loope
call
out
cmp
cmp
js
push
push
aaa
mov
out
pop
ja
adc
mov
outs
mov
cmps
mov
push
push
jp
dec
test
aad
cmc
call
test
sti
cmp
test
dec
sub
rol
mov
cmp
inc
inc
mov
add
adc
(bad)
loopne
test
pop
dec
sar
push
pop
in
xchg
xor
mov
imul
dec
mov
stos
cmps
dec
pop
inc
jno
add
rcr
clc
lods
sbb
repnz
bound
sbb
test
pop
jb
inc
icebp
mov
leave
scas
jns
dec
mov
lea
dec
xchg
pushf
(bad)
xchg
add
pop
dec
je
jecxz
fcmovbe
xor
xor
and
retf
or
add
sub
(bad)
xchg
movs
inc
aad
dec
cmp
shl
jo
imul
sub
sbb
and
xchg
jmp
lods
mov
cmp
inc
jbe
jbe
fidivr
pop
add
pusha
cmp
sub
mov
sbb
je
jbe
adc
fisub
stc
(bad)
jp
int
add
mov
js
cmp
cld
xchg
push
arpl
cmp
ror
lea
add
(bad)
xchg
pop
cmp
fsub
inc
outs
leave
outs
add
dec
pop
mov
cmp
and
pop
aaa
xchg
fwait
adc
stos
leave
clc
xchg
and
mov
scas
add
rcr
add
mov
and
es
jne
lods
inc
je
push
cmp
stc
cmps
out
mov
dec
addr16
jmp
call
mov
stos
cmc
jnp
les
and
mov
loop
mov
test
inc
xchg
addps
test
sbb
xor
outs
fidiv
jnp
mov
and
into
outs
sub
mov
mov
aad
packuswb
(bad)
pop
cmp
cmp
push
push
fcom
test
int3
mov
mov
ja
mov
jge
sbb
xor
sbb
icebp
xchg
int3
inc
(bad)
cmp
cld
pop
mov
mov
mov
mov
les
sahf
mov
jne
rol
leave
lock
ret
cmp
mov
pop
mov
int3
outs
aas
inc
adc
cmp
jp
mov
ficom
cmps
fldenv
fs
ficomp
or
cdq
jbe
pop
push
pop
add
aaa
sbb
inc
out
xor
xor
mov
sub
fs
push
dec
xor
pop
pushf
call
retf
pop
loopne
sub
push
loopne
loopne
jo
mov
xor
push
mov
inc
sub
in
xchg
pop
pop
pop
cmp
(bad)
(bad)
or
bound
in
xchg
xchg
icebp
test
jmp
scas
in
dec
icebp
fcom
into
inc
cld
xchg
(bad)
xor
jae
pop
and
jge
and
push
cmc
out
push
aas
mov
fcomp
mov
inc
nop
retf
shr
xchg
or
(bad)
or
xchg
in
mov
ror
cmp
xor
cmp
outs
rcr
sub
shr
add
ss
out
test
cmp
mov
outs
jo
jns
sub
outs
mov
mov
push
xor
clc
pop
inc
jns
(bad)
fld
and
push
mov
cmps
push
mul
inc
mov
pop
adc
lds
pop
mov
jo
mov
mov
test
pop
mov
jae
lods
xchg
sahf
and
push
(bad)
push
adc
mov
jne
int
test
ja
dec
sbb
std
sbb
xor
add
push
pop
jle
mov
bound
mov
outs
test
push
jae
dec
clc
xchg
das
jg
fs
dec
ins
mov
pop
out
std
sbb
mov
push
aaa
jecxz
test
push
rcl
or
mov
add
push
mov
loop
mov
adc
out
hlt
adc
mov
sub
dec
cmp
sbb
add
sbb
nop
xchg
lahf
mov
xchg
or
movs
dec
adc
mov
inc
aam
cwde
popa
push
stc
fcom
cwde
dec
cmp
cmp
inc
push
or
in
mov
push
mov
or
shl
mov
or
pop
adc
inc
outs
ins
xchg
or
dec
jae
mov
cmps
aad
mov
mov
lods
daa
inc
dec
and
imul
rcl
add
aam
jl
dec
enter
jns
sub
push
fisttp
jmp
xchg
sbb
cmps
inc
arpl
nop
xchg
data16
cmp
inc
dec
mov
ss
xchg
pop
jnp
push
daa
in
outs
cmp
or
in
pusha
pop
ja
leave
or
fwait
jo
add
pop
cmp
dec
addr16
out
sub
cmps
jl
jnp
or
pop
or
add
cmp
outs
loopne
sub
(bad)
inc
or
call
fwait
div
repnz
or
push
ja
int
mov
scas
jl
stos
dec
sbb
push
xor
fdivr
sbb
fs
sbb
and
fidivr
or
or
push
adc
mov
and
push
mov
test
(bad)
daa
mov
in
add
pushf
fisubr
push
push
(bad)
mov
mov
mov
scas
add
repnz
dec
sbb
cli
mov
inc
stos
aam
jns
fs
inc
clc
xor
lock
fsubr
mov
add
add
jl
popf
shl
jne
inc
adc
adc
daa
std
add
lahf
mov
or
mov
push
mov
jp
adc
pop
push
xchg
pushf
mov
cmp
gs
loope
adc
inc
push
pop
repz
movs
test
cmp
xchg
outs
pop
aas
adc
cmp
and
mov
(bad)
call
gs
pop
sbb
int3
clc
jmp
movs
out
ja
push
shl
in
mov
dec
imul
and
lea
pop
in
dec
cmp
(bad)
popa
in
les
mov
(bad)
ret
shl
jmp
fs
popa
pop
ret
cmc
mov
mov
jecxz
sbb
push
cmp
and
jmp
mov
pop
or
les
inc
loope
mov
sub
pop
retf
cmp
call
scas
idiv
rdpmc
fist
cmp
mov
mov
dec
mov
ins
mov
or
adc
(bad)
lock
in
sub
sbb
dec
fistp
out
jnp
gs
or
dec
outs
push
imul
ins
jge
hlt
xor
mov
add
mov
scas
ja
ror
mov
rcr
or
ret
and
pusha
mov
out
mov
cmp
mov
pop
jbe
daa
popa
stos
inc
inc
daa
scas
in
dec
jno
lods
inc
aaa
mov
inc
cdq
pop
fisttp
(bad)
cwde
adc
push
mov
popa
in
jle
scas
in
retf
nop
ror
dec
fld
xchg
out
stos
mov
addr16
clc
es
jne
shr
addr16
push
push
loop
in
xchg
aaa
xlat
inc
neg
test
mov
pop
xor
inc
pop
jecxz
test
popa
lea
mov
repnz
xchg
(bad)
fild
iret
jns
mov
cmc
add
cmp
repz
sar
es
iret
and
test
call
stos
add
bound
cmc
int3
xchg
cwde
sbb
mov
mov
sub
mov
test
push
mov
push
push
ins
nop
outs
rol
mov
(bad)
int
xchg
push
stc
aam
jno
or
push
aad
mov
add
loopne
cmps
pop
inc
mov
inc
push
sbb
mov
inc
xor
push
(bad)
je
stos
xchg
mov
xchg
in
lods
mov
or
sub
cmp
sub
xor
mov
push
xor
mov
lods
das
icebp
int3
loop
cmp
dec
(bad)
pop
std
adc
push
pop
sbb
mov
lods
out
les
neg
shl
sub
pop
adc
mov
retf
sti
push
out
add
push
lahf
push
cmp
and
scas
xor
cs
mov
mov
das
mov
xor
jg
adc
jbe
mov
cmp
test
fisubr
test
lods
sbb
cli
inc
push
aaa
jmp
cmps
pushf
out
xchg
lahf
outs
and
sub
cmp
test
sub
jns
mov
sahf
or
pop
in
or
inc
pop
fcomp
xor
push
std
xchg
mov
dec
add
shr
fidivr
jne
add
mov
call
cmp
push
cmps
test
imul
dec
jns
popf
inc
mov
push
jns
cmp
xchg
and
fcom
fcom
jae
mov
push
in
push
mov
jmp
std
jge
push
nop
mov
push
pop
add
add
retf
pop
mov
mov
imul
push
add
scas
or
jp
xchg
xor
mov
call
sbb
or
mov
clc
push
mov
cmp
cmp
dec
sub
shr
sbb
cmps
aad
iret
dec
lahf
mov
loop
outs
lahf
push
adc
push
hlt
add
mov
mov
pop
dec
jg
or
adc
ret
mov
xor
popf
aas
push
mov
std
fdivr
loope
ret
dec
cmc
neg
inc
iret
xor
in
xor
call
xchg
in
mov
inc
inc
sub
arpl
xchg
jo
fcmovbe
ds
cmp
mov
das
(bad)
enter
adc
or
xor
mov
push
adc
in
xchg
pop
enter
mov
mov
cld
inc
stc
mov
mov
add
mov
mov
inc
add
jg
cmp
lds
xchg
sbb
std
cmps
inc
mov
xchg
ret
dec
stc
(bad)
and
xor
lea
cmc
mov
push
dec
sub
es
(bad)
jle
cdq
out
pop
and
out
mov
in
mov
jne
scas
ins
mov
jp
bound
add
xchg
sbb
push
test
outs
adc
inc
int
mov
sbb
mov
mov
xor
mul
jl
jmp
je
push
lock
and
lock
cmps
mov
inc
dec
jl
rcl
retf
xor
data16
mov
in
iret
jecxz
bnd
mov
out
clc
push
(bad)
push
pop
push
jge
sbb
inc
sahf
addps
js
leave
and
popf
sub
in
retf
jnp
jo
pop
and
loope
mov
inc
jne
pop
aas
xchg
es
dec
xor
cs
mov
xchg
imul
sbb
xor
mov
daa
popf
fisubr
jle
sbb
sub
cmp
mov
jbe
or
test
loope
lahf
push
jmp
enter
aas
aas
xlat
adc
inc
jecxz
mov
outs
push
pusha
(bad)
mov
aas
test
call
lods
(bad)
cmp
fcomi
shr
sbb
mov
outs
adc
pop
push
out
leave
mov
daa
mov
mov
idiv
aad
push
(bad)
iret
ret
pushf
inc
nop
xchg
push
mov
in
jmp
ja
lods
ins
inc
push
imul
adc
mov
mov
ret
jo
fistp
or
out
xchg
or
inc
out
add
inc
lahf
jg
adc
loope
mov
clc
jg
push
sub
cmps
push
inc
stos
std
ins
out
mov
xchg
dec
or
adc
loope
push
inc
push
pop
jecxz
inc
jmp
nop
sub
imul
lods
out
mov
mov
mov
pop
push
loope
push
and
std
loopne
ror
repnz
or
iret
lods
outs
shr
add
lods
je
jmp
dec
adc
sbb
jne
loopne
cli
jno
inc
movs
scas
jl
dec
les
data16
mov
ds
(bad)
xchg
test
push
fbstp
jns
jae
inc
call
mov
jmp
xchg
dec
mov
mov
pop
cld
sub
fistp
mov
xor
or
das
ja
imul
add
push
dec
dec
push
(bad)
ror
cld
loope
mov
push
adc
and
sbb
jae
xchg
hlt
pop
data16
jbe
rcr
inc
add
mov
push
push
dec
xlat
xchg
jns
movs
pop
ret
movs
jno
dec
retf
xchg
mov
sbb
mov
div
sbb
shr
inc
jp
das
repnz
push
rol
inc
lock
ins
cmp
xor
cmp
cs
xchg
pop
cmp
hlt
test
and
mov
inc
cld
xchg
adc
sti
les
data16
out
in
sbb
imul
std
nop
cwde
aam
aas
imul
or
cmp
push
imul
in
xor
lea
or
cmps
mov
(bad)
repz
retf
add
stos
jb
outs
in
adc
lock
aam
cmp
inc
ficomp
xchg
test
mov
(bad)
cwde
add
push
ins
nop
sbb
in
cmp
xor
mov
les
dec
adc
les
pop
jnp
jge
fidivr
push
xor
fiadd
aam
add
inc
adc
jnp
jbe
int
ret
bound
pop
xor
add
pop
test
mov
jns
xor
push
mov
pushf
or
out
cmp
jne
sbb
cld
pop
xor
je
mov
pop
fld
sub
cmp
add
test
jp
fimul
out
cwde
pop
adc
sbb
push
repnz
inc
movs
push
sbb
xlat
ret
jl
out
pop
cmp
ror
in
mov
ins
or
loop
jg
dec
(bad)
dec
sbb
push
sub
ins
gs
dec
in
mov
adc
mov
ficomp
movs
jp
rdpmc
ins
push
js
fucomi
xchg
or
or
int3
push
js
mov
gs
div
sbb
cmp
icebp
retf
cmps
sub
pusha
out
mov
imul
mov
push
inc
cmps
cs
cmps
repnz
sbb
cmps
pop
rcr
cmp
popa
pop
xor
aam
lea
stos
or
cmp
or
ins
xlat
jo
les
pop
out
call
pop
xor
and
jne
sbb
mov
jnp
lea
shr
add
div
loop
sbb
lds
xor
ja
mov
dec
and
pop
scas
stc
xchg
push
mov
dec
inc
repz
and
in
retf
dec
pusha
and
pop
xchg
cmp
hlt
sub
add
call
sbb
push
outs
cmp
push
call
(bad)
or
dec
(bad)
cmps
mov
sti
xlat
fimul
push
mov
js
adc
dec
ret
out
(bad)
xchg
cmps
mov
ins
pop
or
sbb
dec
retf
cmc
cmps
cmp
and
daa
push
aam
pop
inc
mul
sbb
adc
xchg
sub
(bad)
sbb
ss
movs
test
cmps
daa
inc
idiv
scas
neg
fldenv
dec
loop
or
add
cld
in
cld
xchg
arpl
xchg
ror
mov
aam
aaa
sbb
add
jae
and
cs
mov
nop
clc
mov
pop
pop
sub
fist
fst
sub
gs
fdivr
data16
push
sahf
or
inc
icebp
sbb
jns
ins
jno
cmp
stc
sub
pop
adc
loop
cli
push
add
mov
mov
sbb
idiv
(bad)
push
jne
das
mov
mov
jg
lds
mov
ins
ja
fwait
outs
aas
clc
adc
xchg
lea
cmp
mov
fiadd
cmp
sbb
push
fisttp
mov
mov
dec
push
mov
fsubr
js
aad
adc
pop
pop
xchg
iret
xor
sti
adc
and
loop
pusha
mov
pop
push
xchg
movs
movs
mov
jb
mov
je
push
xor
psubusb
add
sub
out
inc
dec
in
jmp
or
bound
call
sub
(bad)
mov
rcr
jno
test
ret
lds
std
push
push
jl
push
fsub
mul
les
pop
xor
in
add
cmps
(bad)
jmp
mov
pusha
jno
mov
repnz
rol
test
xchg
cmps
ja
mov
rcr
das
xchg
fisub
test
xor
arpl
mov
loop
imul
sti
arpl
xor
jbe
lahf
nop
fs
jg
mov
jecxz
xlat
jg
jg
jp
add
mov
ss
shr
adc
mov
scas
adc
rcr
push
adc
cmps
cdq
cmp
je
add
ret
lock
and
push
inc
loope
(bad)
jne
mov
aas
les
imul
shl
sbb
pop
inc
or
in
(bad)
out
dec
mov
cmp
dec
call
sahf
xlat
inc
fs
mov
mov
stc
arpl
stc
aaa
es
pushf
dec
dec
pop
jecxz
out
mov
cmc
dec
push
pop
mov
lods
lahf
loop
ins
mov
fs
sbb
daa
mov
cmp
je
movs
or
shl
mov
xor
and
imul
jnp
adc
aas
xchg
xor
ret
mov
mov
push
xchg
sbb
loop
scas
(bad)
push
fiadd
pop
mov
mov
inc
push
xor
and
loopne
dec
test
sti
(bad)
mov
push
add
or
push
mov
aas
or
add
inc
xchg
shr
sbb
iret
pop
push
inc
dec
cld
in
push
imul
xchg
adc
xor
aam
push
cmp
loopne
inc
cld
lahf
(bad)
lds
cmp
sub
(bad)
fbld
clc
push
fstp
test
sbb
mov
pop
xchg
xor
sub
xor
jnp
pop
mov
repnz
or
mov
loopne
arpl
cmps
push
jmp
xor
jo
sbb
sub
mov
mov
xchg
mov
rcr
call
pushaw
xchg
mov
repnz
inc
jo
out
es
sub
cmps
jmp
add
mov
repz
cmc
mov
jmp
mov
add
jns
cwde
into
dec
int
mov
pop
mov
pop
inc
add
(bad)
aaa
aaa
arpl
xchg
add
and
cmp
fsubr
jne
sub
inc
pop
bound
cmps
test
mov
mov
mov
xchg
sbb
jmp
sub
adc
js
jg
push
and
cmps
and
mov
movs
outs
sbb
fmul
fs
inc
adc
xchg
stos
and
mov
(bad)
push
ret
push
ror
sahf
xor
loope
xor
and
aaa
jb
pop
push
xor
imul
test
mov
cmp
mov
or
dec
push
cld
push
cli
inc
adc
mov
daa
sub
jne
cwde
std
out
mov
call
jo
mov
stc
mov
mov
jmp
jnp
xor
cmp
sbb
mov
jl
lods
sti
in
push
mov
movs
and
mov
adc
icebp
jmp
ins
and
es
retf
inc
rcl
or
adc
je
mov
cmp
call
or
sub
fsubrp
pusha
xor
xor
push
ja
retf
fmul
jnp
repnz
test
loope
inc
pop
clc
pavgw
cld
int
and
inc
xchg
cld
cmc
sahf
out
xchg
aad
xor
repnz
mov
ds
adc
daa
pusha
imul
or
pop
sar
xor
mov
adc
call
popf
jae
popf
jmp
test
int
pop
mov
push
fild
and
jmp
xchg
out
push
cmp
int3
jmp
mov
mov
adc
shl
(bad)
mov
das
cmp
pop
inc
mov
movs
dec
fcomi
fdiv
out
mov
mov
add
je
shr
pop
setle
adc
in
push
ins
mov
mov
jmp
xchg
mov
js
jne
xchg
popf
sub
cmp
daa
ins
mov
sbb
push
cmp
inc
das
out
cmps
in
adc
loopne
cmp
pop
retf
xchg
xlat
add
mov
(bad)
ja
arpl
cmp
leave
cmp
aad
movs
jns
imul
or
dec
cmps
dec
adc
jb
and
adc
repz
jmp
and
sub
push
jbe
push
jo
cs
sbb
cdq
aam
repz
dec
push
cmps
fstp
adc
jno
mov
fdivr
sub
aad
repnz
push
cmp
xchg
mov
pop
dec
push
xchg
mov
and
loope
xchg
mov
popf
fdivr
iret
pop
add
in
bound
je
inc
mov
or
xchg
jmp
or
into
sub
fild
pop
fs
sbb
popf
mov
outs
sub
pusha
jecxz
or
sahf
adc
sub
adc
fst
bound
cmp
push
adc
shl
out
in
leave
cmp
ja
sub
mov
dec
pop
inc
sub
iret
or
ret
sahf
addr16
ins
mov
cmp
fimul
add
or
sahf
mov
adc
and
xor
pop
or
(bad)
dec
cld
mov
and
mov
test
push
out
mov
aas
stos
pop
sub
leave
fisubr
pop
sub
cmp
and
lods
or
movs
test
fs
xchg
ja
and
sahf
add
ins
outs
rcl
adc
stc
movs
lods
into
arpl
sti
fnstcw
fld
push
out
int
inc
jecxz
(bad)
out
jno
or
push
and
cmovns
xor
fwait
cmps
or
cmp
cli
sub
in
aaa
inc
sbb
fmulp
cmp
xor
ret
ins
fisttp
sub
add
(bad)
or
cdq
jns
jmp
popf
push
out
jg
push
sahf
ja
pop
call
mov
mov
lea
cmp
cmc
and
xor
xchg
test
jns
dec
push
jp
cmp
mov
jl
hlt
nop
and
(bad)
sbb
cmp
cmps
cli
pop
pop
sar
(bad)
out
(bad)
xor
pop
push
sbb
pop
cmc
mov
cmp
xor
aad
movs
xor
jecxz
out
jecxz
push
aaa
push
dec
or
xchg
add
pop
clc
adc
xor
xor
stc
hlt
sbb
pop
sbb
ss
jmp
inc
movs
lods
sbb
jns
sar
dec
add
mov
xchg
sbb
das
and
lods
and
mov
dec
pop
out
or
clc
sub
(bad)
(bad)
mov
mov
mov
inc
out
je
int
jae
and
cmp
dec
gs
mov
fild
cli
push
xor
add
pop
or
inc
cmps
push
int3
fisubr
(bad)
enter
push
cld
sub
sbb
dec
rcr
mov
mov
push
mov
mov
imul
adc
leave
test
xchg
xchg
mov
aaa
mov
jne
fisubr
and
test
neg
(bad)
sbb
std
cmp
xor
fdivr
scas
mov
bound
ds
inc
ins
inc
inc
jmp
mov
mov
mov
xchg
push
adc
mov
xchg
pop
push
jae
sub
arpl
sbb
not
adc
iret
cmp
adc
jge
push
jmp
lods
dec
pop
xlat
ror
push
jmp
stos
push
mov
or
rcr
(bad)
sti
sub
xchg
iret
test
outs
inc
pop
loopne
push
rcr
ins
scas
sub
inc
lock
mov
push
mov
xor
mov
sub
jne
nop
mov
lahf
mov
and
sti
stc
inc
leave
sti
pop
adc
sub
xchg
xor
xchg
fldenv
shr
fsubr
and
inc
adc
or
repnz
jg
ds
out
adc
fs
mov
xchg
xor
mov
ins
aad
inc
xchg
add
pop
add
xor
jmp
or
jge
loop
les
add
ds
ins
leave
jno
and
dec
lea
ror
ins
ror
test
cmp
push
mov
rcl
ds
test
repz
popf
cmp
icebp
fbstp
jp
jb
xlat
jp
aas
mov
jge
out
push
jo
jp
push
pop
(bad)
gs
jp
add
fstp
cmp
pop
lock
nop
pusha
les
adc
cld
push
stos
retf
sub
and
mov
leave
xor
or
push
test
(bad)
xor
pop
mov
xchg
add
or
loope
adc
repnz
call
mov
add
fsubr
cwde
in
ror
mov
arpl
cmp
jl
hlt
cmp
push
in
enter
cmp
out
push
push
add
std
inc
mov
les
or
outs
push
or
in
ss
paddsb
xor
jl
mov
das
xlat
sbb
xchg
clc
pop
mov
std
cs
cwde
call
add
push
cmc
loope
xlat
push
sti
mov
rol
mov
xlat
mov
out
stos
inc
(bad)
out
and
mov
cmp
cld
pop
test
push
lods
dec
shr
add
das
popa
enter
aad
sbb
call
push
jnp
out
in
repz
push
shl
sbb
push
push
push
rol
movs
in
xor
mov
mov
lock
and
pop
lods
sbb
pusha
test
xchg
icebp
adc
test
rcr
outs
jge
jbe
fst
sbb
mov
xchg
stos
push
mov
int3
cmc
lock
pop
mov
jb
js
fisubr
sti
mov
retfw
in
push
bound
sbb
repz
sub
test
sbb
inc
test
xlat
(bad)
mov
jmp
in
cmp
in
stos
stc
or
lahf
pop
out
cs
mov
std
jns
nop
cmp
sbb
mov
rol
jle
sbb
push
or
rcl
add
gs
fistp
dec
sbb
data16
in
xor
jp
jnp
cmps
jge
xchg
inc
or
popa
in
rcr
cmp
(bad)
aaa
out
test
mov
add
mov
and
ins
cs
dec
add
repz
seto
cmps
dec
rcr
fimul
test
or
aaa
mov
add
push
fwait
loopne
retf
pop
in
sbb
sbb
out
add
fs
xor
int3
(bad)
mov
mov
cs
jg
stc
bound
jbe
dec
ss
pop
mov
sbb
imul
xchg
cs
ins
sub
add
sub
inc
and
mov
fcmovnbe
dec
push
cmp
in
mov
xchg
inc
or
push
ins
cmp
add
mov
lods
add
outs
dec
pop
loop
and
sar
sti
movs
fcmovne
xor
push
dec
sbb
xchg
mov
pop
push
xor
fnsave
call
lds
(bad)
ja
mov
dec
or
in
pop
cmp
jle
jno
jg
dec
jo
scas
or
mov
add
inc
aam
mov
jmp
cwde
pop
mov
fnstenv
lock
pop
sub
cmp
lahf
hlt
lea
cmps
sbb
xchg
mov
pop
dec
lods
and
bound
push
outs
mov
ror
ins
das
es
fmul
imul
rcr
ret
pop
imul
cmp
sub
pop
iret
mov
sbb
jmp
dec
sahf
sub
or
stos
shr
push
out
mov
test
ror
cli
sar
jo
pop
cmp
jg
js
mov
and
sub
push
mov
jnp
sbb
mov
lahf
fild
sbb
jno
and
inc
fadd
cmp
add
enter
loop
jnp
cmp
sbb
cld
cwde
popf
daa
sbb
jnp
push
xchg
inc
lods
sbb
je
push
sahf
fist
or
push
je
mov
inc
shl
xchg
sbb
loope
ins
cdq
imul
dec
adc
out
(bad)
mov
sbb
fdivrp
fadd
or
mov
ror
xor
inc
mov
loop
scas
retf
aam
cmp
stc
fimul
add
push
movs
sbb
sub
mov
pop
jl
loop
cmp
hlt
ja
push
jecxz
xchg
cmp
test
and
ficom
(bad)
xchg
iret
fcomp
xchg
out
xor
pushf
push
test
push
rol
enter
int3
push
dec
daa
xlat
into
aam
xlat
inc
xchg
dec
test
aam
cld
data16
mov
xchg
test
xor
xchg
mov
in
ret
push
xchg
clc
in
xor
popf
jne
fs
xchg
cdq
jb
aaa
stos
(bad)
repz
sbb
jbe
fnsave
sub
pop
pop
dec
std
mov
jecxz
jp
pop
ins
sbb
inc
xchg
dec
pop
xchg
push
addr16
int3
aaa
sbb
mov
or
popf
sub
cwde
xor
repnz
retf
add
scas
add
xchg
stos
aad
mov
xchg
inc
bound
dec
add
sbb
movs
inc
fild
imul
(bad)
scas
ins
aad
ud2
and
mov
cmps
jge
add
leave
retf
sahf
xchg
outs
das
out
(bad)
out
push
outs
xchg
daa
xchg
sbb
lods
sbb
mov
push
xor
adc
pop
inc
into
fnstsw
lock
push
fs
mov
sahf
sbb
out
or
sbb
and
or
inc
in
xchg
popa
ret
les
sub
iret
dec
jmp
outs
mov
and
add
sbb
fld
(bad)
cli
pop
mov
mov
into
hlt
mov
push
adc
fcom
mov
xchg
jb
test
jl
or
sub
popa
dec
pusha
sub
xchg
dec
push
(bad)
pop
repz
mov
ror
or
jbe
push
mov
std
dec
or
mov
inc
lods
loop
xor
xchg
dec
retf
rol
sub
xchg
jecxz
xor
popa
enter
ds
aas
sub
outs
(bad)
ins
sbb
ss
fs
or
(bad)
les
mov
in
retf
cs
and
cmp
not
ret
test
fcomp
inc
inc
push
(bad)
sbb
imul
xlat
fimul
xchg
bound
mov
push
lock
stos
out
add
or
dec
es
mov
mov
test
dec
loop
mov
adc
push
pop
jecxz
loope
xchg
ss
push
aam
movs
sbb
and
dec
scas
sbb
add
mov
daa
dec
mov
icebp
jmp
inc
xor
add
retf
adc
js
arpl
xchg
icebp
imul
enter
es
jne
or
push
(bad)
add
sahf
je
xor
out
mov
add
stos
jp
sahf
and
repnz
pop
mov
xlat
and
pop
popa
pushf
jmp
dec
sar
mov
cmps
inc
inc
dec
lahf
hlt
pop
fadd
les
movs
rol
dec
out
int3
popa
movs
js
dec
stos
jle
mov
dec
sbb
dec
cdq
cld
sti
cmp
in
loope
jnp
mov
or
inc
fs
push
(bad)
dec
mov
jge
mov
out
dec
scas
mov
push
sbb
xchg
in
pop
mov
or
or
fsub
jecxz
clc
add
test
out
in
dec
dec
imul
push
les
loope
std
xor
jmp
retf
mov
pop
out
xor
lods
adc
movs
les
mov
mov
jmp
inc
aam
cmp
into
inc
into
lods
in
adc
loop
ret
setae
inc
add
mov
jae
cmp
and
dec
iret
iret
adc
push
rcl
xor
adc
in
data16
push
jg
enter
imul
fcomp
popa
shr
inc
and
mov
push
fadd
xchg
jmp
sahf
shl
add
mov
aam
popa
stos
jo
pop
jb
push
leave
lods
aam
or
adc
retf
int3
mov
in
shr
dec
adc
mov
cmc
das
dec
pop
in
aaa
adc
sbb
sub
adc
pop
clc
mov
inc
mov
(bad)
xchg
sub
fcom
mov
add
inc
fwait
scas
push
inc
xchg
xchg
ja
scas
xchg
out
xchg
add
arpl
dec
xor
pushf
pop
imul
sahf
sub
and
or
cmps
sbb
xchg
sbb
repnz
add
push
fsubr
xchg
or
lea
jmp
mov
inc
lea
mov
loope
repnz
ja
arpl
ds
push
fidivr
pop
pop
call
pop
mov
mov
push
scas
dec
fimul
jge
cmps
jl
addr16
jmp
scas
or
ficom
jg
lock
lock
ins
pusha
test
addr16
push
lahf
bound
pop
push
fucom
xchg
rcr
ss
jecxz
mov
data16
in
inc
adc
jecxz
aas
mov
in
and
adc
shl
mov
pop
(bad)
inc
xor
xchg
or
pusha
in
call
cmc
push
in
fsubr
loope
and
repnz
push
fwait
xchg
in
shr
scas
sub
mov
xor
hlt
imul
xchg
pop
xlat
jmp
xchg
xor
pusha
leave
pop
loope
mov
jecxz
xor
popf
cmp
bound
in
dec
push
and
sbb
and
dec
add
adc
fadd
fmul
enter
sbb
(bad)
inc
out
cmps
sub
mov
fstp
push
xlat
xor
or
push
popa
fld
sbb
pop
call
sbb
in
fxch
int3
fcomp
ret
push
loope
out
scas
in
imul
lea
jae
rcl
sbb
out
or
call
outs
push
dec
mov
ja
loop
int3
outs
pop
sar
inc
arpl
mul
leave
repz
pushf
ror
pop
inc
lods
pop
sbb
cmp
pop
lds
in
sub
mov
sub
dec
xchg
dec
rcr
sub
call
jne
pusha
pop
int3
ret
cmp
aas
arpl
int3
xor
data16
adc
test
dec
mov
fidivr
adc
(bad)
jb
push
add
ror
or
sbb
adc
inc
mov
mov
add
gs
cmp
adc
jl
xor
leave
aas
call
retf
into
loope
js
mov
sti
xchg
pushf
popa
imul
call
inc
out
mov
adc
xchg
cmc
out
mov
std
test
sub
pop
mov
cmp
pop
test
out
jp
xor
in
mov
(bad)
in
popa
jbe
push
add
lahf
and
push
mov
add
mov
inc
mov
dec
pop
movs
es
shl
add
cmp
popa
sub
out
mov
ret
pushf
xchg
jg
pop
xor
xlat
sbb
inc
out
shl
(bad)
xchg
not
or
pop
daa
xchg
push
jo
mov
(bad)
ror
mov
sbb
lods
inc
ins
jno
mov
(bad)
je
mov
(bad)
int3
adc
pop
loope
(bad)
add
mov
cmp
int3
jg
adc
rol
mov
(bad)
fcmovne
jl
pop
xchg
and
fidiv
sti
cmp
out
in
adc
sub
inc
pop
sbb
(bad)
repnz
jbe
pop
mov
cmp
imul
jge
sub
mov
dec
mov
fmulp
movs
lock
data16
dec
push
leave
not
repz
or
imul
adc
jmp
xor
mov
jne
pop
pop
push
popf
sbb
fsubr
push
iret
jle
mov
mov
or
pop
and
inc
mov
mov
test
add
lds
cmp
icebp
bnd
xor
mov
mov
dec
or
jne
jmp
rol
loope
add
mov
stc
(bad)
sahf
xor
daa
xor
repz
inc
stos
rcl
mov
push
std
popf
repnz
sub
mov
pop
and
cmps
bound
loope
cdq
in
ja
sahf
dec
pop
cmc
fsubr
mov
aad
jo
stc
jp
neg
pop
bound
inc
pushf
xor
sbb
mov
cmps
repz
mov
mov
push
loop
mov
(bad)
cmps
in
nop
sub
mov
ret
cmps
dec
mov
jb
mov
inc
popa
out
sbb
out
or
addr16
or
aaa
dec
es
mov
in
push
popf
idiv
mov
mov
mov
sbb
xchg
jno
fs
sti
fiadd
pop
fld
aad
stos
jmp
inc
jg
push
pusha
mov
neg
ins
jb
add
repz
inc
add
push
(bad)
jno
cmp
scas
scas
mov
jo
xor
addr16
outs
push
xor
mov
xchg
push
push
add
jne
movs
or
mov
xor
pop
sbb
mov
or
out
xor
dec
sbb
pop
sub
(bad)
jmp
loope
add
cli
or
es
bound
mov
add
out
xchg
pop
dec
dec
mov
pop
mov
add
mov
nop
adc
mov
daa
rep
sub
and
clc
in
jmp
jmp
jae
mov
mov
sub
retf
(bad)
mov
mov
clc
sub
mov
dec
mov
or
out
aaa
popa
pop
lods
and
pop
rcr
and
aam
mov
fwait
sbb
ret
pop
push
loopne
mov
mov
adc
es
les
je
call
into
jg
dec
sti
pop
icebp
or
add
push
loope
retf
fmul
loope
neg
in
push
(bad)
in
ror
jmp
js
ret
sub
xchg
jne
mov
inc
sub
sbb
xchg
xchg
cmp
push
add
loop
sbb
sub
es
add
mov
mov
sub
fld
inc
mov
jg
(bad)
daa
xor
fadd
adc
pop
aad
xchg
call
sub
cmps
dec
loop
ficom
adc
push
inc
mov
mov
xchg
ins
push
setne
inc
adc
retf
out
cmp
sbb
retf
push
(bad)
call
sbb
push
sub
add
jecxz
xchg
lods
cmp
mov
add
add
popa
pop
pusha
mov
cwde
in
fwait
je
pop
sar
sub
jmp
jb
jl
xchg
jno
and
jo
loop
mov
jbe
mov
xor
arpl
sub
dec
int
cdq
mov
mov
sbb
mov
xchg
std
mov
sbb
sbb
push
outs
xor
dec
lods
fadd
adc
pop
pop
push
adc
and
imul
fisubr
inc
mov
stos
add
push
pushf
push
icebp
push
call
xor
test
pop
das
inc
add
dec
bound
sbb
mov
sbb
inc
cmp
inc
shr
(bad)
mov
sbb
mov
(bad)
mov
cld
fwait
cld
or
pop
cmp
lods
and
pop
int
stos
pop
pop
cli
loopne
nop
xchg
daa
pop
outs
dec
retf
into
sbb
fsubrp
call
jg
mov
int3
sub
test
popa
mov
xchg
sahf
mov
cdq
ins
jo
cdq
xor
ret
popa
xchg
jg
mov
call
cwde
push
xchg
in
pop
loopne
repz
push
test
mov
std
bound
sbb
push
pop
pop
push
add
sub
mov
adc
dec
cs
lock
stos
add
mov
adc
inc
xor
mov
ss
mov
push
xor
xchg
dec
rol
rcr
xchg
jecxz
mov
int3
popf
popa
hlt
jmp
shl
cmp
(bad)
jmp
(bad)
fwait
stc
js
or
sbb
pop
sbb
mov
sbb
push
dec
iret
or
pop
data16
inc
mov
xchg
adc
in
mov
and
stc
shl
push
or
mov
push
mov
out
mov
mov
pop
mov
fcmovnb
leave
cmp
push
mov
lods
sbb
sbb
int
test
movs
and
sub
and
int
stos
pop
inc
adc
mov
lods
jl
nop
cmp
aaa
in
xor
dec
mov
lea
das
(bad)
xor
(bad)
mov
pushf
nop
mov
stc
add
out
mov
push
push
sahf
into
sbb
xchg
mov
ja
cmc
js
inc
adc
mov
fst
fcmovnu
addr16
inc
pop
fwait
and
xchg
sbb
std
data16
nop
fdivr
xor
stos
mov
fld
setae
js
scas
vpcmpgtb
jmp
pop
mov
pop
in
push
dec
imul
mov
dec
jbe
mov
jp
and
ja
and
mov
scas
out
cld
adc
daa
sub
leave
mov
into
lods
pop
in
les
xor
std
js
mov
data16
xchg
sbb
add
loopne
add
ins
dec
int
xchg
cmps
pop
jecxz
jg
ins
jns
lea
ins
aam
jb
int
fnstcw
add
pop
scas
lea
int3
(bad)
sbb
adc
out
dec
mov
scas
dec
leave
ja
xor
xchg
add
fs
lds
call
push
(bad)
iret
push
pusha
or
lock
xchg
or
lea
jl
clc
dec
add
jge
pop
movhps
and
fidiv
mov
loopne
push
arpl
pop
add
jne
mov
(bad)
popf
out
retf
in
fcom
adc
inc
pop
jmp
pop
mov
(bad)
sbb
ins
sti
stos
mov
shl
imul
push
push
aas
and
ficomp
mul
push
lods
push
sbb
ds
jmp
in
inc
lods
xchg
inc
dec
mov
call
mov
dec
or
sbb
fdivr
sub
xor
fbstp
jb
mov
sbb
mov
mov
scas
imul
xor
cmp
iret
xlat
shl
ds
sbb
cs
xchg
sti
imul
jmp
sbb
add
cs
hlt
mov
mov
xchg
and
pop
xchg
ret
and
inc
mov
fnstcw
int
ret
out
dec
xor
out
push
xchg
jmp
push
mov
scas
in
in
cmp
jle
jo
xor
jmp
fdivr
or
ds
and
cmp
lahf
sbb
popa
pop
add
cmps
mov
out
push
mov
adc
cld
in
pop
push
pusha
loop
mov
vpsrlw
mov
dec
(bad)
rol
test
in
adc
xchg
in
retf
sbb
outs
cld
pop
fs
mov
dec
mov
(bad)
sbb
sbb
mov
and
add
test
mov
push
or
retf
xchg
enter
mov
call
int3
pop
pop
pop
inc
add
(bad)
(bad)
jb
scas
aad
dec
push
dec
ds
xor
xchg
scas
es
aas
es
jnp
adc
xor
cmps
push
and
retf
pop
inc
test
enter
jbe
lahf
loop
rcl
shr
call
sub
retf
sub
cmp
fstp
jp
adc
pop
call
rcl
pop
xchg
ror
call
push
gs
pop
jle
movs
mov
test
and
xor
cmp
in
pop
push
ret
sub
xchg
adc
cli
and
xor
imul
mov
adc
inc
pop
sbb
adc
stos
jae
cmp
jecxz
adc
add
mov
cmp
lea
lods
push
sub
int3
dec
cld
lods
cmovnp
jg
adc
cs
add
inc
popa
add
and
cmp
(bad)
mov
fidiv
dec
mov
push
cmc
jge
or
adc
js
call
movs
xor
mov
js
sbb
(bad)
push
push
sbb
data16
mov
and
addr16
retf
stos
enter
out
pop
loope
ss
push
pusha
and
sbb
fisub
mov
jo
add
jg
je
add
mov
ins
add
movs
cmp
jo
inc
gs
sahf
or
jmp
ja
mov
xchg
add
fbstp
push
cmps
push
popa
mov
repnz
das
xor
mov
adc
jmp
dec
ret
and
xor
mov
out
push
ds
fmul
sbb
mov
enter
sbb
add
mov
add
rcr
adc
jns
dec
pop
or
push
hlt
adc
repnz
jecxz
lock
mov
enter
xchg
loopne
in
sti
adc
mov
pop
push
leave
outs
push
jae
iret
test
cmps
div
dec
stos
cmp
or
retf
outs
sbb
les
and
clc
cli
pusha
mov
adc
lods
aaa
test
push
jno
sub
xchg
ds
cmps
stos
popa
fwait
outs
into
and
xchg
mov
movs
xor
dec
aad
ror
sub
pop
adc
push
ds
movs
repz
shl
mov
jo
lahf
cmp
out
sub
jle
mov
xor
daa
mov
add
(bad)
sti
ficomp
out
mov
ror
or
(bad)
or
popf
lock
loopne
bound
test
in
xchg
adc
or
and
or
cs
retf
push
mov
push
pop
psubd
in
popa
cli
mov
dec
js
inc
add
lea
mov
lods
std
xor
(bad)
cld
es
inc
lods
adc
ror
inc
cmp
movs
xlat
dec
aaa
or
lds
sti
test
mov
xor
test
lods
mov
sub
xchg
push
aad
scas
push
ins
inc
retf
sub
retf
adc
pop
xor
(bad)
repnz
inc
rol
mov
ret
xchg
out
sub
push
add
cli
inc
fs
(bad)
mov
pop
adc
nop
dec
mov
pusha
scas
jo
pop
fdivr
mov
es
sbb
push
aam
push
push
imul
clc
outs
pusha
imul
xor
push
xchg
inc
stos
add
js
mov
cdq
jbe
lds
mov
nop
aad
pop
test
out
icebp
ficom
jb
push
mov
adc
subps
mov
xchg
xor
adc
pop
(bad)
gs
adc
inc
aam
stos
xor
pop
mov
pop
and
in
cmp
ins
xor
mov
mov
leave
mov
push
jno
xlat
adc
mov
pop
mov
mov
jbe
gs
xchg
dec
sub
pop
or
and
enter
push
jo
xchg
jp
jecxz
int3
repnz
aas
sub
aaa
add
mov
add
mov
inc
stos
cdq
mov
enter
pop
jne
xchg
aam
sub
add
(bad)
cli
or
sbb
mov
xor
movs
sti
cmp
add
nop
xor
ins
jp
or
add
jg
pop
sub
xor
adc
mov
cmp
fdiv
sbb
jecxz
repz
inc
add
push
sti
adc
xchg
out
(bad)
fnstenv
xchg
pop
js
gs
xor
(bad)
(bad)
clc
and
fs
sar
outs
lods
mov
stos
xor
das
aad
adc
repz
jns
or
out
mov
jg
xor
pop
pop
jg
pop
loope
pusha
mov
push
test
retf
cwde
xor
pop
dec
out
push
push
retf
ja
js
in
sahf
loopne
arpl
int
dec
(bad)
mov
pop
iret
dec
cli
std
inc
jmp
jge
jmp
pop
mov
mov
ret
xchg
(bad)
aam
lds
mov
mov
cmp
push
mov
add
push
repnz
rep
call
and
mov
jmp
(bad)
mov
adc
pop
ret
mul
movs
cmp
frstor
gs
ins
xchg
sub
sar
cs
mov
sub
sub
push
std
test
test
xor
push
lods
xchg
and
daa
call
cmps
and
hlt
cdq
pop
push
mov
cmp
(bad)
cld
mov
pop
sub
sbb
into
repnz
push
jo
xor
lock
pop
sar
jecxz
xchg
cmp
in
dec
xor
ja
jo
fisttp
add
out
mov
sbb
pop
aad
cmp
push
fnsave
xor
mov
adc
add
mov
cmps
and
add
shl
retf
xchg
fnsave
jne
jmp
lods
pop
rol
scas
push
cmp
hlt
dec
and
outs
or
or
push
xor
xor
fs
ror
hlt
xchg
int
push
je
xor
in
adc
ss
call
push
xchg
fs
adc
int
mov
popf
push
shr
ret
(bad)
add
mov
adc
and
sub
add
jns
call
cmp
add
jg
sbb
jbe
mov
add
mov
add
pop
mov
add
sbb
push
outs
mov
adc
push
push
scas
push
dec
aam
push
jle
inc
jmp
mov
push
mov
inc
sub
jg
jecxz
push
lock
mov
push
and
sub
adc
sbb
pop
clc
add
xor
mov
and
in
pop
adc
sti
in
aad
call
jge
into
lods
test
(bad)
push
add
adc
fs
test
mov
fwait
and
mov
(bad)
ja
or
dec
jbe
adc
repz
pop
fcomip
push
jecxz
test
jle
push
pop
jl
mul
jmp
jo
movs
dec
(bad)
dec
data16
out
(bad)
dec
or
push
push
lds
test
js
mov
inc
dec
mov
imul
jb
pop
aam
xor
xchg
leave
push
out
xchg
je
addr16
nop
add
pop
daa
cmp
enter
fild
test
or
or
jecxz
jle
mov
push
mov
adc
aaa
mov
xor
xchg
scas
out
push
inc
imul
ficomp
jecxz
test
xchg
gs
stc
push
fldcw
and
pop
xchg
and
fs
push
cmps
mov
fwait
lods
push
inc
ja
pxor
stos
(bad)
fist
xor
adc
mov
mov
adc
mov
add
mov
mov
aas
out
sub
xchg
pop
add
out
mov
jge
push
outs
inc
adc
lock
jmp
fcomp
sahf
int3
jecxz
mov
pusha
clc
push
mov
ret
sub
repz
je
out
cmp
popf
mov
stos
sar
jmp
mov
shl
and
lods
add
jecxz
das
jne
sbb
aaa
mov
out
xlat
or
xchg
or
call
ins
icebp
cmp
jae
test
mov
sub
mov
shl
ins
cmc
les
cmps
je
fsubr
ret
loope
icebp
sub
adc
out
lds
jo
pop
dec
ret
and
int3
mov
aam
test
je
inc
inc
out
mov
jnp
repnz
hlt
jg
repnz
pop
cmp
add
mov
ret
nop
xchg
loope
lods
push
rcr
pop
jae
test
out
repnz
lds
in
fmul
aam
sbb
pop
push
test
mov
push
and
sub
loope
sbb
imul
adc
(bad)
jbe
pop
push
out
sub
out
xchg
xchg
or
mov
pop
jg
stos
fcmovnbe
jno
cmps
les
sub
sbb
xchg
stos
into
loope
imul
mov
and
mov
mov
xchg
xchg
int3
and
push
jns
cmp
push
jge
ins
sub
nop
xchg
mov
mov
mov
(bad)
adc
mov
cmc
dec
or
or
push
cld
jmp
or
js
(bad)
cmp
test
fcom
sub
jns
dec
dec
movs
lods
lahf
(bad)
rol
ficom
push
lods
ss
mov
adc
movs
xchg
mov
ret
mov
sub
sub
cmps
neg
scas
movs
ficomp
std
push
and
faddp
cmc
sbb
xor
data16
sbb
movs
inc
push
and
add
push
in
jo
jle
adc
inc
mov
leave
lea
pop
lds
jp
and
mov
mov
pop
jnp
xor
inc
add
in
adc
out
push
popf
stc
rol
jno
ins
jmp
mov
pop
sti
out
xchg
scas
sbb
dec
sahf
xchg
fadd
and
push
mov
not
or
jl
ror
pop
add
cmp
ror
aad
int3
leave
sahf
sbb
call
adc
enter
movs
push
cld
call
inc
and
into
loop
scas
aaa
clc
nop
cmps
std
adc
pusha
int3
gs
test
icebp
stos
ror
adc
ret
sahf
push
lahf
shl
aad
cld
cmp
mov
or
sub
ja
push
fst
lea
icebp
in
fdiv
pop
jmp
jl
lods
out
xor
ins
push
and
addr16
idiv
sbb
fisubr
inc
retf
cmp
movs
rcr
sub
fdivrp
sbb
cmp
imul
ins
test
push
inc
cs
and
out
in
clc
add
pop
push
pushf
mov
shl
and
push
stos
xor
pop
dec
xor
push
jl
cmp
(bad)
call
cdq
pop
sub
sbb
cmp
mov
(bad)
mov
mov
xor
(bad)
sbb
pop
mov
mov
jb
mov
rcr
push
fisttp
imul
out
je
dec
and
push
fisubr
pop
pop
dec
cmps
lock
lahf
(bad)
enter
mov
xor
test
and
or
mov
outs
dec
sbb
out
nop
dec
mov
fsubr
(bad)
pop
call
lods
bound
jge
shl
mov
xchg
and
dec
dec
lods
nop
lahf
imul
push
sub
fistp
jnp
(bad)
jmp
sbb
push
jb
call
cmp
push
lods
lods
ficomp
push
dec
jns
adc
mov
fsub
mov
push
adc
loop
stos
xchg
sbb
frstor
add
bound
mov
jbe
xor
push
loopne
imul
mov
cld
push
les
mov
push
and
nop
out
xor
add
jmp
js
add
xor
jo
sbb
cmp
jbe
in
sub
stos
lods
imul
dec
add
and
adc
sub
jle
mov
jmp
dec
mov
in
neg
hlt
arpl
cmp
xor
loope
pushf
sbb
sub
sbb
dec
xor
push
mov
nop
jbe
jl
neg
xchg
in
mov
ror
std
inc
jp
add
in
ins
clc
jne
jmp
lods
mov
fnstenv
enter
loopne
outs
push
and
and
mov
shl
push
xor
adc
push
pop
cmc
xor
imul
div
in
jmp
loop
jb
sbb
(bad)
lock
pop
inc
jecxz
mov
mov
xor
xchg
nop
add
pop
ds
inc
push
pop
fadd
push
arpl
mov
adc
hlt
add
push
ud0
nop
mov
(bad)
xchg
pop
jo
mov
imul
stc
repnz
xchg
push
xor
xchg
stc
mov
cwde
push
xchg
shl
mov
mov
lods
test
xor
(bad)
iret
push
cmp
push
jmp
ret
icebp
fst
pop
push
push
push
jo
jecxz
retf
daa
ret
mov
adc
ret
fild
xor
mov
jne
sbb
das
mov
test
pop
dec
jp
sbb
jnp
pusha
fcom
mov
in
shl
inc
in
dec
sbb
or
iret
hlt
sub
movs
cmps
jae
outs
push
adc
ret
movs
jge
adc
add
dec
xchg
lods
in
mov
daa
or
movs
push
sbb
pop
dec
es
dec
dec
lock
shr
repnz
push
sbb
in
test
stc
shr
outs
add
or
movq
push
mov
(bad)
pop
sahf
(bad)
ret
dec
sbb
cmp
data16
xorps
xor
mov
pop
imul
xor
and
(bad)
test
lods
test
xchg
jmp
pop
ins
xchg
stc
in
pusha
mov
push
aas
jp
(bad)
movs
out
sbb
push
loope
outs
clc
mov
or
inc
push
pop
mov
pop
mov
test
sub
xchg
int
cmps
sbb
xchg
ret
mov
xchg
cmp
push
xlat
fwait
mov
ds
jae
mov
cld
pop
test
les
mov
xchg
inc
dec
add
movs
xor
jns
pop
dec
sub
sub
jecxz
pop
jns
jle
ja
inc
shl
push
fsubr
ja
adc
mov
sbb
stos
popf
jno
scas
fld
xchg
dec
call
dec
mov
sahf
and
sub
pop
sub
rcr
and
loop
push
jp
mov
mov
jmp
sbb
enter
jo
inc
mov
mov
retf
stos
jmp
out
adc
popf
scas
repz
cmp
int3
icebp
retf
cmp
hlt
clc
jecxz
jl
addr16
cs
arpl
sti
sbb
pop
push
pop
(bad)
ja
mov
fcomp
mov
cmps
xor
or
scas
fild
xchg
fadd
popa
stos
dec
pop
xchg
enter
xchg
fcomp
mov
das
hlt
jns
push
imul
xchg
sbb
dec
mov
adc
(bad)
xor
out
out
cmc
or
mov
sar
jp
mov
jmp
mov
xchg
xchg
inc
arpl
leave
mov
push
repnz
aam
xor
cmps
sbb
push
push
dec
sbb
scas
adc
xor
sub
pop
fwait
sub
add
sub
push
mov
daa
(bad)
push
inc
pusha
mov
into
outs
shl
xor
neg
in
or
push
sbb
sbb
scas
mov
push
outs
jmp
outs
add
fwait
cmp
sbb
mov
in
retf
mov
adc
adc
ins
push
mov
add
xchg
scas
xor
xchg
push
out
rcr
(bad)
dec
pop
and
ror
cs
sbb
inc
xchg
xlat
jecxz
popf
push
fadd
lock
jae
inc
pop
in
call
mov
inc
cdq
popa
imul
ins
shl
retf
jmp
push
out
les
sub
mov
shl
mov
xchg
aas
xchg
xchg
xor
jl
xor
cmp
stc
loop
mov
xchg
mov
out
das
in
pop
test
jl
retf
fst
jno
loopne
int
test
out
mov
push
(bad)
sbb
mov
test
xchg
std
mov
jbe
(bad)
fdivrp
scas
cmp
mov
or
bound
lods
cmps
in
sbb
xor
enter
mov
(bad)
pop
push
out
dec
sar
repnz
iret
inc
ds
iret
les
mov
sub
fs
popa
add
scas
test
lahf
or
sbb
iret
gs
stos
add
cs
xor
xchg
gs
push
cld
sbb
mov
cmp
pop
fbld
stos
enter
sar
retf
push
stc
sbb
mov
ins
retf
pop
jmp
mov
or
test
rol
or
jg
(bad)
jb
mov
inc
pop
and
sbb
add
add
jg
mov
mov
fild
clc
xchg
icebp
imul
cmp
int3
push
into
pop
les
add
inc
add
out
cmps
iret
mov
cmp
mov
(bad)
dec
pop
jp
xchg
mov
gs
sbb
out
or
cmp
scas
mov
mov
adc
xorps
in
dec
(bad)
adc
jb
pop
adc
pxor
std
outs
pop
inc
outs
jp
pop
mov
sbb
stos
(bad)
in
and
daa
pop
nop
ret
jbe
lds
out
jnp
sub
adc
leave
scas
lods
push
xchg
pop
add
add
test
into
mov
int3
dec
movs
inc
fsubr
sti
adc
lods
add
sbb
test
push
sti
test
lds
callw
push
es
xor
adc
dec
xor
js
ds
movs
sub
push
mov
sub
jl
leave
mov
out
int3
popa
and
call
jp
pop
mov
inc
out
mov
mov
pop
dec
or
leave
adc
xor
shl
les
in
mov
push
test
test
jmp
ins
inc
add
and
xchg
dec
call
mov
add
int
add
push
pop
es
loopne
test
mov
gs
add
lods
(bad)
jp
push
mov
in
and
jmp
pushf
mov
aad
rcl
fisttp
and
xor
or
and
icebp
push
hlt
xchg
fcom
push
and
mov
ins
push
xlat
(bad)
das
les
leave
lds
push
out
fsubr
sub
enter
cmovl
enter
(bad)
cmps
jmp
adc
mov
imul
cmps
push
dec
dec
sub
xor
(bad)
jns
jp
sar
ds
(bad)
push
push
cwde
mov
stos
mov
xchg
add
add
adc
and
xor
sbb
cdq
dec
xchg
push
cld
mov
pop
jo
imul
retf
xor
movs
mov
inc
dec
jecxz
cmp
push
push
pop
mov
ins
(bad)
sub
call
sbb
in
pop
or
adc
inc
cmp
or
inc
cmp
and
push
pop
repz
std
jmp
adc
mov
fsubr
movs
and
mov
int3
xchg
in
mov
jg
xlat
adc
dec
add
call
mov
sbb
xchg
das
jb
jmp
repz
fcomp
push
xchg
push
push
xor
dec
jmp
xchg
imul
dec
push
dec
call
out
scas
dec
mov
jg
xchg
test
pop
rcl
mov
sub
pop
rol
out
jecxz
lds
int3
push
in
(bad)
jb
fistp
stc
mov
and
stc
push
or
or
xor
iret
jp
cdq
call
sbb
fnstenv
and
jnp
mov
cmp
push
add
pusha
push
sar
pop
les
jg
mov
scas
cmp
ja
dec
cmp
out
sub
mov
fnsave
icebp
xor
mov
(bad)
sbb
adc
out
mov
sbb
dec
jge
nop
das
cdq
sbb
in
cmp
enter
sbb
jae
jl
pusha
xchg
cwde
xchg
sti
mov
cmps
int3
fs
cs
mov
ror
test
cmp
int3
pop
cmp
fidivr
test
ds
out
(bad)
push
add
retf
mov
mov
stos
mov
xor
out
(bad)
aad
and
mov
daa
ret
je
pop
cmp
push
in
pop
mov
pause
xor
jns
xor
pop
pop
sbb
movs
(bad)
adc
dec
movs
std
xor
xchg
sub
rcl
(bad)
jg
lods
fnstsw
and
push
aas
outs
test
cmp
jmp
fldenv
xchg
mov
xchg
xor
push
shl
btr
jnp
add
and
or
jmp
outs
dec
hlt
mov
movs
mov
pop
cwde
movs
dec
pop
(bad)
or
adc
or
pusha
fcomp
add
outs
bound
movs
mov
pop
dec
repnz
pop
inc
xchg
ret
cli
jle
pop
inc
adc
mov
cdq
retf
push
inc
jne
ret
add
mov
(bad)
adc
jb
jne
or
mov
push
rcl
add
ss
ficomp
shl
loop
fucomi
scas
push
lahf
test
retf
ins
dec
mov
stc
add
call
or
pop
out
cdq
cdq
push
leave
in
mov
inc
sub
test
mov
mov
ret
push
das
imul
pop
pop
(bad)
mov
xor
xchg
fisttp
les
mov
cmp
and
hlt
mov
and
sub
cmp
jae
push
sbb
add
mov
pushf
iret
mov
aad
adc
mov
cli
mov
adc
ficomp
jno
mov
mov
(bad)
fwait
ja
repz
and
mov
das
push
xchg
or
lahf
inc
hlt
mov
mov
enter
(bad)
jge
ret
sbb
push
ds
and
popf
not
push
push
cmp
(bad)
mov
das
fs
pusha
inc
cmp
pop
and
xchg
pusha
cmp
in
pop
mov
push
jmp
inc
scas
sar
xor
add
and
fistp
movs
inc
xor
mov
ss
int3
mov
idiv
sbb
mov
lods
(bad)
mov
dec
push
cmp
ret
cdq
and
pop
xor
scas
or
jmp
mov
mov
push
repnz
mov
imul
cmp
and
(bad)
mov
inc
lock
ret
mov
out
call
add
adc
iret
nop
jl
dec
je
cmps
(bad)
loopne
inc
dec
outs
aas
or
out
xchg
xchg
(bad)
jp
pop
dec
mov
scas
in
mov
lds
inc
bnd
xor
popf
fadd
pop
push
fistp
int3
xor
fadd
adc
xchg
inc
lods
mov
pop
push
push
fiadd
mov
sub
scas
(bad)
ds
cli
adc
xchg
jge
in
xchg
call
pop
pop
add
fadd
lock
idiv
test
repz
mov
imul
(bad)
in
ror
ss
imul
fwait
aas
aaa
adc
xor
nop
inc
call
add
aam
add
xor
sbb
retf
call
clc
push
rcl
mov
push
inc
sbb
sub
stos
fistp
call
out
xchg
ror
bound
sbb
push
or
sbb
(bad)
jae
push
dec
jecxz
popa
into
cmps
sbb
dec
jg
rcr
add
repz
dec
scas
mov
cdq
jo
stos
and
mul
xor
sbb
push
inc
add
xchg
aam
inc
pop
pop
cmp
push
fs
rol
in
ds
enter
stos
outs
adc
or
call
or
lods
call
jnp
(bad)
scas
sbb
and
test
cmps
add
cwde
repz
sti
cmp
retf
ja
push
dec
fs
mov
push
jmp
dec
cmp
clc
das
test
(bad)
fsubr
dec
pop
pop
jnp
add
mov
repnz
fsub
fadd
repz
jmp
sub
pop
clc
sub
jo
(bad)
push
mov
wbinvd
aaa
jns
int3
addr16
in
pop
jg
xchg
or
sbb
and
mov
push
add
pop
jnp
add
ss
jb
data16
enter
and
push
jp
mov
inc
ret
xchg
mov
pop
mov
dec
adc
xchg
in
push
jmp
mov
adc
into
sbb
nop
xor
mov
test
xlat
or
cld
mov
dec
xchg
sti
xchg
pop
xor
mov
aaa
add
jnp
in
fsubr
repnz
(bad)
and
mov
movs
push
pop
xchg
imul
or
test
jmp
ja
push
js
(bad)
pop
scas
mov
sub
push
into
xchg
(bad)
and
ret
jno
outs
adc
mov
mov
and
scas
jp
repnz
xor
cmp
pop
movs
push
pushf
push
or
mov
inc
ret
cs
rcr
fidiv
repz
cmp
mov
mov
xchg
xchg
and
jg
sub
retf
push
inc
repnz
frstor
xchg
cdq
add
aas
and
xchg
imul
push
jl
shr
int3
jmp
and
fadd
retf
or
inc
mov
xchg
xor
call
fstp
scas
push
mov
mov
idiv
cmp
int
mov
out
push
mov
(bad)
ins
xchg
pop
inc
aam
pop
std
jmp
xchg
push
cld
xor
or
int
mov
mov
dec
jno
fsubr
daa
sti
test
or
sbb
or
arpl
mov
inc
jmp
mov
mov
xchg
cmc
and
scas
adc
sub
stos
sub
or
les
ja
sbb
sub
add
xor
sbb
sbb
les
pop
adc
ins
xor
push
jns
test
(bad)
mov
jbe
jl
adc
daa
cmc
scas
xchg
imul
mov
jmp
gs
ins
add
add
xchg
and
sub
leave
mov
add
adc
imul
jne
push
xor
(bad)
mov
scas
xchg
xor
mov
and
jbe
push
inc
dec
in
or
pop
cmp
mov
dec
xor
sbb
ret
xchg
mov
mov
sub
sbb
jmp
push
and
hlt
fs
ftst
addr16
mov
imul
loopne
sbb
xchg
jp
cld
cli
jae
shl
and
mov
sbb
sahf
push
mov
xchg
sbb
mov
gs
adc
mov
retf
push
fst
dec
pushf
loop
jae
mov
mov
cmp
in
or
mov
scas
or
pop
lea
sahf
out
call
mov
xchg
xchg
sub
or
bound
lahf
pusha
jne
retf
shl
mov
dec
adc
mov
mov
(bad)
mov
movs
and
dec
xchg
jbe
dec
xor
stos
or
cmp
cs
call
push
rcr
inc
(bad)
cld
sahf
mov
mov
aas
loope
cmp
fist
adc
xor
rol
or
mov
adc
pop
dec
mov
push
cmp
xlat
jg
dec
mov
sub
imul
push
es
xchg
pop
mov
sahf
cld
xchg
dec
mov
sbb
xchg
in
(bad)
push
and
dec
out
inc
fwait
lahf
sub
mov
gs
push
pushf
js
sbb
icebp
mov
leave
ins
xor
(bad)
pop
fcmovnu
jae
movs
ret
push
mov
clc
adc
push
or
xchg
ret
mov
cs
push
inc
inc
push
push
pop
dec
cmp
push
xor
js
aas
cdq
ret
xor
dec
ret
loop
clc
push
cdq
cmps
fsub
pop
in
in
mov
xor
mov
dec
cmps
clc
add
add
bound
stc
das
mov
jg
push
lea
sub
ret
dec
into
add
push
cmp
adc
sub
adc
scas
ins
mov
test
cmp
pop
mov
mov
imul
fs
sub
dec
clc
rcr
imul
cld
mov
bound
popa
addr16
movs
sahf
stos
sbb
scas
pop
inc
dec
ffree
xor
(bad)
sub
xchg
mov
sub
inc
mov
push
leave
retf
mov
add
inc
push
pusha
dec
xor
retf
call
adc
mov
sub
js
or
jge
add
(bad)
out
adc
ss
pop
sub
das
xchg
mov
mov
mov
outs
in
xchg
xor
call
jge
sub
mov
cdq
add
leave
xor
cmc
int3
daa
sbb
pop
or
icebp
shr
mov
jg
sar
or
pop
push
jbe
mov
jnp
mov
dec
ins
popa
sbb
jle
or
into
push
mov
fistp
imul
xchg
pop
gs
adc
loope
push
mov
ins
xor
movs
in
cs
xor
ret
punpcklwd
cmp
repz
cmovs
sbb
xchg
fstp
fcomp
std
and
sub
mov
dec
repnz
sub
(bad)
cmp
adc
push
loope
jnp
mov
addr16
jnp
mov
outs
pop
bound
ret
ret
or
jb
xlat
mov
shr
and
add
adc
call
fimul
add
jnp
sbb
mov
(bad)
clc
mov
mov
push
sub
jnp
out
in
dec
call
push
mov
sbb
movs
mov
push
xchg
out
sub
loop
pop
cld
adc
loop
pop
mov
and
mov
ficom
clc
jmp
hlt
inc
shl
push
sti
nop
cs
in
pop
ins
int3
in
test
pop
adc
and
lods
outs
xor
aam
add
mov
adc
sbb
or
inc
fwait
jp
shl
add
popf
sbb
ret
push
lahf
jb
leave
std
xchg
stc
and
and
mov
int3
hlt
ds
in
inc
xlat
sbb
jmp
data16
lods
pslld
mov
xchg
pop
je
(bad)
mov
mov
push
dec
cdq
invd
loopne
call
xchg
pop
out
sub
test
xchg
xchg
ror
imul
sub
(bad)
sub
jmp
mov
fs
inc
mov
popf
test
jno
aaa
jno
sbb
pop
movs
mov
push
xchg
adc
add
outs
lahf
push
sbb
daa
sbb
in
ja
outs
test
mov
js
push
mov
fwait
aas
mov
mov
mov
neg
or
aaa
lahf
or
dec
push
mov
and
mov
add
iret
dec
add
call
cwde
shl
mov
xor
test
pop
stc
mov
ror
loopne
pop
mov
adc
jmp
lock
test
arpl
popa
pushf
imul
data16
inc
push
push
out
adc
les
xor
icebp
inc
fdiv
dec
or
pop
mov
inc
mov
mov
mov
out
mov
imul
lds
leave
or
push
jno
ins
cmp
sub
mov
pop
cmpxchg
push
add
mov
push
mov
pop
pop
mov
test
loop
int3
call
add
dec
jns
enter
xlat
rcl
add
fwait
fwait
cld
push
xchg
popa
and
lea
test
mov
inc
mov
loope
(bad)
adc
je
sbb
push
std
mov
loope
xchg
push
ror
jne
js
mov
sbb
ins
add
stc
shr
fisubr
xchg
xlat
in
sub
ds
test
adc
cs
push
or
mov
mov
std
xor
retf
add
add
fbstp
mov
adc
dec
adc
push
or
stos
popf
sbb
jo
jecxz
daa
sbb
das
xor
(bad)
pop
(bad)
loope
ins
or
(bad)
ror
adc
rol
push
inc
xchg
fst
xchg
dec
(bad)
adc
lock
push
or
mov
push
leave
mov
inc
push
rep
pop
(bad)
and
sahf
jl
fs
dec
mov
xchg
push
cmp
add
xchg
out
in
clc
or
push
js
inc
push
mov
and
dec
rcr
call
setb
clc
aas
cli
(bad)
aas
leave
lock
(bad)
fist
add
cmp
mov
imul
xor
inc
ror
lahf
test
xchg
retf
push
stc
cmp
lock
adc
jb
outs
push
sbb
(bad)
fcomi
inc
or
enter
leave
pop
xor
stos
jb
sbb
mov
out
cmp
imul
mov
fcmovu
loopne
ret
shr
adc
mov
mov
fnsave
aaa
popa
adc
xchg
adc
fcmovbe
test
dec
jo
push
loopne
loopne
fist
in
xor
pop
pop
fidivr
mov
retf
push
and
jp
push
and
hlt
loop
fnsave
xor
dec
not
inc
loope
lea
pop
sbb
ret
cmps
aas
dec
jmp
sahf
adc
out
fs
pop
sub
xor
hlt
pushf
inc
pop
loop
lock
sti
adc
cs
or
iret
adc
shl
(bad)
test
test
movs
out
sub
fwait
pop
jl
or
xor
into
ss
xchg
fwait
or
leave
je
dec
and
xor
arpl
xor
xchg
loopne
and
jae
or
ins
inc
pop
rcr
iret
push
xor
test
add
jne
inc
push
mov
out
mov
or
dec
jle
inc
loop
adc
cld
pop
jns
aad
lds
add
loope
lock
sub
sub
ins
xor
and
pushf
sbb
adc
mov
xor
jp
in
call
mov
adc
daa
data16
xor
mov
pop
cmp
sub
push
(bad)
adc
sub
sub
sbb
pop
or
div
jp
inc
mov
fnstsw
jmp
not
jnp
mov
ret
inc
xchg
xor
movs
fwait
retf
sub
das
in
out
mov
(bad)
cmp
addr16
pop
test
mov
imul
fst
add
push
pushfw
aad
jp
dec
mov
cmps
(bad)
in
jo
das
add
ficom
ret
test
loope
lahf
or
es
push
jae
cmp
ret
popf
pop
dec
lods
test
push
push
retf
and
hlt
xchg
xlat
xor
and
add
repz
jg
fdivp
fiadd
or
gs
out
imul
and
retf
inc
js
jecxz
sar
pop
mov
int
mov
(bad)
adc
and
xor
mov
aam
ret
mov
mov
dec
jnp
push
xchg
bound
aam
and
dec
or
xor
mov
dec
push
lock
stc
popf
dec
in
pop
(bad)
cmc
jae
mov
test
bound
cmc
les
xchg
dec
les
nop
dec
fdivr
mov
test
in
mov
push
ror
jmp
(bad)
out
aas
mov
out
or
inc
add
(bad)
(bad)
loop
rcr
aas
pop
dec
mov
lahf
and
and
sbb
mov
cld
xchg
xchg
xlat
mov
pop
or
adc
sub
mov
aas
sbb
and
mov
loopne
inc
xlat
push
gs
xchg
add
pop
popa
or
movs
jg
adc
out
push
jae
sahf
xchg
ja
rol
cli
xchg
pop
cli
xchg
jbe
in
psadbw
mov
retf
adc
jbe
shr
adc
add
in
pop
mov
in
ins
xor
push
ds
cmps
xchg
dec
inc
neg
dec
in
leave
in
daa
ret
pop
popaw
hlt
push
out
xor
data16
jmp
fsubr
pop
pop
pop
sbb
je
and
fistp
cmp
rol
mov
icebp
leave
icebp
dec
cs
push
mov
(bad)
mov
xor
in
mov
pop
jbe
xchg
xor
dec
cmc
mov
adc
pop
ss
aas
pop
nop
into
mov
sub
out
(bad)
fs
and
inc
push
sahf
fwait
shl
xchg
inc
js
fwait
mov
xor
(bad)
push
fs
jnp
aaa
scas
sub
frstor
(bad)
pushw
test
and
into
lahf
mov
ss
loopne
or
fild
dec
out
xor
shl
jge
ret
pop
les
inc
jo
xor
stos
shl
push
jmp
pop
jmp
pop
outs
js
mov
push
xor
movs
ins
push
mov
dec
loopne
arpl
push
cmps
and
(bad)
fldcw
sub
mov
pushf
fisubr
in
xchg
xor
pop
jle
mov
je
iret
(bad)
cdq
ficomp
push
cmp
ins
cdq
scas
mov
sti
mov
(bad)
adc
sub
cmp
xchg
xchg
inc
popf
in
pop
lahf
repnz
inc
push
push
aad
add
(bad)
aaa
sub
enter
pop
dec
mov
aad
fdiv
enter
jne
and
cmp
xor
lea
cmps
mov
movs
mov
sbb
mov
out
outs
pop
jge
scas
dec
xchg
test
(bad)
xor
jle
(bad)
dec
jae
fisub
push
cmps
fndisi(8087
add
sbb
pop
fidiv
mov
popa
cmp
int3
jo
lods
adc
fimul
jge
lahf
sub
test
push
fsub
outs
push
hlt
add
aaa
dec
mov
push
sub
cmp
mov
(bad)
xchg
movs
call
aad
cmps
inc
mov
das
add
fisttp
jnp
outs
popa
mov
ret
je
repnz
sub
dec
xor
ja
sub
pop
dec
mov
push
inc
mov
pop
test
aas
push
jmp
jmp
mov
adc
gs
adc
pop
xchg
mov
xchg
push
push
and
mov
sub
adc
mov
dec
cmp
gs
scas
add
out
fcom
pop
jmp
in
mov
dec
mov
inc
xchg
pop
jp
jle
and
js
in
loope
retf
sub
mov
in
cdq
and
mov
or
pop
das
mov
or
mov
cmc
cmc
mov
inc
jo
push
and
mov
gs
repnz
inc
movs
mov
mov
fidivr
xor
push
and
jmp
add
mov
and
pop
test
sbb
push
xchg
test
xlat
stos
sub
(bad)
(bad)
data16
and
sbb
xchg
or
add
in
data16
repnz
test
jnp
mov
and
in
outs
mov
arpl
mov
cld
retf
sbb
cmp
dec
dec
retf
fisubr
push
sbb
pop
int
ret
ss
js
jmp
xchg
and
call
sbb
sub
push
jle
push
(bad)
xor
jmp
jl
xchg
jecxz
jmp
push
cmps
in
stos
add
les
cmp
dec
rol
and
cmp
sub
mov
mov
dec
test
mov
fcmovnb
jmp
and
in
and
(bad)
(bad)
mov
sbb
add
pop
loopne
adc
pop
mov
test
in
xor
icebp
and
xor
in
jb
add
sbb
sbb
scas
fimul
stc
and
int3
mov
pushf
or
inc
int3
iret
inc
repnz
adc
stc
rdpmc
fs
xlat
pop
shl
or
jbe
or
cmp
mov
(bad)
adc
mov
cmp
push
mov
jae
fucomp
arpl
jns
xor
retf
dec
in
stc
ret
and
out
les
xchg
xor
xor
nop
pop
lahf
je
add
in
sub
leave
out
sbb
sub
inc
mov
mov
mov
pop
dec
lock
jno
imul
cdq
mov
dec
mov
jmp
hlt
add
(bad)
retf
add
pop
cmps
cmp
div
imul
sub
xor
inc
hlt
rcr
js
pop
jbe
fsubr
mov
gs
sbb
sti
fsub
mov
out
movs
inc
sub
outs
in
lods
lock
mov
inc
mov
stos
xchg
jbe
xchg
hlt
repnz
jmp
outs
mov
mov
retf
add
mov
lahf
les
sub
push
xlat
mov
fstp
movs
inc
jmp
and
loopne
dec
add
ja
cmp
or
xor
stc
and
in
sub
outs
stc
aam
ja
xor
popa
cmp
push
mov
sbb
ja
loopne
fwait
scas
adc
push
test
add
sbb
scas
add
add
aaa
mov
dec
cdq
shl
pop
push
mov
jmp
dec
inc
pop
mov
pop
inc
pop
mov
push
inc
outs
dec
inc
pop
lahf
repz
mov
inc
xor
mov
imul
or
xchg
pop
or
inc
mov
aaa
ret
out
cmp
push
dec
mov
lds
popf
pushf
adc
nop
jae
into
mov
adc
and
test
sub
jmp
cld
bound
test
cmp
jae
dec
xlat
xchg
xlat
arpl
retf
cwde
dec
nop
stos
clc
mov
add
xchg
ret
adc
pop
sbb
shl
cld
xchg
fstp
xor
mov
in
sub
jae
in
sub
fcom
fidiv
xor
imul
rcr
xchg
js
pop
test
xchg
(bad)
mov
aad
sahf
add
cmp
push
lahf
jo
jp
mov
jmp
(bad)
mov
pop
pop
fld
ins
dec
shl
adc
xchg
jmp
inc
cmps
ror
pop
xchg
jge
test
sahf
lods
mov
sahf
xchg
adc
add
or
cmp
push
xchg
mov
ja
sbb
adc
std
xchg
pop
or
aad
test
ins
cmc
ds
mov
sub
inc
xchg
mov
loopne
addr16
(bad)
jmp
sbb
cmp
sub
test
nop
iret
jbe
dec
ret
add
sti
dec
sub
(bad)
loopne
and
sbb
movs
out
(bad)
pop
fldcw
arpl
scas
(bad)
aad
adc
and
in
sub
sub
(bad)
pop
rol
icebp
clc
or
icebp
nop
rcr
popa
cmp
and
pusha
cmp
mov
out
push
fist
cs
dec
sbb
retf
icebp
and
pushf
leave
jmp
adc
test
test
jmp
stos
outs
jno
je
or
cmp
pop
aaa
sbb
in
or
in
xor
movs
and
fist
shr
jae
imul
jp
push
int
pop
jo
(bad)
les
xchg
sbb
scas
push
fnstsw
or
test
mov
shl
(bad)
or
xchg
or
cmp
ret
dec
sub
call
or
or
xor
adc
not
leave
out
mov
xor
mov
xchg
cmps
inc
jl
jmp
jmp
loopne
jae
sub
jp
(bad)
bound
retf
and
sahf
xchg
push
dec
ds
mov
dec
cmps
(bad)
sbb
fwait
stos
mov
sub
(bad)
retf
imul
retf
inc
sub
inc
push
bswap
div
jb
inc
xchg
add
outs
mov
add
lds
dec
inc
stos
xor
icebp
(bad)
xor
push
je
sbb
pop
xchg
int3
add
dec
das
ffreep
(bad)
mov
inc
stos
dec
jae
sti
jge
add
lds
mov
std
fisub
xchg
pop
aaa
movs
pop
sub
pop
pusha
popf
push
fs
jg
add
lea
push
outs
mov
xor
jmp
jl
add
mov
pop
pop
or
jmp
out
(bad)
imul
scas
pop
int3
(bad)
push
mov
cwde
and
sub
add
lock
mov
retf
neg
(bad)
jmp
add
inc
xchg
ins
cmps
or
in
pop
stc
(bad)
stc
inc
aas
aaa
sub
pop
sub
lock
daa
test
sbb
leave
out
(bad)
mov
jmp
(bad)
mov
xor
jno
or
xlat
aad
paddb
test
jecxz
stos
dec
cmp
mov
sbb
lods
sbb
inc
sbb
pop
fcom
cld
aad
cli
or
or
fcom
sbb
or
inc
lds
pop
mov
not
adc
cmp
adc
sbb
jge
icebp
je
mov
jecxz
fisub
outs
jnp
xchg
pop
sub
mov
sub
call
scas
jno
jnp
xchg
add
adc
and
xchg
sbb
adc
or
mov
xchg
fisttp
adc
popf
mov
lds
repnz
aaa
xchg
jno
adc
dec
and
and
(bad)
ffreep
(bad)
push
out
cmps
or
(bad)
lods
jmp
xchg
xchg
xchg
mov
mov
jae
icebp
jno
loope
mov
sbb
or
loope
push
div
fucomi
sbb
in
lock
inc
or
out
iret
jo
jge
xchg
aas
cmp
fild
mov
stc
sbb
loop
ror
push
lahf
xor
ja
sbb
dec
xor
retf
xchg
jb
jo
call
loopne
shl
pusha
jbe
in
call
mov
sbb
adc
push
call
movs
add
lea
enter
daa
sar
lds
pop
test
(bad)
sbb
and
pop
or
add
addr16
mov
jp
adc
inc
xor
pop
aaa
fcom
int3
out
pop
cmp
mov
push
(bad)
mov
test
loop
adc
xlat
add
mov
(bad)
and
sti
jne
push
mov
fwait
or
cs
add
add
mov
sub
icebp
in
enter
jb
sub
out
adc
xor
arpl
mov
dec
push
xchg
pop
(bad)
ds
jmp
imul
in
cwde
std
pop
rcr
sbb
rol
lock
and
iret
bound
and
pop
hlt
or
xor
pop
sahf
or
imul
out
and
jle
push
fcom
test
or
xchg
mov
inc
xor
and
shl
xor
fwait
inc
and
les
cmp
adc
test
test
mov
cmp
mov
mov
std
xchg
shr
adc
(bad)
mov
ror
jg
(bad)
jmp
mov
loopne
adc
call
(bad)
aam
jns
dec
clc
dec
and
movs
xchg
dec
es
or
jb
loope
call
clc
inc
rol
(bad)
mov
push
and
pusha
add
push
in
inc
nop
mov
js
cmp
mov
addr16
nop
xor
mov
out
cs
push
icebp
and
or
inc
cmp
outs
mov
in
pop
imul
imul
mov
jmp
(bad)
(bad)
arpl
inc
push
adc
adc
pop
sub
clc
pop
inc
mov
mov
stc
sbb
mov
mov
(bad)
std
dec
mov
and
or
mov
push
push
jle
xchg
dec
xchg
loop
jae
or
cmp
call
adc
add
jae
or
xchg
clc
stos
enter
mov
dec
mov
sahf
rcr
xchg
and
jg
loopne
repz
int3
mov
stc
sub
movs
adc
fcmovu
je
sahf
es
jmp
cmps
inc
mov
mov
pop
sbb
jo
jnp
xor
ins
sub
sbb
xor
ret
aam
rcl
inc
mov
test
mov
call
dec
shl
movs
jnp
mov
sbb
(bad)
cld
or
inc
mov
xor
adc
mov
ins
push
jno
fisubr
lods
mov
mov
and
jne
push
or
ins
pop
pop
out
push
int
add
nop
adc
inc
xor
cmp
icebp
sub
or
mov
jecxz
cmp
in
arpl
add
adc
in
clc
push
mov
jae
jecxz
sub
in
stos
pop
retf
cmc
jmp
aam
(bad)
fisubr
mov
mov
adc
lock
fcom
sub
pop
cmps
cpuid
sub
add
aaa
sub
xchg
sar
dec
sub
call
inc
dec
mov
dec
sub
ja
adc
push
xlat
test
inc
or
(bad)
adc
ret
pop
movs
scas
das
inc
fcomp
ret
push
lock
sahf
push
sub
shl
les
sub
push
jne
mov
jne
sub
inc
sbb
ret
push
(bad)
push
mov
cdq
bound
mov
inc
or
pop
sub
xchg
jl
mov
mov
adc
sub
push
dec
inc
loope
mov
ss
jmp
push
jg
fwait
sbb
push
sbb
lahf
jbe
retf
movs
xor
inc
mov
test
mov
sbb
clc
leave
mov
and
jle
or
rcl
call
loop
mov
imul
jne
lods
bnd
popf
inc
test
dec
sub
push
sahf
jns
mov
fadd
sahf
test
pop
fbstp
inc
loopne
repnz
xchg
and
xor
push
test
or
dec
and
shl
in
sub
xchg
and
icebp
enter
cld
mov
cmpxchg
and
mov
enter
push
inc
das
xor
ffree
and
sbb
or
imul
jno
invd
in
retf
dec
shl
aas
pop
inc
sub
call
mov
test
inc
jne
mov
leave
xchg
mov
das
xchg
mov
stos
sbb
loop
xchg
adc
ins
mov
jo
xchg
and
mov
add
fnstcw
pop
sub
(bad)
cli
mov
fwait
int3
stc
push
mov
dec
(bad)
jae
in
imul
inc
(bad)
xor
pop
and
mov
std
add
sti
adc
shl
sub
shl
test
xchg
sub
push
repnz
adc
push
fidivr
outs
jmp
xchg
stos
test
je
inc
in
dec
sub
add
mov
push
pop
lods
out
retf
add
pop
mov
sub
adc
mov
mov
xor
out
push
inc
lods
mov
push
aad
push
pop
sub
sbb
xlat
sub
mov
mov
addr16
stos
mov
aad
add
or
jp
lock
mov
mov
and
mov
rcl
fidiv
inc
and
adc
into
pop
in
stos
mov
and
sub
or
imul
fisub
bswap
pop
adc
push
test
push
or
in
dec
jb
jae
inc
daa
retf
shl
or
jno
push
movs
add
lock
xchg
adc
jmp
movs
test
movs
cmp
mov
mov
inc
add
stc
ret
inc
push
push
mov
ja
out
sbb
sbb
dec
pusha
cmp
je
cmp
push
mov
repz
ret
dec
icebp
hlt
cmp
xchg
pop
dec
bound
add
ins
jns
jne
jmp
enter
adc
cmp
dec
movq
xlat
mov
jbe
cmp
shl
(bad)
cmp
retf
cs
call
push
mov
inc
stos
clc
popf
in
popf
and
cld
fld
cmc
clc
aad
pop
add
and
movs
sub
push
fld
out
jnp
jecxz
js
retf
icebp
xchg
pop
jno
popa
ins
mov
dec
imul
pop
or
sbb
mov
leave
loop
add
mov
pop
stc
sbb
dec
mov
sbb
dec
js
int
jl
jae
cmps
call
call
nop
lahf
sbb
jnp
jmp
inc
xchg
sub
dec
ffreep
or
xor
(bad)
enter
pop
pop
scas
inc
push
jle
inc
jp
add
dec
xor
mov
inc
mov
out
cmp
mov
shr
les
pop
shr
sbb
mov
jmp
loope
adc
cmc
add
sub
repnz
add
les
fstp
imul
fs
pop
hlt
lods
xor
out
fs
push
test
jb
mov
jno
mov
mov
cmp
retf
or
xchg
or
clc
data16
xchg
xchg
pop
cmp
rdmsr
xor
test
sub
inc
test
add
sti
nop
cli
in
dec
cld
loopne
iret
xchg
out
or
mov
or
pop
xor
(bad)
jmp
int
add
test
mov
sti
inc
std
imul
mov
cdq
fistp
xor
mov
ss
iret
shr
out
lock
scas
out
xor
mov
add
movs
mov
or
jmp
addr16
jae
lds
add
popa
pop
lods
sub
cmps
shl
int
loop
xor
cdq
ret
fbstp
icebp
sub
call
jl
jmp
sbb
add
push
pop
add
mov
(bad)
mov
icebp
ret
int
mov
mov
ficom
jno
sbb
xchg
adc
clc
fbstp
adc
jo
add
movs
push
stos
in
jo
mov
mov
jns
mov
pushf
movs
or
push
enter
pop
push
pusha
push
test
aas
int
div
jo
inc
cmp
mov
ds
rcl
xchg
pop
mov
shl
imul
adc
pop
or
aaa
push
xchg
inc
or
sahf
xor
repz
into
mov
and
mov
push
neg
out
xor
test
sub
adc
fs
jp
mov
cmps
aas
cmps
imul
mov
cdq
call
and
enter
mov
jo
sbb
sahf
(bad)
aas
push
mov
(bad)
adc
sub
jne
dec
out
aad
in
adc
jg
out
cmc
dec
call
movs
add
fcomp
in
(bad)
pop
arpl
xchg
xchg
add
sub
mov
fild
or
mov
jl
imul
jge
mov
(bad)
ins
inc
popa
sar
push
movq
lock
in
jne
call
shl
movs
xchg
aad
cld
aam
(bad)
cmps
or
dec
sub
sbb
stos
mov
pop
push
ins
stc
ds
mov
les
sub
sub
and
adc
adc
sub
or
les
push
gs
(bad)
fcmovnu
repz
jmp
ins
dec
sbb
jg
lock
shr
jae
retf
jbe
push
inc
xchg
and
imul
out
and
push
mov
je
int3
pop
fld
jo
push
arpl
cmp
adc
cmp
cmp
add
aas
sbb
and
push
adc
arpl
sub
jmp
sbb
in
jg
jp
leave
imul
adc
jle
daa
cmp
stc
ror
call
fst
or
push
sub
add
jb
push
aad
mov
mov
test
sti
cmp
gs
push
sbb
imul
pshufw
pop
mov
xor
imul
loopne
paddusw
fdiv
mov
leave
loop
imul
(bad)
out
hlt
inc
sub
mov
add
cmp
shl
pop
and
sub
jo
call
jnp
and
loope
xchg
leave
adc
inc
push
xchg
mov
inc
xor
pop
jl
sub
cmp
ja
test
add
cmc
cmp
sub
jecxz
cmp
repz
call
pop
scas
lds
stos
das
xchg
aaa
leave
in
inc
inc
cmp
xchg
rcr
jecxz
stos
or
dec
xchg
add
call
sbb
mov
dec
or
mov
jns
xchg
inc
sub
pop
sbb
add
xor
in
mov
push
arpl
inc
jo
mov
adc
xchg
mov
mov
cmps
(bad)
(bad)
cli
mov
adc
popf
stos
cmp
jp
inc
fwait
mov
cmp
fstp
sub
inc
inc
test
add
ficom
in
or
out
sub
cmps
adc
jns
into
mov
popf
add
das
das
jae
stos
cmp
xchg
inc
ss
inc
stos
js
and
sti
aas
int
pop
push
sbb
lock
pop
adc
add
in
push
pop
xor
sub
or
push
xchg
push
sbb
add
sub
push
mov
ss
mov
mov
outs
dec
push
out
cmp
loope
and
cmp
jmp
bound
scas
test
mov
inc
rcr
test
inc
out
xor
jae
sbb
repnz
or
push
push
inc
xor
fdivrp
pusha
mov
rcl
mov
xchg
imul
sub
in
int
add
out
mov
ds
add
and
sar
idiv
mov
xor
jo
mov
push
rol
ror
int3
xchg
sbb
cmp
jmp
ror
adc
jp
fiadd
or
mov
lods
aaa
push
js
mov
call
fisubr
leave
ficomp
das
sub
mov
call
scas
out
sub
call
adc
xchg
pop
and
js
push
or
push
push
adc
mov
jle
mov
sub
xchg
xchg
outs
sub
aas
xor
pop
enter
jae
and
and
test
ss
and
cs
xor
cmp
in
mov
and
les
push
or
cdq
jno
ss
nop
stos
push
fnsave
fmul
div
test
dec
sbb
mov
mov
jp
arpl
jbe
sbb
mov
dec
jb
mov
xor
out
push
mov
mov
mov
push
arpl
out
xor
in
mov
sub
fidiv
push
push
fdiv
dec
push
jmp
and
test
jmp
imul
loope
(bad)
movs
popf
outs
ror
push
fwait
mov
and
cmp
mov
nop
repnz
lods
jb
sbb
das
imul
sar
es
shl
and
stc
test
mov
jle
(bad)
pop
push
jnp
or
cmp
pop
out
push
sub
out
int3
in
dec
fist
push
cdq
mov
mov
int
fdiv
(bad)
ins
ret
rcl
push
ficomp
fwait
dec
jno
lods
movs
mov
xor
mov
jmp
adc
shl
mov
lds
gs
mov
stc
sbb
pop
not
sahf
arpl
pop
outs
rcl
je
add
push
dec
not
cmp
(bad)
lahf
cmp
fld
loope
cmp
(bad)
or
mov
push
push
inc
mov
nop
aam
jl
test
lahf
nop
mov
xchg
mov
into
inc
ret
jecxz
push
inc
jno
sti
shr
loopne
(bad)
or
sar
imul
mov
dec
mov
add
xor
mov
movs
sbb
ja
xchg
movs
div
pop
bound
sbb
mov
push
jns
inc
inc
cmp
(bad)
dec
pop
jns
fnstsw
dec
push
je
out
push
loopne
sahf
movs
mov
popf
cmp
add
sub
cld
ins
mov
addr16
adc
cmps
cwde
sub
cmp
into
cs
cmp
sub
std
repnz
push
scas
div
cmp
(bad)
(bad)
shr
sar
push
inc
inc
jo
(bad)
gs
cmps
xor
cwde
adc
adc
pop
stos
jmp
clc
adc
fucom
cmp
push
out
sahf
jns
mov
adc
imul
imul
je
pop
imul
adc
leave
out
sbb
pop
adc
push
pop
sbb
cmc
cwde
test
lds
imul
or
popf
test
mov
pop
stos
and
test
push
xchg
sub
outs
(bad)
iret
sti
sbb
in
mov
scas
or
mov
and
xchg
cmp
push
cmp
nop
aas
in
in
inc
fcom
(bad)
dec
ret
mov
out
imul
(bad)
sbb
xchg
call
sbb
imul
popf
and
xor
addr16
(bad)
push
pop
inc
enter
hlt
ds
sahf
jle
mov
fs
rcl
inc
mov
cld
test
pop
addr16
xor
movs
jb
sar
pop
mov
fstp
stos
out
push
ret
call
sub
dec
mov
outs
lods
jb
sub
xor
(bad)
xor
rcl
ja
(bad)
jmp
push
shl
sahf
retf
stc
punpckhwd
xor
xor
sbb
inc
mov
mov
jecxz
mov
lds
push
xor
ret
mov
aad
xor
(bad)
in
jbe
push
push
or
sub
sbb
and
jbe
fcmovnu
dec
imul
rol
push
dec
xchg
mov
sbb
(bad)
aam
in
out
jnp
ja
add
inc
rcl
fsub
daa
xchg
test
dec
ins
xchg
cmp
std
loop
into
mov
inc
push
push
scas
xchg
daa
add
jmp
sbb
les
mov
xor
mov
int
dec
or
(bad)
pop
sbb
call
iret
cmp
les
sbb
ins
lahf
and
push
int
lea
push
(bad)
cmps
sub
xchg
std
xchg
cmp
sahf
push
and
cmp
mov
push
mov
leave
iret
dec
push
std
int
aad
dec
mov
add
push
or
fdivr
xchg
es
mov
stos
fs
mul
or
sbb
inc
pop
in
fadd
cli
mov
mov
sub
fidivr
ret
inc
pusha
add
xchg
jae
sub
mov
sbb
jne
loop
outs
lea
cmps
and
mov
jb
or
sbb
mov
add
rcr
aaa
add
(bad)
inc
imul
mov
dec
pop
fucom
rol
call
in
mov
sbb
sbb
inc
clc
adc
clc
pop
inc
xchg
sahf
jbe
sbb
ret
pop
in
rcl
rep
aam
lods
cmc
call
js
sbb
push
push
cmp
push
or
enter
pop
rcl
cmp
xchg
mov
fistp
xchg
nop
and
leave
push
xchg
mov
xchg
sbb
add
test
data16
jbe
repz
push
mov
jbe
retf
inc
test
inc
jbe
clc
add
push
aas
xchg
pop
test
cmpxchg
gs
cld
fsub
inc
inc
std
ins
adc
stc
pop
imul
dec
and
sti
call
cli
dec
cmp
add
and
jne
push
xchg
inc
in
cwde
stc
in
pop
cvtdq2ps
dec
out
mov
sub
fucomi
push
dec
jno
test
add
push
shl
add
jmp
xor
arpl
outs
mov
pop
cmp
jp
cmps
cmp
(bad)
bound
stos
mov
fbld
jle
push
xchg
push
fs
mov
mov
jg
jne
pop
cmp
icebp
outs
sbb
call
ds
xor
movs
pop
sbb
aam
(bad)
daa
fs
pop
out
sub
stos
stc
cmp
mov
add
or
mov
cmp
cdq
fisttp
mov
xor
push
jns
test
sub
and
lds
popa
ror
add
inc
cli
scas
fild
adc
jns
inc
dec
add
stc
ror
adc
outs
imul
data16
inc
push
push
hlt
push
add
ins
adc
jmp
js
ret
mov
out
aaa
mov
jae
iret
jae
fwait
xor
lods
mov
cmps
pushf
push
shl
mov
sahf
inc
lea
inc
mov
mov
mov
in
mov
shl
or
enter
adc
push
inc
xchg
(bad)
rcr
fisttp
jmp
xchg
jge
lahf
ret
mov
iret
cmp
mov
test
lea
fs
inc
mov
loope
test
jge
and
sbb
jmp
fdivr
adc
nop
in
out
xchg
jbe
pop
je
mov
add
pop
in
stos
outs
push
enter
mul
fild
enter
aaa
pop
pop
sub
dec
sbb
push
jns
xchg
int
jecxz
push
jo
fbstp
cdq
jno
test
pand
xor
mov
out
jl
ds
add
push
(bad)
xor
iret
fidiv
out
into
jecxz
jb
xchg
into
sar
cmp
jl
xchg
les
ss
adc
(bad)
out
mov
jo
jmp
mov
mov
or
lahf
pop
jle
add
cmp
repz
retf
hlt
iret
mov
push
stos
adc
scas
add
xchg
or
xor
test
push
cmps
mov
lea
adc
(bad)
cmp
jb
mov
or
bsf
scas
cli
mov
scas
jl
mov
jmp
adc
jns
lock
shl
imul
mov
cmp
mov
(bad)
or
xor
retf
add
dec
cmp
jmp
add
cwde
gs
mov
cmc
and
in
push
jns
aad
sar
mov
xchg
mov
jnp
data16
adc
mov
mov
mov
or
call
clc
jmp
xor
sub
or
mov
jl
lods
adc
xchg
xchg
(bad)
(bad)
jg
pop
mov
ja
scas
mov
(bad)
lods
stc
iret
fldenv
mov
daa
rcl
ins
xor
sti
sub
xchg
jb
rol
jo
ret
pusha
shl
lock
clc
popa
dec
les
scas
push
out
sbb
mov
out
mov
les
call
rcr
inc
fsub
jle
iret
test
loopne
jg
xor
std
fild
arpl
adc
out
call
scas
xchg
out
mov
xor
test
test
push
jge
stos
and
int3
jo
cmps
lods
or
inc
jle
or
or
fs
test
cli
ss
repnz
xor
jb
fwait
mov
icebp
mov
inc
imul
mov
hlt
shl
and
pop
mov
xor
je
push
push
push
dec
leave
daa
test
inc
sub
call
(bad)
sub
sar
in
mov
jno
inc
xchg
pop
mov
and
cmp
popa
fucomip
pop
mov
repnz
cld
dec
les
and
dec
xchg
dec
and
or
adc
pop
inc
retf
aaa
dec
push
in
push
adc
jmp
into
leave
mov
sub
out
dec
dec
jmp
aam
repz
xor
call
ds
movs
cs
in
sub
xor
rcl
jno
std
bound
or
stc
sub
std
ss
fidivr
mov
out
cmp
ss
sub
mov
push
(bad)
jmp
xchg
stos
and
sub
jmp
dec
imul
pop
(bad)
out
jl
test
aas
loopne
imul
sbb
retf
retf
jns
jmp
pop
stos
pop
jecxz
imul
pop
and
mov
sub
cmp
push
bound
stos
repnz
cmp
sub
sbb
loop
sbb
fst
enter
cmp
fistp
pop
push
jns
mov
scas
dec
adc
sub
jne
in
xchg
lea
ja
dec
ins
mov
push
inc
iret
aad
add
mov
outs
add
mov
jmp
inc
push
dec
dec
jmp
xlat
push
movs
gs
(bad)
jne
iret
loopne
xchg
mov
fisubr
adc
or
jmp
jmp
mov
inc
mov
out
ss
(bad)
int3
pop
dec
pop
dec
jmp
in
js
adc
pop
dec
or
adc
fst
xchg
in
push
and
in
retf
adc
aad
rcr
rol
lea
mov
or
repnz
or
push
fsub
movs
vmwrite
xor
cld
pusha
lods
popa
xor
cmp
sbb
je
cmp
fld
inc
icebp
pop
mov
enter
outs
xchg
adc
jmp
pop
shl
lds
dec
sti
inc
fistp
sbb
xchg
xchg
call
mov
in
stos
test
cmp
test
inc
push
mov
inc
mov
inc
rol
adc
out
fnstsw
rcr
mov
mov
push
xor
mov
or
inc
movs
add
inc
imul
push
dec
mov
adc
sbb
popf
pop
fdivr
stc
cmp
movs
out
mov
mov
mov
in
jbe
popf
mov
xor
(bad)
adc
mov
sub
shl
and
xchg
fs
(bad)
dec
inc
fadd
push
sub
sbb
test
retf
(bad)
int
repnz
or
leave
inc
aaa
ret
mov
ss
jne
es
out
dec
cmp
ds
aad
jmp
scas
sbb
popa
xor
iret
inc
stos
and
mov
(bad)
sub
dec
ret
cmp
repz
cmp
jge
rol
fidivr
and
aam
mov
sub
pop
sub
fisttp
jge
test
add
test
popa
in
xor
xor
sahf
ds
pop
xchg
cmp
(bad)
xlat
test
je
dec
call
es
ror
jle
xlat
pusha
ss
and
in
and
push
retf
fisttp
xor
pop
cld
mov
gs
hlt
cld
inc
xor
or
add
jle
fimul
(bad)
stc
stos
sbb
rcr
dec
fimul
js
mov
stc
shl
loopne
xor
bnd
loope
jmp
push
es
sub
sub
(bad)
pop
mov
addr16
mov
movs
xchg
adc
stos
ds
pop
jle
push
daa
add
aaa
inc
scas
push
pop
fimul
adc
mov
and
pop
cdq
jp
push
fucomp
mov
cmp
mov
leave
sub
test
add
xchg
add
xor
aad
dec
int
cmovbe
lock
jb
add
sub
mov
cmp
add
arpl
xchg
ret
mov
ss
shl
outs
das
pop
ret
enter
cmp
cmp
dec
out
xor
push
jnp
lock
jge
imul
add
pop
int
push
into
out
jbe
mov
repz
lea
nop
dec
jg
mov
shr
cmp
jmp
and
or
xchg
clc
cwde
(bad)
fld
push
sbb
push
hlt
xchg
lds
push
mov
gs
lea
lods
jmp
fld
lods
mov
stos
sbb
mov
mov
add
mov
arpl
xchg
std
inc
dec
test
imul
push
ins
inc
inc
in
or
pcmpgtw
call
mov
or
inc
aas
ja
adc
push
mov
inc
cmp
icebp
fs
aaa
nop
scas
push
jae
std
jmp
pushf
in
and
sub
mov
cmp
pop
jns
fdivr
push
or
ins
scas
jg
jmp
mov
push
pop
xchg
aam
popa
xor
in
and
sbb
push
and
or
fs
xchg
jae
scas
push
adc
jno
fsubr
into
push
dec
push
ins
jns
pusha
cli
test
push
sbb
mov
push
xor
pop
fistp
pop
cmps
sti
(bad)
xchg
xchg
jecxz
test
in
mov
xor
sub
sbb
xor
push
cmp
sti
ficom
in
mov
inc
mov
jge
mov
add
lods
lods
out
(bad)
or
xchg
push
pop
and
lahf
ds
ror
cdq
or
cld
icebp
or
dec
data16
icebp
mov
mov
pop
adc
outs
ret
ja
push
sub
sti
xchg
add
stos
(bad)
and
sbb
add
ss
movs
pusha
jmp
test
jns
push
cmc
mov
jae
out
jb
in
test
movs
test
rol
sahf
jnp
jg
mov
mov
or
enter
push
jo
retf
dec
mov
das
sub
in
cmps
imul
sbb
shl
cmps
cmps
test
mov
mov
jbe
inc
inc
or
test
add
test
retf
icebp
popf
ret
imul
mov
arpl
shr
mov
ins
xor
inc
ins
xor
data16
cmp
and
fwait
(bad)
jle
cmc
mov
xchg
jle
gs
inc
(bad)
mov
fs
lea
sub
cmp
jmp
in
push
and
or
mov
mov
loope
int3
rol
inc
mov
mov
push
clc
fstp
mov
or
popa
std
fcmovnb
mov
push
add
aad
mov
adc
and
test
jg
cli
fcomp
mov
lods
push
pushf
lea
jp
jo
iret
rcr
sbb
(bad)
ss
imul
in
gs
fld
mov
add
xor
jb
icebp
adc
pusha
sti
repz
xor
scas
inc
mov
stos
je
popf
mov
daa
test
pop
mov
aam
ins
dec
movs
loope
call
cmp
fucom
in
fwait
cdq
cmps
sub
xchg
maxps
pop
retf
or
pop
mov
cmp
gs
adc
cmps
sub
aad
not
into
rol
jg
xchg
fbstp
lss
(bad)
fwait
es
sbb
mov
pop
and
(bad)
or
inc
inc
movs
xor
mov
sbb
cmp
lahf
sbb
add
xchg
xor
jg
in
mov
mov
adc
cmp
inc
pop
jp
inc
sti
push
mov
push
dec
rol
movs
imul
or
or
mov
xchg
aaa
xchg
hlt
out
hlt
cmp
jp
out
in
(bad)
or
das
loope
jne
pop
pushf
lahf
xor
int
movs
sbb
rcr
stc
test
sbb
cmp
sbb
cmp
cmps
sti
(bad)
pop
mov
xchg
ret
shl
(bad)
and
js
stc
fwait
push
movs
pop
cld
push
fwait
in
out
jne
(bad)
icebp
hlt
xor
jo
loop
sub
jne
push
or
fnstenv
fist
lea
movs
adc
mov
out
adc
adc
dec
inc
lock
data16
movs
gs
mov
popf
fnsetpm(287
ins
inc
push
aaa
out
mov
and
inc
sub
cmps
pop
(bad)
hlt
or
cmp
xchg
push
cmp
loope
fwait
out
pusha
bound
and
pop
cwde
call
stos
jae
adc
inc
sub
sub
adc
aaa
(bad)
mov
ss
pop
test
sub
jmp
shl
mov
js
push
aaa
jne
xchg
mov
mov
retf
dec
in
sub
and
aas
xchg
lods
xchg
push
jno
mov
fs
cdq
dec
push
lods
loopne
mov
jl
vpaddb
pushf
imul
mov
adc
xor
loope
dec
shr
jl
jno
xchg
(bad)
cld
retf
std
xor
mov
dec
iret
mov
xor
xchg
dec
mov
call
shr
and
ins
sbb
ins
jg
ffreep
les
int
aaa
inc
pop
sub
stc
jns
sub
mov
retf
movs
or
ins
cmp
push
pushf
mov
sbb
arpl
sub
div
ds
retf
xor
sub
push
out
cmc
ins
and
push
mov
call
mov
test
stos
faddp
mov
nop
scas
xchg
stos
push
mov
push
mov
sar
icebp
jns
out
cmp
(bad)
and
(bad)
ds
dec
inc
inc
test
nop
sahf
adc
lea
popa
fisttp
dec
int
shl
nop
cli
mov
fdiv
and
sub
inc
xor
out
lea
icebp
cdq
pushf
cld
mov
inc
ret
inc
xor
stos
mov
adc
fmul
mov
fs
lods
or
mov
icebp
je
push
stos
xchg
mov
xchg
inc
addr16
mov
ins
pop
mov
xor
pop
fild
retw
in
enter
test
sub
or
adc
mov
cs
popa
loopne
push
gs
jae
cmps
es
pop
sbb
aam
fidivr
push
aad
push
lods
inc
es
jp
xlat
push
mov
mov
lea
fsubr
movs
dec
mov
xchg
rcr
test
inc
mov
xor
das
fs
daa
das
dec
retf
and
test
and
sbb
dec
mov
mov
stc
adc
xor
pusha
ret
(bad)
gs
gs
xchg
inc
xchg
mov
addr16
and
jnp
add
in
cmc
xor
and
pop
or
and
xor
test
mov
ins
inc
pop
out
cli
sahf
in
bound
sub
or
xlat
pop
mov
les
and
push
fs
addr16
stc
add
adc
inc
retf
and
inc
movs
lods
movs
and
cmps
pop
mov
shl
pushf
mov
mov
mov
pop
jnp
fld
mov
cld
shr
jne
fucomi
xor
aas
adc
fidiv
xchg
jg
lods
dec
inc
inc
mov
jno
fst
mov
pop
daa
loop
or
pop
pushf
sbb
aaa
cwde
int
sub
push
retf
(bad)
cmp
rcl
xchg
adc
shl
ror
(bad)
sahf
mov
push
mov
sti
and
mov
fistp
sbb
in
dec
loopne
xor
mov
movs
enter
adc
push
xchg
xor
jecxz
mov
mov
sub
or
cmps
push
mov
(bad)
call
mov
imul
push
add
xor
mov
mov
es
test
stos
pop
sub
repnz
cmp
push
xchg
mov
retf
jae
sahf
cwde
xchg
sub
dec
xlat
add
outs
sti
push
dec
lds
add
cmp
in
pop
mov
cmp
scas
mov
mov
push
mov
dec
mov
enter
in
stos
mov
push
mov
loope
jbe
std
lods
dec
sub
iret
jmp
and
jmp
mov
and
jne
test
out
popa
lods
xor
fst
xchg
les
push
outs
xlat
jmp
xchg
or
std
sbb
push
cmp
sub
fcomp
xchg
and
xor
xchg
add
(bad)
ss
mov
inc
cs
es
repnz
dec
mov
dec
fidivr
push
and
add
lock
add
cmps
cmp
cmp
add
loop
dec
add
(bad)
xchg
dec
xor
(bad)
neg
rol
adc
mov
jbe
mov
pop
and
loopne
mov
xor
pushf
stc
push
pop
inc
imul
mov
cmps
dec
sbb
ret
hlt
cmps
push
in
addr16
xor
aaa
cdq
xchg
cmps
cdq
xchg
dec
xchg
scas
jno
mov
mov
cdq
iret
inc
sub
or
mov
mov
stos
(bad)
(bad)
mov
add
fstp
mov
pop
stos
adc
mov
jmp
sub
xor
es
ret
and
sub
int3
psubb
loopne
retf
push
push
es
push
mov
mov
inc
das
repnz
cli
push
sbb
stc
push
xchg
test
xchg
mov
add
nop
in
into
xor
xchg
adc
inc
sbb
sub
stos
adc
aas
add
fidiv
sbb
push
out
cmp
stos
vpaddd
pop
dec
leave
out
adc
cmp
and
icebp
dec
inc
sub
out
add
xor
loop
pop
outs
in
and
(bad)
dec
fimul
sub
adc
cmps
push
pop
jecxz
cmp
lock
pop
push
sbb
pop
or
leave
mov
push
out
lahf
and
lods
popa
repz
lods
push
ficom
pusha
dec
pop
test
mov
out
mov
mov
pop
jle
dec
ss
hlt
pop
jne
mov
jmp
pop
cmp
(bad)
jmp
dec
jge
ret
adc
and
xchg
xchg
and
push
ins
pushf
aad
sub
popa
dec
cwde
ds
add
and
test
ins
xchg
pop
outs
jo
fnstsw
xor
push
or
lds
lds
jne
imul
push
(bad)
outs
inc
leave
mov
bound
not
cmp
lea
int
mov
fbstp
and
rol
ds
jp
(bad)
clc
or
pop
ror
sbb
xor
jne
push
loope
cmps
gs
dec
lock
jnp
or
dec
push
xchg
clc
bound
xchg
jle
dec
mov
inc
cmc
outs
fs
pop
inc
xchg
add
pop
push
lods
inc
das
jb
in
pop
push
xchg
iret
mov
push
(bad)
mov
scas
mov
(bad)
call
es
sub
in
mov
or
repnz
inc
pusha
or
mov
xchg
mov
sbb
mov
sbb
inc
clc
jmp
test
mov
push
mov
or
test
(bad)
sbb
mov
and
mov
(bad)
xchg
int3
cmp
or
daa
repz
mov
jnp
aas
fdivr
dec
aas
imul
jno
dec
pop
movs
xor
mov
stos
fidiv
cdq
xchg
mov
daa
jmp
mov
cdq
imul
fwait
xchg
push
xchg
jmp
push
xchg
xor
outs
cmp
pop
fnstcw
add
std
lods
outs
jle
enter
inc
mov
pusha
sar
icebp
lods
retf
cmp
sub
add
in
pop
out
icebp
out
or
pushf
xor
push
out
in
scas
sar
call
mov
lods
add
mov
sbb
ret
cmp
jl
inc
sbb
push
dec
aam
and
and
jns
cmps
pop
xor
int3
ja
adc
sbb
adc
push
push
xor
lock
push
shl
pushf
add
rcr
hlt
scas
or
pop
test
in
sub
mov
xchg
pop
mov
(bad)
cmp
sti
mov
hlt
mov
(bad)
out
mov
sbb
inc
lock
cmp
mov
in
add
ret
jge
sbb
cwde
jmp
sahf
loope
xor
push
jp
movs
aad
xchg
pop
out
or
mov
test
shr
(bad)
in
cmps
jl
mov
pop
xor
jg
inc
mov
mov
mov
push
dec
push
aad
test
xor
inc
pusha
mov
mov
adc
inc
pop
add
in
push
mov
bound
sub
sub
and
pop
mov
pushf
int3
out
xor
mov
shl
(bad)
sbb
add
scas
sbb
adc
mov
and
inc
mov
jne
lock
ret
ret
inc
mov
sbb
mov
(bad)
repz
out
sti
push
dec
scas
into
adc
mov
dec
fisttp
popf
pop
sub
add
sbb
and
lock
(bad)
and
pop
dec
fcomp
loope
repz
fnstcw
arpl
inc
das
xchg
sub
std
mov
xor
outs
dec
pop
mov
das
(bad)
outs
and
dec
or
adc
or
lock
xchg
ret
cmp
call
jecxz
(bad)
loope
mov
(bad)
xlat
push
cwde
mov
inc
and
or
clc
es
sub
mov
retf
add
xor
sar
or
push
lock
(bad)
repnz
adc
loop
movs
pop
imul
dec
imul
int3
mov
out
inc
fld
xor
cwde
xchg
inc
fs
mov
or
sbb
sub
daa
rcr
and
jge
mov
cdq
add
cmp
push
aam
pop
js
sub
retf
fcom
inc
mov
mov
mov
inc
loope
mov
pop
adc
adc
jae
in
movs
int3
pop
and
jns
ficom
test
in
and
dec
mov
aaa
lods
fsubr
prefetch
or
loop
pop
shl
rcl
mov
sti
addr16
jl
stos
std
and
fcom
(bad)
pop
jge
popfw
aad
pop
add
in
loopne
lahf
aam
iret
mov
push
mov
cmp
popf
les
and
dec
repz
aam
fild
ds
ss
cli
cdq
xchg
scas
in
sti
jno
(bad)
xor
popa
fsubr
inc
adc
jo
and
jo
popa
mov
jno
stos
pop
adc
jge
xlat
push
and
fisttp
sub
xchg
ficom
dec
inc
retf
inc
int
loopne
xor
outs
pop
inc
mov
xchg
push
cs
bound
xor
addr16
sbb
lods
iret
cmp
add
pusha
inc
xchg
adc
pop
rol
mov
fwait
xchg
pop
out
xor
mov
or
stc
xor
pop
jne
cmc
gs
das
xchg
stos
pop
mov
call
dec
sub
push
pop
or
fwait
retf
repnz
adc
pop
inc
rol
int
neg
pop
bndldx
fist
call
sbb
scas
pop
mov
pop
or
push
dec
dec
add
sbb
xchg
jmp
(bad)
pusha
mov
popf
add
out
shl
push
fnstcw
lods
pop
rcr
pop
shl
scas
cmp
fs
das
add
pop
stos
xchg
lahf
lods
out
push
mov
lods
stc
push
loopne
xchg
es
mov
sbb
inc
int3
aaa
xor
sbb
shr
pop
nop
inc
pop
je
add
or
and
sub
jo
xchg
stos
jmp
push
cwde
call
mov
pop
wbinvd
jmp
cdq
data16
xchg
add
sub
fwait
xchg
mov
mov
ss
ins
mov
push
shr
mov
in
xchg
push
cmp
cmp
sub
xchg
xchg
jae
mov
mov
call
mov
xchg
push
mov
pop
test
adc
sbb
mov
popf
cmp
add
js
dec
jp
xlat
retf
sar
clc
outs
(bad)
fcmovnb
cdq
push
lock
sahf
sbb
or
push
ss
jp
jmp
xchg
retf
and
shr
sub
xchg
movs
jmp
ins
xchg
add
test
retf
js
mov
sahf
ins
popa
out
inc
push
aam
mov
fdivr
push
leave
add
cmp
push
pop
rsqrtps
arpl
dec
test
mov
adc
shr
xor
popa
mov
or
mov
mov
std
and
lock
pop
mov
jns
dec
and
and
daa
jmp
xchg
out
push
xor
pop
jae
(bad)
call
jo
add
dec
and
push
jno
addr16
mov
arpl
adc
int3
mov
hlt
imul
dec
sbb
movs
mov
pop
dec
xchg
pop
iret
push
sub
imul
xor
jo
push
adc
mov
ds
sub
xchg
cmp
cmc
mov
or
sar
iret
loope
setnp
jmp
retf
inc
and
test
(bad)
int3
data16
xchg
stos
aas
fdivr
add
retf
dec
pop
adc
cmps
cwde
into
push
cli
inc
lods
imul
inc
fs
sbb
imul
push
pop
push
cld
add
xor
fwait
scas
add
jp
inc
or
enter
and
xor
pop
mov
out
test
sbb
jne
scas
push
shr
movs
pop
jb
mov
and
push
fs
xor
dec
jmp
imul
hlt
sub
mov
or
xor
retf
cmps
in
fstp
in
sahf
jg
push
dec
xor
jns
adc
(bad)
push
stos
or
les
sbb
outs
sti
mov
add
mov
aam
xor
call
sbb
mov
xchg
dec
(bad)
mov
add
out
loopne
and
inc
imul
sbb
(bad)
lds
(bad)
sahf
inc
jp
(bad)
out
test
jmp
mov
bound
stc
inc
push
daa
hlt
stos
out
(bad)
pop
adc
push
adc
ss
jne
popf
mov
std
ds
jb
outs
or
loopne
pop
bound
enter
repz
lds
scas
jae
sub
and
iret
sub
es
(bad)
lea
enter
mov
xchg
movs
cmp
fs
jecxz
daa
repz
pop
push
pop
sbb
jnp
jo
inc
xchg
xchg
ins
aaa
cs
xlat
push
pop
jbe
lahf
int3
cmp
pop
mov
and
push
xor
icebp
dec
wbinvd
dec
scas
mov
stos
nop
mov
mov
movs
rcl
aam
mov
mov
adc
rcr
xor
push
pop
hlt
adc
arpl
stc
jmp
mov
lock
or
cmps
sub
out
and
cmp
add
imul
movups
pop
stos
adc
pop
dec
xchg
mov
in
sub
mov
pusha
arpl
push
and
adc
xchg
dec
loop
cmp
mul
dec
out
xchg
inc
inc
cmp
es
push
sub
call
repnz
lahf
daa
movs
mov
cmp
xchg
mov
(bad)
out
cwd
stos
lods
xor
dec
adc
(bad)
ret
mov
imul
stos
fst
jb
push
mov
stos
inc
fnstsw
es
jae
out
das
inc
pop
stos
gs
push
pop
pop
fldcw
inc
test
inc
lea
sbb
enter
push
idiv
mov
xor
arpl
ret
fcom
jmp
add
sar
repz
fnsave
lods
and
outs
pop
fstp
retf
rcl
sahf
(bad)
sahf
xchg
pop
jbe
xor
aas
sbb
jmp
popa
in
or
dec
mov
movs
cli
fucomip
mov
jmp
inc
not
push
cwde
pushf
lahf
rcr
mov
mov
stc
adc
arpl
mov
dec
adc
pop
test
or
ds
cmp
cmps
jae
inc
pop
add
push
icebp
repz
dec
cmp
jmp
movs
into
push
cmp
mov
mov
std
ret
push
sub
pushf
sbb
mov
jo
out
sub
push
cmovnp
dec
sahf
ins
jecxz
fnstsw
cs
cmps
sub
add
fdivr
sti
mov
lods
movs
shr
or
aam
adc
xor
push
mov
inc
pop
movs
jecxz
pop
cmps
sti
or
push
pop
fwait
jne
int
or
jae
and
push
add
jbe
nop
push
sub
dec
fbld
in
xchg
dec
in
mov
mov
ror
cmc
mov
mov
scas
sub
ins
inc
mov
or
push
add
mov
movs
cmp
inc
(bad)
xor
mov
xchg
jg
std
mov
xchg
les
push
or
test
(bad)
mov
sub
push
bound
mov
mov
inc
push
lods
bound
mov
inc
(bad)
sti
cmps
pop
mov
inc
gs
gs
jp
cli
dec
jo
retf
mov
push
(bad)
mov
lods
jmp
pusha
sbb
out
outs
xor
(bad)
mov
add
add
sbb
pushfw
mov
push
call
inc
daa
xor
out
sbb
push
push
js
xor
and
mov
inc
push
cmp
sub
pop
pop
data16
mov
mov
jne
out
mov
aam
mov
inc
jbe
add
push
and
repnz
jbe
movs
cwde
cmc
fwait
push
dec
ret
stc
or
mov
jmp
jno
cmp
std
ja
cmp
in
sub
push
cmps
mov
ins
movs
(bad)
jmp
xor
dec
mov
or
add
ja
jmp
jb
imul
dec
daa
jmp
(bad)
sahf
fld
popa
jno
pop
cwde
mov
mov
xlat
rcr
xor
test
mov
and
xchg
jecxz
test
or
stc
mov
pop
ficomp
mov
(bad)
push
call
arpl
xchg
jg
bound
in
push
sti
sbb
addr16
(bad)
int3
data16
xor
push
dec
sbb
inc
ret
sti
aaa
out
test
into
mov
xor
fidivr
push
(bad)
sahf
adc
outs
add
inc
rol
out
xchg
stos
or
mov
xchg
cdq
(bad)
push
bound
movs
imul
push
inc
dec
fist
sub
sub
and
mov
test
cmp
fadd
div
js
bound
push
jnp
pusha
inc
outs
inc
nop
push
retf
call
fdivr
fs
cdq
aas
maskmovq
mov
adc
push
push
pushf
add
outs
add
sub
jbe
jne
and
and
add
push
popf
or
sub
popf
add
adc
movs
xor
sub
push
dec
stos
lock
jp
int
inc
repnz
lea
enter
je
fwait
mov
das
ret
add
test
or
fwait
and
pop
rol
add
mov
jnp
mov
repnz
aad
cmp
mov
or
xchg
sbb
div
mov
xor
rcl
jle
jno
iret
pop
jnp
pop
popa
addr16
out
iret
or
add
dec
inc
mov
inc
pusha
ror
fisubr
adc
inc
xchg
jne
xchg
pop
add
sub
adc
rol
xchg
cmc
cmp
in
and
xor
scas
test
push
sbb
sub
mov
outs
hlt
mov
pop
dec
outs
sbb
cli
jbe
adc
in
add
stos
lock
iret
push
cs
nop
sbb
mov
inc
inc
out
iret
fdiv
imul
into
xor
add
push
jp
addr16
mov
push
(bad)
pop
test
mov
sahf
shl
rol
dec
jbe
mov
mov
adc
stos
pushf
(bad)
lods
sub
add
dec
pop
ret
adc
fld
sbb
pusha
adc
je
scas
cwde
in
xor
unpcklps
jb
jge
les
shr
int3
inc
scas
sbb
mov
jmp
repnz
mov
xchg
repnz
icebp
jecxz
shl
xor
mov
ret
sbb
jno
push
je
sbb
mov
push
out
mov
add
pop
aam
movs
push
cdq
jp
push
sbb
mov
mov
ss
xlat
aad
retf
push
mov
mov
ss
push
add
lds
xor
sar
nop
pusha
cmps
xchg
mov
xor
movs
mov
lods
xor
push
ret
mov
rol
mov
mov
push
inc
in
out
pop
shr
jp
mov
lea
or
sub
fimul
cmp
push
mov
mov
jge
pop
repnz
mov
sub
fiadd
add
pop
push
push
push
cwde
jmp
push
adc
pop
hlt
aas
scas
and
jmp
movs
fwait
push
add
sbb
mov
pop
xchg
cmps
cdq
lods
shl
gs
into
adc
mov
in
inc
ja
in
pop
js
xchg
ds
rcl
sbb
jbe
pusha
icebp
mov
lods
hlt
shl
jmp
fmul
push
mov
mov
frstor
sbb
test
std
out
popa
hlt
inc
stos
data16
cmp
fwait
cli
call
push
cmp
or
adc
jno
mov
lea
cmc
xchg
jl
push
ins
clc
call
fstp
fild
jl
test
cli
test
ret
mov
xlat
test
fidiv
ja
and
inc
mov
ret
dec
loope
xchg
jo
push
pop
pop
pop
mov
inc
push
sub
call
inc
(bad)
mov
sub
pop
mov
and
xchg
fisttp
inc
jmp
div
sub
cmp
aam
call
dec
test
leave
jp
addr16
and
cmp
jle
shl
mov
mov
sbb
cmc
loop
jb
sbb
loope
test
dec
retf
jo
sub
int
cmp
or
retf
(bad)
aaa
aam
add
fwait
call
test
scas
ja
popf
xchg
ror
iret
dec
dec
inc
sub
retf
jg
je
out
pop
mov
into
push
inc
ret
int
stc
out
dec
xlat
lock
fimul
push
inc
ins
inc
inc
out
push
mov
dec
lods
icebp
idiv
or
lea
dec
or
gs
scas
jp
repz
push
lods
(bad)
std
xor
bound
hlt
adc
cdq
push
push
xor
sub
(bad)
rol
sbb
scas
jo
addr16
aas
movs
xor
adc
adc
bound
cmp
jp
enter
mov
rol
call
cli
dec
cmp
pop
push
and
mov
push
and
xor
lods
in
adc
lahf
(bad)
arpl
add
xor
and
sub
mov
mov
fwait
jbe
popa
push
lea
sbb
jp
test
push
je
popf
xchg
lods
mov
cld
pusha
call
mov
jge
icebp
xchg
push
mov
sbb
data16
mov
add
xchg
xor
cli
pop
ins
mov
cwde
ret
cdq
sbb
xor
test
jnp
(bad)
mov
nop
jbe
outs
adc
pcmpeqw
pushf
into
popf
fs
mov
fstp
mov
cmc
ficom
cdq
xor
sbb
out
rol
or
and
sbb
cmp
sahf
jp
push
ss
inc
sub
jne
xchg
fmul
fnstcw
inc
(bad)
jecxz
adc
in
jle
fimul
call
repz
or
sar
in
lea
inc
mov
push
sti
add
fs
and
cli
mov
jns
sar
call
jp
cmp
stc
xlat
outs
cmp
popa
mov
lds
push
ror
dec
and
push
mov
inc
and
fstp
push
sbb
push
sbb
popf
mov
in
(bad)
shl
dec
clc
into
icebp
ins
add
push
jb
dec
mov
pop
cli
jnp
ror
xor
push
sbb
ret
(bad)
popf
sbb
cmp
fld
mov
rcr
jae
loope
lea
lahf
outs
das
sub
or
pop
push
sub
sbb
ret
mov
int3
mov
jno
push
xchg
inc
test
mov
fdiv
sbb
lds
jg
lds
cmp
jg
adc
arpl
dec
cli
(bad)
aam
pop
cmp
scas
in
rcr
popa
pop
in
out
xor
cwde
or
or
lock
jmp
mov
cld
int3
push
scas
mov
(bad)
jno
dec
(bad)
fidivr
mov
jmp
fstp
(bad)
jp
inc
sub
or
mov
pop
add
sub
xlat
scas
push
fstp
mov
mov
cmp
in
sub
scas
sub
aas
sbb
loope
int
cmp
jbe
mov
out
data16
dec
arpl
xchg
stos
sub
push
jle
pop
fcmovnu
dec
pushf
out
ja
int
mov
cmp
mov
mov
jecxz
leave
jno
lods
test
xor
mov
xchg
pop
mov
icebp
mov
lahf
aaa
cmp
fs
inc
dec
and
fldl2e
ret
pusha
lods
ins
jb
inc
jecxz
push
jmp
(bad)
mov
jecxz
mov
mov
out
retf
xor
mov
out
pop
test
out
or
or
push
jmp
lock
sbb
cdq
mov
fdiv
div
out
inc
lahf
adc
popf
lea
and
fistp
pop
xor
cmc
xor
movs
cmps
mov
dec
fst
cdq
inc
sbb
dec
imul
mov
addr16
mov
call
jbe
movs
fld
int
out
mul
inc
movs
or
push
mov
add
push
mov
pusha
ja
mov
imul
push
lea
xchg
mov
aam
ret
cmp
stc
jecxz
sbb
xlat
or
jg
shl
dec
mov
push
pusha
ja
adc
call
inc
ret
sar
out
push
not
and
ret
pop
mov
call
xchg
inc
ret
gs
mov
push
std
nop
sub
sub
or
xchg
mov
stc
fcom
in
inc
mov
js
out
add
mov
out
stc
adc
pop
jle
outs
repz
les
not
frstor
test
lahf
aad
xchg
jecxz
test
or
retf
jb
in
cli
call
dec
push
xchg
dec
(bad)
ins
lea
sub
add
jge
jae
dec
lock
cli
mov
sub
movs
in
dec
(bad)
inc
inc
xchg
mov
call
out
sbb
mov
ja
add
push
jmp
push
push
add
jle
(bad)
cmp
fdivr
(bad)
or
sbb
or
(bad)
(bad)
lock
ror
call
adc
push
cdq
mov
xor
sahf
pop
leave
add
pop
xchg
sbb
fidiv
or
sti
jo
shl
outs
outs
sub
or
add
(bad)
repnz
in
dec
or
fdivr
(bad)
cld
imul
pop
xchg
popf
adc
inc
aaa
mov
adc
lods
xchg
rcl
clc
push
sbb
add
and
into
lods
(bad)
popa
mov
div
pusha
mov
ffreep
pop
xor
jp
faddp
pop
or
adc
pop
pop
lds
ror
ret
mov
add
xor
and
and
xor
push
cli
or
pop
pop
popa
(bad)
mov
pop
cmp
xlat
out
add
jb
push
sub
arpl
sar
imul
nop
scas
outs
adc
push
test
inc
imul
pop
mov
(bad)
nop
and
push
push
repz
push
inc
jmp
sar
in
fwait
or
push
call
push
sub
mov
add
in
or
or
or
sbb
jge
int
inc
cmp
sahf
sub
das
adc
(bad)
out
loope
inc
sahf
test
mov
rol
enter
je
cmp
and
ins
addr16
pop
add
out
jne
stos
dec
adc
pushf
je
inc
sub
dec
dec
mov
mov
idiv
(bad)
cmps
cmp
bound
push
inc
test
xchg
leave
mov
popa
loopne
(bad)
sbb
add
pop
and
es
cmc
mov
jp
xor
xchg
stos
test
xchg
inc
xchg
push
jg
jnp
xlat
inc
cmps
fbstp
jmp
mov
cmp
movs
and
xor
xor
mov
cmp
dec
sub
cmp
mov
push
retf
daa
fst
sbb
add
cmp
(bad)
js
out
pop
push
push
cmp
int3
je
cs
or
in
aaa
inc
pop
sbb
aad
jns
or
(bad)
mov
fmul
enter
imul
or
in
cmp
loope
ret
mov
es
fstp
pop
call
jo
jmp
repz
retf
fld
icebp
mov
mov
mov
mov
xchg
aam
fidivr
and
movs
adc
cs
or
fmulp
cmc
fs
jo
dec
cli
call
lods
adc
jb
jnp
enter
shl
push
movs
dec
jb
pushf
adc
call
fst
xchg
das
add
mov
mov
out
ror
pop
push
dec
mov
fnstsw
pop
(bad)
jl
fist
cmp
rcl
repz
xchg
rcl
jbe
std
jl
mov
or
call
dec
leave
cmps
cwde
pop
add
ficom
mov
out
or
test
std
das
mov
mov
dec
adc
xchg
cmp
and
inc
sub
repnz
ret
fsubr
pop
test
cmp
mov
pop
jns
test
pop
leave
mov
stos
inc
ins
inc
adc
pop
cmp
mov
jmp
add
nop
xor
(bad)
sbb
xor
cdq
das
ds
sbb
shr
jns
adc
adc
fwait
sub
pop
shl
aad
jp
ja
push
js
cmp
cmps
jp
into
add
dec
mov
shr
xchg
clc
or
sub
ss
mov
mov
add
dec
lods
cmc
or
xchg
nop
xor
fwait
jmp
sub
outs
and
and
hlt
push
push
adc
cmp
pop
call
mov
cmps
push
sub
out
dec
and
aas
cmps
das
jecxz
in
mov
mov
mov
jae
out
gs
(bad)
addr16
xchg
xor
add
dec
out
jne
xor
cs
inc
ret
dec
pushf
sub
jne
cmp
in
fisttp
(bad)
sti
pop
sub
dec
lods
adc
sti
sub
cwde
cld
sti
stos
xchg
mov
cmp
cmp
xor
arpl
jne
add
sbb
ds
int3
lods
xchg
mov
sti
mov
ror
jmp
sbb
cld
mov
pop
push
mov
stos
mov
inc
ffreep
jbe
mov
jmp
rep
sbb
adc
iret
xor
lock
std
and
std
jg
mov
inc
mov
mov
divps
push
xor
(bad)
loop
fidivr
(bad)
in
cmp
xchg
in
es
fidiv
les
and
jne
cmp
std
push
mov
inc
fwait
and
arpl
je
lds
and
xor
jge
cli
call
xchg
cmps
mov
pop
lods
xchg
jge
loope
iret
and
xlat
cmp
or
push
in
dec
adc
(bad)
sti
(bad)
fmul
sub
mov
out
xchg
gs
adc
xchg
test
aas
jae
lock
push
clc
mov
jbe
mov
push
sar
cdq
movaps
ins
movs
mov
(bad)
pop
inc
aad
lea
daa
push
cmps
dec
mov
ds
push
fwait
daa
je
sti
bound
movs
imul
lock
jge
fs
outs
mov
sub
sbb
or
stos
fwait
push
in
addr16
out
mov
call
jo
repz
or
out
aas
fisttp
or
test
pop
loop
fdivr
out
xlat
in
not
pop
mov
cmp
int3
xor
push
push
push
outs
inc
mov
int3
loop
sub
xor
jmp
and
and
aam
cmp
jae
xchg
adc
mov
sahf
inc
jns
cs
stc
fcmovnb
sub
sub
or
pop
jbe
pop
mov
cmc
cmp
ins
sub
mov
je
jecxz
ret
jae
in
xchg
lods
repnz
ret
jecxz
push
dec
fst
out
dec
push
pop
lock
nop
ds
push
pop
inc
xor
sar
push
inc
(bad)
mul
adc
lock
out
shl
(bad)
sar
je
sbb
stos
push
ds
inc
stos
inc
out
lahf
mov
into
jmp
sbb
pop
cld
aaa
das
inc
fucomip
arpl
nop
or
into
cmovne
int
xlat
mov
shr
cmp
cmp
aaa
xor
and
lea
or
pushf
outs
ss
push
xchg
xchg
repnz
in
push
(bad)
adc
jnp
mov
inc
or
data16
sbb
cmps
pop
ror
and
ss
fcmovbe
std
inc
retf
les
mov
ficomp
xchg
add
cmp
xchg
fst
test
scas
xchg
and
(bad)
push
sbb
pop
imul
add
test
dec
mov
cli
xchg
jnp
cmp
push
xor
push
and
add
scas
pusha
mov
push
jne
jbe
cld
push
pop
jmp
pop
je
xor
push
scas
retf
pop
(bad)
outs
je
retf
mov
push
cmp
fisub
sub
in
jo
xchg
(bad)
lods
scas
xchg
jle
stos
dec
shl
leave
jb
inc
xchg
(bad)
and
or
lahf
icebp
sub
or
mov
mov
dec
mov
cmp
jecxz
xchg
dec
fist
cmp
stc
out
lds
add
jmp
retf
js
das
lahf
dec
outs
inc
clc
mov
cmp
mov
sub
jp
xchg
popa
fs
mov
mov
lods
aaa
fucom
xchg
fcmovnu
inc
adc
call
fistp
lods
adc
and
repnz
ja
lock
sub
pop
mov
mov
mov
ss
outs
inc
sar
int
ins
pushf
ds
cwde
inc
cmpxchg
mov
pop
enter
imul
fistp
mov
add
loopne
pop
dec
adc
cmp
(bad)
fst
cmps
mov
jmp
xchg
jae
test
sqrtps
mov
(bad)
push
jp
pop
into
lods
pop
mov
mov
jnp
jno
xor
int3
(bad)
lahf
fistp
pop
outs
ss
pop
movs
mov
fsubr
(bad)
(bad)
mov
(bad)
clc
sub
test
mov
into
sbb
call
xchg
pop
and
add
rcl
or
adc
jmp
add
jg
jo
adc
xchg
or
jl
fwait
pusha
dec
fs
jl
cmc
dec
or
int3
mov
outs
loope
xor
mov
cmp
jl
mov
jo
inc
pop
xchg
retw
in
stos
pop
add
or
pop
push
mov
add
sub
cmc
pop
aad
clc
cmp
ja
or
dec
imul
sti
repnz
sar
cmp
mov
xchg
dec
pushf
inc
sti
repnz
xlat
mov
push
movs
cmps
in
or
ss
dec
std
stos
xor
jae
imul
pop
rcr
mov
int
dec
pop
inc
push
mov
add
mov
adc
push
mov
fistp
or
rcr
loopne
fs
lods
daa
mov
add
push
and
mov
(bad)
pusha
jmp
popf
pop
sbb
cmp
cmp
jne
sub
add
dec
xor
inc
mov
sbb
add
or
fidiv
xor
dec
pop
(bad)
push
mov
pop
fbld
outs
rcr
push
jl
mov
mov
addr16
cmp
mov
mov
iret
js
into
lahf
dec
fmul
push
pop
ja
cmp
or
jnp
cmp
xchg
js
mov
dec
jge
stos
jmp
inc
and
repnz
gs
stos
or
adc
out
mov
push
bound
and
mov
jne
cmp
mov
xor
ret
xchg
xchg
clc
sbb
call
mov
xor
jnp
dec
mov
cmc
cmp
adc
in
push
daa
mov
dec
xor
shl
push
mov
push
pusha
int
in
outs
movs
popa
xor
out
adc
xor
mul
movs
pusha
or
jns
inc
stos
ins
sti
or
push
xchg
mov
mov
jne
push
std
add
out
pop
and
jecxz
cs
inc
ins
out
pop
cmps
retf
test
call
mov
adc
ror
test
dec
pop
mov
xor
mov
push
retf
jmp
add
mov
and
xor
fnstenv
jnp
push
test
jl
jo
push
in
xor
xchg
or
sbb
into
push
loopne
or
cs
inc
fdiv
jg
push
aaa
leave
movs
stc
and
push
mov
idiv
jmp
fldenv
fisubr
stos
in
in
jge
cs
clc
dec
cld
sub
ins
ss
shl
dec
push
jb
jg
add
mov
out
xor
push
cld
xor
sbb
jmp
test
cmps
jmp
push
(bad)
jg
pop
popa
test
lea
test
xor
push
loopne
xor
sti
xchg
setle
ret
das
sub
jne
jno
dec
mov
stc
mov
sbb
sti
xor
sbb
sbb
inc
fnsave
jge
dec
repz
mov
push
aaa
push
rol
and
jl
pop
mov
push
push
lahf
jmp
add
daa
scas
mov
sbb
or
sub
(bad)
pop
mov
in
ss
inc
std
sbb
stc
aad
or
xor
jb
les
call
pop
xor
gs
cmp
jnp
gs
ficomp
mul
lds
inc
push
imul
inc
rcl
pushf
xor
fisttp
xor
(bad)
push
int3
movs
mov
inc
jae
fdivr
push
ja
imul
adc
xchg
outs
sub
in
es
sbb
mov
repnz
in
aaa
(bad)
data16
mov
ror
sub
ret
sub
jns
add
sub
mov
xchg
in
movs
(bad)
call
add
div
jo
mov
imul
inc
imul
(bad)
stc
(bad)
loopne
outs
ficomp
mov
pop
data16
cmp
inc
cmps
xor
sahf
sub
loop
fs
int3
ss
cmp
jae
sahf
aaa
(bad)
and
stos
inc
and
nop
inc
sbb
mov
scas
cmp
fs
in
xchg
xor
or
sbb
nop
mov
sbb
imul
dec
push
pop
mov
or
mov
sbb
push
test
hlt
push
scas
dec
add
movs
fs
in
mov
ja
popf
adc
(bad)
jg
fcom
jle
mov
pop
test
fmul
sub
xchg
push
sbb
ins
popa
retf
mov
and
or
fst
lods
inc
scas
das
ficom
aas
adc
adc
out
push
or
or
loopne
inc
jl
or
push
or
xor
ret
mov
out
jge
dec
jl
push
sti
adc
test
and
arpl
retf
loop
sbb
mov
or
loope
add
pop
repnz
jbe
cmps
ins
inc
and
outs
(bad)
int
loope
pusha
fwait
sbb
mov
iret
push
in
test
movs
inc
inc
es
push
mov
ret
inc
or
lds
aad
sub
pop
inc
and
sub
push
pushf
inc
iret
add
retf
jnp
cmps
push
xor
stos
add
mov
dec
shl
nop
mov
rol
mov
ins
push
jg
ins
sbb
jb
test
cmp
(bad)
ja
pop
or
stos
inc
push
jne
fdiv
pop
mov
sahf
mov
cmp
out
push
jecxz
cmp
adc
nop
adc
cwde
jmp
cmp
push
(bad)
lods
ret
xchg
sbb
test
cmp
sahf
jl
(bad)
xchg
cmp
icebp
mov
dec
jle
sti
pushf
mov
cdq
leave
lods
cs
inc
ret
and
movs
mov
loopne
addr16
fnstenv
mov
dec
call
(bad)
sbb
mov
pop
dec
cdq
xchg
stc
bound
inc
retf
or
push
pop
(bad)
sahf
push
ins
cmp
in
mov
push
data16
xor
call
pop
rcl
mov
mov
mov
push
(bad)
arpl
shl
mov
leave
dec
xchg
xor
and
jge
leave
add
retf
xor
(bad)
(bad)
mov
movs
jle
jne
add
dec
cmc
pop
xlat
cli
in
dec
pop
mov
sub
adc
jle
scas
push
or
jmp
xor
scas
outs
in
stos
dec
gs
mov
mov
sbb
cld
jecxz
mov
sbb
adc
or
call
fimul
call
fiadd
ja
push
(bad)
mov
icebp
dec
std
dec
dec
dec
cld
xor
sbb
(bad)
cmp
push
xor
mov
arpl
dec
es
icebp
stc
int
fyl2x
jno
mov
(bad)
jbe
cwde
or
xchg
jns
mov
mov
jmp
aam
cmp
push
out
pop
aad
lds
cmp
clc
addr16
cs
jb
and
jo
jmp
xchg
push
aas
push
(bad)
push
cmp
nop
xchg
cli
leave
(bad)
mov
ret
dec
or
cmp
mov
inc
js
sub
mov
sub
mov
lds
add
jae
cld
retf
aaa
bound
loopne
in
rcl
inc
cwde
js
pushf
retf
cs
int3
jbe
arpl
and
aam
es
mov
fsubr
adc
push
js
and
sub
cwde
sub
popa
mov
loop
loop
mov
stos
xchg
ins
mov
clc
or
inc
out
rcl
xchg
push
add
dec
adc
or
retf
cmps
add
xchg
sar
xor
xchg
loopne
out
daa
xor
or
adc
fiadd
push
lock
xchg
(bad)
sbb
xchg
rcl
mov
or
aaa
push
inc
dec
leave
leave
repnz
loop
jle
pop
or
je
std
les
adc
mov
mov
adc
xor
retf
cmps
into
aam
hlt
sahf
into
dec
inc
loop
ret
lock
clc
mov
pushf
nop
xchg
cmp
out
loopne
xchg
(bad)
and
pop
jbe
call
fist
push
and
repnz
ss
je
mov
in
mov
jno
mov
xchg
pushf
(bad)
push
pop
xor
fnstsw
fwait
cmp
pop
out
ins
push
mov
cdq
fcmovbe
ins
jecxz
(bad)
jg
aaa
jbe
pop
ins
inc
sub
mov
xor
out
inc
shl
jo
and
jae
test
push
cmp
inc
sti
jns
retf
dec
js
cwde
out
push
mov
outs
or
pop
(bad)
mov
mov
clc
mov
ja
es
xor
ret
mov
xchg
int
lss
bound
xor
push
ins
rcr
dec
jle
and
xor
mov
inc
sbb
push
and
gs
xor
lock
rep
and
adc
sbb
adc
out
iret
and
ffreep
pop
aad
(bad)
add
frstor
sub
and
adc
cmp
mov
loop
fisubr
dec
xor
jle
adc
push
mov
aas
sahf
sbb
data16
add
ror
ds
test
hlt
add
(bad)
aad
jecxz
pusha
sti
popf
gs
es
pop
jmp
inc
push
or
push
jns
ss
int
push
adc
(bad)
ds
(bad)
mov
fs
int3
push
iret
retf
iret
mov
jb
pop
pop
fcom
ins
push
or
add
inc
sbb
mov
test
scas
push
sub
(bad)
in
inc
sub
dec
test
sub
sbb
add
mov
mov
leave
xchg
(bad)
out
out
dec
xchg
jl
out
in
push
xchg
xchg
pushf
push
push
call
icebp
enter
and
jns
lods
mov
jecxz
adc
(bad)
pop
out
pop
enter
mov
xor
xchg
cmps
or
sbb
pop
jg
cmps
or
cmp
jmp
mov
mov
xor
mov
jg
in
out
push
xor
xchg
test
jmp
and
gs
lods
or
jbe
dec
dec
cwde
inc
push
test
nop
ret
and
sbb
xchg
sbb
and
pop
push
xchg
and
pop
fist
pop
dec
ds
pop
fmul
out
fwait
loop
sbb
xchg
push
dec
lock
enter
jae
cld
push
dec
adc
retf
cmp
adc
test
shr
inc
outs
not
in
sub
cli
gs
in
add
imul
xor
icebp
sbb
sub
pop
mov
imul
push
dec
dec
xlat
int
and
pushf
sti
fnsave
mov
sub
stos
fst
pop
in
cmps
mov
cld
add
inc
sbb
mov
daa
push
jo
(bad)
cwde
jae
rcr
dec
jl
into
cs
xchg
sub
xchg
xor
jle
mov
shl
jmp
jp
retf
jnp
in
loope
mov
adc
push
add
(bad)
in
cmp
(bad)
fwait
pusha
fcom
jecxz
dec
xor
fcom
fdiv
cdq
dec
(bad)
fdivr
ror
and
ins
dec
sbb
std
stos
in
js
and
adc
aas
jae
adc
sahf
out
pop
mov
not
cld
mov
inc
cmps
add
nop
sbb
xchg
mov
adc
jno
aas
clc
mov
dec
mov
mov
iret
data16
adc
test
xchg
mov
lds
push
sub
jg
cmp
pop
movs
dec
cld
dec
gs
lods
adc
stos
inc
mov
adc
push
hlt
stos
mov
rcl
ret
mov
cld
popa
lock
fdivr
jecxz
mov
add
sar
dec
or
lods
sub
mov
punpckhdq
or
ret
jle
mul
sub
push
pop
xchg
adc
mov
adc
jecxz
aad
add
push
mov
push
mov
aas
mov
cmps
retf
sbb
and
xor
shl
js
push
(bad)
cli
sbb
cwde
jecxz
adc
cmps
jbe
outs
xchg
cmp
rcl
pop
or
dec
cmp
test
push
iret
jb
dec
fcmovne
sbb
pusha
mov
or
xor
(bad)
push
arpl
inc
ins
das
sub
sub
xchg
shl
scas
imul
ds
rol
cmp
pop
inc
enter
inc
sub
cmp
and
add
inc
rcr
aas
xor
xchg
jmp
movs
xchg
jecxz
call
jmp
(bad)
enter
xchg
shr
cmp
jmp
int3
(bad)
mov
mul
(bad)
cmp
pop
pop
pop
lea
in
inc
fs
psubw
mov
mov
fcomip
push
push
js
out
enter
mov
xor
daa
sbb
leave
jb
jecxz
sbb
xchg
sahf
cmps
cmps
in
call
mov
pop
pop
jecxz
lock
mul
lds
mov
dec
xchg
fcom
das
cmp
das
mov
loopne
sub
pop
add
adc
test
inc
sbb
mov
retf
into
pop
aas
pop
retf
test
mov
jb
dec
mov
pop
cmp
retf
fdivrp
jmp
pop
xchg
je
xor
pop
xchg
scas
pop
xor
inc
mov
push
ror
cwde
cmp
lahf
in
stos
(bad)
bnd
and
loopne
loopne
sbb
push
mov
mov
mov
sti
clc
stos
retf
leave
leave
repz
out
mov
pop
mov
out
test
xchg
or
sbb
out
jae
sbb
xchg
pop
cwde
popf
inc
test
cld
movs
inc
xor
jle
stos
retf
repz
(bad)
mov
inc
sub
inc
(bad)
mov
sbb
shl
adc
and
inc
les
jge
add
mov
shl
(bad)
adc
mov
movs
dec
mov
xchg
mov
sti
rcr
call
je
stc
cmp
mov
dec
sub
test
mov
jbe
arpl
stc
retf
sub
ds
jl
scas
lods
mov
(bad)
mov
jns
stos
push
(bad)
retf
ret
pop
adc
mul
(bad)
outs
fwait
and
arpl
test
imul
imul
or
mov
fisub
jecxz
test
add
xor
mov
sbb
popf
xchg
fld
xor
jbe
sub
ja
aad
adc
mov
xlat
jp
dec
dec
xchg
dec
fwait
inc
or
adc
(bad)
xor
mov
repz
xchg
add
jb
sub
xor
and
stos
dec
lods
mov
ret
push
jne
and
mov
inc
out
leave
cmp
sar
fnstenv
jne
jg
stos
xchg
in
jecxz
mov
pop
retf
push
enter
mov
cs
xor
movs
ds
dec
into
xor
fcomp
mov
jo
rol
in
lds
iret
adc
or
mov
out
dec
jecxz
dec
push
dec
jo
in
mov
data16
push
test
jns
jge
gs
mov
mov
dec
outs
in
lds
adc
cmp
xchg
cmp
or
stos
outs
repnz
lock
test
pop
inc
xchg
int
mov
mov
mov
xor
xchg
pop
js
xchg
test
out
and
cmp
or
rep
bound
sar
push
mov
pop
cs
ins
and
je
(bad)
mov
daa
pop
xor
mov
lods
add
sahf
push
add
sub
mov
fld
mov
ret
jns
repz
dec
sub
ficom
mov
fs
fisub
mov
push
mov
sbb
push
pop
ja
addr16
dec
and
or
xor
imul
icebp
or
fsub
mov
jae
push
imul
cdq
mov
xchg
push
and
(bad)
test
fstp
inc
repz
push
jbe
add
movs
(bad)
sub
cmc
jl
shr
jne
adc
dec
stc
add
or
imul
dec
mov
ror
js
add
sbb
cmp
out
inc
retf
pmaddwd
mov
mov
sti
retf
test
ror
mov
xchg
add
pop
or
(bad)
push
mov
stc
outs
out
shl
sahf
(bad)
inc
sub
xchg
pushf
pop
pusha
push
in
cmp
push
retf
je
ret
dec
xchg
and
shl
mov
in
sub
lods
out
sub
or
xor
div
repnz
hlt
or
int
dec
ret
fimul
daa
pop
fistp
ret
jno
sub
pop
(bad)
fst
jbe
ror
sub
push
mov
sub
adc
into
mov
and
xchg
jne
cmps
adc
add
jg
fwait
popa
imul
jle
out
pushf
push
(bad)
cmp
call
push
jae
xchg
ins
pop
call
cmp
pop
clc
and
xchg
ss
inc
mov
xchg
inc
adc
stos
enter
mov
mov
jo
cmc
cwde
push
xchg
cmc
push
mov
das
and
sub
(bad)
sbb
add
adc
int3
pop
cdq
dec
sub
and
cmp
sti
imul
and
jmp
add
cs
(bad)
ins
pop
pusha
jns
arpl
jmp
inc
push
aam
je
jae
cmp
bound
pop
outs
pusha
lods
into
and
mov
jns
nop
xchg
popf
or
adc
and
or
dec
jns
pop
and
mov
sub
aam
adc
jmp
retf
xchg
and
stc
jnp
adc
pop
push
out
sub
jo
sub
repnz
mov
push
shl
test
push
push
mov
sar
ret
or
and
out
add
sbb
(bad)
sbb
mov
(bad)
mov
lock
fstp
(bad)
repz
icebp
xchg
and
mov
stos
mov
call
mov
and
std
mov
mov
mov
std
cld
sar
push
push
fptan
lds
adc
sahf
mov
cs
add
test
mov
ss
(bad)
pusha
unpckhps
mov
aaa
sub
mov
jl
bound
jle
sub
scas
push
pop
dec
inc
ss
ds
frstor
mov
or
stos
ins
push
out
loope
add
into
push
sub
mov
inc
fwait
add
sub
sub
es
sbb
ja
lock
aas
getsec
test
push
xor
jno
push
js
retf
mov
lahf
jnp
test
repnz
js
add
out
xchg
xlat
test
xchg
or
imul
cmp
mov
in
push
gs
mov
sbb
inc
sub
lock
mov
scas
fmul
and
jns
adc
jae
out
arpl
cwde
hlt
jns
jecxz
aam
ret
add
add
jecxz
push
das
mov
pop
outs
out
push
std
ins
test
xor
cs
data16
lods
addr16
ins
jb
push
sub
in
gs
and
daa
adc
std
mov
in
and
popa
dec
idiv
dec
iret
mov
stos
out
cs
enter
cmp
mov
pop
ja
stc
mov
mov
and
push
addr16
fiadd
movs
out
cmps
ins
xlat
jecxz
loop
xchg
shl
lahf
fldcw
retf
xchg
jg
mov
inc
or
xor
mov
popf
xchg
xchg
test
sti
cmps
jmp
fisttp
xchg
mov
push
and
jle
sub
adc
mov
repz
pop
gs
(bad)
sbb
jo
add
les
cwde
mov
(bad)
lahf
mov
mov
add
lods
ret
push
mov
xor
out
jo
push
sbb
mov
xor
sub
add
dec
lods
arpl
jge
nop
xor
xor
test
aam
inc
mov
fisubr
push
dec
dec
outs
imul
inc
and
pop
iret
jp
dec
pop
std
inc
xor
loope
mov
sub
mov
(bad)
pop
sub
mov
ds
cmp
jno
fcmovb
xchg
retf
test
das
frstor
ror
adc
std
jmp
fnsave
jb
or
cmp
adc
iret
mov
jg
les
xor
aad
or
sbb
std
test
ret
lds
and
movs
cmp
cdq
cwde
adc
into
dec
push
out
mov
(bad)
push
gs
ins
adc
and
icebp
xor
test
or
out
jp
dec
mov
scas
push
fcmovne
int3
ja
cld
fadd
xchg
adc
cwde
dec
stos
cwde
cmp
xor
and
sbb
fadd
(bad)
adc
call
jae
dec
sub
jecxz
mov
(bad)
out
xchg
pusha
in
lock
adc
sbb
jo
scas
inc
inc
jns
fs
mov
push
jmp
xor
jmp
push
xchg
stos
ret
aam
add
jae
cmps
jle
ins
or
add
jl
xchg
add
arpl
cmps
lock
cmp
xchg
fmul
fcmovnb
fdivr
pop
or
mov
mov
pop
push
inc
pop
jmp
in
mov
cwde
xchg
loop
call
adc
sar
sub
and
adc
or
popf
adc
mov
les
iret
or
adc
mov
popf
(bad)
loope
jmp
jl
mov
rcl
es
cmp
sub
jne
(bad)
xor
mov
mov
cmp
in
mov
ja
std
dec
addr16
mov
stc
aad
in
leave
adc
mov
inc
xchg
mov
aad
xor
mov
movs
ret
xchg
call
pop
add
sbb
inc
hlt
and
or
add
xchg
adc
fs
dec
mov
mul
mov
ins
popf
das
dec
arpl
push
pop
test
arpl
dec
jb
sahf
push
lahf
jo
inc
push
aad
sbb
inc
pushf
rcl
jne
push
mov
xor
cdq
fld
ja
lds
rol
cli
lea
aad
retf
inc
xchg
rcl
cs
cmp
jnp
clc
fdivr
rcr
test
stc
mov
daa
jae
popa
jo
add
and
sti
gs
test
stos
(bad)
add
push
mov
imul
cs
push
std
add
xchg
in
adc
out
mov
jp
mov
pusha
(bad)
xlat
cmp
arpl
xchg
les
scas
jle
test
dec
xlat
or
lods
shl
mov
xor
push
push
jmp
push
fbld
mov
das
out
mov
push
hlt
stc
(bad)
adc
(bad)
xchg
and
push
dec
retf
aam
cwde
mov
mov
pop
sahf
rcr
sub
stc
dec
in
ret
leave
jb
call
shl
ds
inc
push
cmp
add
repnz
cwde
pushf
mov
add
nop
sbb
xchg
pop
cld
mov
arpl
dec
push
xlat
cmp
cmp
std
mov
pop
add
cmps
std
pusha
adc
pop
outs
cmp
fcom
imul
jnp
hlt
xchg
xchg
lahf
out
and
pop
xor
arpl
jno
enter
sbb
aam
jnp
jecxz
cmp
mov
and
add
or
jle
outs
jbe
rol
pop
lahf
jecxz
push
sub
dec
mov
sub
lahf
mov
(bad)
hlt
mov
(bad)
pop
mov
loopne
push
sbb
in
push
inc
repnz
and
xchg
xchg
aaa
mov
cs
pop
dec
aas
ss
cld
sbb
aaa
xor
xlat
inc
adc
pop
cwde
mov
shl
pop
cmp
(bad)
arpl
sub
js
nop
lock
lahf
rcr
or
test
jg
and
aas
scas
xchg
sti
nop
lods
and
mov
imul
rol
(bad)
(bad)
int
jmp
leave
ror
pop
sbb
xchg
jle
dec
ret
fstp
outs
pop
pop
enter
jbe
dec
or
icebp
cmp
jp
cmps
cwde
js
add
sub
int3
sahf
loop
cld
pusha
je
dec
mov
test
xchg
push
push
and
(bad)
js
push
outs
pop
cmps
test
loopne
sbb
call
ret
and
scas
xchg
xchg
push
cmc
cld
add
lods
pop
push
ror
test
fisub
sbb
scas
jl
out
(bad)
fidivr
ret
pop
popa
pusha
cmp
jge
pop
jnp
adc
adc
aad
cmps
stc
sub
ret
jns
mov
movs
frstor
xchg
fcomp
cdq
add
mov
mov
xchg
jmp
pop
cs
in
mov
fidiv
cli
fs
(bad)
push
mov
cld
mov
sahf
jp
mov
dec
xor
sub
(bad)
fild
icebp
jg
ret
sub
add
dec
stc
jb
cmp
fisubr
mov
pop
mov
adc
mov
sbb
push
cld
push
rol
and
cld
int3
dec
push
ret
shl
imul
or
pop
addr16
ret
cmp
dec
aaa
jb
cmp
dec
adc
dec
dec
add
neg
add
jmp
sub
and
scas
fisub
sbb
jmp
retf
popf
sbb
das
jmp
jp
push
call
sbb
out
les
or
fs
mov
fld
in
retf
sub
dec
not
cmc
cmps
dec
xchg
inc
xchg
push
idiv
and
xchg
jmp
pop
push
in
lods
mov
sahf
sub
pop
imul
or
mov
ins
jg
push
or
push
mov
mov
push
jge
das
sbb
pop
(bad)
lock
inc
popa
add
jmp
arpl
imul
outs
dec
aad
jecxz
xchg
xchg
sub
xor
in
cmp
mov
inc
and
fimul
xchg
aaa
retf
call
ja
icebp
enterw
in
xor
das
pop
lock
push
frstor
mov
cdq
inc
adc
loopne
fadd
inc
sub
push
and
int3
and
mov
ret
mov
cmp
fisubr
mov
les
and
pop
scas
add
clc
sub
push
xchg
aad
jne
stos
add
imul
cmp
shr
loop
mov
xchg
xchg
xchg
repz
jmp
mov
xchg
pusha
mov
lea
sbb
pop
mov
mov
and
jge
mov
int
mov
push
das
xor
xchg
mov
inc
adc
(bad)
rcr
out
inc
mov
(bad)
out
retf
push
mov
mov
jb
or
jmp
das
add
das
fisub
stos
jns
fidivr
addr16
mov
mov
sub
mov
cwde
xchg
pop
dec
sub
sar
ffree
in
add
fstp
push
scas
stc
shl
pop
outs
mov
xchg
push
mov
push
fs
mov
mov
lods
xlat
jb
push
jb
add
pop
cs
les
fidivr
push
jle
xchg
push
pop
mov
add
sbb
nop
scas
xchg
shl
jo
daa
sub
dec
in
or
cli
call
dec
dec
jl
bswap
pusha
fcmovb
sbb
mov
movs
sub
repz
int
dec
lods
jnp
movs
xchg
push
xchg
mov
or
into
pop
xchg
pop
cmp
nop
pop
daa
mov
cmp
mov
jnp
sub
push
xor
retf
mov
repnz
movs
aad
mov
cwde
push
mov
sub
add
test
popa
xor
mov
jle
cmp
push
fxch
int
xchg
jmp
xor
xor
jns
aaa
nop
fidivr
cmp
ins
iret
mov
mov
pusha
xchg
cwde
push
mov
ja
pop
lods
leave
lds
dec
mov
daa
hlt
test
and
mov
push
(bad)
add
lock
bound
out
iret
xchg
call
jg
jge
pop
fwait
pusha
mov
pop
pop
push
rol
dec
xchg
pop
jns
addr16
in
add
adc
adc
stos
mov
and
cmp
jecxz
loope
lock
sub
cwde
xchg
in
sub
sub
pop
ret
adc
mov
fdivr
xor
push
and
adc
std
jmp
push
add
movs
and
jae
popa
jb
push
mov
push
sar
fmulp
pop
dec
stc
daa
xor
or
jge
dec
jb
ins
dec
and
xor
pop
outs
or
out
test
xchg
fs
dec
adc
pop
push
xor
dec
cmp
jl
pop
cmps
or
dec
pop
es
pop
add
sub
js
mov
mov
in
(bad)
pop
xchg
call
(bad)
push
aas
cmp
sub
aas
push
ins
or
popa
js
in
gs
repnz
out
xchg
cmp
in
mov
mov
into
xor
imul
mov
push
adc
cdq
call
xchg
fiadd
sti
loope
daa
sub
jns
sub
push
test
inc
xchg
cmp
cmps
xor
push
or
inc
cdq
mov
jae
and
jb
pop
(bad)
jae
and
jae
add
inc
ror
push
add
jl
js
pop
cmp
cs
adc
push
stc
jb
stos
icebp
cs
test
mov
push
(bad)
in
out
(bad)
and
sub
cs
sti
ins
mov
mov
sub
aam
lods
fs
imul
call
jp
jns
adc
xchg
popa
xchg
add
jmp
and
pop
mov
mov
dec
pop
cmp
repnz
jmp
lahf
ins
icebp
dec
xchg
add
xlat
(bad)
jle
mov
and
lea
and
cmp
js
scas
adc
das
jns
fwait
repnz
aaa
mov
inc
std
add
and
push
test
and
in
pop
pop
sub
mov
xor
or
jns
sub
enter
int
retf
je
sub
adc
cs
repnz
fld
sub
pusha
add
jp
and
mov
mov
mov
sar
ss
cmp
xchg
movs
idiv
in
leave
retf
dec
push
adc
sbb
test
lock
mov
jmp
adc
mov
mov
call
fcom
dec
dec
sbb
jmp
sahf
mov
jp
add
cld
sub
sbb
push
je
cmc
cmp
jb
jg
mov
push
xor
and
sti
mov
imul
dec
movs
mov
dec
mov
adc
(bad)
cmp
mov
sbb
imul
sub
cmc
adc
sar
sub
call
(bad)
shl
xor
cmc
or
and
adc
stos
and
sbb
push
test
scas
mov
mov
repz
mov
mov
lea
xor
mov
pop
add
pop
mov
push
mov
repz
or
jns
or
xchg
sub
stos
ret
jne
mov
xor
ficomp
dec
pop
pinsrw
cmc
sahf
push
shl
jge
mov
sbb
pop
dec
jmp
jge
cmp
stos
mov
iret
popa
jl
ss
sub
out
jmp
stos
fist
data16
inc
xor
mov
pop
shl
xchg
in
push
jmp
cmp
cld
shl
jnp
repnz
inc
mov
(bad)
pop
shl
mov
pop
cwde
sub
inc
mov
sub
cmps
pop
bound
mov
ins
cmp
inc
mov
xor
xor
sti
mov
cmps
mov
push
inc
ret
enter
pop
cmps
js
and
mov
addr16
adc
ss
xlat
sub
cmp
pop
xchg
jmp
enter
sbb
outs
sar
rcr
xor
shl
push
lock
call
jbe
xlat
mov
call
icebp
add
add
add
pop
jg
mov
sbb
ror
bound
daa
ret
fistp
stc
push
data16
push
data16
leave
nop
jmp
mov
leave
gs
mov
in
mov
int3
aaa
loop
lahf
jg
out
call
cli
inc
or
mov
xchg
mov
xor
nop
xor
mul
sbb
(bad)
movs
push
mov
test
mov
imul
xchg
push
mov
in
stos
in
inc
into
or
sbb
jecxz
pusha
out
bound
jo
inc
add
outs
arpl
add
cmps
cmps
sub
xchg
sbb
mov
dec
cmp
mov
push
push
xor
and
and
jp
add
xor
dec
sub
push
mov
cmps
popa
xchg
and
push
cmp
push
js
das
mov
push
pop
jne
outs
inc
push
pop
(bad)
js
lahf
daa
inc
test
popf
(bad)
aad
xchg
out
adc
ss
inc
ret
ret
mov
sub
cmps
in
and
cmp
and
mov
loopne
push
stos
and
sbb
dec
sub
ret
inc
xor
rcr
mov
pop
xor
daa
in
loopne
into
xchg
dec
and
jne
cs
jmp
sbb
imul
in
add
mov
mov
mov
(bad)
sar
out
xchg
and
or
addr16
jg
push
(bad)
jmp
mov
push
cs
xchg
jmp
add
mov
xor
xchg
sbb
out
sub
ficom
dec
and
push
(bad)
mov
test
pop
pop
push
icebp
add
add
cmp
outs
mov
loopne
cwde
loope
or
(bad)
lahf
jns
stc
jl
mov
sbb
jle
jp
inc
aam
fstp
sub
pop
cmc
push
jg
lods
adc
and
test
and
push
shr
adc
sbb
push
scas
out
fwait
ror
into
shl
pop
rcl
add
mov
in
(bad)
gs
jmp
xchg
jbe
gs
dec
mov
jb
push
bound
mov
push
stos
loopne
sbb
daa
and
adc
push
or
mov
xor
cmp
xor
ins
(bad)
mov
and
(bad)
cdq
cli
jecxz
enter
cmp
retf
sub
push
test
call
push
fmul
pop
dec
and
out
not
(bad)
imul
inc
jg
jmp
mov
scas
jle
fld
xor
mov
stc
pop
cmp
rcl
pop
inc
mov
inc
mov
cs
sub
sub
cli
and
or
and
mov
out
in
call
test
and
xor
push
xor
fsubr
cs
sbb
or
dec
sub
movs
dec
inc
gs
cmp
loopne
jge
jp
xor
pop
sub
add
inc
xor
nop
add
jecxz
pop
cmp
and
push
push
add
ds
mov
in
cmp
sub
test
stos
addr16
sbb
or
add
push
lods
cdq
jbe
xchg
sub
cmovae
(bad)
mov
lahf
test
mov
imul
arpl
pop
lahf
inc
fld
fs
fsubp
cwde
movs
icebp
cmp
lds
int3
or
jecxz
idiv
outs
mov
add
sub
imul
fimul
adc
jo
adc
add
dec
mov
clc
sbb
inc
in
(bad)
aaa
cli
mov
xor
sbb
sub
lahf
pop
mov
push
add
pop
pusha
(bad)
jecxz
enter
jp
sub
cmps
lahf
dec
ret
add
push
xchg
mov
jo
adc
or
in
and
sub
sub
inc
xchg
dec
test
int3
int
mov
fwait
add
test
mov
mov
jmp
loopne
add
mov
mov
or
pop
xchg
xchg
dec
mov
addr16
push
ret
add
mov
jnp
push
data16
cmp
push
(bad)
cld
movs
mov
(bad)
mov
ss
stos
cwde
mov
ret
mov
ds
sub
daa
enter
xor
mov
sub
das
push
popa
out
aam
ror
fs
out
fwait
cdq
or
sub
adc
rcl
mov
icebp
xchg
add
ffree
scas
push
cwde
bound
mov
mov
dec
sar
mov
in
xchg
enter
cmp
pushf
aaa
xchg
xlat
mov
or
imul
adc
icebp
in
sub
cmps
push
in
ja
mov
dec
(bad)
aam
cld
dec
inc
xchg
mov
dec
outs
mov
retf
fadd
gs
popf
xor
push
(bad)
mov
dec
data16
sub
add
pop
je
test
xchg
cld
ret
jp
hlt
adc
push
fst
mov
in
sub
repnz
pop
mov
fwait
enter
pop
inc
add
popa
int
fwait
or
(bad)
(bad)
leave
xchg
cmps
mov
mov
cmp
dec
cmps
sahf
xchg
pop
fwait
mov
xchg
pop
aam
loop
loop
add
sub
cmp
aas
fisttp
mov
adc
aaa
icebp
hlt
mov
(bad)
movs
cmp
jmp
xor
repz
mov
push
(bad)
sub
push
jmp
xor
xchg
adc
lea
(bad)
or
pop
shl
and
loope
psrlw
enter
xchg
neg
sub
leave
ror
adc
pop
outs
or
mov
(bad)
clc
fucomip
prefetchnta
fldenv
cwde
and
cmps
jnp
xchg
sar
in
jecxz
pop
or
bound
arpl
jo
fiadd
and
popa
outs
pop
fmul
sub
and
popa
pop
inc
js
mov
std
adc
push
mov
xchg
inc
pop
lods
popf
jl
sar
pop
sahf
aas
sbb
push
sbb
enter
popf
xor
or
push
sbb
fbld
popf
adc
inc
test
arpl
xor
ja
jns
cld
mov
mov
dec
fsubr
dec
cmps
push
xchg
jg
xchg
lahf
pop
dec
dec
jae
mov
not
ds
imul
addr16
push
mov
hlt
cmc
stc
adc
loope
popf
mov
jae
retf
jns
retf
and
imul
xchg
repnz
xor
and
hlt
addr16
out
mov
call
dec
mov
cmps
imul
(bad)
cdq
stc
mov
push
lahf
fcmovne
jle
mov
jmp
ret
jbe
aaa
mov
mov
adc
aaa
jp
mov
dec
jge
fnsave
outs
xchg
xchg
adc
mov
fild
sbb
repnz
pop
(bad)
mov
xor
rcr
mov
test
into
cmp
rcr
test
jmp
add
sbb
xlat
ret
fld
push
mov
cmp
outs
cmp
xor
or
and
aas
mov
push
push
cmp
je
xor
imul
add
push
scas
movs
xor
add
(bad)
pop
js
cmps
aad
inc
adc
rol
lock
or
sub
and
call
adc
jmp
enter
fwait
test
or
push
xchg
xchg
scas
or
outs
mov
(bad)
stos
fld
je
rcl
(bad)
sbb
xchg
pop
add
popa
enter
test
mov
(bad)
pop
jae
xchg
cld
inc
aaa
shr
cmp
aaa
xor
scas
xor
push
rcr
test
mov
push
aam
out
ds
aaa
and
pop
popa
out
lods
sub
mov
or
pop
dec
js
and
loopne
add
mov
bnd
std
rol
push
mov
ror
adc
sbb
fisubr
mov
adc
rcl
scas
add
bound
push
call
hlt
push
popa
push
(bad)
sti
mov
adc
and
sbb
cld
mov
cmc
out
sub
sbb
mov
inc
push
scas
ds
push
bound
dec
push
ret
sahf
sbb
sbb
sbb
fdivr
into
lock
sub
xchg
adc
jns
mov
mov
cwde
into
int
and
sar
and
xor
fistp
add
rcr
pop
out
pop
repnz
das
jge
jo
test
and
cmp
test
(bad)
ja
hlt
xor
push
pop
dec
and
pop
mov
stmxcsr
push
iret
aad
push
adc
mov
stc
pop
pop
(bad)
cmp
es
mov
sub
pop
(bad)
aad
std
fucomip
inc
xor
ret
push
in
je
add
imul
xchg
imul
fcomp
aad
add
xchg
xchg
lods
dec
push
int
push
pop
mov
inc
call
pop
adc
inc
ins
mov
xchg
cmps
inc
add
pop
sbb
add
adc
mov
out
push
sbb
add
les
pushf
mov
movs
inc
(bad)
vmovaps
arpl
out
(bad)
pop
add
stc
pop
fist
stc
dec
sbb
jg
scas
enter
jmp
test
loop
add
mov
jae
setl
pop
out
xor
stc
lds
push
and
sbb
pop
(bad)
mov
and
push
sbb
add
sbb
retf
rcr
mov
xor
loop
retf
adc
ror
test
push
xchg
arpl
mov
ror
mov
jae
adc
push
adc
jmp
and
sub
xchg
fiadd
jns
bound
push
push
mov
imul
enter
push
test
dec
add
dec
test
movs
clc
xchg
mov
sti
mov
loope
repnz
xor
iret
leave
(bad)
xor
adc
ret
cmc
xlat
dec
scas
mov
add
pop
mov
popa
pop
jmp
repz
cld
hlt
lea
mov
xor
fsub
push
daa
faddp
aad
(bad)
push
dec
mov
std
cwde
out
mov
add
lds
jmp
adc
sar
sbb
cwde
push
mov
xor
cmps
dec
mov
xchg
seta
mov
out
imul
es
mov
mov
mov
xchg
aaa
mov
loope
call
mov
(bad)
jecxz
or
fiadd
pop
adc
and
ins
movs
pop
push
cmp
out
adc
das
push
outs
aad
test
popf
mov
xchg
into
mov
shl
ja
add
sbb
push
jl
test
bound
adc
retf
mov
imul
jmp
jp
xchg
add
pop
cmp
and
mov
shl
(bad)
mov
aaa
(bad)
mov
jnp
cmps
popf
hlt
adc
pop
pop
mov
popf
jmp
cld
cmp
xchg
imul
and
jo
int3
mov
sub
repnz
cmp
addr16
or
cli
dec
mov
and
add
into
and
int3
in
xor
inc
or
ja
push
inc
xchg
xchg
jmp
xor
fadd
je
mov
inc
test
movs
mov
jecxz
in
or
mov
and
int
sbb
jle
clc
into
setbe
ret
dec
pop
sbb
jne
and
pop
aaa
push
lock
rol
addr16
xchg
retf
and
les
cmp
retf
clc
and
mov
dec
jecxz
push
dec
and
int
or
aaa
out
mov
int
jg
das
int3
adc
xchg
fcom
inc
repnz
mov
mov
dec
sub
lds
aad
and
inc
scas
or
mov
dec
sub
jns
test
das
in
xor
fdivp
retf
pop
mov
mov
enter
cmp
shl
push
call
popf
fiadd
std
fst
test
mov
out
sbb
dec
dec
test
push
rol
push
xchg
mov
pop
sbb
lock
imul
mov
inc
lods
jo
mov
ins
push
mov
fst
jl
adc
xor
test
jle
push
jmp
dec
mov
push
(bad)
cli
mov
lods
add
pop
(bad)
into
xchg
jb
in
fidiv
sti
lea
pop
shl
aad
mov
push
cmp
imul
inc
or
pop
in
mov
pop
lds
hlt
mov
mov
cli
adc
cdq
or
cdq
pusha
pop
sahf
in
aad
add
cwde
mov
hlt
rcr
lahf
(bad)
push
adc
dec
arpl
mov
cmp
sbb
or
gs
xor
mov
loopne
das
dec
mov
imul
repnz
movs
fistp
or
jne
xchg
aad
cmps
daa
mov
clc
cmp
arpl
sahf
jp
in
mov
jle
jbe
adc
cmp
lahf
mov
add
cld
xchg
inc
cmp
das
hlt
sbb
aas
mov
xchg
daa
fcom
sbb
sub
xchg
sub
add
dec
or
xlat
sub
leave
sub
aaa
test
fsubp
jge
les
xchg
sti
test
bound
jo
xchg
inc
aaa
sbb
cmps
adc
out
xor
mov
out
sub
pop
and
aaa
scas
mov
movs
pop
mov
ins
fucomi
inc
out
xor
jnp
int
mov
repz
movs
dec
cmc
or
ins
push
add
mov
sbb
pop
cmp
sbb
test
dec
cs
jnp
js
(bad)
out
mov
cmp
repnz
cmp
mov
or
(bad)
call
mov
add
call
leave
rol
ret
mov
retf
shl
dec
lock
enter
mov
js
movs
out
mov
sti
sbb
das
mov
pop
xchg
add
stos
jbe
inc
(bad)
xor
xor
movq
ja
fs
mov
out
fsubr
jbe
push
pop
pop
les
loop
(bad)
or
imul
push
jnp
mov
(bad)
push
sbb
fnstcw
and
xor
pop
das
int
popf
xor
inc
sbb
and
jne
aam
push
int
add
loope
jle
add
cmps
cli
mov
and
ret
sub
ror
cmp
add
jp
mov
aas
jle
(bad)
mov
fs
mov
jecxz
and
movs
or
rcl
sar
shl
jmp
push
add
retf
jmp
and
inc
mov
fild
hlt
in
pushf
lds
stos
movs
(bad)
mov
je
or
fs
inc
cs
lods
imul
cmps
pusha
jne
call
into
inc
dec
aam
shl
pop
enter
push
mov
sub
xor
cld
setbe
or
mov
jb
push
push
add
fsubr
push
popf
push
xor
push
sahf
call
push
in
jmp
cdq
cmp
dec
(bad)
gs
jne
jmp
call
push
imul
mov
xlat
hlt
mov
dec
je
js
int3
ins
mov
dec
rcl
xchg
loopne
pop
ror
clc
ins
gs
inc
xor
push
and
add
mov
jge
or
mov
js
fs
jno
pushf
mov
xchg
fiadd
(bad)
mov
jge
popf
push
lea
push
mov
mov
sub
fiadd
cmp
mov
stos
dec
push
inc
fsub
in
jns
loopne
dec
adc
mov
(bad)
ins
outs
sar
and
xor
test
arpl
xlat
jmp
repz
fs
dec
shl
cmps
or
stc
dec
ins
inc
xchg
dec
sub
jle
mov
sub
icebp
(bad)
enter
repz
xor
lods
mov
fisub
or
lock
mov
sbb
push
and
jnp
daa
mov
cmp
hlt
xchg
pop
in
ja
jb
mov
mov
repz
cmp
cmp
inc
cmc
pop
in
xor
mov
fild
mov
push
into
push
xor
pop
ret
mul
or
fdivr
mov
sbb
aaa
mov
jne
push
daa
inc
and
mov
push
push
jg
fist
loope
mov
outs
adc
pop
and
movs
mov
push
and
fmul
in
pusha
retf
push
add
mov
mov
inc
push
nop
outs
stos
sub
mov
add
movs
ror
(bad)
or
push
std
mov
in
jmp
data16
jb
(bad)
std
mov
(bad)
fidiv
shl
(bad)
(bad)
adc
ficomp
add
shl
jmp
jnp
push
mov
test
rol
or
sbb
std
sar
lahf
rcl
das
retf
cmp
ss
fisttp
(bad)
push
sub
pop
(bad)
mov
outs
pop
sbb
rol
dec
cmp
dec
cmp
inc
xchg
mov
stos
jb
std
mov
inc
push
jle
push
enter
ja
jmp
xor
into
movs
sti
sub
and
and
inc
mov
sub
xor
mov
pop
leave
repnz
xchg
popa
aaa
pusha
xchg
outs
dec
daa
pushf
mov
out
sti
cmp
addr16
popf
ret
xor
xchg
std
dec
mov
adc
add
xor
push
dec
xchg
fld
sub
sti
or
pop
cmp
iret
out
sub
cmp
jp
ficom
mov
scas
imul
cmps
je
in
daa
mov
or
loope
popf
mov
xchg
test
scas
sbb
inc
inc
les
mov
aad
or
sub
sbb
and
outs
jns
jnp
rol
movs
pop
nop
sub
outs
mov
ss
sub
adc
add
or
jl
cwde
and
xor
add
sbb
in
jge
xor
mov
inc
dec
mov
aad
jmp
lock
dec
push
and
mov
sub
fsub
addr16
mov
call
mov
int3
jbe
in
lods
mov
jns
sub
mov
js
pop
mov
cmp
push
push
out
or
call
call
mov
clc
jne
addr16
loopne
sub
enter
cmp
or
cwde
imul
lea
daa
cli
sbb
jmp
or
in
dec
mov
lods
xchg
ja
(bad)
mov
cmp
outs
mov
mov
mov
push
push
fsubr
or
test
(bad)
mov
outs
sahf
pop
and
dec
push
call
pop
jae
inc
loopne
sub
pop
sub
xor
mov
lea
pop
in
mov
cmp
or
mov
jb
sub
and
fisttp
sub
push
in
(bad)
je
aam
out
outs
push
xchg
sub
mov
inc
pop
add
popf
aad
(bad)
lds
mov
jae
repz
das
sbb
mov
xchg
add
pop
xchg
pop
cdq
dec
fisubr
adc
cmp
fdivr
sti
test
cwde
add
cmp
inc
lea
dec
sar
inc
add
std
(bad)
sbb
dec
das
sbb
inc
push
inc
dec
pop
mov
cmps
inc
ss
cli
aaa
xor
inc
popa
jo
outs
popf
test
xor
adc
push
lds
mov
pop
dec
out
test
(bad)
dec
stos
jns
(bad)
(bad)
aam
push
xchg
xor
hlt
cli
adc
mov
mov
lock
inc
call
out
cli
add
jle
arpl
pop
repz
lahf
data16
push
and
div
xor
in
ja
mov
mov
or
jle
push
repnz
outs
aad
or
jg
push
inc
lods
(bad)
and
fstp
(bad)
fdiv
push
dec
jmp
test
cld
stc
add
cmp
jo
adc
cdq
push
or
and
imul
mov
mov
mov
and
dec
imul
adc
call
int
push
push
dec
jnp
ss
aaa
movs
sub
sub
xchg
js
jg
dec
scas
xor
push
mov
xor
jmp
lock
xchg
push
daa
imul
push
adc
fld
outs
inc
dec
scas
jno
outs
mov
pop
sbb
movs
mov
and
div
pop
(bad)
pop
imul
movs
fild
xchg
repnz
push
inc
push
(bad)
sub
sub
dec
(bad)
out
popf
jne
(bad)
movs
daa
push
jle
stos
sbb
retf
adc
repnz
out
jnp
xchg
aam
and
lahf
mov
push
mov
jno
pop
cwde
fimul
dec
dec
test
or
retf
test
imul
xlat
fidivr
and
jmp
loopne
or
mov
dec
mov
push
jae
mov
jle
fst
mov
(bad)
in
mov
adc
cli
jmp
imul
cmp
xor
jg
jecxz
cmp
mov
fcmovb
jp
sbb
inc
and
xor
ins
mov
std
pop
adc
xchg
sub
stos
pusha
mov
xchg
xchg
icebp
icebp
xlat
scas
iret
jge
add
je
cmps
adc
mov
movs
inc
sar
sbb
test
and
mov
mov
xchg
jns
int
sbb
sti
mov
imul
or
xor
or
or
jne
mov
and
(bad)
sti
cmp
jecxz
mov
jge
or
dec
sub
std
jae
push
or
sub
sbb
jg
(bad)
sub
xor
imul
repz
cmp
test
push
mov
cmp
xchg
adc
xchg
mov
dec
sub
push
std
(bad)
sbb
out
and
rcr
mov
cli
std
test
dec
(bad)
dec
test
sub
cwde
jb
pop
sub
int
into
and
xor
lea
(bad)
stos
inc
repnz
cmovne
cmp
cmp
out
out
push
cmp
jl
add
neg
shr
pop
jecxz
pop
test
test
cs
sbb
xor
cs
jmp
hlt
aam
fdivrp
add
out
mov
mov
dec
xchg
mov
pop
pushf
jg
xchg
out
jbe
(bad)
or
mov
mov
pop
popf
push
loopne
jp
push
pop
cmp
xor
loope
xchg
dec
or
ds
push
inc
fnstcw
jmp
dec
(bad)
pop
loopne
jns
popa
sti
mov
mov
push
rol
inc
adc
sub
jg
jbe
cmp
jnp
dec
xor
push
push
into
sahf
pop
std
pop
je
je
arpl
out
ins
jno
push
ja
sub
pop
jmp
mov
leave
and
out
into
loopne
scas
adc
xchg
push
jge
cli
jb
mov
inc
inc
ja
sar
mov
jp
lock
mov
mov
ss
push
ins
out
or
jge
cdq
in
fdiv
call
adc
pop
je
mov
imul
push
std
repnz
popf
xor
dec
loope
(bad)
or
sahf
cs
dec
xchg
(bad)
call
and
mov
push
cld
and
std
sbb
out
pop
add
sbb
jg
(bad)
dec
data16
inc
sti
mov
inc
outs
ficomp
aad
xchg
push
mov
dec
sar
inc
adc
imul
bound
xchg
mov
cdq
enter
scas
mov
(bad)
fwait
loop
and
in
dec
xchg
jo
aam
mov
xchg
pop
(bad)
cmps
call
gs
popa
mov
sub
cld
push
movs
mov
adc
rol
lods
push
dec
ja
xor
ds
mov
adc
add
dec
xchg
xchg
sbb
call
jne
dec
adc
mov
mov
bound
inc
sub
jmp
mul
mov
in
pop
push
imul
lea
shl
aaa
push
addr16
jbe
mov
aas
xchg
iret
jecxz
adc
cmp
popf
lahf
sub
rcl
adc
jge
mov
popf
jg
xor
sbb
aaa
fadd
hlt
sti
mov
inc
ret
adc
repz
nop
pop
imul
mov
mov
pop
imul
cmp
shr
repz
jp
adc
ss
ud1
jno
mov
xchg
add
mov
mov
add
dec
fadd
jo
cmp
adc
cmp
popf
cli
mov
sbb
push
jecxz
loope
add
push
sbb
adc
mov
or
inc
(bad)
mov
mov
pop
aas
les
setne
mov
jae
imul
jns
aad
scas
in
sub
xchg
push
into
fs
sub
dec
inc
xchg
retf
ds
shl
daa
scas
xchg
retf
or
add
je
in
stos
jns
and
cmp
sbb
sub
xor
clc
and
cwde
inc
pusha
adc
sub
rcr
ins
push
int
enter
lea
imul
(bad)
imul
and
jp
je
iret
fadd
and
sub
push
jmp
mov
mov
stos
sar
xchg
sbb
rcr
jae
xor
pop
or
or
add
in
and
xchg
and
jl
stos
in
mov
cdq
lock
mov
jne
pop
int3
into
rol
mov
adc
cmp
ret
mov
imul
pushf
xchg
xlat
cmps
call
movs
pop
xchg
(bad)
and
movs
pop
pop
out
ret
pop
test
sub
dec
mov
push
(bad)
outs
jb
add
pop
push
or
std
sbb
push
add
sbb
push
rol
mov
pop
xor
cwde
mov
sub
cmp
lods
mov
xor
add
imul
push
out
xchg
addr16
fstp
scas
mov
out
inc
daa
push
sub
scas
in
and
cld
jecxz
jl
sub
add
scas
jle
inc
pushf
lahf
sbb
pop
dec
in
adc
inc
dec
into
clc
jecxz
mov
or
pusha
test
sub
push
jae
mov
add
int3
into
ret
ins
sbb
mov
dec
mov
data16
mov
aaa
pop
pop
test
dec
mov
mov
out
mov
sbb
cmp
or
aaa
inc
je
pop
ss
cmps
rcr
cmp
popa
shl
pop
lahf
sbb
movs
ds
dec
push
pop
cmp
push
mov
push
mov
rol
cmp
hlt
fild
popf
sbb
stc
sahf
mov
ds
aam
push
fmul
in
mov
pcmpeqd
(bad)
mov
arpl
int3
xchg
cmp
stos
fistp
dec
adc
ror
sub
push
shl
pop
mov
in
icebp
scas
shr
ins
xor
and
add
xor
sbb
mov
je
push
inc
daa
jp
add
ss
repz
imul
lea
loope
lods
popf
fsubr
mov
in
sub
mov
jae
mov
mov
or
jo
push
dec
add
jg
jne
dec
or
arpl
pop
push
loope
xor
out
pop
hlt
mov
rol
dec
pop
mov
dec
jbe
jmp
hlt
xchg
xor
lds
xor
mov
and
dec
movs
push
repnz
std
fwait
mov
fwait
lahf
xor
es
mov
scas
or
lods
cdq
cli
pop
test
pusha
pusha
call
dec
ins
cmp
jp
mov
add
shr
loopne
push
jmp
jmp
int3
jno
popf
pop
push
inc
jnp
out
ror
test
mov
xor
je
jge
sbb
and
jmp
loop
sub
mov
sbb
mov
call
sub
xor
mov
xchg
cmp
clc
inc
pop
push
push
adc
int3
mov
ins
(bad)
inc
push
fistp
shr
mov
sub
js
js
fcom
test
sub
imul
outs
dec
clc
gs
inc
into
cmp
xor
inc
dec
lods
dec
imul
mov
shl
imul
dec
mov
pop
push
cwde
push
fbstp
outs
into
mov
ret
push
shl
int
xlat
nop
shl
fcomp
repnz
mov
daa
ins
cld
adc
aas
jb
sbb
jo
mov
inc
cmps
(bad)
jo
sbb
cmps
jmp
int
xchg
inc
dec
mov
sbb
cmps
fdiv
fsub
pop
lods
add
dec
sahf
xchg
loop
call
js
gs
cmp
pop
mov
jecxz
ss
fcmove
dec
adc
push
fidivr
(bad)
loope
cdq
push
fst
mov
pop
adc
stc
call
pop
test
lock
jle
popa
add
loopne
mov
test
stc
scas
cmp
pushf
mov
lods
jno
test
aam
aad
push
or
jge
push
iret
push
adc
pusha
adc
add
cmp
mov
out
xchg
xchg
mov
inc
js
retf
xor
enter
in
aaa
sbb
(bad)
call
lock
jmp
jle
xchg
in
stc
push
aaa
test
adc
scas
int
dec
movs
cmc
shr
fst
in
fldenv
push
jbe
inc
pushf
ds
push
into
mov
cmp
cmp
sbb
xlat
sbb
add
out
jmp
adc
shl
inc
pop
pop
sub
dec
lods
stos
in
sub
js
sbb
xchg
mov
pop
jno
push
add
lods
int
and
add
data16
xchg
or
rcl
sub
fisubr
or
neg
in
add
cmc
jecxz
xchg
fidivr
cmps
xchg
inc
(bad)
mov
xchg
jae
dec
xor
and
xor
sub
nop
adc
jmp
cwde
or
mov
sub
nop
xor
jmp
jg
(bad)
fisttp
xchg
div
popf
mov
push
add
mov
out
push
mov
repnz
hlt
xchg
rcl
daa
inc
or
mov
enter
xor
xchg
sbb
pop
push
cmp
ret
adc
(bad)
repz
pop
sub
inc
add
loop
dec
mov
inc
sub
adc
sbb
sub
dec
dec
or
dec
dec
in
fstp
mov
mov
es
and
loope
mov
cmc
out
pushf
jge
int
(bad)
loope
sbb
rcr
mov
fbld
and
ja
cmp
cmc
ja
imul
cmp
jnp
outs
xchg
out
sub
shr
xor
and
out
mov
dec
in
mov
mov
sti
sub
int3
inc
inc
xchg
inc
and
cmp
jo
fsub
loopne
inc
sbb
out
mov
and
dec
hlt
out
test
mov
das
mov
mov
adc
enter
adc
test
loop
(bad)
cmp
mov
add
fwait
mov
add
outs
jg
jg
in
jnp
dec
mov
pop
pop
sar
xchg
pop
push
pop
dec
test
es
pop
push
cmp
cmp
ja
mov
mov
outs
pop
mov
dec
fisttp
jecxz
mov
test
loop
in
inc
rol
daa
pushf
out
lock
lahf
mov
shl
test
push
and
xchg
sbb
aas
js
in
lahf
mov
loopne
sbb
data16
jge
call
arpl
fs
repz
mov
je
hlt
mov
mov
outs
and
stos
imul
in
in
fdivr
fist
adc
test
inc
mov
mov
test
and
js
adc
sbb
in
jp
mov
xor
inc
mov
xor
cmp
pop
dec
adc
xchg
cmc
jecxz
jbe
push
inc
sbb
xchg
xor
dec
jge
push
test
fsubr
test
ds
out
add
cmp
pop
mov
fdivp
add
and
sbb
clc
pusha
push
neg
out
int
scas
mul
outs
xor
cmc
shr
iret
sub
or
popf
fwait
pop
fild
arpl
lea
pop
jmp
mov
inc
dec
test
cmp
aaa
nop
xor
sbb
xlat
idiv
cmp
aam
cmp
in
mov
movs
lods
sbb
xor
les
ror
sar
lds
pop
xchg
xor
out
inc
add
movs
imul
sbb
sbb
push
inc
jmp
or
rcr
mov
nop
mov
lock
sti
push
and
inc
pop
repz
fisubr
in
ret
test
inc
ins
or
ss
xchg
sbb
movs
(bad)
adc
or
or
push
je
ja
je
ret
daa
inc
in
adc
in
mov
push
data16
xor
mov
cmps
mov
xchg
test
test
fnsave
fsubr
jne
shr
ret
push
mov
div
or
jl
out
pop
std
jmp
add
stos
clc
cmp
lds
shr
jl
shl
movs
xor
or
jle
mov
jmp
add
add
cdq
addr16
add
jmp
dec
shl
jno
cli
rol
out
and
retf
loop
mov
movs
sbb
mov
dec
dec
mov
jp
inc
mov
dec
xchg
push
ficom
jb
popa
xor
cmp
dec
sbb
fidivr
(bad)
imul
push
push
inc
popa
add
pop
mov
mov
outs
mov
jge
outs
pop
int
pop
sbb
ror
xor
in
js
and
out
ror
call
rcl
dec
in
shl
mov
in
xor
sbb
ds
mov
or
mov
jnp
int3
sbb
cli
dec
pop
bound
mov
(bad)
mov
mov
aaa
std
cmp
enter
xchg
stos
adc
(bad)
sub
and
mov
lahf
inc
xor
cmps
fnsave
popf
adc
inc
leave
pop
sbb
xchg
pop
scas
cmps
addr16
cmps
pop
xchg
pop
(bad)
std
movs
push
in
imul
push
jg
mov
add
and
call
arpl
mov
fisttp
dec
(bad)
ds
ins
or
push
mov
or
int3
jmp
sbb
repnz
add
dec
bswap
mov
cmp
mov
pop
movs
push
lock
std
or
mov
out
ds
fucomi
jns
js
mov
daa
in
movs
pop
in
mov
imul
jl
out
sub
push
into
mov
pop
sub
rcl
sbb
xlat
pop
(bad)
xchg
loopne
add
inc
add
cs
mov
sub
sbb
sahf
fwait
push
fnstenv
mov
loop
mov
je
(bad)
lahf
push
into
add
xor
leave
clc
fdivp
push
popa
mov
shl
jo
(bad)
in
pop
neg
fisubr
jnp
mov
dec
mov
stos
xchg
push
enter
jno
pop
das
mul
scas
mov
adc
lods
mov
and
sbb
jecxz
sub
mov
dec
repz
ja
add
sbb
ins
loope
aam
(bad)
repnz
xor
idiv
or
cmp
test
sar
fldcw
js
inc
(bad)
and
add
nop
inc
cmp
fadd
inc
sub
fild
mov
inc
sti
imul
xchg
ffree
inc
iret
jmp
call
call
sbb
sbb
pushf
xchg
div
sbb
jne
cmps
jecxz
lock
cmc
ret
jo
push
ins
mov
fisubr
or
jp
jecxz
stos
mov
imul
fidivr
ds
or
(bad)
lds
(bad)
aad
sub
xlat
arpl
inc
pop
stos
add
int3
(bad)
aam
nop
pop
fnstenv
inc
jmp
sub
rdpmc
icebp
mov
imul
daa
cmps
xor
xchg
dec
pop
sub
pusha
sbb
or
inc
inc
icebp
jmp
cld
stos
pop
hlt
jmp
pop
loop
add
and
sbb
inc
sbb
xchg
sbb
int3
movs
aas
adc
stos
loope
dec
mov
test
jae
fnstcw
les
inc
or
jne
mov
push
enter
xchg
stos
xchg
push
(bad)
rol
sub
or
sbb
int3
(bad)
mov
imul
push
push
xchg
cmp
pusha
dec
mov
data16
ficom
retf
xchg
outs
(bad)
js
cs
or
and
mov
inc
and
push
pop
adc
add
jbe
in
fs
mov
out
faddp
data16
test
imul
add
xchg
sbb
inc
push
dec
int
imul
push
jle
pusha
cmp
add
inc
fwait
and
fnstenv
xor
cmps
hlt
dec
xchg
xor
aam
adc
jle
cmp
(bad)
add
xchg
lods
add
jmp
jbe
jne
sahf
adc
inc
pusha
test
retf
dec
cdq
loopne
rcl
dec
leave
adc
pop
repz
test
xchg
lahf
sub
pop
scas
push
xchg
ror
mov
aad
mov
pop
cmc
mov
in
sbb
mov
fdivr
scas
xchg
loopne
call
xchg
repnz
lahf
enter
cdq
cmc
call
mov
retf
ror
cld
test
ins
sub
cmp
mov
add
jg
movs
enter
mov
fwait
add
xchg
fwait
sub
fadd
rol
int3
sbb
or
cmp
and
push
mov
xchg
cmps
cmp
dec
jmp
push
cmp
jnp
pop
push
or
push
sahf
sub
jecxz
xor
xor
jns
pop
or
(bad)
stc
mov
fmul
xor
clc
adc
and
movs
jno
repz
fisub
(bad)
push
int3
hlt
sub
xchg
pop
div
add
xor
out
inc
mov
xchg
cld
xchg
fwait
lods
lods
mov
ins
cmp
and
sti
inc
sti
imul
xchg
pusha
movs
cmps
test
sub
xchg
push
inc
and
call
push
addr16
pop
out
mov
cld
iret
ror
aas
out
mov
jo
dec
rcl
pop
pop
in
fisttp
out
js
(bad)
jmp
dec
retf
pop
fstp
gs
inc
ret
dec
enter
push
fst
push
test
sbb
out
inc
loop
int
imul
or
cmp
popf
dec
repnz
jp
js
in
shl
jb
addr16
cli
in
(bad)
in
add
mov
cmp
add
xchg
cdq
in
aaa
gs
mov
xlat
daa
mov
sbb
xchg
es
out
je
iret
scas
add
mov
addr16
add
call
adc
mov
lahf
dec
scas
pop
mov
lods
in
mov
bound
jg
nop
bound
and
and
ins
test
cmps
nop
rcl
push
xor
es
out
inc
pop
mov
out
push
adc
ficom
shr
ins
retf
iret
cmp
mov
call
jl
mov
fwait
pop
pop
xor
js
mov
cmc
sub
dec
arpl
mov
jg
cwde
sub
(bad)
rcr
jle
inc
xor
mov
inc
push
mov
sub
aas
not
dec
pushf
lock
add
sti
and
int3
mov
rol
jecxz
mov
push
test
lods
dec
hlt
adc
xchg
les
mov
cmc
shl
(bad)
xor
mov
icebp
mov
pop
xchg
jg
pop
mov
out
into
cwde
cmp
xchg
xchg
pop
jb
push
sbb
stos
or
das
ror
mov
into
shr
in
mov
and
mov
xlat
jmp
sbb
test
js
inc
push
add
or
jmp
pop
jno
(bad)
ins
mov
fnstsw
clc
add
mov
jecxz
test
or
test
xchg
fist
cmp
mov
into
lock
aas
push
pop
push
cld
call
dec
inc
jno
mov
(bad)
jmp
sbb
xor
xlat
or
xor
stos
out
and
cli
xchg
repnz
jmp
xchg
adc
xor
enter
sbb
adc
fdiv
mov
xor
pop
ror
lea
in
cmp
out
inc
hlt
shl
test
ret
xchg
pop
scas
xor
sbb
mov
push
jl
loopne
cmp
retf
int
imul
and
xor
sbb
iret
jbe
mov
rcl
mov
hlt
and
(bad)
adc
cmc
mov
adc
mov
or
arpl
(bad)
cmp
dec
dec
mov
cdq
sbb
and
sub
add
pause
and
inc
push
cwde
repz
jnp
retf
shl
sbb
adc
xchg
jge
aam
dec
dec
sbb
push
in
(bad)
push
call
aas
test
jg
pop
imul
push
jne
mov
pop
shl
pop
jb
shl
in
adc
pop
xchg
jb
or
add
test
je
or
xor
js
into
cdq
cmp
jecxz
retf
xor
xchg
jns
jmp
sbb
push
inc
js
push
dec
(bad)
in
mov
in
xchg
jb
cmp
cmp
xchg
fbld
sub
pop
das
jbe
xchg
mov
stc
cld
fdiv
adc
adc
push
into
sub
push
aas
sbb
mov
enter
fbstp
int
inc
mov
jne
cdq
loopne
adc
ss
out
retf
push
das
dec
jmp
cmp
xchg
jp
mov
pop
test
popf
pop
lods
mov
lds
loopne
in
sub
mov
inc
test
dec
and
xchg
out
push
push
jmp
push
movs
movs
test
out
shl
add
ds
push
mul
jle
dec
dec
ins
sbb
or
loop
and
add
add
and
enter
cmp
cdq
fwait
loope
shl
mov
jecxz
cmp
fs
and
fdiv
test
data16
sbb
(bad)
fcmovbe
add
cmp
xchg
in
or
add
bnd
int3
xlat
fild
mov
les
shufps
aad
push
xchg
sub
or
les
idiv
push
or
test
cld
jnp
add
inc
cmp
lock
outs
outs
enter
call
outs
scas
mov
test
int3
jecxz
mov
imul
imul
jns
sub
sub
pop
add
jns
inc
inc
and
movs
xor
mov
sbb
imul
(bad)
aaa
pop
push
jb
sub
and
sahf
xend
mov
call
je
xchg
jle
lods
(bad)
scas
push
retf
dec
push
jnp
xor
dec
lods
mov
scas
mov
xchg
or
inc
cwde
adc
dec
fidiv
sub
data16
add
(bad)
push
mov
vmovq
cs
es
nop
mov
cdq
aas
push
push
(bad)
cmps
pop
sar
cmps
outs
push
cmps
daa
retf
xchg
pushf
scas
or
fldenv
dec
mov
push
sbb
lods
push
mov
test
sbb
mov
xchg
and
gs
or
aad
out
fadd
add
pusha
mov
imul
xor
xchg
push
iret
xor
add
sbb
scas
jg
mov
push
lock
add
mov
imul
mov
pop
jl
or
dec
bound
xchg
pop
xchg
stos
mov
popf
lock
(bad)
lock
sub
shr
add
int3
mov
mov
and
push
dec
(bad)
cmp
sbb
mov
cmp
jl
mov
jb
pusha
sub
dec
mov
pop
or
pop
mov
sbb
cmps
test
xor
sub
call
das
push
loopne
outs
jns
jmp
dec
enter
add
sar
test
adc
push
fld
aam
xchg
jnp
adc
gs
mov
inc
cmc
xor
and
cli
popf
cmp
mov
or
sub
sahf
lds
pop
sub
push
xor
lds
inc
ins
pop
ins
into
cs
sti
cmp
cmp
add
inc
call
test
fidiv
xchg
mov
jp
xchg
cld
mov
movs
iret
inc
pop
or
push
cmp
cmp
ins
arpl
sbb
data16
xchg
(bad)
dec
retf
lock
jl
div
mov
(bad)
aas
jecxz
pop
jo
mov
sub
mov
out
dec
xchg
mov
aam
and
pop
(bad)
jns
cmp
mov
nop
sbb
and
pushf
sbb
outs
call
test
mov
mov
push
push
add
inc
or
jecxz
out
dec
mov
dec
xchg
xchg
loope
nop
dec
jnp
fistp
xor
mov
and
jns
inc
cmp
dec
pop
adc
push
out
ffree
cld
sbb
sti
mov
(bad)
xor
fiadd
icebp
xchg
inc
jbe
shl
(bad)
xchg
mov
push
movs
out
mov
add
bound
cdq
add
in
cmp
cwde
adc
mov
add
scas
cs
into
pop
icebp
mov
cli
xchg
adc
xchg
movs
and
push
mov
out
ins
xor
out
push
cmp
and
mov
sbb
jae
mov
scas
ror
outs
test
gs
sbb
add
mov
cmp
clc
and
jp
call
clc
(bad)
or
data16
out
retf
fidiv
addr16
out
lock
rol
daa
inc
in
xor
ret
scas
sar
data16
push
loop
cmp
jl
shr
push
loopne
adc
jnp
and
call
jo
jle
rcl
xchg
dec
cmp
and
adc
cmp
mov
jno
nop
not
mov
cmp
jle
dec
shr
adc
push
out
xor
test
jecxz
inc
pop
pop
dec
shl
add
idiv
jnp
(bad)
push
imul
cs
push
cmps
out
mov
mov
cmp
sar
jbe
inc
aad
sbb
test
jge
jmp
fst
or
shr
jb
out
loopne
cmps
in
outs
stos
pop
push
mov
mov
mov
repnz
icebp
mov
xchg
sub
pusha
pop
test
loope
dec
push
lock
(bad)
jge
nop
sbb
push
(bad)
inc
retf
(bad)
adc
sub
mov
fsub
ror
xlat
inc
sbb
jle
jno
adc
adc
stos
dec
mov
(bad)
mov
mov
test
popa
jbe
inc
mov
cmp
into
cmp
cmp
and
test
mov
rcr
mov
add
mov
mov
add
arpl
push
push
fwait
xchg
xchg
imul
movs
jae
push
pop
cmp
cmp
xchg
sub
mov
stos
mov
push
cmps
jecxz
sub
popf
pop
and
(bad)
pushf
dec
xlat
sbb
jg
sbb
fst
pop
movs
jne
cmps
(bad)
push
(bad)
pop
push
jb
xchg
imul
dec
xor
mov
sub
mov
inc
(bad)
sub
hlt
add
xchg
movs
leave
outs
test
pop
dec
push
(bad)
out
mov
jl
nop
pop
orps
sar
cmp
pushf
mov
xor
(bad)
sub
aad
je
jno
call
jmp
lods
xchg
ins
push
in
fs
lds
jmp
repz
es
scas
pop
cmp
int
jne
test
mov
push
xchg
ret
sub
fmul
xor
pop
ret
xor
jmp
sbb
lahf
pusha
call
and
out
mov
sub
(bad)
je
(bad)
mov
pushf
jecxz
aad
popa
jl
arpl
sbb
xchg
aad
sbb
dec
rcr
fdivr
fnstcw
and
out
pusha
push
call
idiv
push
inc
jb
mov
mov
jl
and
xchg
test
dec
jecxz
loop
dec
out
movs
or
mov
adc
or
dec
xor
xchg
dec
cmps
adc
inc
mov
xchg
stos
mov
xor
std
and
lds
pop
lock
hlt
push
jbe
inc
clc
xor
push
jb
push
icebp
push
inc
stos
pop
mov
lock
fcmovnb
fmul
(bad)
jns
inc
cmp
sbb
jecxz
ret
ins
test
push
popf
mov
xchg
test
mov
test
movs
movs
or
push
js
fstp
enter
add
imul
imul
xchg
fstp
or
pop
mov
(bad)
outs
sbb
push
fld
jns
xchg
and
and
cld
imul
or
mov
je
ss
mov
mov
jg
xchg
mov
dec
rcr
mov
iret
fwait
(bad)
stos
neg
ss
into
shl
cmp
xor
addr16
lock
mov
(bad)
or
int
imul
loopne
das
lock
fisttp
sahf
call
push
ror
lds
jnp
hlt
pop
jp
enter
cwde
mov
and
push
jle
sbb
and
sahf
adc
test
cmps
inc
shl
mov
mov
add
and
ds
sub
test
in
cmp
or
jb
repnz
dec
mov
add
mov
retf
jb
pushf
dec
adc
leave
rol
and
jnp
fwait
fwait
xor
mov
stos
arpl
retf
jb
icebp
scas
call
in
movs
gs
and
inc
in
jb
cli
add
icebp
or
retf
nop
sbb
in
pop
and
push
call
jge
mov
mov
cli
jle
jmp
push
aaa
ja
push
mov
and
add
push
cmp
rcl
nop
adc
adc
int3
in
sub
(bad)
in
lahf
jmp
lahf
addr16
pop
pusha
cdq
or
aad
pop
clc
les
lods
mov
ja
xor
movs
jp
pop
fiadd
sub
sbb
int3
push
jmp
sbb
jp
and
rol
push
cmc
mov
sbb
xchg
lock
clc
out
and
iret
dec
fisub
daa
inc
cli
xlat
inc
icebp
outs
cli
scas
(bad)
cmp
mov
scas
lods
iret
mov
pop
mov
add
je
pop
in
jnp
inc
fwait
mov
fimul
stos
repz
add
cmp
pusha
adc
push
sub
cmp
sbb
je
push
(bad)
stos
mov
in
add
hlt
mov
nop
xchg
fld
mov
fnstcw
jne
cmc
mov
scas
xchg
sar
movs
fxch
pop
jae
fild
sar
pop
xchg
push
mov
div
xchg
mov
rol
jmp
xor
jp
movs
arpl
xor
push
sub
gs
stos
stos
add
popa
add
cmps
cmp
push
ret
ret
dec
into
addr16
js
mov
mov
repz
in
fdivr
cmp
std
(bad)
cmp
or
popf
sar
mov
(bad)
jmp
jae
sbb
mov
ret
clc
sbb
das
mov
add
mov
inc
neg
dec
ror
sbb
dec
mov
dec
pop
hlt
pop
pop
test
jge
lods
out
or
mov
pop
mov
jg
or
inc
fnstenv
pop
movs
cmp
xchg
cmp
test
arpl
push
imul
and
cmc
fidiv
push
mov
mov
hlt
je
ret
fild
in
ss
in
push
and
or
in
jl
imul
retf
loope
data16
test
mov
jns
push
repz
cmp
fbld
and
clc
outs
clc
xchg
mov
hlt
xor
aas
mov
loop
adc
loopne
xor
nop
mov
sub
xor
mov
imul
jmp
in
aam
adc
test
fwait
(bad)
push
pop
pop
cmp
xchg
cmps
add
stos
scas
retf
push
or
cmp
aad
mov
jg
add
adc
mov
xchg
jp
retf
ret
inc
test
mov
inc
adc
cmp
inc
cmp
dec
clc
hlt
sub
cmps
fs
aam
xchg
jg
lahf
cmps
imul
and
icebp
stc
das
retf
jbe
loope
push
mov
push
lahf
cs
adc
jns
and
xchg
adc
fcom
cs
mov
mov
dec
(bad)
adc
ins
clc
es
jmp
call
test
mov
jo
ret
dec
hlt
cli
aas
lods
pop
mov
mov
mov
inc
stos
sbb
loope
mov
inc
imul
es
js
add
push
sbb
add
adc
lahf
je
retf
xchg
sub
mov
pop
out
pop
jnp
cmp
sub
mov
mov
mov
sub
dec
nop
and
or
cmp
mov
adc
sbb
dec
sub
fmul
xchg
and
scas
mov
imul
dec
iret
jge
dec
gs
push
xor
stos
cmp
or
movs
loopne
sub
mov
cmp
mov
dec
inc
pop
(bad)
and
mov
mov
lea
and
sbb
jnp
dec
js
fmul
cli
scas
loope
mov
dec
cmp
ja
loope
in
imul
in
mov
imul
lods
mov
sbb
pop
in
in
inc
dec
dec
imul
push
mov
xchg
iret
dec
xor
int
and
push
clc
hlt
adc
xchg
pop
lds
pop
test
jg
jg
and
cmp
or
add
out
ror
mov
mov
sahf
jcxz
mov
and
inc
push
daa
xchg
in
data16
push
mov
xlat
mov
push
movs
jae
daa
in
js
mov
dec
(bad)
dec
clc
clc
stos
push
in
pusha
(bad)
push
leave
pushf
xchg
dec
jl
fs
inc
push
idiv
bound
add
out
lods
mov
cmp
(bad)
loopne
or
mov
shl
jbe
mov
(bad)
mov
retf
(bad)
movs
pop
jl
xchg
jns
sbb
push
pop
mov
jge
iret
add
adc
sbb
rcl
jg
hlt
fmul
fcomip
hlt
push
mov
dec
daa
(bad)
enter
nop
adc
(bad)
fst
(bad)
dec
(bad)
call
outs
seto
pop
mov
popa
scas
mov
mov
push
and
adc
cdq
in
shl
add
mov
adc
fadd
test
fsubp
out
pop
pop
(bad)
mov
jl
or
push
stos
lea
cmp
arpl
mov
mov
js
sub
mov
rcl
dec
jo
mov
call
adc
rcl
fadd
or
lahf
sub
jmp
lea
imul
adc
and
(bad)
push
jle
rol
adc
pop
scas
adc
test
repnz
push
inc
(bad)
js
fisttp
das
repz
mov
add
retf
mov
aad
sub
jecxz
adc
outs
inc
test
mov
rcl
jecxz
xor
pop
xchg
sbb
xchg
aam
loope
iret
jl
test
add
es
stos
adc
pop
fbstp
daa
cwde
rcl
int3
inc
cmp
ja
xchg
inc
mov
hlt
out
sub
xchg
call
mov
xor
push
scas
dec
sbb
scas
loopne
mov
sbb
mov
popf
fnsave
ins
(bad)
mov
mov
add
add
sbb
pop
xor
dec
inc
(bad)
mov
daa
shl
mov
stc
xlat
xchg
(bad)
jecxz
adc
xor
fwait
mov
pop
mov
outs
sub
or
pop
addr16
xor
pop
loopne
jecxz
add
or
(bad)
jmp
in
lods
js
adc
in
retf
mov
dec
into
dec
gs
add
mov
ret
stos
call
jmp
jne
xchg
pop
or
and
fwait
jmp
lahf
shl
pop
or
lods
and
(bad)
rcl
std
ret
sub
(bad)
or
dec
pushf
or
stc
popf
mov
mov
add
mov
jbe
xor
aas
or
sbb
outs
loope
les
push
adc
int3
add
mov
xor
fscale
inc
ss
xchg
push
push
xchg
std
push
cmp
imul
fsubr
retf
in
es
push
mov
pop
adc
mov
icebp
(bad)
aas
jo
ffreep
sub
cmp
add
shr
mov
inc
xchg
hlt
or
mov
pusha
mov
imul
jbe
push
xor
scas
xchg
fisttp
and
stc
je
push
mov
fnstcw
mov
push
cmp
test
pop
and
inc
sbb
sbb
or
or
push
or
out
cmp
push
repz
scas
pop
pop
out
add
daa
push
mov
sub
xchg
push
add
xor
cmp
xor
pop
bound
fidivr
cs
push
jge
shl
dec
xor
daa
dec
test
cmp
add
mov
add
jp
cmp
cmp
mov
popf
call
iret
int3
sbb
icebp
cwde
inc
dec
enter
jmp
mov
stc
(bad)
stos
lahf
pop
push
xor
cmp
dec
sbb
int3
daa
mov
loope
xor
lock
sub
pop
sub
scas
std
addr16
scas
popf
inc
mov
fwait
ror
movnti
or
cdq
push
iret
sbb
mov
push
jle
outs
mov
pop
jns
lds
pushf
pop
dec
es
arpl
idiv
jl
inc
mov
jmp
inc
sub
ret
enter
dec
mov
inc
mov
mov
sbb
mov
xor
rcl
and
inc
call
test
or
pop
add
cmp
xchg
movs
pop
mov
mov
push
push
sar
js
inc
(bad)
retf
ins
inc
arpl
sub
xlat
pusha
mov
cmps
mov
add
aad
push
mov
inc
xchg
dec
xor
shl
mov
xor
adc
leave
out
cmp
inc
add
add
push
xchg
inc
call
mov
dec
pop
(bad)
sbb
cmc
fild
xor
enter
pop
test
leave
test
int3
out
adc
push
fcmovnbe
pop
mul
shl
pop
jno
idiv
dec
(bad)
in
pop
xchg
js
mov
and
(bad)
push
lock
mov
adc
fistp
fstp
mov
das
or
lds
inc
mov
fs
loopne
pop
neg
inc
sbb
cwde
loope
mov
lods
xchg
cli
cmp
mov
inc
and
cmps
and
mov
mov
sahf
jmp
sbb
dec
push
mov
sar
add
mov
out
sbb
cmp
mov
cdq
std
sbb
xor
mov
mov
loop
sbb
daa
ret
jmp
xchg
je
js
mov
imul
push
sbb
cmps
xchg
js
mov
adc
in
push
mov
lds
cmp
call
daa
xchg
movs
cmc
jle
pop
mov
jge
sbb
xchg
popa
mov
mov
mov
movs
mov
xchg
xor
mov
leave
(bad)
ds
data16
mov
xchg
dec
adc
jg
xchg
adc
mov
dec
jbe
test
idiv
add
mov
jle
and
ret
ja
xor
jno
mov
push
mov
jns
xor
xor
cmps
repz
jmp
das
mov
mov
pop
mov
cs
jge
fst
or
jo
lahf
mov
imul
rol
pop
cmp
mov
fst
adc
push
inc
and
adc
inc
div
push
adc
ins
jbe
loopne
popa
mov
fsubr
je
retf
cmp
inc
jne
cmp
aaa
cmps
or
not
cmp
movs
int3
add
aas
or
xlat
sti
out
pop
jle
jno
test
lods
cld
jmp
mov
cmp
push
jl
dec
mov
leave
mov
pushf
pusha
pop
arpl
xchg
jne
repnz
in
sbb
(bad)
mov
lods
cmp
mov
xor
ins
add
arpl
xchg
add
mov
or
mov
sahf
das
jmp
jne
lock
xor
pop
cs
in
push
xor
test
jmp
test
or
mov
retf
rcr
pushf
jmp
inc
loope
aad
ja
mov
ret
out
adc
jo
cdq
(bad)
jmp
call
mov
add
dec
mov
fistp
(bad)
mov
fs
cmps
retf
fwait
pop
pop
enter
mov
pop
jmp
push
inc
xor
inc
sub
shl
mov
pop
mov
inc
inc
enter
and
sub
mov
xor
sub
sub
adc
mov
or
nop
mov
push
xchg
push
push
js
xor
fwait
dec
jb
add
push
int3
psadbw
mov
dec
jl
push
loop
and
xchg
xor
aas
fwait
xchg
cmc
mov
pop
fidiv
frstor
mov
call
add
int3
xchg
jp
cmp
xchg
int3
sub
or
and
cmp
mov
loop
xchg
cmp
push
repnz
es
sti
mov
ror
cmp
int3
(bad)
inc
movs
push
xor
dec
push
sbb
stc
pop
jne
(bad)
fnstsw
pop
xlat
les
test
adc
xchg
data16
rcr
stc
(bad)
mov
pop
jne
or
sahf
stos
mov
in
hlt
into
sti
mov
push
cld
xor
adc
dec
push
pop
pusha
stos
pushf
stc
push
add
out
call
xchg
jecxz
daa
sbb
int3
daa
or
int
inc
pop
xchg
daa
pop
rcr
mov
mov
inc
mov
stos
mov
jmp
repnz
imul
scas
jecxz
push
pop
or
add
test
xchg
out
retf
ret
leave
cmp
xor
mov
arpl
nop
popf
je
stc
push
imul
inc
stos
ins
mov
jno
push
add
xchg
sbb
aam
jmp
dec
call
push
pushf
push
mov
pand
or
xor
fiadd
pop
dec
outs
sbb
call
scas
cs
rcr
hlt
mov
movs
jg
adc
xlat
pop
mov
cmp
int
ret
push
mov
test
jae
mov
cvtdq2ps
pop
sbb
ss
or
rcr
lods
jbe
test
test
push
retf
pop
push
and
aas
aaa
or
mov
ret
dec
int3
repz
push
inc
repnz
jnp
call
ins
cmp
in
mov
mul
adc
xor
shl
mov
in
adc
cmp
sub
or
adc
dec
jmp
stos
mov
cmp
inc
jne
mov
stc
pop
loop
mov
xor
cmp
add
or
xor
sub
xor
lods
push
lock
aam
(bad)
int
push
aad
pop
aad
das
hlt
push
jge
pushf
sbb
(bad)
mov
mov
adc
adc
scas
mov
pop
cmp
scas
std
mov
pop
call
(bad)
out
xchg
hlt
fisub
mov
pusha
push
pop
test
std
sub
icebp
jg
mov
mov
rol
pop
mov
aam
scas
shl
loope
cmp
xor
in
stc
jae
pop
add
retf
mov
mov
retf
xor
sub
jbe
mov
push
test
pop
pop
jge
pop
mov
push
pop
idiv
popf
idiv
out
add
sub
inc
mov
pop
mov
retf
mov
sbb
(bad)
and
xchg
add
in
stos
xor
or
idiv
mov
mov
cld
(bad)
adc
int3
sbb
movs
mov
imul
icebp
std
push
cmc
mov
sahf
pop
mov
lods
mov
push
sahf
outs
push
cdq
inc
jo
xchg
push
xchg
sbb
sbb
dec
or
fnstsw
mov
sub
sbb
sti
and
loop
imul
scas
sbb
scas
push
cmp
stos
enter
gs
xchg
lock
xchg
call
and
or
mov
push
or
imul
bound
lods
mov
jb
(bad)
pop
(bad)
cli
dec
inc
push
int
stos
lock
sti
pop
adc
retf
out
test
enter
retf
addr16
jae
leave
hlt
xchg
jne
leave
jnp
cmp
pusha
inc
popa
pop
inc
clc
in
mov
jmp
jge
cbw
out
xor
dec
jbe
lea
sub
add
(bad)
jp
lods
and
arpl
movs
sub
push
mov
mov
sub
or
pop
scas
loop
icebp
xchg
mov
mov
inc
push
jecxz
stc
xchg
mov
call
cli
mov
push
adc
sbb
lahf
popf
fmul
bound
and
xchg
lahf
dec
or
les
and
lods
(bad)
mov
test
fwait
inc
jmp
mov
mov
mov
push
dec
loop
pop
xor
xor
inc
mov
sub
dec
ficomp
into
sbb
fwait
inc
hlt
les
sbb
or
push
(bad)
(bad)
mov
shr
movs
ror
inc
imul
and
push
xor
push
jno
pop
and
mov
movs
sub
lds
mov
xchg
mov
fldenv
mov
xchg
fisttp
xor
add
jle
or
jno
aad
sahf
push
mov
push
lock
mov
shr
push
adc
sub
lds
push
into
inc
jmp
push
push
add
loope
jno
ja
push
shr
ret
cmp
cmp
test
or
mov
(bad)
mov
pushf
(bad)
or
ret
fst
fisttp
lods
add
js
div
xor
fadd
xchg
into
inc
adc
sbb
xchg
cmp
push
out
stos
mov
std
xchg
pop
jge
(bad)
jg
fsubr
pop
mov
mov
xor
sub
push
scas
mov
push
repz
stc
jecxz
mov
add
mov
cdq
pusha
(bad)
jbe
push
jl
sub
cmp
fcomp
dec
mov
cmps
jl
popf
and
dec
mov
xor
or
mov
xor
xchg
mov
inc
cmp
movs
mov
inc
mov
pushf
mov
je
aas
outs
adc
sbb
jb
aaa
and
daa
popf
pop
es
inc
cld
or
xor
mov
push
add
stos
adc
and
pusha
jmp
icebp
push
mov
sub
shl
xchg
dec
cmp
pop
sbb
cmps
dec
cmp
mov
ret
and
and
je
push
mov
push
sbb
mov
dec
jmp
xchg
dec
jno
xchg
cmp
test
sbb
dec
in
fadd
fnsave
lock
pop
js
aas
xchg
xlat
pop
pop
in
mov
fwait
adc
pop
jp
out
pop
adc
or
popa
icebp
and
sub
xor
dec
test
xor
movs
pslld
clc
test
dec
sub
inc
retf
bound
fnsave
cmp
aaa
pusha
imul
add
stos
es
sub
mov
sar
mov
stos
mov
fimul
ret
sbb
lea
fidiv
into
mov
mov
or
xchg
repz
sbb
repz
xchg
sahf
lods
xor
sbb
imul
js
(bad)
mov
imul
es
sbb
aam
movs
pop
mov
cmp
ins
and
in
rcl
rol
loop
mov
jns
inc
(bad)
dec
mov
pop
cmc
jns
clc
and
xchg
sbb
add
or
add
arpl
push
sub
fild
inc
gs
in
outs
mov
ins
inc
xchg
lods
push
dec
mov
nop
test
stos
(bad)
mov
and
mov
jbe
inc
hlt
xchg
add
loopne
and
or
mov
mov
movs
dec
loopne
inc
jae
(bad)
push
rcl
sub
rcl
inc
mov
push
les
xor
xlat
jp
fwait
retf
jb
sbb
shl
movs
add
ins
loopne
cmp
xor
or
arpl
popa
or
pop
jnp
shl
fldenv
bound
loope
mov
mov
loopne
popf
or
pushf
add
xlat
fdivr
shr
sar
xchg
xor
or
mov
add
ret
push
and
push
cmp
repz
data16
(bad)
adc
mov
and
mov
int
jl
cmp
mov
jle
cmps
jns
sbb
and
mov
sub
xor
das
push
fnstsw
int
mov
cmc
ja
xor
sub
js
or
sar
ins
adc
scas
ins
pop
das
dec
out
fistp
dec
aam
not
or
imul
push
leave
out
mov
je
das
pushf
xchg
imul
je
sbb
jae
jnp
hlt
mov
push
test
in
jmp
fwait
stc
mov
bound
inc
sbb
ret
xor
fsubr
adc
cli
dec
daa
sti
mov
pop
test
retf
xor
dec
jbe
ins
mov
adc
pop
add
pop
test
outs
lods
jnp
clc
mov
leave
jmp
and
pop
dec
mov
stos
es
mov
pusha
jbe
fucomip
lods
xchg
xchg
cld
inc
jecxz
dec
adc
sti
fld
cli
xor
mov
ret
(bad)
dec
out
push
scas
aaa
repz
rcl
fsubr
in
stos
inc
iret
mov
or
loope
pop
ds
and
push
retf
adc
jne
mov
xchg
lock
rcr
(bad)
shl
(bad)
adc
sbb
xor
pop
mov
jb
std
jb
or
cmp
ret
mov
mov
test
(bad)
mov
mov
dec
ficom
fadd
stos
cmps
pop
mov
loopne
scas
xor
and
fwait
jge
adc
rol
enter
adc
sbb
iret
icebp
mov
loop
je
fsubrp
shl
xor
sbb
test
movs
sub
movs
mov
mov
dec
ss
pop
or
mov
xchg
push
int3
jmp
push
dec
inc
jmp
adc
not
sti
mov
ror
xchg
(bad)
frstor
mov
and
sbb
mov
pop
cmp
pop
pushf
mov
(bad)
ss
push
outs
xlat
pop
shr
mov
out
(bad)
in
cmp
js
sti
loope
sub
pop
jge
in
inc
mov
push
sbb
pop
add
xor
dec
jg
ret
fisub
adc
xor
outs
xchg
popa
or
out
clc
add
or
clc
(bad)
scas
and
pop
push
lods
add
and
and
xchg
or
test
cmps
call
mov
sti
shr
jbe
(bad)
adc
out
jne
cld
sbb
jle
fwait
lea
dec
arpl
pop
leave
cmp
rcl
enter
adc
sub
push
mov
movs
mov
sbb
jp
jbe
js
into
and
jecxz
push
dec
not
push
inc
sub
jno
shl
jg
mov
repz
enter
xor
or
sti
add
sub
jbe
aaa
cmp
mov
cli
fdivr
mov
and
test
out
xor
enter
xchg
or
leave
and
inc
inc
mov
xchg
movs
fwait
jmp
mov
retf
shl
mov
mov
scas
push
mov
aad
je
or
mov
push
in
jbe
xchg
fbld
sbb
xchg
jp
xor
sar
mov
inc
pop
mov
inc
add
xor
daa
jg
aas
stos
pusha
cmp
ss
ss
xchg
jne
pop
mov
cmp
out
sub
(bad)
std
xor
(bad)
dec
inc
push
std
(bad)
pop
xor
mov
or
das
mov
mov
mov
jmp
scas
or
sbb
xchg
inc
add
aad
inc
inc
xor
cmps
stc
leave
pop
sub
(bad)
jle
sub
adc
popf
idiv
and
sti
xchg
inc
popf
pop
rcr
rcl
js
call
sti
cld
push
cdq
push
scas
cmp
jge
inc
lods
xchg
or
retf
sahf
inc
scas
ds
mov
imul
xchg
cmc
fxch
xchg
jge
mov
dec
rcl
fist
adc
cmps
inc
xor
loope
dec
out
or
mov
in
in
pop
imul
ret
test
lods
(bad)
out
(bad)
aad
retf
pop
xor
and
and
rcl
scas
imul
aas
mov
pop
call
mov
mov
outs
mov
jmp
xor
out
sub
sar
repnz
sbb
push
sti
aam
iret
nop
adc
leave
mov
vmulps
lds
adc
(bad)
repz
add
add
lahf
xchg
mov
stos
xchg
dec
and
rol
mov
sub
xor
mov
sub
rcr
mov
push
leave
mov
xchg
pop
fs
jmp
jmp
or
push
cmp
mov
jg
inc
mov
and
xor
loopne
cmp
xor
retf
and
cwde
xchg
outs
dec
ror
enter
pop
inc
jb
inc
xchg
pushf
sbb
jmp
inc
clc
xlat
xchg
ins
test
push
lock
lods
dec
pop
mov
inc
mov
rol
imul
xor
mov
scas
inc
xor
and
aad
out
stos
scas
movs
or
mov
mov
out
mov
fldenv
xchg
push
jle
jmp
in
inc
mov
outs
jns
push
xor
cli
bound
mov
push
inc
sahf
stos
(bad)
aam
mov
mov
mov
mov
jb
inc
ret
mov
leave
sbb
fimul
push
inc
mov
js
call
jo
div
sbb
pop
repz
cmp
cmps
aaa
inc
(bad)
add
xchg
cdq
dec
or
and
lds
sti
ror
and
ret
push
outs
das
loop
xor
cli
mov
fcmovnbe
xchg
nop
cmps
adc
or
or
xchg
mov
mov
cdq
adc
cmp
fs
mov
hlt
call
or
loop
push
lods
fcmovnb
rcl
or
jne
loope
sar
xchg
stos
adc
sbb
mov
dec
pop
imul
sbb
inc
sbb
push
sar
mov
out
jl
inc
sbb
jle
push
lea
jb
mov
sub
jns
pop
mov
bound
sbb
dec
mov
jmp
mov
mov
or
int3
psubq
xlat
pushf
loop
fstp
jl
dec
jno
(bad)
adc
in
outs
inc
dec
mov
jae
inc
sbb
enter
test
ficom
adc
jns
ret
(bad)
jbe
xor
jmp
scas
add
xor
pop
jne
inc
jnp
jno
xchg
je
xchg
out
fld
add
pushf
cmp
loopne
ins
iret
jae
imul
xor
std
or
add
loope
mov
jle
std
pusha
push
cmps
stos
push
stos
stos
mov
movs
mov
dec
add
js
xor
dec
cmp
in
pop
mov
adc
call
prefetch
xchg
loope
(bad)
and
out
data16
out
sub
push
cmp
dec
pop
push
cmp
daa
mov
loop
pusha
inc
test
mov
stos
(bad)
fdivr
jno
mov
les
add
ja
pop
repz
adc
mov
popf
dec
addr16
pop
adc
icebp
inc
(bad)
sub
inc
leave
call
into
add
sbb
imul
sbb
cli
or
das
jge
fwait
pop
xor
push
mov
int
sbb
jae
rol
out
jg
movs
mov
shl
hlt
leave
test
jne
outs
js
sub
sbb
jge
addr16
das
sub
scas
into
jmp
sbb
popa
pop
scas
rcr
es
cmp
add
mov
(bad)
lods
add
in
adc
xor
(bad)
pop
xchg
sar
loop
clc
sub
push
mov
les
in
adc
jns
repnz
mov
cmc
mov
inc
adc
call
xchg
cmp
nop
fisttp
mov
fadd
scas
mov
leave
jne
mov
test
cmp
push
test
clc
outs
(bad)
mov
repnz
mov
pop
push
outs
push
mov
and
mov
js
dec
jle
iret
inc
or
or
mov
mov
xchg
sbb
mov
iret
jp
push
imul
aad
in
xor
inc
and
cli
hlt
inc
popf
in
xor
dec
jne
mov
or
lds
jmp
lea
sbb
mov
dec
sub
sub
test
add
aad
hlt
mov
mov
lods
shld
or
hlt
out
push
imul
test
rol
jnp
inc
jae
lods
push
push
dec
push
xchg
push
mov
int
xor
jg
loop
jge
xchg
outs
sub
sbb
push
cli
fwait
mov
inc
gs
add
mov
out
xor
xchg
mov
das
xchg
jmp
mov
sub
pop
movs
in
cmp
xor
inc
arpl
call
mov
lods
xchg
mov
das
jbe
pop
jmp
scas
fdivr
pop
and
(bad)
imul
dec
sub
ss
arpl
mov
aam
push
arpl
enter
jle
loopne
enter
jmp
lahf
xchg
and
mov
test
fild
dec
(bad)
mov
imul
(bad)
mov
arpl
retf
jb
and
cmc
cdq
xor
jo
cmp
iret
out
dec
call
push
int
cmp
repz
mov
jecxz
cwde
das
in
mov
pop
push
jb
mov
dec
fmulp
xchg
fimul
loop
jmp
inc
call
pop
nop
iret
test
pusha
sbb
pop
mov
loop
lds
or
cmp
adc
add
scas
add
jns
pop
mov
mov
and
popa
sub
in
cld
inc
outs
inc
sub
call
lock
sbb
dec
push
adc
in
xor
sub
cwde
dec
cmps
inc
mov
xchg
dec
fdiv
aas
push
clc
or
add
lods
or
and
dec
cmp
dec
dec
jb
test
retf
lahf
pop
or
mov
sub
adc
add
loopne
in
mov
ss
pushw
sub
jg
jg
bound
aam
ds
pusha
neg
(bad)
shr
pop
inc
ins
ds
psubq
ja
mov
sbb
lds
mov
fs
dec
aam
cmp
xchg
pusha
imul
(bad)
div
iret
or
push
mov
cmps
sar
mov
adc
pop
js
test
lahf
add
cmp
xchg
ja
mov
xchg
popa
test
or
addr16
xor
shr
leave
icebp
addr16
stc
cmp
fs
or
pusha
and
les
sbb
ss
in
sub
sbb
out
mov
pop
in
icebp
push
cli
aad
sub
out
outs
mov
imul
loopne
data16
sub
rep
jnp
call
push
cli
xor
adc
ds
and
shr
scas
and
mov
ins
add
mov
addr16
sbb
mov
in
jae
dec
(bad)
test
push
out
mov
repnz
or
and
in
adc
or
pushf
xchg
xchg
or
mov
and
jns
push
jo
aaa
arpl
test
mov
pop
das
adc
addr16
data16
mov
or
dec
or
pop
sbb
loope
mov
mov
cld
lahf
call
jb
jo
test
fsubr
xchg
out
push
sub
mov
mov
lods
sbb
sbb
dec
imul
sub
bound
mov
nop
popa
jae
inc
inc
cmp
aam
addr16
scas
sbb
push
mov
test
loop
pushf
mov
sub
dec
xor
jns
push
dec
adc
(bad)
popf
dec
inc
jnp
call
push
cmp
add
jnp
dec
or
mov
aam
xor
xor
leave
and
stos
loopne
scas
mov
dec
dec
inc
or
mov
fidiv
and
jge
jo
ss
shr
rcr
adc
es
and
jmp
aas
lods
xlat
xor
or
sub
pop
add
stos
aaa
sub
and
in
in
fiadd
or
sub
out
clc
lods
shl
mov
dec
lds
dec
adc
jne
dec
cmp
cmps
jnp
add
jg
xor
pop
inc
sbb
ins
fidivr
push
sbb
adc
adc
call
xchg
arpl
or
js
cmps
(bad)
xchg
jno
cs
pusha
jmp
dec
xor
scas
xchg
jge
and
and
cmp
outs
cs
test
cmps
mov
add
push
jae
mov
xor
popf
pop
cmp
pop
push
inc
or
mov
push
or
retf
movs
cmp
in
sub
jge
jbe
jmp
call
and
(bad)
(bad)
(bad)
fldenv
xchg
cmp
dec
mov
(bad)
dec
push
push
les
sub
scas
xor
addr16
cmp
fdivr
ror
dec
cli
xchg
je
(bad)
neg
(bad)
call
pop
dec
int3
and
aas
rcr
in
leave
adc
push
jecxz
into
inc
fmulp
pop
xchg
fcmovnb
mov
push
fwait
aad
push
fbld
out
sbb
jns
(bad)
hlt
pop
push
bound
cli
ror
dec
imul
rol
loope
fdiv
jne
aam
cmc
(bad)
sbb
ja
sub
cwde
inc
div
mov
dec
xchg
cli
pop
or
sub
loopne
out
sbb
push
mov
pop
pop
jb
retf
mov
std
and
shr
fwait
(bad)
or
fsubr
retf
nop
sbb
popa
xchg
dec
out
push
cmp
lods
imul
je
scas
int
mov
jp
out
sub
jnp
imul
xor
xor
rol
and
int
xor
adc
pusha
ins
inc
dec
mov
nop
xor
mov
cmp
imul
icebp
dec
mov
or
daa
xchg
hlt
mov
jmp
sti
(bad)
out
ret
or
(bad)
(bad)
js
add
jo
jo
dec
call
cmc
(bad)
test
xchg
mov
ds
mov
push
push
fistp
mov
adc
das
xchg
nop
cld
mov
mov
mov
sub
add
les
mov
stos
mov
add
jge
xor
add
int
fs
jo
lock
arpl
dec
mov
cmp
jmp
fist
dec
sahf
sahf
outs
mov
stos
in
jno
jb
mov
sbb
sbb
into
xor
pop
ret
or
or
fsincos
hlt
dec
imul
popf
jnp
int3
outs
rol
push
ins
push
jae
adc
and
call
stos
gs
xor
sub
stc
gs
and
repz
jmp
into
add
aaa
dec
sub
adc
(bad)
ins
ins
jmp
minsd
lds
sub
inc
adc
dec
pop
nop
jg
pop
(bad)
vrsqrtps
dec
pop
push
push
mov
jae
ss
mov
or
mov
cmp
push
in
xchg
out
ins
(bad)
stos
(bad)
nop
cmps
(bad)
pop
dec
lods
push
fidivr
test
test
fxch
addr16
shl
cdq
mov
mov
mov
xchg
in
push
xor
jg
pop
push
inc
and
push
sbb
sti
add
push
jo
call
ret
stos
push
pushf
dec
mov
adc
cmp
movs
ins
repz
pop
in
stos
adc
mov
inc
jle
or
mov
sbb
fiadd
cdq
xchg
jo
xchg
outs
cs
aaa
pop
idiv
shl
xchg
stos
xchg
or
xchg
sbb
sbb
fld
mov
mov
jnp
fdivr
mov
std
dec
pop
addr16
loop
sti
sahf
mov
jmp
sub
jb
push
push
xor
int3
xchg
adc
mov
or
sbb
push
push
adc
jl
or
iret
jecxz
int
jnp
mov
pop
aad
loop
movs
dec
dec
jmp
fnstsw
add
xrelease
leave
push
popf
dec
xor
fdiv
dec
xchg
xchg
(bad)
cmc
in
mov
adc
jg
ds
cmc
or
rcr
shl
or
not
xlat
and
jnp
(bad)
inc
xchg
adc
into
and
shr
jne
clc
iret
inc
aas
mov
mov
lea
jmp
shl
daa
retf
aas
xchg
fldenv
jae
mov
xor
sbb
cld
xor
lock
cmp
pusha
jle
pusha
mov
test
movs
add
jo
int
fbld
in
mov
fbld
outs
fwait
push
aad
sub
push
addr16
push
sbb
xchg
add
scas
jmp
retf
out
dec
jmp
mov
push
pop
or
adc
stos
xchg
sbb
mov
or
je
je
movs
xor
test
jle
mov
adc
pop
mov
inc
cmp
in
or
arpl
inc
retf
imul
adc
ret
outs
jmp
hlt
push
loopne
aaa
fistp
ins
fwait
sub
daa
inc
add
cli
js
ret
pop
xchg
cmp
pop
std
cmps
dec
test
xor
into
add
cmps
call
(bad)
cmp
xor
xor
pop
mov
int3
push
jmp
push
loopne
adc
push
(bad)
sub
and
dec
mov
test
(bad)
push
xor
inc
or
cmp
inc
jmp
cmp
iret
lea
push
pop
ja
shl
mov
iret
(bad)
scas
pop
inc
sbb
cdq
out
xor
adc
dec
pop
in
push
in
mov
por
adc
mov
sub
sub
add
pop
pop
pusha
mov
inc
sub
sub
pop
movs
repz
ins
(bad)
ror
(bad)
mov
retf
(bad)
loope
movs
xchg
pop
inc
sbb
icebp
mov
jl
hlt
(bad)
(bad)
mov
inc
sub
stos
xchg
sbb
sti
pop
cmp
inc
loopne
dec
mov
clc
xlat
sbb
sub
cmc
dec
jno
imul
dec
gs
das
pop
xchg
mov
jle
cmp
sub
sahf
test
and
jp
mov
sub
or
in
dec
out
test
int
inc
aaa
xor
in
dec
shr
repnz
cmps
fs
nop
cs
test
dec
xlat
push
in
sbb
mov
xchg
arpl
lods
ret
and
bound
mov
bound
jmp
inc
fwait
push
shl
or
jo
leave
sbb
mov
inc
jbe
xchg
jmp
push
cli
add
xchg
pop
out
repnz
inc
sub
pop
jnp
or
cmp
pop
div
pop
rep
cmp
and
out
adc
sub
das
cmp
stc
je
mov
mov
test
sti
cmps
sbb
lods
dec
pop
cmps
mov
mov
push
dec
sbb
xchg
mov
mov
sahf
lock
inc
inc
add
fadd
movs
arpl
cli
lahf
cmp
sbb
scas
pop
cmp
mov
lds
in
and
mov
cwde
xchg
pop
push
jb
dec
int
xchg
leave
dec
adc
and
xor
daa
push
js
add
out
ss
ins
popa
imul
xchg
nop
lds
cs
and
adc
ror
int3
loopne
(bad)
retf
pop
or
out
ins
and
sbb
xchg
mov
sbb
sbb
sar
sbb
jp
xchg
mov
js
and
retf
sti
mov
into
inc
sub
mov
add
mov
jnp
ins
pop
aad
mov
push
push
mov
xchg
test
in
out
mov
mov
mov
adc
je
test
mov
push
je
push
jecxz
out
cmp
lds
outs
repnz
mov
sub
outs
inc
ds
dec
test
cmp
aaa
fsub
push
sub
xor
inc
sbb
scas
popa
lods
push
cwde
icebp
js
dec
not
jp
adc
fcomp
adc
sub
jle
push
outs
push
rcl
inc
aas
or
mov
jl
dec
lods
shl
in
mov
std
and
dec
xor
loopne
ret
xor
cmp
push
shl
scas
push
adc
or
ror
dec
ja
popf
into
repnz
jl
pop
call
pop
fisttp
cmp
call
js
add
fbld
aaa
and
cmps
int3
jae
jmp
pop
dec
cdq
xor
mov
stos
pop
ss
cmp
scas
ficom
ret
ficom
int
(bad)
cmp
pop
sti
sub
fucomp
pushf
adc
xchg
push
out
mov
jle
sub
push
repz
movs
mov
pop
(bad)
pop
cmps
cmps
pop
int3
fs
or
loope
in
int
pop
dec
bound
jb
shl
(bad)
in
dec
iret
cli
fcomp
je
mov
jae
mov
push
sbb
(bad)
loop
jle
mov
sub
(bad)
mov
daa
fidiv
adc
and
in
pop
dec
in
in
push
pop
or
aas
mov
inc
and
iret
mov
inc
test
adc
test
cmp
mov
xor
test
gs
lahf
mov
fcom
adc
pop
nop
push
js
mov
stos
sahf
hlt
ins
aaa
add
data16
inc
shr
call
xor
xlat
inc
out
cmc
dec
aam
jmp
fwait
daa
fistp
or
arpl
imul
dec
mov
pop
mov
jge
or
push
out
scas
cmp
shl
lods
or
popf
mov
adc
sar
add
sub
push
jo
xchg
mov
aad
out
jecxz
test
push
mov
fcmovbe
jge
cs
cmp
cmps
xchg
jne
push
test
mov
xor
inc
and
push
push
rcr
jne
repnz
je
lods
icebp
xor
mov
retf
jnp
das
scas
fsub
inc
movs
and
mov
xor
sbb
pop
xor
mov
xor
xor
mov
in
xlat
adc
int
and
repnz
pop
add
mov
pop
mov
push
cwde
adc
pusha
ret
icebp
icebp
and
jo
out
xchg
gs
leave
ret
inc
sahf
inc
add
repnz
mov
ins
jo
jl
pop
and
or
dec
stos
loope
jmp
or
dec
in
movs
shl
into
jo
or
dec
mov
jmp
xchg
cdq
jmp
je
arpl
xor
adc
daa
pop
sbb
sbb
lea
nop
loop
sti
cld
mov
xor
inc
(bad)
ficomp
in
shl
jle
into
pop
imul
mov
ins
movs
mov
scas
cmp
retf
dec
enter
pcmpeqw
ins
jge
fcom
aad
div
mov
cmp
or
dec
or
daa
xchg
pop
pop
shl
(bad)
lea
mov
aaa
push
inc
jbe
sbb
ja
jae
and
test
xchg
add
retf
and
or
repnz
push
and
sbb
lahf
hlt
jle
leave
mov
dec
in
in
addr16
jns
cmp
adc
scas
mov
mov
sub
shr
dec
imul
in
mov
jg
jne
sbb
(bad)
inc
(bad)
repnz
push
push
add
les
xchg
push
in
push
retf
fwait
cmps
arpl
fsub
xchg
cmps
or
ins
or
cmp
retf
pop
mov
add
jne
idiv
push
inc
mov
jnp
xor
stc
push
fidiv
test
sub
mov
add
xor
sar
je
shr
cmp
shr
jmp
push
mov
adc
lock
retf
in
rol
or
rol
jg
sbb
xor
sti
scas
sbb
sub
jb
repnz
push
enter
sub
jg
push
adc
push
lahf
jo
push
push
pop
xor
cmps
cli
add
jns
sub
add
xchg
sbb
jmp
es
cwde
dec
dec
in
retf
jmp
stos
cmc
aad
sbb
fcom
xor
mov
push
cs
mov
adc
repnz
into
adc
or
mov
repnz
xchg
out
call
in
mov
ins
aas
in
pusha
rcr
dec
cmps
add
sub
aaa
mov
fdiv
mov
cmp
xor
or
out
cmc
in
lahf
pop
ja
js
scas
iret
pop
(bad)
scas
sbb
clc
cli
mov
push
test
mov
sbb
dec
push
mov
or
bound
call
push
std
mov
adc
call
rcr
pop
adc
dec
cli
adc
scas
pop
out
jecxz
cmp
and
add
mul
dec
dec
(bad)
mov
punpckhbw
and
push
ss
lds
jmp
arpl
xchg
push
mov
cmp
xchg
jmp
cmps
jmp
sbb
js
hlt
dec
cmps
and
mov
fmul
dec
inc
clc
or
inc
push
pop
xchg
out
xchg
dec
cld
or
mov
push
lea
cmp
test
icebp
fmul
mov
pinsrw
pushf
movs
sub
cmps
inc
adc
jl
xchg
mov
pop
fwait
lock
inc
pop
add
aaa
dec
jbe
sub
hlt
mov
push
xchg
aam
jle
jecxz
aas
inc
lea
pop
test
loope
setne
mov
cmp
dec
hlt
jnp
adc
ins
cmps
mov
je
test
hlt
fisttp
xchg
(bad)
pop
dec
inc
(bad)
sub
aad
ins
jge
add
xor
pop
or
mov
adc
adc
lahf
bnd
mov
xor
jl
out
push
add
js
hlt
mov
popa
fidiv
outs
out
ins
or
pop
push
stc
ins
sub
test
pop
aaa
dec
div
jbe
sbb
call
in
int
imul
mov
or
jmp
push
mov
mov
out
adc
sti
call
push
cmps
js
popf
jns
mov
and
int
dec
and
adc
xor
cld
sub
jmp
bound
mov
stos
je
mov
outs
fadd
aam
sbb
inc
mov
stos
scas
xlat
into
sti
loope
push
mov
push
inc
lods
js
and
jne
mov
shl
xchg
sub
pop
mov
arpl
xchg
(bad)
fidivr
stos
(bad)
cmp
dec
jg
xor
mov
int
xlat
mov
popf
pop
nop
or
or
lahf
pop
ins
mov
adc
sti
pop
(bad)
(bad)
push
push
and
push
ins
(bad)
mov
pop
push
call
ja
iret
push
repnz
out
add
scas
jne
mov
push
out
mov
cwde
cmp
xchg
inc
call
std
pop
inc
xor
les
dec
stos
test
out
aam
popf
xor
ret
retf
jg
dec
sahf
mov
pop
mov
mov
xor
mov
cmp
add
mov
icebp
cwde
imul
stos
sbb
hlt
out
cmp
inc
ja
add
cld
dec
mov
sub
outs
jle
push
scas
addr16
jns
shl
pop
in
jmp
jge
out
ja
rol
ins
mov
int3
sbb
xor
mov
movs
or
pop
or
xchg
mov
test
dec
cmp
add
(bad)
aas
loop
push
icebp
mov
leave
push
mov
(bad)
lods
pushf
push
mov
ficomp
ss
cli
movs
cld
jae
into
call
sti
jb
inc
(bad)
imul
xor
pop
(bad)
outs
mov
icebp
xlat
fmul
cli
imul
pop
adc
mov
add
mov
jne
cwde
or
jmp
in
xchg
push
aam
mov
out
adc
fcmovnb
call
dec
je
popa
or
int3
sbb
jns
adc
cmp
sub
jl
jb
mov
retf
shr
in
test
inc
repz
aas
pop
xlat
ret
sub
call
jg
dec
sbb
mov
ret
push
repnz
push
es
std
or
cmp
sahf
rcl
repnz
nop
inc
push
stos
xor
(bad)
mul
rcr
and
inc
repz
pop
pop
test
cmps
push
mov
fcmovb
(bad)
or
jae
iret
out
mov
ftst
fdivr
stc
jge
idiv
data16
mov
inc
cli
jmp
jo
mov
lods
pand
xor
jge
sub
cmp
cmps
test
add
add
xchg
push
adc
imul
adc
dec
sahf
lahf
(bad)
and
fxch
inc
or
popf
(bad)
push
test
ror
imul
inc
jl
xor
stc
dec
cmps
mov
cmp
mov
fwait
jg
push
js
or
mov
outs
iret
mov
adc
add
in
add
call
adc
sbb
repz
dec
das
jns
jae
lods
test
fcom
lods
xchg
pop
out
xor
(bad)
fdivr
loop
jecxz
ins
lods
sar
pop
add
idiv
adc
cmp
jo
push
rol
inc
or
xor
cmps
in
or
push
fsub
sub
mov
es
(bad)
mov
inc
mov
jno
outs
movs
push
bound
mov
cld
sub
test
outs
into
stc
pop
not
(bad)
push
adc
inc
sub
inc
imul
jge
jno
inc
and
add
push
int
inc
xor
pop
into
inc
mov
retf
in
add
loopne
xchg
dec
movs
cmp
out
mov
(bad)
test
lock
push
ja
lahf
lock
scas
push
sar
xor
lahf
retf
jb
adc
sub
iret
mov
pusha
jmp
xchg
jge
pop
jnp
cld
add
sbb
shl
aad
dec
fcomp
rcl
clc
or
popa
mov
mov
or
sbb
mov
fidivr
push
test
mov
dec
in
pop
imul
xor
(bad)
movs
mov
add
dec
shl
lods
xchg
(bad)
in
adc
repz
dec
jo
jb
xor
scas
lds
dec
repz
sbb
and
fstp
cwde
call
add
xlat
mov
int
inc
add
icebp
ficom
retf
xchg
mov
rol
xchg
mov
test
ret
imul
ds
nop
mov
adc
add
push
jbe
xchg
mov
sbb
pop
je
bts
and
or
sti
lahf
inc
pop
scas
ret
ret
pop
repnz
push
das
mov
loopne
mov
mov
test
sbb
or
xchg
xor
loop
mov
dec
in
popf
cmp
push
xchg
sub
das
data16
sub
rcr
or
int3
ins
fdiv
sahf
mov
in
sbb
clc
jbe
std
jo
add
je
pop
fcomi
add
cmps
xchg
sahf
mov
retf
push
jp
retf
shl
or
push
xor
add
repz
sbb
cdq
mov
sub
add
sbb
popa
xor
sbb
jmp
add
jmp
movs
xchg
mov
data16
sub
cmp
or
dec
iret
sbb
push
add
mov
sbb
or
dec
mov
sub
lods
jmp
ss
daa
out
push
xor
retf
loop
movs
xchg
outs
push
xchg
sub
add
ja
imul
push
cmp
cli
test
loopne
retf
cmp
mov
aaa
ss
es
and
mov
cs
fistp
adc
dec
fstp
clc
cmps
stos
dec
xor
sbb
push
add
and
add
pop
fnstcw
inc
sub
add
jne
mov
push
fisub
imul
jle
(bad)
lahf
or
das
mov
pop
adc
mov
pop
ds
in
(bad)
adc
ret
outs
jecxz
and
sub
mov
xor
or
and
bnd
das
add
cmps
xlat
dec
popa
mov
pop
fwait
popa
cmps
sbb
out
cdq
push
outs
movs
test
outs
add
movs
into
adc
xor
xchg
shl
hlt
jne
data16
imul
(bad)
add
mov
sub
daa
adc
das
jle
jmp
jne
std
fld
mov
push
inc
mov
mov
arpl
xchg
mov
test
test
push
mov
and
jmp
enter
dec
jle
inc
jecxz
mov
(bad)
std
and
mov
adc
jnp
ret
mov
xor
dec
repnz
mov
inc
adc
into
mov
retf
or
addr16
sbb
(bad)
fadd
loop
loop
bound
bndldx
les
mov
jmp
push
stos
mov
pop
sub
mov
shl
fbld
adc
daa
push
or
rcr
jnp
fidiv
ins
(bad)
sbb
pushf
mov
dec
dec
fsub
push
xor
cld
lods
inc
mov
push
test
pop
jnp
cmc
mov
test
(bad)
xor
cld
jmp
ficom
mov
xchg
and
jge
sahf
jnp
push
dec
dec
push
dec
sub
adc
dec
mov
cli
in
mov
fadd
sub
into
iret
(bad)
jne
les
shr
add
in
je
es
enter
mov
sub
icebp
pop
pop
psubb
xchg
or
movs
test
sub
iret
dec
xor
bound
daa
adc
pop
push
mov
out
test
xor
mov
adc
xchg
mov
mov
dec
mov
and
inc
and
cmp
mov
adc
and
jbe
mov
xor
ror
repnz
scas
sbb
mov
mov
push
pusha
pop
int
repz
push
push
pop
ret
jae
icebp
sbb
sub
aam
(bad)
ror
add
iret
and
ss
dec
sub
and
aaa
xchg
(bad)
mov
cmps
xchg
pop
jp
scas
cmp
cmp
or
test
pop
jae
pop
mov
outs
shl
scas
(bad)
jbe
add
out
(bad)
jl
test
xor
xor
mov
or
mov
dec
cld
or
add
arpl
ss
sub
jae
addr16
icebp
xchg
jae
arpl
adc
cmps
fist
cmp
jecxz
xor
dec
dec
jo
adc
ret
mov
and
mov
scas
rol
fld
sbb
adc
jp
cld
or
add
das
and
das
cmp
add
mov
clc
outs
add
push
rol
ret
ins
pop
fwait
es
mov
ret
test
shr
in
iret
arpl
call
movs
out
sub
mov
clc
add
lahf
pop
nop
jno
mov
pop
dec
and
imul
adc
or
jmp
int3
inc
add
loop
mov
les
add
and
jmp
imul
mov
push
mov
cmp
pop
sbb
(bad)
mov
push
scas
popf
cmp
push
push
ja
into
mov
pop
jo
mov
jb
or
mov
adc
and
in
inc
xor
mul
add
cli
push
loope
mov
fs
shl
pusha
(bad)
adc
pop
aam
sub
fsub
stos
sub
adc
push
dec
xor
add
pusha
clc
sbb
lea
mov
pop
adc
dec
pop
mov
jnp
je
ret
mov
sub
mov
ret
add
les
pop
lods
push
shl
aad
out
fcmovbe
out
fnstcw
jl
cs
and
jne
call
(bad)
jo
out
pushf
mov
xor
imul
jno
pop
pop
mov
sbb
push
or
stos
jae
stos
pop
mov
lods
pop
mov
(bad)
jecxz
stc
lds
cmps
and
dec
repz
push
ror
jp
xchg
pop
retf
push
sub
mov
mov
iret
sub
mov
int3
mov
out
stos
inc
arpl
outs
push
dec
sub
xchg
push
jb
pop
aas
imul
pop
stc
add
mov
lock
inc
jg
add
pop
cs
movs
mov
std
test
movs
inc
stos
ins
imul
cld
inc
xor
fwait
outs
add
enter
xchg
add
add
outs
push
repnz
sbb
fcom
or
repz
or
gs
aad
ins
leave
ret
out
test
mov
out
mov
test
or
and
scas
and
movs
js
div
pop
ja
cmp
leave
push
sbb
xor
jae
out
test
add
shl
sbb
pop
or
push
pop
add
pop
cmps
(bad)
jmp
ja
sub
nop
mov
retf
movs
popf
mov
ins
imul
cmps
int
mov
pop
mov
pushf
add
outs
inc
xchg
push
les
out
aam
shr
sub
icebp
and
mov
mov
mov
jp
xchg
retf
leave
daa
jmp
cli
popf
movq
repnz
fisub
cmc
loop
and
mov
adc
mov
imul
stc
adc
cld
int3
cmp
push
scas
les
push
rcr
jg
imul
add
jns
daa
push
sbb
cwde
jno
add
pop
ror
mov
scas
sub
repnz
retf
fucomip
xchg
mov
or
movs
scas
dec
push
inc
leave
adc
inc
mov
das
xor
inc
test
sbb
popf
mov
(bad)
mov
jl
add
loop
das
sbb
inc
jbe
cmc
test
xor
lods
mov
bound
xor
mov
repnz
mov
adc
outs
push
or
je
jmp
test
jl
rcl
aad
mov
sbb
pop
pop
aas
xor
mov
cli
or
mov
adc
mov
outs
cmp
(bad)
sbb
cmp
jg
push
cli
dec
cmp
ins
pop
out
or
jo
dec
cmp
(bad)
das
hlt
in
push
cld
fs
icebp
call
lock
nop
xor
lods
fwait
arpl
pop
cdq
test
mov
sub
fisub
and
sar
jns
inc
and
sub
mov
addr16
mov
sbb
nop
sbb
repnz
jnp
xor
add
jle
ins
xor
add
add
lahf
push
setns
mov
dec
rol
mov
fiadd
enter
out
add
into
mov
push
imul
xchg
cdq
rcl
push
call
sbb
lds
mov
xor
or
movs
in
adc
xor
out
mov
daa
cdq
jb
push
mov
(bad)
mov
shl
ret
adc
push
loop
mov
dec
mov
clc
bound
jnp
addr16
xchg
and
push
mov
ret
lds
inc
in
pop
sahf
cmc
rol
mov
push
leave
mov
leave
js
jo
jp
mov
int3
sahf
stos
or
frstor
xor
xlat
into
scas
sbb
jno
mov
hlt
out
movs
pop
(bad)
out
icebp
icebp
xchg
data16
(bad)
fld
adc
jbe
inc
adc
mov
mov
fstp
xor
xor
retf
(bad)
lock
mov
sub
bt
jns
mov
jmp
pop
jmp
dec
pop
push
mov
ss
loop
inc
jl
shl
ds
pop
xor
mov
sub
fdiv
or
lods
xor
cmp
mov
aam
rol
jns
or
mov
adc
loop
mov
call
gs
add
push
ss
pop
cmp
push
xor
movs
lahf
adc
mov
add
and
mov
call
or
cwde
es
(bad)
cmps
cli
pop
xor
xchg
and
sbb
mov
xlat
add
xchg
sbb
ja
sbb
and
test
xchg
push
lods
pusha
into
sub
cmp
out
leave
cdq
clc
je
out
cmp
outs
or
pop
and
imul
cpuid
inc
push
mov
inc
jge
clc
and
lea
cwde
add
sahf
mov
mov
sti
ficomp
sub
in
pop
ret
add
ret
outs
test
iret
dec
ss
dec
inc
fist
je
push
push
mov
sbb
inc
jnp
js
adc
xor
mov
xor
and
push
xchg
mov
ror
sbb
in
mov
sbb
push
sbb
ret
pop
inc
mov
aas
sub
push
jecxz
lock
jmp
lods
sbb
outs
cmp
mov
ss
fs
jb
fdiv
movs
or
lock
iret
test
pop
jecxz
cmp
pop
cli
(bad)
in
xchg
fsub
mov
mov
cmp
and
sub
rol
jle
or
wbinvd
stos
push
(bad)
dec
cmp
ds
ja
in
retf
mov
and
test
lahf
adc
shr
push
das
ret
cmps
inc
xlat
mov
add
shr
jge
test
cld
xchg
xor
mov
hlt
adc
prefetchnta
ss
popa
out
pop
dec
scas
popa
adc
inc
and
xchg
(bad)
stos
push
cli
bnd
mov
pusha
hlt
icebp
pop
mov
mov
pop
adc
xchg
mov
les
pop
in
test
push
fdivr
std
popf
sar
pop
cwde
sbb
adc
jmp
adc
pusha
inc
sub
jl
ds
pop
and
adc
jge
sbb
and
jno
inc
nop
out
push
add
ror
jmp
dec
in
or
fdivr
test
pusha
pushf
cmp
popa
add
in
adc
xchg
fcmovnb
mov
push
push
push
js
jecxz
test
call
sar
mov
lods
dec
enter
mov
aam
repnz
fistp
jb
(bad)
push
enter
fist
adc
jmp
rcr
les
lock
outs
movs
mov
ins
sub
push
fldcw
mov
pop
push
fcom
movs
sub
push
inc
pop
test
sub
sbb
mov
inc
movs
xchg
pop
imul
xchg
rol
popf
mov
test
push
mov
jbe
and
sbb
movs
mov
jo
enter
add
cmp
inc
fistp
sbb
sbb
inc
test
xchg
test
outs
loopne
ret
clc
push
fcomp
jae
jae
xchg
and
sub
jecxz
inc
adc
and
mov
fldcw
stos
jmp
sub
cli
jg
inc
lods
rcl
xchg
retf
inc
xchg
call
cmps
pushf
rsqrtps
int3
push
test
clc
imul
mov
int3
or
or
add
lock
cwde
mov
mov
adc
or
or
pop
enter
sub
lahf
pusha
sub
dec
pop
jne
leave
inc
gs
dec
mov
retf
mov
sbb
and
pop
scas
fst
test
jle
mov
jmp
cmp
outs
scas
in
in
ret
mov
and
js
jae
cs
stos
jge
xchg
nop
stos
dec
loope
adc
test
out
sbb
adc
fisub
adc
pop
mov
and
add
or
inc
arpl
arpl
loop
push
out
pop
aad
test
fimul
daa
push
out
adc
ja
mov
mov
mov
dec
or
xor
lds
out
call
mov
cmp
mov
scas
mov
add
mov
ficomp
aam
mov
mov
in
fldenv
xchg
mov
(bad)
cmc
pop
lods
arpl
jge
int
stc
add
pop
xor
adc
mov
add
sub
mov
ret
(bad)
sbb
jle
pop
je
imul
or
into
and
sbb
ins
sahf
je
mov
pop
jo
add
scas
addr16
ret
aas
jp
leave
out
addr16
cmp
push
lea
ds
jmp
mov
sub
jp
add
fs
popa
jle
xchg
aas
sahf
gs
xor
fs
push
cmp
mov
frstor
jg
cmp
fstp
test
stos
pop
pop
lds
leave
jp
jo
dec
(bad)
ficomp
inc
mov
aad
loope
sbb
je
adc
jge
ret
pop
sbb
sar
inc
call
inc
ficomp
daa
mov
pusha
mov
inc
ficomp
jne
out
pop
scas
cwde
sar
stc
imul
sbb
aad
inc
in
cmp
(bad)
lea
push
and
and
mov
cmp
fiadd
test
xchg
jl
jmp
movs
dec
jnp
fxch
xor
stos
push
xor
aam
lock
and
aad
and
inc
cmp
and
cld
(bad)
mov
dec
push
ret
ret
(bad)
cmp
sahf
or
retf
mov
sahf
cmp
sbb
sub
aad
mov
sbb
data16
mov
dec
ficomp
lds
cmp
int
mov
xor
icebp
icebp
repz
jno
movs
out
mov
jbe
call
retf
call
in
or
cmp
fucomp
mov
add
arpl
jb
and
xchg
loopne
(bad)
enter
and
(bad)
fsubr
cli
xchg
in
cli
add
ret
scas
std
sbb
pop
add
idiv
cmps
rol
inc
aam
mov
dec
sbb
cmps
daa
sub
sub
stos
aam
loopne
mov
or
mov
lahf
sub
test
imul
push
icebp
cmp
or
mov
inc
add
mov
clc
test
fs
cmp
add
ins
cmp
cmp
imul
cmp
call
mov
fst
retf
push
dec
js
test
js
loope
and
data16
jnp
xchg
inc
ins
outs
sub
daa
push
push
je
movs
mov
popf
mov
inc
das
ret
cmp
pop
mov
jmp
cmps
or
imul
jb
jle
sub
movs
bound
jp
jmp
pop
sbb
sbb
dec
out
push
jmp
mov
jmp
and
sbb
dec
in
mov
pop
inc
ret
jp
cmp
movs
je
outs
mov
pop
sub
mov
ins
dec
outs
sbb
mov
jle
adc
or
mov
imul
in
cmp
ins
mov
push
daa
xor
cmp
add
pop
add
movs
cmp
aas
jb
dec
imul
icebp
add
inc
in
arpl
scas
and
mov
(bad)
mov
es
fsubr
retf
lahf
pop
mov
cs
add
bound
je
call
xor
icebp
out
mov
aam
add
and
sbb
sub
inc
push
jo
lock
sar
inc
(bad)
fwait
dec
sahf
mov
cld
inc
sti
pusha
push
sbb
mov
and
adc
jmp
push
cdq
stos
lods
leave
stos
sti
adc
mov
dec
fcompp
dec
stc
add
outs
mov
retf
inc
cli
xchg
sub
aad
loop
pusha
ffreep
leave
adc
jno
and
jnp
or
dec
jae
(bad)
pushf
and
mov
mov
aas
jne
mov
xor
cli
sbb
xchg
scas
and
(bad)
dec
test
pop
or
xchg
test
push
aad
add
lods
or
and
mov
neg
je
ret
mov
js
mov
sbb
jne
scas
lahf
jbe
push
inc
mov
aam
and
dec
jge
mov
(bad)
loope
dec
adc
jmp
jno
sbb
jbe
sub
scas
adc
sar
rcr
aaa
call
test
and
sar
(bad)
jl
xchg
int
push
mov
outs
repz
fstp
sub
pop
lods
push
cdq
pushf
adc
ss
mov
je
stos
add
push
xchg
jno
dec
or
xor
(bad)
mov
push
(bad)
(bad)
inc
adc
mov
daa
jmp
bound
sbb
(bad)
xchg
jnp
jle
cmc
mov
adc
fidivr
or
sub
sbb
jnp
addr16
in
sub
sti
iret
out
mov
push
push
scas
and
mov
les
mov
mov
jle
mov
shl
push
lds
je
xor
jne
mov
or
repz
add
dec
sbb
pusha
mov
aas
adc
sub
shr
push
and
jno
(bad)
xlat
or
stos
stos
xchg
pusha
lods
xchg
inc
inc
ds
jb
test
push
out
mov
aas
xor
push
aaa
xchg
mov
dec
enter
or
mov
mov
mov
lock
or
cmc
and
pop
or
loope
in
cwde
adc
movs
lock
aad
arpl
dec
pop
aad
es
mov
and
outs
iret
cmp
cwde
xchg
mov
xchg
shl
in
or
fiadd
call
jecxz
ins
(bad)
jle
push
into
adc
pop
or
cmp
xor
pop
gs
gs
push
loop
popa
dec
add
sbb
loope
adc
pushf
retf
jle
jmp
test
mov
push
cmps
pushf
pop
mov
jge
inc
inc
jle
retf
outs
add
mov
scas
cmp
add
and
xchg
cmp
push
push
(bad)
push
jno
sbb
pop
cmp
pop
dec
inc
shl
jmp
pop
in
push
jnp
dec
jb
test
ret
or
adc
or
(bad)
in
je
aam
fisttp
pop
xor
inc
fidivr
push
adc
jmp
pop
and
scas
sub
fwait
cmp
retf
mov
fsubr
mov
mov
cdq
pop
call
loop
sahf
mov
out
jb
shl
test
push
mov
xor
add
push
adc
adc
or
rol
pop
add
ins
adc
jne
adc
adc
pop
sbb
out
mov
outs
cld
mov
push
inc
jecxz
xor
test
loope
es
or
mov
jg
enter
imul
ficom
xor
(bad)
retf
push
sub
das
add
iret
fiadd
or
popf
xlat
cmp
imul
xor
inc
into
retf
jecxz
addr16
lods
pop
cwde
scas
cmp
push
repz
jle
aas
xchg
jae
and
icebp
out
mov
sub
cli
lahf
jns
lahf
push
adc
stos
jl
enter
mov
cmc
loopne
pop
cs
cld
in
mov
retf
mov
ss
or
add
mov
dec
xchg
sub
cs
ins
shl
cwde
inc
jnp
bound
mov
push
shr
cmps
pop
rcr
test
cmp
(bad)
dec
in
rcr
mov
fisubr
cmc
inc
fnstenv
daa
adc
ins
fdivr
lods
lock
xor
leave
fldenv
sbb
ss
sub
sbb
dec
in
mov
push
out
(bad)
cmp
cmp
xchg
xor
fwait
xor
cmp
stos
cmp
mov
mov
jb
push
stos
mov
push
push
fidiv
sub
cmp
xchg
pop
xchg
bound
inc
and
rcl
mov
cli
cli
fldcw
xchg
xchg
jecxz
sti
call
js
mov
call
mov
or
mov
and
dec
repnz
fisubr
arpl
aam
imul
sbb
jecxz
inc
enter
sbb
cmps
icebp
mov
inc
(bad)
or
repnz
adc
in
test
fxch
mov
xor
out
or
jb
test
out
jae
cmp
add
pop
in
mov
mov
jl
fmul
dec
outs
jmp
retf
int3
test
loop
xchg
adc
sbb
mov
sbb
iret
push
out
cmps
mov
popa
push
call
push
cli
push
gs
pop
xor
rcr
into
in
cdq
hlt
push
out
call
sbb
div
sbb
mov
pop
sub
add
mov
push
inc
jne
mov
aam
sub
int
lock
mov
in
mov
sub
adc
cmp
push
outs
cmps
js
mov
mov
dec
push
fbld
(bad)
jecxz
sbb
rol
or
xchg
mov
and
sub
or
dec
out
or
and
enter
fmul
imul
(bad)
cwde
xor
mov
aas
retf
cmps
sub
fisubr
push
dec
aas
mov
pusha
call
jge
out
mov
push
xlat
jmp
mov
and
inc
push
bound
(bad)
xchg
jl
add
std
je
ret
ja
xor
es
mov
mov
push
inc
ds
jne
adc
cld
in
mov
sbb
inc
fdiv
and
in
in
mov
jb
jge
loop
push
cld
leave
inc
rcr
scas
sti
sbb
xchg
jmp
adc
out
fcmovb
push
fbld
sub
in
push
loope
dec
cs
xor
push
fsub
ja
test
push
call
xor
jb
mov
sbb
(bad)
push
mov
mov
inc
jno
mov
xchg
fimul
pop
pop
sub
int
or
adc
sbb
xor
nop
fwait
push
cmp
das
ja
call
daa
mov
jno
dec
cs
cmc
mov
shr
sub
sbb
mov
dec
and
mov
aam
rcr
jp
imul
fld
test
mov
aad
lods
dec
idiv
mov
loope
repz
movs
dec
xchg
shl
add
cmp
inc
push
sub
dec
pop
lahf
cmc
mov
in
into
xlat
xchg
retf
mov
add
sub
xchg
ror
push
cmp
adc
push
fidivr
mov
xchg
push
sub
xlat
jb
fist
stos
mov
and
mov
xor
cmps
sub
or
pop
mov
and
jg
xchg
push
jb
sub
xchg
loop
ins
sub
inc
cmp
enter
repnz
jo
mov
outs
gs
outs
(bad)
mov
loopne
in
or
pop
sub
cdq
js
iret
or
sbb
gs
scas
mov
out
inc
(bad)
fwait
xor
rcr
les
shl
lahf
xchg
adc
xor
adc
and
xor
outs
mov
ret
std
push
scas
xor
aad
lds
je
fwait
jp
mov
shr
cmc
loope
pop
sub
retf
jmp
mov
sbb
inc
jmp
sbb
pop
ror
aaa
fwait
clc
adc
movs
ins
fadd
stos
cmp
fisttp
and
out
dec
mov
mov
sub
push
nop
xchg
xor
jno
adc
and
sub
pop
adc
imul
cld
arpl
or
mov
add
adc
push
dec
scas
sbb
in
ds
das
xchg
xlat
(bad)
jnp
nop
loope
pusha
sti
push
in
hlt
pop
lsl
lods
mov
cmp
push
jo
shl
adc
dec
nop
push
adc
sbb
push
fist
loope
pop
jmp
sbb
push
jmp
imul
and
mov
mov
xchg
iret
inc
xor
daa
enter
dec
push
xor
(bad)
mov
push
sbb
out
cmps
add
gs
xor
cs
out
sbb
jnp
call
mov
and
push
imul
mov
movs
test
fidiv
in
xchg
int
movs
cmp
(bad)
xchg
cdq
rol
mov
out
pop
in
inc
sbb
das
cmp
js
and
call
add
js
aaa
stc
inc
scas
rol
pop
out
fbstp
movs
repnz
jne
sahf
push
test
xor
xchg
cmp
in
imul
mov
inc
xchg
loope
sub
sbb
out
test
xchg
lods
jns
push
cmps
rcl
movs
add
test
in
fisub
popa
out
ja
add
test
cmp
in
push
out
ret
mov
sahf
dec
sub
pop
sti
imul
lea
xlat
mov
mov
test
mov
pushf
cmp
mov
mov
inc
sti
jmp
pop
out
mov
push
gs
sub
pusha
rcl
xchg
jb
dec
pop
jmp
in
sub
push
out
and
lahf
test
mov
ds
imul
jnp
mov
shr
leave
xor
jno
stc
pop
adc
pop
sub
fwait
xor
imul
ret
icebp
dec
shl
je
inc
(bad)
dec
ret
aaa
ds
cmp
dec
inc
bound
sub
jns
out
mov
xchg
jns
jno
or
cmps
aas
mov
shr
imul
cmp
dec
pop
xchg
pop
sahf
xchg
js
(bad)
jp
sbb
lods
iret
adc
aam
outs
movs
leave
sub
sub
adc
ret
pop
xor
movs
repnz
xchg
bound
loope
fidiv
sbb
mov
or
cli
xchg
xor
pop
pop
jae
ja
fldenv
sbb
xchg
mov
dec
in
xchg
inc
cld
or
or
push
loop
cmps
mov
dec
dec
inc
cmp
enter
(bad)
mov
push
shl
push
mov
pop
fs
dec
jnp
pop
outs
xchg
cmp
mov
into
int
test
data16
adc
adc
cwde
mov
push
mov
ds
adc
xchg
stc
mov
sub
or
out
ss
xlat
test
and
jo
shl
lods
jns
mov
xchg
cli
aas
mov
mov
pop
ins
movs
(bad)
cmp
mov
dec
or
or
call
in
cli
mov
je
push
or
shl
jns
dec
sti
push
inc
or
and
aaa
loop
shl
idiv
aas
shr
jns
pop
pop
std
in
add
(bad)
scas
stos
repz
cmc
ret
nop
or
jg
xchg
and
sub
pusha
gs
shl
arpl
lock
adc
out
cmp
cmp
cld
scas
jb
add
inc
sbb
(bad)
scas
test
cwde
stos
push
aaa
lock
sub
not
sub
popa
jnp
bound
push
in
dec
xchg
sbb
ins
lods
idiv
inc
jbe
cdq
scas
pop
aam
mov
pusha
repnz
call
repz
fadd
and
fldcw
pop
inc
sti
adc
imul
neg
test
mov
mov
gs
popa
out
lea
fld
sbb
xor
sub
jp
test
icebp
adc
mov
iret
pushf
add
mov
push
xlat
push
and
enter
in
pushf
test
pop
sub
cmps
mov
dec
sar
sbb
xchg
mov
pusha
out
in
movs
int
icebp
add
jbe
push
xor
imul
sahf
and
pop
or
fcomp
les
mov
push
inc
lods
or
sub
cdq
cmp
xchg
add
xor
or
jl
movs
push
jl
adc
cmps
lea
jb
pop
aaa
cmp
cmps
xbegin
popf
clc
add
iret
outs
add
inc
and
cmp
in
out
mov
push
sbb
outs
outs
mov
(bad)
sub
dec
(bad)
xor
mov
sbb
pop
push
call
cmps
mov
pusha
inc
xor
int3
enter
fisubr
pushf
cmp
mov
in
sahf
and
and
mov
test
xchg
inc
cmp
js
and
out
jo
neg
sub
fidivr
mov
ja
in
mov
cmp
adc
ins
enter
sti
xchg
add
jo
cwde
dec
fld
ret
and
jno
xchg
mov
nop
or
or
ret
mov
int
pop
idiv
sahf
xor
cmps
in
push
test
xchg
pop
xchg
mov
fdivr
imul
mov
popf
xchg
inc
mov
and
xchg
push
outs
(bad)
lahf
ja
nop
es
aaa
dec
(bad)
ds
dec
or
in
adc
test
aad
fadd
ins
and
cld
cmps
popa
jbe
xchg
sbb
push
xchg
sbb
fsub
jae
sub
cdq
cli
dec
sahf
repz
pusha
icebp
xlat
jne
nop
inc
ins
pop
xchg
adc
xor
loopne
and
push
push
mov
xor
fnstenv
cmp
and
push
test
xchg
add
ins
push
mov
inc
cmp
int3
imul
outs
cmps
pushf
ins
fwait
repnz
or
push
fcom
adc
iret
gs
lock
js
leave
and
data16
loop
and
enter
ret
xor
jmp
jb
pop
sub
and
or
pop
gs
sub
mov
stos
cmp
into
retf
(bad)
test
hlt
and
jp
loope
fsub
jg
and
mov
push
rcr
fwait
idiv
cmp
mov
int
xchg
add
lods
mov
and
test
fisttp
ret
imul
fs
and
out
xchg
pop
mov
inc
lahf
and
cld
ret
xor
inc
div
mov
orps
xlat
nop
adc
enter
enter
hlt
jo
mov
inc
jmp
jno
iret
ja
je
push
das
cmp
inc
xchg
cld
ficomp
jbe
loop
outs
addr16
test
cmc
xor
ret
xor
ret
inc
inc
inc
int
scas
int3
push
xchg
push
cld
sbb
pop
js
and
dec
mov
movs
out
mov
in
xchg
retf
cwde
push
movs
xor
dec
adc
mov
mov
movs
mov
push
(bad)
pop
pop
hlt
ins
in
inc
gs
xchg
pushf
adc
call
sbb
add
inc
xchg
pop
stos
lea
jge
bound
jge
mov
aad
pop
push
int
add
leave
dec
mov
aam
dec
jmp
lods
rcl
dec
sub
mov
dec
call
add
xor
jb
xchg
sub
xchg
jmp
dec
sbb
push
or
retf
inc
inc
stos
leave
ret
add
mov
xchg
fdiv
or
iret
ja
shl
sub
inc
cmp
and
jmp
clc
pop
test
icebp
add
mov
mov
mov
add
outs
pop
cmc
test
imul
add
sbb
mov
mov
inc
fs
inc
adc
test
and
or
sub
push
push
xchg
in
push
inc
movs
jnp
mov
fsubr
xchg
ins
aas
call
lods
les
in
cmp
cmp
aad
std
push
movs
sub
and
outs
ds
cmp
inc
mov
bnd
adc
mov
sbb
repz
aam
in
add
dec
enter
pop
outs
jmp
sar
jmp
fisttp
pop
mov
popa
lods
(bad)
xor
adc
das
jge
loop
hlt
fisubr
xor
pop
clc
int
xchg
mov
mov
jl
mov
sbb
(bad)
mov
scas
out
dec
sbb
pop
or
dec
nop
cdq
jb
push
pop
add
push
pushf
loopne
jecxz
ins
pop
or
fldenv
ret
out
ds
cwde
mov
add
cmp
add
push
stc
sbb
or
sbb
mov
pop
js
js
cmp
xchg
mov
xlat
sbb
icebp
popf
sti
enter
mov
xlat
ins
xlat
not
in
add
ss
jg
stos
aam
and
popf
pop
cmp
pop
and
push
jmp
add
jmp
adc
cmp
and
dec
(bad)
popa
inc
jp
sub
cld
lods
push
cs
pushf
add
jg
aaa
cmp
in
fild
cmp
sbb
in
mov
inc
ins
dec
jne
adc
dec
aad
in
(bad)
cld
jmp
mov
jge
scas
sub
cmps
cmc
jmp
sub
fwait
jmp
jae
mov
ret
xchg
dec
jnp
pop
fld
rcr
adc
mov
cli
xchg
adc
inc
mov
mov
repnz
shl
mov
stc
mov
mov
add
and
ret
fwait
xchg
retf
mov
nop
fs
test
or
add
pop
and
(bad)
leave
mov
not
inc
(bad)
aad
adc
stc
pop
sbb
sub
clc
jo
adc
adc
mov
jl
neg
add
mov
scas
add
sbb
xchg
ja
and
add
scas
jg
scas
pushf
shl
loopne
jo
js
xor
std
jmp
xchg
lock
shl
adc
clc
data16
test
outs
add
sbb
xchg
mov
(bad)
dec
and
rcr
sub
call
mov
test
inc
xchg
fcmovnbe
aas
cli
and
js
in
frndint
aam
pusha
(bad)
lods
cmp
or
lods
and
mov
fadd
add
or
add
push
inc
inc
imul
cmps
jle
pop
or
(bad)
in
dec
cmps
push
and
sub
mov
cmp
pushf
imul
inc
fiadd
pop
or
push
or
push
inc
and
pop
push
jmp
jg
jno
rcl
xchg
add
sub
mov
movs
push
stos
sub
xor
inc
mov
repz
fs
movs
push
cmp
push
mov
mov
or
loop
loope
mov
pop
movs
addr16
leave
lock
push
jl
(bad)
mov
push
sub
aad
jmp
pop
shl
fwait
xchg
repz
sbb
xor
js
xor
jnp
inc
add
cli
(bad)
(bad)
icebp
scas
lods
xchg
or
stos
jbe
mov
fld
adc
sub
sub
(bad)
scas
aaa
cmc
add
ror
or
push
popa
jmp
jecxz
movs
xchg
ins
push
mov
or
aas
mov
icebp
dec
je
popf
ins
vpackssdw
cmp
ins
dec
jl
in
in
test
mov
xor
xchg
push
dec
in
pop
mov
adc
fiadd
sbb
cmp
ins
rol
push
jmp
cli
ret
rcr
arpl
das
jbe
ss
loope
mov
fs
loopne
add
mov
or
fcmovnbe
and
outs
leave
lods
mov
jg
or
xchg
pop
nop
mov
cld
or
movs
stc
jne
outs
push
add
mov
mov
adc
stc
sub
xor
cmc
cmp
fild
sbb
out
mov
mov
mov
ins
mov
mov
sub
ds
adc
pop
xchg
cli
mov
mul
mov
sbb
mov
dec
or
xlat
repz
arpl
add
movs
inc
test
pop
jb
stos
mov
cs
sbb
xlat
mov
movs
outs
xor
imul
or
mov
cli
pop
ficomp
std
add
or
scas
jno
mov
jbe
and
mov
xor
popa
push
shl
jnp
sub
pop
ss
iret
pop
fldenv
sbb
dec
cmp
std
in
add
adc
jbe
cmp
retf
xchg
fadd
mov
enter
in
pop
aad
jb
in
mov
sbb
xor
sbb
out
mov
loopne
pop
(bad)
mov
push
dec
movs
movs
test
mov
scas
ja
aas
scas
mov
icebp
in
mov
fsub
cs
js
adc
push
pushf
daa
loope
jno
cmp
pop
outs
push
mov
shl
pop
call
sti
mov
rol
pop
sti
jno
mov
mov
loopne
in
mov
cmps
nop
mov
sti
repnz
fisttp
push
ja
lahf
shl
xchg
call
fsubr
and
comiss
dec
das
shl
dec
sub
ficomp
fcmovb
mov
adc
push
pop
add
sbb
ficomp
test
push
fisttp
xchg
jecxz
ins
jle
pop
dec
mov
xchg
jmp
popf
das
lods
std
hlt
mov
daa
inc
test
or
mov
push
scas
and
and
sbb
dec
leave
out
xchg
xchg
pop
aad
mov
aas
sti
leave
cmp
out
fcomp
jmp
jns
sub
ror
pop
jno
adc
ret
out
xchg
jno
sar
jb
cmp
mov
(bad)
xchg
or
std
sub
mov
in
ror
fwait
pop
mov
jmp
jmp
js
pop
fist
xor
xor
add
sbb
test
pusha
ror
stos
xchg
pop
sbb
pop
sub
jbe
jp
retf
pop
fwait
pop
sub
ret
lds
mov
lahf
stos
fs
stos
aaa
and
fs
mov
in
push
(bad)
lock
mov
cwde
imul
rol
(bad)
mov
out
mov
xor
idiv
adc
fs
aad
xlat
or
outs
dec
pop
or
or
out
xor
pop
sub
push
or
push
popf
lea
xor
cmp
xor
cmp
sar
dec
retf
iret
movs
ret
add
aad
xchg
gs
test
adc
mov
jne
xor
clc
jl
sub
test
cld
lahf
pop
das
lods
pop
xchg
repnz
jo
push
popa
and
dec
sub
push
punpckhwd
mov
imul
aad
mov
mov
leave
and
sub
fstp
les
fwait
stc
fild
data16
test
mov
call
mov
stos
mov
loop
rcl
mov
sbb
dec
mov
out
adc
jno
pop
ret
pop
(bad)
push
scas
or
repz
loopne
sub
shl
imul
jecxz
sbb
sub
js
xchg
fnstcw
cs
push
sbb
and
inc
outs
test
mov
ins
movs
addr16
hlt
push
jne
push
dec
jnp
inc
(bad)
jno
push
add
or
call
aad
gs
dec
(bad)
jno
push
fisubr
or
pop
das
popf
push
movs
cld
ins
and
ja
nop
xchg
pop
or
mov
sbb
and
outs
adc
or
cwde
mov
sti
push
sbb
push
loope
(bad)
div
bswap
fld
out
adc
mov
mov
in
jmp
pop
test
jg
cwde
add
push
jp
sbb
xchg
dec
mov
dec
mov
mov
sahf
scas
popa
adc
fstp
ja
mov
loope
lods
sub
adc
outs
cmp
mov
sub
(bad)
mov
sbb
sbb
cwde
pop
push
shl
xchg
cld
mul
push
ror
loop
mov
rcl
adc
inc
ret
or
icebp
in
fbstp
call
mov
in
aad
aam
mov
inc
xlat
bound
(bad)
cmc
adc
je
xchg
push
jl
add
push
cs
jmp
sbb
(bad)
cvtpi2ps
sub
mov
or
jno
stos
pop
xor
sub
daa
fs
test
clc
dec
mov
or
push
icebp
and
out
ins
xchg
data16
retf
in
sub
xchg
push
add
cmp
into
mov
movntq
sahf
push
mov
sub
mov
jno
sar
cmp
jb
sub
movs
out
add
dec
add
movs
sahf
xor
jl
jnp
cmps
and
xchg
aaa
jg
cmp
mov
addr16
sub
push
(bad)
sbb
sbb
fdivr
and
sar
xchg
or
mov
or
fnstenv
repnz
xor
push
push
bts
sbb
(bad)
repnz
or
adc
sub
cmp
pop
push
mov
mov
fisubr
mov
xlat
retf
jg
jae
sti
cmp
call
imul
test
mov
hlt
lahf
call
adc
repnz
icebp
cld
mov
add
lods
cld
fwait
test
mov
inc
mul
pop
xchg
pop
jno
pop
call
mov
mov
call
mov
cmp
mov
shr
push
xor
mov
cmps
cmp
sbb
nop
push
sbb
ins
enter
std
not
ds
(bad)
pop
lea
inc
(bad)
pop
inc
adc
fcom
cmp
cmc
inc
fstp
mov
mov
mov
data16
in
aad
jg
fwait
mov
and
adc
add
dec
clc
mov
clc
add
out
out
out
imul
add
icebp
cmp
push
and
push
cmp
inc
mov
jno
sbb
enter
call
mov
(bad)
mov
dec
test
idiv
fidiv
fdivr
cld
std
aas
push
popa
cmc
or
into
jnp
dec
pusha
push
push
sbb
test
movs
mov
or
sub
sub
dec
xor
xchg
mov
cmc
dec
pop
dec
ja
sub
pop
cmp
mov
dec
add
outs
icebp
jge
sbb
test
jae
mov
mov
push
xor
cdq
cmp
jnp
mov
push
out
stos
arpl
adc
out
icebp
add
movs
loop
and
(bad)
mov
mov
ficomp
jb
mov
sub
xchg
mov
and
inc
mov
rcl
imul
mov
inc
sahf
(bad)
out
xchg
pop
or
test
ins
cmp
sub
enter
fld
adc
inc
fwait
push
xor
inc
and
push
mov
and
not
xchg
cmp
adc
and
sbb
xor
and
jb
add
movs
cmps
pop
xor
adc
mov
and
add
pop
mov
(bad)
jns
xchg
push
sub
loop
adc
cmps
mov
sub
cmps
xlat
xchg
rol
nop
int3
sbb
push
dec
loopne
pusha
adc
scas
mov
movs
ss
mov
push
in
adc
inc
aam
js
cmc
(bad)
hlt
or
leave
daa
popa
mov
inc
fisubr
mov
and
pop
movs
scas
(bad)
xlat
pop
mov
idiv
ins
enter
aam
cmp
xor
jmp
arpl
gs
das
jmp
out
jns
xor
xchg
dec
mov
fdiv
loopne
add
pushf
push
inc
ins
rcl
jns
jp
inc
cld
push
(bad)
aaa
xor
jmp
scas
inc
mov
bound
inc
jo
cmp
loop
dec
cwde
jl
lods
sub
(bad)
repnz
fcompp
aas
cmp
fnstcw
mov
aaa
push
mov
stc
lds
and
ins
loope
(bad)
mov
in
mov
adc
mov
and
aas
pop
add
mov
xchg
iret
cld
xchg
iret
mov
jp
pop
fild
aad
xchg
adc
dec
cmc
ss
pop
cmp
jne
mov
push
inc
fcmovbe
jge
loope
sub
outs
add
xchg
jno
inc
sar
mov
jge
mov
call
dec
adc
pop
cmps
sub
pop
xor
pop
mov
test
jle
and
inc
xchg
xor
(bad)
mov
test
jge
xor
cmp
xchg
mov
mov
scas
(bad)
imul
les
jnp
sbb
outs
(bad)
mov
push
aad
popf
and
push
ja
repnz
jbe
mov
or
pop
shl
js
dec
loop
pushf
(bad)
gs
xor
shl
clc
mov
jne
xlat
dec
popa
xor
std
push
mov
xor
adc
jl
mov
adc
lds
fild
inc
push
sub
mov
cmps
retf
xor
ss
pop
add
xor
mov
jmp
in
and
shl
sub
xor
mov
and
jle
das
mov
mov
inc
pop
mov
imul
and
in
fld
retf
or
stc
dec
add
(bad)
in
ror
imul
jnp
adc
pop
push
mov
adc
js
cwde
outs
retf
les
les
sub
mov
sar
and
(bad)
fldenv
cmps
call
inc
icebp
xchg
clc
mov
mov
jbe
and
mov
das
repnz
mov
stos
daa
cmp
push
push
jnp
cdq
push
and
mov
sbb
cmps
add
lea
mov
dec
test
es
test
aas
aaa
jne
loopne
push
pop
adc
sahf
leave
gs
dec
or
push
fsub
fcmovbe
fsubr
lds
mov
shl
retf
aaa
repnz
xchg
dec
push
lock
xor
mov
jecxz
shl
(bad)
fcom
dec
adc
stos
in
xchg
mov
dec
int3
fst
aaa
jbe
mov
dec
sub
fdivr
into
fs
pop
mov
jb
stos
jle
jns
stos
xor
stc
sbb
xchg
jae
cli
repz
and
sbb
cmp
mov
imul
lock
and
mov
push
jns
int3
ins
ret
pop
xchg
jmp
data16
cmps
test
lods
cmps
sar
out
mov
jl
out
push
into
xor
add
adc
cmp
xor
enter
call
cwde
ds
mov
lods
pop
in
pop
xor
sub
or
(bad)
daa
or
add
int3
xchg
stos
rcl
(bad)
movs
lahf
mov
mov
jo
daa
mov
in
(bad)
mov
(bad)
loope
cmps
mov
loopne
ss
jl
or
cmp
mov
inc
(bad)
mov
and
cmp
mov
ds
dec
neg
pop
div
dec
iret
scas
jmp
push
imul
fs
cwde
jle
dec
xor
jp
arpl
cmp
mov
dec
in
jmp
retf
adc
(bad)
jmp
and
pop
pop
in
mov
inc
push
fild
imul
sbb
mov
mov
dec
mov
push
(bad)
xchg
add
adc
popa
mov
mov
out
ror
sti
outs
jb
inc
ins
scas
(bad)
pop
mov
sub
(bad)
scas
(bad)
push
sbb
mov
mov
pushf
mov
out
and
lock
lock
sahf
mov
aas
mov
fild
rcl
add
out
sub
adc
ins
fldcw
bound
mov
push
push
push
mov
inc
lds
fdivr
cmp
icebp
or
pushf
jne
push
adc
nop
mov
(bad)
cwde
dec
sti
cmp
(bad)
pop
sbb
div
xchg
stos
jg
sar
aaa
lea
jb
retf
fdiv
pop
shl
retf
inc
pushf
dec
adc
jo
add
mov
push
sub
je
cdq
add
or
push
lds
inc
xor
cld
push
leave
mov
or
push
xor
xor
mov
rcr
sbb
jb
fld
icebp
cli
jae
jle
jae
inc
inc
adc
fnstcw
arpl
and
mov
int3
sti
in
cmp
rol
stos
adc
jecxz
mov
icebp
adc
lods
jb
stos
arpl
test
push
mov
cmp
dec
(bad)
nop
retf
scas
sub
cdq
or
ds
cmp
retf
mov
add
shl
sbb
lods
rol
mov
add
in
pop
ret
add
sub
movs
sub
and
mov
in
movs
das
leave
or
clc
cld
sbb
test
stos
jge
arpl
mov
unpcklps
fcom
sahf
(bad)
loop
sub
out
mov
mov
xchg
lahf
cmp
ja
call
rcl
clc
sbb
pop
pop
in
loope
xchg
push
mov
fs
inc
pop
(bad)
cmp
and
pop
mov
cmp
sar
or
ins
call
mov
xchg
in
sub
pop
mov
mov
cld
sub
ins
and
sbb
(bad)
cmp
mov
stc
mov
cs
dec
outs
jl
dec
sti
jns
push
xlat
sbb
inc
xchg
sbb
or
imul
or
xlat
in
mov
lods
ja
je
sbb
int3
xchg
mov
aad
add
and
call
pop
sahf
div
inc
in
and
and
cmp
mov
mov
dec
sub
outs
retf
(bad)
dec
je
in
lahf
or
data16
ret
xor
(bad)
mov
data16
mov
stos
jbe
or
xchg
jge
cmp
inc
cs
scas
hlt
mov
mov
add
mov
mov
stos
jno
aas
mov
sub
mov
sub
jle
push
mov
cmp
add
xchg
mov
pop
stos
cmp
fistp
jl
sbb
and
jp
sub
jl
xor
adc
(bad)
fmulp
ret
icebp
jmp
jp
inc
xchg
or
jbe
pushf
add
mov
imul
xchg
lods
in
(bad)
les
lods
loop
mov
jecxz
(bad)
and
or
fwait
and
jmp
jecxz
in
xor
adc
int3
call
les
mov
mov
jo
(bad)
dec
push
adc
aaa
loopne
loop
xchg
(bad)
xchg
inc
fsubr
jno
popa
movs
sub
lock
mov
cs
loope
mov
dec
mov
dec
test
mov
iret
mov
jnp
push
xchg
sub
mov
lock
sbb
cmc
jl
mov
xchg
add
addr16
sahf
bound
stos
or
leave
mov
cld
das
mov
dec
lds
and
out
dec
jmp
mov
xchg
mov
jne
push
iret
inc
cmps
mov
sub
retf
cmps
inc
dec
pop
mov
pop
or
pcmpeqb
ins
jne
pop
mov
sub
adc
shr
test
mov
aam
scas
frstor
jg
xor
jmp
sub
sbb
mov
jmp
adc
mov
cmp
out
mov
leave
mov
lds
scas
scas
shl
repz
sar
gs
sbb
add
arpl
mov
dec
pop
xor
jp
fiadd
pop
lahf
xchg
xchg
xchg
add
xchg
int3
mov
add
jo
and
jb
mov
fs
and
mov
jg
sub
leave
inc
dec
jnp
mov
ins
sub
pop
lods
inc
std
add
cmp
lahf
xchg
adc
mov
add
outs
popa
and
aaa
fs
je
sub
or
lock
ret
sub
jb
mov
mov
int3
jae
jle
pinsrw
aaa
in
and
pop
iret
mov
cmp
add
movs
push
sub
pop
adc
xor
aad
daa
sub
(bad)
cmp
or
push
xchg
out
or
mov
or
in
jbe
cmp
inc
into
inc
cmp
or
mov
or
xchg
jbe
sbb
push
rcl
jb
cmp
xor
popa
int
inc
sub
popa
dec
jbe
retf
or
stos
(bad)
dec
adc
lea
(bad)
push
cmp
fistp
push
shl
mov
mov
xor
(bad)
push
pushf
mov
leave
into
aas
adc
movs
addr16
(bad)
fwait
fs
aad
jbe
push
xlat
adc
cwde
cli
jl
and
pop
pushf
mov
inc
sbb
lahf
(bad)
in
(bad)
jmp
je
(bad)
(bad)
stc
lods
xlat
add
addr16
ret
es
je
add
popa
push
push
test
and
push
ret
nop
shl
jl
cmp
popa
stos
xor
push
adc
(bad)
(bad)
xchg
cmp
sbb
scas
fisubr
test
imul
xlat
mov
sub
jbe
lea
out
int
push
add
dec
mov
mov
mov
std
popf
dec
pop
ja
pop
fst
cmc
sub
sub
jo
jge
js
pop
xchg
pop
out
enter
mov
sbb
dec
ret
push
aam
jbe
push
adc
loope
fisubr
nop
cwde
jne
rcr
xchg
pushf
fld
add
sbb
stc
sub
adc
mov
inc
pop
ins
jg
stc
sti
out
sbb
xchg
xchg
fstp
fiadd
push
dec
pop
jnp
cmp
adc
cmp
ss
pusha
mov
xchg
or
in
arpl
imul
js
or
int3
and
xor
adc
enter
arpl
test
test
dec
adc
loopne
imul
mov
push
sub
lea
xlat
and
sahf
loop
mov
pop
push
pop
add
pop
push
inc
sbb
jp
xor
jns
or
mov
cli
jl
sub
inc
xor
test
imul
sub
imul
sbb
xchg
fimul
cs
cmp
mov
ret
movs
mov
add
mov
gs
push
push
rcl
sbb
mov
icebp
pop
mov
loopne
inc
push
xchg
jmp
shl
sti
ret
mov
lahf
add
lods
aaa
iret
jbe
adc
jbe
dec
xor
cs
clc
mov
pop
outs
xchg
adc
scas
mov
sub
arpl
mov
and
jecxz
sub
mov
push
sbb
push
leave
cmp
push
mov
mov
out
test
es
movs
sub
addr16
ins
mov
jne
cld
or
mov
call
pop
sbb
jmp
xchg
adc
push
shr
xchg
fmul
pop
xchg
mov
ds
es
jmp
inc
repz
jbe
retf
(bad)
clc
push
(bad)
dec
lods
(bad)
aad
test
in
outs
inc
dec
rcl
push
shl
cwde
push
jle
jo
std
and
dec
fwait
inc
xchg
(bad)
js
retf
mov
pop
mov
and
add
mov
jp
test
fpatan
fstp
cmps
dec
rcr
jb
cmp
cmp
sub
xchg
int3
out
mov
ins
cwde
aam
fidiv
push
ins
inc
inc
(bad)
retf
push
cmps
adc
and
mov
mov
cmp
mov
adc
add
sub
out
aas
out
jg
jnp
mov
pusha
and
sub
sahf
repnz
jno
fwait
movs
pop
and
shl
lock
mov
mul
das
inc
or
mov
dec
int3
cwde
out
repnz
cmp
stc
lock
xchg
jnp
cmp
popf
jg
sub
mov
dec
push
(bad)
test
xor
sub
mov
(bad)
pop
shl
outs
dec
imul
or
ret
sub
mov
cmc
nop
imul
fdiv
pop
repz
dec
js
sub
mov
xchg
test
icebp
mov
cs
cld
add
xchg
scas
stos
mov
inc
cwde
shl
mov
aam
push
xchg
pop
push
cmp
fwait
ja
push
aad
jbe
movs
inc
(bad)
mov
sub
mov
xchg
xchg
adc
shl
mov
mov
loope
push
mov
cmp
cmc
xchg
or
mov
mov
shl
ret
add
pop
xchg
in
idiv
ficomp
loopne
in
jle
aas
pop
(bad)
sbb
rcl
fwait
jmp
sbb
sahf
pusha
pop
std
xchg
or
jmp
lea
and
wbinvd
pop
test
and
jae
jae
out
mov
lahf
mov
cmp
or
popf
add
dec
cmp
rcr
pop
mov
imul
mov
cmp
inc
leave
(bad)
in
sar
add
xor
fbstp
mov
ja
(bad)
gs
push
out
(bad)
das
aas
and
pop
pop
pop
mov
push
fimul
push
and
cmp
sub
jae
and
sub
sub
retf
pusha
sbb
mov
mov
fistp
mov
dec
loop
pop
adc
ja
fisttp
or
pop
je
fiadd
or
mov
inc
cmp
xlat
adc
jnp
pop
pop
nop
fcomp
mov
and
mov
add
sbb
mov
repnz
fsubr
and
aas
fwait
jmp
xor
js
je
(bad)
mov
mov
mov
clc
mov
idiv
mov
and
xchg
mov
js
xor
push
out
fidiv
and
jne
jnp
add
fwait
stc
popa
ret
(bad)
clc
in
sbb
mov
cwde
pop
cmp
cli
lock
rol
into
xchg
std
fadd
outs
outs
add
push
pop
xchg
rol
shl
sahf
lods
xchg
sbb
xchg
loopne
dec
dec
jns
sahf
pushf
dec
nop
std
sbb
sar
and
loop
imul
mov
repnz
jecxz
rep
(bad)
push
aad
pop
or
xor
or
fs
test
cmps
repz
lea
clc
pop
inc
rcr
test
int3
sub
mov
or
adc
add
dec
jmp
ds
in
loop
pop
or
inc
and
xchg
and
xor
push
inc
mov
inc
or
ror
or
nop
cmc
fisttp
dec
xchg
retf
ror
shl
inc
sub
pop
cmp
cmps
jp
sub
int3
aad
cdq
push
cmps
and
dec
loopne
out
lods
popa
cmp
ss
sub
mov
pop
adc
xor
xchg
fcomp
push
ins
mov
jb
stos
or
and
inc
pop
xor
add
pop
adc
sahf
push
inc
sub
ins
fs
mov
push
mov
and
mov
int3
jecxz
adc
mov
test
inc
lods
outs
push
xor
icebp
js
dec
jae
fnop
adc
sar
scas
(bad)
test
inc
fcmovu
loope
xchg
mov
mov
cmps
pop
adc
popa
sti
inc
xchg
jmp
sbb
mov
and
add
push
stos
dec
in
cdq
add
shl
jl
sbb
sub
mov
(bad)
lea
jo
cs
leave
(bad)
mov
pop
dec
jne
adc
shr
cmps
repnz
cmps
xchg
dec
rol
and
call
cmp
jo
retf
and
adc
adc
mov
jo
add
mov
in
cs
aaa
fcomp
cmp
fxam
push
add
xor
dec
adc
out
leave
jns
lods
and
jb
iret
sti
or
hlt
cld
loop
or
fcom
out
ins
push
outs
pop
adc
ja
cmp
test
ins
(bad)
mov
pop
pushf
pop
or
repz
sahf
mov
sbb
mov
into
retf
cmps
xor
in
sub
push
mov
mov
or
pop
in
pop
xchg
js
adc
nop
imul
cld
jns
test
sbb
sbb
fistp
cmp
xchg
ss
fisub
mov
idiv
int3
stos
leave
out
(bad)
lods
xor
and
scas
mov
inc
pushf
out
lock
ja
mov
daa
outs
repz
sbb
ins
jbe
movs
fisttp
pop
rol
add
imul
mov
bound
adc
sbb
jmp
into
icebp
pop
inc
shl
adc
pop
push
out
mov
enter
dec
adc
and
fdiv
jne
jnp
push
pop
pushf
fs
mov
cmp
and
mov
js
cmp
cmp
or
xor
in
cmp
sbb
jns
add
cmp
nop
ficom
imul
pop
cdq
xchg
stos
push
lds
mov
scas
mov
inc
inc
into
cli
inc
cmp
loope
outs
fdivr
and
je
inc
adc
mov
adc
or
jb
test
push
hlt
inc
shr
cli
or
xchg
cmp
(bad)
leave
fcmovnb
retf
pop
jns
add
nop
fnstcw
icebp
std
gs
or
fwait
mov
xchg
xchg
(bad)
popf
mov
cli
pushf
sub
into
cmp
sbb
mov
or
loope
repz
je
xor
pop
test
adc
out
push
xchg
push
xor
or
pusha
stos
test
lds
cmps
add
cmc
sbb
daa
cld
cmc
fadd
fwait
shl
dec
das
jno
inc
pop
mul
es
ds
and
sbb
inc
jg
repz
jmp
cmp
(bad)
pop
out
sbb
iret
dec
gs
jne
fmul
cmps
jo
(bad)
mov
(bad)
jns
iret
mov
icebp
add
xor
pop
out
inc
mov
dec
mov
fwait
or
stos
pop
cwde
rol
fild
stc
mov
out
iret
inc
imul
bound
aad
jno
jl
xor
jno
cmps
in
jbe
imul
shl
loope
xchg
scas
pop
xchg
add
mov
movs
sub
repz
popa
cmp
dec
stos
sbb
sbb
enter
das
xor
je
outs
xchg
sub
mov
leave
xchg
xchg
or
xor
adc
adc
push
in
add
dec
add
out
xlat
xchg
xchg
push
pop
cmp
ds
or
stos
or
cmps
xchg
movs
add
int
jo
aad
(bad)
jmp
xlat
fstp
mov
test
push
dec
inc
xchg
xchg
cmp
into
xchg
psllq
add
xchg
sub
pop
dec
int
push
adc
nop
push
xchg
push
fadd
aam
or
(bad)
pop
push
mov
adc
jbe
cmp
xlat
xchg
sbb
icebp
inc
mov
mov
push
fistp
jge
pop
movs
push
pop
jb
xor
les
ins
sar
mov
pop
pusha
fidivr
cmps
dec
test
inc
xor
mov
movs
pop
mov
ins
cmp
cmps
fcom
inc
cmps
sub
xchg
lahf
add
jmp
adc
sbb
imul
or
mov
dec
test
or
adc
jecxz
adc
push
adc
ret
data16
mov
adc
xchg
push
mov
test
fcomip
cmc
mov
ins
loop
or
dec
ficom
jo
sbb
xchg
xor
out
icebp
cmp
mov
je
sub
repz
loopne
call
fisttp
(bad)
ss
movs
int
adc
push
mov
xlat
loope
jae
mov
ror
daa
ja
mov
ss
and
rcr
imul
in
or
sti
xor
(bad)
mov
iret
movs
xor
add
stos
mov
xor
inc
outs
jae
jne
neg
mov
popf
adc
cmps
sbb
add
frstor
sub
fild
cli
push
dec
gs
pushf
adc
ins
fmul
je
(bad)
or
add
jecxz
icebp
push
xor
push
jb
int
mov
cmp
fidivr
fild
cmp
xor
jbe
mov
cld
or
js
aas
out
sub
stos
repnz
jmp
sub
jmp
mov
mov
sbb
add
xor
push
or
mov
scas
jle
xchg
repnz
mov
mov
jns
mov
rcl
pop
pushf
popf
mov
and
mov
mov
mov
mov
xor
xor
inc
or
cld
aad
scas
xchg
fcom
jae
mov
scas
cmps
ficomp
add
fdivr
das
mov
ds
movs
sub
sti
dec
outs
cwde
and
out
and
lods
out
pusha
ds
push
stos
or
sub
sbb
jmp
xor
pusha
pop
jl
push
mov
outs
test
add
push
lds
inc
push
movs
inc
pop
jg
pop
mov
inc
inc
out
or
fst
push
cmps
lods
xor
and
es
repnz
out
and
lds
jp
mov
loope
fisubr
adc
in
push
lods
ret
jmp
xor
cmp
stos
fisub
jbe
hlt
xor
cmc
sbb
adc
iret
rcr
int
sbb
cld
inc
add
nop
cmps
mov
call
fild
loope
mov
sub
sbb
sbb
arpl
pop
mov
mov
and
scas
inc
dec
sbb
outs
inc
or
fcomp
rol
sahf
inc
inc
jp
call
sbb
xchg
fdiv
(bad)
daa
xchg
sbb
push
fs
rcr
sar
sbb
mov
ret
pop
cli
fimul
pop
je
pop
xor
push
xchg
lods
dec
imul
mov
ins
data16
in
dec
cdq
adc
loopne
aad
xor
dec
mov
psubsw
cmps
test
(bad)
ud2
jns
adc
adc
test
aam
add
push
mov
sub
push
mov
pop
xor
loopne
pop
add
retf
sub
mov
dec
test
dec
mov
clc
and
dec
jmp
jnp
fwait
stc
mov
icebp
int
or
ror
imul
inc
sub
mov
mov
xchg
and
cmp
scas
mov
test
cmp
xchg
xchg
and
dec
shl
(bad)
adc
sbb
test
dec
popa
stos
push
push
call
bound
or
imul
retf
push
xchg
movs
fcmovne
(bad)
arpl
test
adc
aam
ss
pop
ja
and
loop
(bad)
cli
mov
aam
cmc
adc
out
add
retf
jno
push
cmp
mov
retf
lods
push
xlat
dec
pop
pop
std
nop
or
rcr
mov
xchg
inc
stos
push
sti
dec
movs
ins
icebp
(bad)
push
clc
mov
pop
and
inc
add
pop
adc
fstp
sar
pop
outs
xchg
jns
sub
mov
cmp
les
jbe
mov
or
mov
inc
xor
or
ret
xchg
xchg
adc
lahf
jae
sar
jmp
xchg
push
push
or
int
les
inc
ret
jle
xchg
or
lahf
fyl2x
add
movs
push
mov
pop
and
aas
mov
jmp
mov
scas
jg
mov
test
ret
jp
push
xor
lods
mov
mov
add
js
inc
inc
adc
push
movs
pop
ss
push
in
into
retf
shr
hlt
inc
pop
test
retf
cmp
sbb
inc
(bad)
mov
add
xlat
icebp
rcl
repnz
aas
cmp
(bad)
push
sub
jg
dec
sbb
xchg
mov
outs
ret
adc
imul
mov
mov
sar
ja
jle
sub
movs
adc
sbb
mov
fcomp
scas
cmps
hlt
inc
mov
push
push
ret
mov
jo
jo
call
cdq
js
sub
sbb
mov
clc
push
sbb
or
sub
test
aas
cli
mov
fist
or
and
ins
sbb
loopne
pop
(bad)
xor
sub
or
loop
(bad)
rcr
sbb
je
push
mov
add
cs
stc
push
movs
jo
fst
xchg
imul
(bad)
hlt
mov
xchg
loope
and
mov
stos
out
enter
push
xor
int
mov
inc
stos
and
xchg
(bad)
mov
js
mov
mov
in
sbb
clc
(bad)
test
mov
inc
jg
xchg
popa
and
mov
(bad)
(bad)
out
jno
das
or
push
clc
mov
jecxz
mov
mov
pop
xchg
dec
xor
jbe
pop
lock
in
xchg
stos
nop
aam
inc
and
mov
call
test
imul
jbe
scas
iret
ja
out
popf
mov
cmps
or
or
adc
mov
lahf
aam
mov
out
test
mov
pxor
gs
fdiv
(bad)
aam
add
addr16
push
jecxz
jecxz
or
pop
adc
mov
adc
sub
inc
xchg
xor
loop
and
sahf
repnz
addr16
mov
sub
(bad)
add
jmp
stos
ja
in
push
sbb
cwde
pop
mov
mov
cdq
pop
cs
in
test
repnz
push
repz
pop
(bad)
adc
inc
sbb
lods
or
nop
aam
in
inc
(bad)
std
ds
daa
pop
inc
xchg
pushf
leave
ss
cmp
xchg
movs
mov
jge
test
sub
je
push
mov
adc
mov
inc
dec
jnp
dec
add
mov
nop
dec
sar
xor
(bad)
push
pop
sub
xchg
ret
sbb
inc
in
dec
aad
push
mov
fimul
mov
jo
mov
xor
and
add
fld
inc
jmp
rcr
aam
stos
inc
scas
in
push
or
mov
gs
dec
add
jbe
push
call
xor
test
cmp
sbb
or
dec
sub
mov
adc
mov
mov
mov
sbb
pop
enter
and
mov
cmp
xchg
jno
mov
mov
adc
push
xor
pop
or
inc
cmp
mov
aam
dec
stc
(bad)
popa
bound
daa
cmp
add
cmps
add
jae
mov
jae
mov
ficomp
xchg
aaa
les
adc
aam
or
pop
ja
(bad)
leave
mov
push
add
sub
inc
inc
in
bound
xchg
scas
lods
js
push
sub
mov
lock
push
aaa
sub
jbe
jno
sub
and
in
scas
imul
neg
call
test
in
loope
outs
test
dec
stc
jmp
xor
or
dec
mov
pusha
bound
jg
xchg
pop
stos
jl
mov
dec
push
arpl
pop
pop
mov
clc
push
ins
jg
rcl
mov
mov
sbb
xchg
(bad)
call
out
out
mov
ret
add
adc
gs
or
jmp
and
sbb
sub
pop
push
push
inc
out
out
test
outs
arpl
and
push
in
xor
sar
push
pop
cmp
pop
daa
movs
xor
lods
add
xor
shr
loopne
pop
lahf
mov
xchg
mov
xchg
mov
mov
cmp
xor
cmp
cmp
fist
cmp
inc
in
sbb
adc
jle
mov
or
xor
mov
shl
mov
jp
lahf
sti
pop
popf
popa
push
rol
adc
fistp
adc
or
and
and
popf
hlt
jg
nop
in
outs
int
leave
lock
adc
push
loopne
pop
mov
out
jg
inc
or
or
in
retf
cwde
imul
xchg
stc
dec
push
jle
ins
test
pusha
stc
or
jle
push
(bad)
jecxz
pop
push
daa
inc
das
cmp
adc
mov
push
pushf
mov
cwde
pusha
(bad)
iret
jo
and
je
(bad)
add
inc
sahf
cli
fnsave
not
int
(bad)
pop
sti
jae
(bad)
xchg
das
xchg
inc
jmp
leave
loop
mov
out
xchg
imul
cmp
cmp
outs
dec
mov
mov
and
adc
sub
cmp
imul
push
pushf
(bad)
mov
sub
inc
pop
mov
adc
shr
mov
rcr
jns
shl
outs
cmp
fmulp
ins
(bad)
and
pop
mov
cwde
pop
inc
xor
sub
or
dec
inc
bound
mov
xchg
rcl
addr16
sti
ficomp
adc
lods
out
iret
cmc
mov
popa
mov
add
retf
sub
and
mov
sub
sub
ret
adc
popf
pop
pushf
sub
cmps
jbe
dec
xchg
inc
loop
scas
sbb
imul
sbb
rcr
stos
ret
cmp
mov
cmp
lea
enter
or
mov
and
jle
scas
in
dec
sahf
adc
cmc
mov
aad
popf
icebp
arpl
inc
pop
mov
pushf
sbb
jbe
jl
jmp
test
lods
sub
dec
pop
push
movs
nop
shl
mov
mov
iret
xchg
xchg
mov
mov
adc
jmp
or
pop
mov
lds
jmp
ds
cmp
fcmovb
in
bound
imul
mov
mov
fnstenv
pushf
in
in
sahf
cmp
xor
sub
push
test
jbe
rcl
cmps
mov
mov
mov
cmp
int
loope
stos
gs
(bad)
imul
lds
cmp
xchg
pop
add
ja
or
sub
push
stos
mov
xchg
pop
xor
sbb
cld
push
scas
xchg
cs
mov
leave
sbb
inc
icebp
xchg
xor
inc
inc
in
dec
aam
sbb
and
aam
adc
sub
std
test
mov
test
cmp
in
call
cld
or
in
repnz
rep
mov
icebp
cli
push
adc
cld
pop
adc
sti
ss
mov
push
dec
ja
jnp
cmp
sbb
dec
inc
(bad)
adc
ret
xchg
cmp
and
int3
fild
cmp
inc
sbb
jae
jp
ja
mov
adc
out
mov
mov
push
test
daa
or
test
mov
test
jae
inc
add
int3
lods
stos
jnp
sbb
aad
dec
call
sbb
adc
pushf
lock
inc
call
push
(bad)
jmp
push
pop
xor
pop
test
fidivr
fld
cmp
mov
push
ret
pop
jecxz
or
xor
sbb
in
cmp
push
jecxz
idiv
mov
bound
lea
loop
xchg
fbstp
push
inc
dec
jmp
adc
test
mov
inc
push
ret
dec
fwait
lods
jl
inc
ss
ffreep
scas
pop
sbb
mov
or
ja
push
pop
mov
loop
retf
fcomp
cwde
dec
into
outs
mov
call
aam
or
jle
data16
sub
icebp
lods
mov
daa
loop
and
dec
leave
or
into
pop
mov
scas
out
imul
push
das
(bad)
mov
mov
jno
or
cmps
out
pop
lahf
das
sbb
out
and
push
rcr
mov
mov
mov
jecxz
pop
dec
mov
push
scas
ins
aas
pop
cmps
pop
ret
bound
call
iret
jle
pop
cdq
mov
sub
mov
mov
xor
daa
hlt
outs
shr
outs
xor
rcr
dec
sub
mov
test
jb
add
(bad)
lods
aad
add
adc
push
ins
jl
xchg
push
sub
into
fild
pop
ja
jp
cmp
movs
add
push
call
aam
(bad)
sahf
sub
gs
mov
aam
mov
lods
fdivr
sar
push
mov
outs
push
dec
jnp
mov
adc
xor
pop
mov
sub
addr16
mov
imul
cmp
in
jecxz
retf
adc
mov
jge
rol
mov
pop
mov
cli
xchg
aas
arpl
dec
aad
addr16
fdivr
jl
inc
popf
mov
outs
pop
in
popf
inc
cwde
sub
xchg
(bad)
clc
mov
sahf
dec
mov
mov
cdq
or
lds
in
rcl
adc
sub
fcom
xor
push
out
(bad)
pop
mov
ins
neg
push
push
jb
(bad)
hlt
mov
les
std
xchg
pop
cmp
loopne
mov
in
mov
mov
mov
add
add
mov
mov
jmp
jo
in
adc
aas
and
pop
fwait
rcr
push
pop
xchg
rol
add
pop
or
push
mov
bound
jp
into
sti
jno
scas
(bad)
sub
stc
dec
movs
mov
xor
push
mov
mov
cld
outs
push
dec
xor
movs
inc
push
int3
lods
fs
mov
xor
(bad)
adc
fisub
push
push
add
and
fiadd
push
mov
test
jo
add
pop
or
sub
in
xchg
ror
inc
ins
fdiv
(bad)
sbb
mov
test
cmc
jo
xor
hlt
lock
jbe
push
rol
mov
or
mov
retf
aad
int3
sub
lods
sub
mov
(bad)
pop
(bad)
retf
mov
add
mov
jb
sbb
mov
imul
and
or
pushf
add
jecxz
sbb
fadd
xor
sub
jle
fcmove
xchg
bnd
cmp
cdq
fldenv
and
stos
lods
and
cmp
jns
vandnps
retf
imul
jne
mov
jg
xlat
test
into
or
jmp
sub
mov
movs
pop
jmp
xor
jp
xor
sbb
pushf
or
sub
in
or
inc
ret
cmp
sub
int3
adc
shr
xor
xchg
push
inc
jne
xchg
add
test
and
sub
mov
inc
cmp
fist
es
dec
or
mov
outs
push
nop
in
push
dec
jle
bound
shl
in
cdq
lahf
and
and
mov
mov
neg
dec
es
rep
push
stos
ins
sub
frstor
cmps
and
sub
cmp
or
sub
xor
dec
push
mov
mov
fs
jle
out
add
les
jns
and
(bad)
(bad)
mov
xchg
jmp
ja
push
dec
popa
and
cmp
sar
xchg
test
or
lahf
loope
pop
mov
aas
jnp
jne
jne
or
lea
jnp
sbb
push
mov
add
push
and
mov
icebp
jle
jmp
mov
push
ror
jmp
push
cs
test
sub
dec
sbb
fsubr
and
sbb
je
call
dec
movs
xor
aam
test
or
loop
push
mov
push
scas
xchg
clc
mov
mov
pop
sbb
inc
adc
jecxz
fcmovnb
iret
mov
ds
fisub
aam
jns
in
loopne
scas
add
rcr
repnz
movs
and
sbb
adc
sub
int3
sub
push
jp
in
cli
leave
push
rcr
daa
sti
xor
les
jmp
mov
(bad)
das
ds
dec
push
jmp
jbe
ss
stos
xchg
pop
repz
shl
cmp
call
mov
ror
iret
or
sbb
mov
aam
mul
pop
cld
and
cdq
fst
ja
(bad)
fsub
dec
jo
bound
aas
mov
call
sti
xchg
addr16
pop
mov
stc
jle
int
cmp
and
sub
jecxz
in
popf
sub
push
xor
push
(bad)
push
fcom
push
sti
or
or
pop
mov
mov
mov
dec
int
cmp
push
add
mov
xor
cs
adc
or
cmp
mov
inc
loopne
jne
outs
cwde
jno
mov
int
jg
test
leave
call
out
inc
(bad)
and
jbe
inc
outs
test
aad
and
dec
adc
hlt
out
mov
(bad)
out
aaa
mov
push
or
push
ins
test
mov
sbb
or
imul
cmc
lahf
adc
jmp
adc
scas
in
repz
int3
jp
sub
rcl
inc
ss
daa
xchg
xor
outs
popa
test
jb
ror
into
dec
int
mul
pop
mov
aaa
jl
out
aam
fcmovb
cmp
scas
ret
xchg
inc
(bad)
cwde
pop
nop
xchg
iret
push
popa
mov
ror
lods
push
mov
inc
pop
xor
mov
sub
jno
pop
adc
pop
lock
and
adc
jne
adc
shl
retf
pop
ret
adc
push
add
or
fwait
(bad)
ficomp
add
lahf
fidiv
jbe
sbb
jb
adc
cmp
xchg
jns
ss
fcomp
popw
popa
dec
pop
sbb
out
inc
imul
aad
loop
sub
sub
or
jnp
div
pop
cld
nop
push
sbb
fucomip
fsubrp
xchg
add
mov
or
fcom
adc
div
mov
sbb
sti
jne
sbb
mov
test
aad
popa
add
imul
xchg
in
add
mov
mov
in
jb
push
adc
add
sahf
ret
out
arpl
lahf
xchg
xor
inc
inc
or
push
out
fist
push
adc
cmps
and
out
ret
fwait
jmp
xchg
xchg
or
hlt
aad
call
or
lds
fimul
ftst
push
jmp
cdq
jo
xor
mov
jo
cli
or
pushf
sbb
fimul
cdq
in
fmul
xchg
inc
sub
stos
mov
in
dec
pop
cs
sti
jmp
pop
mov
ret
bound
lahf
call
fild
fdecstp
movs
mov
ret
shl
rol
jne
stos
xor
ins
dec
jmp
mov
repnz
xchg
pushf
lahf
clc
repz
mov
sub
push
stos
jno
dec
fst
inc
xor
add
aaa
mov
lods
add
pushf
popf
adc
sbb
or
mov
punpckhwd
sub
cli
hlt
ret
pop
call
sbb
push
inc
cdq
out
xchg
mov
add
into
aas
outs
enter
sbb
mov
shl
aaa
sbb
dec
lock
enter
and
inc
mov
scas
je
imul
xor
cli
mov
outs
jb
jb
test
xor
jp
push
add
pop
mov
ds
fdivr
jge
in
outs
add
pushw
sahf
jnp
xchg
imul
mov
clc
xchg
mov
loopne
xchg
iret
movaps
sub
jno
test
adc
pop
adc
sbb
inc
or
(bad)
call
imul
xor
fsub
sub
sti
dec
mov
repz
sbb
call
(bad)
loope
ins
xchg
sub
in
(bad)
fist
cmp
xor
jmp
je
mov
xlat
ret
mov
adc
add
jae
imul
retf
ror
or
sub
add
cld
jecxz
add
sub
lods
pop
jle
add
add
sub
(bad)
push
cmps
fist
mov
add
dec
dec
loope
test
mov
and
inc
not
push
cmp
inc
or
cld
retf
add
or
out
and
in
add
out
pop
retf
and
mov
call
sbb
cmp
pop
or
cmps
sbb
call
lods
call
inc
in
mov
adc
pop
cmp
mov
cwde
scas
xchg
enter
pushf
or
(bad)
push
sbb
pusha
lods
mov
dec
ror
xor
lahf
jg
xor
retf
and
xlat
jo
sbb
aam
cmp
(bad)
data16
mov
push
and
lods
in
js
xlat
test
mov
xchg
jecxz
lahf
es
mov
or
jo
test
cmps
clc
leave
(bad)
xchg
test
push
cmp
sbb
xor
cld
mov
in
or
xor
lods
cli
pop
sar
mov
enter
aad
lahf
push
cmps
ret
push
sbb
test
test
loopne
pop
fs
es
pop
sbb
inc
test
loopne
js
pop
mov
jo
jo
repnz
or
adc
das
or
lahf
push
movs
scas
sbb
les
pop
sar
aad
shr
cwde
int3
xor
inc
jmp
test
mov
sub
sbb
cmp
ja
jb
inc
clc
or
sbb
popf
sub
dec
dec
and
mov
inc
mov
adc
int3
imul
pop
stos
rol
call
add
mov
cld
(bad)
out
push
push
js
ins
nop
jae
mov
jp
push
adc
(bad)
aad
adc
xor
fwait
jle
dec
fdiv
sbb
fld
jmp
sbb
mov
or
jmp
fidiv
dec
scas
dec
jnp
sbb
or
xchg
bound
call
scas
jbe
xor
dec
sbb
xchg
xchg
(bad)
xor
out
hlt
cs
or
sub
in
sti
pop
push
ret
cwde
js
xchg
mov
stc
in
jne
int
pop
stc
cmp
rcr
(bad)
scas
pop
push
cmp
pop
pop
cmp
outs
repnz
js
scas
xchg
adc
ja
mov
inc
movs
adc
adc
xchg
xchg
inc
mov
jo
pop
fwait
popa
sub
push
call
xchg
add
dec
stc
cmps
mov
stos
cmp
in
xor
dec
mov
lock
jnp
test
ja
jmp
(bad)
dec
pop
sbb
mov
push
sbb
fs
cmp
adc
int
stos
xor
cs
aaa
sbb
xor
cmp
pop
clc
push
jl
cmpxchg
push
adc
loopne
mov
or
sub
jns
add
jmp
xchg
dec
in
or
dec
in
mov
(bad)
div
ret
addr16
xchg
(bad)
jne
mov
lods
cmps
mov
xchg
in
out
dec
fnstsw
imul
or
xor
cwde
and
(bad)
cmps
loop
xchg
aas
lea
inc
cmps
inc
mov
ja
xchg
(bad)
or
adc
ror
iret
add
popa
loop
cmp
retf
test
xor
push
stos
rcl
aad
push
cmp
mov
push
(bad)
int
inc
xchg
push
push
mov
pop
test
pusha
xchg
push
sub
enter
aaa
icebp
jg
out
dec
push
push
add
into
in
into
stc
out
add
jnp
mov
adc
pinsrw
jo
ret
rcl
push
into
adc
mov
out
cmp
cmp
push
lds
xor
dec
mov
jae
fsubrp
ffree
movs
cdq
dec
xchg
push
mov
mov
xlat
je
mov
add
(bad)
sbb
xchg
retf
cmp
fdivr
fs
(bad)
sub
sar
loope
jo
je
js
add
stos
xchg
jb
aam
cwde
or
cmp
dec
xor
mov
(bad)
push
pop
mov
ins
ret
xor
in
pop
cmp
loop
out
sbb
pop
pop
sbb
fiadd
adc
call
mov
inc
cmp
jl
pop
pop
scas
(bad)
dec
(bad)
fild
xchg
or
mov
lds
daa
and
std
in
js
in
je
int
dec
ja
movs
mov
pop
jmp
int
and
ja
gs
cwde
sub
push
pop
in
jbe
mov
xchg
std
mov
pop
mov
sbb
out
int3
sub
std
sub
or
sub
gs
cdq
jmp
add
cmp
or
xchg
or
adc
xchg
cli
xor
or
pop
(bad)
cdq
inc
cmp
stos
xchg
xor
mov
ss
lds
cmp
cmp
mov
pop
adc
pop
int
std
cmp
adc
call
inc
mov
sub
cmp
shl
imul
push
mov
mov
(bad)
lock
sbb
in
dec
ss
test
jns
pop
std
pop
popa
lahf
loope
or
outs
xchg
jge
cdq
stc
cdq
inc
push
xor
sbb
xor
mov
(bad)
int3
mov
(bad)
cld
inc
pop
dec
jl
sub
push
xchg
outs
shl
xor
daa
into
xchg
sub
push
jge
adc
and
mov
(bad)
jl
popf
lods
sub
mov
or
cmp
fcom
int3
dec
jne
pop
sar
xlat
mov
xchg
pmovmskb
inc
inc
ds
js
clc
cmp
das
outs
xchg
mov
push
das
adc
fwait
mov
mov
cs
dec
cdq
xor
xchg
mov
or
or
and
(bad)
hlt
psubsw
lods
sub
aad
cmps
ds
cmovb
pushf
cmp
xchg
shl
aad
adc
sar
ja
sub
cmps
mov
sub
mov
ficom
ja
aad
sub
fnstcw
mov
mov
fisubr
push
(bad)
test
js
mov
cmp
push
enter
xchg
jl
xchg
or
cmp
leave
mov
daa
hlt
mov
lds
push
bnd
or
test
pop
sbb
pop
mov
pop
jmp
cpuid
test
test
dec
jge
xchg
mov
pusha
sbb
and
sahf
mov
dec
xor
into
adc
shl
mov
retf
mov
jne
push
cmp
call
xor
adc
les
mov
mov
jnp
ins
jmp
push
jns
mov
pop
aad
addr16
pop
dec
test
add
mov
add
sub
inc
clc
scas
xchg
nop
rol
mov
xchg
push
int
pop
(bad)
mov
dec
sti
(bad)
daa
lock
fadd
adc
lahf
and
stc
pshufw
push
(bad)
movs
cmps
push
outs
mov
mov
jns
mov
jge
in
arpl
xor
ret
xor
loopne
jecxz
jae
fwait
sbb
add
call
xor
movs
and
push
jmp
jl
dec
cwde
outs
mul
jle
(bad)
lock
push
sbb
or
xor
imul
test
fisubr
mov
(bad)
push
pop
and
stc
nop
jbe
pop
or
sbb
neg
call
(bad)
fdivr
(bad)
pop
je
or
xlat
sahf
cmp
mov
retf
aad
arpl
int
cli
jns
jmp
dec
inc
int3
jle
mov
cmp
aad
sar
(bad)
jne
cmps
fld
sbb
mov
dec
loopne
fnstenv
(bad)
mov
mov
je
add
fidiv
pop
rcl
push
add
inc
xchg
(bad)
sbb
add
aaa
jno
test
fmul
sub
push
jns
adc
or
pop
outs
pop
mov
xchg
sub
daa
(bad)
call
and
loopne
sub
push
dec
int
lock
test
popa
xor
not
and
mov
out
jge
lock
jmp
inc
addr16
scas
lds
inc
gs
sbb
pop
xchg
inc
adc
mov
test
add
movs
inc
xor
test
mov
pop
pop
js
fnstenv
iret
inc
jg
pmaxub
je
adc
push
js
mov
(bad)
push
cmp
fs
out
cmp
inc
push
jle
push
out
(bad)
icebp
xchg
dec
jmp
jl
sub
xor
daa
repnz
mov
(bad)
test
pushf
(bad)
rol
outs
mov
xchg
jg
pop
adc
call
out
jg
cld
cmps
mov
xor
xor
xchg
int3
pop
jge
ret
addr16
mov
jbe
inc
cmp
dec
sbb
shr
mov
mov
sti
scas
add
xor
cmp
outs
and
adc
mov
enter
cmps
scas
sub
mov
(bad)
jmp
cmps
movs
call
retf
movs
cmc
add
out
(bad)
jne
cmps
movs
loopne
fwait
jg
mov
popf
enter
mov
xchg
enter
mov
xor
lea
and
push
pop
xchg
push
ja
xor
add
div
and
pop
out
sub
enter
scas
jb
cmp
ret
gs
jg
faddp
daa
push
mov
fs
cmp
mov
neg
fs
call
int3
cmp
jae
sub
shl
cmps
jmp
pop
add
mov
stc
jl
fcom
sub
aaa
adc
lods
inc
div
mov
inc
inc
push
or
in
das
ror
inc
xchg
js
dec
or
xor
jle
cmp
cwde
mov
(bad)
(bad)
idiv
xor
push
fs
sub
repz
fimul
and
nop
dec
jo
sub
retf
pusha
adc
inc
shr
repz
mov
adc
ret
xor
int
mov
mov
mov
push
dec
push
aas
mov
mov
push
call
cmp
and
fiadd
or
test
cmp
push
hlt
or
add
push
sbb
pop
add
fisttp
sub
imul
aad
ret
pop
clc
call
push
jo
test
cs
outs
xchg
push
jg
xor
mov
cdq
inc
lahf
shl
xor
clc
adc
inc
sbb
test
cmp
jp
cmp
mov
rcl
retf
pusha
mov
adc
sbb
icebp
lea
popf
mov
(bad)
fndisi(8087
and
int3
std
xlat
or
mov
lods
fsubp
or
sbb
fld
into
cmp
mov
mov
mov
mov
mov
jne
dec
dec
push
cwde
repnz
cmc
sub
retf
ins
jmp
and
cmps
(bad)
mov
ret
(bad)
mov
and
adc
dec
stos
hlt
out
jmp
in
sub
jp
loopne
call
test
cmps
ficom
mov
jns
sub
push
call
fisttp
popa
loopne
push
jecxz
into
(bad)
out
das
rcl
mov
jae
or
mov
leave
jne
(bad)
js
mov
in
sub
push
dec
dec
sbb
and
pop
inc
pop
sub
push
push
fcomip
int
ror
and
xchg
in
ficom
retf
xor
mov
adc
xchg
mov
fbld
mov
push
int3
dec
shr
nop
bound
lods
adc
ds
stos
mov
sbb
pop
fmul
xchg
imul
iret
sub
loope
dec
and
cdq
push
jl
(bad)
xchg
in
adc
cmc
dec
jp
loop
inc
icebp
mov
pop
clc
push
addr16
imul
push
pop
mov
mov
sub
and
out
movs
mov
mov
mov
mov
push
in
sbb
or
push
(bad)
arpl
xor
daa
mov
and
sbb
push
xor
and
pop
lahf
mov
data16
lods
test
test
mov
leave
sbb
sbb
ins
xor
lea
mov
call
xchg
adc
pop
add
inc
fisub
sub
(bad)
sbb
aam
jne
movnti
cli
neg
xchg
cmps
mov
sub
aaa
repnz
sbb
fwait
jae
or
xor
pop
jle
pop
pop
int3
mov
xor
or
xlat
sbb
enter
das
out
pop
push
push
push
outs
or
mov
das
push
dec
idiv
pop
(bad)
das
mov
imul
jg
lds
pop
jno
adc
push
dec
adc
mov
xchg
sbb
ds
ins
imul
sub
sbb
repz
mov
in
add
push
dec
or
sar
jno
data16
push
xchg
cmovp
scas
int
lea
test
call
mov
popa
pushf
push
das
fld
jg
xor
out
pop
ret
ret
sub
inc
xchg
mov
lock
movs
aas
popf
stos
(bad)
nop
lahf
fxtract
hlt
dec
cs
out
add
jns
in
retf
in
or
or
sub
enter
push
mov
pop
mov
sbb
lahf
adc
ror
idiv
les
test
inc
adc
psrad
jecxz
pop
xchg
and
iret
inc
imul
cld
aad
shl
movq
xchg
in
imul
or
lds
and
pop
popf
js
adc
test
jo
push
mov
pop
clc
lods
bound
fisubr
cmp
movs
sbb
jp
sub
in
fstp
push
(bad)
cmp
leave
popa
jnp
jne
mul
xchg
data16
int
pop
scas
push
inc
xlat
cmp
daa
cmps
imul
scas
jmp
sbb
xchg
(bad)
jae
and
lahf
icebp
adc
mov
dec
mov
movs
lods
shl
and
les
push
and
out
retf
or
mov
aad
jle
sub
sbb
pop
cdq
cmp
mov
sub
add
add
xchg
shl
lods
push
lods
int3
call
test
sbb
or
xchg
mov
loopne
jmp
mov
adc
fabs
dec
add
jo
jg
(bad)
scas
ret
and
(bad)
fnstcw
add
fist
mov
jmp
int3
icebp
retf
loope
mov
push
cld
dec
movs
(bad)
jmp
enter
les
sbb
inc
or
test
pop
inc
pop
aas
jl
mov
jp
mov
scas
inc
and
mov
outs
dec
lds
push
push
adc
call
shl
les
fsubr
cmc
dec
in
cmpps
in
movs
popa
fisub
imul
sbb
inc
pop
rcr
jns
dec
push
and
daa
mov
or
cdq
xchg
mov
jmp
sub
(bad)
addr16
scas
and
jg
gs
in
xchg
imul
jbe
in
les
mov
xchg
lods
hlt
aaa
ret
retf
jp
aam
fiadd
dec
test
fild
shr
aam
jmp
call
jmp
jecxz
into
ja
sub
ins
jae
xor
ins
cmp
div
cmps
inc
shl
pop
ins
in
pop
fisubr
inc
test
test
stos
mov
inc
test
adc
retf
sub
outs
inc
aas
xchg
add
cs
push
sbb
pop
call
inc
mov
sahf
mov
fnsave
push
dec
sbb
(bad)
mov
(bad)
nop
shl
out
(bad)
mov
cmp
sub
inc
retf
test
shl
pop
cvtdq2ps
mov
les
mov
adc
mov
test
mov
out
lock
push
ror
inc
mov
sbb
jp
ins
adc
es
jp
sar
mov
fist
xor
mov
jle
dec
ss
aas
xor
outs
cld
ror
in
jne
pop
je
push
stos
add
pop
cmc
lds
das
lds
mov
out
imul
retf
ss
outs
nop
fdiv
into
call
and
sbb
lea
mov
test
imul
mov
mov
push
pop
retf
pop
push
push
push
je
adc
out
jmp
mov
aas
aaa
int3
movs
cdq
push
or
inc
xor
dec
cmp
mov
adc
mov
or
int3
fisubr
jge
cmps
ss
cmp
add
cmp
mov
repz
shl
xchg
scas
sub
dec
rol
push
jmp
in
fisubr
pop
inc
xchg
scas
scas
ins
cmp
push
pop
hlt
pop
call
and
shr
cmps
sub
cmps
repnz
xchg
pop
rcr
inc
mov
cwde
daa
xchg
movs
inc
sbb
(bad)
repz
fstp
adc
js
cmp
and
mov
inc
shl
es
jb
adc
mov
sahf
les
scas
cmp
jecxz
inc
pop
push
(bad)
cdq
fsubrp
test
arpl
fwait
call
das
pop
jge
sub
mov
push
jae
out
push
scas
imul
push
popf
pushf
inc
sub
aas
mov
jmp
pop
das
retf
mov
mov
dec
rcl
pop
jle
add
cwde
dec
adc
lea
(bad)
jg
cmps
cwde
mov
jle
popf
inc
dec
adc
dec
xchg
jns
or
add
jne
(bad)
mov
sbb
js
mov
mov
push
mov
sbb
aad
dec
fisttp
mov
push
or
hlt
jmp
inc
dec
pop
aam
inc
cs
(bad)
dec
cmp
ja
repnz
clc
jnp
and
lea
test
mov
xchg
call
loop
out
repz
mov
pusha
xchg
cs
aad
movs
retf
sub
push
dec
inc
jbe
retf
test
mov
fnstenv
adc
clc
arpl
xchg
add
repnz
dec
pop
sub
ror
inc
movs
sti
cmp
fst
mov
fimul
leave
(bad)
mov
sbb
pop
and
adc
aaa
cmp
mov
sbb
dec
and
xchg
ja
shr
out
or
xchg
cmp
lock
inc
push
in
retf
into
ja
out
pop
mov
call
fst
jle
xchg
cmc
lods
dec
xor
out
and
(bad)
xchg
outs
sahf
loope
adc
les
add
test
inc
mov
(bad)
pusha
mov
cmp
cmp
imul
xor
aad
lea
stc
mov
(bad)
call
fnstcw
jbe
dec
js
loop
jbe
jp
std
shl
movs
and
and
jae
xor
dec
scas
jns
fdiv
mov
rcl
xor
push
dec
add
and
lahf
ja
pop
into
mov
sbb
out
retf
pop
xchg
xchg
xchg
jb
jo
cmp
repnz
movs
pop
lods
mov
dec
jecxz
sbb
leave
cwde
add
mov
outs
dec
pushf
enter
sbb
addr16
sar
sbb
loopne
xchg
dec
push
popa
into
cmp
imul
push
jae
jo
cmp
adc
cmp
pop
sbb
call
test
iret
and
aad
(bad)
sar
sbb
nop
je
repz
dec
loop
fcomp
jno
cmps
ss
aad
sub
jb
cli
imul
ret
fucomp
and
add
add
push
fmul
dec
mov
dec
xchg
fldenv
ret
jp
push
dec
xchg
pop
rcl
sub
(bad)
add
test
call
sbb
mov
inc
data16
sbb
jns
lods
push
mov
cmps
jecxz
sar
fld
loop
sahf
or
push
lea
ds
and
adc
outs
jmp
ror
xchg
mov
cdq
pop
xchg
adc
push
cmp
ins
sub
stc
mov
scas
push
inc
iret
jecxz
(bad)
push
dec
pop
pop
cli
addr16
shl
sub
xchg
inc
mov
je
shl
lock
jae
gs
rcr
pushf
add
dec
xchg
ret
popa
addr16
movs
jne
fcomip
jmp
popf
pushf
xchg
add
xchg
adc
pop
xor
adc
lds
lods
fwait
inc
cmp
shl
shl
jns
popa
push
xor
(bad)
je
sub
mov
jbe
xchg
pop
es
sti
nop
shl
mov
lds
lahf
jae
les
aas
inc
xchg
movs
mov
test
sub
dec
gs
stos
lahf
loope
mov
mov
pusha
in
aaa
aaa
xchg
in
sbb
dec
leave
int
in
or
jo
or
iret
adc
jp
idiv
sub
adc
mov
ficom
ins
dec
push
jae
cs
pushf
jnp
test
enter
(bad)
cmp
push
mov
jne
mov
int
and
and
mov
(bad)
and
test
adc
and
jp
cwde
out
xor
jge
pop
out
daa
cmp
adc
bound
mov
xchg
leave
push
dec
or
pop
std
adc
leave
push
arpl
mov
pushf
mov
sub
in
imul
inc
add
idiv
adc
fsqrt
dec
mov
pop
adc
mov
loope
jle
xlat
jns
adc
pop
pop
js
ins
fld
push
pop
jae
aaa
lods
mov
jno
les
repz
int
mov
call
push
sahf
out
out
ret
test
pop
push
repz
and
or
jmp
loopne
mov
pop
lea
mov
retf
and
or
add
and
clc
enter
pop
popf
mov
or
sahf
xchg
loope
adc
clc
cmp
mov
push
pop
push
fsubr
call
sbb
dec
xchg
bound
gs
imul
xor
shl
out
ins
dec
and
fwait
cmps
push
int3
loope
pop
leave
add
(bad)
mov
loopne
neg
add
fsub
xchg
mov
add
xlat
popf
cmp
mov
cmp
lock
repz
daa
mov
(bad)
fldpi
shl
(bad)
mul
fnsave
dec
inc
xor
cmps
dec
jge
mov
jl
ret
hlt
aaa
sbb
jmp
repz
xchg
clc
jge
mov
xchg
xchg
pop
pop
lock
(bad)
fs
jo
sbb
inc
add
or
lods
cmp
jmp
xchg
cmp
sbb
adc
and
jno
mov
mov
jmp
mov
hlt
out
xor
adc
movs
lods
pop
jmp
cmps
sbb
das
sbb
push
lods
jp
jbe
or
push
push
cmp
sub
push
mov
xor
lock
xlat
data16
ret
cmp
es
inc
(bad)
fldcw
rcl
mov
inc
adc
sahf
gs
jmp
aaa
repz
fwait
or
push
call
div
xor
jp
int3
shr
scas
popa
jb
xor
in
mov
dec
pop
jge
pusha
dec
xor
retf
movs
loope
int
sar
cmp
mov
adc
cwde
pop
shl
push
xlat
dec
into
out
pop
inc
in
pop
test
sti
clc
lahf
(bad)
jge
inc
jg
pushf
gs
jge
cmps
mov
or
in
mov
and
loope
mov
cmp
adc
sub
cmp
ss
cli
pop
sar
sbb
mov
pop
mov
lock
mov
shl
std
push
xor
(bad)
neg
add
add
jno
pop
jecxz
daa
push
jg
jb
xchg
(bad)
xchg
repnz
shr
add
cmp
and
out
(bad)
mov
pop
sub
and
mov
imul
push
fimul
aad
cmps
pop
push
ds
outs
mov
adc
add
punpckhdq
jg
aas
js
sbb
push
sub
push
mov
popf
dec
ja
xor
loope
inc
(bad)
xchg
xchg
jge
mov
(bad)
mov
push
push
test
add
dec
mov
stos
iret
adc
inc
enter
int3
repz
fisub
cmp
repz
in
(bad)
jo
sub
push
fiadd
retf
rol
jnp
stc
xchg
push
div
inc
xchg
loope
lods
mov
fidiv
in
push
repnz
std
mov
jl
pop
pop
in
bound
imul
mov
ret
cmp
arpl
mov
mov
xor
jmp
sbb
icebp
fucomi
inc
nop
dec
fdivrp
adc
aad
sbb
mov
add
pop
das
iret
cli
jle
iret
adc
int3
(bad)
mov
xlat
inc
jmp
jb
into
je
mov
or
pop
mov
jb
xchg
int3
dec
fwait
or
inc
in
or
jbe
stos
or
mov
sub
and
inc
les
popa
dec
ret
aaa
lods
call
adc
sub
xor
popf
js
call
xor
dec
pop
clc
std
or
sti
xchg
sbb
inc
or
jecxz
push
pop
clc
and
std
xchg
mov
retf
mov
ror
sbb
xchg
out
int
jl
mov
aaa
mov
add
cld
mov
dec
sub
lahf
aad
rol
jnp
mov
test
repnz
jno
in
adc
cmps
fistp
push
xor
stos
ficom
idiv
lock
mul
dec
pop
mov
bound
lock
fcomp
jecxz
cdq
int3
inc
xor
test
mov
jbe
push
ret
mov
loope
movs
push
xor
jne
push
pushf
inc
sahf
xchg
adc
sub
sar
or
mov
mov
and
pusha
int3
and
fild
add
mov
mov
sahf
and
push
pop
add
scas
hlt
mov
inc
dec
lods
add
jge
mov
call
in
ds
enter
stc
(bad)
call
ffree
ficom
scas
xchg
mov
idiv
add
jecxz
xchg
fdiv
mov
lods
(bad)
push
inc
xchg
jno
scas
call
push
test
stos
jbe
cdq
push
sub
push
pushf
xor
xchg
ret
push
xor
mov
or
fwait
arpl
icebp
xchg
pop
or
dec
sub
call
add
fstp
clc
sub
fwait
mov
ror
es
pop
sub
mov
imul
(bad)
je
movs
lea
sbb
push
movs
mov
rcr
leave
inc
iret
addr16
rol
xor
das
xchg
fucomi
inc
inc
jno
mov
xchg
xchg
pushf
inc
adc
arpl
out
out
das
in
sub
idiv
xchg
jns
pop
test
addr16
mov
xor
fcomp
cmps
cmp
xchg
bound
add
add
leave
add
nop
push
je
outs
mov
fld
xor
loop
shl
push
repnz
pop
sbb
jb
(bad)
stos
dec
xchg
and
and
push
loope
imul
jle
add
bound
pop
cmp
sub
cmp
sahf
(bad)
in
inc
bnd
pusha
or
xor
stos
mov
jmp
cmp
addr16
ror
repz
ins
or
clc
jg
loopne
push
add
shr
int3
sti
jae
es
push
cmp
adc
and
or
scas
sub
mov
pop
cmp
ja
outs
shr
fcom
outs
jl
leave
test
sub
jae
test
repnz
mov
pop
data16
xchg
ja
rcl
in
outs
sar
pushf
movs
jne
push
shr
cmp
pop
cmp
test
cmp
gs
jmp
leave
addr16
jge
mov
mov
lds
push
add
mov
dec
and
loop
fisub
mov
or
mov
call
push
sub
nop
lds
mov
mov
mov
out
xchg
add
cmp
ins
std
or
xchg
xchg
int3
ror
popa
xor
cmp
leave
cli
fwait
sub
aam
xor
aad
cmc
pop
mul
fcom
inc
xor
je
icebp
fs
sub
bound
dec
in
adc
lods
push
aad
call
inc
pop
inc
sub
add
jmp
ret
ins
cld
and
rol
pop
daa
push
mov
pop
(bad)
lds
and
add
pop
jne
jmp
pop
mov
mov
mov
test
iret
pop
ror
push
mov
gs
pop
xor
xchg
push
fstp
adc
ror
or
repnz
test
lods
(bad)
cmp
lgs
mov
dec
fiadd
mov
or
xor
and
sbb
mov
dec
inc
xor
add
mov
lods
enter
fiadd
adc
or
int3
cmc
dec
(bad)
(bad)
addr16
jbe
daa
aad
and
sbb
cmp
and
(bad)
xor
js
jns
jae
ss
leave
add
xchg
adc
enter
fdivrp
jl
and
fadd
(bad)
ret
test
jnp
sbb
fs
and
cmp
shr
cs
jecxz
adc
mov
cmp
pushf
xor
jne
rcl
clc
inc
rcl
fcom
sbb
and
and
cli
xchg
pop
sub
and
adc
mov
inc
mov
shl
push
cld
mov
stos
mov
jmp
xor
cli
push
inc
add
push
xor
adc
stos
mov
mov
lods
push
push
popa
repnz
lds
bound
jmp
cwde
or
add
jne
nop
push
xchg
sbb
inc
jmp
inc
loop
jne
inc
rol
out
pusha
sub
xor
adc
push
enter
sub
or
frstor
mov
aas
scas
sub
cmps
push
mov
fisub
inc
add
sar
cmps
es
jne
je
ins
jmp
mov
sbb
mov
das
movs
jle
jno
ja
icebp
and
or
mov
or
daa
fisttp
pop
rcr
iret
cmp
nop
jecxz
push
out
mov
xchg
jle
in
inc
mov
(bad)
xlat
scas
add
int
retf
in
dec
into
pop
aaa
fnstsw
in
and
stc
jp
sbb
mov
int3
arpl
cmp
ret
loope
je
aaa
repnz
pop
sub
ror
sahf
test
cmp
mov
inc
pop
in
push
cmp
cmps
or
add
mul
(bad)
or
add
or
push
loop
scas
pop
pusha
pushf
fisubr
fist
add
fmul
test
sub
pop
fs
popf
pop
pop
xchg
jne
out
mov
pop
test
bound
les
es
push
add
not
dec
aaa
xchg
mov
and
jge
jecxz
or
and
test
movs
cld
add
fbld
jae
ins
dec
sar
xor
shr
inc
es
cmp
or
fsub
mov
sub
sti
push
mov
stos
add
pop
push
(bad)
add
xor
sbb
pop
scas
mov
pop
sbb
arpl
cmps
ror
icebp
jnp
call
fsubr
aaa
pop
inc
mov
jp
xor
sub
lea
cs
aam
push
adc
popa
mov
or
mov
sti
loop
jae
int3
shl
push
pop
popa
in
daa
sbb
scas
xor
or
mov
fld
cmps
cdq
popf
jle
cld
push
xor
cs
enter
mov
out
in
pusha
int
push
add
jge
mov
ret
sbb
scas
mov
inc
dec
xor
or
xor
mov
or
push
push
mov
retf
adc
inc
lahf
in
(bad)
into
dec
scas
mov
lds
sbb
jle
sar
bnd
or
sub
dec
dec
push
mov
in
xchg
fiadd
jmp
clc
cmps
pop
push
not
(bad)
pop
cmp
mov
or
lock
mov
fs
imul
out
pop
mov
std
hlt
mov
xchg
pop
mov
out
bnd
push
out
mov
pop
push
int3
dec
pop
inc
mov
pusha
add
dec
push
shl
aad
or
test
cwde
retf
push
test
xchg
pushw
or
jmp
cmps
lods
in
outs
ins
fist
stos
not
mov
or
in
(bad)
lahf
pop
sub
mov
je
ja
call
mov
movs
ins
mov
cmps
xchg
mov
(bad)
(bad)
pop
out
hlt
xchg
mov
gs
gs
ss
inc
xor
hlt
push
out
call
mov
rol
mov
ficom
shr
cmp
loopne
dec
in
dec
and
push
and
scas
clc
jg
js
sbb
cld
add
sub
fld
rcr
cmp
adc
fwait
push
mov
or
dec
jge
jbe
cmp
push
mov
cmp
adc
leave
sbb
sbb
xor
emms
imul
and
lock
(bad)
stc
add
mov
push
add
iret
adc
lahf
bound
inc
nop
imul
hlt
cmc
fisttp
dec
xchg
cmp
push
stos
push
jecxz
add
jge
push
das
mov
dec
mov
push
jb
pushf
xor
movs
push
add
push
adc
push
inc
jmp
jns
sar
sbb
and
xlat
sahf
fld
test
pop
mov
ficomp
cmp
(bad)
aad
mov
fcom
pop
ret
cmp
in
call
mov
xor
je
shl
bound
cmovbe
fdiv
test
std
scas
stos
jecxz
and
adc
jecxz
or
mov
scas
pop
ret
out
mov
inc
push
aam
jle
iret
inc
dec
pushf
inc
inc
or
jo
cdq
cmps
fs
es
and
call
fdiv
jno
and
and
xchg
adc
and
call
shl
xor
fdiv
pop
bound
or
(bad)
adc
push
movs
add
and
gs
or
arpl
mov
push
loopne
inc
jecxz
pop
pop
jecxz
icebp
test
fdiv
aas
push
fmulp
mov
or
lahf
cs
fsub
pop
leave
fisttp
xchg
ret
xor
bswap
das
jns
bound
arpl
add
ins
das
mov
adc
dec
xchg
pop
inc
fnsave
dec
lahf
addr16
in
aad
neg
xchg
and
mov
mov
fldenv
mov
dec
and
push
(bad)
movs
shl
shr
dec
pop
loope
add
adc
sub
ret
mov
add
cmp
pop
test
pusha
xor
mov
dec
pop
add
std
retf
sub
xchg
pushf
add
adc
retf
enter
daa
and
call
test
xor
inc
lock
jp
sbb
push
cmp
in
jnp
mov
mov
jo
sbb
and
cmps
mov
(bad)
scas
or
jp
lods
pop
push
je
outs
xchg
xchg
int3
push
cmps
pusha
jge
jge
fdiv
and
lds
pop
cmp
iretw
rcr
pcmpgtw
icebp
retf
cmp
dec
and
test
xor
or
data16
retf
push
stc
lahf
xor
test
mov
pop
or
test
xor
mov
addr16
xlat
shl
ja
cwde
push
inc
call
popf
test
adc
sbb
popf
and
mov
out
cld
dec
sahf
sub
mov
push
jp
xchg
fmulp
jle
or
ss
dec
pushf
sbb
int
fmul
aad
lahf
(bad)
fadd
add
jne
aas
xchg
sub
enter
lds
jno
test
sbb
fst
call
mov
inc
mov
into
push
fmulp
cwde
push
dec
icebp
or
inc
ins
test
dec
stos
mov
stos
inc
sub
ins
out
xchg
mov
mov
jp
cmp
jg
call
fldcw
add
aad
push
(bad)
push
jl
stos
into
push
mov
pop
xchg
add
mov
stos
loopne
neg
outs
out
test
adc
push
push
xchg
dec
ja
punpckhwd
mov
inc
scas
mov
push
aas
daa
pop
rcr
lock
int3
mov
stos
and
pop
dec
ja
loope
aam
(bad)
push
sti
xchg
sub
jns
in
push
push
call
sub
das
mov
std
ins
(bad)
retf
cmps
jecxz
inc
rol
sub
es
test
and
pop
push
(bad)
mov
jbe
fwait
mov
neg
(bad)
adc
pandn
cwde
and
cmp
outs
fwait
inc
sub
fistp
dec
pop
mov
repnz
mov
jl
rcr
adc
pop
xchg
out
sub
sub
adc
jp
jbe
dec
js
in
retf
adc
pop
push
sub
arpl
imul
test
jbe
scas
push
mov
pop
not
sahf
(bad)
shr
es
fldcw
cmc
xor
and
xchg
fucom
and
jge
rcl
dec
push
fiadd
adc
call
mov
push
jne
test
mov
(bad)
loopne
in
pushf
xchg
scas
xchg
mov
mov
push
xor
inc
pop
jbe
mov
leave
aam
add
xchg
addr16
adc
(bad)
fiadd
xchg
fild
xor
enter
dec
jnp
sub
dec
mov
mov
mov
in
cmp
test
jae
dec
enter
lods
and
add
out
jl
jmp
dec
xchg
sti
imul
mov
rcr
ror
push
push
sbb
cmp
push
jne
pusha
mov
aad
sub
xlat
or
push
scas
xor
sbb
or
rcr
dec
neg
or
mov
lock
jle
ret
ret
jo
jb
and
nop
xor
stc
jbe
mov
clc
mov
fstp
and
ins
cmps
fbld
rcr
idiv
lods
cmp
xor
inc
in
int
add
gs
mov
mov
pop
pmulhw
jge
adc
ss
and
out
cmc
imul
movs
mov
imul
jmp
lods
gs
cmc
or
(bad)
ffreep
mov
mov
int
mov
push
daa
or
rcl
and
inc
cmp
popa
push
mov
rcr
mov
cmp
test
pop
push
std
rol
(bad)
dec
cld
rcl
imul
dec
xor
jne
sub
adc
pushf
rcr
pop
out
inc
cmp
shr
push
or
lea
mov
cmp
fcmovnb
jge
dec
sbb
frndint
cmp
inc
sbb
outs
or
jp
sbb
mov
mov
pop
mov
clc
adc
inc
mov
adc
xor
push
cld
(bad)
xor
adc
retf
mov
hlt
leave
test
xor
(bad)
inc
repnz
ret
push
enter
(bad)
adc
imul
lea
sbb
mov
pop
and
sbb
mov
sti
lods
ja
(bad)
mov
pop
sbb
hlt
mov
lods
aam
or
add
pop
popa
sbb
movs
ins
iret
xlat
lock
cmp
cmp
jmp
pop
repnz
mov
ss
(bad)
call
jb
cmp
aaa
cmc
cmc
gs
std
or
inc
jb
xor
pop
inc
mov
inc
xchg
adc
into
into
sub
lods
(bad)
jecxz
dec
sub
sbb
(bad)
push
lock
sub
rcr
out
mov
push
into
daa
fwait
ss
ds
int3
sub
out
and
push
pop
xor
clc
adc
cwde
std
fs
sbb
(bad)
adc
cmp
jno
mov
sbb
xchg
cmp
xchg
cmc
jg
xlat
adc
adc
aad
mov
and
icebp
bound
stos
shr
ror
ds
push
push
fld
jmp
(bad)
shr
mov
jecxz
sbb
push
xchg
add
jmp
ret
inc
imul
adc
jecxz
mov
(bad)
jmp
iret
dec
call
je
sbb
jl
xchg
ret
retf
out
adc
pop
aam
repz
xchg
shl
lahf
cmp
jmp
cmp
or
aad
ss
sti
rcr
or
jmp
ror
xor
std
loop
(bad)
mov
sub
(bad)
cli
in
cld
or
stos
fistp
fwait
inc
jo
push
pop
push
add
fld
scas
push
xor
mov
xchg
mov
push
inc
dec
cmp
sti
pop
xlat
jl
ret
mov
loop
sub
xchg
pop
mov
jge
data16
and
inc
cwde
shl
dec
(bad)
outs
push
or
int
popf
inc
inc
lahf
adc
sbb
in
inc
fs
cmp
push
aad
add
adc
data16
scas
sbb
mov
jo
in
ficom
jbe
adc
hlt
(bad)
stos
pop
mov
cmps
scas
pop
push
(bad)
dec
sub
pusha
jo
adc
xlat
xor
or
dec
ss
imul
ror
lock
mov
int
inc
pop
xchg
push
retf
inc
mov
mov
pop
nop
fmul
mov
addr16
sub
pop
fnstsw
push
and
mov
push
or
fcmovu
mov
cmp
sub
stc
jo
xchg
or
jb
jecxz
repnz
pop
jne
test
cmp
shl
pop
loopne
mov
imul
and
int3
shr
xor
int3
adc
xor
mov
(bad)
movs
aaa
cld
xchg
xchg
cmp
jne
(bad)
add
cmp
lea
pop
out
and
pop
jo
aad
loope
sub
sbb
jl
add
and
add
xor
cmps
jae
pop
mov
fisubr
mov
add
sub
pop
mov
movs
and
test
dec
xchg
movs
sub
stos
mov
mov
popa
out
push
ins
or
(bad)
icebp
cs
sbb
div
push
xor
sbb
push
mov
ficomp
(bad)
daa
jle
out
push
mov
and
repnz
pop
pop
mov
sbb
repnz
dec
(bad)
inc
(bad)
into
ja
fwait
and
pop
ret
sar
jge
div
sub
daa
mov
call
lock
adc
int3
fist
movs
sbb
sbb
int3
fst
inc
outs
in
dec
cmps
xchg
pop
movs
inc
dec
cmp
out
sbb
arpl
push
das
cmc
loope
push
or
mov
push
sbb
inc
ss
or
dec
xchg
jae
mov
add
fmulp
mov
dec
or
clc
xchg
push
add
sub
mov
and
and
dec
xor
mov
jno
cli
out
ins
js
(bad)
stc
pusha
bound
sahf
test
retf
xor
outs
dec
arpl
nop
push
clc
imul
rcl
cmps
sbb
and
inc
popf
call
add
push
cmp
mov
leave
cmp
mov
sub
xchg
xor
mov
dec
adc
lock
retf
mov
push
pop
nop
adc
retf
sub
jb
push
retf
sbb
pop
mov
je
popa
sti
fadd
xchg
inc
jge
mov
push
adc
inc
pop
movs
mov
cmc
bound
mov
out
xchg
popf
or
push
push
sbb
xchg
sbb
jecxz
adc
ror
push
out
jp
pop
or
popf
cmp
xchg
sar
inc
sub
push
or
jg
xchg
dec
jl
dec
jbe
pushf
out
test
outs
fadd
xchg
mov
mov
imul
dec
or
cmp
sbb
loope
out
arpl
cwde
jmp
fs
ret
jl
add
push
ins
push
sbb
adc
inc
inc
xchg
fist
xor
iret
fbstp
inc
push
in
leave
ficomp
or
into
out
push
data16
retf
ja
popf
and
ins
adc
adc
sub
mov
pop
push
pop
in
in
xor
cs
and
shl
imul
pushf
cmp
fild
stos
lea
mov
leave
lahf
mov
dec
jnp
push
xor
dec
or
test
aas
js
out
ss
scas
mov
add
test
ss
cmps
cmp
push
pop
repz
out
scas
push
lods
and
and
fneni(8087
or
sub
hlt
add
sbb
mov
xchg
xchg
mov
or
bnd
(bad)
cld
enter
mov
mov
pop
push
pop
cmp
(bad)
bound
mov
(bad)
pop
xchg
lock
cdq
sbb
lea
cdq
mov
out
dec
aas
push
loopne
test
nop
mov
aas
aas
pop
repnz
out
push
test
lock
mov
jns
pop
jg
inc
xor
test
sub
add
mov
or
scas
imul
and
imul
sub
repz
inc
cmp
test
pop
xchg
lds
test
cmp
mov
ss
int
or
inc
sub
test
mov
xor
xchg
faddp
sbb
push
pop
popf
and
lahf
sbb
fdivrp
popa
adc
dec
(bad)
fxtract
xlat
jle
lds
mov
add
or
mov
cmp
add
ins
lock
dec
daa
lea
xor
mov
inc
push
mov
and
push
icebp
mov
scas
sbb
cmps
xchg
jp
push
cld
pop
push
pop
push
ja
sub
mov
int3
mov
ret
xchg
dec
pop
mov
jbe
pusha
outs
or
cmps
add
fdivp
clc
mov
jo
mov
scas
mov
pop
mov
mov
(bad)
idiv
cmps
or
imul
lea
dec
inc
sbb
into
call
dec
cmp
inc
cli
fimul
and
dec
mov
into
fisttp
fst
xor
mov
test
sbb
test
test
retf
jb
das
fisubr
mov
fist
(bad)
jp
mov
jle
es
push
fucomip
cmp
stos
xchg
add
clc
pop
into
or
cs
and
icebp
mov
mov
jno
ret
inc
mov
icebp
pusha
fadd
call
out
(bad)
out
xchg
ja
push
jg
and
aas
inc
sahf
in
push
fcmovu
push
jmp
jecxz
jae
fmul
pop
test
cs
mov
sbb
ror
dec
rcl
pop
jnp
loopne
dec
pop
xor
cmc
xchg
sbb
ficomp
mov
mov
dec
or
imul
cmps
lahf
and
and
xchg
idiv
outs
add
xchg
and
outs
jno
push
fbld
dec
pusha
mov
or
outs
or
out
icebp
mov
xlat
ja
sar
or
mov
add
sub
dec
imul
push
xchg
stc
push
mov
cld
sbb
push
adc
pop
jl
mov
mov
jmp
xor
pop
xchg
sub
or
push
adc
aas
push
shl
add
cmp
das
jle
in
mov
jb
sub
aas
push
fs
shr
imul
push
push
cmps
and
xchg
js
add
ins
aas
aaa
add
iret
retf
stos
sub
int
popa
mov
arpl
fimul
mov
push
dec
stc
cmps
xchg
cmp
mov
sub
stos
jne
loopne
into
dec
fwait
xchg
push
shr
cs
fwait
ss
and
sub
or
into
rcr
jp
inc
hlt
dec
adc
mov
add
pop
mov
in
enter
adc
int
xchg
or
popf
mov
pop
jecxz
sbb
std
push
in
or
lds
and
adc
cmp
sub
xchg
push
jmp
sub
push
stos
out
iret
cmp
mov
ficom
pusha
(bad)
std
shl
mov
es
call
iret
mov
and
fcom
sbb
adc
jmp
mov
call
sub
xor
stos
shr
xor
iret
jnp
dec
xchg
push
leave
push
mov
cmp
loop
sbb
je
ficom
jp
add
and
mov
popf
fidivr
lods
and
cmps
test
in
(bad)
imul
mov
repnz
or
push
mov
fcomi
outs
movs
loope
dec
repnz
inc
inc
mov
popa
and
xchg
or
dec
inc
test
test
test
mov
in
pop
in
ret
mov
push
inc
ffree
stos
push
imul
test
fdivr
into
je
ror
jge
jbe
repnz
mov
cs
xchg
adc
ins
mov
sub
jbe
das
dec
clc
adc
dec
lea
mov
popa
cli
cwde
ror
sub
pop
xor
pop
jmp
dec
(bad)
and
shr
or
jle
mov
cmps
movs
mov
pusha
out
loop
cmove
jmp
out
mov
retf
sbb
jp
ja
sub
fild
(bad)
or
ds
push
sub
repnz
int3
js
mov
ins
aam
jp
mov
dec
or
mov
mov
outs
mov
(bad)
jge
push
jo
jecxz
xchg
and
xor
mov
xchg
pop
daa
pop
test
mov
in
jns
pop
push
bound
mov
push
out
and
and
xor
xchg
sti
xchg
or
in
rcr
add
sub
add
mov
mov
(bad)
jns
mov
test
arpl
cdq
les
into
sub
jmp
inc
dec
mov
in
xchg
sub
mov
push
lea
ins
ret
lahf
jg
and
lods
xlat
enter
xchg
add
dec
pop
mov
fmul
clc
cmc
nop
or
inc
jbe
push
daa
xor
and
pop
movs
stos
cdq
test
xchg
jbe
add
pop
xchg
and
inc
mov
push
fidiv
rcl
(bad)
int
mov
or
mov
js
jnp
stos
neg
jne
jno
stos
or
mov
inc
dec
sahf
pop
and
jge
std
jae
push
pop
sbb
jge
sub
inc
mov
cmp
test
enter
ja
or
(bad)
fmulp
and
mov
push
and
jns
mov
and
out
test
dec
fsubr
cmp
and
sbb
or
or
pop
push
ins
pop
int3
push
out
dec
mov
call
dec
cmc
in
mov
les
xchg
and
mov
sbb
dec
add
punpckhbw
pusha
popa
pop
rcl
adc
aad
outs
(bad)
xor
aas
and
pop
push
xchg
xchg
jo
jb
cmp
inc
sub
pop
adc
outs
push
xchg
scas
and
pusha
push
call
xchg
mov
mov
imul
add
iret
mov
and
cli
and
imul
lock
jbe
ret
inc
and
push
mov
shr
ins
pushf
sbb
dec
pushf
jl
push
(bad)
pushf
int
data16
cs
pop
xor
retf
adc
cmps
mov
cdq
xchg
xor
sub
inc
sahf
adc
sbb
sbb
mov
pop
loopne
xor
push
xor
into
loope
jmp
mov
adc
retf
jo
pusha
add
mov
and
test
bound
sub
mov
push
std
loop
ficomp
pop
and
ret
and
sbb
clc
or
popf
push
jmp
adc
mov
int3
and
imul
push
dec
mov
and
clc
imul
je
in
arpl
test
scas
outs
and
sub
loope
pop
es
add
or
repz
movs
(bad)
mov
pop
bound
fisubr
jb
push
or
xor
imul
or
jl
cmp
ror
mov
jg
xor
xor
or
fidivr
std
sbb
inc
cmp
setbe
movs
mov
(bad)
arpl
jbe
add
daa
jmp
lods
inc
out
addr16
pop
sbb
push
xchg
js
push
test
repnz
test
rcl
sub
jmp
cwde
mov
test
jmp
dec
jmp
mov
sar
loope
fadd
in
sub
hlt
mov
repz
sbb
ins
loope
repnz
inc
push
mov
mov
push
cdq
pusha
dec
inc
sub
es
test
test
cmp
leave
clc
popf
pushf
sbb
add
pop
inc
push
aaa
fisttp
outs
ret
retf
mov
in
test
pop
dec
das
daa
jo
push
or
iret
repz
loope
adc
fwait
dec
test
mov
(bad)
aam
loopne
jmp
mov
xor
(bad)
cmp
mov
(bad)
fiadd
jne
lods
pushf
daa
and
movs
fld
rcl
or
xrelease
or
add
in
rcr
cmps
sbb
stos
push
cvtdq2ps
lds
pop
pop
sbb
mov
xor
dec
jne
or
ret
jns
repnz
mov
adc
mov
dec
gs
inc
xor
(bad)
mov
repz
in
xlat
push
sbb
dec
mov
add
xchg
ds
out
sbb
and
cs
shl
xchg
into
mov
lods
inc
mov
ret
adc
sti
jmp
fdiv
out
dec
div
mov
xchg
imul
jl
mov
pop
icebp
cdq
jg
pop
fcom
ror
or
lds
push
jmp
and
ret
dec
push
or
or
rol
fild
lock
xchg
cmp
(bad)
push
or
mov
dec
addr16
(bad)
push
xchg
stos
xor
push
cmps
shl
fdiv
lahf
daa
adc
scas
inc
test
das
xchg
in
lock
jb
dec
je
mov
in
add
ds
fcomp
jp
clc
bnd
cld
repnz
jo
int
mov
mov
jae
jp
stos
popf
push
sbb
lods
pop
sbb
jb
pop
jmp
loope
dec
mov
dec
stc
mov
ret
lods
jae
aad
mov
cwde
pop
aaa
and
adc
dec
(bad)
xchg
xchg
out
inc
fnsave
je
aas
dec
jge
mov
les
lahf
cmp
dec
mov
adc
lods
sbb
inc
imul
fdivr
outs
sub
maskmovq
imul
mov
out
fadd
(bad)
fmul
mov
std
and
(bad)
inc
jp
push
iret
icebp
fs
mov
jmp
scas
add
mov
mov
add
mov
pop
cmp
test
cmps
(bad)
sahf
dec
mov
cmps
aaa
imul
in
sbb
vpmulhuw
shl
test
or
mov
call
pop
jbe
stos
add
dec
int3
mov
mov
shr
inc
jae
std
cli
fidiv
inc
and
int3
pop
cwde
outs
mov
add
movnti
sar
stos
xor
out
int3
xchg
mov
cmc
inc
nop
cmp
fs
or
jle
stc
mov
loop
(bad)
std
push
popa
cmc
pop
pop
add
outs
je
sbb
arpl
sub
sbb
xor
enter
mov
lahf
movs
rcl
pop
pushf
fistp
mov
cmps
mov
out
cld
jecxz
scas
outs
sbb
sub
test
scas
arpl
loopne
inc
call
ror
jns
lods
dec
stos
push
and
add
stc
pop
mov
and
pop
in
mov
cli
popa
mov
mov
pop
fst
int
fwait
mov
mov
sub
xor
cmp
mov
outs
call
xchg
scas
mov
lahf
adc
test
inc
inc
or
bound
lahf
dec
aas
push
ja
leave
mov
pop
push
and
pop
sbb
call
rol
pop
fist
repz
adc
mov
dec
test
in
sti
dec
nop
out
(bad)
mov
sub
jg
pusha
mov
sbb
bound
push
pop
mov
mov
bound
mov
lds
aad
jnp
lods
enter
mov
inc
sub
out
fimul
inc
adc
pop
mov
call
jmp
mov
push
sbb
jmp
dec
mov
(bad)
aam
inc
outs
mov
pushf
mov
cmp
pop
adc
cwde
mov
cmp
cmp
cmps
sub
dec
call
xor
cs
movs
push
xchg
cmc
mov
movs
sbb
and
lods
mov
cwde
cs
pop
repnz
mov
shr
std
pop
fcom
dec
imul
(bad)
fisttp
and
pop
jge
fcomp
leave
fmul
ins
mov
imul
loope
(bad)
mov
adc
sbb
loope
mov
out
enter
leave
ds
out
dec
mov
shl
scas
adc
dec
scas
movs
sub
call
int3
popa
adc
retf
add
mov
scas
xor
xchg
(bad)
cmp
inc
mov
test
sub
scas
cmp
movs
jo
dec
xchg
call
ror
jns
std
cmp
push
sbb
stos
in
lahf
call
pop
repz
or
jg
(bad)
sub
mov
rcl
xchg
add
mov
or
aad
xchg
pusha
sub
mov
hlt
inc
int
(bad)
jl
retf
loop
(bad)
dec
hlt
lock
aaa
xor
adc
jno
in
and
into
popf
je
pop
dec
push
xor
ds
sub
jmp
mov
dec
ins
mov
mov
rcr
inc
and
sub
adc
fucomp
icebp
or
aad
add
pop
pop
and
aad
sub
sbb
std
(bad)
ret
outs
xor
aad
jno
sbb
xor
shl
mov
retf
jne
push
not
inc
out
in
cmp
add
imul
retf
and
shl
jl
sub
jecxz
cmps
addr16
pop
stos
xor
xor
cmp
(bad)
lods
xlat
inc
inc
mov
loop
and
lock
xchg
cli
call
cli
add
stos
popf
adc
fisubr
iret
ds
pop
jns
stos
pop
pushf
xor
dec
inc
repz
(bad)
mov
loop
(bad)
test
(bad)
data16
(bad)
xchg
sti
or
mov
or
popa
inc
mov
xchg
daa
dec
dec
fnstcw
shl
pop
nop
push
xchg
lock
bound
cld
nop
std
mov
xchg
lds
test
(bad)
push
mov
in
clc
xchg
pop
hlt
ja
push
aam
jb
(bad)
adc
adc
push
fisub
xchg
shr
out
push
jne
push
icebp
xchg
cmps
out
jo
and
imul
lahf
test
(bad)
mov
xchg
and
shl
dec
outs
jge
gs
test
out
(bad)
aam
push
fwait
push
xor
ins
xchg
fwait
pop
lds
and
fwait
mov
push
xor
jecxz
ins
mov
xchg
xchg
rcl
add
retf
xchg
lods
repz
(bad)
(bad)
nop
adc
test
out
in
ss
hlt
xor
call
and
fcmovu
fidivr
jb
repnz
push
pushf
mov
push
mov
jmp
cmp
jne
and
inc
int
push
pop
movs
jns
add
mov
loopne
push
mov
mov
cmp
aaa
test
dec
out
call
aas
jb
mov
mov
cwde
pushf
xchg
cdq
movs
cmp
scas
call
out
push
jmp
push
push
outs
cmp
jb
mov
fisub
add
push
std
cwde
push
xor
in
pop
fnstsw
mov
aaa
iret
mov
cmp
and
fwait
ds
jmp
call
jle
loopne
test
sub
adc
push
mov
stos
push
pop
hlt
test
xor
mov
inc
cmp
xlat
dec
inc
adc
lods
dec
lods
sti
stc
cld
cdq
push
and
iret
icebp
nop
pop
arpl
int
ret
xchg
test
pusha
mov
scas
jmp
dec
test
ins
retf
(bad)
mov
xor
call
sub
jns
(bad)
jg
xor
xor
packuswb
lds
iret
xchg
sbb
adc
jbe
test
jnp
(bad)
(bad)
sar
mov
jl
rcl
arpl
pop
or
imul
pop
(bad)
mov
in
cmp
mov
out
fs
pusha
jmp
pop
inc
std
ret
cld
push
aas
ja
mov
mov
mov
jmp
mov
ss
bound
and
push
push
jecxz
fimul
lock
jl
xchg
cld
test
call
xlat
xor
aad
repz
call
bound
mov
out
mov
fcmovbe
mov
sbb
pandn
fsubrp
xor
mov
adc
mov
push
out
js
xchg
push
mov
fcom
push
jle
pop
xchg
cmc
lahf
push
in
clc
push
xor
xchg
push
jp
mov
movs
mov
movs
je
cld
fsubp
sbb
movs
add
loop
mov
ins
pop
adc
fwait
jno
push
sti
test
pop
(bad)
ins
pop
test
imul
dec
ret
dec
xchg
shl
mov
shl
cs
sar
xchg
sar
dec
cld
das
jmp
adc
(bad)
xchg
xchg
mov
adc
es
or
retf
mov
mov
jp
xor
or
ins
nop
mov
loopne
ret
lods
or
or
cwde
cmps
icebp
fnsave
mov
jmp
test
dec
test
xchg
jecxz
and
mov
mov
cmp
shl
pop
cmps
out
sahf
jl
cmps
in
sub
xor
scas
int
xor
imul
in
sub
int3
retf
or
mov
psubq
sbb
push
xor
sub
jp
psubd
gs
xchg
cmp
ror
jmp
mov
mov
lahf
lds
or
lea
jo
cwde
adc
sar
outs
arpl
push
stc
call
sbb
jno
bnd
je
lahf
sar
lahf
jb
fdiv
fwait
and
popa
pop
mov
mov
push
pop
daa
pop
stc
sub
das
cmp
add
rcl
sahf
mov
and
movs
shl
inc
(bad)
cmp
jmp
lods
jg
and
xlat
pop
mov
int3
(bad)
sub
aam
data16
repz
inc
cmp
retf
pushf
mov
sbb
xor
stos
inc
into
stos
rcr
and
lock
pop
mov
push
int3
mov
dec
sub
int
aaa
mulps
dec
dec
push
ret
mov
jmp
and
and
data16
std
mov
loope
pop
mov
pop
into
push
jmp
dec
jecxz
jno
fistp
and
sbb
cmp
jns
mov
inc
std
iret
jmp
aad
inc
out
ds
mov
cmp
(bad)
add
in
lea
mov
retf
add
(bad)
push
cmps
pop
in
mov
enter
sub
or
bound
jb
rcr
xor
inc
jb
pushf
jmp
pop
into
mov
inc
scas
(bad)
rol
sbb
fsubr
add
mov
shl
cmc
add
lods
push
jno
rcr
xchg
inc
cmps
or
fmul
lods
out
lds
(bad)
xor
ins
je
adc
pop
cmp
or
js
test
mov
test
call
mov
jmp
js
dec
and
and
xchg
(bad)
pop
enter
out
out
adc
xchg
iret
mul
(bad)
mov
pop
jl
and
xor
fcomp
loope
dec
dec
xchg
int3
in
mov
int
inc
leave
iret
and
sub
dec
push
pop
inc
(bad)
jae
xchg
inc
xor
mov
xchg
fprem
loopne
jle
sub
or
icebp
or
push
or
and
jo
sar
add
test
or
dec
dec
in
in
jno
ins
xor
mov
sub
jmp
add
(bad)
div
dec
adc
pop
or
and
movs
mov
jno
inc
add
mov
out
les
mov
jp
aaa
xchg
sub
push
or
add
add
pop
cs
scas
jg
outs
call
mov
cmps
lock
and
and
mov
pop
jno
jl
cmps
sbb
xchg
aam
xchg
push
cmps
imul
sub
or
jne
sub
movs
jmp
aaa
retf
fisubr
jne
lods
les
sub
push
fcmovb
imul
pop
(bad)
xchg
jne
adc
clc
mov
adc
enter
dec
mov
movs
push
scas
inc
mov
jnp
push
call
mov
stc
stos
sbb
sub
aaa
mov
rcl
push
jp
cmp
aaa
sub
inc
(bad)
pop
push
mov
dec
leave
outs
adc
pop
sub
or
pop
into
mov
push
sub
stos
pop
jmp
sbb
imul
or
jmp
inc
sti
outs
les
pop
cli
mov
jne
xchg
mov
adc
xchg
dec
jnp
mov
mov
mov
or
enter
jbe
jne
mov
loopne
ror
div
push
or
cmp
imul
loope
test
nop
aam
popf
mov
xlat
fcom
lds
in
add
lods
push
push
xlat
inc
or
mov
mov
cmps
lea
sub
cmp
fwait
ds
jecxz
inc
pop
xchg
sub
sbb
add
dec
fld
cwde
xchg
mov
xor
lahf
(bad)
mov
cmp
das
cmps
sub
sub
push
out
cmps
or
dec
xchg
dec
push
cmps
xchg
mov
inc
imul
js
cmp
mov
sub
shr
pushf
pop
cmp
test
mov
int3
sahf
adc
xor
(bad)
or
push
lock
repnz
mov
in
ja
icebp
adc
mov
lds
cwde
push
js
pop
push
lods
mov
sbb
mov
ja
sbb
and
xor
adc
(bad)
or
call
add
cmps
loope
mul
dec
nop
loope
mov
inc
jno
popf
sub
mov
hlt
cs
aam
rcl
add
into
mov
cmp
xchg
adc
and
cdq
movs
add
pop
fidiv
xlat
push
mov
jno
sbb
jno
(bad)
je
fwait
push
bnd
iret
int3
sbb
ins
call
popa
inc
mov
push
adc
popf
dec
fisub
xchg
pop
dec
inc
out
ret
adc
mov
sti
pop
or
and
cdq
into
aaa
in
fldenv
jmp
cwde
sbb
mov
xor
mov
cmp
fild
adc
push
mov
jge
loopne
out
add
in
into
cmp
mov
xlat
sub
push
(bad)
mov
mov
cli
out
xchg
in
and
sbb
push
addr16
pop
call
mov
push
fucomp
mov
cmp
xchg
ror
ss
jb
and
fmul
dec
cld
shl
int3
xor
test
fadd
xlat
mov
sbb
in
lock
mov
cmp
scas
lahf
fmul
imul
addr16
dec
je
int3
fist
test
out
and
ss
push
nop
cmp
pop
repnz
iret
out
xchg
add
cmps
xor
sti
or
outs
and
pop
in
addr16
adc
lahf
pop
sbb
movq
jae
push
xchg
into
sti
mov
xchg
add
clc
(bad)
and
sbb
jb
(bad)
fucom
xlat
or
(bad)
vpslld
add
out
test
out
mov
jmp
cmps
push
in
xchg
push
mov
in
inc
call
std
js
and
push
sub
pop
inc
into
aas
xchg
xchg
sti
movs
in
jnp
idiv
xchg
cdq
arpl
sub
add
xchg
nop
jmp
idiv
sbb
mov
pop
push
mov
xchg
cmp
adc
lock
jmp
data16
ret
adc
loope
inc
cmp
fadd
add
push
bound
lods
repnz
sahf
(bad)
pusha
add
call
mov
sbb
mov
inc
mov
mov
aad
nop
rcl
pop
mov
push
push
push
repnz
fisttp
xor
pop
or
jl
aad
lds
neg
xor
sbb
std
sbb
mov
sub
scas
icebp
add
or
jnp
jmp
dec
jo
loope
add
adc
dec
lds
push
and
popf
(bad)
mov
ret
(bad)
fs
rcr
xchg
(bad)
fcomip
mov
ins
fyl2xp1
out
sbb
jge
inc
daa
out
cmp
or
pop
call
add
xchg
lods
xor
push
mov
dec
out
dec
or
sbb
sub
scas
sub
xchg
and
call
cmp
gs
ret
shr
or
pop
sbb
jmp
jle
pusha
test
out
jecxz
mov
push
(bad)
call
sub
adc
scas
xchg
xchg
pop
inc
jbe
iret
aam
add
es
xabort
rcl
jns
fiadd
sti
sbb
xor
adc
dec
and
jmp
int
rol
and
jg
bound
jmp
ss
push
inc
call
inc
sub
sahf
push
and
loope
(bad)
ins
jge
and
sbb
adc
jge
(bad)
add
popf
xor
and
inc
pop
je
jnp
sub
aam
mov
jae
cmp
push
fwait
xchg
lods
test
test
dec
retf
inc
nop
scas
iret
inc
repnz
(bad)
mov
mov
jno
data16
test
pop
ins
sbb
mov
scas
inc
adc
(bad)
sub
mov
scas
dec
fsubp
jae
or
js
cli
int3
pusha
daa
inc
pop
(bad)
pop
mov
cmp
mov
adc
ins
addr16
pop
cmc
inc
aam
xchg
add
adc
mov
jb
sub
mov
das
data16
aad
cmps
into
in
and
jecxz
(bad)
push
sub
add
in
or
and
fcos
adc
movs
loope
add
pusha
cmc
inc
adc
or
ins
in
sub
test
das
dec
sub
pop
mov
add
pop
(bad)
int3
mov
popf
movs
inc
cmp
lahf
lods
mov
or
lods
mov
sbb
mov
fsubrp
jns
add
cmps
jmp
leave
enter
mov
jecxz
aam
adc
push
add
xor
daa
daa
cmp
lahf
xchg
inc
push
loop
dec
fcom
aaa
sbb
lahf
loope
in
retf
and
dec
cmp
mov
or
jg
cmps
aaa
and
dec
popa
imul
sub
or
cs
test
into
mov
dec
jle
popa
hlt
ret
ins
fs
ds
xor
xchg
or
repnz
push
cli
dec
jno
jbe
or
aam
inc
loopne
out
je
xor
jmp
mov
add
ins
sub
and
sbb
or
addr16
mov
cmp
icebp
ror
pushf
(bad)
stc
dec
ja
xor
push
mov
add
mov
stos
or
mov
cmps
mov
inc
mov
rcr
jnp
ficom
dec
pop
ror
lea
test
loopne
jmp
outs
loop
rol
xchg
push
aas
test
and
cmp
sub
jno
cmp
and
inc
mov
lods
push
ja
in
xor
stos
push
outs
mov
mov
mov
repz
xchg
lods
pop
stc
cmc
xchg
data16
xchg
mov
test
outs
sub
xchg
mov
pop
sahf
jns
push
aas
mov
mov
outs
cmp
std
mov
jnp
mov
adc
add
in
mov
mov
cdq
adc
icebp
mov
jl
cmc
ret
call
sbb
enter
nop
push
cmp
add
xor
(bad)
cwde
les
scas
mov
cmps
inc
sbb
mov
outs
cmc
call
push
imul
cmp
sbb
pop
out
pop
inc
int3
add
jmp
scas
cld
lea
pusha
shr
pop
iret
popa
lods
or
cmp
xchg
fld
push
mov
mov
xor
dec
mov
sub
mov
push
xchg
pop
in
xchg
repnz
aad
sti
(bad)
mov
ins
xchg
xchg
mov
mov
push
cwde
gs
loopne
and
jl
or
sub
es
adc
xor
fwait
add
jb
ds
jae
lahf
nop
jns
xchg
imul
xor
imul
mov
xor
jo
shl
sbb
fldenv
in
por
adc
cwde
int3
cli
mov
(bad)
(bad)
lea
push
stos
stos
hlt
dec
add
les
loop
adc
je
push
mov
jno
cmc
dec
push
(bad)
push
shr
je
iret
shl
fld
inc
jmp
fsub
mov
push
rol
xor
(bad)
or
pop
xor
cmp
push
xlat
xchg
xor
adc
lds
jmp
js
mov
pop
push
mov
fistp
xor
loope
mov
dec
adc
jnp
dec
add
or
fwait
mov
jl
pop
and
ins
add
mov
xlat
jg
mov
add
adc
and
fldcw
mov
test
lahf
inc
mov
mov
jge
ins
icebp
stc
inc
ud1
jno
push
xor
stos
stos
aad
xor
aas
mov
dec
mov
pop
push
pusha
xchg
jns
jns
test
fbstp
es
clc
adc
int
int
ins
push
adc
mov
add
imul
popa
imul
iret
mov
stc
inc
push
cmp
xchg
adc
add
jmp
pop
(bad)
push
fwait
pusha
add
xlat
inc
and
jno
std
cmp
lods
call
add
jno
mov
push
xor
mov
bound
xor
mov
lahf
inc
xor
aaa
add
arpl
hlt
mov
mov
add
mov
inc
sbb
dec
(bad)
xor
into
push
mov
inc
mov
pop
sahf
xor
out
cmc
cwde
mov
mov
mov
and
push
inc
not
xor
fisttp
pop
shl
popf
daa
pop
jmp
sti
sub
sub
enter
sub
cmps
lahf
xchg
ret
add
fwait
loop
or
jl
icebp
jmp
mov
xchg
mov
ds
adc
jl
ins
fimul
into
push
imul
and
jno
rol
xchg
sbb
sub
mov
out
xchg
rcl
and
dec
popa
repnz
out
pop
or
cmc
pop
movs
daa
pusha
outs
stos
popa
mov
dec
jle
cmp
push
arpl
dec
ins
fcom
in
pop
cmp
mov
repnz
mov
mov
retf
mov
fs
sub
out
sbb
repz
lds
or
jecxz
mov
sbb
mov
arpl
hlt
vpunpckhwd
push
mov
and
and
repz
mov
loop
out
xchg
push
push
inc
push
aam
mov
imul
sub
push
pop
jecxz
cwde
or
cmp
out
add
mov
sub
jecxz
push
ja
adc
fistp
mov
movs
rol
push
inc
outs
sbb
adc
stos
xor
jge
or
movs
out
imul
movzx
mov
fcmove
xor
enter
cmps
and
ret
adc
and
loopne
pop
mov
shl
mov
add
stos
rol
call
xor
push
je
and
adc
add
push
jmp
in
mov
and
lahf
add
fstp
add
scas
clc
cmps
imul
adc
fucomp
xchg
daa
push
stos
cmc
(bad)
into
dec
in
in
pop
das
dec
jmp
xor
dec
(bad)
xlat
std
ins
test
cmp
xchg
retf
mov
retf
xchg
push
mov
into
mov
sub
and
es
(bad)
and
les
mov
and
inc
aam
and
mov
enter
sti
fsub
jns
jmp
dec
sub
(bad)
loope
dec
jg
inc
retf
sbb
jg
xchg
jg
sbb
lea
rcl
jno
loop
rcr
pop
in
out
adc
test
inc
pop
adc
cmp
mov
mov
jl
icebp
and
pop
fimul
sbb
mov
xor
dec
loope
sub
(bad)
push
ss
sub
pop
mov
mov
pop
adc
xor
clc
add
xchg
hlt
pxor
clc
cmp
test
stos
leave
push
mov
dec
aas
enter
fidiv
(bad)
cdq
out
cmp
inc
and
jp
fdivr
and
(bad)
dec
out
xchg
jl
xor
cld
push
inc
mov
sub
aaa
call
pusha
dec
outs
jne
push
push
push
pop
mov
cmp
xchg
and
in
pop
jg
jle
cdq
xchg
(bad)
push
cmp
ss
mov
ror
jecxz
dec
push
iret
in
enter
cmps
ret
add
sbb
in
sub
sti
int3
les
push
mov
cmp
xor
pop
lahf
adc
clc
jmp
loop
xchg
in
repnz
ja
pop
push
into
sbb
loop
(bad)
jno
or
mov
retf
mov
mov
adc
mov
mov
sbb
mov
dec
push
xchg
mov
lahf
pop
jle
inc
xchg
in
movs
dec
cmp
adc
inc
pushf
sbb
dec
mov
xor
pop
cmps
retf
shl
inc
imul
and
imul
cld
mov
je
xor
test
movs
loopne
mov
add
sbb
push
enter
test
test
adc
add
jg
sub
or
ja
jne
sti
jl
loope
xor
jne
cs
xchg
arpl
dec
xor
mov
add
mov
jmp
fdivr
pop
loope
lock
and
loope
out
sub
push
pop
out
cmp
stos
test
movs
loopne
rol
jp
and
vmovdqu
or
fisubr
jbe
hlt
int
cdq
pusha
xor
retf
pop
aas
pop
jb
and
lahf
shl
add
pop
call
repz
pop
inc
pop
mov
mov
sbb
aam
jns
test
add
leave
or
pop
and
pushf
mov
dec
xor
ret
retf
pop
aaa
push
(bad)
mov
cmps
mov
xor
cmp
movs
pop
data16
push
in
cld
dec
test
push
xchg
daa
push
aam
inc
push
or
dec
and
jbe
sub
(bad)
cmp
cmp
cld
loopne
cmp
dec
push
pop
icebp
hlt
pop
shl
dec
scas
inc
lock
dec
sbb
aas
push
lds
dec
repnz
sub
jle
add
sub
push
loop
idiv
pop
push
sahf
pop
ins
rcr
(bad)
int
cmp
xchg
repz
int3
sub
test
inc
cmp
adc
jecxz
or
(bad)
and
lods
inc
and
xor
pop
paddb
cmc
mov
push
cmp
mov
jle
cmp
test
test
mov
icebp
pushf
fs
pop
inc
inc
lahf
sub
pop
dec
gs
and
adc
daa
pop
dec
(bad)
jle
add
cmp
pushf
movs
clc
xchg
aam
lds
mov
xchg
sbb
inc
(bad)
aam
mov
inc
add
pop
mov
add
pop
arpl
mov
mov
xchg
push
sub
shl
in
dec
je
adc
push
and
push
and
icebp
data16
out
jns
dec
addr16
sbb
cmp
mov
ins
or
add
in
xchg
sub
lods
test
inc
fisttp
(bad)
stc
adc
aad
jge
aaa
jae
push
cwde
imul
in
pop
jecxz
mov
push
or
dec
xchg
xchg
daa
stos
sub
gs
cs
call
mov
inc
sbb
loop
sbb
test
int
pop
std
cmp
call
inc
or
pop
xor
cmp
jne
cmp
fsub
(bad)
fmul
xor
fidivr
adc
jmp
mov
inc
and
add
add
xchg
lds
sub
arpl
add
xchg
sbb
jp
adc
pop
push
mov
ins
inc
sub
fldcw
sub
clc
add
sbb
mov
push
mov
call
add
test
jmp
aaa
xor
stc
dec
push
pop
xchg
lock
mov
stos
sub
pop
jmp
inc
jl
sbb
or
aam
jmp
sub
int
data16
inc
mov
ins
(bad)
hlt
cli
push
js
popf
dec
jae
xchg
cdq
xchg
mov
add
sbb
add
xchg
cmps
and
test
xor
hlt
adc
in
push
mov
jl
xchg
add
push
inc
div
xor
in
mov
or
xor
iret
or
jmp
add
fst
pop
add
fs
out
scas
(bad)
push
mov
inc
pop
mov
shr
lods
cmps
inc
es
xchg
mov
sub
xchg
mov
sahf
outs
sub
loop
rcl
sub
sub
call
ins
jg
inc
pop
clc
mov
movs
lods
test
clc
jmp
mov
adc
ret
aas
dec
add
imul
pop
sbb
xor
pop
mov
div
inc
or
mov
repz
xor
pop
sti
call
mov
push
loop
fcomip
cli
rcr
ins
loop
xchg
lds
push
jae
test
fsubp
cmp
enter
cmp
fbld
inc
aam
rcl
rol
movs
test
xchg
shl
pop
data16
xchg
add
xor
call
mov
and
sbb
int
mov
je
adc
fcomp
inc
dec
ror
xchg
or
or
hlt
je
mov
dec
fstp
pop
fidiv
repnz
sub
ins
out
(bad)
mov
shl
mov
mov
sbb
cmp
mov
sbb
add
jmp
push
test
and
xor
mov
mov
mov
and
test
arpl
mov
fidivr
add
mov
in
ja
or
dec
popa
mov
mov
jmp
cmp
jns
mov
sbb
cdq
loop
cld
loop
mov
cdq
mov
fdivr
cmc
jne
popf
mov
stos
mov
pop
mov
xchg
std
int3
xor
inc
fisub
das
icebp
xchg
push
gs
inc
into
jo
neg
leave
fdivr
rep
imul
dec
sub
hlt
xchg
call
xchg
fwait
es
in
and
aad
sub
sbb
dec
dec
mov
push
mov
outs
int
cmc
push
fldpi
and
sbb
xlat
rcl
outs
push
mov
mov
adc
xor
nop
pop
into
ja
jg
sti
in
jae
pushf
dec
mov
push
or
test
je
mov
mov
mov
stc
int3
mov
imul
test
cmp
xchg
loop
ror
mov
mov
in
or
xor
mov
xchg
jne
fild
jns
pop
jae
mov
lea
repnz
adc
dec
jns
xlat
in
push
imul
cdq
(bad)
(bad)
mov
mov
ror
in
sub
shl
jp
jl
or
and
adc
sub
add
repz
pushf
pop
adc
dec
adc
loop
mov
scas
jle
mov
sbb
out
loop
mov
push
(bad)
gs
call
sti
pop
mov
pusha
jmp
es
stos
addr16
in
push
fimul
sub
cmp
sub
and
xchg
jns
xchg
cmps
push
mov
xor
inc
and
aas
fmul
sbb
dec
repz
aam
nop
pop
sub
aaa
mov
xor
pushf
mov
or
arpl
fmul
pop
add
xor
mov
push
ret
cmp
push
hlt
addr16
fsubr
inc
sub
jo
shr
lea
inc
cmp
std
and
cmps
push
adc
mov
mov
out
js
dec
inc
jmp
xlat
cld
out
or
sub
xchg
aas
mov
out
sbb
mov
jmp
or
or
mov
mov
cwde
or
call
dec
in
cmp
or
pop
add
sub
js
inc
inc
call
sbb
je
push
xchg
xchg
ins
mov
inc
lods
call
mov
xor
ror
mov
(bad)
cwde
pop
lock
and
cmps
pop
test
mul
cmc
inc
inc
jmp
add
inc
daa
std
xlat
push
pop
int
call
sbb
push
rcr
xor
jbe
add
jle
sbb
jg
ret
pop
and
cmp
retf
jns
xor
cmp
or
(bad)
inc
push
pop
repz
inc
jnp
cmp
sbb
xor
icebp
(bad)
dec
jns
shr
fadd
xchg
psllw
adc
cmc
pop
fild
push
mov
cld
cmps
movs
shl
stos
inc
lds
mov
jbe
lods
pop
sub
retf
mov
(bad)
sub
xchg
pop
dec
fisubr
pop
mov
aas
or
fild
pushaw
repnz
mov
stc
lahf
aad
cmp
movs
int3
pop
mov
pand
scas
(bad)
fld
repz
mov
clc
adc
clc
cmp
cmp
pop
mov
xor
jbe
mov
pop
or
mov
in
fcomp
add
mov
xchg
mov
pushf
das
mov
fwait
mov
(bad)
or
ds
test
jmp
popf
sub
push
ins
jns
(bad)
jb
push
jmp
lods
repz
push
and
es
jae
inc
inc
mov
mov
pusha
or
cmc
call
daa
ss
inc
lea
mov
mov
mov
inc
pop
ja
jbe
xor
jp
dec
lods
out
pushf
fsub
ja
inc
imul
test
and
cld
mov
add
hlt
stc
fs
fucom
push
mov
mov
adc
outs
pop
shr
mov
push
sub
icebp
xchg
jecxz
pop
xlat
and
rcr
push
mov
fimul
and
test
ins
cmc
mov
test
pop
scas
sub
sti
mov
xchg
jmp
jecxz
(bad)
addr16
sub
add
loopne
bound
mov
shr
push
fdiv
out
daa
cmp
not
jmp
jp
stos
pop
inc
inc
mov
jno
fnsave
das
dec
bound
cmp
fwait
and
hlt
test
cld
int3
fimul
add
xor
into
out
fwait
pop
bound
xlat
and
out
cmps
pop
lods
mov
test
dec
iret
shl
gs
lock
jp
pusha
fdivr
mov
sub
cdq
sbb
pop
out
popa
xor
fst
push
cmp
pusha
bound
std
inc
xor
and
ror
mov
adc
into
sbb
scas
adc
xchg
pusha
pushf
and
fld
push
lea
ja
jo
aam
sar
fs
imul
test
dec
(bad)
in
sti
cli
fadd
mov
mov
dec
jecxz
fstp
movs
gs
movs
out
pop
out
mov
shl
xchg
lock
pop
jo
int3
lock
jbe
call
mov
push
xchg
jnp
or
xchg
push
retf
jp
mov
(bad)
and
and
sub
mov
pop
repnz
stc
add
jae
pop
or
xor
xchg
pop
popf
push
enter
dec
pop
ret
xchg
push
push
aad
leave
mov
loopne
imul
outs
lahf
sbb
mov
add
in
jge
sar
and
retf
pop
out
pusha
outs
mov
mov
pop
xor
jl
push
cmp
ja
in
retf
xor
sub
sub
cmps
js
fst
fstp
out
test
aad
loop
fxch
xor
das
fs
jmp
outs
mov
or
pop
sub
jmp
lahf
sub
fs
ret
into
add
in
lahf
fist
ds
call
add
fwait
lods
push
mov
cmp
pop
fisub
lock
rol
stos
inc
mov
mov
xor
sub
or
out
rol
adc
lds
mov
add
jb
aad
leave
push
jmp
xchg
mov
dec
xchg
pop
push
xor
sbb
in
adc
jmp
jg
sbb
mov
push
xchg
ret
add
fadd
or
(bad)
call
aam
fstp
aaa
jns
or
sub
dec
sar
pop
ss
stos
jge
mov
inc
cdq
xchg
sahf
and
sub
lods
ror
(bad)
nop
out
lods
arpl
not
and
iret
push
push
lds
fst
mov
mov
aam
xor
out
inc
retf
das
lods
popa
repnz
and
sbb
push
(bad)
fisubr
pop
cmp
jb
xor
xor
lock
jmp
test
add
push
int
lods
stos
js
aad
fsub
adc
inc
in
xchg
outs
ja
add
lea
mov
or
adc
in
dec
cmps
out
mov
test
and
xchg
and
lock
shr
inc
mov
mov
aad
adc
(bad)
ficomp
xor
(bad)
nop
and
sbb
std
in
scas
js
movs
scas
jmp
rcr
je
pop
xchg
ret
fld
xchg
movs
mov
jae
lea
cmc
sub
sbb
cld
mov
out
retf
adc
jne
mov
icebp
sub
(bad)
clc
dec
addr16
xor
shl
sub
sub
fs
push
mov
pop
cmp
cmc
int
add
(bad)
fdivr
cdq
mov
je
pop
pop
jb
lods
bound
ficom
pop
addr16
pushf
cmc
enter
pop
mov
xchg
fbld
repz
retf
(bad)
mov
fnsave
mov
inc
sbb
div
or
adc
movs
ret
dec
mov
sbb
jae
aaa
jb
inc
int3
cdq
dec
arpl
addr16
jp
cmp
ja
stos
scas
loopne
test
xchg
lea
loop
sbb
dec
test
sti
pop
int3
mov
jg
test
mov
das
rol
xor
mov
sti
out
(bad)
lahf
cld
retf
fwait
pop
xchg
into
shl
dec
and
pop
gs
aad
out
pop
push
mov
sahf
jo
cmp
out
ins
xchg
test
dec
mov
sbb
mov
jns
xor
xchg
mov
dec
in
xlat
sbb
and
(bad)
daa
psubsb
faddp
cmp
aad
mov
inc
adc
shr
repz
leave
repz
pop
cli
clc
ds
adc
mov
jle
mov
pop
adc
in
cmp
sub
mov
ror
and
push
rcr
push
sub
ret
(bad)
inc
xchg
adc
rcr
mov
cdq
jl
test
shl
dec
in
ja
test
jl
xchg
xchg
sbb
and
or
jmp
fs
xchg
push
sbb
das
xor
xchg
jecxz
pushf
fdiv
mov
mov
das
cmp
push
push
cmc
iret
into
cmp
cdq
data16
dec
test
movs
sub
jge
rcr
(bad)
retf
mov
leave
pop
xlat
mov
stos
pop
sahf
mov
cwde
nop
(bad)
outs
dec
out
stos
popa
mov
adc
push
fcomp
rcl
ds
cmc
sbb
mov
inc
or
add
jmp
dec
mov
dec
nop
sbb
in
ds
push
and
fild
fnstcw
and
sbb
ret
push
aad
jmp
call
adc
stos
jmp
or
retf
xor
mov
(bad)
je
test
pop
mov
inc
dec
xor
fild
dec
out
mov
in
pop
js
cld
dec
sub
ins
or
mov
rcl
popa
cmp
into
out
cmp
popf
cmp
mov
push
pop
and
cli
inc
dec
and
es
push
xchg
fisubr
xor
setae
cmp
test
xor
xlat
mov
jb
mov
bound
add
out
sub
xor
lds
mov
dec
ins
lock
dec
sti
enter
bound
push
cmps
xchg
pop
xchg
xchg
out
jne
xchg
cdq
leave
mov
int3
cmp
push
cs
ss
mov
cmps
and
mov
add
and
cmp
cmps
mov
jl
fild
cmp
scas
out
jmp
fwait
pop
cmp
push
mov
lahf
push
repnz
mov
jmp
mov
sbb
mov
mov
inc
nop
jns
push
lds
mov
xlat
addr16
mov
xor
int
inc
push
push
sub
shld
jl
retf
out
adc
jg
shl
pop
sahf
mov
adc
mov
push
(bad)
daa
(bad)
sub
sbb
retf
daa
add
rol
cld
dec
adc
dec
int
mov
push
stos
dec
cdq
jns
icebp
xchg
fs
push
mov
push
out
movs
(bad)
scas
add
(bad)
jne
adc
add
pop
shr
hlt
out
dec
(bad)
mov
mov
outs
ret
je
adc
push
js
mov
repz
pop
hlt
int3
xchg
sbb
cmp
adc
sbb
dec
jb
push
and
xchg
adc
int3
jb
pop
jmp
nop
adc
mov
out
pop
sti
and
jg
sahf
pop
std
cmps
fsub
pop
out
mov
push
xchg
cmp
pushf
pusha
dec
daa
movs
sub
xchg
inc
movs
mov
popf
ja
push
lock
out
xlat
jge
inc
call
in
mov
push
sbb
frstor
std
ds
idiv
clc
aaa
int3
cmps
adc
cmp
push
xchg
push
inc
stos
xor
xchg
scas
add
xor
and
call
pop
mov
adc
pop
mov
movs
xlat
fistp
retf
bound
mov
jge
xor
dec
hlt
(bad)
fldcw
(bad)
in
(bad)
test
shr
mov
xchg
push
inc
cmc
mov
jecxz
enter
jge
js
mov
sub
inc
xchg
pusha
xchg
ror
ror
mov
scas
jnp
popf
or
or
pop
call
cmp
dec
xor
fisubr
mov
mov
rcl
dec
bound
jns
xor
je
pop
leave
addr16
adc
or
mov
mov
sbb
cdq
pop
mov
push
pushf
imul
cld
add
(bad)
jge
jl
in
xchg
ret
cmps
shr
xchg
mov
and
xor
add
js
out
xchg
lods
aam
test
jnp
push
mov
imul
neg
daa
mov
add
push
(bad)
outs
call
mov
lea
dec
addr16
dec
aad
sub
xor
je
and
rcr
mov
mov
(bad)
fstp
les
fwait
sub
aaa
xchg
pop
jge
test
fmul
(bad)
cmp
lods
aam
(bad)
iret
fsubr
adc
hlt
inc
xchg
and
or
(bad)
jmp
pop
(bad)
(bad)
loope
movs
ds
adc
xor
adc
mov
in
inc
pop
repz
mov
mov
dec
xchg
hlt
inc
ja
cdq
int
cwde
jb
dec
xlat
cmc
stos
cli
fcom
sub
outs
pop
fsub
cmps
pop
mov
stos
xchg
or
repnz
shl
pop
pop
cmp
ins
mov
mov
lock
lds
in
push
outs
xchg
and
cpuid
ja
mov
mov
cli
xlat
cwde
pushf
out
or
movs
and
scas
and
int
inc
sbb
jae
sub
and
out
shl
in
push
iret
shl
in
pop
push
pushf
jge
stos
sub
xor
mov
sbb
or
ja
lods
jne
aad
push
inc
(bad)
int3
pop
xor
sbb
dec
pop
fs
lods
mov
and
arpl
add
arpl
out
pop
pop
imul
sub
cmp
int
and
retf
mov
clc
fild
outs
leave
retf
mov
pop
inc
adc
pop
fs
data16
or
fld
push
xor
pop
fmul
inc
mov
cld
popa
aas
sub
and
mov
xchg
mov
ins
cli
pop
imul
pusha
push
aad
(bad)
cs
and
pop
mov
xchg
jmp
nop
jns
mov
(bad)
nop
push
push
jnp
dec
cmps
adc
jns
and
xchg
cmp
push
bound
fsubr
shl
call
mov
mov
jle
popf
fiadd
add
int
lahf
fs
pop
int3
test
or
adc
test
repnz
sub
call
mov
rcr
cmc
adc
jmp
jmp
xor
ja
jb
add
sahf
leave
imul
and
imul
push
scas
sub
lock
mov
xchg
xchg
mov
ins
loop
xchg
and
shl
fucomi
pop
mov
sbb
jbe
sar
jg
ss
lods
cmp
pop
jae
test
add
mov
push
outs
movs
push
aaa
fcomp
(bad)
mov
lods
(bad)
in
xchg
mov
cmc
mov
dec
movs
jne
lods
mov
adc
(bad)
add
pusha
mov
out
dec
xchg
inc
jecxz
lea
adc
sub
movs
cmps
test
push
adc
lock
cmps
fstp
popa
out
ror
push
idiv
dec
lods
int
inc
push
adc
es
pusha
cs
(bad)
jns
loopne
mov
shl
mov
push
and
xchg
ror
add
(bad)
clc
adc
push
retf
std
jns
mov
std
inc
(bad)
ins
cdq
and
in
je
mov
push
jmp
ror
data16
scas
call
cmps
dec
scas
(bad)
dec
(bad)
mov
inc
push
and
sbb
ret
xchg
mov
fstp
add
cmp
fldenv
xchg
adc
daa
mul
test
xchg
aaa
xor
pop
mov
cmc
outs
mov
int3
dec
in
jae
repnz
push
cdq
aaa
mov
pcmpeqw
int3
aas
sub
add
push
(bad)
jns
or
in
cmp
popa
add
retf
push
mov
call
fcmovb
xchg
and
or
sub
retf
adc
mov
bound
lds
xchg
push
adc
loopne
push
or
out
icebp
cmp
aaa
mov
jmp
pop
xchg
adc
mov
cwde
dec
scas
push
push
loopne
mov
xor
cmp
(bad)
inc
push
xchg
sbb
les
adc
pop
sbb
nop
and
mov
(bad)
cld
stos
pop
jne
and
jmp
stos
dec
ins
les
mov
and
mov
out
aad
mov
daa
pushf
push
inc
or
call
xor
or
leave
push
fcom
out
mov
fs
aaa
ss
pop
xor
jle
cmp
push
imul
mov
lock
xchg
into
je
leave
mov
je
sahf
jno
push
adc
pop
dec
mov
test
mov
xchg
push
je
adc
(bad)
out
or
lea
push
add
push
xchg
out
push
inc
stos
or
mov
rcr
aad
icebp
not
(bad)
retf
mov
std
jns
add
imul
pop
and
(bad)
or
adc
push
bound
nop
(bad)
mov
outs
mov
pop
cmp
mov
push
or
inc
fisubr
iret
das
ins
dec
sbb
push
ds
xchg
push
popa
popf
push
cmp
inc
xor
enter
bnd
scas
scas
mov
stos
jmp
or
movs
test
xor
mov
mov
mov
sub
loop
push
loop
mov
push
repnz
xor
int3
lea
mov
xor
scas
add
inc
out
mov
(bad)
ja
not
mov
xchg
or
inc
dec
adc
xlat
mov
scas
xchg
shr
mov
xchg
aad
int
jecxz
rcr
test
idiv
movaps
ret
mov
add
stos
ss
dec
mov
pop
dec
mov
or
mov
fxch
jmp
sub
aaa
push
add
arpl
fnstsw
in
sub
loopne
adc
loope
push
xor
in
sub
out
inc
cmc
or
mov
mov
jne
out
gs
js
adc
cmc
xchg
shr
inc
xchg
fwait
and
mov
dec
mov
icebp
cmp
jecxz
xchg
(bad)
mov
test
xchg
push
ret
clc
out
fcom
sub
pop
mov
xchg
jno
jmp
adc
adc
dec
shr
fstp
pop
fs
pop
rcl
shl
add
fs
in
mov
ret
xor
xor
lds
push
ds
lds
inc
int3
xchg
sub
mov
cmc
jnp
mov
loop
inc
push
mov
push
dec
(bad)
outs
ins
cmc
add
push
sub
adc
sub
push
scas
and
pop
push
push
data16
les
mov
cld
sub
add
add
das
ror
dec
jmp
add
push
dec
pop
jge
ins
cmps
cmp
add
jle
push
push
inc
inc
(bad)
in
adc
fdivr
fsub
xlat
adc
adc
scas
pop
and
mov
push
and
add
xchg
idiv
mov
in
jno
mov
imul
in
sti
push
movs
push
mov
pop
push
and
mov
loope
loop
leave
jno
mov
jnp
jl
in
rcr
jmp
mov
fs
scas
mov
es
adc
adc
add
xchg
sub
neg
outs
stc
push
add
mov
mov
mov
mov
cli
adc
lahf
outs
out
(bad)
je
sar
jge
movs
push
stos
in
leave
pop
retf
sahf
sub
in
push
push
(bad)
test
nop
lahf
sub
sahf
rol
push
mov
(bad)
(bad)
arpl
xor
fisubr
fs
adc
stos
dec
inc
xchg
cwde
(bad)
jb
xlat
sub
inc
cmc
outs
shl
fst
stc
push
inc
adc
jb
aam
push
in
(bad)
mov
bound
adc
outs
cmp
loopne
lods
sbb
cdq
imul
sti
jae
ds
int
in
int3
cmc
je
ss
in
gs
fimul
mov
and
div
sbb
push
loop
js
adc
in
outs
push
or
pushf
jmp
int
rcl
cwde
inc
jge
out
cdq
nop
or
sahf
cmp
jnp
sbb
std
push
lods
adc
dec
fucomi
xchg
cmc
pop
(bad)
test
jmp
pop
and
pop
cmc
data16
popa
mov
mov
or
pop
adc
dec
pop
xchg
inc
mov
xchg
sbb
or
dec
fdivr
push
pop
scas
mov
pusha
sub
out
out
push
xor
adc
test
ins
mov
in
and
sbb
rcl
xor
ficomp
cli
aam
jmp
push
sbb
push
sub
(bad)
sahf
ja
dec
push
pop
pop
rol
sbb
sahf
sub
test
mov
add
pop
sub
xchg
add
add
adc
mov
cmc
aaa
xor
add
sbb
pushf
ficom
jle
retf
movs
mov
xchg
test
inc
es
and
pop
or
xor
xchg
retf
xchg
les
mov
sti
cmp
sub
mov
adc
dec
jg
movs
lds
xchg
mov
in
mov
and
nop
mov
out
sbb
cwde
push
loopne
ja
aam
cwde
sub
ror
inc
dec
cmp
rol
adc
mov
jne
add
sbb
test
pop
or
cmp
xor
inc
jmp
cmp
retf
dec
xor
ins
sbb
(bad)
cmps
inc
jge
sub
push
pop
imul
ss
dec
pop
cmp
xchg
xchg
scas
movs
adc
iret
sub
jge
mov
scas
sub
stos
outs
sub
out
sub
add
xchg
xor
neg
popa
cmps
jbe
mov
pop
pop
xchg
pop
inc
inc
sbb
cmp
retf
sub
pop
fnstenv
shl
sar
sar
adc
and
movs
sbb
push
jnp
push
push
jb
fld
mov
bound
cmp
es
int3
push
scas
mov
adc
cmc
movs
ss
lahf
jp
or
vpshaq
test
pop
fbstp
xlat
inc
nop
dec
pusha
pop
add
mov
adc
and
mov
ja
nop
out
xlat
pop
pop
cmps
xlat
(bad)
xchg
out
js
jmp
ds
lea
push
stc
mov
or
cdq
xchg
push
in
ins
out
jge
xor
popf
xor
push
mov
add
and
gs
mov
gs
outs
add
pop
push
xchg
mov
(bad)
out
adc
jle
clc
mov
std
pop
or
in
ret
aaa
mov
xor
dec
je
sbb
mov
js
mov
push
fsubp
dec
(bad)
xor
mov
push
mov
dec
jmp
inc
adc
xor
fsub
cli
leave
xchg
aaa
loop
(bad)
jmp
stos
sbb
je
inc
jo
lods
mov
inc
bound
inc
sbb
(bad)
mov
jns
cld
inc
push
xchg
add
cmps
pop
repnz
mov
imul
sub
push
sub
xlat
jbe
xchg
mov
mov
adc
mov
add
retf
es
jecxz
sub
add
(bad)
fild
ss
pushf
dec
or
mov
sbb
(bad)
xor
adc
and
retf
dec
hlt
fcomip
cld
add
or
inc
sahf
adc
and
fld
loope
dec
mov
or
xchg
xchg
push
sar
and
jne
mov
xchg
mov
jp
mov
xlat
dec
lods
inc
repnz
mov
popf
je
loop
fst
xchg
imul
out
pop
add
outs
mov
je
xchg
stos
or
js
pusha
hlt
and
inc
mov
fidiv
test
jns
cmp
ficom
jecxz
loop
pop
xchg
icebp
cmps
fidiv
adc
addr16
xor
inc
test
inc
jno
inc
pop
sub
jg
popa
pop
mov
jmp
retf
mov
pop
push
inc
adc
dec
mov
ror
cli
mov
jge
out
adc
inc
out
dec
test
je
add
outs
mov
scas
sti
jge
loop
mov
cli
mov
mov
and
adc
inc
leave
out
fisubr
cmp
repnz
push
cmp
rol
adc
cdq
xchg
sbb
(bad)
mov
xor
mov
cmc
cmps
lock
dec
(bad)
mov
push
cmova
out
sub
mov
or
push
(bad)
push
or
test
inc
xchg
idiv
aaa
and
inc
adc
mov
nop
xor
fld
add
xchg
jns
adc
adc
in
mov
mov
out
test
fcom
jns
out
(bad)
and
out
lds
(bad)
stc
stc
not
jmp
jnp
arpl
cmp
fcmovnb
push
dec
(bad)
out
or
inc
dec
sbb
std
jge
dec
jne
loope
(bad)
mov
push
xor
pop
retf
mov
scas
pop
jo
sub
jbe
test
inc
lock
ins
inc
das
xchg
fcmovnbe
mov
add
dec
test
dec
ret
retf
pop
in
jmp
in
mov
test
push
addr16
nop
jl
bound
mov
xchg
sbb
mov
xor
inc
sub
mov
inc
gs
jbe
hlt
js
jno
xor
(bad)
jg
lods
femms
in
in
aad
pop
jge
and
dec
xchg
mov
cld
das
sub
leave
ret
in
cmps
sub
adc
xor
pop
push
aam
mov
test
cmp
xchg
mov
or
pop
adc
xor
push
pop
adc
xlat
ds
xor
xor
jnp
push
mov
push
add
adc
(bad)
xchg
pop
inc
retf
adc
call
inc
cmc
push
std
popf
pop
add
mov
aad
pusha
dec
cmps
retf
jmp
sbb
xor
ret
aaa
lea
(bad)
cmp
xchg
push
fild
mov
addr16
ret
push
out
loop
or
icebp
(bad)
nop
mov
inc
pop
in
ds
call
pop
push
adc
cmp
nop
adc
adc
xor
test
shl
dec
nop
addr16
add
(bad)
sub
mov
sar
pushf
push
call
cld
in
sbb
jmp
pop
pop
pop
pop
mov
mov
nop
jo
pushf
add
sbb
inc
scas
loope
movs
mov
int
mov
outs
sub
loopne
xor
nop
in
mov
out
out
(bad)
retf
pusha
jno
clc
div
loop
mov
add
push
cld
mov
fcom
fs
std
aas
pop
xchg
shl
push
in
out
push
mov
lds
mov
pusha
jns
pop
or
sbb
or
mov
dec
lea
in
or
pop
mov
pop
(bad)
sbb
sbb
clc
rcl
cwde
lods
mov
jle
div
enter
xor
arpl
xchg
pop
xchg
cmps
adc
cmc
pop
iret
mov
aam
xlat
adc
mov
jle
ror
retf
fadd
jg
mov
adc
inc
jb
jle
stos
(bad)
pop
pop
repnz
mov
out
push
cs
jp
xchg
je
jl
xchg
lahf
popf
je
pop
mov
push
fs
jnp
icebp
sti
outs
lods
sti
dec
and
sahf
inc
or
jge
xchg
into
mov
and
ror
sub
arpl
gs
sub
sub
stc
jmp
shl
mov
inc
xor
hlt
cwde
into
lods
jecxz
les
inc
or
call
inc
imul
aam
(bad)
loop
mov
sti
add
jae
mov
mov
out
dec
add
push
sub
rcl
cs
cmps
xchg
aas
adc
inc
mov
sbb
mov
shl
stos
and
scas
in
push
lods
add
jbe
ret
cmp
cld
and
loope
std
leave
add
cmp
mov
in
pop
(bad)
fidiv
and
hlt
stos
jne
inc
mov
sub
mov
xor
add
stos
std
out
mov
mov
cmp
(bad)
cli
push
pop
xchg
adc
and
call
mov
aad
xchg
xor
test
loope
fdivp
call
in
fist
cdq
mov
daa
int3
jne
shr
jle
loope
push
jne
sub
mov
sub
add
fcmove
jg
imul
mov
mov
stc
ret
mov
icebp
cmps
push
dec
mov
jmp
sbb
jmp
test
mov
sbb
adc
mov
nop
in
lea
and
repz
dec
fidiv
fs
jp
jmp
(bad)
sbb
dec
js
jmp
cmp
aad
add
and
cmp
inc
pop
sti
(bad)
or
outs
daa
jae
jle
pop
(bad)
sub
(bad)
mov
hlt
xor
xchg
cmp
cli
sbb
xor
pop
ret
lods
mov
ss
sub
mov
mov
js
xlat
mov
jecxz
mov
xchg
mov
sub
pushf
daa
and
adc
stc
int
nop
jg
ins
fisttp
and
mov
sbb
jp
pop
mov
jecxz
adc
clc
popa
xchg
pop
and
mov
xchg
lahf
lahf
and
daa
mov
mov
adc
inc
ss
mov
ret
int3
and
bound
mov
dec
cmp
mov
loop
aam
lods
enter
pop
test
gs
jb
mov
ret
pusha
daa
(bad)
rcr
mov
int3
jmp
adc
add
movs
test
sub
or
cmps
pop
lods
cmp
mov
les
cs
ins
pop
adc
pop
xor
mov
xchg
cmps
xor
jg
sub
sbb
or
in
pop
lods
push
xor
ret
inc
test
pop
jae
pop
iret
sub
xlat
push
inc
lods
sbb
cmp
in
fcmovne
and
icebp
dec
clc
ficom
test
xchg
ss
aas
xor
cs
arpl
leave
add
fstp
pop
adc
adc
inc
or
sar
js
xlat
outs
ds
pushf
call
ss
xchg
cmp
mov
cmp
dec
pop
js
idiv
arpl
xor
sbb
xor
pusha
ins
mov
jmp
dec
jb
movs
dec
dec
push
in
add
and
jae
in
scas
and
jno
fcmove
cmp
mov
and
fwait
and
aaa
mov
xchg
out
shl
adc
clc
in
and
jb
push
pop
ja
cmp
imul
xchg
bnd
stos
dec
clc
jl
push
movs
shl
xchg
dec
pushf
pop
push
push
xchg
push
fs
clc
xor
aad
jge
in
mov
bound
xchg
daa
in
loop
dec
mov
cmp
out
in
mov
out
ret
sbb
or
cs
lds
add
jae
iret
inc
aas
adc
add
push
add
mov
test
add
cs
fstp
lods
jge
mov
icebp
pop
je
mov
icebp
out
cdq
rcr
(bad)
and
pop
mov
fwait
dec
or
cwde
ja
retf
jae
dec
(bad)
retf
test
ss
arpl
scas
popa
sbb
call
mov
(bad)
repz
lahf
mov
aaa
lahf
xchg
xor
mov
cmp
rol
add
pop
adc
mov
adc
(bad)
mov
jb
hlt
lahf
xlat
jne
mov
lds
out
int
xor
mov
popf
stc
and
lods
jno
icebp
mov
popa
push
mov
and
xchg
adc
lods
push
mov
and
push
(bad)
mov
add
pop
mov
jp
lea
xor
shr
pop
xor
in
xchg
call
js
mov
inc
mov
sub
cli
adc
retf
std
daa
mov
jb
mov
movs
push
cdq
loopne
scas
dec
xchg
jecxz
mul
in
or
jae
mov
shl
pop
sbb
add
loop
cli
cmp
(bad)
ds
xchg
movs
mov
push
xchg
stos
sbb
sub
adc
add
in
pop
retf
outs
lods
out
ret
scas
mov
cmp
pop
out
jg
pop
or
inc
enter
iret
xor
mov
jno
cld
sub
movs
jnp
sub
push
dec
out
pop
or
pop
ja
mov
mov
jge
push
pushf
repz
mov
push
in
dec
(bad)
ins
cmp
xchg
mov
gs
adc
mov
mov
mov
neg
mov
lods
pop
in
loope
sub
repz
jo
cs
lods
(bad)
(bad)
xchg
pop
iret
aaa
mov
jl
push
mov
mov
add
and
pop
aam
les
cwde
(bad)
mov
sub
cmp
retf
ins
dec
push
(bad)
xor
add
jmp
ja
or
xchg
in
loopne
push
mov
in
out
and
pop
stos
pusha
fucomi
shl
or
pop
fist
xchg
sbb
dec
stos
shl
ins
mov
iret
lods
dec
out
xchg
push
sbb
pop
hlt
addr16
pop
adc
fwait
sbb
das
mov
mov
mov
xor
xchg
rol
pop
retf
sahf
cdq
fcmove
repnz
xor
xor
inc
push
push
repz
or
in
cmps
in
test
jae
add
add
xchg
mov
fwait
xor
cmp
or
xchg
pinsrw
jae
pushf
mov
xchg
lock
or
push
cmps
mov
pop
scas
fiadd
out
sahf
mov
adc
(bad)
int
and
in
jmp
and
clc
xchg
int
popa
mov
sub
adc
loop
cmp
or
pop
sar
mov
xchg
add
push
mov
pusha
sbb
test
mov
icebp
add
or
xchg
jp
sub
movs
cmps
sbb
(bad)
xor
jns
daa
sbb
cs
aas
sub
das
jle
and
inc
dec
imul
lea
sti
leave
fidiv
imul
inc
in
push
sbb
(bad)
addr16
dec
out
retf
je
cmp
lock
test
xchg
test
jmp
(bad)
fdivp
fild
in
das
lods
or
xor
ror
jae
cdq
rol
adc
nop
and
fld
mov
mov
mov
mov
jmp
gs
aas
mov
push
ins
cmp
or
aad
lods
jnp
dec
pop
push
mov
popf
jne
in
cmp
xchg
(bad)
pop
push
jae
push
ds
sar
ret
inc
test
das
icebp
cmp
lods
sub
add
int3
int3
sub
sub
or
aas
(bad)
push
jb
mov
pop
inc
sub
aad
fcmovbe
jge
push
dec
pusha
xor
cs
pop
stos
shr
repnz
(bad)
xchg
fsubr
mov
dec
mov
out
cdq
dec
sbb
mov
dec
adc
mov
pop
test
call
gs
jo
lock
fistp
and
or
lods
jp
push
cmps
loope
scas
push
call
popf
push
cmp
push
gs
mov
(bad)
std
xor
dec
cmp
sub
add
mov
iret
test
jno
(bad)
sub
(bad)
pop
scas
cmps
add
rcr
mov
and
inc
xor
arpl
sbb
mov
(bad)
dec
int
push
pop
mov
mov
(bad)
xor
add
test
dec
movs
push
adc
(bad)
fstp
in
or
push
call
imul
clc
movs
in
cmp
or
lea
int
leave
out
adc
sbb
pop
add
scas
jmp
rol
cmp
or
sub
lahf
scas
nop
imul
in
aaa
cmps
mov
mov
jnp
and
sbb
push
add
cmp
aaa
rcr
inc
icebp
aad
pop
cmp
or
pop
stc
fwait
bound
xor
fidiv
(bad)
or
(bad)
fild
jno
repz
sbb
lods
lds
sub
and
rol
dec
sub
xor
cmp
popa
in
ret
push
movs
xchg
inc
pop
cwde
or
inc
test
adc
in
cmp
cli
loope
stc
cli
jns
push
jno
jl
(bad)
xlat
pop
jmp
(bad)
lds
test
int3
test
pop
add
xor
xchg
call
xchg
icebp
jbe
sub
dec
cmp
inc
xor
adc
or
and
sbb
sbb
test
int
xchg
or
and
mov
jne
ins
or
rol
push
jo
mov
xchg
mov
mov
in
dec
jb
cli
mov
push
outs
shl
stos
sbb
or
ja
hlt
cmps
sub
cmp
iret
test
xchg
das
in
cmp
add
loop
jge
imul
jecxz
mov
add
xchg
pop
sub
rol
loope
bound
mov
push
imul
cmpxchg
arpl
add
dec
imul
pop
loopne
stos
call
cmp
jmp
repnz
sbb
out
outs
test
popf
dec
push
and
xor
ret
pop
lods
stos
and
mov
xor
(bad)
repz
adc
inc
jg
out
inc
mov
jno
fsub
sbb
sbb
or
cmp
add
sbb
out
push
nop
pop
aad
cmp
lahf
loopne
mov
and
movs
mov
add
pop
dec
dec
sar
jnp
jge
aad
and
addr16
out
dec
fmul
iret
mov
jecxz
(bad)
cld
mov
pop
xchg
test
and
mov
sub
jl
sbb
fdivr
xchg
mov
fisttp
mov
cwde
int
(bad)
jp
fnsave
cmps
push
call
popf
mov
adc
mov
cmps
stos
call
popa
pop
add
outs
xor
cmp
adc
xchg
fisub
mov
jb
adc
inc
loopne
mov
sbb
mov
stos
test
xor
scas
jb
fcmovb
push
sub
mov
xchg
mov
or
fistp
lods
sbb
mov
movs
push
repnz
inc
pop
(bad)
bound
xor
adc
out
test
mov
push
ins
cmc
lods
sub
std
fsubr
scas
(bad)
adc
xchg
pop
out
dec
cmp
cs
pop
mov
ds
inc
jbe
jp
movs
cmp
sti
loopne
fadd
in
or
int3
lea
add
inc
ds
jae
in
and
fistp
pop
fldl2t
mov
jbe
(bad)
(bad)
mov
lea
cmp
gs
iret
push
push
cmps
movs
stos
push
cmp
jle
aam
xor
repz
adc
jmp
icebp
or
data16
pop
mov
mov
popf
call
or
lods
cdq
xchg
push
and
mov
xor
mov
imul
push
xor
pop
aaa
cmps
mov
mov
xlat
aaa
or
call
ins
stc
or
shr
jno
dec
cdq
jmp
mov
inc
push
sub
xchg
mov
(bad)
ja
and
mov
int3
pop
add
and
jb
push
xchg
dec
rol
xchg
ins
mov
and
ja
xchg
inc
call
sub
sbb
jo
rol
jo
adc
out
mov
repnz
scas
cs
fld
and
inc
mov
icebp
fwait
out
call
or
(bad)
icebp
out
pop
leave
mov
in
dec
sbb
sbb
data16
fwait
scas
push
adc
dec
imul
pop
xchg
mov
loopne
jb
dec
pop
jg
in
pop
aam
aad
sbb
adc
sub
in
out
test
clc
das
jmp
dec
cmp
jmp
fld
dec
push
xor
(bad)
fistp
ret
popa
mov
popa
movs
add
data16
mov
mov
mov
xchg
push
and
int
loopne
test
stos
mov
in
mov
mov
and
inc
popf
jb
or
les
iret
jmp
sub
dec
pop
mov
jne
es
push
and
jo
bswap
(bad)
or
pop
js
dec
and
lods
(bad)
in
cmp
fst
std
xchg
jge
mov
std
jl
ds
(bad)
jle
shl
jno
jp
sub
pop
jno
adc
out
fsub
fistp
mov
dec
add
xchg
ror
icebp
mov
mov
nop
pop
xchg
cmp
sti
mov
call
cmp
test
jecxz
mov
sbb
add
push
pop
scas
xchg
sbb
in
fimul
call
sar
inc
(bad)
call
jne
xor
outs
js
jb
add
lods
mov
outs
inc
pop
and
inc
stc
loop
int
cmp
add
inc
xor
or
sbb
cmp
imul
inc
stos
test
adc
mov
pop
xchg
jbe
rol
sub
(bad)
outs
sub
pop
test
dec
inc
add
imul
jmp
jp
mov
rcl
lods
fucomi
jne
xor
scas
push
dec
or
sbb
test
sbb
push
sbb
jne
hlt
shl
call
xchg
and
push
and
fsubr
les
mov
movs
inc
mov
dec
sbb
stos
or
sbb
mov
or
lods
retf
enter
sub
sub
jne
scas
test
repnz
pop
jmp
xchg
test
jae
(bad)
cwde
pop
adc
cld
retf
lahf
stos
cmps
popa
dec
test
fild
pop
jp
xlat
mov
xchg
cli
fldpi
mov
mov
sub
mov
dec
aas
hlt
sub
and
inc
mov
out
jb
mov
mov
(bad)
xchg
xchg
xor
in
push
adc
(bad)
mov
xchg
call
cdq
cmp
or
ror
cmp
jp
sbb
jo
lahf
cmps
mov
rcr
xchg
leave
pop
add
adc
mov
mov
test
sbb
or
dec
(bad)
xor
mov
mov
imul
pop
xor
sahf
lods
push
mov
stos
arpl
push
call
push
addr16
mov
lods
clc
cmp
xor
mov
push
jbe
(bad)
mov
mov
pop
xor
fld
or
mov
add
imul
iret
stos
inc
cmp
or
(bad)
sbb
push
cwde
adc
xchg
add
in
movs
push
pop
pusha
pop
sbb
test
mov
mov
sahf
out
je
inc
shl
das
cmp
pushf
mov
call
jmp
test
out
lds
hlt
and
outs
lahf
jmp
mov
dec
xchg
(bad)
mov
sti
or
fmul
pop
sbb
test
sbb
mov
sti
xor
inc
mov
fadd
das
(bad)
cmps
iret
xor
iret
mov
ins
mov
stos
jl
cli
sbb
inc
mov
lea
jmp
xlat
outs
sub
lahf
imul
add
and
sub
mov
cmp
adc
daa
cdq
enter
ret
dec
gs
gs
sub
stc
mov
aaa
loope
mov
addr16
es
bnd
adc
mov
aad
jge
xchg
bnd
les
push
int
push
adc
aam
mov
rcr
inc
int3
xchg
xchg
xchg
pushf
gs
int3
jle
fcom
mov
xor
mov
call
fnstenv
xor
push
add
or
add
int
stos
lock
fst
and
jbe
daa
call
xchg
cdq
rcr
inc
ins
adc
out
inc
fstp
fld
scas
(bad)
and
mov
push
add
pop
cmp
jle
add
xor
cdq
js
sbb
sub
adc
jmp
push
adc
jg
stos
mov
aam
ret
mov
xchg
inc
divps
xchg
jae
(bad)
retf
stc
out
test
scas
jl
jo
int3
addr16
xchg
add
sub
sbb
mov
clc
dec
lock
rcr
and
sbb
lahf
or
sub
pop
or
xchg
xchg
inc
mov
mov
dec
retf
loop
mov
test
fst
in
pusha
pop
enter
cwde
jmp
mov
xor
outs
das
pop
adc
cmc
jl
movs
nop
cmp
retf
and
cmp
or
inc
pop
shr
inc
test
stc
dec
dec
xchg
mul
mov
jge
push
into
ret
push
adc
sub
push
and
movs
push
pushw
xlat
pop
or
jmp
data16
neg
ret
fbld
in
stos
loopne
sbb
mov
data16
and
stos
std
loop
jecxz
arpl
movs
mov
mov
and
(bad)
xor
xor
push
pusha
arpl
fbstp
enter
mov
mov
pushf
inc
daa
mov
int3
xchg
jecxz
sub
jg
mov
dec
mov
jns
jne
dec
pusha
mov
(bad)
sub
cmp
jae
repnz
ja
imul
push
inc
popa
stc
into
stos
inc
inc
into
bound
mov
jne
pop
mov
gs
sub
cmp
les
mov
nop
xor
inc
fnstcw
pop
gs
es
outs
sub
fs
push
or
mov
pop
mov
addr16
dec
adc
mov
out
push
cmps
xor
cmps
fbld
das
add
out
mov
xor
cmp
outs
pop
aad
mov
lock
test
inc
or
popa
repz
and
hlt
leave
sub
sub
push
jbe
int3
dec
aad
fistp
arpl
mov
xchg
ficomp
arpl
adc
inc
lahf
cmps
pushf
lea
sbb
clc
icebp
pop
mov
add
xor
xor
jl
cdq
or
jno
sbb
xor
mov
push
lea
mov
sbb
cmp
(bad)
shl
add
fisubr
ins
fwait
pop
mov
add
push
fld
or
mov
pushf
jo
cdq
jno
jecxz
sub
dec
push
movs
mov
sub
addr16
inc
mov
in
jbe
repnz
xchg
les
push
hlt
iret
xchg
or
scas
mov
nop
dec
or
xchg
setp
xor
inc
das
and
leave
xchg
dec
ss
popa
outs
xchg
fld
jmp
scas
ds
and
mov
dec
imul
jle
jge
stos
mov
mov
aam
(bad)
not
cli
ret
xchg
in
enter
dec
xchg
icebp
out
push
je
imul
and
xchg
(bad)
in
xchg
mov
adc
inc
dec
xchg
xchg
mul
es
iret
test
add
pusha
and
or
fiadd
lods
push
sti
dec
nop
out
push
jo
inc
lods
and
pop
and
and
inc
in
ins
fisubr
add
push
mov
jno
aam
xor
in
rcr
jecxz
adc
mov
or
aas
rcr
xor
outs
repnz
mov
je
jmp
mov
call
fidivr
cmc
xchg
dec
nop
mov
dec
or
pushf
mov
sub
inc
and
fs
push
or
cmp
jmp
loope
xchg
repz
ss
xchg
jmp
and
ficomp
enter
jne
mov
test
add
lock
mov
outs
push
in
lods
pop
xchg
pop
(bad)
mov
push
dec
rsqrtps
jg
fld
mov
cmp
jmp
test
loope
scas
adc
cmp
maxps
fsubr
aas
add
adc
ins
jae
out
xor
add
gs
data16
push
fstp
fwait
cmp
jnp
js
je
idiv
lahf
test
mov
adc
or
mov
add
dec
bound
dec
imul
call
sub
mov
xchg
pop
aad
scas
dec
inc
div
imul
mov
dec
jne
movs
fprem1
mov
movs
fst
jl
add
push
enter
ret
ret
and
test
xchg
into
jmp
push
ja
mov
push
sub
lods
fnstsw
fnstenv
hlt
push
jp
adc
in
jg
cmc
inc
neg
leave
xchg
xchg
in
pop
cmp
push
push
jle
cmp
mov
cmp
fidiv
arpl
fistp
loop
add
stc
imul
int3
cmp
pop
mov
sbb
shl
fdiv
adc
and
jmp
stos
int
push
out
jg
(bad)
jmp
bswap
jl
jnp
fadd
js
fxch
jle
pop
popf
jae
(bad)
jae
dec
popf
mov
add
adc
adc
dec
aas
retf
retf
ret
xchg
stos
add
popa
dec
mov
cwde
test
das
cmp
push
and
mov
inc
push
jp
push
and
dec
xchg
pop
xchg
mov
mov
or
mov
jmp
aaa
into
loope
mov
cmp
sub
pop
cdq
fisub
push
xchg
jl
push
mov
shl
in
add
outs
xor
(bad)
rcr
pop
retf
xchg
cdq
aam
je
mov
or
aaa
jo
lods
cmps
in
jmp
das
adc
sar
in
mov
dec
int3
in
mov
in
push
mov
jl
ret
fs
div
js
in
fisttp
mov
fld
fld
cs
loope
rcr
push
adc
imul
rol
add
jnp
nop
iret
rcr
xchg
inc
inc
ins
and
inc
jo
loope
(bad)
iret
cmps
inc
xor
sbb
sub
add
es
jl
mov
les
rcr
fcomp
sbb
push
ret
mov
es
ficomp
ror
inc
lods
xchg
inc
add
cmp
outs
cmps
scas
ss
ficom
and
fsubr
ja
pushf
sbb
lods
dec
mov
test
jmp
mov
mov
stos
sbb
or
ins
sbb
and
sbb
lods
leave
push
outs
sbb
sbb
aaa
frstor
push
es
nop
xchg
ds
mov
cmovne
pop
lods
lods
pop
mov
lds
mov
repnz
scas
ds
icebp
dec
stos
pop
stos
cwde
nop
sub
mov
xor
sahf
mov
int3
mov
cdq
jb
ret
lea
scas
pop
mov
push
js
adc
js
add
inc
cmc
or
mov
ret
sub
stos
arpl
adc
cmp
pop
sbb
pushf
mov
and
data16
hlt
mov
es
nop
adc
xchg
loop
clc
add
icebp
xor
mov
imul
scas
aaa
je
and
sti
pop
sub
jnp
int3
cmp
add
test
mov
mov
movs
xor
rol
lea
pop
popf
stc
mov
xor
adc
mov
test
jge
add
mov
mov
or
push
push
or
cmp
push
sbb
fldenv
les
inc
xor
rcr
or
jmp
outs
cmps
ins
ins
cmp
ffree
ret
adc
lahf
mov
rcl
push
mov
repz
push
dec
sub
and
dec
sbb
sub
pop
sbb
mov
sahf
ret
jb
mov
rcl
mov
mov
add
sub
mov
sub
jo
mov
je
push
mov
dec
adc
fldenv
shl
sub
jbe
cmp
retf
jae
adc
sbb
adc
pusha
jns
add
(bad)
push
loop
sbb
test
scas
(bad)
push
sti
or
stos
inc
data16
scas
cmp
push
sahf
dec
je
dec
shl
addr16
push
mov
outs
shl
rcr
cmp
xchg
add
mov
jb
jo
cs
pop
out
inc
sub
and
cmp
cmp
ds
mov
pusha
test
add
inc
(bad)
nop
push
loope
leave
dec
shr
inc
call
into
mov
pushf
xor
sub
fs
fild
mov
sub
cmp
inc
pop
mov
outs
ins
shl
push
rol
or
shr
sti
mov
add
pop
push
retf
inc
loop
loope
cmp
sbb
dec
jle
movs
movs
pop
aaa
daa
and
mov
pop
sbb
dec
cs
cmp
cmp
jnp
cli
retf
cwde
mov
inc
pop
cmp
rcr
add
loopne
push
cmp
push
fild
fsubr
cmps
cmp
push
or
fnstcw
lahf
shl
popf
push
add
sbb
dec
mov
int3
pop
sub
dec
push
push
sar
(bad)
sti
repz
ins
out
popa
daa
cmp
mov
outs
mov
retf
in
cld
jmp
fs
pop
fmul
repnz
xor
xchg
mov
ins
mov
mov
add
push
jae
sbb
pop
sti
adc
dec
pusha
and
sub
in
or
pop
dec
or
mov
imul
inc
pop
push
add
pop
xchg
push
cmc
pop
shr
lods
xor
lahf
xor
jns
std
bnd
or
sar
add
pop
mov
push
mov
mov
nop
xor
cs
ds
cmp
jb
pop
lock
movs
das
bound
pop
mov
jmp
mov
dec
loopne
or
jg
cmp
xchg
shr
mov
push
jne
mov
or
fwait
in
(bad)
and
push
mov
mov
ror
jnp
icebp
repz
adc
adc
clc
(bad)
dec
mov
nop
mov
cmps
out
fdiv
adc
push
push
push
inc
fimul
daa
sbb
push
(bad)
dec
fst
jnp
das
xor
jne
jg
out
in
xchg
test
ss
fldenv
push
lock
mov
movs
pop
popf
adc
sbb
ret
mov
bound
sbb
pop
sub
scas
sub
xchg
mov
xor
mov
inc
push
aaa
adc
adc
call
xchg
adc
sbb
dec
pop
pop
cmp
inc
imul
sub
leave
jecxz
and
popf
inc
adc
mov
call
mov
arpl
(bad)
push
nop
(bad)
cmp
pop
aad
inc
xor
add
mov
push
sar
mov
ins
sbb
jmp
xor
ror
mul
xor
out
mov
pop
shr
out
mov
xchg
jo
jns
jecxz
jmp
adc
sub
xchg
sub
jge
xchg
call
daa
scas
jge
and
xchg
jo
in
pop
imul
mov
xor
xchg
add
jle
fldcw
shl
cwde
xor
pop
push
clc
add
jmp
outs
cmc
xor
pusha
pop
mov
jae
and
and
dec
dec
test
icebp
(bad)
mov
or
sbb
add
add
pop
cmp
inc
inc
movs
pop
push
or
jmp
push
push
mov
lds
fcomp
rcl
cld
iret
call
pop
dec
enter
sbb
call
lods
adc
inc
leave
sbb
push
lods
dec
enter
test
and
mov
push
arpl
jne
enter
jp
repz
mov
xchg
and
mov
xor
in
or
sbb
push
xchg
ror
jge
jo
jp
std
aad
loop
cmp
arpl
mov
adc
push
inc
pop
dec
nop
cmp
cwde
inc
in
push
adc
pop
test
fwait
call
pusha
retf
fs
in
femms
pop
fisubr
test
push
sub
adc
fidiv
mov
xlat
popa
rcl
xchg
sbb
mov
ror
pop
out
lock
les
xor
jmp
retf
cmp
and
or
ds
je
push
shl
sti
jp
pop
loopne
mov
sbb
lahf
dec
xor
fucomi
or
sub
sbb
dec
sti
cdq
mov
pop
in
lods
movs
mov
lahf
mov
mov
inc
test
mov
mov
mov
jnp
dec
mov
xchg
mov
push
out
dec
sub
aad
jns
out
ret
jae
movs
bound
xlat
cmp
or
xor
mov
pop
xor
cmp
test
jb
cmp
jle
and
lods
mov
(bad)
or
ins
movs
std
adc
out
lods
ss
into
mov
sbb
pusha
stc
add
fnstsw
mov
adc
or
inc
ds
mov
and
jne
ror
pop
jbe
dec
lea
cmp
mov
cwde
mov
out
mov
xchg
add
and
mov
mov
and
and
retf
mov
ja
mov
aas
lahf
fs
mov
out
fwait
loop
inc
xchg
jmp
les
cwde
add
push
call
dec
out
inc
sub
sbb
sub
cs
inc
inc
imul
test
mov
dec
std
inc
data16
and
sub
mov
cs
dec
mov
push
inc
addr16
or
loopne
rcr
inc
ret
sti
push
jp
and
mov
ror
fcmovne
xchg
push
sub
adc
push
or
dec
dec
xor
xchg
dec
xor
loopne
icebp
fild
mov
mov
xor
sbb
dec
(bad)
push
fcom
or
mov
out
dec
and
xchg
push
sbb
out
jl
shl
xchg
pop
movs
jecxz
adc
dec
mov
push
call
dec
sbb
xor
mov
cli
and
xchg
push
and
aam
xor
loop
fbstp
cs
mov
pop
scas
(bad)
jg
out
retf
jmp
loope
adc
sbb
(bad)
xchg
pop
push
mov
cmps
mov
ss
and
jo
push
jns
(bad)
scas
push
mov
push
mov
fnsave
loopne
mov
jno
int
or
ins
movlps
mov
xor
mov
jns
sub
sbb
pop
cmp
add
movs
sbb
inc
sbb
push
aad
push
adc
jle
mov
std
inc
inc
xor
iret
je
push
push
clc
popf
mov
push
cmp
imul
int3
jle
arpl
jp
or
add
sar
dec
lods
call
repnz
cmp
into
mov
loop
push
loope
test
stc
clc
popa
pop
js
sub
clc
cmp
adc
aaa
ficomp
popf
mov
(bad)
pop
ret
add
sti
and
loope
adc
sbb
aaa
je
mov
inc
loope
inc
inc
pop
fst
cdq
mov
xchg
(bad)
fsubr
mov
dec
and
or
xor
fs
leave
fdiv
jp
jecxz
pop
jmp
xor
inc
bound
imul
scas
pop
mov
mov
cmp
adc
cmps
mov
add
(bad)
cmp
add
daa
mov
frstor
data16
je
or
and
jno
xchg
(bad)
jmp
add
xchg
pop
push
pusha
cmp
push
adc
mov
jg
push
adc
cli
(bad)
fld
add
ins
sub
xor
loop
inc
dec
mov
aas
inc
scas
dec
jbe
jmp
gs
loopne
and
jmp
inc
(bad)
mov
sbb
es
and
add
mov
mov
cli
int
xchg
hlt
dec
sbb
div
jb
dec
and
jbe
dec
popa
mov
(bad)
mov
std
mov
int3
mov
jg
xchg
loop
pushf
call
sub
mov
add
push
lock
add
bswap
add
shl
lock
rol
int
push
jl
pop
push
adc
aam
mov
mov
sub
inc
inc
lock
jle
dec
mov
mov
push
loop
xor
pop
sar
sub
jp
cmp
mov
imul
clc
mov
or
pop
mov
lahf
clc
rcr
jmp
daa
in
out
dec
push
push
ffreep
out
movs
stc
xchg
add
shr
jl
push
push
pop
pop
(bad)
add
and
repz
sbb
xor
sub
fmul
iret
add
xor
jns
aas
pushf
and
jbe
adc
idiv
js
lds
repnz
push
fldcw
mov
lock
mov
push
movs
mov
mov
pop
dec
adc
fldz
fistp
push
mov
repnz
(bad)
inc
(bad)
lahf
cld
mov
stos
mov
sbb
(bad)
cmp
mov
pop
xchg
xchg
push
cwde
add
jmp
cdq
jns
mov
dec
inc
add
or
or
sbb
xor
out
xchg
or
hlt
sbb
mov
pop
mov
mov
jg
mov
aas
sbb
adc
pop
cs
mov
cmp
(bad)
mov
mov
in
cmp
adc
cmp
call
xchg
cmp
loopne
nop
out
hlt
cmp
out
or
das
add
xor
mov
ins
in
mov
les
mov
in
lods
hlt
enter
nop
sub
repnz
or
data16
push
ret
or
(bad)
in
retf
or
inc
jl
call
jb
neg
adc
push
ficom
cmps
inc
das
jmp
in
fmul
or
outs
aad
call
rcl
jg
loope
mov
dec
mov
mov
xor
inc
test
mov
(bad)
jmp
arpl
push
push
imul
sbb
ficom
xchg
imul
test
inc
pop
xor
inc
lahf
cdq
mov
or
ins
push
xchg
cmp
push
frstor
sbb
jg
sbb
pop
xor
aad
lods
not
pop
mov
fimul
leave
test
mov
sbb
movs
jmp
push
sbb
test
and
or
jae
dec
loopne
dec
dec
adc
mov
xchg
sub
sub
push
sahf
mov
(bad)
pushf
mov
loop
add
dec
mov
inc
jmp
xchg
out
cmp
movs
or
pusha
mov
pushf
mov
pop
stos
jp
jmp
cmps
mov
jbe
push
dec
mov
mov
fcom
jl
cwde
push
dec
sub
inc
cmp
pop
je
test
sub
cdq
push
mov
sub
out
fild
xor
push
retf
mov
mov
movs
fadd
cmps
in
jnp
nop
lods
sti
sti
repz
imul
fs
xchg
rcl
das
adc
cmp
pand
les
xchg
cdq
icebp
add
xor
lods
mul
jle
dec
jo
mov
jle
loope
mov
adc
and
or
ins
xor
add
inc
imul
xchg
es
movs
push
sub
loope
push
or
das
loop
mov
mov
inc
adc
pop
lods
mov
popa
jle
or
jno
int3
fmul
cld
and
aaa
out
lods
lahf
shl
out
imul
sahf
push
mov
cmp
sbb
addr16
inc
adc
push
jl
movs
ret
xor
mul
mov
das
daa
inc
fidiv
or
adc
(bad)
popf
mov
out
pop
jle
mov
xor
sub
das
add
xchg
stos
ret
loopne
lods
and
in
adc
stos
cwde
fist
dec
shl
std
mov
lods
xor
pusha
shr
movs
push
jnp
aad
sub
ret
mov
int
and
aad
test
je
sbb
xor
in
and
popa
cmp
jb
(bad)
push
repnz
fwait
push
arpl
(bad)
push
inc
imul
int
mov
mov
pop
lahf
mov
xlat
in
inc
push
cmp
mov
cmp
and
mov
pop
out
add
(bad)
hlt
popa
mov
jle
int
nop
cmp
dec
pop
repz
repz
pop
mov
gs
sbb
sub
mov
shr
xchg
das
test
leave
jge
push
pop
cmc
jmp
pushf
scas
ret
outs
repnz
pushf
inc
leave
test
mov
mov
iret
and
push
aas
aam
(bad)
out
xor
mov
xchg
fadd
and
jno
scas
fxch
adc
int
add
mov
aas
or
add
jns
and
adc
test
sbb
(bad)
fwait
jle
adc
xor
xor
xor
(bad)
int
jl
cwde
pop
popf
push
pushf
mov
mov
out
lods
fiadd
sub
aad
cld
addr16
mov
xlat
dec
hlt
mov
dec
rcr
loop
dec
push
inc
dec
sbb
and
out
into
push
test
inc
mov
adc
mov
jb
mov
add
lahf
or
cwde
jb
add
jmp
psllq
push
fnclex
ins
inc
lahf
sahf
int3
push
mov
jge
sar
in
jbe
daa
repnz
adc
lahf
fisubr
aad
sbb
dec
std
inc
sbb
jae
jg
push
fnsave
mov
ror
or
dec
mov
cli
push
imul
test
xor
cmp
loopne
pop
and
ret
ret
hlt
cmp
shr
push
xchg
hlt
mov
xchg
je
push
dec
nop
and
(bad)
in
inc
enter
xor
sar
xor
sbb
cmc
out
push
pop
out
and
nop
push
sub
data16
push
or
mov
mov
call
inc
fldenv
xor
lods
push
outs
lds
sub
or
pop
xor
rcl
mov
xchg
xchg
add
inc
dec
ret
dec
mov
mov
adc
sbb
cmps
pop
xor
fadd
xchg
or
push
test
mov
push
test
sbb
pop
je
pop
or
clc
jge
shl
es
(bad)
in
and
push
(bad)
push
cmp
xchg
movs
imul
inc
and
(bad)
(bad)
cld
adc
xchg
mov
cmp
cmps
loop
mov
jl
fcom
dec
ins
mov
stc
pop
push
loope
repz
pop
mov
sahf
ror
fninit
push
xor
sahf
pop
movs
cmp
out
add
pop
jnp
push
out
cwde
unpckhps
sub
xor
fnstcw
cmp
pop
lahf
int3
fdivr
cmp
call
mov
scas
push
fstp
mov
int
es
movs
pop
mov
pop
xchg
and
mov
mov
(bad)
pop
mov
dec
dec
sub
add
adc
sub
sub
dec
call
or
dec
fcom
mov
ret
data16
fnstcw
inc
mov
data16
inc
mov
and
push
and
stos
and
push
xor
shl
mov
in
inc
lds
pop
pop
jp
inc
mov
mov
mov
mov
xor
jno
das
stos
inc
xor
scas
pop
repz
sbb
retf
imul
cli
mov
cmp
(bad)
fstp
mov
pop
mov
jne
retf
cld
jnp
dec
in
inc
xchg
fimul
mov
mov
mov
repz
mov
stos
aam
sar
push
dec
(bad)
retf
adc
pop
and
mov
dec
jmp
xor
aaa
xchg
lahf
and
sbb
inc
dec
sub
pop
mov
xchg
les
les
fwait
push
jg
clc
idiv
xchg
clc
lods
int
adc
mov
mov
dec
pop
jle
or
add
push
or
mov
push
(bad)
push
out
sub
inc
push
add
pop
mov
ins
sbb
mov
shl
push
pop
jmp
and
sti
subps
mov
arpl
inc
and
fcmovnbe
inc
cmp
or
jp
mov
sbb
push
inc
push
mov
icebp
scas
aam
push
xchg
shl
adc
scas
(bad)
pushf
ja
push
and
mov
push
jmp
aam
adc
add
cmps
ret
in
stc
loopne
not
leave
inc
data16
dec
pop
push
fimul
jne
int3
(bad)
lock
out
jbe
nop
and
xchg
push
lods
popf
mov
cwde
jnp
xchg
xchg
and
test
loopne
pop
adc
arpl
push
or
cdq
daa
fcom
or
adc
lock
push
or
mov
cmc
ret
or
dec
fimul
xor
(bad)
push
mov
ja
fmul
cmp
bound
inc
stc
out
add
(bad)
adc
jmp
fmul
fs
mov
adc
or
inc
dec
sbb
lock
add
sbb
dec
pushf
cdq
add
retf
mov
rcl
jnp
dec
mov
outs
jae
xor
pop
fimul
cmp
loope
mov
mov
pop
mov
mov
cwde
(bad)
cmp
push
jecxz
arpl
je
sub
push
test
xchg
(bad)
pop
ss
adc
ret
mov
mov
shl
sbb
and
sbb
pop
mov
or
pop
xchg
dec
push
(bad)
mov
clc
cmp
scas
xor
push
sti
cmp
movs
add
fcom
sar
sub
loopne
arpl
(bad)
outs
mov
adc
cmp
push
pop
retf
lea
ret
arpl
add
xor
je
fstp
jl
jmp
adc
sub
jnp
ret
dec
xor
mov
lock
mov
xchg
(bad)
bnd
mov
push
in
sub
arpl
sbb
sub
je
inc
addr16
jns
xor
jl
add
cmps
mov
or
imul
imul
mov
push
out
add
pop
mov
ds
xchg
ja
xchg
das
loopne
cld
rcl
push
push
pop
call
push
jb
mov
dec
fs
mov
rcr
div
dec
in
mov
sbb
jbe
adc
jno
jp
aam
js
mov
mov
into
enter
fwait
and
call
bound
ins
call
mov
test
shl
in
sbb
ret
push
cmps
rol
cmp
(bad)
fcom
sub
xlat
hlt
dec
fistp
add
xor
lods
add
ss
adc
add
or
rdpmc
outs
mov
into
nop
pop
pop
mov
lods
mov
dec
mov
cmc
adc
inc
nop
je
mov
xlat
and
pop
dec
cmp
xchg
mov
test
push
stos
cwde
pop
retf
bound
out
push
push
pop
loopne
sub
mov
div
sar
icebp
out
push
in
mov
xor
pop
fmul
arpl
xchg
fisttp
mov
scas
mov
xchg
sub
sar
jp
jno
pop
push
out
push
push
add
mov
push
sbb
outs
sub
inc
adc
sbb
push
xchg
inc
and
cmp
div
pop
sbb
or
inc
je
dec
pusha
and
sbb
mov
outs
arpl
or
into
pop
or
xor
or
inc
int3
or
out
sub
stc
xor
mov
pop
rol
test
aad
(bad)
mov
mov
shr
jno
dec
add
add
sbb
inc
inc
jmp
sbb
test
dec
ret
cmps
pop
stos
jne
add
add
and
test
cmp
mov
imul
xor
jno
and
or
js
cmp
idiv
sub
idiv
lods
scas
repnz
push
and
stos
loopne
ret
xlat
(bad)
movs
test
mov
imul
jecxz
jmp
or
sub
int
inc
mov
adc
das
lods
iret
and
or
ffree
xchg
mov
repnz
or
stc
pop
xlat
jl
out
pop
pop
in
dec
test
mov
mov
hlt
jmp
sti
pop
stos
sub
div
cmc
aad
dec
js
jo
daa
jns
pop
adc
mov
push
jmp
mov
ss
add
mov
jno
jmp
stos
jmp
sub
or
iret
in
mov
add
inc
into
jne
pop
out
xchg
dec
aaa
jno
and
aas
push
call
dec
xchg
xchg
mov
mov
lods
add
rcl
loopne
dec
adc
mov
push
fndisi(8087
jp
mov
dec
(bad)
mov
sub
movs
loop
dec
jp
or
adc
les
dec
pop
aaa
scas
imul
aad
pop
jl
cmp
dec
fidiv
dec
mov
pushf
xor
mov
sbb
ins
mov
sub
push
addr16
loope
xchg
sar
nop
in
mov
jmp
ffree
aas
push
xchg
xchg
lods
test
inc
add
lods
push
(bad)
mov
jb
and
jmp
test
call
push
aas
push
test
jae
mov
fbstp
stos
std
js
test
add
mov
retf
xor
fild
shr
cmp
jb
js
mov
and
imul
fidivr
test
out
push
xor
jb
or
jns
and
mov
and
imul
jle
xchg
daa
sub
xor
push
das
test
mov
dec
or
daa
xchg
xchg
imul
int
or
sahf
fst
or
out
loop
cmp
addr16
cmp
xlat
sbb
xchg
cmp
pop
inc
xchg
in
push
in
cmc
xor
iret
inc
popa
movs
movs
or
jp
out
ret
xor
sbb
jecxz
inc
inc
call
push
(bad)
inc
inc
jae
int
ds
sub
cmp
xchg
retf
cmps
and
inc
xor
(bad)
fnstenv
ss
push
cmp
jle
repnz
aam
mov
sbb
mov
test
sbb
nop
aad
int3
push
or
mov
(bad)
xlat
and
out
sar
dec
mov
out
jbe
movs
pop
(bad)
push
mov
xor
es
mov
push
sub
sub
adc
pop
das
jecxz
push
sbb
inc
mov
mov
ror
jecxz
xor
(bad)
pop
out
ds
retf
leave
mov
mov
push
push
add
xor
mov
inc
or
test
xor
xchg
test
pop
fcom
aaa
cmovne
push
div
scas
jnp
sub
cmps
pop
cmc
pop
int3
dec
pushf
aas
out
xchg
pop
(bad)
cli
rcr
adc
mov
icebp
adc
hlt
push
xlat
mov
push
adc
xchg
clc
jmp
inc
push
imul
fild
dec
or
and
xchg
inc
mov
and
push
mov
dec
lea
cmp
sub
inc
fwait
iret
fs
pushf
test
mov
fdivr
cdq
and
aaa
adc
movs
pop
push
jbe
mov
pop
mov
mov
jne
arpl
mov
das
jo
ret
mov
inc
mov
mov
pop
jne
push
xor
repnz
and
int
push
adc
fidivr
pusha
xchg
cmp
inc
mov
movs
dec
xlat
cmc
dec
cld
mov
mov
push
and
dec
inc
add
cli
aas
and
dec
adc
and
push
aad
inc
xor
pop
push
scas
or
inc
pop
cmp
scas
xlat
add
(bad)
lock
cwde
sbb
cmp
iret
ficom
(bad)
xor
outs
shr
idiv
jnp
jmp
in
iret
adc
add
add
mov
or
jno
jle
mov
cld
add
fcmovb
jge
imul
jp
cmp
lahf
dec
fcomp
and
out
movs
sbb
cwde
(bad)
fmul
lock
imul
jbe
push
inc
mov
dec
mov
xchg
xchg
push
pop
jp
arpl
retf
iret
sub
and
mov
cld
inc
test
xor
sbb
or
and
inc
cmp
jno
loopne
aam
(bad)
sbb
or
out
out
loope
(bad)
jle
sti
movs
loopne
lea
mov
cmp
sub
cmps
or
fsub
fcom
stos
and
mov
inc
loop
cmp
jae
ja
dec
pop
or
repz
mov
jle
jmp
pop
iret
sahf
bndldx
adc
jns
cmps
fisub
popa
repnz
lods
pop
call
and
outs
addr16
jmp
dec
pop
outs
(bad)
sub
xor
xchg
jae
test
ins
inc
and
mov
int
lods
jnp
mov
repz
add
or
mov
inc
lods
adc
(bad)
std
test
call
adc
lods
xchg
push
sub
call
jae
sahf
enter
fld
lea
arpl
pop
retf
mov
add
jp
fstp
jp
scas
scas
enter
aam
sub
nop
mov
imul
lods
push
lea
push
ins
shl
xlat
pop
or
cmp
ins
popa
or
inc
popf
push
jl
ret
jmp
hlt
(bad)
out
inc
(bad)
mov
int
(bad)
push
or
addr16
pop
mov
js
cdq
call
popw
daa
xor
ret
push
jo
pop
or
push
cs
xor
fisub
add
xor
fs
push
xchg
test
rcr
mov
sbb
mov
xlat
call
mov
xchg
jmp
sar
push
in
rcr
in
out
data16
mov
mov
and
xor
and
push
leave
ret
movs
mov
xor
add
jne
pop
push
jmp
mov
neg
inc
pop
jge
das
mov
mov
and
mov
dec
push
add
je
cwde
pusha
ja
(bad)
xchg
mov
stos
inc
pop
cmp
and
dec
scas
dec
dec
out
inc
jno
cld
mov
jno
xchg
adc
pop
cs
(bad)
inc
sub
pop
loop
js
test
inc
mov
shl
sbb
adc
cmps
sub
cdq
ret
jecxz
scas
xchg
pop
push
lods
scas
(bad)
leave
pop
inc
xchg
adc
jmp
pop
pop
push
scas
je
push
add
out
and
shl
into
xor
fnstcw
je
ins
es
jecxz
mov
dec
ror
int3
hlt
addr16
ins
pop
mov
sbb
mov
dec
jbe
inc
out
adc
mov
push
retf
push
jbe
aaa
xchg
rcl
aaa
pop
mov
push
fcomp
sbb
ja
sub
scas
push
cli
sub
ret
and
jne
xchg
dec
daa
(bad)
call
daa
addr16
dec
dec
xor
inc
ja
mov
mov
jg
xchg
test
not
ror
in
aad
cmc
pop
inc
sbb
out
cdq
(bad)
push
jp
mov
mov
fldcw
inc
cs
sub
and
int3
retf
mov
cld
push
inc
loope
stos
inc
es
or
pusha
test
add
sub
ds
cmps
mov
push
push
xor
jae
cmp
(bad)
mov
cmp
sub
std
sbb
or
xchg
xchg
cs
add
gs
inc
outs
loop
add
iret
pop
or
movs
dec
je
adc
lock
aam
adc
pop
pop
retf
cmc
jbe
pop
aad
popa
and
xchg
out
push
mov
cmp
nop
jb
aad
mov
xchg
mov
ret
in
sub
fnstsw
stc
push
out
mov
fst
loope
add
pop
xchg
ds
push
lahf
sub
les
pop
pop
fs
xlat
add
add
pop
jnp
cli
adc
pop
imul
cwde
sbb
into
mov
xor
mov
repnz
add
xor
nop
movs
jns
movs
bound
push
cmp
arpl
out
inc
outs
mov
popa
hlt
cmp
jmp
or
adc
sub
ja
shl
das
and
push
sbb
pop
and
in
xchg
mov
repz
shr
(bad)
jecxz
and
or
push
mov
repnz
mov
in
enter
ins
ret
cwde
test
mov
push
push
(bad)
outs
adc
push
fadd
jg
call
pop
pushf
lds
dec
sbb
jp
pop
sbb
pop
int
adc
mov
cld
and
add
xchg
mov
pop
pusha
aas
mov
dec
mov
push
dec
xchg
xor
sub
push
int
sbb
xchg
in
rcr
imul
mov
mov
mov
xchg
push
xchg
cmps
shr
xor
ins
cwde
push
retf
cdq
hlt
push
neg
inc
xor
adc
adc
movs
and
push
adc
or
mov
jo
enter
outs
xor
push
inc
mov
mov
imul
or
lods
push
sub
mov
call
and
push
mov
(bad)
retf
pop
ins
pop
icebp
pop
(bad)
addr16
call
inc
out
aad
jo
lds
sti
retf
lahf
pop
outs
pop
out
aas
cdq
mov
mov
sub
cmps
loope
in
mov
xor
jae
loopne
(bad)
or
or
add
add
jns
out
mov
scas
rcl
loop
popa
(bad)
mov
sub
sbb
out
test
xor
add
cmps
out
dec
xchg
stc
pop
psubusb
addr16
mov
and
inc
lods
std
mov
iret
pop
sub
adc
aaa
mov
mov
cmp
arpl
jle
jae
jb
fst
gs
push
fnstenv
rol
and
icebp
adc
popa
mov
int3
sub
mov
scas
xchg
mov
push
inc
ja
pop
fisttp
and
pop
rol
(bad)
mov
sbb
std
ja
int3
mov
pop
cmp
jmp
pop
sbb
(bad)
mov
cmps
loop
movhps
je
pop
gs
rol
ds
aas
enter
inc
xor
mov
jno
sbb
fisubr
inc
outs
add
mov
aam
ror
jne
cwde
add
sahf
add
rcl
aam
xchg
ss
xchg
mov
sub
mov
mov
adc
mov
mov
fnstsw
aas
retf
xor
xchg
pop
mov
fcom
daa
addr16
fldenv
out
push
mov
push
mov
adc
mov
pop
mov
sbb
pop
lea
stos
es
and
jns
aas
push
mov
cmps
js
mov
lea
(bad)
repz
pop
and
xchg
ins
mov
cld
je
fmul
add
das
in
cli
(bad)
fcmovu
out
outs
push
inc
and
daa
dec
mov
pop
dec
aad
xor
dec
mov
mov
mov
int
std
in
mov
aad
daa
mov
rcr
lock
iret
xchg
icebp
(bad)
(bad)
inc
int
out
push
jp
rol
gs
bt
hlt
out
scas
adc
fidivr
jnp
inc
add
mov
pop
cmp
inc
aad
cmps
(bad)
sahf
jmp
xor
out
mov
jne
fnstenv
xchg
fs
cmp
pop
sub
jle
inc
ss
xlat
push
adc
retf
mov
test
je
mov
mov
inc
repz
xor
add
jae
push
add
xlat
cwde
jo
cmps
push
xchg
xor
sbb
jmp
aas
mov
in
test
imul
dec
fwait
mov
pop
mov
jns
adc
into
fild
dec
stos
ins
fsubr
rcl
fild
cmp
fisttp
fistp
mov
lds
retf
sbb
fmul
mov
fs
push
pusha
sub
fucomp
test
ins
adc
sbb
out
jb
inc
sub
push
in
inc
add
ror
out
iret
call
cmps
nop
shl
test
dec
fsub
fwait
push
(bad)
sub
fild
mov
js
jmp
xor
sub
lods
fnstcw
aam
inc
jne
ins
jae
ins
ins
neg
sbb
jecxz
retf
iret
(bad)
and
mov
mov
inc
xchg
xor
movs
jp
cmps
lods
cmp
pop
sub
xchg
xor
mov
push
data16
jo
lock
xor
jmp
mov
add
dec
xor
dec
gs
shr
mov
cmp
ss
mov
dec
push
out
arpl
cmps
sub
cmovnp
adc
mov
adc
pop
sar
mov
mov
xor
aam
mov
pop
(bad)
mov
fs
add
mov
mov
jmp
fisubr
lea
push
clc
jno
into
shl
(bad)
sub
imul
call
retf
lods
cmp
push
cmp
shr
mov
out
cli
sub
dec
stc
add
call
and
pop
in
push
bound
jle
push
sbb
jae
fisub
call
pop
test
mov
scas
and
iret
fnstsw
ret
sbb
adc
mov
jns
loopne
pop
imul
cwde
xchg
cs
aad
daa
loope
ins
jmp
out
cs
fidiv
test
dec
jmp
xchg
fisttp
fwait
xchg
jne
ret
mov
nop
mov
mov
call
push
push
add
cmp
repz
dec
shr
push
mov
test
mov
enter
aam
xchg
mov
xchg
movs
arpl
push
mov
dec
sub
mov
xchg
pop
cmp
add
push
or
xchg
push
ret
dec
inc
sbb
push
test
inc
pop
nop
push
jmp
pop
js
adc
addr16
push
fisubr
pop
not
hlt
cs
or
test
repnz
sub
jae
imul
iret
cmp
xchg
pop
pop
bound
mov
mov
adc
pop
or
lds
push
test
lahf
mov
mov
sahf
(bad)
mov
add
fsub
mov
mov
xor
ds
sbb
xchg
xor
dec
mov
mov
iret
jle
inc
aam
stos
cmp
or
xchg
ret
ret
movs
push
outs
push
lods
sub
leave
out
or
xchg
pop
pop
sbb
push
je
xor
out
popa
sub
jl
les
sub
aad
ficomp
mov
mov
scas
mov
mov
jmp
pushf
clc
repz
cli
iret
ds
dec
or
mov
cmp
mov
test
out
jno
sub
mov
push
cs
pop
cld
push
inc
jg
fstp
xor
mov
xchg
cmps
or
jno
stc
(bad)
std
das
xor
in
pop
(bad)
call
das
repnz
sub
push
pop
inc
pop
fwait
xor
pop
and
sar
mov
movs
xor
xchg
mov
add
leave
push
sub
retf
fwait
mov
icebp
cwde
out
ror
jb
add
xor
jnp
jg
std
push
lea
out
pop
adc
fwait
dec
jb
ss
sub
or
out
mov
sahf
cmps
bound
jmp
fs
ss
xor
ins
push
test
call
xor
aad
or
sub
jmp
mov
push
or
inc
das
sub
mov
pop
retf
into
loopne
cli
dec
aam
mov
lds
xlat
jns
adc
sub
retf
xor
les
ins
(bad)
loopne
movs
pop
movs
and
adc
daa
cmp
call
and
mov
fisubr
add
scas
sbb
adc
sub
cmp
sar
arpl
jae
mov
lea
out
xchg
jecxz
and
gs
sbb
aad
adc
or
int3
jmp
pop
add
lods
icebp
or
sub
add
jg
dec
and
lods
jbe
mov
jno
push
out
adc
popf
xlat
xor
jne
cmps
xor
and
fbld
ja
iret
mov
mov
xchg
int3
std
jne
cmp
in
mov
xchg
daa
adc
neg
loopne
fdivr
dec
jo
dec
xor
in
repnz
aaa
lods
in
repnz
cmp
mov
cmps
(bad)
dec
mov
aad
inc
bswap
ret
xchg
pop
pop
sbb
lods
fbld
icebp
outs
stc
pusha
outs
fs
xchg
jnp
(bad)
inc
ret
in
mov
neg
leave
aaa
ror
in
ror
add
leave
fcomp
(bad)
aad
sbb
mov
and
sub
mov
pop
ror
loop
and
adc
not
add
outs
mov
mov
in
loopne
fsub
adc
mov
xor
dec
and
pop
rcr
sub
or
lock
jecxz
cmp
mov
add
adc
fcomp
mov
dec
adc
inc
(bad)
push
mov
sub
mov
xor
push
xchg
pop
jl
data16
cmp
add
hlt
lahf
dec
push
ror
sbb
or
dec
call
push
rol
mov
jecxz
out
gs
sub
pop
dec
jnp
push
sbb
pop
mov
xor
imul
push
popf
ret
and
and
mov
shl
mov
adc
mov
push
enter
jg
lods
and
sub
jg
inc
cld
cmp
mov
dec
iret
mov
clc
sbb
movs
pushf
cli
js
xchg
xchg
addr16
ins
push
fsub
xchg
sti
mov
mov
je
stos
xchg
js
and
xchg
ins
neg
lahf
mov
mov
mov
test
dec
pop
fist
fmul
xchg
int
add
cli
xor
mov
push
xchg
xor
scas
out
push
inc
mov
sbb
add
cli
arpl
out
pop
pop
sub
mov
mov
fwait
push
push
mov
sbb
xchg
add
or
ins
rol
mov
jb
jbe
pop
pop
mov
jle
stc
mov
xchg
js
adc
add
cmp
sti
shl
adc
fld
and
pushf
mov
psrad
cdq
xchg
hlt
cmps
out
mov
lods
mov
mov
test
jnp
add
push
daa
stos
jl
inc
es
xor
mov
clc
and
retf
push
lods
mov
retf
dec
mov
push
cmc
ja
jge
loopne
sub
adc
cmps
pop
arpl
hlt
or
rcl
push
push
adc
cmp
loop
in
ins
aad
jbe
movs
inc
dec
inc
cmp
xchg
inc
das
mul
lahf
jns
dec
push
fiadd
retf
or
nop
ret
push
out
cmp
or
cmps
xchg
ins
cmps
sub
std
sub
pop
jg
add
push
pop
stc
bnd
lahf
nop
iret
mov
pop
jecxz
and
ret
fyl2x
jne
rcr
mov
loop
add
jg
inc
dec
loop
loop
and
ds
or
imul
xor
cmp
scas
dec
fwait
jns
lahf
dec
lea
in
dec
push
pop
cs
dec
dec
nop
fidivr
inc
test
push
mov
mov
shl
out
in
mov
clc
in
lahf
(bad)
ret
mov
push
bound
fdivr
cmc
cmp
aaa
jmp
jb
and
arpl
inc
mov
pop
mov
lock
fdivr
ret
ss
jne
out
imul
pop
push
pop
fisubr
out
push
add
icebp
jmp
syscall
and
sti
sbb
sbb
fistp
mov
mov
leave
js
sub
ret
pop
push
cmp
add
mov
test
cmp
loope
add
test
mov
call
pusha
cmp
cs
sbb
pop
std
in
int3
dec
lea
adc
xchg
dec
imul
addr16
add
jmp
test
xchg
xchg
daa
ja
test
das
out
sahf
aad
mov
icebp
jbe
(bad)
repz
fisubr
aas
dec
and
sar
lods
call
ds
fs
sbb
dec
fs
pop
mov
retf
or
jns
data16
add
es
dec
(bad)
xor
mov
dec
add
sub
stos
push
adc
jle
mov
leave
and
xchg
je
movs
enter
fadd
dec
jne
pop
add
and
data16
pop
xor
pop
scas
dec
sub
mov
lock
leave
dec
jg
shl
xchg
into
ins
or
adc
jmp
bound
mov
mov
into
div
and
cs
jmp
test
mov
jb
loopne
jbe
inc
mul
pushf
push
lods
cmp
lock
mov
lods
cmp
je
sub
loopne
adc
xchg
or
xchg
leave
inc
cli
mov
fsub
fnsave
jns
or
cmp
adc
adc
jnp
jp
pop
push
out
mov
xchg
cmc
pop
push
and
call
or
inc
xor
xor
mov
ins
rcl
mov
das
mov
push
repnz
ret
lea
dec
jge
aam
out
sub
pop
mov
push
xchg
outs
dec
js
cli
xor
or
out
jbe
cmc
mov
loopne
test
mov
andps
mov
pop
push
sahf
push
push
test
fisubr
icebp
imul
and
iret
(bad)
shl
hlt
pop
jg
jne
cdq
jb
es
cmc
adc
dec
mov
cli
gs
jns
test
test
out
add
adc
mov
popf
daa
mov
xor
or
mov
iret
outs
jecxz
movs
cmc
sti
sbb
fwait
dec
pop
(bad)
jle
add
rcl
xchg
and
cs
(bad)
sti
fdiv
dec
lds
stc
aas
into
jmp
out
into
cmp
pop
mov
stos
mov
cdq
jl
(bad)
popf
stc
pop
mov
out
jno
inc
leave
mov
xchg
hlt
ror
dec
out
in
(bad)
mov
pushf
and
loopne
stc
sub
cmc
push
(bad)
dec
jbe
movs
popf
and
sub
and
xchg
sub
call
push
shr
cmc
xor
fisub
dec
mov
ss
ror
test
mov
pmovmskb
arpl
cmp
push
(bad)
fld
jmp
mov
xor
xor
retf
sub
mov
add
enter
gs
mov
icebp
xor
outs
mov
lea
add
jmp
sbb
call
mov
inc
mov
hlt
xchg
mov
(bad)
sti
imul
leave
pop
test
int
sbb
mov
jb
stos
(bad)
stos
ds
retf
ja
inc
fadd
ret
inc
mov
mov
mov
pop
pop
inc
out
neg
das
xchg
ins
push
ja
mov
jae
inc
jmp
mov
or
popf
(bad)
mov
adc
cmps
push
out
popf
inc
cmp
sub
xor
or
pop
xor
jmp
or
pop
inc
rol
sar
mov
movs
sub
push
push
mov
inc
or
mov
sub
js
jge
cmps
enter
cmps
push
mov
dec
ror
xchg
xor
test
bound
mov
mov
mov
sbb
add
and
lods
or
movhps
bound
xor
pop
xchg
jle
cmp
icebp
jp
repnz
mov
mov
mov
into
ja
pop
stos
sbb
pop
es
js
inc
stos
jecxz
dec
adc
test
setne
leave
or
pop
jecxz
aaa
xor
xchg
jmp
out
mov
repnz
lahf
aaa
ds
shr
sbb
mov
adc
jbe
jmp
aas
xchg
mov
fistp
dec
push
loop
fist
mov
ret
push
dec
aad
pop
mov
jp
push
lea
js
mov
(bad)
ins
es
xor
ins
scas
test
dec
cwde
les
dec
sbb
lds
mov
scas
sbb
xor
enter
sahf
rcl
jb
(bad)
bound
or
push
push
cmp
pop
sti
or
dec
ja
rcr
(bad)
repnz
dec
push
inc
stos
xchg
mov
pop
into
pop
push
fist
clc
inc
in
pop
push
add
fdivr
mov
jge
iret
push
dec
xor
adc
rol
mov
mov
js
popf
pushf
push
jnp
and
rol
mov
pop
push
or
sub
xchg
lock
sti
sbb
sbb
add
push
dec
je
inc
(bad)
repnz
mov
les
adc
mov
xor
mov
or
xchg
inc
xlat
retf
(bad)
sbb
xor
scas
stc
ror
aam
push
ja
shr
neg
sbb
sbb
sub
jo
ror
push
test
shl
mov
adc
add
in
jmp
inc
cmp
es
cmp
call
(bad)
rcl
in
fisttp
jb
jge
jbe
div
dec
push
scas
les
(bad)
stos
add
mov
mov
popf
cmp
dec
pop
aaa
mov
movlhps
pop
and
add
movs
sub
fwait
sbb
mov
or
pop
movs
bound
cmp
cs
jg
shl
outs
cmp
xchg
pop
push
sbb
(bad)
in
mov
das
shr
lods
fld
add
pop
and
addr16
adc
dec
ss
popf
ret
js
push
push
and
aaa
fs
pop
and
xor
lods
dec
pop
jmp
push
stos
hlt
std
(bad)
fstp
fcomp
(bad)
adc
xor
mov
sbb
es
and
sbb
mov
sub
or
push
movs
inc
arpl
sbb
retf
adc
dec
cmc
sub
adc
jno
lds
or
push
jecxz
xlat
inc
jbe
or
push
pop
cmp
hlt
cmp
jnp
(bad)
sub
dec
rol
add
and
jbe
add
cdq
fdivr
jmp
daa
repz
retf
mov
bound
cmps
mov
(bad)
fnstcw
or
lods
sub
sub
(bad)
mov
scas
outs
sbb
pop
bnd
inc
les
fs
mov
push
mov
enter
fs
dec
mov
push
cmps
sub
leave
jl
std
aaa
in
ror
ds
mov
push
hlt
fs
iret
sbb
sbb
aam
jae
sti
mov
inc
movs
jnp
xor
loop
mov
mov
call
pop
fneni(8087
dec
je
dec
js
add
and
bound
into
addr16
cmp
sti
data16
hlt
ins
mov
cld
push
xor
cmp
mov
sti
gs
sub
(bad)
loopne
clc
xchg
popf
xchg
mov
pop
dec
or
mov
rcl
(bad)
cld
mov
mov
stc
(bad)
xchg
stos
ret
pop
jle
xchg
ror
jbe
jnp
movs
pop
adc
repz
lock
(bad)
es
mov
pop
imul
jnp
mov
lar
xchg
and
aaa
xor
dec
adc
sbb
fisubr
sbb
sbb
and
bound
loopne
les
neg
(bad)
pop
cdq
or
dec
cmp
clc
xor
sbb
nop
retf
xor
ja
mov
pop
pushf
dec
loop
pop
std
xchg
inc
int3
cmps
nop
movs
dec
or
bound
fild
jo
rcr
repnz
cdq
addr16
sar
sbb
mov
(bad)
mov
and
sbb
mov
cmps
xchg
jmp
jmp
pop
(bad)
sbb
pop
mov
loope
out
ss
lea
pop
jg
and
out
popf
sar
inc
push
or
jns
mov
cli
push
push
inc
xor
push
ds
add
xor
sub
mov
jge
cmp
loope
push
cmps
stc
in
call
adc
sbb
sub
es
cmp
pop
mov
sbb
mov
mov
push
add
neg
cmps
sahf
inc
pop
sub
lods
push
mov
dec
movs
sbb
pop
inc
or
dec
in
jnp
pusha
cmps
add
inc
lahf
add
sub
les
mov
mov
mov
dec
imul
push
sti
add
push
nop
jge
retf
mov
pop
shl
jmp
leave
sub
ds
(bad)
and
push
mov
mov
inc
cmc
xchg
inc
sub
pop
mov
mov
lods
sub
sahf
adc
movs
adc
daa
push
ror
je
sbb
fsub
cmp
aam
out
sahf
movs
adc
inc
push
jno
ss
cli
nop
std
mov
pushaw
clc
mov
pop
(bad)
das
add
dec
pop
push
gs
fld
mov
sbb
(bad)
pushf
mov
mov
mov
ror
aas
sub
add
in
stos
gs
push
ja
in
(bad)
cli
cmp
inc
movs
cwde
arpl
and
xchg
push
pop
sub
movs
jb
pusha
mov
xor
cmp
ret
pop
fmul
mov
hlt
xor
sbb
add
leave
and
and
stos
retf
nop
addr16
add
or
test
jns
add
fnsave
push
and
inc
leave
sbb
(bad)
int3
and
cmp
jae
(bad)
into
rol
jmp
(bad)
stc
fimul
push
test
inc
(bad)
xchg
adc
xor
fisubr
addr16
repnz
call
adc
cmp
push
dec
mov
(bad)
dec
xchg
push
aas
inc
lea
and
mov
repnz
aaa
lahf
dec
fwait
mov
arpl
mov
sbb
ret
mov
ret
arpl
and
ret
pop
mov
mov
je
pop
and
lea
push
ret
mov
mov
cmp
mov
xor
mov
sbb
mov
or
cmp
(bad)
ins
mov
hlt
shl
or
ds
inc
mov
or
shl
scas
fs
and
adc
int3
push
xor
cld
or
add
movs
push
inc
xor
out
icebp
rol
mov
neg
xchg
pop
add
jbe
cmps
dec
or
sbb
rcr
add
xor
scas
mov
lods
and
pusha
inc
addr16
popa
or
scas
mov
int
or
push
movs
dec
or
pop
or
inc
mov
fnclex
pop
push
cwde
inc
dec
ror
sti
xchg
sbb
jle
mov
rcr
dec
jns
cmp
mov
cmp
mov
push
aam
mov
aas
imul
leave
in
int
stos
sahf
(bad)
push
pop
stos
or
int3
xor
out
mov
movs
xor
xor
(bad)
mov
sub
pop
mov
xchg
cmp
data16
mov
add
dec
test
jmp
repz
mov
in
jne
push
cdq
aad
pop
jne
add
dec
xlat
add
dec
sub
ror
in
jg
xor
jmp
cmp
pop
sub
mov
pop
test
loop
mov
xchg
and
bound
add
cwde
push
jno
iret
shl
xor
movs
adc
loop
adc
shr
fimul
outs
jle
cmp
shr
ss
imul
push
xor
sub
sbb
sub
lods
and
lock
add
dec
xlat
cmp
add
adc
aam
jle
xor
xor
add
inc
or
gs
cmps
xchg
imul
xor
lods
ss
ins
cmp
loop
outs
lods
or
fcmove
je
mov
fnstcw
jne
retf
jmp
fwait
aad
call
(bad)
pop
loope
mov
dec
xor
mov
test
inc
jnp
dec
imul
or
stos
es
les
lods
scas
shr
xchg
fcom
dec
dec
sub
retf
pop
sahf
pop
jmp
shl
mov
cmp
dec
movs
test
xor
or
ds
sub
fadd
data16
loop
adc
mov
cmp
inc
outs
pop
cmc
aas
cdq
inc
xor
add
int
add
xchg
mov
in
bound
adc
aam
jnp
xchg
lock
js
int
ins
movs
add
and
sbb
lahf
mov
test
test
pop
mov
cmps
push
ret
jmp
adc
(bad)
cmp
popa
out
mov
add
inc
add
or
jle
and
xchg
adc
mov
das
inc
dec
outs
jp
xchg
jae
mov
es
imul
push
int3
mov
cmc
mov
scas
cmp
mov
inc
ror
sub
ret
sti
call
mov
mov
imul
adc
popf
call
test
(bad)
(bad)
jb
push
lods
cwde
nop
iret
(bad)
dec
adc
lea
xchg
adc
pop
loope
das
out
mov
fucomip
jno
xchg
or
sti
outs
sub
in
stos
fwait
je
adc
mov
or
out
mov
retf
das
mov
sbb
sub
inc
mov
(bad)
cmp
xor
mov
ins
test
lods
dec
and
pop
test
(bad)
sbb
jns
(bad)
xchg
dec
clc
push
shr
lods
push
adc
je
imul
inc
sbb
and
sub
in
push
sar
shl
jbe
outs
add
xchg
xlat
mov
jg
mov
test
sbb
sub
loop
xchg
mov
hlt
loope
adc
and
scas
mov
add
stc
xchg
icebp
adc
retf
sub
es
mov
or
jmp
jge
mov
pop
push
cs
frstor
test
in
cmp
sbb
pop
rol
push
mov
int
mov
arpl
pushf
arpl
pop
push
mov
test
jp
lods
mov
in
shl
ror
dec
lds
(bad)
fwait
add
xchg
or
scas
push
cmp
adc
icebp
xor
push
jmp
(bad)
in
ret
popa
xlat
adc
sub
add
mov
mov
shr
or
scas
push
ret
push
in
ret
sbb
mov
out
sysenter
(bad)
jmp
jg
or
aam
sbb
xor
mov
push
into
mov
xor
push
out
js
sbb
xchg
cmp
iret
mov
mov
add
(bad)
mov
ins
sbb
daa
mov
mov
call
loop
push
shl
shr
and
mov
sbb
push
dec
outs
mov
in
and
lods
fwait
stos
inc
push
jl
and
pop
dec
dec
repz
cmp
popf
mul
pop
push
inc
stos
aas
(bad)
cdq
jnp
imul
add
and
mov
lock
dec
or
push
xor
mov
xchg
fwait
sar
pushf
sar
cwde
test
push
in
imul
jl
aad
cmp
stos
das
jmp
or
jb
pop
inc
sti
je
xor
leave
mov
inc
scas
(bad)
sub
pop
cmps
sub
loopne
jb
fstp
imul
cli
rcl
cli
jbe
out
jg
cmp
cmp
sti
push
mov
fst
cmp
repz
xchg
mov
mov
add
push
fmul
ds
pop
xchg
movs
push
and
adc
pusha
xchg
cmps
cwde
cwde
out
cmp
sub
xor
pop
ficom
addr16
and
(bad)
jb
in
pop
add
cld
(bad)
fst
and
and
dec
and
(bad)
ror
sahf
and
movs
xchg
add
scas
pop
push
(bad)
movs
adc
adc
push
movs
xchg
xlat
jmp
mov
(bad)
sbb
add
(bad)
je
push
ja
fwait
mov
push
or
mov
push
loop
(bad)
call
dec
das
repnz
push
mov
push
xor
repnz
out
cmp
fs
cdq
jnp
imul
cdq
cmps
mov
add
push
(bad)
mov
jmp
pop
jmp
xor
in
sub
fldenv
mov
xchg
sub
push
and
ds
cmp
mov
shl
retf
mov
xchg
xor
es
inc
cli
dec
jge
xor
in
ins
retf
mov
in
mov
popf
adc
xchg
(bad)
fwait
push
outs
movs
adc
push
adc
sub
and
mov
pop
xor
jle
mov
fiadd
cli
shr
xor
mov
xor
cmp
icebp
cmp
sub
inc
inc
(bad)
sub
or
sbb
js
and
cli
pop
xchg
shr
mov
rcl
dec
mov
loope
int3
mov
aas
and
(bad)
lods
sbb
sub
adc
adc
outs
sub
dec
jae
aad
aaa
pop
add
mov
cmp
aam
sti
ja
fwait
mov
inc
cmp
xor
out
scas
lods
lock
inc
test
inc
popa
fadd
ds
(bad)
jns
add
ret
popf
inc
bound
es
(bad)
pop
xchg
(bad)
ror
sbb
inc
mov
or
xor
xchg
iret
xchg
imul
(bad)
rcl
in
pop
mov
(bad)
icebp
and
xchg
(bad)
mov
and
sub
rcr
mov
sbb
test
fidivr
pop
mov
in
in
sbb
dec
mov
scas
cmp
mul
in
imul
pop
(bad)
loopne
or
xchg
in
arpl
dec
ret
pop
add
mov
jnp
in
out
and
xchg
cld
push
inc
push
enter
mov
pop
cmp
jbe
pop
xor
sbb
add
mov
push
pop
jle
cld
sbb
xor
out
sub
mov
js
dec
test
mov
inc
sbb
loop
inc
mov
adc
and
sbb
call
shl
je
dec
hlt
or
pusha
mov
in
in
mov
test
push
movs
in
pop
push
cld
push
scas
sbb
dec
dec
inc
jne
cmc
ss
mov
aaa
jb
(bad)
aaa
nop
lods
or
and
icebp
add
mov
jne
psubsb
jle
jmp
fmul
pop
aas
jg
pop
inc
jb
test
or
dec
xchg
push
xchg
xchg
mov
icebp
loop
add
cwde
mov
or
enter
sahf
push
jno
mov
inc
inc
push
pop
div
dec
jle
loopne
inc
es
mov
jmp
mov
dec
ins
push
mov
inc
pop
(bad)
ja
shr
in
push
sahf
test
mov
test
xchg
cmp
in
(bad)
or
nop
jnp
jmp
xor
jno
retf
xchg
and
pop
fidiv
pop
loopne
push
xchg
mov
jmp
movs
mov
cmp
leave
popf
adc
add
pop
in
fadd
jmp
or
into
sbb
jl
mov
icebp
or
pop
jnp
push
and
mov
ret
or
mov
dec
loope
sti
(bad)
cmp
in
sbb
lods
push
adc
add
loopne
aaa
mov
(bad)
cmp
rcl
bound
daa
ret
mov
stos
mov
add
or
mov
adc
shr
xchg
dec
push
sti
jecxz
cld
inc
outs
shl
adc
fcom
cs
dec
inc
shl
mov
ds
xchg
clc
inc
add
mov
sar
mov
shr
cmp
js
jl
retf
shl
dec
add
(bad)
jmp
sbb
lahf
jb
push
sub
loope
popa
mov
xor
sub
add
xor
push
cdq
pop
push
xor
pop
mov
mov
push
(bad)
std
fisub
imul
pop
fndisi(8087
cmp
add
add
push
adc
aad
movs
daa
and
jns
xchg
leave
cmp
(bad)
stos
cwde
icebp
xor
movs
jmp
das
shr
bound
inc
fdivr
outs
sub
aad
loop
imul
xchg
repz
xlat
mov
js
and
popa
pop
movs
mov
adc
push
in
mov
mov
ret
test
inc
sahf
int
and
push
pop
xor
fstp
pushf
push
mov
sar
(bad)
mov
pop
in
mov
and
int
in
jecxz
fstp
jp
jge
add
and
mov
pop
xchg
shr
mov
mov
xchg
aad
sub
in
lock
neg
sub
push
sub
call
ret
dec
mov
in
mov
jmp
(bad)
sbb
xor
mov
popf
push
mov
movs
int
xchg
jg
out
(bad)
int
rcr
inc
mov
sar
jg
int3
sbb
cmp
cs
and
pusha
shl
push
call
js
test
je
(bad)
ins
pop
cmp
push
jg
dec
pop
(bad)
or
rol
shl
mov
push
test
int3
push
add
pushf
push
dec
inc
jbe
lea
jne
imul
cld
push
push
pop
stos
mov
mov
repnz
jg
sub
(bad)
push
int3
dec
or
sahf
jns
arpl
leave
adc
int
call
jb
pop
mov
dec
sbb
aad
mov
imul
shl
stos
cmp
mov
pop
mov
pop
ret
xchg
fisttp
cwde
dec
xchg
sbb
adc
sub
add
fdivr
sar
add
jl
adc
mul
jae
fldenv
xchg
leave
popf
fsub
movs
fsubp
xchg
sar
test
mov
jnp
sti
adc
cld
jge
enter
nop
push
cmp
xchg
or
sub
repnz
mov
mov
(bad)
mov
mov
sbb
jno
std
push
mov
test
das
cmps
xchg
in
loop
test
sub
adc
mov
jb
in
scas
fistp
lock
push
mov
mov
(bad)
pop
lea
imul
add
adc
adc
jle
leave
fdiv
lods
nop
(bad)
aam
xor
ins
lahf
dec
scas
jg
fiadd
sub
jecxz
das
mov
push
mov
call
mov
xor
xor
dec
add
loop
jmp
lock
mov
ror
mov
jnp
test
and
mov
push
xchg
adc
cmps
fiadd
mov
pop
mov
sbb
call
inc
outs
mov
(bad)
sbb
scas
ins
ja
ret
or
jg
sub
push
xchg
add
cmp
std
inc
or
movs
add
pop
shl
movs
stos
mov
add
mov
or
shl
mov
vminps
cmp
mov
frstor
add
enter
(bad)
dec
retf
in
pop
jmp
jp
int3
popf
cmp
fsubp
leave
sahf
pop
and
jo
shr
je
test
push
add
pop
sbb
and
mov
xor
inc
mov
sar
imul
cmps
inc
mov
in
sbb
xchg
retf
in
inc
sbb
jnp
cmp
test
sub
fdiv
scas
mov
push
gs
mov
out
inc
mov
in
dec
(bad)
jo
popa
sub
(bad)
shl
movs
es
adc
sbb
adc
jmp
xchg
or
daa
or
stos
fild
fmul
(bad)
mov
xchg
loope
fimul
or
push
dec
xor
(bad)
xor
mov
movs
movs
pop
clc
enter
inc
shr
sub
cs
inc
mov
repnz
jge
frstor
(bad)
retf
(bad)
je
jg
dec
hlt
sub
push
popa
in
xchg
loope
jp
bound
sbb
sbb
test
cli
mov
push
shl
icebp
pop
fwait
sbb
inc
sub
add
js
sub
hlt
sbb
and
xlat
enter
iret
mov
shr
dec
test
pop
out
push
pop
sahf
loope
cmp
mov
push
mov
loope
stc
les
or
arpl
xor
inc
mov
mov
addr16
cmps
xor
push
cli
mov
inc
imul
cmp
std
sbb
(bad)
mov
and
mov
movs
sub
mov
xor
push
push
add
stos
mov
pop
movs
js
pop
xchg
repnz
sub
in
dec
stc
scas
or
mov
addr16
fs
push
push
dec
pushf
add
xchg
sbb
lock
(bad)
cmps
or
test
inc
pop
xor
popf
jp
leave
gs
xchg
xor
cmovg
sub
arpl
inc
mov
xchg
cmps
mov
and
add
pop
cmp
xor
ja
dec
pop
lods
mov
arpl
jg
or
adc
pop
mov
imul
push
fbld
out
sar
mov
in
or
into
mov
pop
push
fst
and
int
in
out
ds
or
xlat
pop
xchg
push
into
mov
sbb
push
xor
es
bound
int
lds
mov
sar
inc
inc
mov
aas
xchg
pop
cmp
pop
xlat
jl
mov
and
aas
push
jmp
or
push
sub
mov
mov
sbb
shr
mov
(bad)
cmp
in
cmp
(bad)
retf
cmp
mov
xor
xchg
arpl
inc
push
xor
cmp
ins
cs
push
push
push
push
push
cmp
pop
inc
mov
(bad)
not
xor
jecxz
push
push
xlat
lods
fistp
fild
vpunpcklqdq
push
lahf
jbe
pop
mov
or
test
mov
sub
xchg
sbb
xor
pushf
leave
movs
adc
jge
fwait
jl
in
lods
jle
mov
arpl
scas
xor
xchg
adc
bound
mov
mov
push
aas
scas
and
pushf
mov
popa
fisub
push
int3
sbb
les
push
mov
(bad)
mov
ficomp
xor
mov
add
popa
pop
aaa
fdiv
dec
push
or
popa
xlat
clc
jle
in
sub
pop
fmul
cwde
inc
cmc
dec
jnp
jae
pop
dec
xor
test
fisttp
sahf
push
sbb
mov
(bad)
xor
add
mov
std
jno
add
add
mov
(bad)
and
sets
fldcw
fnstcw
push
adc
cwde
and
mov
cmp
sahf
call
inc
imul
jno
mov
stc
sub
hlt
movs
out
sbb
push
adc
nop
jae
divps
ret
inc
adc
jae
cmp
nop
adc
inc
cdq
dec
xlat
je
mov
sbb
shl
(bad)
mov
in
adc
imul
gs
fisttp
mov
ins
xchg
std
sbb
push
cmp
cwde
sub
ret
jge
push
push
das
imul
sbb
inc
or
xchg
in
cld
add
push
js
adc
in
xlat
stos
xchg
mov
mov
mov
cmp
daa
stc
xchg
cld
outs
sub
xchg
jae
popa
sub
xchg
(bad)
fimul
ret
xchg
and
dec
in
mov
dec
cmp
xor
pop
icebp
cmp
movs
or
popf
push
sub
push
adc
pop
(bad)
jmp
aas
pop
out
dec
pop
arpl
(bad)
push
test
mov
lods
fwait
sub
ja
(bad)
jmp
jb
hlt
jne
adc
or
fimul
sub
pop
sub
(bad)
aas
int3
into
jne
ss
(bad)
pop
gs
sub
cmp
sub
mov
dec
inc
push
or
xchg
in
inc
cmp
cmp
push
retf
add
sub
mov
stc
sbb
js
sbb
pop
jg
fist
inc
popf
add
and
mov
test
push
frstor
(bad)
mov
in
jle
adc
dec
mov
jbe
add
ret
pop
movs
cmp
sbb
(bad)
fs
fdivr
jl
out
(bad)
out
or
clc
std
mov
in
dec
sub
pop
cs
and
dec
ja
rcl
cmp
or
mov
mov
cmp
xor
sbb
or
sbb
inc
pop
and
mov
cwde
jmp
ja
pop
and
pop
cmp
mov
pop
push
push
repz
fisub
push
dec
jl
xor
mov
sbb
(bad)
fiadd
fnstcw
sar
iret
adc
cdq
or
imul
sub
xchg
stc
sub
cmps
jl
dec
and
push
addr16
out
xchg
fild
imul
fidiv
pop
cmp
pop
xor
aas
add
sub
jge
bound
daa
dec
jl
add
cwde
out
cmps
jp
leave
es
aaa
ret
ret
std
adc
retf
xor
(bad)
out
sbb
cmps
jl
push
inc
imul
mov
mov
jmp
jb
neg
jle
or
or
mov
dec
loop
xlat
mov
jl
xchg
add
cmp
test
jl
mov
xor
retf
mov
test
sub
or
or
(bad)
dec
retf
jae
sti
fcomp
cmp
and
imul
mov
dec
stos
adc
test
lahf
cld
adc
lea
hlt
call
pop
mov
gs
push
sbb
aam
xchg
dec
add
(bad)
fstp
(bad)
jg
dec
inc
into
jne
jmp
stc
cmp
inc
div
jbe
inc
jno
pop
jns
inc
cmp
mov
gs
mov
mov
mov
sub
in
sbb
mov
pushw
pop
clc
cwde
mov
mov
sbb
mov
push
jecxz
add
adc
stos
mov
add
aam
lock
pop
add
(bad)
lahf
mov
icebp
rcr
lds
es
ins
jl
or
into
pop
jmp
aam
inc
mov
push
cmp
(bad)
and
div
xor
hlt
enter
adc
cld
aam
movs
mov
push
cmps
jae
push
xor
mov
xor
movs
mov
rol
inc
(bad)
pop
arpl
or
mov
sub
sahf
inc
xor
cmp
mov
jns
jg
cdq
push
dec
(bad)
pushf
mov
fsubr
movs
inc
jae
scas
dec
out
xor
sub
dec
xchg
test
sbb
popf
xchg
fwait
lds
mov
cld
outs
xor
sbb
in
test
cmp
push
pop
push
je
popa
das
push
push
out
lock
sub
(bad)
fidivr
add
mov
test
test
mov
js
leave
mov
mul
ds
in
and
xchg
pushf
nop
cmps
push
adc
shl
int
sbb
jbe
shl
jle
adc
dec
cmp
jg
or
dec
xor
add
sub
add
xor
ins
sar
jge
xor
jg
xor
aaa
add
mov
and
rcl
fwait
push
ds
jo
cmc
into
add
cmovns
and
bound
ds
test
(bad)
xor
stos
int
(bad)
or
xadd
pusha
into
adc
push
rol
pop
cmp
sbb
jns
scas
adc
fs
dec
xchg
mov
inc
cmp
leave
pop
mov
cli
ds
adc
jb
push
pop
imul
mov
push
fldenv
push
fwait
add
shl
and
cmps
cs
aad
push
lea
mov
outs
out
cli
loope
xor
retf
mov
pop
mov
loope
sub
mov
xor
aam
inc
retf
inc
sbb
pop
int
loopne
xchg
mov
push
sbb
fst
xchg
sbb
mov
mov
sbb
sbb
movs
dec
lods
neg
or
test
imul
test
dec
into
mov
lods
fadd
adc
inc
sub
xchg
call
call
jg
inc
jo
dec
adc
push
pop
inc
cdq
pop
fisub
(bad)
pop
(bad)
stc
push
lods
mov
(bad)
(bad)
hlt
cmp
add
ins
rcr
jns
not
jmp
dec
inc
in
cmps
mov
add
jmp
int
bound
je
add
nop
enter
fistp
movs
(bad)
push
add
pop
or
mov
xlat
mov
push
inc
sbb
or
pop
mov
daa
cmp
es
(bad)
push
xor
sub
popf
push
lds
push
push
adc
pop
inc
outs
pop
aas
movs
rol
push
mov
lods
mov
rcr
cmp
(bad)
mov
repnz
stos
ret
sub
into
jle
mov
je
fcmovu
cmc
into
pop
mov
daa
push
mov
pop
pop
and
mov
neg
repnz
mov
push
mov
fst
push
adc
test
dec
inc
ja
mov
imul
out
movs
or
push
mov
(bad)
cmc
xor
ror
fisubr
in
adc
adc
call
dec
call
mov
shr
mov
xchg
rol
xchg
sbb
in
rcr
not
xor
lods
xchg
out
push
aad
xor
push
jns
in
pop
adc
cdq
mov
fcom
pop
addr16
mov
adc
lahf
mov
gs
(bad)
pusha
out
jb
mov
scas
add
out
out
add
pushf
fisubr
jb
fs
sub
scas
rol
mov
mov
nop
xchg
fsubr
in
enter
das
push
int
enter
cmp
adc
xchg
pusha
mov
cli
test
push
ret
ret
or
leave
dec
dec
sbb
imul
adc
scas
dec
lods
loope
mov
mov
fmulp
loopne
push
(bad)
(bad)
in
adc
fsubr
fwait
mov
and
sbb
scas
xchg
xchg
lds
icebp
mov
mul
fcmovb
push
jmp
les
sub
xor
loopne
in
mov
dec
add
mov
mov
push
pop
inc
jae
mov
cmp
(bad)
out
add
repz
adc
cwde
loop
jmp
mov
cmps
daa
pop
fwait
xchg
shl
in
add
sub
dec
sub
aas
jmp
(bad)
shr
loopne
xchg
push
sbb
inc
jmp
pop
in
mov
(bad)
lea
ss
dec
xor
aas
cmp
in
push
or
(bad)
lods
cmp
and
add
out
jecxz
pop
xchg
je
psubusw
add
mov
jne
jmp
jmp
sbb
stc
mov
adc
test
fsub
clc
jo
pop
sbb
int3
cld
cmp
addr16
(bad)
mov
test
lods
int3
cmp
add
mov
gs
pop
and
cmp
fistp
jbe
cli
xor
aaa
xchg
mov
mov
imul
sub
dec
and
jmp
test
pop
inc
xchg
ds
or
out
fild
ret
bound
inc
sub
repnz
push
and
xor
sbb
sbb
jo
pop
popa
inc
sub
sub
sbb
iret
cmp
enter
adc
imul
jne
dec
jo
push
not
and
dec
les
adc
enter
pop
mov
les
leave
shl
push
outs
jp
sbb
mov
iret
out
popa
lock
out
ret
nop
mov
adc
mov
cli
xchg
popf
lods
mov
sub
xor
sbb
or
es
xchg
movs
pop
enter
push
outs
mov
cmps
jb
pop
xor
mov
loop
fild
call
cld
int
mov
adc
xchg
sbb
or
movs
add
inc
test
(bad)
data16
add
in
sub
int3
arpl
rcr
adc
cs
cmps
adc
inc
popf
mov
cmc
fwait
mov
mov
js
or
arpl
inc
pop
ja
sbb
ins
jb
xchg
pop
sub
push
cmc
pop
xor
(bad)
adc
fmul
mov
jbe
xchg
fistp
shr
sar
repnz
ss
cwde
hlt
out
inc
ss
mov
jbe
sub
jmp
sub
mov
gs
add
pop
mov
sbb
shl
out
cmps
test
jmp
scas
push
mov
js
iret
(bad)
xor
shl
mov
jns
imul
pop
sbb
imul
ins
xchg
ss
cmp
pop
clc
aaa
jae
shl
nop
xchg
icebp
xchg
sbb
cdq
jno
imul
pop
fsubr
std
aaa
lock
call
dec
mov
pop
jmp
outs
jg
cwde
pop
add
push
mov
cmp
mov
add
test
aaa
sar
in
rcl
pusha
jno
adc
(bad)
mov
mov
adc
mov
and
or
sub
shl
inc
retf
retf
sub
in
xor
repz
movs
loop
and
jle
inc
in
or
xchg
movs
jno
mov
lahf
dec
xchg
mov
push
das
loop
sti
mov
popf
mov
sub
mov
mov
call
sub
repz
inc
gs
adc
sbb
pushf
mov
sbb
push
pushf
loopne
sub
xor
add
sub
repz
mov
cmp
loope
inc
movs
sbb
ror
adc
push
(bad)
fnstenv
fimul
pop
cmp
call
mov
xor
frstpm(287
mov
xor
lock
and
cmp
jmp
sahf
add
cmp
popf
fscale
mov
adc
aam
adc
jp
ins
mov
lods
push
xchg
mov
dec
scas
not
push
sub
test
mov
mov
sbb
data16
cwde
repz
test
in
fnstcw
sbb
movs
pop
cmp
mov
call
gs
dec
in
lahf
out
dec
cmp
push
jecxz
cmps
cmp
lea
jp
and
cmps
(bad)
int
and
out
in
pop
jno
inc
in
movs
lods
sbb
repnz
addr16
imul
je
xor
xlat
call
clc
xor
cmc
jmp
xor
fwait
cdq
mov
mov
and
test
je
xchg
call
hlt
sub
(bad)
scas
test
push
mov
mov
xchg
sar
and
xchg
cmps
push
sub
and
mov
cmp
push
dec
xor
out
dec
in
or
dec
ror
push
jno
es
iret
cmp
gs
ret
aam
imul
inc
fsubr
ss
xor
dec
or
nop
fsubr
and
pop
call
push
repnz
jb
adc
cmc
stos
cmp
int
lds
lds
inc
out
test
mov
cdq
mov
popf
add
xchg
push
or
inc
fcomp
loopne
retf
clc
pop
fcmovbe
ds
jmp
test
loop
mov
lahf
or
fst
aad
fbstp
mov
retf
dec
adc
shl
push
ja
je
(bad)
and
(bad)
addr16
out
repz
sbb
sbb
add
fidivr
dec
icebp
int3
jmp
mov
cld
jmp
mov
aas
mov
and
movs
xchg
retf
(bad)
gs
mov
push
test
cmp
cmp
pushf
lock
cli
(bad)
imul
mov
dec
adc
in
dec
cmp
scas
addr16
imul
xchg
fdiv
mov
and
call
adc
adc
jnp
sbb
cmps
mov
inc
ja
add
retf
and
in
inc
cmps
cs
inc
les
(bad)
cmps
fld
xchg
xor
xor
pusha
dec
outs
push
loop
mov
or
or
mov
dec
xchg
xchg
aas
add
call
adc
mov
adc
sub
loop
(bad)
ins
or
mov
xchg
js
cmp
repnz
mov
out
and
push
mov
imul
add
rcr
scas
sub
or
(bad)
cmp
dec
dec
cmp
imul
cmp
dec
xchg
cmp
sub
out
push
sub
fsub
push
push
pop
sbb
aaa
icebp
arpl
or
xchg
jns
mov
cld
xchg
mov
lds
lahf
sahf
adc
lock
rcl
xor
xchg
inc
cmp
pop
cmp
jae
sub
jno
clc
stos
pop
xchg
mov
push
loopne
pop
and
clc
outs
and
les
jb
pop
in
jb
retf
ret
lods
jp
pop
(bad)
in
fadd
outs
cmps
xchg
pop
je
sub
mov
xchg
push
mov
lods
mov
mov
movs
cmp
xchg
test
stos
mov
sbb
xchg
arpl
in
arpl
test
jl
mov
inc
mov
sbb
mov
and
jp
clc
pushf
cdq
mov
(bad)
repnz
pop
mov
out
(bad)
fst
mov
aas
push
jecxz
xchg
imul
jg
or
fiadd
dec
jl
xchg
jo
pop
dec
mov
dec
inc
xchg
popf
inc
addr16
adc
bound
sub
loop
or
xchg
push
fisttp
dec
mov
mov
and
fisub
mov
mov
xchg
xchg
out
xchg
pop
xor
loope
pop
push
dec
or
dec
pop
out
cdq
mov
mov
ins
inc
sub
(bad)
push
sahf
add
mov
not
stc
xchg
ret
jae
jo
adc
dec
nop
aad
stos
push
jecxz
xlat
mov
imul
and
aas
repnz
call
cmc
sub
dec
mov
jne
scas
jns
pop
sahf
or
fnsave
cmps
xor
ja
push
sbb
(bad)
push
hlt
xor
sbb
cld
mov
mov
es
mov
push
jmp
inc
dec
xor
jge
dec
(bad)
sub
shr
ficomp
sbb
repz
dec
ja
adc
fimul
push
jecxz
mov
mov
dec
sub
jle
test
and
mov
rcl
jae
jo
(bad)
pop
fld
enter
sub
xchg
inc
(bad)
jmp
mov
jns
xchg
xchg
add
add
data16
mov
fwait
xor
pusha
xchg
xchg
jle
sbb
out
or
scas
jno
and
xor
call
in
xchg
(bad)
mov
cli
(bad)
(bad)
leave
cdq
push
popa
cmp
(bad)
out
adc
(bad)
out
inc
in
push
push
push
and
mov
xchg
scas
jmp
or
push
bound
stos
scas
add
psrlw
xchg
data16
xchg
adc
push
arpl
cmp
dec
shl
ins
sub
mov
pop
sub
mov
leave
mov
mov
sbb
je
add
push
ror
push
ror
out
mov
shl
pop
xor
iret
in
add
paddd
(bad)
push
jmp
jmp
push
fild
in
mov
daa
popa
jecxz
out
sub
arpl
jg
push
int3
out
sbb
test
movs
bound
call
shl
es
pop
sbb
xchg
push
(bad)
mov
jle
sub
call
idiv
cmp
sbb
dec
jg
cmp
je
add
jl
push
xor
ds
pop
dec
xor
imul
push
jbe
addr16
jmp
loope
sub
gs
data16
mov
and
mov
mov
mov
push
mov
es
adc
dec
cmc
bound
or
paddq
jg
cmps
add
jmp
xchg
sub
loope
dec
rol
fimul
xchg
ins
adc
fs
jp
sub
(bad)
outs
and
mov
jmp
xchg
push
push
leave
pop
inc
mov
sub
and
nop
mov
mov
push
nop
add
pop
mov
sub
or
pop
test
xchg
or
or
jnp
sbb
and
jne
iret
leave
movs
xchg
dec
add
repnz
push
push
cmp
adc
sub
pop
cwde
rcr
jp
sub
xor
adc
inc
push
mov
je
shl
push
(bad)
out
dec
inc
push
sub
dec
rol
(bad)
ja
mov
pop
(bad)
stos
or
outs
outs
xchg
and
aam
pop
dec
mov
dec
addr16
ins
movs
cmp
lock
jbe
movs
or
pop
nop
out
xchg
and
add
xor
mov
pop
push
call
ins
fbstp
fucomip
neg
lea
mov
dec
cmp
pop
cmc
mov
mov
ins
mov
daa
ss
pop
pop
mov
scas
psubsb
arpl
cmp
fcmovbe
fstp
xchg
adc
sbb
jnp
adc
fmul
jo
retf
movs
or
out
add
jmp
(bad)
mov
adc
iret
out
sbb
cmps
dec
retf
std
cmps
call
mov
pop
icebp
sbb
xchg
add
leave
jmp
jp
aad
call
push
push
mov
jmp
ret
ins
adc
cmp
inc
jl
js
sub
pop
sub
cwde
out
jecxz
es
mov
xchg
xchg
or
or
ja
ret
pop
jg
test
add
mov
pusha
fnstcw
out
ldmxcsr
push
push
mov
ds
or
push
stos
retf
and
clc
xchg
into
popf
push
inc
jmp
add
test
or
sbb
(bad)
retf
adc
sub
loope
mov
xor
cmp
scas
lea
sahf
in
in
cmovs
aas
retf
jns
inc
hlt
or
fdivr
movs
fnsave
popa
cld
mov
aaa
(bad)
jg
icebp
mov
in
adc
inc
mov
iret
ret
lahf
aam
mov
pop
(bad)
stos
jae
xor
jge
mov
pop
fbstp
outs
xchg
mov
cmps
outs
mov
mov
sub
cmp
xchg
jle
mov
cmp
add
inc
pop
imul
retf
push
pusha
and
rcl
fcomp
(bad)
cmp
call
adc
es
sub
in
outs
std
dec
and
cmps
neg
push
xlat
scas
(bad)
or
js
jg
or
stos
enter
in
mov
inc
dec
mov
cmps
mov
adc
cmp
xchg
xlat
jle
inc
adc
jecxz
jmp
test
in
push
in
(bad)
(bad)
sub
ds
popa
jg
sub
cmp
mov
mov
add
push
jp
loope
retf
ret
int
xor
in
es
cs
popa
aad
sbb
mov
in
push
and
push
mov
(bad)
jnp
and
pop
jo
int3
pushf
cmp
aad
add
test
out
movs
mov
out
adc
cmp
push
les
mov
mov
add
pop
xor
adc
hlt
mov
xor
enter
mov
inc
cmp
ds
dec
test
adc
jno
lods
test
(bad)
ins
pop
jle
or
mov
xchg
ret
loopne
outs
ret
arpl
or
popa
mov
icebp
movs
mov
xchg
lds
iret
icebp
push
popa
test
dec
sbb
xor
enter
and
pop
sbb
arpl
sub
jns
lods
xchg
bound
push
in
movs
sbb
inc
imul
clc
arpl
neg
or
fcom
sbb
mov
frstor
sar
hlt
stc
idiv
enter
imul
imul
push
sbb
xchg
sub
inc
jne
adc
es
fmul
push
sub
test
cld
and
ins
ja
xchg
pusha
(bad)
cmp
shl
(bad)
mov
adc
push
sub
or
pop
(bad)
pusha
cwde
sahf
fild
gs
outs
xor
lods
shl
gs
xor
cmp
cmp
test
ret
dec
ss
sbb
jb
fs
cmps
pusha
setno
mov
sbb
sbb
int3
fstp
pop
mov
clc
or
enter
aaa
call
mov
das
mov
movs
sbb
fs
adc
dec
popa
arpl
mov
jbe
xor
mov
test
hlt
push
or
and
inc
je
shl
sbb
ds
dec
cs
sub
ins
xchg
div
int
push
inc
test
leave
jle
ds
inc
mov
dec
sbb
stos
cmc
xchg
mov
je
xchg
stc
ins
jecxz
popa
fild
mov
sub
ins
aam
scas
jo
into
jno
jns
in
mov
aas
cmp
pop
addr16
mov
and
cmp
inc
sbb
je
mov
inc
xchg
shl
sbb
add
xor
(bad)
dec
sar
push
adc
in
add
jns
xchg
sub
sahf
inc
sub
out
sar
and
rcr
inc
jne
push
in
adc
jns
imul
xchg
add
lahf
jns
sub
je
inc
loopne
jne
and
pop
xchg
cmp
(bad)
jmp
in
or
or
out
ret
pop
and
aad
mov
dec
iret
test
cmps
fcomp
push
jnp
mov
ret
adc
sub
sub
adc
in
sub
and
int3
out
cmp
fisub
pop
push
fild
sbb
daa
fisttp
sub
sbb
pop
jle
push
btr
xor
add
ja
scas
dec
xchg
inc
repz
add
xor
dec
push
or
addr16
dec
dec
jp
sub
scas
dec
retf
das
jb
mov
jb
fnsave
pop
aam
call
dec
mov
stc
leave
in
imul
lea
fisttp
sbb
adc
adc
or
aaa
int
pop
fadd
and
jb
jbe
arpl
ret
loopne
sub
jge
test
dec
add
push
push
jecxz
and
cmp
jne
pusha
mov
sbb
fsubr
jge
jo
mov
in
jb
add
dec
call
aam
icebp
and
out
cmp
mul
outs
iret
ds
push
loope
cmp
rol
popf
pop
xchg
push
aaa
mov
mov
icebp
dec
jg
inc
xor
inc
neg
add
repz
ja
stos
fwait
fs
call
dec
fidivr
xor
jbe
cmp
add
cmp
inc
mov
dec
inc
mov
jp
xchg
and
fdivr
push
mov
sbb
jne
fdivr
mov
and
pop
push
int3
ret
adc
mov
mov
mov
xor
test
xor
push
inc
dec
fnstsw
addr16
push
mov
fisubr
in
push
aad
adc
xchg
xchg
call
mov
or
mov
jecxz
sar
(bad)
xchg
or
fimul
js
cmps
popa
adc
sub
or
cwde
aad
mov
imul
data16
stc
xor
fstp
and
test
fnstcw
jnp
fwait
stc
mov
fistp
stc
movs
lds
sbb
push
cli
or
cmps
jb
fs
not
xchg
jg
cmps
jns
int3
push
sbb
mov
int
dec
pusha
or
xor
dec
mov
movs
lea
cwde
mov
repnz
fs
repz
cmp
outs
ds
sbb
in
and
push
jb
mov
pop
test
sti
aaa
imul
in
xchg
es
test
dec
shr
sub
fnstenv
inc
push
or
repz
pop
mov
fild
xchg
xchg
mov
mov
pop
adc
js
adc
mov
mov
iret
dec
lods
cmp
dec
and
sub
inc
stos
sbb
cli
mov
mov
mov
mov
pop
cld
popa
jmp
cmps
xchg
sbb
push
and
pop
and
xor
les
movs
icebp
int
aas
sbb
mov
in
out
popa
xchg
fcomp
or
stc
repz
ss
xor
jo
ret
fbstp
sti
fcom
gs
xchg
shr
dec
loope
aad
and
bound
inc
(bad)
ja
xchg
bound
pop
scas
push
and
inc
mov
xchg
fdivr
stos
cwde
pushf
add
adc
jmp
mov
xchg
pop
ds
mov
push
fnstcw
int
shl
add
int3
adc
sahf
jb
jno
aaa
psraw
push
xchg
dec
sbb
xor
jge
dec
adc
push
or
jnp
jp
sub
lock
adc
ss
repnz
in
cmp
pusha
cmp
out
in
test
jmp
inc
fnstenv
mov
adc
jns
cmp
scas
mov
mov
inc
and
in
cmp
sub
xchg
popa
push
sbb
aas
leavew
call
std
add
jecxz
mov
lahf
leave
into
clc
cli
dec
ds
(bad)
scas
retf
scas
cs
dec
enter
clc
xor
repnz
mov
ret
push
rcr
retf
ror
mov
xor
outs
cmp
push
xchg
shl
sbb
out
xchg
frstor
jno
test
mov
push
out
jl
push
cmp
xor
popf
pop
cmp
scas
adc
gs
or
jnp
add
adc
pop
pop
lea
adc
cs
pop
pop
adc
mov
sbb
not
or
dec
(bad)
stos
lods
dec
xchg
int
jmp
lods
jno
sti
(bad)
cmp
add
or
push
xchg
imul
cmc
aad
fs
retf
cmp
jp
lods
or
and
and
aam
pop
in
jle
push
push
ins
adc
dec
imul
mov
dec
mov
jp
push
xor
loope
adc
(bad)
test
fs
jecxz
enter
jg
pop
lahf
loope
pop
cmp
adc
jmp
jge
mov
jno
ja
jo
jnp
adc
sbb
out
push
xchg
sbb
inc
aaa
dec
test
frstor
jns
dec
or
xchg
rcl
inc
cmp
arpl
or
shr
push
pop
scas
sub
mov
push
xchg
stos
daa
fst
or
xchg
test
lds
sub
xchg
adc
pop
adc
push
cmps
sbb
aam
int3
les
fidiv
push
sub
mov
stos
frstor
cmp
adc
xchg
(bad)
dec
and
jae
xor
dec
dec
pop
pop
js
pop
out
lds
inc
sbb
cli
sbb
popa
movs
cmp
lahf
and
jbe
xor
les
pop
(bad)
pop
test
repnz
mov
fs
sub
jnp
rol
pop
iret
leave
cmp
mov
jge
cld
outs
mov
pop
mov
mov
rol
test
ja
or
add
cdq
cmp
mov
rcr
mov
retf
repz
xchg
add
xor
mov
adc
or
xchg
sub
dec
imul
mov
sbb
shl
pop
dec
dec
fisttp
mov
stos
std
xor
stos
out
std
cmp
push
sub
sbb
xor
jge
test
dec
pop
loope
fwait
iret
(bad)
sub
xor
xor
arpl
scas
rcr
mov
fstp
sub
mov
outs
out
push
push
test
xor
xor
cmc
sub
daa
cmps
in
cld
test
inc
or
adc
lods
imul
shl
xchg
sbb
aaa
icebp
xlat
shr
je
push
stos
dec
mov
das
adc
or
pop
cwde
sbb
mov
int
pop
rcl
and
inc
inc
xor
cmp
jle
cmp
pop
sub
push
mov
sti
int
xor
out
add
movs
mov
stc
jo
pop
outs
mov
scas
jecxz
repnz
cmps
into
lock
xchg
sbb
sahf
arpl
repnz
mov
shl
cmp
mov
mov
pop
inc
sti
shl
or
jae
fistp
into
cmc
clc
push
add
int
fcomp
inc
cmc
jmp
js
mov
xlat
rcl
pop
cmp
es
movs
lds
(bad)
(bad)
ins
shr
pushf
(bad)
hlt
push
imul
push
in
jbe
lods
dec
push
mov
in
and
add
in
sub
sbb
lds
mov
jmp
inc
ja
jae
in
sbb
ret
lea
xor
jae
ror
pop
sbb
cwde
adc
xchg
push
fstp
dec
push
lods
mov
lds
mov
xor
mov
iret
cmp
jmp
inc
adc
push
mov
add
stc
sub
mov
pushf
icebp
jg
xlat
add
cmp
cmp
stc
push
xchg
out
add
retf
hlt
pop
mov
sbb
xor
xchg
cld
(bad)
ds
call
and
push
xor
mov
and
or
jne
jg
movs
inc
jae
int
stos
push
sub
scas
repnz
dec
fadd
sub
adc
mov
pop
shl
mov
out
xchg
push
and
shr
lods
bound
repnz
not
rol
dec
(bad)
xor
cmc
xlat
xchg
xchg
mov
jmp
(bad)
rcr
mov
out
sbb
jae
cwde
fs
mov
ret
mov
dec
mov
inc
sub
call
sub
push
mov
pusha
pop
xchg
mov
mov
sbb
push
jnp
and
cli
aaa
mov
(bad)
aas
push
sub
fsubr
add
aas
jecxz
pop
out
jbe
add
adc
repnz
leave
(bad)
mov
enter
cwde
mov
cmp
dec
cmp
and
push
test
icebp
xor
pop
mov
popa
loope
adc
ds
cmp
sti
arpl
or
into
in
sbb
cwde
fbstp
mov
cmps
cmps
xchg
mov
sahf
ret
xor
adc
ss
ret
es
arpl
xor
outs
push
pop
xchg
imul
into
scas
xchg
aaa
nop
call
jge
js
cmp
les
cld
inc
dec
sub
sbb
daa
loop
sar
stc
sti
iret
jno
(bad)
and
dec
popf
pop
aaa
inc
xor
popa
scas
sbb
jl
rcr
icebp
cmc
xor
inc
cwde
and
mov
(bad)
ins
dec
fstp
or
mov
push
loop
nop
(bad)
fnstcw
int3
cmc
cs
sub
sti
cmps
fldl2e
dec
add
test
add
and
enter
xchg
loopne
push
bound
pusha
sub
lds
outs
inc
push
jmp
call
gs
(bad)
ins
test
push
or
mov
xchg
pop
pop
push
inc
adc
jmp
inc
pop
fnstsw
sub
xor
test
daa
sub
outs
dec
mov
enter
mov
sbb
test
adc
(bad)
cwde
ficomp
ins
jns
fs
cdq
pushf
and
lods
cmp
fwait
mov
std
jo
xor
push
dec
iret
ds
push
repz
aam
test
dec
pop
push
or
imul
sbb
cwde
fisttp
sbb
gs
fstp
hlt
sbb
dec
arpl
xor
mov
stos
push
and
inc
sbb
jmp
xor
scas
imul
shl
cmp
aas
push
cmp
cmp
jns
add
and
out
or
clc
test
push
test
test
int3
mov
inc
jge
adc
jp
jg
xchg
add
loop
add
inc
inc
(bad)
jle
xchg
lds
xchg
daa
cmp
xor
adc
jne
sar
icebp
fnstcw
loope
call
xchg
(bad)
das
(bad)
ins
push
movs
dec
aaa
hlt
push
in
push
cmp
cmps
push
mov
loope
pusha
jno
push
mov
dec
jo
adc
fidivr
add
cmp
inc
pop
inc
cli
xchg
inc
dec
das
jno
and
icebp
ja
inc
xor
popa
enter
jo
mov
into
pop
mov
neg
push
scas
and
aas
or
cwde
dec
push
sbb
js
repnz
xchg
repz
shl
jmp
das
push
adc
fwait
or
or
and
out
or
fsub
sub
mov
sub
xchg
rcl
sbb
jns
arpl
inc
out
icebp
repz
xchg
ret
inc
(bad)
cmp
or
jne
sar
mov
sbb
inc
and
popf
loopne
pop
and
mov
loop
sbb
rol
jo
stos
pushf
ds
dec
xor
iret
add
xchg
enter
push
xor
push
add
jge
or
addr16
(bad)
mov
xlat
lock
fidivr
nop
fs
jmp
pop
sahf
mov
rcl
xor
cmp
out
adc
dec
dec
cmps
and
cmc
sbb
cs
mov
inc
imul
in
pop
in
movs
add
mov
mov
outs
sbb
push
adc
jnp
std
test
lock
dec
popf
jecxz
stos
add
cld
fbstp
pop
lods
out
aad
xor
dec
xlat
sahf
mov
dec
push
lahf
pop
fwait
push
(bad)
pop
stc
pop
sub
in
mov
jg
sbb
lods
sub
pop
mov
mov
mov
test
xchg
xor
or
outs
lods
pusha
cmp
leave
aad
mov
out
sub
dec
pop
test
std
jmp
push
jo
pop
inc
mov
push
mov
sub
sbb
es
push
fsub
stos
dec
inc
mov
out
jle
push
dec
xor
pop
loope
jae
add
test
push
pop
popf
rep
xor
jmp
mov
xor
les
neg
ja
add
(bad)
jmp
int
and
adc
bnd
fadd
pop
hlt
pop
or
add
mov
sbb
adc
out
and
mov
jmp
shr
ss
aaa
pop
not
scas
jge
dec
bnd
dec
lods
sbb
cmc
push
ins
inc
aad
jne
cmc
mov
(bad)
sbb
adc
inc
pushf
ffree
inc
test
push
adc
into
aam
inc
jb
loope
mov
xor
pop
sub
sbb
pushf
cmp
fdivp
xchg
push
jbe
mov
pushf
cmps
mov
add
add
and
je
ret
int
rol
add
out
sbb
lock
mov
xor
retf
mov
popa
rol
add
sti
jle
dec
and
jl
sti
fisubr
mov
jp
pop
ja
pop
into
xchg
pop
adc
int
repz
xor
call
ret
adc
mov
scas
dec
(bad)
es
dec
fsubr
(bad)
ss
clc
cli
rol
mov
loop
call
fwait
pushf
xlat
pop
cli
jae
sub
test
cmp
cdq
frstor
dec
sbb
push
mov
and
pop
jo
push
dec
inc
inc
in
fwait
pop
push
fisttp
jb
pop
cmp
sub
shl
xchg
test
ins
imul
pavgw
ret
jl
imul
add
fdivr
mov
inc
adc
ret
cmp
hlt
rcl
shr
gs
mov
fdivr
cmc
mov
retf
sar
adc
xor
(bad)
inc
and
imul
les
inc
pop
or
call
nop
sub
in
xchg
retf
mov
pusha
aam
push
into
hlt
mov
ins
repz
loop
(bad)
loopne
fwait
mov
or
lods
mov
mov
inc
pop
add
mov
in
cmp
mov
and
hlt
jae
xchg
fwait
cwde
pop
sub
mov
dec
jns
pop
hlt
adc
cmp
fnstsw
pop
xchg
ss
pop
out
jge
scas
push
fadd
mov
mov
int3
imul
bnd
cmc
mov
shl
jno
in
repz
jbe
mov
or
jg
stos
and
(bad)
aam
mov
xor
call
mov
pop
pushf
push
jmp
pop
mov
and
push
cdq
jmp
mov
shl
or
mov
push
dec
popa
mov
sti
mov
xchg
cmp
xor
in
fistp
gs
inc
cdq
(bad)
cwde
cmp
ds
fdivr
sbb
popf
cdq
mov
add
inc
cld
xchg
sbb
lods
sti
aam
mov
fsub
fsub
mov
jecxz
test
xchg
sahf
ins
addr16
pop
and
jmp
mov
jecxz
lahf
jmp
push
adc
test
push
scas
push
outs
les
mov
int
push
leave
mov
jmp
mov
test
ins
fstp
test
sahf
int
sub
mov
inc
cmp
mov
outs
lods
xchg
in
leave
clc
xor
dec
cdq
(bad)
jmp
lahf
inc
out
xlat
sub
sbb
mov
sti
mov
or
in
sbb
sahf
aaa
mov
cmp
mul
cmp
and
mov
xor
jecxz
xor
pushf
ins
inc
mov
aam
test
(bad)
in
ret
xor
inc
stc
sub
xor
cmps
xchg
push
iret
and
into
sub
mov
inc
add
pop
outs
dec
mov
mov
push
out
xor
pusha
inc
dec
cmc
pop
and
leave
ficomp
loop
mov
pop
stos
inc
sub
sbb
movs
ret
aad
sub
retf
mov
out
pop
mov
push
loopne
cmp
shl
mov
cmps
into
mov
(bad)
xchg
and
outs
cwde
out
or
push
jnp
mov
hlt
pop
lock
test
cmp
adc
nop
int3
xchg
mov
mov
dec
test
jbe
cmp
not
mov
mov
ror
mov
lds
xchg
jecxz
iret
cmc
dec
stos
sti
fiadd
pop
xor
push
push
loop
push
inc
ret
cmp
sar
les
jle
and
je
or
jmp
enter
pop
push
aas
ds
stc
rcr
xchg
leave
or
frstor
jmp
mov
pusha
sub
(bad)
jp
dec
pop
out
aam
jg
out
ins
rcl
nop
or
sti
sub
or
adc
test
out
xlat
fisttp
mov
xchg
es
pop
stos
and
(bad)
sub
fwait
cdq
dec
push
xor
dec
test
fistp
mov
addr16
sub
imul
and
push
test
(bad)
mov
inc
(bad)
cs
sbb
ss
mov
xor
fisttp
je
cli
or
es
rcr
jl
cmp
call
fwait
pop
lods
scas
mov
add
lock
pop
arpl
inc
jecxz
add
loope
sbb
xchg
in
push
jle
mov
push
outs
aas
and
(bad)
fst
pop
push
fldcw
jnp
dec
mov
scas
cmps
jmp
xor
mov
lds
push
jle
into
inc
xchg
pop
or
cmp
or
cmc
jp
fsubr
out
fidivr
lds
jge
mov
xlat
and
aaa
push
test
mov
loopne
mov
jg
(bad)
jmp
mov
inc
fiadd
push
pop
lods
or
fsub
ror
rol
pop
jle
std
dec
fs
rcl
fidivr
xchg
test
xchg
mov
jl
xor
mov
lahf
pop
dec
outs
jle
out
shl
jp
push
sbb
pop
mov
shl
push
in
adc
in
(bad)
icebp
push
add
and
out
rcr
dec
inc
xor
and
mov
outs
int
call
push
fild
leave
xor
mov
(bad)
(bad)
fbstp
or
icebp
mov
mov
loop
rcl
les
pop
hlt
mov
push
xchg
je
pop
test
add
cs
das
pop
fwait
sbb
cmp
(bad)
and
jb
jecxz
mov
mov
mov
loope
xchg
xchg
inc
jb
jne
dec
push
and
rol
sub
mov
xor
cmps
jl
add
stos
sbb
pop
mov
dec
aaa
mov
mov
xchg
or
iret
or
pop
add
push
dec
out
cdq
dec
rcl
cdq
inc
sbb
lods
loope
xchg
and
push
sub
jmp
mov
dec
sbb
ins
add
outs
jbe
jg
and
mov
cmp
push
mov
push
push
call
and
dec
clc
fcomp
add
jnp
out
lock
or
jnp
repnz
dec
clc
inc
repz
push
push
mov
lds
les
jg
inc
xchg
fwait
sti
sub
call
pop
xor
aaa
push
xor
clc
jae
sub
xchg
push
movs
not
das
leave
sub
lods
adc
into
das
dec
pop
in
mov
call
cld
shl
push
daa
dec
pop
lock
xchg
sbb
push
mov
shr
lea
jmp
mov
jp
lods
call
test
lahf
sub
fld
cmp
mov
rcl
inc
push
mov
push
cli
mov
xor
pop
push
ret
adc
out
cmps
test
imul
mov
mov
mov
stos
and
inc
out
jecxz
dec
ja
(bad)
mov
fld
and
shl
fwait
xor
(bad)
imul
dec
sbb
dec
fst
test
retf
cwde
cmp
push
retf
and
cs
xor
pop
(bad)
jle
mov
inc
push
call
in
mov
shl
inc
(bad)
out
cmpxchg
popf
add
xor
repz
cmp
xor
popf
scas
and
jecxz
ret
int
aad
mov
and
and
or
retf
dec
adc
enter
ins
outs
retf
add
sbb
imul
idiv
popf
sbb
xchg
cmp
xchg
jb
mov
jne
push
xlat
in
mov
(bad)
in
call
sbb
cdq
pop
(bad)
rcl
(bad)
movs
adc
ins
dec
push
mov
push
lods
mov
leave
aad
xor
push
movs
retf
cli
mov
push
(bad)
xchg
xor
inc
arpl
xor
jmp
pop
add
cmp
mov
lods
adc
or
iret
call
imul
dec
in
sub
das
pop
rcl
psllw
test
fsubr
jmp
jge
aam
loop
pshufw
test
fwait
inc
mov
mov
std
mov
pop
repz
sub
sub
loopne
mul
mov
imul
mov
icebp
dec
stos
cwde
mov
jmp
jmp
fadd
jge
jo
jg
jb
and
scas
inc
mov
pushf
xor
xchg
ficomp
test
movs
cmp
pop
daa
ja
ins
sub
push
mov
gs
retf
push
or
das
adc
add
sar
mov
addr16
mov
push
fldenv
mov
out
in
jns
pop
pop
jle
add
js
sub
xor
sub
sbb
scas
mov
fild
sbb
inc
push
xor
daa
cmp
mov
fwait
mov
iret
mov
std
call
or
mov
iret
mov
mov
and
jmp
mov
jbe
jo
jae
pusha
and
jmp
jno
nop
push
loope
rcl
shl
js
call
dec
push
shl
out
or
or
push
mov
mov
cmp
cmp
mov
das
mov
out
cmp
fwait
and
ja
test
cli
call
sbb
jns
fist
and
int3
(bad)
call
hlt
stos
or
cmc
fisttp
mov
jmp
int
adc
push
loopne
mov
fimul
adc
call
in
or
adc
and
enter
and
jo
retf
cli
aaa
stos
push
retf
retf
add
jmp
test
icebp
xchg
lea
inc
sub
pop
xchg
inc
mov
stos
push
jle
add
inc
(bad)
mov
mov
test
nop
je
test
push
push
lahf
ja
adc
pop
inc
push
jge
pop
mov
arpl
jg
stos
and
hlt
arpl
mov
cld
mov
das
cmp
fist
dec
stc
out
and
(bad)
jge
or
pop
xchg
jmp
xchg
add
test
enter
out
xchg
sub
retf
adc
stos
fimul
sbb
scas
call
pop
jb
push
mov
jle
in
jnp
and
clc
ret
xabort
movs
xlat
ret
pop
in
or
sub
sub
lods
das
jle
cmc
adc
into
rcl
inc
xchg
in
hlt
add
pusha
dec
fwait
jp
test
xchg
xor
jbe
aaa
sub
in
sbb
rcr
lods
dec
mov
out
in
call
es
retf
mov
std
push
not
outs
push
jp
ja
gs
sti
in
cmc
mov
sub
(bad)
into
pop
ds
repnz
out
pop
sub
push
inc
sbb
mov
(bad)
pusha
mov
rcl
mov
fsub
ds
xor
mov
dec
or
cmp
adc
push
rcl
add
xchg
cmps
rol
inc
loope
dec
out
scas
test
out
daa
cli
sbb
aam
sub
fs
adc
mov
cmp
lea
pop
push
stos
fcmovnb
dec
jge
rol
sbb
sbb
pop
(bad)
hlt
outs
adc
(bad)
jmp
int
hlt
and
push
and
mov
stc
jo
dec
jns
cs
aas
ja
xchg
xchg
call
ja
or
lods
jl
inc
mov
mov
pushf
sub
add
cdq
pop
ffree
stos
jge
xor
inc
push
cmps
push
scas
push
fyl2x
dec
test
es
xchg
push
mov
clc
inc
dec
fwait
retf
sbb
jno
mov
mov
pushf
cld
xchg
xchg
test
dec
adc
mov
imul
(bad)
loopne
adc
mul
aad
ins
fild
or
fcmove
mov
push
jnp
sar
daa
vmovddup
xchg
les
sahf
sub
stc
bound
dec
ja
scas
and
pusha
cli
ret
or
retf
inc
in
paddq
shl
mov
pop
repnz
clc
xchg
push
enter
movs
loop
outs
pop
adc
std
test
sub
mov
and
pavgw
sbb
adc
push
xchg
loop
mov
or
test
stos
hlt
adc
add
test
jecxz
or
dec
jl
in
pop
call
rcl
pop
arpl
adc
test
mov
int3
push
test
mov
je
and
daa
jge
pop
mov
jae
add
stos
mov
(bad)
bound
push
cmp
in
push
test
call
ds
xor
int
push
xchg
fwait
xor
or
scas
retf
xlat
(bad)
stos
pop
jg
dec
jns
cmp
and
xchg
or
cli
push
(bad)
xchg
call
jno
sub
pop
pop
or
cdq
outs
pop
ja
shl
mov
jl
pop
movs
xor
in
(bad)
retf
leave
repnz
ror
outs
(bad)
rcl
or
icebp
add
iret
jb
int3
mov
inc
jae
pop
mov
xchg
je
xor
mov
cmp
(bad)
push
cld
mov
cmps
cli
lds
sbb
(bad)
dec
in
or
push
sub
push
push
fmul
mov
jne
lock
ins
pusha
(bad)
rcl
mov
and
sbb
dec
cli
fadd
or
das
sbb
mov
(bad)
adc
jle
mov
pop
jge
mov
add
xchg
repnz
sub
add
cmp
push
inc
pop
xchg
(bad)
cmps
and
xor
jge
xlat
add
jbe
inc
scas
bound
in
mov
sbb
dec
pop
int
dec
sub
leave
fs
leave
inc
xchg
inc
dec
add
(bad)
jne
loop
imul
dec
cli
and
call
dec
jge
aas
mov
call
aaa
das
les
nop
mov
inc
fild
fadd
sbb
cs
cdq
push
cdq
jge
in
add
cmp
iret
and
cmps
outs
and
in
dec
pop
pushf
push
iret
lea
movs
cdq
and
fucom
stc
jp
shl
add
enter
cmp
xchg
or
adc
jae
dec
(bad)
xor
cmc
or
js
mov
dec
xor
bound
jno
test
(bad)
pop
lods
and
xchg
pop
push
sub
inc
test
addr16
imul
sub
add
int3
jb
sti
cmp
repz
loop
mov
outs
add
sbb
pop
inc
pop
ret
test
mov
mov
xchg
in
or
pop
add
rcr
pop
mov
dec
scas
push
mov
int3
or
pop
mov
jne
seta
add
pop
push
sbb
push
scas
lods
test
push
cs
(bad)
jg
fisubr
scas
aaa
mov
(bad)
fisttp
and
mov
jbe
push
or
mov
add
repz
in
in
push
jge
mov
(bad)
jg
mov
repz
cmp
xchg
cmp
add
xchg
pop
adc
nop
cmp
mov
sbb
inc
dec
pop
dec
inc
jbe
jmp
dec
sub
dec
dec
aad
pop
xor
sti
dec
out
cmp
int
push
adc
dec
dec
(bad)
jg
test
fidiv
data16
jae
adc
mov
inc
dec
add
daa
addr16
dec
xor
inc
cmps
dec
repz
sbb
cmp
cli
shr
dec
or
shl
mov
xchg
mov
(bad)
es
mov
inc
loopne
cld
pop
shl
aas
adc
or
mov
(bad)
out
lock
mov
dec
fdivr
aad
test
leave
aas
xor
stos
inc
jns
jo
adc
adc
add
lahf
ins
mov
sbb
push
rol
xlat
iret
xor
add
aad
sbb
cld
dec
addr16
sti
add
pop
mov
aas
std
xchg
xor
cmp
repz
fwait
xchg
shl
sar
pop
in
cmp
aam
dec
mov
push
ret
popa
loopne
data16
aam
sbb
and
int
mov
in
rcr
aad
sbb
rol
push
pop
test
mov
ret
dec
cmps
jecxz
hlt
pop
pop
add
test
jecxz
or
inc
in
ror
fadd
mov
sub
ins
(bad)
in
ret
sbb
std
fistp
mov
je
adc
xor
xchg
inc
shl
retf
sub
and
pop
cli
add
call
fcmovnb
(bad)
mov
sub
(bad)
fisub
mov
adc
daa
fimul
mov
or
mov
mov
outs
push
iret
stos
sbb
outs
push
push
mov
pop
pop
or
mov
sbb
jl
adc
into
cwde
jne
push
and
(bad)
retf
sbb
add
pop
mov
add
xor
add
fisubr
jmp
fsubr
inc
repz
loopne
fistp
adc
cmp
jmp
mov
cwde
cmps
adc
sahf
lds
(bad)
imul
or
xchg
xor
xor
lods
jecxz
ror
das
dec
pop
sbb
xor
sub
or
test
fldz
adc
repnz
dec
arpl
pop
push
in
or
pushf
xor
inc
hlt
cmp
fmul
scas
lahf
push
inc
sbb
xor
popa
xor
int3
xor
add
mov
movs
jnp
pushf
cs
xlat
jl
and
dec
in
arpl
iret
data16
int
jno
and
push
jge
call
in
xlat
(bad)
sub
mov
sub
jae
add
cmp
xor
dec
xchg
cmps
sbb
icebp
sbb
add
int3
fidiv
pop
push
mov
cmp
popf
retf
xchg
(bad)
mov
sub
jge
push
pop
out
xor
outs
sysret
xor
fwait
clc
je
jecxz
ror
and
jp
inc
outs
enter
push
jo
retf
out
xchg
inc
hlt
and
jne
mov
in
mov
in
jns
loope
lahf
fist
or
inc
add
xor
xchg
mov
cdq
dec
dec
movs
adc
je
jg
dec
gs
fst
xchg
mov
outs
cmps
jns
add
aaa
(bad)
cmc
(bad)
in
std
mov
(bad)
xor
inc
mov
or
add
fadd
mov
or
addr16
cmp
lds
imul
inc
push
inc
mov
cmc
xchg
adc
sbb
dec
pusha
imul
gs
mov
lahf
out
mov
jmp
jbe
leave
bound
jl
out
jl
mov
ret
movs
mov
scas
not
push
and
(bad)
lea
jp
mov
fbld
shl
cmp
pop
mov
add
out
inc
and
xchg
outs
push
(bad)
push
pop
xchg
cmp
jno
xlat
dec
mov
mov
outs
xor
push
call
jg
cmp
fistp
push
loop
mov
add
xor
dec
xchg
xor
movs
das
xor
js
ins
sbb
rcr
dec
jnp
clc
call
fld
and
jecxz
mov
xor
dec
or
xchg
icebp
xor
lds
adc
lea
sub
dec
je
cwde
jnp
inc
or
lods
fild
push
cs
xor
retf
mov
cmp
fadd
ret
cs
shr
jbe
retf
test
ds
jp
mov
mov
dec
icebp
sub
stos
xchg
je
mov
popa
pop
clc
or
mov
outs
clc
outs
stos
ror
ds
sbb
int
lods
lods
push
daa
addr16
adc
das
ret
bsr
pop
es
repnz
mov
push
lods
std
or
aas
shl
mov
push
sti
hlt
push
sbb
xor
retf
mov
cs
dec
int
mov
add
fnsave
dec
in
sti
lods
cdq
add
cmp
push
dec
and
les
lahf
lea
retf
push
retf
push
movs
inc
inc
ins
das
ins
jecxz
mov
retf
loopne
add
fs
mov
sbb
into
xchg
retf
sti
jg
xor
add
in
push
and
pop
jno
jmp
sbb
inc
pop
add
loope
xchg
test
sub
fnstenv
inc
(bad)
mov
lds
rol
xchg
jne
push
iret
das
shl
fisttp
std
shl
dec
pop
arpl
and
cmps
stos
sahf
shl
movs
pop
add
or
loopne
cmps
dec
iret
movs
cwde
mov
add
mov
add
ficomp
hlt
sub
push
dec
push
out
fcmovb
jmp
or
sbb
aaa
mov
iret
icebp
(bad)
iret
mov
out
imul
clc
int
inc
icebp
inc
ins
(bad)
jbe
sub
push
xchg
clc
jle
dec
clc
int
mov
adc
mov
bound
popa
movs
scas
test
xchg
mov
mov
and
add
adc
cs
push
cld
mov
jle
xchg
out
repnz
ror
dec
mov
out
out
push
std
inc
(bad)
mov
mov
lea
inc
cmp
adc
call
pop
nop
or
in
lods
mov
pop
es
mov
hlt
movs
dec
mov
das
ret
fistp
pop
jo
(bad)
imul
ins
aam
loopne
or
out
xchg
pusha
hlt
test
mov
add
sub
psubusb
popf
add
ins
inc
mov
dec
test
jp
dec
fisttp
push
jp
sbb
rcr
inc
movs
sahf
js
cmp
push
test
(bad)
adc
std
mov
mov
jp
movs
ret
push
xor
inc
mov
add
xor
sbb
popf
je
xchg
les
dec
lock
pop
imul
test
push
xchg
dec
in
xor
pop
mov
pop
popf
cld
in
test
mov
(bad)
nop
rcr
adc
in
xchg
jmp
(bad)
pop
clc
in
xchg
jae
pop
mov
(bad)
mov
out
mov
pop
xor
inc
xor
pop
adc
mov
fnsave
cmovb
inc
push
xchg
shl
jne
inc
jns
adc
jb
fs
dec
xchg
imul
push
les
popf
dec
or
cli
mov
scas
repz
mov
jne
hlt
dec
or
mov
out
stc
ja
addr16
jbe
or
mov
jl
mov
add
adc
nop
and
iret
stc
fs
pop
aad
and
fcom
mov
ja
cdq
sub
cmps
call
sub
jne
pop
imul
jge
pushf
ja
clc
movs
lods
push
cmp
xchg
inc
mov
push
sar
jbe
retf
call
pop
movs
cs
gs
xchg
lea
jb
jae
fcom
xchg
hlt
jnp
add
xchg
popa
mov
xor
arpl
sar
sti
cdq
or
call
leave
push
enter
je
pop
add
dec
mov
push
fbstp
nop
mov
cwde
fst
mov
inc
cmps
adc
ficom
fnstcw
adc
xchg
sbb
(bad)
sbb
stos
test
stc
mov
add
and
push
out
ins
dec
mov
xchg
and
mov
cmp
int3
lea
test
mov
jne
out
or
lds
mov
push
aas
stos
jle
adc
scas
inc
dec
xchg
mov
xchg
xchg
inc
ret
push
add
sub
stos
mov
adc
sub
gs
mov
adc
mov
std
adc
dec
clc
push
sar
jmp
push
das
add
mov
bound
addr16
adc
and
enter
cmp
aad
mov
dec
cmp
jl
dec
sub
mov
jns
test
xchg
and
popa
sbb
les
inc
rcr
cmps
cld
(bad)
cdq
out
inc
adc
jo
cs
shl
adc
pop
loop
stos
dec
push
jo
pop
xchg
pop
inc
and
mov
cmp
in
sar
hlt
xor
cmp
out
sbb
sbb
add
in
stos
or
pop
dec
add
fwait
retf
retf
bound
pop
popf
push
es
pop
fsubr
mov
ret
jmp
sbb
outs
test
out
push
mov
or
mov
mov
and
rcl
lahf
shl
call
ins
jmp
stos
int3
mov
sub
push
or
push
jg
fldcw
sbb
adc
and
add
adc
mov
or
mov
je
adc
add
mov
jb
xor
push
adc
or
and
cmp
cmp
popa
mov
daa
push
rcl
push
(bad)
retf
daa
movs
arpl
mov
in
sbb
shl
sbb
cs
imul
add
neg
mov
inc
hlt
sub
mov
inc
rcr
push
sti
dec
bound
repnz
je
jo
xchg
mov
mov
sar
icebp
(bad)
scas
aam
scas
ins
cld
sti
data16
cmp
ret
pop
inc
outs
gs
movs
call
push
inc
mov
inc
or
xor
mov
aad
jp
cdq
jecxz
inc
leave
adc
mov
dec
popa
and
jl
adc
pop
cmps
jp
add
ret
pusha
enter
and
mov
cdq
push
test
jo
ja
sub
cld
jp
(bad)
fistp
jnp
in
sub
ins
outs
(bad)
jno
cld
ret
popf
mov
stc
shr
scas
je
or
sub
or
push
xchg
pop
jne
mov
in
sbb
xchg
dec
pop
mov
shr
mov
sbb
stc
arpl
shl
cwde
xchg
ja
sub
ins
sbb
(bad)
mov
xor
xchg
add
jmp
mov
pop
js
adc
out
mov
adc
push
inc
xor
add
je
pop
mov
jge
xchg
fcomp
addr16
or
inc
test
test
add
mov
rcr
jg
adc
cld
scas
push
mov
scas
loop
(bad)
jecxz
xor
(bad)
test
jmp
sub
(bad)
cmp
cmps
in
mov
mov
stos
adc
pop
mov
xchg
cli
rcr
or
lods
outs
ficomp
mov
test
mov
sbb
movs
fidivr
cwde
and
xor
scas
and
test
dec
test
mov
fstp
jecxz
adc
xchg
ret
push
retf
or
mov
sbb
lock
inc
shr
mov
xchg
repnz
dec
push
xchg
mov
sub
mov
push
int
mov
lds
add
xchg
scas
add
pop
int3
adc
mov
lods
je
daa
sub
xchg
pop
xchg
push
into
sti
sub
rcr
jns
cmc
jae
mov
mov
scas
int
push
jge
xchg
xchg
and
pop
jle
and
lods
lock
mov
inc
hlt
push
sub
sub
(bad)
xlat
or
aaa
retf
mov
arpl
xchg
xchg
pop
shr
sub
mov
pop
sub
aaa
xchg
dec
pop
out
idiv
dec
and
adc
xchg
loope
jle
pushf
lea
sub
jo
push
imul
xchg
(bad)
sahf
call
popf
bound
shl
pop
dec
rcl
xor
and
jmp
dec
push
(bad)
sti
jmp
call
fistp
jb
lea
add
icebp
test
test
(bad)
xlat
pop
data16
inc
(bad)
pop
jg
pop
push
ret
aas
int
jg
inc
call
push
into
pushf
mov
pushf
dec
adc
mov
dec
leave
push
push
pop
mov
pusha
pop
cli
cmp
retf
cmp
inc
inc
push
pop
inc
dec
xor
aas
sub
cli
sbb
or
add
mov
pop
lock
movs
neg
shl
call
std
popf
jecxz
imul
mov
addr16
int3
out
add
jmp
(bad)
jno
sub
cmp
inc
adc
jge
(bad)
mov
shr
dec
and
cmp
add
cmp
mov
daa
mov
sbb
iret
fistp
add
push
mov
repnz
jmp
ud2
xor
mov
mov
or
je
mov
and
sbb
pop
(bad)
in
ins
aam
es
repz
fsubr
shl
xor
in
mov
imul
pop
mov
mov
inc
in
rcl
frstor
test
sub
cmp
not
jne
push
mov
jmp
js
sbb
inc
xchg
pop
out
aad
mov
ss
(bad)
nop
ds
scas
mov
sub
data16
mov
mov
rcr
test
or
loopne
xor
ins
add
sub
mov
clc
mov
push
je
cli
add
enter
or
leave
cmp
retf
cmp
cli
xor
xor
(bad)
in
pop
pushf
fst
xchg
test
pop
mov
in
leave
cmp
lock
(bad)
enter
push
push
jb
movs
pop
sbb
jae
imul
sbb
sub
out
nop
xchg
retf
dec
lds
sbb
inc
and
ins
or
lock
aad
push
imul
inc
mov
es
imul
out
pushf
add
mov
daa
add
xlat
cmc
out
loopne
nop
retf
and
cli
cld
ss
iret
xchg
pop
mov
jmp
add
jns
pop
push
add
adc
mov
mov
sub
mov
mov
mov
xchg
jno
mov
pop
xor
xchg
cmp
mov
xchg
sbb
or
mov
fsub
aas
push
lea
sub
inc
lds
in
lahf
adc
sbb
push
loop
lods
sbb
jbe
mov
mov
jg
aam
jge
jl
xchg
rcr
retf
xchg
xchg
(bad)
neg
mov
adc
retf
sbb
jg
dec
pop
fs
cld
nop
jb
pop
or
dec
mov
(bad)
js
inc
push
jns
and
in
mov
adc
loopne
or
sahf
or
dec
loopne
pop
inc
cs
je
jmp
loope
mov
das
cmp
test
inc
inc
push
sbb
push
mov
pushf
fisub
scas
or
(bad)
sub
repnz
test
pop
fsub
fmulp
scas
add
pop
in
imul
mov
inc
push
jns
or
mov
mov
sub
repz
mov
mov
and
push
push
mov
xor
bound
xchg
add
or
cmp
ret
mov
add
pop
movs
dec
sub
fcomp
or
push
jb
sbb
std
pop
mov
rcr
ss
jnp
push
cmp
imul
scas
call
sbb
outs
sub
nop
sub
cmps
jne
mov
dec
mov
outs
idiv
dec
xlat
mov
xlat
jbe
inc
fdivr
inc
or
pop
lods
popf
sbb
shl
loopne
xor
rcr
sahf
movs
(bad)
int
add
imul
inc
mov
mov
push
icebp
dec
(bad)
imul
pop
aaa
pop
sbb
(bad)
test
mov
mov
in
ja
test
retf
clc
retf
cmp
and
lahf
inc
mov
dec
ror
xor
xchg
push
cmp
lods
test
pop
out
sub
repnz
xor
pop
push
mov
imul
ret
sub
add
ins
xchg
mov
in
sub
rcr
pop
add
mov
enter
ins
(bad)
iret
stc
dec
jle
xchg
push
rcl
push
mov
mov
jl
dec
sub
inc
inc
repz
test
mov
retf
loope
ror
retf
mov
out
dec
std
sub
out
push
dec
ins
and
rcl
call
clc
xchg
ret
sub
sub
mov
adc
mov
and
in
adc
outs
cmp
or
inc
lds
sbb
enter
out
adc
push
xchg
mov
or
mov
xchg
out
ss
lock
push
cwde
retf
clc
std
pop
mov
push
fisub
mov
mov
push
mov
ficomp
mov
cwde
push
push
aam
addr16
push
dec
inc
jecxz
adc
leave
mov
xchg
movs
dec
out
mov
into
adc
cmps
fld
xchg
test
lea
sub
sahf
ds
test
call
sub
sub
jns
add
jl
mov
sbb
inc
cmc
mov
xchg
jl
or
frstor
inc
dec
int3
gs
cmps
mov
lods
cwde
imul
pop
or
xchg
fwait
add
(bad)
ss
sub
cs
mov
sbb
xchg
lods
xor
(bad)
das
sbb
pop
test
adc
test
cwde
pushf
push
lods
test
ss
pop
sbb
lea
push
mov
cld
jecxz
pop
pop
ficomp
adc
and
sub
std
shl
mul
sar
jecxz
and
imul
cmp
js
xchg
pop
in
sub
aaa
out
ror
and
or
loopne
pusha
test
div
cmps
jmp
(bad)
ret
es
imul
jo
mov
cli
jecxz
lods
sahf
mov
inc
mov
and
mov
inc
cmp
pop
retf
pushf
dec
sub
call
xchg
mov
push
pop
dec
aas
adc
mov
jecxz
or
(bad)
pusha
or
cmc
dec
push
pop
ret
add
out
mov
add
mov
inc
xchg
cmp
cmp
stos
out
mov
outs
add
scas
jno
push
pop
dec
pop
jmp
ret
loope
lock
std
xadd
lea
inc
call
mov
stc
lahf
xchg
pop
push
inc
in
fisttp
xlat
xchg
and
cmps
je
or
ror
into
adc
cmp
pop
jge
dec
daa
sti
out
xchg
mov
fnsave
push
push
aas
pop
inc
iret
add
push
cmp
inc
ret
test
pop
xor
std
mov
or
mov
push
out
push
lock
pusha
dec
mov
inc
jl
jne
mov
xor
scas
mov
xchg
push
pop
xor
sbb
(bad)
inc
add
mov
jno
(bad)
stc
push
sti
push
jecxz
out
add
(bad)
xor
mov
mul
mov
xchg
arpl
rol
sub
or
stos
mov
(bad)
xor
mov
push
xchg
rcr
jo
sub
add
jmp
add
imul
lock
dec
dec
or
imul
call
test
adc
xor
jo
aad
mov
mov
gs
jnp
rcr
jne
aam
pop
push
xchg
and
scas
arpl
add
mov
dec
icebp
sbb
and
ins
jb
mov
adc
outs
fadd
sub
fsubr
or
dec
mov
adc
(bad)
int3
add
sbb
xchg
jg
xor
push
pop
rol
ds
sbb
push
retf
loopne
mov
fstp
(bad)
or
adc
push
sbb
ror
mov
push
jmp
lods
std
je
mov
mov
mov
push
clc
std
inc
repnz
scas
pop
scas
dec
add
dec
push
loop
int3
ret
mov
xchg
jns
(bad)
aas
stc
aaa
arpl
int
add
imul
xor
dec
mov
push
push
stc
jmp
sub
dec
mov
jecxz
or
mov
movs
jns
(bad)
cmps
fisttp
push
ja
imul
and
leave
mov
outs
jmp
jns
stc
mov
shr
jae
bound
int3
mov
stos
push
js
cmps
push
cli
fdivr
rol
les
arpl
push
cwde
push
aad
arpl
mov
jg
out
jno
mov
loope
shr
scas
cmp
stos
or
adc
in
jg
xchg
mov
inc
push
loope
sbb
(bad)
inc
pop
and
inc
ins
cli
fisttp
and
xor
mov
jge
mov
xlat
pop
in
jo
inc
adc
stos
adc
es
daa
cdq
es
or
pop
and
lds
rcl
mov
sbb
cmp
(bad)
push
pop
imul
repz
push
jns
xor
sub
push
dec
stos
pop
or
mov
addps
fidiv
adc
jmp
scas
sub
mov
push
loope
and
fwait
sub
jb
les
add
mov
aas
pop
adc
lock
xchg
jl
fcom
jl
out
jmp
sahf
imul
lds
add
stos
or
or
pop
cld
xor
xor
sbb
test
test
push
in
ds
jecxz
push
dec
inc
pop
xor
add
std
dec
sbb
xchg
or
cmp
ror
or
outs
daa
iret
rcl
bound
test
and
mov
mov
cmp
aas
mov
and
xchg
iret
and
and
inc
xchg
mov
mov
inc
fst
push
xlat
add
je
ins
test
xor
jmp
icebp
into
pop
xchg
push
pop
popf
(bad)
fdivr
mov
pop
pop
and
push
mov
sbb
sub
lds
push
retf
ins
ss
imul
xchg
ins
add
test
idiv
ins
push
xor
pop
call
cld
ret
cmps
sub
jmp
mov
call
mov
inc
(bad)
and
xchg
mov
or
jge
mov
into
sbb
xor
ja
pop
out
out
mov
out
and
pop
arpl
cmps
cmp
fmul
mov
cs
mov
out
adc
out
clc
popa
ret
int3
cwde
pop
push
lods
(bad)
fadd
retf
fdiv
dec
sbb
mov
mov
mov
fisttp
loopne
xchg
xchg
stos
and
xor
shl
call
xor
and
ja
xor
jmp
or
push
dec
inc
add
sti
xchg
push
sbb
pushf
ret
cdq
aam
call
pop
and
sbb
pop
movs
shr
out
sub
pop
hlt
std
cdq
(bad)
sub
jg
dec
xchg
dec
lods
adc
das
inc
pop
shl
xchg
mov
daa
cmp
imul
jb
mov
push
xor
call
dec
inc
rol
shr
fcomp
popa
inc
fisttp
lods
rsqrtps
mov
mov
or
out
loopne
rcr
aaa
retf
mov
mov
(bad)
mov
and
push
loopne
shl
push
xlat
fldcw
push
ret
xchg
cmp
test
test
cmp
ins
sub
push
mov
adc
jmp
adc
lds
dec
mov
or
in
jno
pop
xchg
cmc
loop
pop
in
ret
fnstcw
mov
and
gs
add
ins
adc
enter
retf
jge
fimul
mov
adc
mov
add
sub
dec
mov
enter
(bad)
(bad)
pop
in
mov
xor
xlat
inc
std
sub
pop
stos
out
and
mov
leavew
mov
mov
aaa
and
cmc
cmps
aad
add
rcl
lahf
test
adc
in
sub
ficom
out
inc
fnstsw
je
aad
add
bound
outs
sub
jmp
arpl
cmp
retf
or
leave
cmp
pop
mov
sbb
not
xor
sbb
les
dec
inc
xchg
fs
dec
sbb
data16
mov
jno
xor
cmc
repz
dec
or
and
jnp
hlt
sbb
test
stos
add
and
xchg
ins
mov
inc
test
lods
mov
adc
cli
test
cmp
xor
loope
xchg
repz
ins
push
(bad)
cmp
out
(bad)
mov
out
push
ret
add
or
nop
mov
std
mov
push
xor
adc
test
cwde
adc
dec
(bad)
push
cli
test
fnsetpm(287
dec
mov
mov
es
jo
push
out
inc
jnp
retf
outs
(bad)
lods
mov
lds
xchg
outs
or
mov
imul
shl
ins
lock
retf
xchg
pop
in
xlat
dec
mov
mov
push
add
pushf
(bad)
sub
mov
ror
push
fcomp
mov
jne
sub
or
(bad)
repz
xlat
ficomp
push
pop
pushf
jns
jnp
push
inc
aad
iret
dec
cmp
dec
fcom
mov
inc
add
mov
in
dec
pop
xchg
add
lahf
mov
dec
and
sub
call
or
es
inc
inc
and
jge
mov
into
fmul
not
adc
mov
sbb
and
and
pushf
pop
or
add
(bad)
jo
sbb
aas
aam
sub
das
loope
and
loop
out
push
and
pop
jne
adc
and
pop
xchg
into
or
lods
mov
into
ret
retf
jno
loope
bound
xor
push
fs
(bad)
adc
xchg
pop
mov
dec
cdq
push
ret
fisubr
int
scas
addr16
leave
mov
(bad)
sub
push
(bad)
push
pop
jecxz
sti
std
sti
lock
pop
jp
cmp
scas
jo
retf
stos
pop
mov
adc
inc
add
and
mov
pop
into
cld
add
pop
pop
mov
jmp
retf
sub
push
call
mov
fisub
lahf
mov
lods
ds
and
mov
inc
xchg
push
jne
rcr
test
(bad)
(bad)
mov
cwde
shr
lock
scas
cmc
jle
adc
cs
(bad)
fnstsw
imul
adc
dec
repnz
sti
sti
cmp
lock
mov
in
cdq
fcomip
outs
fwait
sub
mov
div
cmc
cs
scas
xor
out
mov
xor
data16
add
fiadd
mov
add
and
push
inc
popf
sub
xor
popf
(bad)
fstp
sub
inc
pop
push
pop
add
test
inc
mov
xchg
sahf
xor
cmp
adc
dec
add
cmc
inc
aam
adc
jmp
call
add
(bad)
xchg
mov
fcmove
inc
std
repz
push
mov
fild
cmp
mov
popa
call
call
adc
in
loop
or
sbb
dec
pop
sub
push
(bad)
adc
repnz
ficom
and
mov
push
fsub
fwait
add
push
jmp
mov
pop
fidiv
in
adc
mov
es
mov
jno
in
mov
mov
lods
fcmove
cwde
pop
xchg
pop
mov
adc
je
ins
enter
test
jno
push
push
dec
jg
cli
sbb
inc
jg
outs
inc
stos
jns
imul
sub
dec
fs
lds
sbb
adc
cmp
fs
mov
xchg
arpl
inc
cwde
pop
jmp
mov
retf
mov
mov
(bad)
xor
out
je
movs
push
push
retf
and
jge
(bad)
adc
and
popa
add
push
lods
aaa
dec
jmp
push
adc
jns
xchg
retf
in
lahf
dec
mov
xor
push
fstp
push
mov
into
repnz
xor
mov
mov
movs
icebp
in
jne
pop
and
aaa
ins
lock
retf
fsin
xchg
dec
cmp
popf
int
stos
aad
loope
shl
and
cmps
repz
and
or
xor
dec
jmp
mov
cmps
and
xchg
mov
popf
or
mov
sbb
shl
pop
iret
push
add
pop
mov
push
inc
mov
cld
mov
pop
inc
div
(bad)
sub
in
jle
ins
movs
and
dec
mov
inc
adc
add
dec
dec
and
dec
sub
ss
stos
iret
rcl
cmps
cmp
jge
lods
pusha
dec
push
addr16
sbb
mov
lock
cmc
hlt
push
dec
cmp
pop
jo
push
(bad)
movs
int
jne
pop
je
push
add
cs
data16
inc
mov
repnz
or
addr16
sub
and
inc
arpl
loop
mov
retf
add
out
push
mov
jle
(bad)
cmc
cmp
xchg
pushf
gs
dec
pop
cld
sub
scas
fs
loope
aam
jo
cmp
dec
ss
jl
call
or
sub
jnp
les
repz
xchg
mov
jnp
jnp
inc
xlat
retf
inc
in
das
cmp
inc
or
mov
pop
xor
xor
aad
sub
cmps
iret
cmps
ja
fild
pop
imul
mov
pusha
adc
mov
xor
(bad)
mov
mov
sbb
fisub
mov
or
mov
sub
xor
inc
repnz
or
dec
shl
test
dec
test
ins
mov
xor
sub
out
mov
mov
mov
adc
cmps
mov
jnp
mov
push
xchg
push
(bad)
int
fild
jnp
les
jnp
lods
cmp
mov
and
add
stos
repnz
fst
repz
mov
(bad)
xchg
inc
push
add
hlt
cld
dec
(bad)
das
(bad)
sub
sub
out
inc
les
and
imul
mov
and
out
call
push
dec
xchg
nop
daa
jl
and
mov
sbb
mov
add
sbb
dec
dec
mov
adc
fcmovne
fmul
ins
aad
sub
and
add
push
or
inc
pop
in
xchg
dec
or
sbb
dec
jnp
popf
into
mov
xchg
lock
dec
sar
shl
dec
xchg
mov
jmp
inc
ja
xor
push
or
jmp
sti
sbb
je
jns
cmp
(bad)
ret
aas
mov
rcr
jbe
bound
mov
push
add
fs
adc
movs
push
mov
adc
sti
or
xor
cwde
pop
push
ret
outs
ins
stc
bnd
aad
enter
jno
test
imul
mov
push
inc
movs
or
mov
fdiv
pop
and
mov
(bad)
ins
push
jb
pop
popa
les
xor
inc
fbstp
mov
psadbw
(bad)
xchg
mov
mov
mov
idiv
fwait
int3
and
cmp
add
adc
ins
nop
mov
lods
int3
fisubr
js
ror
and
nop
pop
dec
mov
jns
mov
mov
loopne
pop
adc
fcomp
(bad)
jg
pushf
stos
into
movs
pop
jp
or
(bad)
mov
or
jle
jp
shl
loop
cmp
(bad)
jnp
pop
cmp
hlt
lods
mov
mov
scas
std
imul
lea
push
push
cmp
clc
not
mov
xor
mov
inc
mov
xchg
mov
cmp
addr16
int3
pop
xchg
pop
repnz
mov
scas
xor
dec
lods
ins
xor
inc
jnp
add
fbstp
rcr
pusha
out
ficomp
jnp
or
sub
call
fldenv
mov
and
push
fisub
fist
xor
ret
or
inc
(bad)
and
mov
jno
mov
aaa
call
sbb
cmc
sub
clc
xchg
adc
pop
sbb
inc
out
mov
inc
popf
pop
stc
cdq
nop
sub
(bad)
retf
push
or
mov
pop
push
cmp
movs
icebp
mov
test
sub
sbb
mov
mov
out
xchg
xchg
cmp
repz
fld
fsubr
cwde
mov
sahf
dec
ret
jp
(bad)
fadd
push
sahf
(bad)
leave
fs
pop
stc
mov
and
xchg
frstor
jmp
pop
mov
test
or
mov
jns
xchg
or
in
cld
inc
fwait
inc
popf
int3
xchg
adc
mov
push
cwde
and
push
mov
aad
mov
adc
mov
pop
cmps
push
test
jbe
fwait
or
and
xchg
adc
mov
xchg
ss
test
add
out
lea
xor
ss
test
mov
mov
mov
es
out
aam
and
not
mov
jg
dec
ret
outs
xor
repnz
inc
or
in
jbe
xor
push
rcl
movs
fdivr
push
loopne
pop
call
xchg
dec
or
rcr
adc
mov
and
sub
jle
sbb
pop
popa
test
popf
(bad)
int3
in
add
xchg
adc
mov
mov
and
repz
das
jns
rol
mov
and
adc
stc
imul
adc
call
xor
out
imul
push
adc
pop
shl
dec
les
lods
dec
pusha
popf
(bad)
xchg
mov
inc
xchg
retf
outs
xor
xchg
loopne
aam
int
and
jle
or
push
mov
pop
add
es
mov
pop
push
xchg
pop
es
nop
out
cmps
lods
out
or
mov
mov
enter
loope
fwait
stos
mov
mov
movs
in
mov
mov
loop
xchg
out
int3
fiadd
push
push
repz
and
xchg
stos
arpl
test
cmp
mov
add
jno
imul
push
retf
rol
hlt
mov
push
ds
jl
loope
retf
imul
cli
neg
add
mov
fmul
inc
and
xlat
mov
lahf
dec
repz
mul
mov
inc
dec
xchg
retf
fidivr
loope
test
cmp
fistp
xchg
or
mov
and
shl
inc
xchg
fadd
out
pushf
cmp
and
cmc
mov
add
int3
jmp
repz
pop
dec
ja
repz
mov
add
inc
js
retf
retf
xor
and
aad
or
xchg
xor
rcr
xchg
or
dec
jno
mov
adc
add
(bad)
in
das
iret
add
ficomp
retf
aas
rol
popf
arpl
cwde
xor
ds
stc
pop
pop
es
scas
test
pop
xchg
(bad)
icebp
fmul
push
fimul
outs
mov
pop
call
and
add
adc
adc
fdivp
add
pop
push
xchg
(bad)
pushf
icebp
fild
in
retf
loope
mov
pop
sti
inc
movs
mov
jnp
out
ja
int3
mov
lods
xor
je
mov
lds
ret
ds
fdivr
mov
ror
(bad)
fnstsw
fld
or
jmp
mov
pop
pop
push
cmp
scas
(bad)
mov
xor
push
jecxz
cmp
dec
fmul
cmp
(bad)
enter
xchg
repnz
sub
jge
sub
sti
outs
shl
loope
test
xchg
stos
test
scas
pop
cmp
loope
jb
cmps
xor
or
add
mov
in
clc
sbb
or
mov
adc
aas
or
out
or
and
jg
enter
retw
cmovo
and
loope
(bad)
push
pop
mov
xor
xchg
mov
adc
pop
cwde
pop
xor
cmp
sub
test
div
ret
arpl
jno
das
(bad)
out
xchg
jmp
stos
add
rcl
pop
xchg
popa
cmc
xchg
data16
xchg
jge
adc
fs
dec
pop
xchg
rol
mov
jp
loop
scas
ins
pusha
inc
repz
mov
xchg
int
iret
cmp
or
mov
xchg
lea
dec
ret
jbe
clc
or
pusha
mov
(bad)
xchg
inc
and
lds
xchg
leave
std
ret
cdq
mov
jmp
pop
mov
mov
jecxz
neg
mov
add
adc
pop
cmp
data16
jae
std
loope
cmc
rol
or
push
in
(bad)
lods
dec
push
ss
pop
jnp
dec
jge
inc
test
cmp
or
mov
and
jl
scas
jge
jne
jne
xchg
or
cmp
sbb
ror
icebp
imul
mov
mov
lock
into
in
inc
dec
scas
xchg
jp
cmc
push
jl
enter
sbb
inc
(bad)
push
sub
cmp
call
and
mov
pop
fdivr
add
jbe
and
out
sub
pop
sti
add
push
sbb
ds
cmc
mov
(bad)
out
pop
adc
xor
int3
(bad)
mov
ret
pushf
xor
daa
nop
mov
call
cmp
dec
sbb
pop
aad
cmp
xchg
xchg
in
mov
cli
rcl
mov
(bad)
in
and
and
inc
adc
inc
pop
jo
cmps
fldcw
adc
mov
push
cmps
fcom
outs
xchg
jmp
jle
out
in
icebp
out
xor
sub
xor
cmp
leave
repz
(bad)
fld
inc
test
mov
add
js
pop
cmps
or
cdq
dec
mov
jle
ins
mov
test
push
pop
and
iret
jb
fwait
cmc
xor
int3
mov
and
stos
imul
lods
sub
jmp
mov
sub
daa
lods
dec
jecxz
loopne
stos
xchg
sbb
mov
mul
mov
test
lahf
retf
jmp
ins
xchg
push
stos
fisubr
retf
mov
aas
mov
popf
push
dec
(bad)
xchg
push
test
cli
push
and
test
imul
out
xchg
and
sti
mov
fsub
push
adc
ret
stos
hlt
pop
outs
es
push
imul
pop
rcr
or
shl
loope
xlat
mov
dec
sub
sbb
pop
jg
xchg
outs
sub
add
jl
pop
add
call
out
out
jecxz
jp
js
push
or
cmp
sbb
sysret
inc
jle
cmp
fucomp
bound
fsub
and
xor
jno
push
data16
pusha
or
js
sub
inc
mov
push
adc
sub
(bad)
int3
sahf
out
stos
push
mov
push
mov
xchg
fidiv
pop
push
aam
outs
push
jne
mov
or
(bad)
pop
sub
mov
(bad)
aaa
(bad)
loope
rol
pop
fstp
adc
cs
(bad)
pop
and
sahf
inc
jne
mov
jb
out
movs
mov
xchg
pop
and
ret
movs
test
cmc
push
scas
bound
xor
jg
sbb
jne
mov
dec
jg
stc
es
mov
imul
add
push
jae
arpl
xchg
test
xor
xor
sub
xor
ret
cmp
sub
imul
add
mov
push
push
mov
adc
test
retf
adc
sbb
mov
inc
push
pop
lods
mov
xor
cs
mov
jns
lock
lea
inc
xchg
shl
aas
adc
mov
xchg
inc
jbe
in
shl
adc
pop
mov
or
int
adc
scas
mov
mov
in
mov
(bad)
mov
xchg
jmp
leave
shl
push
test
sbb
and
in
pop
mov
mov
sbb
push
pusha
mov
pop
aad
or
sub
ret
loopne
fld
pusha
jo
in
push
repnz
push
mov
xchg
mov
pop
(bad)
push
mov
cmp
and
add
fwait
inc
and
adc
dec
jp
push
in
js
(bad)
xlat
mov
adc
ins
and
and
xchg
pop
das
stc
aad
xor
xchg
xchg
inc
inc
push
xchg
adc
sub
or
fsubr
std
mov
div
jge
jae
push
ror
out
sub
add
outs
pop
push
pop
pop
xchg
mov
(bad)
mov
push
(bad)
and
aad
add
imul
in
sti
jmp
cli
xchg
inc
pusha
ds
out
mov
dec
mov
out
out
fs
add
mov
xchg
dec
out
sub
push
dec
retf
mov
xor
add
mov
sbb
je
jno
jle
xchg
cdq
test
sbb
bound
out
sub
fdivr
cs
shl
xchg
scas
mov
retw
mov
and
retf
fstp
add
xchg
test
cmc
inc
in
mov
and
sbb
mov
(bad)
not
lds
es
mov
stos
cmp
mov
int
out
xchg
je
test
xchg
dec
and
(bad)
mov
sti
rol
pop
stos
enter
pinsrw
cmp
inc
test
adc
cmp
or
popa
mov
xor
mov
icebp
call
(bad)
xchg
push
jo
pop
fist
dec
pop
ins
and
pop
sbb
push
mov
movs
add
xor
mov
ret
pop
pusha
jo
mov
add
popf
push
fwait
lock
or
fiadd
fistp
cmp
sub
jmp
pop
add
jl
xchg
push
mov
cmp
xchg
push
jmp
aad
inc
pop
out
inc
and
adc
addr16
jp
imul
sbb
mov
ret
inc
adc
sti
popaw
scas
sub
and
mov
xlat
cmp
call
and
adc
jns
call
cdq
add
retf
sub
adc
jo
cmp
out
pop
lds
cli
pop
js
and
cld
popf
loope
mov
leave
or
sbb
mov
jns
mov
sbb
das
add
mov
cmp
mov
into
mov
je
jae
stc
mov
xor
sub
ins
add
and
mov
add
inc
int3
stc
(bad)
rol
retf
movs
into
scas
stos
sbb
jecxz
rol
mov
push
mov
push
or
loopne
sbb
sub
add
inc
xor
sub
imul
out
ja
shl
ins
push
pop
cmps
fistp
not
mov
mov
dec
and
jmp
add
mov
je
cmp
int
pop
cmp
call
in
(bad)
pushf
sti
(bad)
sbb
sub
dec
mov
(bad)
ja
rol
jecxz
and
jecxz
jmp
push
jnp
and
addr16
arpl
mov
repnz
rcr
sbb
add
mov
(bad)
jecxz
jns
jle
in
cmp
sbb
pop
inc
cs
ins
xchg
stos
ret
hlt
scas
sub
call
les
nop
pop
test
and
sub
icebp
add
inc
cli
shr
icebp
inc
add
mov
stos
mov
in
cmp
xchg
sub
mov
mov
inc
call
and
push
adc
fs
or
cmp
pushf
push
int3
test
jo
mov
xchg
sbb
jno
jbe
cmp
das
adc
call
pop
jmp
ds
mov
and
pop
mov
cmp
dec
jmp
sub
ja
inc
or
dec
dec
push
lods
gs
sub
aas
test
push
test
pop
in
ins
loope
je
add
loop
jne
fmul
pop
aaa
cmc
sbb
stc
(bad)
and
hlt
mov
jp
lahf
std
inc
pop
shl
jo
aad
jge
int
jbe
mov
(bad)
adc
jbe
cmp
jg
mov
push
movs
push
xor
retf
lods
or
adc
dec
xlat
std
stos
and
mov
ret
dec
outs
sbb
jmp
mov
xor
clc
add
mov
push
adc
pop
adc
(bad)
mov
out
adc
jp
jl
cmp
lea
jne
lock
sub
leave
scas
mov
xchg
sbb
dec
or
and
cmp
loope
xchg
sahf
push
mov
aad
fild
xchg
or
lds
in
cmp
js
test
shl
ja
pop
in
fnsave
push
fisubr
mov
jb
cmp
mov
in
pop
out
xchg
mov
jns
add
loope
xchg
popa
mov
sbb
fstenv
mov
fbstp
add
sbb
add
leave
fwait
aad
jle
add
mov
xchg
pushf
lods
xor
add
outs
rep
mov
add
push
or
xchg
pop
pop
in
std
mov
mov
mov
inc
push
push
xchg
add
push
in
sbb
adc
sub
inc
xchg
pop
pmaddwd
ins
out
add
pop
mov
es
or
outs
xor
movs
xchg
jp
popf
jns
mov
icebp
pop
xchg
ficomp
push
retf
loopne
xchg
push
aas
push
push
and
adc
popf
int
dec
pop
pop
push
jp
lock
mov
mov
push
push
xor
mov
pop
call
lea
je
les
mov
outs
dec
push
(bad)
adc
pop
jmp
jecxz
pop
movs
int
pop
int
xor
pop
mov
outs
xchg
call
mov
add
fs
pusha
push
call
cmps
sti
cmp
add
je
mov
xchg
aad
in
in
pop
dec
cmp
dec
adc
mul
(bad)
retf
(bad)
cmps
iret
mov
pop
ror
push
out
dec
popf
cli
call
xchg
pop
je
mov
push
arpl
stc
cdq
dec
cs
dec
aas
retf
js
cmps
jl
cmp
pop
out
xchg
sti
imul
jns
loopne
xchg
xchg
mov
pushf
lds
jmp
adc
and
out
pop
cmps
loopne
or
and
xor
push
pop
xor
arpl
xlat
(bad)
mov
xor
icebp
out
fcmovne
fs
(bad)
addr16
pop
push
adc
pop
push
mov
xor
xchg
jb
add
pop
out
je
mov
outs
in
adc
gs
xchg
mov
add
fwait
mov
sub
cmp
enter
cwde
mov
push
mov
inc
fisttp
sub
and
jmp
dec
lods
cmp
data16
inc
enter
push
imul
inc
pop
fild
fadd
jae
cmp
mov
push
fst
movs
imul
sbb
and
or
out
xchg
sub
test
(bad)
push
cld
dec
ins
sub
das
sbb
push
ins
or
ins
sbb
fst
pop
pop
call
or
rcl
or
test
sbb
ja
sub
je
xor
mov
xor
jne
mov
cli
add
push
in
inc
and
jmp
iret
lock
sahf
sbb
sub
aaa
add
loop
push
xor
iret
push
adc
xor
or
sets
mov
sub
pusha
int
mov
push
cmp
or
aaa
xchg
inc
inc
sti
mov
sub
cmp
jle
or
pop
ja
and
(bad)
lds
ret
shl
es
mov
jne
test
xchg
bound
xchg
mov
repnz
pop
cmps
iret
xchg
in
xor
sub
ins
inc
div
cmps
scas
or
dec
dec
jmp
iret
lock
xor
pop
inc
or
push
sti
xchg
dec
out
scas
imul
in
push
pusha
scas
jecxz
inc
scas
push
push
add
ret
leave
fwait
out
inc
dec
les
jg
add
cdq
jae
pop
lahf
lods
dec
push
inc
sub
leave
jbe
push
shl
sub
stc
push
lea
sbb
push
or
inc
ins
xchg
mov
gs
nop
pop
jb
loopne
xor
call
and
dec
sub
pop
mov
popf
xchg
and
mov
fwait
sub
mov
nop
test
sbb
add
scas
outs
mov
push
das
out
int
mov
or
adc
xor
dec
shr
inc
rol
pop
and
mov
or
mov
mov
inc
shl
push
xor
xor
in
sar
cmps
stos
jg
dec
fs
stc
retf
movs
push
sbb
cdq
pop
outs
mov
sub
mov
sub
(bad)
loopne
(bad)
jp
adc
and
cmps
loope
test
add
lea
cli
cmp
push
ja
pop
add
xchg
sub
dec
fs
int3
mov
mov
das
xchg
adc
inc
jecxz
sub
retf
in
stc
xor
jno
and
jle
mov
fst
aam
mov
add
pop
pop
fisub
mov
xchg
sub
and
sahf
in
inc
xor
inc
repnz
or
xor
push
and
pop
clc
in
mov
rcl
xchg
lock
retf
or
xchg
cld
lods
pop
push
cmc
pop
movs
inc
sbb
mov
mov
xor
cmp
inc
xchg
sub
cmp
pop
aam
aas
(bad)
jmp
icebp
nop
cmp
sbb
push
inc
call
test
lahf
fnstcw
out
(bad)
out
lods
dec
xchg
mov
pop
daa
mov
aas
pop
mov
dec
jns
sub
pop
dec
mov
je
sbb
or
cli
mov
mov
pop
dec
aaa
or
push
lahf
push
push
add
jecxz
or
and
bound
dec
dec
dec
or
mov
xlat
xor
jmp
mov
pop
and
pusha
sub
ror
push
cmc
into
std
sub
test
cmp
push
mov
mov
ret
mov
lods
xor
fxch
ret
xchg
mov
movs
lods
adc
xor
cmp
push
pop
pop
in
mov
cmp
mov
call
sti
gs
jle
out
jbe
outs
cld
loope
dec
daa
pop
push
dec
push
clc
cwde
mov
adc
jmp
test
xor
shl
cmp
loope
jg
(bad)
mov
fist
dec
ja
xchg
xor
jp
cmp
cmp
xchg
movs
push
and
popa
sub
jnp
bound
cmps
jno
mov
je
imul
repnz
jne
aaa
mov
enter
cli
in
ret
xchg
jo
lods
cld
outs
dec
repz
in
mov
jl
out
mov
adc
out
mov
je
mov
add
xor
lock
mov
jp
inc
xchg
popa
cli
and
retf
xchg
movs
mov
out
or
adc
add
stos
fwait
sbb
(bad)
rol
stc
add
(bad)
dec
repz
and
dec
add
add
div
out
pop
sbb
push
jl
shl
sub
cdq
xor
or
nop
retf
popa
add
js
stos
sbb
movs
sub
push
xlat
mov
aas
jbe
rep
test
pop
or
add
dec
add
push
ja
in
sti
(bad)
adc
arpl
cmp
and
repz
scas
hlt
xor
mul
sbb
bound
loop
scas
sbb
lock
xchg
test
les
push
dec
sub
and
cmovns
or
add
inc
lods
push
movs
jle
(bad)
ins
retf
stos
lahf
cdq
rcr
or
pop
lds
pop
clc
mov
adc
add
xor
jecxz
mov
jmp
inc
aaa
js
ins
dec
mov
call
xor
mov
ja
mov
bound
arpl
adc
call
push
mov
and
adc
call
jae
cmps
mov
push
dec
add
hlt
xlat
and
xor
(bad)
jl
push
imul
outs
imul
or
pushf
stos
stos
and
aad
bound
mov
into
mov
(bad)
fs
and
repz
and
xor
cmp
and
shl
dec
sub
scas
sbb
daa
cmp
or
in
mov
or
cmc
adc
(bad)
add
xchg
sbb
stos
test
pop
in
jmp
or
push
in
int3
jl
pop
das
rol
push
mov
xchg
scas
int
push
(bad)
mov
sub
fcmovnbe
sbb
xchg
out
dec
mov
icebp
dec
inc
shl
jbe
lods
add
xchg
inc
jno
hlt
cmp
push
mov
sbb
pop
ja
leave
pusha
add
inc
xor
icebp
inc
dec
ficomp
mov
sub
push
sbb
ins
adc
mov
outs
loopne
push
pop
stc
and
jle
dec
adc
and
stc
sub
pop
ins
das
push
mov
rol
lods
loop
jbe
mov
in
push
cmps
(bad)
loope
xchg
data16
mov
ror
jmp
rcl
cmp
push
xchg
xchg
mov
pop
lahf
push
jno
nop
ins
jmp
fwait
sbb
inc
push
push
adc
shr
es
int3
adc
sti
outs
mov
xchg
mov
ins
fmul
xchg
in
mov
adc
push
inc
sahf
stos
jle
hlt
in
mov
in
pop
cld
jae
daa
add
mov
inc
adc
xchg
push
ret
xor
mov
inc
repnz
in
je
ds
ret
pop
scas
push
ds
sbb
pop
fidivr
mov
and
dec
and
mov
jne
pusha
add
mov
push
adc
lahf
call
mov
jmp
push
cwde
add
popa
jp
into
push
and
jp
xor
outs
mov
call
mov
sbb
sbb
adc
lock
inc
leave
or
xlat
adc
les
cld
xor
stos
(bad)
mov
call
cmps
jmp
sub
sub
xchg
out
sbb
adc
div
xchg
mov
pushf
and
cmp
ins
or
dec
lea
div
xchg
mov
shl
lahf
xchg
jp
mov
sahf
in
push
push
cli
popa
pop
cmp
aam
inc
add
push
mov
(bad)
xchg
idiv
repz
ror
ret
inc
pop
jle
fwait
ret
ret
adc
mov
scas
cdq
mov
sbb
stc
arpl
pop
mov
in
neg
jge
into
stos
jae
iret
sbb
sahf
dec
mov
sub
inc
mov
mov
je
inc
repnz
sbb
pop
mov
dec
jge
loopne
jae
add
js
adc
scas
cmps
int
(bad)
sub
jmp
pop
mov
fild
es
sbb
mov
inc
jmp
sub
retf
addr16
(bad)
aad
les
pop
jg
cld
daa
pop
movs
push
inc
push
in
std
hlt
and
xor
cmp
and
xor
shl
(bad)
lock
ss
jne
jle
inc
sbb
push
hlt
cmp
lods
inc
shl
nop
(bad)
sub
push
ja
inc
fwait
aaa
dec
loopne
(bad)
sub
push
out
or
cmps
les
push
pusha
inc
pop
mov
push
je
stos
or
inc
mov
inc
mov
jp
inc
mov
daa
sub
mov
mov
adc
add
out
cmp
fcomp
lahf
and
enter
mov
add
in
retf
enter
pop
sub
popf
sbb
xor
and
and
rcl
nop
sub
add
test
add
arpl
(bad)
not
or
(bad)
adc
ds
xchg
inc
(bad)
movs
mov
cld
and
sub
fisttp
sub
imul
daa
dec
inc
call
in
inc
popf
out
pop
mov
iret
xchg
pop
cmp
out
jo
leave
dec
pop
xchg
mov
and
cld
shl
mov
(bad)
loopne
mov
xchg
and
push
rcr
loope
fmul
pop
call
adc
and
pop
mov
fstp
repnz
js
pop
and
shl
stos
shr
clc
pop
outs
data16
ret
mov
das
adc
jae
std
and
sub
out
jno
cmc
jnp
leave
arpl
add
sar
sub
cmc
call
ficomp
lock
cmps
or
mov
jecxz
add
xor
or
dec
stos
dec
mov
inc
xchg
or
jne
cdq
pushf
adc
sbb
int3
sbb
jno
int
clc
add
xor
jge
lock
das
fwait
mov
aaa
jns
popa
enter
(bad)
jle
sub
aaa
xchg
inc
ss
rcl
shl
jp
mov
aas
adc
add
ja
movs
imul
popa
je
xor
jmp
pop
(bad)
sbb
imul
loop
leave
in
push
popf
cwde
cdq
pop
adc
sbb
jecxz
sbb
xchg
mov
sub
int3
retf
aas
push
mov
cli
add
xor
sti
or
scas
xor
dec
cld
jmp
test
sbb
shl
repnz
jns
inc
push
repz
inc
dec
inc
push
xor
add
outs
push
xchg
jge
js
mov
clc
push
cmp
ss
fild
ret
or
cmp
fwait
ret
jle
movs
and
add
ja
adc
addr16
mov
push
jl
push
push
int3
es
je
mov
xor
pop
stc
or
jns
jnp
mov
dec
jne
inc
dec
push
add
pop
mov
das
and
cmps
sahf
into
out
aam
fdiv
add
(bad)
jg
mov
inc
fdiv
addr16
in
fldenv
stos
add
adc
call
das
jle
lods
call
xlat
inc
mov
sub
add
in
int3
cmc
bsr
push
int3
mov
aaa
shr
mov
iret
inc
push
pop
fidivr
shl
adc
adc
and
les
push
movs
leave
jle
jle
test
inc
push
in
ds
push
mov
or
mov
mov
ficom
dec
mov
imul
sub
adc
jg
mov
call
retf
outs
es
cmp
in
cmps
cmc
mov
add
mov
and
aad
inc
cmp
sahf
push
jb
les
jns
dec
jmp
fistp
push
xor
popf
push
fsub
fwait
cmp
in
dec
call
and
retf
jb
adc
sbb
add
xchg
pop
stos
dec
das
test
ret
lods
mov
add
mov
add
test
push
mov
loop
jno
ror
imul
popa
jmp
adc
fwait
mov
mov
add
jmp
(bad)
sub
sub
cmp
repz
out
movs
xchg
addr16
outs
pop
sbb
cmps
add
jb
imul
push
imul
mov
or
sub
pop
stos
ret
xchg
pop
icebp
leave
dec
retf
add
shr
sbb
pop
outs
xor
mov
push
cmp
inc
adc
rol
mov
jg
xchg
daa
dec
js
adc
mov
repnz
sub
pop
je
push
xor
loopne
xchg
push
or
fidiv
jl
inc
(bad)
(bad)
pop
mov
mov
test
mov
stos
pusha
mov
xlat
mov
push
loopne
clc
stos
shl
mov
pusha
lea
repnz
test
mov
repnz
fdivr
cmc
loopne
std
nop
test
(bad)
push
dec
cmp
(bad)
hlt
and
movs
fwait
add
cld
cmp
sub
mov
std
jmp
loop
sbb
xor
xchg
inc
xor
jg
cli
das
and
mov
mov
xor
je
lds
xchg
mov
xchg
jge
pusha
test
mov
mov
rol
xchg
imul
shl
fmul
inc
or
jno
ret
arpl
pcmpgtw
aam
xchg
cdq
lods
cmp
cmc
(bad)
fisttp
and
or
sbb
or
add
gs
in
jb
push
(bad)
fiadd
push
pop
push
mov
into
jmp
jb
int
adc
jns
int3
or
ds
test
jae
or
add
in
or
clc
xchg
mov
addr16
mov
push
imul
repnz
dec
jg
inc
sub
mov
sbb
inc
outs
imul
stos
adc
lods
jmp
stos
adc
sahf
(bad)
fmul
xor
mov
jge
add
retf
mov
enter
sub
int3
addr16
add
xchg
(bad)
xchg
inc
fadd
(bad)
dec
cmp
mov
cmp
ret
(bad)
and
call
push
inc
shl
movs
and
movs
in
xchg
jmp
jae
pop
cmp
test
ret
inc
stc
sub
dec
sub
mov
popf
jns
inc
jne
outs
test
rcr
or
ins
out
mov
inc
push
xor
sar
push
push
gs
test
jecxz
stos
pop
mov
or
or
vpcmpgtq
cli
es
pop
adc
(bad)
jno
sub
clc
pushf
sbb
dec
pop
rol
jg
ret
loopne
inc
jg
dec
push
repnz
cld
mov
xor
inc
int
jnp
sti
dec
mov
mov
(bad)
jns
mov
mov
jmp
sbb
or
xchg
int
jne
and
adc
mov
out
(bad)
movs
xchg
clc
mov
adc
fsub
ins
ror
xor
xchg
mov
(bad)
xchg
mov
outs
add
push
jno
jnp
out
stos
mov
inc
cmp
data16
xchg
or
mov
mov
lea
enter
inc
mov
xor
fnstcw
xor
(bad)
pop
movs
test
xor
cwde
sub
adc
call
and
shl
inc
adc
movs
js
std
shl
loopne
iret
pop
repnz
rcr
mov
int
sbb
jge
pop
jle
sar
cdq
rcl
add
cld
push
pop
retf
mov
jne
push
fcomp
or
fwait
mov
mov
leave
cwde
cmp
or
not
cmp
mov
data16
add
or
repz
outs
jle
sbb
jle
xchg
fwait
lds
fcmovnu
mov
repz
sbb
adc
ror
int
out
int
adc
out
xchg
scas
cwde
mov
push
nop
inc
push
cmp
ja
call
pop
pop
push
dec
mov
jae
in
icebp
fdiv
push
sub
je
lahf
int
sub
test
hlt
retf
into
lock
daa
mov
xor
lahf
(bad)
int3
jp
adc
ja
hlt
and
stc
cs
test
push
cmp
out
movs
jmp
jno
clc
mov
xor
ja
cmp
jle
dec
in
aas
mov
sub
bound
push
mov
cmp
(bad)
jae
adc
daa
rcr
std
imul
xor
js
xor
jp
and
mov
sbb
push
push
dec
test
sahf
or
lods
lods
stos
jge
hlt
inc
xchg
jle
adc
inc
popf
sub
and
leave
push
pop
xor
mov
cli
ret
ja
imul
imul
jecxz
shr
dec
test
dec
clc
or
jno
stc
popa
in
shr
sub
dec
into
out
and
icebp
cdq
iret
pop
jno
fiadd
push
xor
rcl
stos
jmp
xor
dec
pop
push
push
aad
test
pushf
pop
jb
add
cmp
fstp
inc
add
jns
pop
push
or
mov
fidiv
jns
jp
jg
shl
mov
(bad)
rdtsc
aaa
mov
xrelease
gs
test
or
mov
or
jns
daa
jnp
into
je
cld
pusha
cmp
stos
nop
cmps
mov
push
jmp
pop
inc
push
push
lea
por
lea
mov
xchg
xchg
push
addr16
mov
pop
inc
clc
pop
inc
mov
mov
pusha
fisttp
mov
adc
pop
xchg
(bad)
std
xor
xor
addr16
xchg
clc
rcl
scas
stc
cmp
loopne
adc
loope
pop
stc
(bad)
iret
popf
xchg
mov
cli
(bad)
sub
psubb
push
push
mov
ja
pop
mov
pop
call
pop
int3
inc
enter
mov
neg
jo
out
test
adc
sar
iret
jmp
js
sti
sbb
(bad)
jmp
pop
xchg
enter
int
ja
sbb
push
push
iret
add
inc
aas
addr16
cmp
cmp
jo
gs
push
imul
les
sub
mov
ret
inc
mov
mov
or
imul
adc
loopne
dec
push
jmp
cmps
mov
mov
ja
addr16
and
cmps
xor
arpl
aas
ret
sub
aam
add
inc
clc
xor
imul
fisub
mov
js
push
int3
and
call
push
int3
sbb
add
jnp
ret
idiv
sbb
sar
popf
ins
in
sub
and
js
adc
inc
fst
ds
jae
jecxz
push
jmp
inc
xchg
xor
cmp
ja
aas
aaa
cmps
adc
mov
out
add
lods
sub
mov
(bad)
sbb
pushf
push
adc
xchg
not
add
sahf
es
arpl
push
jmp
pop
sti
mov
sti
cmps
inc
ins
add
inc
outs
ss
inc
ss
(bad)
fwait
fwait
mov
cwde
pushf
jle
iret
(bad)
or
jo
dec
mov
fsubr
in
add
js
lock
movs
into
out
dec
ficom
(bad)
jmp
int3
cli
jno
adc
fwait
mov
xor
mov
cld
inc
cmps
popa
cmp
mov
mov
inc
pusha
or
push
call
xor
jmp
push
xor
push
mov
mov
mov
es
inc
cmp
into
jne
add
sbb
dec
xor
cdq
xchg
idiv
retf
jmp
cmp
xor
iret
or
fldcw
sbb
clc
ret
xchg
fdivr
jno
lods
sar
cli
mov
jmp
iret
sbb
mul
push
clc
fist
rcr
adc
call
ja
jmp
or
lahf
lahf
fstp
dec
dec
mov
aam
daa
mov
jl
imul
or
mov
xchg
cwde
das
jmp
cmp
xor
rol
jmp
es
out
xor
jmp
cli
cmp
push
push
push
imul
mov
xchg
sbb
lahf
lds
sbb
(bad)
cmp
jbe
das
je
lds
sbb
xor
hlt
mov
pushaw
xchg
inc
clc
pop
movs
sbb
mov
sbb
movs
ret
scas
xchg
push
inc
dec
dec
pusha
icebp
ret
mov
mov
mov
cli
sbb
jg
pusha
sbb
and
add
int
dec
push
fsubr
push
jne
xlat
adc
jbe
jmp
push
dec
dec
add
test
outs
mov
loop
pusha
mov
jbe
fcom
mov
movs
pop
and
inc
ds
ins
addr16
lahf
fld
add
or
cmp
push
fimul
dec
outs
mov
in
popa
mov
js
inc
in
and
icebp
shl
movs
pop
test
xor
arpl
pop
es
xor
sub
cmc
xor
adc
adc
jnp
in
test
sub
mov
xchg
popa
pop
std
pop
pop
push
jp
inc
scas
loope
fcomp
imul
fstp
aas
push
addr16
pop
jne
loopne
movs
xor
jmp
fcom
js
mov
call
inc
lea
sbb
sbb
push
retf
xor
jmp
icebp
mov
sbb
xor
out
rol
push
bound
sub
add
or
mov
mov
dec
cmp
idiv
pop
sbb
cmc
mov
pop
sbb
jb
and
push
cmp
inc
clc
adc
mov
jmp
lods
sub
call
pop
add
out
add
dec
adc
jecxz
scas
mov
mov
cmp
shr
push
mov
addr16
mov
pop
fmul
jmp
cmp
es
in
pop
adc
push
(bad)
std
add
sub
pop
loope
sbb
ja
mov
pop
add
jle
adc
les
pop
stos
cmp
sbb
jecxz
out
xor
(bad)
imul
xchg
inc
adc
sub
aaa
in
inc
mov
push
aaa
ja
and
adc
push
jo
mov
and
push
add
fld
pop
lods
xor
push
fsubr
retf
sub
mov
dec
xchg
sbb
cmp
mov
fnsave
add
and
mov
sbb
inc
push
in
xor
jmp
xchg
xchg
add
jl
cli
push
push
popf
call
sub
and
mov
jo
cli
fstp
inc
push
jl
push
xor
cmp
fcom
jne
in
add
adc
sub
xor
pop
into
sub
sar
movs
mov
push
in
in
test
inc
push
enter
adc
xchg
jae
dec
cmp
(bad)
mov
fst
inc
stc
repz
and
mov
sbb
mov
sti
retf
mov
push
stc
loop
pusha
mov
xor
je
ffree
and
mov
mov
and
rcr
test
inc
xchg
adc
mov
mov
pop
adc
fiadd
pushf
inc
xor
or
lods
ds
sbb
push
hlt
retf
repnz
std
jmp
hlt
in
push
jecxz
cmp
pop
jbe
mov
rol
das
in
out
call
and
loopne
in
popfw
cmp
adc
imul
cmp
ret
cli
ins
dec
or
(bad)
bnd
ds
or
rcr
div
mov
outs
xchg
ja
push
or
and
enter
push
mov
aaa
and
pop
xor
out
test
cmp
sbb
test
les
jmp
data16
jb
sbb
jmp
data16
std
ss
cli
mov
sub
ret
in
ss
lods
pop
scas
ret
mov
pop
or
loope
sub
addr16
jg
and
push
push
popf
(bad)
fld
dec
add
movs
jg
test
xchg
call
pop
arpl
xchg
pop
dec
sub
mov
daa
imul
mov
push
pop
xchg
iret
mov
push
jle
movs
pop
outs
rcl
fwait
adc
pop
(bad)
ret
in
sub
pop
xchg
call
mov
add
adc
mov
fldcw
and
jecxz
xor
push
push
xor
mov
and
adc
adc
mov
jo
adc
repnz
jne
jge
leave
inc
sub
addr16
mov
inc
pushf
fnstsw
(bad)
jb
jge
lea
mov
xchg
xor
out
in
popa
xor
fbstp
pushf
cmps
ds
shr
or
sbb
push
xor
xor
inc
dec
arpl
pop
inc
in
add
stos
int
retf
out
mov
retf
push
inc
jo
mov
mov
dec
mov
call
outs
fidiv
and
adc
imul
adc
clc
sub
data16
and
rcr
aam
sub
cs
loop
pop
fsubr
jp
jo
out
dec
sub
jg
mov
pop
mov
outs
sbb
mov
sub
iret
pop
setae
(bad)
mov
sbb
(bad)
cmp
das
cs
xor
add
(bad)
cmc
inc
cmp
push
inc
fsubr
lahf
adc
pusha
jp
pop
stc
stos
mov
mov
loop
dec
imul
lods
xor
cmp
jne
cwde
xor
xchg
movs
ror
shr
in
mov
ins
aam
xchg
jmp
adc
xchg
or
mov
xor
or
icebp
adc
mov
retf
fcmovnbe
fidiv
and
pop
push
repz
or
fdiv
(bad)
xlat
dec
lahf
inc
in
xchg
push
mov
in
rol
xchg
inc
div
mov
nop
jne
fisttp
xchg
pop
or
push
mov
fdivr
sti
add
jmp
sub
sar
sbb
adc
cs
adc
in
or
aam
(bad)
pop
and
mov
fldl2t
stos
mov
cli
outs
hlt
rcr
fisub
inc
inc
push
and
je
repnz
shr
adc
inc
jge
call
inc
mov
xchg
pop
jecxz
or
shl
fdiv
cld
out
jle
ja
sahf
ins
adc
sahf
xchg
lahf
cmp
mov
shr
xchg
lea
push
cmp
dec
lds
ror
mov
pop
mov
(bad)
js
jb
xor
mov
mov
outs
xchg
rcr
stc
fiadd
shr
mov
dec
mov
popf
pop
mov
shr
pop
pop
loope
call
mov
popf
mov
mov
ds
icebp
mov
adc
or
fs
lods
dec
dec
xor
ds
nop
pushf
mov
(bad)
div
repnz
dec
lea
xor
sub
pusha
jmp
loop
pop
mov
sub
addr16
sti
into
or
sub
jmp
mov
and
iret
xchg
sub
test
dec
cmp
cmp
cmp
xchg
rcr
gs
loope
les
sbb
mov
xchg
xlat
inc
jmp
fyl2xp1
shr
jp
pusha
sub
inc
fcomp
das
dec
push
jo
mov
sbb
jge
inc
pop
dec
out
xchg
call
inc
jmp
xlat
jg
push
stc
sub
cmp
in
sub
pop
push
mov
stos
out
mov
and
sub
jecxz
sub
and
stos
dec
dec
mov
cld
pop
cs
out
test
in
mov
xor
push
mov
cmp
rcl
sub
and
adc
cmps
mov
nop
adc
pushf
adc
fidivr
inc
stc
aaa
in
jecxz
mov
mov
mov
js
retf
or
dec
xor
daa
jmp
inc
jl
sbb
movs
ja
and
cmps
js
push
pop
or
scas
sbb
sbb
cmps
popa
inc
push
or
out
sti
jne
and
das
rol
mov
aam
mov
and
std
sbb
cwde
adc
(bad)
xchg
sbb
mov
out
mov
jge
in
mov
xchg
in
out
cmp
out
in
mov
cdq
pushf
cmp
or
mov
jmp
jae
xchg
addr16
jp
sbb
es
inc
dec
test
lds
add
(bad)
mov
or
or
jg
bound
pusha
and
jno
shr
test
and
jmp
push
mov
fisub
int
sbb
pop
adc
xchg
pusha
and
adc
jo
xchg
fsub
mov
iret
dec
and
push
test
pop
rep
mov
xchg
sbb
ja
adc
dec
add
inc
cmp
jnp
rep
pop
into
cmps
add
out
jecxz
and
pop
fdiv
popa
fs
mov
adc
dec
sahf
(bad)
stos
cmps
mov
in
(bad)
mov
jnp
push
dec
repnz
adc
fisttp
inc
jbe
jmp
sub
cwde
inc
xor
test
sub
adc
cs
call
xchg
cdq
mov
pop
ins
xlat
mov
icebp
in
mov
mov
scas
mov
dec
adc
aas
adc
fs
dec
mov
int3
mov
out
cmp
xlat
mov
es
cmp
ret
sahf
je
or
inc
mov
loop
push
sub
adc
ins
jb
pop
mov
das
out
inc
mov
sahf
push
fucomip
or
fbld
add
xor
mov
(bad)
cmp
dec
push
sbb
in
std
sub
xor
test
retf
not
mov
jg
test
xchg
push
bound
cmc
loope
push
fwait
add
loop
ret
scas
xor
(bad)
dec
jbe
mov
fs
mov
and
dec
push
add
mov
mov
out
js
arpl
and
in
inc
sbb
(bad)
fld
loop
sahf
and
dec
cmp
fwait
fwait
in
jns
sbb
outs
fist
push
adc
out
rcr
push
sub
push
add
mov
xor
mov
cmp
shr
dec
mov
push
loop
dec
retf
mov
and
mov
inc
scas
adc
mov
sub
rcl
fcomi
imul
pop
push
add
add
dec
sub
jg
call
arpl
stc
hlt
clc
fcmovb
les
sbb
xor
in
or
iret
fild
push
sub
fild
push
rcr
xlat
mov
and
arpl
jle
mov
mov
adc
loopne
test
imul
mov
and
sub
outs
add
into
imul
fild
inc
leave
add
mov
adc
cmp
mov
shr
stos
push
test
repz
jns
std
push
in
add
xchg
aaa
jmp
ins
clc
cwde
jmp
(bad)
das
ss
push
and
out
bound
adc
xor
retf
ins
fisub
push
mov
mov
pop
add
les
xor
xor
inc
clc
sbb
outs
fwait
adc
ror
dec
sbb
test
ds
or
je
fnsave
cld
stos
push
or
ja
test
jle
aaa
dec
pop
jl
popf
mov
inc
mov
jl
jl
jg
xor
clc
sub
pop
in
sbb
ss
add
pop
pop
sbb
ins
xchg
fs
push
and
sub
mov
cmp
hlt
ins
loope
retf
pop
lds
pop
push
ins
and
sbb
das
add
fcmovnb
mov
inc
lock
xor
adc
mov
cwde
cmp
mov
retf
mov
aaa
pop
inc
push
std
pop
inc
shl
mov
cmp
sub
mov
cmp
add
cdq
mov
cdq
mov
das
sub
xchg
xor
stos
pop
pop
icebp
jnp
adc
imul
xchg
inc
movs
ins
shl
pop
ja
imul
repz
jl
ficomp
out
shl
inc
mov
ins
cmp
xlat
mov
enter
adc
cdq
mov
lahf
dec
jo
repnz
icebp
aam
xor
shl
push
stc
cmp
outs
xchg
js
add
jg
nop
inc
lods
arpl
add
repnz
arpl
in
jno
popa
cmc
jle
aas
div
mov
enter
fs
dec
adc
das
je
jp
fs
dec
xor
mov
scas
dec
mov
push
jl
mov
mov
or
int
mov
les
les
sub
pop
cmps
xor
sub
push
add
in
arpl
push
mov
shl
lods
ja
inc
sbb
fcomp
mov
and
test
out
mov
push
mov
pop
adc
scas
movzx
out
clc
dec
rcr
jp
mov
repnz
push
push
xchg
dec
add
pop
pop
adc
sbb
aas
call
inc
inc
xor
cwde
cld
mov
cmp
cmc
jp
das
sbb
mul
lahf
mov
cdq
xchg
test
mov
lods
jb
in
ins
bound
(bad)
fild
push
into
push
mov
out
movs
mov
hlt
movs
ret
push
adc
jnp
fs
lahf
iret
int
jmp
dec
cmp
and
sahf
iret
retf
adc
jnp
mov
and
lea
out
pop
mov
aad
xchg
mov
sub
rsm
mov
mov
add
into
mov
fcomp
add
call
ret
pop
ret
or
aaa
ror
cmp
mov
fldenv
xor
enter
pop
mov
sti
loopne
lods
jle
aas
mov
push
dec
sub
cmp
in
out
cmps
mov
mov
mov
push
jmp
bound
pop
inc
adc
hlt
dec
or
xor
cmp
cmp
pop
or
repz
mov
hlt
sbb
mov
mov
cdq
popa
cmp
jo
jl
jp
pop
and
ficom
inc
sub
enter
xchg
push
adc
cmps
out
popa
inc
sub
fsubr
(bad)
sti
call
mov
adc
add
xor
and
jae
mov
jae
ror
out
stc
(bad)
arpl
fucomi
gs
repz
inc
mov
daa
test
or
add
movs
loopne
xchg
sar
in
inc
push
enter
lahf
(bad)
sbb
adc
mov
lahf
mov
jo
sub
mov
out
pop
aaa
mov
push
xchg
and
cmc
stos
mov
aas
into
(bad)
popf
movs
jns
xchg
movs
(bad)
cmp
mov
ss
bound
in
or
es
sbb
out
(bad)
cmps
mov
mov
adc
cmp
sti
arpl
xor
add
or
imul
sbb
pop
iret
fldenv
sbb
xor
inc
adc
sbb
xchg
in
pop
add
cs
ins
arpl
jne
jecxz
sub
(bad)
std
pop
cmp
sub
push
sbb
and
add
push
push
sbb
idiv
or
loopne
in
neg
ins
outs
in
mov
mov
and
fst
popf
(bad)
cdq
mov
pop
adc
clc
push
xchg
ds
test
std
xor
dec
dec
cdq
cmc
sar
movs
xchg
push
or
sahf
inc
push
das
add
adc
mov
aad
sub
or
and
sar
ror
call
push
fstp
jg
dec
loopne
and
imul
and
popf
mov
xchg
stos
cdq
jle
fidivr
or
inc
sbb
pop
jmp
mov
pop
xor
popa
cmp
push
ror
aas
inc
ret
sub
leave
sar
(bad)
pop
push
or
pop
lds
mov
pop
mov
lods
dec
into
push
lods
sar
rcr
mov
mov
dec
scas
loope
push
add
dec
jae
sub
jo
test
fdiv
leave
in
sub
push
mov
sub
aad
adc
inc
jo
rcr
jmp
cmps
int
push
mov
adc
sub
add
sahf
mov
es
and
dec
repz
fs
std
mov
mov
sbb
mov
das
es
int3
jmp
adc
lods
or
xlat
xor
(bad)
ss
pop
dec
icebp
hlt
es
outs
jbe
lahf
fwait
std
scas
cmps
outs
adc
fld
daa
ins
retf
xor
(bad)
mov
xadd
mov
lods
or
in
cmp
mov
adc
add
stos
arpl
fisttp
sbb
loopne
mov
loop
add
or
xchg
lods
fsub
and
jg
retf
sub
inc
adc
push
ins
stos
push
xchg
cmps
das
call
loopne
call
push
cmc
xchg
aam
fnstsw
jecxz
xchg
(bad)
int3
not
scas
shl
mov
pop
loope
sub
push
jle
in
push
and
das
imul
mov
das
and
dec
push
pop
mov
jecxz
xor
mov
popf
outs
push
dec
stc
or
jmp
inc
inc
jmp
(bad)
cmp
inc
inc
out
and
aad
mov
jmp
pop
sub
and
mov
cs
cmp
jp
sbb
or
add
fldenv
jmp
repnz
add
icebp
(bad)
xor
in
dec
fadd
mov
pop
popa
(bad)
push
fdiv
leave
and
add
(bad)
jmp
sub
xchg
jmp
cs
and
inc
jnp
cdq
jge
clc
jg
(bad)
cmc
dec
mov
fadd
cmp
dec
mov
sub
pop
mov
sbb
fild
clc
(bad)
ds
and
(bad)
mov
loop
stos
add
jne
data16
or
shl
mov
repz
push
rcr
ja
fcomp
adc
pushf
(bad)
pusha
jmp
jns
add
movs
aam
xor
rcl
cmp
cld
and
pop
xor
push
xor
shl
repz
shr
fst
inc
in
jl
lods
outs
retf
cmp
cmp
ins
xchg
push
push
js
mov
scas
adc
mov
fiadd
repnz
adc
clc
adc
cmp
push
and
lahf
mov
ret
lea
pop
ins
pop
test
les
lea
jge
mov
je
out
lock
stc
test
shl
pop
(bad)
call
pop
fist
mov
pop
sbb
sbb
pop
jp
gs
push
inc
dec
dec
pop
xor
enter
mov
and
(bad)
sar
emms
push
dec
cmps
inc
pop
xchg
dec
fidivr
hlt
dec
inc
cs
icebp
jnp
mov
(bad)
or
movs
mov
inc
cmp
xchg
data16
jge
in
sar
xchg
push
sbb
and
mov
stos
or
pop
int3
sub
xchg
mov
mov
jb
(bad)
lods
cmp
jnp
jl
dec
int3
mov
(bad)
js
inc
and
jmp
test
ficom
scas
je
pusha
shr
fs
push
add
fcom
jbe
enter
dec
sub
push
mov
fnsave
je
mov
je
mov
push
ss
sbb
mov
data16
push
fsubrp
les
push
(bad)
xor
pop
jbe
or
dec
lahf
jp
adc
jbe
sbb
lods
(bad)
push
iret
(bad)
jp
dec
jmp
jl
pop
aad
sbb
movs
js
data16
div
pop
xor
mov
pop
mov
aas
adc
or
jo
push
pop
rcr
adc
js
test
ss
sbb
push
rcr
pop
aad
adc
popf
les
jle
mov
imul
(bad)
mov
cdq
jecxz
mov
mov
mov
dec
xor
sub
inc
icebp
sbb
pop
aas
mov
push
xor
ficom
xor
pop
ss
enter
cmp
xor
aam
cmovnp
add
pop
cld
cmps
fucomp
xor
adc
add
das
ret
(bad)
jo
push
outs
cli
movs
popf
xor
pop
adc
ret
out
(bad)
jge
mov
rcl
pop
clc
ja
fstp
imul
mov
pop
pop
in
jp
push
xchg
fdivr
rcr
fldcw
xchg
(bad)
call
jae
in
pop
pusha
jno
sti
(bad)
jmp
ret
pop
popa
mov
and
sbb
pop
ret
push
bound
mov
mov
fadd
fcmovnb
add
leave
pusha
(bad)
sbb
pusha
pop
adc
test
mov
jne
xchg
add
jno
jbe
lds
sahf
fwait
adc
(bad)
sahf
add
push
pop
aaa
stos
(bad)
cmc
out
dec
ret
pop
jne
inc
mov
add
cmp
inc
pop
aad
jns
fwait
pop
(bad)
fwait
inc
ror
sub
mov
add
(bad)
out
ins
push
lea
movs
fs
lock
icebp
iret
mov
shr
pusha
lahf
in
pusha
add
neg
nop
ins
add
pop
inc
push
dec
rcr
imul
outs
pop
enter
pop
call
cmp
sub
lahf
pop
fwait
cmps
push
cmp
into
cmc
loope
xchg
sbb
inc
mov
dec
jo
clc
xor
jecxz
xor
je
ret
push
adc
ss
or
les
cmp
inc
sbb
out
xchg
cmp
outs
int
push
push
jmp
dec
mov
pop
icebp
call
jge
not
rcr
adc
das
or
imul
test
fdivr
mov
es
xchg
push
iret
or
hlt
jno
or
inc
cmp
mov
fistp
in
cmp
sti
lock
dec
hlt
outs
mov
push
push
push
mov
adc
sbb
jge
(bad)
iret
add
pop
cmp
lds
sbb
or
add
adc
jb
les
movs
pop
inc
fnstenv
hlt
add
or
jae
loopne
fdivr
call
pop
dec
popa
pop
sbb
xor
jnp
cwde
aaa
fidivr
fisttp
scas
jle
or
lds
sub
sbb
sub
test
test
dec
or
jge
mov
movs
scas
sahf
dec
xchg
mov
imul
mov
fadd
xor
jl
sbb
mov
mov
fdiv
mov
fwait
cs
lods
add
fnstcw
clc
lahf
dec
iret
sbb
mov
adc
mov
jne
jbe
inc
leave
lahf
and
imul
mov
sub
loop
test
sar
jg
cmps
aas
fmul
xchg
in
mov
pop
icebp
push
les
iret
sbb
or
pusha
add
lods
adc
add
push
jmp
mov
cmps
cli
pop
inc
dec
neg
add
inc
mov
stc
std
aaa
test
call
sub
repz
push
sbb
mov
mov
mov
pusha
cmp
in
addr16
(bad)
mov
clc
loope
add
ret
mov
lahf
stc
jl
xor
mov
mov
(bad)
mov
js
mov
or
and
ret
xchg
adc
xchg
fwait
push
adc
ja
sti
mov
jl
stos
shl
xor
pop
inc
jp
mov
pop
adc
movs
fnstenv
repnz
retf
bnd
loopne
xor
add
mov
push
inc
jmp
(bad)
and
int
xor
js
fsubr
outs
hlt
mov
(bad)
fsubr
jno
ret
dec
jecxz
add
clc
add
add
sub
out
ret
arpl
add
sbb
popa
jge
sub
movs
sbb
xor
and
int3
test
and
mov
jae
xor
loope
jne
dec
xchg
inc
bnd
dec
daa
push
gs
fs
nop
test
mov
cmp
push
sti
fnstenv
in
sub
sahf
repz
push
mov
mov
(bad)
(bad)
or
test
pop
sbb
push
jae
gs
pop
in
add
(bad)
jns
enter
jne
or
dec
push
xlat
adc
jmp
mov
jmp
dec
(bad)
dec
std
mov
mov
in
lock
xlat
pop
mov
xlat
xchg
or
sub
inc
mov
out
push
cld
jbe
and
pop
(bad)
jmp
adc
shl
dec
jnp
jns
mov
or
ror
lods
rcl
loope
fnsave
cmp
cld
not
mov
pop
lods
push
imul
dec
mov
clc
xchg
mov
and
mov
cmp
dec
xchg
fld
enter
mov
sahf
std
in
jp
dec
xchg
ins
test
mov
mov
movs
inc
cmc
in
or
es
lods
(bad)
pop
or
cmps
shr
mov
xchg
retf
sbb
mov
lock
pop
xchg
mov
(bad)
push
xor
push
adc
(bad)
and
outs
inc
test
pop
jmp
jmp
lds
dec
repz
mov
xchg
addr16
(bad)
xchg
movs
pop
sbb
jb
out
test
outs
pop
mov
add
xor
sub
fxch
lods
fisubr
cmp
das
xor
inc
fwait
jge
cmp
xchg
dec
loopne
pop
cmp
loope
out
out
inc
fs
in
and
xor
inc
add
nop
int3
dec
es
mov
sub
xchg
sub
(bad)
mov
mov
cdq
retf
rol
xor
push
mov
iret
xchg
test
mov
push
pop
fmulp
pop
outs
dec
pop
icebp
jle
test
dec
mov
pop
adc
gs
icebp
inc
repz
dec
in
mov
cmc
test
push
add
xlat
cmps
mov
arpl
sbb
push
nop
imul
shl
dec
sbb
push
cmp
pop
stos
sbb
mov
pop
das
arpl
(bad)
scas
mov
push
fild
sub
sbb
and
nop
add
mov
xor
sbb
scas
dec
std
cmc
fstp
imul
movs
mov
sbb
fild
sti
adc
or
push
out
xchg
movs
mov
loope
data16
or
movs
push
outs
mov
fnstenv
enter
ins
pop
call
cmp
inc
mov
sbb
retf
pop
retf
enter
mov
loopne
pop
imul
jecxz
cmps
mov
shr
pop
xchg
adc
enter
fdivr
(bad)
mov
out
clc
cwde
(bad)
and
popf
add
dec
pop
sbb
ss
js
hlt
or
sub
cmp
adc
push
mov
retf
jmp
icebp
pop
add
sar
and
add
out
mov
xchg
sbb
retf
cli
jg
inc
clc
bound
rcl
and
iret
ret
cmps
jo
ss
adc
fwait
pop
sti
adc
mov
pop
and
and
push
xchg
inc
pop
mov
call
or
dec
aaa
jl
loopne
lahf
cs
stos
jae
push
xlat
sbb
int3
sbb
jb
add
stos
and
add
test
mov
jae
ins
mov
jg
jne
scas
xchg
cmps
pop
dec
bound
dec
inc
mov
mov
in
fwait
aaa
xchg
leave
or
fisttp
call
mov
push
xor
sub
shl
inc
pop
pop
pop
push
rol
je
or
inc
call
les
sbb
dec
push
dec
xchg
retf
cmp
pop
(bad)
loope
sub
call
cwde
shl
adc
stos
mov
or
sub
push
sub
fcmovnb
(bad)
jae
in
(bad)
sbb
pop
(bad)
adc
and
movs
inc
or
xchg
mov
inc
push
cmc
pusha
aam
push
jo
push
pop
adc
cmps
mov
jns
xchg
rcr
cld
nop
outs
adc
xor
jno
mov
adc
pop
mov
and
or
xchg
mov
xchg
xor
mov
mov
lahf
cmp
scas
loopne
inc
mov
mov
leave
imul
out
pop
je
inc
add
into
cmp
pop
out
xor
cmp
pop
ds
pop
push
cmps
es
int
or
neg
and
retf
inc
stc
call
or
fsub
adc
jmp
push
(bad)
jno
fadd
pop
or
inc
adc
lahf
test
imul
rcr
inc
fist
push
mov
leave
bound
loopne
jo
cmp
sub
xchg
dec
pop
int
jne
add
xchg
push
mov
rcl
push
and
out
sbb
mov
xor
lods
cmp
or
cmp
popa
xor
mov
int
sbb
jle
sahf
jae
inc
sbb
std
retf
nop
shr
jle
popf
test
jns
repnz
test
cmp
jbe
lock
int
shl
pop
fisttp
or
int
add
pop
mov
int3
aas
and
pop
mov
pop
aas
adc
lock
test
cmp
pop
push
jge
xor
stos
call
and
lahf
xlat
xchg
cld
div
dec
out
mov
jo
or
or
add
cmp
lahf
sub
sti
push
shr
push
dec
inc
sar
stc
lahf
adc
out
mov
dec
dec
push
inc
jg
adc
data16
arpl
adc
imul
rcr
stos
outs
mov
pop
popa
es
sahf
test
jl
mov
es
aas
push
and
or
in
test
dec
push
retf
inc
cmp
rcr
ror
imul
and
loop
pop
stos
pop
rol
push
sub
sbb
mov
mov
call
mov
inc
push
push
mov
popa
cs
push
pop
pop
lods
xor
ins
das
cmp
xor
pusha
ins
mov
mov
fs
jno
dec
in
xor
cli
sbb
ins
imul
es
mov
push
xor
mov
ins
addr16
xchg
adc
mov
mov
cli
xor
sahf
int
xor
scas
dec
cmp
cmp
pop
mov
ficom
imul
and
jo
mov
lea
das
pop
jnp
cmps
xchg
sbb
add
sub
cmp
ror
pop
pop
test
pop
test
xor
sub
sbb
into
mov
xor
push
and
outs
(bad)
jno
js
test
mov
or
or
shl
sbb
pop
dec
xlat
mov
out
icebp
and
je
push
sub
sub
int3
push
xchg
fdiv
pcmpgtw
ins
jae
dec
mov
cmp
pop
pop
sbb
add
repz
mov
add
clc
aad
adc
jo
shl
or
lahf
xor
jmp
mov
aaa
mov
or
int
pop
cmc
mov
mov
cmps
pop
mov
test
jmp
xchg
loope
jecxz
xchg
mov
sub
push
std
scas
(bad)
sti
dec
ss
sub
lods
xchg
inc
cmp
stos
ja
stos
iret
or
pop
arpl
popf
mov
ret
scas
sub
popa
fsubp
clc
mov
adc
sbb
inc
mov
inc
dec
movs
fstp
push
or
outs
push
lods
inc
sahf
cli
pushf
jo
movs
and
loopne
rol
or
push
addr16
icebp
xor
hlt
out
es
lock
xchg
ins
into
inc
push
jnp
aad
mov
call
loop
sbb
dec
dec
mov
test
fwait
add
pop
mov
jne
jb
jp
sub
fdiv
mov
out
inc
cmps
scas
shl
xchg
mov
mov
pushf
dec
scas
lds
pushf
gs
sub
fild
popa
pop
outs
lods
or
xor
mov
dec
movs
fisub
iret
in
mov
adc
mov
int3
imul
popa
jo
pop
js
push
sub
adc
jae
sub
dec
popf
cli
call
scas
and
gs
jb
adc
dec
xor
mov
push
add
sbb
(bad)
jae
mov
cmp
in
xchg
jnp
scas
std
sub
jns
adc
xchg
das
pop
push
mov
test
pop
and
cmp
ror
loop
idiv
push
outs
sahf
in
jmp
xchg
inc
fisubr
es
test
dec
ret
xor
fndisi(8087
in
shr
addr16
dec
mov
cld
jle
lods
dec
xchg
push
popf
jp
jge
jmp
cmp
hlt
sar
jae
div
cmp
out
and
xchg
sub
call
jo
add
in
cmp
inc
jbe
push
das
sub
sub
loope
adc
mov
arpl
pusha
push
in
mov
adc
adc
fs
mov
lds
or
fiadd
mul
out
imul
xchg
cmp
ss
sub
jmp
lock
dec
cli
stc
leave
xor
push
cmp
fisttp
sub
cmps
mov
daa
xchg
xor
xchg
and
call
sub
inc
push
cwde
mov
std
call
sub
lock
imul
sub
push
cld
jecxz
inc
shl
adc
dec
cmps
mov
lods
fyl2xp1
cmp
cwde
mov
jo
jno
xor
adc
and
mov
push
iret
in
ret
sbb
pop
xchg
movs
xchg
in
loop
xchg
mov
gs
push
push
mov
int3
test
ffreep
sbb
sub
mov
(bad)
adc
jecxz
inc
mov
scas
cdq
xchg
push
mov
adc
dec
outs
jo
push
mov
out
inc
cmps
popf
mov
xor
sub
repz
and
sub
inc
xor
sbb
jbe
popa
mov
xor
out
mov
adc
ret
pop
xchg
sub
ja
shl
idiv
jno
sbb
xchg
inc
xor
rol
mov
repz
jmp
in
sub
jl
lock
lods
lods
leave
scas
js
retf
mov
out
retf
jo
jne
mov
xchg
int
fst
dec
iret
inc
xor
scas
push
out
mov
stos
cld
mov
outs
add
jnp
loope
mov
repz
mov
std
shr
rcr
pop
int
push
add
(bad)
mov
sbb
mov
fwait
iret
cmp
movs
mov
jmp
call
mov
loope
aam
push
xchg
adc
sbb
shr
fistp
and
movs
es
fwait
mov
in
daa
jb
mov
movs
in
js
sti
ins
iret
mov
pushf
inc
loope
mov
iret
ror
rcr
add
popf
mov
retf
imul
outs
cmp
lock
and
cmp
add
push
icebp
js
loope
icebp
jge
mov
xor
dec
ja
mov
shl
(bad)
gs
dec
retf
adc
icebp
add
jno
lods
shr
add
outs
scas
aam
xlat
movs
loope
int
jb
pop
push
jne
jne
stos
sbb
pushf
fucomp
cwde
and
out
mov
inc
aaa
xor
mov
test
pop
pusha
sbb
lds
push
movs
(bad)
nop
daa
pop
ins
sub
mov
inc
fiadd
sbb
cdq
andnps
push
sbb
(bad)
sub
test
jnp
iret
mov
fdiv
psllq
mov
test
movs
lahf
dec
push
ins
inc
or
loop
rcr
(bad)
clc
fisub
(bad)
sub
stc
fcomp
daa
dec
es
mov
mov
pop
neg
dec
cmc
jp
and
cld
ret
cmp
mov
dec
or
(bad)
movs
add
cld
int3
xchg
fldenv
fist
cmp
cdq
loop
mov
jae
push
mov
or
push
test
rol
std
jg
aam
stc
data16
mov
jno
jp
inc
and
pop
jmp
inc
sub
in
dec
pop
(bad)
mov
mov
inc
jecxz
ficom
aas
aaa
cmp
mov
pop
mov
xchg
lock
adc
out
addr16
cmps
and
clc
push
cmps
jb
inc
inc
push
dec
test
sub
pushf
ins
and
sub
fiadd
adc
xchg
xchg
into
fcmovnbe
pop
dec
mov
call
or
div
xlat
int3
or
dec
pop
mov
adc
pop
or
and
adc
jns
jne
add
vmovapd
retf
sbb
or
adc
inc
and
lods
mov
add
enter
sub
hlt
push
out
int3
retf
pop
jle
das
push
mov
cmp
push
bnd
add
sti
dec
clc
add
or
jb
into
xchg
(bad)
hlt
sub
out
dec
sti
test
mov
dec
xor
mov
mov
push
mov
je
dec
movs
test
mov
mov
adc
jle
xchg
xor
jae
pop
gs
mov
xor
adc
(bad)
dec
mov
and
sub
jp
enter
sbb
mov
and
(bad)
jbe
xor
ds
jmp
add
inc
add
or
mov
adc
or
push
xor
sahf
(bad)
cmc
fucomp
add
mov
inc
popf
and
push
test
dec
jns
and
fmul
add
(bad)
(bad)
call
jmp
jl
xchg
add
into
cmp
adc
mov
jne
mov
lods
jg
sbb
mov
shr
das
pushf
and
inc
and
mov
mov
cs
jp
mov
gs
lock
inc
inc
loopne
mov
lods
sbb
inc
jmp
cmc
pop
data16
cmp
hlt
sbb
ret
xchg
loop
inc
ss
fadd
jno
pop
pop
mov
adc
sub
sbb
push
jp
lods
out
mov
test
sub
add
ss
data16
inc
or
je
jle
fistp
mov
mov
dec
fisub
scas
jecxz
xchg
pop
xor
div
sub
scas
in
test
(bad)
sub
cld
xchg
scas
pop
repz
sub
call
sbb
adc
cmp
inc
into
and
ror
mov
and
clc
scas
seta
sbb
mov
and
add
fst
ja
push
ret
jecxz
mov
mov
mov
inc
sahf
fild
aaa
adc
addr16
cmp
pop
push
mov
cmps
jge
add
push
adc
push
sub
jne
push
xchg
outs
in
test
or
or
or
pop
hlt
adc
mov
shl
add
inc
adc
lods
enter
sbb
in
mov
add
pop
loop
push
inc
mov
jae
gs
pop
mov
ss
xor
or
xor
retf
cld
nop
jne
dec
daa
xchg
stc
stc
pushf
stc
xchg
adc
adc
retf
sub
dec
add
push
es
je
cmp
push
dec
popf
add
clc
jbe
add
xor
iret
stos
leave
cdq
inc
js
jle
(bad)
inc
xlat
sub
fst
push
pop
jp
stc
mov
sbb
cdq
lock
(bad)
sti
cmps
bound
adc
loopne
and
push
add
int3
pop
push
and
fisub
add
je
jnp
pushf
add
dec
out
lods
es
addr16
pusha
lock
sbb
cdq
in
dec
jmp
imul
in
inc
retf
and
mov
not
xchg
xor
cmc
mov
and
cli
mov
arpl
adc
xor
fwait
cld
jmp
fild
daa
xchg
jp
gs
out
jbe
or
arpl
xor
cmps
adc
test
aaa
fdivr
aaa
arpl
cmp
mov
test
out
cs
imul
inc
sbb
push
gs
ret
jecxz
sub
add
jle
rol
inc
jae
dec
jge
dec
lock
in
sbb
rdpmc
lods
xchg
inc
adc
mov
test
imul
xchg
test
sub
jb
call
sti
or
mov
add
sbb
cmps
mov
loope
inc
jnp
sub
lea
cmps
mov
pop
scas
data16
sub
mov
inc
jnp
cmc
iret
push
mov
xor
es
mov
mov
push
cmps
jae
mov
aas
mov
pop
ds
idiv
jmp
imul
add
in
push
loopne
cs
into
daa
sub
ret
mov
test
add
and
fimul
xchg
pop
mov
cmps
bound
ins
fcomp
add
or
jns
mov
jge
and
adc
jl
sub
mov
inc
jne
ss
mov
xor
pop
push
add
out
int3
int
mov
push
adc
lahf
es
dec
push
adc
sbb
pusha
xlat
push
mov
lods
mov
inc
dec
pop
je
ds
mov
mul
and
popa
into
adc
test
inc
dec
jg
mov
outs
lods
rol
jg
outs
push
mov
cmp
and
ret
cwde
inc
or
test
jp
sub
fist
push
clc
pop
xchg
sbb
add
xor
sub
push
jno
cmps
dec
cli
xor
stc
arpl
add
jl
add
stos
push
pop
mov
retf
ret
out
ins
adc
xchg
clc
call
add
rcr
inc
inc
mov
sar
push
leave
mov
(bad)
lea
mov
ret
xchg
arpl
dec
jnp
(bad)
add
or
mov
cwde
add
push
and
pop
dec
push
and
das
jns
cmp
cli
ficomp
push
sahf
mov
jo
add
sub
add
sbb
mov
daa
aas
jnp
outs
mov
push
dec
inc
stc
cmp
pop
or
fwait
outs
mov
int3
mov
cmps
les
push
js
pop
div
je
int
out
bnd
jmp
xchg
rol
clc
lahf
jo
sub
pusha
sub
fldenv
int3
loope
xchg
bound
div
adc
(bad)
push
fild
pop
mov
adc
cli
jno
sub
ins
fnstcw
movs
push
gs
inc
dec
sbb
jmp
xchg
scas
test
into
jmp
pop
push
adc
jmp
lods
cmp
xchg
mov
repz
mov
push
jb
sbb
mov
cmc
fidiv
jb
mov
pop
sbb
push
adc
inc
jnp
ret
call
mov
cmc
mov
xor
mov
xchg
dec
imul
(bad)
jnp
push
imul
cmps
js
ins
xchg
pop
or
xor
fstp
lea
ins
inc
pop
push
(bad)
sub
push
push
xor
sbb
das
movs
icebp
popa
sub
mov
loope
push
sbb
add
loope
out
mov
xlat
ins
add
add
call
sahf
pop
mov
xor
(bad)
das
xchg
or
retf
mov
push
jmp
arpl
(bad)
fldcw
mov
imul
pop
jp
rol
cmp
mov
pop
xor
mov
mov
jge
push
ja
mov
fist
mov
lahf
neg
push
or
adc
mov
xchg
gs
xor
neg
sbb
(bad)
fldenv
cwde
dec
loope
ja
lods
pop
fiadd
loop
cmp
aam
jmp
ins
pop
cmp
out
cmc
adc
(bad)
outs
jns
add
pop
mov
int3
je
xchg
or
push
jl
outs
addr16
push
push
mov
or
sub
ins
dec
and
inc
mov
sub
shl
mov
sbb
mov
pop
sbb
sub
cwde
or
or
xor
shl
adc
ficomp
add
retf
ret
ret
(bad)
enter
out
test
dec
dec
pop
cmp
or
iret
dec
cmc
mov
jg
aam
pop
int
push
cmp
and
jo
mov
push
ficomp
inc
int3
fidiv
clc
dec
lahf
pop
cli
js
mov
rol
push
sbb
xchg
dec
aas
in
and
lods
gs
retf
les
xchg
adc
fadd
jge
fisttp
test
xor
cmps
xchg
xor
sar
jmp
inc
into
jle
or
mov
ds
jge
jle
fisubr
loop
popa
js
inc
xor
pushf
arpl
sub
sbb
dec
retf
pop
pop
or
mov
and
das
jge
xlat
push
sti
mov
push
or
das
mov
cmc
sbb
mov
push
add
imul
and
inc
mov
fstp
pusha
and
mov
adc
(bad)
in
hlt
retf
icebp
ss
shr
jb
adc
lahf
pop
psubusw
stos
or
jmp
push
test
(bad)
movs
loop
adc
movs
add
sub
scas
jns
push
xor
xchg
loopne
xchg
loopne
cmp
repnz
and
fdiv
jecxz
out
lock
pop
mov
mov
jo
xor
gs
inc
cwde
pusha
aad
rcl
push
daa
dec
rol
mov
sbb
leave
adc
dec
dec
adc
xor
sbb
dec
jns
repz
jae
jg
mov
jmp
jmp
rcr
mov
dec
adc
in
jmp
ds
or
(bad)
xor
mov
(bad)
sbb
xor
loope
fnsave
outs
aaa
and
adc
outs
fidiv
and
or
dec
sub
and
in
cmp
movs
je
jle
fs
add
push
sti
mov
(bad)
imul
pop
(bad)
jg
cld
add
loope
imul
dec
jecxz
adc
loop
mov
cwde
pop
mov
add
dec
dec
outs
test
dec
mov
or
jbe
xor
fnstsw
push
push
popa
stos
data16
(bad)
cmp
cld
or
inc
push
test
pop
jmp
std
and
inc
fwait
or
ror
add
fwait
std
jecxz
arpl
out
inc
ins
repz
test
imul
mov
popa
das
test
adc
aad
les
movs
or
leave
mov
ret
dec
pushf
fwait
cld
and
inc
iret
sub
stos
pop
in
scas
pop
inc
aad
fmul
push
and
bound
aaa
sar
and
popf
aam
xchg
out
cwde
loop
mov
pop
fs
xor
jl
lods
pop
inc
xchg
loope
pop
imul
in
cs
sub
int3
out
cld
in
add
repnz
sbb
cmp
jl
adc
fsub
bound
arpl
inc
cmp
mov
xchg
xor
inc
popa
repnz
sbb
mov
add
xor
lods
lahf
and
jge
iret
mov
(bad)
push
xor
xor
jg
inc
xor
push
loope
push
outs
stos
or
pop
dec
mov
leave
cmovae
pushf
aas
dec
inc
mov
add
repnz
add
popa
and
dec
adc
inc
js
int
push
neg
inc
mov
mov
or
fs
dec
cmp
repnz
mov
xchg
xor
pop
cmp
fs
out
iret
imul
xchg
enter
ins
pop
fst
adc
repnz
or
into
cmp
adc
loopne
inc
jecxz
test
out
ss
repz
stos
out
xor
inc
fisubr
test
out
mov
(bad)
fimul
inc
ins
mov
pop
outs
lahf
jnp
hlt
or
sbb
lods
mov
outs
test
rol
in
movs
in
jp
push
bound
or
pop
fnstsw
and
adc
dec
das
cmp
cs
call
out
inc
jmp
xchg
xchg
adc
sbb
mov
mov
adc
and
daa
and
inc
out
cmp
jmp
mov
cmp
clc
std
sub
jb
adc
fdivp
jg
jo
imul
push
in
icebp
xor
out
cwde
sar
les
sbb
(bad)
and
loope
mov
out
stos
call
jle
jae
push
and
fcmovnbe
push
jecxz
repz
mov
les
popf
fsub
xchg
ja
push
in
shr
scas
cmp
mov
xor
lahf
xchg
sub
mov
or
out
jmp
xchg
hlt
fstp
mov
movs
arpl
jbe
jns
cmps
add
cmp
sbb
sub
mov
pop
sub
pop
add
mov
jmp
jp
mov
cmps
mov
aam
cli
add
sub
pop
mov
xchg
mov
xor
and
test
adc
jnp
ins
jmp
stos
add
pop
mov
mov
pop
jnp
xor
cmp
pop
pop
mov
inc
mov
adc
jp
mov
mov
push
mov
mov
mov
stos
or
(bad)
sbb
dec
rcl
mov
out
in
mov
enter
fist
aam
out
cli
(bad)
call
aas
xchg
push
mov
cmp
adc
cdq
cmc
(bad)
nop
mov
and
mul
outs
cwde
push
fiadd
in
sar
push
ss
test
into
leave
inc
sub
pop
pop
movs
pop
pop
xchg
push
ficomp
pushf
xor
adc
push
call
xchg
outs
or
rcl
fld
jmp
int
mov
mov
jge
pop
bound
mov
sbb
aaa
(bad)
pop
sahf
bound
pop
add
jmp
hlt
aas
stc
mov
cmp
jmp
mov
sub
add
push
pop
cdq
jmp
cmp
rol
pop
inc
(bad)
xchg
xchg
xchg
iret
adc
xor
repz
mov
sbb
(bad)
mov
and
mov
call
inc
call
(bad)
jno
jmp
ja
movs
mov
(bad)
add
inc
add
dec
repz
jae
jecxz
xor
test
iret
push
cmps
adc
nop
cmp
test
fdivr
sub
mov
sub
fild
movs
jns
mov
mov
push
xor
in
into
ins
movs
ret
adc
dec
leave
movs
add
fld
(bad)
or
sub
jns
add
add
xor
xchg
rol
imul
scas
fisttp
and
(bad)
xchg
inc
jb
and
fistp
push
push
pop
out
jno
xor
inc
rcr
xchg
aas
inc
xor
icebp
stc
scas
iret
pop
ficom
sti
xchg
cmp
lahf
pop
movs
sbb
jp
mov
dec
fdiv
sbb
mov
mov
jmp
lock
and
sub
bound
pop
dec
and
inc
xchg
fldl2t
sub
push
pop
mov
pop
cmp
sub
(bad)
mov
es
push
xor
cmp
mov
in
jmp
inc
test
pextrw
mov
out
add
dec
imul
shr
jp
or
(bad)
fidiv
popf
js
int
jmp
jo
jno
dec
xlat
xchg
adc
movs
int
mov
fwait
xchg
or
sbb
cwde
xor
push
cmp
enter
mov
lods
cld
out
push
enter
push
retf
out
lock
mov
sub
and
jbe
jbe
cdq
inc
adc
sahf
mov
sub
adc
adc
ins
adc
jno
stos
popa
mov
pusha
xor
ficomp
arpl
mov
inc
mov
mov
xor
add
nop
xor
mov
aas
mov
and
(bad)
arpl
jge
imul
popa
addr16
inc
pop
mov
imul
jmp
mov
dec
and
iret
stc
jns
(bad)
push
push
mov
in
jecxz
cmps
mov
inc
mov
push
daa
xchg
pop
fbld
inc
sub
push
push
lods
fwait
cmp
xor
push
add
add
mov
xor
or
push
retf
pop
into
sub
add
mov
inc
pop
cmps
ret
(bad)
lods
call
sbb
imul
fwait
sbb
ror
xchg
cld
or
rol
add
push
movs
mov
or
xchg
sbb
dec
cwde
shl
clc
outs
hlt
mov
fisubr
fbstp
iret
into
inc
jp
sbb
jno
or
sbb
xor
inc
pop
push
xchg
cmps
test
xchg
sti
jno
es
mov
psubusb
aam
outs
sub
rol
rcr
and
hlt
and
call
and
mov
sbb
add
aaa
(bad)
imul
pop
mov
cmps
xchg
(bad)
xor
push
mov
dec
enter
leave
jmp
mov
xchg
push
ins
fidiv
mov
call
ret
pop
pop
pop
jno
scas
pop
and
xor
test
rol
fisubr
mov
mov
js
mov
mov
push
and
in
or
mov
xlat
fsubr
leave
int3
and
popf
lock
add
mov
cmps
mov
pop
inc
int3
shl
ror
stos
(bad)
movs
(bad)
out
fnstsw
and
inc
inc
retf
and
mov
leave
arpl
sbb
ret
xchg
aas
aam
es
cmp
sbb
loop
pusha
in
pushf
sahf
in
dec
jnp
fst
cmp
fidivr
out
mov
jle
sub
sbb
cmp
(bad)
sub
push
movs
or
jns
xor
mov
mov
test
sbb
in
inc
ret
gs
imul
or
dec
jo
sub
push
popa
data16
cwde
add
in
xor
push
imul
sbb
cdq
sbb
rcl
cwde
(bad)
or
push
in
jg
mov
cmp
rcl
inc
icebp
aam
outs
push
add
mul
mov
mov
or
inc
xor
aaa
(bad)
aad
loop
repz
and
push
(bad)
dec
mov
or
push
xchg
dec
addr16
cmp
ins
popf
mov
enter
dec
add
loope
(bad)
mov
cli
jb
mov
popa
cs
call
inc
leave
iret
cmp
jl
icebp
sahf
and
xor
gs
or
and
pop
add
inc
xrelease
or
into
test
push
pop
cmps
rcl
lods
loop
add
pop
aad
jmp
in
test
outs
(bad)
jae
cmps
push
adc
outs
pop
push
sub
sub
sbb
outs
xchg
sub
fs
int
test
aam
dec
pop
je
sahf
jge
jno
and
clc
gs
es
cmp
out
and
dec
push
sbb
jns
aad
(bad)
into
shr
inc
fadd
mov
push
les
jmp
cmp
adc
inc
sub
aaa
xchg
xchg
mov
test
shr
out
repz
lock
jb
sbb
and
iret
(bad)
add
inc
jmp
jl
ss
retf
inc
xchg
(bad)
sbb
fidiv
inc
imul
mov
dec
ret
cwde
cs
sbb
adc
cmp
add
inc
aaa
cmp
dec
mov
out
and
mov
nop
sbb
jns
cmp
sub
fs
jl
and
js
leave
dec
cmps
jecxz
ins
dec
push
daa
mov
jp
jmp
xor
ss
xchg
mov
push
(bad)
into
add
inc
jle
in
mov
out
call
xchg
fs
sbb
shr
xor
mov
hlt
push
xchg
push
addr16
inc
mov
frstor
jnp
(bad)
dec
mov
mov
sub
mov
cmp
cmp
(bad)
mov
inc
cwde
shl
stos
inc
add
push
in
iret
and
enter
outs
imul
shl
xchg
in
push
icebp
fdiv
pop
gs
xchg
pop
xchg
arpl
(bad)
test
sub
jne
adc
adc
nop
std
mov
out
jb
sub
cmps
mov
sub
stos
add
push
jle
cwde
sahf
push
int3
out
jmp
jno
push
repnz
xor
push
dec
test
sbb
shl
push
movs
stos
into
cmp
fs
hlt
pop
sbb
adc
jnp
add
popa
add
jbe
push
cmp
mov
enter
sub
mov
retf
push
jmp
mov
pushf
xchg
mov
mov
mov
and
repnz
cwde
pop
xor
xor
lock
mov
or
mov
inc
sbb
jb
adc
inc
xor
cmp
shl
fwait
dec
leave
rcl
or
repnz
pop
dec
sub
imul
add
mov
push
jbe
test
fistp
jo
dec
fbld
sbb
std
jl
xlat
add
sbb
pop
jno
in
sub
push
test
call
mov
setle
inc
xchg
(bad)
lods
fisttp
fidiv
test
in
jl
adc
mov
mov
adc
xchg
or
add
xor
loopne
sar
pop
ins
xchg
mov
cmc
cmps
dec
inc
mov
sub
gs
mov
or
jo
mov
outs
fcmovnbe
mov
mov
sti
shl
scas
movs
inc
fist
scas
aas
pop
mov
std
xor
enter
sub
pop
lea
sub
dec
test
push
xor
repnz
inc
dec
jo
adc
shr
inc
aas
mov
add
fcomp
mov
push
test
push
mov
sar
scas
popa
or
out
les
loope
jo
aas
mov
mov
das
stos
iret
push
shr
bound
in
cmp
inc
lea
nop
les
movs
or
xchg
adc
and
mov
mov
mov
jmp
dec
add
call
jp
ficomp
or
and
arpl
idiv
das
in
enter
push
loopne
cmp
sti
push
push
jae
jg
mov
push
aas
icebp
(bad)
mov
dec
xchg
cmp
mov
cli
shl
mov
ror
int
sar
cwde
xchg
movs
sbb
jne
sbb
adc
jecxz
lea
imul
xor
mov
sbb
or
ja
mov
and
ficomp
mov
call
imul
jmp
sbb
xor
test
les
(bad)
loope
stos
push
add
out
add
outs
mov
mov
loop
sbb
cmc
neg
cmp
fcomp
not
push
inc
mov
sbb
mov
shl
imul
es
push
xor
cdq
imul
es
nop
jl
(bad)
std
sbb
nop
and
push
push
sbb
ret
leave
imul
mov
(bad)
push
push
jb
mov
adc
pop
dec
dec
stc
cmps
jecxz
pop
mov
jo
inc
push
sbb
sub
mov
dec
cmp
mov
not
js
jg
inc
fwait
cmp
popa
jns
pop
xchg
popf
add
dec
aaa
jecxz
sub
sub
sbb
out
jmp
int3
or
or
iret
pop
adc
and
repz
push
popf
add
scas
pop
popa
add
push
xchg
mov
xchg
fdiv
mov
inc
lock
hlt
in
pop
jg
dec
mov
loope
lock
sahf
xlat
jp
or
jmp
test
(bad)
pop
pop
mov
mov
sti
in
sahf
adc
and
push
adc
and
(bad)
jmp
icebp
jne
sbb
out
nop
sbb
js
cmc
stos
mov
jmp
js
push
movs
dec
mov
lock
jb
mov
push
jp
out
push
sub
mov
jecxz
push
push
shl
aam
pop
sbb
into
sar
pop
mov
inc
call
sbb
cdq
fprem1
dec
hlt
cwde
cmp
retf
mov
fs
cdq
repz
and
enter
pop
mov
adc
jecxz
push
daa
and
jmp
inc
mov
jne
leave
adc
in
test
fs
sub
aam
or
xor
retf
movs
pop
push
jbe
cmc
push
adc
mov
(bad)
ror
int3
mov
xor
add
movs
test
and
xor
xlat
push
loopne
add
in
in
sub
out
jg
xchg
out
fimul
sbb
in
cmp
mov
jg
stos
cld
ja
shl
jp
pop
rol
ret
sbb
retf
mov
aad
pop
sub
test
add
fsub
retf
mov
stos
xchg
dec
mov
inc
add
mov
jmp
push
test
rol
xchg
inc
or
movhps
ins
adc
outs
pop
and
ret
dec
inc
lock
out
ja
pop
lock
mov
addr16
sbb
out
mov
inc
std
mov
popf
inc
mov
mov
int3
inc
cli
iret
cmp
rcr
sbb
stos
jo
cmp
loopne
out
ins
mov
push
mul
jns
fwait
push
xchg
adc
push
in
dec
test
pop
jbe
call
ror
add
add
shl
sub
mov
movs
adc
jns
enter
jmp
xchg
dec
ins
pop
adc
inc
inc
xor
adc
gs
push
adc
jmp
push
mov
or
jne
or
and
add
sahf
pop
push
adc
pop
lock
in
xchg
and
fadd
cmp
fiadd
xor
lods
cdq
(bad)
int
mov
mov
pop
leave
ss
ja
repz
aaa
add
sub
aam
loop
jle
pop
pop
in
add
je
enter
inc
popf
jg
xor
fdiv
pop
inc
nop
inc
inc
repz
punpckhbw
loop
dec
call
jnp
xchg
dec
(bad)
pop
aaa
cmc
push
dec
mov
xor
nop
pop
imul
ffreep
adc
pop
(bad)
(bad)
repnz
and
(bad)
xchg
aas
pop
inc
push
fild
fistp
mov
pushf
push
xchg
lea
push
lods
sahf
in
inc
add
jmp
js
lea
in
jbe
outs
lock
jno
cmps
leave
loope
and
mov
das
les
lds
pop
xchg
sub
push
jle
addr16
in
jecxz
sub
mov
pop
shl
bound
repz
out
test
shl
(bad)
adc
test
mov
dec
lahf
add
inc
push
adc
xchg
and
daa
inc
cmp
cmp
and
test
repnz
repz
sbb
xor
pop
mov
jp
push
or
push
jge
stc
inc
bound
out
out
pushf
xchg
fbld
mov
(bad)
fistp
ja
mov
mov
sar
mov
enter
mov
dec
sbb
or
and
adc
sub
sub
ret
push
add
cmc
inc
dec
push
test
inc
xchg
mov
pop
cmc
mov
jbe
shl
adc
(bad)
adc
fs
into
jmp
xchg
aad
or
add
inc
fisubr
pinsrw
mov
pop
loopne
das
mov
xor
dec
int
push
jge
psrld
sub
test
xor
std
ret
push
sbb
mov
cs
mov
jecxz
adc
mov
out
mov
mov
(bad)
ror
push
xchg
push
stos
mov
xchg
adc
arpl
repz
in
pop
add
xor
mov
push
int
or
xlat
sub
dec
xchg
test
sub
lods
cmp
fisttp
ret
pop
inc
push
nop
sbb
mov
pop
jmp
repz
xchg
add
movs
ror
xor
xlat
aam
call
inc
nop
mov
daa
fcomp
mov
loopne
stos
jl
pop
cmp
les
and
out
repnz
stos
fnstcw
jnp
(bad)
jmp
xor
movs
mov
shr
leave
push
or
xor
xlat
inc
ins
adc
add
hlt
adc
xchg
mov
sbb
stos
test
pusha
js
pop
stos
push
jae
in
mov
jp
ss
bound
into
(bad)
push
dec
or
push
mov
loop
or
mov
inc
cmp
xchg
or
shr
je
aam
jmp
add
inc
lods
aas
lods
scas
cdq
imul
pop
or
fstp
adc
or
pop
xor
cmps
mov
jnp
add
or
sbb
(bad)
imul
cmp
cld
lods
popa
adc
lea
add
aad
or
lods
cmp
out
xor
int
fcmovnbe
call
rcr
cld
xor
test
mov
jl
lahf
out
stc
mov
hlt
sub
jecxz
xor
lods
inc
mov
adc
cmp
push
adc
loope
push
mov
loop
pop
fsubr
iret
clc
sbb
jo
test
shl
ds
mov
clc
mov
xchg
dec
call
inc
rcr
or
inc
iret
or
mov
push
add
sub
mov
jge
(bad)
enter
jb
pusha
adc
mov
sub
fcomp
outs
inc
mov
repz
movsx
inc
push
call
or
pop
and
int
ret
xchg
mov
dec
inc
sbb
shl
sti
scas
push
cmp
nop
(bad)
adc
lds
pop
out
leave
xor
dec
neg
mov
adc
push
add
mov
cmp
push
cdq
mov
mov
fdiv
out
fsubrp
jl
bndstx
cmp
add
imul
rcl
out
sbb
jp
add
sbb
cmp
sbb
(bad)
pop
push
sar
xchg
inc
mov
push
cwde
sub
sub
sub
jo
int3
push
add
ret
clc
aaa
stos
into
mov
or
jae
cmp
xchg
lds
add
mov
xor
push
in
sti
cs
cmp
je
daa
scas
mov
(bad)
pop
ss
mov
out
pop
jo
or
sti
jg
fisubr
call
xchg
xor
xor
cmps
push
push
sbb
push
lock
pop
test
inc
in
fdiv
pushf
dec
lock
repnz
hlt
cmps
mov
aas
sbb
pop
push
dec
nop
inc
(bad)
jae
adc
sahf
cmp
push
cmp
movs
mov
lods
sti
icebp
mov
ret
lock
loope
pop
stc
inc
jle
xlat
adc
adc
jmp
jmp
rcr
imul
ss
xor
cli
cli
(bad)
pop
pop
call
pop
jp
pop
inc
call
push
mov
xor
push
xchg
mov
and
dec
push
xor
sub
mov
mov
mov
push
jle
adc
mov
call
cmp
test
cld
test
ins
loopne
jmp
in
push
mov
sbb
popf
xor
jg
sbb
sbb
retf
mov
pop
dec
dec
xor
xor
inc
mov
add
add
aaa
cmp
mov
arpl
xchg
sub
adc
sbb
xor
popa
jns
lock
mov
or
neg
movs
mov
jno
cwde
into
cmp
pop
dec
push
cmp
xlat
mov
mov
sub
jp
sub
ror
nop
inc
inc
inc
jae
pop
pop
es
lahf
cdq
aaa
mov
push
mov
dec
jp
ret
jp
ins
icebp
pop
mov
and
(bad)
std
push
ret
fnstsw
fcomp
inc
sub
push
aad
inc
jo
cli
xchg
mov
cld
jmp
enter
std
mov
cli
cli
int3
inc
push
push
addr16
mov
push
pushf
les
inc
ja
push
sbb
push
dec
sbb
retf
sbb
sub
push
mov
loopne
in
sti
mov
pop
ficomp
fwait
daa
shl
mov
iret
adc
int3
or
les
in
xchg
xchg
push
outs
loopne
jg
xchg
mov
sub
hlt
adc
dec
fsubr
or
in
cmp
dec
(bad)
cli
jb
add
adc
mov
and
mov
pushw
xor
data16
cmp
pop
mov
ja
cmp
std
inc
and
push
pop
ror
fs
mov
pusha
mov
cdq
out
mov
data16
rep
xchg
mov
push
cmp
and
inc
(bad)
pop
fistp
adc
sar
icebp
test
fwait
cmps
not
icebp
add
jne
adc
jecxz
gs
cmp
push
mov
cmp
call
inc
push
cmp
and
pop
push
sbb
push
icebp
js
mov
dec
in
sbb
imul
cli
jb
in
mov
mov
sub
fdivr
dec
arpl
pop
dec
mov
fld
mov
inc
out
mov
es
xor
adc
add
cwde
lahf
cmp
push
imul
stc
shr
adc
pop
lock
sbb
cmp
je
pop
outs
test
jp
or
(bad)
jae
movs
dec
sbb
sbb
je
(bad)
sub
into
xchg
retf
xchg
xchg
mov
imul
push
lods
pop
mov
les
cs
jmp
cli
mov
shr
push
pop
pop
xor
sbb
xor
push
inc
push
push
(bad)
mov
pop
cmc
mov
popa
test
mov
fidivr
ins
mov
adc
sbb
popf
cli
fadd
or
int
adc
pop
fmul
jge
out
idiv
test
in
lahf
cld
inc
and
movs
arpl
sub
fidivr
jle
adc
add
xor
add
mov
mov
shl
ins
fisub
inc
hlt
popa
cmp
and
mov
aad
scas
jo
ss
mov
ret
xor
xchg
dec
fs
jmp
das
stos
mov
cmps
pop
mov
das
or
xchg
push
dec
gs
cmps
adc
aad
test
and
jnp
pop
mul
jge
inc
pop
xor
scas
leave
test
inc
cmps
add
data16
xchg
and
xchg
xchg
sub
xchg
pop
stc
out
xchg
or
xor
loop
popf
frstor
or
pop
mov
out
dec
push
xchg
inc
cs
leave
mov
cmp
dec
dec
movs
fsub
adc
fidiv
sbb
(bad)
fcom
and
pop
ret
popf
xchg
sbb
push
cwde
mov
sbb
stos
jge
dec
inc
xchg
das
in
push
sahf
pop
jns
and
dec
adc
jge
pop
mov
das
call
mov
rcr
pop
and
call
push
adc
pushf
inc
in
push
or
mov
fsubr
les
inc
sbb
gs
xor
mov
nop
add
pop
out
test
jae
pop
or
mov
pusha
into
xchg
jge
inc
xchg
xor
or
out
and
sub
aaa
add
ret
dec
mov
add
out
mov
jmp
xor
push
jo
sti
sub
mov
ins
cmp
jle
inc
aaa
pop
(bad)
xor
test
pop
mov
sti
sti
test
cld
mov
jne
push
cmc
pop
mov
je
fisubr
cmp
icebp
cmps
inc
add
rcl
mov
jp
out
inc
lds
and
call
sub
mov
jge
cmps
and
retf
add
out
xor
test
int
mov
pop
stc
clc
add
out
mov
cmp
in
and
push
mov
or
adc
pusha
das
ret
fild
arpl
(bad)
(bad)
in
dec
jbe
mov
jl
scas
dec
stc
ror
jl
in
out
push
xor
cdq
push
inc
push
ret
nop
je
fnstenv
dec
mov
mov
cmps
vmulpd
mov
aam
imul
cwde
cmps
retf
std
lods
jg
cmp
out
inc
js
inc
hlt
aad
jge
movs
call
test
add
xor
pushf
aam
jle
sub
test
pop
dec
jb
setl
inc
cmp
or
mul
dec
dec
push
or
sub
jns
shl
iret
scas
or
inc
aas
iret
mul
jle
ror
stos
addr16
loopne
out
aaa
pop
imul
push
leave
inc
xchg
add
cdq
inc
fldcw
jg
mov
les
(bad)
jmp
hlt
call
jbe
jnp
sub
xor
xchg
pusha
add
mov
lods
jge
mov
jbe
je
loopne
pop
test
loope
pop
popa
adc
mov
mov
div
sub
loope
sbb
into
les
jns
pushf
pusha
fcomi
das
pop
mov
cmps
ret
and
fs
gs
ins
pop
repnz
inc
je
fisttp
mov
inc
inc
lods
int3
cs
sub
pop
jne
mov
ins
cmp
les
lods
mov
push
cmp
pop
add
push
dec
outs
inc
loop
cmp
xchg
(bad)
repz
int3
dec
inc
mov
popf
pop
xchg
or
pop
rcr
daa
inc
cmps
fdiv
and
add
enter
dec
or
leave
leave
dec
fsub
in
movs
adc
push
cld
and
arpl
cmp
jns
es
fs
mov
scas
adc
outs
xor
cmp
sub
fwait
mov
jae
sti
sbb
(bad)
lods
pop
mov
mov
xchg
dec
out
outs
sar
cdq
mov
retf
dec
retf
sahf
dec
div
(bad)
push
leave
fstp
cmp
xor
pop
dec
ror
bound
(bad)
mov
addr16
mov
push
dec
mov
sbb
mov
or
jg
dec
mov
fs
fs
ret
xchg
lds
int
sbb
retf
movs
or
xor
js
movs
out
push
(bad)
push
inc
xor
(bad)
adc
pop
sbb
add
lods
dec
(bad)
(bad)
enter
push
stos
mov
pop
sub
inc
call
sbb
or
sub
xchg
push
and
jle
pusha
xor
and
lock
jne
loope
out
repz
jecxz
add
cmp
push
pop
sbb
dec
cmp
clc
xor
shr
imul
pop
je
jp
mov
in
xchg
or
xchg
sar
fcomip
jae
mov
icebp
xlat
cwde
push
shl
int
mov
out
mov
clc
mov
pop
inc
dec
sub
test
sub
cmp
xchg
test
fdiv
jae
(bad)
ror
jmp
(bad)
popf
fisub
jno
addr16
mov
push
dec
jge
adc
fidivr
cmp
jmp
sub
leave
push
mov
scas
cli
mov
aaa
sbb
jp
stc
fcmovnb
xchg
xchg
jne
jp
das
pop
fsubr
and
sbb
in
pop
mov
cmp
mov
(bad)
fiadd
mov
fs
jnp
(bad)
jmp
or
(bad)
cmp
fstp
and
pop
(bad)
rcl
fwait
leave
push
push
mov
add
mov
stos
cmc
jl
mov
scas
mov
inc
jge
pusha
and
retf
je
mov
cli
ror
cli
leave
std
not
mov
push
sbb
xchg
js
add
mov
adc
rcl
in
mov
int
cmp
or
xchg
mov
ins
ins
xchg
pop
mov
fucomp
stos
sar
retf
loopne
adc
(bad)
addr16
loop
mov
aaa
fnstsw
test
pusha
jle
pop
pop
iret
fwait
test
scas
ins
xor
cmp
cmc
in
xchg
retf
ret
js
jg
aaa
shl
dec
mov
adc
mov
loopne
sti
aas
cmovae
loope
sub
inc
(bad)
pop
or
xor
pop
mov
in
inc
arpl
pop
mov
sub
gs
in
sub
mov
push
dec
popa
cmp
cmp
ret
add
dec
int
stc
cmp
and
shr
inc
push
jb
nop
push
fild
es
sub
push
test
pop
pop
push
stc
fisubr
mov
pusha
inc
mov
cmp
outs
inc
(bad)
mov
pop
retf
jns
mov
pop
daa
outs
cmps
push
cmps
pusha
dec
xor
int3
inc
in
mov
mov
and
or
mov
imul
cmp
daa
add
sub
pop
shl
into
xor
pop
or
xchg
pop
out
jns
pop
es
cmc
sahf
nop
cmc
cmp
js
call
bound
or
pop
mov
imul
jecxz
push
push
je
xchg
(bad)
sbb
arpl
sub
jno
jb
jno
mov
dec
or
pop
cwde
dec
xor
ja
(bad)
ror
xor
fisttp
ror
fistp
ins
or
retf
push
push
push
jo
jg
jb
pop
aas
xchg
mov
cli
cmps
jg
jmp
mov
cs
ds
and
js
leave
cmp
dec
dec
xor
mov
jg
scas
test
cmp
(bad)
xchg
or
addps
add
movs
outs
add
call
stos
push
push
ror
ffreep
push
inc
in
and
out
int3
jmp
das
in
pushf
shr
ss
add
pop
mov
sub
sahf
mov
push
or
push
das
or
push
jp
lock
jns
dec
mov
ss
and
not
or
jp
cld
xchg
sbb
sbb
rcr
dec
push
jp
dec
je
cmp
add
pop
je
cmc
jl
ucomiss
(bad)
in
push
dec
mov
outs
sub
stos
mov
cs
adc
or
cli
xor
in
pop
cmp
fwait
cmp
or
cmp
test
xor
inc
fbstp
sbb
daa
xchg
mov
inc
add
hlt
pop
sub
inc
nop
inc
xchg
or
aaa
call
fs
pop
push
or
ds
neg
and
jg
xor
ins
pushf
fcom
loope
outs
mov
push
cmp
mov
push
inc
(bad)
mov
cwde
inc
add
cli
cwde
xchg
ret
jb
sub
icebp
fadd
sub
adc
add
out
jge
(bad)
out
fisttp
cmp
mov
fild
inc
jge
inc
dec
aas
fild
imul
adc
pop
leave
adc
sti
mov
mov
movs
sbb
sub
add
mov
push
mov
fisttp
or
pop
enter
pop
(bad)
mov
sub
mov
jne
cmp
adc
(bad)
fisub
repz
scas
ja
int
bound
icebp
(bad)
pop
jmp
adc
adc
push
mov
movs
pop
lods
or
fst
push
and
scas
mov
push
fidiv
mov
aad
ror
shl
fidiv
aam
jmp
bound
pop
cli
fmul
pop
out
es
sbb
lock
das
pop
push
sahf
xchg
cmps
add
pop
inc
sub
sub
push
aad
dec
or
jecxz
pusha
scas
and
dec
adc
sbb
jae
jnp
and
cmp
lods
pushf
cdq
div
adc
xchg
leave
in
ret
scas
xor
mov
ins
(bad)
sbb
add
cmps
fsubrp
xor
int
movs
lea
sub
xlat
mov
and
push
fimul
outs
dec
shl
into
cli
inc
cli
(bad)
dec
mov
ficom
fsub
fcmovne
pop
stos
lds
aad
or
inc
mov
or
cmp
pop
sbb
sbb
daa
pop
iret
lds
xor
pop
shr
cdq
xor
fidivr
jg
add
xor
xchg
js
cmp
xchg
dec
lds
cdq
push
shr
popf
xchg
adc
and
in
rcr
loope
mov
scas
xlat
repz
loopne
xchg
pusha
mov
mov
cld
jno
xchg
aad
xor
jno
fstp
aad
scas
test
push
pop
inc
ss
popa
pop
fs
(bad)
fsubr
repz
das
(bad)
add
call
aas
push
mov
sub
jge
cld
mov
jns
ret
xor
xchg
(bad)
shr
aas
psubb
sub
pop
icebp
push
and
sub
arpl
loop
into
sub
lock
jb
cmps
or
sbb
xor
lods
ss
sbb
mov
push
adc
in
adc
or
fmul
mov
test
int
jbe
mov
js
imul
cmps
in
jno
mov
bnd
int
(bad)
or
dec
mov
int
jge
std
push
lahf
pop
xchg
lahf
rol
or
push
sbb
add
jbe
jbe
jp
ds
mov
movs
aas
jnp
outs
ins
pop
fwait
adc
loope
jge
bound
push
mov
fisttp
test
push
add
in
sub
and
ret
add
sub
or
es
int
lods
cmp
in
fnstsw
js
retf
adc
sub
jle
or
push
js
fadd
cmp
clc
dec
pop
push
lods
stc
ret
(bad)
sbb
cdq
jae
pop
cmp
mov
adc
addr16
popf
adc
ins
inc
shl
js
pop
sub
fdiv
and
retf
loop
mov
test
push
dec
pop
adc
add
arpl
or
mov
ins
call
cmp
mov
sub
push
add
test
shl
(bad)
imul
push
or
bound
jae
cmps
mov
lods
lock
fdivr
fdivr
fld
(bad)
loop
fs
sbb
aaa
or
mov
in
inc
(bad)
test
push
lahf
dec
xchg
(bad)
(bad)
data16
adc
hlt
and
call
xchg
dec
arpl
mov
xchg
repz
ins
lds
iret
cmp
cmp
(bad)
shr
sub
add
dec
data16
sbb
and
xor
dec
and
and
xor
dec
mov
ins
cmc
fs
mov
jle
mov
(bad)
bound
mov
or
ins
mov
imul
xchg
cmp
mov
xchg
and
jmp
add
idiv
rcr
fwait
out
daa
and
nop
mov
popa
adc
test
xchg
inc
aam
jne
sahf
cli
adc
pop
fbld
sti
dec
jae
pop
cmps
(bad)
sti
cld
adc
xlat
jmp
dec
xchg
fwait
cmp
sub
pop
aaa
add
mov
into
lea
into
adc
sbb
xor
push
ins
dec
imul
mov
inc
xlat
dec
inc
sub
cdq
call
dec
lods
push
pop
push
push
or
lock
sbb
add
mov
fidiv
add
div
inc
test
push
push
and
sub
fcomip
dec
xchg
xor
pop
adc
push
mov
shr
dec
add
adc
push
xor
and
dec
pop
push
mov
dec
jmp
lahf
ror
(bad)
arpl
repz
mov
mov
cmps
jecxz
addr16
into
push
(bad)
jmp
les
cli
push
jl
arpl
ja
pop
mov
fsubr
loopne
fidiv
mov
imul
mov
lods
into
retf
jp
jno
sub
scas
lods
or
mov
adc
jmp
and
dec
add
mov
imul
inc
sbb
retf
stc
push
sub
adc
je
adc
pop
dec
pop
inc
xlat
xor
nop
push
retf
movs
and
loopne
mov
ret
or
iret
jnp
mov
fwait
inc
(bad)
outs
jns
or
inc
loope
mov
push
inc
scas
push
icebp
pop
ja
mov
retf
lahf
cmp
les
shl
out
ret
test
lods
adc
mov
push
xchg
xchg
ja
mov
and
adc
neg
dec
jp
mov
in
inc
xor
repnz
jb
fist
loopne
jnp
stos
dec
jmp
loope
or
mov
or
imul
jmp
call
sub
sub
cmp
retf
loop
into
out
adc
jmp
mov
nop
jmp
imul
arpl
retf
push
data16
hlt
sbb
dec
retf
je
jno
inc
push
jo
inc
pop
stc
loop
jnp
aad
movs
pop
push
mov
scas
cs
rcr
mov
pop
and
inc
push
int
inc
mov
jns
mov
adc
mov
fidiv
add
mov
ret
mov
les
ss
fsub
mov
xchg
add
push
inc
inc
loopne
ins
lds
adc
push
aam
dec
mov
or
adc
aaa
or
rcr
addr16
sbb
dec
xor
add
push
inc
pop
outs
push
mov
push
mov
inc
loop
(bad)
aam
cmp
pop
mov
stc
mov
in
fidivr
daa
outs
mov
jne
pop
cdq
pop
fistp
retf
out
lea
and
sub
(bad)
cmp
cmp
mov
mov
repnz
repz
je
aas
or
xchg
ficom
sti
fs
pop
lods
cmp
stos
fisttp
add
or
push
and
xor
pop
loopne
fnstenv
dec
adc
push
xor
loop
push
ret
pop
mov
repz
dec
imul
sbb
dec
sbb
lahf
fiadd
add
inc
jb
loop
xor
outs
xchg
(bad)
movs
(bad)
or
mov
rcl
in
dec
mov
sub
jge
jmp
sub
push
out
push
call
lods
retf
mov
loopne
xor
in
gs
push
rcl
in
sub
loope
in
push
int3
in
mov
sbb
iret
inc
ins
mov
mov
push
cwde
test
sbb
data16
iret
cs
imul
and
sub
jb
mov
xor
in
or
in
xchg
adc
adc
pop
push
and
retf
movs
jno
xor
add
mov
jae
ins
cmp
imul
daa
dec
(bad)
fstp
sub
(bad)
mov
les
mov
in
loope
sub
sbb
jno
lock
xlat
mov
mov
inc
or
in
mov
fbld
adc
xchg
test
mov
vpaddusw
push
add
push
mov
pop
icebp
ret
pop
jge
cmps
dec
mov
(bad)
sub
xor
jns
pushf
or
jmp
jo
push
out
sub
ret
das
xor
mov
inc
xor
and
fsubr
xor
push
add
and
lods
aas
mov
or
add
push
mov
mov
faddp
xor
sub
xchg
rcl
jg
lods
aas
pop
fwait
xchg
jmp
bswap
in
retf
mov
dec
loop
jnp
scas
push
int3
sbb
jg
cmp
sahf
aam
adc
mov
out
push
jnp
jl
dec
outs
pop
mov
or
mov
popa
xchg
xchg
ret
jnp
push
clc
mov
cmp
push
pushw
cmp
leave
cld
ins
mov
clc
ja
outs
loop
pop
fiadd
and
mov
icebp
jecxz
mov
dec
or
mov
(bad)
or
icebp
int3
push
xor
xchg
data16
into
sbb
ins
mov
sbb
mov
cmp
idiv
xor
out
push
fstp
dec
into
lds
(bad)
jno
cmp
dec
mov
popf
or
pop
adc
(bad)
popa
cdq
test
sbb
les
movs
jo
and
mov
lahf
into
and
cdq
mov
inc
mov
fadd
mov
xchg
push
dec
pop
pop
mov
icebp
push
mov
mov
inc
fld
inc
push
jne
cmps
(bad)
sar
and
popa
push
in
imul
jp
dec
fiadd
sar
mov
sbb
movs
sbb
sar
add
pushf
push
xlat
and
mov
xor
cmc
sub
inc
lock
inc
mov
shl
int
iret
rdpmc
xchg
cmp
inc
leave
lds
mov
pop
or
fnstcw
loope
ins
xchg
inc
xchg
or
test
add
(bad)
xchg
adc
cwde
addr16
xchg
xor
pop
mov
mov
mov
loope
ins
(bad)
push
xchg
stos
mov
jmp
push
mov
(bad)
into
adc
lods
add
retf
clc
mov
cmp
add
jle
mov
dec
lahf
sub
sahf
das
add
push
add
nop
jge
into
icebp
fist
sub
mov
mov
std
cli
into
and
dec
jl
rol
mov
jmp
lea
es
(bad)
lods
dec
xchg
dec
frstor
push
mov
and
das
adc
sub
cmc
push
jae
xchg
dec
scas
lods
iret
rol
sar
jmp
jnp
mov
xchg
and
mov
xor
call
add
push
sbb
xchg
mov
inc
jno
popf
inc
cmp
xchg
adc
inc
shl
cli
or
push
pop
sbb
(bad)
in
popa
icebp
scas
cmp
inc
or
out
and
push
mov
jb
jecxz
loope
mov
lods
or
dec
hlt
loop
mov
or
push
lea
sti
int3
xchg
jno
lods
add
xor
call
push
iret
mov
dec
cmc
movs
sbb
xchg
jmp
sbb
iret
jp
test
clc
pop
push
cdq
std
bound
aaa
dec
push
mov
cmp
ror
out
jecxz
retf
mov
jge
inc
and
lock
fcmovnbe
gs
movs
in
faddp
jg
pop
push
sbb
into
mov
ins
push
cmp
pop
cmps
inc
dec
push
mov
pop
(bad)
mov
mov
mov
push
add
in
shr
xlat
push
jnp
int3
adc
imul
imul
sbb
std
pushf
dec
xchg
pop
fnstsw
xlat
mov
out
push
mov
cmps
xor
(bad)
pop
mov
push
ins
add
frstor
shr
and
xor
or
repz
imul
loopne
xchg
outs
mov
cmovnp
imul
arpl
jns
sub
popf
popa
(bad)
xchg
je
jnp
fcomip
cmp
(bad)
or
sti
sbb
mov
lock
jg
lods
and
jns
enter
dec
xchg
adc
xchg
and
dec
mov
adc
mov
add
rol
pop
out
lods
sub
dec
out
push
cmp
or
call
sbb
cs
addr16
sbb
mov
div
(bad)
sbb
push
inc
pop
pop
sub
out
mov
dec
pop
jb
sar
jl
adc
rcr
cmp
cmp
mov
lea
call
push
mov
push
adc
imul
pop
jbe
es
push
retf
inc
jle
xchg
int
popf
int3
ficomp
cmp
shr
sahf
jno
ins
fisttp
stos
add
inc
mov
jl
or
fs
mov
in
push
push
fidivr
stos
inc
mov
frstor
and
fs
inc
arpl
xor
sub
sar
mov
push
and
push
jmp
add
adc
in
add
test
cmps
mov
sti
loop
ds
push
lods
mov
ins
push
shl
xchg
push
test
lods
add
aas
outs
hlt
jo
clc
lds
pop
push
adc
and
pop
aaa
adc
xlat
pop
sbb
ja
pop
lods
adc
out
(bad)
dec
jmp
stc
or
ins
shr
ins
adc
jae
add
xorps
cli
xchg
enter
(bad)
test
rol
outs
stc
mov
mov
pop
stos
jge
inc
aaa
adc
stc
pop
ins
pop
cdq
push
repz
jle
movs
bound
test
mov
lds
fwait
cmp
out
retf
in
ficomp
(bad)
imul
inc
sub
jns
retf
jae
dec
sbb
jmp
xor
add
xchg
jbe
xchg
(bad)
xor
mov
xor
mov
mov
push
lods
(bad)
pop
add
dec
popa
into
cmp
or
push
cdq
test
or
add
inc
std
jo
fnstenv
mov
push
test
xchg
or
retf
les
fdivr
sbb
or
daa
xchg
cmps
out
sub
ror
repz
pop
push
fnsave
mov
dec
in
and
mov
dec
aas
cmp
cmps
jb
adc
cmps
sbb
xchg
mov
dec
inc
ror
popa
jg
pop
fiadd
add
lea
pop
outs
repnz
ds
xchg
mov
enter
xor
cmp
cwde
sub
pop
and
and
push
mov
ins
and
out
out
and
sub
fcmovb
pop
sub
jno
dec
loope
mov
and
repnz
rcl
mov
cld
fdecstp
and
retf
sbb
out
xchg
clc
out
xchg
xchg
inc
(bad)
xchg
cmc
movs
clc
push
test
int3
dec
push
push
inc
rcr
fdivrp
or
fs
push
inc
out
jo
addr16
pop
cdq
mov
pushf
daa
js
jg
and
push
or
fild
mov
gs
lods
xchg
bound
jne
inc
shl
cmp
in
dec
jae
sub
push
jecxz
pop
das
aad
jp
addr16
mov
mov
aam
in
push
pushf
stos
retf
adc
jns
add
push
push
sub
jo
ins
pop
or
arpl
adc
mov
mov
jbe
imul
add
add
xor
add
mul
not
lock
sahf
and
arpl
rcr
sub
daa
mov
lea
jmp
sub
inc
loop
mov
pop
pop
ins
mov
push
ins
jbe
mov
ret
jle
mov
jmp
push
push
pop
aas
mov
mov
xchg
daa
and
std
dec
add
and
stc
cmp
mov
mov
sahf
test
outs
xor
jno
nop
inc
retf
sub
push
popa
add
push
test
xor
nop
mov
in
ja
out
cmps
jne
into
nop
add
popf
push
hlt
frstor
mov
test
aam
repnz
arpl
add
sub
add
imul
loop
jnp
adc
repnz
(bad)
jmp
pop
mov
or
pop
daa
xor
mov
in
popa
push
add
stc
mov
add
les
cmp
bnd
inc
adc
add
gs
addr16
aam
xchg
cmp
or
mov
test
addr16
xchg
or
das
(bad)
bswap
fistp
sub
xchg
icebp
stos
pop
out
inc
sub
push
dec
add
mov
adc
icebp
imul
in
inc
and
je
or
imul
cmp
fnstcw
div
addr16
push
ret
inc
mov
xor
pop
(bad)
cdq
fwait
push
sar
aaa
cmp
mov
jne
push
xchg
out
call
sub
xchg
xor
pop
int3
in
lds
cmps
xor
inc
sbb
inc
mov
mov
sbb
stc
xchg
push
js
inc
jbe
retf
repnz
add
push
cmp
loope
jmp
fnstenv
jb
pop
mov
jg
lock
pop
ds
mov
jmp
sub
in
inc
les
jne
test
xchg
movhps
icebp
jecxz
cmp
sub
or
and
sti
je
sub
clc
jne
dec
jp
aad
retf
push
jne
in
cwde
test
test
ins
iret
sbb
lock
adc
mov
push
fst
push
cmp
nop
aaa
iret
push
sahf
test
cmps
(bad)
sbb
or
jb
outs
pop
mov
jo
mov
dec
fisttp
inc
xchg
sar
sub
add
mov
adc
(bad)
mov
cmp
ret
mov
jl
ret
add
aaa
dec
dec
dec
(bad)
cmp
rol
and
(bad)
sti
xor
jns
ss
js
dec
dec
xor
sbb
xchg
sar
or
lods
or
test
mov
retf
fsubr
in
add
stos
add
mov
stos
add
and
dec
int3
out
popf
cmp
loope
or
stos
pop
xchg
push
stos
xchg
jae
inc
and
push
sub
cld
outs
jle
gs
ficomp
add
jo
pop
gs
adc
add
adc
inc
push
dec
lods
xchg
in
pop
sbb
dec
cli
loope
lea
rcl
stos
sbb
or
jl
dec
sbb
xchg
daa
or
or
mov
sub
jmp
mov
xchg
xor
mov
sub
fdivr
hlt
sets
add
push
(bad)
sti
cld
dec
sub
int3
xchg
out
das
sbb
xor
xchg
inc
(bad)
push
(bad)
jl
jno
(bad)
repz
sub
jp
retf
pushf
mov
aas
outs
icebp
or
xlat
mov
xchg
data16
je
icebp
adc
cmp
fistp
jle
mov
adc
out
std
pop
mov
test
sub
std
outs
lods
call
test
sub
mov
inc
push
clc
fisubr
ins
adc
outs
out
cmp
xchg
loop
cdq
pop
ret
xchg
jo
pop
xlat
jle
les
dec
out
dec
imul
xchg
je
sete
fs
mov
into
cmp
call
inc
js
pusha
rol
into
xchg
mov
or
fs
ja
jns
cmp
outs
jbe
leave
lock
imul
pop
sahf
sbb
movs
push
inc
(bad)
(bad)
in
int3
icebp
hlt
pushf
(bad)
jo
xor
outs
int3
pop
xor
enter
push
in
pop
mov
cmp
int3
pop
adc
in
(bad)
arpl
jmp
lds
pop
jb
xchg
or
fwait
enter
pop
add
loop
jmp
dec
mov
ins
fiadd
dec
pop
ds
mov
mov
push
pop
fldcw
jl
mov
xchg
jnp
mov
and
adc
pusha
push
outs
imul
lock
lods
push
(bad)
fs
cmp
cli
cs
pop
mov
inc
out
add
pop
bound
sti
xor
and
outs
push
mov
nop
fimul
add
fst
out
xchg
xor
ret
lock
or
jp
mov
les
mov
jmp
and
xlat
push
xchg
xchg
mov
and
sub
mov
outs
pop
and
inc
inc
das
shl
dec
push
adc
ss
sar
adc
sub
mov
inc
xchg
into
mov
clc
mov
push
cli
clc
mov
mov
(bad)
jmp
or
dec
dec
xchg
inc
inc
pusha
mov
or
mov
loope
std
cmp
dec
daa
mov
and
ins
or
and
test
fstp
mov
fiadd
in
movs
jns
bnd
scas
jmp
sub
jl
lods
and
int
movs
out
cli
stos
xchg
ret
bound
xor
jle
cmp
jne
fsubr
idiv
gs
out
mov
in
loopne
test
cmc
ja
pusha
cmps
cmp
mov
jno
js
aad
call
fnstsw
retf
add
adc
xchg
xor
add
stos
int3
and
or
jne
sar
mov
xor
and
sub
mov
loope
std
sub
pop
addr16
enter
mov
imul
xchg
mov
mov
xchg
cli
push
outs
mov
(bad)
sbb
sbb
into
push
fist
data16
adc
lods
xchg
or
mov
mov
ins
(bad)
lds
sub
lock
adc
xor
push
outs
dec
outs
inc
add
js
or
xor
sbb
push
repz
cmps
(bad)
xor
mov
or
(bad)
or
call
and
pop
ss
mov
fidivr
daa
ret
inc
loope
out
retf
sbb
jmp
int
mov
iret
xor
fwait
mov
or
(bad)
cs
jo
mov
cmc
retf
enter
inc
je
inc
es
mov
rol
js
fst
mov
aad
cmp
das
jae
sbb
mov
pop
loop
xor
jg
sbb
stc
aaa
fcom
inc
les
(bad)
iret
mov
add
and
add
sub
push
bound
popf
xlat
into
adc
sbb
adc
movs
pop
clc
add
add
data16
xor
out
sbb
xchg
pop
and
mov
mov
dec
mov
jp
xlat
call
repnz
popa
cmp
ds
fiadd
popf
fidiv
sbb
test
ror
add
(bad)
xor
(bad)
or
std
test
jecxz
inc
xchg
inc
mov
or
cmp
bound
(bad)
popa
xlat
iret
rol
mov
fld
loop
push
pop
outs
pop
fbstp
repz
shl
popf
mov
xchg
cmp
xchg
jmp
dec
lods
fdivr
adc
add
std
jg
(bad)
popf
dec
mov
inc
inc
lods
pop
pop
out
fisttp
sub
pop
aas
out
add
or
les
xor
mov
sub
add
pop
fst
pop
movs
push
cmp
mov
in
add
pushf
stos
push
cmp
js
jae
pop
and
xor
and
imul
js
fs
xchg
or
test
mov
xchg
or
test
ret
jnp
or
dec
adc
xchg
push
ret
jo
shr
mov
jo
(bad)
sbb
(bad)
cli
jg
and
mov
mov
jle
adc
add
fisubr
neg
fcomp
dec
mov
sub
in
out
add
js
les
dec
add
inc
xor
dec
std
dec
jo
adc
ss
int
arpl
xchg
popa
das
sbb
inc
pusha
adc
aaa
or
into
jb
icebp
sub
xchg
pusha
mov
push
xlat
jb
lods
ret
popa
or
sahf
inc
mov
mov
dec
pop
pop
in
sub
pop
xchg
das
xchg
les
inc
mov
enter
cmp
xchg
daa
out
out
and
(bad)
jmp
mov
xchg
lock
arpl
pushf
je
dec
inc
ja
aas
addr16
cmp
jge
retf
inc
data16
push
fs
in
das
std
in
or
cmc
loope
fs
dec
scas
inc
imul
xlat
push
je
das
jg
cmp
xor
in
fprem1
cmp
mov
sti
shl
jo
aam
push
and
(bad)
call
loop
int
inc
jmp
sahf
lea
mov
mov
arpl
jle
or
pop
mov
fmul
movs
(bad)
lods
outs
mov
outs
mov
out
aaa
repz
clc
movs
pushf
dec
ss
xor
push
rcr
std
shl
jb
sti
dec
jns
and
movs
mov
sti
std
lahf
cmp
stos
sar
add
adc
imul
lea
outs
call
in
(bad)
movs
ja
rcl
dec
dec
mov
adc
pop
(bad)
out
outs
inc
jmp
inc
(bad)
in
jg
mov
jmp
sbb
fld
dec
mov
movs
dec
jg
shr
adc
cmc
ss
dec
fs
jo
adc
ins
or
adc
outs
sar
xor
pop
minps
inc
sti
jbe
popa
dec
scas
popa
xor
push
outs
cld
scas
(bad)
mov
mov
mov
fs
push
adc
and
fistp
and
aaa
jae
pop
(bad)
xor
dec
movs
sbb
pop
out
pop
movs
xchg
fwait
xor
xchg
push
test
(bad)
iret
dec
test
push
(bad)
pop
je
loope
in
outs
shr
add
inc
sbb
inc
dec
xor
jns
add
(bad)
leave
xchg
add
xchg
out
add
das
pop
mov
mov
popf
add
(bad)
sbb
retf
fsub
dec
stc
ins
popf
dec
cmp
sub
sbb
or
push
fisubr
mov
xchg
test
or
lahf
cmp
enter
xchg
(bad)
lock
mov
xor
jo
out
jo
mov
sti
xor
lds
fstp
add
nop
out
pop
push
xchg
mov
hlt
(bad)
pop
out
jb
mov
cmps
int
sar
cld
dec
retf
inc
jecxz
mov
push
aas
jge
lock
push
ret
out
lods
pop
test
ss
mov
cli
mov
ins
push
inc
cmc
sbb
add
jbe
mov
add
mov
test
and
push
shl
dec
jl
jp
stos
popf
ret
mov
jg
popf
retf
rcl
jecxz
sti
mov
pop
push
jp
ins
mov
aaa
mov
dec
sub
pop
push
fnstcw
push
pop
test
or
adc
jns
pop
lea
xor
fiadd
in
xchg
aas
pcmpeqd
inc
inc
nop
test
outs
sub
or
shr
xchg
sub
mov
enter
out
and
xchg
sub
mov
mov
sub
mov
inc
add
cmp
bound
xchg
mov
xchg
xchg
sub
mov
pop
mov
dec
repz
stos
cmps
imul
cmps
mov
mov
or
fs
fcom
mov
push
fsub
dec
in
enter
xchg
and
add
out
std
lock
sti
cmp
in
mov
fwait
pusha
jae
mov
xor
gs
pop
xchg
mov
dec
sbb
xchg
sbb
movs
mov
iret
mov
jp
mov
imul
dec
stos
ds
das
or
in
popa
in
xor
test
addr16
pop
pop
add
iret
call
test
dec
adc
cmps
xchg
sbb
fsubr
js
in
sbb
ins
imul
icebp
pop
test
pushw
lods
ds
cli
xchg
or
aam
pusha
retf
stc
ja
xor
(bad)
add
sub
int
inc
iret
jg
xor
repz
xchg
cmps
dec
repz
in
mov
sbb
pop
movs
dec
or
hlt
xchg
pop
adc
in
pop
sub
mov
in
add
cs
ins
or
pushf
(bad)
pop
lods
xlat
in
daa
cmps
mov
int
inc
repz
cmp
mov
sti
pop
or
(bad)
inc
push
shl
outs
jne
jmp
in
dec
jg
es
sbb
inc
loope
adc
or
pop
std
mov
lods
pop
nop
not
inc
push
or
dec
hlt
mov
scas
xchg
inc
pop
repz
xor
mov
sbb
jne
out
iret
dec
pop
fdiv
inc
xchg
and
mov
sub
adc
xchg
mov
out
mov
call
inc
ins
int
push
ret
mov
push
sub
test
or
jns
add
loop
jbe
inc
out
retf
jb
outs
fsin
dec
sub
aad
push
push
inc
sar
dec
xchg
psadbw
test
out
cmp
shl
repnz
push
lock
out
cli
mov
sub
sahf
or
js
aas
inc
push
int3
jmp
aad
ss
push
(bad)
test
dec
sub
pop
mov
xchg
into
add
daa
fs
jns
and
lods
loope
ret
sti
addr16
inc
push
sub
movs
call
popa
mov
in
adc
xchg
outs
ret
dec
mov
adc
sar
xor
shr
pop
or
sub
loope
sub
adc
ds
jmp
das
shl
xor
add
addr16
test
cwde
add
xchg
push
or
lock
jb
xchg
dec
or
mov
pop
loope
retf
call
gs
push
cli
inc
dec
mov
mov
in
jecxz
(bad)
enter
dec
ds
mov
cmp
lock
out
pop
dec
push
(bad)
js
pop
mov
dec
mov
push
xor
call
push
imul
jno
shrd
mov
sub
enter
push
and
cmp
xor
xchg
out
or
fwait
cs
jp
pop
or
mov
rcr
adc
dec
xor
cmp
or
push
sub
add
cmp
mov
fcmove
cmp
fstp
pop
jo
call
xchg
mov
cmp
xchg
add
mov
cmc
ret
sbb
aam
jne
sbb
cld
cmps
jmp
icebp
cmc
mov
jb
push
mov
pop
push
call
sub
push
out
sbb
fist
dec
add
ret
mov
popa
sub
aas
add
pop
in
into
(bad)
out
push
jmp
aad
nop/reserved
fnsave
imul
cmp
outs
sbb
bound
mov
test
add
xor
out
mov
mov
adc
mov
js
add
dec
mov
(bad)
fnsave
cli
jmp
fild
sbb
cmp
pop
mov
les
dec
pop
xchg
clc
call
jmp
inc
ja
(bad)
repz
sub
in
repnz
jnp
adc
pop
push
mov
push
dec
imul
and
xchg
arpl
jge
ds
movs
stos
mov
mov
and
cwde
inc
pop
call
xlat
(bad)
ss
dec
mov
ror
test
or
and
popf
adc
rcr
xchg
std
loope
inc
pop
popa
into
jae
mov
jg
sub
fiadd
fsin
pop
(bad)
mov
push
sub
cmps
mov
xchg
es
mov
daa
inc
jno
add
les
dec
jl
pop
adc
(bad)
xchg
xchg
mov
inc
inc
mov
or
mov
xor
mov
jmp
in
fucomp
(bad)
js
addr16
and
and
movs
in
and
imul
mov
cdq
aad
pop
jbe
add
aaa
test
jg
dec
lea
imul
mov
dec
inc
cdq
sub
mov
mov
sub
push
hlt
mov
mov
or
mov
ds
(bad)
or
inc
dec
adc
nop
or
sahf
sahf
adc
inc
cmp
stc
cmps
imul
cli
repz
outs
mov
outs
cmp
sbb
sbb
jmp
loope
(bad)
push
ror
dec
mov
rcr
xchg
(bad)
shl
push
mov
pop
aaa
(bad)
imul
int
sbb
jge
sbb
push
fwait
out
int
shl
daa
cli
in
aad
ins
iret
push
xchg
dec
loope
es
fsub
cs
add
push
cmp
mov
dec
enter
cmp
pop
dec
pop
sahf
ret
mov
add
dec
xlat
mov
pop
mov
jp
js
movs
mov
hlt
nop
stos
mov
in
xchg
and
adc
(bad)
dec
pop
fisubr
or
or
(bad)
jge
sub
xor
pop
adc
sbb
mov
les
lahf
add
inc
push
out
fldcw
dec
xlat
fsub
popa
icebp
es
js
jb
repz
mov
push
retf
pushf
inc
mov
sahf
xor
bound
add
rol
push
mov
xor
fidiv
mov
pop
test
cli
xor
stos
jmp
neg
lock
stc
sbb
mov
retf
fdivr
jle
or
sbb
int
cmp
loop
(bad)
lods
dec
loop
jnp
mov
cmp
cli
mov
push
dec
out
add
add
jnp
xchg
or
popa
mov
xchg
jp
test
loopne
or
mov
xacquire
mov
xchg
mov
into
mov
add
inc
inc
adc
(bad)
clc
inc
lock
fcomp
jnp
jns
mov
jl
arpl
stc
retf
lahf
mov
inc
jne
pop
push
jb
pop
fcmove
imul
lahf
mov
(bad)
jo
ss
mov
and
jmp
sti
or
loopne
pop
ja
sub
movs
inc
leave
ds
jg
fisub
push
or
aad
dec
pop
inc
add
das
jecxz
push
and
sbb
js
test
mov
clc
mov
in
adc
jmp
jp
dec
(bad)
icebp
mov
push
cmps
inc
mov
imul
fwait
int3
idiv
mov
mov
cmp
imul
sub
in
test
ja
or
fsub
inc
push
cmc
and
jge
inc
or
ja
xchg
inc
icebp
pop
mov
in
adc
mov
mov
shl
dec
push
clc
test
jecxz
xor
or
or
sbb
add
cmp
inc
sub
pop
mov
cmp
data16
mov
or
loope
outs
adc
int3
movs
xor
cmps
jge
test
ins
das
ss
mov
inc
movs
push
jmp
mov
adc
data16
or
addr16
adc
aaa
cmc
clc
ss
mov
adc
outs
jg
bound
cmp
data16
int3
outs
jbe
data16
into
mov
sub
inc
loopne
sbb
fcom
ret
pushf
stos
cmps
or
in
ja
xor
inc
sub
scas
pop
rcl
mov
rcr
inc
mov
mov
or
es
fsub
jge
out
mul
fst
mov
sbb
inc
fisub
pushf
mov
mov
into
dec
jp
lock
push
fwait
jb
outs
mov
sahf
dec
cmp
sbb
add
adc
scas
xchg
push
sbb
sub
sub
or
inc
iret
aam
test
adc
fsub
enter
add
mov
out
shrd
sbb
dec
xchg
ret
mov
getsec
test
imul
cmps
cmp
and
daa
adc
retf
jo
push
mov
add
push
cwde
pop
add
dec
sbb
js
loop
call
sub
loop
push
dec
popf
mov
pop
fs
jecxz
leave
pop
mov
repnz
retf
xchg
inc
enter
mov
in
fmul
push
retf
repnz
sbb
add
cs
cmp
popf
xchg
cmp
js
sub
and
scas
mov
add
cmp
xor
ss
and
cmp
jecxz
bound
cmp
es
pop
es
pop
adc
sbb
mov
or
test
or
xchg
into
inc
sti
test
fcomp
jbe
cwde
mov
push
dec
test
mov
add
xchg
add
jle
aaa
pop
push
(bad)
lods
lahf
imul
in
or
or
lods
mov
mov
aam
mov
add
xchg
mov
popf
mov
pop
test
xchg
inc
js
dec
cmp
inc
sbb
pusha
xchg
(bad)
inc
dec
imul
cli
pop
test
xor
loop
xor
aaa
or
(bad)
jmp
add
push
inc
pusha
dec
pop
call
clc
shl
fist
mov
xchg
dec
setnp
(bad)
xlat
ret
mov
cs
loop
ret
xlat
mov
sub
and
stc
cmps
cmc
rdmsr
fdivr
out
adc
stos
push
xor
cwde
movs
add
pop
sub
add
in
outs
ja
sbb
out
mov
pop
fild
inc
xchg
inc
xor
adc
mov
sub
jno
cmps
inc
cmps
jp
movs
pushf
adc
inc
adc
pop
pop
iret
mov
movs
or
fnsave
mov
addr16
xchg
movs
sub
dec
pop
jg
lds
jmp
or
adc
xor
sub
inc
cmp
adc
scas
inc
xchg
nop
sbb
cs
jb
sub
sub
pushf
mov
fist
and
cwde
mov
jg
lock
mov
sbb
hlt
leave
xchg
lock
je
sahf
sbb
fdivr
mov
int3
cmp
aas
jmp
mov
test
xlat
inc
or
jb
mov
sbb
pusha
fidiv
adc
repz
inc
sub
push
lea
xchg
xlat
sub
pop
xlat
arpl
cmp
cmp
icebp
sbb
adc
inc
jb
push
int3
pop
jae
sub
ss
dec
push
arpl
add
push
push
or
pop
sub
adc
mov
imul
or
push
jmp
popf
push
mov
test
in
retf
popa
and
add
or
retf
dec
loope
arpl
movs
push
and
movs
daa
or
pop
add
(bad)
fmul
dec
outs
inc
push
push
mov
cmp
pop
imul
xor
cmps
rcr
xor
fisubr
in
add
mov
adc
pop
cmp
retf
xchg
mov
pusha
jb
das
push
fmul
mov
mov
pop
cmp
xor
add
and
lock
jg
stos
cmp
ins
cmp
fist
mov
leave
mov
push
sbb
in
xor
pusha
xchg
outs
dec
mov
xchg
imul
jle
push
cdq
xor
cli
mov
mov
add
and
and
aaa
inc
call
inc
icebp
jne
fisubr
adc
sub
sbb
cwde
jg
push
push
xor
ret
push
mov
jo
(bad)
pushf
cmc
daa
ins
in
cmp
cmps
mov
mov
jmp
xor
pop
jp
adc
add
sbb
inc
adc
adc
adc
popa
add
ja
imul
into
aad
jb
aaa
ret
mov
mov
add
jae
int3
leave
or
ins
scas
cdq
(bad)
call
movs
xor
push
inc
dec
push
inc
call
push
mov
add
test
push
push
cmp
icebp
sbb
jbe
out
mov
cmp
push
xchg
cld
or
mov
mov
xor
add
push
push
fs
repz
sar
and
(bad)
(bad)
loope
push
int
and
lock
adc
xor
and
int
push
daa
xor
daa
arpl
or
mov
into
mov
inc
or
cmc
(bad)
ret
cmp
enter
push
loopne
out
adc
rcr
push
add
nop
int3
sbb
sti
xor
xchg
xchg
cmp
out
push
jl
push
sub
jae
mov
push
cmp
inc
mov
dec
test
fld
es
inc
dec
mov
push
pop
mov
mov
sbb
dec
inc
sbb
sar
sbb
es
lds
or
cmps
test
or
sbb
mov
and
pop
rol
into
cmp
daa
pushf
mov
pushf
push
outs
and
fistp
das
mov
mov
jno
fisub
(bad)
jns
int3
mov
and
xchg
or
cdq
retf
pop
sbb
lea
and
rcr
hlt
loop
cmp
fsubp
adc
adc
test
ds
add
enter
icebp
mov
stos
int3
jmp
aam
and
inc
fdivr
fisub
fidiv
xor
(bad)
adc
aas
fadd
jecxz
sbb
movs
inc
pop
inc
or
iret
pop
pop
xchg
jg
out
ds
mov
movs
cmp
adc
xor
mov
test
mov
xchg
jns
int3
mov
sub
mov
cs
into
scas
mov
inc
xor
movs
out
lods
adc
cmp
push
shl
sub
xor
fwait
pop
into
and
inc
add
sub
pop
mov
jo
inc
pop
ret
sbb
(bad)
repnz
add
not
sti
aam
adc
test
test
retf
adc
sbb
fs
pop
outs
scas
retf
sub
movs
adc
fmul
adc
adc
inc
jge
pop
push
sub
push
sar
push
fistp
outs
dec
adc
mov
adc
jns
pop
cdq
mov
cli
or
(bad)
sub
movs
rcl
mov
xchg
lock
and
adc
jecxz
mov
or
cmp
xor
cld
mov
sbb
cdq
inc
in
xchg
out
xor
fsubr
jns
ds
das
leave
(bad)
test
mov
pop
iret
leave
neg
out
test
fiadd
test
push
xchg
xchg
lods
inc
push
in
xchg
leave
sub
mov
clc
lahf
call
mov
pop
fiadd
rcr
sbb
jno
jmp
out
xchg
js
fadd
cmp
frstpm(287
sbb
rcl
add
fdiv
neg
iret
fadd
bound
sbb
sbb
retf
mov
sbb
ss
pop
add
jg
(bad)
je
(bad)
scas
pop
adc
jg
shl
mov
mov
test
dec
neg
out
and
aam
cmp
jns
mov
stos
lea
shr
mov
les
mov
imul
mov
dec
out
lods
mov
call
adc
int
adc
cmp
call
or
cmp
out
xor
inc
dec
cld
mov
jb
js
bt
cli
aad
clc
jno
jbe
cdq
stos
xchg
cs
cmps
adc
add
pop
sbb
ja
cmp
mov
lahf
mov
sar
pop
ja
add
cmps
pusha
mov
dec
adc
ret
lds
and
mov
dec
xchg
push
les
jns
mov
xlat
dec
push
mov
ret
icebp
jnp
je
sbb
cli
mov
in
in
sbb
xchg
xchg
outs
lods
jo
not
or
dec
adc
inc
cld
addr16
push
clc
cmps
enter
ret
and
dec
cmps
pop
fbld
cmp
into
push
mov
(bad)
push
loopne
cdq
sub
mov
out
call
push
mov
(bad)
dec
jmp
cmp
jo
test
sbb
ja
icebp
or
icebp
stos
test
inc
adc
mov
mov
fld
push
inc
popf
sti
mov
movs
sti
mov
and
cli
push
movs
xor
call
push
mov
sbb
dec
mov
cmp
je
popf
pop
scas
scas
je
adc
leave
xchg
sbb
jle
mov
push
(bad)
out
xor
call
jae
pop
inc
inc
mov
adc
mov
out
loopne
aas
cmp
sbb
je
ror
and
shl
imul
fisttp
xor
sti
ror
cs
mov
adc
jg
mov
jp
jnp
xor
pop
push
xor
in
sbb
leave
imul
movs
and
mov
pushf
cmp
xchg
adc
mul
mov
test
stc
fwait
mov
rcr
xor
mov
mov
nop
or
cmps
enter
mov
in
sub
mov
jl
scas
xchg
fbstp
add
pop
pop
push
cmc
sub
cmps
or
or
add
jle
imul
popf
cmp
rcr
pop
jo
dec
jge
lods
cli
outs
mov
stos
aaa
add
cli
jo
ins
inc
add
cmp
enter
shl
sar
jmp
js
mov
push
aam
pushf
rcl
sub
(bad)
data16
and
add
rcr
fstp
sub
fsubr
mov
in
arpl
jo
repnz
daa
int3
and
daa
into
or
pushf
cdq
outs
adc
inc
pop
pop
adc
sub
ja
out
push
inc
nop
pushf
dec
icebp
or
jp
daa
mov
clc
mov
sub
push
(bad)
clc
(bad)
hlt
pop
adc
jno
mov
inc
sbb
or
cs
clc
xchg
in
mov
cmp
pop
bound
jne
jp
sub
shr
mov
shl
push
push
ins
jo
dec
jnp
pushf
xor
fcom
fldpi
aaa
push
aam
inc
dec
iret
mov
sbb
xor
push
pusha
dec
sar
leave
movs
xchg
jae
ror
sub
retf
xor
loop
mov
retf
cdq
pop
jbe
aad
or
sbb
adc
fld
or
mov
pop
cdq
ins
in
sub
mov
xor
aam
push
fwait
cmps
(bad)
fcmovb
and
jns
mov
sbb
stos
mov
sbb
xor
jne
inc
(bad)
hlt
jmp
repz
gs
out
es
cmps
mov
cmp
arpl
xor
arpl
clc
adc
jb
or
push
(bad)
cdq
sbb
call
lock
ins
ds
mov
shl
add
(bad)
jp
sub
or
inc
(bad)
nop
es
jmp
mov
arpl
scas
pop
xor
cmps
dec
xchg
jp
repz
dec
mov
test
pop
mov
mov
fadd
pop
repnz
(bad)
jmp
call
out
inc
inc
cmp
jo
inc
push
dec
mov
adc
dec
mov
mov
xchg
push
pop
pusha
or
adc
push
stos
lock
and
imul
jecxz
xor
leave
(bad)
cmps
sbb
dec
add
xor
and
dec
or
sbb
or
mov
and
push
mov
and
or
aam
loope
xchg
mov
jb
movs
push
push
sbb
push
xchg
push
addr16
test
hlt
push
aad
or
mov
daa
pop
mov
sbb
and
push
arpl
aaa
out
sahf
mul
xchg
dec
xchg
fadd
ret
int
pop
rcl
mov
retf
mov
mov
inc
dec
sbb
ins
fisubr
mul
mov
adc
not
ins
add
inc
mov
shr
inc
out
ja
mov
xchg
fsin
(bad)
repnz
mov
mov
call
mov
add
xchg
movs
or
lods
out
jbe
sbb
es
sbb
ds
mov
xchg
mov
adc
adc
add
scas
test
xor
in
gs
pushf
fnstcw
mov
mov
cmps
inc
inc
push
pop
daa
or
imul
and
sub
xor
ret
lods
cmp
adc
addr16
sub
adc
jge
dec
mov
sub
mov
addr16
cmps
movs
je
in
loope
xchg
fwait
jne
cmps
out
dec
push
jnp
xchg
cmps
mov
jns
out
push
dec
xchg
lea
add
dec
inc
out
xchg
out
ret
cmp
fcom
inc
daa
cmps
cmp
movs
push
js
cmp
sahf
imul
lea
cmp
pop
pushf
jge
scas
xor
xchg
add
xchg
pop
xchg
pop
or
lock
jne
xlat
mov
cmp
push
cmc
push
in
(bad)
icebp
outs
inc
jae
lods
cmps
add
cmp
stos
outs
sub
jmp
mov
and
(bad)
scas
dec
mov
and
loope
dec
aas
aad
out
cmps
mov
jns
outs
dec
lods
loop
movs
int3
ror
mov
mov
xchg
mov
jp
cwde
adc
adc
jns
ins
jp
sbb
scas
xchg
fist
mov
mov
fcmove
sub
jno
shl
add
inc
popf
popf
js
cmps
pop
cmp
arpl
stc
jmp
adc
pop
pop
dec
popf
loop
adc
dec
xchg
sub
(bad)
push
push
add
cpuid
mov
fsubrp
sub
mov
leave
push
rol
hlt
pop
(bad)
popa
mov
cli
xchg
nop
mov
inc
mov
fcom
shl
dec
fs
popa
jge
cld
mov
dec
dec
aaa
xor
ret
sub
cmp
cmc
es
push
and
mov
in
pop
mov
mov
repz
icebp
repnz
pop
pop
mov
ins
dec
nop
nop
div
xor
scas
dec
fldenv
mov
sbb
xchg
test
push
test
jl
mov
adc
pop
mov
xchg
push
es
into
mov
mov
inc
dec
xor
sub
loop
lock
shr
dec
test
xor
outs
pop
cli
or
out
aam
xchg
mov
out
arpl
enter
mov
sub
(bad)
pop
enter
pushf
adc
mov
clc
je
adc
jb
addr16
(bad)
retf
mov
push
iret
push
jecxz
add
lea
sub
add
jecxz
sbb
repnz
jo
push
in
cs
mov
pusha
(bad)
daa
pop
lods
xor
jnp
pop
mov
dec
test
mov
mov
das
mov
scas
inc
arpl
cmp
rcr
and
mov
cld
iret
inc
and
xor
icebp
movs
mov
inc
inc
addr16
fcomp
pop
fist
xlat
stos
pop
cmp
adc
xchg
dec
mov
movs
inc
ror
rcr
adc
mov
jle
aas
add
fptan
or
xor
popa
mov
stos
(bad)
push
cmp
les
adc
mov
xor
adc
cmp
stos
mov
mov
mul
rcl
(bad)
sub
retf
pop
sub
push
sti
jmp
cld
cmp
stos
push
call
dec
dec
sub
jmp
retf
(bad)
jmp
jecxz
mov
jecxz
mov
rcr
jae
scas
ret
or
imul
pop
xchg
jp
dec
push
sahf
mov
iret
pop
or
jbe
xlat
sbb
loopne
in
arpl
mov
ins
xor
xor
xchg
lods
icebp
lods
mov
popf
push
xchg
cmp
push
mov
(bad)
cmp
mov
test
mov
mov
out
das
mov
test
pushf
mov
mov
adc
and
xchg
retf
nop
sub
or
movs
(bad)
cmps
cmc
es
mov
cmp
add
and
pushf
mov
push
mov
aam
and
push
js
fmul
fs
out
fadd
fcomp
pop
inc
imul
sbb
jl
cdq
dec
lods
out
cmps
outs
pop
or
data16
in
jle
sbb
cmp
loopne
ss
fidiv
xor
cmp
jo
xor
stos
or
and
jns
push
push
mov
ins
xor
cmp
mov
jle
shl
xchg
mov
lods
mov
inc
mov
push
js
pop
enter
or
and
sub
nop
retf
lea
jg
add
daa
test
sbb
add
cmc
or
push
imul
dec
imul
(bad)
sbb
movs
cmps
mov
aam
jbe
and
dec
dec
add
lock
rdtsc
jnp
cmp
pop
push
cli
ret
out
test
enter
jb
add
xchg
dec
mov
cmp
add
bound
pop
sub
sbb
aaa
scas
mov
addr16
or
adc
or
popf
clc
rcr
pop
repz
fs
mul
jmp
scas
pusha
pop
and
pop
push
sbb
adc
pop
ror
cmps
fdiv
adc
repz
clc
inc
ret
or
leave
int
aad
bound
adc
sub
jnp
imul
rcl
in
pop
cmp
sub
sqrtps
fcomip
(bad)
inc
retf
data16
outs
into
jb
add
and
lahf
inc
ins
or
and
clc
mov
ins
or
imul
rcr
jno
nop
push
inc
sbb
mov
mov
jne
mov
lods
cmp
rcr
push
outs
dec
sub
pop
sbb
ror
inc
push
xor
inc
daa
out
pushf
cmp
scas
std
mov
dec
loope
xchg
pop
stos
es
adc
jl
and
sub
jbe
push
jmp
and
neg
cmps
enter
sub
pop
enter
push
and
cmp
xchg
push
and
mov
nop
adc
adc
dec
xchg
aam
or
sahf
mov
das
clc
jecxz
pop
retf
aad
or
pop
es
(bad)
xchg
cmc
xchg
dec
xor
ss
push
sbb
cdq
in
mov
cld
ret
fcomp
test
cwde
sub
ret
retf
sbb
(bad)
and
push
(bad)
hlt
sbb
pop
xchg
dec
fidivr
pop
mov
adc
retf
jg
add
outs
add
cs
sub
stos
mov
mov
ds
movs
pop
(bad)
test
out
mov
dec
adc
ds
repnz
sbb
push
cld
in
mov
stc
push
icebp
mov
pop
(bad)
xor
push
pop
aam
sub
or
ror
inc
ds
push
shr
cld
jmp
mov
jl
call
sub
aas
ret
xchg
fst
lods
and
sub
fmul
xor
iret
inc
xor
and
retf
mov
push
hlt
sbb
sahf
dec
mov
sahf
cs
mov
fisttp
seta
push
out
and
mov
sar
icebp
data16
loopne
lahf
jns
xlat
or
cmps
add
repnz
push
retf
add
sti
lds
sbb
movs
ret
sub
jb
hlt
add
and
pop
cmp
sub
sbb
push
test
sub
push
imul
push
xchg
dec
scas
mov
int3
arpl
dec
int3
add
jbe
das
out
repnz
enter
retf
neg
imul
push
retf
sar
add
jmp
cdq
jns
cmp
and
fcom
(bad)
inc
les
jmp
push
test
sbb
je
xchg
icebp
jmp
and
jae
mov
int3
inc
sub
sti
in
sar
aad
(bad)
mov
imul
inc
pop
push
popa
mov
dec
xchg
nop
sbb
cmc
cmp
adc
fisttp
gs
retf
xchg
rol
mov
jg
and
in
mov
dec
shr
shl
shl
lods
mov
jae
inc
mov
mov
test
outs
fdiv
into
mov
mov
scas
(bad)
stos
mov
mov
loope
push
sub
and
sub
xor
push
daa
test
fadd
dec
test
cmps
out
add
or
add
cmc
cmp
into
dec
fwait
adc
cdq
dec
jg
mov
sbb
in
in
or
pop
test
adc
fwait
cmps
push
stc
mov
xor
mov
or
jnp
jbe
mov
fist
dec
jo
imul
setbe
loop
loopne
mov
test
fist
pop
push
retf
sub
pop
or
sbb
or
push
dec
add
in
jle
sbb
jmp
in
jg
hlt
clc
cld
mov
test
retf
mov
sbb
push
add
les
mov
call
mov
push
dec
enter
dec
out
adc
test
push
in
adc
out
adc
adc
and
(bad)
cdq
mov
cli
xchg
test
cmps
xchg
popf
popf
jecxz
aad
jmp
jne
rcr
jg
scas
jns
popf
jns
(bad)
inc
cld
retf
fwait
pop
ret
push
xor
jne
sub
push
out
xor
push
out
mov
and
out
jl
add
not
xor
std
cwde
jno
movs
popf
movs
mov
or
pusha
sahf
test
adc
mov
mov
out
cli
xchg
inc
pop
bound
pop
or
aam
sti
xchg
fidiv
mov
mov
and
daa
push
outs
int
inc
adc
push
mov
movs
dec
fdiv
stc
jns
call
mov
repz
pusha
push
or
xchg
les
sti
or
mov
mov
mov
cs
in
xchg
ja
rcl
jle
js
adc
inc
push
dec
xor
pop
mov
mov
gs
push
inc
xor
bound
xor
sub
rcl
push
gs
mov
push
sub
gs
xor
lods
iret
pop
xchg
and
ins
cmp
mov
sar
and
out
sbb
inc
or
repnz
movs
xor
add
cld
mov
ins
inc
jbe
lock
jge
repz
mov
fmul
jmp
push
inc
push
es
sub
js
imul
mov
lods
enter
mov
jo
test
popa
leave
(bad)
push
rcl
pushf
pop
cdq
xchg
fsubr
(bad)
jmp
fnsave
cmp
push
pop
push
clc
jbe
xchg
inc
movs
sbb
fucomp
sbb
mov
fist
cli
mov
sbb
cli
sub
pop
mov
dec
sti
xchg
push
(bad)
ins
shl
mov
pop
imul
adc
adc
sub
sub
in
leave
out
xchg
enter
(bad)
into
mov
cmp
mov
std
outs
and
outs
xor
or
(bad)
imul
adc
ds
es
aam
pop
dec
out
(bad)
ins
dec
dec
push
sbb
pop
inc
xor
xchg
rcr
or
mov
mov
push
pop
(bad)
rcl
into
cmp
cmp
pop
dec
push
sbb
std
jp
into
inc
mov
imul
or
in
inc
cmp
clc
mov
jecxz
sub
ins
repz
cwde
jmp
mov
bound
inc
sbb
mov
scas
fcom
fnstcw
add
int
js
sbb
into
aas
lea
mov
je
push
inc
repnz
inc
retf
mov
adc
add
clc
mov
(bad)
dec
cld
js
mov
test
mov
and
push
or
shr
pop
xchg
cmp
not
pop
dec
pop
jge
xchg
sub
xor
jmp
(bad)
shr
pop
push
and
es
sbb
rcl
in
jmp
mov
dec
lock
lods
sub
add
out
push
jmp
fdivr
adc
mov
mov
sar
inc
inc
jne
aad
imul
cmp
js
fs
xchg
jle
ja
push
inc
push
pop
or
data16
das
imul
jmp
pop
jmp
cmps
clc
rol
push
outs
test
pusha
bound
mov
repz
mov
in
inc
mov
pushf
dec
jns
cmps
or
ss
sbb
cmp
int3
jl
icebp
ss
mov
mov
push
imul
mov
and
cmp
sbb
sbb
aas
popw
enter
loopne
call
es
mov
aam
add
fmul
mov
adc
shr
les
pop
dec
(bad)
mov
jb
sub
pop
pop
mov
leave
scas
ret
imul
scas
sti
or
xchg
aas
sbb
mov
ror
or
push
pushf
retf
pop
out
cmp
sbb
pop
xchg
or
into
aaa
mov
inc
jb
xchg
shl
mov
adc
sbb
in
gs
sub
outs
out
frstor
cwde
aad
fnstenv
popf
inc
add
push
je
cmp
les
sahf
and
bound
test
xchg
sbb
js
fwait
int
mov
push
xchg
icebp
imul
jno
jmp
pop
jg
cmp
and
sbb
sbb
call
lock
pushf
mov
fmul
loopne
cmc
add
xchg
enter
cmp
mov
loopne
and
pop
mov
mov
push
inc
pop
pop
retf
and
xor
xchg
or
stos
inc
or
sbb
mov
sub
lods
cmp
inc
fistp
mov
lahf
add
and
cmps
lds
popf
dec
les
xchg
fmul
sbb
ins
xchg
xchg
jp
cmp
or
add
inc
jns
in
inc
inc
sbb
(bad)
jns
bound
dec
(bad)
or
mov
adc
retf
mov
jg
xor
dec
xor
(bad)
cwde
mov
or
add
call
gs
in
sub
sbb
and
push
or
dec
(bad)
pop
cmp
add
div
jmp
call
(bad)
stc
push
lock
out
cmc
fisttp
fdivr
rcr
mov
push
mov
(bad)
and
daa
lods
cmp
ja
pop
clc
inc
clc
outs
popa
xor
sbb
rcl
dec
jb
es
xchg
fsqrt
jge
aam
pop
sub
push
fucomp
xchg
sti
cdq
mov
test
pop
dec
mov
test
shl
dec
cmp
mul
fs
mov
rcr
mov
test
pop
pop
rcl
jnp
sbb
(bad)
daa
in
je
pop
gs
fist
push
scas
lds
jecxz
jns
pushf
mov
pop
ja
in
cmp
sahf
fiadd
out
stc
pop
pop
fst
inc
ds
shl
mov
fisubr
mov
or
sub
cdq
gs
cmp
pop
push
mov
call
push
xchg
jmp
std
sahf
jmp
fimul
inc
mov
inc
test
push
jae
test
xchg
fst
and
leave
iret
or
(bad)
fidiv
int3
xor
aas
jno
ins
jp
test
in
jmp
neg
loop
add
pop
out
ror
add
fst
movs
stos
ins
paddq
or
(bad)
mov
repz
fs
xor
cwde
mov
ficomp
dec
mov
or
fmul
iret
inc
pushf
outs
sbb
sbb
lods
jl
mov
adc
xor
inc
in
shl
int
(bad)
mov
inc
jmp
mov
nop
outs
and
call
jp
mov
xlat
cmp
pop
jo
movs
jne
lock
inc
push
shl
xor
out
pop
ins
out
mov
sti
arpl
idiv
je
ja
int
gs
fwait
push
call
sbb
daa
mov
pop
mov
inc
jle
dec
xchg
sbb
sbb
movs
mov
add
(bad)
push
inc
rcr
cmp
push
repnz
xlat
cdq
push
mov
fisub
ds
xchg
arpl
cmp
push
aam
test
adc
mov
pushf
mov
push
dec
ds
adc
mov
push
rcl
div
sahf
or
xchg
ret
add
lahf
ds
inc
lds
arpl
loop
push
cld
into
pop
cmp
adc
jmp
cli
ret
or
outs
xchg
cld
inc
imul
mov
dec
xlat
jmp
movaps
jg
sbb
xchg
aam
mov
dec
shl
icebp
xor
and
jne
inc
jbe
out
popa
paddb
stc
leave
pop
jecxz
std
or
xchg
mov
inc
jle
shl
cmc
cmp
inc
adc
addr16
mov
fstp
pop
xchg
daa
sub
(bad)
fwait
lods
inc
pop
aaa
fisub
push
adc
add
outs
pop
xor
rcl
sbb
ds
xchg
cmp
mov
outs
iret
xchg
inc
add
mov
jge
fidiv
(bad)
lods
neg
imul
hlt
adc
push
xor
jne
dec
ss
push
or
fimul
mov
into
cs
shl
mov
test
mov
imul
jnp
mov
or
aam
in
inc
xchg
dec
jb
leave
pop
push
inc
pop
fld
add
je
and
loop
data16
mov
stos
(bad)
cdq
mov
loop
mov
sub
aad
fnstsw
pushf
test
or
or
leave
or
mov
repnz
ror
dec
fadd
aaa
loop
dec
pop
loopne
adc
add
mov
mov
xor
jmp
loope
sahf
jmp
arpl
sbb
push
add
sub
enter
test
movs
stos
imul
mov
jnp
stc
cdq
mov
fs
sub
mov
or
movs
enter
ficom
jp
mov
mov
jmp
outs
xor
mov
repz
mov
iret
loope
test
xor
outs
lds
inc
mov
stc
pop
xchg
cmc
inc
mov
push
or
ror
and
mov
jae
push
es
hlt
dec
dec
lds
loop
mov
xor
imul
dec
mov
and
in
test
or
or
sub
idiv
sub
in
test
jne
imul
add
pop
icebp
or
dec
mov
cmc
dec
dec
pushf
cmp
in
xchg
adc
jmp
dec
and
add
jae
in
inc
or
jg
gs
xchg
rcl
lds
cld
cli
inc
xlat
sar
fidiv
imul
jg
jnp
dec
add
pop
test
loop
and
sub
mov
push
in
xor
pop
mov
repnz
jae
and
pop
or
pop
loope
popf
mov
sbb
push
aad
sub
adc
loop
adc
pop
add
je
jecxz
bound
mov
xchg
push
popf
shr
outs
xchg
mov
inc
adc
add
jmp
mov
mov
call
out
jb
adc
sti
fisttp
and
test
jmp
jnp
fcmovnu
push
jmp
cmp
movs
jo
es
in
data16
int
jl
pop
push
in
std
call
xchg
xor
cmp
leave
cmp
popf
movs
repnz
addr16
xor
(bad)
xchg
fcomip
int3
inc
push
cmp
pop
out
gs
pop
jnp
mov
jne
pop
jl
aas
adc
dec
mov
icebp
push
out
cwde
pop
jmp
and
and
pop
dec
push
imul
sti
pop
add
(bad)
cli
repnz
gs
ret
out
not
lds
retf
mov
mov
push
mov
aaa
inc
push
cmp
or
arpl
call
push
push
scas
das
loope
jns
pop
jno
mov
cmp
pop
xchg
adc
ds
imul
jle
test
test
add
iret
lock
and
mov
mov
or
cs
enter
loopne
jo
mov
jbe
sar
cmps
es
bound
popa
mov
mov
xor
repnz
jnp
push
stos
and
mov
sub
sub
sti
out
sbb
or
cmc
scas
and
pusha
xchg
cmp
push
xchg
add
loop
xchg
out
pop
shl
popa
sub
js
hlt
in
cmps
mov
jns
(bad)
iret
adc
shl
lods
dec
es
mov
sar
pop
movs
mov
imul
jmp
pop
xchg
cdq
inc
cmps
mov
popf
or
movs
push
dec
push
ret
mov
jmp
jp
push
adc
ja
jge
mov
call
std
adc
jle
dec
dec
jbe
mov
pop
(bad)
aam
lock
cmp
or
cli
pop
popf
inc
mov
add
outs
cwde
mov
add
xor
mov
mov
stc
repz
xor
dec
pop
mov
mov
sub
rcl
jnp
mov
mov
pop
push
jbe
or
inc
sbb
aas
neg
fidivr
sbb
mov
mov
push
repnz
jmp
movs
dec
jmp
mul
loop
or
and
out
mov
ss
(bad)
lea
jle
aaa
push
dec
jae
call
scas
or
mov
jmp
fwait
jnp
inc
test
in
fdiv
push
mov
pop
in
movs
shl
call
add
(bad)
mov
mov
inc
mov
xor
aam
push
push
pusha
cmp
out
scas
sub
inc
push
mov
jae
inc
cmc
and
bnd
imul
fistp
or
pop
push
mov
inc
mov
xchg
xor
cmc
push
xchg
call
jmp
push
dec
(bad)
ins
(bad)
pop
aam
out
jbe
pop
rol
sbb
std
sbb
push
sbb
xchg
and
jp
and
ins
rcl
xchg
outs
in
xchg
mov
add
scas
ins
mov
loop
nop
and
pop
test
sbb
call
rol
rol
movs
imul
cmp
pop
test
push
pop
outs
jl
jg
cmps
fistp
xor
xchg
iret
test
and
mov
jle
pop
fcmovb
not
mov
in
and
arpl
ja
nop
movups
add
inc
or
cmp
xor
jno
ds
es
cmp
xor
sbb
fild
nop
test
ss
movs
push
dec
mov
cmp
out
add
sub
jp
jb
fistp
or
in
mov
in
out
xor
clc
leave
sar
pop
cmp
imul
test
push
mov
sbb
test
fidiv
jmp
test
mov
test
push
int3
sub
mov
push
jmp
add
dec
sub
data16
pop
inc
or
cli
pop
sar
imul
clc
mov
mul
mov
sbb
push
xor
fmul
sub
xchg
aaa
push
and
loop
inc
and
jmp
jne
fmul
pop
test
je
cmc
pop
into
or
repz
push
(bad)
pop
std
je
mov
aas
push
inc
pop
xchg
(bad)
in
dec
lods
inc
cli
sbb
mov
cdq
les
test
cmp
sub
sbb
and
cwde
movs
pusha
add
fcom
lock
jl
stos
gs
in
cmps
xor
pop
cdq
jb
bound
push
mov
mov
ret
dec
out
sub
adc
adc
inc
jmp
pusha
fisttp
int3
xor
and
jl
movs
sub
jmp
out
ficomp
pushf
into
or
mov
sub
(bad)
inc
(bad)
xor
pop
xor
jmp
or
push
or
jp
push
sti
pop
add
fadd
mov
adc
addr16
dec
push
dec
outs
mov
aad
aaa
sbb
arpl
mov
aas
inc
xor
retf
cmc
mov
adc
mov
sahf
sbb
loop
lods
out
test
les
push
addr16
movs
or
out
das
jmp
int
mov
pop
xchg
test
or
xlat
mov
sbb
push
inc
out
stos
mov
lds
hlt
loope
in
aaa
or
xchg
dec
adc
imul
dec
mov
enter
mov
jnp
cmp
add
sub
leave
gs
sub
iret
daa
jle
jnp
(bad)
(bad)
mov
cmp
les
or
cmp
xchg
arpl
mov
loop
cmps
call
sar
jno
(bad)
sbb
mov
sub
shl
mov
loopne
popa
xor
test
cld
dec
imul
jb
mov
scas
mov
push
out
leave
mov
into
call
mov
shl
inc
aas
dec
push
(bad)
fbstp
daa
data16
inc
cld
push
mov
retf
fstp
cmps
imul
enter
xor
jbe
cmp
dec
mov
inc
cwde
(bad)
xchg
mov
ror
xor
inc
je
xor
stos
daa
in
ja
cmp
push
jecxz
sbb
cmc
icebp
repnz
adc
adc
mov
push
dec
popf
cmp
and
inc
fwait
nop
cmp
stos
mov
inc
popa
retf
or
inc
xchg
inc
fucomip
xchg
das
retf
imul
scas
xor
xor
jbe
dec
outs
jmp
aad
adc
clc
mov
jmp
fcmovu
mov
mov
mov
stc
xor
jl
push
in
daa
inc
into
jns
or
mov
add
inc
lahf
jbe
push
pop
cmp
or
int
pop
cmp
dec
popa
pop
cmp
repnz
das
sbb
retf
xor
xchg
jb
cmp
in
xor
jno
ret
push
inc
dec
fiadd
xchg
sbb
fild
adc
mov
push
and
jecxz
pusha
xchg
mov
inc
jle
scas
aam
ror
sbb
movs
addr16
push
inc
adc
outs
les
(bad)
mov
cld
or
dec
ret
xchg
push
jp
xchg
adc
out
in
ins
int3
or
cld
fsubr
sbb
pop
test
fldenv
ret
js
aam
sub
retf
inc
jg
dec
scas
add
and
cmp
push
mov
ins
xchg
jg
enter
es
mov
sbb
mov
retf
hlt
mov
xchg
in
(bad)
xor
(bad)
dec
les
shl
jp
cmc
ret
fmul
mov
add
and
sbb
mov
test
push
or
fiadd
loope
pop
retf
(bad)
aaa
fcom
cli
mov
xchg
jne
inc
(bad)
lods
cmp
mov
shl
ins
mov
lods
xor
add
lods
cwde
pop
js
dec
jl
cmp
mov
push
ins
mov
sahf
gs
push
(bad)
push
mov
fstp
mov
xchg
inc
or
xor
daa
shr
inc
xor
cmp
cmp
es
adc
or
mov
leave
mov
les
sti
rol
cdq
jle
jl
pushf
imul
out
pop
cmp
mov
jecxz
(bad)
popf
int3
dec
stc
data16
and
dec
in
sbb
mov
dec
sub
(bad)
cmps
test
daa
add
adc
jmp
les
or
xor
jg
jns
(bad)
push
push
and
adc
push
rcr
outs
add
pop
aam
ror
movs
lods
xlat
dec
dec
mov
pop
mov
xchg
ret
mov
(bad)
in
out
clc
sbb
(bad)
in
rol
fsub
sbb
nop
cmp
jns
out
or
sub
sbb
cli
ss
loopne
(bad)
(bad)
jne
dec
dec
xor
mov
push
cmp
out
add
cmps
mov
cmp
rcr
out
dec
adc
cli
dec
lods
ds
call
xchg
(bad)
out
ss
jae
mov
and
aaa
out
jl
push
retf
cmp
out
mov
mul
dec
adc
nop
adc
mov
clc
jmp
addr16
sbb
ja
mov
mov
ficom
mov
mov
cmps
add
inc
aam
dec
inc
gs
ficomp
jne
or
and
push
sbb
out
leave
mov
in
push
cs
mov
call
mov
test
mov
add
cmp
movs
fidivr
sbb
fdivr
ja
fidivr
add
jle
add
lods
add
ret
jmp
add
push
pop
int3
fld
movs
and
out
adc
xchg
push
xchg
xchg
loopne
push
mov
outs
dec
jo
dec
mov
or
ret
mov
sar
mov
fld
aas
cmp
(bad)
fbld
inc
int
mov
push
sbb
fst
enter
pop
jne
push
xor
adc
shl
test
sub
push
and
or
dec
jg
cmp
push
lds
push
idiv
inc
xor
sub
mov
loop
sub
add
rcl
xlat
aas
sub
mov
pop
sub
xor
pop
mov
mov
pop
ret
push
and
push
fdivr
push
das
aam
inc
(bad)
push
ret
and
loopne
or
arpl
ds
or
dec
pop
fmul
mov
pop
ret
pop
test
add
xor
retf
popa
xor
jge
in
clc
sahf
test
hlt
push
mov
adc
test
stos
into
mov
jp
out
xor
into
cld
and
hlt
clc
sub
repnz
add
sub
stc
cld
ret
xchg
call
ins
fcomp
das
xor
lea
mov
lds
fidivr
popf
and
fs
dec
stos
push
sub
enter
xchg
cld
xchg
adc
and
jecxz
lock
outs
push
sub
pop
cmc
and
call
cmps
out
and
sbb
ror
cmps
add
cs
mov
repnz
jb
lds
push
(bad)
lahf
in
mov
mov
dec
push
pop
out
repz
mov
test
xor
not
shl
out
mov
ins
data16
(bad)
pop
jp
repz
mov
pop
xchg
ja
or
shr
jge
dec
sbb
push
pop
inc
repz
ds
mov
cmp
es
push
lock
in
mov
cmp
and
fstp
test
add
cdq
adc
leave
ins
retf
stc
rol
scas
mov
pop
cmp
xchg
jecxz
mov
in
out
in
lahf
xlat
ret
test
int3
sub
mov
retf
es
sbb
popa
lods
clc
xor
xor
fwait
dec
idiv
fldenv
int3
add
mov
inc
daa
pop
popa
jmp
mov
mov
push
mov
pop
mov
xor
cli
out
test
(bad)
imul
ror
adc
lea
xlat
cmp
retf
cmp
je
dec
mov
adc
sar
aad
fst
cld
mov
pop
pop
mov
pmaxub
jne
sbb
xor
ret
add
popa
cdq
shl
dec
in
inc
dec
test
in
icebp
in
cld
xor
add
test
push
inc
pop
data16
loop
mov
in
xchg
mov
mov
push
outs
fs
inc
mov
dec
in
cld
lods
dec
and
push
inc
call
ret
sti
xchg
dec
arpl
gs
push
mov
in
shr
pop
or
(bad)
sub
(bad)
clc
mov
sbb
xlat
fwait
cmp
test
ins
pop
(bad)
(bad)
jge
ja
rol
push
dec
nop
sub
jnp
dec
push
and
jnp
retf
push
out
mov
xchg
dec
add
jnp
mov
in
push
add
pop
iret
sbb
int
fnstcw
hlt
(bad)
mov
ja
push
cld
(bad)
(bad)
imul
test
lods
lock
cs
jne
pusha
push
and
cmps
popw
sub
out
or
lods
pop
(bad)
sar
int3
and
arpl
jnp
add
loopne
sub
int
imul
jo
pop
arpl
lock
and
mov
inc
dec
and
(bad)
cmp
(bad)
jmp
into
ror
push
mov
xor
push
pop
jl
cmps
and
adc
bound
xor
call
pop
mov
cmp
adc
dec
inc
gs
inc
(bad)
fist
cmp
ds
xor
mov
into
or
or
xor
adc
shl
and
in
fnstcw
ret
cdq
jge
jl
fcmovu
sbb
and
lock
dec
xor
add
into
jecxz
xor
aaa
dec
mov
mov
mov
mov
push
imul
mov
xlat
xor
cmp
pop
or
pop
push
imul
push
mov
mov
test
mov
ja
ins
jmp
cmc
into
adc
js
into
ja
xlat
pop
stos
std
clc
add
jbe
push
mov
jmp
jns
mov
ds
sub
(bad)
lods
jbe
pop
or
inc
lds
mov
pop
pop
out
push
add
inc
adc
inc
xchg
in
lods
push
shl
sub
jo
push
inc
dec
outs
in
xlat
mov
inc
(bad)
fwait
cmp
sahf
and
xor
rol
fwait
pop
xchg
cmp
mov
or
sbb
pop
cmp
and
shld
(bad)
ja
dec
jg
arpl
enter
int
movs
movs
sub
es
aaa
aaa
loop
out
sbb
mov
call
loope
pop
retf
jmp
(bad)
out
repnz
or
mov
inc
rcl
ja
pop
push
ins
inc
enter
xor
ins
fnstcw
cmp
and
xchg
movs
inc
mov
push
movs
and
push
fldcw
sbb
popf
xchg
(bad)
inc
or
push
push
mov
ins
pushf
leave
(bad)
cdq
out
inc
pop
retf
pop
movs
inc
push
(bad)
nop
test
fstp
jns
push
mov
(bad)
cmp
aam
sti
inc
mov
outs
jp
mov
jne
dec
push
fst
and
outs
addr16
sbb
leave
mov
daa
xchg
es
dec
or
inc
mov
popf
jl
aam
rcr
aad
fnstsw
mov
jp
movs
mov
in
push
adc
shr
in
mov
cmp
lods
sahf
sub
push
adc
xchg
js
push
hlt
bound
sub
mov
mov
pop
xchg
outs
push
sbb
jbe
jne
fild
pop
adc
test
and
sbb
adc
bound
sub
js
xor
adc
mov
add
pop
xor
retf
xchg
and
or
push
push
fs
retf
aam
sub
leave
push
fcmovu
fmul
xchg
push
inc
cwde
mov
mov
pop
dec
adc
jns
or
dec
push
xor
in
scas
jne
adc
pop
jnp
pushf
mov
or
ins
sub
lock
ret
sbb
pop
ret
pop
loopne
dec
pop
es
out
daa
push
jmp
jp
in
mov
out
out
or
sbb
mov
in
sub
mov
xor
sub
in
jle
adc
mov
or
mov
loopne
ret
mov
and
in
fistp
andps
out
(bad)
pusha
sub
outs
adc
pop
jb
imul
cmp
jnp
mov
bound
xchg
pop
lahf
cs
jmp
push
shl
movd
(bad)
xchg
(bad)
adc
sub
cmp
mov
adc
pop
mov
dec
mul
add
dec
hlt
jmp
je
jmp
push
sub
and
scas
data16
ja
sub
enter
adc
and
jl
cmp
mov
test
xor
imul
xchg
xor
sti
fwait
int
out
xchg
inc
pop
jbe
int3
lods
or
bound
pslld
or
imul
lds
pop
ret
mov
jnp
adc
out
inc
retf
cmp
sub
into
dec
xor
jmp
xor
call
(bad)
fld
pop
pushf
push
nop
dec
mov
and
inc
adc
test
loop
xor
cmp
sub
dec
push
call
add
and
test
push
mov
dec
and
xchg
out
add
xor
shr
lock
jae
out
mov
and
and
xchg
aaa
dec
enter
mov
pop
jmp
fldcw
cmp
dec
and
sbb
and
inc
xor
mov
pop
lods
cmps
loop
dec
inc
pop
mov
adc
mov
pop
ficomp
outs
out
jmp
push
inc
push
lods
mov
loope
mov
int3
out
dec
dec
(bad)
adc
imul
xlat
mov
xchg
call
div
xchg
xor
push
in
add
sbb
pop
(bad)
sub
fs
xchg
and
and
mov
adc
sbb
ds
rcr
ficomp
ja
xor
sbb
mov
and
xor
xor
loopne
je
fwait
jmp
out
outs
push
cmp
push
out
ficomp
loopne
dec
outs
jle
ins
xchg
or
fwait
push
icebp
jle
mov
xchg
inc
scas
push
jnp
neg
icebp
in
and
jo
add
scas
mov
dec
cmp
adc
xchg
sbb
in
push
movs
mov
add
aam
loopne
dec
xchg
jmp
cwde
pop
jnp
inc
in
xor
sar
mov
xchg
aaa
mov
enter
jmp
jbe
je
sahf
out
jmp
jge
jp
test
js
xor
test
or
mov
dec
out
mov
adc
pop
and
xchg
push
ret
cmp
fstp
cmps
dec
ds
and
fcom
lahf
add
dec
pop
push
jmp
mov
loope
inc
(bad)
sbb
xor
push
lock
jp
dec
test
sar
xor
adc
rcr
add
xchg
loop
retf
sbb
mov
ds
xchg
test
lock
not
inc
jne
shr
or
add
sub
rcl
sbb
call
test
dec
stos
fdivr
cmp
sub
mov
jo
je
in
loope
sub
sbb
rcr
movs
pop
or
mov
pop
ds
add
ret
sahf
arpl
cmp
or
and
cmps
data16
jle
imul
test
repz
lods
cs
jle
rcr
push
push
push
lods
sar
aad
in
inc
xchg
(bad)
call
cmp
fadd
loope
aas
imul
sub
mov
jge
pop
stos
pop
(bad)
sti
inc
out
call
sub
add
pop
imul
pushf
ds
cdq
daa
loope
popf
icebp
lods
sub
(bad)
(bad)
jp
leave
hlt
ins
push
fisttp
push
jno
and
out
mov
clc
cli
xor
mov
or
push
mov
and
mov
neg
cmc
sbb
xor
mov
and
mov
jmp
(bad)
mov
test
xchg
aam
xor
test
rol
mov
ror
dec
and
cmp
dec
jns
outs
xor
sub
cld
out
or
mov
jno
sub
pop
and
add
fs
call
loopne
dec
arpl
or
retf
retf
cld
imul
jo
xor
inc
inc
inc
hlt
cmp
xchg
pop
dec
cs
inc
ret
mov
lds
lods
out
pop
fwait
stos
mov
pop
xor
cmps
adc
xchg
out
mov
inc
jae
js
fistp
pop
es
outs
inc
jnp
lods
dec
dec
imul
dec
jl
mov
sahf
adc
and
cdq
ds
cld
add
xchg
out
lds
jmp
mov
xchg
pusha
push
ficom
nop
inc
push
pop
dec
add
jl
xchg
rcl
add
mov
test
data16
scas
xchg
shr
dec
(bad)
in
cmp
mov
mov
pop
dec
out
push
int3
inc
adc
mov
std
sbb
loope
sbb
call
push
and
test
or
add
aad
std
xchg
rol
jo
push
sub
arpl
mov
aad
and
int3
lods
mov
jle
aam
add
add
daa
test
cdq
and
stos
inc
in
aaa
ret
push
jmp
jle
stc
enter
push
mov
adc
pop
cdq
sti
mov
in
or
inc
fs
js
mov
fld
arpl
hlt
pop
or
into
sub
sbb
push
inc
loop
lods
imul
xchg
outs
push
test
xchg
imul
jmp
retf
add
mov
dec
pop
or
es
inc
call
cli
and
mov
add
jl
xchg
das
mov
mov
pop
xchg
mov
mov
shr
test
jmp
(bad)
div
cs
xchg
test
add
ja
xlat
mov
mov
jle
fcmovnb
mov
imul
imul
loop
fimul
add
jno
pop
pop
jg
sar
mov
std
retf
pusha
xchg
outs
repnz
mov
push
mov
xchg
call
sub
inc
ja
xlat
cmp
rcr
in
int
cmp
inc
cmps
addr16
push
je
scas
addr16
cmovae
pusha
pop
xchg
dec
xor
int
pop
retf
xchg
dec
pop
sub
push
mov
pop
outs
xor
cmp
sbb
cmp
call
loope
jmp
jge
add
loopne
addr16
xchg
inc
cmp
mov
cdq
mov
lock
enter
sbb
sti
pop
mov
retf
inc
jmp
je
sub
inc
mov
add
fisubr
sbb
ins
outs
aas
push
call
movs
xchg
and
xchg
movs
lds
fnstsw
call
test
jmp
xchg
fcmovne
and
or
sbb
fidiv
pop
jge
out
sbb
xchg
xor
das
jle
mov
sbb
and
mov
or
mov
xchg
(bad)
add
aad
mov
or
mov
xor
cmp
or
jmp
daa
mov
leave
cwde
into
ins
aas
fst
fcmovnb
js
shl
add
push
jecxz
jge
sbb
xor
jmp
repz
out
idiv
sbb
loopne
mov
mov
or
mov
and
rcl
push
aaa
fwait
pop
sub
int
cmps
jbe
pusha
inc
enter
push
pop
dec
mov
repnz
fistp
or
fxch
push
fcom
push
or
mov
cmp
or
mov
push
or
xchg
dec
and
nop
jns
dec
fsub
leave
add
jecxz
aas
sbb
shl
add
xor
mov
sar
mov
popa
push
out
push
push
adc
fild
add
out
stos
js
dec
div
sbb
sbb
mov
mov
js
outs
loop
shl
(bad)
fmul
and
jmp
sbb
in
sbb
sub
jecxz
pop
loope
jmp
xor
xor
stos
loopne
jge
outs
rcl
sub
dec
cmp
or
test
xor
mov
shr
add
rcl
jmp
jns
rol
popa
sub
ret
jp
adc
in
repz
push
pop
shl
jmp
test
xchg
mov
mov
mov
and
sahf
(bad)
in
fwait
adc
jge
pop
out
ds
not
rcr
out
push
into
inc
push
mov
jl
jmp
mov
repnz
dec
ret
mov
pop
sti
int3
ds
mov
cmp
xchg
mov
fdiv
jb
and
loopne
hlt
sub
(bad)
sbb
dec
bound
xchg
mov
mov
fdiv
loop
in
mov
xor
xlat
repz
push
bound
jb
pop
(bad)
rep
push
cmc
jmp
iret
ds
or
pusha
sbb
daa
xor
movs
sub
or
mov
cmp
sbb
sbb
sbb
pop
xor
dec
leave
inc
and
cdq
rcr
pop
iret
jl
call
push
popf
popf
sub
jecxz
mov
pop
into
mov
pop
cmp
hlt
adc
add
and
sbb
pop
or
aam
js
dec
pop
dec
xchg
inc
jmp
mov
out
cmp
mov
inc
mov
cmps
push
cmp
push
mov
or
lods
push
dec
sbb
cmp
inc
jg
stos
cdq
jo
repz
addr16
or
pop
(bad)
sub
jp
scas
adc
lods
and
test
jg
cmp
mov
fst
cmp
sub
(bad)
and
or
adc
je
jmp
xor
stc
add
push
and
and
aaa
jae
pop
xor
push
lea
call
movs
jmp
dec
inc
add
add
sbb
jmp
jl
jne
push
in
pop
(bad)
and
add
add
or
cmp
icebp
jb
mov
imul
mov
mov
mov
xor
push
mov
cs
sub
in
ds
ret
mov
xor
aaa
and
cmp
push
lods
cmp
jle
xchg
dec
js
in
adc
mov
scas
add
sub
mov
pop
pop
shr
pop
jb
push
add
jge
push
movs
sahf
mov
mov
sub
xchg
adc
fiadd
cmps
cmc
fs
movs
jno
sub
adc
aad
dec
movs
dec
add
movs
fisttp
scas
add
movs
lods
adc
(bad)
leave
hlt
sub
cmp
cmpps
cld
pop
mov
xor
enter
lods
jne
sbb
out
xlat
inc
cs
test
add
(bad)
sbb
pop
or
retf
mov
je
pop
ins
inc
retf
icebp
sub
xlat
data16
fcomi
xchg
xor
fs
ret
fld
inc
ds
inc
cwde
pop
in
aaa
cmps
sub
jae
mov
(bad)
cld
adc
cmp
fs
fidiv
call
mov
cmp
sub
or
ja
inc
mov
in
pusha
mov
outs
in
(bad)
mov
mul
out
pop
mov
test
add
xchg
pop
(bad)
hlt
pop
and
xchg
stos
popf
dec
aaa
mov
xchg
jmp
repnz
jge
in
sahf
push
les
push
or
test
std
ins
xchg
fcmovne
jecxz
ins
mov
sahf
repz
andps
xchg
cli
fwait
mov
pop
repnz
sbb
xchg
pusha
xor
adc
std
and
xchg
std
mov
sbb
add
mov
xor
dec
mov
push
icebp
cs
mov
inc
sete
add
sbb
retf
es
addr16
cmp
lods
ror
out
stos
adc
xor
mov
retf
or
mov
arpl
out
mov
push
mov
mov
mov
fidiv
aam
sub
loope
call
jg
mov
xor
int3
inc
shr
cmp
mov
jle
ins
jmp
jmp
push
enter
setb
int3
and
dec
mov
cmp
dec
popf
sbb
mov
into
fnstsw
bound
ret
sbb
stos
inc
stc
loope
sub
mov
sub
lods
and
xlat
mov
movs
jne
add
movs
add
cmp
cmp
inc
retf
addr16
sbb
jno
sbb
rcr
push
cli
cld
push
mov
std
adc
jle
pop
ins
inc
call
adc
jae
push
ret
cmp
aad
push
jae
lock
outs
push
sahf
push
outs
sbb
imul
mov
icebp
sub
or
xor
repz
jge
inc
push
lods
push
jb
loopne
fiadd
jle
push
shl
cmp
jl
fs
ja
into
mov
mul
(bad)
popf
stc
in
pop
or
ss
pop
je
mov
ja
pop
jmp
add
jmp
and
or
adc
stos
sbb
(bad)
retf
and
and
sub
xchg
dec
adc
and
bound
pushf
out
xchg
sbb
jno
adc
fiadd
in
loop
inc
lahf
sub
jmp
in
jmp
adc
cmp
jne
sbb
data16
loope
loope
sbb
or
inc
jcxz
or
mov
mov
scas
das
scas
push
fs
ss
fwait
mov
push
shl
fdivp
jno
into
arpl
call
iret
push
test
mov
rcl
js
adc
mov
xor
xchg
lods
adc
mov
jle
(bad)
xchg
cmp
in
add
icebp
push
cmc
add
and
xor
xor
repnz
xor
out
outs
add
adc
cmp
pusha
aad
call
aaa
or
sar
imul
je
loopne
stc
mov
add
scas
mov
in
mov
jb
xor
retf
dec
jp
rcl
push
test
mov
xor
mov
lea
fs
aaa
clc
jmp
mov
in
out
fisubr
aaa
jne
xchg
pop
or
icebp
stc
xlat
aad
popf
stc
xchg
adc
ret
ret
xor
jmp
and
sbb
jne
push
idiv
fiadd
sbb
jmp
and
mov
hlt
sar
and
sbb
(bad)
leave
add
mov
outs
jae
out
jle
mov
cwde
sub
push
push
rcl
loopne
push
ficomp
xchg
les
jno
cmps
aas
pop
cmps
sub
test
test
retf
fisttp
ins
adc
(bad)
clc
fldcw
loopne
push
(bad)
dec
mov
push
ss
stos
mov
xchg
jb
nop
retf
idiv
xchg
fistp
xor
ret
std
adc
test
mov
push
push
push
cwde
into
sub
call
xchg
adc
mov
jmp
ror
fcomp
std
sbb
out
icebp
(bad)
cdq
hlt
aam
sub
in
xor
push
(bad)
pop
inc
cdq
(bad)
out
inc
xchg
ret
cmp
retf
dec
jne
(bad)
fbstp
(bad)
jp
add
into
jl
push
fsubr
(bad)
sbb
mov
jo
bound
push
out
sub
inc
xchg
pop
and
adc
sbb
jo
push
dec
mov
inc
inc
and
icebp
jmp
mov
cmps
pusha
mov
bswap
and
(bad)
cmp
ins
retf
dec
pop
popa
adc
pop
or
in
dec
mov
jo
dec
cmp
adc
adc
add
cmp
mov
jo
mov
jae
mov
ja
xor
cli
inc
push
xchg
jecxz
jae
xchg
pop
cmp
cmps
xchg
cwde
movs
(bad)
inc
pop
mov
mov
or
test
jg
jae
dec
ror
sbb
jl
push
sub
adc
bound
call
icebp
sbb
fsub
mov
imul
ins
vpsrlq
lahf
xchg
cs
push
dec
mov
stos
ficomp
jne
or
mov
sub
or
inc
pop
inc
sub
ins
push
imul
mov
loop
ins
adc
in
dec
push
inc
cmp
mov
test
(bad)
mov
rcr
call
cmp
xor
mov
out
inc
sub
push
fs
push
mov
jo
and
and
pushf
inc
push
dec
sbb
push
cmps
ss
add
cmp
xchg
xchg
call
gs
outs
call
xchg
xchg
mov
sub
sar
sub
ret
xlat
xor
pop
cmp
clc
xchg
jmp
jmp
inc
in
jg
dec
(bad)
add
or
dec
mov
jnp
mov
stc
mov
nop
repnz
mov
cmp
mov
pop
xor
pop
aam
xlat
and
inc
sub
popa
pop
push
add
popa
in
sub
mov
pop
adc
in
mov
pop
enter
mov
adc
inc
retf
movs
js
fldcw
outs
add
addr16
lods
xchg
test
mov
push
xchg
inc
gs
fucomi
ret
iret
fldenv
push
jb
enter
mov
nop
aam
push
ss
push
inc
inc
adc
in
dec
enter
mov
mov
mov
sbb
cmp
push
push
fs
or
inc
and
int3
mov
out
dec
cli
pusha
test
test
xor
hlt
mov
iret
xor
xor
mov
mov
dec
mov
sub
subps
xor
imul
jbe
push
adc
loopne
push
scas
fild
push
icebp
mov
cmp
xor
push
lea
xchg
rcr
mov
lock
or
cwde
or
jecxz
das
(bad)
int3
inc
inc
lods
mov
(bad)
dec
mov
mov
push
push
mov
dec
sbb
dec
jp
inc
push
dec
or
mov
cmp
add
dec
mov
das
pop
imul
sub
push
out
or
xor
aam
daa
scas
jae
jecxz
mov
jmp
xor
xor
std
xor
mov
sub
call
xor
not
test
mov
push
xlat
icebp
imul
push
cmp
pop
rcr
fiadd
jge
sbb
nop
mov
and
shl
lahf
push
pop
ja
jecxz
daa
mov
sbb
sar
cmps
sbb
movs
fsubr
push
xor
es
ret
leave
inc
sub
mov
pop
push
daa
fiadd
test
inc
jo
jmp
inc
data16
mov
pushf
pop
mov
or
cs
gs
mov
push
neg
cli
jp
cwde
mov
mov
in
call
loopne
add
ret
(bad)
fistp
sbb
in
shr
hlt
aad
adc
mov
pusha
fidiv
ror
(bad)
bound
aad
and
shl
push
ret
cli
fistp
test
mov
gs
imul
mov
imul
jbe
sub
and
and
mov
imul
and
test
jbe
outs
push
stos
aad
jge
lds
jae
fld
es
je
lahf
pop
sar
or
cmp
inc
cli
add
test
dec
retf
jno
fdiv
jl
xor
aad
outs
mov
es
cmp
ret
fbstp
mov
jbe
sbb
ja
sbb
sbb
lods
dec
(bad)
push
xor
shl
sub
fs
dec
fs
int3
dec
push
stc
xchg
xor
addr16
sub
pop
or
sub
mov
cmp
xor
or
inc
(bad)
idiv
add
jae
mov
pop
pop
sti
push
xor
rcl
mov
cmps
mov
stos
call
nop
mov
popf
xor
ds
mov
jnp
mov
xchg
pop
scas
in
dec
cmc
jle
nop
jae
retf
dec
inc
movs
and
gs
or
(bad)
adc
xor
test
push
ds
mov
out
cmp
jg
push
jmp
or
push
cmp
pop
dec
sbb
cmps
jge
push
jne
fsub
and
cwde
imul
push
sub
sub
add
ins
push
test
jbe
push
push
sbb
jge
dec
push
xor
lea
mov
inc
leave
movs
cdq
mov
jle
ret
std
xchg
into
retf
push
std
pushf
sbb
out
push
add
add
jns
add
and
lods
jecxz
and
xor
mov
mov
sub
inc
jmp
movs
jmp
push
hlt
sub
fsubr
push
std
xor
hlt
xchg
inc
add
stc
out
or
pop
je
dec
test
hlt
loopne
ret
dec
push
mov
(bad)
xor
pusha
mov
or
aaa
aad
in
popa
inc
mov
aad
addr16
pop
into
mov
jns
or
data16
dec
mov
mov
pop
test
adc
add
(bad)
and
retf
es
mov
icebp
pushf
add
test
mov
sbb
xchg
adc
adc
xor
adc
fcomi
ss
icebp
(bad)
mov
and
aas
jp
(bad)
loopne
mov
adc
imul
popf
sahf
iret
push
xor
sbb
(bad)
nop
pop
(bad)
popa
cmp
js
shl
int3
mov
in
sbb
lock
push
fdecstp
jmp
jmp
dec
mulps
mov
or
lods
adc
cmps
xchg
or
bound
xor
fabs
mov
rol
das
jle
jge
xor
cwde
push
cmp
in
js
add
lock
pop
jo
out
pop
dec
icebp
popa
xor
not
cli
repnz
mov
push
std
nop
sbb
fnstsw
iret
fisubr
cdq
pushf
pushf
xchg
stos
sar
fisttp
(bad)
stc
test
xor
jno
mov
fcom
push
mov
les
mov
jns
sub
xchg
adc
test
leave
mov
dec
test
push
iret
data16
cmp
xor
fistp
sbb
sub
inc
jo
fwait
inc
nop
es
inc
hlt
add
or
xchg
add
xor
loope
cld
shl
dec
(bad)
sbb
cmp
or
cmp
loop
popa
xchg
pop
cld
movs
mov
rcr
sbb
rcl
jp
jle
sub
fcmove
ja
dec
inc
shl
and
ja
iretw
aaa
sahf
jo
mov
cld
fstp
push
cmc
paddb
or
in
mov
dec
fnstenv
enter
sar
lds
xor
jne
fild
push
adc
sti
push
in
dec
dec
or
xlat
pop
hlt
or
xor
arpl
pop
and
xchg
sub
adc
sar
mov
sar
(bad)
ins
outs
jne
retf
ss
inc
xor
sbb
or
xlat
mov
jae
push
adc
mov
cmc
pushf
and
mov
enter
mov
dec
add
mov
cmp
adc
push
dec
adc
xchg
icebp
pop
jle
pop
movs
(bad)
iret
add
sbb
mov
and
cld
pop
cmp
stos
or
arpl
fs
shr
push
test
add
add
jle
jmp
aad
push
and
push
loope
push
(bad)
sahf
xlat
or
rcr
push
ins
push
mov
sti
popa
or
in
dec
lods
pop
lahf
adc
sti
fsubr
shl
rcr
inc
mov
call
mov
call
dec
int
push
adc
cwde
inc
xchg
lods
xor
push
jecxz
and
lods
sbb
repnz
or
sbb
cvtpi2ps
inc
adc
xor
mov
sub
mov
push
hlt
mov
jae
sub
bound
xor
push
sub
ins
sahf
pop
cli
pop
xor
dec
(bad)
and
xchg
outs
or
popa
inc
repnz
jmp
stos
popa
in
mov
xlat
sub
xchg
mov
cmp
retf
pop
daa
popa
sub
outs
xchg
ins
add
mov
jmp
retf
(bad)
test
(bad)
(bad)
cmp
push
pop
xor
fsub
test
push
push
test
fadd
jne
xor
data16
and
pop
push
push
mov
sub
mov
les
xlat
jl
pop
sbb
pop
into
fst
sub
cmps
loopne
xor
cmp
ins
and
repnz
lahf
mov
jnp
mov
call
aas
repz
cmp
mov
xchg
sub
or
xchg
dec
jl
sub
popf
xchg
cld
movs
adc
mov
retf
pop
xchg
add
mov
mov
popa
sub
loop
sahf
lea
aad
shl
cwde
std
adc
sub
sbb
jg
xchg
cmps
fistp
test
or
fistp
stos
jo
jmp
pop
jecxz
jg
xchg
mov
cmp
dec
adc
mov
cmp
jecxz
movs
ret
fnsave
cmps
pop
and
sub
sahf
loope
lahf
gs
cmps
push
popf
or
cmc
test
int
mov
adc
cmp
mov
pop
popf
or
ror
shr
inc
popa
dec
xor
pop
retf
int3
or
sub
jae
loopne
test
out
or
sub
call
call
clc
shr
cmp
cmp
leave
pop
mov
jle
add
addr16
jp
outs
sub
(bad)
cmp
mov
adc
and
bound
push
out
push
fst
jns
cmc
ds
ds
push
loop
xchg
pop
mov
mov
or
and
out
mov
rcr
push
mov
jne
bound
nop
or
lods
mov
dec
dec
push
and
push
pop
xchg
or
xchg
jp
push
fcmovnbe
mov
add
or
jmp
mov
repz
aam
(bad)
push
gs
sub
push
jb
(bad)
pushaw
aaa
pop
sub
cmp
mov
pushf
pop
jae
loop
out
mov
rcl
xor
xchg
jp
and
(bad)
int
repz
xchg
(bad)
arpl
cmp
xchg
iret
daa
jns
or
or
mov
pop
and
enter
std
iret
mov
add
dec
stos
inc
pop
xchg
leave
stos
in
leave
retf
dec
gs
push
jp
xchg
imul
cmp
push
xor
ss
ins
adc
xchg
mov
dec
and
push
xlat
dec
mov
inc
and
push
and
push
and
mov
jo
ds
adc
sub
inc
dec
jns
xor
clc
out
push
int
add
xchg
push
and
aaa
inc
sub
(bad)
jmp
dec
mov
xchg
cmp
outs
(bad)
pop
stc
lahf
cld
es
adc
jmp
add
cwde
js
and
cmp
mov
add
js
ins
out
fcmovnb
call
(bad)
and
in
mov
and
jle
cwde
push
mov
mov
mov
xor
pushf
dec
cwde
loope
xchg
pop
nop
xor
call
push
cmp
push
and
repz
or
sbb
inc
dec
ds
push
xor
cmp
dec
pop
bound
cmp
data16
cli
add
pop
cli
ficomp
out
add
inc
(bad)
cmp
(bad)
ins
mul
xchg
das
xchg
pop
es
mov
call
call
push
into
jo
repz
dec
(bad)
outs
and
mov
xor
call
ficom
xchg
call
xor
aad
in
in
sub
aas
inc
stc
dec
pushf
cdq
sub
int3
call
loope
sbb
lea
ds
in
cwde
push
sbb
and
mov
aad
jge
je
jecxz
in
popa
movs
dec
repnz
fidivr
popa
sbb
sub
cmp
mov
jno
cmp
push
sub
jmp
sbb
out
xchg
add
out
mov
test
(bad)
sar
mov
call
push
lock
mov
lahf
inc
jnp
sar
pop
adc
mov
xor
or
push
mov
lods
push
ds
jne
adc
in
sahf
dec
inc
jge
mov
mov
ds
xchg
sub
aas
push
out
lahf
ja
mov
in
cmp
dec
dec
mov
add
cmps
test
pop
or
scas
retf
je
inc
sub
mov
push
cdq
sub
mov
mov
cmp
jns
adc
movs
sub
pop
repz
lds
jle
push
or
xor
adc
mov
(bad)
sbb
ud1
adc
cmps
and
pushf
sbb
pop
and
in
mov
and
enter
or
imul
call
mov
movs
jp
sbb
or
in
jns
sti
dec
mov
mov
xchg
and
push
aas
loop
fs
scas
pop
inc
fst
pop
push
out
dec
stos
call
xor
or
mov
ja
mov
pop
pop
mov
sbb
cmp
aas
or
mov
aas
repz
adc
push
loop
(bad)
dec
das
pop
int
cmp
nop
sub
lea
cmps
pop
push
imul
fdiv
pop
inc
and
call
push
mov
or
xor
lock
push
dec
xchg
sbb
sub
pop
test
push
mov
stos
push
cmp
pshufw
pushf
and
mov
icebp
jg
fucomi
stos
add
repz
mov
fsubr
lahf
iret
xor
xchg
pop
aam
shl
xor
jmp
lods
jmp
jae
lods
hlt
call
ins
test
jbe
lods
sub
(bad)
mov
leave
lock
jl
mov
adc
gs
push
xor
push
push
and
loop
aas
out
out
or
pop
stos
mov
cli
mov
add
cs
movs
jbe
cli
loope
jnp
or
cmp
in
fistp
inc
daa
sar
mov
jb
push
cmp
loop
dec
aas
sbb
pop
pop
in
daa
mov
out
call
mov
sbb
xchg
sbb
call
adc
ror
das
lock
cmp
sar
cwde
sub
push
jecxz
retf
xchg
mov
bound
jle
mov
es
sub
hlt
sbb
and
add
fild
ins
popa
call
lods
mov
pop
jne
pop
push
adc
adc
neg
shl
ret
sahf
call
inc
pusha
inc
in
(bad)
cli
adc
pop
loopne
sbb
lea
jmp
in
iret
dec
cwde
lods
push
inc
movs
dec
xchg
imul
adc
inc
sbb
sahf
cmp
or
pop
out
popf
push
mov
(bad)
in
mov
repz
mov
add
pop
shr
test
xchg
jnp
push
(bad)
pop
push
cmp
jno
call
xor
lock
and
cmc
jecxz
dec
pop
mov
ss
jb
xor
and
inc
xchg
lock
pop
out
iret
mov
stc
call
cmp
cmp
cmp
fstp
jmp
not
fmul
jno
xchg
ins
cli
lds
xor
cmps
addr16
popa
adc
xor
mov
hlt
cmp
je
jg
fwait
push
cmp
jmp
fst
clc
mov
push
or
cmp
xlat
lahf
pop
jbe
inc
ds
adc
cmp
leave
aam
sub
mov
adc
cmp
xchg
hlt
ret
ss
fs
stos
cmp
jl
ja
sbb
lahf
mov
imul
mov
ins
dec
adc
cmp
push
cmp
push
adc
retf
das
inc
pxor
pop
dec
lds
iret
or
rol
xor
btr
int
test
push
loopne
outs
ror
inc
ins
add
pushf
cmp
(bad)
out
dec
nop
pusha
jle
cmp
sub
loopne
lock
out
xchg
nop
pop
(bad)
in
and
dec
pop
sub
jmp
hlt
loope
xor
xchg
clc
ret
out
outs
or
(bad)
ds
sti
fidivr
cmp
mov
fdivr
jg
scas
xor
(bad)
cmp
xor
cwde
jmp
or
dec
jmp
ja
jl
xchg
test
push
jne
out
loope
jb
mov
and
lods
pop
jge
in
or
pusha
out
push
cmp
fst
popf
ins
dec
inc
shl
clc
pop
es
xchg
inc
fiadd
loopne
enter
jno
jmp
fdivr
ror
mov
out
sbb
cdq
shr
add
mov
inc
adc
xchg
adc
ss
and
cdq
js
cmc
into
dec
push
arpl
xchg
fcom
and
movs
out
fidiv
imul
hlt
jle
clc
cmp
cmp
jns
jae
ret
jmp
bound
(bad)
imul
and
adc
shl
bound
rol
sub
repz
addr16
push
jns
das
mov
pop
pushf
cld
sub
sub
cmp
popa
(bad)
ja
mov
xchg
sti
cmp
sbb
push
adc
scas
lock
and
cdq
sub
int
mov
(bad)
test
ror
cmp
pop
sar
cmc
push
fxch
aaa
mov
adc
sub
xchg
pop
movs
jns
lds
movs
cld
stos
cdq
mov
push
inc
push
cs
push
xchg
mov
retf
(bad)
pop
fs
cmp
lods
or
jmp
aam
mov
inc
stos
xchg
ss
jle
packsswb
push
stc
cli
in
cmc
mov
jg
(bad)
movs
stos
comiss
mov
jecxz
aam
add
lahf
mov
sti
cmc
xor
cmps
ror
mov
mov
and
jmp
push
lahf
ins
fistp
cmp
mov
xchg
jmp
shl
cmp
cmc
dec
xlat
pusha
rcr
fst
pop
int
mov
lahf
and
push
mov
pop
movs
dec
ss
dec
fwait
xor
outs
lds
mov
aad
retf
cs
popf
mov
adc
iret
lods
jo
ja
pushw
cmp
hlt
push
stos
iret
imul
or
jp
loope
inc
jnp
add
sub
mov
mov
das
adc
mov
pop
adc
lods
(bad)
pop
mov
or
cli
mov
pushf
les
ss
push
mov
pop
lods
pushf
arpl
inc
xchg
lds
stos
mov
test
outs
pop
rcl
pusha
pop
ja
retf
xchg
dec
je
popa
pop
inc
mov
mov
dec
int3
loope
imul
pop
mov
mov
test
(bad)
aad
sbb
pop
lahf
adc
xchg
ja
adc
mov
ss
test
xchg
and
jmp
mov
sub
mov
hlt
and
pop
add
push
aam
repnz
mov
repnz
jne
das
cld
push
aad
movs
mov
mov
stc
out
das
or
outs
sar
es
pushf
dec
shr
movs
lea
ds
xchg
mov
sbb
cmp
imul
pop
xor
mov
stc
aaa
ss
add
fs
rcr
aad
and
in
int
in
xchg
inc
idiv
push
es
aaa
retf
nop
out
outs
pop
sub
jmp
movs
js
add
mov
es
fisttp
mov
(bad)
pop
icebp
test
loop
loop
or
xchg
mov
push
fsubr
mov
repnz
xor
jno
out
pop
test
pop
mov
mov
cmp
lea
stos
addr16
imul
push
inc
jmp
inc
push
mov
jl
pop
fs
sub
add
icebp
push
or
push
imul
bound
test
aam
mov
sbb
adc
imul
dec
xchg
aad
scas
fisub
add
inc
pop
mov
(bad)
test
fld
mov
pop
sub
inc
pop
cmps
or
les
push
mov
test
fcmovb
cmp
xchg
xchg
sub
in
aaa
or
jl
lea
cmp
repz
and
pushf
stos
inc
mov
mov
mov
mov
je
addr16
push
mov
add
pushf
or
fcmovbe
aaa
mov
mov
sti
lods
push
xor
mov
pushf
add
adc
pop
and
add
xchg
mov
jl
arpl
mov
std
cmova
pop
adc
out
out
jo
js
daa
or
in
(bad)
daa
cmp
inc
adc
fs
sbb
arpl
dec
mov
sub
mov
je
(bad)
int3
lds
sbb
repnz
mov
fdiv
or
cmps
arpl
xchg
mov
inc
cmp
lock
addr16
loopne
aaa
cli
lock
pop
in
lods
pop
xor
cmc
test
test
xchg
test
fdivr
sbb
and
mov
push
jno
aaa
pusha
int3
jne
(bad)
lock
(bad)
and
push
ret
sub
je
into
mul
imul
fcom
sub
dec
push
jo
mov
pop
ret
jmp
dec
and
lods
loope
cmp
pop
push
inc
cmps
mov
jb
ret
mov
jmp
movs
dec
jge
adc
cmp
enter
fidivr
cld
test
aad
retf
stos
out
cmp
sbb
xchg
cmp
sbb
out
lds
push
addr16
in
rep
xor
dec
iret
mov
inc
mov
jbe
xchg
jno
pop
cmps
aam
jmp
ins
push
sbb
enter
test
jne
xlat
or
sbb
mov
xchg
std
xchg
xchg
sub
mov
jb
mov
mov
test
pop
or
adc
jecxz
retw
sub
sysenter
cs
cmp
adc
xchg
push
cmp
adc
xchg
lea
das
outs
mov
fs
or
pop
movs
pop
cli
pusha
mov
lods
js
(bad)
sub
(bad)
pusha
jl
dec
stos
out
cmp
call
aaa
pop
xor
(bad)
aas
cld
pop
push
das
cmp
dec
sub
xchg
jle
dec
shl
cdq
pop
jecxz
mov
mov
mov
mul
mov
ins
xchg
in
out
dec
dec
arpl
xchg
cmp
push
aam
push
daa
push
xor
fdiv
inc
in
test
movs
enter
pop
inc
mov
icebp
movs
add
cmp
std
sbb
push
lds
xchg
pop
jecxz
cwde
xchg
and
mov
cwde
loop
movs
add
outs
lahf
push
stos
rcl
jo
mov
ds
push
sar
xchg
arpl
lahf
xor
jae
mov
dec
cmp
pop
popa
jle
clc
out
ins
(bad)
cmp
(bad)
in
jg
(bad)
repnz
or
std
aam
xchg
xor
out
or
or
imul
cdq
sti
pushf
pop
inc
sbb
pop
mov
dec
mov
xor
or
xor
adc
and
push
mov
bound
clc
ja
pop
(bad)
push
cmps
inc
jno
lock
or
sbb
cmp
push
jae
jmp
adc
lods
rcl
add
aam
fbld
mov
jno
sbb
pop
push
fsub
mov
jbe
add
call
or
push
ins
pop
enter
out
jmp
push
fidiv
ret
or
push
sub
retf
and
xchg
jmp
xlat
sub
rcr
inc
fwait
and
enter
ins
sub
and
movs
dec
in
cli
or
(bad)
pop
cmps
addr16
jmp
inc
popa
mov
pop
or
cmp
pop
sar
pop
or
or
fidiv
push
xchg
pop
aas
ins
sub
in
xchg
daa
or
pop
fdiv
jne
lods
repz
data16
sub
jl
add
stos
mov
aam
adc
loop
cmps
in
sub
enter
push
cld
mov
push
pusha
int3
(bad)
and
push
push
jmp
nop
fcos
and
cmp
ficom
test
mov
shl
jp
aad
outs
cdq
xor
aas
xor
stos
shl
sbb
jo
mov
adc
dec
dec
mov
movs
jmp
lahf
dec
je
fdivr
sub
cmc
add
jns
test
test
adc
sbb
lahf
mov
mov
cmc
jmp
(bad)
or
int3
sub
ins
leave
shufps
neg
iret
cmps
lods
add
jge
mov
mov
es
clc
push
jmp
sub
pop
dec
push
fsub
pop
jge
fist
or
inc
mov
cli
mov
mov
xor
push
pop
ins
imul
mov
pop
ja
or
push
jns
sub
jae
ror
pop
inc
pop
xchg
cmp
pop
mov
ins
hlt
and
add
ins
pop
out
stc
(bad)
cmp
or
and
or
repz
add
pop
sbb
sar
mov
les
in
mov
imul
dec
pop
xchg
xchg
pop
mov
adc
push
loopne
sbb
lds
mov
adc
daa
in
aam
mov
out
imul
pop
mov
mov
add
aas
ret
pop
test
retf
jno
xchg
fwait
aaa
stos
pop
leave
adc
xchg
repz
xchg
(bad)
out
xchg
sahf
push
ins
lahf
repnz
aas
int
movs
ret
sub
jne
dec
test
dec
push
push
sbb
out
mov
scas
jl
shl
sbb
mov
adc
xor
pop
hlt
(bad)
xchg
push
push
call
lods
xchg
in
cmc
mov
mov
push
xor
dec
leave
adc
cmp
xchg
mov
mov
mov
adc
sub
pop
pop
out
sbb
xchg
mov
inc
retf
rol
cmp
test
xchg
jg
(bad)
iret
(bad)
push
add
gs
jnp
aaa
pusha
les
sub
jne
shl
and
retf
test
inc
xchg
mov
xor
out
dec
rcr
aaa
mov
add
aam
push
xor
pusha
sahf
ret
mov
pop
push
inc
xlat
xor
jnp
mov
fadd
dec
popa
mov
sub
add
loope
and
scas
bound
jle
je
inc
repz
adc
push
dec
addr16
ds
mov
rcr
ja
push
mov
mov
push
cld
dec
push
xchg
std
mov
cmp
out
xor
loop
jbe
pop
repnz
inc
jmp
mov
or
mov
mov
je
inc
jmp
(bad)
cmp
mov
popa
add
xchg
mov
xchg
xor
push
mov
adc
popa
add
enter
inc
dec
ficomp
popa
mov
jae
sbb
inc
xchg
ds
cwde
inc
adc
pop
xor
add
fcmovnbe
sbb
ror
mov
into
jmp
and
pop
shr
sti
fadd
mov
or
xor
bound
sti
adc
adc
push
add
sahf
lods
dec
cmc
ins
cmp
cmp
adc
sub
mov
repz
retf
mov
pop
mov
adc
enter
inc
mov
pop
or
aad
das
xor
and
mov
adc
dec
push
add
(bad)
dec
dec
push
jno
dec
ins
push
call
(bad)
rol
sbb
add
cmps
jbe
jp
and
mul
loopne
(bad)
xor
jns
popf
mov
xchg
push
and
sahf
retf
jle
sbb
xchg
xchg
imul
sti
fwait
test
push
leave
test
iret
xor
mov
pop
push
mov
in
add
(bad)
imul
test
xchg
cmps
or
jo
jo
cdq
xchg
push
inc
adc
fisttp
jg
xchg
adc
test
les
push
dec
not
jl
lds
jmp
cmps
sbb
not
fst
pop
movs
push
sbb
sub
ss
and
pop
or
(bad)
minps
mov
loope
mov
ja
fsin
rol
mov
fiadd
sub
jae
xor
cwde
js
imul
call
loope
cmps
int3
outs
adc
adc
addr16
sub
(bad)
push
test
cmps
stos
in
inc
cmps
and
xchg
or
mov
fimul
iret
pop
adc
cwde
into
sbb
push
xor
outs
int3
push
data16
adc
inc
inc
dec
add
ficomp
mov
sahf
add
push
stc
and
les
pushf
cwde
rcl
test
shr
outs
push
push
inc
out
jb
pop
or
mov
lds
pop
movs
das
mov
movs
stc
neg
inc
rcr
inc
sub
out
pop
adc
xchg
mov
inc
cmc
mov
push
cdq
push
xor
jecxz
cmps
xor
mov
cmp
xor
mov
or
cmp
push
rcl
mov
mov
push
movs
scas
mov
inc
(bad)
xor
dec
jae
dec
mov
or
lock
push
js
xor
icebp
(bad)
xchg
out
pop
push
sahf
jnp
out
retf
in
inc
test
mov
imul
pop
lahf
add
mov
or
aaa
and
xor
push
cwde
mov
clc
or
mov
fwait
mov
ds
cmp
cmovno
cmps
ret
ins
adc
cmps
in
sbb
sbb
repnz
xchg
jno
and
outs
in
cld
retf
inc
lds
sub
movs
mov
call
pop
movs
fmul
and
sub
jg
add
stos
in
cmp
ins
fldenv
push
fistp
push
jl
retf
mov
xchg
leave
and
mul
mov
jo
ds
lods
mov
pop
ins
xchg
mov
sbb
lea
aad
aam
adc
rol
push
pop
cmps
mov
popw
shr
(bad)
jb
sub
fild
sar
adc
and
push
xor
ss
lea
test
iret
or
or
or
dec
dec
jg
cdq
mov
mov
or
sub
mov
pop
and
dec
pop
in
jns
push
sahf
jns
ja
xor
ffree
xlat
and
(bad)
push
fstp
dec
and
xor
mov
sub
xor
dec
xchg
dec
mov
cmp
xor
or
ss
enter
jmp
pop
or
inc
stos
mov
(bad)
sti
movs
cmps
mov
adc
pusha
sbb
jmp
and
cmp
je
ror
lds
daa
add
mov
sub
sbb
dec
inc
mov
sub
add
cmp
mov
movs
xor
sub
das
(bad)
icebp
xor
in
mov
mov
and
out
push
push
adc
inc
pop
cmp
mov
xchg
fld
push
(bad)
out
imul
(bad)
bound
pop
int3
dec
leave
xchg
pop
adc
in
in
ror
repnz
mov
mov
icebp
rcr
cmp
dec
mov
add
enter
mov
stos
mov
sbb
out
inc
sub
cmc
movs
jne
cmp
or
fild
push
into
lods
ret
retf
mov
call
mov
in
sti
mov
int
ja
and
sti
div
mov
fadd
loope
repz
inc
mov
fst
mov
mov
(bad)
mov
in
adc
retf
and
(bad)
cmp
dec
aam
fild
clc
mov
and
jbe
jg
sbb
repz
and
mov
cmp
andps
pop
movs
dec
leave
test
sub
nop
push
pop
ja
fld
dec
cwde
lock
mov
lds
mov
ins
repnz
or
dec
inc
sbb
and
adc
inc
sahf
fcmovnb
ins
mov
adc
add
in
dec
in
sbb
jne
aaa
cmp
push
mov
push
pop
sub
daa
xchg
pushf
push
pop
jle
scas
aas
cwde
mov
(bad)
leave
ficomp
shr
inc
and
imul
push
sub
retf
pop
push
in
xor
popf
(bad)
add
stc
cmp
mov
aam
(bad)
test
dec
or
mov
cmp
fwait
cdq
push
dec
xchg
shr
pavgb
nop
mov
jbe
fwait
aaa
xchg
loop
xor
daa
push
and
adc
shr
mov
lock
xor
sahf
adc
loope
xchg
inc
add
mov
dec
jae
es
push
retf
loop
push
lds
lahf
nop
push
rcr
int
fcmovu
clc
xchg
sub
fistp
outs
xchg
dec
pop
(bad)
mov
pop
test
scas
out
xchg
mov
mov
xor
addr16
mov
loopne
popa
mov
ret
mov
xchg
icebp
or
push
dec
cmp
adc
push
mov
fisubr
stos
enter
aas
fisttp
in
jp
jecxz
mov
stos
inc
js
in
clc
dec
jl
stc
je
iret
fisttp
fcomi
push
and
inc
outs
es
xchg
dec
xor
daa
dec
pop
fisub
jl
ds
sub
rol
jp
ss
mov
shl
clc
sbb
idiv
(bad)
inc
call
inc
mov
sub
or
icebp
lods
ins
into
sbb
pop
xchg
cmp
mov
inc
dec
dec
mov
and
push
push
or
mov
dec
jne
lock
adc
movs
pop
and
mov
adc
mov
xchg
xchg
movs
xchg
retf
pop
inc
loopne
sti
xor
and
fisub
cmps
or
mov
mov
(bad)
int
ret
mov
enter
push
pop
sub
xchg
aad
sub
push
cmp
aam
test
outs
add
xor
or
dec
xchg
rcl
inc
neg
xor
xor
jbe
mov
sub
icebp
cmc
jle
push
out
enter
adc
scas
lahf
stc
dec
ret
push
stos
mov
jg
mov
xchg
xchg
pop
pop
push
cmp
mov
cmps
sub
jo
scas
inc
imul
jne
pop
clc
ds
dec
stos
dec
push
movs
add
pop
pop
cwde
mov
add
je
sub
pop
cmp
xchg
stos
add
dec
xchg
sahf
push
dec
jl
adc
xlat
jno
mov
in
dec
clc
pop
dec
call
jmp
mov
jp
pop
xchg
add
sub
jnp
jae
lds
das
xor
repz
call
jecxz
lahf
fdiv
ret
push
pop
(bad)
push
or
imul
lea
movs
std
push
cmp
ja
xor
push
test
mov
lds
jns
and
(bad)
test
or
mov
mov
fisubr
or
test
ret
mov
or
test
in
pop
mov
xchg
fs
inc
retf
inc
mov
addr16
xchg
pop
cmp
xor
mov
inc
cld
lock
aam
push
or
hlt
and
jg
dec
push
jge
adc
sbb
or
lock
jmp
xor
dec
xor
or
mov
push
cld
xchg
inc
push
aas
jns
xor
into
xchg
add
nop
pop
dec
cli
xor
mov
inc
in
mov
xor
fcom
popf
and
cld
dec
shl
retf
jl
les
sub
and
dec
cli
iret
ja
xor
xor
out
jnp
dec
je
and
adc
movs
ins
rcl
xor
jg
das
xor
push
sbb
push
stos
dec
mov
icebp
cld
xchg
sbb
jg
(bad)
shl
xchg
dec
repnz
jp
daa
mov
and
test
fisttp
fld
xlat
pop
pop
cmp
leave
pop
sbb
push
clc
mov
hlt
cmp
cmps
into
popa
jno
dec
stc
test
adc
pushf
sbb
push
fs
fcomp
mov
mov
mov
int3
xchg
lock
push
scas
mov
add
mov
mov
in
jo
into
inc
inc
cmp
sbb
pop
push
xor
mov
xor
cmp
push
add
(bad)
lock
pushf
jmp
shl
jne
adc
fimul
adc
xchg
mov
or
adc
cmps
cs
adc
or
shl
sahf
or
sub
je
jno
loope
mov
and
cmp
int3
jmp
fadd
ret
pop
pop
push
and
pop
mov
pop
mov
(bad)
xchg
repz
stos
dec
addr16
mov
push
(bad)
out
test
jns
lea
dec
jg
mov
repz
push
push
push
jo
scas
push
mov
sub
addr16
jb
or
mov
mov
cmc
cmp
adc
test
cmps
sahf
pop
(bad)
mov
ja
neg
ss
pop
repz
sbb
cmp
(bad)
test
shufps
pop
mov
leave
xchg
rcl
test
mov
sbb
xor
setp
mov
mov
and
jbe
shl
inc
mov
retf
fucomip
mov
push
mov
cli
add
out
mov
mov
fwait
stos
jns
jbe
mov
mov
(bad)
iret
gs
imul
retf
sbb
sbb
inc
inc
or
ins
stos
sub
jo
inc
and
jmp
xchg
cmp
cmps
jle
push
arpl
in
xchg
pop
adc
scas
icebp
or
shr
inc
and
(bad)
fs
nop
push
cmp
or
jnp
fwait
cld
lods
adc
inc
(bad)
xlat
dec
sti
dec
ret
jl
add
mov
xchg
imul
into
ja
lea
jne
adc
es
jns
and
sub
ins
aam
pop
pop
retf
jecxz
pop
xor
pop
in
mov
stos
loopne
scas
jmp
(bad)
jb
leave
xor
clc
cmp
lahf
xchg
dec
push
jae
and
fsubr
add
push
push
fs
xchg
lahf
fnsetpm(287
mov
rcr
movs
mov
lea
or
jmp
add
add
(bad)
and
sti
cld
xor
dec
and
inc
movs
lahf
(bad)
data16
or
fisttp
xchg
xchg
push
sar
jl
rcl
hlt
das
not
mov
(bad)
test
sahf
xor
out
test
ret
push
addr16
mov
dec
mov
xchg
mov
xchg
add
adc
fld
add
out
leave
or
inc
fild
sahf
int3
mov
jb
sub
(bad)
cdq
aaa
addr16
je
sbb
inc
pop
jl
scas
not
or
lds
add
mov
sub
fnsave
stos
jmp
inc
mov
sbb
or
inc
stos
sbb
add
aas
addr16
xlat
popa
dec
fwait
or
mov
inc
sbb
sbb
push
popa
scas
call
dec
hlt
icebp
es
cwde
push
mov
call
movs
lahf
cwde
mov
clc
(bad)
stos
ret
jns
pop
fwait
cmps
cmp
lds
xor
ins
call
je
inc
xor
mov
call
jno
mov
pushf
lahf
mov
mov
xor
pusha
adc
xor
cmp
(bad)
xor
cmp
cmp
pop
and
retf
mov
es
push
push
dec
mov
jmp
cwde
add
in
xchg
retf
push
stos
lahf
dec
dec
add
mov
in
not
xor
stc
inc
fmul
sti
add
ret
lea
sub
pop
xor
xchg
dec
cmp
inc
xor
or
cmovae
mov
mov
mov
xchg
mov
add
es
jmp
pop
adc
test
sub
push
add
shl
mov
xchg
push
push
mov
add
push
jge
call
push
int
xor
js
shl
imul
cmp
cmps
jmp
adc
mov
mov
neg
mov
mov
stos
pop
loopne
leave
jl
mov
pusha
(bad)
pop
fld
push
jmp
dec
or
sbb
xchg
xor
(bad)
daa
fild
mov
shr
cmp
aaa
xchg
mov
dec
xlat
rcl
sub
xchg
in
stos
mov
sar
jnp
mov
push
mov
jl
mov
sbb
bound
(bad)
fsub
aad
inc
add
mov
pusha
mov
add
dec
mov
jo
dec
or
mov
jp
and
out
mov
jp
cmp
sub
nop
add
push
xor
imul
and
out
daa
fild
mov
fwait
xchg
or
test
or
xchg
xchg
(bad)
fdivr
sub
js
dec
mov
and
cmp
iret
(bad)
es
shl
pop
push
mov
cs
xor
cs
cmp
fisttp
mov
out
out
leave
sbb
lds
and
in
mov
(bad)
xchg
push
pushf
jno
lock
pusha
mov
add
pushw
jecxz
pop
xchg
add
(bad)
lods
cmp
lea
xchg
mul
(bad)
xchg
in
stos
out
or
xor
adc
js
fwait
xchg
mov
mov
cmps
jge
outs
jbe
in
in
or
mov
addr16
stos
mov
pushf
(bad)
rcl
push
clc
dec
mov
mov
je
pop
xchg
sbb
leave
jo
enter
popa
push
out
in
push
mov
test
ins
test
retf
dec
sub
cmps
mov
jmp
or
dec
xor
loopne
test
sub
or
dec
out
xor
rcl
cli
aas
add
add
das
inc
jbe
jo
pop
inc
xor
sbb
cmp
scas
inc
mov
push
test
gs
in
add
inc
xchg
imul
add
push
fistp
or
nop
aas
les
mov
je
dec
and
add
and
aad
bnd
add
xchg
jnp
jno
sub
scas
dec
mov
xchg
mov
mov
jmp
movs
sub
jecxz
and
ds
mov
stos
fmul
aas
jmp
inc
ret
or
leave
sub
xchg
sub
popf
fiadd
(bad)
mov
and
ins
mov
test
addr16
lods
pop
cdq
and
into
stos
aad
sbb
sub
add
push
mov
scas
mov
fs
jmp
cmp
inc
adc
retf
and
daa
add
xchg
inc
test
mov
fistp
or
push
xor
or
das
aas
add
add
loop
ret
stc
lods
shl
jo
loopne
scas
fwait
adc
test
xchg
daa
pop
aad
ins
imul
stos
xor
dec
in
jecxz
inc
mov
imul
xor
packssdw
xor
jne
pop
call
stos
sub
push
inc
fimul
movs
mov
cs
(bad)
shr
or
adc
jl
jmp
xor
scas
cmps
lahf
imul
inc
mov
xchg
pushw
adc
call
dec
sub
add
add
dec
pop
rcl
(bad)
sahf
or
mov
mov
pop
daa
arpl
mov
ret
(bad)
aam
cmps
repnz
jmp
push
mov
inc
add
ror
mov
ret
jl
mov
cmps
fldenv
jae
jae
jne
or
mov
in
fisttp
std
mov
outs
aam
aam
in
and
sar
add
mov
push
imul
js
adc
or
scas
(bad)
movs
ins
popa
adc
jo
inc
scas
fstp
(bad)
fdivr
or
out
shr
out
jmp
mov
jp
stos
nop
mov
fcmovnu
cmc
loopne
jmp
pop
push
test
test
add
(bad)
jmp
es
stos
repnz
mov
loope
stos
mov
iret
mov
in
movs
push
(bad)
popa
pop
popf
loop
push
fsub
cmp
cmp
push
dec
xor
sub
xchg
std
(bad)
and
popa
mov
or
(bad)
clc
jecxz
and
mov
mov
jmp
int3
push
push
mov
out
xor
ror
push
cmc
and
lods
xlat
retf
pushf
adc
into
xchg
push
push
mov
cmp
lods
lea
cmp
shl
into
cdq
addr16
or
mov
leave
mov
std
xchg
in
sub
in
sbb
mov
inc
adc
dec
mov
push
int
(bad)
mov
ins
in
cli
sbb
pusha
leave
(bad)
and
fstp
leave
cmc
and
(bad)
int
mov
call
sbb
xchg
faddp
(bad)
pop
inc
test
sub
push
xchg
sub
or
nop
retf
dec
jle
aaa
ret
jns
pop
out
jne
cmp
or
adc
stos
pop
add
adc
push
mov
lock
lods
xchg
mov
cmp
mov
sbb
sub
cmps
xor
sti
mov
repz
cmp
push
fmul
xlat
pop
shr
adc
jb
lahf
fsub
xchg
in
add
adc
sub
mov
movs
mov
ret
int3
es
and
scas
or
and
cwde
mov
loopne
fsubr
cmps
(bad)
jp
xor
mov
scas
pop
jo
test
xor
or
(bad)
fsubr
pop
je
nop
fcomp
(bad)
sub
scas
cmps
stos
ret
mov
ja
push
ret
bound
sub
outs
push
imul
enter
aam
push
mov
mov
push
inc
cmps
aam
ss
pop
add
es
sub
mov
pop
adc
or
mov
jmp
push
movs
jge
inc
inc
lds
cld
and
jbe
xor
cmp
mov
dec
pusha
fld
or
sub
mov
sbb
in
dec
adc
xchg
mov
mov
and
pop
mov
ret
pusha
mov
lods
ss
mov
mov
int
(bad)
fsub
mov
pop
and
mov
lea
push
xor
xor
shl
movs
mov
scas
jge
mov
jo
(bad)
ss
out
outs
mov
outs
rcl
int3
add
leave
sti
ficom
(bad)
cmps
arpl
out
or
mov
les
sbb
push
inc
adc
push
movs
pop
pop
or
mov
or
inc
in
dec
call
sub
outs
rol
das
ret
outs
ins
sbb
cli
xchg
push
mov
sub
arpl
inc
sbb
jp
mov
into
lds
out
xchg
adc
clc
fcomp
sahf
dec
in
pop
pusha
(bad)
dec
jbe
adc
test
sub
or
ins
push
cdq
fwait
inc
sub
mov
sub
pop
cli
mov
mov
into
mov
out
retf
inc
dec
fiadd
inc
aas
imul
inc
xchg
test
(bad)
sub
xlat
les
call
xchg
mov
(bad)
mov
ja
das
(bad)
xchg
call
cmc
icebp
sub
mov
sbb
jo
into
(bad)
sub
dec
jecxz
ja
push
add
adc
popa
out
pop
xor
cmp
or
xchg
sbb
(bad)
sub
sbb
push
adc
ds
pushf
dec
(bad)
sub
pushf
out
ret
aaa
mov
hlt
xchg
jno
jne
pop
cld
mov
xlat
adc
ins
(bad)
fbstp
(bad)
sub
(bad)
scas
cmp
jmp
rcl
popa
jecxz
fisub
sub
mov
lds
jae
and
mov
sbb
xchg
bound
cmc
les
call
bound
add
adc
jnp
movs
push
push
pop
jl
jle
sub
xchg
pop
popa
mov
ins
div
mov
mov
lock
into
sbb
addr16
dec
pop
pop
push
pop
(bad)
pop
popf
pusha
ins
rol
push
sub
inc
inc
adc
pop
cmc
sub
push
outs
hlt
pop
mov
push
fiadd
add
jb
or
push
lds
lock
icebp
pop
(bad)
out
in
stc
mov
aam
sub
inc
mov
stos
jp
xor
inc
les
sub
repz
push
mov
and
push
sub
nop
ret
xor
xchg
add
add
lock
(bad)
out
sbb
aad
or
sub
shl
stos
in
adc
dec
mov
jg
dec
pop
add
sbb
loop
add
pop
test
ror
out
xchg
xchg
aas
add
jl
xchg
outs
mov
dec
sti
xlat
pop
inc
xchg
xchg
jns
adc
or
imul
pop
mov
es
and
and
xor
les
dec
inc
mov
(bad)
mov
and
xor
xchg
push
inc
or
pop
cli
bound
mov
cmc
add
mov
adc
sub
je
pushf
mov
outs
outs
sbb
mov
jno
or
pop
adc
xchg
or
fcmove
call
repnz
shl
aad
sub
mov
sub
add
retf
push
pop
jg
icebp
loopne
inc
aad
icebp
cli
and
xchg
inc
or
fs
fcom
inc
mov
outs
or
dec
inc
inc
and
mov
out
outs
repnz
mov
push
test
mov
mov
sahf
test
push
test
cmp
clc
pop
clc
push
push
jl
out
mov
xchg
mov
shl
test
fbstp
push
pop
pop
ret
add
inc
cmp
dec
pop
scas
and
add
ins
push
xchg
int3
xchg
push
inc
(bad)
sti
(bad)
fsub
fwait
adc
mov
pop
in
jae
in
and
out
mov
enter
cmp
pop
and
pusha
fmul
xlat
jmp
clc
dec
popa
aad
aam
adc
call
fwait
and
nop
push
call
cmps
jb
adc
call
les
lea
mov
int3
pop
ins
js
pop
pusha
ss
loopne
inc
ins
and
js
dec
jp
adc
(bad)
in
retf
mov
xchg
jne
or
inc
jae
push
jmp
mov
fs
mov
jne
rcl
sti
inc
je
ins
xchg
mov
sub
jl
pop
inc
xchg
cdq
mov
in
inc
sub
sbb
int
mov
imul
sub
push
icebp
and
pop
mov
adc
sar
movs
arpl
mov
mov
pop
mov
(bad)
dec
pop
ins
push
mov
scas
scas
jmp
add
(bad)
cmps
mov
push
xor
mov
xchg
sub
jo
fmul
call
out
dec
dec
sti
and
(bad)
sub
stos
dec
(bad)
jmp
fsubr
in
or
aas
popa
mov
call
aad
sub
push
mov
adc
add
jae
es
xchg
mov
or
xor
scas
push
mov
mov
pop
std
inc
enter
icebp
sbb
jecxz
into
(bad)
idiv
in
cmp
test
mov
hlt
lods
xchg
stos
stos
lea
push
imul
out
(bad)
vpslld
(bad)
add
sub
mov
shl
sbb
push
mov
call
leave
push
lahf
repz
sub
add
sbb
mov
xchg
xchg
ja
jl
or
dec
push
icebp
or
xor
push
sbb
and
iret
cld
mov
sbb
loopne
mov
ja
(bad)
cdq
xchg
int3
xor
in
fmulp
inc
cmps
xchg
pop
jb
fcmovne
retf
inc
fwait
out
imul
shl
outs
xlat
push
cmps
cmp
cmp
mov
cmc
or
sbb
test
sbb
(bad)
push
imul
repz
js
xor
jg
ret
push
test
xor
mov
lds
es
daa
sbb
push
sbb
test
inc
push
sbb
sbb
xchg
pop
cdq
mov
sbb
xchg
(bad)
xchg
mov
loop
addr16
cmps
out
or
retf
add
(bad)
fadd
xchg
out
or
cmp
or
and
cld
fsubr
push
pusha
jmp
and
cmp
popf
push
or
retf
movs
std
pop
test
jge
retf
ret
xor
pop
mov
sbb
int3
ret
mov
in
and
sbb
pop
add
jle
sbb
xchg
in
loopne
fld
loopne
push
dec
push
aas
(bad)
mov
idiv
aad
pop
add
sbb
mov
cld
ins
sub
xor
add
mov
jmp
jns
pop
sar
add
rcl
or
scas
pop
or
xor
popa
adc
mov
mov
sahf
jge
add
jecxz
into
cmp
fsub
in
xchg
jle
addr16
mov
and
jl
add
or
addr16
push
fld
pop
aas
mov
pop
push
inc
jle
push
sbb
mov
hlt
test
mov
les
pusha
pop
mov
fist
ins
adc
and
mov
jae
leave
lahf
dec
cmp
xchg
ins
rcr
xchg
xchg
jbe
bound
mov
bound
cmps
ret
mov
(bad)
xchg
lea
fild
mov
dec
dec
cdq
and
out
xchg
daa
popf
scas
retf
xor
jmp
outs
mov
sbb
sub
xchg
push
test
pop
xor
xor
or
jmp
jo
mov
mov
inc
xor
push
mov
jne
add
fwait
cmp
cwde
mov
retf
mov
cmps
movs
pop
shl
repnz
mov
lods
or
and
push
add
push
(bad)
xchg
out
outs
dec
add
dec
dec
fist
inc
sti
pop
and
stos
xchg
jb
mov
in
(bad)
in
cdq
dec
xor
push
enter
push
in
cmp
mov
inc
out
fisttp
aaa
mov
add
and
jmp
push
inc
icebp
shr
enter
cmp
arpl
xchg
es
and
lds
pushf
and
jp
inc
outs
pusha
aam
xchg
loop
mov
call
add
cli
in
or
push
cmp
mov
sbb
sub
bound
push
aad
pusha
jl
mov
setp
xchg
lods
leave
cmps
mul
xor
mov
dec
dec
add
cmp
and
push
jmp
sete
and
std
adc
nop
test
add
sar
jg
pop
cmp
jmp
std
or
mov
shl
je
(bad)
pop
stos
pause
mov
fdiv
push
ss
dec
push
or
test
cli
sub
loop
fadd
cwde
pop
scas
push
fwait
and
test
jae
jle
std
dec
or
aaa
mov
cmp
(bad)
icebp
test
in
call
and
xchg
into
inc
fs
jns
add
pop
jp
cmp
adc
sbb
aam
xor
xor
jno
pop
push
xchg
repnz
std
in
retf
int
ficom
xor
and
lds
dec
shl
in
or
push
in
mov
les
ret
lahf
lock
lea
sub
jnp
mov
jmp
inc
popa
adc
out
pop
lock
inc
loop
adc
push
mov
xchg
(bad)
retf
pushf
in
pop
sbb
dec
popa
xchg
sbb
jmp
or
push
shl
test
test
jl
stos
test
les
out
(bad)
(bad)
daa
out
icebp
pop
cwde
mov
and
icebp
out
xlat
xchg
(bad)
sbb
or
pop
mov
xor
inc
xor
pop
xchg
sbb
pop
fwait
inc
in
mov
shr
cwde
or
adc
sub
les
push
iret
mov
jno
mov
test
mov
mov
fidiv
pop
mov
mov
pop
dec
mov
(bad)
ficom
sub
push
(bad)
jmp
test
test
test
ficom
or
mov
inc
stos
and
stc
mov
cmc
xor
inc
mov
mov
xchg
(bad)
push
(bad)
loope
in
gs
jmp
adc
test
mov
ficom
xor
inc
adc
push
sbb
xchg
gs
aam
push
aaa
sbb
mov
mov
hlt
pop
cmp
call
cdq
bound
popa
add
test
cmps
push
pop
mov
mov
(bad)
mov
mov
jnp
mov
adc
inc
or
add
retf
adc
retf
adc
stc
jg
xor
fdiv
push
add
xchg
lock
lock
cli
cmps
es
fbstp
adc
sub
dec
pop
fimul
test
in
ret
xor
xchg
jae
fisttp
ins
cdq
repz
cwde
test
dec
pop
jne
mov
sbb
movs
push
pop
icebp
mov
out
xor
adc
cld
dec
xchg
mov
sbb
cs
xor
cli
xor
in
mov
xchg
test
or
cwde
call
imul
into
cwde
sub
jmp
add
int
inc
sti
sub
test
out
push
stc
or
xor
fwait
retf
and
jmp
cld
push
cmp
and
in
loopne
xchg
jmp
aas
arpl
mov
ins
xor
sahf
ja
jecxz
out
push
pop
fcmovnb
lds
mov
jo
xor
inc
mov
mov
jle
add
push
pop
mov
jns
xor
or
mov
js
(bad)
ror
or
pop
mov
out
adc
cmp
xchg
jo
repz
sbb
stos
(bad)
pop
jmp
rol
xchg
xor
sbb
jmp
jge
sahf
ror
shl
imul
fild
xchg
imul
add
cmp
(bad)
fdiv
enter
lods
jmp
int3
das
(bad)
jg
xchg
push
mov
dec
push
mov
pop
loope
push
lock
push
sub
xor
mov
jmp
push
pop
add
stos
add
test
inc
dec
mov
mov
lahf
xor
mov
xchg
xor
xor
aad
xchg
das
cmc
cli
jg
into
or
mov
ins
daa
in
jg
jo
rcr
or
movs
jle
xchg
pop
add
dec
enter
sahf
int3
out
add
nop
mov
call
push
call
imul
xor
pop
add
in
aas
mov
call
int
in
push
or
in
mov
xor
ins
aaa
leave
mov
xchg
push
xchg
hlt
test
int
or
shl
aaa
xchg
out
or
addr16
sub
xor
std
dec
neg
out
or
or
loope
nop
dec
test
xchg
hlt
ja
mov
or
ds
push
pop
sar
sub
(bad)
std
pop
and
xchg
addr16
test
add
xchg
cs
mov
jle
(bad)
and
jle
sar
jmp
jae
iret
inc
pusha
push
or
jo
outs
iret
call
adc
imul
inc
jge
mov
xchg
lea
pop
cdq
fmulp
jg
cs
loopne
das
fisub
shr
fcomi
aas
and
fnclex
(bad)
lods
mov
rcl
test
sub
xchg
arpl
mov
addr16
push
pop
pand
stc
shl
lahf
out
cwde
retf
mov
scas
dec
ret
jbe
inc
retf
cmp
add
lock
pop
or
cmc
cmp
cmp
pop
pop
fwait
movs
ret
jmp
mov
mov
jmp
lods
jmp
not
stos
add
je
data16
mov
retf
out
movs
out
int
sbb
js
cld
mov
adc
sbb
pop
neg
jae
fcomp
std
mov
nop
outs
push
mov
mov
and
fadd
rol
xor
xchg
jnp
jle
es
add
mov
pop
shl
push
mov
add
mov
rcr
xor
pop
jb
out
mov
push
outs
outs
xor
inc
cmc
pop
pop
sbb
cmp
loopne
and
xor
fwait
sti
mov
std
ds
push
push
push
cmp
xchg
loop
test
fcom
js
or
ins
xchg
mov
stc
(bad)
inc
inc
push
mov
and
pop
lea
(bad)
push
hlt
xchg
xchg
ror
fwait
push
xor
dec
sub
inc
loope
cwde
mov
jl
(bad)
ins
and
cmps
or
ficom
inc
adc
inc
aad
and
push
enter
pop
mov
cmp
jne
push
ret
inc
sbb
sub
mov
mov
add
xor
inc
not
mov
cmps
xor
icebp
jns
cmp
(bad)
outs
xor
fist
cmp
test
imul
fidivr
and
push
(bad)
movs
into
xlat
push
in
pushf
mov
mov
mov
(bad)
or
sbb
ds
mov
push
lods
retf
sbb
sub
dec
ds
xor
xor
pop
jecxz
mov
inc
imul
cmp
push
call
rcr
sbb
bound
xlat
sub
ficomp
dec
outs
int
movs
mov
scas
in
or
push
push
aam
mov
jecxz
mov
movs
mov
push
outs
pop
sar
mov
sahf
inc
sti
and
sub
into
cli
push
xor
test
mov
push
push
push
push
push
sub
push
and
push
and
mov
out
mov
loopne
je
fwait
cmps
jp
fistp
inc
lods
mov
outs
ja
adc
mov
enter
xor
fimul
cmp
jge
cmps
enter
sub
data16
stc
enter
jns
repz
gs
and
lock
jle
int3
lock
aas
(bad)
ja
retf
cs
aas
nop
mov
repz
cmp
xchg
(bad)
js
aaa
in
loopne
sbb
outs
and
or
cmp
adc
add
in
stos
jge
jecxz
add
call
fisttp
cld
and
cmp
and
fadd
push
or
mov
ja
inc
pop
cld
clc
je
in
push
in
add
loope
dec
pop
cli
xor
jbe
outs
add
in
jb
jle
mov
rcl
ins
sti
jmp
mov
pop
xchg
(bad)
jge
adc
repz
sbb
mov
movs
adc
mov
cmps
xchg
push
jg
mov
gs
pop
mov
test
mov
(bad)
dec
jnp
push
bound
movs
ja
ins
add
or
push
ins
into
mov
adc
xchg
jne
lods
cs
out
hlt
dec
cmp
test
out
add
push
out
push
in
mov
xchg
dec
popa
pop
mov
push
mov
add
clc
lahf
pop
stos
and
xchg
push
pop
adc
fdiv
icebp
sub
ins
iret
sbb
arpl
pop
mov
(bad)
pop
daa
xchg
mov
xchg
ror
call
xor
int
xchg
inc
in
and
stos
leave
adc
inc
mov
popa
das
inc
xchg
ins
adc
sbb
adc
stos
mov
xchg
or
cmp
cmp
in
fadd
call
ss
mov
xor
xchg
adc
mov
out
scas
xlat
and
pop
fwait
test
(bad)
ror
bound
in
lock
popf
aad
xchg
mov
fs
out
cs
jnp
pop
push
shl
sbb
arpl
xor
or
es
fisub
adc
retf
adc
mov
sub
pop
adc
(bad)
(bad)
jnp
aad
cmp
sub
jp
or
fwait
mov
test
stos
fadd
fidivr
sub
repnz
sub
xchg
jo
sar
jmp
imul
(bad)
clc
xor
mov
sbb
pop
int3
outs
push
je
xor
loope
mov
mov
bnd
fnstenv
(bad)
adc
xchg
retf
mov
mov
sbb
aad
and
leave
addr16
jle
add
mov
imul
add
loop
cli
outs
sti
inc
out
clc
push
jmp
xlat
(bad)
and
cmp
mov
dec
jmp
dec
(bad)
cmp
pop
cld
mov
data16
test
sbb
inc
hlt
cmps
enter
mov
in
pop
mov
pop
fcomp
ins
es
mov
dec
cld
fisubr
mov
jl
loope
loope
stos
fisubr
leave
ret
or
loopne
pop
push
adc
mov
add
add
or
dec
shl
imul
mov
iret
adc
fnstcw
sar
add
ss
cmp
ret
jge
(bad)
call
mov
shl
pop
shl
push
imul
in
leave
pop
fwait
pop
or
sahf
out
pop
xchg
in
jbe
es
mov
std
inc
inc
gs
shr
rcl
sub
sbb
fiadd
mov
jno
pusha
retf
inc
pop
mov
jl
fdiv
add
shl
fisttp
sbb
or
rcr
pusha
mov
mov
cmps
addr16
movs
mov
mov
inc
repnz
stos
sti
push
push
pop
rol
retf
dec
sub
test
rcr
adc
mov
sar
daa
sub
clc
(bad)
add
jae
lods
cld
sbb
jecxz
mov
ins
and
add
sbb
jb
xor
mov
fimul
inc
out
push
and
pop
fld
(bad)
scas
dec
push
loopne
das
sbb
loope
(bad)
out
dec
pushf
and
loop
xchg
shl
lock
pop
dec
arpl
sti
mov
inc
(bad)
push
adc
push
xor
xor
mov
lods
xchg
in
cmp
mov
data16
dec
aad
xor
or
cmp
add
das
inc
xlat
cdq
jp
sahf
arpl
call
loopne
sbb
lock
sub
add
inc
mov
out
fistp
pop
pop
call
inc
popa
jecxz
and
xchg
or
call
mov
sub
sbb
pop
inc
pop
sbb
out
call
dec
aad
mov
push
jmp
aam
(bad)
les
or
and
jnp
pop
mov
add
xchg
cmc
mov
mov
sbb
mov
sbb
arpl
test
fld
xchg
adc
adc
xchg
pushf
stc
jmp
pop
(bad)
stos
push
les
inc
mov
iret
sub
jae
xchg
nop
rcl
arpl
test
pop
aaa
add
mov
dec
hlt
dec
enter
(bad)
es
fisubr
lahf
fisub
cmp
jnp
in
fld
movs
imul
fild
out
mov
outs
popa
dec
stos
(bad)
sbb
icebp
pop
arpl
outs
or
push
push
int3
(bad)
imul
gs
pusha
aaa
rol
xchg
mov
out
mov
cmp
lock
xor
xor
retf
scas
test
sbb
pop
loope
test
jle
mov
add
retf
push
jecxz
pop
push
add
pop
xchg
mov
std
in
dec
xchg
pop
xchg
in
xchg
dec
test
mov
dec
push
push
adc
icebp
in
test
pop
ret
mov
inc
xor
and
outs
and
enter
jo
xchg
and
dec
popa
retf
mov
jmp
xor
xor
in
or
int3
mov
ret
pop
or
sbb
es
cmp
push
lods
mov
jns
mov
push
test
adc
inc
pop
mov
jbe
cld
aaa
jmp
xchg
sbb
hlt
jg
and
out
sbb
in
mov
call
idiv
pop
sbb
test
sbb
iret
inc
mov
adc
jmp
loope
aaa
pop
cmps
cs
add
ret
fistp
inc
rcl
popf
cmp
sub
mov
mov
xchg
out
repnz
leave
imul
jmp
into
inc
lods
mov
jle
xrstors
xchg
pop
hlt
sbb
mov
xchg
imul
or
mov
cmp
fucomi
test
in
xor
ins
scas
add
ret
imul
movs
fwait
je
adc
stc
data16
retf
inc
ins
and
mov
test
rol
sti
mov
fstp
sar
fidiv
inc
pop
cli
lock
shl
and
jmp
pusha
add
dec
(bad)
or
mov
push
sub
ror
and
repz
adc
xor
iret
(bad)
call
retf
aas
scas
push
dec
xor
xchg
mov
xor
cmc
push
aam
inc
jne
shr
aam
inc
xor
or
sahf
pop
loope
clc
cmp
push
cmp
push
xor
jecxz
push
rcl
jo
test
lods
arpl
ficom
pop
push
sub
int3
(bad)
test
hlt
in
fninit
int3
adc
imul
cld
call
dec
pop
xchg
jge
pop
pop
and
(bad)
int
or
xlat
add
out
ret
xor
stc
mov
shr
xchg
mov
xor
sbb
sub
pop
mov
(bad)
dec
arpl
xor
cmp
xor
jmp
out
add
xor
dec
popa
addr16
dec
pop
mov
ss
mov
stc
push
dec
mul
test
mov
push
sti
out
jg
rcl
shl
dec
adc
rol
js
jle
es
dec
or
cmp
lahf
cmps
mov
xchg
pop
call
xor
sahf
cmp
sar
mov
jg
addr16
out
test
xchg
into
push
(bad)
sub
rcr
inc
cmp
punpcklbw
or
mov
popf
xchg
lods
mov
sub
(bad)
leave
test
shl
xchg
push
gs
scas
push
sub
fwait
icebp
in
jle
pop
inc
out
dec
mul
xor
fcmovb
xchg
dec
sti
lods
dec
mov
es
and
mov
jbe
pop
fstp
mov
jmp
mov
xchg
dec
int
mov
popa
lock
or
fst
ja
pop
sub
sar
xchg
jb
test
scas
push
jmp
(bad)
imul
loop
add
mov
cmp
or
(bad)
aad
dec
or
hlt
inc
sub
lea
sbb
mov
xor
jne
nop
push
xchg
popf
jecxz
out
mov
cmp
aas
in
div
dec
ret
or
xor
fisubr
sub
xchg
mul
jl
aad
and
xchg
dec
imul
pop
das
out
in
cmps
and
push
jb
mov
mov
mov
icebp
mov
pop
lods
cmp
ret
adc
int
xchg
lods
dec
mov
inc
push
xchg
push
add
test
mov
cdq
sbb
add
xlat
mov
ficom
cmps
ret
fwait
xor
mov
aaa
jo
adc
dec
ins
cwde
inc
and
mov
sti
(bad)
cli
mov
cmp
clc
out
xor
int
ror
arpl
fld
xchg
xor
inc
mov
jmp
stc
pop
push
and
xor
mov
loop
icebp
mov
cli
mov
jnp
fbstp
xor
dec
pop
in
into
fst
fcmovb
add
imul
movs
cmp
(bad)
test
xchg
pop
adc
test
dec
jo
mov
das
jno
fcmove
xchg
lock
ins
jmp
call
enter
or
movs
pop
xor
ret
xchg
dec
adc
and
push
mov
adc
in
pop
adc
hlt
jmp
mov
outs
cdq
cmp
jae
push
daa
out
lds
mov
sahf
cmp
mov
jne
and
jl
jmp
xor
mov
mov
ds
jl
idiv
mov
add
(bad)
shl
inc
adc
fistp
mov
pop
lods
pop
jge
add
jmp
mov
into
jle
add
cmp
(bad)
push
int3
dec
mov
pop
mov
stc
or
call
inc
je
dec
cmc
sub
sahf
ret
popa
fst
fst
jb
add
push
fadd
arpl
ret
add
in
pop
add
xchg
push
neg
xchg
xchg
(bad)
scas
retf
adc
inc
pop
clc
mov
push
addr16
mov
jp
jmp
repz
leave
loopne
or
stc
add
frstor
cmps
dec
test
push
adc
pop
fst
out
inc
ins
sub
push
or
loopne
inc
push
out
cmp
cmp
loop
xchg
out
pushf
or
scas
mov
mov
push
pop
call
fiadd
mov
and
das
xor
iret
and
call
mov
xor
lds
mov
xchg
inc
or
cmp
enter
sub
adc
sbb
lock
fiadd
xor
dec
mov
imul
shr
and
leave
jbe
add
sub
enter
cmp
fistp
int3
ja
lock
sub
dec
inc
les
stos
test
call
loopne
xchg
mov
out
xchg
repnz
icebp
xchg
retf
cmps
das
jno
push
jge
int3
jmp
push
scas
repnz
cmp
push
mov
leave
dec
sub
mov
cli
and
iret
lea
iret
inc
std
mov
enter
or
pop
js
lock
mov
aam
xchg
cmc
adc
mov
shr
push
int3
ins
jecxz
mov
js
outs
dec
sbb
inc
mov
pop
mov
and
rcr
stc
push
add
ins
std
outs
imul
xchg
push
out
cmps
jecxz
xor
sub
push
fs
or
dec
inc
lock
fidivr
aam
lock
pop
mov
jo
movs
or
adc
loop
cmp
mov
jb
adc
sub
adc
cwde
sbb
(bad)
xchg
cmp
xor
adc
sbb
sub
loope
xlat
out
in
in
(bad)
mov
push
sub
neg
xchg
mov
sbb
and
mov
adc
mov
dec
xchg
and
aaa
xor
mov
cs
rcl
stc
inc
repnz
xchg
outs
sbb
ja
ins
cmp
dec
mov
dec
xchg
test
icebp
pop
cmp
mov
mov
test
sar
jge
mov
xchg
pop
xor
jo
mov
(bad)
popa
hlt
push
pusha
add
jno
jmp
cld
mov
jae
test
das
pop
icebp
fisubr
fistp
sbb
sahf
movs
xchg
sar
dec
fnstcw
add
push
stc
xchg
push
(bad)
lds
add
add
(bad)
lahf
ret
adc
ret
in
cs
cmp
sbb
shl
es
shl
add
cmp
fdivrp
pop
loopne
xchg
leave
imul
or
add
fs
enter
scas
push
sub
xor
mov
inc
gs
sbb
icebp
movs
fimul
cmc
xor
adc
aas
mov
dec
cdq
sbb
arpl
imul
cs
cmp
ins
sti
test
adc
fiadd
jge
gs
rcr
push
xchg
aas
mov
xor
inc
sbb
pop
pop
sbb
jl
(bad)
adc
sub
xchg
or
pop
jne
jne
stc
pop
dec
fnstenv
mov
in
retf
cdq
inc
out
inc
sub
call
fsub
repz
or
popf
cmp
dec
jecxz
add
mov
ins
cdq
fs
das
loop
cmps
daa
js
jl
jge
repnz
addr16
or
and
sahf
ret
and
mov
jnp
pop
xor
outs
loopne
adc
add
dec
inc
(bad)
gs
retf
std
mov
(bad)
mov
cmps
in
mov
push
(bad)
out
mov
addr16
and
jp
les
cdq
push
dec
fbld
aaa
aam
or
aam
scas
sbb
dec
sub
jae
push
or
loop
mov
imul
push
out
in
push
jnp
mov
les
jge
jge
or
(bad)
adc
xor
mov
out
adc
outs
mov
inc
aaa
fld
fxch
les
push
repnz
add
pop
lods
clc
std
cli
cmp
sub
shr
sti
jle
sub
push
cmp
popa
das
ror
ficomp
jge
push
je
xchg
test
and
arpl
pop
pop
lods
xchg
xchg
daa
ret
loope
cdq
jns
or
lds
mov
xchg
sbb
cmp
sti
fiadd
dec
xrelease
mov
pop
xchg
push
mov
test
mov
call
fbld
rol
push
ins
add
mov
xor
mov
das
pop
push
jmp
iret
and
sub
push
sbb
cli
(bad)
mov
dec
mov
mov
mov
repz
ins
rcl
mov
imul
mov
adc
inc
xor
pop
fidivr
mov
out
sbb
leave
pusha
(bad)
xor
cmp
push
test
xchg
mov
dec
push
stos
mov
in
pop
xlat
xchg
fisubr
jge
cld
sub
adc
pop
and
or
mov
jge
sar
add
dec
out
stc
xchg
mov
or
in
popf
jnp
dec
adc
or
push
xchg
adc
jmp
outs
loopne
mov
xlat
outs
sbb
outs
out
popa
xor
xor
fs
bswap
mov
pop
arpl
mov
aad
push
lea
dec
pop
outs
jmp
ins
fbld
pushf
cmp
scas
push
sar
(bad)
cmp
out
addr16
jl
fistp
popf
cmp
outs
sub
and
movs
mov
dec
in
nop
xor
icebp
cmp
out
xchg
dec
fidivr
jb
mov
movs
pop
dec
outs
adc
and
shl
fsubr
(bad)
out
jle
inc
fwait
mov
push
xor
xor
push
mov
lds
mov
jmp
add
ror
not
addr16
push
mov
hlt
pop
(bad)
mov
push
shl
out
ds
sbb
and
outs
adc
loopne
pop
adc
lds
hlt
pop
mov
fdivr
pop
add
call
daa
mov
int3
push
jmp
xor
xchg
push
mov
mov
inc
mov
xchg
push
add
mov
gs
ror
mov
dec
jne
sahf
stos
mov
call
jb
movs
or
in
popf
and
sub
or
sbb
xchg
mov
dec
pushf
mov
call
xlat
xchg
dec
mov
sub
mov
mov
xchg
popf
aad
ins
inc
pop
jmp
fidivr
stos
jae
in
or
hlt
cmp
xor
fcmove
dec
add
ret
das
mov
mov
push
push
sbb
mov
jecxz
sbb
xchg
fs
out
ror
jmp
inc
jb
int3
inc
xor
loopne
dec
lock
jns
cmp
push
sbb
dec
ins
push
pavgw
add
dec
sbb
gs
xchg
mov
or
jnp
sbb
inc
add
outs
mov
lock
inc
mov
cmp
push
in
push
iret
scas
loope
mov
ins
or
ret
sub
pop
mov
js
les
pop
nop
(bad)
mov
jns
xchg
push
push
fldenv
mov
sar
push
jbe
call
mov
jmp
inc
and
ins
sbb
xor
add
mov
xchg
jno
fld
hlt
bound
cmp
inc
mov
ret
bound
sub
out
ror
or
sbb
mov
mov
sahf
pop
jge
stos
adc
jns
lods
jecxz
dec
push
cmp
pop
lock
push
std
xlat
je
fcomp
fstp
int
fmul
dec
or
dec
jl
cld
pop
push
ficom
dec
mov
loopne
push
add
call
scas
outs
inc
pop
movs
xchg
mov
ins
cmp
push
or
sbb
jle
or
lods
and
cmc
push
fiadd
fwait
(bad)
mov
inc
out
inc
outs
dec
cmp
and
add
sbb
mov
push
ret
cmp
pushf
jge
pop
pop
not
fcmovnb
sub
mov
mov
jl
mov
jbe
jns
push
jmp
push
repz
dec
call
jns
push
mov
sbb
lods
cmp
imul
jae
mov
rcr
pop
sub
into
mov
cmps
call
lahf
dec
mov
jno
xor
xor
adc
cmc
ret
(bad)
neg
repz
inc
mov
call
sti
(bad)
mov
rol
out
mov
movs
cld
jnp
and
inc
dec
fnstsw
inc
cs
jae
rol
inc
adc
inc
xchg
scas
out
mov
inc
adc
in
jmp
lahf
cli
repnz
pop
add
enter
cmp
xchg
(bad)
nop
and
mov
jno
sbb
xor
ins
pop
xlat
cmp
pop
dec
add
jmp
dec
add
sbb
movs
lock
inc
pop
sar
jmp
leave
adc
dec
sub
jb
stos
fs
jae
scas
inc
dec
xchg
sahf
and
loop
xchg
or
add
add
rcl
movs
lds
retf
jg
fs
and
ds
jge
pop
push
jmp
ret
test
clc
or
(bad)
xchg
mov
fmulp
inc
xor
outs
sub
movs
daa
push
aaa
fnsave
sbb
in
mov
out
jmp
mov
stos
cld
cmp
xor
imul
push
call
sbb
mov
mov
xor
cmovnp
cld
std
jns
fsub
sub
inc
les
data16
push
call
cwde
dec
pop
fadd
or
jns
enter
pop
xor
lea
push
ins
call
fisub
sbb
pop
jns
outs
mov
loope
xchg
arpl
rcl
fisttp
push
lods
jno
cdq
mov
cmc
(bad)
aad
cmp
add
adc
inc
push
(bad)
daa
pop
sub
(bad)
push
icebp
pop
and
(bad)
ss
(bad)
aam
setl
push
js
inc
shl
pop
test
hlt
ins
(bad)
mov
popf
lahf
(bad)
cmp
cld
mov
add
cmp
and
push
add
lahf
call
push
daa
in
fimul
mov
xchg
std
pushf
lods
ins
gs
jns
and
and
push
xor
jae
mov
and
aaa
out
xchg
int
jnp
sub
xor
lods
scas
xor
ja
or
add
mov
repnz
(bad)
call
pop
jmp
ja
in
pop
fidivr
clc
cmp
jmp
sub
jmp
mov
cmps
fmul
gs
pop
sub
in
or
retf
retf
pop
pop
nop
fucomp
popa
cmp
cld
cmps
push
dec
and
and
(bad)
and
fs
dec
sub
and
and
cmp
cmp
sahf
or
mov
push
dec
push
aad
fsubr
push
cmps
xlat
mov
cmp
sub
mov
xor
pop
or
les
test
adc
dec
jbe
xchg
adc
mov
mov
call
cli
lds
out
mov
pop
mov
lods
(bad)
add
xchg
lods
mov
sahf
scas
fldcw
adc
or
mov
and
sbb
add
sub
mov
xchg
pop
icebp
fwait
int3
and
inc
and
push
frstor
test
add
pop
inc
loopne
fld
sub
ins
call
mov
shl
call
dec
scas
jne
(bad)
xchg
mov
mov
enter
pop
and
out
and
fld
repz
inc
imul
xor
pop
nop
clc
inc
pop
mov
pop
mov
fwait
sub
push
iret
mov
or
add
pop
push
mul
in
pop
(bad)
pop
es
inc
pop
ds
shl
mov
sub
outs
mov
sub
jmp
loopne
(bad)
std
(bad)
sub
outs
add
lds
fidivr
cmps
call
mov
push
sub
fadd
sahf
lods
pushf
sti
mov
mov
cmps
and
push
sbb
inc
or
xor
xor
shl
or
jns
cmp
adc
aaa
push
les
pushf
push
out
call
cwde
pop
sbb
and
and
stos
ins
fwait
loope
cdq
or
add
int3
add
ins
ins
aam
dec
cmps
xor
stos
xor
mov
push
cmc
mov
cmps
or
aas
sub
in
cld
jg
shr
xor
jb
in
sub
loop
cmp
in
push
mov
aam
or
cmp
push
jbe
push
cmp
rcr
dec
or
int3
rcl
sti
pop
add
aam
cmp
jmp
and
add
pop
fsub
sub
adc
jle
outs
mov
lds
loope
fadd
push
xchg
push
xchg
jl
inc
adc
push
sub
jnp
push
mov
push
out
sbb
rcl
push
sar
out
out
movs
mov
pusha
fs
sub
xlat
sub
lds
fnstenv
pop
popa
dec
adc
dec
div
(bad)
mov
out
in
ss
xor
mov
add
rol
push
xchg
cmp
scas
outs
xchg
ins
cmp
jae
adc
outs
and
outs
push
pushf
xchg
mov
xlat
loop
stos
jae
cmp
mov
mov
sar
cs
bound
(bad)
(bad)
cs
retf
(bad)
jge
int
fs
sub
mov
ja
(bad)
jns
mov
icebp
aaa
enter
fist
sub
sub
lods
pop
rcr
cmps
leave
retf
lea
stc
dec
ins
push
xchg
leave
lea
call
xor
jl
mov
enter
xor
push
es
mov
hlt
cdq
mov
scas
inc
mov
pop
fcomp
sbb
sub
dec
das
in
arpl
movs
fisttp
push
xor
je
jae
inc
test
popf
(bad)
cli
enter
push
cld
mov
data16
arpl
test
rcl
das
es
jp
sahf
cmp
pop
or
pop
jne
popf
fidivr
mov
sub
xchg
jb
call
(bad)
js
in
xor
(bad)
test
xchg
or
pusha
sbb
or
or
mov
sbb
mov
dec
out
repz
loope
pushf
outs
mov
inc
pop
mov
adc
test
and
stc
int3
(bad)
adc
cwde
mov
and
stos
xor
push
outs
fdivr
dec
not
outs
mov
or
cdq
dec
fmul
mov
cmps
xchg
lods
addr16
(bad)
cmps
loope
das
movs
xchg
enter
xchg
cmp
pop
xchg
lahf
or
out
mov
call
sub
stc
cli
cmp
mov
ss
mov
push
adc
popa
or
dec
outs
push
jb
adc
push
push
rol
loop
out
data16
xor
outs
mov
adc
stc
adc
test
stos
loop
add
pop
outs
leave
scas
mov
mov
mov
cmps
std
fld
jbe
mov
cld
add
push
lods
mov
push
test
adc
idiv
sbb
lea
jecxz
add
jnp
xor
fild
jmp
loopne
bound
lock
leave
shl
jp
adc
xor
(bad)
lea
retf
mov
(bad)
mov
lock
xchg
cmps
cmps
jo
mov
mov
sbb
std
fnstsw
cwde
sbb
cmps
gs
retf
(bad)
sbb
mov
jge
and
inc
(bad)
push
into
out
in
enter
aam
xchg
rcr
and
xor
mov
pop
clc
sar
mov
lea
sbb
mov
(bad)
out
or
popa
mov
push
fs
imul
shl
dec
sub
sbb
jo
sbb
jl
lahf
push
adc
xchg
jp
xlat
mov
xchg
cmp
dec
mov
fst
jo
lock
xchg
call
js
or
and
sub
jb
clc
popa
sub
std
inc
pop
mov
push
lods
xchg
mov
jg
aam
xor
adc
fwait
jns
mov
cli
adc
repz
adc
(bad)
iret
outs
lock
jae
movs
cli
cmp
xchg
and
iret
jnp
call
clc
fimul
fs
dec
xor
scas
cmc
push
stos
cmps
jmp
imul
mov
cmp
sbb
rcl
adc
mov
arpl
pop
mov
ds
cmp
scas
push
jp
add
in
outs
mov
cwde
xchg
mov
adc
mov
in
xchg
nop
inc
out
pushf
add
jbe
stos
ds
inc
mov
sub
jmp
adc
pop
in
mov
inc
test
sbb
inc
xchg
xlat
pop
(bad)
icebp
test
call
inc
dec
ds
neg
sbb
addr16
or
cld
in
fidivr
pop
fwait
aaa
outs
and
xchg
mov
mov
cli
mov
xchg
stc
icebp
add
fcom
sbb
sub
in
aaa
mov
sub
mov
push
cmp
sub
dec
pop
scas
push
gs
jl
sub
jno
ss
outs
pop
cmps
xchg
ins
in
cmp
inc
imul
cmp
mov
std
sub
sbb
sub
sti
push
arpl
aam
into
(bad)
and
sahf
push
lock
shl
adc
push
jmp
in
or
inc
add
mov
(bad)
stos
cdq
cmps
push
mov
mov
mov
or
mov
dec
cmc
icebp
retf
and
cli
mov
sbb
aad
lds
push
(bad)
fisttp
xchg
mov
cmp
jle
std
popf
xor
mov
push
dec
gs
lahf
cmc
movs
repnz
ds
sub
ss
jg
dec
mov
stos
pop
inc
fidivr
mov
mov
scas
push
fsubr
or
and
in
dec
xchg
aaa
inc
or
stos
ds
ins
xchg
cs
dec
inc
out
aam
fldenv
loopne
pop
mov
aad
xor
imul
pushf
pop
cmp
cwde
addr16
(bad)
pop
push
in
mov
dec
int
mov
cmp
or
add
mov
aad
sahf
adc
jg
inc
lds
mov
mov
cmp
mov
cmp
xchg
mov
pop
lahf
jnp
pop
iret
cmp
jno
iret
and
mov
stos
cmp
xchg
jnp
les
pusha
inc
xchg
mov
scas
jae
je
lea
mov
imul
mov
mov
loopne
inc
xchg
sub
mov
ins
inc
das
mov
scas
cmp
aaa
cmp
push
and
repnz
sub
jno
mov
arpl
iret
mov
into
mul
daa
nop
sub
fsubr
inc
pushf
outs
imul
out
cdq
fwait
sub
xchg
(bad)
jmp
ins
xchg
sub
popf
nop
nop
inc
xor
(bad)
in
xlat
or
fld
movs
add
dec
(bad)
mov
xor
push
std
scas
cmc
call
push
cdq
jno
add
and
lods
ins
jb
rcl
sub
dec
push
push
fidivr
mov
test
push
movs
imul
xchg
clc
repz
arpl
cmp
xchg
mov
sbb
jg
paddw
or
mov
sub
dec
or
xor
enter
je
push
fldenvw
push
cmpps
into
dec
sbb
push
mov
dec
and
outs
xchg
mov
mov
sbb
movs
loop
pushf
out
jmp
xor
movs
sub
(bad)
and
xchg
jne
sbb
fwait
or
xor
sbb
xor
popf
mov
mov
retf
jnp
jns
mov
xchg
enter
inc
dec
movs
fisttp
adc
mov
aaa
(bad)
fidiv
ds
data16
daa
sbb
es
pop
jne
dec
lock
jae
out
out
and
mov
test
ja
dec
imul
mov
nop
pushf
mov
icebp
shl
mov
test
in
(bad)
and
imul
adc
and
out
outs
adc
cmp
mov
retf
test
inc
inc
fsub
mov
mov
adc
cwde
fcmovne
sbb
scas
adc
jmp
bnd
retf
push
pop
(bad)
test
cmp
es
pop
inc
popa
mov
xor
je
mov
sbb
hlt
aad
sahf
sub
xlat
aad
or
(bad)
jne
jne
mov
scas
pop
xlat
inc
les
ds
sbb
add
mov
pop
cmp
jmp
ror
or
adc
add
adc
je
rol
jge
test
cs
mov
mov
imul
iret
mov
mov
loop
jns
inc
pop
stc
jecxz
cdq
mov
add
call
dec
dec
push
call
mov
mov
aam
pop
enter
lods
(bad)
adc
rcr
mov
xor
and
or
test
loopne
mov
mov
(bad)
push
jl
or
shl
mov
dec
scas
cdq
ins
test
jl
or
loope
(bad)
cmc
dec
fcmovnu
movs
scas
mov
imul
mov
std
cmpxchg
pop
jmp
and
mov
gs
and
shl
sti
imul
mov
sbb
jbe
shr
cmps
push
push
cmp
xchg
mov
sti
je
push
jmp
cli
mov
lods
and
leave
sbb
fsubr
out
sub
pop
sbb
ret
loop
xor
sbb
sbb
dec
pop
test
push
jnp
movs
pop
and
dec
xor
adc
movs
into
shl
int3
jp
push
push
loope
sub
es
mov
in
sub
loop
aaa
push
and
fimul
jns
js
pop
cmp
or
or
lea
lahf
xchg
aad
fist
ins
cmps
and
jmp
aad
int3
imul
pop
retf
pop
mov
add
mov
dec
call
movs
outs
out
out
aad
lds
imul
xchg
xor
popf
pop
push
mov
sub
lods
imul
mov
add
getsec
mov
xchg
je
(bad)
aad
pop
jnp
mov
xlat
imul
cmp
add
mov
stos
sub
add
rcl
arpl
imul
xchg
pusha
popf
rcl
dec
clc
pop
pop
pop
in
or
test
rcr
sahf
popa
xlat
push
lock
addr16
jecxz
mov
jo
fwait
xchg
inc
fsub
cmp
cmp
pusha
mov
repz
inc
push
pop
pop
into
jb
fsubr
mov
xchg
and
adc
mov
dec
inc
out
popa
push
add
in
and
pushf
hlt
mov
jle
rcr
adc
push
xchg
push
jne
das
inc
ja
imul
jbe
jb
popa
xlat
mov
jne
out
xor
mov
sub
inc
xor
jae
or
sbb
aaa
xor
fldcw
inc
rcl
mov
shr
sbb
out
mov
mov
call
inc
inc
xchg
aam
maskmovq
jnp
int
add
movs
ins
jl
jo
lds
scas
cmp
mov
jae
sbb
stos
stc
gs
outs
pop
pusha
add
jecxz
inc
mov
push
pcmpeqw
dec
pop
push
mov
xchg
push
dec
mov
imul
call
push
jl
jo
pop
scas
xchg
jmp
or
sti
mov
je
jmp
frstor
dec
mov
mov
xor
cld
mov
int
lock
in
push
test
outs
icebp
xchg
jmp
sar
test
jp
in
mov
arpl
enter
xor
lods
xchg
movs
lea
mov
movs
cmp
out
sbb
(bad)
push
icebp
mov
loope
out
mov
pushf
cmp
or
(bad)
jno
frstor
inc
adc
pop
jecxz
fidivr
int3
jo
or
imul
push
scas
mov
xor
cs
sbb
push
fcmovnu
outs
jno
out
or
cdq
inc
lahf
push
popf
fst
pop
and
mov
dec
mov
mov
pop
(bad)
stos
out
fcom
inc
mov
aas
cmp
sbb
je
cmp
daa
scas
xchg
cli
mov
xchg
cwde
int3
out
push
outs
mov
sub
sbb
push
or
xchg
or
dec
out
and
push
and
pop
lahf
jo
xchg
fimul
outs
and
sti
sbb
enter
mov
inc
stos
shl
sub
fiadd
or
sub
aam
cmc
sar
loope
and
mov
jl
or
adc
jno
xchg
fld
pop
cmp
cmc
cmp
xchg
aas
or
jmp
add
fdivp
mov
dec
cld
jmp
or
stc
jo
dec
adc
sar
cmp
xor
xchg
shl
call
aad
rcl
dec
dec
cmc
jmp
mov
lea
pushf
mov
loop
sub
push
ds
scas
cmp
loopne
adc
iret
fidiv
xor
pop
mov
in
test
or
xor
sbb
dec
add
cmc
stos
jbe
xor
nop
or
in
pop
out
sbb
(bad)
out
cmp
and
lds
xor
cmps
nop
stos
xor
les
(bad)
or
ja
pop
xlat
fild
int3
ja
lods
div
pop
push
and
(bad)
push
hlt
mov
pop
popf
mov
imul
test
and
gs
dec
cli
retf
cmp
mov
not
in
(bad)
jbe
popf
or
adc
xchg
add
fiadd
(bad)
aam
xchg
jo
mov
call
imul
hlt
sub
mov
ss
iret
repnz
mov
inc
fisubr
into
xor
sar
shr
jb
jge
mov
mov
xchg
adc
xor
icebp
jg
mov
jmp
fistp
xchg
(bad)
pushf
mov
aam
call
jo
ins
jmp
mov
adc
inc
ds
js
or
arpl
xor
pop
cmps
and
xchg
add
inc
add
and
xchg
sbb
jno
add
and
lock
(bad)
jge
mov
arpl
add
int
push
dec
push
lds
jo
enter
inc
scas
pusha
retf
loopne
in
xchg
sub
popa
iret
clc
sub
pop
xlat
jp
iret
dec
mov
mov
leave
push
sub
xchg
pop
mul
leave
inc
sti
stos
div
adc
jle
stos
pop
fild
cmp
cld
dec
xor
loope
cwde
mov
sbb
inc
mov
inc
jae
dec
cmp
fnstsw
mov
mov
ret
pop
pop
dec
js
fdivp
test
femms
call
idiv
inc
mov
rcl
cmp
push
test
mov
adc
mov
inc
sub
int
jne
les
aam
jecxz
jmp
std
fisubr
and
fbld
dec
jmp
call
add
sub
ins
push
ds
pop
and
aas
inc
stc
inc
xor
jne
out
cwde
fiadd
jno
jge
mov
mov
xchg
jnp
out
fstp
add
sub
pop
mov
icebp
aaa
mov
fcmovnu
rcr
push
inc
inc
sbb
sub
mov
pop
jae
xchg
inc
lock
ss
mov
jb
jmp
fnstenv
or
enter
cmp
arpl
jns
sub
je
xor
add
push
adc
dec
dec
bound
adc
aas
mov
jnp
repz
mov
jmp
std
xor
test
push
and
mov
hlt
push
les
(bad)
test
cmp
aam
mov
aas
setae
retf
jmp
mov
lahf
sub
xor
add
xor
daa
sbb
mov
cmp
es
adc
xchg
xchg
fiadd
into
fs
cdq
pop
adc
pop
outs
push
jle
sbb
cld
and
fcom
aad
and
test
lea
adc
and
xchg
idiv
xlat
fisubr
xchg
dec
add
js
push
mov
pop
lods
fwait
in
adc
sbb
add
fucomp
push
xchg
xchg
std
adc
adc
mov
js
std
fstp
shr
mov
push
jl
fwait
xchg
movs
and
outs
adc
in
shl
and
outs
jmp
mov
ja
lea
push
imul
movs
jge
cmp
xchg
pop
movaps
dec
or
push
xchg
sti
cmp
fdivr
cwde
scas
js
sbb
jne
pop
mov
hlt
add
mov
test
adc
cmp
jnp
xor
jo
jg
iret
cvtdq2ps
(bad)
jmp
push
and
(bad)
xchg
xchg
jecxz
pop
sbb
inc
aaa
mov
dec
cmp
test
out
push
(bad)
cli
xchg
lods
push
mov
jge
test
stos
xchg
loop
mov
leave
lds
xchg
jo
and
(bad)
out
in
out
jmp
jno
cli
add
mov
outs
out
jmp
test
sub
sub
outs
mov
dec
aaa
xlat
add
shl
daa
mov
mov
movs
loopne
scas
xchg
mov
inc
mov
shl
xchg
and
and
enter
pushf
out
test
out
imul
dec
data16
into
hlt
mov
dec
fst
lods
adc
(bad)
das
outs
add
lods
and
cli
fwait
es
mov
lahf
sub
rol
pop
jno
mov
xchg
xchg
dec
inc
mov
sar
dec
or
cmp
add
es
retf
or
js
xchg
cwde
call
aam
cld
mov
fdivr
cmps
mov
add
add
jl
fisttp
cmp
push
ficomp
cmp
repnz
outs
inc
aas
cdq
jge
das
mov
sahf
jecxz
mov
mov
mov
sbb
out
jns
inc
push
mov
data16
xchg
shl
dec
sub
ficom
adc
data16
fist
push
add
stos
repnz
shl
dec
jecxz
jmp
sub
add
add
inc
sub
sti
std
add
inc
xor
inc
stc
dec
mov
mov
adc
sar
mov
repnz
mov
and
cmp
stc
xor
cmp
rcr
push
out
inc
loope
or
neg
jnp
idiv
dec
jmp
push
push
pop
je
lea
xchg
jecxz
fcomip
inc
(bad)
hlt
(bad)
shr
push
pusha
fwait
arpl
lods
loope
jnp
and
mov
daa
push
cmps
pop
dec
repnz
add
xor
push
jns
ds
call
ins
std
stc
or
or
mov
mov
xor
add
cmp
retf
leave
lock
push
pop
aam
(bad)
fmul
push
call
push
fsubr
push
or
jmp
rcr
in
sar
sub
push
ror
cmps
fmul
cmc
clc
xchg
mov
sub
add
cli
xchg
mov
je
std
pop
fidiv
retf
xchg
mov
push
call
in
stc
(bad)
mov
dec
mov
adc
jne
inc
or
xchg
inc
mov
pop
fdiv
pop
pop
imul
ja
sbb
aas
push
fdivr
and
dec
addr16
and
jmp
fwait
sar
imul
xchg
icebp
cmp
enter
fist
or
add
rcl
out
movs
push
jne
jge
std
pop
cwde
test
ins
or
test
imul
lods
lds
js
push
adc
into
add
xor
ds
test
cmc
add
sub
ret
mov
xchg
pop
mov
dec
push
in
or
aad
dec
popa
sbb
inc
xchg
or
inc
adc
sub
inc
add
inc
push
inc
into
jae
adc
jnp
in
adc
xor
div
les
test
loope
pop
(bad)
in
bound
mov
inc
mov
xchg
mov
add
and
dec
in
retf
inc
mov
loope
fild
fnstcw
mov
jne
(bad)
or
sub
ja
bound
outs
push
jmp
push
clc
(bad)
loope
mov
jp
sbb
sbb
or
hlt
test
dec
sub
inc
ja
dec
pop
out
fwait
push
xlat
or
cvtps2pi
jge
jp
in
xor
scas
sbb
out
xchg
jge
movs
aad
(bad)
call
iret
jecxz
sub
repz
sti
out
or
scas
cmp
pop
mov
xor
inc
pop
ja
xchg
xlat
pop
mov
loop
xor
mov
mov
mov
(bad)
jae
mov
(bad)
addr16
es
into
sti
push
inc
rcl
pop
dec
and
add
push
out
inc
loope
or
dec
or
pop
xor
mov
dec
pop
ins
mov
dec
adc
std
ds
ins
popa
adc
cs
jmp
xchg
vandnpd
xchg
out
jge
sub
popf
pop
xchg
daa
lds
cdq
retf
sbb
and
lods
and
out
mov
xor
sub
push
jle
adc
and
ins
pop
mul
call
xchg
pushf
xlat
int
outs
jo
jne
mov
cs
mov
sbb
mov
jb
add
sub
lea
fcomp
or
push
(bad)
jb
xor
xchg
ret
shl
test
shl
test
(bad)
jno
sbb
sub
mov
mov
xor
cld
dec
and
div
fistp
sub
je
xor
jno
xchg
xor
out
adc
cmp
xchg
aas
sub
push
in
imul
jne
inc
cmps
xchg
xor
or
rol
and
dec
jle
mov
les
cwde
push
mov
cwde
add
sub
stc
popf
push
xchg
cld
push
clc
push
shl
dec
imul
inc
inc
(bad)
push
pushf
ja
clc
mov
outs
inc
push
mov
mov
imul
adc
ds
mov
imul
fs
jle
push
push
ja
adc
aad
(bad)
push
loop
cli
pop
retf
and
push
mov
ret
popf
sub
ror
or
daa
mov
inc
aam
lods
push
lock
cmp
push
xchg
and
xchg
in
repnz
push
inc
and
cs
jge
loope
sbb
in
add
or
lods
sti
cmp
enter
jge
mov
sub
mov
into
sar
sbb
or
movs
mov
mov
clc
and
push
inc
ret
fwait
mov
and
fiadd
dec
jp
ins
add
or
fisubr
inc
xchg
jmp
or
popa
jmp
stos
rol
(bad)
retf
sub
ins
(bad)
les
xor
popa
jae
mov
retf
xchg
pop
mov
dec
call
lock
cmp
jns
sti
ret
das
inc
jg
fcmovnbe
adc
div
iret
jge
add
cwde
push
push
inc
je
adc
jae
or
add
push
aam
cmp
push
leave
ds
mov
stos
arpl
push
popa
push
std
pop
neg
mov
jb
xor
inc
sbb
ins
je
xchg
stos
stc
mov
icebp
std
xor
push
cli
push
xchg
(bad)
outs
adc
enter
jae
movs
cmps
inc
ficomp
or
pop
or
test
rcr
cmps
cmp
sbb
push
jnp
data16
fucom
sti
or
ja
mov
pushf
popa
(bad)
popa
sub
xchg
pop
arpl
push
idiv
addr16
rcr
jge
xchg
rcr
das
loopne
xchg
iret
in
pop
mov
mov
jb
fisttp
sbb
adc
adc
test
cmp
sbb
mov
adc
ins
mov
sub
addr16
jno
push
test
leave
or
push
push
stos
popf
add
mov
out
sub
sub
sahf
add
cmp
fst
ret
gs
dec
sbb
sub
test
or
cmp
dec
jle
ror
icebp
cs
in
mov
jp
jp
scas
adc
clc
arpl
push
hlt
dec
jecxz
jmp
nop
fwait
mul
cmp
shl
jo
enter
outs
and
mov
xchg
push
jmp
xchg
adc
test
inc
lahf
mov
mov
jle
out
loope
jmp
dec
lds
enter
dec
pop
loopne
test
fcomp
scas
enter
in
mov
mov
lea
sub
mov
in
aaa
jmp
(bad)
jb
push
cmp
pop
jg
call
loop
mov
(bad)
leave
adc
out
mov
loopne
sub
add
xor
pop
or
ror
jo
mov
loopne
push
stos
daa
js
fisub
test
call
mov
ror
(bad)
in
cmp
cmp
fcomp
(bad)
pop
(bad)
pop
jno
jecxz
in
cmp
sub
and
call
fsubr
mov
jns
sub
jne
hlt
popa
aas
shl
mov
jb
div
inc
mov
popf
call
xor
call
out
ret
jge
xchg
sbb
into
sub
xchg
dec
lods
dec
retf
fwait
mov
dec
mov
into
cwde
add
sub
jl
in
fcom
mov
add
fucom
push
pop
and
xchg
sti
mov
leave
inc
xchg
inc
movs
sub
jp
iret
push
outs
jns
lea
pop
shl
xchg
call
in
retf
pop
xor
pop
add
scas
shl
shl
sbb
addr16
or
imul
retf
ror
push
test
xor
pop
jns
jge
in
adc
fadd
mov
inc
push
not
ror
xchg
(bad)
sub
add
xchg
dec
jne
int3
xor
or
inc
sbb
shl
das
adc
adc
arpl
cvtpi2ps
lock
jne
fisubr
cmc
mov
in
xor
dec
loopne
pop
(bad)
and
cwde
jg
icebp
pop
push
mov
jae
xor
jle
jbe
fwait
rcr
cmp
loopne
(bad)
test
xor
jb
xor
sub
mov
and
and
sbb
jle
loope
dec
out
adc
mov
cwde
or
inc
dec
repz
mov
mov
or
push
popa
pop
and
in
push
add
rcr
repnz
(bad)
jge
shr
jb
lods
shl
test
ficomp
test
std
scas
js
ins
pop
jo
call
scas
test
loope
inc
loope
pop
mov
in
xchg
cmps
call
push
test
(bad)
mov
iret
xor
ror
dec
push
pop
lds
cmps
inc
pop
mov
adc
add
jb
retf
nop
xchg
adc
lods
and
cmc
test
xchg
inc
test
out
jne
rcr
aam
into
or
dec
cwde
mov
jnp
inc
jno
(bad)
js
in
ja
pushf
jo
cmp
movs
push
ss
and
aad
rol
pop
xor
mov
inc
mov
popf
call
ss
cld
mov
inc
xchg
addr16
and
das
shrd
xor
pop
cwde
es
ins
xor
ins
je
xor
jge
push
cmp
cmp
dec
jae
fwait
mov
or
sub
cmp
clc
inc
sub
sbb
in
push
out
clc
repnz
mov
or
lds
dec
stos
(bad)
pop
jnp
mov
in
or
test
mov
push
xchg
les
dec
popf
(bad)
cld
add
int3
je
mov
mov
sbb
out
jno
popf
push
aas
xor
adc
adc
xchg
mov
retf
mov
cmp
adc
sti
mov
out
dec
in
and
inc
add
stc
inc
pop
mov
iret
pop
xor
ja
retf
mov
(bad)
popa
jmp
xor
rcr
jnp
sbb
pop
jmp
lock
shl
mov
and
call
mov
sar
inc
sub
loopne
lea
(bad)
mov
mov
jmp
ds
adc
loopne
mov
daa
and
xlat
loope
movs
pop
mov
sbb
jno
dec
enter
ja
mov
stos
addr16
into
retf
and
xor
(bad)
jne
pop
add
movs
and
inc
out
jecxz
sub
aad
cmp
inc
fist
dec
pop
cmc
push
mov
jg
xchg
in
mov
call
cld
cmp
mov
rcl
push
data16
and
jnp
or
push
fs
not
jne
push
cmp
cmps
add
dec
loop
aaa
ja
push
cdq
call
cdq
pop
fstp
sbb
idiv
rol
mov
push
pop
pusha
clc
jg
sub
sbb
clc
out
fisubr
cmps
sbb
mov
ret
sbb
sbb
and
mov
or
leave
je
inc
(bad)
call
out
lods
sbb
test
xor
mov
fdivr
cmp
test
aam
lahf
into
cmps
(bad)
iret
cmp
das
int
mov
fld
addr16
fs
ins
addr16
movs
sub
cmp
xchg
push
fild
rcr
cmp
call
dec
stos
fdivr
sar
ins
xchg
dec
or
int3
bound
and
adc
xchg
int3
shr
push
jns
push
inc
nop
fwait
xchg
xchg
retf
cmp
test
cwde
sahf
jae
call
push
or
jb
outs
daa
mov
xor
mov
cwde
inc
loop
or
jb
scas
xchg
or
std
into
jl
daa
in
inc
mov
and
rcr
data16
out
xchg
stos
ret
shl
and
rcl
or
mov
push
inc
(bad)
mov
mov
ja
mov
xchg
aas
repnz
lock
repnz
xchg
(bad)
outs
or
jl
in
or
jb
pusha
repz
cld
leave
imul
fiadd
push
call
clc
das
add
push
iret
jno
mov
jo
push
push
jmp
mov
inc
call
into
imul
push
adc
cmp
adc
cmp
push
pop
mov
cwde
out
mov
iret
cld
stos
add
pusha
test
adc
sar
mov
inc
xor
jns
or
mov
jle
dec
sbb
sub
ret
pop
and
sbb
mov
jge
mov
scas
sub
sbb
fstp
push
movs
jmp
push
sub
retf
out
sub
fbld
dec
jns
lds
pop
test
sar
mov
out
shl
lods
in
ins
adc
(bad)
int
or
ret
xchg
inc
jns
lea
iret
mov
pop
sbb
lods
imul
div
fnsave
ins
adc
dec
jno
add
ja
pop
dec
fmul
or
test
dec
add
adc
mov
push
push
push
aaa
cld
pop
(bad)
push
sar
imul
jge
xor
lahf
imul
pop
in
call
mov
mov
lods
jge
fnstsw
leave
retf
mov
xchg
add
test
and
mov
inc
les
out
fisttp
movs
pop
adc
test
retf
cmp
dec
mov
(bad)
stc
dec
jnp
push
sub
pop
pop
xchg
cdq
cmp
scas
add
push
push
add
dec
aaa
aaa
or
mov
ja
adc
jg
or
or
inc
outs
mov
sahf
test
pop
push
inc
add
pop
iret
jmp
jp
je
add
jae
aas
(bad)
in
shr
dec
dec
enter
xor
test
sahf
rol
mov
dec
test
add
ja
xchg
cmps
add
adc
dec
mov
mov
clc
in
add
les
stos
jns
inc
jmp
outs
push
je
(bad)
jbe
lea
push
jno
clc
push
inc
das
fst
pop
int3
jge
or
and
cwde
mov
fsubr
leave
jecxz
(bad)
repz
push
xor
pop
imul
cmp
pop
mov
imul
jb
mov
cmp
add
aam
in
mov
cmp
cmp
jbe
mov
test
xchg
xor
xchg
push
mov
or
jecxz
shr
out
(bad)
xor
sar
jg
adc
mov
mov
pop
mov
dec
imul
add
push
pop
daa
out
(bad)
neg
push
pop
inc
adc
pop
fld
stos
mov
ins
mov
push
mov
cmp
inc
sub
je
test
movs
push
cmp
dec
push
iret
popf
sbb
sub
mov
xchg
add
test
fstp
and
pusha
cli
jp
test
jnp
popa
lds
pop
pop
adc
sub
fild
sbb
cli
aas
ret
sbb
cmc
pushf
jns
lahf
cmp
adc
xchg
daa
call
inc
dec
dec
fs
cs
das
movs
mov
sbb
je
(bad)
(bad)
and
xor
xlat
mov
sub
call
(bad)
jae
jg
mov
xchg
lods
out
push
xor
pop
es
rol
test
jnp
add
sub
mov
int
ds
xor
es
in
inc
adc
xchg
push
pop
mov
stos
mov
mov
mov
cmp
cmc
push
mov
cmc
div
mov
add
cmp
jmp
xchg
and
psadbw
lods
pop
mov
pop
and
in
lods
das
mov
jp
out
(bad)
ja
mov
aam
adc
lock
adc
js
js
lods
push
cdq
and
std
mov
mov
dec
(bad)
outs
ja
sub
jg
inc
and
(bad)
retf
popf
add
adc
ja
dec
sbb
adc
sbb
xchg
loopne
adc
test
dec
xor
xor
gs
aas
mov
add
adc
ret
adc
fist
xchg
lea
inc
imul
mov
sub
adc
or
mov
scas
fist
sbb
xchg
or
jmp
sbb
aam
sub
scas
cmp
call
push
(bad)
rol
adc
adc
mov
adc
adc
and
push
(bad)
ror
scas
xor
lds
ret
dec
pop
idiv
nop
or
pop
mov
mov
xchg
push
and
xlat
jns
mov
jecxz
ss
aaa
mov
test
dec
sub
mov
xchg
cmps
xlat
pop
sar
test
push
sar
mov
pop
out
cdq
loop
adc
(bad)
mov
sub
leave
ret
leave
out
inc
or
or
or
pop
std
cwde
xor
or
and
int3
retf
adc
ins
push
aas
mov
clc
xchg
cmp
pop
mov
inc
scas
add
add
cmps
add
shl
and
imul
sbb
adc
and
inc
out
xchg
sub
int3
sub
xchg
xchg
and
xlat
pusha
and
mov
sub
es
sub
(bad)
and
out
push
iret
xchg
xchg
daa
inc
adc
call
fisub
pop
mov
aas
mov
mov
es
push
fwait
dec
jo
cwde
sbb
mov
imul
fimul
sbb
mov
iret
fdiv
ret
clc
dec
xlat
cmp
rcr
jle
mov
bound
add
mov
inc
jne
out
mov
iret
and
and
in
test
pop
sub
mov
push
sti
inc
adc
aas
cmp
icebp
jae
jae
and
je
dec
add
(bad)
and
shl
jp
inc
pop
pop
mov
mov
in
repnz
mov
cmp
cmp
jmp
inc
repz
or
jnp
pop
imul
ret
sbb
pop
ss
pushf
dec
inc
cli
in
mov
or
and
cld
xchg
shl
xchg
cmp
cmp
mov
out
pushf
mov
ja
or
stos
mov
call
test
mov
sub
inc
xchg
in
sbb
outs
sahf
movs
(bad)
xchg
pop
dec
cmc
es
leave
add
out
pop
popf
push
ins
add
sar
mov
js
mov
adc
xor
(bad)
cmps
mov
cwde
mov
outs
inc
int
(bad)
sub
sbb
and
cmps
ja
call
mov
pop
xchg
or
movs
xchg
sbb
or
mov
lods
mov
add
mov
dec
or
ror
xor
mov
xchg
ret
xor
jo
or
inc
test
std
rol
lods
ins
jno
cmp
and
sbb
popf
addr16
ss
lock
inc
dec
inc
adc
dec
call
std
fimul
mov
ror
gs
stc
in
lods
inc
inc
lods
jo
xchg
mov
jbe
and
shr
mov
mov
and
jo
and
add
xchg
push
xlat
(bad)
sbb
fsubr
stc
or
xchg
fld
mov
test
jg
cmp
out
(bad)
pop
dec
or
mov
jb
lock
add
pop
or
scas
pop
adc
xchg
pop
mov
aas
rcr
ret
cmp
xor
or
mov
xor
retf
outs
aam
pop
outs
cwde
inc
xchg
adc
jl
cmp
mov
mov
adc
push
imul
xor
das
fnstenv
xor
xchg
sub
or
sahf
idiv
push
(bad)
inc
arpl
sub
daa
xchg
mov
(bad)
mov
nop
adc
sbb
fisttp
sub
push
sahf
lods
mov
(bad)
and
dec
xor
ret
es
call
in
(bad)
mov
jns
mov
dec
dec
or
push
add
scas
push
inc
adc
enter
test
call
add
imul
xor
xchg
lods
inc
or
xchg
cs
sub
push
cs
sbb
test
sub
sub
or
pop
push
mov
in
lds
arpl
movs
mov
sub
mov
sbb
xor
enter
mov
cmp
mov
jmp
mov
mov
sub
jg
sub
repz
or
shl
fnstsw
and
(bad)
sar
cmp
enter
adc
xchg
jl
mov
pusha
pusha
mov
adc
test
xlat
enter
icebp
push
in
enter
and
out
xchg
mov
enter
or
aam
pop
pop
dec
ss
lods
mov
and
add
lds
in
sub
xor
xchg
aad
je
dec
dec
shl
jno
inc
mov
adc
loope
push
scas
dec
lods
push
sub
push
and
xchg
jb
push
test
sbb
and
jge
lods
inc
jmp
es
and
ret
(bad)
sub
sub
jo
push
fbld
loopne
sbb
(bad)
add
(bad)
sar
out
push
daa
jmp
adc
mov
xchg
cmp
cli
addr16
mov
pop
and
addr16
cmp
fwait
push
imul
adc
das
cmp
adc
dec
lds
ds
pop
cmp
push
js
rcl
cmp
xchg
fidiv
push
pop
cmp
arpl
mov
call
xchg
mov
jb
add
imul
mov
retf
ins
pop
jg
mov
add
xor
out
xchg
scas
pop
pusha
inc
je
in
fsubp
jp
out
xlat
inc
cmp
retf
or
add
push
in
jge
xchg
pop
movs
aaa
std
out
mov
or
cmp
mov
mov
push
mov
push
ret
fcmovne
stos
cmp
in
fisttp
xor
test
dec
in
psubsw
enter
iret
fisttp
sar
fisttp
add
adc
mov
mov
add
fadd
mov
iret
add
das
lods
push
dec
sbb
rcl
mov
aad
fisubr
imul
mov
add
cmp
fist
repnz
rol
and
imul
pop
pop
ins
mov
jl
stc
cmps
sti
pushf
arpl
in
aaa
xor
movntq
out
push
inc
jl
xor
popfw
mov
jb
push
lods
(bad)
ficomp
jmp
push
sti
pop
das
rol
xchg
call
fdivr
mov
lods
fisub
add
dec
and
jmp
pusha
jns
push
cmp
mov
cmc
and
mov
iret
dec
inc
sub
js
loopne
into
push
jmp
or
mov
push
push
stos
adc
add
xor
add
pop
hlt
mov
or
fadd
movs
fst
and
sub
out
pop
(bad)
pop
adc
push
repz
dec
jmp
sub
(bad)
sar
in
movs
inc
jge
mov
or
dec
mov
fwait
sbb
sub
pop
leave
sbb
neg
push
sub
adc
push
movs
push
repz
dec
ja
pushw
and
cmp
mov
pop
xchg
pop
mov
ret
or
daa
xor
mov
das
je
mov
jb
xchg
jecxz
pop
sti
pop
adc
sbb
mov
jge
add
sbb
push
xor
push
pop
xor
data16
and
mov
mov
jmp
pop
inc
test
out
inc
jnp
js
jge
sub
loop
pop
sub
lock
mov
(bad)
mov
jae
adc
mov
dec
rcr
pop
lods
ret
imul
ins
mov
inc
dec
in
mov
shl
in
hlt
daa
add
add
ss
outs
je
fsubr
retf
cli
enter
pop
popa
xchg
cmps
inc
out
ror
in
xchg
les
icebp
out
cmps
and
xchg
push
mov
mov
jae
pop
xor
retf
lods
mov
and
inc
sar
cmps
add
sub
outs
mov
mov
pusha
movs
call
sahf
lods
sbb
jnp
xchg
repz
dec
popa
push
dec
in
sbb
or
out
jg
push
mov
cmp
dec
loope
mov
and
out
(bad)
xor
and
fnsave
sahf
xor
mov
adc
push
push
sub
xor
sub
mov
push
mov
imul
mov
fcom
cld
inc
dec
dec
dec
dec
sbb
or
jno
daa
sub
pop
movs
add
(bad)
pop
in
push
mov
add
and
(bad)
shl
push
stos
inc
adc
sbb
aas
pop
std
pop
lods
es
fist
les
pop
adc
xor
mov
ror
cmc
stos
inc
jp
rsm
dec
shl
jp
xor
dec
inc
and
mul
inc
lds
jns
inc
ret
ins
cld
or
cld
icebp
jae
loopne
test
or
ss
and
cdq
mov
cdq
pop
fsub
and
push
ins
imul
fld
loopne
loope
sub
add
cmps
pop
push
in
and
jo
inc
fnstsw
pop
jne
es
les
sub
or
icebp
loope
xchg
loope
add
add
clc
leave
push
daa
mov
retf
sbb
out
pop
or
pop
or
adc
xchg
mov
jo
cli
sbb
mov
sti
bound
or
dec
test
mov
xor
inc
sub
pop
cld
cmp
cmp
pop
pop
lods
cmp
shl
jo
mov
out
xor
retf
push
aaa
cmp
mov
xor
cmps
test
fstp
ja
and
xor
retf
in
jne
aad
ror
out
scas
inc
sub
mov
inc
ds
or
call
xor
stc
mov
out
pop
jbe
(bad)
fstp
outs
retf
push
mov
sbb
std
out
sbb
xchg
xor
(bad)
ds
mov
aad
gs
repnz
jmp
out
(bad)
pop
jg
or
out
in
dec
sbb
cmp
idiv
jbe
pop
arpl
test
icebp
cdq
and
jle
mov
pop
retf
icebp
arpl
ret
ror
cmp
and
pop
cmp
add
mov
test
bound
mov
xor
(bad)
into
jmp
and
into
shl
ja
push
sub
lahf
popa
mov
push
mov
pushf
cmp
pop
jb
pushf
daa
vmwrite
adc
add
add
rol
or
fstp
xor
xchg
mov
in
sbb
rcl
test
call
fistp
outs
xchg
push
(bad)
sbb
std
scas
das
fisub
in
imul
(bad)
mov
imul
jmp
fnstsw
shr
or
ret
add
adc
int
or
push
sub
cs
dec
sar
adc
mov
mov
in
mov
xchg
cmp
mov
lods
je
sti
pop
mov
or
cmp
(bad)
cmc
aam
data16
dec
into
aam
sub
mov
loopne
arpl
std
outs
mov
xchg
adc
cs
ret
dec
xchg
lea
int
leave
add
call
in
jmp
cmp
dec
out
mov
aam
xor
call
loop
xchg
rol
cli
push
stos
loopne
mov
gs
sub
add
lods
mov
xor
pop
add
aad
and
sub
push
push
xor
inc
xchg
jo
xchg
mov
sti
dec
jnp
cli
jmp
pop
inc
fwait
(bad)
xchg
add
mov
ret
rol
push
dec
fild
std
fisttp
(bad)
retf
into
ret
popf
mov
add
rol
mov
push
aaa
push
and
imul
imul
sub
repnz
pop
sub
add
xchg
sbb
retf
push
fnstsw
cs
sub
xor
fadd
scas
stos
jmp
rcl
pop
inc
mov
or
(bad)
and
inc
mov
inc
jmp
call
sar
test
push
push
jno
and
dec
xor
inc
sub
in
dec
jmp
xchg
fwait
add
popf
jecxz
ret
push
sub
push
clc
enter
push
mov
popa
push
(bad)
fadd
stc
mov
add
imul
popf
and
mov
adc
out
repz
in
push
rcr
push
out
mov
(bad)
loopne
add
fadd
cdq
cdq
stos
(bad)
mov
mov
pop
and
xor
rcr
aad
or
push
lock
push
xchg
mov
pop
jle
xchg
push
cmps
xchg
xor
popf
inc
jae
es
js
jne
push
jle
repnz
std
and
bound
xlat
mov
test
dec
or
sub
mov
pop
int3
xor
mov
add
inc
aam
xor
sub
sbb
fs
aaa
ret
stc
jmp
cs
mov
outs
mov
push
mov
scas
clc
push
sub
inc
inc
mov
pop
rcr
push
inc
mov
sub
mov
addr16
test
sar
movs
mov
(bad)
cmps
je
aaa
or
pop
jl
push
aad
mov
jae
cmps
(bad)
in
fisttp
test
sti
mov
(bad)
test
bound
pop
jmp
mov
pushf
pop
mov
gs
into
pushf
cs
inc
leave
jo
rcr
jo
lahf
cmp
inc
and
sbb
dec
fnsave
sar
call
push
jmp
fsub
ret
icebp
cs
push
or
jg
push
push
xchg
push
sub
push
add
cmc
hlt
push
adc
fwait
ds
pop
aad
pusha
cmp
(bad)
shl
pusha
into
sbb
sbb
and
aad
push
(bad)
push
dec
push
hlt
sub
test
pop
mov
push
jmp
mov
out
dec
std
mov
repnz
(bad)
jg
cmps
cmp
dec
jb
or
(bad)
jae
lds
pushf
mov
aaa
rcl
adc
pop
lods
jnp
gs
pop
xchg
jmp
call
and
and
cmp
pop
xor
or
cld
xor
push
xchg
lahf
inc
fisttp
adc
adc
xchg
sar
pop
sbb
addr16
aad
xchg
div
dec
inc
aad
iret
ins
adc
iret
xchg
xor
movs
adc
fwait
cmps
mov
xchg
repz
retf
icebp
dec
pop
xor
jle
outs
inc
data16
push
loopne
jmp
(bad)
xchg
jne
mov
aas
pop
mov
and
(bad)
pushf
bound
popf
xchg
std
popf
adc
mov
sub
mov
out
mov
push
jbe
into
cmp
sbb
pop
jle
and
fs
cmp
mov
retf
xchg
add
sbb
mov
data16
nop
jmp
mov
mov
sbb
stc
loopne
inc
cmp
inc
dec
mov
aaa
cmp
lahf
pop
jns
push
retf
inc
aam
out
sbb
(bad)
jg
cmp
push
leave
jmp
pop
in
loop
cmps
out
cli
xlat
aad
sti
fistp
fnstenv
hlt
dec
fs
fcom
cld
dec
pop
jno
iret
das
mov
mov
xchg
pop
mov
sub
inc
out
vsqrtpd
call
scas
dec
test
mov
jle
xchg
iret
push
vcmppd
icebp
pop
hlt
cmp
add
mov
mov
fstp
sub
add
and
loopne
add
xor
cmp
in
xchg
xchg
retf
fs
xor
pop
in
retf
bound
or
pop
sbb
jmp
lea
sbb
outs
push
icebp
mov
add
dec
cmp
jl
mov
add
mov
mov
push
pop
aaa
repnz
test
lods
icebp
outs
cmps
jp
scas
push
adc
push
xor
outs
jno
jae
aas
lar
pop
sbb
pop
dec
mov
repz
popa
ins
loop
xor
je
retf
leave
and
out
in
cmp
cmp
jo
test
mul
jmp
pop
fcom
cmp
xor
xor
push
xchg
nop
or
fcmovu
test
lahf
sar
mov
dec
pop
xchg
mov
inc
or
in
xchg
cli
test
xchg
jecxz
mov
bound
mov
mov
sbb
(bad)
call
stos
push
add
scas
mov
dec
test
xchg
mov
ret
pop
dec
cdq
movs
repz
ja
not
pop
sbb
lds
add
mov
mov
lods
pushf
inc
ret
movs
xchg
imul
and
jp
sub
or
dec
je
push
(bad)
pop
cmp
(bad)
sbb
adc
leave
adc
cmp
cld
mov
sbb
dec
push
out
jno
fild
xchg
outs
add
mov
and
popf
jae
popf
test
dec
outs
and
out
xchg
test
mov
jne
pop
imul
pusha
adc
lods
sbb
rcr
arpl
mov
add
push
lods
sub
loope
pop
imul
xor
mov
clc
jl
jg
push
or
sbb
cmp
outs
lock
push
cwde
fcom
and
pop
mov
hlt
inc
(bad)
jb
xor
aas
dec
pop
or
fistp
cld
retf
aam
inc
ins
call
in
sbb
test
movs
adc
sbb
lds
cdq
(bad)
fimul
cmps
clc
shl
mov
and
neg
xchg
or
mov
cmps
call
adc
call
mov
inc
jmp
and
jno
call
ins
jg
fistp
xor
xor
xor
ins
pop
imul
pop
and
fist
test
fidiv
leave
or
gs
leave
xor
xchg
neg
mov
jle
sub
jns
movs
inc
gs
arpl
and
pop
jno
repnz
sub
(bad)
mov
gs
shr
cmc
xor
in
inc
(bad)
jmp
push
inc
mov
cs
mov
pop
cwde
cmp
stos
mov
mov
xor
stos
xchg
into
cs
pop
inc
mov
inc
pusha
call
ins
out
repnz
(bad)
jmp
clc
loope
fcomp
mov
sar
(bad)
aam
fdiv
jmp
push
sbb
das
dec
dec
mov
xor
(bad)
aad
es
mov
push
dec
add
jmp
mov
xchg
add
int
pusha
clc
nop
enter
xor
bnd
pop
pop
nop
xor
dec
rol
ins
mov
xor
outs
cmp
pop
daa
sbb
push
jae
(bad)
js
mov
adc
iret
push
or
ins
into
mov
xor
sub
in
inc
add
and
daa
mov
mov
out
cmp
outs
jg
(bad)
cmp
jg
cmp
add
retf
fisttp
mov
rol
sub
jl
pusha
cmp
scas
cmp
adc
dec
xor
inc
dec
nop
ds
int
mov
std
cmp
mov
inc
rcr
xchg
inc
and
fwait
inc
cwde
xchg
push
(bad)
fcom
mov
call
push
fdivr
and
inc
pushf
xchg
aam
dec
loop
ja
sbb
inc
cmp
mov
cmp
mov
(bad)
pop
jnp
outs
cmp
adc
cdq
jle
adc
shl
ret
push
add
xchg
jae
ins
fld
gs
pop
xchg
pop
and
ja
lds
icebp
pop
aam
mov
nop
cmp
fiadd
cli
push
jge
mov
iret
or
test
dec
cwde
fcomip
cmp
sbb
sbb
int3
scas
or
dec
push
cmc
xchg
pop
and
aad
jb
xchg
add
dec
stos
shl
pusha
push
add
sahf
mov
std
ss
fmul
or
inc
out
lea
shl
pop
mov
xchg
mov
cwde
cli
mov
xchg
scas
push
xchg
adc
push
clc
ja
es
add
wbinvd
in
xlat
dec
mov
clc
fnstenv
faddp
call
out
cmp
cmp
jle
dec
inc
xchg
pop
fwait
jge
mov
push
xchg
push
xchg
xchg
loope
cmps
outs
inc
cmps
out
cmp
cmps
jb
cmp
push
in
jb
xlat
leave
inc
mov
jmp
movs
sub
inc
call
test
mov
jecxz
push
addr16
cmp
jbe
stc
xchg
rcr
adc
jecxz
jl
or
js
enter
mov
out
cmc
(bad)
mov
push
sub
cmp
sub
jge
xchg
movntq
repnz
adc
push
rol
mov
fs
pop
(bad)
int3
cli
jbe
(bad)
int
cmp
jp
mov
add
cmp
sub
xor
pushf
and
adc
adc
and
out
push
inc
sub
ins
(bad)
add
test
in
dec
(bad)
(bad)
sbb
xchg
daa
js
or
dec
loop
mov
add
mov
pop
cdq
lods
sbb
jp
xor
movs
pop
ret
push
jo
dec
pop
jbe
daa
popa
dec
xchg
repz
or
mov
xchg
xchg
retf
mov
adc
mov
dec
imul
pushf
dec
fimul
ds
xchg
jmp
test
rcr
ror
jmp
icebp
call
dec
mov
dec
mov
jne
aam
sbb
lds
jbe
ins
loopne
and
call
mov
dec
sub
cmp
outs
cmp
mov
mov
and
sbb
inc
fnstenv
pop
adc
xor
cs
push
ret
push
repnz
sar
push
popf
lock
sbb
sbb
popa
inc
dec
out
js
mov
mov
mov
jnp
ror
dec
adc
jbe
pop
adc
std
js
and
imul
jo
loope
outs
sub
xchg
pop
push
pop
jle
dec
xor
jns
lds
and
je
dec
push
lods
xchg
mov
pop
jmp
dec
push
mov
mov
int
mov
hlt
aad
pmullw
jecxz
das
nop
xor
jecxz
into
jo
test
gs
add
inc
pop
inc
pop
les
test
enter
xor
hlt
mov
push
imul
aad
adc
ss
pushf
mov
nop
repnz
scas
mov
shr
mov
sub
lock
pop
or
outs
xor
shl
add
and
pop
mov
ss
xchg
sub
sub
sbb
push
mov
pop
ret
ficomp
add
sub
shl
clc
jmp
loopne
add
push
cmp
pop
sysenter
sbb
sti
mov
aaa
jns
sbb
inc
ret
not
lds
add
xchg
adc
movs
dec
adc
mov
jmp
cmp
inc
ja
pop
in
add
fbstp
adc
push
shl
mov
rcr
push
mov
(bad)
jae
aam
sbb
jns
outs
inc
das
adc
pop
repz
in
xor
lods
or
vxorpd
movs
imul
movs
mov
retf
or
fisttp
inc
cmps
pcmpeqd
xor
mov
popa
(bad)
fidivr
and
pop
mov
inc
outs
gs
icebp
mov
cdq
mov
sbb
sbb
jbe
int
mov
pop
lods
pop
sub
sbb
pop
in
fbstp
cmp
sti
inc
mov
mov
mov
inc
cmc
cmp
jo
es
(bad)
in
push
and
push
push
push
xor
leave
dec
cmps
shl
movs
data16
test
retf
or
out
and
xchg
cld
ins
call
dec
jecxz
mov
pop
jle
or
dec
mov
push
call
cli
inc
aad
std
pop
xor
mov
mov
jge
ret
xor
icebp
scas
test
and
sub
push
rcl
adc
sbb
sbb
inc
ins
es
pop
repnz
cmp
aas
imul
cwde
mov
sub
xchg
aad
and
inc
cdq
push
das
(bad)
mov
out
pop
mov
popa
outs
dec
jecxz
fbld
mov
imul
outs
push
cmps
push
out
shr
push
adc
popa
test
leave
sbb
cmp
ins
inc
ds
adc
outs
mov
sub
pop
cmp
cdq
(bad)
mov
lar
fldenv
ins
out
cmps
sbb
cmps
outs
cwde
pop
fcomp
data16
mov
stos
sub
stos
fisubr
xor
cmp
xor
ja
jp
ror
cwde
ja
retf
xor
(bad)
(bad)
ficomp
iret
inc
push
cmp
dec
mov
dec
sub
aaa
out
sti
call
scas
imul
mov
mov
daa
sub
data16
cmp
mov
xor
retf
pushf
(bad)
mov
xchg
(bad)
cmp
jnp
pop
sahf
adc
stos
xor
lds
pop
mov
or
loope
cdq
js
xchg
std
fisubr
stc
pop
daa
or
adc
cli
push
push
jbe
and
imul
xchg
jnp
fs
sub
inc
loopne
adc
mov
sti
movs
add
stc
(bad)
or
mov
aaa
test
mov
(bad)
lods
sbb
(bad)
(bad)
loop
(bad)
out
jge
lods
dec
and
scas
mov
mov
sub
jp
xor
out
pop
mov
push
stos
test
cdq
ins
jge
loopne
push
sub
pop
sub
dec
jbe
fs
test
pop
pushf
mov
retf
retf
adc
imul
ror
sub
xor
mov
jne
jnp
ja
xchg
cdq
popa
xchg
xchg
pushf
(bad)
aam
jns
mov
scas
(bad)
ss
dec
inc
stc
or
(bad)
jns
mov
inc
jmp
addr16
repz
dec
jecxz
adc
cmps
mov
outs
pop
cmp
pop
loope
int3
sahf
popf
dec
jns
retf
push
dec
(bad)
pop
mov
cmp
out
push
aad
cli
imul
stos
call
scas
mov
ins
test
fsub
or
jp
rcr
cmp
push
das
fnsave
adc
cmc
push
outs
aad
mov
push
add
inc
std
inc
lahf
or
jmp
aas
push
test
add
pop
je
stos
or
dec
jg
icebp
std
mov
daa
push
js
xchg
or
sbb
adc
xchg
inc
pop
std
test
in
stos
mov
out
repz
cdq
sahf
imul
push
imul
inc
push
jo
jmp
mov
inc
mov
jl
sbb
mov
cmp
xlat
or
dec
ds
xchg
pop
sti
nop
je
je
mov
mov
and
mov
sar
pop
and
rcr
stos
dec
mov
leave
mov
ja
pop
f2xm1
lahf
std
sub
or
cdq
jg
mov
push
ss
pop
aas
xchg
and
in
or
cmps
cwde
xchg
xor
jne
or
je
pop
mov
jbe
sub
mov
xchg
(bad)
sub
pop
inc
leavew
jg
sbb
xchg
call
inc
lock
or
jb
mov
mov
jae
jp
push
xor
fs
je
mov
jae
cmp
pop
icebp
lock
adc
sbb
mov
sub
leave
aad
jae
dec
adc
aaa
push
rol
jae
or
in
push
xchg
stc
pusha
mov
outs
sahf
cmps
(bad)
outs
retf
clc
ins
fist
neg
retf
mov
aam
sub
in
ins
pop
or
scas
mov
das
xchg
inc
inc
int3
pop
cdq
outs
jl
jo
pop
mov
add
movs
jns
xor
sbb
test
ins
nop
ss
(bad)
mov
sar
push
ror
inc
mov
cmp
xchg
loop
outs
jmp
jmp
lds
inc
xchg
aad
sar
sar
iret
(bad)
repnz
xor
xchg
add
sbb
sub
adc
pop
retf
mov
scas
scas
and
outs
lods
aad
or
arpl
adc
out
(bad)
cld
pop
xor
inc
retf
sti
movs
or
leave
push
sbb
retf
mov
int3
jns
cmps
sbb
pop
rcl
mov
sar
mov
mov
jecxz
movs
add
pop
dec
push
mov
push
loope
ins
aam
push
cmp
add
ficom
cmp
das
jmp
mov
pop
icebp
(bad)
(bad)
or
xchg
ss
or
sbb
loopne
hlt
lods
cmp
cmp
es
mov
stos
mov
(bad)
repnz
add
pop
jg
sti
push
ja
mov
les
and
mov
add
dec
lds
xchg
adc
lahf
cli
repz
ins
call
push
sar
ret
push
fiadd
or
(bad)
int3
dec
cs
leave
push
xor
adc
les
cld
ret
mov
leave
sbb
mov
jb
cmps
push
test
cmps
scas
push
add
sub
retf
pop
enter
xchg
fmul
call
es
inc
ss
aaa
ffree
scas
push
stc
mov
mov
jns
jecxz
pop
out
shl
lahf
and
push
imul
pop
and
pop
sub
push
jp
outs
mov
loop
fdecstp
sbb
and
adc
out
jno
xchg
pop
pop
push
xor
inc
xchg
push
inc
lea
dec
jno
push
stos
push
xor
mov
ins
outs
cmps
ss
std
jg
daa
jmp
and
sub
xlat
pmovmskb
sub
push
pop
cdq
shl
xlat
dec
sahf
cmps
mov
lods
mov
mov
repz
sbb
sbb
repz
out
cdq
stos
jno
ror
cmc
sahf
push
ret
das
(bad)
repnz
xchg
push
(bad)
jmp
dec
outs
les
mov
push
cwde
cmp
movs
xor
div
and
jmp
fisubr
cmp
bound
and
std
adc
cmp
outs
cmp
mov
out
jae
nop
clc
add
sbb
(bad)
test
ds
sahf
xchg
jl
mov
cmp
movs
dec
in
jb
xchg
loop
jecxz
cdq
push
jno
arpl
jo
call
retf
cmp
cmp
add
add
ss
lds
mov
in
jnp
xlat
sub
push
inc
movs
mov
and
js
test
retf
jge
cli
call
test
into
pop
fwait
push
aas
out
and
movs
cmp
pop
daa
xor
and
or
mov
adc
imul
sbb
out
mov
mov
fistp
cmp
add
sbb
add
aam
mov
out
pop
lods
(bad)
push
sbb
ins
movups
inc
inc
jo
jb
inc
out
lahf
push
fisub
dec
mov
int
clc
stos
jmp
ins
in
mov
sub
xor
cmp
mov
test
in
inc
cs
outs
push
sbb
xor
sub
jl
rol
fisttp
dec
mov
shl
in
pusha
xlat
jns
icebp
mov
pop
das
xchg
enter
xchg
ret
xchg
mov
push
es
cmps
popf
mov
ja
jmp
sbb
ss
lea
movs
std
xchg
fild
pop
sar
pushf
ja
cmp
mov
push
mov
lahf
sub
fidiv
call
in
das
test
mov
in
inc
cli
sbb
cmps
mov
pop
mov
scas
outs
test
mov
cmps
lea
imul
jg
inc
xor
imul
lds
aas
dec
push
inc
test
pushf
mov
out
inc
xor
(bad)
mov
or
bound
mov
xor
hlt
outs
mov
inc
repnz
and
imul
lods
iret
imul
mov
ins
dec
jle
ss
mov
sub
mov
pop
or
xchg
bound
dec
inc
(bad)
cmp
cmps
push
arpl
test
loope
mov
test
jb
inc
inc
mov
je
cmp
call
pushf
fld
and
or
nop
sbb
rol
jmp
movs
popf
sub
mov
mov
sbb
or
hlt
sar
or
imul
jb
push
mov
leave
je
cli
jbe
jmp
mov
and
cwde
xchg
in
dec
cmps
mov
aam
mov
jmp
icebp
jbe
repz
or
in
cmc
movzx
xor
jno
or
inc
and
sbb
scas
fst
adc
jmp
scas
inc
stos
push
scas
shr
or
mov
popf
ins
fcmovnb
stos
pop
stc
jge
or
out
cmp
xor
mov
and
(bad)
pop
pop
mov
scas
push
sbb
add
(bad)
sar
mov
stc
aas
(bad)
shl
and
fisttp
sahf
cs
and
push
cmp
or
ret
das
xor
inc
pop
jno
push
jae
pop
and
repz
test
cmp
int
sar
mov
in
lahf
iret
(bad)
pop
cmp
imul
mov
push
fsub
sahf
ins
pushf
daa
outs
sub
xchg
pushf
push
mov
shl
sbb
xchg
mov
push
inc
lock
call
arpl
pop
outs
pusha
ror
push
push
mov
mov
add
(bad)
cmps
mov
ss
dec
sub
neg
mov
pop
ret
(bad)
sbb
iret
pop
push
mov
or
or
mov
xor
aam
push
xor
jecxz
inc
ins
mov
cmp
xor
jmp
fadd
pusha
in
xchg
xchg
cli
cmc
mov
inc
dec
mov
jecxz
add
sbb
aad
sub
mov
sbb
imul
adc
xchg
adc
jnp
cmps
sub
fnstenv
int3
inc
inc
arpl
jo
sub
jae
push
sbb
or
rol
cwde
inc
das
mov
popf
bound
add
ret
out
(bad)
mov
sub
mov
loope
int3
enter
xchg
in
hlt
lds
call
imul
mov
or
loop
mov
(bad)
fsub
or
pop
jmp
popa
mov
xor
shl
call
int3
rcr
push
leave
leave
ds
xor
push
or
xchg
inc
jl
jnp
jmp
and
pop
sbb
popf
enter
inc
sar
xor
fbld
or
(bad)
(bad)
xor
or
cmc
push
aas
cmp
xlat
dec
ret
arpl
jg
inc
mov
rcl
cmp
mov
in
pop
(bad)
mov
add
enter
push
jmp
jnp
mov
inc
add
cmps
outs
jp
rcl
mov
mov
out
xchg
lock
sbb
xor
stos
xchg
pop
cmp
mov
iret
adc
aad
jo
mov
xchg
xor
in
test
sbb
push
ror
cdq
call
xlat
nop
lea
enter
dec
pop
inc
int
xchg
pushf
or
push
add
jmp
test
sbb
jecxz
mov
sub
push
cmc
popa
dec
repz
ret
sar
stos
inc
push
mov
ss
movs
lahf
sub
pop
or
xor
add
enter
cmp
jmp
ret
sub
add
call
in
mov
in
xchg
addr16
mov
outs
call
(bad)
out
popf
push
leave
sub
xchg
ds
mov
pop
aas
js
pusha
and
xor
mov
cmp
xor
ds
dec
dec
popf
or
std
mov
int3
xor
inc
xchg
mov
dec
inc
inc
add
enter
sti
or
fstp
out
loopne
movs
push
(bad)
in
xchg
scas
mov
jae
cdq
daa
mov
or
rol
in
bound
test
adc
sub
xchg
inc
pop
jp
in
pusha
or
pop
add
lahf
les
enter
outs
fimul
push
mov
push
fwait
inc
(bad)
pop
mov
pop
stos
pop
arpl
mov
div
shl
mov
mov
xor
retf
adc
das
xchg
data16
in
pop
add
push
aaa
mov
mov
mov
je
or
add
inc
cli
inc
mov
sbb
or
inc
fnsave
sub
inc
sbb
mov
cwde
(bad)
(bad)
xor
push
adc
mov
fdiv
rcr
aas
push
out
test
sbb
and
into
iret
mov
ins
stos
icebp
mov
and
ins
and
inc
pusha
outs
daa
pop
in
cdq
fcomp
mov
jmp
sbb
in
loopne
cli
int
pop
jnp
rol
mov
jecxz
lods
mov
and
mov
or
jne
adc
or
push
xor
add
xchg
xlat
repz
mov
int3
nop
adc
inc
or
cmps
push
repnz
mov
enter
das
mov
cmp
ss
jns
jmp
fcmovne
and
aam
ins
dec
into
push
repnz
xchg
pop
xor
ds
xchg
dec
outs
in
mov
xchg
and
dec
test
lahf
sub
out
sub
mov
xor
arpl
sbb
cmps
jmp
popa
sbb
inc
mov
sbb
or
or
retf
mov
mov
xor
xor
mov
sub
pusha
sbb
or
call
rcr
test
cld
sbb
xchg
cmps
cmp
adc
sahf
cmp
out
loope
test
and
aas
mov
pushf
and
xchg
test
aas
jne
pop
stos
sahf
leave
sub
inc
(bad)
xchg
push
ja
inc
push
xchg
or
out
les
icebp
xchg
fsub
call
repz
dec
fsubr
stc
xchg
pushf
push
dec
out
sbb
enter
les
ins
popf
ror
adc
push
aam
pusha
pop
loopne
pushf
arpl
dec
mov
mov
dec
push
and
pop
pop
ret
mov
pop
call
jno
dec
cmps
mov
pop
mov
lock
xor
ss
mov
push
shl
(bad)
cs
pop
push
iret
xchg
lock
retf
mov
adc
pop
sbb
gs
add
inc
or
lea
adc
or
xor
inc
and
(bad)
pusha
call
inc
xlat
ss
cmc
add
pop
int3
mov
sbb
and
test
dec
pop
xchg
and
(bad)
mov
jge
popf
xor
imul
mov
push
pop
sti
dec
add
repnz
bswap
add
mov
rcl
stos
ret
adc
adc
mov
cmp
scas
idiv
sbb
int
jp
pop
mov
loop
inc
rcl
mov
js
push
je
dec
cli
in
fs
xor
pop
test
sbb
inc
jne
push
retf
mov
out
out
aas
mov
fst
or
pusha
pusha
inc
or
mov
lods
iret
outs
inc
cmp
aam
fdivr
jge
and
dec
pop
test
mov
cli
pop
fimul
dec
jne
dec
pop
popa
(bad)
lods
xchg
(bad)
cmp
ret
fimul
ins
sbb
adc
and
jge
adc
add
mov
popf
movs
push
mov
mul
scas
jg
in
std
xchg
cld
dec
arpl
cmp
pop
xchg
jmp
push
pop
mov
dec
ret
dec
or
ins
(bad)
pop
ins
mov
movs
or
add
out
int
adc
xchg
je
nop
adc
movs
jmp
jne
scas
das
in
inc
mul
cmp
inc
cmp
fucom
xor
mov
adc
jle
or
inc
xlat
inc
pop
mov
add
cmps
jl
adc
adc
mov
dec
adc
bound
addr16
aam
sub
add
sub
fs
out
ds
cwde
mov
mov
in
je
nop
mov
xchg
push
stos
jmp
dec
icebp
push
cmp
adc
mov
in
daa
ds
pop
ret
(bad)
lods
cmc
add
xchg
loop
push
mov
sub
adc
fwait
in
dec
aaa
out
adc
test
or
rol
ret
cmps
and
les
cdq
shr
cs
movs
ret
push
mov
xchg
push
std
and
jmp
clc
scas
mov
adc
fmul
cmp
out
lods
les
push
inc
sub
loop
leave
sub
mov
inc
ficomp
hlt
daa
xchg
xlat
aas
and
rol
pop
popa
jnp
push
inc
out
sub
aad
repnz
push
adc
push
(bad)
push
jae
xchg
mov
fsub
ja
int
aaa
lods
cmp
std
ds
add
cdq
xor
jmp
or
out
jg
fdiv
hlt
push
iret
int3
dec
sub
outs
dec
sbb
ins
dec
xchg
je
jge
ss
dec
sahf
fsubr
jle
and
addr16
imul
and
int
sar
out
int3
ins
jmp
adc
lahf
je
(bad)
(bad)
sahf
je
aas
cmps
lea
or
fcom
call
mov
jmp
stos
enter
push
jns
call
rcl
(bad)
mov
cmp
jb
sub
mov
daa
rep
jne
int3
outs
dec
pop
pushf
jae
cwde
das
in
lahf
inc
jge
push
push
(bad)
ror
inc
call
add
call
jp
shl
pop
(bad)
out
adc
retf
jl
adc
enter
sbb
inc
bound
fsub
sub
adc
out
rol
ror
cmp
loop
inc
pusha
inc
dec
jne
pop
cmc
sub
pop
loopne
pop
fisubr
movs
mov
cwde
stc
faddp
pop
ss
cdq
aaa
not
mov
push
add
stos
sub
loope
push
jb
sbb
cmp
mov
ins
loope
ja
add
mov
inc
mov
xor
movs
dec
mov
aad
sub
fsubr
fidivr
fwait
cli
inc
mov
mov
and
mov
adc
pop
xchg
adc
or
jnp
ins
mov
fsubr
fcmovne
popa
clc
mov
mov
rol
xchg
inc
popf
adc
xor
jle
jae
stos
lock
outs
xor
ret
mov
pop
or
fsub
mov
fldcw
sub
outs
retf
lahf
jle
adc
movs
sahf
inc
mov
les
movs
std
(bad)
stc
lock
ins
adc
push
xor
loope
or
fdivrp
push
sar
adc
adc
inc
lea
sbb
mov
xor
cmp
cmp
xchg
(bad)
sti
cli
pop
mov
push
dec
push
mov
adc
push
mov
(bad)
in
and
fcomp
mov
outs
jno
add
adc
pushf
shl
outs
xchg
pushf
push
outs
sbb
xor
dec
and
pop
xchg
pushf
or
in
idiv
je
cmp
das
(bad)
sbb
mov
push
(bad)
loope
mov
and
movs
and
out
sub
fdivr
xlat
inc
sub
pop
cmc
bound
sbb
mov
sub
mov
push
mov
mov
jno
mov
mov
push
inc
sahf
cld
sub
jl
test
cvtps2pd
adc
(bad)
mov
test
add
cdq
call
fsub
aam
mov
test
lds
jnp
push
(bad)
xor
pusha
xchg
(bad)
aam
popa
add
es
fnstsw
hlt
(bad)
mov
xchg
jp
mov
xor
sti
sub
cmp
aas
mov
rcr
pop
fisttp
mov
inc
lods
outs
pop
push
(bad)
in
dec
add
jne
es
pop
imul
std
sbb
mov
xchg
and
xlat
xor
xlat
idiv
mov
or
nop
pop
mov
sub
pop
jne
or
fmul
inc
pusha
outs
mov
pop
imul
aaa
cmp
shld
clc
pop
enter
push
sub
cmp
ja
cmp
and
pcmpgtd
imul
das
jb
cmc
cmp
mov
inc
fistp
imul
jmp
sub
ins
pop
dec
loop
test
fistp
push
sbb
fidiv
fdivp
gs
inc
jbe
(bad)
lods
dec
cmps
cmps
mov
add
mov
jns
call
xchg
xchg
or
push
aam
jecxz
fadd
jno
lock
icebp
in
push
sub
pop
pop
das
fldcw
es
mov
retf
push
das
sbb
daa
stos
ja
ins
dec
xchg
push
pop
mov
nop
sbb
lahf
xchg
ins
adc
pop
cmp
rcl
mov
lahf
xchg
jo
mov
mov
or
add
sub
fisttp
inc
in
arpl
aas
mov
das
jae
das
and
inc
sub
or
leave
sbb
aas
pop
push
aas
pushf
cmc
mov
aas
adc
or
cmp
mov
inc
(bad)
retf
repnz
stos
enter
pop
cwde
inc
mov
inc
jne
fwait
mov
rcl
push
xchg
push
outs
sub
loope
nop
mov
iret
mov
add
fstp
int
mov
fwait
mov
retf
sub
loope
ss
addr16
cld
inc
inc
(bad)
aad
cmp
adc
cmp
mov
test
pop
jne
retf
icebp
stos
in
push
inc
mov
jp
test
xor
xchg
push
sti
stos
stos
or
inc
xor
jge
out
push
and
mov
xor
pusha
test
cs
(bad)
hlt
mov
pop
dec
mov
(bad)
pop
in
inc
in
in
pop
add
not
test
push
push
not
add
gs
push
into
pop
in
pop
test
pop
out
and
add
fldcw
push
pop
hlt
pop
push
xlat
in
mov
fnstcw
sub
aaa
jae
mov
mov
les
addr16
pushf
xor
sub
cmp
cmps
mov
sub
movs
sbb
fisubr
sbb
ret
iret
int
and
dec
enter
sub
(bad)
pop
add
add
out
aaa
arpl
jecxz
icebp
mov
cmp
push
mov
sub
sub
scas
int
fnstcw
mov
push
dec
xchg
mov
push
push
mov
and
lock
aas
jmp
rol
cmps
cmp
std
pop
(bad)
jno
popf
jb
xchg
mov
popa
enter
add
fs
cmps
cmp
and
pop
shl
retf
dec
(bad)
jecxz
fnop
stos
xchg
push
sub
(bad)
std
arpl
xchg
es
test
mov
clc
scas
mov
out
fidivr
jbe
add
xchg
ja
jo
scas
dec
push
and
(bad)
clc
jmp
push
popf
cmp
inc
in
jecxz
lahf
mov
and
mov
cmps
ror
stc
mov
pusha
test
and
mov
data16
out
neg
dec
das
inc
lods
and
dec
adc
and
fstp
add
sub
pushf
mov
pushf
fwait
push
mov
mov
mov
ficomp
out
sbb
inc
ins
imul
stos
dec
nop
or
sub
and
cmp
sub
repnz
xor
sbb
push
outs
jnp
push
adc
pop
sub
cmp
imul
(bad)
iret
push
popf
mov
ficomp
int3
dec
js
xchg
jbe
sub
pushf
nop
outs
fdivr
xchg
(bad)
xchg
xchg
inc
adc
out
es
fidivr
cmp
pop
into
mov
inc
out
test
into
push
fsubr
fist
or
adc
and
cmp
outs
test
mov
cmp
jmp
in
iret
xor
fs
in
push
sub
jnp
add
jae
pop
sub
pop
or
fwait
push
jmp
inc
jmp
imul
xor
enter
pop
in
nop
sbb
mov
sub
push
add
jns
push
push
mov
push
stos
popa
xchg
mov
dec
mov
push
or
cmp
cmps
cli
xchg
ja
and
dec
adc
shl
fild
inc
mov
fnstenv
ror
(bad)
retf
bound
inc
call
les
arpl
movs
push
sti
ds
daa
sub
xchg
nop
pusha
dec
dec
mov
push
in
leave
mov
mov
xchg
mov
inc
pusha
adc
pop
cli
div
pop
and
enter
out
mov
loop
adc
loopne
and
and
add
div
enter
in
mov
repz
sbb
xchg
cmps
mov
adc
sub
int3
pop
int3
xchg
adc
dec
or
xchg
sub
rcr
lahf
loopne
adc
jmp
fnstsw
stos
pop
or
mov
jecxz
test
jle
mov
sub
and
push
or
cmp
adc
addr16
stos
fsub
xor
icebp
div
popf
sub
mov
repz
sbb
inc
xor
out
in
xor
lods
xor
in
sbb
xchg
fs
mov
jnp
pop
outs
mov
or
mov
sub
std
cli
sahf
add
pop
fcomp
inc
mov
pushf
xor
inc
and
mov
mov
or
xor
sbb
sar
jnp
popf
jmp
(bad)
adc
div
jb
pop
mov
in
xor
bound
jle
in
test
xor
mov
ins
jl
dec
(bad)
loopne
or
adc
cdq
sbb
stc
ret
stos
mov
pop
scas
dec
lods
or
sbb
mov
shl
sub
(bad)
in
imul
shl
(bad)
stos
or
mov
rcr
xchg
jo
jbe
enter
mov
nop
movs
or
pop
loope
jno
jmp
popf
jo
sbb
jge
imul
push
fs
cmp
mov
test
xor
sti
mov
mov
retf
aaa
rol
or
fdivr
and
push
scas
mov
mov
icebp
call
nop
cmp
pop
jae
test
mov
popa
ja
sub
or
adc
mov
mul
add
jl
sti
sbb
popa
lock
inc
push
xor
sbb
shl
push
imul
add
loope
mov
add
pop
jmp
into
(bad)
sub
mov
imul
imul
or
loope
icebp
dec
dec
and
sub
sub
xchg
and
pop
push
cmp
in
ins
mov
shl
xchg
inc
pop
aas
(bad)
movs
adc
imul
xor
sbb
pop
mov
sbb
inc
push
dec
popa
mov
xlat
jg
inc
add
mov
jge
and
xchg
pushf
fbld
dec
das
sbb
lock
adc
icebp
inc
pop
cld
mov
in
pop
sub
sbb
dec
icebp
mul
push
mov
scas
push
(bad)
dec
seto
sub
jmp
mov
pop
loopne
xchg
fadd
mov
jmp
fldenv
fsub
fimul
stos
cld
add
dec
pop
adc
mov
add
retf
pop
sbb
mov
xor
mov
je
movzx
call
xor
std
test
push
jge
pop
adc
xor
sbb
xchg
mov
imul
sti
jl
outs
push
jne
test
mov
dec
jl
imul
int
lods
mov
adc
fdivrp
push
sub
or
pop
dec
xor
or
adc
and
idiv
ror
cmp
mov
jge
cmp
mov
mov
xchg
xchg
cmps
outs
cs
and
(bad)
xchg
mov
jle
daa
xchg
sbb
or
adc
outs
jmp
pop
int
push
lahf
xor
idiv
and
addr16
pushf
test
jmp
bound
in
idiv
xchg
jp
mov
mov
sahf
add
loopne
add
adc
push
jmp
xchg
test
dec
sub
shl
in
cmp
(bad)
mov
ret
ret
inc
enter
icebp
mov
dec
daa
(bad)
mov
xor
and
dec
and
mov
pop
sub
or
jle
lea
inc
aam
jo
sbb
outs
and
mov
jmp
mov
mov
pop
xor
shl
cmc
test
dec
hlt
cwde
add
cmps
mov
push
pop
and
inc
dec
mov
dec
aam
add
adc
sbb
mov
loop
dec
and
popa
mov
sti
test
shr
mov
add
mov
imul
adc
mov
(bad)
xor
loopne
(bad)
dec
mov
ja
mov
into
pop
adc
push
pop
xchg
shl
in
xchg
xchg
int
sar
icebp
mov
and
inc
adc
dec
inc
mov
mov
pop
cdq
and
cld
out
shr
push
mov
and
stos
and
or
(bad)
hlt
in
ret
fidiv
jecxz
pop
popf
cs
push
add
dec
jo
inc
(bad)
mov
outs
icebp
push
lds
sub
test
nop
je
movs
push
jb
loop
jmp
adc
push
cmp
or
call
sti
push
dec
sub
(bad)
jno
mov
xchg
loope
push
in
call
push
jecxz
xchg
cmps
sub
into
lods
es
jmp
aas
xor
repnz
sahf
repz
das
push
jg
pop
cmp
dec
gs
ret
data16
aaa
(bad)
mov
xor
mov
inc
push
ss
loope
test
sub
cmp
inc
inc
push
nop
daa
hlt
fwait
jp
push
call
out
pusha
and
aad
cmp
jp
sub
fstp
cdq
push
add
pop
repz
fwait
and
mov
pop
cli
inc
cmps
mov
and
es
outs
pop
mov
fadd
dec
aas
aam
jmp
pop
push
mov
sbb
or
cmps
dec
sub
cmps
push
dec
push
push
aaa
xchg
jae
xchg
daa
jb
dec
mov
rol
stos
and
sub
movs
pushf
dec
xor
mov
xor
test
inc
jg
(bad)
scas
and
mov
dec
mov
jno
clc
mov
push
daa
push
dec
std
fwait
mov
jle
repz
and
and
mov
dec
xor
xchg
in
pop
mov
and
adc
out
pop
call
addr16
cdq
dec
pop
data16
(bad)
enter
push
sub
cmp
mov
imul
mov
mov
sbb
fs
adc
cmps
out
jne
rcr
or
mov
sub
dec
mov
ja
add
mov
fcomp
inc
mov
retf
sub
dec
inc
(bad)
pop
push
mov
icebp
or
arpl
shl
and
sti
icebp
(bad)
jle
cmps
push
dec
add
push
movs
xor
addr16
jge
pop
inc
out
ror
jb
stos
stos
xor
or
inc
(bad)
dec
inc
xchg
sahf
cmp
mov
mov
std
jbe
push
mov
xor
ins
jno
pop
inc
js
retf
and
mov
fs
iret
mov
retf
sub
sbb
adc
sti
imul
leave
adc
aad
lods
pop
pop
jp
pop
out
xor
ins
or
(bad)
add
aaa
pop
xor
test
test
add
and
(bad)
adc
jns
and
add
jmp
jl
les
sti
mov
pop
inc
sub
ss
fs
mov
inc
cdq
imul
ja
mov
sbb
sbb
out
mov
cmp
stos
push
int
ret
xchg
aad
push
cmc
fwait
ret
pop
cli
in
push
dec
div
repz
mov
stc
or
push
jno
mov
ins
pop
mov
xchg
mov
mov
retf
or
mov
ds
add
push
call
mov
and
or
adc
test
jo
out
gs
jle
movs
cwde
jmp
pusha
mov
jne
das
jno
mov
cmps
cld
jo
pop
adc
xchg
pop
mov
lock
mov
and
sbb
cld
clc
cmp
xchg
add
clc
fimul
sbb
mov
mov
out
cmps
cmp
std
mov
and
fisub
nop
jmp
mov
out
jmp
cmp
shr
and
mov
jb
pusha
clc
inc
mov
lock
sub
mov
pop
mov
sbb
lahf
test
jae
mov
loop
dec
add
cdq
and
std
sub
out
mov
stos
repz
jne
ins
outs
inc
lds
(bad)
js
lock
call
or
ins
cmp
fwait
jno
sbb
lds
mov
sbb
pop
mov
aad
mov
xchg
ja
ins
(bad)
cmp
rcr
lods
mov
xor
push
xchg
(bad)
in
movs
push
add
cmp
xor
fcmovb
sbb
inc
and
jp
push
(bad)
leave
and
cmp
mov
fmul
scas
xor
pop
cmp
retf
inc
push
push
cmp
jge
and
sbb
add
sbb
cmp
je
stos
aas
dec
mov
mov
sub
inc
xchg
cs
pop
aas
sbb
dec
(bad)
cmp
dec
jg
mov
lock
ins
retf
jae
push
push
push
loopne
or
cmc
push
pop
(bad)
ja
pop
imul
inc
pop
mov
das
mov
dec
cs
and
in
dec
out
xor
push
jne
pop
push
scas
xor
iret
(bad)
leave
inc
pop
mov
jbe
daa
dec
outs
cli
arpl
jbe
(bad)
sti
and
in
fst
test
adc
in
jb
pop
stc
sub
jbe
int
loop
jge
push
scas
in
stc
cmc
outs
je
xor
jbe
mov
lea
pop
je
mov
into
pushf
pop
cmp
(bad)
xchg
and
adc
mov
cmp
repnz
aaa
sbb
fistp
cmp
xchg
gs
aas
pop
sub
gs
jp
sub
jmp
fsub
sahf
jmp
push
ins
cli
loop
xor
add
sbb
mov
pop
ret
pop
dec
push
push
push
add
mov
cli
out
jle
dec
jae
arpl
cmp
sbb
pop
jae
xlat
sbb
fisttp
sbb
in
in
test
je
or
jo
enter
push
mov
adc
pop
fs
add
fwait
sbb
out
inc
jle
jle
mov
or
pop
xor
sub
and
js
enter
sar
or
aas
(bad)
jp
out
test
movs
movs
xor
dec
aad
ror
push
aam
sub
jg
adc
xor
xchg
stc
lock
stos
xchg
mov
jbe
dec
add
pop
dec
in
mov
or
mov
arpl
icebp
loop
ins
dec
push
mov
jnp
lods
jmp
clc
mov
iret
mov
int3
fwait
sbb
xor
ret
xchg
test
outs
(bad)
arpl
adc
scas
int3
jmp
pop
xchg
in
dec
pop
mov
push
sti
jl
xor
pop
lds
mov
retf
mov
out
push
data16
icebp
(bad)
cdq
sub
mov
ficom
xchg
mov
popa
sub
jmp
test
or
push
cs
mov
popf
jecxz
push
xchg
retf
mov
cmp
dec
sti
push
aaa
inc
add
repnz
xor
xchg
les
sbb
pushf
imul
test
push
ret
sub
push
ror
xchg
out
add
test
or
aam
mov
xor
adc
outs
dec
sub
cmp
ret
add
dec
jne
cmp
call
jae
dec
pushf
and
out
arpl
fisttp
xor
cli
push
sub
mov
adc
(bad)
mov
xchg
inc
sbb
dec
xor
sti
ins
mov
and
ror
cdq
mov
int3
mov
push
test
adc
arpl
jno
xchg
xchg
test
mov
sub
int
xchg
addr16
jmp
js
mov
data16
lock
repnz
adc
add
jne
fisubr
or
arpl
ja
xchg
repnz
rcr
cmp
frstor
sti
lods
mov
fcmovu
sar
popf
ret
jne
pop
jmp
in
adc
rcr
test
fwait
xchg
mov
test
cmp
arpl
cmc
push
pushf
lds
dec
cmps
cmc
or
cdq
xor
mov
adc
inc
adc
ja
stos
mov
je
or
bnd
sub
iret
xor
addr16
cwde
lods
mov
xchg
add
mov
es
add
jg
add
clc
outs
fs
adc
add
(bad)
mov
xlat
add
pop
add
mov
sub
cld
or
add
mov
sbb
imul
pop
and
fimul
out
adc
pop
mov
jge
push
push
cmp
add
in
out
pop
in
dec
mov
cmps
mov
mov
and
iret
vpinsrw
(bad)
movs
mov
ja
scas
(bad)
out
or
or
cdq
fbld
out
mov
and
jns
je
and
movs
and
jns
loope
(bad)
(bad)
xchg
dec
scas
repz
xchg
push
mov
pop
or
xchg
jne
mov
inc
clc
in
addr16
in
repnz
leave
cmp
inc
pop
imul
push
sub
sbb
clc
dec
pusha
es
pop
cmp
push
pop
dec
inc
xchg
mov
daa
push
lahf
shl
(bad)
js
push
adc
lock
nop
pop
fwait
pop
xchg
xchg
outs
mov
sbb
push
ss
and
pop
ss
fist
stc
aam
inc
mov
xchg
add
repz
mov
jbe
lods
dec
sub
push
fsubr
ror
cmc
fs
outs
xchg
push
dec
jns
in
shr
lahf
push
imul
stc
inc
sub
int3
les
add
pop
iret
pop
mov
xor
cmp
(bad)
pop
or
or
(bad)
mov
shr
je
mov
sbb
push
mov
inc
mov
sti
js
movs
fld
les
popf
in
xchg
daa
test
bound
or
jne
fisub
jecxz
scas
test
mov
stos
xchg
(bad)
fdivr
push
test
and
(bad)
outs
jns
sbb
add
lods
adc
scas
mov
adc
fstp
inc
jb
data16
fistp
cmp
push
imul
popa
inc
(bad)
cld
stos
pop
add
lock
loopne
or
std
sbb
rol
cdq
jecxz
sbb
adc
fimul
xor
xor
jae
in
add
add
loope
mov
repz
int3
lock
push
xchg
xor
(bad)
loop
mov
mov
and
jmp
xchg
xchg
(bad)
xor
mov
add
fbstp
clc
xchg
inc
je
aam
loop
sbb
pop
in
pop
push
sti
adc
sbb
out
aaa
out
cmps
cld
adc
test
push
arpl
aas
xchg
mov
cmp
push
and
xor
les
lea
and
rcr
inc
jb
mov
push
dec
cld
lods
mov
pop
sti
leave
mov
xchg
jl
ret
and
push
xor
arpl
sbb
stc
pop
sub
lods
adc
jg
mov
fstp
into
stos
xchg
cli
popf
pop
fs
retf
dec
pop
pushf
aas
inc
ret
mov
sti
jbe
loope
call
pop
jge
aas
add
test
push
mov
out
data16
cs
jmp
loopne
or
lods
in
xchg
sar
sbb
adc
in
or
cmps
(bad)
in
mov
sbb
mov
sub
xchg
xchg
sahf
icebp
lahf
jo
mov
lock
pop
or
std
add
mov
and
sbb
pop
out
ja
mov
in
adc
imul
xchg
aaa
das
mov
cdq
sub
aam
and
aas
or
mov
mov
pop
adc
pop
jo
sbb
out
nop
adc
repz
scas
jae
rol
scas
pop
rcl
sub
add
mov
lods
inc
repnz
push
mov
push
imul
inc
fisubr
push
sti
cs
into
mov
mov
or
mov
out
in
xchg
push
js
mov
gs
mov
push
aas
push
fld
not
shl
rol
stc
sbb
aam
loope
push
dec
xchg
inc
gs
es
dec
jo
js
out
repnz
jl
xor
hlt
add
movs
ja
inc
(bad)
retf
cmps
push
push
adc
xchg
jae
in
mov
(bad)
sub
shr
pop
int3
or
xchg
cmps
sbb
icebp
xchg
dec
fxch
fld
popa
and
cmp
popa
xchg
jbe
inc
ins
not
mov
shl
nop
or
rol
lahf
sub
aaa
adc
mov
mov
jl
xor
jle
cli
jmp
sub
jns
cmp
pop
add
(bad)
xchg
ret
sahf
scas
ss
loope
sbb
fwait
pop
mov
inc
lods
jbe
ret
add
pop
jne
mov
cmp
and
movs
fcom
aas
dec
inc
push
dec
adc
cmp
adc
pop
cmp
movs
cdq
mov
nop
shr
shr
xchg
dec
sub
mov
push
push
mov
mov
stos
rcl
mov
xchg
inc
inc
lods
lods
inc
test
enter
cmp
or
xor
push
call
test
push
les
inc
nop
xlat
out
mov
in
int
fst
sahf
adc
lahf
and
xchg
xchg
std
xchg
addr16
add
xor
xor
and
das
(bad)
rcr
or
pop
xchg
jp
lods
jne
sub
xor
outs
jmp
jp
push
xor
movd
mov
outs
sub
jb
loopne
icebp
loopne
push
inc
popf
cld
sub
push
push
add
aaa
or
mov
push
fs
lahf
xor
jae
mov
leave
xor
cmp
xchg
sbb
fdivr
aad
jnp
xchg
leave
lahf
xchg
shl
pop
pop
ret
add
dec
pop
push
dec
fimul
out
push
hlt
sub
mov
ja
int3
and
out
dec
stc
jbe
xchg
sub
mov
xchg
(bad)
enter
outs
sar
xchg
shr
xchg
ror
mov
or
and
jbe
mov
sbb
pushf
(bad)
sub
leave
test
inc
test
mov
arpl
add
data16
jmp
outs
test
or
hlt
(bad)
aaa
dec
inc
push
and
sti
mov
or
jecxz
scas
adc
(bad)
cmp
mov
xor
in
js
add
pop
or
lods
into
fsubr
pusha
mov
(bad)
arpl
mov
cmp
mov
sar
ja
out
jnp
mov
dec
pop
jnp
cmp
sar
sbb
push
pop
ins
stc
sti
lods
dec
sub
add
or
sahf
dec
aas
push
call
les
dec
icebp
cld
das
xchg
js
jno
push
inc
mov
bound
dec
je
sbb
mov
pop
push
xlat
push
jmp
dec
push
mov
xchg
xor
das
mov
aaa
out
(bad)
fisttp
ins
ror
ja
mov
xchg
dec
js
retf
xchg
dec
sub
sti
inc
call
aaa
mov
push
(bad)
out
test
xchg
out
pop
lods
mov
aaa
test
jmp
dec
pop
or
movs
mov
sub
icebp
popa
pop
int3
inc
pop
mov
cmp
in
icebp
int
cmp
cmp
loop
pop
adc
sbb
mov
pop
icebp
and
jl
cs
aad
cmc
add
fisttp
jo
aaa
mov
fstp
(bad)
jnp
nop
mov
loope
mov
and
jge
fadd
cmp
js
int
cmp
cmp
mov
mov
xchg
inc
shr
iret
retf
push
xor
pop
inc
call
add
and
fwait
cmp
jb
inc
fnstcw
adc
fld
jns
mov
add
jbe
pop
fnsave
and
adc
pusha
cld
sub
shl
dec
scas
and
clc
jl
repnz
pop
data16
fild
(bad)
mov
stc
imul
or
and
jp
sar
je
stc
cld
fisub
xchg
sub
jns
lods
in
push
push
add
or
xchg
xor
jne
xor
adc
jb
xor
leave
adc
iret
cld
push
movs
jmp
cmp
sbb
mov
not
xchg
imul
fsubr
mov
xor
and
mov
lods
call
dec
add
xor
clc
nop
je
xor
psubd
sbb
stos
int
push
nop
pop
cmps
pop
cmp
or
pop
rol
mov
repnz
movs
fs
xchg
rcr
cdq
test
cmp
mov
dec
xor
xor
mov
loop
dec
and
cmp
and
scas
add
sbb
sub
pop
push
pop
push
cmp
hlt
pop
test
and
cmp
fucomip
or
fs
mov
out
jmp
cmp
jl
jno
leave
pop
pop
in
xchg
scas
(bad)
leave
inc
fisttp
out
bound
in
pop
cmp
push
enter
out
cmps
and
rcl
cmp
jmp
movs
cmp
push
xor
jnp
jle
fsubr
into
dec
inc
les
in
jle
sbb
cmps
push
cmp
mov
stos
aas
push
std
popf
fwait
mov
sti
sbb
daa
xchg
aam
out
cmp
mov
in
in
cwde
lahf
lea
push
sub
repnz
inc
xor
pop
pop
pop
inc
jne
mov
retf
pop
adc
imul
imul
xlat
out
adc
fcom
and
xchg
lock
test
and
xor
mov
add
inc
xchg
mov
das
loope
mov
xor
retf
movs
or
or
dec
xor
fcmovbe
test
mov
sub
xchg
inc
popf
adc
inc
push
adc
xchg
jo
lds
pushf
aad
outs
into
popf
mov
jb
cli
stc
xor
sub
outs
stc
hlt
jne
dec
sbb
mov
aaa
add
test
jmp
pusha
leave
push
jmp
jmp
lods
mov
out
sub
in
sbb
movs
dec
in
push
mov
inc
push
call
or
mov
mov
inc
fsub
mov
dec
inc
jge
out
pusha
fld
jp
(bad)
or
(bad)
pop
xchg
popa
inc
dec
outs
sub
femms
fimul
xchg
stc
in
gs
test
in
xor
loop
repnz
sub
popa
push
push
pop
xor
stc
and
(bad)
jae
lahf
push
push
pop
pop
clc
cmp
xor
mov
andnps
mov
inc
pop
imul
mov
outs
mov
mov
mov
jmp
or
out
inc
jns
shr
stos
mov
xor
fbstp
cli
mov
leave
retf
test
dec
sub
aas
fld1
rcr
scas
cmc
inc
add
or
cld
xor
retf
nop
aam
(bad)
jl
in
jnp
(bad)
cmp
pop
ins
jns
daa
inc
pop
lods
imul
jae
dec
pop
push
push
pop
test
adc
popf
fcmovnb
xor
jnp
stc
cmp
dec
and
pusha
cmps
enter
clc
jne
inc
ret
jbe
sub
ins
dec
cmc
lods
add
dec
jne
push
cmc
jl
out
sbb
push
inc
xchg
push
mov
add
mov
jp
aad
sbb
xor
fcomp
cmp
in
call
lods
imul
cmp
and
sar
push
mov
movs
retf
xchg
aam
jp
adc
mov
add
cmp
xor
shr
icebp
stos
mov
data16
ins
or
or
scas
mov
movs
jecxz
sti
or
pushf
stos
neg
push
or
mov
nop
or
pushf
xchg
sub
sti
push
mov
sahf
sbb
sub
repnz
cmp
jge
mov
in
add
mov
xor
xlat
div
je
ret
retf
cmp
pushf
pop
dec
nop
add
imul
fmul
mov
lods
lahf
test
shr
xlat
(bad)
jecxz
(bad)
sti
aad
sub
and
mov
or
xchg
arpl
sub
fsubr
mov
repnz
mov
pop
jno
sbb
iret
or
iret
inc
push
mov
inc
sbb
ds
mov
outs
loop
fnstcw
enter
xlat
pop
ins
jle
inc
mov
jb
add
aas
movs
es
aad
jl
sti
or
push
ret
pop
fld
mov
call
ins
jnp
mov
xchg
in
mov
(bad)
loopne
dec
test
adc
mul
ins
inc
into
icebp
jl
and
loopne
push
ins
mov
push
xchg
push
jae
mov
(bad)
sar
aas
sbb
shr
mov
int
outs
popa
jg
push
push
fsub
ins
outs
out
pop
jno
adc
test
jp
push
jle
mov
adc
jmp
sub
and
pop
cmp
add
add
test
mov
call
inc
cld
pop
adc
cmps
add
pop
cmps
mov
pop
arpl
jbe
fcmovnb
jnp
les
pop
xor
add
sub
and
inc
out
mov
(bad)
xchg
lods
adc
sub
push
mov
sub
pop
in
ds
mov
inc
ret
cs
mov
and
mov
je
(bad)
call
aas
cmc
jp
push
sub
not
ins
loopne
(bad)
cmp
(bad)
cmp
xor
dec
jl
mov
jnp
outs
in
ds
ja
jg
fincstp
mov
outs
pop
dec
xchg
pop
and
hlt
test
pop
repnz
ins
dec
not
pop
sbb
scas
ins
pop
btc
or
ss
jae
repnz
jp
mov
pop
mov
sar
repnz
out
std
mov
jecxz
and
cmp
and
mov
loope
mov
add
sbb
push
jmp
pushf
jo
call
fisub
lock
sub
pop
movs
push
je
sbb
jnp
retf
rcr
mov
pop
daa
lea
out
movs
lds
adc
mov
test
adc
mov
(bad)
int
(bad)
fstp
mov
jne
and
jp
xor
mov
mov
pop
leave
das
dec
jp
xor
cmps
mov
and
jae
inc
fstp
dec
inc
add
fbld
nop
test
cwde
xor
je
in
fwait
xchg
bound
xchg
xor
stos
pop
imul
sbb
pop
lods
mov
test
es
mov
or
pop
add
aad
movs
(bad)
psubq
fst
cmp
xor
mov
fwait
imul
xchg
and
aas
add
add
xor
lds
push
and
pop
adc
push
sbb
jmp
iret
stos
jb
cdq
adc
pop
fnsave
stos
mov
or
push
imul
inc
mov
push
mov
push
outs
(bad)
ret
fwait
ja
out
add
sbb
and
push
push
(bad)
xchg
adc
jbe
xchg
aaa
xor
mov
sub
call
or
jnp
jmp
(bad)
lods
or
pop
popf
enter
lds
out
inc
xor
xor
push
jae
mov
sahf
daa
push
xchg
fisub
test
cmp
(bad)
pushf
sbb
es
push
xchg
mov
outs
pop
hlt
mov
pop
pusha
retf
(bad)
mov
or
jge
adc
fsubp
ret
mov
pop
test
aaa
adc
test
in
sub
lahf
jb
xchg
aam
mov
aad
jg
mov
jmp
fist
push
and
push
daa
sbb
add
popf
out
call
add
test
test
mov
cdq
ja
repnz
cmp
(bad)
out
or
test
xor
push
xchg
pop
in
dec
xchg
loope
je
cdq
add
mov
xor
pop
jbe
mov
push
mov
(bad)
aad
mov
jle
jecxz
jno
or
adc
add
ret
repz
mov
sub
jecxz
xchg
in
and
cmp
lods
pop
lds
test
test
add
or
inc
nop
cmc
adc
add
aaa
inc
cmps
cmp
and
add
xor
das
cmp
(bad)
iret
pop
mul
clc
inc
adc
jmp
mov
adc
repnz
out
outs
jne
stc
or
inc
jge
and
pop
add
loop
lods
xor
into
fldenv
ja
mov
(bad)
in
and
dec
pop
sub
div
dec
mov
and
inc
daa
fst
sbb
test
(bad)
push
push
mov
mov
ror
inc
lds
test
and
push
mov
das
imul
movs
call
outs
cmps
mov
mov
mov
and
xlat
xlat
lods
mov
sub
xor
daa
loope
mov
xchg
cmp
(bad)
sub
push
sbb
pusha
(bad)
jbe
xor
shl
sub
dec
adc
popa
sub
(bad)
outs
cmp
pop
sbb
xchg
mov
ror
mul
xchg
mov
xor
inc
and
cmps
ins
not
push
mov
xor
cwde
push
xchg
cmp
inc
push
ins
push
rcr
enter
cs
repz
dec
stc
adc
sbb
adc
add
addr16
xchg
mov
pop
clc
inc
sub
jle
dec
pop
mov
and
ins
jno
jb
cmps
fiadd
rcr
sbb
cs
mov
xor
cmp
mov
jnp
mov
fist
int
mov
shl
and
xor
jb
jne
in
jmp
pop
add
cdq
fsubr
dec
xlat
jmp
out
sar
add
sbb
inc
jne
jo
jl
lods
push
pop
ret
push
dec
rcl
stc
xchg
cmp
mov
loope
movs
and
mov
xor
pushf
dec
and
cmp
adc
or
(bad)
aaa
sub
pop
js
je
mov
mov
seto
int
ins
mov
or
idiv
mov
mov
push
sbb
ret
push
pushf
push
loopne
mov
jmp
mov
divps
sbb
sub
xchg
add
jl
pop
sti
mov
add
fwait
cmc
add
sub
ss
popf
lock
fsubr
inc
add
or
push
cs
and
jnp
test
stc
jo
sub
stos
add
mov
mul
mov
fild
ret
(bad)
push
mov
jnp
das
add
inc
dec
mov
neg
test
into
or
fnsave
inc
in
jp
clc
inc
and
cmps
imul
inc
adc
mov
pop
jno
jnp
mov
sub
rol
loop
hlt
sub
add
cmp
mov
fwait
mov
cmc
imul
mov
fld
aad
ins
imul
jecxz
xor
call
push
into
cmp
jmp
cmp
fdiv
aad
jecxz
rol
ss
push
push
inc
out
dec
test
pushf
sub
(bad)
adc
sahf
xchg
jb
lock
pop
lods
push
xor
inc
pop
and
mov
ja
nop
clc
jo
mov
push
push
jg
mov
ja
leave
mov
popa
xchg
cmc
add
call
mov
mov
ds
and
inc
mov
xchg
mov
(bad)
in
sahf
add
stc
loopne
mov
movs
xor
dec
or
cmps
and
adc
test
arpl
push
cs
fs
(bad)
and
dec
in
test
mov
dec
(bad)
ficom
das
mov
mov
xor
sbb
dec
cmc
mov
data16
das
sti
cmps
mov
(bad)
fsub
jns
popa
push
jl
mov
add
mov
cmp
std
lar
dec
or
mov
test
cli
and
sub
push
mov
push
mov
pop
or
rol
mov
or
test
xchg
mov
cwd
jecxz
pop
sbb
cli
icebp
(bad)
or
inc
rol
pushf
popf
stos
ss
mov
cmp
adc
and
lods
in
sar
or
cld
popa
outs
popf
cwde
mov
test
stc
sub
push
or
into
imul
jle
hlt
mov
pop
adc
and
pop
add
std
inc
mov
push
xchg
cmps
mov
stos
call
int
sbb
outs
and
fild
xchg
iret
mov
das
inc
in
xchg
adc
sub
push
xor
test
mov
addr16
test
and
inc
cmc
daa
jl
and
adc
cmp
out
jbe
jnp
jmp
call
adc
std
dec
adc
cmp
inc
inc
and
std
sar
sbb
jle
xchg
cmp
cld
add
(bad)
fisttp
sbb
pusha
lds
push
ret
sbb
jmp
outs
mov
pusha
pop
pop
or
enter
fidiv
enter
fmul
mov
sub
dec
imul
imul
sti
aad
scas
mov
or
sub
jp
stos
cmps
cmps
out
stc
aaa
enter
cmp
(bad)
mov
inc
sbb
jg
cmp
jp
sbb
mov
fst
outs
loop
push
jmp
aas
cmp
inc
cld
jne
dec
int3
dec
dec
mov
add
pop
push
(bad)
aad
in
sahf
and
in
pop
pop
fdiv
cs
xchg
je
jo
sbb
adc
iret
push
test
retf
and
cld
sbb
mov
outs
and
mov
fwait
xchg
mov
gs
pop
mov
js
mov
sbb
pop
fst
jns
mov
scas
cli
adc
add
fadd
js
scas
les
jge
sub
iret
scas
pop
out
push
xchg
repz
add
test
lds
sbb
test
imul
or
mov
sahf
push
rcr
ss
std
movs
ja
jg
ret
add
mov
xor
cmp
jne
pop
scas
mov
or
inc
idiv
xchg
or
call
mov
add
xchg
aas
inc
hlt
mov
les
sub
call
aam
movs
jl
add
push
push
pop
sar
inc
adc
dec
stc
dec
adc
clc
retf
stos
ja
aaa
call
scas
pushf
pop
push
mov
bnd
dec
sub
fdivp
mov
inc
add
sub
fs
xchg
ins
in
leave
hlt
fs
add
cs
pop
(bad)
jmp
repz
push
mov
xor
mov
jne
fild
pop
movs
sub
xor
in
jmp
in
mov
sbb
ret
and
mov
dec
mov
scas
jb
push
cdq
xor
ja
mov
inc
rcl
add
mov
pop
mov
in
push
xchg
push
xlat
adc
mov
mov
ja
fnsave
add
sbb
into
xor
iret
adc
bswap
sahf
or
leave
fwait
pop
mov
or
mov
cmp
push
push
ret
test
aad
mov
sbb
mov
sub
cld
sbb
shl
loopne
add
mov
sar
lods
pop
call
test
aaa
add
syscall
ret
mov
rol
aas
jns
push
sbb
cmp
inc
aaa
je
shr
jno
nop
xchg
cdq
push
movs
fucomip
retf
mov
dec
jno
out
mov
call
in
xlat
xor
aam
fidivr
mov
retf
mov
cmp
sub
bound
inc
js
pusha
add
jbe
cmp
rcr
ja
sub
cmp
imul
mov
sbb
pop
inc
xor
mov
inc
mov
fwait
jno
scas
call
test
aad
icebp
xchg
adc
test
pop
cwde
jo
mov
sbb
lea
loope
fnstsw
lea
push
fdecstp
out
movs
xlat
retf
sub
nop
jecxz
(bad)
sti
cmp
mov
mov
mov
push
stos
nop
das
sub
inc
cmc
mov
mov
xor
(bad)
jge
xor
xchg
sub
dec
add
xlat
jb
xchg
das
lds
out
or
cmp
push
mov
mov
sub
imul
push
shl
pop
mov
pop
mov
jp
cmc
sub
rcr
cs
and
clc
and
scas
aaa
push
push
cmp
scas
out
and
ds
movs
les
jl
xchg
jno
mov
pop
xchg
push
jge
cdq
inc
mov
int3
dec
int
fisttp
mov
aam
cld
push
sbb
loope
aaa
jno
fisub
push
call
out
jecxz
adc
inc
push
fild
inc
gs
dec
jnp
dec
inc
and
jg
pop
div
inc
adc
scas
dec
mov
cmps
scas
or
and
jl
sub
dec
sub
mov
ds
add
mov
repz
dec
xchg
popf
push
(bad)
rcl
cmp
ret
movs
cmp
cmp
into
dec
out
test
adc
mov
loope
or
or
data16
fs
ret
out
aas
(bad)
popf
int3
push
dec
cld
jl
cmp
les
out
ret
in
sti
sahf
cld
sbb
mov
mov
scas
loop
mov
push
fistp
adc
pop
lods
jo
das
xchg
lock
sub
xchg
aad
mov
ficomp
inc
ret
mov
mov
push
movs
push
adc
icebp
ret
in
sub
sbb
pop
sub
xor
adc
xchg
adc
xchg
mov
jge
lods
arpl
stos
shr
retf
lahf
push
or
cmp
and
mov
aas
xor
stc
test
mov
dec
jmp
mov
pop
jle
xchg
iret
mov
inc
jns
push
cmc
sub
pop
dec
ds
xchg
(bad)
mov
xor
(bad)
xchg
lea
repz
cmps
aas
lds
in
data16
sub
addr16
cmp
pop
dec
and
cs
inc
xchg
xchg
mov
push
loop
xor
jl
fiadd
xchg
lock
call
cwde
jle
push
loope
sbb
mov
pop
mov
arpl
push
shl
stos
ror
xor
mov
jmp
aaa
sar
sbb
dec
and
mov
sub
mov
cmps
in
mov
stc
cmp
mov
jmp
jmp
mov
mov
int
mov
inc
sbb
jnp
dec
jp
or
fbld
push
mov
retf
aas
cmp
inc
scas
jo
dec
js
jae
cmp
jne
sbb
sub
add
sub
rcr
je
aam
sti
pop
sti
dec
jle
mov
dec
sub
je
fadd
inc
jnp
in
pop
fidivr
jns
enter
mov
jp
pop
mov
pop
retf
sub
popf
or
sbb
sbb
and
jp
(bad)
or
jle
out
pop
push
data16
retf
hlt
pushf
cmps
pop
add
pushf
stc
pop
mov
mov
bound
jne
dec
xor
xchg
inc
dec
cdq
push
(bad)
xor
jl
frstor
mov
xchg
popf
and
movs
loopne
movs
clc
aam
enter
jnp
mov
inc
hlt
pop
sar
jecxz
outs
outs
add
arpl
rcr
inc
push
push
dec
or
loopne
ret
je
retf
or
sbb
and
mov
xor
jae
je
ja
jne
out
push
jnp
ins
jmp
test
adc
adc
add
std
fmul
retf
loopne
jecxz
repnz
mov
add
(bad)
pop
pop
int
cmp
loop
mov
add
and
xchg
jge
jb
xor
popf
and
push
inc
aam
pop
push
mov
loop
nop
push
imul
stos
mov
inc
add
ja
add
xchg
adc
xchg
dec
dec
xchg
pop
mov
data16
fistp
ror
fisttp
sbb
and
aad
(bad)
dec
jnp
mov
add
xchg
hlt
imul
mov
lods
sub
and
jbe
cmp
push
imul
jge
inc
lods
repnz
xchg
dec
jge
dec
dec
ins
cmps
mov
xchg
push
sbb
mov
imul
outs
cwde
dec
movs
scas
cmp
xchg
add
xor
push
mov
pop
jo
cmps
into
test
into
shl
jg
int3
mov
pop
popf
imul
fist
pop
dec
inc
jno
dec
xchg
(bad)
call
jns
fild
sub
neg
ins
mov
aad
push
dec
cmc
repz
pop
pop
fdivr
cwde
add
mov
xor
stos
je
cli
sub
inc
xor
movs
in
mov
mov
xor
mov
push
aam
inc
add
mov
jmp
nop
push
xor
xor
mov
sbb
xchg
mov
xchg
popa
das
addr16
mov
out
mov
sub
xor
in
lahf
pop
xchg
and
jno
adc
pop
xchg
push
mov
es
or
imul
mov
es
(bad)
retf
lea
and
stc
out
push
nop
mul
out
xchg
mov
cmp
or
pushf
js
pop
(bad)
(bad)
cdq
pusha
and
adc
push
jae
lds
dec
addr16
xor
jl
ret
mov
push
cmps
mov
inc
out
push
jle
dec
inc
in
int
inc
jne
inc
fidiv
mov
mov
add
movs
or
cmp
mov
in
mov
push
mov
ins
xor
add
mov
hlt
out
push
popf
add
and
pop
sbb
or
mov
stos
addr16
inc
gs
(bad)
or
mov
scas
out
dec
mov
cmp
dec
xor
or
fadd
jns
push
cmps
sub
cmp
jmp
sub
ja
sub
mov
clc
push
cdq
and
add
lock
jne
mov
xchg
arpl
xchg
pop
mov
rcr
inc
push
nop
not
fld
pop
leave
sti
mov
push
lods
dec
sti
lock
popa
int
in
scas
cmp
mov
mov
xchg
push
test
pop
add
clc
fld
or
xchg
call
xor
mov
or
cmp
pushf
rcr
and
xchg
lahf
js
dec
es
pop
dec
sbb
sbb
(bad)
pop
call
ins
call
or
imul
retf
push
neg
call
mov
jne
not
fdiv
xchg
or
push
add
hlt
or
popf
dec
lea
in
and
nop
pop
mov
int
mov
in
and
and
jle
cld
(bad)
fdiv
sbb
jbe
sbb
fs
inc
xor
or
leave
imul
push
sub
dec
jmp
aam
es
inc
aam
sbb
sub
retf
int
jp
jne
xchg
adc
out
clc
mov
jno
push
xor
icebp
cdq
adc
inc
test
(bad)
jbe
xor
jne
data16
jmp
cdq
sub
jno
sub
xchg
add
outs
fwait
push
retf
jl
outs
popf
std
jecxz
addr16
sahf
movs
dec
pop
pop
add
or
cld
loop
int3
aas
aad
popa
sbb
movs
adc
(bad)
ror
inc
add
sbb
sub
arpl
lods
xchg
ficom
fld
or
daa
push
stos
in
(bad)
(bad)
jmp
aaa
sub
jo
imul
lahf
jae
dec
fs
jmp
test
adc
pop
mov
aaa
sti
add
or
and
add
pop
pop
sahf
jecxz
sbb
mov
dec
fs
sti
inc
es
jecxz
pop
jmp
bound
bound
mov
jecxz
mov
in
in
(bad)
repnz
or
xchg
test
(bad)
sub
retf
xor
xchg
rcl
inc
and
or
stos
dec
cmp
ins
shrd
mov
lock
pop
sub
xchg
pop
int
cmps
or
mul
and
(bad)
neg
mov
arpl
ror
jo
or
push
fdivp
mov
mov
in
(bad)
imul
or
push
dec
xor
test
jne
retf
ror
dec
mov
or
pusha
pushf
mov
retf
adc
scas
popf
(bad)
jmp
add
ds
push
and
and
out
cmp
lods
rol
int
and
test
jl
pop
pop
aam
imul
cs
shl
aas
mov
adc
xor
out
aas
push
sbb
and
xor
mov
xchg
dec
jmp
les
fadd
jnp
icebp
outs
lds
daa
(bad)
xor
imul
adc
xchg
out
rol
pop
in
push
cmp
not
addr16
int3
mov
fneni(8087
cdq
cs
das
outs
push
pushf
cmp
dec
pslld
(bad)
sbb
pop
adc
or
fwait
jo
icebp
bound
push
push
or
pop
xor
and
and
dec
je
pop
(bad)
data16
mov
scas
cmp
cmp
or
lods
fsub
cmp
sbb
lahf
cmc
cmp
pop
mov
cmp
stos
mov
xchg
and
xor
enter
div
(bad)
sbb
pop
aaa
ins
outs
push
mov
sti
outs
dec
sti
shr
cmp
hlt
daa
mov
push
fwait
clc
pop
je
sbb
stc
ins
add
adc
mov
lods
fs
sbb
repz
or
test
jo
and
std
or
fs
or
xchg
icebp
cmp
fs
mov
stos
adc
scas
cmps
cmc
xor
inc
adc
xchg
jbe
jle
pop
ficom
inc
cmp
jp
sub
cld
fdivr
into
mov
dec
and
cli
popf
daa
cld
(bad)
(bad)
sub
pop
call
inc
adc
push
jmp
dec
mov
enter
jle
mov
push
call
sbb
cmps
add
mul
sub
xchg
std
sub
sahf
xor
xor
stc
arpl
jmp
cmp
and
es
adc
push
repnz
cwde
or
xchg
mov
bsf
sub
out
add
cmp
mov
movs
push
push
or
jne
jo
add
sub
sub
mov
cmp
pop
out
dec
addr16
sbb
or
shr
rcl
pop
out
scas
xchg
movs
pop
sar
dec
into
cmp
shl
ja
and
repnz
jns
dec
sub
add
imul
add
neg
mov
pushf
jle
(bad)
cdq
xchg
and
sub
xchg
lods
pusha
(bad)
cli
dec
cmp
mov
fisttp
push
and
fdivr
in
xchg
aas
les
mov
push
inc
scas
mov
std
sub
fadd
retf
mov
(bad)
cli
fwait
dec
jle
fnop
neg
out
dec
jecxz
rol
pop
dec
pop
daa
mov
sub
jno
mov
mov
cmps
ror
cwde
in
pop
cs
adc
mov
test
in
shl
loop
jb
stos
inc
ret
cmp
dec
adc
call
inc
jae
mov
sub
lds
inc
mov
je
adc
mov
jns
jl
(bad)
jmp
fsub
in
movs
outs
cmc
cmps
pop
retf
jb
sub
call
add
jne
cmp
xchg
popa
cmp
sub
sbb
ret
lds
gs
lahf
or
or
fwait
lock
popf
and
loope
push
add
jle
inc
jns
cli
lods
pop
imul
das
bound
push
xor
xchg
pop
jno
fwait
inc
push
clc
mov
and
xchg
shr
popf
repnz
sbb
mov
push
shl
and
das
fstp
or
pop
inc
jae
add
je
pushf
aas
mov
push
pop
dec
xlat
in
sbb
out
mov
pop
sbb
or
enter
sbb
bound
movs
call
mov
pop
jmp
fcmove
or
out
movs
out
leave
mov
xor
or
mov
mov
add
call
pop
adc
fild
jmp
mov
ss
add
jmp
jne
lock
stc
cmp
mov
sahf
pushf
stos
(bad)
add
jbe
add
div
dec
xor
adc
push
pop
mov
add
add
(bad)
leave
sub
call
inc
pushf
in
xor
pop
gs
iret
bound
and
enter
or
jo
jmp
add
jne
mov
push
sahf
mov
inc
dec
neg
add
(bad)
xchg
mov
mov
mov
dec
mov
xchg
in
ret
in
fcmovb
rcr
lahf
idiv
sub
xor
pop
or
ret
inc
push
cdq
sub
icebp
pop
fidivr
pop
or
(bad)
in
adc
fimul
adc
push
ins
sbb
add
inc
imul
fcmovnu
nop
xor
adc
mov
stos
push
les
ja
dec
pop
in
cmps
popa
stos
pop
cmc
xor
jb
cs
adc
mov
nop
sub
xchg
or
inc
popa
test
clc
jl
cmp
(bad)
sti
mov
sub
dec
inc
sti
pop
jl
sub
xchg
or
pop
mov
mov
repnz
xor
cmp
xor
inc
dec
mov
pop
mov
sub
and
sub
dec
test
cmps
es
out
loope
sbb
push
adc
ins
sub
mov
xor
cmc
hlt
aad
ret
test
push
cmps
mov
jno
call
scas
mov
pop
add
xor
out
imul
cmp
repnz
sub
(bad)
js
out
sbb
jecxz
outs
shl
sub
sub
pop
or
push
cwde
inc
ins
push
fwait
xor
cmp
popa
(bad)
inc
mov
stc
xchg
arpl
xchg
bound
dec
sbb
mov
mul
push
dec
mov
stos
imul
ficomp
cmps
iret
add
add
inc
xor
mov
xchg
mov
test
jl
pushf
pop
xchg
adc
mov
xchg
(bad)
fcmovne
call
jns
inc
movs
or
test
mov
sub
mov
out
ins
in
mov
push
std
cmp
inc
jnp
dec
xor
out
add
mov
xor
stos
xor
mov
out
jg
sub
lock
jns
cs
or
test
ins
pop
int3
sub
lea
pop
inc
lahf
and
xor
pop
lea
into
in
or
xor
dec
jle
sar
leave
xchg
mov
or
dec
xchg
loop
movs
ficom
les
pop
lock
ins
xadd
or
vpsubw
adc
push
dec
ja
jmp
or
imul
lods
push
loop
push
ins
mov
push
pop
jge
gs
ins
jl
sub
retf
(bad)
(bad)
mov
ins
mov
scas
lods
cmps
mov
movs
aas
adc
iret
push
pop
ss
int
test
pop
dec
rcr
call
mov
xchg
cmp
daa
and
dec
jmp
add
cs
bound
mov
test
and
icebp
je
ror
xchg
mov
pop
sbb
fimul
icebp
xor
popa
adc
addr16
dec
(bad)
mov
lock
fucomip
push
or
ins
(bad)
push
pop
push
in
(bad)
std
and
push
xor
imul
mov
sub
sub
fs
fwait
mov
(bad)
cmp
dec
das
sahf
clc
inc
push
cmp
lea
loop
loopne
mov
movs
mov
cld
fcom
lock
loope
xchg
sbb
(bad)
xor
into
pushf
clc
shr
stos
ret
add
icebp
push
rcl
(bad)
mov
pop
dec
data16
xchg
mov
fst
lahf
jmp
mov
lock
adc
leave
inc
repz
cmc
dec
dec
(bad)
outs
adc
lea
rcl
inc
jle
mov
dec
(bad)
bound
cmps
into
push
push
sbb
jnp
lea
dec
sahf
fisttp
ja
fs
xchg
dec
in
pop
imul
and
sub
cmp
push
mov
xchg
mov
and
xchg
aas
popa
jo
push
iret
ins
and
or
mov
jmp
cmp
mov
xchg
inc
mov
imul
in
jae
sub
or
cli
dec
imul
and
xor
mov
or
sub
xchg
hlt
adc
call
test
jns
adc
fs
leave
and
xchg
xor
adc
out
std
lock
mov
cmp
inc
and
and
leave
int3
push
and
dec
cmp
lock
cli
addr16
je
xchg
js
pop
daa
test
mov
icebp
and
dec
loop
gs
sti
leave
fwait
push
in
test
mov
mov
(bad)
(bad)
sub
(bad)
lahf
ins
lahf
sbb
sahf
std
mov
daa
ds
les
in
into
jae
mov
ret
sub
ror
pop
push
pop
and
int
mov
stos
ins
cmp
mov
mov
jle
iret
xchg
ret
jne
push
imul
add
mov
mov
pusha
or
dec
adc
call
pushf
mov
and
int3
jp
jg
fcmovu
ret
in
adc
cmp
cld
push
dec
pop
ja
out
ficomp
jbe
cdq
sbb
bound
test
add
loopne
pop
inc
jl
jmp
gs
sbb
jmp
cvtps2pi
stos
fadd
inc
sahf
adc
sub
pop
ja
xchg
cmc
push
mov
pop
in
mov
cmps
jns
loope
cmp
lock
arpl
imul
cmps
cs
jle
cmp
cmp
dec
cmp
sar
(bad)
mov
add
pusha
outs
sub
stos
fiadd
lahf
ins
add
ficomp
dec
mov
mov
in
cmp
sti
loope
and
or
pop
xor
pop
push
aam
lock
in
cmp
xor
(bad)
cld
ret
ins
in
fidivr
dec
jbe
inc
out
push
add
sbb
jnp
arpl
psrad
je
xchg
adc
push
xchg
xchg
xchg
jnp
mov
out
out
cmp
dec
and
clc
popf
int3
dec
inc
sbb
sub
test
push
fwait
adc
in
pushf
mov
repz
mov
aas
les
(bad)
mov
(bad)
int
sbb
xchg
test
pop
xchg
mov
jns
in
or
adc
and
test
ss
mov
mov
ficomp
dec
cld
jns
rcr
xchg
es
or
dec
mov
mov
mov
push
sbb
mov
inc
cmp
push
mov
test
xlat
inc
xchg
adc
(bad)
jnp
and
ds
daa
xor
sub
mov
or
adc
xor
add
xlat
stos
sub
icebp
cld
std
lods
add
push
jmp
xor
add
and
dec
or
lds
out
imul
ins
test
ds
out
movs
mov
cmp
(bad)
push
daa
push
push
sbb
push
pop
xchg
sub
adc
in
(bad)
bound
ds
add
or
add
loope
jle
xchg
inc
out
mov
(bad)
cli
fidivr
mov
not
repz
mov
test
mov
ror
dec
or
sub
clc
cmp
cli
ja
je
mov
sbb
add
add
hlt
clc
arpl
sbb
pop
mov
xchg
xlat
dec
std
jmp
inc
or
and
cmp
bound
lock
mov
mov
add
xchg
aam
test
mov
xchg
sbb
out
cmp
test
in
jnp
push
xchg
mov
pop
stos
xchg
movhps
pop
push
rol
jns
stos
inc
cmp
push
rcr
pop
push
pushf
inc
dec
mov
mov
das
call
mov
inc
jns
in
std
adc
dec
nop
test
fs
mov
cmp
enter
nop
mov
dec
loope
push
in
or
cmp
jecxz
add
pop
and
pop
cmp
jmp
adc
sbb
jne
xchg
adc
sahf
cmps
adc
imul
js
sbb
push
stc
ins
out
xor
stos
add
xchg
dec
inc
or
jno
push
pop
push
sbb
scas
mov
stc
sub
xchg
jle
cmp
fld
mov
xor
bound
and
popa
mov
pop
call
jmp
pop
mov
in
mov
out
and
push
inc
and
or
dec
and
aam
jns
inc
cmp
xchg
push
sub
(bad)
sbb
pushf
sub
push
pop
add
pop
cmpxchg
dec
call
int3
adc
push
ins
aaa
mov
ret
push
in
shl
inc
jbe
pop
test
sbb
dec
in
repnz
fwait
xchg
cmp
cmp
inc
adc
mov
sub
push
nop
mov
aaa
cmp
and
xchg
sbb
xor
jns
dec
repz
in
clc
inc
mov
jno
pop
lahf
std
pop
mov
adc
jg
outs
aas
mov
cwde
adc
and
or
push
fdivr
and
in
cmp
jae
sti
lods
ins
aaa
stos
fnsave
fcmovnb
mov
std
leave
jle
mov
stos
xchg
xchg
mov
mov
cmp
jmp
les
icebp
add
cmp
inc
jae
sahf
stos
cdq
xchg
pop
cli
scas
mov
ins
outs
xchg
sub
xchg
add
int
sbb
call
ror
add
mov
ds
sub
jge
ret
mov
xlat
lock
jo
push
popa
or
stc
cmp
push
(bad)
sti
adc
pop
int3
cwde
jb
in
or
xor
adc
or
xor
xor
inc
mov
stc
rcr
add
pop
(bad)
xor
inc
inc
pop
pop
and
pop
xchg
jg
xor
idiv
in
and
jno
leave
call
jmp
pop
fadd
icebp
hlt
mov
add
rcr
sub
pop
sahf
sbb
jns
cwde
xchg
ja
sar
jg
xor
sub
and
mov
mov
mov
call
xor
popa
ds
jo
or
jmp
ins
jb
cmp
scas
mov
and
sub
cmp
imul
jecxz
js
add
and
int
lods
push
imul
cld
repz
sahf
arpl
pop
test
imul
push
mov
mov
mov
xor
retf
rcr
and
pop
adc
int
enter
xlat
out
pusha
fwait
mov
xlat
int
jg
pusha
vmovddup
cmp
cld
retf
clc
ds
jg
add
xor
outs
adc
xor
in
in
mov
das
push
cmp
sbb
add
test
fdivr
lahf
sbb
(bad)
outs
add
lods
push
int3
(bad)
outs
out
sahf
and
leave
cmps
ror
sbb
or
mov
adc
in
inc
aam
add
jo
stos
adc
out
inc
cmp
add
inc
and
push
stc
mov
dec
jmp
iret
add
push
(bad)
out
push
cmp
mov
fwait
inc
add
out
std
leave
push
pop
ret
rcr
bound
inc
mov
pop
imul
push
hlt
cli
jmp
pop
pop
dec
push
push
jge
daa
add
js
shl
stc
sub
jno
test
jle
dec
ss
fs
out
fucomp
inc
(bad)
fsubr
push
test
stos
pop
int3
cmps
jnp
std
add
lahf
adc
(bad)
movs
fcom
gs
fisubr
fisttp
aaa
sti
scas
jmp
mov
inc
jae
adc
dec
push
(bad)
addr16
mov
int3
push
cmp
xor
mov
push
mov
dec
jbe
mov
clc
cmc
cld
movs
push
push
mov
test
test
jbe
cmp
or
daa
pop
outs
sbb
dec
xbegin
scas
sbb
out
mov
add
sbb
jg
fs
ss
mov
daa
mov
sbb
es
xor
shl
jb
imul
or
and
loop
(bad)
pop
mov
or
cmp
aaa
add
shl
out
fbstp
je
sbb
pop
loopne
and
jle
inc
pop
mov
jns
xor
jl
loop
in
fisub
ret
cmp
jecxz
inc
bound
aaa
sar
popa
outs
icebp
mov
ss
xchg
sub
dec
cmp
or
xor
mov
fdivr
clc
mov
les
sbb
repnz
mov
mov
push
cli
xor
fistp
add
mov
mov
pop
fcomi
cmps
mov
mov
mov
mov
jmp
movs
mov
sahf
imul
ins
ret
mov
(bad)
xchg
call
pop
push
mov
xor
ins
nop
mov
cmp
cmps
fidivr
shr
stc
sahf
pop
inc
sahf
gs
push
dec
fs
addr16
xchg
div
inc
push
jb
adc
sbb
mov
push
aam
int
xchg
xchg
test
sub
movs
rcr
(bad)
lahf
cmps
dec
adc
js
movs
add
repz
sahf
and
mov
mov
adc
add
inc
adc
jmp
aam
out
xchg
sbb
(bad)
in
xchg
aad
lods
mov
stos
ins
aad
icebp
and
pusha
pop
shl
inc
and
jae
jnp
into
jne
movs
test
and
xchg
jns
mov
stos
ins
jmp
sar
call
es
cmp
fsub
adc
push
cmps
pusha
outs
enter
mov
inc
test
xchg
stc
mov
sbb
jne
jmp
cmp
xor
hlt
adc
pop
or
lods
pop
mov
js
xor
data16
xor
cvtpi2ps
xchg
jbe
rol
in
stos
mov
add
mov
into
add
mov
or
iret
aaa
dec
push
bound
rol
push
hlt
sti
call
js
sbb
rol
fnstcw
inc
jecxz
loop
adc
jecxz
leave
push
or
pop
sbb
(bad)
mov
push
cmp
scas
outs
lea
mov
lock
sub
sar
sub
test
lahf
pusha
cmps
inc
or
sub
ror
hlt
scas
cmps
inc
cmp
in
xor
push
sub
xchg
ret
imul
in
jb
data16
push
sete
jmp
test
loopne
iret
mov
pop
push
or
or
mov
clc
inc
xchg
sbb
(bad)
out
stos
cmp
pushf
adc
stos
mov
loop
test
sbb
pop
scas
cmps
xlat
mov
bound
pop
jg
mov
mov
lods
data16
fistp
idiv
and
rcl
cmps
ins
jmp
cmp
aam
bnd
mov
ss
adc
sar
das
add
xchg
(bad)
(bad)
mov
jmp
lahf
pushf
pop
aas
lds
push
sbb
mov
mov
movs
sub
icebp
les
js
loop
ins
aam
pop
aad
add
push
cld
aaa
ins
shl
call
xchg
mov
jo
(bad)
push
xchg
push
adc
pop
call
imul
inc
adc
mov
out
hlt
daa
addr16
jno
loop
mov
add
int
mov
mov
unpckhps
xchg
adc
out
jmp
cmps
sbb
mov
push
addr16
pop
pop
nop
xchg
mov
push
outs
jmp
repnz
push
mov
(bad)
in
test
push
dec
mov
sti
fisub
lock
cmp
cmp
pop
mov
cmps
pop
enter
fwait
mov
shl
dec
aam
loop
cld
or
imul
dec
jbe
je
xor
dec
imul
jb
les
mov
xchg
cmp
jle
outs
or
mov
xor
neg
scas
lods
cmp
sub
fwait
out
(bad)
jmp
or
sub
xchg
ins
ret
aas
inc
loopne
lods
jo
xchg
sbb
sahf
sub
jecxz
mov
leave
push
cmc
jl
pop
pop
scas
push
mov
rol
sub
lea
pop
in
mov
push
retf
push
mov
fstp
mov
jne
inc
test
rol
jecxz
xlat
and
dec
cmps
xchg
sub
adc
push
sub
xor
cwde
imul
push
arpl
arpl
sahf
mov
out
aam
pop
jae
gs
rcr
imul
test
adc
fcmovbe
clc
cmp
cmc
add
sar
and
xchg
and
xchg
clc
stos
test
mov
or
push
(bad)
imul
lods
mov
add
pop
pushf
(bad)
ret
mov
imul
in
sbb
push
ret
push
add
mov
es
les
jno
mov
hlt
inc
cmc
jge
loope
push
repz
mov
push
popf
leave
std
fidiv
lds
or
sbb
push
(bad)
jmp
cmps
fld
jae
xor
inc
xchg
and
xchg
xor
dec
pop
and
cdq
outs
ins
mov
sub
pop
jl
cwde
cmc
imul
scas
mov
repz
inc
mov
xor
in
push
and
pop
out
add
add
and
enter
test
cmp
push
rol
popf
sub
cmp
sub
or
dec
adc
cdq
sub
push
lock
mov
(bad)
fcmovbe
jns
mov
test
ret
sub
jl
cmp
push
xor
ins
sbb
retf
mov
inc
pushf
into
sub
loope
cmp
mov
int
pop
inc
pop
and
or
push
dec
xchg
aaa
outs
xchg
pop
sbb
push
push
repnz
mov
retf
call
sbb
nop
cmp
js
fucom
push
jmp
int3
dec
int3
jns
scas
in
ja
adc
xor
(bad)
ficom
inc
test
pop
mov
pop
xrelease
pop
mov
je
and
push
ficomp
xchg
add
pop
popf
ins
movs
stc
std
mov
in
in
inc
movs
(bad)
cld
sub
xchg
aaa
xor
lods
test
sbb
add
sar
add
(bad)
sbb
daa
call
xchg
sub
cwde
cmp
jno
adc
mov
push
add
ja
add
xor
scas
add
jbe
xchg
retf
loop
xchg
dec
or
popa
push
(bad)
sub
fdivp
outs
cli
test
scas
mov
dec
lock
scas
jno
xlat
dec
nop
cmp
shl
ret
leave
xor
rol
dec
pop
mov
bnd
daa
xchg
mov
mov
imul
xor
gs
inc
add
je
mov
std
cbw
pushf
fstp
mov
cdq
pop
mov
aad
cmp
(bad)
cdq
rcr
adc
push
jbe
xchg
push
inc
aam
mov
sbb
test
jmp
(bad)
xchg
jnp
je
cmp
add
pop
loopne
push
aaa
lea
iret
test
aad
dec
jne
and
retf
jp
div
int3
mov
sbb
(bad)
cmp
cmps
sub
mov
imul
(bad)
jnp
(bad)
jecxz
pop
jp
mov
xchg
inc
js
push
pop
mov
mov
jb
adc
mov
retf
jnp
mov
popf
add
loope
cmps
pop
lock
sub
jnp
call
xchg
aad
stc
imul
and
dec
push
push
arpl
sub
lock
and
imul
jecxz
scas
ins
mov
mov
repnz
and
ret
in
cmc
cmps
push
or
pop
sub
data16
addr16
stos
fnstsw
push
repz
pusha
or
shl
jb
fimul
nop
sbb
inc
cmp
pop
(bad)
and
inc
inc
sbb
ds
jl
jl
shr
into
daa
icebp
outs
jmp
call
push
push
(bad)
repnz
mov
jns
and
adc
arpl
xchg
mov
or
and
outs
movs
push
add
outs
xchg
mov
jg
jmp
sahf
icebp
mov
ret
cmp
or
es
jae
cs
cmp
cmps
enter
adc
mov
call
sbb
test
adc
fs
mov
adc
push
nop
stc
xchg
jmp
push
push
loopne
gs
jp
out
and
pop
es
pop
push
aas
xor
(bad)
(bad)
test
mov
and
mov
hlt
pop
xchg
mov
and
mov
push
adc
inc
lds
in
xchg
lods
pop
test
inc
pop
adc
js
ins
gs
push
sub
ins
xor
iret
ror
fnstsw
aaa
mov
stc
aad
popa
sbb
pop
sub
ss
pop
frstor
fs
(bad)
mov
ficom
mov
cmp
push
xor
jb
sub
je
loopne
adc
hlt
or
mov
add
fist
das
lods
aad
mov
inc
mov
rol
inc
in
fwait
lock
adc
or
pop
js
ins
int3
ins
outs
mov
repz
or
call
adc
test
(bad)
mov
pop
ins
(bad)
jg
lods
pop
jbe
mov
sub
adc
and
mov
aad
shr
jl
mov
or
and
xor
push
adc
(bad)
popf
sahf
dec
or
aaa
jnp
jnp
push
pop
(bad)
cmc
ins
popf
retf
jmp
inc
pop
cmps
(bad)
inc
test
ds
push
ja
jmp
fsub
push
xchg
adc
pusha
jbe
sbb
pop
shl
sbb
dec
das
retf
adc
popf
cwde
rcl
in
retf
stos
and
pop
mov
sbb
call
mov
(bad)
pop
out
nop
mov
cmp
addr16
push
add
jmp
inc
sbb
jno
sub
cmp
sub
es
call
jb
cmps
fwait
pop
(bad)
jmp
jge
outs
mov
mov
mov
aad
dec
and
pop
add
and
aam
mov
dec
pop
sbb
sti
mov
dec
mov
jmp
xchg
xchg
pop
inc
aam
adc
xchg
inc
pop
dec
test
popf
test
fbstp
dec
dec
lock
call
es
xchg
mov
xchg
mov
sti
adc
mov
xchg
mov
movs
(bad)
in
stc
outs
fcmovnbe
jl
xlat
aaa
shl
sar
xchg
js
pop
out
fucomp
mov
mov
adc
cmps
jae
dec
sbb
add
je
and
lock
fldcw
ror
jo
inc
jmp
out
add
jecxz
fistp
into
fucom
out
cmp
push
add
mov
ds
dec
outs
hlt
cld
sbb
shr
inc
xor
stc
push
test
lahf
push
cmp
pop
nop
jg
daa
sbb
std
push
iret
xor
xor
sbb
in
test
xor
push
or
and
movs
jge
pop
mov
std
push
mov
jae
stos
jno
dec
mov
jl
pop
and
call
call
xchg
add
xchg
push
sti
fdiv
push
(bad)
test
fnstcw
mov
and
stc
jne
std
dec
sar
xlat
xor
jno
jns
push
mov
inc
mov
pop
adc
test
fs
add
add
retf
push
mov
repnz
aad
out
pop
jb
or
xor
(bad)
daa
cmp
push
imul
loopne
jmp
cmc
push
mov
and
adc
(bad)
retf
mov
pop
pop
fwait
adc
jle
add
push
mov
call
adc
inc
dec
mov
push
loopne
int3
fwait
adc
push
jmp
cmc
mov
call
xor
dec
shr
push
mov
adc
lods
mov
and
cs
jne
push
in
jns
int3
push
pop
imul
push
scas
jne
retw
out
and
xchg
and
cmps
sub
push
cld
push
mov
nop
(bad)
iret
dec
cwde
pop
add
ins
lds
in
neg
and
mov
fimul
jae
jmp
icebp
mov
push
cs
add
(bad)
aas
inc
and
jmp
jbe
push
mov
repz
dec
fdiv
in
scas
gs
outs
and
adc
loop
aam
mov
lods
mov
ins
repnz
mov
call
adc
pop
dec
inc
pop
mov
push
jle
or
push
enter
dec
push
dec
mov
xor
int
push
sbb
cdq
mov
pop
daa
lahf
into
movs
repz
sbb
not
mov
out
call
aaa
call
in
gs
repnz
jne
ds
sub
js
mov
out
pop
fsubr
inc
in
sti
ins
pop
iret
adc
test
shr
adc
movaps
test
leave
dec
imul
sub
sub
fcmovb
clc
sub
lahf
push
jno
mov
lds
in
imul
sbb
je
pop
inc
adc
sub
retf
and
stc
and
loope
or
pop
sbb
sub
aaa
enter
mov
scas
mov
ins
xchg
ja
rol
sbb
xor
nop
xchg
pop
dec
fwait
in
jecxz
jle
sbb
mov
xor
jle
mov
repz
fcos
lahf
sub
sbb
nop
mov
mov
jge
xchg
aaa
pop
sbb
ins
dec
fist
fld
inc
loop
xor
stos
and
sub
add
sub
jmp
and
bound
(bad)
retf
cld
int3
pop
sahf
jl
xchg
pusha
cmp
adc
lods
push
inc
pop
xchg
mov
cmp
lods
jecxz
addr16
cld
lea
addr16
cmp
or
xlat
dec
cs
repz
mov
adc
das
inc
mov
loope
cli
or
sbb
push
sbb
sub
mov
push
sbb
push
shl
mov
lahf
mov
ror
jg
mov
dec
lea
nop
dec
mov
adc
pop
cmp
mov
sub
arpl
jb
mov
push
add
loop
jo
xor
add
push
mov
sbb
cmp
add
icebp
ins
lods
cwde
rcr
loopne
xchg
xlat
cdq
xchg
jb
mov
mov
es
cmp
ins
xchg
rcr
adc
popf
mov
mov
mov
jmp
stos
mov
push
push
push
push
ins
fst
stc
cmp
std
or
sti
or
fisttp
push
mov
or
jno
jecxz
pop
sub
cwde
dec
(bad)
cmp
jmp
arpl
or
out
xor
jmp
add
add
sbb
(bad)
pop
jmp
(bad)
jo
or
push
mov
or
aam
imul
ss
mov
call
or
aaa
test
ror
test
pop
push
call
dec
out
adc
push
add
add
cmp
(bad)
mov
lea
jo
outs
adc
pusha
and
out
rcl
popa
pop
data16
dec
dec
mov
push
adc
aas
and
dec
clc
xchg
jge
arpl
pop
xor
sub
mov
jl
or
push
sub
fcom
outs
cmp
pop
rcl
std
mov
addr16
loope
imul
ret
aam
nop
and
xor
jns
push
add
mov
inc
and
xchg
mov
mov
pop
pop
pop
jno
and
jecxz
mov
pushf
stc
or
js
lahf
sahf
sbb
inc
jg
xor
cmp
or
movs
dec
in
mov
lods
ret
sbb
inc
and
sti
movs
xor
sti
dec
ins
inc
sbb
dec
cmc
in
or
dec
jl
in
xchg
pop
xor
outs
add
(bad)
push
imul
ins
mov
(bad)
mov
inc
mov
mov
mov
xor
(bad)
ss
pusha
dec
shl
dec
cli
jbe
jge
imul
(bad)
cmp
and
loopne
shr
sub
popf
jl
cmp
inc
popa
adc
dec
mov
addr16
int3
inc
mov
mov
and
(bad)
aas
inc
inc
popa
push
inc
xor
or
mov
outs
mov
cmp
(bad)
pop
and
adc
mov
push
enter
xchg
int3
jle
lea
jnp
or
ds
push
rcr
jl
fwait
fs
jmp
push
arpl
and
test
in
lods
out
dec
sub
add
js
fcomp
dec
retf
test
fbld
pop
in
dec
xchg
mov
fwait
mov
mov
xlat
mov
inc
mov
scas
mov
xchg
int
mov
push
adc
sti
(bad)
aad
arpl
cmp
(bad)
mov
pop
iret
pop
outs
xor
in
xlat
aas
fisubr
ja
test
pop
out
xchg
(bad)
add
inc
shl
mov
push
adc
dec
jbe
fidivr
dec
clc
push
(bad)
test
js
mul
loop
bound
mov
ds
and
retf
inc
movs
add
sahf
addr16
inc
push
ret
and
in
test
loopne
movs
jmp
cmp
jmp
xor
in
or
jo
jmp
jae
add
es
xor
repz
fwait
nop
mov
nop
iret
xchg
cmp
iret
ins
push
push
and
int3
and
sar
xor
mov
pop
jge
jbe
scas
outs
or
cmps
pop
or
lahf
mov
imul
dec
jb
leave
test
(bad)
mov
imul
ds
inc
pop
jb
pushw
(bad)
push
lods
mov
mov
push
ret
out
or
(bad)
pop
mov
add
mov
mov
cli
out
sbb
inc
xor
sbb
cmc
(bad)
into
and
jne
adc
stc
jp
push
jne
pop
fstp
inc
or
not
aad
in
ins
pop
ds
sbb
ja
mov
les
pop
js
inc
aam
jle
sahf
add
push
and
mov
(bad)
xchg
call
outs
jg
mov
push
sbb
mov
dec
adc
ja
sbb
aas
jnp
scas
js
outs
inc
or
jo
jae
out
mov
and
add
mov
inc
fwait
mov
movd
mov
xlat
sti
popf
xor
adc
aas
daa
mov
in
call
data16
cmp
int
jnp
cld
push
and
nop
ja
sbb
pop
mov
pop
mov
enter
jns
neg
aam
xor
ror
cmovb
inc
push
das
push
and
mov
xor
adc
ins
lahf
pop
push
mov
add
cmp
test
inc
mov
jmp
fwait
popf
push
adc
ins
(bad)
xchg
test
hlt
inc
repz
push
mov
cmp
int
shl
lahf
test
or
fistp
pop
and
add
test
sbb
mov
in
or
hlt
xchg
out
imul
rol
and
inc
cmp
push
dec
pop
shr
adc
jg
adc
leavew
sub
mov
ret
aaa
mov
dec
outs
jnp
movs
add
test
cmp
sbb
call
and
fdivr
push
ins
adc
sub
dec
out
mov
mov
cmps
ja
mov
lods
push
jecxz
cmp
inc
mov
push
dec
dec
lods
or
dec
jp
lds
cmp
and
fisub
jmp
dec
mul
shl
mov
jmp
jo
fisttp
adc
jge
sbb
icebp
aaa
mov
sbb
push
iret
xchg
sbb
mov
cmp
(bad)
cld
iret
outs
mov
mov
aad
inc
ss
dec
and
imul
icebp
popf
mov
int3
and
cmp
dec
push
xchg
or
sbb
shr
and
js
sub
(bad)
jae
out
inc
sub
call
mov
sbb
js
scas
sub
xor
and
int3
cmp
rcr
jns
or
sub
fs
jo
es
sub
test
mov
jae
loopne
and
loopne
movs
lods
sub
xchg
jp
(bad)
(bad)
nop
pop
pop
loop
push
imul
jb
inc
mov
push
ds
inc
je
inc
sti
and
out
pop
popf
add
ficom
jbe
fcom
adc
ficomp
adc
stos
xor
mov
out
aaa
jns
mov
xor
loopne
ret
icebp
out
or
popa
mov
pop
les
mov
nop
add
xchg
lock
fs
shl
movs
hlt
push
shl
ret
xlat
or
ficom
pop
stos
and
adc
jg
or
push
mov
mov
sar
pop
loopne
cmp
cmps
cmp
cmp
adc
and
add
test
xor
mov
ds
mov
adc
mov
(bad)
rcr
(bad)
adc
mov
push
sti
aam
sub
repz
or
sub
cmp
into
daa
sbb
pop
mov
std
and
inc
inc
push
inc
retf
shl
iret
aad
mov
or
push
jbe
les
mov
int3
shl
(bad)
xchg
mov
(bad)
dec
dec
sahf
(bad)
ds
mov
pusha
ss
sub
mov
mov
and
jo
or
sub
and
cmp
adc
add
jmp
mov
jmp
mov
imul
mov
push
cli
movs
popaw
and
jg
sbb
sub
push
inc
pop
(bad)
lods
cmc
mov
sub
icebp
mov
push
cmps
pop
sub
stc
imul
pop
cdq
js
push
xlat
inc
jmp
or
xchg
lahf
test
jns
pop
addr16
test
push
xlat
cmp
(bad)
aad
aaa
mov
xchg
mov
fneni(8087
dec
jno
fs
adc
lods
mov
jp
jle
xchg
and
push
jnp
adc
xchg
shl
mov
outs
lahf
push
std
neg
lods
sub
ret
push
jae
inc
dec
outs
movs
or
adc
test
mov
dec
or
repz
rcr
cs
add
mov
cli
jge
das
enter
lods
iret
and
aas
mov
inc
popa
push
cmps
inc
sbb
cmps
jmp
mov
jg
mov
test
pop
xchg
test
add
aad
and
jge
and
inc
jmp
xchg
pop
shl
bound
scas
jle
lds
mov
xor
loopne
fistp
xchg
aam
rol
stc
mov
sub
(bad)
mov
shl
push
adc
test
popf
popa
sub
push
dec
outs
add
mov
loop
xor
rcr
test
ins
mov
fstp
ins
les
loop
lock
call
jp
stos
push
imul
(bad)
ins
outs
add
mov
rcr
arpl
ss
dec
jo
stos
mov
aam
aam
xor
mov
test
inc
inc
lahf
mov
sub
retf
imul
repnz
loope
inc
stc
jbe
call
outs
cmp
lea
mov
loope
sub
fwait
inc
jmp
inc
aas
cmovns
out
pop
cmps
mov
in
scas
imul
mov
xor
das
sbb
ret
and
mov
fdiv
dec
pop
mov
add
shl
test
or
sbb
mov
mov
imul
cli
dec
clc
jg
cmp
mov
pop
shl
shl
not
xor
dec
or
mul
lock
xchg
cmp
popa
lods
add
call
test
xchg
push
inc
stos
add
push
rol
fdivr
lahf
mov
daa
xor
jnp
add
mov
jmp
or
in
jne
dec
adc
cs
dec
ins
xor
xchg
jne
inc
not
mov
sub
xchg
popf
xor
mov
cli
sbb
int3
dec
xchg
push
push
adc
mov
scas
pusha
inc
mov
push
or
dec
or
xchg
inc
push
xor
mov
xchg
arpl
xor
sbb
push
inc
jo
adc
jae
push
fst
int3
jle
add
sub
retf
test
xchg
int3
cmp
dec
les
mov
mov
aam
sbb
pop
loope
cwde
dec
ficom
loopne
int3
jb
add
fstp
pop
xor
and
pop
pop
mov
sub
jb
mov
rcl
adc
sahf
cmp
mov
jmp
popf
xchg
frstor
ja
arpl
ja
push
fs
hlt
inc
or
mov
push
bound
inc
add
lock
xchg
push
ret
inc
mov
popa
rol
cmp
xchg
add
aas
jno
xchg
std
test
ss
icebp
out
movs
cmp
jae
call
test
mov
movs
(bad)
loope
ds
cmp
pop
aaa
fnstcw
in
das
or
sub
sbb
clc
sub
sub
cmp
or
inc
(bad)
sbb
out
fcom
(bad)
or
add
sbb
ss
mov
nop
je
frstor
mov
test
fcmovbe
cmc
mov
dec
fldenv
sbb
int
xor
test
(bad)
push
hlt
aam
movs
loope
add
dec
mov
mov
clc
call
js
call
es
xor
hlt
xchg
pop
popa
mov
jo
repz
(bad)
lahf
es
daa
dec
ins
mov
das
outs
in
lahf
add
es
sbb
sti
aaa
ss
mov
ds
xor
pop
xor
addr16
movs
inc
div
repz
xor
sub
clc
out
dec
xor
cmp
cmp
add
mov
rcl
repz
pop
jmp
xchg
push
imul
pop
sub
dec
scas
or
inc
popf
gs
or
dec
add
dec
leave
(bad)
(bad)
fstp
aaa
cdq
(bad)
fisttp
fs
movs
mov
dec
mov
and
pop
cld
nop
xchg
clc
adc
les
dec
jp
(bad)
dec
pop
or
into
fwait
xlat
sahf
lds
out
dec
cmps
pop
inc
mov
pop
mov
adc
mov
pop
adc
jecxz
nop
cmp
sbb
daa
scas
scas
js
mov
mov
pop
fs
and
jge
es
in
arpl
push
test
dec
adc
sbb
or
mov
cli
jno
dec
movs
cmp
or
retf
mov
repnz
loopne
xchg
dec
or
clc
xrelease
fs
inc
stc
pop
aas
movs
inc
loope
mov
jmp
mov
push
ja
loopne
into
outs
inc
cmp
sub
xlat
mov
cmp
inc
inc
or
xchg
cmp
daa
aas
jae
loop
pushf
xor
sbb
imul
pop
jae
rcl
jb
(bad)
mov
fs
mov
rcl
outs
(bad)
lahf
xor
sub
push
in
stc
test
xchg
sub
das
mov
arpl
xchg
xchg
inc
in
sub
pushf
mov
daa
shr
arpl
push
dec
pmulhw
retf
push
or
sbb
scas
cmp
loopne
xor
ret
xchg
inc
rol
daa
retf
or
jmp
aad
push
xor
dec
jmp
sub
jnp
jns
sub
add
pop
int3
scas
into
imul
xchg
lahf
push
sub
nop
pop
sbb
imul
std
xor
imul
rcl
mov
mov
xchg
aad
adc
mov
(bad)
or
fisttp
cmp
dec
test
aam
xchg
imul
pop
iret
(bad)
mov
ins
add
mov
add
inc
call
push
or
xchg
(bad)
mov
loop
jge
xchg
mov
xor
xor
jg
push
pop
sbb
aas
mov
cwde
sbb
stos
and
inc
add
(bad)
outs
addr16
lahf
enter
xchg
in
push
clc
mov
jl
jp
sub
jecxz
cmp
and
and
add
or
jo
pop
mov
mov
inc
ud2
adc
in
scas
stos
int
ret
push
test
retf
jge
and
(bad)
xchg
dec
mov
push
cmp
ret
movs
mov
add
int3
and
sbb
test
jbe
xor
or
push
cmps
lock
sbb
nop
mov
clc
sbb
sbb
je
icebp
hlt
sbb
enter
fnstcw
sahf
mov
mov
data16
xchg
mov
movs
and
aaa
setbe
loopne
arpl
jle
sbb
pop
enter
sar
jl
pop
mov
mov
and
mov
leave
imul
clc
daa
jno
mov
mov
sub
mov
mov
aam
adc
push
mov
mov
outs
aaa
sbb
fldcw
adc
push
or
sub
push
cmp
pop
push
pop
lods
jne
adc
popf
inc
test
adc
add
jge
cmp
data16
(bad)
jne
fnstsw
and
lahf
cdq
outs
mov
daa
cmp
push
popa
jge
jne
test
push
addr16
or
arpl
fwait
(bad)
repnz
or
dec
push
sti
mov
fld
jl
inc
add
lods
imul
push
or
pushf
es
xor
cmp
push
ret
xor
dec
cmc
sub
jns
jb
mov
out
fisubr
jnp
sahf
push
mov
mov
sub
jae
int3
dec
cwd
adc
sub
dec
(bad)
neg
sti
lea
mov
inc
add
or
jnp
cmp
mov
add
sub
pop
sbb
pop
xchg
aam
xor
in
movs
rcr
fsub
cmp
mov
mov
ins
(bad)
xchg
pop
rcr
push
pop
xchg
pop
movs
push
imul
cmp
xchg
xchg
(bad)
lods
cmp
cmp
jbe
push
pop
sbb
cwde
mov
cmp
popf
xor
or
fidiv
adc
mov
nop
out
jns
add
sub
addr16
shr
xchg
add
mov
ja
nop
cwde
fsub
cli
xchg
inc
mov
inc
shl
xor
push
and
ss
xor
stc
shl
and
fnstsw
movs
mov
mov
push
jo
ja
inc
jnp
push
arpl
dec
mov
bound
ins
or
gs
lock
push
adc
pop
inc
stos
int3
movs
cmc
mov
imul
dec
push
add
cmp
and
movs
cmp
pop
sti
repz
rcr
js
add
div
cld
add
das
fdivp
mov
dec
and
out
fxch
cwde
faddp
dec
hlt
push
data16
sbb
dec
add
push
sbb
shl
ins
cs
add
mov
hlt
adc
xchg
pop
mov
xchg
ret
jns
mov
jl
sahf
push
ja
sbb
pop
mov
or
xor
aad
stc
push
hlt
fld
mov
push
sub
adc
mov
aas
inc
int
outs
(bad)
enter
xchg
lods
lea
outs
in
stos
inc
push
and
lods
(bad)
(bad)
cmp
xchg
int
adc
sbb
int3
jnp
jg
xchg
pop
dec
sbb
pop
shl
sub
fsubrp
adc
(bad)
rcl
mov
in
(bad)
cdq
call
inc
pop
sbb
mov
xor
pop
retf
cmps
call
push
adc
mov
int3
mov
and
mov
les
call
xor
es
push
xor
lods
sbb
jg
mov
fld
jecxz
pop
call
dec
cmps
ja
xor
sub
xchg
lea
cmp
mov
jge
cmp
or
(bad)
mov
cmps
jb
inc
cmps
jmp
inc
fsubr
(bad)
pop
(bad)
mov
xchg
push
inc
cmps
xchg
(bad)
call
dec
mov
or
sbb
inc
mov
les
adc
mov
aam
pusha
clc
pop
push
cs
dec
cwde
push
dec
dec
push
xlat
cld
push
sub
and
sub
jns
test
xchg
mov
sub
cmp
fld
pusha
dec
push
jno
lods
and
push
pop
cmps
push
cdq
popf
push
and
aam
hlt
icebp
out
ins
retf
adc
inc
mov
(bad)
retf
dec
out
out
sbb
push
sub
dec
pop
aas
inc
sub
leave
push
cmc
mov
(bad)
pop
mov
xor
pushf
pushf
stc
mov
les
(bad)
push
pop
add
sbb
xor
fmul
adc
xchg
mov
loope
mov
xchg
jae
cwde
lods
lds
push
lahf
bound
repnz
lods
loop
lods
inc
mov
mov
mov
xchg
inc
les
pop
pop
je
or
aam
adc
cmp
xchg
xchg
xor
rep
or
out
and
daa
adc
push
jp
ffree
(bad)
fld
scas
loope
sbb
push
in
enter
aam
aam
sbb
rcl
and
mov
mov
sub
cmps
dec
sbb
test
xchg
sub
out
mov
dec
cwde
pmullw
lea
xor
nop
out
pushf
sbb
mov
inc
jnp
jmp
hlt
addr16
clc
es
loop
inc
mov
add
stos
cwde
in
and
nop
sbb
cmc
jb
lea
or
dec
and
int3
xlat
push
imul
out
jp
ret
pop
pop
adc
imul
lods
push
je
lods
sar
lods
cmps
rcl
lods
add
int3
(bad)
dec
sub
sar
push
data16
inc
jle
xor
sbb
shl
xlat
shr
inc
repnz
or
jns
xor
(bad)
jecxz
int
push
pop
shr
mov
add
jno
(bad)
cmp
imul
pop
sub
mov
dec
push
adc
mov
mov
or
(bad)
stos
imul
push
adc
cmp
jne
mov
mov
xchg
test
mov
xor
jecxz
movs
and
mov
test
or
xor
pushf
clc
cmp
xlat
cmp
imul
movs
cmp
push
out
sub
and
inc
leave
sub
mov
inc
(bad)
pop
mov
inc
pop
dec
or
ret
sahf
retf
add
aad
jge
inc
cmp
sub
in
xchg
cmp
lods
(bad)
xlat
stos
icebp
dec
xchg
xchg
out
imul
imul
gs
addr16
jo
movs
push
shl
mov
scas
jl
push
sbb
sub
retf
sahf
shr
mov
sub
xchg
loop
sbb
add
sar
lock
fwait
mov
push
xchg
sbb
lods
pop
mov
mov
fdivr
jl
cld
inc
(bad)
sbb
pop
ret
cmps
add
add
stos
std
aaa
bound
pop
loopne
mov
rcr
stos
dec
mov
adc
leave
pop
loopne
call
push
ins
pop
adc
sbb
sbb
pop
push
xchg
xor
pop
xchg
fisub
ret
add
hlt
mov
movs
mov
mov
int3
repnz
dec
cdq
push
xor
add
xor
pop
in
add
movs
jne
rcr
mov
ret
inc
xchg
bound
mov
mov
fwait
daa
jo
mov
ror
cmp
mov
mov
cmp
pusha
mov
inc
sbb
lock
imul
cli
xor
cmp
nop
add
pop
aad
adc
(bad)
adc
sti
jmp
cmp
or
sbb
cld
jge
popf
je
cmp
dec
mov
iret
sub
fs
loop
iret
ds
fs
pop
xchg
and
pop
idiv
es
(bad)
pop
aaa
fist
daa
push
ins
call
xchg
repz
(bad)
mov
movs
(bad)
add
mov
(bad)
jmp
pusha
jbe
jnp
(bad)
sbb
mov
inc
jp
es
xchg
loop
sti
sub
dec
push
sar
adc
sti
repz
push
push
repz
lods
les
cmc
mov
idiv
cmp
dec
int
jb
inc
cwde
adc
xor
add
je
sbb
sub
xchg
xchg
adc
mov
mov
inc
pop
inc
in
pop
sbb
or
adc
add
ror
dec
nop
sar
jno
dec
movs
fadd
add
test
dec
cmp
mov
out
pop
cmp
push
push
dec
inc
pop
pop
(bad)
xor
shl
inc
(bad)
push
js
lea
sbb
and
jge
push
clc
iret
xor
pop
into
js
shl
das
data16
jno
add
scas
jecxz
fisttp
push
dec
xchg
fwait
mov
pusha
pusha
stc
and
jp
push
jb
call
sbb
das
push
sbb
push
mov
dec
xor
mov
or
add
test
mov
aad
fisub
lahf
bound
dec
test
xor
push
int
out
mov
dec
sub
and
sub
mov
xchg
lock
fadd
mov
inc
pop
push
push
cmp
mov
fs
dec
ficom
jmp
movs
js
call
jne
rcr
cmp
jmp
jno
movs
and
jbe
mov
rcl
mov
popf
daa
xchg
mov
xor
in
fnstsw
push
mov
shl
sbb
dec
dec
out
mov
aas
call
(bad)
js
push
cmp
rep
lods
or
addr16
jecxz
test
mov
into
sar
mov
icebp
mov
pop
into
inc
hlt
xchg
adc
or
mov
call
mov
ret
es
rol
sahf
nop
xlat
xlat
push
or
enter
mov
fsub
mov
(bad)
sbb
fild
pushf
fldenv
inc
xchg
cmp
inc
ret
fld
loop
lods
fisttp
fisub
jne
jae
fdivr
xchg
xchg
pushf
push
ss
in
xchg
dec
lahf
mov
(bad)
js
mov
out
and
loopne
or
add
inc
test
inc
mov
mov
xor
outs
shl
mov
jmp
iret
lock
and
sub
aad
cmp
xchg
lods
push
jp
and
int3
adc
xchg
add
sar
cmps
adc
mov
jo
sar
xchg
imul
sub
pop
sbb
add
lods
outs
jno
sbb
mov
retf
mov
and
inc
data16
ds
fsubrp
mov
xor
sbb
or
mov
test
jns
loope
imul
jmp
ds
ins
in
inc
aam
or
and
cli
imul
jmp
out
ret
sub
pop
mov
jl
pop
stc
jo
in
daa
or
cmp
test
stos
int3
jle
stc
jg
fs
pusha
sub
mov
sub
adc
lods
fstp
in
mov
or
iret
stos
cmp
sbb
xchg
mov
ret
add
jbe
push
sub
repz
add
adc
xor
mov
cld
mov
lods
cmc
and
or
jg
push
jo
sub
mov
(bad)
jnp
jbe
sub
fsubp
push
cdq
daa
stos
adc
jmp
mov
getsec
mov
jl
popf
push
in
sub
stos
add
mov
dec
bound
jmp
mov
jmp
js
ja
jmp
sbb
adc
sbb
add
stc
ds
mov
inc
sbb
iret
test
lahf
xchg
jmp
jo
push
aas
retf
cmp
pop
push
adc
jmp
arpl
aam
loope
push
popf
hlt
bound
ins
ret
test
cmp
das
jne
mov
(bad)
ins
jnp
aaa
(bad)
out
jnp
(bad)
xchg
fs
mul
in
(bad)
aaa
inc
cs
ss
call
jo
jo
mov
sbb
xor
rcr
and
(bad)
cmp
xchg
aam
das
or
cdq
dec
outs
inc
fstp
pop
add
jl
inc
fisttp
aam
loop
xchg
mov
out
in
ror
adc
into
xchg
loop
inc
xchg
(bad)
cmp
pop
xor
mov
rcl
jmp
popf
sbb
mov
and
jbe
push
sbb
inc
push
std
aam
pop
mov
in
push
push
iret
sub
into
push
pop
dec
fistp
sbb
out
sti
cdq
push
and
mov
loop
mov
inc
fiadd
dec
imul
push
cmp
outs
sahf
ins
nop
jecxz
xchg
stc
push
scas
pop
shr
movs
push
pop
bound
not
loope
pusha
sub
fsub
pushf
mov
ret
sbb
xlat
out
push
add
mov
shl
sbb
add
imul
pop
push
test
pop
pop
mov
jno
dec
adc
mov
iret
rcr
aaa
aas
lock
jmp
ss
dec
cmp
(bad)
mov
dec
xor
xor
jmp
repz
inc
dec
retf
mov
jl
jbe
(bad)
in
jmp
sahf
mov
sbb
push
dec
shl
mov
xlat
sub
sub
sbb
xor
retf
retf
mov
dec
test
cld
arpl
push
or
push
inc
sbb
stos
push
in
dec
mov
js
adc
sub
mov
vmread
mov
inc
cmc
out
inc
mov
bound
dec
inc
pop
fidivr
xchg
out
sub
inc
jl
lods
repnz
mov
dec
fs
push
mov
pop
pusha
std
rcl
mov
out
rcr
mov
inc
cli
cwde
pop
(bad)
call
imul
inc
pop
(bad)
hlt
retf
retf
stos
out
ins
pop
sub
pop
ret
inc
(bad)
repz
jb
imul
xchg
test
fdivr
add
mov
sbb
out
(bad)
lods
xor
mov
popf
rol
mov
fisub
and
retf
sub
lahf
shl
into
mov
xchg
mov
pop
std
int3
in
mov
push
popf
hlt
add
adc
iret
das
mov
sar
ret
in
call
jae
push
add
add
inc
sahf
jl
xchg
call
mov
ror
in
mov
ficom
dec
jl
push
mov
mov
ja
or
jle
jl
or
or
daa
cs
mov
rol
pusha
mov
mov
sbb
add
js
mov
pop
sub
mov
cld
clc
mov
aaa
ret
mov
xlat
std
adc
dec
test
push
nop
in
sbb
mov
je
fimul
clc
push
xchg
std
adc
mov
sbb
scas
push
and
jmp
lods
hlt
sub
fwait
push
xor
mov
icebp
fdivr
ret
dec
es
loope
dec
fild
daa
imul
scas
aaa
sub
sbb
pusha
in
shr
loopne
sahf
xchg
in
ins
out
xchg
mov
cld
outs
cs
outs
xchg
push
loopne
mov
jbe
inc
scas
cmps
sub
popf
jecxz
repnz
pop
js
xchg
sub
and
popa
push
fucomp
sahf
inc
sbb
or
sbb
or
cld
or
aaa
leave
sub
div
adc
aaa
iret
in
mov
js
jne
in
sahf
pop
pop
fbld
aaa
jge
xor
pop
inc
ret
mov
sub
cli
lods
pushw
outs
mov
inc
pop
popf
jmp
stos
and
push
xor
adc
push
pop
retf
es
div
cli
jbe
xchg
fs
sbb
aaa
cmp
sahf
leave
xor
stos
in
call
jmp
cwde
gs
adc
cmp
addr16
or
movs
sbb
cmp
sahf
in
mov
pop
mov
lds
push
jmp
jge
pop
adc
sbb
ret
add
and
cmp
and
inc
ds
jecxz
pop
or
retf
push
add
xor
pop
adc
push
stos
inc
das
dec
mov
mov
xchg
ds
add
and
(bad)
jmp
inc
cdq
imul
call
clc
cmp
fist
jmp
xchg
std
mov
mov
mov
je
sbb
aaa
jae
outs
sub
fdiv
cmp
movs
out
lods
(bad)
mov
sar
test
int3
or
or
jb
mov
xlat
push
dec
clc
mov
mov
popa
inc
in
mov
push
dec
arpl
pop
addr16
jg
inc
push
pop
std
push
mov
push
sbb
sti
inc
(bad)
iret
int3
jmp
and
xor
int3
mov
mov
jl
xchg
js
mov
fsub
sbb
adc
xchg
add
sbb
add
push
inc
add
push
mov
adc
mov
(bad)
stc
push
dec
push
sti
mov
sar
and
sub
push
jne
lahf
scas
fbld
push
aad
out
push
sbb
push
clc
mov
dec
or
push
xchg
idiv
in
cmp
push
xchg
pop
dec
or
jo
mov
sahf
adc
repnz
cli
movs
inc
mov
push
(bad)
clc
mov
push
add
cmp
pop
mov
(bad)
(bad)
aam
sar
inc
mov
in
mov
int
inc
ja
(bad)
mov
xor
rol
jne
add
mov
hlt
mov
enter
imul
lock
lahf
jae
arpl
out
mov
cmp
or
fmul
xchg
mov
push
mov
cmp
add
mov
xor
lods
jmp
mov
add
gs
ret
mov
inc
popf
out
mov
sbb
repnz
mov
stos
add
inc
in
ins
xor
push
jnp
push
inc
int
add
sbb
jno
call
sub
jmp
gs
retf
sub
sub
adc
adc
mov
ins
movs
fild
cmp
jl
test
outs
xchg
dec
pop
mov
pop
jl
xchg
xor
ret
call
jmp
sub
and
shl
add
sbb
aas
sbb
push
jne
fistp
aam
sub
fdiv
cmps
or
cmp
gs
push
cmp
cmp
adc
retf
mov
mov
daa
or
mov
add
ret
cmc
addr16
int3
ins
adc
cld
add
(bad)
xchg
inc
loop
xchg
jne
sub
(bad)
(bad)
mov
loop
mul
cmps
icebp
or
fisubr
xchg
into
inc
inc
add
hlt
sar
clc
xor
out
and
inc
test
add
cmp
cmp
mov
mov
adc
push
sbb
xchg
jnp
push
jo
aas
push
add
jno
pop
sbb
xor
mov
or
fcom
ja
or
inc
or
mov
add
gs
dec
arpl
hlt
xchg
mov
pusha
xchg
mov
cmp
xor
inc
sbb
push
ret
fisttp
mov
add
sub
std
cmps
mov
sbb
fucom
sub
mov
outs
bound
dec
push
aaa
jle
cmp
jmp
dec
clc
and
lds
cmp
inc
aas
sub
jae
not
repnz
xor
call
inc
mov
mov
fidiv
add
pop
xor
dec
inc
shl
stos
inc
xchg
fcmove
add
dec
mov
in
cmp
lock
inc
inc
stos
lods
dec
push
adc
add
dec
jno
jb
pop
cmp
xchg
and
xor
stos
cmps
cmp
ins
stc
imul
dec
fsub
cdq
call
jp
sbb
imul
and
(bad)
adc
scas
call
out
add
rcl
jmp
pop
push
jne
enter
mov
xor
push
cld
int3
test
mov
test
lods
sbb
pop
push
fcom
mov
in
(bad)
out
mov
cmp
mov
das
sub
and
or
fdiv
pusha
std
pop
rcr
inc
push
ret
outs
add
cmp
add
cmc
mov
push
sbb
cmp
enter
xchg
aad
jnp
ret
cmp
and
enter
lds
call
fs
inc
xor
pop
sbb
mov
xchg
lds
or
in
pop
fdivr
mov
(bad)
xor
jmp
popa
jbe
pop
cli
adc
bound
cmp
pop
lods
loopne
cmp
dec
jb
rcl
push
fild
jge
or
test
dec
stos
dec
adc
mov
leave
push
adc
rol
and
setbe
ins
xor
es
out
je
or
dec
cmp
or
sti
xor
loop
xor
inc
add
loope
jecxz
ss
push
dec
mov
fs
or
or
jmp
add
repz
cmp
and
loop
pop
mov
mov
ins
pop
in
scas
shr
fdiv
nop
jp
and
dec
jg
add
fdivr
(bad)
xlat
mov
sbb
lods
out
out
cdq
ja
xor
imul
jae
ret
jmp
(bad)
jns
mov
ret
iret
jl
imul
stos
push
push
xchg
mov
push
in
xor
(bad)
popf
mov
add
dec
dec
push
jecxz
call
adc
jle
mov
push
jb
push
xor
(bad)
push
add
dec
add
xor
lods
arpl
int3
out
push
test
aas
retf
lds
aam
ffreep
sbb
retf
mov
mov
js
xor
sbb
sub
push
scas
(bad)
jmp
cmp
cmp
mov
lods
jns
jl
call
add
jmp
repz
je
xchg
aam
and
(bad)
std
or
rcl
mov
enter
pop
stc
dec
xchg
aaa
mov
pop
jne
mov
ds
xlat
aam
fmul
jb
cs
repz
inc
dec
adc
bound
inc
rep
mov
dec
dec
add
mov
jae
sub
push
add
into
mov
pop
movs
add
cmp
ins
dec
rol
xchg
rol
jmp
(bad)
mov
xor
call
push
scas
mov
mov
call
cmp
pop
xor
inc
lahf
and
mov
out
push
addr16
jne
hlt
jl
ror
pop
mov
data16
lds
add
adc
into
sub
push
jmp
ror
mov
lods
mov
(bad)
in
push
(bad)
dec
das
dec
jmp
fist
es
and
cmp
int3
in
lods
ret
jl
arpl
scas
mov
dec
jbe
gs
jle
cdq
adc
add
push
sub
sub
push
mov
ficom
and
mov
dec
hlt
pushf
scas
cmp
lods
fsubrp
push
inc
gs
adc
dec
cs
push
mov
jbe
push
call
in
pop
bnd
inc
xchg
pop
lods
jae
popf
pop
loope
movs
jmp
jne
bound
pop
mov
dec
repz
aas
push
push
lods
bound
inc
loopne
push
shr
ret
jp
pop
ins
xchg
mov
lahf
div
es
mov
push
test
and
popf
xchg
das
cmp
jmp
inc
dec
mov
js
jmp
loop
ret
sbb
dec
aas
jne
cmp
sub
cmp
mul
jae
lods
xor
pushf
retf
nop
hlt
adc
add
xchg
ficom
push
rcl
in
test
mov
inc
repz
jge
mov
push
jno
stc
inc
sub
out
lock
sahf
rcl
cmp
fild
cwde
cwde
mov
(bad)
out
pop
push
pop
and
iret
cmps
xor
push
push
add
lock
xchg
repnz
jp
js
mov
dec
adc
jo
xchg
and
pop
vpsubsb
(bad)
in
cmp
(bad)
cmc
cmc
sub
aas
ret
mov
sahf
in
call
mov
lds
ret
ja
popf
test
add
fnstcw
jns
inc
je
retf
test
inc
xchg
dec
ret
in
mov
addr16
mov
push
sbb
cmp
push
pop
jp
mov
cmc
add
neg
cmp
or
mov
pop
mov
retf
xor
adc
and
enter
add
fcomp
jecxz
lods
lods
push
pop
mov
test
lahf
dec
in
outs
cli
dec
and
push
lea
inc
pop
dec
es
push
pop
dec
outs
popa
fld1
sub
sbb
int3
inc
cs
iret
add
movs
hlt
mov
cld
dec
lds
rcr
inc
dec
ret
dec
movs
push
mov
push
mov
add
mov
jb
out
imul
mov
in
int
cwde
mov
xor
scas
icebp
gs
test
add
test
mov
rol
shl
dec
sar
in
jns
test
sbb
enter
push
fdivr
push
and
mov
sub
stc
cmp
jnp
sub
push
test
mov
pop
mov
mov
(bad)
rol
mov
cld
hlt
jo
xchg
retf
mov
or
dec
retf
lock
dec
mov
jb
sub
ds
jns
xchg
(bad)
rcl
(bad)
push
mov
jne
inc
test
inc
dec
and
pop
mov
fsubr
dec
inc
sub
test
arpl
lods
daa
mov
mov
and
pop
es
add
pop
popa
mov
les
hlt
inc
cmp
push
xor
push
stos
in
cs
mov
pop
cmp
popa
inc
jmp
mov
cmp
out
fcomp
inc
jp
or
inc
xchg
jno
or
cmp
pushf
jl
clc
jge
push
push
jae
test
ds
lods
jmp
int3
ins
add
inc
mov
pop
cmp
movs
jae
add
mov
push
popf
arpl
adc
pop
mov
adc
mov
fst
jg
jge
inc
retf
xchg
jns
out
stos
inc
rol
call
ror
xchg
and
xor
push
loopne
loopne
mov
pop
je
call
fdiv
push
cmp
clc
stos
pop
cmc
sbb
and
ret
mov
xchg
out
push
push
push
adc
push
mov
xor
outs
(bad)
(bad)
inc
pop
ret
out
out
sbb
outs
mov
js
jno
nop
mov
test
mov
mov
lea
jmp
jmp
and
mov
mov
repz
lods
cmps
mov
es
les
shl
mov
icebp
jno
sbb
ffreep
adc
mov
aam
ror
loopne
pop
ja
and
or
jp
out
stos
rcr
int
out
jmp
inc
mov
stos
mov
out
xor
stos
ja
fs
js
pop
and
std
popf
rol
outs
ins
mov
popa
pop
sti
fmul
repz
clc
add
xchg
in
xchg
lahf
push
stos
sbb
sbb
adc
dec
mov
jbe
in
mov
jne
cmc
push
cmp
pop
xchg
outs
outs
test
adc
pusha
retf
sub
push
xchg
int
xor
dec
or
mov
cwde
test
xor
mov
movs
cmp
ffree
fstp
add
fwait
rcl
or
mov
clc
nop
fldcw
inc
rcr
retf
push
mov
ret
sub
loopne
pop
pop
(bad)
mov
lahf
and
mov
test
push
sbb
pop
das
test
sub
loope
mov
mov
cmp
push
add
outs
xor
adc
sub
sbb
mov
add
xor
mov
push
test
dec
fwait
cmps
push
ror
xor
lds
cmp
test
jne
adc
pop
scas
mov
aaa
push
enter
arpl
lock
sub
and
cli
push
jbe
mov
jle
popf
and
daa
xchg
out
dec
neg
in
push
sub
adc
fiadd
cwde
inc
jmp
repnz
xor
inc
or
mov
adc
jg
mov
rcl
mov
dec
or
ffreep
ret
jno
add
push
mov
inc
je
loop
mov
xchg
pop
jle
dec
jp
imul
cmp
in
test
mov
les
std
les
and
sbb
mov
xor
(bad)
into
imul
repz
addr16
rcl
scas
(bad)
jno
mov
leave
mov
lds
fcomp
mov
jb
jnp
dec
scas
int
add
jmp
icebp
dec
mov
xchg
jmp
jg
xchg
scas
push
mov
jnp
push
daa
arpl
mov
arpl
push
sub
mov
stos
add
in
cmp
clc
cdq
push
out
push
sub
dec
icebp
xchg
xlat
(bad)
and
mov
nop
in
ja
pop
(bad)
mov
cmp
pop
pop
mov
int
fwait
mov
push
nop
add
jo
pop
(bad)
and
or
(bad)
retf
or
inc
(bad)
aam
call
cmp
imul
loopne
adc
rol
clc
add
and
es
mov
loope
ret
cli
fnstcw
stos
idiv
mov
pop
addr16
stc
(bad)
jne
dec
das
xchg
in
sub
and
mov
(bad)
xchg
call
mov
push
pop
lods
test
add
mul
in
ret
int
scas
sti
xchg
inc
push
adc
add
shl
fst
jecxz
inc
xchg
(bad)
fild
cmp
scas
arpl
and
push
and
ds
call
and
fwait
mov
sub
loop
rcr
xchg
xchg
popf
into
jae
fwait
pusha
jmp
xchg
jl
lods
cld
push
mov
sub
ror
and
into
mov
fs
mov
cdq
add
xor
and
sahf
pop
loopne
out
and
neg
adc
inc
cdq
cmps
int3
test
hlt
std
out
retf
imul
inc
cmp
cmps
aas
xchg
je
cld
add
nop
xchg
sub
sbb
mov
clc
sub
add
(bad)
repnz
add
or
adc
into
sbb
mov
stc
imul
addr16
cmp
retf
pop
jg
repnz
inc
in
sbb
fimul
jp
mov
adc
es
(bad)
and
mov
fdiv
push
inc
fadd
(bad)
sbb
xchg
jl
cmp
int
mov
or
xor
cmps
cmp
fwait
dec
ja
push
movs
cmp
sub
push
or
fadd
lock
sub
cmp
cmc
loopne
enter
fchs
sub
or
mov
xlat
fcmovnb
arpl
mov
addr16
dec
sar
sub
jnp
dec
jmp
xchg
xchg
pusha
push
cmp
mov
arpl
out
(bad)
xchg
jmp
mov
(bad)
mov
sbb
lods
gs
pop
adc
dec
mov
fisub
mov
ss
sahf
movs
repnz
xor
fistp
in
icebp
add
xor
lea
icebp
inc
xlat
inc
mov
and
dec
iret
ja
inc
dec
dec
loopne
test
push
inc
mov
in
sub
pop
mov
lods
mov
adc
inc
jle
cld
inc
jge
xchg
ins
xor
jo
ret
adc
rol
jne
lds
pop
neg
lahf
xchg
aad
leave
dec
iret
add
test
into
and
and
inc
sbb
jae
push
jmp
inc
sbb
jno
fnstsw
fld
add
fidivr
mov
jns
sbb
clc
jae
popa
sti
jno
mov
out
push
addr16
sbb
jbe
std
inc
pushf
xor
hlt
hlt
sti
pop
loope
test
adc
mov
clc
or
add
out
leave
arpl
cs
in
fldenv
dec
pop
xchg
push
nop
cmp
push
movs
cmp
mov
les
pop
popa
xchg
xor
ins
pop
sub
jge
xchg
cmps
sbb
xchg
imul
fs
add
pop
ja
lods
cmp
inc
ficom
mov
mov
jnp
push
addr16
pop
in
in
xchg
scas
lea
cmp
ins
fsub
mov
push
cmp
jb
inc
fnstenv
or
int
push
imul
pop
nop
fcom
fistp
sbb
cmps
xor
(bad)
pop
shl
mov
inc
sbb
push
add
cmp
jp
movs
popa
movs
cmp
call
adc
inc
push
jne
and
pusha
addr16
inc
jl
inc
adc
shl
push
and
pop
inc
in
add
sbb
int
shl
push
iret
(bad)
fisub
cli
stc
jge
jmp
cmp
into
pop
hlt
ds
aad
cld
ss
sub
scas
or
jge
mov
jp
mov
dec
(bad)
out
inc
xor
dec
movs
ja
or
call
jmp
pop
cs
lea
repnz
mov
test
xchg
mov
push
jle
mov
mov
push
(bad)
xlat
test
add
dec
dec
(bad)
retf
test
pop
out
(bad)
je
sti
fs
(bad)
je
xor
inc
push
mov
dec
fstp
pop
ficom
cmp
rcl
jno
jo
pop
int3
mov
retf
(bad)
xchg
(bad)
mov
mov
call
mov
xchg
mov
lahf
xchg
xchg
mov
xchg
fsub
aaa
jmp
push
xchg
lahf
sar
mov
and
cmps
loope
xchg
popf
lods
ds
add
cmp
sub
rcr
jae
and
retf
(bad)
(bad)
jae
sub
add
sub
out
add
jbe
fnstcw
sub
sbb
cmp
lods
jbe
push
sbb
fcom
add
mov
dec
fs
call
data16
repz
pushf
fbld
xchg
je
jg
scas
push
inc
pushf
out
xchg
mov
clc
jne
rcr
add
iret
sub
add
mov
push
jns
repnz
pop
dec
xor
add
mov
push
mov
das
sbb
pop
xor
popf
xor
lock
xor
xchg
loop
mov
aad
adc
push
stos
cmp
aad
ret
arpl
cmc
cmps
jmp
push
data16
out
push
rol
daa
shl
pop
and
mov
xchg
xchg
adc
or
adc
ja
aas
xor
adc
dec
loopne
movs
arpl
cdq
or
hlt
bnd
arpl
adc
in
adc
adc
in
inc
mov
stos
pop
mov
ret
mov
lods
inc
ror
jno
add
nop
test
xchg
sbb
ja
sbb
cmp
pop
jbe
push
lahf
push
mov
ja
sbb
jmp
scas
mov
mov
inc
leave
xor
jae
shl
or
xchg
test
ins
xor
push
xchg
jne
jge
out
mov
stos
test
ja
clc
test
mov
push
push
or
jg
mov
add
dec
aas
adc
clc
jbe
and
stos
sbb
stos
mov
mov
pop
push
loop
bsf
cmc
jno
jnp
pop
push
arpl
(bad)
push
packssdw
sahf
push
bound
xor
pop
xchg
div
and
push
loope
fwait
in
adc
fidivr
push
out
push
lock
ds
sti
xchg
ja
mov
sub
xor
and
aas
leave
push
xchg
iret
and
ins
sar
pop
cmp
daa
xchg
pop
push
clc
arpl
jp
iret
stos
add
rol
xchg
stos
jl
ja
imul
std
xor
scas
hlt
cmc
int
test
sbb
sub
vmwrite
mov
fist
jns
sbb
(bad)
jne
shl
sbb
data16
(bad)
pop
int
and
fadd
repz
jae
sub
cmp
cmp
inc
in
mov
jmp
repz
cli
add
out
aas
rol
cmc
inc
xchg
mov
xchg
jmp
mov
cmp
xchg
lds
mov
pop
inc
mov
pusha
cmp
push
mov
out
and
pop
or
sub
mov
clc
jns
data16
xor
add
mov
push
(bad)
cld
enter
sbb
fs
not
fimul
loop
push
adc
sahf
clc
mov
cmp
sub
pop
outs
xchg
out
inc
add
pop
fld
or
arpl
or
call
or
xchg
adc
or
jno
pop
mov
sub
or
inc
xchg
rcr
loope
mov
jb
dec
call
mov
mov
sbb
into
push
xchg
stos
add
fistp
outs
jnp
stc
and
add
xchg
sub
mov
adc
and
out
das
mov
in
call
and
xchg
fsubr
loop
mov
jbe
cld
movs
fwait
xchg
or
mov
cld
cmps
(bad)
fnsave
dec
mov
js
ins
inc
inc
jmp
xchg
pop
dec
mov
or
inc
xchg
in
pop
int3
sub
fadd
lds
scas
mov
mov
push
imul
xchg
stos
cmp
mul
inc
neg
mov
rol
xchg
test
bound
out
xor
leave
loopne
mov
mov
dec
add
ins
out
mov
fwait
cs
or
je
sub
sbb
jbe
xchg
pop
pop
pop
test
push
adc
mov
ss
adc
sbb
inc
mov
or
pop
mov
mov
mov
inc
push
es
loop
(bad)
cmp
aaa
add
mov
ret
adc
and
bound
pushf
mov
mov
shr
xor
jne
inc
mov
jo
fdivr
jle
fidiv
aaa
mov
mov
aaa
shl
aad
mov
out
call
fld
fidivr
mov
test
and
add
ret
leave
add
movs
inc
push
bound
push
xor
cmc
cdq
mov
nop
dec
scas
loope
mov
jae
(bad)
lea
test
jbe
scas
into
mov
movs
cmp
std
or
(bad)
je
fwait
dec
mov
lods
pop
cmp
mov
xchg
pop
mov
loope
xchg
sub
popa
addr16
or
test
aad
das
gs
adc
test
xchg
push
cmp
push
clc
in
das
push
out
jmp
pop
mov
cmp
sub
xchg
xchg
jmp
xor
stc
jmp
inc
fisubr
(bad)
jbe
retf
mov
(bad)
xor
sar
pop
sbb
pop
pop
jecxz
movs
jmp
(bad)
dec
inc
xchg
xchg
pop
xor
ds
pusha
fst
mov
shl
stos
xchg
ja
test
retf
push
rol
xchg
jmp
je
imul
jnp
xor
cmc
(bad)
adc
aad
add
ret
or
shr
mov
es
(bad)
loopne
jg
jmp
add
outs
ficomp
pop
and
lock
(bad)
je
into
push
scas
sub
sbb
ins
in
and
mov
cmp
adc
enter
mov
lods
sub
push
mov
mov
and
mov
aas
add
xor
pop
pop
aad
les
xor
xor
(bad)
mov
pop
mov
xchg
retf
sti
jmp
lea
jae
cmp
xor
adc
repz
lahf
ins
sub
fwait
mov
jle
out
cmps
sbb
and
std
stos
stos
add
mov
inc
mov
mov
iret
shr
jmp
cmp
pop
push
repz
jmp
add
sbb
and
add
adc
test
icebp
(bad)
repz
push
dec
mov
addr16
pop
mov
adc
inc
jge
jge
or
loope
ror
xchg
pop
fdivp
bound
push
mov
inc
out
mov
mov
sbb
ror
test
add
movs
cmp
add
mov
nop
xor
push
sbb
or
xchg
movs
add
out
mov
(bad)
or
adc
jg
xor
mov
(bad)
scas
aam
dec
out
mov
inc
test
out
inc
adc
jb
and
push
bound
cmp
xor
repnz
jmp
push
pushf
movs
or
inc
jmp
ret
sar
ret
mov
pop
cwde
bound
cmovbe
in
push
cmps
std
jmp
fwait
imul
movs
jecxz
adc
cmp
(bad)
fcom
push
jp
xchg
jg
mov
pop
sbb
stos
lock
inc
or
(bad)
push
or
cmp
push
sub
pop
in
dec
stos
outs
test
pop
ins
mov
jae
push
sub
mov
sbb
xor
icebp
jo
and
pop
mov
xor
jge
cdq
xchg
mov
jne
inc
fild
loope
retf
stos
xor
xchg
and
stos
and
fisttp
(bad)
push
pop
and
mov
shl
cs
jae
inc
dec
pop
(bad)
mov
dec
sub
das
in
mov
sbb
xor
sbb
pusha
cli
xor
or
xor
mov
jp
adc
and
pop
popa
aam
enter
and
jl
and
dec
pop
setp
push
add
outs
sbb
aas
mov
loop
push
retf
push
aad
sahf
push
mov
push
mov
enter
std
cli
xabort
xchg
and
les
iret
pop
adc
aaa
(bad)
jmp
inc
push
scas
outs
shl
hlt
inc
sbb
pop
mov
std
iret
lds
cdq
xor
or
xor
mov
mov
xor
and
into
mov
add
cmps
adc
movs
frstor
and
xchg
push
jl
js
ja
dec
pop
in
jge
pop
push
sub
cwde
in
cmps
out
jle
dec
adc
pop
push
cmp
pop
clc
aaa
imul
pop
mov
jno
inc
cmp
loopne
xor
or
inc
in
outs
lock
das
cmc
pop
mov
pop
xor
(bad)
xlat
js
add
(bad)
aad
mov
leavew
loope
push
ror
out
ins
pop
fisub
xor
(bad)
stos
cli
pop
in
cdq
aam
lods
std
sahf
pop
jge
mov
fstp
dec
leave
adc
push
adc
add
cmp
daa
adc
call
pop
addr16
cmc
or
sar
stc
inc
inc
fidiv
push
and
push
mov
mov
fs
mov
pop
inc
inc
cdq
mov
ss
or
dec
jecxz
inc
sbb
jne
pop
pop
test
(bad)
cmps
sbb
inc
bound
jmp
pop
loopne
xor
hlt
popa
pop
add
pop
loop
dec
in
imul
and
gs
push
jne
addr16
add
and
ret
and
mov
(bad)
aas
and
das
cmp
push
cmp
and
mov
das
dec
ret
inc
cdq
stos
and
pop
jns
dec
adc
sub
add
jo
ins
ror
enter
aam
sti
popa
xor
dec
repz
cdq
add
js
pusha
jge
sub
ins
and
ret
xor
(bad)
mov
pop
mov
cdq
rol
adc
xchg
push
xchg
mov
es
pop
or
aam
dec
push
and
push
xchg
clc
call
and
fstp
xchg
mov
ret
or
rol
mov
outs
and
imul
jp
push
dec
pop
daa
push
loop
ret
adc
xchg
stos
cmp
stc
lds
sar
inc
adc
push
jg
ficom
or
sub
jmp
adc
push
cdq
cmps
or
(bad)
jnp
pop
(bad)
rcr
and
adc
stos
pop
mov
mov
sahf
shr
jno
and
ss
js
push
jns
clc
(bad)
lds
cld
xchg
dec
inc
jg
add
jno
daa
in
jae
shr
daa
bound
mov
ss
sbb
(bad)
mov
dec
cmp
push
jo
adc
dec
inc
std
jmp
in
ret
jne
in
jno
not
xchg
fimul
add
pop
ret
repz
aas
ins
inc
and
jae
std
mov
ins
add
in
add
jns
push
adc
adc
out
fsub
cmc
pop
enter
jp
xchg
hlt
push
lods
sbb
leave
dec
test
jle
dec
lods
shl
mov
inc
add
sub
bound
pop
ss
cmps
xor
fst
les
jecxz
loopne
and
adc
lea
lods
jb
rol
lea
(bad)
and
test
fst
push
xor
aas
and
xchg
adc
mov
push
loop
frstor
ins
jg
xchg
mov
popa
pop
push
push
ss
ja
pop
(bad)
cmp
cmp
mov
pcmpeqd
xchg
pop
out
xor
push
xchg
mov
data16
shr
push
daa
ror
push
xchg
rol
cs
pop
mov
ja
push
loopne
(bad)
daa
jecxz
inc
sbb
or
in
mov
pusha
and
rcr
inc
xchg
inc
sbb
lock
mov
jmp
daa
das
xchg
fimul
jmp
shl
inc
sub
push
lea
cmc
popa
call
push
std
xchg
inc
aam
imul
or
ret
jmp
fbld
shl
or
fs
outs
mov
pop
mov
and
(bad)
pop
cld
mov
mov
(bad)
std
jmp
sbb
fist
sar
lock
sbb
sub
xchg
or
sub
jnp
mov
pop
cmc
push
pop
mov
imul
xchg
std
jle
push
mov
mov
push
mov
test
nop
popa
lods
lea
enter
fwait
add
cwde
and
sbb
call
and
cmps
mov
sub
mov
mov
repz
jbe
add
jne
adc
ror
mov
test
fisttp
mov
pop
imul
call
pop
cmp
mov
adc
dec
or
jg
mov
jae
sbb
fdivr
push
mov
sbb
jae
or
pusha
xchg
pop
fsub
jmp
ins
sbb
adc
cmc
in
mov
pop
bound
cmps
push
push
xchg
ffree
ss
inc
test
push
fst
(bad)
(bad)
jb
test
xor
cmc
test
scas
mov
std
setns
fiadd
push
fmul
ret
ror
ins
out
scas
fdivr
ret
mov
mov
sub
push
jo
pop
mov
or
inc
aam
loop
nop
out
jo
add
movs
rcr
sub
fistp
pop
push
iret
mov
mov
dec
xchg
mov
mov
jge
sub
pop
std
(bad)
and
xchg
inc
jns
xor
xor
sub
cmp
lea
pop
fiadd
dec
div
ins
retf
pop
push
jae
aaa
mov
(bad)
mov
sub
dec
in
and
jnp
out
adc
mov
jcxz
cmp
out
fimul
outs
or
out
xchg
(bad)
fwait
in
add
(bad)
mov
cdq
(bad)
mov
das
adc
std
xor
out
cmps
aam
pusha
and
arpl
dec
jp
pop
cmp
mov
cmp
cli
add
shl
stos
movs
xor
push
adc
fucom
push
leave
add
call
out
dec
sbb
out
ja
rcr
jbe
lds
jecxz
sub
jns
(bad)
in
fs
or
cmp
ins
push
sub
adc
mov
fisttp
pop
ins
scas
pusha
scas
leave
pop
or
scas
inc
mov
pop
add
aam
cld
sbb
lods
xchg
pop
not
push
or
pop
es
mov
inc
cld
sar
push
(bad)
ror
push
fimul
hlt
sbb
pop
jg
jp
jo
iret
aam
mov
jnp
hlt
pushf
mov
sub
cmps
das
push
mov
addr16
imul
push
xlat
repnz
sbb
stc
sbb
jmp
mov
mov
or
push
int3
cmps
popf
add
jae
stos
or
(bad)
mov
js
shl
xor
mov
cmp
jne
mov
pop
ror
cs
xor
aas
pop
or
call
pop
dec
fbstp
jae
jle
ins
xor
pusha
stc
retf
add
add
xor
popa
or
cmp
loop
push
js
adc
push
fiadd
cld
mov
cli
jnp
inc
mov
les
adc
dec
sti
pop
xor
inc
and
sub
xchg
cli
xlat
in
out
dec
in
push
arpl
xlat
cmp
or
in
aam
scas
mov
mov
mov
mov
jmp
data16
call
fstp
adc
mov
sbb
xlat
sub
inc
sub
test
sub
shl
rcr
adc
retf
sbb
sub
sub
(bad)
gs
sbb
pop
pop
jmp
sar
cwde
call
lahf
mov
rol
test
sub
aam
sub
ins
inc
sub
jl
cmc
popf
and
mov
lock
inc
sub
ret
mov
xchg
cld
jmp
mov
nop
mov
jbe
jmp
and
mov
add
in
xchg
out
mov
movs
xchg
(bad)
cs
push
sbb
dec
enter
test
jge
rcr
movsx
inc
mov
test
mov
test
mov
add
and
repnz
retf
or
fild
loope
ret
xlat
add
sub
push
imul
fwait
cli
fwait
mov
nop
xchg
sbb
clc
leave
scas
jmp
push
push
pop
(bad)
ret
retf
lods
icebp
fild
mov
pop
clc
outs
xlat
pop
xor
add
imul
dec
push
loope
in
push
int3
add
stc
aas
inc
mov
add
scas
(bad)
dec
jb
loopne
inc
imul
js
xchg
loopne
dec
adc
xor
cmps
test
aam
mov
mov
je
jp
add
cmp
dec
jmp
push
dec
lods
sahf
adc
popa
cli
sbb
movs
mov
pop
(bad)
pusha
xor
dec
enter
aas
cmp
cmp
inc
pop
inc
mov
push
jle
outs
repz
mov
cwde
fwait
mov
jl
mov
test
jp
ret
jae
cli
dec
mov
push
pop
push
jo
sahf
dec
jp
test
bound
xchg
leave
movs
je
cmp
sbb
inc
mov
jno
xchg
pop
jne
imul
loope
inc
mov
jp
pusha
fidivr
pop
js
ror
movs
hlt
or
scas
mov
mov
stos
imul
mov
and
scas
pop
push
push
lods
cmc
mov
ins
int
push
movs
pop
xor
pop
out
push
ins
rcl
pop
(bad)
lods
jae
cmp
or
jbe
stos
jl
out
loope
repz
and
outs
cmp
mov
push
shr
pop
pusha
hlt
cmp
int
sub
or
fwait
loopne
mov
ret
cmp
cmp
dec
dec
add
push
cli
jbe
push
ins
sbb
std
dec
sbb
retf
outs
aad
xlat
dec
mov
mov
imul
add
jbe
std
sbb
leave
jae
pushf
inc
ins
js
aaa
jp
sbb
cmp
pop
repz
xchg
(bad)
not
adc
push
div
iret
sub
push
cmps
mov
adc
mov
fdiv
stos
pop
call
mov
jno
int
stos
rol
retf
sbb
fcomp
mov
stc
jnp
sbb
jg
xor
pop
movs
xor
hlt
push
sbb
ins
mov
add
test
das
sbb
leave
inc
add
pop
repnz
mov
fsubp
push
(bad)
jle
(bad)
in
scas
test
int
xchg
xor
(bad)
aaa
stos
aad
mov
sar
add
mov
adc
gs
jnp
movs
sbb
xchg
icebp
add
out
or
dec
aas
data16
xchg
fistp
std
dec
ds
push
adc
rcr
movs
inc
inc
aas
dec
(bad)
call
data16
sbb
sub
add
jmp
sti
dec
mov
mov
push
pop
sub
adc
sbb
inc
or
xchg
mov
hlt
int3
fwait
inc
mov
loopne
fldenv
imul
fcom
lahf
xor
or
mov
lds
mov
inc
cmp
std
jae
(bad)
adc
out
lds
dec
sbb
push
add
cdq
test
cld
jl
out
mov
lock
inc
mov
push
and
pop
mov
outs
sbb
int3
fptan
push
push
fnstsw
int
mov
stos
and
push
fsubr
adc
pusha
dec
fstp
rcr
(bad)
sar
mov
mov
cli
int
shl
adc
xchg
fs
push
cmp
fisttp
pushf
xor
data16
cmp
xchg
fwait
add
retf
and
dec
gs
out
cmps
or
(bad)
inc
ror
test
jns
shl
jnp
mov
adc
int3
lods
push
in
cs
sub
pop
push
xchg
(bad)
mov
ret
in
mov
inc
iret
xchg
xor
xchg
cld
sbb
pop
mul
cdq
in
mov
int
lds
pop
lahf
pusha
(bad)
out
jecxz
jmp
jecxz
jp
clc
les
pop
sbb
clc
shl
cmp
ja
jge
dec
or
popf
(bad)
xchg
out
push
xchg
cmp
push
pop
mov
add
(bad)
push
les
aam
push
xor
mov
sub
icebp
shr
cmp
loope
xchg
cmp
inc
jecxz
in
int3
mov
push
in
xchg
aam
into
inc
mov
(bad)
mov
test
and
jmp
xor
sbb
addr16
imul
bound
sub
sbb
cmps
std
fldz
cs
or
clc
imul
cmps
int3
pop
mov
push
pop
pop
jne
jo
jecxz
xchg
mov
sti
mov
lods
dec
sub
or
and
mov
iret
imul
pop
es
mov
xchg
sahf
inc
sub
xchg
pop
aam
sub
dec
or
(bad)
fsubr
inc
add
xor
call
adc
fild
push
sar
pop
add
xchg
cs
mov
in
jl
int3
je
cwde
scas
and
inc
retf
addr16
test
add
out
xchg
xchg
retf
or
aaa
pushf
dec
sar
cmc
cmp
sub
in
push
jp
cwde
imul
xor
add
je
adc
pusha
dec
adc
fist
cdq
xor
pop
test
(bad)
movs
ficomp
ret
jae
or
pushf
add
fisttp
mov
sub
sub
stc
test
jg
call
xchg
xor
mov
mov
(bad)
aad
int
xor
outs
movs
and
sbb
add
sti
fcomp
(bad)
lea
cld
mov
dec
stos
in
sbb
or
(bad)
lahf
stc
(bad)
fisub
dec
inc
and
stos
pop
cdq
xchg
in
rcr
fwait
inc
sbb
sti
imul
popf
aam
popa
cmp
fidivr
and
stos
cmp
mov
push
or
mov
pop
sub
(bad)
ds
js
enter
cmp
xchg
popf
in
int3
(bad)
(bad)
and
es
inc
fwait
in
sub
(bad)
jmp
jg
jmp
cmps
leave
xor
mov
les
aam
in
add
adc
or
ins
ja
jg
cmps
xor
push
test
mov
jmp
fs
xchg
xor
test
call
scas
std
in
je
jle
or
xor
mov
jle
lods
mov
(bad)
cld
aaa
and
aaa
push
xchg
mov
not
mov
cmps
ficom
outs
(bad)
pushf
push
dec
push
add
inc
popa
inc
sbb
cld
inc
dec
or
retf
cwde
mov
jno
sub
xor
sub
xchg
lock
sti
test
add
push
mov
add
inc
pop
cmp
mov
cdq
cmp
in
enter
sbb
add
cs
stc
loop
fild
or
and
aaa
sbb
(bad)
mov
jne
cwde
sti
mov
xchg
aam
lods
int
mov
xor
or
inc
push
mov
fsub
cmp
loopne
out
das
pusha
(bad)
das
mov
cwde
cmp
inc
add
jle
stos
sahf
sub
sub
inc
in
jl
mov
inc
mov
fnsetpm(287
iret
sbb
and
outs
mov
leavew
xor
shl
dec
mov
jns
ret
pop
addr16
jo
retf
jns
xchg
pusha
mov
mov
pop
mov
daa
jne
pop
repz
xor
inc
adc
push
and
xchg
or
pop
or
push
jo
(bad)
pop
enter
loopne
jns
pop
inc
sub
fs
shl
mov
jne
repz
and
mov
jg
xor
push
mov
sbb
mov
and
pop
loop
pop
mov
fdiv
mov
mov
nop
(bad)
push
sbb
repnz
movzx
jecxz
push
jg
aam
sbb
cmp
or
dec
outs
iret
aam
in
(bad)
lods
push
xor
sahf
jl
idiv
jl
mov
mov
sahf
xor
popa
push
popf
sub
popa
adc
inc
cmp
sbb
jns
pop
out
adc
aaa
jecxz
or
cdq
push
das
retf
adc
pop
cmp
loope
or
imul
inc
sub
fild
(bad)
pop
jbe
ja
loope
jno
pop
pop
pop
out
mov
sbb
fsubr
imul
shl
add
jp
pop
or
dec
in
bnd
add
jp
sti
dec
mov
push
cld
imul
int
or
ja
xlat
(bad)
out
sar
mov
shr
jnp
push
sub
or
mov
arpl
jno
stc
wbinvd
mov
or
je
sub
jne
and
pop
stos
and
fimul
jbe
daa
imul
xchg
cmp
loope
xor
ja
movs
fs
pop
fcomp
in
je
dec
sub
inc
dec
aas
or
lods
jmp
xchg
mov
sub
std
adc
inc
ret
adc
mov
in
ja
and
cmp
(bad)
imul
cmp
cmp
push
jno
(bad)
add
loope
sti
ror
int
ret
int3
mov
adc
xchg
mov
pop
loope
or
dec
imul
(bad)
(bad)
mov
pop
mov
scas
movs
xchg
push
fidivr
pusha
jmp
cmp
mov
rcr
shl
fwait
xchg
call
mov
mov
push
loop
or
das
push
(bad)
adc
add
mov
popf
ja
jp
push
xchg
mov
es
xchg
mov
aad
push
xchg
mov
cmp
stos
fimul
mov
sbb
jne
pop
mov
pop
test
mov
jl
das
mov
cmp
adc
int3
repz
push
popf
imul
lds
or
mov
nop
ins
inc
loop
mov
push
shr
add
and
aas
sub
sub
shr
push
mov
stos
sub
xlat
ss
jmp
scas
mov
sbb
jmp
push
xlat
in
xor
xchg
call
push
aas
inc
movs
cmps
sbb
xchg
cmp
cmp
ror
sahf
mov
jno
outs
les
retf
and
and
fsubr
fld
out
mov
aam
loop
mov
mov
outs
arpl
adc
inc
in
mov
das
ret
sbb
std
sub
cli
movs
cmp
pop
dec
xchg
dec
(bad)
int3
and
pop
leave
mov
and
pop
push
xchg
jg
or
add
iret
movs
sub
clc
outs
inc
mov
or
lods
cmc
xor
xor
test
ss
pop
std
xor
push
and
leave
and
stos
jl
das
push
pop
loope
inc
add
cmps
push
movs
mov
sti
mov
cmp
in
cmp
push
sahf
dec
mov
or
add
cmps
es
(bad)
lods
sub
sub
ins
cmps
cmc
lock
inc
push
dec
jmp
rol
pop
retf
idiv
pop
push
push
or
pop
call
int3
in
and
lds
stc
dec
xor
or
aaa
push
ror
loopne
add
mov
mov
xor
jno
cmp
pop
in
imul
adc
add
(bad)
repnz
in
jo
mov
inc
push
aaa
inc
sbb
mov
imul
(bad)
sub
jmp
pusha
push
inc
inc
push
push
sub
mov
ret
sbb
mov
jne
pusha
xchg
jp
add
pop
fld
sbb
xlat
mov
sti
loop
or
(bad)
repnz
adc
aad
mov
data16
push
mov
mov
push
out
jo
(bad)
pop
inc
fdivr
adc
retf
xchg
ror
das
cdq
pop
and
shr
iretw
mov
jmp
adc
mov
xor
xchg
or
push
cli
pop
cwde
mov
xlat
sub
jo
xor
jge
push
cmp
mov
bound
scas
pop
psubw
push
pop
in
(bad)
mov
inc
sbb
xor
cmps
scas
jmp
icebp
repz
leave
xchg
sub
cwde
push
fcomi
dec
stc
aas
inc
aas
stos
and
cmp
xchg
cmp
mov
mov
jno
mov
(bad)
in
cmps
sub
(bad)
enter
(bad)
in
pop
sti
(bad)
std
enter
nop
push
sbb
dec
inc
jmp
xor
jb
cld
fldenv
and
cld
dec
sub
xchg
fcomp
ins
inc
mov
je
fbld
jmp
jle
push
out
push
inc
test
and
lock
jno
sar
iret
gs
sbb
mov
adc
xchg
repnz
push
std
cmps
xchg
pop
adc
arpl
push
(bad)
hlt
pop
xor
and
aaa
repz
jns
jmp
and
pop
sbb
pop
pslld
(bad)
inc
loop
ins
neg
pushf
fucom
lods
pop
push
int3
movs
icebp
xor
dec
nop
add
scas
inc
(bad)
lahf
add
jbe
or
and
adc
lea
cmp
push
add
or
hlt
and
into
jp
popa
mov
fmul
lds
loope
pop
sub
jge
adc
cmp
int3
adc
push
ret
push
jmp
push
pop
xchg
jne
pop
aad
(bad)
pop
cmp
mov
add
xchg
xor
in
sbb
cld
lods
in
aad
cmp
and
in
aas
pop
ret
cmc
outs
stos
push
mov
jbe
xchg
lds
mov
nop
out
jno
mov
enter
lock
cmp
pop
lods
ja
daa
(bad)
aas
push
aad
fmulp
int
(bad)
push
mov
fadd
into
and
mov
retf
es
mov
gs
jne
push
sbb
mov
jge
test
into
not
or
ficomp
or
jb
pop
pop
pop
div
ss
dec
(bad)
ret
mov
or
cmp
xor
arpl
add
mov
imul
leave
xor
add
in
xchg
mov
rcl
mov
call
mov
sub
inc
xchg
mov
rol
out
ins
lods
inc
ins
push
add
cmc
jmp
dec
test
cli
scas
addr16
jno
ror
cmp
jle
xchg
xchg
sar
or
test
and
repnz
setne
xchg
mov
mov
shl
ss
xchg
jecxz
mov
or
mov
lds
xlat
and
test
bound
inc
out
sub
mov
add
ficomp
ins
inc
mov
cmp
sahf
inc
xlat
out
mov
inc
and
jnp
outs
pop
adc
seta
pop
mov
xor
jmp
(bad)
lock
jmp
sbb
les
rcl
dec
jb
mov
stos
pop
popa
stos
or
rcr
sahf
scas
jg
mov
push
mov
scas
jle
adc
lahf
push
sar
xor
and
stos
into
ss
repz
leave
loopne
dec
push
xchg
enter
iret
push
jns
mov
sub
pop
int3
retf
push
mov
pop
cdq
cdq
sub
call
or
adc
movs
and
rol
pop
xchg
vpsrlw
in
pushf
pop
jp
pop
imul
sub
(bad)
push
xchg
dec
jns
dec
pushf
jge
or
mov
outs
and
push
test
push
mov
ror
(bad)
ins
mov
adc
jmp
mov
cld
pop
repz
jne
sub
jb
jno
(bad)
sub
movs
cmp
mov
lock
paddq
test
sub
imul
adc
jns
call
jb
xchg
leave
push
add
clc
imul
or
test
pop
or
sar
xchg
push
loop
test
jl
push
dec
push
fsubr
pop
and
dec
mov
lea
inc
and
loopne
mov
into
sub
jmp
shl
push
add
adc
loop
push
xchg
add
(bad)
mov
or
jmp
jp
sbb
push
out
mov
pushw
or
rcr
mov
cdq
cmp
inc
pop
sahf
cmp
retf
cs
sub
xchg
fmul
or
hlt
jb
sbb
xchg
ds
ja
addr16
aam
inc
sub
(bad)
fld
(bad)
stos
inc
dec
mov
(bad)
jp
dec
mov
cmp
test
popf
cmp
cmp
add
xchg
sbb
jl
adc
pop
cmp
dec
xchg
cld
mov
sub
mov
in
mov
add
xor
inc
popf
push
inc
dec
out
lods
push
pusha
stos
or
das
cmp
fadd
mov
jl
in
xor
movs
lahf
push
movs
rcl
mov
outs
mov
jnp
xchg
loop
cmp
movs
mov
mov
mov
and
push
adc
or
add
mov
sti
pop
arpl
mov
bound
lods
daa
push
sub
ret
pop
cmps
dec
in
adc
call
rcl
xabort
div
push
leave
adc
jo
pop
mov
sbb
scas
sub
jmp
push
sbb
outs
xchg
fdiv
add
add
sar
ins
mov
cmp
push
test
sbb
xor
push
xchg
xchg
or
xchg
sahf
push
test
sub
add
fld
jne
not
enter
sub
loopne
or
in
jmp
pop
mov
cwde
sbb
lds
push
mov
lods
aaa
cmp
xchg
int3
stos
in
(bad)
jne
cmps
cmp
inc
xchg
repnz
mov
call
mov
ja
jecxz
add
cmps
adc
daa
jecxz
pop
(bad)
jp
dec
pop
call
stos
repz
and
out
nop
nop
mov
mov
dec
sbb
shr
xchg
adc
bnd
add
inc
dec
xor
sub
pop
jle
int
cwde
ror
movs
or
ret
xor
ins
daa
in
mov
dec
xchg
stos
pusha
adc
in
in
lods
clc
gs
es
(bad)
sbb
mov
mov
xchg
cmp
xor
jge
dec
rcr
inc
(bad)
jmp
clc
mov
outs
cmps
push
lods
push
mov
jns
(bad)
jge
enter
push
push
cmp
pushf
daa
jl
xchg
je
dec
pop
mov
pushf
cmps
imul
retf
mov
lahf
jns
(bad)
jne
sub
adc
fucomp
retf
mov
(bad)
rcr
mov
popa
pop
mov
sub
fwait
test
mov
mov
ret
xchg
leave
out
push
es
adc
out
sbb
pop
jne
mov
xchg
pop
sti
or
jmp
sti
push
xor
or
pmaxub
push
inc
test
frstor
(bad)
jp
ror
fstp
mov
ret
xchg
js
mov
ins
in
bound
lahf
mov
sbb
stc
mov
test
enter
xor
(bad)
fnstcw
and
retf
inc
int
lds
cmp
push
sahf
cmp
mov
mov
pusha
xor
add
lock
push
mov
mov
into
popa
cmp
xchg
or
cli
ss
(bad)
xchg
(bad)
mov
popa
mov
sub
out
(bad)
fidiv
cdq
test
adc
or
cmp
xchg
and
sbb
(bad)
stc
pop
jl
and
fwait
lock
jg
sbb
pop
add
xchg
push
mov
cmp
(bad)
sub
int3
arpl
pop
jnp
icebp
xchg
out
mov
cmp
push
fwait
lahf
fcom
loopne
ins
and
or
pop
xor
and
addr16
test
(bad)
xor
mov
sub
xor
(bad)
iret
nop
sub
ror
cmp
sub
xchg
push
ins
repnz
xchg
sahf
inc
xchg
ins
add
in
adc
push
dec
xchg
fcomip
repz
sbb
jp
add
mov
mov
rol
jmp
xchg
jmp
sbb
sbb
jae
daa
dec
jge
or
mov
out
xchg
add
inc
sub
sbb
push
(bad)
daa
add
paddsb
mov
inc
push
in
test
lds
mul
inc
sbb
mov
push
fwait
mov
stc
mov
mov
(bad)
fdiv
push
cmp
mov
stos
inc
adc
rol
ja
jp
cld
mov
pop
jns
cmp
cmc
cli
arpl
(bad)
adc
ficom
mov
cs
movs
sbb
jmp
jmp
and
sbb
mul
xchg
cmp
outs
adc
mov
mov
pop
fbstp
shl
inc
pushf
push
ret
into
neg
hlt
sub
jp
(bad)
stos
xchg
call
xlat
ds
pop
test
dec
cmps
xor
imul
out
call
popf
stos
mov
inc
popf
imul
push
xor
ins
sahf
pop
adc
loop
sbb
addr16
add
ret
outs
dec
stos
pop
call
pop
jnp
cdq
xchg
ret
loope
ins
pop
outs
cli
jle
push
(bad)
in
ret
sbb
pop
push
jmp
pusha
int
xor
adc
and
ds
mov
movs
jno
or
xor
fadd
imul
movs
push
icebp
mov
mov
inc
xor
mov
sub
data16
fmul
cli
fwait
(bad)
in
sub
sbb
cmp
mov
adc
cmps
push
mov
out
repz
fcom
mov
fldenv
jnp
fnsave
and
ins
lahf
inc
cld
push
jnp
enter
pop
retf
cmps
loopne
push
mov
packuswb
loopne
jmp
call
pop
xchg
push
jmp
mov
push
add
iret
sbb
mov
push
jmp
mul
out
add
gs
xor
push
inc
test
mov
test
mov
scas
adc
and
leave
call
(bad)
fcomp
aad
add
mov
fidivr
in
call
jmp
mov
inc
push
loopne
xchg
mov
in
or
jo
inc
pop
and
popf
dec
cmp
enter
iret
adc
jb
repz
xlat
pop
int
push
fimul
lea
and
gs
iret
out
aas
rol
(bad)
stc
sub
add
cld
adc
add
mov
pop
popa
push
stc
(bad)
lock
mov
lock
sbb
not
mov
lods
pop
movs
(bad)
shr
mov
mov
ins
xor
mov
int3
jle
outs
sbb
inc
adc
xor
outs
call
mov
jge
dec
sbb
push
xor
mov
retf
test
or
ret
ins
mov
pushf
xchg
cmp
sbb
xchg
xchg
pop
idiv
cmp
sub
ins
gs
mov
adc
js
(bad)
call
mov
inc
xor
sbb
out
(bad)
pop
adc
xchg
stos
fstp
jp
test
daa
or
xchg
mov
mov
rcr
push
(bad)
in
pushw
jle
cmp
fldln2
sti
dec
movs
shl
mov
pusha
test
in
sub
mov
call
jo
ret
hlt
test
(bad)
xchg
mov
call
sub
sub
jg
pusha
xchg
mov
int3
imul
nop
xor
cwde
ss
popa
test
hlt
(bad)
repz
pop
sar
retfw
and
jp
clc
call
je
jg
in
mov
push
jle
ss
cmp
pop
xor
jno
inc
mov
loop
inc
inc
pushf
add
movs
jbe
mov
jnp
push
es
mov
xchg
jp
arpl
mov
loope
xchg
mov
dec
dec
add
or
adc
into
sub
adc
ins
out
jl
push
fstp
mov
psubsw
fdivr
fadd
inc
imul
inc
loop
cmp
xchg
sbb
fimul
sbb
fstp
jno
jl
jne
addr16
sub
sar
sub
inc
in
mov
mov
fdivr
fs
xor
fsub
adc
pop
clc
pop
jge
sbb
out
stos
cmp
scas
loop
in
mov
fadd
test
js
mov
fist
jge
popf
sbb
cmc
push
sub
imul
loope
imul
cs
loopne
dec
lea
cmp
xchg
ds
push
inc
and
and
or
sbb
adc
sub
pop
adc
jmp
push
fcmovu
enter
xchg
mov
sti
jecxz
jp
xlat
sbb
push
jno
push
call
inc
out
cdq
mov
push
xor
pop
(bad)
stc
push
sar
or
bound
nop
fwait
mov
stos
nop
(bad)
pop
mov
add
jb
sub
cmps
cmp
ffreep
lahf
cs
xchg
dec
or
inc
pop
inc
ja
test
mov
sbb
lea
sar
mov
add
xchg
scas
fwait
pandn
jmp
mov
xchg
loopne
ss
or
repnz
jb
sbb
stc
adc
or
or
mov
lahf
clc
xchg
mov
imul
ret
popa
imul
inc
xchg
cmp
movs
push
push
test
test
inc
sar
icebp
add
sub
push
pop
inc
add
loopne
xchg
push
pushf
das
std
out
sub
add
pop
dec
sbb
clc
push
fnstcw
out
sahf
pop
stc
dec
jmp
loopne
mov
retf
xchg
fsubr
ins
not
jmp
pushf
add
(bad)
(bad)
or
not
stos
mov
pop
push
dec
and
outs
dec
add
adc
loopne
leave
cli
xchg
in
mov
(bad)
fld
and
into
add
mov
scas
mov
or
sub
ds
add
cmp
int3
clc
mov
push
sbb
inc
xchg
ss
repz
dec
rol
out
cli
lds
mov
and
cdq
add
inc
sbb
xchg
mov
add
sar
and
mov
xchg
rcr
ins
add
cmp
cli
cwde
mov
popa
stos
iret
or
mov
cmps
xor
xor
aad
and
arpl
loop
lea
jne
dec
sub
neg
call
push
push
cmp
xlat
in
test
loopne
cmps
cmp
or
lods
fwait
mov
dec
pop
out
and
push
xchg
add
push
mov
add
test
mov
cs
fisub
je
scas
imul
adc
pop
xchg
sbb
imul
dec
icebp
popa
push
sub
aaa
mov
push
(bad)
movs
cmps
dec
add
inc
inc
pop
dec
int3
push
out
push
sar
push
pop
outs
mov
sbb
dec
lods
sub
sbb
sbb
adc
stos
out
stc
je
pop
cmp
inc
push
xor
jg
mov
not
popa
mov
adc
pusha
jne
or
mov
jl
rcl
test
repnz
jmp
jp
das
mov
mov
lods
rcr
jns
ins
scas
shr
test
cwde
inc
pop
sbb
icebp
out
cwde
inc
push
inc
adc
enter
push
sar
pop
inc
fstp
fnsave
ss
dec
lea
mov
out
push
mov
jbe
sbb
and
nop
xchg
lods
cmps
outs
jmp
mov
dec
jbe
mov
js
stc
mov
imul
sbb
data16
mov
dec
inc
imul
xchg
jns
cmp
fnstcw
xchg
push
int3
push
scas
dec
or
adc
test
jg
sub
pop
xchg
adc
aad
out
(bad)
(bad)
add
cli
lds
add
cs
std
pop
inc
sbb
push
retf
ss
mov
xor
push
and
fist
imul
loope
add
xchg
push
push
mov
pop
push
cs
cmp
fidivr
sbb
pop
and
in
(bad)
sub
jmp
test
int3
mov
outs
add
or
cmp
sub
stos
ins
ss
scas
mov
jbe
pop
dec
xlat
and
pop
loop
push
and
sbb
ja
clc
dec
es
shl
xor
outs
out
test
gs
dec
pop
aad
fstp
std
mov
or
mov
aad
push
ret
data16
sub
cs
cmp
adc
inc
mov
test
xchg
stc
xchg
push
dec
pop
and
enter
mov
sahf
jmp
je
fimul
jo
inc
bound
mov
out
sar
jmp
mov
pop
outs
pop
pop
fwait
push
add
and
mov
test
xor
cwde
(bad)
cld
jmp
imul
inc
(bad)
lahf
je
mov
test
mov
pop
xchg
cmp
inc
sbb
inc
mov
or
cmc
sbb
pop
mov
shl
mov
cli
rcr
and
mov
xchg
sti
into
xchg
lahf
imul
arpl
dec
and
mov
pop
dec
inc
pop
fbstp
sub
add
inc
ins
pop
jae
ret
sar
in
cmps
adc
pop
retf
rcr
push
or
call
rol
test
int3
jp
push
jb
or
mov
rcr
xor
jns
lds
xchg
lods
mov
into
(bad)
mov
cmp
mov
jns
xchg
(bad)
jbe
pop
outs
jno
mov
outs
push
scas
test
(bad)
ins
jmp
jmp
fld
add
adc
fcmovne
pop
into
cmp
mov
jmp
xor
leave
adc
ror
mov
in
add
jne
inc
xor
cmp
pop
xchg
movs
adc
test
and
imul
push
in
aas
inc
icebp
jnp
ds
not
xchg
enter
nop
pop
mov
aad
sbb
fs
push
sub
test
xchg
outs
daa
into
pusha
push
xchg
xchg
dec
jb
enter
xchg
dec
sahf
loope
leave
cmc
add
jle
mov
std
aas
jne
sub
ret
movs
scas
adc
mov
jge
push
jge
mov
std
dec
sbb
ins
push
pop
inc
(bad)
nop
inc
das
jo
adc
cmp
stos
cwde
sar
aaa
bound
and
enter
pop
outs
push
inc
inc
fwait
xchg
fcom
pop
pop
pop
stos
call
inc
mov
scas
daa
inc
jecxz
or
add
fistp
loopne
jne
stos
test
add
jmp
push
and
mov
jp
iret
xchg
mov
enter
cwde
mov
clc
adc
jnp
movs
dec
adc
xchg
or
mov
in
test
loop
or
mov
(bad)
mov
(bad)
pop
mov
data16
push
mov
(bad)
das
and
arpl
jns
jmp
push
jb
lods
arpl
xor
lods
out
fcmovu
sahf
push
mov
cmc
pop
ins
xor
rol
mov
and
mov
xor
in
bswap
push
adc
imul
pop
mov
sub
(bad)
cmps
aaa
mov
sbb
clc
mov
popf
leave
out
sbb
cmp
mov
push
mov
mov
mov
xchg
xor
in
pop
inc
int3
pop
mov
and
enter
test
rol
xchg
pop
inc
ja
ret
push
jmp
stos
jle
fldenv
loopne
add
mov
sbb
dec
dec
mov
fwait
in
xchg
inc
adc
mov
popf
inc
inc
ja
fld
test
mov
push
data16
outs
loop
sbb
sar
leave
lods
stos
dec
mov
push
jno
and
int3
mov
add
pop
mov
je
test
stc
lea
mov
cmp
jmp
fstp
imul
mov
lods
popf
popa
mov
test
dec
movs
jo
fs
in
xchg
shr
shr
sub
xchg
push
or
inc
aas
imul
pusha
cld
cld
lods
cmp
(bad)
arpl
pop
arpl
fadd
xchg
das
bound
in
mov
data16
push
mov
pop
push
ret
xchg
push
adc
outs
jae
jo
push
retf
fisub
scas
fs
das
mov
or
add
jl
xchg
lds
das
pop
ds
jg
(bad)
stos
pop
call
ja
and
rcl
cmc
sub
push
loop
test
pop
adc
cld
retf
xor
loopne
xchg
popa
mov
pop
dec
pop
mov
xchg
inc
mov
sub
ret
xor
and
in
jo
or
call
push
adc
dec
sub
in
cmp
rcl
enter
jle
mov
nop
scas
test
addr16
test
mov
cmp
aad
add
dec
adc
fwait
ins
jb
and
pop
aad
(bad)
std
mov
fistp
sbb
add
sub
in
lahf
int
movs
rol
or
jae
loope
inc
clc
loope
mov
xchg
cmps
inc
jne
cmc
inc
pop
aad
(bad)
xchg
or
adc
jl
xor
shr
outs
ins
pop
or
movs
xchg
jb
sub
test
scas
adc
jle
int3
daa
mov
cmp
rcl
das
aam
rol
cs
ror
imul
jo
xchg
mov
mov
pop
(bad)
dec
dec
sti
mov
xor
push
in
sbb
push
out
(bad)
adc
test
and
pop
mov
movs
and
push
sub
jl
imul
ja
movzx
push
mov
int
push
push
push
out
mov
ins
sbb
dec
mov
test
jb
into
or
push
shr
xlat
scas
cs
sbb
rol
lock
sbb
mov
ins
cmp
or
test
inc
outs
xchg
jno
aad
adc
int3
jg
and
sub
dec
xchg
and
push
dec
sar
push
mov
aad
xchg
stos
shl
bound
invd
or
push
rcr
rcl
stc
mov
adc
(bad)
std
push
xor
xlat
pushf
test
ror
into
mov
push
nop
xchg
loop
dec
cmc
push
adc
repnz
xchg
sub
repnz
aaa
push
rol
sub
sbb
jnp
mov
push
push
mov
adc
or
lea
lahf
jae
ds
xor
(bad)
mov
sub
icebp
ret
fmul
push
inc
push
sbb
in
cs
sub
clc
or
dec
dec
sub
push
cmp
push
xlat
sbb
dec
fdiv
(bad)
fnstsw
scas
loopne
in
stos
or
xchg
or
jnp
(bad)
sub
jmp
jo
sbb
call
mov
inc
movs
icebp
lods
jbe
jmp
push
inc
and
sahf
push
mov
push
mov
jge
or
sbb
mov
pusha
rcr
mov
sbb
out
(bad)
movs
dec
lahf
ds
mov
repnz
loope
or
test
not
sti
ins
jp
mov
(bad)
enter
cli
jnp
mov
in
mov
cmp
cld
nop
cwde
frstor
jecxz
es
repnz
push
add
inc
add
mov
fidiv
in
jne
popf
in
sub
dec
loope
cmp
inc
mov
mov
push
retf
sar
rcr
aas
mov
jl
cmc
xor
mov
pop
inc
shl
pop
lea
lods
and
xchg
das
and
jg
cmp
in
cmc
aam
push
jl
inc
xor
or
call
stos
fisttp
popa
popf
push
cmp
jecxz
jnp
and
ds
outs
nop
xor
jns
mov
push
test
fdivr
dec
push
test
sub
pop
and
adc
das
sub
adc
in
jns
out
icebp
repnz
pop
xor
fdivr
inc
mov
lahf
and
cmp
popa
scas
stos
ret
push
jbe
iretw
cmc
xchg
and
and
leave
hlt
je
sbb
cmp
loopne
pop
push
inc
ret
pop
xchg
retf
hlt
xchg
or
dec
std
mov
(bad)
ror
inc
add
xor
push
inc
sub
scas
(bad)
enter
outs
xchg
shr
jl
cmp
sbb
enter
fs
adc
ins
jg
outs
pop
jg
adc
xchg
nop
xchg
sub
xchg
push
sbb
xchg
pop
sbb
int
pop
cwde
lea
loopne
imul
rcl
cwde
retf
int3
pop
repnz
jb
jno
in
rcl
rcr
ror
adc
add
test
dec
test
cmp
ds
sbb
adc
arpl
mov
jmp
or
in
repz
sbb
xor
ja
mov
cmp
hlt
mov
push
stos
cmp
or
cmp
jb
mov
(bad)
pop
int3
test
mov
int
cmp
aaa
xchg
mov
rcr
mov
shl
xor
les
jnp
sbb
movs
shr
loop
xchg
in
inc
sub
dec
outs
pop
add
xlat
jmp
sbb
push
dec
pop
mov
jbe
jns
data16
add
les
cli
adc
and
and
cmp
cmp
jb
jb
sbb
fldcw
test
adc
(bad)
pop
push
cmc
sti
shl
cmp
dec
cmpps
pushf
mov
or
in
hlt
int3
mov
inc
push
mov
or
test
ins
jbe
jnp
jp
push
pusha
or
mov
cld
iret
popa
push
gs
das
mov
mov
cmp
pop
test
sbb
push
push
and
fwait
stos
xchg
(bad)
xor
stos
and
arpl
shl
test
stc
xor
dec
test
(bad)
mov
sti
mov
fst
xchg
neg
inc
scas
inc
push
xor
adc
hlt
dec
scas
pop
call
sbb
jns
fs
xlat
rcr
test
sbb
pop
and
popf
mov
and
dec
or
jne
loope
aaa
sbb
je
push
rcl
xchg
cs
push
call
xchg
jae
push
or
mov
jae
mov
mov
fcom
or
add
add
push
sub
pop
jbe
ins
outs
movs
retf
sar
sahf
add
fcmovbe
sub
call
pushf
jae
mov
and
add
jmp
pop
cwde
iret
sbb
addr16
jle
jmp
imul
inc
push
lahf
test
retf
and
in
push
pop
mov
test
stos
sub
sub
std
vcvtpd2dq
or
aam
mov
fldcw
dec
icebp
movs
jb
jae
pop
pop
les
dec
out
icebp
cs
sbb
aaa
inc
mov
add
jae
cmp
scas
add
out
push
push
leave
xchg
add
popf
and
fist
sbb
add
ja
ss
dec
sub
cwde
xchg
mov
push
cwde
xor
rcr
or
lea
bound
sbb
iret
inc
inc
imul
xchg
iret
or
outs
add
adc
imul
xlat
loopne
adc
pop
cmc
jo
or
lahf
hlt
dec
pop
out
jmp
ror
jge
and
mov
or
sub
xor
scas
popf
sti
mov
in
test
ret
dec
popf
es
shl
pop
out
mov
dec
add
adc
mov
push
ret
es
push
fwait
shl
test
jns
adc
jmp
(bad)
jp
arpl
aad
jp
mov
adc
xchg
fwait
and
(bad)
shl
fsub
arpl
sti
out
inc
mov
sbb
mov
sbb
mov
sbb
push
nop
cwde
aam
or
iret
sub
scas
cmp
pop
jnp
or
cmp
sub
aas
mov
push
xor
push
pop
xor
sbb
adc
inc
add
je
jns
aaa
in
and
out
inc
(bad)
xor
xor
sbb
push
mov
test
xor
aad
movs
inc
sub
push
mov
add
inc
cmc
rcl
ret
cmp
xchg
xor
cmp
sbb
xchg
nop
mov
mov
inc
and
aam
push
ss
pushf
pop
or
clc
adc
popa
jge
fsub
or
clc
js
cld
cmp
enter
ret
or
pop
mov
pop
inc
push
repz
mov
stos
mov
out
push
and
push
(bad)
(bad)
in
xor
test
push
inc
jb
std
push
push
loop
push
je
(bad)
out
ss
mov
inc
or
inc
stos
inc
cld
test
dec
lds
fcomp
push
jne
and
xchg
cld
push
ror
pop
or
dec
mov
ficom
enter
mov
(bad)
leave
add
dec
jb
sbb
push
push
aaa
or
out
loop
test
jo
dec
dec
add
scas
dec
sahf
in
repz
mov
xchg
xchg
mul
sbb
pop
and
rcl
int3
and
fist
arpl
fild
es
pushf
sub
mov
xor
sbb
or
cmps
out
ret
lea
rcr
xor
xchg
mov
in
add
push
pop
or
pop
sub
cmps
clc
pop
cmps
rol
sub
popf
jp
dec
xchg
adc
aas
pushf
fcmovb
or
mov
ins
pop
lock
sbb
fnsave
jno
(bad)
jno
mov
scas
dec
cdq
or
int
pop
jbe
or
push
mov
pop
shr
fadd
cmp
pop
mov
mov
rcl
pop
push
xchg
cmp
(bad)
xchg
fnsave
inc
jecxz
jl
dec
adc
xor
retf
ins
cs
inc
lahf
push
mov
loopne
dec
cmp
cld
gs
loope
pop
sbb
outs
(bad)
ror
add
dec
aam
repz
shl
clc
or
out
mov
scas
lods
pop
in
rol
movs
pop
mov
aaa
push
mov
inc
xor
add
aas
pop
loopne
sbb
xor
mov
sbb
jmp
pop
add
call
jge
jmp
cwde
cmps
sub
clc
rcr
xor
dec
push
lds
sbb
retf
sbb
outs
cwde
inc
xor
adc
imul
push
rcl
or
jo
mov
fdivp
inc
lahf
ja
mov
lahf
(bad)
pop
or
jg
lds
mov
ss
jle
pop
mov
fmul
and
cmps
retf
cld
lods
clc
cmp
movs
xchg
pop
rcr
lods
stc
adc
ins
stc
xlat
fidivr
adc
sbb
icebp
retf
lahf
mov
push
scas
lds
inc
pop
mov
ret
mov
cmps
rol
xor
push
imul
retf
nop
inc
jno
pop
ins
jno
add
mov
pop
pop
es
pop
sbb
add
sbb
add
sbb
test
std
inc
jbe
aaa
push
mov
call
stos
sti
dec
jmp
pop
dec
popa
(bad)
stos
push
xor
arpl
cmp
jmp
jmp
mov
or
std
push
fdiv
fisubr
sub
cmps
imul
ficom
popf
jbe
call
lods
cmp
int
mov
sbb
fld
leave
movs
cmc
nop
and
add
xor
mov
cli
je
shl
std
dec
dec
sahf
jl
push
mov
push
sbb
jne
ror
pop
inc
neg
adc
enter
je
(bad)
dec
pushf
(bad)
pushf
ret
jmp
ror
imul
vsubpd
leave
xchg
fimul
getsec
int3
ins
mov
(bad)
xchg
mov
mov
scas
sub
repz
hlt
cli
jns
in
jo
iret
dec
sahf
jb
mov
push
test
cmp
call
push
lods
leave
xor
add
in
pop
mov
cmp
(bad)
int3
lea
adc
retf
add
popa
cmp
add
lds
cmp
cwde
aam
push
mov
test
adc
push
lods
and
mov
xchg
mov
data16
(bad)
inc
ja
jp
shl
out
or
xchg
stos
pop
in
popa
push
cmp
mov
mul
xchg
into
mov
aad
fldcw
dec
shl
nop
in
xor
(bad)
jmp
push
outs
fcomp
xor
cmp
xor
nop
cld
dec
jb
or
sbb
rcl
mov
mov
mov
inc
push
xchg
outs
sbb
(bad)
dec
sbb
mov
cmp
jg
call
nop
add
stos
or
mov
or
test
jb
call
sbb
fnstcw
sub
ror
adc
inc
je
in
mov
frstor
push
mov
std
outs
leave
sbb
clc
jge
push
call
mov
outs
mov
jo
out
xor
inc
ds
scas
ds
aaa
xor
and
retf
outs
ins
shr
xchg
mov
mul
jae
outs
sbb
add
call
cs
mov
pop
add
mov
sbb
inc
mov
imul
and
(bad)
test
or
mul
adc
(bad)
mov
ret
adc
inc
inc
out
cmp
cmp
lea
jl
cmp
inc
cmp
rcl
inc
jne
in
jmp
mov
aam
and
mov
push
cmps
std
inc
into
int
sti
(bad)
dec
call
fdiv
pop
test
sub
sub
test
and
in
fistp
or
jns
retf
sahf
out
push
js
movs
pop
fisub
push
add
sub
mov
ins
stos
jmp
mov
jmp
mov
add
xchg
test
mov
data16
sti
xchg
push
mov
popf
pop
cmp
xchg
or
lods
cmp
shr
int
and
pop
xchg
hlt
pop
and
call
lea
xchg
mov
xor
cmc
sti
sub
push
push
add
add
jae
(bad)
std
xchg
inc
mov
je
pop
lahf
push
arpl
jmp
in
jno
xor
jnp
nop
rcr
cmp
ins
xchg
cmp
xchg
sti
xor
loop
(bad)
outs
jmp
mov
add
neg
xchg
jno
mov
ja
jns
add
push
loop
adc
(bad)
lods
shl
std
into
mov
sbb
sub
int
int3
jae
(bad)
pop
dec
fsubr
fnstenv
ja
xrstors
int3
lea
aad
sbb
push
and
pop
int
push
scas
mov
fist
dec
push
idiv
sub
(bad)
call
xchg
cmp
xchg
not
mov
xchg
add
xchg
xor
push
rcr
lods
push
adc
push
mov
and
or
ret
sub
jno
dec
arpl
(bad)
sti
fwait
jmp
jae
lahf
adc
pop
mov
xor
cs
and
jl
jp
jg
xlat
(bad)
pop
iret
mov
sbb
or
adc
lds
loope
cmp
dec
mov
xchg
sub
test
mov
outs
mov
mov
stc
xchg
cmc
jge
mov
xlat
mov
arpl
and
nop
or
daa
enter
cmp
cld
lods
sbb
dec
or
(bad)
jmp
es
mov
mov
xchg
(bad)
(bad)
icebp
bound
or
jp
jns
loop
(bad)
xchg
xchg
dec
not
rcl
es
(bad)
jb
in
aam
and
fild
stos
push
cs
cs
mov
call
lods
mov
jo
nop
popa
das
lahf
mov
add
fs
es
sub
aas
test
in
inc
hlt
pop
daa
pushf
push
(bad)
in
dec
pop
mov
pop
sbb
int3
jmp
addr16
lds
bound
xchg
inc
xchg
mov
and
pop
jp
in
jge
arpl
scas
xlat
ds
fnstsw
cmp
xchg
jbe
dec
fisttp
(bad)
outs
jne
in
retf
push
or
mov
mov
pop
in
pop
(bad)
jg
inc
xchg
retf
push
bswap
mov
inc
jg
movs
cli
ins
mov
jne
add
(bad)
mov
je
inc
mov
xchg
adc
jnp
lds
mov
xchg
jns
xchg
or
(bad)
or
in
pop
sbb
pop
and
mov
int
mov
movs
daa
mov
mov
not
sbb
and
out
dec
retf
fsub
mov
fmul
jnp
jbe
sbb
sub
ins
movs
pusha
test
mov
xor
push
call
sbb
outs
dec
push
dec
pop
ret
jns
add
mov
leave
push
rcr
and
repnz
ret
add
stc
xor
adc
fmul
cmc
shr
test
pop
std
test
(bad)
shl
scas
cmp
fidivr
xchg
lods
lds
xor
jno
sbb
pop
(bad)
pop
mov
(bad)
es
pop
fsub
(bad)
(bad)
out
mov
push
ret
lods
das
test
(bad)
pusha
(bad)
(bad)
jmp
mov
aas
adc
mov
lahf
iret
jmp
sahf
add
mov
scas
add
dec
jmp
jmp
retf
mov
pop
mov
cmp
push
or
loopne
nop
mov
loop
and
test
out
repz
jecxz
lock
lods
jmp
mov
bound
cli
xor
xchg
mov
loopne
das
mov
push
stos
and
adc
jg
shl
xor
push
out
xchg
dec
and
in
push
xchg
inc
add
out
add
pop
mov
fwait
scas
out
bound
cmps
in
xor
jo
sbb
cli
pop
lods
cmps
ret
lahf
or
jns
add
hlt
(bad)
cdq
popa
or
test
in
cs
inc
sub
(bad)
cmp
adc
sub
xchg
int
mov
in
bnd
mov
or
xchg
jg
dec
ficomp
dec
es
imul
sub
push
icebp
mov
inc
ss
data16
dec
mov
jnp
mov
add
int3
mov
fbstp
(bad)
sbb
cmp
push
mov
inc
inc
shl
add
imul
lods
les
mov
repnz
test
inc
push
leave
out
xchg
push
mov
or
(bad)
idiv
popa
pop
jg
lahf
pop
out
aam
and
jnp
ror
dec
adc
sbb
xchg
or
dec
ss
jmp
sub
sbb
xchg
loopne
mov
js
inc
xchg
sub
gs
pop
bound
add
ret
mov
cmc
in
mov
lock
inc
mov
dec
inc
push
xchg
into
sub
ins
aas
outs
jg
sub
or
jecxz
movs
enter
pop
mov
sbb
mov
ret
mov
ret
cmp
retf
clc
aam
inc
cld
iret
(bad)
xchg
xor
lock
push
cmp
push
add
icebp
xchg
stos
xchg
or
add
test
or
fucomp
repnz
shl
jne
inc
inc
dec
xor
cmp
loop
xchg
push
addr16
dec
dec
stos
pop
loop
scas
bound
push
pop
dec
and
retf
cmp
push
sub
cmp
call
adc
(bad)
push
dec
popf
bound
shl
std
mov
enter
popa
cwde
mov
add
push
push
stos
mov
call
js
cld
aad
inc
jge
pop
fidivr
adc
stos
aad
or
xor
sbb
(bad)
cmp
mov
clc
outs
test
jae
jl
push
sub
jns
mov
mov
cmp
shl
mov
sbb
ret
push
xchg
push
ins
idiv
leave
sub
test
mov
jmp
das
out
xlat
clc
dec
xor
and
and
jp
es
mov
cmps
sbb
lods
xchg
mov
ret
lds
mov
jge
(bad)
shr
cmp
into
ret
inc
daa
scas
mov
mov
fist
cmp
(bad)
out
xchg
jns
fwait
cmps
inc
pop
xor
mov
xchg
(bad)
fmul
sbb
sub
loopne
out
adc
or
cmp
mov
xchg
push
add
dec
add
retf
mov
inc
sub
mov
imul
cmc
xor
iret
jno
push
and
jmp
cli
mov
ror
xchg
shl
add
scas
add
sahf
jg
adc
and
cwde
sti
or
adc
dec
stos
into
lahf
inc
jbe
ficomp
fist
adc
popf
aad
out
push
xor
add
stos
mov
adc
cmc
dec
movs
ins
jg
out
jecxz
lea
inc
sbb
xchg
cmps
in
ret
ret
rcr
dec
cmc
xchg
and
push
data16
cld
je
lds
lods
mov
neg
int
push
mov
mov
mov
ins
les
test
sahf
inc
fnstenv
inc
icebp
cli
iret
je
cmps
or
fld
push
or
push
daa
jge
mul
ja
push
sbb
ret
fisttp
jo
add
sti
inc
xchg
xlat
cmp
fsubr
test
sar
jle
js
fwait
out
add
fnstcw
(bad)
aas
pushf
test
nop
daa
outs
mov
or
add
enter
xor
std
bnd
pop
call
pop
cmps
dec
xchg
mov
sub
test
sub
jl
sub
dec
out
jae
cmps
addr16
or
test
(bad)
push
mov
imul
push
fsubr
mov
mov
test
jne
pop
jae
rol
adc
mov
pop
push
or
jo
jns
aas
jg
jecxz
stos
(bad)
jae
call
stos
mov
jbe
mov
retf
mul
dec
cs
dec
mul
imul
pop
adc
bound
movs
xchg
bound
aam
mov
push
adc
pop
dec
sbb
nop
pop
and
cwde
mov
fldcw
imul
loop
out
cmp
sbb
(bad)
sub
(bad)
icebp
add
and
les
lods
fisubr
add
bound
and
or
loopne
jne
dec
jle
sbb
xor
pop
cwde
jo
nop
sub
stos
dec
in
push
pusha
mul
nop
xchg
repnz
in
or
ret
pop
push
mov
push
loope
xor
in
jo
push
(bad)
bound
add
nop
pop
(bad)
stos
push
mov
jl
xchg
(bad)
int3
mov
inc
xchg
push
xchg
push
jle
in
push
out
mov
adc
sbb
pop
in
push
fcomp
ret
sbb
dec
scas
and
cmp
fst
mov
fwait
push
sub
cmps
push
push
cmp
ins
stos
push
out
outs
out
push
not
cdq
sti
div
lea
adc
imul
addr16
scas
ror
scas
xor
or
adc
out
sbb
cmp
or
sub
mov
lea
or
(bad)
std
pusha
xor
rcl
lock
jbe
addr16
stc
stos
xchg
fldcw
or
push
int3
add
inc
cmp
je
sbb
fnsave
pop
mov
mov
xchg
rol
je
add
sub
fbstp
(bad)
icebp
mov
mov
fsub
jae
or
mov
cmp
inc
sbb
iret
pop
lock
pushf
loope
cli
pop
inc
shl
jae
jle
fisttp
sbb
dec
jp
mov
cli
out
jmp
loope
sub
pop
jmp
and
fimul
adc
push
sbb
ss
and
out
jmp
jnp
lods
outs
mov
pop
pop
neg
push
ins
pop
aad
ins
mov
mov
xchg
and
ss
data16
dec
out
es
dec
or
sbb
rcr
(bad)
je
xchg
mov
rol
mov
add
jnp
repnz
cmp
adc
sahf
movs
pmulhuw
and
xlat
rol
xchg
aas
inc
out
das
clc
and
sbb
jb
lfs
stc
jmp
pop
add
jmp
scas
pusha
jge
aas
cmps
pop
movs
mov
pop
movs
sub
mov
outs
sub
sbb
mov
push
repz
es
(bad)
and
xor
scas
div
xlat
and
loop
cmp
pop
jb
inc
xchg
mov
fchs
mov
push
test
sbb
rcl
and
push
push
scas
test
mov
sahf
mov
lods
pop
test
pushf
cld
aam
cdq
scas
jmp
mov
cwde
outs
hlt
mov
add
jb
scas
dec
xor
add
mov
xchg
mov
push
les
dec
rcr
sar
push
inc
or
cdq
push
pop
daa
(bad)
outs
ror
ret
das
pop
cld
mov
fs
jmp
aas
sbb
push
inc
mov
(bad)
or
push
outs
pop
dec
imul
xchg
or
mov
out
popf
scas
icebp
aam
and
xchg
clc
sub
add
mov
inc
es
jae
mov
mov
adc
mov
stc
cmc
in
sub
repz
ja
fs
stc
adc
sar
cmc
sahf
xor
cmp
out
pop
ins
dec
mov
dec
stos
cwde
sub
pop
(bad)
pop
mov
cmp
sub
test
lahf
in
out
xor
inc
out
jne
push
push
xor
(bad)
push
inc
mov
cmp
mov
and
test
stos
icebp
dec
bound
jp
sbb
mov
mov
fdivr
scas
dec
push
retf
and
push
mov
dec
xor
sti
fisttp
inc
sbb
jo
push
pusha
mov
push
mov
push
inc
mov
retf
jae
jo
repnz
cli
in
push
sti
mov
add
outs
push
push
cmp
xchg
cmps
adc
push
dec
movs
neg
xor
cmp
jmp
ret
aam
fcmovu
pop
hlt
fcom
mov
outs
cld
xor
and
movs
clc
sbb
mov
mov
adc
add
ss
jecxz
or
nop
aas
bound
push
push
leave
mov
and
xor
cmp
aam
add
rcl
and
ret
dec
mov
jns
bnd
std
aaa
lods
adc
inc
hlt
xchg
adc
call
ins
xor
xor
outs
cmp
ret
jbe
clc
mov
cs
dec
sbb
fimul
nop
fst
add
stos
jbe
fisttp
jne
retf
fbld
jbe
jae
sbb
adc
add
mov
leave
push
outs
std
mov
outs
ins
(bad)
pop
jb
sub
movs
ret
cmp
jge
pop
mov
test
push
cmp
test
pop
mov
loopne
mov
xchg
push
jle
ins
loopne
jb
adc
call
jg
jmp
dec
hlt
sbb
jno
imul
inc
pop
pop
mov
call
out
ins
inc
jbe
js
push
popa
push
fist
mov
inc
test
adc
stc
jns
aad
iret
jg
push
fcom
sti
inc
fmul
sbb
push
mov
dec
in
cdq
mov
jnp
xlat
add
(bad)
retf
mov
nop
inc
ja
mov
xor
sbb
or
outs
data16
mov
div
daa
(bad)
and
mov
cmc
or
loope
xor
xchg
sahf
jnp
cmp
inc
cmp
dec
js
jb
neg
loop
gs
dec
and
push
rcl
jl
xor
ds
pop
jp
adc
mov
jp
clc
push
fcmovnu
outs
(bad)
sbb
shl
dec
adc
mov
mov
out
add
inc
lahf
jg
mov
or
pop
sbb
pop
das
jge
stos
xchg
fisubr
enter
leave
mov
inc
cmps
js
jg
pop
pushf
(bad)
cs
xor
xchg
jns
gs
mov
call
xchg
mov
outs
mov
or
cmps
xchg
rcr
fstp
setg
imul
out
mov
and
in
mov
dec
pop
add
mov
mov
sub
gs
dec
lea
xor
rcl
adc
iret
cmp
jno
xchg
mov
xchg
xchg
shr
ret
shl
cmp
mov
add
loope
ret
clc
mov
leave
push
mov
cwde
xchg
mov
(bad)
and
cmp
fucom
dec
push
into
pop
clc
daa
mov
in
cmc
push
(bad)
leave
pop
nop
dec
dec
mov
mov
sub
not
push
fldcw
pop
mov
out
jae
daa
(bad)
inc
sbb
mul
pusha
push
lds
aas
mov
and
in
clc
or
mov
cmp
and
gs
repnz
rcr
inc
xor
lods
pop
rcr
outs
jp
dec
pushf
icebp
jns
dec
adc
lahf
mov
mov
cmp
stos
pop
(bad)
call
ret
xchg
mov
jl
fs
into
mov
std
pusha
jecxz
xchg
iret
mov
out
cmp
(bad)
jne
add
shr
stc
jne
xchg
add
ficomp
sub
dec
ins
fs
fs
aad
test
test
ds
or
sbb
cmp
rcl
pop
es
lock
jmp
in
nop
xchg
xor
push
loope
xor
retf
out
outs
pop
and
movs
and
or
sbb
mov
mov
mov
sub
jle
mov
push
push
fistp
ret
rol
enter
cmp
xor
stos
xchg
xchg
nop
cmp
pop
fmul
daa
jae
mov
xor
mov
pop
jns
xchg
lea
fsubr
push
pop
gs
pop
add
jecxz
dec
retf
shrd
hlt
lock
adc
mov
sbb
sbb
cwde
and
mov
xor
movs
ja
mov
daa
setge
jle
sar
xsha256
cmps
pop
push
inc
rcl
(bad)
mov
sahf
frstor
xor
hlt
push
imul
pop
dec
add
push
jnp
cmove
mov
adc
jmp
call
mov
mov
pop
pop
push
test
lds
jp
or
mov
gs
adc
fisubr
int3
(bad)
mov
and
imul
mov
inc
leave
sbb
xchg
mov
pop
pop
popa
push
xchg
icebp
jecxz
xchg
jns
xchg
dec
ja
je
repnz
in
aas
cmp
pop
xchg
imul
aad
in
lock
fwait
jl
xchg
test
mov
jmp
jmp
pop
pusha
test
ror
js
mov
in
(bad)
jb
jo
dec
leave
jmp
pop
jno
jno
xor
pop
not
and
jecxz
xchg
ficomp
push
loop
imul
xchg
jbe
bound
les
das
sub
fild
dec
bsf
clc
aad
lds
pop
out
rcr
jne
pop
xor
sbb
out
js
sub
mov
icebp
jnp
cmp
aas
or
dec
dec
jle
cld
and
movs
sbb
mov
xchg
pop
addr16
mov
and
xchg
and
mov
dec
ret
cmp
pushf
mov
push
cdq
cmp
xor
mov
stos
sub
(bad)
jae
ins
lods
and
xor
xchg
pop
pop
fistp
fidiv
cmp
out
jmp
mov
in
or
pop
arpl
sub
es
xchg
inc
xchg
sub
push
xor
sbb
cmp
aad
pop
fisubr
pop
pop
mov
fimul
cmp
mov
fild
push
lock
ja
push
mov
(bad)
sbb
xchg
cwde
add
push
push
enter
stos
cmps
sub
test
inc
pushf
jae
xor
stos
lea
ins
mov
cmc
jnp
push
mov
push
sar
out
fxch
lock
fimul
nop
fwait
mov
mov
push
xor
repz
pushf
adc
mov
jg
das
cli
rcr
imul
dec
adc
cmps
mov
int3
or
sti
aad
mov
cmp
scas
push
dec
cld
shl
inc
pushf
inc
push
lock
mov
adc
je
sbb
add
fscale
test
out
dec
xlat
mov
push
jns
sbb
pop
adc
add
cmps
test
ins
jge
jne
mov
sub
dec
cmp
and
add
fwait
adc
(bad)
ds
(bad)
push
call
stc
dec
jne
movs
sub
test
ja
inc
jns
jb
in
dec
push
vpsadbw
jnp
jbe
mov
test
add
loopne
jmp
inc
outs
mov
pop
sbb
stc
loope
xchg
movs
add
push
cmp
ficomp
sbb
push
cli
cmp
push
inc
out
dec
idiv
lock
jae
cdq
jmp
xchg
xor
outs
inc
les
adc
add
data16
mov
mov
icebp
dec
xchg
adc
pop
out
jl
xchg
test
(bad)
mov
inc
jl
js
adc
retf
inc
mov
dec
cwde
adc
push
arpl
aam
fmul
jb
mov
ficomp
push
fdiv
add
pop
mov
dec
jg
in
xor
and
push
add
test
adc
retf
fdivrp
mov
(bad)
xlat
push
lds
push
out
adc
inc
lock
imul
ins
pusha
out
mov
ret
pop
sbb
and
inc
pop
jns
mov
or
cmp
dec
loop
jmp
adc
xor
or
push
call
pop
sbb
jp
aam
push
aas
rol
xchg
clc
jmp
mov
xor
(bad)
xchg
pop
sub
adc
xor
pop
fstp
sub
int
cmp
push
(bad)
fadd
pop
stc
movs
xor
sbb
jae
inc
fs
add
jecxz
mov
mov
stos
jno
mov
loope
inc
mov
dec
add
mov
loopne
test
dec
adc
aad
dec
inc
inc
lods
(bad)
out
js
shl
sub
push
ficomp
(bad)
xchg
std
aam
jmp
cli
pop
jmp
xchg
inc
cwde
pop
sbb
or
popa
in
fldenv
pop
daa
jne
test
fwait
sub
jl
mov
jmp
sbb
mov
out
div
mov
sub
adc
add
sub
xchg
imul
outs
pushf
jnp
and
or
pop
arpl
cdq
xor
adc
lds
lea
(bad)
(bad)
nop
mov
jnp
lods
pop
retf
bound
cli
inc
lods
cwde
jbe
inc
jne
pop
jle
mov
jb
sub
cmp
sar
lea
mov
test
leave
push
dec
cli
xor
xlat
psubsw
sub
test
sbb
xor
xor
fld
jnp
mov
lock
adc
lea
adc
sub
pop
adc
pop
push
jmp
in
arpl
aas
aaa
cld
clc
jmp
sbb
in
ret
cmp
aas
(bad)
xlat
shr
mov
imul
pop
jbe
add
(bad)
xacquire
xor
xor
push
dec
ss
mov
pop
fs
in
pop
ins
cld
mov
aad
(bad)
std
in
sub
push
jns
push
scas
ret
pop
and
aam
popf
mov
inc
jge
mov
sahf
sbb
pop
and
inc
sub
les
adc
outs
fstp
cmps
fdivr
js
shr
adc
nop
movs
inc
fild
clc
call
pop
sbb
pop
push
or
inc
sbb
pop
int3
dec
inc
mov
mov
sbb
mov
ret
mov
adc
fistp
dec
retf
mov
pop
lock
in
stos
sbb
adc
and
jl
loopne
mov
mov
cld
iret
dec
rol
pushf
push
loop
pop
iret
push
xor
icebp
mov
sbb
fldenv
rep
retf
and
inc
leave
xor
int
cmp
jp
push
repnz
inc
dec
pop
jge
xlat
(bad)
inc
addr16
sbb
jmp
xchg
shr
pop
clc
sar
call
cwde
movs
sti
xor
div
cmp
sbb
inc
mov
push
sahf
jae
xlat
push
jge
mov
lods
aaa
inc
inc
ja
(bad)
pop
scas
push
add
add
mov
lahf
lods
pop
es
jno
loopne
daa
mov
(bad)
mov
sar
sti
cld
sbb
xchg
and
in
es
retfw
cs
push
pusha
jbe
mov
or
in
push
cs
inc
pop
icebp
push
imul
or
pop
mov
and
push
loopne
jp
xlat
and
mov
lds
pop
sbb
sub
out
jle
mov
and
jnp
iret
xor
jg
icebp
out
(bad)
clc
cmc
cmp
inc
or
sbb
es
lock
int
jns
test
mov
adc
ins
push
mov
(bad)
sub
add
push
je
arpl
xchg
adc
icebp
daa
pop
outs
pop
mov
lods
mov
aaa
bound
xor
in
add
xor
pop
push
ds
fwait
popa
ret
leave
cld
mov
pop
or
enter
mov
and
xchg
inc
outs
bound
inc
inc
add
lods
mov
call
jg
xchg
mov
fdivr
fidiv
xlat
sbb
add
mov
nop
inc
cld
and
sbb
adc
xor
sbb
call
sbb
adc
adc
sub
cmps
out
lahf
ss
sahf
and
test
das
pushf
iret
mov
es
sub
sbb
xchg
jmp
add
fs
out
sbb
outs
pop
fmul
cmps
xchg
pop
cmps
test
stc
and
icebp
mov
or
mov
outs
out
xor
mov
mov
dec
adc
scas
pop
pushf
leave
push
xor
sbb
mov
xor
pop
cmps
xor
pop
cli
in
sahf
stos
mov
loopne
pop
add
mov
pop
adc
lahf
fstp
or
xchg
cmc
movs
bound
and
or
fisub
mov
pop
lods
out
push
ins
cmc
adc
xchg
mov
nop
jb
pop
xor
push
jl
popf
adc
add
aad
sub
mov
cmp
out
enter
ds
ja
addr16
adc
pop
lods
in
adc
jmp
push
pop
cli
and
repz
adc
das
push
adc
lds
push
adc
push
sub
pop
jbe
and
das
repnz
inc
out
jle
mov
into
xlat
sub
and
sub
loope
push
jmp
dec
add
or
inc
arpl
mov
jne
pop
cwde
inc
outs
pop
cmps
push
cmp
shl
sub
or
sti
mov
mov
popf
xchg
mov
lods
ds
adc
sbb
jmp
and
fstp
dec
arpl
jmp
daa
or
out
inc
iret
or
sub
test
gs
jecxz
mov
dec
cs
mov
out
pop
inc
mov
and
add
loop
shl
daa
es
dec
je
mul
lods
mov
pop
icebp
mov
retf
ins
mov
or
cmp
mov
leave
push
fcom
rcl
(bad)
mov
adc
jmp
scas
jle
stc
lods
popa
mov
pusha
je
hlt
mov
sbb
or
pop
mov
shr
push
pop
jmp
adc
xor
int3
fnstenv
mov
add
sbb
push
fwait
shl
mov
ja
fstp
inc
mov
pop
push
push
cmps
push
mov
das
inc
push
call
in
xor
cld
pop
mov
ror
outs
sar
push
mov
inc
mov
xchg
and
dec
xor
xchg
mov
fisttp
popf
(bad)
cdq
ins
xchg
les
mov
imul
cs
pop
scas
cs
stc
add
pop
ins
scas
sbb
aad
nop
es
rcl
imul
mov
fisubr
inc
jle
adc
(bad)
lock
inc
arpl
jne
cli
xchg
pop
stos
out
ins
outs
inc
xchg
mov
mov
xchg
cld
aaa
mov
mov
or
jo
sub
pop
lock
sub
imul
cmp
inc
cmp
and
mov
pop
sbb
mov
add
and
sub
ja
adc
(bad)
fst
adc
and
xchg
push
test
test
jnp
mov
stos
push
shl
(bad)
xchg
dec
or
xchg
mov
cwde
hlt
data16
and
test
xor
or
mov
mov
jno
(bad)
aad
out
mov
pop
xchg
je
push
dec
pop
jge
or
or
ss
sub
push
loopne
inc
mov
xchg
fsub
test
mov
cmp
cmp
jl
sub
or
mov
pusha
xor
cwde
push
jbe
dec
cmp
aam
scas
ret
int3
or
fwait
inc
cmp
xchg
ins
stc
jmp
and
ds
dec
dec
popf
xchg
sbb
clc
xchg
sbb
gs
pop
push
fmul
jno
sbb
mov
repz
sbb
outs
dec
lock
in
test
div
sbb
fadd
pop
lea
in
mov
fiadd
loop
(bad)
adc
aad
sbb
cmp
out
add
icebp
push
adc
mov
pop
pop
mov
scas
js
ds
mov
(bad)
sbb
or
call
jg
pop
cmp
or
or
pop
dec
add
jo
mov
push
mov
push
jnp
adc
fwait
lea
(bad)
mov
leave
in
pop
or
dec
addr16
cmc
ds
mov
imul
fist
sbb
arpl
jl
imul
setno
xchg
loopne
(bad)
sub
sbb
into
xlat
mov
push
xchg
sub
and
leave
and
jns
or
movs
into
mov
add
rcr
mov
ret
mov
sbb
jmp
mov
in
rcl
mov
call
or
or
faddp
pop
pop
pop
inc
inc
fbld
movs
adc
or
gs
fdivr
push
xchg
push
cmp
mov
movs
aam
jecxz
aas
rcl
cli
out
mov
push
inc
lahf
inc
frstor
mov
fidivr
adc
mov
popa
lock
mov
push
and
cdq
adc
into
ret
mov
dec
fcom
and
inc
xchg
or
rcr
ja
push
mov
add
icebp
inc
push
inc
mov
mov
push
mov
jmp
fmul
lock
mov
mov
mov
cdq
repnz
add
sub
pusha
mov
hlt
scas
dec
adc
lods
out
shr
mov
call
movs
loope
ins
ss
cld
ss
lods
jbe
xlat
mov
cwde
and
lods
clc
cmps
mov
in
add
xchg
ins
popa
dec
nop
mov
xchg
xor
push
pop
inc
into
pop
dec
adc
inc
out
aaa
loop
fsubr
outs
jge
cs
mov
lds
cmps
sbb
mov
mov
addr16
mov
fwait
mov
popa
pop
xor
push
mov
dec
dec
pop
std
jecxz
push
out
push
mov
xchg
or
les
jecxz
cmps
scas
push
add
dec
sahf
adc
cmp
neg
ret
push
mov
test
movs
dec
pop
sar
call
(bad)
mov
push
inc
inc
ins
sar
stc
mov
loope
mov
pop
imul
daa
adc
jmp
jmp
add
push
(bad)
clc
ret
das
and
cmp
jb
sbb
mov
int3
xor
rol
std
bound
adc
dec
push
test
xchg
add
rcl
fisttp
fld
sbb
inc
movs
cld
rcl
sbb
sub
mov
dec
mov
jge
jge
xchg
cmp
outs
pushf
stos
mov
mov
push
mov
adc
dec
out
or
xor
aad
push
pop
cdq
mov
sub
fsubr
cdq
xor
jnp
or
dec
jnp
inc
clc
pusha
push
mov
out
fisttp
cmp
push
inc
push
loop
repz
dec
scas
and
push
repz
xchg
mov
xchg
pop
lock
and
and
js
daa
imul
movs
adc
cwde
cmp
xchg
dec
lock
outs
inc
mov
inc
mov
into
imul
or
cmp
xchg
push
std
ds
push
push
mov
(bad)
das
ret
(bad)
pop
adc
and
dec
mov
pop
cli
popa
sbb
or
adc
mov
int3
mov
cwde
xrstors
call
movs
enter
add
mov
scas
iret
or
gs
sbb
or
mov
jbe
dec
xor
shl
xchg
dec
mov
sub
or
cwde
and
xchg
sbb
mov
sub
imul
push
enter
push
icebp
cmp
jne
sub
inc
or
fnstcw
and
xor
iret
cmp
adc
push
xchg
xchg
adc
dec
ret
cmps
std
mov
sub
pop
rol
je
sahf
dec
xor
test
aaa
test
mov
cdq
dec
push
mov
push
and
lock
das
sub
ficom
(bad)
push
add
pop
scas
fwait
mov
cmp
popf
int
movs
sbb
repnz
sbb
out
sbb
das
lahf
out
fwait
mov
data16
jne
in
pop
sti
cli
mov
sub
sti
std
and
stc
idiv
loop
shl
xor
jle
adc
aas
mov
or
ret
clc
scas
add
inc
fidiv
push
movs
test
mov
mov
in
or
xchg
nop
sbb
pop
fadd
icebp
hlt
cwde
inc
cmp
stc
jl
xor
or
fadd
pusha
shl
push
loope
mov
test
and
dec
jb
fistp
std
mov
out
jg
in
retf
test
out
sahf
jmp
test
sub
cmp
mov
bound
in
frstpm(287
mov
push
in
scas
push
xchg
fsub
xor
icebp
lea
xchg
rcl
sub
add
mov
inc
cdq
or
div
pop
jmp
aaa
lahf
cmp
dec
push
gs
jns
xchg
leave
xchg
or
xchg
push
sbb
mov
mov
mov
ins
pop
test
mov
jns
mov
sub
in
call
call
stos
movs
jmp
in
pop
ja
sbb
test
retf
in
fldcw
lods
xor
or
arpl
and
sub
pop
inc
dec
es
push
mov
loopne
xor
xchg
sbb
mov
imul
and
loopne
ss
sub
xchg
and
es
push
mov
jb
ds
fdiv
iret
das
into
jbe
int3
(bad)
mov
sbb
cdq
nop
push
pop
ret
lods
pop
hlt
mov
enter
adc
mov
jb
dec
sbb
jbe
cdq
pop
sub
jmp
fcomi
push
addr16
jnp
mov
dec
ret
push
inc
inc
add
ror
adc
jnp
dec
mov
push
loopne
sub
pop
daa
xchg
pop
pushf
jp
aad
xchg
fist
fwait
dec
push
or
mov
and
icebp
dec
loope
dec
mov
pop
xor
mov
lods
adc
jno
les
fidiv
or
push
push
stos
or
and
rol
test
lahf
dec
mov
push
ret
scas
sbb
add
repz
xchg
push
dec
in
inc
test
in
arpl
mov
sub
je
mov
test
mov
lea
jmp
sbb
outs
out
in
(bad)
out
add
sti
out
mov
mov
push
dec
pushf
adc
cmp
lea
cmp
xor
mov
(bad)
call
iret
fidiv
and
and
ret
sbb
adc
jl
inc
add
cmp
data16
sbb
je
or
mov
jmp
sub
test
or
sub
scas
mov
mov
jg
imul
imul
jp
jge
mov
add
cmps
stc
mov
xlat
ror
adc
bnd
adc
xchg
pop
test
mov
call
and
mov
jne
repnz
cmp
jecxz
dec
jne
xor
mov
repnz
inc
scas
stos
cwde
push
icebp
mov
gs
jmp
inc
push
push
sbb
shr
or
scas
add
idiv
dec
or
fisub
outs
xlat
sbb
sbb
(bad)
mov
test
xchg
jb
dec
xor
inc
inc
icebp
test
sub
mov
sbb
xor
sub
pusha
pushf
retf
icebp
inc
ja
inc
and
imul
jnp
dec
pop
fdiv
nop
retf
push
fimul
xchg
(bad)
sbb
arpl
call
adc
push
xchg
ins
loope
dec
push
sub
xchg
mov
jp
scas
fnstcw
cmp
out
mov
aaa
or
fwait
into
lods
jle
inc
jp
xchg
and
and
inc
cmp
loopne
cwde
cs
lods
jge
es
xchg
mov
(bad)
mov
sub
sub
lock
sub
out
mov
mov
cmp
test
jne
or
movs
jns
jnp
fwait
add
add
sar
sub
sub
int3
mov
inc
movs
fcmovnbe
jle
(bad)
inc
mov
adc
out
sub
jmp
fdiv
in
jnp
pop
out
out
add
pop
jp
jno
shr
adc
dec
fist
das
int
pop
or
ins
mov
test
jno
in
adc
addr16
cwde
stos
mov
rcr
retf
repz
adc
mov
les
shr
mov
xor
cld
mov
and
or
pop
push
ds
adc
jmp
ret
test
pop
inc
push
inc
in
cdq
jl
jnp
stc
inc
pop
ja
pop
adc
cmp
and
in
push
lahf
sub
aaa
or
sub
lods
pop
add
(bad)
sbb
sar
fstp
add
jbe
popa
shl
xor
jno
call
dec
dec
adc
fld
jecxz
bnd
lea
ss
jmp
adc
in
add
xchg
stos
add
test
or
in
movs
dec
mov
out
mov
push
mov
mov
into
popa
cmp
repz
int3
jmp
test
sbb
jne
aam
fsub
or
out
fild
xchg
jecxz
outs
xchg
adc
(bad)
rcr
push
pop
sub
or
fmul
xchg
sahf
pop
retf
jp
mov
jno
clc
push
(bad)
fcmovb
and
add
inc
dec
cs
pop
pop
(bad)
outs
les
sub
jl
mov
fs
push
xchg
ds
retf
imul
cld
rol
mov
aas
(bad)
daa
jno
cmp
outs
mov
outs
pop
xchg
imul
addr16
in
mov
fdiv
loope
xchg
retf
push
dec
dec
js
loope
mov
pusha
mov
in
sub
sahf
push
test
into
sbb
push
movs
mov
fs
adc
dec
add
xor
stos
rol
(bad)
sbb
jg
xor
cli
aam
xchg
and
add
inc
adc
mov
scas
hlt
icebp
lock
in
sbb
test
mov
xlat
push
or
jbe
into
pop
jno
mov
mov
fdivr
pop
shl
(bad)
sub
add
loope
add
cmp
push
enter
dec
addr16
(bad)
push
xor
scas
nop
rol
dec
xchg
mov
loope
pop
clc
xlat
pop
dec
push
pop
popa
nop
cmp
addr16
cmp
or
sbb
dec
call
push
cmp
mov
mov
mov
cmp
popa
sub
fstp
in
xchg
mov
inc
(bad)
(bad)
clc
aam
jno
ret
retf
sub
scas
mov
xlat
or
mov
jmp
loop
inc
stos
rol
dec
mov
adc
xchg
cdq
jns
mov
push
aaa
ds
jo
cmp
imul
mov
fisub
call
out
lahf
jg
lds
sub
test
rol
or
inc
stos
mov
test
in
clc
shl
cmps
ins
std
xchg
push
mov
in
xchg
inc
es
mov
movs
xchg
mov
sub
mov
int3
xchg
mov
in
mov
ret
cdq
fistp
int
jle
jo
mov
cmp
push
adc
jb
dec
mov
cmp
aam
pop
std
iret
ja
push
jae
mov
(bad)
dec
arpl
and
jp
add
or
push
jae
iret
or
jge
sbb
mov
(bad)
fld
ja
jno
sbb
cmps
inc
xor
hlt
popa
and
jb
mov
enter
dec
dec
sub
out
(bad)
dec
or
js
jmp
xor
test
repnz
into
cmc
sbb
mov
or
pop
jbe
and
gs
dec
and
push
test
pop
sbb
push
or
pop
and
push
or
int
adc
sbb
mov
dec
test
leave
push
repz
sar
les
mov
cmp
test
add
in
mov
cmp
mov
jg
outs
jl
push
inc
in
sti
pushf
cld
js
lods
sub
ss
hlt
jns
xchg
jmp
adc
outs
mov
fcomp
push
xchg
xor
add
ss
xor
(bad)
inc
mov
pushf
out
xchg
dec
mov
movs
ja
xor
push
mov
movs
out
inc
or
push
cmp
fbld
add
das
mov
mov
outs
bswap
adc
mov
xor
leave
movs
lods
int3
push
inc
and
pop
popf
fidiv
cs
out
ins
sub
cmp
lds
sbb
push
movs
mov
jne
adc
inc
push
mov
dec
and
stos
cmps
repnz
out
cld
(bad)
fsub
jno
sbb
pop
cli
in
push
push
sbb
or
dec
outs
ja
add
popf
and
xlat
ja
je
pop
fmul
push
xchg
adc
cmps
push
sbb
clc
pop
fninit
es
cmp
jae
outs
fmul
mov
mov
inc
push
lea
out
or
push
xchg
icebp
xor
jno
mov
nop
loope
adc
arpl
retf
jno
fwait
clc
sbb
and
cmps
xchg
cmp
ins
cmps
adc
addr16
retf
pop
mov
sbb
jno
(bad)
cmp
mov
retf
aaa
mov
sbb
dec
pop
jns
pop
daa
and
jecxz
adc
mov
inc
ins
and
ret
add
add
lods
aas
xor
cmp
mov
inc
dec
mov
xor
emms
sbb
xchg
pop
dec
pop
cmp
jl
into
adc
pop
fsubr
(bad)
xchg
fdivrp
push
xchg
push
das
ror
or
cld
and
pop
pop
sbb
mov
popa
mov
cmps
call
test
push
dec
lds
fiadd
or
sbb
lahf
xor
and
xor
inc
push
and
add
test
in
jecxz
stc
mov
mov
fwait
and
or
mov
add
jno
movs
pop
lods
dec
or
pop
push
test
push
or
jmp
push
ret
fwait
popf
rcr
fcmovbe
mov
push
inc
call
jl
jp
xchg
fisttp
jae
test
sub
cs
scas
movs
inc
adc
jo
jle
sbb
stc
mov
xor
push
push
push
inc
dec
adc
fcomp
out
in
popa
jnp
add
test
call
test
nop
mov
jbe
out
das
dec
hlt
out
sbb
test
out
lea
jmp
aaa
and
call
or
scas
jg
cmps
and
lock
into
in
inc
test
rol
pop
push
fist
cmp
xlat
or
cmc
into
xor
cmps
cmps
shr
xlat
in
dec
adc
fnsave
jl
inc
jmp
push
fisttp
jmp
cmp
mov
mov
retf
mov
adc
jns
repz
pop
inc
sbb
imul
loop
or
out
pop
cs
xor
mov
mov
aaa
das
mov
dec
jae
or
xor
push
add
cmp
mov
jo
pop
ja
movs
mov
leave
xchg
(bad)
jl
es
daa
push
push
int3
test
cmc
add
sbb
fistp
xchg
ucomiss
adc
jno
xlat
jae
adc
inc
jbe
inc
hlt
daa
(bad)
mov
mov
mov
jnp
push
mov
push
mov
xchg
jbe
aam
mov
pop
mov
push
mov
push
bound
lahf
push
je
mov
dec
mov
adc
(bad)
jl
jl
or
push
jmp
push
xor
dec
fwait
int
cmp
sub
popf
ss
add
ss
out
push
loop
ins
enter
ss
mov
in
dec
and
or
stos
pop
retf
pop
push
jle
(bad)
pusha
cmc
retf
xchg
adc
jge
test
push
pop
xor
push
pop
enter
mov
pop
je
pop
or
sbb
data16
mov
pop
mov
mov
fwait
leave
jo
stos
cmc
retf
and
jmp
scas
push
cmp
fisubr
pop
(bad)
hlt
cmp
pop
xchg
push
scas
mov
sbb
test
retf
dec
mov
test
out
pop
or
movs
test
xor
ds
ficom
jns
lock
mov
sub
xchg
aam
or
adc
fisttp
sti
popa
adc
loopne
fcomip
(bad)
fld
dec
sahf
sbb
push
add
imul
jo
out
pushf
(bad)
xor
mov
push
repnz
out
mov
fcomp
rcl
push
mov
rcr
mov
idiv
pop
scas
hlt
fadd
mov
push
test
adc
lods
popf
jmp
mov
pop
daa
in
fiadd
adc
movs
pop
cmp
movs
mov
jns
icebp
fsub
clc
lds
popf
ja
movs
jb
jp
bound
fidivr
in
test
dec
ss
push
out
jp
cmp
xor
and
pop
outs
sti
(bad)
rcr
in
ror
xor
cmp
stos
ret
mov
adc
fwait
adc
loope
inc
push
arpl
(bad)
(bad)
push
call
and
push
push
mov
push
jne
sbb
dec
and
sub
mov
call
inc
les
adc
imul
fnsave
xor
in
mov
sbb
xor
push
aam
inc
lds
sbb
out
lods
iret
cs
repnz
ins
int
cmp
lods
loop
daa
mov
cmp
in
mov
xor
or
cmp
jnp
das
daa
and
mov
cmp
shr
std
outs
push
or
jmp
adc
fisub
jnp
lock
mov
xor
retf
push
pop
sahf
xchg
(bad)
mov
pushf
in
arpl
lods
fcos
nop
(bad)
pop
int3
sti
imul
adc
mov
stc
int
lods
push
jbe
dec
push
xchg
cdq
xor
mov
repz
jno
pop
addr16
adc
retf
xlat
lds
mov
xor
icebp
and
in
xor
hlt
out
inc
xchg
and
(bad)
jmp
fsub
aas
(bad)
adc
inc
ficom
mov
popa
inc
inc
fisubr
int3
test
lahf
jge
mov
mov
mov
pop
popa
dec
xchg
fdivr
push
dec
rcr
outs
(bad)
rcl
into
test
push
out
xor
sbb
xchg
stos
jmp
xor
mov
ja
add
rcr
xor
fstp
dec
mov
lds
pop
push
inc
xlat
gs
enter
xchg
outs
imul
push
mov
push
xchg
lea
jg
push
pop
dec
ret
dec
fs
xlat
mov
jg
addr16
shr
or
sub
xor
mov
push
daa
clc
lods
push
xor
lds
jg
push
sbb
and
mov
dec
fsubr
scas
sbb
ret
push
push
inc
outs
push
test
sbb
in
pop
inc
cmp
hlt
jo
jmp
mov
xchg
dec
xor
and
fsubrp
xor
cmp
inc
and
mov
xchg
sbb
outs
mov
retf
sub
outs
push
xor
jmp
pop
or
das
push
dec
lds
(bad)
xchg
js
xor
xchg
jge
xchg
cli
dec
xchg
xor
cmp
in
nop
ins
xchg
sub
adc
sub
adc
fxch
add
mov
jnp
mov
aas
xor
dec
cdq
inc
clc
xor
cmp
sub
pop
in
(bad)
push
imul
addr16
mov
xor
xchg
out
addr16
arpl
int3
add
hlt
out
and
(bad)
out
sub
daa
mov
hlt
inc
sti
pusha
in
test
dec
fdivr
icebp
enter
call
mov
inc
or
cs
outs
es
pop
jg
in
dec
add
pop
push
fcmove
add
outs
jbe
imul
daa
push
mov
sub
sub
and
sbb
sbb
aam
ins
cmps
jmp
sub
push
fwait
ins
mov
hlt
or
fdivr
test
inc
and
push
cmp
or
not
mov
pop
outs
cmp
idiv
aam
rcl
(bad)
rol
pop
or
mov
mul
in
xchg
cs
sub
stos
pop
ja
xor
sbb
das
dec
cmp
(bad)
mov
jmp
(bad)
into
inc
cs
and
je
imul
add
inc
fdiv
adc
fmul
imul
fnsave
add
aad
and
rcr
adc
ins
mov
sbb
sub
add
cmp
xor
je
out
jecxz
mov
data16
imul
xchg
or
fmulp
leave
mov
inc
test
and
aam
sub
mov
dec
or
inc
jae
mov
pop
xor
and
movs
xor
dec
inc
scas
mov
mov
mov
xor
lahf
jge
add
add
push
lock
(bad)
imul
mov
mul
or
push
rcl
add
sub
int
int
push
shr
mov
push
adc
in
rcr
fidiv
dec
(bad)
adc
xor
inc
and
dec
sub
mov
or
retf
les
pop
push
js
leave
xchg
push
xchg
fist
dec
xor
imul
jl
or
ja
ret
push
sub
test
xor
aam
(bad)
jp
mov
jl
fild
sub
sbb
jae
repnz
rol
fist
fsub
pop
jmp
aaa
(bad)
push
or
cld
div
sti
in
test
sti
mov
fadd
mov
add
adc
(bad)
jmp
addr16
jne
cmp
repnz
fidiv
js
ja
outs
mov
xchg
gs
pop
jae
loop
jns
cmp
(bad)
mov
pop
xchg
sbb
call
push
sub
sub
xchg
xor
cs
and
sbb
mov
aad
jno
pop
sub
cmp
pop
pop
cmp
mov
sub
ja
or
sub
dec
aas
mov
es
out
pop
das
add
pop
inc
call
lods
pop
(bad)
icebp
cmp
xor
push
rcr
stos
cmp
(bad)
sub
ds
addr16
push
clc
cdq
fld
jne
repnz
retf
out
in
aas
inc
shl
movs
into
xor
or
and
rcr
sbb
in
lahf
add
inc
test
dec
mov
mov
lock
and
xchg
push
cli
mov
pushf
or
jae
popa
mov
mov
fmul
push
jecxz
js
(bad)
cmc
mov
pusha
stos
cmc
xchg
nop
es
into
test
sar
or
push
sbb
push
addr16
mov
aam
repz
adc
fs
mov
push
dec
and
lods
cmp
dec
nop
int3
jbe
(bad)
cli
push
mov
push
xchg
jmp
(bad)
sub
pusha
dec
repnz
xor
and
gs
jne
int
daa
int3
cmps
mov
sbb
loope
cs
xlat
xchg
popa
iret
xor
in
xor
out
sbb
xchg
div
mov
cdq
xchg
pushf
pop
ret
aaa
sahf
or
sti
pop
pop
xchg
sub
xchg
es
inc
jl
mov
jno
sbb
xor
cmp
or
bound
or
sub
jno
sub
das
xor
adc
mov
push
test
adc
push
pop
call
scas
inc
sbb
rol
in
pop
dec
ja
cmp
popa
stc
or
push
dec
div
das
xchg
dec
mov
mov
pop
cmp
mov
popa
sub
sub
push
sbb
loope
shl
mov
mov
xor
stos
call
pop
and
cmps
inc
xchg
mov
jle
push
sar
and
cmp
mov
jl
sub
aad
add
cmp
pop
add
int
and
in
jle
push
add
out
pusha
call
mov
loopne
mov
imul
mov
inc
es
pop
out
lods
mov
nop
stc
in
cmps
xor
push
sub
cs
retf
push
add
push
xor
jne
mov
push
or
loope
sub
es
xchg
fdivr
adc
cmps
and
test
and
scas
data16
bnd
pop
add
call
xchg
std
aam
mov
gs
xor
popf
call
ds
int3
fs
mov
(bad)
ss
mov
jo
add
mov
mov
fadd
xor
push
enter
mov
loop
inc
sahf
ins
or
xor
daa
js
jno
jmp
mov
mov
mov
adc
fld
sbb
repnz
lea
lea
(bad)
sbb
adc
or
dec
jbe
ins
sub
stos
pop
mov
stos
test
mov
imul
push
jg
jle
mov
inc
jg
mov
jns
jb
push
sbb
jmp
arpl
inc
jge
pop
lock
cmp
add
test
punpckhbw
pusha
bnd
ret
cwde
dec
lods
fnstsw
xor
enter
movs
xor
push
(bad)
out
add
xlat
aas
sbb
mov
cli
loopne
ds
icebp
call
nop
mov
xchg
adc
cmp
retf
cmp
mov
cwde
sub
out
sub
cdq
pop
mov
dec
int3
test
xlat
in
fldenv
or
loop
xchg
ins
add
cs
jne
inc
xor
mov
cld
or
(bad)
cwde
push
inc
in
leave
out
retf
loop
lahf
ret
mov
mov
jb
sub
gs
into
push
(bad)
xchg
sub
jg
out
cmp
rep
clc
test
or
fidivr
add
out
jmp
aam
dec
push
sub
shl
push
push
xchg
retf
add
(bad)
mov
int3
jne
mov
jle
mov
dec
mov
sbb
out
jl
xor
fbstp
ror
mov
stos
mov
jecxz
jl
rcl
retf
add
dec
arpl
jp
xchg
adc
mov
outs
hlt
xlat
fs
add
xchg
and
pop
inc
push
xor
mov
inc
push
ds
dec
add
scas
retf
outs
lea
sbb
fstp
sbb
mov
ja
jecxz
loopne
xor
mov
lods
inc
dec
pop
mov
or
ins
push
or
in
cmc
test
push
fimul
pop
frstor
jns
aad
inc
mov
sub
(bad)
mov
mov
or
mov
adc
sbb
sub
fst
xchg
sub
sahf
leave
rol
cmp
stos
ret
xchg
in
adc
clc
fild
iret
into
cmps
lahf
push
adc
fld
jge
pop
inc
out
jl
sbb
dec
mov
push
push
adc
cmps
sub
xchg
stc
inc
push
std
ret
sbb
mov
or
and
jge
adc
xchg
je
bound
push
add
aaa
xchg
dec
(bad)
rcl
stos
(bad)
adc
in
fstp
sbb
aaa
inc
jmp
cmp
cmc
dec
push
mov
mov
cmc
inc
dec
out
adc
(bad)
leave
addr16
or
inc
cmp
xor
in
addr16
dec
ja
sbb
sbb
movs
sub
loopne
mov
cmc
adc
and
jb
xor
push
daa
jle
into
stc
dec
pop
loope
and
clc
cmps
adc
mov
shl
repnz
aas
in
std
or
sub
out
stos
adc
and
dec
inc
repnz
les
mov
ficomp
and
jae
adc
jae
sbb
lahf
stos
sbb
and
call
call
retf
xor
add
imul
test
sub
adc
pop
ja
xor
je
aad
mov
test
mov
sbb
xor
sbb
push
lods
sti
sub
jne
add
adc
sbb
push
push
cvttps2pi
xchg
imul
jge
hlt
or
out
movs
or
and
cmp
ins
loopne
das
or
loope
ret
xor
aaa
repnz
cwde
mov
loop
imul
mov
jns
xor
xor
in
push
fidiv
sub
xor
fild
push
les
xchg
xor
nop
push
test
inc
sub
add
iret
cdq
(bad)
aaa
adc
xor
pop
or
imul
fwait
cmps
dec
mov
mov
dec
lods
bsf
jno
dec
mov
sbb
es
sub
aad
cmp
es
inc
and
adc
in
iret
dec
push
dec
adc
pop
and
std
jns
repz
pop
jp
das
pop
xchg
test
inc
cmp
inc
out
(bad)
aam
std
popa
idiv
pop
xchg
imul
in
ret
arpl
rcr
das
cmp
push
ficomp
cld
or
mov
sub
jge
xchg
call
shr
cmp
jns
dec
adc
and
mov
das
jp
retf
sahf
iret
repz
in
push
mov
sub
jle
lahf
cmc
xor
dec
test
push
aam
jbe
leave
mov
in
ficom
aaa
and
and
sub
xor
xor
rol
dec
xor
(bad)
or
xchg
div
(bad)
shr
inc
adc
inc
and
mov
push
movs
pop
popa
or
rcr
fnstcw
push
cld
inc
and
test
push
cli
clc
aas
push
aad
cmp
retf
test
call
bts
sbb
sub
mov
dec
jnp
ret
mov
sub
push
sbb
lods
pop
cli
das
sbb
shr
xchg
xchg
sahf
imul
movs
stos
xor
adc
je
in
mov
push
out
cmp
test
or
stc
jae
push
sub
stos
arpl
ins
shl
nop
inc
aam
pop
add
or
cdq
aam
cmp
mov
xchg
pop
xchg
(bad)
sbb
dec
xlat
(bad)
and
and
scas
aad
cmp
ret
or
sbb
jle
lahf
loop
add
or
mov
fmul
aas
xor
pop
aad
push
mov
xor
mov
xor
(bad)
cmps
sbb
ins
cmps
add
mov
mov
pop
pop
adc
cmp
adc
fild
icebp
fst
pop
or
jnp
inc
dec
retf
push
popf
cmp
add
adc
stc
lods
inc
jne
xchg
and
or
jg
cwde
or
xchg
fild
dec
mov
je
addr16
stos
adc
push
retf
push
or
stos
inc
sub
xor
ins
cmp
push
out
mov
dec
into
jnp
sbb
xor
call
fcom
push
cmps
xchg
or
lock
pop
fwait
and
loopne
(bad)
jbe
add
in
pop
xlat
mov
xchg
inc
jnp
js
mov
lea
inc
xor
xor
mov
pop
mov
and
es
pop
fsubr
mov
xor
outs
sahf
js
loopne
jp
jmp
ret
cmp
cwde
sbb
push
ficomp
das
xlat
push
jl
popa
call
cmp
mov
or
sub
retf
pop
cld
push
cmps
mov
fwait
cld
enter
dec
arpl
jo
dec
int
je
xor
aaa
sub
inc
cmps
loopne
cmp
mov
call
cmp
jbe
xlat
add
mov
sbb
(bad)
dec
pusha
mov
xor
out
enter
lods
in
cmps
lods
inc
xor
xor
and
pop
addr16
fdiv
cmps
cdq
lahf
push
sbb
or
(bad)
outs
jmp
sar
test
aaa
lock
in
ret
add
jns
rol
fisub
neg
cmps
inc
or
xor
pop
sub
pop
mov
push
sahf
and
cmps
dec
cmp
ss
cmp
adc
std
xchg
ins
mov
sar
cwde
das
fmul
sub
dec
mov
push
popf
mov
sub
mov
mov
shr
retf
sub
jb
push
push
push
dec
or
xchg
mov
xor
daa
in
sub
in
lods
jmp
xor
rol
mov
xchg
mov
adc
into
sub
imul
inc
jo
and
jmp
ja
inc
mov
pop
and
sub
test
jns
mov
repnz
ja
cs
out
xor
dec
ror
jo
fwait
idiv
push
lea
in
mov
push
mov
int
jmp
push
pop
add
inc
dec
fnstenv
pop
ins
(bad)
fst
sbb
arpl
in
inc
inc
into
jo
mov
adc
fdiv
ret
outs
jmp
imul
data16
mov
(bad)
rol
pop
sub
aaa
cmp
hlt
mov
xchg
iret
adc
outs
std
sub
and
inc
inc
dec
push
sbb
xor
push
jmp
leave
es
pop
fldenv
cmp
aam
push
mov
cmps
test
inc
inc
(bad)
fst
jl
and
das
hlt
sbb
test
dec
cdq
pop
cld
dec
xor
add
pop
xor
mov
gs
fiadd
jb
out
inc
inc
inc
mov
stos
adc
ins
test
outs
pop
mov
leave
mov
(bad)
mov
xor
cmp
cmc
mov
jl
jmp
daa
mov
int
in
popf
inc
jae
cmps
mov
in
and
fwait
mov
and
cwde
enter
(bad)
fidiv
mov
out
sub
aad
arpl
mov
push
ins
add
mov
sahf
dec
inc
and
add
sub
add
mov
sub
push
xchg
pushf
cwde
jns
mov
pop
add
test
icebp
cmps
fst
sub
movs
fidiv
inc
lahf
lock
jl
repnz
push
pop
loopne
in
pop
test
sub
movs
leave
sub
mov
add
out
pop
(bad)
(bad)
into
(bad)
shl
xchg
sbb
popf
xor
and
mov
sub
sti
jecxz
sti
addr16
push
mov
in
inc
fisub
arpl
cmp
repz
pusha
inc
mov
in
in
fwait
std
xor
mov
push
pop
push
jne
dec
aad
xchg
pop
xor
adc
sbb
sbb
push
add
adc
mov
add
inc
push
pushf
xchg
test
jb
in
xchg
lods
adc
ins
inc
mov
jg
enter
pop
add
bound
xlat
loope
xchg
popa
int3
mov
es
pop
daa
xchg
add
or
jno
dec
push
jmp
data16
clc
mov
cmc
popa
xlat
jle
xlat
mov
jle
cmp
mov
push
out
xchg
inc
pusha
call
div
mov
xor
push
inc
in
inc
jb
mov
inc
sbb
push
adc
addr16
sub
sbb
in
fs
pop
mov
pop
push
jae
and
ret
dec
(bad)
xor
test
xchg
movs
inc
je
pop
popf
xor
cmp
imul
test
xor
into
mov
add
outs
mov
push
nop
out
inc
jne
cmp
xor
jmp
pop
imul
pop
dec
lock
lahf
gs
hlt
sahf
leave
lock
pusha
adc
jp
jmp
sub
xchg
dec
push
push
mov
addr16
ja
cmp
inc
and
xchg
out
test
push
ins
xor
add
sbb
scas
enter
lahf
shr
sti
or
in
sbb
mov
call
and
xchg
call
std
sar
mov
mov
mov
fstp
out
push
aam
mov
adc
jo
mov
gs
(bad)
xchg
inc
push
scas
sub
shl
ins
outs
push
inc
ds
mov
mov
addr16
and
mov
push
mov
xor
inc
mov
mov
aam
iret
retf
jge
fidiv
mov
mov
popf
mov
in
or
pop
dec
cmp
fild
dec
rcl
cmc
ds
pop
data16
outs
in
call
cmp
mov
loop
sbb
jne
inc
dec
leave
pop
jae
mov
lods
pop
inc
push
xchg
rol
pop
outs
mov
lods
and
mov
and
mov
mov
adc
rcl
ds
out
jae
add
dec
mov
stos
xchg
clc
cli
mov
mov
enter
mov
xchg
jp
xor
lahf
cmp
clc
adc
repnz
and
test
push
adc
mov
in
add
mov
in
nop
test
pop
lods
sbb
and
sbb
xor
add
icebp
sub
sbb
sub
sbb
mov
popf
clc
dec
test
std
pop
cmp
ins
mov
icebp
mov
xor
pop
aam
ja
sub
dec
sub
repnz
stos
xchg
xchg
xor
jge
mov
jle
pop
out
push
mov
inc
xor
adc
pop
mov
aam
ror
xor
mov
pop
jbe
ins
popf
and
movs
sbb
popa
dec
cmp
loope
repz
loopne
fpatan
sbb
push
outs
mov
popa
pop
mov
mov
jne
iret
mov
jnp
popa
add
ins
pop
sbb
ds
mov
fstp
push
cmp
sub
or
push
xchg
jge
mov
add
xor
add
je
xchg
sbb
mov
ret
mov
sub
repz
cmp
rcr
inc
cmp
hlt
pop
(bad)
mov
push
ins
mov
fcom
loopne
shr
in
pushf
std
xor
and
dec
repnz
ret
popf
neg
popf
test
(bad)
sub
mov
push
fst
scas
cmp
movs
pop
mov
push
test
xchg
repz
add
js
and
sbb
das
rcl
shl
test
cmp
out
clc
in
(bad)
cld
ja
xchg
fidivr
sbb
inc
push
imul
sbb
cdq
inc
loope
sub
scas
pop
xor
(bad)
jmp
dec
adc
xchg
xchg
daa
ficomp
mov
pop
adc
fnstsw
mov
pop
mov
sbb
pop
into
jle
jne
push
or
inc
in
ins
lods
pushf
push
pusha
mulps
imul
int3
mov
mov
or
push
inc
or
std
les
inc
js
mov
mov
push
call
in
call
sbb
lea
dec
dec
mov
fsub
out
push
sbb
pop
dec
push
cmp
and
shl
xor
pusha
cdq
and
dec
shl
loope
jno
aaa
mov
call
(bad)
xchg
and
xor
xchg
jecxz
(bad)
cmp
xor
dec
xor
inc
xchg
sub
xchg
jb
(bad)
push
pop
sub
mov
add
mov
inc
mov
and
pop
sahf
push
ja
mov
aad
mov
add
cld
mov
push
ins
aaa
xor
jne
xor
ds
add
mov
mov
lods
xor
xchg
xchg
push
sbb
scas
outs
push
xor
ror
xor
repz
scas
jbe
mov
xchg
shl
cmp
jo
fdiv
mov
dec
movs
xchg
jo
inc
js
dec
push
fwait
jmp
les
clc
adc
xor
xor
or
xor
sti
neg
xlat
mov
jnp
push
ins
mov
sub
ss
stc
sbb
sub
push
or
dec
(bad)
cwde
movs
pusha
aad
inc
jecxz
inc
daa
jbe
cmps
jns
movs
cmp
rcr
pop
das
mov
icebp
retf
mov
out
repnz
add
popa
sub
arpl
and
dec
cli
(bad)
daa
popa
xchg
pop
das
mov
ds
dec
push
bound
pop
neg
mov
push
dec
sub
mov
fidiv
add
inc
test
inc
popf
pop
jle
mov
stos
inc
push
and
sbb
es
fidiv
pushf
push
aas
rcl
lods
jns
adc
mov
mov
mov
stos
mov
icebp
jge
push
ins
xchg
stos
push
adc
cmp
dec
mov
mov
mov
or
stos
push
icebp
es
jo
cld
in
jg
pop
arpl
mov
jne
cld
adc
test
push
mov
cmp
push
and
pushf
mov
ins
xchg
call
push
(bad)
or
pushf
push
lahf
das
mov
test
rcr
loop
int
cdq
xor
mov
sub
into
or
dec
push
nop
push
fs
push
stos
sbb
lahf
shr
std
cs
int
xchg
or
mov
adc
je
call
cwde
pop
xor
or
aas
mov
ins
loopne
adc
cmp
sub
in
mov
pop
mov
into
test
loop
mov
xchg
jb
fwait
cmp
rcl
xchg
call
cmps
and
adc
xchg
and
sahf
(bad)
das
jg
cdq
pop
push
stos
mov
xchg
cmp
cmp
adc
lods
arpl
adc
mov
lahf
daa
sub
adc
call
dec
test
ds
push
rol
inc
sub
add
lea
imul
dec
mov
dec
jp
sbb
int3
adc
mov
dec
push
call
cvtps2pi
pushf
adc
push
pop
jae
cwde
leave
mov
ficomp
cmp
and
jg
add
fisubr
jo
ret
dec
pop
mov
and
aad
pop
sub
retf
mov
mov
inc
adc
cmp
cwde
jge
imul
ror
mov
add
cdq
stos
dec
(bad)
aaa
aaa
sbb
bnd
inc
popf
cmps
icebp
in
add
fdiv
mov
fadd
test
cmp
jb
out
mov
test
dec
arpl
adc
cmc
pusha
xor
inc
outs
or
jne
icebp
xor
xchg
sub
call
xor
test
je
dec
stos
cld
call
push
jmp
mov
pushf
aaa
imul
xor
adc
pop
loope
mov
mov
push
mov
sbb
push
and
sahf
into
xchg
sbb
xchg
jmp
inc
pop
push
xchg
push
jnp
jmp
mov
cmp
pop
mov
mov
push
nop
jecxz
cli
sub
das
xchg
pop
fild
mov
sahf
add
mov
mov
or
aam
pop
jae
pop
push
aas
daa
daa
xchg
fld
and
push
out
pop
add
je
ins
jae
jbe
jne
and
clc
sub
dec
mov
xchg
xor
push
je
or
daa
out
adc
mov
sbb
mov
mov
dec
repnz
and
push
lds
dec
jle
pop
add
call
add
test
sbb
stos
xchg
cmp
xchg
add
dec
mov
and
mov
or
fld
dec
fiadd
push
shr
aas
cmps
ins
jne
es
push
(bad)
arpl
ret
mov
repnz
push
jbe
jmp
es
int3
push
out
mov
sub
adc
mov
mov
out
push
rcl
pop
mov
in
add
sub
sub
in
and
cmp
mov
push
stos
mov
sub
pop
test
inc
and
mov
cmc
(bad)
arpl
(bad)
push
jecxz
idiv
fbstp
inc
and
inc
xchg
and
jge
outs
scas
inc
add
into
sub
push
imul
mov
jecxz
add
or
add
or
icebp
mov
jge
fwait
imul
fcomi
loopne
mov
stos
mul
fimul
mov
sub
and
pop
mov
int
hlt
repnz
in
sbb
jmp
pop
not
lea
outs
sub
stos
sbb
push
xchg
repnz
test
cmp
lea
imul
ret
xchg
sub
or
loop
call
push
shl
pop
cmp
mov
popa
scas
xchg
mov
cdq
pop
out
repnz
sti
mov
inc
in
pinsrw
(bad)
mov
mov
test
fisubr
cmc
pop
out
xor
stc
sub
pusha
mov
(bad)
jp
lds
(bad)
fistp
stc
cli
ss
jno
push
jl
imul
or
int
fldenv
call
es
ja
(bad)
(bad)
shr
mov
gs
jle
xchg
ins
dec
cmps
dec
push
dec
mov
xor
fst
shl
jo
jae
pop
sahf
jbe
inc
mov
dec
arpl
cmp
cmp
mov
scas
sbb
xchg
dec
pushf
imul
les
sub
dec
mov
mov
push
iret
loopne
sub
inc
xor
dec
(bad)
clc
mov
dec
jne
imul
into
daa
jnp
fdiv
sbb
arpl
imul
dec
inc
data16
cmc
jne
ins
shl
add
push
mov
mov
loop
popa
lahf
push
leave
adc
shl
aam
or
paddsb
push
pop
ins
ins
fldcw
bound
sahf
mov
inc
mov
iret
ins
ins
sbb
mov
xchg
idiv
add
cwde
jo
xchg
into
sbb
xchg
add
aaa
(bad)
aad
loopne
mov
nop
add
inc
mov
loopne
sbb
cwde
cmp
retf
jp
cmps
test
sub
sar
mov
sub
es
or
ret
(bad)
mov
add
ss
push
lds
mov
mov
ret
cli
add
mov
ror
or
xor
ror
es
bound
pushf
int3
int3
mov
push
and
outs
scas
dec
and
adc
sbb
sbb
test
sbb
hlt
mov
mov
jo
add
pop
push
es
(bad)
jne
test
loope
mov
js
dec
sbb
outs
pop
fidivr
adc
adc
push
push
mov
push
in
fsub
cmp
pusha
cld
pusha
in
sti
test
scas
mov
and
add
call
std
pop
sbb
loop
or
cld
fisub
out
imul
popf
pop
data16
sub
xchg
mov
outs
lods
mov
jg
jo
mov
mov
add
ret
daa
fistp
sar
xor
movs
mov
mov
dec
ss
adc
out
and
lahf
lock
inc
mov
(bad)
or
in
cmp
and
enter
mov
add
add
imul
imul
or
and
xchg
push
cmp
cmp
int
daa
ja
cmp
sbb
mov
fdiv
movs
or
ins
dec
call
ds
sub
sbb
test
pusha
ins
mov
js
cmp
push
ss
mov
inc
inc
fstp
sbb
data16
aas
lea
repnz
sub
mov
mov
pop
fdiv
mov
add
jbe
mov
scas
ret
xor
xchg
movs
sbb
in
adc
clc
jno
jne
pop
cmp
push
pop
int3
enter
ficomp
or
enter
leave
push
imul
test
movs
aaa
mul
xchg
(bad)
mov
mov
es
xor
cmps
out
ret
(bad)
xchg
(bad)
out
lock
pop
fisubr
mov
out
dec
and
or
mov
ins
mov
cmp
mov
add
inc
push
lods
sbb
cli
dec
cmps
(bad)
ds
or
cmps
fmul
aad
loopne
out
dec
cwde
inc
in
push
fist
adc
cwde
stos
push
jns
mov
pop
scas
mov
cmp
dec
dec
in
inc
pop
popa
mov
jl
call
or
loop
out
call
std
ror
movs
mov
push
jl
jecxz
mov
ret
outs
pop
ja
daa
mov
in
jo
ret
imul
mov
cwde
jb
addr16
stos
int3
(bad)
leave
popa
sbb
cmp
mov
mov
cmp
jbe
ret
xor
jp
sbb
sub
and
mov
adc
and
mov
pop
popa
fcom
in
or
xchg
je
mov
xor
ja
jmp
sub
adc
inc
call
fwait
or
and
sahf
leave
push
jne
mov
cs
cmp
out
cmp
iret
ret
add
push
pop
jbe
cld
mov
(bad)
xor
xor
add
dec
jns
jg
(bad)
xchg
loop
pop
cmp
icebp
test
adc
push
ja
and
out
iret
popa
icebp
clc
xchg
(bad)
pop
call
test
mov
mov
lea
push
cmps
jg
mov
fiadd
xchg
into
pushf
jb
das
dec
add
pop
xor
fimul
dec
xor
fcmovb
aas
dec
fsub
xor
pop
jne
out
mov
out
cld
xlat
cli
xchg
sub
test
loopne
(bad)
mov
pusha
add
inc
shr
nop
pop
cdq
data16
aas
lds
sbb
shr
dec
fs
(bad)
fdivr
(bad)
rol
add
sbb
jecxz
pop
push
cld
push
int
fs
inc
aad
cmp
shl
clc
xor
jb
jno
daa
mov
shl
scas
sub
cmp
mov
xchg
or
out
fucom
fwait
push
(bad)
fild
jle
adc
sbb
and
cmp
fnstenv
mov
sbb
dec
clc
sub
add
scas
inc
rcr
dec
push
sbb
sbb
cmc
push
in
ja
cwde
adc
loop
in
gs
pop
add
out
mov
adc
and
hlt
dec
je
std
aaa
je
xor
jmp
inc
mov
not
ror
push
inc
jno
inc
out
cdq
adc
jmp
repz
enter
mov
mov
sti
dec
adc
jne
jmp
sbb
pop
cmc
shl
push
mov
into
cdq
(bad)
scas
fld
xchg
adc
fist
adc
(bad)
int
imul
lods
sub
stos
scas
adc
push
add
aaa
sbb
mov
adc
push
sbb
scas
sub
jno
cmp
mov
mov
fbstp
mov
fdivr
mov
or
mov
cli
outs
sub
test
fldcw
ret
lahf
jmp
scas
jle
cmc
adc
pop
mov
push
jg
outs
pop
add
jecxz
cs
data16
and
cmp
test
mov
fidivr
adc
push
dec
cld
sub
sub
jmp
push
or
test
nop
aas
adc
mov
fild
mov
mov
(bad)
arpl
sub
xor
cld
cmp
add
popa
push
pop
mov
and
adc
xchg
mov
push
data16
fs
jno
pop
mov
lock
lock
push
movs
shr
ret
mov
fnsave
xor
jge
add
jne
in
pop
ret
jbe
mov
mov
(bad)
sub
dec
cmp
sbb
packuswb
mov
mov
clc
hlt
enter
xchg
and
stos
cwde
and
movs
out
mov
fidivr
xor
lods
std
xor
mov
sub
and
sub
adc
mov
repz
ja
outs
adc
lods
pop
dec
push
xchg
call
mov
mov
aaa
into
gs
sbb
sub
sub
fsub
test
pushf
in
mov
retf
jnp
aas
sub
sbb
js
pop
pop
add
lods
xchg
xor
loop
imul
scas
retf
adc
hlt
mov
std
inc
mov
sbb
push
dec
sub
xor
inc
lahf
pop
fldenv
add
fidivr
int
fcmovnu
mov
push
xlat
inc
xor
mov
es
stos
int
pusha
inc
enter
sbb
inc
adc
lahf
jmp
mov
jmp
xor
ror
mov
jg
push
fimul
cmp
fmul
sbb
mov
cmp
sbb
jno
xor
int
dec
fstp
sbb
xchg
ret
jl
xor
das
cs
xor
ja
dec
sub
mov
sbb
sub
or
out
xor
dec
jg
cdq
shl
addr16
shl
mov
push
or
cli
shr
mov
and
or
pop
fucom
jbe
ret
mov
ud1
jp
mov
jmp
ret
add
lods
sti
shl
shl
and
xchg
sahf
sub
(bad)
sub
add
pop
(bad)
pop
in
inc
cmp
inc
sbb
adc
jmp
nop
sub
outs
jno
div
and
retf
loopne
jge
or
inc
test
inc
cmc
arpl
ficom
adc
ins
not
xlat
(bad)
and
test
in
add
jo
lahf
aam
jo
xor
clc
iret
pusha
fmulp
(bad)
in
movs
or
adc
dec
xchg
cmps
dec
mov
jne
mov
je
jne
pop
jle
mov
imul
(bad)
(bad)
int3
jne
pop
ds
inc
and
xor
sahf
cmp
mov
mov
test
sub
je
retf
outs
pop
mov
pop
jne
cmp
cld
adc
cmp
sbb
and
int
icebp
int
movs
aam
mov
cmp
mov
mov
sti
fdivp
in
call
and
cmp
mov
(bad)
in
lock
mov
inc
je
cmp
out
fst
hlt
fsubr
sub
xor
idiv
push
je
push
dec
dec
outs
pop
inc
mov
icebp
sub
mov
cld
in
jg
inc
stos
scas
jp
jns
lock
scas
ins
adc
ss
mov
jp
std
cmps
int3
scas
scas
sub
je
rcl
adc
aam
pop
outs
and
pop
out
dec
push
lahf
rcl
call
mov
sub
in
ja
outs
inc
imul
mov
test
int3
xchg
sbb
pop
into
nop
pusha
pop
xor
sbb
imul
inc
and
jns
loop
fisubr
mov
xor
lods
add
shl
jno
jecxz
sbb
sti
arpl
mov
adc
mov
sbb
sub
popa
pop
sti
ins
xor
in
into
addr16
jmp
es
ret
test
test
ins
jecxz
adc
fdiv
push
or
repnz
or
sti
and
xor
mov
fild
mov
mov
ret
lods
mov
test
test
add
std
ror
xor
xor
stos
enter
mov
adc
lds
dec
(bad)
rol
clc
cmp
cld
push
cdq
imul
aas
mov
mov
add
or
mov
pop
or
dec
pushf
add
ss
dec
push
add
or
fcomp
inc
mov
lods
sbb
add
and
jne
call
ds
jg
inc
nop
xor
fbstp
xor
cmps
push
xchg
aaa
outs
movs
push
add
mov
jo
pop
mov
sub
cmp
mov
enter
je
cmp
call
fiadd
xor
sbb
sbb
sub
adc
shr
cmp
jg
int
ss
(bad)
xchg
add
shl
jne
(bad)
pop
jge
mov
sahf
test
mov
jecxz
cmps
xchg
shr
push
fucomip
int3
mov
enter
and
mov
push
in
leave
test
and
out
fcomip
mov
stos
push
sbb
dec
fdivrp
mov
rcr
ret
add
lds
fisubr
cmps
mov
and
or
pop
xchg
(bad)
loopne
outs
rol
jbe
pop
xchg
xchg
mov
sbb
(bad)
out
jns
out
rcl
test
sub
dec
or
sbb
and
cdq
int3
cmp
fild
sar
or
scas
(bad)
ffree
loope
fcomi
xor
dec
cmp
dec
xchg
jno
ret
aaa
pop
pop
outs
add
mov
enter
out
and
test
mov
aas
cwde
mov
neg
out
js
mov
or
nop
iret
xchg
jae
mov
sti
add
popf
xchg
ja
push
inc
mov
xor
mov
sub
in
mov
out
adc
shr
mov
xor
xchg
shl
test
pop
stos
adc
push
lahf
in
aas
or
mov
inc
fisub
xchg
cld
cmp
mov
mov
pop
push
xlat
mov
sbb
jns
fsubr
push
sahf
mov
stc
push
pop
sub
push
out
inc
jbe
pop
jo
xchg
push
cld
fnsave
(bad)
xlat
adc
test
mov
pop
fs
pop
rcr
scas
jo
sub
fist
jno
pop
int
shl
pop
out
scas
das
mov
jl
aad
je
in
and
xchg
mov
cmp
dec
pushf
mov
adc
arpl
cmps
cmp
sbb
jp
out
cdq
inc
sub
clc
mov
or
dec
push
push
mov
bound
lea
pushf
add
ins
mov
jp
dec
(bad)
push
mov
ins
pop
jne
push
cs
mov
dec
dec
sbb
mov
xchg
or
ret
pop
mov
pop
cld
in
mov
movd
lods
push
(bad)
fcmovne
loop
or
nop
push
mov
pop
fimul
mov
jge
mov
call
dec
stos
and
aad
fwait
mov
call
pop
adc
repnz
(bad)
sbb
aad
cli
or
fidiv
fisttp
fcomp
daa
addr16
cs
stc
mov
cmp
mov
or
leave
cmps
sub
pop
xor
scas
gs
arpl
lahf
in
cdq
push
dec
pop
sbb
or
inc
(bad)
mov
or
imul
and
fist
inc
(bad)
bound
gs
ffree
or
(bad)
xor
out
cs
mov
inc
fcomp
and
cmp
out
push
into
and
adc
aam
adc
fs
adc
rcl
or
mov
xor
xchg
xor
loopne
popa
cmc
dec
retf
or
jbe
stc
dec
pop
out
rol
lock
aad
sub
aaa
mov
enter
pop
stc
jge
sub
push
jno
cli
jmp
mov
clc
arpl
test
push
fldenv
pop
cmp
fimul
or
dec
mov
popf
outs
push
adc
shl
xor
cmp
inc
popa
sub
retf
stos
cmp
neg
iret
test
adc
pop
jae
das
retf
sahf
inc
cmp
add
(bad)
cmp
daa
xchg
retf
cli
mov
mov
dec
arpl
pop
xchg
lods
xchg
mov
out
or
int3
or
sbb
inc
test
cmps
(bad)
push
jg
ins
xor
ins
push
jmp
mov
loope
std
jbe
adc
loop
nop
sub
(bad)
stos
mov
inc
fstp
movs
stos
mov
not
push
dec
cmp
and
das
cmp
icebp
cmp
xor
dec
inc
aam
cmp
pop
sub
inc
push
inc
iret
sub
cdq
fsub
jecxz
add
fs
cs
cdq
shl
jg
cwde
in
add
lahf
jecxz
xchg
jecxz
pop
imul
out
movs
push
pop
mov
inc
sbb
add
ret
imul
cmp
scas
aaa
jo
call
test
pop
sub
inc
nop
or
xchg
aad
push
rol
xchg
mov
xchg
cs
fwait
sub
pusha
jecxz
and
int
mov
cmps
aas
sub
cs
icebp
int
shl
scas
adc
daa
push
in
scas
pop
jbe
(bad)
jge
stos
jnp
test
sbb
mov
pop
stos
inc
add
push
pop
int
pushf
jl
mov
std
mov
repnz
or
push
mov
sub
xor
clc
mov
push
in
pop
mov
push
or
sub
xor
sbb
jno
dec
xor
aaa
adc
mov
push
xor
cdq
add
clc
xor
xor
stos
mov
sub
push
shl
shr
pop
inc
in
and
in
scas
push
mov
(bad)
test
push
dec
dec
add
jmp
jns
jnp
sbb
and
movs
fisubr
sub
push
dec
jbe
retf
xor
sbb
mov
cmp
or
aaa
mov
and
in
lock
fcom
fidiv
mov
push
icebp
adc
sub
xchg
es
dec
pop
inc
pop
sbb
push
xchg
sbb
int3
mov
mov
std
repnz
stos
xlat
sbb
pop
test
sub
fnsave
and
jmp
cmps
and
mov
rcr
or
xchg
lds
pop
imul
push
ins
sub
pop
scas
push
push
cmp
out
sbb
iret
ror
xor
out
mov
scas
pop
and
in
mov
outs
ins
popa
xchg
cdq
data16
sti
jge
mov
shl
mov
out
mov
dec
ins
ret
cmp
add
jnp
inc
arpl
mov
and
(bad)
mov
xor
push
mov
test
ins
loope
mov
fs
pop
out
js
cmp
pop
fisubr
xor
ficom
sbb
mov
mov
in
mov
push
jmp
lahf
xchg
and
jmp
cwde
hlt
mov
(bad)
ins
leave
add
mov
and
pop
pop
and
cli
add
pop
ja
scas
inc
enter
cmp
lock
idiv
pop
js
imul
and
push
mov
fwait
out
inc
sub
mov
in
jbe
add
mov
inc
push
fwait
inc
dec
cli
daa
and
mov
shl
data16
outs
ret
xor
fidivr
xchg
mov
xchg
dec
sbb
int
pop
fsub
push
(bad)
mov
xchg
lahf
out
push
add
inc
(bad)
fwait
sbb
adc
or
imul
imul
add
outs
mov
xchg
fs
and
push
fiadd
mov
pop
fwait
mov
cdq
sub
inc
ret
aaa
cmp
jno
add
pop
dec
cmp
and
sbb
mov
sub
dec
and
push
cs
lock
outs
(bad)
jbe
shl
mov
jmp
or
call
mov
ret
dec
fwait
push
dec
jnp
jae
inc
xor
mov
adc
inc
es
cwde
cmp
add
cmps
ja
ret
and
mov
fwait
adc
or
mov
and
loop
pop
pushf
mov
mov
xor
adc
mov
lds
rol
jl
es
cmps
cld
sbb
stc
add
dec
dec
(bad)
mov
clc
mov
and
or
inc
jbe
or
pop
pop
push
push
ins
pop
es
mov
je
mov
cld
dec
sbb
mov
push
jl
or
adc
gs
popf
pop
sub
in
lahf
jo
into
mov
fidivr
int
sub
mov
and
in
mov
adc
pop
jecxz
stc
call
lods
sbb
jnp
fst
mov
pop
nop
bound
outs
(bad)
push
imul
xor
mov
mov
sub
xchg
scas
jg
(bad)
stc
fucomi
mov
retf
pop
xchg
xlat
jb
and
loope
int3
mov
xchg
xchg
sti
je
pop
cdq
movs
int
mov
jmp
cwde
sub
mov
popa
repnz
sbb
adc
aaa
adc
mov
jmp
inc
jp
loopne
sub
xor
and
pop
mov
inc
ret
inc
sub
xchg
cmp
mov
inc
shr
icebp
arpl
xor
or
and
or
sti
mov
dec
ins
stos
popa
imul
adc
cmp
mov
lahf
jns
xor
in
daa
inc
mov
inc
jo
and
mov
jecxz
and
imul
enter
xchg
rcr
jmp
and
bound
(bad)
mov
test
lods
in
inc
add
lods
and
lahf
adc
aas
and
hlt
dec
scas
pop
fist
inc
push
call
clc
pop
mov
(bad)
test
push
inc
mov
ss
mov
(bad)
or
sub
mov
cmps
out
clc
inc
fisttp
mov
popf
pop
aad
imul
shr
leave
mov
push
iret
mov
xchg
mov
xchg
pop
push
xchg
adc
and
adc
(bad)
sub
jne
jb
and
cdq
xor
xchg
dec
sahf
aad
add
stos
sbb
ja
mov
test
xchg
lods
ins
addr16
jbe
mov
ins
mov
test
adc
sub
mov
sahf
lahf
jge
cmp
pop
dec
jle
movs
(bad)
leave
and
cli
ja
jne
jnp
loop
cmps
adc
xchg
pusha
or
adc
(bad)
xor
hlt
lods
in
xchg
or
cli
std
jnp
pop
push
pushf
mov
in
out
sub
xchg
inc
mov
scas
das
out
add
sub
jl
es
inc
ret
push
ins
sbb
xchg
and
sub
jp
mov
jnp
ins
xor
test
ret
adc
mov
cmp
xor
add
add
jo
sub
dec
jns
add
in
jmp
sbb
mov
cs
adc
repz
or
pop
repz
fild
sbb
xchg
hlt
fst
mov
fldcw
dec
jmp
mov
jle
xchg
push
inc
add
add
inc
outs
setne
adc
jmp
and
test
(bad)
mov
imul
sbb
in
or
(bad)
fist
pop
fdivr
mov
pop
sub
push
cli
addr16
xor
popf
mov
retf
jnp
xlat
xchg
xchg
scas
cmps
mov
daa
sbb
adc
sbb
xchg
xor
scas
add
in
jp
ins
js
shl
dec
mov
(bad)
aad
dec
ja
mov
test
sbb
dec
lods
cmp
jmp
ja
fucomi
movs
lea
pop
(bad)
dec
add
repz
jmp
cmp
pop
imul
(bad)
mov
retf
repz
mov
mov
out
into
fs
inc
add
sub
outs
and
lea
cmp
shl
push
jmp
adc
rcr
mov
pop
int
mov
mov
or
daa
js
jle
popa
rol
xchg
push
xchg
icebp
movs
cmp
or
jp
lea
fnstenv
bound
cmp
aaa
cmp
pop
or
ret
loopne
push
or
xor
mov
ret
stc
or
dec
pop
cmp
xor
xchg
or
cmps
mov
jle
andnps
ins
je
fld
ja
test
and
test
cmp
dec
fdivr
aam
in
out
add
xchg
or
ins
inc
push
adc
enter
test
leave
pop
mov
cli
repz
cmp
mov
pop
sar
pop
mov
xor
fadd
into
cmp
and
in
pop
daa
aad
or
lea
mov
jecxz
jecxz
stos
add
push
cmp
xchg
lock
xor
and
jmp
fs
int
nop
adc
sbb
fild
and
or
xor
and
js
sub
pop
or
add
ret
sub
and
aam
(bad)
push
pop
into
lods
(bad)
and
cmps
push
xchg
push
and
idiv
jmp
push
cmp
add
ja
pop
pop
loope
pop
mov
xor
movs
sbb
fsincos
ja
push
pop
pop
leave
mov
mov
dec
sub
in
sbb
retf
pop
mov
inc
gs
int
push
in
xchg
push
pop
sub
and
or
cs
and
not
js
sub
mov
add
imul
lahf
idiv
ss
outs
ins
int3
adc
test
outs
imul
cld
movs
les
dec
js
or
and
push
ins
sar
mov
shr
fsubr
or
(bad)
js
sbb
add
inc
or
vmread
dec
jl
sbb
add
repz
(bad)
movs
xor
iret
mov
push
pop
(bad)
pop
repnz
les
sub
cmovs
sti
inc
in
movs
and
cmp
(bad)
shr
retf
sbb
in
jb
(bad)
cmp
pop
push
in
das
inc
mov
jl
fdiv
int3
neg
rsm
call
in
inc
enter
jp
sahf
xor
sbb
dec
fsub
int
xchg
in
lahf
push
mov
into
test
jl
div
inc
cmp
std
pop
xchg
jo
sub
repz
or
push
in
push
xchg
jp
scas
hlt
hlt
ss
dec
dec
sbb
push
ss
mov
je
fld
cmps
mov
movs
lds
mov
stos
adc
or
adc
adc
in
sbb
jo
sub
sub
popf
mov
sub
mov
jbe
cdq
add
stc
push
sahf
xchg
cdq
mov
rcl
int
in
xor
and
push
stc
(bad)
sub
das
retf
(bad)
pop
push
out
push
scas
popa
jg
daa
push
ret
push
dec
call
popf
mov
out
pop
div
repz
mov
mov
mov
sbb
and
fcomip
div
inc
jae
shl
sahf
aaa
(bad)
xor
ficom
rcl
mov
xor
jno
rcr
cmp
pop
in
pop
sub
mov
mov
jns
or
nop
lods
repz
imul
cmp
arpl
push
sbb
pusha
nop
daa
das
xchg
xchg
call
or
sbb
gs
fwait
jmp
cmp
jmp
ds
mov
stos
lods
and
sub
lds
jmp
into
dec
hlt
repz
retf
jno
xor
push
ror
shr
data16
sub
inc
aam
out
jne
xchg
inc
xchg
jg
pop
addr16
jno
mov
mov
ret
std
stos
push
scas
add
mov
pop
mul
cmp
xor
icebp
xchg
jnp
mov
sub
not
fwait
lahf
(bad)
fidiv
int
out
out
dec
lds
lds
sahf
cmp
push
mov
mov
out
cwde
pop
lea
dec
mov
lahf
(bad)
xor
mov
add
aas
pop
pop
mov
jg
add
mov
ror
dec
jmp
sbb
scas
dec
call
jl
rep
in
out
cmp
das
aam
loop
mov
shl
(bad)
pop
(bad)
dec
push
imul
adc
call
ja
jmp
test
test
mov
out
rcl
leave
loope
lods
mul
xchg
dec
mov
pop
clc
je
cli
sub
jmp
mov
sti
cmp
and
xchg
fcmovnbe
jno
inc
je
push
pop
jne
mov
mov
pop
sbb
mov
(bad)
movs
lock
adc
fstp
jmp
xchg
xchg
fidiv
xchg
sar
mov
jb
in
push
popf
mov
and
retf
pop
mov
dec
sbb
dec
addr16
xchg
pop
push
test
or
les
mov
jp
aam
push
push
and
frstor
lods
(bad)
cmc
dec
pop
add
jge
pop
dec
ror
lods
or
mov
lahf
(bad)
frstor
or
fld
in
adc
popa
movs
pop
xor
mov
xchg
and
push
into
push
dec
mov
pop
pop
int3
pop
movs
cld
and
lds
nop
out
push
scas
xchg
clc
cld
test
add
mov
add
ins
pop
popf
dec
adc
xchg
iret
and
add
cmp
adc
in
mov
xchg
pop
sub
sahf
mov
or
add
and
push
adc
add
dec
push
xchg
retf
ror
cmp
popa
loop
icebp
sub
ja
in
xchg
mov
rcl
(bad)
(bad)
out
and
sub
push
imul
dec
ins
clc
rol
pop
push
jae
xchg
(bad)
adc
gs
cmps
inc
(bad)
inc
jbe
xor
sbb
lods
jne
int
lods
out
jl
sar
mov
(bad)
pushf
cmp
sbb
mov
mov
mov
pop
and
int3
jle
xchg
fwait
cmc
rdpmc
outs
or
inc
pop
repz
mov
inc
push
outs
cwde
std
out
cmps
jecxz
xchg
add
sub
pop
adc
xor
ror
jno
pop
sub
mov
ret
inc
retf
mov
mov
ins
mov
add
pop
fs
jnp
out
mov
aaa
pop
cmc
hlt
imul
xchg
mov
aam
mul
xchg
inc
shl
dec
add
std
inc
pop
popa
mov
mov
xor
in
fwait
scas
icebp
int3
fisubr
mov
add
jbe
pop
sbb
pop
jae
push
inc
(bad)
xor
jns
sub
push
push
hlt
push
sbb
add
cld
sti
dec
es
pusha
arpl
std
lods
pop
je
push
add
out
fimul
pop
add
push
mov
ret
adc
fcom
enter
adc
fs
test
ins
sub
xor
scas
mov
test
popf
or
jge
fisubr
ja
bound
xchg
or
dec
add
dec
(bad)
mov
dec
mov
push
mov
retf
jle
sub
nop
or
and
xchg
jge
popf
push
jl
or
inc
or
add
push
test
ja
and
inc
leave
and
fdivp
std
mov
or
add
(bad)
adc
xlat
out
leave
sub
jns
cmp
out
loope
pushf
mov
xor
imul
mov
(bad)
xor
imul
xchg
pop
(bad)
pop
mov
mov
inc
es
adc
cmp
pop
xchg
cmps
jae
in
lock
enter
retf
pop
jp
cdq
cmps
dec
in
out
xlat
jae
aaa
mov
jno
sbb
ret
shl
call
rcl
mov
movs
mov
jnp
jno
sub
jmp
cmp
ins
rcl
push
jns
ins
pusha
inc
loope
jle
dec
jg
(bad)
js
push
es
adc
cmp
inc
inc
xchg
mov
inc
xchg
mov
jns
daa
inc
jno
xchg
dec
dec
fdivr
sar
or
sub
test
pop
imul
int
fnstsw
std
lock
out
push
adc
or
test
add
int
xor
mov
add
jae
and
outs
cmps
inc
xchg
call
add
loop
add
jns
sahf
mov
lods
pop
push
lds
(bad)
rol
sub
nop
mov
push
call
fucomp
and
in
test
pop
cmp
jecxz
stos
add
push
xchg
cmc
xchg
ss
call
jecxz
xor
ja
push
inc
inc
(bad)
cmp
sub
inc
push
ja
in
sub
sahf
ret
pop
aad
adc
retf
jge
ret
test
pushf
lods
jecxz
xchg
mov
pusha
fldcw
mov
push
sub
jb
mov
les
push
cmp
jecxz
mov
pop
movlps
adc
inc
sbb
and
cmp
xor
pop
jecxz
repz
push
xor
push
xlat
(bad)
adc
pop
sar
sub
shr
push
loopne
mov
fld
sbb
push
ret
add
and
jae
cmp
mov
jp
xor
and
jnp
(bad)
xchg
push
or
int3
movs
test
sbb
mov
xchg
iret
and
hlt
mov
jne
sub
(bad)
sbb
pop
and
and
cmp
fsub
pop
lods
(bad)
pop
push
and
(bad)
mov
jg
lock
inc
mov
ins
or
push
jbe
cmps
test
dec
push
ret
mov
inc
cmp
fidiv
pop
sbb
inc
and
(bad)
or
push
cwde
ins
sub
movs
mov
xchg
outs
mov
aad
adc
out
or
xchg
mov
lds
test
mov
push
xchg
pop
jmp
rcr
pushf
jge
cmps
shl
cli
lock
cmp
call
sub
xor
popf
dec
popf
in
xchg
dec
out
jmp
lods
rcl
dec
push
test
mov
xor
cdq
push
pusha
push
test
movs
sub
and
ins
adc
push
leave
mov
inc
and
add
ins
mov
mov
test
test
add
xchg
lahf
addr16
fiadd
out
leave
push
stc
mov
fdiv
ds
test
pop
je
pop
lds
shl
jp
cld
push
fcomp
(bad)
adc
ins
pop
jecxz
mov
es
dec
dec
or
mov
push
dec
pop
js
jp
sahf
adc
out
xor
aaa
int3
repz
push
and
xor
cmp
loope
test
inc
cmp
ss
inc
sti
push
stos
out
fidiv
pop
pop
ss
call
push
jo
push
xor
sub
popf
lods
push
popf
mov
pop
cmps
fbld
pop
je
push
jae
mov
icebp
xchg
mov
pop
jle
jp
cmp
rcr
mov
js
test
xor
inc
iret
nop
pusha
scas
and
mov
js
add
sbb
in
popf
or
mov
iret
dec
jmp
loopne
stos
iret
ret
leave
xor
adc
jbe
jge
hlt
mov
jge
sbb
test
repz
cmc
sbb
jge
fist
xor
mov
sahf
rcr
inc
sub
icebp
sub
or
es
(bad)
jle
cli
je
mov
push
and
inc
cmc
in
pop
out
call
or
add
xor
dec
aad
cmp
shl
xor
out
push
(bad)
adc
fld
sbb
dec
jmp
iret
push
retf
jg
test
inc
fcom
les
int
mov
aas
xor
(bad)
mov
xor
cmp
es
cmp
inc
and
sar
bound
cli
cmps
loope
lods
adc
mov
cmc
sbb
ret
test
cmp
jmp
push
add
shr
cmps
push
adc
inc
ret
lea
inc
in
and
push
mov
sbb
mov
ja
mov
jmp
out
push
sahf
or
ret
jnp
add
cld
xchg
(bad)
sbb
stos
xchg
pop
xor
or
xor
mov
data16
pop
rcr
sub
ins
rcr
sub
stc
popf
add
inc
adc
fdiv
or
call
addr16
inc
mov
pop
fdivp
mov
inc
push
add
jo
mov
dec
lods
jb
mov
repnz
into
dec
imul
sti
adc
cmp
cmp
test
retf
mov
pop
sub
ja
mov
mov
jl
pop
mov
mov
arpl
xchg
add
mov
out
jp
stos
js
jae
(bad)
mov
mov
leave
sbb
xchg
jmp
and
fmul
pushf
ss
or
addr16
mov
push
imul
or
dec
leave
jne
push
(bad)
xchg
pop
sub
jmp
pusha
sbb
in
xchg
scas
call
ud1
sub
daa
(bad)
mov
loop
sbb
jmp
dec
mov
and
add
and
rcr
std
dec
jmp
cmp
div
imul
(bad)
stos
and
and
push
dec
dec
and
out
cld
push
push
(bad)
ror
sbb
dec
pop
and
bound
std
pop
jb
movs
xchg
pop
inc
arpl
popf
fisttp
mov
mov
fwait
in
mov
xchg
and
int3
arpl
jo
fsubr
ret
repz
in
xchg
and
pop
push
or
(bad)
int
push
jae
sub
mov
or
pop
push
xchg
lods
jecxz
cmp
out
push
sbb
(bad)
loopne
test
cs
mov
inc
sbb
enter
ror
cs
(bad)
or
daa
xor
out
scas
je
and
in
cmp
test
inc
lock
inc
hlt
repz
sub
push
xor
into
jbe
loopne
inc
and
outs
or
fwait
push
xor
cmp
cmp
test
sub
es
mov
sbb
pop
lods
pop
adc
push
push
dec
dec
push
add
adc
fist
aas
sbb
push
(bad)
lock
cmp
std
cmp
in
inc
mov
test
cdq
cmp
add
pop
iret
ret
push
add
mov
dec
mul
dec
push
cmp
inc
int
jo
sti
inc
cmp
pop
pop
mov
cli
or
and
mov
es
cdq
fs
jl
jmp
push
and
adc
loope
jg
push
retf
cs
mov
push
push
xor
dec
fdivr
sub
xchg
daa
iret
jl
xor
jo
mov
call
lahf
(bad)
mov
les
sub
stos
shl
(bad)
cdq
dec
xor
pop
dec
add
mov
hlt
lahf
xchg
mov
sbb
les
ret
jmp
sar
adc
loope
and
outs
sbb
outs
cdq
adc
gs
sub
and
pop
add
out
push
fidiv
leave
shl
pop
jne
sbb
xor
lods
daa
sbb
add
xchg
or
fiadd
je
into
inc
sbb
cli
or
gs
jnp
jnp
(bad)
mov
add
call
je
mov
pop
dec
push
mov
lea
cs
fld
dec
xor
lea
gs
mov
ret
push
fld
fild
pop
fldcw
out
imul
inc
sar
adc
jmp
push
shr
enter
jecxz
inc
addr16
loop
out
push
out
push
and
into
add
mov
jne
pop
cmp
rcl
dec
pop
sbb
loop
icebp
ds
pop
retf
loope
inc
jbe
shl
hlt
pushf
fcmovnu
sub
je
pusha
sbb
dec
rcl
or
rcl
jns
xchg
mov
cmp
aas
push
dec
test
mov
and
js
jnp
in
sub
mov
inc
pusha
jmp
ja
(bad)
jp
mov
retf
mov
bound
or
push
pop
xchg
retf
jnp
hlt
shl
retf
icebp
jno
jl
mov
and
call
ss
push
data16
dec
std
int3
dec
cmp
pop
fdiv
push
cmps
pushf
push
retf
adc
leave
inc
jae
sbb
das
not
dec
adc
jnp
mov
bnd
jae
sbb
clc
pop
mov
mov
jns
mov
cmp
sub
mov
pop
add
jns
cmps
and
mov
and
out
loope
idiv
test
pop
(bad)
sbb
xchg
dec
xchg
je
mov
daa
push
sub
and
jae
and
add
push
and
pusha
dec
js
addr16
inc
das
jne
inc
lods
cmps
xchg
mov
aas
lds
aam
add
popa
inc
cmp
retf
les
cmp
mov
test
fs
dec
sub
or
std
fiadd
in
scas
(bad)
out
mov
out
cmp
sbb
mov
ss
neg
(bad)
in
lods
test
inc
adc
pop
mov
fcomi
sahf
pop
push
outs
jge
jg
jl
sbb
retf
push
mov
fnstcw
jmp
gs
pop
pop
xor
hlt
lahf
cwde
dec
mov
and
sbb
test
mov
movs
push
fisttp
adc
jae
adc
mov
repnz
cld
cmp
stos
cli
cmp
add
xchg
(bad)
xor
mov
dec
sbb
mov
or
adc
das
add
xchg
or
or
retf
jnp
jae
or
pop
aas
add
(bad)
pop
dec
js
scas
add
sub
adc
xchg
mov
pushf
sub
mov
mov
sbb
push
push
add
in
add
idiv
push
jne
jae
add
in
mov
movs
pop
pop
(bad)
jae
(bad)
pop
adc
jge
mov
psrld
jae
lea
(bad)
mov
adc
fimul
inc
mov
push
jnp
push
xor
jg
and
jne
scas
adc
outs
imul
lock
dec
mov
cmp
aam
cdq
push
repz
rcl
mov
es
test
add
cmc
popa
sub
or
xchg
sub
mov
outs
js
int
sub
xlat
fs
pop
xor
fidivr
jnp
add
pop
mov
std
jb
and
aas
jl
jecxz
cli
jp
lea
xchg
sub
cmps
dec
fnstcw
(bad)
jmp
cmp
or
(bad)
out
mov
test
add
dec
bnd
cwde
lods
bound
fs
jnp
sub
push
push
mov
ds
push
pop
jbe
ins
mov
call
or
leave
sbb
pusha
push
and
pop
fmul
call
sti
jmp
jg
push
sbb
and
adc
loop
sar
fdiv
xchg
int3
hlt
jns
jl
mov
pop
mov
div
daa
adc
and
sar
xor
rol
or
lods
jp
iret
inc
xchg
(bad)
jecxz
jle
xchg
or
pop
aas
idiv
mov
cmp
dec
pop
lods
mov
mov
pop
push
idiv
push
or
mov
fcomp
and
xchg
enter
mov
movs
jge
adc
sbb
dec
popa
sub
fwait
pop
sbb
sbb
inc
inc
daa
mov
xchg
cmp
aas
out
dec
jecxz
test
mov
pop
ret
and
fwait
push
jmp
and
push
sahf
sub
add
aaa
nop
icebp
mov
call
xchg
sbb
ret
and
jns
adc
xchg
dec
ret
dec
shl
loopne
out
adc
loope
(bad)
dec
mov
test
xor
or
cs
cli
shl
xor
fisubr
ja
cmp
xchg
xchg
call
xchg
mov
shr
add
dec
or
xor
cwde
loop
movs
and
sub
add
pop
inc
retf
sbb
mov
fld
pop
arpl
push
dec
inc
xchg
jle
pop
je
adc
mov
mov
std
jne
and
jge
inc
mov
xchg
and
pop
pop
sub
add
pop
and
lock
mov
arpl
(bad)
inc
retf
and
sti
aam
pop
sub
or
or
dec
test
iret
mov
jmp
push
int
jb
push
test
ins
add
pop
mov
fwait
in
fstp
pop
outs
sbb
int3
fild
xchg
adc
xor
sbb
add
inc
ins
jb
in
jbe
loope
add
cmp
scas
lahf
mul
nop
adc
xchg
imul
jmp
xlat
arpl
inc
int
dec
pusha
(bad)
mov
add
enter
loop
out
push
jne
push
jmp
dec
mov
mov
fnstcw
iret
dec
js
dec
jecxz
jne
fnstsw
and
in
mov
loope
cmc
xchg
popf
mov
push
dec
fdivr
pop
jb
xchg
xor
ror
adc
add
adc
clc
adc
adc
jg
mov
or
and
into
(bad)
inc
loop
inc
pop
add
add
aas
in
das
dec
pop
addr16
fsubr
and
mov
jbe
cmps
aaa
mov
rcl
mov
fimul
add
cmp
dec
mov
imul
jne
fmulp
cs
(bad)
mov
pop
ja
std
in
xchg
cmp
push
in
mov
sub
cmp
(bad)
dec
pop
jmp
jge
mov
scas
lock
inc
dec
xchg
jmp
adc
gs
push
xchg
jmp
int3
(bad)
retf
cdq
dec
je
fnsave
add
pop
ins
or
sbb
xor
je
xor
sahf
ds
psubq
mov
hlt
cdq
inc
(bad)
inc
cld
mov
pop
jmp
je
retf
adc
sti
push
and
imul
arpl
push
stc
xor
shl
push
std
fprem
in
inc
(bad)
xlat
dec
mov
inc
xor
jge
stos
jb
les
ror
arpl
popa
fidivr
out
ss
iret
jle
add
push
ja
ror
lock
add
fwait
jle
nop
retf
jge
fwait
push
jecxz
jo
inc
ret
jp
sub
pop
inc
stos
int
sub
rol
mov
idiv
adc
popf
call
and
sbb
mov
push
loopne
add
div
nop
stos
adc
shl
xlat
inc
pop
jae
(bad)
stc
push
leave
ds
cmps
ret
or
dec
mov
sub
mov
adc
imul
pop
dec
sbb
xor
(bad)
cmc
inc
scas
sub
cmp
adc
cmp
jne
xchg
dec
rcl
push
dec
stos
ins
popa
or
(bad)
cli
scas
cmp
cmp
fldcw
cmp
jb
das
xchg
scas
stc
test
mov
out
dec
dec
imul
sbb
dec
and
jns
mov
dec
icebp
arpl
dec
xor
inc
into
repnz
pop
or
add
leave
xor
fldz
sbb
push
pop
sub
retf
mov
in
ret
sbb
pop
popa
push
int
(bad)
(bad)
mov
push
call
pop
dec
xchg
in
scas
lea
push
call
ret
jbe
add
fst
setg
push
mov
aad
mov
mov
pop
xor
(bad)
std
ret
mov
jbe
and
sub
jp
sahf
add
mov
addr16
sbb
push
dec
aaa
test
cdq
mov
imul
or
(bad)
cmp
retf
push
mov
xchg
mov
sar
(bad)
in
bound
imul
and
(bad)
cmp
in
and
rol
ja
aam
jp
sub
stc
mov
fbstp
stc
mov
vcvtdq2ps
cli
push
xchg
jg
dec
mov
mov
shr
dec
dec
adc
push
popf
js
retf
lods
mov
jae
jns
aaa
inc
pop
or
add
ret
ret
jg
pop
out
jbe
loopne
loop
out
or
(bad)
loopne
pop
ficom
pop
sub
loop
dec
stos
mov
sub
movs
add
call
js
add
pop
xchg
xchg
mov
dec
mov
add
imul
add
rcr
daa
mov
pop
mov
cmps
mov
or
(bad)
fisttp
cmp
mov
push
cmps
int
or
push
pushf
mov
mov
stos
aad
xor
jo
jne
lds
enter
in
pusha
fild
sub
mov
movs
(bad)
add
mov
call
iret
pop
sub
lds
loope
bnd
test
test
repz
and
movs
(bad)
movs
push
sbb
inc
mov
xchg
cld
(bad)
mov
sub
mov
or
jle
neg
popa
int
jbe
dec
int
mov
cmp
pusha
inc
je
sub
cmps
sbb
adc
fstp
aas
(bad)
mov
into
mov
cmp
sbb
ins
cmp
icebp
imul
adc
push
retf
out
inc
cli
and
das
pusha
test
iret
cmp
pusha
fs
xchg
xor
mov
mov
mov
test
fwait
sbb
inc
pop
push
jg
loopne
xchg
popf
mov
dec
sbb
dec
fsub
inc
dec
ss
cmps
pusha
pop
test
sahf
shr
nop
imul
ss
cld
adc
fwait
mov
test
jmp
adc
fsub
xchg
js
sub
mov
pusha
push
push
jae
repnz
out
pop
xchg
lds
xchg
adc
aaa
div
jp
xchg
xor
test
pop
sbb
loop
scas
ja
out
dec
mov
mov
addr16
push
ins
sti
mov
xor
push
in
mov
loop
xlat
data16
push
mov
jge
adc
loop
outs
pushf
scas
xchg
push
fwait
sbb
push
jno
or
fisubr
lahf
dec
mov
lock
pop
in
mov
fist
test
loop
jl
xchg
es
adc
push
xchg
xor
sub
out
mov
(bad)
pop
xor
dec
inc
lahf
ss
js
mul
cmp
sbb
xchg
pop
pop
mov
mov
outs
lods
bnd
and
mov
and
cmp
repz
test
dec
dec
mov
push
xor
mov
daa
scas
sti
jg
dec
jae
or
sub
or
scas
cmp
xor
dec
cdq
arpl
sub
das
cmp
add
sbb
test
xchg
arpl
sar
sub
jg
and
inc
nop
retf
imul
pop
mov
jne
cmp
cmp
push
add
iret
lods
jns
aaa
enter
sti
xacquire
inc
iret
mov
loope
jne
hlt
popf
jp
dec
dec
or
push
mov
cli
xchg
or
jne
pop
mov
fcomp
popa
sub
jmp
(bad)
imul
(bad)
stos
xor
aam
inc
cmp
mov
js
xor
std
outs
test
push
fwait
out
rcl
sub
in
adc
mov
lock
cdq
cld
mov
lea
inc
fs
jmp
dec
sar
xadd
mov
outs
mov
push
sbb
cmc
or
push
scas
fdivr
cmp
(bad)
clc
je
stos
jnp
cli
clc
jmp
jle
dec
mov
cmp
mov
cmp
jmp
retf
add
arpl
sbb
mov
mov
mov
cmps
xchg
(bad)
or
(bad)
cmp
and
pusha
ins
popa
mov
sub
sbb
ret
mov
shl
cmp
jmp
sti
cdq
mov
sahf
fs
sub
movs
dec
xor
jmp
dec
popf
addr16
cdq
xor
cmp
into
int
mov
pop
ror
les
cdq
xor
inc
jne
and
mov
mov
push
je
ins
daa
add
mov
inc
fadd
sbb
cmp
jae
or
mov
lods
sub
not
outs
jmp
loopne
push
cmp
jg
mov
or
in
adc
jmpw
lods
push
or
push
movs
unpcklps
repnz
adc
test
movs
sbb
pop
or
and
xchg
jno
daa
test
mov
mov
and
std
mov
out
add
out
jnp
ins
sub
inc
xchg
and
aam
jecxz
into
mov
mov
(bad)
outs
mov
or
scas
mov
call
retf
imul
sbb
in
aaa
pop
(bad)
mov
outs
sbb
jnp
out
jmp
inc
push
jne
adc
rol
outs
cli
test
mov
test
mov
xor
mov
int3
test
mov
(bad)
jae
add
inc
fisubr
cli
mov
mov
clc
xor
and
mov
je
push
mov
xchg
ds
inc
or
cdq
fsubr
frstor
adc
mov
call
es
push
loope
mov
jl
inc
sub
xor
pushf
add
push
mov
loop
fiadd
call
adc
or
movs
sbb
sbb
sahf
cmps
ja
loope
adc
pop
movs
fcomp
bound
test
daa
mov
pusha
dec
(bad)
popf
jl
retf
loope
dec
xor
dec
jae
jge
loope
push
sub
bound
lds
leave
pop
jp
add
pshufw
aas
jb
pop
cmps
and
or
leave
dec
xchg
and
inc
outs
mov
cld
movs
retf
dec
cld
xchg
push
ja
cwde
or
xchg
mov
dec
sbb
push
outs
xchg
push
adc
enter
scas
mov
mov
and
xchg
test
jae
es
sbb
xchg
lahf
inc
mov
inc
inc
pop
xor
adc
dec
imul
sbb
(bad)
jl
inc
mov
daa
and
pop
(bad)
sbb
sub
inc
dec
mov
shl
push
or
outs
inc
xchg
int3
movs
pop
das
sbb
aaa
add
(bad)
cld
dec
cli
push
jne
ins
jmp
push
sbb
rcl
push
out
cmp
ss
xor
mov
scas
inc
ds
mov
inc
jne
push
jle
inc
pushf
jg
imul
or
cdq
es
jge
inc
jnp
push
int3
jne
mov
fistp
or
fldenv
inc
ja
loop
fdivrp
(bad)
out
cmp
inc
jb
add
enter
mov
pushf
mov
xchg
mov
mov
xchg
cmp
leave
(bad)
mov
out
std
push
sbb
xor
shl
inc
push
or
mov
pushf
sti
jmp
fucomip
inc
jmp
outs
jp
add
mov
inc
(bad)
(bad)
pusha
mov
mov
xor
dec
scas
lock
(bad)
arpl
ins
sysret
(bad)
jmp
mov
dec
cdq
push
jp
(bad)
fnstenv
add
xchg
sub
or
aad
add
mov
arpl
loopne
dec
mov
push
(bad)
cmp
inc
and
cs
fwait
movs
(bad)
jmp
mov
add
sbb
mov
or
test
aad
sub
sub
fs
ja
jle
mov
cmove
movs
or
cwde
xor
dec
ja
ror
scas
cmp
inc
push
and
rol
xchg
stc
je
adc
pop
and
add
cs
pop
lock
call
in
(bad)
(bad)
out
ss
xchg
add
test
jle
mov
retf
cld
aad
jns
push
push
jo
mov
xchg
xor
jb
push
push
cmp
sti
jge
adc
fs
rcr
and
movs
js
mov
dec
jmp
push
popa
pop
cwde
push
imul
repnz
cmovl
xchg
call
sbb
sub
cld
outs
mov
add
pop
pop
add
adc
inc
dec
inc
pop
push
push
and
sbb
cwde
pop
jmp
xor
ror
bnd
pop
mov
ins
xchg
pop
mov
aas
mov
cmp
adc
dec
push
jmp
mov
adc
push
mov
mov
sub
sub
push
sbb
div
mov
mov
rcl
and
inc
inc
xchg
add
push
lds
mov
adc
sbb
out
imul
sbb
add
adc
subps
push
sbb
jmp
cmp
xor
scas
(bad)
aas
push
adc
(bad)
cvtpi2ps
mov
mov
loop
jecxz
push
xor
arpl
sbb
popa
mov
xor
rcl
or
test
pop
xor
fmul
shl
bound
jmp
out
dec
push
das
mov
mov
push
sbb
sbb
push
xchg
ret
enter
adc
jle
std
scas
cmp
dec
or
outs
mov
jl
jae
push
sahf
pop
nop
in
mov
sahf
cmp
push
add
push
and
mov
ret
popf
stos
pop
dec
pop
add
push
lea
push
fiadd
pop
xor
push
jbe
xchg
ret
(bad)
dec
sub
popf
xchg
lods
xchg
out
ins
lods
sbb
add
xchg
adc
shl
sbb
mov
cmp
pop
jmp
lods
dec
or
test
and
xchg
addr16
and
aam
jg
cdq
call
mov
xor
xchg
inc
add
add
bound
fsub
lods
mov
inc
fwait
add
daa
out
ins
out
cmp
(bad)
add
fidiv
call
and
or
or
xchg
mov
shr
les
cs
dec
mov
test
(bad)
dec
or
std
mov
retf
adc
mov
movs
sbb
mov
es
pop
mov
and
and
das
or
jmp
cmovl
das
pop
movs
repz
inc
jmp
mov
frstor
es
inc
mov
xor
adc
fdivp
adc
js
add
jbe
repz
std
sub
push
push
mov
jmp
scas
bound
pop
nop
or
test
clc
aam
inc
xor
inc
mov
cmp
and
cmp
mov
or
test
(bad)
pop
lds
or
add
mov
pop
push
loopne
mov
ret
push
inc
movs
push
sub
mov
dec
and
pop
sub
je
ret
jle
xchg
jmp
pop
fdivr
call
push
add
std
aad
fcmovbe
inc
pop
das
pop
inc
dec
mov
inc
cmp
xor
jmp
sbb
movs
(bad)
iret
loope
cmps
xor
divps
xlat
das
gs
ja
or
sbb
fs
cmp
dec
outs
sub
(bad)
jo
inc
sbb
aam
ror
cwde
aaa
mov
(bad)
fs
inc
and
dec
sub
and
lea
pushf
(bad)
mov
jae
maxps
das
pushf
mov
mov
push
xor
fisttp
sbb
jp
into
fistp
push
add
xchg
add
not
out
cmp
aam
sub
fisttp
jmp
and
or
out
push
xor
and
mov
push
(bad)
hlt
inc
sti
mov
repz
cmp
movs
out
ficomp
test
iret
pusha
mov
pop
pop
push
mov
inc
enter
data16
shl
lahf
lea
outs
pop
push
aad
dec
and
fsub
test
mov
stc
jp
push
pop
xchg
jmp
cdq
out
fistp
cdq
xchg
test
xor
cwde
or
mov
or
xor
cmp
mov
sub
cmp
in
scas
xchg
ror
imul
loop
mov
retf
sbb
fist
add
in
cmp
rol
cmp
ins
jl
mov
jb
jmp
add
idiv
sub
mov
adc
sbb
and
fcmovbe
lock
xchg
add
fild
dec
push
daa
int3
cmps
adc
lahf
pop
mov
sbb
in
in
xchg
pop
enter
(bad)
xchg
cmc
sahf
shl
aam
in
xor
ins
mov
fst
or
aam
inc
sbb
test
mov
das
retf
les
repz
jp
mov
jecxz
mov
push
scas
div
aaa
pop
bound
mov
daa
dec
pop
dec
fdivr
(bad)
sub
cmp
je
mov
test
imul
sbb
loope
mov
bound
out
cli
cmp
xor
int3
das
sar
xchg
jae
mov
xchg
cmp
pop
rol
imul
ret
fadd
inc
push
mov
fsub
cdq
pop
les
sub
lahf
cli
xlat
and
cmp
xor
mov
xor
jmp
push
dec
mov
dec
jmp
imul
jecxz
dec
addr16
push
aaa
xchg
sbb
pop
xor
mov
sbb
sbb
push
call
push
or
rcr
xchg
lods
push
sub
xchg
inc
push
push
imul
fwait
ret
xchg
(bad)
pop
push
stos
inc
scas
jb
pop
pop
dec
idiv
je
pop
pop
sbb
mov
stc
adc
and
(bad)
sbb
push
xchg
push
dec
movs
dec
or
cs
add
popa
(bad)
iret
mov
call
mov
pop
mov
mov
fdivp
push
dec
mov
(bad)
and
loope
in
inc
sbb
cdq
mov
cmp
jmp
dec
shl
mov
mov
movs
lods
jnp
imul
inc
stos
sbb
mov
jno
lods
add
mov
(bad)
push
pop
out
cwde
ins
dec
(bad)
addr16
push
xor
test
loope
imul
and
inc
lods
in
and
inc
out
mov
pop
add
xchg
push
fcom
mov
adc
arpl
xor
pushf
inc
test
or
mov
cmps
cmp
ins
push
mov
xchg
dec
pop
loopne
xor
ss
pop
sbb
fisub
test
xchg
mov
xor
rcr
mov
push
add
lea
jns
or
js
jmp
mov
outs
aas
mov
cmp
push
jle
lods
mov
jecxz
xchg
and
lea
aaa
mov
mov
cdq
cli
aad
xchg
cld
test
aad
rcl
and
in
dec
shl
sbb
rcl
push
out
xor
cmp
push
dec
sbb
(bad)
dec
pop
or
cmp
cmp
cmp
mov
lods
mov
ret
out
mov
push
cmp
pop
getsec
ror
xchg
mov
retf
mov
adc
xor
mov
jmp
jp
sub
cmp
adc
inc
inc
scas
loope
xchg
jmp
in
mov
sbb
push
lods
ds
pop
add
pop
arpl
out
and
or
push
mov
add
push
jns
sti
call
aaa
addr16
add
and
cmp
not
cmp
es
inc
xor
cmp
ret
jmp
lods
imul
push
imul
sbb
aas
test
adc
cs
scas
jo
push
int
push
cmp
fnstsw
dec
ja
xor
lods
neg
jge
cmp
xchg
mov
sbb
add
cmp
fwait
xor
push
cmp
mov
sub
fmulp
(bad)
and
(bad)
pop
and
mov
scas
pop
mov
ss
inc
fnstsw
add
add
and
mov
inc
inc
pop
add
pop
mov
push
push
cmp
pop
xor
dec
push
mov
aam
mov
push
icebp
jg
xchg
and
ja
or
xchg
cmp
iret
(bad)
mov
add
gs
mov
sahf
xchg
call
je
cmc
pop
(bad)
mov
push
mov
pop
je
push
test
clc
fstp
mov
mov
sbb
adc
push
sbb
add
and
xor
mov
pop
arpl
inc
sbb
stos
inc
enter
pop
push
repnz
push
popa
(bad)
in
mov
xchg
pop
les
sbb
test
shl
(bad)
leave
add
pusha
cmovg
mov
lock
push
add
sub
jno
mov
push
inc
and
(bad)
push
jmp
(bad)
out
xor
call
test
sub
sbb
push
ficom
adc
rol
push
mov
(bad)
xchg
lods
and
jg
xor
add
outs
lahf
mov
addr16
cmps
ss
mov
fwait
stc
lods
jle
mov
jne
out
jecxz
xlat
and
or
out
sub
cmp
xor
adc
popf
push
stos
(bad)
mov
mov
mov
add
xchg
mov
fst
mov
int
repz
fs
sub
sub
add
push
push
shl
ret
xlat
(bad)
pop
pop
xchg
inc
cmp
popa
in
(bad)
jp
loopne
dec
pop
add
enter
inc
pop
mov
xlat
jg
mov
(bad)
dec
xor
sub
cs
mov
adc
scas
addr16
outs
and
mov
ins
sbb
jle
or
add
mov
cs
loop
jecxz
mov
cmovo
jae
int
cmc
mov
jp
xlat
or
outs
out
inc
jl
movs
jecxz
jb
add
jb
xchg
retf
cld
jmp
pop
push
cmp
movs
dec
mov
inc
rcl
mov
call
test
jns
mov
jae
cmp
pushf
mov
xchg
push
jle
stc
cli
je
retf
cmp
sbb
mov
cld
cmp
push
mov
adc
dec
arpl
pushf
sub
iret
mov
(bad)
fs
(bad)
sahf
out
ss
inc
and
clc
add
sbb
mov
out
test
bound
cmp
sub
lea
ss
retf
pop
sub
inc
or
push
imul
in
xor
jp
or
lods
adc
adc
(bad)
js
jmp
cld
push
retf
lds
mov
mov
push
retf
cmps
push
xor
fdivr
cmp
mov
in
not
aas
scas
jnp
inc
mov
call
cmp
test
out
xor
mov
rcl
fisttp
mov
mov
es
push
cmp
pusha
lahf
or
out
and
jmp
xchg
rol
dec
and
test
xor
loopne
es
xor
push
xor
and
js
int3
call
push
xchg
add
dec
ficomp
xchg
fadd
mov
ins
repz
push
mov
mov
sbb
cli
add
or
imul
pushf
mov
aaa
test
mov
sbb
xlat
fucomip
mov
adc
jo
jle
js
ds
shr
daa
cmp
cmp
cmc
xor
push
test
mov
xchg
ins
mov
sbb
inc
pop
outs
ins
pop
fwait
push
add
push
les
push
add
jae
das
lea
iret
dec
(bad)
sub
add
int
aad
jg
push
gs
lahf
adc
ss
dec
fs
js
out
or
fs
sbb
mov
out
mov
das
repnz
add
and
lds
int3
lahf
lea
cld
xor
ins
mov
mov
je
adc
xchg
test
outs
dec
pop
mov
fisubr
fld
mov
xchg
iret
(bad)
mov
push
dec
ret
aad
sub
call
xlat
pop
mov
or
sub
outs
mul
in
cmp
test
or
push
call
cld
and
adc
dec
aad
jmp
fstenv
rcr
and
xor
push
repnz
mov
pop
dec
arpl
fcos
sbb
mov
mov
cmp
mov
mov
fidiv
icebp
imul
ins
sbb
sub
lahf
jg
jnp
xor
inc
cmps
scas
fstp
jbe
jle
adc
sahf
ret
mov
aad
aas
cdq
push
push
lahf
movs
pusha
push
cmp
pop
jmp
stos
and
fwait
je
cli
call
fdiv
sbb
and
adc
(bad)
fst
jns
mov
pop
add
clc
xlat
jb
pop
inc
icebp
inc
iret
jne
loop
mov
mov
ror
and
sbb
imul
sub
outs
iret
mov
adc
xchg
mov
les
scas
xchg
or
push
fiadd
push
pop
mov
gs
sub
add
arpl
jno
icebp
and
or
fisttp
shl
and
mov
inc
call
cmp
xor
fidiv
into
push
xchg
sbb
xlat
pop
add
std
or
pushf
scas
jne
shr
inc
xor
cmp
pop
add
arpl
mov
pop
adc
scas
mov
jns
jmp
jecxz
and
lock
lahf
pop
(bad)
or
dec
sub
leave
scas
rcl
push
test
setnp
(bad)
and
inc
fsubr
xchg
push
and
mov
adc
out
mov
dec
push
mov
stc
shr
push
je
mov
outs
mov
mov
xchg
pop
push
pop
adc
out
dec
pushf
inc
xchg
test
add
jmp
stc
idiv
push
jo
push
in
adc
and
repnz
test
repz
inc
(bad)
and
sub
cld
data16
adc
fwait
retf
jno
mov
nop
pushf
dec
push
jg
sub
leave
test
mov
adc
scas
(bad)
dec
test
mov
data16
mov
xor
cs
daa
mov
inc
mov
rol
adc
xchg
mov
jae
movs
dec
cmp
ret
xor
lahf
in
xor
mov
xor
popf
mov
cmps
cmp
cmp
cld
sbb
add
stos
in
push
push
scas
lds
mov
inc
pop
fidivr
fst
xor
enter
icebp
cmp
vpsubusw
ins
xlat
push
mov
aam
push
test
mov
out
neg
test
jae
lds
pop
mov
scas
jno
mov
mov
push
popf
xchg
mov
iret
or
pop
lahf
pop
shr
mov
out
dec
xchg
sbb
or
fs
jmp
mov
jmp
popa
les
xor
cmps
dec
mov
mov
test
fcmovnu
(bad)
loopne
sbb
add
sbb
lods
mov
pusha
sub
xchg
jnp
jmp
sub
or
loopne
int
jb
xchg
and
ret
cli
(bad)
clc
addr16
stos
outs
jge
or
pop
aaa
mov
mov
fsub
push
sub
lds
dec
dec
sar
stos
and
xor
add
dec
jmp
adc
mov
mov
gs
retf
dec
mov
ret
in
push
inc
ret
xlat
lods
and
popa
mov
retf
fwait
imul
mov
dec
add
xor
mov
(bad)
inc
fs
pop
pop
mov
cmp
add
gs
stos
mov
addr16
shr
int3
ins
inc
out
(bad)
ror
xchg
dec
ret
cdq
adc
xor
scas
(bad)
sub
fwait
xor
add
adc
gs
dec
cmp
ret
es
sub
mov
aam
test
xor
cs
mov
add
stos
sti
or
sub
and
mov
mov
pop
dec
cld
pop
xor
into
jle
and
mov
fsub
pop
scas
add
movs
int3
xchg
dec
mov
iret
(bad)
fist
mov
inc
xchg
inc
in
jecxz
push
cmp
rsm
sti
mov
fs
ret
int
shl
add
inc
fs
xchg
xor
dec
and
stos
add
fcomi
into
in
mov
pop
fcomp
dec
cmp
jle
inc
pop
dec
leave
outs
in
jbe
cmp
outs
fadd
ffree
or
cmp
mov
pop
loopne
cmp
retf
rcl
(bad)
sbb
jne
arpl
mov
test
sub
cmp
sbb
out
xor
pop
jo
xor
cmp
dec
test
xchg
icebp
xchg
mov
mov
and
sub
leave
sub
mov
lds
or
repz
cli
add
dec
jmp
bound
(bad)
lock
add
fcomp
lds
inc
mov
(bad)
imul
daa
pop
rcl
sub
pop
jbe
add
scas
inc
cmp
jns
jno
mov
out
in
xor
ss
inc
outs
ins
test
mov
adc
jp
sub
xchg
add
ret
imul
and
push
jle
(bad)
xchg
mov
aad
loop
iret
xor
or
cs
sub
push
bound
jns
add
loope
push
popa
adc
push
sbb
cmp
cmp
movs
mov
sub
cmp
or
mov
dec
gs
mov
pop
mov
jne
out
not
bnd
pop
xor
retf
test
mov
add
popf
dec
jle
mov
push
pushf
cmp
cmp
pushf
push
not
pop
sahf
lea
ds
xchg
jns
rcr
xchg
xor
jnp
popa
sub
es
fidivr
imul
icebp
aaa
xchg
(bad)
in
pop
mov
mov
dec
(bad)
cmp
push
sub
mov
leave
mov
out
arpl
xchg
retf
jb
lahf
xor
pop
inc
xlat
push
hlt
lods
pusha
fldln2
push
rcr
sub
popa
movsx
mov
cmps
imul
mov
std
mov
xchg
in
test
sbb
add
xor
jmp
mov
inc
and
lds
mov
fistp
cmc
(bad)
jge
jmp
cmp
jl
jo
lods
dec
ds
jmp
xchg
pop
xor
loop
jle
loop
xor
mov
out
fbstp
mov
fwait
das
call
addr16
or
js
xchg
push
xor
jmp
dec
ret
sub
mov
rol
and
xor
mov
test
cmc
and
movs
sub
in
jmp
test
popa
mov
adc
cs
icebp
scas
fdiv
adc
fisubr
dec
sti
test
push
mov
std
arpl
inc
cmp
es
pop
fwait
and
mov
sbb
mov
jge
inc
dec
cld
stos
aas
or
pop
aad
or
sbb
dec
test
adc
aad
jmp
retf
out
fsubr
dec
sub
call
or
add
aaa
adc
xor
les
fsub
mov
fs
loop
pushf
popa
popf
fdiv
cmps
cmp
jg
mov
cmps
dec
xor
sub
outs
pop
sbb
add
f2xm1
sbb
mov
(bad)
push
loope
mov
pop
or
nop
xchg
out
sbb
mov
cmp
xchg
addr16
adc
imul
sub
pop
cld
ror
and
jnp
mov
xchg
aaa
pop
outs
add
int3
rcr
and
jmp
mov
in
sub
pop
sbb
cmp
cmp
pop
jmp
ret
test
fcmove
mov
sti
mov
and
xor
int
daa
push
sbb
test
popf
jne
cmp
out
aas
fisttp
pop
sti
(bad)
pop
sub
dec
push
add
sub
bound
sbb
sub
push
mov
xchg
push
mov
jmp
push
mov
fistp
ja
lods
lods
test
xlat
sbb
xchg
gs
sti
scas
jb
loop
jp
fbld
outs
push
aad
mov
mov
mov
hlt
jne
jns
retf
movs
(bad)
loope
ror
xor
or
push
sahf
fs
pop
jb
adc
pop
pushf
jl
or
mov
in
movs
sub
pop
mov
sbb
fwait
xchg
inc
cdq
push
xor
and
lods
jbe
js
les
mov
mov
jp
jge
jecxz
or
cmovl
sbb
out
mov
inc
stc
cs
push
(bad)
and
scas
dec
dec
lods
test
mov
xchg
adc
(bad)
xchg
xor
div
xchg
enter
repnz
jns
xchg
cwde
push
and
cmp
pushf
xlat
push
add
jb
mov
dec
jmp
cdq
mov
push
adc
iret
imul
outs
hlt
out
ds
add
je
or
clc
cmp
jae
cmovnp
dec
add
mov
shl
shl
(bad)
jge
shr
mov
in
loopne
cmp
xor
test
xchg
imul
ficom
sub
cmc
mov
mov
and
mov
jno
fidivr
outs
mov
ins
jmp
test
aaa
popf
pop
mov
out
sbb
outs
jecxz
jge
out
inc
out
loop
and
into
xor
add
and
lock
xor
in
shl
retf
ss
inc
or
iret
iret
sub
dec
and
sub
pop
push
xchg
in
fild
stc
js
sahf
(bad)
push
jbe
scas
sub
or
mov
cmp
and
cmp
stos
shl
fstp
ss
xor
mov
aas
fstp
aam
adc
add
or
jge
push
ins
sbb
sub
lahf
or
push
popa
ins
jns
scas
jl
dec
(bad)
fcomp
idiv
push
enter
dec
mov
mov
out
out
nop
out
xchg
stc
cli
inc
fs
cli
jmp
ja
jnp
or
jae
hlt
push
cmps
pop
mov
and
xchg
call
fcomp
add
test
push
outs
add
sar
push
pop
shr
and
dec
mov
sub
sub
inc
icebp
les
xor
xor
mov
imul
repz
sbb
lods
push
and
push
(bad)
push
nop
mov
test
fs
rol
fst
sub
and
xor
out
xor
fisub
xchg
xchg
outs
mov
mov
mov
cmps
mov
mov
inc
shr
icebp
mov
call
pop
out
loopne
jae
fadd
push
fwait
(bad)
retf
test
dec
imul
jae
test
sbb
mov
inc
bound
outs
aas
test
aas
test
leave
in
dec
pop
sti
cmps
shl
xchg
ss
dec
pop
sbb
in
mov
dec
mov
lock
stc
add
faddp
pop
mov
jecxz
jecxz
out
rol
xor
out
lock
cdq
mov
xchg
ret
stc
jl
shl
jns
adc
in
fsubr
sub
cmp
sub
cmp
loop
sbb
push
test
push
int3
daa
adc
dec
es
or
cwde
push
add
outs
cmp
arpl
pop
out
or
inc
scas
(bad)
mov
loopne
retf
mov
or
into
sbb
cli
add
adc
inc
inc
cmp
and
test
jge
inc
xchg
sahf
neg
push
cli
pop
push
sub
retf
xchg
and
out
adc
cdq
jno
jmp
adc
adc
cdq
mov
inc
inc
inc
add
cmp
lock
push
cmps
mov
scas
add
jge
jecxz
jle
adc
cmp
jge
out
clc
mov
jle
rol
push
push
mov
lahf
mov
and
fwait
jmp
ror
add
popa
leave
out
mov
xor
inc
mov
add
pop
push
xchg
enter
mov
pop
in
clc
mov
in
repnz
push
mov
mov
jp
dec
jmp
stos
jnp
jecxz
inc
call
dec
inc
sbb
dec
out
test
ds
add
repz
jmp
movs
fistp
loop
sub
loope
test
retf
test
pop
xchg
enter
sbb
popa
cmp
btr
sub
std
add
xor
pop
add
jne
aas
or
and
xchg
mov
std
xlat
stos
sub
or
out
shl
inc
mov
and
iret
loop
cmp
sbb
push
pop
jb
pop
aad
push
mov
ja
cmp
add
arpl
movs
dec
dec
pushf
and
cwde
repz
dec
das
pushf
mov
test
pop
pop
jb
mov
mov
cmp
mov
sbb
xchg
cli
rcr
int3
push
adc
mov
push
sbb
repz
loope
test
or
inc
or
xor
cmp
leave
cmp
stos
sti
aam
pop
sti
jle
daa
ins
mov
cmp
(bad)
pop
or
adc
mov
xchg
dec
and
push
cmp
inc
push
fdiv
ja
ret
pushf
and
enter
test
and
xor
mov
push
xchg
inc
mov
(bad)
dec
(bad)
sub
add
daa
xor
cmp
xor
mov
aad
mov
sti
js
ja
jnp
push
dec
arpl
repz
push
out
push
addr16
cmp
into
xchg
xlat
test
mov
in
(bad)
dec
cmp
loopne
int
test
fistp
and
jb
fidivr
lock
test
xchg
xchg
or
cmps
loope
ror
out
cmp
mov
punpcklbw
clc
mov
lods
movs
push
inc
or
popa
(bad)
adc
lea
stos
les
fs
popa
add
push
in
xor
jle
mov
test
enter
pop
aaa
mov
mov
js
clc
les
in
adc
push
sub
push
and
pop
js
iret
or
and
pusha
cdq
je
sub
(bad)
test
add
push
stc
xor
int
push
jp
cmc
inc
cdq
inc
jmp
rcr
cmp
push
sbb
xchg
mov
mov
sub
lahf
jnp
mov
(bad)
fucom
test
in
cmp
cs
ret
adc
push
shl
icebp
pop
and
xor
xchg
adc
pop
fs
cld
(bad)
pop
and
adc
cmp
add
mov
and
gs
data16
sysexit
and
fidiv
adc
sub
fs
xchg
jo
clc
mov
fs
imul
jns
mov
or
dec
das
mov
or
mov
(bad)
nop
adc
in
nop
mov
inc
xchg
xchg
imul
pop
cmc
into
or
pop
ss
and
test
aam
push
xchg
mov
cld
nop
out
jb
adc
aad
push
push
(bad)
cmc
mov
stos
push
pand
call
outs
add
enter
cmp
(bad)
sub
hlt
into
int
into
cmp
stc
xchg
cmps
jmp
pop
mov
sub
or
dec
xchg
mov
pushf
sti
loope
xchg
xchg
(bad)
sub
ins
ins
xchg
retf
jb
fld
retf
jg
add
push
retf
sub
sbb
cmp
jmp
test
das
out
adc
sbb
mov
scas
neg
pop
mov
or
dec
cmp
sbb
pop
dec
sbb
pop
fwait
(bad)
sub
sub
add
push
fwait
jae
sub
push
retf
sbb
out
out
sbb
sti
aaa
jle
add
adc
and
xor
gs
movs
addr16
sub
add
lea
enter
(bad)
repnz
sub
xor
imul
stos
aam
call
fiadd
pop
retf
inc
inc
js
xchg
pop
gs
adc
cmp
cmp
stos
sti
cld
push
mov
push
adc
in
inc
lock
ret
push
in
nop
dec
mov
out
or
jae
push
nop
dec
in
jge
fld
mov
je
pop
rcl
xor
push
in
test
push
mov
outs
sbb
xor
and
sbb
or
pop
(bad)
jle
xor
mov
outs
fs
dec
mov
cmp
pop
xor
test
jb
fwait
imul
cmc
fstp
mov
into
jne
ins
mov
icebp
jns
mov
jge
daa
xchg
dec
mov
lods
push
(bad)
mov
sub
cwde
test
sub
push
arpl
js
mov
test
in
in
(bad)
neg
popa
jmp
fimul
jg
cmp
jmp
xchg
call
or
dec
xchg
xor
es
inc
xchg
and
pop
xchg
and
lock
into
jns
dec
xor
xor
pop
cmps
inc
xchg
push
sbb
add
ins
cld
dec
push
mov
popa
xchg
push
sub
arpl
or
xchg
(bad)
and
adc
movs
das
and
lds
push
stc
aad
xchg
push
xchg
out
aad
popf
mov
inc
inc
mov
sbb
lea
popf
xor
imul
fimul
sub
aam
gs
gs
test
or
jmp
mov
stos
imul
cmp
inc
sbb
sub
pop
int3
xchg
mov
xor
les
jo
adc
ja
dec
leave
cmp
jne
xchg
mul
data16
out
js
push
sub
dec
adc
std
rol
xor
sbb
add
stos
movs
cmc
xchg
js
test
rol
pop
repnz
adc
call
xchg
jmp
push
stc
nop
(bad)
pop
push
(bad)
dec
mov
adc
pop
add
push
push
sbb
sbb
xchg
call
mov
fwait
pop
jge
push
cmc
in
fcomp
pop
xor
pusha
pop
push
cmp
(bad)
mov
ror
sub
imul
(bad)
jp
inc
pop
clc
xor
xchg
pop
scas
xor
(bad)
sti
inc
test
fsubr
vsqrtps
in
and
(bad)
and
out
push
(bad)
push
mov
jae
pop
mov
stos
popf
ret
call
sbb
sbb
into
aad
rcl
pop
test
jae
push
clc
fisubr
iret
dec
xchg
movs
(bad)
fdiv
stos
xchg
sahf
push
mov
call
or
data16
inc
xchg
inc
jnp
inc
popf
repnz
mov
cmp
mov
jno
add
mov
add
sbb
shl
push
mov
sub
jae
aam
movs
ins
pushf
arpl
aad
inc
mov
(bad)
lock
adc
(bad)
cmp
aam
add
mov
push
push
jl
icebp
icebp
(bad)
clc
rol
cmps
in
sbb
add
in
lods
out
jg
test
and
(bad)
push
call
or
and
jbe
xchg
rcr
add
fisubr
mov
inc
stos
div
jg
lds
rcl
ret
jbe
movs
cs
aam
cwde
mov
adc
xchg
mov
(bad)
pop
ins
mov
adc
and
push
ins
jae
(bad)
js
xor
or
add
add
mov
mov
add
je
and
dec
lods
not
mov
icebp
fistp
inc
mov
inc
int3
mov
inc
sbb
inc
int3
add
mov
cs
add
ja
sbb
dec
call
push
cmps
jnp
test
pop
add
dec
sub
or
in
scas
rcl
add
dec
sbb
loope
and
sbb
adc
xchg
mov
sbb
call
xchg
movs
aad
xor
fnstsw
xor
xchg
xchg
cdq
dec
mov
(bad)
jmp
and
adc
inc
push
sbb
in
scas
sub
test
clc
mov
push
or
mov
sbb
inc
cmp
(bad)
lods
aas
cmp
dec
aas
xchg
icebp
dec
cmp
dec
cmps
inc
pop
dec
rcr
aas
adc
enter
and
jns
mov
push
(bad)
and
mov
inc
sub
mov
in
mov
icebp
dec
shr
and
cli
gs
les
ins
out
xchg
mov
shr
inc
lds
xchg
push
test
cmp
mov
cmp
or
add
jnp
iret
xchg
xor
pop
js
repz
or
xor
jo
int
dec
sahf
add
pusha
mov
inc
adc
xchg
loope
repz
pop
lods
bound
pop
das
adc
xchg
sahf
pop
jmp
adc
inc
inc
push
outs
cmp
mov
adc
rcr
sub
imul
shr
das
lock
lods
add
jmp
and
and
mov
test
lds
movs
dec
jae
repnz
xchg
loope
xlat
in
inc
div
inc
lahf
push
movs
inc
repnz
in
movs
jb
mov
xchg
xchg
jmp
jg
push
and
cmp
add
mov
repz
jns
mov
push
pop
adc
call
push
push
sbb
sub
loop
jg
lods
jne
dec
or
movs
aas
adc
push
push
hlt
xchg
cmp
inc
jb
jp
sbb
mov
idiv
xor
addr16
test
and
sbb
sub
rcr
mov
pop
cdq
imul
(bad)
or
pop
out
xchg
mov
mov
test
push
inc
mov
push
mov
shl
sub
push
das
in
movs
pop
xchg
pop
stc
ss
or
fucom
sub
sub
sub
xor
out
jl
inc
and
sub
jp
jns
adc
mov
mov
pop
hlt
adc
mov
or
repnz
clc
jecxz
rol
lds
(bad)
sub
jne
das
cmp
xor
xchg
mov
adc
out
(bad)
ret
lahf
jnp
cmp
add
ret
xor
(bad)
fwait
test
mov
mov
dec
or
cmps
cmp
lods
xchg
nop
pop
das
cld
(bad)
mov
pop
push
and
xor
imul
bound
and
mov
psadbw
repnz
sub
push
mov
dec
mov
inc
imul
xchg
in
xchg
sub
cdq
into
pop
push
mov
or
nop
push
lea
cmovbe
inc
jmp
int
jmp
sub
lods
or
push
jne
fst
dec
xchg
sbb
aaa
dec
add
popf
stos
dec
mov
lahf
xchg
mov
or
pop
(bad)
cs
jecxz
aas
adc
pop
xchg
inc
test
pop
and
mov
pop
in
ins
gs
call
shl
mov
dec
sbb
cdq
add
scas
call
es
push
ja
xchg
push
ds
lods
js
fcom
aam
adc
dec
das
out
dec
icebp
mov
dec
mov
idiv
repz
shr
popa
ror
lods
call
adc
popf
mov
xor
xor
(bad)
aam
or
pop
fidiv
sar
jns
into
push
mov
jb
sub
setg
sub
sti
jecxz
ins
(bad)
or
addr16
jns
sar
or
add
test
jmp
jp
out
je
jg
and
add
fst
jle
inc
push
mov
into
pop
call
mov
(bad)
push
dec
shl
loopne
jne
pop
or
int
dec
mov
rcl
shl
jo
inc
sub
sbb
in
jp
pushf
xchg
je
push
loop
dec
sbb
or
ja
sub
pushf
xchg
fcmovb
mov
xor
into
or
cld
into
xchg
add
pop
xor
dec
lods
not
and
int
dec
out
sub
sub
ret
pusha
push
test
inc
mov
adc
pusha
mov
add
push
stc
nop
enter
cmc
ja
jmp
or
or
fld
stos
mov
(bad)
aas
push
aas
mov
daa
nop
(bad)
mov
shr
cmp
div
push
gs
jnp
pop
pop
call
pop
mov
or
add
mov
jl
dec
scas
or
lods
push
ja
(bad)
adc
bound
fild
adc
mov
mul
mov
pop
xchg
ja
ror
scas
scas
dec
inc
ror
xchg
mov
call
push
dec
adc
jl
sbb
imul
xor
dec
jp
call
or
(bad)
or
inc
or
xor
pop
sub
sub
mov
retf
loop
pop
xlat
lods
mov
mul
(bad)
ins
sub
rcl
pop
mov
cmc
push
out
xor
mov
and
cmp
pop
xor
clc
xchg
dec
xlat
adc
imul
cmp
and
loopne
sbb
outs
lahf
xchg
add
pop
cdq
or
xchg
xlat
daa
sahf
jge
fs
push
jnp
jns
cmp
cdq
fdiv
lock
sub
lods
xor
xchg
or
add
pop
sub
xchg
or
push
and
les
sahf
cli
mov
ret
pop
mov
cmp
out
in
pop
in
data16
icebp
fwait
inc
lahf
jns
jno
out
sbb
xchg
mov
dec
iret
bound
test
pop
pop
pushf
test
mov
sub
xor
enter
cmp
lock
call
mov
sbb
call
fadd
fstp
sub
pop
aas
fld
pop
jmp
and
(bad)
fsub
sbb
xor
inc
xor
xchg
gs
ds
loope
mov
dec
fs
xlat
into
mov
test
les
inc
icebp
retf
mov
dec
cdq
ret
lods
les
dec
enter
add
fdiv
mov
push
xchg
outs
cli
xchg
retf
mov
mov
cli
clc
pop
test
fidivr
pop
push
push
(bad)
adc
nop
movs
mov
sbb
cli
sub
mov
add
adc
rol
(bad)
mov
cdq
imul
ret
daa
mov
sti
or
cmovs
jo
cmps
and
loopne
pop
sbb
mov
inc
aas
push
enter
pop
loope
stos
(bad)
jmp
add
push
sub
je
sahf
out
mov
mov
popa
out
int3
jg
arpl
mov
int
int3
enter
add
push
ins
sar
neg
or
jb
les
fwait
call
ror
dec
popa
dec
inc
sti
out
(bad)
rol
jno
cld
gs
std
sahf
or
push
imul
fnsave
popa
jne
mov
stc
dec
movs
sub
or
loopne
cdq
int
cwde
pop
(bad)
and
(bad)
jnp
outs
pushf
je
mov
mov
jge
enter
hlt
mov
sbb
sub
mov
pcmpeqd
jbe
mov
sub
fs
dec
inc
movs
in
push
or
mov
bt
add
retf
dec
arpl
cli
lock
lods
sub
mov
inc
(bad)
je
push
jecxz
test
and
movq
cs
sbb
mov
retf
or
adc
inc
cmp
test
outs
in
add
jp
movaps
push
push
mov
fdivr
cdq
jle
fnclex
and
call
sub
fbstp
pop
cmp
fild
inc
xor
sub
loope
mov
loop
inc
ins
ss
adc
fdiv
xor
and
push
mov
xor
push
ins
xchg
push
stos
das
xor
out
ins
push
sbb
jb
aas
imul
mov
outs
test
lods
ret
dec
xor
sub
dec
xlat
dec
aas
lock
jnp
cmp
loope
jo
fld
addr16
fisubr
inc
jb
mov
mov
scas
mov
outs
push
inc
sar
stos
xlat
xchg
repnz
add
and
movs
cmc
mov
retf
push
xchg
inc
mov
xchg
loop
mov
stos
mov
test
xor
jmp
fs
mov
(bad)
fild
(bad)
mov
cmp
addr16
push
dec
sahf
popa
fldcw
outs
imul
arpl
or
mov
stos
test
pop
jecxz
add
jle
ror
push
ds
ror
popa
sub
repnz
mov
ins
pop
pop
out
cmc
pop
loope
add
inc
fisubr
mov
call
fsub
sar
inc
jp
test
stos
xchg
(bad)
jnp
jl
push
rcl
cwde
sets
ffree
iret
aas
fwait
mov
sbb
div
psadbw
cmp
into
xlat
push
jne
neg
mov
test
xchg
pop
in
mov
push
mov
das
dec
std
sub
aas
mov
mov
shr
sub
ins
inc
xchg
mov
jno
cmp
adc
repnz
ins
popa
mov
lahf
dec
mov
(bad)
sbb
inc
mov
out
xor
loope
and
int
jb
ret
push
idiv
jo
retf
jecxz
adc
mov
jne
mov
pop
in
sbb
icebp
(bad)
and
out
loopne
jl
shr
loop
leave
(bad)
jo
jmp
lock
sbb
sub
jmp
(bad)
out
cmp
arpl
pop
push
sub
jnp
cmp
adc
and
repz
rcr
scas
mov
jp
addr16
xlat
push
out
inc
jo
jo
push
(bad)
leave
stc
add
scas
sbb
pop
div
jmp
fwait
xchg
leave
mov
push
push
xor
jno
(bad)
jl
inc
int3
ins
dec
test
rcl
and
stos
mov
mov
lea
adc
mov
aad
adc
ja
ror
sub
pushf
dec
loopne
cmp
lahf
add
lea
scas
sbb
test
inc
push
add
repnz
jae
std
sbb
jl
adc
xor
push
add
in
xor
xchg
cmps
enter
xchg
outs
lds
cmovge
or
cwde
add
pop
test
push
aas
dec
jns
mov
push
cmp
mov
addr16
mov
icebp
cli
aad
mov
lods
push
jg
in
mov
push
push
cmc
jl
int3
les
inc
mov
hlt
jno
rol
in
push
fcomp
movs
ja
mov
mov
(bad)
jno
lods
scas
pop
inc
jle
jnp
mov
jl
(bad)
sahf
dec
xchg
sbb
mov
stc
(bad)
repz
jmp
aas
xor
xchg
push
xlat
jb
ds
adc
adc
test
push
or
int
repz
sub
cmp
jmp
ins
retf
iret
mov
xor
adc
mov
stos
arpl
test
aaa
jle
mov
sub
sahf
neg
adc
cmc
add
cmps
les
enter
sar
jg
xor
sub
scas
inc
js
xor
sbb
popa
leave
sahf
xor
retf
jo
push
popa
loopne
push
xchg
pop
es
pop
mov
(bad)
adc
sbb
inc
clc
xor
inc
call
jle
test
inc
push
out
outs
repz
or
adc
test
pushf
fisttp
mov
cli
jns
sub
js
popf
sbb
adc
and
add
shl
sub
and
arpl
mov
movs
jns
shl
jb
dec
test
ret
mov
inc
mov
jmp
ret
lahf
sub
sbb
xor
clc
repnz
jbe
sbb
mov
cmps
addr16
and
call
aas
cwde
jne
out
fidiv
cli
aad
inc
xchg
xchg
loopne
cwde
adc
ss
mov
mov
push
cmp
inc
adc
dec
dec
enter
ins
popa
cmps
push
fild
clc
movs
adc
fcomip
sub
call
xchg
add
popf
mov
push
lods
jp
pop
dec
js
ins
bound
pop
retf
stos
adc
sub
jo
lods
mov
mov
cmp
mov
inc
sub
(bad)
fnsave
inc
ins
sbb
ret
push
jae
sub
dec
sahf
scas
enter
mov
and
mov
inc
sbb
ret
jmp
jnp
push
(bad)
mov
add
aas
mov
int
xchg
xchg
sbb
sahf
add
rcl
out
dec
add
les
daa
or
pop
inc
push
push
cwde
push
xor
push
outs
lods
fs
leave
pop
arpl
mov
jbe
inc
or
ficomp
cli
enter
xlat
mov
jp
retf
jae
xor
shl
stos
repz
xchg
xor
popa
call
enter
cmps
pop
outs
cmp
xchg
(bad)
pusha
cmp
sub
xchg
shl
ss
pop
xor
mov
rcl
jmp
loop
xchg
popf
pop
ss
shr
jecxz
arpl
movs
pop
sbb
call
push
iret
jne
jp
mov
mov
jmp
jle
jp
fnstenv
cmps
fsub
add
outs
in
cmps
icebp
out
cvtdq2ps
pop
xchg
bswap
cdq
js
jo
push
fstp
adc
rcr
push
mov
cmc
cmps
or
stc
adc
jge
in
push
add
mov
dec
jns
sbb
sti
imul
movs
sub
and
movs
cmps
dec
sub
sahf
nop
mov
xchg
dec
test
pop
mov
sahf
jle
mov
push
xchg
jne
in
mov
xchg
mov
retf
lods
xchg
pop
jle
mov
push
stos
mov
lods
add
ja
nop
ins
pop
ret
sub
fs
add
and
xor
pop
sbb
adc
leave
dec
(bad)
xlat
push
dec
and
mov
out
push
mov
lods
inc
cmps
cmp
cdq
adc
jmp
enter
movs
cmps
and
jbe
mov
stos
daa
shl
add
sti
out
push
or
mov
movs
stos
inc
scas
mov
jmp
(bad)
push
pop
push
ins
sbb
in
sbb
or
sbb
pop
call
add
hlt
jmp
cli
scas
mov
and
mov
and
push
sbb
inc
add
addr16
dec
retf
and
sub
and
adc
mov
pop
cwde
xor
add
mov
add
push
inc
and
inc
xlat
mov
dec
imul
mov
out
pop
in
call
in
enter
leave
vpmulhuw
inc
xor
mov
jecxz
lea
sbb
iret
fst
fild
cmp
cmc
dec
mov
nop
stos
inc
pop
mov
cwde
add
add
rcr
in
test
mov
pop
loop
adc
add
mov
or
dec
test
jnp
lods
add
jmp
out
mov
ss
dec
or
shl
and
aam
mov
inc
cmp
fisttp
pop
xchg
jmp
pop
sar
movs
inc
cmp
popf
jg
movs
scas
ins
das
test
lea
mov
inc
jl
dec
xchg
ja
lods
test
sbb
es
xchg
div
and
cwde
movs
int3
mov
aas
loop
icebp
pop
xor
mov
xchg
loopne
fndisi(8087
mov
cmp
cmp
mov
movs
adc
adc
mov
jg
nop
push
(bad)
bound
fisttp
sub
sub
or
les
ret
out
push
or
sbb
pop
and
pop
les
ficomp
ja
push
into
xor
gs
xchg
call
test
dec
pop
out
movs
dec
out
sub
mov
xor
fisttp
mov
hlt
shl
mov
pop
xor
fs
int
add
mov
pop
aad
or
mov
sbb
and
scas
inc
stos
xor
pop
and
ror
mov
jg
iret
inc
xchg
cmp
xor
cmps
add
push
sti
(bad)
out
aaa
xor
mov
xchg
push
pop
xchg
jno
xchg
loope
sub
hlt
shl
push
out
fcmove
jmp
mov
pop
xchg
sbb
inc
daa
leave
fidivr
loop
xor
sub
aas
cmp
cmp
out
fadd
jmp
aad
lock
daa
mov
pop
inc
cdq
fnclex
cdq
add
bound
mov
repz
in
xchg
push
xor
jl
add
mov
xor
fsubp
mov
sub
leave
out
or
push
mov
push
sbb
cmp
lods
dec
mov
outs
shl
stc
sub
shr
xor
mov
test
int3
icebp
push
aas
(bad)
mov
cld
lsl
in
xchg
dec
push
in
push
in
jnp
lods
mov
and
cmp
loop
or
popf
lock
pop
pusha
pop
fsubr
and
out
in
or
mov
fdivr
in
jp
movs
out
(bad)
mov
or
ja
es
repz
jns
push
mov
adc
inc
js
or
xchg
int3
inc
iret
pop
(bad)
outs
xchg
je
and
aad
shr
push
hlt
pop
sti
retf
shl
ffreep
out
cdq
repz
mov
jmp
add
add
ds
inc
scas
pand
or
(bad)
mov
add
xchg
push
(bad)
(bad)
push
inc
leave
adc
js
test
inc
icebp
mov
push
in
sbb
xchg
xlat
cmp
call
div
sbb
and
stos
cmc
mov
inc
jbe
pop
add
cmp
jl
out
jo
jno
dec
pop
add
mov
inc
push
cmp
lahf
lock
dec
pop
test
sub
popa
rol
mov
push
mov
inc
mov
stos
popa
daa
push
jbe
retf
lock
retf
mov
jp
(bad)
mov
pop
mov
shl
pop
add
int
inc
mov
mov
jmp
int
mov
pop
stos
(bad)
push
sbb
add
pop
mov
push
dec
retf
cdq
cmp
and
int3
add
cmp
cmps
ret
fwait
jno
cmps
mov
xchg
pushf
push
xor
sbb
add
or
mov
adc
js
jb
sub
repnz
mov
xchg
sub
jbe
sbb
jge
and
jb
cmp
mov
mov
fsub
or
adc
mov
fdiv
inc
cmc
inc
jo
mov
and
cmps
movs
pop
aaa
mov
or
fxch
jmp
sub
and
gs
xor
cmp
jmp
pushf
inc
adc
test
gs
ret
dec
out
jmp
push
fwait
xor
aas
mov
inc
lods
cmps
stos
lea
sti
int3
mov
scas
rcr
pusha
xlat
add
fstp
xchg
inc
sub
jl
inc
mov
fbstp
sbb
push
jp
dec
sahf
or
sbb
xor
jmp
(bad)
xchg
cwde
dec
(bad)
in
mov
sbb
shl
test
scas
xchg
pop
aas
and
stos
in
dec
push
add
retf
sar
pop
js
sti
adc
das
push
sub
aaa
push
inc
cld
lods
cmp
sub
rcr
jmp
out
adc
add
cmps
pusha
jns
xchg
inc
adc
xchg
push
or
cmps
aam
mov
ret
add
adc
mov
mov
sub
scas
mov
pop
aaa
cli
ret
jp
addr16
movs
std
call
jl
add
or
lods
add
je
dec
mov
xor
cmc
jb
sti
bound
push
dec
xor
or
pop
movlps
iret
sub
shl
sbb
sar
test
imul
fcmovu
push
imul
fisubr
push
lock
(bad)
repnz
movs
(bad)
push
stos
sar
xor
and
jnp
lock
xchg
pop
in
mov
jb
ins
inc
stos
retf
mov
addr16
cmp
cmc
je
pop
mov
xchg
mov
mov
or
fstp
(bad)
sub
repnz
push
pop
mov
or
mov
xchg
or
fsubr
ret
aad
cwde
mov
pop
xor
repz
dec
mov
sbb
fwait
pop
mov
cmc
pop
jmp
dec
jbe
or
shl
or
bnd
dec
mov
jge
pop
mov
shl
add
push
clc
rol
fcmovu
test
cmps
mov
jno
lea
retf
jae
and
inc
js
mov
sub
hlt
es
cmp
daa
fdiv
adc
aas
ja
(bad)
sbb
mov
fsubr
mov
mov
mov
pop
mov
ja
std
mov
push
dec
vpmaxub
leave
fdiv
repz
pop
pop
scas
fsub
xchg
dec
pop
std
pop
push
push
cld
and
jno
cmp
and
aad
imul
xor
neg
mov
jg
jmp
mov
ss
dec
push
mov
(bad)
retf
int
mov
mov
add
cmp
adc
lahf
or
nop
std
inc
jbe
xchg
mov
sbb
test
push
add
in
(bad)
push
add
call
push
test
pop
xchg
xchg
outs
xchg
pop
jg
pop
ret
in
neg
nop
clc
xor
outs
out
mov
ret
xchg
js
adc
cmc
fsubr
jb
repz
push
mov
movs
cdq
push
mov
push
les
call
jp
das
ja
scas
into
outs
jmp
mov
in
mov
mov
fwait
push
jg
cmp
or
rol
mov
in
fidiv
xor
bnd
mov
cli
aas
jge
test
ss
cmp
xor
mov
dec
xor
and
inc
adc
in
or
push
sub
je
ins
mov
shl
enter
mov
lock
bound
push
fldcw
or
sub
add
loope
in
inc
sub
pusha
jle
cmp
(bad)
ins
sbb
add
stc
cwde
mov
out
sbb
cmps
out
cld
dec
jge
push
push
movs
mov
sub
test
cmp
cmp
jne
sub
cmp
ficomp
scas
addr16
fcom
bound
sub
hlt
fld
mov
retf
dec
dec
pop
jno
sub
sbb
cdq
aaa
pop
cli
leave
adc
shl
push
adc
push
rol
xor
int
adc
icebp
popa
pop
mov
loop
mov
(bad)
sub
sub
sahf
xor
movs
retf
in
inc
mov
mov
pop
lods
lods
mov
jne
xor
retf
mov
fwait
mov
mov
pushf
jne
setle
in
das
sub
fcomp
sub
loopne
lock
aam
std
xor
ins
xchg
(bad)
fwait
stos
mov
fadd
into
pop
xchg
inc
or
xchg
push
fisttp
mov
mov
std
pop
dec
into
adc
add
fs
retf
push
pop
popf
aas
mov
mov
fs
fs
mov
les
pushf
jnp
cs
or
test
lods
mov
mov
or
shr
mov
sahf
ror
rep
or
adc
sub
js
nop
shl
and
or
das
sar
xor
ret
pop
lea
sbb
add
pop
in
and
jg
pop
jg
jae
in
loopne
and
pop
inc
xchg
and
push
dec
xchg
mov
enter
(bad)
fbstp
test
or
push
cs
mov
gs
push
add
mov
aad
js
mov
call
mov
xor
les
ficomp
or
rcl
add
retf
add
mov
mov
inc
sub
dec
inc
repz
aas
push
fidivr
sbb
ss
js
inc
mov
(bad)
push
frndint
lahf
mov
cld
cmps
arpl
dec
cmp
es
sbb
sub
and
or
movs
sbb
xor
dec
addr16
lock
icebp
pop
push
mov
pop
sar
mov
outs
mov
pop
cmp
(bad)
(bad)
pop
add
adc
outs
push
lahf
pop
inc
push
out
les
sar
and
out
push
sbb
(bad)
(bad)
neg
add
xor
fwait
mov
cmp
call
stos
sar
loope
xchg
adc
mov
iret
jne
sbb
sbb
call
fadd
xchg
out
test
sub
xor
adc
loope
cmp
mov
arpl
mov
in
ins
or
aam
xchg
mov
add
(bad)
push
push
(bad)
jge
cmp
aad
imul
pop
shl
ins
(bad)
xor
ds
mov
adc
mov
mov
jmp
stos
fsub
add
sti
mov
jbe
mov
mov
rol
fadd
push
pop
ret
retf
jg
nop
or
cmp
jns
(bad)
mov
aaa
loope
mov
imul
push
push
fmul
ret
cmp
cmp
xchg
xchg
(bad)
ja
mov
rcr
fmul
jmp
push
xchg
retf
std
scas
jp
inc
xchg
push
push
inc
inc
lods
shl
sbb
lods
cmp
jge
mov
inc
sahf
lds
(bad)
dec
aad
out
je
(bad)
ss
cwde
sub
test
dec
xchg
lods
cmp
push
ins
outs
movs
cmp
or
cmp
repz
call
push
cmp
aas
xchg
jbe
jp
cmps
inc
lods
dec
mov
push
iret
mul
add
jecxz
imul
xor
retf
mov
xor
outs
call
mov
push
push
cli
cdq
mov
daa
fsubr
imul
inc
xchg
adc
rol
das
mov
jae
xor
jnp
int3
jmp
ins
cwde
mov
sub
adc
mov
xor
and
xchg
add
or
test
sub
(bad)
mov
das
sub
adc
outs
call
or
add
inc
nop
rcl
sub
sbb
jg
shl
pop
ror
repz
mov
pushf
cwde
stos
scas
or
xlat
sub
ret
jl
or
or
jns
dec
into
movs
sub
mov
sbb
cmps
stc
mov
mov
mov
push
lahf
fadd
not
cmp
ja
fnstsw
(bad)
mov
mov
xchg
sbb
push
mov
or
idiv
mov
jl
dec
jae
pop
out
fidiv
jle
ja
inc
mov
gs
call
fistp
add
pop
jmp
sub
sub
inc
(bad)
mov
out
jecxz
cs
sbb
in
lock
stc
adc
dec
dec
fst
mov
mov
mov
imul
out
lods
mov
lods
je
ret
adc
adc
add
cmps
or
dec
sbb
adc
enter
mov
inc
inc
mov
pop
cwde
imul
xchg
jg
inc
lods
and
fild
test
clc
lods
sar
dec
mov
mov
pop
ret
mov
stos
xor
test
arpl
mov
mov
dec
sbb
dec
mov
cmc
xor
shl
push
jg
sti
adc
jecxz
adc
dec
cmp
jl
daa
pop
in
fadd
cdq
(bad)
int
(bad)
repz
mov
clc
outs
push
or
rcl
ss
mov
mov
sub
aam
sub
or
adc
leave
and
cmp
cmp
push
mov
pop
push
mov
push
cwde
cmps
xchg
and
sbb
fild
imul
mov
push
inc
(bad)
das
mov
(bad)
mov
dec
ja
xchg
pop
push
add
sub
sti
(bad)
out
pop
call
out
ja
sub
xchg
pop
jle
scas
sub
inc
int
xor
xor
call
pusha
xor
xlat
cmp
out
iret
jp
mov
cwde
das
push
out
outs
jb
ins
enter
inc
fistp
mov
sbb
fistp
call
sar
int
call
adc
jmp
rcl
pop
cs
mov
xor
pop
aad
push
dec
cli
inc
popf
add
in
add
sbb
shr
and
push
pop
repnz
sbb
(bad)
cdq
mov
fst
cmp
data16
push
leave
or
push
or
loopne
fidivr
xchg
dec
std
loope
(bad)
lds
sub
retf
jo
(bad)
sub
xchg
mov
and
or
dec
nop
push
adc
out
lods
pop
jle
cmc
popf
jl
out
inc
(bad)
enter
cmc
call
adc
mov
mov
test
fnstsw
sub
inc
adc
cmp
or
push
shl
xlat
jmp
xlat
xchg
loopne
gs
xchg
dec
hlt
fisub
xchg
sub
ret
add
xchg
sbb
dec
adc
test
mov
push
dec
movs
dec
out
shr
mov
inc
adc
pop
add
in
mov
sbb
xor
out
out
(bad)
jecxz
aam
aaa
test
shl
and
fist
sbb
fadd
sub
ret
sub
int
(bad)
mov
clc
xor
mov
in
not
push
aad
dec
mov
fadd
adc
nop
dec
lahf
mov
mov
and
das
sbb
outs
cmc
mov
and
retfw
jne
mov
and
jno
adc
in
sbb
in
fs
outs
mov
js
aaa
dec
sbb
ret
retf
jp
lods
out
mov
fcomp
cmp
(bad)
jns
mov
jp
push
and
lods
ins
pusha
cmc
pop
imul
cs
push
mov
inc
push
cmp
sub
pusha
or
cmp
mov
fidivr
mov
shl
push
and
out
jnp
test
stos
cwde
and
es
fs
(bad)
jns
pop
adc
sub
inc
outs
mov
and
xor
sbb
sub
or
cwde
xchg
dec
push
and
pop
iret
cmp
aas
mov
les
js
dec
mov
fwait
mov
adc
sub
mov
sti
or
add
and
test
mov
(bad)
adc
(bad)
clc
stc
cmp
cli
push
inc
or
pushf
push
cmps
cmp
mov
push
dec
es
test
mov
lock
cmc
xor
add
jb
shr
pop
sahf
lods
or
xor
mov
mov
aad
cmp
jmp
cmp
mov
in
dec
xchg
cmp
jo
jmp
jmp
fst
in
ss
stos
xchg
dec
xor
retf
test
(bad)
cld
sub
fidiv
mov
sbb
fdivr
sbb
hlt
aaa
das
xchg
icebp
sbb
and
mov
mov
(bad)
sahf
jbe
in
mov
ret
xor
(bad)
jg
test
pop
xor
retf
aad
sbb
add
and
lods
scas
pop
add
iret
sub
jecxz
call
inc
gs
cld
aas
div
mov
push
shl
add
xchg
add
push
mov
adc
push
in
cmps
dec
dec
mov
in
jne
xor
leave
arpl
int
mov
xchg
xor
cmp
xchg
pop
imul
pop
mov
inc
push
xchg
pop
addr16
test
jl
sub
xor
lahf
pop
adc
cli
ja
mov
mov
cli
add
xor
aas
fistp
and
jo
call
xor
comiss
mov
mov
icebp
cmc
lea
push
dec
jge
mov
xor
mov
sbb
leave
jnp
data16
sub
pop
add
xor
mov
push
je
jecxz
inc
test
mov
popa
mov
sbb
popa
sbb
cmc
jmp
xchg
(bad)
in
mov
aaa
leave
fs
fiadd
lds
scas
xor
cdq
dec
(bad)
xlat
arpl
jg
ss
pop
sbb
mov
repnz
adc
pusha
push
in
lods
movs
fldenv
push
shl
test
xchg
je
jnp
jns
add
sbb
test
dec
std
cld
sbb
loop
in
not
xchg
pop
push
scas
aad
xlat
sbb
xchg
xchg
loop
ss
xchg
add
iret
add
mov
out
(bad)
and
sbb
das
push
add
pop
stos
cmp
outs
js
dec
or
int3
stos
sbb
ror
lock
lods
sub
sub
test
push
pop
clc
xchg
mov
cli
and
in
pop
js
mov
rcl
sar
jns
gs
cmp
jbe
xchg
stc
es
xchg
sbb
sbb
mov
push
adc
icebp
mov
ret
mov
imul
xchg
inc
(bad)
adc
push
popa
and
jmp
cmps
retf
adc
add
push
hlt
std
xor
and
mov
inc
xchg
cmp
inc
dec
pop
popf
sub
or
adc
mov
in
fidiv
jb
add
sbb
es
pop
es
dec
fidiv
daa
cmp
stos
lods
fwait
in
push
fwait
not
retf
xchg
inc
loope
test
loopne
mov
mov
leave
cmp
xchg
sbb
mov
mov
fsubr
jp
out
std
mov
pushf
int
fiadd
sbb
les
movs
loope
call
pop
cmps
mov
test
adc
rcl
es
or
dec
lods
(bad)
in
std
adc
push
cmps
or
inc
mov
xchg
in
pop
test
jg
mov
shl
cmp
push
jno
or
cmps
lods
xor
(bad)
xor
mov
movnti
jne
mov
out
add
xor
inc
pop
push
or
retf
inc
inc
xor
std
outs
lds
push
dec
jnp
dec
inc
fisub
das
test
lods
es
adc
jl
pop
ja
add
jl
cld
pop
sub
retf
popf
int3
ret
lock
in
jo
inc
inc
and
mov
int
(bad)
jmp
or
cmps
push
scas
in
add
into
fidivr
push
(bad)
mov
push
sahf
adc
nop
(bad)
shl
repz
stc
fisttp
sub
ins
jne
push
test
fwait
test
aam
sbb
and
mov
inc
mov
or
mov
dec
mov
and
add
adc
jae
aad
shl
jb
bound
push
inc
pop
stos
out
fwait
xor
stos
int3
stos
lea
inc
imul
and
dec
and
pop
inc
xchg
loopne
mov
fild
dec
or
mov
xchg
into
add
pop
mov
mov
xor
jge
sti
popf
test
loop
dec
cmp
popa
or
adc
jecxz
(bad)
aad
pushf
xchg
xor
xor
pop
sbb
cmps
aad
pop
mov
mov
pop
pop
cmp
frstor
test
std
xlat
mov
sub
dec
lock
mov
pop
pop
in
push
or
shr
fsubp
inc
in
pop
jmp
xor
in
sar
cmp
add
outs
and
scas
lods
retf
popf
mov
pop
aad
adc
(bad)
(bad)
mov
ret
or
aam
and
push
sahf
sub
mov
dec
adc
cmp
scas
inc
pop
enter
pop
pop
mov
sbb
icebp
jno
add
popa
js
sub
dec
sub
and
cmp
jnp
add
sub
pusha
icebp
nop
mov
scas
jp
mov
mov
mov
add
repnz
scas
push
and
jbe
push
mov
sahf
test
lea
fidiv
mov
popf
add
scas
mov
or
dec
xor
push
jb
movs
(bad)
repz
mov
fucomi
stos
push
lds
jne
out
sub
push
(bad)
repz
mov
test
out
dec
out
pushf
lahf
adc
xor
scas
add
in
int
lods
or
test
mov
sbb
push
stos
jb
xchg
mov
ja
inc
add
scas
cwde
xchg
sbb
fwait
adc
in
retf
test
lock
or
jle
dec
dec
dec
mov
adc
adc
ss
xchg
js
test
jne
daa
es
mov
enter
ins
mov
jecxz
scas
in
ffreep
repnz
add
pusha
fnstcw
sub
outs
xor
and
out
fild
push
in
pcmpgtb
cmc
sub
sbb
nop
(bad)
jmp
shl
jns
sbb
jecxz
std
idiv
mov
cmovge
push
cmp
mov
dec
add
sub
cmp
imul
adc
pop
add
sbb
imul
sub
cld
xor
mov
call
ss
add
mov
aam
ins
fild
push
mov
xchg
mov
jo
test
je
and
mov
dec
(bad)
lds
pop
and
jl
test
ja
adc
rcr
mov
add
push
dec
fbstp
inc
add
sbb
rol
mov
sbb
xor
adc
xchg
cmp
xchg
sub
scas
arpl
jecxz
clc
imul
lods
mov
hlt
in
jnp
pop
dec
dec
enter
(bad)
adc
add
popf
pop
imul
cwde
and
shr
daa
rol
pop
adc
rcl
scas
jo
fwait
cli
pop
enter
ds
mov
ins
adc
dec
inc
pop
shl
mov
and
cmp
inc
xchg
out
mov
xor
mov
add
fisubr
iret
in
xor
pop
aaa
(bad)
sub
xor
fwait
cwde
cli
(bad)
out
push
jmp
outs
and
sti
xlat
add
mov
and
ds
in
mov
lea
in
add
push
and
add
mov
adc
xchg
dec
cs
lock
mov
xchg
popa
in
fistp
xchg
cli
stos
inc
scas
(bad)
(bad)
and
out
jmp
fist
into
inc
mov
jbe
and
cdq
dec
out
cmp
mov
outs
inc
mov
dec
push
pop
xor
or
xlat
mov
add
cdq
xchg
mov
adc
(bad)
neg
pusha
and
mov
and
pushf
out
sub
mov
sbb
xchg
xchg
fsubr
push
push
push
push
jmp
jno
loop
mov
xchg
xchg
push
(bad)
scas
push
shl
mov
xchg
test
ror
aaa
pop
ds
loope
pop
mov
movs
cmps
add
mov
int3
xchg
pop
sti
icebp
pushf
addr16
push
mov
inc
xor
push
pop
lds
mov
jmp
je
xchg
mov
ds
adc
scas
xchg
je
xchg
dec
and
jns
jp
mov
repz
fidivr
fist
dec
sub
sbb
push
jmp
jmp
fild
into
stos
jno
xchg
call
xor
aaa
mov
xlat
jbe
jno
stc
cmc
inc
cmc
cld
retf
rcl
or
dec
mov
ss
mov
inc
cmp
xchg
out
loope
cmp
in
add
inc
jbe
cmp
ss
cmp
xor
jecxz
js
(bad)
pop
dec
ffreep
pop
push
and
dec
and
or
adc
sbb
sub
mov
push
das
(bad)
jnp
out
les
push
mov
push
out
adc
mov
retf
cmc
les
bound
int
pop
into
mov
sub
jmp
cmp
jl
pushf
push
cdq
lock
test
push
inc
xor
test
sub
fisub
jg
jle
mov
mov
imul
mov
dec
push
cld
xchg
hlt
pushf
movs
mov
xor
mov
rcr
push
retf
jg
pusha
dec
test
repnz
mov
sti
fadd
adc
test
jge
test
arpl
clc
pop
dec
cmp
mov
inc
out
outs
out
pop
mov
sbb
jbe
jno
sbb
inc
outs
ror
mov
into
arpl
sub
out
or
int3
push
mov
nop
cs
sbb
push
cmc
cli
or
adc
daa
dec
push
inc
movs
outs
jns
sub
ret
adc
mov
push
or
aaa
mov
pushf
push
(bad)
sbb
jmp
cwde
cmp
scas
test
jbe
inc
mov
enter
mov
pushf
xchg
xchg
push
iret
xchg
sbb
repnz
scas
inc
es
imul
jno
pop
loopne
xchg
mov
repnz
mov
int
mov
or
out
sahf
(bad)
bound
cmp
je
jns
nop
push
dec
cmp
mov
loop
jnp
outs
fwait
pop
sbb
xlat
sbb
das
dec
xchg
outs
mov
lods
sbb
test
jne
push
retf
mov
jp
aad
and
inc
and
(bad)
outs
xchg
fist
pusha
sub
and
adc
rcl
push
retf
ins
pop
push
jmp
fidiv
add
pop
push
xor
push
call
jg
stos
fcmovne
enter
fs
inc
mov
loope
dec
out
call
sub
xchg
mov
and
enter
out
and
out
sbb
test
scas
mov
push
lds
inc
hlt
inc
dec
stos
jne
dec
pusha
sbb
pop
ins
lahf
mov
pop
cmps
movs
jne
(bad)
shr
stos
fucomip
or
scas
xchg
lock
adc
or
ror
sbb
push
fmul
dec
inc
je
dec
into
xor
xlat
pop
sub
test
(bad)
iret
les
in
in
pop
imul
test
loop
and
loope
fsub
int
add
sub
push
inc
adc
aas
pushf
push
pusha
test
bound
sbb
jmp
xor
jmp
mov
(bad)
(bad)
pop
inc
ins
jne
add
xchg
jbe
not
sbb
jo
sbb
xor
pop
fidiv
jecxz
mov
scas
xlat
push
stc
cwde
leave
js
das
leave
not
push
inc
xlat
pop
mov
ins
mov
inc
std
cdq
cmp
gs
repnz
mov
imul
ret
pop
shr
pop
pop
sub
cs
lods
test
mov
stc
shl
xor
cdq
pop
pop
pop
sub
add
pop
dec
pusha
add
fcomp
in
push
mov
mov
mov
leave
pop
push
mov
pop
shr
jnp
push
pushf
es
jl
aas
test
xor
xchg
je
loopne
sub
dec
push
sbb
jle
jns
adc
xchg
inc
xor
out
and
xchg
inc
or
loopne
lock
xor
pop
xchg
in
adc
fidivr
cdq
test
and
(bad)
ins
iret
scas
mov
scas
sti
pop
pop
std
je
leave
(bad)
repz
sub
add
push
pushf
push
fdivr
call
or
sub
pusha
mov
jmp
xchg
lods
and
mov
pop
outs
ja
jns
and
sbb
outs
cld
inc
fnstsw
jb
xor
adc
ja
ja
mov
lods
dec
test
shr
fstp
xor
inc
loopne
es
dec
outs
mov
ins
jnp
or
add
bound
pop
mov
jg
repz
xchg
bound
sbb
fs
lahf
scas
jmp
fwait
ins
xchg
loope
inc
test
(bad)
hlt
cmp
mov
mov
jns
jmp
cmp
push
dec
fistp
add
fwait
push
test
add
jg
into
pop
sar
cmp
int3
arpl
jge
or
push
pop
jae
xor
iret
jmp
sub
fistp
pop
pop
or
fimul
test
out
xchg
inc
stc
(bad)
aad
shl
rcl
mov
dec
pop
inc
test
push
arpl
push
js
mov
add
xor
push
push
mov
cmp
hlt
or
sahf
dec
sbb
not
inc
lea
nop
outs
pop
xor
sahf
or
sahf
(bad)
and
adc
push
dec
cwde
add
jle
or
stos
lea
sahf
xchg
or
inc
je
cmp
mov
and
lods
add
pop
or
push
mov
adc
cmp
mov
or
or
jb
mov
fsub
es
(bad)
shl
add
xor
fnsave
sbb
jae
leave
xchg
mov
jge
and
enter
(bad)
and
lods
mov
or
aad
js
das
or
cmp
inc
sbb
call
js
xchg
ins
movs
retf
mov
lods
inc
cs
push
xchg
(bad)
icebp
jle
cmps
retf
xchg
rcr
dec
mov
inc
jne
dec
cmp
mov
fild
push
(bad)
mov
iret
mov
add
jo
shr
adc
popa
fs
jae
fistp
test
adc
cli
jns
imul
ficom
mov
and
lahf
dec
test
pop
loopne
les
or
and
enter
xchg
pop
jmp
call
adc
inc
and
mov
sub
inc
(bad)
and
jp
mov
xchg
xor
mov
rcl
push
sub
bound
mov
(bad)
stc
inc
dec
test
dec
loopne
add
add
pushf
adc
ins
push
cwde
jl
or
das
pop
push
pop
jmp
call
adc
jne
jno
inc
or
cmp
push
and
loop
repnz
lods
cmp
mov
or
push
add
jb
or
fnstenv
fxch
movs
test
jbe
adc
adc
fwait
sar
jge
ror
xlat
pusha
and
dec
jl
ins
stc
das
stos
jge
scas
shl
mov
xchg
adc
ret
adc
push
lods
shl
mov
aaa
inc
data16
pop
mov
sub
dec
dec
push
jbe
or
push
sbb
data16
sbb
dec
out
jnp
call
xor
sbb
mov
pop
mov
xor
rol
mov
into
xchg
dec
cmp
sub
out
push
sub
test
fbld
adc
and
stos
xor
dec
ret
fmul
add
cli
sbb
inc
jbe
jmp
(bad)
imul
push
(bad)
pop
sbb
mov
ds
retf
push
cmp
shl
sbb
out
xchg
call
repz
lds
lds
xchg
jge
mov
sub
xchg
scas
dec
mov
lock
fst
push
addr16
out
leave
mov
sbb
mov
xor
out
cmp
lods
or
not
loop
dec
cli
sbb
std
sub
emms
stos
scas
ss
adc
(bad)
rcr
(bad)
hlt
loopne
arpl
mov
inc
imul
push
ins
mov
jae
ins
hlt
out
adc
adc
jbe
push
push
cli
rol
push
ss
xlat
mov
sub
xchg
cmps
shl
add
or
cli
outs
(bad)
add
cli
push
push
sub
inc
or
leave
or
add
arpl
push
jecxz
dec
pop
pop
jne
les
and
jmp
adc
mov
push
push
sbb
int3
jnp
popf
jecxz
or
adc
push
jmp
dec
cmps
xchg
jae
fstp
scas
movs
mov
imul
(bad)
sbb
test
xchg
out
or
pop
ja
movs
mov
pop
or
or
dec
rcl
pop
adc
or
and
or
ins
push
sub
cdq
cmp
jl
mov
shl
test
int3
mov
icebp
mov
or
adc
in
push
in
adc
or
cmp
add
popa
outs
adc
xchg
push
es
jo
pusha
dec
push
mov
adc
scas
into
mov
jl
(bad)
jo
mov
mov
jmp
inc
jae
outs
ins
popa
xor
movs
push
retf
cmp
adc
pop
mov
inc
add
cmp
mov
push
test
inc
xor
xchg
inc
cmp
fwait
fs
(bad)
ins
xchg
sub
(bad)
xor
call
or
imul
jb
dec
or
xchg
pop
adc
nop
(bad)
pushf
out
imul
jmp
popa
stos
ficomp
fstp
not
pop
or
or
in
jle
dec
mul
push
pop
stos
xchg
scas
add
push
push
pop
outs
ret
mov
add
sahf
ins
lods
dec
dec
sbb
inc
test
and
and
das
retf
jge
sbb
mov
jp
sub
fdiv
popa
dec
xchg
adc
cs
rol
test
mov
ja
aad
nop
lock
pop
mov
and
push
jne
std
ins
outs
jbe
cmp
popa
and
test
in
pop
sub
outs
fbld
fisttp
js
push
mov
push
push
pusha
or
sbb
aaa
jp
push
shl
pop
mov
stos
outs
psraw
(bad)
and
test
mov
push
mov
mov
jo
pusha
sbb
jl
fbstp
jbe
inc
sub
into
fsubr
gs
dec
mov
jl
and
push
pop
sar
mov
out
sub
sbb
sti
sub
pop
sub
pop
jo
es
fdivr
(bad)
int
add
in
(bad)
inc
mov
inc
pop
mov
idiv
or
dec
out
add
xchg
pop
mov
pop
and
rcr
mov
fs
pop
mov
or
adc
xchg
cs
mov
sbb
daa
js
or
jg
and
push
sub
mov
call
sbb
loope
movs
in
sahf
or
dec
jp
inc
lds
lea
sbb
and
stc
fsubr
cmp
inc
mov
push
push
mov
mov
cmp
pop
or
outs
mov
pop
test
push
cmc
jl
xchg
adc
test
mov
xchg
adc
retf
inc
pop
jg
cdq
ss
popf
in
mov
aam
fcomp
mov
repnz
sub
frstor
popa
cmc
cwde
popa
inc
mov
adc
out
shl
push
sahf
std
sbb
add
(bad)
sub
dec
pop
sub
mov
(bad)
sub
sub
jecxz
pop
cmps
pop
scas
(bad)
and
mov
popf
fwait
dec
mov
sbb
fwait
out
scas
sub
jge
push
ja
or
cmp
adc
cmp
data16
rcr
mov
sbb
(bad)
jg
xor
adc
out
sbb
arpl
add
inc
xlat
inc
cmp
cmp
out
push
mov
push
mov
test
sbb
xchg
add
xor
popa
in
ret
inc
mov
enter
fs
and
add
push
leave
loop
ss
dec
fs
(bad)
mov
call
sub
push
cmp
dec
inc
fisub
inc
test
mov
aad
jns
(bad)
shr
mov
mov
test
mov
push
sbb
movs
mov
scas
lock
mov
xchg
mov
rcr
dec
mov
fs
test
cs
data16
or
jle
sahf
or
mov
mov
jno
add
adc
jecxz
std
shr
push
mov
and
repnz
call
(bad)
mov
ror
movs
jnp
push
cmps
ret
test
xchg
xchg
out
inc
(bad)
adc
inc
push
dec
sbb
adc
push
adc
gs
popf
mov
ins
rcr
pop
clc
jns
jae
sahf
sbb
dec
push
mov
test
mov
dec
gs
movs
xchg
xrelease
mov
jns
sti
pop
cmc
mov
sbb
test
xchg
or
dec
jmp
xchg
ins
fsub
jmp
jecxz
dec
in
dec
call
pop
mov
repz
adc
push
push
shl
cmp
aad
in
adc
dec
pop
cmp
cdq
call
idiv
mov
cwde
cmp
jle
adc
je
add
pop
cmp
add
std
popa
js
mov
mov
mov
push
inc
jo
fcomp
mov
ret
xchg
inc
sub
mov
sbb
out
outs
or
daa
rcr
clc
mov
ins
daa
daa
sbb
or
test
cmp
push
rcl
out
jle
repz
(bad)
push
adc
xor
arpl
add
test
xor
and
in
xchg
jmp
mov
arpl
dec
xor
inc
mov
cmp
je
aaa
cld
movs
outs
aad
and
ja
mov
jmp
xor
fst
loop
pusha
scas
and
pop
xchg
jle
mov
adc
jbe
cld
call
cmc
jno
fbld
lahf
cld
out
xor
inc
push
je
adc
(bad)
fcomp
stc
cmp
mov
pusha
pop
mov
ja
mov
mov
dec
pop
pop
ins
or
(bad)
dec
test
add
xchg
xchg
adc
jg
and
xor
out
sbb
sti
loopne
inc
das
mov
stos
icebp
fs
adc
hlt
inc
cmps
inc
fisttp
and
push
add
lahf
dec
or
sbb
xchg
jmp
(bad)
mov
pushf
jge
imul
push
test
dec
retf
push
bound
adc
xchg
sbb
popa
push
push
push
dec
push
adc
cmp
ds
add
hlt
outs
push
xchg
push
retf
xor
xchg
jmp
xchg
pusha
nop
push
fs
sbb
std
(bad)
call
rcr
pushf
add
dec
mov
mov
and
mov
or
cmps
sti
adc
xchg
hlt
fsub
mov
jmp
rol
shl
imul
jns
inc
mov
movs
add
imul
inc
push
mov
xchg
das
mov
mov
mov
cmp
dec
(bad)
popf
cmp
mov
lds
dec
stos
dec
push
loopne
jb
dec
clc
cld
add
xchg
or
xor
lahf
push
jge
inc
inc
stc
test
stos
ja
loope
mov
call
pop
or
adc
inc
sbb
cmp
leave
mov
pusha
or
(bad)
mov
mov
dec
(bad)
xlat
pop
outs
std
jg
retf
icebp
hlt
xor
in
fsub
sbb
adc
and
popf
jnp
aam
xchg
test
adc
shr
int
ret
fsub
or
aaa
xchg
test
lock
icebp
or
pop
stos
cld
in
cli
jl
jl
inc
les
inc
es
aad
or
inc
shl
popf
and
movs
or
sub
dec
mov
loope
pop
cmc
mov
inc
inc
loope
inc
int
mov
cwde
cmp
xchg
xor
or
scas
idiv
jmp
adc
lods
int3
and
or
fmul
aad
xor
loopne
call
jo
ins
adc
outs
cmp
push
call
xor
dec
in
repz
xchg
call
dec
pop
xchg
and
test
mov
xchg
push
pushf
jbe
lahf
sub
or
sti
jo
mov
mul
cwde
movzx
mov
push
lods
adc
fisub
jl
in
and
sub
es
adc
xor
fld
or
xchg
aas
mov
sbb
outs
ds
jbe
xor
xor
or
and
fistp
cdq
lock
arpl
mov
push
arpl
jnp
mov
rol
js
dec
(bad)
push
inc
mov
mov
xchg
lods
aad
lods
adc
inc
adc
xor
sub
add
mov
fimul
mov
add
push
xchg
xlat
inc
lods
aad
sub
into
cmp
mov
xor
jg
in
mov
gs
sub
pop
popf
(bad)
adc
and
mov
and
pop
nop
inc
retf
dec
mov
mov
jp
pop
pop
or
mov
adc
(bad)
jecxz
cli
cmp
hlt
xchg
mov
adc
fwait
loopne
cdq
push
sbb
cs
jmp
cdq
out
lds
pop
shl
mov
dec
inc
dec
je
repz
sub
lods
adc
addr16
mov
push
rcr
add
mov
inc
ins
dec
cmps
pop
test
dec
inc
xchg
push
inc
mov
push
mov
call
(bad)
out
dec
jecxz
sub
nop
aam
xchg
lahf
outs
mov
fcomp
xlat
adc
adc
pop
pushf
int3
ret
sub
dec
mov
and
(bad)
arpl
cdq
std
lea
stos
and
adc
pop
aas
jb
(bad)
xor
dec
leave
add
int
loopne
jge
(bad)
and
dec
adc
pop
aam
mov
pop
adc
loope
xor
fdivr
fucomi
push
push
xor
pop
xor
idiv
les
xchg
cmp
sbb
mov
add
cmp
mov
xchg
adc
push
fisttp
pushf
imul
sahf
mov
lock
test
sub
mul
shl
xchg
std
mov
mov
adc
mov
jp
add
mov
mov
in
dec
retf
ja
popf
daa
movs
mov
popa
mov
xor
xchg
mov
fld
jbe
in
or
push
push
test
out
push
pop
out
das
pop
enter
mov
sbb
call
(bad)
daa
xor
mov
rol
sbb
sbb
jg
shr
xor
mov
outs
and
cli
jle
sub
stc
pop
mov
adc
xchg
js
mov
cmp
imul
pushf
inc
shl
out
push
retf
rcr
xchg
stos
inc
lahf
cmc
adc
shl
enter
mov
or
dec
push
ret
fisttp
jmp
in
inc
sbb
mov
add
dec
mov
dec
xor
mov
mov
nop
cmp
arpl
repz
leave
jecxz
ror
sbb
cmp
out
(bad)
mov
in
inc
sti
xchg
scas
clc
mov
mov
mov
jnp
shl
popa
outs
adc
imul
pop
or
cmp
aad
pop
adc
adc
ret
add
pop
mov
and
aam
pop
xchg
das
push
dec
lea
es
inc
repz
fdiv
sbb
mov
int
or
dec
(bad)
outs
lahf
cmp
mov
popf
ror
adc
push
int
test
jle
psubsw
sbb
sbb
mov
or
(bad)
jae
sub
stos
push
jge
stos
outs
shr
xchg
add
jmp
add
rcr
xchg
cld
jnp
out
mov
xchg
push
sub
jp
pushf
js
jnp
sti
and
ret
inc
sbb
mov
sub
ss
das
out
sub
out
test
xor
xchg
adc
rcl
es
outs
out
aas
add
es
(bad)
dec
adc
stos
cmp
adc
or
cmp
push
mov
cmp
adc
outs
dec
xlat
inc
(bad)
cmp
in
jecxz
dec
mov
pushf
xor
pop
sar
aad
and
rol
ss
or
jbe
mov
sub
pop
or
adc
pop
enter
gs
pop
xchg
out
jo
mov
adc
lahf
lods
clc
jmp
sar
popf
ret
cli
mov
jb
cmp
lods
repnz
popa
xchg
scas
jmp
push
fcom
lods
adc
and
icebp
mov
xor
xor
sti
out
pop
in
fldcw
gs
jmp
repz
mov
xchg
push
xchg
ror
xor
inc
xor
cdq
call
mov
js
lods
stos
pop
xor
daa
mov
enter
out
arpl
in
test
test
das
mov
and
cmps
dec
dec
scas
shl
test
xor
mov
push
imul
mov
pop
mov
add
sub
mov
mov
jns
and
adc
frstor
clc
jb
mov
cmp
mov
pop
fmul
push
pop
cmp
and
dec
or
pushf
xchg
fidiv
lods
dec
dec
fs
retf
cmp
inc
adc
(bad)
std
sub
or
mov
jg
xchg
push
dec
test
and
lods
xchg
in
outs
inc
div
test
mov
cwde
jl
(bad)
iret
add
dec
out
lea
and
in
lds
ins
mov
sub
or
int
js
mov
jns
xchg
cmps
xor
sbb
das
cmp
ins
aaa
dec
push
inc
test
leave
adc
fcom
and
jmp
movs
push
xchg
mov
push
es
or
inc
xor
enter
cld
cmc
xchg
jnp
inc
rol
dec
shl
push
stc
xor
sar
cmp
or
cmps
mov
jl
neg
add
xchg
sbb
mov
jno
xor
lods
test
data16
fisubr
mov
push
cmp
cmp
sub
call
das
and
mov
cmp
scas
jb
(bad)
push
test
dec
lods
mov
push
xchg
push
ins
ror
sub
popf
and
adc
and
mov
jb
pop
fadd
xchg
pop
xor
js
cld
pop
mov
mov
and
mov
frstor
(bad)
and
push
ds
loopne
iret
jno
arpl
shr
jb
xor
mov
lea
add
pop
push
in
mov
xor
retf
jl
aam
retf
(bad)
xchg
out
out
dec
push
rol
call
pop
push
or
(bad)
test
sub
out
xchg
fs
push
inc
imul
leave
jne
cmp
retf
sub
lea
popf
xchg
mov
sub
adc
inc
mov
push
mov
jnp
sub
pop
jg
js
in
dec
sbb
hlt
add
mov
movs
pslld
sub
pop
push
inc
inc
xor
out
dec
or
je
sub
xor
popa
fisub
xchg
js
ffree
leave
test
cmps
mov
mov
scas
pop
pop
out
push
mov
cmp
nop
mov
mov
pop
stc
sub
fisttp
xchg
aad
lock
push
movs
loopne
cmp
ret
jae
loope
popa
and
fadd
mov
lock
sbb
xchg
sbb
or
arpl
mov
and
jmp
nop
cmp
fcomp
loop
pop
pop
fisttp
pop
pop
loopne
into
cs
(bad)
outs
fisubr
inc
sahf
xchg
mov
aam
jno
push
pop
das
push
sub
(bad)
pusha
movs
imul
xchg
jbe
jo
hlt
call
jp
test
jns
add
mov
dec
jge
inc
scas
jl
in
ud2
sar
test
mov
xchg
retf
mov
jne
push
jle
clc
fbld
imul
pop
enter
mov
gs
adc
mov
mov
lock
mov
adc
adc
xchg
popf
mov
rcl
(bad)
cmps
call
in
ja
push
cmp
aaa
int3
jmp
repnz
inc
loope
(bad)
repz
push
sbb
xor
in
cmp
(bad)
cs
sbb
movs
cmps
std
dec
cwde
or
repz
xchg
pushf
mov
(bad)
cmp
xchg
xchg
ds
cmc
mov
lea
movs
adc
mov
lock
aad
or
xchg
addr16
mov
sub
popf
mov
pop
movs
ins
cmp
inc
inc
cdq
or
test
out
sub
pop
loop
nop
movs
adc
jbe
inc
fcomp
adc
sar
ins
sti
inc
mov
xchg
push
mov
push
pop
fwait
call
mov
push
(bad)
outs
mov
xor
(bad)
out
mul
sbb
repz
jl
fisttp
sub
sbb
sbb
jo
mov
movs
lods
ds
jne
add
sbb
add
addr16
fdivr
pop
ror
inc
push
sahf
mov
lods
mov
xchg
scas
mov
and
mov
adc
mov
adc
pop
imul
jmp
jae
jmp
test
xor
outs
outs
out
mov
inc
addr16
cs
vmovdqu
dec
fnstsw
nop
imul
mov
pop
mov
sti
(bad)
xor
mov
out
sub
rcr
mov
into
dec
std
pusha
pushf
sbb
repnz
aam
stos
call
push
leave
pop
dec
mov
and
(bad)
jb
cld
sub
enter
pop
sub
mov
hlt
add
dec
xlat
inc
cmp
lock
cmp
dec
loope
fild
add
mov
data16
cmp
dec
rcr
mov
and
jno
int
in
push
pop
inc
(bad)
outs
inc
je
pop
idiv
cmp
inc
pop
xchg
and
push
add
out
pop
xor
cmps
jmp
dec
js
inc
lods
jns
xor
and
scas
push
addr16
(bad)
sbb
inc
inc
sbb
sbb
mov
aam
movs
jae
sub
jp
pop
cmps
add
sub
xor
add
inc
aad
sbb
inc
add
stc
cmovns
clc
push
ds
ins
jg
pop
out
cmp
xlat
pop
mov
out
stc
push
jns
mov
push
ss
adc
push
aaa
or
xchg
or
icebp
pop
pop
out
push
or
push
mov
add
push
pop
fiadd
xchg
ins
pop
mov
pop
xchg
pop
dec
sbb
cmp
mov
cdq
loop
cdq
shl
inc
sbb
pop
pop
mov
mov
cmp
add
inc
lea
test
xor
(bad)
cwde
inc
mov
mov
movs
call
or
cli
js
jne
cmp
cmp
popa
xor
and
sbb
jg
pop
sub
fnclex
scas
inc
xchg
in
push
and
test
ficomp
jmp
lds
(bad)
sti
mul
arpl
adc
call
xor
sbb
(bad)
test
xchg
dec
sbb
inc
jle
fisttp
stos
adc
mov
add
(bad)
stc
mov
das
jecxz
ja
cmp
fiadd
scas
pop
mov
(bad)
add
add
sbb
xchg
push
adc
mov
test
push
ret
ds
and
pop
call
movs
in
push
iret
inc
adc
pusha
add
retf
popf
div
push
cmp
arpl
int
sub
mov
mov
mov
push
add
fist
mov
mov
cmp
mov
xchg
outs
sbb
shl
jl
push
dec
inc
test
xchg
aas
mov
mov
cmp
mov
mov
pusha
cmp
lock
xchg
cmp
dec
dec
push
mov
adc
and
add
push
adc
or
mov
jb
mov
cmp
and
ret
ss
fmul
mov
adc
pop
push
(bad)
aad
les
je
and
cdq
jle
push
or
in
jo
sub
xor
or
mov
cli
bnd
pop
call
jg
sbb
mov
test
lods
sti
in
adc
fsub
pop
push
mov
dec
or
mov
and
add
xchg
int
pop
sbb
dec
or
push
int
mov
out
mov
mov
ror
push
push
ret
xor
push
(bad)
ja
popf
popa
imul
pop
adc
mov
lahf
adc
data16
aaa
inc
enter
das
inc
fidiv
cmp
push
jmp
imul
lds
(bad)
arpl
sub
scas
das
push
fsubr
xlat
inc
cmp
jns
bnd
xor
test
xor
loopne
lahf
inc
call
jmp
mov
dec
shl
jge
mov
fcomp
data16
xor
inc
push
add
cld
mov
dec
imul
sbb
mov
add
push
or
mov
xchg
cmp
aad
xchg
dec
in
add
jmp
fadd
daa
inc
aaa
inc
dec
dec
mov
neg
out
fstp
mov
push
outs
out
dec
call
mov
into
test
fistp
jbe
mov
cmp
push
push
jl
jg
mov
adc
push
dec
jmp
dec
test
sar
sub
neg
int3
in
popf
mov
les
ss
test
loope
lock
stc
retf
sbb
push
adc
scas
cmp
mov
mov
xbegin
sbb
push
cmovp
jmp
sbb
ss
shl
(bad)
pop
sub
mov
movs
jbe
int
mov
add
dec
shl
pop
and
add
stc
sti
test
cdq
dec
adc
mov
repnz
jno
aam
sbb
arpl
aad
add
dec
out
imul
es
add
and
daa
jbe
outs
call
out
adc
sub
icebp
pop
inc
(bad)
ret
leave
xchg
loop
and
ins
sub
mov
adc
push
dec
sub
jno
mov
sbb
(bad)
mov
dec
lea
fnstsw
imul
xchg
sub
mov
xchg
xor
xchg
retf
fwait
(bad)
and
push
pop
in
sub
cmp
sahf
pop
ds
or
fdivr
jg
push
loop
push
push
sbb
(bad)
mov
test
imul
dec
or
and
xchg
js
ja
mov
mov
sbb
retf
jmp
mov
dec
add
mov
mov
or
sub
mov
call
repnz
pop
les
cli
jnp
jg
inc
cmp
dec
or
and
mov
adc
jmp
push
clc
mov
xor
push
cld
jmp
mov
in
cmp
xchg
mov
test
push
mov
loopne
or
or
shl
push
mov
sub
cmps
in
js
les
ss
pop
mov
repnz
psubsw
cmp
rcl
in
inc
nop
xor
fiadd
ds
mov
lods
loop
int
shl
mov
pusha
mov
dec
inc
popa
cmps
pop
repnz
pop
mov
mov
data16
dec
int3
outs
cli
or
mov
cmp
pushf
(bad)
xlat
into
xchg
pusha
rcl
and
mov
(bad)
and
(bad)
sub
mov
sbb
fimul
into
xchg
inc
xor
(bad)
or
in
sbb
jl
rol
inc
mov
jg
daa
mov
(bad)
inc
lods
and
repnz
sbb
pop
push
inc
dec
adc
aas
int
adc
int3
hlt
cld
das
xor
out
out
test
imul
movzx
mov
lods
imul
cmc
call
xchg
and
and
ss
or
push
dec
inc
test
cs
inc
add
imul
sub
rol
mov
sub
movs
(bad)
call
les
mov
es
sbb
cmp
add
loope
or
xchg
mov
mov
dec
addr16
sbb
mov
mov
loope
(bad)
fcomp
(bad)
sar
inc
fild
add
and
idiv
mov
push
jge
out
ret
add
imul
pop
xchg
das
cdq
hlt
jg
sub
jbe
sbb
in
mov
mov
add
fisttp
int
js
nop
fdiv
out
xor
lea
mov
je
sti
rcl
les
pop
loop
arpl
ffree
int3
inc
call
pop
ja
daa
xchg
es
and
sub
xchg
pop
inc
les
mov
iret
std
cmc
into
pop
(bad)
and
(bad)
adc
dec
div
ins
xchg
in
ret
adc
dec
xor
loop
pop
cli
icebp
lock
xor
xor
jmp
test
fsubr
mov
popf
cmp
mov
leave
jle
in
std
ror
jmp
in
lahf
daa
sti
repnz
adc
cmp
lea
jns
and
mov
cdq
fcom
imul
aam
jb
jo
xor
sahf
stc
jmp
stos
sub
inc
push
ficom
call
jno
test
jo
and
inc
xchg
cwde
out
adc
(bad)
adc
push
pop
cmps
jmp
xchg
xor
ret
push
sub
jp
pop
mov
mov
and
mov
cmps
or
jb
mov
ret
shl
addr16
mov
cmc
and
fimul
push
js
push
retf
movs
stos
xchg
repnz
cmp
lahf
in
hlt
push
loopne
adc
pusha
sub
cmp
enter
fist
sub
retf
mov
jns
jbe
gs
or
xchg
loopne
(bad)
mov
pop
fidiv
sbb
scas
ja
sbb
(bad)
loop
int
ret
fs
mov
xor
cmps
clc
sti
xor
jp
add
inc
shr
inc
int3
xor
inc
mov
dec
mov
cmp
in
shl
jmp
cmp
sbb
inc
in
retf
call
or
lahf
xlat
xchg
ret
xchg
pop
stc
dec
test
out
shr
aaa
iret
out
ins
pop
fnstsw
mov
dec
mov
cmp
ss
into
inc
cmp
std
lahf
push
mov
pop
mov
loop
xchg
or
or
or
nop
push
out
stc
add
popa
jnp
inc
movs
addr16
loop
or
dec
pop
pushf
add
inc
and
push
fwait
adc
push
xchg
call
iret
sub
pop
in
push
hlt
dec
out
mov
cmps
adc
ss
fdivr
or
xor
or
fcomp
inc
cmps
movs
or
mov
pop
sbb
or
push
add
pop
mov
and
cmps
xor
(bad)
jno
jge
loopne
xchg
jnp
adc
imul
ja
lahf
ror
mov
ror
mov
das
test
cwde
cmps
and
sbb
adc
das
loope
lea
dec
add
ret
xor
xchg
push
sub
lea
sub
loopne
int3
mov
jl
xor
popf
push
fldcw
mov
fdiv
and
ret
mul
idiv
sbb
adc
test
mov
enter
xor
pusha
cld
jl
pop
push
mov
out
retf
push
movs
add
mov
repz
cmps
cwde
test
adc
ror
add
jb
imul
pop
or
inc
xor
call
lahf
stc
(bad)
pusha
cs
mov
das
jecxz
mov
jl
or
mov
scas
pushf
adc
or
ret
jle
mov
mov
push
dec
add
xchg
movs
jmp
and
and
lock
xchg
or
sub
dec
or
idiv
sub
xor
es
out
gs
xor
push
or
div
jg
ins
jmp
adc
add
js
push
add
add
inc
sbb
loopne
xor
xor
sar
push
or
jnp
test
lods
fwait
leave
imul
loopne
lahf
push
add
int
je
shr
repz
(bad)
or
jo
data16
(bad)
in
cli
imul
lods
test
(bad)
mov
push
xlat
add
push
or
jp
test
das
popf
fst
js
mov
js
loop
cmp
lahf
dec
popf
or
pop
repz
push
cmc
not
mov
outs
cli
cmp
push
loopne
dec
mov
shr
dec
mov
xchg
sub
mov
fst
sbb
lea
jnp
inc
inc
xchg
sbb
mov
jmp
lock
(bad)
in
mov
js
add
inc
ins
jecxz
jg
(bad)
bound
sti
dec
mov
pusha
cmp
das
xlat
pop
sbb
retf
mov
cdq
pop
push
popa
(bad)
mov
psadbw
nop
pop
fistp
push
xchg
aad
std
xor
scas
ss
ret
sub
aaa
jmp
add
push
xor
cmovl
test
push
das
out
push
dec
xchg
jo
jnp
sbb
lds
jns
xor
in
mov
popf
pop
pop
adc
inc
in
xchg
sbb
dec
dec
cli
out
add
lods
sbb
add
dec
loopne
test
push
dec
or
pop
xchg
add
in
push
cmp
std
in
push
push
cdq
data16
and
jo
push
shl
jge
lahf
mov
and
fwait
out
loope
jb
xchg
mov
cmp
aaa
(bad)
(bad)
jbe
xor
loope
sub
dec
xor
sub
mov
pushf
push
xor
cmp
mov
je
outs
loop
call
push
push
out
xor
sub
add
push
or
into
sub
dec
mov
or
or
(bad)
ret
in
jecxz
(bad)
add
aaa
(bad)
pop
and
mov
(bad)
bound
call
xchg
mov
je
and
popf
popa
scas
mov
xchg
pop
or
xchg
cmps
pop
repz
inc
or
sub
retf
aam
shr
fcom
push
sahf
lahf
cmps
popf
and
inc
ret
je
cmp
xchg
adc
mov
movs
fbld
mov
dec
mov
retf
cld
mov
pop
jbe
das
xchg
mov
loopne
loope
mov
xchg
xchg
dec
stos
mov
mov
sbb
cmc
mov
test
sbb
xchg
sbb
clc
fild
pop
ss
jns
xor
jmp
xor
ins
push
mov
sub
pusha
pop
inc
shl
add
or
call
or
add
inc
test
cld
cmp
ja
pop
fidiv
mov
cmc
cmc
fisttp
imul
(bad)
ins
and
fxch
or
mov
inc
and
jne
mov
cmp
out
shr
xor
cmps
cld
rcl
or
(bad)
push
hlt
or
outs
cmc
mov
dec
pop
xlat
(bad)
inc
dec
lahf
push
test
test
test
inc
dec
cmp
mov
mov
xor
aaa
test
rcl
jo
in
idiv
xchg
stos
mov
ds
xchg
pop
mov
mov
adc
shl
sti
std
and
jb
mov
int
ja
inc
or
(bad)
dec
fucomip
jmp
mov
and
rol
or
jp
jl
or
repnz
(bad)
dec
cdq
aas
stc
adc
mov
fwait
jmp
sub
shl
popa
in
and
cmp
pop
adc
push
(bad)
shl
and
ds
adc
push
add
mov
mov
inc
mov
test
dec
jbe
mov
mov
test
and
call
lds
movs
out
mov
retf
cdq
xchg
and
lods
pop
pop
hlt
mov
popa
add
xor
lods
mov
adc
pop
xor
mov
jge
lahf
xor
add
lods
repnz
mov
lahf
mov
or
push
pop
gs
repnz
pop
push
stos
retf
adc
cmc
aad
in
push
pop
in
mov
pop
aam
inc
les
fldenv
call
test
push
(bad)
cli
repz
mov
les
jmp
outs
inc
xchg
test
in
jl
pushf
imul
addr16
push
pop
lahf
and
mov
loop
cli
inc
fsqrt
fwait
inc
cmp
adc
clc
leave
mov
stc
cmp
in
mov
dec
mov
jne
out
cmps
dec
lock
shl
mov
arpl
inc
test
jmp
dec
addr16
aam
push
stos
fisttp
inc
dec
inc
ds
dec
fistp
mov
icebp
mov
xchg
mov
aam
xchg
and
retf
xor
xor
push
ins
sbb
cmps
ror
imul
fiadd
dec
xchg
adc
loopne
inc
mov
sub
adc
mov
xchg
pushf
inc
jmp
dec
jmp
in
jns
sub
aam
in
inc
sti
das
ins
out
out
adc
clc
ja
cmps
in
sbb
inc
lods
fsubr
inc
imul
sahf
(bad)
out
add
ins
test
ss
mov
adc
(bad)
call
div
mov
sub
adc
in
jo
push
call
std
scas
mov
cmp
sbb
aas
and
jmp
out
sbb
stos
or
frstor
mov
aaa
ins
inc
cmc
pop
jp
adc
adc
dec
xchg
jbe
jmp
sbb
inc
xchg
stc
pop
out
fwait
pop
call
jmp
pusha
jmp
cmp
dec
sbb
lock
pusha
mov
add
sbb
sbb
outs
or
cmps
sub
dec
sbb
dec
(bad)
call
rol
pop
xchg
xlat
dec
fdiv
mov
fimul
scas
push
jnp
add
scas
mov
lock
cmp
or
(bad)
out
mov
(bad)
fiadd
and
xchg
inc
push
xchg
cmc
mov
push
dec
pop
int3
movs
or
lock
shr
jne
add
fmul
mov
cmc
shr
jp
cmp
popa
sub
xor
hlt
inc
mov
pop
and
mov
mov
xchg
xor
cli
add
fsub
aas
lds
jns
mov
out
and
sbb
push
adc
sbb
mov
dec
pop
je
loop
or
shl
dec
pop
icebp
sub
enter
leave
sub
mov
imul
repz
sub
hlt
outs
add
es
push
lods
iretw
push
pop
xchg
or
push
sbb
pusha
dec
test
and
dec
call
xlat
xor
test
into
out
or
call
in
into
dec
ret
aas
popf
dec
fmul
call
sahf
nop
inc
inc
mov
add
sar
cwde
cmps
mov
pop
mov
pop
jecxz
sbb
out
data16
hlt
(bad)
inc
mov
aam
loop
xor
aad
movs
pop
(bad)
iret
xor
je
sub
push
(bad)
aas
pop
loope
mov
fild
jge
adc
cmp
ja
xor
dec
sub
mov
jo
sti
sub
bound
movs
jbe
mov
pop
mov
lea
in
cmp
inc
in
sbb
pop
sub
or
ins
jmp
scas
fldcw
test
inc
push
ret
and
mov
retf
imul
lahf
std
push
inc
fwait
inc
inc
jmp
xor
pop
mov
hlt
jl
add
loop
mov
dec
sub
call
in
cmp
mov
xor
cmp
cmp
xchg
fnsave
add
es
aas
cwde
pop
loope
fst
aas
cmp
imul
dec
iret
dec
push
idiv
mov
xor
xchg
inc
sar
ficomp
push
mov
ins
pop
das
adc
xchg
imul
bound
les
xchg
rcl
out
out
test
mov
mov
mov
sbb
movs
inc
push
daa
cdq
cmp
jl
dec
cmp
jge
jno
jecxz
test
pushf
into
div
or
inc
xor
dec
mov
cmp
(bad)
inc
popf
ror
imul
dec
dec
bnd
fwait
add
into
repnz
mov
cwde
sbb
bound
gs
ficom
sbb
repnz
stos
aaa
aad
xchg
mov
dec
sub
aas
mov
pop
push
test
or
sbb
adc
data16
aad
push
mov
mov
jb
pop
adc
ror
adc
jo
adc
mov
test
or
cmp
xor
movs
jg
push
jmp
jp
fwait
scas
mov
mul
daa
enter
test
fs
retf
dec
into
scas
or
xor
rep
sub
fs
jae
xchg
push
(bad)
mov
icebp
cdq
jns
dec
jmp
mov
fimul
sar
mov
xor
cmp
or
xchg
movs
pop
(bad)
loopne
nop
xchg
adc
inc
inc
icebp
push
xlat
mov
in
xor
iret
xor
mov
ret
xor
adc
repz
fld
cmp
mov
not
loope
push
dec
cwde
out
cwde
dec
fsub
ret
ficomp
popf
dec
pop
mov
or
in
lock
xor
repz
pop
hlt
je
ret
test
or
dec
pop
sub
pop
jo
inc
mov
cdq
jg
das
pop
js
mov
mov
pop
lds
stos
adc
fistp
or
inc
retf
pusha
lahf
out
lods
adc
ret
pop
cmp
mov
lods
shr
pop
cld
movs
cmp
(bad)
jle
jg
push
xchg
mov
mov
cmps
pop
stc
test
adc
inc
mov
jmp
and
sbb
icebp
pop
mov
mov
add
stos
fwait
call
and
pop
ffree
or
sbb
sub
pop
jbe
ret
cmp
std
and
xor
adc
jge
mov
dec
sub
pop
cmp
xor
sbb
fbld
cdq
dec
adc
imul
dec
cmp
dec
dec
dec
sub
or
loop
ror
in
or
and
dec
aam
sub
inc
mov
into
fild
fdivr
movs
push
bound
jp
mov
mov
add
push
ins
repz
push
push
xor
push
dec
xchg
adc
xor
ss
aad
inc
adc
push
push
adc
xchg
retf
xor
fsub
xor
mov
scas
ret
jne
xor
mov
iret
push
xlat
ficomp
dec
outs
js
test
cmc
jb
push
mov
sub
mov
xor
or
jmp
jno
jl
sbb
jns
test
dec
int
mov
xchg
scas
adc
arpl
pop
jbe
push
(bad)
aas
out
jmp
rcl
jge
leave
mov
push
fcom
es
pop
call
add
icebp
imul
mov
fldz
inc
rol
andps
aaa
sub
out
ffree
shl
(bad)
xor
cli
inc
int
and
and
jecxz
fnstcw
pop
mov
mov
out
mov
mov
jge
xlat
aad
push
push
adc
adc
enter
scas
inc
jle
movsx
test
not
jl
sub
and
xor
lods
es
popf
add
retf
adc
std
jno
mov
hlt
dec
and
lods
daa
pop
mov
(bad)
mov
scas
nop
in
sub
rcr
test
mov
cmp
cmps
cmove
push
and
xchg
add
add
push
or
pop
push
and
pop
cmps
sbb
dec
inc
adc
dec
xchg
shl
es
out
daa
test
dec
mov
hlt
cmp
mov
fnstenv
out
xchg
dec
sub
scas
mov
jmp
cmp
jne
jge
fs
jle
loopne
sub
dec
xchg
and
sub
xor
push
lods
cmps
das
mov
and
neg
cwde
(bad)
sub
xor
out
shl
adc
jp
mov
mov
outs
fisttp
ins
pushf
daa
loope
sbb
mov
inc
rcl
repz
mov
mov
icebp
dec
sbb
jge
and
pop
xchg
mov
addr16
push
sub
stos
sar
push
cmp
dec
lock
(bad)
sbb
push
hlt
pushf
clc
xchg
lahf
popa
mov
xchg
jle
jg
outs
in
push
pop
imul
scas
imul
iret
pop
inc
or
cmp
or
push
mov
das
add
in
xchg
daa
xchg
adc
pushf
cwde
(bad)
pop
adc
sub
mov
xor
ja
mov
in
cmp
ds
sub
cmp
repnz
inc
icebp
mov
ret
sub
push
push
push
aam
sbb
add
out
jb
stos
lods
lahf
push
sbb
cwde
jns
loopne
int3
xor
xor
or
aam
add
arpl
rol
lea
adc
xor
xor
stos
iret
xor
push
mov
add
stc
jae
into
pop
pop
enter
lods
inc
lds
aas
inc
scas
mov
cmc
es
xchg
aam
lods
rcl
jno
pop
mov
and
cwde
or
lea
clc
sbb
cmp
mov
xchg
fistp
xchg
in
repz
movs
pop
or
sbb
loop
mov
icebp
add
imul
test
pop
pop
xor
test
sahf
loopne
jo
std
lds
call
scas
or
imul
xor
cmc
daa
pusha
mov
(bad)
pop
jge
pop
ss
test
imul
or
push
add
popa
loop
mov
inc
jne
pop
mov
fld
sahf
pop
mov
and
imul
cmp
in
nop
sbb
in
out
ins
and
retf
push
mov
mov
retf
sti
dec
out
dec
push
mov
xchg
(bad)
xchg
add
mov
mov
jg
inc
inc
les
ins
fwait
xchg
mov
out
js
and
mov
(bad)
(bad)
stos
pop
icebp
pusha
jl
ins
push
scas
xchg
stos
aad
push
dec
sbb
push
aad
aas
in
dec
or
in
mov
inc
in
and
dec
pop
clc
shl
call
pusha
jmp
and
xor
and
ss
or
out
nop
adc
cdq
xor
and
nop
test
jp
dec
cdq
mov
or
dec
fidivr
adc
retf
mov
pop
(bad)
sbb
es
dec
push
es
inc
mul
out
sub
push
int
sbb
xlat
fs
movzx
fisttp
cmps
adc
add
mov
inc
sbb
int
scas
xchg
push
rcr
dec
jo
pop
mov
pop
cmp
mov
ja
mov
js
jnp
add
sti
pop
enter
push
imul
add
cmps
sbb
fwait
cmps
xchg
ss
inc
sbb
add
in
jne
jo
fs
movs
adc
sbb
mov
shr
sbb
and
sbb
or
jecxz
and
enter
mov
into
test
imul
loope
lods
sbb
pusha
cmp
pop
jno
mov
fsub
cs
jbe
xchg
dec
sub
lds
out
mov
repnz
push
lods
repz
xchg
dec
push
add
(bad)
mov
ror
fst
jg
movs
jnp
adc
mov
(bad)
adc
push
cdq
cmp
pop
or
mov
mov
adc
jbe
adc
loopne
inc
and
add
clc
cmps
dec
inc
pop
ins
push
inc
push
aaa
push
pop
bound
sbb
dec
dec
push
lea
lods
(bad)
int3
add
sbb
adc
xchg
outs
fiadd
aas
sahf
inc
das
stos
ret
out
leave
mov
sbb
or
xor
out
repnz
cdq
adc
dec
fimul
out
cmps
repz
jge
arpl
mov
jecxz
inc
add
xchg
cmps
xchg
dec
test
push
scas
test
mov
and
aaa
je
and
xchg
arpl
mov
jo
(bad)
mov
ret
lods
jne
jno
push
dec
fdivrp
icebp
fs
mov
fisub
pop
(bad)
mov
stos
add
cdq
aaa
inc
repnz
add
cs
sbb
inc
aad
fdivr
adc
idiv
or
fisubr
scas
jnp
sub
addr16
dec
pop
ja
call
shl
and
xchg
and
out
stc
int3
inc
rcr
sub
mov
mov
and
mov
arpl
gs
lods
jg
inc
stos
data16
pop
xor
add
sbb
mov
mov
test
mov
(bad)
push
xchg
pop
scas
cs
sbb
lahf
shl
je
fadd
and
or
mov
ret
(bad)
int
sub
push
pop
push
(bad)
(bad)
call
push
std
scas
xchg
jae
cs
je
dec
push
ror
and
cli
dec
fwait
mov
icebp
popf
xchg
pop
ins
push
sti
dec
mov
pusha
mov
mov
bound
and
or
loope
inc
mov
imul
or
lds
or
push
mov
leave
add
(bad)
push
and
test
and
cli
sub
add
jmp
mov
xor
in
test
jge
aam
mov
push
in
in
fsub
cmp
xchg
mov
xchg
sbb
pop
dec
popf
mov
adc
mov
cmp
fimul
imul
pop
or
sbb
ja
and
out
push
inc
sbb
das
sub
shr
pop
inc
rcl
fwait
(bad)
push
xchg
push
push
sub
mov
lods
xchg
pop
cmc
dec
sbb
inc
int3
loop
popf
fistp
aam
lea
push
jle
cmp
xchg
mov
mov
bound
push
sub
xlat
dec
ins
ins
imul
fs
and
pop
stc
ins
es
inc
jp
sbb
adc
fwait
repz
and
loope
or
dec
sbb
jecxz
pop
push
ins
pop
bound
or
std
dec
mov
push
add
repz
push
mov
ret
push
xlat
int
fwait
xor
retf
imul
pushf
mov
fwait
pop
or
loop
sahf
mov
pop
push
dec
add
push
mov
in
push
add
dec
cld
pop
ja
das
jle
pusha
fcom
adc
(bad)
retf
retf
adc
cmp
out
cwde
pop
cwde
and
xor
das
in
pusha
mov
fbstp
fbstp
cwde
scas
pop
cmp
add
jne
fmul
test
sbb
call
sub
aas
cmp
pop
dec
enter
movs
mov
or
pop
mov
clc
lahf
jnp
mov
mov
mov
xor
sub
nop
(bad)
into
mov
ret
xchg
imul
ret
pop
out
clc
xchg
fadd
les
push
(bad)
push
fisttp
pop
xchg
xchg
aad
fyl2xp1
in
cdq
scas
add
jo
lods
imul
add
scas
lahf
mov
shl
mov
pop
outs
sub
and
mov
scas
sub
push
pop
mov
and
or
les
cmp
ins
jmp
mov
test
clc
movs
inc
mov
cmc
cmp
cmps
hlt
adc
daa
aas
outs
mov
cmps
shl
popf
adc
aaa
out
jnp
jmp
cmp
fisttp
(bad)
scas
and
dec
arpl
pop
dec
lods
pop
add
leave
data16
xchg
adc
mov
cmp
xlat
sub
push
mov
lods
not
xchg
aas
add
leave
ror
mov
fs
mov
outs
ret
xchg
mov
push
out
js
stc
cmp
jecxz
test
mov
cmp
add
xor
mov
and
call
retf
cmp
hlt
inc
sbb
push
shl
add
retf
push
cmp
aaa
ror
stos
adc
cmp
jle
shr
push
push
and
jp
xchg
aaa
or
or
xor
jnp
push
mov
sub
xor
mov
ins
or
pop
sub
mov
data16
ret
out
and
jns
or
and
push
xchg
stos
pop
nop
fisubr
xchg
std
loop
jae
adc
inc
je
pop
jnp
scas
add
jmp
sbb
push
jecxz
pop
or
fnstsw
jge
pop
int
popf
and
pop
push
add
mov
data16
xchg
adc
es
sbb
sbb
addr16
cli
sbb
xlat
les
cli
add
mov
sbb
xlat
movs
xchg
pushf
and
jb
repnz
push
enter
mov
mov
(bad)
xor
cmp
dec
or
test
push
xor
jge
imul
jp
test
int3
mov
mov
dec
not
out
mov
cmp
inc
or
pop
rcl
cli
xchg
fsubr
mov
xor
test
adc
xor
shl
enter
and
mov
xor
retf
ss
hlt
xchg
add
faddp
aaa
scas
dec
pop
adc
xchg
js
and
cld
hlt
movs
or
jge
mov
pop
arpl
xchg
pop
cmp
adc
sbb
sti
mov
retf
pop
das
mov
push
cmp
cmp
je
dec
outs
loope
bound
das
adc
gs
ret
cmp
sub
add
pop
ss
loope
fist
fisubr
push
iret
sbb
mov
xlat
pop
xchg
jp
pushf
cmp
sbb
rcr
dec
mov
out
enter
inc
jle
loop
aad
(bad)
mov
pop
stos
popf
repz
stos
retf
inc
(bad)
mov
push
dec
js
xchg
cdq
fisttp
test
out
adc
or
or
sar
add
sub
push
int3
lods
cdq
jns
jmp
inc
lods
xlat
mov
or
adc
and
aaa
pop
iret
add
mov
(bad)
mov
mov
addr16
dec
jne
and
test
or
ins
cmc
popf
int
push
fst
pop
inc
jb
xor
or
dec
xor
xor
sub
inc
popf
cld
nop
jno
div
cmp
ror
retf
and
addr16
mov
jbe
push
mov
jbe
psllq
inc
nop
mov
or
lahf
push
cmp
mov
xchg
adc
jae
shr
push
scas
add
sub
and
mov
and
popf
xor
xor
mov
mov
push
jmp
fmulp
mov
pop
add
mov
ins
sub
jne
mov
xchg
adc
int
sbb
or
jns
rol
movs
sbb
sbb
loopne
mov
mov
jp
xchg
jae
adc
cmp
icebp
(bad)
and
xchg
out
scas
aas
fs
sar
call
call
das
test
(bad)
(bad)
sub
dec
mov
lods
call
sub
inc
mov
ins
push
cmp
push
leave
pushf
scas
shl
loop
(bad)
imul
call
pop
jns
or
sub
in
mov
gs
jmp
pushf
call
mov
or
mul
int
mov
stos
push
push
into
vhsubps
sub
(bad)
xor
mov
in
and
jne
scas
into
mov
scas
aaa
dec
call
dec
es
mov
mov
sub
jg
cld
or
lahf
pop
xchg
in
mov
pop
xchg
cmps
mov
das
dec
jmp
or
les
retf
test
mov
shl
mov
xchg
(bad)
into
inc
repnz
dec
and
call
out
jecxz
xor
pop
mov
cmp
lahf
sub
clc
cmp
or
push
test
mov
add
pop
shl
js
repz
in
mov
xchg
ret
rol
in
dec
and
pop
and
sbb
mov
xlat
inc
js
cld
lock
mov
ins
movs
lds
mov
jle
sbb
loopne
pop
(bad)
inc
stos
xchg
scas
test
pop
mov
repz
xchg
icebp
and
cli
movs
pop
sar
cli
xor
inc
arpl
sbb
in
push
ins
jl
push
inc
dec
jo
les
lahf
pop
dec
clc
movs
mov
stc
jb
pop
and
pop
sar
cmp
ror
and
jno
int
ror
repz
mov
and
stos
clc
and
js
not
push
in
add
add
mov
cmps
sub
inc
iret
xlat
rcr
cmps
jns
cmp
push
mov
jb
dec
repnz
lock
inc
cmp
mov
add
lea
adc
adc
and
outs
ror
data16
xor
fcmove
sub
popa
or
stos
fstp
ins
cmp
inc
sbb
xchg
pop
cld
add
call
dec
inc
out
shl
adc
cmc
mov
(bad)
fnstenv
test
pop
in
and
ins
fwait
pop
or
imul
inc
mov
lock
fdiv
jg
idiv
(bad)
lock
add
xor
test
push
jne
fdiv
out
scas
or
mov
stos
data16
test
sub
jmp
xchg
mov
addr16
fld
jge
mov
pop
aad
ds
scas
fs
fist
sbb
test
dec
push
outs
stos
sahf
pop
repz
sub
pop
mov
ins
pop
out
dec
dec
out
or
outs
sub
and
jbe
addr16
mov
lds
repz
mov
fcom
rcr
push
sub
mov
mov
fucom
into
mov
jl
xor
cmp
xchg
mov
scas
mov
and
cmps
pop
add
sbb
or
jbe
or
and
nop
and
inc
dec
pusha
jle
cs
sbb
xor
pop
and
mov
fcmovnbe
mov
adc
dec
cli
clc
pop
out
into
cld
sar
(bad)
pushf
xchg
push
rol
adc
sahf
in
loop
push
in
dec
xor
push
mov
fild
and
jg
adc
push
or
shl
movs
push
and
adc
push
daa
inc
(bad)
add
xlat
retf
jmp
imul
push
sub
retf
sbb
sbb
jo
sub
ja
and
dec
xor
ja
push
pop
outs
ss
jmp
jns
push
add
iret
push
or
lods
and
cmps
fsubr
mov
aas
(bad)
cmp
addr16
add
pop
xor
ins
rol
popa
mov
jg
int3
mov
(bad)
mov
pusha
cwde
mov
je
cli
out
out
pop
ds
xor
loop
movs
sub
or
xchg
retf
fs
pop
stos
cdq
jge
or
push
push
pusha
out
test
push
ins
adc
cs
(bad)
mov
sub
xor
icebp
test
sahf
jnp
lahf
xchg
inc
pop
sub
lea
jo
or
mov
int3
out
adc
mov
xchg
or
(bad)
push
shr
dec
sbb
int
data16
sahf
sar
or
movs
push
les
addr16
push
loop
jl
stos
mov
mov
loopne
mov
jmp
ins
fmul
xchg
jl
scas
adc
xchg
dec
stos
adc
ret
scas
mov
je
es
in
jns
call
jecxz
pop
retf
mov
push
dec
dec
mov
sbb
mov
and
sub
int3
cmp
pop
mov
jmp
sub
mov
(bad)
arpl
adc
js
mov
xchg
sub
aaa
push
test
push
aad
out
sahf
sub
and
xor
sub
pop
dec
sbb
sbb
xchg
jl
fnsave
in
xchg
add
and
pop
add
mov
arpl
call
pop
xchg
retf
fidivr
jl
and
mov
ret
or
jle
lods
repnz
je
paddq
push
inc
jmp
call
enter
stos
sahf
repnz
adc
inc
add
or
mov
mov
mov
and
fwait
mov
shr
mov
push
sahf
jecxz
ins
mov
mov
repnz
(bad)
jge
retf
pop
and
or
repz
or
retf
repnz
repnz
inc
mov
jle
mov
dec
push
in
cmps
jmp
ss
fild
cli
out
jle
inc
pop
and
jg
pushf
fxtract
fmul
mov
or
mov
sysenter
inc
push
dec
mov
inc
cmp
cmp
pop
xor
jno
arpl
cwde
(bad)
inc
jge
scas
or
jecxz
repz
push
fimul
cmp
pop
icebp
adc
and
mov
cmps
xchg
add
popf
inc
test
lods
push
cmps
mov
pop
gs
sbb
scas
scas
adc
xchg
or
aam
pushf
fwait
test
xchg
sbb
xchg
ret
add
out
imul
rcr
ds
out
or
imul
xchg
aad
std
scas
sub
not
ret
mov
push
pop
jne
neg
(bad)
add
movs
test
pusha
cmps
fnsave
aaa
cmps
loop
ss
fimul
sub
clc
or
or
adc
sbb
dec
add
jp
sub
(bad)
mov
push
stos
test
jmp
aaa
sbb
and
and
out
push
jns
sahf
push
movs
mov
mov
add
xchg
imul
pop
jbe
gs
repnz
fisttp
mov
push
mov
sbb
mov
call
push
jae
enter
push
test
rcl
ret
mov
gs
push
pop
sti
(bad)
call
imul
or
cli
push
cmp
loope
and
ins
les
sar
addr16
mov
cdq
cmp
push
push
ss
add
dec
es
mov
js
inc
in
jp
push
outs
int
xchg
mov
in
fisttp
or
cmps
cs
sbb
mov
pop
cmp
xchg
ss
add
jl
hlt
lods
adc
pop
test
and
jmp
pop
enter
icebp
fstp
lods
or
adc
jae
fstp
pop
popa
xchg
jg
lods
sub
test
fld
cmp
in
mov
cmps
mov
sub
xchg
dec
lods
jp
mov
xor
adc
add
xchg
add
outs
mov
dec
dec
jb
pop
outs
sub
lds
add
inc
sub
inc
mov
dec
add
popf
(bad)
je
and
mov
push
loope
xor
(bad)
lods
icebp
inc
adc
mov
mov
xor
je
and
out
add
stc
js
mov
enter
mov
movs
fiadd
jbe
or
mov
sub
cmp
in
mov
pop
adc
fwait
add
pop
and
outs
loope
sub
mov
lods
jge
mov
mov
loop
and
je
lods
pop
stos
adc
scas
inc
mov
push
cmps
outs
jne
sbb
sti
in
outs
jecxz
jecxz
dec
adc
popf
sahf
pop
cs
push
mov
push
xchg
ficomp
push
repz
clc
xlat
shr
jnp
sub
rcl
add
xor
or
sti
xchg
cmp
cld
or
dec
mov
out
pop
(bad)
nop
lea
cmc
(bad)
aad
xor
bound
push
sbb
rol
mov
fdiv
mov
sbb
cli
dec
xor
dec
xor
push
scas
and
movs
es
inc
sub
cmp
or
out
fbstp
test
mov
xchg
jmp
int3
addr16
aam
xor
es
scas
mov
(bad)
and
push
pop
movs
cmc
push
lahf
loop
mov
in
pop
jb
icebp
add
xchg
ins
jne
xchg
push
test
lods
out
pop
ja
adc
test
jb
hlt
pop
jbe
and
retf
ins
dec
pop
mov
sbb
add
dec
inc
xlat
and
push
loop
bound
cwde
rcr
call
xchg
push
sbb
add
rcr
and
push
pop
xor
call
sbb
imul
in
push
mov
loopne
add
aas
and
xor
in
pop
xlat
lods
and
jns
cmp
fstp
call
mov
(bad)
push
xchg
inc
xor
retf
dec
mov
fcomp
push
mov
jmp
push
cli
sub
data16
adc
shl
jnp
lods
pop
shl
dec
cld
xchg
aaa
outs
sub
xor
(bad)
jnp
stc
mov
ss
add
inc
push
cmp
comiss
pop
cmps
or
jmp
mov
test
mov
jmp
dec
jp
xor
cli
mov
cdq
cwde
mov
in
cmc
inc
sub
mov
gs
mov
sbb
(bad)
sbb
mov
ret
clc
pushfw
scas
inc
(bad)
out
cmp
ret
jle
mov
addr16
add
test
sub
sahf
add
and
and
jle
add
int3
into
repz
xchg
in
test
and
add
int3
jg
ds
jl
xor
jle
and
add
mov
inc
dec
mov
(bad)
xchg
dec
adc
sbb
ins
inc
clc
leave
js
xor
nop
inc
test
adc
out
and
sub
out
push
lods
ret
(bad)
mov
inc
mov
mov
out
fmul
inc
call
jp
int
addr16
leave
pushf
mov
les
sbb
int
ss
mov
dec
call
popa
jle
pop
pop
jle
dec
push
adc
add
(bad)
out
in
fimul
adc
scas
out
dec
mov
dec
xchg
dec
std
cmp
stos
cs
rcl
repz
(bad)
add
dec
sbb
push
call
mov
adc
enter
pop
pushf
cmp
fwait
(bad)
xor
jecxz
movs
xlat
push
iret
icebp
aaa
outs
inc
sub
jge
pop
(bad)
fisubr
icebp
lods
(bad)
ins
outs
lock
stos
das
lods
aam
mov
add
mov
xlat
dec
dec
(bad)
sub
test
movs
jecxz
repz
mov
jle
outs
inc
jnp
xor
mov
pop
jecxz
jno
jo
dec
xchg
add
sbb
fld
das
jmp
sbb
jl
mov
push
and
xchg
aam
add
movs
mov
cmp
stos
(bad)
outs
jmp
xchg
sub
mov
lods
add
pop
add
cmp
call
in
push
xor
mov
adc
je
pushf
mov
xchg
adc
cmps
cmp
push
push
cmp
daa
(bad)
in
(bad)
leave
leave
cwde
dec
push
cwde
ja
inc
in
movs
inc
sbb
jg
pushf
jge
adc
(bad)
iret
daa
int
jg
sbb
sbb
and
mov
cmp
inc
xor
push
jnp
int
mov
imul
addr16
test
int
aas
push
pusha
int3
fadd
fild
inc
jle
test
xchg
dec
mov
inc
imul
lea
add
call
iret
cwde
stc
rcl
mov
xchg
ja
out
aam
dec
or
mov
jnp
and
add
pusha
or
xlat
(bad)
pop
jmp
sub
xchg
mov
fistp
fimul
and
ds
rcl
stc
in
loope
and
cmp
or
ror
xchg
cli
add
ret
and
adc
nop
popa
enter
xor
inc
push
enter
xchg
and
addr16
or
popa
sub
stos
popf
add
xor
jae
or
cs
push
mov
sbb
out
and
add
mov
sahf
lods
cli
jmp
nop
imul
(bad)
cmc
push
stc
and
nop
aad
outs
movq
inc
ins
sbb
test
xor
bound
pop
pop
iret
jle
dec
mov
popa
cmc
int3
and
cdq
push
mov
or
pop
(bad)
std
lods
xor
pop
push
push
sbb
mov
jmp
fsubr
test
xchg
(bad)
scas
sbb
lods
xor
mov
or
sti
fchs
dec
push
inc
in
sar
xor
ds
mov
mov
xchg
add
loopne
xchg
pop
enter
mov
imul
jecxz
pusha
jns
jo
or
mov
xor
or
inc
mov
sub
xor
xor
repnz
xor
or
outs
or
jo
sub
or
mov
mov
xor
or
mov
adc
data16
dec
or
jp
enter
lock
xchg
shl
ins
push
pop
jne
(bad)
es
retf
retf
add
movs
sbb
inc
push
call
test
cmp
mov
push
push
hlt
pop
ds
push
int
or
dec
out
mov
inc
pop
xor
ds
out
rcr
mov
movs
jmp
imul
dec
pop
adc
push
es
dec
adc
mov
fsubr
inc
lods
and
cdq
outs
sub
shl
aaa
aad
add
in
push
scas
cwde
aad
xchg
sbb
call
push
outs
adc
outs
ficomp
mov
leave
xor
fwait
jne
inc
mov
ffreep
mov
add
lahf
mov
ja
retf
rcl
lods
xchg
or
push
dec
outs
bound
xor
enter
dec
ss
xchg
push
fld
jb
popa
add
(bad)
(bad)
pushf
lock
push
mov
sbb
push
xor
mov
int
jp
icebp
jg
cwde
and
mov
pusha
test
cmp
or
jp
or
bound
xor
call
jo
repz
inc
jo
adc
hlt
int
fadd
xor
sbb
push
call
and
mov
enter
bsf
dec
sbb
dec
(bad)
fimul
mov
push
xor
in
rcl
lock
mov
jo
(bad)
mov
pop
clc
mov
and
rol
dec
mov
imul
jmp
pop
mov
nop
cmp
inc
in
adc
shr
je
dec
pop
imul
jle
lea
sub
dec
fiadd
and
inc
hlt
imul
xlat
hlt
scas
add
cmp
in
cdq
cmc
pusha
mov
aaa
icebp
ret
imul
sar
jb
test
xchg
dec
(bad)
stc
pop
arpl
adc
pop
ficomp
cmp
(bad)
mov
shr
cmp
xor
std
in
adc
push
std
dec
xchg
(bad)
mov
pop
shl
xchg
push
xor
ret
mov
(bad)
enter
ror
(bad)
jg
es
movs
in
(bad)
and
inc
add
xlat
outs
jne
push
push
jmp
fidivr
dec
jmp
dec
and
xor
mov
retf
ja
call
fmul
(bad)
aad
std
fs
(bad)
frstor
cmps
fistp
shl
aas
pop
dec
pushf
xor
scas
call
idiv
jmp
stos
stos
mov
int
retf
sub
mov
and
test
jns
cmp
push
jle
stc
dec
iret
retf
sahf
jb
cs
xchg
pop
loop
mov
repnz
call
sahf
jmp
sbb
inc
add
addr16
cmp
xchg
sti
mov
or
push
inc
shr
push
xchg
popf
ins
adc
pop
ret
inc
mov
push
test
out
(bad)
inc
aad
outs
popf
out
mov
mov
mov
loopne
addr16
jle
and
mov
cmp
sub
add
and
push
mov
xlat
mov
pop
or
push
adc
mov
dec
jb
(bad)
sti
ins
out
(bad)
cmp
sub
jbe
repz
fild
xor
(bad)
xor
xor
jne
sub
fcmovnb
pop
push
add
pop
jp
add
adc
sbb
push
mov
ret
or
mov
cmp
mov
retf
sbb
vmovss
push
scas
repz
mov
jo
inc
pop
movs
ins
push
cmp
pop
mov
jns
mov
push
adc
dec
sub
mov
push
xchg
mov
jmp
cwde
mov
or
ins
in
pop
mov
push
sahf
inc
xor
push
test
dec
movs
fild
sbb
push
cdq
jecxz
dec
push
loop
inc
mov
arpl
hlt
call
out
sbb
or
iret
retf
and
or
pop
mov
pop
test
repz
and
dec
sbb
or
jns
or
repz
stos
inc
retf
or
dec
sbb
jecxz
dec
push
jb
jle
bound
in
adc
out
sar
cmp
call
rcr
js
mov
daa
dec
pop
imul
call
add
in
xor
jle
push
ds
les
hlt
ja
mov
pop
cdq
sbb
add
mov
or
call
aam
cmp
add
lock
dec
jns
mov
mov
mov
cli
push
jp
pand
arpl
mov
in
add
fdiv
sub
test
jle
mov
cmps
add
jne
jne
inc
mov
jns
outs
push
mov
mov
push
pop
data16
mov
mov
jge
les
fistp
aas
imul
jns
aam
sub
pop
fldenv
push
loope
inc
xchg
es
(bad)
sbb
push
ret
sbb
sub
mov
push
dec
aaa
add
inc
inc
cmc
fwait
sbb
outs
pop
(bad)
or
sbb
mov
jl
aaa
stos
mov
movs
mov
cmc
fdiv
mul
pop
std
mov
ficomp
dec
pop
sbb
lds
inc
xor
xchg
xor
inc
dec
jmp
(bad)
addr16
sub
popf
or
dec
ficomp
adc
aam
dec
inc
or
lods
add
mov
dec
in
fsubr
xchg
push
ds
sbb
fistp
pop
mov
js
dec
or
mov
or
mov
xor
push
or
xlat
ss
sbb
sbb
lods
xlat
jae
and
fldcw
push
or
out
cwde
mov
cmps
pop
sar
fdiv
push
es
je
outs
pusha
fidiv
add
add
cld
mov
lea
jns
neg
push
sbb
js
pop
or
and
xor
test
imul
mov
mov
test
mov
mov
pop
loope
xchg
lahf
retf
imul
lea
xchg
inc
and
mov
std
lods
pop
fs
push
or
les
push
sub
les
bound
inc
outs
(bad)
(bad)
adc
mul
inc
xchg
into
call
xchg
sbb
lods
adc
sub
aam
fnstcw
xor
adc
scas
pop
cmp
sbb
or
cmp
push
or
xor
add
sbb
mov
xor
scas
mov
cwde
mov
cmp
popa
xchg
fnsave
and
mov
(bad)
mov
jbe
jmp
adc
and
mov
push
inc
outs
loope
retf
pop
push
lods
imul
and
push
sub
xchg
test
inc
mov
mov
xor
pop
add
aas
sbb
je
fst
fs
xchg
adc
push
mov
xor
test
mov
fistp
mov
adc
fnstenv
es
or
jo
and
test
fsubr
mov
sub
shl
enter
pop
or
clc
fisub
stos
fwait
inc
inc
imul
sub
pop
or
ret
xor
mov
bound
jmp
sub
sub
jl
push
jmp
imul
nop
ins
sub
xor
or
sub
and
ror
adc
mov
cmc
bound
loope
sub
jno
dec
inc
daa
and
cmps
mov
mov
fwait
mov
mov
mov
js
push
imul
mov
mov
mov
cmp
outs
iret
mov
fs
cmp
daa
adc
mov
mov
xchg
fcom
cmp
pop
mov
sub
in
int3
rol
push
nop
mov
je
stc
push
fild
cmc
xchg
pop
adc
inc
lock
dec
sub
mov
mov
addr16
mov
sub
in
xor
sub
inc
out
xlat
jbe
mov
std
mov
jne
xor
mov
mov
adc
std
dec
push
popf
sbb
jg
xchg
stc
jbe
repnz
lds
jae
push
add
jae
jae
xchg
fucomip
idiv
ficom
cli
and
push
loope
inc
cmps
retf
or
movs
pop
push
adc
rol
int3
push
stos
ffree
mov
xchg
cmp
stos
fsub
or
dec
push
aas
shl
xor
lods
jmp
data16
mov
mov
push
(bad)
movs
jmp
pop
xchg
(bad)
(bad)
rcl
mov
sub
in
mov
in
sub
sbb
xchg
dec
jle
mov
lea
adc
mov
sbb
rcr
dec
push
or
mov
cmp
adc
inc
mov
scas
adc
xor
mov
push
push
mov
test
mov
ret
inc
stos
enter
jno
dec
sbb
inc
pop
mov
ins
and
mov
xlat
xchg
cdq
dec
sbb
lods
dec
xor
test
mov
add
daa
cmp
mov
jle
loop
add
das
xchg
mov
fbstp
dec
xlat
(bad)
jo
jle
std
shr
xor
fcomp
push
pop
retf
jmp
mov
out
dec
mov
mov
mov
je
jge
add
mov
and
push
call
mov
rol
int3
push
rcr
cmps
lods
mov
adc
mov
jmp
aam
out
xor
mov
jmp
(bad)
sub
retf
add
aas
push
dec
iret
imul
adc
add
mov
xor
pop
jne
jbe
sbb
push
cmp
lahf
jae
mov
retf
imul
mov
mov
cmp
inc
jne
pop
sub
dec
fcomi
test
ja
repz
cli
(bad)
mov
mov
xlat
sub
std
ins
sbb
xor
nop
(bad)
test
popf
movs
jecxz
cmp
fild
ins
pop
mov
ss
in
(bad)
popa
inc
jbe
lods
ficom
pusha
lahf
lods
xchg
outs
mov
cmp
mov
push
inc
mov
retf
aam
jp
mov
dec
mov
mov
sub
loop
push
jmp
push
ror
ins
and
adc
aad
inc
ss
mov
leave
je
test
add
icebp
add
sbb
cmp
dec
xchg
jns
or
add
pop
mov
imul
xchg
movs
dec
sbb
sbb
cld
sub
lahf
lds
icebp
mov
sub
imul
lea
leave
clc
aas
sar
sub
(bad)
popa
sub
inc
(bad)
push
rcr
pop
dec
mov
or
fisub
sbb
pop
push
xchg
dec
les
sbb
outs
mov
jo
inc
push
pop
es
xchg
(bad)
mov
(bad)
sbb
and
inc
mov
or
ss
mov
shr
and
or
pop
dec
push
ss
jno
jecxz
push
mov
jp
loop
xchg
je
inc
pop
hlt
test
pushf
fistp
test
xchg
cmp
ret
or
push
mov
(bad)
pop
nop
sbb
xchg
add
xchg
adc
xor
jge
cmc
inc
cdq
mov
add
sub
ret
into
jge
cld
stos
inc
dec
and
and
cs
icebp
mov
cs
or
xchg
mov
inc
and
mov
push
jg
mov
jge
mov
iret
fwait
loope
sbb
sbb
sbb
cmc
les
cmp
arpl
ret
add
fsubr
daa
add
cli
sbb
adc
push
add
pop
and
push
dec
lock
jp
jle
cld
jp
jb
and
retf
out
adc
rcl
adc
push
outs
push
mov
sar
out
aas
inc
pop
fstp
fcmovnu
pop
adc
sub
or
popf
add
sbb
sbb
dec
loope
jo
in
jo
or
addr16
shl
aas
xlat
mov
scas
retf
adc
inc
pop
dec
sar
push
and
mov
aaa
outs
loop
and
scas
mov
adc
mov
int
sbb
push
pop
jmp
std
xchg
add
jmp
mov
loopne
into
jecxz
xchg
js
inc
inc
mov
sahf
dec
stos
jno
fisubr
sub
push
aaa
ins
call
bound
inc
lds
pop
push
add
repnz
xchg
cmc
movs
pop
sti
jle
push
push
dec
jmp
add
xchg
mov
jmp
int3
jl
mov
mov
inc
cmp
push
ss
fimul
jo
mov
test
scas
pop
add
lea
in
fwait
xlat
ss
pop
mov
adc
leave
imul
sbb
xor
shl
loop
inc
cmc
ss
cs
xor
repnz
(bad)
inc
and
and
mov
add
nop
mov
or
xor
test
sbb
leave
in
in
rcr
arpl
je
(bad)
stc
sub
mov
push
mov
lds
cwde
jle
lods
int
mov
sub
lods
loop
nop
cmp
retf
jg
push
dec
add
xchg
sbb
sbb
inc
mov
or
jb
cmp
sub
fs
lahf
inc
fnstsw
out
jge
push
test
adc
xchg
inc
sbb
in
inc
adc
jp
and
jne
(bad)
in
nop
sbb
sub
push
fisubr
push
sbb
ret
pop
popa
aas
inc
pop
shl
push
ficom
push
icebp
jae
mov
ret
jle
xor
test
enter
add
js
sub
repz
into
mov
cmp
lahf
jmp
push
xchg
ret
add
arpl
sbb
pop
aam
pushf
cmps
dec
loopne
loope
fwait
mov
test
cmp
xor
xchg
sti
adc
adc
popf
add
inc
xchg
imul
jo
xchg
dec
mov
mov
cmp
int3
mov
xchg
lock
or
mov
fstp
add
sub
mov
fld
int3
scas
mov
mov
mov
or
mov
and
push
pop
pop
clc
adc
jns
xor
pop
add
or
xor
pop
mov
cmps
fst
lea
cdq
pop
stc
je
jno
cmps
(bad)
repz
pusha
push
mov
push
push
dec
ficom
xchg
and
mov
and
cmps
cmps
and
dec
xchg
mov
xor
out
aam
mov
add
mov
cmp
inc
jp
mov
nop
gs
movs
movs
outs
mov
xlat
xor
mov
mov
sar
sahf
cmps
les
aaa
xchg
jmp
jge
pop
and
in
mov
xchg
inc
fisub
sbb
pop
mov
scas
or
pusha
xlat
int3
hlt
call
and
sbb
rcl
adc
inc
adc
mov
sysexit
mov
lods
sub
push
mov
fldenv
leave
or
xor
vmovdqa
test
mov
and
rol
pop
syscall
and
lock
aas
jecxz
cmps
sbb
outs
sub
test
in
adc
or
retf
retf
xor
in
cwde
jmp
fiadd
(bad)
or
push
jbe
inc
lahf
inc
call
jb
mov
push
push
stos
jmp
mov
mov
popa
dec
dec
adc
xor
mov
mov
in
xor
and
loop
addr16
or
add
jbe
or
push
sub
inc
je
jmp
and
ret
mov
jg
dec
(bad)
ja
xor
lock
pop
mov
repnz
xor
fwait
jmp
sub
imul
mov
out
loopne
inc
fs
imul
rcl
add
cdq
jbe
popf
xor
div
test
pop
in
xlat
call
jae
jbe
ss
(bad)
scas
jnp
sbb
lock
push
fsubr
sub
push
call
add
sbb
jae
push
jbe
sbb
icebp
idiv
in
popa
jb
fistp
icebp
test
jl
retf
call
(bad)
sub
xor
fimul
push
push
mov
pop
fisttp
jge
into
in
lods
in
sub
bound
xor
xchg
aad
js
movs
inc
rcl
inc
push
sbb
jge
jle
outs
loopne
jge
pusha
hlt
mov
sahf
jne
add
jbe
out
sub
dec
jmp
gs
icebp
push
mov
aam
mov
outs
push
sbb
and
in
and
leave
xor
jp
push
inc
push
jg
xor
sar
(bad)
mov
pop
mov
inc
(bad)
movs
movs
jno
xchg
lods
sub
into
mov
sub
loope
inc
lods
ror
cld
jae
fsubr
movs
sti
call
cmp
mov
inc
into
clc
shl
scas
pushf
lds
xor
or
jmp
and
mov
mov
sub
out
pop
mov
xor
sbb
scas
sub
push
fst
ficomp
jns
cli
xchg
jge
mov
cmp
adc
mov
sbb
imul
cmp
mov
gs
and
enter
dec
xor
jae
and
scas
jns
aaa
stos
sub
ins
movs
xchg
stc
js
push
xchg
enter
fist
mov
jne
sub
pmulhw
ss
sbb
sub
xlat
lods
aam
mov
je
dec
mov
mov
cwde
mov
xchg
aam
pop
and
fistp
imul
mov
inc
pop
xchg
in
(bad)
call
call
cmp
pop
add
jmp
and
sbb
imul
push
cs
sahf
arpl
ins
fstp
cmp
fcom
loope
sbb
loope
inc
pop
push
(bad)
cwde
das
xor
pop
or
push
and
add
ror
scas
aaa
lea
and
adc
rol
fbstp
push
pop
aam
addr16
mov
sbb
in
sbb
pop
mov
and
fidiv
sbb
fadd
ret
je
scas
xor
lock
xchg
outs
loopne
sbb
int
and
dec
cli
ret
bound
sti
cmp
jge
outs
pop
cld
sub
inc
inc
cmp
(bad)
hlt
jo
je
dec
ins
cmc
push
scas
dec
nop
sbb
ds
gs
das
xchg
scas
jnp
fimul
aaa
or
inc
push
jae
cmc
mov
and
enter
mov
or
adc
outs
adc
out
add
jmp
lods
ror
ins
jecxz
xchg
fwait
retf
nop
inc
pop
sti
lods
xchg
in
ror
popa
repnz
xor
jns
add
sbb
jecxz
xchg
pause
lahf
pop
jne
ja
(bad)
sbb
cmovp
movs
jle
(bad)
inc
scas
(bad)
add
mov
or
ins
adc
cwde
xchg
and
adc
pop
fisttp
xor
hlt
jmp
je
into
mov
adc
shr
pop
jmp
scas
gs
adc
loopne
adc
jmp
and
movs
adc
or
dec
ret
sbb
fild
(bad)
sbb
call
jge
bound
push
sub
loopne
(bad)
jmp
shl
adc
stos
fadd
lods
push
shl
xchg
push
repz
retf
aaa
sub
fs
xchg
dec
jnp
das
dec
in
les
repnz
ja
gs
pop
neg
pop
mov
mov
sub
jno
imul
xor
lds
retf
movs
xlat
adc
xchg
push
aas
dec
sub
les
xchg
(bad)
push
adc
pop
jle
mov
pop
call
push
mov
adc
mov
push
fsub
out
(bad)
sub
inc
lods
or
cmova
dec
jbe
mov
rcl
fisubr
xchg
pop
int
test
xchg
imul
stc
jecxz
inc
inc
ins
mul
jns
inc
sub
mov
pop
ror
push
outs
xchg
fs
add
xchg
sti
rcl
or
and
sbb
call
mov
(bad)
mov
bound
adc
outs
mov
jmp
idiv
adc
js
dec
cmps
mov
or
mov
test
push
or
or
(bad)
(bad)
aad
sbb
mov
mov
mov
cmp
shl
sbb
pop
loopne
lock
stc
push
xor
sahf
test
(bad)
out
sbb
cmp
sbb
xchg
loop
cmp
call
aam
idiv
(bad)
fistp
sub
hlt
add
and
stc
mov
(bad)
sub
jae
mov
mov
nop
cmp
lods
outs
ds
mov
sub
add
mov
(bad)
mov
jnp
(bad)
popf
xchg
gs
pop
rcl
adc
push
jge
add
dec
add
mov
stc
inc
mov
xchg
xchg
and
ret
shr
and
and
or
mov
jge
mov
fdivp
sub
push
test
mov
sub
pop
in
xchg
xor
sub
dec
in
aas
xor
js
rsqrtps
or
jmp
pop
mov
push
jmp
dec
or
lods
gs
mov
pop
lahf
sub
push
cmp
jmp
stc
mov
mov
shr
(bad)
loop
mov
dec
jns
out
imul
cpuid
mov
pusha
adc
jnp
(bad)
fidiv
ins
test
mov
out
sub
fld
cmp
imul
enter
addr16
shl
inc
jb
ret
push
mov
test
xor
cs
push
call
xor
retf
lods
cs
mov
xchg
adc
push
cmp
push
(bad)
push
adc
cmp
xchg
push
ficom
lock
inc
mov
pop
imul
mov
mov
mov
mov
stos
(bad)
out
mov
or
arpl
(bad)
cs
sbb
xor
lods
clc
sub
mov
movs
cmps
bound
stc
nop
mov
dec
lds
xor
xor
xor
pop
jno
add
lock
aaa
aas
out
ja
out
push
in
sbb
aad
std
movs
jl
inc
mov
lahf
or
add
cmp
lock
sub
cmp
or
sbb
cmp
pop
mov
pop
cmp
in
xlat
retf
adc
mov
fdivrp
sub
xor
xchg
(bad)
movs
icebp
inc
hlt
lods
jb
ja
mov
mov
pushf
push
pusha
ret
sbb
inc
dec
mov
popa
xchg
aas
jo
sti
addr16
nop
test
rol
clc
add
push
pop
cwde
es
push
mov
outs
pop
and
and
jg
test
push
ds
jle
jge
cmp
xor
cmp
sahf
loope
out
(bad)
retf
mov
daa
jns
mov
mov
xor
scas
js
push
cwde
aam
and
rcr
push
std
mov
mov
or
lods
mov
add
jecxz
test
jae
or
jge
pop
jno
push
sbb
into
jl
mov
sbb
nop
push
and
fs
jno
mov
add
jo
xor
lods
stos
add
inc
addr16
shl
dec
icebp
sub
hlt
mov
int
inc
pop
shl
mov
mov
enter
jmp
xchg
dec
cmps
add
int3
xchg
test
sub
rcr
xor
push
mov
and
ss
push
jae
cmp
idiv
icebp
(bad)
dec
jae
cmp
(bad)
shl
pop
jae
mov
fsubr
push
inc
out
sbb
dec
push
inc
scas
jo
dec
out
out
add
xchg
sahf
mov
into
jo
orps
mov
push
add
or
fdivr
mov
dec
jns
sbb
push
push
inc
jecxz
inc
pop
mov
shl
add
pushf
and
test
push
ret
mov
gs
sub
loopne
lods
add
imul
fsubr
out
cmc
push
cli
into
cmp
ins
leave
imul
arpl
hlt
and
push
sbb
jecxz
cmp
dec
icebp
movs
push
sbb
jle
mov
repnz
add
in
xchg
inc
mov
add
stc
test
cmp
pop
xor
jecxz
xchg
(bad)
mov
adc
and
inc
adc
ret
outs
arpl
jmp
das
mov
push
(bad)
adc
or
jge
pushf
push
mov
sti
and
xor
fistp
jmp
inc
adc
in
in
scas
ret
loope
or
or
inc
sbb
cmp
(bad)
xlat
adc
xchg
(bad)
cmps
mov
stos
iret
xor
dec
sub
mov
stc
or
push
nop
or
jmp
cmp
push
cmp
sbb
pop
xchg
inc
fwait
inc
adc
bound
ja
mov
mov
or
repnz
lds
mov
mov
jnp
or
cmp
jg
lahf
adc
loop
jb
jecxz
jbe
ds
inc
popf
jbe
inc
cmp
nop
shl
jecxz
bound
sbb
inc
out
cs
inc
(bad)
and
test
outs
push
pop
in
jecxz
ret
cld
mov
mov
repz
cmp
in
sbb
not
sti
pop
scas
movs
dec
sbb
jo
in
sub
lods
xchg
bound
add
sub
mov
add
mov
popa
ds
(bad)
push
jp
sub
lds
test
xchg
jge
xchg
inc
pop
push
mov
std
mov
mov
pop
mov
test
iret
(bad)
jbe
mov
pop
jae
std
fdiv
pop
inc
jne
(bad)
aaa
mov
(bad)
xchg
jecxz
test
test
jne
das
call
xchg
aas
cmp
call
cmp
and
mov
mov
inc
lahf
imul
jmp
scas
push
int3
pop
xor
div
mov
test
ins
xchg
out
jge
push
xchg
cwde
out
sbb
in
adc
ret
sub
dec
add
and
mov
mov
jmp
mov
dec
inc
bound
es
xor
outs
sahf
jb
hlt
mov
xchg
cmp
xchg
cli
sbb
pop
dec
jge
js
jge
ins
test
mov
and
mov
sbb
xor
mov
aaa
leave
adc
jnp
add
ja
sub
mov
dec
out
push
retf
sbb
xchg
and
retf
test
inc
cwde
inc
xchg
out
push
mov
xor
fs
adc
pop
xor
cwde
out
mov
(bad)
fimul
xor
fadd
shl
bnd
jns
mov
mov
cmp
jbe
dec
sbb
inc
add
aam
mov
call
xchg
ins
fwait
cs
mov
mov
add
jl
ret
mov
inc
push
inc
lds
pusha
jmp
sahf
xor
and
xor
push
rol
jg
push
mov
scas
xchg
pop
ins
pop
rcr
cmp
out
stc
sbb
add
add
xor
rol
dec
push
xchg
cs
cmp
xor
pushf
sti
pop
push
and
xchg
mov
leave
fwait
nop
dec
pop
jp
pop
inc
mov
in
je
test
int
cmp
pop
fisttp
cvtps2pd
repz
cmps
or
cli
fnstenv
outs
mov
leave
mov
adc
outs
xchg
mov
cwde
popf
stos
xchg
inc
jae
aam
lods
ds
push
pop
sbb
or
sub
mov
jmp
and
push
and
loop
adc
adc
or
dec
mov
jb
push
mov
or
dec
xor
mov
inc
inc
fnstsw
icebp
sbb
add
jmp
pop
adc
ror
sub
mov
cmps
inc
cwde
jae
jge
arpl
verr
push
leave
or
lods
fwait
and
jno
xchg
data16
loopne
xchg
mov
pop
inc
inc
mov
cmp
sbb
sbb
or
test
cmp
fnstenv
mov
out
cmp
aad
add
test
mov
retf
pop
xchg
xchg
push
dec
mov
loopne
mov
outs
cmps
out
push
shl
adc
into
test
xchg
das
xchg
inc
cmps
and
inc
jge
adc
cmps
aas
out
stos
cs
arpl
dec
pop
pop
mov
(bad)
out
jp
clc
(bad)
(bad)
div
out
or
mov
or
adc
adc
or
cmp
inc
jbe
add
pop
jecxz
aad
loopne
in
imul
loopne
and
mov
push
jecxz
mov
push
and
call
cmp
iret
scas
push
pop
dec
stos
cmp
movs
test
jb
adc
inc
mov
sub
out
repnz
cmp
add
cli
mov
ret
push
sub
mov
xor
cmp
xchg
hlt
inc
retf
mov
push
jg
mov
retf
inc
mov
sub
loopne
gs
test
or
adc
xor
imul
popf
(bad)
repnz
out
outs
push
in
xchg
in
js
lock
adc
pusha
stos
or
xor
pop
push
adc
dec
sbb
int
scas
add
xor
div
mov
into
inc
scas
inc
pop
and
outs
ins
mov
xchg
push
rol
dec
mov
retf
add
jae
arpl
adc
dec
imul
push
cld
jl
or
je
nop
or
(bad)
or
pushfw
int3
mov
stc
rcr
pop
mov
hlt
cli
cmp
cmp
mov
sub
mov
in
push
mov
xchg
xchg
outs
inc
xchg
std
mov
and
out
rcr
dec
xor
enter
add
xor
retf
leave
mov
sub
mov
mov
and
jle
xor
pop
test
jne
fcom
or
test
jb
pop
cdq
xor
cmp
jmp
arpl
stos
cdq
hlt
call
cmps
push
daa
jge
mov
xchg
xchg
cwde
dec
xchg
adc
ja
mov
cmp
scas
push
adc
cmp
aam
xor
arpl
inc
cmps
daa
mov
pop
pop
aas
(bad)
pop
cs
clc
xchg
xchg
xor
iret
cmps
loope
cmc
inc
push
je
ins
test
mov
jl
clc
pop
daa
bnd
test
cmps
pusha
es
mov
js
dec
dec
fidivr
aam
push
inc
and
je
imul
sbb
daa
pop
mov
add
jmp
out
fadd
ss
(bad)
adc
fsubr
ret
repz
ud0
mov
scas
pop
mov
inc
(bad)
sti
out
in
cdq
add
arpl
sbb
xchg
xor
push
fmul
cmp
push
push
and
or
sub
hlt
in
ja
std
fist
(bad)
or
or
jle
xchg
cli
call
fld
fst
hlt
movs
sti
sbb
cld
cmp
dec
lock
pusha
pushf
loopne
mov
dec
ja
aaa
lds
xchg
sub
pop
xlat
mov
mov
enter
mov
fwait
or
mov
xchg
sub
cli
in
pop
fistp
test
add
jne
mov
(bad)
rcl
mov
dec
sub
mov
jmp
lea
jecxz
jmp
push
dec
repz
xor
sub
jp
or
ss
xchg
xor
cmc
add
loopne
std
pop
retf
inc
gs
stc
jae
into
into
imul
sti
adc
call
pop
lods
inc
sbb
push
lock
jne
(bad)
in
out
cli
jbe
outs
mov
das
pop
sbb
int3
push
into
iret
cli
in
pop
and
test
es
loope
aaa
push
icebp
call
sub
test
push
(bad)
inc
cdq
icebp
mov
and
clc
sub
sub
add
push
jp
lock
xchg
mov
fnstenv
dec
aad
pop
cmc
mov
call
sbb
fsubr
mov
inc
jg
int
icebp
ins
adc
ss
fcomp
in
(bad)
data16
stc
je
test
and
jno
sub
call
jmp
ret
test
cmp
add
por
push
mov
(bad)
jl
shr
sbb
icebp
pop
inc
xchg
lds
push
test
jo
jmp
scas
pop
sti
mov
mov
xor
cld
js
dec
adc
call
or
cmp
mov
seta
mov
aam
pop
test
ss
xchg
sbb
adc
mov
out
fdiv
and
daa
cdq
es
fild
rcr
xchg
xchg
mov
xchg
bound
out
js
leave
pop
jbe
hlt
xor
mov
js
mov
ins
cmp
add
mov
mov
add
mov
imul
sub
dec
loope
js
in
cdq
xor
ret
pop
call
xchg
and
add
add
jns
sahf
popa
ins
jns
inc
mov
sbb
jo
adc
out
lods
jl
cmp
sub
dec
fidiv
fstp
inc
in
push
aas
pop
push
lahf
xchg
rcr
mov
out
pop
mov
in
xor
shl
mov
xchg
pop
inc
mov
sub
add
cdq
add
sub
fdivr
sub
rcl
mov
mov
adc
mov
call
imul
sub
xor
inc
mov
mov
jecxz
popf
sub
pop
push
out
lock
sbb
jge
(bad)
pop
les
inc
pushw
or
add
ret
xor
int
mov
xchg
icebp
inc
mov
ficomp
xchg
int3
cmc
mov
loope
ja
pop
sub
fist
das
cli
push
les
cmp
jle
jmp
jmp
popf
mov
sti
inc
mov
pop
stc
cmp
cmc
and
rcr
mov
sub
mov
fbstp
js
push
xchg
cmp
jo
cdq
ins
sub
(bad)
neg
imul
adc
xchg
je
ret
repz
shl
aaa
or
rcr
or
pop
stos
xchg
inc
nop
ror
scas
ja
pop
cmp
sbb
add
pushf
aaa
dec
stc
cmp
(bad)
push
xor
or
bound
mov
outs
mov
adc
rdmsr
sbb
fnstcw
push
dec
pop
xchg
push
xchg
movs
xor
in
mov
js
mov
cmp
xchg
aas
mov
dec
daa
cmps
inc
adc
xor
loope
mov
jle
sub
nop
and
xor
cmp
jmp
xchg
cmps
test
jg
fs
xlat
pop
inc
stc
add
pop
pop
in
cld
cmps
add
cmc
call
sbb
scas
sbb
aaa
mov
mov
add
sub
test
test
mov
ret
sbb
sub
xor
adc
mov
cmp
mov
ins
mov
fwait
shr
inc
mul
sti
out
mov
mov
pop
pop
imul
cs
std
sti
test
cmp
cmp
inc
inc
test
mov
(bad)
jmp
xchg
xchg
repnz
jns
out
aas
xchg
aam
int3
retf
aad
out
mov
dec
mov
mov
jle
stos
sbb
mov
retf
popa
stc
mov
mov
xor
mov
ret
push
mov
pop
fnsave
ret
and
pop
fwait
and
jno
arpl
rcr
add
cmp
add
scas
cmp
xor
inc
cmp
or
ret
sub
pop
push
xor
das
mov
mov
sub
jb
push
mov
and
shl
div
je
or
inc
pop
pushf
xchg
add
add
dec
mov
dec
fadd
add
in
jl
in
inc
cmc
adc
mov
dec
or
lods
aam
imul
outs
jg
inc
or
inc
sbb
sti
fild
inc
sbb
xor
test
dec
jo
mov
mov
shr
inc
jne
push
or
fdivr
adc
mov
mov
fldenv
mov
mov
and
popf
movs
mov
inc
mov
sub
or
fmul
mov
sub
add
test
mov
mov
(bad)
xor
out
aam
sub
sbb
lock
ret
xchg
nop
add
pop
cmp
ja
and
pop
cld
adc
xchg
das
fild
test
ins
adc
inc
movs
test
pop
pop
mov
ret
and
fwait
popa
or
(bad)
mov
mov
and
dec
mov
cld
dec
mov
fdivrp
fs
pop
and
cmp
(bad)
test
dec
mov
int
or
fidiv
stos
jnp
cmp
aad
push
inc
or
sub
fadd
retf
inc
ror
jnp
test
jns
out
inc
imul
xor
jmp
cwde
sbb
push
(bad)
stos
push
test
add
hlt
adc
and
lods
into
xlat
xor
lahf
dec
mov
mov
xor
or
arpl
adc
xchg
sub
inc
xchg
inc
aam
ja
push
loop
ins
pop
mov
add
jl
sbb
cld
or
and
out
stos
sbb
push
bound
pop
mov
scas
shl
aas
jge
retf
mov
aam
int3
scas
dec
loopne
outs
mov
in
mov
into
aam
scas
nop
cs
call
fs
shl
sub
cmp
out
sti
pop
in
xlat
icebp
inc
arpl
jle
cmps
shr
mov
add
rol
(bad)
sbb
mul
in
(bad)
lock
push
xchg
add
pop
fdivp
cwde
add
movs
aaa
cmp
push
daa
xlat
mov
hlt
jmp
sahf
les
test
out
(bad)
rol
ret
out
jmp
and
fs
(bad)
adc
div
outs
shr
fnstcw
(bad)
(bad)
lods
pop
(bad)
pushf
shl
xlat
pop
shr
pop
and
clc
setl
push
stc
pushw
outs
xor
fdivp
mov
mov
dec
pusha
fwait
push
and
(bad)
mov
lock
icebp
mov
push
test
scas
stos
jle
or
jmp
daa
test
inc
inc
test
(bad)
or
fsub
inc
and
push
mov
lock
push
std
mov
pop
mov
aaa
xchg
push
bound
rol
or
push
mov
in
addr16
fistp
shr
xor
ret
(bad)
dec
out
mov
adc
movs
je
ins
retf
xor
jbe
inc
scas
clc
xchg
sahf
adc
sbb
or
imul
loopne
jle
inc
aad
push
enter
idiv
stos
mov
inc
mov
dec
push
cmp
ror
fdivr
add
mov
mul
arpl
fldcw
(bad)
inc
jnp
xchg
loope
fst
xor
lahf
push
mov
pop
data16
mov
xchg
test
test
jmp
inc
mov
popa
call
push
arpl
test
sub
cmp
jle
inc
popa
test
jb
popf
aad
fstp
aad
pop
adc
mov
outs
dec
or
jb
jecxz
loope
sahf
(bad)
add
xchg
(bad)
leave
adc
lock
mov
loope
sub
sbb
jmp
fisttp
sbb
div
jae
add
xor
shr
sbb
pop
xchg
xor
pushf
mov
sbb
retf
jo
jp
jmp
xchg
repz
fisttp
add
pop
or
ins
ja
jmp
cmp
ret
jo
mov
and
and
adc
fmul
mov
cwde
(bad)
retf
sbb
inc
daa
mov
popa
and
xor
xchg
and
pop
movs
pop
mov
imul
adc
mov
sub
retf
jb
xor
sub
jb
test
jae
call
mov
mov
arpl
cmp
push
outs
test
xchg
mov
lods
aas
jns
xor
pop
lea
test
sub
and
addr16
pop
inc
mov
inc
repz
leave
sbb
mov
loopne
cdq
not
test
or
jmp
es
push
jmp
inc
mov
add
inc
mov
mov
dec
dec
inc
jge
mov
xlat
xchg
test
xchg
pop
adc
in
fidivr
lods
repz
or
(bad)
mov
daa
outs
push
or
and
lar
inc
in
cmps
push
and
mov
inc
mov
sti
jl
dec
shl
mov
ins
jge
mov
movs
inc
push
xor
jp
pop
cmp
or
hlt
fnstsw
mov
call
mov
or
iret
mov
inc
jo
repz
mov
test
ret
mov
mov
aaa
ret
pop
dec
sbb
pop
mov
dec
xor
ds
sub
jo
xor
mov
jb
iret
inc
push
cwde
sbb
sub
lods
loope
mov
xchg
jbe
add
cmp
push
and
or
cmp
sbb
add
fld
xor
mov
out
jo
shl
loopne
fs
lods
sti
bound
int3
ins
push
jecxz
mov
xchg
sub
jns
or
pushf
std
loope
out
push
in
loop
lahf
les
inc
xchg
push
fld
movsx
cmc
xchg
arpl
shl
rcl
repnz
arpl
div
or
push
jl
aam
add
mov
scas
enter
xchg
push
or
into
test
movs
xor
(bad)
pop
sub
mov
test
cmp
test
sub
or
sbb
imul
cmps
jno
add
dec
mov
into
inc
cmc
add
test
cmps
out
pushf
jmp
enter
mov
les
call
(bad)
jmp
in
in
cmc
add
push
ret
(bad)
cmps
cwde
add
mov
test
(bad)
mov
mov
lea
idiv
jp
fisttp
call
inc
rcl
adc
xchg
mov
adc
scas
icebp
enter
jmp
cmp
push
adc
mov
mov
push
out
test
cmc
mov
pop
jmp
imul
adc
lahf
add
aad
or
mov
push
mov
mov
ret
xchg
lock
mov
push
jb
cs
out
in
icebp
test
inc
mov
leave
aaa
add
push
push
or
out
mov
mov
ficom
leave
and
mov
les
loop
pop
push
lods
aas
hlt
scas
jle
sub
test
in
inc
popa
mov
repnz
xor
mov
mov
mov
and
inc
es
outs
mov
rcr
jne
pusha
jl
xchg
inc
mov
and
mov
mov
jae
icebp
popa
fcomp
sar
enter
cmps
stos
popa
push
pop
push
sti
xchg
and
sub
int3
sar
adc
lds
and
ss
cmp
imul
mov
into
rol
pop
hlt
stc
pop
fnsave
(bad)
mov
mov
scas
jmp
lods
push
pop
call
jne
gs
pop
mov
jnp
fisttp
retf
mov
aas
jnp
into
sbb
sub
das
leave
xor
shl
cld
stos
jl
inc
push
push
stos
(bad)
jle
mov
sub
sub
lods
les
test
xchg
aas
xchg
loop
adc
sub
mov
inc
mov
push
enter
imul
push
mov
mov
(bad)
cmp
popf
clc
sbb
or
mov
add
adc
repnz
cli
loopne
mov
ins
int
xor
data16
fbld
mov
nop
push
mov
mov
cs
sti
sahf
mov
inc
mov
sbb
cs
jle
mov
xchg
add
cmp
aaa
jecxz
aas
push
outs
push
adc
mov
lahf
ret
aam
mov
cmp
add
xchg
fstp
xor
enter
mov
xchg
mov
mov
in
pusha
jmp
pop
and
cmp
dec
test
mov
adc
retf
mov
aam
imul
call
jb
add
mov
cmp
sub
test
lahf
xchg
mov
sub
mov
lock
unpcklps
movs
lds
push
shr
adc
mov
xor
adc
mov
fsub
lods
jg
jne
and
xchg
mov
jge
push
or
adc
xor
mov
push
mov
and
push
imul
and
into
pop
pusha
mov
dec
xlat
inc
jmp
lahf
fild
sbb
fcmovne
mov
adc
fs
cmps
jae
jmp
mov
shl
aad
pop
sub
adc
scas
icebp
xchg
(bad)
sbb
in
jle
loopne
mov
pop
(bad)
xor
out
sbb
xlat
cld
inc
(bad)
loopne
push
icebp
iret
push
push
ins
ret
imul
test
(bad)
or
hlt
dec
push
mov
les
mov
or
jmp
cld
mov
ret
mov
xor
pop
add
dec
call
mov
shl
loop
xchg
hlt
adc
add
cmps
cmc
pop
popf
call
xchg
std
in
jb
jno
jmp
fucom
gs
pop
push
cmps
add
xor
xchg
xor
rol
mov
jno
lahf
inc
pop
jnp
pop
pop
popa
mov
sub
arpl
or
outs
push
fstp
push
and
inc
sar
scas
jge
std
vminps
outs
jo
rol
add
popa
bnd
icebp
ss
or
or
stc
xor
sbb
hlt
jp
sub
adc
xlat
fild
pop
nop
add
adc
repnz
retf
mov
lds
int
popa
mov
sub
lock
dec
(bad)
cmp
test
jl
xlat
sti
cmp
pop
push
adc
aaa
(bad)
mov
push
mul
sti
bound
and
and
call
(bad)
jmp
faddp
sub
movs
loopne
mov
xor
sub
cmp
inc
sub
inc
sub
cmp
and
fisubr
or
and
mov
ss
(bad)
(bad)
push
pop
mov
xor
jae
and
adc
mov
jmp
sub
dec
sub
loope
inc
daa
fnstsw
sub
in
sbb
mov
mov
out
adc
jle
out
xchg
adc
mov
xchg
in
dec
stos
xor
jnp
add
fldenv
daa
mov
mov
addr16
mov
cmp
jo
ja
rcl
dec
dec
jbe
mov
idiv
inc
enter
mov
sub
mov
cmps
sti
cmp
adc
push
(bad)
test
or
cwde
icebp
dec
xchg
retf
fs
mov
ins
(bad)
(bad)
pop
out
imul
jbe
mov
(bad)
out
pop
adc
sar
pop
adc
lea
enter
xor
retf
dec
cld
repnz
add
add
ds
fcom
xor
js
mov
in
push
jp
mov
ins
jne
xchg
jl
test
imul
adc
pusha
lods
mov
mov
fwait
sbb
push
loopne
loopne
xchg
push
sub
nop
cli
jbe
imul
stos
mov
adc
aas
pop
mov
das
sub
push
(bad)
jecxz
mov
es
jnp
inc
dec
and
ror
nop
ins
add
jns
aaa
xor
push
outs
jnp
stc
xchg
mov
xchg
test
mov
mov
or
mov
push
mov
jecxz
jle
sti
cmc
pop
dec
add
sub
out
sub
push
jno
scas
cmc
or
cmp
leave
inc
nop
cmp
(bad)
cmp
inc
out
inc
sub
scas
and
mov
or
ret
ret
mov
scas
add
rcr
stos
adc
test
in
sub
mov
ret
jne
popa
inc
dec
mov
mov
dec
test
sahf
cmp
adc
js
sub
arpl
rcr
and
xor
mov
or
sub
(bad)
pop
adc
sbb
movs
dec
jne
movs
jle
sub
inc
mov
pop
int
add
loope
sub
pop
inc
mov
mov
xchg
gs
mov
(bad)
int
xor
mov
push
mov
fninit
pop
inc
sbb
pop
xchg
leave
jmp
mov
gs
xor
sti
pop
mov
pop
fs
pop
leavew
push
addr16
cwde
xor
movs
jne
fcmovnu
dec
xor
jecxz
loop
ins
into
xchg
mov
pop
imul
sahf
xchg
mov
push
in
add
or
sbb
mov
sbb
hlt
dec
cmp
pop
dec
movs
adc
cmp
jp
repnz
add
adc
(bad)
test
pop
adc
sub
shr
push
jmp
jmp
aad
icebp
xchg
int3
shr
xchg
leave
mov
xchg
sti
pop
xor
lock
sub
lock
jmp
pop
and
inc
out
imul
adc
jno
and
(bad)
sti
outs
xchg
cmp
sbb
cs
mov
mov
not
pop
scas
dec
popf
js
jmp
push
arpl
cmp
mov
and
in
shr
push
loopne
inc
inc
jno
lods
ror
shl
neg
outs
pop
mov
push
jge
sub
xor
push
imul
clc
xor
sbb
retf
das
fucomip
pop
ins
mov
loop
or
sbb
add
jle
jle
leave
dec
aam
es
mov
adc
icebp
or
mov
cdq
jmp
sbb
sti
xchg
in
xchg
inc
sub
mul
adc
dec
mov
push
pop
cmps
movs
les
xchg
inc
jbe
lds
add
jo
in
out
lods
ret
cmps
mov
jno
and
mov
push
xor
mov
std
fldenv
pop
lods
cmc
adc
jmp
jns
and
or
jnp
es
inc
cmps
adc
lahf
stos
jno
loopne
push
ds
stc
sti
ds
retf
sub
sbb
mov
push
scas
add
push
xchg
adc
scas
aaa
ror
fcomp
scas
jecxz
cmp
xchg
adc
std
xor
leave
js
xchg
gs
pusha
hlt
popf
mov
sbb
push
mov
push
add
inc
pop
retf
js
fdiv
fs
inc
pop
dec
mov
xchg
adc
pop
js
sub
xchg
ret
add
pop
sbb
leave
fucomi
cmp
fucomi
rol
(bad)
call
push
stos
mov
xor
fs
in
(bad)
cwde
cmp
inc
sub
xlat
loope
mov
enter
fld
fsin
sbb
aaa
adc
and
call
and
cmp
scas
jae
or
xor
inc
outs
sbb
inc
retf
call
mov
adc
inc
bound
leave
pushf
shl
mov
add
xor
xor
dec
loop
mov
adc
aaa
and
idiv
int
pusha
jmp
mov
(bad)
add
jecxz
push
sub
inc
inc
xor
mov
in
mov
adc
push
pop
sahf
(bad)
or
jmp
push
aam
pop
adc
mov
dec
mov
xor
out
and
push
inc
pop
cmp
xchg
mov
mov
push
in
jae
pop
sbb
aaa
mov
icebp
or
xchg
jns
shl
mov
pushw
xchg
loop
psrad
loope
js
sub
repnz
sti
lahf
xchg
js
push
or
xor
xor
movs
adc
dec
xchg
mov
dec
rcr
push
lds
cmps
scas
adc
es
sbb
push
imul
cmp
test
sti
pushf
add
jmp
leave
xor
and
mov
pop
popa
mov
enter
movs
test
cs
mov
pop
xchg
rol
ret
pushf
sbb
xchg
jne
and
pop
cmp
fidiv
xlat
jecxz
rcr
icebp
rcr
adc
pop
(bad)
inc
mov
scas
clc
in
adc
movs
les
adc
mov
inc
std
leave
jbe
mov
sahf
xor
shr
sub
fiadd
lods
cli
cld
icebp
jae
int3
popa
(bad)
lods
mov
loope
ds
add
ror
inc
int
cld
mov
mov
push
and
jne
sahf
jecxz
push
xor
sbb
lahf
or
call
push
inc
jmp
jae
mov
rol
xor
imul
jo
test
mov
jecxz
inc
mov
cdq
clc
jg
into
or
mov
lods
mov
xchg
push
(bad)
mov
push
pop
stc
sti
and
mov
addr16
iret
sti
jg
xchg
mov
iret
mov
mov
add
outs
aas
mov
sbb
cmp
stos
inc
adc
dec
sbb
push
inc
add
ficom
xor
pop
inc
and
dec
mov
cmp
inc
test
jge
push
pop
and
fcomip
fbld
jg
dec
retf
mov
xor
je
xor
in
push
mov
je
cmp
(bad)
rcr
retf
pop
fild
adc
pusha
inc
mov
mov
not
push
xor
dec
sbb
adc
cmp
add
mul
movs
mov
xchg
addr16
sbb
pop
push
int
rcr
ror
lods
xchg
dec
fld
adc
mov
enter
push
hlt
mov
push
mov
bswap
adc
jmp
call
pop
inc
cmp
xor
dec
inc
ret
jns
in
aas
(bad)
cmps
add
inc
push
jnp
dec
scas
sbb
xchg
add
push
mov
or
adc
adc
in
push
jp
nop
cmc
mov
div
push
add
sbb
mov
stos
(bad)
fidiv
xchg
outs
dec
fistp
into
jg
ret
adc
sub
mov
iret
push
mov
in
jle
xchg
mov
mov
aad
repnz
clc
lahf
xchg
cmps
push
fcom
or
cmp
jmp
mov
mov
push
xchg
mov
push
cdq
sub
and
mov
sub
icebp
xchg
xlat
or
add
mov
fdiv
pop
sub
retf
dec
leave
in
sub
cmp
arpl
or
mov
aas
jmp
adc
scas
xchg
leave
sbb
mov
cmp
push
cmp
or
(bad)
movs
mov
adc
mov
adc
icebp
gs
mov
in
sbb
lahf
mov
jo
imul
dec
push
fsubr
(bad)
cmp
aaa
std
mov
cs
movs
test
sbb
push
push
or
int3
fwait
or
inc
pop
pop
add
dec
cs
add
test
fdivr
push
adc
(bad)
mov
jl
les
cmps
or
fld
mov
and
aad
out
(bad)
cmps
loop
jns
pop
cmp
movs
data16
icebp
pushf
add
mov
pop
dec
out
jns
in
mov
in
and
jecxz
sbb
mov
inc
cmps
sub
div
shr
xor
push
sbb
fistp
jae
mov
sub
daa
fcom
fsub
jns
jnp
adc
bound
adc
int3
les
pop
hlt
ror
loop
jge
inc
and
push
xor
fwait
retf
mov
jb
in
pop
fwait
xlat
mov
cli
dec
in
test
out
add
fldenv
stos
push
ret
dec
or
sub
inc
jns
sahf
popa
inc
arpl
xchg
dec
bound
daa
sub
(bad)
or
jmp
fild
pop
add
push
adc
inc
adc
pop
xchg
ja
inc
stos
leave
sub
lock
fdecstp
and
lods
mov
inc
(bad)
shl
adc
imul
sbb
or
int3
push
clc
sbb
bound
and
inc
inc
stos
push
aad
sahf
ror
sub
cmps
retf
imul
pop
xchg
icebp
nop
mov
sub
cmp
leave
pop
pop
sbb
push
daa
stc
mov
xor
inc
ins
mov
adc
mov
sbb
test
add
outs
lds
imul
call
cmp
into
dec
dec
rol
adc
(bad)
fst
adc
dec
movaps
gs
jbe
imul
adc
aam
movs
fmulp
movs
push
mov
sub
lea
cmps
or
adc
add
and
pop
sub
push
fist
or
or
or
or
call
pop
push
inc
ret
mov
jmp
dec
sbb
out
xchg
pop
cdq
or
movs
fdivr
outs
stos
stos
jbe
pusha
dec
sbb
xchg
fstp
(bad)
out
jns
retf
and
sub
xor
mov
clc
sub
push
and
fsubr
in
jnp
push
test
outs
push
rcl
cmc
popf
xor
test
test
adc
sbb
sub
dec
xor
push
lods
lock
call
outs
(bad)
fdiv
adc
mov
and
mov
xchg
and
imul
sbb
dec
pusha
mov
rcr
clc
arpl
pop
jnp
dec
push
and
sbb
mov
fsub
mov
fld
cld
sbb
fadd
mov
cmp
stc
mov
inc
enter
mov
lds
ins
cwde
loopne
lds
mov
pop
fdivr
and
dec
push
cmps
jae
jg
loop
lahf
push
xchg
mov
mov
push
push
and
or
iret
xchg
enter
sbb
(bad)
adc
call
movs
push
dec
dec
jle
scas
call
adc
jl
(bad)
imul
sahf
inc
adc
sub
and
adc
sar
(bad)
leave
mov
dec
add
mov
jmp
mov
imul
jne
pop
(bad)
dec
icebp
pusha
lods
leave
ret
push
lods
fld
xor
or
cs
rcr
rcr
mov
sub
retf
loopne
mov
mov
mov
ins
clc
inc
push
sbb
stos
sub
outs
cmp
or
imul
js
adc
add
fucom
xor
and
popa
hlt
sub
xchg
and
in
jmp
mov
push
inc
repnz
jae
mov
dec
cmp
and
push
push
cli
ins
add
test
fstp
push
pusha
iret
add
push
or
mov
and
pop
sub
aam
dec
ins
inc
psraw
repz
cmp
adc
or
into
sub
test
sti
adc
jl
and
inc
das
fmul
sbb
sbb
aad
jge
push
stc
or
dec
sbb
xor
cmp
sub
cmp
or
cmps
mov
out
std
and
jb
jg
scas
cli
lods
or
rcr
push
sbb
fst
and
popa
retw
add
adc
cmp
jns
mov
xor
bound
outs
shl
mov
jne
xchg
jl
(bad)
xchg
jno
xor
dec
push
enter
mov
stc
pop
and
ss
cmc
dec
mov
loope
(bad)
mov
popf
outs
push
bound
or
out
inc
dec
xor
movs
and
or
xor
mov
shl
repz
pop
inc
fstp
and
adc
das
pop
sbb
fstp
(bad)
out
inc
shr
in
test
dec
movs
neg
dec
jbe
push
test
rcl
pop
jmp
cmp
(bad)
jne
push
pop
add
xchg
and
xchg
sbb
leave
shr
rcl
jmp
push
mov
imul
in
mov
mov
icebp
jnp
mov
movs
mov
pop
nop
mov
fsubr
in
outs
icebp
mov
mov
add
stc
call
fwait
pop
dec
fild
xchg
scas
mov
ret
cwde
sub
mov
dec
es
sub
mov
cmp
adc
test
mov
fwait
jl
xchg
mov
into
mov
jmp
or
cmps
push
mov
inc
xlat
inc
sub
pop
imul
xchg
push
xor
dec
ins
mov
sub
ja
sbb
push
fsub
cmp
ins
imul
and
scas
push
js
mov
sub
dec
int
push
jmp
in
cmp
outs
push
shl
push
lahf
or
and
xor
dec
cmp
lock
cmp
mov
dec
mov
mov
xchg
cdq
inc
mov
dec
rol
and
cmps
nop
push
pop
xchg
add
sti
sbb
push
in
mov
loop
adc
or
ret
lods
ja
xchg
and
add
loope
dec
cwde
mov
jecxz
in
int
lahf
icebp
test
xchg
fbstp
cmps
das
mov
xchg
pop
stos
shr
inc
sbb
mov
(bad)
or
sar
gs
jbe
frstor
int3
(bad)
sub
mov
dec
cmps
jecxz
jecxz
enter
xor
add
nop
push
xchg
pop
adc
adc
call
aaa
imul
pusha
cmp
inc
mov
dec
scas
or
cmp
sbb
add
mov
mov
(bad)
mov
hlt
xor
adc
(bad)
jle
cmc
sub
pusha
mov
dec
mov
pop
pop
popa
mov
(bad)
push
gs
rcr
jp
mov
(bad)
or
xchg
imul
jg
std
and
imul
addr16
cmp
dec
je
fcmovu
call
pop
nop
inc
dec
mov
sbb
test
sub
ins
loop
iret
ror
push
fidivr
push
adc
xor
mov
scas
mov
adc
push
pop
inc
imul
test
(bad)
sbb
xor
test
ror
sbb
into
int3
jge
aas
retf
xor
adc
cmc
ja
add
movs
cmp
pop
xor
pop
fiadd
xchg
or
push
and
mov
sti
cmp
mov
ret
cmp
inc
into
add
xchg
xchg
inc
jnp
sbb
adc
dec
jp
rcr
cmp
in
inc
xor
xor
add
jle
pop
cmps
sar
xchg
sub
cmp
in
xor
inc
mov
cmp
adc
xor
rcl
or
je
fsubr
cmp
popf
bound
jp
leave
ja
push
test
mov
or
idiv
aad
sbb
xchg
and
icebp
xchg
push
bound
ds
scas
lds
pop
push
jne
mov
push
dec
cli
fst
je
movs
cmc
hlt
repnz
jge
test
call
push
pop
inc
mov
ficom
and
das
jno
or
mov
and
test
pusha
xchg
cmps
dec
jnp
mov
xor
sbb
lea
jb
cmc
scas
and
loopne
(bad)
sahf
out
xchg
jns
aaa
imul
fadd
hlt
or
dec
xchg
pop
push
stc
outs
mov
int3
int
inc
movs
outs
push
jns
push
scas
mov
and
pop
fwait
jmp
add
pop
addr16
mov
scas
xchg
xlat
or
or
leave
shl
adc
imul
mov
lods
jbe
cmp
adc
cmp
mov
adc
adc
lea
inc
cmps
mov
popa
inc
and
(bad)
bound
jecxz
and
inc
xor
in
loop
push
gs
out
jbe
pop
cli
pop
(bad)
jmp
push
(bad)
mov
ins
mov
adc
inc
popw
or
mov
cmps
cmp
cmp
sbb
mov
cmp
pop
(bad)
enter
mov
or
jnp
stos
push
jge
cmps
adc
dec
push
add
pop
out
jl
popf
mov
or
pop
int
jg
sub
addr16
inc
pop
fisubr
mov
(bad)
jb
mov
rol
in
sbb
mov
lahf
jbe
mov
clc
stos
mov
iret
ja
pop
and
pop
fwait
bound
call
xchg
or
addr16
pop
(bad)
dec
jg
or
adc
out
push
aaa
or
test
mov
ret
cmps
pusha
cmp
rol
ret
inc
out
fadd
jo
shl
xchg
out
(bad)
sub
adc
pop
jl
fdiv
jbe
in
push
inc
push
mov
daa
aas
sub
or
(bad)
cmp
sahf
add
adc
xor
test
or
and
stos
(bad)
fmul
pop
adc
and
inc
sbb
mov
out
imul
popf
sbb
loope
xchg
push
in
mov
sub
out
jno
cmc
push
inc
and
fcmovnb
sub
mov
mov
xor
inc
push
or
mov
dec
aam
jmp
sub
movs
leave
aad
scas
and
outs
sub
cmp
popf
test
shl
mov
mov
fimul
add
push
int
adc
dec
sub
retf
push
fwait
lods
dec
aaa
adc
(bad)
mov
adc
mov
inc
(bad)
pop
mov
test
fs
xor
dec
fldcw
push
xlat
ss
fcomp
int
cmps
cmovs
adc
push
movs
mov
andnps
stos
pop
pop
dec
mov
bound
xchg
pop
pop
sbb
pop
loope
cdq
cmps
jle
jle
dec
and
js
jge
add
jae
repz
add
sub
in
lock
xchg
cli
or
scas
add
cmp
retf
adc
xchg
popa
mov
pusha
rol
lahf
(bad)
pop
or
(bad)
push
jns
lahf
push
jnp
popf
jecxz
test
xor
bound
and
pop
add
in
cmc
or
add
daa
sbb
scas
push
xchg
cmp
cmp
in
in
xor
cli
popf
mov
and
and
test
pop
adc
and
xadd
out
jmp
nop
nop
adc
shr
sub
call
mov
add
inc
cmp
into
adc
aas
rcl
(bad)
push
ja
popf
into
jae
mov
jae
xchg
bound
mov
or
ror
das
repnz
(bad)
cmp
iret
jbe
and
or
imul
push
xchg
shl
cdq
mov
fmul
in
push
pop
cmp
inc
sub
xchg
inc
call
jns
fcmovb
popf
into
call
vpxor
and
cmp
sahf
ficomp
in
jmp
jp
ficom
pop
fst
out
add
stc
jecxz
xchg
in
dec
call
outs
inc
xor
lock
jne
dec
inc
mov
inc
adc
dec
jo
sub
shl
call
sbb
imul
fdivr
adc
imul
repz
cmp
not
enter
add
dec
sub
mov
push
pop
push
jb
fistp
cmp
aas
jae
push
sub
mov
fistp
push
loopne
mul
jnp
xchg
inc
dec
test
xchg
pop
out
jp
inc
outs
or
xchg
imul
xor
sar
and
jmp
cmp
stos
inc
ret
mov
(bad)
jl
bound
in
mov
lods
(bad)
jnp
test
cmp
xchg
cmp
push
out
push
cli
jne
js
call
mov
arpl
jmp
mov
out
jl
cli
adc
(bad)
popf
mov
fsubr
cmp
add
or
xor
cmc
int3
imul
(bad)
js
loop
mov
mov
cs
fadd
lock
and
jmp
push
enter
cld
mov
inc
cmps
int3
or
dec
jg
aam
ret
ret
fld
addr16
sub
stos
mov
out
dec
stos
aad
(bad)
popa
add
std
sti
mov
mov
dec
add
out
movs
repnz
push
cmps
cmps
adc
stc
retf
in
add
mov
xchg
call
sbb
imul
daa
pop
mov
and
or
fisubr
fidivr
cmp
mov
mov
sbb
or
loop
arpl
cmovne
mov
and
xor
and
ret
rcr
ins
adc
xor
sahf
mov
pop
cmp
sbb
inc
call
mov
and
loopne
xchg
inc
inc
outs
jae
ss
dec
jae
mov
mov
jns
pusha
cld
mov
xchg
lods
mov
mov
mov
in
and
int3
iret
stos
jae
mov
mov
or
xor
es
call
add
jne
cmp
xor
cmp
out
sub
jo
adc
stos
or
cld
nop
out
js
jmp
xchg
icebp
sub
pushf
jmp
out
jne
cli
mov
shrd
test
add
retf
mov
sbb
dec
mov
add
mov
pop
mov
sar
and
rcr
not
fldenv
xchg
hlt
fdiv
leave
pop
mov
adc
data16
push
push
sbb
jbe
xor
into
repz
aaa
pop
int3
xor
stos
sbb
sbb
into
xchg
dec
lods
mov
or
dec
or
mov
inc
jle
ret
mov
push
hlt
aad
loop
repz
inc
jns
outs
or
ret
out
hlt
sub
pop
retf
movd
jnp
aam
out
mov
repz
mov
mov
je
add
mov
or
(bad)
sub
jbe
inc
enter
jns
pop
pop
jnp
jecxz
fnstenv
jno
xchg
add
sar
fistp
cmp
mov
dec
retf
(bad)
popf
sbb
(bad)
lods
out
sub
retf
and
mov
adc
imul
push
xchg
loopne
dec
add
add
jg
cmp
and
(bad)
fnstcw
popa
push
shl
push
pause
push
scas
push
call
out
adc
fs
adc
add
movs
(bad)
sub
out
cmp
sbb
ja
push
adc
rol
mov
ret
mov
repnz
dec
cmp
xlat
jns
jmp
jmp
mov
in
push
sub
pop
ret
xchg
imul
dec
test
ret
jmp
xor
mov
jmp
adc
push
pop
aas
ficomp
shr
sbb
pushf
clc
fst
add
jb
(bad)
aas
mov
out
mov
mov
ins
or
lahf
pop
mov
mov
cmp
aas
mov
mov
xor
dec
aam
daa
mov
cmps
aaa
xlat
dec
jbe
mov
inc
bound
push
iret
loop
pop
xor
and
sahf
popf
mov
jae
scas
aaa
sbb
pop
jnp
retf
cmps
test
and
sahf
push
xchg
stos
mov
and
scas
out
and
outs
and
or
mov
test
and
fld
jbe
lods
sbb
push
fnstcw
xor
pop
xchg
pop
xchg
cld
(bad)
out
lea
jp
pop
xchg
add
xor
xchg
and
add
out
retf
pop
pop
adc
mov
xchg
in
rcl
xchg
pushf
mov
cmp
daa
inc
jmp
and
(bad)
sbb
pop
add
mov
add
pop
repnz
xchg
outs
xchg
push
add
mov
cwde
movs
xchg
and
cli
sub
xlat
ror
inc
nop
mov
loopne
fwait
shr
adc
pop
ficom
jge
mov
or
es
dec
inc
(bad)
sbb
inc
pop
imul
inc
mov
xor
sti
xor
mov
sub
bound
ret
push
add
dec
jns
mov
and
push
mov
in
push
into
sbb
sti
js
sub
imul
adc
pop
rcl
(bad)
ds
into
shl
xor
call
ret
sub
icebp
add
push
into
imul
movs
jne
add
shl
scas
iret
in
sbb
xchg
inc
mov
test
mov
mov
sub
call
or
push
jns
inc
cli
cmc
add
fdiv
and
(bad)
rcr
xor
or
pop
jae
leave
push
sub
add
es
fs
xchg
div
xchg
mov
mov
inc
push
inc
into
adc
nop
sub
jne
std
loope
test
cmp
nop
add
or
ds
arpl
(bad)
popa
mov
pushf
test
push
out
jg
pop
(bad)
xor
test
ret
movs
mov
xor
mov
in
and
xchg
xor
jns
aam
push
xchg
sub
retf
aam
lahf
lods
jmp
(bad)
daa
ret
aad
mov
(bad)
imul
cwde
and
jb
pop
mov
sbb
mov
push
and
pop
and
popa
les
sbb
cmp
mov
popf
dec
add
das
mov
imul
inc
mov
pop
repz
cmc
out
je
and
sahf
push
mov
test
jp
addr16
outs
mov
shl
and
jmp
mov
cld
inc
aaa
ins
dec
mov
sub
jle
inc
push
mov
retf
(bad)
out
or
mov
cmp
lahf
out
add
jns
sub
bound
aas
cwde
out
adc
xor
dec
jp
pop
ja
add
int3
push
js
sbb
aas
rol
push
pop
xchg
ss
xor
sbb
xlat
xchg
mov
xor
or
iret
adc
nop
mov
jmp
cli
cmp
loopne
or
jnp
out
jle
or
pop
adc
add
and
std
fs
ja
xchg
jno
pop
movs
dec
cmps
xchg
mov
mov
test
cmp
ds
repz
pop
mov
cmp
fs
and
ss
stos
stc
jae
mov
lock
ficom
not
rol
scas
ret
push
inc
pop
(bad)
bound
imul
adc
mov
add
mov
inc
rcr
rcr
xor
test
mov
push
cmp
xchg
int3
scas
cmps
daa
mov
cmp
sbb
test
imul
data16
rcl
inc
xchg
jno
xor
call
ror
inc
jmp
adc
cli
jmp
push
scas
adc
xchg
out
mov
mov
out
fwait
(bad)
mov
paddw
dec
and
mov
popf
cmps
out
mul
loope
retf
stos
mov
xchg
data16
rcl
xor
push
cwde
adc
jmp
rol
test
xchg
daa
test
loope
jecxz
mov
retf
lea
and
fstp
cld
mov
call
lds
xchg
mul
mov
mov
cwde
and
test
fnstenv
fmul
sub
and
xor
or
push
mov
mov
les
sbb
adc
sbb
pop
or
push
into
adc
cmp
add
pushf
mov
movs
out
cmp
hlt
loopne
push
sub
stos
sti
in
jg
je
fiadd
add
jbe
in
jp
fmul
jno
or
cmps
cmc
mov
push
dec
inc
test
imul
pop
ror
jl
loop
imul
dec
test
retf
mov
mov
sti
ds
dec
jmp
mov
pop
adc
cmps
in
les
scas
pop
outs
(bad)
or
out
and
dec
adc
xchg
movs
jp
pusha
mov
sub
xchg
ss
mov
test
sbb
cwde
pop
push
loope
ja
inc
pop
pop
and
sub
jmp
or
shl
cmp
ins
xor
call
jl
icebp
scas
dec
lods
mov
or
shr
ins
xor
mov
jno
dec
cdq
scas
fs
adc
inc
out
cld
mov
cli
add
nop
pop
das
xchg
retf
lods
xor
mov
pop
cdq
or
cmps
clc
adc
cld
push
inc
pop
xchg
sar
xchg
cmps
fbld
sub
dec
js
sbb
inc
mov
hlt
jl
xchg
fucomi
iret
add
and
inc
mov
ret
add
jno
mov
jmp
out
pop
ret
lods
outs
or
popa
aam
jne
sbb
inc
xchg
iret
push
out
pop
rcl
inc
jecxz
jns
mov
jmp
pop
call
dec
mov
ss
aaa
and
xchg
mov
pusha
xor
es
cmp
rol
jnp
mov
cmps
add
loop
jbe
data16
leave
mov
loopne
mov
sbb
jns
stc
aas
cmc
data16
fmul
out
imul
rol
sbb
xchg
jmp
imul
cmp
(bad)
mov
or
pop
retf
leave
sub
jae
adc
or
call
add
fisub
lahf
outs
fs
mov
shl
cwde
fdivr
ss
mov
popa
or
adc
add
push
pusha
pop
add
sub
and
jns
dec
or
sbb
and
mov
sub
arpl
mov
lods
inc
push
pop
pusha
(bad)
cmp
das
and
mov
loope
jl
ins
stc
dec
das
icebp
mov
mov
popf
movs
dec
mov
xchg
mov
xchg
cmp
test
mov
out
daa
xor
sahf
push
rcr
dec
popa
lea
in
sub
inc
cmp
mov
mov
cdq
and
lea
loop
adc
jbe
test
cld
in
in
rol
sbb
out
push
cmp
sti
xchg
into
add
bound
sub
push
int
or
clc
or
fld
(bad)
cli
pop
xor
cmps
fwait
adc
fisttp
daa
xchg
adc
xor
pop
scas
push
pop
xchg
out
cmp
jbe
cmp
ficom
jp
or
mov
icebp
jp
leave
push
mov
popa
xchg
dec
out
jbe
xchg
xor
add
or
or
lock
mov
jno
xlat
pop
mov
fiadd
pop
ds
ds
adc
stc
sti
push
fstp
or
jg
mov
ins
jle
iret
bound
mov
sub
outs
mov
icebp
mov
aaa
bound
imul
or
shr
push
and
movs
fild
inc
mov
mul
push
fnstcw
xchg
in
sub
into
add
sbb
push
cmc
js
xor
jp
in
or
add
mov
xchg
add
idiv
mov
pop
lock
jmp
xchg
adc
out
sub
mov
cmps
ds
lahf
mov
stc
add
push
push
pop
mov
sbb
xchg
test
pop
pusha
ret
mov
xor
cmp
ret
fsubp
mov
mov
adc
lock
addr16
mov
imul
xchg
or
cld
jl
imul
inc
loopne
or
push
inc
in
repz
jne
cmc
xchg
rcl
jno
(bad)
xor
imul
push
stos
ss
test
in
cmp
leave
outs
cmp
push
gs
int
jae
repnz
cmp
push
cwde
mov
lock
xchg
movs
test
clc
ror
jno
test
pushf
mov
xor
push
inc
sbb
jno
pop
xchg
and
xor
jp
pop
cli
push
and
jne
gs
cmp
inc
pushf
jmp
out
pop
std
pop
xor
loop
movs
retf
jae
icebp
jno
rcr
in
lods
adc
out
mov
push
or
(bad)
add
jp
push
cmps
cmp
dec
push
xor
je
sahf
sbb
call
scas
lods
adc
jbe
sbb
psubsw
jnp
cmpxchg
ror
adc
dec
sbb
push
mov
adc
jecxz
push
leave
lods
test
jecxz
xchg
cmp
fild
add
xor
mov
(bad)
retf
cmp
mov
mov
in
xchg
inc
movs
mov
pop
push
jae
push
es
mov
call
jno
dec
inc
(bad)
cmps
call
sbb
mov
cdq
xchg
mov
outs
inc
sub
shr
into
jne
test
mov
dec
imul
out
out
xchg
frstor
retf
cmp
rcl
push
lahf
ret
std
mov
sbb
xchg
add
cmp
in
jmp
cli
xor
sbb
fidivr
lea
shr
pop
add
dec
cmp
sbb
and
pop
lds
mov
es
test
cld
jbe
cdq
and
scas
lea
xchg
test
push
fcom
sub
jb
stos
inc
mov
clc
lock
jp
jbe
out
movs
imul
mov
out
loope
xchg
pop
(bad)
hlt
shl
out
popf
retf
movs
shl
dec
mov
add
mov
inc
pop
leave
cmp
jg
ret
(bad)
lods
arpl
shl
movs
dec
movs
cld
xlat
clc
push
pop
out
(bad)
push
adc
sub
(bad)
out
in
pop
push
add
imul
adc
inc
movs
lds
xor
cmp
jae
ds
or
scas
pop
ror
mov
call
inc
sti
push
jno
jne
dec
mov
repz
cmc
jb
pop
inc
jnp
out
inc
out
fisttp
repz
mov
(bad)
addr16
xchg
lock
test
in
push
push
ret
nop
mov
mov
loope
icebp
mov
nop
div
dec
mov
mov
xchg
and
and
mov
pop
sbb
pop
(bad)
call
or
sub
add
out
jl
jmp
lds
mov
aas
rol
aad
loop
jmp
cmp
mov
push
or
out
aad
stos
movs
(bad)
inc
outs
add
add
jbe
cmp
dec
mov
mov
dec
lds
xor
call
shr
es
(bad)
enter
shr
not
jmp
in
(bad)
mov
pop
jmp
pop
mov
aas
ins
js
adc
or
imul
dec
fwait
int
dec
es
out
pop
sbb
fnstcw
adc
lods
dec
and
pop
push
std
jne
xor
cld
test
mov
ins
or
cmp
mov
rol
push
data16
or
dec
jp
test
mov
hlt
mov
(bad)
jmp
sbb
add
mov
sbb
repz
loopne
dec
shl
fs
repz
je
jl
pop
fist
or
pop
xor
das
xchg
mov
pop
mov
fisub
dec
scas
xchg
shl
xor
push
jae
sub
rol
lods
adc
cmp
sbb
dec
push
xor
test
xchg
sub
dec
scas
cmp
add
div
sti
pop
lods
push
pop
hlt
fmul
inc
sbb
cli
push
les
dec
loopne
xchg
xlat
push
sbb
and
dec
jb
cmc
sbb
cmc
shr
adc
jmp
scas
xchg
dec
dec
cmps
cwde
jne
push
jecxz
jge
adc
ror
mov
cmp
cmc
lods
mov
or
data16
in
outs
outs
push
dec
push
pop
cmps
jecxz
mov
je
and
mov
fs
dec
push
jmp
jmp
mov
jbe
mov
push
in
mov
sub
xor
xor
jp
div
adc
lds
cmps
jle
push
mov
inc
and
fst
xlat
test
(bad)
dec
sub
stc
cmp
int3
sub
icebp
imul
call
add
popf
sbb
jb
shr
sbb
xlat
shl
jno
imul
out
pop
or
or
xchg
jae
add
jecxz
shl
push
shl
xor
fldenv
(bad)
sbb
aas
rol
mov
call
pusha
movs
sbb
jg
fs
aaa
paddsw
add
xchg
mov
(bad)
into
fidiv
rol
imul
mov
add
jmp
in
js
mov
cmc
bound
imul
jp
lds
repnz
push
xchg
(bad)
xchg
push
push
mov
adc
cmp
clc
adc
test
mov
scas
adc
mov
fcmovnbe
pusha
addr16
lods
jb
push
dec
cs
mov
imul
inc
lods
inc
xor
jae
pop
mov
nop
(bad)
ins
xor
push
clc
sub
loopne
pop
mov
fwait
out
les
icebp
mul
pop
cmps
aaa
push
mov
test
cmp
xor
enter
lods
aad
mov
xlat
adc
fldcw
test
stos
xchg
adc
ss
sub
add
dec
xchg
call
mov
xchg
pop
push
dec
mov
push
repnz
scas
pusha
mov
dec
push
mov
out
mov
dec
in
jecxz
mov
dec
fcmovne
sbb
mov
and
retf
cmp
mov
xor
movs
xor
mov
ss
cwde
jl
mov
dec
jo
jge
into
dec
pop
rol
out
movs
and
mul
dec
call
dec
dec
dec
jl
cmp
sbb
push
int3
pop
aad
fld
arpl
outs
stc
xchg
cmp
or
dec
lea
jmp
xchg
and
add
dec
jl
xlat
xor
je
sub
sbb
jge
mov
push
mov
xchg
pushf
loopne
nop
pusha
std
aad
pop
(bad)
shl
loop
mov
repz
sbb
aas
mov
push
aas
cmps
mov
lahf
cdq
(bad)
sbb
hlt
jbe
pop
data16
xchg
retf
ror
and
enter
mov
lea
pop
les
xor
lds
jmp
cmc
cmp
mov
stc
push
arpl
jo
clc
movs
sub
push
push
push
(bad)
mov
pop
in
dec
push
push
div
retf
adc
gs
mov
fs
xor
sbb
xchg
out
frstor
leave
xchg
jg
inc
or
or
retf
sbb
retf
jne
push
iret
push
fldenv
movs
imul
test
xor
mov
push
sbb
or
push
ret
mov
fcomp
sbb
movs
dec
add
mov
and
sbb
add
jg
cmp
mov
mov
dec
or
loope
(bad)
shr
js
out
adc
mov
sub
lds
sub
imul
imul
jae
mov
test
sbb
bound
stos
pop
imul
pop
daa
sbb
rcr
push
stos
sub
mov
push
push
(bad)
(bad)
add
cmp
push
cmp
and
adc
sub
push
cli
adc
ja
inc
nop
push
test
icebp
fsub
xchg
inc
jmp
fistp
test
repz
xor
ds
pop
or
mov
mov
jns
jo
data16
jns
ss
arpl
cmp
sti
inc
fs
inc
mov
xor
aad
ret
retf
ds
outs
mov
sar
imul
into
sub
repz
les
xor
dec
cmp
popf
and
pop
aas
mov
in
and
daa
push
jmp
inc
dec
add
in
push
or
pop
jb
call
or
jae
xor
std
mov
js
xlat
aad
aad
push
mov
idiv
retf
or
pop
xor
sbb
or
inc
dec
mov
pop
jae
sahf
cmp
cmps
xchg
xchg
mov
add
mov
push
xchg
dec
scas
mov
test
cmc
sub
loopne
sbb
adc
jne
in
dec
inc
stos
and
call
mov
in
cmp
adc
ret
inc
fwait
mov
mov
fnstenv
xchg
pop
pop
retf
out
add
sub
dec
dec
mov
popf
test
adc
jmp
or
adc
adc
ins
adc
fwait
xchg
clc
lea
hlt
and
je
jo
(bad)
pop
(bad)
iret
mov
imul
jbe
ret
arpl
mov
and
adc
(bad)
loop
scas
push
call
inc
lock
out
or
or
mov
dec
mov
mov
in
push
aaa
clc
shl
pusha
mov
std
add
loopne
xchg
pop
jne
push
js
call
mov
or
pop
dec
ror
scas
add
mul
xchg
push
(bad)
adc
mov
repnz
sbb
ret
ja
call
pushf
(bad)
xor
cmp
fimul
jae
adc
dec
aas
imul
call
mov
jno
jo
es
or
ror
mov
outs
in
mov
test
es
pusha
pop
movs
inc
fadd
push
sub
add
dec
mov
or
pushf
mov
push
sahf
shl
test
xchg
retf
stc
jmp
cmp
pop
stc
push
lods
lea
push
dec
pop
lea
int
iret
scas
loop
cmp
pusha
jmp
inc
pop
arpl
mov
mov
dec
sar
jmp
scas
mov
jl
ret
cmp
je
hlt
mov
jp
sub
jae
xchg
mov
jle
aad
pop
imul
fidivr
cmp
fsubr
or
shl
enter
cld
sbb
icebp
nop
xchg
aad
sub
icebp
push
scas
cmp
int
mov
adc
cmps
sub
rol
push
gs
xor
bound
shl
loope
loope
push
sbb
adc
sub
imul
int
rcl
fnstenv
push
adc
mov
or
std
test
fwait
sub
adc
inc
inc
cli
mov
mov
xchg
mov
ds
or
mov
xor
jns
inc
dec
mov
dec
ins
pop
es
and
mov
pop
xor
mov
repnz
push
mov
rcl
mov
xor
push
repnz
xor
scas
mov
loope
and
sbb
cld
mov
fwait
cmp
jmp
mov
or
push
in
test
push
pop
es
(bad)
jne
scas
push
sub
xchg
(bad)
pop
aas
mov
mov
push
xlat
es
xchg
xor
mov
sub
in
ds
nop
pop
cmp
push
xor
xchg
xor
inc
js
in
or
push
nop
hlt
sub
ds
ret
fs
in
inc
pop
adc
(bad)
xchg
jo
fwait
hlt
xchg
cmc
xchg
jo
pop
test
rcl
fdiv
mov
out
mov
cs
scas
add
jge
int
push
rcl
(bad)
pop
loopne
(bad)
enter
xchg
pop
pusha
pusha
or
mov
sbb
jbe
fwait
test
leave
fdiv
dec
rcr
sub
in
and
jp
adc
mov
imul
ins
mov
dec
jg
add
dec
jo
sub
cmps
push
(bad)
js
in
cld
or
popa
arpl
data16
out
lahf
xchg
nop
shl
repz
scas
inc
inc
pop
sbb
nop
lods
push
nop
fdivr
jb
and
jmp
lods
dec
or
pop
or
add
adc
push
test
dec
hlt
jb
dec
repz
jmp
int3
inc
xchg
cdq
or
sub
repz
jnp
adc
pusha
sbb
cmps
das
sub
enter
mov
jae
jg
mov
pop
xchg
mov
sub
cmp
stos
cmp
ja
test
mov
push
sbb
jp
mov
mov
push
and
call
out
clc
cmps
push
and
ins
add
je
outs
fcom
not
hlt
and
mov
mov
push
mov
sar
or
cmp
lahf
repnz
sbb
mov
sbb
pusha
push
movs
daa
push
mov
xor
movs
leave
imul
int3
ss
ss
loopne
jecxz
cmp
icebp
jle
aad
sar
pop
and
adc
bound
or
in
cld
std
and
pusha
cld
add
scas
stos
jns
imul
add
adc
out
outs
sbb
loopne
movs
stos
pop
jg
gs
push
popf
iret
cmps
push
cli
mov
push
stc
scas
dec
or
aam
inc
fnsave
(bad)
fsubr
cmp
xchg
add
outs
add
adc
mov
in
push
in
sti
frstor
sub
mov
fldenv
push
inc
inc
shl
je
(bad)
rol
push
push
inc
rcr
hlt
mov
mov
xor
dec
fcmove
sub
jmp
sub
add
jmp
and
mov
mov
mov
inc
(bad)
adc
bound
mov
scas
push
jne
test
pop
sub
jg
pop
test
in
jg
mov
push
push
cmp
in
or
jo
push
popa
std
cmps
jle
xlat
ins
jo
jae
push
jmp
div
and
pop
mov
mov
addr16
jg
xor
sub
cmp
loop
add
pop
and
cmp
cdq
jo
test
push
push
cmps
or
and
add
mov
sub
xchg
imul
pop
jb
xchg
movs
cmp
inc
iret
test
js
outs
adc
dec
mov
pop
mov
lahf
push
cmps
jg
ret
retf
sub
out
cmp
fnsave
sahf
in
imul
xchg
ss
mov
mov
pusha
or
arpl
add
or
inc
(bad)
push
dec
xlat
jmp
jbe
out
mov
outs
sbb
inc
inc
cmc
inc
sbb
inc
jo
mov
pop
ja
inc
mov
(bad)
shl
mov
scas
out
aaa
dec
lahf
sub
retf
leave
movs
dec
add
cmp
mov
nop
push
sub
xchg
push
sbb
and
in
ret
imul
jecxz
stc
jo
pop
es
jle
je
sbb
je
pop
cmp
(bad)
sti
movs
xor
cmp
or
mov
dec
ja
cmp
cwde
or
jle
pusha
adc
repz
sbb
pop
inc
call
pop
mov
xor
dec
mov
in
sub
xor
or
lea
mov
js
add
cmp
or
push
data16
push
adc
ins
cs
arpl
scas
adc
fld
lea
bound
mov
xchg
jmp
dec
xor
test
push
pop
push
sub
jnp
inc
mov
mov
inc
fcmovnb
fdiv
sbb
sub
cmps
mov
cwde
mov
push
pop
and
sbb
test
dec
pop
call
xchg
mov
mov
lfs
in
nop
inc
stc
dec
or
xor
or
jmp
aad
ret
ret
jecxz
cwde
cmp
and
movs
retf
lods
fnstcw
sbb
add
test
jo
adc
jl
pop
popf
mov
test
cwde
mov
les
cmp
mov
fucom
mov
mov
or
push
es
call
push
xor
ss
sbb
out
aam
ja
icebp
inc
in
add
dec
fnstenv
aaa
out
mov
jne
not
inc
out
pushf
popf
imul
xchg
jp
cmps
sub
push
pop
dec
lds
lds
rcr
ds
mov
sbb
or
jae
scas
call
xchg
jb
pop
sub
ror
xor
movs
or
push
cmp
dec
fdivr
fcmovbe
repz
sub
adc
push
shr
lahf
in
vmaxss
adc
add
js
sbb
inc
jb
cmps
stc
dec
aad
lods
mov
bound
or
push
loopne
sbb
popa
popf
out
cwde
push
sbb
lods
outs
adc
(bad)
data16
jl
call
or
cmp
cmp
mov
pop
jmp
mov
aam
lds
add
fwait
push
fimul
mov
inc
mov
mov
dec
inc
loopne
add
popa
aam
test
mov
mov
js
mov
int3
or
(bad)
pop
fsubr
mov
or
xchg
jp
int
scas
xchg
push
out
push
jmp
je
dec
ds
outs
mov
sbb
add
ins
stos
cld
mov
sub
adc
aas
cld
lds
push
(bad)
call
test
fidiv
mov
icebp
inc
rcr
nop
mov
xchg
movs
and
out
xchg
sbb
mov
adc
sub
test
(bad)
push
popa
jecxz
sbb
mov
mov
add
(bad)
mov
iret
retf
test
mov
and
retf
add
mov
ins
xchg
mov
lock
pop
sbb
push
sbb
gs
movs
xor
movs
xchg
ins
jb
mov
sub
xor
fidiv
ret
sub
jmp
mov
mov
ret
dec
das
(bad)
out
add
cmps
retf
clc
cmp
out
fwait
xor
cmp
push
or
imul
mov
mov
ds
mov
jns
or
pop
mov
mov
pop
sbb
jbe
lahf
mov
jmp
inc
pusha
shr
(bad)
push
push
outs
or
out
ror
aas
fabs
ins
mov
sub
fnstsw
inc
mov
mov
aam
xor
cwde
rep
sahf
add
stos
xchg
fidiv
xor
or
mov
mov
sti
push
in
leave
and
into
xchg
cdq
pop
xor
pop
test
push
js
pop
shl
or
cmps
xor
(bad)
jmp
dec
sub
and
dec
fcomp
ja
cmps
pop
sub
shl
cmps
shl
scas
cs
push
js
ror
cdq
popf
(bad)
xchg
mov
or
test
dec
push
sub
adc
inc
pop
cmc
xor
jl
jmp
mov
dec
pop
xchg
sbb
popf
sbb
enter
in
cwde
pushf
and
jl
add
push
xor
cmp
das
aaa
dec
mov
pusha
mov
adc
imul
rcr
xchg
add
(bad)
stos
comiss
cmp
je
vpmacssdd
pop
es
xchg
retf
scas
dec
nop
dec
(bad)
jecxz
icebp
aas
xlat
cmp
in
scas
adc
iret
adc
mov
mov
jb
in
xchg
dec
inc
jl
ficom
test
lods
jb
nop
das
outs
sub
into
or
cld
jg
in
xchg
jl
std
sahf
ret
cwde
cld
pop
push
pop
bound
inc
jmp
jnp
(bad)
dec
inc
push
jp
nop
jle
(bad)
jmp
jge
ror
call
xchg
sbb
sbb
imul
popa
and
sbb
loope
push
xor
test
fdiv
mov
pop
add
call
push
inc
pop
fcmovnu
adc
leave
into
pop
rol
mov
mov
lods
cdq
scas
push
jo
mov
(bad)
cmc
stos
jge
cmp
or
push
mov
(bad)
ss
jl
cli
jle
pushf
cli
jo
retf
lea
fisubr
mov
pop
ds
stos
xchg
adc
mov
pop
sub
dec
xlat
ret
fisubr
add
call
shl
fmul
or
dec
and
sbb
push
aad
das
jle
fisub
fst
dec
and
cmc
mov
xor
inc
sbb
cmp
mov
push
jle
data16
add
sub
test
das
enter
ja
lods
das
xlat
sub
add
pop
mov
popa
ja
int
(bad)
jns
sub
mov
or
or
cmp
jns
push
test
lock
sar
adc
fisub
shl
lahf
ins
jmp
loope
mov
xchg
jmp
jns
jg
xor
mov
inc
adc
movs
add
ins
pusha
push
adc
dec
push
repz
cmc
cld
fmul
data16
xchg
or
fiadd
pop
movs
jge
xchg
call
xchg
and
add
cmps
ds
jecxz
dec
jns
test
xor
ins
inc
cmp
test
mov
jno
push
inc
add
rol
add
adc
cld
mov
mov
cdq
cmp
sbb
jl
and
mov
in
cmp
pop
inc
test
pop
mov
pop
(bad)
jo
in
or
jle
mov
and
out
mov
inc
push
jbe
lds
lea
mov
data16
adc
fld
mov
adc
pop
mov
aam
repz
xor
cli
cwde
rcr
mov
scas
das
inc
cld
ficomp
call
push
jae
jp
dec
int3
sub
add
ret
cmps
xchg
repnz
test
pop
sbb
inc
in
mov
adc
sbb
xchg
jl
push
mov
and
fmul
jge
push
pop
(bad)
or
jo
lds
sbb
push
dec
pop
pop
lds
cs
sbb
inc
dec
ret
adc
cmp
mov
fs
push
jmp
adc
add
nop
dec
dec
xor
(bad)
lock
jb
sahf
pop
mov
adc
imul
push
idiv
outs
(bad)
pop
fadd
(bad)
push
push
jns
xchg
daa
pop
outs
sbb
jae
xor
out
or
add
(bad)
xchg
aas
sub
pushf
cmp
popa
scas
add
sbb
test
and
shl
dec
(bad)
out
jmp
loope
nop
das
jmp
adc
out
or
jp
enter
adc
fcomi
dec
(bad)
xchg
mov
dec
hlt
pop
cli
call
fs
test
fadd
into
push
mov
retf
dec
std
pop
cwde
pop
xor
push
shl
clc
mov
and
data16
jge
and
cdq
push
sbb
fxch
add
sub
xlat
inc
or
jmp
add
push
test
repz
in
cwde
or
sbb
aad
fdivr
mov
mov
and
mov
lods
loop
or
dec
cmp
cmp
mov
std
cmp
inc
xchg
push
mov
xchg
clc
gs
jae
jecxz
ins
mov
dec
jmp
fld
mov
sti
jnp
fisub
pop
dec
outs
and
enter
sti
ret
rep
shl
fild
mov
stc
push
xor
mov
pop
mov
dec
jns
mov
into
jmp
push
stc
pop
pop
push
pop
cmc
nop
nop
fst
(bad)
mov
pop
ror
inc
jmp
data16
aas
xchg
xchg
daa
movs
mov
xchg
push
loop
scas
sub
test
outs
popf
fsubr
lds
xor
fcmovne
or
icebp
jns
and
out
adc
mov
comiss
mov
and
jge
sub
or
pop
ficomp
jmp
mov
aad
jns
inc
sbb
repnz
out
test
xchg
or
fst
adc
lds
sbb
scas
inc
inc
add
fwait
push
mov
cmp
stc
jl
inc
int
pop
add
mov
sub
arpl
stos
cmp
jne
inc
adc
inc
add
arpl
out
rcl
push
je
cmps
fdivp
cmp
movs
xchg
pop
inc
add
jge
fs
or
fidiv
call
or
jmp
out
sub
fsubp
dec
jecxz
sahf
mov
pop
pusha
jl
inc
and
shl
or
lock
imul
jle
cdq
std
xor
retf
in
inc
adc
adc
add
mov
out
inc
jae
(bad)
imul
frstor
jmp
xchg
shr
fldenv
adc
push
xor
dec
inc
cwde
shl
loope
mov
sub
jae
sub
mov
push
repz
mov
lea
sub
cli
test
iret
xchg
jle
fist
mov
jg
dec
fiadd
and
add
jg
mov
outs
or
in
mov
pop
push
daa
jb
cmp
and
jle
lahf
sub
dec
sbb
mov
cwde
mov
xchg
jge
lahf
jae
pop
pop
push
std
inc
cmp
cmp
inc
jl
push
sbb
ret
(bad)
leave
mov
mov
adc
xor
(bad)
push
sbb
data16
adc
mov
mov
popf
ficomp
out
aaa
stos
push
fsub
sub
push
dec
pusha
int
inc
adc
enter
repnz
shl
sbb
xchg
pop
repnz
push
sub
shl
xchg
dec
sbb
out
jp
jmp
bswap
loop
jecxz
xchg
je
xchg
pop
and
outs
addr16
imul
dec
imul
(bad)
(bad)
data16
adc
pop
mov
arpl
cmp
pop
loope
popf
sahf
mov
mov
mov
int3
daa
xchg
sbb
sti
xor
or
pop
jne
pusha
adc
sbb
cmps
inc
std
pop
mov
sar
jecxz
(bad)
dec
adc
popf
jno
sti
ret
fcom
fs
inc
push
or
popa
in
dec
mov
jmp
cmp
inc
adc
pop
call
addr16
push
lahf
test
or
mov
xchg
mov
jmp
push
inc
mov
add
pop
cmps
mov
xchg
inc
xlat
jbe
or
leave
nop
jmp
aas
call
and
repz
je
push
or
gs
pusha
fcmovbe
sbb
ins
ficom
addr16
fdivr
pop
pop
fisttp
(bad)
sub
out
call
pslld
or
imul
dec
sub
call
xchg
xchg
push
xor
test
(bad)
fcom
mov
mov
mov
test
loope
cmc
adc
jge
ret
shl
xchg
xor
inc
rol
hlt
arpl
rcpps
inc
jno
mov
cli
cwde
icebp
out
inc
mov
repz
aas
xor
es
movs
in
cli
or
hlt
add
shl
pop
sbb
adc
(bad)
cmc
cmps
out
mov
call
dec
retf
arpl
push
dec
(bad)
xchg
mov
pop
or
and
pop
in
push
(bad)
call
push
sub
jge
fs
imul
inc
sar
int3
test
fs
addr16
lds
push
xchg
xor
jmp
or
test
sahf
cmps
fbld
in
pop
loope
push
imul
ret
push
or
or
xor
xchg
xchg
mov
xchg
push
adc
into
es
pusha
fwait
call
addr16
imul
lds
cmp
add
aam
mov
cmp
and
mov
sub
jae
cmp
arpl
fstp
sbb
jge
jg
jge
push
aad
ds
add
sub
sub
stos
loop
pushf
cmp
ss
fdivr
retf
sbb
gs
cdq
aad
ins
cmp
scas
pusha
ja
sahf
mov
ins
js
xchg
test
js
and
pop
mov
mov
mov
outs
adc
adc
outs
xchg
mov
shr
cmp
add
outs
inc
jbe
xchg
mov
mov
fisttp
or
scas
pop
xchg
sub
sub
dec
xchg
inc
cdq
cld
push
(bad)
hlt
or
div
test
mov
(bad)
(bad)
sbb
sbb
pop
out
bound
fcomp
push
lods
mov
inc
and
adc
xchg
or
out
hlt
and
ret
daa
retf
aaa
addr16
pop
dec
jmp
pop
xchg
mov
pop
outs
fwait
mov
or
int
mov
lods
ins
dec
js
and
ss
js
pushf
sar
stos
push
sub
cmp
push
inc
dec
scas
fucom
mov
out
aaa
dec
mov
shr
cmp
std
ror
loop
mov
sub
in
xor
mov
fdivr
xchg
out
inc
adc
pop
repz
xor
and
inc
cmp
in
mov
out
adc
sub
inc
ficom
add
inc
shl
in
sbb
neg
(bad)
pop
mov
lahf
adc
ds
sbb
outs
test
movs
push
gs
retf
or
outs
push
(bad)
leave
sbb
in
stos
jmp
loopne
test
test
shl
frstor
jmp
push
sbb
sar
int
mov
sbb
repz
neg
jnp
cmp
dec
pop
inc
push
jb
fdiv
rol
xor
push
test
outs
loop
hlt
xor
mov
or
sub
xchg
and
addr16
sbb
dec
hlt
jne
pop
mov
or
fcom
leave
int3
sbb
sub
div
(bad)
push
adc
je
lahf
mov
jge
mov
and
nop
cmp
jmp
ror
ins
ror
pusha
mov
outs
or
dec
and
ds
add
xchg
into
cld
fisttp
add
sub
sbb
push
dec
test
xor
pushf
outs
int3
loope
in
push
mov
pushf
shl
in
add
jge
das
outs
test
imul
xor
ds
fbstp
fucom
cmpxchg
ret
xchg
jb
xchg
(bad)
(bad)
arpl
data16
and
inc
pop
cli
xchg
call
add
add
popa
les
mov
loope
lods
xor
push
addr16
inc
ror
std
or
idiv
or
xlat
not
icebp
das
sahf
(bad)
or
js
movs
mov
sub
inc
or
pop
xchg
push
pop
jbe
xchg
mov
inc
in
out
push
scas
mov
sbb
push
lock
or
cmp
mov
add
xchg
test
jns
stos
into
leave
mov
fcomp
in
dec
sbb
cwde
into
(bad)
lods
out
pop
lahf
jecxz
add
push
and
cmp
jg
imul
(bad)
mov
outs
out
retf
xchg
xchg
hlt
outs
and
mov
cdq
(bad)
(bad)
in
repnz
dec
adc
mov
nop
icebp
call
pushf
sbb
scas
xlat
push
xchg
jg
lar
dec
(bad)
popf
push
hlt
stos
fiadd
mov
xor
fnstcw
cld
jl
mov
push
bound
clc
push
iret
lahf
cmp
sti
popa
cmp
mov
stos
inc
push
dec
pop
mov
mov
sub
or
rep
jo
and
ds
cmp
and
adc
xor
push
inc
mov
dec
add
pop
mov
sbb
mov
mov
adc
jb
push
aad
and
xchg
cmp
stos
push
push
pop
sub
ins
(bad)
out
aam
test
mov
imul
xor
fld
les
adc
xchg
sti
shl
inc
daa
xchg
cmp
adc
jp
jecxz
icebp
pop
mov
sub
or
cmp
hlt
sbb
add
stos
jnp
into
cwde
pop
ja
jmp
aad
mov
push
jp
lock
addr16
xchg
out
fsub
dec
stos
mov
cmp
out
fist
adc
int3
push
and
mov
test
xchg
xchg
jo
call
dec
jmp
out
nop
dec
xor
mov
fnsave
push
sub
stos
add
rcr
mov
imul
adc
mov
popa
out
pop
and
out
lods
add
mov
dec
xchg
sub
dec
sub
ja
ret
xor
in
popf
test
cmp
pop
sbb
inc
mov
sub
xchg
mov
sbb
inc
cmp
pop
mov
hlt
aam
pop
jae
xchg
pop
dec
shl
sub
shl
(bad)
dec
sar
mov
or
mov
cmp
popa
(bad)
or
out
cmps
aaa
iret
scas
mov
xlat
out
and
popaw
adc
sub
adc
xchg
inc
das
mov
mov
mov
por
jne
jns
pop
out
xchg
fisub
push
je
sub
adc
scas
fwait
jecxz
movs
mul
repz
adc
cmps
addr16
data16
adc
aas
out
pop
mov
icebp
rol
push
and
mov
popf
imul
inc
scas
in
mov
out
jmp
sbb
aam
cli
xlat
inc
in
out
and
fcomp
shl
call
and
push
mov
jne
mov
xchg
sbb
sub
pop
mov
or
rol
jne
lahf
sti
idiv
sbb
cs
mov
out
in
les
inc
ret
std
mov
stos
push
or
adc
mov
or
je
fcomp
mov
aaa
dec
cli
mov
push
shl
adc
jp
pop
mov
xchg
popa
gs
lea
mov
(bad)
pop
ret
jg
cmp
fwait
dec
sub
inc
xchg
loope
jmp
in
sar
cmp
out
pop
pushf
pop
mov
inc
inc
(bad)
jno
int
add
(bad)
icebp
and
ds
int3
or
out
cdq
push
push
rcl
push
cdq
je
adc
mov
jne
inc
in
out
mov
test
jmp
dec
xchg
fsubrp
xchg
lods
mov
pop
lea
daa
je
xor
jne
aam
jbe
or
in
push
test
sbb
ds
jbe
xchg
add
movs
fld
adc
fwait
pop
imul
dec
sub
mov
retf
ds
repz
inc
ret
cld
stos
retf
(bad)
sbb
in
popf
jmp
xchg
or
dec
jns
jg
add
jo
fs
mov
cdq
div
call
add
cmps
sbb
cld
or
movs
add
jp
pop
jmp
int3
icebp
sub
call
jbe
movs
push
adc
inc
pop
sbb
ins
pop
mov
leave
fidiv
ja
jno
mov
jp
jle
sub
xchg
jno
dec
or
sub
dec
push
cmp
push
fwait
xchg
fist
xchg
jns
hlt
sbb
adc
clc
inc
inc
or
call
in
push
mov
(bad)
dec
dec
mov
pop
jp
jns
(bad)
aad
mov
mov
fld
inc
sahf
shr
iret
call
pop
stos
ins
push
loope
sub
cmp
and
jl
fisttp
cmp
push
jecxz
xor
dec
mov
xchg
jmp
popa
addr16
ds
sub
xchg
lea
hlt
adc
imul
(bad)
(bad)
jl
(bad)
idiv
push
ss
leave
sar
loop
pushf
inc
js
and
rol
dec
mov
push
xchg
cmp
xchg
fs
ins
pop
fcmovnb
int3
pop
dec
add
fild
lahf
fbld
mov
xchg
jge
xchg
data16
test
jo
dec
and
adc
xor
int
lea
cmp
adc
scas
into
push
sahf
add
repz
mov
fldenv
imul
inc
dec
mov
jb
sbb
aad
ret
and
scas
push
dec
sub
adc
nop
movs
in
cmp
(bad)
into
shl
mov
movs
add
add
xor
ja
js
icebp
ins
and
ffree
pop
dec
add
test
pop
test
xlat
cld
pusha
xchg
jle
cmp
leave
push
jno
fidiv
in
rcr
fild
popa
pop
stos
ret
pop
mov
in
pop
pop
or
ja
int3
(bad)
and
xor
jne
inc
aas
mov
pop
cmp
push
cdq
mov
rcl
cmp
(bad)
adc
xchg
jl
jno
inc
cmp
mov
repnz
retf
or
sub
ret
(bad)
out
and
adc
in
xor
pushf
addr16
sbb
loopne
neg
cmps
xchg
and
xchg
xor
movs
mov
out
mov
jbe
and
mov
je
lock
cmc
push
xchg
inc
movs
jmp
cmps
wrmsr
rcr
out
jle
jb
sti
xor
add
sahf
cmp
fstp
and
adc
stos
sti
pop
cwde
cdq
mov
mov
sahf
(bad)
loop
or
push
std
aas
pop
cmp
stos
loopne
pop
inc
push
cld
inc
add
xor
leave
sbb
(bad)
daa
adc
aaa
and
pop
(bad)
popa
imul
mov
test
xchg
sbb
jmp
out
shl
cmps
cmp
ja
enter
cs
hlt
and
scas
jle
ds
push
adc
(bad)
mov
(bad)
sub
push
call
xchg
dec
aaa
inc
mov
xor
or
mov
(bad)
in
and
fmul
jae
mov
mov
cmp
xchg
fld
mov
addr16
xchg
mov
outs
test
mov
sub
fs
test
ror
or
aam
neg
adc
xchg
adc
sub
gs
jo
push
jmp
(bad)
cmc
mov
and
inc
xor
pop
das
shl
sub
leave
sub
sbb
adc
sub
jae
mov
pusha
xchg
iret
xchg
jae
sar
push
mov
or
fstp
out
mov
mov
mov
es
scas
add
test
mov
aam
sub
call
mov
inc
mov
push
fist
leave
test
sbb
mov
jbe
in
in
jmp
xchg
jg
mov
and
pop
cwde
lods
or
dec
jle
fs
(bad)
fxch
adc
leave
push
sub
ret
or
and
ins
shl
pop
inc
inc
mov
or
repz
(bad)
sub
ficom
cmp
pop
shl
mov
jns
mov
dec
nop
jmp
sbb
js
pushf
dec
xor
jp
jmp
dec
adc
fcos
or
push
inc
pop
pop
cmp
out
xor
loop
aas
pop
std
xor
enter
test
stos
jo
mov
jno
push
in
add
clc
outs
inc
xchg
mov
loope
inc
cmps
ds
lods
rcr
or
push
mov
daa
test
ffreep
pop
push
adc
sbb
push
in
js
xor
es
xchg
repz
ja
arpl
fsubr
loopne
dec
xchg
push
test
or
test
dec
ret
mov
inc
retf
stos
and
inc
cwde
sti
xchg
sub
popa
fdiv
cdq
mov
jns
mov
pop
aad
xchg
add
cmps
fisubr
jp
fmul
ficom
add
sub
std
and
lahf
push
sar
push
scas
jmp
adc
push
int3
sar
neg
jmp
sar
mov
cmp
ret
jmp
jp
mov
or
test
test
xlat
retf
ficom
cmc
push
loop
pop
or
cmc
test
daa
or
ss
adc
sbb
cli
cli
punpckhwd
jne
inc
pop
xor
dec
xlat
add
clc
xor
nop
sub
out
dec
data16
test
ret
inc
mov
call
in
sbb
sahf
pop
bound
xor
retf
aam
sbb
ret
retf
lds
jne
cmp
xchg
sub
repz
fisub
ret
nop
mov
dec
retf
xchg
pop
call
xor
adc
das
out
movs
xor
adc
(bad)
out
cmp
mov
in
imul
aad
mov
sbb
clc
clc
aas
lahf
add
call
fmulp
add
addr16
retf
scas
mov
call
(bad)
cmp
pop
cmp
pushf
cmp
nop
push
inc
repz
jecxz
mov
push
aam
inc
push
retf
mov
cmps
push
lahf
cmp
pop
ret
in
call
fisttp
aaa
add
and
adc
js
sbb
das
movs
repz
jno
test
and
fcomp
adc
mov
mov
pminsw
pusha
scas
cs
or
inc
in
adc
xchg
jle
jo
hlt
inc
or
and
sbb
xchg
jnp
in
and
popf
xchg
leave
fs
shl
sbb
out
test
aad
cwde
add
es
mov
mov
cmp
repz
jmp
push
jmp
popa
repnz
mov
sbb
jae
icebp
xor
adc
aad
aad
jno
repnz
and
sub
lds
mov
jo
(bad)
mov
push
mov
adc
xchg
aad
or
ds
mov
xchg
scas
repnz
sbb
add
push
daa
cmps
sub
les
sti
pop
cwde
inc
jge
shl
pop
adc
pop
add
loope
add
pop
ror
sar
or
push
or
jmp
pop
pop
addr16
outs
xor
int
and
mov
in
dec
test
(bad)
pop
xor
push
pop
xchg
dec
push
cwde
mov
test
add
inc
popf
jns
jb
or
mov
shr
push
les
pop
mov
ds
jecxz
test
in
sbb
nop
xchg
xor
mov
out
and
dec
popa
fistp
pop
inc
push
and
push
add
out
pop
imul
mov
jbe
xor
inc
mov
or
sub
ror
lds
ret
jne
inc
pop
xlat
(bad)
popf
mov
jb
dec
push
test
xor
lock
scas
and
push
(bad)
sub
iret
or
or
adc
or
pop
sub
mov
mov
jmp
aam
dec
into
xchg
mov
repnz
std
pop
outs
xchg
sub
jl
inc
lds
iret
loop
mov
pop
inc
fwait
xchg
add
outs
cli
fmul
jp
(bad)
(bad)
out
or
test
mov
iret
shr
sub
mov
pop
lock
inc
retf
cmp
mov
dec
test
jb
push
mov
jmp
sub
retf
cwde
pop
out
and
jnp
aam
inc
ror
lock
fbstp
test
pop
cmp
int3
test
xor
xor
outs
mov
sbb
fsub
cmp
(bad)
jecxz
sbb
xlat
cld
mov
sar
adc
mov
imul
inc
hlt
xor
loopne
in
mov
and
clc
mov
test
or
pop
rol
out
mov
xchg
jb
pushf
rcl
call
les
push
aaa
or
cs
adc
sbb
mov
lods
push
rcr
dec
cmp
ret
dec
mov
push
das
push
aad
inc
ins
and
mov
jbe
lea
mov
mov
movs
mov
popf
or
dec
rcr
daa
bound
cdq
pop
cmp
pop
inc
pop
(bad)
pop
adc
cwde
inc
mov
bound
sahf
es
xor
sub
jo
shl
div
fsubrp
leave
pop
jb
(bad)
in
push
jne
sbb
push
pop
(bad)
sub
and
adc
add
addr16
cmovae
cmp
mov
mov
fdivr
pop
lods
xor
fs
mov
aam
dec
cmp
pop
jmp
mov
int
sahf
add
inc
and
push
dec
imul
or
dec
dec
cmp
cld
xchg
inc
aaa
mov
xchg
jb
cs
das
shl
icebp
push
aas
xor
pop
pop
adc
mov
mov
sub
lea
dec
scas
das
ret
mov
and
mov
xor
mov
push
out
ret
cmps
sti
and
mov
cmp
adc
mov
xor
adc
loop
sti
into
push
xchg
je
push
cmp
push
xor
mov
gs
inc
dec
shl
jl
xchg
data16
loope
sbb
fisubr
sub
lock
int3
xchg
sti
xor
in
mov
aaa
fwait
mul
mov
inc
mov
ss
and
cmc
fimul
xor
push
ins
mov
in
(bad)
ror
cwde
lahf
cmps
daa
jb
sub
xchg
jp
scas
jle
scas
dec
xchg
mov
cmc
dec
mov
add
cmp
pop
sub
aad
xchg
fist
shr
imul
daa
retf
ss
fs
cmc
std
and
into
daa
(bad)
and
cmp
pop
add
jle
inc
repnz
setae
stos
stos
jne
sub
dec
popa
aam
call
or
test
jmp
and
sub
jecxz
dec
push
inc
lahf
sub
mov
jnp
gs
in
(bad)
sbb
int3
(bad)
xchg
(bad)
retf
rol
or
mov
loopne
cld
arpl
fcmovbe
movs
sbb
xchg
cmp
inc
jnp
lods
or
push
xchg
push
pop
mov
cmps
cmp
xor
(bad)
ja
and
leave
lock
sub
mov
mov
out
or
sub
pop
dec
stos
es
push
int
pop
push
cmp
aas
adc
xor
scas
xor
inc
fiadd
dec
xor
out
or
add
js
cmc
jnp
jmp
in
int3
jne
in
sti
or
push
push
aas
sbb
pop
mov
test
jb
xchg
pop
push
dec
pushf
jmp
cmp
mov
(bad)
push
mov
cdq
cmp
jecxz
add
cmp
jb
or
fdivp
test
shl
imul
jno
fnstenv
pushf
cli
cmc
mov
pushf
daa
jp
int
mov
jns
jmp
push
imul
rcr
sbb
xor
xchg
dec
stos
ret
out
or
dec
ret
imul
popa
mov
cmc
bound
stos
(bad)
clc
jb
xor
xor
dec
push
aas
sbb
and
popf
add
sbb
dec
mov
mov
xchg
jae
les
mov
cmp
inc
outs
mov
mov
mov
or
push
mov
jae
inc
mov
mov
cdq
xor
pop
xchg
ret
jle
popf
call
popa
or
jl
inc
call
sti
jl
jbe
sbb
int
push
dec
(bad)
int
hlt
stc
fistp
inc
in
imul
shl
mov
std
cwde
xor
add
jb
shl
sub
fld
jle
xlat
nop
pushf
mov
cmp
popa
stc
hlt
push
call
mov
mov
jne
into
push
sbb
mov
cmp
ret
or
mov
aam
jmp
add
dec
sbb
jb
cmp
adc
and
mov
and
jnp
add
mov
mov
pop
or
ins
fisub
aaa
dec
pop
loopne
push
popa
jbe
mov
sbb
adc
ins
hlt
fs
jae
in
ror
jl
push
add
jmp
xchg
jl
inc
rcl
popa
cmps
ret
cdq
icebp
mov
fs
sbb
icebp
xor
aaa
and
jmp
jp
call
iret
adc
inc
dec
jbe
fdivr
and
mov
icebp
mov
imul
or
push
es
sub
fimul
add
and
rcr
xchg
inc
mov
sub
cmp
xor
push
cmp
push
sbb
dec
and
cmp
xchg
lds
std
loop
inc
sub
ins
add
jno
lods
xchg
mov
push
cld
push
or
mov
mov
icebp
jg
das
mov
and
shl
in
mov
std
aaa
dec
sbb
adc
push
or
jb
pop
xchg
fcomp
movs
or
jns
xor
rcl
std
push
fs
out
scas
and
mov
jno
lahf
arpl
inc
ret
aaa
mov
shl
mov
retf
pusha
out
outs
xchg
imul
out
or
ss
sbb
fidiv
lea
leave
dec
mov
rol
js
push
dec
mov
jo
fdivr
(bad)
out
and
(bad)
cmp
dec
lods
sub
hlt
jp
daa
int
cmc
adc
dec
mov
fchs
inc
xor
test
jb
adc
lahf
xchg
out
in
jp
pop
jle
sahf
ja
pop
sbb
imul
into
ret
int
sub
xchg
mov
je
inc
imul
add
fs
ss
and
and
aad
stc
xchg
rcl
nop
sbb
lods
xchg
popf
push
pop
add
lock
add
inc
dec
es
xchg
cmp
cmps
add
stos
lods
xor
repnz
dec
mov
pop
hlt
aas
cld
cmp
jbe
lahf
rol
xchg
test
(bad)
push
add
mov
mov
jbe
mov
push
pop
scas
ret
or
(bad)
or
and
pop
in
mov
fwait
sti
rcr
cmp
sub
jbe
mov
push
outs
out
cmp
or
mov
and
mov
ds
fisub
lods
mov
jmp
xchg
stc
pop
jmp
cmovge
mov
xor
bound
push
xor
aaa
or
fs
xor
popa
rcl
push
(bad)
cmp
ret
ja
push
inc
clc
clc
or
and
sti
sub
pop
or
add
and
imul
stos
imul
ror
add
mov
pop
sub
test
int3
scas
pop
sbb
aaa
mov
push
add
(bad)
jmp
and
enter
mov
xor
iret
sbb
sub
and
xor
sbb
in
or
or
jp
dec
xor
cwde
jnp
mov
in
mov
ret
das
jne
es
in
push
sar
inc
xchg
cmc
add
fsubr
and
inc
mov
and
bound
hlt
and
scas
jnp
sub
pop
out
dec
loop
in
adc
jge
stc
dec
push
neg
push
ret
push
pop
dec
pop
lods
in
jmp
sub
jg
push
hlt
rcr
mov
xor
xchg
stc
das
and
imul
xchg
jg
lods
mov
dec
or
mov
jmp
popa
jae
loopne
into
test
push
lea
movs
mov
repnz
in
ror
cli
(bad)
arpl
pusha
imul
std
loope
retf
dec
sub
shr
push
cld
lahf
push
adc
sbb
dec
mov
out
push
(bad)
adc
jne
in
mov
pushf
cld
cwde
xor
ins
cs
js
add
and
ja
mov
pop
test
frstor
pop
cwde
scas
dec
addr16
ja
mov
leave
pop
cmp
xchg
add
dec
mov
push
addr16
retf
pop
pop
lahf
icebp
and
inc
ins
and
push
retf
cmps
pop
and
mov
jle
jge
jnp
mov
pop
fild
xchg
dec
imul
or
or
pop
mov
jae
outs
mov
xchg
inc
js
imul
sub
push
add
jne
(bad)
cdq
mov
dec
das
pop
jecxz
sbb
je
aaa
inc
sub
(bad)
aaa
jle
(bad)
out
int
sbb
bound
sub
xchg
jg
movs
push
jne
ins
inc
dec
scas
xchg
movs
xchg
add
mov
jns
(bad)
fst
lea
mov
xor
movs
jno
add
mov
daa
icebp
test
push
aas
push
mov
inc
dec
sti
adc
push
pop
mov
loopne
xchg
dec
pop
or
pop
fst
mov
pop
push
repz
xor
out
test
test
sahf
(bad)
shr
out
jb
dec
cmps
loop
add
icebp
mov
and
xor
shl
mul
aam
aam
(bad)
xchg
cmp
pop
retf
fst
push
cmp
shl
sub
jg
stos
mov
jbe
and
xlat
(bad)
or
pop
out
sub
fmul
int
movs
lea
jnp
adc
lds
popa
xor
jbe
pop
(bad)
into
aas
fistp
ret
and
inc
sahf
adc
ins
cwde
cmp
ja
xchg
sub
sbb
sub
retf
mov
cmp
pop
scas
(bad)
mov
adc
jle
sub
scas
xor
inc
push
(bad)
pop
mov
mov
xchg
sbb
jg
sar
loopne
and
fistp
call
clc
out
mov
jle
xchg
(bad)
test
add
fmul
dec
mov
fld
and
js
das
lods
push
popf
xchg
sbb
sti
jecxz
and
and
retf
out
adc
dec
pop
stos
cmp
aaa
add
int
dec
pop
cmp
pop
dec
xchg
int
cmp
inc
imul
outs
adc
pop
jg
lods
and
dec
xchg
outs
rcl
add
sbb
inc
mov
jg
push
hlt
loop
inc
minps
inc
xor
in
jne
mov
add
fisttp
or
imul
bound
push
xchg
cwde
cmp
aas
addr16
lods
in
ret
xchg
inc
adc
pusha
xchg
test
mov
int
ds
outs
push
mov
aaa
dec
out
outs
add
in
jnp
sbb
test
and
and
enter
es
pop
xchg
add
add
and
iret
sahf
jb
mov
mov
ret
in
scas
lods
lods
push
das
imul
js
dec
xchg
(bad)
xlat
pop
popa
cmc
dec
into
xchg
lods
xchg
adc
and
jno
mov
push
sub
mov
mov
aaa
stc
inc
mov
sbb
aam
jmp
in
dec
imul
lds
call
loopne
push
jecxz
stos
sbb
mov
stc
pop
mov
jae
sbb
mov
pusha
add
push
ss
mov
movs
xchg
les
es
jo
push
fst
or
cld
aaa
outs
push
mov
push
aaa
je
dec
mov
push
mov
push
ror
js
sar
fwait
mov
mov
lds
jnp
ret
sbb
fisttp
lods
pop
xchg
xchg
cli
ret
retf
adc
ret
cli
pop
inc
jne
or
mov
jg
dec
xchg
rcr
dec
scas
(bad)
pop
adc
dec
sub
cwde
outs
ss
sub
push
enter
inc
(bad)
jae
cs
rcl
ror
adc
mov
sbb
lock
jg
add
imul
fwait
or
push
sti
out
out
mov
(bad)
sbb
cmp
mov
fimul
out
add
sbb
inc
inc
gs
xchg
sub
mov
mov
out
sub
push
push
lods
dec
or
or
mov
fimul
retf
pop
push
xchg
movs
stc
aam
push
shl
xor
pusha
outs
jl
pop
daa
push
iret
inc
sar
in
and
imul
imul
int
sahf
int
retf
jecxz
jns
daa
jo
aaa
in
xor
push
adc
mov
mov
pop
sbb
icebp
dec
in
mov
scas
adc
leave
cmp
sub
out
pop
or
sbb
cld
sub
aad
mov
jne
inc
mov
sub
pop
add
sub
cli
test
jg
ds
(bad)
push
nop
imul
cmp
call
dec
pop
and
aaa
adc
loop
mov
popa
ror
fsqrt
pop
and
add
fistp
cmc
mov
icebp
dec
sbb
test
fisttp
mov
in
pop
xor
mov
jmp
mov
cmp
and
sbb
mov
movs
sar
jbe
dec
adc
adc
jns
(bad)
fsubr
popa
dec
vcvtsi2ss
cdq
pop
pop
cmp
aam
mov
leave
push
dec
cs
adc
xor
div
xchg
pushf
rol
dec
pop
inc
jb
ret
cmp
mov
(bad)
push
pop
movs
sub
sbb
push
div
sbb
test
adc
(bad)
out
mov
mov
cmp
fcomp
cmp
div
ja
(bad)
xor
xchg
xchg
jns
outs
popf
adc
mov
adc
outs
das
loopne
call
hlt
xchg
call
test
jo
xchg
les
jp
mov
fcmove
and
cli
aam
lods
inc
lea
inc
in
jae
scas
in
int
fisubr
test
dec
adc
pop
es
mov
retf
fcmovnu
xchg
push
sbb
lea
pop
les
cmp
push
mov
dec
xor
mov
cmps
not
cmp
add
loope
in
mov
or
mov
imul
fist
(bad)
cdq
ror
loope
jb
inc
jle
stos
or
mov
dec
addr16
fst
(bad)
or
call
and
gs
dec
into
sahf
(bad)
fsub
jge
ss
jns
out
out
adc
int3
push
in
and
retf
and
or
sub
inc
mov
nop
xor
xchg
jne
rol
pop
outs
ja
mov
sbb
cmps
rcr
push
in
push
mov
mov
gs
(bad)
fdiv
mov
fisubr
jo
cmps
lods
push
sub
mov
mov
fnsave
sbb
ror
sub
(bad)
sbb
xor
out
(bad)
push
mov
add
mov
mov
nop
sahf
loopne
mov
lods
sbb
jp
cmp
(bad)
jnp
mov
mov
jle
mov
ins
jg
sub
xchg
dec
xchg
or
call
cmp
mov
popf
fwait
in
inc
movs
imul
dec
xor
dec
retf
test
test
add
call
push
int
pop
jle
inc
popa
bswap
movs
sbb
adc
(bad)
fldenv
iret
mov
cmps
loopne
cmp
jg
cmc
dec
sbb
test
nop
sbb
fild
leave
mov
js
shr
or
in
mov
popf
xor
inc
push
stos
mov
dec
leave
enter
add
fsubr
ja
ret
retf
fcomp
stos
jmp
sahf
not
into
je
repz
mov
mov
jnp
inc
jl
adc
sbb
dec
jb
repz
das
pop
push
fs
shl
cld
mov
xor
shr
jle
mov
push
mov
(bad)
sbb
pop
pop
sbb
push
arpl
hlt
push
pop
adc
add
adc
cmp
mov
lock
fiadd
mov
repnz
inc
cmp
shl
cmp
out
(bad)
stc
fild
jl
pop
mov
sbb
lahf
and
imul
xchg
sub
xor
out
pushf
adc
nop
cmp
(bad)
ror
shr
add
popf
mov
in
xchg
sub
(bad)
ins
adc
inc
lods
xor
in
cmp
shl
cs
movs
ror
push
jo
(bad)
aad
(bad)
pushf
pusha
stos
enter
ret
popf
sbb
mov
test
sub
xor
pusha
mov
sub
div
movs
or
sub
pop
jmp
and
enter
fcmovne
mov
inc
ret
loope
popf
pushf
sub
movs
fst
sub
mov
fimul
jb
imul
add
xchg
or
push
outs
imul
and
xlat
mov
into
vphaddbq
cmps
in
inc
call
retf
stc
jle
cmc
xor
push
stos
pop
and
mov
jmp
xchg
push
in
sbb
xor
and
mov
cmp
lock
sbb
push
sub
xor
inc
push
xlat
scas
iret
iret
sbb
or
aad
jae
inc
add
sbb
push
mov
icebp
mov
sbb
(bad)
fst
sbb
aam
addr16
mov
xchg
mov
lahf
stc
jg
and
or
sub
ins
pop
(bad)
clc
sbb
jnp
adc
or
dec
(bad)
loop
stos
xchg
imul
inc
inc
cmp
test
clc
(bad)
mov
mov
mov
adc
icebp
xchg
push
arpl
das
fild
xchg
add
jle
jne
sar
ror
je
scas
cmps
loope
ret
mov
hlt
repnz
ret
lods
ds
pop
fsubr
jne
jns
xlat
or
mov
add
pop
in
in
xchg
frstor
call
ja
pop
sahf
ja
(bad)
mov
push
mov
sbb
xor
mov
xlat
add
dec
in
lea
rol
add
int
adc
loope
and
aam
shr
mov
fsub
xchg
mov
sbb
mov
repz
mov
xchg
xchg
add
xchg
loope
pop
fwait
push
in
ret
fldcw
daa
adc
jnp
cmps
push
or
fidivr
fsubr
push
sbb
sahf
push
and
jg
cmps
push
cmpps
shl
dec
retf
push
sti
pusha
jb
bound
ror
ror
xchg
rcl
loop
(bad)
sti
mov
frstor
retf
lds
int
push
mov
add
jae
pusha
add
fisub
and
sbb
mov
push
sub
dec
mov
jg
add
ret
int3
push
scas
jnp
iret
pop
stos
dec
cmps
scas
sahf
inc
sbb
mov
mov
call
std
xor
retf
mov
popa
lds
aas
packsswb
int3
or
lods
enter
das
add
xchg
inc
loop
daa
ins
outs
cdq
inc
adc
sub
outs
jle
jmp
fldenv
gs
test
daa
shl
movs
sbb
test
test
in
sahf
cld
pop
arpl
push
mov
(bad)
xchg
mov
mul
add
push
leave
jns
xchg
ret
dec
mov
(bad)
in
repnz
cli
or
popf
inc
ins
retf
mov
add
data16
(bad)
ret
out
push
sar
push
jle
(bad)
inc
jo
mov
push
push
or
inc
aam
dec
or
xlat
imul
pop
fsubr
xor
call
ret
out
sub
lahf
fsubr
cmp
rol
shr
xor
push
iret
into
push
mov
loope
pop
rol
movs
cmps
aam
hlt
pop
test
es
sub
push
clc
push
mov
mov
push
xor
push
add
adc
add
in
push
mov
push
fild
movq
shr
popf
pushf
sub
imul
cmp
cmc
xor
add
inc
(bad)
jmp
fsubr
cmp
out
mov
mov
jmp
mov
pop
sub
pop
or
mov
jno
outs
jl
sbb
mov
ficom
sbb
sub
cmp
nop
pop
int3
out
or
push
add
pop
cmp
in
clc
or
popa
xlat
lds
mov
pop
pusha
call
cdq
jg
pop
xor
cmp
pop
xor
popa
or
arpl
pop
jmp
xor
jb
out
mov
push
cdq
dec
repnz
mov
push
lahf
and
push
shr
mov
cmp
test
jae
or
dec
(bad)
mov
call
inc
jno
mov
pop
jb
add
pushf
mov
leave
pop
push
xor
adc
or
mov
sub
push
add
or
ss
inc
and
dec
pop
mov
lds
rcl
cmp
mov
jp
xchg
(bad)
shr
pop
fnstenv
rcr
sub
lock
fisubr
inc
ja
sub
mov
shl
lock
xor
fist
test
popa
jecxz
pop
repnz
cmp
mov
stos
mov
cmp
(bad)
imul
ficomp
mov
into
jb
cmps
cmps
jmp
test
enter
cmp
pop
movs
inc
xchg
dec
aam
jmp
cwde
movs
mov
sub
shl
leave
jecxz
fs
cmp
lsl
mov
mov
data16
xchg
ror
rol
fild
xor
into
mov
ret
mov
cld
cmps
xchg
and
lock
sub
(bad)
push
out
xor
inc
xchg
ins
leave
lahf
and
and
xchg
dec
xor
pop
leave
out
pop
pop
out
mov
sub
xchg
movs
add
pop
xlat
xchg
or
xor
xor
xchg
inc
enter
adc
test
sub
cmps
lods
test
mov
rcr
das
adc
das
(bad)
repz
adc
xor
sbb
fwait
push
and
in
pop
mov
jnp
sub
mov
xor
inc
cmp
sbb
push
nop
jno
sbb
or
xchg
pop
ss
scas
push
mov
int3
(bad)
mov
or
in
movs
push
cld
lods
or
outs
dec
ret
int3
xchg
icebp
aam
retf
add
aam
ret
out
pop
sub
mov
inc
mov
push
fild
scas
mov
in
mov
push
mov
arpl
cwde
xor
rcl
push
scas
inc
loopne
xor
add
test
addr16
mov
fbld
jno
out
mov
movs
or
and
cmp
jo
sti
cs
outs
jns
and
adc
loopne
bound
fcmovu
xchg
jmp
pop
cmp
inc
sub
sub
cld
sub
push
mov
or
popa
xor
(bad)
pop
xor
mul
clc
and
test
icebp
cmp
nop
push
xchg
gs
das
push
jb
adc
push
hlt
imul
jns
nop
cs
pop
xor
add
mov
xchg
mov
add
movs
sbb
jmp
data16
fldcw
(bad)
popa
movs
aaa
fwait
cli
dec
jmp
out
xchg
adc
ds
out
and
cmp
test
push
sub
sbb
jle
addr16
add
mov
sub
sahf
ja
pop
pop
call
mov
mov
cmps
xchg
xor
fwait
aas
(bad)
pusha
int
xor
addr16
fcom
test
pushf
sub
scas
sbb
gs
imul
jne
enter
xlat
loope
pop
in
imul
imul
dec
sahf
rol
add
stos
mov
push
mov
pop
ja
push
nop
je
(bad)
jp
fwait
cmp
jecxz
iret
pop
xchg
xor
outs
mul
(bad)
xlat
loope
jbe
nop
lahf
adc
jb
stc
cmp
mov
out
xor
stos
stc
dec
pop
cmps
retf
push
sub
mov
xchg
hlt
push
jmp
lods
add
dec
cli
mov
jno
imul
in
pop
cmp
out
push
sub
repz
mov
xchg
mov
dec
icebp
cmp
js
mov
mov
les
aaa
lock
pop
jae
mov
mov
das
jno
out
stos
sub
mov
adc
loope
rcl
push
dec
(bad)
xchg
pop
xchg
fs
(bad)
mov
ret
mov
iret
mov
data16
mov
xor
fiadd
je
lods
xchg
mov
xor
adc
cmp
movs
je
es
dec
push
xor
outs
jo
pop
sub
jmp
add
mov
inc
dec
test
mov
xchg
in
and
mov
movs
ret
add
iret
fmul
rcl
and
xchg
or
mov
add
stos
cdq
(bad)
xlat
or
sahf
xor
mov
pop
jmp
retf
cmp
fcmovb
sub
inc
xchg
out
push
dec
adc
dec
sbb
add
pop
stos
adc
push
(bad)
dec
xchg
xchg
sbb
addr16
push
pop
inc
out
into
adc
dec
fsub
clc
add
push
repnz
ror
jg
nop
and
js
push
int3
mov
clc
inc
neg
inc
pop
cmp
add
mov
clc
inc
mov
out
jbe
aam
sub
adc
jl
mov
loop
cwde
and
sbb
sub
sbb
movs
and
push
or
add
mov
ja
adc
cmp
movs
retf
retfw
adc
xchg
mov
push
lea
test
data16
xchg
sbb
int3
nop
push
push
adc
mov
ja
in
cmc
(bad)
movaps
retf
fnsave
ficomp
fsubr
mov
(bad)
aam
push
fcomp
les
out
jns
xchg
dec
add
pop
lods
push
icebp
jno
out
dec
jb
push
adc
mov
fld
(bad)
enter
in
jl
js
cmp
inc
mov
lods
aad
shr
push
or
es
add
cdq
mov
in
aad
sub
dec
adc
pop
fisubr
test
mov
or
pushf
loop
sti
stos
add
out
arpl
lds
aam
rol
xor
sbb
cmp
xor
lds
xchg
dec
mov
or
jb
aad
fwait
push
in
or
aam
addr16
call
add
sub
movs
jmp
mov
push
in
lods
fcomp
jae
jp
sbb
dec
int3
xchg
sbb
sti
stos
sti
ficom
mov
pop
adc
and
test
mov
push
pop
mov
test
fcomp
out
xchg
sbb
ret
movs
inc
lods
push
adc
jne
shl
retf
jmp
pushf
cs
jle
pop
out
mov
cmp
js
push
cld
lahf
jg
sbb
jne
into
cld
and
jmp
in
xor
repz
div
les
cs
xor
pop
inc
jge
outs
xchg
mov
mov
add
mov
popa
movs
imul
mov
(bad)
xlat
pop
mov
cmps
sti
and
lds
test
das
or
add
mov
and
cmp
div
test
shl
lds
lock
fucomp
ins
cdq
aaa
xor
lds
rcr
ror
add
std
sar
mov
retf
pop
in
mov
jae
push
fs
mov
stos
(bad)
xchg
mov
repz
arpl
out
(bad)
(bad)
jle
add
or
xlat
dec
sub
fwait
inc
push
push
push
lahf
cs
sub
mov
sti
(bad)
lds
sub
mov
sbb
out
aas
jae
push
mov
push
mov
sub
xchg
mov
push
popa
add
jno
push
lods
add
xor
stos
cmp
or
jns
xor
or
scas
and
inc
ret
cmp
call
push
push
xor
imul
xor
ss
push
stos
push
push
mov
inc
mov
out
cmps
pop
das
retf
scas
scas
fimul
call
fcmovnbe
pop
push
test
inc
lods
ret
pop
fild
test
(bad)
xor
sub
jle
aas
scas
ss
sahf
aas
ret
adc
xchg
push
add
mov
pop
mov
and
add
sub
aad
cld
arpl
add
test
jmp
cmc
icebp
xor
pop
js
test
push
pop
mov
adc
cdq
in
loope
aam
in
stc
vpsubq
inc
cmc
sub
or
lock
jb
sub
dec
jns
mov
mov
std
ss
mov
(bad)
jp
push
mov
ins
fwait
pop
or
pushf
retf
movs
sub
adc
xor
std
and
xchg
inc
push
adc
add
jb
pushf
retf
add
pop
imul
dec
nop
mov
or
jmp
jae
push
mov
and
push
dec
push
cmp
cmp
jecxz
outs
imul
jo
mov
jmp
popf
(bad)
stos
jmp
jmp
inc
test
jns
pop
out
popa
mov
sbb
lea
or
jge
add
jle
or
mov
mov
jb
jg
sbb
shl
outs
inc
scas
mov
xchg
add
push
imul
aad
loop
popa
jbe
out
aaa
push
mov
mov
pop
sub
sti
mov
das
std
test
jmp
mov
enter
pop
pop
pop
sti
popa
inc
sbb
push
lods
pusha
fld
mov
clc
in
adc
nop
adc
pop
sbb
mov
pop
jne
add
push
data16
jl
cmp
mov
movs
mov
loope
rol
xor
xor
mov
mov
in
mov
icebp
ret
jl
mov
stos
aas
ss
aas
sub
scas
pushf
jbe
shl
loope
lock
cwde
cmps
les
fidivr
mov
dec
out
imul
dec
or
movs
xchg
sub
(bad)
movs
aam
stos
sar
bound
push
(bad)
data16
push
mov
leave
data16
data16
cld
sbb
adc
lahf
fst
xchg
mov
test
(bad)
cmc
(bad)
fldcw
clc
mov
imul
fdivr
out
pop
(bad)
cs
retf
mov
mov
dec
and
and
sbb
pop
adc
fisttp
inc
jge
pop
sbb
push
imul
xchg
repnz
dec
add
mov
mov
loopne
scas
push
movs
pop
leave
xor
out
xor
nop
adc
push
fnstsw
sub
sahf
dec
or
or
hlt
pop
dec
daa
sbb
push
xchg
jg
fwait
hlt
pop
mov
(bad)
adc
mov
jge
orps
jb
or
mov
shl
pop
xchg
sub
stos
xchg
dec
sbb
fwait
dec
gs
sahf
push
pop
(bad)
dec
loopne
imul
aad
mov
out
(bad)
popa
mov
pop
popf
jnp
call
(bad)
inc
(bad)
xchg
out
lock
and
xchg
cmp
pop
xor
nop
clc
pop
jle
sar
leave
inc
jae
and
mov
in
sub
mul
sub
movs
ret
test
test
mov
out
pop
nop
fs
pop
and
ret
jl
aad
(bad)
jmp
scas
mov
pop
jae
jmp
(bad)
jp
mov
add
stos
jo
jmp
or
pusha
out
in
or
idiv
and
fs
fsub
jecxz
adc
mov
sbb
inc
xlat
jne
xor
outs
pop
lahf
mov
cmc
cli
xchg
(bad)
jecxz
rol
mov
mov
popa
fisubr
mov
xor
pop
stc
mov
call
adc
std
adc
cmp
jle
xchg
fcmovu
cdq
push
inc
in
icebp
sbb
hlt
xchg
aad
push
pop
jecxz
imul
in
fbld
sub
sub
jmp
jecxz
mov
push
mov
popa
test
sbb
jl
sub
ds
xor
or
push
lds
mov
xchg
xor
add
push
sbb
dec
mov
clc
(bad)
leave
sbb
lea
in
pop
test
push
push
and
mov
xor
in
push
xchg
xchg
fimul
push
pop
lods
jns
push
cli
js
leave
cmps
pop
jecxz
arpl
sbb
mov
in
fsubr
push
and
inc
jecxz
push
xchg
sub
sbb
mov
xchg
(bad)
out
push
mov
repz
in
dec
jl
sbb
adc
xchg
xchg
and
push
cmp
std
xchg
push
idiv
mov
pop
pusha
repz
mov
mov
xchg
shl
(bad)
int3
loop
pop
jne
mov
push
and
inc
fcom
dec
imul
or
mov
mov
inc
ret
pop
popf
out
adc
(bad)
shl
sub
js
fwait
mov
sbb
mov
fmul
sub
movs
(bad)
or
xchg
fild
cwde
sbb
cmp
out
div
mov
shl
fwait
leave
pop
and
cli
push
cmp
xchg
shr
test
push
and
daa
imul
mov
push
fcom
scas
push
into
dec
ror
mov
sub
xor
mov
push
iret
rcl
sti
and
xchg
mov
jne
mov
mov
and
push
pop
sub
test
xchg
pushf
inc
inc
fisttp
push
add
add
sti
sti
lods
fucom
in
js
cmp
imul
out
pop
cmps
jmp
hlt
cld
movs
sub
mov
ret
fild
scas
and
es
dec
aad
add
cmp
fmul
(bad)
scas
ror
add
jno
fcmovbe
xor
and
lahf
ret
call
sbb
pusha
in
mov
fisttp
adc
je
(bad)
or
in
call
pop
iret
call
enterw
cdq
adc
xor
push
inc
out
mov
clc
xchg
push
mov
aam
mov
mov
xchg
test
sbb
ds
mov
ss
mov
out
cwde
pop
out
xor
imul
outs
movs
and
mov
fwait
dec
and
xchg
(bad)
cwde
rol
loopne
adc
addr16
mov
jmp
push
jae
mov
cdq
sbb
pop
dec
sub
mov
in
and
(bad)
push
mov
or
sub
inc
call
ins
test
cmps
push
xor
fwait
mov
pop
cmps
rcl
adc
fld
mov
movs
pop
(bad)
call
ja
inc
ror
dec
call
sub
jne
pop
scas
sbb
or
cmps
sub
icebp
retf
inc
js
mov
xchg
lahf
test
int3
cmp
mov
pushf
movs
stos
mov
inc
xchg
mov
mov
stos
aas
fld
call
pop
cmp
inc
iret
push
(bad)
mov
xor
jmp
and
inc
inc
cwde
cmp
and
mov
movs
scas
jg
loope
sbb
daa
sub
jbe
fcomp
popf
sbb
or
sbb
xor
int
mov
dec
jb
shl
cld
dec
in
cmp
mov
mov
mov
add
sub
test
jp
test
ja
mov
sub
dec
or
cld
xchg
aaa
push
push
sub
xchg
adc
shl
lods
adc
xor
adc
ins
mov
iret
ss
loopne
pushf
xchg
ins
(bad)
and
inc
mov
loopne
in
movs
xor
call
xchg
ins
sti
dec
and
add
fnstsw
outs
mov
pop
std
mov
rcr
push
add
push
stos
cmc
xchg
fisubr
mov
ss
dec
data16
inc
pusha
repz
into
(bad)
fcmovnb
int
nop
pop
mov
(bad)
int3
aad
xchg
push
out
mov
xchg
xchg
iret
adc
pop
add
lea
add
loop
adc
and
cmps
sub
add
jne
popa
add
sbb
fiadd
or
icebp
xchg
jo
aas
ret
mov
or
movntq
out
dec
inc
mov
sub
or
adc
mov
sbb
xchg
lods
cdq
hlt
xchg
mov
movs
sbb
cwde
lods
sub
gs
popf
pusha
sub
sti
pop
and
fist
add
les
fimul
fisttp
sub
scas
mov
(bad)
or
int
jl
aam
inc
pop
mov
mov
inc
xor
push
lods
fsubr
arpl
repz
out
in
inc
mov
addr16
scas
mov
jnp
xor
fist
and
push
xchg
(bad)
xchg
fucomp
jae
adc
repnz
xlat
lds
sub
inc
cmp
mov
mov
push
les
lds
add
jae
movs
js
push
movs
mov
push
or
cmp
jmp
(bad)
jmp
jmp
mov
and
les
into
cs
lods
dec
jb
fdiv
pop
and
addr16
or
nop
push
mov
mov
mov
sahf
inc
int3
push
xchg
jg
dec
mov
test
or
jo
jb
rcl
out
adc
inc
lea
(bad)
movs
test
stc
(bad)
jnp
mov
enter
adc
lea
mov
fcomp
pop
pushf
pop
cmps
repnz
movs
sar
stos
or
jmp
into
fidiv
sub
mov
into
and
or
mov
mov
addr16
hlt
loopne
stc
xchg
and
stos
fisttp
jbe
out
sub
lods
mov
out
mov
pop
pop
xlat
push
in
sbb
xchg
pop
xchg
lock
data16
or
pushf
pop
icebp
test
mov
adc
push
aaa
mov
cmp
push
add
push
xchg
imul
push
ret
mov
pop
and
cmp
(bad)
cld
in
adc
fs
mov
jb
push
mov
test
sub
call
clc
jmp
adc
xchg
lahf
pop
sbb
ja
es
or
out
xlat
(bad)
shl
push
push
inc
enter
pop
fsubr
loop
ss
enter
lds
cmps
call
cmp
mov
jns
repnz
stos
std
cld
popa
jnp
mov
dec
pop
and
cmps
sbb
test
push
dec
mov
fdiv
icebp
les
push
aad
xchg
inc
pop
loope
jle
retf
mov
cmp
mov
das
pop
fcom
add
mov
hlt
pop
and
inc
sbb
ror
add
dec
aad
scas
xor
out
loope
push
test
les
mov
in
fsub
inc
sbb
movs
shl
dec
lea
xor
adc
xchg
mov
dec
xchg
cmp
jmp
push
mov
or
add
pushf
push
inc
xor
push
repz
cmp
xor
outs
idiv
jb
fs
xchg
push
lods
adc
pusha
adc
les
jle
retf
and
xchg
out
inc
sub
imul
ins
dec
xchg
fnstsw
ins
sbb
sbb
pop
mov
dec
in
push
xor
push
stos
push
sti
sub
in
jb
cwde
mov
pop
push
and
xor
push
or
and
pop
scas
adc
mov
xor
mov
mov
adc
cs
xor
dec
rol
dec
sbb
pop
sbb
mov
xor
test
aaa
sub
push
push
pop
sub
scas
adc
iret
push
sbb
inc
dec
(bad)
lea
push
cmp
out
or
push
inc
(bad)
sbb
mov
xor
xor
ret
fwait
jmp
dec
mov
add
xor
(bad)
push
and
retf
cmps
stos
push
add
cmp
dec
mov
pusha
xor
out
pop
mov
retf
fstp
sar
dec
mov
shl
cmp
cli
sbb
je
popf
(bad)
jecxz
iret
jne
adc
call
fisttp
sbb
ret
sbb
or
sbb
mov
xchg
mov
adc
mov
out
push
sbb
js
sub
stos
cwde
cld
rcl
push
mov
scas
sar
das
sub
data16
ds
imul
(bad)
loop
es
pushf
pop
ins
mov
dec
loope
cs
shl
imul
xchg
inc
dec
sub
add
push
or
pop
push
out
xor
xchg
adc
sbb
out
and
(bad)
push
pushf
adc
push
sbb
fidivr
push
(bad)
iret
adc
jg
push
and
and
sahf
push
je
add
aas
jmp
mov
add
cmp
(bad)
dec
mov
in
dec
ja
ja
pusha
dec
mov
and
sub
cs
and
ja
mov
jns
xor
mov
ja
test
or
mov
jmp
ror
add
imul
cmp
jle
aas
adc
inc
dec
test
push
(bad)
xchg
das
ins
jae
leave
or
loope
mov
outs
mov
xchg
lahf
sub
adc
cmp
jo
loope
inc
cmp
mov
mov
jne
sbb
mov
test
test
aam
xor
xchg
mov
xchg
(bad)
xor
sbb
dec
fstp
cmc
fadd
sub
cli
mov
mov
iret
repz
jae
mov
pop
adc
pushf
stc
popa
rol
adc
pop
mov
sbb
xor
push
imul
ds
stos
inc
sbb
mov
test
inc
daa
repnz
int3
xchg
es
sti
mov
or
push
xchg
adc
xor
pop
gs
retf
fcom
movs
icebp
cld
mov
xor
pop
gs
push
mov
popf
inc
mov
mov
repnz
mov
(bad)
daa
loopne
bound
jmp
sbb
je
dec
mov
shr
dec
mov
popf
fdiv
call
pop
in
mov
fs
add
mov
inc
aad
aas
les
ror
and
dec
sbb
lds
mov
je
inc
int
dec
adc
mov
jmp
jbe
cld
mov
cmp
jg
or
out
push
gs
pop
xor
iret
dec
xor
sub
test
repz
inc
pushf
test
push
sbb
cwde
mov
push
jbe
add
ret
jne
jecxz
lds
mov
stos
pop
xchg
mov
sub
pop
popf
loopne
leave
or
ins
stc
repnz
ret
mov
in
fs
into
(bad)
sub
push
and
adc
cmps
jno
jne
jmp
lds
daa
and
ror
in
xchg
sub
dec
and
lds
mov
or
push
dec
mov
mov
pop
pushf
in
push
xor
rcl
or
loop
jbe
nop
and
pop
inc
push
dec
dec
inc
xchg
push
xchg
neg
in
jo
jmp
pusha
adc
clc
sbb
sbb
stos
or
jp
jg
inc
sub
cmp
jmp
mov
lods
repz
loope
inc
in
xchg
jge
pushf
push
lods
and
push
mov
jg
scas
sbb
inc
movnti
pusha
cdq
stos
xchg
cs
or
sub
mov
movs
ret
in
ja
test
adc
imul
cmp
imul
jg
out
mov
push
ja
and
xor
dec
sti
add
idiv
dec
xchg
cmp
ret
add
out
sub
xchg
test
mov
jg
inc
mov
push
mov
stc
retf
je
popf
icebp
mov
sahf
pop
fwait
sbb
mov
test
xchg
neg
mov
push
dec
shl
jne
push
shl
addr16
div
mov
add
inc
push
test
dec
mov
das
leave
leave
jp
mov
xchg
enter
sub
xchg
add
aam
out
(bad)
retf
(bad)
sbb
dec
stc
cmp
jno
pop
pushf
xor
lea
xchg
mov
jno
inc
call
xchg
adc
ins
add
lahf
popf
cmp
in
mov
ret
fwait
ss
mov
sbb
inc
stos
ds
retf
sub
cli
xlat
sub
mov
cmps
test
xor
push
cmp
pop
and
les
jecxz
int
gs
or
ja
ss
ret
push
jns
or
in
xor
cmp
sbb
xchg
ja
xor
nop
popf
push
or
pusha
(bad)
jg
xor
pop
sbb
popf
fsubr
fdiv
and
sti
fwait
inc
push
dec
mov
mov
cmp
mov
rcl
jnp
sbb
push
jns
out
inc
inc
das
les
adc
jmp
and
into
xchg
sbb
out
xor
and
or
jb
pop
jl
adc
sti
mov
and
sub
in
inc
xchg
xchg
aam
fisubr
sti
lahf
inc
dec
mov
jbe
dec
inc
xlat
mov
fsubr
push
dec
pop
stos
xchg
fisubr
inc
or
loopne
inc
shl
sub
mov
ins
mov
and
cmp
out
mov
lods
ret
push
mov
push
(bad)
(bad)
cmp
leave
push
mov
mov
adc
repnz
stos
repnz
push
and
aam
call
jb
xor
sbb
mov
jns
add
call
cmp
fwait
mov
push
js
data16
mov
xlat
les
ds
inc
adc
push
out
ja
push
dec
mov
xchg
les
mov
push
pusha
sbb
and
or
jb
stos
mov
shl
adc
scas
test
loopne
or
outs
mov
pop
movs
push
push
mov
movs
sti
xchg
pop
popf
rcl
sub
mov
js
arpl
leave
mov
mov
xor
or
add
sub
mov
fldenv
imul
and
push
(bad)
inc
mov
loope
xchg
push
std
xchg
gs
jmp
xor
sbb
add
stos
pop
push
pop
pop
xor
xor
mov
sar
out
ret
push
push
add
adc
ds
jmp
movs
lock
aas
push
or
add
lods
out
cmp
cmp
pop
inc
retf
test
push
dec
rol
cmc
pop
es
lea
ds
sahf
sub
xchg
push
push
ds
lods
(bad)
daa
in
add
std
scas
add
nop
scas
xchg
cdq
data16
sbb
imul
jge
mov
aas
ret
mov
add
and
jle
pop
imul
fidivr
in
fwait
lods
inc
inc
dec
dec
add
addr16
movs
inc
int
loopne
xchg
xchg
pop
aaa
sub
ins
test
pop
jmp
ror
mov
pop
push
les
leave
xchg
mov
out
jp
aad
push
mov
inc
rcr
xchg
lahf
cmp
jecxz
jno
sub
push
out
pop
jecxz
je
je
cdq
inc
cmp
(bad)
xchg
int
stc
jle
mov
xchg
aad
loop
pop
dec
push
xchg
or
inc
inc
jg
(bad)
aam
inc
push
lods
xchg
push
(bad)
jmp
jbe
push
ret
and
imul
mov
movs
jmp
add
push
adc
ins
inc
inc
jp
lea
bswap
adc
xchg
sbb
adc
pushf
ds
mov
and
mov
jnp
xor
fild
pushf
mov
and
hlt
shl
rol
nop
jne
xchg
jb
je
popf
xor
push
mov
ds
inc
dec
pop
in
pop
xchg
push
xor
cs
cmp
std
dec
dec
pop
retf
call
imul
rcr
and
ins
clc
(bad)
mov
add
dec
ss
int3
or
push
addr16
popa
movs
mov
addr16
jmp
sub
pusha
dec
and
cmp
lds
adc
pop
aaa
cld
or
pop
dec
sub
test
std
or
jne
(bad)
sbb
retf
shl
push
loope
sbb
fwait
ret
ret
add
jo
inc
inc
mov
push
add
mov
xlat
retf
mov
mov
mov
mov
aam
outs
mov
rcr
jle
jecxz
ret
cmps
sbb
mov
add
jne
ins
loop
pushf
sbb
mov
mov
xlat
js
lahf
adc
icebp
and
and
mov
(bad)
out
in
cmp
std
mov
sahf
push
not
in
sbb
lahf
ret
(bad)
or
mov
leave
jle
mov
aaa
(bad)
adc
ror
js
jbe
daa
leave
push
dec
and
dec
push
sbb
sub
or
mov
lods
nop
pop
push
aaa
jp
and
sbb
mov
pushf
bnd
push
xchg
je
(bad)
enter
ja
push
xor
push
sbb
out
inc
or
arpl
push
pop
cmp
sahf
jo
sar
mov
cwde
inc
(bad)
cmp
dec
cwde
out
ficomp
xchg
cs
pop
mov
cdq
xor
sbb
pusha
inc
push
push
aad
fsubrp
ds
test
or
sar
xor
add
jb
cs
add
dec
xchg
fimul
lea
out
(bad)
xlat
adc
push
inc
cmps
cmps
push
push
enter
or
add
xchg
push
outs
loopne
and
inc
leave
adc
dec
adc
shr
lds
sbb
pop
fwait
sbb
int3
jo
sahf
mov
pop
mov
push
scas
jg
sbb
ds
mov
or
fdivrp
or
adc
cdq
daa
add
hlt
inc
mov
and
je
inc
popa
enter
mov
push
(bad)
in
ins
loope
popf
int3
push
dec
addr16
daa
push
in
jb
xor
shr
adc
xchg
jne
es
retf
cmps
sbb
int3
hlt
mov
hlt
(bad)
out
add
fdivp
xchg
and
loope
push
sbb
xchg
xchg
pop
and
test
outs
dec
jo
jbe
aam
pop
sub
leave
sub
mov
ret
add
std
imul
jns
push
dec
jle
sbb
ds
inc
sbb
mov
push
test
add
test
loop
or
adc
out
bound
rol
xchg
cwde
clc
xor
pop
xchg
jae
mov
xor
sub
aas
adc
pop
dec
fnsave
call
and
and
or
movs
mov
jmp
movs
adc
(bad)
hlt
mov
dec
ret
sbb
pusha
mov
or
jmp
ins
mov
imul
(bad)
loopne
push
mov
mov
xor
push
push
pushf
mov
cmps
inc
cmp
or
push
rcl
xor
xchg
dec
(bad)
popf
cdq
xchg
add
pop
(bad)
push
retf
mov
or
xchg
cwde
dec
iret
jno
cld
xchg
mov
xchg
in
mov
cs
loopne
fistp
add
push
sub
and
and
cdq
push
in
stc
and
iret
adc
(bad)
pusha
pop
mov
xor
lock
mov
jo
mov
adc
xchg
fld
inc
mov
call
jne
scas
out
fnstsw
and
mov
mov
or
add
outs
fadd
dec
and
cs
iret
(bad)
idiv
mov
inc
call
mov
push
in
add
nop
sbb
sar
ror
dec
aam
(bad)
adc
mov
mov
rol
mov
int3
es
imul
and
stc
enter
je
mov
jmp
fcmovu
push
xor
imul
mov
push
sbb
lea
mov
in
das
pop
or
in
outs
lahf
xchg
lea
sub
nop
ficomp
jg
mov
das
in
jmp
inc
call
iret
xchg
adc
sbb
jg
mov
inc
cmp
or
iret
cli
cmps
ins
push
jp
sub
or
mov
push
mov
inc
push
dec
adc
mov
and
jecxz
push
fldcw
loop
pop
xchg
lds
jbe
and
pop
hlt
mov
mov
mov
cld
popf
addr16
xchg
jnp
dec
rol
xchg
push
adc
std
ficom
mov
(bad)
jmp
out
xchg
jg
adc
jge
scas
or
lods
mov
push
lds
add
movs
mov
ror
mov
xchg
in
sbb
icebp
ins
cld
loop
std
les
lods
ss
cmc
mov
sub
in
test
addr16
xor
out
int
aaa
xchg
lds
jle
inc
add
mov
mov
retf
and
dec
call
in
repnz
pop
shl
lods
sub
cmc
mov
fidiv
addr16
jnp
push
ret
mov
jno
loope
adc
stc
mul
int
cmp
out
cmp
aam
mov
fldcw
jnp
cmps
add
mov
push
sbb
dec
sub
jb
js
repnz
push
lock
(bad)
ret
dec
xchg
dec
jmp
or
sbb
out
cs
icebp
iret
ins
push
jnp
in
pushf
or
inc
xchg
gs
ds
inc
jg
ror
movs
push
popa
scas
jb
mov
sub
push
jo
lods
shl
cmp
mov
adc
(bad)
ins
dec
cmp
lea
mov
xchg
aad
je
add
mov
sbb
stos
enter
inc
ror
cmps
dec
mov
retf
mov
popa
jl
mov
cld
xlat
adc
or
mov
mov
ret
xlat
repnz
push
pop
mov
leave
lock
push
mov
jns
adc
inc
ja
lahf
and
adc
ror
in
out
mov
jno
dec
and
aas
aaa
pop
mov
sti
xchg
pop
rcr
mov
repnz
sbb
sub
iret
in
fdivrp
sub
dec
mov
ins
stc
add
sbb
xchg
enter
jecxz
dec
pushf
xchg
dec
inc
mov
cmps
inc
xor
cdq
add
or
and
xchg
sub
sbb
daa
jb
push
mov
fiadd
sbb
(bad)
lods
in
inc
mov
icebp
cdq
cmp
rcl
call
retf
add
jge
add
add
or
jg
int3
jns
mov
loop
mov
pop
addr16
pop
sub
gs
pop
or
dec
adc
mov
inc
repz
xchg
fldcw
arpl
or
idiv
sbb
cmp
fldcw
dec
(bad)
loope
and
jecxz
sub
sub
mov
jp
and
pop
mov
dec
cwde
mov
stc
xor
fidiv
mov
lea
repnz
xor
mov
retf
lods
mov
inc
xchg
in
sti
jecxz
jmp
std
loop
pop
pop
aas
xor
jbe
mov
inc
dec
in
je
loop
scas
mov
(bad)
aas
pop
gs
sbb
mov
xor
leave
mov
jb
pop
mov
sub
add
mov
sbb
or
mov
jmp
inc
mov
aas
or
lea
jmp
jo
mov
cli
scas
sub
jb
or
xor
lock
retf
adc
test
mov
test
push
add
xchg
lahf
pop
in
arpl
cmc
add
cld
jecxz
xchg
pop
adc
loopne
movs
push
(bad)
jl
imul
int
mov
addr16
jnp
adc
push
test
div
pop
retf
test
xchg
push
add
icebp
push
adc
pushf
push
test
icebp
test
das
fadd
push
loopne
mov
stos
call
(bad)
cwde
xchg
dec
test
dec
and
inc
cmp
aas
std
sbb
js
pop
repz
push
xchg
ret
pop
jp
adc
ror
mov
mov
xchg
in
xchg
push
rcl
push
sti
xchg
outs
push
xor
xchg
in
mov
push
(bad)
cld
cmp
std
mov
mov
jno
bound
mov
xchg
lods
pop
cs
mov
ja
ins
shl
inc
ds
retf
scas
mov
sub
(bad)
into
push
mov
xor
and
mov
mov
ins
(bad)
mov
mov
stc
xlat
add
popa
lahf
pop
sub
xchg
add
push
push
cmp
xchg
mov
lea
jmp
cmc
shl
mov
(bad)
jnp
test
ins
pop
clc
psubusw
scas
je
push
mov
sbb
xchg
mov
add
ins
xchg
inc
adc
in
stos
mov
in
jmp
push
retf
aad
sbb
ficom
push
mov
jle
dec
test
inc
daa
inc
push
sub
or
xchg
clc
jns
in
ss
mov
iret
mov
mov
(bad)
cld
or
cli
push
xchg
out
pop
stc
jmp
mov
dec
or
fwait
pop
jmp
mov
ja
daa
ret
fdivr
fisub
mov
mov
sub
pop
jbe
(bad)
mov
xchg
jmp
cwde
(bad)
cmp
cmp
repz
xchg
adc
jae
push
pop
mov
stos
shl
xchg
cld
mov
retf
lds
ja
sub
out
loop
fwait
aaa
cmp
pop
hlt
push
das
pop
fs
sub
fadd
pop
push
mov
cmp
jmp
jne
xchg
clc
jmp
mov
into
cs
push
loope
pop
movs
test
xchg
cmps
mov
push
out
fbstp
mov
fwait
jns
push
push
push
push
test
sbb
push
or
sub
mov
outs
sbb
je
push
aam
cmp
and
fcomp
pop
pop
movs
fisubr
dec
scas
sbb
sub
jns
nop
push
jae
aaa
js
out
ja
fadd
fiadd
and
sbb
add
mov
sub
adc
bound
ret
push
xchg
inc
jae
pop
call
push
test
mov
jecxz
outs
dec
xchg
mov
jne
mov
push
idiv
js
jmp
leave
jmp
adc
pop
fwait
cmc
scas
mov
pop
sub
les
sbb
push
mov
xchg
inc
push
int3
xor
xor
inc
mov
imul
nop
sbb
loop
call
in
aam
adc
xor
out
fnstsw
out
in
aad
(bad)
rcl
dec
mov
(bad)
cld
dec
gs
retf
inc
sub
cmps
lahf
add
jmp
cmp
mov
adc
fbstp
dec
ret
leave
push
arpl
inc
mov
in
and
imul
xchg
push
aam
sbb
ss
popa
adc
and
icebp
bnd
dec
inc
mov
mov
jge
leave
and
mov
mov
pop
imul
inc
xchg
stos
fst
dec
(bad)
xchg
and
cmp
(bad)
gs
jge
(bad)
mov
mov
sub
adc
fcomp
fdiv
and
mov
dec
sub
pop
xchg
pop
xchg
stos
loop
or
aam
pop
cdq
pop
sub
jl
dec
outs
inc
sbb
and
jb
fistp
push
pop
pop
imul
or
xor
dec
sgdtd
test
and
dec
lods
imul
data16
out
dec
cdq
dec
inc
sub
cmp
ins
sub
cmp
push
iret
inc
adc
mov
push
(bad)
aaa
jno
mov
sahf
ja
fsubp
test
les
add
mov
inc
inc
pushf
jmp
cwde
test
add
pop
repnz
call
inc
mov
jmp
mov
inc
test
nop
sets
jnp
jge
and
and
adc
or
in
pop
mov
fbld
inc
popf
lods
fild
cwde
mov
jns
dec
clts
cli
pop
shl
push
push
call
mov
mov
test
xor
mov
ins
mov
ja
ins
and
fistp
imul
pop
rcr
ret
inc
popa
nop
(bad)
ja
pop
and
ins
and
and
icebp
pop
iret
addr16
mov
adc
add
pushf
xchg
or
nop
or
sbb
test
adc
jae
mov
jmp
call
sbb
cmp
lea
mov
es
cmp
adc
iret
xchg
or
div
mov
test
pop
loope
test
ins
sub
call
mov
shl
clc
mov
cmc
push
ret
(bad)
push
adc
inc
jo
xchg
add
sub
cmp
ins
call
add
ret
push
jle
or
push
mov
inc
stc
and
mov
sbb
imul
cmp
pop
pop
fwait
lock
iret
cwde
je
sar
sub
jg
cmps
fwait
adc
push
mov
loop
rol
xchg
fist
inc
xor
adc
ror
or
sub
xchg
neg
mov
pop
cmc
call
xor
and
pushf
(bad)
sbb
mov
mov
out
cmp
cmps
mov
sti
sub
call
hlt
test
pop
pop
int3
cmp
push
xchg
ss
(bad)
push
and
cmp
outs
jl
leave
mov
ror
inc
idiv
loope
adc
add
mov
mov
ret
xor
cmp
repnz
sub
cmp
arpl
fist
sti
mov
inc
sbb
lea
mov
mov
inc
sbb
cmps
jecxz
and
fldcw
sub
retf
sub
icebp
adc
pop
retfw
mov
jbe
and
outs
test
test
push
inc
ds
sub
ret
adc
xchg
and
sub
mov
inc
inc
test
dec
out
or
and
pop
movs
in
loope
add
sbb
fldcw
or
inc
ret
mov
fidivr
push
dec
(bad)
clc
shl
xchg
clc
push
inc
in
pop
xor
mov
mov
xchg
shl
std
cld
pushf
icebp
sbb
and
sub
pop
add
xchg
mov
pop
rcr
sbb
xor
jae
jb
add
ret
outs
push
pop
adc
mov
stc
bound
push
sub
cmp
shl
mov
ins
enter
pop
(bad)
jb
imul
and
int3
jbe
fld
adc
xchg
cmp
repz
outs
js
dec
push
pop
test
not
pop
pop
add
shr
movs
lea
out
loop
sub
loop
adc
sar
jle
adc
cmp
xor
addr16
xchg
cmp
shl
adc
jp
js
fnstcw
arpl
mov
xchg
in
push
(bad)
and
mov
ss
push
retf
fstp
stc
ins
inc
fld
gs
and
cmc
xchg
jp
daa
fmul
cmp
sar
or
minps
out
les
cs
ss
cmp
fcmovnu
out
sbb
adc
inc
cmp
cmps
sbb
add
scas
(bad)
mov
pushf
add
jno
sbb
into
cmps
or
push
mov
adc
adc
dec
inc
adc
xchg
adc
dec
scas
lods
jmp
into
add
mov
inc
sbb
aad
sbb
out
retf
call
aas
popa
(bad)
cmp
lock
xlat
xor
scas
outs
fistp
(bad)
dec
cmp
aad
jb
nop
fbstp
test
inc
(bad)
(bad)
fidivr
jecxz
dec
jp
fst
jg
retf
aas
lock
xchg
mov
pop
mov
movs
xor
mov
dec
push
adc
sub
fcmovne
(bad)
xchg
or
add
adc
(bad)
stos
fcmovu
aaa
push
cmps
imul
cmp
or
retf
loop
popf
and
inc
stos
in
pop
and
test
cmp
stos
ret
cvtps2pd
jo
jl
jmp
dec
dec
inc
fbstp
jne
adc
fild
push
mov
imul
or
ret
or
ret
jmp
cmp
mov
lock
cmp
cmps
scas
jbe
jg
pop
pop
aaa
mov
inc
inc
dec
sub
loopne
add
push
xor
call
into
out
jg
in
(bad)
cld
push
dec
mov
push
xchg
scas
sti
sbb
mov
pop
loop
clc
ds
lahf
xchg
push
dec
clc
push
push
mov
push
add
sub
fnstcw
sbb
mov
ds
ja
cli
xchg
sub
(bad)
stos
in
pop
jb
pop
jp
pop
and
mov
stos
mov
mov
mov
jnp
in
out
test
add
aaa
xor
aam
mov
retf
lahf
jg
lahf
lods
sub
aaa
addr16
(bad)
pusha
and
pop
or
or
and
mov
fdiv
stc
push
lods
dec
jp
mov
retf
sub
dec
sub
nop
retf
mov
mov
or
mov
jnp
add
lods
ficom
icebp
cmp
add
and
(bad)
mov
sbb
push
fisttp
push
popa
mov
push
int3
retf
jmp
mov
cld
dec
out
xor
push
mov
mov
pop
lods
mov
imul
std
pop
inc
repz
daa
jp
or
cld
je
cmp
xchg
repnz
sbb
movs
xchg
jo
mov
mov
aaa
mov
mov
or
jbe
popa
mov
test
dec
and
pop
adc
ins
sbb
xor
mov
mov
or
aaa
gs
lods
stos
xchg
ret
mov
lods
dec
out
pop
xchg
mov
mov
cmp
adc
mov
das
shr
ror
sbb
adc
sbb
jne
xchg
ins
xchg
push
cmp
addr16
loopne
movs
mov
(bad)
into
not
std
fld
push
push
iret
enter
imul
cdq
cmp
mov
sbb
leave
pop
mov
gs
add
pop
pusha
sbb
push
inc
xchg
hlt
out
sbb
movs
mov
retf
jecxz
pushf
inc
push
push
add
mov
ja
(bad)
cmps
or
ret
out
sub
ins
push
add
sub
fsubr
call
out
out
mov
lahf
mov
jge
mov
push
jecxz
mov
and
shld
imul
into
test
fild
ret
cmp
or
aad
cli
ret
fwait
in
dec
or
or
jmp
jno
pop
mov
and
mov
inc
dec
add
cmp
push
jle
lods
and
cmp
stc
repnz
aas
test
jno
(bad)
(bad)
jmp
jns
xchg
or
aaa
sbb
lea
mov
fistp
add
xor
or
and
adc
xchg
inc
cmp
int
ret
cs
cmp
ds
outs
inc
(bad)
sbb
repz
and
loopne
cmp
mov
cld
sbb
and
pop
(bad)
inc
sub
call
out
sar
(bad)
push
push
jmp
xor
push
jmp
jecxz
clc
dec
inc
stos
popf
sub
dec
ds
cmp
test
and
ror
ds
pop
mov
repz
push
pop
mov
or
push
loop
loop
mov
push
fisub
mov
jbe
inc
xor
jmp
add
cmp
inc
jo
xchg
js
cmp
repz
dec
rcl
mov
(bad)
xlat
pop
pop
and
inc
rcl
and
jnp
outs
mov
(bad)
mov
inc
inc
cld
call
lds
push
lods
xor
push
loopne
fs
lea
xchg
or
cmp
outs
shr
sbb
cld
pop
xor
repz
push
outs
int3
retf
add
jge
adc
jb
jmp
stos
cmps
cmp
(bad)
movs
push
test
outs
jmp
lods
xor
repz
and
pop
push
and
xchg
sbb
add
dec
xchg
mov
psllw
scas
sub
ja
loope
mov
xchg
xor
ficom
in
jno
test
int3
ret
inc
mov
pop
pop
inc
and
clc
clc
pop
pop
mov
xchg
ds
scas
int3
sub
jno
imul
cmps
sbb
lods
cmps
sar
mov
push
cwde
mov
adc
push
mov
mov
retf
jmp
jne
xor
xchg
and
xor
add
sub
lods
xor
test
out
or
xor
(bad)
push
fwait
mov
repz
jg
ss
jp
push
xor
in
sbb
adc
add
ins
imul
ret
dec
jmp
test
in
mov
dec
jo
clc
ja
arpl
lods
jl
repnz
pop
inc
ins
mov
stc
lods
xchg
movaps
fdiv
aaa
je
call
push
push
jmp
and
mov
add
mov
push
std
jb
ror
je
fimul
inc
out
mov
mov
loop
inc
sar
jns
push
push
xchg
pop
cmp
int
mov
in
sahf
fistp
inc
loopne
lods
lock
dec
shr
mov
push
add
mov
sub
jg
repz
xchg
jp
cmc
mov
enter
int3
jmp
and
ds
adc
scas
mov
adc
xor
into
aam
fimul
lea
movs
(bad)
xor
ret
aas
ret
popa
repnz
pop
mov
lods
clc
es
popf
loop
jg
push
xor
push
nop
cmp
jmp
das
push
pop
xchg
pop
or
sub
push
cmps
out
jmp
jb
das
dec
jne
adc
dec
scas
call
aas
add
(bad)
xchg
out
(bad)
and
inc
loop
or
lods
scas
dec
dec
(bad)
ja
daa
call
fs
and
mov
cmps
es
jo
icebp
mov
mov
call
test
int
and
(bad)
push
ja
xchg
cld
sub
call
popa
jecxz
lods
mov
outs
adc
inc
loop
jo
push
ret
and
xchg
into
mov
inc
fsqrt
cmc
dec
push
(bad)
ss
push
fsubr
xchg
adc
push
pop
fisttp
loop
(bad)
jle
jg
or
jge
leave
stos
cmp
jmp
push
scas
sti
mov
or
cli
call
shl
jecxz
(bad)
push
xchg
cld
adc
xor
xchg
scas
jae
rcl
(bad)
push
sbb
lods
xor
and
mov
out
and
inc
mov
xlat
pusha
cmp
mov
xor
out
inc
and
push
jns
jns
or
lods
mov
nop
cmps
mov
mov
cmps
test
sbb
repnz
mov
std
lods
mov
jns
mov
je
loop
aas
mov
push
xchg
ss
inc
lahf
mov
pusha
gs
sbb
cmp
leave
jbe
aas
mov
out
(bad)
push
pop
xor
inc
jmp
push
js
fiadd
add
out
loope
test
dec
sbb
jns
lods
xor
shl
xchg
dec
xchg
shr
icebp
cmovno
enter
sub
fdiv
inc
gs
daa
and
jno
in
push
sub
mov
push
in
pop
cmp
push
out
push
add
mov
pop
push
mov
inc
addr16
je
mov
cmc
clc
jae
mov
ret
and
xchg
push
fcmovnu
jle
pop
fcom
hlt
sub
dec
loope
(bad)
and
test
dec
sahf
cmp
retf
push
call
xchg
dec
sbb
sub
xchg
xchg
(bad)
mov
js
add
sub
shr
xchg
mov
push
lock
das
scas
pushf
(bad)
test
faddp
ret
lds
pop
js
lds
(bad)
jmp
sti
(bad)
ja
mov
lahf
xor
div
cmps
ret
fs
inc
cli
or
sahf
repz
dec
push
lods
aam
mov
test
ins
or
shr
add
stos
sbb
adc
sbb
pop
adc
and
out
loopne
sub
xor
sti
pusha
sar
repz
lahf
popf
push
sub
into
xor
mov
iret
push
ror
stos
loope
xchg
inc
mov
ret
cli
cmp
xchg
ja
scas
xor
fdivr
jle
ins
mov
sahf
inc
cmp
outs
push
xchg
outs
xchg
inc
xchg
arpl
xchg
inc
sbb
out
sbb
mov
fwait
inc
out
add
idiv
leave
lea
out
sbb
pop
popf
adc
fs
push
mov
enter
push
enter
dec
lahf
inc
lahf
push
adc
mov
inc
pop
or
cmp
push
mov
into
sbb
icebp
add
fiadd
sti
cmp
fwait
sub
dec
int
clc
cwde
lahf
dec
loopne
loopne
inc
add
pop
out
pop
(bad)
fimul
inc
gs
cmp
or
into
mov
mov
or
idiv
imul
mov
cmp
add
idiv
cmp
adc
ret
lods
test
mov
push
sub
mov
stos
adc
jmp
lds
addr16
or
mov
rol
(bad)
addr16
outs
xchg
push
test
jmp
push
pop
in
retf
sub
cmps
dec
(bad)
push
lahf
xlat
fcom
push
mov
test
repnz
mov
out
and
xchg
jg
stos
pop
add
or
xor
adc
lea
outs
dec
jb
mov
jge
xchg
mov
add
ret
mov
mov
cmp
pop
xor
xchg
push
or
les
and
add
sub
cdq
add
sub
add
cmc
fcmovnbe
inc
xor
jne
inc
xchg
xor
mov
rcl
ins
(bad)
ror
int3
int
call
mov
cmp
xchg
pop
inc
ret
and
push
inc
rcr
fbstp
mov
repz
push
cmps
mov
icebp
ss
in
cmp
frstor
fmul
push
jmp
sbb
(bad)
mul
clc
mov
jae
pop
out
mul
fsubr
popf
jns
push
pop
arpl
ror
das
and
fs
xlat
outs
pop
xchg
mov
cmp
mov
ja
repz
pop
mov
mov
mov
stos
lock
test
ds
sbb
dec
(bad)
jmp
pop
jmp
aam
out
in
mov
ret
jle
pop
jno
cwde
push
jnp
jmp
inc
xlat
pusha
cwde
idiv
inc
xor
push
fnstenv
add
or
clc
push
mov
(bad)
cmp
xchg
std
pop
cwde
and
jge
mov
(bad)
xor
(bad)
(bad)
jae
add
jnp
jmp
pushf
push
pop
cmp
dec
xchg
pop
inc
dec
stos
mov
and
ret
push
scas
dec
ds
adc
addr16
add
adc
out
retf
data16
push
(bad)
pop
mov
movs
push
fisubr
movs
sub
and
mov
cld
mov
fdiv
dec
lods
jp
add
jge
inc
dec
shl
(bad)
jg
pop
fadd
xor
jle
fstp
xor
cmps
scas
mov
jle
(bad)
cmps
fnstcw
cmp
fadd
sti
fsub
jnp
inc
outs
hlt
add
mov
nop
je
cs
retf
add
adc
pop
shl
dec
cmp
in
push
sub
jle
fucomi
mov
or
(bad)
cmc
sbb
push
mov
icebp
into
jbe
js
(bad)
dec
push
mov
xchg
(bad)
mov
outs
mov
out
sub
push
xchg
not
mov
cs
push
cli
jmp
out
outs
cli
mov
es
retf
ja
div
sub
or
dec
movs
push
sub
retf
sti
daa
or
into
or
lds
ins
jl
shl
push
repz
movs
aad
dec
fisttp
stc
pop
cmc
out
adc
ret
fwait
xor
shl
pop
jl
lods
ins
(bad)
imul
fiadd
ret
ss
pop
call
daa
inc
sbb
imul
xchg
std
std
shl
adc
or
movs
sub
sbb
xchg
push
push
stos
pop
or
cmc
test
pop
dec
and
push
cwde
and
and
push
pop
cmp
inc
ss
arpl
jmp
fs
add
cs
into
aaa
pop
add
outs
icebp
cmp
mov
pop
xchg
scas
and
jg
addr16
and
jne
jbe
aam
and
lods
enter
push
push
push
pop
push
and
push
iret
gs
dec
imul
aaa
jmp
stos
dec
icebp
jp
and
popf
stc
add
dec
mov
add
and
pushf
jae
dec
mov
jns
jmp
es
xchg
retf
lea
outs
mov
clc
ds
inc
psrlw
movs
enter
mov
stos
sbb
mov
fstp
mov
cmp
fisub
lods
pop
aas
mov
(bad)
rol
mov
into
repnz
repnz
mov
in
pop
into
xor
and
cmp
icebp
(bad)
and
or
push
mov
push
call
jmp
ja
dec
ret
and
pusha
dec
ret
wbinvd
out
aaa
or
les
sub
push
or
push
pop
mov
sbb
xchg
add
loope
pop
mov
mov
dec
ja
aas
adc
cmp
add
cmp
sbb
fst
dec
and
icebp
dec
inc
les
daa
(bad)
or
in
ss
lods
mov
jnp
dec
push
rcr
movs
xchg
aaa
jb
xchg
pop
adc
adc
adc
cli
nop
adc
(bad)
mov
cmp
(bad)
xor
sub
cmc
ja
or
mov
pop
rcl
in
std
inc
or
call
daa
xor
add
xchg
sar
inc
int3
mov
(bad)
leave
gs
mov
xchg
xchg
data16
sbb
xor
sbb
fadd
xor
sub
pop
jmp
scas
popf
inc
push
cmp
jmp
test
ss
push
push
loopne
xchg
adc
push
sti
sbb
test
xchg
out
sub
inc
sbb
loope
sub
es
lds
dec
push
dec
mov
xchg
call
dec
jmp
in
loope
push
nop
dec
retf
(bad)
pushf
fist
lock
cs
ins
shr
mov
or
jl
btr
aas
or
lods
dec
add
xor
and
(bad)
xor
ret
call
movs
mov
mov
leave
and
fdiv
dec
inc
pop
je
pop
imul
iret
icebp
mov
out
jmp
and
(bad)
fadd
inc
add
xor
jno
or
fsubr
mov
cmp
jmp
inc
js
jae
stos
bound
push
sar
jmp
sub
pop
mov
mov
or
dec
mov
and
fs
retf
call
and
sub
add
sbb
mov
dec
fs
lds
pop
add
xor
xor
mov
cmp
dec
mov
inc
adc
int3
add
aas
push
movs
mov
cmp
popf
dec
mov
inc
sbb
fidiv
mov
fadd
and
ja
xchg
test
punpckhwd
lock
mov
cmc
pop
push
(bad)
lods
or
push
lock
jo
addr16
pop
sti
xchg
mov
adc
xchg
fsub
add
push
rcr
add
retf
shr
ret
repz
mov
and
pop
push
cmps
xchg
or
mov
popa
xchg
mov
sbb
ins
nop
ficomp
inc
mov
mov
popf
iret
test
jbe
mov
aam
cmps
and
and
pop
inc
push
xchg
into
loop
ret
ins
lea
stos
rcl
push
inc
mov
sub
sbb
mov
push
jg
int3
push
cmp
mov
ja
mov
mov
and
cmp
gs
inc
(bad)
outs
xor
popw
inc
in
cmp
push
jle
push
in
xor
fdiv
hlt
aad
and
cwde
sub
jmp
adc
pop
mov
mov
retf
sub
stos
xchg
mov
scas
sti
cmc
jle
call
xchg
cmc
push
mov
fidivr
pop
inc
jecxz
or
cvtdq2ps
sbb
sub
add
mov
call
cmc
pop
adc
xor
popf
adc
sbb
sbb
outs
fs
retf
aas
inc
stos
(bad)
aaa
and
enter
xchg
sub
and
in
push
fdivr
add
lods
dec
aaa
enter
stos
mov
sbb
je
add
add
cli
test
jg
test
sub
cld
(bad)
fdivr
xchg
add
cli
xchg
mov
mov
hlt
add
ret
cmp
ss
popf
cdq
mov
mov
rol
mov
mov
das
mov
stos
jae
cmc
in
popa
repnz
aam
sbb
rcl
push
bound
out
outs
push
inc
or
fld
rcr
cs
outs
mov
jnp
imul
(bad)
iret
les
ds
ins
mov
shl
dec
sub
retf
and
adc
jge
sbb
mov
mov
dec
or
repz
adc
jmp
cmp
inc
loopne
int3
add
cs
or
pushf
lods
nop
jb
mov
cs
or
outs
jg
push
and
lea
inc
in
adc
dec
test
inc
xor
or
inc
xlat
shr
(bad)
call
adc
outs
mov
jae
add
xchg
adc
pushf
mov
cmp
dec
div
pop
or
out
call
stos
fcomip
adc
ja
hlt
shr
aad
push
push
div
retf
or
cld
lods
mov
ficomp
inc
or
jne
cmc
je
sbb
xor
inc
inc
push
mov
jecxz
into
sbb
mov
cmps
addr16
sub
outs
jne
loope
jmp
mov
aam
cs
push
fistp
je
movq
mov
mov
cmps
out
shl
je
cmp
stos
inc
lods
daa
in
push
cld
idiv
aas
mov
jb
mov
dec
dec
ja
sub
aaa
dec
jb
ror
js
mov
fs
sbb
adc
dec
and
push
test
sub
adc
ret
dec
mov
stos
push
or
aam
mov
mov
pushw
int
stc
jmp
(bad)
jo
adc
add
mov
sub
shr
add
xchg
stos
mov
jmp
movs
into
mov
mov
(bad)
push
call
(bad)
in
cwde
cmp
or
mov
and
aaa
dec
jns
sub
popa
mov
adc
mov
sbb
cmc
pop
int
xor
mov
fwait
adc
idiv
pop
rcr
cmp
fsubr
mov
push
iret
sahf
ror
inc
add
cmp
push
or
mov
lods
call
xchg
push
mov
pop
cmp
ja
fsubr
fmul
mov
push
imul
cmp
retf
inc
inc
fwait
out
xor
fcom
xchg
xchg
icebp
jmp
pop
rol
aad
daa
fdivr
ret
inc
ss
sub
jecxz
inc
add
ins
rcl
add
inc
(bad)
sbb
fisub
les
jmp
sbb
enter
aad
shl
xchg
pop
fisubr
push
sub
scas
fcomp
fidivr
xlat
inc
cdq
mov
adc
inc
cmc
pushf
stos
sub
mov
repz
dec
inc
nop
add
es
lock
pop
out
mov
push
loop
sbb
in
xor
push
out
cmc
cdq
dec
sbb
or
mov
test
(bad)
pushw
xchg
jns
cmp
scas
imul
push
jae
data16
push
test
stc
mov
addr16
rcl
or
daa
aad
mov
push
jge
stos
ss
retf
xor
repnz
ja
and
xor
add
fwait
add
cs
mov
pop
push
sbb
pop
pop
mov
jl
scas
fsub
mov
sbb
movs
jl
pop
dec
xchg
add
int
fimul
into
jecxz
inc
sub
or
cmps
mov
sbb
adc
adc
stos
lea
mov
rcl
mov
stos
test
sub
mov
enter
sahf
repnz
mov
imul
sbb
pop
xchg
xchg
into
mov
ror
mov
(bad)
jno
je
fnstenv
cld
scas
int
jnp
loopne
xor
mov
sbb
nop
mov
fcom
test
mov
cwde
mov
xchg
adc
rol
mov
xchg
xchg
dec
lods
cdq
mov
(bad)
lock
out
ins
or
pop
iret
(bad)
data16
sbb
inc
repz
inc
push
aad
pop
je
ficom
push
pop
dec
xchg
aad
dec
dec
daa
sti
mov
mov
mov
inc
loope
push
mov
dec
or
iret
aad
ficom
outs
(bad)
xchg
push
int3
outs
scas
pop
inc
into
std
inc
dec
popa
fidiv
or
add
call
and
or
add
(bad)
in
leave
dec
call
jbe
imul
pop
or
or
mov
xchg
loopne
imul
sub
mul
repnz
int3
lods
dec
xor
sub
or
es
retf
and
push
mov
out
dec
cli
xor
add
mov
je
je
jno
jmp
sub
jnp
daa
cmp
mov
adc
jmp
stos
mov
sbb
lock
push
out
jbe
stos
jo
push
sub
out
sbb
mov
xchg
das
stc
lods
test
jmp
aaa
stos
xchg
push
dec
mov
ins
jmp
stos
gs
or
cs
icebp
xchg
ret
jne
add
mov
pop
pop
xchg
push
outs
cmp
sub
xchg
adc
xchg
or
stos
cmc
ds
sahf
sub
dec
push
popa
jmp
cmp
or
push
and
cs
int3
adc
lods
jbe
scas
jle
aad
int
test
and
enter
and
sbb
(bad)
inc
stc
pslld
push
mov
push
mov
xchg
xchg
add
movs
push
adc
retf
icebp
aam
(bad)
adc
aad
mov
mov
mov
(bad)
mov
les
add
or
push
es
or
pop
lds
pop
aad
pop
aas
int3
add
inc
mov
adc
jns
adc
jo
fs
pushf
pop
(bad)
xchg
mov
ret
sbb
or
sub
or
xchg
sub
ins
xchg
adc
mov
mov
mov
leave
or
gs
inc
dec
push
xchg
jge
jmp
and
pop
jmp
repnz
mov
dec
inc
mov
xor
dec
lods
xor
test
sub
je
push
test
xchg
stos
(bad)
js
pop
and
fidivr
dec
cmp
mov
and
mov
jb
add
lods
xchg
ins
adc
mov
jl
out
hlt
out
lahf
xlat
jno
cmp
aad
mov
mov
fadd
jle
push
jbe
xor
jno
add
dec
ja
sbb
jmp
jmp
inc
adc
retf
das
(bad)
mov
dec
sbb
and
pop
mov
cdq
int
sar
sti
out
or
push
xchg
push
int
fcmove
mov
mov
data16
retf
inc
fbstp
mov
repz
fsubr
mov
adc
bound
and
ins
jp
ffree
call
addr16
xchg
mov
imul
xor
push
ins
ficom
mov
cmc
in
mov
mov
lods
dec
xchg
sub
xor
mov
cmps
adc
lahf
xor
scas
daa
xchg
call
mov
in
cmp
or
pop
cli
out
xlat
sbb
xchg
push
retf
sbb
cmps
mov
sub
repnz
nop
jl
dec
or
adc
cmps
(bad)
out
ficomp
pop
or
loop
lahf
inc
(bad)
sub
fs
imul
sub
sbb
mov
scas
popf
add
adc
fwait
(bad)
and
dec
mov
test
mov
daa
jno
jbe
lahf
into
add
cmc
ret
jnp
stc
mov
mov
sbb
addr16
pop
and
mov
rcr
xchg
inc
adc
neg
push
pop
xor
inc
outs
sti
inc
pushf
adc
xchg
sub
cs
and
xor
push
popa
mov
mov
(bad)
ror
lds
jno
rol
ins
cmp
retf
mov
js
sbb
push
lahf
imul
ret
dec
push
push
fstp
sub
pop
cmp
jnp
mov
rol
jg
or
or
mov
push
lea
and
jmp
xchg
xchg
fst
aad
cmps
ss
cmps
xor
jmp
jne
lods
adc
jne
mov
cld
sti
mov
and
dec
ins
fnstcw
adc
lea
or
pop
nop
jmp
cld
sbb
mov
xor
(bad)
sbb
lods
stos
test
fxch
fistp
std
mov
dec
aad
and
push
dec
xor
mov
fs
jno
or
sub
adc
dec
and
in
lods
lods
in
fimul
ds
cdq
ret
leave
imul
shl
add
hlt
aaa
je
es
add
in
(bad)
mov
lods
in
fsubr
xchg
ja
push
xor
and
add
stc
es
mov
lods
nop
pop
mov
loope
inc
loope
jmp
outs
ds
cdq
sbb
push
ret
iret
nop
(bad)
sub
ftst
mov
dec
fnstcw
shr
sbb
out
xchg
pop
and
xchg
pusha
in
sub
and
(bad)
or
add
push
out
loop
xor
stc
and
push
add
out
add
pushf
(bad)
adc
stos
mov
cmp
pop
push
fadd
mov
mov
dec
mov
scas
sbb
test
add
xor
sbb
faddp
sahf
lahf
sub
das
cs
cmp
mov
sbb
call
ror
push
inc
dec
mov
lds
pop
hlt
(bad)
retf
pop
lahf
aam
gs
lods
mov
pop
pusha
je
push
mov
and
es
sti
sahf
push
inc
fcmovu
push
leave
inc
stos
inc
hlt
ret
jbe
es
repnz
and
add
xchg
imul
dec
xor
bound
shr
cmps
and
pop
mov
scas
sbb
jbe
hlt
and
xchg
sar
adc
mov
(bad)
stc
xchg
fiadd
fs
pop
inc
mov
sbb
leave
je
inc
ror
mov
fiadd
(bad)
call
adc
imul
sub
mov
inc
(bad)
test
mov
aam
jbe
xor
loope
icebp
retf
xchg
mov
fbstp
frstor
pop
dec
fcomp
retf
push
or
je
jnp
das
aam
cld
test
(bad)
adc
leave
xchg
xor
test
fnsave
dec
addr16
out
and
loope
sub
rcl
cld
pop
les
into
stc
cmps
and
stc
jmp
add
xchg
mov
adc
test
mov
nop
mov
jg
mov
bound
jg
rcl
imul
sub
adc
mov
popf
ret
xor
push
push
mov
xlat
mov
fldenv
scas
xchg
fiadd
loop
xchg
pop
dec
cwde
out
adc
inc
dec
movs
jbe
mov
adc
push
sub
xchg
jne
add
test
xchg
inc
adc
les
lea
enter
js
rcl
(bad)
cmps
hlt
popf
push
(bad)
mov
leave
pop
push
mov
cwde
cmp
scas
neg
sbb
sub
ficomp
ss
imul
sub
jp
sbb
jno
in
mov
jne
jge
lock
outs
int
jae
daa
clc
sub
and
jnp
mov
pushf
lock
es
fdivr
sub
adc
jno
xchg
add
push
inc
push
push
enter
xor
inc
mov
popa
sub
push
cmps
lods
loop
jl
das
ror
mov
dec
xor
and
cmp
cmp
add
dec
leave
xchg
dec
cmp
add
adc
jns
cli
shl
mov
rcl
adc
ficom
loopne
adc
sbb
push
stos
mov
shl
mov
ins
mov
push
jmp
push
loopne
sub
add
aad
xchg
movs
(bad)
push
in
adc
out
int3
scas
mov
xchg
mov
jb
mov
(bad)
xchg
or
sahf
add
mov
out
cmp
push
mov
data16
push
jmp
sar
ret
rcr
shl
in
dec
push
hlt
test
dec
std
out
push
cmp
xchg
mov
cmp
fwait
gs
mov
cld
push
jecxz
add
xchg
not
mov
cdq
jle
push
js
adc
sub
scas
pop
dec
inc
adc
(bad)
inc
push
or
jnp
adc
aas
fcomp
(bad)
or
add
push
and
push
sub
fcom
stos
lahf
sbb
dec
data16
jmp
js
jne
xor
adc
sub
and
jl
add
or
je
fwait
and
stc
out
inc
faddp
fwait
pop
outs
lock
ins
jno
mov
mov
push
lahf
imul
inc
pop
push
mov
or
xor
dec
ret
pop
test
sub
test
xchg
adc
fldenv
stos
dec
leave
jp
mov
(bad)
push
nop
jp
mov
lods
fcomp
or
jmp
fistp
xchg
pop
jmp
bound
mov
test
in
adc
shr
cmp
je
test
stos
push
mov
push
jle
rcr
mov
and
(bad)
xor
dec
xor
dec
call
hlt
inc
add
cmp
adc
pop
cs
inc
lock
pusha
iret
and
add
and
push
cmp
mov
scas
sub
ss
(bad)
cmp
jns
jo
ja
(bad)
lahf
retf
inc
xor
cs
popf
mov
mov
into
sbb
dec
je
stos
pop
std
neg
add
daa
loopne
dec
test
scas
mov
pop
xor
out
mov
push
or
repnz
sbb
sbb
sbb
push
lahf
mov
(bad)
js
add
outs
gs
cmp
push
inc
cmp
rcl
(bad)
xor
packuswb
mov
and
es
mov
adc
into
cdq
pushf
in
out
jg
adc
sbb
mov
mov
xchg
mov
je
jl
fsqrt
mov
add
mov
(bad)
outs
rcr
mov
cmp
in
xlat
cmp
mov
sbb
adc
in
pop
jnp
pop
je
in
fisub
popf
and
scas
xchg
cmp
push
or
dec
dec
aas
xor
sub
aaa
mov
dec
xchg
ret
pop
mov
push
mov
addr16
stos
or
or
or
cwde
add
jg
push
mov
cmp
in
(bad)
and
pushf
push
fbld
lds
cmps
jge
and
mov
jecxz
cli
rol
iret
and
mov
jo
enter
sbb
inc
icebp
movs
sbb
stos
add
cld
jne
dec
mov
xor
movs
push
xchg
jg
mov
push
neg
movs
ficomp
cmp
mov
hlt
test
arpl
jmp
xor
repnz
cmp
cdq
in
out
cld
jecxz
ja
iret
mov
lock
ret
scas
ret
ss
jno
sub
xor
push
mov
sbb
jmp
imul
setle
jns
add
or
xchg
cmp
jne
and
add
icebp
sbb
push
cmps
icebp
lock
jb
mov
imul
test
icebp
or
out
pop
jno
adc
push
sub
popa
pop
aaa
dec
jl
retf
ret
icebp
sub
sub
rcl
jae
cs
loop
adc
je
mov
add
sbb
inc
and
in
cdq
and
push
sti
dec
outs
push
or
call
xor
add
add
mov
ds
xlat
in
das
and
jbe
jnp
mov
jb
push
sub
mov
xchg
repz
sub
inc
mov
test
cmps
rol
cmp
call
sbb
cdq
call
ficomp
arpl
sbb
scas
loope
mov
mov
icebp
cdq
movs
jbe
call
pop
ds
jmp
outs
jno
shr
stc
movs
je
rol
sub
rcl
inc
mov
aam
jl
lock
enter
stc
loope
xchg
pop
pop
lods
xlat
mov
mov
and
add
sub
icebp
stos
sbb
sub
pop
sbb
ins
xlat
pextrw
and
or
sbb
repz
dec
lods
aaa
rol
push
adc
add
jb
push
in
lea
dec
aas
mov
inc
mov
(bad)
mov
jmp
dec
ret
nop
sbb
jmp
pop
imul
out
sub
and
stos
and
adc
jmp
test
xchg
loopne
icebp
add
rcr
pop
je
jae
mov
ins
mov
adc
or
add
and
fnstsw
(bad)
mov
in
lods
ret
sbb
mov
cwde
push
fistp
mov
int
imul
or
sbb
fstp
add
icebp
dec
pop
inc
cmp
or
hlt
xor
mov
or
pop
jmp
dec
push
or
or
aam
cmps
repnz
ret
sbb
push
sbb
sbb
popa
mov
lahf
mov
pop
jmp
sbb
xchg
add
xchg
(bad)
imul
das
in
jg
adc
xor
mov
stc
popa
popa
push
gs
and
imul
retf
inc
mov
je
ret
je
fldcw
cmp
dec
aad
or
xchg
pmullw
add
enter
push
inc
pop
and
in
outs
(bad)
(bad)
xchg
icebp
sbb
xor
add
cwde
pop
loop
or
addr16
mov
jmp
sub
gs
pop
push
mov
inc
std
movs
cmp
cli
int
mov
sbb
mov
iret
es
dec
pand
inc
fcomp
pop
push
movs
ins
pop
mov
inc
push
and
shr
and
or
mov
out
add
mov
xlat
mov
fmul
dec
hlt
retf
add
mov
ins
(bad)
mov
cmp
stos
adc
inc
ud1
dec
pop
or
scas
(bad)
nop
int
test
in
test
mov
mov
(bad)
repnz
jge
sti
in
adc
mov
in
mov
dec
test
rol
jecxz
xor
into
hlt
sub
lahf
fld
das
out
adc
repnz
cmp
and
ds
pop
push
add
xor
cdq
jl
loope
jl
sub
ins
lock
sub
cmp
retf
sub
inc
out
fistp
ins
sbb
pmaddwd
arpl
adc
cmp
repz
jmp
dec
out
jo
xlat
pushf
cmp
scas
(bad)
retf
test
pop
aaa
and
or
dec
cmp
push
aas
ds
add
retf
bound
les
mov
push
mov
mov
mov
pop
jmp
movs
push
adc
arpl
out
outs
addr16
add
aaa
add
mov
jp
or
fdecstp
sbb
and
arpl
aas
lahf
mov
daa
xor
pop
dec
add
mov
outs
and
int3
mov
add
sub
cmp
nop
retf
lods
jmp
lds
push
adc
(bad)
fdivr
mov
pop
jno
lods
mov
jmp
dec
add
sub
test
xchg
sub
inc
in
stc
lods
inc
mov
retf
xchg
(bad)
pop
mov
and
sbb
pop
jge
adc
call
inc
loopne
xchg
xchg
mov
stc
inc
stos
add
sti
mov
test
xchg
test
(bad)
fwait
test
mov
fs
jp
mov
push
sub
or
movs
shl
add
push
(bad)
jo
out
out
(bad)
fwait
test
or
inc
push
xor
inc
xlat
out
push
ret
cmp
push
pop
fiadd
lods
rol
mov
pop
or
bound
(bad)
dec
sbb
mov
inc
call
push
jno
xor
bound
je
push
fiadd
scas
je
cmc
adc
sahf
daa
jmp
fld
fnsave
cmp
std
and
jge
and
retf
mov
ins
jo
repnz
std
(bad)
fisub
jmp
add
jne
cmp
xlat
add
out
cwde
inc
lock
in
jnp
mov
mov
loope
and
push
loopne
jge
and
fld
loopne
cmp
add
lds
adc
data16
xchg
cmp
jg
jmp
inc
push
movs
jge
in
mov
dec
js
add
push
sti
in
adc
bound
mov
inc
fisub
or
lahf
ror
cmp
sbb
jge
shr
adc
ins
call
push
sub
pop
(bad)
pop
sbb
xlat
jle
sub
(bad)
xbegin
push
and
xlat
call
inc
rol
mov
push
jecxz
xchg
es
popa
xchg
mov
ss
retf
sar
mov
or
sub
push
aaa
lds
or
xor
xor
lea
and
jne
mov
inc
adc
adc
aad
and
idiv
jmp
out
inc
stos
adc
pusha
mov
inc
test
fwait
sbb
(bad)
rol
int3
mov
jae
xchg
jecxz
adc
mov
mov
xchg
add
dec
(bad)
loope
aas
ss
pop
and
and
imul
inc
fstp
aaa
mov
sahf
nop
and
(bad)
jae
mov
movs
and
push
cmp
inc
jge
rcl
and
push
cmovnp
adc
nop
cli
and
cdq
pop
inc
jmp
sub
mov
mov
dec
add
test
cli
shl
add
xchg
xor
leave
sbb
mov
jmp
fld
dec
out
push
shl
loop
and
push
xor
sub
test
imul
aad
push
shr
mov
push
sub
pop
and
dec
loop
fdiv
or
dec
dec
xchg
xchg
dec
mov
rcr
jb
sub
cmc
push
mov
loopne
fdiv
cli
jno
ret
mov
scas
ror
dec
pop
jmp
call
fs
mov
sti
les
mov
stos
sbb
adc
(bad)
or
adc
xchg
and
mov
xchg
inc
sti
jns
push
xor
gs
out
and
pop
pop
push
int
cdq
(bad)
adc
fild
call
retf
xchg
push
sub
push
ds
adc
mov
pushf
(bad)
outs
idiv
(bad)
push
pushf
xchg
pop
jmp
jmp
mov
mov
jp
mov
jmp
add
shr
test
adc
push
pop
push
stos
mov
and
jns
test
in
outs
xor
fldcw
int3
int
add
loopne
cmc
dec
sahf
inc
out
dec
mov
inc
push
sar
out
adc
or
nop
and
mov
mov
aam
push
enter
test
add
popf
xchg
enter
popa
jecxz
cmps
xor
xor
lods
mov
movs
es
test
jb
dec
jg
xlat
pop
sbb
mov
stos
scas
adc
test
pop
je
not
pop
jo
in
pop
daa
cs
add
xchg
pop
aam
ret
bound
out
cmc
dec
repnz
jecxz
mov
jle
jnp
sub
xor
pop
shl
sbb
mov
sub
dec
push
xor
clc
lea
mov
adc
xchg
dec
dec
jnp
mov
inc
xchg
in
(bad)
cmp
iret
popf
int
pop
jnp
dec
movs
push
push
or
push
sub
and
ret
jno
inc
adc
pop
pop
xchg
and
es
arpl
add
icebp
dec
outs
and
pop
leave
jge
dec
push
icebp
push
pop
and
das
ss
jb
mov
adc
ins
jno
mov
cmc
jge
mov
pop
pop
add
outs
sub
jb
mov
xor
pop
ins
lahf
mov
pop
fxtract
inc
and
in
sar
arpl
mov
aad
inc
test
jne
inc
rcl
mov
jno
movs
shl
sub
pop
pop
rcr
(bad)
in
clc
cmp
inc
and
jmp
je
adc
fucomi
ss
leave
scas
xor
sub
scas
xor
loope
xor
mov
or
retf
loopne
popa
clc
push
fisub
or
jno
cmp
sub
ror
mov
shr
push
xor
shr
scas
pop
xchg
adc
jnp
fimul
scas
push
movs
xchg
stos
sub
or
and
out
push
and
xchg
imul
(bad)
sahf
push
sahf
call
mov
pop
xlat
inc
fst
mov
scas
test
loopne
pop
dec
pusha
mov
gs
and
call
fidiv
jp
jbe
loopne
and
add
addr16
inc
icebp
jns
arpl
retf
ret
in
jle
out
xchg
cmp
push
cmp
mov
call
call
imul
mov
movs
jmp
inc
fwait
jae
ins
pop
jmp
leave
mov
in
lods
pop
inc
out
inc
pop
loope
lock
xor
cmp
ins
push
sub
inc
out
inc
out
mov
in
push
xor
lea
xor
xor
sbb
addr16
cmps
popa
xchg
cmp
push
inc
dec
stos
in
xlat
jo
jb
adc
stos
or
mov
imul
push
add
push
jl
mov
inc
stos
mov
cmp
aam
pop
push
jp
cs
xor
xor
outs
push
dec
xchg
mov
lock
dec
cmp
movs
ror
pop
lea
pop
mov
out
mov
popf
addr16
ins
loope
ficom
popf
pop
push
xchg
(bad)
arpl
adc
(bad)
sub
jmp
ficomp
aam
test
loopne
xor
into
loop
int
(bad)
rcl
xchg
ds
jmp
pop
mov
xchg
add
cmp
(bad)
pop
adc
inc
popa
enter
mov
shl
sub
retf
leave
cli
mov
or
mov
pushf
mov
and
dec
add
sti
call
dec
cwde
aam
das
xor
xlat
jl
out
test
xor
mov
ds
jnp
xchg
lahf
fucomp
push
xrelease
adc
movs
ret
fstp
sbb
stos
jl
and
jb
aas
xor
lea
or
aaa
dec
and
jno
mov
or
xor
push
lea
cdq
push
mov
mov
add
adc
es
dec
fld
inc
xlat
test
lahf
shl
lea
inc
loopne
mov
xrelease
fs
fincstp
popaw
cmp
sbb
dec
sub
sbb
push
sbb
and
aaa
mov
loope
xchg
pop
outs
lahf
scas
push
lods
ins
or
hlt
cmp
fistp
cmc
jb
ror
mov
ds
pop
mov
inc
xor
xchg
adc
dec
loopne
loop
mov
mov
sub
nop
sbb
icebp
xlat
lods
test
out
sub
jb
mov
idiv
addr16
cmp
xchg
movs
loopne
aaa
sbb
call
xor
mov
stos
add
push
leave
jmp
retf
adc
dec
mov
cld
inc
test
xchg
repz
or
jnp
push
pushf
cmp
repnz
jns
or
stos
cld
addr16
jbe
jl
retf
(bad)
movs
stc
sub
in
mov
sbb
or
or
sbb
arpl
pop
mov
mov
es
push
sbb
mov
fsubr
js
shr
cwde
aad
dec
popf
pop
popa
fadd
gs
outs
sbb
mov
aam
imul
pavgb
(bad)
jp
mov
xor
sbb
jl
sub
jg
jns
in
nop
(bad)
jb
sbb
dec
or
aad
add
sub
xchg
fist
fcomp
jmp
stc
call
inc
nop
and
jmp
mov
or
aas
int3
jb
push
leave
pop
sub
repnz
fs
adc
ins
dec
mov
jle
xlat
imul
fcomp
mov
and
iret
mov
cwde
cmps
dec
outs
loop
pop
daa
jno
aad
xor
int
or
push
fld
cmp
xor
jo
xor
push
pusha
stos
sub
(bad)
cmp
cmps
inc
je
push
repnz
cld
sub
sub
shl
aas
leave
loopne
jge
jno
icebp
mov
rdpmc
jo
or
cmp
ins
inc
or
jg
out
arpl
pushf
shl
icebp
xor
pop
sub
push
cwde
push
cmps
add
adc
mov
sbb
popf
xor
mov
xchg
jbe
sub
and
rcl
push
cmps
fidivr
dec
xor
rcr
push
mov
(bad)
and
jae
jnp
out
jae
mov
(bad)
(bad)
sub
pop
test
pop
sub
add
out
cmp
lea
ins
int3
xchg
push
and
pop
stos
push
stos
test
pusha
sahf
jge
dec
js
(bad)
adc
mov
sub
fbstp
cmps
sub
jge
push
sbb
mov
push
test
out
jno
dec
ret
lods
xchg
sahf
mov
sbb
adc
bound
push
out
stc
fbstp
dec
mov
f2xm1
movs
out
cmps
pusha
jne
das
pushf
mov
add
lahf
lods
mov
push
scas
mov
cdq
jmp
mov
aad
fmul
int
enter
xchg
outs
mov
and
adc
or
js
jb
cmps
sub
in
popf
mov
enter
sbb
ins
or
out
add
std
or
push
(bad)
jbe
iret
xchg
outs
inc
fdivp
push
jle
cmp
pop
jnp
xchg
xor
retf
rcr
and
retf
shr
ret
dec
jnp
cld
cmp
or
popf
dec
dec
mov
repz
gs
or
push
cmps
dec
pushf
inc
lea
mov
shl
lods
out
sub
mov
pop
in
xchg
aaa
mov
jmp
xchg
imul
mov
lock
or
push
xlat
test
movs
test
jmp
fdivr
sbb
and
jmp
xchg
xacquire
mov
ds
and
pop
(bad)
fisttp
cmp
les
mov
xchg
out
int3
inc
test
adc
sbb
cli
sbb
int3
pop
(bad)
or
pop
add
xchg
int
fucomi
add
(bad)
aaa
daa
xchg
(bad)
repnz
xor
push
fsub
jle
in
scas
jnp
das
push
and
hlt
sti
shr
xlat
dec
fwait
stos
adc
call
fwait
loop
cdq
adc
push
push
loopne
mov
xor
or
mov
cmp
push
adc
ins
add
xchg
and
bound
inc
xchg
fwait
aas
pushf
in
mov
or
jl
ja
stc
jno
or
xchg
or
jae
popa
push
pop
pop
ja
adc
and
xchg
sbb
iret
int3
dec
sub
jo
es
inc
nop
cld
out
mov
push
shr
in
push
and
les
enter
ja
and
ficomp
in
cdq
push
(bad)
or
dec
add
or
dec
mov
arpl
fs
jle
loopne
pop
lock
test
sbb
mov
mov
jns
inc
stos
icebp
ret
test
int3
jg
(bad)
xor
xchg
xor
xchg
mov
mov
mov
rcr
cmps
pop
mov
cmp
sbb
pushf
ss
enter
lods
mov
(bad)
jne
test
pop
and
imul
jle
or
jmp
dec
repnz
pop
ret
int
test
jbe
add
push
cli
loop
mov
push
jle
cmp
push
jb
mov
das
or
pop
sbb
and
cmp
leave
push
sbb
(bad)
cmc
inc
out
popa
das
ret
inc
aad
ss
push
mov
dec
fmul
pop
adc
xchg
test
ss
sbb
aaa
clc
or
mov
scas
loopne
push
imul
pushf
adc
sub
sbb
xor
repnz
aas
dec
sar
mov
shl
stos
lods
ret
pop
dec
rcl
ror
rcr
sub
jne
xor
mov
jno
sar
int
stos
call
imul
push
(bad)
call
sbb
or
jl
cld
outs
fucomi
out
je
or
xor
xor
dec
das
jnp
test
sub
or
popf
and
adc
push
mov
mov
pop
ret
and
stos
add
ss
scas
mov
jne
push
ja
not
not
stos
mov
adc
sti
jne
neg
lds
js
cdq
mov
xchg
mov
pop
nop
loope
xchg
push
cli
loop
ss
iret
mov
jno
adc
shr
jp
test
adc
jmp
call
test
sahf
int
sbb
inc
sbb
and
fmulp
sbb
and
lds
shl
and
mov
jne
lods
or
add
jecxz
and
mov
out
gs
jecxz
(bad)
mov
adc
(bad)
jbe
pusha
xchg
adc
not
mov
imul
xchg
sub
shl
icebp
mov
ss
sub
sahf
outs
call
cmps
jb
push
and
mov
fwait
or
mov
adc
sbb
add
lahf
pushf
xor
scas
ret
mov
inc
adc
jmp
or
xchg
jecxz
mov
test
push
jb
es
add
pop
jg
das
jae
push
pop
and
imul
push
inc
cld
push
pop
in
cmp
lahf
movs
nop
mov
ds
xchg
fbld
and
and
pop
pusha
adc
aas
neg
pcmpeqd
or
push
int
or
int
cmp
int3
(bad)
jle
(bad)
je
adc
stc
aaa
mov
sbb
add
fwait
push
hlt
mov
mov
ds
scas
inc
push
xor
mov
push
addr16
and
mov
jecxz
hlt
dec
lods
in
cld
xor
(bad)
out
push
push
dec
shr
fnstsw
mov
dec
sub
cli
nop
(bad)
neg
mov
outs
add
xchg
movs
mov
mov
(bad)
cli
test
loope
or
stc
xlat
movs
ss
das
repz
sub
add
dec
out
cmp
nop
inc
mov
out
add
mov
adc
neg
push
jle
outs
retf
jb
and
pushf
cld
ror
leave
sub
inc
mov
mov
jbe
push
dec
into
cli
push
adc
mov
xchg
outs
adc
in
sbb
sub
cmp
daa
adc
sti
cmp
jnp
xchg
mov
mov
stos
sbb
es
das
(bad)
inc
retf
mov
jecxz
xchg
fcmovnbe
int
sbb
adc
xor
dec
pusha
jmp
push
push
call
jg
cmp
push
(bad)
pop
retf
xchg
add
add
sbb
outs
test
xchg
lods
out
cld
ficom
inc
popa
cmp
lahf
inc
sub
mov
pop
aad
mov
inc
inc
ret
pop
jns
or
cmc
ja
mov
fwait
bound
xor
inc
jnp
or
push
je
mov
call
adc
cmps
imul
sub
movs
xlat
loope
sti
dec
jecxz
xchg
push
lahf
enter
aas
out
ss
adc
fdivr
shl
aad
in
lods
cmp
outs
nop
adc
cmps
movs
div
adc
mov
xor
int
or
leave
xchg
in
jl
xchg
sub
lock
(bad)
cmc
out
push
xchg
out
mov
xchg
cld
repz
add
mov
sub
pop
mov
and
pop
inc
arpl
push
dec
jp
pop
stos
push
jns
pop
inc
mov
aad
dec
je
std
push
or
push
cmps
gs
ret
sub
and
mov
push
clc
push
shl
stc
lods
loop
aaa
push
sbb
lods
cmp
bound
mov
xor
adc
or
daa
out
cli
xor
int3
jecxz
in
mov
inc
pop
or
ins
outs
cmp
and
mov
aad
test
stos
sbb
aad
es
xchg
xchg
hlt
stos
sti
jp
repz
xlat
xchg
fld
pop
add
retf
sbb
fsubp
sub
pop
dec
movs
add
jnp
mov
out
cmp
push
mov
inc
sub
cmp
lods
add
ja
lods
call
mov
jbe
sub
xchg
adc
sbb
pop
jne
ret
leave
sar
cmp
xchg
rcpps
push
add
retf
outs
mov
mov
adc
jg
out
pop
mov
popf
adc
pop
push
loopne
test
test
lea
fadd
cwde
sbb
fld
stc
aaa
cmps
es
(bad)
or
pushf
ror
pop
xchg
pop
mov
movs
mov
pop
fadd
ss
cmp
pop
xor
add
fmulp
jb
mov
inc
int
inc
daa
add
and
jecxz
sbb
clc
cmp
mov
rcl
(bad)
lahf
fcomp
rcr
fist
push
mov
push
fs
adc
jp
sbb
pmaddwd
cdq
or
sbb
xor
rol
push
xchg
lahf
jns
sub
in
stos
ins
ret
xchg
push
or
sub
dec
sub
shr
mov
inc
call
dec
cs
sub
mov
adc
dec
jno
pop
adc
out
test
adc
jmp
pop
mov
sub
psrad
mov
ds
pop
xlat
js
pusha
hlt
fdiv
mov
or
pop
shl
out
jg
into
add
mov
cwd
add
push
lock
xor
sbb
dec
call
ds
dec
mov
sub
mov
arpl
or
lock
jge
cld
mov
mov
xchg
xor
repnz
lods
fwait
cmp
aas
bound
ret
test
inc
(bad)
jg
xchg
(bad)
int3
inc
enter
in
mov
lods
fld
dec
neg
jmp
jnp
scas
loope
scas
mul
mov
push
and
cmc
cdq
lahf
retf
imul
fwait
out
adc
pop
das
repz
push
ret
push
(bad)
fst
xchg
ret
lock
stos
add
xchg
sar
imul
out
imul
nop
sbb
in
or
stos
push
or
fild
stos
loop
xor
fist
sti
shl
xor
or
dec
sti
sbb
push
gs
retf
add
and
inc
xchg
fild
test
ret
ret
mov
push
call
or
pop
stos
sub
lock
shr
xchg
add
out
xor
xor
sbb
test
cmps
dec
sbb
jno
add
stos
push
clc
call
je
xchg
push
jo
(bad)
xor
mov
sbb
cwde
les
cli
push
(bad)
cmp
daa
push
mov
sub
rol
push
test
mov
sbb
imul
shl
fild
sar
(bad)
jecxz
rol
dec
mov
lds
fist
pop
or
gs
inc
push
adc
cmp
nop
xchg
pop
jge
pop
in
movs
cmp
or
or
popa
xlat
fcmovnb
xchg
daa
jl
clc
xchg
pop
sub
inc
movs
dec
xchg
adc
fsub
push
push
push
push
and
add
mov
push
push
jge
stos
or
mov
movs
cld
xchg
ror
imul
cli
lods
movs
sbb
add
cmp
ins
(bad)
mov
mov
cmp
lock
fldcw
ds
push
xchg
inc
shr
xchg
jecxz
leave
cmp
mov
stc
in
jbe
and
retf
test
inc
(bad)
push
ss
js
icebp
and
push
jp
lds
pop
loope
fcom
cli
cmp
scas
jl
loopne
rcl
xchg
sub
add
and
ss
add
pop
push
leave
and
daa
or
ins
or
pop
add
clc
pop
sbb
lds
pop
pop
out
mov
and
dec
mov
inc
ret
xchg
dec
dec
cmp
movs
retf
daa
shl
cli
xchg
cdq
dec
ret
cmp
aas
add
cdq
stos
cmp
pop
cmps
shl
mov
dec
jb
nop
mov
sub
dec
mov
inc
or
mov
clc
mov
out
jns
addr16
retf
pop
arpl
daa
jg
mov
push
and
fcom
add
mov
push
cmp
fmul
cli
jb
xor
jno
sub
mov
pop
fidiv
int
mov
movs
and
jno
mov
xchg
loop
pop
shl
out
int3
jbe
lds
cmp
sbb
adc
cmps
and
fs
and
mov
fst
or
data16
(bad)
mov
imul
add
add
dec
jle
inc
xchg
lds
das
fwait
jne
push
mov
(bad)
dec
mov
inc
addr16
inc
clc
call
inc
rcl
addr16
adc
sbb
ss
fsubr
mov
cmp
fs
add
xchg
or
cld
iret
jnp
popa
sbb
xchg
fnstsw
imul
push
rcr
jmp
push
mov
xchg
sub
das
push
or
icebp
adc
sub
es
sbb
push
mov
push
sub
jae
adc
add
int3
jbe
or
retf
rol
in
dec
data16
xchg
leave
jmp
dec
lods
mov
stc
push
int
aas
dec
test
dec
(bad)
push
push
movs
(bad)
sub
scas
fwait
(bad)
xchg
cdq
imul
adc
and
or
(bad)
jno
cmp
pusha
sbb
pop
or
adc
js
xor
push
cs
push
mov
push
movs
aas
mov
inc
cmp
clc
jno
pop
sub
dec
mov
fistp
cmp
add
push
(bad)
push
xchg
cmp
dec
sbb
imul
(bad)
stos
ret
in
xor
cmp
push
or
add
mov
icebp
lahf
imul
fdivp
xchg
outs
addr16
sub
sar
jge
sub
nop
inc
repz
xchg
into
lds
aad
repnz
mov
dec
sahf
mov
rol
mov
outs
inc
push
hlt
std
inc
loop
inc
sub
out
dec
add
push
outs
push
scas
dec
sbb
push
imul
sbb
xor
fsubr
xor
stos
sub
scas
cdq
inc
into
retf
jg
jns
jge
push
push
or
push
ins
in
pop
and
lock
icebp
push
aaa
or
ins
hlt
pop
dec
call
or
sub
inc
icebp
nop
stc
mov
adc
retf
and
sbb
aaa
mov
add
pop
sub
fst
pop
xchg
(bad)
jp
sub
outs
scas
inc
or
aas
jg
xchg
imul
cmp
and
(bad)
xchg
(bad)
sbb
ins
mov
jo
call
stc
jecxz
test
ins
mov
cwde
add
repz
(bad)
mov
jmp
mov
pushf
test
push
lahf
div
(bad)
fs
out
dec
and
cwde
cli
std
inc
push
jmp
xchg
gs
add
aad
add
or
paddb
fucomp
nop
in
test
shr
mov
jnp
adc
sbb
sbb
ss
lods
xchg
xor
adc
pop
and
pop
bound
into
out
in
inc
mov
xchg
cld
out
push
mov
pop
jb
jp
not
dec
or
ror
imul
mov
xchg
add
xor
mov
mov
gs
ror
out
je
div
jno
mov
or
ds
scas
jne
jo
jmp
(bad)
cld
mov
clc
push
ss
jp
hlt
stc
mov
dec
mov
adc
out
and
icebp
pop
in
add
mov
js
sub
out
sub
inc
(bad)
xor
inc
sbb
inc
cmp
cmp
mov
sub
ret
mov
jp
aam
add
ins
int
loope
dec
out
sub
dec
pop
in
pop
cdq
ins
daa
adc
scas
mov
jmp
inc
inc
in
or
cmp
shl
adc
stc
push
pop
jne
scas
sbb
idiv
iret
xchg
outs
pop
cmp
shr
push
xchg
scas
xchg
xor
call
mov
in
add
push
and
cs
loopne
push
mov
jae
xchg
xchg
aaa
inc
pop
in
mov
lods
jg
ins
push
sub
inc
mov
lods
out
into
pop
mov
jmp
add
sbb
add
sub
loopne
jmp
(bad)
cmp
sbb
test
rol
inc
(bad)
inc
sub
addr16
xlat
xchg
inc
sar
mov
jo
mov
mov
ss
mov
jl
pop
fs
jbe
hlt
xor
sbb
sbb
adc
adc
cmp
xor
test
pop
or
outs
in
sbb
xchg
push
mov
(bad)
sbb
xor
in
fmulp
dec
imul
xchg
pusha
ret
push
mov
ins
mov
pop
xor
jmp
rcr
sub
test
ss
or
in
jmp
fidiv
les
and
adc
pop
sti
sar
das
fnstsw
stos
out
pop
adc
pop
das
nop
rcl
jno
ds
inc
inc
and
mov
or
sahf
adc
loope
inc
scas
jno
icebp
fs
movs
repnz
xor
test
xor
cmp
(bad)
out
int
mov
push
sbb
stos
jg
dec
push
xlat
call
push
bound
out
or
jnp
xlat
cmp
sub
out
or
jns
mov
cmc
clc
pop
sub
dec
enter
adc
cmp
in
fst
sub
jae
push
adc
inc
(bad)
sbb
and
sbb
in
pop
ins
mov
and
xchg
std
inc
and
fnstcw
xor
jmp
pop
mov
xchg
xchg
cmp
sti
add
jle
ret
mov
out
cmp
aam
pop
sub
add
pop
stos
test
arpl
add
mov
or
iret
pop
pop
clc
out
movs
jmp
cs
push
shr
cmp
mov
div
cmp
sub
sub
jo
test
test
and
cmps
cmp
pop
sar
jno
jecxz
dec
or
ficom
jp
xchg
push
push
ror
aam
push
mov
das
push
add
mov
in
ss
push
fsubr
xchg
aas
or
iret
xchg
sub
enter
inc
mov
and
mov
cmps
xchg
fcmove
and
push
mov
cmp
push
mov
cmp
imul
stos
lds
retf
xchg
and
sbb
dec
mov
(bad)
fidiv
mov
jmp
jns
mov
popa
dec
test
icebp
jae
mov
enter
jmp
push
and
stc
push
cmp
sub
jge
(bad)
and
sbb
int3
jno
es
mov
leave
pop
adc
mov
xchg
ja
pushf
iret
dec
bnd
hlt
ins
lock
mov
ins
push
ds
or
in
addr16
test
iret
retfw
inc
out
movs
(bad)
fldcw
lds
sub
dec
out
in
sahf
jg
popf
repnz
mov
in
push
outs
xor
or
mov
js
nop
xchg
lock
in
push
arpl
(bad)
jno
fld
ins
inc
and
hlt
scas
jecxz
cmc
sbb
mov
sti
and
pop
push
out
shl
pusha
cmp
daa
jle
add
mov
js
ins
repnz
mov
das
mov
cmp
add
cmc
stc
stos
in
cld
lock
mov
xor
cmp
jmp
popa
loopne
xchg
pop
arpl
addr16
(bad)
mul
test
pop
outs
lds
add
sub
pop
je
mov
add
(bad)
jne
mov
pop
iret
mov
push
in
leave
xchg
scas
jo
(bad)
xchg
cmp
adc
dec
xchg
sahf
inc
ret
jl
jo
repz
inc
inc
push
jb
arpl
(bad)
movs
jp
test
xchg
cmps
push
mov
aad
pushf
ret
sub
test
xchg
sub
test
fist
cmp
sub
add
jno
pop
mov
push
add
test
fwait
push
rol
sbb
or
jb
jb
enter
(bad)
stc
inc
or
ret
mov
jae
pushf
sbb
popa
mov
jg
iret
sub
jl
test
popf
mov
mov
xchg
or
jecxz
add
shl
sbb
mov
and
push
jmp
ins
inc
aam
divps
and
sub
lods
xlat
iret
inc
xor
ds
mov
sbb
mov
cmc
push
(bad)
jecxz
dec
rcl
sbb
ror
jmp
push
sbb
sub
cmp
sbb
maskmovq
idiv
sub
dec
sahf
inc
mov
call
leave
ffreep
(bad)
dec
out
mov
push
dec
xchg
xchg
lahf
sbb
loope
jbe
or
jge
movs
dec
inc
imul
add
fwait
inc
mov
sbb
in
cdq
sub
sbb
inc
inc
bound
mov
cmps
js
pop
or
mov
les
mov
int3
nop/reserved
mov
pop
stos
xor
ja
push
sbb
cmp
(bad)
call
mov
cld
shr
scas
inc
and
pop
pusha
callw
ja
sahf
rol
or
adc
inc
mov
xor
and
in
push
popa
popf
test
add
mov
stos
dec
ss
and
movs
and
push
shl
lahf
leave
sub
and
sbb
repz
pop
aam
pop
(bad)
push
pop
pop
(bad)
xchg
jecxz
jecxz
dec
fs
xlat
push
sbb
cs
jb
rol
fsubr
cmc
adc
inc
dec
std
enter
into
addr16
jae
mov
sub
inc
pop
(bad)
or
xor
xchg
and
hlt
inc
push
daa
aas
push
and
inc
cmp
clc
fisub
push
adc
out
ret
pop
int
or
cmp
pop
push
mov
out
scas
(bad)
lods
call
out
cmp
out
(bad)
and
mov
sbb
sbb
jle
inc
mov
or
pop
(bad)
jmp
push
inc
fist
or
hlt
out
ins
(bad)
fwait
retf
leave
push
adc
jbe
adc
shl
xor
mov
mov
into
jp
sahf
dec
jl
sbb
jmp
and
in
jge
popa
js
aas
leave
add
mov
mov
pop
push
gs
xchg
into
jno
inc
out
or
(bad)
or
sahf
mov
fwait
and
int3
stos
jmp
scas
mov
and
add
mov
push
ret
leave
test
and
retf
add
or
pusha
xchg
imul
xlat
adc
push
das
out
adc
imul
xor
sbb
movs
mov
cdq
addr16
stc
sti
ins
lock
sbb
int3
out
mov
cmp
add
lods
(bad)
mov
adc
sub
xor
lods
xor
(bad)
in
pushf
not
cmp
pop
push
pusha
cmp
pop
xchg
cmp
and
jb
or
into
dec
inc
sbb
cmp
mov
inc
gs
pop
xor
jo
lods
jnp
jo
imul
push
(bad)
jmp
push
push
jbe
mov
cs
mov
inc
std
(bad)
test
xchg
sub
fs
push
leave
mov
sar
adc
adc
adc
xor
inc
aam
mov
mov
mov
fs
mov
outs
sbb
xchg
dec
in
inc
cmp
add
sub
outs
mov
or
les
mov
mov
inc
icebp
mov
cmp
mov
cmc
mov
sar
lds
pop
add
retf
imul
in
mov
sbb
pop
pop
adc
sbb
test
dec
push
add
sahf
push
dec
adc
jl
xchg
cli
in
jp
test
cli
loop
jle
inc
jl
movs
add
lods
inc
inc
not
mov
enter
jmp
jnp
sub
push
dec
je
ret
fild
xor
xor
cmps
mov
retf
icebp
inc
dec
and
xchg
pop
int3
jg
in
mov
adc
add
outs
in
popa
mov
(bad)
div
adc
pusha
mov
mov
jmp
ds
or
add
lods
outs
std
loope
cmc
dec
in
ins
aad
fcom
les
scas
and
pop
outs
int3
nop
xchg
xchg
lahf
sar
xor
jns
sar
push
adc
inc
sub
loope
jnp
call
mov
(bad)
scas
cmp
and
outs
mov
dec
mov
ret
push
push
push
sbb
jl
daa
fisttp
jl
dec
cmp
dec
lock
imul
inc
rcl
fmul
fsubr
mov
sub
add
adc
sahf
or
std
and
ret
adc
inc
retf
cmp
add
shr
stc
ja
lods
add
fxch
daa
xchg
dec
test
push
xlat
mov
cld
push
sbb
pop
fsubrp
push
fsub
mov
sar
xchg
ret
test
jne
mov
je
sbb
stc
and
aaa
add
push
inc
fwait
mov
std
sub
cmp
je
dec
sbb
fistp
das
sub
cmp
and
inc
mov
push
test
mov
mov
fild
cmp
stos
repnz
popa
push
cdq
gs
inc
push
xchg
repz
sub
dec
pop
cmp
std
add
rol
das
or
arpl
mov
out
push
jne
mov
(bad)
inc
in
aaa
xchg
mov
dec
xor
jmp
out
ror
pop
imul
sahf
xchg
push
or
mov
sub
call
and
add
pop
xor
sub
add
shr
lods
das
pop
cmp
fsubr
scas
icebp
and
jmp
mul
pusha
push
pop
jmp
sub
push
pushf
aad
call
pop
je
loopne
inc
repnz
les
fdiv
pop
and
scas
arpl
out
out
fwait
push
lods
(bad)
int
fsubr
nop
(bad)
shr
dec
lods
retf
lds
and
lods
fmul
repnz
dec
adc
dec
arpl
inc
xchg
xor
adc
cmp
mov
pop
out
iret
pop
sti
inc
mov
jne
pop
or
add
sar
sub
data16
sub
aad
outs
push
or
mov
mov
gs
mov
imul
popf
add
fwait
adc
mov
inc
inc
and
repnz
sub
adc
push
or
inc
data16
arpl
sahf
in
(bad)
xchg
pushf
ret
pop
out
sub
push
xchg
sub
fistp
(bad)
popa
fldcw
movs
out
cmps
fidivr
pop
sub
push
cmp
fadd
jle
mov
push
xor
pop
cmps
push
(bad)
fild
fistp
cmp
pop
inc
ret
jo
rol
fsub
xor
lds
cdq
adc
ret
pop
xor
repz
das
pop
mov
leave
cld
lods
idiv
sbb
cwde
(bad)
adc
or
fs
ror
mov
dec
shl
cmp
test
jmp
push
js
mov
push
cli
data16
sbb
loop
jmp
xchg
loope
mov
and
lods
(bad)
clc
sub
mov
clc
mov
cmps
push
iret
aad
imul
cmps
cmp
dec
jmp
sub
cwde
xchg
setle
sub
ins
cld
sar
repnz
ret
mov
rcl
add
gs
adc
retf
mov
pop
jecxz
sbb
cmp
pop
or
in
push
push
cwde
rcr
fdiv
jmp
cmp
cmps
int
adc
cmp
inc
stc
pop
fwait
xor
adc
mov
cld
add
fild
sub
pop
popa
mov
mov
jnp
call
movs
stos
jge
fucom
jo
mov
xchg
sub
mov
cmp
and
inc
std
ss
out
inc
arpl
ret
push
inc
fsubr
scas
sbb
les
add
dec
ja
pop
jbe
mov
stos
cwde
mov
mov
mov
add
scas
add
cdq
js
cmp
js
mov
xor
cmp
mov
cdq
test
mov
jnp
repnz
xor
mov
hlt
inc
inc
cld
adc
inc
jns
retf
xor
xchg
dec
lahf
es
mov
fiadd
lds
in
(bad)
loop
mov
adc
bound
aam
xchg
mov
add
mov
mov
int
scas
dec
repz
cmps
jne
fs
cdq
in
push
jp
fild
xor
adc
(bad)
xor
lods
push
xor
(bad)
cli
sar
sar
stc
aas
jge
sbb
ret
imul
movs
(bad)
dec
pop
scas
push
mov
adc
fld
dec
jbe
ins
gs
cmp
add
dec
and
(bad)
es
shr
test
in
bound
cmp
(bad)
iret
push
in
imul
and
cmp
scas
add
pop
loopne
and
imul
sub
outs
ins
xchg
lods
loopne
adc
stos
dec
movs
mov
xor
xor
push
sub
xor
adc
inc
adc
push
fistp
mov
xchg
test
lds
inc
mov
xlat
sbb
clc
ja
dec
shl
ret
mov
pop
cmp
push
je
adc
adc
sub
adc
cmp
add
mov
mov
in
fisub
sti
jp
mov
fisttp
mul
cmp
xor
aas
scas
push
mov
jle
sbb
push
jle
push
xchg
loop
xchg
fisubr
adc
inc
cmp
inc
cs
aaa
mov
mov
clc
ror
push
sbb
mov
cli
mov
cmp
in
xor
xlat
adc
jmp
repnz
rol
push
push
sbb
cld
int3
shl
scas
outs
(bad)
repnz
xchg
pusha
push
mov
or
pop
add
div
nop
add
xor
jns
push
inc
mov
add
add
int
ins
dec
xor
scas
cld
xchg
movs
jge
fcomp
jge
pop
jp
adc
ins
sbb
(bad)
int3
xor
fistp
call
push
pop
ins
(bad)
out
ins
xor
scas
adc
fild
adc
add
inc
daa
dec
cmp
lods
(bad)
jb
sbb
xor
dec
xchg
push
push
jbe
cmps
fnstcw
dec
lock
push
ja
int
call
xchg
cmp
sbb
mov
xor
pop
jb
xchg
clc
cmp
enter
pop
cmp
fwait
scas
inc
leave
icebp
or
xlat
jbe
in
rcr
sub
sbb
pop
in
bound
pop
into
ror
int3
lods
adc
ins
sar
or
test
dec
js
std
in
push
popf
mov
inc
cmp
mov
xchg
dec
mov
ds
lahf
sbb
aad
lods
push
mov
add
out
int3
jl
pop
inc
jne
cli
(bad)
mov
loopne
loope
mov
push
pop
aas
cmps
fisttp
jnp
pop
popa
jmp
pop
cs
jne
pushf
into
pop
mov
fnsave
xor
cld
xchg
fcom
out
pushf
add
(bad)
pop
push
mov
jge
xor
addr16
int
dec
leave
xchg
jno
movs
mov
inc
and
sbb
movs
add
inc
lahf
mov
jnp
rcl
xchg
repnz
jbe
lds
pop
pop
push
repz
out
mov
xchg
(bad)
mov
ins
or
mov
sti
jb
push
loop
inc
les
cvtps2pi
jmp
cmp
push
mov
mov
(bad)
fldenv
or
add
fcomp
retf
adc
xchg
inc
out
mov
lock
outs
js
popf
dec
mov
shl
loope
xchg
mov
movs
mov
fimul
cmp
and
mov
cmp
xor
leave
add
imul
xchg
mov
lds
ror
adc
xchg
xor
mov
pushf
shr
adc
sbb
mov
aas
sbb
dec
adc
push
or
dec
(bad)
or
cdq
sbb
daa
mov
out
dec
xlat
(bad)
in
and
fstp
mov
popf
jmp
xor
setge
pop
scas
ret
push
jge
into
mov
dec
jbe
clc
movs
inc
xchg
div
and
dec
ja
cmp
mov
jnp
bound
jg
mov
push
outs
or
repnz
sub
push
fidivr
int
bt
scas
and
dec
push
xor
xchg
xchg
in
popa
inc
mov
adc
or
xchg
mov
call
dec
sbb
ins
es
leave
sub
imul
test
inc
std
xor
sbb
lahf
pop
enter
mov
xor
push
mov
ret
into
xlat
pushf
into
popa
mov
adc
mov
dec
sub
leave
stos
out
mov
inc
pop
cwde
pushf
fisttp
dec
xor
outs
dec
xchg
dec
scas
scas
test
or
aas
mov
jg
mov
or
hlt
or
sub
cmps
pushf
(bad)
iret
pushf
nop
jno
pop
ins
pop
loop
mov
rcl
cs
std
int
push
sub
add
(bad)
lods
inc
(bad)
cmp
jo
cli
shr
sahf
aaa
and
push
clc
call
xchg
inc
cli
cld
jb
jmp
push
push
or
mul
repz
ins
mov
into
test
daa
inc
cld
or
pop
sub
scas
add
jecxz
out
test
das
mov
pusha
(bad)
xchg
cdq
imul
cmp
cs
sub
fistp
push
fs
inc
and
ja
js
mov
fimul
shl
mov
mov
inc
loop
mov
pop
ror
jb
into
(bad)
push
ins
jmp
(bad)
ja
outs
push
mov
ins
inc
out
pushf
push
aas
aas
sub
bound
inc
dec
iret
inc
and
push
cmp
outs
add
mov
add
repz
icebp
pop
iret
pop
push
add
xor
mov
mov
mov
mov
sahf
sbb
jo
push
or
add
inc
loopne
popa
push
cmp
nop
or
cmp
test
mov
xchg
neg
dec
jmp
mov
inc
adc
(bad)
into
jl
bound
test
mov
sbb
mov
mov
mov
sub
mov
inc
out
add
mov
mov
sbb
nop
retf
add
mov
loope
loopne
pop
inc
lods
inc
retf
jns
movs
rcl
jecxz
dec
je
fsub
jne
sti
std
icebp
jno
mov
push
xchg
sbb
mov
jmp
loope
or
cwde
mov
add
in
pop
and
jmp
xchg
mov
mov
mov
dec
cdq
mov
mov
xchg
mov
into
hlt
(bad)
sub
pop
inc
daa
call
or
sar
aad
mov
aaa
dec
shr
adc
mov
movs
inc
fisub
push
mov
sti
cmps
into
and
outs
mov
out
call
adc
jg
(bad)
jae
adc
xor
(bad)
fisttp
pop
stos
lea
jo
fwait
inc
pop
out
imul
inc
outs
mov
adc
neg
(bad)
mov
inc
push
or
cmp
xor
scas
mov
push
retf
cdq
sbb
push
sub
or
push
retf
push
mov
lds
fadd
add
aas
add
rol
pop
bsr
fdivr
mov
outs
inc
xor
xchg
mov
movs
retf
mov
mov
inc
jmp
arpl
mov
sbb
or
jp
sub
nop
push
ror
inc
mov
xor
pop
jmp
xchg
test
sub
push
cld
dec
dec
sbb
mov
xchg
in
push
sbb
adc
mov
mov
std
imul
sbb
shl
adc
(bad)
pusha
scas
fisubr
call
mov
mov
out
mov
push
jecxz
cmp
inc
int
fisttp
shl
and
out
loop
imul
dec
inc
cdq
repnz
or
pop
fisttp
adc
mov
xchg
ret
shr
pusha
retf
rcl
imul
movd
hlt
xor
and
mov
or
add
inc
rol
xchg
xor
add
push
or
pop
cdq
xor
leave
push
jns
cmc
jno
mov
jmp
les
dec
xchg
adc
pop
(bad)
fsub
jo
pop
mov
(bad)
push
cmps
push
or
xchg
cli
arpl
lods
cmp
fidivr
pop
mov
je
in
xor
mov
xchg
push
sub
mov
push
dec
sbb
lds
mov
push
xchg
stos
jae
xchg
jne
loope
dec
jecxz
je
fst
sti
lea
ins
xchg
and
dec
xor
stos
ss
call
ins
mov
out
xchg
mov
xor
inc
mov
add
les
add
retf
and
jecxz
data16
test
ret
fmul
mov
pop
fwait
cwde
stos
nop
fsub
sub
rsm
jmp
pop
lods
inc
pop
pop
aaa
(bad)
and
sub
xchg
dec
sub
cmp
test
gs
xor
lock
pop
movs
add
dec
aad
fist
xor
rcl
lods
jl
hlt
mov
xor
ds
jmp
enter
inc
or
jg
sub
neg
scas
or
adc
dec
ficomp
xor
cld
popf
jo
jno
mov
outs
sub
mov
sti
es
in
add
mov
daa
inc
call
test
inc
cs
jle
ins
mov
(bad)
jmp
mov
int3
push
pop
data16
fiadd
ss
jnp
mov
pop
stos
push
mov
and
adc
fs
stc
jns
pop
sahf
sbb
icebp
ret
cmp
stos
rol
pushf
cmp
mov
cmp
push
int3
fimul
pop
push
sar
push
cdq
div
sbb
dec
dec
rcr
fadd
mov
or
nop
xchg
jmp
xor
imul
out
sub
jg
push
in
xlat
daa
sbb
mov
jo
pop
lods
pop
push
movs
and
dec
ja
jl
jmp
lahf
xchg
cmp
push
rol
adc
sbb
sti
ror
inc
out
or
outs
or
push
mov
xor
sub
sub
push
mov
or
shl
ja
scas
sub
fmul
cli
mov
jle
xchg
pushf
and
dec
sbb
xchg
fstp
pop
add
mov
adc
enter
inc
aad
sub
leave
pop
jbe
pushf
pop
aam
sbb
ror
add
in
movs
jo
xchg
dec
inc
pop
push
xchg
xor
fwait
add
scas
shr
sbb
int
cmps
xchg
ror
loope
xchg
xchg
lahf
push
mov
loope
in
sbb
pop
imul
cs
mov
test
hlt
push
aaa
pop
imul
pusha
sti
in
icebp
loop
data16
mov
adc
jecxz
test
les
gs
test
outs
cld
retf
lea
jne
sub
push
shufps
inc
inc
inc
inc
mov
mov
mov
sahf
aas
inc
test
loop
xor
mov
lods
repz
pop
push
and
xchg
jns
xchg
or
pusha
mov
add
sub
and
(bad)
enter
mov
pop
sub
imul
in
ret
lock
cmps
dec
es
hlt
inc
retf
mov
aas
push
or
pop
ja
sub
loope
cs
inc
cwde
and
inc
aaa
rcr
imul
jns
cmps
push
fwait
push
lea
and
add
in
outs
mov
mov
adc
ret
xchg
sbb
test
ds
jle
dec
scas
pusha
ins
aas
in
jl
sbb
or
xchg
add
nop
mov
push
retf
ins
dec
xchg
jnp
pop
sahf
in
cli
pop
ins
jns
mov
int
test
cmp
cmp
mov
adc
lods
sub
push
aaa
in
xor
mov
sub
or
das
pop
sub
dec
cld
dec
inc
sbb
ficomp
push
jmp
call
ds
(bad)
xchg
outs
inc
dec
mov
push
in
lock
inc
jbe
out
out
adc
outs
mov
(bad)
std
push
adc
jo
adc
inc
call
jnp
push
xchg
xor
cmp
(bad)
cmp
fnsetpm(287
fbstp
jbe
(bad)
loopne
sub
push
pop
pop
in
push
sbb
jbe
pop
cmp
ss
int
test
jl
cdq
jb
jo
and
jns
pop
ins
bound
sbb
pop
dec
das
xor
in
bound
xchg
cmp
sbb
mov
and
sub
fbstp
lods
xchg
mov
test
adc
stos
push
stc
xor
sar
mov
push
pop
sub
arpl
pop
ss
fdivr
movs
test
mov
ds
jns
mov
inc
mov
inc
icebp
push
sti
xchg
add
outs
pop
sub
stos
pop
in
stc
into
adc
dec
loope
mov
ins
push
int3
mov
retf
into
add
adc
adc
adc
fimul
sar
cli
fdivr
jnp
fidiv
das
adc
movs
ret
test
lock
loop
or
stc
add
jmp
xchg
mov
aad
outs
lea
test
jae
cld
sub
mov
sbb
jmp
out
cmp
dec
loop
gs
or
lods
jmp
sub
jecxz
xor
pop
jp
sti
mov
mov
fisttp
push
pop
imul
xor
nop
pop
or
xchg
dec
jne
push
sub
sub
push
dec
push
jo
(bad)
xchg
(bad)
mov
jl
mov
ins
cli
outs
je
add
sbb
sub
push
xor
in
pop
test
test
imul
nop
add
xor
jmp
jle
pop
dec
mov
sar
mov
adc
sti
mov
xchg
fbld
outs
lods
cmps
xchg
loop
out
pushf
mov
pop
mov
dec
inc
call
mov
xchg
fprem
mov
sar
fsubr
mov
aam
call
lods
pop
sti
test
das
retf
xchg
or
sti
les
adc
jo
xor
mov
rcl
mov
rcl
(bad)
daa
stc
pop
test
xchg
popf
(bad)
and
pop
daa
cmovnp
das
add
cld
test
into
fcmovb
fs
cwde
aad
mov
je
popf
adc
sbb
bnd
std
and
xor
jp
add
sbb
sti
pop
out
rcl
outs
ror
cdq
scas
mov
movs
mul
outs
push
sub
cld
adc
inc
cmp
xchg
inc
retf
pop
out
iret
add
cwde
jno
add
imul
push
cmc
int3
and
adc
je
mov
add
sbb
fs
add
pop
pop
stc
sbb
jl
mov
or
stos
jae
stos
cmps
retf
lods
jge
adc
jmp
push
movs
xor
ret
xor
daa
(bad)
cld
xor
or
push
push
outs
pusha
aas
outs
hlt
pop
xor
lock
mov
push
xchg
nop
retf
mov
xlat
pop
mov
(bad)
test
fcomp
stos
jecxz
jmp
ror
push
test
adc
ror
cmp
sub
(bad)
int3
and
jmp
sub
mov
repnz
pop
in
cmc
xchg
out
sbb
loopne
sbb
adc
mov
gs
fs
xchg
cmp
jb
(bad)
cmps
xchg
movs
and
mov
xor
cmp
test
sbb
inc
pusha
mov
cmp
adc
xlat
sti
push
in
pop
in
fstp
lods
mov
pushf
call
or
jle
push
shl
cmps
and
data16
inc
clc
jl
retf
adc
mov
mov
push
retf
sbb
adc
repz
jno
xchg
cmp
xor
ret
ret
jno
mov
pop
mov
movs
xchg
xchg
in
rcr
adc
mov
aam
fnstcw
sub
mov
loopne
and
sub
stos
scas
jmp
mov
xchg
jb
cmps
sub
jmp
and
pop
shl
fcom
in
xchg
stc
dec
loop
mov
or
jbe
fld
fild
aad
jb
sti
add
cli
adc
repz
repnz
stos
lahf
lods
sub
cmp
in
inc
adc
(bad)
(bad)
loopne
mov
cmp
push
push
dec
movs
cmp
adc
retf
bound
shl
mov
sub
out
inc
jnp
dec
dec
dec
push
cli
loope
cmp
into
call
jns
pusha
leave
ss
popf
xor
sbb
push
mov
bound
push
jle
jo
and
mov
or
mov
outs
and
jno
xor
jmp
jb
mov
pop
xor
mov
fdivr
je
shr
cmp
sbb
test
stc
fbstp
lods
push
test
sbb
neg
xchg
xchg
fisttp
ins
jo
sbb
outs
cmp
leave
mov
je
data16
sar
mov
xor
cmps
jge
jns
ror
int3
add
lods
and
out
inc
mov
scas
sub
mov
adc
ins
mov
mov
adc
stos
jnp
add
shl
dec
scas
push
jae
retf
and
jge
or
(bad)
sahf
pop
scas
cs
aas
jg
dec
push
test
mov
push
and
push
pop
(bad)
sti
mov
sbb
mov
cmp
pop
sub
inc
inc
mov
(bad)
and
adc
push
nop
scas
add
xor
das
fsubr
jmp
leave
out
das
ret
mov
pop
test
add
add
jle
clc
les
xor
aas
fisttp
aaa
jne
fcomp
xchg
test
mov
mov
or
jl
adc
js
enter
xchg
test
sub
mov
das
jl
aas
sbb
out
div
test
inc
dec
dec
cdq
mov
dec
dec
ds
inc
lods
mov
shl
out
mov
add
ret
xchg
sbb
dec
movs
cld
dec
fcom
or
mov
mov
adc
push
cwde
push
retf
rcl
arpl
jns
in
mov
pop
or
test
lods
cli
lods
cmps
adc
xor
jno
ja
sbb
pushf
adc
gs
(bad)
pop
xor
fcmovbe
dec
retf
pcmpgtw
imul
sub
inc
sub
les
inc
out
ins
jecxz
loopne
ins
or
movs
pushf
(bad)
int3
fst
imul
std
outs
js
sub
in
inc
inc
xchg
pop
and
or
js
sbb
ja
clc
inc
fstp
mov
lock
jb
pop
lods
mov
icebp
adc
sub
cmps
sti
ins
jge
cld
test
xchg
and
mov
dec
pop
pop
repz
(bad)
call
imul
(bad)
jnp
xchg
and
push
inc
push
(bad)
sub
sbb
mov
hlt
adc
scas
leave
pop
cli
dec
dec
js
ss
out
xchg
test
repz
push
xor
sti
leave
mov
ja
cmp
adc
out
jmp
sub
and
jns
push
mov
repz
call
push
rol
pop
mov
jb
mov
mov
sub
fisub
add
fwait
sar
inc
mov
imul
jge
inc
out
ret
sbb
fld
outs
mov
cmp
es
fisub
mov
add
das
mov
(bad)
imul
adc
pop
aad
aad
popf
pop
and
lods
pusha
cwde
dec
sub
aaa
or
(bad)
jnp
push
ret
fst
lods
out
dec
repz
in
les
push
cmc
ffreep
adc
xor
dec
and
fwait
mov
cmc
jmp
das
push
pop
pop
les
mov
movq
test
mov
push
jg
push
xor
sbb
push
dec
or
arpl
jmp
sbb
aaa
in
cld
sbb
mov
inc
or
pop
xchg
cmc
or
mov
and
push
sbb
and
mov
adc
sub
pop
jae
mov
int
repnz
stos
fstp
stos
imul
and
ror
mov
mov
lds
add
movs
pmuludq
cli
test
pop
sar
ret
sbb
sbb
out
mov
mov
dec
loope
pop
mov
or
mov
xor
fldcw
(bad)
cmp
sti
push
adc
mov
or
cli
inc
rcr
neg
fnstsw
mov
shr
dec
ret
sti
push
cwde
and
jne
scas
inc
xor
pop
repnz
dec
and
jnp
mov
data16
dec
scas
and
and
xchg
inc
sbb
pmaddwd
lock
cmp
mov
aam
aad
test
xchg
or
sub
ror
mov
mov
ror
sbb
xchg
daa
adc
xor
dec
push
push
out
cdq
retf
in
enter
ja
xor
fcomip
out
loopne
(bad)
mov
ins
adc
call
fldenv
loope
ja
(bad)
ds
dec
jae
mov
sub
call
mov
or
ret
pop
add
xor
das
pop
fist
mov
shl
das
add
shl
ret
xor
cmp
jb
adc
ret
pop
ret
enter
fadd
add
es
popf
repnz
xchg
inc
movs
inc
inc
ins
and
jp
cwde
cmp
xchg
jbe
mov
fimul
ror
adc
jbe
xchg
mov
jb
jle
jl
cmp
pop
fstp
test
aas
stos
pop
xor
(bad)
dec
jg
out
stos
cmp
mov
data16
mov
sbb
inc
cmps
stos
xor
dec
pop
fnstcw
mov
mov
inc
jmp
push
jae
dec
sub
icebp
mov
outs
jmp
idiv
call
push
mov
xchg
mov
dec
ins
and
inc
jno
repnz
cld
les
mov
cli
xchg
mov
dec
pushw
pop
adc
jno
clc
stos
add
retf
and
imul
xor
ret
mov
repnz
gs
fimul
ins
into
std
pop
mov
xor
in
mov
cmp
mov
movs
dec
sbb
fild
cmp
jbe
fs
sub
fnsave
dec
mov
jne
fs
(bad)
sbb
fidivr
ja
(bad)
ins
outs
mov
inc
xor
mov
test
loope
jns
js
cmp
daa
xor
jbe
and
add
popf
fcmovbe
scas
push
adc
adc
in
mul
cmp
push
mov
mov
(bad)
jb
push
add
(bad)
sub
add
popa
scas
pop
mov
jb
fs
mov
mov
mov
fucomp
push
jge
in
add
loopne
imul
mov
test
mov
jns
mov
rcl
mov
stc
sahf
pop
jp
pop
hlt
aad
jnp
data16
icebp
push
cdq
jae
iret
cli
mov
xor
mov
inc
push
leave
mov
and
ret
daa
mov
int3
adc
sub
xchg
(bad)
or
call
out
mov
loopne
push
das
ins
loopne
pop
call
movs
imul
xchg
loop
call
mov
fistp
cmp
sub
repz
pop
add
mov
pop
outs
pop
mov
sbb
test
popa
cdq
add
jge
or
or
cmp
mov
out
mov
push
mov
xor
cmp
inc
cmp
stc
adc
and
pop
mov
push
stos
sahf
cld
add
sbb
(bad)
jecxz
push
mov
mov
pop
add
scas
or
or
ins
enter
stc
fild
in
jg
out
push
fidiv
das
cdq
retf
call
xor
in
imul
fcom
pop
cld
jmp
sar
push
sbb
test
fsubr
sub
xchg
not
mov
push
(bad)
call
jecxz
inc
shl
push
dec
inc
aaa
pop
add
stos
xor
push
inc
cmp
in
jge
sub
(bad)
ins
pop
aaa
out
int3
xor
test
test
test
cs
adc
push
imul
cld
pop
test
jmp
jo
pushf
sbb
sub
nop
add
das
pop
nop
pop
mov
gs
mov
xchg
and
pusha
shl
sub
stos
iret
or
mov
and
adc
inc
bswap
jle
test
xor
push
ds
and
js
jo
push
cli
cmp
fsubr
or
sahf
fcmovb
fsub
out
(bad)
jbe
or
dec
inc
xchg
hlt
loope
dec
call
fistp
aam
or
div
jl
cs
or
xor
loop
mov
adc
jmp
mul
mov
jno
mov
in
pop
mov
stos
int
dec
int3
sbb
and
mov
out
push
xor
out
aaa
mov
stos
push
fwait
and
pushf
out
add
or
pop
loope
pop
mov
jmp
pop
iret
mov
pusha
mov
dec
xchg
std
jecxz
jge
sub
fcos
mul
pop
xchg
adc
pop
mov
sub
push
pop
loop
and
stos
cmp
add
dec
add
call
jns
or
(bad)
xchg
rcl
shr
fsub
mov
xor
aad
sbb
int
sbb
xor
ficom
sbb
ins
sbb
ss
cmps
add
xchg
xchg
push
adc
imul
out
mov
pop
add
inc
pop
mov
xor
or
mov
in
outs
xchg
rcl
xor
xor
sub
pop
js
stos
pop
mov
inc
adc
ror
and
rol
mov
(bad)
pushf
aas
push
adc
hlt
mov
push
pop
pop
mov
pop
and
adc
int3
xlat
dec
sub
call
fdivr
push
xor
lar
es
mov
xchg
or
pop
bound
movs
out
retf
jae
jge
ret
int
pop
push
and
rol
jg
add
leave
cmps
adc
addr16
cli
icebp
mov
cwde
aas
fld
(bad)
mov
cli
add
mov
in
mov
inc
jb
outs
out
pop
xchg
cmp
lds
xchg
sahf
cwde
push
mov
mov
jno
add
jo
iret
gs
add
call
pop
jp
add
xchg
mov
push
js
clc
pop
scas
(bad)
lods
dec
push
rcl
pop
add
mov
mov
pop
retf
push
cwde
pushf
sbb
and
xchg
mov
cld
int
aaa
js
xor
sbb
clc
repz
sbb
packssdw
xor
sahf
adc
retf
or
std
cmp
mov
neg
mov
mov
cmp
sub
int3
push
clc
sub
jns
adc
js
add
pop
(bad)
iret
cli
in
xchg
in
mov
iret
dec
test
movs
jle
sahf
loope
jecxz
mov
outs
test
icebp
push
xchg
xrelease
jg
xchg
test
pop
cmp
xchg
loopne
cmps
and
loope
movs
dec
call
mov
jp
xchg
cld
sbb
dec
jecxz
pop
pop
in
and
outs
xor
pop
and
ret
inc
ficomp
cld
ja
in
stc
dec
inc
popa
popa
jge
out
mov
jns
enter
stc
scas
mov
pop
rcr
cld
mov
es
cdq
std
and
sub
loop
push
mov
cwde
inc
pusha
scas
jp
fcomp
cmp
jb
xchg
pop
or
xchg
sbb
addr16
mov
loope
lods
mov
pop
inc
shl
sub
xchg
ss
cmp
icebp
cdq
retf
add
mov
nop
fdivr
mov
sti
push
xchg
jae
mov
imul
sar
sti
lods
push
add
xor
mov
fs
lods
xchg
addr16
movs
mov
test
add
test
lods
jb
mov
adc
and
lahf
mov
movs
mov
add
pop
dec
sbb
jno
aad
push
retf
icebp
clc
jmp
xchg
fwait
mov
jmp
out
scas
push
pop
or
add
inc
loope
mov
popa
fidivr
inc
fidiv
fsubp
inc
rcr
fldl2e
sbb
imul
dec
sub
in
cmps
jne
jae
stc
dec
sbb
das
jmp
lds
(bad)
cmp
add
idiv
mov
outs
xchg
fldenv
sahf
inc
test
stc
ins
add
dec
repz
popf
mov
mov
xchg
dec
scas
out
sbb
shr
idiv
out
mov
in
daa
aas
cmp
xchg
fnstsw
outs
fisubr
or
fmul
test
adc
pusha
xchg
scas
test
adc
add
popf
push
repz
dec
hlt
xor
jmp
mov
and
retf
fwait
adc
cmp
les
pop
sub
push
sbb
enter
xor
aad
movs
into
xlat
inc
xchg
inc
sub
popf
push
out
ins
jle
jno
push
nop
xchg
add
adc
pop
add
xchg
jnp
ficomp
(bad)
mov
pop
adc
(bad)
dec
adc
add
xchg
mul
inc
cwde
sbb
stos
dec
mov
cmp
ret
sar
xchg
push
clc
add
rcr
in
clc
sub
push
adc
dec
mov
jne
jo
adc
cmp
retf
outs
mov
arpl
jb
ror
cli
or
setne
and
xor
cmp
jmp
(bad)
adc
(bad)
and
daa
sbb
push
cmp
movs
inc
shl
dec
fcmovnbe
std
sbb
xchg
push
mov
jmp
fstp
dec
lahf
daa
xchg
jbe
cmp
mov
jo
hlt
mov
adc
adc
sbb
loop
out
aam
std
xchg
mov
mov
bound
mov
rcl
aad
mov
add
xor
mov
loop
movs
or
loop
shl
cmps
xor
outs
ins
jmp
sbb
mov
pop
cli
or
cmp
fstp
push
cmp
test
xchg
dec
and
pop
xchg
outs
repz
xor
fwait
in
and
sbb
jno
test
aad
out
ins
or
int
cmp
cmp
jmp
adc
sub
aaa
retf
(bad)
lods
ds
sub
aaa
push
arpl
daa
add
call
les
cmp
mov
ret
and
push
aad
or
sahf
lea
add
ja
fwait
mov
rcl
mov
jl
sahf
lds
jb
xchg
jecxz
or
int3
pand
sub
inc
mov
xchg
adc
sbb
aaa
jbe
xchg
out
das
lds
xor
pusha
and
pushf
ror
mov
leave
jno
jne
mov
dec
sbb
cs
jno
xor
push
or
xchg
dec
stc
or
cmp
jp
jo
sub
retf
repz
sbb
popf
jnp
std
add
jnp
inc
dec
sbb
mov
sbb
in
dec
stos
sub
mov
mov
(bad)
fmul
adc
arpl
xchg
mov
ror
xor
jle
xor
mov
ss
push
sbb
das
nop
add
jecxz
and
pop
mov
not
icebp
xchg
repnz
lock
icebp
into
(bad)
in
adc
mov
adc
mov
inc
push
std
jns
dec
repz
dec
push
sbb
(bad)
mov
arpl
sub
rcl
xchg
cmc
mov
pop
adc
fwait
std
das
out
mov
outs
stc
jmp
ror
aad
lods
popa
and
lea
sub
sti
popa
jp
pop
push
push
aad
xor
adc
movhps
jecxz
stos
out
push
push
dec
push
(bad)
call
jmp
mov
js
pop
nop
mov
icebp
rol
jg
jae
out
repnz
sub
or
xchg
sbb
push
ins
ror
stos
ficomp
fwait
sbb
movs
jg
mov
imul
xchg
pushf
mov
adc
jns
dec
stos
imul
dec
push
fs
pop
xchg
sbb
jmp
push
cmps
xchg
enter
cmp
std
mov
in
jbe
mov
push
sub
mov
fcmovne
into
xchg
sbb
loopne
loopne
push
xchg
test
(bad)
and
xor
xlat
sbb
loopne
push
test
push
mov
js
sub
fwait
ret
inc
xor
ins
xchg
pop
mov
mov
(bad)
fimul
pop
enter
jns
cmp
inc
enter
adc
and
mov
mov
outs
test
repnz
and
sahf
je
rcr
rcl
inc
lea
and
jnp
dec
pop
push
push
(bad)
scas
jle
jno
mov
fld
test
je
mov
or
push
test
xor
into
movntq
mov
aad
cwde
ret
jmp
add
pop
add
rcr
out
fstp
hlt
loope
dec
fstp
ret
shl
rcr
or
sub
jne
out
mov
mov
inc
out
cmps
pop
loope
sbb
es
add
(bad)
and
mov
cdq
cmp
and
lods
out
jmp
xchg
ror
pop
aam
xor
sub
add
rol
jo
push
fld
sbb
repz
movs
iret
or
setle
inc
xor
pop
loopne
mov
ds
cmp
lods
xor
pop
jmp
retf
cmp
imul
retf
xor
iret
bound
jns
mov
pop
push
jbe
test
push
test
jns
add
(bad)
outs
mov
clc
js
fwait
mov
jo
add
(bad)
inc
or
jmp
add
aas
(bad)
adc
mov
aad
or
and
cmp
xchg
stc
mov
retf
retf
and
loope
ds
repnz
mov
cmc
pop
xor
mov
shr
out
inc
inc
mov
and
or
mov
daa
add
add
mov
sbb
bound
rcl
push
push
cmp
mov
xor
mov
pop
add
test
adc
aas
imul
adc
mov
push
pop
xor
pusha
mov
out
repz
push
cmc
cmp
int
push
dec
adc
lahf
or
(bad)
sbb
mov
lea
inc
mov
bound
mov
scas
cmc
mov
mov
je
xor
or
outs
sbb
cmp
push
cwde
mov
mov
sub
mov
outs
sub
fnstsw
adc
inc
jnp
jnp
mov
push
mov
cmps
ins
pusha
iret
jo
mov
movs
jle
out
sbb
mov
or
test
inc
push
call
sbb
pop
das
data16
in
ss
mov
pop
outs
lahf
enter
inc
push
hlt
push
pop
cld
sub
test
(bad)
scas
inc
inc
mov
pop
mov
gs
mov
mov
lahf
daa
xchg
inc
jae
pop
rol
push
test
lods
je
or
into
mov
ins
adc
arpl
xchg
mov
call
(bad)
sbb
cs
in
jns
mov
mov
push
xchg
mov
mov
adc
mov
xor
push
icebp
inc
daa
enter
inc
nop
ss
mov
xor
ret
ins
xor
out
cmp
sub
and
sub
or
imul
dec
loopne
jb
or
or
pop
push
retf
iret
test
pop
xor
call
sbb
jae
daa
lods
gs
adc
or
loop
inc
fisub
movs
adc
popa
into
xchg
inc
cmp
les
pop
popf
aaa
ja
pusha
imul
xchg
lea
mov
xchg
inc
mov
pop
or
out
aas
lea
sub
dec
shl
xor
dec
neg
or
cs
jmp
cmp
je
mov
(bad)
fmul
jp
jne
pop
inc
mov
xor
jo
outs
fdivr
mov
iret
jmp
out
xor
sub
ficomp
sub
loop
fist
mov
add
mov
jne
imul
push
mov
mov
js
cmp
xchg
sub
lock
or
push
out
aam
cwde
mov
adc
fstp
pop
xchg
sbb
and
out
sub
push
xor
jbe
sbb
pop
cmp
mov
mov
ret
mov
or
fstp
clc
and
nop
clc
push
cmp
and
outs
mov
dec
pop
movs
ss
pop
push
dec
cmp
push
mov
sub
int
pop
nop
jae
jge
lds
xchg
pop
cld
lock
jmp
pop
push
inc
sub
cmp
mov
adc
push
fld
out
(bad)
lock
cmps
xor
sbb
xchg
int3
inc
sbb
or
add
xor
xchg
mov
mov
call
push
cmps
xor
jne
xchg
jg
scas
or
jns
aam
mov
mov
push
retf
arpl
push
dec
cmc
fdiv
mov
fistp
scas
int
imul
mov
mov
or
adc
aas
xchg
mov
cmp
fisub
or
rol
ret
jmp
mov
and
imul
scas
xor
xor
dec
cmp
daa
aam
sbb
xor
cmp
and
ret
cdq
jle
imul
aam
mov
shr
fdivr
mov
and
push
int
hlt
pushf
sub
jmp
pop
addr16
inc
fs
int3
lods
popf
div
cmc
jp
call
sbb
inc
retf
mov
sub
mov
or
mov
ud2
fcomi
jne
jl
sub
ds
lods
in
imul
mov
cmp
add
js
out
fbstp
or
rol
inc
inc
push
mov
pop
jmp
neg
mov
xor
and
fisttp
in
stc
xchg
into
sub
scas
(bad)
loopne
xlat
xor
jecxz
div
outs
xor
lea
out
add
pop
add
ds
sbb
in
addr16
ss
je
aaa
xor
cmps
enter
push
mov
mov
add
repnz
xor
addr16
aaa
loope
xchg
push
mov
fiadd
sar
dec
lods
icebp
and
test
xchg
dec
mov
aam
lea
xchg
cs
inc
cmp
popf
inc
adc
sub
pop
sub
push
(bad)
(bad)
sbb
mov
jle
ins
cmp
js
rcr
push
push
sub
and
add
xor
adc
add
lds
mov
inc
test
mov
and
test
xor
adc
jge
xchg
fild
xlat
adc
das
addr16
pop
mov
(bad)
fmul
jnp
or
das
pop
in
imul
mov
fiadd
popf
(bad)
ret
or
dec
enter
mov
aam
repnz
dec
pop
push
mov
dec
xchg
push
cmc
mov
jno
(bad)
aam
cdq
in
faddp
add
xor
dec
cmp
jb
jmp
xchg
mov
mov
dec
xchg
scas
jmp
aam
(bad)
retf
sub
pop
and
sbb
inc
push
mov
scas
mov
(bad)
xchg
test
ds
fisttp
mul
inc
movs
in
xchg
or
(bad)
sub
xor
in
fld
rol
sbb
add
aam
out
das
cmp
add
(bad)
push
retf
mov
cdq
inc
add
and
mov
in
mov
loopne
xchg
shr
mov
lahf
jb
fsub
das
mov
cmp
cmps
repz
mov
ror
(bad)
cld
mov
clc
adc
sar
aas
add
push
and
(bad)
fwait
hlt
lahf
jp
out
rol
les
add
jle
fcomip
ror
mov
pop
(bad)
repz
and
lock
jmp
sbb
aaa
push
inc
jo
mov
jl
clc
aad
mov
cmp
movs
mov
test
scas
lahf
adc
aaa
pop
push
shr
cmp
mov
mov
add
or
pop
mov
dec
daa
das
rcr
cmc
jae
jecxz
cmp
or
add
in
mov
push
xchg
in
push
and
xchg
repnz
outs
iret
stos
shl
into
sahf
fiadd
jg
sar
fcmovnu
jmp
mov
cld
ret
sbb
icebp
fbld
jp
xchg
inc
sbb
inc
mov
adc
sbb
mov
scas
cdq
push
cmps
movs
rcr
aaa
stos
cmp
hlt
add
lahf
fmul
es
xor
sbb
hlt
adc
xor
mov
dec
and
mov
arpl
xlat
lods
xor
mov
and
movs
xor
ds
or
lods
pusha
cmp
mov
je
int3
cwde
sbb
jnp
jnp
loop
xchg
in
leave
ds
bound
adc
mov
mov
iret
sbb
push
cmp
or
fist
pop
push
cmc
int3
ds
push
cmp
cli
mov
and
icebp
jae
mov
xor
(bad)
data16
jo
mov
or
out
mov
cmp
out
xchg
cdq
les
ss
in
and
adc
scas
xchg
test
popf
adc
pushf
xchg
fist
stos
push
pop
ficomp
mov
addr16
neg
inc
adc
push
test
les
les
movs
in
mov
addr16
push
dec
inc
pusha
push
adc
cdq
movs
mov
mov
jbe
cmp
add
pop
fimul
push
fld
jns
gs
call
xor
pusha
push
fwait
jmp
cmp
in
das
test
jne
pusha
in
popf
and
mov
sbb
mov
xor
sbb
pop
movd
cmp
loope
cmps
pop
arpl
or
retf
aas
xor
cwde
pop
jg
xchg
sub
imul
fst
inc
mov
mov
add
fdiv
cld
jg
aad
test
push
int
sub
add
push
pop
push
push
lods
mov
rcl
stos
in
mov
mov
sbb
pusha
jbe
stos
scas
fcmovbe
xchg
in
xchg
or
cmp
pop
inc
mov
call
sbb
icebp
int
cmp
jmp
fs
imul
mov
stos
pop
test
sub
ror
push
jmp
cmps
std
neg
add
adc
out
xor
xchg
es
xsha256
cmps
push
bswap
dec
jge
sub
(bad)
xchg
lock
inc
pop
cmc
pop
xchg
lock
mov
(bad)
es
push
xchg
jmp
cmp
and
imul
mov
pop
popf
jno
sbb
dec
jmp
xchg
or
scas
enter
sub
sbb
add
cmp
adc
out
dec
outs
fisubr
call
cmps
callw
mov
neg
call
fst
fcomp
je
cmps
fdiv
test
lods
push
and
push
js
in
push
test
push
test
push
and
in
outs
jb
jl
jns
dec
mov
jne
jg
push
movs
jno
popa
sahf
xor
call
mov
ret
fst
movs
mov
mov
scas
or
fwait
gs
imul
fistp
jecxz
shl
cmp
mov
mov
cmps
clc
shl
sbb
inc
inc
ffreep
inc
xor
pop
pop
mov
jno
nop
out
in
rcr
imul
cmc
cmc
sub
push
xchg
out
cmp
inc
stos
int3
lea
(bad)
xchg
outs
icebp
movs
fdiv
jmp
cli
sti
call
or
(bad)
adc
dec
pop
pop
mov
das
push
sbb
lods
mov
and
xchg
iret
pop
lods
cmps
rol
mov
lds
mul
cmp
dec
jp
mov
xor
mov
push
or
mov
jne
test
push
inc
fadd
int3
sub
(bad)
jmp
or
ffreep
inc
jmp
adc
inc
or
push
xchg
jg
mov
es
mov
icebp
dec
inc
mov
pop
fcom
cwde
jp
inc
ja
stos
sahf
movs
les
mov
in
inc
mov
xor
mov
mov
inc
add
daa
mov
inc
adc
add
cmp
(bad)
leave
das
push
and
adc
inc
aam
sbb
xor
test
inc
and
punpcklbw
pop
fistp
sbb
pop
jge
iret
loop
cmps
lods
aas
ror
xchg
xor
inc
fsubr
xchg
pop
mov
push
repz
pop
adc
inc
pop
and
cmp
adc
rcr
pop
(bad)
fdivr
stos
rcr
(bad)
xor
sub
or
sub
or
add
or
and
and
pushf
sub
jbe
bound
pop
mov
xor
sub
push
addr16
lea
aad
mov
rep
xor
out
lods
push
and
mov
jnp
pop
(bad)
int
shl
cli
daa
ins
(bad)
dec
push
inc
push
js
mov
dec
adc
scas
lods
cwde
adc
fst
pop
retf
test
stos
pop
cdq
pushf
arpl
jl
scas
lods
dec
ss
or
add
xor
sbb
inc
xchg
pushf
xor
out
cld
bound
test
pusha
mov
(bad)
jmp
pop
outs
xchg
mov
xor
add
pop
fs
mov
cdq
dec
mov
xor
add
inc
arpl
fwait
dec
push
lds
mov
sbb
or
dec
stos
pushf
movs
mov
add
mov
jle
arpl
xchg
xchg
into
lea
pop
ins
pop
cmp
lods
je
fwait
sub
addr16
lea
(bad)
dec
push
xchg
call
mov
imul
enter
mov
ins
add
inc
cs
nop
adc
and
or
lds
loop
sub
mov
dec
scas
add
inc
test
jne
adc
dec
enter
mov
dec
mov
push
stos
enter
sahf
retf
and
stc
inc
jno
and
mov
cdq
xor
repnz
cld
mov
mov
push
jl
mov
mov
push
jno
arpl
scas
aam
adc
pop
pop
jp
movs
adc
mov
xor
push
xor
sbb
(bad)
call
push
mov
psubd
jmp
pushf
lock
adc
mov
dec
in
hlt
int
pop
lock
xor
pop
rol
aam
fst
imul
inc
push
xchg
xor
sbb
mov
stc
retf
ror
sub
jns
inc
xor
sub
test
(bad)
sti
hlt
mov
push
lahf
and
cmp
mov
cdq
outs
or
in
jb
mov
mov
(bad)
xor
aad
jmp
inc
mov
ficom
jle
fbld
scas
mov
into
gs
lea
retf
and
mov
and
sti
add
mov
jnp
(bad)
pusha
jmp
retf
xor
push
mov
pop
cld
addr16
push
test
jg
add
sub
xor
sbb
push
cmp
dec
jnp
daa
movs
jnp
push
mov
ficom
xor
pop
lock
or
or
cmps
shl
jo
div
and
xchg
mov
sbb
fsubr
mov
pop
add
lods
pop
bound
pop
out
add
in
repz
fsubr
pop
out
shl
test
xchg
mov
(bad)
mov
dec
mov
sub
add
and
mov
xlat
inc
leave
loopne
and
pop
cs
xor
adc
sahf
inc
mov
dec
aas
inc
std
cmps
pop
fild
mul
pop
adc
loope
xchg
(bad)
jno
jne
adc
adc
xor
nop
sti
fbld
jne
test
fld
je
jnp
ss
addr16
push
dec
fwait
mov
std
cmp
inc
dec
jae
ja
dec
fwait
pusha
push
(bad)
enter
imul
xor
(bad)
or
cmp
popf
push
xchg
lock
stos
jmp
ins
pop
leave
scas
pop
and
push
int
arpl
pusha
dec
mov
jmp
or
enter
ins
mov
jmp
lods
mov
xchg
pop
mov
add
sti
(bad)
cmp
sbb
fdivr
xor
fwait
repnz
add
jnp
pop
aaa
xor
jmp
sub
pop
js
scas
ret
push
adc
stc
pop
mov
cmc
stc
retf
cmp
xor
inc
mov
imul
cwde
outs
mov
push
adc
mov
inc
fnstcw
loopne
inc
lock
cdq
inc
inc
leave
dec
es
jle
push
push
repnz
xchg
mov
jo
or
(bad)
pushf
push
lahf
or
(bad)
mov
mov
cld
(bad)
xor
stos
pusha
out
imul
push
int3
pushf
fnsave
jl
pop
cmps
or
cmp
fiadd
xchg
or
clc
(bad)
sub
adc
ret
cmps
pop
pushf
ds
test
out
les
out
bound
lods
inc
inc
mov
push
add
fld
ins
adc
xor
xchg
jmp
inc
rcr
out
dec
xor
fstp
je
aam
repnz
and
int
push
or
adc
cmp
popa
add
jl
mov
mov
loopne
ret
js
xchg
cld
mov
pop
es
or
sub
retf
and
int3
mov
rcl
into
or
retf
sbb
cli
cs
jmp
sti
pop
je
and
xchg
in
test
cmp
mov
in
nop
dec
mov
and
and
mov
stos
xor
cmps
mov
jl
scas
popf
jo
cmps
sti
int3
mov
movups
jnp
xchg
jecxz
push
imul
and
and
sub
sbb
nop
and
shr
dec
les
ret
mov
mov
sub
outs
movs
jo
sub
cmp
ret
jmp
int
jle
dec
xchg
and
cmp
dec
f2xm1
lods
rcr
push
mov
stos
scas
cdq
xchg
sbb
sub
mov
jl
cmp
mov
retf
lods
fistp
or
push
push
pop
leave
rcl
jne
and
fadd
mov
les
out
cmp
lea
gs
neg
push
(bad)
and
or
std
out
sbb
mov
rcr
repz
lods
popf
dec
inc
push
leave
stc
jecxz
test
add
fistp
mov
popf
gs
iret
mov
sub
sbb
pop
shl
mov
imul
fst
mov
(bad)
xor
leave
stc
cmps
pop
pushf
pop
das
mov
mov
test
or
sub
pop
mov
inc
xor
adc
adc
mov
mov
or
test
clc
aam
(bad)
sahf
push
daa
push
test
enter
sbb
mov
ss
xor
in
sahf
fs
(bad)
fiadd
jmp
nop
or
xlat
arpl
aaa
jo
cmp
sbb
jmp
dec
cli
out
test
and
inc
ss
ins
(bad)
xchg
sbb
xor
pop
sti
jnp
sbb
aas
fidiv
cdq
movs
sub
in
retf
pop
adc
outs
into
mov
stc
pop
or
inc
repz
cmc
pop
or
pop
pop
xlat
push
pop
mov
inc
lods
sub
outs
mov
xchg
vmwrite
ins
dec
cmp
repz
push
fwait
ins
cmps
mov
rol
xor
jne
nop
cmp
cwde
or
inc
jbe
mov
mov
adc
jmp
(bad)
jp
xor
sub
idiv
scas
or
ret
xchg
sbb
js
(bad)
xchg
cmp
push
jge
pop
ret
cmp
lock
jge
or
xlat
jo
int3
in
loope
sbb
mov
mul
in
lock
cmp
xchg
adc
(bad)
pop
outs
inc
cmp
loopne
scas
xor
jecxz
ins
cwde
adc
hlt
sub
stos
fldenv
push
sbb
inc
sub
mov
sbb
jg
call
clc
int
not
inc
das
and
ins
cmc
pop
jnp
dec
pop
repz
adc
repnz
cmp
cmp
aaa
mov
(bad)
movs
jnp
sbb
retf
cmp
dec
sbb
scas
dec
bt
leave
sbb
mov
pop
mov
xor
push
test
dec
daa
add
gs
sbb
sbb
mov
leave
xlat
and
sub
sahf
sbb
sti
and
rcl
push
jns
sbb
and
push
jb
fcom
push
ins
lods
mov
or
pop
mov
adc
mov
add
stc
in
gs
mov
std
mov
(bad)
xchg
xor
in
mov
retf
mov
clc
rcl
push
ss
lods
or
mov
ds
fs
cmp
sbb
sub
shl
cwde
pop
mov
pop
and
jns
(bad)
cmp
jecxz
lea
xchg
pop
cmps
push
stc
retf
out
neg
pop
inc
inc
in
loop
test
out
push
mov
inc
adc
jl
pop
and
add
retf
dec
sub
lea
push
call
(bad)
idiv
push
adc
enter
push
lahf
jmp
inc
inc
sbb
jmp
cld
adc
fnstenv
and
into
push
sbb
cmps
(bad)
mov
jl
mov
repz
jg
mov
and
sub
mov
or
mov
in
lds
sbb
jae
bound
int
mov
fimul
jecxz
arpl
lahf
shl
pushf
jne
push
pusha
push
stos
pop
push
cli
pop
jmp
scas
in
sub
pop
jle
rol
out
mov
mov
mov
imul
sbb
jo
test
mov
(bad)
lock
jo
ss
and
sub
(bad)
(bad)
cmp
sub
mov
scas
out
test
dec
sar
int3
cmp
push
cld
jb
push
push
and
cdq
std
cs
add
jno
sub
jle
into
leave
enter
sar
push
scas
xchg
pop
add
retf
into
cmp
jmp
sbb
outs
movs
sbb
in
inc
call
mov
add
sbb
pop
(bad)
jb
test
leave
repnz
aad
mov
cmps
cmps
or
xchg
mov
ins
fcomp
xor
jnp
ja
push
or
enter
add
lea
cli
push
daa
xlat
mov
dec
in
jecxz
push
fs
ret
inc
lods
in
popa
dec
mov
mov
push
mov
rol
push
dec
jnp
sbb
xchg
and
out
push
pop
sbb
(bad)
mov
pusha
call
pop
mov
adc
mov
out
std
pop
clc
je
xchg
aam
and
and
aas
mov
lock
ss
cmps
inc
adc
cmps
hlt
lahf
retf
and
sbb
lods
aas
addr16
ss
and
popf
test
mov
out
in
dec
xchg
dec
in
or
pop
das
mov
add
jge
popa
jp
out
(bad)
aas
add
fnstcw
jecxz
jb
or
mov
push
add
(bad)
cmp
les
scas
push
out
jnp
jmp
fmul
and
adc
test
aam
sub
mov
xor
fldcw
xchg
stos
movs
pop
sub
nop
pop
cmp
shr
jmp
dec
dec
xchg
mov
jne
sub
mov
sub
call
in
aam
mov
push
mov
mov
jmp
jb
inc
pop
jg
cmc
cli
mov
inc
call
test
sbb
jg
jb
lock
push
xchg
sub
je
ins
mov
jg
sub
ss
or
pop
aad
push
inc
or
call
jae
int3
adc
ds
lods
mov
mov
jp
add
movs
bnd
sbb
adc
imul
add
imul
pop
dec
fwait
push
jns
leave
push
retf
jne
stc
mov
ins
push
sub
(bad)
or
push
push
ret
xchg
mov
mov
mov
lock
adc
mov
int
into
mov
iret
push
cmp
xor
fmul
clc
jb
push
in
inc
jmp
inc
loopne
mov
fimul
ins
inc
cmps
movs
das
scas
retf
or
xchg
sahf
or
fistp
sub
mov
push
arpl
int3
jmp
daa
imul
xchg
scas
mov
mov
xchg
or
mov
loopne
pop
or
push
daa
lds
(bad)
aaa
jb
pop
test
push
mov
cld
out
sub
cmps
fimul
sub
enter
sub
stos
mov
mov
lahf
sbb
cmp
push
jae
xor
cmp
inc
ja
pop
and
jp
rcr
out
retf
jmp
push
imul
out
test
adc
mov
or
ds
or
call
leave
idiv
mov
mov
loop
or
(bad)
and
enter
mov
adc
inc
fiadd
into
enter
pop
(bad)
outs
and
jns
add
mov
(bad)
in
lods
cdq
comiss
stos
xchg
lods
cwde
push
xchg
cmps
test
mov
int3
test
aaa
xchg
mov
sub
hlt
jecxz
sbb
mov
mov
adc
retf
sub
dec
es
mov
cmp
sbb
fsub
mov
inc
push
sbb
aam
cmp
mov
jge
out
inc
in
jbe
jge
je
xchg
sbb
mov
push
inc
xor
jmp
mov
(bad)
adc
mov
mov
popf
pop
jo
inc
bound
fnstenv
mov
jl
adc
lea
mov
adc
dec
lea
inc
loop
push
leave
loope
test
sub
jmp
sbb
fidiv
and
mov
outs
xchg
outs
jmp
fist
pop
adc
cmp
cmc
por
mov
(bad)
daa
pop
jl
sub
(bad)
push
mov
xor
adc
jle
inc
mov
sbb
and
sub
pop
xchg
jnp
jne
js
das
movs
loopne
fbstp
stos
inc
aam
mov
pop
gs
loope
pop
stos
mov
ins
loop
sbb
add
imul
mov
in
cdq
ja
js
xchg
add
(bad)
shl
ds
dec
mov
mov
cld
adc
add
stos
sbb
jge
and
retf
ret
fwait
add
loope
aam
sbb
or
aaa
leave
int3
movs
std
mov
rcl
mov
add
push
icebp
xchg
mov
int
sub
leave
sub
fisttp
(bad)
loopne
or
mov
xchg
xor
push
adc
pop
adc
jle
fwait
mov
or
mov
xor
shl
inc
dec
mov
xchg
push
jecxz
adc
dec
leave
adc
sub
out
inc
xor
jecxz
or
(bad)
sub
xchg
(bad)
push
ror
not
pop
lds
sbb
xchg
hlt
nop
or
in
jl
sub
jns
jno
sbb
mov
punpcklwd
and
lods
mov
sbb
xchg
jl
cmps
and
mov
xor
cmp
aas
xchg
push
sub
and
mov
adc
mov
jge
inc
lds
inc
(bad)
xchg
nop
sbb
or
test
mov
cmps
inc
mov
(bad)
lock
test
scas
jno
repz
jnp
sub
push
iret
int3
and
sbb
lds
push
xor
push
xchg
aam
stos
arpl
xchg
test
(bad)
pop
clc
pop
add
cmp
jmp
out
sahf
mov
shr
mov
fcom
xchg
or
stc
dec
mov
sub
sub
std
fwait
pushf
inc
cmp
cs
dec
xor
cmps
retf
into
mov
push
mov
mov
mov
dec
fs
xchg
inc
aaa
in
cmp
movs
pop
cdq
mov
leave
das
sbb
jle
shr
xor
lods
enter
push
cs
and
push
mov
in
adc
dec
inc
add
out
mov
fmul
iret
push
inc
sbb
sub
cmp
shl
shr
lods
mov
test
lock
fisttp
cmp
leave
mov
push
and
dec
mov
dec
aaa
or
or
or
jle
mov
ins
push
lock
hlt
enter
scas
lds
(bad)
sub
jne
call
data16
push
imul
bnd
dec
ds
(bad)
jno
ret
es
mov
cmp
(bad)
xchg
push
add
mov
(bad)
jmp
mov
or
mov
cdq
jmp
or
push
pop
inc
test
adc
stos
add
repnz
xchg
mov
cs
adc
mov
mov
sbb
shr
push
shr
add
enter
int
popa
sbb
mov
mov
bound
sbb
add
(bad)
push
mov
out
sub
xor
jne
fist
ret
xchg
jns
sbb
movs
mov
(bad)
js
push
in
aam
adc
retf
cmp
cmp
icebp
in
fiadd
push
push
mov
jnp
call
jmp
push
cmp
pop
shr
push
push
mov
push
cmp
in
and
push
repnz
push
push
add
pop
mov
inc
idiv
ins
mov
xlat
pop
inc
imul
inc
out
xor
les
push
imul
popa
or
(bad)
mov
out
inc
push
adc
xchg
xor
jbe
sub
push
sub
das
fdivr
add
sub
sbb
lock
stos
jno
mov
mov
std
fucomi
aad
pop
cmps
add
dec
cmp
nop
and
arpl
add
sub
mov
push
leave
mov
cld
lods
xor
jmp
retf
outs
int3
mov
mov
pop
xchg
outs
add
ins
xor
xchg
push
je
xor
dec
arpl
enter
sbb
stc
sub
or
mov
sub
imul
popf
mov
push
jo
ror
dec
and
mov
je
loop
sbb
pop
fwait
add
(bad)
scas
out
bound
(bad)
out
dec
jno
cmps
xchg
bound
sub
cdq
dec
mov
cmps
fidivr
jo
cmp
jo
mov
sbb
(bad)
dec
xor
test
leave
movs
sub
mov
push
pop
dec
cmp
(bad)
pxor
push
pusha
mov
cmp
mov
test
pop
hlt
sahf
or
jl
push
loop
jbe
iret
jecxz
mov
xor
add
pop
inc
dec
or
mov
out
push
pop
mov
cld
aaa
scas
mul
push
add
loop
pop
(bad)
sub
cmps
add
daa
mov
sbb
dec
sub
inc
pop
sar
mov
das
cmp
outs
mov
dec
sbb
xchg
clc
cdq
xor
cmc
bound
sbb
rcr
(bad)
fs
add
ror
shl
out
call
push
imul
jb
mov
(bad)
push
stc
and
call
not
out
test
mov
push
nop
push
test
les
jg
in
push
and
outs
xchg
xor
inc
xor
push
pop
jns
pop
pushf
mov
cs
push
mov
loop
push
push
in
mov
scas
scas
push
in
sbb
add
add
aas
stc
inc
cmc
and
arpl
adc
xor
jg
inc
std
movs
aas
(bad)
mov
stos
push
lock
movs
fs
cld
(bad)
add
imul
fsubrp
cmp
cmp
lahf
jo
mov
pop
xchg
mov
xchg
cmp
dec
inc
cs
jle
sahf
lods
sub
dec
push
jecxz
add
mov
fnstcw
stos
in
jo
jnp
jbe
dec
retf
dec
outs
std
push
mov
data16
mov
pusha
cmp
cmp
dec
leave
sar
cld
xor
in
jne
clc
clc
xchg
xchg
mov
add
jo
(bad)
in
inc
push
call
pop
adc
jo
repz
mov
mov
mov
cmp
pushf
sub
jo
es
mov
out
mov
nop
jp
push
stc
dec
pop
xlat
xlat
(bad)
mov
cmp
clc
inc
fmul
ss
retf
push
test
ins
jb
repz
sar
mov
jmp
mov
mov
lock
dec
out
push
cmp
jecxz
dec
xchg
mov
hlt
dec
ret
fdivrp
cmp
inc
cmp
xchg
sub
xor
push
xchg
loopne
aaa
adc
push
frstor
add
das
sub
push
or
in
xor
sbb
add
(bad)
and
inc
clc
pusha
fadd
cmp
popf
es
pop
(bad)
push
push
push
jecxz
cwde
xchg
pop
cdq
dec
fcomip
or
(bad)
ins
inc
jl
scas
test
pop
push
js
sar
sub
in
(bad)
out
pop
es
cmp
ins
lea
push
mov
xlat
pop
into
icebp
push
adc
dec
mov
mov
xor
shl
out
fcomp
movs
sub
add
jno
nop
push
(bad)
mov
jae
mov
mov
mov
mov
adc
cmovno
inc
fwait
jecxz
push
test
jo
out
push
mov
sbb
xchg
cmp
mov
jmp
aaa
fistp
sub
hlt
inc
ror
lahf
mov
inc
sub
dec
jns
add
imul
call
jmp
hlt
dec
ins
inc
(bad)
int
addr16
and
test
xchg
push
add
push
add
inc
cmp
push
jne
daa
aas
(bad)
push
adc
xor
mov
push
inc
test
in
mov
out
out
int3
dec
mov
fnstsw
inc
ret
mov
cli
sub
mov
dec
sub
mov
js
jno
aad
in
mov
jecxz
jge
or
dec
push
js
or
push
cmp
mov
jmp
popa
inc
push
call
cmp
add
cmps
call
lock
pop
jbe
xchg
inc
xor
into
dec
mov
jge
hlt
sar
pop
mov
imul
out
ss
cwde
cmp
movs
pop
(bad)
lds
push
in
xchg
iret
loope
ds
lods
loopne
cmp
jmp
dec
mov
or
ins
cs
mov
loope
aad
cmps
push
cld
in
es
mov
push
cmp
cs
pop
cmp
fwait
jnp
in
aam
outs
clc
ds
scas
xchg
sar
cmp
xchg
and
sub
mov
xchg
jnp
aaa
push
inc
lahf
not
(bad)
out
xor
pusha
in
arpl
add
test
int
sti
jp
mov
push
outs
ins
mov
cmp
and
adc
aaa
retf
sbb
mov
adc
jns
push
jns
pop
fnstenv
xchg
ins
jb
dec
xchg
outs
dec
ja
adc
jl
sub
retf
clc
popf
sub
xchg
in
data16
enter
and
test
ror
int3
jmp
nop
mov
into
xlat
ds
and
jbe
pop
jae
aaa
dec
inc
sbb
out
mov
lods
rcl
repz
or
gs
fidivr
test
fild
inc
sbb
(bad)
aas
dec
call
pusha
dec
xchg
add
out
popf
sub
or
pop
dec
cwde
mov
mov
ret
jg
cmps
pop
aas
(bad)
fnstenv
ficom
sub
cmp
add
cmp
mov
dec
jns
pop
dec
je
(bad)
pop
test
ret
mov
or
in
jb
mov
inc
push
jo
or
mov
or
push
(bad)
mov
mov
js
push
xchg
ja
(bad)
xor
mov
movs
add
lea
test
(bad)
shl
cmc
adc
jecxz
shr
adc
call
or
inc
mov
xor
ror
dec
xor
xchg
sbb
(bad)
sub
repnz
sub
ror
cmps
les
cmp
dec
cmp
push
scas
dec
mov
jmp
jecxz
adc
outs
jp
cdq
cmps
outs
sbb
inc
xor
xor
imul
or
push
into
push
push
cli
mov
clc
cmc
icebp
add
pop
repz
aaa
jo
push
add
test
test
adc
cmp
sub
cs
into
shl
pushf
add
push
cmp
mov
stos
lods
push
in
dec
les
jne
mov
icebp
jb
es
jo
sub
xchg
xchg
jmp
adc
sub
adc
cmp
call
lahf
retf
mov
jne
sbb
arpl
mov
push
push
push
mov
outs
pop
pushf
(bad)
data16
dec
push
les
(bad)
test
mov
xchg
mov
fisub
push
scas
mov
or
aas
dec
out
repz
ret
mov
sub
sbb
push
mov
test
mov
repz
cmp
xchg
dec
inc
jmp
stos
stos
xchg
lods
pushf
out
xchg
ret
or
fild
in
out
add
push
mov
mov
aad
cwde
xchg
repnz
sbb
test
les
stos
fwait
pop
jmp
xchg
iret
sbb
cmp
test
inc
xor
sbb
xchg
in
ret
sub
cmp
inc
mov
or
pop
(bad)
mov
pop
mov
mov
and
ficom
pop
les
fcom
das
push
mov
test
pop
rcl
push
(bad)
mov
aaa
pushf
xchg
movs
and
push
cmc
(bad)
(bad)
mov
sub
jae
and
data16
sub
jae
(bad)
loop
aaa
dec
jp
es
mov
add
iret
out
out
test
xor
pop
out
les
jl
xor
aad
cmp
mov
xor
movs
cmp
or
pop
addr16
fimul
outs
mov
enter
test
ja
mov
xlat
or
addr16
xchg
or
adc
test
imul
dec
retf
lea
cs
out
xor
or
mov
cmp
cmc
mov
sti
adc
mov
(bad)
xor
ds
rol
rcl
(bad)
call
xor
jns
add
push
push
fs
aam
sub
in
das
mov
dec
inc
pop
mov
lods
loopne
ds
mov
sbb
(bad)
fadd
push
mov
test
add
nop
outs
les
sahf
cld
xor
push
mov
sub
(bad)
out
imul
or
imul
push
lods
leave
out
sub
movs
sbb
add
sub
ins
pop
xchg
out
aaa
xor
xor
enter
jge
mov
and
call
jmp
loopne
adc
cli
mov
push
cdq
mov
push
ja
clc
sub
or
daa
pushf
cmps
not
enter
push
ins
jl
out
cli
sbb
cli
mov
fstp
adc
mov
stos
or
pushf
fnstenv
mov
jnp
xchg
aaa
adc
lods
or
int
adc
cmp
mov
xchg
inc
lods
and
mov
stc
out
cmp
pop
mov
sbb
xor
std
mov
les
or
scas
pop
fld
add
jmp
push
sbb
adc
jno
sbb
cmp
mov
mov
fst
pusha
stos
pop
aaa
and
cmp
in
sti
xchg
repz
push
sub
fadd
lock
das
and
mov
leave
add
push
retf
cld
hlt
cwde
iret
jae
xor
mov
mov
mov
push
aas
fsubr
jl
leave
(bad)
ffreep
mov
xor
fs
mov
sti
lods
jns
sub
js
(bad)
in
add
jnp
cmps
fmul
ja
dec
(bad)
out
addr16
dec
and
and
sub
loopne
mov
mov
imul
por
dec
xor
aas
dec
mov
stos
loope
movs
dec
int
push
stos
addr16
add
mov
push
jmp
push
out
imul
inc
cs
pop
inc
jo
and
stos
adc
dec
add
jb
ins
add
xor
and
mov
xor
pop
jno
sbb
push
push
cs
in
jmp
mov
mov
(bad)
or
sbb
inc
xchg
sbb
jl
rcl
not
and
dec
push
xchg
rol
inc
jmp
dec
lock
pop
mov
out
in
sub
xchg
pop
data16
mov
fwait
(bad)
cmp
and
nop
imul
dec
scas
add
shr
daa
mov
pop
sub
mov
cs
pop
daa
loop
mov
stc
inc
cmps
popf
add
ss
xchg
and
dec
lods
stos
push
fwait
jecxz
inc
push
int
inc
int3
sbb
add
mov
outs
adc
dec
mov
jmp
cmp
lea
ds
rcr
mov
bound
cdq
lds
mov
rcl
out
test
or
push
jp
push
repz
clc
mov
pop
(bad)
jb
jle
movs
jb
cmps
stc
jae
mov
test
(bad)
xchg
xchg
xor
(bad)
stos
add
pushf
jp
ins
mov
jbe
push
outs
sbb
pop
inc
or
sub
mov
jb
push
fbstp
xchg
sub
mov
int
inc
dec
in
push
fimul
jp
cmps
add
jae
mov
pop
js
dec
cld
test
iret
dec
aas
sub
inc
add
push
pop
fwait
mov
jge
sbb
repz
or
dec
xchg
outs
repz
mov
sti
push
mov
mov
and
leave
aam
lock
(bad)
cld
dec
lds
jns
sbb
and
loope
jecxz
shl
pushf
mov
jmp
cmp
in
bound
jae
or
mov
ror
inc
or
into
cmp
in
and
sbb
test
ret
xchg
shl
mov
add
or
es
push
mov
xlat
out
inc
jae
push
inc
mov
icebp
sbb
ror
test
mov
adc
add
jmp
cmp
cmps
mov
pushf
cmp
inc
imul
ins
retf
shr
mov
xor
and
push
or
lods
adc
or
push
or
mov
pop
mov
outs
xchg
pop
sbb
pop
cmp
pop
ins
and
jl
xchg
push
sub
sti
hlt
push
shr
inc
pop
stc
adc
sti
cmp
xor
je
or
inc
adc
pop
in
hlt
add
aaa
dec
jle
jne
lea
call
pop
js
lds
stc
scas
push
call
repnz
loop
int
mov
sahf
xadd
(bad)
dec
and
inc
ds
les
xor
mul
mov
mov
push
xchg
mov
push
mov
mov
dec
das
iret
fist
cmp
sti
ret
xlat
jb
and
add
rcl
jmp
adc
jbe
pusha
iret
ror
jge
xchg
aas
jnp
ins
push
fisttp
or
xlat
mov
int
in
popa
ins
sub
jmp
sbb
sub
lahf
mov
pop
push
lock
loop
jp
fistp
(bad)
and
push
xor
jmp
arpl
sbb
adc
mov
ja
or
outs
cmp
sub
mov
cld
mov
sbb
push
inc
mov
in
xor
lods
cwde
push
aam
rdtsc
cmp
or
add
shl
push
stos
and
ja
push
sbb
jo
(bad)
xor
or
iret
int3
mov
mov
push
xchg
sbb
jl
ror
push
(bad)
loopne
sub
in
jl
inc
inc
cmps
sub
inc
sub
imul
neg
inc
xchg
fwait
xchg
xchg
ja
xchg
int3
shl
xor
add
(bad)
xchg
sub
shr
adc
sbb
out
test
loopne
ror
repnz
xchg
sub
jp
adc
sbb
loopne
ficomp
jae
inc
lods
in
(bad)
in
add
call
stos
adc
push
int
aam
lahf
gs
rcr
mov
inc
xor
lock
inc
cmps
fwait
mov
xchg
movs
lahf
clc
pusha
dec
pop
inc
inc
shl
pop
jae
push
fisubr
mov
jno
push
dec
and
mov
adc
(bad)
inc
pop
fdivr
bound
vunpckhps
adc
shl
mov
cmp
mov
cmp
movs
push
mov
push
jmp
retf
imul
inc
dec
adc
xor
iret
lds
and
mov
cmp
fmulp
test
clc
dec
dec
ret
and
fist
loopne
call
push
mov
fldenv
lods
enter
mov
into
push
stos
pop
mov
imul
call
rol
jbe
(bad)
call
push
mov
add
jmp
mov
jge
xchg
dec
cwde
ret
mov
jo
inc
pop
push
sub
ret
ins
outs
mov
leave
popf
out
sbb
jae
nop
stos
sbb
dec
stos
inc
inc
cmp
sbb
or
xor
add
lds
lds
mov
cmp
push
xchg
mov
scas
xor
mov
mov
cdq
jge
imul
xchg
push
test
cmp
inc
and
fidiv
out
popa
cmps
enter
rol
pushf
(bad)
enter
rol
(bad)
pop
push
aaa
fisubr
loop
mov
aas
xchg
jge
cmp
enter
adc
and
test
cdq
data16
repz
mov
in
mov
(bad)
push
jmp
mov
ficomp
outs
pushf
mov
mov
mov
xchg
out
dec
(bad)
out
inc
mov
or
mov
fs
sub
mul
leave
mov
lods
dec
lods
mov
gs
push
mov
fld
push
cld
fscale
retf
lods
mov
pop
push
pusha
sub
loope
ds
xchg
fcomi
and
inc
shr
in
aaa
test
jg
fbstp
inc
ret
xchg
sub
scas
jmp
inc
in
jbe
and
movs
jb
aam
jle
(bad)
out
inc
push
retf
cmp
and
pop
iret
and
sub
adc
arpl
ja
cmp
inc
sbb
retf
ds
ins
pop
(bad)
cmc
aad
sahf
ins
sub
ds
pop
or
movs
repz
popa
mov
popf
dec
push
jno
jno
push
cmp
enter
test
aam
sbb
pop
xchg
sbb
inc
adc
lds
call
retf
lock
dec
push
in
cmp
xor
js
retf
mov
jne
and
sbb
loope
fsubr
loop
xor
test
push
aas
mov
jbe
rol
sub
pop
ficomp
xchg
xor
outs
jo
cmp
rcl
jl
rcr
outs
xchg
jmp
xor
pop
inc
pop
or
and
adc
dec
cmc
xchg
cmp
mov
jne
inc
pop
jmp
cwde
and
push
push
jns
jle
sub
test
xor
in
aas
cmp
test
shl
(bad)
adc
shr
pop
jne
lods
xchg
jecxz
retf
das
rol
aad
mov
mov
pop
mov
or
add
push
dec
enter
shr
call
add
or
idiv
add
fcomp
sub
dec
jno
or
xchg
or
mov
mov
arpl
jle
dec
and
mov
mov
cmp
out
and
std
sar
jnp
stc
in
addr16
(bad)
out
pop
xchg
(bad)
enter
mov
popf
xor
and
loope
test
push
or
cld
pop
int
jle
repz
push
jo
cli
push
ja
push
out
ror
xor
retf
xor
gs
iret
cmc
std
push
popf
shr
lock
(bad)
sbb
mov
xlat
cmp
and
push
clc
fs
jp
test
xchg
sub
mov
sti
pop
pop
pop
mov
clc
js
in
mov
movs
inc
jmp
fs
out
inc
and
in
jge
xor
aad
push
comiss
jae
jg
std
inc
cli
into
rol
push
sbb
push
fistp
xchg
adc
jmp
scas
lea
cdq
or
call
test
push
push
jbe
pop
dec
mov
add
rcr
test
pop
jbe
shr
(bad)
and
sbb
pop
outs
fisubr
inc
call
ror
push
enter
lods
push
outs
in
popf
(bad)
iret
add
jbe
mov
inc
shl
adc
imul
mov
int
adc
push
in
retf
loopne
and
bound
push
inc
cwde
xlat
js
adc
xchg
ins
mov
fstp
test
std
(bad)
loopne
or
movs
stos
adc
xor
repz
and
cwde
das
fcom
test
sbb
addr16
retf
jge
imul
repnz
add
cmp
aaa
jle
retf
call
cmp
loop
aaa
aas
pop
dec
ret
icebp
mov
fucom
sub
iret
mov
jl
fdiv
out
inc
popf
into
cs
and
imul
and
outs
fisubr
loope
sahf
arpl
sbb
mov
xor
stc
sbb
cli
inc
repz
cld
or
arpl
or
cmp
(bad)
cmp
dec
call
pop
pop
movs
fidiv
fdivr
lods
aad
xchg
inc
or
ret
nop
ds
(bad)
imul
cmp
jmp
ret
xchg
jmp
lods
pop
mov
xchg
popa
mov
fwait
mov
adc
div
cmp
mov
adc
stc
inc
pop
retf
xchg
dec
pop
bound
xchg
sbb
lock
jno
sbb
push
test
adc
cmp
mov
nop
adc
pop
mov
jecxz
stc
clc
mov
push
sub
or
push
mov
fidivr
dec
xchg
cmc
scas
into
pop
jle
mov
jg
ds
int3
aam
ds
jle
mov
mov
fwait
(bad)
jecxz
xchg
movs
packuswb
mov
call
jmp
and
mov
pop
sub
xchg
pusha
stos
popf
lds
cmp
pop
in
xor
rcr
imul
or
aad
dec
push
sbb
data16
fisub
cmps
and
outs
cwde
hlt
pop
fiadd
cmp
imul
div
popa
loopne
int3
(bad)
in
inc
mov
jecxz
dec
call
add
das
and
cmc
les
sbb
or
ds
sbb
(bad)
sti
jbe
cld
fdivrp
cmps
xchg
sub
leave
arpl
pop
out
dec
test
out
mov
and
popf
xor
pop
mov
add
cs
aas
(bad)
cmp
les
enter
clc
inc
int
cwde
push
fucomp
add
iret
test
push
loope
movlps
sbb
loopne
fstp
fwait
popfw
mov
mov
rcr
jmp
out
clc
fsub
inc
add
add
fwait
test
into
js
adc
xlat
pop
pop
scas
cmc
in
ins
push
imul
ins
out
sar
or
mov
std
pop
jp
arpl
xchg
jae
xor
arpl
mov
mov
test
pop
mov
cmp
test
outs
xchg
xchg
(bad)
aas
dec
mov
dec
sbb
inc
or
xor
sbb
xlat
nop
gs
pop
outs
loopne
bound
nop
neg
retf
inc
ins
(bad)
xor
out
je
mov
out
mov
jge
mov
add
je
add
test
pushf
xchg
(bad)
jo
push
mov
cmp
aam
adc
and
cmp
jmp
fistp
sbb
out
mov
dec
es
(bad)
int3
shl
jge
dec
fisubr
in
jno
mov
jmp
aam
dec
push
mov
fidiv
imul
gs
jmp
clc
jl
cmp
fucomp
hlt
mov
int
repz
pop
cmp
ficom
push
push
mov
xlat
das
jnp
cwde
stc
jns
sbb
ss
ss
clc
mov
add
inc
inc
push
jmp
sub
pop
test
xchg
pop
sub
jns
or
cmp
retf
or
push
movs
lock
sub
xchg
movs
fld
sub
in
(bad)
dec
je
xor
fdiv
mov
add
mov
mov
xor
rcr
loope
popf
repz
xor
xchg
push
in
mov
in
lahf
sbb
inc
push
and
mov
mov
js
loopne
aaa
dec
adc
div
fwait
xchg
push
mov
pop
in
push
inc
jl
aad
outs
dec
sub
out
dec
in
mov
push
or
pop
add
sbb
mov
inc
mov
les
add
or
int3
dec
ss
fnstenv
inc
test
xchg
fs
daa
fistp
loopne
sahf
push
addr16
cmps
mov
add
dec
push
xchg
and
iret
inc
sbb
(bad)
repz
mov
fs
xchg
and
pop
cmp
pop
xor
and
hlt
adc
sbb
pop
pusha
push
pop
in
mov
(bad)
bound
ret
int3
jno
jecxz
fcmovnbe
cmp
sbb
in
into
cmp
mov
(bad)
ds
jae
xchg
jecxz
fild
sub
dec
mov
sbb
mov
cmp
cmp
sub
cld
xchg
mov
lods
push
jb
outs
clc
loope
and
mov
or
ds
xchg
mov
jge
fwait
xor
inc
push
lods
(bad)
std
add
jg
xchg
popf
outs
test
or
inc
push
aam
mov
push
xchg
jle
mov
sub
sbb
js
ins
push
stos
test
out
(bad)
shr
jmp
push
pop
mov
inc
in
jmp
and
loope
mov
ja
mov
fnstcw
xor
psubsb
push
or
pop
dec
stos
push
fisub
cld
jae
mov
push
jb
sbb
cmp
inc
push
in
dec
cmp
dec
clc
xchg
inc
out
not
gs
addr16
jne
fld
scas
cld
in
neg
xchg
xchg
push
rol
(bad)
xchg
jmp
pusha
inc
cmc
cmps
pop
dec
imul
pop
dec
sub
mov
mov
rol
retf
push
mov
js
mov
mov
xchg
inc
mov
push
(bad)
pop
add
dec
into
popf
add
test
pop
(bad)
fmulp
mov
movs
loop
mov
mov
test
or
or
ss
and
dec
lods
imul
aaa
pop
aam
cmc
das
xchg
js
lea
add
rcl
pop
or
dec
mov
popa
push
sbb
(bad)
in
sbb
fadd
mov
cmp
adc
mov
adc
xchg
dec
push
ss
pushf
pop
and
sbb
(bad)
in
popf
fmul
push
xor
cmp
dec
and
std
adc
aas
sbb
hlt
in
ins
jg
rol
call
xchg
orps
or
data16
jle
(bad)
fmul
pop
daa
pop
jbe
(bad)
mov
pop
mov
pushf
push
gs
cmps
jns
mov
daa
mov
pop
inc
pop
sbb
sub
(bad)
jp
leave
jge
ret
sti
jbe
xchg
jno
inc
lahf
call
in
leave
mov
inc
shl
js
fisubr
inc
aas
mov
dec
jo
push
sbb
out
jmp
(bad)
fwait
pop
pushf
mov
or
mov
aad
std
cdq
jg
or
sub
mov
add
sar
hlt
inc
inc
xchg
pushf
xor
movs
xor
dec
mov
aam
mov
pop
mov
test
xor
cmp
or
cli
add
jg
add
clc
push
mov
out
cmp
addr16
cli
adc
mov
lock
out
mov
(bad)
cmps
mov
add
fs
sub
adc
and
stos
pusha
or
adc
sbb
sub
adc
sub
adc
(bad)
stos
(bad)
or
add
mov
aaa
in
loopne
movs
mov
in
stos
jns
push
scas
aaa
inc
pop
push
ret
pop
jmp
mov
ror
and
int
push
pop
xlat
imul
rcl
and
and
(bad)
pop
mov
sbb
push
mov
int
jmp
mov
mov
add
cdq
rol
stc
out
sti
sbb
out
xor
pushf
pop
pop
jle
mov
sar
cmp
or
inc
sbb
cmp
add
enter
push
int
inc
mov
jp
xor
lods
sbb
dec
test
and
sub
sbb
push
leave
cmp
ficom
mov
aad
add
pop
rcr
out
lds
push
adc
pop
pop
(bad)
into
dec
daa
pop
js
test
sti
cmc
je
rcl
sbb
xrelease
cmp
xchg
ins
add
sbb
and
not
in
dec
mov
lods
push
cmp
mov
sahf
push
scas
call
sbb
enter
lods
nop
and
push
fild
inc
jo
iret
adc
pop
push
lods
out
pushf
xor
dec
dec
mov
sahf
sub
test
shl
lods
daa
xlat
jmp
xchg
inc
jecxz
aaa
mov
jns
xor
ds
xchg
pop
test
or
call
add
fidiv
test
sar
out
clc
sub
xchg
jecxz
(bad)
ins
daa
fild
sbb
xlat
shl
aad
xor
sub
in
nop
mov
shl
test
lods
test
stc
jle
rcr
vpcmpeqw
mov
cli
jns
loope
adc
mov
sbb
jb
pop
jb
(bad)
daa
mov
ror
jge
pop
adc
sbb
retf
movs
jg
mov
dec
lods
jns
cmp
inc
ins
dec
cld
mov
dec
push
movs
xor
cmps
inc
mov
call
mov
scas
sub
inc
fld
and
jmp
sbb
ffreep
out
pop
mov
dec
xchg
mov
pop
jmp
jo
test
fadd
in
leave
sub
loope
and
add
jnp
add
push
(bad)
adc
pop
inc
stos
mov
push
out
add
jns
add
add
sbb
imul
mov
std
fisttp
cld
popa
ret
xor
jecxz
fisubr
enter
les
ins
and
shl
pop
lods
ret
push
add
lds
aas
push
retf
mov
ja
mov
outs
and
cmps
ins
cmp
mov
(bad)
not
mov
push
mov
push
jmp
jnp
xchg
leave
cmp
loope
mov
test
jl
mov
hlt
test
je
mov
sti
mov
mov
xchg
adc
test
push
arpl
adc
pop
mov
pusha
or
jmp
push
and
push
or
lods
xchg
rcl
xor
ja
and
test
fmul
mov
xchg
ret
add
into
(bad)
dec
nop
clc
add
adc
in
push
and
je
add
and
(bad)
aad
sub
fst
test
xor
sbb
fisttp
push
dec
add
int3
push
jl
das
mov
aaa
dec
mov
cmp
daa
mov
sbb
jmp
fild
rcr
xchg
loop
sbb
sbb
fidiv
(bad)
push
cmp
mov
arpl
mov
push
stc
jb
jg
xor
inc
sbb
mov
movs
fsub
in
inc
movs
inc
mov
jb
sbb
sub
pop
adc
inc
out
call
and
loope
mov
das
sahf
mov
jns
aad
popf
imul
pop
in
jmp
repz
fisub
pop
dec
mov
pop
push
pop
mov
inc
sub
jb
(bad)
repnz
or
pop
mov
outs
mov
mov
xor
pop
mov
push
inc
sub
cmps
sub
push
fwait
add
push
inc
push
fstp
je
pop
push
push
mov
daa
dec
pop
ret
push
jl
cmp
mov
test
push
sub
addr16
retf
cli
outs
cmp
fs
and
icebp
retf
add
xor
es
mov
les
cdq
(bad)
loope
scas
mov
dec
mov
xor
pop
or
sahf
or
jg
cwde
lock
mov
bound
or
dec
jecxz
xchg
cmp
scas
ficomp
aad
pushf
shl
int
loopne
enter
sbb
ins
shr
ins
sti
adc
add
pop
xor
xor
out
push
retf
mov
test
jge
mov
stc
stc
xchg
or
dec
sub
bound
sbb
xchg
int
mov
dec
(bad)
xchg
inc
pop
shr
inc
adc
cmp
pop
loope
push
inc
cs
mov
pusha
dec
out
mov
adc
xchg
adc
outs
pop
xchg
push
outs
push
imul
pusha
test
lock
xor
adc
push
sbb
dec
mov
jbe
push
xchg
std
jo
push
inc
sub
xor
pop
fisubr
mov
pusha
stos
or
xchg
push
sti
lods
inc
sub
sub
mov
test
pop
call
ret
test
mov
(bad)
(bad)
sar
in
pop
aaa
call
jne
and
and
mov
pushf
fcomp
and
and
add
adc
jmp
(bad)
mov
icebp
and
rcl
fild
xor
jge
nop
cld
scas
ds
mov
cdq
push
dec
xor
adc
inc
int
cmp
inc
cmps
dec
hlt
sbb
sub
jne
dec
cdq
out
test
dec
gs
push
lods
(bad)
pop
(bad)
lods
xchg
mov
pop
pop
pop
and
dec
mov
call
repnz
mov
mov
adc
push
ins
jl
shl
xor
shr
cs
push
add
imul
jmp
retf
test
xor
pushf
jmp
ins
pop
repz
retf
xor
push
push
sub
xor
es
mov
mov
xor
lds
cdq
dec
add
lods
cmp
jge
sub
retf
push
mul
xchg
mov
std
outs
add
sbb
inc
ja
dec
add
inc
ins
mov
xchg
cld
gs
or
call
hlt
push
dec
gs
dec
pop
mov
mov
call
jmp
out
mov
inc
pop
outs
sbb
mov
cmps
xchg
in
cld
shl
loope
fsub
mov
out
sbb
jnp
xor
inc
shl
mov
add
pop
shr
dec
lods
xchg
mov
popa
jo
mov
inc
fbstp
aaa
dec
mov
mov
sub
jb
test
cmp
cmp
mov
retf
mov
(bad)
ret
ja
xchg
gs
icebp
and
and
clc
or
mov
xor
neg
pop
test
jns
adc
push
(bad)
(bad)
adc
ins
mov
rol
pop
mov
out
inc
xor
mov
fwait
loop
in
xchg
and
push
fistp
xor
hlt
call
dec
mov
jmp
cmps
xchg
jb
rol
mov
jmp
and
jo
iret
stc
and
mov
adc
andnps
out
mov
inc
add
cdq
mov
pop
mov
stc
aaa
dec
ins
sbb
push
popf
shl
test
mov
nop
mov
mov
xchg
div
iret
sbb
add
mov
and
xlat
aaa
jmp
jb
or
in
dec
add
cmp
push
vmovlps
aas
into
push
mov
dec
sbb
xchg
adc
inc
push
and
mov
push
and
js
cli
add
dec
pop
xchg
leave
pop
fs
adc
cdq
ror
in
popf
jge
adc
sbb
das
hlt
push
enter
aas
je
ret
test
push
loop
cs
adc
xor
cld
pop
pop
xor
and
xchg
and
mov
and
xor
js
int
fucomi
adc
fs
mov
imul
retf
cmp
shr
add
vpsrlq
mov
xchg
xchg
aad
into
cdq
fisttp
sbb
sub
mov
jmp
pop
hlt
adc
push
xor
push
add
xor
xor
xchg
jl
xlat
and
out
or
mov
mov
test
sub
ins
repz
(bad)
fsubr
xlat
adc
fcomp
jbe
in
dec
or
jp
lods
pushf
mov
mov
aam
lods
aaa
aam
sub
xor
and
sbb
adc
clc
ins
rcl
ds
(bad)
jnp
(bad)
pop
pusha
cmp
not
mov
fstp
aaa
xchg
sar
xor
or
cdq
ficom
xchg
call
xor
push
dec
(bad)
loopne
push
xchg
sbb
pop
mov
pop
jns
repz
(bad)
shr
addr16
jmp
push
cmp
cmps
jmp
cmp
and
std
pop
ficom
fdivr
sti
stc
jb
mov
sub
aad
mov
call
cli
fldcw
sub
nop
xlat
pop
dec
jb
aaa
cmc
and
jb
cmp
mov
xor
outs
shr
jp
out
bound
(bad)
mov
cmp
ins
adc
adc
xchg
outs
fsub
nop
test
call
cmp
pop
rcr
sbb
test
repnz
inc
adc
pop
lods
add
jnp
cmp
in
(bad)
adc
xchg
out
stos
add
adc
lods
add
pop
sub
mov
xor
(bad)
aas
stos
cmp
mov
push
and
jbe
fadd
mov
aaa
in
clc
in
cmp
or
(bad)
fs
add
and
add
dec
dec
mov
and
xchg
cdq
stc
xchg
adc
pop
lods
adc
xor
mov
or
icebp
int3
in
ret
pop
sbb
rol
cmps
push
sbb
push
aad
jge
xchg
inc
sti
(bad)
fld
int
imul
in
js
out
stc
sbb
rcr
in
push
(bad)
out
repnz
sbb
xchg
pusha
lods
stos
stc
xchg
ja
in
fsubr
cs
adc
imul
pop
cmc
fnsave
dec
(bad)
(bad)
in
inc
push
ror
(bad)
and
nop
pop
jns
out
mov
mov
sbb
xor
and
mov
cmp
fiadd
inc
adc
retf
jmp
cmc
pop
pop
mov
icebp
cmps
dec
mov
ins
and
shl
dec
call
gs
jb
pop
in
xor
mov
js
sbb
jl
fs
or
mov
sti
cdq
jge
gs
cmps
xchg
mov
and
xor
ins
(bad)
lods
jno
mov
frstor
sbb
scas
or
popa
inc
xchg
ins
jno
vpunpckhwd
sbb
fmul
out
in
mov
push
enter
sub
je
enter
popf
imul
pop
ret
mov
cmp
aam
adc
(bad)
jl
ror
out
xchg
cmp
in
jnp
add
pop
adc
ins
sub
jo
pop
int
in
(bad)
int3
arpl
add
xchg
sahf
jne
popa
popf
xor
xchg
ja
call
pop
call
mov
xchg
leave
jns
jmp
inc
loop
jmp
inc
daa
mov
sahf
int
(bad)
int3
mov
mov
pusha
dec
test
cmp
mov
pushf
jbe
ror
outs
sbb
je
imul
add
pop
mov
aas
mov
je
fs
fistp
in
xlat
dec
add
imul
sub
jno
fadd
mov
imul
pushf
adc
mov
test
out
mov
ins
mov
loop
ds
icebp
inc
call
push
rcr
pop
stc
cmp
arpl
mov
cmp
syscall
mov
or
into
sbb
mov
cmp
test
sbb
icebp
scas
jbe
out
aad
mov
jbe
aad
and
fwait
repnz
ror
sbb
retf
sti
(bad)
jb
jno
call
loopne
enter
add
lods
sub
sub
cmp
pop
rcl
fwait
out
pop
int3
lods
hlt
rol
fisubr
cld
outs
sub
jle
pop
lods
cmp
jmp
dec
jno
sbb
repnz
ret
mov
scas
cmp
aam
sbb
pop
hlt
pusha
mov
ret
sub
das
pusha
xchg
aas
dec
and
dec
dec
adc
mov
mov
push
cmp
adc
loope
sbb
sti
sub
mov
xchg
into
push
gs
adc
sbb
(bad)
(bad)
jmp
out
cmp
fistp
dec
sbb
mov
pop
add
inc
adc
xchg
xchg
inc
mov
sub
mov
xor
movs
ins
rol
cmp
sar
and
dec
inc
retf
push
test
cmp
sbb
imul
xor
pusha
sub
fcmovne
call
rcl
or
jge
push
mov
pushf
cmp
fdivr
pushf
lea
xchg
mov
arpl
jmp
ret
pop
adc
lahf
inc
je
mov
fisubr
inc
mov
mov
comiss
shl
mov
aaa
sbb
sub
cmp
lods
mov
and
retf
jmp
stos
pop
into
mov
(bad)
sbb
rcr
add
out
in
xchg
(bad)
xor
or
test
pop
sbb
fdiv
cld
add
mov
push
test
clc
xlat
aas
bswap
aaa
mov
pusha
jae
pop
in
cmp
or
(bad)
stc
mov
rol
fwait
int3
addr16
or
loop
(bad)
in
xchg
movs
xor
rcr
xchg
repz
push
(bad)
and
test
xlat
mov
inc
xor
(bad)
sub
idiv
aaa
jbe
std
test
ss
hlt
paddusb
jp
ins
and
pop
mov
sub
(bad)
and
or
jne
imul
cmp
jbe
movs
leave
jecxz
jae
xor
imul
fcomp
xor
push
cmps
stc
push
shl
inc
nop
popf
push
cmp
mov
bound
cwde
or
test
cmp
mov
(bad)
cmp
fiadd
in
xchg
rol
push
stos
cmp
push
cmp
push
pop
jno
mov
test
xor
mov
or
xor
push
sbb
mov
xchg
jb
les
dec
repz
mov
jae
test
add
test
mov
cmp
aas
lahf
ins
jnp
out
fs
in
enter
rcpps
je
sub
mov
das
loop
dec
mov
cmps
dec
mov
sbb
pop
lock
cli
stos
inc
and
test
pop
(bad)
sub
push
and
addr16
xchg
jb
std
xchg
push
or
and
sub
mov
out
stc
imul
mov
pop
pop
sbb
mov
nop
out
loopne
and
clc
mov
or
cwde
test
and
jecxz
inc
out
xor
(bad)
inc
jg
cmps
cmp
test
scas
xchg
cs
push
push
outs
je
fdiv
mov
adc
xlat
outs
imul
and
push
aaa
jmp
pop
rol
(bad)
imul
lea
push
push
mov
test
push
or
inc
add
xchg
pop
repnz
cmp
lea
ins
cmp
add
mov
call
sub
add
cmp
mov
xor
xchg
ret
into
pop
xchg
cwde
stc
rcl
sbb
xlat
push
dec
aam
inc
jnp
stos
clc
sbb
pop
in
repz
sub
sbb
je
daa
xchg
stc
or
push
add
rcr
stos
shl
push
ret
push
xchg
inc
in
adc
jbe
sbb
pop
hlt
les
rcr
jnp
push
stc
int
jb
push
push
or
sbb
repz
aaa
and
sub
(bad)
std
jmp
adc
arpl
paddsb
stos
imul
xor
js
xchg
(bad)
mov
imul
mov
jne
lods
pop
mov
push
xchg
push
mov
and
dec
cli
mov
dec
add
cmp
rcl
sbb
outs
out
mov
int3
shr
dec
sbb
mov
mov
loopne
fwait
jmp
xor
movs
inc
push
sbb
adc
sbb
mov
and
mov
add
dec
das
pop
jmp
cmp
and
loop
ins
loope
cmc
sbb
movs
xchg
pop
stc
retf
xchg
xor
sub
push
cmp
in
loopne
lods
shl
jae
and
aam
inc
add
pop
jae
jmp
push
push
sbb
pop
lahf
sub
shl
loop
mov
sbb
or
inc
ret
(bad)
adc
into
rol
cmp
mov
push
mov
rcr
dec
mov
cld
daa
mov
pop
jb
pop
mov
loop
gs
jae
sbb
adc
dec
add
push
clc
push
cmp
sub
leave
fdiv
mov
inc
jp
movs
xchg
pop
add
sbb
cmc
sub
loopne
repz
call
dec
cmps
sbb
js
mov
pop
inc
popa
sub
adc
sub
push
scas
scas
mov
imul
push
mov
nop
and
sbb
pop
repnz
hlt
movs
or
push
xor
cmc
sbb
dec
sbb
jns
retf
jae
mov
repz
fidiv
pop
push
push
test
aam
sub
jns
in
adc
sbb
xor
cmp
retf
les
add
add
test
iret
xor
mov
mov
setno
shl
in
add
xor
cmp
or
fisttp
cld
mov
inc
out
jbe
(bad)
arpl
pop
daa
mov
ins
lods
rol
pop
mov
cmp
retf
sbb
jmp
(bad)
lods
mov
dec
dec
cmp
dec
test
and
in
dec
cmp
xchg
sti
cmp
jl
xchg
call
sub
in
in
sbb
and
fdiv
adc
in
sub
addr16
stos
mov
push
pusha
fstp
adc
pop
js
out
repnz
lods
mov
push
fsubr
adc
mov
jecxz
add
aaa
adc
cmp
mov
dec
inc
and
shl
je
inc
rcl
mov
xchg
ret
pop
scas
jmp
xor
and
daa
shl
lahf
popw
mov
push
push
outs
pop
mov
or
cmp
pop
mov
fidivr
imul
sbb
xor
push
iret
xlat
test
mov
cmp
xor
pusha
(bad)
push
popf
dec
mov
mov
cmp
sbb
sti
xor
push
push
push
fild
cmps
es
adc
jno
int3
repz
xchg
shl
push
outs
jmp
jecxz
(bad)
out
loopne
stc
jno
mov
mov
jp
loop
shl
sub
pop
out
xor
in
push
cmc
pop
jmp
sub
xchg
imul
test
ins
nop
lea
cmps
movs
dec
cli
or
clc
mov
aam
add
aaa
xchg
sub
pop
clc
imul
not
jo
xchg
mov
and
sahf
imul
fstp
movs
xor
lock
mov
and
pusha
mov
xor
bound
mov
clc
sti
(bad)
es
pop
ja
daa
push
mov
mov
inc
xchg
push
dec
into
jo
dec
pop
mov
cld
mov
aas
cs
neg
xlat
sub
dec
mov
(bad)
mov
adc
imul
mov
pop
and
xchg
and
pop
mov
shr
mov
jl
sbb
cli
pop
pop
rcl
and
js
test
ins
ja
ja
mov
stos
imul
xor
(bad)
fisubr
jo
mov
std
outs
es
xchg
sbb
mov
test
mov
xor
xor
test
sahf
xchg
xlat
mov
cdq
jb
daa
call
sbb
xchg
jle
jb
fst
repz
repz
push
xor
push
inc
jle
cwde
mov
enter
xor
lock
sbb
pop
mov
movd
stc
jbe
cmp
push
mov
dec
push
movs
cmps
das
mov
gs
lea
fmul
xor
jnp
and
mov
mov
adc
sub
rcr
rcl
enter
out
lods
cmovle
loope
inc
jecxz
push
fs
push
in
xlat
mov
ret
dec
inc
mov
fisubr
bound
mov
repz
aaa
inc
and
add
loope
dec
cmps
mov
pop
xchg
in
ret
and
(bad)
mov
in
or
and
or
add
mov
fsubr
or
(bad)
sub
test
jo
adc
jb
loopne
pop
scas
sub
inc
dec
ds
(bad)
push
jmp
sbb
mov
gs
push
ficom
stc
ins
call
daa
loop
inc
push
in
jg
sub
push
push
idiv
mov
adc
push
mov
adc
and
lea
jge
sub
shr
sbb
and
fadd
mov
cmp
sbb
xor
es
or
add
and
adc
inc
cmc
inc
in
out
ret
cmp
mov
xor
fsub
mov
or
jae
pushf
jp
jle
es
imul
push
sub
sub
call
adc
mov
inc
jnp
mov
fldcw
pop
fucomip
or
add
sti
xrelease
inc
jge
inc
(bad)
dec
test
popf
push
div
pusha
jecxz
pop
xchg
cld
inc
inc
stos
push
mov
pop
mov
loopne
shr
xchg
fsubr
stos
(bad)
into
ins
out
push
cdq
xchg
dec
jae
mov
inc
mov
loop
adc
aas
loop
sub
iret
push
pop
add
fs
jae
fisttp
pop
cli
in
and
out
lock
xchg
stos
lahf
mov
adc
adc
stos
mov
addr16
adc
sub
add
repz
stos
mov
mov
pop
jmp
mov
push
push
call
adc
and
enter
mov
cld
push
dec
and
push
lea
pop
nop
daa
push
xchg
fs
cli
pop
jo
cmp
jb
outs
fst
out
imul
iret
in
mov
je
push
push
(bad)
or
dec
xlat
cld
adc
fisttp
cmovne
cld
jp
add
mov
or
(bad)
test
inc
add
test
fsubr
pop
scas
or
daa
ins
scas
sub
inc
jmp
lods
jg
and
and
shl
(bad)
outs
pushf
sub
ret
or
imul
jo
xor
push
adc
in
inc
mov
sti
das
sbb
and
pop
stc
and
xor
dec
dec
mov
push
cdq
cmp
imul
jge
pop
and
push
js
mov
jle
dec
mov
and
or
add
and
data16
(bad)
jmp
pop
neg
adc
push
hlt
fcmovbe
xor
adc
mov
mov
mov
pop
xchg
adc
ins
sbb
cmps
popf
pop
inc
(bad)
fisttp
daa
cdq
xor
aas
xor
cwde
test
std
add
into
loopne
mov
out
sahf
xchg
and
mov
popa
mov
int3
mov
std
test
mov
dec
pop
mov
inc
and
pushf
mov
sar
cmp
(bad)
pop
jno
pop
cmp
fist
sub
push
sahf
and
test
jmp
pop
not
out
addr16
add
aaa
cmps
add
xchg
jecxz
retf
sbb
or
inc
(bad)
lock
dec
nop
movs
call
mov
xchg
fwait
(bad)
dec
pop
inc
fld
lea
call
das
(bad)
sub
sbb
popa
cs
mov
dec
push
cld
lahf
or
push
sti
push
ins
adc
inc
iret
push
cmc
push
mov
test
inc
push
stos
hlt
push
jnp
cmp
xchg
push
rol
inc
push
bound
jle
test
and
push
jp
or
ror
stos
adc
sub
push
pop
jb
fsub
movs
repnz
test
ror
ss
sub
dec
cmps
add
or
scas
sub
inc
jl
pop
retf
cmps
jb
mov
mov
gs
pop
jae
fidiv
outs
xchg
pop
ror
outs
pushf
xchg
inc
xchg
add
xchg
or
pop
icebp
mov
add
fsub
jge
cs
and
aaa
pop
dec
jmp
in
jmp
test
inc
xchg
add
sub
div
shl
std
cmps
cmc
stos
mov
sti
sbb
out
je
sbb
cmp
push
inc
push
pop
ins
or
xlat
pop
adc
inc
sar
test
mov
pop
pusha
scas
ins
stc
sub
stos
adc
lods
popf
fwait
adc
jne
pop
inc
jle
adc
adc
pop
sbb
and
sub
mov
sub
or
xchg
das
jb
adc
fistp
pop
test
jns
call
push
repnz
mov
pop
sbb
cmp
pop
retf
push
retf
mov
mov
jecxz
inc
mov
lds
les
sub
cmp
inc
ss
cli
fstp
xor
nop
add
outs
xor
lock
adc
sub
(bad)
push
inc
mov
pop
scas
inc
add
std
or
pop
push
cld
(bad)
xor
popa
and
jp
cmc
aam
test
cmp
sub
dec
mov
cmp
sub
aas
inc
ret
loope
inc
ds
outs
push
add
cmp
mov
dec
lods
rcl
jne
pop
out
xchg
inc
push
in
loop
xor
adc
jmp
out
outs
ret
fimul
sub
(bad)
ins
stc
je
mov
mov
(bad)
repz
dec
in
add
cs
sbb
jmp
cmps
adc
mov
call
pop
jns
retf
out
repz
mov
iret
mov
sahf
ret
nop
call
push
add
bnd
loop
pushf
mov
js
popf
(bad)
mov
lods
cmp
popa
sti
(bad)
out
mov
pop
lods
pop
xchg
cmp
gs
imul
imul
and
test
in
push
test
push
movs
cmps
cld
cmp
xchg
test
movs
(bad)
addr16
pop
cmp
push
and
das
push
jp
(bad)
iret
retf
sub
ret
inc
and
pop
loope
or
ret
shr
xor
fidivr
mov
not
stos
lods
or
mov
das
sti
pop
test
jle
call
mov
adc
or
call
pop
repz
jnp
data16
mov
icebp
mov
mov
mov
enter
or
movs
push
rcr
and
fimul
mov
adc
xor
mov
(bad)
jmp
sahf
je
in
jge
cld
ins
fstp
adc
iret
ret
sub
(bad)
lock
(bad)
neg
add
or
xchg
dec
add
or
repnz
jge
inc
push
(bad)
pop
xor
inc
sti
cmps
sar
ds
repnz
add
push
arpl
adc
aas
sub
pop
mov
or
stc
mov
fcmovnb
or
jecxz
push
sub
dec
rcr
add
in
mov
dec
inc
adc
sbb
xchg
xchg
push
pop
or
mov
mov
mov
inc
dec
dec
dec
aam
out
and
das
adc
push
pop
mov
mov
dec
push
adc
sub
call
pop
and
push
ds
movs
setns
mov
mov
adc
dec
inc
imul
sbb
pop
repnz
leave
loopne
sub
dec
dec
in
push
xchg
xchg
dec
pop
loopne
or
(bad)
or
push
call
fcmove
fcmovu
push
(bad)
imul
cmp
stos
jle
sbb
out
xacquire
adc
sub
pop
cmps
mov
ret
xlat
dec
loop
and
xor
fld
test
ficom
cmps
ficomp
cmp
cdq
shl
stos
mov
mov
dec
js
sub
call
sub
ret
mov
popf
xlat
jno
add
rol
sbb
hlt
add
jno
dec
cmp
out
test
sub
xchg
add
add
push
mov
inc
movs
dec
int
xchg
pop
and
xchg
lods
sbb
xor
cdq
jle
repnz
jge
mov
mov
fdivr
jl
test
xor
scas
sub
fcomp
(bad)
arpl
xorps
push
test
push
mov
mov
pop
add
sbb
and
shl
rcl
arpl
mov
mov
test
fst
addr16
ja
movs
aaa
adc
lods
mov
jb
and
cld
mov
fcomp
mov
scas
push
mov
in
in
ret
push
sub
jp
jmp
jbe
hlt
cdq
mov
push
loopne
xor
enter
adc
(bad)
(bad)
out
pop
add
in
daa
aad
int
lock
cmp
sub
ror
lods
xchg
jb
fldln2
int
sahf
xchg
mov
or
outs
mov
jmp
ss
add
aas
push
cdq
sbb
leave
mov
or
adc
