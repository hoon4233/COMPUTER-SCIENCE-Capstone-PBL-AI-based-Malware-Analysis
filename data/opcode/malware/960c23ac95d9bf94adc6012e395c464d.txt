push
mov
sub
push
push
call
push
call
push
mov
push
call
push
mov
push
call
test
je
xor
jmp
mov
sub
mov
mov
mov
shl
mov
mov
add
mov
push
push
call
push
call
mov
shr
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
push
call
mov
cmp
je
int
mov
call
mov
mov
mov
mov
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
push
mov
push
call
add
mov
mov
cmp
jb
jmp
mov
push
push
mov
push
mov
add
push
push
call
add
mov
mov
mov
add
add
mov
mov
add
mov
mov
sub
mov
cmp
jne
push
ret
mov
push
mov
push
call
add
xor
add
push
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
mov
jmp
xor
jmp
sub
lea
push
ret
mov
push
ret
xor
shl
jmp
xor
mov
mov
sub
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
add
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
lea
mov
mov
push
mov
push
call
add
mov
add
mov
mov
test
jne
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
jmp
xor
jmp
xor
jmp
sub
lea
shl
push
ret
xor
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
push
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
test
je
mov
lea
jmp
sub
jmp
mov
push
ret
add
jmp
xor
push
ret
add
shr
push
ret
int
shl
push
ret
push
jmp
pop
jmp
sub
jmp
add
jmp
sub
mov
cmp
jb
jmp
mov
mov
mov
add
mov
add
mov
mov
mov
add
mov
jmp
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
push
mov
push
call
test
je
xor
jmp
push
call
mov
mov
mov
mov
mov
mov
test
je
lea
push
lea
push
lea
push
push
mov
push
mov
push
call
test
je
call
movzx
cmp
jne
movzx
cmp
je
lea
push
lea
push
lea
push
push
push
mov
push
call
test
je
mov
lea
mov
sub
jmp
jmp
call
jmp
mov
mov
add
mov
mov
push
ret
push
ret
push
ret
mov
add
mov
cmp
sbb
neg
mov
mov
mov
add
mov
mov
cmp
sbb
neg
mov
cmp
je
cmp
je
mov
jmp
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
mov
mov
mov
mov
mov
push
ret
push
jmp
int
mov
push
ret
lea
push
ret
int
push
ret
sub
jmp
int
push
ret
sub
mov
cmp
jae
mov
jmp
jmp
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
mov
mov
mov
push
push
push
mov
sub
push
push
pop
call
mov
mov
mov
pop
ret
int3
push
mov
sub
push
push
mov
mov
mov
mov
mov
lea
push
ret
xor
jmp
sub
shl
shl
jmp
xor
shl
jmp
push
mov
shr
lea
xchg
shr
shr
jmp
add
push
ret
add
jmp
mov
mov
add
mov
mov
sub
mov
mov
imul
mov
mov
add
mov
mov
sub
mov
mov
imul
mov
mov
add
mov
mov
sub
mov
mov
imul
mov
mov
add
mov
mov
sub
mov
mov
imul
mov
mov
add
mov
mov
sub
mov
mov
imul
mov
mov
add
mov
mov
sub
mov
mov
imul
mov
mov
mov
mov
sub
mov
mov
add
mov
mov
mov
xor
mov
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
lea
push
ret
lea
shr
push
ret
sub
push
ret
lea
lea
jmp
mov
mov
jmp
sub
lea
push
ret
sub
mov
mov
mov
pop
mov
lea
push
mov
push
mov
xor
lea
dec
add
push
ret
pop
pop
mov
pop
ret
int3
int3
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
push
pop
mov
inc
imul
add
scas
je
sub
inc
ins
sub
add
or
test
popa
sub
add
or
mov
in
stos
push
imul
mov
gs
mov
je
mov
je
scas
cmps
add
add
add
or
mov
jb
lahf
movs
inc
js
fild
add
xchg
outs
fs
gs
ins
mov
ins
push
fwait
gs
mov
jne
mov
ins
gs
fadd
add
gs
inc
mov
inc
add
fadd
push
xor
push
outs
hlt
mov
add
add
(bad)
fild
add
cmps
gs
hlt
scas
add
fadd
add
mov
ins
gs
fadd
add
mov
jo
lods
cmps
push
add
test
ins
jo
inc
add
fadd
add
scas
arpl
fwait
add
add
add
or
fadd
add
mov
jne
mov
imul
mov
add
je
cli
mov
ins
call
xchg
popa
ins
call
mov
dec
hlt
mov
add
or
fadd
add
fadd
add
adc
sub
add
add
add
adc
add
hlt
fadd
add
add
in
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
mov
int
add
push
push
xchg
and
mov
outs
dec
cld
bound
stos
jne
add
add
add
outs
and
mov
gs
ror
add
add
mov
mov
adc
pop
cs
int3
or
(bad)
movs
mov
fisubr
and
xor
into
mov
and
lahf
mov
pop
imul
add
mov
int
adc
enter
pop
cs
arpl
mov
cs
add
je
add
je
add
mov
xor
xor
add
and
add
add
add
das
fmul
add
add
and
add
(bad)
out
add
retf
in
add
in
inc
add
add
add
retf
hlt
fadd
add
fiadd
add
fiadd
add
fiadd
add
(bad)
call
push
add
ficom
add
adc
je
add
fiadd
add
add
add
add
jne
add
retf
or
add
and
add
add
add
and
add
xor
add
xor
add
and
push
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
pop
sbb
add
movs
fld
add
add
add
add
add
add
add
lods
gs
fld
add
cmps
add
fs
add
xor
add
xor
(bad)
jmp
add
and
add
xor
add
push
fld
pusha
inc
cmps
fs
cwde
mov
add
hlt
dec
add
in
add
in
add
hlt
fadd
add
fadd
add
fadd
add
add
mov
add
push
fadd
add
xchg
add
movs
sbb
add
add
movs
fadd
add
add
add
and
add
or
add
je
push
add
add
add
add
xor
add
and
add
fadd
inc
push
stos
gs
mov
lea
add
push
add
add
add
mov
add
out
push
add
fild
add
fild
add
fild
add
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
add
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
add
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
and
add
and
add
add
add
mov
mov
pusha
fld
call
jle
call
mov
mov
pusha
gs
in
div
jne
ja
add
stos
movs
or
in
add
jmp
xchg
push
test
cmp
pop
jae
or
add
xor
xchg
sbb
fwait
cld
(bad)
in
aam
idiv
mov
fadd
add
add
add
add
xchg
aaa
lea
add
inc
xor
shl
div
push
test
xchg
pop
push
add
or
sub
je
lods
call
pop
call
or
pop
ret
sub
add
shr
inc
fsub
add
add
add
movs
xor
movs
fisttp
push
(bad)
es
mov
pop
ret
push
push
loope
mov
ret
mov
or
mov
jae
mov
xchg
jle
sysret
cmp
mov
mov
mov
mov
sub
lock
ja
(bad)
call
add
add
shld
repz
in
shl
sbb
nop
add
add
add
or
mov
pop
cli
or
fisttp
(bad)
repnz
add
scas
push
push
pop
and
add
out
and
mov
test
and
add
adc
jae
pusha
jle
add
add
sub
and
push
push
mov
xorps
push
out
fiadd
sub
push
call
popf
lods
mov
cdq
mov
call
call
pop
cmps
adc
push
pop
xor
jae
int3
xchg
sbb
movs
cwde
inc
adc
and
inc
lods
nop
add
pushf
fnstenv
add
add
pop
fwait
sbb
mov
cmp
jno
jmp
jmp
jmp
cmp
pop
mov
push
cld
fild
xlat
lea
sub
cmps
stos
mov
xchg
or
jne
mov
dec
sbb
dec
or
xor
add
fcomp
sub
add
pop
js
cld
xchg
dec
adc
jecxz
inc
call
add
add
adc
ja
mov
sbb
(bad)
call
mov
add
add
call
jmp
pop
jge
mov
adc
jb
out
popf
adc
mov
mov
add
or
xor
nop
(bad)
call
inc
sbb
mov
sbb
fdiv
ret
mov
mov
or
xor
in
jne
jg
or
mov
cmp
sbb
mov
ss
xor
cmps
div
aas
rcr
mov
sti
shr
xchg
push
in
mov
add
call
mov
lea
fimul
add
add
add
fmul
mov
dec
add
xor
jns
lds
fsubr
ins
and
add
daa
lahf
add
scas
xchg
or
add
adc
mov
xor
jb
xchg
inc
add
fmul
inc
cmc
scas
mov
stos
call
cmp
add
call
mov
add
add
out
(bad)
sub
loopne
into
xchg
add
call
mov
add
mov
add
jmp
fld
int3
jns
in
add
test
mov
xor
loope
or
mov
leave
ret
mov
push
out
icebp
or
call
or
sbb
hlt
(bad)
add
add
sub
push
call
sub
call
call
rcl
or
jle
add
aas
call
aaa
mov
add
ss
ins
pop
(bad)
jmp
out
and
push
fld
jmp
out
and
cmp
xchg
aaa
fld
jmp
imul
or
sbb
out
(bad)
add
hlt
mov
add
ret
add
fcom
shr
mov
xor
add
push
xchg
into
call
add
add
out
sbb
add
xor
je
xchg
jno
rcl
add
out
add
xchg
add
fxch
cmp
(bad)
jmp
push
sbb
pop
fadd
push
outs
xor
jne
add
ror
(bad)
fadd
mov
adc
add
push
push
das
test
mov
fucomp
sub
sub
iret
pushf
or
cmps
nop
inc
or
or
fwait
mov
cmps
lea
push
stc
adc
mov
iret
fmul
jb
mov
sub
add
aaa
movs
or
ja
iret
push
daa
sub
mov
(bad)
jmp
add
add
add
stos
mov
or
add
hlt
popf
pop
mov
ficom
rcl
push
mov
mov
or
xor
adc
mov
or
jne
xchg
mov
out
retf
iret
and
inc
lock
pop
push
add
jne
(bad)
retf
push
xor
ret
add
inc
add
add
dec
ficom
cmp
add
call
test
adc
das
add
sbb
stc
adc
das
add
lock
add
fwait
stos
push
call
addr16
adc
push
call
pop
xor
or
sub
or
or
gs
add
add
add
mov
nop
(bad)
pop
icebp
adc
les
pop
fiadd
push
jmp
mov
sbb
(bad)
jmp
add
ins
loop
add
into
or
cwde
fcom
xor
add
popf
nop
(bad)
pop
push
pop
add
jns
in
push
add
mov
fld
push
call
sbb
ss
mov
add
add
pop
in
or
dec
ja
pop
dec
push
call
sub
hlt
xor
jnp
cmp
mov
push
xchg
dec
hlt
mov
cmp
jmp
test
mov
push
adc
push
and
add
dec
or
inc
jae
scas
mov
jmp
leave
shr
add
add
xchg
(bad)
pop
sbb
mov
(bad)
dec
in
in
in
mov
cmp
xchg
add
(bad)
pushf
out
cmp
add
rcr
lea
movs
add
mov
call
cwde
pop
mov
mov
mov
in
add
pushf
cld
add
mov
cwde
mov
ret
out
jae
mov
add
add
mov
pop
jge
fs
add
jb
xchg
mov
add
movs
test
movs
scas
call
sub
push
mov
mov
or
add
and
jne
lahf
push
mov
xchg
or
add
in
div
in
ret
or
cli
push
push
or
in
push
push
add
add
int3
sbb
add
jge
movs
cwde
mov
or
cmp
jb
daa
or
retf
out
mov
psllq
push
pop
out
push
call
neg
adc
pop
adc
call
leave
sbb
xor
add
movs
fild
add
ret
cdq
mov
pop
xchg
mov
xor
add
add
adc
jbe
or
adc
hlt
mov
sbb
(bad)
jbe
test
push
int3
jo
call
and
adc
jae
pop
call
pop
(bad)
jae
test
push
push
fisttp
call
jp
push
pop
dec
call
xor
neg
mov
ret
call
add
add
cdq
in
push
add
int3
(bad)
adc
or
cdq
mov
mov
sbb
scas
leave
or
lahf
lds
neg
add
or
add
add
cmp
push
sub
or
pop
icebp
call
push
jle
adc
ror
(bad)
jmp
push
add
add
ficomp
call
jg
push
add
es
cld
add
mov
dec
pop
popa
stc
adc
mov
stc
add
xor
push
push
int3
ja
push
pusha
les
adc
jbe
adc
mov
jae
pop
ret
push
mov
push
inc
or
add
add
test
movs
stc
sub
add
add
repz
sar
pop
pop
cmps
fild
push
das
not
test
(bad)
jmp
cmp
xlat
mov
jl
(bad)
call
push
(bad)
pop
and
add
sbb
push
repz
add
popf
pushf
ret
lds
ds
ja
repz
add
imul
sbb
clc
inc
add
add
popf
ret
push
scas
imul
scas
sub
inc
sub
add
and
jmp
push
into
call
call
mov
int
in
cmc
pusha
gs
in
add
jecxz
add
pushf
pop
(bad)
call
sub
jne
sti
je
jl
sti
call
pop
(bad)
leave
mov
add
lods
pop
mov
add
add
(bad)
mov
cld
dec
shl
mov
adc
add
int3
aas
clc
push
cld
je
jp
hlt
pop
xor
mov
jno
add
jns
in
push
jle
(bad)
jne
lock
test
(bad)
dec
ret
into
mov
ja
test
in
ror
inc
add
add
or
jb
aas
(bad)
dec
xor
and
movs
pusha
jle
pushf
scas
or
pop
clc
add
push
mov
add
idiv
or
in
mov
iret
fmul
jl
add
fild
add
mov
sbb
cwde
mov
sbb
add
add
mov
lods
and
jg
push
push
push
call
sub
(bad)
push
cmps
sbb
aas
xchg
and
push
fimul
lea
mov
call
repz
cdq
call
js
add
add
movs
sbb
inc
ror
add
add
sub
lea
mov
call
adc
inc
ja
imul
push
and
adc
add
sbb
adc
hlt
fistp
cmps
les
or
adc
jmp
fiadd
dec
lods
iret
mov
mul
push
movs
fistp
mov
push
inc
or
xchg
add
add
add
(bad)
inc
or
jne
mov
mov
rcl
clc
mov
jne
call
add
mov
or
jns
in
mov
jns
adc
test
mov
dec
adc
es
(bad)
jns
mov
div
ret
push
mov
push
mov
out
mov
xor
test
add
add
dec
clc
push
pop
fwait
or
mov
push
add
stc
push
in
push
daa
jnp
add
adc
sbb
movs
fiadd
call
add
push
call
call
leave
ret
push
jl
add
mov
scas
pushf
sbb
and
sbb
add
add
xor
(bad)
and
test
cwde
(bad)
mov
mov
mov
push
dec
sbb
call
fsub
in
sub
mov
push
inc
fmul
pop
ins
add
dec
in
das
call
(bad)
fld
test
dec
cmc
iret
hlt
repz
xor
add
add
std
test
push
push
inc
mov
loope
fcom
sbb
mov
sub
pop
add
jae
lea
pop
(bad)
jmp
push
pop
call
add
add
pop
sbb
pop
or
add
add
sub
mov
fild
mov
xchg
call
xlat
add
mov
int
add
mov
(bad)
fnstenv
rol
gs
je
fimul
je
mov
mov
scas
cwde
sbb
pop
add
push
push
jns
mov
fadd
mov
push
inc
sbb
dec
jmp
and
test
mov
add
add
pop
jns
in
ss
pop
js
hlt
lods
add
lods
out
repz
pop
retf
sbb
das
fwait
add
cld
iret
cmp
jne
das
sbb
repz
dec
dec
sbb
push
add
std
call
int3
jmp
pop
fild
push
jno
call
imul
mov
sbb
sub
xor
gs
xor
push
or
push
or
push
add
mov
add
pop
fdivr
call
pop
(bad)
bnd
mov
pop
test
mov
out
add
fs
push
sbb
add
call
mov
add
add
dec
add
std
xlat
mov
std
xchg
or
sub
stos
sub
ret
lods
mov
mov
imul
outs
and
push
fiadd
add
push
push
ds
lea
fadd
add
and
or
cmps
or
inc
rol
add
add
add
sbb
mov
push
repz
mov
add
das
lds
sub
jne
pop
mov
call
test
add
shl
rol
fnstsw
pop
je
add
fnstsw
lea
inc
mov
fld1
cmps
push
and
lea
add
add
and
mov
jmp
add
repnz
enter
pop
add
hlt
(bad)
je
or
inc
or
push
das
fwait
or
add
(bad)
(bad)
aas
ror
add
pushf
and
jl
icebp
call
lods
push
icebp
stos
and
mov
repz
lods
push
loope
and
add
add
int3
and
call
push
je
xor
pusha
add
shl
and
pushf
mov
dec
lds
scas
cli
pop
ret
push
int3
mov
stos
sub
fisttp
cld
in
(bad)
in
push
int3
mov
add
mov
add
call
pop
in
sbb
retf
sbb
mov
add
add
or
mov
inc
sbb
fs
out
or
pusha
imul
dec
mov
pop
or
inc
mov
jne
scas
and
or
mov
add
mov
mov
mov
mov
addr16
add
daa
ret
add
add
enter
add
add
(bad)
call
sub
add
push
daa
leave
mov
mov
fild
add
mov
sub
push
hlt
xchg
pop
sbb
mov
jnp
jne
(bad)
call
jmp
(bad)
mov
sub
dec
repnz
pop
sbb
mov
or
adc
add
add
scas
mov
outs
pop
and
pop
dec
fiadd
mov
sub
test
popf
sub
imul
inc
add
add
mov
or
ds
xchg
pop
fwait
adc
inc
and
cmc
mov
test
sbb
and
call
in
push
ja
pop
and
aas
add
add
stc
sbb
adc
cmps
adc
ja
add
shl
add
popf
fs
adc
mov
pop
idiv
retf
leave
mov
dec
adc
push
je
or
or
xor
shl
or
sahf
or
mov
out
rcr
add
xor
leave
ret
sub
and
clc
mov
add
add
fadd
test
mov
fld
push
xchg
cmp
repz
mov
mov
(bad)
idiv
mov
xchg
or
mov
sar
mov
xchg
hlt
call
adc
push
or
or
call
arpl
add
sub
jne
adc
adc
fisttp
add
fucomi
add
and
adc
call
sub
sbb
jp
mov
sub
je
scas
loop
add
mov
inc
add
cmp
inc
test
xchg
rcr
ret
mov
shl
movs
adc
mov
jmp
(bad)
add
add
add
and
sbb
loopne
mov
add
push
push
xor
out
jne
adc
xor
jecxz
inc
cwde
loope
imul
add
ret
or
inc
jne
sbb
mov
je
pop
call
mov
jno
add
mov
je
add
add
sub
enter
fild
call
sbb
idiv
or
sbb
out
clc
(bad)
jmp
pop
inc
add
js
add
ret
push
mov
jne
add
test
rcr
or
cld
adc
in
pop
pop
add
add
cmps
icebp
(bad)
push
outs
adc
or
sbb
cmp
fadd
mov
out
(bad)
pop
add
mov
sar
(bad)
ja
push
adc
cdq
cmc
mov
loopne
mov
or
push
or
push
clc
out
or
js
jmp
js
lea
mov
js
test
xchg
adc
add
add
and
cmp
cwde
in
inc
ins
mov
xor
pop
div
push
or
mov
mov
adc
pop
jmp
sar
ja
jmp
lods
fimul
popa
mov
push
pop
jge
lods
mov
jecxz
add
gs
jmp
pop
enter
pop
leave
idiv
push
pop
cld
push
mov
push
push
add
add
sbb
add
dec
sub
jbe
div
dec
rcr
add
and
jb
jno
jmp
jno
lea
mov
inc
cmp
mov
call
or
inc
mov
pop
sbb
hlt
fild
jge
div
jg
jmp
outs
sbb
clc
cmp
dec
dec
mov
div
add
add
das
leave
mov
nop
clc
lahf
fiadd
pop
ins
sbb
in
push
daa
mov
imul
dec
mov
cmp
push
cdq
mov
jno
cld
icebp
mov
mov
fsubr
add
sbb
or
fisttp
jmp
jbe
or
mov
pand
cmp
add
add
mov
inc
mov
jne
(bad)
sub
rcr
ds
das
sbb
call
vcmppd
cmp
jo
das
retf
movs
pop
jmp
stc
je
adc
(bad)
push
jmp
test
pop
or
(bad)
jmp
mov
pop
or
push
add
and
jb
jae
jmp
jae
lea
add
add
mov
out
mov
ret
inc
xor
cmp
cwde
xlat
inc
inc
arpl
div
pop
sti
or
fisttp
adc
or
je
sub
pop
enter
pop
pop
cmps
fld
push
das
adc
fcom
sbb
clc
mov
or
inc
add
add
mov
sbb
mov
and
mov
add
or
lds
add
sbb
fmul
lea
jbe
lock
popf
add
shl
adc
cdq
or
cmc
lock
das
fld
test
out
or
jmp
mov
or
add
add
add
lock
call
or
in
test
or
mov
jno
or
mov
and
lahf
fadd
test
aam
fadd
call
jno
or
fsubr
je
and
mov
pop
ror
call
test
inc
mov
xchg
jo
adc
mov
mov
add
add
call
mov
shl
iret
call
js
je
outs
mov
mov
fcom
(bad)
lahf
pop
push
adc
call
and
jmp
das
pushf
adc
fs
iret
pushf
je
add
inc
adc
jmp
inc
add
sbb
fwait
hlt
mov
add
add
jne
std
fwait
lock
shl
arpl
ror
inc
or
pop
or
bound
(bad)
(bad)
mov
mov
mov
jle
inc
(bad)
jne
ins
repz
outs
dec
cld
pop
fucomi
mov
and
dec
push
lea
adc
pop
jmp
or
add
add
sbb
dec
xor
adc
lea
jno
(bad)
in
add
out
fimul
dec
jl
data16
pop
push
mov
pop
in
test
inc
outs
or
mov
or
stos
push
push
jne
pop
and
adc
push
xor
push
cld
xchg
pop
add
add
add
pop
and
add
mov
sub
add
outs
in
mov
mov
addr16
xor
sub
inc
cld
lods
cwde
sbb
push
outs
dec
sbb
jo
call
fld
mov
lock
jne
add
std
lods
hlt
mov
jge
rcr
dec
add
add
inc
fld
test
pushf
sbb
inc
pop
ror
sbb
xor
ror
in
jmp
dec
adc
inc
mov
jno
hlt
outs
fmul
adc
lock
push
cdq
sbb
mov
ror
pop
add
add
mov
jne
das
cdq
sbb
fsubr
push
inc
jno
adc
mov
mov
fcom
sbb
je
shl
adc
call
cld
outs
inc
cld
int3
xor
add
pop
or
repz
sbb
test
cwde
mov
inc
or
add
test
jmp
outs
movs
adc
add
add
cmc
or
inc
mov
xor
xchg
(bad)
add
out
xchg
inc
adc
pushf
cld
mov
test
inc
add
and
repz
call
call
mov
add
xor
test
cwde
test
add
add
mov
inc
add
mov
pop
fwait
mov
or
and
aaa
jae
in
fcom
add
arpl
mov
call
add
and
ret
jbe
(bad)
push
aas
add
mov
not
fmul
mov
out
inc
mov
fiadd
jl
add
add
mov
hlt
mov
mov
inc
add
call
pop
leave
neg
add
add
mov
mov
scas
out
dec
push
jbe
lea
dec
mov
or
or
(bad)
jbe
or
in
and
and
pop
mov
ret
pop
adc
push
das
adc
add
shl
sbb
sbb
mov
stc
sub
cld
jmp
jb
clc
mov
and
je
inc
adc
sbb
add
jns
cwde
or
mov
les
add
inc
lock
jne
mov
and
or
or
xor
pop
or
cdq
lock
outs
mov
add
jns
mov
jge
hlt
test
mov
add
pop
pop
mov
mov
cmp
movs
adc
mov
push
mov
call
call
mov
xlat
pop
mov
leave
ret
push
mov
pusha
in
and
aam
pop
xor
jne
mov
add
add
pop
or
mov
(bad)
(bad)
mov
xor
dec
dec
fadd
mov
lea
cmp
(bad)
popa
movs
hlt
call
push
movs
or
cmp
mov
push
dec
lock
mov
jbe
push
clc
call
cmp
xchg
ret
push
mov
dec
add
add
inc
jbe
xor
fisttp
add
sbb
sub
adc
mov
ret
push
scas
ss
mov
or
and
add
mov
(bad)
push
shl
jb
ret
push
inc
or
sbb
mov
(bad)
call
mov
add
sbb
add
add
pop
data16
pop
data16
pop
push
mov
push
jge
pop
sbb
or
stc
iret
push
sbb
jl
sbb
je
inc
or
and
sub
add
jnp
ret
push
mov
mov
mov
push
mov
pop
inc
adc
popf
or
xor
add
test
add
add
scas
pop
mov
pop
enter
adc
aaa
mov
lea
out
jae
xor
fld
inc
mov
mov
call
sub
je
daa
pushf
sbb
push
fisttp
sub
inc
lods
pusha
clc
adc
cmp
lea
pop
dec
adc
add
add
test
add
loopne
push
mov
pusha
les
rep
cld
mov
xor
in
adc
mov
xchg
ret
push
mov
mov
lahf
movs
or
xchg
call
mov
les
(bad)
call
inc
or
fwait
or
pushf
and
inc
call
push
inc
adc
int3
cmp
add
add
jl
add
add
and
adc
xchg
aam
add
sbb
xlat
out
and
rcr
jnp
shl
out
mov
jnp
fistp
jb
scas
lea
daa
dec
push
add
xchg
adc
popa
shr
rol
pop
push
je
add
je
inc
or
mov
push
push
dec
cld
add
add
sbb
mov
and
stos
xchg
ret
push
mov
pop
enter
adc
ja
add
add
push
jbe
jmp
jle
mov
push
pop
sbb
bound
stos
pop
mov
ror
into
fsubr
or
je
iret
mov
aaa
das
out
and
sub
xor
push
mov
add
add
es
test
stos
sbb
jb
push
inc
add
fisttp
push
and
das
mov
xor
int3
iret
out
rcl
je
push
dec
sbb
daa
or
push
inc
add
fmul
push
das
sbb
mov
push
sbb
mov
add
call
ret
mov
rol
ret
out
xchg
or
jmp
xchg
adc
add
and
repz
adc
pop
pop
ret
pop
push
in
add
push
mov
mov
cld
stos
call
lock
dec
or
mov
add
add
add
pop
call
mov
add
rcr
fidiv
clc
add
mov
jge
sbb
push
dec
sbb
aad
jge
push
jne
std
xchg
in
mov
fld
test
and
cdq
ror
mov
(bad)
call
mov
inc
add
ror
add
pop
inc
or
sub
add
cld
push
dec
or
popf
or
or
add
push
stos
or
or
jmp
das
fwait
lock
cwde
or
jecxz
ret
pop
ins
sbb
add
push
in
add
add
lock
jmp
fcom
inc
and
jne
add
add
clc
mov
pusha
shl
jmp
fmul
jmp
fmul
adc
add
test
je
push
pop
jmp
hlt
and
lods
mov
inc
in
lahf
or
(bad)
mov
mov
sbb
jmp
mov
mov
inc
pop
jmp
movs
push
inc
or
add
add
jmp
mov
add
jg
add
jno
lea
push
inc
cld
fcomp
pop
add
cld
rcr
or
jge
push
jne
int3
xchg
pop
add
ror
shr
fisttp
pop
lahf
adc
add
bound
jnp
fsubr
push
add
add
push
fild
mov
scas
or
sub
mov
scas
ds
sub
hlt
and
or
xchg
or
mov
add
cmp
je
in
xchg
or
add
jmp
(bad)
inc
mov
mov
xor
inc
sub
inc
in
int3
inc
sbb
add
add
and
or
adc
call
push
mov
call
xor
inc
add
jns
add
push
stc
add
jb
cmp
mov
aam
pop
jmp
push
inc
aam
push
dec
lods
mov
push
add
lea
mov
cmp
add
sub
mov
scas
add
mov
out
fld
jmp
call
pushf
fisttp
mov
jmp
movs
movs
or
mov
mov
scas
call
sub
push
mov
fbstp
pop
(bad)
lea
fsubr
mov
fadd
mov
push
push
add
shl
add
add
das
mov
cmp
(bad)
jae
loope
or
rcl
jge
sbb
fmul
sub
push
inc
add
xchg
add
xor
dec
push
fadd
jmp
push
adc
ins
push
inc
sub
push
inc
sub
push
or
inc
fmul
jmp
loope
jne
mov
add
sub
add
inc
add
and
mov
mov
mov
dec
add
xchg
inc
mov
ret
dec
sub
inc
sbb
pop
add
mov
out
push
sbb
xchg
sbb
ret
sub
in
out
sbb
or
mov
add
add
inc
adc
sbb
dec
inc
push
adc
xor
inc
clc
test
jne
lahf
shr
add
sbb
je
pop
jl
in
jl
jg
mov
inc
lock
dec
in
arpl
lea
mov
sub
aaa
add
sub
or
add
out
add
and
(bad)
jmp
loopne
add
out
inc
push
fcmovb
inc
ins
fucomp
xor
or
call
fist
cmc
mov
popa
inc
or
scas
push
add
shl
or
or
jmp
fs
lock
fadd
or
xor
or
sub
add
sbb
mov
inc
in
add
sbb
mov
bound
sbb
call
cmp
sbb
and
cmc
lea
test
fld
pop
nop
jno
out
mov
add
cmp
mov
sbb
mov
add
add
sbb
popf
and
mov
or
mov
adc
inc
in
ja
lock
mov
jne
pop
inc
in
sti
das
push
call
xor
adc
(bad)
sti
fild
test
mov
xlat
mov
pop
sbb
repz
add
dec
hlt
jge
add
add
fild
mov
pop
xchg
add
mov
add
int3
mov
or
push
lea
jmp
push
mov
adc
add
mov
and
jmp
jmp
in
mov
pop
and
or
sbb
mov
add
add
pop
sbb
and
or
pop
das
and
adc
and
mov
(bad)
jbe
pop
fiadd
lea
fild
mov
add
(bad)
jne
scas
xor
cmp
je
(bad)
jns
cdq
rcl
jb
or
mov
movs
inc
inc
and
add
add
add
mov
in
dec
call
fiadd
jmp
pop
adc
in
movs
inc
inc
mov
inc
inc
mov
or
call
or
jne
xor
stc
jl
or
je
inc
add
pop
inc
add
and
mov
mov
push
dec
add
jb
or
add
add
inc
cmp
cmp
push
cmc
std
call
pop
inc
sbb
push
add
popf
daa
add
push
cmc
fld
or
cs
addr16
test
clc
(bad)
sbb
ja
sti
in
push
leave
ja
leave
inc
scas
div
daa
sbb
jmp
add
add
shl
add
push
cmc
push
mov
adc
je
imul
add
mov
pop
fmul
aam
inc
movs
mov
mov
or
in
sbb
bound
adc
in
pop
or
or
out
fidiv
int3
ret
add
add
hlt
pop
push
add
or
in
add
das
popf
shr
sets
iret
pop
in
call
xor
or
adc
mov
lock
repnz
dec
(bad)
clc
call
and
and
adc
shl
push
int3
inc
idiv
repz
adc
add
pushf
inc
test
fadd
add
jl
add
push
mov
movups
mov
add
stos
and
add
fild
call
pop
push
or
ror
pop
jnp
mov
jmp
adc
cwde
jmp
call
fild
pop
out
and
not
(bad)
add
add
add
dec
jp
in
or
jmp
adc
dec
mov
and
enter
cmc
add
test
mov
push
add
jecxz
inc
inc
test
out
lods
push
fcom
je
int3
test
add
and
push
add
push
add
add
lea
idiv
xchg
or
sub
shr
out
mov
pop
mov
mov
jg
adc
cs
jmp
sbb
add
adc
lea
mov
adc
pop
cdq
sbb
into
push
gs
cmc
adc
jns
lahf
and
mov
add
add
jae
push
sub
(bad)
shr
cld
mov
sbb
lea
test
xor
rcr
inc
adc
popf
sbb
(bad)
(bad)
xlat
push
jge
(bad)
inc
push
je
mov
inc
cld
imul
adc
cli
push
into
call
add
add
lods
sbb
mov
mov
das
cwde
jne
pop
mov
ds
into
call
ins
(bad)
sti
jne
push
inc
adc
sbb
je
out
std
push
pop
mov
mov
rol
jne
push
je
dec
fsubr
pushf
mov
not
mov
ret
sub
fcmovne
loop
add
jl
cld
add
add
and
je
push
inc
or
sbb
jne
iret
leave
mov
or
inc
jne
jno
mov
push
inc
or
inc
je
dec
dec
add
mov
push
jne
dec
inc
add
pop
add
out
outs
adc
pop
fdivr
add
outs
add
pop
xchg
push
xor
add
add
jae
std
mov
mov
ret
push
sub
xchg
fild
jmp
dec
dec
or
add
sbb
jb
in
adc
jmp
dec
dec
add
adc
jne
push
inc
add
sbb
in
fstp
push
scas
push
call
dec
(bad)
xor
pop
fadd
add
add
and
ret
push
mov
push
jl
cmc
or
jb
dec
dec
add
fadd
add
jo
or
jb
dec
dec
add
fadd
or
pop
mov
ror
mov
push
ret
rol
repnz
addr16
addr16
and
ret
push
mov
add
add
pop
jl
je
jne
fisttp
sbb
sub
add
mov
ret
xchg
in
cmp
xor
dec
adc
fisttp
imul
jmp
pop
cmps
int
imul
call
mov
cmp
je
dec
and
pushf
xchg
inc
add
add
inc
inc
int3
in
dec
movs
jl
or
movs
icebp
and
cmp
mov
sub
xor
lds
(bad)
rol
sub
cwde
into
mov
jo
mov
jle
popa
fnstenv
sahf
jmp
ror
jl
jmp
add
add
add
add
add
mov
xchg
jno
cmp
or
mov
ror
add
add
or
mov
(bad)
out
add
xchg
jmp
jmp
add
mov
(bad)
jmp
ins
lds
or
jae
push
iret
jmp
push
inc
or
add
add
(bad)
pop
jns
xor
xrelease
jmp
popf
sbb
cmp
nop
jmp
syscall
jne
dec
jb
ins
loope
push
fmul
mov
enter
inc
or
iret
sbb
cmp
(bad)
cmp
inc
dec
add
mov
jmp
mov
add
add
fadd
sub
sahf
sub
mov
out
out
out
mov
ficomp
out
mov
jle
xor
fild
mov
das
pop
add
add
ins
jmp
fild
test
fild
add
cmp
pop
out
dec
cld
pop
js
hlt
stc
adc
xor
xchg
mov
loopne
sub
fild
mov
enter
fidiv
aas
fild
or
pop
or
or
or
imul
jns
mov
sub
sub
sub
pushw
add
dec
pop
inc
inc
sub
push
sub
mov
push
mov
mov
and
fsubrp
jnp
imul
add
add
cdq
in
mov
push
mov
mov
hlt
gs
imul
add
mov
pop
jns
in
pop
mov
pop
jns
mov
pop
(bad)
cmc
mov
inc
add
lahf
mov
mov
add
dec
inc
call
fiadd
adc
sbb
add
push
sub
add
add
add
mov
mov
xor
mov
inc
pusha
fsubrp
xchg
mov
fimul
fld
jge
call
addr16
add
(bad)
std
or
pop
adc
mov
ror
add
je
shld
ret
add
add
mov
pop
jp
movs
add
cli
jne
add
ja
pop
dec
cld
fdivr
inc
pop
ds
idiv
mov
jge
push
int3
pop
cmc
add
jle
and
mov
cwde
test
pop
xchg
ret
add
add
push
sbb
adc
rcr
add
add
add
push
push
or
sbb
push
aam
add
mov
push
add
sbb
jne
pop
inc
or
adc
mov
rcr
test
push
dec
mov
fwait
push
jne
mov
pop
stos
out
fcomp
add
mov
push
jl
sub
sub
add
add
push
inc
or
adc
ja
push
mov
jae
xlat
adc
inc
loopne
inc
sbb
adc
mov
int3
les
loopne
(bad)
int3
outs
lmsw
mov
in
call
sbb
jb
or
daa
cwde
cmp
call
mov
ret
jle
jmp
or
je
dec
rcr
or
fs
je
inc
shl
or
fs
jns
mov
psubsw
cdq
retf
sbb
mov
pop
jnp
and
add
outs
pop
or
call
pop
inc
adc
adc
mov
cmps
ret
jne
pusha
jle
in
jb
add
add
or
xchg
pop
dec
or
sbb
cmp
add
scas
mov
aas
jmp
push
jg
out
or
cmp
sbb
jae
add
iret
jmp
pop
push
mov
js
mov
add
or
mov
mov
mov
xchg
xor
cmp
je
lahf
stos
jmp
adc
mov
js
mov
inc
or
add
mov
jno
mov
aam
adc
cmp
jecxz
mov
add
cmp
push
push
or
push
inc
add
sub
mov
jecxz
mov
adc
mov
add
movs
ror
add
adc
hlt
adc
rcr
out
mov
jne
add
adc
hlt
(bad)
shl
add
imul
cmp
rol
adc
cmc
adc
mov
ja
add
add
lods
pop
js
movs
rol
mov
jns
jne
pop
mov
fdiv
pop
or
cmp
call
fadd
inc
push
fild
mov
mov
bound
pop
inc
(bad)
push
add
cmp
inc
add
add
in
add
fiadd
add
fdiv
shr
or
and
cdq
inc
inc
mov
loop
mov
mov
and
inc
add
retf
mov
pop
jns
mov
and
movs
jmp
add
call
or
js
xor
pusha
(bad)
jmp
push
add
imul
(bad)
sbb
mov
add
sbb
call
scas
ror
or
add
and
add
ins
fadd
add
in
call
imul
icebp
mov
mov
push
mov
pop
enter
mov
push
adc
mov
shr
inc
jo
add
fst
add
add
loopne
inc
or
int3
mov
push
adc
addr16
dec
add
or
mov
push
push
sbb
adc
add
iret
mov
movs
or
push
add
daa
push
inc
or
xchg
add
add
or
push
in
dec
adc
sub
jae
pop
adc
push
add
add
test
push
or
or
cmp
(bad)
sub
push
push
add
push
or
dec
inc
or
wbinvd
mov
fsubr
int3
movs
icebp
add
pop
setp
ffree
lea
mov
adc
cwde
(bad)
xchg
cli
pop
inc
add
mov
call
and
(bad)
dec
fild
or
mov
jl
stos
sbb
add
jne
sub
mov
int3
push
bound
add
mov
(bad)
call
retfw
(bad)
(bad)
cdq
ja
sub
push
fsubr
fdiv
daa
je
div
fidiv
push
sbb
add
add
sbb
cmp
jb
scas
shr
add
enter
jmp
dec
adc
mov
add
mov
add
mov
dec
mov
push
in
push
daa
push
pop
or
add
push
dec
cld
pop
imul
pop
std
call
aas
stos
lea
jb
fist
add
add
je
add
inc
add
add
pop
cmp
fidivr
call
fild
push
mov
xchg
dec
inc
adc
in
or
mov
shr
and
inc
out
push
cmp
out
daa
arpl
(bad)
sub
(bad)
sub
add
add
add
cmc
fld
or
out
and
int3
push
or
mov
je
daa
fdivp
add
into
aam
call
or
add
jnp
add
or
rcl
repz
pop
fimul
rcl
arpl
or
shr
inc
jl
fld1
inc
cmp
aad
add
add
add
mov
jo
rcl
fs
lahf
std
adc
repz
add
fidiv
(bad)
jg
or
pop
sar
shl
add
push
je
mov
push
inc
or
or
movs
cdq
imul
(bad)
jl
mov
test
fdivr
jne
pop
lock
push
je
mov
(bad)
repz
icebp
mov
add
add
xlat
push
dec
fsubr
lahf
iret
dec
push
mov
dec
push
loope
aam
sbb
(bad)
(bad)
mov
into
(bad)
push
pop
js
sbb
mov
jmp
ja
add
call
retf
ja
shl
push
sbb
jl
loopne
mov
and
fisttp
aad
push
(bad)
jne
pop
fs
movs
out
call
mov
call
(bad)
call
push
loope
aad
cmps
ja
(bad)
out
sbb
call
daa
in
mov
cmps
or
push
mov
mov
pop
or
lock
pop
xchg
jge
cwde
stos
sub
jno
cmp
add
add
jmp
sub
jmp
outs
jp
pop
xor
push
xor
cld
mov
cld
jae
or
sbb
std
jne
xchg
add
mov
pop
out
mov
jo
jmp
add
add
arpl
int3
xlat
add
fs
test
pushf
rol
add
scas
sahf
pop
ret
cdq
arpl
push
jnp
mov
dec
dec
je
cld
mov
lds
cmps
ret
add
or
lea
shl
(bad)
jmp
mov
add
in
push
aas
or
inc
hlt
fld
rol
add
test
fsubr
stc
or
retf
add
ret
or
mov
mov
scas
xchg
test
mov
add
sbb
popf
add
fld
test
test
punpckhwd
add
add
add
push
mov
fist
das
retf
or
pushf
leave
sar
xchg
arpl
je
popa
jg
movs
into
add
and
add
mov
dec
jmp
mov
ret
cmp
or
add
xor
fidiv
cmp
sahf
fadd
sti
imul
call
std
jne
jmp
and
jo
outs
repnz
out
push
add
sbb
or
mov
add
cmc
push
xor
xchg
dec
add
repnz
int3
pop
(bad)
push
(bad)
pop
repnz
pop
ret
push
mov
cmc
push
mov
mov
iret
call
call
int3
sbb
push
in
inc
add
add
js
add
ja
(bad)
push
fbld
jmp
pop
leave
call
adc
mov
lea
cmps
(bad)
jae
push
add
and
sbb
and
push
aaa
(bad)
call
js
jne
outs
and
or
jo
pop
repnz
mov
push
add
sbb
rol
add
hlt
ss
call
daa
movs
or
call
out
mov
add
scas
ds
add
ins
in
(bad)
fistp
or
jns
cmp
jbe
repz
adc
xor
add
xor
in
jmp
xlat
jmp
and
add
addr16
in
jne
dec
jnp
add
(bad)
inc
in
pushw
in
rcl
mov
repz
hlt
mov
sbb
cmp
not
push
mov
mov
push
jmp
pop
fld
push
and
push
imul
je
(bad)
in
sbb
test
add
add
int3
or
cdq
mov
stos
loop
(bad)
call
neg
add
and
jl
fld1
pop
stc
fld
mov
add
add
in
cmp
jb
outs
sbb
call
pop
(bad)
sbb
push
mov
push
or
push
and
and
rol
cmp
fucomip
mov
je
add
imul
mov
aas
sbb
call
push
or
mov
mov
add
and
pop
in
aaa
inc
aam
jmp
cdq
mov
cmp
and
jmp
push
jg
jmp
sub
add
add
add
jo
or
call
sub
add
aad
call
not
dec
(bad)
dec
gs
push
out
push
sub
cmp
test
and
mov
cmp
js
push
push
jnp
push
add
dec
mov
inc
movs
movs
leave
pop
pop
add
add
add
inc
movs
movs
outs
data16
cmp
jg
adc
inc
mov
jno
xor
sbb
enter
out
sbb
repz
xor
faddp
ret
jnp
call
hlt
movs
fiadd
push
pop
jl
dec
inc
add
call
cmp
pop
ret
add
push
jmp
call
enter
imul
add
call
pop
scas
cdq
pop
pop
out
add
jnp
dec
out
add
in
pop
call
mov
ffree
add
das
add
mov
add
test
inc
add
lock
add
add
dec
mov
call
add
mov
fadd
push
xor
inc
add
icebp
sar
ret
xor
call
fld
push
and
call
mov
stos
call
cld
xor
je
mov
ins
xchg
inc
hlt
push
sbb
repz
fcomp
add
add
add
xchg
add
push
outs
inc
jmp
imul
mov
je
jmp
aas
sahf
pop
pop
data16
push
das
inc
imul
xlat
mov
popf
pop
sar
sbb
call
out
jne
jmp
mov
inc
mov
sub
(bad)
call
dec
inc
or
pop
jmp
add
mov
jb
ret
add
pop
js
and
add
lods
ret
lea
ret
push
outs
push
push
(bad)
jns
mov
fdiv
std
call
call
stos
add
push
test
or
cmp
int3
or
sbb
sbb
shl
push
mov
std
cmp
repnz
inc
ret
push
fmul
add
fild
call
out
pushf
ret
in
cmp
leave
sbb
stos
ret
jb
dec
fcom
and
shl
popa
test
cwde
mov
mov
push
not
adc
ret
jns
in
sbb
sub
popf
ret
ja
push
cmc
in
fiadd
mov
push
mov
fs
add
add
or
dec
adc
xor
call
jmp
push
xor
pop
data16
push
out
push
cmp
jae
out
sbb
push
lods
mov
dec
add
pop
dec
and
cmp
inc
add
fadd
or
and
push
aaa
cdq
push
call
cmps
fwait
or
add
fild
push
outs
dec
cmp
retf
add
mov
jcxz
adc
mov
push
add
rol
ret
inc
push
mov
pop
add
dec
pushf
push
and
adc
and
ret
xor
sub
jne
jmp
inc
in
add
add
add
dec
ror
imul
mov
xor
daa
call
jle
add
scas
sbb
clc
adc
sub
mov
jg
cmp
jo
outs
lock
div
dec
add
sbb
add
fucomi
inc
adc
(bad)
jmp
add
pop
jne
add
add
sub
sbb
fs
ins
push
add
je
sti
adc
mov
out
in
add
fnstenv
push
or
aaa
lods
hlt
add
jmp
imul
mov
mov
xor
pop
fs
dec
aam
mov
push
es
mov
mov
gs
push
add
add
dec
loopne
mov
and
(bad)
dec
push
popa
in
call
aas
sbb
call
ja
and
jl
add
je
je
idiv
lock
in
call
out
dec
mov
pop
fs
vpunpckhdq
loop
bound
xor
(bad)
(bad)
push
add
add
jmp
mov
out
and
fiadd
push
jge
add
daa
test
lea
out
lods
pusha
dec
cld
and
sub
jmp
ret
loopne
lock
fild
retf
pop
ret
stc
and
mov
scas
lea
enter
and
add
add
ss
sub
ins
stc
push
rcr
adc
fiadd
pop
mov
and
call
adc
add
fwait
mov
test
push
jmp
hlt
and
test
add
in
add
movs
and
add
out
jb
inc
aad
in
add
cli
mov
add
add
aaa
push
or
or
jne
mov
inc
cld
mov
add
jl
in
call
sub
je
pop
jp
ins
retf
add
loope
add
clc
and
jmpw
fld
jmp
cmp
inc
dec
loop
fisttp
sub
pop
clc
add
xor
add
add
jmp
sub
das
sbb
fsubr
loopne
hlt
pop
inc
adc
push
sub
push
inc
hlt
pand
jae
pop
dec
sbb
add
aas
(bad)
das
add
add
pop
(bad)
add
dec
adc
sub
mov
clc
int
icebp
retf
lea
push
call
add
add
out
or
xor
rsm
push
add
and
inc
adc
xchg
cli
push
loope
mov
mov
lahf
and
sahf
sub
movs
outs
mov
cmp
scas
mov
enter
pop
stc
or
aam
adc
and
jb
push
or
jb
adc
or
adc
add
add
fistp
push
pop
xchg
bnd
neg
or
clc
jl
add
add
xchg
add
cdq
shr
(bad)
je
add
or
ror
push
push
dec
clc
cmps
push
or
leave
adc
ret
jae
leave
ret
mov
push
shl
adc
dec
add
in
ja
int3
or
add
add
add
add
callw
push
das
sub
in
mov
push
push
push
icebp
pop
sub
les
pop
lahf
push
mov
ret
cmp
scas
add
add
cwde
adc
cmp
mov
push
inc
adc
sahf
or
xchg
xchg
push
stc
mov
or
add
add
stc
retf
call
and
add
adc
sbb
retf
add
pop
push
mov
push
dec
lock
xchg
adc
mov
mov
pop
ret
sbb
jmp
cmps
push
mov
pop
cmp
int3
test
out
mov
add
lahf
add
jl
add
add
lahf
add
cmp
adc
fadd
(bad)
sub
movs
pop
dec
cld
rcr
lea
call
in
pop
dec
and
sbb
scas
add
add
enter
stos
add
add
add
mov
(bad)
(bad)
loopne
push
push
add
add
aas
xchg
push
lea
aaa
mov
dec
cmps
fadd
cmp
enter
stos
add
add
nop
add
out
mov
jmp
dec
push
add
or
test
retf
dec
push
je
inc
adc
sbb
push
in
and
mov
add
xchg
mov
add
add
add
cld
lods
add
add
add
nop
test
stos
test
loopne
push
push
aas
xchg
or
fwait
dec
add
clc
lea
add
movs
push
dec
sbb
movs
or
pop
clc
or
add
fs
clc
or
mov
add
add
add
sub
add
lea
popf
dec
sub
cmc
int
scas
mov
lea
loope
add
(bad)
mov
aaa
xchg
enter
inc
fcomp
or
and
jb
push
dec
add
fmul
or
fisttp
lea
aam
push
in
push
or
int3
dec
sub
dec
mov
(bad)
mov
mov
add
add
add
cmp
cmps
jne
in
iret
jb
call
add
or
push
push
add
fmul
adc
mov
loop
int
scas
xchg
push
lea
loopne
add
mov
enter
inc
fcomp
addr16
push
add
fmul
or
add
add
(bad)
(bad)
out
rol
or
xchg
cli
add
or
push
das
call
daa
or
push
push
add
fmul
or
mov
xor
lea
push
inc
or
fadd
scas
cdq
push
sub
push
add
inc
adc
mov
add
add
lds
and
jb
push
push
add
fmul
or
mov
xor
lea
fadd
cld
out
add
call
retf
xchg
add
push
add
clc
mov
dec
sbb
sbb
cmp
jb
out
cwde
add
addr16
inc
add
call
mov
cwde
add
addr16
inc
add
mov
mov
add
scas
sbb
jge
icebp
inc
cld
pop
adc
dec
add
push
push
push
or
dec
hlt
daa
push
push
call
outs
xchg
out
sub
(bad)
or
in
mov
sti
dec
stc
cmp
shl
scas
(bad)
imul
jbe
inc
movs
push
jne
test
data16
inc
js
aaa
pop
sub
add
je
push
mov
pop
add
sbb
push
stos
dec
icebp
push
mov
lea
and
push
mov
lea
and
lea
mov
add
and
call
enter
dec
xor
add
ficomp
mov
mov
pop
fimul
inc
mov
fiadd
mov
ret
mov
push
inc
sbb
jmp
xchg
dec
(bad)
pop
mov
sbb
add
jmp
add
pop
call
push
bound
test
call
mov
add
add
mov
sbb
retf
pop
fs
xor
jbe
or
retf
push
jbe
cld
adc
jbe
or
retf
push
jbe
fsub
inc
push
mov
hlt
fld
call
popa
ins
test
pushf
outs
and
lea
add
movs
xor
test
pop
retf
push
mov
add
add
je
add
jg
(bad)
call
les
ror
add
pop
fiadd
add
iret
(bad)
xor
lods
fiadd
data16
and
fiadd
add
call
cmc
push
add
ss
(bad)
push
cmp
fldcw
cdq
push
lea
xor
ret
shl
mov
add
add
xlat
add
int3
mov
add
add
dec
mov
push
xor
add
(bad)
push
mov
add
(bad)
push
loope
lds
je
call
push
mov
add
xor
push
mov
push
shr
fsubr
loope
and
push
mov
add
imul
fs
or
ret
push
test
push
popa
mov
call
dec
loopne
lea
hlt
call
push
scas
mov
int3
inc
ret
push
pop
ret
cli
test
imul
test
imul
test
imul
(bad)
jmp
add
add
inc
fs
dec
clc
fisttp
test
pop
fs
and
inc
sbb
fs
or
sar
fs
cmp
cmp
pushf
cli
add
sar
bound
xor
jbe
mov
pop
sar
bound
hlt
bound
jp
cli
add
mov
push
or
add
xor
add
call
(bad)
test
mov
fild
add
pop
cli
add
shl
les
push
loope
lds
xor
mov
out
call
inc
add
lea
jmp
inc
arpl
push
or
add
ffree
inc
shl
add
adc
mov
(bad)
push
add
movs
data16
mov
xchg
movs
fld
(bad)
idiv
(bad)
push
xchg
fld
add
mov
je
mov
fld
(bad)
jns
or
(bad)
sbb
inc
add
add
fld
add
fisttp
add
popa
add
fadd
add
jmp
ret
push
push
mov
lea
in
xor
(bad)
push
int3
and
add
push
mov
adc
and
or
or
call
pop
and
add
add
je
fmul
ror
pop
aaa
mov
fcmovne
icebp
mov
leave
shl
inc
pusha
leave
shl
pop
sbb
mov
jle
cmp
dec
shl
cmp
push
call
fdiv
fist
stos
jmp
sti
pop
cmp
cmps
pop
push
int3
cmps
fiadd
hlt
test
ss
lods
adc
add
add
mov
pop
imul
jge
movs
xor
add
sub
add
pop
cmp
add
and
push
mov
push
inc
adc
mov
pop
test
test
cmp
cwde
push
out
sub
add
test
mov
add
add
mov
push
(bad)
jmp
or
out
or
mov
mov
iret
ror
fdivr
jne
test
dec
in
mov
add
push
mov
adc
add
dec
push
mov
call
xor
add
add
add
or
call
popf
lods
ret
push
scas
sti
mov
test
or
cmp
nop
add
add
mov
inc
loopne
rol
adc
int3
fdiv
add
mov
call
pop
xchg
xor
jecxz
cmp
in
pop
sbb
or
add
add
mov
mov
movs
fld
cdq
or
mov
adc
std
stos
adc
daa
lea
cmp
add
(bad)
push
jne
sub
push
mov
push
je
int3
xor
push
pop
pop
or
(bad)
fsubrp
out
push
(bad)
jmp
xchg
xor
mov
(bad)
xchg
push
call
mov
aaa
movs
sbb
add
add
fadd
adc
mov
mov
sbb
add
xchg
push
call
xlat
and
mov
push
mov
sahf
or
fisttp
cmp
jmp
dec
sbb
fadd
inc
pusha
stos
rol
(bad)
mov
pop
inc
add
cmc
add
add
add
je
mov
call
pop
push
xlat
cmp
cwde
fadd
shr
dec
add
dec
adc
adc
hlt
ffreep
add
push
inc
or
pop
jne
or
push
or
in
add
fld
aaa
or
add
or
add
push
and
and
add
add
pop
pusha
(bad)
pop
adc
call
mov
pop
mov
mov
lahf
push
and
scas
mov
rcr
in
jnp
fiadd
mov
adc
mov
mov
outs
push
push
mov
push
inc
adc
cwde
or
addr16
imul
mov
fucomi
push
mov
add
or
inc
or
push
add
add
adc
push
push
sti
adc
mov
fild
fstp
mov
repz
div
adc
mov
mov
pop
pop
imul
jb
ror
out
cmp
add
ror
inc
mov
inc
in
adc
jmp
add
fld
pop
xchg
movs
leave
ret
mov
hlt
inc
or
add
add
add
or
stos
pop
shl
rcr
fisttp
add
fucomp
add
mov
les
xchg
call
mov
pop
shl
cdq
fidiv
push
jmp
add
add
fsubr
add
mov
les
xchg
(bad)
jg
fadd
cmp
mov
sbb
adc
or
xor
add
sbb
or
adc
movs
push
stc
add
push
mov
fnstcw
rcl
xchg
mov
sub
movq
lahf
fidivr
iret
sbb
call
mov
add
add
fwait
not
push
jmp
pop
lods
sbb
or
loop
add
test
add
and
dec
add
push
push
jb
xor
fisub
jg
sub
mov
push
and
add
hlt
rcr
or
jmp
mov
add
add
ror
call
pop
pop
popf
push
cmp
jmp
pop
hlt
das
inc
fsub
xchg
movs
pop
ret
stc
push
in
add
stc
mov
xchg
mov
out
shr
pop
idiv
mov
mov
xor
test
pop
shl
clc
cwde
fsubr
jnp
add
add
fiadd
mov
sub
mov
cdq
ins
or
mov
or
std
jne
xor
add
fimul
lock
adc
jg
mov
add
fild
mov
(bad)
mov
add
clc
fdiv
cmp
add
or
(bad)
jmp
out
add
add
add
add
add
dec
push
pop
fld
pop
leave
mul
add
pop
cmp
(bad)
or
mov
add
and
imul
stos
test
adc
ficomp
outs
fwait
or
sbb
call
dec
xchg
out
fld
pop
add
add
daa
jnp
add
jnp
add
jnp
add
mov
cmc
stos
xor
and
stos
add
(bad)
jns
push
add
or
jge
call
out
dec
or
popf
add
fadd
mov
sahf
mov
cmps
and
push
jp
mov
scas
mov
sub
lods
inc
add
cmc
stc
jns
je
add
add
aad
cli
jmp
adc
gs
ret
adc
sbb
setnp
je
xor
mov
mov
icebp
inc
cld
sub
pop
idiv
sub
jmp
iret
xchg
mov
call
fadd
mov
xchg
lea
das
jo
shl
mov
adc
adc
jne
pop
(bad)
jne
xor
add
xor
scas
call
and
lock
hlt
je
lahf
mov
push
lahf
test
in
add
ja
mov
add
push
pop
ins
pop
pop
ins
xlat
pop
leave
cmps
out
add
jo
add
fsubr
(bad)
mov
pop
or
add
cmps
js
add
jns
mov
mov
test
pop
lock
jbe
daa
sub
pusha
daa
adc
fist
pop
xchg
inc
mov
add
jns
in
push
gs
adc
jne
add
jp
call
jg
or
jnp
add
pop
lds
add
add
dec
push
pop
popf
sbb
in
add
stc
mov
out
sub
movs
and
fs
xor
sub
inc
dec
jmp
mov
int3
fcmovu
add
adc
dec
add
push
pop
idiv
add
call
push
imul
pop
add
add
xor
mov
sub
adc
mov
outs
js
test
jp
call
pop
and
sbb
stc
cmp
jne
imul
jmp
das
xchg
jmp
add
add
dec
push
mov
fistp
push
lahf
pop
leave
in
add
xor
sbb
ror
add
jne
add
add
je
sar
call
fld
mov
imul
pop
lds
dec
push
pop
std
sbb
mov
add
test
jbe
push
lahf
add
dec
ja
add
pop
popa
aam
pop
mov
add
or
in
loopne
push
mov
jg
das
sbb
iret
fwait
push
std
inc
add
add
leave
jmp
add
movs
popa
jl
je
pop
je
out
adc
call
mov
sub
call
std
jae
scas
sub
add
xor
add
add
push
jl
test
stc
xlat
add
out
ror
pop
cmp
mov
push
mov
test
jmp
or
aad
(bad)
popf
fild
mov
xlat
mov
pop
jns
jecxz
mov
fistp
ret
adc
jne
out
lods
push
lea
fdivr
mov
(bad)
cmp
pop
loope
shr
push
mov
imul
loopne
shl
mov
add
add
push
movs
add
jns
in
push
scas
and
or
hlt
call
pop
(bad)
push
dec
jl
jne
popf
pop
ret
push
mov
int3
fs
add
push
inc
or
mov
push
mov
cmp
mov
lock
push
enter
fldpi
mov
inc
adc
sbb
sub
enter
add
add
sub
and
mov
out
retf
mul
fsub
fimul
movzx
(bad)
jmp
ret
mov
add
(bad)
add
in
call
fisttp
hlt
(bad)
sub
in
push
pop
inc
idiv
shr
call
cld
and
mov
fs
mov
add
xchg
push
test
cld
std
imul
hlt
div
sti
adc
mov
inc
push
adc
sub
sti
std
add
call
out
pop
xor
dec
xor
imul
loopne
push
repz
std
call
fild
add
dec
adc
mov
add
add
pop
inc
adc
sbb
pop
pushf
idiv
outs
and
mov
nop
mov
int3
int3
(bad)
call
and
or
enter
inc
mov
dec
rcl
add
cmps
and
adc
fild
add
cmp
inc
and
mov
and
mov
retf
std
inc
jo
push
add
add
ja
push
call
push
cmp
jb
mov
mov
inc
add
jg
push
add
dec
out
repnz
call
neg
hlt
fist
sbb
pop
call
call
idiv
mov
jae
inc
add
add
cmp
add
inc
xchg
mov
sub
add
cli
mov
mov
jbe
div
je
mov
mov
ins
inc
nop
je
shr
(bad)
add
call
inc
sub
dec
push
call
lods
fwait
cli
add
ins
pop
lods
outs
movs
push
jmp
idiv
or
fiadd
add
push
jl
jmp
icebp
int
add
in
test
and
mov
xchg
inc
mov
rcl
inc
cmc
pop
call
pop
(bad)
jmp
outs
or
inc
lock
add
adc
push
retf
rol
add
cdq
push
mov
mov
add
add
das
sbb
mov
and
popf
inc
pop
(bad)
call
pop
sub
push
xor
ja
fld
cmp
std
inc
stos
in
sub
icebp
cmp
in
push
pop
or
icebp
jne
push
mov
call
jl
jmp
add
add
push
in
and
or
iret
xor
dec
push
push
push
int3
(bad)
rol
fs
leave
ret
out
(bad)
xor
sub
cmp
jae
sahf
fisttp
mov
imul
call
xor
in
fwait
push
stc
jmp
hlt
div
shl
(bad)
pop
xlat
add
jmp
pop
ret
push
add
add
pushf
add
add
mov
dec
mov
mov
mov
inc
add
leave
pop
xor
(bad)
mov
mov
cdq
out
vpsubq
mov
mov
stc
mov
push
shr
hlt
pop
sti
add
fadd
lea
fiadd
add
add
pop
dec
add
fisttp
enter
add
mov
cmp
inc
(bad)
mov
pop
push
jmp
mov
mov
push
inc
adc
call
sub
and
jmp
add
rep
mov
add
mov
call
dec
out
add
add
into
and
(bad)
(bad)
dec
or
stos
push
(bad)
test
fadd
add
inc
xor
mov
lahf
xchg
push
inc
lea
gs
fiadd
test
and
or
ret
and
add
ficom
sbb
add
in
mov
lock
adc
add
add
sbb
(bad)
xchg
and
call
xlat
add
(bad)
adc
repz
fisttp
add
dec
sub
add
fsub
mov
push
jbe
lods
pushf
or
rcr
add
cmps
or
adc
mov
and
std
call
jno
fs
fld
add
out
repnz
xor
loop
or
add
add
and
jle
dec
test
and
lea
rcr
add
and
leave
or
add
mov
adc
xchg
and
call
adc
std
add
sub
dec
out
leave
fadd
mov
push
iret
cdq
sbb
mov
mov
add
mov
add
and
test
adc
push
or
lock
outs
add
inc
cli
mov
lea
movs
and
fdiv
add
in
inc
cld
not
adc
fwait
push
lea
(bad)
call
or
xor
sub
cmc
and
adc
pop
cld
mov
push
mov
mov
(bad)
out
mov
std
inc
add
add
loopne
je
push
pushf
add
(bad)
call
cmp
(bad)
dec
and
add
and
test
and
add
push
lahf
call
or
std
push
test
imul
adc
hlt
pop
xor
inc
sbb
add
add
add
mov
fs
cmp
fild
push
adc
test
(bad)
(bad)
fsub
inc
adc
loopne
add
arpl
clc
aas
and
loope
sbb
repz
ss
add
add
mov
jne
arpl
add
add
test
jmp
add
gs
adc
or
outs
xor
cmp
fimul
push
and
add
adc
rcr
fiadd
jae
test
mov
or
popa
ficom
(bad)
push
loope
repnz
fadd
add
mov
dec
mov
iret
in
(bad)
mov
add
add
pop
(bad)
and
test
pop
ret
push
lods
rol
out
fimul
or
sub
adc
or
stos
and
dec
daa
clc
mov
sub
ds
mov
mov
fidiv
pushf
data16
mov
jno
mov
add
add
mov
cmp
xchg
(bad)
(bad)
add
das
adc
out
push
mov
int3
pop
add
fs
mov
and
popf
sub
call
fld
add
add
(bad)
push
or
idiv
repz
dec
or
or
jmp
add
add
in
add
out
and
je
add
and
jb
imul
call
das
cmp
mov
outs
sub
inc
xchg
pop
or
mov
sub
je
or
jmp
inc
out
and
add
mov
imul
adc
jns
mov
add
add
jmp
adc
dec
call
sub
sbb
(bad)
ror
xor
std
xchg
jmp
xor
imul
and
pushf
push
push
pushf
inc
(bad)
call
out
add
loop
movs
idiv
and
inc
idiv
dec
add
in
fisttp
add
xchg
ret
cld
std
(bad)
ds
mov
pop
inc
and
or
sbb
add
xor
inc
cld
aaa
test
mov
sub
cwde
and
adc
xor
sub
lods
retf
mov
or
jnp
neg
pop
cmps
adc
popa
inc
ret
add
add
add
daa
and
icebp
(bad)
stc
mov
mov
or
jmp
mov
add
xor
and
and
call
xchg
(bad)
imul
jne
pop
scas
jmp
or
inc
lock
add
jno
push
jle
pop
test
add
je
ins
lahf
push
mov
add
add
sbb
add
(bad)
and
inc
mov
jmp
jne
popa
inc
sahf
call
aaa
and
cmp
icebp
lea
inc
jmp
dec
inc
jmp
pop
jl
in
movs
pop
adc
sub
in
add
test
pop
(bad)
leave
pop
mov
push
int3
dec
retf
inc
leave
ret
out
std
xor
adc
add
add
cld
mov
mov
adc
cmp
sahf
dec
stc
add
loopne
mov
ja
or
stc
jg
or
stc
mov
mov
sar
inc
xor
adc
sbb
shr
stc
add
scas
sub
aaa
and
jae
adc
sbb
add
add
cmp
arpl
add
jmp
add
dec
and
jmp
fist
or
test
cmp
sub
sub
xor
cmc
and
push
mov
mov
(bad)
jmp
idiv
pop
fmul
call
rcl
add
push
call
mov
fisttp
shr
test
push
mov
retf
inc
mov
pop
add
lea
mov
lock
fucomp
add
je
inc
or
mov
enter
or
jno
scas
jo
push
sub
mov
mov
xlat
add
scas
mov
lea
add
add
push
mov
aad
or
lods
mov
ror
hlt
push
pop
inc
adc
repz
outs
xor
lea
or
or
cli
mov
mov
hlt
iret
das
mov
cmp
or
mov
shr
fild
add
fld
lock
add
inc
pop
loopne
mov
push
sub
add
add
fadd
mov
icebp
dec
add
outs
mov
not
and
cmp
cdq
or
pop
mov
or
mov
cmps
sti
or
fisttp
mov
call
dec
mov
sub
clc
call
repnz
hlt
int3
and
push
cmp
xlat
mov
add
add
fld
int3
push
fdivr
out
sti
add
out
lds
neg
mov
call
pop
fs
je
inc
sbb
bnd
mov
pop
ret
bnd
jmp
call
hlt
(bad)
stc
add
neg
add
adc
push
sbb
(bad)
jne
and
or
add
add
mov
call
out
sti
fadd
sub
(bad)
push
pop
adc
push
das
shr
lods
pop
add
mov
sub
add
mov
mov
sub
in
call
in
add
cmp
adc
add
pop
pop
mov
pop
scas
sbb
add
popf
inc
ret
push
mov
sbb
jge
push
(bad)
jne
and
or
cdq
je
(bad)
sti
fild
sub
pop
leave
cmps
jae
push
jg
push
push
sub
fsubr
sub
cdq
ds
jae
dec
sbb
or
test
mov
jae
add
pushf
or
lods
adc
add
add
je
cmp
mov
pop
call
pop
dec
inc
ret
push
out
push
sub
sub
enter
mov
sub
jne
sub
stos
mov
add
inc
pop
ret
push
jle
add
repz
push
bound
dec
(bad)
xlat
add
rcl
xchg
add
add
pop
jl
mov
das
(bad)
stc
outs
mov
adc
add
inc
or
adc
mov
adc
or
inc
pop
(bad)
push
mov
(bad)
(bad)
imul
scas
(bad)
xlat
add
ds
mov
fwait
(bad)
out
sti
add
scas
cs
or
cmp
jbe
adc
add
jno
out
daa
fiadd
push
lea
add
adc
mov
jmp
pop
(bad)
fs
add
adc
lock
fsubr
int3
daa
fld
movs
adc
movs
fld
push
popa
ret
xlat
call
mov
outs
and
xchg
pop
jl
mov
mov
mov
adc
add
add
add
dec
pusha
pop
inc
or
movntq
scas
sbb
push
or
sub
cmp
sahf
icebp
push
(bad)
(bad)
out
mov
add
ins
loopne
hlt
pop
push
mov
adc
repz
dec
lock
sbb
adc
rcl
dec
or
inc
cmp
xorps
ja
push
mov
dec
mov
adc
dec
add
add
mov
(bad)
mov
adc
dec
int3
repz
cmp
adc
dec
mov
adc
mov
adc
dec
inc
repz
jo
adc
mov
adc
add
loope
lea
and
dec
call
mov
test
xor
mov
jne
div
mov
mov
add
add
xor
(bad)
(bad)
hlt
fild
call
popa
repnz
in
mov
and
and
xor
add
(bad)
call
pop
sbb
je
xchg
call
add
xchg
add
out
pop
and
fild
add
fisttp
add
add
sbb
(bad)
push
lea
loop
jmp
out
inc
and
mov
add
in
test
fiadd
mov
add
hlt
out
pop
in
add
mov
test
fiadd
mov
ret
mov
lea
(bad)
jmp
call
mov
jae
inc
pusha
in
sbb
in
sub
inc
add
lds
cmp
push
fist
cmp
arpl
fild
xor
mov
jecxz
adc
imul
stc
lods
sub
test
call
and
out
hlt
fld
mov
vpunpckhdq
cmc
push
idiv
adc
sub
or
xchg
push
call
and
add
sbb
add
mov
les
push
sub
pop
sbb
push
clc
fiadd
(bad)
lahf
test
jns
xor
fbld
inc
js
shr
pop
idiv
or
add
jecxz
push
sbb
add
and
pop
dec
fwait
mov
jmp
xor
or
push
sbb
or
rol
in
mov
jns
or
test
leave
pop
lea
mov
iret
xchg
imul
in
xchg
sbb
ror
std
ja
pop
dec
or
and
add
in
xchg
push
mov
cmp
mov
int3
pop
fild
je
inc
or
add
add
xchg
push
mov
loopne
sar
call
sbb
fiadd
xor
add
push
jne
push
mov
cld
vmread
dec
or
xchg
push
sub
fist
mov
sbb
rcr
mov
int3
inc
add
mov
int3
add
inc
adc
and
add
test
push
sbb
out
xchg
or
pop
retf
call
pop
popf
sbb
int3
jb
call
push
inc
adc
xchg
or
dec
loopne
add
xchg
or
cmps
fiadd
add
and
xor
mov
mov
sub
pop
push
retf
pop
dec
clc
sub
push
inc
or
add
add
gs
(bad)
ja
(bad)
mov
fiadd
pop
sbb
sbb
aas
aas
xchg
or
sti
iret
call
call
fild
pop
out
xchg
push
sub
movs
stc
mov
push
dec
adc
sbb
mov
push
shl
or
mov
inc
add
add
sbb
mov
mov
jae
leave
ret
jle
mov
out
add
push
mov
fadd
cld
hlt
pop
shl
xor
sbb
call
jbe
add
loope
test
fucomip
jp
fld
mov
cs
sub
std
inc
add
add
pusha
fadd
and
pop
in
sbb
adc
push
pop
adc
sub
std
jmp
test
dec
cld
mov
loop
sbb
pop
add
lock
loop
repz
inc
clc
imul
out
je
mov
enter
inc
cwde
inc
cld
sbb
std
jne
movs
jne
add
add
int3
or
add
mov
mov
out
call
test
or
sbb
sbb
push
lea
call
mov
mov
mov
dec
je
int3
(bad)
loopne
repz
pop
in
mov
mov
test
test
add
or
lds
hlt
push
inc
hlt
sub
mov
push
call
sub
push
icebp
call
sub
xchg
ret
push
sar
out
add
add
test
inc
mov
push
inc
in
mov
mov
jmp
sub
jmp
add
add
fistp
(bad)
jecxz
mov
jge
cdq
scas
push
mov
call
mov
call
ret
test
push
stc
mov
shr
(bad)
pop
test
fmul
push
add
int3
cmp
sub
mov
retf
sub
sbb
or
fmul
cmp
(bad)
push
add
add
iret
and
jne
sbb
sbb
push
mov
mov
std
jne
lahf
jae
shr
push
call
mov
adc
sbb
in
push
ja
(bad)
popf
out
add
cmc
stc
jp
mov
lea
add
gs
or
mov
je
mov
add
add
int3
jmp
(bad)
rol
call
xor
pop
or
mov
mov
pop
pop
icebp
sbb
dec
pop
add
(bad)
(bad)
cdq
or
test
fld
cmp
sub
call
xor
mov
mov
cmp
sub
mov
cwde
fiadd
add
loop
adc
(bad)
cmp
fsubr
or
(bad)
add
push
inc
or
stos
fld
hlt
sbb
jl
xchg
inc
fnsetpm(287
fmul
or
mov
mov
jge
xor
icebp
shr
jo
movs
std
sub
and
imul
out
sub
jmp
push
(bad)
call
add
add
out
and
icebp
dec
fsubr
mov
push
inc
or
neg
add
push
mov
lea
inc
sub
add
ret
add
test
repz
rcr
pop
ret
cmp
push
shr
call
sbb
mov
or
mov
test
add
sbb
cmp
scas
push
rol
xchg
scas
push
lea
xchg
sar
mov
or
jns
fadd
cs
loope
add
xchg
in
lock
sub
add
mov
pop
pop
in
sbb
add
ret
adc
outs
shr
rol
add
(bad)
push
mov
push
mov
pusha
fbstp
popa
jl
cmp
push
pop
sbb
add
sub
pop
das
adc
movs
xchg
movs
pop
pop
ja
cmp
and
(bad)
call
push
dec
je
or
add
push
test
ret
cli
pop
in
test
mov
add
pop
pop
in
add
add
jns
jne
mov
pop
in
imul
jmp
xchg
inc
and
shr
outs
cmp
add
(bad)
rol
push
jne
pop
popa
jmp
xlat
sbb
xor
lock
fld
add
push
fimul
cdq
aad
inc
add
add
adc
push
call
sbb
add
xchg
fidiv
or
mov
int3
pop
fld
xor
add
retf
jecxz
add
cmp
cmp
(bad)
xor
popf
fild
or
fwait
push
sub
aam
sbb
jle
stc
ins
test
mov
enter
add
add
mov
mov
clc
cdq
les
(bad)
mov
push
dec
jb
std
mov
ror
fiadd
movs
mov
push
dec
or
sbb
jo
jae
movs
movs
jae
fist
add
mov
adc
mov
xlat
add
sub
mov
add
add
cmp
sub
add
cdq
in
mov
lock
test
cdq
sbb
call
rol
inc
or
sbb
jmp
mov
adc
adc
arpl
add
movs
das
sub
sub
sub
push
lea
add
add
inc
sbb
mov
mov
dec
or
cwde
or
jbe
std
jmp
mov
jmp
push
aaa
adc
inc
and
gs
sbb
and
jg
mov
mov
xchg
xchg
mov
call
test
mov
add
add
cmp
mov
out
rol
add
rcr
jne
dec
push
push
mov
or
inc
ror
(bad)
je
clc
push
lea
es
scas
pushf
call
mov
inc
add
fisubr
lods
and
sbb
sbb
and
lods
lahf
inc
arpl
fadd
add
repz
and
jl
or
sub
xor
add
cmp
jmp
inc
add
je
aaa
jp
add
aaa
call
sbb
ffree
add
sub
push
stos
sub
jne
bound
mov
call
scas
cdq
out
add
add
imul
fimul
or
imul
test
(bad)
pop
jl
adc
je
xor
mov
das
pop
ret
or
jbe
mov
int3
push
xlat
add
add
das
mov
xor
cmp
cwde
loopne
cmp
xor
add
add
in
in
pop
lock
jmp
push
stc
in
sub
mov
dec
ret
je
hlt
cmps
add
fdivr
ret
cwde
push
les
fisttp
lea
call
mov
lea
clc
aaa
fdiv
or
or
mov
std
jne
or
or
add
add
loop
xchg
lock
aaa
lahf
adc
aas
mov
add
lods
fisttp
fcom
or
(bad)
das
out
cmps
fild
int3
mov
add
push
out
add
jne
dec
hlt
jmp
(bad)
inc
adc
mov
idiv
mov
(bad)
shr
js
cdq
add
add
ins
adc
cmp
lea
dec
repnz
fiadd
lea
push
call
rcl
and
xchg
and
mov
push
aas
movs
call
pop
loop
mov
icebp
popf
add
xchg
dec
out
dec
loopne
pop
mov
pop
in
sub
mov
mov
pop
cmp
add
add
cmp
call
mov
scas
je
add
fild
xor
pop
div
push
jmp
xlat
add
sbb
mov
add
dec
stc
jb
icebp
in
in
xor
in
push
iret
fbstp
sar
adc
pop
div
push
jmp
push
mov
neg
in
ss
fbstp
test
add
das
and
mov
xor
dec
inc
pop
in
cmp
je
mov
fnstenv
push
pop
in
mov
push
dec
and
inc
xor
(bad)
ja
cmp
mov
jmp
ja
call
adc
in
imul
pop
in
test
sub
inc
add
add
in
push
in
cmp
cmp
cmp
dec
cmp
shl
push
scas
call
sbb
popf
je
hlt
idiv
mov
and
inc
movs
xlat
cmp
(bad)
pop
mov
add
fsubr
rol
sar
pop
mov
pop
adc
and
cmp
jb
scas
and
call
add
add
cs
je
adc
(bad)
jne
add
mov
adc
inc
adc
aam
hlt
popf
or
jg
push
call
pop
cmps
push
push
int3
jge
add
adc
pop
in
adc
xlat
fdiv
je
push
mov
inc
sbb
out
dec
pushf
add
fmul
call
add
add
out
and
jmp
call
inc
hlt
out
fisttp
adc
and
call
test
je
mov
push
add
test
and
add
mov
cmc
mov
mov
xchg
aam
lea
mov
aad
lock
out
adc
in
shl
sbb
add
add
sbb
mov
fadd
int3
xchg
add
add
inc
sbb
nop
push
push
cmc
je
repz
or
sahf
or
cmp
call
rcr
inc
clc
scas
sbb
lea
mov
out
mov
cmp
or
adc
ret
fild
inc
xchg
push
mov
pop
jns
in
mov
pop
xlat
push
int
(bad)
call
aam
adc
fucom
sbb
stc
repz
ss
jmp
popf
je
das
sbb
mov
dec
cld
pop
sbb
mov
adc
add
mov
mov
add
lea
mov
int3
sub
add
fs
shl
dec
cld
scas
sbb
xor
out
(bad)
(bad)
std
test
mov
mov
mov
pop
jns
and
je
lahf
or
xchg
cli
push
cmc
mov
repz
jne
sub
add
fmul
mov
pop
add
jge
adc
stc
shr
sbb
add
das
push
push
mov
sub
cmp
push
out
popf
call
call
call
or
or
pop
(bad)
pop
ret
test
in
push
push
jnp
clc
mov
mov
xor
push
pop
pop
test
xor
fdiv
add
je
add
add
ds
clc
cmp
call
mov
in
sub
jno
cdq
sbb
add
jne
into
int
or
std
jne
repz
mov
add
push
int
lock
jae
stc
add
imul
imul
inc
(bad)
lock
add
add
add
mov
push
jmp
inc
add
ja
xchg
add
push
pop
ins
mov
pop
jge
pop
leave
cmps
out
push
outs
or
add
(bad)
add
mov
imul
jmp
mov
shl
inc
fistp
stc
shr
push
sti
dec
mov
(bad)
jns
std
jne
add
add
jle
dec
out
outs
fiadd
mov
push
lds
lea
pop
in
xchg
or
sahf
push
mov
outs
mov
out
stos
add
lods
xchg
mov
and
push
push
icebp
xchg
sahf
repz
jbe
fld
ret
push
jl
jg
in
(bad)
shl
fstp
mov
in
gs
retf
(bad)
cmp
sub
dec
inc
add
xchg
call
imul
add
(bad)
ret
xchg
dec
inc
je
inc
pushf
je
sbb
(bad)
stc
sub
add
and
retf
call
add
in
add
add
add
outs
xor
jg
mov
or
jmp
fld
push
xchg
pop
jmp
push
push
call
fstp
mov
pop
test
cmp
jl
mov
xor
add
push
call
popf
rcl
test
jge
mov
dec
mov
add
or
leave
jp
mov
icebp
dec
cmp
xor
or
cmp
mov
loopne
aam
inc
push
mov
call
mov
fisttp
add
out
lea
xor
scas
add
add
xbegin
mov
mov
add
rcl
add
dec
dec
call
dec
mov
aam
in
mov
sbb
out
mov
add
sub
in
mov
sbb
mov
mov
push
mov
inc
add
inc
clc
xor
push
lea
enter
cmp
push
lds
push
inc
jmp
outs
add
add
(bad)
jae
pop
jl
in
jnp
das
dec
mov
mov
test
lea
call
dec
in
sbb
out
add
clc
lahf
je
repz
mov
push
lea
fiadd
add
inc
mov
lds
mov
les
fucomp
xor
jp
call
add
add
scas
xor
jns
mov
rol
cld
ret
add
shl
or
jp
jmp
les
ins
fadd
or
and
or
sbb
xchg
mov
ret
add
mov
mov
shl
sbb
lock
call
sbb
mov
add
add
xor
inc
sbb
dec
adc
ror
jno
mov
(bad)
std
mov
xchg
les
cmps
jnp
add
lds
outs
sbb
mov
pop
inc
or
add
call
adc
or
jl
jo
jae
std
jne
add
add
in
sti
(bad)
push
call
inc
jnp
lea
fadd
test
mov
pop
sbb
mov
inc
(bad)
push
fisttp
push
mov
xchg
push
mov
fldpi
push
pop
dec
or
adc
std
jmp
gs
jmp
pop
jp
add
add
hlt
outs
adc
loopne
lods
mov
test
cmp
mov
pop
fs
mov
pop
jg
mov
enter
(bad)
jae
push
inc
or
sbb
mov
jmp
sbb
adc
(bad)
loop
call
test
aaa
jmp
push
ja
hlt
jl
add
add
mov
add
add
pop
inc
or
fisttp
or
inc
mov
cld
sub
add
clc
add
xor
aam
push
sahf
call
pusha
fs
in
inc
aam
push
dec
lods
int3
test
push
out
jmp
nop
out
ins
fild
mov
inc
mov
mov
add
add
jl
pop
add
sbb
pop
mov
sub
jne
push
pop
add
adc
mov
sbb
fidiv
fmul
jne
push
sbb
and
or
shl
popf
xchg
mov
push
inc
add
push
add
hlt
pop
or
pop
sub
jnp
hlt
ins
xor
add
add
dec
fdiv
cli
push
clc
call
das
adc
(bad)
in
add
mov
pop
inc
add
adc
push
jl
mov
mov
jnp
outs
push
(bad)
movs
xor
add
sub
sub
(bad)
mov
clc
daa
cmp
loope
xchg
sti
std
mov
mov
add
pusha
fimul
add
sbb
add
add
fiadd
add
add
hlt
aad
push
in
mov
dec
mov
sahf
inc
sub
push
inc
or
(bad)
xchg
push
or
gs
add
jbe
add
add
push
cdq
shr
sub
add
and
movs
rol
add
push
sub
(bad)
cmp
arpl
jmp
push
leave
mov
cmp
ins
hlt
mov
jmp
cmp
or
sub
push
sub
call
fucomi
fistp
push
inc
add
cdq
pop
ret
cmp
add
in
popa
jle
xlat
call
mov
iret
mov
add
add
aas
adc
mov
pop
mov
sub
jmp
jne
cdq
push
jmp
out
cdq
sub
dec
das
cdq
pop
sbb
mov
jns
add
cmp
jno
sbb
add
and
push
add
add
add
lahf
popf
iret
call
xchg
xor
paddusw
fadd
add
add
push
jb
jg
mov
int3
add
hlt
push
stc
mov
dec
sub
je
cdq
sbb
jl
push
movs
je
loopne
add
jnp
add
fild
call
daa
add
and
out
stc
repz
dec
pusha
xchg
jne
xchg
xor
add
call
scas
sbb
add
add
mov
daa
add
je
jbe
sti
pop
jne
adc
add
and
call
mov
xor
push
lds
rcl
jns
je
shl
mov
loopne
jbe
cmc
dec
mov
fst
sub
call
fbstp
add
mov
inc
mov
push
inc
or
add
add
pop
mov
add
mov
push
test
(bad)
imul
mov
add
xor
cmp
fistp
mov
fisubr
inc
fadd
imul
add
movs
hlt
(bad)
shl
in
mov
in
dec
add
push
mov
add
add
push
(bad)
sub
inc
push
stc
aas
ret
jl
xchg
in
clc
mov
add
pop
in
push
test
adc
pop
cs
shr
call
sub
cli
add
adc
push
mov
xor
dec
sub
cdq
sbb
xor
xor
push
gs
ret
in
jge
add
add
xlat
pop
adc
or
lea
call
cmp
mov
lock
in
mov
dec
inc
adc
fwait
xor
sbb
and
jae
std
push
jno
call
and
rcl
add
push
dec
push
lea
add
add
repz
add
fild
adc
dec
daa
mov
xor
mov
push
jmp
icebp
sahf
add
fidivr
pop
fs
out
sub
pop
add
icebp
cmp
pop
jmp
cmp
repz
jmp
movs
repnz
in
icebp
outs
xlat
add
mov
and
repnz
je
push
mov
in
or
lea
stos
call
push
sar
sbb
les
xor
push
mov
push
in
or
xchg
jne
push
xchg
imul
inc
fadd
pop
mov
add
add
sub
test
lock
popa
push
bnd
dec
and
inc
mov
inc
hlt
hlt
out
dec
lds
xchg
sub
call
mov
dec
jle
push
fnstenv
cmp
fcom
fs
je
inc
shl
test
mov
and
(bad)
add
mov
or
fadd
lea
jecxz
mov
pop
jnp
and
add
sbb
push
sub
call
push
inc
adc
adc
mov
pop
jle
mov
jb
stc
fadd
or
pop
push
cmp
(bad)
sub
pop
sbb
test
aas
jmp
dec
jg
add
add
out
xchg
cmp
imul
push
xor
jae
push
iret
jmp
push
push
mov
icebp
add
sbb
add
cli
dec
or
or
pop
or
pop
xchg
xor
cmp
je
lahf
xchg
jmp
mov
pop
add
mov
push
sub
dec
in
push
mov
fmul
inc
add
add
lods
dec
add
repz
dec
sub
push
or
push
push
mov
dec
add
push
out
and
add
movs
out
dec
cmp
add
and
cmp
cwde
loope
adc
adc
add
add
movs
push
sub
repz
adc
hlt
fsubp
shl
add
jns
add
hlt
arpl
cmp
push
mov
call
jae
jae
push
(bad)
in
add
mov
sbb
mov
mov
pop
js
movs
fild
mov
jns
imul
js
fbstp
push
push
add
add
dec
inc
add
arpl
dec
ffree
inc
pusha
fsubrp
push
lods
sar
mov
mov
iret
jae
pushf
push
sub
push
add
sub
sub
fcomp
add
fld
adc
push
(bad)
and
test
jae
mov
and
sub
inc
add
add
lods
pop
jns
movs
push
mov
push
(bad)
xor
arpl
(bad)
jns
mov
xor
iret
std
jmp
add
pop
fs
or
imul
(bad)
jne
(bad)
out
fld
add
shl
ins
push
sub
stos
inc
add
and
add
add
add
push
test
jmp
loopne
add
or
les
(bad)
lods
movs
fmul
dec
mov
ja
dec
mov
adc
push
in
mov
je
push
mov
mov
mov
mov
(bad)
je
mov
add
outs
add
add
add
cmp
push
sbb
jbe
jne
mov
add
fisttp
jne
mov
inc
or
mov
ins
rol
cs
xlat
icebp
push
cmp
pop
dec
add
stc
je
cmp
es
shufps
add
mov
loopne
cdq
stos
fild
mov
add
add
pop
cs
test
xchg
movs
inc
cld
xor
mov
or
mov
push
lea
push
mov
out
mov
inc
xchg
movs
inc
sub
movs
inc
sub
lds
add
sbb
call
pop
dec
loopne
add
add
add
in
mov
mov
mov
cld
dec
int
cld
xchg
dec
or
cdq
push
sar
add
les
ret
push
jl
jnp
je
push
(bad)
fimul
cld
xor
inc
in
mov
or
call
or
(bad)
push
dec
or
push
push
xor
add
add
xlat
or
mov
or
movs
(bad)
call
pusha
(bad)
xor
cmp
dec
jmp
fld1
bound
add
das
in
push
aas
and
(bad)
loop
mov
mov
or
xlat
mov
inc
mov
and
mov
cmp
(bad)
daa
push
push
mov
int3
add
je
test
rcr
xor
(bad)
je
rcl
(bad)
call
ret
mov
mov
jg
(bad)
out
sahf
add
lahf
leave
mov
pop
fs
hlt
mov
in
das
push
push
je
mov
or
fdiv
inc
loopne
add
shl
mov
cld
jmp
sub
std
sub
add
push
(bad)
out
add
add
add
pop
and
call
mov
push
mov
fdiv
mov
fild
or
rcr
repz
inc
and
add
shr
mov
fisttp
mov
jecxz
mov
fdiv
pop
fsubr
push
add
add
sub
call
ret
stc
mov
push
adc
fadd
add
rol
mov
aaa
rcr
mov
pop
ja
or
mov
push
sbb
sub
mov
or
jecxz
dec
int3
mov
or
jae
mov
clc
lods
sbb
mov
jmp
add
add
mov
lock
and
mov
call
test
or
add
idiv
xor
sbb
mov
fbstp
addr16
add
sbb
push
inc
sbb
call
das
inc
mov
rol
mov
inc
out
rcl
add
xchg
add
add
add
fs
inc
sbb
in
mov
call
jle
fsubrp
(bad)
not
add
add
add
add
(bad)
in
imul
add
arpl
add
pushf
push
mov
pop
in
sub
push
call
lea
aad
push
hlt
fisttp
in
pop
sbb
mov
(bad)
mov
mov
hlt
add
add
aas
sbb
xor
mov
clc
(bad)
lea
sbb
cmp
xchg
ror
add
fld
call
add
rol
sbb
sbb
(bad)
push
fwait
mov
clc
cdq
inc
mov
mov
cmp
add
sub
cmp
je
add
add
outs
sbb
mov
inc
mov
mov
lea
mov
scas
inc
lock
jae
mov
shr
pop
mov
dec
or
add
jae
cmp
xor
xchg
dec
repnz
das
mov
adc
sbb
add
fsub
inc
aam
mov
int3
jae
add
mov
repnz
add
add
or
ds
loop
add
in
outs
sbb
xlat
add
sbb
add
outs
fldl2t
jmp
outs
(bad)
out
cdq
add
outs
dec
push
or
call
xchg
or
add
ja
add
in
adc
jae
and
call
or
(bad)
(bad)
out
sbb
mov
aam
inc
fsubr
fimul
aam
fisttp
loope
repnz
int3
and
jnp
ror
cs
add
mov
test
add
loop
adc
out
mov
push
mov
pop
in
sbb
mov
xor
add
sub
xchg
and
je
mov
lock
push
(bad)
jne
rcr
add
pushf
rcl
add
dec
test
inc
movs
jnp
icebp
pop
or
data16
test
adc
adc
jb
xcrypt-ofb
cmps
jmp
scas
(bad)
jmp
add
arpl
inc
and
inc
lock
inc
hlt
cmps
jnp
popa
pop
or
out
add
aam
add
push
mov
cmp
mov
cdq
add
ret
mov
jno
jbe
mov
or
pop
repnz
retf
xchg
sar
je
mov
call
add
mov
add
add
ins
test
fst
push
mov
adc
sbb
push
scas
inc
adc
mov
or
ins
mul
popf
ins
out
mov
jno
repnz
iret
jmp
mov
call
pop
jae
test
inc
or
inc
mov
mov
or
add
add
adc
jo
aam
mov
out
(bad)
adc
push
lea
rcl
icebp
(bad)
add
jmp
mov
scas
jnp
push
or
mov
pop
in
xchg
arpl
inc
and
or
dec
addr16
pop
and
rol
xor
add
add
fdivr
add
pop
and
rcr
push
jle
sub
add
cmps
jecxz
ja
mov
aaa
rcl
aas
div
sar
mov
test
cld
mov
loop
or
dec
push
push
cmps
stc
(bad)
jns
out
push
add
jne
add
fstp
repnz
jnp
mov
push
mov
add
add
call
test
pop
adc
adc
xor
cmp
add
movs
outs
jmp
outs
push
push
mov
int3
mov
popa
arpl
lea
mov
(bad)
adc
in
test
sbb
mov
mov
or
mov
ficom
push
loopne
mov
arpl
mov
add
add
movs
dec
adc
pop
test
(bad)
in
pop
je
mov
fistp
add
pushf
xor
scas
push
mov
jns
ficom
out
dec
push
push
mov
out
adc
std
call
sbb
inc
adc
or
mov
cli
mov
cmp
lea
fadd
add
cmps
inc
lock
ins
pop
add
call
mov
rol
mov
and
out
imul
jp
(bad)
jne
movs
stc
jne
ins
jmp
rcr
push
loope
jmp
sub
dec
sub
jnp
sub
ret
push
mov
add
add
pop
in
jne
mov
mov
push
push
xor
mov
add
fnsave
mov
popa
sbb
mov
push
and
add
aad
add
movs
pop
inc
add
xchg
add
pushf
enter
or
popa
test
inc
je
inc
add
add
add
cmps
adc
ja
push
mov
mov
mov
das
lods
or
int3
int3
xchg
inc
add
cld
xor
add
and
add
jmp
pop
std
add
push
xrelease
mov
scas
inc
mov
dec
jge
popa
movs
hlt
mov
das
mov
xor
jae
test
sbb
std
jne
add
add
sub
sub
add
pop
retf
mov
push
ds
lahf
add
jne
inc
or
shr
dec
jne
int3
mov
add
clc
fisttp
or
daa
jmp
mov
das
mov
lods
stos
add
rol
pop
jb
mov
add
adc
add
add
push
(bad)
push
ins
lahf
cld
mov
sti
push
jge
popa
scas
or
jae
std
test
mov
sub
sub
add
cmps
clc
lea
aaa
loop
repz
rcr
and
add
test
inc
xor
ds
pop
in
inc
add
add
and
and
add
popf
add
add
inc
add
mov
inc
in
add
sub
jge
jno
or
jmp
fmul
call
inc
cmps
adc
sbb
test
or
adc
add
xlat
xchg
add
add
mov
push
adc
adc
in
movs
pop
or
push
fild
js
xor
dec
cld
jns
push
push
mov
pop
js
aas
sub
scas
mov
jmp
pop
jns
and
push
cmp
mov
mov
push
push
cld
jg
cmp
je
and
mov
sbb
mov
mov
add
or
mov
push
xor
push
int3
jno
aas
adc
push
lods
pop
js
movs
lods
in
mov
sub
add
scas
add
je
dec
or
xchg
or
sub
nop
mov
call
mov
sub
fdivr
push
les
pushf
call
dec
aam
dec
cld
add
add
and
inc
aam
dec
dec
lods
or
mov
inc
sub
mov
(bad)
fild
mov
pop
movs
adc
mov
inc
scas
fild
jmp
push
mul
mov
cmps
add
nop
xor
in
out
jl
xchg
add
push
pop
jge
fs
or
in
test
add
add
into
xchg
js
in
imul
add
mov
add
stos
fiadd
add
out
jne
push
push
or
add
cmp
test
push
pop
hlt
fimul
adc
push
inc
add
cwde
add
hlt
ret
add
test
xor
mov
jmp
add
into
cmp
jae
push
adc
mov
iret
mov
sbb
fs
dec
(bad)
out
jae
fild
out
imul
mov
mov
mov
push
ds
xchg
adc
scas
cdq
add
ins
(bad)
stos
sub
add
je
adc
jecxz
ins
push
and
mov
add
add
mov
mov
push
or
mov
rol
add
jmp
mov
mov
pop
jbe
je
dec
cld
stos
call
pusha
push
xor
inc
rol
inc
int3
pop
jge
fs
add
cmp
je
add
add
movs
mov
cld
mov
push
jne
popf
cdq
lock
push
dec
sbb
mov
push
jne
jge
in
mov
xor
pop
shl
mov
and
sbb
mov
and
mov
xchg
and
rol
or
sub
add
add
add
add
jl
dec
or
call
shr
jmp
fistp
jae
jmp
pop
std
sbb
add
jmp
push
inc
sbb
and
hlt
sub
test
xchg
dec
add
add
add
fcom
hlt
pushf
movs
stc
call
dec
inc
sbb
xor
movs
fisttp
add
xchg
sbb
fs
inc
sbb
call
fistp
mov
lods
shr
cmp
xlat
mov
push
inc
clc
or
add
xor
jne
mov
xchg
lahf
add
add
stc
fiadd
lea
mov
xor
sti
shl
ror
inc
in
dec
dec
adc
xchg
pop
nop
add
and
push
mov
push
push
sbb
mov
std
into
add
(bad)
cld
jne
dec
jge
daa
push
pop
mov
cmp
push
sbb
adc
push
fnsave
dec
ror
mov
mov
pop
sub
je
dec
dec
sbb
dec
or
sub
jecxz
jns
test
mov
push
dec
or
add
xor
push
pop
scas
cld
pop
pop
test
inc
or
pop
add
push
pushf
mov
call
add
add
and
and
jb
mov
mov
int3
xor
mov
and
inc
sbb
mov
xor
call
imul
(bad)
mov
int
(bad)
jns
push
call
lahf
xchg
sbb
mov
ficom
cmp
fmul
mov
add
add
rol
adc
add
push
mov
sar
sbb
xchg
lahf
aad
pop
lods
push
dec
sbb
dec
pop
or
sub
add
or
xchg
jle
xor
pop
fdiv
cmps
or
lea
add
inc
add
xchg
adc
mov
add
add
inc
sbb
mov
push
inc
add
xor
push
hlt
fucomip
dec
outs
out
cmp
jae
stos
mov
adc
outs
out
dec
call
data16
mov
data16
call
das
fld
hlt
jmp
mov
fisttp
adc
inc
add
cmps
add
fadd
add
fs
add
out
jns
fisttp
(bad)
(bad)
sbb
pop
loopne
inc
cmp
jns
or
mov
xor
push
add
fnstcw
xor
jmp
add
dec
jmp
pop
fdiv
sub
sub
cmp
mov
jmp
arpl
mov
or
add
fstp
dec
lods
mov
mov
fisttp
adc
js
les
lods
xor
sub
repnz
add
mov
je
arpl
or
fld
pushf
jmp
mov
sub
adc
add
inc
or
adc
dec
add
mov
or
add
add
inc
add
popf
add
dec
jmp
add
sbb
mov
mov
fisttp
dec
sub
jge
movs
add
mov
pop
jnp
movs
mov
push
icebp
mov
(bad)
jmp
mov
aam
icebp
mov
(bad)
(bad)
cmp
dec
inc
bound
add
add
movs
add
mov
add
mov
mov
adc
js
mov
add
mov
cmp
je
outs
adc
or
mov
mov
jmp
jne
je
adc
pop
xchg
add
out
jbe
xchg
mov
inc
mov
pop
add
jecxz
js
cmp
cmp
cmp
mov
sbb
add
out
sbb
mov
add
mov
fucomip
mov
out
sbb
add
push
mov
in
adc
cwde
adc
in
imul
add
repz
retf
jmp
cdq
inc
or
pop
mov
pop
jbe
in
xrelease
sbb
gs
mov
or
add
sbb
pop
or
sbb
adc
das
mov
cmp
cwde
adc
test
or
and
in
lahf
add
adc
add
fucomip
add
lahf
or
push
sbb
cmp
mov
mov
push
repz
mov
add
xor
fiadd
jmp
je
adc
add
add
fimul
outs
call
mov
inc
adc
xchg
retf
(bad)
jmp
add
call
cld
cwde
add
popf
xchg
inc
or
xchg
js
mov
pop
jbe
lea
mov
add
add
ds
and
adc
xor
dec
sub
inc
adc
call
adc
add
(bad)
jmp
jbe
(bad)
out
add
and
cmc
cwde
retf
(bad)
sub
add
mov
add
outs
fild
adc
dec
hlt
push
add
or
add
add
lahf
jl
sahf
add
or
or
dec
adc
out
mov
and
adc
and
je
dec
add
push
fisub
mov
mov
mov
(bad)
jo
fld
(bad)
imul
push
cld
sets
and
cmp
add
add
add
pop
jmp
fwait
adc
in
or
loop
loopne
ret
mov
xchg
or
adc
adc
stc
fadd
add
mov
mov
in
inc
je
dec
add
jecxz
inc
push
fdivr
or
fadd
inc
pop
xchg
add
mov
add
add
out
mov
pop
js
xor
add
sub
jl
mov
xchg
add
jg
add
adc
ins
popf
or
out
dec
mov
pusha
jle
movs
aaa
jg
movs
fisttp
adc
in
dec
inc
add
pushf
shr
add
add
lahf
fs
push
cmp
add
call
dec
mov
inc
test
aaa
sbb
fs
or
repz
add
sbb
cmp
je
outs
add
adc
cmp
mov
das
sbb
adc
outs
lea
add
add
pop
ror
mov
fbstp
pop
test
add
lods
loopne
add
ret
sub
fbstp
sbb
fidiv
push
jmp
(bad)
fmul
enter
js
fidiv
adc
dec
sbb
pop
(bad)
jmp
jg
and
add
repnz
mov
mov
add
add
(bad)
fimul
cmp
stc
xchg
inc
or
jp
inc
call
les
cmp
mov
mov
fisttp
mov
jecxz
ds
lods
or
sub
adc
add
fiadd
mov
in
sbb
xchg
(bad)
xchg
xchg
dec
add
add
add
aam
lea
les
mov
in
mov
xchg
add
test
rol
fld
test
fld
add
cmp
pop
lea
adc
mov
call
adc
inc
mov
popf
adc
int3
adc
add
adc
add
add
mov
add
fmul
add
pop
jbe
jne
ins
mov
xlat
jae
out
(bad)
std
jne
sbb
adc
sbb
fs
add
mov
mov
repz
mov
mov
mov
xchg
retf
(bad)
fs
out
xlat
add
or
pop
jns
in
adc
add
add
pop
adc
inc
call
popf
adc
mov
mov
cmp
add
mov
and
adc
sbb
adc
stc
ffree
inc
mov
lea
cmp
mov
mov
cs
add
aaa
out
xlat
cmp
jae
fist
les
fadd
inc
pop
fucomi
dec
add
add
and
add
add
inc
cmp
mov
lahf
push
les
xlat
call
(bad)
sub
call
and
add
pop
xchg
inc
sbb
push
je
sbb
call
dec
adc
call
shl
mov
mov
pop
fwait
or
out
out
jp
add
add
jae
std
int
mov
(bad)
push
or
movs
sbb
sahf
push
jne
fst
push
add
adc
mov
xchg
or
jno
add
jns
jmp
or
mov
pop
js
in
add
clc
xchg
dec
add
sahf
or
call
add
add
fucomi
comiss
jne
cmp
xchg
dec
test
ret
scas
sbb
mov
(bad)
inc
daa
pop
cmp
jge
mov
add
dec
jb
in
jmp
retf
xchg
adc
je
inc
mov
aaa
xchg
add
add
in
mov
xchg
add
add
mov
(bad)
dec
adc
or
jg
add
sub
mov
mov
pop
ret
push
mov
test
push
das
or
repz
lahf
cmc
jae
das
push
out
xchg
hlt
dec
jmp
pop
push
jno
mov
pop
pop
fadd
push
inc
adc
add
add
xlat
add
int3
popa
xchg
add
gs
and
je
mov
or
sub
xor
xor
(bad)
or
mov
hlt
sbb
lock
movs
dec
int3
inc
add
retf
pop
int
cwde
add
lock
mov
add
or
pop
(bad)
(bad)
in
xchg
pop
and
add
push
fdivr
call
out
jns
or
movs
xchg
fild
(bad)
pusha
call
pop
pushf
add
dec
je
jmp
fiadd
ret
push
cmp
jge
hlt
and
addr16
jne
add
add
add
dec
sbb
sub
das
adc
jg
or
cli
ficom
xlat
(bad)
(bad)
call
clc
pop
test
jnp
push
loope
aam
mov
(bad)
inc
sbb
test
add
(bad)
cmp
dec
inc
xor
inc
lods
movs
es
stos
and
push
inc
add
add
ss
push
mov
mov
daa
xor
pop
push
add
jns
push
int3
es
add
xchg
shr
ss
loopne
mov
mov
iret
mov
add
or
das
cwde
icebp
push
lea
sbb
fdiv
(bad)
inc
dec
add
mov
dec
dec
call
cmp
dec
inc
fs
inc
mov
and
push
cmp
in
adc
call
push
out
(bad)
fadd
ret
jp
in
adc
add
addr16
(bad)
call
sbb
push
pop
adc
je
xlat
sbb
inc
mov
add
add
xor
add
cmps
add
sbb
mov
loop
mov
sub
jb
daa
test
add
xchg
call
push
jb
(bad)
fisttp
sbb
push
jb
fmulp
(bad)
cmp
or
lahf
inc
inc
test
jne
push
sbb
add
add
mov
pop
loopne
dec
add
add
clc
push
mov
or
jb
jg
mov
dec
jne
push
sar
cmp
loopne
or
mov
jne
xlat
sbb
add
sub
test
rcr
ret
mov
shr
inc
js
(bad)
sbb
mov
pop
xchg
fild
mov
xchg
or
dec
sar
inc
cli
cmp
lods
cdq
or
push
or
cmp
jle
mov
add
call
outs
sub
jns
xchg
call
add
inc
test
call
push
cs
out
ror
repnz
movs
fucompp
add
and
aaa
(bad)
fiadd
mov
add
add
(bad)
scas
movs
fcmovb
add
int
in
stos
lahf
or
in
or
sar
(bad)
xor
xchg
adc
pop
push
push
mov
xchg
(bad)
and
mov
cmps
repz
push
js
sub
mov
je
dec
push
stos
les
xor
or
hlt
fld
add
add
add
mov
push
inc
or
or
sub
or
(bad)
mov
jnp
adc
stos
adc
fild
movsx
jl
pusha
stc
add
cmp
in
fnsave
sbb
cmp
call
mov
rol
mov
and
add
add
scas
jmp
lahf
adc
mov
imul
mov
pop
leave
je
iret
or
ret
and
dec
in
fdivr
jmp
mov
mov
xlat
jmp
add
sahf
add
not
xor
mov
jb
call
sbb
sbb
add
add
add
fs
je
jo
xchg
mov
push
push
imul
fcom
xor
add
and
mov
dec
pop
mov
adc
popf
mov
add
mov
imul
or
pop
mov
mov
mov
pop
inc
and
fild
jl
push
ret
mov
add
add
mov
fs
fist
repnz
mov
icebp
sbb
mov
call
jmp
movsx
stos
xor
gs
mov
jge
mov
jae
add
fild
xor
(bad)
cmp
repz
and
push
call
popf
cmc
adc
add
add
stos
(bad)
add
in
je
jg
add
fst
dec
mov
jmp
sub
dec
xchg
cld
jae
push
cli
out
ja
mov
push
call
in
out
(bad)
lods
movs
faddp
push
out
or
or
xchg
call
(bad)
out
retf
test
fiadd
lea
add
add
and
mov
mov
jle
push
mov
mov
push
mov
rcr
(bad)
mov
push
cmp
call
aam
pop
in
push
js
movs
cld
push
ror
xor
inc
(bad)
push
sar
mov
xor
sub
iret
and
add
add
push
xchg
or
fs
je
push
sbb
std
pop
mov
cmp
or
inc
push
push
pop
xchg
(bad)
gs
jge
fucomp
cmp
fadd
mov
pop
inc
or
idiv
push
push
(bad)
je
cmp
mov
add
add
cmp
xor
push
dec
aam
mov
gs
movs
push
inc
aam
push
inc
lods
in
sbb
xchg
and
pop
fcomp
dec
call
hlt
fild
mov
pop
fstp
push
iret
loope
add
pop
jne
mov
in
fnsave
dec
fst
mov
add
icebp
and
add
add
test
push
cld
scas
cmp
and
in
inc
cmp
in
loope
pop
gs
add
out
push
and
mov
fcmovnb
add
jae
add
add
adc
(bad)
push
repz
push
sub
(bad)
jmp
add
sub
test
pop
pushf
dec
dec
add
add
dec
in
push
lea
and
lea
dec
lea
retf
adc
add
xor
pop
stc
adc
pop
pop
pushf
add
add
call
xor
jmp
fucomp
inc
add
fsubr
call
jmp
add
add
inc
add
cmp
add
jge
(bad)
jmp
inc
add
xchg
pushf
call
loope
pushf
push
icebp
jle
call
and
(bad)
test
(bad)
lock
and
push
sar
adc
out
sub
add
in
add
mov
inc
add
add
jle
inc
and
(bad)
sub
add
fld1
mov
and
push
popa
jle
push
jmp
mov
push
pop
mov
test
cdq
jmp
xor
jle
inc
test
clc
sti
call
enter
and
push
mov
(bad)
add
add
repz
push
repz
mov
lock
hlt
lock
stos
xor
shr
add
int3
adc
hlt
lock
sub
sub
cmc
fadd
dec
ret
jl
add
fmul
push
nop
je
in
(bad)
je
sbb
xor
push
dec
or
xor
test
and
add
mov
fadd
call
pop
les
je
test
and
push
mov
jmp
xchg
ror
(bad)
jmp
add
add
fist
ret
(bad)
fstp
repz
les
pop
call
fild
fstp
mov
pop
add
add
add
scas
mov
hlt
cmp
cmps
fild
add
pop
dec
jmp
adc
dec
pop
add
fs
jne
xchg
xor
pop
lds
adc
test
jmp
add
sbb
cmc
inc
xchg
fisttp
add
(bad)
std
enter
gs
call
push
lock
popa
dec
aam
jns
call
pop
gs
in
inc
aam
arpl
push
pushf
fprem1
call
fisttp
(bad)
jge
(bad)
call
gs
jbe
shr
dec
(bad)
jmp
mov
add
xchg
inc
mov
add
sbb
jmp
inc
or
pop
dec
mov
cmps
or
add
mov
fiadd
dec
js
dec
dec
cwde
jmp
add
jge
dec
imul
add
in
mov
xchg
adc
in
mov
std
push
call
xor
add
add
nop
add
daa
call
mov
add
in
ins
in
xor
inc
jp
pop
dec
in
aaa
inc
call
and
fdivp
call
mul
xor
xor
push
mov
xchg
std
jmp
lods
push
and
add
or
(bad)
cmp
add
fsubr
cmp
mov
add
arpl
push
jmp
aas
push
out
test
xchg
das
push
and
std
push
cmp
loope
enter
push
call
or
call
dec
enter
pop
test
adc
(bad)
jmp
add
add
sbb
xor
rcl
call
neg
inc
add
cmp
jecxz
inc
or
(bad)
jae
mov
dec
dec
cmp
inc
dec
sbb
(bad)
icebp
xor
clc
sti
or
or
dec
cmp
pop
adc
(bad)
cld
stos
dec
inc
movs
pop
inc
lods
and
xor
add
add
fcmovnbe
out
xor
fnstsw
retf
jp
rol
call
fild
mov
inc
add
cli
lods
add
cld
push
mov
fidivr
or
fs
jl
pop
stc
add
cli
mov
std
in
sub
lock
es
pop
jbe
hlt
mov
mov
mov
popa
(bad)
clc
mov
add
add
daa
mov
pop
dec
or
(bad)
sar
jecxz
jmp
iret
rcr
data16
inc
add
je
(bad)
mov
cmp
mov
push
loope
mov
push
sahf
mov
inc
or
(bad)
(bad)
jl
dec
inc
add
add
and
test
or
lahf
add
pop
mov
lea
out
mov
and
in
add
int3
xchg
push
dec
cld
jae
into
call
das
sahf
or
or
mov
pop
lea
and
cld
jbe
add
out
retf
push
adc
add
out
fmul
add
js
mov
adc
repz
adc
fld
lea
in
cli
or
test
mov
adc
std
jmp
add
pop
dec
lea
add
lea
mov
mov
mov
lock
mov
jne
scas
mov
scas
mov
jno
out
loop
add
clc
mov
add
add
fwait
in
mov
(bad)
mov
add
inc
cwde
mov
les
sub
std
push
in
xor
call
jno
call
div
std
imul
call
mov
and
mov
adc
clc
add
mov
or
cmc
push
pop
ja
in
ret
add
add
xchg
test
hlt
fistp
call
das
xchg
or
sbb
cmp
sbb
push
lea
pusha
out
cdq
and
or
dec
mov
push
scas
call
push
shl
shl
dec
call
mov
fimul
cmc
add
add
adc
dec
push
sti
mov
add
addr16
(bad)
jmp
xor
mov
and
mov
fsubr
jge
in
ins
fwait
call
ds
fwait
in
popa
ret
in
call
das
fimul
mov
sub
repz
sub
out
mov
inc
idiv
jmp
stos
in
add
add
cs
(bad)
call
push
or
je
in
sub
jmp
call
and
inc
cld
daa
pop
jne
mov
cwde
(bad)
jns
dec
lea
dec
mov
mov
or
add
hlt
je
mov
mov
jbe
in
ins
call
pop
or
add
add
add
mov
mov
inc
mov
mov
mov
push
add
ja
pop
neg
(bad)
(bad)
dec
mov
je
xchg
shl
fisttp
je
and
inc
mov
mov
lods
call
push
mov
and
hlt
pop
mov
in
sub
jmp
sbb
mov
adc
inc
lods
cmps
std
ss
aam
add
xchg
jo
mov
test
jne
outs
dec
fsubr
call
call
retf
mov
mov
call
add
add
fild
add
jae
call
repz
call
neg
add
adc
mov
jb
jno
add
xlat
add
cld
adc
(bad)
shl
pop
pop
mov
std
push
ja
sbb
push
fisttp
xor
fsub
(bad)
dec
push
mov
adc
xchg
and
leave
add
add
iret
fadd
mov
rcr
add
mov
jbe
je
add
neg
add
xor
call
rol
scas
push
push
push
adc
push
jne
sbb
ficom
pusha
dec
pushf
add
or
inc
jp
(bad)
mov
sbb
sbb
add
mov
je
mov
add
sbb
mov
xlat
fcomp
shl
repz
in
pop
fnstsw
ss
test
ret
call
fistp
adc
pop
call
sbb
mul
jo
in
std
inc
movs
jmp
dec
sub
call
add
add
add
mov
xlat
test
movs
sar
std
inc
movs
jne
(bad)
sbb
pop
cmps
stos
or
je
mov
aaa
sub
add
movs
ret
ret
(bad)
or
inc
(bad)
mov
inc
add
fnstsw
mov
add
xor
and
add
inc
ret
mov
sub
and
rol
in
std
jbe
xchg
sbb
(bad)
jl
mov
loopne
std
mov
jb
pop
idiv
mov
xor
je
rcl
push
push
and
or
dec
je
retf
cmps
pop
gs
hlt
sub
add
in
xor
jp
aaa
mov
inc
add
add
cld
call
and
sbb
repz
in
and
frstor
call
pop
dec
ins
mov
inc
sub
adc
add
dec
sbb
add
xchg
test
mov
xor
mov
pop
jbe
xor
add
add
add
popa
cwde
add
fcmovu
jno
pop
int3
push
int3
cmp
inc
fsubr
cld
cvtpi2ps
dec
fist
pop
jp
add
xchg
inc
movs
mov
jo
test
sub
fild
and
dec
pusha
dec
or
fisttp
dec
into
lahf
add
add
dec
or
pop
clc
add
add
std
fbstp
scas
in
leave
cwde
lock
addr16
fs
inc
sbb
rol
faddp
inc
in
ffreep
lss
cmp
xchg
adc
jecxz
push
sbb
mov
sub
out
ret
add
hlt
out
ret
fldenv
(bad)
fisttp
add
adc
inc
pop
out
std
push
jo
and
jne
call
call
call
gs
pop
mov
jmp
adc
std
jmp
test
cmp
jmp
mov
jmp
int3
ror
add
mov
mov
add
add
fs
addr16
mov
int3
int3
or
movs
inc
add
pushf
sbb
cli
repz
fs
add
xchg
das
add
xchg
das
add
mov
fistp
mov
gs
inc
push
xchg
das
add
or
or
in
add
in
mov
add
or
popf
add
add
lahf
mov
call
mov
push
fsubr
push
mov
pusha
jmp
test
sub
mov
out
sbb
leave
std
jne
pop
dec
sbb
fisttp
call
pop
xchg
or
loope
add
out
mov
inc
hlt
jmp
mov
dec
jne
add
add
in
xchg
lock
call
mov
mov
xor
out
repz
shl
inc
xor
std
jne
mov
mov
cmp
inc
or
lea
lea
pop
inc
lock
inc
pop
mov
sbb
or
in
sahf
out
jae
add
pop
ret
add
add
add
jbe
jne
pop
pushf
or
jmp
push
pop
mov
adc
mov
mov
xor
push
push
adc
pop
add
inc
daa
mov
pop
jbe
xor
mov
cwde
shr
std
jmp
dec
adc
(bad)
and
repz
mov
mov
push
(bad)
call
push
lahf
adc
fcom
hlt
aas
loope
jne
push
jne
sub
loopne
add
cmps
lock
out
add
mov
or
xchg
adc
(bad)
sub
(bad)
call
xchg
adc
movs
rol
jne
add
add
test
repz
push
xor
jne
(bad)
mov
cmp
adc
or
jge
add
movs
jl
pop
lods
pop
push
add
mov
call
das
xchg
(bad)
call
pop
mov
fs
outs
xchg
sbb
gs
(bad)
dec
add
add
int3
xor
and
sahf
add
sbb
inc
lods
adc
mov
iret
cmp
je
scas
cmps
or
or
mov
mov
pmullw
or
cmps
cmp
mov
mov
mov
push
inc
sbb
xchg
add
add
mov
aam
ds
fadd
sbb
movs
das
add
ror
pop
pop
adc
mov
hlt
cmps
das
add
mov
call
aaa
pop
ins
aad
xchg
adc
int3
jmp
push
inc
or
pop
mov
pop
jbe
xor
xrelease
add
add
jmp
mov
push
push
cmp
das
jmp
mov
add
not
add
loope
push
fcom
mov
iret
xchg
push
dec
or
nop
sbb
dec
aam
add
ret
add
shl
fsubr
add
xchg
or
push
push
cmp
add
add
out
faddp
mov
ficom
jnp
xor
fild
jmp
mov
xor
inc
push
inc
and
mov
dec
and
outs
xchg
or
stc
pop
jne
stos
sahf
xor
outs
adc
inc
add
call
mov
rol
test
fadd
add
fild
or
add
add
lahf
or
add
or
xor
mov
mov
rep
or
movs
out
add
movs
out
std
out
fadd
add
xchg
or
pop
push
inc
xor
cdq
xor
scas
sahf
or
and
fsubp
xor
or
jne
cmp
les
fsubr
iret
add
add
jmp
pop
jns
hlt
stos
adc
aam
jae
das
fiadd
sbb
xor
aas
pop
mov
push
inc
or
popf
sbb
or
or
dec
movs
xor
pop
retf
jl
jne
cmp
xor
mov
push
or
jp
(bad)
jne
push
inc
xor
add
add
xchg
xor
mov
pushf
xor
or
add
and
inc
xor
xor
div
and
call
jg
or
nop
sbb
lods
lods
add
pop
nop
sbb
mov
inc
or
xchg
adc
in
inc
add
call
add
push
ja
das
fdivrp
jo
push
iret
call
out
fld
add
add
dec
enter
push
xor
dec
aam
ret
cdq
push
jmp
and
or
and
add
add
pop
lea
call
js
jne
outs
popf
clc
mov
enter
xor
sar
mov
mov
dec
inc
sbb
add
add
fild
in
inc
xchg
in
mov
nop
add
repnz
push
mov
fistp
data16
add
ss
mov
rcl
fisttp
mov
xor
shl
add
fmul
mov
mov
movs
movs
das
add
push
inc
add
fld
leave
add
add
out
std
mov
pop
mov
test
fimul
add
fsubr
add
sbb
sbb
(bad)
dec
cmp
add
mov
push
xor
loop
jne
xor
test
push
xor
xlat
add
ret
or
das
jne
xor
mov
add
pushf
jmp
add
fst
dec
add
xchg
or
push
inc
add
xchg
add
dec
jmp
add
jmp
push
cdq
fucom
jmp
fadd
mov
lods
or
clc
loope
xor
loop
xor
cmp
scas
sbb
mov
(bad)
mov
iret
cmp
lods
test
xchg
add
add
add
lods
scas
or
test
push
xor
loope
xor
call
jmp
push
inc
add
sbb
fnsave
call
scas
movs
or
test
inc
add
jmp
mov
jmp
and
cdq
add
sbb
add
out
fld
add
add
add
mov
push
pop
stos
or
cld
fild
clc
movs
xor
mov
ror
cld
jl
jmp
pop
jb
out
in
add
movs
or
and
clc
je
jge
(bad)
mov
dec
inc
lock
lea
lea
add
add
dec
in
lods
call
test
jb
adc
push
outs
and
dec
call
outs
out
inc
call
fadd
inc
fsub
jmp
call
aas
adc
mov
call
push
adc
mov
or
or
jmp
inc
lock
add
std
fld
or
ret
mov
mov
in
out
adc
inc
pop
data16
push
mov
sub
lods
sbb
call
test
jno
outs
push
sbb
adc
xchg
xchg
(bad)
nop
add
mov
fs
sbb
add
add
call
inc
add
in
or
arpl
or
out
xchg
(bad)
(bad)
jns
mov
sub
fcomp
inc
bound
or
(bad)
call
sbb
mov
test
add
jmp
jge
pop
jle
add
add
hlt
fmul
pop
call
(bad)
inc
xor
lahf
mov
(bad)
sti
xchg
mov
cmp
push
mov
fstp
xor
fucomp
movs
mov
add
push
xor
out
fld
mov
mov
ffree
push
push
cmc
jge
fucomp
dec
add
add
mov
pop
jnp
repnz
inc
xchg
les
rcr
add
mov
std
mov
dec
lea
nop
(bad)
push
popa
and
add
pop
inc
sbb
loopne
jne
sub
push
int3
inc
add
mov
leave
cmc
jne
push
push
add
sbb
lods
pop
inc
sbb
cmp
je
in
in
mov
leave
xor
jmp
push
pop
or
and
je
frstor
or
int
(bad)
jmp
push
mov
cmp
mov
mov
pop
ja
and
xor
or
loopne
add
add
mov
in
inc
add
add
call
push
inc
add
adc
push
ja
movs
adc
(bad)
cmc
iret
add
test
mov
xor
out
fimul
cmp
xchg
mov
mov
loopne
inc
push
sbb
add
fist
pop
fild
add
add
add
pop
js
and
test
(bad)
dec
call
push
inc
or
xchg
push
push
call
cmps
fild
push
pop
jl
inc
lods
push
push
mov
push
xor
sbb
xchg
push
push
add
xor
push
lods
mov
push
fidivr
or
add
add
xchg
iret
loopne
inc
ins
push
push
mov
ficom
rcr
mov
or
aaa
push
dec
add
sub
push
sbb
push
sbb
push
inc
add
fmul
or
xchg
js
mov
push
inc
or
add
push
das
jne
in
add
add
or
push
icebp
mov
out
push
das
jmp
mov
push
mov
mov
jbe
js
jnp
fld
data16
push
pop
fistp
ret
ds
sbb
outs
std
(bad)
mov
pop
jne
mov
xor
scas
and
mov
je
and
xor
add
add
sub
jbe
fadd
mov
xor
sbb
xchg
pop
fs
mov
(bad)
ss
xchg
in
jae
(bad)
push
cmp
push
iret
call
sbb
jnp
ret
add
ins
fdivr
jne
push
dec
call
ret
icebp
add
jo
nop
fs
push
js
jnp
add
add
xor
popf
sar
jl
cmp
mov
xchg
rcl
cmp
adc
mov
push
dec
xor
test
pop
inc
add
xchg
xchg
add
cmc
cmp
mov
add
add
pop
mov
jl
jne
cdq
inc
cld
movs
fs
xor
adc
jne
xor
add
jl
add
je
(bad)
call
es
call
in
fild
pop
dec
fild
mov
xchg
add
inc
xor
inc
xchg
and
mov
mov
push
inc
or
sbb
inc
sbb
jnp
outs
sahf
mov
jbe
in
add
in
sub
add
add
rol
inc
xor
xor
das
call
mov
push
mov
xchg
and
std
call
out
sbb
sub
jb
mov
or
idiv
push
dec
cld
pop
mov
cwde
mov
add
cdq
pop
leave
out
or
mov
add
add
out
add
test
jle
inc
add
cmp
fld
(bad)
push
jne
mov
pop
fs
mov
inc
add
sub
pop
aas
cwde
mov
mov
popf
call
jne
xchg
adc
add
or
push
and
add
int3
and
(bad)
call
ficom
enter
xor
mov
jg
ror
and
pop
retf
inc
(bad)
jmp
cli
inc
fiadd
ja
repnz
xchg
in
jo
(bad)
push
and
(bad)
call
push
retf
add
jge
xor
push
xor
mov
pushf
sub
add
fld
sbb
call
sahf
in
in
inc
(bad)
sar
sbb
std
jg
ret
test
add
push
int3
call
dec
fstp
jmp
retf
movs
jbe
sub
add
mov
outs
add
xor
ret
jge
add
add
fs
push
xor
sbb
call
dec
retf
sar
enter
xor
das
popf
in
xor
inc
lahf
jmp
retf
jecxz
(bad)
jl
xchg
add
or
ins
pop
clc
or
jge
popa
dec
inc
call
jb
leave
mov
pop
daa
icebp
add
add
add
int3
push
xchg
add
jge
mov
fild
xor
push
ja
popf
and
call
jno
inc
call
or
pop
fs
and
call
lea
push
(bad)
push
add
mov
lahf
nop
mov
add
movs
fcmovb
add
add
add
in
sbb
std
jne
inc
jae
out
xchg
in
mov
inc
imul
(bad)
sub
push
repz
jmp
push
xor
add
adc
xor
mov
cmp
add
push
icebp
xor
dec
add
bound
push
inc
xor
add
pop
adc
repnz
imul
mov
sub
out
xchg
jo
bound
test
repz
call
sbb
dec
in
sbb
mov
(bad)
out
jns
mov
inc
inc
in
je
(bad)
call
scas
xchg
in
xor
add
imul
cmp
pop
loopne
sahf
push
call
add
push
mov
inc
mov
add
sbb
mov
push
ds
into
jno
ror
jno
pop
sbb
push
icebp
adc
(bad)
sub
add
jge
dec
inc
call
add
add
shr
mov
dec
pop
cld
je
dec
loopne
xchg
in
data16
push
repnz
jne
xor
jo
mov
in
mov
add
in
fist
add
clc
pop
and
or
fs
fild
add
das
sub
fild
add
sbb
clc
pushf
inc
add
mov
sub
mov
mov
add
das
nop
mov
call
xor
loopne
sahf
hlt
fiadd
add
cmp
cmp
mov
addr16
fild
push
push
push
mov
addr16
adc
in
fild
mov
cs
mov
cmps
sbb
push
out
mov
sub
mov
int3
out
call
int3
fimul
addr16
(bad)
push
add
mov
and
and
add
enter
movs
fiadd
lea
mov
or
fs
lea
(bad)
in
sbb
add
and
data16
xor
jmp
add
leave
sti
inc
pop
lds
popf
adc
xor
adc
cmp
sbb
and
inc
call
xchg
xchg
fcomp
add
or
(bad)
jmp
and
cwde
movs
fld
dec
(bad)
call
pop
adc
dec
add
add
adc
adc
xchg
pop
js
add
xor
or
inc
pop
lds
mov
and
cmp
and
hlt
fadd
jmp
sub
jl
and
mov
mov
mov
add
fadd
add
fsubr
or
add
add
fadd
mov
(bad)
jmp
sub
cmp
lock
call
fadd
movaps
push
fs
imul
je
loopne
jl
clc
out
xchg
mov
add
fs
adc
mov
fwait
or
aam
jge
and
std
lea
jle
inc
add
add
fild
mov
push
std
dec
jge
adc
hlt
fisttp
pop
pop
fild
nop
mov
add
inc
fs
jae
adc
ins
mov
mov
jmp
push
ret
call
call
mov
sub
pop
inc
adc
xchg
in
add
add
aaa
fild
mov
and
mov
pop
dec
repz
pop
inc
adc
push
and
call
push
mov
push
lea
sbb
and
fild
add
fiadd
add
jle
add
clc
add
push
dec
and
push
aad
jmp
mov
push
(bad)
jmp
add
fstp
pop
add
add
das
jg
ret
pop
jge
mov
(bad)
mov
xor
iret
mov
movs
ficomp
mov
js
mov
call
mov
je
cmp
jp
(bad)
or
std
push
cmp
outs
pop
ret
lahf
xchg
in
hlt
fld
pop
aaa
or
push
push
jg
in
add
add
cmc
fld
mov
hlt
mov
pop
and
call
jecxz
mov
pop
pop
fild
mov
cmp
sub
push
je
pop
cmc
and
cmp
jmp
xor
add
ja
add
fs
add
add
fld
add
sbb
mov
add
add
sbb
push
add
inc
call
je
cld
pushf
push
add
add
in
or
inc
jecxz
adc
punpckhbw
(bad)
jmp
addr16
add
aaa
push
mov
movs
fadd
sub
aaa
push
std
jmp
add
mov
fadd
add
add
add
inc
dec
jno
mov
mov
add
cmps
jnp
push
mov
adc
repz
xor
jne
xor
push
test
push
dec
fs
sahf
cmp
jecxz
jmp
sub
or
in
call
mov
arpl
imul
ja
je
test
add
add
setns
daa
ja
je
pop
in
or
sub
jmp
push
add
rcr
mov
fild
add
mov
add
dec
inc
xor
pop
mov
jbe
mov
mul
pushf
inc
xor
or
add
jbe
(bad)
daa
fild
add
jl
add
add
hlt
jecxz
(bad)
imul
add
in
inc
xor
or
sbb
sbb
mov
fs
pop
test
shr
sub
or
push
inc
fs
adc
fdiv
jae
or
sbb
and
sub
das
xchg
jl
push
cwde
jmp
jecxz
mov
add
add
(bad)
cmp
jmp
aam
pop
pop
not
add
hlt
je
push
jp
outs
fs
jmp
mov
cli
sub
jge
add
inc
jmp
jo
push
hlt
fnstsw
sbb
mov
pop
xor
inc
dec
mov
in
mov
rcl
add
add
mov
jmp
or
inc
jmp
js
mov
nop
fld
add
lods
inc
sbb
cmc
call
push
test
mov
jge
dec
jmp
cld
and
inc
add
jmp
or
(bad)
push
int3
fld
add
add
add
sub
pop
xor
ret
and
jge
xlat
call
mov
test
inc
lods
jmp
jne
gs
das
sbb
cmc
jle
inc
pop
hlt
push
push
fadd
out
shl
add
xchg
jmp
fadd
je
hlt
aam
jns
mov
or
sbb
aam
inc
add
add
xor
mov
adc
std
mov
out
call
pop
fsubr
jg
in
push
arpl
call
cmps
xlat
add
fild
add
jmp
fcomi
push
dec
aam
sbb
(bad)
fild
call
(bad)
fimul
cld
mov
push
dec
cmc
mov
add
add
popf
inc
cld
jne
push
pcmpeqb
mov
jnp
jmp
lea
xchg
jb
(bad)
popa
mov
sbb
push
add
add
inc
sub
adc
jbe
add
ja
les
fidiv
push
fild
add
lds
xchg
cmp
je
sub
add
and
add
daa
out
add
into
cmp
fild
add
jmp
inc
je
dec
aam
mov
repz
jl
imul
dec
push
rcl
call
call
xlat
add
scas
cdq
add
jb
add
aad
pop
fld
add
cmp
cmp
add
add
aam
or
iret
or
shl
hlt
push
inc
(bad)
hlt
or
inc
adc
mov
fs
xor
or
jl
(bad)
adc
std
push
and
dec
aam
(bad)
cld
add
sbb
rol
imul
push
gs
arpl
dec
lods
dec
add
add
int3
mov
push
push
pop
test
arpl
test
rol
xchg
cmp
add
hlt
dec
ret
call
repz
mov
outs
pusha
out
mov
push
inc
mov
push
ret
call
das
xchg
in
jl
dec
sbb
inc
mov
ret
je
aaa
ficomp
add
cwde
mov
add
add
mov
mov
jo
sti
repz
je
cmp
loop
or
ror
add
(bad)
jmp
adc
outs
or
adc
jge
shl
aad
add
mov
retw
call
js
push
test
push
(bad)
inc
add
add
xor
in
mov
push
(bad)
call
push
fimul
jmp
fs
les
jns
inc
nop
mov
add
xrelease
add
push
icebp
and
call
ficomp
add
cmp
push
scas
js
jo
fild
lea
xchg
pop
cld
add
add
or
(bad)
adc
sar
mov
add
dec
push
(bad)
push
popa
inc
nop
and
dec
mov
sar
add
dec
dec
xor
dec
xchg
push
(bad)
call
push
fimul
push
bound
jns
inc
lock
push
jle
add
add
add
ret
add
aad
push
or
(bad)
mov
push
imul
and
pop
lea
push
dec
jmp
add
fs
push
xor
mov
rcl
dec
rcl
movs
test
fcmovnbe
push
mov
mov
fs
inc
test
inc
pop
add
add
cmp
test
xchg
push
mov
pusha
xor
psllw
loopne
xor
call
add
ret
test
je
mov
ja
call
mov
mov
in
mov
imul
into
or
repz
fs
sbb
movs
jno
pop
dec
sbb
mov
test
add
add
jg
je
pop
in
dec
in
fadd
jmp
push
cmps
mov
push
pop
stc
jae
cmp
je
daa
retf
loopne
or
je
aad
jmp
ror
cmp
dec
(bad)
(bad)
out
movs
mov
int3
jae
add
test
fisttp
push
movs
nop
inc
add
sbb
call
mov
rcl
and
add
add
xor
dec
inc
mov
push
and
and
lea
adc
add
(bad)
push
pop
inc
mov
pop
dec
loopne
movs
mov
add
mov
out
mov
push
(bad)
loopne
dec
fdivr
(bad)
call
push
repnz
(bad)
out
popf
in
jmp
add
push
sub
xchg
fnstcw
fisttp
xlat
repz
and
mov
je
push
call
test
je
push
xchg
dec
sbb
mov
repz
xchg
fsub
add
lahf
mov
int3
(bad)
or
hlt
aaa
dec
add
add
(bad)
call
aas
mov
inc
pop
sub
push
repnz
or
cmp
mov
in
sbb
mov
int3
xchg
fbld
leave
aas
mov
je
mov
into
sbb
mov
inc
je
add
add
pop
clc
sub
into
add
stos
fnsave
push
jno
add
into
iret
test
dec
je
pop
test
inc
fiadd
add
cmp
ja
and
sub
sub
out
adc
std
jae
and
ror
add
push
add
lods
dec
mov
pop
fldcw
mov
call
mov
add
add
xor
push
mov
leave
inc
cdq
mov
cmps
jbe
xchg
les
cli
xor
add
(bad)
dec
lea
out
sub
test
fsub
and
fadd
mov
bound
cmp
jmp
mov
mov
int
cmp
sub
add
add
retf
loope
jbe
pop
repz
xchg
loopne
push
retf
push
test
pop
adc
cwde
call
add
outs
mov
scas
cdq
mov
mov
jmp
mov
call
call
pop
jl
or
loop
repz
mov
add
add
push
mov
dec
in
addr16
inc
retf
push
popa
and
push
push
std
add
ror
or
push
push
std
add
repz
pop
fmul
call
call
inc
js
(bad)
push
dec
fmul
inc
add
add
xor
jmp
cmps
ret
int
cmp
retf
jne
inc
mov
repz
inc
cld
call
mov
fild
shl
sbb
pop
enter
mov
push
inc
shr
add
jmp
scas
in
ins
pusha
inc
add
add
and
jno
popa
(bad)
mov
push
mov
je
ret
(bad)
add
fidivr
call
scas
sbb
fldenv
xor
mov
xor
or
xor
sub
mov
mov
adc
adc
pop
inc
hlt
xor
hlt
xor
call
add
add
test
popa
repnz
movs
push
jne
xchg
pusha
xchg
lea
(bad)
and
movs
and
push
call
dec
call
out
or
test
jno
(bad)
cmp
xor
add
pop
out
mov
push
cmp
adc
jge
lods
mov
add
add
retf
add
pop
out
mov
out
call
ja
or
into
dec
ficom
or
jne
int
mov
scas
mov
dec
sti
loop
fs
lea
int3
std
call
rcr
fcom
sub
fs
sbb
inc
cli
sbb
push
add
add
loope
test
add
mov
repz
ror
pop
xchg
je
int3
(bad)
jns
add
xchg
mov
call
push
push
xor
outs
and
cmps
(bad)
(bad)
push
pop
(bad)
dec
sub
shr
mov
mov
cs
mov
sbb
and
rol
cmp
inc
xor
add
add
sub
and
jne
cdq
inc
cld
push
enter
push
dec
cld
ret
xor
int3
jne
call
or
call
imul
in
test
call
xor
in
dec
fcomp
add
cld
inc
dec
inc
in
push
lea
dec
cdq
add
fiadd
dec
lods
test
call
aam
jmp
call
xor
leave
scas
(bad)
inc
fiadd
inc
xor
in
test
adc
pop
inc
leave
add
int3
out
cmps
and
out
mov
cld
xor
fimul
push
add
add
je
int3
aad
mov
das
pop
cld
cld
movs
aam
adc
(bad)
call
outs
repz
in
dec
pop
jge
adc
hlt
(bad)
pop
pop
fld
shl
fs
jl
mov
jbe
mov
mov
pop
test
scas
sub
xor
dec
sub
or
add
add
arpl
or
mov
add
fs
or
lods
in
cmp
push
test
add
movs
popa
pop
ud1
in
push
cwde
std
jmp
or
inc
jb
cmp
xchg
aam
je
pop
clc
and
cmp
fcom
or
jne
addr16
pop
(bad)
jb
inc
add
add
pop
jmp
shr
jmp
ror
add
outs
cwde
clc
sub
sub
pop
mov
push
ret
retf
adc
add
shl
mov
xor
mov
xor
sbb
in
inc
mov
push
sbb
lahf
pop
mov
push
int
add
add
add
dec
lock
aaa
and
dec
inc
es
iret
mov
addr16
iret
fdivrp
jne
mov
inc
pushf
out
call
leave
mov
es
or
mov
xor
loopne
dec
lods
inc
aam
repz
and
push
lea
repz
mov
inc
add
add
enter
add
(bad)
dec
aam
inc
add
jecxz
call
jp
inc
lods
outs
data16
out
lds
fld
add
inc
loope
hlt
fimul
xor
loop
mov
ret
les
mov
pushf
push
jle
mov
stc
mov
add
add
repz
pusha
je
mov
mov
jmp
out
test
add
add
out
(bad)
jmp
(bad)
or
add
and
sub
pop
test
pop
jmp
in
movs
pusha
inc
sbb
inc
fdivr
mov
in
call
add
fld
push
ret
dec
pop
dec
push
ret
jmp
and
jge
loopne
aas
mov
je
pop
xor
and
std
jne
inc
push
add
shl
inc
pop
mov
out
stc
or
pop
push
loopne
pop
jo
retf
lods
add
jge
add
add
xor
or
mov
dec
mov
add
cld
call
dec
inc
mov
in
mov
fcomip
fadd
push
test
sbb
stc
jnp
movs
xor
jle
fmul
cmp
xor
xchg
inc
movs
dec
dec
fmul
fs
fs
xor
mov
dec
inc
fsub
push
fisttp
call
mov
pop
mov
scas
int
adc
or
add
pop
add
or
sahf
iret
lea
(bad)
shr
sbb
or
jge
jmp
adc
adc
or
add
add
in
cli
add
dec
dec
or
cmp
pop
add
call
mov
add
loop
add
mov
(bad)
out
mov
mov
pop
jl
add
mov
mov
or
add
or
pop
addr16
and
inc
and
xchg
jle
fimul
add
push
inc
mov
pop
adc
call
addr16
lea
jle
dec
pushf
mov
jle
fucomi
pop
dec
adc
hlt
push
inc
and
std
imul
dec
inc
in
shr
fiadd
add
fadd
push
fild
sub
add
add
mov
pop
hlt
mov
pop
inc
xchg
sbb
add
pop
inc
hlt
mov
pop
mov
(bad)
adc
in
cmc
fld
pop
xor
rcr
add
sub
push
daa
mov
(bad)
sbb
mov
pushf
sahf
(bad)
inc
and
mov
add
add
in
test
fs
out
rol
fnstcw
mov
xor
in
or
mov
push
retf
call
mov
push
dec
lock
popf
icebp
lea
mov
cld
aaa
add
and
xor
inc
cld
push
retf
call
shr
push
call
add
add
test
call
aas
(bad)
sub
push
das
push
out
out
and
adc
adc
push
inc
add
fmul
cmp
fcomi
call
mov
or
test
dec
inc
add
add
pop
pop
mov
push
inc
adc
add
add
daa
push
pop
(bad)
(bad)
jae
adc
jg
jmp
jne
fdivp
setb
push
push
mov
iret
jb
das
fsubrp
add
push
cmp
sbb
std
jne
xchg
push
mov
pop
xchg
std
out
mov
push
sbb
test
adc
push
sbb
add
add
(bad)
push
ret
jmp
pop
(bad)
xchg
ret
ds
mov
fild
pop
inc
adc
rcr
xor
lods
fadd
adc
nop
adc
(bad)
aaa
test
in
and
lea
shr
jns
and
jne
push
dec
or
enter
push
mov
add
add
cmp
cmps
add
or
add
pop
call
pop
jecxz
ja
repz
adc
fld
jne
mov
call
popf
push
dec
adc
into
std
jne
push
or
or
add
xor
inc
sbb
sbb
rol
push
outs
sub
add
add
add
jne
fadd
fs
push
add
fdiv
xor
push
std
jmp
add
in
add
fld1
mov
fadd
mov
repz
push
add
jbe
sar
leave
jne
jmp
(bad)
jmp
js
pop
repz
push
xor
data16
test
add
add
mov
cmps
sahf
adc
jb
push
pop
add
fisttp
jp
and
pop
ret
aaa
mov
adc
push
cmc
jb
push
inc
add
fmul
adc
add
push
(bad)
and
mov
pop
pop
mov
xchg
fist
mov
mov
lock
add
add
mov
mov
std
stos
stc
test
stos
push
call
push
jne
pop
iret
fisttp
sar
dec
cmp
add
adc
jne
xchg
call
lea
and
cld
int3
or
add
sbb
push
push
mov
add
add
lea
mov
rol
sti
sub
add
enter
sbb
add
xor
jle
(bad)
jle
out
xchg
adc
das
adc
nop
sbb
inc
adc
(bad)
add
mov
call
dec
dec
dec
adc
retf
mov
push
out
add
add
mov
and
outs
pushf
add
jmp
les
xor
add
dec
les
out
mov
and
mov
loope
or
std
mov
(bad)
lea
xor
retf
mov
add
cdq
lea
and
out
adc
sub
sub
mov
fs
test
add
mov
add
loope
in
xchg
add
scas
adc
mov
mov
push
inc
loopne
leave
or
and
jne
adc
(bad)
xor
fst
sbb
add
fld
push
scas
add
sbb
sahf
std
push
add
pusha
sar
call
mov
add
add
retf
mov
xor
mov
pop
add
shl
jns
test
xor
dec
ret
and
inc
and
mov
xor
call
imul
jmp
and
jae
scas
add
or
or
retf
mov
push
aad
add
add
mov
mov
rol
fst
pop
test
push
dec
stos
push
inc
adc
push
dec
adc
fdivr
add
pop
pop
xchg
or
pop
add
lea
fcom
mov
push
retf
sub
pop
add
enter
add
je
jl
pop
pop
or
jmp
cmc
add
inc
add
call
mov
inc
inc
in
inc
(bad)
mov
add
in
push
call
xor
push
call
dec
addr16
test
add
aas
inc
adc
pop
jb
and
sub
add
add
mov
push
ja
je
push
inc
fs
dec
js
fisttp
mov
and
sbb
out
jne
pop
mov
push
(bad)
fild
ret
and
hlt
arpl
das
sbb
sbb
lods
aam
jbe
push
dec
arpl
fimul
add
arpl
ret
stc
fs
ror
pop
ret
das
mov
jb
sub
jb
mov
push
and
fimul
adc
sbb
jl
jp
fs
iret
ja
fimul
push
loopne
(bad)
mov
data16
aas
pop
jae
mov
dec
rol
add
cld
icebp
inc
inc
pop
fs
hlt
bound
popa
dec
cwde
fdivr
jno
ret
test
inc
sub
mov
lods
in
pop
loopne
mov
cmp
add
call
or
gs
ja
dec
lock
scas
adc
jmp
fmul
jne
arpl
rol
push
call
out
sahf
or
add
add
add
pop
jmp
inc
push
and
mov
mov
dec
and
int
imul
inc
call
movs
xchg
std
dec
dec
call
dec
in
rol
test
sbb
retf
jmp
pusha
(bad)
cs
daa
or
jae
mov
out
add
add
jmp
movs
inc
add
mov
(bad)
(bad)
out
daa
shl
pop
add
fcom
dec
adc
mov
add
xor
push
xor
push
pop
scas
call
sub
shl
sbb
pop
jb
je
jo
and
push
mov
push
inc
lock
adc
pop
xchg
std
inc
add
add
aaa
es
pop
lods
or
lea
add
pop
jb
dec
pushf
xor
or
pop
pushf
pop
jl
jl
sti
call
push
pop
loopne
and
in
je
xor
jge
adc
cmp
pop
jl
sbb
mov
aaa
pop
int3
mov
cmps
jg
inc
add
add
aaa
add
test
xchg
and
std
add
mov
call
push
loopne
mov
sub
inc
rcl
fmul
pop
pop
sbb
and
push
jne
and
push
or
loopne
mov
call
in
add
and
add
add
jno
(bad)
jne
xor
add
(bad)
dec
mov
sbb
lods
adc
push
mov
lea
push
or
aad
jns
push
aaa
mov
and
add
hlt
xchg
pop
call
rcl
jne
sbb
xchg
call
pop
cmps
icebp
mov
cwde
mov
add
add
mov
repz
add
fld
add
inc
movs
xor
jbe
(bad)
mov
mov
in
dec
pop
call
or
(bad)
mov
sbb
test
pop
popa
call
or
add
xor
inc
adc
pop
call
add
add
js
inc
sbb
cmps
or
dec
add
jae
pop
mov
cmp
fadd
sub
(bad)
jbe
add
dec
movs
fmul
nop
push
pop
mov
movs
adc
call
aaa
scas
cld
ret
add
jge
fisttp
je
add
add
add
(bad)
push
lea
add
or
mov
aaa
add
std
dec
mov
fiadd
add
or
xor
xchg
pop
inc
mov
test
rcr
add
add
cli
add
call
aaa
sbb
call
add
add
pop
pop
mov
call
test
(bad)
call
pop
test
push
push
in
fild
call
fs
(bad)
call
adc
add
fimul
call
adc
ins
push
test
sub
out
add
or
(bad)
jmp
test
jmp
fld
add
mov
mov
and
add
repz
jne
add
ret
into
std
jo
jmp
call
xor
pop
pop
rcr
inc
jns
adc
out
add
add
inc
dec
cwde
(bad)
(bad)
jmp
fild
add
lea
popa
pop
jns
ret
add
cmc
cmc
fld
call
in
ss
lea
inc
adc
and
out
movs
fisttp
add
(bad)
call
inc
call
add
add
je
jle
push
pop
push
add
call
mov
fild
add
movzx
push
lds
xor
mov
add
dec
adc
dec
jmp
pop
fs
lds
outs
lahf
adc
call
mov
call
outs
fwait
or
add
sub
add
pop
add
call
push
out
sbb
mov
xor
jmp
(bad)
inc
adc
call
fbld
(bad)
push
cs
repz
mov
adc
cmp
jae
cld
push
idiv
add
pop
mov
add
add
movs
add
call
(bad)
pop
xor
call
add
pop
push
fucomi
fmul
sbb
(bad)
(bad)
jmp
cs
call
movs
or
repz
call
call
mov
rol
dec
fmul
inc
mov
add
add
sar
push
pop
and
lea
xor
lock
add
add
fimul
lea
das
adc
in
std
jbe
add
add
std
xor
push
jae
push
add
dec
add
mov
add
add
out
je
add
push
mov
xor
dec
(bad)
dec
push
cmps
in
fiadd
lea
mov
imul
add
(bad)
call
adc
jmp
xor
add
cmp
xchg
jmp
cmp
jmp
fcom
add
add
sbb
mov
adc
int3
mov
push
mov
fild
mov
enter
jmp
or
shl
dec
sub
adc
dec
or
mov
push
ret
pop
jno
add
test
adc
mov
inc
push
sub
xor
add
add
jle
push
push
adc
fwait
or
add
addr16
pop
push
add
lahf
mov
lar
sbb
scas
clc
jae
inc
(bad)
sbb
xchg
pop
pop
jbe
add
rcl
sbb
inc
or
add
xlat
add
shl
inc
add
add
sbb
dec
adc
pop
arpl
fs
dec
sbb
mov
push
jp
out
mov
push
mov
pop
fld
scas
pop
mov
in
add
push
xchg
std
jmp
test
pop
fmul
leave
jns
jb
outs
fucomip
add
pop
mov
fidivr
sbb
daa
ret
fisttp
add
stc
jno
das
mov
add
pop
cmp
jp
test
jnp
mov
add
mov
js
jmp
mov
mov
push
add
in
xchg
ret
call
dec
fild
mov
pop
mov
jmp
into
std
test
jp
mov
add
sub
cdq
add
add
add
inc
fadd
shl
mov
ja
or
jmp
jno
int3
inc
pop
add
ret
and
push
das
mov
(bad)
clc
fimul
cld
push
inc
cld
mov
push
add
mov
mov
out
enter
fwait
mov
dec
push
cmc
idiv
mov
add
add
push
loope
ror
test
jns
push
add
push
data16
push
and
add
mov
add
es
cmp
mov
iret
(bad)
rcr
inc
in
add
adc
call
mov
push
mov
add
(bad)
jmp
push
jne
jl
(bad)
inc
add
add
or
je
add
jmp
int3
ror
jns
mov
mov
loopne
mov
icebp
mov
mov
and
dec
lea
out
pop
add
mov
and
add
add
ret
cmp
add
mov
push
push
push
outs
sub
in
add
add
jb
das
xlat
jmp
xor
stos
or
sub
fisttp
mov
or
std
repz
mov
push
mov
jmp
inc
lock
mov
push
inc
hlt
lods
mov
jb
mov
xor
jmp
lock
add
cld
loope
call
pop
aad
movs
fild
add
xchg
icebp
inc
(bad)
mov
xor
mov
outs
xchg
or
pop
movs
adc
mov
std
mov
(bad)
pop
dec
clc
mov
cli
je
and
(bad)
out
ret
fild
jmp
inc
enter
add
cdq
push
jmp
push
fild
mov
cdq
jns
movs
dec
fild
dec
and
mov
mov
call
mov
push
jmp
push
cmp
(bad)
cli
fisubr
dec
(bad)
std
jne
lods
(bad)
jne
repnz
mov
add
push
inc
or
push
or
jmp
in
pop
pop
and
and
aad
les
out
ret
mov
loopne
dec
ins
push
inc
stc
in
sahf
(bad)
jmp
fiadd
fldenv
and
push
gs
jl
or
(bad)
call
inc
pop
test
mov
mov
adc
sub
scas
(bad)
mov
cld
mov
pushf
xor
pop
adc
and
and
fcmovne
adc
mov
popf
les
lock
mov
sti
and
push
call
sti
je
loope
(bad)
sar
(bad)
pop
popf
cld
je
out
sub
les
sti
dec
scas
adc
std
dec
std
inc
add
add
pop
push
mov
pusha
jmp
inc
xor
ret
mov
fld
pusha
fs
dec
push
fst
mov
std
mov
sbb
and
pop
gs
fmul
adc
cwde
add
stc
es
inc
stos
(bad)
gs
jae
pop
cmp
fld
add
lahf
cmp
xchg
lea
add
add
dec
cmp
rcl
cld
pop
sub
add
push
jp
in
xor
loope
jne
jb
pop
sbb
push
pop
sbb
sbb
aas
add
mov
and
add
adc
add
jne
(bad)
cmp
cmc
sub
add
mov
in
add
push
pop
sub
add
ins
inc
dec
ficom
pop
push
pop
sbb
call
dec
xor
dec
dec
mov
sbb
imul
and
add
stos
sub
pop
and
(bad)
ja
push
inc
inc
adc
xchg
add
add
sahf
shr
add
pop
aam
lahf
jo
std
jmp
add
cmp
or
mov
inc
or
fbstp
aas
cmp
inc
cwde
xchg
cmp
cwde
cdq
mov
movhps
add
mov
out
adc
inc
add
add
pop
add
xor
xchg
jmp
add
cmc
cmp
stos
add
je
fiadd
mov
repz
stos
fstp
inc
or
cmp
cmc
mov
hlt
(bad)
sub
pop
pop
cmps
dec
xor
mov
sahf
sbb
imul
push
mov
add
add
push
js
sbb
add
push
fild
add
or
dec
or
xlat
in
movs
adc
sub
mov
mov
sbb
mov
mov
push
sub
rol
not
xor
mov
add
jae
pop
push
sbb
rcl
add
add
cmp
mov
mov
add
inc
mov
test
mov
out
inc
mov
dec
mov
push
(bad)
call
pop
inc
adc
mov
mov
jmp
and
or
shr
add
scas
pop
adc
jo
push
mov
add
add
pop
pop
test
mov
rcl
je
outs
mov
test
cmp
or
add
call
mov
inc
adc
rol
inc
or
cmp
jno
jmp
daa
mov
and
aaa
in
inc
and
add
test
call
dec
adc
add
xor
adc
cdq
add
jmp
mov
dec
dec
or
jle
mov
call
sbb
add
in
and
outs
call
jecxz
add
in
sbb
add
and
pop
popf
adc
add
add
lods
(bad)
inc
mov
xchg
add
(bad)
jmp
mov
dec
dec
or
or
add
mov
sbb
or
adc
pop
add
cmp
or
test
xchg
lods
xlat
add
jno
cmp
nop
jle
ror
mov
scas
dec
add
inc
cmp
adc
add
add
add
jmp
mov
inc
call
repnz
add
fld
xchg
cmps
and
adc
cmp
or
add
sbb
ret
in
ret
pop
loop
cmps
enter
(bad)
add
call
out
add
jmp
fwait
add
inc
add
add
cmp
adc
xchg
sbb
cmp
or
adc
dec
xor
add
and
dec
sbb
xchg
add
cld
push
or
ret
cmp
mov
test
pop
pop
sub
inc
push
xchg
mov
push
icebp
adc
push
push
std
jmp
add
shr
jb
pop
jmp
inc
pop
push
dec
sbb
cmp
mov
push
or
repz
mov
mov
jmp
jno
scas
xchg
adc
xor
mov
mov
push
or
(bad)
cmp
add
add
fsub
sbb
cmp
je
push
or
xchg
cmp
mov
iret
xchg
mov
add
jge
std
jmp
push
rcl
add
sub
fistp
out
stc
add
nop
ja
clc
cmp
adc
cmp
loop
ret
add
add
aaa
mov
ret
paddusw
shl
add
fcomp
ins
hlt
stos
add
pop
jno
mov
fsubr
hlt
fimul
shl
stos
mov
int3
sbb
push
jle
movs
stos
(bad)
cvtdq2ps
call
ret
addr16
xor
call
mov
add
not
mov
add
add
fimul
adc
mov
mov
add
cmp
test
cmp
je
aas
cmp
jbe
ret
inc
cld
lahf
dec
add
(bad)
jp
call
pop
dec
gs
xor
or
call
fs
adc
cmp
cmp
in
and
mov
mov
add
add
arpl
adc
xor
inc
cwde
adc
pop
cmp
pand
lahf
out
aaa
sbb
jae
inc
adc
cmp
jbe
les
fild
add
dec
dec
fld
pop
dec
inc
xor
mov
or
imul
hlt
fadd
add
movs
push
test
movs
sbb
push
stc
inc
adc
mov
cmp
xchg
xor
add
rcr
sbb
mov
inc
cld
pop
xor
dec
dec
fadd
pop
dec
test
ret
clc
inc
adc
mov
jno
fistp
add
fnsave
dec
inc
stc
dec
or
test
cdq
inc
jmp
xchg
pop
jg
adc
sub
pop
shld
mov
js
push
shr
(bad)
jbe
adc
pop
sub
xchg
pop
and
mov
std
push
and
fild
mov
ins
cmp
or
add
mov
mov
out
or
aam
dec
xor
sub
(bad)
sbb
imul
stc
mov
add
sub
jbe
adc
pop
popf
movs
sub
jmp
adc
loopne
sbb
push
lock
jecxz
sbb
and
popf
add
inc
mov
sbb
xor
mov
pop
jne
movs
mov
mov
jae
inc
add
mov
fist
mov
je
int3
lods
cmp
je
pop
mov
jecxz
inc
cmp
jle
mov
cmp
je
add
add
scas
movs
adc
out
or
fucomp
test
stos
ins
mov
call
mov
test
sub
mov
pushf
add
inc
mov
and
add
loopne
add
mov
add
or
add
dec
sub
iret
shr
fiadd
add
add
add
mov
add
nop
out
add
mov
ret
dec
inc
ds
jle
xor
add
cmc
mov
stos
lock
jmp
cmc
add
or
in
fdiv
outs
(bad)
ret
jmp
icebp
xchg
fld
sbb
std
pop
add
add
dec
pop
cmc
add
jecxz
clc
mov
push
(bad)
jmp
call
pop
in
je
cmp
fadd
cmp
leave
push
stos
mov
mov
inc
in
std
and
xor
push
test
(bad)
inc
icebp
inc
sbb
sbb
jmp
ja
add
test
add
add
sub
adc
and
outs
call
fdiv
adc
sbb
push
(bad)
test
imul
cwde
cmc
push
xor
xor
inc
push
sub
adc
and
out
cdq
adc
pop
not
or
call
add
add
test
push
jmp
mov
cmc
push
or
ja
inc
cmp
adc
dec
sub
mov
pop
(bad)
clc
repz
mov
enter
and
call
pop
cdq
adc
neg
cmp
outs
xchg
rcr
or
(bad)
jge
sti
call
sbb
add
add
add
and
push
inc
enter
repz
push
(bad)
push
sbb
pop
je
scas
lahf
add
cmps
and
xor
dec
mov
call
jae
cmps
and
in
pop
(bad)
call
cmp
or
je
shl
and
repz
sbb
add
add
inc
test
push
jae
and
pop
aas
xchg
sbb
clc
je
call
inc
pop
mov
ins
mov
pop
mov
jbe
pop
push
and
inc
(bad)
jbe
and
and
popf
pop
(bad)
jno
fldcw
pop
xlat
xor
jae
push
mov
mov
add
add
ror
retf
shl
sub
jg
dec
push
popa
pushf
std
std
and
std
push
ror
std
call
add
loopne
mov
out
inc
add
fmul
inc
movs
out
mov
lock
add
fadd
nop
fadd
jnp
add
add
popf
jns
frstor
mov
out
mov
mov
out
inc
js
popf
pop
pop
out
mov
cmps
adc
mov
lock
clc
jg
lea
in
push
push
outs
mov
sub
inc
add
xchg
cli
xchg
and
add
fdivp
jbe
into
lock
add
mov
je
(bad)
outs
and
mov
in
fwait
jmp
mov
repz
(bad)
jmp
add
add
xchg
cmc
add
xchg
jno
jns
je
lods
fwait
icebp
mov
mov
(bad)
lock
ss
jb
xchg
and
add
ret
test
add
jle
cmp
add
add
jecxz
jge
hlt
fiadd
jmp
pop
rcl
inc
mov
in
inc
fdiv
imul
inc
fdiv
out
inc
fdiv
ss
inc
fdiv
cmps
lock
fidiv
mov
inc
fnstenv
cmps
lock
fidiv
aas
cmps
outs
mov
add
add
sub
(bad)
jmp
lds
adc
mov
icebp
jo
outs
and
popa
int3
adc
shr
add
clc
mov
or
cmp
mov
outs
cmp
mov
inc
and
test
call
imul
sbb
nop
pop
jmp
add
sub
hlt
(bad)
mov
out
pop
cmp
inc
jno
stos
test
lea
and
jb
lock
cmp
or
gs
push
jg
add
mov
mov
sub
out
inc
cld
jno
aas
dec
sub
mov
pop
cmps
sub
shld
leave
add
add
mov
stc
cmp
out
cs
add
das
inc
pand
sar
scas
not
push
mov
dec
lock
fucomip
inc
cmc
mov
pop
jle
fs
mov
icebp
inc
add
xor
add
xchg
loope
jbe
out
dec
cld
cmps
mov
add
cdq
ins
xor
(bad)
(bad)
jne
mov
fiadd
mov
sub
in
pop
ror
add
and
das
sub
movs
fucomip
adc
pop
add
and
pop
scas
(bad)
ja
pop
cmp
mov
rcl
test
sub
inc
cmp
fwait
mov
add
add
fild
add
pop
cmc
add
out
cmp
jecxz
adc
pop
push
mov
shl
and
add
and
out
dec
imul
mov
jo
inc
in
mov
lods
out
and
mov
retf
xchg
mov
sub
mov
add
add
daa
mov
mov
je
and
jmp
cmp
jne
in
jno
fiadd
jae
jecxz
cmp
test
in
shr
add
xchg
mov
ins
mov
test
fsubr
fdiv
add
add
in
mov
fcom
stos
cmp
mov
pop
ror
mov
lahf
into
mov
mov
push
add
dec
push
cmp
jp
mov
jmp
xor
add
add
cmp
add
cmps
ret
adc
mov
add
add
mov
add
add
popf
sub
cmp
mov
mov
int3
std
inc
das
adc
in
rcr
aaa
and
shl
movs
add
fdivr
inc
push
pop
push
pop
das
xchg
stc
mov
sub
inc
sbb
add
mov
add
clc
sar
enter
enter
mov
sub
shl
mov
add
add
retf
jno
sub
nop
push
xor
pop
ret
push
(bad)
fbld
pop
mov
in
pop
sbb
jne
mov
push
ins
lahf
mov
add
hlt
fstp
shl
popa
jne
repz
inc
cld
fidivr
push
hlt
outs
dec
mov
mov
add
add
push
xor
pop
inc
pop
pushf
repnz
iret
or
call
pop
pop
pop
sbb
xor
je
pop
mov
add
fwait
or
fmul
jl
push
inc
cmp
and
add
mov
jbe
push
je
ret
ins
std
jmp
mov
addr16
sub
add
add
sbb
enter
or
mov
sub
push
xor
jle
pop
iret
jl
push
dec
cmp
adc
ret
xor
das
and
das
popa
fiadd
mov
sub
inc
and
mov
sub
cmp
inc
jo
inc
int
(bad)
call
mov
add
pop
or
pop
add
and
cmp
xchg
jp
repz
stc
call
pop
inc
je
adc
cmps
or
repz
cs
fld
add
fld
mov
cwde
mov
push
push
ins
pop
xor
rcl
pop
dec
cmp
jecxz
adc
or
or
inc
add
add
(bad)
scas
mov
xor
ins
push
mov
push
mov
call
dec
pop
jb
dec
push
xor
sbb
scas
xchg
imul
fwait
retf
push
mov
mov
cli
adc
les
push
inc
pusha
cmps
daa
pop
add
pop
adc
hlt
fsub
aas
sub
sub
xor
add
add
add
pop
mov
adc
in
add
dec
pop
fs
mov
add
dec
xchg
push
mov
mov
movs
and
pop
movzx
aas
test
or
push
push
add
cmp
or
inc
and
pop
rcr
add
add
ja
adc
hlt
outs
enter
popf
push
in
mov
rcl
xchg
push
dec
je
pop
jge
mov
jne
aaa
mov
mov
mov
imul
mov
push
out
das
xchg
xor
pop
lahf
push
mov
add
add
mov
cmp
mov
arpl
ins
push
dec
inc
dec
push
push
ins
mov
inc
adc
jl
ja
mov
push
dec
cmp
retf
or
cmp
mov
push
inc
dec
mov
push
mov
fbstp
rcl
push
mov
nop
jmp
pop
xchg
push
mov
mov
hlt
adc
mov
repz
mov
inc
adc
movs
push
xchg
mov
push
leave
add
arpl
mov
add
jmp
pushf
cmp
add
in
(bad)
cmp
inc
dec
sar
sub
test
rol
pop
add
add
add
mov
shl
mov
jmp
out
(bad)
xlat
add
sbb
mov
lock
mov
lods
and
cld
call
sbb
imul
fisttp
add
push
mov
je
jae
out
mov
mul
push
mov
add
add
fidiv
leave
nop
repz
out
jno
xor
mov
push
xor
push
inc
pop
cld
jae
inc
pop
add
sub
dec
rol
shr
pop
mov
add
ins
mov
pop
iret
jl
push
dec
cmp
(bad)
ret
xor
das
sbb
das
into
fadd
mov
xor
add
jle
inc
and
mov
sub
cmp
inc
push
(bad)
call
mov
or
in
add
cmp
xchg
jl
repz
clc
call
push
inc
je
sbb
or
repz
rol
mov
in
xor
ja
add
dec
inc
dec
add
add
pop
mov
div
mov
push
fimul
add
add
gs
push
das
mov
test
cmp
mov
xor
inc
sbb
inc
arpl
or
xchg
inc
mov
aaa
arpl
push
xor
mov
mov
test
pusha
mov
add
add
pop
std
jmp
mov
ins
shr
pusha
mov
retf
int3
cmp
call
pop
rol
jbe
aaa
loope
add
cmc
add
enter
jno
jo
ficom
add
mov
push
cmc
add
dec
add
inc
inc
rol
add
add
cwde
dec
xchg
mov
(bad)
sti
adc
xor
jns
icebp
cmp
dec
cwde
push
inc
js
xlat
dec
and
enter
push
mov
adc
hlt
push
xchg
cwde
cli
fld
mov
inc
add
ret
jmp
cvtps2pd
imul
fmul
add
add
add
add
fld
mov
mov
sub
pminub
cmc
cmp
jmp
setp
imul
push
or
je
inc
fist
push
fnstenv
leave
ins
bound
mov
push
xchg
in
dec
or
inc
sub
(bad)
cmps
sbb
mov
inc
dec
push
ins
mov
add
add
inc
mov
or
das
pusha
push
mov
mov
push
das
xchg
inc
mov
(bad)
arpl
aas
mov
mov
(bad)
cmp
mov
loopne
arpl
inc
inc
pop
jl
je
inc
ins
sub
add
call
push
push
pop
add
add
test
nop
xor
xor
jo
push
gs
daa
and
mov
data16
push
in
call
data16
cmp
out
hlt
fild
or
push
push
inc
ins
das
es
mov
mov
xchg
movs
call
xor
xchg
mov
push
add
add
rcr
push
je
or
cmp
dec
xor
cmp
cdq
inc
mov
pop
enter
inc
cmp
mov
mov
inc
rcl
dec
dec
in
mov
xor
addr16
pop
mov
add
add
(bad)
dec
clc
pop
jne
movs
fild
xor
pop
icebp
pushf
inc
adc
imul
pop
adc
jmp
xchg
add
mov
arpl
out
and
push
fimul
add
cmp
dec
mov
lods
jecxz
inc
add
add
mov
mov
fld
data16
jnp
arpl
pop
ficom
mov
dec
call
fld
jne
bound
sub
xor
xor
mov
inc
pop
pushf
in
retf
mov
test
inc
push
add
mov
pop
movs
cmp
add
add
shl
(bad)
inc
pop
mov
add
fcmove
jl
fs
cmp
mov
sub
je
xor
outs
pushf
in
retf
mov
jl
xor
mov
clc
adc
ror
add
fdivrp
inc
push
(bad)
push
push
mov
xchg
cmp
add
add
repz
jl
hlt
call
fnstenv
(bad)
pushf
cmp
arpl
add
arpl
(bad)
ja
add
js
rcr
adc
loope
dec
ficom
pminub
iret
mov
(bad)
inc
cmp
cdq
cmp
ret
add
and
mov
add
add
das
fwait
je
xor
mov
call
mov
setnp
fidiv
and
fidiv
sbb
fidiv
adc
fidiv
or
(bad)
add
sahf
outs
mov
jne
add
call
movs
push
add
cli
pop
jp
add
add
daa
xchg
pusha
mov
mov
pusha
fiadd
popf
dec
inc
mov
aad
mov
call
icebp
add
repz
(bad)
pop
pop
imul
loopne
test
add
mov
inc
dec
or
add
mov
xor
mov
fimul
ror
add
add
add
jl
arpl
dec
call
xchg
xlat
mov
fst
mov
xlat
xchg
mov
sub
std
adc
add
inc
aam
lea
fisub
hlt
fadd
dec
pop
adc
add
jmp
xchg
inc
pop
enter
sti
inc
add
add
adc
aas
and
xor
ins
iret
stos
dec
push
push
or
ret
jl
and
je
inc
ins
out
dec
pop
pop
std
pop
pop
call
out
fbstp
js
fadd
xor
pop
ret
scas
xchg
pop
cmp
rol
jl
fadd
aaa
call
push
or
inc
add
add
lahf
lahf
in
fcomp
add
xlat
inc
ins
jge
pop
mov
clc
pop
jmp
cmp
push
xchg
shl
push
push
mov
mov
add
clc
push
adc
rcl
xor
(bad)
jp
(bad)
jecxz
mov
mov
mov
add
add
fadd
mov
mov
add
repz
popf
push
and
or
sbb
(bad)
(bad)
pop
mov
inc
nop
(bad)
mov
jl
cmp
adc
hlt
xchg
nop
mov
sub
xlat
push
fisttp
jmp
dec
enter
push
xor
ret
ds
jmp
push
imul
out
in
jge
dec
arpl
repz
shl
cmp
in
lds
pop
fistp
push
hlt
aad
ins
pop
test
xor
das
inc
mov
imul
xor
push
pop
lahf
sbb
mov
or
call
xor
imul
add
sub
test
jb
pop
pop
sbb
jp
push
mov
xchg
aad
or
dec
cmp
clc
fld
xor
rol
sbb
(bad)
in
inc
add
fs
mov
jo
aad
and
xchg
inc
cmp
add
aad
ins
lods
(bad)
dec
mov
add
add
in
add
xor
sahf
pop
ret
jle
push
pop
out
iret
cmp
xchg
adc
mov
cmp
pop
push
mov
aad
sub
sub
(bad)
(bad)
add
cli
pop
(bad)
je
aam
sbb
pop
jb
aas
pop
xor
add
shr
and
ja
add
ffree
inc
add
add
or
jmp
pop
int
(bad)
call
jb
pop
mov
push
mov
sub
xor
aas
add
add
jo
pop
sbb
cwde
inc
and
cmp
and
pop
sub
and
add
adc
add
outs
add
cmp
(bad)
push
add
in
sub
push
add
add
sbb
and
fdiv
inc
inc
nop
inc
ret
sub
ja
add
mov
rol
and
mov
cmps
sub
(bad)
fistp
and
jbe
fild
es
jo
add
or
cdq
push
xor
fs
pop
add
add
hlt
(bad)
jle
mov
mov
xor
and
fisttp
loopne
inc
sub
and
enter
sub
lahf
pop
movs
fild
sub
(bad)
jmp
cs
xor
add
stc
mov
mov
out
xchg
sub
mov
xlat
inc
xor
add
add
add
cwde
jmp
cmps
add
jbe
add
inc
or
xlat
jle
lahf
sbb
mov
cmp
mov
data16
fimul
jae
xlat
lds
xor
pop
pop
cmps
push
mov
pop
pop
add
xor
push
cmp
adc
(bad)
jecxz
stc
ret
into
retf
add
add
add
outs
jge
cmp
xlat
add
test
fiadd
mov
iret
pop
cmp
jmp
jns
mov
rol
mov
mov
mov
rol
test
jmp
add
test
aas
add
add
add
mov
fld
add
(bad)
add
mov
cvtps2pd
std
dec
jl
retf
rcl
add
shl
add
jb
or
data16
sub
jle
xor
sbb
mov
mov
in
pop
fld
pop
dec
rol
add
add
inc
mov
push
add
add
ja
sbb
push
push
pop
leave
cmps
rol
ja
or
add
nop
sub
add
fmul
or
adc
jmp
mov
iret
pop
sbb
test
cdq
mov
or
mov
or
add
fs
inc
add
dec
sbb
je
mov
mov
xchg
jmp
pop
jmp
cmps
xchg
add
ror
mov
mov
test
mov
(bad)
inc
clc
enter
and
xor
mov
pop
add
cmp
mov
add
add
inc
mov
cmp
out
mov
inc
mov
ss
movs
or
sbb
mov
jae
add
fwait
pcmpeqb
mov
push
mov
rol
fld
sbb
inc
cld
mov
push
mov
(bad)
fmul
sub
or
data16
add
imul
std
fild
add
add
fidiv
sbb
std
jmp
jno
pop
add
loopne
sub
fiadd
add
add
ror
pop
jmp
je
push
or
dec
fidiv
fimul
pop
add
jmp
pop
jl
fs
adc
add
add
jns
movzx
dec
clc
mov
xchg
inc
pop
ret
or
les
test
sbb
imul
fnsave
pushf
shr
lds
pushf
test
arpl
call
fdivr
sbb
in
jmp
in
daa
mov
mov
push
pop
mov
xlat
xor
add
add
push
test
add
fmul
(bad)
out
mov
(bad)
(bad)
dec
int3
ret
retf
rol
fcmovnu
(bad)
jns
add
pop
sti
adc
retf
sub
retf
add
jmp
inc
or
sahf
in
ins
push
or
sub
add
fdiv
sbb
push
std
jbe
add
add
movs
clc
add
pop
int
add
mov
mov
xchg
jmp
xor
(bad)
loop
jne
xchg
push
add
fadd
imul
dec
std
add
test
fild
add
adc
test
add
imul
add
adc
add
pusha
test
fs
inc
clc
mov
add
imul
or
add
sbb
mov
and
push
mov
jmp
push
inc
adc
adc
dec
(bad)
sar
jne
sub
add
std
push
sub
inc
cld
mov
call
add
repz
sub
cmp
fs
mov
push
mov
adc
adc
je
pop
pop
call
sbb
jmp
clc
in
dec
fild
mov
adc
mov
call
mov
in
mov
pushf
(bad)
jne
loopne
push
int3
cmp
mov
push
or
xchg
or
add
add
jmp
std
add
icebp
mov
sti
(bad)
ja
repnz
je
mov
sbb
fdiv
inc
clc
jne
stc
sub
fimul
add
aam
add
cmc
inc
xor
or
xor
test
xchg
loop
push
test
or
hlt
pusha
fs
hlt
pop
dec
hlt
add
add
jg
stc
setp
(bad)
(bad)
cmp
mov
pop
inc
and
jno
pop
adc
mov
add
dec
in
inc
and
jmp
push
pusha
pop
inc
aam
dec
add
push
pushf
pusha
jl
je
add
inc
fsubr
imul
fnstenv
ins
icebp
mov
(bad)
ja
icebp
inc
and
add
add
sub
pop
mov
mov
xor
push
stc
adc
or
and
or
js
and
loopne
pop
sti
fadd
add
fadd
punpckhbw
push
test
fadd
or
std
mov
jecxz
inc
nop
aam
add
in
hlt
sbb
add
add
inc
test
js
mov
push
dec
aam
xchg
jno
out
adc
cmp
(bad)
sub
inc
inc
scas
add
cmp
inc
clc
cmp
in
inc
adc
add
cwde
dec
(bad)
jne
push
push
cld
repz
call
jg
add
sbb
icebp
sub
loopne
inc
add
add
nop
pop
jl
mov
or
fild
jmp
push
inc
and
lahf
jno
aaa
jg
add
or
movs
fcomip
inc
mov
add
je
inc
jmp
pop
jl
rol
mov
loop
clc
fist
inc
pop
ret
or
dec
outs
fldenv
stos
inc
sbb
pop
jb
jmp
adc
add
call
mov
test
pop
dec
mov
popf
clc
or
add
add
cmp
add
jns
add
jle
add
or
mov
out
jle
inc
sub
or
je
inc
cld
arpl
mov
aaa
clc
add
ret
sbb
add
add
sub
cmp
pop
mov
and
scas
in
shl
fcmovne
mov
lahf
jmp
push
out
shl
popf
jmp
push
inc
sbb
sub
(bad)
jmp
add
in
jle
hlt
rol
movs
sbb
aas
xor
or
mov
cmp
pop
add
push
je
imul
add
inc
call
push
inc
cld
jae
std
inc
cld
add
adc
stc
cmp
cmp
out
fld
cmc
xrelease
push
ret
fmul
cld
fdiv
imul
mov
aas
sbb
add
add
add
fsubr
xor
fsubr
sub
sbb
(bad)
jmp
or
movs
fadd
inc
hlt
xchg
inc
mov
inc
pop
test
fcom
add
or
je
mov
mov
call
mov
pop
loopne
div
sub
mov
xlat
or
add
add
add
xlat
std
dec
cld
push
retf
rcl
fdivr
imul
je
ja
sbb
mov
loop
push
dec
or
es
jno
sub
out
jle
(bad)
xor
pop
mov
call
stos
rol
add
icebp
test
add
repnz
mov
ins
add
and
inc
hlt
call
hlt
xor
test
cdq
iret
(bad)
jne
loop
in
jle
add
inc
hlt
cmp
out
inc
adc
inc
in
dec
sub
sbb
in
in
in
add
push
push
dec
inc
cld
jecxz
std
inc
add
add
fisttp
fdiv
stc
sub
(bad)
mov
(bad)
test
push
inc
pusha
mov
add
mov
fstp
movs
cdq
jmp
pop
fisttp
not
mov
pusha
(bad)
fld
add
jmp
mov
and
fiadd
add
add
add
mov
inc
fsubr
xor
repz
jge
(bad)
add
stc
cvtps2pd
std
dec
int3
push
retf
rcl
fcomp
(bad)
jmp
pop
sti
add
add
dec
or
mov
add
add
push
ret
fsub
cmp
ins
jmp
jo
jmp
pop
jmp
std
dec
in
mov
addr16
jmp
add
add
push
inc
push
and
inc
add
arpl
imul
mov
in
pop
sub
ja
push
add
add
add
xor
adc
xor
add
fsubr
cwde
or
add
in
inc
fsubr
cwde
jno
aas
sbb
cmp
add
add
xlat
out
mov
inc
jnp
std
push
or
jl
add
push
jmp
out
cmc
add
or
xor
mov
aam
add
adc
mov
or
add
in
cld
mov
add
shl
mov
inc
and
or
shr
loop
rol
add
ins
and
cmp
mov
shl
xlat
or
push
pop
test
icebp
addr16
mov
in
arpl
jmp
mov
push
test
addr16
out
mov
push
and
push
call
inc
cld
arpl
mov
daa
dec
inc
add
add
add
loop
lds
lock
jmp
inc
jl
mov
iret
iret
shr
ins
dec
in
test
add
mov
inc
outs
ins
jnp
mov
mov
dec
dec
int
std
jmp
push
mov
inc
fdivr
jle
and
push
cmc
add
fimul
add
add
add
and
mov
in
fld
sbb
inc
cld
out
jp
sub
add
sub
fsub
add
and
pop
mov
jmp
pop
jl
and
test
sub
add
hlt
ror
lahf
shl
out
inc
fs
fdiv
add
lock
pop
mov
in
jmp
fs
push
add
sahf
jmp
inc
rol
push
fs
fs
and
sub
in
cmp
push
test
iret
dec
jns
inc
data16
gs
idiv
sbb
adc
add
fs
or
sbb
(bad)
sub
std
inc
add
add
pop
ds
repz
arpl
hlt
fdiv
stos
and
call
xor
add
and
mov
in
jbe
and
push
push
movs
add
je
add
pop
inc
std
jmp
mov
test
cmp
mov
mov
add
sub
adc
call
mov
pop
xchg
fadd
push
adc
mov
mov
dec
lea
loope
add
fucomi
sub
loopne
mov
add
mov
jno
pop
and
(bad)
hlt
inc
xor
jmp
retf
stc
aaa
mov
fild
add
adc
add
add
movs
fild
outs
cmc
dec
jmp
jb
mov
or
sbb
dec
mov
mov
in
fnsave
mov
sbb
mov
mov
mov
rcr
and
cmp
lahf
push
cmp
in
xchg
lods
mov
mov
jmp
add
add
add
stc
mov
call
sbb
int3
inc
movs
retf
call
mov
jae
cmps
push
bsr
inc
mov
lds
cld
fsubr
push
clc
dec
add
je
inc
cld
arpl
into
daa
add
or
add
inc
adc
mov
add
dec
ret
lahf
jecxz
mov
call
and
test
add
hlt
fld
mov
in
shr
push
mov
in
mov
fdiv
shl
out
fisttp
test
rcl
jle
ror
in
mov
rcl
inc
add
add
push
loope
push
clc
rol
je
inc
cld
arpl
lock
mov
daa
stc
push
mov
leave
add
adc
stc
xor
(bad)
inc
out
add
mov
shr
repz
dec
repnz
add
in
xor
cmp
sbb
mov
jmp
mov
add
add
pavgb
mov
or
movs
sbb
movs
adc
sar
dec
hlt
out
test
lock
je
test
or
jnp
std
push
repz
movs
and
inc
std
push
(bad)
mov
inc
cwde
xor
inc
sbb
cmp
xlat
inc
hlt
adc
push
mov
pop
fisttp
ins
sbb
add
add
jmp
std
jmp
mov
dec
imul
cmc
add
pop
iret
add
fisttp
add
cmc
mov
aaa
add
and
sti
outs
outs
fcomp
jb
xor
loopne
enter
fadd
aaa
(bad)
add
out
sbb
add
push
fild
mov
add
add
xor
je
fisttp
sahf
mov
mov
mov
xor
pop
outs
add
mov
xor
mov
in
fisttp
in
fcmovnu
jmp
int3
xor
and
fisttp
ja
add
mov
lock
dec
enter
fadd
add
add
add
in
add
mov
aam
mov
(bad)
xor
push
shl
out
jb
mov
je
shl
aad
shr
scas
push
mov
add
inc
cmps
(bad)
cmc
add
pop
test
fimul
add
mov
jae
mov
jmp
setp
add
loopne
cld
pop
cwde
add
xor
fld
stos
xor
ret
xor
mov
push
(bad)
xor
retf
dec
mov
fidiv
mov
xor
jmp
into
add
push
shr
xor
sbb
icebp
not
mov
mov
lock
adc
call
add
add
scas
hlt
push
mov
popf
call
mov
xchg
push
pop
in
add
dec
sbb
lock
cmp
jge
xlat
or
add
sbb
(bad)
std
dec
ins
mov
rol
inc
and
xchg
clc
mov
or
icebp
in
dec
in
dec
pop
cdq
add
jmp
add
repz
sbb
je
push
sbb
adc
(bad)
push
inc
loopne
sbb
mov
cmp
mov
icebp
cmp
jae
cmps
movs
mov
je
call
fld
out
inc
scas
push
xor
xor
sahf
dec
or
sub
sub
sub
into
add
gs
ret
add
add
pop
mov
push
(bad)
jbe
scas
(bad)
jmp
scas
inc
in
cwde
mov
mov
fsubr
jae
cmp
(bad)
jae
push
mov
adc
call
push
in
xor
inc
enter
sbb
jle
xor
test
aas
std
jmp
clc
lock
cmp
or
add
add
jg
loope
cmp
inc
in
in
pop
fcmovnb
pop
mov
add
push
jle
movs
xor
jmp
push
jl
mov
xor
je
dec
clc
out
icebp
shl
addr16
inc
rcr
or
pop
in
adc
outs
(bad)
outs
(bad)
test
fld
add
add
lods
outs
fld
xchg
sub
dec
mov
mov
in
sbb
jmp
rdmsr
mov
cmovl
jg
adc
call
sbb
mov
fs
mov
test
mov
loopne
mov
mov
rol
add
add
add
or
mov
and
and
dec
and
cmp
rcr
lock
xor
inc
retf
mov
pushf
push
sbb
add
cwde
pop
jle
xor
pop
jmp
pop
jl
and
jo
mov
jecxz
clc
jg
shl
out
inc
pop
ret
or
in
adc
outs
fld
add
add
jne
je
in
aas
sbb
inc
add
mov
in
sbb
mov
ror
cld
sbb
scas
aas
add
je
mov
addr16
popf
out
inc
or
xor
fadd
(bad)
test
fsubr
or
sbb
std
repz
jmp
mov
or
and
inc
add
add
add
stc
mov
cmps
inc
clc
ins
push
add
xor
mov
dec
adc
mov
sub
sbb
ficom
jmp
push
inc
adc
cmps
inc
or
mov
test
cwde
and
pop
(bad)
fild
add
aam
cmp
loope
mov
mov
push
dec
add
add
add
sbb
sub
loopne
adc
push
xor
jae
pop
mov
adc
jno
scas
js
call
or
or
mov
rcl
hlt
movs
inc
sbb
sub
(bad)
in
pop
jmp
pop
or
add
add
(bad)
sahf
jmp
mov
sbb
idiv
cmp
fsub
add
cmps
push
sub
lahf
push
test
call
mov
shl
xor
repz
and
test
test
cmc
inc
xor
cmc
inc
and
clc
inc
and
test
inc
cli
inc
in
cli
inc
add
add
in
cli
inc
hlt
xchg
cli
inc
hlt
jl
inc
in
stc
inc
in
stc
inc
mov
cld
inc
mov
std
inc
movs
jne
inc
movs
jmp
std
inc
mov
inc
sar
inc
movs
xor
inc
je
add
sub
sbb
fs
inc
je
add
pop
add
stc
add
mov
xchg
xor
add
add
add
and
test
lods
or
add
test
add
hlt
or
and
add
adc
add
xchg
add
je
pop
add
rcl
in
cmp
fadd
js
xchg
add
pop
mov
add
add
movs
pushw
add
test
add
add
neg
add
pop
and
loope
mov
je
pop
xor
push
add
cdq
and
mov
jl
xor
pop
xor
mov
xor
and
leave
jne
test
push
pop
test
ins
pop
test
in
test
ins
push
mov
ret
stc
push
in
push
pop
mov
mov
add
add
pop
or
nop
push
mov
out
cmovae
add
mov
adc
add
out
dec
mov
add
fwait
(bad)
mov
mov
xchg
inc
mov
push
mov
nop
(bad)
add
cs
push
pop
cmp
add
mov
pop
add
push
cld
add
add
and
xchg
repz
sbb
mov
iret
jb
scas
jnp
test
push
sub
add
sbb
xchg
push
mov
adc
add
aas
push
push
adc
fiadd
cmp
test
pop
dec
cld
pop
(bad)
dec
pop
or
ret
mov
test
mov
add
add
xchg
fmul
lock
or
and
rcr
lock
dec
in
lahf
adc
push
push
mov
pop
xlat
js
sub
add
outs
rol
add
lock
lods
xchg
das
fld
mov
add
scas
sbb
(bad)
(bad)
add
add
add
inc
ins
sbb
sub
lock
xchg
in
mov
dec
lock
jmp
add
add
pand
clc
adc
dec
cld
fild
scas
loopne
xchg
xor
jo
add
mov
test
pop
add
popa
hlt
hlt
out
in
jo
daa
jne
push
jns
jg
mov
add
add
dec
and
jge
aam
xor
push
jno
pop
mov
stos
jne
push
dec
fsub
fadd
mov
aad
add
and
scas
loope
std
mov
int
add
xchg
lock
mov
psubsw
jns
je
test
and
add
dec
clc
jge
mov
add
add
psubusw
cmp
add
add
mov
mov
add
dec
ds
fild
data16
add
addr16
cld
add
pop
xchg
push
dec
cld
sub
je
cmp
and
mov
push
dec
lock
je
and
pop
outs
fild
add
xchg
add
add
mov
mov
or
inc
push
add
movs
cld
je
push
jns
mov
mov
shr
cld
and
fbld
test
sti
dec
adc
jno
cmps
pop
lock
pop
imul
in
mov
ret
sbb
add
popf
inc
test
push
inc
cld
add
add
daa
in
rcl
stos
fidiv
iret
in
rol
mov
add
adc
push
jae
(bad)
in
xchg
push
fsub
cmp
(bad)
sbb
loope
push
fdiv
or
mov
iret
das
sar
mov
dec
test
das
mov
add
add
inc
aas
cmp
xchg
cld
pop
pop
adc
xor
add
lods
sbb
mov
pop
in
adc
mov
mov
iret
xchg
aaa
xchg
clc
push
xchg
mov
retf
jg
in
add
movs
in
ror
les
add
adc
add
pop
pop
cmp
je
and
jmp
add
push
push
dec
pop
or
test
pop
leave
add
xor
add
fnsave
inc
cmp
nop
jg
in
fnstcw
rcr
out
pop
sbb
xchg
retf
add
pop
push
push
adc
fadd
add
fld
idiv
test
add
add
in
retf
add
movs
push
inc
hlt
add
push
je
add
test
add
cli
jae
add
push
cmp
add
nop
je
inc
cld
dec
inc
add
pop
push
adc
fcom
sar
xor
push
scas
sbb
sti
pop
pop
pop
test
lock
inc
hlt
jg
push
adc
fild
add
add
add
dec
sahf
pusha
(bad)
add
pop
push
adc
fld
das
sbb
add
pushf
cmp
inc
fild
mov
mov
xchg
in
inc
mov
add
loop
adc
je
mov
add
fisttp
lock
dec
add
add
push
push
in
add
add
call
mov
push
mov
push
test
pushf
into
add
add
jecxz
mov
shr
(bad)
movs
dec
test
sub
add
mov
mov
mov
xor
out
test
cmc
lods
std
mov
dec
hlt
jl
idiv
add
push
pop
fiadd
add
mov
add
add
shl
push
mov
je
xchg
add
xor
mov
mov
das
(bad)
sti
add
mov
fiadd
call
popf
test
aaa
lea
and
sti
sbb
push
sbb
or
mov
iret
push
add
add
cs
add
movs
test
sub
push
sub
or
test
xor
jne
push
inc
cld
out
sbb
or
loopne
je
loopne
jge
mov
or
and
sub
imul
test
call
add
fadd
jmp
pop
dec
push
iret
push
or
hlt
xor
rcr
or
fsubr
imul
stos
add
add
(bad)
push
mov
push
push
jmp
mov
pop
(bad)
fistp
cmp
jmp
sub
mov
push
leave
daa
mov
add
mov
lea
add
add
lods
stos
clc
pop
inc
cs
dec
fbstp
cdq
shr
ret
push
add
xor
adc
and
jg
cli
popf
test
push
hlt
setnp
xchg
fnstenv
imul
lock
sbb
cmp
fild
cmp
fild
cmovnp
jle
fild
mov
push
add
add
add
aaa
retf
jb
or
fild
dec
ins
mov
add
fild
push
add
sbb
repz
adc
jl
xchg
gs
mov
xor
xchg
add
retf
add
push
les
add
add
add
pop
mov
jmp
mov
or
mov
iret
jecxz
push
or
push
add
mov
jne
loope
push
dec
fild
add
sub
add
jmp
add
fbstp
add
mov
mov
fistp
and
add
add
inc
inc
mov
nop
in
add
test
in
ins
mov
push
clc
arpl
mov
out
sti
inc
mov
lods
or
mov
sbb
aas
ins
mov
inc
test
adc
outs
mov
out
and
lock
dec
mov
jne
add
push
jl
add
add
add
cld
xchg
dec
out
mov
and
add
mov
push
mov
mov
out
add
push
sub
aam
mov
jle
add
mov
ret
mov
arpl
mov
add
cdq
js
cs
mov
add
add
fmul
mov
push
add
or
je
inc
adc
lock
dec
xor
mov
or
mov
jno
mov
dec
or
xor
iret
out
pop
mov
cmp
add
mov
stc
or
add
sbb
dec
add
add
cld
test
add
adc
pop
inc
push
add
xchg
sbb
xchg
fwait
adc
cld
xrelease
cdq
cwde
mov
mov
xchg
xchg
fwait
adc
mov
(bad)
data16
jle
push
cmp
add
out
sbb
xor
add
shl
add
dec
jmp
sldt
add
jecxz
add
and
mov
out
std
dec
aaa
retf
lods
mov
jle
fidiv
jmp
iret
out
ror
data16
inc
mov
js
cwde
cwde
mov
lock
mov
push
xchg
xchg
sbb
aas
push
sti
inc
cwde
dec
adc
pop
or
lea
add
add
sbb
in
dec
mov
jne
cmp
out
inc
ror
fisub
retf
add
add
popa
(bad)
std
cmps
add
mov
inc
mov
xor
mov
or
inc
push
add
cwde
js
outs
push
mov
adc
(bad)
repz
add
add
pop
in
mov
add
sub
or
out
xor
fidiv
add
add
sbb
call
adc
fld
sub
enter
or
arpl
pop
fld
mov
xor
mov
or
js
scas
pusha
mov
sbb
add
add
inc
adc
ror
mov
add
xchg
js
jl
or
hlt
add
sub
dec
sub
mov
adc
mov
add
mov
or
mov
iret
out
pop
mov
mov
or
into
neg
xchg
inc
(bad)
xchg
add
add
daa
std
xchg
jle
mov
scas
xchg
fadd
add
sbb
adc
xchg
xchg
cwde
mov
xor
add
repz
adc
hlt
cmc
(bad)
data16
jg
retf
jns
mov
jmp
mov
adc
inc
push
add
mov
add
in
cmp
xchg
add
je
(bad)
jmp
push
mov
repnz
mov
inc
hlt
push
cmps
sti
add
pop
pop
lahf
push
mov
mov
push
std
push
fist
popf
add
call
fimul
(bad)
cmp
jae
add
add
rol
mov
and
jl
rol
jg
loopne
adc
dec
mov
dec
mov
fiadd
add
fimul
jl
jns
pop
push
addr16
cmps
pop
mov
push
je
pop
ret
mov
(bad)
mov
stc
outs
stos
xchg
test
jle
xchg
jno
mov
sti
(bad)
repz
add
std
xchg
js
nop
mov
pop
mov
push
sbb
sbb
add
mov
jg
or
nop
out
add
popf
adc
icebp
out
adc
push
rol
ins
mov
mov
add
jle
adc
cli
jmp
add
add
inc
push
add
add
je
xchg
out
pop
jle
xchg
jno
jb
(bad)
rcl
xchg
dec
adc
mov
mov
cwde
mov
lods
or
call
gs
in
xchg
xchg
sbb
outs
push
sti
inc
mov
call
add
pop
sub
xor
nop
xor
add
or
add
call
popfw
ins
mov
shr
mov
cld
inc
push
add
or
lods
mov
nop
(bad)
rol
nop
dec
adc
mov
mov
cwde
lods
in
add
scas
cmps
or
cmp
add
sahf
pop
mov
hlt
fild
adc
mov
inc
call
jmp
retf
out
and
add
dec
xchg
mov
mov
xchg
dec
cld
addr16
or
push
add
mov
(bad)
jmp
fild
add
xchg
mov
stc
inc
adc
add
xor
mov
jle
xor
xchg
idiv
xchg
jge
nop
mov
bound
push
sbb
sbb
add
mov
jg
or
nop
jmp
adc
icebp
out
adc
dec
rol
push
mov
add
add
add
nop
jle
fiadd
cmps
cmc
gs
aas
push
add
add
(bad)
mov
cmp
add
mov
inc
lea
(bad)
repz
push
and
mov
or
clc
call
movs
pop
pop
fstp
push
mov
test
xchg
add
push
add
add
outs
pop
jle
outs
sub
loop
ror
mov
add
fs
push
add
mov
sbb
add
adc
imul
or
xchg
cld
mov
mov
rcr
retf
xor
pop
xchg
nop
mov
lods
dec
mov
adc
cli
or
add
add
inc
push
add
mov
push
and
xchg
xchg
pop
cld
or
push
add
(bad)
push
adc
ror
mov
out
inc
call
test
mov
adc
push
jmp
jo
xchg
push
or
push
not
cmp
adc
hlt
jmp
jo
xchg
push
or
push
repz
or
pop
pop
xlat
jmp
add
add
sbb
mov
nop
sbb
rcl
cld
add
iret
adc
int3
xchg
pop
pop
in
sbb
and
dec
push
scas
pop
jg
test
add
and
push
mov
pop
ja
test
jge
sub
push
pop
add
scas
call
lea
pop
add
scas
call
pop
add
add
sbb
add
(bad)
aas
pop
test
mov
xchg
daa
sbb
mov
add
fwait
cld
cmp
jp
jmp
xchg
neg
add
loope
add
cs
add
jno
mov
dec
call
jmp
cmps
inc
mov
and
add
add
add
js
add
hlt
mov
punpckhbw
add
or
mov
cdq
add
cmps
sub
mov
pop
arpl
sub
push
add
mov
sbb
inc
pop
rcl
xor
push
add
or
sar
mov
inc
test
sub
dec
sub
and
test
rcr
add
pop
test
jmp
xchg
inc
add
jmp
mov
pop
mov
push
and
xchg
sahf
push
mov
pop
add
popf
push
mov
pop
add
popf
push
mov
add
jmp
xchg
inc
call
cmp
xor
push
add
add
adc
mov
mov
repnz
add
or
loopne
(bad)
jp
xchg
test
mov
fisttp
mov
push
lods
adc
inc
ror
ret
push
mov
mov
push
add
stc
adc
add
add
aam
add
jmp
dec
mov
call
push
jp
adc
pop
pop
push
call
test
movs
add
and
add
(bad)
pop
in
adc
push
mov
lds
push
pusha
test
enter
and
dec
add
add
scas
(bad)
cwde
push
xor
or
xchg
xor
test
movs
jp
jl
push
add
ins
xor
repz
push
mov
cmp
in
(bad)
cmps
add
nop
sub
std
(bad)
aas
retf
adc
sbb
push
add
adc
fadd
xchg
out
retf
adc
mov
nop
add
adc
mov
lods
adc
adc
dec
cmp
std
call
jne
push
call
push
and
dec
std
xchg
add
hlt
jmp
inc
add
mov
cld
repz
das
mov
xchg
mov
add
add
cmps
or
pop
cmp
add
fiadd
mov
loop
(bad)
or
push
add
adc
xchg
sbb
sti
aas
adc
xchg
adc
movs
ror
(bad)
(bad)
or
add
aas
adc
(bad)
retf
jmp
jno
mov
mov
addr16
add
jns
clts
mov
add
add
jae
xchg
ja
add
in
iret
loop
rcl
mov
daa
dec
pop
push
mov
dec
jo
lea
mov
sti
adc
scas
daa
mov
sub
push
mov
adc
mov
cmp
push
loop
mov
pusha
push
add
adc
cmp
add
add
gs
aas
adc
nop
adc
je
mov
lods
add
mov
aas
adc
or
retf
out
mov
sub
xchg
addr16
add
icebp
push
ror
jge
mov
or
test
and
add
aad
(bad)
adc
inc
add
test
add
add
ficom
idiv
loopne
icebp
out
stos
or
retf
adc
aad
dec
jbe
adc
inc
test
push
mov
push
jno
jb
or
push
push
dec
or
fadd
mov
cwde
int3
or
or
dec
clc
push
push
or
mov
hlt
fisttp
mov
mov
add
adc
push
rol
xchg
or
or
mov
stc
sti
out
or
data16
gs
pushw
add
clc
addr16
mov
ds
fs
push
cld
jmp
(bad)
fdivr
push
mov
cmp
mov
loop
add
add
ins
xlat
test
js
nop
int3
or
jmp
adc
pop
addr16
add
push
sbb
rcl
mov
pop
test
mov
and
mov
in
scas
adc
adc
rcl
lods
or
or
mov
outs
dec
jecxz
ins
mov
fdivrp
leave
std
dec
mov
add
dec
(bad)
in
mov
out
stc
inc
shl
add
fisubr
pop
mov
cmp
mov
add
fiadd
dec
in
ja
nop
lods
pop
std
(bad)
jg
adc
pop
gs
add
push
sbb
rcr
mov
push
cwde
mov
adc
add
push
pop
std
inc
mov
data16
mov
mov
add
dec
rcl
jbe
nop
jl
std
jmp
pop
pop
fst
xor
push
leave
test
jnp
adc
div
(bad)
ret
add
out
aas
mov
repz
add
add
adc
mov
das
dec
fistp
jne
jle
mov
stc
add
dec
fist
movs
fsub
mov
sbb
(bad)
xlat
std
jmp
(bad)
xor
mov
push
adc
push
push
adc
jg
push
fadd
adc
add
add
xchg
adc
jl
xchg
scas
(bad)
or
cmp
lds
pushf
arpl
add
jge
mov
std
dec
jg
cld
cmps
and
jl
std
call
push
mov
test
jge
mov
fsincos
inc
mov
fild
clc
sbb
pop
fist
xchg
daa
and
push
add
add
sbb
push
ins
int
jo
push
mov
pop
push
sbb
rcr
xchg
push
inc
add
or
or
adc
cmp
xor
adc
dec
fiadd
pop
cmps
scas
xchg
and
int3
xchg
sti
call
add
xchg
xchg
mov
push
add
int3
mov
out
cmp
sti
add
lock
loope
psadbw
push
jmp
jmp
fild
add
and
(bad)
pop
std
jmp
mov
fiadd
movzx
add
and
mov
inc
repz
(bad)
or
imul
cld
(bad)
cmp
std
push
aam
adc
daa
or
mul
or
out
or
mov
or
cmps
daa
or
mov
or
cmps
daa
or
ja
or
addr16
or
ja
or
movs
iret
(bad)
std
addr16
or
aaa
daa
or
daa
daa
or
aaa
daa
or
daa
daa
or
mul
(bad)
std
ja
adc
pop
jae
shl
mov
mov
neg
and
add
sub
sar
sti
dec
jo
cli
movaps
add
sbb
sub
(bad)
jmp
mov
ret
mov
add
call
add
push
inc
dec
dec
add
push
arpl
add
es
arpl
add
es
and
add
inc
dec
dec
push
daa
es
and
pop
not
push
jecxz
dec
or
adc
icebp
add
add
jecxz
dec
or
adc
icebp
ret
imul
jecxz
dec
or
imul
mov
adc
icebp
ret
imul
mov
adc
icebp
test
xor
mov
lahf
fdivp
inc
adc
push
mov
repz
cmp
add
add
retw
xor
sub
mov
add
inc
add
(bad)
std
jns
jno
outs
cmp
xor
fs
mov
int3
shl
xchg
fs
mov
cmp
pop
daa
mov
rcr
fsubr
shl
sti
jne
arpl
jl
cld
jmp
push
mov
add
add
scas
jg
jl
push
div
sti
add
sbb
sbb
mov
push
push
pop
icebp
cmc
pop
or
sub
iret
push
out
in
xchg
or
addr16
push
lahf
or
std
push
fs
or
adc
push
out
xchg
mov
adc
pop
sub
iret
inc
add
add
mov
aad
fdiv
xlat
call
add
xor
fistp
rcl
sbb
add
push
repz
xor
mov
sbb
test
pop
fst
cdq
sbb
mov
out
inc
stc
cdq
sbb
mov
add
sbb
inc
add
push
lahf
sub
jmp
fsub
and
sub
sbb
and
rcl
outs
dec
mov
popf
in
sbb
das
adc
or
inc
movs
rcl
add
out
xchg
jne
or
gs
test
das
add
pop
aam
fs
rcr
xor
pop
int3
inc
je
int
add
add
push
fsubr
push
aaa
adc
adc
cmp
sar
mov
xor
imul
push
pop
sbb
fsubr
sub
pop
rcl
sbb
fcmovu
repz
and
sbb
repz
(bad)
fistp
mov
add
add
out
push
fistp
and
inc
inc
add
jnp
and
loop
imul
sub
sar
xchg
sbb
lahf
add
sbb
xor
inc
mov
popf
sbb
inc
add
das
adc
add
inc
hlt
int
add
js
rcr
pop
sar
sbb
add
add
sbb
or
inc
das
add
or
inc
mov
fcmovb
iret
pop
xor
pop
int3
inc
movs
mov
sbb
call
fadd
cmp
scas
or
(bad)
test
rol
sub
xchg
xor
js
xchg
ins
das
inc
add
mov
sbb
add
add
push
sbb
xor
test
iret
push
out
sbb
sti
or
cld
jg
jno
cmps
or
and
je
ret
push
push
xor
sar
inc
mov
sti
dec
mov
stos
(bad)
jbe
mov
fisttp
scas
jmp
jmp
out
adc
jne
add
add
fst
aaa
scas
xchg
not
mov
js
adc
mov
sti
mov
xlat
dec
or
js
sbb
js
or
loopne
mov
mov
jb
sar
sub
adc
shr
mov
sbb
fsubr
mov
mov
add
add
or
dec
mov
dec
or
mov
xor
dec
in
mov
inc
sbb
mov
loop
mov
dec
in
mov
xor
call
out
call
out
or
cmps
cmc
mov
daa
cli
xchg
fist
addr16
mov
idiv
cld
push
add
or
jno
int3
inc
fwait
cld
mov
xchg
add
add
dec
lock
mov
rcr
or
or
and
mov
jo
clc
imul
clc
div
jno
call
add
xchg
sbb
adc
mov
xchg
jbe
xchg
std
fwait
lock
repnz
daa
jl
sub
add
add
icebp
mov
lods
fwait
clc
test
xchg
mov
in
adc
xor
mov
setge
je
outs
pushf
or
mov
icebp
mov
mov
cld
push
rcr
jae
clc
xlat
sub
rol
mov
push
sub
mov
hlt
sub
fadd
sysret
add
sldt
add
(bad)
iret
loop
mov
add
or
(bad)
iret
loop
test
add
mov
pop
dec
shl
(bad)
mov
xor
mov
add
das
shl
loop
(bad)
cld
add
je
loopne
fisttp
push
add
in
jecxz
(bad)
or
dec
loopne
dec
clc
repz
retf
add
add
dec
sar
dec
clc
mov
je
or
call
addr16
xchg
ficom
int
or
addr16
or
out
mov
aaa
sti
xchg
fst
neg
inc
rol
jae
clc
std
mov
dec
pop
test
std
push
and
mov
add
add
jecxz
rsm
and
add
int
jns
aaa
push
xor
or
in
or
outs
mov
dec
ins
mov
mov
adc
dec
mov
or
hlt
mov
fsub
lock
or
mov
icebp
jmp
loope
jae
ror
add
add
add
jo
clc
btr
cmp
mov
(bad)
jns
xchg
jb
inc
jge
adc
jno
fsubr
dec
lock
mov
cmp
outs
ds
and
adc
and
jl
jno
outs
xor
dec
mov
mov
retf
lock
pop
aaa
dec
js
movaps
add
add
or
dec
xchg
cwde
mov
sti
and
sub
jno
jg
xchg
outs
push
hlt
mul
add
jne
std
pop
(bad)
das
ror
in
mov
pop
inc
out
mov
cwde
mov
jnp
mov
scas
out
dec
mov
fwait
or
push
outs
retf
sub
push
imul
imul
outs
call
add
ins
jmp
out
adc
pop
jns
hlt
sahf
adc
jmp
adc
std
xchg
mov
mov
fiadd
ret
fistp
pop
int
jge
hlt
jle
xchg
and
jmp
sbb
and
inc
add
xchg
xor
mul
fiadd
add
or
or
add
add
cmc
cld
push
dec
or
adc
sub
sbb
add
or
in
call
push
scas
xchg
outs
mov
inc
add
mov
jb
or
cmps
aam
scas
pop
mov
mov
sub
iret
xor
fld
or
jo
cmp
xor
in
add
add
and
add
aad
rol
ror
jb
test
lods
adc
test
hlt
mov
jnp
aad
neg
loop
dec
icebp
pop
ret
jns
pop
push
das
inc
test
dec
xchg
adc
jo
test
dec
add
popa
lods
inc
fmul
add
mov
jb
jo
push
shr
add
add
pop
mov
mov
add
xchg
inc
fdivr
out
inc
mov
jg
ret
aaa
enter
inc
loopne
ret
jne
jno
xor
mov
or
mov
gs
push
add
in
add
in
add
fadd
cmp
popf
or
xchg
dec
fcomp
dec
aaa
enter
add
mov
mov
xchg
outs
or
repz
test
hlt
mov
out
scas
(bad)
idiv
fcomp
or
rcr
mov
popa
push
data16
stos
or
mov
mov
jb
into
sti
cmp
jb
call
add
js
cmp
pand
or
mov
cmps
or
ror
inc
cmp
mov
cmp
dec
fs
inc
jl
into
inc
in
inc
mov
jg
rol
dec
add
fidiv
mov
fist
add
cmp
xor
clc
fbld
stc
sub
outs
add
movs
fsubp
adc
stos
mov
sub
cld
sub
ja
add
out
mov
mov
and
mov
std
test
jb
(bad)
mov
and
je
and
cmp
jno
jne
push
add
fnsave
add
add
addr16
pop
out
jge
and
add
cmp
xchg
mov
fs
mov
mov
mov
test
mov
mov
aas
or
mov
daa
inc
mov
pop
fs
mov
mov
clc
or
push
in
xchg
(bad)
test
arpl
add
add
dec
dec
mov
pop
mov
inc
out
xchg
popf
mov
mov
xchg
sub
add
not
jg
mov
adc
mov
push
das
(bad)
cwde
sti
inc
cmps
inc
xchg
cmp
rcr
push
xlat
je
dec
dec
inc
ud0
sbb
add
add
popa
movs
je
inc
mov
xor
push
add
mov
dec
push
lds
jmp
aam
xor
xchg
int3
mov
mov
sar
push
shr
rsm
add
inc
push
mov
sti
and
test
out
xchg
repz
or
rcr
jg
jl
jno
add
add
pop
test
cmp
push
enter
das
rcr
adc
jne
loop
jmp
xchg
mov
call
push
inc
xchg
arpl
sub
push
sar
mov
inc
mov
fst
cmp
sbb
and
loop
jns
test
cmp
pusha
jns
add
add
js
add
fwait
lods
jg
in
loopne
or
pushf
push
out
add
pop
inc
mov
ret
pop
sbb
add
mov
pop
push
lods
sub
std
add
retf
fisttp
mov
push
lods
loopne
inc
xor
gs
xchg
sbb
dec
dec
pop
lds
inc
test
sahf
mov
xor
test
pop
inc
mov
in
ror
lea
push
aas
add
sub
lods
mov
xchg
cld
pop
inc
adc
add
frstor
sti
and
add
xor
test
sti
and
sar
xchg
xchg
cmp
sti
and
sar
test
dec
inc
add
mov
dec
inc
add
add
add
(bad)
and
adc
js
cmp
sti
and
repz
jo
test
sti
and
sar
push
nop
test
sti
and
add
and
inc
inc
add
(bad)
sbb
js
sti
and
adc
rcl
cmp
sub
hlt
xor
sbb
add
add
jnp
add
mov
sbb
lea
or
icebp
outs
call
push
and
sbb
mov
push
dec
push
sub
movs
xor
sbb
fsubr
fcom
call
sbb
lea
push
sti
push
loope
mov
add
add
sbb
sbb
and
xchg
imul
jmp
sti
push
jl
rol
cmc
(bad)
fldcw
shl
mov
push
int3
inc
add
in
(bad)
sbb
or
stc
xlat
push
jl
add
jmp
push
sar
mov
push
mov
add
add
add
sbb
and
fld
cmp
fist
push
mov
mov
sbb
ja
inc
and
call
pop
scas
sbb
out
add
adc
test
sub
push
call
sbb
int3
xor
repz
add
adc
and
mov
or
add
in
adc
xchg
inc
je
mov
in
shr
xchg
inc
je
mov
in
adc
mov
mov
in
adc
mov
mov
push
add
add
iret
ja
inc
hlt
mov
push
repz
sub
xchg
imul
or
in
push
call
sbb
and
daa
sbb
sub
into
pop
repnz
jl
add
je
fcomp
mov
jg
or
int3
int3
and
int3
int3
out
pop
push
mov
push
inc
or
add
add
fst
cmp
inc
xor
ret
adc
int3
add
int3
int3
loopne
int3
int3
scas
pop
push
mov
(bad)
and
mov
xchg
outs
mov
push
repz
je
mov
adc
xor
int3
int3
mov
and
in
adc
fwait
or
ret
fwait
add
fldenv
push
(bad)
jmp
xlat
test
dec
dec
clc
stos
call
lahf
int
add
adc
int3
add
int3
and
int3
and
int3
scas
and
mov
push
inc
or
in
(bad)
sub
xchg
inc
xor
dec
add
xchg
add
je
xchg
popf
lea
(bad)
mov
fild
or
add
add
add
ret
or
add
pop
int3
int3
mov
and
or
(bad)
stos
sti
xchg
inc
mov
shl
mov
iret
push
push
inc
or
sbb
and
mov
test
(bad)
call
sub
xchg
jb
ret
fimul
inc
jmp
es
add
jecxz
jmp
xchg
sub
add
stos
dec
jno
fwait
in
cmp
scas
add
movs
xor
inc
shl
int3
aam
add
mov
pop
pop
call
push
call
daa
sbb
mov
inc
cmp
enter
lods
or
mov
sti
jne
and
mov
and
je
les
add
add
sbb
jne
mov
jne
xor
aaa
je
jg
pusha
loope
adc
cmps
push
call
sahf
clc
push
mov
in
jmp
lods
push
pop
jae
pop
ret
lahf
and
push
mov
sar
add
in
push
les
add
ror
or
loope
jno
int3
test
add
sti
jne
xor
test
leave
sub
movs
jo
add
inc
inc
fadd
scas
adc
inc
fiadd
call
mov
mov
fld
pop
stos
push
dec
hlt
int3
xlat
call
inc
imul
call
int3
lahf
and
add
add
add
pusha
add
pop
pusha
or
sbb
add
outs
and
xchg
mov
jge
add
pop
pushf
add
retf
cmp
test
add
in
jle
inc
js
shl
push
mov
xlat
cmp
les
add
dec
fdivr
(bad)
stos
sar
inc
add
add
(bad)
mov
fild
mov
mov
dec
sub
add
pushf
fwait
add
and
dec
add
popf
or
outs
xchg
push
mov
mov
sub
cwde
sub
mov
push
mov
sub
sub
mov
clc
sti
sub
movs
test
add
add
add
push
jne
add
add
cmp
les
add
pop
(bad)
jmp
ret
pop
scas
xor
add
pop
je
xor
cld
daa
mov
add
ins
add
push
ret
fstp
cdq
fstp
ret
outs
xchg
push
mov
sub
inc
mov
add
add
cmc
or
push
mov
ss
and
mov
push
imul
cwde
call
fiadd
pop
ja
(bad)
push
pop
test
adc
xchg
repz
ins
fnsave
xchg
mov
xor
push
arpl
mov
sub
jmp
test
add
add
pop
ret
mov
jns
in
mov
push
push
(bad)
nop
cmp
js
xor
cld
or
call
dec
jmp
sti
es
cmp
(bad)
iret
(bad)
xor
or
cmp
jecxz
push
mov
add
mov
jg
push
dec
test
cmp
les
add
add
mov
mov
sub
push
adc
add
jns
call
call
jmp
and
stc
mov
fld
mov
push
cmp
fnstsw
hlt
fadd
mov
(bad)
fisttp
call
pop
cmp
hlt
pop
stc
lea
in
cmp
adc
mov
cld
(bad)
mov
add
add
movs
add
scas
movs
outs
pmulhuw
add
adc
xchg
call
jmp
pop
popf
arpl
je
lahf
cli
add
cwde
mov
daa
mov
call
fadd
mov
popa
ret
add
je
cmp
push
mov
outs
and
add
pmaxub
rcl
leave
cmps
push
(bad)
push
dec
in
and
add
push
mov
pop
lds
shr
inc
movs
ds
test
data16
sub
or
xor
repnz
addr16
test
inc
je
mov
fs
adc
xchg
(bad)
cmp
in
ror
in
add
add
jns
sti
push
mov
or
add
js
add
or
cmp
and
mov
jns
in
dec
mov
test
and
mov
(bad)
push
outs
jl
inc
fdivr
test
ret
das
lea
sbb
cmps
fiadd
mov
(bad)
popf
test
pusha
mov
add
add
add
cmc
dec
(bad)
stc
stos
std
push
cmc
add
nop
xor
fs
sbb
mov
mov
mov
call
push
xor
(bad)
inc
inc
test
(bad)
mov
lea
lods
outs
fscale
adc
(bad)
jmp
sar
repz
dec
pop
nop
clc
ror
add
add
ror
inc
xchg
dec
pop
mov
data16
mov
(bad)
call
pop
inc
add
adc
idiv
repz
add
call
ror
fst
std
add
(bad)
cmp
add
jmp
(bad)
add
add
add
out
pop
xchg
mov
mov
inc
add
sub
ret
test
fprem
mov
shl
fidiv
repnz
out
sbb
add
adc
adc
in
adc
add
pop
js
cli
repz
ret
inc
test
add
add
and
call
lods
arpl
je
sub
loopne
(bad)
jb
fadd
pop
push
ja
(bad)
adc
push
push
fs
call
test
or
xchg
inc
hlt
ja
inc
in
mov
fs
pop
cmp
les
add
pop
addr16
jae
add
push
call
add
add
dec
push
inc
in
lahf
jne
fisub
jmp
pop
in
call
mov
cld
jmp
in
adc
dec
jmp
fsub
sub
add
dec
loopne
(bad)
adc
test
into
and
xor
icebp
(bad)
cmp
pop
jmp
mov
pop
jmp
add
fadd
ret
pop
fsubr
xor
add
dec
push
add
addr16
in
pop
or
cmp
jbe
inc
mov
pop
push
jbe
inc
movs
ficom
sbb
add
inc
cld
add
cld
jmp
in
adc
add
add
and
ret
sub
or
add
add
add
and
push
mov
mov
cmp
add
cdq
out
lods
movs
fld
push
jne
dec
in
push
call
sbb
sbb
or
outs
push
cmp
jmp
loope
clc
mov
or
sub
call
out
test
add
mov
inc
sub
addr16
leave
dec
loopne
(bad)
xlat
out
movs
sbb
scas
push
jb
(bad)
mov
pop
xor
jmp
add
ror
call
sub
inc
fld
mov
je
and
fadd
pop
fucomip
push
call
sbb
fadd
add
add
add
fadd
add
pushf
pop
pop
ja
or
lods
sbb
add
test
and
cmp
pop
mov
movs
sbb
fs
add
fadd
push
stos
sub
int3
je
call
pop
lds
pushf
jmp
sar
mov
stos
xor
call
mov
add
cwde
mov
popf
jbe
add
jns
in
add
jecxz
add
outs
les
xlat
or
call
jnp
adc
mov
data16
icebp
push
sbb
rol
fwait
push
mov
add
adc
push
daa
jo
dec
je
add
sub
call
ins
fild
add
sbb
call
test
ret
sub
in
mov
(bad)
jne
xor
mov
call
pop
lds
xchg
sbb
inc
in
outs
inc
in
mov
push
inc
loopne
pmulhw
scas
rol
or
push
or
in
add
in
add
movs
daa
push
push
add
add
out
jmp
sub
sar
add
cmp
aam
popf
and
shl
mov
cmp
inc
pop
sar
or
cmp
jo
lods
(bad)
fcom
push
or
and
test
mov
je
jb
or
push
add
cmp
(bad)
sbb
outs
test
cli
jmp
add
add
in
loope
fmul
mov
push
add
cmc
mov
stc
call
loope
clc
xchg
std
adc
ins
call
test
add
jns
inc
je
add
ficomp
and
push
adc
add
je
add
sub
ja
jmp
sub
sbb
add
or
push
in
mov
jge
test
js
std
dec
sub
pop
mov
aam
add
sub
pushf
aaa
fadd
pop
jge
fld
inc
or
dec
pop
in
rol
mov
outs
leave
cmp
lds
jne
inc
fmul
aas
movs
fadd
mov
add
add
dec
mov
mov
push
jo
fwait
leave
std
sbb
cmp
cdq
aam
lds
add
sbb
adc
and
call
sub
or
call
repz
and
aaa
stos
ins
pop
hlt
fist
int3
xor
fist
sbb
add
push
push
in
add
add
add
mov
lock
mov
je
das
jmp
pop
sub
les
pop
mov
or
jl
inc
add
dec
cmp
fs
dec
in
int
mov
(bad)
xor
(bad)
push
xchg
and
lds
addr16
pop
xor
lds
cmp
add
jnp
push
push
imul
adc
leave
inc
add
add
shl
inc
lock
jne
ins
add
mov
loopne
ret
sub
or
ficom
push
je
call
sbb
or
(bad)
jae
(bad)
call
(bad)
call
sahf
fiadd
pop
addr16
(bad)
push
out
arpl
icebp
sub
or
arpl
clc
xor
or
add
add
pop
ins
mov
dec
push
bound
add
or
ins
push
jo
cld
pop
adc
mov
add
fimul
mov
sub
jo
mov
inc
inc
add
pop
or
hlt
ud0
dec
jo
xchg
mov
pop
mov
add
add
add
ret
pop
and
push
mov
pop
in
adc
stc
or
mov
jmp
mov
fld
add
lea
sub
pop
add
lds
in
mov
lahf
adc
cmovnp
inc
adc
jge
fbstp
sub
add
add
push
lock
pop
mov
add
mov
mov
add
cdq
aam
test
jge
pop
sbb
add
call
xchg
ja
(bad)
sar
adc
mov
add
adc
and
add
add
add
cdq
aam
cmc
(bad)
fadd
sub
jmp
add
mov
jmp
in
cmp
je
outs
sub
adc
leave
cmps
push
(bad)
push
pop
ja
cmp
mov
adc
jmp
lods
inc
add
pop
add
movs
sbb
push
jp
or
push
pop
add
add
daa
push
(bad)
push
push
in
fs
or
sub
call
fist
icebp
cmp
adc
adc
push
sahf
sar
jne
jae
pop
xor
add
movs
xchg
add
hlt
push
dec
or
and
adc
je
push
dec
clc
ja
jo
popf
mov
in
add
fld
add
add
or
mov
mov
cmc
pusha
loope
icebp
mov
or
stc
jl
call
jl
mov
pusha
in
adc
out
or
sub
mov
fild
add
push
push
add
or
add
add
cmps
xchg
or
enter
add
fld
mov
adc
pop
in
add
jmp
dec
clc
addr16
jo
popf
mov
in
xor
outs
adc
push
or
mov
mov
in
add
ret
push
loopne
jne
jno
push
jnp
pop
mov
int
out
sbb
or
pop
shl
and
add
add
mov
fild
add
mov
jb
jo
jae
fs
jne
pusha
jmp
mov
sahf
loop
out
mov
mov
adc
mov
sbb
mov
pop
xor
retf
clc
pop
sub
jecxz
pop
addr16
jmp
or
xchg
mov
add
pop
in
inc
xchg
add
pop
fadd
fistp
les
cld
push
xchg
jne
push
jno
sbb
in
xor
jecxz
jmp
ret
pop
pop
imul
std
jae
ret
fs
pop
out
(bad)
push
outs
mov
add
in
out
adc
add
in
call
mov
arpl
add
ja
cmp
addr16
sbb
inc
inc
movs
ja
cmp
cld
(bad)
jmp
or
pop
in
sti
cld
mov
dec
mov
add
cmp
mov
movs
adc
add
mov
and
push
sbb
add
add
je
outs
sbb
fisttp
jbe
scas
ret
cmp
inc
hlt
ror
jmp
push
jo
pop
test
int3
(bad)
aaa
add
add
data16
(bad)
std
push
jmp
test
push
jbe
call
cld
add
sbb
adc
add
xchg
js
pop
ret
in
add
add
sbb
add
imul
fsubrp
xchg
inc
fiadd
mov
int3
and
pop
sar
or
xor
jbe
pop
and
jg
xchg
(bad)
or
xor
hlt
push
push
call
dec
mov
jmp
pop
mov
pop
pop
les
fimul
add
add
add
(bad)
push
push
hlt
or
mov
add
sbb
sbb
cmp
jo
cmp
inc
sub
popa
jmp
push
add
mov
dec
pop
add
push
ret
scas
stc
call
inc
add
js
xor
add
(bad)
add
lds
pusha
(bad)
inc
add
add
pop
inc
loopne
enter
cdq
mov
pushf
inc
cld
shl
mov
in
mov
call
popf
fdivrp
call
mov
add
sub
pop
add
pop
and
push
inc
and
mov
aaa
and
jne
jg
and
push
add
jg
add
add
stc
jg
sti
and
inc
pop
aam
and
jmp
inc
dec
shl
retf
pop
cwde
push
and
xchg
arpl
sbb
arpl
sbb
arpl
inc
push
shl
fdivr
or
inc
mov
or
cli
je
dec
and
std
or
repz
std
or
add
std
add
push
mov
add
fs
data16
in
inc
or
jne
push
xchg
arpl
sbb
sar
sar
dec
mov
rol
movs
pusha
add
hlt
fcmovbe
out
jo
shl
cmps
stc
or
pop
mov
or
push
add
add
jmp
cld
or
inc
mov
punpckhwd
mov
mov
daa
pusha
add
cld
or
(bad)
mov
sbb
and
push
push
and
dec
aad
es
rol
and
push
out
mov
sti
add
loope
and
add
xchg
int
loopne
int
jno
(bad)
pop
aaa
push
movs
and
fld
add
and
pop
cwde
xchg
push
mov
and
mov
je
ds
add
jae
les
mov
jne
rcr
push
out
xchg
mov
fdivr
into
mov
mov
add
add
fdiv
add
push
in
jmp
push
mov
(bad)
sbb
jnp
out
cld
add
jp
add
pop
jo
xchg
add
movs
cwde
mov
mov
shl
je
pop
in
retf
xchg
jmp
adc
scas
jns
push
add
add
sub
(bad)
sub
(bad)
pop
addr16
aas
(bad)
repnz
ret
icebp
sbb
pop
adc
ret
fs
pop
dec
cdq
addr16
cwde
inc
inc
je
and
fadd
dec
fs
mov
dec
dec
or
or
in
lods
sbb
mov
mov
popf
sbb
mov
into
addr16
add
add
lds
fild
add
inc
fdiv
fisttp
cld
adc
int3
mov
add
push
call
daa
cld
in
pop
int3
or
mov
loopne
or
sti
cld
add
and
js
enter
and
(bad)
jns
jmp
add
add
add
add
imul
or
add
in
cld
push
scas
cld
adc
jo
add
adc
jns
std
jne
xchg
rcl
push
push
add
loopne
gs
add
movs
inc
loopne
sti
cld
mov
jnp
inc
mov
jne
arpl
(bad)
fldcw
jo
adc
in
add
add
cdq
js
loopne
fiadd
add
sti
cld
(bad)
rcl
call
int3
add
add
add
shl
add
dec
jo
repz
add
ret
scas
push
push
mov
arpl
je
add
mov
jo
fmul
lds
fwait
mov
sbb
add
push
push
add
add
mov
mov
pop
mov
aam
add
mov
fld
add
call
pop
lds
movs
(bad)
jmp
xchg
ja
pop
outs
mov
ror
(bad)
mov
fld
loopne
and
cmp
out
mov
(bad)
jne
bound
adc
adc
mov
push
call
add
xor
ret
ret
lahf
dec
push
mov
pop
mov
popa
inc
adc
add
pop
fsubr
call
jmp
adc
mov
add
xchg
mov
data16
(bad)
add
mov
jmp
pop
pop
cmps
mov
push
in
call
pop
dec
inc
adc
rol
add
cmp
xor
and
call
popf
pop
mov
test
sar
imul
outs
mov
in
add
sub
adc
or
pop
mov
sub
out
push
in
xor
lea
inc
in
mov
jne
add
jmp
sbb
add
add
fwait
in
add
pop
stc
call
fistp
mov
xor
lahf
and
addr16
shr
mov
dec
fild
add
jmp
push
iret
add
repz
adc
imul
(bad)
pop
div
push
mov
and
cmp
push
xor
add
add
rcl
mov
fiadd
outs
fcmovu
add
mov
push
jmp
pop
ret
and
dec
adc
and
pop
icebp
mov
in
mov
mov
clc
push
scas
dec
call
call
or
jg
ficom
daa
cmp
out
and
scas
cmp
add
add
mov
cmp
mov
cmps
mov
ret
imul
or
sub
cdq
adc
stos
das
add
add
addr16
and
scas
xor
clc
fist
das
dec
push
mov
bound
adc
dec
inc
xchg
(bad)
cld
inc
add
add
mov
xchg
inc
je
ret
jne
int3
and
int3
and
int3
test
cdq
push
push
je
push
push
je
mov
ss
add
mov
ret
test
mov
or
addr16
cld
mov
mov
je
pop
ret
add
cmp
rol
add
aaa
movs
and
cwde
int
sbb
int3
jmp
cwde
push
push
hlt
out
push
push
hlt
out
mov
pop
inc
add
fld
rcr
ret
test
mov
mov
(bad)
(bad)
push
rcr
mov
lea
add
push
(bad)
and
add
je
add
add
sahf
fiadd
je
dec
mov
jne
in
add
fild
add
pop
movs
and
fild
add
fdiv
add
call
popf
add
adc
add
sbb
test
test
(bad)
add
mov
je
push
enter
mov
add
or
sub
daa
pop
cmp
scas
repnz
setns
lea
mov
sub
neg
cld
scas
repnz
aas
cwde
ret
jmp
in
ja
and
pop
mov
mov
jno
loopne
mov
inc
clc
pop
sbb
pop
cmp
or
inc
hlt
movs
push
xchg
add
sbb
push
add
add
xchg
retf
cdq
jp
jne
pusha
adc
add
mov
cld
mov
jmp
jo
ror
cld
jmp
add
add
xor
mov
xor
mov
(bad)
(bad)
loopne
jne
or
push
xchg
mov
push
mov
out
dec
push
cmp
mov
fadd
add
add
add
ss
stos
sbb
mov
in
jo
or
(bad)
stc
scas
in
jae
add
mov
repnz
in
mov
add
je
pop
cld
in
mov
add
add
sub
xor
add
push
push
jnp
test
mov
lock
jo
add
add
adc
adc
mov
inc
push
and
add
mov
fs
push
cdq
mov
cmp
in
push
shl
or
test
mov
add
gs
jae
or
movs
gs
xchg
int
dec
mov
or
push
xor
push
out
push
sub
jmp
add
jl
sti
jmp
mov
out
repnz
mov
xor
pusha
fdiv
cmp
lds
rol
dec
fadd
test
xor
popf
sbb
mov
das
inc
sbb
sbb
mov
mov
pusha
hlt
hlt
push
pusha
clc
in
pusha
cld
in
pusha
hlt
sub
add
add
xor
and
fs
fild
add
add
pop
sbb
mov
je
inc
xor
fsub
add
xor
test
jmp
inc
pop
bound
jmp
sti
enter
cld
add
fild
add
add
mov
sbb
add
add
hlt
fiadd
jmp
sub
add
in
mov
add
ret
outs
gs
mov
jmp
in
scas
xor
push
mov
jae
mov
das
inc
add
js
je
das
inc
or
pop
and
xor
add
out
or
push
ret
jo
jno
out
out
or
xchg
cmps
push
add
add
adc
adc
arpl
sbb
sbb
and
mov
je
arpl
adc
or
add
dec
fsub
pop
fadd
and
fld
call
ins
sbb
pop
loopne
bound
shl
inc
ret
dec
add
out
push
pop
(bad)
or
pusha
xor
inc
(bad)
jne
push
jge
je
mov
repnz
aas
cdq
adc
adc
mov
cmp
and
or
sub
xor
sbb
dec
fdivr
repz
add
cmp
call
mov
sbb
pop
adc
(bad)
push
mov
xor
sub
fadd
mov
add
je
inc
add
pop
sub
fs
mov
fadd
mov
not
out
push
push
mov
dec
imul
fmul
add
mov
or
repz
inc
add
add
add
add
xor
add
mov
jmp
in
stos
inc
inc
sub
fisttp
cwde
in
add
inc
xor
hlt
fisttp
cwde
in
add
lahf
jmp
mov
add
movs
inc
add
in
fstp
icebp
clc
mov
shl
add
cdq
push
pop
pop
lea
add
add
out
jmp
add
add
es
push
out
push
sub
inc
inc
lds
fiadd
mov
es
or
sbb
mov
cmp
imul
dec
or
inc
cld
cwde
aas
add
hlt
fiadd
call
hlt
fdivrp
jne
in
std
jne
inc
outs
outs
in
mov
das
jmp
fs
fild
add
add
add
fs
fiadd
add
pusha
and
jmp
push
in
xchg
inc
mov
(bad)
mov
pusha
mov
cld
mov
ret
movs
retf
xor
add
rcr
or
retf
addr16
push
mov
mov
push
imul
add
add
lock
(bad)
jmp
hlt
fs
fld
add
pushf
push
rcr
xchg
sub
push
push
sti
and
mov
xor
in
inc
lock
(bad)
(bad)
jmp
pusha
mov
enter
fld
ret
mov
std
xor
shr
or
sti
and
ja
push
mov
add
add
jmp
add
push
mov
test
pusha
jo
jmp
cld
call
pusha
dec
hlt
fadd
add
and
hlt
dec
push
or
in
add
mov
pop
push
cmps
pop
dec
lock
or
mov
xchg
pop
(bad)
(bad)
aas
mov
xor
scas
in
pop
in
xchg
pop
dec
add
add
and
fcomp
xor
push
inc
cld
fcmovbe
mov
push
cmp
data16
in
push
fadd
test
mov
shr
fcom
cmp
xor
or
add
pop
test
jge
fscale
rcr
popf
test
(bad)
jmp
sar
add
add
rcr
mov
pop
dec
nop
clc
jno
(bad)
inc
dec
in
std
xchg
pop
arpl
mov
test
(bad)
dec
dec
mov
data16
mov
(bad)
inc
push
jo
rcl
call
adc
add
add
adc
cld
mov
add
or
mov
pop
add
sbb
fiadd
jmp
or
call
push
xor
pop
(bad)
push
adc
adc
pop
xor
call
pop
(bad)
call
push
sub
pop
(bad)
push
add
pusha
xchg
sub
add
imul
inc
add
add
push
jo
fist
add
fld
in
ret
imul
mov
xor
cmp
js
xor
cdq
mov
add
shr
cmp
call
sbb
add
in
imul
adc
ins
add
mov
shl
jne
mov
iret
add
add
pushf
pop
(bad)
dec
add
mov
les
fst
adc
add
mov
pop
(bad)
call
xor
pop
out
push
rol
fnstcw
ret
cwde
popf
xor
mov
add
popa
pop
add
and
in
or
dec
and
add
movs
xor
repz
xchg
add
add
push
call
shr
add
fsubr
pop
mov
iret
xchg
aas
fnsave
shl
cld
jae
out
mov
fadd
jne
mov
scas
add
add
retf
xor
call
add
add
je
jnp
mov
lods
or
das
out
jne
add
add
mov
adc
clc
je
push
inc
add
sbb
dec
shr
xor
out
and
enter
movs
lds
sub
inc
sbb
mov
mov
test
js
sti
and
mov
outs
add
mov
shl
(bad)
pop
pop
mov
rol
add
mov
push
call
fild
test
add
or
add
push
jne
je
ror
sub
add
and
jp
in
inc
add
push
jne
je
rol
out
push
inc
add
pop
jne
xor
rol
in
test
add
in
mov
add
add
in
push
jmp
sbb
in
push
aas
mov
test
cli
push
xor
ss
cld
push
add
mov
jmp
pop
ror
je
shl
(bad)
fistp
add
jg
js
push
(bad)
cli
push
xchg
and
add
adc
mov
add
add
or
fiadd
add
hlt
shl
cld
jae
push
add
ret
pop
cmp
je
pop
pushf
add
add
ret
in
dec
or
or
add
(bad)
std
(bad)
repnz
add
xor
in
cmp
pop
cmc
push
mov
das
mov
add
pop
push
test
test
std
inc
pop
cmp
popf
stos
or
inc
and
add
call
xchg
shl
or
popf
aas
add
and
in
mov
lock
pop
int
hlt
pop
inc
jo
cli
cmp
jl
add
jo
push
clc
call
add
fadd
pop
das
push
jmp
ret
(bad)
shr
dec
dec
fadd
pop
idiv
push
inc
je
fs
and
inc
enter
adc
add
xor
mov
sub
push
mov
mov
inc
imul
add
jecxz
mov
in
or
add
fsub
daa
add
add
call
mov
adc
sub
jo
aas
popf
add
or
push
call
in
sbb
adc
(bad)
dec
cmp
pop
out
or
data16
add
inc
rcl
add
and
call
popf
dec
add
add
add
sub
outs
push
push
adc
inc
xor
add
call
add
adc
inc
xor
add
fidivr
mov
push
inc
add
xor
shl
call
cmps
push
jo
dec
xlat
call
pop
addr16
jo
push
aam
or
add
push
(bad)
push
pop
xor
inc
pushf
sbb
jmp
add
(bad)
frstor
pop
mov
sub
pop
aaa
adc
mov
mov
mov
inc
fld
xor
mov
fsubr
outs
cmp
xor
imul
addr16
fiadd
add
and
add
cld
test
fld
xor
(bad)
mov
add
add
lds
cmps
fld
add
push
dec
adc
pop
or
int3
shl
leave
jne
push
(bad)
(bad)
call
sub
cmps
sti
aas
in
pop
adc
out
dec
mov
loopne
push
cmp
jmp
stc
add
push
int
xor
sbb
push
and
add
add
cdq
add
cld
inc
inc
add
sbb
cmp
or
adc
mov
push
jae
sbb
jp
stc
cmp
test
div
cmc
mul
and
jno
push
inc
aas
ins
jecxz
add
fdiv
fdiv
cmp
lods
sbb
add
add
fs
add
push
int3
sub
cmp
cwde
iret
lds
icebp
add
add
sub
add
sub
test
loopne
add
mov
call
add
mov
call
add
data16
pop
cld
push
daa
stos
std
jne
adc
xchg
mov
push
leave
mov
add
add
sbb
retf
mov
fcomip
inc
jo
add
je
and
push
repz
add
movs
sbb
ret
jns
add
sbb
mov
add
jne
adc
jmp
aas
es
mov
xor
ins
or
or
or
xchg
call
add
add
outs
or
repz
add
fimul
jmp
scas
in
enter
scas
sbb
imul
fnsave
icebp
jmp
retf
repnz
mov
dec
mov
call
std
jne
movups
out
cld
test
and
aad
sbb
call
push
pshufw
mov
push
add
add
ja
jo
add
add
push
stos
in
adc
(bad)
pop
add
(bad)
(bad)
jg
hlt
pop
fnsave
pop
hlt
ins
mov
cmp
call
mov
inc
or
add
aam
jo
mov
imul
mov
inc
sbb
cwde
xor
lea
add
fs
and
fiadd
je
push
push
shl
push
adc
cld
push
or
ret
cwde
sub
add
std
jne
lods
std
jne
adc
add
test
rol
jne
shl
jmp
inc
retf
cmp
movs
xchg
aaa
add
fadd
ja
xor
adc
mov
mov
scas
or
imul
int3
mov
add
jl
loope
adc
lds
xchg
sub
add
pop
or
ret
enter
or
clc
ja
in
cmp
add
cld
mov
jne
or
or
mov
cmp
xchg
add
sbb
and
add
add
mov
xchg
or
xor
std
jne
or
int3
mov
icebp
mov
adc
sbb
cmp
jmp
or
adc
mov
jo
adc
inc
je
icebp
cmp
jne
rcl
(bad)
call
pop
jne
add
add
or
stos
in
aad
(bad)
pop
mov
stos
pop
pop
scas
fwait
clc
xor
xor
fist
or
ret
lahf
or
adc
adc
mov
retf
dec
xchg
or
and
mov
sbb
std
jne
or
jae
or
sbb
call
cmp
jge
fbstp
add
add
push
hlt
add
int
mov
sbb
int3
and
push
call
mov
sub
(bad)
aas
or
or
add
or
add
mov
add
xor
outs
pop
cmps
(bad)
enter
add
push
or
and
xor
jecxz
add
add
and
add
stos
loopne
add
mov
ror
and
push
div
movs
xchg
mov
cld
(bad)
das
and
add
outs
or
clc
add
lods
or
test
test
xchg
cmps
call
jbe
cld
(bad)
int3
test
cmp
ins
scas
cmp
inc
sub
inc
add
add
xor
mov
mov
pusha
ret
add
add
xlat
inc
(bad)
and
xor
inc
hlt
pop
inc
add
das
xchg
pop
fld
add
add
push
repnz
add
aam
sahf
cld
pop
das
xchg
sbb
add
neg
sub
jb
add
add
xlat
inc
(bad)
and
xor
je
inc
add
stos
cmp
mov
cmp
mov
cmp
mov
cmp
lods
test
mov
popf
mov
mov
ins
movs
(bad)
call
jge
(bad)
in
outs
fwait
mov
ins
fwait
(bad)
lock
fwait
mov
pop
fwait
(bad)
hlt
das
fwait
mov
sub
add
add
fwait
mov
cmp
fild
add
clc
dec
je
push
xor
lods
cmp
loopne
cmp
in
lods
cmp
jo
cmp
out
mov
rcl
mov
rcl
cwde
sti
xchg
mov
mov
inc
add
cdq
sti
xchg
add
add
push
inc
add
add
and
rcl
mov
cld
fwait
sbb
add
inc
mov
cmp
dec
imul
sbb
(bad)
and
mov
inc
je
inc
add
sbb
cmp
add
sbb
and
add
add
add
les
(bad)
add
lods
cmp
in
cmp
scas
cdq
add
cmc
cmovbe
cmps
xor
ror
hlt
or
clc
xrelease
(bad)
and
lea
hlt
adc
xchg
add
jne
inc
add
xchg
add
int
mov
pop
jmp
daa
xor
cmp
mov
mov
add
clc
pushf
cld
(bad)
out
xchg
add
movs
adc
add
jne
in
in
xchg
sti
add
sub
xor
push
push
repz
add
and
mov
xor
inc
add
cmp
inc
test
cmp
shr
add
cmp
cmp
add
mov
add
add
lea
pushf
mov
sub
pushf
mov
pushf
mov
sub
pushf
mov
pushf
mov
in
fwait
lea
out
fwait
mov
fild
add
fdivr
dec
imul
fmul
add
cmp
shr
pop
add
add
jae
rcl
(bad)
leave
aaa
adc
add
not
inc
add
add
xor
rcl
(bad)
xchg
adc
ds
sti
xchg
fmul
leave
ja
(bad)
push
pop
daa
push
push
push
or
nop
fdivp
add
jne
sar
add
add
and
adc
loope
jmp
add
call
cmp
jo
scas
sbb
jno
mov
jns
in
push
stos
(bad)
hlt
add
repz
call
outs
add
jne
ret
inc
jo
cld
jne
lods
std
adc
inc
pop
jmp
add
inc
add
fadd
or
pop
adc
mov
mov
(bad)
repnz
std
jne
xor
clc
lods
mov
xor
jle
cmp
rcr
inc
and
sbb
xchg
push
fadd
add
(bad)
fdivr
sar
mov
add
add
pop
stc
call
mov
and
push
mov
stos
push
xor
jle
(bad)
stc
(bad)
in
and
add
cmp
sub
dec
or
retf
ret
jo
cld
jne
stos
std
adc
add
add
add
cmp
or
int3
add
scas
sbb
add
add
xchg
sbb
mov
xor
aas
(bad)
(bad)
mov
dec
cld
jae
call
lods
and
push
push
mov
(bad)
mov
call
shl
pushw
sub
mov
push
ret
pushf
in
sbb
movs
pop
shl
sbb
jmp
pop
call
add
add
stc
pop
jo
cmp
mov
shl
jmp
stc
std
call
adc
jne
or
mov
std
call
hlt
std
(bad)
mov
adc
push
scas
xor
imul
mov
inc
inc
add
pop
pop
cmps
mov
(bad)
cmc
inc
fwait
inc
hlt
sub
rol
mov
add
add
stc
push
in
push
das
adc
push
in
inc
inc
add
aas
or
mov
mov
repnz
ret
push
(bad)
push
out
xor
push
mov
dec
xchg
pop
aaa
add
push
dec
add
and
mov
or
daa
pop
adc
push
pop
mov
pop
jmp
mov
je
stc
add
inc
in
add
jmp
je
mov
je
mov
int3
rol
push
ret
das
add
add
aas
loopne
add
push
dec
inc
xchg
mov
cdq
jecxz
lea
outs
add
je
jecxz
mov
xlat
add
div
xchg
add
add
add
jle
imul
fdivrp
(bad)
xor
add
sub
rcr
or
pushf
popf
aas
add
js
lahf
mov
jl
hlt
fnstsw
jecxz
jb
(bad)
mov
push
jo
int3
mov
mov
in
std
add
clc
add
pop
sti
push
mov
ja
cmp
add
inc
cld
jmp
(bad)
mov
or
jns
(bad)
sub
sti
jmp
jns
fnsave
mov
ja
add
ja
dec
or
jns
add
arpl
xor
pusha
cld
and
pop
call
add
pop
test
clc
add
test
in
add
add
sar
std
inc
not
add
fdivr
jne
mov
out
xchg
cld
jmp
fild
add
pop
or
mov
cld
push
push
add
hlt
xchg
je
dec
jl
mov
in
popa
jae
cld
outs
cmp
cmps
or
cdq
out
mov
pop
hlt
and
adc
fs
hlt
and
add
add
adc
cmp
hlt
and
adc
and
or
pusha
cmp
(bad)
sbb
ins
in
(bad)
jmp
push
mov
push
jae
inc
sub
call
mov
fdivr
or
addr16
mov
shl
add
sbb
daa
je
add
cli
imul
outs
out
add
add
repz
repnz
std
(bad)
fsubr
sbb
sar
or
mov
repz
int3
scas
stc
dec
mov
push
dec
or
fist
mov
add
mov
add
nop
mov
or
cs
in
add
out
pop
pop
cmps
pop
(bad)
push
outs
or
in
rcr
fdivp
xor
in
call
add
fild
or
xor
jp
out
mov
push
inc
sbb
mov
jno
stc
enter
sahf
hlt
rol
add
dec
or
stos
sbb
push
repnz
std
add
add
ds
add
loopne
add
imul
mov
add
add
add
mov
aam
stos
add
dec
lock
pusha
mov
add
fucomp
stos
in
fild
or
add
and
clc
dec
or
ins
ja
imul
call
xor
push
add
add
mov
pop
aam
adc
pop
in
jge
add
vpcmpeqd
inc
les
in
adc
aam
sub
mov
in
add
mov
hlt
fmul
add
int3
call
sub
fsubr
popf
mov
pop
add
add
daa
jae
add
inc
mov
nop
add
jo
repz
adc
cmps
call
adc
xchg
loopne
dec
and
jmp
push
inc
in
int3
(bad)
idiv
repz
adc
fadd
add
jo
lahf
jp
add
bound
(bad)
mov
add
add
push
pop
adc
fadd
pop
xchg
fdivr
sub
jno
dec
sbb
add
adc
add
mov
xchg
int3
or
dec
push
sti
out
movs
cld
add
add
pop
pusha
in
pop
pusha
cld
fs
jo
cmp
(bad)
test
fucomip
adc
fild
mov
call
ret
add
add
adc
or
mov
add
jo
or
jmp
shl
add
ins
fadd
add
ins
adc
in
dec
rcr
lea
mov
jnp
push
lods
addr16
sahf
cmp
call
cwde
shl
and
loope
add
add
add
out
enter
cmp
test
std
jmp
pop
jo
call
pop
out
or
pushf
aas
add
push
add
into
mov
mov
push
dec
add
adc
test
add
sti
push
push
dec
or
push
jo
fld
add
add
mov
add
aas
fisttp
js
push
jne
rcl
push
les
cmp
je
out
mov
in
pop
fld
pop
dec
pop
ror
sub
add
call
lods
inc
jg
xor
add
add
sub
dec
call
ins
inc
add
adc
add
add
add
push
js
outs
call
pop
nop
in
dec
fadd
pop
sbb
xor
add
dec
push
call
sbb
add
test
inc
or
js
add
adc
pop
jg
fmul
jl
sbb
push
iret
add
ins
stos
xor
add
add
pop
outs
cld
call
ja
push
sbb
arpl
and
push
test
stos
push
(bad)
jnp
add
sbb
jno
or
clc
push
inc
push
push
cmp
push
or
fild
call
sub
mov
push
int3
sub
mov
push
test
call
and
or
add
sbb
add
add
sbb
add
movs
inc
or
inc
mov
jmp
jmp
inc
and
mov
sbb
fistp
call
inc
sbb
fimul
add
sahf
shr
jbe
cld
out
cmp
lahf
fwait
or
and
add
je
dec
jg
add
cmp
xchg
and
xlat
mov
dec
dec
call
aam
jge
dec
in
jb
inc
mov
outs
xor
fild
ja
repnz
pop
and
jae
daa
lock
sbb
cdq
add
ret
lods
adc
shl
jmp
adc
cld
std
(bad)
jmp
clc
(bad)
repz
call
add
add
imul
rol
pusha
call
and
mov
test
cmp
sbb
dec
std
jne
icebp
push
call
and
les
jo
or
push
jmp
and
and
dec
mov
jne
dec
in
lea
mov
fld
jne
add
jns
cmp
pop
ins
add
add
jl
jo
out
(bad)
lea
sbb
(bad)
jmp
mov
add
in
and
mov
dec
dec
push
scas
lea
push
fadd
add
add
sbb
add
pop
mov
add
call
lea
dec
push
mov
xor
clc
mov
add
add
add
std
jne
and
adc
cdq
ins
std
jne
and
cmc
in
and
les
pop
ror
push
add
je
js
mul
repz
fadd
mov
inc
xchg
inc
push
call
sbb
mov
pop
lds
fwait
hlt
jae
cmp
add
add
jo
cmp
xchg
inc
mov
in
dec
in
loope
mul
mov
pop
les
je
mov
sub
in
and
sbb
and
loopne
jne
adc
adc
mov
adc
mov
add
out
fwait
clc
sub
cmp
mov
ret
add
add
scas
adc
add
sub
mov
adc
ja
aaa
xor
push
jnp
aas
jmp
push
cmovb
inc
or
dec
jmp
jge
int3
(bad)
inc
add
arpl
push
jge
ins
aam
cmp
sub
jmp
and
pushf
fld
add
cmp
cmp
add
add
adc
js
aaa
and
adc
jmp
pop
jnp
je
jg
fiadd
call
mov
mov
xor
add
test
(bad)
jmp
push
sysenter
fimul
add
fild
add
lea
hlt
frstor
cmp
adc
jp
add
ss
test
add
pop
fwait
cld
dec
(bad)
or
stc
mov
shl
add
sar
or
jns
lea
fucomp
add
or
add
jl
or
add
xchg
fld
call
repz
mov
and
add
sbb
add
add
shl
fnstcw
xor
mov
fs
mov
(bad)
(bad)
js
jo
sub
adc
aad
jecxz
add
mov
sti
(bad)
stc
ja
fs
or
pop
dec
cwde
dec
mov
pop
pop
not
mov
push
call
call
addr16
add
add
int
test
fiadd
add
lea
arpl
add
mov
jmp
sbb
inc
mov
jg
and
test
xchg
loopne
add
movs
in
push
ret
xchg
hlt
(bad)
cmp
push
call
addr16
adc
lock
repnz
add
add
movs
idiv
clc
mov
fild
add
mov
inc
adc
mov
add
sar
inc
sbb
call
frstor
and
mov
jo
mov
adc
push
xchg
sbb
popa
pop
add
call
std
dec
or
inc
hlt
add
add
hlt
pop
js
in
mov
and
inc
lock
rol
xchg
(bad)
jne
or
sbb
adc
sbb
mov
fsubr
dec
or
stc
ja
les
and
(bad)
(bad)
out
cmps
adc
jno
cld
jae
cwde
sti
push
int3
in
call
inc
push
adc
psubsw
add
xor
add
add
or
pop
xor
jle
xor
add
and
add
push
call
popf
pop
ror
pop
add
in
aaa
or
rcr
call
pop
dec
mov
mov
call
xor
add
xor
add
fimul
add
mov
call
inc
cli
std
(bad)
out
lea
repz
jne
or
or
in
out
call
pop
lds
rcl
(bad)
jmp
jne
jne
pop
js
and
jg
add
(bad)
jns
std
jne
or
clc
ja
jo
add
push
call
addr16
call
ja
xchg
add
fadd
je
add
add
adc
inc
mov
pop
pop
pop
mov
mov
mov
cli
and
or
psubsw
and
(bad)
stos
xor
pop
and
add
mov
sub
fsub
mov
add
mov
mov
mov
scas
mov
sbb
and
pop
mul
add
add
and
xor
and
out
jb
or
in
jg
in
add
xor
pop
jns
in
add
ins
cld
je
xchg
std
push
jae
adc
sbb
call
sub
push
cmps
or
cdq
ins
mov
push
test
xchg
sbb
cmp
loopne
xor
add
add
lahf
or
xchg
shl
pop
cmp
mov
fs
je
jae
jne
sub
jne
and
and
adc
jmp
pop
lds
jb
jo
ror
adc
cmp
jne
sub
inc
hlt
inc
pop
pop
push
sbb
cld
mov
push
mov
add
movs
into
jmp
xlat
lds
int3
sbb
sub
lods
into
test
faddp
add
sahf
pop
cmp
xchg
inc
xor
add
hlt
sahf
cld
(bad)
sub
inc
xor
lds
pop
add
loop
cld
(bad)
jmp
inc
hlt
sub
inc
in
mov
add
add
cmp
in
call
int3
outs
outs
add
pop
js
in
rcr
stc
xlat
je
int3
add
ficomp
mov
int3
das
and
and
div
push
or
bnd
(bad)
retf
sub
push
mov
inc
jmp
hlt
jne
add
shl
or
repz
or
int3
and
inc
add
add
repz
or
xchg
add
repz
or
or
leave
call
hlt
aas
or
sahf
add
pop
adc
hlt
fmul
call
pop
je
inc
int3
out
inc
in
addr16
je
repnz
add
fcomp
and
(bad)
call
pop
mov
sub
mov
mov
or
add
jg
add
add
jo
jge
call
stc
dec
cmp
je
(bad)
cmp
jb
add
inc
push
std
(bad)
mov
je
iret
inc
push
std
call
ds
xchg
push
mov
add
in
les
push
xchg
sbb
cmp
mov
sbb
hlt
cmp
pushf
push
push
add
sbb
das
sub
push
sub
adc
imul
in
or
add
jo
adc
sbb
add
ror
xor
mov
out
inc
clc
mov
push
stc
dec
(bad)
int
and
call
add
and
mov
aad
xor
loope
shr
or
call
mov
(bad)
inc
out
dec
push
imul
call
jmp
pusha
mov
int3
out
sub
or
xor
add
movs
je
pop
sbb
sar
jnp
add
add
fld
add
adc
add
(bad)
call
jnp
repz
outs
xor
ret
daa
sahf
or
cmc
out
add
jmp
mov
sbb
add
fdivr
repz
out
into
je
icebp
add
jmp
or
add
add
inc
and
sbb
int3
pusha
movs
int3
int3
and
ror
add
add
cmpxchg
rcr
dec
lea
pop
fadd
aaa
sbb
leave
das
sbb
xchg
cld
(bad)
mov
pop
in
sub
fld
mov
popf
gs
mov
mov
add
rcr
sub
xor
ret
ins
jecxz
(bad)
fsub
mov
mov
add
hlt
pop
enter
gs
(bad)
fucomp
xlat
bound
mov
add
in
out
rcr
mov
mov
fwait
cld
mov
fwait
cld
mov
lods
jmp
add
add
icebp
call
or
aas
add
sti
fadd
lods
call
and
rol
ret
fadd
loopne
add
inc
inc
lds
loopne
test
mov
fdiv
(bad)
(bad)
mov
ds
stc
fbld
mov
push
adc
cmp
push
inc
add
add
xchg
inc
fs
cmp
and
add
or
ffreep
call
pop
std
adc
in
sbb
in
mov
mov
pop
aaa
out
push
outs
adc
xor
fcom
jg
cmp
jne
pop
rcr
and
(bad)
push
inc
pop
add
add
ja
rcr
std
push
aas
add
dec
lods
sub
fcmovnu
cmp
retf
cwde
mov
sar
ja
push
fucomip
repz
push
in
push
mov
push
push
int3
or
call
pop
lds
test
or
pop
fwait
add
cmc
in
mov
pushf
inc
cmp
mov
dec
jns
cmp
cdq
outs
test
cld
dec
jmp
add
add
add
icebp
fistp
xor
xor
pop
mov
or
fwait
aas
add
push
call
sbb
in
or
das
add
test
aas
add
loopne
movs
out
in
sbb
adc
and
mov
mov
jae
mov
add
add
and
push
(bad)
push
add
add
add
scas
lods
jmp
mov
fld
pop
aaa
mov
int3
and
int
mov
test
add
mov
or
fsubr
das
loop
add
ins
or
sbb
popa
movs
and
or
iret
ss
add
add
cmps
and
or
cmp
push
add
in
push
mov
pop
and
nop
pop
sbb
loopne
pop
cld
ret
cld
push
je
scas
loope
ret
sti
je
popa
mov
fdivr
and
jmp
je
mov
xor
add
pop
rcr
popa
in
mov
add
add
mov
jmp
int3
mov
push
in
push
sbb
or
mov
adc
mov
das
adc
(bad)
mov
mov
add
cmc
cmps
add
je
outs
pop
out
enter
add
push
or
and
jae
add
mov
fild
imul
fld
add
xadd
add
add
pop
hlt
or
jle
and
lahf
cld
(bad)
outs
adc
sbb
outs
or
rol
lods
sbb
test
cmp
xchg
jae
xor
fwait
cld
(bad)
jae
xchg
cld
xor
add
xor
add
cmp
(bad)
or
inc
jne
inc
add
xchg
add
fstp
mov
add
add
ret
add
adc
cmp
std
and
jae
inc
xor
inc
add
or
inc
and
xchg
sti
sub
add
xchg
hlt
icebp
movs
add
and
call
jl
add
ja
cld
or
outs
mov
jge
inc
mov
inc
add
add
add
cmp
mov
aaa
cmp
jl
cmp
adc
cmp
jl
cmp
xchg
xor
add
mov
std
pushf
(bad)
in
pushf
mov
in
pushf
(bad)
call
fstp
lock
pushf
(bad)
lock
pushf
(bad)
hlt
scas
pushf
mov
lods
pushf
(bad)
clc
lahf
pushf
mov
popf
pushf
(bad)
cld
jno
xchg
add
add
hlt
fadd
add
fdivr
dec
inc
and
(bad)
clc
xor
add
xor
add
cmp
and
cmp
das
xchg
add
push
pop
ret
fimul
pop
repz
ret
fimul
xchg
fisttp
leave
daa
dec
inc
add
fisttp
xchg
push
inc
add
xchg
add
add
add
mov
and
cld
rcr
add
outs
and
mov
add
cmp
pop
cmc
cld
dec
inc
shr
mov
fild
(bad)
and
das
imul
sbb
cmp
or
mov
and
push
jnp
ror
cld
(bad)
js
cmp
add
add
mov
cmp
out
cwde
add
xor
mov
ror
sub
xchg
in
div
mov
push
xor
inc
add
push
inc
add
fisttp
add
aad
mov
lods
lahf
cld
repz
rcr
(bad)
outs
call
add
add
pop
call
mov
in
sub
sti
and
hlt
or
mov
(bad)
and
sbb
je
inc
add
cmp
jo
cmp
call
xor
add
xor
add
xor
add
xor
add
xchg
lea
xchg
mov
lods
xchg
lea
add
add
scas
xchg
mov
xchg
mov
ins
xchg
lea
outs
xchg
mov
cdq
mov
ins
cdq
lea
outs
cdq
mov
fld
add
shr
mov
fs
add
add
add
xor
add
cdq
add
adc
add
add
add
ins
jg
leave
aaa
push
inc
add
xchg
add
ss
inc
add
push
ret
xchg
add
ss
inc
add
fimul
leave
aaa
push
(bad)
push
jg
push
call
sub
inc
hlt
push
xor
gs
cld
(bad)
jp
shl
(bad)
cmp
jae
jo
add
add
jmp
pop
add
iret
mov
jg
mov
push
repz
test
jg
pop
rcl
(bad)
add
xor
mov
imul
je
movs
outs
or
or
jb
shr
test
adc
dec
mov
mov
xor
pop
sbb
hlt
xchg
cmp
std
(bad)
imul
mov
dec
retf
push
(bad)
mov
mov
shl
cld
mov
add
retf
in
mov
imul
shl
in
imul
jne
dec
sti
fwait
inc
fs
adc
mov
add
add
sub
hlt
dec
inc
or
push
(bad)
adc
out
cld
mov
mov
xor
repz
clc
xchg
sub
mov
imul
call
pop
pop
test
dec
cs
lock
add
add
mov
std
xor
add
add
mov
push
cmp
out
jo
test
popf
aas
add
lahf
std
je
mov
adc
mov
je
imul
add
sahf
(bad)
push
out
rol
add
pop
pushf
inc
and
std
adc
imul
mov
in
push
mov
mov
inc
pop
in
inc
add
add
add
movs
inc
mov
int3
jg
clc
jnp
je
sbb
js
clc
xlat
std
shr
fldcw
inc
sbb
std
shr
pop
std
add
jle
sbb
inc
sub
add
(bad)
stos
xor
int3
cld
add
and
and
movs
pshufw
add
imul
add
mov
or
fcom
push
movs
mov
dec
inc
ins
imul
mov
sub
(bad)
dec
aas
cld
xchg
movs
std
dec
mov
movs
fadd
xor
sbb
pop
call
dec
sbb
fdivr
add
je
ror
lea
cmp
mov
das
jo
call
rep
std
sar
xchg
fs
fadd
push
mov
out
movs
mov
popf
cmp
js
push
call
nop
mov
adc
sbb
out
adc
jmp
mov
mov
in
jb
(bad)
pop
dec
adc
xor
fwait
cld
add
add
repnz
mov
mov
xor
sub
adc
in
cld
pop
call
pop
ret
call
push
call
out
push
xor
out
adc
mov
xchg
sahf
data16
mov
xor
mov
pop
repz
push
add
and
inc
and
lahf
je
movs
push
jne
repz
add
add
inc
jg
dec
pop
dec
call
sub
mov
pop
ret
jae
push
mov
push
jg
sbb
call
frstor
sub
cmp
mov
sbb
rcr
call
popf
arpl
jmp
push
and
adc
push
mov
aaa
add
add
sub
in
out
(bad)
pop
mov
call
pop
cmps
jp
add
mov
push
repz
pop
fistp
pop
sbb
cmp
call
sub
adc
dec
sub
jmp
cld
(bad)
fst
inc
cld
mov
add
pop
(bad)
mov
push
mov
inc
add
add
xor
aas
add
jnp
sub
aas
add
loope
aas
mov
inc
lds
push
(bad)
push
add
add
std
call
retf
fnstsw
or
fadd
pop
cmps
fsubr
pop
fsubr
mov
mov
std
push
sti
int
mov
add
add
jmp
arpl
jne
xor
push
cmps
fadd
pop
das
or
add
inc
add
fwait
inc
je
std
(bad)
pop
mov
mov
(bad)
sbb
mov
pusha
cld
aas
add
mov
mov
and
push
(bad)
out
loopne
and
rol
xor
mov
add
add
(bad)
repz
hlt
(bad)
push
xor
je
addr16
or
cmp
add
shl
clc
xchg
sub
mov
mov
imul
loopne
(bad)
ins
cmc
fild
add
loopne
movs
or
hlt
in
cld
mov
out
dec
call
or
or
and
dec
add
add
shl
add
call
call
fadd
repz
add
(bad)
xor
(bad)
push
fadd
repz
add
aas
add
repnz
cli
ret
or
xor
xchg
loopne
in
loope
or
in
adc
jmp
fiadd
test
push
jp
cmp
xchg
dec
add
jmp
or
pop
repz
mov
sub
jne
dec
out
(bad)
push
out
add
(bad)
fisttp
push
pop
mov
or
jo
push
cld
(bad)
pop
jmp
adc
shl
push
or
cli
push
and
stc
dec
xchg
inc
in
dec
add
add
add
rol
xor
cli
call
lahf
data16
inc
movs
icebp
into
add
add
xchg
dec
fisttp
cmp
call
(bad)
je
add
fs
push
mov
or
sub
or
push
add
inc
xor
outs
cmp
call
pop
add
add
mov
sbb
add
add
lds
jno
ja
add
jg
loopne
sub
inc
add
and
push
add
imul
add
in
call
sahf
call
ret
mov
call
pop
mov
std
push
add
add
(bad)
sti
push
mov
stos
add
cld
(bad)
cdq
push
std
adc
mov
call
inc
jg
mov
std
push
lahf
sti
call
dec
fild
call
cmp
ret
add
hlt
fild
push
or
sahf
mov
sub
in
push
cmp
xchg
call
cmc
push
dec
xchg
hlt
js
call
in
jne
add
pop
daa
(bad)
std
push
push
std
jne
test
call
ins
inc
add
je
call
dec
sahf
data16
ror
(bad)
lock
(bad)
add
xor
add
and
ret
add
mov
aam
push
ret
outs
add
mov
dec
mov
jne
ror
test
add
jne
ret
add
mov
jb
and
das
add
sbb
and
dec
and
out
and
dec
shl
or
jmp
add
add
and
cld
dec
inc
xor
pop
xchg
push
add
pop
pop
pop
shl
test
rol
(bad)
mov
sub
and
jns
cld
out
(bad)
std
push
or
sub
add
jecxz
adc
pop
cld
call
jae
imul
dec
mov
add
adc
int3
sbb
add
add
and
pop
pusha
cld
je
fld
loopne
loopne
fisttp
add
fld
loopne
fld
test
dec
add
imul
(bad)
pop
outs
add
(bad)
je
add
cld
out
add
add
jmp
movs
cmp
outs
loopne
test
movs
cmp
push
sub
(bad)
cmp
mov
pop
hlt
cmp
add
hlt
push
into
add
cmp
cld
out
add
(bad)
(bad)
std
xor
int3
loopne
push
pop
lds
aas
aas
loopne
add
add
iret
ja
popf
sbb
mov
outs
fsubr
aam
push
jo
xchg
sub
mov
out
add
call
fdivr
out
add
call
add
call
js
mov
and
mov
fadd
jno
call
sbb
div
inc
add
add
inc
fld
or
push
push
mov
and
call
test
data16
repz
add
mov
pop
mov
mov
add
jle
call
addr16
or
mov
sti
imul
add
jmp
or
dec
(bad)
dec
fsubr
mov
add
add
inc
sub
inc
jnp
dec
adc
ficomp
je
in
scas
add
push
fsubr
cmp
je
in
mov
add
test
add
or
int3
cmp
add
or
(bad)
xchg
or
mov
pop
out
int
mov
add
hlt
ins
std
xor
jg
and
ins
and
inc
and
push
push
push
sti
mov
sub
dec
mov
call
add
cld
xchg
add
call
pop
mov
mov
inc
lock
rol
add
pop
mov
in
push
push
daa
pop
and
adc
cld
inc
add
add
iret
std
push
scas
in
shr
nop
ror
adc
mov
xor
cld
pop
mov
std
push
sbb
mov
addr16
out
test
cld
add
aad
add
push
rol
cmp
inc
cld
call
lock
add
add
je
sub
and
stos
xor
movs
adc
out
sub
cld
call
jmp
mov
xchg
inc
xor
mov
push
mov
jmp
je
jnp
rcl
add
add
add
fadd
and
add
je
add
jmp
add
out
push
ror
sbb
call
add
loopne
adc
push
sahf
data16
pop
inc
inc
je
cmps
(bad)
rol
xor
stos
enter
xchg
xor
jns
call
push
out
or
push
add
add
loope
std
jmp
mov
ret
xor
je
aas
add
or
outs
dec
fsubr
sahf
mov
(bad)
pop
pop
clc
cmp
sbb
add
mov
cld
jmp
or
fstp
add
ffree
push
cld
int
outs
sub
mov
in
adc
add
leave
shl
in
add
add
jg
(bad)
pop
int3
adc
call
or
or
fiadd
mov
inc
jmp
mov
jns
sti
call
add
or
add
add
inc
mov
sub
add
pop
cmps
(bad)
std
push
outs
icebp
mov
pop
xchg
pop
rol
cmp
or
push
call
dec
leave
shl
add
mov
repz
(bad)
(bad)
xor
mov
pop
push
ret
out
dec
add
pop
loopne
mov
mov
dec
push
adc
mov
sub
pop
test
sub
sahf
outs
jmp
popf
push
ret
scas
dec
and
in
adc
in
push
mov
xor
add
add
addr16
cld
rol
mov
dec
xchg
add
hlt
fadd
jmp
push
dec
lock
out
inc
mov
cld
repnz
add
fsubr
mov
xchg
mov
out
push
or
or
mov
test
idiv
dec
loope
aas
sahf
pop
dec
add
sbb
xor
cmp
add
add
adc
pusha
fiadd
out
pop
mov
inc
pop
dec
or
jmp
ror
ins
dec
add
loop
and
les
hlt
(bad)
or
ror
add
sbb
mov
fmul
cld
cmps
sub
mov
mov
push
push
add
xchg
add
not
or
int3
rol
add
(bad)
fiadd
(bad)
cmp
pop
cmp
mov
and
inc
push
mov
fld
jne
push
pop
clc
cmc
in
push
pop
jo
jg
cmp
call
mov
lahf
test
dec
cld
dec
add
cmp
js
mov
pop
ins
add
imul
pop
cmp
jno
mov
add
add
cmp
call
ins
sbb
pop
dec
xchg
adc
idiv
mov
push
sub
add
aam
dec
jl
imul
or
push
push
or
sub
dec
or
push
pop
or
sar
fiadd
add
and
mov
push
or
mov
push
ins
add
sub
mov
mov
sub
sbb
mov
sti
mov
sub
and
or
mov
aas
fld
add
jmp
fld
add
push
(bad)
rcr
push
inc
mov
or
add
add
lea
fld
or
stc
mov
and
adc
push
test
sbb
push
add
test
push
repnz
fcomp
test
add
mov
xor
gs
movs
sbb
jmp
or
add
jmp
add
add
in
mov
mov
mov
fadd
or
push
inc
adc
jmp
lods
xchg
add
xor
fwait
mov
fs
dec
mov
mov
pop
je
and
add
push
stc
aas
add
add
add
add
pop
jne
push
loop
or
or
adc
push
and
jmp
into
inc
add
in
loopne
stc
xlat
fwait
mov
pop
dec
mov
dec
xchg
xchg
dec
lea
out
ret
push
inc
or
call
fs
sub
or
add
add
mov
mov
mov
mov
mov
lock
hlt
test
sub
sbb
push
jg
fdiv
cmp
push
xor
and
jne
pop
rcl
cwde
adc
sub
lock
adc
inc
movs
fisttp
fsub
push
xor
sub
mov
xchg
out
add
jae
adc
sub
lock
fiadd
push
fild
dec
aam
cld
(bad)
pop
dec
xchg
inc
and
inc
adc
xchg
je
mov
push
push
jnp
lfs
cld
mov
dec
std
jbe
mov
xor
ror
xchg
sub
jmp
inc
add
add
loopne
fist
or
repnz
cmc
push
dec
or
sbb
ins
adc
fadd
inc
stc
pushf
ja
out
fwait
arpl
push
pop
xor
add
push
inc
clc
dec
push
inc
or
aam
jne
jb
mov
jne
sldt
add
and
mov
or
fadd
adc
jns
outs
or
std
jmp
popa
int
jo
fadd
ja
push
(bad)
sub
jecxz
xor
hlt
jmp
push
in
shld
(bad)
in
or
(bad)
hlt
jecxz
call
pushf
inc
cld
(bad)
aam
add
xchg
mov
out
or
add
add
xor
inc
jne
push
push
cld
mov
(bad)
add
rcl
pop
inc
add
inc
or
adc
mov
and
cmp
inc
inc
pop
xchg
cli
shr
inc
lods
push
dec
inc
stc
(bad)
add
mov
mov
addr16
cmc
rol
add
add
mov
sbb
xchg
mov
sub
add
mov
dec
cmp
mov
mov
mov
sub
add
scas
nop
arpl
sub
add
rcl
and
iret
mov
push
jecxz
pop
push
jmp
nop
pop
clc
mov
dec
dec
adc
clc
jb
in
rol
add
add
mov
add
psubsw
add
pop
clc
sar
mov
loopne
stc
shr
ret
add
jne
mov
cmp
addr16
fist
clc
loope
sti
add
or
in
dec
cdq
cmp
dec
pop
cmp
jmp
push
mov
dec
in
push
dec
add
add
add
jmp
and
(bad)
or
cmp
outs
adc
xchg
cmp
dec
add
fs
cmp
xor
add
in
jge
(bad)
add
data16
mov
aam
jmp
in
call
imul
rol
sti
in
test
pop
fadd
add
pop
adc
add
push
add
push
scas
adc
add
adc
dec
pop
sub
and
fldcw
lahf
xchg
mov
ror
push
dec
or
inc
xchg
mov
fbstp
jl
out
outs
adc
fdivr
ja
mov
iret
push
add
add
add
xchg
les
mov
mov
adc
into
adc
adc
xor
dec
or
addr16
push
or
jge
mov
loopne
cmp
fadd
xor
cmp
xor
or
add
dec
xchg
dec
dec
cld
rol
rcl
dec
mov
add
add
pop
sti
aas
pop
fbld
xor
aas
cld
cmc
loop
xor
add
call
imul
dec
test
dec
or
push
mov
adc
shr
and
add
out
sbb
dec
pop
mov
inc
adc
pusha
fs
loopne
push
mov
cmc
rol
add
add
fild
(bad)
sub
out
pop
sub
or
and
jnp
xor
jbe
lahf
and
mov
(bad)
jge
or
rcr
dec
add
jbe
dec
adc
and
xchg
and
sbb
dec
add
ja
mov
fstp
dec
lods
imul
loopne
add
in
and
add
shl
jae
pusha
js
imul
add
out
fbld
add
or
arpl
jmp
pusha
js
and
or
(bad)
(bad)
mov
shl
arpl
sbb
scas
les
hlt
fld
add
pop
shr
std
sub
add
sub
clc
xor
ror
add
add
and
je
add
daa
sahf
adc
dec
add
repz
and
push
jge
pop
retf
jmp
inc
or
push
shl
mul
add
adc
cld
mov
add
add
add
cmp
mov
and
in
jne
pop
ret
jb
cmp
in
int3
push
jge
icebp
add
inc
hlt
(bad)
mov
in
cmp
jae
and
popa
ret
imul
push
in
int
pop
jmp
popa
jp
mov
or
pushf
sub
jb
sub
jne
mov
cld
jmp
jp
je
or
pop
sub
jb
sub
jne
aam
cli
repz
mov
mov
push
add
add
push
call
ins
mov
mov
pop
cmp
pop
add
aas
add
or
in
dec
cld
addr16
mov
das
mov
add
add
sbb
and
pop
pusha
cld
mov
nop
les
mov
push
je
and
xor
aas
cld
jmp
add
jns
mov
cmp
fild
jmp
inc
hlt
mov
retf
jns
mov
ds
clc
mov
pop
jmp
add
add
ffree
inc
imul
lock
jecxz
mov
pop
inc
lock
retf
mov
inc
mov
clc
repnz
aas
push
sub
movaps
sti
push
add
lock
(bad)
and
add
hlt
mov
out
jl
in
shr
xchg
and
mov
(bad)
arpl
mov
add
add
mov
cmp
jmp
mov
loopne
fmul
mov
fild
add
out
sbb
add
sbb
or
sar
add
loopne
pop
in
pusha
js
in
inc
or
add
test
jbe
cmp
mov
add
jmp
or
add
add
add
jl
inc
add
jbe
jne
mov
push
push
cdq
cmp
cmp
xor
je
mov
add
mov
out
add
scas
call
add
test
jl
(bad)
fsubr
popa
jbe
mov
cmps
aam
jnp
add
add
mov
cld
popa
mov
lea
add
rol
out
leave
clc
xor
cld
jg
mov
mov
lock
xchg
mov
mov
int3
mov
shl
adc
jne
and
mov
data16
cld
das
fcomi
lock
pushf
loope
add
add
add
mov
xchg
ret
outs
jecxz
mov
push
add
sub
div
shl
mul
lods
sbb
pop
push
rol
ja
fild
push
xlat
js
movs
fist
mov
or
add
fucomip
addr16
add
sahf
outs
or
test
sti
push
call
pop
cli
cld
xor
add
test
sti
jmp
movs
cmps
push
fild
push
rcl
in
or
std
cmp
jg
js
push
push
cmp
call
ja
adc
call
sahf
fild
push
mov
(bad)
mov
add
add
mov
cmps
fiadd
push
jl
loope
add
or
xchg
je
pop
cwde
push
push
mov
dec
call
mul
mov
cmp
jbe
call
out
das
fcmovnb
push
movs
mov
mov
and
sub
outs
dec
call
ja
adc
add
add
movs
dec
or
fisub
push
sub
mov
std
sub
push
push
sbb
lods
aaa
movs
fld
je
addr16
push
fisubr
gs
loopne
sub
inc
add
xor
enter
mov
in
sbb
add
cmp
push
push
jp
push
call
mov
adc
add
add
fs
movs
inc
and
in
fld
sub
jmp
adc
outs
add
cmp
in
aas
clc
and
xor
mov
in
push
in
pop
and
xor
sub
dec
out
shr
cld
push
mov
push
or
out
add
add
and
xchg
outs
pop
out
int3
shr
clc
add
sub
in
push
int3
inc
(bad)
push
jle
ret
mov
pop
in
adc
mov
push
mov
scas
aas
cld
ins
lock
cmp
inc
jp
ds
hlt
(bad)
fld
add
add
int3
dec
jo
aaa
jecxz
je
sar
jae
push
push
sti
push
(bad)
mov
cld
push
add
daa
(bad)
add
aas
fadd
add
xor
push
dec
cld
jne
add
out
clc
add
cmp
xor
push
std
sti
jmp
add
fstp
iret
inc
scas
and
add
add
and
or
push
repz
add
fimul
add
and
js
add
hlt
push
jmp
je
pop
jmp
call
pushf
fisttp
(bad)
mov
out
add
add
div
adc
test
add
in
add
(bad)
mov
add
add
aaa
sbb
add
lock
jmp
jmp
in
add
add
mov
cdq
dec
test
scas
aas
cld
cmps
clc
cli
adc
retf
mul
jl
in
add
ja
inc
loopne
jb
outs
hlt
add
fld
sbb
push
je
push
jmp
je
pop
jmp
add
cmp
jg
xchg
in
mul
rol
pop
inc
or
(bad)
in
clc
inc
(bad)
jmp
xor
xor
jmp
lock
add
xor
rol
fadd
jne
pop
retf
fadd
jmp
mov
jg
js
xor
(bad)
or
add
add
sub
mov
dec
cmp
ret
pop
fsin
rcl
xor
and
movs
mov
add
mov
inc
data16
push
sbb
ins
push
add
pushf
movs
inc
mov
fstp
fadd
psubw
push
push
sbb
sub
push
jmp
outs
inc
data16
sub
cmp
adc
inc
inc
pop
pop
push
je
push
jmp
add
add
lea
sar
pop
xor
add
pop
pop
ret
or
fucomip
inc
mov
fmul
std
pop
add
pop
lds
lahf
outs
or
adc
mov
pop
push
inc
call
call
aaa
jmp
test
jmp
jnp
je
sti
inc
add
add
pop
cmp
pop
xlat
bound
add
jg
shl
std
push
adc
jns
push
(bad)
jns
dec
call
cmps
jmp
adc
std
mov
std
add
outs
fs
mov
js
jge
cmp
js
ins
push
ret
ret
xor
add
add
push
out
sar
call
repz
cmp
(bad)
push
lock
loopne
mov
shl
neg
ds
inc
je
xchg
fiadd
mov
icebp
(bad)
mov
or
pop
jo
(bad)
fild
lea
cmp
jp
dec
call
ins
test
add
test
add
hlt
mov
std
xor
ja
cmps
lods
loopne
pop
sbb
loopne
add
xlat
inc
or
pop
or
enter
loopne
pop
jmp
in
inc
mov
call
in
mov
cld
mov
fwait
adc
imul
je
inc
pushf
pcmpeqb
mov
add
add
out
and
movs
dec
add
push
test
mov
outs
adc
sbb
call
pop
mov
sbb
sbb
aam
std
adc
test
jmp
hlt
pop
cmp
ins
pop
in
xor
cmp
sbb
jnp
mov
add
push
pop
add
mov
pop
sbb
lea
inc
add
add
cld
(bad)
xchg
fdivr
call
out
adc
jle
(bad)
ret
call
push
xor
out
ret
fcom
cmps
adc
add
mov
add
push
cmps
mov
pushf
xor
xor
add
aad
mov
mov
or
add
hlt
fisttp
pop
cld
push
dec
and
add
add
out
adc
shr
xor
jle
je
mov
out
jb
lock
or
scas
pop
inc
or
cmps
add
cdq
pop
add
fsubr
sahf
sbb
add
call
add
iret
push
(bad)
add
sbb
xchg
and
sbb
add
and
add
js
mov
mov
out
enter
std
call
scas
or
push
sar
jo
xor
call
fadd
inc
or
mov
add
loope
add
or
xchg
stos
sbb
xchg
bnd
cmp
dec
push
add
add
mov
and
fild
push
xor
pop
(bad)
shr
pop
jmp
xor
push
and
xor
push
pop
xor
inc
adc
call
xor
add
data16
call
pop
xor
push
call
hlt
adc
pop
(bad)
push
sbb
add
jbe
add
cli
push
outs
or
out
std
cmp
pop
call
sti
adc
adc
adc
jo
std
jmp
sbb
jmp
out
xchg
or
out
test
fld
test
int3
jg
xor
add
cld
clc
add
iret
add
or
mov
add
add
lods
add
out
add
xchg
add
cli
and
or
(bad)
add
in
push
call
aaa
adc
mov
sar
(bad)
mov
fadd
and
jne
mov
fbstp
add
daa
std
je
mov
shl
add
daa
(bad)
je
mov
mov
fadd
sar
push
lea
push
fsubr
imul
add
adc
add
ins
xor
mov
sbb
add
jbe
jle
jmp
dec
or
inc
add
sbb
neg
add
push
inc
or
xlat
je
(bad)
fild
mov
add
adc
add
cmp
cmp
mov
mov
xchg
iret
add
std
mov
pop
pop
mov
inc
inc
inc
fs
mov
jmp
inc
dec
(bad)
cmp
mov
aas
cld
add
std
dec
mov
sti
frstor
std
pop
popf
in
punpckhbw
(bad)
jmp
jnp
out
sub
xor
add
add
cld
pop
in
jmp
add
sar
(bad)
hlt
fiadd
mov
iret
ret
faddp
inc
(bad)
ret
aam
js
sbb
movs
pop
mov
out
sub
jnp
fs
add
das
pop
jb
pop
in
into
inc
pop
or
fimul
(bad)
and
push
xor
dec
fiadd
in
add
add
xlat
or
xor
cli
jl
push
inc
imul
jmp
and
mov
call
xchg
mov
push
mov
cmp
inc
in
sti
cmp
xchg
lahf
repz
fld
add
movs
pop
pop
and
push
cmp
outs
pop
cmp
jle
pop
cmp
add
add
xor
pop
mov
(bad)
nop
adc
in
inc
xor
xchg
jmp
push
aaa
int3
add
cld
test
lahf
mov
mov
cmps
and
repz
js
xchg
pushf
(bad)
je
pushf
iret
outs
or
pushf
add
sbb
mov
jne
inc
add
add
stos
fnstenv
das
fwait
in
mov
push
mov
ja
add
or
xor
pop
jmp
fadd
add
popf
or
test
add
cmp
add
add
in
inc
xor
push
cmp
jo
cmps
pop
(bad)
je
pop
dec
add
das
jb
add
add
stos
pop
jnp
iret
lods
jmp
sub
outs
push
inc
neg
dec
(bad)
mov
dec
hlt
xor
inc
sub
jo
sti
and
shl
scas
xor
sar
std
add
add
jge
hlt
add
jl
js
push
lea
cdq
add
add
add
popf
cmp
jmp
bound
cmp
cmp
cmp
adc
in
inc
hlt
and
aam
pushf
add
movs
xor
xor
lds
and
call
ja
push
mov
stc
push
call
xor
xor
enter
push
add
add
cli
mov
je
add
je
(bad)
movs
repz
les
(bad)
dec
fmul
ret
fbld
mov
mov
call
dec
push
hlt
call
fild
adc
outs
or
pop
add
(bad)
je
pop
inc
jns
repnz
sub
je
pop
(bad)
call
push
push
hlt
call
into
add
sub
les
add
adc
cmp
outs
or
xlat
mov
jg
xor
sub
dec
pop
je
mov
and
sahf
fucomi
mov
sbb
push
lods
sbb
push
aad
call
dec
pop
(bad)
call
xlat
xor
arpl
add
mov
push
call
outs
fimul
cmp
outs
sbb
cmc
enter
sbb
int3
enter
pop
cld
or
fadd
sbb
xor
lds
dec
sbb
(bad)
xchg
and
cmp
call
pop
cld
or
push
sbb
mov
adc
add
add
push
mov
xor
push
fsubr
test
std
sbb
retf
or
dec
xor
pop
fild
mov
call
ins
dec
ja
lahf
fdiv
inc
les
sti
jae
adc
fsub
(bad)
call
mov
or
jmp
fild
inc
jo
std
push
add
add
add
movs
fisttp
out
adc
call
fild
pop
mov
std
push
out
add
pop
out
inc
pusha
inc
xor
jbe
mov
pusha
data16
push
std
inc
push
mov
push
add
popa
push
mov
pop
callw
outs
or
pop
fild
(bad)
xor
add
out
inc
test
dec
xlat
mov
cmps
mov
call
jg
adc
push
push
sub
cld
std
jae
push
push
pushf
mov
pop
ror
outs
comiss
or
fs
or
inc
jo
add
cmp
pop
mov
fiadd
pop
mov
mov
jns
call
test
add
add
mov
push
sbb
add
and
jmp
call
adc
in
inc
or
or
mov
add
call
push
int3
add
cmc
fsubr
int3
rcr
push
dec
cmp
movs
add
xor
sub
xor
add
call
mov
jge
add
add
int3
repnz
cmp
arpl
add
adc
fld
lea
xor
cwde
scas
mov
or
push
push
sbb
stos
call
mov
xor
call
imul
inc
or
sbb
or
push
call
sbb
out
std
inc
enter
add
add
adc
outs
adc
push
add
call
pop
daa
or
jne
pop
aas
fsubr
fadd
add
cmp
loopne
repz
fs
push
mov
or
pop
aaa
and
std
(bad)
mov
popa
ja
xor
loope
inc
lock
push
in
or
xor
add
add
adc
call
pop
aaa
mov
je
xor
je
pop
in
cmp
dec
je
into
rol
fild
mov
mov
test
add
sub
or
movs
push
mov
mov
or
pop
or
fild
xor
pop
inc
sbb
mov
jne
or
xor
mov
out
pop
cmp
add
push
mov
(bad)
shl
mov
jmp
add
and
retf
loopne
add
fwait
dec
jne
xchg
test
in
add
jle
or
mov
or
call
mov
xlat
sbb
push
lea
add
add
cmp
call
or
cld
xor
fld
add
pop
or
add
and
rcr
mov
cli
pop
clc
(bad)
repz
test
xchg
sub
add
mov
inc
push
add
fcom
lea
clc
(bad)
repz
and
cmp
add
or
(bad)
lock
mov
call
fadd
push
add
sti
xchg
jle
xchg
or
push
push
fldenv
mov
add
add
stc
add
push
mov
push
add
(bad)
ror
dec
push
ret
xchg
or
int3
mov
rol
add
pop
clc
cld
repz
add
add
jnp
jle
adc
push
jbe
ja
(bad)
mov
fmul
ror
xchg
ds
out
add
mul
pushf
add
ror
std
(bad)
mov
mov
and
pop
and
pop
(bad)
sti
nop
add
mov
ficom
add
push
sbb
xor
lds
add
add
xor
jmp
in
add
lahf
rol
in
add
mov
add
push
pop
or
fild
add
sub
sbb
jl
and
adc
movlps
add
and
jl
adc
or
neg
cld
jmp
xchg
inc
cld
add
add
and
(bad)
pop
int3
(bad)
xchg
push
shr
add
call
call
pop
pop
fwait
mov
sub
ins
add
mov
div
mov
call
lods
xchg
(bad)
cld
cld
push
mov
call
dec
pop
pop
cld
xor
je
lods
xchg
in
pop
pop
leave
inc
add
add
and
xor
repz
pop
adc
pop
sbb
add
fst
inc
popa
std
jmp
xlat
add
sar
mov
add
jmp
pop
aas
cld
xchg
add
(bad)
jl
add
je
mov
fdivr
call
cmps
ror
sti
or
add
add
push
lea
add
mov
loopne
and
(bad)
(bad)
cdq
loopne
add
xor
jmp
xchg
push
mov
mov
add
cmp
push
jne
sbb
mov
in
add
mov
xor
xor
adc
call
je
add
add
add
sbb
cmp
and
push
ror
xor
test
aas
add
add
mov
cmps
mov
test
fs
cld
mov
retf
repnz
jns
call
rol
popa
fiadd
add
in
movs
mov
add
add
add
js
cld
push
add
sub
xchg
xlat
add
push
std
jp
int3
add
inc
nop
imul
fdivr
lea
cld
inc
nop
pop
add
std
adc
jmp
xlat
add
loope
call
cld
in
add
fadd
push
loope
sbb
je
rcl
add
add
adc
ror
xor
adc
clc
hlt
fild
xor
push
push
xchg
outs
out
outs
adc
rol
fisttp
mov
xor
add
jecxz
push
mov
inc
in
dec
or
retf
xor
stos
fsubr
add
add
jmp
xor
(bad)
lds
mov
dec
aas
add
cmp
imul
or
cmp
mov
mov
push
(bad)
or
loopne
jge
in
fst
lds
fld
add
xor
xchg
add
push
sub
add
add
out
mov
jp
xor
jns
xor
xchg
inc
dec
cdq
pop
mov
jl
stc
inc
xor
dec
addr16
inc
das
sbb
mov
xlat
or
jmp
cwde
sbb
mov
add
jge
repz
in
inc
push
sbb
add
add
add
repz
les
call
xchg
jo
stos
iret
jno
xor
jecxz
push
(bad)
xchg
add
enter
cld
adc
xor
push
in
push
call
daa
(bad)
loopne
mov
sar
repz
xrelease
in
rol
std
mov
xor
rol
add
add
pop
rol
lea
fldcw
fld
call
pop
nop
rol
and
fadd
add
push
add
push
call
in
shl
pop
sbb
sbb
add
mov
(bad)
cli
scas
std
adc
sub
outs
adc
into
push
add
add
add
push
std
call
xchg
ss
fwait
add
cmp
inc
jo
add
add
imul
test
fadd
add
in
add
jp
add
sti
add
sti
add
or
sbb
add
and
add
add
add
add
aas
(bad)
enter
iret
daa
xor
sub
loopne
add
add
mov
in
jecxz
mov
in
(bad)
push
mov
xlat
pop
add
mov
out
pop
pop
leave
inc
add
clc
out
add
in
aas
add
lds
add
add
add
call
cwde
sbb
add
(bad)
test
add
add
fiadd
jmp
cmps
pop
call
sub
clc
cld
jne
pop
stc
cwde
imul
je
stos
call
pop
mov
call
fiadd
jmp
pop
pop
loopne
cmp
mov
push
sbb
cmp
pusha
or
push
push
daa
push
(bad)
rol
push
(bad)
imul
add
xor
rol
add
add
sbb
outs
adc
shr
call
lahf
mov
aaa
add
fld
ja
test
call
hlt
fisttp
jne
mov
add
stc
daa
dec
mov
pop
pop
inc
add
add
push
add
push
mov
pop
push
sbb
clc
mov
cmc
lds
fcom
jle
ret
mov
fdivr
mov
mov
xchg
or
lea
dec
lea
push
je
inc
es
add
xor
aas
hlt
cwde
pop
mov
mov
add
add
icebp
mov
mov
rol
aas
or
jnp
add
aad
dec
xchg
pusha
pop
jo
enter
std
dec
mov
loopne
cmp
mov
loopne
mov
outs
and
mov
xchg
sbb
xchg
adc
push
add
add
inc
cdq
jne
jmp
jle
add
push
sbb
ret
add
cmp
push
(bad)
cmp
inc
and
rol
pop
std
push
scas
or
jp
into
aad
std
mov
jns
or
add
pop
mov
sub
or
push
cmp
jbe
or
and
add
jbe
or
and
enter
cmp
ror
rol
add
sub
jo
out
ret
adc
jle
pop
shl
rcr
cld
push
add
pop
(bad)
shl
sti
xor
fild
mov
or
inc
or
lods
pusha
mov
stc
sbb
jg
hlt
fiadd
mov
push
inc
in
aaa
mov
sahf
add
fwait
cmps
and
add
add
popf
jmp
jle
pusha
pusha
cmp
aas
add
pop
mov
jmp
pusha
mov
loop
(bad)
cld
mov
cld
push
add
add
add
stos
jle
add
dec
inc
mov
push
scas
add
push
test
and
jmp
inc
add
add
scas
add
push
jg
and
jmp
push
jle
in
jmp
push
add
fldl2t
push
ror
(bad)
jmp
jbe
jbe
jmp
cmp
add
add
add
push
mov
rol
dec
pushf
pop
leave
add
add
aaa
cmp
add
sbb
mov
inc
xor
mov
dec
pusha
repz
lods
and
data16
and
lock
test
jmp
shr
inc
cmovs
in
mov
or
leave
cmp
ror
sbb
add
jmp
push
cmp
add
add
movs
fadd
data16
sub
je
popf
push
call
in
push
inc
jbe
mov
or
jne
enter
int
cmps
jle
std
mov
push
mov
loopne
fs
fnstenv
pop
(bad)
dec
mov
aas
add
xchg
push
call
scas
daa
inc
cmps
in
pop
cwde
out
data16
and
add
add
jge
jg
pop
enter
lock
fild
je
out
rcl
push
push
int3
stos
xchg
push
rcl
add
rcr
outs
mov
in
fsubr
xlat
call
or
inc
fild
inc
xchg
add
je
add
and
pop
pop
jb
std
xor
add
add
int3
adc
xchg
add
mov
std
jmp
push
std
push
lahf
repnz
push
push
dec
push
mov
sub
pop
in
add
sub
push
inc
or
or
mov
or
ins
pop
ror
cmp
push
in
mov
(bad)
adc
mov
div
mov
or
inc
add
add
cmp
mov
xor
bound
ss
leave
mul
sbb
push
cmp
sbb
dec
repnz
pop
cld
and
into
sub
test
xlat
add
inc
addr16
cmps
es
sub
stc
in
stos
or
hlt
out
cmp
fldenv
or
add
enter
push
inc
or
add
add
or
and
jbe
add
popf
bound
or
and
stos
and
popa
push
inc
add
xor
pop
(bad)
leave
pop
pop
xor
iret
xchg
rcr
cld
ror
repz
test
rcl
into
inc
inc
add
jg
jns
or
add
add
sbb
jg
cwde
mov
or
ja
sbb
or
nop
adc
mov
(bad)
inc
inc
xchg
fadd
iret
pop
jg
clc
fdiv
leave
or
inc
jmp
xor
iret
cmp
cwde
(bad)
adc
fstp
lods
sbb
push
mov
push
push
dec
add
inc
add
add
in
fcom
and
fst
cmp
imul
aas
add
mov
das
cmp
fwait
add
out
add
sbb
popf
cld
push
aaa
push
push
clc
pop
adc
call
dec
push
cld
sub
and
aas
pop
mov
push
jge
rcl
add
add
mov
add
mov
out
hlt
mov
and
je
push
aas
cld
mov
or
out
sbb
push
shl
std
mov
pop
fadd
rol
push
sbb
add
mov
push
(bad)
cmp
inc
and
in
xor
in
pop
cmps
jns
push
add
add
pop
rol
pop
jecxz
jne
xchg
inc
or
repnz
cmp
hlt
push
aam
daa
lock
dec
jg
jne
int3
std
adc
pop
sbb
push
push
sub
or
out
in
or
xchg
inc
je
std
push
jl
cmp
aas
test
loopne
jae
dec
add
add
stos
(bad)
(bad)
hlt
pop
lds
and
icebp
jae
ror
mov
aas
add
test
mov
jle
je
and
sub
pop
pop
cmps
push
std
push
das
cmc
sub
cmp
jmp
fld
push
push
xchg
loop
dec
pusha
cld
call
and
(bad)
mov
jg
add
add
js
cmc
rol
lock
push
icebp
mov
rcl
adc
outs
clc
add
pause
push
in
sub
add
xchg
mov
out
scas
xchg
mov
call
cmp
pop
std
mov
jmp
pop
icebp
jne
push
mov
pop
or
add
add
sub
xlat
cmc
(bad)
cmp
xlat
pop
pop
fisttp
rol
fsubr
inc
in
xlat
add
(bad)
sbb
mov
retf
mov
push
push
jb
call
xchg
and
add
xor
scas
aas
in
test
add
sbb
sub
mov
inc
adc
add
add
mov
enter
sti
push
xor
iret
mov
add
mov
fucomi
mov
sub
pop
hlt
add
mov
aas
fucomp
out
push
popa
repnz
inc
lods
mov
sbb
test
retf
mov
add
cmp
in
fiadd
add
fwait
or
and
fld
add
add
xor
and
ficomp
xor
push
or
fild
sub
call
push
lock
in
xor
adc
(bad)
xchg
cld
push
sub
fiadd
(bad)
call
int
mov
mov
xor
rol
or
xchg
xor
add
add
jae
cmc
(bad)
call
fild
jge
enter
jle
add
xlat
inc
ins
scas
pop
pop
mov
mov
jns
call
shl
outs
adc
ja
mov
adc
aas
sti
pushf
mov
test
data16
(bad)
mov
loopne
push
shr
shr
add
add
loopne
jmp
mov
fwait
add
mov
add
jle
lea
add
cmp
sbb
fisttp
add
sub
retf
psubsb
cld
push
test
add
push
call
mov
add
cmps
add
jae
add
add
add
pop
dec
sti
jmp
aas
fsub
fld
add
mov
add
jmp
inc
fdiv
loopne
pop
int3
sub
fnsave
adc
shr
inc
sti
push
lds
(bad)
fadd
add
and
inc
add
xchg
sub
and
add
add
(bad)
pop
int3
sub
fnsave
pop
push
fs
inc
sbb
add
xor
aas
fcom
add
xchg
inc
loopne
mov
fnsave
(bad)
add
stos
call
add
fild
fcomp
inc
add
xchg
std
call
and
fmul
pop
inc
add
and
fadd
add
add
pop
inc
add
and
fmul
pop
inc
add
(bad)
retf
les
pop
je
pop
jecxz
arpl
je
lds
pop
mov
(bad)
test
fucomi
xchg
jmp
fdiv
sub
jmp
and
fdivr
pop
inc
add
mov
aas
fadd
add
add
fiadd
add
inc
in
scas
fild
add
fiadd
(bad)
sub
test
or
jae
repz
arpl
and
(bad)
call
push
inc
add
xlat
mov
(bad)
test
fucompp
xchg
sub
add
add
add
loop
aas
fadd
pop
inc
add
pop
lds
adc
add
mov
call
or
inc
and
movs
inc
hlt
sbb
sub
test
loopne
pop
mov
popf
add
jmp
inc
clc
jno
(bad)
pop
mov
inc
push
call
icebp
cmovnp
stc
inc
sti
push
add
in
pop
mov
mov
or
add
add
rcr
pop
pop
sub
(bad)
movs
fstp
movs
fldenv
fldenv
jne
jb
gs
mov
jne
jmp
mov
fst
mov
pop
mov
outs
rol
and
mov
add
add
test
rcr
and
std
ror
fdiv
shl
mov
sbb
cld
and
xchg
pop
test
adc
std
(bad)
out
lahf
jl
and
(bad)
(bad)
xor
mov
ret
and
or
inc
adc
rcl
and
ds
in
leave
push
(bad)
jg
cwde
out
and
add
add
std
ror
fnsave
shl
cld
sbb
cld
add
std
dec
fs
xchg
std
call
fadd
mov
stos
mov
test
std
mov
fisttp
cmp
jecxz
xlat
and
(bad)
movs
lock
push
or
pop
(bad)
(bad)
fst
sti
inc
add
add
je
pop
push
mov
and
add
fadd
add
push
sti
jae
jo
add
out
or
stos
fiadd
add
and
mov
and
pop
les
ins
cdq
or
push
in
pop
rcl
add
fisubr
int3
ficom
and
or
int3
es
push
mov
add
mov
xchg
add
fstp
jne
test
pop
jmp
call
sbb
fimul
lea
sbb
int3
mov
sti
lods
mov
jle
cmps
push
call
fiadd
cmp
add
inc
sbb
add
(bad)
dec
movs
mov
add
add
pop
repz
cmp
mov
fcomp
outs
cs
push
out
(bad)
loopne
call
jmp
mov
push
push
in
push
pop
movs
frstor
ret
or
cld
pop
jo
out
xchg
or
(bad)
xor
mov
lods
std
jne
adc
add
xor
cld
cmp
pop
dec
or
pop
(bad)
dec
cmc
mov
mov
pop
pop
jb
ror
adc
pop
inc
xor
mov
call
daa
test
cld
adc
sbb
push
sbb
cmp
movs
fadd
push
das
mov
das
mov
sbb
add
add
pop
mov
call
daa
test
cld
adc
enter
neg
adc
mov
in
and
add
clc
xchg
and
in
inc
and
add
cdq
add
jne
and
addr16
or
sub
cmp
dec
int3
cmp
push
mov
dec
add
add
enter
sub
sbb
call
push
call
dec
rol
jmp
sbb
pop
mov
ds
xchg
shr
pop
dec
xor
mov
stos
mov
cmps
(bad)
fnstcw
mov
outs
sbb
adc
lds
pop
fild
add
xchg
adc
adc
xor
jmp
add
add
mov
fdivp
je
loopne
or
hlt
jecxz
inc
and
(bad)
in
sti
jmp
cvttps2pi
dec
add
jne
and
rcr
inc
adc
(bad)
jae
add
cmps
jb
cmp
mov
call
fiadd
push
daa
test
mov
repz
rcl
std
pop
add
add
lahf
mov
mov
mov
xor
popf
inc
mov
nop
dec
movs
or
pop
adc
pop
lods
fdivr
jns
xor
jno
mov
sbb
add
fld
(bad)
mov
int3
call
cmp
cli
scas
shl
(bad)
loopne
mov
ror
mov
inc
add
add
outs
out
dec
scas
or
mov
call
lods
or
fild
pop
push
sbb
dec
push
hlt
mov
mov
or
jbe
ret
jecxz
and
ret
scas
and
add
or
pushf
add
push
push
xor
ror
jo
or
fsubr
mov
pop
stc
inc
add
add
or
cmps
cmps
call
pop
imul
pop
pop
cmps
jo
push
das
adc
in
jo
add
inc
pushf
mov
mov
and
or
enter
mov
(bad)
push
jb
jl
adc
mov
jnp
inc
outs
xchg
std
(bad)
jmp
mov
push
scas
xor
add
add
adc
mov
(bad)
std
call
outs
scas
js
adc
and
rol
mov
cld
adc
mov
cld
jmp
adc
ret
fild
cmp
in
push
or
std
dec
push
(bad)
jmp
fwait
sbb
pop
daa
and
add
add
(bad)
fstp
popf
les
aas
add
fmul
jg
leave
cmp
int3
and
scas
es
in
add
out
jns
jmp
inc
dec
pop
jo
cld
leave
lods
inc
mov
lds
cli
fiadd
add
fmul
adc
sub
jmp
add
add
xchg
call
jae
adc
push
pusha
inc
mov
call
and
test
add
shl
mov
movs
push
rcl
mov
jmp
mov
inc
mov
cli
push
pop
jg
adc
push
push
or
cli
call
mov
inc
add
add
and
push
cld
jbe
inc
mov
sar
test
jmp
pop
vmwrite
pop
add
aad
add
imul
imul
and
test
pop
std
jmp
std
mov
mov
call
and
(bad)
stc
jge
push
fadd
test
jmp
push
pop
std
add
add
add
push
(bad)
rcr
cld
(bad)
cli
inc
ffree
test
daa
jg
adc
std
add
and
(bad)
or
out
call
pop
imul
std
test
push
std
dec
or
imul
sti
add
lea
add
add
cmp
push
cmp
je
add
out
dec
jne
sbb
ret
jmp
fimul
push
mov
(bad)
jg
lock
push
repz
and
adc
das
(bad)
adc
std
(bad)
jmp
or
stos
loope
cmp
movs
add
add
add
in
ss
cmp
arpl
rep
sbb
dec
cmp
sbb
sbb
dec
movs
sub
daa
es
push
jg
repnz
jmp
dec
inc
add
loop
je
sbb
imul
std
(bad)
jmp
ss
mov
cli
push
sbb
jae
add
add
sbb
adc
cli
inc
fisttp
jmp
cld
mov
cli
push
scas
adc
rcr
mov
cli
call
pusha
mov
(bad)
xchg
sbb
add
and
fld
sbb
popf
pop
sbb
dec
enter
(bad)
je
push
jno
adc
add
add
mov
push
fimul
and
pop
pop
(bad)
rcr
clc
inc
scas
inc
or
je
mov
jns
pop
sbb
(bad)
fldenv
ja
adc
(bad)
adc
std
(bad)
jns
cli
push
xor
repz
test
push
std
punpckhbw
or
in
scas
inc
xchg
sbb
mov
add
add
cli
push
xchg
std
test
pop
add
call
fadd
add
pop
pop
inc
sbb
clc
or
jb
fld
psubsb
or
je
hlt
arpl
or
fldenv
scas
call
add
jp
fld
sub
jp
mov
arpl
hlt
outs
and
add
and
cmp
push
mov
repnz
punpckhbw
xchg
hlt
fadd
jmp
je
and
sub
add
pusha
xchg
and
add
jmp
cli
call
jmp
or
push
push
(bad)
repz
add
cdq
jmp
inc
and
jne
and
add
shl
inc
and
std
call
mov
and
std
jmp
add
inc
and
push
imul
shl
std
test
cli
inc
and
jmp
xchg
call
push
sub
add
add
xchg
and
mov
inc
push
icebp
pop
push
(bad)
repz
(bad)
fcomp
ret
pop
ror
or
add
inc
pusha
inc
and
test
std
call
stc
call
push
jg
add
std
(bad)
push
dec
call
ins
push
mov
or
and
mov
jmp
push
cld
mov
add
add
push
jg
shl
std
cmp
cli
call
fiadd
mov
lods
cli
push
xchg
std
test
shl
cli
call
and
add
std
call
call
(bad)
shl
add
pop
pop
(bad)
shl
test
push
jg
add
std
push
loope
js
repz
add
add
mov
add
std
lea
xor
stc
adc
add
push
shl
dec
mov
test
and
call
push
push
ror
mov
ds
je
xchg
and
test
and
jmp
add
adc
std
jmp
push
lea
add
add
push
scas
and
pop
std
call
out
or
sub
mov
jg
adc
std
call
lods
pop
je
adc
or
adc
std
pop
imul
cld
push
js
sti
push
pop
mov
shl
mov
add
add
jmp
fadd
mov
mov
inc
and
test
xor
stc
mov
push
sbb
jg
shl
(bad)
shl
inc
ja
mov
adc
std
push
das
jecxz
repz
les
pop
mov
add
(bad)
adc
cli
inc
add
add
xor
stc
repz
jmp
daa
jne
dec
jg
shl
std
(bad)
call
jmp
inc
and
push
xchg
push
call
aaa
pop
or
pushf
fild
jmp
push
mov
add
std
sub
mov
rcl
inc
and
cmp
sbb
add
add
mov
and
jo
repz
fucomi
and
mov
shl
(bad)
jmp
std
push
push
push
rcr
test
and
jmp
je
shl
jmp
add
jae
xchg
in
push
lea
cli
inc
add
add
and
std
push
sbb
test
add
shl
je
and
call
lods
pop
jae
repz
mov
xchg
cmps
mov
pop
outs
mov
outs
pop
(bad)
adc
std
inc
outs
jae
repz
push
in
and
adc
push
pop
add
add
ret
pop
retf
pop
in
cmp
aam
cld
stos
fld
mov
(bad)
cli
call
and
lea
cli
call
pushf
cli
inc
sbb
add
test
std
(bad)
mov
adc
add
jnp
call
cmp
jmp
test
pop
addr16
adc
add
std
push
gs
adc
jg
repnz
add
pop
(bad)
shl
call
and
std
mov
cli
inc
and
pop
daa
arpl
xchg
and
jae
push
jg
xchg
and
jmp
mov
call
pop
mov
add
je
and
mov
add
add
xor
and
test
std
jmp
pop
std
psubsb
add
xor
mov
repnz
arpl
es
inc
into
jl
cmps
pop
pop
cpuid
das
add
hlt
pop
repz
cmp
jecxz
(bad)
neg
add
xchg
je
(bad)
rcl
and
sbb
mov
add
mov
retf
cmp
add
and
push
adc
add
je
mov
repnz
cld
add
jle
je
mov
arpl
push
mov
cmp
test
test
cld
mov
fs
adc
add
add
add
pause
les
adc
add
ret
dec
test
hlt
fiadd
push
bound
adc
add
cld
push
pushf
or
fiadd
jge
(bad)
jmp
jg
je
sub
rcl
test
fiadd
cmp
inc
add
add
fbstp
(bad)
adc
sti
call
arpl
adc
cld
push
loopne
sbb
fld
mov
std
call
data16
ret
jmp
fs
jno
xchg
nop
sti
jge
xchg
jle
jb
cld
add
pop
cmp
aas
mov
xor
cld
lds
(bad)
cli
call
add
add
sbb
push
sub
cld
sub
cmp
or
mov
mov
sub
adc
es
pop
shl
or
aaa
jp
retf
arpl
mov
ror
ja
ret
xor
mov
add
mov
movs
mov
cmps
cmp
out
aas
add
out
adc
xor
cwde
mov
aas
lahf
and
push
sti
ror
fcomp
jo
call
jecxz
add
push
inc
inc
mov
(bad)
mov
popa
mov
add
cld
lea
aam
leave
mov
mov
add
add
pmaddwd
call
arpl
add
cld
mov
sti
call
stc
xor
push
je
ror
add
pop
je
inc
mov
call
jg
or
cmp
adc
shl
sti
inc
add
test
cld
jmp
add
pop
rol
mov
cld
push
jmp
idiv
call
adc
std
mul
cld
outs
and
add
dec
loopne
add
push
pusha
(bad)
adc
cld
push
hlt
add
je
repz
add
imul
je
mov
call
aaa
inc
dec
(bad)
jae
sti
mov
or
inc
add
add
cld
cli
call
mov
jmp
movs
jle
repnz
js
fiadd
jmp
in
loope
mov
sti
call
jb
cld
adc
cld
dec
dec
clc
push
mov
push
fs
hlt
adc
cmp
adc
add
je
push
add
add
repz
push
imul
jle
ror
call
fild
add
(bad)
(bad)
jae
sti
jae
pop
xchg
cld
xor
add
add
movs
pop
jg
add
fsub
add
jmp
fld
inc
or
cli
inc
fucompp
or
add
add
mov
jne
mov
jne
pop
ret
push
sti
jmp
cld
jmp
sti
push
ja
repz
push
and
rol
push
cli
jmp
cld
js
add
call
jae
add
add
add
cld
dec
mov
push
pop
rol
mov
cmp
xchg
sar
call
push
mov
add
add
or
jmp
or
push
xor
repz
sbb
pop
add
push
in
mov
fs
add
add
xchg
or
fs
call
push
scas
xor
cmp
inc
(bad)
std
call
cmp
dec
mov
rcr
cld
pop
std
arpl
rol
cld
call
arpl
rol
add
test
cmp
xor
cmp
rol
call
or
inc
add
add
or
mov
cli
push
cmp
cmp
scas
(bad)
cld
jmp
jae
rol
cld
call
sti
inc
cmp
pop
add
call
adc
inc
pop
(bad)
xchg
cmp
rcl
sti
inc
sar
je
add
rcl
ret
test
pop
retf
cmps
add
push
xor
repz
and
add
add
test
pop
mov
adc
js
les
call
setp
inc
or
fs
jmp
pop
sti
push
cld
outs
sbb
cmp
add
add
jmp
jmp
shl
jmp
int3
test
jg
test
dec
dec
popf
in
mov
test
repz
push
(bad)
repz
mov
xor
jg
adc
shl
xchg
cld
je
push
(bad)
fs
inc
add
add
sti
inc
outs
scas
icebp
rol
(bad)
mov
test
inc
sti
call
test
call
in
push
cmp
xchg
pop
mov
repnz
inc
pop
fld
push
pop
rol
add
cmp
add
add
cmp
test
push
scas
inc
adc
std
call
fdiv
pop
das
(bad)
repz
rol
or
rcr
je
pop
(bad)
pop
push
mov
adc
push
jle
xchg
cmp
sub
sub
sar
jg
mov
add
out
cmp
pop
test
(bad)
jmp
mov
mov
stos
push
xchg
js
cmp
rcl
push
mov
mov
je
lahf
inc
xor
push
test
(bad)
sbb
test
push
(bad)
call
jecxz
or
(bad)
rol
lea
cmp
addr16
je
xchg
test
jne
add
add
pop
cmp
stc
sbb
jmp
cld
ins
or
mov
fld
adc
pusha
(bad)
repz
mov
test
(bad)
fcom
ret
and
sub
jmp
sub
in
cld
jmp
test
sub
cmp
mov
jo
jl
add
add
adc
add
push
test
jg
cmp
rol
test
cld
call
xlat
or
add
mov
cld
jmp
cli
jo
(bad)
loop
mov
movs
std
push
mov
jmp
pop
jo
dec
jg
repnz
inc
pop
call
add
add
sbb
pop
aas
inc
xor
cdq
mov
mov
jno
rol
push
mov
imul
dec
mov
add
mov
icebp
sub
add
std
fbstp
fdiv
inc
loopne
outs
pmuludq
add
outs
add
in
xchg
jmp
sub
jmp
add
add
mov
add
daa
cwde
sbb
jmp
xchg
cmp
fwait
adc
sbb
call
into
jecxz
push
jne
pop
xchg
jmp
inc
je
sbb
stos
jno
(bad)
test
jne
or
add
shl
mov
call
pop
out
std
push
lahf
jae
inc
in
ds
test
xchg
(bad)
int3
mov
add
add
inc
call
push
pop
sbb
and
or
sub
add
mov
je
test
fild
xlat
pop
pop
add
push
out
gs
je
add
pop
fdiv
push
int3
dec
sub
je
push
pop
sbb
or
xchg
cmps
in
and
sub
add
add
imul
add
jno
mov
jns
call
or
cmp
mov
dec
jp
add
enter
mov
jb
in
or
adc
pop
mov
cs
pop
ja
xor
cmp
(bad)
in
pushf
imul
je
xor
add
xor
std
add
mov
mov
pop
clc
or
jne
fistp
je
movs
mov
je
mov
(bad)
mov
or
sub
popa
cmc
fld
mov
test
pop
(bad)
cmp
sar
in
cmp
push
add
add
iret
adc
je
pop
jecxz
or
ins
sahf
xchg
add
mov
popf
dec
push
and
push
call
out
por
fstp
jmp
aas
sub
jns
fwait
sub
or
jmp
aas
xor
imul
add
imul
call
add
add
ins
or
pop
(bad)
pushf
cmp
or
add
adc
jne
test
mov
std
dec
or
xor
pop
xlat
pushf
add
clc
or
fiadd
or
popa
mov
test
or
mov
push
inc
sar
adc
add
add
add
fucomip
mov
jns
or
push
mov
adc
mov
sub
inc
xor
(bad)
cmp
sub
imul
mov
pop
aas
adc
jp
(bad)
xchg
call
cli
xchg
ds
sar
(bad)
mov
pop
clc
or
(bad)
ja
paddd
or
sbb
sbb
mov
mov
or
add
add
fucomip
hlt
sar
pop
mov
(bad)
push
xchg
or
sub
je
mul
je
push
ds
adc
iret
shr
scas
adc
mov
xor
sbb
mov
adc
out
scas
jecxz
test
in
test
mov
call
call
call
dec
call
add
shl
pop
dec
jge
dec
(bad)
jl
call
enter
jl
dec
jb
jns
jl
jbe
jb
jns
jge
jbe
jb
jns
jl
jbe
js
jns
jl
jbe
js
jns
jl
jbe
jb
jns
jge
jbe
jb
jns
jl
jbe
js
jns
jge
jbe
add
add
add
jge
jbe
jb
js
jnp
les
jae
repz
inc
fdiv
inc
jl
dec
int3
jle
call
jl
dec
mov
jl
push
int3
mov
jae
jne
pushf
xchg
jae
cmp
sahf
jae
xchg
jl
pop
jl
je
add
mov
je
repz
add
add
fdiv
jne
int3
cmp
jne
mov
jl
jo
dec
je
repz
je
push
jae
add
or
jae
adc
cld
in
inc
pop
mov
add
fsubr
outs
ins
gs
dec
jo
js
fs
mov
loopne
add
push
jns
jae
mov
add
add
movs
fadd
call
sub
inc
or
cld
(bad)
fiadd
push
js
fs
mov
fild
add
retf
ret
fs
je
add
push
call
pushf
add
call
(bad)
fidiv
cld
jmp
pop
js
gs
mov
fild
add
fidivr
adc
sub
sbb
mov
add
add
add
in
cmp
or
outs
xor
dec
lahf
add
fist
jb
std
call
aam
ret
jmp
outs
(bad)
ja
bound
cli
iret
cmp
cwde
ficom
ds
jmp
mov
or
je
push
inc
or
aad
ret
test
add
add
push
mov
cmp
mov
push
call
ins
push
inc
adc
aam
ret
mov
jbe
ja
pusha
push
mov
sar
inc
popf
add
fst
inc
jmp
inc
sbb
fld
pop
hlt
outs
dec
ja
pusha
push
mov
mov
add
cwde
xlat
push
call
push
out
call
test
je
mov
pusha
push
pop
mov
mov
jns
out
test
or
mul
add
sti
fwait
ret
jecxz
sahf
pusha
cld
push
add
ja
lds
popa
add
push
(bad)
push
outs
adc
imul
(bad)
outs
lea
sbb
add
add
aam
dec
sbb
sti
or
push
sub
ds
scas
xchg
outs
add
call
adc
xchg
pusha
imul
add
add
push
pushf
mov
mov
push
outs
or
adc
outs
adc
imul
add
pop
push
add
ret
das
ins
outs
pop
scas
loope
cmp
add
add
out
call
jle
pop
mov
or
cmps
or
cmp
test
mov
iret
mov
pop
fsubr
add
bnd
mov
(bad)
cmp
or
mov
iret
xchg
(bad)
sbb
xchg
sub
inc
inc
mov
jmp
ins
sbb
cmp
(bad)
dec
js
jmp
mov
add
mov
cmp
outs
imul
or
push
repz
js
gs
mov
je
cdq
adc
and
add
add
pushf
inc
test
push
ds
xchg
cmps
in
hlt
push
push
xor
xchg
outs
cmp
sbb
push
(bad)
ins
inc
push
sbb
xchg
inc
add
add
movs
or
inc
add
fwait
outs
or
xlat
jmp
xchg
sub
cmp
add
jmp
cmp
out
fild
iret
xor
add
not
test
and
add
or
add
lods
add
cmp
outs
or
dec
sbb
add
sub
xor
sub
outs
adc
sub
xchg
fiadd
add
aad
ins
mov
cld
push
cld
call
in
xor
call
mov
jecxz
pushf
fs
mov
mov
sti
retf
add
add
xor
arpl
pop
aas
xchg
outs
or
add
add
xlat
xlat
frstor
add
fucomip
arpl
and
jmp
cmp
push
push
repz
adc
pop
aam
add
into
sbb
stos
ds
adc
push
(bad)
jne
fs
test
std
add
cmp
(bad)
clc
pop
(bad)
into
xor
mov
push
add
in
add
add
pusha
mov
mov
call
add
jne
jno
add
or
outs
add
cdq
call
je
or
or
push
dec
fld
mov
mov
fsubr
or
jns
cld
jne
outs
or
jmp
pusha
inc
inc
add
cmp
add
add
sbb
std
call
je
pop
dec
push
inc
cld
(bad)
xchg
jecxz
mov
push
cld
push
pop
je
in
fs
or
adc
call
shr
and
mov
cld
jne
outs
sbb
jmp
fs
or
lods
std
push
pop
mov
add
pop
pop
jo
add
add
pop
mov
or
mov
pop
popf
add
add
call
int3
or
sub
(bad)
jmp
pop
mov
call
out
call
pop
pop
and
xor
sbb
add
ret
out
push
dec
mov
pop
out
test
mov
mov
add
add
inc
sbb
sbb
mov
push
mov
mov
jp
fdivr
push
or
jbe
popf
rcl
cmp
or
add
not
fsubr
push
jmp
sbb
test
cli
je
arpl
call
jae
jle
sbb
add
mov
outs
inc
das
jmp
(bad)
jmp
fiadd
(bad)
jns
jecxz
out
cld
mov
test
rcr
ror
call
push
lea
mov
jecxz
retf
mov
xchg
les
sti
retf
add
add
inc
pop
push
call
push
cld
(bad)
jns
std
sar
cmp
add
add
pop
fwait
xor
int
sti
push
in
call
pop
emms
outs
or
xlat
fnsave
ds
fadd
in
ja
add
in
push
call
dec
cld
sub
cld
jne
push
outs
fmul
std
jne
push
rol
jno
cmp
mov
sbb
add
add
jp
outs
in
push
outs
or
retf
push
cld
sbb
pop
mov
mov
jbe
pop
mov
push
cmp
push
dec
push
(bad)
cmp
std
rcr
cmp
sbb
xchg
jae
push
pop
cmp
shr
push
jmp
push
push
xchg
shl
push
xchg
ror
ja
les
dec
outs
loopne
add
add
test
pop
or
imul
std
jne
push
ror
jl
gs
pop
pop
mov
push
push
ret
jns
call
jge
cmp
outs
aad
mov
mov
mov
xchg
dec
fld
dec
fld
add
add
in
push
outs
sbb
gs
xor
retf
mov
dec
adc
fstp
les
movlps
inc
data16
push
dec
fisubr
inc
add
bound
push
add
arpl
ins
push
dec
fidivr
push
add
xchg
mov
fild
xlat
xor
cld
mov
add
add
in
rcl
sub
aaa
ja
jge
clc
mov
dec
mov
aaa
rcr
(bad)
pusha
fimul
(bad)
js
retf
hlt
xor
stc
or
mov
scas
jae
dec
pop
iret
adc
in
imul
cmp
icebp
push
push
fadd
cld
inc
pusha
mov
mov
add
add
ror
or
outs
sub
mov
cwde
ror
and
ja
lahf
imul
repz
pxor
iret
jns
hlt
fldenv
or
lock
outs
mul
xrelease
inc
or
mul
mov
fadd
push
enter
fistp
in
imul
call
add
add
push
pop
sbb
ins
cmp
out
imul
add
cmp
inc
ins
cmp
(bad)
clc
mov
mov
aas
inc
and
xchg
mov
dec
mov
nop
cld
cmp
shr
push
add
rcr
dec
cmp
(bad)
mov
sbb
in
sti
inc
add
add
in
push
push
sbb
call
sub
sti
push
jmp
sbb
xor
jmp
inc
jmp
je
outs
dec
out
or
retf
jne
xor
or
loop
lock
fsubr
sub
fs
pop
lods
retf
cdq
mov
xor
add
add
fs
pop
lods
and
(bad)
imul
and
add
js
cld
jne
jmp
ja
pop
cmp
mov
xor
xor
scas
sub
mov
xor
dec
inc
movs
xchg
bound
fs
jb
(bad)
cld
mov
test
mov
pop
dec
call
popa
les
jo
add
int
(bad)
call
(bad)
cld
mov
jo
push
inc
cmp
rol
mov
cmp
mov
lds
inc
fild
add
popa
cld
ret
mov
add
pop
push
std
(bad)
jg
or
cmp
call
pop
mov
xor
add
add
sub
or
dec
dec
outs
xchg
pusha
push
jmp
aaa
mov
add
sub
cld
mov
cmp
mov
mov
add
push
xor
shl
mov
push
call
popf
xor
or
xchg
xlat
add
das
mov
lock
jne
pop
jmp
call
cmps
mov
add
xor
dec
cmp
mov
cmp
inc
shl
cmp
push
fimul
jne
push
movs
lea
push
call
sub
dec
xor
les
cmp
jns
xor
stos
outs
or
xchg
or
fimul
inc
out
call
loopne
add
add
fs
push
adc
sbb
mov
cmp
cwde
mov
cmp
xchg
mov
fs
std
jne
push
push
lea
gs
dec
pusha
cld
sub
cld
inc
dec
sub
jge
xlat
outs
xor
outs
add
pop
lds
aaa
jle
mov
mov
push
push
fdivr
xor
xchg
stos
xlat
xchg
add
add
call
test
push
or
fsubr
push
daa
xor
stc
fs
xchg
xlat
add
or
fdiv
push
cwde
mov
in
jle
adc
call
cmp
xor
(bad)
cmp
xchg
inc
hlt
jmp
pop
gs
pop
jge
jmp
test
add
add
add
int3
xor
loopne
rol
add
enter
fld
test
loopne
mov
push
fdiv
pop
cld
jne
mov
add
call
pop
stc
call
and
call
pop
int3
adc
sti
or
add
in
shl
add
call
std
(bad)
std
call
das
std
jne
push
and
repz
push
call
ins
ficom
stos
push
ror
das
out
push
(bad)
jg
retf
sbb
push
test
gs
push
imul
push
push
mov
(bad)
std
pusha
arpl
add
add
sub
scas
sub
or
mov
cld
pop
mov
mov
lea
gs
mov
add
int3
adc
repnz
in
data16
test
cwde
inc
std
jmp
pop
mov
xchg
mov
stc
cs
jge
fldcw
(bad)
cdq
push
ret
add
add
and
pusha
gs
int3
jmp
jne
xor
mov
inc
and
mov
test
das
in
mov
dec
pop
and
xor
mov
dec
pop
and
fmul
jmp
xor
mov
lea
mov
add
or
push
or
(bad)
not
xor
neg
add
add
inc
and
pop
in
mov
or
sub
cmp
mov
sub
sbb
xor
fucomip
and
paddsb
mov
sti
mov
ror
mov
xor
push
call
in
je
std
jne
xor
int3
jnp
call
xor
arpl
push
push
add
add
int3
bound
xor
repz
mov
pminub
std
jmp
movs
mov
dec
hlt
fist
cld
xlat
outs
add
jmp
hlt
fild
mov
and
push
inc
pop
mov
push
mov
ret
add
dec
nop
fild
pusha
add
ret
bound
add
add
sbb
sub
or
jecxz
call
call
or
call
cmp
adc
stos
cmp
sbb
outs
ss
jnp
mov
or
or
and
test
out
cmp
test
and
push
add
add
pop
mov
sti
inc
cmps
cmp
test
leave
sbb
jge
fistp
mov
add
pop
pushf
mov
stc
and
fst
mov
loopne
fwait
cmp
mov
shl
call
or
outs
adc
ficom
je
xor
clc
je
pop
dec
xor
mov
add
add
and
or
cmps
mov
and
xchg
in
call
mov
movs
mov
es
test
ret
pusha
dec
mov
ret
add
or
outs
or
mov
(bad)
fisub
in
test
adc
add
push
call
out
or
add
add
and
push
out
push
imul
dec
pop
cld
call
pop
dec
mov
ret
add
cdq
movs
jecxz
add
pop
pop
add
mov
cli
mov
cmps
push
or
idiv
jne
xor
jg
in
inc
pop
cld
xor
call
push
mov
pop
imul
sub
push
mov
add
cld
add
aad
inc
jl
pop
jo
pop
(bad)
jmp
mov
out
or
ror
xor
mov
ja
xor
lea
pop
imul
pop
fdiv
or
in
outs
or
jge
xor
pusha
cmp
or
leave
mov
pop
mov
add
add
pop
cmp
jg
outs
push
mov
loope
jge
fstp
popa
xchg
cli
mov
ds
pop
mov
movs
fisttp
push
(bad)
sbb
cmps
xchg
pop
add
jbe
repz
call
pop
ins
mov
stos
test
push
push
mov
pop
mov
rol
add
js
push
push
ja
push
call
mov
adc
xor
add
sub
cmp
scas
sub
jns
and
(bad)
cli
cmc
inc
cmp
pop
fwait
pop
sti
add
jl
jl
lea
sti
add
mov
call
sahf
sti
add
add
add
lods
or
ja
cmp
mov
jecxz
repz
cld
cmp
cmp
je
fistp
div
hlt
mov
mov
jns
out
add
fwait
inc
stc
sahf
sti
xor
push
ds
lahf
sahf
add
or
call
aam
pop
imul
call
xor
add
add
daa
outs
sbb
pusha
xchg
jae
push
push
test
mov
outs
pop
sahf
or
addr16
mov
cmp
cmp
call
jge
test
sbb
sbb
shl
cli
push
je
rol
sbb
leave
aas
xor
add
ffreep
add
mov
fld
leave
cmp
pop
aam
pop
ffreep
std
jne
dec
ds
nop
cld
jne
push
les
mov
cld
push
adc
mov
pop
pop
pop
xlat
or
push
mov
mov
stc
push
out
movs
and
ud0
std
jne
and
std
inc
pop
mov
add
push
out
shl
push
add
lds
and
std
(bad)
jns
sub
xor
call
cmp
fst
jns
cmp
pop
imul
cdq
jg
std
push
adc
aaa
stos
addr16
and
call
jmp
pop
mov
add
add
(bad)
iret
add
mov
ja
call
or
enter
test
jmp
push
jbe
out
fld
add
push
mov
pop
xor
push
and
in
fnstcw
(bad)
sar
xor
add
and
add
add
add
add
add
shr
push
push
sbb
sbb
shl
add
fstp
call
ret
pop
xchg
add
pop
jo
mov
movs
fiadd
lds
inc
(bad)
push
inc
xor
push
iret
xchg
rol
and
push
mov
shr
mov
add
add
add
jbe
and
xchg
rol
jl
adc
mov
inc
daa
fsubp
xor
fld
and
pop
adc
ret
call
sub
pabsw
enter
js
xlat
mov
xchg
hlt
fisttp
add
add
shl
or
ror
add
les
call
jnp
rcr
or
jne
push
dec
in
mov
push
add
xor
add
sub
inc
mov
xchg
add
dec
adc
(bad)
dec
lock
cmp
add
jg
jnp
shl
ja
loope
punpckhdq
jmp
dec
dec
hlt
add
add
jnp
repz
add
push
push
add
mov
mov
clc
aas
hlt
and
fsubr
mov
fadd
out
sub
fwait
pop
cmp
dec
int3
pop
data16
push
xor
jmp
cmp
add
inc
clc
xchg
jae
add
add
xchg
sub
jnp
dec
push
add
mov
mov
sar
hlt
jne
std
inc
fucomi
xor
and
jbe
push
inc
jmp
rol
jg
popf
outs
push
jp
xor
xor
jp
mov
add
push
adc
jge
mov
(bad)
mov
cmp
add
add
stos
punpckhdq
pop
fsub
std
sub
add
dec
ds
loop
jne
dec
jmp
xchg
ret
add
adc
and
clc
stos
add
fimul
sar
add
lahf
mov
and
call
push
sub
mov
add
jmp
sbb
sub
add
add
addr16
cmp
std
(bad)
stos
jmp
je
(bad)
cmp
mov
loopne
sti
jmp
mov
stos
push
dec
lock
mov
aas
sub
test
popf
cmp
test
push
mov
push
xor
and
add
pushf
fld
shr
neg
jg
push
ret
jge
add
add
ja
or
scas
sti
imul
(bad)
sti
(bad)
mov
mov
inc
aas
sbb
mov
pop
jbe
movs
lods
add
jmp
es
pop
sbb
push
cld
push
push
in
mov
shr
jo
fbld
xchg
xchg
jecxz
dec
and
test
lods
es
sub
cld
dec
call
dec
push
cld
fwait
pop
inc
pop
mov
add
mov
pop
pop
jo
push
(bad)
xlat
add
addr16
sbb
jl
in
je
mov
jmp
or
add
sti
das
push
cli
jmp
loope
mov
stos
add
ja
add
add
inc
add
and
push
mov
xor
and
push
push
pop
call
jge
fdivr
mov
and
mov
mov
lahf
xlat
xchg
pushf
popf
mov
pop
jle
jno
cmc
(bad)
add
xor
xchg
add
loopne
(bad)
sbb
jmp
xchg
push
add
add
int3
push
push
mov
add
fwait
mov
pop
pop
jo
into
rcr
ret
adc
add
sub
pop
mov
mov
scas
push
push
fist
push
lea
dec
lea
fwait
cld
xor
inc
add
fld
cdq
imul
sub
add
add
iret
call
sub
mov
rol
jbe
pop
repz
fmul
ror
xor
aaa
xchg
iret
sub
gs
adc
mov
rol
bound
jbe
push
fist
neg
jmp
sbb
aaa
mov
xchg
ud0
add
add
lods
push
dec
jg
push
pop
mov
pop
(bad)
retf
(bad)
pop
or
push
call
daa
ror
add
mov
pop
fld
or
stos
mov
test
push
xor
xchg
scas
cld
jo
adc
bound
call
xor
les
add
add
xchg
adc
imul
and
add
cli
fadd
add
mov
fisttp
test
xchg
retf
sub
xor
cmp
in
add
sub
popa
shl
adc
test
fstp
in
cmp
pop
in
push
fbld
xor
add
add
fcomp
add
aas
adc
clc
ss
clc
cdq
mov
jmp
mov
inc
das
push
xchg
xchg
jnp
mov
push
pusha
mov
jne
pop
ror
push
(bad)
cmp
mov
rcl
call
sub
mov
lods
pop
xor
test
outs
add
add
pusha
or
std
push
lahf
sti
mov
popa
xrelease
pop
sub
outs
sbb
xchg
sbb
dec
call
outs
or
xchg
add
add
std
push
pop
adc
pop
repz
sbb
cmp
or
std
jne
or
xchg
xchg
or
cdq
xchg
cld
jne
xor
xor
xchg
sbb
add
add
pop
out
jne
or
rcl
jecxz
int
std
jmp
or
repz
pop
call
or
add
jmp
adc
push
repz
call
std
jne
or
ret
mov
(bad)
cmp
std
sub
push
push
(bad)
or
add
add
or
push
mov
xor
mov
std
push
or
add
fs
jmp
xor
stos
xor
les
mov
push
stos
mov
mov
call
or
mov
popa
out
icebp
fsubrp
stos
push
and
sti
fadd
add
add
and
jmp
push
cmp
pop
mov
or
loopne
sbb
rol
xor
jge
fs
popf
sti
(bad)
test
pop
mov
stos
call
or
(bad)
xor
jecxz
ret
or
int3
add
(bad)
int3
and
(bad)
int3
and
(bad)
int3
add
add
scas
or
add
inc
or
xor
mov
xor
jno
mov
loopne
or
xor
inc
or
in
bound
cmp
or
pop
mov
enter
enter
enter
dec
mov
pop
aaa
add
inc
test
push
(bad)
pop
inc
add
add
pushf
loopne
test
inc
or
pop
jb
jmp
stc
jb
call
mov
mov
enter
enter
enter
dec
mov
mov
push
jl
popa
inc
hlt
jnp
add
fild
push
xor
push
cmp
sti
xor
add
lds
add
add
pop
ds
aas
sti
push
aas
cld
movs
fild
add
add
aaa
sub
xchg
add
je
push
aas
or
add
scas
arpl
fs
sti
out
add
push
sbb
movs
mov
int3
adc
lds
add
push
adc
pop
add
add
add
add
pop
mov
lods
ror
fdiv
shl
nop
pop
jg
ror
add
call
int3
ror
fiadd
add
fistp
stos
mov
aaa
cld
dec
pushf
adc
gs
jmp
adc
add
jns
jg
add
add
or
stos
out
bound
push
xchg
sbb
jg
xor
jl
je
or
imul
xor
jo
inc
jnp
and
inc
jne
adc
cld
outs
stc
push
ret
cdq
adc
and
cmp
aas
or
hlt
xor
nop
xor
inc
mov
adc
add
add
cwde
(bad)
(bad)
je
hlt
(bad)
push
in
jno
xchg
add
or
test
add
cdq
repz
ja
out
push
out
repz
aas
or
pop
or
jno
xor
mov
or
jmp
adc
imul
repz
les
add
add
adc
or
test
mov
rol
int3
and
icebp
enter
int3
and
and
mov
pop
push
xchg
pop
fadd
add
test
mov
stos
mov
out
call
mov
mov
jns
call
add
add
retf
call
inc
fwait
add
call
add
add
jmp
adc
in
repnz
push
cld
mov
adc
loopne
shl
pop
in
ror
sbb
call
movs
fcmovnb
jne
mov
jmp
push
pop
in
sbb
cld
adc
std
inc
add
add
fucomip
icebp
cmp
jmp
push
std
push
jmp
sub
int3
fs
call
push
pop
cld
fs
ss
fwait
sti
jmp
fiadd
add
je
or
cld
push
lock
push
or
sti
addr16
inc
aas
add
add
jg
cmc
fiadd
push
mov
add
add
inc
aas
add
cmp
jmp
das
rcl
enter
movs
stos
mov
(bad)
stos
cmps
jecxz
fiadd
mov
ficom
lock
ds
sub
imul
out
fidivr
js
push
push
adc
dec
call
pop
aaa
mov
add
add
imul
sti
cmp
mov
pop
in
in
inc
push
fdiv
inc
add
xchg
retf
dec
sti
mov
push
pop
das
add
clc
repz
sbb
std
(bad)
sub
jo
xor
push
push
xchg
xchg
stos
imul
mov
add
je
pop
inc
adc
add
rcr
retf
dec
sti
cmp
jge
push
mov
mov
std
sar
jl
mov
aas
sbb
je
adc
jge
(bad)
jns
cld
sar
idiv
sbb
hlt
xor
shl
push
test
std
jne
cmc
outs
or
idiv
je
add
fs
pop
pop
add
add
ins
sbb
mov
(bad)
push
xor
ror
bound
add
cmp
mov
mov
iret
out
fwait
mov
fwait
sti
mov
xlat
inc
xor
call
call
adc
call
sbb
sbb
pop
pop
out
std
push
outs
and
in
mov
pushf
or
cmp
fisttp
mov
or
or
push
sti
push
aas
loopne
daa
xchg
fist
mov
push
push
daa
scas
push
push
fsubr
mov
mov
jmp
and
aas
cmp
outs
add
add
add
sub
jmp
sub
mov
inc
sti
jmp
outs
inc
lods
jp
dec
js
call
mov
jge
shl
push
push
test
cld
push
sbb
jmp
cmp
clc
mov
shl
inc
cld
fild
add
add
add
mov
movs
or
pop
jo
nop
call
jo
call
jo
mov
cmp
xchg
mov
clc
inc
pop
mov
push
sti
dec
jmp
xor
add
cmp
ds
add
test
inc
add
add
in
add
in
sti
push
hlt
frstor
ret
add
in
mov
add
je
scas
sbb
sub
enter
(bad)
push
add
jae
cmp
repz
inc
loopne
add
fs
(bad)
mov
fucomp
sub
add
jmp
ret
xor
je
xor
add
and
pop
cmp
(bad)
jle
adc
std
(bad)
imul
add
and
mov
(bad)
ds
je
add
imul
cmc
rcl
stos
adc
and
push
jp
cwde
fild
add
fdivr
push
stos
jmp
cmp
mov
or
mov
fcomp
add
jl
vmptrst
fsubr
cmps
add
add
jl
outs
pop
in
out
add
adc
or
clc
adc
cld
jmp
clc
test
add
fild
add
push
or
sub
cmp
push
(bad)
cmp
add
sub
das
std
jne
cli
outs
or
ret
cwde
pop
repz
add
add
mov
jmp
outs
sub
xchg
or
pop
mov
gs
stc
cld
inc
cld
jne
imul
shl
jmp
mov
std
jne
cli
aam
imul
das
mov
vpaddb
mov
cli
in
inc
and
in
xor
jmp
mov
add
and
xor
cld
push
call
pop
loopne
jne
fiadd
(bad)
stc
repz
adc
scas
pop
outs
inc
das
loop
(bad)
jne
dec
jmp
sbb
push
loope
sub
mov
xchg
inc
je
jmp
int3
cs
rol
jne
cld
push
fsub
xchg
sti
cmp
scas
stos
call
add
add
jmp
pop
add
jmp
jne
pop
inc
jmp
cmp
outs
add
xchg
cld
or
scas
(bad)
sbb
test
(bad)
loopne
sbb
add
rcr
add
cmp
dec
mov
mov
das
leave
and
sbb
add
xchg
sahf
sti
rcl
add
and
push
inc
std
hlt
jge
dec
in
xchg
cld
psubsw
jmp
xor
mov
xor
repnz
xor
je
sahf
fild
ss
cmp
and
mov
cmp
scas
adc
(bad)
movs
cld
jmp
add
ret
in
call
jmp
fild
add
add
sub
fld
add
adc
test
data16
jnp
sbb
push
push
push
add
call
sub
cmp
pop
sbb
ret
in
call
sub
cmp
cwde
push
inc
add
test
add
addr16
aas
xor
jg
and
or
imul
add
add
add
test
test
mov
aas
cmp
cmp
add
add
mov
je
mov
inc
add
add
or
aaa
add
rol
jne
sbb
(bad)
movs
not
xor
add
cmp
enter
aas
(bad)
jbe
add
xor
add
add
add
rol
imul
or
(bad)
add
scas
xchg
repz
inc
sbb
add
inc
vmread
push
mov
outs
ja
pop
or
add
out
cmps
rol
cmp
aaa
and
jbe
pop
repz
mov
or
inc
add
add
rol
jae
push
add
inc
fsub
inc
fs
aas
in
jbe
add
int
cli
jmp
push
ja
ss
mov
or
out
les
dec
cld
ss
push
add
mov
clc
adc
test
not
call
fcmovnu
add
ja
or
mov
and
jmp
add
repz
pop
cmps
add
mov
(bad)
jmp
fld
add
call
je
add
inc
and
push
and
por
shl
push
ja
ss
mov
or
out
test
and
push
add
add
addr16
cld
ss
and
and
mov
clc
add
jg
hlt
fadd
jmp
jg
jecxz
ret
and
call
es
add
stos
adc
(bad)
xor
call
push
mov
aam
(bad)
xlat
add
shl
pop
push
(bad)
fscale
ss
cmp
or
pop
std
sldt
add
call
sbb
cmp
and
add
mov
or
fstp
call
jmp
out
xor
add
je
aas
cmp
or
adc
hlt
push
mov
punpckhbw
clc
cmp
jl
pop
fisttp
mov
xlat
and
adc
fadd
and
cli
and
shr
dec
xchg
pop
fidivr
ror
stc
jns
pop
lea
sbb
(bad)
fadd
dec
fs
or
mov
pop
loope
adc
inc
sub
sbb
adc
mov
lea
add
add
add
mov
sti
push
sbb
enter
inc
mov
je
or
inc
movs
inc
cld
jne
push
ds
push
fst
stc
daa
jnp
xchg
and
jg
and
or
outs
daa
xchg
sub
cmp
jns
xchg
inc
je
jecxz
cmp
std
mov
ret
add
mov
add
dec
pop
(bad)
aam
ds
test
ss
or
and
loop
(bad)
std
mov
push
int
std
jle
or
stc
in
inc
in
in
mov
add
ret
xor
leave
cmps
outs
punpckhbw
cmp
add
int3
xchg
push
repnz
cld
xor
das
cmps
adc
xchg
aam
ror
outs
sbb
add
add
inc
outs
adc
push
mov
sub
jnp
arpl
ror
cmp
js
xor
lods
or
imul
neg
jg
inc
cwde
push
xor
outs
adc
(bad)
or
jns
std
jne
push
ds
push
(bad)
call
ja
adc
sub
les
and
push
add
ret
pop
or
mov
xchg
call
mov
jo
mov
push
add
cmp
repz
aam
mov
imul
inc
fs
aas
add
sbb
add
call
pop
out
cld
push
mov
stos
add
add
add
jns
cld
jne
and
pop
call
ja
adc
cmps
data16
push
jg
sub
mov
lea
punpckhbw
push
outs
and
push
push
jmp
add
call
pop
mov
push
mov
jge
(bad)
cli
je
add
add
adc
shl
(bad)
fistp
outs
aas
arpl
cmps
push
cmp
cdq
cmp
stos
add
adc
mov
mov
inc
xchg
bound
and
inc
daa
cmp
jo
mov
mov
imul
lock
add
(bad)
jmp
fst
add
add
clc
rol
add
cmovl
fstp
call
neg
or
aaa
cmp
outs
or
and
or
sub
dec
shl
je
loope
enter
sub
pop
jbe
xor
add
adc
pop
pop
pop
and
mov
jp
repnz
dec
jmp
outs
jg
sbb
add
hlt
loopne
xchg
fld
mov
cmp
cmp
lea
paddw
dec
push
push
jnp
adc
mov
call
sub
inc
arpl
iret
(bad)
outs
fisub
adc
jb
xchg
cmp
test
and
add
repz
xchg
out
or
je
mov
sbb
add
add
imul
mov
test
data16
pop
jo
mov
enter
mov
and
sub
add
push
repz
or
pop
fdivr
jne
adc
inc
or
(bad)
in
pop
pop
cmps
clc
cld
push
pop
cld
cmp
outs
add
sbb
ret
aas
xor
mov
ja
dec
movs
nop
adc
cmp
bound
iret
fisubr
add
add
xor
pop
or
or
pop
push
ret
test
xor
sti
addr16
cld
cmp
add
sti
call
pop
pop
mov
fwait
pop
add
sahf
inc
and
ror
dec
lock
enter
cld
jmp
mul
outs
sub
push
pop
sub
push
add
add
mov
pop
mov
and
test
clc
add
ja
push
push
pop
lahf
pop
adc
das
imul
je
cld
xor
test
les
sahf
pop
add
ds
jmp
inc
sbb
mov
imul
cmps
or
je
pop
ja
push
or
aas
(bad)
pop
sub
add
add
cmc
pop
mov
aaa
pop
or
xor
xor
call
arpl
cmc
fiadd
mov
push
add
sbb
movs
mov
int3
sub
push
add
cmp
fiadd
pop
addr16
fs
ja
push
jns
pop
fild
lea
mov
loope
or
add
add
fnstsw
ret
ja
mov
jmp
aas
add
cmp
mov
sub
dec
push
ins
inc
push
pop
lahf
pop
add
repz
mov
addr16
push
mov
js
(bad)
sub
ds
pop
fistp
test
cld
jmp
mov
cld
inc
add
add
add
mov
or
movs
fst
lahf
call
das
int3
jecxz
sti
jno
sbb
ret
or
call
das
push
push
ja
les
sub
sub
repz
mov
jmp
scas
and
cmp
clc
in
inc
hlt
test
jmp
add
repnz
psubsb
xchg
cld
call
jecxz
sbb
sti
push
std
call
lea
loope
cmp
ret
pop
add
cmps
jne
(bad)
js
add
adc
je
(bad)
lahf
pop
add
xrelease
cmp
lods
mov
dec
cdq
jbe
ret
mov
loop
add
add
test
mov
jecxz
xor
add
and
(bad)
cld
jmp
jecxz
push
and
(bad)
in
sti
push
cs
push
daa
das
jecxz
and
std
sub
retf
call
lea
mov
addr16
jne
pop
std
jno
and
jmp
and
mov
jae
jmp
jae
and
add
add
mov
jmp
fcom
add
(bad)
mov
xlat
mov
pop
mov
sub
jno
into
sbb
mov
pop
repnz
xor
mov
repz
shl
or
sub
sti
jmp
faddp
inc
add
add
mov
push
cmp
and
aas
jno
dec
mov
mov
icebp
outs
ds
mov
in
inc
adc
mov
jmp
fiadd
(bad)
test
push
or
mov
out
fwait
or
je
in
adc
jo
inc
fld
add
inc
push
dec
je
lea
dec
inc
add
add
and
push
repz
xchg
sub
jg
jecxz
js
hlt
fisttp
punpcklbw
inc
adc
fisttp
(bad)
call
pop
or
mov
add
and
std
add
fnstsw
retf
js
mov
pop
xor
pop
fiadd
adc
pop
add
add
sbb
ds
pop
idiv
lock
lds
hlt
fadd
add
loope
push
dec
sti
jmp
pop
je
cmc
add
cmc
inc
adc
icebp
ds
enter
cmp
je
push
jne
xchg
cmp
scas
adc
jmp
call
in
cli
mov
add
add
and
mov
imul
cmp
jg
jns
cld
adc
jmp
mov
mov
sbb
add
add
adc
inc
push
cmp
pop
cmp
outs
push
movs
mov
imul
repz
call
scas
or
inc
and
je
sbb
ds
call
stos
hlt
aas
push
test
cld
aas
or
or
push
dec
pop
push
sub
pop
jbe
jne
lock
fstp
jae
ret
add
mov
ret
xchg
loop
xor
add
hlt
call
add
add
in
outs
jl
aas
inc
out
jb
cs
pop
fwait
jnp
add
ds
sahf
jecxz
out
mov
add
loopne
cs
test
mov
jmp
fucompp
jp
loopne
jne
xlat
fsubr
in
or
bound
cmp
mov
inc
aaa
and
mov
outs
ja
push
imul
add
add
add
mov
push
jb
inc
sub
adc
sub
push
jbe
cld
jne
adc
sbb
add
pop
xor
cld
jne
daa
cld
jne
nop
sti
addr16
push
cld
inc
jg
xchg
test
add
mov
movs
sub
int3
pop
imul
inc
or
mov
loopne
or
add
add
ficom
jbe
cld
dec
ds
aaa
and
movaps
cli
jmp
cli
push
lock
imul
das
pop
or
mov
leave
jmp
push
fbld
push
jne
pop
add
fadd
hlt
scas
sub
push
adc
jae
inc
add
add
fadd
mov
mov
xlat
hlt
fadd
data16
pop
je
mov
inc
sub
fadd
add
xor
and
rol
xchg
mov
and
fs
or
loop
add
std
xor
jmp
neg
xchg
daa
imul
loope
repz
scas
ins
cld
xor
adc
sti
test
mov
jmp
dec
xchg
inc
xor
mov
call
sti
sbb
call
pop
jbe
(bad)
fwait
mov
icebp
aaa
gs
out
mov
sbb
cs
mov
push
mov
gs
jne
mov
add
dec
and
jne
pop
mov
les
jge
outs
or
push
data16
inc
inc
fistp
or
pop
and
call
ja
pop
call
sub
add
mov
add
popf
sub
out
lock
std
call
and
movs
pushfw
sti
imul
inc
cmp
sbb
or
std
(bad)
mov
sti
push
xor
xchg
inc
jmp
sbb
pop
inc
and
rcl
pop
leave
daa
xchg
push
int3
les
or
pop
(bad)
jne
push
shr
and
outs
repz
add
add
add
fild
add
cmp
nop
data16
xchg
std
mov
xchg
outs
ret
and
add
fld
add
cmp
cli
pop
cmps
dec
and
(bad)
fadd
mov
add
xchg
sub
mov
pop
or
mov
imul
jg
add
add
xor
sbb
jp
call
in
call
sti
fcom
add
sbb
mov
sub
add
cdq
adc
jne
pop
outs
or
repnz
pusha
mov
jmp
mov
outs
rcr
add
sub
add
add
jmp
sbb
or
jecxz
and
add
or
and
jmp
xlat
inc
je
sti
pcmpeqb
call
pop
fisttp
jg
js
or
loopne
add
or
rol
sbb
fild
add
add
add
add
in
ror
xchg
add
push
mov
retf
rcl
shr
lock
mov
(bad)
ror
fisttp
adc
jne
pop
shl
push
or
mov
or
ror
aaa
mov
mov
add
add
mov
push
dec
movs
cld
adc
mov
outs
mov
sub
and
add
hlt
mov
ins
repz
and
pop
ret
push
jp
ret
outs
sbb
inc
or
jo
cmp
imul
jb
pop
mov
icebp
xor
jg
and
in
add
add
gs
add
cs
sar
enter
outs
or
scas
call
jmp
(bad)
iret
pushf
xchg
js
mov
mov
add
push
sbb
adc
add
add
mov
rol
xor
mov
add
add
stc
push
out
sub
cmp
addr16
sti
out
sub
(bad)
jnp
add
mov
or
push
mov
cmp
push
(bad)
mov
out
sbb
mov
mov
fadd
addr16
inc
cmp
outs
and
mov
repz
sub
sub
cld
jmp
push
push
add
add
pop
adc
or
add
pop
xchg
cld
push
adc
jg
pop
pop
cmps
xor
push
int3
cmp
call
push
jbe
pop
sbb
hlt
or
mov
test
fild
mov
add
outs
pop
or
xchg
xchg
xrelease
or
push
add
add
popa
mov
jmp
fld
or
xchg
idiv
adc
add
cmp
push
(bad)
and
outs
aam
loopne
xchg
sti
mov
pusha
pop
push
ret
les
sub
mov
mov
mov
push
jbe
dec
(bad)
call
pop
add
add
addr16
cld
push
das
mov
inc
lods
push
ret
add
lea
add
push
rol
cmp
dec
(bad)
push
out
push
cld
push
mov
or
into
push
cld
call
mov
(bad)
std
cmp
jmp
cld
call
add
add
rol
add
add
outs
fs
ret
call
mov
add
xor
add
mov
cmp
ret
pop
xchg
add
outs
pop
mul
add
jns
imul
rol
push
cld
mul
add
cdq
ret
arpl
add
add
add
xor
test
cdq
fld
jmp
and
fiadd
add
pop
or
lahf
push
cmp
cdq
sti
cmc
cmp
sti
jae
mov
adc
addr16
cmp
ss
jbe
das
sub
push
mov
mov
and
add
mov
or
add
add
xchg
mov
add
push
fadd
fcomp
in
sub
mov
xor
push
mov
imul
cdq
fild
xor
fucomi
imul
int3
out
imul
rol
fadd
cmp
fadd
sub
lds
into
and
add
add
ds
add
in
sbb
int3
adc
inc
fwait
add
movs
cld
pop
jmp
xchg
(bad)
cmp
cld
call
fistp
cld
push
xor
call
dec
sbb
mov
add
add
cld
clc
in
adc
aas
lds
popf
test
fldenv
fdivrp
rcl
xor
mov
outs
pop
(bad)
sbb
jmp
push
and
cmp
cld
jmp
mov
push
push
mov
fucomi
jge
mov
or
add
add
je
push
push
fbld
add
mov
jle
add
pop
in
add
and
dec
sti
popf
jmp
in
movs
sbb
sahf
add
clc
add
mov
stos
retf
fisubr
mov
push
add
movs
push
push
cli
mov
movs
int3
add
add
add
mov
adc
movs
add
mov
push
movs
(bad)
inc
js
outs
adc
(bad)
data16
std
jne
mov
adc
les
or
jle
xor
xchg
add
mov
sbb
nop
fiadd
call
lahf
xchg
addr16
bound
jno
pop
in
movs
or
movs
mov
add
ins
add
jno
fdivrp
shl
test
add
ins
bound
je
fstp
(bad)
add
mov
push
cwde
xor
ins
fdivrp
add
sbb
movs
cld
xor
jle
leave
mov
or
(bad)
fstp
aas
in
movs
mov
test
or
add
iret
mov
inc
sbb
aam
rcr
mov
neg
cmp
mov
mov
lods
or
pop
cmp
xor
lea
lods
dec
jmp
aam
shl
pop
movs
fcom
sub
mov
ins
fdivrp
xchg
jo
add
(bad)
xor
in
ret
psubd
cli
inc
add
add
(bad)
jmp
mov
test
sti
push
sbb
or
or
aad
add
ja
jle
leave
movs
cld
jmp
xor
push
mov
movs
dec
call
cmps
sbb
or
add
lahf
dec
push
pop
fld
add
cmp
rcl
dec
push
ror
pop
in
adc
add
add
cmp
(bad)
xor
pop
cmc
(bad)
(bad)
push
fdivrp
adc
push
lea
or
mov
inc
fdivrp
repz
(bad)
sbb
adc
jmp
fild
add
pop
aas
in
adc
jmp
mov
cld
jmp
adc
inc
add
add
adc
push
push
test
mov
fdivrp
ret
das
imul
pop
(bad)
in
adc
or
mov
fnstcw
add
std
add
fdivrp
test
stc
cld
push
fidiv
in
adc
xor
jne
(bad)
cmp
add
add
sbb
fisttp
pop
pop
std
or
mov
inc
or
std
add
adc
call
je
rcr
push
repz
repz
stos
add
add
push
jle
leave
adc
punpckhwd
jle
fst
std
add
rcr
in
adc
jae
add
in
jle
add
add
mov
std
call
in
jns
test
cld
jmp
cmp
fs
test
cld
inc
fldcw
in
jns
inc
leave
paddw
mov
idiv
repz
mov
mov
cli
cld
jmp
add
push
neg
add
sub
adc
test
neg
add
rcl
xchg
or
test
fadd
mov
dec
fdivrp
xchg
inc
inc
adc
fsubr
push
pop
shl
in
or
std
push
ret
repz
sub
push
fdivrp
ret
pop
jle
leave
or
cmp
jb
in
or
std
(bad)
mov
add
add
pop
outs
adc
arpl
in
or
cld
test
std
jmp
jmp
fdivrp
repz
mov
leave
or
jmp
fild
jb
(bad)
ror
xchg
shr
pop
jle
leave
or
push
neg
mov
std
push
das
in
xor
or
cwde
ss
sti
test
inc
jbe
add
add
add
repz
leave
or
cmp
fimul
jmp
ss
(bad)
std
cmp
or
call
fdivr
or
std
or
or
add
sbb
add
test
inc
leave
or
or
sub
add
add
popa
pop
inc
in
or
dec
mov
inc
mov
and
call
or
add
add
jmp
frstor
lahf
test
test
(bad)
cld
jmp
jle
(bad)
inc
fs
mov
or
add
fcom
lea
aaa
shr
add
add
(bad)
jle
or
std
push
aaa
aad
dec
leave
or
push
outs
jecxz
xor
or
cwde
ss
test
fld
mov
xor
jg
mov
pop
mov
add
adc
jle
cdq
or
cmp
lock
(bad)
fstp
cli
push
adc
ja
(bad)
add
mov
cld
sub
dec
fdivrp
adc
lea
sub
dec
xor
aaa
mov
push
mov
cmc
int
in
add
into
dec
pop
stc
or
imul
rol
std
push
add
mov
fdivrp
xor
xor
add
add
cs
push
icebp
pop
jmp
repz
lea
cwde
bnd
xor
clc
movs
sar
std
fs
adc
scas
cmps
cmp
inc
pop
xchg
add
data16
add
lds
arpl
lock
push
outs
gs
repz
(bad)
jmp
add
add
fs
sub
add
cmp
add
movs
ss
mov
pop
fdivrp
add
lock
jle
mov
std
sub
dec
fdivrp
add
jle
mov
std
cmp
add
dec
inc
imul
rol
dec
call
add
push
dec
cld
adc
test
add
add
add
jmp
jle
sbb
std
jmp
add
movs
jbe
sti
mov
fdivrp
ret
pop
mov
leave
add
add
jl
mov
mov
es
and
mov
cli
cld
call
hlt
call
(bad)
mov
sti
jmp
xor
inc
cld
mov
sti
cld
(bad)
(bad)
popa
inc
add
add
es
in
add
add
mov
mov
push
xor
cdq
fidiv
rcr
jecxz
xchg
(bad)
cld
(bad)
xor
add
and
mov
adc
and
pop
ret
dec
fmul
call
pop
sub
ret
add
outs
xchg
div
mov
(bad)
cld
leave
ja
or
sbb
add
add
add
or
add
jp
xchg
add
bound
add
add
add
out
std
jmp
pop
(bad)
cmp
push
push
cmp
xchg
ds
push
add
mov
les
cmp
sub
cmc
dec
adc
add
sub
repnz
popa
loope
loopne
sbb
mov
pop
in
mov
add
dec
aad
and
cmp
push
cmp
add
call
out
std
jne
add
add
ret
push
fwait
pop
mov
cld
call
call
pushf
sti
or
call
fnstsw
or
lds
add
add
push
std
push
out
add
and
mov
lock
add
push
jecxz
sbb
or
sbb
jl
repz
or
(bad)
jne
repz
popa
rol
lds
fstp
add
addr16
jmp
(bad)
sahf
cmp
lock
cmp
push
fsubrp
jno
add
(bad)
movs
push
sti
inc
add
add
jecxz
mov
std
sub
jmp
stc
jns
aaa
(bad)
aam
ds
or
push
scas
push
or
mov
fdiv
repz
add
push
mov
mov
sbb
sub
mov
(bad)
clc
add
pop
xor
seto
sti
test
xchg
inc
add
add
in
ds
fadd
in
loop
adc
sti
or
or
pushf
sti
or
cld
(bad)
cmp
push
add
or
mov
add
ret
sar
call
lods
xchg
mov
test
call
inc
lock
cmp
add
inc
add
add
sub
inc
lock
rol
add
or
add
xor
jae
rol
ja
imul
cwde
mov
stc
into
out
in
outs
or
ret
jae
push
pop
addr16
push
aas
in
push
lods
sub
mov
pop
mov
icebp
popa
pusha
repz
push
shr
push
mov
add
add
xchg
call
push
mov
pop
scas
push
ror
fdiv
ror
leave
bswap
fisub
xor
jnp
(bad)
cwde
xlat
dec
jne
dec
mov
data16
call
push
pop
or
pop
jmp
mov
sar
or
add
ins
jle
sbb
sub
add
add
imul
lock
jg
cmc
and
bound
dec
xchg
les
(bad)
add
fs
and
out
xlat
aaa
add
pop
inc
push
add
outs
add
shl
pop
ror
fadd
inc
adc
cld
call
sar
in
sbb
lahf
mov
cdq
(bad)
out
add
add
loopne
xor
aaa
leave
ds
ins
sbb
mov
clc
push
pushf
sub
ret
xor
and
xchg
pop
cmpxchg
cmc
push
xor
mov
enter
sub
mov
lfs
movs
fild
(bad)
(bad)
dec
cld
in
sbb
pop
fistp
test
jb
push
call
add
cwde
fdiv
shl
ret
add
add
int3
push
cld
push
mov
xor
test
dec
push
icebp
sbb
fst
mov
repz
aaa
(bad)
cld
push
jg
mov
les
daa
sbb
(bad)
jae
pop
mov
xor
mov
inc
sub
out
je
aas
mov
or
fcmovnb
inc
movs
iret
sti
jmp
add
add
add
add
pop
aas
adc
fild
shr
jo
out
mov
sub
add
sar
or
dec
sub
inc
xor
sti
push
stc
mov
inc
sbb
inc
add
pop
aas
adc
shr
mov
lds
or
dec
inc
or
or
sbb
mov
add
add
pop
mov
add
retf
inc
and
dec
inc
or
dec
mov
scas
loop
gs
inc
or
(bad)
push
fadd
push
out
mov
ror
add
ins
les
jmp
pushf
inc
and
inc
test
call
test
outs
pop
mov
push
or
add
add
popa
inc
or
mov
dec
in
pop
inc
or
mov
je
pop
inc
or
pop
add
add
sub
mov
cmp
inc
mov
add
or
mov
pop
cmp
and
ja
sbb
out
std
cmp
mov
add
add
add
or
mov
popa
sbb
scas
aad
add
fadd
and
arpl
cmp
js
cmp
cdq
mov
popa
sbb
cmovbe
add
or
test
cmp
mov
ja
jmp
or
add
test
sti
cld
add
add
stc
xlat
add
sub
pop
adc
mov
jp
loope
adc
fldenv
or
or
mov
push
ds
jp
loope
ror
push
iret
mov
pop
(bad)
cmps
xchg
add
sbb
sti
mov
xlat
pop
xor
ds
sbb
ror
jecxz
add
add
add
outs
pop
add
sub
jecxz
jmp
push
dec
loopne
jne
sti
push
dec
ss
mov
xlat
repnz
lods
dec
outs
add
xor
mul
xlat
or
and
add
fild
or
add
pop
outs
add
mov
add
pop
cmp
mov
repz
call
adc
ins
ins
and
and
sbb
repz
push
add
fld
mov
clc
or
sar
push
add
fld
jmp
cmp
add
stc
add
ins
push
dec
sbb
dec
jne
cmp
and
add
movs
fldl2t
or
shl
ret
add
popa
fld
add
cmp
sbb
jae
(bad)
fsub
sbb
not
push
scas
hlt
imul
cdq
inc
cld
jne
cld
outs
adc
outs
pop
call
in
cmp
push
ret
outs
cld
dec
mov
pop
out
jg
add
sub
mov
pop
in
daa
push
outs
cld
jl
je
add
add
cmp
or
jecxz
test
(bad)
hlt
jmp
dec
aam
push
sbb
or
dec
imul
xchg
add
ret
jae
cdq
add
inc
xor
or
add
call
mov
push
mov
push
lahf
outs
push
push
fadd
and
xor
add
add
and
add
mov
sar
out
jg
pop
fmul
pop
int3
inc
hlt
jmp
call
dec
mov
adc
aam
mov
add
(bad)
sub
pop
fsubr
aam
push
mov
fsubr
push
int
mov
add
(bad)
call
xlat
add
sbb
aas
add
push
aas
add
clc
std
jmp
int3
fmul
add
sbb
adc
pop
rol
fidiv
test
jg
shr
cmp
or
inc
fsub
mov
iret
sti
jmp
add
push
and
imul
movs
push
inc
clc
popa
and
add
add
jne
idiv
xchg
pop
mov
sti
add
jbe
xchg
sbb
mov
fwait
push
pusha
cs
jmp
fsub
sbb
jmp
sub
mov
and
pop
ret
adc
fdivr
call
and
mov
push
jns
outs
add
retf
pop
push
lock
xlat
jnp
add
add
rcr
add
je
addr16
fild
stc
or
loopne
and
jmp
fisttp
je
jae
call
in
pop
pop
cld
add
cli
sbb
adc
cmc
inc
je
outs
or
jecxz
ja
add
imul
xor
cmc
pop
xor
mov
(bad)
jns
out
add
add
xchg
aad
jae
pop
sbb
jg
cmc
sub
in
add
fadd
add
in
(bad)
in
sti
push
add
ror
add
mov
push
(bad)
xor
ret
pop
fdiv
fucompp
push
dec
xlat
je
(bad)
fcomp
addr16
shl
add
mov
ror
mov
xor
pop
(bad)
add
adc
je
sbb
clc
popa
push
ds
xchg
outs
pop
mov
hlt
mov
dec
ds
lahf
sbb
mov
mov
lea
hlt
jg
sbb
sbb
push
(bad)
jne
push
outs
loopne
sbb
call
add
add
popa
sbb
push
pushf
add
add
outs
pop
(bad)
daa
call
fistp
mov
inc
mov
arpl
rcr
add
dec
xor
mov
cdq
shr
pop
adc
cld
fnstsw
add
nop
ror
and
sar
add
loop
adc
sbb
add
(bad)
pop
add
add
fmul
out
adc
pop
(bad)
push
cld
jne
jo
out
jecxz
jmp
pop
pop
cmps
out
add
push
add
sbb
(bad)
add
aas
or
adc
in
mov
out
les
mov
push
addr16
dec
out
and
jmp
lds
add
add
jle
inc
mov
jae
repnz
cld
add
add
mov
pop
rcl
inc
sbb
jo
sbb
push
lea
pop
dec
call
addr16
adc
pop
shr
jo
in
sub
cmp
movs
dec
sub
pop
cmp
inc
add
add
lods
pop
out
jno
pop
adc
rcl
inc
je
sbb
addr16
push
int3
data16
call
push
mov
call
sti
cmp
push
fadd
call
fld
fnsave
push
pop
scas
adc
loopne
adc
mov
mov
push
cld
push
jg
dec
push
int
mov
add
add
add
ins
sbb
mov
dec
xor
cmp
inc
dec
ds
rcr
repz
addr16
cld
push
das
hlt
dec
push
das
sbb
fucomp
iret
mov
add
jns
add
je
fild
fmul
rcr
(bad)
xor
repz
daa
push
cld
push
fcomip
xor
mov
pop
add
jl
ds
dec
or
add
add
adc
mov
jne
test
pop
xchg
sahf
mov
cwde
repz
fbld
enter
jne
test
jmp
xchg
jmp
in
bound
ins
dec
adc
jmp
fild
lods
ins
add
(bad)
jmp
cld
push
pop
add
out
mov
jmp
xor
add
add
fnsave
push
pop
test
sti
call
sar
sysenter
dec
(bad)
cmp
jae
mov
repz
cmc
les
(bad)
xor
push
call
adc
jl
imul
call
outs
add
and
add
jp
adc
ficom
rcl
sti
dec
outs
push
add
add
push
adc
sti
jg
fisub
jmp
ins
dec
push
jno
pop
call
neg
(bad)
fdiv
jnp
push
movs
icebp
pop
and
jmp
call
sahf
jmp
pop
xor
add
daa
fiadd
mov
adc
fwait
mov
pop
arpl
push
scas
bnd
and
mov
add
add
cdq
fs
rcl
fcmovnb
loopne
inc
shl
in
cmc
mov
jge
fs
and
and
in
rol
jp
or
mov
sub
loope
mov
pop
ror
nop
outs
dec
mov
call
or
add
retf
inc
je
push
or
out
or
xrelease
add
and
sti
fcom
cld
cmc
shl
fist
retf
inc
xor
push
clc
scas
out
add
in
out
sbb
cmc
cwde
mul
fcom
pop
mov
cmp
sub
sti
out
push
cld
inc
pushf
xor
sbb
inc
mov
jecxz
shr
fbstp
and
sldt
add
inc
jae
jmp
mov
mov
xor
add
and
or
cmp
xor
daa
adc
call
imul
mov
(bad)
jns
std
call
int
or
mov
outs
push
sahf
xor
cmps
mov
push
jg
dec
push
outs
and
push
outs
push
add
sub
mov
jb
mov
retf
jecxz
int3
retf
or
cmp
or
or
jmp
add
movs
fisttp
dec
add
and
dec
call
dec
(bad)
jns
mov
ds
jmp
lahf
xchg
test
jg
mov
dec
call
dec
(bad)
int3
mov
lahf
repz
add
add
and
sti
or
mov
xor
pop
sbb
outs
and
mov
int3
pop
pop
mov
js
inc
hlt
shl
ror
or
mov
fsubr
aaa
cmp
dec
pop
call
aaa
inc
sti
out
jae
jmp
add
movs
fimul
shl
xor
sub
jl
daa
dec
add
add
rcr
sti
jno
fcomp
push
ror
cmp
movs
dec
inc
movs
sti
or
add
jae
push
sbb
sub
add
adc
clc
mov
in
dec
(bad)
ror
mov
jecxz
inc
xor
pusha
fiadd
cmp
mov
or
test
les
lods
fld
add
jb
push
add
add
sti
xlat
xchg
xor
pusha
leave
call
lahf
call
call
jno
mov
ficomp
add
dec
pop
dec
cld
jne
int3
outs
or
dec
add
jge
cld
push
add
sbb
sub
cld
(bad)
sti
fadd
add
call
mov
fadd
pop
inc
loopne
pushf
ds
add
add
repnz
(bad)
(bad)
add
hlt
mov
fsubr
fucomi
jge
cld
jmp
mov
push
ror
and
cmp
mov
push
call
fadd
xor
cmp
jo
cmp
inc
inc
jecxz
cmps
in
push
jp
push
push
sub
add
xor
call
add
cld
sub
xor
pop
inc
mov
mov
sbb
std
loop
or
(bad)
in
inc
and
fild
repz
fild
ins
shl
idiv
xor
and
push
cmp
cld
push
das
rol
mov
fdiv
fucomi
mov
adc
out
adc
and
cmp
add
add
push
mov
add
and
cmp
dec
add
shl
cld
jg
inc
jecxz
cmps
loop
push
adc
push
xlat
push
das
add
add
mov
jmp
loop
sbb
or
jmp
jmp
dec
xor
test
add
pop
mov
adc
loopne
jmp
js
rol
add
sbb
cmp
or
cmp
cli
xor
push
cli
iret
adc
loopne
les
loopne
add
clc
push
inc
mov
aaa
adc
outs
pop
push
add
pop
mov
int3
outs
xor
in
sub
cwde
push
inc
push
and
imul
mov
call
mov
(bad)
loop
test
add
add
sbb
adc
(bad)
jl
mov
and
je
cwde
sti
add
fld
cmp
int3
or
or
cld
jmp
sbb
adc
or
jb
push
out
push
push
mov
adc
push
pop
mov
sub
nop
sub
cmp
pop
sub
pop
pusha
xor
ret
(bad)
mov
add
add
mov
cld
adc
mov
jns
test
and
(bad)
ja
call
and
rsm
jg
call
ins
push
push
or
pop
push
mov
or
je
call
mov
push
outs
aam
add
dec
ud0
sub
jne
in
or
arpl
push
mov
inc
mov
add
add
pop
add
clc
cmp
dec
test
or
jne
mov
(bad)
xor
and
dec
call
popf
jg
clc
ror
or
cld
push
daa
mov
push
scas
rcl
add
adc
cmp
inc
or
mov
call
pop
cmp
jge
fdivr
mov
ins
mov
ficomp
pop
inc
add
add
aaa
push
lock
add
ja
add
sbb
inc
(bad)
add
fxsave
jmp
xor
call
dec
adc
add
cld
jmp
and
jne
scas
int3
mov
rcr
repz
jge
fstp
mov
push
ret
out
loope
mov
pop
out
data16
mov
inc
pushf
add
mov
add
add
mov
push
mov
(bad)
jns
xchg
popf
mov
mov
jge
lahf
std
shl
add
scas
(bad)
std
shl
add
scas
retf
std
jae
add
scas
ret
std
and
push
(bad)
jecxz
test
pop
cs
mov
add
add
shl
sub
in
les
mov
shl
cld
add
(bad)
cld
push
out
cld
jmp
or
pop
inc
jns
push
call
ins
mov
cmp
in
jecxz
push
jg
and
mov
rcl
mov
mov
aam
add
add
add
xlat
mov
jp
pop
jg
test
adc
das
icebp
and
call
js
fucomi
sub
jmp
inc
or
test
cld
inc
cwde
cmp
arpl
mov
lods
lods
sar
repz
test
cld
(bad)
mov
in
test
aad
call
add
adc
jg
rep
dec
or
fadd
movs
push
jle
rcl
cld
mov
idiv
shl
adc
fadd
mov
fist
loope
mov
loopne
sbb
adc
(bad)
call
add
inc
sbb
imul
rcl
cld
cmp
and
cld
push
add
add
cmp
arpl
std
and
cmps
or
or
inc
aad
test
pop
mov
test
aad
jmp
retf
std
repz
test
aam
jmp
ret
std
shl
loop
fstp
add
push
popf
sub
dec
inc
or
je
fucomip
outs
and
outs
adc
mov
add
jns
add
cld
jmp
mul
(bad)
call
mul
cli
call
in
jmp
add
jnp
xor
jecxz
cmp
into
idiv
add
jecxz
sub
add
dec
rep
jl
jge
(bad)
std
shl
jle
add
add
repz
or
fiadd
(bad)
call
loopne
jmp
aas
stos
(bad)
std
xchg
loopne
shr
add
sbb
loope
int3
ins
fiadd
or
idiv
repz
sar
mov
call
idiv
adc
jecxz
repz
inc
call
fiadd
call
(bad)
mov
and
mov
(bad)
popf
or
xor
xchg
add
push
add
hlt
pop
stc
dec
sbb
cli
cmp
aas
cmp
sbb
je
sub
add
cld
add
sti
jmp
addr16
sbb
lea
cld
inc
add
add
(bad)
std
sar
ins
fld
and
idiv
adc
add
repz
and
xor
add
adc
addr16
xchg
add
cld
add
mov
ss
pop
hlt
fdivr
cmp
cmp
jne
daa
mov
cld
inc
add
add
idiv
cmp
fsub
fdivr
int
aam
fadd
cmp
int3
test
jnp
add
int
les
add
int
mov
cmp
test
int
lods
cmp
add
repz
cld
(bad)
push
test
and
push
cld
cmp
inc
add
add
mov
std
repz
push
push
lea
jns
std
call
xor
neg
les
cld
test
mov
jnp
call
(bad)
call
lea
mov
out
pavgw
add
je
test
fild
or
pop
pop
add
add
fild
add
pop
add
gs
adc
scas
pop
dec
ins
scas
or
retf
sub
add
push
fiadd
add
std
rcr
or
popa
mov
add
hlt
std
sbb
add
xor
call
fdivr
cmovno
add
movs
adc
push
je
add
xlat
fld
add
pop
lock
rcr
xor
je
pop
test
fild
add
push
lock
adc
add
xor
jmp
imul
lock
xor
add
adc
or
and
(bad)
call
std
fdiv
lods
fdivr
call
mov
std
add
add
rcr
adc
in
mov
das
pop
cld
mov
cmp
test
sub
add
fmul
jmp
(bad)
jmp
jnp
fld
or
pop
test
fiadd
add
pop
test
(bad)
(bad)
jl
pop
test
add
add
sub
call
leave
or
and
mov
je
retf
scas
inc
lock
fadd
lea
std
call
(bad)
lea
hlt
aaa
jecxz
and
in
shl
test
and
add
aas
cld
sbb
hlt
std
adc
cld
push
add
add
std
add
add
shl
test
(bad)
dec
out
add
fs
inc
and
cld
jmp
xchg
add
std
mov
std
call
loopne
add
in
add
je
pop
idiv
enter
add
fild
jmp
addr16
std
xchg
and
jmp
xchg
sbb
inc
add
add
movs
push
test
xchg
and
push
mov
call
fild
or
add
loope
fistp
dec
ror
mov
and
jmp
imul
jnp
mov
fild
idiv
pop
mov
cwde
mov
lea
idiv
add
add
hlt
fadd
add
mov
mov
das
jno
shl
test
jecxz
sbb
and
test
or
aas
pop
fdivr
and
mov
add
call
push
inc
stc
outs
std
push
fiadd
add
add
fidivr
les
idiv
mov
test
shl
test
add
add
mov
std
push
sub
add
add
xor
test
aaa
retf
add
jne
je
pop
jne
sbb
add
fld
jmp
in
call
jmp
add
add
movs
lahf
inc
mov
std
inc
fld
push
jl
dec
inc
add
add
push
xchg
out
add
neg
pop
lods
std
repz
bound
jmp
pop
in
rcr
mov
fild
or
pop
call
add
aas
clc
lods
pop
mov
adc
add
test
ins
std
push
(bad)
div
jecxz
mov
call
dec
mov
add
and
push
xchg
push
std
and
test
pusha
call
arpl
std
adc
fild
add
and
add
lea
je
div
int3
shl
jle
ror
cmp
stos
sbb
add
add
adc
std
call
mov
leave
sbb
inc
hlt
xor
pop
repz
mov
pop
cmp
jne
jne
lock
shl
add
in
cmp
jae
jmp
mov
std
inc
and
jmp
push
call
cld
add
dec
dec
arpl
jnp
rol
add
add
add
jmp
stc
add
fs
test
and
pop
test
pop
movs
std
adc
add
jmp
mov
std
push
sbb
rcl
and
add
fiadd
jmp
fwait
sbb
adc
fiadd
test
and
push
sbb
je
add
add
cmp
and
shl
dec
push
popf
cld
jmp
shr
adc
pushf
cld
mul
xor
xor
push
mov
mul
add
test
xchg
out
fsub
pop
(bad)
lock
add
test
ficom
mov
scas
cli
xor
add
add
pop
mov
add
mov
jmp
fld
add
es
jnp
add
movs
fnstcw
test
mov
pop
sbb
ret
cdq
(bad)
test
jmp
jmp
and
test
dec
add
loopne
and
cdq
add
add
cmps
mov
sbb
scas
call
pop
shl
and
mov
push
clc
mov
mov
std
push
push
push
dec
fbld
inc
xlat
lock
std
shl
add
fmul
jmp
and
bound
sbb
push
cmp
lods
dec
inc
std
call
and
add
jne
inc
jmp
(bad)
pop
sub
push
movs
cwde
test
dec
sub
test
and
push
pop
jecxz
jmp
sbb
inc
xor
test
icebp
and
mov
xor
dec
mov
add
test
cdq
sub
test
adc
loopne
repz
pushf
adc
push
loop
pop
cmc
fild
mov
std
inc
add
add
dec
add
mov
je
push
aam
xchg
adc
je
pop
test
xchg
adc
sub
test
mov
mov
inc
test
rcl
test
icebp
and
call
lds
sub
cs
push
or
or
jmp
rcr
add
add
adc
dec
push
pop
push
cmc
add
jnp
loopne
mov
icebp
adc
mov
bound
lea
std
call
adc
test
je
call
jne
cmps
dec
push
popa
test
adc
imul
pop
or
push
sbb
mov
std
call
fild
inc
add
add
mov
xor
call
sub
lea
sbb
mov
idiv
push
ds
ja
adc
imul
(bad)
jns
std
call
bound
(bad)
icebp
or
fdivr
test
add
add
dec
add
add
call
(bad)
in
add
push
(bad)
jmp
add
hlt
ror
pop
add
jl
sbb
add
data16
push
popa
test
icebp
maskmovq
or
or
rol
call
fnsave
inc
lods
std
add
test
rcr
pop
mov
std
call
cdq
sti
xchg
cld
call
cdq
mov
mov
cmc
xchg
or
idiv
or
push
daa
dec
sar
or
fiadd
or
push
mov
fadd
add
or
mov
fs
add
repz
pusha
jo
add
add
cwde
test
adc
push
pop
inc
sbb
mov
idiv
frstor
cmp
adc
add
loop
add
jecxz
add
jecxz
add
adc
mov
adc
jne
jmp
mov
daa
add
je
pop
clc
inc
add
add
or
call
mov
pop
test
test
pop
out
inc
sbb
div
clc
(bad)
cwde
out
or
cli
push
sar
shl
fiadd
psraw
sbb
sbb
or
dec
push
sbb
add
mov
add
add
pop
imul
(bad)
mov
pop
mov
mov
jns
jb
je
iret
idiv
jb
je
mov
or
mov
or
adc
jle
lea
fucom
test
scas
loope
cvttps2pi
je
fs
inc
jb
mov
or
add
add
movs
add
adc
jp
cmc
xchg
ds
and
jmp
cwde
not
xor
dec
mov
fsubr
fstp
cmps
adc
push
jne
cwde
inc
or
push
pop
mov
mov
dec
add
imul
rcr
in
add
mov
add
pop
mov
or
sub
jo
push
sbb
out
xchg
inc
lock
jecxz
add
je
outs
sahf
lock
add
pop
stc
add
cmp
test
xor
pop
or
jae
push
adc
call
not
cmp
add
add
test
xor
xchg
adc
rcr
pop
gs
add
dec
int3
pop
popa
jo
aaa
pop
inc
add
test
and
pop
cld
mov
add
pusha
jo
pop
enter
idiv
add
sar
pop
push
xchg
movs
scas
div
xchg
inc
lock
add
dec
(bad)
in
add
shl
or
mov
xor
jae
jecxz
aas
add
xor
jne
add
jl
idiv
adc
adc
pop
int3
int3
mov
push
int3
int3
and
int3
out
call
pop
push
or
or
idiv
loope
add
add
pop
out
fs
jmp
xlat
lahf
call
lahf
sbb
add
push
mov
mov
push
push
cmp
les
sbb
int3
int3
sub
or
fs
leave
call
pop
fld
mov
sbb
cmp
add
mov
cli
mov
add
add
or
leave
daa
xchg
not
sti
jp
pop
stos
dec
call
das
shl
add
sbb
add
and
xor
xchg
stos
or
mov
add
cmps
bound
cmps
xor
or
les
adc
add
dec
add
addr16
add
xor
add
add
fwait
add
je
das
call
addr16
add
inc
mov
fld
add
mov
push
jge
ins
xchg
inc
call
or
(bad)
push
neg
pop
shl
or
xchg
pop
std
jmp
call
fcomp
and
in
sub
jl
cld
(bad)
cmp
add
fwait
call
add
stos
clc
push
cmps
push
lea
add
push
jae
adc
jmp
ret
idiv
aaa
sbb
test
outs
adc
pop
mov
add
dec
dec
stc
and
pop
jge
je
dec
add
add
xchg
add
in
sbb
xor
fadd
fdiv
scas
call
sub
mov
ret
mov
div
xor
pop
xor
cmp
(bad)
in
and
add
test
stos
xor
div
mov
and
fsubr
sub
pushf
fcom
add
add
dec
push
mul
push
lea
or
sub
in
lea
or
push
les
sbb
clc
xor
xor
fwait
in
xchg
mov
push
mov
cli
je
ret
pop
call
or
jo
lods
add
fmul
inc
in
cmc
jge
test
add
sub
je
mov
add
pusha
jo
enter
add
pop
xlat
inc
push
call
ins
sbb
add
add
test
lods
xor
div
(bad)
jge
rol
call
loope
fcom
pop
dec
push
cmps
cmps
dec
lea
push
lea
push
call
cdq
in
add
lods
into
in
lea
dec
push
cld
jmp
add
pop
les
cli
into
in
add
jnp
in
adc
and
je
outs
into
in
inc
mov
push
mov
cli
je
rcr
fild
jo
scas
add
mov
inc
in
movs
jle
imul
xor
je
rcr
fadd
jo
add
add
mov
pop
pop
inc
push
call
sbb
nop
in
mov
jge
xor
stos
cmp
jmp
xor
es
adc
push
jb
xor
cmps
dec
push
or
sbb
repz
les
dec
jmp
cmp
adc
fstp
adc
ja
push
jle
xchg
mov
inc
add
add
lods
fwait
or
mov
hlt
popa
and
mov
mov
dec
(bad)
das
icebp
int
jle
xchg
pop
cmp
mov
push
xchg
dec
aas
jmp
mov
pop
in
(bad)
dec
movaps
(bad)
adc
daa
nop
sbb
aaa
xor
jmp
je
cmc
(bad)
jg
(bad)
jne
adc
jbe
add
add
fwait
daa
fisubr
repz
cmp
test
cmps
xchg
push
das
xor
sbb
mov
or
jl
dec
ror
add
(bad)
push
mov
xchg
add
in
pop
mov
inc
add
fs
and
mov
add
fistp
add
add
add
iret
out
push
add
dec
into
sar
test
popa
mov
mov
xchg
jmp
pop
rol
loopne
mov
hlt
push
mov
test
ror
shl
add
or
hlt
add
fimul
sub
mov
jne
or
in
sbb
sub
jmp
add
add
add
add
mov
mov
mov
jmp
ror
xor
or
sbb
in
adc
mov
xor
xchg
mov
mov
rcl
retf
mov
fdiv
push
xchg
pop
lea
sub
push
mov
mov
test
movs
add
add
mov
add
das
jp
mov
pop
push
mov
mov
pushf
add
jmp
aad
call
test
xor
call
sub
or
mov
lahf
add
push
push
call
std
sbb
int3
loopne
int3
int3
imul
add
int3
in
mov
adc
in
adc
and
not
test
xchg
and
ins
les
outs
xchg
and
fistp
and
and
fadd
cmp
les
scas
sbb
sub
lods
and
pop
xchg
and
push
dec
out
icebp
out
inc
add
icebp
jmp
add
jae
sbb
add
add
pop
add
jae
sbb
jecxz
fild
dec
sbb
adc
inc
dec
or
jmp
inc
shr
in
add
jns
out
icebp
lahf
das
out
fs
or
sbb
cmc
cli
rcl
xor
outs
or
xor
jno
and
dec
and
out
shr
call
mov
dec
add
add
in
shr
fimul
push
ret
push
(bad)
mov
out
(bad)
inc
jnp
fs
push
pop
es
retf
hlt
daa
inc
jae
pop
stc
and
dec
loop
scas
and
shl
sub
push
push
mov
pop
adc
pop
ret
lahf
stc
push
mov
push
inc
adc
or
repz
out
inc
add
add
sbb
movs
(bad)
sti
lock
xor
les
add
add
sub
xchg
jne
pop
jmp
call
daa
adc
mov
scas
or
scas
or
fisub
add
in
shl
add
rcr
cdq
pop
ret
add
add
scas
cld
push
mov
popa
in
sbb
dec
xor
jne
push
addr16
je
popf
(bad)
lock
call
mov
sbb
jnp
ret
lods
pop
push
ror
sbb
call
mov
sub
stc
jae
inc
mov
in
cmp
lock
mov
movs
fld
jg
call
add
cli
add
je
add
(bad)
jl
adc
out
add
or
mov
pop
shl
cmp
sti
mov
add
cmp
add
pop
jb
leave
ret
jl
add
cld
je
or
add
hlt
rcr
sub
add
sub
outs
sbb
add
push
inc
add
add
cld
div
lock
shl
jnp
rcr
sbb
cdq
sub
retf
test
lods
(bad)
mov
and
or
pop
call
bound
ret
add
xchg
test
push
(bad)
cmp
mov
shr
mov
dec
xor
repz
cmp
aas
and
add
add
add
and
(bad)
call
out
jg
mov
arpl
movs
adc
dec
in
div
mul
in
and
ret
adc
call
movs
or
mov
idiv
ffree
not
sbb
rcr
dec
cdq
in
xchg
lock
div
lock
cmp
and
add
add
mov
push
lock
mov
dec
sbb
push
pop
out
(bad)
adc
dec
call
and
or
in
repz
jp
rcl
test
ret
xor
cmp
push
in
push
das
stos
or
jb
push
jnp
xchg
stos
adc
add
add
mov
idiv
imul
add
dec
push
add
jne
mov
adc
mov
not
mov
pop
je
movs
mul
cmp
and
cld
and
sbb
push
add
add
inc
add
fimul
and
push
mov
add
sar
daa
push
pop
or
push
jne
pop
pop
sar
push
adc
aam
inc
add
fstp
mov
fiadd
xor
xor
sti
into
scas
jns
shl
add
clc
in
add
fnsave
and
xor
in
add
fnsave
and
add
fnsave
add
add
fnsave
mov
add
scas
ror
adc
mov
(bad)
or
or
xchg
xor
pop
jnp
jbe
ret
out
jg
call
pop
das
ror
and
neg
shl
fadd
imul
and
add
add
imul
mov
in
out
call
cdq
add
leave
or
retf
jmp
push
add
call
cmp
gs
pop
icebp
add
and
or
xor
pop
ret
outs
and
loopne
idiv
in
or
not
data16
xchg
or
push
(bad)
div
add
add
outs
adc
jae
dec
in
aas
enter
fmulp
jne
dec
inc
or
xchg
mov
daa
and
ja
push
shl
push
jmp
int
add
add
ins
lds
loope
in
push
ds
jne
repz
add
jnp
inc
pop
ror
fwait
or
dec
in
scas
dec
int3
add
pop
sldt
add
(bad)
(bad)
jmp
cld
push
leave
bound
popa
xchg
or
(bad)
lea
(bad)
call
sub
inc
or
fild
mov
and
pop
ins
stos
dec
add
push
leave
addr16
not
hlt
jp
cmp
fsubr
(bad)
cld
push
pop
sub
xor
cmp
add
dec
dec
inc
add
pop
add
push
clc
call
fadd
jmp
int3
lea
leave
bound
mov
and
and
test
rol
xlat
jne
shr
sahf
xchg
sub
jnp
dec
(bad)
(bad)
mov
sbb
inc
mov
dec
push
push
inc
hlt
hlt
ins
add
add
add
xchg
out
out
xchg
call
std
pop
or
sub
je
mov
leave
lea
enter
push
xchg
inc
fs
je
jp
inc
sub
dec
cld
push
push
push
call
in
pop
mov
add
test
add
adc
fwait
or
add
add
pop
gs
hlt
icebp
fs
dec
fild
pop
add
mov
iret
or
push
add
sbb
ror
stos
adc
pop
and
div
and
cld
push
dec
xlat
lea
enter
jno
push
int3
cmps
sbb
xor
les
pop
jne
add
add
inc
fwait
cld
add
inc
hlt
cmps
ja
std
and
cld
repz
or
and
ret
jg
push
mov
pop
in
adc
retf
div
fs
in
mov
inc
adc
mov
jae
mov
cmp
jmp
(bad)
fcmovne
dec
push
sti
cmp
push
movs
fild
call
idiv
adc
add
add
jno
add
inc
hlt
idiv
std
pop
and
fsub
add
xchg
or
mov
adc
jo
jnp
cmp
ja
mov
lock
fs
cmps
push
lods
add
add
arpl
movs
loope
ret
pop
call
idiv
outs
mov
jecxz
pop
outs
enter
pop
mov
loopne
add
add
add
pop
loopne
sub
je
ds
cmp
sub
lods
fsub
add
ja
pop
inc
out
mov
mov
fiadd
cmp
add
pop
and
jecxz
add
xor
shl
repz
in
add
xor
sub
js
and
pop
je
aaa
inc
adc
add
add
fld
add
mov
cli
jmp
add
cmp
jne
arpl
cmp
cmp
test
cmp
add
sub
jnp
adc
fisub
pop
mov
lahf
out
sar
rdmsr
and
jmp
and
test
jmp
sldt
add
shl
outs
add
and
sbb
jns
push
jns
xor
call
jge
fdiv
outs
mov
jae
mov
add
cmp
gs
in
push
mov
or
scas
and
stc
fsubr
movs
jecxz
push
or
add
lahf
push
add
add
add
popa
loopne
cwde
idiv
add
add
hlt
xchg
or
pop
sub
int3
xor
sbb
add
fadd
je
popa
dec
cld
repz
imul
std
imul
mov
inc
xor
shl
idiv
adc
fs
add
add
pusha
jo
add
add
jbe
cld
mov
shl
xor
add
inc
hlt
daa
jnp
std
(bad)
sbb
repnz
in
push
sbb
mov
cmc
jne
or
sub
(bad)
dec
push
int
je
add
push
std
call
pop
les
push
int3
int3
and
int3
int3
add
int3
int3
loopne
int3
int3
add
add
imul
dec
xor
(bad)
je
jbe
or
or
mov
push
mov
ja
add
add
outs
in
daa
out
sbb
and
sub
xor
sti
(bad)
in
and
scas
pop
outs
add
clc
jns
movs
(bad)
shl
pop
in
je
popa
idiv
repz
add
inc
add
add
add
push
leave
aaa
jns
push
out
sti
jp
add
or
dec
or
fild
in
mov
cli
or
scas
add
fiadd
add
mov
mov
sbb
(bad)
cmp
sub
xlat
sbb
pop
imul
clc
add
adc
rol
add
popf
ds
movs
rol
lea
add
pop
jge
add
movs
pusha
or
jne
jbe
aam
movs
mov
call
lea
js
cdq
out
push
add
sbb
add
push
fld
cmp
jns
outs
pusha
ret
jbe
test
pop
xor
shl
mov
loopne
add
add
mov
pop
lea
in
add
ret
stc
out
shr
test
mov
add
jne
cwde
jnp
cmps
movs
jmp
add
cdq
push
add
mov
out
fadd
cmp
and
add
and
retf
cli
mov
xor
or
cmp
add
add
mov
jmp
arpl
je
pop
gs
xor
dec
test
adc
sbb
jmp
fidivr
add
mov
push
in
jo
mov
or
rcr
or
sub
and
pop
clc
add
frstor
fstp
xchg
(bad)
enter
mov
add
sahf
mov
mov
or
cmp
pop
jge
jg
mov
add
inc
pop
(bad)
arpl
add
pop
movs
lock
mov
movs
popf
pop
ficomp
daa
sbb
clc
add
hlt
pop
movs
jns
mov
retf
jnp
enter
in
fidivr
add
add
shl
retf
sbb
adc
add
or
je
or
lods
popf
loopne
int
into
xlat
das
mov
jne
rol
mov
mov
jae
lock
cli
test
jge
ja
jne
push
sub
out
jno
call
and
or
add
add
add
add
add
jmp
out
retf
mov
fiadd
pop
out
sar
je
adc
jbe
hlt
dec
fld
outs
std
cmp
(bad)
and
xlat
sub
rol
jbe
lock
add
add
xor
rcl
pop
loopne
imul
add
add
mov
clc
add
jecxz
fist
cdq
push
(bad)
sbb
aaa
sbb
clc
sub
pop
and
cmp
jnp
adc
jnp
sub
sub
aas
das
cmp
push
jb
test
xor
push
fdiv
cli
push
fnstsw
add
outs
cmp
imul
test
das
out
jb
leave
idiv
add
add
xchg
mov
add
and
(bad)
dec
or
pop
enter
and
call
sti
jl
mov
pop
shl
rcl
or
jno
cdq
cmps
stc
push
add
jo
sar
and
(bad)
fild
fdivp
cmp
mov
cli
add
add
ret
and
inc
sar
cld
fwait
sub
popf
aam
sub
add
or
adc
jae
sub
es
jmp
(bad)
mov
xchg
retf
mov
nop
cli
ror
lea
shl
jmp
jl
ffreep
mov
loop
mov
xchg
loopne
add
add
jnp
sub
or
jmp
cmp
retf
retf
outs
or
punpcklbw
in
ror
pop
dec
loopne
fiadd
sbb
add
cli
shr
sar
pop
ficomp
movs
fiadd
retf
jnp
js
jnp
pushf
fidivr
adc
rol
add
add
fiadd
add
jno
or
ret
popf
loopne
enter
xor
ret
jo
cld
das
popf
hlt
mov
jne
idiv
test
jge
aaa
jno
hlt
nop
daa
xor
fadd
out
dec
call
mov
or
aam
add
add
push
jmp
add
jge
xchg
leave
retf
jo
inc
jbe
add
hlt
adc
inc
jbe
add
add
add
cli
sar
sar
pop
ficomp
je
cmp
jnp
les
jnp
sub
jnp
rep
ret
sbb
cld
push
fld
add
cld
test
outs
dec
or
xor
into
ins
cmps
lock
lock
outs
jl
aam
jge
pop
mov
ror
adc
or
mov
hlt
jl
jo
push
pop
fiadd
xor
xor
adc
xor
(bad)
fidivr
fincstp
dec
push
add
mov
bound
add
add
popf
ror
rol
jo
in
or
adc
mov
(bad)
jmp
add
mov
fadd
pop
adc
stc
inc
cdq
repz
mov
add
jg
or
ffree
push
leave
mov
not
adc
add
or
fld
add
push
add
das
cmps
dec
cmps
repnz
add
fild
add
mov
cmp
cdq
retf
push
pop
cmp
je
je
clc
add
sub
sbb
into
ror
frstor
add
pop
gs
mov
jge
add
add
mov
mov
mov
inc
hlt
mov
dec
in
rcr
push
clc
add
adc
add
stc
or
out
pop
ret
jb
test
and
xor
loopne
rcl
pop
arpl
add
inc
mov
std
out
shr
stos
test
iret
jmp
add
add
cmp
jnp
daa
mov
mov
and
fdivr
out
fld
cmp
add
cmp
sub
sti
mov
xor
or
cmp
out
and
imul
cld
mov
dec
test
mov
aam
jb
add
add
test
call
add
je
adc
adc
fnsave
jnp
repz
and
fs
hlt
fs
clc
add
jb
test
enter
mov
jae
fwait
mov
mov
add
popf
call
jg
mov
add
add
pop
fiadd
add
xchg
lock
add
enter
movs
sub
push
movs
mov
inc
pop
add
jns
xchg
jnp
aam
jnp
mov
fdivr
adc
rcr
adc
cld
adc
add
pop
cmp
sti
pop
pop
or
lock
add
add
adc
ret
push
dec
cld
out
movs
hlt
mov
push
jne
mov
test
pop
jne
push
jae
out
dec
dec
call
je
or
xchg
ss
add
pop
jmp
out
jecxz
shr
loopne
(bad)
ret
ror
sar
push
rol
(bad)
mov
inc
hlt
jge
inc
sub
cmp
mov
retf
cmp
push
dec
pop
test
dec
lock
fiadd
add
not
push
and
test
pop
loopne
jmp
fbstp
xor
clc
add
jecxz
pop
adc
shl
pop
ficomp
movs
fiadd
into
add
add
xchg
xchg
jnp
pushf
fisubr
sar
push
dec
test
xor
push
fidiv
cli
inc
sar
add
mov
adc
mov
jb
out
cmc
cmp
scas
add
add
aas
mov
(bad)
dec
jge
or
enter
and
jg
hlt
inc
add
add
ja
sti
jl
mov
pop
popa
movs
test
call
sub
xchg
or
in
rcr
pop
rol
jl
and
or
cmp
or
add
and
retf
mov
jmp
cld
sbb
pop
sub
pop
popf
aam
sub
add
add
popa
sub
dec
adc
jne
popf
out
xor
sar
in
fisttp
mov
mov
rcr
lea
and
or
xchg
jecxz
aaa
mov
loopne
xchg
jnp
test
retf
mov
xor
jmp
cmp
push
or
sldt
add
add
add
lea
mov
loopne
fadd
sbb
cdq
adc
sti
shr
ficomp
and
cmp
jnp
adc
jnp
sbb
jnp
sbb
jnp
add
ror
sbb
add
add
sbb
push
pop
or
popf
loopne
out
or
test
rol
add
add
movs
hlt
mov
push
jne
addr16
inc
lods
pop
jge
cmps
push
jne
nop
push
xor
faddp
out
dec
dec
call
xor
or
aam
add
add
or
out
xchg
retf
push
or
lea
fsubr
shl
and
mov
add
ds
repz
cdq
add
sti
shr
clc
jmp
fiadd
retf
jnp
js
jnp
mov
push
ret
sbb
aam
add
mov
push
dec
or
fwait
(bad)
loopne
adc
into
std
xchg
lock
or
add
push
jl
les
add
add
fist
inc
or
mov
lock
sbb
call
rcl
movs
xchg
loopne
fnstcw
jns
add
ss
cmps
mov
bound
sub
call
jnp
adc
and
pop
add
das
rcr
jmp
add
add
or
push
in
test
jne
add
out
xchg
or
pop
adc
push
not
xor
cmp
imul
cld
mov
dec
xor
xchg
imul
sar
xor
xchg
loopne
or
dec
pop
test
and
js
pop
jo
pop
mov
adc
and
push
dec
push
test
(bad)
(bad)
xchg
pop
les
sbb
dec
jp
add
mov
lods
or
ins
mov
cmp
mov
cmp
stos
sti
inc
mov
fnstcw
cmp
pop
xchg
add
adc
mov
inc
xchg
add
movs
push
or
scas
sti
pop
scas
fisttp
jg
mov
or
fdiv
dec
fstp
stos
shl
je
xchg
dec
je
push
call
add
bound
fstp
inc
mov
jnp
lock
sbb
pop
jmp
add
stos
test
mov
xchg
and
pop
dec
mov
loope
je
mov
jmp
out
je
out
je
loope
je
out
cpuid
out
jmp
inc
jle
out
punpckldq
(bad)
jmp
out
packsswb
(bad)
push
mov
jmp
idiv
xchg
dec
enter
jp
lods
sar
add
add
jae
test
mov
or
fld
test
and
(bad)
mov
and
lods
jmp
in
scas
test
pop
out
jg
push
jge
ins
cmps
add
jns
and
lods
fdivr
jmp
and
mov
cmps
fimul
lahf
push
mov
or
add
add
out
outs
mov
cmc
outs
test
mov
jge
in
jne
pop
scas
movs
jne
das
(bad)
(bad)
and
add
fnstsw
cmp
movs
aad
adc
lahf
and
mov
sbb
mov
(bad)
cmp
daa
cmps
in
scas
out
mov
or
call
and
mov
add
add
push
inc
(bad)
lods
xchg
lods
mov
pop
jmp
ja
scas
or
stos
and
jmp
arpl
cmp
outs
and
sti
push
imul
or
jbe
idiv
ja
cwde
(bad)
fst
and
idiv
dec
fucom
outs
jb
test
ja
stc
sub
in
jbe
xchg
jecxz
add
add
push
adc
or
xor
fbld
jge
fdiv
data16
dec
dec
lods
cwde
sbb
mov
shl
call
aaa
fadd
push
cmp
fsubr
add
mul
sbb
adc
(bad)
mov
push
xchg
add
add
fidivr
inc
or
add
dec
push
mov
into
leave
jmp
aam
jg
push
enter
icebp
(bad)
loopne
retf
das
adc
mov
xor
jno
loop
lods
xor
pushf
iret
in
cmp
push
call
xchg
add
aad
jge
mov
repz
test
inc
mov
pop
add
add
add
mov
div
arpl
xchg
hlt
fiadd
sub
sti
neg
mov
sbb
ret
inc
sbb
cs
and
test
jmp
fidiv
or
mov
inc
add
add
neg
leave
shr
pop
call
jne
retf
mov
cmp
push
test
fld
add
fild
mov
sar
jns
cwde
pop
loope
jge
test
cmps
loopne
popf
neg
add
loope
rcr
add
mov
push
das
mov
add
add
xchg
and
mov
in
rcr
mov
inc
fsubr
sbb
mov
push
idiv
(bad)
lock
sahf
sbb
cmc
jbe
and
xchg
fld
lea
xchg
fild
(bad)
mov
xor
inc
pop
sbb
and
mov
rcr
add
cmps
push
xchg
fiadd
add
add
add
add
(bad)
dec
fld
shr
mov
movs
call
xor
in
cmp
jmp
or
adc
movs
(bad)
jne
cdq
fldcw
ror
inc
into
lea
add
into
pop
mov
idiv
ret
or
pop
std
adc
jne
push
je
lods
adc
mov
add
add
call
mov
movs
inc
test
fadd
add
xor
mov
sub
in
mov
inc
mov
pop
inc
mov
and
fstp
lods
add
add
add
cmp
mov
mov
mov
mov
add
daa
or
add
add
add
adc
je
add
movs
add
sti
mov
adc
jg
and
jmp
pop
jl
xor
nop
and
add
cmp
idiv
push
je
lahf
and
rcr
push
mov
fucomp
mov
fld
xor
add
add
frstor
scas
jbe
dec
pop
retf
jg
pop
mov
cmp
out
fsub
xchg
inc
aam
push
cli
(bad)
sub
inc
rcr
fdivr
push
(bad)
push
cmps
shl
test
inc
aam
jnp
ror
fadd
dec
lods
push
(bad)
sub
add
dec
fcomp
mov
add
cmp
adc
mov
mov
add
add
ja
iret
call
mov
gs
jns
sahf
mov
(bad)
rol
sub
add
dec
bound
(bad)
gs
fistp
jmp
push
shr
ja
inc
(bad)
lods
mov
add
rol
sub
add
add
pop
xchg
pop
cmp
fcom
mov
add
and
add
pop
idiv
adc
add
push
nop
mov
les
(bad)
rcl
retf
push
into
iret
in
ror
(bad)
jp
pushf
fisttp
mov
add
repz
les
add
aaa
or
std
xchg
test
dec
mov
xor
rcr
loope
sub
xchg
add
fadd
jmp
leave
lock
mov
add
mov
leave
(bad)
imul
jmp
xchg
add
add
in
enter
enter
push
add
cli
xchg
mov
or
xchg
mov
add
add
xchg
push
dec
cld
xor
sub
das
jo
cli
xchg
or
fs
sub
inc
movs
mov
sub
inc
sub
mov
sub
movs
mov
movs
adc
inc
je
sub
dec
daa
inc
fs
inc
fs
not
jb
in
cwde
cmp
test
and
push
scas
sub
add
je
mov
clc
mov
retf
add
mov
jbe
hlt
dec
pop
mov
stos
sbb
int3
mov
sbb
int3
stos
sbb
int3
stos
sbb
int3
jp
iret
int3
push
into
int3
push
fxch
push
fmul
jp
sar
push
sar
imul
add
pop
test
add
add
fsubr
jmp
cwde
cmp
adc
je
out
add
jmpw
das
jmp
xor
pop
cmp
rcl
or
daa
push
cmp
jmp
xor
xor
call
mov
pop
ret
retf
pusha
add
in
mov
mov
add
add
je
sub
add
mov
je
or
stos
inc
movs
je
sub
add
je
je
jmp
xor
cmp
or
test
or
add
sub
test
pushf
jne
pop
daa
dec
push
jp
sbb
add
add
adc
cmp
jmp
dec
inc
add
add
adc
test
sub
jne
sub
dec
push
sbb
cld
jb
jp
mov
leave
mov
add
out
(bad)
adc
fadd
ror
sbb
mov
test
inc
jae
in
add
add
and
xchg
sub
xor
lods
adc
mov
sbb
inc
mov
dec
push
jmp
mov
pop
ror
push
add
mov
retf
sahf
jp
push
push
inc
pushf
imul
popf
push
das
mov
stos
cwde
repnz
nop
push
test
(bad)
add
add
add
setno
rcr
add
or
add
dec
icebp
lea
movs
movs
icebp
sbb
movs
rcl
mov
mov
shr
leave
lods
adc
dec
sbb
clc
mov
(bad)
icebp
or
push
je
rol
enter
xor
mov
add
add
pop
ror
ja
sti
jmp
cld
xor
jecxz
call
fadd
scas
test
xchg
(bad)
add
inc
inc
add
sub
sbb
outs
mov
jb
add
test
jne
sbb
inc
int3
test
call
adc
cdq
outs
je
cmp
(bad)
mov
jmp
rcr
add
sbb
inc
sbb
idiv
xchg
std
pop
cmp
outs
mov
std
test
pop
mov
push
push
dec
test
push
rol
push
push
mov
cmps
ja
popa
add
or
sbb
inc
xchg
ret
dec
or
movs
push
dec
cld
jae
leave
or
add
push
int
rol
inc
mov
add
fs
jl
fs
aas
cld
mov
pop
jmp
pop
inc
xchg
es
ins
cwde
test
cmc
mov
xchg
inc
add
aas
jmp
test
jl
hlt
add
add
out
cmp
shr
mov
or
sub
lock
add
das
test
mov
gs
inc
hlt
das
sbb
ror
add
jne
add
sbb
jmpw
retf
idiv
push
mov
jmpw
inc
fisttp
add
jge
lock
and
dec
in
push
je
scas
sub
shl
cmps
out
adc
add
add
mov
mov
nop
je
std
sbb
je
jmp
mov
mov
dec
test
jnp
xchg
add
xor
fbstp
daa
hlt
jmp
fistp
cli
xor
xor
je
aaa
dec
mov
sbb
inc
add
add
mov
jne
or
sbb
jmp
add
jbe
xor
xor
inc
pop
mov
rcl
cmp
ror
dec
gs
add
pop
add
pop
idiv
adc
xor
cmc
sti
push
dec
call
xchg
sar
cmp
jbe
mov
xor
add
add
mov
fdivp
inc
dec
int
mov
push
mov
inc
push
hlt
std
sbb
mov
inc
shl
sub
pop
fiadd
mov
add
mov
jns
cmp
sar
fiadd
dec
scas
push
and
add
mov
hlt
out
lock
add
fnstsw
data16
add
dec
mov
inc
inc
loopne
mov
push
jge
or
loopne
or
mov
jge
inc
mov
out
inc
jl
lea
idiv
repz
mov
jne
ror
push
add
jg
mov
xor
hlt
out
enter
imul
idiv
add
add
add
je
cmp
mov
loopne
lds
mov
fadd
data16
nop
je
sub
fadd
jl
jg
out
aaa
inc
js
pop
cmp
nop
push
test
jge
jmp
arpl
add
rol
push
dec
lods
sub
(bad)
imul
lods
in
lods
adc
or
sbb
or
xchg
aas
xchg
jmp
mov
add
jne
mov
add
dec
lods
ja
lods
add
ds
rcl
push
mov
jne
gs
sti
mov
mov
sub
inc
add
add
mov
inc
cwde
push
dec
lock
lock
sar
rcr
mov
(bad)
mov
add
clc
pop
push
out
jg
cmc
xor
sub
(bad)
adc
add
out
jge
push
mov
shl
out
inc
add
je
adc
mov
cmp
push
hlt
and
add
add
popa
or
fistp
movs
jb
retf
jl
pop
pop
icebp
jne
mov
pop
and
add
aas
cwde
pop
cmp
outs
outs
adc
pop
icebp
add
fiadd
jne
pop
jl
repz
and
inc
div
pop
mul
jmp
cmp
add
add
je
dec
push
inc
cli
push
pop
adc
repz
jnp
test
cmc
inc
push
and
jg
ficomp
add
sbb
xor
leave
sub
mov
je
xchg
mov
inc
loopne
pop
loopne
in
add
push
dec
call
jmp
xrelease
pop
inc
hlt
sub
mov
add
add
js
xor
rol
loopne
add
fld
adc
jns
(bad)
fadd
sbb
sbb
pusha
mov
in
sub
xchg
mov
sti
mov
pop
add
mov
cli
add
inc
sar
mov
add
pop
cmp
add
add
stos
sbb
add
add
not
repz
je
jne
adc
movs
test
jecxz
cmp
add
inc
les
in
sub
rcr
shr
(bad)
or
inc
call
hlt
sar
pop
or
call
sub
test
fdiv
lahf
adc
mov
mov
jg
rcr
(bad)
fmul
repz
or
push
inc
loopne
imul
dec
aam
pop
fs
inc
mov
lahf
push
mov
fild
add
add
mov
jae
jne
ins
jl
leave
xor
les
add
xor
fild
retf
jmp
pop
aaa
lea
(bad)
scas
xchg
mov
ror
mov
shr
(bad)
enter
add
mov
jmp
cmp
in
sbb
das
call
imul
test
sbb
aas
mov
(bad)
mov
push
push
mov
add
add
scas
mov
cmc
fmul
jne
push
add
ret
lahf
mov
push
je
in
adc
rcr
sti
cmc
in
xor
outs
outs
mov
cmps
pop
dec
mov
loop
add
jae
movnti
call
adc
xor
sar
cmp
imul
push
add
add
jg
mov
add
cli
cmc
add
fsub
fsub
push
push
xchg
mov
xchg
inc
add
push
dec
cld
repz
int
outs
and
xchg
pusha
enter
sub
adc
fld
mov
int3
data16
int3
mov
hlt
fadd
data16
or
push
mov
jp
add
add
idiv
xor
sbb
add
lods
mov
add
or
mov
fnstcw
cld
push
add
jns
in
mov
enter
add
leave
add
xchg
mov
cmps
fadd
and
mov
mov
add
clc
add
add
add
enter
les
rol
or
fsub
or
fmul
add
or
fist
stc
(bad)
js
jg
and
(bad)
call
fiadd
ret
mov
jae
rol
adc
fstp
adc
mov
push
sub
mov
neg
add
cmps
shl
add
add
xchg
out
ret
add
call
or
add
rcr
(bad)
push
add
je
into
mov
add
into
cmp
xor
cwde
int
retf
cwde
into
xor
mov
or
jmp
aam
inc
and
loope
xor
and
xor
add
add
add
and
push
and
add
cmp
into
push
sub
into
add
movs
into
add
add
(bad)
inc
xor
in
daa
je
push
cli
or
fld
pusha
sbb
int3
mul
je
inc
push
div
lea
mul
shl
lea
add
add
add
(bad)
sti
cmc
daa
mov
add
not
je
mov
add
cmp
add
mov
push
pushf
mov
daa
fiadd
je
movs
cli
add
fnstenv
(bad)
add
int
cmp
jo
sub
fcos
push
clc
add
pop
ret
add
add
add
ret
add
adc
je
inc
fs
jl
call
shl
ss
inc
or
xchg
push
test
sub
repnz
pand
ins
cld
lahf
cmp
push
add
push
add
fnstcw
add
add
cld
dec
mov
retf
mov
retf
mov
retf
mov
retf
or
mov
ret
mov
cli
add
or
je
or
sub
push
cmp
jno
sub
jno
sbb
(bad)
push
loopne
aaa
fadd
je
add
add
clc
add
fadd
jne
push
ret
add
add
sub
add
add
aaa
loopne
add
jmp
cmp
push
or
popf
sub
std
mov
out
sub
add
add
fiadd
pop
xchg
inc
lock
pop
test
cwde
fidivr
ins
dec
add
add
add
add
mov
add
dec
fidivr
jbe
add
fbstp
mov
add
js
or
mov
fild
and
jmp
and
sbb
std
fld
hlt
jmp
mov
add
sbb
jmp
cmp
mov
add
add
sbb
daa
mov
mov
mov
or
mov
fdivrp
jmp
stc
jmp
cli
mov
sti
or
idiv
jne
arpl
add
std
call
lock
mov
cmpps
mov
add
add
sub
js
js
mov
cli
jmp
jmp
in
shl
cli
call
fstp
call
fld
je
pop
ret
add
fnsave
mov
add
sub
add
ins
fld
and
loopne
add
cmp
cmp
xor
add
add
cdq
stos
or
iret
loop
retf
add
pop
fild
(bad)
inc
mov
sbb
and
or
jne
add
hlt
fucom
push
gs
add
loope
push
jne
add
hlt
fiadd
dec
loopne
inc
or
sahf
push
add
add
and
push
pop
ins
mov
add
fnstcw
in
add
dec
lock
(bad)
repz
lahf
ja
call
adc
cmp
je
movs
pop
test
cdq
push
jp
add
and
cdq
enter
mov
jne
dec
je
adc
cmp
je
outs
sbb
sti
leave
cmps
mov
dec
add
add
dec
fild
hlt
fild
nop
push
inc
add
fistp
ret
inc
dec
inc
movs
cmc
xor
pushf
pop
stc
(bad)
cwde
ficom
stos
inc
popa
shr
loopne
clc
repz
or
movs
dec
iret
pop
aaa
not
push
jp
xor
je
mov
icebp
call
cmps
retf
adc
add
add
xchg
fild
ror
div
dec
je
adc
adc
cdq
mov
adc
je
cld
add
or
jb
mov
out
sub
sub
mov
cmp
icebp
sub
sti
movs
inc
call
sub
xor
int
or
cli
and
add
mov
add
add
lock
lock
cdq
ds
push
push
lea
scas
lea
mov
mov
repz
jns
add
mov
xor
(bad)
in
add
ffreep
rol
add
outs
add
retf
ss
push
clc
xor
dec
add
addr16
stos
push
in
add
add
lahf
xor
cmp
jne
and
(bad)
cmp
fisubr
push
mov
mov
aas
mov
or
push
hlt
loope
adc
retf
jb
test
jae
nop
lock
fld
add
(bad)
je
or
dec
or
mov
mov
cdq
jecxz
mov
cmp
add
add
outs
push
shr
xor
or
mov
or
in
mov
adc
adc
push
in
repnz
fnstsw
add
xor
inc
add
xor
xchg
jecxz
stc
jne
stc
xor
arpl
je
sbb
or
and
adc
push
add
add
jmp
idiv
add
dec
add
outs
shr
aaa
push
or
jle
rol
add
in
adc
hlt
fild
cmp
aad
fild
or
mov
cmp
fild
jmp
enter
das
test
add
jecxz
cmps
jo
retf
add
sub
test
pop
outs
pop
mov
mov
dec
rol
push
xor
push
jmp
leave
div
and
repz
push
xchg
push
sub
adc
bound
sub
add
cmc
and
cmp
add
add
add
dec
fsub
ror
or
mov
add
cmp
movs
leave
add
pop
sbb
fcomp
loop
movs
add
lods
call
cmp
fs
add
pop
sbb
fcomp
loop
fs
(bad)
fcmovu
add
jnp
cmp
and
add
jns
pop
ret
fistp
or
and
loop
and
call
push
outs
jl
cmp
in
add
lahf
sbb
fsub
aad
inc
in
call
mov
sbb
inc
cld
iret
push
add
call
pop
hlt
xor
push
cmps
pop
push
add
sbb
aas
pusha
idiv
dec
in
sub
add
add
mov
push
dec
not
daa
out
icebp
fst
inc
call
xchg
pushf
dec
mov
or
inc
(bad)
mov
mov
push
lahf
push
cmp
sbb
jne
aaa
jne
sub
bound
and
inc
or
div
gs
aaa
sbb
pop
jbe
cli
push
das
push
push
push
add
add
imul
dec
mov
jmp
lods
xor
add
stos
stos
nop
cmp
sbb
mov
jne
mov
neg
xchg
jne
lods
pop
mov
dec
movs
mov
sti
xor
out
mov
push
loop
and
imul
gs
push
bound
add
add
addr16
mov
jo
inc
in
stc
push
jmp
(bad)
dec
dec
sub
scas
sbb
fnstsw
xor
cmp
movs
or
mov
cmp
xlat
cmc
adc
mul
cld
pusha
push
add
jl
push
popf
add
into
sbb
add
push
inc
add
add
add
inc
push
push
mov
sbb
test
sbb
call
loopne
sub
test
out
inc
shl
das
inc
hlt
push
in
shl
and
mov
mov
fstp
jo
push
xlat
std
xchg
fs
ret
das
sbb
push
inc
js
inc
add
add
movs
das
inc
or
xchg
je
or
ds
fs
inc
cld
movs
mov
int3
xor
push
or
gs
lods
sbb
leave
mul
dec
(bad)
cmp
mov
mov
inc
inc
sub
lods
inc
imul
mov
inc
in
ins
std
shl
cld
in
addps
add
sar
pop
ret
push
mov
cdq
je
sbb
ds
mov
inc
or
call
jl
std
inc
mov
dec
ins
dec
fcomp
cmp
jmp
inc
add
xor
push
push
cmp
mov
mov
div
arpl
call
add
jns
div
call
not
bndldx
in
add
retf
dec
shl
in
je
imul
cmc
jne
push
inc
std
adc
retf
sti
(bad)
idiv
dec
call
idiv
fucom
dec
call
in
out
jne
push
adc
in
add
cdq
push
mov
call
add
dec
mov
sbb
jne
jmp
div
push
je
ja
cmc
jne
push
adc
movs
sbb
jmp
push
je
adc
or
ja
je
add
adc
pop
push
idiv
dec
lock
jne
inc
lock
ret
bound
daa
dec
enter
pop
push
test
push
jae
or
mov
add
add
cmc
adc
hlt
inc
fs
adc
ret
push
loopne
adc
mov
je
shl
ret
test
ret
dec
mov
jecxz
fs
xor
dec
and
in
bound
add
rcr
cmc
adc
popa
sbb
push
add
add
repz
dec
push
sub
inc
in
popa
iret
cmp
test
jmp
mov
ret
jmp
rol
jmp
jmp
push
and
jo
repz
bound
pop
fisttp
leave
shl
pop
es
push
fild
mov
dec
push
add
add
ins
out
mov
pop
test
fild
add
add
xor
push
call
jns
push
test
add
sub
xor
ret
and
lea
movs
lea
in
or
sub
je
xor
inc
and
xchg
pusha
dec
dec
mov
jne
pusha
je
xchg
lods
jmp
mov
add
add
out
add
fisttp
dec
lods
div
pusha
je
shl
mov
lea
dec
mov
loop
das
pop
test
movs
dec
mov
pop
test
pop
je
repz
nop
sub
xor
fimul
cmp
cmc
adc
add
add
imul
inc
dec
shl
adc
lahf
jmp
loop
mov
mov
push
call
out
fistp
je
jae
pop
fdiv
adc
pop
and
adc
je
adc
cmc
adc
push
mov
adc
imul
inc
add
add
sbb
loop
dec
pop
test
rcl
add
fild
mov
mov
xor
mov
sti
cmp
test
sbb
sub
(bad)
retf
mov
mov
sbb
pop
test
loopne
mov
test
add
push
add
add
fwait
scas
adc
xor
xchg
cli
mov
push
call
mov
ret
xchg
push
inc
adc
xchg
ds
popf
pop
je
outs
and
pop
out
pop
neg
scas
or
rcr
sbb
xchg
xor
sbb
fistp
call
add
add
adc
sbb
movs
fiadd
cmp
bound
repz
push
lea
mov
push
dec
hlt
ror
cld
xchg
test
add
repz
dec
in
lods
sahf
adc
push
ret
jl
inc
hlt
scas
mov
and
iret
sub
mov
not
iret
cmps
push
mov
clc
dec
sbb
add
add
or
xor
add
dec
adc
pushf
jmp
test
adc
into
je
call
pop
outs
adc
leave
dec
push
adc
cmc
jbe
pop
je
repz
xchg
test
mov
push
inc
leave
fdiv
test
pop
test
add
add
fldenv
fs
adc
cwde
pushf
cli
mov
dec
call
mov
dec
mov
xor
stc
repz
pop
xor
push
mov
call
(bad)
xor
mov
inc
movs
push
pop
fsubr
lods
mov
inc
loopne
xchg
or
movs
cli
inc
add
add
push
inc
in
ret
test
xchg
push
inc
or
xchg
out
test
sub
inc
xor
pop
clc
repz
push
mov
sbb
add
(bad)
mov
adc
in
inc
adc
inc
adc
repnz
rcr
add
rcl
pop
adc
mov
in
add
jl
inc
stos
push
push
push
je
jl
(bad)
add
rcr
push
jne
std
out
loope
pop
sbb
call
loope
adc
xor
fild
or
ret
jns
and
mov
add
add
add
or
adc
jge
loope
jge
add
push
inc
sub
nop
xor
fdiv
ret
or
bound
sbb
je
hlt
mov
jecxz
and
(bad)
sti
mov
loope
sbb
mov
mov
push
push
or
xor
sub
stos
cld
ret
adc
lock
add
(bad)
add
xlat
push
jmp
xchg
inc
xor
cli
(bad)
cmp
pop
mov
(bad)
push
call
mov
mov
cmp
and
and
imul
cmp
jae
ja
loopne
sub
(bad)
(bad)
mov
jl
in
jmp
call
or
dec
push
add
add
push
fisttp
cmps
mov
jmp
cli
(bad)
pop
icebp
pop
aad
test
fimul
and
in
inc
mov
lods
test
xchg
inc
and
inc
cld
jb
mov
add
and
xor
inc
hlt
(bad)
ret
cdq
cli
(bad)
stc
mov
inc
in
jmp
add
fcomp
test
in
inc
mov
jae
aaa
shr
in
jmp
in
inc
add
and
js
pushf
cli
mov
inc
cmp
inc
je
shl
or
pop
test
pop
mov
sub
mov
push
mov
sub
cli
add
xor
mov
das
add
add
imul
inc
add
sub
inc
and
cmc
in
imul
out
add
out
adc
hlt
fldcw
jecxz
cli
dec
ror
js
sub
cdq
lock
add
sbb
xchg
lods
add
fs
shl
pop
addr16
pop
jmp
fdivr
pop
add
add
fistp
mov
fstp
xor
mov
jne
and
iret
fwait
cli
(bad)
pop
inc
mov
fstp
in
pop
ret
imul
pusha
call
pop
ret
push
mov
mov
sbb
pop
inc
cld
pop
fiadd
add
clc
cmc
adc
and
je
push
stc
and
add
add
sahf
jnp
lds
gs
mov
call
mov
(bad)
cdq
ret
push
retf
and
or
or
ret
stos
mov
push
xor
xchg
adc
inc
xor
sub
das
pop
push
test
xlat
add
mov
repnz
mov
cmc
adc
je
adc
add
add
fs
cli
test
test
jg
pop
nop
cmp
mov
mov
ds
jne
push
pop
cld
or
pop
jo
or
sbb
not
(bad)
sbb
xor
call
sbb
and
call
dec
push
and
clc
ret
or
int3
and
add
add
mov
cli
push
int3
iret
aad
repz
dec
call
adc
mov
cli
dec
lods
pop
imul
jp
idiv
ins
and
mov
movs
and
into
adc
sub
add
mov
adc
pushfw
cli
push
mov
and
int3
rcr
idiv
dec
dec
sbb
sbb
add
add
add
movs
test
pop
sbb
add
jne
pop
add
cmc
adc
iret
ficomp
push
jne
aaa
xor
cdq
cld
and
idiv
xor
stc
shl
adc
out
sub
scas
push
push
(bad)
or
add
add
lahf
adc
mov
add
add
add
mov
fiadd
mov
add
mul
(bad)
mov
pop
shl
add
in
xchg
cmp
add
lock
push
mov
scas
push
push
stos
adc
out
cli
push
mov
stos
loop
and
test
mov
leave
out
sub
add
add
jnp
adc
dec
push
ja
pop
mov
retf
add
aam
push
popf
push
mov
ret
pop
cdq
mov
add
mov
adc
jne
pop
leave
(bad)
mov
scas
mov
mov
add
inc
addr16
clc
dec
mov
pop
das
pop
repnz
ins
sbb
mov
sbb
mov
xor
inc
fs
push
mov
add
add
test
jo
xlat
inc
call
rcl
add
xor
dec
clc
jmp
out
and
add
jo
cli
mov
push
mov
fbld
lock
xchg
imul
mov
push
sbb
and
push
scas
sub
test
xchg
pop
scas
stc
adc
iret
add
add
fwait
push
or
pop
out
cmovp
jmp
pop
repnz
scas
inc
jbe
movs
inc
aam
or
adc
jnp
push
push
std
jae
adc
(bad)
repz
push
test
idiv
add
push
test
scas
push
leave
aaa
test
cmp
adc
inc
add
adc
in
daa
sbb
test
adc
add
inc
or
sbb
mov
loop
mov
test
lock
mov
fadd
dec
jns
push
pop
dec
stos
mov
add
pop
cli
gs
out
pop
mov
push
data16
inc
add
add
fild
xor
jns
sub
mov
push
and
aas
loope
imul
or
in
add
or
aam
jmp
and
push
in
mov
cmp
jne
jae
add
popf
movs
cli
dec
xor
pop
movs
fcomi
adc
outs
inc
add
and
sar
mov
cmp
je
pop
push
sub
mov
(bad)
imul
shl
daa
imul
xchg
inc
xor
shr
fistp
test
push
push
and
jne
mov
je
shr
pop
ret
add
add
stc
sbb
push
fs
mov
stc
fild
jne
mov
mov
add
movs
cli
test
push
and
adc
in
cli
mov
jmp
sahf
not
out
rcl
inc
in
inc
xor
shl
cld
and
inc
sub
inc
xor
mov
add
popf
cli
enter
in
movs
sti
sbb
hlt
fstp
xor
dec
in
inc
hlt
pop
shl
test
ror
push
stos
pop
jmp
add
inc
add
sbb
mov
test
xchg
or
mov
xor
loopne
outs
sbb
jmp
or
iret
retf
call
sbb
mov
push
inc
adc
pop
rcl
and
mov
jne
mov
mov
cmp
mov
je
outs
or
in
add
mul
repz
pop
ret
push
mov
scas
push
xor
jns
lods
pop
dec
cld
cmp
add
add
fdivr
test
push
clc
imul
not
fbld
and
adc
hlt
mov
(bad)
xor
mov
cld
shl
sbb
stos
xor
fdiv
add
call
scas
not
adc
adc
cmp
hlt
stos
loop
push
add
pop
add
add
pop
sbb
or
hlt
mov
(bad)
xor
in
add
dec
mov
sbb
mov
scas
not
sub
je
push
pop
loop
daa
adc
jbe
ss
sub
mov
scas
push
xor
test
adc
jmp
mov
loop
add
add
imul
out
imul
test
sti
(bad)
jmp
mov
add
add
fs
cli
test
shl
mov
in
and
ins
add
mov
rol
mov
push
push
frstor
push
fcom
outs
push
idiv
pop
add
mov
add
add
cmps
dec
(bad)
jns
pop
test
dec
xchg
not
push
push
push
pop
sbb
outs
inc
add
sub
or
ins
add
aaa
adc
add
mov
imul
pop
clc
inc
adc
jns
repz
lea
pusha
push
push
ret
jmp
movs
mov
inc
add
add
mov
call
arpl
clc
scas
call
mov
dec
add
xor
or
jle
nop
dec
lea
push
out
xlat
loope
out
pop
arpl
je
sti
aad
add
jne
int3
retf
lods
dec
call
mov
adc
pop
adc
jb
add
add
adc
push
adc
loop
sbb
cmc
test
add
sub
push
imul
ret
aad
add
sar
jns
jo
jae
aas
fwait
out
mov
add
cmc
xor
add
lahf
pop
jmp
mov
test
div
xor
retf
add
add
xor
adc
mov
in
jne
dec
push
push
add
idiv
xchg
loopne
aaa
jle
bound
adc
mov
mov
dec
(bad)
std
ret
xchg
scas
add
retf
add
ja
xchg
scas
shl
xor
jo
xor
mov
mov
add
add
add
ja
leave
ret
cli
stos
sub
push
or
sbb
fmul
add
push
retf
inc
ja
xchg
scas
shr
jno
xchg
mov
movs
mov
xor
shl
call
addr16
push
dec
add
in
xchg
outs
or
add
add
dec
ror
pop
dec
lahf
dec
pop
clc
add
je
jne
lea
adc
ins
mov
mov
ror
jg
jb
movs
add
sbb
pop
xchg
ins
add
addr16
rol
adc
in
cli
xor
pop
ror
xchg
ins
add
mov
push
rol
adc
movs
fwait
cli
or
add
sbb
(bad)
sbb
jb
adc
iret
fdivr
call
push
add
div
adc
enter
enter
push
in
push
in
jns
lods
test
mov
fndisi(8087
add
sbb
add
add
push
pop
pop
dec
push
ret
jge
call
nop
inc
fs
shl
pop
lahf
sar
xor
mov
sub
dec
push
mov
stos
div
cmc
adc
fs
cli
test
not
outs
sbb
(bad)
push
xlat
loope
stc
adc
push
add
add
aaa
adc
push
fild
and
pop
test
dec
nop
cmps
dec
push
imul
add
pop
lock
inc
fs
shl
pop
sub
cmc
adc
fwait
cli
adc
cli
jno
adc
add
(bad)
jne
mov
push
fs
jae
adc
and
add
add
push
test
jne
add
je
cli
mov
es
push
fmul
push
popa
jp
jno
push
(bad)
jmp
add
hlt
add
ss
cli
add
or
push
das
push
movs
cli
push
adc
cld
nop
cmp
push
ret
sbb
in
push
mov
xor
dec
push
push
pop
leave
bound
ror
add
add
scas
cli
fimul
mov
out
fldcw
(bad)
dec
call
cmps
adc
mov
cwde
ins
add
daa
pop
mov
add
idiv
addr16
xor
lods
dec
push
dec
es
inc
hlt
stos
dec
(bad)
mov
add
cmp
mov
sbb
adc
ss
cli
scas
movs
and
sbb
add
outs
inc
add
dec
not
push
pop
cld
add
push
xchg
sub
dec
(bad)
jns
mov
jl
jbe
mov
mov
push
leave
daa
fwait
sub
and
push
scas
psadbw
movs
cld
(bad)
cmp
ja
and
inc
cld
scas
dec
push
jb
add
(bad)
fdivr
clc
lods
push
(bad)
jns
not
xor
mov
add
add
ret
(bad)
rcl
in
hlt
retf
xchg
jp
mov
and
adc
inc
dec
repnz
xchg
jp
mov
or
loope
push
test
mov
fld
cmp
jp
push
repz
call
sub
add
ret
iret
(bad)
rcl
inc
add
add
mov
cmc
xor
add
add
fcmovb
nop
js
push
(bad)
jns
cmc
adc
mov
ja
call
adc
adc
pop
add
in
mov
or
(bad)
sti
leave
ret
(bad)
rol
jb
xchg
cld
cmc
aaa
xchg
lock
push
adc
jmp
inc
add
add
std
sub
std
jae
ret
mov
idiv
shl
idiv
add
idiv
repz
idiv
add
xchg
inc
and
jae
lahf
loop
xchg
mov
xchg
not
movs
out
stc
imul
rol
add
push
in
adc
lahf
inc
add
add
imul
in
stc
(bad)
push
fiadd
adc
in
or
jmp
cli
adc
sahf
cli
mov
(bad)
mov
mov
into
xchg
cli
xor
jns
call
in
xor
adc
xor
push
std
cmc
push
shr
(bad)
cld
jmp
add
mov
cmps
repnz
fimul
inc
lahf
ficom
xchg
(bad)
push
xchg
scas
out
push
sub
in
jmp
push
inc
fdiv
jne
push
xchg
out
add
jmp
cld
int
push
fisttp
mov
mov
jle
add
ds
add
add
popa
stc
dec
arpl
call
mov
enter
add
cmps
rcl
push
mov
cdq
leave
ret
mov
lods
sub
ret
mov
lock
mov
sti
call
pop
ror
xor
mov
inc
pop
loope
xchg
cld
xchg
dec
mov
inc
add
add
data16
add
sub
in
gs
repz
call
test
test
dec
add
add
fistp
sub
daa
inc
fs
pushf
fld
add
inc
add
aad
xchg
hlt
fadd
push
fwait
push
test
icebp
and
push
cmp
fadd
and
call
movs
div
dec
and
jne
(bad)
(bad)
jae
jmp
pop
sti
dec
mov
inc
push
(bad)
xchg
and
push
jl
jmp
je
dec
dec
call
and
fadd
and
(bad)
jns
sti
call
not
fdivr
lds
imul
lock
add
add
add
lea
je
mov
add
imul
adc
cld
(bad)
cmp
mov
cld
cmc
dec
je
call
loopne
loopne
and
je
dec
div
int3
dec
loop
jae
in
je
dec
not
mov
and
adc
add
jmp
pop
call
std
add
add
shl
jmp
ret
cdq
push
in
mov
mov
cmp
imul
test
ret
xor
jns
sbb
dec
mov
push
mov
and
div
push
inc
add
fdivr
call
dec
not
pop
and
mov
cli
jmp
std
fild
add
add
push
call
in
dec
jmp
inc
sbb
mov
call
movs
or
repz
loop
xchg
and
jmp
pop
mov
xor
imul
adc
(bad)
fist
sub
xchg
imul
repnz
ret
jns
in
adc
cmp
dec
push
jne
jbe
cs
add
add
int3
mov
(bad)
in
inc
jae
imul
and
add
push
ds
call
leave
aad
inc
mov
(bad)
push
cmc
dec
div
jae
push
dec
not
out
(bad)
in
fisttp
ret
test
lahf
adc
inc
fadd
jmp
push
dec
cld
push
sbb
add
movs
dec
fs
fimul
cli
ds
dec
push
mov
xor
cdq
fild
(bad)
cdq
cli
(bad)
jmp
inc
bound
call
and
cli
push
sbb
lods
sub
cli
push
cli
cmp
stc
xlat
cmc
adc
hlt
and
fdiv
pushf
cli
(bad)
mov
xlat
add
movs
inc
mov
add
hlt
dec
push
sub
out
push
out
mov
sub
call
dec
pop
cmp
cwde
mov
mov
cmp
adc
out
sar
cmp
je
scas
sbb
enter
cmps
fild
jne
popf
cmp
mov
jecxz
jg
jmp
data16
and
add
or
call
pop
push
cmp
pushf
or
jnp
scas
(bad)
or
mov
int3
shl
xor
in
jl
pop
out
jne
dec
cmp
fdivrp
jne
dec
je
cmps
repz
and
push
cmps
dec
xlat
mov
call
pop
mov
adc
add
and
cmp
lds
out
mov
fisttp
pop
sbb
aad
mov
push
jl
dec
fsub
ror
call
xor
mov
xchg
inc
mov
iret
add
sub
shl
daa
sbb
mov
add
cld
adc
pop
pop
pop
push
call
add
add
sub
pop
in
and
out
mov
jp
aam
add
adc
jno
dec
lea
rcl
sbb
xor
inc
jne
pop
rol
lock
rol
xlat
push
push
call
ins
sbb
dec
jnp
jo
dec
push
add
add
sti
dec
repz
mov
add
cmp
fisttp
in
out
fldcw
push
call
out
adc
out
rol
fist
inc
add
sbb
cmps
icebp
pop
repz
or
sbb
lods
jl
(bad)
cmp
mov
loop
aas
not
cld
(bad)
inc
add
add
ds
mov
dec
sub
pop
fs
in
push
push
cmp
push
add
inc
int3
jb
jp
or
push
mov
mov
fsub
add
mov
add
daa
sub
inc
add
and
call
popf
inc
add
inc
leave
ret
ds
cli
out
add
add
idiv
rcl
push
int3
and
push
inc
aam
test
std
add
jne
push
add
in
arpl
pop
loope
jne
pop
mov
rcl
add
xchg
jmp
pop
setge
mov
stos
call
test
mov
(bad)
retf
push
mov
stos
call
add
mov
mov
fist
movs
setge
mov
adc
test
(bad)
mov
iret
pop
imul
adc
test
mov
mov
jmp
in
fwait
cli
mov
adc
test
imul
les
popa
cmp
call
adc
sti
(bad)
cmp
jne
dec
adc
inc
movs
popa
inc
aam
sbb
je
mov
sub
fisttp
loop
adc
and
cli
mov
adc
test
call
adc
mov
push
mov
lock
jne
pop
in
add
add
cld
pushf
in
adc
cld
hlt
fs
popa
fdiv
jmp
fld
in
adc
xchg
fld
add
xor
mov
jb
std
xchg
loopne
add
add
inc
movs
gs
call
lahf
pushf
cmp
shl
repz
cmp
call
add
add
inc
add
add
cmp
(bad)
jns
cmp
in
std
adc
inc
lock
cmp
cmp
jl
lahf
mov
push
cld
push
test
arpl
mov
fdiv
call
ds
lds
loopne
lds
not
xor
call
(bad)
mov
or
or
add
add
xchg
mov
imul
shr
je
add
je
cmp
loope
cli
xchg
inc
je
movs
rcl
or
mov
or
fdiv
loope
std
mov
jnp
sub
jae
xchg
push
fisttp
jmp
not
fdiv
add
test
idiv
call
popf
push
push
mov
arpl
inc
mov
call
mov
(bad)
and
inc
nop
cs
push
push
or
add
jne
out
mov
and
and
inc
je
sub
dec
xor
inc
shl
mov
fwait
in
inc
add
add
and
fwait
xor
movs
cli
out
stos
idiv
pop
sub
(bad)
cmp
mov
idiv
xor
dec
push
xor
inc
add
je
popa
pop
std
mov
int3
popf
mov
outs
arpl
test
sub
int
pop
sahf
retf
xchg
or
ret
stc
clc
in
mov
add
add
mov
lds
sahf
not
xor
call
fild
test
repz
jne
pop
or
add
imul
jle
inc
and
add
hlt
repnz
lahf
cli
xchg
in
inc
in
imul
add
pusha
in
sub
jae
add
add
xor
mov
sti
xchg
push
push
xchg
outs
xor
stc
je
test
cs
inc
not
stos
cmps
std
repz
pop
mov
call
sbb
pusha
or
fld1
cmp
push
inc
add
mov
xor
inc
or
add
add
add
and
and
add
jmp
in
sub
dec
xchg
test
mov
add
mov
fwait
jo
mov
idiv
frstor
in
jmp
sti
inc
add
and
test
not
sub
loope
dec
mov
add
cmp
mov
mov
cld
mov
not
adc
mov
pop
push
cld
jmp
sbb
loop
cs
leave
aaa
xor
cmp
in
xchg
and
xor
sub
or
test
movs
cli
add
or
dec
(bad)
jns
add
add
dec
cld
inc
add
test
movs
in
sub
std
jmp
cmp
pop
ds
in
test
and
pop
(bad)
repz
xor
cmp
inc
pop
test
shl
not
sub
and
mov
cli
test
xchg
or
push
sub
cld
push
adc
add
and
(bad)
xor
retf
pop
mov
mov
push
das
cld
mov
call
push
movs
lds
retf
ret
mov
or
sti
int3
cmc
idiv
jmp
je
xor
shl
je
div
in
test
nop
jecxz
test
mov
add
fiadd
add
add
add
pop
mov
or
int3
(bad)
adc
lods
add
in
inc
hlt
mov
lea
mov
shr
dec
(bad)
fxam
mov
shl
cmp
and
push
daa
adc
sahf
push
cld
jmp
xor
pop
das
pop
push
xor
loop
pop
pop
test
sub
add
add
add
jo
pop
mov
xor
test
daa
dec
xor
pop
add
rcr
mov
cdq
sar
or
inc
add
repz
add
ftst
in
mov
fadd
add
shr
cmp
call
pop
(bad)
mov
inc
in
cmp
rcr
add
pop
repz
and
fs
and
cmp
pushf
cli
test
lea
and
inc
sub
push
arpl
push
and
dec
rol
leave
retf
pop
mov
scas
mov
or
call
lds
ret
mov
dec
push
jnp
cmc
imul
je
inc
add
add
hlt
fadd
mov
addr16
out
cmp
push
mov
leave
mov
fdivr
add
in
out
jmp
adc
add
mov
sbb
(bad)
jmp
sub
pop
imul
jecxz
inc
je
shl
cmp
add
add
and
push
cmps
adc
call
mov
sbb
xor
ds
jmp
test
sub
add
adc
outs
repz
inc
test
repnz
cld
daa
sub
ror
add
ret
add
or
call
into
jns
fcom
add
icebp
inc
add
add
add
push
out
jmp
fiadd
add
adc
test
and
pop
jg
call
and
cs
je
out
cld
mov
not
sub
and
cmps
fwait
cli
test
sahf
or
call
sub
pop
pop
cld
jmp
and
dec
rol
and
retf
pop
add
add
int3
xor
push
pusha
xor
aad
test
mov
jle
jno
inc
fs
enter
jno
lock
jmp
xchg
inc
sub
shr
shl
jae
cmp
scas
inc
adc
add
(bad)
iret
aas
sub
sahf
xlat
push
test
add
add
ret
adc
adc
jle
jno
mov
xor
mov
daa
div
repnz
aam
in
aad
rcl
int3
addr16
add
mov
(bad)
jae
jae
dec
repz
aam
punpckhwd
push
xlat
mov
pfmax
bswap
loope
adc
push
add
add
lods
movs
sub
inc
loope
adc
icebp
push
adc
ror
(bad)
and
xor
out
jnp
push
leave
lea
mov
ud0
adc
jnp
mov
mov
das
lea
pop
or
inc
rcr
jge
add
jnp
pop
xchg
scas
jae
in
fcomp
in
mov
add
add
in
mov
in
nop
in
dec
xchg
in
dec
mov
cmp
fild
je
fs
imul
arpl
cmc
add
xor
loope
mov
push
add
push
or
add
je
mov
inc
add
aad
vmread
add
hlt
jecxz
test
sub
je
ret
mov
mov
in
bound
jmp
inc
js
(bad)
jae
cmp
and
xor
and
mov
arpl
jo
sbb
test
mov
sbb
and
push
cmp
add
fs
bound
add
add
xor
add
jns
not
mov
mov
cmp
dec
push
jnp
dec
mov
je
sub
adc
ins
sub
push
hlt
ss
push
and
mov
rcr
div
and
dec
mov
lods
xchg
jp
xchg
add
add
call
pop
adc
in
cli
mov
dec
(bad)
jns
mov
jnp
cmp
call
in
inc
add
and
jns
nop
push
bnd
or
test
add
inc
cld
jmp
sahf
call
cmps
cmp
bnd
add
ret
aad
add
add
shl
cli
cs
cmc
adc
dec
enter
mov
adc
das
or
ret
xchg
cli
mov
sbb
or
add
ins
inc
add
and
call
out
adc
add
mov
inc
lock
imul
adc
popa
jns
add
add
sub
add
add
and
cli
imul
push
test
imul
loop
std
xchg
cmp
imul
mov
fist
call
call
mov
xlat
xor
cmp
mov
and
add
add
add
call
fisttp
or
les
test
loope
add
fisttp
mov
ja
add
jmp
cwde
aaa
data16
loopne
aas
test
add
scas
fild
add
adc
push
movs
fimul
xor
out
fld
add
add
sbb
push
call
jmp
push
add
pop
test
loopne
(bad)
div
ret
cwde
ret
call
(bad)
cmp
mov
fiadd
scas
adc
inc
aam
mov
mov
sbb
retw
add
jae
add
add
pop
sub
inc
in
int
inc
add
inc
jl
stos
out
rcr
push
mov
mov
test
mov
fisubr
jmp
fucomip
call
ins
movs
rcr
outs
jo
push
xchg
dec
lea
test
fcomp
std
ret
push
je
call
xor
je
add
or
add
add
popf
into
push
sbb
sahf
std
adc
cli
push
mov
mov
jo
sti
(bad)
jle
dec
lea
cmps
cmc
mov
movs
cmc
ret
pop
js
xchg
xchg
cli
out
sti
idiv
pop
xchg
add
mov
ror
xchg
push
ds
popf
push
push
inc
pop
idiv
pop
lock
outs
and
add
add
or
add
push
adc
popf
push
push
inc
pop
test
xchg
jmp
add
cld
and
mov
push
call
mov
and
xor
div
iret
push
shl
jae
outs
stos
dec
call
hlt
dec
inc
int3
add
add
hlt
scas
cmp
and
add
movs
fild
out
loop
(bad)
(bad)
xlat
bound
and
(bad)
cmp
call
call
bound
data16
push
je
fistp
pop
mov
jbe
mov
mov
scas
add
(bad)
add
add
adc
imul
fisub
add
(bad)
repz
inc
or
jns
ret
mov
lock
mov
idiv
jae
mov
jmp
mov
push
dec
cld
pop
call
jl
add
repz
mov
or
add
add
rcl
retf
icebp
sti
dec
cmp
mov
push
test
mov
pop
or
push
mov
push
xor
sbb
mov
movs
icebp
mov
mov
ret
mov
jmp
jmp
pop
(bad)
jmp
push
inc
aam
imul
push
push
movs
xchg
mov
add
or
inc
aam
push
inc
mov
add
inc
mov
fsubr
shl
mov
rcr
push
call
cmps
xor
lea
mov
out
fld
lea
mov
push
movs
es
fsubr
sub
add
add
dec
test
cmc
pop
xlat
js
mov
dec
dec
mov
fs
pop
xchg
or
test
test
cmp
cdq
lds
cmp
stos
scas
jp
icebp
movs
push
mov
jmp
(bad)
mov
movs
mov
add
pop
inc
add
add
movs
call
push
mov
xchg
push
inc
add
dec
enter
mov
mov
leave
mov
inc
mov
mov
mov
cmp
xchg
mov
cmc
push
popa
pop
pop
push
push
dec
jp
test
sub
std
xchg
push
lds
push
dec
and
add
sub
push
xor
shl
dec
push
push
mov
add
add
pushf
(bad)
sti
call
inc
pushf
fs
rcl
mov
cmc
push
fiadd
add
out
jl
rep
mov
int3
jmp
lea
inc
push
lea
or
lea
add
add
js
push
rol
call
push
in
test
movs
cmc
push
push
test
inc
sar
add
and
cmc
push
xchg
shl
dec
mov
test
cmp
add
movs
call
push
jle
mov
ins
mov
call
out
and
shl
push
dec
(bad)
jmp
hlt
cdq
std
jae
inc
mov
xchg
ffree
je
mov
cmc
adc
add
je
mov
cdq
sub
inc
aam
movs
mov
shl
add
addr16
jmp
pushf
or
add
jp
pushf
clc
sti
push
lea
mov
mov
mov
clc
sti
jmp
mov
mov
ins
movs
cmc
dec
fcmovnbe
(bad)
rcr
xor
fwait
mov
int3
sub
and
pop
xor
pop
movs
cmc
mov
add
add
iret
sub
sbb
rol
mov
or
shr
out
je
add
jns
dec
mov
dec
jmp
push
mov
jne
scas
mov
adc
inc
cld
xor
xchg
pusha
jecxz
cmc
cmp
(bad)
inc
mov
lea
mov
arpl
add
add
not
loope
jne
pop
scas
mov
mov
je
sub
imul
pop
mov
ret
jmp
sbb
div
pop
ret
adc
xor
je
mov
je
fsubr
cmps
std
ret
lea
das
div
sbb
pop
cld
into
add
jp
pusha
test
imul
adc
mov
mov
push
push
mov
loopne
push
fld
adc
xor
int3
adc
mov
call
inc
add
mov
push
xchg
mov
mov
mov
dec
mov
sti
inc
les
inc
enter
adc
mov
push
mov
mov
add
fs
push
xor
loop
outs
shl
in
push
mov
aaa
div
inc
shl
adc
mov
adc
jae
pop
div
popa
inc
aam
jmp
jge
imul
and
idiv
outs
mov
pop
popa
call
sub
add
add
popa
mov
call
aas
call
ja
mov
add
inc
fs
or
mov
xor
gs
movs
out
adc
out
adc
test
pop
add
cli
xor
lea
sub
and
not
test
sub
add
sbb
addr16
add
inc
in
add
in
add
mov
cs
(bad)
icebp
ret
dec
push
and
je
jae
xor
or
cmc
jne
or
cli
mov
and
out
mov
(bad)
jmp
add
and
leave
in
and
mov
add
add
(bad)
mov
add
lods
sub
popa
ja
sub
cld
mov
inc
test
pop
inc
lods
movs
cs
push
repz
stos
(bad)
stc
dec
mov
shl
je
inc
sbb
call
sub
(bad)
dec
xor
repz
mov
mov
je
sub
imul
add
add
sub
sti
(bad)
jge
add
je
je
repz
test
xor
fucomi
jg
or
jmp
prefetchnta
test
fiadd
add
js
pop
sbb
push
nop
cmc
adc
or
das
loop
int
test
and
jb
aad
lea
dec
push
aaa
xor
dec
shl
adc
add
inc
add
jae
stos
push
out
mov
add
jmp
fld
mov
test
mov
mov
lea
fcom
rcl
jmp
mov
lea
mov
cwde
mov
xor
push
test
add
lea
add
add
das
loop
jecxz
idiv
jno
jae
lahf
push
(bad)
cmp
xchg
or
xchg
mov
mov
mov
call
mov
mov
or
mov
push
imul
mov
add
daa
add
je
pusha
clc
add
or
inc
cmp
leave
push
daa
out
loop
imul
push
fdivr
add
rcr
sbb
inc
loopne
cld
mov
aad
test
sub
stos
or
mov
in
xor
and
inc
or
jge
fdivp
jne
lea
pop
push
test
and
add
fucomip
inc
jno
lea
enter
popf
inc
cld
jmp
add
push
pop
je
add
add
pushf
cmp
std
xchg
sub
xchg
into
mov
or
sbb
or
jmp
pop
inc
mov
icebp
add
jne
neg
dec
cmc
adc
fist
push
call
cmps
jb
lea
or
mov
call
ret
jle
mov
pop
sbb
out
mov
inc
add
add
out
jg
mov
imul
gs
sub
ds
cmp
sub
call
imul
movs
fild
mov
pop
push
mov
in
mov
call
inc
push
xor
aam
icebp
add
adc
push
inc
and
je
loop
jnp
idiv
mov
cwde
call
add
add
ret
dec
push
mov
pop
sbb
out
stos
idiv
mov
loop
inc
cmps
cmp
test
push
and
jmp
out
sub
push
mov
ins
and
call
cmp
lea
aam
jb
pop
mov
add
adc
pop
mov
add
add
add
pop
dec
pop
out
cmp
call
xor
or
mov
out
add
test
xlat
xor
add
jmp
cdq
call
ret
mov
add
xchg
ss
add
mov
fimul
mov
pushf
xchg
mov
rcl
inc
add
add
in
sub
cmp
xchg
add
fld
mov
ja
jo
sbb
out
ret
in
aas
sbb
push
jmp
jne
daa
test
xchg
add
and
cli
add
and
call
dec
(bad)
inc
xor
jae
jmp
std
add
inc
nop
add
add
fs
push
int
add
movs
rcl
(bad)
test
add
dec
dec
inc
hlt
dec
rol
sub
out
arpl
inc
add
mov
jae
imul
enter
jmp
add
xor
not
(bad)
mov
out
push
popf
icebp
add
dec
lock
jne
jo
out
add
add
mov
add
mov
lock
add
add
mov
and
mov
div
mov
cld
mov
inc
inc
shl
cli
push
mov
iret
sbb
or
sbb
xor
mov
add
dec
call
xlat
pop
mov
mov
mov
xchg
and
cmp
mov
inc
call
call
sbb
push
int3
imul
(bad)
jnp
ror
fild
not
mov
jmp
aad
mov
adc
mov
dec
xor
bnd
add
jns
add
add
lock
add
sbb
or
lock
sti
retf
cwde
bound
cmp
cs
movs
repnz
rcl
pop
jmp
fnstenv
daa
inc
ret
fdivr
xor
mov
add
add
in
(bad)
shr
ficomp
aam
inc
add
pop
mov
add
add
repz
aaa
xor
test
sub
call
cmp
push
inc
lea
sub
imul
jmp
outs
div
sub
ror
not
mov
add
stos
fldcw
cld
pop
pop
inc
add
add
je
daa
lea
lods
call
push
rcr
stos
dec
shr
mov
test
push
add
fcomip
cmc
push
jnp
mov
add
(bad)
or
xlat
call
int
jne
jno
mov
fmul
xchg
scas
sti
(bad)
jg
add
into
xchg
std
ret
sar
jmp
add
add
repnz
jae
lahf
inc
imul
inc
cld
out
rcl
arpl
mov
jl
inc
add
xor
xor
fsub
inc
add
mov
add
fnsetpm(287
out
test
fadd
add
shr
imul
cmc
pop
ret
adc
inc
xor
sbb
add
sbb
push
test
or
add
sar
shl
(bad)
cli
fild
inc
pop
stc
mov
fs
inc
add
cmp
pop
test
call
mov
sbb
mov
hlt
cmc
(bad)
fdecstp
mov
adc
adc
call
lds
push
mov
fs
add
add
out
cli
test
sub
add
dec
call
pushf
pop
pop
inc
and
loop
in
repz
mov
out
ficom
add
ins
dec
mov
push
or
movs
std
repz
mov
hlt
push
mov
call
enter
mov
mov
scas
idiv
xlat
xchg
xor
sub
fwait
xchg
(bad)
pop
in
jl
call
jp
xor
add
and
inc
in
cmp
fisub
jbe
mov
(bad)
pop
aam
enter
gs
imul
mov
call
mov
(bad)
inc
ror
xor
add
add
pusha
in
add
or
mov
call
aaa
or
push
push
test
push
lods
std
xchg
sub
lea
add
push
sub
jae
in
and
call
std
and
add
xchg
add
push
cmp
and
ss
call
call
test
jp
call
jl
push
inc
and
lea
sub
cli
jmp
hlt
add
call
cld
add
sbb
dec
call
daa
test
cdq
jno
dec
push
and
mov
sti
call
add
clc
minps
ins
loopne
add
add
je
jl
out
loop
arpl
add
inc
sub
inc
int3
cdq
fdiv
pop
sar
cmp
pop
call
add
test
arpl
call
mov
lea
(bad)
mov
add
repz
(bad)
clc
jns
(bad)
cmp
dec
cs
push
or
xor
cmps
cwde
jno
dec
push
inc
mov
mov
adc
minps
js
push
idiv
add
add
inc
aam
xlat
aaa
pop
shl
jg
sub
xchg
sub
jne
imul
retf
push
call
lea
mov
add
xchg
les
add
add
std
jns
call
out
mov
dec
call
daa
test
cwde
sar
dec
push
popa
outs
mov
sub
sbb
add
dec
mov
call
addr16
mov
mov
enter
inc
or
or
pop
fs
xchg
add
add
push
pop
(bad)
frstor
(bad)
jns
je
imul
and
xchg
inc
mov
xor
jmp
scas
mov
cli
(bad)
imul
pop
inc
in
or
or
rol
adc
fld
add
ss
mov
cld
jae
and
sahf
call
add
add
fisttp
pop
cld
jl
mov
adc
ins
sahf
jmp
sub
xchg
(bad)
push
cs
fld
adc
add
push
call
icebp
data16
fprem1
inc
add
retf
mov
xchg
jl
jl
and
jnp
dec
push
repz
call
call
add
in
adc
cmc
jne
lock
mov
dec
push
test
push
jmp
(bad)
sti
push
aam
adc
call
rol
pop
cmp
test
fadd
mov
inc
mul
std
arpl
xor
jb
inc
shl
add
add
pop
test
inc
xor
xchg
sub
rcl
jne
das
rol
gs
and
mov
loop
inc
lods
jne
xor
out
icebp
xchg
sub
mov
cwde
xchg
fs
xor
push
inc
int3
xchg
imul
xchg
fs
popf
sti
jmp
fwait
or
mov
dec
push
test
inc
xor
cmp
push
cmps
jo
test
call
mov
sub
scas
out
pop
call
push
je
xchg
add
fisubr
and
or
je
push
xor
hlt
rcl
loopne
clc
ja
adc
push
lods
jns
shr
push
das
xchg
call
add
cmc
mov
adc
movs
fimul
or
call
loop
jne
xchg
adc
or
mov
rcr
adc
add
call
lods
push
stc
mov
and
jbe
mov
inc
in
push
(bad)
sub
mov
(bad)
je
jae
adc
xchg
add
add
mov
mov
je
fld
std
push
jae
ror
xchg
sub
dec
(bad)
icebp
add
add
xchg
pop
test
sub
xchg
fidiv
add
push
push
add
sti
dec
loope
mov
jmp
sbb
add
add
add
loopne
fsub
sbb
push
int3
xlat
scas
(bad)
repz
add
cwde
mov
idiv
adc
call
(bad)
mov
jo
lea
jmp
push
dec
xlat
mov
dec
pop
cld
mov
mov
int
out
pop
das
adc
(bad)
jmp
int3
sti
jmp
jno
lea
or
jmp
add
add
jecxz
mov
pop
jmp
ret
push
sbb
mov
sbb
out
xchg
idiv
pop
add
mov
outs
sub
test
dec
je
lods
bound
xor
call
cmp
sub
sub
add
out
rol
add
add
push
lods
add
add
cmp
movs
fild
enter
add
(bad)
pminub
idiv
sbb
pop
jl
pop
ins
add
push
xchg
and
add
sar
mov
retf
push
jl
cmps
fld
add
add
sub
mov
out
push
call
mov
fidivr
jg
mov
or
add
cli
cli
and
fdivr
inc
cmps
dec
leave
ror
shl
fadd
and
add
retf
leave
mov
lea
neg
sbb
enter
mov
movs
cmc
jne
sub
inc
add
add
fdivr
(bad)
ja
in
das
pop
jl
rol
test
aad
xchg
and
add
mov
pop
sub
mov
add
out
in
(bad)
loopne
lock
retf
fcom
cmp
call
sub
add
fdivr
jle
mov
or
add
call
and
pop
sar
loopne
xlat
inc
shl
pop
retf
stc
add
retf
test
add
inc
shr
gs
imul
mov
ror
retf
outs
cli
imul
add
add
cdq
std
repz
inc
mov
ret
cwde
push
mov
mov
push
je
dec
sub
movs
jo
jmp
cmc
jmp
out
xlat
sub
pop
fs
je
stc
adc
mov
fdivr
jp
js
xlat
add
cmp
jge
movs
(bad)
jmp
call
movs
or
jmp
xor
cmc
repz
add
cmp
cmp
adc
sbb
dec
jae
inc
hlt
rcl
inc
jbe
cli
(bad)
jecxz
hlt
loopne
and
in
sub
add
xor
sbb
(bad)
fstp
mov
xor
cli
(bad)
test
addr16
sbb
add
add
scas
shl
add
sbb
adc
idiv
jmp
add
(bad)
rcl
loope
adc
jmp
fcomip
adc
cmps
adc
imul
jecxz
xor
je
jp
push
jmp
jmp
gs
lea
pop
shl
fiadd
inc
add
add
popf
adc
xlat
call
sub
mov
(bad)
rcl
cmc
mov
jmp
adc
sbb
mov
in
add
jbe
push
dec
div
rol
add
fstp
inc
fs
ja
inc
ror
fidivr
push
xor
adc
add
add
in
push
loop
(bad)
shl
mov
mov
inc
hlt
add
ins
out
in
jae
jg
(bad)
out
jmp
sub
dec
(bad)
mov
cmp
mov
xor
jp
(bad)
mov
jo
pop
ja
sub
pop
fs
movs
pop
jns
fs
adc
cmp
and
push
add
add
ret
imul
(bad)
fistp
sub
mov
aas
jns
out
div
(bad)
mov
or
adc
mov
arpl
adc
push
ret
clc
push
jg
sbb
jne
push
and
dec
push
xchg
lock
sub
rcr
mov
add
loope
in
xor
xchg
int3
jns
lods
xor
mov
movs
xchg
mov
or
sub
jae
movs
outs
dec
push
adc
cmc
jne
pop
je
repz
(bad)
call
adc
mov
int
pop
lahf
sbb
mov
outs
loop
addr16
push
mov
or
fmul
mov
shl
mov
sub
hlt
mov
lock
push
not
pop
inc
shl
mov
dec
nop
call
(bad)
inc
pop
cli
mov
leave
loope
pop
sub
fwait
(bad)
int
pop
out
retf
xor
jae
fst
jmp
mov
add
xor
shl
loop
ror
pop
imul
rcl
xor
nop
push
sub
mov
call
call
xchg
xlat
(bad)
stos
ret
push
ror
(bad)
mov
mov
push
das
stc
call
push
push
fild
std
cmp
jmp
sub
int3
push
add
fild
add
inc
add
add
xor
call
pextrw
mov
push
inc
clc
sbb
imul
xchg
cmps
adc
popf
cmps
int3
fild
int
repnz
add
(bad)
hlt
fld
push
push
add
fld
add
add
hlt
xlat
pusha
retf
or
(bad)
fdiv
cmc
sub
or
mov
call
pop
movs
out
jne
add
fld
lock
fimul
loope
rcr
retf
push
call
mov
shl
mov
and
cmc
call
mov
ret
lea
imul
add
add
and
mov
repz
cmc
(bad)
jmp
pop
shl
div
ret
xor
sub
loope
pop
push
push
cmp
dec
or
mov
add
fdivr
test
dec
push
adc
adc
sub
(bad)
fcomip
in
adc
fbld
fwait
mov
xor
cmc
mov
xchg
aad
adc
cmc
cmp
pop
test
pop
test
repz
push
adc
cmc
adc
imul
jae
je
retf
loop
mov
cli
iret
int3
cmps
and
clc
sbb
pop
retf
loop
scas
add
add
ins
pop
loopne
mov
add
push
loop
push
mov
mov
dec
mov
mov
das
xor
je
add
mov
outs
cs
lahf
xor
mov
idiv
ror
bswap
xor
iret
inc
sub
mov
push
adc
xchg
push
cmc
pop
mov
repz
push
add
add
popa
pop
icebp
ffreep
loopne
(bad)
jns
aad
shl
adc
cli
test
push
popa
pop
mov
push
xor
fist
out
aad
adc
adc
out
cli
test
aad
shl
adc
and
push
ror
cmc
adc
add
cmc
adc
shr
push
je
addr16
int
cmc
pop
lahf
mov
fist
fild
inc
and
out
stos
sti
(bad)
jg
int
shl
or
fld
add
jb
xor
xor
jae
enter
cmc
adc
mov
push
cmc
pop
push
sub
add
add
loope
mov
(bad)
jmp
ins
fs
mov
(bad)
fild
inc
sub
nop
push
push
jmp
sub
nop
push
pushf
aad
adc
adc
sbb
call
repz
nop
sub
dec
dec
in
dec
xor
cli
cmp
aad
add
add
xor
inc
pop
icebp
fist
in
aad
xchg
iret
mov
xchg
in
lea
idiv
out
in
xchg
iret
adc
repz
push
mov
call
int
idiv
rcl
mov
int3
push
mov
jmp
bound
push
in
push
mov
mov
jge
in
push
add
add
mov
cli
test
inc
add
call
jmp
inc
sbb
push
sti
push
add
dec
cwde
cmc
adc
sub
jae
sub
call
adc
pop
sbb
outs
add
(bad)
jns
push
dec
mov
imul
jne
add
add
jae
adc
nop
js
loope
dec
sub
rcr
push
mov
fprem1
jne
scas
jae
adc
nop
push
pop
shl
inc
je
cli
push
rcr
(bad)
jmp
and
jecxz
arpl
xchg
in
(bad)
stc
not
stc
fwait
call
mov
ror
add
add
cmc
push
(bad)
fiadd
std
add
idiv
daa
dec
or
int3
(bad)
mov
in
fs
rol
retf
fcomp
or
outs
cli
je
xor
addr16
inc
add
mov
cld
cld
inc
mov
add
mov
jecxz
pop
fcom
std
add
add
ret
pop
fs
hlt
mov
in
stos
outs
jmp
fxam
inc
mov
xchg
enter
rcr
outs
cli
mov
ret
mov
sbb
loop
mov
cmp
repz
lock
jmp
rcl
add
int3
mov
das
imul
add
or
dec
push
lahf
add
ja
adc
ins
cli
(bad)
fldenv
lea
cmc
dec
and
call
lea
dec
sahf
das
sub
push
mov
in
add
cmc
sub
push
mov
ins
adc
call
sti
in
inc
movs
push
fadd
add
bound
jle
add
add
scas
jnp
ret
sub
test
push
push
jnp
add
dec
js
inc
xor
inc
mov
mov
cli
add
add
bound
add
ror
mov
jge
loop
call
pop
out
sar
xor
or
add
cmp
add
sti
jp
push
or
add
movs
xor
inc
movs
outs
bound
pop
ror
(bad)
pop
push
fs
mov
not
fisttp
jmp
(bad)
cmc
je
movs
inc
mov
hlt
cmps
push
push
pop
jp
inc
pushf
outs
not
dec
jmp
stos
inc
add
jle
cmc
xor
mov
mov
mov
or
mov
aam
pop
pushf
loopne
or
scas
inc
movs
mov
div
adc
inc
add
lea
jo
sar
loop
adc
out
mov
xchg
inc
adc
add
add
push
mov
and
movs
fbstp
rcr
lods
lods
sti
(bad)
sti
push
add
add
push
call
mov
dec
(bad)
test
cmps
sti
(bad)
jg
out
xor
inc
xchg
ins
add
iret
xchg
std
and
jne
inc
idiv
sbb
xchg
xchg
loopne
jge
add
add
lds
add
bound
sbb
or
lds
rol
mov
aas
test
call
mov
jnp
fcomp
jns
or
cmp
popa
xchg
mov
dec
add
add
adc
movs
(bad)
fcom
jge
test
movs
mov
add
add
add
loop
xor
ss
add
or
xchg
xchg
sbb
jge
rol
fcomp
dec
pop
fdiv
mov
sbb
add
mov
loop
xchg
(bad)
lea
adc
and
ds
sub
cld
and
add
add
xor
mov
cmp
mov
add
nop
dec
pop
sub
ret
lea
or
sub
or
aam
dec
iret
sub
push
cmp
cmp
fstp
mov
sub
sar
pop
jne
jae
cmp
add
add
xchg
out
mov
pop
jmp
loope
adc
jle
push
inc
movs
sub
push
pop
mov
fisubr
add
jae
jnp
jae
cld
fild
imul
cmc
(bad)
fucomip
add
dec
lea
cli
(bad)
fdiv
sub
inc
add
add
mov
inc
sbb
xchg
sub
not
fimul
(bad)
mov
fmul
mov
jl
inc
fdiv
int3
mov
(bad)
rcr
pushf
lods
or
push
mov
loop
mov
mov
loop
mov
inc
loop
add
add
xor
cmc
ret
cmp
or
dec
inc
hlt
mov
add
xor
lahf
inc
imul
mov
das
sahf
adc
outs
pusha
jb
pushf
push
push
and
scas
add
out
dec
sar
push
call
dec
add
add
add
lods
or
cdq
adc
call
nop
dec
push
addr16
dec
lea
xor
mov
(bad)
lods
and
jge
and
jge
and
ret
ret
sub
add
int3
cmc
je
shl
adc
iret
add
leave
push
fiadd
mov
pop
nop
jne
(bad)
pop
mov
das
add
add
inc
neg
movs
and
in
xchg
and
add
jecxz
and
pop
or
and
call
push
cmps
cwde
dec
mov
xor
add
and
and
add
hlt
fild
call
and
dec
hlt
sbb
jmp
std
inc
add
add
and
sti
dec
outs
and
sbb
and
fld1
fld
fwait
and
mov
mov
xchg
mov
and
and
mov
std
repz
xor
push
shr
call
enter
dec
add
and
sbb
fdivr
adc
dec
aaa
call
adc
div
call
pop
outs
xchg
or
jge
add
in
push
pop
and
div
call
pop
and
nop
call
ss
mov
pop
fs
cld
dec
cmp
lahf
add
push
in
add
ficomp
add
fwait
add
sub
and
fld
add
dec
mov
inc
sbb
test
sbb
and
mov
scas
call
imul
add
push
icebp
push
jge
and
outs
and
pop
or
cmc
adc
xor
lock
call
add
add
scas
rcl
icebp
cmc
adc
iret
sbb
or
icebp
pop
add
test
fs
ja
ins
push
push
and
scas
add
out
(bad)
push
mov
and
int3
xlat
test
repz
xchg
and
fiadd
add
fld
rcr
mov
dec
push
add
add
aaa
mov
aaa
mov
es
mov
clc
(bad)
jmp
and
xor
jae
jmp
and
push
add
xchg
(bad)
clc
sti
adc
leave
sbb
(bad)
jge
sti
push
push
scas
stc
push
mov
add
pop
sar
mov
mov
and
push
add
xchg
jmp
add
add
scas
call
je
mov
call
mov
shr
sub
cli
jmp
popf
push
mov
fucomi
jne
and
push
popa
lahf
sbb
push
and
jle
fcomp
add
cmps
xor
and
fsubr
jmp
mov
add
je
push
(bad)
call
(bad)
out
imul
neg
push
call
add
bound
loope
push
les
add
mov
dec
mov
std
out
sahf
cld
push
lods
and
sbb
jno
push
loopne
fiadd
push
mov
add
add
and
cli
jmp
push
sub
dec
jnp
xchg
mov
and
je
add
call
(bad)
out
sahf
cld
(bad)
out
fwait
and
std
jg
je
mov
push
add
imul
std
jmp
mov
inc
add
add
jle
cmp
add
in
xor
icebp
and
push
push
scas
and
fld
add
fld
pop
mov
pop
mov
mov
add
lods
push
jle
ins
fld
add
fisttp
push
call
mov
adc
sub
mov
mov
push
sbb
add
add
and
and
fld
mov
loopne
je
push
or
es
mov
jmp
call
and
loopne
dec
push
mov
repz
push
cld
sub
les
xor
shl
test
clc
(bad)
push
idiv
xchg
mov
and
lods
mov
push
lods
push
ds
push
add
xchg
dec
pop
std
(bad)
fstp
add
fs
ds
mov
push
sub
test
xor
or
push
xlat
add
mov
xlat
mov
dec
lea
xlat
(bad)
call
lods
and
add
xor
push
add
add
data16
cld
data16
adc
fisttp
lock
test
pop
mov
jmp
mov
pop
xchg
mov
mov
cmc
je
sti
xor
rcr
sbb
mov
dec
gs
dec
lea
inc
push
add
add
ja
dec
push
xor
xor
xor
add
or
xor
add
repnz
mov
data16
mov
inc
cmp
mov
(bad)
fiadd
push
mov
pushf
mov
scas
call
jmp
adc
call
loopne
add
inc
mov
inc
add
add
arpl
fsub
push
pop
xor
(bad)
push
jno
adc
push
fisttp
push
jle
pop
fld
add
push
fadd
dec
rcl
cmp
mov
jle
sbb
add
movs
bound
and
or
adc
cmc
bound
add
fld
or
add
add
inc
cmp
(bad)
or
mov
pop
idiv
ds
(bad)
inc
and
loopne
jmp
xor
jl
pop
and
loopne
xchg
ret
mov
lods
cmc
push
pop
fs
add
lods
or
cmp
cmc
push
sub
ds
lods
cmc
je
cmc
call
add
adc
lea
jne
push
xchg
and
fsubr
inc
cmps
dec
push
pop
scas
and
fild
add
cmp
and
fild
add
xchg
or
mov
add
lods
push
mov
les
add
xchg
(bad)
repz
in
daa
mov
mov
call
add
add
fbld
add
inc
shr
inc
enter
call
lods
mov
idiv
popf
mov
inc
les
imul
xor
lea
pop
mov
call
sub
mov
cmp
push
inc
inc
add
add
or
inc
or
inc
lock
xchg
inc
or
call
rol
push
lea
push
std
jmp
push
push
push
cmps
pop
lea
or
call
jnp
or
adc
cmc
call
xor
xchg
or
sub
repz
inc
rcl
loop
add
add
jp
idiv
cmp
lea
scas
mov
scas
call
sub
enter
(bad)
jmp
maskmovq
push
cld
or
or
push
and
aam
scas
pusha
std
call
mov
mov
cmp
test
or
push
xchg
dec
mov
mov
or
aam
loope
test
fdiv
add
cdq
ror
sbb
ficom
or
push
mov
(bad)
rol
test
dec
std
jmp
adc
fld
std
shl
call
sbb
loop
sub
test
inc
add
or
or
add
sbb
inc
add
jl
dec
idiv
or
inc
add
shr
cmp
out
imul
xchg
call
push
(bad)
and
mov
fld
add
inc
in
dec
mov
shl
mov
xchg
jl
int3
cmp
jae
inc
mov
hlt
pop
inc
and
inc
cld
mov
pop
(bad)
xchg
add
les
ins
rol
call
push
mov
out
mov
mov
jbe
adc
pushf
call
jnp
mov
aaa
scas
test
add
aam
mov
call
stos
scas
mov
xor
jne
mov
out
cmp
call
mov
add
inc
call
add
or
cli
addr16
inc
add
mov
jmp
test
add
and
je
dec
aam
sub
std
rcr
mov
movs
add
sub
add
mov
add
fwait
aam
pop
pop
std
dec
fwait
mov
call
push
clc
push
mov
in
addr16
push
scas
push
inc
cmp
mov
hlt
pop
out
in
add
(bad)
sbb
jmp
ret
inc
mov
les
add
add
fs
push
movs
fiadd
xlat
xlat
add
je
inc
or
push
sub
std
stos
and
pop
push
mov
mov
jmp
add
add
mov
add
lods
imul
xor
jmp
hlt
xchg
out
call
aaa
mov
mov
fucomp
mov
push
add
mov
frstor
xor
add
and
sbb
adc
add
std
adc
cmp
xchg
push
(bad)
call
fucomp
je
add
test
jmp
xchg
lea
fadd
add
fld
call
jmp
add
inc
push
and
fld
or
pop
push
adc
fadd
push
pop
and
adc
push
fdivr
addr16
mov
and
mov
add
pushf
mov
jne
sbb
and
xlat
loope
push
and
shl
and
xlat
add
ficomp
add
data16
pop
lock
cmps
lods
mov
call
cmp
scas
cmc
lea
fcom
mov
call
push
xchg
test
fadd
add
out
pusha
add
(bad)
out
cmp
daa
scas
inc
push
(bad)
out
ja
inc
add
add
aaa
cli
jmp
fs
fnstsw
or
and
movs
lods
call
pop
out
add
fs
add
jbe
cmp
jmp
xchg
test
add
(bad)
fiadd
fisttp
sub
call
dec
nop
cmp
pop
xor
cmp
pop
sub
add
dec
inc
(bad)
jge
and
dec
pop
repnz
dec
ficomp
mov
sbb
sub
bound
in
add
clc
mov
call
shl
cmc
je
mov
call
mov
xlat
add
sub
jne
add
ror
call
lods
xor
fwait
and
add
add
movs
sbb
and
fld
add
xor
les
cmps
bound
ror
and
add
clc
cmp
cmps
scas
dec
in
pusha
add
(bad)
call
outs
xchg
and
popa
jne
dec
popa
jge
inc
int3
fild
and
mov
clc
nop
cmp
and
test
add
cmp
add
std
mov
add
inc
dec
jns
inc
or
add
out
je
add
daa
ss
jmp
add
sbb
je
adc
jle
pop
fiadd
add
fld
add
fld
add
cmc
mov
hlt
pop
cmp
je
outs
inc
push
in
add
add
in
add
dec
loop
cmp
mul
shl
adc
add
xchg
test
xlat
add
jl
test
adc
add
mov
fadd
jb
test
test
in
(bad)
push
fndisi(8087
dec
push
test
fadd
call
jmp
or
xchg
test
add
add
xlat
add
cld
call
je
dec
add
test
(bad)
push
fild
add
fucomip
inc
or
add
mov
mul
dec
loope
mov
push
mov
fisttp
movs
bound
push
loope
mov
(bad)
stc
jmp
add
ins
daa
test
add
movs
add
add
in
repz
jmp
call
mov
add
inc
jp
dec
jmp
add
mov
adc
outs
and
daa
call
je
mov
xor
pop
rol
mov
pop
mov
punpckhwd
std
call
es
add
fiadd
push
rol
add
add
mov
mov
call
push
adc
test
fiadd
push
sub
fiadd
or
sbb
or
dec
xor
sub
jmp
or
xchg
ja
add
cmc
push
mov
mov
es
jns
add
cmc
xchg
lods
and
add
add
sbb
std
ret
cwde
bound
inc
cmp
loopne
fld
call
xor
dec
int3
cdq
(bad)
std
jae
outs
and
daa
cmp
clc
mov
clc
call
and
fsin
neg
mov
sbb
je
mov
and
jecxz
inc
adc
mov
or
jmp
cli
push
std
mov
fld
add
pop
cmp
sub
jg
and
jno
push
mov
mov
test
sub
dec
loop
mov
fmul
xor
out
fldcw
mov
jmp
cmp
fsub
add
in
xchg
and
out
push
push
les
pop
push
aad
test
and
push
je
or
adc
ror
loop
mov
pop
inc
push
add
cld
and
add
xor
(bad)
cmp
cmc
fild
or
fcomp
mov
in
add
fcom
and
add
add
scas
std
mov
mov
cmp
pop
push
jmp
mov
hlt
add
call
(bad)
push
push
leave
add
and
iret
call
xor
or
test
cld
add
add
add
push
jae
ins
jle
cld
fld
add
shl
xlat
imul
and
int3
inc
mov
rol
loope
and
cmc
je
or
jmp
mov
push
loop
aaa
cli
test
push
push
sub
fiadd
push
fcom
bound
add
add
shl
fiadd
call
cmps
js
mov
(bad)
in
and
mov
repnz
ja
sti
add
mov
leave
(bad)
jmp
jge
or
sbb
push
push
cmp
fld
xor
cld
and
pop
fs
cmp
lods
add
add
cmp
fstp
dec
out
jmp
das
jne
not
dec
out
sub
push
and
or
or
add
add
fld
pop
mov
int3
or
sub
sahf
add
and
jo
and
add
jmp
out
mov
dec
push
add
add
aam
cmp
inc
xchg
mov
loop
repz
test
push
pop
cld
mov
call
call
add
in
lods
sti
jmp
jb
mov
loop
pop
sti
test
fisttp
jbe
and
adc
add
add
scas
sti
jmp
and
out
jnp
(bad)
dec
mov
xchg
sub
sub
sub
bound
sbb
iret
push
fldenv
cli
ds
jmp
xlat
cmc
xlat
sbb
dec
mov
aas
xchg
or
call
inc
movs
push
inc
adc
leave
cdq
push
add
add
pop
fwait
mov
xor
mov
add
xor
mov
xchg
test
mov
jno
push
mov
je
push
mov
cli
jmp
push
push
mov
neg
cmp
and
xor
push
inc
in
cmps
enter
fwait
hlt
fs
add
hlt
push
lock
daa
sub
popa
imul
add
add
cld
(bad)
idiv
sub
and
test
arpl
push
and
cmps
push
pop
cld
jl
xchg
add
xor
test
shl
mov
fiadd
mov
jp
test
movs
test
repnz
and
mov
and
push
adc
mov
add
add
pushf
(bad)
idiv
or
(bad)
(bad)
repz
mov
movs
jbe
add
mov
call
push
jmp
enter
and
xor
pop
cmps
fld
lea
lds
stos
cmp
test
sub
mov
popf
call
pop
pop
je
cmc
mov
popa
idiv
add
add
fucomip
cmp
test
dec
push
repz
mov
das
sbb
sbb
push
mov
and
cli
call
dec
mov
mov
xlat
add
popa
pop
inc
mov
imul
idiv
and
test
and
jbe
xchg
and
adc
add
add
sub
outs
sbb
pop
push
adc
idiv
in
pop
fidivr
enter
iret
rol
(bad)
fld
bound
adc
add
repz
cmc
mov
arpl
dec
mov
adc
push
imul
call
popa
ins
push
mov
rcr
call
add
test
stos
pushf
cld
add
jnp
push
adc
xchg
and
inc
cmp
jmp
and
push
push
(bad)
rcl
not
rol
call
xor
leave
cmp
imul
shl
loop
cwde
and
push
ja
mov
shl
call
jnp
mov
dec
fs
or
je
adc
cld
lahf
arpl
adc
mov
xor
adc
lea
mov
test
inc
test
fiadd
add
mov
call
mov
mov
jmp
add
add
(bad)
call
dec
and
fdiv
push
popf
loopne
and
mov
sti
mov
repz
test
out
fst
shl
je
test
inc
and
push
or
jnp
repz
test
jns
mov
rcl
mov
imul
mov
xor
push
inc
jle
mov
test
cmc
mov
idiv
mov
cmp
jge
psubsw
cld
call
and
(bad)
jns
mov
(bad)
cmp
inc
xor
test
and
push
jnp
rcl
and
(bad)
es
mov
shl
imul
es
call
dec
push
mov
add
neg
jb
mov
out
aaa
jae
and
(bad)
pop
xchg
hlt
fs
rol
add
or
push
clc
jmp
(bad)
les
inc
add
inc
push
inc
or
inc
mov
call
add
popf
jo
and
inc
sbb
push
out
add
add
test
push
push
out
imul
cmp
push
inc
out
imul
xchg
add
mov
jge
loope
pop
and
call
cld
call
sub
adc
inc
loope
add
sub
inc
add
add
jg
inc
push
pop
push
adc
jmp
add
mov
fs
nop
movs
cmp
aaa
pop
outs
mov
adc
inc
adc
jp
jo
inc
add
xchg
imul
add
jno
aam
mov
cmp
imul
inc
cld
add
add
jmp
adc
stos
mov
push
jae
js
jmp
pop
push
jp
adc
xor
adc
call
daa
leave
mov
add
push
addr16
push
call
adc
test
inc
add
stos
mov
out
xchg
sti
inc
add
add
adc
test
scas
mov
jne
arpl
lea
loop
fist
test
sub
call
xor
std
push
fsubr
in
clc
(bad)
(bad)
loop
xchg
adc
push
sti
pusha
mov
add
test
cld
(bad)
sti
inc
add
add
mov
arpl
adc
add
in
pop
and
add
jns
(bad)
cld
mov
test
add
je
std
jmp
not
ja
std
ret
pusha
mov
lea
xor
inc
nop
clc
loope
sub
fisttp
add
or
cld
or
aas
add
pop
jne
jl
(bad)
std
add
pop
adc
fwait
mov
lods
call
mov
xchg
mov
or
fsub
mov
adc
xor
std
addr16
mov
push
push
or
xchg
std
adc
aam
and
je
xchg
enter
loope
add
add
mov
sub
sbb
div
lahf
push
or
mov
aam
mov
pop
inc
aam
pop
test
or
push
pushf
add
std
and
pop
inc
aam
pop
popf
dec
adc
imul
call
xor
lods
bound
loope
aam
mov
mov
(bad)
fbld
arpl
add
add
(bad)
in
stc
imul
(bad)
adc
jmp
lea
adc
adc
test
repz
(bad)
sub
call
daa
mov
inc
shl
call
push
xor
push
loop
in
test
push
cld
or
add
add
adc
(bad)
out
mov
call
inc
fs
je
or
call
fbld
dec
(bad)
jmp
and
bound
mov
push
jmp
std
adc
mov
pop
into
ja
or
add
shl
inc
cld
repz
inc
add
add
mov
idiv
and
inc
cld
in
jne
aas
xor
jmp
sar
jmp
jmp
jns
loop
jmp
idiv
pop
inc
loop
out
or
pop
cmps
mov
mov
or
(bad)
mov
mov
lea
rol
call
mov
and
add
add
adc
test
fstp
cmc
fadd
push
stos
sub
stos
mov
add
sub
cld
mov
dec
lea
jo
inc
jo
loope
or
push
and
inc
cmp
push
test
inc
cld
adc
and
push
pop
mov
add
add
ret
and
(bad)
test
xchg
sti
jmp
pushf
cmc
push
mov
nop
call
pushf
add
inc
and
sub
sar
rol
jmp
pop
aas
jmp
ret
std
repz
and
sub
call
test
inc
add
movs
add
outs
cmp
add
add
sti
pop
jne
mov
ret
std
xchg
xchg
sbb
jmp
or
test
inc
add
mov
loope
das
or
push
mov
fs
sub
pushf
scas
es
and
inc
aam
pop
mov
adc
lea
scas
mov
movs
push
mov
rol
add
pop
hlt
mov
cmps
mov
int3
outs
ret
sbb
add
inc
dec
push
jno
aam
call
xchg
je
mov
mov
pop
test
lock
repnz
xor
cwde
xor
and
(bad)
fbstp
call
and
inc
add
add
pop
idiv
mov
and
mov
(bad)
mov
(bad)
jge
and
mov
repnz
std
shl
sbb
call
pop
pop
dec
lea
cmc
inc
jmp
test
das
mov
std
adc
add
dec
outs
push
pop
loop
popa
and
push
pop
fimul
cld
push
pop
lea
adc
lea
ror
(bad)
mov
mov
xor
cwde
hlt
inc
mov
adc
lea
adc
test
and
jne
adc
mov
and
lea
cmc
inc
add
add
and
mov
and
cmp
mov
idiv
in
pop
cld
jl
sar
jno
call
mov
test
fdivr
call
out
call
pusha
jno
xor
outs
je
lods
call
cwde
and
xor
cwde
sub
lods
ret
add
add
imul
xchg
jp
inc
sbb
pop
cld
(bad)
sub
daa
jne
jo
and
call
hlt
and
popa
pushf
mov
pushf
cld
add
int
std
jae
mov
(bad)
stc
and
dec
inc
pushf
test
jl
xchg
std
adc
or
pushf
cld
add
mov
call
mov
adc
add
add
shl
dec
push
loope
mov
cwde
xchg
jmp
and
(bad)
mov
xchg
push
push
out
call
sbb
(bad)
and
inc
mov
sbb
sbb
cld
jmp
jo
and
push
int3
pop
xchg
std
jae
mov
dec
js
sub
add
add
jp
cld
pop
mov
std
xchg
lods
bound
and
inc
and
not
(bad)
imul
dec
push
gs
sub
arpl
add
aam
inc
cmps
push
pop
mov
inc
lods
bound
rcr
call
ss
push
mov
repnz
add
add
xchg
jmp
mov
hlt
push
out
test
les
cli
stos
lahf
inc
imul
cli
jmp
add
dec
movs
add
repz
and
outs
inc
or
or
add
lods
and
(bad)
mov
sbb
inc
add
add
and
sahf
and
fadd
add
call
push
cld
and
pusha
fld
add
mov
inc
add
in
sahf
jmp
les
popa
mov
jp
mov
out
mov
jmp
mov
xor
fadd
call
pop
or
push
add
add
stos
pop
push
nop
fadd
add
rep
std
ret
cmps
add
rcl
and
int3
add
std
repz
xchg
xlat
add
adc
and
or
fs
adc
mov
loope
xchg
lea
mov
sbb
add
fild
call
sub
add
add
mov
jle
xor
add
test
mov
mov
mov
add
fs
and
pop
mov
and
or
jmp
add
pop
je
shl
bound
popf
add
or
xor
push
mov
add
and
add
add
out
dec
push
sub
nop
in
add
fsub
add
rol
and
int3
shl
jae
xchg
loopne
add
mov
mov
arpl
xchg
xchg
jmp
cli
loope
xchg
test
je
std
push
add
add
add
jae
and
scas
dec
(bad)
test
nop
add
or
add
mov
(bad)
jle
dec
lea
test
push
sbb
call
dec
lea
sbb
nop
xchg
(bad)
cmp
sub
in
ins
and
add
lea
mov
push
add
mov
(bad)
mov
and
mov
jmp
mov
not
es
inc
and
push
mov
call
and
mov
and
cmc
push
mov
loope
lea
imul
rol
mov
scas
outs
std
rep
inc
and
adc
add
add
add
out
fadd
add
fnstenv
lea
hlt
or
push
jle
fs
add
xor
jne
sbb
mov
cmp
xchg
sbb
add
dec
outs
and
xor
imul
push
cli
jmp
add
xor
push
add
push
call
loope
and
jmp
push
mov
add
add
add
inc
data16
lahf
das
lea
push
push
cmp
hlt
fild
push
fmul
outs
std
ror
push
sar
and
mov
pop
xchg
fild
add
add
scas
and
mov
(bad)
std
xchg
mov
sub
fisttp
xchg
test
lea
hlt
sub
add
add
pop
push
mov
pcmpeqb
add
icebp
adc
jmp
adc
add
xor
addr16
sbb
cli
xor
sbb
dec
outs
and
xor
sbb
cli
jmp
sbb
push
outs
and
xor
push
add
or
inc
add
add
and
imul
movs
fiadd
adc
idiv
pop
xor
push
mov
fiadd
adc
iret
je
ror
push
shl
and
mov
popa
xchg
fild
add
mov
push
mov
std
pop
std
adc
mov
call
add
std
sub
pop
push
mov
fld
adc
fld
call
sub
hlt
or
adc
fld
add
sbb
mov
mov
add
push
outs
and
xor
dec
push
cli
jmp
add
xor
rcr
bound
popf
add
cwde
std
or
jmp
xchg
and
jmp
push
mov
add
push
sub
push
cmp
nop
hlt
fadd
push
fmul
add
shl
and
mov
pop
xchg
loopne
add
add
movs
and
mov
pop
std
xchg
mov
sub
jmp
int3
call
lea
hlt
sub
call
fmul
inc
jp
test
mov
fcomp
call
je
shr
mov
dec
cld
xor
clc
mov
push
mov
fild
call
dec
lea
adc
mov
sti
inc
add
add
inc
in
outs
and
aaa
scas
outs
and
cli
jmp
inc
and
aaa
inc
mov
and
adc
mov
push
xchg
push
sbb
push
call
loop
push
sbb
push
mov
jne
sbb
xor
cmc
push
mov
popa
add
add
call
add
and
push
ds
mov
jmp
ret
add
hlt
ss
shl
pop
mov
dec
(bad)
cmp
mov
mov
sbb
aad
sti
push
push
shr
mov
dec
fmul
cwde
cli
xor
mov
dec
push
mov
call
dec
lea
add
add
adc
je
sti
dec
inc
fs
outs
and
ss
ins
add
lea
dec
(bad)
test
test
and
sbb
xor
call
pop
lahf
daa
lea
push
push
cmp
hlt
fld
push
fmul
add
shl
and
mov
pop
xchg
fld
add
add
add
add
test
gs
xchg
push
dec
and
push
inc
and
das
fidiv
dec
push
cli
jmp
add
out
mov
mov
mov
stc
push
push
loope
and
je
call
mov
push
outs
and
xor
jle
cwde
int3
xor
add
cmp
sti
(bad)
(bad)
mov
push
push
int3
fwait
outs
std
rcl
and
mov
ja
and
push
scas
dec
mov
and
das
push
push
and
add
pop
adc
sub
fadd
inc
push
in
aaa
mov
xor
add
add
xchg
xlat
add
xor
mov
call
aad
ret
inc
xor
les
jnp
mov
rcr
sub
sub
jge
loop
ret
and
call
loopne
cmp
pushf
add
mov
and
idiv
in
cmc
adc
sub
outs
push
add
add
and
add
dec
lea
adc
ins
shl
add
push
lea
daa
loop
retf
pop
dec
and
imul
sti
push
dec
xor
and
adc
mov
xor
imul
cmp
sti
(bad)
jg
loope
ret
and
call
add
add
pop
sbb
or
sbb
xchg
in
xor
cmps
jg
and
ret
push
mov
call
out
sahf
or
mov
not
cmps
shr
and
push
lahf
sbb
lods
test
mov
(bad)
addr16
add
sahf
xlat
bound
pushf
fiadd
add
add
mov
test
mov
pop
sub
les
and
sti
rcl
test
stc
out
inc
in
cli
push
ds
jmp
push
inc
enter
(bad)
jmp
(bad)
and
pop
push
jge
adc
jnp
lods
fnsave
popf
int3
cmp
nop
clc
add
and
push
push
mov
lods
lock
(bad)
call
and
int3
sbb
jbe
adc
inc
enter
int3
popf
lods
rcl
les
outs
sahf
int3
cmp
adc
cmp
fdivr
and
(bad)
cmp
adc
pop
stos
shr
ins
cmp
std
jae
shr
add
add
xchg
stc
or
mov
and
call
xor
pop
sbb
adc
ret
stos
ror
shl
push
xlat
or
repz
inc
rcr
pop
bound
or
gs
and
movs
hlt
data16
lea
idiv
add
add
repz
in
inc
into
rol
xor
(bad)
mov
pop
dec
mov
pop
dec
mov
jmp
xchg
test
cmp
test
fild
add
xor
sbb
cli
mov
pop
idiv
repz
sbb
or
(bad)
fistp
cdq
mov
mov
add
add
addr16
mov
sahf
ins
add
cmp
add
inc
xchg
and
add
fimul
movs
icebp
nop
sbb
adc
call
outs
sbb
cmp
mov
in
mov
xchg
dec
sub
and
mov
repz
push
fisttp
cld
movs
xchg
bound
add
add
xchg
mov
mov
inc
add
js
std
mov
sbb
mov
movs
gs
mov
adc
or
(bad)
mov
jne
int3
rcl
or
add
push
push
nop
loope
inc
xchg
not
fisttp
cld
in
scas
popa
add
add
xchg
nop
loop
das
adc
inc
pop
or
xchg
nop
cmp
ds
popf
ins
or
(bad)
(bad)
call
icebp
dec
jb
repz
loope
lea
idiv
ret
test
jge
(bad)
pop
mov
test
cwde
adc
lods
push
push
mov
fs
push
dec
or
add
add
cmp
xlat
xor
js
add
mov
ja
xchg
ror
call
(bad)
dec
lea
dec
loop
dec
mov
or
stc
mov
fwait
cli
mov
int3
outs
cmp
jo
and
push
mov
cld
push
pop
jl
fs
jne
jmp
sti
inc
add
add
xchg
jne
sar
dec
lock
mov
arpl
(bad)
loop
fnstcw
adc
add
jns
add
add
cli
mov
test
dec
int3
pop
inc
or
xor
mov
pop
mov
add
aad
pop
sti
sti
call
loopne
add
add
add
adc
call
aam
out
adc
add
cmp
dec
inc
fs
xchg
ror
loope
mov
or
add
or
pop
outs
add
in
jne
jne
lea
xchg
push
jmp
mov
popw
add
add
add
call
push
rcl
and
sub
add
inc
add
mov
mov
dec
xor
sbb
sub
(bad)
not
push
mov
mov
pop
mov
pushf
repz
add
idiv
dec
ja
add
jb
push
add
push
rcl
dec
push
clc
dec
out
or
push
ja
jnp
lea
sbb
pop
jb
push
add
es
shr
add
movs
mov
jbe
add
neg
push
shr
and
sub
add
pop
cmp
or
pop
or
popf
or
cdq
imul
test
add
add
idiv
mov
rcl
ss
mov
push
mov
mov
test
mov
push
jmp
call
pusha
mov
inc
xor
mov
je
inc
cld
div
mov
test
add
push
lea
mov
(bad)
cmp
jmp
add
mov
add
add
mov
std
jae
arpl
and
inc
mov
push
(bad)
fimul
dec
arpl
add
xchg
call
cmps
repnz
popf
inc
cld
pop
jo
pop
add
or
cli
mov
jp
sbb
add
sti
mov
call
add
add
cld
fs
test
xchg
shr
ins
xor
or
call
ja
in
or
fnstenv
pop
inc
fmul
push
(bad)
fldcw
inc
movs
cdq
inc
mov
arpl
xor
call
and
jmp
or
sub
pop
inc
mov
dec
arpl
shl
push
add
add
push
cmps
mov
cdq
inc
cld
das
ja
pop
icebp
cmp
dec
xor
call
daa
push
lea
mov
mov
int3
outs
xor
test
(bad)
jmp
aad
xlat
mov
loope
adc
dec
push
push
mov
add
add
cmc
dec
call
icebp
or
cmp
gs
ror
dec
sub
cli
mov
jp
pop
(bad)
add
sti
mov
call
jg
cld
movs
and
test
rcl
jno
aad
out
cmp
jmp
in
or
fnstenv
add
add
push
inc
fmul
push
(bad)
mov
repz
push
jne
int3
xor
std
jae
pop
mov
movs
call
push
das
jno
in
mov
dec
mov
ja
je
cmp
sub
pop
jl
mov
(bad)
clc
pushf
ins
pop
test
out
fld
mov
jne
cld
add
imul
add
add
push
inc
add
call
or
je
mov
bound
movs
sub
adc
imul
test
dec
or
pop
or
add
or
fild
xor
xor
push
daa
jo
cwde
repz
add
fwait
or
sti
ret
aam
xlat
je
add
cwde
mov
jns
pop
in
push
mov
push
inc
add
fmul
push
ja
adc
mov
add
stos
fbstp
inc
in
dec
shr
fcom
hlt
fild
adc
jb
dec
aas
add
(bad)
mov
add
add
shl
push
fldcw
mov
adc
cdq
call
sbb
cmp
ins
(bad)
xor
sub
fs
test
and
ror
mov
push
inc
lock
je
jnp
je
add
cwde
xchg
push
jecxz
inc
adc
inc
lock
add
mov
jns
lock
or
div
test
test
outs
(bad)
xchg
push
xor
pop
jae
clc
(bad)
jp
je
xchg
test
push
leave
ja
jmp
mov
mov
div
test
call
not
dec
or
pop
cmp
dec
popf
arpl
inc
dec
inc
add
add
fs
xchg
add
icebp
xor
push
jne
mov
mov
test
(bad)
test
inc
in
adc
mov
push
jne
int3
jg
std
rcl
in
addr16
push
in
jmp
stos
cmp
push
icebp
mov
mov
add
push
jmp
aam
mov
test
test
std
mov
(bad)
test
call
(bad)
std
sti
push
mov
push
pop
cld
or
push
std
adc
loopne
push
in
mov
inc
push
add
lock
loope
dec
xor
popa
sbb
add
add
add
fadd
call
sub
sbb
add
or
xor
sub
(bad)
pop
xor
jmp
jne
mov
push
std
xchg
sub
cdq
push
sbb
je
inc
les
lock
add
sbb
push
out
cwde
loope
aas
xor
test
lds
repz
lock
add
add
sti
sti
dec
fadd
add
jne
mov
call
push
sbb
rol
xchg
rol
add
cmp
push
inc
mov
in
jb
mov
das
jmp
cmp
or
fadd
xor
push
repz
xchg
add
add
test
sub
pop
or
inc
jne
mov
addr16
cmp
mov
jmp
pop
scas
jbe
pushf
mov
not
loopne
jne
dec
pop
add
mov
dec
aam
push
test
cld
std
and
je
out
sub
loopne
inc
test
jmp
jmp
add
add
out
sub
fisttp
bound
jg
push
inc
enter
add
daa
xor
dec
cmc
lea
mov
imul
dec
push
push
mov
add
cld
push
dec
push
sub
imul
mov
add
add
add
repnz
fadd
mov
push
test
stos
or
add
mov
pop
mov
push
std
add
bound
and
aad
and
inc
and
or
push
sub
std
add
ret
pop
mov
inc
fs
idiv
add
add
movs
xchg
cmps
test
jg
les
pop
push
lea
sub
loope
test
shl
int3
or
push
adc
(bad)
cmp
jne
cld
jmp
add
inc
adc
lea
loopne
push
jmp
cmp
mov
adc
push
and
inc
add
add
jge
(bad)
cmp
and
xchg
add
inc
rcr
(bad)
jmp
psubsw
clc
jmp
inc
lock
js
adc
push
mov
mov
std
adc
or
add
idiv
or
push
std
repz
dec
lea
jae
pop
sar
inc
and
inc
add
add
jp
mov
jge
push
sub
je
jp
call
test
idiv
mov
std
xchg
push
dec
(bad)
fldenv
xchg
jns
push
add
(bad)
sar
sbb
imul
cwde
add
jmp
jl
call
pop
std
adc
dec
(bad)
leave
add
inc
add
add
jae
pop
adc
inc
jb
mov
cmps
or
xor
movs
push
jl
(bad)
cmp
(bad)
imul
(bad)
push
mov
pushf
add
je
jl
call
sbb
jge
mov
jnp
(bad)
fsub
add
rol
add
add
mov
nop
pusha
jl
pop
push
inc
fadd
push
push
test
xchg
cmp
jge
push
punpckhwd
xor
or
cmovp
jnp
nop
data16
(bad)
cmp
cmc
push
pop
xor
jbe
add
stos
jl
je
jl
(bad)
jp
mov
xchg
jl
jmp
xor
sub
add
add
mul
push
and
call
push
arpl
add
jne
je
pop
mov
or
jne
mov
add
ficom
push
xchg
mov
out
imul
neg
scas
test
imul
mov
push
add
add
jl
cmp
imul
idiv
sub
sub
stos
adc
add
cmp
std
jae
arpl
inc
jecxz
call
aaa
sub
jmp
icebp
dec
jp
mov
adc
call
call
test
lods
add
and
test
call
mov
add
add
psadbw
adc
mov
push
call
js
mov
gs
mov
arpl
mov
ja
xchg
ret
bound
mov
sbb
xor
sbb
ins
sbb
or
mov
(bad)
test
cdq
test
test
into
mov
sub
(bad)
in
cmp
repz
mov
push
mov
shl
lea
xor
xor
movs
cmp
ins
and
ret
or
or
adc
mov
cwde
test
test
retf
cmp
push
pop
movs
pop
shl
add
add
add
add
push
mov
movs
dec
cmp
leave
mov
add
xchg
outs
shl
popa
xor
cdq
add
mov
jne
(bad)
clc
xchg
push
test
fld
add
(bad)
call
mov
or
pop
jle
and
dec
mov
outs
inc
call
or
div
in
mov
pop
jl
hlt
jmp
out
add
daa
push
(bad)
call
push
fild
add
push
(bad)
call
and
or
pop
and
mov
dec
mov
mul
adc
(bad)
icebp
cwde
idiv
repz
loopne
pop
mov
push
mov
fiadd
add
add
pusha
neg
test
gs
mov
add
(bad)
imul
jmp
or
add
jmp
cld
push
pop
cld
mov
out
cmc
fadd
push
jg
loope
fsub
test
loope
retf
(bad)
test
out
mov
jmp
push
fdivrp
xchg
pop
mov
pushf
gs
mov
mov
adc
(bad)
cmp
loope
cmc
push
(bad)
dec
cdq
idiv
popf
popf
inc
cld
push
add
out
pop
call
gs
jmp
mov
sbb
push
std
add
add
cmps
push
pop
call
add
in
sub
out
sti
jmp
add
add
fild
xor
sbb
test
(bad)
fmul
adc
mov
cmc
inc
sub
(bad)
jae
loope
clc
fs
cmp
cmc
call
cmp
call
(bad)
push
sub
loopne
popa
imul
cld
out
sti
jmp
sbb
or
pop
pop
call
popa
sti
jae
push
movs
pusha
adc
std
cmps
or
add
add
sbb
push
std
adc
shr
inc
mov
rcl
xor
test
jb
sub
fidivr
loopne
inc
pushf
and
mov
test
fs
call
mov
dec
push
and
popf
call
out
mov
jl
dec
std
add
dec
lea
add
add
loope
mov
push
je
int3
fs
std
ror
dec
jmp
fisttp
dec
inc
gs
mov
jle
adc
cmc
push
push
inc
aam
and
test
jmp
lea
arpl
(bad)
fdiv
hlt
out
cmc
xor
shr
mov
div
add
add
or
push
popa
push
adc
jae
loope
dec
not
push
dec
pushf
mov
push
std
xchg
or
(bad)
cmc
inc
jno
push
icebp
arpl
add
sub
pop
cld
jmp
jno
push
shl
mov
dec
jmp
out
add
fwait
inc
cld
and
dec
aam
mov
add
inc
adc
inc
je
inc
add
add
mov
fdivr
cmps
std
rcr
vmwrite
cld
call
fs
shl
mov
pop
dec
push
pop
call
or
je
push
ficom
or
push
icebp
mov
mov
(bad)
call
xlat
add
call
adc
jb
add
add
outs
add
fdivr
cmp
add
shl
sahf
xlat
push
push
or
xchg
adc
sub
mov
pop
idiv
repz
(bad)
gs
clc
xor
add
ins
hlt
clc
mov
push
not
cmp
add
daa
aam
add
fistp
add
add
pushf
out
add
cmps
fs
pusha
stc
push
push
pop
fild
add
test
shl
adc
push
test
add
cmps
fs
hlt
je
sti
addr16
inc
add
pop
hlt
adc
shl
or
hlt
fidivr
clc
fild
add
add
add
add
or
push
aas
push
neg
sti
call
push
jae
movs
shl
fimul
into
adc
add
ret
add
cmp
fiadd
jmp
arpl
pushf
push
test
fild
add
repnz
jbe
gs
in
scas
or
lea
xchg
mov
loopne
add
add
add
ins
or
or
jmp
adc
mov
cli
loopne
and
div
pop
hlt
ror
xchg
xchg
sub
add
scas
add
inc
hlt
stc
(bad)
dec
(bad)
jmp
dec
je
sub
mov
mov
sub
repz
add
or
idiv
jmp
push
(bad)
cmp
(bad)
shr
in
cli
xor
int3
jecxz
(bad)
repz
cmc
jne
test
ins
adc
xor
pop
push
je
adc
iret
mov
dec
div
jg
aad
cmp
cmc
(bad)
sbb
push
shl
sub
and
push
leave
add
add
ja
test
movs
fdivr
call
das
ror
xor
add
and
add
jge
add
mov
ret
and
(bad)
jns
out
je
add
fs
xchg
dec
popa
ret
add
out
idiv
dec
cmps
push
adc
arpl
add
aaa
sbb
and
add
mov
nop
dec
idiv
movs
push
ret
dec
jp
or
pop
jb
cmp
fidivr
call
mov
add
push
push
pushf
hlt
mov
xchg
pop
mov
mov
xlat
cmc
call
cs
std
add
call
and
retf
add
add
add
xor
shl
add
mov
add
pop
dec
or
jmp
push
sub
dec
je
mov
dec
je
cld
mov
std
add
mov
jmp
fdiv
pop
or
je
sar
div
push
retf
imul
not
mov
add
adc
add
add
xchg
dec
mov
mov
add
mov
inc
add
inc
je
inc
fsub
jp
ins
mov
add
aaa
xor
stc
jmp
cli
push
mov
add
je
call
mov
mov
jne
movs
inc
loopne
mov
aas
inc
hlt
ss
loopne
add
add
or
push
jl
add
xchg
rol
mov
div
lods
and
add
dec
adc
ss
sbb
das
sbb
cmc
adc
test
out
fld
push
adc
mov
inc
and
lods
inc
imul
add
sbb
call
dec
jp
adc
out
add
mov
mov
movs
fsubr
push
std
rcr
add
or
jmp
fdivr
test
mov
push
and
mov
in
inc
cld
cmps
push
push
jmp
std
cmp
imul
add
(bad)
jns
js
mov
push
cmc
push
shl
and
mov
xor
(bad)
imul
dec
mov
xor
jmp
add
in
cmc
sti
push
mov
or
inc
std
repz
dec
lea
loope
xor
push
sbb
movs
mov
xor
cmp
sahf
push
mov
add
add
xlat
mov
mov
nop
call
ds
push
inc
sahf
and
or
into
add
movs
bound
mov
add
xor
mov
aaa
fisubr
imul
cmps
sbb
push
je
retf
push
mov
add
pusha
jp
or
mov
int3
add
cli
push
sti
mov
sbb
or
and
add
movs
aam
dec
cmc
pusha
adc
and
add
imul
adc
ror
imul
mov
jne
jmp
popa
sub
sbb
xor
xor
sti
inc
add
add
fsubp
add
push
pop
std
pushf
push
mov
pop
in
addr16
mov
jp
cmp
dec
pop
sub
push
xor
call
push
fsubp
iret
hlt
fld
adc
lea
push
pop
fsub
add
cwde
dec
(bad)
fnstenv
ja
mov
in
pop
(bad)
fild
inc
add
add
ds
jae
hlt
loopne
test
fld
mov
sbb
mov
stc
dec
fwait
pusha
adc
mov
add
not
adc
rcr
add
cli
mov
pop
je
xor
adc
jbe
add
cmp
idiv
ja
sbb
add
add
push
fild
mov
fist
fldcw
inc
clc
aas
sbb
push
das
jbe
jl
neg
cwde
ins
and
loope
or
push
cli
and
cmc
jne
call
ds
jne
shl
gs
inc
pushf
push
pop
in
cwde
popa
lods
and
add
or
jl
add
add
adc
ins
mov
fmul
push
add
fisttp
jne
jge
std
call
inc
sbb
push
pop
popf
dec
lea
cmc
inc
push
xchg
fbstp
xor
sbb
push
jp
std
add
mov
inc
je
mov
mov
inc
cld
addr16
mov
add
popa
jp
inc
in
push
lea
push
std
out
loop
push
pushf
inc
cld
sub
std
add
jmp
dec
lea
push
dec
dec
add
push
popa
or
push
fs
and
push
sub
jne
int3
mov
dec
lea
cmc
inc
fs
push
inc
(bad)
call
enter
out
mov
push
adc
add
mov
push
out
push
mov
test
add
dec
mov
ror
cmc
adc
and
sub
xor
adc
mov
add
jns
arpl
add
int3
push
lahf
push
jp
dec
out
push
mov
add
fs
add
add
jbe
add
push
fadd
data16
fidiv
out
or
mov
add
sbb
add
or
repz
xchg
xor
cmp
mov
cmp
inc
in
sbb
fsubr
sub
add
lods
mov
add
inc
pop
fisttp
(bad)
test
fldcw
jnp
add
imul
push
mov
popa
stc
mov
test
xchg
ror
imul
add
stc
xor
mov
in
add
sbb
(bad)
fadd
(bad)
stc
pop
ins
and
pop
sub
add
dec
mov
pop
out
jne
ins
inc
cld
(bad)
add
add
or
aas
inc
je
inc
cld
fld
idiv
sar
cmc
adc
jmp
sbb
and
sbb
push
loope
in
jmp
mov
sbb
mov
xor
or
add
movs
cli
dec
call
pop
arpl
shl
mov
pop
cmp
stos
push
popa
push
push
add
add
add
fild
(bad)
sti
push
dec
mov
push
cli
(bad)
xchg
mov
test
inc
hlt
daa
push
cmp
dec
jne
(bad)
bound
mov
arpl
ret
fisttp
dec
fild
add
bound
mov
add
jns
mov
inc
and
lods
inc
jns
mov
dec
lods
inc
add
add
bound
add
pusha
call
mov
movs
cli
lds
adc
gs
mov
dec
add
mov
cld
sub
xlat
std
and
pusha
stc
call
fdivr
call
das
add
movs
arpl
repz
mov
sub
add
lahf
push
test
add
add
loopne
add
repnz
inc
mov
and
jmp
mov
inc
cs
mov
(bad)
sub
or
add
nop
and
cld
addr16
add
call
pusha
or
and
es
call
scas
push
add
das
pop
cdq
add
mov
xchg
shl
add
push
test
shr
jmp
xor
jb
arpl
or
shr
stc
jmp
pop
cli
je
and
in
js
jge
fcmovne
add
inc
or
iret
xor
call
add
push
jno
mov
outs
cwde
add
add
in
imul
mov
add
out
inc
cwde
mov
movs
inc
jmp
ss
add
inc
xchg
push
sbb
fs
inc
test
ss
std
rcr
ins
mov
mov
push
dec
and
add
add
loop
addr16
dec
push
aaa
adc
mov
test
adc
jns
jne
sub
stc
adc
xchg
aad
ret
pop
idiv
sti
pop
adc
xor
pop
(bad)
push
das
aaa
sub
lods
int3
adc
jmp
xchg
or
pop
stc
push
nop
arpl
hlt
nop
call
add
add
mov
not
xchg
iret
loope
je
rcr
add
test
mov
stc
(bad)
pop
out
inc
xor
adc
cmps
sahf
stc
xor
call
mov
lahf
stc
xor
in
mov
sub
pop
xor
lahf
or
add
iret
push
call
dec
add
loop
pop
mov
retf
movs
push
nop
icebp
movs
fiadd
cmp
sub
inc
fs
test
aad
add
call
mov
jge
jns
in
test
sahf
stc
pop
repz
rcl
enter
mov
movs
jmp
sub
movs
add
add
std
sahf
stc
inc
out
mov
sub
add
mov
mov
in
addr16
inc
add
push
mov
add
hlt
xor
add
fcomip
xor
(bad)
fcomip
xor
mov
push
or
je
lods
jns
pop
pop
push
add
add
shr
clc
jmp
dec
fprem1
jne
pop
adc
mov
stc
mov
dec
push
add
mov
adc
retf
xor
mov
test
leave
add
cmp
out
cmp
fadd
push
mov
adc
and
adc
mov
scas
push
pop
test
add
add
fadd
add
mov
ja
pop
mov
sub
dec
push
inc
or
inc
or
push
inc
push
dec
push
inc
adc
sub
loope
or
into
bound
sahf
fld
mov
leave
mov
lods
cmps
add
cmps
add
popfw
cmps
or
neg
add
xor
rcl
test
hlt
(bad)
sti
add
fistp
dec
and
add
jnp
mov
sbb
iret
faddp
sub
leave
or
add
mov
daa
mov
pop
or
push
pop
or
push
pop
push
dec
push
pop
adc
cwde
sti
add
and
mov
push
xlat
lods
mov
cli
add
add
mov
adc
ret
mov
sbb
ins
add
jge
add
ins
xchg
(bad)
xor
mov
sub
xor
mov
fcmovnb
cmp
leave
(bad)
sub
vcmpsd
sbb
mov
call
add
add
mov
ficomp
mov
lods
jmp
fisub
add
dec
cli
xchg
pop
sti
es
test
mov
push
or
jle
adc
jmp
xor
retf
sub
sbb
lahf
mov
ret
int3
mov
push
sbb
imul
mov
add
add
call
ins
cwde
xor
push
sbb
loop
movs
and
pop
mov
popa
and
call
fs
jmp
frstor
add
ds
xchg
pop
sbb
sub
mov
xchg
push
sbb
jge
add
jmp
xor
(bad)
push
xchg
add
add
mov
daa
rcr
iret
mov
ret
fdiv
cmp
dec
push
sbb
inc
loop
in
add
sbb
pop
idiv
xor
push
pop
pop
pop
sbb
loop
mov
adc
pop
mov
xor
mov
(bad)
sbb
jne
push
inc
mov
hlt
dec
cmp
inc
add
add
fs
stc
push
and
add
mov
bound
mov
cli
jmp
js
add
sbb
mov
cmp
adc
mov
and
int
sbb
sub
or
sub
add
stc
xor
inc
cld
jmp
push
add
add
cli
and
addr16
xor
repz
jmp
pop
sti
bound
ret
stos
mov
je
idiv
out
adc
add
mov
lock
xor
test
out
arpl
add
int
idiv
test
jne
mov
stc
addr16
inc
add
out
in
jmp
add
add
jo
cmp
jne
sbb
or
cmp
idiv
xchg
out
in
jmp
sbb
cmp
adc
loop
je
not
test
inc
je
add
or
test
test
inc
add
mov
add
add
and
jae
xor
adc
cmc
adc
push
inc
loop
in
add
sbb
idiv
adc
mov
jp
jmp
xlat
and
xlat
and
clc
mov
mov
jmp
xlat
call
mov
call
test
add
fs
iret
pop
stc
inc
xor
cmps
ror
xor
jmp
inc
push
and
in
pop
stc
sub
cmp
inc
and
cmc
ror
ror
stc
out
pop
cld
(bad)
jg
bound
int3
push
outs
call
jbe
jmp
fsub
add
sti
push
repnz
add
add
push
ret
stc
push
in
stc
retf
mov
call
adc
movs
jae
fdiv
xlat
mov
out
push
idiv
lods
xor
hlt
dec
cmp
ds
pop
stc
out
lahf
idiv
mov
or
and
test
mov
test
jg
loop
aas
adc
add
popa
pushf
ror
mov
not
aaa
xchg
adc
aas
aaa
ins
add
mov
mov
push
push
leave
push
push
loope
call
mov
xor
neg
push
out
push
not
ror
stc
imul
add
int3
cmp
call
out
adc
add
js
adc
adc
xchg
add
mov
push
(bad)
jns
cmc
jne
adc
shr
rcl
ja
jbe
popa
mov
call
(bad)
or
jmp
pop
nop
xchg
fisttp
inc
xchg
adc
rol
add
jl
jb
add
or
or
cli
jmp
cmp
adc
mov
jle
inc
fs
adc
stc
(bad)
pop
bound
movs
add
mov
and
inc
xor
mov
cmp
jecxz
and
in
cmc
xor
jno
int
stc
jg
inc
add
add
in
loope
jge
test
jmp
add
rol
fst
sub
jae
push
stc
pushf
loop
cmp
fiadd
fist
sub
je
sub
mov
loop
cmp
call
mov
xor
add
add
inc
sbb
and
push
lea
push
inc
(bad)
repz
inc
lock
inc
hlt
lods
mov
mov
jle
or
push
and
inc
test
es
cld
cmps
xor
ins
xchg
or
mov
les
adc
(bad)
jmp
jnp
(bad)
out
(bad)
jmp
fdiv
add
add
or
push
pop
je
mov
mov
add
mov
add
add
pop
cld
or
cmp
adc
inc
int3
(bad)
ja
inc
hlt
or
popa
pop
adc
ret
pusha
or
mov
and
xor
mov
cmc
inc
movs
stc
dec
pushf
imul
xchg
stos
mov
or
adc
stos
mov
adc
imul
out
add
inc
cld
jp
mov
push
loope
test
movs
cmc
pop
int3
or
repz
sbb
push
lea
stos
mov
sahf
or
call
pop
je
sub
add
xor
shl
imul
and
not
fisttp
inc
jno
dec
push
adc
inc
std
xor
call
push
not
fisttp
(bad)
fsub
inc
std
shl
adc
pop
shl
lock
adc
bound
add
add
sub
add
pop
xor
inc
and
adc
(bad)
jns
loop
xchg
or
pop
cmps
sti
adc
hlt
ins
jge
push
fcom
or
out
mov
call
rcl
mov
inc
popf
in
jmp
push
div
or
aam
inc
cmp
fucomip
outs
cdq
or
xor
add
add
ret
mov
inc
fldcw
mov
pop
test
mov
jmp
xor
mov
adc
dec
aad
inc
and
push
mov
push
test
cld
mov
arpl
popa
mov
call
fcom
jne
ret
sbb
mov
add
add
or
stc
arpl
test
in
aam
dec
push
inc
movs
les
leave
les
movs
sbb
jmp
cmp
jmp
inc
aaa
inc
add
xlat
mov
mov
aas
xchg
in
jns
xor
jae
jl
das
retf
cwde
in
imul
fwait
cwde
and
add
mov
inc
add
fild
je
fs
iret
sub
addr16
hlt
push
jmp
les
dec
and
adc
in
and
call
and
(bad)
ret
adc
ins
mov
fld
and
mov
mov
fcom
add
jmp
in
cmp
add
add
les
repnz
loop
stos
fadd
jmp
into
sar
push
rol
ss
test
mov
fcomi
adc
pop
in
mov
mov
adc
and
adc
icebp
push
xor
hlt
and
and
pop
enter
add
fnstsw
cdq
in
jmp
lds
add
add
pop
fisub
rcl
fadd
mov
fcom
rcr
push
add
xor
cdq
in
test
lock
call
mov
or
push
mov
adc
push
push
lods
xchg
sbb
std
adc
or
sub
call
add
add
and
dec
jmp
mov
lea
les
call
test
or
mov
je
pop
cmp
pop
call
inc
xor
sub
outs
adc
fsub
(bad)
es
push
mov
mov
fucom
add
sbb
shl
xor
mov
push
pop
and
stos
dec
call
popf
cmps
or
xor
imul
and
mov
imul
inc
add
pushf
in
test
cwde
pop
mov
fadd
add
lahf
push
pop
pop
adc
pop
cmps
out
push
pop
xor
in
mov
push
or
stc
jmp
stc
push
les
leave
les
pop
sbb
add
fs
add
adc
imul
add
jmp
inc
arpl
into
add
sub
xor
add
push
test
fadd
add
mov
call
ins
mov
dec
adc
fild
mov
xor
add
add
fld
shl
mov
sti
jmp
mov
imul
mov
add
jl
call
xchg
test
fild
push
lods
fwait
and
pushf
stc
lds
rol
fcomi
adc
(bad)
or
jmp
xchg
test
cmp
scas
or
adc
inc
add
mov
pop
mov
imul
add
add
xor
daa
mov
add
fimul
sub
add
fimul
sub
fdiv
pushf
stc
mov
mov
sbb
mov
inc
fmul
push
(bad)
clc
mov
ds
cmps
div
not
out
mov
mov
push
dec
adc
sbb
ds
add
add
div
cmc
(bad)
mov
sbb
and
add
lea
cmp
mov
inc
dec
call
sub
div
cmc
(bad)
pop
fcos
push
add
or
sub
je
call
cmp
and
add
push
add
and
scas
sub
or
add
jmp
add
xchg
add
je
outs
and
add
push
pop
fldcw
jne
add
cmp
and
sti
scas
stc
imul
je
mov
sbb
push
rcl
(bad)
sub
inc
push
adc
sub
adc
addr16
add
add
add
ret
mov
jmp
adc
push
xchg
sbb
or
adc
fadd
sub
and
cmps
or
dec
enter
enter
add
(bad)
jns
mov
mov
mov
mov
test
mov
inc
add
mov
add
cmp
add
shr
cli
push
and
adc
add
pop
sbb
add
sahf
jge
ret
cmps
imul
in
push
(bad)
cmp
in
mov
cli
out
test
or
jb
push
cmp
fidivr
test
dec
jmp
mov
stc
imul
add
and
fiadd
add
xor
imul
add
int3
mov
std
rep
stc
imul
add
loopne
je
mov
imul
add
les
push
add
cmp
ret
pop
or
in
add
push
add
push
dec
push
hlt
scas
div
and
cmc
jne
call
aaa
pushf
stc
mov
not
jmp
loopne
add
fwait
sbb
adc
cmp
cli
push
cmc
push
fwait
es
outs
repz
dec
pop
into
stc
rcr
loope
cmp
mov
add
add
jmp
and
mov
dec
push
sub
cmc
jne
add
mov
sbb
push
idiv
into
push
out
jmp
adc
and
lods
dec
mov
add
lea
js
sub
push
xor
add
add
dec
sbb
(bad)
loope
sbb
(bad)
mov
lods
not
ror
je
not
jl
(bad)
push
stos
not
outs
push
sbb
sbb
xchg
push
dec
or
dec
or
dec
xor
std
adc
addr16
stc
xor
and
fild
add
push
or
mov
add
add
add
popf
push
mov
inc
sub
push
sub
mov
xchg
stc
jae
popa
in
out
adc
ins
mov
je
inc
xor
loope
(bad)
cld
test
popa
mov
call
out
ins
std
xchg
stc
jnp
jp
cmp
jae
inc
in
std
scas
in
sti
xor
add
into
xchg
stc
out
mov
inc
out
je
call
stc
jnp
jp
cmp
movs
std
mov
idiv
xor
loope
adc
idiv
push
mul
inc
fs
sbb
rol
push
mov
push
or
into
xchg
stc
out
(bad)
idiv
sbb
bnd
popf
push
leave
add
add
test
add
mov
xor
pop
cmp
mov
dec
call
outs
xor
mov
mov
push
sti
cld
adc
addr16
stc
(bad)
cli
mov
outs
inc
xchg
mov
ins
call
xchg
sbb
adc
out
stos
sbb
int3
add
add
pop
and
mov
inc
mov
in
out
icebp
adc
mov
xor
push
cmp
mov
mov
call
scas
sub
push
fwait
cld
adc
ja
stc
mov
mov
ins
mov
cld
outs
inc
shl
adc
call
lea
add
add
mov
push
sti
cli
adc
daa
popf
stc
mov
mov
pop
repnz
int3
xor
push
add
and
push
or
pop
test
out
jbe
dec
inc
fs
dec
fdivr
fs
xor
inc
fdiv
movs
adc
pop
push
ja
lea
imul
ja
imul
add
add
test
inc
in
adc
xchg
or
add
sbb
out
es
add
push
div
aaa
outs
and
fst
jne
cwde
loop
pop
lods
xor
jne
pop
fs
imul
inc
lock
add
call
fs
adc
push
or
add
xchg
or
sahf
fcomp
mov
fdiv
ja
lock
and
cmc
adc
(bad)
pop
push
pop
dec
adc
ret
movs
add
pushf
mov
jmp
lahf
loop
das
xchg
xor
call
call
pop
and
in
jmp
push
add
add
add
pop
ret
push
mov
and
fdivr
test
dec
fiadd
pop
push
inc
cmp
cwde
std
add
inc
neg
pop
pop
ret
push
mov
push
dec
or
out
mov
call
fs
enter
sbb
push
sbb
add
fiadd
mov
shr
lods
add
add
jp
add
jp
popa
jmp
add
inc
add
mov
scas
sbb
(bad)
push
sub
push
jo
inc
movs
push
adc
jge
stc
or
fadd
cmp
stos
(bad)
out
jbe
dec
(bad)
(bad)
lock
adc
mov
cli
call
or
adc
sbb
push
add
add
adc
dec
push
dec
not
stos
inc
popa
add
fld
call
lock
jo
cdq
stc
imul
and
jbe
idiv
sbb
stos
(bad)
out
je
call
push
adc
mov
push
dec
or
pcmpeqw
mov
or
cmp
push
push
add
add
dec
not
jp
add
fld
add
jmp
xchg
or
add
and
mov
lahf
pushf
add
inc
hlt
je
add
fsub
xor
adc
mov
test
push
pop
cmps
jno
mov
int3
cmps
(bad)
(bad)
jae
out
lea
int3
mov
add
add
cdq
and
nop
fidiv
cdq
dec
mov
out
sbb
add
int
pop
sar
or
not
xlat
mov
dec
pop
cld
mov
fistp
jns
mov
inc
loope
shl
pop
mov
mov
dec
pop
and
push
mov
mov
push
pop
cld
add
add
fcomp
cs
rcl
and
dec
mov
ja
call
inc
arpl
popa
xchg
int
(bad)
mov
call
push
push
(bad)
cld
mov
sub
fldl2t
xlat
dec
lea
int3
loope
loop
neg
inc
arpl
loope
int
hlt
into
sti
(bad)
out
sbb
ds
and
add
xor
cmps
push
add
add
push
and
add
and
or
adc
mov
add
rol
(bad)
(bad)
repz
mov
sbb
in
ret
fiadd
add
fs
mov
add
imul
xor
push
mov
xchg
and
call
or
adc
cld
movs
repnz
add
add
add
arpl
push
shl
sbb
inc
rcl
std
pop
daa
test
dec
or
lods
fwait
push
inc
arpl
sahf
jge
(bad)
leave
mov
inc
cld
repnz
adc
adc
push
push
(bad)
repz
inc
lock
mov
and
push
call
dec
aam
ds
add
add
add
arpl
popa
push
push
(bad)
jae
loop
lods
not
(bad)
(bad)
jl
cmp
adc
add
push
cmp
repz
inc
lock
push
sub
fadd
add
add
jmp
idiv
movs
icebp
sub
and
adc
add
inc
adc
jge
add
add
fadd
push
jno
push
(bad)
repz
dec
das
and
mov
es
and
mov
shl
(bad)
sub
call
dec
and
mov
mov
shl
xchg
and
push
push
mov
and
sti
call
jb
lea
out
sti
xor
and
mov
hlt
and
cmc
add
mov
repnz
call
push
push
and
mov
test
and
dec
mov
mov
test
jmp
aas
inc
mov
data16
mov
idiv
jae
add
out
xchg
add
add
data16
imul
adc
inc
je
or
(bad)
(bad)
frstor
fsubr
jmp
adc
dec
adc
push
punpckhdq
xor
sahf
loopne
dec
clc
push
cmp
adc
call
into
out
jmp
sub
push
test
sub
mov
in
add
and
in
cmc
fiadd
mov
xlat
mov
add
mov
dec
push
inc
pushf
les
retf
les
pop
sbb
fs
loopne
add
push
push
loope
sbb
push
int3
push
mov
and
fild
add
and
mov
add
add
stc
jmp
add
xor
lahf
cld
or
mov
mov
mov
mov
and
fiadd
add
add
(bad)
call
dec
sub
jp
sbb
add
arpl
xor
sbb
call
or
or
add
add
call
jmp
aad
inc
je
loope
movs
adc
call
jecxz
xor
adc
cmp
je
inc
and
xor
fld
mov
jnp
ins
and
add
add
popa
cmp
mov
hlt
stc
push
and
mov
adc
fnsetpm(287
fmul
add
add
mov
inc
and
sbb
ss
dec
push
pop
ins
and
not
add
std
adc
and
fild
add
fiadd
add
jg
or
add
add
push
loope
sbb
std
add
mov
and
and
fild
add
arpl
add
imul
add
add
and
arpl
jno
sbb
std
repz
popa
(bad)
sbb
clc
cmc
fild
call
popa
aaa
sbb
mov
stc
call
adc
add
mov
mov
jae
adc
neg
call
cld
inc
sbb
add
add
add
gs
lea
mov
call
cmp
or
push
add
imul
mov
test
fild
add
push
leave
jl
mov
cmp
adc
pop
outs
gs
popa
movs
sbb
and
loopne
add
add
mov
jle
adc
add
test
fild
add
test
fisubr
lods
mov
and
rcl
sti
(bad)
cmp
add
cmc
ins
and
and
and
fiadd
add
adc
aaa
adc
cmp
push
dec
mov
mov
add
in
pushf
or
dec
xchg
imul
add
add
inc
add
(bad)
mov
add
jno
sub
and
mov
loope
ret
not
(bad)
cdq
ret
not
fmul
test
add
fs
test
and
idiv
fwait
or
cmp
fimul
ins
inc
test
and
call
xor
test
add
fadd
pop
xchg
sub
add
add
fsubr
int3
int3
sbb
lock
cmps
jecxz
push
cmp
dec
inc
mov
data16
sub
cmp
and
xor
fild
push
and
inc
and
loop
add
add
sub
add
and
inc
in
jnp
add
in
mov
frstorw
mov
inc
or
in
and
add
inc
dec
lea
xor
shl
idiv
add
or
icebp
and
leave
addr16
test
pop
icebp
inc
fisubr
jno
shl
dec
lea
idiv
sub
add
add
aad
cli
int
icebp
dec
fcom
fadd
into
ror
lods
aaa
std
adc
dec
pop
push
add
push
push
(bad)
shl
loop
cld
or
push
je
test
and
push
cli
mov
push
std
repz
mov
lea
fucomi
sti
push
not
fmul
add
daa
std
repz
popa
dec
push
inc
and
inc
rcr
call
xor
call
jae
std
adc
xlat
push
call
aaa
and
push
sub
jns
stos
inc
icebp
and
add
(bad)
shl
rol
call
adc
fadd
add
add
fcomp
rcr
imul
idiv
add
fidiv
mov
pop
rol
call
push
aaa
sbb
out
mov
inc
cwde
sub
mov
and
cmp
and
shr
(bad)
jp
cmc
pop
mov
add
add
add
idiv
add
inc
cld
jbe
test
fwait
cdq
stc
mov
adc
xor
je
test
not
dec
jns
repz
rol
loope
jmp
add
repnz
imul
dec
int3
sti
jmp
push
idiv
stos
call
ret
repnz
add
shl
lea
idiv
xchg
packsswb
mov
idiv
xchg
fidivr
je
sbb
add
sub
mov
std
repz
mov
add
rol
je
mov
loope
jns
add
add
adc
or
add
add
call
adc
xor
pop
leave
std
add
dec
lea
jno
push
(bad)
and
pop
and
test
shl
imul
inc
add
sbb
scas
adc
(bad)
rcl
lea
fwait
idiv
xchg
sub
fsubr
and
cmp
push
(bad)
repz
add
add
test
ja
push
scas
add
push
mov
inc
dec
push
loope
push
(bad)
repz
aaa
push
and
push
addr16
mov
and
call
jnp
mov
or
sub
repz
lea
cld
inc
(bad)
xor
and
push
popa
out
(bad)
xchg
and
add
adc
mov
add
add
jb
imul
enter
jmp
mov
unpcklps
and
mov
mov
mov
je
stc
push
add
sti
dec
sbb
sbb
mov
fs
popa
add
xchg
push
je
dec
or
add
call
leave
lea
mov
std
inc
fadd
mov
add
add
cmc
add
xor
sbb
movs
mov
sub
mov
stc
push
jp
cmc
add
pop
push
std
jae
mov
inc
lea
lea
push
not
(bad)
xor
and
gs
pushf
int3
sub
std
shr
arpl
loope
add
cwde
sar
inc
add
add
mov
or
xor
and
gs
bound
jl
push
inc
and
mov
add
jle
xchg
sub
jns
lock
or
mov
daa
loope
(bad)
and
call
aaa
sbb
push
adc
stc
retf
push
mov
out
ja
call
fwait
add
push
adc
shr
(bad)
in
(bad)
call
jnp
rcl
cmc
ss
xor
push
mov
xor
mov
mov
je
inc
add
test
cld
adc
push
adc
lds
xor
pop
dec
push
shl
(bad)
rol
inc
add
add
and
push
pop
not
call
mov
xor
cdq
add
shr
neg
pop
jnp
adc
cmc
ss
and
dec
mov
xchg
mov
and
call
out
add
add
inc
cld
es
lahf
push
add
jnp
add
add
and
lds
jne
inc
cld
test
jnp
add
sar
shl
(bad)
push
jl
push
inc
in
jb
xchg
and
fld
and
sbb
sbb
pusha
mov
add
xor
jmp
push
cdq
stc
dec
jecxz
je
test
imul
mov
pusha
stc
(bad)
ds
lea
dec
ds
inc
xor
mov
pop
xchg
xchg
and
xor
add
rol
imul
sti
jmp
pop
idiv
shl
pop
cld
int3
pusha
sub
rcr
lods
sub
or
int
add
icebp
mov
jb
imul
lock
add
add
push
cmc
add
add
test
pushf
xchg
and
add
cld
jmp
pop
add
loope
idiv
shl
pop
cld
sbb
xchg
(bad)
adc
add
arpl
loope
jns
repz
loop
pop
and
cmp
cdq
push
push
cmp
outs
repnz
add
sti
inc
add
add
rol
call
push
sbb
lea
idiv
xchg
(bad)
loope
cmp
(bad)
(bad)
sti
jo
(bad)
jmp
js
jmp
cmp
(bad)
fstp
call
mov
dec
push
dec
mov
repnz
mov
sbb
mov
dec
mov
jmp
or
add
add
mov
repnz
call
scas
adc
idiv
adc
inc
cld
sub
jmp
sbb
lds
cmp
(bad)
rcr
loop
aam
idiv
popa
dec
inc
(bad)
jae
rol
call
mov
aas
idiv
adc
add
fcomp
jmp
jmp
add
(bad)
icebp
ds
shl
dec
push
loope
inc
inc
sbb
aas
inc
sbb
push
jnp
pop
sub
sbb
sub
inc
xor
bound
mov
jae
(bad)
repz
or
and
call
push
dec
mov
add
add
dec
call
ror
jae
test
push
sub
cmc
call
daa
adc
push
push
cmc
add
dec
push
add
call
sbb
rcl
cmps
not
push
dec
mov
adc
cld
add
loop
dec
movs
not
das
add
adc
add
adc
jge
inc
mov
inc
cld
out
add
fadd
std
ret
pusha
mov
inc
in
mov
mov
repnz
movs
test
add
pop
inc
add
mov
and
movs
test
sbb
sub
dec
push
loope
mov
hlt
jae
inc
add
add
mov
daa
adc
push
mov
inc
push
sbb
imul
or
sbb
add
mov
add
dec
push
stos
out
jmp
push
add
ret
cmp
mov
mov
mov
aaa
cld
jmp
fadd
and
push
inc
and
push
cmp
add
mov
push
pop
mov
or
test
jl
je
mov
dec
ret
inc
or
xor
ins
jo
and
std
repz
icebp
lea
cmp
dec
test
jmp
adc
addr16
stc
cmp
jae
and
add
add
inc
jle
je
push
idiv
sbb
lock
idiv
sbb
mov
imul
sub
adc
div
loope
cmps
mov
adc
out
stc
jg
jnp
add
mov
sbb
or
popa
or
imul
stc
dec
call
pushf
mov
stc
or
adc
fcos
repz
stc
(bad)
stc
inc
mov
push
xor
or
ds
push
pop
rol
lahf
sbb
sbb
mov
stc
arpl
add
movs
mov
add
add
add
mov
test
inc
add
adc
(bad)
clc
jae
add
mov
xchg
mov
sbb
call
cmps
adc
mov
pop
mov
adc
sbb
(bad)
xrelease
in
cmp
lock
push
pop
popf
std
jmp
mov
and
xchg
adc
push
fsub
inc
jmp
add
cmp
call
mov
inc
je
inc
and
push
cmp
daa
je
xchg
mov
mov
mov
jns
shl
cmp
push
push
stc
test
add
add
sub
sbb
loop
hlt
fdivr
aam
fadd
inc
or
mov
dec
xor
pushf
stc
test
mov
fadd
push
xchg
retf
call
inc
mov
xor
call
adc
cmps
popa
dec
sbb
add
add
imul
mov
test
add
and
test
jnp
add
call
mov
adc
add
fild
mov
jl
inc
xor
sub
jno
sbb
call
hlt
push
test
fild
add
sbb
add
div
add
enter
enter
movs
fst
clc
jle
add
call
out
add
test
add
fs
call
push
ja
mov
mov
and
mov
lods
and
fiadd
add
mov
push
jno
sbb
call
addr16
sbb
add
fiadd
dec
dec
lea
aad
in
call
mov
movs
jge
mov
fiadd
(bad)
sti
cwde
mov
mov
sub
or
cmc
je
shr
stos
push
lods
and
fadd
add
pop
sbb
add
fiadd
call
repz
add
fiadd
push
scas
xadd
pop
loope
and
pop
in
add
int3
ins
sbb
shr
push
(bad)
push
dec
push
push
lods
and
fld
add
arpl
and
sbb
call
mov
add
repz
stc
(bad)
jns
rol
rol
add
cwde
mov
stc
mov
movs
ins
and
mov
repnz
or
call
mov
add
fs
fadd
add
adc
cmps
xor
mov
int3
retf
push
(bad)
shl
cli
(bad)
mov
xor
add
xlat
cmc
adc
xlat
scas
dec
push
or
(bad)
jmp
jp
jo
out
call
mov
stc
daa
fmul
mov
cmps
neg
call
icebp
xlat
add
and
xor
cdq
test
jne
movs
je
or
and
adc
cld
and
imul
add
add
ror
fldcw
adc
div
retf
add
vdivps
(bad)
cli
fs
lock
div
adc
jae
cmp
mov
cmp
adc
pop
jl
icebp
call
mov
add
dec
or
adc
mov
or
and
call
add
add
in
add
mov
add
mov
sti
mov
push
pop
imul
sub
inc
or
and
call
push
fwait
add
or
std
je
arpl
and
call
iret
fadd
ret
stc
fs
stc
jecxz
dec
lods
sub
lea
add
add
adc
test
mov
in
dec
ins
push
dec
mov
adc
std
ret
pop
mov
or
and
call
scas
psrad
rcl
jmp
arpl
xor
inc
inc
arpl
push
inc
mov
movd
mov
inc
loopne
dec
or
push
mov
shl
leave
retf
add
add
push
call
dec
adc
mov
jecxz
aas
call
and
add
dec
or
pop
add
js
add
dec
or
call
jae
cld
(bad)
call
cdq
add
lods
mov
add
jecxz
add
add
inc
popf
sub
jb
pop
ret
jle
mov
jno
stc
out
daa
idiv
outs
call
aam
call
xor
and
or
jge
std
jae
jno
test
xor
mov
pop
mov
or
(bad)
loope
loope
aas
or
sbb
cli
mov
mov
mov
loop
add
add
jecxz
neg
sub
(bad)
test
fsub
add
and
call
cmps
sbb
add
and
add
or
pop
je
cld
mov
std
add
lock
arpl
aaa
pop
dec
mov
ret
(bad)
inc
or
ja
(bad)
rcr
(bad)
dec
or
adc
arpl
add
add
add
movs
sub
add
les
dec
mov
add
push
sbb
cmp
les
add
dec
mov
add
fld
push
fild
mov
adc
inc
stc
push
fild
push
cld
hlt
scas
add
popf
and
loopne
add
add
add
pop
cmp
xchg
pushf
or
(bad)
js
or
mov
inc
xor
fyl2xp1
fisttp
ins
test
pop
push
or
stc
push
(bad)
cmps
mov
jmp
not
fisttp
add
dec
(bad)
pushf
or
cli
jmp
pop
add
add
add
idiv
mov
fiadd
mov
mov
repz
fimul
js
test
ret
xchg
fld
mov
dec
in
(bad)
push
fdecstp
fisub
loopne
test
mov
add
jge
nop
fiadd
add
fistp
data16
add
sbb
fld
mov
dec
sar
neg
add
xchg
ins
push
inc
je
jge
mov
popa
push
inc
xor
jge
(bad)
add
lods
xor
test
stc
push
jg
and
pop
mov
fcomp
mov
popf
add
fcomp
addr16
inc
add
add
add
sbb
lea
inc
cdq
add
mov
sub
jmp
jge
inc
loopne
add
add
repz
sbb
shl
cmp
arpl
add
push
mov
ds
jmp
add
add
sbb
rcr
(bad)
js
adc
hlt
(bad)
out
adc
push
jbe
lea
inc
sbb
push
jne
lea
inc
cmp
mov
call
lea
cmp
push
mov
aad
xchg
mov
add
sbb
sti
call
or
add
add
sahf
je
int3
cmp
shl
or
das
not
scas
fnsetpm(287
jmp
and
jne
imul
push
adc
jecxz
cmps
(bad)
out
push
jle
push
(bad)
jmp
sub
inc
add
jmp
ret
pop
in
add
fsubp
mov
fdiv
inc
add
sbb
out
add
add
idiv
(bad)
push
arpl
in
adc
mov
ror
mov
imul
aam
dec
push
not
ja
popa
add
fiadd
(bad)
cmp
call
jo
and
imul
add
cld
or
adc
add
add
add
scas
cmp
pop
lock
push
jae
dec
shr
test
sub
dec
push
add
mov
jae
popa
jmp
retf
fiadd
mov
jge
inc
fld
add
sub
jge
add
pop
dec
jne
add
adc
cmps
add
(bad)
cmp
inc
xor
mov
add
add
and
pop
jne
sbb
jl
aad
call
adc
xchg
dec
lea
test
call
dec
pop
mov
(bad)
stc
addr16
or
dec
lea
call
push
or
jmp
imul
add
fdiv
xor
rep
jp
jo
in
mov
sub
add
loop
jmp
sbb
test
adc
inc
add
inc
call
pop
loope
icebp
add
lea
cmp
add
fucomi
(bad)
lahf
fild
cmp
jae
ins
pop
sbb
jmp
add
add
fdiv
(bad)
sbb
add
sbb
std
add
cmps
push
jge
cmps
fild
adc
inc
je
push
test
in
jmp
fild
add
jmp
xchg
test
or
cmc
jle
push
jne
adc
cmp
loope
xor
pop
add
add
add
xor
mov
inc
hlt
repnz
and
add
or
int3
loopne
call
inc
sbb
mov
daa
loope
pop
add
call
inc
hlt
add
mov
out
xor
xchg
add
xchg
jge
stc
push
mov
dec
push
sub
je
loopne
adc
movs
add
add
sbb
mov
adc
mov
idiv
pop
dec
jecxz
and
adc
mov
dec
fwait
ja
cmps
movs
fdivr
ret
in
fsubr
fmul
stos
icebp
sub
add
test
loope
in
jae
das
adc
mov
fs
push
jno
or
add
add
xlat
push
jmp
mov
pushf
mov
out
mov
ins
dec
pop
jmp
stc
lods
loope
add
mov
pop
push
and
cdq
das
loop
jnp
and
int
add
pop
test
je
jle
push
addr16
inc
inc
add
dec
in
add
add
sub
cmc
adc
xchg
mul
inc
in
loope
and
not
jb
(bad)
mov
cmc
adc
aaa
sbb
call
aaa
inc
adc
imul
or
neg
xchg
je
test
je
rol
call
mov
call
add
inc
sbb
addr16
fadd
psraw
out
js
jmp
mov
push
pop
clc
add
in
int
stc
(bad)
fldenv
inc
in
fldl2e
sub
dec
call
daa
das
arpl
jae
in
jmp
outs
cmp
cmp
push
test
ja
add
add
add
xchg
sbb
mov
fild
call
rcl
(bad)
call
fild
cld
(bad)
idiv
dec
(bad)
leave
lea
xor
add
add
test
stc
call
ds
jmp
dec
loope
popf
fild
adc
or
hlt
mov
sub
dec
mov
add
cmp
out
mov
jmp
pushf
add
push
pushf
sbb
shr
enter
add
dec
push
loope
sbb
std
shr
lea
loope
push
mov
loope
pop
add
jmp
cmps
inc
mov
(bad)
cmp
add
add
add
add
in
push
inc
dec
out
inc
call
dec
mov
push
(bad)
(bad)
call
pop
cmc
xor
or
add
pop
jmp
out
add
fistp
push
mov
dec
(bad)
shr
call
div
adc
add
add
pop
sub
sti
push
stc
call
(bad)
inc
xor
loope
add
adc
and
fs
and
fadd
push
fcom
ret
push
and
xchg
std
and
mov
sbb
sub
mov
adc
mov
fiadd
add
add
add
cld
out
fsubr
xchg
test
or
add
sti
push
push
sar
xor
push
test
lods
loope
stc
cld
test
jbe
push
jl
sbb
std
xor
or
(bad)
mov
fldl2e
sub
dec
call
repnz
call
or
sti
test
jg
xor
xchg
jge
fsub
add
scas
jae
sbb
fisttp
add
add
push
sahf
sbb
ins
ins
and
clc
aam
je
lahf
loopne
adc
push
mov
test
pusha
push
in
mov
sub
add
add
add
shl
fild
push
movs
stc
adc
addr16
stc
cmp
fiadd
(bad)
jmp
push
or
mov
arpl
push
and
adc
mov
div
cmp
cmp
test
sub
(bad)
jmp
push
sub
inc
add
add
test
sbb
sti
not
arpl
xchg
test
push
jmp
mov
sub
and
adc
cmps
adc
imul
push
stc
(bad)
cmp
mov
cmp
sbb
stc
adc
pop
lods
add
fnstenv
push
outs
xchg
loope
xor
neg
cdq
push
test
add
das
lods
loope
js
test
jbe
push
cld
xchg
push
inc
movs
cld
xor
lea
stc
(bad)
pop
lds
jmp
idiv
call
jae
cld
test
jl
xor
jno
sbb
dec
(bad)
mov
fld
call
cmps
pushf
add
add
lock
ja
sbb
imul
not
into
adc
push
mov
lea
loopne
in
mov
sub
add
in
xchg
in
(bad)
(bad)
icebp
jo
xor
inc
add
icebp
cmp
arpl
je
loope
mov
adc
(bad)
pop
hlt
call
add
pushf
out
stc
mov
ja
sub
push
mov
sbb
call
pop
in
lahf
stos
mov
dec
push
xor
fiadd
add
test
out
loop
les
dec
(bad)
clc
xor
push
mov
and
add
add
xchg
into
cmp
xchg
cmp
mov
test
jbe
add
add
fist
mov
call
vunpckhps
idiv
scas
repz
ret
push
mov
or
inc
(bad)
repz
inc
or
in
shl
stc
mov
push
test
shl
test
push
iret
call
popa
pop
push
std
jae
adc
mov
xlat
or
fimul
(bad)
jl
mov
add
or
mov
imul
or
jp
add
ret
shl
loope
jmp
push
mov
loopne
(bad)
imul
idiv
add
add
mov
bound
scas
xchg
mov
cmps
das
loope
push
popa
pop
jno
repz
lea
cld
inc
(bad)
loope
aaa
loope
sub
leave
std
and
inc
jo
call
push
and
inc
xor
inc
adc
call
sub
or
fmul
stc
imul
test
loope
call
loope
in
std
repz
mov
scas
inc
xor
mov
jmp
std
repz
adc
fmul
(bad)
mov
pop
adc
push
popa
pop
(bad)
std
and
lea
ins
cld
inc
add
add
mov
in
inc
cld
scas
hlt
mov
xchg
in
les
cld
push
xchg
fld
sbb
or
pusha
or
add
stos
lods
std
shl
loope
cmp
not
xlat
mov
sbb
adc
adc
leave
std
adc
mov
aad
jecxz
cmp
idiv
add
add
repz
popa
lods
(bad)
std
ret
loop
mov
sub
inc
add
leave
std
and
inc
jo
call
mov
mov
in
test
not
pop
lods
std
add
dec
(bad)
sub
pop
call
out
or
push
mov
shl
not
sbb
bsf
or
add
add
add
lods
std
repz
gs
not
fmul
(bad)
cld
das
adc
adc
(bad)
std
repz
inc
lock
inc
clc
in
push
jno
(bad)
std
shl
loope
lock
push
xor
std
jae
mov
jo
out
mov
mov
hlt
push
test
add
adc
not
mov
dec
(bad)
test
in
push
fwait
or
push
mov
in
push
sub
adc
jl
std
xrelease
ror
loope
in
push
mov
mov
cld
sahf
sbb
add
(bad)
std
repz
inc
rcl
call
push
inc
mov
add
in
mov
out
push
popa
push
leave
std
jae
mov
in
sahf
out
mov
mov
hlt
push
test
not
mov
dec
(bad)
test
out
push
cld
or
push
mov
in
push
cli
jge
adc
xrelease
mov
in
pop
add
add
daa
out
push
jle
mov
or
sbb
xrelease
sub
call
push
popa
stos
(bad)
std
xchg
in
xor
jecxz
push
inc
push
leave
std
xchg
in
inc
sub
mov
mov
and
test
not
pop
lods
std
shl
dec
mov
add
mov
out
jmp
fwait
or
push
mov
add
not
sbb
sbb
arpl
mov
lods
std
adc
loope
ss
push
jle
mov
or
adc
rep
arpl
popa
mov
inc
shr
call
push
popa
mov
scas
(bad)
test
rcr
push
sbb
inc
add
fs
std
xchg
shl
in
aam
mov
mov
and
test
not
pop
lods
std
ret
ror
test
shl
jmp
cli
or
mov
not
sbb
sbb
adc
add
push
ror
push
ss
push
ins
mov
add
add
fdiv
adc
rol
(bad)
std
rcl
mov
xor
inc
pop
idiv
jae
je
mul
lock
shl
push
(bad)
sahf
mov
imul
add
dec
push
shl
mov
iret
cld
call
pop
icebp
push
and
je
mov
test
(bad)
jmp
jo
mov
add
add
xchg
adc
adc
idiv
adc
fucomi
jp
sbb
and
std
add
add
jns
or
clc
adc
shl
rcl
lea
idiv
rol
call
xor
idiv
jae
add
inc
ror
jl
adc
adc
add
push
iret
pop
cmp
idiv
shr
mov
idiv
int3
pop
adc
rol
idiv
add
fucomi
jns
sbb
adc
cli
jns
or
adc
adc
lea
outs
sub
popa
mov
loope
hlt
retf
imul
pop
test
ror
not
pushf
mov
dec
into
idiv
sub
int3
loope
(bad)
mov
dec
and
inc
pop
(bad)
xchg
int3
mov
ins
mov
mov
adc
repz
test
outs
sub
sub
cmc
push
mov
jno
add
and
or
fmul
std
repz
idiv
add
in
sbb
int
ins
add
add
(bad)
stc
mov
pop
icebp
add
sbb
pop
lock
test
imul
mov
std
xchg
push
rol
stc
retf
and
lods
in
jae
adc
pop
lods
std
or
jmp
retf
jmp
fstp
nop
int3
idiv
jbe
ins
or
int3
test
add
add
aad
in
ror
test
xor
idiv
icebp
pop
stc
imul
sub
(bad)
jmp
cmc
or
add
test
(bad)
(bad)
in
repz
imul
pop
add
rcl
xor
ror
jge
sbb
test
leave
idiv
aaa
mov
idiv
xchg
xlat
xor
add
add
or
idiv
hlt
mov
fs
imul
loopne
idiv
sbb
lock
call
mov
and
loope
lods
std
adc
mov
jne
fild
push
mov
adc
not
pop
rol
loope
and
not
(bad)
dec
push
std
repz
add
add
add
leave
std
ret
int3
loope
(bad)
not
(bad)
(bad)
jp
cmc
or
data16
jae
mov
mov
gs
fisttp
(bad)
mov
repz
repz
push
loope
leave
std
ret
retf
dec
(bad)
jmp
push
idiv
movs
mov
pop
out
add
add
repz
jp
xor
test
push
inc
adc
loope
and
div
add
add
lods
std
repz
inc
jecxz
not
fisttp
(bad)
mov
ins
arpl
xor
mov
and
sub
in
push
pop
mov
scas
sub
inc
add
add
mov
push
in
lea
pop
xchg
add
(bad)
loope
idiv
adc
inc
add
loope
(bad)
retf
not
ins
mov
cli
and
or
or
adc
adc
mov
or
paddw
outs
mov
and
test
not
and
sub
add
sbb
daa
imul
fs
inc
nop
xor
imul
dec
jmp
mov
jno
test
int3
idiv
in
arpl
les
int3
not
arpl
std
add
dec
lea
outs
mov
jl
loop
sub
dec
push
mov
add
add
loope
test
and
or
inc
or
mov
int3
xchg
xchg
std
ror
adc
fmul
jmp
cmc
sub
dec
adc
xchg
ins
mov
push
cmc
sub
adc
test
test
not
sbb
cs
push
loop
rcr
add
add
je
test
loope
push
int3
add
mov
loop
call
addr16
add
adc
popf
adc
loope
test
stos
std
cld
shl
loope
xchg
loop
lea
cld
call
mov
add
loopne
call
popa
pop
xor
lea
idiv
mov
add
xchg
(bad)
jbe
movs
fisttp
jmp
test
icebp
fcomip
(bad)
jmp
pusha
stc
push
push
rcr
jp
shl
mov
push
mov
jmp
inc
shl
test
idiv
push
fld
add
stos
sbb
adc
idiv
sub
mov
shl
add
add
shl
mov
jecxz
dec
fmul
lea
idiv
xchg
data16
jp
cmc
pop
mov
arpl
push
cmc
or
mov
icebp
in
(bad)
jmp
mov
idiv
sub
std
adc
add
call
sub
je
add
add
aas
pushf
and
mov
test
in
lea
lea
cld
push
imul
stos
paddw
push
test
push
cmc
and
cmp
add
cmc
or
(bad)
sti
xchg
loop
mov
in
(bad)
jl
mov
or
add
icebp
loope
call
pop
cwde
mov
call
fld
xchg
call
ror
ja
cld
inc
inc
scas
inc
xor
mov
jmp
std
repz
stc
or
fmul
(bad)
mov
pop
or
shl
leave
std
and
lea
add
add
lods
cld
push
mov
in
inc
cld
(bad)
shl
les
push
xor
shl
shl
dec
push
movs
mov
shl
imul
int3
xor
push
add
repz
mov
icebp
in
push
movs
mov
add
test
(bad)
sub
in
xor
dec
mov
add
add
hlt
ins
mov
fsubr
or
ret
push
jns
sub
mov
stos
outs
cmc
xor
fisttp
std
jae
mov
std
xchg
in
lea
mov
mov
hlt
cdq
inc
cld
leave
shr
jmp
test
aad
call
ja
add
fnstcw
cld
inc
shl
icebp
jecxz
push
cmps
mov
sub
jmp
add
adc
or
aam
pop
test
jge
in
add
mov
std
rcl
loope
mov
imul
sub
mov
std
jae
mov
jo
jecxz
mov
mov
add
add
hlt
mov
xchg
adc
not
pop
sbb
repz
(bad)
test
into
idiv
neg
dec
int3
jne
inc
cld
or
aad
call
aaa
cld
call
rcr
or
aad
push
shl
cmps
xor
not
movs
mov
icebp
loop
(bad)
sub
sub
test
cld
jmp
sbb
add
loop
iret
sbb
mov
iret
cmp
(bad)
fbld
out
(bad)
sub
loop
mov
loop
call
jmp
cwde
pop
sti
loope
test
shl
call
mov
outs
dec
push
int3
add
shl
imul
sbb
(bad)
jbe
(bad)
jge
repnz
test
idiv
add
add
push
mov
outs
mov
je
test
add
imul
inc
fs
inc
imul
std
shl
mov
popf
aaa
jecxz
lea
cld
push
stc
movs
jno
mov
das
repnz
or
div
outs
pop
mov
inc
movs
mov
mov
xor
add
add
pop
mov
iret
sub
inc
cmp
mov
add
clc
mov
movs
inc
adc
mov
in
dec
jmp
adc
test
dec
push
outs
loope
and
test
test
aas
inc
std
and
pop
jno
test
frndint
call
loopne
push
inc
stos
in
cld
xchg
loopne
mov
sbb
loopne
fndisi(8087
mov
cld
repz
jmp
xchg
frndint
call
les
inc
adc
dec
push
mov
pop
repz
call
ja
add
adc
and
dec
adc
mov
add
add
or
mov
repz
lods
pop
rcr
imul
jmp
std
rcr
mov
int3
sahf
fs
jae
ror
xlat
jmp
xchg
aaa
fistp
sbb
push
fs
pusha
call
(bad)
mov
sar
rol
div
xor
inc
rcr
sub
lods
jmp
add
add
add
xor
jo
mov
arpl
pop
adc
pop
xchg
add
mov
adc
cmps
(bad)
jmp
out
repz
fiadd
hlt
fild
jo
je
and
jge
neg
add
or
pushf
sbb
sub
sti
(bad)
mov
(bad)
add
movs
movs
or
fyl2xp1
fild
fstp
fadd
xor
or
add
add
(bad)
xor
pop
fsubr
and
fimul
fnstcw
sub
bound
fbld
call
jmp
xor
ret
mov
add
fild
add
in
jmp
lods
dec
inc
add
jg
jmp
loopne
imul
jmp
clc
add
iret
(bad)
inc
add
add
rol
out
sar
int3
cmp
jae
sbb
data16
push
mov
fldl2t
fild
fistp
aam
jmp
add
shl
addr16
mov
add
add
mov
fdiv
jmp
ja
bound
adc
in
jmp
add
add
test
add
(bad)
jmp
mov
xor
jge
lods
fsubr
loopne
adc
int
cli
jmp
pusha
out
jecxz
retf
fld
sub
pop
test
retf
mov
add
movs
jp
jmp
sub
sar
repz
sub
add
add
in
inc
je
test
call
call
mov
push
inc
jp
in
imul
cmp
add
cmc
in
inc
in
std
daa
rcl
add
outs
and
in
push
add
cmp
jae
cdq
sub
add
add
lock
inc
mov
mov
jb
fs
cmp
dec
call
mov
mov
test
xor
pop
sbb
jge
arpl
add
mov
iret
xchg
add
dec
dec
std
adc
sbb
or
dec
std
adc
or
mov
add
add
pop
aad
jmp
fsub
pop
sub
aaa
out
jb
xor
add
fbstp
push
jae
cmp
call
xchg
add
mov
mov
cdq
in
sub
test
mov
daa
xor
icebp
and
adc
and
shr
not
xchg
imul
add
add
xor
std
scas
pop
xchg
add
inc
push
idiv
popf
xor
xchg
dec
(bad)
cmp
mov
sub
mov
xor
clc
out
shl
sbb
sub
call
mov
mov
out
out
call
repz
daa
sbb
cmp
mov
loop
movs
jge
jmp
add
and
sub
in
inc
je
test
arpl
add
mov
add
cmc
(bad)
mov
repz
adc
in
imul
cmp
add
sub
add
push
sub
mov
pop
xchg
inc
call
out
idiv
xchg
cmp
inc
mov
std
fistp
push
clc
add
sbb
jecxz
movs
xor
add
fucomp
fstp
xor
jmp
fnstsw
sar
cld
mov
and
test
call
call
add
add
lahf
fmul
(bad)
in
call
jecxz
hlt
repz
neg
call
mov
xor
cmp
pushf
add
pand
and
jle
stc
cmp
outs
aaa
push
push
jecxz
movs
mov
mov
jl
add
mov
mov
and
push
and
mov
add
je
pushf
jmp
fsub
add
dec
rcl
int3
test
cmp
lods
ret
imul
div
xor
ja
repnz
in
shr
add
fcomi
jne
xor
ret
dec
mov
and
pop
pushf
add
add
push
fild
add
add
inc
fistp
mov
mov
dec
push
mov
fld
les
add
dec
jbe
add
cmp
jl
imul
lea
xor
lods
cmps
and
or
jb
adc
or
ds
hlt
fiadd
add
sbb
fs
add
add
test
push
pop
and
push
dec
and
push
dec
and
dec
inc
and
call
enter
enter
sbb
fisub
adc
add
mov
in
aad
out
je
add
and
push
je
or
es
shl
xor
push
je
mov
and
add
add
add
test
lods
add
stc
out
out
cmc
jmp
shr
lea
mov
xor
add
and
pop
or
pop
test
fld
add
lods
and
popa
lods
and
mov
push
dec
and
mov
call
sbb
push
(bad)
sub
cli
out
iret
cmc
inc
add
add
or
test
jo
add
ins
mov
fiadd
std
add
and
mov
fld
call
adc
sub
test
push
test
fld
add
xchg
inc
call
jle
dec
sbb
add
rcl
add
fsub
add
add
xor
mov
add
outs
iret
cmc
(bad)
aas
test
das
xchg
and
das
add
inc
enter
cld
fadd
mov
in
add
ds
int3
xchg
sub
mov
xor
pop
pushf
scas
rol
dec
pop
cmp
sbb
(bad)
mov
jmp
add
add
jmp
or
xchg
fisub
loopne
add
fild
call
pop
sbb
scas
popf
add
fld
add
or
push
jmp
xor
cli
push
add
js
inc
je
cli
add
(bad)
sub
test
out
leave
idiv
pop
aaa
jecxz
add
add
push
ss
pop
mov
and
int3
jmp
inc
pop
neg
mul
and
fiadd
add
fiadd
pop
xchg
mov
mov
fisubr
int3
int3
and
pop
cmps
fild
mov
adc
dec
fild
add
bound
add
add
fild
push
pop
add
in
test
push
or
add
ficom
shl
lds
pop
and
push
cmps
cdq
inc
jmp
scas
test
mov
add
jl
adc
bound
jge
and
jge
and
add
add
int3
push
add
shl
and
fiadd
add
pusha
test
fiadd
add
loopne
movs
fld
into
sub
fld
mov
mov
idiv
sbb
clc
fs
(bad)
out
out
jmp
stc
add
fs
jne
adc
xor
not
fiadd
add
stc
push
push
(bad)
fdivr
loopne
hlt
fsubr
dec
in
adc
mov
les
scas
test
pop
outs
sbb
cwde
mov
les
mov
cli
push
neg
mov
test
add
loope
cmp
(bad)
fiadd
push
add
add
add
or
mov
add
or
mov
enter
mov
mov
test
xor
or
or
stc
jmp
mov
add
fild
add
xor
xor
mov
mov
or
push
mov
ja
xchg
ror
dec
in
add
add
add
or
cli
and
stos
xor
push
pop
mov
je
add
mov
bound
loope
and
jne
add
push
fcomi
jmp
xchg
and
push
mov
in
and
call
dec
mov
aas
cmp
xchg
fs
add
add
add
mov
add
jecxz
add
xchg
aas
sbb
adc
or
cld
push
cld
sbb
sub
mov
mov
loopne
add
aaa
pop
call
or
add
je
test
xor
mov
fiadd
test
add
add
add
push
cwde
adc
ret
pop
lahf
add
mov
xchg
sbb
add
aaa
sti
push
test
imul
stos
in
add
jns
rcr
add
and
in
add
out
idiv
dec
mov
sub
push
(bad)
sub
add
icebp
mov
inc
add
add
sbb
test
and
pusha
xor
ror
add
inc
adc
shl
xchg
xchg
or
es
mov
fld
jmp
pushf
and
fld
add
and
cmc
fadd
lea
inc
mov
mov
add
add
fadd
push
mov
nop
or
or
inc
enter
hlt
or
mov
and
sbb
push
je
mov
jecxz
pop
add
test
call
pop
je
dec
xor
clc
rcl
std
add
add
add
test
fadd
add
xchg
pop
and
pop
jl
cwde
pop
je
movs
aaa
sub
pop
or
add
hlt
aaa
sbb
test
add
mov
mov
fild
add
shl
cmp
je
mov
in
scas
mov
test
call
add
add
and
aaa
lds
add
jmp
fmul
sti
xor
repz
dec
and
sbb
and
test
fiadd
add
sbb
and
pop
test
fiadd
add
and
in
add
hlt
fiadd
movs
or
les
pusha
les
inc
add
add
enter
enter
fcomp
call
mov
ret
inc
mov
les
sub
dec
mov
xlat
add
icebp
xchg
and
int3
aad
std
shl
clc
push
xor
lock
jmp
mov
fiadd
add
arpl
sub
add
cld
mov
mov
add
add
pusha
add
fisttp
call
dec
fsub
inc
dec
and
out
add
dec
in
add
xor
test
sbb
test
xchg
mov
fiadd
add
std
add
mov
enter
sub
push
int3
xor
rcl
lea
add
add
add
je
icebp
call
test
movd
add
(bad)
sar
mov
add
psraw
sub
mov
cmc
jmp
and
mov
xchg
je
pop
push
test
fadd
add
xor
inc
xchg
add
je
mov
mov
and
add
std
add
shr
fadd
idiv
loope
and
cmp
inc
je
mov
rol
or
xchg
add
mov
inc
mov
lock
jp
cmc
jmp
(bad)
dec
and
pop
rol
cli
mov
std
out
in
(bad)
jg
and
call
out
add
add
in
test
call
mov
and
xor
xchg
add
add
test
test
call
mov
jo
pop
out
inc
call
out
into
and
ffreep
and
(bad)
and
lods
(bad)
and
test
iret
and
cwde
fsubr
jnp
add
add
push
out
pop
push
lahf
stc
push
xchg
je
shl
xchg
ds
add
mov
in
cli
push
test
xor
rcl
test
fadd
add
pop
scas
pop
sbb
mov
pop
test
fs
movs
fiadd
lea
movs
add
je
test
jo
div
mov
add
add
mov
add
test
xchg
inc
and
xor
add
add
and
inc
and
pop
ins
pushf
and
frstor
add
xchg
xor
lea
loopne
in
call
lea
test
movs
fld
add
add
push
add
mov
add
into
mov
fld
push
fdiv
std
shr
mov
je
add
fisub
mov
add
call
test
jl
lea
fld
jmp
clc
cmp
mov
test
add
add
dec
test
fadd
add
xor
sti
shl
test
call
lea
mov
sub
sbb
idiv
sub
pop
test
hlt
idiv
inc
inc
and
cmps
fadd
(bad)
sub
call
add
std
ret
nop
inc
and
das
cmp
hlt
test
mov
add
add
add
loope
fs
call
fdivp
call
je
pop
xor
adc
or
fisttp
xchg
mov
inc
jnp
pop
mov
xchg
(bad)
clc
mov
cmc
(bad)
aas
retf
and
das
shl
sub
shl
push
push
xor
add
add
mov
xor
dec
xchg
je
fdivr
adc
rol
inc
and
adc
fild
lea
ret
loope
and
fild
push
mov
hlt
test
jmp
js
xor
hlt
fidiv
adc
mov
add
fiadd
jmp
xchg
mov
add
mov
int3
pop
sub
and
test
sub
pushf
and
and
cmp
inc
and
test
test
test
and
test
call
push
ror
and
cmc
sti
inc
imul
add
add
fiadd
lea
fnstsw
add
aad
adc
push
mov
fadd
add
and
bound
dec
fld
jmp
push
call
sub
adc
popa
and
ja
add
fs
daa
adc
imul
mov
add
js
in
fnstsw
add
call
lea
add
push
js
sub
imul
vmwrite
mov
add
fadd
push
int3
or
je
mov
and
cld
add
xchg
jb
test
add
add
stc
jmp
ins
and
pop
test
xchg
and
out
pop
pop
add
sar
add
sub
dec
loopne
test
inc
add
gs
not
adc
push
mov
fadd
test
pop
stc
jmp
out
out
rol
add
in
loope
ret
dec
retf
inc
aad
shr
std
test
fild
mov
push
and
movs
fild
mov
test
loopne
add
and
add
sub
dec
push
and
jne
add
js
push
and
add
call
lods
repz
xor
ffree
out
stc
add
add
cmps
and
imul
shr
loopne
cli
neg
xchg
and
stc
mov
and
add
fadd
or
rol
div
push
pushf
and
fiadd
add
and
mov
add
movs
(bad)
shl
and
mov
add
sub
call
add
add
repz
fiadd
call
pop
dec
push
mov
mov
fadd
fiadd
dec
or
neg
push
test
fild
add
mov
add
pop
loope
shl
sub
fs
fst
call
sub
ret
test
loopne
push
dec
push
and
in
fld
(bad)
sub
add
or
mov
and
inc
fs
mov
inc
fiadd
add
movs
idiv
rcl
(bad)
call
fstp
jo
adc
push
pop
mov
push
mov
and
xor
adc
add
add
add
and
and
lock
push
fcom
inc
or
jmp
fadd
mov
inc
and
imul
nop
adc
enter
sti
test
push
and
jne
add
push
and
push
fadd
call
add
add
out
or
in
add
add
je
test
fadd
add
lock
adc
int3
(bad)
test
add
and
pop
mov
push
xor
and
shl
(bad)
shl
jnp
add
dec
lea
add
mov
call
push
sti
ins
mov
cwde
fadd
add
add
add
dec
(bad)
fdivr
call
imul
push
jl
sbb
push
fwait
ins
mov
sbb
add
mov
sbb
cmp
fwait
and
xor
mov
test
test
and
jmp
fsubp
sbb
ret
stos
and
std
fwait
and
push
mov
sbb
or
push
call
dec
push
mov
add
add
mov
mov
movs
push
dec
and
push
jns
jne
add
mov
ror
fwait
stc
push
mov
sub
mov
fiadd
jmp
mov
mov
xlat
add
add
add
mov
fiadd
call
mov
fiadd
push
outs
adc
add
mov
neg
sub
stc
jmp
pop
test
aam
add
push
dec
and
int
xor
hlt
push
test
fiadd
add
adc
int
test
jno
add
mov
add
add
sub
push
push
icebp
pop
and
jne
add
pop
and
push
push
std
repz
les
int
test
cli
push
add
and
call
cmp
push
push
sbb
mov
fadd
es
pop
les
push
test
add
add
add
retf
hlt
jmp
push
mov
(bad)
add
jl
icebp
cld
adc
dec
(bad)
lock
call
push
mov
(bad)
add
int3
adc
cld
ror
dec
(bad)
loopne
lods
add
call
push
jnp
mov
(bad)
add
or
repnz
adc
dec
lea
fsubr
mov
(bad)
daa
not
push
mov
call
jg
push
int3
pop
hlt
cld
ror
and
loopne
mov
adc
xlat
test
call
mov
mov
pusha
add
fld
xor
adc
(bad)
mov
cmps
fild
push
loope
and
je
add
push
add
and
add
add
and
xor
and
sbb
pop
fild
add
retf
dec
aaa
add
and
test
repnz
test
popa
push
and
cmc
fiadd
(bad)
push
fisub
add
(bad)
mov
test
and
fild
add
pop
and
mov
add
sub
add
add
icebp
push
and
je
add
movsx
mov
mov
neg
inc
test
sbb
and
(bad)
clc
jmp
or
mov
and
xor
add
test
fs
fisub
call
movs
push
test
fiadd
add
inc
hlt
leave
mov
add
test
add
mov
mov
push
push
inc
jge
mov
fld
push
jp
and
test
add
jl
pop
std
adc
or
jge
fs
mov
mov
test
fld
add
jnp
pusha
sbb
inc
and
and
leave
test
add
add
call
sub
push
push
jno
and
cmc
fadd
push
stos
pop
and
call
pop
pop
std
rcr
or
stos
and
stos
pop
and
mov
push
test
xlat
add
hlt
out
movs
pop
and
sbb
xlat
push
lea
mov
push
(bad)
call
fsubr
add
repz
in
add
pop
dec
fs
scas
push
push
int3
lea
std
repz
les
xor
and
test
lock
repnz
dec
push
popa
dec
and
in
add
test
cld
jmp
retf
test
pop
scas
repnz
adc
xor
add
add
add
push
retf
fcomp
stc
push
dec
push
and
lods
jne
add
loopne
cld
push
sub
push
repnz
dec
push
loope
and
fild
call
cmps
retf
dec
sar
jmp
xor
add
dec
push
shl
and
add
dec
pop
cld
jmp
add
add
mov
repnz
dec
push
jno
and
cmc
fiadd
call
test
add
mov
cld
div
out
inc
enter
cmps
pop
fs
daa
dec
push
and
movs
fiadd
call
stos
pop
and
push
fiadd
idiv
jecxz
push
loope
and
mov
add
add
arpl
rcr
daa
fiadd
call
scas
movsx
out
je
rol
add
test
sbb
loopne
call
ja
or
mov
pusha
inc
and
mov
test
test
movs
aad
jmp
or
jns
jl
fld
cmp
add
add
mov
call
out
or
jmp
push
fwait
bound
add
dec
push
mov
and
xor
add
pushf
push
cld
jmp
fld
jmp
lahf
mov
and
hlt
fadd
push
or
push
push
(bad)
push
lea
les
in
cmp
and
add
add
add
push
sbb
or
test
add
jmp
neg
mov
dec
enter
sbb
push
sub
and
fild
add
fs
push
cs
cld
shl
xchg
mov
or
test
adc
clc
adc
mov
add
add
and
jnp
dec
lock
les
test
fild
push
sbb
push
and
nop
sbb
loopne
inc
and
and
mov
add
daa
mov
adc
mov
test
jecxz
jmp
sti
push
cmps
je
adc
ja
in
fild
mov
mov
add
std
xchg
fild
mov
add
xor
je
sub
test
loopne
add
call
cmp
mov
add
call
js
pop
add
ficom
cmps
jmp
jmp
or
xor
add
test
loopne
add
add
add
and
cmc
pop
push
sbb
or
les
and
cmps
stos
test
stos
call
sub
push
push
mov
and
movs
and
and
fiadd
add
pop
sbb
or
int3
(bad)
test
add
inc
mov
stos
call
add
and
loopne
mov
test
mov
mov
lea
mov
call
push
jmp
mov
inc
fld
add
cld
adc
pop
add
mov
and
push
mov
fld
add
cmps
out
shr
call
ins
add
add
add
mov
fiadd
add
in
cld
adc
inc
and
mov
and
and
int3
add
fsubr
inc
ret
or
(bad)
js
pusha
add
fadd
add
fsubr
inc
or
or
fs
adc
and
movs
fadd
call
das
xchg
and
int
push
inc
add
add
inc
dec
mov
sub
sub
add
fwait
and
mov
ja
and
pop
clc
jmp
enter
cmp
and
ror
and
call
push
sbb
sub
je
sbb
push
add
and
cmc
fild
call
add
add
stos
pop
and
mov
jae
mov
jge
push
add
add
test
movs
fild
icebp
pop
and
jne
add
fisttp
lea
mov
test
push
stc
jmp
(bad)
call
(bad)
and
or
shl
cmp
popf
inc
jne
add
add
int
test
icebp
jge
cmc
fiadd
inc
mov
mov
jmp
and
cmc
fiadd
push
int3
push
out
cld
shl
and
pop
idiv
mov
rol
mov
jnp
jae
jl
movs
fiadd
cmp
jle
mov
add
fs
movs
fiadd
push
mov
jmp
not
and
pusha
add
add
push
and
call
ja
and
pop
ror
outs
add
and
inc
and
sar
test
fiadd
lea
push
(bad)
fadd
in
hlt
fucomp
mov
push
fisttp
and
and
shl
and
fiadd
add
test
je
nop
call
xor
fadd
movs
fisttp
mov
add
add
mov
imul
jno
les
mov
out
or
test
add
jmp
xor
pop
push
pop
dec
frstor
loope
and
mov
xchg
add
jb
and
fiadd
add
in
add
mov
and
add
cld
stos
in
add
and
(bad)
add
add
add
fcomp
add
jae
and
(bad)
add
stos
pop
and
mov
shl
cld
jae
je
or
div
pop
pushf
dec
lea
add
fsubr
jp
fadd
dec
cli
push
xor
fwait
add
je
cmp
seta
js
dec
and
jle
idiv
pop
ror
lea
add
add
and
sub
and
call
pop
mov
les
and
dec
lea
fld
out
pushf
add
inc
sbb
rcl
or
scas
and
and
test
fadd
add
and
and
inc
mov
or
mov
mov
jle
movs
fild
dec
add
add
sub
sti
(bad)
cmc
jmp
sbb
cmp
add
outs
inc
add
mov
stc
push
or
dec
(bad)
shl
cmp
icebp
idiv
adc
add
sahf
and
outs
lahf
and
jge
and
fsub
sar
and
test
fiadd
add
add
add
jmp
mov
jnp
shl
fiadd
add
data16
fiadd
add
and
test
add
adc
ret
or
add
pushf
sbb
push
push
jnp
mov
fild
add
sbb
cld
repz
(bad)
fdivr
mov
add
call
jmp
rcl
add
inc
bound
mov
mov
add
jl
std
ret
and
and
outs
je
cld
bsr
xchg
and
dec
sbb
mov
pop
jae
push
push
pop
mov
fadd
add
sete
adc
add
gs
and
sbb
mov
and
int3
add
std
add
add
shl
and
fiadd
add
imul
div
adc
add
call
push
ja
dec
and
adc
icebp
lock
push
xor
out
cld
call
test
clc
jmp
test
fadd
add
mov
jo
sub
jmp
dec
and
jno
adc
add
add
xchg
or
clc
jle
test
in
je
adc
call
sub
fistp
and
cdq
fadd
push
mov
and
fadd
push
sbb
add
jno
and
test
in
clc
jmp
mov
fiadd
add
fbstp
jns
add
fucomip
in
add
add
add
test
add
mov
rol
pop
into
jl
fbstp
sahf
xor
add
sbb
add
mov
call
mov
test
fadd
add
pop
dec
and
lahf
jecxz
in
test
je
dec
(bad)
call
fild
aaa
pushf
add
fwait
paddw
pop
les
push
mov
add
add
xor
add
xor
dec
and
pop
add
and
mov
fild
add
and
out
add
xchg
xchg
add
dec
mov
or
stc
jmp
scas
mov
add
arpl
xchg
and
mov
test
fadd
add
and
scas
test
scas
call
add
test
je
add
pop
and
push
xchg
push
std
repz
les
jle
inc
and
test
scas
mov
add
call
sub
pusha
or
stos
add
test
test
fadd
add
pop
cmp
xchg
and
mov
test
clc
cli
jmp
add
jmp
push
and
loope
add
add
test
and
push
stos
jb
and
fld
add
dec
(bad)
enter
xor
call
push
jnp
mov
push
fiadd
add
loope
adc
add
add
add
fsubr
dec
or
hlt
or
pop
(bad)
jns
sbb
ja
rcr
push
popa
fs
in
add
les
cld
jmp
and
test
add
fadd
idiv
repz
clc
sar
enter
sti
dec
mov
mov
add
mov
loope
repz
mov
fadd
push
lock
add
je
push
mov
fild
add
push
and
sub
add
cwde
xchg
add
(bad)
push
je
inc
and
mov
push
adc
add
dec
cmp
nop
hlt
fisttp
cmc
dec
dec
and
cmp
push
dec
mov
fild
add
bound
mov
call
and
add
add
shr
je
bound
loope
and
fild
(bad)
call
fild
call
fild
aas
cmp
data16
xor
pop
push
mov
fild
call
popf
sahf
and
jmp
pop
jne
and
in
add
fcomip
jns
mov
add
add
add
sbb
and
fild
add
or
mov
add
and
add
add
mov
add
movs
pop
dec
and
(bad)
push
test
stc
jmp
test
push
sti
push
popf
je
adc
dec
and
fiadd
(bad)
mov
ficom
and
call
mov
add
add
test
fiadd
add
je
dec
push
test
fiadd
add
call
cmp
add
in
div
dec
lea
std
push
add
cmc
jmp
sbb
cmp
and
fadd
add
adc
adc
(bad)
adc
sbb
add
add
pusha
sbb
and
adc
mov
test
mov
clc
test
add
pushf
and
adc
test
(bad)
adc
and
int3
(bad)
push
fcomp
pop
hlt
inc
push
and
call
sub
test
inc
movs
and
pushf
clc
(bad)
or
add
not
dec
mov
inc
loopne
add
(bad)
cld
ror
push
add
stc
retf
push
jnp
mov
adc
add
int3
xor
cld
xrelease
fdiv
loopne
xor
call
push
jnp
mov
fild
add
in
cld
add
add
repz
(bad)
jmp
stos
push
sbb
not
dec
mov
mov
jb
cld
jae
inc
and
(bad)
jmp
hlt
add
fdivrp
adc
sbb
add
mov
add
fbld
fild
add
pop
scas
push
mov
add
add
add
call
mov
jl
add
mov
mov
cld
out
adc
adc
add
cli
jmp
pusha
push
pop
sub
dec
call
push
push
(bad)
call
xor
or
(bad)
dec
mov
and
icebp
arpl
mov
and
(bad)
loope
sub
add
add
cmc
push
push
cld
mov
div
sbb
out
shl
push
push
ins
sar
inc
cld
add
mov
scas
xor
call
fisubr
fld
retf
push
push
loope
daa
fiadd
mov
call
jmp
je
sub
call
add
add
movs
or
xchg
dec
mov
push
js
and
inc
mov
sub
dec
sbb
mov
add
push
(bad)
jns
mov
test
dec
fiadd
in
pop
jnp
adc
dec
push
push
test
imul
cs
call
mov
or
add
add
js
adc
je
xchg
std
repz
enter
cmc
jmp
je
sub
call
pop
sub
adc
mov
retf
add
movs
mov
std
sbb
retf
mov
std
adc
call
call
push
(bad)
call
add
add
out
daa
call
mov
mov
inc
xor
or
xchg
js
repz
shl
iret
or
outs
std
adc
call
test
je
stos
dec
(bad)
call
jg
call
mov
les
inc
in
or
sar
sbb
or
outs
std
add
add
xchg
dec
enter
cmc
jmp
sbb
dec
(bad)
call
out
sub
fiadd
sti
add
je
or
pop
outs
std
rcr
je
mov
std
repz
enter
cmc
jmp
dec
(bad)
call
lahf
sub
clc
xchg
and
mov
dec
or
add
add
mov
std
ret
pop
shl
iret
mov
push
enter
cmc
jmp
sbb
push
(bad)
call
das
sub
rol
mov
sti
add
je
or
mov
shl
iret
int3
mov
enter
cmc
(bad)
call
dec
(bad)
call
cwde
lods
cmc
(bad)
mov
and
add
test
cmp
sbb
test
in
bound
and
std
rol
cmp
add
xchg
and
jae
pusha
movs
mov
add
sub
xchg
xor
cdq
sar
mov
add
add
idiv
mov
cmovne
call
jmp
sahf
lock
jmp
scas
pop
mov
and
in
(bad)
jns
std
push
xor
cwde
sti
jnp
sub
push
outs
fwait
add
out
out
add
jmp
push
ds
xchg
and
shl
dec
call
xor
xchg
add
add
jmp
test
pop
push
ret
call
pop
fwait
adc
add
idiv
mov
cmp
jne
jbe
xchg
je
add
xor
clc
popf
loope
je
push
outs
add
push
loop
adc
out
jmp
jmp
dec
mov
add
add
call
add
jg
jg
jg
add
inc
sbb
jg
or
and
fistp
cld
or
push
xchg
(bad)
jno
push
mov
lock
test
clc
(bad)
mov
xlat
in
inc
movs
or
mov
push
ss
sbb
call
inc
sbb
into
push
push
add
add
dec
fcomip
jmp
mov
fistp
int3
jp
push
int
push
sahf
mov
jae
xchg
adc
cmps
sbb
push
pop
sub
and
add
xchg
mov
gs
sbb
iret
push
push
cmp
gs
loopne
repz
dec
adc
ror
mov
in
mov
xchg
adc
ss
push
xchg
jmp
clc
(bad)
das
das
and
jb
arpl
(bad)
fdiv
push
(bad)
daa
mov
sub
inc
gs
adc
int
repz
jmp
mov
xchg
push
mov
xchg
fistp
pushf
sti
push
data16
pause
cli
mov
add
add
push
jmp
push
inc
push
in
(bad)
rcl
and
adc
sbb
jg
push
popf
sbb
jg
dec
xchg
inc
cld
ja
out
push
repz
push
ror
add
shl
mov
add
or
imul
xchg
mov
fs
jmp
sub
inc
push
popa
mov
cli
mov
cmp
inc
shl
call
mov
pop
ins
push
pop
mov
xor
(bad)
cli
push
int3
movs
cmc
std
jae
pop
pop
pushf
add
std
and
inc
xor
mov
mov
xor
(bad)
and
inc
add
add
inc
push
fsub
ud0
js
xor
inc
cld
ja
pusha
push
test
(bad)
cli
call
je
call
shr
cli
inc
cmps
inc
cld
sub
adc
stc
inc
sub
(bad)
test
dec
cli
jmp
add
(bad)
ror
sti
call
ret
inc
add
add
and
adc
push
loope
lea
and
add
sbb
popa
ret
fwait
int3
repnz
je
pop
test
ror
cld
(bad)
out
sbb
pop
ret
loopne
push
fstp
sbb
cwde
fnstcw
mov
xchg
adc
add
add
and
mov
cli
call
movs
call
lea
cli
call
das
ret
inc
rcl
push
(bad)
sub
push
cli
sub
inc
mov
(bad)
stc
mov
push
ins
push
div
test
mov
jecxz
cli
(bad)
cmp
sbb
sbb
add
add
sub
call
clc
rcl
neg
sti
jmp
out
inc
add
xor
(bad)
cli
push
jmp
std
add
or
sbb
sbb
push
fnstsw
clc
js
mov
or
pop
push
mov
cdq
setle
movs
fiadd
shr
inc
pop
ficom
add
add
xchg
mov
push
cmps
pushf
dec
push
or
add
xor
les
add
mov
call
das
pop
add
dec
xor
adc
call
ja
test
jno
fist
mov
cld
stos
jl
add
loope
test
jecxz
inc
in
adc
add
add
inc
out
stc
call
lock
adc
out
stc
inc
fild
lock
into
neg
pop
dec
mov
adc
xchg
icebp
pop
mov
loopne
je
dec
sti
icebp
test
test
shr
(bad)
cmp
imul
mov
jno
xor
popf
inc
cld
daa
push
leave
mov
or
add
xor
std
and
push
jle
pop
or
fild
push
aaa
jo
push
ret
cmp
imul
test
int3
jo
add
jo
call
jge
std
and
inc
inc
cdq
inc
cld
mov
cs
jne
neg
add
add
int
stc
(bad)
std
and
pushf
sub
mov
ja
adc
add
jmp
and
inc
call
mov
mov
pop
hlt
cmp
add
std
and
in
add
sub
add
mov
mov
sub
push
add
add
rol
fiadd
add
std
repz
add
jmp
pop
fs
ret
sub
cdq
jmp
mov
ss
shl
dec
test
jbe
(bad)
xchg
mov
mov
inc
sar
cli
mov
jmp
inc
push
(bad)
das
loopne
add
add
hlt
jne
xor
xor
push
pop
movs
stos
sbb
push
cmp
enter
mov
add
(bad)
aas
lods
mov
jp
cmc
or
movs
pop
jns
mov
add
and
fld
loope
std
mov
call
popf
push
sub
(bad)
movs
repz
fistp
add
add
push
loope
push
fimul
call
aad
add
add
push
push
call
add
adc
loopne
pop
cmp
add
inc
in
mov
ret
test
call
pop
test
(bad)
aam
cli
(bad)
jp
cmc
push
int3
sbb
movs
pop
jns
mov
add
in
fld
inc
sub
mov
cmp
inc
add
adc
push
mov
sbb
cwde
jmp
sub
inc
push
push
mov
adc
cmc
jmp
and
call
sahf
inc
cld
aaa
je
loop
test
les
add
fisttp
mov
shl
retf
jno
jno
push
inc
add
add
sub
enter
je
mov
add
call
daa
add
adc
fnstsw
test
test
shl
mov
dec
or
call
push
out
jmp
jmp
fild
mov
int3
cmps
or
or
icebp
test
jae
loop
add
push
mov
cli
(bad)
mov
js
jmp
mov
ins
or
add
sub
or
setne
xchg
aaa
add
aad
sbb
mov
push
call
rol
or
xor
stc
dec
mov
add
add
add
add
mov
stc
adc
and
call
dec
push
inc
mov
push
cmc
adc
xchg
ins
adc
je
jl
push
inc
and
jmp
jmp
enter
test
mov
call
mov
push
loopne
in
imul
pop
fld
add
add
add
jmp
dec
sbb
add
pushf
icebp
lock
xlat
call
mov
push
and
inc
mov
add
fs
not
adc
dec
ret
inc
shr
sub
call
push
add
xor
push
outs
div
in
inc
cld
aaa
push
leave
mov
cld
retf
or
adc
test
add
add
fiadd
in
pop
pop
dec
push
imul
in
fiadd
mov
ss
jmp
pop
xor
call
fisttp
mov
sbb
adc
cdq
ins
adc
jne
test
pushf
push
inc
fs
push
js
cli
jmp
leave
mov
mov
sub
add
add
xor
mov
pop
loopne
and
imul
jnp
add
mov
pop
dec
jnp
inc
adc
fsubr
inc
out
cli
mov
pop
sbb
inc
adc
clc
push
addr16
not
adc
push
ret
inc
nop
out
sub
(bad)
stc
daa
imul
div
je
inc
cld
cmps
inc
leave
mov
sub
inc
add
xor
fstp
add
repnz
push
out
add
push
int3
push
push
in
call
dec
dec
inc
mov
sbb
adc
sahf
ins
adc
je
jl
push
inc
hlt
cs
jmp
retf
mov
mov
call
add
jg
mov
pop
loopne
mov
imul
push
shl
mov
add
in
inc
movs
data16
adc
repz
repz
add
inc
cld
jns
mov
gs
jne
out
adc
jmp
dec
frstor
add
or
call
add
add
scas
mov
inc
push
out
add
fstp
mov
idiv
in
imul
stc
dec
jmp
pop
pop
or
cmp
pop
push
jae
test
push
addr16
popf
ret
inc
adc
jge
xlat
hlt
fild
gs
or
mov
add
dec
shl
popf
add
call
fisttp
jmp
int3
mov
inc
and
imul
fld
add
fadd
add
add
xor
or
test
jp
pop
ins
adc
cmp
loop
push
and
outs
adc
fiadd
add
add
xlat
pushf
ret
inc
and
enter
inc
movs
je
or
jge
xor
daa
cli
cmp
test
cld
fiadd
add
fsubr
outs
xor
cli
push
je
cmc
add
mov
ret
inc
lock
sub
dec
adc
push
cld
mov
call
pop
icebp
jmp
scas
repnz
xchg
inc
cld
add
add
out
mov
cmp
shl
mov
mov
mov
inc
mov
add
mov
pop
dec
push
xlat
pop
push
cld
push
clc
jmp
dec
call
pop
add
(bad)
fdivr
pop
in
adc
cmp
out
add
push
add
add
movs
jae
adc
jns
lock
loope
imul
fsubrp
cmp
jp
push
jle
pop
or
loope
add
add
cli
sbb
stc
dec
jmp
pop
pop
pop
mov
stc
jnp
cmp
add
push
in
push
xchg
jl
lock
and
inc
add
add
add
call
push
pop
imul
fs
std
imul
adc
jb
movlps
pop
int3
leave
hlt
std
repz
cld
pop
mov
daa
psubd
neg
dec
leave
stc
jmp
fiadd
(bad)
arpl
inc
lock
into
jge
mov
jmp
idiv
fcomip
or
add
add
add
jmp
add
adc
(bad)
enter
or
movs
loopne
pop
data16
pop
sbb
jl
cmp
in
fld
icebp
fwait
add
jne
pop
in
fild
mov
mov
jns
call
call
xchg
jmp
jmp
mov
mov
add
imul
enter
inc
hlt
jnp
and
gs
ja
add
dec
mov
test
mov
cli
mov
sbb
mov
add
cli
mov
cld
jmp
je
call
mov
dec
popa
leave
inc
add
add
je
and
pop
(bad)
stc
dec
mov
test
rol
add
mov
gs
call
ja
mov
(bad)
mov
add
push
cli
push
mov
and
call
(bad)
jmp
cmp
lea
imul
jae
jmp
mov
add
add
inc
cld
mov
neg
bound
div
sbb
icebp
sar
push
cwde
inc
cld
addr16
(bad)
popa
cmp
inc
pop
lds
fild
rcl
stc
inc
ja
pop
icebp
popa
inc
lea
cdq
inc
cld
and
pop
adc
nop
aaa
adc
lea
cwde
inc
cld
aam
xchg
(bad)
pusha
ret
inc
add
add
sar
add
inc
adc
test
popa
cli
push
push
test
and
int3
fsubr
test
cli
call
fild
cwde
inc
cld
les
fild
popa
imul
outs
dec
ffree
pusha
inc
lea
cdq
inc
cld
push
jo
pop
add
lea
add
add
pop
mov
fs
inc
cld
push
jbe
mov
popa
jbe
and
mov
movs
jne
pop
icebp
pusha
jle
stos
sbb
and
mov
push
lea
stc
call
jo
(bad)
imul
jne
fcom
add
call
xchg
inc
cld
pop
jne
pop
add
add
icebp
pop
push
(bad)
jmp
or
test
pop
cli
jmp
loope
adc
les
or
cli
push
pop
adc
inc
add
pop
std
adc
lea
cwde
inc
cld
aam
adc
test
gs
push
aad
shl
adc
call
add
add
cmp
stc
push
xchg
fdiv
cli
call
xor
call
gs
(bad)
jl
sub
add
add
mov
gs
(bad)
fdiv
ror
push
mov
cli
call
dec
add
xor
inc
shl
cld
dec
je
in
imul
push
mov
and
add
fcmovnb
inc
push
rol
add
push
pop
cwde
jge
xchg
mov
dec
jmp
mov
xor
mov
push
inc
mov
push
inc
nop
hlt
push
inc
cwde
in
inc
pushf
in
inc
movs
hlt
push
inc
xchg
hlt
push
inc
mov
push
inc
shl
cli
call
idiv
mov
add
or
stos
je
push
cmp
iret
sbb
(bad)
imul
pop
ret
push
pop
mov
xor
cmc
push
adc
inc
mov
into
add
add
push
push
ret
scas
push
xchg
sub
mov
stos
(bad)
hlt
and
dec
pop
std
jae
mov
jae
cli
call
xor
inc
inc
add
add
mov
std
adc
cmp
fs
(bad)
jmp
push
xchg
or
fs
(bad)
test
repnz
jmp
ds
add
xchg
pusha
arpl
call
pop
std
adc
dec
add
(bad)
shl
call
jo
adc
std
hlt
fld
lea
in
push
jno
outs
shl
add
add
in
or
mov
icebp
mov
inc
movs
or
inc
jo
loopne
xchg
push
inc
(bad)
lods
push
imul
dec
movs
fld
(bad)
cmp
je
jg
mov
nop
sub
mov
je
adc
ret
ja
(bad)
(bad)
test
test
arpl
ror
inc
add
add
mov
mov
or
enter
mov
or
push
gs
(bad)
fdiv
inc
pop
mov
jge
lahf
pop
scas
sbb
jg
mov
cld
xor
movs
fadd
mov
xor
pop
push
es
jmp
xlat
call
imul
dec
add
fsubr
in
push
add
add
addr16
add
stos
gs
out
add
adc
cld
adc
push
pop
icebp
mov
sbb
imul
push
test
cli
mov
outs
jmp
fstp
or
and
shl
lea
stc
call
xchg
pop
add
add
jno
cmp
mov
fild
fwait
sbb
lea
(bad)
stc
call
xchg
fld
push
inc
lea
repz
push
js
cld
sbb
hlt
pop
rcl
jmp
out
ret
enter
push
cli
dec
imul
je
test
add
push
or
push
std
adc
(bad)
imul
add
sti
jmp
nop
stc
call
jns
cld
test
cli
jmp
in
inc
push
cli
lea
aam
call
push
cli
call
jge
add
movs
popa
mov
add
call
out
or
bound
ret
push
jmp
push
add
add
loope
rcl
cli
hlt
sub
push
fdivr
repz
gs
fimul
inc
enter
and
inc
pushf
and
add
ins
icebp
cwde
mov
fld
add
test
loope
push
jle
mov
mov
mov
popa
cli
mov
cli
test
cli
nop
push
inc
cli
cwde
push
and
xchg
push
xor
pushf
push
inc
cli
mov
add
add
cli
lods
push
and
rcl
popa
push
push
dec
jmp
sub
mov
sub
hlt
add
dec
ins
add
test
popa
jne
adc
jae
push
cli
test
fild
cmp
fnstsw
fadd
cmp
inc
fld
rcl
sbb
jl
add
add
ror
imul
inc
cld
pop
mov
out
stc
jne
fcomp
add
push
fiadd
push
push
ret
inc
adc
jge
in
shl
push
fadd
jbe
xchg
add
adc
push
int3
add
push
pop
test
cli
lea
add
add
pop
mov
dec
mov
mov
dec
jmp
lea
stc
call
pop
mov
cli
call
push
fiadd
add
mov
mov
add
xchg
push
dec
ins
or
lea
cli
(bad)
jl
pop
std
add
mov
sub
add
push
push
std
ret
shl
push
dec
cli
jmp
and
sub
repz
mov
jmp
std
adc
mov
je
test
add
push
sub
call
pusha
mov
or
dec
cli
push
mov
cmp
(bad)
stc
dec
sub
pop
add
inc
add
add
aad
mov
nop
stc
inc
push
in
nop
dec
cmp
jae
jg
je
push
lea
jp
dec
push
mov
cmp
push
xchg
push
rcr
push
jmp
cdq
or
add
imul
call
mov
add
add
dec
mov
ss
mov
inc
nop
and
inc
cwde
hlt
xor
pushf
hlt
xor
movs
and
inc
xchg
and
inc
mov
xor
shl
xor
fadd
push
cli
jmp
popf
sbb
inc
aam
inc
or
dec
add
fs
cmp
(bad)
ror
call
sub
cmc
xor
add
add
mov
adc
inc
mov
popf
ror
lods
inc
sar
dec
fidivr
cmc
mov
push
fs
inc
mov
cmp
cmp
call
imul
xchg
rol
or
adc
movs
sar
imul
arpl
add
gs
(bad)
icebp
(bad)
push
push
movs
mov
or
add
and
(bad)
jmp
lock
call
jp
adc
mov
add
adc
adc
gs
mov
gs
dec
fdivrp
repz
stos
and
sub
mov
mov
add
add
shl
(bad)
sub
fadd
cld
jmp
jne
jae
jmp
lea
repz
call
nop
sti
jmp
lahf
or
daa
(bad)
test
fmul
into
shl
lea
popa
cli
jmp
sti
jmp
pop
mov
lds
add
add
cli
call
out
dec
add
fidivr
call
jg
pop
pop
pop
lea
xchg
pop
add
mov
pushf
arpl
jo
pop
in
cmp
repz
and
call
fsubrp
mov
(bad)
cli
push
stos
sbb
add
stos
cmp
test
call
add
cli
mov
pop
cli
push
mov
ins
push
pusha
add
sub
adc
movs
xor
sar
call
call
mul
dec
adc
push
add
add
mov
inc
jo
add
shl
icebp
in
add
jae
push
(bad)
jmp
add
add
adc
push
cdq
add
add
xor
(bad)
adc
clc
mov
add
cmp
mov
movs
out
inc
rcr
call
sub
pusha
ins
retf
sbb
lea
xor
sar
add
je
imul
cli
(bad)
jmp
cld
repz
push
add
add
sbb
dec
mov
hlt
das
pop
cld
mov
pop
mov
dec
js
and
or
pop
add
or
adc
xlat
mov
fsubr
cld
ret
call
add
shl
and
or
inc
push
add
add
loope
loope
repz
push
push
mov
mov
jmp
sub
(bad)
cld
rcl
mov
cmp
mov
mov
ror
(bad)
stc
arpl
(bad)
fldenv
xchg
mov
in
je
mov
mov
lea
add
add
sbb
out
imul
inc
je
mov
bound
icebp
call
stos
push
jmp
icebp
popa
push
push
push
movs
call
jns
ret
inc
adc
stc
xor
add
nop
push
movs
push
mov
pop
cwde
ret
inc
rcl
mov
mov
add
add
add
pushf
enter
cmp
xchg
rcr
dec
inc
add
scas
clc
add
mov
sub
es
mov
fisub
ror
mul
int3
fstp
repz
jmp
retf
inc
xor
adc
push
xlat
stc
inc
add
add
ja
inc
and
sti
into
mov
pop
dec
or
cmc
(bad)
repz
jmp
add
fiadd
add
loope
stc
xlat
push
push
pushf
jp
inc
xlat
mov
sbb
fsubr
fsub
push
dec
call
arpl
inc
shr
add
sub
push
dec
movs
loopne
fsub
sub
dec
lea
jmp
cli
mov
call
icebp
push
inc
push
xor
cmp
ret
jmp
sbb
xchg
les
dec
jne
std
jae
test
push
cli
lea
add
add
mov
call
push
loopne
movs
fadd
lea
stc
push
dec
mov
icebp
push
jbe
jl
mov
int3
cmps
inc
std
ror
pushf
adc
out
inc
lock
cld
into
arpl
push
mov
int
jmp
xchg
dec
and
sbb
add
fistp
inc
sub
sbb
add
add
add
fist
call
outs
sbb
mov
inc
jbe
ins
bound
xchg
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
fmul
mov
call
popa
ret
inc
rcr
call
call
loope
sbb
add
popa
mov
or
and
adc
ror
sbb
call
and
lea
stc
push
inc
mov
shl
lea
imul
pusha
push
lea
int3
stc
push
stc
jne
push
cld
mov
pusha
jbe
shr
test
push
inc
cld
push
add
iret
add
add
stos
jmp
shr
pop
add
xor
shl
inc
rcr
call
cmp
xchg
stc
push
mov
retf
daa
fiadd
push
mov
popa
jmp
push
mov
pop
ret
inc
add
cli
push
popa
xor
ret
pusha
ret
inc
shr
cli
(bad)
sub
add
add
aam
inc
add
cmp
sub
stc
call
pusha
cli
jmp
inc
cmps
xchg
pusha
jbe
mov
xor
repz
xchg
lock
add
test
jo
dec
inc
xor
mov
xor
imul
jmp
je
pusha
cli
push
add
add
mov
pop
push
(bad)
test
jne
jmp
add
call
pop
push
call
pop
or
call
push
push
fisttp
(bad)
jp
cld
adc
mov
mov
mov
sub
dec
std
ror
add
cwde
pop
cli
push
xor
pop
cli
push
jmp
call
popa
mov
loopne
pop
cli
push
cld
and
adc
inc
cld
jmp
xchg
sti
push
mov
mov
stc
inc
adc
test
rcr
test
pop
cli
push
inc
loope
jae
ret
inc
pop
loopne
pop
repnz
cli
lea
mov
inc
add
add
pop
cli
call
icebp
push
sbb
lea
(bad)
fadd
std
ret
aaa
lock
mov
pop
cli
(bad)
mov
pop
ror
dec
mov
pop
cli
call
mov
push
inc
xor
inc
mov
cmp
fadd
pop
imul
push
(bad)
sub
add
add
hlt
fcmovb
inc
js
add
in
pop
mov
xchg
pushf
pop
cli
mov
dec
add
dec
cwde
adc
in
inc
mov
hlt
push
inc
mov
push
inc
mov
push
inc
pushf
mov
inc
lods
mov
inc
aam
push
inc
mov
rcr
mov
cli
push
push
jl
sub
popf
je
add
add
cmp
push
lahf
clc
(bad)
imul
add
mov
push
pop
mov
sub
inc
hlt
xor
icebp
pop
repnz
sbb
push
lods
add
add
fldcw
in
add
into
dec
xchg
call
pop
cli
jmp
cld
adc
mov
xchg
pop
cli
call
icebp
pop
sbb
into
add
add
fadd
std
shr
int
xor
cmp
pop
cli
(bad)
jmp
push
xchg
add
pop
cli
(bad)
imul
jmp
pop
mov
cld
pop
push
std
adc
and
and
stc
push
aaa
pop
and
and
std
hlt
fadd
lea
stc
call
aaa
fsub
and
shr
add
and
call
les
stc
fisttp
inc
nop
(bad)
call
push
loope
aam
sub
add
mov
fdivr
aam
pop
movs
sub
adc
repz
mov
pushf
and
inc
pushf
(bad)
mov
(bad)
mov
(bad)
mov
add
add
inc
cmp
mov
(bad)
mov
(bad)
mov
(bad)
mov
mov
pop
mov
jge
out
stos
sbb
jg
xor
push
movs
fild
mov
jbe
pop
dec
popa
int
sub
call
imul
fild
mov
mul
add
add
and
out
clc
mov
xchg
stc
call
sbb
aaa
ret
dec
adc
mov
cld
out
push
std
add
and
and
mov
das
pop
and
and
fstp
or
popa
push
loope
xchg
and
inc
add
xchg
and
cli
lea
stc
call
or
imul
mov
clc
mov
movs
stc
inc
xor
lock
mov
stc
call
sbb
ss
(bad)
jmp
mov
jne
sbb
ss
repz
and
cli
jmp
dec
adc
jle
jmp
std
repz
adc
inc
rcr
pop
add
add
int3
inc
add
mov
int3
sbb
cld
jae
sub
sub
inc
movs
jl
jmp
cmps
call
jmp
ffree
inc
enter
sbb
fld
adc
dec
aam
rcl
nop
out
nop
jmp
cdq
nop
push
mov
cwde
push
loope
movs
push
rcr
inc
add
add
xor
hlt
jmp
ror
cmp
mov
jge
cwde
call
ja
sbb
jo
fadd
fldcw
inc
mov
xor
int
clc
imul
retf
call
jl
inc
movs
jns
jmp
sbb
cmp
stos
adc
add
aad
(bad)
int3
fdivp
(bad)
shr
pop
adc
sbb
sub
and
aad
imul
clc
mov
stos
stc
call
xor
int3
adc
stc
push
sbb
xor
push
lea
stc
call
mov
jne
sbb
inc
mov
loopne
mov
aam
cli
push
das
mov
and
push
cld
sbb
std
adc
ins
push
and
inc
lock
push
ds
cli
push
rcr
cld
adc
mov
mov
inc
nop
(bad)
clc
jmp
inc
mov
fild
add
fwait
test
and
add
imul
rol
add
inc
fadd
add
xor
shl
dec
pop
and
mov
xchg
inc
inc
mov
inc
nop
xchg
inc
push
mov
call
push
cli
push
sbb
mov
rol
fiadd
add
(bad)
add
add
add
xor
jno
repz
pushf
xchg
push
pop
clc
mov
xor
adc
stc
inc
sbb
cld
shl
cmp
icebp
and
lea
stc
inc
mov
jne
sbb
xor
xchg
and
les
and
push
das
mov
and
iret
jp
cld
sbb
xchg
mov
add
add
and
inc
and
inc
lock
call
push
icebp
pop
mov
int3
push
(bad)
cld
shl
mov
mov
inc
ror
inc
mov
fld
add
pop
test
xor
add
imul
add
in
pop
shl
and
dec
mov
inc
pop
mov
inc
add
add
mov
mov
mov
inc
pusha
mov
inc
cmp
mov
sbb
add
push
sbb
mov
rol
fadd
add
pushf
rol
add
fs
pushf
xchg
push
fwait
clc
mov
xor
retf
add
adc
stc
call
fiadd
jecxz
cmp
adc
imul
inc
cld
adc
dec
mov
loopne
mov
and
xchg
dec
jno
jle
push
cld
pop
mov
pop
add
fs
call
adc
inc
add
call
push
loope
mov
add
add
int3
ins
(bad)
cld
rol
mov
scas
rol
clc
push
inc
mov
fild
add
fwait
test
xor
add
imul
inc
rcr
add
push
pop
shl
adc
mov
mov
scas
mov
scas
mov
scas
mov
mov
inc
pop
mov
inc
pusha
mov
inc
inc
mov
inc
js
mov
add
add
mov
sub
xor
jmp
sbb
cmp
aam
retf
pop
out
add
add
iret
cwde
rol
add
xchg
adc
fimul
dec
leave
mov
mov
cli
pop
cld
and
aas
std
adc
cli
jmp
cld
and
add
add
test
or
popa
test
rcl
cli
push
mov
fs
adc
call
test
inc
cld
mov
gs
nop
adc
mov
clc
mov
pop
push
call
pop
popf
adc
bound
fadd
call
pop
fld
(bad)
jns
cmp
add
add
xor
rol
clc
jmp
inc
lods
xor
add
or
(bad)
cld
adc
adc
cwde
movs
popa
inc
mov
xor
inc
mov
pop
inc
mov
pop
inc
pushf
and
inc
lods
hlt
pop
inc
aam
pop
inc
mov
jae
cli
mov
inc
jmp
cmp
ret
clc
cmc
jge
ror
mov
or
add
add
jmp
and
add
pop
lods
adc
je
mov
cli
call
ja
mov
(bad)
imul
sti
push
je
or
xchg
(bad)
imul
cli
push
add
push
or
sbb
outs
sbb
inc
sar
cli
push
add
add
ds
lea
or
jmp
cld
add
movs
adc
fisttp
lods
je
cli
push
icebp
mov
pushf
sbb
add
test
fcmovnb
inc
test
inc
movs
add
add
sti
mov
adc
outs
sub
jmp
mov
cwde
push
add
add
mov
mov
mov
popa
movs
pushf
push
sbb
mov
inc
pop
xor
ror
jne
aaa
retf
or
les
inc
in
jmp
cwde
pop
add
aaa
(bad)
repnz
or
pop
mov
xchg
stc
inc
cmp
lock
lea
and
cmp
add
add
ror
(bad)
jmp
mov
jne
and
cmp
repz
les
stos
mov
fs
dec
adc
cld
and
repz
add
or
inc
rcr
(bad)
push
popa
sahf
mov
int3
pop
retf
cmp
jmp
xor
add
add
pushf
sbb
push
or
movs
fld
inc
inc
mov
push
movs
mov
sahf
lods
add
jne
adc
mov
inc
fs
inc
aam
xor
lock
mov
inc
mov
mov
test
inc
aam
mov
test
inc
pusha
test
mov
scas
mov
add
add
cli
jmp
cwde
call
addr16
push
popa
pop
ins
push
xchg
in
mov
cmc
jmp
pop
mov
(bad)
jmp
popf
sti
jmp
test
cli
push
rcl
sub
icebp
imul
out
add
inc
add
sti
inc
add
add
mov
cli
push
mov
mov
jmp
cld
repz
popf
adc
fcom
sub
call
dec
add
mov
inc
mov
inc
pushf
(bad)
add
imul
stc
inc
outs
add
clc
jmp
clc
sldt
add
mov
mov
nop
out
nop
(bad)
in
mov
push
lea
cmp
jns
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
ss
mov
adc
fmul
dec
adc
mov
hlt
add
add
add
cld
sub
fcom
neg
push
fisttp
jmp
call
repz
sub
pop
int3
ror
shl
inc
cld
inc
mov
xor
dec
call
mov
or
jmp
inc
add
add
stos
pop
adc
push
clc
jmp
mov
jmp
in
push
out
or
(bad)
fst
das
or
dec
loopne
popf
add
pop
cmp
or
cmp
add
push
hlt
das
(bad)
test
jle
(bad)
(bad)
inc
rcr
call
push
dec
out
pop
inc
add
add
ds
pop
sub
fs
les
clc
out
or
call
add
pop
lods
cdq
mov
imul
pop
push
add
inc
add
xchg
not
add
add
sbb
inc
rcr
jge
xchg
fild
xor
icebp
add
int
clc
or
add
mov
add
add
add
(bad)
fldenv
jmp
inc
push
scas
sub
xor
inc
add
mov
(bad)
shl
cld
jmp
call
ja
je
pushf
jo
inc
xor
loopne
cli
add
div
sbb
retf
(bad)
mov
or
push
scas
pop
push
scas
or
add
add
stos
pusha
loopne
pushf
clc
out
or
(bad)
mov
cli
pop
sub
add
cmp
add
push
hlt
das
loop
adc
jle
(bad)
fldenv
inc
lock
gs
cli
push
add
je
pop
cmp
xchg
pusha
pop
fild
push
dec
xor
repz
add
adc
imul
stc
call
xor
lea
stc
push
test
inc
cld
add
setp
add
(bad)
shl
mov
stc
inc
sbb
xor
rcl
test
fiadd
push
das
push
fcom
add
ret
inc
lock
sub
add
inc
call
imul
adc
fdivr
enter
pcmpeqb
add
push
imul
push
jl
add
xor
push
inc
pop
add
push
cmps
pusha
mov
dec
clc
out
xchg
cli
inc
sbb
loopne
pusha
add
loopne
add
add
mov
add
movs
adc
popf
dec
clc
mov
inc
loopne
mov
xchg
mov
sbb
fdivr
mov
inc
add
cmp
std
shl
mov
dec
adc
sbb
enter
nop
jg
les
ins
mov
cmp
jmp
jno
or
in
or
ficom
add
add
fadd
jl
scas
lahf
or
fsubr
loope
clc
mov
stc
call
das
enter
jge
xor
mov
inc
jo
call
cmp
adc
adc
jg
jne
test
leave
call
daa
mov
mov
sbb
call
das
int
shl
push
adc
add
add
test
pop
cmc
jmp
shl
add
idiv
mov
imul
add
imul
sti
call
daa
mov
sbb
clc
mov
stc
call
daa
lock
(bad)
hlt
add
je
add
push
or
add
add
xchg
scas
ret
into
call
sub
fld
into
int
mov
aaa
cmc
call
push
push
add
les
add
call
jnp
test
add
and
add
(bad)
mov
xor
call
inc
in
mov
ret
add
call
adc
cmc
(bad)
cmp
adc
in
mov
cli
(bad)
jmp
pop
cmc
(bad)
aas
retf
cmp
jne
adc
mov
jo
push
pop
mov
fcomp
clc
lds
xor
push
(bad)
leave
sbb
push
daa
fistp
mov
add
add
add
scas
shl
stc
push
jnp
mov
adc
stc
(bad)
mov
xor
adc
in
mov
ret
add
call
not
test
xchg
add
push
cmp
jmp
pop
cli
jmp
leave
add
jmp
mov
xchg
add
mov
push
cld
add
xor
fisttp
add
(bad)
stc
dec
ret
shr
cli
jmp
dec
cld
cmp
cli
inc
std
rep
mov
je
je
cli
dec
cld
cmp
xchg
call
pop
mov
xor
std
stc
push
or
xor
(bad)
sub
das
call
daa
jp
mov
sti
call
hlt
add
add
add
enter
and
xor
cmp
rol
sti
stc
lea
js
call
imul
lods
sti
(bad)
(bad)
jmp
push
mov
jmp
pop
or
push
inc
std
call
push
sar
call
std
ret
jmp
stc
push
mov
sti
ret
add
add
out
adc
daa
cli
push
popa
cmp
inc
cli
ret
mov
stc
push
popa
push
ins
inc
sti
cli
push
ret
mov
stc
sub
lea
(bad)
call
dec
loopne
ss
stc
mov
clc
jmp
ins
mov
stc
(bad)
test
cmp
add
dec
pop
push
inc
xor
inc
mov
adc
pop
or
lods
xchg
mov
and
mov
pushf
test
xchg
ds
loopne
add
repnz
enter
inc
fs
inc
mov
popa
lahf
nop
push
xor
movs
push
inc
lahf
test
and
pushf
push
inc
lahf
lods
push
and
add
and
loope
repz
call
sub
inc
push
push
icebp
mov
fiadd
push
adc
mov
je
in
adc
ret
mov
test
ss
xchg
cli
push
pop
inc
movs
jge
aad
ret
cld
jae
std
test
jmp
jae
fnstcw
int3
es
jae
test
jb
stc
push
and
inc
cld
stc
pop
push
mov
stc
adc
loope
mov
repz
push
mov
int3
stos
out
cld
rol
adc
loope
sar
cld
call
(bad)
fstp
sti
call
icebp
cli
rol
cld
dec
lea
add
add
fdivr
call
adc
icebp
scas
inc
add
stc
jmp
xor
ret
push
push
loop
sti
jmp
sbb
lea
call
ror
mov
call
fisttp
dec
mov
sub
add
int3
test
mov
je
je
cli
xchg
cld
inc
int3
imul
je
test
add
inc
std
adc
(bad)
imul
jmp
stos
stc
call
sbb
not
popf
or
cli
jmp
pop
daa
add
stc
push
(bad)
add
add
xchg
and
test
stos
stc
call
out
fstp
xor
inc
cld
cmps
div
cmp
jmp
dec
mov
movs
sbb
test
les
dec
mov
test
jmp
std
repz
pop
add
add
add
and
inc
rcr
push
popa
imul
xor
stc
push
and
inc
call
push
mov
and
test
repz
push
loope
mov
(bad)
test
add
jmp
adc
push
jo
fld
add
add
and
inc
sbb
mov
add
stc
push
mov
mov
cld
int3
mov
add
add
ins
push
and
xchg
scas
and
push
dec
fisttp
jmp
ins
mov
sbb
jmp
loope
inc
movs
jne
jmp
xlat
mov
jl
cdq
call
inc
push
inc
add
add
xchg
mov
repz
cli
(bad)
test
fdivrp
dec
je
call
je
jmp
cmp
push
pop
ret
inc
adc
call
push
mov
mov
hlt
push
mov
and
je
or
mov
repz
std
jmp
and
push
outs
hlt
jne
mov
cmps
inc
add
add
add
add
mov
push
add
xlat
and
add
dec
xchg
inc
imul
cmc
jmp
add
xor
dec
push
and
push
cmp
inc
or
pop
add
mov
cmp
xor
test
xlat
add
add
add
cld
mov
jge
nop
fadd
add
add
fmul
pop
inc
push
test
xlat
add
rol
push
push
test
fld
add
movs
scas
cld
jae
sbb
jmp
cmp
jmp
xlat
sbb
add
add
stc
jmp
jecxz
fdivr
add
add
fadd
inc
or
xor
dec
mov
add
xor
gs
fist
fcomp
mov
push
inc
daa
cli
push
sub
js
sbb
hlt
(bad)
jmp
(bad)
aaa
push
and
lea
mov
push
mov
mov
ret
add
add
mov
push
cli
mov
cmp
test
cmc
jmp
push
adc
push
dec
loope
sbb
push
cli
pop
sbb
add
mov
cld
adc
or
dec
mov
dec
ret
mov
push
jle
pop
adc
cli
sub
add
in
lods
and
fld
add
pusha
cmps
cld
ror
add
and
int3
xor
cld
jae
pop
add
and
pushf
cmp
add
sbb
call
daa
outs
test
mov
push
jge
and
inc
add
dec
sbb
call
add
add
mov
fadd
cwde
fsubr
fldcw
lds
sub
hlt
fadd
js
inc
push
mov
add
loop
xor
rol
and
sti
out
sub
mov
fadd
add
(bad)
add
out
sub
add
dec
call
mov
mov
mov
js
jmp
xlat
pop
and
adc
jge
lods
jnp
ins
je
and
adc
clc
push
jl
mov
add
and
lods
push
xchg
lods
and
loopne
add
fild
adc
push
jns
in
shl
sub
add
jo
mov
cmp
jmp
jl
or
jge
ret
sti
inc
fistp
and
test
fild
call
add
sbb
fild
push
icebp
bound
call
lods
test
loopne
add
cli
sbb
daa
fild
adc
dec
inc
mov
pop
sar
add
add
adc
hlt
cs
mov
loopne
sub
cli
(bad)
push
fimul
push
mov
adc
movs
fisub
and
mov
add
fs
call
icebp
pop
sbb
push
add
fiadd
xabort
sbb
je
adc
add
add
repz
data16
(bad)
js
cmp
xor
add
stc
dec
sti
jmp
push
sbb
pop
cdq
in
inc
dec
outs
div
pop
add
xor
push
pop
add
sbb
(bad)
push
fisttp
in
call
cmp
mov
idiv
movs
test
psubw
mov
push
add
movs
add
inc
lea
fcomp
fst
call
movs
bound
jl
add
je
jge
mov
add
movs
mov
and
fadd
add
add
jbe
xor
add
and
loopne
dec
adc
mov
mov
and
fild
add
adc
cmp
or
push
add
add
pop
test
fild
add
fadd
adc
fidiv
and
fild
add
fadd
adc
inc
call
cld
jecxz
inc
je
inc
and
and
or
add
or
dec
mov
nop
ret
mov
test
(bad)
cmc
push
loopne
cmp
cli
push
shl
add
and
fild
add
and
loope
add
adc
mov
or
loopne
mov
dec
call
outs
sbb
test
shl
in
loopne
push
or
mov
and
add
pushf
adc
nop
or
aaa
lock
cmp
mov
fwait
loopne
add
add
cmps
or
test
push
push
icebp
sahf
and
movs
adc
js
in
sbb
sub
cmps
gs
push
sbb
cmp
add
jne
repz
and
xchg
or
imul
loopne
cmp
cli
push
or
js
sbb
hlt
fimul
push
idiv
add
mov
in
add
movs
sub
test
(bad)
cmc
push
cli
sub
(bad)
call
and
leave
(bad)
call
fimul
jmp
ret
add
fcmovb
test
fdiv
push
loopne
(bad)
cli
cmp
cmp
cmp
mov
loopne
addr16
push
push
add
add
jno
and
movs
adc
inc
icebp
or
js
fidiv
sub
cmp
xor
loopne
and
cli
push
mov
pop
shl
push
and
xchg
sbb
jmp
movs
loopne
cmp
sbb
xabort
sbb
je
sbb
out
sar
push
mov
sub
test
add
add
mov
loopne
loope
cli
sub
dec
lea
inc
push
or
das
std
adc
leave
(bad)
test
and
and
sbb
cmp
sti
inc
or
cmp
and
loopne
add
fadd
sbb
push
and
xchg
xor
pushf
and
pushf
mov
std
xchg
arpl
je
mov
dec
call
stc
lahf
sti
jmp
add
sub
inc
push
fsub
loopne
add
cli
test
add
mov
pop
mov
cmp
and
jns
mov
addr16
push
and
or
mov
adc
dec
lea
pop
push
cmp
neg
add
fdiv
cld
rcr
or
sbb
add
add
or
add
add
jbe
xchg
and
sub
and
adc
jo
inc
push
and
sbb
mov
add
sub
sbb
or
inc
mov
push
and
xchg
add
dec
retf
adc
pop
inc
and
pop
mov
push
mov
and
movs
sbb
pusha
fiadd
add
movs
fild
add
add
and
inc
das
ret
mov
call
pop
cmps
sub
pop
cwde
or
push
sub
test
fadd
add
fiadd
sbb
fisubr
jmp
ins
jae
inc
les
inc
mov
inc
adc
xlat
mov
loopne
dec
or
push
and
cmp
dec
cs
add
add
mov
call
sub
push
(bad)
call
ficomp
mov
sub
pusha
mov
cmc
jmp
mov
push
popf
mov
and
or
loopne
or
cli
lea
ins
add
fucomp
inc
mov
mov
ret
add
add
mov
loopne
retf
and
push
push
fisttp
jmp
es
pusha
sbb
call
cmps
xchg
test
and
push
dec
fimul
jmp
mov
imul
pop
sbb
mov
and
add
add
hlt
fsub
cmp
sbb
add
in
jl
and
add
(bad)
sbb
pushf
or
idiv
movs
jp
test
in
push
ret
shl
jmp
call
pop
mov
out
push
and
and
clc
jg
shl
add
clc
add
add
add
xchg
pushf
iret
call
and
and
pop
or
push
and
pop
ror
in
add
hlt
pop
test
test
ins
jge
jge
and
int3
nop
jmp
ins
sbb
add
pusha
pop
add
jae
xchg
lahf
and
das
push
cli
je
and
adc
mov
add
add
ret
add
mov
cld
repz
(bad)
jns
xchg
ins
and
and
call
scas
mov
inc
pop
into
aaa
adc
mov
push
lock
adc
xlat
aaa
xchg
jmp
fistp
add
and
inc
or
sbb
and
add
movs
and
in
mov
stc
xlat
jae
dec
sub
inc
movs
sub
pushf
outs
jmp
sbb
in
ins
ficom
addr16
je
xchg
pusha
adc
fcom
xlat
psubsw
shl
shl
push
push
and
adc
add
sub
jmp
and
dec
call
add
add
aad
fld
iret
add
jmp
clc
mov
pop
or
mov
adc
movs
je
cmp
cmp
in
nop
and
adc
mov
add
sbb
stc
je
jne
repz
and
fadd
je
and
jo
in
add
add
push
add
popa
add
jae
pop
jne
fldcw
popf
or
and
and
lock
jbe
cmc
push
sub
fs
xchg
xlat
add
stc
push
or
js
sub
hlt
fsub
call
sti
xchg
test
fsub
call
enter
(bad)
mov
cli
push
dec
(bad)
lock
push
adc
in
xor
dec
and
adc
jmp
adc
dec
or
or
sub
adc
mov
fadd
call
je
inc
emms
fcom
adc
xchg
push
je
inc
fdiv
scas
unpcklps
mov
add
add
or
pop
mov
idiv
hlt
pop
xchg
jmp
and
or
jge
loopne
add
das
xor
jae
and
cmp
push
inc
add
fmul
jmp
fild
cdq
or
cli
inc
dec
sub
or
daa
and
dec
inc
je
adc
mov
clc
mov
retf
xor
sub
add
inc
(bad)
ror
add
call
lea
fist
mov
fsubrp
(bad)
and
pop
xor
cmp
inc
mov
(bad)
push
fisubr
call
aaa
sbb
push
push
sbb
sub
push
push
icebp
inc
and
or
scas
adc
push
push
add
add
test
fiadd
add
pop
sbb
es
scas
test
add
ficom
sub
cmps
fld
pop
pop
add
(bad)
mov
sbb
test
cdq
sub
rcl
inc
and
mov
mov
fiadd
add
jp
xchg
sub
xchg
int3
fild
clc
sub
movs
fld
in
cdq
fwait
push
cmp
add
add
inc
add
and
aas
adc
inc
enter
rol
inc
test
ins
and
out
and
out
and
add
jle
call
mov
cdq
add
mov
add
jle
dec
aad
inc
dec
jne
je
cwde
and
or
fdivrp
add
add
adc
clc
(bad)
fmul
fadd
hlt
fsubr
push
or
cli
xor
add
mov
mov
mov
mov
mov
out
jo
cli
mov
or
add
push
lea
mov
and
(bad)
dec
mov
adc
jo
add
add
sbb
(bad)
fdiv
add
(bad)
clc
sbb
pop
xchg
cmp
inc
and
add
pop
inc
push
idiv
jo
test
int3
adc
fadd
push
outs
scas
call
sub
jecxz
retf
add
(bad)
or
add
inc
mov
call
jle
call
and
cwde
sub
mov
add
je
add
int
add
das
and
out
lods
push
call
jmp
pop
jmp
inc
mov
call
mov
add
mov
jle
add
ret
jae
push
loopne
in
stc
push
cmp
mov
jg
add
fisub
call
sub
hlt
inc
and
outs
mov
call
pop
mov
(bad)
mov
sbb
mov
fild
add
(bad)
inc
enter
pop
mov
jle
out
call
push
fiadd
idiv
retf
jbe
rcr
jmp
mov
and
xor
jl
add
add
and
add
or
loopne
adc
mov
sbb
add
loope
add
fyl2x
stc
imul
add
dec
and
inc
hlt
sbb
and
pop
out
mov
pop
icebp
sub
mov
dec
(bad)
clc
jae
push
mov
mov
add
in
sbb
add
add
jne
add
call
fstp
dec
pop
add
sub
sub
sub
fld
es
aaa
mov
and
pop
out
or
(bad)
adc
sub
call
inc
push
sbb
jbe
clc
(bad)
sub
outs
test
cli
mov
or
jne
(bad)
mov
fwait
cmps
das
inc
enter
loopne
stc
dec
pop
pop
and
fsubr
mov
lods
push
cmp
lahf
or
pop
fild
add
pop
aad
fs
fcmovnbe
movs
stc
push
inc
push
imul
push
cmp
and
push
out
aaa
or
jg
add
add
sbb
mov
ret
add
in
loope
repz
inc
and
pop
cmp
add
stc
je
je
repz
push
mov
fild
call
aas
scas
jne
test
jl
and
add
xlat
pop
add
les
cmp
stc
je
ret
jge
mov
mov
call
neg
std
out
add
add
sub
scas
xchg
and
fwait
push
out
mov
mov
call
mov
std
out
mov
and
outs
pop
adc
dec
or
inc
or
inc
sbb
nop
mov
push
leave
mov
ret
sbb
add
out
add
and
add
add
ret
pop
sbb
pushf
jg
clc
sub
fiadd
xor
cdq
dec
cmps
out
inc
das
mov
stc
dec
inc
fs
adc
mov
clc
mov
fiadd
lea
fsubrp
in
loop
cli
lea
ficom
jo
sbb
hlt
fucomp
push
clc
mov
cmp
add
adc
fcom
push
frstor
jp
cmc
push
sbb
and
fld
sub
xchg
xchg
(bad)
fmul
arpl
mov
test
jo
push
dec
jg
stc
xor
mov
fld
add
xchg
add
add
addr16
jge
(bad)
add
lea
jge
jmp
dec
mov
test
xlat
add
stos
pop
sbb
cs
cmp
add
push
ror
mov
ret
jl
jmp
add
push
sbb
xor
xor
add
add
rol
cmc
jmp
sbb
push
sbb
push
ja
lods
and
xlat
add
int3
mov
cld
repz
sar
and
call
push
addr16
test
fadd
add
cli
sahf
cld
add
sbb
clc
inc
loopne
add
fld
into
pushf
clc
(bad)
fldenv
inc
in
lods
jmp
fcomp
add
add
add
(bad)
pop
fwait
mov
cmp
mov
jg
enter
pop
fadd
add
fld
mov
out
jo
adc
add
jle
pop
outs
aaa
adc
pop
std
cwde
lea
idiv
xor
out
test
rol
call
mov
(bad)
pop
sti
lahf
stc
je
iret
jge
dec
imul
add
add
fdivr
repz
loopne
leave
mov
ret
add
(bad)
jecxz
rcl
and
push
cmp
push
jae
and
aas
test
jg
(bad)
add
mov
icebp
sub
repz
mov
or
mov
jns
xchg
ins
and
dec
out
cwde
jle
mov
add
add
mov
jne
sub
stc
je
into
jge
dec
(bad)
stc
je
jp
repz
dec
adc
ja
movs
stc
mov
pop
ret
add
(bad)
fdivr
ret
push
dec
and
dec
sbb
jl
(bad)
call
jnp
mov
xchg
jecxz
xchg
push
leave
mov
add
add
retf
sbb
add
loope
add
stc
sub
push
adc
ret
mov
clc
sub
fld
das
and
popf
lods
out
jmp
sbb
push
or
inc
xor
imul
cmp
add
cs
repz
and
sub
stc
je
push
add
xchg
mov
test
mov
mov
mov
mov
pop
push
sbb
fs
rol
add
pop
push
cmp
je
int3
call
fistp
push
mov
pop
(bad)
dec
movs
push
arpl
xlat
add
add
add
xor
ja
dec
fld
add
fwait
ret
inc
and
les
hlt
fild
cmp
cmp
sub
and
and
fiadd
add
add
in
and
sbb
test
and
add
cdq
xchg
xchg
adc
or
inc
test
add
add
add
int3
movs
lahf
cld
shl
and
loopne
add
and
fiadd
add
push
or
repz
test
fiadd
add
cmp
lea
fucomip
and
mov
xchg
jmp
fiadd
psrlq
daa
stc
adc
das
dec
jl
call
add
add
sub
(bad)
sti
sub
push
(bad)
inc
mov
rcl
sub
mov
add
clc
push
pop
(bad)
jmp
jmp
movups
sub
call
push
mov
sbb
push
pushf
fiadd
gs
and
fld
add
fiadd
mov
cmp
fnstsw
add
add
enter
in
sti
mov
mov
fs
fucomp
mov
adc
mov
mov
dec
mov
fucomp
or
loopne
lea
cmp
push
push
sbb
cmps
fld
add
movs
call
sub
push
lea
out
add
add
addr16
add
add
jbe
pusha
sub
cmc
jmp
loopne
xor
cli
pop
pop
sub
dec
dec
sbb
cli
push
cmps
popa
inc
and
add
cmps
lock
push
popa
xchg
and
int3
dec
xchg
cld
shl
and
loope
add
inc
pusha
add
cli
push
xor
sbb
mov
add
scas
mov
inc
add
add
cmps
push
lea
inc
je
stos
arpl
add
jg
add
rcr
pop
jne
enter
dec
add
add
jl
stc
jmp
and
mov
xor
ret
cwde
cmc
jmp
cli
sub
push
(bad)
push
fisttp
call
sbb
add
add
inc
cmp
push
hlt
jmp
das
mov
loopne
dec
pop
cli
push
neg
cld
neg
mov
sbb
jmp
sbb
jne
add
cld
mov
mov
je
lods
and
loopne
add
ret
push
and
movs
mov
add
cmp
test
add
xor
inc
and
xor
jmp
or
or
repz
mov
and
js
or
loopne
(bad)
push
(bad)
out
scas
hlt
push
movs
add
push
sbb
or
sti
or
xchg
and
and
inc
jl
mov
lea
inc
pop
call
mov
add
add
mov
std
repz
and
cmp
fs
push
cmps
aad
and
fld
add
ins
mov
fimul
jmp
fsub
movs
(bad)
cmp
js
rol
clc
push
icebp
out
lods
hlt
(bad)
mov
add
loop
xor
jae
jbe
add
add
mov
inc
pusha
test
pop
sbb
jl
pop
mov
and
loopne
add
or
ja
inc
and
icebp
cmp
add
push
loope
and
sbb
mov
lea
ins
cmc
jmp
fld
jmp
jo
inc
add
add
lock
lahf
rol
ins
mov
clc
mov
fs
fsubr
aaa
mov
cli
mov
mov
dec
(bad)
sub
movs
fadd
add
add
pop
sbb
test
cmc
push
xchg
add
cmp
in
inc
add
and
fld
add
cld
rol
add
add
add
les
ret
sbb
push
call
pop
jnp
mov
loopne
pop
or
push
cmps
pop
inc
and
lock
movs
rol
push
push
jno
and
int3
(bad)
call
fild
add
cmp
movs
fucomip
movs
xor
cli
push
inc
retf
sbb
movs
fild
call
add
add
out
cwde
push
lea
inc
je
sub
dec
fild
adc
out
clc
jmp
xchg
and
jne
enter
dec
add
adc
sbb
jmp
add
pop
cmp
and
fiadd
add
cs
daa
add
sub
inc
add
ficomp
call
sub
add
add
inc
cmp
mov
hlt
call
sub
loopne
inc
or
push
out
ins
and
out
push
sahf
nop
add
enter
je
push
push
loope
sbb
fiadd
call
dec
jb
inc
je
lods
and
fld
add
ret
and
je
jl
jl
add
sbb
sub
add
and
inc
and
sub
sbb
sbb
sub
call
pop
mov
and
jo
or
fcom
push
fisttp
jmp
cdq
add
push
sbb
sbb
jne
(bad)
xchg
es
push
and
xchg
cld
repz
inc
(bad)
sar
call
stos
sub
je
add
add
and
icebp
add
and
cmp
xor
stc
push
cmps
shr
sbb
fwait
cld
add
mov
fisttp
jmp
jle
movs
sar
pop
sub
test
nop
cmc
push
jecxz
add
hlt
mov
or
mov
and
fld
add
lock
or
add
add
cmp
popf
sbb
dec
push
sbb
pop
mov
(bad)
cld
repz
mov
and
fld
add
ror
add
push
ja
inc
and
hlt
shl
xchg
and
sbb
xchg
cld
add
jo
in
arpl
jmp
fild
call
jo
inc
add
add
repz
rol
ins
jnp
clc
mov
fs
fucomi
mov
idiv
mov
mov
dec
(bad)
sub
inc
add
call
(bad)
loopne
pop
push
out
adc
test
cmc
jmp
adc
cli
cmp
dec
lea
push
inc
add
and
(bad)
add
pop
lock
add
add
add
and
ret
(bad)
cmc
push
loopne
push
add
pop
jnp
mov
loopne
push
idiv
push
aaa
mov
add
push
inc
mov
mov
pop
test
fadd
add
inc
lea
pusha
add
cli
push
and
sbb
movs
fiadd
call
add
add
out
cdq
push
lea
pop
sbb
and
cs
add
loope
and
movs
iret
enter
dec
add
and
xchg
push
stc
push
sbb
jl
add
sub
test
test
push
cmp
fbstp
dec
(bad)
js
inc
add
fldcw
call
sub
add
add
cmp
call
sti
mov
loopne
push
cmc
stc
push
out
ins
and
lock
fwait
adc
mov
cmc
push
push
add
add
hlt
pop
cmc
dec
inc
fs
lods
and
fiadd
add
mov
push
ror
ins
fadd
add
add
cld
push
arpl
add
add
and
inc
and
sub
sub
sbb
out
add
fadd
inc
pop
mov
and
jo
or
fcom
cmp
add
hlt
jmp
pushf
add
jp
sbb
sub
sti
or
adc
push
push
icebp
xchg
and
mov
inc
lea
mov
mov
add
or
cli
xor
stc
push
ja
lods
and
xlat
add
or
mov
adc
mov
fmul
push
out
mov
xor
cmp
pop
xor
test
mov
push
and
jmp
out
arpl
fisttp
mov
and
fild
add
out
or
add
add
das
mov
pusha
fcomp
retf
sbb
ja
add
fcom
cld
rcr
or
or
test
add
push
out
or
add
cmps
les
out
mov
mov
push
cwde
cld
adc
inc
lea
push
cmc
push
sbb
neg
add
cmp
idiv
add
add
hlt
out
call
clc
mov
add
stc
mov
mov
dec
(bad)
cmp
add
call
lea
cmp
push
out
pop
ret
test
test
jmp
lea
sub
dec
lea
inc
inc
add
add
push
out
into
add
add
adc
jbe
xor
ret
mov
jmp
loopne
sub
stc
pop
stos
sub
dec
enter
xchg
add
push
aaa
rol
call
push
push
popa
jns
js
int3
(bad)
cld
sbb
fiadd
add
inc
lea
pusha
add
cli
call
hlt
rol
in
cli
repnz
add
add
shr
push
inc
test
sbb
push
jmp
pop
adc
push
push
mov
and
dec
cmp
test
cmc
push
loopne
add
cli
sub
dec
(bad)
test
inc
add
fdiv
call
dec
test
and
call
sbb
loopne
xor
stc
xor
cmp
add
add
mov
stc
push
imul
and
not
cdq
cmp
adc
and
movs
fadd
test
inc
add
xchg
cwde
cld
rcl
add
fild
add
adc
out
mov
sbb
cmp
add
xor
push
call
cmps
imul
neg
add
popf
add
aas
pusha
add
fucomi
xchg
(bad)
out
lea
adc
in
call
(bad)
cmp
cmp
mov
add
sbb
pop
mov
add
movs
(bad)
clc
and
je
mov
mov
test
adc
push
jnp
cld
stc
mov
add
add
fisttp
mov
adc
and
mov
repz
pushf
dec
cmp
jmp
lods
and
fild
add
jge
lods
fild
add
sbb
mov
xor
mov
xor
xor
daa
test
loopne
add
fucomip
cmp
xor
cmp
add
add
xor
add
add
loope
and
fadd
(bad)
je
call
lea
fimul
test
cmc
jmp
loopne
adc
stc
mov
push
test
clc
push
mov
(bad)
push
fnstcw
call
add
add
ja
add
hlt
push
cmp
test
sub
push
stc
sub
cld
cmp
clc
dec
inc
pop
sbb
push
push
sbb
aas
mov
mov
repz
mov
jmp
fild
add
pop
sbb
inc
int3
dec
test
repz
int
addr16
mov
add
add
pop
xchg
adc
push
push
mov
(bad)
xchg
cld
add
pop
call
cmp
loopne
pop
cld
stc
push
imul
and
fild
add
sbb
cmp
ins
and
lock
int
in
inc
enter
adc
stc
dec
fadd
je
call
mov
add
add
xor
je
dec
cmp
or
imul
add
hlt
jmp
adc
je
test
fiadd
add
add
adc
aam
and
push
dec
sub
out
add
add
or
call
es
and
xor
add
add
sbb
call
fisttp
ret
pop
cmc
push
pop
shl
stc
push
fmul
sar
push
dec
rcl
cmp
inc
fs
stc
adc
cmps
div
xor
loope
mov
jnp
push
cld
and
jg
cld
adc
push
cmp
inc
add
add
neg
add
aas
inc
call
xchg
mov
fiadd
cmp
dec
add
stc
pop
cmp
push
sbb
inc
mov
aaa
dec
add
push
call
std
adc
(bad)
jg
sbb
push
mov
xor
fs
test
add
add
adc
push
loopne
xchg
sti
stc
push
mov
sbb
(bad)
test
inc
add
inc
call
popa
push
sbb
push
popa
pop
sbb
push
inc
pop
sbb
push
stos
pop
sbb
inc
int3
mov
mov
mov
gs
mov
jl
in
add
add
add
jmp
push
and
loope
sbb
call
stos
mov
jmp
fwait
adc
push
push
mov
sbb
call
jnp
test
fild
add
pop
sbb
mov
add
or
sbb
xor
jl
sub
add
xor
mov
add
add
and
push
pop
nop
ret
sbb
push
stc
pop
aas
or
enter
movs
adc
inc
retf
mov
add
sub
fadd
dec
int3
pop
sbb
lea
ret
stos
mov
mov
test
cmp
xor
inc
push
add
add
addr16
ins
and
hlt
rcl
sti
add
hlt
mov
test
pop
jecxz
aam
sbb
push
pop
inc
test
adc
jmp
outs
loopne
push
(bad)
add
add
out
mov
add
and
sbb
fild
push
add
add
movs
repz
shl
jne
pusha
jno
push
sub
add
cmc
test
repz
mov
fild
(bad)
test
inc
add
inc
call
ja
loopne
test
outs
not
add
hlt
repnz
or
cmc
push
clc
(bad)
call
add
add
hlt
jmp
and
movs
mov
push
and
fwait
jl
xor
add
mov
add
ficomp
and
jne
adc
dec
push
adc
ja
test
jecxz
cmp
adc
stc
push
mov
dec
lea
(bad)
test
sbb
jl
mov
add
add
add
cmp
pop
xlat
shl
pop
inc
sub
add
mov
fs
jecxz
cmp
call
daa
int
sub
pop
call
out
test
in
push
push
(bad)
add
and
fadd
add
jecxz
loopne
jle
mov
add
add
push
push
sbb
mov
or
push
sbb
push
je
jge
mov
add
movs
call
dec
lock
mov
lock
or
fcom
push
fcom
cmp
add
hlt
jmp
pushf
add
xor
add
sbb
push
add
add
mov
fadd
pop
fmul
mov
or
pop
sbb
pop
fist
and
fild
jmp
push
dec
xlat
mov
lock
xchg
add
and
(bad)
fdivr
rol
fsubr
shl
stc
push
fwait
lods
and
fild
add
sahf
xchg
ret
outs
push
lea
test
in
ret
add
add
sub
push
stc
call
sbb
mov
mov
lods
and
loopne
add
cld
adc
push
icebp
mov
add
call
fistp
dec
sbb
push
int3
sahf
xor
outs
push
(bad)
fcomp
xor
xor
ret
sub
jmp
loopne
mov
stc
call
cmp
add
add
cmp
arpl
add
pop
sbb
in
in
mov
fiadd
pusha
pop
movs
jg
or
dec
push
and
shl
mov
shr
scas
jns
mov
cmp
add
stc
mov
xor
fs
jl
mov
add
add
inc
and
jo
sar
add
ffree
test
sub
jmp
loopne
mov
stc
cmp
fimul
test
add
mov
fld
lea
ds
call
inc
hlt
ins
mov
dec
(bad)
push
fstp
(bad)
hlt
push
stc
add
jl
xchg
and
fld
add
add
add
sbb
mov
add
mov
(bad)
adc
lock
ffree
test
and
jmp
or
pop
test
idiv
fadd
add
xlat
nop
lock
inc
push
bound
add
xchg
adc
push
push
mov
add
xchg
lock
inc
push
add
add
popa
sbb
inc
int3
cs
cld
shl
lea
inc
pop
(bad)
push
fcom
jb
hlt
(bad)
aas
cmc
mov
loopne
aad
add
fs
push
and
jl
and
add
pop
aam
(bad)
ror
jne
jo
inc
or
inc
test
fcom
mov
fcomp
add
add
pop
mov
jmp
jno
(bad)
rol
and
ret
js
push
pop
loopne
pop
int3
stc
push
cmp
and
loopne
add
mov
cld
shr
lea
pushf
add
fucomi
sub
push
sbb
and
mov
add
pop
fdiv
nop
retf
enter
movs
imul
gs
add
add
and
jge
in
add
pop
imul
je
ret
sbb
jmp
mov
out
cmp
pop
jmp
loope
add
pop
sbb
ins
or
mov
add
fiadd
call
aaa
push
test
js
jmp
jg
pop
cmp
stc
lea
add
add
pop
add
idiv
movs
shl
lea
test
movs
fcmovb
test
push
cmc
push
sbb
(bad)
call
ficom
clc
inc
inc
add
call
sub
aaa
fiadd
outs
mov
sbb
fiadd
adc
fiadd
jae
mov
and
loopne
add
add
add
and
loopne
add
xchg
cld
repz
and
fiadd
add
add
hlt
mov
and
fild
add
sbb
jo
lods
and
neg
clc
sbb
test
pop
sbb
outs
fadd
into
je
pusha
in
out
int3
jg
add
add
or
pusha
pop
pop
push
clc
out
mov
dec
sbb
push
pop
mov
fcomp
add
cmp
and
jge
popf
jl
inc
jl
inc
aam
adc
in
add
lods
hlt
dec
inc
in
test
fild
add
sbb
jno
dec
xchg
cld
xchg
mov
push
xor
add
add
mov
add
fs
push
icebp
arpl
push
sub
fadd
jb
mov
mov
sub
and
xor
sahf
jl
ins
fld
add
in
jmp
inc
lea
fsubr
aad
retf
stc
push
cmps
pop
test
fadd
add
ror
add
add
ffreep
test
jo
jmp
push
loopne
xor
stc
cmp
push
add
hlt
sub
mov
pop
call
loop
loopne
and
mov
cmp
add
sar
loop
(bad)
clc
cmp
(bad)
call
fist
mov
fild
push
stc
inc
add
add
push
push
mov
sbb
xor
add
popf
xor
faddp
test
jbe
jmp
dec
loopne
js
stc
push
inc
push
and
mov
dec
loopne
stc
xlat
mov
cwde
jl
call
shl
xchg
nop
loopne
in
lahf
sbb
mov
inc
sub
je
ret
sbb
inc
add
add
pop
cli
retf
stc
push
rcr
fiadd
(bad)
call
fidiv
cmp
push
lea
ficom
test
mov
and
push
lea
fst
push
fnstsw
pop
jl
push
sbb
hlt
fld
push
popa
mov
nop
in
add
test
add
mov
add
dec
fild
add
iret
addr16
stc
push
mov
jmp
std
loopne
stc
xor
imul
mov
fld
call
cmps
push
add
and
bound
mov
sbb
xor
add
lods
hlt
push
mov
or
push
aam
(bad)
lock
push
popa
mov
hlt
fadd
call
imul
or
test
jo
push
stc
push
xor
mov
cld
xchg
push
dec
(bad)
clc
cmp
call
fsubr
sbb
stc
push
fwait
add
jnp
inc
and
add
add
jl
call
pop
sbb
outs
sbb
xchg
add
or
fmul
and
sbb
cmp
mov
and
fadd
add
jl
xor
add
push
rol
(bad)
loopne
push
(bad)
lock
mov
add
add
ins
xchg
and
repz
fnstcw
add
add
mov
inc
add
and
fnstcw
fadd
jbe
dec
add
add
dec
add
xchg
shl
ret
sbb
push
jne
or
mov
mov
and
fadd
add
fdivr
adc
add
xchg
fiadd
add
and
call
fsubr
nop
nop
jecxz
xor
sbb
inc
add
add
or
add
lock
idiv
cmp
add
sub
enter
sti
cmps
lods
and
fild
add
jl
in
add
adc
add
cli
sbb
pop
add
std
cmps
imul
fs
mov
in
pop
sbb
push
xor
lahf
and
add
add
jns
rol
fiadd
add
jo
cld
add
stc
inc
ja
cmp
sub
add
dec
add
add
dec
add
rol
test
sbb
jmp
add
adc
add
jl
sar
adc
add
fadd
add
fs
add
add
je
and
fld1
enter
xor
sbb
inc
or
test
or
jne
pop
inc
jmp
and
fld
add
addr16
add
jl
mov
add
arpl
add
ficomp
and
in
pop
or
mov
and
fadd
add
pop
and
pop
aas
push
add
add
sub
jmp
mov
and
xlat
add
imul
jmp
xlat
cmc
push
loope
jecxz
push
dec
hlt
fsubr
pop
sbb
cmp
sbb
outs
sbb
jle
adc
stc
inc
aad
fld
and
add
stc
add
add
add
clc
inc
add
sar
sub
gs
hlt
inc
js
in
pop
add
sub
mov
add
js
(bad)
jae
mov
je
movs
inc
and
jo
mov
cmp
lock
jmp
xchg
shl
push
and
test
cmp
or
mov
jae
add
jo
and
add
add
imul
push
or
add
sub
xor
inc
add
ins
jmp
and
sbb
pop
xor
add
push
cdq
inc
add
ins
jmp
loopne
clc
push
xor
call
sub
jl
inc
fild
add
mov
adc
cmp
jae
sbb
add
mov
cmp
shl
rol
mov
add
sbb
stc
dec
inc
lea
faddp
test
cmc
push
jmp
push
jnp
test
fiadd
add
jl
js
add
fsubr
cld
ret
mov
and
fiadd
add
add
add
fld
ins
int3
cmp
lea
or
movs
fucomp
jae
loope
push
(bad)
add
jl
jg
add
loopne
pusha
add
push
jecxz
stc
push
stos
mov
and
fiadd
add
test
add
jg
repz
add
imul
add
xor
mov
add
add
xor
push
lea
(bad)
lock
dec
out
add
ret
pusha
les
push
test
loope
add
stc
test
mov
fild
add
push
lea
xchg
add
cmc
push
(bad)
(bad)
push
mov
push
push
add
add
cmps
fst
inc
out
add
fmul
(bad)
push
fadd
(bad)
push
fild
call
rcl
mov
add
mov
sbb
add
fild
mov
xor
adc
ficom
add
pop
(bad)
push
fild
call
inc
add
add
movs
fild
lea
hlt
cmp
test
pop
and
ja
add
mov
push
ret
stc
sub
push
push
loope
and
xor
pop
and
daa
fild
mov
les
pop
and
daa
fild
mov
and
xor
hlt
fiadd
add
add
in
mov
push
pushf
mov
shl
stc
push
sub
clc
push
inc
push
inc
movs
sbb
pushf
add
(bad)
clc
repz
(bad)
sub
dec
add
cld
dec
mov
fs
mov
cmp
add
int3
ficom
and
loopne
add
dec
and
xor
add
add
fidivr
popa
loop
add
push
and
and
repz
add
fnstcw
mov
sub
in
push
lea
jl
hlt
fld1
mov
stc
push
sti
adc
bound
sahf
xchg
call
cmp
std
ins
add
sbb
and
xchg
add
add
je
add
test
xor
(bad)
call
(bad)
and
mov
pusha
sahf
add
je
stc
jmp
dec
and
and
cld
or
xor
call
lea
fst
js
cmp
hlt
fcom
jmp
fadd
xchg
ja
and
out
add
add
add
pop
push
and
mov
add
dec
test
fiadd
add
dec
mov
fiadd
add
test
loopne
add
test
fiadd
add
add
cmp
ja
add
adc
neg
ret
repz
mov
es
test
dec
add
add
add
xchg
retf
(bad)
js
je
ja
sbb
fcom
and
mov
or
fcomp
dec
mov
sti
cld
add
fild
je
pop
in
sbb
sub
enter
mov
sub
(bad)
aas
aas
or
movs
mov
push
(bad)
lock
call
fist
clc
cli
cld
add
add
add
(bad)
call
fild
push
dec
mov
xlat
add
lods
pop
and
xor
add
test
dec
add
xchg
(bad)
push
cld
(bad)
mov
fiadd
je
lea
push
or
or
push
cmc
jmp
stc
pop
add
add
jmp
mov
sbb
in
fmul
and
inc
add
lods
mov
sar
pop
adc
or
fs
or
fdivrp
xor
repz
push
pop
stc
push
and
add
call
hlt
and
add
cdq
add
stc
popf
xchg
add
in
mov
fld
add
mov
test
fild
add
jecxz
cld
jae
push
lea
adc
movs
fucomp
jae
and
push
ficom
and
fadd
add
and
ja
add
repz
or
sbb
push
loope
sbb
je
test
fiadd
add
add
sbb
add
and
inc
mov
pusha
stc
inc
mov
and
js
dec
add
fadd
jmp
fnsave
or
cmc
jge
dec
je
in
pop
jl
(bad)
je
popa
pop
and
movs
fadd
push
pushf
sti
and
cmp
mov
add
push
mov
clc
(bad)
add
add
add
mov
cmp
call
sbb
inc
in
call
test
and
xor
push
call
dec
push
lock
mov
pop
add
imul
fadd
call
(bad)
and
pusha
cld
mov
in
rol
add
hlt
xor
shl
mov
push
add
add
jp
and
add
call
pushf
add
test
mov
cdq
in
sub
mov
rol
mov
ret
scas
sbb
out
and
call
mov
dec
aaa
adc
cdq
adc
mov
add
or
add
pop
mov
and
stc
je
add
add
jge
add
ret
cld
repz
call
and
push
test
fadd
add
push
(bad)
jae
test
fadd
add
sbb
inc
add
push
test
fild
add
das
push
mov
and
stc
push
add
fiadd
xabort
dec
add
call
sbb
(bad)
jnp
test
and
push
sahf
(bad)
push
test
xlat
add
mov
and
stc
inc
or
jge
fdiv
ror
pop
mov
ins
bound
fyl2x
stc
mov
push
dec
call
fiadd
sub
add
add
scas
sbb
in
sub
(bad)
cmp
adc
sub
adc
out
stc
call
bound
mov
loope
inc
fs
test
fiadd
add
sbb
or
loopne
add
sbb
mov
add
and
fld
add
and
fld
add
call
sub
add
js
cmp
hlt
fmul
jmp
push
and
mov
add
outs
dec
cld
(bad)
sti
mov
mov
cld
lods
add
cmc
jmp
stc
push
repz
test
xchg
int3
fistp
fld
pop
add
test
cdq
idiv
xor
mov
add
add
add
inc
fadd
add
cmps
jg
adc
and
fiadd
add
int3
jmp
loopne
add
jge
idiv
hlt
js
stc
xlat
ss
cdq
xchg
add
inc
add
ror
fbstp
xchg
scas
call
xabort
cmp
je
(bad)
mov
sti
dec
or
clc
cli
jl
je
push
call
out
or
add
idiv
and
test
fiadd
add
adc
and
fild
add
mov
repz
add
fiadd
(bad)
js
dec
add
fimul
inc
ret
add
add
add
iret
fiadd
mov
lea
out
inc
mov
adc
call
pop
and
movs
fiadd
cmp
arpl
fiadd
call
icebp
pop
and
jne
add
pop
and
fiadd
push
movs
push
clc
mov
adc
and
cmc
push
loopne
add
stc
pop
jnp
test
fucomp
fwait
imul
push
pop
fisttp
push
push
test
fild
add
test
into
fiadd
push
jae
cmp
rcr
add
movs
fisttp
mov
stc
test
dec
cmp
fld
mov
inc
mov
call
jno
stc
call
xor
fimul
call
aad
and
test
inc
xor
cwde
or
add
inc
add
out
xchg
test
jne
jmp
inc
hlt
fiadd
add
xor
cmp
or
xor
xor
xchg
call
push
stc
push
sti
or
sub
aaa
add
add
add
mov
adc
test
dec
jmp
mov
push
test
xor
jmp
mov
or
idiv
and
ret
mov
loopne
and
stc
pop
push
sub
ja
mov
loope
add
fs
out
add
ret
scas
jne
add
add
lock
xrelease
cmp
and
inc
add
push
cmp
xor
jae
jne
les
cmp
cdq
xchg
or
or
fsub
sahf
add
mov
xor
cwde
ror
jne
sbb
test
add
mov
adc
lods
or
mov
xor
push
cmp
add
add
add
sub
push
ret
xchg
mov
dec
fild
add
out
aam
sub
lods
pusha
loop
add
pop
and
cmc
fiadd
call
push
xchg
and
add
hlt
aaa
push
adc
in
pop
push
and
jmp
(bad)
hlt
add
and
or
xor
rol
add
add
sbb
add
inc
add
lock
ficom
add
cmp
push
dec
clc
jmp
push
push
mov
push
inc
xor
push
(bad)
cmp
jg
fadd
push
or
cmp
popf
add
paddusw
and
mov
fld
pop
mov
inc
add
add
idiv
mov
test
fiadd
add
cmc
cmp
and
xchg
cmp
test
inc
add
(bad)
pop
sbb
jg
or
add
arpl
add
stc
je
in
repz
adc
mov
sbb
add
inc
add
add
add
fdiv
stc
imul
add
ret
xchg
sbb
outs
or
je
shr
movs
or
mov
sar
nop
mov
add
call
(bad)
sub
cmp
je
mov
or
call
fcom
adc
jmp
and
adc
add
sbb
xor
test
fld
add
aaa
fcom
xor
fiadd
add
inc
test
add
and
in
add
push
fistp
call
mov
xchg
fwait
sbb
das
push
loopne
je
stc
mov
adc
cwde
adc
or
add
sbb
das
inc
add
add
enter
xor
stc
call
dec
fld
test
fbld
dec
idiv
sar
adc
add
stc
mov
fild
lea
fucomip
xor
add
lea
ficom
push
fisubr
loop
add
stos
movs
cld
rcr
add
add
hlt
sbb
xchg
das
in
jmp
add
push
fisttp
push
push
push
xchg
mov
fiadd
add
fiadd
test
es
rol
jmp
xchg
cmp
mov
xchg
loopne
call
adc
loopne
mov
add
hlt
sbb
sub
add
ins
dec
and
neg
add
pop
and
in
add
in
add
stos
pop
and
out
add
sbb
pushf
call
and
add
sub
pop
pop
add
fst
mov
ds
sub
sbb
add
(bad)
pop
add
add
retf
add
xor
fnsave
or
push
jge
jmp
mov
scas
pushf
cld
mov
mov
jg
fsub
jg
enter
mov
stc
mov
xchg
aaa
add
aam
and
pushf
sbb
imul
sbb
fucomi
inc
push
add
mov
mov
add
call
xchg
jae
enter
nop
add
clc
and
jne
add
mov
inc
and
fadd
add
ja
or
fs
sbb
fs
(bad)
enter
xor
call
(bad)
fdivr
call
pop
mov
sar
and
xchg
cwde
out
add
fcmovnb
inc
sbb
add
jecxz
cld
call
aas
and
in
add
lock
sti
call
xlat
sbb
add
mov
and
xchg
add
(bad)
in
mov
scas
sbb
fs
jo
je
or
mov
mov
inc
add
add
fs
mov
lea
add
icebp
stc
mov
fld
add
inc
and
je
aam
in
or
mov
sub
stc
xor
add
ficom
or
push
sbb
push
lods
add
mov
ret
shl
jmp
stc
push
add
add
mov
mov
ret
shl
push
std
aas
idiv
call
lods
call
mov
ret
push
mov
sbb
mov
inc
and
stos
jge
or
mov
mov
pop
mov
pop
inc
fs
fyl2x
stc
or
add
add
push
push
inc
fld
call
aas
push
jge
test
aaa
adc
sbb
dec
lods
idiv
movs
or
add
mov
fld
add
je
into
add
cwde
in
and
shl
mov
ret
shl
xchg
add
add
add
cmps
adc
je
lock
stc
push
test
add
fadd
movs
int3
and
push
xchg
mov
cmp
add
push
and
cmps
fadd
mov
xor
and
xchg
in
jl
mov
cmp
stc
call
adc
fwait
add
add
add
test
adc
fisttp
loopne
rol
stc
mov
nop
ss
xchg
adc
mov
add
or
cs
dec
aam
cmp
(bad)
std
xor
push
pop
mov
jmp
daa
test
rol
pop
or
icebp
stc
outs
mov
mov
fild
call
mov
cmc
iret
sub
mov
cld
xchg
xchg
add
add
jp
loopne
aas
add
mov
mov
mov
je
sub
movs
add
pop
jmp
mov
cdq
jg
pushf
loopne
add
mov
out
sub
loopne
mov
retf
and
add
add
inc
cmps
retf
js
adc
pop
cdq
jg
dec
repz
mov
lods
cld
add
add
rol
je
loopne
dec
and
cdq
jge
pop
mov
add
fsubrp
fstp
hlt
clc
mov
lods
cld
xchg
test
les
add
movs
fdivrp
inc
pop
into
stc
inc
dec
loop
mov
xchg
xchg
fdiv
cld
ret
test
inc
xor
mov
in
ss
icebp
stc
cmp
add
add
or
mov
retf
add
sub
inc
and
sbb
ins
imul
inc
mov
add
(bad)
jg
and
out
add
inc
xchg
and
in
add
cmps
pop
cld
push
mov
xchg
mov
add
xchg
and
movs
fld
call
(bad)
idiv
movs
movs
js
cmp
push
mov
add
call
frstor
push
dec
or
sub
add
add
mov
and
pop
add
popa
clc
jmp
test
fild
add
sbb
lock
and
xchg
mov
inc
hlt
ret
cld
xchg
inc
add
loop
jmp
add
enter
jae
and
movs
fadd
(bad)
mov
std
xor
mov
(bad)
in
cld
xor
int3
cmp
jmp
mov
or
je
xor
cli
ds
jmp
in
inc
add
inc
das
mov
xor
jl
and
add
add
add
out
mov
idiv
hlt
into
push
lea
fucomi
dec
(bad)
clc
pop
outs
dec
mov
adc
add
mov
ror
movs
fstp
and
xor
cmp
movs
fistp
add
neg
mov
fiadd
add
retf
push
push
add
add
mov
pop
les
in
push
pop
les
jnp
mov
repz
js
cli
push
push
mov
fild
call
fwait
int
mov
dec
idiv
in
test
loope
add
cld
cs
lock
adc
jae
and
movs
fiadd
call
mov
jmp
add
add
add
jl
test
add
pushf
out
add
sti
clc
mov
cmp
push
(bad)
js
mov
xor
add
push
mov
stc
je
out
stc
(bad)
mov
or
push
mov
fiadd
add
fnstcw
add
and
fld
add
test
fild
add
add
add
cld
dec
push
(bad)
push
add
inc
icebp
outs
jge
cld
clc
xor
mov
std
xchg
loop
and
in
sub
les
hlt
fld
call
rcl
fld
(bad)
call
fld
fsincos
(bad)
jnp
mov
xchg
idiv
xor
daa
jge
cld
push
push
mov
fld
call
fwait
iret
mov
lock
mov
add
jmp
lock
scas
nop
and
mov
add
push
and
and
fld
add
push
or
movs
fadd
pop
repz
lock
add
int3
add
add
fadd
jecxz
aaa
js
add
pop
dec
pushf
add
inc
dec
sti
dec
not
add
arpl
and
cmp
xchg
add
pop
call
(bad)
push
push
jno
rcl
xchg
hlt
add
rcl
or
fcomp
inc
fs
inc
nop
fsubrp
mov
cld
clc
lea
add
add
inc
loopne
cs
test
lea
out
call
and
pop
cld
iret
inc
mov
mov
inc
cld
push
and
inc
jne
lea
sbb
cmp
loope
lock
and
and
call
addr16
mov
out
call
sbb
add
add
div
dec
jbe
and
mov
dec
mov
jge
js
inc
xchg
in
cmc
mov
inc
pusha
xor
movs
fiadd
and
retf
mov
and
daa
adc
or
movs
xchg
sub
push
lea
cmp
call
out
test
and
mov
shl
stc
mov
add
test
fiadd
add
stc
push
sbb
sub
out
adc
jne
and
inc
mov
and
(bad)
fisttp
rol
iret
inc
add
inc
in
cmp
push
int3
(bad)
mov
push
neg
adc
cdq
add
xchg
stos
sbb
add
add
xlat
rol
rol
pop
xor
fs
and
jmp
popf
push
call
add
sub
jge
stos
imul
push
inc
test
dec
lea
test
cwde
add
fnstcw
xchg
stc
adc
mov
add
add
and
movaps
push
lea
jo
push
jb
jae
jne
cmp
jae
out
adc
es
add
sub
call
jl
inc
je
movs
inc
sub
mov
fst
jnp
iret
push
inc
(bad)
cmp
inc
fs
add
push
call
dec
dec
dec
add
add
out
sar
aad
fldenv
xor
clc
push
push
adc
mov
(bad)
sbb
neg
fisttp
inc
or
mov
call
es
push
sbb
cmc
out
fst
xchg
nop
std
xchg
shr
mov
gs
xchg
push
dec
cld
adc
pushf
aaa
fdiv
jae
out
call
dec
cs
push
or
mov
push
stc
call
retf
arpl
stc
(bad)
jns
(bad)
push
rol
or
retf
mov
fs
mov
and
(bad)
mov
push
stc
call
inc
inc
push
push
mov
ret
and
call
addr16
hlt
push
ins
test
add
add
pop
add
stc
adc
hlt
push
jae
jl
jnp
add
movaps
jge
sub
add
scas
pop
cld
(bad)
jmp
addr16
call
jo
vmwrite
mov
out
xor
(bad)
call
push
adc
pop
xchg
push
jle
inc
and
add
or
sar
call
stc
inc
xor
lea
xor
push
popa
jle
push
dec
(bad)
jmp
push
inc
sub
jg
lock
jmp
push
inc
and
add
adc
loope
sbb
ret
and
xchg
fs
(bad)
loope
stc
call
retf
add
add
cli
mov
xlat
(bad)
repz
jo
vmwrite
push
(bad)
imul
or
push
mov
repz
call
aaa
lods
mov
stos
call
xchg
pop
jnp
in
inc
mov
cmps
push
inc
mov
clc
xlat
inc
lea
push
inc
call
add
add
push
inc
mov
add
pop
mov
lock
mov
mov
repnz
cli
dec
adc
and
pop
hlt
mov
and
adc
adc
stc
jmp
add
or
sbb
hlt
cmp
or
ret
pop
jo
in
mov
add
pop
lahf
cld
jmp
ins
push
inc
lea
cli
call
retf
or
or
scas
stc
adc
daa
retf
mov
fdivr
cld
rcl
jae
out
repz
ror
call
adc
rol
dec
ins
push
adc
rcr
pop
sar
add
push
push
add
add
or
ret
into
ror
inc
popf
stos
dec
inc
cmp
xchg
sub
jne
lock
mov
clc
call
adc
push
adc
stc
call
adc
(bad)
sub
stc
inc
push
mov
test
jmp
or
or
dec
jb
arpl
add
add
add
fdiv
push
adc
push
loope
sar
add
inc
push
call
mov
mov
mov
and
psubw
and
hlt
push
stos
cmp
adc
jmp
adc
push
add
js
stc
jmp
fnsave
inc
add
add
add
fcomp
add
js
movs
fld
(bad)
sahf
fwait
add
stos
pop
pop
add
ret
or
je
mov
call
(bad)
fcmovnb
idiv
xor
push
lock
ja
mov
and
add
xchg
mov
dec
xor
jmp
pop
add
add
add
fadd
call
dec
loopne
lea
idiv
in
xor
or
add
pop
jno
int3
fsub
jae
add
xchg
pop
call
push
loopne
lea
sub
push
mov
ja
adc
jo
or
add
(bad)
hlt
push
sti
inc
or
push
cmp
idiv
add
add
xor
out
sbb
jo
adc
pop
in
and
and
push
add
outs
adc
out
hlt
(bad)
jg
pop
leave
cmps
mov
in
and
mov
fsub
fild
mov
or
mov
mov
push
daa
test
add
pop
mov
call
pop
and
add
mov
jge
and
mov
lods
fild
mov
stos
call
mov
lods
mov
push
adc
jmp
movq
jbe
call
cmps
xor
cmps
mov
adc
cld
(bad)
test
fidivr
aam
test
adc
fsubr
add
add
loope
cld
push
mov
adc
in
inc
xchg
js
jmp
ja
lock
cld
call
lahf
call
push
stc
pop
je
mov
adc
xchg
ror
fdivr
mov
popa
movs
adc
jge
enter
push
inc
dec
inc
sbb
jg
add
call
add
add
adc
mov
sbb
ret
mov
add
jno
sti
push
loopne
outs
or
enter
add
cld
push
jle
add
mov
or
cld
(bad)
jmp
fnstcw
test
dec
adc
adc
sbb
jne
fmul
jp
jl
add
add
add
iret
fistp
adc
jp
mov
js
call
inc
pop
bnd
call
call
mov
mov
add
je
imul
nop
std
rcr
sbb
mov
mov
in
add
cld
mov
hlt
mov
loopne
jb
adc
and
mov
jno
rol
add
(bad)
test
push
out
mov
add
and
jb
cli
push
movs
sbb
inc
jecxz
inc
push
fdivr
push
mov
clc
(bad)
adc
fild
and
fild
mov
mov
ret
fwait
add
test
sti
inc
add
add
jge
pop
and
les
call
add
cld
jmp
div
jmp
ins
adc
pop
mov
mov
fld
pop
inc
jge
xor
aas
cmp
mov
loop
jb
jecxz
jbe
jecxz
jb
jecxz
jbe
jecxz
jb
jecxz
jbe
jecxz
je
jecxz
je
add
add
jecxz
je
jbe
lock
inc
pop
and
adc
or
xor
add
inc
in
inc
(bad)
mov
call
ja
or
in
inc
fadd
pop
jae
aas
mov
call
(bad)
jmp
je
in
iret
mov
psadbw
add
je
lock
std
rcr
mov
(bad)
add
mov
and
pop
mul
add
sti
add
call
jno
add
jl
clc
jmp
imul
mov
and
xor
cmps
jge
pop
mov
inc
hlt
je
push
ins
mov
loopne
sbb
mov
add
add
inc
jne
jae
ds
test
fbstp
or
and
or
and
cli
push
mov
hlt
add
push
jae
rcl
jb
int3
mov
dec
cld
adc
jb
int3
xchg
imul
jae
mov
push
cmc
jmp
mov
lods
call
add
fadd
outs
sbb
xchg
xchg
and
test
cld
push
(bad)
xor
cld
inc
in
mov
inc
jae
imul
popf
xchg
pop
add
xlat
jge
jl
fwait
cld
adc
fdivr
not
add
enter
cmp
add
add
add
call
sti
call
or
mov
fadd
add
jp
adc
mov
inc
jne
add
movs
lea
fistp
ret
je
shl
and
out
xchg
hlt
jmp
mov
(bad)
mul
pop
xchg
call
cld
inc
mov
sub
add
push
jl
adc
push
sub
je
nop
fdivr
stc
lea
sbb
jmp
sbb
pop
ins
lock
aam
stc
dec
adc
jbe
and
add
adc
lock
add
ret
add
add
aad
cmp
in
inc
lods
hlt
enter
daa
rol
add
movs
adc
nop
and
inc
inc
pop
lock
stc
add
push
and
je
repz
call
jmp
test
add
xor
jg
mov
cmps
and
add
push
add
les
mov
stos
ret
fucomp
inc
(bad)
adc
ret
fucomi
ror
mov
dec
pop
jmp
rol
fs
int3
pop
jae
jae
stc
lea
sub
iret
sbb
lods
adc
imul
inc
cld
stos
adc
add
lods
movs
push
add
add
pop
sbb
lods
(bad)
xlat
add
int3
dec
ins
cld
shl
mov
and
jne
test
mov
adc
push
and
ins
retf
lods
add
jg
hlt
(bad)
push
dec
lea
fistp
and
inc
(bad)
cmp
out
mov
(bad)
fcomp
stos
call
add
add
jae
pop
mov
adc
push
lea
push
stc
(bad)
jecxz
inc
(bad)
jmp
mov
dec
fcomp
fsubr
pop
cld
rcl
jb
sub
pop
cld
adc
dec
xor
jb
shr
call
pop
mov
jg
aam
lock
add
add
idiv
hlt
scas
mov
pop
cmp
and
enter
push
test
mov
xor
mov
adc
call
scas
mov
scas
mov
pop
data16
and
add
sub
outs
pop
cmps
jb
and
pop
loopne
test
stc
(bad)
mov
dec
pop
jmp
fwait
rol
add
add
jo
and
call
mov
and
push
test
lods
imul
jmp
dec
mov
push
bound
in
mov
push
push
xchg
xor
loopne
push
test
stc
mov
call
gs
jae
int
sbb
jle
add
jb
and
add
push
add
and
jno
and
jno
and
add
add
mov
fiadd
call
loope
rol
and
call
(bad)
retf
or
push
mov
mov
fld
add
addr16
repz
or
stos
hlt
or
retf
add
fnstsw
add
add
in
adc
fld
mov
sub
fdiv
outs
cld
xchg
mov
call
fidiv
sbb
pop
lahf
jns
and
sti
sbb
push
pushf
ins
and
push
loope
pop
add
(bad)
jmp
idiv
fadd
add
sbb
fld
mov
cbw
and
add
add
in
idiv
and
cwde
adc
xchg
hlt
jmp
mov
sub
add
ins
cmp
jge
mov
and
dec
movs
mov
call
aas
pop
and
cmp
les
pop
mov
inc
add
rol
fsubr
jae
add
add
and
int3
xchg
mov
ror
sbb
push
jae
int3
shl
repz
dec
cld
repz
mov
mov
add
popa
pop
loopne
fstp
add
dec
inc
pushf
cmp
add
hlt
xor
jmp
add
xchg
mov
add
sub
jae
les
and
call
push
mov
jle
add
mov
sbb
pop
loopne
jne
xor
rcr
dec
rcr
pop
add
loopne
jne
xor
add
jge
add
lock
notrack
sbb
xor
adc
scas
or
or
test
stc
sub
add
add
mov
rcr
or
les
ret
pop
ret
cmp
jmp
loopne
add
das
inc
mov
cmc
popf
jno
jge
aas
mov
aaa
test
or
aaa
cmc
xor
lock
inc
push
mov
stc
mov
fild
add
scas
or
cmp
xchg
inc
fs
inc
or
add
add
pop
jae
repz
pushf
xchg
push
data16
(bad)
sbb
push
rcr
add
cld
or
xchg
cld
repz
les
gs
add
fst
cmp
out
lods
hlt
push
mov
mov
cmp
mov
sbb
push
dec
(bad)
addr16
sbb
rol
loopne
xor
stc
ret
jne
add
add
lods
leave
jge
push
fstp
add
adc
test
sar
pop
scas
add
out
add
stos
mov
jns
stc
adc
test
into
pushf
xchg
push
inc
loopne
xlat
sbb
push
jno
mov
js
inc
add
add
int3
ret
rcr
adc
add
add
rol
in
push
(bad)
stc
sbb
out
mov
push
mov
mov
pop
loopne
sbb
push
push
fisttp
adc
stc
jne
and
add
inc
and
inc
add
adc
dec
lea
cli
clc
jne
neg
xor
jg
inc
push
jae
adc
sub
js
add
add
add
clc
jne
dec
inc
mov
fild
jmp
and
in
inc
(bad)
sub
add
fucomip
loope
sbb
and
stc
push
(bad)
data16
mov
call
int3
call
pop
mov
jo
jmp
pop
in
mov
repz
inc
pusha
dec
inc
in
add
add
movs
dec
inc
fsub
stc
jne
and
dec
call
add
or
aaa
pop
les
and
inc
mov
inc
adc
add
and
jb
add
jne
lock
in
jae
fcomp
or
or
rcl
in
add
sbb
mov
ror
jl
add
add
sbb
push
sub
call
jmp
out
pop
inc
add
ret
pop
retf
inc
push
ret
retf
test
add
xlat
push
jmp
(bad)
neg
xor
inc
lea
dec
lea
dec
push
adc
jg
add
in
cdq
fadd
fld
inc
add
add
loope
inc
in
mov
movs
cwd
add
xchg
xchg
call
and
inc
mov
movs
(bad)
rol
add
mov
je
nop
and
mov
inc
cld
stos
xor
mov
xor
xchg
sbb
pop
xor
xchg
icebp
mul
jae
and
loope
xchg
call
add
add
movs
push
inc
mov
and
rol
add
xor
sub
xor
inc
cld
in
pop
rcr
fadd
push
fdiv
pop
add
mov
adc
test
das
jge
mov
fdivr
into
mov
add
mov
xor
and
pop
sbb
add
add
(bad)
idiv
je
add
add
movs
das
aam
je
jge
ins
loope
psubsb
idiv
xor
inc
call
jno
stc
je
mov
(bad)
jns
stc
jne
and
add
js
das
inc
lods
scas
push
sub
xor
pop
shl
adc
push
inc
add
add
and
sub
inc
add
sbb
mov
add
mov
les
and
fist
sub
call
mov
test
mov
xchg
add
push
(bad)
jns
jge
xor
pop
xchg
adc
jge
push
fadd
add
push
je
add
add
adc
pop
js
or
pop
inc
add
fisubr
push
ror
xchg
xchg
sub
add
pop
jl
mov
mov
mov
sbb
stc
jne
push
pop
sbb
xlat
add
pop
ud0
and
inc
add
dec
pushf
(bad)
cmps
(bad)
rol
push
add
es
jmp
(bad)
in
stc
sub
ja
int3
xlat
add
jnp
inc
cld
das
xor
imul
inc
push
push
jae
cld
or
add
pushf
cmps
scas
mul
mov
scas
add
and
jg
shl
(bad)
jmp
push
stc
jmp
mov
add
stc
xlat
ja
pop
fld
add
das
lahf
jae
and
test
or
pop
loope
inc
fs
ret
xor
sti
ret
and
jl
cmp
mov
adc
mov
mov
mov
lods
lods
(bad)
jns
or
xor
call
lea
dec
mov
push
jae
or
(bad)
(bad)
repz
inc
add
add
rcl
das
jne
aam
cld
hlt
fadd
mov
push
inc
aam
test
and
movs
fmul
aam
xchg
xchg
cld
xchg
mov
mov
and
jg
inc
xor
xchg
lock
setb
pop
add
inc
ins
mov
sysret
jno
out
sbb
and
add
add
mul
out
mov
push
call
push
hlt
mov
pop
data16
push
jb
stc
jne
dec
or
lea
popa
cmp
call
sahf
sahf
push
(bad)
jmp
sub
test
test
ffreep
jecxz
fstp
sldt
add
cmp
mov
xchg
xchg
rcl
mov
arpl
mov
pop
das
sub
pop
and
in
jge
mov
push
mov
xchg
jb
push
mov
lea
xchg
clc
inc
das
or
pcmpgtd
clc
inc
int3
icebp
(bad)
cmp
inc
mov
dec
push
add
add
dec
fisttp
addr16
push
push
popa
dec
mov
xchg
fs
mov
mov
std
adc
add
fsub
cdq
std
shl
out
xchg
and
dec
into
inc
jb
fst
cdq
mov
jle
in
jmp
lock
jl
je
inc
mov
jno
fbld
add
add
adc
inc
push
or
push
cld
repz
mov
sub
pop
int3
idiv
pushf
xchg
inc
cld
out
pop
int3
jecxz
aam
mov
mov
bound
pushf
mov
push
(bad)
popf
mov
xchg
inc
cld
test
retf
nop
je
repz
fld
push
loope
xchg
push
icebp
and
add
add
add
mov
xchg
clc
cmp
jae
je
inc
int3
xchg
push
jle
mov
add
dec
fimul
push
lea
mov
xor
add
mov
hlt
call
mov
aaa
mov
jne
sub
inc
sub
jmp
(bad)
stc
mov
jmp
add
add
mov
cld
add
stc
(bad)
shl
pusha
ror
ror
inc
inc
push
fwait
pop
jb
jmp
cld
add
pop
call
and
pop
mov
and
call
fld
jmp
push
inc
cwde
add
add
jno
jae
ror
clc
push
pop
dec
aam
iret
int3
(bad)
jmp
sti
hlt
push
xor
push
cmc
add
cld
adc
mov
sub
shl
int
test
fucomi
mov
mov
sbb
call
mov
cdq
push
loope
int
imul
add
call
cmp
jae
mov
push
inc
aam
pop
mov
repz
call
pop
lea
fld
cmp
cld
xchg
xor
stc
mov
out
cli
hlt
push
lea
or
js
adc
lea
push
mov
inc
add
add
push
(bad)
call
ss
imul
clc
push
loope
mov
adc
fs
inc
aam
mov
fist
cld
cld
ins
icebp
inc
xor
cmc
add
movs
pop
cld
rcl
aam
push
xchg
call
sti
not
or
loopne
call
add
add
sbb
call
(bad)
ret
mov
xchg
xor
add
push
int
cmp
push
fiadd
in
or
pop
dec
inc
je
xchg
add
push
out
aaa
mov
inc
popf
jle
dec
rol
inc
lds
and
and
std
xchg
add
add
add
add
in
add
sbb
inc
dec
mov
mov
shl
hlt
push
leave
mov
ret
push
call
daa
repnz
fsub
sbb
retf
xchg
push
in
push
repnz
pushf
jl
call
sbb
add
pop
mov
dec
mov
add
add
js
jp
test
cdq
mov
fcomip
lds
into
jmp
xor
cmps
sub
adc
sar
hlt
fild
add
jmp
in
add
pop
movs
jle
or
idiv
in
push
mov
(bad)
fwait
inc
lea
mov
pop
mov
das
and
mov
add
add
ret
pop
mov
fstp
pop
iret
jl
fs
inc
and
pop
sbb
fild
mov
call
dec
fstp
sbb
cld
repz
outs
icebp
hlt
(bad)
jp
inc
sbb
ja
outs
adc
imul
idiv
hlt
adc
mov
les
cmp
add
add
cmp
dec
or
jmp
pop
and
inc
and
lock
xlat
push
mov
les
add
clc
sub
je
mov
idiv
fs
sub
clc
push
dec
fisttp
stc
mov
clc
and
pop
add
stc
push
dec
fisttp
in
cmp
add
add
jo
pop
push
cld
mov
or
hlt
fnstsw
lods
imul
clc
cs
add
shr
push
inc
adc
cmc
add
sbb
ud0
repz
push
xor
jg
push
push
inc
adc
cmc
add
cwde
mov
cld
mov
hlt
push
push
xor
jg
push
add
add
inc
and
sub
sbb
push
fld
add
cmps
pop
or
fld
jb
push
push
js
fmul
jo
fnstcw
jo
hlt
mov
fld
add
push
cmp
fdiv
call
es
cvtdq2ps
add
sbb
add
cmp
call
mov
stc
adc
hlt
push
dec
and
jo
test
add
inc
je
ret
mov
jmp
add
mov
test
test
dec
call
aaa
je
adc
je
js
lds
je
add
add
enter
in
inc
push
push
je
inc
jo
pop
rol
clc
adc
int
stc
push
mov
call
ret
fild
add
cld
adc
and
add
dec
mov
idiv
rcr
call
push
xor
add
add
test
add
std
jmp
idiv
xor
not
fild
add
add
jg
enter
repz
and
add
jmp
sub
jl
clc
pop
and
inc
and
lock
xlat
push
(bad)
sub
call
daa
pushf
or
add
add
cwde
scas
and
clc
mov
add
and
hlt
push
scas
push
call
ja
test
(bad)
out
and
call
or
and
(bad)
(bad)
adc
dec
fsubr
push
call
fnsave
push
push
add
add
cmps
aam
fucom
fld
push
and
mov
fld
add
call
add
dec
and
movs
fld
push
mov
fld
pop
fadd
adc
sub
call
(bad)
call
mov
or
int
add
and
sub
test
add
add
idiv
and
fistp
cmp
pop
add
std
sbb
adc
outs
adc
cmp
rol
push
fdivr
out
mov
(bad)
aas
inc
inc
add
add
out
test
mov
cmc
push
lods
addr16
je
cmc
jmp
mov
call
push
dec
xlat
mov
mov
add
jo
pop
adc
sub
loopne
je
mov
idiv
in
cli
je
mov
xlat
sar
sbb
mov
dec
inc
and
dec
push
and
inc
leave
call
add
add
aas
test
fdivr
das
lahf
mov
add
mov
fild
add
or
lahf
or
out
dec
enter
pop
fs
and
(bad)
mov
cmc
push
test
mov
pop
and
ror
pop
mov
jae
fadd
and
fild
add
add
add
or
inc
inc
call
add
or
int3
mov
add
pop
and
out
cld
sbb
das
mov
cs
test
idiv
je
fist
les
jns
add
pop
and
sub
xor
add
add
iret
cmp
ja
jae
push
push
mov
loopne
add
dec
and
cs
je
int
xlat
sub
in
add
fadd
inc
sub
add
and
in
add
sub
push
in
mov
mov
mov
call
push
(bad)
fmul
inc
add
add
pop
lock
push
push
mov
(bad)
fadd
add
dec
and
jne
add
test
ins
mov
jg
hlt
add
push
test
inc
and
add
mov
sbb
in
or
fdivr
adc
(bad)
jl
or
dec
sbb
jle
or
jl
add
add
or
sub
sbb
clc
push
in
jge
enter
fcom
or
pop
adc
xor
and
inc
dec
movs
cs
or
jb
pop
clc
mov
je
jae
or
or
jl
jl
fdivr
je
jge
and
jge
fdiv
rcl
dec
movs
xchg
inc
xor
sar
add
add
cwde
ror
cli
pop
dec
and
ins
and
add
xor
xchg
jp
push
ins
mov
fild
add
inc
and
push
mov
loopne
add
pop
or
movs
fild
pop
loop
jle
enter
movs
scas
retf
call
out
jae
ret
pop
xor
dec
mov
jns
inc
add
add
ins
pop
inc
in
adc
mov
jle
int3
push
adc
jb
lods
adc
call
popf
sbb
mov
xchg
idiv
hlt
xchg
inc
call
jl
pop
add
fcmovu
push
ret
push
icebp
push
shr
loopne
sub
push
jge
clc
push
adc
inc
jo
add
movs
push
dec
in
add
add
in
iret
pop
nop
jl
push
push
dec
les
cmc
call
mov
fisubr
push
mov
fld
repnz
out
add
mov
xor
add
xchg
push
test
push
pop
add
test
sbb
push
mov
or
mov
repz
inc
or
add
add
lds
movs
pop
inc
adc
and
popa
push
int
stc
xchg
jle
push
jl
inc
js
mov
or
add
push
jp
hlt
xchg
and
push
sti
jmp
pushf
or
rol
movs
mov
(bad)
jmp
and
mov
fs
add
add
call
xchg
inc
cld
or
je
mov
adc
(bad)
lock
test
add
call
movnti
fsubr
sub
sub
push
(bad)
stc
imul
jnp
call
daa
xchg
or
fld
in
or
fs
push
push
cmc
add
add
add
repz
ret
or
adc
lea
fs
jmp
adc
push
mov
adc
imul
add
scas
pop
sti
push
jmp
fld
je
xor
clc
push
or
je
repz
ret
or
in
(bad)
cmp
inc
push
idiv
shl
call
add
add
aaa
fwait
or
stc
xchg
movd
push
cmc
or
inc
(bad)
(bad)
stc
call
ja
push
add
push
loope
push
test
ins
jb
int3
in
cld
ror
inc
(bad)
fldenv
imul
imul
pusha
arpl
push
ins
dec
mov
scas
pop
cld
add
add
adc
inc
lea
cli
push
jne
pop
lock
push
push
popa
push
sbb
ret
pusha
fisttp
xor
not
in
pusha
clc
call
sbb
clc
call
inc
lea
test
jmp
jnp
mov
stos
(bad)
lock
clc
ret
pop
and
aas
xor
mov
pusha
je
(bad)
xlat
push
add
mov
xchg
fild
add
inc
add
pop
cld
adc
or
sbb
push
adc
add
loop
inc
std
add
add
jne
pop
shl
inc
in
jne
mov
pusha
mov
in
sbb
(bad)
sbb
add
push
jl
jae
(bad)
lock
cmc
ins
mov
push
add
add
sbb
call
out
or
or
test
ins
sti
call
repnz
push
dec
aam
sbb
add
int3
ror
jns
jmp
mov
cmc
push
mov
stc
jne
pusha
jb
adc
stos
xchg
mov
push
xor
ficomp
add
loop
jno
add
add
and
sar
shl
addr16
or
rol
inc
push
aas
stos
shr
jmp
adc
push
xchg
in
or
call
inc
je
ror
add
jp
leave
daa
or
div
push
fwait
aad
add
jmp
xlat
add
jmp
mov
add
imul
inc
aam
mov
movs
dec
and
add
pop
add
lock
in
jge
xchg
scas
inc
hlt
jmp
or
xchg
int3
mov
clc
xlat
jg
mov
test
outs
fld
icebp
call
fwait
mov
pushfw
(bad)
jmp
jg
inc
je
adc
sub
push
push
daa
xor
xchg
mov
push
inc
clc
fistp
stc
add
push
and
into
sbb
add
aaa
je
icebp
adc
jns
dec
(bad)
jns
clc
adc
lahf
sbb
cmp
push
cwde
fcomp
inc
imul
lock
int3
mul
aas
cwde
or
add
add
cmp
push
add
xlat
pop
shl
ror
xor
inc
cmp
inc
lock
fld
sbb
jmp
cmp
jmp
dec
test
mov
fld
out
ror
test
call
jg
inc
xor
ror
test
add
add
add
fld
sbb
add
inc
test
(bad)
in
cmp
sbb
jne
fs
mov
pop
ret
or
(bad)
in
jmp
push
or
fdivr
sbb
cld
mov
xor
jne
jb
pop
(bad)
adc
iret
add
div
test
pop
mov
add
add
cmp
int
mov
sti
es
mov
out
shl
sub
mov
into
jb
pop
mov
fbstp
inc
add
and
mov
mov
xor
mov
add
daa
pushf
add
call
fst
add
add
loope
div
pop
test
add
mov
repz
add
cld
dec
push
call
out
sbb
idiv
sbb
add
xlat
idiv
and
int3
pop
out
je
push
ret
jle
adc
out
mov
cdq
pop
adc
mov
je
sti
add
out
cmc
hlt
inc
add
add
fimul
sub
pop
dec
push
mov
push
sub
pop
mov
add
fstp
jg
mov
push
mov
std
repz
jns
je
jg
xor
add
sar
mov
out
mov
push
in
and
add
adc
hlt
inc
add
add
outs
mov
out
jg
les
movs
or
xor
repz
repnz
dec
sub
ins
inc
ja
cli
je
pop
out
cld
sbb
pushf
push
sub
js
push
clc
call
push
push
inc
lea
ins
rol
call
push
(bad)
fimul
(bad)
in
repnz
call
add
add
sub
test
push
loope
int
xor
hlt
inc
jmp
call
mov
dec
jae
cmp
arpl
dec
fwait
jae
je
jb
add
mov
jne
push
push
mov
mov
inc
aam
mov
push
bound
int3
pop
push
cld
jae
inc
int3
add
add
pushf
add
mov
dec
pop
test
stc
add
add
je
jne
or
inc
lds
clc
sbb
cmps
pop
push
mov
push
jns
lea
fld
add
int3
mov
fs
mov
cdq
adc
jb
jb
jl
mov
pop
add
mov
lahf
idiv
in
inc
and
aaa
pop
and
aaa
pop
and
aaa
pop
and
pop
cmp
xchg
dec
add
in
iret
iret
jno
add
push
pushf
mov
and
movs
pop
add
add
ja
inc
add
and
push
loope
sbb
and
and
jo
fadd
add
add
add
pushf
and
fild
add
and
sub
push
or
adc
dec
pop
sbb
inc
or
call
cmp
les
je
push
or
or
sbb
int3
je
cld
jae
call
pop
xor
sbb
mov
push
std
xchg
ss
and
add
add
call
push
pop
loopne
dec
or
call
mov
mov
add
xor
dec
pop
xchg
push
jle
dec
sti
and
std
add
jecxz
neg
sub
fmul
std
add
into
xor
cmp
mov
jle
movs
xor
std
ror
add
add
sub
call
mov
xchg
mov
push
lea
je
inc
sbb
add
jle
nop
cmp
dec
icebp
into
int3
call
pop
dec
jl
fdivr
mov
pop
push
inc
push
je
sar
adc
jne
add
jns
jns
pop
loope
pop
in
jnp
scas
mov
add
test
clc
pminub
jle
test
add
push
ror
repz
enter
fbld
gs
jmp
jo
inc
je
inc
les
pushf
jl
jo
push
aam
popf
sti
push
add
test
push
in
hlt
jmp
push
(bad)
popa
cli
jmp
dec
mov
mov
std
repz
clc
mov
xor
add
add
in
in
cmp
lods
jb
cmp
mov
push
add
int
clc
jmp
dec
mov
add
jnp
pop
ss
aam
sbb
add
or
xchg
push
dec
jl
mov
pop
jb
int3
and
rcl
mov
mov
rcr
call
pop
add
add
dec
gs
das
data16
ss
clc
mov
fild
jge
pop
inc
mov
shl
dec
mov
push
clc
std
xor
jo
add
(bad)
jns
mov
push
jge
adc
inc
enter
nop
je
dec
rcr
je
fwait
push
add
add
add
add
inc
push
cld
rcl
add
sbb
call
pop
and
call
ja
idiv
mov
mov
movs
daa
idiv
movs
pop
mov
mov
mov
lods
fistp
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
add
sub
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
and
xor
add
inc
add
(bad)
(bad)
jmp
fdiv
je
pop
jp
movs
add
add
add
add
in
mov
fs
je
mov
je
idiv
fs
mov
fs
xor
mov
xor
idiv
and
mov
and
jge
scas
sbb
adc
xor
add
jno
xor
test
jb
and
not
pop
inc
or
add
add
pop
ret
(bad)
popf
mov
mov
idiv
movs
pop
mov
movs
jmp
in
fist
cdq
mov
rcr
adc
ins
mov
sbb
inc
fnstcw
or
jp
fistp
inc
xor
sbb
cmp
add
hlt
or
and
mov
add
add
jno
lldt
mov
hlt
jmp
jae
cmp
add
gs
ret
stos
retf
xchg
sub
jge
mov
rcl
or
gs
mov
mov
push
jmp
inc
sbb
mov
add
mov
je
idiv
je
mov
fs
in
call
or
add
add
inc
das
div
and
mov
fs
in
scas
sbb
jmp
inc
inc
add
in
scas
sbb
push
inc
and
mov
and
jge
stos
cs
fwait
sar
pop
mov
mov
in
mov
fwait
int3
dec
mov
imul
or
jae
dec
fmul
sbb
add
fwait
in
sbb
jl
add
add
lods
pop
mov
test
fldenv
mov
add
out
xor
add
mov
fistp
mov
sub
fs
cmp
add
imul
mov
add
jecxz
call
mov
mov
ret
aad
inc
add
add
rcr
call
fadd
xlat
jno
inc
adc
or
jmp
xchg
in
mov
stc
adc
and
in
mov
hlt
jmp
into
test
push
cli
push
(bad)
not
je
add
push
mov
lods
mov
dec
cmc
xor
add
add
es
sbb
push
push
shl
addr16
inc
add
inc
and
adc
int3
or
add
int3
call
dec
push
inc
inc
in
inc
aam
dec
dec
jge
fs
das
mov
push
hlt
bound
push
fyl2xp1
xor
xlat
jge
daa
fwait
and
(bad)
add
ins
xor
lea
test
add
call
test
cwde
fsubr
(bad)
in
add
mov
or
and
add
js
inc
jmp
dec
test
fadd
push
comiss
add
mov
inc
in
or
rcl
xor
out
inc
mov
xchg
hlt
rol
add
add
call
hlt
mov
inc
fiadd
out
inc
fsubr
rol
sbb
add
std
push
fcomp
add
aaa
mov
mov
fdivr
adc
neg
add
enter
mov
clc
mov
push
inc
jmp
inc
idiv
and
jp
cwde
mov
inc
or
dec
jle
adc
call
add
clc
call
fwait
(bad)
pop
movs
ffreep
ds
clc
mov
bound
lea
idiv
mov
add
lahf
xchg
mov
mov
sub
inc
push
and
test
fild
call
daa
(bad)
test
popa
inc
push
and
jo
aad
cld
add
add
shr
pop
add
(bad)
in
jmp
xchg
fbstp
je
clc
push
mov
mov
inc
dec
dec
adc
push
es
call
xchg
cmc
mov
jg
inc
mov
test
gs
sar
call
mov
test
ret
push
mov
fist
pop
loopne
add
dec
inc
call
push
out
call
push
leave
addr16
xchg
xchg
inc
add
jnp
out
hlt
add
pop
fucomip
movs
(bad)
clc
lea
(bad)
clc
lea
(bad)
clc
lea
(bad)
clc
lea
(bad)
clc
(bad)
(bad)
clc
jmp
mov
add
mov
loopne
add
pop
inc
cld
rol
stc
push
add
add
pop
jae
inc
in
addr16
cld
fld
dec
nop
pusha
pop
push
call
sbb
(bad)
out
call
pop
mov
out
mov
inc
add
ins
fucomi
add
cmp
repz
mov
test
daa
int3
add
jne
popa
clc
push
dec
fimul
dec
lock
inc
push
add
add
add
adc
call
out
add
fld
add
das
inc
in
sbb
pop
jl
dec
xchg
dec
push
inc
xchg
(bad)
fbld
xor
mov
push
idiv
mov
ror
jns
inc
les
add
xchg
loop
dec
mov
popf
fmul
push
mov
push
std
add
add
repz
ret
adc
daa
pop
and
jg
fmul
mov
push
idiv
xor
add
ror
lea
push
call
lahf
push
add
fdiv
lock
dec
inc
out
add
xchg
add
jmp
fimul
add
add
pop
adc
lahf
imul
add
push
mov
inc
lods
xor
inc
xor
mov
ret
inc
sbb
stos
adc
jle
sub
pop
cwde
cli
xchg
in
int3
(bad)
repz
or
push
aaa
add
fnsave
sub
mov
add
add
fiadd
or
cmp
mov
movs
mov
lea
xor
pop
pop
adc
fs
dec
(bad)
mov
mov
(bad)
jl
mov
adc
clc
dec
add
mov
shl
shl
je
fs
shr
add
add
lahf
sti
add
rcl
pause
pop
add
outs
jnp
adc
loope
es
push
mov
mov
cld
adc
add
repz
jne
pop
sbb
jbe
idiv
cmps
pop
jb
rcl
stc
jne
pop
(bad)
call
xor
shr
sahf
xlat
mov
adc
jmp
stc
mov
cs
call
add
add
addr16
add
mul
mov
and
add
shl
test
pop
inc
jmp
test
xor
cmp
inc
jo
push
mov
clc
mov
push
inc
nop
cld
fdivr
shl
(bad)
mov
fist
dec
fisttp
add
and
sti
add
mov
and
call
push
sti
add
mov
clc
call
movs
jne
add
jl
and
lea
aaa
imul
and
imul
and
dec
cwde
test
xchg
jg
sub
cld
add
add
add
inc
mov
aaa
pop
mov
and
popa
fst
popa
mov
lea
je
inc
rcr
call
push
dec
jb
dec
fnstcw
leave
ret
fsubrp
movs
jmp
mov
jmp
dec
inc
cld
add
stc
adc
add
add
loope
addr16
and
inc
rcr
call
(bad)
fldcw
(bad)
popa
icebp
and
pop
and
jmp
and
inc
adc
call
(bad)
fldcw
fisub
and
cld
fimul
cld
push
dec
nop
int3
jne
(bad)
shl
jb
mov
addr16
mov
shr
add
add
rol
push
das
sub
dec
push
inc
movs
mov
add
sbb
add
or
and
xor
push
inc
lock
mov
loope
repz
add
xor
daa
jne
fisubr
push
fadd
lea
push
out
xor
xchg
xor
call
and
mov
add
add
pop
stc
mov
and
stos
pop
mov
ret
and
add
fnstsw
push
pusha
clc
dec
and
add
jmp
stc
aas
mov
add
push
sbb
pop
stc
push
out
sbb
mov
push
cld
repz
mov
add
adc
clc
jmp
pop
(bad)
mov
add
add
xor
bound
repz
inc
cld
es
mov
ret
cmp
jae
je
fild
arpl
stc
push
dec
mov
pop
add
inc
rcr
call
push
dec
xlat
ret
fld1
xor
adc
mov
sbb
cli
dec
jo
pop
jmp
push
scas
mov
pop
sbb
mov
add
adc
mov
xor
mul
push
xlat
mov
je
ror
xor
push
lock
test
(bad)
clc
jmp
push
or
and
mov
push
cmp
stc
cmp
clc
jmp
sar
fild
cmp
push
add
add
push
cmp
ins
xlat
mov
add
(bad)
jmp
fwait
mov
shl
push
pop
mov
in
stc
(bad)
sub
add
lea
jae
test
daa
stc
xor
sbb
stc
add
inc
inc
mov
je
clc
inc
add
add
scas
adc
adc
inc
push
push
mov
xor
stc
call
stos
pop
sti
add
fiadd
imul
mov
adc
and
dec
fisttp
call
fwait
inc
push
and
clc
jmp
stc
dec
loope
mov
repz
hlt
mov
add
add
fbld
jmp
scas
add
iret
inc
add
sahf
pop
mov
dec
lea
mov
sar
mov
ret
mov
add
fnstenv
call
and
add
push
mov
ret
and
lea
mov
dec
nop
and
inc
sbb
(bad)
hlt
popa
clc
jmp
add
add
stc
mov
(bad)
xchg
and
or
push
dec
cld
popf
push
aaa
mov
ins
pop
mul
aaa
test
call
inc
test
push
mov
inc
shl
stc
idiv
shr
cmp
icebp
push
mov
mov
cld
mov
adc
inc
cld
neg
add
cli
push
cmp
repz
je
pop
mov
sti
daa
mov
mov
mov
inc
and
jmp
clc
call
rol
xchg
add
mov
add
inc
dec
scas
mov
fsub
dec
mov
mov
stc
(bad)
jmp
das
inc
rcl
and
fs
and
out
test
add
sti
dec
push
push
mov
ret
mov
fiadd
es
inc
add
xor
add
add
fisttp
jmp
stc
(bad)
imul
and
mov
lods
out
adc
je
mov
inc
adc
(bad)
jmp
(bad)
stc
jmp
xchg
invd
add
add
xchg
jge
push
fwait
inc
(bad)
loope
mov
(bad)
les
push
clc
adc
or
push
shl
mov
rcl
stc
mov
pop
dec
inc
adc
inc
push
fs
inc
adc
(bad)
test
sahf
sti
jmp
inc
mov
jge
add
popa
sbb
mov
xchg
adc
dec
sub
push
sub
jo
jge
hlt
bound
(bad)
jmp
sbb
(bad)
in
bound
and
push
sub
adc
gs
mov
adc
call
ja
test
inc
cld
ss
fiadd
adc
(bad)
outs
adc
cmp
je
add
add
fs
push
xor
bound
call
and
(bad)
cmp
call
test
sti
jmp
addr16
sub
add
or
inc
sbb
inc
cld
repz
push
jmp
add
test
dec
clc
push
push
add
fistp
test
lods
fbstp
rcr
and
inc
(bad)
imul
sti
jmp
mov
inc
cld
div
inc
ror
ins
pop
movs
test
or
je
mov
mov
add
xor
dec
nop
or
test
ret
pop
idiv
shl
call
mov
mov
mov
loopne
add
movs
pop
cmp
sti
adc
imul
popa
ret
adc
lods
mov
je
inc
cld
call
or
add
jo
add
add
xor
dec
ror
inc
push
pop
mov
push
or
call
daa
mov
mov
mov
inc
or
push
pop
mov
push
or
call
daa
mov
mov
das
mov
inc
ror
inc
push
pop
mov
xchg
or
(bad)
test
fwait
sti
push
arpl
mov
repz
pop
test
push
rcl
adc
loopne
pop
pop
stc
mov
stos
mov
xor
mov
xchg
or
(bad)
cmp
call
div
mov
inc
jo
inc
push
adc
stc
(bad)
stc
or
out
call
adc
clc
inc
add
add
pop
adc
mov
mov
test
adc
cld
add
fwait
inc
mov
stc
pop
loope
jmp
stc
lea
cmp
iret
adc
pop
push
pushf
mov
iret
and
adc
cs
ror
xchg
or
call
add
add
(bad)
sub
jo
clc
push
lahf
pop
add
dec
scas
mov
ror
jmp
sti
add
cld
add
cld
xor
inc
fnstcw
add
dec
sub
call
mov
mov
aam
clc
dec
push
inc
cld
repz
mov
rcl
inc
add
add
adc
call
pop
popf
mov
push
xor
dec
cmp
push
ss
ror
stc
push
sub
clc
dec
fiadd
jae
push
lea
mov
inc
add
xchg
add
adc
sub
pushf
xor
hlt
jmp
dec
aas
mov
add
add
adc
dec
pop
or
xor
add
cmps
dec
mov
nop
dec
std
add
mov
jae
jae
mov
adc
call
mov
aas
pop
repz
lea
mov
lea
clc
(bad)
mov
test
call
push
push
(bad)
(bad)
jp
sti
add
add
add
mov
mov
shl
push
add
fild
pop
dec
xchg
ins
push
loope
pop
mov
jp
stc
push
rcl
adc
ret
out
pop
push
stc
lea
scas
jl
movs
pop
mov
xor
stc
(bad)
sub
call
add
add
sbb
scas
rol
call
push
dec
fisttp
call
pop
add
dec
xlat
mov
rol
stc
push
(bad)
fimul
jmp
fdivr
cld
shr
mov
je
add
add
push
int3
rcr
repz
ret
or
push
push
push
add
add
je
adc
add
push
jmp
cld
adc
or
mov
mov
fdivr
cld
icebp
xor
mov
hlt
das
sub
je
sbb
inc
inc
add
adc
mov
call
xchg
inc
add
pop
sar
jmp
add
add
lods
rol
call
sub
inc
lea
inc
clc
(bad)
cli
cdq
sti
pop
int3
rcr
(bad)
rep
inc
push
adc
mov
xor
inc
push
adc
(bad)
sub
call
cld
bound
rol
punpcklwd
fadd
add
add
inc
inc
add
adc
mov
call
pop
and
mov
jmp
cmps
rol
call
sub
mov
jne
jno
cli
call
repz
inc
push
adc
mov
xor
cmp
add
add
cmc
adc
and
add
(bad)
sub
call
cld
fs
mov
add
(bad)
mov
add
jae
pop
fcom
fild
cmp
outs
fild
add
mov
imul
inc
clc
(bad)
fcomp
cld
ret
mov
or
inc
clc
inc
add
add
pushf
sti
and
xchg
repz
push
mov
fidivr
cld
inc
xor
adc
push
push
sub
cld
shr
idiv
adc
push
fisttp
dec
lock
jae
pop
add
aas
xlat
mov
nop
aad
sbb
add
add
idiv
push
icebp
pop
mov
je
push
(bad)
jmp
cmps
fild
idiv
sub
mov
test
mov
inc
lock
call
sub
inc
push
add
stc
(bad)
imul
hlt
push
addr16
popa
or
loopne
fadd
stc
pop
js
fist
hlt
fld
cmp
mov
test
add
dec
mov
inc
mov
or
add
call
daa
int
(bad)
jecxz
inc
push
icebp
or
dec
(bad)
test
mov
push
int3
or
fimul
jmp
dec
sti
sub
mov
cld
repz
mov
inc
inc
clc
inc
add
add
xor
and
add
push
mov
sbb
inc
cld
pop
xor
hlt
dec
push
dec
xlat
mov
pop
pop
inc
mov
xor
push
add
cmp
mov
push
popf
and
inc
pop
sar
into
hlt
clc
push
push
xlat
mov
sub
add
(bad)
sub
and
shl
jmp
push
int3
mov
inc
jo
xlat
push
lea
adc
(bad)
imul
stc
call
in
sub
inc
hlt
daa
inc
add
lea
mov
mov
xor
stc
mov
add
jmp
gs
(bad)
fstp
pop
push
scas
mov
daa
dec
add
inc
push
add
add
lahf
sti
jmp
mov
inc
inc
adc
inc
push
add
mov
pushf
mov
(bad)
jmp
push
mov
mov
cld
lods
sub
dec
add
add
xor
stc
call
jle
inc
mov
mov
push
mov
test
inc
(bad)
or
clc
cmp
(bad)
dec
loopne
add
leave
inc
cld
push
xor
add
jne
mov
mov
stc
call
in
bound
rol
fstp
and
add
mov
sbb
pop
cdq
add
adc
clc
push
gs
daa
adc
jl
idiv
hlt
lods
clc
adc
jg
fbstp
add
test
push
mov
pop
jmp
(bad)
add
(bad)
retf
jo
mov
add
add
cmp
cld
jmp
add
adc
clc
jmp
fnstcw
rcr
ins
mov
jmp
stc
push
mov
add
cld
scas
(bad)
and
push
and
mov
popaw
dec
mul
scas
scas
cli
call
les
movs
add
jg
test
jp
ret
xor
add
add
mov
push
mov
out
imul
mov
cld
xchg
pop
mov
sub
add
das
jecxz
nop
call
dec
push
push
push
(bad)
jne
push
jp
repz
jge
movs
lds
xor
inc
in
imul
add
jp
data16
stc
jne
clc
add
cld
dec
mov
push
shl
rol
add
add
idiv
cdq
adc
(bad)
test
xchg
retf
push
repz
jg
shl
push
sar
add
test
jne
ins
inc
aam
idiv
jne
cli
adc
sahf
push
std
xchg
push
jb
(bad)
in
xlat
aaa
nop
cli
push
push
ins
jb
mov
cld
repz
inc
(bad)
fcom
push
mov
add
add
dec
je
rcr
push
call
fbld
add
push
push
out
fwait
sti
jmp
inc
jl
jne
(bad)
cld
hlt
inc
clc
adc
jg
inc
arpl
iret
fisubr
pop
xchg
mul
ficomp
pop
leave
ja
add
fidivr
add
sahf
mul
push
mov
jmp
lahf
(bad)
mov
push
(bad)
push
mov
sub
pop
lods
idiv
push
icebp
cld
dec
lea
sahf
(bad)
mov
adc
popf
je
stc
mov
stc
outs
mov
adc
adc
sti
fs
mov
sar
movs
inc
std
add
push
popa
xchg
rol
add
add
sub
add
fld1
pop
add
clc
mov
cld
sub
sbb
jae
dec
or
push
add
scas
stos
call
das
leave
mov
push
sti
add
sub
test
and
sti
jmp
sbb
push
push
mov
adc
add
add
aaa
icebp
pop
dec
lock
inc
push
push
dec
nop
or
cmp
adc
add
and
stc
push
mov
mov
push
pop
cld
fadd
cmp
mov
rcr
shl
cli
clc
mov
test
sbb
ins
pop
xchg
mul
(bad)
in
jmp
jno
mov
ret
(bad)
push
and
mov
add
add
dec
mov
push
mov
div
add
(bad)
test
push
stc
jmp
clc
mov
push
imul
outs
cmp
adc
int3
cld
pop
push
adc
pop
pop
cmp
daa
inc
hlt
not
movs
push
inc
add
and
ins
jl
(bad)
jp
mov
add
add
mul
mov
clc
(bad)
hlt
ins
dec
mov
xchg
sbb
movs
sbb
cwde
inc
add
enter
inc
push
shl
mul
imul
out
adc
fmul
lock
and
jle
cld
add
add
mov
add
ins
jmp
jmp
cmc
mov
push
jne
mov
(bad)
fs
ret
push
xor
addr16
div
shl
mov
sub
(bad)
and
dec
pushf
int3
mov
(bad)
jae
jle
xchg
dec
jle
and
push
inc
xchg
scas
call
push
sti
add
xchg
test
(bad)
push
cld
ret
and
add
add
sub
jae
mov
pop
ret
sbb
retf
pop
and
push
mov
mov
out
int
adc
push
push
push
jb
or
xor
repz
inc
or
movs
imul
sbb
fs
es
hlt
cmc
test
and
out
stc
xlat
test
jmp
add
add
mov
xlat
rol
fld
add
loope
out
sub
bound
fdiv
cs
arpl
add
inc
in
clc
adc
mov
jb
pop
or
or
fmul
outs
bound
stc
mov
inc
movs
(bad)
sbb
pop
xor
push
push
add
add
pop
sar
shr
ret
dec
shl
rcr
inc
call
das
stos
inc
test
fs
xlat
call
jmp
mov
sub
daa
sbb
(bad)
push
dec
mov
into
ja
repz
jp
sub
sbb
jl
test
jecxz
cld
adc
or
and
inc
add
add
add
call
add
add
stos
(bad)
call
cmps
xchg
sti
jmp
dec
(bad)
sbb
jmp
sub
les
sbb
pushf
mov
in
imul
dec
push
and
neg
sbb
pusha
sub
stc
xlat
call
mov
pushf
mul
stos
out
inc
add
add
sbb
cmp
stc
ret
mov
and
dec
pop
daa
inc
fs
xchg
add
push
movs
arpl
and
call
mov
inc
mov
sbb
and
push
push
lds
ret
in
push
popa
jmp
fadd
add
add
hlt
dec
jb
inc
pop
and
in
add
mov
add
in
add
push
mov
test
mov
movs
jb
mov
xlat
call
mov
fisub
adc
pop
and
je
add
je
add
fisub
mov
fidivr
dec
cli
pop
add
cs
pop
push
clc
push
jl
and
add
add
bound
outs
pushf
and
fst
add
aam
jnp
fld
lea
retf
add
fst
pop
fstp
mov
and
loopne
movs
fincstp
mov
(bad)
ret
ret
std
sub
mov
je
jge
dec
ins
mov
jg
or
push
lea
add
add
fcomp
jmp
xchg
out
add
fild
and
jne
pop
xor
jge
dec
add
jmp
pop
and
push
pop
and
cmps
add
in
mov
inc
push
daa
dec
clc
adc
imul
add
jae
and
inc
xchg
and
xchg
stos
and
mov
inc
add
add
pop
and
icebp
fwait
and
and
add
lock
pop
shl
rcr
fadd
push
sub
adc
lea
repz
lea
push
or
fadd
add
sbb
pop
ret
sub
adc
cmp
test
or
add
add
add
fsubr
pop
das
adc
push
ds
je
test
mov
adc
push
dec
loope
mov
pop
idiv
movs
pop
xchg
xor
fs
or
xchg
xor
adc
jne
jae
rol
xor
adc
gs
loopne
add
in
repnz
add
add
cwde
int
jmp
fcom
add
add
and
add
fst
addr16
mov
ficom
fadd
sbb
hlt
push
ds
adc
or
push
shl
mov
push
idiv
in
aaa
cmp
js
test
dec
idiv
movs
fbld
adc
push
push
fisttp
jmp
jge
dec
jbe
mov
add
add
mov
jle
je
add
popf
das
pop
pop
fbld
rol
xor
pop
ins
dec
icebp
adc
push
sbb
add
dec
mov
sti
add
aaa
pop
jp
inc
mov
inc
stc
cli
push
or
sub
mov
clc
adc
imul
inc
add
dec
cs
add
add
jae
shr
adc
aas
mov
loopne
adc
stc
mov
out
pop
repnz
push
cmp
es
fs
jge
ins
push
sbb
je
and
aam
adc
push
movs
data16
repnz
mov
add
jne
inc
bound
push
popf
push
sar
add
add
add
inc
add
clc
adc
ins
arpl
(bad)
ror
sub
or
mov
or
inc
lea
stc
call
or
call
pop
adc
adc
stc
(bad)
loope
stc
push
pop
add
ror
(bad)
stc
inc
stc
call
xchg
outs
mov
fcom
add
add
test
sub
dec
inc
and
mov
and
aaa
adc
pop
adc
cmp
add
dec
(bad)
test
sub
sub
ret
and
mov
ror
stc
push
mov
cs
lea
out
push
mov
push
xor
xchg
or
cdq
add
add
push
daa
stc
push
sti
pop
mov
add
stc
call
mov
mov
int3
mov
cld
shr
mov
int3
jns
cld
repz
lea
adc
or
test
xchg
ja
mov
add
in
call
cmp
add
stos
sahf
sti
pop
pop
dec
(bad)
(bad)
xchg
or
call
daa
xor
stc
call
push
lea
cmp
call
jo
cld
add
stc
lea
cmp
call
pop
clc
jnp
or
(bad)
jmp
xchg
xchg
jns
add
xor
call
sub
pop
inc
add
add
sahf
sti
or
or
sti
jmp
or
(bad)
fsub
cld
shl
push
lea
icebp
pop
cld
mov
fdiv
lea
ds
(bad)
xchg
clc
out
stc
or
push
dec
lea
(bad)
stc
inc
adc
jmp
add
add
nop
fwait
mov
fst
test
inc
sti
(bad)
cmp
mov
xor
mov
je
inc
cld
and
mov
inc
adc
push
mov
and
sti
push
sub
repz
mov
ret
push
int3
stos
inc
cld
shr
push
lea
stc
inc
and
push
add
add
inc
push
stos
(bad)
xchg
and
and
and
push
fistp
pop
xchg
and
call
daa
sub
stc
(bad)
(bad)
sub
shr
push
lea
neg
mov
jne
inc
shr
mov
sbb
outs
(bad)
adc
mov
mov
inc
and
rol
idiv
hlt
pop
movs
pop
add
add
lock
hlt
xchg
clc
(bad)
sub
mov
fistp
or
push
sti
pop
mov
and
call
imul
mov
sub
sti
call
mov
pop
mov
movs
stc
push
stc
push
movs
sbb
xor
das
dec
cld
add
add
add
adc
ret
ins
jl
hlt
and
jmp
clc
inc
adc
inc
push
mov
and
push
shl
stc
push
fwait
pop
mov
repnz
call
outs
pop
(bad)
(bad)
shl
loopne
dec
and
ret
cmp
idiv
mov
inc
xor
xlat
call
mov
outs
and
sub
sbb
pop
add
add
movs
fiadd
mov
adc
sub
pop
add
add
mov
sbb
data16
add
mov
push
jnp
inc
rcl
imul
js
add
pop
mov
and
push
dec
adc
punpckhbw
clc
push
daa
push
lea
sbb
push
add
add
imul
inc
call
test
adc
jae
retf
lea
clc
call
and
pop
sub
cld
movs
adc
pusha
jo
cdq
test
pop
dec
(bad)
mov
inc
sti
push
mov
sub
call
sub
pop
jmp
(bad)
add
add
fld1
rol
stc
push
jle
mov
adc
inc
push
repz
shl
call
daa
xchg
test
stc
push
dec
xlat
mov
cmp
sti
call
jmp
scas
dec
xchg
and
jne
xsha1
cmps
dec
adc
jl
pushf
ds
jae
repz
fdivr
mov
add
(bad)
xor
shr
pop
add
mov
call
scas
call
out
jl
jne
jae
scas
xor
or
stc
call
pop
pusha
mov
fild
mov
(bad)
push
std
ret
out
jb
outs
inc
dec
out
leave
mov
dec
jle
inc
adc
test
dec
mov
add
add
and
jge
mov
push
pop
push
loopne
pop
pop
stc
push
push
(bad)
sub
and
fstp
inc
mov
rol
call
xor
mov
and
jmp
jmp
and
add
imul
jne
sub
mov
out
jp
ins
pushf
lahf
jb
add
add
out
test
and
fwait
test
lock
movs
mov
xchg
mov
movs
out
jb
mov
mov
leave
(bad)
aad
not
ret
mov
sbb
and
jle
jb
inc
test
inc
test
mov
mov
movs
movs
and
add
add
dec
xchg
lods
inc
and
pop
add
and
dec
je
jne
adc
fs
(bad)
test
fdivr
jae
int3
inc
inc
std
rol
cmp
jae
jecxz
inc
lods
and
mov
stc
call
hlt
in
mov
mov
mov
rol
call
add
add
mov
in
aam
cs
add
int
cld
ret
sub
rcr
(bad)
jnp
test
inc
cld
and
and
jne
in
aam
adc
push
out
aam
xor
cld
repz
add
shl
jmp
mov
cmc
jp
jmp
add
add
outs
push
std
jae
jae
xlat
ror
mov
rcl
fadd
out
pop
cld
mov
cld
repz
add
stc
push
cmps
sub
add
and
test
mov
mov
fwait
mul
push
retf
scas
lods
fsub
imul
mov
inc
mov
add
add
loopne
ds
push
mov
or
inc
cld
pop
gs
shl
push
outs
adc
int3
test
push
pop
inc
idiv
mov
push
and
sbb
add
stos
inc
lea
retf
cwde
add
add
loope
and
mov
mov
test
inc
add
add
inc
fs
and
call
add
int3
and
mov
jmp
cld
ins
cs
adc
and
hlt
fiadd
call
pop
and
push
or
shl
pusha
add
pushf
test
fdivp
out
int3
hlt
inc
add
add
scas
inc
mov
jae
call
loopne
add
or
lock
lea
fwait
and
ror
call
fdivrp
out
cmp
or
sahf
fucomp
loope
and
push
mov
mov
(bad)
cmp
fimul
jmp
cmps
and
add
pushf
fld
add
add
jge
or
or
sbb
ss
sub
jmp
push
inc
add
add
adc
cld
add
jb
and
enter
mov
fild
mov
stc
(bad)
cmp
add
cmp
cli
jmp
or
inc
lock
stc
je
add
add
call
mov
dec
mov
enter
fstp
fld
add
xor
pop
ret
pop
and
jmp
in
dec
cmp
call
or
mov
xlat
jne
inc
loopne
js
xchg
test
jle
cld
xchg
pop
rcl
mov
or
add
add
add
hlt
xchg
inc
mov
fistp
test
pop
add
mov
sub
sbb
daa
cld
repz
call
in
mov
shl
call
lahf
xchg
jg
popa
clc
stc
push
pop
cmp
mov
ins
push
mov
rcr
loopne
dec
sbb
mov
add
add
out
stc
push
inc
mov
push
scas
(bad)
xchg
sbb
xor
xchg
sbb
lea
cmps
clc
test
add
cmp
sti
push
and
shr
cmp
mov
and
call
mov
jbe
int
inc
in
xor
sbb
add
add
dec
test
(bad)
sbb
inc
and
add
in
jb
dec
push
inc
mov
hlt
push
mov
rcr
(bad)
sub
call
popa
lahf
(bad)
push
das
shr
pop
inc
nop
aam
out
clc
sbb
sub
add
push
out
or
popa
pusha
sbb
pop
pop
ficomp
icebp
xchg
add
add
or
push
cmp
mov
cmps
stc
push
adc
sub
js
rcr
or
or
clc
add
sti
inc
pop
ret
inc
sbb
push
stos
sahf
sti
or
ret
or
or
das
or
push
xor
inc
cld
mov
sbb
pop
add
add
push
sbb
fld
sti
or
pop
add
cs
call
aaa
test
jno
adc
clc
repnz
(bad)
imul
mov
nop
cld
sub
shl
clc
push
stos
xchg
sti
or
add
add
cmps
add
pop
push
shl
cld
mov
add
aaa
mov
call
fst
je
xor
call
movs
clc
dec
inc
shl
clc
push
sub
add
int3
adc
repz
ret
or
adc
add
imul
mov
dec
xchg
les
movs
clc
call
popf
add
lock
add
pop
dec
mov
xor
sub
call
mov
repnz
or
ret
fdiv
inc
push
jg
adc
xor
(bad)
xor
cli
call
mov
ins
adc
xor
add
retf
stc
inc
mov
shl
ins
adc
xor
mov
mov
adc
ins
adc
xor
clc
inc
mov
lock
add
in
inc
mov
sub
or
push
fisttp
and
add
or
sub
mov
inc
jmp
mov
scas
push
add
test
push
dec
(bad)
jmp
das
xlat
mov
jns
pop
call
cmps
adc
mov
mov
test
inc
scas
add
add
or
and
repz
sub
add
mov
sti
(bad)
cld
sub
in
outs
mov
fs
sub
je
mov
or
lods
inc
movs
(bad)
rol
call
sub
jl
loope
adc
ret
lahf
rol
call
pop
add
add
lods
lea
dec
inc
and
rol
call
sub
pop
push
jb
jmp
cld
repz
push
sub
clc
dec
fs
ror
stc
call
movs
inc
push
popa
jmp
(bad)
jae
fbld
jmp
jb
mov
and
add
add
xchg
sbb
cld
test
test
push
hlt
repnz
clc
cmp
pushf
inc
add
pop
repz
shl
mov
pop
sar
dec
rol
call
lea
dec
lea
xor
mov
test
mov
jmp
or
out
add
add
add
clc
push
stos
pushf
sti
sbb
scas
inc
cld
jae
ret
or
fld
add
jl
mov
and
imul
clc
inc
push
inc
scas
mov
cld
repz
loope
adc
ret
mov
clc
push
fmul
cld
push
imul
sar
fild
push
in
inc
add
sub
jmp
pop
ret
(bad)
rep
pop
loopne
fwait
test
into
inc
cld
rcr
or
push
mov
test
mov
inc
cld
push
mov
push
nop
movs
je
mov
leave
push
in
enter
clc
call
sbb
pop
mov
xor
dec
pop
pop
mov
add
cwde
mov
inc
rol
jne
movs
clc
push
cmps
xchg
dec
mov
cld
repz
adc
adc
clc
push
xchg
(bad)
cld
or
push
popa
sub
adc
test
sti
(bad)
jg
mov
mov
mov
sbb
adc
and
or
add
clc
push
jp
sti
sbb
hlt
scas
imul
je
jo
jg
sub
push
(bad)
jmp
sbb
(bad)
fld
add
xchg
cmps
and
mov
pop
ret
or
sbb
add
xor
push
mov
mov
adc
in
jl
hlt
fadd
push
add
add
popa
cs
ds
jmp
(bad)
push
jno
ret
(bad)
shl
(bad)
sub
dec
inc
fdiv
jmp
clc
cmp
mov
test
movs
rol
idiv
je
dec
mov
pop
idiv
mov
inc
dec
shl
sub
add
jno
test
add
push
jne
stc
call
rol
idiv
and
dec
mov
out
add
mov
inc
in
pop
push
rcl
ret
fild
inc
and
fistp
fild
je
pusha
bound
test
mov
nop
adc
inc
add
add
aam
or
je
adc
repz
gs
ret
adc
call
sbb
add
add
bound
ja
test
pop
and
adc
inc
aam
idiv
and
add
std
repz
in
jb
fcomp
mov
fld
add
add
add
jmp
gs
adc
inc
retf
daa
push
loopne
(bad)
adc
idiv
iret
ja
cdq
pop
bound
test
(bad)
and
adc
inc
shr
add
je
inc
mov
mov
push
fisttp
dec
add
cld
repz
jp
and
or
inc
add
add
cmp
imul
stc
dec
test
sub
mov
add
mov
sub
stc
dec
inc
mov
rol
fistp
adc
cmp
mov
test
adc
cmp
call
out
or
call
add
pop
psubw
fstp
loope
dec
call
adc
int3
jg
cld
repz
and
adc
call
mov
pop
add
adc
call
push
fild
add
inc
hlt
pop
jb
int3
dec
push
cld
rcr
shl
pop
adc
stc
push
hlt
movs
inc
cld
add
add
retf
dec
or
call
js
inc
xor
inc
lock
fisttp
or
sub
jge
movs
sub
iret
shl
ror
inc
adc
fist
or
pop
popf
sub
test
pop
mov
inc
adc
fild
call
or
jns
rol
add
lock
addr16
xor
inc
aam
call
or
mov
or
push
daa
pop
mov
jae
stc
call
sti
mov
mov
cld
xchg
xor
out
stc
inc
xrelease
lock
add
(bad)
cmp
sub
mov
daa
mov
stc
cmp
add
add
and
mov
or
inc
dec
stc
mov
push
test
or
lea
mov
lea
clc
call
ja
mov
sub
call
aaa
movs
or
int3
inc
add
(bad)
or
push
push
sti
cs
dec
cld
adc
or
add
add
add
hlt
xor
into
fsubr
(bad)
shl
and
cmps
js
mov
clc
call
xlat
inc
scas
mov
xor
loope
daa
push
or
in
push
stc
push
mov
mov
mov
rcr
adc
xor
fstp
fld
push
popa
mov
inc
(bad)
push
popa
pop
pop
inc
add
add
sbb
sti
das
pushf
xchg
xchg
pusha
ret
or
je
inc
mov
mov
hlt
mov
les
or
sbb
push
mov
enter
clc
call
mov
sar
or
pop
dec
or
dec
mov
dec
(bad)
xor
mov
add
add
cld
xor
cld
adc
pop
add
daa
push
add
dec
adc
push
pop
fisttp
dec
inc
sbb
shr
pop
add
xchg
stc
or
shl
jmp
xor
mov
add
and
xchg
pop
inc
shl
pop
add
add
inc
add
and
xor
sbb
push
add
add
int3
scas
cmp
rcr
or
ins
mov
test
stc
(bad)
jmp
sti
xor
fadd
xor
push
call
cmps
mov
xor
hlt
fbstp
xchg
fild
into
int3
jmp
jecxz
test
in
inc
lea
push
stc
(bad)
jmp
ja
inc
add
add
xlat
rol
idiv
movs
pop
dec
mov
fcomip
jmp
push
dec
lock
pusha
ja
mov
jmp
cdq
inc
cld
pop
fild
add
fld
push
sbb
cmp
or
adc
imul
ja
aam
add
cs
popa
je
push
add
cmps
add
add
push
add
pop
sbb
xlat
add
gs
cmps
add
push
mul
mov
jae
inc
scas
movs
pop
mov
mov
dec
int3
imul
(bad)
idiv
pushf
fisubr
jp
push
or
push
pop
fisttp
dec
add
cld
ror
inc
mov
fdivrp
call
add
sti
repz
add
add
add
retf
adc
loopne
and
stc
imul
idiv
fisubr
jp
inc
add
push
mov
mov
fcomp
mov
(bad)
call
out
ja
push
add
inc
mov
call
fld
je
pop
bound
div
mov
stc
inc
add
add
hlt
jge
lock
inc
xchg
fld
je
adc
sar
inc
push
shl
call
jmp
sti
sub
fld
idiv
neg
xor
ins
adc
repz
clc
push
mov
mov
fcomp
cld
rcl
scas
hlt
or
shl
inc
in
stos
inc
add
add
stc
xlat
mov
popf
push
lock
xlat
mov
lock
je
mov
or
lods
inc
fs
inc
rol
xlat
lods
clc
clc
sub
pop
xchg
nop
sbb
dec
loope
dec
inc
add
sub
popa
(bad)
sti
jmp
adc
stc
pop
jle
pop
add
add
add
add
or
sbb
repz
imul
add
call
fcomp
popa
mov
call
sub
add
or
mov
nop
jl
and
adc
inc
shl
stc
push
mov
inc
cld
add
push
dec
rol
jne
add
add
pusha
jae
mov
mov
sub
inc
lock
fild
clc
inc
jl
sub
imul
adc
fild
dec
sub
dec
inc
hlt
sub
inc
rol
sbb
push
pop
inc
add
sbb
rol
ffreep
enter
add
add
pop
sub
push
and
loopne
pusha
idiv
push
daa
(bad)
mov
repz
call
stos
daa
mov
mov
sub
stc
push
out
fstp
lock
push
mov
loope
(bad)
mov
xchg
rol
mov
add
sub
add
jmp
mov
clc
inc
mov
xchg
cmp
dec
and
mov
jno
mov
dec
sub
push
out
int3
inc
adc
(bad)
sub
mov
inc
call
cmps
outs
test
jno
adc
mov
outs
or
repz
pop
add
add
add
cmc
hlt
out
loopne
jmp
cs
dec
sar
jg
adc
outs
add
stc
lea
stc
call
hlt
clc
mov
idiv
call
jl
mov
inc
std
xchg
cwde
push
mov
hlt
pop
xchg
sub
mul
xlat
add
add
add
sub
xchg
xlat
add
cmps
push
push
mov
push
or
(bad)
call
fcomp
fadd
add
sbb
xor
inc
mov
dec
call
jl
lods
inc
and
jae
fmul
fwait
and
loopne
add
or
cld
rol
rcl
and
retf
and
in
add
mov
cs
add
add
add
and
movs
fild
call
or
lods
inc
mov
jae
lods
out
and
add
and
inc
and
or
out
sub
add
jne
fwait
and
fiadd
add
imul
stos
idiv
and
arpl
add
pusha
dec
mov
sub
test
retf
add
add
add
fdivp
out
cmp
call
inc
in
mov
ins
loopne
add
fiadd
add
cmp
mov
enter
enter
mov
fistp
(bad)
add
lea
cmp
add
xor
sbb
jo
rcl
add
and
sub
fiadd
push
add
add
mov
pop
ret
or
adc
cdq
inc
jl
jmp
pop
or
gs
adc
dec
lea
dec
sti
push
jns
adc
jl
std
rcl
and
daa
xchg
cmp
call
not
mov
in
sbb
inc
push
and
jo
pusha
push
cld
xchg
sub
lea
add
add
sub
xchg
pop
add
lea
daa
call
sar
xor
shl
std
rol
inc
or
fld
add
or
xor
add
pop
dec
mov
and
cld
(bad)
clc
push
mov
push
add
xchg
push
push
test
ret
xor
push
add
add
inc
push
and
in
add
add
mov
inc
and
xor
push
cmp
das
dec
cld
xor
call
inc
jle
enter
je
pop
and
cld
jl
mov
inc
and
xchg
and
add
jne
mov
sar
inc
push
push
fwait
and
loopne
add
clc
paddb
ja
mov
add
add
pop
inc
(bad)
push
call
mov
rol
call
push
pop
loope
pushf
sbb
clc
push
rep
sbb
cli
pop
ins
pop
pop
test
out
push
xor
ins
push
and
movs
fild
add
cld
add
mov
or
inc
add
add
and
fild
add
jnp
sar
pop
cld
mov
test
fild
call
mov
and
mov
ins
inc
and
mov
jmp
push
dec
and
xchg
and
add
jmp
(bad)
loopne
leave
push
sub
jl
and
add
je
add
stos
repnz
cmp
pop
inc
and
lahf
sub
adc
jae
push
cld
dec
xor
nop
inc
push
loope
and
adc
rcl
mov
fs
icebp
imul
push
fwait
push
jae
xchg
repnz
adc
inc
push
mov
and
in
inc
sti
jmp
push
add
repz
jae
adc
push
xor
cld
jl
in
cmp
idiv
in
jle
in
add
sbb
(bad)
pop
ret
stc
push
jmp
mov
pop
dec
ds
mov
xchg
add
cmps
add
push
sbb
and
and
fld
add
idiv
(bad)
fild
add
add
jo
lock
pop
cwde
ficomp
mov
cmp
add
call
mov
mov
test
lods
idiv
in
call
push
dec
fisttp
jmp
lock
ins
ds
mov
xor
call
das
sahf
inc
(bad)
call
xor
add
add
add
sti
jmp
jb
xchg
fsubr
add
clc
push
loope
and
inc
sti
dec
inc
and
jae
sbb
add
lock
adc
pop
cmp
adc
mov
jg
hlt
ffreep
test
lods
idiv
in
call
push
add
add
popa
imul
stos
pop
and
mov
add
jae
and
add
in
inc
and
(bad)
outs
inc
lea
cmp
dec
dec
aas
rol
call
sub
jge
jne
jb
(bad)
rol
call
pop
dec
ins
jae
sub
add
add
add
adc
clc
je
dec
fcomip
push
cld
clc
pop
(bad)
loope
inc
fwait
imul
lock
push
shl
inc
push
jno
and
dec
sti
push
mov
sub
sti
push
mov
pop
fadd
add
jae
push
idiv
je
fild
test
xor
add
mov
add
test
scas
push
loop
test
aam
push
fiadd
add
clc
and
add
(bad)
cdq
jle
enter
in
push
push
test
ret
sub
push
inc
pop
and
in
add
add
mov
inc
or
sbb
pop
add
add
xlat
add
mov
xor
call
cld
mov
mov
mov
add
in
shl
fld
call
out
xchg
inc
lea
cmp
add
out
xor
inc
inc
inc
jnp
fwait
and
fld
add
adc
adc
mov
dec
xchg
idiv
hlt
hlt
inc
sbb
add
add
xor
inc
and
sahf
and
add
div
icebp
and
in
push
pop
les
sbb
dec
sti
call
mov
movs
push
mov
sub
add
imul
dec
or
inc
add
and
inc
add
mov
and
inc
add
sbb
pop
and
inc
add
sbb
pop
lock
add
int3
repnz
rep
fstp
pop
lods
idiv
xor
and
add
daa
hlt
rcr
jecxz
cmp
cmp
(bad)
push
(bad)
out
inc
sti
jmp
and
xor
pusha
and
and
add
hlt
dec
ror
sub
sbb
movs
fild
call
add
add
idiv
or
lock
lock
push
loope
and
das
sti
jmp
mov
add
cmps
mov
jmp
popa
adc
loop
pop
pop
daa
mov
mov
ffreep
arpl
clc
mov
push
das
mov
cmp
mov
cmp
lea
and
xchg
inc
add
add
and
sbb
sub
dec
idiv
mov
jae
cwde
repnz
push
nop
in
(bad)
fdivr
retf
add
push
addr16
mov
push
mov
xlat
add
cmp
jne
add
mov
sub
(bad)
mov
(bad)
xor
(bad)
clc
je
jp
push
fbstp
add
add
xor
clc
or
add
add
in
mov
rcr
add
int3
mov
pop
add
and
mov
add
sub
jmp
dec
dec
sti
push
dec
and
mov
jnp
mov
jae
push
jecxz
rol
jl
sbb
ins
add
add
jnp
mul
dec
inc
sti
jmp
dec
and
inc
sbb
repz
and
icebp
cmc
cs
dec
lea
xor
call
dec
and
sub
add
and
cmp
pop
jle
hlt
fadd
add
push
and
in
add
jo
lods
cs
jl
push
cdq
clc
je
sbb
je
add
add
sub
pop
lahf
in
push
(bad)
(bad)
mov
lock
lock
push
push
mov
xor
add
int3
in
cld
shl
adc
je
int3
jno
push
dec
mov
jmp
push
add
mov
lds
and
or
mov
xor
add
add
inc
idiv
hlt
pop
xchg
add
fild
mov
call
clc
lea
sbb
add
jle
enter
loop
clc
(bad)
call
xchg
and
ins
sti
dec
scas
inc
fs
movs
stc
and
add
jne
jl
rcl
jl
je
inc
and
stc
and
add
add
add
es
push
and
rcl
xor
loopne
add
rcr
cmp
sbb
call
jg
inc
lea
cmp
(bad)
push
fdivp
out
aas
sti
jmp
xchg
lds
cmp
add
sti
dec
fsubr
pop
(bad)
clc
pop
iret
div
and
and
out
add
add
add
sahf
jle
or
jl
adc
sbb
jl
sbb
test
dec
idiv
cmp
je
cmp
inc
dec
cs
and
fild
jo
pop
(bad)
push
fiadd
jmp
and
sahf
sbb
or
and
mov
cmc
mov
cmp
test
add
clc
cmp
call
mov
not
mov
idiv
movs
inc
dec
and
fs
pusha
sahf
out
add
mov
inc
and
iret
jae
pop
bound
mov
push
imul
loope
and
mov
xor
and
add
sub
add
add
pusha
inc
inc
and
sbb
popf
out
mov
pop
test
add
stos
inc
add
and
push
cld
adc
call
dec
mov
rol
call
push
and
je
add
outs
cmp
repz
ret
or
out
test
sbb
push
je
add
add
xor
and
clc
push
loope
and
and
add
aam
cmp
inc
mov
sbb
test
pop
add
(bad)
mov
inc
daa
shr
sub
xlat
add
inc
daa
lea
inc
addr16
xor
mov
lods
jb
xchg
enter
movs
shl
outs
or
pop
add
add
das
jmp
mov
mov
jmp
add
outs
ror
pop
repnz
inc
push
loope
and
dec
sti
jmp
loop
ud1
and
inc
retf
fwait
pop
mov
mov
jle
cld
add
lea
fucomi
push
xor
clc
push
stos
pop
mov
and
add
fsub
cld
shl
lea
add
add
(bad)
cmp
jae
cld
mov
add
stos
shl
adc
xor
test
loopne
add
and
dec
mov
sub
pop
sti
loop
inc
or
cs
or
or
rcl
sub
fiadd
add
repz
jae
xor
jne
add
add
adc
jl
pop
push
sbb
dec
push
dec
push
ror
int
and
mov
inc
and
(bad)
ror
clc
(bad)
cmp
mov
inc
and
call
mov
out
std
jae
jl
enter
pop
sbb
sti
(bad)
mov
aaa
clc
je
or
sub
repz
and
add
add
test
xor
test
cmp
test
cmp
xor
or
clc
(bad)
js
dec
call
dec
jo
add
fld
call
lahf
sbb
and
and
cmc
fadd
fs
add
in
dec
pop
and
idiv
in
retf
call
das
add
add
add
das
push
and
sbb
scas
inc
movs
shl
pop
and
je
and
ret
clc
call
adc
call
push
std
(bad)
pop
cmp
call
popf
in
and
mov
and
mov
and
mov
and
rol
lea
cmp
and
dec
sbb
push
add
add
or
je
in
addr16
out
push
push
adc
fcomp
fild
add
pop
jmp
in
add
(bad)
fwait
jle
enter
movs
outs
push
push
push
sbb
inc
mov
ret
push
and
cmp
fiadd
add
or
push
inc
dec
fild
jge
not
dec
and
add
add
fld
adc
rep
jl
sbb
paddb
mov
and
pop
clc
inc
call
xor
cmp
xor
push
aaa
or
jecxz
hlt
fsubrp
or
xor
mov
jge
int3
or
(bad)
jae
inc
and
pop
mov
fidiv
imul
xlat
call
push
push
fisttp
jmp
push
shl
jl
sbb
dec
ja
add
sub
je
cmp
pop
xor
xlat
add
sbb
adc
add
addr16
movs
inc
add
jl
jmp
add
sbb
repz
mov
sbb
add
add
pop
fild
add
jae
popa
pop
clc
lea
cmp
mov
call
data16
and
cmc
push
add
movs
or
xbegin
fld
add
mov
cmp
test
sbb
jmp
neg
cmp
xor
mov
and
fadd
add
add
add
adc
adc
lea
fld
js
aas
add
fdiv
out
xor
push
push
test
cmp
add
fdiv
out
xor
call
and
in
test
mov
jmp
mov
mov
add
mov
adc
xchg
popf
and
add
js
pop
and
dec
clc
call
sub
add
add
mov
sbb
fadd
call
loope
and
dec
and
loope
and
call
cmp
add
les
call
cli
scas
pop
and
mov
and
mov
and
shr
dec
shl
inc
or
or
inc
or
jl
sbb
mov
jle
add
add
enter
cld
jecxz
mov
cmp
mov
cmp
mov
cmp
lea
bndstx
cmp
sti
(bad)
call
fld
add
pop
and
pushf
dec
cld
adc
mov
pushf
idiv
xor
cmps
or
loope
(bad)
je
and
add
fs
and
imul
dec
addr16
hlt
fld1
fadd
add
add
add
in
inc
push
jno
and
stos
pop
and
fiadd
or
popf
das
cld
jae
jae
mov
mov
fld
add
ret
sbb
jecxz
(bad)
sbb
push
jae
sub
call
mov
add
or
jmp
cmc
pop
(bad)
clc
add
add
or
add
push
push
ror
(bad)
mov
fiadd
call
mov
(bad)
or
and
rcl
sbb
in
shl
cmp
shl
fdiv
pop
and
js
inc
mov
cmps
adc
push
push
inc
popf
and
movs
fld
call
inc
pop
and
jl
adc
add
add
adc
jae
mov
jecxz
push
mov
mov
jo
add
int3
arpl
sti
shr
(bad)
fmul
add
jno
aad
push
cmps
cmps
mov
loopne
add
sbb
cld
sti
add
mov
fld1
push
pop
aad
push
cmps
sar
std
repz
(bad)
mov
and
push
imul
aam
lea
add
add
cmp
call
or
int3
in
and
jae
clc
jmp
mov
and
push
clc
(bad)
clc
cmp
inc
and
jl
adc
add
jae
dec
mov
(bad)
call
fadd
test
sbb
push
push
mov
jg
pusha
mov
mov
jge
dec
cmp
call
add
add
inc
aad
push
mov
and
rol
or
jecxz
push
movs
mov
je
add
fcomp
fisubr
inc
fwait
inc
add
ror
fistp
fild
add
mov
loopne
add
fistp
pop
aam
mov
shl
inc
clc
push
jnp
inc
add
idiv
fist
shl
lds
and
nop
and
jp
inc
jmp
outs
mov
dec
xchg
add
fiadd
mov
sub
movs
inc
and
mov
and
or
and
pop
jmp
jnp
mov
call
push
add
add
sbb
and
movs
and
movs
fiadd
mov
cmp
add
mov
cmp
add
mov
nop
idiv
je
mov
fild
add
jle
or
jle
or
and
add
xor
loopne
jae
ja
push
mov
fld
call
add
add
pop
fisttp
push
outs
and
stos
test
add
mov
ins
pop
add
and
pushf
mov
jae
enter
lods
fiadd
add
(bad)
popa
adc
loopne
jmp
mov
test
fld
push
sub
add
int3
retf
(bad)
sti
shr
add
test
add
add
add
int3
inc
(bad)
sti
repz
push
lea
fst
fbld
sti
call
fadd
test
rep
add
fmul
mov
test
hlt
fdiv
popa
push
adc
in
add
mov
or
movs
fdivr
in
mov
lea
test
movs
fsubr
and
add
add
mov
sub
pop
movs
lahf
dec
jne
lock
test
fadd
inc
stos
jmp
mov
movs
and
add
dec
adc
add
and
popa
out
jmp
pusha
xchg
add
add
je
jmp
retf
jmp
pop
adc
hlt
fild
push
xlat
push
jge
add
add
or
adc
test
push
adc
movs
fild
add
jb
(bad)
xchg
pop
xor
shl
jne
push
fs
mov
mov
loopne
mov
push
pop
loopne
mov
test
add
or
(bad)
dec
movs
and
fild
add
mov
cld
repz
jmp
add
lods
add
or
test
test
and
jae
jno
adc
hlt
fiadd
sub
or
jmp
pop
and
add
rol
add
push
mov
fild
add
je
push
push
adc
mov
add
mov
hlt
test
je
jge
jne
jge
or
add
fs
adc
fsubr
add
add
dec
cmp
and
je
mov
xor
lock
fprem
push
in
add
outs
push
adc
hlt
fld
call
dec
pop
cmp
sbb
hlt
fld
add
fnstenv
sar
dec
mov
add
movs
fld
cmp
xor
add
add
std
mov
movs
fincstp
test
lods
inc
push
icebp
pop
adc
je
add
pop
jge
or
push
adc
fld
loope
adc
fld
push
cli
pop
adc
xor
cmp
sti
adc
adc
xor
xor
adc
and
mov
lea
in
add
fdivr
add
add
in
jge
sbb
add
hlt
xor
adc
and
test
jo
add
push
inc
push
adc
movs
fadd
inc
in
movs
and
fild
add
cld
adc
and
fild
add
xor
movs
mov
add
sub
sub
mov
sbb
add
mov
add
dec
nop
jge
dec
loopne
je
(bad)
call
mov
or
jo
xor
mov
sti
and
sub
sub
setle
jmp
adc
pop
fwait
adc
pop
fwait
adc
xor
adc
cmp
sub
movaps
fs
aaa
loope
add
push
lea
add
add
sti
pop
add
retf
imul
jge
or
add
fs
jge
or
lods
add
cld
out
in
in
jmp
fild
push
fs
je
mov
add
je
je
sub
add
loope
lds
lock
je
xchg
jge
sbb
add
ss
dec
shl
add
jmp
push
add
add
nop
add
call
push
mov
enter
enter
je
call
xor
add
mov
je
jge
or
jge
or
add
xor
jge
or
jmp
fiadd
push
fs
je
mov
add
add
add
je
je
sub
add
loop
inc
xor
and
or
hlt
mov
(bad)
clc
repz
push
(bad)
out
mov
and
push
jl
js
add
in
fcmovnb
sub
mov
call
(bad)
and
gs
fs
xor
inc
push
push
movs
and
add
add
cmc
sti
add
adc
sbb
cmc
sti
adc
and
fiadd
add
pop
adc
and
nop
cmc
sti
repz
fs
xor
shl
mov
sub
test
out
jmp
jmp
adc
sbb
cmps
inc
movs
xor
or
add
add
enter
mov
out
call
imul
call
push
movs
and
(bad)
add
int3
and
sti
ror
add
icebp
cmp
out
push
cmps
push
movs
and
xlat
add
sbb
hlt
sti
add
add
and
call
push
cmps
push
movs
and
fadd
add
sbb
sti
ror
add
mov
call
push
not
nop
fild
add
outs
hlt
sti
jae
push
jmp
das
xchg
push
and
enter
movs
xchg
push
lea
shr
(bad)
call
je
rcr
add
je
mov
add
xor
pop
sahf
and
add
add
dec
pop
add
xor
xor
jmp
adc
or
out
push
stos
mov
or
push
sub
and
sbb
fiadd
add
xor
add
and
pushf
or
add
sbb
ins
xor
mov
cld
sti
xchg
mov
fdivr
add
je
call
push
add
add
mov
fadd
add
and
cld
ror
inc
add
icebp
aaa
es
push
fwait
push
movs
and
xlat
add
sbb
add
add
add
push
and
dec
sbb
add
xor
sub
push
pop
fnstcw
sbb
add
xor
add
and
mov
mov
jge
add
add
or
add
movs
xor
cmp
aam
fld
push
xchg
jge
pop
pop
add
je
rol
lock
or
add
test
sbb
add
inc
or
push
pushf
out
call
add
rol
(bad)
hlt
fwait
inc
lea
mov
add
movs
xlat
in
jmp
adc
sub
adc
jecxz
or
test
sbb
add
mov
jnp
and
jmp
das
lods
adc
sbb
cmps
inc
movs
xor
and
push
xlat
jge
enter
movs
xor
add
and
jge
or
add
add
and
inc
or
mov
add
add
or
popf
test
mov
fadd
xor
das
imul
and
inc
mov
pop
aam
mov
push
fs
add
in
sub
xchg
(bad)
mov
and
mov
push
push
sbb
vpandn
(bad)
hlt
fs
mov
aas
add
add
add
movs
fisttp
or
mov
add
pop
xor
mov
fs
imul
adc
int3
push
and
adc
push
loope
out
fild
cmp
inc
dec
pop
inc
stos
lods
xor
popa
dec
adc
in
add
or
in
call
add
add
fiadd
mov
cs
xchg
adc
sar
mov
push
call
out
add
movs
fsubrp
adc
out
mov
mov
add
call
push
(bad)
cmp
sbb
mov
jge
or
xor
ret
adc
pushf
mov
inc
and
ror
pop
je
ins
fld
add
jnp
sbb
adc
punpckhbw
add
in
out
frstor
inc
adc
in
add
xchg
in
call
cmp
fld
movs
fld
add
adc
movs
fld
pop
movs
fld
in
cwde
adc
je
add
call
add
add
test
mov
rcr
push
push
xor
mov
sub
add
push
mov
fld
push
jmp
add
and
cld
add
adc
in
add
fsub
fs
mov
lea
test
in
jge
mov
jge
or
add
add
add
movs
xor
or
pushf
add
mov
mov
push
adc
and
fild
add
sub
cld
rcr
and
fild
add
xor
movs
lods
mov
sbb
sbb
call
pushf
add
xor
mov
jge
dec
les
fsub
call
add
les
xor
xor
cmp
sub
sbb
xor
ffreep
in
jmp
lahf
adc
cmp
lahf
adc
xor
adc
sbb
add
sti
add
psubsb
add
and
xor
inc
ror
lea
mov
fs
mov
add
add
cli
stos
jge
or
and
jge
dec
mov
cmp
xor
mul
pop
imul
jmp
fiadd
push
movs
pop
je
fs
add
je
sbb
add
in
xor
je
int3
jge
sbb
add
mov
add
les
mov
push
inc
xchg
adc
sbb
adc
add
add
jl
add
add
pop
(bad)
call
(bad)
out
(bad)
push
mov
lea
and
fild
add
arpl
and
add
sti
add
in
push
adc
call
test
jne
repz
jmp
jno
adc
hlt
fld
push
add
add
popa
pop
adc
in
add
popf
adc
and
and
mov
fld
add
push
push
push
adc
movs
fld
or
inc
and
xchg
jl
add
add
movs
cwde
cmp
mov
mov
or
(bad)
mov
mov
adc
sbb
out
sti
add
add
fs
jnp
jge
fcom
add
xor
out
add
je
enter
add
(bad)
cmp
cmp
js
in
jmp
les
mov
call
push
neg
and
fild
add
push
(bad)
fadd
nop
add
or
mov
movs
and
fild
add
add
add
add
sti
shr
call
inc
mov
dec
xor
sbb
idiv
adc
and
xor
adc
call
xor
aaa
cdq
mov
add
lahf
jge
sbb
out
mov
les
clc
ret
add
xor
test
fild
push
push
adc
add
add
movs
fild
or
pop
xor
outs
out
sti
add
adc
fild
call
stos
xor
rol
push
call
scas
sbb
add
mov
pop
mov
adc
and
ss
sbb
add
mov
add
add
pop
aam
pop
add
xor
add
scas
sub
daa
stos
inc
mov
xlat
sbb
sub
mov
mov
and
mov
les
pop
mov
adc
mov
mov
fadd
add
ucomiss
shr
jge
sbb
add
and
add
out
mov
cmps
jge
dec
mov
test
add
and
call
xor
lods
aaa
push
stos
pop
adc
in
add
int3
inc
in
sti
shl
jge
or
call
push
inc
dec
adc
movs
fld
(bad)
cmp
add
cs
(bad)
cld
mov
add
je
movs
and
fadd
add
pop
adc
fld
add
pop
cmc
sti
rcl
jge
or
je
xor
push
mov
xchg
cmp
js
je
lock
add
xor
add
xchg
lock
mov
mul
call
repz
adc
int3
sti
add
rol
and
add
add
mov
push
sbb
add
pushf
mov
inc
lea
mov
call
push
sub
je
cmp
add
gs
std
mov
mov
adc
fcomp
sar
lea
sahf
in
push
xor
inc
add
add
adc
adc
pop
adc
hlt
fild
pop
fmul
pop
cld
shr
call
push
fnstcw
or
mov
sbb
add
out
mov
mov
and
pusha
pop
test
iret
add
dec
repz
call
dec
jl
add
add
or
mov
or
add
sub
cmps
push
sbb
in
sti
adc
adc
add
je
scas
call
pop
outs
or
mul
imul
call
add
(bad)
in
in
jmp
or
xchg
adc
in
add
idiv
mov
pop
pop
adc
push
mov
imul
xor
xchg
nop
xor
pop
add
jge
hlt
imul
(bad)
std
mov
add
popf
pushf
add
(bad)
mov
leave
out
lea
pushf
push
mov
xchg
ins
cld
sbb
push
inc
mov
in
add
sub
sti
adc
lea
out
je
xchg
repz
push
add
add
popa
(bad)
movs
call
sbb
mov
xor
inc
jb
push
inc
xchg
xchg
add
(bad)
stc
add
out
add
push
stos
jge
les
out
dec
inc
lea
mov
rcl
call
(bad)
jmp
test
sub
pop
add
hlt
sbb
add
fld
add
ins
push
(bad)
imul
out
inc
dec
jne
repnz
out
add
fadd
inc
(bad)
add
je
jne
shl
out
mov
out
inc
xchg
adc
lea
imul
jmp
les
call
cmc
out
dec
add
repz
inc
mov
cwde
dec
xor
add
hlt
mov
je
xor
inc
add
fbld
xchg
out
sub
mov
mov
cmc
mov
adc
fbld
cdq
sbb
jp
add
(bad)
jns
call
pop
pop
loopne
add
movs
call
stos
pushf
in
or
fild
mov
add
add
out
push
lods
or
out
lea
in
inc
add
call
push
add
add
mov
call
std
rol
jge
mov
pop
push
(bad)
rol
call
mov
xchg
repnz
mov
mov
adc
out
(bad)
sar
inc
add
add
xchg
movs
jo
add
call
push
fadd
add
xchg
sub
shr
ins
stc
iret
add
shr
pop
movs
fiadd
cmp
push
inc
cmp
(bad)
xchg
add
adc
out
lea
dec
push
(bad)
jmp
cmps
mov
test
add
add
jmp
repnz
mov
je
test
add
call
ins
xchg
push
mov
add
pop
dec
xor
stc
out
add
jmp
mov
shl
push
push
xor
xor
jae
call
push
sti
nop
movs
and
add
add
idiv
jmp
in
shld
cmp
jo
adc
xchg
jge
jo
out
(bad)
fcomp
sti
ret
stos
inc
jmp
loope
movs
push
loope
sar
add
push
call
sahf
add
iret
xchg
jne
add
out
call
inc
mov
xor
add
mov
and
add
add
cld
out
(bad)
sub
add
jmp
movs
push
xor
(bad)
jae
mov
xchg
add
xchg
in
pop
mov
adc
or
dec
mov
test
cli
out
jmp
xor
and
jo
mov
(bad)
sar
dec
lea
push
xor
push
repnz
pop
pop
add
add
sahf
std
jl
in
mov
adc
fist
sub
push
jnp
movs
inc
add
out
call
aaa
ret
jge
cmp
dec
cmp
sti
ror
inc
lea
out
call
cli
push
push
popa
fs
jae
out
ins
es
(bad)
stc
sti
add
mov
cmp
movs
call
ins
ror
stc
inc
add
add
stc
cmp
jb
pop
sti
jl
and
push
or
dec
scas
jnp
dec
loope
shr
jnp
in
dec
in
inc
or
(bad)
je
xor
inc
jno
sub
repz
out
out
out
push
push
cmp
(bad)
sub
or
push
and
add
stc
sti
add
add
add
shl
call
sti
ss
jmp
cld
out
test
(bad)
jmp
cld
out
ror
out
inc
and
arpl
push
rcl
sar
out
cmps
cld
out
pop
movs
push
jne
repnz
out
push
je
xor
and
std
add
push
lock
push
lea
add
add
in
push
leave
mov
lock
into
out
out
mov
mov
mov
rol
dec
in
push
test
push
and
inc
push
fistp
jmp
pushf
out
push
lock
sti
pop
mov
jge
ret
(bad)
test
mov
add
ds
jl
and
xor
jmp
sti
adc
inc
(bad)
leave
in
call
icebp
pop
test
ins
xor
add
fisttp
and
cmp
out
inc
mov
jge
inc
and
adc
and
je
jb
(bad)
jmp
arpl
cdq
mov
out
push
int
jne
add
add
test
and
call
sub
add
fcmovu
add
fsubr
loope
(bad)
inc
and
out
(bad)
imul
ret
inc
and
gs
dec
out
add
push
popa
gs
push
and
(bad)
out
push
iret
int3
push
add
add
dec
fnstcw
loopne
out
(bad)
mov
sbb
add
sbb
push
push
fnstcw
adc
out
(bad)
jl
out
adc
push
ins
gs
push
out
repz
push
jne
(bad)
shr
call
test
and
add
sti
sbb
ret
xor
call
imul
xchg
in
or
leave
out
adc
jo
and
call
(bad)
cli
call
jne
push
push
jge
shl
out
call
stos
call
mov
push
movs
or
sti
mul
imul
or
adc
call
(bad)
jmp
(bad)
jmp
add
and
add
psubsw
pop
mov
fidivr
enter
push
lock
out
and
lods
xchg
add
adc
xor
std
mov
inc
dec
enter
add
in
jge
adc
out
(bad)
mov
add
rol
pop
push
push
cmp
(bad)
jmp
add
add
sub
call
and
mov
movs
cmp
and
call
sti
jne
lea
out
push
hlt
mov
out
pop
inc
push
push
gs
lahf
in
rcl
xor
add
mov
jge
xor
push
lea
mov
out
push
mov
and
add
lock
dec
icebp
and
lea
ins
push
mov
fadd
call
lock
jb
pop
pop
push
and
xor
jp
in
sub
out
push
(bad)
(bad)
jge
shl
dec
push
loope
and
ret
and
std
mov
xlat
jge
fsubr
icebp
hlt
add
add
jmp
inc
lock
add
ins
lods
and
je
xor
add
adc
adc
in
push
push
jne
repnz
lea
adc
adc
call
retf
jge
je
out
push
out
jmp
and
mov
aas
sub
jnp
and
test
lea
jne
add
add
adc
out
push
(bad)
sbb
fcomp
jne
repnz
cs
call
mul
out
psubsb
add
inc
fmul
xor
loope
sub
repz
cmp
push
out
push
push
cmp
cld
inc
repz
push
sbb
cld
jmp
dec
hlt
out
and
push
pop
fsubr
jno
cmp
and
or
add
add
and
(bad)
sub
push
add
push
fsubr
and
inc
and
(bad)
jmp
fidivr
ret
loope
cwde
push
add
std
shl
call
dec
and
in
retf
mov
push
movs
ins
repnz
lea
push
call
scas
jle
std
add
add
adc
out
jmp
and
out
push
push
add
ret
push
movs
js
and
mov
out
call
and
mov
movs
out
push
imul
xor
cmp
inc
dec
js
adc
cld
jbe
out
mov
retf
jge
sbb
out
(bad)
fcom
repnz
add
add
ret
push
mov
fwait
push
movs
inc
shl
out
(bad)
test
es
jmp
in
call
jno
mov
imul
cld
imul
dec
movs
ins
repnz
push
fdivr
or
ret
enter
imul
and
xor
dec
xlat
jge
call
call
pushf
mov
push
inc
imul
xchg
and
adc
dec
mov
lahf
add
and
mov
int3
dec
imul
shl
push
push
gs
int3
hlt
icebp
sti
repz
jne
icebp
and
push
jmp
cld
adc
push
mov
and
out
mov
out
inc
add
add
pop
call
pop
mov
xchg
cld
adc
or
push
popa
mov
call
daa
jl
add
cmp
stc
out
ja
adc
pop
in
test
push
pop
jle
call
mov
pop
daa
sub
adc
push
pop
fist
fucomip
push
cld
adc
or
push
add
add
loope
(bad)
call
cmps
jnp
add
out
aaa
xchg
adc
pop
ins
test
push
push
notrack
mov
push
out
rcl
ret
push
pop
out
push
sub
call
or
push
popa
stos
(bad)
call
daa
fwait
in
add
cmp
stc
out
not
adc
pop
in
test
push
add
add
(bad)
icebp
call
mov
push
cmps
sub
adc
push
push
cmps
pop
test
call
mov
gs
inc
call
stos
mov
hlt
fs
add
call
xor
mov
add
xor
xor
ins
stos
in
or
fs
add
add
hlt
(bad)
jge
push
adc
inc
mov
in
add
push
jl
icebp
sti
adc
xor
les
cmovae
stos
test
dec
adc
(bad)
out
xor
loope
adc
xor
lods
push
fnstsw
sti
jmp
pop
push
les
push
cld
xor
pop
and
ret
push
add
add
bound
call
aad
mov
iret
pop
xor
js
or
call
sub
je
inc
and
jmp
push
jns
add
loopne
shr
push
(bad)
in
add
push
mov
(bad)
repz
mov
mov
add
add
add
xor
cli
lock
or
push
pop
movs
js
or
add
sbb
sti
jmp
icebp
mov
xchg
pop
mov
fsubr
xlat
or
out
push
or
into
ror
movs
mov
jne
or
call
and
or
in
adc
lahf
xor
adc
add
add
das
movs
lods
mov
push
cwde
add
scas
push
call
out
or
add
pop
ins
les
mov
out
jmp
dec
push
call
xchg
inc
and
xor
push
scas
push
push
or
or
and
xor
(bad)
outs
xchg
enter
pusha
mov
add
add
pop
jl
inc
hlt
adc
mov
fstp
mov
or
inc
ins
pop
out
es
ret
push
fistp
fucomip
pop
retf
mov
fisttp
push
icebp
mov
mov
xor
or
or
pop
jmp
jge
sub
cld
int3
addr16
shl
movs
(bad)
jns
add
add
cli
inc
add
add
sahf
(bad)
call
scas
adc
sar
ins
(bad)
pusha
mov
sti
sub
push
pop
fnstcw
mov
or
(bad)
int3
pop
push
std
shl
push
mov
lock
sar
xlat
dec
push
(bad)
icebp
push
mov
adc
je
cmp
call
sub
xchg
add
rcr
jge
sub
lea
or
mov
pop
shl
pop
mov
fldpi
add
xor
pusha
idiv
or
and
scas
(bad)
add
call
cmps
xchg
je
in
mov
call
pop
stos
cld
mov
clc
push
add
mov
mov
leave
ror
stos
pushf
(bad)
jmp
fsubr
push
adc
out
mov
push
cmp
xchg
adc
dec
xor
fsub
out
ret
jo
jmp
je
xor
loope
inc
and
out
push
rcr
jecxz
and
jge
int3
sbb
add
and
and
cmc
pop
gs
fcomp
fdivrp
shr
fs
and
mov
es
mov
push
push
jae
pushf
inc
inc
xchg
(bad)
call
das
pushf
mov
jmp
sbb
add
pop
push
push
fld1
mov
and
jge
jl
outs
out
mov
add
add
push
cmp
scas
adc
push
mov
add
xor
push
and
push
push
jnp
xor
imul
xor
movs
jp
add
fiadd
push
adc
lock
retf
out
mov
les
mov
imul
imul
xor
add
add
(bad)
pop
add
cld
add
sub
add
mov
or
(bad)
fistp
push
mov
sbb
mov
push
call
add
sti
inc
add
sub
sti
adc
jge
enter
fldenv
mov
add
add
fld
add
add
sbb
iret
xchg
pushf
add
dec
adc
dec
movs
inc
mov
fs
adc
mov
and
mov
add
fld
call
dec
(bad)
sub
nop
js
jno
and
push
ror
add
in
add
scas
das
mov
dec
shl
and
call
push
xchg
add
in
push
inc
in
dec
and
adc
in
mov
pushf
add
(bad)
or
jmp
push
push
mov
fld
add
push
(bad)
(bad)
mov
xor
cmp
in
ret
adc
mov
(bad)
add
add
repz
js
test
jge
sbb
(bad)
mov
test
iret
sub
add
push
out
repz
add
sbb
add
in
adc
(bad)
jl
movs
inc
hlt
je
and
adc
xor
mov
or
fild
call
fsubr
jnp
push
adc
add
add
xlat
mov
call
push
inc
lahf
adc
jl
in
adc
push
out
xor
add
sbb
out
push
xchg
add
je
inc
jo
and
adc
jmp
push
lea
pop
sti
jmp
sbb
jo
idiv
and
push
test
add
jmp
add
fnstenv
jge
adc
int3
in
sti
ror
jge
or
fbstp
mov
out
mov
mov
imul
add
add
sbb
sbb
scas
add
pusha
push
sti
call
inc
fs
adc
hlt
mov
outs
mov
add
fiadd
call
sahf
fisubr
jmp
stos
and
mov
call
push
jno
adc
or
repz
repz
and
in
push
jo
push
outs
xor
mov
and
push
pop
(bad)
mov
and
dec
and
adc
hlt
dec
lods
add
add
add
cs
call
sbb
mov
xor
adc
idiv
adc
and
dec
fidiv
add
mov
pusha
mov
xchg
cld
mov
fnstcw
dec
add
addr16
and
mov
test
iret
jmp
adc
and
add
cld
test
add
sbb
pop
adc
call
add
add
dec
mov
fs
adc
jg
mov
and
mov
adc
sti
dec
fsubr
imul
(bad)
out
mov
call
push
loope
adc
int3
(bad)
repz
shl
push
fbld
inc
or
adc
xor
call
push
xchg
add
and
iret
inc
add
add
xor
dec
and
adc
jmp
add
and
sti
(bad)
jg
push
mov
out
idiv
hlt
pop
mov
add
loope
add
ret
adc
pushf
dec
jmp
fistp
enter
push
push
out
mov
mov
mov
fild
add
pop
in
add
add
rol
sahf
pop
sahf
add
cwde
add
cmps
inc
xor
fs
or
out
and
(bad)
push
fild
call
mov
push
sub
or
daa
loopne
pop
or
out
push
popa
mov
mov
fs
das
xor
add
ret
movs
fsubrp
pop
mov
push
test
(bad)
movs
inc
fadd
gs
and
or
jmp
call
call
out
sub
and
xor
jo
idiv
xor
fdiv
jmp
push
sahf
fnsave
add
xor
cwde
mov
fidivr
fdiv
fmulp
add
add
add
lods
mov
stos
test
add
int3
push
repz
rol
add
adc
call
cmps
inc
mov
fs
add
mov
hlt
bound
sbb
call
pop
(bad)
cmp
out
div
sub
mov
add
add
push
xor
loope
adc
sbb
icebp
sti
adc
scas
das
mov
dec
rcr
and
call
push
add
hlt
cmps
out
in
dec
and
cmp
mov
xchg
add
fisubr
sti
jmp
push
push
mov
retf
movs
xor
repz
push
push
fbstp
add
add
add
int3
jmp
mov
fdivr
or
call
mov
nop
mov
sub
add
sub
sti
repz
add
pusha
add
lock
sti
(bad)
jl
cmps
inc
and
fs
xor
lock
mov
xor
mov
sbb
fild
call
add
add
ds
add
fisttp
test
mov
xor
xor
lock
xchg
push
mov
pop
or
add
xchg
and
add
je
call
and
xor
iret
sbb
retf
sahf
add
sahf
sub
(bad)
mov
adc
add
add
jo
add
and
inc
bndcu
add
adc
pop
loopne
add
mov
sub
sub
jge
or
call
mov
mov
imul
add
add
adc
mov
lock
call
or
cmps
inc
fs
fs
cmp
out
add
add
mov
push
mov
and
call
dec
fisubr
jmp
and
pop
pop
mov
out
push
mov
or
sti
repz
mov
jg
mov
or
hlt
fld1
mov
in
add
in
fadd
push
dec
and
cmp
pusha
add
add
pop
popf
add
xor
call
adc
arpl
and
(bad)
idiv
je
mov
out
sbb
pop
fidiv
add
cmps
xlat
sti
rcl
mov
aad
add
pop
pop
push
mov
int3
mov
mov
je
mov
sbb
int
enter
add
add
call
fcmovne
out
cmp
add
fadd
pop
loopne
pop
pop
clc
jg
or
mov
xor
fnstenv
and
add
pop
and
push
inc
and
push
xor
fs
shl
test
cmps
push
fldenv
mov
pop
icebp
add
and
add
add
or
jmp
pop
or
scas
retf
adc
cmc
and
call
adc
push
add
fcom
and
sub
call
and
jl
dec
and
add
adc
int3
mov
mov
jmp
fwait
adc
mov
push
inc
and
sub
neg
fadd
sbb
mov
add
add
out
call
dec
out
test
push
mov
or
and
sbb
push
sub
mov
add
add
xchg
jns
dec
adc
outs
mov
outs
fwait
adc
mov
rcr
mov
rcr
out
add
mov
mov
sbb
add
add
fcmovnbe
jb
jecxz
and
cmps
or
jecxz
and
test
sub
repz
clc
repz
sub
repz
sub
push
dec
jge
out
(bad)
sbb
jg
ret
mov
int3
and
int3
and
int3
stos
mov
repz
xor
cmp
sar
mov
out
sti
add
add
and
xor
cmp
and
push
xor
rcl
sar
mov
out
retf
add
and
push
inc
and
aam
jne
push
cmp
fcom
mov
push
fmul
test
in
fmul
sub
or
fisttp
fmul
pop
stos
in
add
add
lds
test
xor
pop
sub
add
stc
or
stos
idiv
js
push
jbe
(bad)
xor
lahf
push
aas
jne
sub
neg
fiadd
lahf
jle
ret
mov
int3
daa
mov
rcr
mov
mov
xor
jnp
mov
aas
pushf
adc
fwait
es
add
add
(bad)
xchg
mov
das
test
pop
mov
pop
pushf
adc
movs
cs
movs
xor
fdivr
gs
fld
mov
retf
mov
mov
out
addr16
jb
aas
nop
adc
jnp
jb
das
mov
ds
push
mov
pop
push
adc
mov
cmp
jmp
adc
popa
xchg
cld
mov
je
enter
add
mov
std
ret
arpl
cmp
sti
dec
out
call
sub
inc
inc
mov
push
pop
xchg
and
jne
xor
add
and
out
mov
loope
cld
mov
retf
ret
bound
fucomi
stc
cmp
mov
es
mov
add
add
mov
out
call
mov
xor
push
adc
jge
loopne
dec
in
adc
rcl
and
mov
int
push
std
rcl
or
push
ins
in
int
loope
jae
xor
jecxz
and
mov
sti
dec
call
in
inc
add
add
dec
inc
xor
shl
jecxz
and
push
or
jge
pusha
dec
dec
rol
jp
and
mov
xor
sbb
out
cld
add
dec
imul
out
mov
pop
loopne
jecxz
adc
in
and
push
movs
aam
and
jmp
cmps
push
inc
and
add
add
mov
enter
cld
adc
(bad)
adc
es
and
xor
std
repz
gs
sub
inc
and
push
inc
or
mov
xor
add
adc
dec
add
mov
jmp
loop
add
inc
lock
loopne
and
inc
add
add
and
mov
xor
in
and
mov
cld
dec
call
in
dec
sahf
adc
js
test
outs
and
push
fcom
jge
rcl
push
adc
mov
cs
enter
cld
repz
xor
test
and
lea
add
add
add
(bad)
and
mov
dec
jmp
in
jmp
dec
adc
fs
xor
(bad)
jge
fmul
jl
cld
mov
jne
mov
jne
pop
mov
mov
data16
aaa
mov
cli
(bad)
aas
or
cmp
or
add
add
pop
loop
xchg
mov
pusha
mov
fild
jmp
out
or
sub
mov
loope
xchg
mov
jnp
pusha
dec
in
push
cmps
jmp
mov
or
data16
cmps
jle
je
pop
push
loopne
fs
dec
loopne
rcr
add
call
dec
aam
cmps
jmp
mov
int
add
loopne
add
cmp
add
mov
push
loopne
fs
jge
aad
add
jnp
and
pop
test
mov
xchg
out
mov
mov
gs
mov
add
test
add
and
push
loopne
add
add
gs
or
popf
mov
jnp
and
aam
movs
jmp
mov
fstp
nop
int
loope
shl
mov
mov
fs
neg
sti
jae
fs
popf
out
(bad)
and
(bad)
out
sti
xchg
bound
(bad)
sti
add
mov
xchg
loope
add
add
repz
fs
fisttp
fs
int
loope
shl
nop
mov
bound
mov
sti
repz
fs
sbb
fs
and
bound
lahf
bound
adc
in
cld
repz
dec
clc
pop
cwde
jmp
mov
int
adc
rcr
or
pop
or
add
add
cmps
or
(bad)
aas
adc
cmp
mov
add
jbe
loopne
mov
je
adc
sti
rcr
or
movs
xchg
add
les
cdq
aam
(bad)
nop
fild
add
es
repz
or
fsub
dec
adc
out
mov
fadd
add
add
add
push
or
sub
in
out
aam
out
mov
(bad)
dec
into
mov
(bad)
cmp
cmp
adc
js
jecxz
mov
js
jecxz
mov
mov
dec
pop
cmp
(bad)
jecxz
ret
pop
cmp
int
jecxz
rcl
and
add
add
or
pop
pop
push
mov
enter
cld
adc
cld
inc
xchg
jmp
mov
std
lods
adc
add
pushf
or
push
fs
ret
push
fs
xor
sti
rcr
and
push
inc
or
push
cdq
xor
sti
jo
mov
jmp
inc
jge
add
lods
cli
jmp
ud1
sub
jmp
push
adc
mov
arpl
cld
adc
dec
jns
out
test
lea
mov
lea
mov
mov
dec
iret
mov
jmp
inc
adc
mov
add
add
mov
movs
mov
mov
jmp
inc
dec
inc
fist
mov
lea
add
call
mov
stos
out
dec
push
movs
pop
xor
(bad)
out
sub
or
pop
sbb
mov
out
inc
jmp
and
mov
add
add
iret
mov
dec
js
inc
and
rcl
add
out
jmp
add
push
pop
xchg
enter
(bad)
pop
push
sar
xchg
test
lahf
mov
push
xchg
(bad)
jae
call
lea
out
call
test
test
dec
pop
movs
je
test
jmp
push
cmps
cli
push
push
sub
xor
fnstcw
out
inc
ja
fdivrp
test
test
call
pop
movs
lods
adc
cli
jmp
sub
adc
in
call
jo
fidivr
sub
mov
pop
movs
pop
add
inc
add
add
popf
(bad)
xchg
sub
bound
out
call
cmp
out
dec
pop
movs
nop
rol
cli
inc
push
popf
(bad)
rol
out
(bad)
leave
outs
out
push
outs
(bad)
out
or
cmp
sub
fdiv
stc
adc
mov
add
jecxz
inc
in
ret
adc
cmp
test
mov
sub
sti
jae
fs
popf
push
sti
xchg
push
movs
je
sub
mov
popf
jmp
out
xor
mov
xor
call
int3
mov
(bad)
out
adc
cmp
cmp
jmp
ror
jmp
scas
xor
mov
xor
cld
div
cld
add
cld
(bad)
xchg
jmp
mov
int
push
std
rcl
addr16
punpckhbw
idiv
mov
push
pushf
jb
movs
popf
jmp
cmp
std
fdivr
jl
js
cmc
fadd
add
add
aad
inc
pusha
push
mov
jg
xor
mov
retf
mov
dec
fisttp
icebp
jg
jne
jne
fsubr
jg
jne
jne
fdivr
jg
jne
jne
fmul
or
loopne
dec
pushf
pop
nop
jmp
mov
int
(bad)
cld
add
add
rcl
aam
ss
adc
int
int
jae
mov
push
inc
and
push
inc
or
adc
clc
add
mov
jmp
outs
psrlw
add
std
push
and
outs
inc
fsubr
test
lea
add
add
sub
js
dec
(bad)
mov
jmp
inc
xadd
sub
iret
cmp
out
dec
in
sti
jae
fs
xchg
push
fs
(bad)
aam
sti
xchg
push
cmp
sti
adc
add
cli
inc
dec
sub
out
add
add
pop
jle
lea
out
call
outs
aad
iret
cmp
lahf
(bad)
repz
movs
and
sub
repnz
cli
inc
dec
pop
call
sub
out
jge
lea
out
push
jb
fucomi
test
inc
lock
mov
rol
not
enter
(bad)
in
jmp
push
inc
add
add
movs
jno
push
add
jne
jae
(bad)
test
jb
fucomi
test
jb
fstp
sar
pusha
dec
dec
test
jmp
mov
xor
sbb
out
adc
push
jns
out
inc
jne
lea
sub
test
dec
add
add
in
jmp
in
xor
mov
jmp
popa
(bad)
mov
jmp
inc
jmp
inc
inc
jmp
and
mov
add
(bad)
jmp
loope
mov
rcr
adc
mov
je
cld
add
add
repz
dec
cld
push
xchg
jmp
mov
or
push
xor
cmps
js
vmread
idiv
hlt
push
push
in
repnz
fs
ret
cwde
mov
jge
loopne
dec
in
nop
jmp
mov
popf
sub
cld
xchg
ss
xchg
cmp
jmp
outs
and
add
add
jp
je
add
pop
mov
outs
push
sub
or
sbb
mov
add
cld
repz
xchg
push
imul
out
lea
sub
cdq
and
inc
out
sub
dec
or
push
push
mov
jge
lock
mov
sub
pushf
addr16
test
add
nop
or
mov
fist
movs
push
jl
pop
push
jl
dec
push
mov
jge
add
pop
mov
push
retf
mov
mov
inc
fs
xchg
fdivr
repz
inc
and
inc
inc
or
add
xor
jmp
je
add
add
add
clc
shr
jmp
mov
adc
std
add
add
addr16
(bad)
outs
sti
aam
mov
mov
push
fs
push
fdivr
jae
fs
outs
fdivr
adc
lea
sti
xchg
push
fs
pop
fdivr
add
mov
push
fs
push
fdivr
ret
push
mov
add
add
out
sti
rol
pop
push
inc
or
add
data16
lock
xchg
shr
inc
cli
xchg
jmp
mov
xchg
cli
jmp
adc
mov
inc
xor
int3
adc
cld
rol
xlat
test
inc
cdq
sub
add
movs
add
jae
fs
out
xlat
sti
add
add
adc
xchg
sub
stos
xchg
cli
jmp
cli
jl
add
test
ficom
inc
jg
jmp
je
(bad)
fnstenv
fdivr
jg
mov
sub
sbb
push
fs
xchg
fsincos
adc
mov
mov
sti
adc
jo
jge
jmp
jg
adc
add
std
mov
out
call
mov
call
pop
sbb
xor
hlt
jo
mov
jmp
xor
(bad)
jmp
pop
add
or
and
mov
nop
xor
mov
cld
repz
movs
push
test
jnp
lea
nop
call
mov
dec
mov
call
cdq
jo
jmp
dec
or
jge
jne
jbe
fmul
jge
jne
jns
fdivr
jp
jne
js
fsubr
jp
push
sbb
jnp
adc
call
cmp
xchg
jp
enter
cld
jae
or
and
dec
sti
in
call
jp
mov
jp
dec
add
add
push
inc
and
ins
inc
or
pop
dec
inc
jns
enter
cld
shl
push
push
test
jl
lea
call
lea
gs
lea
call
mov
dec
jp
call
cwde
jmp
mov
int
or
rcl
mov
add
add
adc
int
(bad)
sti
jae
fs
popf
dec
(bad)
sti
adc
lea
sti
xchg
push
fs
add
mov
repz
fs
fucomp
(bad)
push
fs
rcl
pushf
mov
push
fs
repz
movs
adc
jmp
shr
jmp
add
add
mov
test
jmp
lods
jmp
jg
adc
mov
in
call
mov
call
cmp
inc
inc
mov
sub
jno
jl
sub
adc
jg
jl
pop
jb
xlat
(bad)
jl
mov
jnp
dec
push
fs
ins
(bad)
sti
rcl
and
push
inc
or
push
imul
sar
enter
cld
add
cld
inc
xchg
jmp
mov
or
push
fs
popf
(bad)
sti
adc
and
push
inc
or
pop
fnsave
mov
fs
jmp
pop
adc
jmp
das
adc
xor
adc
in
jmp
inc
and
imul
add
add
adc
xor
repnz
les
adc
jmp
add
(bad)
xchg
push
sub
jmp
sub
jmp
sbb
mov
xor
sbb
repnz
add
cld
inc
nop
jmp
mov
or
ins
cmp
fstp
sti
rcl
mov
add
add
add
push
pop
push
mov
push
cmp
int
xlat
sti
jae
mov
jnp
mov
xchg
jmp
mov
jnp
enter
cld
add
and
or
out
lea
outs
in
shl
push
or
jnp
pusha
push
mov
in
jbe
icebp
lock
mov
add
add
scas
mov
(bad)
mov
jo
or
popa
jl
sub
fcos
pusha
mov
jnp
loopne
dec
rol
jmp
mov
jl
enter
cld
sbb
push
jmp
popa
out
(bad)
loope
call
mov
mov
mov
jmp
dec
pop
lods
mov
(bad)
out
adc
add
cmp
xchg
icebp
shl
mov
push
(bad)
jmp
loope
(bad)
popa
call
mov
ror
inc
jmp
mov
xor
cld
imul
cld
add
aad
test
(bad)
out
lea
xchg
call
mov
mov
mov
in
mov
lods
mov
inc
add
add
adc
xor
icebp
nop
pusha
mov
jmp
inc
aad
inc
movs
pop
loope
xlat
aam
inc
je
mov
pop
loope
arpl
push
and
dec
enter
iret
pop
ret
mov
mov
lods
mov
(bad)
mov
jbe
pop
adc
dec
in
jne
xlat
add
add
jmp
enter
add
aam
nop
jmp
mov
mov
push
cmp
int
(bad)
sti
jae
cmp
popf
jns
sti
xchg
push
inc
and
push
inc
or
adc
lock
dec
add
in
jmp
add
fs
lock
imul
add
add
mov
aam
fs
sbb
aam
fs
mov
push
aam
fs
js
out
(bad)
std
sbb
sti
adc
je
arpl
jmp
sub
lea
in
call
jo
aam
bound
inc
loopne
mov
(bad)
out
xor
lock
nop
cmps
mov
add
imul
dec
retf
dec
inc
je
inc
icebp
popa
jl
lods
jo
shr
popa
jl
sub
sar
sar
pusha
dec
dec
cwde
inc
xchg
jmp
mov
xor
sbb
fdivrp
add
cmp
fldcw
fs
lea
pop
out
mov
sub
dec
xchg
test
call
add
add
ja
std
mov
pusha
xor
mov
pop
mov
xlat
out
stos
gs
lea
out
inc
fs
call
pop
sar
add
inc
repz
jmp
loope
sub
ret
fs
lea
pusha
out
(bad)
leave
sbb
push
jb
shr
fs
pop
arpl
inc
add
add
push
movs
jl
gs
jmp
jno
popa
push
fs
lea
jb
sar
(bad)
out
(bad)
mov
push
fs
ret
jae
fs
popf
retf
adc
xchg
fs
jmp
and
ins
inc
fs
mov
add
add
je
inc
dec
mov
shl
xor
add
adc
sub
dec
clc
inc
xchg
jmp
mov
or
push
xor
cmps
js
push
aam
add
push
push
call
fstp
(bad)
sti
rcr
clc
aad
mov
jnp
loopne
dec
rol
jmp
mov
dec
push
add
push
cmp
lea
sti
xchg
push
jl
adc
jmp
out
or
mov
jmp
inc
test
call
fist
in
xor
outs
out
add
mov
fucomi
jmp
mov
jmp
sbb
pop
push
xor
or
fdivrp
add
add
repz
ror
stc
xor
mov
jmp
popa
and
jmp
das
or
mov
adc
enter
cld
xchg
dec
cld
push
cmps
jmp
mov
(bad)
out
cld
repz
fst
cmp
int
(bad)
gs
and
fs
or
add
add
xchg
in
lock
mov
mov
(bad)
mov
mov
add
push
jl
sub
jl
lods
xchg
push
sbb
jnp
shl
xlat
cmps
jmp
mov
int
cmc
cld
jae
movs
ins
xchg
push
out
jmp
das
in
adc
and
std
mov
add
add
or
inc
lea
(bad)
jmp
jle
rcl
sahf
stc
add
dec
mov
call
and
add
cli
or
test
bound
cli
iret
sti
adc
int3
or
fs
and
bound
jg
leave
xor
mov
add
stc
add
fdivr
(bad)
ins
cli
inc
mov
push
sub
xchg
push
call
mov
mov
mov
pop
test
adc
push
out
mov
in
cld
rcl
pop
test
push
out
lea
call
lea
push
out
mov
add
add
dec
mov
(bad)
cmp
pop
inc
in
mov
ror
hlt
dec
out
dec
xchg
(bad)
sti
rcr
inc
xchg
dec
out
jmp
popa
rcr
jmp
adc
or
push
call
lea
push
call
lea
add
add
push
out
iret
dec
jl
pop
dec
out
dec
pop
mov
sub
dec
out
jmp
mov
movs
jmp
mov
dec
call
mov
push
out
call
ss
ret
xor
add
ss
clc
(bad)
jae
cmp
push
xor
add
add
popf
mov
jl
xchg
dec
out
jmp
and
add
dec
cmps
data16
lea
imul
call
push
sub
mov
dec
out
(bad)
mov
pop
cmp
int
sar
repz
cmp
sbb
pop
cmp
or
pop
cmp
std
mov
sti
adc
cmp
or
cmp
add
add
cld
xor
adc
ret
dec
xor
int3
ja
cld
sar
dec
cld
xlat
jb
mov
enter
popf
inc
add
xchg
ss
lea
cmp
jge
sar
adc
cmp
lea
sti
repz
(bad)
mov
and
xor
jns
ror
mov
sub
add
out
es
lea
call
lea
push
dec
(bad)
mov
jmp
das
add
dec
jl
inc
dec
out
(bad)
mov
ss
ret
jae
je
xchg
dec
out
adc
add
ds
lea
add
add
out
push
push
stc
into
out
dec
ret
mov
inc
push
(bad)
mov
dec
out
(bad)
mov
movs
sub
dec
out
jmp
mov
dec
call
(bad)
ftst
in
call
push
ror
mov
addr16
push
pop
xchg
mov
popa
adc
add
pusha
out
ret
popa
adc
push
call
lea
out
call
fs
sub
or
movs
push
jns
out
mov
jge
mov
(bad)
out
xor
enter
cld
add
or
icebp
clc
xor
push
jb
adc
pusha
popa
and
jmp
add
add
mov
jbe
push
mov
(bad)
jg
adc
popa
sbb
xor
int3
imul
cld
shl
test
fsub
xor
jae
pop
and
sbb
(bad)
data16
(bad)
stc
adc
pop
bound
lea
data16
mov
(bad)
dec
mov
inc
add
add
hlt
in
xor
add
adc
fsub
fucomip
inc
sbb
jmp
mov
popf
(bad)
adc
adc
gs
lea
push
or
jmp
lea
popa
out
(bad)
frstor
sti
ret
xor
pusha
out
jmp
popa
repz
iret
addr16
jmp
leave
(bad)
jae
call
lea
add
add
out
call
pusha
jl
cmp
or
test
(bad)
(bad)
mov
add
pusha
out
jmp
fcomip
adc
loope
std
mov
mov
(bad)
mov
dec
push
adc
cld
jno
add
js
jmp
jno
(bad)
jmp
jg
adc
add
add
popa
sbb
mov
pushf
xor
int3
cmc
out
shl
out
mov
out
lea
je
fs
out
mov
ret
dec
mov
dec
inc
je
(bad)
push
pop
jl
in
cmp
out
pop
jl
loopne
(bad)
mov
push
aad
iret
pop
jl
mov
pop
jl
add
add
nop
push
(bad)
pop
jl
mov
dec
xor
and
xor
mov
in
push
mov
(bad)
jl
dec
inc
hlt
dec
mov
mov
data16
dec
inc
mov
pushf
jb
out
jmp
das
sbb
and
mov
out
retf
add
add
jle
cli
jmp
xor
(bad)
mov
mov
into
mov
clc
adc
jmp
loope
stc
(bad)
repz
(bad)
leave
fwait
out
call
dec
dec
int3
pcmpgtw
dec
inc
int3
jmp
inc
inc
push
loope
add
std
jmp
fild
jne
push
sub
iret
(bad)
mov
or
add
fild
or
cli
lea
in
inc
(bad)
mov
pop
and
mov
pcmpeqb
add
cdq
arpl
call
dec
icebp
retf
mov
or
pcmpgtb
add
mov
dec
(bad)
popa
ret
or
mov
add
mov
into
lea
out
push
push
mov
lea
call
lea
sub
cmps
lahf
pusha
out
lea
out
inc
fs
mov
sub
sti
and
push
sub
jmp
fist
jmp
push
add
jae
popa
out
lea
call
lea
add
add
fwait
out
call
push
popa
retf
jmp
pop
arpl
call
daa
movs
push
outs
outs
cli
call
sbb
xor
add
ja
mov
sbb
call
ret
outs
out
mov
fld
add
sub
jg
inc
in
push
movs
dec
xchg
fs
jmp
add
add
ja
xor
leave
fcos
jmp
add
repz
arpl
dec
inc
retf
sti
rcl
test
fscale
xor
add
mov
mov
icebp
arpl
lea
pop
out
ret
scas
in
mov
and
idiv
and
jg
inc
fs
push
xor
add
add
xchg
jno
push
fmul
add
movs
jp
mov
add
jae
jl
mov
xor
sti
xchg
cwde
mov
mov
std
and
add
cli
mov
jecxz
out
lea
dec
pop
retf
ret
sub
arpl
popa
out
(bad)
leave
xchg
push
dec
pop
retf
jl
add
add
mov
push
retf
jl
sbb
(bad)
std
sbb
sti
adc
movs
push
mov
or
call
(bad)
call
lea
in
call
dec
adc
jne
dec
or
mov
(bad)
out
call
and
nop
lea
movs
push
add
jmp
or
inc
add
add
popa
call
lea
inc
jmp
inc
aam
neg
xor
std
and
add
popa
out
(bad)
leave
push
out
call
dec
leave
leave
punpckldq
mov
adc
mov
add
push
pop
push
mov
and
push
mov
shl
cmps
popf
push
out
ret
pop
jmp
and
add
add
jecxz
adc
movs
fidivr
push
popa
outs
inc
pusha
out
jmp
addr16
mov
fiadd
add
pcmpgtb
add
ret
jne
inc
imul
test
fadd
push
lods
idiv
and
push
mov
popa
in
push
popa
call
ret
lahf
jmp
hlt
(bad)
jmp
sub
add
fnstsw
xchg
pusha
out
sti
ret
xor
or
jmp
loopne
or
add
mov
mov
pop
out
(bad)
jge
leave
sti
adc
enter
mov
pop
out
(bad)
fisttp
sti
ret
xor
inc
leave
sti
shl
movs
adc
add
add
pusha
out
jmp
loope
imul
cld
push
out
(bad)
leave
mov
call
inc
leave
enter
mov
pusha
out
dec
movs
dec
repz
out
jmp
outs
test
or
add
xchg
lock
in
jmp
call
nop
pop
mov
call
add
add
and
call
pop
call
lea
cwde
out
push
ss
mov
pop
out
dec
mov
sti
ror
aam
mov
fs
int
mov
mov
add
or
je
adc
jmp
outs
test
or
pop
mov
add
add
pop
sbb
inc
enter
enter
int
stc
cld
jae
je
jae
out
jmp
xor
xchg
pop
call
(bad)
fst
in
(bad)
call
jne
cmp
(bad)
out
pop
jl
loopne
ffree
mov
cmp
(bad)
iret
pop
jl
mov
int
call
test
call
add
add
push
inc
and
dec
add
mov
icebp
enter
in
jmp
ret
cli
rcr
pop
out
(bad)
mov
push
movs
dec
sbb
adc
dec
call
sub
(bad)
stc
add
xchg
out
lea
sub
lea
call
lea
add
add
call
(bad)
jmp
xor
push
sbb
jnp
push
push
inc
call
pop
xor
or
jecxz
adc
bound
out
push
pop
out
lea
out
push
xor
out
pop
jl
cwde
xor
(bad)
mov
xor
(bad)
iret
pop
jl
adc
dec
(bad)
mov
jae
fs
add
add
popf
into
mov
xchg
push
movs
pusha
sbb
adc
jmp
pop
sbb
adc
test
ins
call
lea
call
mov
and
call
pop
mov
add
in
xor
loop
pop
add
pop
dec
clc
inc
adc
jmp
xor
cld
add
rol
add
add
dec
je
shl
jmp
inc
arpl
call
and
mov
dec
shr
push
cdq
(bad)
outs
and
test
dec
dec
movs
clc
xchg
and
jmp
icebp
push
adc
repz
mov
cdq
xchg
out
inc
ss
(bad)
mov
ss
(bad)
iret
and
jne
add
add
ss
(bad)
jmp
mov
and
mov
add
and
dec
and
and
out
inc
out
enter
in
jmp
std
mov
and
enter
cld
shl
arpl
fsub
xor
or
sbb
out
lea
out
call
and
and
(bad)
jge
mov
add
add
adc
add
out
jmp
add
push
mov
cli
jmp
push
in
adc
call
lea
das
vpxor
jl
xor
out
dec
dec
movs
or
and
jmp
outs
mov
or
and
inc
adc
mov
add
lds
and
call
sub
pop
inc
movs
xor
jl
int3
pop
out
(bad)
jge
mov
adc
lock
out
jmp
add
call
and
outs
cmp
out
call
ss
(bad)
jl
fdiv
dec
(bad)
jl
inc
pop
out
call
push
movs
inc
add
add
adc
out
jmp
mov
and
cmp
and
lea
call
lea
ss
iret
and
ss
jg
jl
sub
out
call
push
fs
shl
pushf
xchg
and
jmp
icebp
imul
lea
add
add
xor
jl
lock
out
(bad)
mov
push
movs
pushf
repnz
out
jmp
mov
and
retf
call
stc
or
add
pop
repnz
xor
add
push
dec
clc
pop
adc
mov
out
mov
int
out
jae
fs
popf
dec
mov
add
add
xchg
push
movs
pusha
and
cs
jmp
imul
mov
movs
out
push
cs
out
and
jne
cs
les
cs
(bad)
iret
and
test
es
dec
ja
sti
repz
movs
jl
and
stc
inc
push
(bad)
adc
out
lea
in
push
xor
les
add
add
and
and
dec
hlt
mov
rcl
shl
out
jmp
das
(bad)
sbb
popa
pop
mov
mov
inc
adc
sub
mov
out
call
cmp
push
inc
fs
not
and
and
dec
jmp
mov
push
test
add
add
inc
sti
repz
movs
push
repnz
scas
jmp
mov
push
cli
jmp
jp
icebp
or
jmp
imul
mov
out
lea
out
call
and
push
or
jnp
add
dec
inc
outs
into
cld
xchg
pop
mov
jmp
add
add
and
lea
dec
in
push
xor
out
and
mov
and
dec
mov
sti
rcl
mov
mov
movs
and
and
jmp
mov
and
cli
jmp
push
fs
std
call
repnz
jmp
popa
scas
stos
jmp
inc
pop
retf
or
inc
add
add
stos
jmp
popa
outs
ins
push
call
lea
out
call
and
mov
and
dec
push
movs
lods
icebp
and
jmp
icebp
lods
(bad)
jmp
loope
and
adc
fcomip
pop
out
lea
xor
ret
jl
shl
ret
sti
add
add
adc
inc
adc
cli
jmp
sub
mov
and
lea
cs
mov
es
dec
inc
ret
sti
jae
movs
inc
jae
out
jmp
xor
(bad)
xchg
and
xchg
out
lea
and
lea
clc
out
push
cs
jl
add
out
inc
add
add
scas
sar
push
fs
mov
sti
add
and
and
jmp
mov
and
out
(bad)
(bad)
out
call
das
inc
ret
mov
addr16
dec
push
pop
xchg
pop
rcl
out
(bad)
pop
dec
pop
(bad)
xchg
adc
pop
jbe
out
ret
popa
dec
sub
jae
call
lea
add
add
in
call
adc
adc
dec
gs
and
fs
or
fs
ret
adc
enter
cld
shl
clc
push
daa
jmp
mov
sbb
fs
ret
adc
jmp
mov
adc
popa
cld
adc
lea
sti
stos
push
push
movs
rol
add
out
adc
push
out
dec
inc
sar
bound
bound
cli
jmp
lods
sbb
inc
sahf
add
or
call
pop
cmps
out
xor
fld
adc
call
loope
dec
inc
adc
loope
adc
(bad)
jmp
mov
and
loope
xor
add
add
repz
call
call
lea
adc
lea
adc
lea
push
xor
mov
push
sub
iret
adc
push
push
iret
jg
jl
cwde
push
sbb
outs
adc
pmaxsw
(bad)
loop
sti
xchg
bound
cmps
push
cli
push
dec
inc
add
add
psubsb
and
out
lea
add
jl
mov
aad
iret
(bad)
mov
adc
dec
xor
xor
sbb
bound
es
bound
inc
sbb
jno
repz
loopne
fnsave
fadd
or
mov
mov
add
ret
push
call
lea
out
inc
or
push
enter
mov
or
xchg
lock
dec
rcl
enter
in
(bad)
jl
addr16
fs
repz
mov
pusha
loope
arpl
jmp
and
ss
lea
add
add
or
lea
out
push
cmp
shr
jl
pusha
cmp
sar
sub
iret
or
cmp
sar
jne
cmp
shr
mov
or
dec
push
inc
and
pop
inc
or
sbb
add
xor
mov
int3
cld
repz
call
mov
add
add
mov
inc
gs
jns
and
imul
call
lea
call
lea
push
out
lea
call
lea
call
lea
inc
call
lea
fs
(bad)
stc
inc
call
lea
fs
lea
add
add
inc
call
lea
or
lea
call
lea
call
lea
ds
lea
or
lea
call
lea
or
lea
call
lea
pop
out
lea
call
lea
call
add
inc
call
lea
fs
(bad)
stc
inc
call
lea
fs
(bad)
stc
inc
call
lea
or
lea
call
lea
call
lea
cmp
out
lea
pop
out
mov
pop
mov
add
add
in
push
add
enter
cld
add
push
fsub
leave
aad
out
lea
ss
mov
add
ds
sti
adc
and
pop
inc
or
adc
enter
cld
xchg
adc
push
shr
mov
fdiv
lock
add
add
repz
cmp
fld
sti
ret
pop
movs
pop
rol
jmp
loope
inc
inc
add
out
(bad)
rol
call
aaa
mov
inc
lea
out
(bad)
std
imul
add
out
jmp
adc
add
lea
in
call
xor
iret
add
inc
add
add
loopne
mov
jb
out
xor
fiadd
into
enter
in
dec
inc
je
push
lock
add
(bad)
fstp
cmp
ret
pop
movs
sub
add
jmp
loope
xor
(bad)
call
inc
mov
cmps
(bad)
dec
test
add
add
add
hlt
pop
xchg
and
add
inc
add
scas
add
(bad)
rol
call
lea
out
push
cdq
mov
call
adc
xchg
add
jmp
out
mov
or
pop
or
mov
out
inc
shr
mov
fmul
add
int3
enter
in
(bad)
mov
xor
jl
sub
cmp
mov
std
lods
inc
inc
adc
lds
pop
rol
out
jmp
inc
dec
inc
(bad)
rol
call
lea
in
push
sbb
in
out
dec
adc
xchg
add
jmp
icebp
dec
inc
(bad)
repz
div
xchg
in
inc
xor
jnp
or
out
(bad)
mov
adc
(bad)
in
jmp
mov
add
sbb
add
lea
xor
mov
nop
(bad)
in
(bad)
fstp
sar
adc
in
adc
add
add
outs
adc
enter
cld
adc
cld
(bad)
aam
mov
add
mov
lea
xchg
adc
pop
lods
sti
adc
cmp
(bad)
shr
mov
rcl
fs
mov
sti
rcl
inc
and
adc
fist
xor
das
jp
lock
dec
mov
xor
add
mov
(bad)
call
lahf
stos
sbb
mov
xor
enter
cld
repz
gs
sub
out
shl
in
lea
and
daa
nop
(bad)
in
lea
inc
call
(bad)
stc
aaa
call
lea
pop
call
mov
mov
mov
(bad)
enter
in
(bad)
cmp
pop
inc
fs
out
add
add
rol
jl
sbb
fnstsw
nop
xor
mov
xchg
xor
mov
test
lds
pop
xchg
jge
inc
push
dec
adc
loop
imul
mov
or
push
lods
movs
rol
jmp
inc
aas
cmp
pop
out
mov
fs
push
loope
add
add
ret
push
adc
movs
fiadd
call
add
jmp
mov
movs
fs
jmp
loope
cmp
jg
out
(bad)
fst
call
xor
inc
mov
add
call
pop
jl
add
cli
call
xchg
add
add
add
repz
sub
(bad)
jg
repnz
mov
call
xor
jmp
aas
popf
sbb
and
xor
mov
(bad)
inc
jge
jmp
cmc
in
lea
call
mov
test
call
mov
inc
add
add
xor
fucomip
lock
xor
mov
pop
xchg
jge
inc
adc
push
shr
loop
hlt
in
mov
or
adc
(bad)
stos
sti
ret
adc
in
adc
pop
push
xchg
xor
mov
enter
push
in
jmp
pop
inc
mov
(bad)
in
nop
hlt
jnp
or
in
inc
add
add
out
sti
add
xor
div
dec
call
pop
push
movs
ret
test
scas
mov
inc
and
mov
push
jnp
nop
cmc
in
call
adc
sub
inc
or
adc
adc
xor
cld
ja
cld
add
dec
cld
mov
out
mov
int
(bad)
rol
mov
mov
push
inc
and
add
or
inc
cmps
xor
(bad)
nop
add
call
dec
pop
pop
inc
movs
sub
in
add
jl
js
out
(bad)
fisttp
mov
nop
int
mov
cmp
add
jmp
mov
pop
push
add
xlat
lods
cmc
in
(bad)
(bad)
mov
add
add
daa
mov
lar
sub
mov
add
(bad)
fisttp
sti
ret
adc
mov
cli
call
sbb
xor
out
push
enter
in
jmp
inc
repnz
aad
add
call
out
dec
into
add
std
and
add
add
add
stos
into
(bad)
out
jp
jmp
daa
adc
mov
fs
sbb
adc
push
mov
pushf
std
dec
mov
and
adc
outs
inc
mov
mov
add
call
popa
jp
jmp
xor
jmp
inc
cmp
add
hlt
in
lea
xchg
in
call
add
(bad)
in
dec
adc
shl
inc
cmp
(bad)
sar
out
mov
in
(bad)
leave
shr
repz
jnp
sar
dec
adc
out
cli
push
add
repz
out
add
add
lods
sub
lea
neg
lock
in
(bad)
mov
pop
inc
and
imul
pop
or
enter
cld
xchg
pop
dec
cld
push
adc
mov
clc
scas
xor
cld
repz
mov
ret
push
aam
jbe
sti
rcr
and
imul
cdq
cmps
xor
add
add
mul
lock
mov
call
scas
push
popa
call
std
and
hlt
fild
or
push
std
mov
int
mov
dec
js
outs
mov
js
in
dec
jne
sti
jae
fs
adc
xchg
cli
in
add
add
add
add
xor
repz
jmp
add
sub
jmp
pop
loope
arpl
add
and
adc
in
jmp
not
pusha
adc
in
add
and
add
ja
popa
push
cld
in
cdq
sti
out
inc
repnz
mov
cld
ror
add
add
out
lea
out
push
cwde
mov
cld
jnp
xor
retf
mov
pushf
sti
in
(bad)
jge
mov
and
push
inc
or
push
lods
(bad)
repz
xor
fmul
sar
ret
pop
dec
cld
pop
sbb
xchg
sti
in
mov
int
call
fcomp
push
cmp
or
push
jl
add
add
adc
in
jmp
jno
cmp
aaa
fwait
sub
lea
call
lea
cmp
daa
pop
sub
mov
mov
(bad)
imul
mov
xlat
adc
xor
out
mov
lea
cmp
sti
add
aam
and
dec
sar
in
jmp
add
add
shr
sar
out
fisub
out
lea
daa
out
(bad)
fnstcw
adc
shl
mov
cld
mov
jnp
inc
sti
in
jmp
mov
enter
cld
ret
addr16
jb
loopne
mov
and
in
cmp
mov
(bad)
out
mov
call
add
push
retf
cmp
jae
movs
test
dec
push
rcr
scas
movs
sti
ret
push
jo
and
jmp
loope
xchg
jmp
scas
inc
sbb
rcr
inc
jmp
in
call
test
xchg
inc
add
add
ret
push
inc
mov
or
jmp
jns
and
sbb
es
mov
mov
(bad)
out
mov
(bad)
pop
jmp
mov
pop
xor
mov
inc
jae
(bad)
add
dec
imul
jns
out
lea
and
or
add
add
loopne
enter
in
jmp
not
rcl
and
call
popa
movs
stos
jmp
popa
stos
retf
push
jmp
sbb
popa
sahf
add
int3
cmp
cld
jae
dec
cld
xlat
push
jmp
mov
lea
cld
xchg
push
movs
je
and
jmp
add
add
loope
xchg
pop
imul
jmp
shr
(bad)
fild
or
mov
push
in
enter
in
jmp
out
push
rcl
and
call
rep
stos
call
dec
sbb
(bad)
mov
pusha
call
lea
pusha
call
add
out
(bad)
stc
pop
call
lea
pusha
call
(bad)
stc
pop
call
lea
and
lea
call
lea
call
lea
gs
lea
and
lea
call
lea
and
lea
call
lea
add
add
and
lea
call
lea
call
lea
pusha
call
lea
pusha
call
(bad)
stc
pop
call
lea
pusha
call
(bad)
stc
pop
call
lea
and
lea
call
lea
call
lea
fs
add
and
lea
and
lea
call
lea
and
lea
call
lea
pop
out
lea
call
lea
call
lea
int3
out
pop
push
out
mov
mov
mov
out
call
sub
push
mov
push
out
add
add
lock
mov
and
lock
mov
and
and
(bad)
frstor
mov
ret
push
fs
out
mov
ror
and
push
inc
or
push
dec
push
and
enter
cld
adc
jne
(bad)
fisttp
daa
out
mov
and
shl
fiadd
or
call
ret
add
add
outs
aas
out
aam
std
and
add
addr16
out
xor
cli
jmp
inc
and
push
inc
or
mov
iret
nop
and
or
stc
in
jmp
cwd
(bad)
repz
test
iret
out
call
repnz
mov
and
dec
inc
mov
repz
movs
and
and
jmp
jbe
cli
push
and
out
lea
xrelease
or
out
(bad)
frstor
movs
or
and
jmp
popa
dec
inc
inc
and
lea
out
call
and
mov
and
(bad)
jge
mov
adc
pop
add
jmp
add
add
add
(bad)
shl
call
mov
and
call
push
mov
add
xor
lock
lock
clc
inc
adc
jmp
xor
cld
add
je
and
jmp
popa
push
movs
std
ret
and
clc
jns
out
lea
out
call
and
lea
add
add
out
call
push
jl
and
jmp
push
dec
call
and
out
lea
sub
push
out
mov
out
and
mov
and
dec
outs
mov
rcl
xchg
adc
cli
jmp
push
std
repz
push
(bad)
and
(bad)
leave
or
call
out
dec
mov
and
out
inc
add
add
movs
mov
adc
jmp
jno
test
rcl
call
lea
jmp
or
mov
adc
adc
call
movs
xchg
xchg
adc
jmp
and
add
call
lea
pop
icebp
mov
adc
adc
(bad)
mov
add
add
fs
add
out
jmp
ror
adc
call
lea
or
lea
out
dec
bound
xchg
dec
cli
inc
movs
std
rcl
call
lea
in
push
cdq
mov
adc
adc
dec
fs
add
add
xchg
adc
add
add
pop
(bad)
repz
lea
push
pop
mov
adc
mov
add
call
pop
loope
xor
adc
xor
and
add
out
jmp
out
jl
adc
out
jmp
popa
popa
sar
repz
sbb
in
inc
add
add
push
sub
cmp
out
dec
jb
sti
jae
jl
jno
out
jmp
xor
std
xchg
adc
pop
aad
out
(bad)
fldcw
inc
push
in
mov
(bad)
lea
out
(bad)
(bad)
movs
sti
ret
popa
jl
ror
out
jmp
loope
cmc
cld
add
call
(bad)
shr
add
add
dec
jl
cwde
adc
(bad)
std
dec
cmp
adc
mov
or
cli
inc
or
scas
test
out
lea
jmp
rcl
(bad)
cmp
pop
ja
jg
jl
pop
or
call
pop
jl
xchg
or
jmp
and
std
add
out
lea
add
add
push
jno
mov
or
(bad)
mov
pop
movs
and
or
cli
inc
push
sar
adc
out
(bad)
rcl
adc
nop
mov
or
out
dec
test
inc
or
stc
lock
ror
xor
mov
test
mov
cmp
add
add
xor
cld
sbb
js
sti
xchg
pop
fs
add
inc
and
pop
inc
or
cmp
retf
ror
mov
int3
add
jmp
dec
dec
mov
xor
out
(bad)
fld
scas
call
sbb
scas
dec
jl
mov
and
and
out
jmp
ds
inc
or
scas
xchg
sub
mov
lods
call
pusha
loope
jecxz
adc
mov
and
push
or
cli
push
jae
push
or
std
and
add
ds
mov
cdq
mov
pop
scas
mov
lahf
lods
call
popa
loope
add
add
xor
add
and
ror
outs
cmp
jmp
clc
jae
ror
adc
and
add
addr16
mov
mov
sub
pop
mov
or
mov
data16
call
mul
jmp
add
add
and
mov
inc
sub
lea
adc
scas
mov
dec
out
(bad)
mov
mul
jmp
ror
adc
iret
shl
out
lea
adc
mov
data16
dec
pop
movs
and
push
cli
inc
loope
add
add
shl
mov
dec
loopne
push
cdq
scas
outs
and
lea
scas
sti
xchg
pop
jl
push
and
cli
push
push
add
mov
mov
pop
scas
mov
dec
out
(bad)
mov
pop
movs
add
push
cli
jmp
and
add
loop
out
(bad)
fnstenv
inc
scas
jmp
jl
aam
out
(bad)
fstp
sti
rcr
and
cli
jmp
and
inc
es
lea
arpl
outs
and
dec
out
dec
pop
movs
and
and
jmp
loope
add
and
add
mov
scas
call
psubsw
clc
popa
out
dec
stos
fwait
sti
repz
movs
add
cmp
push
and
mov
mov
or
add
out
(bad)
frstor
mov
ret
bnd
xchg
and
jmp
popa
repz
inc
and
scas
inc
add
add
and
pusha
out
(bad)
jge
pushf
sti
adc
inc
and
icebp
inc
or
cmc
movs
mov
fsub
(bad)
cld
ret
hlt
dec
cld
pop
mov
xchg
movs
xor
cld
repz
adc
arpl
or
repz
jmp
jno
jbe
mov
add
add
and
das
xchg
and
lea
in
out
and
(bad)
neg
mov
xlat
mov
xor
out
mov
lea
cmp
sti
add
arpl
repz
cmp
icebp
cmp
shl
inc
and
repnz
mov
add
add
retf
enter
in
push
and
enter
or
fsub
int
and
lea
push
mov
mov
and
(bad)
mov
repnz
jmp
inc
dec
test
xchg
and
(bad)
push
and
lea
mov
jne
(bad)
and
mov
add
add
out
dec
repnz
jmp
out
dec
leave
sti
shl
arpl
pop
cli
push
push
pop
lods
out
and
mov
or
repz
jmp
jno
inc
std
repz
jle
push
out
lea
in
inc
adc
mov
and
add
mov
hlt
jae
jg
out
jmp
and
and
push
lea
out
(bad)
fldenv
add
and
(bad)
fisttp
stos
sti
shl
jae
mov
adc
jmp
arpl
and
sbb
in
push
pextrw
stos
out
and
and
dec
add
add
hlt
stos
mov
and
cli
jmp
jns
repz
mov
and
lea
adc
lea
dec
or
jnp
jno
out
jmp
das
out
mov
xchg
and
loopne
jae
adc
cli
push
and
adc
stos
sti
ret
sbb
add
add
call
push
xchg
mov
and
std
rcr
adc
out
ret
rcr
adc
out
lea
in
push
adc
stos
out
and
mov
push
out
dec
(bad)
test
cwde
shl
jmp
xor
adc
jae
call
lea
xor
add
adc
scas
jg
jl
in
out
(bad)
jge
pushf
sti
add
jnp
icebp
and
jmp
loope
test
ret
and
cmp
pop
out
(bad)
loope
in
call
adc
jmp
mov
cmps
clc
hlt
push
test
idiv
xor
xchg
mov
and
sti
mov
adc
out
ret
outs
out
mov
repz
loopne
add
add
gs
hlt
fadd
or
jl
cld
and
dec
add
(bad)
call
mov
sti
xor
in
nop
adc
jmp
and
cld
add
out
lea
movs
bnd
push
lods
lods
mov
and
(bad)
mov
repz
jmp
add
add
ror
adc
out
lea
sysexit
stos
unpckhps
adc
dec
in
xchg
shl
out
jmp
inc
dec
or
shl
call
lea
jmp
jae
sbb
mov
out
dec
in
inc
nop
and
jmp
icebp
dec
sub
add
add
repz
neg
and
inc
pop
(bad)
cld
adc
(bad)
mov
in
cld
jmp
out
jmp
mov
and
adc
add
add
jl
pop
and
(bad)
fstp
sti
rcr
test
and
push
pop
xchg
mov
add
add
out
fbld
popa
cld
jae
call
ret
xor
sar
xchg
and
aam
adc
repnz
pop
ins
test
cwde
adc
(bad)
fisttp
mov
jmp
loope
xor
pop
lea
(bad)
fld
in
call
pop
push
test
adc
test
add
icebp
mov
jmp
sbb
das
lea
lea
jmp
rol
adc
mov
and
dec
jbe
sti
jae
jnp
xchg
and
jmp
inc
pop
jns
xchg
and
add
inc
in
push
add
jl
rcl
out
dec
rcr
add
add
iret
pop
out
jmp
mov
mov
repz
call
mov
pop
loope
inc
jmp
and
lock
jmp
cmps
pop
je
mov
loopne
add
pusha
add
in
jg
inc
test
out
inc
sar
xchg
sbb
(bad)
dec
test
add
inc
jecxz
cld
xchg
sbb
cmp
lea
in
push
mov
test
sbb
mov
sbb
dec
sub
inc
rcr
jmp
mov
sub
repz
push
fsubr
cli
inc
mov
test
sbb
mov
sbb
(bad)
std
sahf
sahf
sti
add
sub
sbb
jmp
jg
mov
add
add
ret
sbb
cmc
fild
punpckhbw
add
in
xchg
mov
sbb
push
out
lea
in
call
sbb
mov
jmp
call
(bad)
sub
add
repz
repz
std
rcr
jl
push
cmps
in
dec
mov
sti
rcr
in
dec
js
sti
repz
movs
jl
sbb
jmp
div
stc
push
sbb
(bad)
retf
movs
in
(bad)
fnstenv
lods
cmps
call
mov
sbb
(bad)
fucomp
xchg
sti
ret
push
movs
sub
sbb
jmp
popa
out
in
sti
sbb
mov
dec
pop
mov
pop
mov
ret
adc
dec
clc
(bad)
adc
xchg
add
add
daa
sbb
mov
int
fdivr
rcl
mov
in
stos
sti
adc
ror
xchg
jl
sbb
jmp
mov
mov
outs
repz
call
das
loop
xchg
pop
in
call
mov
ret
lock
ret
jg
sbb
jno
add
shl
call
cmp
outs
inc
add
add
mov
sub
jo
jl
push
aam
cld
xchg
push
jl
xchg
sbb
jmp
icebp
sub
stc
inc
cs
jmp
icebp
push
dec
call
sbb
xor
test
call
movs
in
pop
not
or
sbb
jmp
mov
dec
call
sbb
rcl
imul
add
cmc
retf
je
hlt
fadd
or
lea
out
inc
mov
test
pop
jl
call
movs
jnp
les
xchg
sti
xchg
movs
arpl
xchg
xchg
call
sbb
pop
mov
jl
rep
in
jmp
loope
dec
inc
movs
out
lea
out
inc
add
add
mov
test
les
push
ret
adc
cmps
call
pop
sbb
jne
mov
ret
push
ret
add
in
dec
out
jne
mov
ret
push
ret
shl
call
sub
mov
ret
push
ret
jae
cmps
call
fstp
out
jne
mov
ret
add
nop
mov
cmps
call
sbb
mov
ret
push
ret
ret
and
jmp
mov
rol
push
ret
loope
std
(bad)
repz
in
lea
mov
das
adc
in
dec
push
jl
repnz
repnz
dec
inc
add
add
mov
in
lea
out
inc
mov
in
call
push
jl
xchg
mov
stc
jmp
push
dec
inc
mov
in
lea
jl
call
mov
das
shl
(bad)
mov
push
jl
add
stc
inc
push
dec
call
mov
add
push
mov
out
call
mov
das
adc
in
dec
sar
xchg
lea
out
inc
mov
das
shl
in
(bad)
mov
push
jl
jae
in
jmp
and
inc
mov
out
call
mov
loope
lahf
mov
jnp
adc
add
add
lahf
in
xor
mov
imul
mov
mov
xlat
lock
jnp
lods
mov
movs
call
enter
jnp
push
mov
push
cld
repz
jl
rep
in
jmp
jno
mov
hlt
mov
out
inc
movs
jnp
add
add
movs
movs
in
call
push
jl
xchg
movs
in
jmp
and
mov
add
in
lea
sub
call
scas
stos
cmps
mov
scas
xchg
shl
inc
movs
out
mov
out
call
scas
dec
add
in
(bad)
std
fs
adc
je
mov
add
imul
inc
mov
in
lea
in
call
mov
cs
mov
in
dec
(bad)
push
cld
jae
jl
xchg
mov
stc
inc
call
sahf
in
(bad)
icebp
xchg
out
push
scas
repnz
pop
mov
xchg
sti
rcl
dec
shl
repnz
add
add
mov
in
lea
mov
sub
cwde
mov
xchg
sti
add
dec
rep
in
jmp
popa
push
gs
movs
out
mov
out
call
movs
jnp
clc
movs
in
call
push
jl
and
and
inc
add
add
movs
out
fisub
out
push
mov
sub
dec
mov
xchg
sti
rcl
dec
adc
bnd
push
gs
movs
out
retf
lea
mov
sub
cwde
mov
xchg
sti
repz
jl
rep
in
jmp
jno
gs
movs
out
add
add
mov
out
inc
movs
jnp
inc
mov
xchg
sti
and
xchg
add
cdq
in
call
pop
mov
arpl
add
sbb
movs
arpl
add
loope
out
push
mov
cmps
out
mov
cli
mov
adc
call
movs
out
pop
mov
out
push
scas
movs
mov
dec
movs
in
dec
lods
xchg
sti
rcl
les
cli
stc
jmp
dec
push
out
inc
mov
out
call
movs
jnp
push
and
add
movs
in
jmp
add
add
icebp
push
loope
shl
(bad)
loope
out
inc
scas
inc
sub
movs
jnp
add
in
call
push
jl
adc
bnd
adc
mov
out
lea
or
sub
adc
adc
(bad)
mov
fs
adc
jmp
inc
fs
inc
add
add
adc
lea
in
call
adc
adc
dec
arpl
adc
jmp
ror
(bad)
rcl
call
lea
pop
adc
out
adc
adc
dec
inc
and
fs
or
fs
inc
adc
enter
cld
add
add
repz
cld
pop
test
into
adc
xor
mov
bound
adc
jmp
inc
retf
nop
std
xchg
adc
(bad)
push
adc
in
call
adc
adc
dec
bound
push
mov
inc
std
rcl
call
(bad)
leave
daa
in
inc
add
add
push
pop
mov
xchg
adc
dec
arpl
mov
outs
leave
adc
repz
aaa
test
mov
push
sbb
mov
mov
bound
adc
jmp
and
std
adc
add
sub
or
add
add
dec
mov
out
dec
call
pop
xchg
or
pmaxsw
loope
xchg
std
adc
call
ret
loope
xchg
std
repz
and
adc
lea
push
ret
sub
adc
adc
dec
pop
jl
icebp
or
jmp
jno
xchg
std
ror
mov
add
add
popa
xor
inc
or
lea
out
call
pop
jl
xchg
or
jmp
and
std
add
out
lea
xor
call
imul
(bad)
cld
or
(bad)
mov
pop
jl
add
stc
inc
pop
cmp
adc
out
(bad)
shl
inc
add
add
test
dec
pop
movs
hlt
ror
out
jmp
inc
aam
(bad)
ror
call
lea
in
push
sbb
or
out
dec
pop
jl
xchg
or
jmp
icebp
sar
std
repz
not
inc
in
inc
neg
lahf
add
add
mov
or
mov
cmp
or
jmp
mov
or
sbb
add
jmp
adc
sti
mov
test
(bad)
(bad)
(bad)
sti
rcr
inc
and
aad
in
ror
mov
in
call
leave
in
push
mov
xor
pushf
iret
mov
add
(bad)
cdq
jbe
out
lea
in
out
inc
repz
mov
adc
out
(bad)
fisttp
mov
jmp
loope
adc
add
out
(bad)
rcl
call
repz
xor
(bad)
std
push
(bad)
sti
adc
mov
jmp
adc
add
ror
jl
or
lea
in
call
repnz
mov
loopne
out
dec
loop
sti
jae
mov
jmp
inc
(bad)
adc
xchg
or
push
inc
or
(bad)
icebp
or
push
icebp
xor
jo
out
dec
cmc
mov
rcl
mov
jmp
mov
adc
repz
and
add
add
pop
out
lea
repnz
mov
xor
out
(bad)
std
cdq
mov
add
mov
jmp
popa
pop
adc
ret
add
clc
xchg
add
lea
in
call
add
mov
push
out
call
pop
movs
sub
add
jmp
and
std
adc
out
lea
add
add
adc
push
idiv
mov
push
out
dec
jbe
sti
rcr
sub
add
cli
jmp
pop
adc
repz
mov
mov
in
call
test
dec
pop
movs
sub
add
jmp
jno
adc
rol
call
lea
in
inc
add
add
add
add
call
pop
movs
sub
add
jmp
and
add
call
lea
or
call
out
sub
jo
out
(bad)
mov
pop
movs
sub
add
jmp
rcr
adc
call
(bad)
ror
call
lock
add
add
lar
add
dec
shl
jmp
inc
rcl
std
rol
call
lea
adc
push
shl
mov
out
dec
shl
jmp
icebp
rcl
std
repz
les
in
inc
div
mov
add
add
out
(bad)
mov
shl
jmp
mov
add
cwde
aam
out
lea
cmc
jnp
inc
jl
rol
(bad)
fisttp
sti
rcl
jnp
rol
jmp
popa
shl
cld
xchg
add
ins
xchg
add
lea
out
push
pop
mov
mov
add
add
shl
adc
out
jmp
loope
loopne
repz
repz
(bad)
stc
inc
in
call
cmc
cmp
iret
(bad)
jnp
add
out
dec
mov
mov
jmp
mov
in
adc
call
(bad)
fnop
out
inc
rep
pushf
inc
(bad)
fadd
out
(bad)
fld
add
ret
sar
rol
jmp
popa
retf
or
add
push
add
call
in
call
add
ret
inc
rcr
call
add
(bad)
icebp
jecxz
push
out
mov
out
add
(bad)
loopne
out
dec
ror
rol
jmp
mov
in
(bad)
repz
movs
xchg
add
lea
add
add
xor
inc
out
cmp
inc
lea
out
(bad)
std
aad
sti
add
jnp
lock
jmp
popa
int3
jl
ret
add
sub
in
lea
in
call
add
add
call
into
jae
add
adc
add
mov
out
lea
push
in
inc
add
add
out
in
out
add
lea
out
call
mov
add
dec
mov
mov
jmp
mov
push
std
adc
call
(bad)
fnstenv
inc
rep
fwait
inc
mov
imul
(bad)
(bad)
cdq
sti
ret
(bad)
mov
jmp
popa
(bad)
or
add
add
add
push
add
lea
in
call
add
mov
imul
(bad)
jge
cdq
sti
adc
mov
jmp
add
adc
rol
mov
ror
call
repnz
sahf
iret
add
lea
mov
repz
mov
jmp
rol
std
adc
out
lea
add
add
in
push
bnd
out
add
lea
out
dec
jg
sti
rol
jnp
rol
jmp
xor
cmp
jae
call
lea
or
push
sahf
jg
jl
cld
add
(bad)
jge
adc
push
repz
jmp
loope
ins
std
ret
add
cmp
(bad)
in
(bad)
f2xm1
jmp
add
add
adc
loopne
inc
jl
jo
in
call
(bad)
mov
jmp
mov
cmc
out
bound
out
lea
and
movs
call
out
dec
scas
call
hlt
in
jmp
popa
shr
hlt
out
xor
out
lea
in
call
add
add
imul
dec
sar
icebp
hlt
in
jmp
icebp
shl
cld
shl
out
icebp
add
mov
stos
in
inc
pop
loope
arpl
adc
and
and
adc
in
jmp
out
jae
add
out
adc
xor
add
addr16
cli
lea
add
add
in
call
call
ret
fwait
in
push
loope
ret
retf
adc
movs
fild
(bad)
jnp
mov
jmp
mov
jae
lock
add
std
xor
add
mov
fimul
adc
loopne
inc
ret
ss
push
out
cdq
out
add
add
add
out
dec
les
adc
out
jmp
popa
les
(bad)
repz
add
in
lea
jmp
shl
mov
mov
add
dec
bound
hlt
jo
out
jmp
xor
call
(bad)
fnstenv
in
inc
out
cdq
inc
jl
add
out
inc
add
add
mov
cmp
add
jmp
loope
or
add
call
(bad)
fldcw
in
call
out
cdq
inc
jl
call
ins
(bad)
sti
adc
jae
add
out
jmp
adc
call
lea
out
call
out
pushf
iret
add
(bad)
in
dec
addr16
sti
add
add
jae
jnp
nop
add
jmp
inc
shr
xchg
add
push
xor
in
(bad)
icebp
sub
push
in
pushf
out
(bad)
jnp
sub
out
dec
xor
cmp
(bad)
in
jmp
mov
push
and
hlt
in
lea
out
pushf
(bad)
(bad)
jnp
dec
(bad)
in
(bad)
std
dec
xchg
sti
add
jnp
add
add
repnz
in
jmp
popa
imul
cld
out
pop
jmp
in
call
cld
jnp
and
in
call
push
cmp
enter
imul
adc
out
fucomip
in
lea
mov
fs
out
cld
jnp
cld
std
in
dec
jbe
sti
shr
cmp
std
in
jmp
mov
push
std
repz
out
(bad)
mov
in
call
test
dec
ins
jl
icebp
cli
in
jmp
jno
cmp
sar
out
ins
out
lea
out
inc
cli
mov
jnp
pusha
out
jmp
pop
leave
cld
xchg
cli
xor
jl
stos
cld
add
add
adc
or
sbb
xor
mov
call
shl
jecxz
in
lea
in
(bad)
fldenv
out
call
clc
rcl
xor
in
(bad)
std
xchg
test
adc
mov
ds
adc
cld
pop
jmp
in
inc
add
add
repnz
xchg
iret
cld
jnp
mov
ret
jae
fs
popf
retf
adc
xchg
cld
in
jmp
and
inc
std
out
fsubrp
in
(bad)
shr
mov
(bad)
mov
push
xchg
call
mov
xor
sbb
mov
adc
out
add
add
out
sti
in
mov
call
dec
xor
(bad)
jl
mov
repnz
sar
mov
repnz
push
cmp
push
or
jnp
rcr
xlat
xchg
call
mov
jge
enter
inc
and
push
inc
or
push
fidiv
cmp
adc
add
add
out
sbb
in
(bad)
fist
in
jmp
push
add
sbb
mov
add
out
fucom
in
mov
out
dec
in
mov
in
mov
sub
(bad)
jl
mov
mul
jne
in
call
jae
pop
ret
add
add
aas
test
or
sbb
mov
repz
jl
mov
adc
out
lods
sti
in
mov
out
cli
loopne
mov
add
iret
in
push
or
jnp
xor
lock
nop
call
mov
or
in
lock
call
popf
add
cwde
cmp
mov
add
add
in
mov
cs
(bad)
jl
jl
in
es
nop
loop
push
sbb
jnp
loopne
dec
call
push
jecxz
mov
lea
cld
xchg
push
or
xchg
add
and
ins
inc
or
adc
xor
std
mov
loope
and
adc
call
adc
mov
call
add
in
pop
dec
sahf
mov
jnp
xor
in
xchg
call
mov
or
loopne
in
repz
call
sbb
xor
mov
in
mov
sub
call
cmp
jnp
movs
cmc
xchg
enter
push
fcom
jnp
rcl
push
xchg
call
mov
mov
push
leave
cld
repz
inc
and
push
inc
or
adc
jne
shl
mov
call
scas
sbb
rcr
enter
cld
adc
out
fdivr
in
dec
not
sbb
loopne
pop
cmps
push
inc
and
push
inc
or
adc
xor
add
nop
loopne
adc
sbb
call
aas
mov
or
sbb
mov
out
xor
mov
pop
(bad)
adc
call
mov
ror
call
fist
out
xor
hlt
stc
mov
fistp
call
scas
mov
or
sbb
mov
add
add
xor
cld
cld
mov
add
out
stos
jecxz
lea
or
cld
imul
mov
cmp
mov
aam
dec
je
mov
(bad)
cmp
xchg
out
xchg
(bad)
nop
in
jne
out
jl
jg
mov
jnp
mov
xchg
call
mov
fstp
cld
ret
push
xor
add
add
div
dec
call
pop
push
lock
in
int
test
repz
mov
jnp
xor
call
aam
in
mov
or
dec
inc
and
push
inc
or
adc
xor
mov
call
das
outs
sbb
popa
sbb
mov
out
xor
pushf
sub
add
xlat
out
imul
(bad)
loope
out
jmp
in
mov
cmp
mov
and
in
(bad)
jl
pop
lock
adc
jnp
clc
out
add
jmp
mov
jnp
and
mov
jecxz
in
mov
xor
cld
cli
popf
cld
add
out
stos
jecxz
lea
add
add
add
cld
push
in
lea
movs
out
cmp
in
mov
cmp
mov
ror
call
sub
pop
icebp
mov
nop
in
dec
xor
iret
xchg
(bad)
in
dec
lods
repnz
xchg
jmp
jnp
mov
in
push
sbb
jnp
inc
dec
dec
mov
call
mov
int
mov
add
add
repz
cmp
sbb
push
cmp
or
push
cmp
std
push
xchg
add
and
push
inc
or
dec
add
enter
cld
shl
out
stos
in
(bad)
icebp
push
call
lea
(bad)
out
cmp
in
(bad)
icebp
lahf
out
sbb
in
(bad)
loope
call
mov
cmp
mov
add
add
aam
mov
loop
call
nop
call
mov
mov
push
cmp
int
test
repz
inc
and
push
inc
or
push
sahf
xor
lock
lock
imul
clc
std
in
dec
push
inc
and
push
inc
or
adc
xor
mov
call
add
add
xor
into
jmp
aas
mov
or
sbb
mov
mov
enter
cld
xchg
lahf
push
xchg
jmp
jecxz
lea
lods
out
cmp
in
lea
loope
mov
aam
mov
call
mov
xor
sbb
pushf
cld
add
out
jmp
add
add
out
imul
dec
push
mov
(bad)
jl
mov
or
lds
or
push
enter
mov
cmps
call
mov
jge
mov
add
(bad)
fmul
and
fs
mov
sub
imul
rcl
mov
call
loope
xchg
in
stc
jmp
shl
mov
(bad)
in
mov
dec
shr
inc
cmps
call
mov
fdiv
enter
cld
rcl
out
test
in
mov
out
adc
cmp
mov
jecxz
dec
pusha
or
call
dec
ret
in
dec
inc
movs
add
mov
add
mov
pop
mov
int
xchg
sti
shl
out
cmp
inc
lods
stc
jmp
imul
mov
in
mov
add
mov
pop
mov
and
add
ret
jmp
inc
in
xor
mov
pop
rol
fld
jmp
das
push
sub
add
mov
pop
mov
mov
add
stos
scas
stc
call
jp
add
fiadd
add
arpl
jl
inc
or
and
xor
mov
call
scas
imul
inc
add
add
xor
retf
movs
shr
mov
push
rcl
pop
mov
fst
arpl
ja
jo
mov
inc
mov
mov
mov
fadd
jmp
das
sbb
and
add
mov
pop
mov
add
add
fadd
jmp
out
push
inc
xlat
push
nop
iret
int3
mov
xlat
shl
dec
mov
jge
and
call
mov
std
jo
cld
add
ror
mov
and
pop
inc
or
jns
xor
mov
call
add
add
popa
sbb
jmp
aas
outs
sbb
xor
add
jl
mov
xchg
cmp
out
mov
in
lea
out
jecxz
in
lea
out
ret
in
mov
dec
push
mov
(bad)
mov
rcr
stos
add
mov
call
mov
add
add
cli
jmp
scas
jmp
popa
scas
jmp
outs
je
or
or
mov
xchg
jmp
retf
in
mov
aaa
jmp
mov
inc
dec
adc
jmp
add
int3
out
xchg
call
dec
mov
adc
jmp
(bad)
add
out
mov
in
mov
dec
movsx
popf
cwde
in
jmp
inc
ret
jnp
nop
shr
(bad)
iret
int3
mov
jge
mov
dec
mov
pop
in
mov
lea
cld
xchg
mov
mov
jge
jecxz
adc
jecxz
repz
and
mov
or
mov
inc
retf
xor
int3
xor
clc
push
icebp
call
mov
sbb
mov
or
fsubp
sti
adc
inc
or
jbe
xor
fldcw
lea
imul
test
in
jmp
sbb
add
add
inc
sbb
mov
cld
xor
mov
cmps
cld
cdq
jmp
retf
in
mov
aaa
jmp
mov
inc
dec
or
(bad)
cmp
cwde
inc
xlat
jbe
shl
mov
xlat
loop
mov
xlat
push
mov
in
push
sbb
jge
pusha
mov
aam
lock
mov
aam
xor
or
in
or
push
out
adc
ret
mov
inc
dec
push
mov
dec
xor
and
push
or
jge
shl
cs
jecxz
mov
jge
sar
mov
or
mov
and
pop
inc
or
add
add
je
xor
or
out
and
call
add
jns
call
pop
dec
sahf
mov
jge
inc
mov
in
imul
loop
loop
mov
or
mov
and
mov
or
jbe
xor
mov
call
das
jae
call
test
sbb
xor
add
jl
cmps
cld
adc
out
mov
in
(bad)
shl
mov
xor
call
mov
aad
shl
in
jne
shr
add
push
ret
adc
call
ins
fwait
mov
jge
add
add
add
call
mov
int
mov
shl
arpl
mov
xchg
mov
xor
popa
fsubp
in
mov
inc
dec
or
call
dec
sub
(bad)
mov
or
jge
pusha
mov
in
lock
mov
mov
add
add
mov
xor
in
jmp
mov
loopne
adc
jecxz
mov
dec
loope
inc
hlt
call
mov
loopne
enter
cld
rcr
out
push
in
mov
das
jmp
mov
cmp
mov
xor
call
dec
push
mov
add
add
mov
iret
call
push
or
jge
jo
dec
in
pop
lock
mov
int
scas
cld
repz
or
cmps
cld
adc
mov
dec
or
(bad)
cmp
mov
ror
lock
jne
loop
in
int3
(bad)
adc
rol
add
pop
jg
or
add
int3
and
sahf
jmp
xlat
in
mov
cmp
mov
xor
call
cmp
pop
shl
mov
sub
aaa
(bad)
mov
ror
adc
sbb
jge
pusha
scas
dec
mov
repz
mov
xor
add
add
or
xchg
cld
adc
out
inc
xlat
in
lea
loope
lea
call
in
lea
out
call
shr
mov
in
dec
mov
out
jg
jnp
pop
sar
nop
in
push
fdiv
jge
shr
xor
cmps
add
mov
or
jmp
add
je
outs
mov
nop
ror
adc
jnp
mov
in
dec
(bad)
rcr
dec
rcl
mov
in
dec
rcl
cs
inc
shl
adc
or
jge
loopne
dec
add
call
mov
mov
cmps
cmp
int
add
and
add
add
retf
rcl
pusha
inc
outs
imul
mov
scas
jmp
loope
scas
jmp
shr
jp
bnd
ins
mov
push
or
push
dec
xor
and
in
xor
rcl
cmps
adc
mov
call
outs
jge
or
add
add
cld
xor
int3
repz
cld
rcr
out
push
in
(bad)
stc
fwait
out
imul
(bad)
jmp
loopne
mov
cmp
mov
xor
call
cmp
lahf
inc
je
mov
xor
push
rcl
dec
and
mov
dec
fmul
fwait
(bad)
call
mov
add
or
jge
inc
mov
mov
call
mov
std
jl
cld
adc
jnp
rep
cmp
shl
cld
shl
jmp
xor
fs
(bad)
in
(bad)
loope
out
xor
in
lea
out
call
loop
push
add
add
pop
daa
jge
pusha
cmps
mov
loope
xor
std
movs
shl
dec
ror
in
dec
fidivr
(bad)
mov
dec
lods
(bad)
mov
adc
jnp
(bad)
(bad)
scas
adc
loope
dec
cmp
cmps
adc
loopne
dec
mov
loopne
push
sbb
jge
cmp
in
call
jo
add
add
xchg
loopne
enter
cld
jae
nop
mov
push
aam
(bad)
icebp
fwait
out
inc
aad
mov
cmp
mov
and
call
lods
lahf
mov
mov
fnstsw
in
mov
mov
iret
loopne
or
sbb
out
xchg
dec
push
out
out
dec
add
and
ins
test
mov
(bad)
loopne
das
jle
mul
pop
test
call
push
out
jecxz
dec
inc
mov
push
test
sbb
jmp
retf
push
out
xchg
call
push
out
loop
call
inc
je
adc
add
add
rcr
push
ret
cmp
loop
lds
(bad)
fild
scas
push
in
dec
push
out
jecxz
(bad)
jl
mov
clc
test
fst
mov
loop
rcr
push
ret
dec
dec
mov
(bad)
test
fcom
cmp
ins
add
xchg
inc
movs
sub
push
sub
loopne
adc
inc
call
mov
mov
daa
mov
call
pop
daa
mov
xor
sti
repz
mov
call
pop
div
call
pop
out
int3
mov
fsubr
pop
cmps
mov
mov
add
add
loopne
mov
out
pop
mov
out
mov
loopne
pop
jl
out
pop
ja
std
mov
fucomip
dec
pop
daa
out
pop
addr16
mov
fucomip
inc
dec
daa
out
pop
addr16
mov
fucomip
aaa
int3
es
pop
mov
add
fadd
jge
ret
mov
mov
daa
out
pop
daa
mov
mov
call
pop
add
add
out
(bad)
pop
arpl
inc
xor
or
ret
jle
call
pop
(bad)
pop
cmp
js
mov
sub
ror
hlt
jg
in
sub
xchg
sub
fild
add
fucomip
ret
dec
fsubr
pop
addr16
mov
fucomip
mov
fucomi
pop
add
add
mov
add
fdivr
lods
cld
ret
mov
out
jae
jmp
adc
arpl
sahf
add
ss
shl
mov
cld
sti
adc
mov
cmp
lahf
jl
popf
add
loopne
add
cmp
xchg
pusha
adc
add
add
add
push
call
addr16
(bad)
fbld
ret
cld
add
cmps
add
push
ret
cmp
xor
loopne
pushf
add
push
jae
jmp
sahf
add
jmp
aaa
add
cmps
adc
push
ret
mov
mul
add
add
std
cmp
sti
add
sub
xchg
add
sub
jmp
sbb
xor
sti
xchg
test
push
inc
je
inc
mov
pop
enter
ret
cli
gs
stc
fucomip
nop
and
call
jmp
movs
xor
mov
scas
aam
xchg
add
retf
dec
sti
jmp
xor
add
rcl
fadd
xor
ret
jp
adc
jns
call
pop
out
push
jle
scas
mov
and
call
inc
push
mov
mov
int3
data16
rol
push
inc
sub
inc
mov
test
outs
and
fsubr
cmp
add
add
ret
push
(bad)
xlat
push
inc
repz
inc
je
mov
mov
popa
fldcw
and
push
dec
fsubr
call
jb
inc
push
mov
mov
cld
mov
adc
push
xor
inc
in
xor
out
and
add
add
mov
push
pusha
scas
fldcw
fsubr
xor
ja
push
dec
fild
call
loop
push
lock
call
mov
push
push
fild
call
mov
and
call
fadd
ss
add
pop
ret
call
fiadd
add
add
call
pop
test
add
and
sti
call
mov
mov
int3
pusha
jne
sar
push
fsubr
push
jno
inc
mov
pushf
test
dec
ret
cli
mov
push
pop
add
stc
xlat
call
pop
xchg
(bad)
fsubr
call
add
add
push
sbb
push
mov
mov
int3
mov
rcl
push
ret
inc
xor
push
ret
jp
add
pop
sub
fucomp
pop
test
xchg
mov
scas
mov
xchg
add
cmp
sti
push
sbb
scas
(bad)
mov
mov
test
push
dec
fsubr
add
add
xor
test
dec
ret
jmp
in
jmp
and
pop
mov
push
push
xlat
scas
sub
call
mov
scas
(bad)
mov
mov
xchg
push
dec
fsubr
mov
fld
xor
test
and
ret
pop
scas
add
bound
imul
add
js
out
pop
aaa
scas
add
pusha
loop
sub
call
ret
sbb
add
sub
call
pop
ja
push
call
fst
push
cwde
sbb
mov
test
jmp
mov
jmp
jge
fld
xor
popf
shl
mov
add
pushf
add
cli
inc
repnz
mov
xor
sahf
adc
mov
pushf
push
xor
add
inc
rol
xor
mov
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
add
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
add
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
xor
add
and
add
and
add
add
add
outs
ins
cmc
inc
cmc
jmp
ins
cmc
jmp
ins
cmc
dec
imul
adc
cmc
push
cmc
call
outs
cmc
call
dec
cmc
call
cmc
call
outs
cmc
(bad)
call
outs
cmc
jmp
outs
cmc
call
imul
mov
push
imul
nop
push
inc
add
add
push
push
add
add
dec
imul
xor
add
xor
(bad)
js
cmc
call
pusha
cmc
call
jmp
popa
cmc
dec
cmc
push
fild
add
dec
cmc
push
dec
cmc
call
dec
cmc
call
jmp
cmc
call
cmc
call
cmc
jmp
dec
cmc
inc
add
add
dec
cmc
jmp
dec
cmc
dec
cmc
push
add
push
cmc
jmp
add
jmp
cmc
jmp
cmc
call
inc
cmc
push
call
cmc
(bad)
jl
cmc
inc
inc
cmc
dec
inc
cmc
inc
inc
cmc
inc
inc
cmc
dec
inc
cmc
dec
inc
cmc
jmp
inc
cmc
inc
add
add
inc
cmc
call
inc
cmc
jmp
inc
cmc
call
cmc
inc
call
cmc
jmp
cmc
jmp
cmc
inc
cmc
(bad)
jle
cmc
push
cmc
dec
inc
cmc
jmp
aas
cmc
call
cmc
jmp
inc
cmc
inc
cmc
call
inc
cmc
inc
inc
cmc
push
inc
cmc
(bad)
fiadd
inc
add
add
inc
cmc
(bad)
cli
inc
cmc
dec
inc
cmc
jmp
cmc
(bad)
fadd
jmp
push
cmc
jmp
dec
cmc
push
push
cmc
inc
push
cmc
(bad)
clc
dec
cmc
inc
push
cmc
push
push
cmc
(bad)
ds
cmc
call
cmc
inc
push
cmc
(bad)
ficom
inc
push
cmc
(bad)
call
add
add
cmc
call
cmc
jmp
cmc
push
push
cmc
inc
push
cmc
call
push
cmc
call
push
cmc
jmp
push
cmc
dec
push
cmc
call
cmc
jmp
push
cmc
dec
inc
cmc
(bad)
fadd
dec
call
cmc
(bad)
jl
cmc
jmp
cmc
call
cmc
push
cmp
inc
add
add
cmp
(bad)
fidivr
call
cmc
(bad)
fdivr
push
cmc
dec
js
jmp
cmc
(bad)
out
dec
cmc
(bad)
fmul
dec
cmc
(bad)
mov
dec
cmc
(bad)
jp
cmc
(bad)
mov
dec
cmc
jmp
dec
cmc
dec
cmc
call
js
call
jns
inc
add
add
cmc
call
cmc
inc
cmc
jmp
jbe
(bad)
(bad)
jns
jmp
jns
dec
jns
jmp
cmc
inc
jns
push
cmc
inc
cmc
call
cmc
push
jne
inc
jns
jmp
cmc
jmp
cmc
call
js
push
js
inc
add
add
cmc
dec
inc
cmc
push
cmc
jmp
dec
cmc
call
cmc
jmp
add
sub
fild
sub
add
hlt
fiadd
add
add
mov
fiadd
add
add
pop
push
cmc
push
loopne
and
cmc
inc
add
add
cmc
push
cmc
jmp
cmc
inc
cmc
push
push
cmc
jmp
push
cmc
jmp
push
cmc
call
dec
cmc
call
call
cmc
jmp
dec
cmc
inc
dec
cmc
inc
cmc
jmp
cmc
jmp
dec
dec
cmc
(bad)
mov
add
add
push
cmc
(bad)
cli
dec
cmc
inc
cmc
push
jmp
cmc
jmp
dec
cmc
inc
dec
cmc
dec
cmp
inc
cmc
dec
cmc
inc
dec
cmc
call
cmc
inc
dec
cmc
call
dec
cmc
jmp
cmc
inc
cmc
inc
cmc
inc
add
add
(bad)
js
cmc
call
cmc
jmp
dec
cmc
(bad)
fimul
(bad)
cmp
cmc
dec
cmc
jmp
fadd
add
inc
cmc
jmp
jmp
fadd
add
cmc
inc
cmc
jmp
cmc
inc
inc
cmc
push
inc
cmc
inc
cmc
push
dec
cmc
push
add
add
inc
cmc
push
add
inc
cmc
dec
inc
cmc
call
(bad)
call
inc
cmc
push
add
out
push
cmc
jmp
cmc
push
dec
cmc
push
dec
cmc
jmp
cmc
(bad)
mov
dec
cmc
(bad)
out
dec
cmc
inc
dec
cmc
call
cmc
push
fild
add
cmc
inc
add
add
inc
cmc
(bad)
call
inc
cmc
inc
inc
cmc
push
dec
cmc
(bad)
jl
cmc
(bad)
jp
cmc
push
add
add
nop
cmp
fimul
cmp
sub
cmp
inc
pop
cmp
dec
pop
cmp
in
cmp
mov
add
pop
cmp
or
cmp
adc
add
add
add
xchg
cmp
inc
xchg
cmp
rcl
cmp
ss
cmp
xor
cmp
jne
cmp
popa
nop
cmp
ins
nop
cmp
cdq
(bad)
cmp
inc
nop
cmp
xor
cmp
imul
cmp
pushf
xchg
cmp
sub
xchg
cmp
mov
cmp
fiadd
add
add
add
add
(bad)
aas
add
aas
add
pusha
inc
add
or
jmp
aas
add
fiadd
add
add
int3
xchg
inc
add
cwde
aas
add
fld
add
fld
add
fld
add
fld
add
sar
iret
adc
and
push
mov
stos
movs
aam
and
add
add
shl
shrd
adc
idiv
hlt
ss
jae
mov
stos
fs
and
and
pop
mov
stos
fs
inc
(bad)
mov
mov
stos
and
push
and
test
mov
mov
stos
and
push
and
cwde
ja
lds
mov
add
add
add
fadd
add
mov
adc
jle
or
mov
adc
shl
jle
xor
sbb
jmp
adc
add
jecxz
in
(bad)
js
jae
test
in
mov
sbb
div
pop
retf
or
mov
leave
mov
scas
inc
rcl
add
add
test
in
add
and
sub
icebp
mov
jbe
les
dec
(bad)
mov
dec
jle
ins
sbb
bound
add
cs
ja
mov
dec
dec
test
idiv
movs
add
adc
into
push
and
jl
add
add
out
(bad)
adc
and
dec
stos
dec
pop
in
iret
adc
and
(bad)
mov
jmp
jg
cs
imul
cmp
rcl
ret
mov
inc
clc
jbe
(bad)
enter
push
idiv
mov
inc
rcl
imul
add
add
add
lods
iret
adc
idiv
and
mov
dec
pop
inc
cmps
out
cdq
cmps
std
(bad)
mov
pop
sbb
add
dec
jecxz
pop
dec
rcl
test
add
scas
jecxz
pop
jb
lahf
ins
cmp
rcl
loop
idiv
movs
cmc
cmp
push
call
aaa
les
add
add
or
dec
xchg
mov
xchg
fiadd
add
fld
add
add
add
mov
add
jecxz
cmc
mov
pop
fiadd
stos
hlt
aas
add
add
add
int3
inc
add
ret
mov
inc
add
int3
inc
add
xor
add
add
dec
cwde
inc
add
int3
inc
add
jl
je
mov
ins
xor
popa
mov
jl
imul
mov
add
fadd
add
hlt
out
inc
xor
mov
in
add
cmps
imul
and
mov
adc
add
add
add
shl
jmp
fadd
add
cmc
out
push
hlt
(bad)
push
hlt
out
call
hlt
(bad)
inc
fadd
add
add
idiv
fadd
add
add
xor
add
and
add
xor
add
and
add
and
add
xchg
mov
cmc
fild
add
fild
add
fild
add
add
add
fild
add
add
in
add
mov
add
or
pop
mov
adc
shld
adc
fld
sbb
loope
and
and
jmp
sub
repnz
xor
mov
cmp
shr
imul
dec
dec
add
add
popa
sar
push
pop
cdq
inc
pop
ins
xchg
pop
pop
jno
dec
pusha
xchg
jl
mov
imul
jno
cmp
js
jbe
jl
sub
fiadd
add
add
movs
fiadd
add
add
movs
fiadd
add
add
je
add
add
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
mov
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
add
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
(bad)
fsub
add
fsub
add
fsub
add
fsub
add
fsubr
add
sub
push
fsub
add
and
add
and
adc
and
adc
and
add
and
add
add
add
and
adc
and
adc
and
jl
adc
xor
adc
and
adc
and
adc
xor
adc
xor
adc
in
adc
in
adc
push
(bad)
(bad)
(bad)
(bad)
fist
add
fist
add
fist
add
jg
xor
(bad)
inc
add
add
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
adc
fist
add
add
add
fiadd
add
fild
add
fild
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
add
fiadd
add
fiadd
add
ficom
add
ficom
add
fisub
add
add
mov
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
add
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
add
add
movs
fsub
add
fsub
add
fsub
add
fsub
add
fsub
add
fild
add
add
add
and
add
and
adc
and
adc
and
add
and
add
and
adc
and
adc
and
inc
fmul
xor
adc
and
adc
and
adc
xor
adc
xor
adc
in
adc
add
add
in
adc
hlt
fbstp
fbstp
fbstp
fbstp
fbstp
fist
add
fist
add
fist
add
jg
xor
fdivr
movs
fdivr
add
fdivr
add
inc
gs
add
inc
jne
inc
jne
inc
gs
add
inc
add
add
fist
add
add
adc
cmps
xlat
add
xlat
add
xlat
add
fadd
add
fadd
add
xlat
add
not
add
out
add
out
add
neg
add
neg
add
out
add
out
add
in
adc
in
adc
(bad)
fisub
add
fisub
add
fisub
add
fisub
add
fisub
add
add
add
fisub
add
add
add
and
add
and
adc
and
adc
and
add
and
add
and
adc
and
adc
and
inc
fimul
xor
adc
and
adc
and
adc
xor
adc
xor
adc
in
adc
in
adc
hlt
fst
add
fld
call
fst
add
add
add
adc
in
adc
in
adc
mov
inc
movs
fdivrp
add
fdivrp
add
fdivrp
add
inc
jne
inc
gs
add
inc
jne
inc
jne
inc
xor
inc
gs
add
fdivrp
add
fiadd
add
fiadd
add
fiadd
add
add
add
fiadd
add
fiadd
add
fiadd
add
fld
add
fld
add
xlat
add
out
add
not
add
not
add
mov
add
out
add
mov
add
mov
add
cmps
xlat
inc
movs
fadd
add
add
dec
mov
in
(bad)
xchg
fmul
xchg
fwait
lock
xchg
mov
cmps
jl
test
xor
scas
les
mov
push
mov
pop
mov
mov
call
push
enter
mov
rcr
dec
(bad)
xlat
int3
inc
fcomp
mov
int3
(bad)
clc
(bad)
enter
mov
hlt
fucomi
test
lock
in
ins
and
sti
add
add
nop
and
push
test
ror
or
or
adc
add
or
sbb
jo
or
adc
and
or
sub
add
xor
cmp
es
sub
cmp
push
in
aas
je
bound
jl
addr16
push
xor
test
jae
lods
data16
add
add
pop
xor
dec
pop
push
jnp
arpl
push
addr16
push
inc
ja
outs
add
jb
clc
mov
in
mov
outs
jg
pop
add
push
mov
in
(bad)
xchg
fsubr
xchg
mov
mov
mov
cmps
jl
test
xor
scas
les
mov
add
add
bound
mov
call
adc
retf
loopne
mov
rcr
sub
fcomp
mov
int3
(bad)
cli
(bad)
enter
mov
neg
out
test
lock
in
ins
and
sti
nop
es
push
add
push
mov
add
add
in
(bad)
xchg
fsubr
xchg
mov
mov
mov
cmps
jl
test
xor
scas
les
mov
dec
movs
mov
popa
mov
mov
call
adc
retf
loopne
mov
rcr
cs
xlat
int3
ds
mov
int3
(bad)
neg
jecxz
cli
shl
mov
add
add
repnz
test
lock
in
ins
push
clc
sti
nop
and
push
test
iret
or
mov
pop
adc
pop
or
or
pop
sbb
or
adc
and
or
sub
add
xor
cmp
es
sub
cmp
push
jecxz
aas
je
inc
inc
push
add
add
dec
pusha
xchg
ds
movs
mov
push
cwde
lods
inc
push
dec
mov
dec
pop
push
mov
ss
sbb
dec
dec
and
push
push
sbb
pop
jnp
xchg
outs
jg
pusha
add
push
jl
in
(bad)
xchg
fsubr
xchg
mov
fwait
lock
lahf
xchg
inc
mov
add
dec
test
add
dec
mov
mov
push
mov
mov
call
daa
enter
mov
rcr
sub
xlat
int3
ss
mov
int3
(bad)
(bad)
(bad)
enter
mov
add
out
test
lock
in
ins
push
clc
sti
nop
adc
inc
add
add
mov
xor
ds
stos
mov
push
and
cwde
popa
gs
stos
outs
inc
fiadd
add
jl
add
ja
add
ja
add
xor
add
popa
outs
mov
fs
add
outs
fidiv
add
add
cmp
(bad)
fnsave
add
fnsave
inc
loopne
add
add
add
fld
add
cdq
popa
outs
dec
cdq
push
outs
cmp
loopne
add
xor
cdq
push
add
xor
mov
adc
jno
or
add
test
add
add
xchg
and
mov
add
jno
push
fstp
xchg
push
add
add
add
fstp
fld
add
adc
mov
xchg
cmp
jb
jge
or
daa
mov
inc
add
jb
inc
xchg
sti
or
cmp
popf
and
xchg
pop
jb
div
push
xor
pop
fisttp
inc
adc
pop
jo
add
add
outs
inc
mov
pop
popa
dec
and
inc
mov
pop
jo
mov
pop
popa
mov
and
jnp
and
mov
lea
outs
xchg
ja
(bad)
stos
pop
gs
(bad)
push
and
pop
je
jg
and
cwde
push
and
add
add
jo
dec
jg
je
jnp
daa
pop
shl
nop
pop
jb
mov
and
mov
ins
adc
push
outs
push
jl
je
jp
cs
cmc
push
add
xor
push
fmul
sub
dec
jl
je
(bad)
pop
and
scas
inc
dec
push
jle
mov
add
cmp
xchg
jno
xchg
lea
popa
jle
jns
test
dec
jp
and
jnp
imul
test
dec
jp
je
jnp
imul
jp
push
or
jno
or
jnp
gs
mov
push
and
lea
inc
mov
dec
jg
je
jnp
add
add
add
and
(bad)
and
mov
and
(bad)
arpl
pop
inc
jg
ins
adc
and
jg
ins
push
xchg
pop
gs
shr
push
jl
sub
arpl
xchg
outs
push
rcl
xchg
and
jnp
je
xchg
push
and
jnp
jae
add
add
lea
cwde
jl
and
mov
data16
sub
inc
xchg
pop
cs
div
jmp
cmc
pop
sub
add
pop
outs
mov
arpl
mov
pop
gs
xchg
pop
or
outs
icebp
div
push
fadd
add
into
xor
adc
add
add
fs
jnp
je
xchg
pop
and
jg
imul
and
div
push
and
xchg
pop
outs
les
or
jno
or
jg
gs
mov
push
and
and
xchg
jb
inc
mov
dec
jns
je
xchg
pop
cs
repnz
inc
add
add
xor
inc
fisttp
sub
inc
xchg
pop
je
xchg
pop
imul
div
push
retf
cld
fmul
sub
inc
jl
and
xchg
and
xchg
imul
push
or
xor
pop
fmul
sub
push
test
jns
push
add
pop
arpl
push
outs
inc
mov
pop
and
js
imul
sti
or
add
jbe
xor
dec
fmul
sub
inc
test
cdq
jns
and
mov
jno
dec
xchg
pop
and
addr16
jg
imul
sti
or
add
es
fyl2x
pop
sub
sbb
arpl
mov
imul
jl
or
mov
xor
or
pop
sub
add
pop
outs
cdq
ja
and
mov
dec
outs
cmp
mov
pop
je
cmps
addr16
mov
cmp
add
add
hlt
fld
add
icebp
pop
sub
push
jl
and
(bad)
and
jns
and
pop
jae
jl
and
imul
or
xor
mov
mov
or
push
arpl
jns
jo
jns
jb
mov
or
add
repnz
sub
add
pop
gs
push
arpl
push
and
mov
cdq
jle
and
jp
jb
mov
or
fadd
add
repz
sub
adc
pop
outs
cmp
and
mov
dec
mov
fs
les
pop
add
mov
popa
add
add
xchg
mov
ja
imul
mov
jb
xchg
push
mov
push
outs
cwde
(bad)
pop
gs
pop
and
xchg
pop
je
mov
pop
and
mov
test
push
or
and
xchg
fs
inc
mov
je
jge
popa
add
add
inc
mov
jns
imul
arpl
xchg
jb
les
push
outs
push
mov
and
jp
jb
jns
imul
fild
add
cmc
pop
sub
adc
pop
outs
cdq
jp
and
mov
push
outs
call
outs
add
add
mov
pop
add
xor
dec
hlt
pop
sub
aam
pop
outs
jns
push
arpl
push
outs
inc
mov
pop
gs
mov
(bad)
add
es
(bad)
in
sub
add
mov
and
xchg
xchg
and
mov
or
add
add
add
xchg
cwde
mov
pop
ins
adc
sub
adc
arpl
xchg
pop
gs
cmps
bound
jns
fiadd
add
lock
inc
push
add
mov
mov
pop
ins
dec
mov
pop
ja
loop
add
pushf
pop
je
test
stc
test
push
mov
add
hlt
test
push
jns
cmp
fld
add
fsub
xchg
fld
add
xlat
inc
add
fcomp
add
inc
add
fsub
add
fld
add
add
inc
add
fld
add
add
cmp
add
das
fld
add
add
xor
add
clc
fadd
add
add
add
fadd
add
add
call
fadd
add
add
(bad)
add
in
add
xor
add
lods
fadd
add
add
lods
fadd
add
add
pushf
fadd
add
add
xlat
add
jl
add
fadd
add
xlat
add
ins
fadd
add
add
add
add
add
xor
add
and
add
and
lock
fadd
add
lock
add
and
loopne
hlt
fild
add
fbld
add
fild
add
fild
add
fild
add
fild
and
cmp
cmp
ffreep
jg
ffreep
jmp
add
outs
or
mov
add
mov
ret
xchg
add
out
ret
xchg
or
jno
xchg
mov
inc
xchg
push
data16
add
dec
xchg
pop
outs
xchg
fild
add
fild
add
fild
add
fiadd
add
fiadd
add
outs
hlt
fiadd
add
xchg
push
add
add
add
push
xor
fiadd
add
jo
add
gs
ficomp
sbb
pop
add
loopne
add
arpl
add
jp
add
je
add
je
add
fs
xor
jmp
xor
je
add
xor
and
movs
mov
pop
and
xor
jnp
cmc
push
and
add
add
xor
add
sbb
push
add
xchg
jo
jl
js
jmp
cmc
(bad)
jmp
or
in
fld
or
in
push
(bad)
add
sbb
cmp
(bad)
jno
mov
add
or
sar
fs
and
xchg
ja
loope
sbb
jns
fld
add
add
add
add
mov
jnp
jb
fld
add
jnp
jb
fld
add
mov
mov
mov
add
gs
scas
cdq
pop
jns
fadd
add
mov
add
xor
loopne
add
mov
add
jmp
jns
add
add
pop
jne
mov
add
mov
add
lods
data16
shl
jo
movs
mov
pop
add
mov
jb
mov
mov
add
pop
add
fs
rcr
fadd
add
test
js
arpl
mov
add
add
add
cmp
push
popa
cmp
movs
push
jae
shl
stos
pop
fs
test
pop
fs
shl
addr16
mov
add
mov
add
movs
push
add
stos
pop
add
movs
pop
add
and
add
rcl
inc
fild
adc
aaa
inc
ins
scas
push
jb
add
add
stos
jb
mov
fs
mov
jb
scas
push
outs
cwde
fiadd
add
push
dec
mov
fiadd
add
pop
ins
push
lods
push
je
add
bound
popa
je
mov
inc
movs
pop
jb
loopne
add
pop
popa
pop
mov
dec
sbb
shr
sahf
push
jae
scas
addr16
stos
jb
add
add
je
add
push
mov
inc
ins
inc
scas
jno
mov
jb
cmp
sahf
pop
jae
cli
inc
ins
push
scas
jno
push
mov
je
mov
popa
mov
sbb
jo
cli
cmp
mov
pop
jb
fld
add
arpl
and
mov
push
push
mov
add
add
arpl
mov
add
outs
add
mov
jb
pop
stos
jo
(bad)
rcr
lods
jb
pop
movs
pop
jb
mov
gs
mov
cmc
call
arpl
lods
jb
call
outs
test
jno
xchg
scas
popa
je
scas
and
mov
jb
add
add
and
add
test
jb
xchg
stos
jo
add
pop
outs
push
movs
jb
push
movs
pop
jb
mov
gs
mov
cmc
call
outs
push
stos
addr16
mov
and
mov
je
mov
and
stos
and
je
add
adc
ja
inc
stos
arpl
mov
imul
add
dec
mov
pop
jb
std
cmc
call
and
popa
je
stos
and
mov
pop
jo
clc
bound
test
outs
xchg
push
je
scas
adc
and
popa
je
scas
and
test
and
pop
jae
scas
arpl
mov
and
movs
pop
jb
add
add
fild
add
push
les
jb
or
popa
je
lods
and
mov
popa
cmp
add
inc
lods
pop
outs
push
mov
push
arpl
mov
jae
lods
arpl
mov
and
push
jb
stos
pop
jb
fiadd
add
pop
add
add
inc
movs
and
push
je
test
inc
lods
pop
jae
scas
push
daa
mov
add
push
test
popa
pop
mov
and
push
je
clc
bound
arpl
stc
cmc
call
pop
outs
or
mov
imul
push
ins
dec
stos
push
pop
mov
add
add
push
ja
add
arpl
add
add
stos
pop
bound
mov
je
test
and
mov
jne
mov
pop
arpl
and
movs
pop
bound
mov
inc
push
sbb
cdq
dec
add
je
stos
push
je
scas
pop
imul
mov
bound
stos
fs
mov
add
xchg
bound
arpl
clc
cmc
call
and
mov
and
mov
pop
outs
xchg
pop
jb
mov
xchg
cmc
inc
popa
je
stos
and
fs
mov
push
je
stos
adc
and
mov
add
push
stos
and
mov
je
stos
popa
je
stos
and
mov
jb
movs
fadd
add
addr16
stos
pop
ins
push
shl
mov
push
outs
dec
cld
pop
popa
inc
std
cmc
inc
arpl
mov
jae
cld
bound
test
outs
xchg
push
je
cmps
adc
add
jb
mov
je
cmps
and
mov
jb
in
add
inc
stos
push
arpl
mov
and
pop
jae
cmps
arpl
mov
and
lods
pop
jb
fild
add
popa
popa
adc
pop
gs
mov
addr16
push
jae
test
jb
add
add
fild
add
push
lods
pop
je
mov
outs
xchg
scas
jb
xchg
pop
outs
xchg
add
jb
mov
pop
addr16
push
jae
cmps
arpl
mov
daa
in
add
inc
stos
bound
mov
fs
mov
cmc
call
fs
add
add
fiadd
add
pop
arpl
mov
push
jne
test
daa
je
add
push
scas
ja
dec
mov
daa
fiadd
add
popa
xor
je
mov
add
xchg
lods
push
je
mov
add
mov
out
dec
in
call
in
add
add
add
loop
add
in
inc
in
inc
in
dec
in
dec
in
push
mov
cmc
jmp
xlat
add
adc
add
mov
out
inc
fld
add
fadd
add
fadd
add
fadd
add
daa
add
xlat
add
add
add
pxor
inc
cmc
jmp
add
add
fld
add
cmc
call
cmc
inc
add
shl
push
mov
push
add
push
ja
fadd
add
test
inc
mov
addr16
mov
jb
pop
lods
jb
pop
lods
add
jecxz
jo
push
out
sub
repz
xchg
mov
add
adc
add
push
lods
popa
popa
inc
mov
add
test
add
jae
jno
pop
mov
add
push
test
xchg
mov
add
jae
popa
mov
bound
cld
push
sub
fild
add
dec
cmp
cmp
cmp
and
add
add
dec
cmp
in
dec
cmp
add
add
hlt
dec
cmp
fmul
add
dec
cmp
or
add
inc
cmp
cld
inc
cmp
clc
inc
cmp
enter
pop
inc
cmp
add
cmp
or
cmp
add
cmp
pop
dec
cmp
xor
cmp
pusha
dec
cmp
sub
cmp
sub
add
retf
in
inc
cmp
or
add
cmp
adc
cmp
mov
xor
add
add
adc
add
cmp
sub
xor
enter
aam
cmp
mov
cmp
lods
inc
cmp
js
cmp
movs
inc
cmp
mov
loop
add
add
cmp
je
cmp
rcl
rol
add
cmp
cmp
add
cmp
mov
add
inc
cmp
add
add
mov
cmp
fadd
add
inc
cmp
mov
cmp
test
cmp
jl
cmp
test
cmp
mov
cmp
pusha
aas
cmp
mov
cmp
rol
add
add
aas
cmp
mov
cmp
pusha
aas
cmp
pusha
aas
cmp
cmp
cmp
lock
cmp
or
cmp
mov
inc
cmp
js
cmp
cmp
add
add
add
inc
cmp
cmp
cmp
fadd
add
cmp
pusha
inc
cmp
inc
inc
cmp
movs
inc
cmp
clc
inc
cmp
cmp
add
inc
cmp
clc
inc
cmp
rol
add
cmp
inc
inc
cmp
inc
inc
cmp
add
cmp
fadd
add
add
cmp
sub
gs
push
std
popa
gs
adc
add
add
and
ja
adc
cmp
add
pop
add
push
cli
push
arpl
pop
pop
adc
pop
popa
clc
neg
in
add
jmp
gs
adc
adc
jbe
sub
jo
or
add
adc
dec
xor
add
jb
push
add
inc
add
xor
add
add
inc
into
sbb
add
jae
push
js
call
cdq
adc
add
loopne
add
or
and
xor
xor
xor
dec
push
push
js
loopne
add
pop
fs
add
push
clc
ja
add
add
(bad)
pop
bound
loopne
add
add
js
fild
add
add
je
add
push
adc
add
add
fild
add
pusha
outs
push
loopne
add
fild
add
jno
xor
add
xchg
clc
pop
push
cmp
xchg
add
call
and
fild
add
jne
je
test
mov
cmp
xor
add
fisub
mov
add
fcomp
and
add
pusha
push
stos
add
fwait
or
ins
fiadd
or
push
jl
add
mov
pop
dec
push
cld
inc
jne
xor
repnz
icebp
push
popa
mov
add
outs
stc
pop
inc
mov
cmp
xchg
sbb
jno
ja
jns
dec
jne
sbb
std
jo
xchg
or
add
jp
push
arpl
fld
add
sbb
add
loopne
add
ror
fild
add
rcl
sbb
add
sbb
dec
jmp
cld
push
inc
xchg
(bad)
pop
je
mov
ins
or
add
jmp
dec
mov
dec
push
test
sbb
movs
and
add
add
ja
dec
push
jne
xor
inc
add
cmp
add
push
jb
adc
mov
push
popa
xchg
sub
std
bound
cld
gs
or
and
ins
pop
add
add
les
popa
movs
inc
add
movs
inc
add
inc
add
cdq
inc
add
cwde
inc
add
inc
add
inc
add
cdq
inc
add
add
add
shl
call
inc
add
call
inc
add
pushf
inc
add
pushf
inc
add
cwde
inc
add
cwde
inc
add
cdq
inc
add
cdq
inc
add
(bad)
xor
and
inc
add
out
inc
add
out
inc
add
sahf
inc
add
sahf
inc
add
add
add
sahf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
inc
add
inc
add
inc
add
inc
add
popf
inc
add
fadd
add
add
add
fild
inc
ins
fadd
add
add
hlt
fiadd
add
add
fild
add
add
add
add
hlt
fiadd
add
add
jmp
lds
outs
shl
inc
xchg
fild
fdiv
inc
fsub
fcomp
sub
push
add
fiadd
add
xlat
push
add
pop
add
fsub
or
add
add
fcomp
mov
add
add
add
jb
add
add
pop
fiadd
add
add
add
ficomp
fiadd
add
fisub
xchg
push
add
fiadd
add
fst
sbb
add
push
add
add
add
ja
in
add
push
fcom
pop
fsub
pop
fsub
fdiv
add
add
jmp
add
push
add
fcomp
or
add
pop
fnsave
stos
frstor
push
fst
je
add
cmp
frstor
xchg
add
dec
fnsave
jbe
push
add
frstor
fnsave
and
add
mov
add
add
add
add
push
add
fadd
add
jno
sub
fsub
fcomp
fcom
dec
fadd
add
fcom
add
pop
add
fdiv
mov
add
cld
xlat
pop
add
fsub
xchg
imul
push
fdiv
push
fsub
dec
fdiv
xchg
fcomp
xchg
fadd
add
jno
add
add
jne
push
add
fadd
add
fsub
xchg
add
add
fild
add
pop
add
arpl
pop
fcomp
push
fsub
fdiv
dec
fdiv
mov
add
push
fcomp
pop
fcom
out
pop
add
fadd
add
fsub
xchg
fld
add
add
cmp
jb
or
(bad)
fild
add
add
add
fistp
push
fild
add
add
add
fild
add
add
add
add
add
fadd
add
fdiv
add
fadd
add
pop
add
fsub
add
add
push
fcomp
push
fcomp
dec
fcomp
sbb
add
sbb
push
add
fcom
or
jb
std
xlat
pop
add
fadd
add
fdivr
add
fadd
add
fiadd
add
pop
add
fiadd
add
add
fiadd
add
add
fisub
sbb
add
fisub
jns
add
add
add
fiadd
add
fnstcw
add
fld
add
fdiv
inc
fadd
add
xlat
jno
sbb
add
fcom
mov
fnstenv
push
fcomp
or
arpl
pop
fsub
fld
add
xlat
pop
add
fldenv
xchg
arpl
push
fst
push
fstp
pop
fldenv
add
add
push
fldenv
fld
add
fldenv
cmps
fnstenv
ins
fldenv
test
jb
cdq
fst
xchg
pop
add
fldenv
fadd
add
fcom
pop
fcomp
push
fcomp
fdiv
inc
fcom
fsub
or
add
dec
fsub
fdiv
movs
fadd
add
add
add
xlat
pop
add
fsub
fcomp
xchg
fcom
and
inc
add
fcomp
pop
fdiv
mov
fcomp
xchg
fsub
fcom
push
fsub
ins
fcomp
cwde
fcom
xchg
fcomp
cdq
fsub
fadd
add
pop
add
fistp
xchg
push
add
inc
add
add
add
add
pop
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
fistp
or
push
add
loopne
add
loopne
add
fild
add
loopne
add
push
add
pop
add
fist
mov
fistp
inc
fistp
push
fistp
dec
fild
add
add
add
add
fistp
mov
fild
add
add
add
fimul
cmp
add
push
add
inc
add
loopne
add
loopne
add
pop
add
push
add
loopne
add
fistp
add
fild
in
fistp
add
fiadd
add
loopne
add
add
add
add
loopne
add
add
fiadd
add
cmp
add
fidiv
add
inc
add
fisub
inc
fidiv
add
pop
add
fnstsw
add
loopne
add
pop
add
add
loopne
add
loopne
add
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
fist
xchg
fnsave
std
fistp
adc
dec
add
loopne
add
pop
add
add
pop
add
fnstsw
add
fnsave
add
cmp
popf
frstor
xchg
pop
add
frstor
add
add
inc
add
fcomp
pop
loopne
add
loopne
add
jb
inc
loopne
add
fs
fist
push
loopne
add
pop
add
loopne
add
fistp
or
loopne
add
loopne
add
loopne
add
fcomp
ins
fdivr
add
pop
add
add
add
add
mov
add
inc
fcomp
pop
fcom
sbb
add
fsub
fcomp
mov
fdivr
and
add
mov
pop
add
pop
add
push
add
fild
add
add
pop
add
pop
add
pop
add
loopne
add
loopne
add
add
add
add
fild
add
(bad)
fistp
pusha
fild
add
(bad)
add
loopne
add
(bad)
mov
add
jb
ja
ja
xchg
(bad)
fistp
xor
add
xchg
fidiv
sbb
add
fild
add
loopne
add
xor
add
add
push
loopne
add
loopne
add
loopne
add
loopne
add
jb
dec
loopne
add
loopne
add
add
fiadd
add
fbld
add
xor
(bad)
fimul
sub
add
imul
dec
fisub
dec
fiadd
add
jo
dec
ficomp
xor
add
jl
add
ja
cmp
add
inc
add
aas
add
xor
jo
cmp
jge
popa
add
fstp
dec
loopne
add
loopne
add
loopne
add
add
loopne
add
push
add
loopne
add
loopne
add
fst
or
add
loopne
add
fistp
add
fist
movs
fld
add
loopne
add
add
add
pop
add
add
cmps
fnstcw
add
aas
add
xor
mov
fldenv
xchg
fstp
xchg
fstp
call
add
inc
add
add
fst
pop
loopne
add
imul
dec
loopne
add
loopne
add
fistp
add
fist
add
add
adc
add
or
jb
push
rcl
in
outs
or
arpl
jmp
add
sub
fsub
fcomp
fadd
add
jb
dec
cmc
pop
and
and
hlt
pop
gs
fadd
add
push
add
add
xchg
jo
xor
add
jo
add
add
add
fild
pusha
fsub
dec
fcomp
dec
fadd
add
fcom
push
fsub
inc
fcomp
xlat
arpl
add
bound
or
jb
movs
fild
add
xlat
pop
add
fsub
add
fsub
call
push
add
add
fmul
fisttp
fmul
fist
lods
fist
ja
inc
add
add
add
fbstp
cmps
fild
jp
xor
dec
fist
add
add
add
dec
add
jno
pop
fsub
inc
fcomp
fcom
dec
fsub
inc
fadd
add
fadd
add
jo
pop
sti
fs
mov
and
push
add
cli
popa
je
add
add
out
sub
push
mov
popa
outs
xor
add
popaw
inc
cmc
push
and
jo
inc
stc
fs
mov
jb
mov
jb
xor
add
test
cmps
add
xor
jmp
inc
mov
xchg
xor
in
mov
dec
cmp
mov
jge
add
add
xchg
push
dec
js
mov
outs
push
pop
cmp
pop
dec
cmp
pop
hlt
int
loop
and
ja
les
mov
stc
retf
rcr
rcl
cmp
mov
and
dec
pop
imul
cmc
sub
inc
js
int3
push
dec
mov
addr16
clc
xor
cli
fld
add
add
push
out
fld
add
lods
add
inc
adc
popf
pop
or
cmp
cmp
push
push
and
and
jo
push
jp
int3
and
ds
rol
pop
test
dec
adc
cmps
ds
sub
cmp
bound
add
add
dec
and
test
dec
pop
ds
bnd
test
jae
aaa
pushf
movs
cmp
mov
ficomp
test
and
jle
stc
mov
mov
or
fild
add
fild
add
cmp
mov
add
cs
fcom
scas
inc
call
add
cmps
loope
iret
aam
rcr
push
or
mov
mov
adc
hlt
jmp
imul
xor
jns
mov
adc
inc
or
loopne
outs
cmc
inc
movs
sbb
rcr
sbb
scas
add
add
jne
in
xor
mov
loop
push
ja
mov
add
add
out
xchg
jns
mov
lods
imul
xor
stc
jno
sub
mov
sub
push
mov
sti
dec
lods
adc
xchg
add
inc
adc
push
sub
jo
ja
xlat
popa
in
ret
jle
xor
mov
popf
or
jl
add
pop
pop
nop
jl
xlat
hlt
aas
gs
ins
and
xchg
inc
outs
jno
mov
dec
push
pop
fsub
inc
dec
mov
jl
jmp
add
and
mov
mov
dec
cmp
sbb
mov
mov
add
or
std
add
adc
pop
pop
loop
sbb
fild
add
add
shl
cmc
pop
xchg
int3
add
inc
test
cmp
les
jne
test
hlt
pushf
sbb
jecxz
add
aaa
fisttp
scas
scas
xor
and
inc
cwde
xchg
jno
and
mov
neg
sbb
lods
ret
jne
fwait
cmp
ror
out
add
add
loop
aam
in
add
pop
dec
cmp
je
std
add
mov
test
arpl
pushf
retf
fbld
fisubr
xor
and
lods
sbb
loope
push
mov
sub
jnp
jle
ja
outs
int3
daa
push
das
and
stc
repnz
imul
fwait
adc
fadd
bound
add
add
imul
cdq
inc
mov
pop
add
cmp
jmp
add
retf
mov
jecxz
mov
aaa
add
mov
sahf
or
jno
mov
push
in
adc
fucomip
jg
push
lods
mov
mov
push
mov
dec
adc
stos
xlat
mov
stc
mov
jae
outs
mov
jb
loop
(bad)
or
movs
push
dec
in
pmaxub
push
es
test
mov
dec
xor
adc
(bad)
std
inc
jno
add
lock
out
xchg
addr16
clc
aam
cmps
les
retf
in
arpl
add
add
retf
jnp
pop
dec
push
hlt
or
inc
xlat
rcr
in
stos
mov
fdivr
cmc
sub
jns
push
sbb
inc
inc
leave
mov
out
dec
int
ins
fucom
adc
jg
mov
add
vpsraw
daa
dec
push
je
add
add
test
mov
add
push
xchg
xor
push
push
cmp
adc
sbb
int3
jb
rcr
cmp
in
adc
movs
es
jno
sbb
cmps
lods
inc
pusha
scas
repz
fst
imul
push
and
iret
retf
jnp
(bad)
cmps
ds
add
loope
into
push
cmc
cmp
xchg
push
add
fild
add
mov
inc
movs
push
data16
std
jnp
aas
ds
sti
hlt
adc
jns
cmp
ret
int3
hlt
movmskps
xor
lods
mov
(bad)
xchg
nop
hlt
adc
sbb
cmp
jecxz
sti
push
inc
mov
add
sbb
jo
push
jbe
retf
fcmove
imul
add
(bad)
std
inc
int
sbb
xchg
aaa
(bad)
and
mov
aad
cmp
add
xor
popa
add
pusha
jle
pusha
outs
test
pushf
retf
and
add
xchg
push
jno
xor
add
add
sub
movs
in
mov
not
scas
call
sbb
pop
add
pop
mov
fs
add
xor
pusha
ja
std
jmp
cmp
inc
xor
cwde
ret
dec
pushf
jns
xchg
imul
out
add
fstp
add
fistp
aas
mov
fiadd
add
add
add
push
mov
mov
hlt
fiadd
add
enter
std
add
sub
mov
push
stos
and
fdiv
ins
mov
movs
std
xor
pop
xor
add
mov
mov
and
ds
popa
nop
xchg
or
call
aaa
add
add
nop
fiadd
add
nop
std
add
add
dec
jb
int
inc
pushf
inc
and
ret
mov
jmp
inc
das
stos
jnp
xor
shl
dec
xchg
and
(bad)
mov
movs
mov
clc
adc
sub
xor
cmp
add
add
jmp
mov
add
aas
pushf
xor
icebp
jne
jecxz
(bad)
and
push
jbe
mov
jns
pop
xor
out
cmp
rcr
sahf
jmp
jp
push
xchg
xor
jo
enter
or
arpl
mov
mov
dec
dec
or
add
add
add
mov
aad
sti
pop
jle
sti
jp
leave
xchg
in
bound
xchg
push
arpl
fcmovbe
in
cmp
bound
inc
shr
add
jmp
stos
inc
sbb
in
movs
out
xchg
imul
mov
fadd
add
inc
or
or
je
arpl
add
idiv
add
add
icebp
stc
xchg
fst
shl
push
fdivr
mov
jge
and
jno
sbb
arpl
sub
in
addr16
shl
lods
mov
mov
sbb
loop
cmc
push
inc
or
inc
in
daa
mov
mov
mov
and
test
ds
add
add
and
or
push
out
jge
cmp
js
test
push
sub
dec
imul
sub
xchg
mov
add
xor
add
mov
inc
push
and
std
add
call
das
clc
xchg
das
aaa
mul
cdq
test
and
add
add
pop
pop
cwde
xchg
not
popa
repz
pushf
xlat
cmps
jmp
xchg
mov
push
adc
ins
cwde
pop
pop
fnsave
das
ror
icebp
test
sub
aam
test
cmp
xchg
jg
clc
in
jg
mov
add
add
cmps
or
(bad)
jns
jp
sahf
jno
rcl
mov
loop
adc
neg
ror
pop
mov
movs
fld
add
das
ror
aas
jle
or
fxch
repz
xor
inc
mov
clc
sbb
add
add
cmp
popa
inc
pop
nop
ficom
sbb
les
pop
and
scas
nop
pop
enter
or
jecxz
or
sub
xor
or
aad
mov
xlat
sar
imul
mov
movs
outs
pop
jne
out
out
add
add
(bad)
sub
shl
xor
inc
stc
pusha
mov
and
push
add
je
add
mul
or
adc
ret
idiv
test
test
pop
sbb
fsubr
sub
jg
jmp
xchg
push
mov
shl
add
add
(bad)
(bad)
xor
and
jno
or
push
adc
js
rol
mov
mov
iret
add
mov
add
add
push
mov
arpl
adc
mov
data16
mov
int3
fnstsw
(bad)
and
xchg
xor
call
scas
ficomp
add
add
(bad)
sub
fiadd
adc
popf
cmp
mov
ffree
cmp
mov
xchg
jle
sti
xchg
and
outs
stos
mov
inc
rep
cmp
inc
aas
sub
popf
xchg
and
pop
mov
cwde
pop
movs
xchg
xor
add
mov
lahf
cwde
or
jp
add
in
inc
dec
push
and
rol
add
add
repz
add
cmp
jmp
(bad)
inc
xor
pop
mov
je
in
popa
mov
mov
inc
cmp
lods
stos
clc
and
outs
push
push
ja
pop
push
xchg
mov
pop
push
xor
sbb
xor
leave
jno
shl
add
add
loope
and
gs
push
mov
xchg
jne
imul
sbb
jge
ret
cmp
cli
mov
(bad)
mov
ja
add
int
mov
enter
cmp
xor
mov
xchg
sub
shl
dec
adc
jmp
add
add
add
xchg
clc
add
pushf
mov
dec
sub
cmp
stos
mov
or
jno
push
call
push
push
add
repz
push
call
out
xchg
xchg
jbe
repz
jmp
out
in
xor
sub
loopne
mov
dec
dec
inc
les
add
stos
test
mov
leave
fld
mov
fld
and
cmp
add
pop
icebp
dec
pop
sbb
ds
add
gs
and
imul
xor
fld
jns
mov
(bad)
jbe
sbb
mov
jbe
movs
daa
add
cmp
inc
jle
add
add
loopne
stos
data16
jecxz
mov
out
movs
add
mov
in
call
jnp
sbb
xchg
push
add
push
sbb
out
ss
sub
adc
(bad)
(bad)
lock
inc
lea
inc
pusha
std
push
mov
and
sub
dec
add
sub
cmps
(bad)
mov
neg
cmp
and
or
adc
jo
and
push
mov
adc
rol
scas
inc
scas
lods
stc
mov
popf
pop
cmp
adc
pop
icebp
std
or
(bad)
xor
mov
movs
dec
mov
and
xchg
push
mov
add
add
cmp
bound
idiv
push
pop
movs
jbe
add
or
fwait
pop
jno
cmc
sub
dec
ins
push
xchg
xlat
mov
clc
mov
outs
fidiv
sub
add
rcr
sbb
mov
push
add
add
mov
dec
ds
mov
pusha
ret
or
xchg
sar
pop
jnp
jmp
mov
fs
xchg
cmps
sub
adc
push
xor
std
sub
test
mov
clc
jno
movs
lods
or
outs
xor
add
push
scas
test
nop
mov
xchg
arpl
add
add
gs
cmp
arpl
pop
test
mov
movs
in
rol
rcl
sqrtps
and
xchg
dec
xor
or
inc
into
fnstcw
test
test
in
lods
cdq
hlt
ror
jecxz
imul
ss
aaa
inc
push
xor
add
add
sbb
or
and
in
arpl
jnp
jne
scas
fild
add
out
ins
and
jmp
test
(bad)
sti
jbe
mov
pop
mov
fsub
test
and
sub
leave
test
icebp
movs
lds
dec
push
test
or
add
dec
(bad)
or
mov
out
ret
(bad)
sti
jo
sub
cmps
out
sub
sti
and
neg
mov
fyl2xp1
js
call
mov
sub
xchg
xchg
or
shl
dec
jle
pop
test
xchg
fisttp
xor
push
leave
jmp
add
mov
cmp
mov
call
mov
jmp
fmul
imul
lock
mov
imul
lahf
fist
bound
fmul
xchg
loop
imul
cmp
cli
pushf
push
pop
xor
xchg
push
(bad)
jno
jae
test
fdivr
add
add
mov
fmul
jmp
cmps
aaa
mov
push
fbld
pop
ja
xchg
out
loopne
movs
fnsave
daa
push
lock
lock
cmp
in
cmp
lods
ror
dec
cmps
out
mov
pop
jp
dec
and
les
adc
or
leave
cld
xor
dec
mov
jno
clc
mov
jns
cli
mov
pop
lea
(bad)
sbb
shl
jmp
(bad)
adc
mov
pop
pop
lds
mov
(bad)
daa
push
push
ss
jbe
movs
jle
mov
xchg
fnstenv
pop
jns
adc
jecxz
ins
popf
jp
cmp
mov
call
add
add
cmp
rep
aaa
sti
popa
pop
(bad)
sbb
fneni(8087
not
sti
ins
cmp
xchg
push
mov
repz
mov
nop
loopne
cdq
test
out
lds
mov
mov
loopne
dec
test
cmp
(bad)
jne
mov
iret
adc
in
add
add
aas
ins
mov
jnp
sbb
sub
lods
dec
pop
mov
das
bound
or
loop
movzx
lds
mov
loop
pop
xchg
pop
scas
mov
aam
loopne
mov
stos
jnp
add
fmul
sahf
or
gs
pop
push
test
adc
or
xor
xchg
les
in
sbb
(bad)
pop
mov
jne
and
pop
pop
lods
out
repnz
mov
mov
push
jecxz
test
push
std
add
(bad)
ja
cmp
jns
xchg
loopne
fs
out
mov
fnstenv
lahf
inc
xchg
add
add
dec
xchg
jbe
imul
mov
xchg
inc
fiadd
add
out
jno
jnp
in
(bad)
jl
pop
cmp
adc
mov
xchg
dec
sbb
cdq
xchg
inc
les
movs
fld
add
mov
data16
out
push
xor
in
inc
add
add
adc
pop
je
in
aaa
cmp
icebp
xor
add
stos
push
movs
mov
add
aaa
(bad)
jmp
(bad)
jmp
fisttp
add
(bad)
inc
(bad)
aaa
fld
add
fsubr
add
fdivr
add
fcom
inc
fdiv
ja
mov
add
xlat
add
add
add
in
add
in
adc
in
adc
mov
adc
mov
adc
movs
fmul
add
fcom
add
fcom
add
adc
js
add
js
add
imul
add
xor
dec
add
fadd
add
fdiv
jmp
fdiv
(bad)
cmp
fcom
add
das
add
add
add
pop
add
fdivr
cmc
fcos
add
lahf
add
in
dec
cmc
retf
call
cmc
sti
jmp
in
add
fild
add
fist
add
fist
add
fist
add
fild
mov
fild
add
add
add
fcomp
add
sbb
add
add
jo
or
jno
or
movs
fild
je
xor
cmp
xor
cwde
cmp
pop
loope
add
xor
inc
loope
add
xor
cld
fbstp
add
xor
js
cmp
in
add
jp
cmc
jbe
mov
or
arpl
jo
cmp
pop
sahf
(bad)
push
fimul
dec
pusha
sar
add
add
add
xchg
mov
mov
mov
nop
dec
retf
(bad)
div
repz
fcomp
mov
ins
leave
hlt
jmp
rol
in
push
jle
pusha
std
and
push
mov
add
out
stc
stc
(bad)
or
add
add
xor
addr16
fcomp
push
mov
sub
dec
sbb
pop
movs
outs
jno
xor
push
mov
lods
xchg
into
inc
mov
(bad)
fcomp
jmp
into
push
hlt
mov
enter
mov
pop
sbb
push
fisttp
iret
arpl
lods
mov
xchg
popa
jmp
cmp
hlt
pop
mov
(bad)
dec
xor
mov
movs
pop
das
xor
(bad)
pop
shl
shl
cmps
fiadd
xor
cwde
push
enter
pop
mov
mov
mov
lahf
(bad)
or
call
fcomp
test
jo
xchg
pushf
inc
sti
loopne
shr
shl
or
mov
xchg
add
add
jne
(bad)
out
xchg
inc
mov
sbb
call
(bad)
ror
dec
jnp
sbb
sub
sbb
das
cmps
adc
pusha
stos
mov
ret
pop
repz
mov
scas
dec
mov
loopne
mov
and
ins
int
add
add
push
sbb
movs
jg
(bad)
rcr
or
nop
cmp
addr16
lods
fs
push
ficom
hlt
add
and
fdiv
xchg
hlt
dec
sahf
mov
or
or
push
xlat
pop
pop
and
cmp
inc
sbb
pop
mov
fldcw
push
ja
mov
inc
mov
aam
pop
add
add
movs
jecxz
cs
xor
call
add
mov
or
mov
popf
jmp
jmp
sub
push
xchg
ret
or
lahf
pop
cld
jecxz
adc
xchg
pop
inc
cmc
or
idiv
(bad)
out
ss
add
rcr
add
mov
pop
neg
mov
pop
sbb
cdq
push
call
mov
xlat
adc
cmps
int3
sub
stc
or
dec
cmps
pop
sbb
pusha
fdivr
(bad)
push
imul
mov
push
iret
dec
xchg
mov
mov
mov
leave
mov
into
(bad)
sti
xlat
loopne
or
add
add
adc
stc
inc
add
stc
cs
test
pop
pop
xor
push
retf
push
pop
push
mov
cli
std
pop
push
mov
pop
or
inc
div
push
mov
mov
mov
mov
sub
xor
push
and
mov
outs
fsubr
ds
pop
xchg
and
or
arpl
add
add
pusha
inc
addr16
jno
add
pop
pushf
rcl
(bad)
jmp
cmc
add
pop
scas
xchg
mov
stc
scas
jnp
jmp
iret
xchg
mov
std
sar
fisttp
cmp
rol
mov
popa
xlat
pop
and
scas
sub
movs
cmps
sbb
stos
std
xchg
add
add
mul
cdq
add
adc
(bad)
jge
pop
clc
daa
or
test
inc
mov
sub
dec
mov
add
inc
ret
fwait
cmc
pusha
shl
mov
pop
ds
mov
scas
jo
ret
fstp
xchg
into
inc
test
fdiv
idiv
mov
imul
inc
lea
movs
xor
add
add
push
lods
mov
add
mov
mov
test
mov
or
sbb
mov
pop
pusha
les
out
pop
cwde
cmc
pop
sub
or
sub
pop
popa
cli
jmp
fiadd
add
jle
xor
sbb
addr16
inc
push
push
add
add
imul
mov
dec
mov
cli
outs
and
jecxz
fwait
movs
lods
loope
fwait
mov
test
mov
ret
mov
jmp
popa
jns
pushf
cmp
sbb
arpl
or
call
and
xor
add
and
aas
aam
ficomp
xchg
lea
xchg
test
mov
(bad)
retf
sub
call
dec
dec
mov
pop
cmp
ins
xor
push
or
mov
daa
and
test
ror
shl
fist
lods
gs
add
push
sbb
sub
ficomp
xor
cmp
test
adc
test
cmp
xor
rcl
push
call
into
pop
jmp
xchg
jnp
cmp
frstpm(287
adc
mov
cmp
cmps
jbe
cs
loopne
mov
or
add
add
into
lds
jns
outs
scas
test
ja
stos
mov
mov
fist
(bad)
fidiv
add
in
out
div
push
sub
js
loop
dec
inc
mov
ds
ins
jmp
push
mov
cmp
retf
jl
xchg
retf
add
add
ror
jno
add
bound
xor
sub
sbb
rcr
lahf
mov
mov
push
ror
imul
mov
jg
das
fwait
push
sbb
dec
out
sbb
push
inc
push
dec
xlat
pop
cmp
jns
xor
or
in
inc
add
add
aas
retf
leave
mov
jl
mov
mov
pusha
cmp
jne
and
aad
adc
mov
jmp
ins
pusha
xchg
mov
repz
mov
popa
shl
fsubr
sub
stos
clc
sbb
mov
arpl
mov
add
add
dec
inc
push
push
sbb
dec
sbb
jae
and
repnz
adc
add
ficomp
mov
in
movs
xchg
cmp
jmp
aaa
mov
neg
inc
imul
dec
and
pushf
push
das
sub
adc
push
jecxz
clc
ret
loope
add
add
fdiv
push
(bad)
jp
dec
mov
add
test
xor
mov
lods
outs
mov
in
pop
retf
std
(bad)
sbb
(bad)
aas
add
iret
nop
mov
adc
scas
cdq
inc
xchg
mov
aam
or
adc
xchg
daa
push
xchg
gs
sbb
imul
xor
add
add
dec
arpl
clc
retf
jecxz
loopne
mov
sar
pop
(bad)
loopne
jmp
ins
xchg
test
mov
sub
xor
xchg
sti
daa
out
cmps
outs
dec
jle
add
cmc
rcr
adc
xor
outs
add
outs
fadd
(bad)
cmp
add
jns
xlat
sbb
js
cmp
dec
jp
not
repnz
jecxz
bound
push
jge
jbe
xor
xchg
push
loopne
ins
pop
sbb
cmp
jne
int
cmp
pop
and
sbb
(bad)
adc
push
mov
sbb
(bad)
movs
retf
icebp
mov
add
add
inc
adc
jmp
and
rcl
fnstenv
sub
es
dec
nop
aas
(bad)
out
shl
jmp
imul
mov
pop
fldcw
imul
nop
push
out
jp
dec
not
je
mov
mov
sbb
sbb
jp
sbb
add
add
adc
jl
sub
cmp
push
and
iret
punpckhdq
xchg
or
sbb
imul
or
mov
mov
push
or
sbb
rcr
sbb
or
nop
push
sbb
jp
sbb
and
sbb
ds
adc
pusha
out
fidivr
add
movs
push
jb
cmp
out
adc
adc
pop
les
jge
jb
enter
or
adc
cmp
fisttp
sar
(bad)
cmp
jmp
add
aaa
retf
xor
sub
xlat
sbb
shl
xchg
fimul
xor
sub
test
add
leave
frstor
sub
inc
pop
and
mov
and
sbb
pop
cmp
mov
sub
(bad)
outs
sub
pop
shl
cs
aaa
es
movs
adc
jno
sahf
or
leave
int3
jb
mov
push
jbe
pop
pop
je
pusha
les
and
add
cmp
cld
jl
jp
jl
mov
aaa
(bad)
inc
js
aaa
stc
jns
shl
ins
jmp
imul
outs
int
imul
push
movs
imul
xor
shl
cmp
sahf
bound
pop
arpl
pop
jmp
gs
inc
pop
fs
popaw
test
add
add
(bad)
dec
sti
inc
add
xor
push
dec
cmp
jle
dec
lahf
mov
dec
data16
mov
dec
mov
inc
inc
pmuludq
push
xor
inc
call
xchg
(bad)
aas
dec
sub
push
adc
push
dec
fnsave
push
add
push
ins
sbb
push
(bad)
gs
push
(bad)
fisubr
add
add
sub
pop
mov
or
pop
daa
imul
pop
sahf
fwait
pop
pop
xor
and
fwait
mov
loopne
shl
jecxz
dec
xor
aas
pop
in
out
cmps
lods
in
xchg
ja
lods
inc
adc
mov
popa
lahf
in
adc
std
push
call
add
add
out
mov
push
std
sub
sar
loop
xchg
lea
sbb
outs
je
sti
jbe
mov
jns
push
clc
jl
div
xchg
pop
mov
lock
sahf
or
(bad)
in
cmc
(bad)
pop
jl
and
test
cmp
repnz
cli
sub
nop
cli
jo
add
add
pop
pusha
mov
cmps
mov
es
xchg
push
and
aam
dec
sbb
test
pop
rcl
xchg
ror
nop
rcl
adc
adc
je
dec
lds
ins
xchg
les
fcmovb
lods
popf
or
ret
add
pop
rol
fldenv
rcr
cmp
mov
jle
cli
jae
enter
leave
add
add
cwde
xchg
int3
addr16
int
sub
int
push
lahf
xchg
pop
cld
pop
nop
adc
out
jo
xchg
xchg
jg
pop
xchg
xchg
pop
xchg
imul
lahf
arpl
sahf
sub
neg
mov
gs
imul
call
dec
mov
add
add
mov
mov
and
stc
mov
jae
adc
pop
sbb
or
js
xchg
test
add
loope
les
jnp
adc
stos
mov
test
scas
pop
mov
scas
out
pop
lods
or
popf
lods
or
lock
ret
div
cmps
add
add
or
movs
cmc
mov
clc
mov
into
sti
jno
rol
lods
mov
retf
xchg
mov
xor
mov
(bad)
mov
mov
jmp
pushf
rol
jae
add
cmp
xchg
mov
cmps
cli
adc
add
cwde
mov
add
add
dec
jne
mov
mov
add
(bad)
(bad)
sub
aaa
mov
call
movs
lds
lods
std
jl
add
xlat
dec
cmp
addr16
mov
bound
inc
sbb
out
xchg
call
inc
and
fild
shl
or
add
xchg
jnp
xchg
cmp
cdq
aas
mov
or
sbb
jb
push
shl
xor
mov
mov
movs
fnstenv
cmp
pushf
loope
(bad)
sub
sub
gs
stc
aaa
fstp
stos
jle
shl
fldl2e
xchg
inc
add
add
or
push
clc
test
sub
sub
push
lock
inc
mov
sbb
mov
leave
mov
stc
add
sub
mov
jmp
test
dec
or
mov
or
mov
adc
(bad)
lods
add
add
aad
ins
mov
jbe
xchg
pop
pop
lea
out
addr16
rol
add
sub
mov
imul
retw
xchg
sti
retf
mov
or
cmp
inc
mov
sar
or
pop
in
ficom
mov
hlt
mov
hlt
movs
movs
xlat
push
add
push
add
xchg
int
cmp
iret
sub
sbb
sub
dec
or
xchg
mov
ja
mov
(bad)
or
aaa
cmp
ds
cmps
mov
sbb
mov
in
dec
xchg
in
jb
cmp
les
fistp
sti
xor
nop
aas
cs
adc
ja
rol
jns
add
add
jmp
je
dec
dec
or
fdivp
xchg
push
mov
cld
sahf
jg
mov
cs
cmps
inc
cdq
push
retf
outs
push
xor
push
in
xor
aam
test
loope
inc
mov
jbe
fcomi
das
enter
jo
add
sub
push
nop
jecxz
fld
mov
xlat
jge
mov
pop
ins
sbb
aaa
mov
(bad)
xor
add
scas
nop
in
pop
stos
pop
xor
pusha
sub
jg
jmp
fsubrp
ror
jns
push
inc
xor
in
dec
imul
pop
push
das
and
jmp
mov
add
jb
pop
out
addr16
pop
not
ret
movs
jp
xchg
cmc
xor
sahf
out
int
and
xor
jmp
push
aaa
lods
pop
ins
push
add
daa
aad
adc
shl
jp
cmp
mov
and
add
sub
sbb
pop
stos
xchg
sbb
add
xor
jp
add
mov
retf
call
out
std
and
adc
repnz
inc
dec
lock
jno
xor
int3
xchg
in
fs
sahf
push
stc
fadd
adc
into
xchg
jmp
sbb
xor
push
(bad)
lock
inc
call
dec
add
add
lea
es
fstp
cmp
es
jns
add
cmp
sub
add
call
icebp
inc
fiadd
aam
adc
jle
cdq
outs
(bad)
xor
arpl
mov
fisubr
loope
test
repz
add
xor
jo
adc
gs
loopne
mov
add
add
or
mov
xlat
ds
pop
sub
pusha
rcl
cld
lods
mov
nop
cld
mov
jl
rol
inc
pop
sti
imul
jmp
xor
movs
int3
mov
add
push
fdiv
fucom
fiadd
add
xor
pop
ror
jmp
mov
(bad)
int
xchg
xor
ret
xor
ret
lods
movs
xchg
scas
call
mov
imul
in
or
adc
fs
push
repnz
bound
call
ror
add
add
inc
vpor
int3
movs
push
mov
je
aaa
jbe
push
mov
rol
clc
jp
sahf
enter
dec
dec
xchg
pop
fsin
aam
arpl
sti
hlt
das
jb
enter
pop
test
jl
jb
xlat
aam
pop
fadd
inc
cmps
(bad)
jae
mov
mov
cli
out
lea
enter
clc
inc
add
add
push
shl
ret
mov
leave
sub
or
and
cmp
push
adc
jmp
and
pop
test
pop
xlat
mov
or
aam
mov
iret
out
inc
je
xchg
adc
jnp
cmp
in
jo
pop
retf
add
add
mov
addr16
jmp
movs
int3
pop
leave
xor
jl
mov
sub
test
xchg
aad
sbb
jb
mov
in
popa
xchg
mov
add
push
hlt
jo
pusha
(bad)
stc
jp
fadd
jns
dec
inc
jle
in
outs
xlat
xchg
jnp
iret
in
stc
aam
push
mov
(bad)
ss
call
add
pop
jge
xchg
or
cmp
sbb
jo
jno
dec
inc
gs
dec
pusha
pop
cs
push
into
xchg
push
cmc
jae
push
and
inc
shl
mov
sti
out
call
cld
push
call
call
fimul
in
in
pop
xchg
in
leave
mov
outs
cmp
add
add
fidivr
stos
and
adc
xchg
mov
sbb
push
mov
push
pop
mov
lea
jmp
popf
mov
dec
sub
inc
imul
dec
push
push
cmp
and
push
mov
imul
or
dec
iret
call
scas
mov
mov
add
add
xchg
cmp
mov
inc
mov
mov
popf
outs
ficomp
mov
loopne
inc
jmp
mov
push
sbb
pop
in
push
retf
pop
and
add
jbe
lods
sub
and
ja
mov
into
outs
mov
push
add
xchg
dec
jnp
mov
scas
xchg
jle
mov
les
scas
out
push
jne
push
icebp
mov
addr16
push
fsubr
dec
and
loop
fiadd
sbb
dec
div
fstp
jae
faddp
cmp
into
push
lds
out
sub
mov
nop
xchg
sbb
jg
mov
and
gs
(bad)
in
add
add
add
fiadd
mov
jmp
push
or
dec
imul
out
out
cmps
fldcw
mov
cmp
dec
call
jo
repz
frstor
aas
push
in
test
dec
inc
add
sub
ss
fwait
add
add
mov
fidiv
jmp
inc
dec
stos
mov
jae
sub
add
sbb
pop
push
dec
data16
push
ss
ja
out
(bad)
call
pop
mov
sbb
ficom
fistp
(bad)
out
xor
adc
add
mov
add
in
cwde
ss
mov
data16
addr16
int
push
fdiv
stos
or
ret
cmp
cmp
mov
cmp
jg
push
out
jmp
imul
cmps
mov
repz
test
inc
sub
leave
push
mov
call
xchg
sbb
add
add
dec
jp
xchg
fdiv
aaa
out
jnp
sahf
jecxz
sbb
loopne
(bad)
in
add
or
shl
(bad)
push
ret
dec
jl
add
xchg
jmp
xchg
fwait
add
ret
jne
mov
mov
dec
ds
cmp
loop
sbb
jmp
adc
mov
shl
add
add
cmp
rcl
inc
xchg
add
(bad)
push
pop
dec
rcl
add
xchg
cmps
mov
sbb
(bad)
cli
fcmovne
ror
call
popa
sbb
cdq
fbld
inc
sti
popf
jns
sbb
fwait
dec
xor
xchg
push
popaw
xchg
adc
cmps
mov
stos
and
mov
push
inc
fwait
stos
add
add
call
xchg
shr
(bad)
in
imul
xlat
pop
out
outs
in
sub
test
repz
mov
mov
mov
xlat
icebp
test
jecxz
xor
in
mov
and
mov
push
dec
fidivr
xchg
vmwrite
jle
ds
pushf
stos
daa
cmp
add
add
cmps
ds
mov
sbb
lahf
xor
(bad)
cmp
add
mov
xor
xlat
ret
mov
lds
dec
scas
out
xchg
(bad)
cmps
pop
or
sbb
or
lods
xor
and
jnp
push
retf
dec
push
xchg
popa
adc
in
sti
xchg
xor
test
rol
add
add
and
xchg
xchg
jp
pop
lahf
cmps
rcr
pop
xor
addps
jae
sbb
out
fidiv
or
push
out
mov
and
in
fwait
mov
(bad)
cmp
and
dec
in
pusha
popa
mov
shr
and
sub
pop
aaa
sbb
add
add
jmp
pushw
ja
sbb
dec
mov
jo
je
ins
daa
xor
jbe
jl
jge
retf
jo
mov
repnz
adc
mov
add
and
scas
out
mov
dec
cmp
pop
lea
add
leave
in
retf
adc
add
add
sub
push
push
(bad)
cs
sbb
cmovae
jnp
rcr
cmp
lds
rcl
push
(bad)
mov
test
xchg
pop
inc
mov
cwde
sahf
xchg
fcomp
cmp
cmp
pop
sbb
or
lods
push
adc
pop
xor
push
pop
nop
cmps
dec
push
rol
add
add
adc
push
adc
xchg
xchg
cli
mov
fwait
cmp
rcr
sub
lea
outs
aad
daa
cs
and
adc
neg
add
push
and
push
mov
addr16
add
mov
sub
cmp
add
add
adc
push
in
dec
push
std
(bad)
dec
ds
pop
sub
mov
fadd
icebp
and
xor
into
gs
(bad)
loopne
jne
vmovd
scas
ja
and
dec
mov
ror
mov
lods
jns
sub
dec
pop
repz
popa
cmp
sub
mov
loopne
pop
add
add
lds
(bad)
int3
jb
test
xor
test
sub
retf
fbstp
pop
xchg
popf
mov
fmul
sub
sbb
xor
pop
cdq
and
ds
je
ins
push
jg
sbb
xchg
test
aam
xrelease
pop
jmp
jmp
in
add
add
sub
lods
push
xor
das
push
and
pop
jno
test
iret
inc
push
loop
sub
cmp
and
movs
pop
call
daa
daa
push
scas
mov
jg
jl
mov
int3
bound
push
loopne
popa
cmp
cld
sbb
cmp
jmp
sbb
jbe
xor
lahf
and
jp
add
add
jnp
mov
movs
push
hlt
adc
or
sti
xor
mov
push
mov
jb
fiadd
add
sbb
imul
leave
outs
neg
fsubr
scas
mov
mov
xor
test
addr16
mov
mov
je
sar
fs
ret
outs
add
or
add
add
ss
jno
leave
inc
arpl
pushw
jb
or
outs
ror
lods
outs
add
into
ret
movs
cmc
ss
enter
jmp
xchg
cmp
pop
adc
and
and
popa
jnp
fistp
xor
sub
mov
mov
outs
in
mov
rcr
or
add
add
sbb
push
mov
push
fiadd
pop
fcomi
ins
outs
leave
mov
test
push
sub
test
mov
test
jmp
aam
or
cmps
sbb
xor
or
pop
leave
pop
jbe
dec
push
cmp
jnp
cli
cwde
and
mov
retf
pop
dec
adc
or
mov
hlt
add
add
inc
dec
arpl
rcr
mov
rcl
test
xor
sbb
sub
jge
jb
stos
call
xor
adc
or
call
jg
(bad)
std
pusha
push
sbb
push
loopne
fisub
add
add
dec
jae
ds
loope
dec
(bad)
push
add
cs
xchg
test
push
mov
aam
mov
mov
push
and
das
push
dec
cs
fs
ret
and
lock
int3
movs
jmp
scas
stc
lahf
cmp
add
add
call
movs
das
inc
in
dec
jae
sub
sub
out
sbb
mov
mov
or
mov
jbe
stos
mov
movs
popa
imul
std
cmp
dec
mov
fadd
jno
xchg
xor
enter
xchg
xor
xchg
inc
push
ins
(bad)
add
jno
add
add
(bad)
dec
mov
fxch
shl
imul
push
xor
xchg
cld
add
leave
dec
cmp
cmp
jmp
in
adc
pop
mov
lods
lock
popa
sahf
sar
repz
jne
sub
mov
sbb
add
jne
loopne
dec
add
add
push
push
cmp
sub
add
gs
xchg
sbb
test
cli
xor
int
xchg
dec
pusha
int3
push
es
sahf
and
cmp
dec
mov
nop
fmul
jnp
add
jp
push
out
push
shl
add
cmp
pushw
leave
sbb
add
add
aas
jmp
sub
mov
cmp
xor
int3
daa
cli
xor
cmc
stos
jg
hlt
ins
fst
(bad)
out
mov
in
movs
jp
in
arpl
icebp
loopne
div
out
inc
xor
mov
jne
add
icebp
ja
jns
cs
sbb
imul
pushf
cmp
stos
imul
jne
xchg
pop
mov
xor
adc
sub
pop
and
and
mov
jge
push
and
loopne
dec
pop
repnz
ret
or
imul
mov
inc
sub
mov
mov
xlat
shr
mov
add
sbb
push
jo
popf
rol
pushf
jnp
xchg
mov
pop
stc
xor
dec
xchg
sub
and
dec
outs
jmp
loop
inc
inc
mov
inc
repz
es
stos
(bad)
pop
xchg
cwde
aad
out
fwait
xchg
mov
(bad)
or
or
add
add
leave
scas
cmp
xchg
(bad)
popa
les
push
scas
add
push
mov
dec
xchg
xor
cld
xchg
mov
xor
in
in
add
lods
pop
push
gs
enter
sahf
out
arpl
xchg
cld
in
sbb
dec
fcom
cs
adc
cmp
fs
fidiv
add
add
fiadd
scas
mov
xchg
cld
xor
add
lahf
fdivr
and
adc
imul
jno
sub
lods
mov
std
inc
and
pop
es
leave
sbb
stos
(bad)
rcr
(bad)
xor
inc
adc
lods
in
daa
ss
test
ds
mov
mov
add
add
nop
sub
or
and
mov
xchg
jno
aad
jae
ds
sti
outs
sbb
xchg
xchg
xor
int
cld
mov
mov
sahf
jg
sub
cmp
push
xchg
pop
imul
scas
std
xchg
sub
mov
pop
cmp
dec
mov
add
add
ja
mov
es
dec
xchg
(bad)
pop
pop
cmp
add
jmp
sar
adc
loopne
sbb
push
add
mov
lods
pop
add
int
jne
xlat
test
and
pop
push
mov
cmp
mov
push
out
pop
(bad)
push
fdiv
dec
test
(bad)
cmc
adc
out
nop
sar
daa
sbb
push
dec
fcmovbe
inc
sub
out
faddp
xor
mov
dec
cmp
outs
xchg
xor
jp
add
test
jb
mov
fwait
push
push
loopne
div
loop
popf
fisttp
add
add
into
in
jmp
and
add
xchg
push
ficomp
xchg
(bad)
push
pop
bound
stc
xor
push
(bad)
jno
jnp
retf
jo
inc
scas
jb
out
inc
cli
mov
and
cmp
push
cmp
clc
shl
popf
inc
mov
and
sub
mov
add
mov
rcr
mov
shr
and
xor
ins
ins
call
sbb
mov
xor
clc
mov
mov
pop
mov
push
or
jno
ror
xchg
ins
mov
loopne
imul
cmp
jl
repz
xchg
add
add
fdiv
adc
fcomp
in
fwait
cs
add
mov
dec
sbb
je
jns
inc
adc
xor
add
fstp
ror
cmps
(bad)
jle
dec
jmp
fldenv
xor
aam
inc
(bad)
(bad)
pop
stc
popa
push
xor
mov
rcr
mov
ss
aad
push
adc
cmp
mov
adc
loope
mov
xlat
int
jmp
test
(bad)
cmovbe
push
jne
and
adc
sub
fwait
jnp
lock
lds
test
pop
xchg
fild
mov
fwait
adc
add
add
int
js
and
jle
fcmove
inc
ret
mov
mov
lods
sti
popa
push
xchg
push
mov
jmp
push
or
cld
lock
mov
ja
ins
sbb
xor
rol
pop
and
mov
jecxz
ins
scas
pop
std
add
add
add
push
repz
gs
inc
cmp
stos
jb
test
mov
pop
adc
inc
sub
(bad)
sub
clc
mov
xchg
push
in
out
js
mov
imul
cmp
and
jmp
enter
retf
or
(bad)
dec
outs
jmp
ret
add
adc
retf
sub
add
xor
loop
xchg
xchg
aam
jnp
call
sub
out
xor
sub
cmp
pop
cwde
(bad)
mov
xchg
adc
div
in
add
in
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
add
fiadd
add
fiadd
add
fiadd
add
add
fiadd
add
add
ja
add
ja
add
push
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
xor
adc
in
fadd
push
out
pop
or
add
add
fsincos
add
(bad)
push
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
imul
add
push
add
jnp
add
imul
add
add
add
add
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
je
add
data16
add
add
jnp
add
shl
add
xlat
or
jo
or
and
or
pusha
fmul
add
xlat
or
nop
fmul
add
fmul
add
fmul
add
fisttp
add
loopne
add
loopne
add
loopne
add
fisttp
add
fisttp
add
add
add
or
neg
or
jbe
or
(bad)
fisttp
add
or
push
loopne
add
fisttp
add
fisttp
add
loopne
add
loopne
add
fisttp
add
fimul
add
or
(bad)
or
outs
fisttp
add
fimul
add
or
(bad)
or
mov
or
push
fisttp
add
add
add
fisttp
add
fimul
add
fisttp
add
loopne
add
loopne
add
fimul
add
or
cli
fisttp
add
or
retf
add
or
sbb
or
mov
or
mov
loopne
add
loopne
add
loopne
add
fimul
add
add
add
fimul
add
fisttp
add
or
and
or
(bad)
fimul
add
fisttp
add
fimul
add
fimul
add
fisttp
add
loopne
add
loopne
add
loopne
add
fisttp
add
fisttp
add
or
cmc
fisttp
add
or
(bad)
add
or
add
add
adc
fisttp
add
fisttp
add
fisttp
add
fisttp
add
or
(bad)
add
or
fstp
or
ins
fisttp
add
fmul
add
or
fstp
or
(bad)
fisttp
add
fisttp
add
fmul
add
loopne
add
add
add
loopne
add
fmul
add
or
stc
fisttp
add
or
leave
fmul
add
or
sbb
or
mov
or
mov
loopne
add
loopne
add
loopne
add
fmul
add
fmul
add
fisttp
add
or
and
or
add
add
popa
fmul
add
fisttp
add
fmul
add
fmul
add
fisttp
add
loopne
add
loopne
add
loopne
add
fisttp
add
loopne
add
pop
add
pop
add
fild
add
loopne
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
add
pop
add
pop
add
pop
add
fiadd
add
fild
add
pop
add
pop
add
fild
add
pop
add
pop
add
fiadd
add
fild
add
fild
add
loopne
add
pop
add
pop
add
pop
add
pop
add
fild
add
fiadd
add
fiadd
add
fld
add
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
fiadd
add
fld
add
loopne
add
fild
add
pop
add
pop
add
fiadd
add
pop
add
pop
add
fiadd
add
pop
add
pop
add
fild
add
fiadd
add
pop
add
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
fld
add
fiadd
add
fiadd
add
pop
add
pop
add
fild
add
fadd
add
pop
add
pop
add
pop
add
pop
add
pop
add
fiadd
add
pop
add
pop
add
fadd
add
add
add
pop
add
pop
add
fld
add
fiadd
add
fadd
add
fiadd
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
fild
add
fadd
add
loopne
add
pop
add
pop
add
fiadd
add
pop
add
add
add
pop
add
fadd
add
pop
add
pop
add
fild
add
pop
add
pop
add
fild
add
fiadd
add
jmp
cmc
call
push
cmc
push
inc
inc
cmc
call
dec
fcomip
dec
cmc
dec
inc
add
add
xlat
cmc
(bad)
cmp
cmc
(bad)
call
fdiv
call
fdiv
dec
cmc
(bad)
mov
xlat
cmc
dec
fcomip
(bad)
clc
xlat
cmc
jmp
fisttp
add
fmul
add
fmul
add
fisttp
add
fimul
add
push
repz
repz
jmp
fcomip
inc
add
add
fcomip
push
fcomip
push
fcomip
jmp
fcomip
push
fcomip
(bad)
out
fdivp
(bad)
(bad)
repz
jmp
push
fdivp
push
fdivp
jmp
fdivp
push
fdivp
(bad)
fstp
repz
fdivp
push
fdivp
jmp
fdivp
jmp
repz
repz
add
add
repz
jnp
repz
add
repz
fdiv
add
sub
std
pop
sub
std
pop
cmp
push
or
cs
pop
or
push
pop
or
push
pop
or
push
pop
or
push
or
out
push
or
call
call
lock
add
push
add
push
add
push
add
push
add
add
add
push
add
push
add
push
add
push
cld
or
push
cld
or
push
cld
or
push
cld
or
push
cld
or
push
cld
or
push
cld
or
push
cld
or
dec
sti
or
bound
or
xor
or
inc
dec
sti
or
xor
or
and
or
add
add
repnz
sti
or
add
or
repz
dec
ret
push
dec
jecxz
dec
jecxz
dec
mov
dec
jecxz
dec
ret
push
dec
mov
push
dec
ret
push
dec
mov
push
dec
jae
dec
arpl
push
adc
arpl
push
je
adc
data16
adc
loopne
adc
add
add
jmp
adc
pop
jmp
cmp
add
sbb
sbb
sub
sbb
sub
sbb
fucom
pop
sbb
loopne
sbb
loope
sbb
loope
sbb
loope
sbb
loope
sbb
loope
sbb
loope
sbb
loope
sbb
ficomp
sbb
ficomp
sbb
ficomp
sbb
add
add
ficomp
sbb
sbb
pop
ficomp
sbb
fistp
sbb
fistp
sbb
or
jo
or
jo
or
xor
or
pusha
xlat
or
push
xlat
or
adc
or
xor
or
and
or
xor
or
xor
or
xor
or
loopne
or
rcl
or
adc
or
lock
or
loope
or
icebp
aad
sbb
mov
or
rcl
or
mov
or
mov
or
mov
or
push
aad
sbb
jno
or
push
push
or
pop
push
or
xor
or
inc
cld
or
push
sti
or
add
add
and
adc
and
adc
xor
jmp
adc
out
adc
imul
adc
imul
adc
call
fld
mov
fld
jmp
fiadd
adc
mov
jmp
push
call
push
mov
in
add
pop
jnp
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
or
sbb
sbb
loop
sbb
loop
sbb
loope
sbb
loope
sbb
fist
sbb
loop
sbb
loop
sbb
loop
sbb
loop
sbb
loop
sbb
loop
sbb
add
add
loop
sbb
loop
sbb
loope
sbb
loope
sbb
sbb
pop
loope
sbb
loope
sbb
loope
sbb
fadd
add
add
data16
add
add
cmp
add
sub
add
sub
add
sub
add
sub
add
fadd
add
fadd
add
fadd
add
fild
add
add
add
fild
add
add
lock
add
add
or
add
aam
add
or
add
hlt
fild
add
add
add
add
adc
add
xor
add
push
fild
add
add
add
int
cmc
jmp
add
add
jbe
add
ja
add
push
fild
add
add
add
add
pusha
fild
add
add
or
add
push
fild
add
add
add
add
xor
add
in
add
fild
add
fadd
add
fild
add
dec
cmc
jmp
dec
cmc
push
cmc
jmp
add
mov
cmc
push
cmc
inc
add
add
cmc
push
add
add
jb
inc
push
add
add
add
add
add
push
add
adc
add
cmc
push
jne
and
xor
add
dec
repz
inc
dec
add
inc
or
add
dec
cmp
hlt
inc
ins
add
add
add
inc
sub
add
dec
adc
mov
pop
add
movs
add
jge
movs
inc
cmp
add
push
add
add
loop
addr16
sub
je
imul
fs
mov
push
sbb
and
popf
add
add
xor
jns
and
cmp
and
fld
in
std
push
inc
push
add
aam
add
xlat
cwde
add
aad
add
aam
add
aam
add
xlat
fadd
out
add
add
mov
push
cmp
movs
xlat
clc
add
add
add
add
mov
add
and
je
jb
fs
add
add
or
xor
bound
and
and
and
xchg
add
add
xor
add
aam
add
aam
in
cmc
push
rcr
in
sbb
in
test
call
sar
in
cmp
in
les
out
adc
mov
push
movs
shr
add
add
add
or
mov
mov
movs
ror
movs
fsub
add
push
add
add
xor
je
data16
add
add
std
push
push
add
push
add
pushf
add
idiv
xor
jbe
and
add
fadd
in
pop
add
ror
add
add
in
push
add
ror
hlt
shr
in
cs
ror
add
rcr
add
push
add
(bad)
push
add
add
je
dec
add
add
add
je
outs
add
add
add
add
add
add
pop
add
pop
add
mov
push
jg
and
aas
add
loop
in
idiv
hlt
rcl
in
pop
add
rcl
add
shl
in
aaa
add
rcl
add
aam
add
daa
add
pop
add
inc
add
add
fs
push
add
add
add
sub
je
arpl
shl
add
add
sti
push
push
add
adc
and
stos
add
repz
jae
and
xor
and
jmp
ror
in
or
in
call
shr
in
sub
add
add
in
fiadd
out
add
add
mov
push
cmp
movs
xlat
cli
add
add
add
add
rol
frstor
add
add
add
add
or
xor
popa
add
and
and
xchg
add
add
xor
add
and
inc
add
(bad)
add
(bad)
push
xlat
pop
add
xlat
sbb
in
xchg
call
xlat
jns
in
cmp
in
mov
ficom
add
sub
movs
shl
add
dec
add
repz
add
add
xor
add
add
je
add
add
add
std
push
push
add
adc
add
cmc
push
jne
and
xor
add
fld
add
(bad)
dec
add
(bad)
or
add
xlat
popa
add
(bad)
ins
add
(bad)
sub
add
xlat
sbb
mov
pop
add
scas
add
add
add
jge
movs
(bad)
cmp
add
add
je
push
add
add
jno
data16
or
add
add
add
add
pusha
add
and
and
lahf
add
add
xor
add
(bad)
inc
add
idiv
hlt
aad
add
aad
add
add
add
(bad)
pop
out
cmp
hlt
aad
add
aad
add
(bad)
iret
add
fmul
add
sub
movs
(bad)
scas
add
mov
movs
aad
add
hlt
push
add
add
loope
fsubr
add
add
add
add
sti
push
add
and
adc
and
cmps
add
je
and
xor
and
out
in
or
hlt
aam
add
aam
add
iret
xchg
add
fst
hlt
aam
add
aam
add
iret
xlat
add
fld
add
mov
mov
cld
push
cmp
movs
iret
test
add
add
je
push
add
add
mov
add
add
add
add
or
xor
bound
and
and
and
xchg
add
add
xor
add
aam
add
rol
in
cmc
push
rcr
in
sbb
in
add
fiadd
hlt
sar
in
cmp
in
ret
add
add
add
ficom
add
sub
movs
shl
add
dec
add
repz
add
add
xor
je
data16
add
add
std
push
push
add
push
add
fwait
add
idiv
xor
jbe
and
add
add
add
fild
in
pop
add
ror
in
push
add
ror
add
shr
in
cs
ror
add
fistp
add
push
add
(bad)
push
add
add
je
dec
add
add
add
je
outs
add
add
add
add
add
add
pop
add
pop
add
mov
push
jg
and
aas
add
loope
in
idiv
hlt
rcl
in
pop
add
rcl
add
shl
in
aaa
add
rcl
add
fmul
add
daa
add
pop
add
add
add
inc
add
hlt
push
add
add
add
sub
je
arpl
shl
add
add
sti
push
push
add
adc
and
test
push
jae
and
xor
and
jmp
add
ror
in
or
in
cdq
add
add
add
cmp
imul
shr
add
iret
fld
out
push
add
sbb
movs
iret
mov
push
cmp
movs
iret
stc
add
add
add
add
rol
cmp
jno
shl
add
add
or
xor
popa
add
and
add
add
and
xchg
add
add
xor
add
and
aad
in
idiv
hlt
out
add
out
add
call
inc
add
out
add
out
add
call
adc
mov
imul
movs
call
or
mov
mov
movs
out
add
hlt
push
add
add
add
add
xor
je
add
add
add
(bad)
push
push
add
adc
add
cmc
push
jne
and
xor
add
cmp
add
out
add
out
add
in
add
aaa
bound
hlt
out
add
out
add
in
add
aaa
sbb
add
add
mov
pop
add
lods
add
jge
movs
out
add
add
pop
cmp
add
adc
(bad)
add
gs
call
add
cmp
xor
add
cmp
add
add
cmp
add
cmp
and
cmp
add
cmp
or
cmp
inc
add
add
cmp
(bad)
fstp
add
cmp
add
cmp
sbb
cmp
(bad)
fnstsw
add
mov
cmp
pusha
in
stc
(bad)
fdivr
add
mov
cmp
xor
cmp
or
cmp
add
cmp
jmp
add
add
jl
cmc
(bad)
jge
idiv
outs
(bad)
jmp
hlt
jmp
add
add
add
popa
fld
add
(bad)
jmp
add
inc
pop
push
data16
push
push
sbb
bound
js
jge
pop
je
or
das
xor
jg
sub
adc
pusha
imul
pop
and
jle
imul
ins
or
add
add
mov
add
mov
add
add
add
pop
add
hlt
jmp
dec
fdiv
push
add
xor
inc
and
cmp
fdiv
jmp
add
fcom
add
add
fcom
add
xor
add
add
xor
add
add
add
loopne
add
cld
xor
add
cld
xor
lods
fild
add
add
movs
fild
add
add
je
add
fild
add
inc
je
add
je
add
adc
out
push
add
push
fild
add
add
and
add
add
add
xor
add
sbb
add
jo
add
jl
cmp
loopne
add
mov
add
add
cmp
lock
add
add
add
add
add
inc
or
sti
fild
add
or
out
fild
add
add
cmp
add
or
cmp
dec
aas
or
add
add
mov
sahf
cmp
dec
ds
add
cmp
test
add
add
add
add
cmp
movs
inc
add
add
cmp
outs
inc
add
add
add
add
add
lahf
cmp
test
add
add
add
add
add
or
loopne
add
or
loopne
add
cmp
mov
or
fld
add
cmp
and
or
dec
fld
add
add
sub
adc
add
ins
mov
add
or
(bad)
fadd
add
mov
add
sub
add
sbb
cmp
lock
add
add
jl
cmp
in
add
in
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
into
fcomp
add
add
jo
push
fadd
add
add
add
add
push
add
add
add
add
loopne
add
pop
add
fcomp
xchg
fcom
fdiv
inc
fsubr
add
push
add
fild
add
fcomp
push
fsub
add
pop
add
add
fsub
(bad)
xlat
add
fcom
(bad)
fbld
add
push
add
fsub
add
fild
add
xlat
jb
add
add
xchg
fistp
xchg
and
pop
fcomp
(bad)
fistp
dec
fbld
dec
fbld
mov
fsub
add
add
jb
xchg
pop
add
fbstp
cdq
fistp
js
add
add
add
fisub
add
fadd
add
fadd
add
ficom
push
fcomp
add
add
dec
fcom
push
fsub
add
ja
clc
xlat
push
add
fsubr
add
jb
push
fcomp
xchg
fisub
add
fdiv
sbb
pop
add
add
push
add
jb
pop
fisubr
cmp
push
add
fsub
add
add
imul
pop
add
ficom
add
add
mov
ficomp
mov
and
xchg
push
add
fdiv
pop
fsub
add
fadd
add
fdiv
dec
fdiv
add
pop
add
pop
add
fsub
(bad)
add
fcomp
aam
push
add
fsub
fld
add
fdiv
dec
fnsave
add
pop
add
add
add
pop
add
add
sub
inc
fstp
push
frstor
dec
fstp
fst
call
add
add
imul
pop
add
fcom
pop
fsub
fcomp
pop
fsub
add
inc
add
xlat
push
add
jno
or
pop
add
xlat
arpl
pop
fsub
add
add
add
fadd
add
xlat
jb
push
fcomp
xchg
fsub
add
xlat
inc
add
fcom
push
fdiv
pop
fcomp
pop
fsub
inc
fsub
add
add
fcomp
xchg
and
xchg
push
add
fsub
(bad)
fcomp
mov
and
mov
pop
add
(bad)
add
fild
add
add
add
fdiv
push
fcomp
inc
fsub
add
fdiv
cmp
fcomp
pop
fsub
add
add
fcom
(bad)
(bad)
add
jno
or
jb
(bad)
fistp
push
fcomp
xchg
add
sub
push
(bad)
push
(bad)
dec
(bad)
xchg
(bad)
inc
fist
adc
push
add
add
add
push
add
fild
add
xor
pop
fild
add
add
xor
hlt
fiadd
add
inc
add
fiadd
add
pop
cld
or
fiadd
add
xor
mov
inc
outs
add
sbb
cmp
dec
pop
jae
dec
push
add
sub
add
add
mov
dec
sub
dec
jns
popa
push
daa
pop
or
popa
add
or
fiadd
add
pop
add
ficomp
cwde
ficomp
add
ja
test
push
add
and
sbb
add
fdiv
pop
fcomp
add
pop
add
fcom
add
add
add
cmp
adc
bound
and
arpl
add
push
add
xlat
sub
movs
fld
add
fldenv
add
add
fcomp
(bad)
fldenv
fstp
dec
fstp
add
fst
cwde
fldcw
xor
add
ja
pop
add
fstp
mov
sbb
pop
fnstenv
add
add
xchg
fcom
and
add
mov
push
add
add
fadd
add
das
xor
or
aaa
cld
push
inc
inc
daa
sbb
inc
in
add
not
pop
add
fsub
fcomp
sbb
sbb
clc
xlat
add
fdiv
add
jno
std
xlat
add
fadd
add
add
push
add
pop
add
add
add
fadd
add
fcom
add
push
add
add
add
mov
jno
mov
add
jnp
push
add
add
rcr
add
fild
add
add
push
add
pop
add
add
push
add
fbld
pop
loopne
add
loopne
add
loopne
add
add
add
loopne
add
loopne
add
loopne
add
loopne
add
add
fild
add
jb
push
fistp
dec
fbld
add
add
push
add
arpl
xchg
pop
add
add
fbld
fbstp
xor
add
inc
fbld
fbstp
hlt
fiadd
add
loopne
add
add
add
pop
add
pop
add
push
add
push
add
loopne
add
jb
mov
fiadd
add
loopne
add
loopne
add
loopne
add
ficom
xchg
fidiv
adc
jb
push
fisub
add
add
pusha
jb
dec
pop
add
push
imul
and
call
imul
dec
js
test
xor
add
mov
gs
jge
ins
push
fiadd
add
and
jmp
pop
outs
push
push
sub
dec
jge
fs
inc
jb
adc
add
inc
jge
jne
jge
je
dec
push
jb
fld
add
jge
test
or
cmc
dec
inc
jb
xchg
and
call
inc
jb
add
add
cmp
fld
add
outs
je
inc
jb
mov
fld
add
add
add
push
add
cmp
arpl
inc
add
cmp
jae
cmp
fld
pop
fld
mov
xor
nop
fmul
and
loopne
add
loopne
add
loopne
add
fistp
add
add
add
loopne
add
inc
add
fistp
add
fisttp
fild
pop
loopne
add
loopne
add
fisttp
jge
outs
add
pop
add
inc
add
pop
add
inc
add
jb
xchg
fcomp
inc
fcomp
xor
add
push
mov
jae
fadd
add
add
xchg
shl
fwait
fs
add
add
mov
push
popa
pusha
scas
pop
add
arpl
add
std
loope
gs
xor
fnstenv
and
mov
add
aam
and
jecxz
xor
icebp
xor
or
push
movs
fild
add
add
add
jb
(bad)
fist
loopne
add
loopne
add
popa
add
add
add
xor
fild
add
push
add
(bad)
add
(bad)
add
fistp
dec
(bad)
add
fiadd
add
loopne
add
fiadd
add
inc
xor
pop
jae
mov
push
dec
stos
addr16
push
lea
push
xchg
push
fnstenv
push
add
add
add
fiadd
add
mov
add
sbb
add
inc
ficom
inc
ficom
add
and
inc
ficom
xchg
fisubr
dec
fisub
add
pop
add
and
sahf
fisubr
sbb
add
add
mov
pop
add
ficomp
xchg
fldenv
fstp
push
loopne
add
pop
add
add
add
and
and
bound
ds
add
add
pop
add
loopne
add
fs
fbld
add
loopne
add
loopne
add
fldcw
push
fstp
fld
add
jp
je
add
mov
add
dec
fstp
push
fstp
inc
fstp
ins
fstp
add
add
and
add
xchg
mov
add
xchg
addr16
add
push
add
pop
add
fs
fild
add
pop
add
pop
add
fadd
add
mov
add
adc
xor
retf
add
loopne
add
fadd
add
add
add
push
add
adc
dec
fsub
add
pop
add
fcomp
xchg
popa
add
push
add
fdivr
add
add
fcom
add
fist
xchg
outs
add
and
push
fcomp
inc
fsub
fsubr
pop
fcomp
inc
fadd
add
pop
add
add
add
fsub
fbstp
add
pop
add
fsub
add
fistp
add
add
add
fsubr
dec
fistp
pop
fild
add
push
bound
add
jb
dec
add
aam
add
(bad)
add
fild
add
aam
add
(bad)
add
fbld
add
sub
fistp
add
add
add
fidiv
add
fisubr
add
aam
add
fsub
add
aam
add
aam
add
fidivr
add
aam
add
fdiv
(bad)
fisubr
add
mov
pop
gs
mov
add
xchg
lods
pop
mov
add
dec
cmps
fs
push
lods
pop
fs
mov
add
jb
inc
add
add
add
sub
fidiv
add
fsub
add
fisubr
add
fidivr
add
fidivr
add
fisub
add
xor
fld
add
fld
add
fld
add
and
or
sub
add
fnstcw
add
aam
add
fnstcw
mov
cs
fnstsw
add
fld
mov
fldenv
add
add
add
fld
pop
fld
(bad)
fnstenv
add
aam
add
fsub
add
aam
add
fnstcw
add
sar
add
fldenv
add
and
ja
xor
add
fldcw
add
fnstcw
add
fnstcw
push
frstor
push
fldcw
add
fnstenv
add
fdivr
add
fsubr
add
fdivr
adc
inc
add
fsub
add
add
add
fadd
adc
and
daa
fdivr
add
fild
mov
add
pop
mov
jae
mov
pop
add
fcomp
repz
pop
add
fsubr
js
push
add
pop
add
add
pop
arpl
xor
xchg
cmps
pop
fs
mov
add
inc
fadd
add
mov
add
cwde
out
add
imul
jl
pop
add
fist
fcomp
inc
fsubr
dec
fcom
and
pop
add
fdiv
push
fcomp
pop
fsubr
push
fsub
fdiv
add
fild
add
fistp
fsubr
add
pop
add
xlat
dec
add
fcomp
fild
add
add
add
outs
je
mov
gs
sti
pop
outs
cwde
sti
push
outs
cdq
mov
add
jb
xchg
pop
jo
mov
outs
mov
pop
outs
xchg
jb
mov
add
cdq
test
outs
xchg
push
gs
lods
pop
outs
dec
clc
pop
gs
mov
push
and
mov
gs
clc
bound
mov
add
les
add
cmps
jb
push
clc
jb
add
clc
pop
outs
xchg
jb
inc
mov
popa
push
mov
pop
add
push
fs
jle
xor
ins
je
cmps
and
mov
and
mov
gs
bound
mov
pop
ins
mov
add
mov
add
add
fcomp
add
fcomp
cmp
pop
add
pop
add
jb
mov
add
sti
xlat
push
add
fcomp
sbb
add
pop
fsub
fdiv
cwde
fld
add
xor
outs
fld
add
pop
ins
pop
mov
je
fld
add
fadd
fst
stos
fnstcw
add
cmp
pop
fadd
add
popa
jo
mov
outs
mov
pop
add
fs
add
lods
mov
test
add
cmp
add
add
add
dec
mov
pop
cmp
dec
mov
popa
gs
push
gs
add
mov
popa
cmp
movs
fadd
add
add
fcomp
arpl
outs
add
push
add
pop
add
add
and
add
pop
add
push
add
fcom
cdq
fadd
add
add
pop
add
fbld
hlt
fild
add
fs
pop
sbb
jg
gs
aad
add
add
add
sbb
jg
gs
aad
add
fild
and
pop
add
pop
add
loopne
add
loopne
add
fistp
add
outs
add
fistp
loopne
add
pop
add
imul
xchg
fbstp
add
add
sbb
add
sbb
add
sbb
add
add
cmp
adc
add
sbb
add
sbb
add
sbb
add
fdiv
add
loopne
add
fsubr
add
fisub
add
fadd
rcr
sub
fstp
add
fld
add
sbb
add
and
add
sbb
add
sbb
mov
loopne
add
fdivr
add
add
add
cs
fadd
cmps
sbb
add
sbb
add
loopne
add
sbb
add
sbb
push
sbb
add
sbb
add
sbb
add
sbb
add
fiadd
add
sbb
add
fsubr
add
fadd
das
fadd
add
popa
add
outs
add
loopne
add
outs
add
fst
loopne
add
add
add
ss
sbb
add
sbb
add
fadd
add
push
add
loopne
add
add
imul
add
fld
add
dec
add
loopne
add
sbb
add
sbb
add
sbb
add
sbb
push
sbb
add
fdivr
add
sbb
add
add
add
inc
add
in
add
in
add
jecxz
add
loopne
add
in
add
loopne
add
loopne
add
jecxz
add
loopne
add
jecxz
add
xor
add
add
and
adc
js
fadd
add
js
push
fcomp
xchg
fsub
fcomp
push
fsub
add
add
add
loopne
add
add
fcomp
test
add
pop
add
(bad)
sbb
add
pop
add
and
pop
loopne
add
add
repnz
or
and
add
(bad)
add
jecxz
add
fbstp
add
(bad)
add
fbld
add
fbstp
add
fbld
add
add
leave
fbstp
add
fild
add
loopne
add
imul
dec
fisttp
dec
(bad)
xchg
fistp
xchg
sub
js
pop
add
add
add
pop
fild
add
ficomp
xchg
push
add
enter
mov
mov
inc
rcr
mov
push
add
add
add
pop
add
add
pop
add
loopne
add
loopne
add
fild
add
test
add
imul
inc
fiadd
add
add
inc
fiadd
add
fiadd
add
pop
outs
dec
fiadd
add
fiadd
add
xor
add
add
xchg
ins
test
mov
add
xchg
test
add
pop
ins
dec
jp
jae
fld
add
loopne
add
loopne
add
jo
and
ins
adc
fisttp
clc
fild
fistp
add
add
fld
add
fstp
add
add
je
add
inc
mov
fld
add
inc
add
fld
jg
inc
add
fld
add
jnp
fs
add
inc
fnstsw
add
fdiv
add
fadd
inc
in
add
data16
fadd
add
in
add
fdiv
add
fadd
and
add
pop
jg
arpl
jl
add
add
add
fsubr
add
fdiv
add
fadd
add
mov
cmp
fadd
add
pop
gs
mov
gs
add
dec
mov
gs
outs
je
fadd
add
fadd
add
add
push
fsubr
add
fadd
push
fdiv
add
fadd
mov
and
mov
in
add
add
add
in
add
jecxz
add
in
add
in
add
in
add
fild
adc
xor
aam
sub
add
sub
jecxz
cmp
movs
fild
add
add
fld
sbb
inc
add
fadd
add
add
xlat
add
add
fild
inc
(bad)
add
fld
add
sub
fild
jbe
cs
(bad)
add
xor
fiadd
mov
aaa
add
in
add
in
add
in
add
jecxz
add
fdiv
add
in
add
fisubr
add
fisubr
add
jecxz
add
fiadd
leave
fisub
add
fisub
add
fidiv
add
add
add
in
add
in
add
ficom
add
jns
fs
add
ficomp
mov
fiadd
add
mov
xchg
mov
add
mov
xor
add
pop
outs
pop
mov
dec
mov
push
inc
fadd
add
add
add
fs
dec
mov
je
jl
gs
fadd
add
ja
add
int
add
fld
add
xor
fld
cmps
fldenv
add
in
add
fdiv
add
sub
add
fsub
add
outs
add
(bad)
arpl
jo
xchg
pop
add
add
add
(bad)
add
fadd
add
fadd
fadd
das
fadd
add
and
adc
xor
adc
add
fild
add
and
add
fild
add
and
pop
adc
add
adc
add
adc
add
fsubr
add
fsubr
add
(bad)
add
fsub
add
add
add
fsubr
add
adc
add
adc
add
adc
add
adc
add
adc
inc
fsub
add
adc
add
cmovo
getsec
add
fadd
add
(bad)
add
fadd
aaa
fsub
add
fadd
and
and
(bad)
getsec
add
xor
add
rdmsr
add
add
add
(bad)
add
(bad)
add
and
add
pmaddwd
add
fadd
add
xor
add
fsubr
add
sysexit
add
movaps
sysenter
add
getsec
add
add
and
ss
(bad)
add
movntps
fidiv
add
push
sub
fsubr
add
fdivr
add
add
add
xlat
add
fisttp
and
add
fsub
add
push
xor
push
aaa
add
jo
adc
or
jae
fiadd
add
fiadd
add
add
dec
jnp
add
fidiv
add
fiadd
test
fidivr
add
add
add
push
and
add
push
and
dec
push
and
add
fld
add
add
push
mov
add
lahf
outs
mov
add
add
fild
les
xor
or
aaa
add
cmp
add
or
and
add
add
xor
sub
fdivr
add
fdiv
add
fld
add
or
cs
or
dec
add
or
xor
inc
or
cmc
push
or
es
or
add
fsubr
add
fdivr
add
fdiv
add
fdiv
add
fsubr
add
or
add
or
add
add
add
(bad)
add
or
add
or
add
add
mov
cmp
add
or
add
fsub
add
fsubr
add
fdivr
add
fdiv
add
fld
add
or
add
fsubr
add
or
add
or
add
or
add
fsubr
add
or
add
or
add
fadd
add
add
add
add
rcr
push
add
loopne
add
jb
inc
loopne
add
sub
sbb
ins
add
pop
add
fist
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
fbstp
add
add
add
loopne
add
pop
add
dec
add
jb
xchg
fistp
add
add
xchg
fild
add
fistp
xor
pop
add
daa
add
fistp
jae
push
add
ficomp
push
loopne
add
pop
add
pop
add
xor
in
add
add
push
add
pop
add
dec
add
loopne
add
loopne
add
loopne
add
fild
add
add
xchg
ficomp
push
ficomp
test
pop
add
fmul
sub
and
add
fbld
add
fsubr
add
loopne
add
or
add
or
inc
fidiv
add
or
add
or
aam
xor
les
cs
fadd
add
fld
add
loopne
add
add
add
pop
add
dec
add
jb
push
loopne
add
loopne
add
loopne
add
pop
add
frstor
mov
loopne
add
loopne
add
loopne
add
loopne
add
pop
add
pop
add
push
add
pop
add
fnsave
add
push
add
fisttp
add
add
cdq
fnsave
xchg
pop
add
fsubr
test
pop
add
loopne
add
add
adc
push
add
pop
add
dec
add
jb
push
loopne
add
loopne
add
loopne
add
pop
add
fcomp
add
pop
add
loopne
add
fcomp
or
daa
add
jo
add
add
dec
fcomp
mov
fcomp
fcomp
xchg
fcom
add
pop
add
fdiv
add
add
push
fcom
(bad)
fcomp
fmul
mov
jb
xchg
pop
add
loopne
add
add
loopne
add
add
dec
add
loopne
add
loopne
add
add
add
add
jecxz
push
add
loopne
add
loopne
add
fld
add
fistp
xor
pop
add
add
dec
add
pop
add
push
add
jb
sbb
push
add
outs
add
fild
add
and
popa
(bad)
add
fbstp
add
fild
mov
and
add
add
loopne
add
aam
add
shl
add
loopne
add
fiadd
add
loopne
add
sub
movs
fiadd
add
fidivr
add
fisub
add
dec
add
fisttp
xor
loopne
add
dec
add
add
loopne
add
ficomp
add
add
xor
add
dec
mov
test
cmp
pop
fisubr
xchg
fisubr
jl
xor
and
add
rcr
add
loopne
add
loopne
add
outs
add
loopne
add
pop
add
fstp
push
loopne
add
xor
movs
fld
add
fld
add
mov
add
scas
jb
xchg
out
add
add
add
fldenv
sbb
sub
mov
add
and
pop
add
imul
dec
(bad)
cmp
fldenv
fstp
fldcw
add
fstp
xchg
xor
xor
add
xchg
push
add
fldenv
add
loopne
add
pop
add
and
hlt
fadd
add
add
add
mov
outs
cmp
ret
fcomp
loopne
add
loopne
add
dec
add
fsub
loopne
add
loopne
add
fcomp
adc
add
sbb
pop
add
imul
cmp
xor
xor
add
or
pop
add
add
add
add
add
arpl
push
add
pop
add
outs
add
pop
add
add
pop
add
sub
and
push
add
pop
add
fild
add
pop
popa
std
mov
imul
fist
fcomp
fsubr
rcr
fs
xlat
popa
add
fdiv
add
add
push
add
push
add
add
add
xlat
add
fwait
lods
pop
outs
dec
mov
pop
ins
pop
fild
add
mov
pop
addr16
js
jne
je
add
and
jb
push
test
jae
je
fiadd
add
jb
inc
mov
pop
popa
sbb
addr16
pop
jb
stos
push
ins
les
ins
add
add
add
jb
push
mov
imul
jns
jne
jge
ins
dec
mov
add
pop
lods
jb
inc
mov
pop
popa
cwde
jne
addr16
js
push
test
pop
and
movs
add
jns
outs
and
outs
xchg
jle
imul
jge
daa
pop
mov
fs
push
add
fld
add
mov
push
ficomp
cmp
out
cdq
pop
ja
mov
or
cmp
push
test
mov
or
fld
movs
mov
jmp
cmp
add
sbb
add
add
popf
fs
sbb
xlat
in
out
mov
jge
ja
mov
cli
or
xchg
jnp
retfw
cmp
push
jbe
jl
dec
cmps
and
mov
push
bound
pinsrw
push
rol
shl
fld
inc
adc
pop
adc
dec
loope
adc
add
add
stc
das
test
and
aaa
ja
cmp
out
cmp
inc
or
and
lahf
add
dec
push
mov
cmp
jne
pop
retf
add
repz
mov
jmp
outs
mov
cmps
push
mov
fidivr
cmc
sbb
adc
xchg
add
and
push
add
aam
mov
popf
push
outs
inc
adc
idiv
outs
int
aaa
retf
mul
ret
(bad)
(bad)
iret
cmps
(bad)
fcomp
xor
sbb
cmp
pop
sbb
and
mov
cmp
imul
fisubr
scas
xor
add
cmp
adc
pop
dec
int3
cmp
push
pop
push
cs
cld
inc
mov
nop
mov
fsubr
not
jno
cmp
or
jmp
call
pop
xor
fcmovnbe
sub
xchg
les
sub
and
xchg
add
add
out
jbe
or
dec
sahf
pop
out
xchg
js
inc
add
pop
mov
test
mov
test
jbe
mov
scas
bound
cmp
cmp
xchg
pop
push
xor
cmp
clc
ficom
adc
sub
xchg
mov
mov
pop
aam
call
adc
push
mov
mov
jbe
fidiv
cmp
pop
out
dec
push
outs
ins
mov
icebp
jo
mov
pop
scas
pop
mov
call
sti
cmps
xor
push
mov
jl
es
xsavec
mov
ss
xor
test
push
lds
std
lds
js
and
ror
add
add
ja
aad
(bad)
daa
xchg
mov
aas
cmp
xchg
std
mov
mov
or
sub
adc
retf
repnz
cmc
in
das
adc
adc
lea
scas
test
int
mov
nop
js
mov
add
dec
xchg
popa
adc
mov
mov
pop
xchg
add
add
push
pop
or
jle
jne
push
pop
sub
push
lods
ret
jmp
pushf
mov
movs
sbb
mov
mov
cmp
push
dec
sar
and
jns
iret
or
mov
lods
shl
rcl
clc
stos
jge
rcl
movs
sub
mov
add
xchg
ja
add
test
stos
sar
push
lods
clc
push
and
sbb
sbb
jle
cmp
inc
or
and
jo
cmps
pop
sub
js
sub
sub
ret
out
xchg
arpl
sbb
enter
xchg
inc
sub
jmp
mov
push
mov
add
add
add
sub
test
cmc
leave
xchg
cmp
add
mov
dec
ins
les
mov
stos
pusha
sub
jecxz
inc
mov
jb
push
jmp
jae
retf
or
push
jo
iret
fisubr
jp
mov
push
xchg
in
mov
sbb
add
xchg
mov
pop
enter
add
dec
push
dec
jle
jo
lods
(bad)
imul
and
xor
(bad)
rol
rol
pop
cmc
outs
aaa
mov
rcr
pop
push
test
rcl
rcr
sti
sbb
je
outs
sub
out
push
(bad)
lea
add
add
pop
clc
add
in
jmp
jae
rol
loopne
lock
or
sub
xlat
pop
std
retf
gs
xor
ss
mov
ret
ja
bound
push
(bad)
mov
push
add
and
(bad)
in
adc
mov
push
imul
out
add
add
add
in
xor
mov
push
dec
cmp
jecxz
jmp
stos
push
mov
jecxz
cmp
or
(bad)
es
sub
add
les
call
pop
out
or
mov
scas
push
pop
rcr
jb
push
pop
fidiv
add
add
jbe
pop
sub
pusha
(bad)
cdq
inc
(bad)
mov
jbe
push
add
xor
ret
adc
inc
in
pop
dec
ss
mov
out
rcr
dec
fild
push
mov
bound
xor
pop
jnp
aam
fcom
push
add
add
add
add
jno
shl
out
sub
cwde
ins
dec
out
shl
retf
daa
add
stos
loope
bound
sbb
cmp
fcomp
ficomp
and
gs
lea
repnz
jae
mov
cmp
cmps
add
repz
sub
jp
in
out
loop
inc
add
arpl
push
arpl
add
(bad)
sub
cmp
bound
cli
pop
sub
out
leave
mov
addr16
mov
sub
loop
add
inc
sahf
(bad)
shl
adc
sub
push
jae
sar
cmc
ja
push
lods
push
inc
jmp
sub
es
repnz
xor
sub
xchg
dec
ret
cmp
cld
cmp
push
(bad)
rcr
jb
mov
movs
lods
mov
and
jbe
mov
xor
ins
popf
loope
push
adc
bound
lods
outs
dec
call
sbb
pop
(bad)
jge
clc
out
fldcw
mov
mov
pop
scas
sub
pop
in
lds
add
add
and
daa
int3
jecxz
inc
mov
mov
fdiv
scas
(bad)
jge
lds
data16
adc
xor
jmp
adc
xor
leave
inc
mov
je
shr
xchg
fadd
ins
and
lds
pop
imul
(bad)
jle
push
push
adc
add
add
cmp
loopne
xchg
mov
sbb
adc
jmp
lock
inc
xchg
int
inc
mov
ret
scas
fdiv
adc
jmp
jle
pop
repz
xor
daa
pop
fs
iret
sbb
inc
repz
or
clc
repnz
xor
jmp
add
add
xor
mov
not
imul
sar
imul
push
stc
ins
fcompp
test
jbe
push
or
sar
lds
mov
xchg
mov
xchg
and
or
idiv
dec
xchg
arpl
xchg
popa
test
add
cmove
div
or
dec
or
jne
xchg
xchg
movs
stos
sub
outs
dec
lock
in
mov
mov
cwde
outs
cmp
dec
and
mov
mov
dec
inc
and
mov
jmp
push
enter
add
add
mov
leave
mov
ficom
repz
pop
pop
inc
out
jns
shl
cmp
popa
fstp
aas
retf
and
(bad)
shl
fiadd
mov
xchg
xor
and
dec
ins
inc
adc
cmc
cdq
push
jge
xor
cmps
and
xchg
repnz
call
fld
scas
movs
lods
dec
movs
xor
jecxz
(bad)
push
adc
imul
push
jbe
imul
cmc
fstp
cmp
adc
pop
inc
retf
and
int
movs
daa
lock
adc
ror
jge
lods
sahf
pop
ins
xchg
or
add
add
call
(bad)
(bad)
jns
fnstsw
xchg
pop
and
xchg
jp
jmp
push
add
inc
ja
and
pop
outs
push
ja
imul
add
add
sbb
fmul
and
fmul
add
lock
inc
add
out
hlt
inc
add
add
fisttp
add
out
hlt
inc
and
fsub
add
add
add
xor
fadd
add
sub
lods
out
xor
fild
add
(bad)
add
fild
add
xlat
pop
add
fcomp
fdiv
add
fcom
fistp
fild
add
int
push
add
add
xchg
add
push
fist
(bad)
(bad)
fistp
mov
dec
add
fiadd
add
ficomp
fsubr
add
fcomp
add
pop
add
fadd
add
scas
xor
mov
outs
or
pop
jb
jp
push
loopne
xor
mov
fcomp
add
add
fcom
sbb
outs
add
add
dec
add
pop
add
and
movs
ficomp
inc
ficomp
dec
ficom
fiadd
fisubr
lahf
fiadd
test
jb
xor
add
xor
add
jo
inc
add
pop
add
fstp
dec
fsub
fdivr
add
jb
add
add
inc
fcomp
sbb
and
stc
xlat
js
add
pop
add
fdiv
or
jb
loopne
inc
add
xlat
pop
add
fsub
(bad)
fnstcw
adc
fstp
pop
fld
add
push
add
push
add
add
fldcw
push
fld
add
add
fnstcw
add
add
add
inc
add
xor
add
fcomp
push
fcomp
push
fcomp
pop
fsub
fadd
cmp
fcomp
or
outs
add
fdivr
add
fdiv
push
fcomp
adc
fs
xlat
pop
add
xlat
pop
add
fadd
add
fcomp
popa
fcom
fcomp
add
add
cmp
pop
add
add
fmul
test
pop
add
add
inc
fsub
add
fsub
fadd
add
and
dec
fsub
add
fistp
arpl
add
pop
add
pop
add
add
and
in
add
adc
push
add
push
add
loopne
add
add
add
fistp
add
loopne
add
fistp
(bad)
fistp
add
and
dec
fbld
add
loopne
add
sbb
add
fistp
inc
fist
adc
and
add
xor
inc
fbstp
add
and
add
fbld
add
fisub
aam
and
add
push
add
push
add
pop
add
sbb
adc
loopne
add
and
mov
add
(bad)
fisub
add
ficomp
aam
add
fbld
std
fistp
loopne
add
ficom
add
sbb
push
ficomp
pop
fisub
add
add
add
das
add
sub
add
add
cmp
and
sub
sub
add
xor
imul
dec
add
dec
add
fnstsw
add
push
add
loopne
add
loopne
add
fistp
sub
loopne
add
push
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
add
add
frstor
frstor
pop
fnstsw
cmp
fld
add
xor
es
cmp
xor
inc
imul
dec
jae
inc
push
addr16
dec
pop
test
fs
xchg
lea
pop
jo
mov
je
cmps
arpl
stos
add
aam
xor
add
add
jecxz
aaa
mov
mov
data16
fadd
add
fsub
add
fsub
add
fsubr
add
loopne
add
push
add
add
js
xchg
push
jne
add
mov
dec
cmps
rcr
xchg
and
test
jnp
and
xor
add
inc
lea
add
add
push
push
addr16
ins
dec
leave
mov
jb
stos
jp
xor
xor
pop
mov
or
add
cmp
push
enterw
(bad)
mov
cmp
lock
lods
mov
xor
lds
sub
int
pop
aaa
sbb
and
je
add
add
add
(bad)
add
add
add
add
loopne
add
add
fstp
add
inc
add
add
add
add
cmp
inc
fild
add
fiadd
add
jb
pop
loopne
add
fiadd
add
push
add
outs
add
add
scas
fiadd
add
add
loopne
add
fistp
add
add
adc
push
add
loopne
add
loopne
add
fbstp
adc
pop
add
add
pop
fisub
dec
fisubr
mov
fidiv
xchg
ficomp
inc
fisub
fisubr
xchg
pop
add
fisub
cdq
fisubr
jae
pop
add
ficomp
fldenv
xchg
fstp
pop
loopne
add
add
add
pop
add
fld
add
add
ins
add
fild
pop
loopne
add
loopne
add
add
loopne
add
fistp
cdq
fnstenv
xchg
fstp
adc
add
loopne
add
pop
add
pop
add
add
dec
fldenv
inc
fnstenv
fld
add
add
imul
and
add
pushf
fldenv
nop
fldenv
xor
add
jl
add
add
pop
add
fadd
add
pop
add
pop
add
loopne
add
push
add
loopne
add
loopne
add
loopne
add
loopne
add
add
xchg
fdiv
add
push
add
add
add
loopne
add
pop
add
add
pop
add
add
pop
add
pop
add
pop
add
fcomp
test
add
xchg
fdiv
xchg
fcom
fsub
fild
add
fcom
inc
fcom
inc
fdiv
dec
fcom
sbb
push
add
fild
add
add
add
jb
add
push
add
fcom
add
push
add
fsubr
movs
fild
add
push
add
fist
pop
fistp
fild
cmp
cmp
pop
fild
add
push
add
fist
popf
fistp
fild
jl
add
add
add
add
ficomp
xchg
ficom
fbld
push
fadd
add
ins
add
add
popa
add
fiadd
add
fsubr
pop
fsub
fsub
in
xlat
cmp
fcmovu
add
or
popa
add
add
cwde
ficomp
add
jo
je
add
xchg
add
add
ficomp
inc
fidiv
add
add
inc
ficom
dec
fidivr
add
popa
add
add
xchg
fidiv
sbb
add
fimul
cwde
ficom
cwde
ficomp
hlt
fld
add
fadd
fmul
pop
fcomp
cmp
jb
cmp
fdivr
add
pop
add
xlat
pop
add
fdiv
add
add
add
add
or
add
add
add
cdq
fld
add
fcomp
je
add
arpl
pop
add
fstp
inc
(bad)
ja
pop
add
pop
add
pop
add
fstp
test
bound
nop
fstp
mov
add
xchg
fdiv
sbb
add
fisttp
push
fsub
fdiv
add
add
push
fsub
fadd
add
xlat
cmp
and
inc
add
fmul
dec
fcomp
sbb
jb
sbb
xlat
aas
add
fcomp
cwde
fcomp
xchg
fadd
add
fadd
add
fcomp
mov
fcomp
mov
arpl
mov
fsubr
cmp
pop
add
pop
add
add
add
fcomp
xor
add
inc
fcom
fcomp
(bad)
fist
fild
add
pop
je
mov
jae
mov
and
jo
dec
fadd
add
jb
push
clc
pop
jo
mov
outs
or
push
imul
test
imul
cmps
jb
xchg
arpl
add
add
pop
outs
dec
sti
push
imul
jo
dec
fistp
fistp
mov
push
add
add
add
mov
outs
add
(bad)
add
push
add
fiadd
add
mov
je
mov
outs
ss
arpl
pop
popa
pop
mov
inc
push
mov
add
add
add
mov
add
mov
inc
add
fisubr
add
fidiv
add
fsubr
add
(bad)
add
fisub
(bad)
fidiv
cmps
fisub
add
fdiv
add
fdivr
add
fdivr
add
fidivr
add
fidiv
add
fisubr
add
fisub
inc
fisubr
add
fidiv
add
fisubr
add
fisubr
add
fisubr
dec
fdivp
inc
add
add
fnstenv
pop
fcomp
add
pop
add
add
sbb
pop
add
push
add
arpl
adc
pop
add
pop
add
fcom
fsub
pop
fsub
add
xlat
jo
or
push
add
fld
add
pop
add
pop
add
pop
add
fdiv
add
add
add
add
arpl
dec
popf
pop
jae
mov
gs
arpl
pop
fwait
outs
push
cdq
mov
imul
xchg
mov
es
test
jb
push
lods
pop
outs
inc
fadd
add
fadd
add
cdq
aas
inc
jmp
xchg
inc
dec
loope
cmp
mov
(bad)
add
in
adc
sbb
popa
outs
arpl
imul
out
xor
and
or
daa
das
xor
add
sbb
add
mov
dec
ds
lods
pop
outs
inc
mov
outs
mov
add
stos
fistp
sbb
add
add
loopne
add
jno
add
add
inc
loopne
add
add
sbb
jb
pop
or
dec
push
and
add
sbb
popa
ins
adc
or
add
and
push
pop
popa
sbb
and
cld
push
je
sti
add
cmps
add
dec
mov
gs
pop
outs
dec
add
ja
pop
daa
js
jno
mov
add
add
add
mov
push
imul
std
outs
gs
or
fs
add
aaa
call
cmp
pop
imul
shl
cld
pop
ja
(bad)
push
arpl
pop
pop
outs
sbb
data16
push
pop
popa
cwde
stc
push
add
call
js
push
fs
mov
add
pop
add
push
stc
popa
popa
cmp
pop
and
pop
and
or
arpl
cli
add
addr16
pop
daa
mov
push
je
or
bound
cli
and
call
rcr
shl
std
fs
loopne
add
std
pop
daa
sbb
jno
or
push
je
or
add
or
push
jne
stc
and
add
sti
mov
popa
jb
std
fs
add
or
pop
jae
fld
add
push
add
add
add
ds
push
ins
jns
cmp
cld
push
je
sub
jb
call
test
push
and
add
add
rcl
std
popa
popa
dec
add
jae
adc
shl
adc
push
adc
dec
adc
add
std
pop
cmp
add
cmp
sti
pop
adc
sub
sti
push
outs
pop
adc
ins
dec
adc
inc
adc
mov
and
add
add
xor
add
cwde
pop
jno
inc
div
cmp
and
push
imul
adc
fild
add
outs
addr16
pcmpgtw
adc
outs
cmp
outs
dec
sar
sbb
jb
push
add
and
outs
or
gs
std
stc
and
adc
and
adc
jb
add
add
fild
add
sti
bound
and
mov
pop
mov
jb
inc
add
jp
pop
jne
mov
pop
je
(bad)
pop
outs
call
gs
divps
pop
std
fs
add
mov
outs
mov
gs
bound
outs
pop
adc
outs
pop
rol
adc
jb
add
add
push
gs
add
lock
outs
addr16
adc
std
stc
and
pcmpgtw
adc
and
stc
and
loopne
add
std
bound
outs
pop
push
and
mov
and
cld
push
gs
add
pop
jne
mov
pop
je
call
call
add
add
push
push
pop
and
pop
je
fiadd
add
adc
cmp
or
and
adc
xor
push
push
outs
dec
std
add
pop
sti
bound
std
and
adc
outs
or
cmp
shr
and
stc
pop
addr16
add
cli
clc
pop
jne
rcr
sti
pop
je
call
pop
(bad)
outs
je
add
add
pop
gs
pop
and
mov
pop
jne
mov
pop
je
add
mov
outs
je
call
or
pop
ins
rcr
add
(bad)
cli
and
cmc
pop
cmp
cs
ins
dec
add
cmp
adc
inc
adc
jb
sub
inc
push
or
cmc
push
gs
mov
and
add
add
add
or
aam
outs
jb
pop
inc
popa
add
pop
add
cmc
pop
cmp
cs
ins
pop
add
cmp
pop
jb
or
jb
sub
imul
push
js
ret
mov
stc
push
outs
xchg
cmc
and
std
push
je
push
pop
add
repnz
cmp
add
add
sub
add
jb
and
pop
push
dec
cli
push
jb
repnz
gs
cmp
push
add
pop
jae
repnz
push
jmp
cld
movs
fild
add
and
repnz
cmp
sub
add
cmp
pop
jb
or
scas
sub
arpl
outs
and
pop
jae
add
add
sbb
icebp
jno
cs
pop
jb
push
and
cmc
push
arpl
add
add
shl
cdq
imul
xor
not
sub
pop
arpl
repz
outs
clc
mov
jne
adc
bound
mov
push
jb
std
pop
and
mov
add
push
std
pop
and
or
jbe
repnz
add
inc
aam
push
pop
je
push
and
or
jb
mov
pop
sub
out
pop
push
sti
and
or
jns
stc
js
cdq
cld
fs
pop
add
jno
hlt
fld
add
cld
pop
add
cmc
jno
add
add
cmp
(bad)
adc
gs
mov
popa
je
repnz
ins
push
stc
outs
and
std
pop
movs
fld
add
cmc
jno
or
mov
and
inc
mov
pop
bound
cli
popa
je
add
arpl
outs
popa
js
pop
outs
and
add
popa
div
(bad)
out
push
and
push
and
add
add
repz
arpl
sti
push
jb
not
dec
fadd
add
out
jno
dec
not
or
daa
and
push
jb
imul
or
popa
ins
adc
cmc
pop
add
mov
pop
je
mul
outs
jns
pop
gs
mov
dec
fadd
add
add
add
mov
pop
and
mov
fs
jns
jo
jge
push
jae
div
inc
or
mov
pop
arpl
pop
gs
repnz
add
stc
push
and
bound
std
and
or
push
not
dec
repnz
push
pop
outs
or
add
add
add
adc
lock
outs
add
jmp
arpl
outs
popa
pop
or
jb
mov
popa
je
out
and
fs
xchg
push
pop
and
out
push
and
cli
push
je
mov
sbb
xor
add
mov
jno
xchg
pop
outs
fwait
mov
push
jne
add
add
pop
imul
je
mov
pop
and
lock
and
out
popa
outs
add
and
hlt
push
and
cli
and
std
pop
imul
pop
push
popa
mov
and
rep
add
hlt
pop
arpl
push
and
bound
in
and
or
push
not
dec
hlt
and
add
add
rcl
std
outs
and
pop
and
or
mov
push
cs
fld
add
stc
push
and
pop
arpl
push
and
bound
in
and
or
push
not
dec
repnz
push
pop
outs
or
push
fs
pop
ins
add
cli
pop
je
out
js
add
add
or
fs
mov
dec
mov
ss
fld
add
repz
outs
xchg
pop
pop
arpl
in
push
jb
clc
push
add
or
xchg
pop
jo
in
jno
(bad)
repz
and
cld
add
pop
out
popa
push
out
push
and
out
pop
fs
std
and
add
add
add
or
imul
sti
push
or
and
not
aam
pop
je
fadd
add
cli
push
sbb
and
stc
and
or
pop
stc
push
popa
mov
in
arpl
mov
add
dec
out
popa
mov
cld
pop
jb
in
and
in
imul
add
add
mov
push
add
pop
and
pop
jns
in
outs
pop
or
and
push
and
gs
inc
call
pop
stc
pop
bound
in
add
jmp
push
gs
push
outs
or
jae
push
pop
je
fild
add
call
and
pop
addr16
and
add
add
pop
popa
cwde
fild
add
bound
call
push
gs
movs
pop
and
icebp
push
and
jmp
popa
imul
add
pop
repnz
out
and
fs
call
jmp
addr16
jno
pop
jmp
add
bound
out
and
out
je
repnz
add
add
pop
shl
fiadd
add
icebp
bound
out
and
std
pop
das
inc
jmp
and
jmp
inc
in
and
jno
push
lock
gs
sti
pop
fs
add
(bad)
lock
in
and
lock
gs
pop
outs
aam
push
jb
(bad)
push
arpl
add
add
add
dec
repnz
outs
inc
push
pop
arpl
rcr
std
and
jmp
add
sbb
push
pop
arpl
shl
call
push
add
or
pop
gs
push
jb
out
outs
je
add
inc
cli
push
dec
or
xchg
pop
jb
fld
add
add
add
jmp
or
add
jmp
add
push
in
gs
or
gs
repnz
jb
fadd
add
pop
gs
outs
jb
repnz
pop
in
gs
hlt
add
adc
push
fs
pop
arpl
repnz
fsub
push
jl
inc
add
add
fs
call
jl
inc
je
add
je
add
fadd
add
inc
xor
add
xor
loopne
and
enter
add
mov
aas
scas
inc
mov
(bad)
scas
xor
(bad)
scas
sar
in
add
in
jle
hlt
fild
add
fcomi
inc
dec
repnz
dec
repnz
mov
add
add
add
mov
lock
movs
fild
add
add
sub
cmp
aam
aaa
add
add
add
add
aaa
add
add
add
add
or
aaa
add
add
aam
cmp
xor
add
xor
add
adc
jmp
add
add
add
mov
add
or
add
in
add
hlt
fiadd
add
lahf
cmp
add
add
mov
add
mov
add
mov
aaa
add
test
add
test
add
enter
movs
fiadd
add
add
jl
jmp
add
aaa
add
add
add
add
add
add
cmp
add
add
and
add
fiadd
add
aaa
add
fld
add
add
fld
add
fld
add
jl
push
fld
add
add
push
test
add
add
movs
fld
add
add
test
add
add
fadd
add
je
add
repz
jmp
add
aaa
add
add
add
add
lea
add
aaa
add
add
sub
add
xor
add
les
aaa
add
add
hlt
fadd
add
fadd
add
aaa
add
fadd
add
add
add
fadd
add
fadd
add
movs
aaa
add
cmps
aaa
add
aaa
add
mov
aaa
add
aaa
add
add
add
add
add
fs
push
add
mov
cmp
xor
fadd
add
gs
inc
add
add
add
je
add
mov
fadd
add
fild
add
fild
add
mov
aaa
add
fild
add
test
add
fild
add
out
jmp
add
xor
cmp
movs
fild
add
(bad)
out
push
add
add
add
mov
cmp
jne
add
push
(bad)
out
push
add
je
add
js
aaa
add
add
fild
add
fild
add
(bad)
out
jmp
add
mov
add
fdivr
add
in
add
neg
add
or
aaa
add
aaa
add
aaa
add
mov
add
add
add
mov
cmp
movs
fiadd
add
out
jmp
add
sub
add
fiadd
add
add
pop
mov
aaa
add
mov
add
pushf
mov
add
fiadd
add
add
adc
push
add
je
add
sub
aaa
add
add
add
add
hlt
fld
add
pusha
out
jmp
fld
add
fadd
add
mov
cmp
in
add
mov
add
jae
out
jmp
add
js
aaa
add
add
cmps
fld
add
mov
aaa
add
add
cmp
je
add
fld
add
pusha
out
inc
add
add
add
lock
add
xor
add
xor
lahf
aaa
add
aaa
add
fadd
add
add
fadd
add
fadd
add
fs
push
fadd
add
add
add
aaa
add
add
movs
fadd
add
lea
add
movs
aaa
add
add
add
add
cmps
fadd
add
cmps
aaa
add
cmps
aaa
add
add
mov
add
add
cmp
data16
add
add
gs
push
add
fadd
add
aaa
add
add
xor
add
and
add
adc
cmp
push
fild
add
fild
add
fild
add
movs
aaa
add
add
add
mov
aaa
add
cmp
cmps
fild
add
out
push
add
cmp
add
je
add
fild
add
aaa
add
add
add
add
or
aaa
add
fild
add
mov
add
add
add
fild
add
gs
push
fiadd
add
aaa
add
fiadd
add
fiadd
add
fiadd
add
jle
add
mov
add
mov
add
cmps
fiadd
add
movs
aaa
add
movs
aaa
add
mov
add
loopne
cmp
jne
add
je
add
repz
jmp
add
add
add
aaa
add
add
add
add
xor
add
repz
(bad)
mov
mov
add
mov
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
mov
add
fld
add
aaa
add
movs
aaa
add
add
add
cmp
mov
add
xchg
fs
jmp
add
test
out
jmp
add
fs
push
add
arpl
jmp
add
stos
xor
xor
add
repnz
jmp
add
call
fld
add
fs
jmp
add
sbb
add
add
add
repnz
jmp
fadd
add
fadd
add
fs
jmp
fadd
add
xor
mov
add
jb
out
jmp
out
push
out
jmp
xor
je
add
repnz
jmp
add
add
shl
fadd
add
xor
add
add
xor
add
repnz
jmp
add
call
fadd
add
gs
jmp
add
mov
xor
hlt
fild
add
push
out
jmp
fild
add
push
fild
add
push
out
(bad)
out
xchg
xor
loop
xor
jb
out
inc
xor
adc
mov
add
pusha
push
out
jmp
add
add
push
nop
xor
sahf
xchg
xor
fild
add
push
out
push
add
push
out
jmp
add
push
out
push
add
sub
add
add
push
add
hlt
push
out
jmp
add
add
push
fiadd
add
xor
in
add
ret
push
fiadd
add
out
inc
add
add
fiadd
add
fiadd
add
and
add
out
push
out
jmp
out
push
add
and
rcl
push
add
and
rcl
jmp
add
out
push
add
repnz
out
jmp
add
cmp
fiadd
add
add
add
or
sub
xor
add
push
fld
add
push
out
jmp
fld
add
push
out
call
cmc
xor
mov
loopne
add
add
jge
xor
xchg
push
out
push
out
jmp
add
je
add
jne
add
fld
add
mov
add
jbe
add
nop
push
cmp
fld
add
sbb
add
and
add
and
add
xor
fld
add
push
out
jmp
out
push
fadd
add
dec
out
jmp
fadd
add
or
hlt
fadd
add
or
or
fadd
add
out
jmp
add
or
jmp
add
fadd
add
dec
out
push
add
dec
out
jmp
add
dec
out
push
jmp
fadd
add
cmc
xor
xor
add
jo
cmp
fadd
add
cmp
and
add
dec
mov
add
repz
out
jmp
fild
add
add
add
fild
add
(bad)
xor
hlt
fild
add
dec
out
jmp
fild
add
fild
add
out
jmp
xor
mov
add
xchg
dec
out
jmp
out
push
add
dec
out
jmp
add
dec
out
jmp
add
dec
out
push
add
add
add
int3
dec
out
jmp
add
add
push
add
and
xor
adc
push
fiadd
add
retf
repnz
out
jmp
fiadd
add
add
ror
in
add
clc
int
add
out
jmp
out
push
out
jmp
xor
add
add
je
add
repnz
out
jmp
add
dec
out
push
add
dec
out
jmp
add
aam
add
add
repnz
out
jmp
add
in
out
push
add
adc
jmp
add
pushf
xor
hlt
fld
add
dec
out
jmp
fld
add
out
push
fld
add
dec
out
push
add
add
xor
add
jb
out
jmp
out
push
out
jmp
xor
je
add
repnz
out
jmp
add
dec
out
push
add
dec
out
jmp
add
fld
add
add
arpl
xor
add
xor
add
clc
dec
out
inc
add
add
add
add
push
fadd
add
sub
in
add
ret
push
fadd
add
fadd
add
fadd
add
sub
add
and
fadd
add
jmp
out
(bad)
mov
cmp
fadd
add
fs
push
add
add
add
add
add
jmp
cmp
and
add
add
push
add
hlt
fs
jmp
add
add
push
fild
add
add
fild
add
(bad)
out
push
fild
add
add
and
mov
add
xor
xor
movs
fild
add
add
add
out
jmp
out
push
add
pushf
xor
fild
add
popa
out
push
add
popa
out
jmp
add
(bad)
out
push
add
sbb
add
(bad)
out
push
add
in
popa
out
jmp
add
add
(bad)
out
ins
xor
adc
add
fiadd
add
add
add
pusha
out
push
fiadd
add
jmp
fiadd
add
je
add
xor
movs
fiadd
add
fiadd
add
out
jmp
out
push
add
fiadd
add
pusha
out
push
add
pusha
out
jmp
add
popa
out
push
add
adc
add
add
and
add
add
push
add
clc
pusha
out
jmp
add
add
push
fld
add
fld
add
pusha
out
push
fld
add
add
and
mov
add
sbb
movs
fld
add
xor
xchg
pusha
out
jmp
out
push
add
add
add
pop
out
jmp
add
dec
xor
je
add
rcr
jmp
add
out
push
out
jmp
xor
xor
add
adc
jmp
out
push
fadd
add
fs
push
dec
xor
aas
dec
xor
hlt
fadd
add
fs
jmp
fadd
add
add
mov
add
jb
out
push
xlat
add
fdivr
add
out
jmp
out
push
add
fs
jmp
add
fidivr
add
add
cmp
fadd
add
gs
push
add
adc
add
inc
shl
fadd
add
push
add
add
adc
inc
add
add
fild
add
fild
add
fild
add
push
add
fild
add
(bad)
out
jmp
fild
add
fild
add
cmp
mov
add
xchg
(bad)
out
jmp
add
je
add
push
sbb
cmp
loopne
cmp
jl
cmp
fild
add
add
add
mov
add
sbb
add
mov
add
add
adc
jmp
add
and
add
push
fiadd
add
fiadd
add
fs
push
fiadd
add
fiadd
add
fiadd
add
sbb
add
add
xor
mov
add
add
add
push
sbb
add
cmp
je
add
repz
jmp
add
add
test
inc
add
add
xor
cmp
xor
add
repz
jmp
add
sub
add
xor
add
xor
imul
and
add
add
push
fld
add
fld
add
fld
add
fld
add
add
add
add
cmp
in
add
mov
add
mov
add
inc
sbb
add
cmp
mov
add
xchg
fs
jmp
add
pop
popf
xor
fld
add
sbb
add
add
mov
inc
add
add
sbb
cmp
and
add
push
ins
cmp
add
add
xor
add
adc
and
add
cmp
add
scas
pop
inc
add
fadd
add
in
aaa
add
in
aaa
add
add
and
inc
add
fadd
add
lock
add
cmp
movs
fadd
add
fadd
add
inc
add
add
mov
in
aaa
add
add
add
add
cmp
add
je
aaa
add
push
out
(bad)
cli
xchg
cmp
push
fist
add
fadd
add
add
and
add
and
add
hlt
fild
add
fild
add
(bad)
out
(bad)
fist
xchg
sbb
fild
add
add
fild
add
add
add
add
movs
fild
add
add
xchg
(bad)
out
jmp
out
push
add
add
fild
add
add
je
add
mov
add
fild
add
add
fild
add
add
and
add
sar
add
fild
add
fild
add
fiadd
add
add
add
out
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
stos
xchg
sbb
out
add
in
add
add
movs
fiadd
add
popa
out
dec
cmp
fiadd
add
fiadd
add
xchg
cmp
push
stos
xchg
sbb
add
add
add
movs
in
add
add
and
add
and
add
xor
add
xor
add
and
pop
out
jmp
stos
xchg
sbb
fld
add
aaa
add
fld
add
fld
add
fld
add
fld
add
add
jae
out
(bad)
aas
xchg
cmp
(bad)
stos
xchg
sbb
out
add
add
add
add
je
add
fld
add
add
add
rcr
(bad)
stc
xchg
cmp
push
test
add
enter
and
add
and
add
xor
add
xor
add
and
add
and
pop
out
push
mov
add
rcl
add
xchg
aaa
add
fadd
add
add
add
fadd
add
fadd
add
add
movs
fadd
add
jmp
movs
fadd
add
aaa
add
add
add
add
add
add
add
rcr
inc
jmp
xor
xchg
aaa
add
add
xor
add
add
add
xor
add
and
add
and
add
cmc
fild
add
aam
sbb
fild
add
add
hlt
fild
add
fild
add
fild
add
add
jae
out
jmp
in
xor
mov
add
inc
in
xor
movs
fild
add
in
xor
jbe
add
shr
xor
fild
add
add
add
add
test
xor
imul
xor
cmp
add
jmp
xor
sub
add
imul
xor
sub
add
adc
xor
adc
call
rcl
add
xchg
aaa
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
pop
out
jmp
add
add
fst
add
fiadd
add
add
je
add
fiadd
add
add
ret
pop
out
jmp
fist
add
add
add
and
add
and
add
xor
add
xor
add
and
fiadd
add
fld
add
fld
add
add
add
fld
add
xchg
aaa
add
pop
out
call
fld
add
xor
sbb
in
xor
cmps
fld
add
fld
add
xor
cmps
fld
add
xor
jbe
add
movs
in
xor
push
add
int
xor
jp
add
aad
xor
push
add
mov
fld
add
add
add
fld
add
jmp
add
fld
add
add
fld
add
add
mov
add
hlt
fadd
add
fadd
add
jge
add
rcl
add
add
xor
add
movs
fadd
add
add
(bad)
rcl
add
mov
add
add
add
add
add
add
add
add
add
shl
(bad)
std
out
xor
xor
add
inc
call
add
push
call
add
imul
add
fadd
add
xor
clc
fild
add
fild
add
xor
cli
fild
add
fild
add
add
add
xor
lods
fild
add
xor
jae
out
call
xor
mov
add
push
xor
movs
fild
add
xor
jbe
add
popf
out
xor
fild
add
out
xor
push
aad
sbb
add
mov
add
xor
add
xor
add
and
add
and
add
xor
and
inc
add
add
fild
add
out
add
fiadd
add
fist
add
xchg
aaa
add
fiadd
add
fiadd
add
add
movs
fiadd
add
and
(bad)
call
fiadd
add
out
xor
jne
add
sbb
xor
push
fist
add
add
je
add
fiadd
add
add
add
xor
add
and
and
dec
fiadd
add
fst
add
aaa
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
out
xor
movs
fld
add
xor
add
add
mov
add
cmp
xor
cmps
fld
add
xor
ja
add
mov
fld
add
in
xor
push
fst
add
xchg
aaa
add
add
add
and
add
and
add
xor
ficom
add
aaa
add
fadd
add
fadd
add
fadd
add
add
add
fadd
add
fadd
add
fadd
add
and
push
fadd
add
fadd
add
out
add
jmp
add
stc
jmp
add
adc
xor
fadd
add
xor
jp
add
cmp
xor
fadd
add
jmp
add
loopne
xor
add
add
and
add
mov
fadd
add
jmp
add
shr
add
fild
add
xor
add
add
cmps
jmp
add
sub
add
fild
add
fild
add
jmp
add
sub
add
out
add
xor
jne
add
add
add
mov
fild
add
out
add
add
lods
out
add
fst
add
xchg
aaa
add
add
and
add
and
add
xor
add
xor
add
and
and
xor
(bad)
fist
add
xchg
aaa
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
add
add
jae
out
dec
xor
mov
add
push
jmp
add
push
xor
push
popf
xchg
sbb
add
sub
aaa
add
add
add
add
add
add
and
call
jmp
add
add
xor
xor
out
xor
add
add
inc
popf
xchg
sbb
fld
add
aaa
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
in
xor
movs
fld
add
in
xor
mov
add
mov
sahf
xchg
sbb
xchg
aaa
add
add
add
add
add
add
add
add
add
adc
call
xor
xor
add
jae
xor
inc
sahf
xchg
sbb
fld
add
xchg
aaa
add
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
and
call
fadd
add
xor
mov
add
cmp
xor
cmps
fadd
add
xor
mov
add
add
add
imul
add
popa
jmp
add
add
pushf
jmp
add
add
(bad)
jmp
add
add
and
xor
pop
fadd
add
jmp
add
jmp
add
fadd
add
jmp
add
xchg
sbb
add
inc
mov
add
add
hlt
fild
add
fild
add
fild
add
fild
add
add
add
fild
add
adc
jmp
int
add
fild
add
int3
xor
mov
add
test
add
xor
(bad)
fcom
add
aaa
add
add
add
add
add
add
add
rcl
out
(bad)
jmp
xor
push
fst
add
aaa
add
add
add
add
xor
add
xor
add
and
add
and
add
cmc
fiadd
add
adc
call
fiadd
add
fiadd
add
fiadd
add
xor
mov
add
js
xor
test
add
pusha
retf
(bad)
cdq
xchg
sbb
lods
aaa
add
add
add
add
add
add
add
add
add
rcl
out
call
xor
push
fwait
xchg
sbb
lods
aaa
add
add
xor
add
xor
add
and
add
and
add
cmc
fld
add
adc
(bad)
aas
retf
in
add
add
xor
push
cdq
xchg
sbb
fld
add
scas
aaa
add
add
mov
add
movs
fld
add
add
mov
add
xchg
adc
jmp
add
jae
xor
fld
add
(bad)
xor
jbe
add
ret
(bad)
xor
ror
out
jmp
add
cmp
hlt
pmaxsw
or
add
fld
add
fld
add
add
add
aaa
add
cdq
xchg
sbb
fadd
add
add
hlt
scas
aaa
add
fadd
add
fadd
add
add
jae
out
jmp
xor
or
outs
aad
add
jecxz
sbb
scas
aaa
add
add
add
add
add
add
add
add
add
adc
xor
push
jecxz
sbb
scas
aaa
add
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
or
push
shl
hlt
fild
add
fild
add
shl
mov
add
mov
fild
add
shl
mov
add
in
shl
add
add
test
shl
je
add
sbb
fild
add
xor
push
in
sbb
add
in
mov
add
add
add
xor
add
and
add
and
add
xor
or
jmp
or
xor
(bad)
jecxz
sbb
fiadd
add
scas
aaa
add
fiadd
add
add
add
fiadd
add
fiadd
add
fiadd
add
add
jae
out
jmp
fiadd
add
xor
movs
fiadd
add
xor
jbe
add
cwde
aam
add
add
aad
add
add
retf
aam
add
add
push
aad
add
fiadd
add
aam
add
fiadd
add
ret
add
add
sub
add
inc
ret
inc
fst
add
add
in
add
in
add
hlt
fld
add
fld
add
fld
add
(bad)
xor
push
fst
add
aaa
add
add
movs
fld
add
add
jne
add
repz
inc
add
add
xor
push
fst
add
aaa
add
add
add
xor
add
and
add
and
add
xor
or
jmp
fld
add
xor
cmc
fadd
add
xor
push
jecxz
sbb
fadd
add
lods
aaa
add
fadd
add
fadd
add
add
add
add
movs
fadd
add
add
call
xor
movs
fadd
add
xor
push
jecxz
sbb
add
movs
lods
aaa
add
add
add
add
add
add
add
call
enter
add
xor
xor
(bad)
xor
inc
jecxz
sbb
fild
add
add
add
aaa
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
shl
fild
add
shl
add
(bad)
mov
fild
add
shl
add
jmp
add
push
add
call
fild
add
xor
add
add
add
out
dec
xor
cmp
add
xchg
shl
add
inc
mov
add
mov
add
(bad)
jge
xor
add
add
push
fist
add
add
fiadd
add
add
movs
fiadd
add
add
xchg
add
dec
xor
add
add
movs
fiadd
add
fiadd
add
(bad)
xor
data16
add
(bad)
xor
push
fist
add
fiadd
add
add
and
add
and
add
xor
add
xor
add
jmp
les
(bad)
ficom
add
add
fld
add
fld
add
fld
add
add
add
fld
add
fld
add
add
(bad)
fadd
xor
xchg
add
inc
ret
xor
(bad)
ficom
add
test
add
je
add
fld
add
add
add
add
sar
in
jmp
add
push
ret
xor
and
add
pushf
ret
xor
push
ficom
add
fld
add
test
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
push
xor
in
add
imul
xchg
sbb
stos
aaa
add
add
movs
fadd
add
add
jne
add
repz
dec
shl
add
add
fist
add
add
xor
add
xor
add
and
add
and
add
xor
add
xor
inc
fist
add
aaa
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
mov
xchg
sbb
add
add
lods
aaa
add
add
movs
fild
add
add
add
add
rol
out
dec
add
fst
add
lods
aaa
add
add
xor
add
and
add
and
add
xor
add
xor
add
jmp
fist
add
add
add
stos
aaa
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
(bad)
jp
xor
movs
fiadd
add
add
lea
add
aaa
add
add
add
add
add
add
add
rol
call
xor
push
(bad)
xchg
sbb
add
add
stos
aaa
add
add
xor
add
xor
add
and
add
and
add
cmc
fld
add
add
jmp
les
in
add
or
xor
push
lea
add
lods
aaa
add
add
movs
fld
add
add
mov
add
xchg
add
inc
les
add
add
je
add
push
les
repz
call
xor
jbe
add
inc
mov
add
add
dec
mov
add
fld
add
fld
add
fld
add
add
(bad)
mov
add
lea
add
add
hlt
fadd
add
fadd
add
fadd
add
add
add
fadd
add
hlt
in
(bad)
jp
xor
movs
fadd
add
xor
xchg
hlt
in
push
xor
(bad)
fist
add
fadd
add
add
add
add
add
add
add
in
jmp
ret
xor
repz
in
jmp
add
add
in
push
add
add
add
inc
fist
add
add
in
add
in
add
hlt
fild
add
fild
add
fild
add
fst
add
add
movs
fild
add
add
movs
fild
add
add
(bad)
mov
fild
add
add
inc
add
add
fild
add
xor
add
out
dec
xor
sub
add
xor
jle
xor
sub
add
test
fiadd
add
add
fiadd
add
fiadd
add
fiadd
add
xor
scas
fiadd
add
fiadd
add
xor
add
add
mov
add
add
add
shl
fiadd
add
xor
push
mov
add
add
fiadd
add
add
add
xor
add
and
add
push
xor
xor
add
pop
shl
mov
add
aaa
add
fld
add
add
add
fld
add
fld
add
fld
add
fld
add
fld
add
shl
mov
add
add
add
movs
fld
add
add
add
add
sar
in
call
mov
add
xchg
aaa
add
add
add
add
and
add
and
add
xor
add
xor
add
(bad)
in
mov
add
adc
rcl
add
inc
aaa
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
mov
in
(bad)
mov
rcl
add
add
add
fadd
add
add
add
add
add
add
add
in
(bad)
cmp
rcl
add
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
cli
in
call
xor
hlt
fild
add
xor
in
add
add
add
cmp
xchg
sbb
dec
aaa
add
add
movs
fild
add
add
jne
add
repz
in
call
add
jl
xor
fild
add
xor
push
aad
sbb
fild
add
dec
aaa
add
add
xor
add
xor
add
and
add
add
add
and
add
cmc
fiadd
add
cld
in
call
mov
add
mov
fist
add
fiadd
add
add
movs
fiadd
add
add
xchg
cld
in
push
std
in
dec
cmp
fiadd
add
mov
add
adc
add
fiadd
add
fiadd
add
cmp
and
call
imul
add
cmp
sti
fld
add
fld
add
mov
add
dec
mov
add
sbb
add
xor
cmp
rcr
add
cmp
(bad)
ficom
add
fld
add
inc
aaa
add
add
je
add
fld
add
add
add
push
fst
add
add
add
xor
add
and
add
and
add
xor
add
xor
cld
in
jmp
cwde
cmp
hlt
fadd
add
cdq
cmp
in
add
mov
add
add
fadd
add
lahf
cmp
out
add
rcr
add
fadd
add
fadd
add
mov
out
inc
fadd
add
lahf
cmp
jge
add
rcr
add
imul
cmp
add
cmp
and
add
add
add
imul
cmp
fadd
add
cmp
(bad)
aam
sbb
fild
add
add
fild
add
fild
add
fild
add
fild
add
fild
add
and
(bad)
out
cwde
cmp
movs
fild
add
cwde
cmp
(bad)
aam
sbb
inc
aaa
add
add
add
add
add
add
add
add
add
shl
out
dec
fild
add
xchg
cmp
and
xchg
cmp
xor
xchg
cmp
and
cwde
cmp
clc
fiadd
add
fiadd
add
sahf
cmp
clc
fiadd
add
sahf
cmp
in
add
nop
sahf
cmp
lods
fiadd
add
add
add
fiadd
add
fiadd
add
fiadd
add
cmp
je
add
cs
cmp
sbb
cmp
push
fist
add
add
xor
add
xor
add
and
add
and
add
xor
and
call
add
add
add
fs
cmp
(bad)
ficom
add
aaa
add
fld
add
fld
add
fld
add
fld
add
add
jae
out
call
cmp
mov
add
aas
fwait
cmp
movs
fld
add
cmp
je
add
scas
fwait
cmp
push
fst
add
add
add
add
add
add
add
add
and
ficom
add
add
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
and
(bad)
mov
fadd
add
cdq
cmp
mov
add
scas
cdq
cmp
cmps
fadd
add
fadd
add
cdq
cmp
add
add
test
add
rcr
add
fadd
add
cdq
cmp
jnp
add
scas
cdq
cmp
pop
fadd
add
cmp
sub
cdq
cmp
repz
push
xchg
sbb
inc
aaa
add
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
add
add
and
call
cmp
push
fst
add
fild
add
add
mov
add
movs
fild
add
and
call
fild
add
xchg
cmp
je
add
retf
add
add
ret
add
fild
add
xchg
cmp
sub
add
adc
add
aaa
fild
add
xchg
cmp
fild
add
cdq
cmp
hlt
fiadd
add
cwde
cmp
push
jg
sbb
fiadd
add
add
in
add
in
add
mov
add
mov
add
movs
fiadd
add
fiadd
add
xlat
add
cmc
xlat
add
movs
fiadd
add
aaa
add
add
dec
fiadd
add
add
add
add
xchg
jp
add
add
cmp
add
movs
fiadd
add
jp
add
and
jmp
add
add
dec
cmp
and
cmp
hlt
fld
add
fld
add
cmp
clc
fld
add
cmp
jmp
fld
add
pushf
cmp
add
add
stos
fld
add
pushf
cmp
lods
fld
add
pushf
cmp
popf
fld
add
cmp
add
out
cmp
jg
add
lahf
cmp
add
sub
add
(bad)
cmp
add
fld
add
cmp
add
fld
add
cmp
add
push
cmp
xor
cmp
out
add
add
add
mov
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fwait
cmp
mov
call
repz
or
add
xchg
add
push
fwait
cmp
push
add
in
call
mov
add
(bad)
fadd
add
call
or
add
sub
cmp
inc
fadd
add
cmp
(bad)
fild
add
fild
add
cmp
sbb
add
and
cmp
mov
cmp
add
loopne
add
cmp
add
fild
add
cmp
add
fild
add
cmp
mov
add
add
cmp
imul
add
pop
loopne
add
add
loopne
add
cmp
add
loopne
add
cmp
add
loopne
add
cmp
add
add
std
cmp
add
add
cmp
add
add
repz
add
fiadd
add
cmp
add
loopne
add
aaa
cmp
or
add
loopne
cmp
add
add
(bad)
add
and
cmp
retf
add
cmp
fcmovnu
add
and
cmp
mov
cmp
add
fiadd
add
cmp
mov
cmp
add
loopne
add
cmp
add
loopne
add
cmp
add
loopne
add
cmp
add
add
repz
add
fiadd
add
cmps
cmp
dec
fiadd
add
add
add
add
sub
add
cmp
add
hlt
fld
add
fld
add
loopne
add
fld
add
fld
add
push
inc
add
fild
add
add
add
add
jp
sbb
fild
add
aaa
add
xor
add
add
add
add
add
add
add
push
jns
sbb
add
add
add
and
add
and
add
xor
add
xor
adc
call
add
fadd
add
fadd
add
cmp
add
fadd
add
cmp
out
add
adc
fadd
add
aaa
cmp
test
add
add
fadd
add
or
(bad)
fnstenv
cmp
je
add
mov
cmp
fadd
add
cmp
add
add
cmp
add
add
repnz
cmp
cmp
add
retf
add
fadd
add
cmp
add
fadd
add
aaa
cmp
inc
jecxz
sbb
add
lods
xor
add
add
add
fild
add
fild
add
fild
add
fild
add
fild
add
in
sbb
aaa
add
add
mov
add
mov
add
movs
fild
add
or
call
cmp
fild
add
cmp
add
add
cmp
add
add
fild
add
add
add
cmp
sub
add
ja
cmp
cmp
add
pop
cmp
add
fild
add
or
cmp
in
add
mov
cmp
hlt
fiadd
add
fiadd
add
cmp
mov
add
cmp
cmp
test
add
push
xor
add
xor
add
xor
add
add
add
add
lods
xor
add
add
cmp
ins
fiadd
add
xor
add
add
das
xor
add
fist
add
aaa
add
add
xor
add
xor
add
and
add
and
add
cmc
fld
add
ficom
add
add
hlt
fld
add
fld
add
add
add
fld
add
add
jae
out
push
fld
add
fld
add
aaa
cmp
jne
add
ret
aaa
cmp
fld
add
cmp
jne
add
test
fld
add
add
fld
add
fld
add
fld
add
add
add
cmp
add
cmp
in
add
fwait
xor
add
fadd
add
fadd
add
fadd
add
add
test
cmp
mov
xor
add
xor
add
add
repnz
add
add
jge
cmp
push
jecxz
sbb
add
add
add
xor
aaa
add
add
add
xor
add
and
add
and
add
xor
jecxz
sbb
fadd
add
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
and
jmp
aaa
cmp
mov
add
and
cmp
movs
fild
add
add
add
add
aaa
cmp
movs
fild
add
aaa
cmp
js
add
jp
cmp
imul
cmp
jp
add
shl
add
fild
add
xor
add
fidiv
add
(bad)
xor
add
shl
add
sub
cmp
add
add
add
add
mov
cmp
repnz
add
fiadd
add
xor
add
xor
add
xor
add
xor
add
cmp
jne
add
sub
cmp
data16
add
fiadd
add
fiadd
add
cmp
cmp
add
xor
add
add
add
fiadd
add
cmp
cmp
add
test
cmp
sub
add
mov
fld
add
cmp
in
add
mov
cmp
push
fst
add
aaa
add
fld
add
add
movs
fld
add
add
(bad)
ficom
add
add
add
add
add
add
add
add
add
add
rcr
out
push
xor
add
cmp
and
xor
add
xor
add
fld
add
xor
add
fadd
add
xor
add
fadd
add
xor
add
fadd
add
xor
add
fadd
add
xor
add
add
add
cmp
movs
fadd
add
xor
add
xor
add
cmp
ja
add
or
fadd
add
cmp
ja
add
push
xor
add
add
fnsave
cmp
cmp
add
in
cmp
cmp
add
and
add
sub
xor
add
fadd
add
add
add
xor
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
cmp
mov
add
mov
add
mov
add
push
xor
add
xor
add
xor
add
add
je
add
sbb
add
xor
add
add
je
add
add
add
cmp
add
mov
fild
add
xor
add
add
adc
add
xor
add
and
add
jmp
xor
add
fiadd
add
xor
add
fiadd
add
xor
add
xor
add
fiadd
add
xor
add
fiadd
add
add
add
add
mov
add
(bad)
fiadd
add
xor
add
add
daa
xor
add
fadd
add
fiadd
add
add
add
fiadd
add
fadd
add
cmp
pop
fiadd
add
fiadd
add
fiadd
add
add
sti
fld
add
cmp
jmp
add
cwde
xor
add
add
add
fld
add
fadd
add
fld
add
add
out
push
fld
add
add
jg
add
add
out
call
add
add
aaa
add
out
push
jle
add
add
in
mov
out
inc
add
add
jbe
add
add
in
mov
out
dec
add
fadd
add
fadd
add
fld
add
fadd
add
add
mov
add
mov
fadd
add
add
fadd
add
fadd
add
add
fadd
add
add
add
add
fadd
add
mov
add
fadd
add
fadd
add
fadd
add
add
add
aaa
add
fadd
add
add
pop
fadd
add
nop
aaa
add
xchg
sbb
add
mov
add
fild
add
xchg
add
fild
add
fild
add
fild
add
fild
add
xor
add
add
add
cmp
movs
fild
add
add
mov
cmp
cmps
fild
add
cmp
push
xor
add
add
je
add
je
add
sbb
aaa
add
add
add
fild
add
fild
add
fild
add
xchg
add
xchg
sbb
fild
add
add
add
aaa
add
fiadd
add
xchg
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
imul
and
aaa
add
add
mov
add
mov
add
movs
fiadd
add
and
call
cmp
fiadd
add
fiadd
add
cmp
data16
add
add
add
fiadd
add
cmp
sub
add
stos
xor
add
fiadd
add
xor
add
fiadd
add
fld
add
cmp
cld
fld
add
fld
add
fld
add
fld
add
cmp
test
add
je
cmp
mov
xor
add
add
add
xor
add
add
add
cmp
je
add
in
das
cmp
js
add
jne
cmp
fld
add
cmp
cmp
add
inc
sub
add
das
sub
out
jmp
fld
add
fadd
add
cmp
out
add
mov
add
add
add
xchg
(bad)
cmp
in
add
jle
cmp
mov
nop
cmp
stos
fadd
add
nop
cmp
(bad)
rcl
add
add
je
add
je
add
fadd
add
add
add
push
rcl
add
cmp
add
add
xor
add
and
add
and
add
add
add
xor
add
xor
sbb
cmp
add
out
(bad)
dec
add
out
cmp
ret
sbb
(bad)
out
nop
cmp
out
add
mov
cmp
sbb
(bad)
fist
add
(bad)
nop
cmp
sbb
dec
nop
cmp
stos
fild
add
cmp
add
out
(bad)
mov
fild
add
add
add
sbb
jmp
fild
add
cmp
add
out
call
fild
add
sbb
dec
fild
add
sbb
cmp
cmc
fiadd
add
cmp
ret
sbb
jmp
cmp
mov
add
aaa
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
sbb
cmp
or
mov
add
sbb
jmp
mov
add
add
test
cmp
adc
add
pop
mov
add
sbb
cmp
adc
cmp
hlt
fld
add
add
add
(bad)
cmp
push
fst
add
add
fld
add
fld
add
fld
add
add
movs
fld
add
ficom
add
add
movs
fld
add
add
add
add
add
ret
sbb
call
fld
add
cmp
add
add
xor
add
or
add
fld
add
fld
add
fadd
add
add
fadd
add
movs
in
call
fadd
add
mov
add
cmp
movs
fadd
add
fadd
add
fadd
add
add
add
mov
add
add
ret
mov
add
add
mov
add
add
test
rcl
add
aaa
add
add
and
add
and
add
xor
add
xor
add
and
rcl
add
add
fild
add
fild
add
fild
add
fild
add
add
add
fild
add
fild
add
mov
add
cmp
mov
add
and
fild
add
fild
add
lea
add
add
or
add
cmp
data16
add
mov
add
fild
add
cmp
fild
add
lea
add
add
add
mov
add
fild
add
fiadd
add
mov
add
fild
add
mov
add
fiadd
add
mov
add
mov
cmp
mov
add
and
add
cmp
mov
add
icebp
cmp
(bad)
fst
add
add
add
add
add
add
add
add
add
add
adc
cmp
push
fist
add
fiadd
add
add
and
add
and
add
hlt
fld
add
fld
add
mov
cmp
hlt
fld
add
fld
add
cmp
mov
add
aas
mov
add
ficom
add
xor
add
add
movs
fld
add
add
add
add
rcr
cmp
je
add
retf
add
add
ror
add
sbb
xchg
sbb
fld
add
xor
add
add
hlt
fadd
add
fadd
add
add
add
fadd
add
fadd
add
movs
in
(bad)
fisttp
add
or
add
ret
mov
add
cmp
mov
add
lock
add
cmp
je
add
xchg
add
push
mov
add
fist
add
aaa
add
add
add
add
add
xor
add
and
add
and
add
xor
movs
in
call
mov
add
xchg
sbb
fild
add
aaa
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
mov
add
fcom
add
add
add
movs
fild
add
add
add
add
add
add
shl
cmp
push
fst
add
xor
add
add
xor
add
and
add
and
add
xor
add
xor
mov
cmp
(bad)
fist
add
xor
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
add
fiadd
add
movs
in
push
mov
add
cmp
mov
add
dec
add
xchg
sbb
add
sbb
add
je
add
fiadd
add
add
add
xor
movs
in
dec
mov
add
xchg
sbb
add
add
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
pop
xchg
sbb
fld
add
add
mov
add
movs
fld
add
add
mov
add
xchg
movs
in
push
cmp
je
add
xchg
mov
add
add
leave
mov
add
add
add
add
les
add
iret
mov
add
fld
add
mov
add
fld
add
mov
add
fld
add
mov
add
mov
add
fadd
add
mov
add
movs
in
(bad)
jmp
add
lea
add
fadd
add
fadd
add
movs
in
(bad)
clc
mov
add
add
add
cmp
movs
fadd
add
fadd
add
cmp
fadd
add
mov
add
fist
add
aaa
add
add
add
xor
add
and
add
and
add
xor
fist
add
add
hlt
fild
add
fild
add
add
add
fild
add
fild
add
fild
add
adc
(bad)
jl
cmp
mov
add
inc
sub
add
sub
add
cmp
cmps
fild
add
cmp
js
add
popf
sub
add
add
enter
jp
add
and
cmp
imul
add
sub
add
add
sub
cmp
add
add
cmp
aaa
cmp
fild
add
aaa
cmp
pop
fild
add
cmp
add
out
call
fiadd
add
cmp
push
pop
xchg
sbb
fiadd
add
add
mov
add
mov
add
movs
fiadd
add
add
(bad)
pop
xchg
sbb
mov
add
add
add
add
add
add
add
add
add
rcl
out
(bad)
call
fiadd
add
fiadd
add
aaa
cmp
fiadd
add
fiadd
add
aaa
cmp
clc
fld
add
fld
add
xor
add
jmp
fld
add
xor
add
mov
xor
add
retf
cmp
mov
cmp
lahf
fld
add
cmp
jo
add
mov
fld
add
pmaxsw
cmp
cmp
fld
add
fld
add
pmaxsw
mov
cmp
aaa
fld
add
fld
add
add
add
xor
xchg
sbb
fadd
add
mov
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
or
(bad)
jge
cmp
movs
fadd
add
cmp
mov
add
ins
cmp
cmps
fadd
add
or
jmp
cmp
push
cmp
imul
add
data16
push
jecxz
sbb
fadd
add
mov
add
add
and
add
xor
add
xor
add
and
add
and
or
dec
sub
add
in
sbb
fild
add
add
fild
add
fild
add
fild
add
add
movs
fild
add
and
add
mov
add
in
and
out
call
fild
add
cmp
fild
add
cmp
push
in
sbb
add
rcl
add
xor
add
and
add
and
add
xor
add
xor
or
push
fiadd
add
cmp
in
add
in
add
add
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
xor
mov
add
mov
add
cmps
fiadd
add
(bad)
aaa
add
xchg
sbb
add
jl
aaa
add
add
mov
aaa
add
add
add
add
xor
or
inc
add
add
and
add
or
cmp
adc
cmp
(bad)
ficom
add
add
fld
add
fld
add
fld
add
fld
add
fld
add
or
(bad)
mov
fld
add
or
push
ficom
add
nop
aaa
add
add
add
add
add
add
add
add
add
add
jmp
cmp
and
add
js
cmp
xor
sub
add
add
jo
cmp
add
cmp
call
and
add
jecxz
sbb
fadd
add
add
mov
add
add
add
mov
add
movs
fadd
add
add
(bad)
jecxz
sbb
fadd
add
xchg
aaa
add
add
add
add
add
add
add
rol
(bad)
mov
fadd
add
and
add
add
inc
and
add
add
cmp
adc
cmp
add
add
add
out
(bad)
aas
daa
cmp
repz
jmp
add
jmp
add
push
cmp
add
call
add
inc
add
dec
add
call
cmp
add
out
(bad)
jmp
out
jmp
cmp
ret
add
jmp
cmp
rol
out
inc
add
add
and
add
add
call
cmp
repz
inc
cmp
add
out
dec
cmp
adc
out
call
cmp
add
out
(bad)
mov
add
jmp
sub
add
add
jmp
sub
add
add
push
sub
add
sub
add
out
inc
sub
add
sub
add
add
add
and
add
add
(bad)
jg
cmp
repz
jmp
sub
add
add
(bad)
out
sub
add
add
push
add
(bad)
fild
cmp
repz
inc
sub
add
add
push
add
adc
out
jmp
add
add
out
jmp
sub
add
fld
add
fld
add
add
add
fld
add
and
add
xlat
add
mov
add
movs
fld
add
fld
add
add
movs
fld
add
add
xchg
sbb
add
in
aaa
add
add
xor
aaa
add
add
add
add
repz
in
jmp
and
add
add
add
cmp
inc
ficom
add
xchg
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fist
add
aaa
add
add
mov
add
mov
add
movs
fadd
add
add
cmp
fadd
add
add
add
fadd
add
cmp
fadd
add
fadd
add
add
mov
fadd
add
fadd
add
and
add
fild
add
cmp
in
add
fwait
and
add
fild
add
fild
add
fild
add
add
jae
out
push
fild
add
fild
add
and
add
dec
and
add
push
and
add
add
adc
cmp
imul
cmp
cmp
add
ins
and
add
jl
cmp
sub
add
addr16
add
jb
cmp
out
fiadd
add
add
add
fiadd
add
cmp
in
fiadd
add
cmp
loope
add
pop
and
add
and
add
and
add
cmp
mov
add
fisub
cmp
ins
fiadd
add
fiadd
add
and
add
add
sbb
cmp
pop
fiadd
add
and
add
add
add
add
add
cmp
cmp
add
in
and
add
and
add
and
add
fld
add
and
add
fld
add
and
add
fld
add
and
add
fld
add
and
add
jns
add
js
add
and
add
fld
add
add
add
and
add
add
in
and
add
fadd
add
and
add
fadd
add
and
add
add
jle
cmp
sbb
add
mov
fld
add
and
add
and
add
and
add
fadd
add
fadd
add
adc
add
fadd
add
add
add
fadd
add
js
add
fadd
add
js
add
fadd
add
js
add
fadd
add
fadd
add
ja
add
fadd
add
js
add
add
mov
fadd
add
cmp
pop
fadd
add
cmp
inc
fadd
add
add
add
cmps
ja
add
add
add
add
ret
add
xchg
sbb
add
cmp
aaa
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
jg
add
out
(bad)
jge
cmp
(bad)
fcom
add
jbe
add
add
je
add
je
add
fild
add
add
add
add
ret
add
jmp
jg
add
add
jg
add
cmp
fild
add
cmp
fild
add
cmp
fild
add
cmp
stc
fiadd
add
fiadd
add
cmp
sti
fiadd
add
cmp
out
add
jg
cmp
mov
add
cmp
add
add
add
cmp
scas
fiadd
add
fiadd
add
cmp
jbe
add
mov
fiadd
add
fiadd
add
jle
add
add
sar
fiadd
add
jle
add
fiadd
add
jl
add
fiadd
add
cmp
cmp
add
sub
fld
add
jnp
add
add
add
fld
add
cmp
neg
add
pop
jle
add
fld
add
cmp
fstp
add
add
fld
add
jle
add
jnp
add
jnp
add
add
out
cmp
adc
add
icebp
jp
add
add
mov
add
add
xlat
jp
add
fld
add
add
add
fld
add
jp
add
add
fdivr
add
fld
add
jp
add
fadd
add
jnp
add
fadd
add
cmp
add
fild
add
cmp
add
add
mov
fadd
add
fadd
add
cmp
add
add
rol
add
cmp
add
cmp
fadd
add
rcl
add
aaa
add
add
xor
add
xor
add
and
add
and
add
cmc
fild
add
cli
in
call
cmp
in
add
inc
jg
add
fild
add
cmp
add
add
out
add
fs
add
jle
add
jle
add
aam
sbb
imul
add
add
add
add
add
add
sar
in
call
fild
add
fild
add
jge
add
fild
add
add
add
xchg
sbb
fild
add
aaa
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fist
add
aaa
add
add
mov
add
mov
add
movs
fiadd
add
std
in
call
cmp
fiadd
add
je
add
cld
in
inc
add
add
cmp
data16
add
cmp
add
in
push
cmp
sub
add
bound
add
fiadd
add
cmp
adc
in
dec
fld
add
cld
in
jmp
cmp
in
fld
add
cmp
fcompp
add
xor
cmp
lods
fld
add
add
fld
add
add
add
jge
add
jl
add
add
xor
add
add
jge
add
add
es
add
add
icebp
jl
add
add
int3
jl
add
fld
add
jge
add
fld
add
jge
add
fld
add
fadd
add
jge
add
add
add
add
repz
add
fadd
add
jae
add
fadd
add
jae
add
jb
add
loopne
add
jae
add
jae
add
jae
add
add
fidiv
add
add
mov
add
jb
add
loopne
add
loopne
add
jb
add
add
add
add
cmc
jb
add
add
lock
add
add
or
add
fild
add
jne
add
add
clc
jns
add
jns
add
xlat
add
and
fadd
add
jp
add
fild
add
jns
add
fild
add
jp
add
fild
add
jp
add
add
add
add
jl
cmp
adc
add
out
cmp
add
js
add
add
in
js
add
add
mov
add
add
ret
js
add
add
mov
fild
add
js
add
fiadd
add
cmp
sub
add
iret
jns
add
fiadd
add
jns
add
fadd
add
add
add
jns
add
ja
add
fiadd
add
js
add
fiadd
add
js
add
fiadd
add
jns
add
cmp
mov
add
mov
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
add
add
(bad)
js
add
ja
add
fld
add
fadd
add
fadd
add
xlat
add
sahf
js
add
xlat
add
mov
add
xlat
add
test
add
xlat
add
(bad)
js
add
fadd
add
cmp
mov
add
test
cmp
movs
fld
add
add
add
add
scas
jne
add
jne
add
add
xchg
jne
add
add
jg
cmp
(bad)
fld
add
fadd
add
cmp
std
fadd
add
cmp
sbb
outs
cmp
fadd
add
fadd
add
cmp
push
fadd
add
add
add
add
scas
outs
cmp
repnz
add
mov
fadd
add
cmp
inc
fadd
add
outs
cmp
ret
in
dec
cmp
fadd
add
cmp
add
in
(bad)
jns
cmp
fadd
add
in
jmp
in
push
fcom
add
add
fild
add
add
add
fild
add
fild
add
fild
add
fild
add
fst
add
gs
add
add
movs
fild
add
add
jne
add
repz
jmp
fild
add
jo
add
add
hlt
outs
cmp
fild
add
cmp
daa
fild
add
add
add
cmp
aaa
fild
add
jo
add
fild
add
jae
add
fiadd
add
jo
add
fiadd
add
jo
add
fiadd
add
outs
cmp
fstp
add
(bad)
jo
add
jo
add
ins
cmp
mov
add
in
cmp
cmps
fiadd
add
ins
cmp
ja
add
or
add
add
add
add
push
jo
add
add
push
jo
add
add
jmp
add
ins
cmp
daa
fiadd
add
fiadd
add
ins
cmp
daa
fiadd
add
ins
cmp
neg
add
cmp
cmp
out
add
cmps
outs
cmp
neg
add
sub
out
add
jp
cmp
mov
add
add
add
aam
cmp
cmps
fld
add
fld
add
cmp
mov
add
adc
add
add
outs
jo
add
fadd
add
cmp
adc
add
adc
cmp
add
add
jmp
add
fadd
add
jo
add
add
cmp
pop
fld
add
fld
add
cmp
add
add
aam
add
xchg
outs
cmp
out
add
inc
jno
add
add
cmp
cmp
out
add
addr16
add
jno
add
jo
add
fadd
add
cmp
rcr
add
jo
add
add
xor
add
fadd
add
jno
add
in
(bad)
mov
fadd
add
add
add
cmp
xor
je
add
fadd
add
je
add
fadd
add
add
fadd
add
je
add
fild
add
fild
add
fild
add
test
add
fild
add
cmp
mov
add
push
test
add
test
add
cmp
add
add
cmps
fild
add
cmp
jbe
add
loope
cmp
sbb
add
add
xchg
cmp
xor
add
add
add
fild
add
cmp
daa
fild
add
cmp
xor
cmp
jmp
cmp
cmc
fiadd
add
cmp
in
add
add
add
mov
fiadd
add
cmp
add
cmp
add
fiadd
add
cmp
add
cmp
popa
fiadd
add
fiadd
add
add
cmps
cmp
add
cmp
adc
cmp
add
add
add
add
xchg
cmp
add
fld
add
cmp
out
add
test
add
pop
add
pop
cmp
mov
add
jne
cmp
cmps
fld
add
cmp
mov
add
pop
cmp
cmps
fld
add
cmp
jbe
add
lea
add
add
add
xlat
cmp
add
cmp
add
add
fld
add
cmp
push
fld
add
jg
add
add
dec
jg
add
fld
add
cmp
leave
fadd
add
loopne
add
jle
add
fadd
add
jle
add
fadd
add
add
jle
add
add
add
jle
add
jle
add
fadd
add
jle
add
fadd
add
jge
add
loopne
add
fadd
add
jge
add
cmp
fadd
add
jge
add
add
loop
cmp
ja
add
fnstsw
add
add
or
add
add
add
jle
add
loopne
add
jge
add
in
sbb
add
inc
pusha
cmp
in
add
mov
add
mov
add
movs
fild
add
add
(bad)
in
sbb
add
jl
cmp
je
add
je
add
fild
add
add
add
add
ror
in
inc
jnp
add
add
add
retf
cmp
cmp
and
jp
add
fild
add
fild
add
cmp
clc
fiadd
add
fiadd
add
cmp
clc
fiadd
add
jge
add
fiadd
add
cmp
mov
add
add
add
jge
add
jnp
add
add
add
jge
add
add
jmp
fiadd
add
jl
add
add
in
cmp
arpl
add
out
jl
add
fiadd
add
fiadd
add
jl
add
fiadd
add
jl
add
fiadd
add
jl
add
fld
add
jnp
add
fld
add
jl
add
fld
add
jl
add
add
add
dec
cmp
(bad)
add
(bad)
add
dec
cmp
pushf
fld
add
dec
cmp
scas
fld
add
cmp
pop
fld
add
loopne
add
fld
add
fld
add
cmp
pop
fld
add
fld
add
add
add
add
add
mov
cmp
inc
fld
add
in
call
cmp
or
add
mov
add
loopne
add
cmp
or
add
mov
add
add
imul
add
add
fadd
add
cmp
retf
add
fadd
add
loopne
add
dec
cmp
add
add
adc
add
imul
add
add
ss
cmp
add
in
jmp
cmp
repz
(bad)
jp
cmp
xor
dec
cmp
fadd
add
fild
add
cmp
repz
jmp
cmp
stc
fild
add
cmp
jmp
add
dec
cmp
jae
in
inc
add
add
cmp
lods
fild
add
fild
add
cmp
outs
fild
add
loope
dec
inc
cmp
jno
add
leave
inc
cmp
(bad)
fild
add
cmp
xor
add
inc
add
loope
jmp
dec
cmp
and
dec
cmp
fild
add
dec
cmp
out
add
retf
dec
cmp
add
add
repz
call
dec
cmp
jmp
dec
cmp
mov
dec
cmp
jmp
add
daa
dec
cmp
jae
in
push
dec
cmp
popf
fiadd
add
fiadd
add
fiadd
add
cmp
repz
(bad)
dec
add
add
(bad)
add
add
test
add
add
add
add
(bad)
dec
cmp
repz
(bad)
fimul
add
add
cmc
dec
cmp
inc
fiadd
add
dec
cmp
xlat
fld
add
dec
cmp
repz
inc
dec
cmp
sbb
add
mov
fadd
add
dec
cmp
sbb
add
mov
cmp
jae
in
jmp
fld
add
fld
add
dec
cmp
add
add
dec
fld
add
dec
cmp
repz
jmp
dec
cmp
adc
add
test
fadd
add
add
fadd
add
fucomip
dec
fld
add
fld
add
fadd
add
cmp
repz
push
cmp
or
add
jno
cmp
fcmovu
add
add
add
jl
cmp
and
inc
cmp
jae
in
call
cmp
and
jmp
cmp
into
fadd
add
cmp
mov
dec
cmp
xor
add
fimul
add
fadd
add
fadd
add
add
add
das
pusha
cmp
das
fadd
add
pusha
cmp
jne
add
push
pusha
cmp
add
add
dec
fadd
add
cmp
mov
pop
cmp
das
fadd
add
dec
cmp
cmp
add
add
sub
add
cs
cmp
sti
xlat
add
dec
dec
cmp
jmp
add
xlat
add
or
iret
fild
add
dec
cmp
das
fadd
add
add
outs
pop
cmp
mov
add
add
add
jmp
add
fild
add
pop
cmp
sbb
add
fild
add
fild
add
fiadd
add
cmp
aaa
fadd
add
fadd
add
xlat
add
jae
cmp
sub
add
into
dec
cmp
not
add
cdq
dec
cmp
add
add
fst
add
mov
cmp
out
xlat
add
lahf
pop
cmp
pop
fadd
add
cmp
mov
add
add
fiadd
add
cmp
ja
add
add
add
pop
cmp
push
fiadd
add
cmp
xchg
fiadd
add
fiadd
add
cmp
xchg
fld
add
add
add
add
inc
pop
cmp
pop
fadd
add
pop
cmp
dec
fadd
add
cmp
push
fadd
add
pop
cmp
sbb
add
and
add
pop
cmp
pop
fadd
add
cmp
psubusb
add
add
add
scas
pop
cmp
push
fld
add
pop
cmp
inc
fld
add
pop
cmp
push
fld
add
pop
cmp
add
add
mov
pop
cmp
test
add
push
pop
cmp
xchg
fadd
add
pop
cmp
xchg
fadd
add
dec
cmp
arpl
add
neg
add
add
repnz
cmp
sbb
add
std
pop
cmp
or
add
mov
xlat
add
rcr
add
xlat
add
out
pop
cmp
add
add
stc
pop
cmp
adc
add
add
add
adc
cmp
arpl
add
pop
pop
cmp
inc
fadd
add
pop
cmp
inc
fadd
add
fadd
add
fadd
add
pop
cmp
xchg
fadd
add
pop
cmp
pusha
fadd
add
loopne
add
pop
cmp
inc
loopne
add
pop
cmp
jns
add
push
pop
cmp
push
add
fstp
add
add
add
fild
add
pop
cmp
cmp
add
call
add
fild
add
pop
cmp
push
fild
add
fiadd
add
fiadd
add
cmp
stc
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
add
add
(bad)
pop
cmp
fild
add
cmp
imul
cmp
jns
add
test
cmp
cmp
add
mov
loopne
add
loopne
add
loopne
add
add
(bad)
pop
cmp
(bad)
add
push
cmp
mov
add
jne
cmp
stc
fild
add
cmp
add
add
jmp
pop
cmp
jecxz
add
inc
push
cmp
(bad)
fild
add
cmp
mov
push
cmp
test
push
cmp
push
loopne
add
fld
add
cmp
xchg
fld
add
pop
cmp
mov
add
adc
add
push
cmp
pop
fld
add
push
cmp
dec
fld
add
add
add
add
add
aas
push
cmp
push
sub
add
add
add
add
add
add
add
fld
add
fld
add
add
movs
mov
in
jmp
add
or
add
fadd
add
cmps
xor
add
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
in
jmp
in
call
xor
jge
add
add
in
(bad)
std
cmps
xor
pop
fadd
add
fadd
add
fadd
add
add
add
xor
xor
add
pop
cmps
xor
pop
fadd
add
xor
mov
add
hlt
fild
add
fild
add
aad
sbb
fild
add
pop
aaa
add
fild
add
fild
add
add
mov
add
xchg
(bad)
jmp
test
add
aam
sbb
add
test
aaa
add
add
add
add
add
add
add
add
add
add
in
dec
aam
sbb
pop
aaa
add
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fsubr
push
fiadd
add
fsubr
jmp
fiadd
add
fiadd
add
add
mov
add
movs
fiadd
add
fild
add
add
not
inc
add
fild
add
add
add
int
add
add
jbe
add
ja
add
fiadd
add
aaa
add
add
xor
add
daa
fiadd
add
push
aaa
add
xchg
sbb
fiadd
add
push
aaa
add
add
add
fld
add
fld
add
fld
add
fld
add
fld
add
fsubr
(bad)
mov
fst
add
add
add
mov
add
movs
fld
add
add
repz
(bad)
jg
xor
push
fst
add
pop
aaa
add
add
add
add
add
add
xor
add
and
add
and
fsubr
push
add
and
add
inc
cmps
xor
add
add
and
add
in
add
hlt
fadd
add
pop
xor
in
add
in
add
mov
add
mov
add
or
aaa
add
rcl
add
add
movs
fadd
add
add
je
add
fadd
add
add
ret
and
call
fadd
add
xor
push
rcl
add
add
xor
add
xor
add
and
add
and
add
cmc
fild
add
and
jmp
xor
push
aad
sbb
fild
add
add
add
aaa
add
fild
add
fild
add
add
movs
fild
add
and
push
in
jmp
add
je
add
fild
add
xchg
inc
add
add
add
add
fild
add
aaa
add
aad
sbb
fild
add
push
aaa
add
add
add
push
aaa
add
add
and
add
hlt
fiadd
add
fiadd
add
and
(bad)
mov
fist
add
push
aaa
add
fiadd
add
add
movs
fiadd
add
add
xchg
and
jmp
add
nop
movs
xor
repz
jmp
add
add
add
add
je
add
pop
pushf
inc
add
add
fiadd
add
push
aaa
add
xchg
sbb
fiadd
add
aaa
add
push
aaa
add
fld
add
fld
add
fld
add
fld
add
and
jmp
fld
add
fld
add
movs
xor
jae
in
inc
add
add
add
mov
add
mov
add
mov
fld
add
add
jbe
add
fld
add
fst
add
fld
add
push
aaa
add
add
and
add
xor
and
jmp
in
push
fadd
add
add
add
add
in
add
inc
repz
add
fadd
add
fadd
add
fadd
add
push
aaa
add
fist
add
fadd
add
push
aaa
add
add
je
add
fadd
add
and
push
add
and
jmp
add
add
xor
add
xor
add
arpl
add
add
xor
add
xor
fadd
add
fcom
add
aaa
add
fild
add
aaa
add
fild
add
fild
add
fild
add
and
jmp
in
push
add
movs
fild
add
add
add
xor
je
add
fild
add
add
jne
add
sub
add
fst
add
push
aaa
add
push
aaa
add
add
xor
add
xor
add
and
and
xor
(bad)
fist
add
push
aaa
add
fiadd
add
fiadd
add
add
add
fiadd
add
fiadd
add
add
jae
in
jmp
in
push
add
movs
fiadd
add
add
jg
add
add
add
add
jne
add
pushf
push
aaa
add
pop
xchg
sbb
fiadd
add
aaa
add
push
aaa
add
add
add
add
xor
add
and
add
and
and
xor
in
add
in
add
hlt
fld
add
fld
add
add
in
add
mov
add
inc
xchg
inc
add
fld
add
fld
add
aaa
add
push
xchg
sbb
add
in
aaa
add
add
lods
push
aaa
add
add
add
add
add
add
add
add
add
and
jmp
add
je
add
xor
add
and
add
pop
xchg
inc
add
fadd
add
fadd
add
fadd
add
fadd
add
dec
aaa
add
fist
add
add
in
aaa
add
add
movs
fadd
add
add
xchg
and
jmp
fist
add
add
je
add
je
add
fadd
add
add
fadd
add
and
call
xor
push
fist
add
add
hlt
fild
add
fild
add
add
add
fild
add
fild
add
fild
add
fild
add
adc
inc
xor
push
fst
add
add
add
mov
add
movs
fild
add
add
je
add
repz
jmp
add
adc
push
add
add
xor
add
add
add
mov
xor
and
add
and
add
xor
fild
add
outs
aaa
add
xchg
sbb
fiadd
add
aaa
add
fiadd
add
outs
aaa
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
in
jmp
add
mov
add
movs
fiadd
add
add
add
add
add
add
fiadd
add
xchg
sbb
add
push
ins
aaa
add
ins
aaa
add
add
and
add
xor
add
xor
adc
(bad)
fist
xchg
sbb
fld
add
add
fld
add
fld
add
fld
add
fld
add
add
add
fld
add
fld
add
in
inc
sbb
add
add
add
je
add
fld
add
add
add
je
add
ror
in
jmp
xor
add
in
call
xchg
xor
inc
sbb
add
aaa
add
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
or
inc
mov
ror
add
mov
(bad)
jecxz
sbb
outs
aaa
add
add
movs
fadd
add
add
add
add
fadd
add
or
inc
add
add
mov
ror
add
or
xor
inc
jecxz
sbb
fadd
add
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
or
jmp
or
call
xor
or
(bad)
cmp
inc
xor
add
add
(bad)
in
sbb
jno
add
add
je
add
fild
add
add
add
je
add
ror
in
inc
mov
push
in
sbb
jno
add
add
xor
add
xor
add
and
add
and
add
cmc
fiadd
add
fiadd
add
or
inc
add
add
mov
push
fist
add
outs
aaa
add
fiadd
add
add
movs
fiadd
add
add
mov
add
xchg
or
call
add
xchg
sbb
add
mov
fiadd
add
add
add
add
add
fiadd
add
add
add
or
jmp
add
add
add
adc
xor
neg
add
hlt
fld
add
fld
add
fld
add
or
call
mov
and
add
in
add
mov
add
cdq
mov
in
add
movs
fld
add
inc
add
add
jne
add
add
add
jne
add
pushf
jo
add
add
ja
add
push
fld
add
xchg
sbb
fld
add
add
fld
add
outs
aaa
add
add
and
add
and
add
cmc
fadd
add
fadd
add
add
(bad)
jg
xor
push
jecxz
sbb
fadd
add
ins
aaa
add
fadd
add
add
add
add
movs
fadd
add
add
mov
add
xchg
add
inc
xor
je
add
je
add
fadd
add
add
add
fadd
add
nop
inc
add
fadd
add
fadd
add
ins
aaa
add
xchg
sbb
fadd
add
add
add
add
fild
add
add
in
add
hlt
fild
add
fild
add
add
push
xor
push
in
sbb
imul
movs
fild
add
add
movs
fild
add
add
je
add
repz
jmp
add
add
push
add
add
add
add
call
xor
xor
add
fild
add
add
add
in
call
xor
and
add
hlt
fiadd
add
fadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
mov
add
add
add
test
add
movs
fiadd
add
xchg
sbb
add
int3
jae
add
add
or
aaa
add
add
add
add
fiadd
add
add
inc
xor
xor
add
xor
add
and
add
and
add
mov
add
hlt
fld
add
fld
add
lods
inc
add
add
add
fld
add
fld
add
fld
add
fld
add
add
fst
add
push
add
push
push
add
add
je
add
jne
add
repz
in
push
fld
add
fld
add
xor
fld
add
add
add
add
outs
xor
fld
add
fld
add
fadd
add
xor
jmp
add
xchg
test
in
fadd
add
fadd
add
fist
add
push
add
add
mov
add
movs
fadd
add
add
je
add
add
add
repz
(bad)
fadd
add
test
fadd
add
cmp
fadd
add
cmp
daa
fadd
add
pop
cmp
cmp
add
dec
pop
cmp
sub
add
pop
pop
cmp
cli
fild
add
fild
add
pop
cmp
in
fild
add
add
fild
add
cmp
push
fst
add
push
add
add
mov
add
movs
fild
add
add
je
add
repz
push
pop
cmp
push
fst
add
add
xor
add
xor
add
and
add
and
add
xor
fild
add
add
(bad)
fcomp
add
add
add
fist
add
imul
in
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
in
jmp
in
push
in
(bad)
jnp
cmp
jbe
add
je
add
data16
add
add
add
push
pop
cmp
movs
fiadd
add
add
add
add
add
iret
lds
fiadd
add
add
xor
add
(bad)
enter
fiadd
add
add
cmc
fld
add
fld
add
add
fld
add
fld
add
fld
add
fld
add
add
or
add
lods
ins
aaa
add
ins
aaa
add
add
movs
fld
add
add
je
add
repz
jmp
cmp
je
add
pop
pop
cmp
fld
add
pop
cmp
push
or
add
int3
imul
and
add
xor
add
xor
add
and
add
and
add
cmc
fadd
add
fadd
add
hlt
in
call
push
cmp
push
fist
add
fadd
add
pusha
aaa
add
fadd
add
add
movs
fadd
add
add
mov
add
xchg
hlt
in
inc
push
cmp
push
fist
add
add
je
add
je
add
fadd
add
add
fadd
add
hlt
in
jmp
add
add
add
xor
add
and
add
and
add
mov
add
hlt
fild
add
fild
add
jecxz
add
fild
add
fild
add
fild
add
fild
add
add
fst
add
push
aaa
add
push
aaa
add
add
je
add
jne
add
repz
inc
add
add
fst
add
aaa
add
add
add
xor
add
and
add
and
add
xor
fild
add
add
jmp
add
hlt
fiadd
add
pusha
cmp
repz
jmp
fiadd
add
add
push
fiadd
add
fiadd
add
add
push
add
in
add
movs
fiadd
add
xor
in
add
movs
fiadd
add
add
xor
fiadd
add
add
jbe
add
jne
add
or
aaa
add
add
cmp
add
sub
add
and
push
aaa
add
xchg
sbb
fiadd
add
add
pushf
push
aaa
add
add
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
call
or
add
add
add
mov
add
movs
fld
add
add
je
add
repz
in
jmp
add
(bad)
in
push
add
add
add
add
xor
add
fmul
add
and
add
xor
fld
add
push
aaa
add
xchg
sbb
fadd
add
aaa
add
fadd
add
xchg
add
fadd
add
fadd
add
fadd
add
fadd
add
pop
cmp
movs
fadd
add
add
mov
add
in
add
add
add
movs
fadd
add
add
lea
fadd
add
add
jbe
add
jne
add
pushf
xchg
add
rcl
add
add
xchg
add
add
xor
add
and
add
and
sti
in
call
fild
add
cmp
push
aad
sbb
fild
add
add
add
ss
fild
add
add
movs
fild
add
add
mov
add
xchg
cli
in
call
aam
sbb
add
cmp
add
add
add
add
add
add
fild
add
stc
in
jmp
add
add
in
inc
add
add
add
fild
add
add
hlt
fiadd
add
inc
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
xchg
add
fist
add
add
mov
add
add
movs
fiadd
add
std
in
jmp
fist
add
add
add
add
fiadd
add
add
add
xor
add
and
fiadd
add
std
in
push
add
and
add
adc
cmp
add
in
push
fld
add
add
in
add
hlt
fld
add
fld
add
fld
add
fld
add
add
(bad)
ficom
add
add
mov
add
add
add
add
add
ret
sti
in
push
add
sti
in
jmp
add
add
add
and
add
jp
xor
xor
add
xor
add
and
fld
add
ss
fst
add
fadd
add
xor
cmc
fadd
add
test
add
fadd
add
fadd
add
add
jae
in
(bad)
fcomp
add
add
movs
fadd
add
add
je
add
fadd
add
xor
jne
add
jne
add
data16
add
add
movs
test
add
add
add
rcl
add
add
test
add
add
and
add
hlt
fild
add
fild
add
and
(bad)
cmp
add
aad
sbb
fild
add
add
fild
add
add
movs
fild
add
add
mov
add
xchg
and
dec
pop
cmp
add
add
add
in
(bad)
call
aad
sbb
add
sub
add
add
add
add
add
xor
add
and
fild
add
and
dec
pop
cmp
and
add
xlat
pop
cmp
(bad)
rcl
add
xor
add
fiadd
add
fiadd
add
fiadd
add
add
add
fiadd
add
fiadd
add
in
jmp
in
push
add
movs
fiadd
add
add
je
add
add
add
add
jne
add
pushf
xor
sbb
fiadd
add
add
xor
add
add
add
add
and
add
and
and
push
fld
add
and
jmp
fld
add
and
inc
pop
cmp
out
add
in
add
mov
add
mov
add
jae
in
call
xlat
add
mov
add
movs
fld
add
inc
add
add
je
add
fld
add
inc
add
add
add
add
add
add
fld
add
xor
add
fld
add
fld
add
xor
sbb
fld
add
add
fadd
add
xor
in
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
xor
movs
fadd
add
add
mov
add
mov
add
in
add
movs
fadd
add
add
fadd
add
add
jbe
add
jne
add
pushf
xor
push
fist
add
add
xor
xor
add
xor
add
and
add
and
and
jmp
fst
add
fild
add
add
fild
add
fild
add
fild
add
add
movs
fild
add
in
(bad)
stc
pop
cmp
(bad)
fcom
add
add
fild
add
add
add
add
add
fild
add
and
(bad)
fidivr
add
add
add
xchg
sbb
test
add
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
and
push
fiadd
add
and
jmp
fiadd
add
xlat
add
mov
add
movs
fiadd
add
fiadd
add
add
movs
fiadd
add
xor
add
add
push
std
nop
sbb
add
add
add
add
mov
add
add
add
add
xor
and
push
pop
cmp
xor
add
or
inc
std
nop
sbb
fiadd
add
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
add
jle
add
in
dec
jge
add
jle
add
jle
add
and
(bad)
mov
std
nop
sbb
add
test
add
add
add
add
xor
add
and
fld
add
and
jmp
fld
add
add
add
fadd
add
aaa
add
and
dec
cmp
ret
and
jmp
cmp
shl
add
fist
add
add
mov
add
mov
add
movs
fadd
add
add
je
add
repz
call
fist
add
add
add
add
xor
add
xor
add
and
add
and
add
xor
fadd
add
and
cmp
add
in
call
pop
cmp
repz
dec
pop
cmp
neg
add
mov
fst
add
aaa
add
add
movs
fild
add
add
mov
add
movs
fild
add
in
push
add
adc
jmp
add
add
fild
add
add
add
xor
add
and
fild
add
aaa
add
xchg
sbb
fild
add
ds
add
fiadd
add
aaa
add
fiadd
add
fiadd
add
add
add
fiadd
add
fiadd
add
adc
jmp
fiadd
add
fiadd
add
in
inc
js
add
fiadd
add
fiadd
add
adc
(bad)
mov
fiadd
add
add
add
jg
add
add
xor
add
movs
jge
add
add
add
add
and
add
xor
fiadd
add
add
fiadd
add
fld
add
fld
add
fld
add
add
stc
nop
sbb
fld
add
cmp
add
fld
add
cmp
add
add
movs
fld
add
fld
add
jns
add
adc
call
jp
add
add
add
paddsw
pop
ja
add
stc
nop
sbb
add
sbb
aaa
add
add
add
and
add
and
add
xor
fld
add
adc
jmp
fadd
add
aaa
add
fadd
add
cmp
neg
add
mov
add
fadd
add
fadd
add
add
add
data16
movs
fadd
add
add
jecxz
sbb
ds
add
add
je
add
fadd
add
add
add
je
add
ror
add
or
cmp
repz
jmp
cmp
add
cmp
adc
cmp
add
add
(bad)
in
sbb
fild
add
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
in
call
bound
add
in
sbb
inc
aaa
add
add
je
add
fild
add
add
add
adc
jmp
add
add
add
add
cmp
call
imul
aam
idiv
and
add
xor
add
and
push
call
ds
hlt
fiadd
add
fiadd
add
push
idiv
js
idiv
test
idiv
hlt
fiadd
add
fiadd
add
je
call
add
movs
fiadd
add
dec
idiv
hlt
jo
inc
add
add
idiv
movs
fiadd
add
add
idiv
dec
push
jmp
inc
idiv
je
add
je
add
dec
dec
idiv
inc
push
call
push
add
and
add
jp
idiv
xor
idiv
test
idiv
and
add
and
add
pop
push
idiv
enter
cld
push
idiv
in
add
hlt
fld
add
add
add
push
idiv
inc
inc
idiv
mov
add
mov
add
repnz
movs
jo
push
push
idiv
mov
add
movs
fld
add
pusha
idiv
push
ins
idiv
js
idiv
fld
add
add
(bad)
idiv
pop
jo
call
idiv
fld
add
add
out
popa
idiv
adc
nop
inc
idiv
add
add
xor
add
xor
add
push
arpl
push
jo
dec
cmp
add
in
add
loop
idiv
test
idiv
jl
idiv
in
add
in
add
into
popa
idiv
sbb
idiv
js
idiv
movs
fadd
add
idiv
cwde
push
add
je
add
je
add
fadd
add
add
add
add
dec
idiv
outs
dec
idiv
dec
idiv
into
dec
idiv
aam
idiv
hlt
dec
idiv
in
idiv
ror
call
dec
idiv
mov
call
dec
idiv
sub
call
idiv
loopne
idiv
ror
call
push
idiv
inc
push
idiv
add
add
nop
push
idiv
cmp
idiv
mov
add
hlt
push
idiv
movs
fild
add
push
idiv
je
add
mov
idiv
mov
idiv
clc
gs
adc
idiv
pusha
idiv
int3
fs
xor
add
and
push
dec
idiv
adc
idiv
pushf
dec
idiv
cmps
dec
idiv
xchg
dec
idiv
xchg
dec
idiv
add
add
cmps
dec
idiv
xor
inc
dec
idiv
loop
idiv
in
dec
idiv
int3
dec
idiv
mov
mov
add
jo
idiv
movs
fiadd
add
idiv
bound
call
push
idiv
hlt
push
idiv
sbb
(bad)
jl
idiv
add
dec
push
idiv
add
dec
push
idiv
into
push
idiv
add
add
fs
idiv
push
push
idiv
push
push
idiv
push
idiv
cwde
push
idiv
test
call
push
idiv
pusha
push
idiv
inc
push
idiv
mov
dec
idiv
into
dec
idiv
ror
jmp
push
idiv
add
idiv
adc
jmp
dec
idiv
push
dec
idiv
adc
idiv
add
inc
idiv
xor
inc
add
add
dec
idiv
js
idiv
cli
push
idiv
enter
lods
pop
idiv
mov
call
push
idiv
out
idiv
xchg
pop
idiv
mov
pop
idiv
xor
inc
idiv
cmp
inc
idiv
repnz
idiv
loopne
idiv
ds
idiv
push
(bad)
idiv
push
idiv
inc
arpl
call
arpl
inc
arpl
inc
add
add
arpl
call
arpl
call
arpl
jmp
arpl
push
idiv
and
xchg
arpl
call
idiv
push
fs
shl
call
arpl
push
arpl
(bad)
jmp
dec
idiv
sub
fcom
dec
idiv
mov
dec
idiv
xchg
dec
idiv
add
add
jb
idiv
je
idiv
pop
dec
idiv
aam
idiv
fadd
push
dec
idiv
enter
stos
dec
idiv
stos
dec
idiv
cs
sbb
idiv
dec
dec
idiv
mov
push
idiv
mov
pop
idiv
mov
jmp
idiv
dec
pop
idiv
aam
idiv
(bad)
dec
idiv
add
call
idiv
add
add
push
dec
idiv
mov
idiv
push
dec
idiv
push
dec
idiv
fs
idiv
(bad)
push
idiv
and
dec
push
idiv
in
idiv
hlt
push
idiv
(bad)
push
idiv
mov
idiv
je
idiv
test
call
idiv
ss
idiv
add
jmp
push
idiv
in
push
idiv
fcom
call
push
idiv
call
inc
add
add
idiv
push
push
idiv
and
idiv
or
idiv
push
push
idiv
xor
jmp
popa
idiv
sbb
jmp
add
add
push
add
xor
add
push
popa
idiv
and
add
cli
(bad)
idiv
xor
add
int3
aad
sub
idiv
cwde
dec
idiv
xor
add
dec
idiv
in
add
push
pop
idiv
hlt
pop
idiv
mov
fld
add
idiv
inc
dec
idiv
xor
(bad)
jle
idiv
pusha
dec
idiv
and
call
dec
idiv
pop
dec
idiv
loopne
idiv
inc
dec
idiv
mov
dec
idiv
scas
dec
idiv
lods
dec
idiv
dec
dec
idiv
je
idiv
add
add
cmp
dec
idiv
cmp
inc
dec
idiv
mov
dec
idiv
dec
dec
idiv
cmp
idiv
ret
(bad)
cld
dec
idiv
enter
int3
inc
idiv
les
jp
idiv
push
inc
idiv
add
call
inc
idiv
adc
inc
idiv
mov
dec
idiv
add
add
(bad)
dec
idiv
xor
idiv
mov
dec
idiv
inc
dec
idiv
out
idiv
xor
call
dec
idiv
mov
dec
idiv
and
add
(bad)
pop
idiv
mov
pop
idiv
and
add
lock
idiv
add
idiv
call
push
idiv
add
push
idiv
xchg
push
idiv
add
add
mov
idiv
xor
push
idiv
dec
push
idiv
jo
idiv
adc
idiv
sub
push
fild
add
pop
idiv
xchg
push
pop
idiv
cmp
push
idiv
mov
pop
idiv
pusha
pop
idiv
out
dec
idiv
add
idiv
xchg
pop
idiv
xor
add
add
add
(bad)
pop
idiv
ficomp
jmp
push
idiv
adc
idiv
add
idiv
repnz
idiv
mov
pop
idiv
jp
idiv
mov
add
xor
cmp
mov
add
sbb
add
mov
pop
inc
pop
mov
pop
(bad)
outs
jns
fisubr
add
add
stos
mov
xchg
ins
dec
scas
push
je
mov
ins
dec
mov
add
xor
ins
mov
pop
jb
jge
imul
mov
jb
test
sub
xor
ins
dec
lods
pop
ins
dec
loopne
add
sbb
test
outs
or
add
add
or
pop
push
std
nop
push
inc
xchg
cmps
pop
ins
sbb
add
xchg
aas
gs
nop
outs
jns
cdq
push
je
mov
js
fstp
add
fs
or
jb
xchg
push
push
mov
inc
add
fnsave
imul
fidiv
add
pop
jae
xchg
outs
gs
xchg
jo
inc
mov
js
fistp
add
mov
push
std
mov
and
fwait
add
mov
inc
stc
mov
add
jae
fsubr
add
lods
popa
popa
pusha
xchg
outs
gs
fsub
add
rcl
xchg
pop
inc
test
add
mov
popa
add
add
mov
rol
pusha
loopne
imul
cmps
add
sahf
fild
xchg
outs
outs
pop
mov
je
(bad)
push
mov
push
inc
cld
mov
pop
outs
cld
rcr
mov
add
mov
cwde
xchg
outs
jb
scas
add
push
fist
add
add
or
inc
popa
pop
scas
xor
mov
dec
mov
dec
inc
mov
jg
stos
mov
je
xchg
pop
ins
mov
(bad)
add
fs
lea
outs
imul
fild
mov
pop
arpl
jno
hlt
ficom
sub
imul
add
add
fs
push
scas
pop
jb
lods
push
gs
pop
add
mov
push
outs
or
test
pop
ins
pop
mov
cmp
scas
pop
popa
inc
mov
cmps
mov
je
mov
popa
je
stos
pop
add
mov
push
outs
cwde
add
add
add
add
aaa
outs
mov
addr16
mov
jno
hlt
fldpi
add
mov
ins
dec
cwde
push
outs
pop
lods
push
push
mov
mov
sbb
cmps
push
inc
cld
fbld
popa
cwde
mov
push
fs
xchg
mov
jno
pop
sahf
bound
lods
add
sbb
add
add
mov
imul
imul
mov
imul
stos
add
daa
loopne
gs
xchg
bound
movs
add
xchg
fidiv
jb
mov
je
mov
gs
mov
fs
pop
add
mov
outs
dec
or
add
push
dec
push
mov
arpl
fbstp
js
movs
push
jb
mov
cmp
mov
mov
pop
gs
cmps
mov
fs
pop
gs
les
imul
push
lea
xor
ins
xchg
mov
pop
gs
add
scas
push
popa
add
add
dec
mov
imul
gs
test
ins
push
mov
add
fidiv
outs
pop
mov
jae
mov
jo
fisttp
jo
lods
push
popa
mov
outs
inc
mov
push
jb
cwde
add
adc
xor
outs
inc
cwde
push
xchg
add
pop
je
add
add
outs
gs
mov
pop
jae
lods
pop
or
outs
xchg
mov
inc
pusha
lods
pop
arpl
ficomp
cmp
jo
inc
movs
push
add
mov
and
imul
cmp
in
push
jb
xchg
pop
jae
mov
inc
add
cwde
ins
add
add
pusha
mov
pop
nop
push
ins
pop
xchg
add
fidiv
outs
dec
mov
dec
nop
push
ins
dec
xchg
add
fbstp
mov
push
dec
test
cmps
add
stos
outs
bound
jae
xchg
push
add
fdivr
outs
sbb
aaa
js
fmul
add
add
add
lahf
jo
and
outs
adc
fs
mov
jae
xlat
jbe
sub
push
jb
mov
jne
test
push
add
aas
jne
test
push
push
push
mov
dec
pushf
push
add
fs
lea
outs
imul
add
add
xchg
push
scas
pop
outs
in
mov
aaa
stos
push
popa
cmp
jo
inc
stos
push
push
mov
jns
es
push
push
or
outs
gs
rol
jmp
fs
std
mov
dec
adc
imul
pop
fs
mov
inc
outs
xchg
lahf
xor
add
add
inc
add
xlat
xor
cmp
gs
leave
add
ds
mov
push
je
fsubr
mov
push
popa
js
xor
mov
push
gs
call
inc
lods
push
jb
fistp
clc
mov
push
xor
mov
jo
mov
je
add
add
pop
arpl
cmps
jno
(bad)
popf
pop
jb
scas
inc
add
xlat
cmp
jb
mov
jae
(bad)
add
mov
xchg
jno
push
push
jb
mov
jae
out
dec
mov
icebp
add
scas
pop
jb
cmps
imul
add
xor
xor
add
add
cmp
inc
cmps
push
jb
fsubr
add
mov
popa
gs
test
push
outs
or
pop
gs
mov
mov
cmp
fs
arpl
push
popa
pop
fidiv
stos
mov
bound
xor
popa
add
aad
ins
cmp
imul
add
add
add
pop
bound
mov
imul
add
mov
jb
mov
xor
jbe
cmps
pop
outs
inc
mov
outs
imul
les
call
mov
je
nop
push
outs
or
dec
jmp
mov
add
mov
add
dec
mov
xor
add
mov
inc
add
mov
cwde
mov
outs
imul
mov
pop
jb
fsubr
add
jno
inc
mov
inc
add
outs
outs
dec
lea
pop
mov
add
add
add
mov
imul
(bad)
xor
jb
mov
add
fst
adc
gs
xchg
push
jae
mov
gs
fcom
add
mov
outs
dec
fmul
inc
cmp
add
pop
outs
mov
add
push
arpl
add
add
std
pop
je
fist
push
dec
add
sbb
pop
jae
fbld
daa
std
pop
fs
jno
add
fistp
out
fs
adc
fistp
or
sub
pop
sub
add
loopne
jae
or
mov
or
dec
fistp
add
or
mov
fst
mov
push
add
fadd
(bad)
imul
or
pop
loopne
add
jb
xor
jno
push
stc
push
push
in
add
sti
push
push
dec
add
sti
das
outs
outs
pop
sub
add
pop
pop
push
adc
faddp
add
add
add
or
pop
outs
sub
add
cmp
aaa
outs
dec
cs
imul
xor
jae
call
fmulp
add
add
daa
add
jge
push
gs
pop
arpl
fst
mov
pop
ins
mov
add
mov
aaa
outs
inc
(bad)
pop
sub
add
add
add
aas
ficom
sbb
pop
popa
pop
or
add
fidiv
jb
imul
stc
add
std
add
fucom
add
add
jae
daa
pop
outs
dec
add
pusha
fnsave
je
(bad)
popa
push
inc
stc
cmp
or
adc
inc
push
fwait
cli
outs
push
and
aam
jo
push
add
add
or
cmp
add
dec
gs
add
inc
ins
inc
adc
ins
xor
inc
jb
jmp
neg
inc
adc
cmp
jmp
gs
or
jb
or
inc
add
xor
pop
adc
clc
aas
gs
adc
xor
inc
outs
push
add
push
adc
add
add
mov
push
jae
xor
xor
jb
stos
neg
adc
js
fsubr
imul
add
mov
push
cld
push
je
sbb
push
gs
fstp
sub
push
outs
or
outs
dec
xor
add
push
add
add
sbb
pop
outs
sbb
gs
mov
(bad)
add
cli
jno
and
add
pop
add
fimul
pop
adc
clc
pop
fs
adc
add
cmp
rcr
add
fbstp
jbe
(bad)
push
inc
xchg
or
inc
fild
mov
gs
pop
jo
push
pop
bound
add
add
xor
in
sub
aaa
push
pop
popa
cmp
imul
fimul
daa
call
adc
bound
jmp
movs
fimul
test
push
inc
xchg
or
rol
sub
pop
gs
std
cmp
je
fcmovbe
add
clc
push
arpl
(bad)
add
outs
xchg
cmp
je
fisubr
add
pop
popa
cwde
std
xor
push
cmp
cwde
repnz
gs
or
push
gs
push
push
push
add
add
push
sbb
js
pop
pop
ins
push
push
add
out
imul
fst
gs
(bad)
push
add
add
mov
jb
arpl
pop
add
ficom
inc
(bad)
arpl
jb
jnp
cmp
inc
mov
add
pop
jo
push
jb
js
outs
je
or
add
or
xchg
imul
loopne
add
add
jo
cmc
push
fs
add
add
outs
outs
push
sub
dec
call
loopne
xor
or
pusha
popa
or
inc
imul
fbstp
gs
pusha
popa
dec
add
pop
std
push
add
or
cwde
add
jb
sti
dec
inc
ja
jle
imul
jo
or
mov
push
outs
mov
add
add
pop
add
loopne
lea
xor
repz
gs
adc
outs
dec
cld
push
dec
hlt
fistp
jo
push
push
ja
std
push
addr16
cs
arpl
adc
add
fbstp
adc
push
add
add
add
ss
punpckhwd
push
add
(bad)
xor
add
xor
jae
adc
pop
add
add
pop
jo
adc
cs
pop
add
xor
repnz
push
cdq
add
ja
outs
imul
lock
jb
jmp
push
pop
ins
sbb
pop
push
in
and
not
outs
inc
add
inc
add
adc
cs
pop
add
add
add
xlat
cmp
adc
outs
add
pop
outs
out
pop
je
out
pop
jae
add
add
adc
xor
add
ins
je
cli
jmp
or
dec
repnz
dec
push
icebp
push
push
and
inc
dec
popa
sbb
mov
fnstsw
jb
cld
push
jae
sub
dec
repnz
add
add
cmp
xor
imul
outs
dec
out
outs
ins
inc
adc
outs
push
fsubr
imul
pop
jbe
push
gs
sbb
adc
mov
daa
add
inc
fld
jge
gs
pop
or
inc
outs
inc
or
dec
sub
add
fadd
dec
or
push
je
adc
mov
add
add
or
cwde
sub
cdq
(bad)
jno
ja
pop
je
add
inc
jb
or
imul
inc
jb
or
dec
or
inc
dec
pop
lock
je
inc
jb
pop
gs
or
popa
pop
lock
popa
push
neg
push
fadd
or
test
cld
pop
ins
add
add
je
pop
add
sti
pop
dec
pop
push
js
fsubr
jbe
push
push
cdq
sti
outs
jns
neg
sbb
and
add
push
inc
nop
cmc
jno
outs
sti
imul
(bad)
dec
mov
outs
gs
call
mov
cmp
fdivr
ss
push
push
pop
or
popa
and
add
inc
(bad)
dec
add
add
pop
sub
push
add
or
dec
gs
sub
add
aad
or
pop
jns
inc
(bad)
fdiv
outs
dec
jmp
pop
out
add
inc
fild
inc
add
dec
fild
imul
pop
ins
mov
push
push
test
addr16
add
data16
inc
add
add
pop
push
xchg
bound
cld
push
gs
fsubr
dec
push
out
fs
out
popa
jne
repz
repnz
outs
sub
sub
jmp
fs
add
out
popa
jne
repz
icebp
push
outs
sti
xlat
inc
jmp
sub
fidiv
inc
mov
(bad)
sbb
add
fcom
add
add
mov
repz
fs
or
dec
daa
pop
ins
mov
fs
cwde
in
pop
jae
fcmovb
add
ss
sbb
ins
mov
outs
push
xchg
std
push
add
lock
ins
inc
or
fs
push
dec
sub
ins
push
fmul
add
hlt
push
push
or
outs
add
imul
add
add
out
push
arpl
repz
inc
xchg
push
je
fdiv
add
in
dec
inc
clc
imul
cld
add
adc
inc
outs
popf
repz
je
cli
pop
imul
adc
addr16
inc
jb
cli
fs
repz
test
popa
gs
imul
(bad)
repnz
je
neg
sti
add
add
add
pop
fadd
sbb
jno
and
pop
inc
push
sti
push
add
inc
outs
daa
sti
fs
push
in
jns
repz
outs
psubq
fadd
or
fs
cmp
outs
inc
neg
xlat
xor
ins
mov
or
ja
outs
gs
repz
and
xor
push
ins
add
add
sbb
dec
jns
dec
push
inc
retf
and
add
cld
outs
outs
mov
cmp
add
std
outs
outs
dec
or
sbb
jno
cmp
fbld
in
icebp
fs
repnz
je
repnz
outs
sbb
fs
mov
data16
icebp
fs
icebp
push
je
in
jae
or
add
add
push
add
(bad)
jo
icebp
dec
gs
or
jae
sbb
add
rsqrtps
jmp
gs
or
jae
sbb
add
sti
outs
outs
mov
inc
jne
or
dec
test
pop
outs
bound
add
dec
loopne
je
adc
push
ins
dec
inc
jmp
in
or
add
add
and
push
pop
add
add
and
cmp
jmp
add
jmp
add
pop
cmp
or
dec
repnz
add
popa
mov
out
gs
add
pusha
popa
js
pop
outs
and
push
dec
jnp
push
push
jae
sbb
add
sub
xor
ins
add
add
cdq
pop
pop
jb
out
outs
cmp
in
gs
idiv
sub
fs
cmp
push
jb
push
repnz
out
inc
add
fld
push
sub
inc
popa
mov
fld
imul
cmp
xor
add
stos
jmp
inc
or
ins
push
call
push
dec
add
add
inc
repnz
push
xor
push
push
jne
cmp
push
fnsave
popa
test
push
jb
add
cmp
adc
movs
add
add
out
inc
jb
lock
xor
neg
inc
out
imul
js
loopne
jmp
icebp
imul
xor
cmc
repz
imul
and
sbb
push
outs
outs
adc
push
outs
dec
clc
push
add
inc
jb
in
fs
movs
adc
inc
neg
push
jecxz
inc
push
lock
ins
mov
or
xchg
add
sbb
inc
jb
in
fs
adc
mov
pop
outs
mov
pop
data16
outs
outs
inc
pop
pop
outs
dec
cmc
js
add
add
hlt
fcomi
jmp
out
imul
xor
cmc
repz
imul
add
out
gs
adc
push
inc
mov
in
add
fs
xor
clc
pop
push
dec
not
inc
hlt
inc
outs
mov
fild
mov
bndstx
add
mov
inc
jb
jmp
push
add
add
mov
outs
jns
add
xchg
add
xlat
fiadd
jge
fs
xchg
xor
jb
test
gs
in
imul
pop
dec
add
adc
sbb
inc
add
(bad)
outs
je
(bad)
fs
add
lock
outs
sbb
inc
gs
out
xor
add
add
inc
gs
out
pop
dec
call
dec
pop
pop
outs
cwde
std
js
xor
push
add
outs
je
neg
mov
outs
xchg
add
loopne
inc
jb
jmp
xchg
lock
add
scas
xor
dec
or
add
outs
ins
inc
jmp
dec
adc
push
std
pop
gs
add
add
add
xor
cmp
std
outs
ins
adc
imul
clc
pop
addr16
stos
add
std
pop
gs
inc
jb
in
pop
arpl
push
gs
in
pop
outs
mov
(bad)
outs
ins
cmp
or
push
(bad)
jno
and
sub
or
xchg
std
pop
mov
jns
mov
imul
add
add
fadd
add
jecxz
addr16
jmp
sbb
xchg
add
push
jo
jmp
ss
repnz
sbb
outs
je
lock
cmc
inc
add
fmul
std
call
push
jo
neg
fmul
push
push
in
pop
outs
dec
fcom
add
or
add
add
dec
not
xor
loope
sbb
popa
xchg
or
(bad)
not
xor
pop
add
fs
je
pop
xchg
fbld
cwde
repz
dec
in
popa
inc
in
add
aam
ins
inc
sbb
inc
inc
add
fild
addps
pop
jne
fdiv
add
or
push
cmc
push
add
ficom
cwde
adc
add
add
out
add
retf
gs
out
push
imul
inc
imul
outs
gs
fist
cmps
hlt
xor
popa
add
fdiv
fs
push
inc
jge
push
dec
test
inc
hlt
fsubrp
add
repnz
ins
dec
sbb
add
fidiv
add
sbb
add
jo
fsubr
add
cli
fs
sbb
outs
je
call
xor
out
xor
push
movs
ficom
add
sti
fs
sub
inc
push
fs
add
cmc
push
inc
mov
not
lahf
fnsave
jb
stc
aaa
outs
jp
outs
outs
mov
or
(bad)
lock
jae
add
add
mov
imul
inc
sub
jb
out
pop
gs
je
cmc
pop
addr16
pop
add
sub
inc
jne
out
imul
push
outs
push
icebp
push
outs
push
stc
inc
outs
stc
icebp
fs
fsubr
add
clc
fs
adc
push
ins
or
add
push
(bad)
jb
repnz
push
ins
in
push
inc
fld
add
add
mov
jmp
outs
dec
or
or
add
fidiv
fs
icebp
push
dec
test
push
ins
cdq
push
add
mov
jmp
jbe
mov
pop
je
sti
push
ins
aaa
sti
popa
je
cmc
pop
inc
push
cld
push
jo
test
mul
fcom
or
gs
neg
and
add
add
add
daa
xlat
xor
outs
pop
cmc
pop
gs
add
cmp
xor
outs
xchg
pop
gs
gs
add
sbb
push
push
jae
fdivr
inc
mov
out
pop
gs
jle
pop
out
je
sbb
xchg
cmc
pop
gs
mov
stos
cld
fs
add
add
arpl
jno
inc
std
cmp
je
or
add
inc
jb
in
push
inc
push
bnd
add
inc
add
xlat
inc
jb
stc
fs
lock
gs
xlat
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
xor
add
and
add
and
add
pusha
mov
add
add
add
add
gs
jmp
mov
add
xor
ss
fadd
add
cmc
jo
push
out
push
push
or
stos
push
xor
test
and
fbld
push
bound
sbb
hlt
repz
jne
sti
outs
sub
hlt
pop
arpl
div
dec
mov
pop
outs
dec
jmp
ja
add
add
push
sub
adc
add
push
dec
imul
push
inc
or
push
imul
repz
add
add
add
rcl
pop
ins
push
std
outs
jb
into
inc
inc
hlt
fild
add
call
lock
ss
aaa
cmp
mov
add
loop
xor
fnstenv
add
add
jecxz
pop
mov
fild
add
add
je
add
fild
add
add
add
add
add
add
xor
add
xor
add
and
repz
add
xor
add
xor
add
and
add
fild
add
fiadd
add
fiadd
add
fiadd
add
add
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
mov
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
add
add
je
add
fld
add
add
add
add
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
add
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
loopne
add
add
imul
shr
mov
add
imul
shr
shr
add
imul
xchg
retf
ins
jg
int3
ins
jg
mov
add
in
add
add
add
neg
add
adc
add
cmp
push
sub
add
fld
add
fld
add
fld
add
fld
add
add
popa
fld
add
add
jge
add
jnp
add
inc
fld
add
add
add
sub
fld
add
fld
add
add
add
fld
add
fld
add
add
and
add
cmp
add
icebp
fadd
add
fadd
add
fld
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fild
add
loopne
add
add
add
add
mov
add
jne
add
cmps
fadd
add
add
ja
add
popa
fadd
add
fadd
add
add
aas
fadd
add
fadd
add
fadd
add
add
push
fadd
add
fild
add
fild
add
fild
add
add
fild
add
add
add
fild
add
fild
add
fild
add
fiadd
add
add
xchg
fild
add
add
xchg
fild
add
add
mov
add
pop
fild
add
fild
add
fiadd
add
fiadd
add
fild
add
fiadd
add
fild
add
add
add
fld
add
fiadd
add
fild
add
fiadd
add
mov
cmp
in
add
add
push
pop
dec
loopne
gs
pop
outs
add
jb
sbb
inc
add
jp
mov
cdq
inc
hlt
inc
fiadd
add
add
add
fiadd
add
add
add
add
add
popa
in
push
pusha
in
(bad)
aas
leave
xor
xor
add
xor
add
xor
fiadd
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
fld
add
add
add
add
je
add
jne
add
fld
add
add
add
add
fld
add
add
xor
add
xor
fld
add
add
xor
fld
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
add
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
cmp
(bad)
add
call
fild
add
add
in
cmp
movs
fild
add
fild
add
fild
add
add
add
add
clc
cmp
add
add
fild
add
cmp
pop
fild
add
push
cmp
psubusb
add
push
cmp
and
add
mov
cmp
xor
add
nop
push
cmp
jecxz
add
fmul
cmp
add
add
les
cmp
adc
xor
add
sbb
cmp
cld
xlat
add
mov
add
add
xlat
add
enter
(bad)
xlat
add
cwde
cmp
add
lahf
add
fadd
add
cmp
repz
jmp
lods
repz
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
add
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
add
add
xor
adc
xor
add
xor
add
and
add
and
add
xor
add
xor
add
hlt
fadd
add
fsub
and
adc
add
adc
adc
adc
adc
adc
add
adc
add
adc
mov
add
mov
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
push
bound
(bad)
pop
push
rcr
add
add
mov
fisub
fwait
(bad)
imul
add
hlt
fidiv
inc
daa
sbb
inc
sub
cmp
in
dec
add
inc
push
imul
inc
push
sti
test
mov
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
and
adc
xor
add
and
add
and
add
xor
add
xor
add
in
add
hlt
fadd
add
add
add
fsub
and
and
adc
and
adc
and
add
and
add
and
adc
and
mov
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
popa
arpl
mov
pop
outs
test
gs
mov
add
hlt
cdq
inc
inc
sub
dec
dec
add
add
and
push
push
sbb
pop
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
add
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
aaa
add
loopne
add
push
push
fld
add
add
fld
add
add
add
add
jnp
cld
fld
add
cld
xor
add
(bad)
add
in
fldenv
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
hlt
jmp
fadd
add
hlt
push
fadd
add
add
movs
js
mov
mov
add
movs
fadd
add
add
mov
add
mov
add
and
fadd
add
fadd
add
jp
mov
int3
jns
add
add
add
add
xor
add
movs
and
add
je
xchg
(bad)
xor
add
jne
add
jne
dec
fcmovbe
fisttp
mov
add
add
add
in
add
hlt
fild
add
fild
add
int3
faddp
and
inc
mov
add
jb
in
jmp
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
in
add
in
add
je
aaa
add
add
movs
fiadd
add
add
add
movs
fiadd
add
add
je
add
fiadd
add
add
aaa
add
add
add
add
fiadd
add
add
and
add
xor
add
mov
aaa
add
add
and
add
mov
inc
aaa
add
aaa
add
aaa
add
fld
add
aaa
add
add
add
fld
add
xlat
add
mov
rol
in
je
add
jbe
add
aaa
add
aaa
add
aaa
add
jae
add
aaa
add
jb
add
jae
add
aaa
add
jae
add
add
add
aaa
add
aaa
add
add
jb
add
aaa
add
jno
add
jno
add
jno
add
jno
add
jno
add
outs
aaa
add
outs
aaa
add
outs
aaa
add
jb
add
outs
aaa
add
aaa
add
add
outs
aaa
add
outs
aaa
add
outs
aaa
add
add
add
outs
aaa
add
aaa
add
outs
aaa
add
aaa
add
fadd
add
add
hlt
adc
add
fild
add
fild
add
fild
add
fild
add
ret
ds
ret
ds
ret
add
ret
add
add
add
ret
add
add
add
fild
add
xchg
sbb
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
add
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
(bad)
add
xlat
inc
cmps
xlat
inc
cmps
xlat
inc
ja
add
ja
add
add
add
fld
add
add
add
add
aaa
add
add
pop
jb
add
add
or
add
fadd
add
add
fld
add
data16
add
fld
add
aaa
add
fadd
add
aaa
add
fld
add
outs
aaa
add
fadd
add
outs
aaa
add
fadd
add
outs
aaa
add
fadd
add
add
add
imul
add
imul
add
add
mov
add
add
add
shr
add
add
mov
fadd
add
imul
add
jo
add
imul
add
imul
add
imul
add
fild
add
add
fild
add
add
mov
add
loopne
add
add
push
dec
aaa
add
fild
add
dec
aaa
add
fild
add
add
movs
fcomip
jg
fild
add
push
adc
call
adc
jg
fild
add
add
add
add
add
xor
add
add
and
fild
xor
add
clc
add
je
repz
fiadd
add
push
in
jmp
fiadd
add
add
in
add
in
add
mov
add
mov
add
movs
fiadd
add
add
mov
add
add
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
fiadd
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
add
push
sub
in
jmp
fld
add
in
jmp
add
mov
add
xchg
adc
push
fld
add
loopne
add
add
fadd
add
fld
add
fadd
add
fiadd
add
add
sbb
in
push
fld
add
add
add
fld
add
add
fadd
add
fld
add
fld
add
fild
add
fild
add
fild
add
fild
add
add
in
add
mov
add
mov
in
(bad)
(bad)
add
mov
fild
add
loopne
add
fadd
add
add
add
add
add
push
fadd
add
or
call
or
jmp
add
add
add
fadd
add
add
and
idiv
xor
add
xor
add
and
cld
aas
and
add
hlt
fild
add
add
in
add
and
std
aas
hlt
fild
add
fild
add
adc
inc
mov
add
mov
add
cmp
inc
movs
fild
add
or
fild
add
daa
inc
je
add
es
adc
mov
sub
hlt
stos
out
and
pop
add
(bad)
mov
lea
dec
xchg
inc
add
(bad)
movs
pusha
stos
inc
inc
mov
add
or
pop
ins
push
rol
and
mov
pop
mov
inc
nop
pop
push
test
jle
ins
data16
jmp
jbe
inc
push
add
or
inc
mov
cmp
jecxz
and
inc
fild
fstp
ror
ins
mov
xchg
bound
ins
jmp
add
jge
or
pop
jne
call
cmps
cmps
ret
mov
inc
(bad)
pop
push
sbb
xchg
pop
repz
xchg
lock
and
pop
outs
and
pop
pop
add
addr16
jmp
sbb
enter
outs
add
cwde
xchg
les
add
and
jne
fld
add
mov
add
mov
aas
test
push
xlat
xchg
jmp
sahf
jge
fild
pusha
out
daa
xor
gs
dec
mov
(bad)
test
xor
aas
je
movs
imul
lds
mov
aad
cmps
or
into
push
add
jo
aas
add
add
add
xchg
imul
push
cmp
movs
mov
aas
bound
mov
aam
aas
enter
inc
inc
cmp
adc
mov
rcl
jl
inc
dec
aas
sbb
sbb
test
add
aas
sbb
xchg
jmp
jae
sub
xchg
je
in
sub
add
add
sub
xchg
add
jb
gs
cmp
outs
jg
inc
adc
adc
cmp
test
jo
dec
or
dec
fninit
sub
add
push
ss
stos
dec
mov
es
cmp
mov
rol
es
frstor
cmp
pop
lods
rcr
xchg
or
mov
add
add
fwait
lods
mov
add
push
xlat
sub
xchg
shr
jecxz
mul
out
ss
mov
push
and
bound
bound
pop
jl
jmp
lahf
mov
cmp
or
aaa
add
fiadd
add
shl
in
lods
outs
push
jg
gs
repz
add
add
pop
aaa
add
xor
push
pop
gs
mov
adc
add
mov
fiadd
add
shl
lods
dec
pop
gs
mov
ins
inc
jnp
push
dec
mov
je
add
jl
aaa
add
add
push
mov
pop
imul
repz
add
add
add
and
pop
gs
jl
and
inc
in
add
in
pop
aaa
add
xor
lea
jns
inc
hlt
xlat
add
fcomp
add
xor
mov
pusha
pop
push
mov
push
js
inc
cdq
rcl
jle
pop
cwde
mov
mov
add
fs
inc
aas
dec
jle
ins
xchg
jl
je
mov
inc
fs
inc
inc
xchg
mov
mov
add
lods
fs
add
fadd
add
lds
push
add
outs
dec
movs
gs
inc
cwde
aaa
push
ret
lock
ins
add
jno
call
cwde
xor
mov
in
add
fcomp
add
add
add
add
lds
push
push
test
push
pop
push
ja
gs
movs
pushf
repz
add
inc
lds
push
push
cdq
pop
outs
cwde
ja
outs
cdq
xchg
mov
xchg
jnp
jne
jnp
jae
scas
xor
fild
add
aaa
add
fild
add
ret
xor
and
mov
add
add
inc
cwde
jo
pop
cwde
xor
in
pop
aaa
add
xor
jns
pop
adc
cwde
jo
or
aaa
add
add
ret
xor
mov
imul
jno
xchg
jg
inc
movs
fild
add
add
add
(bad)
xor
jl
mov
xchg
add
xchg
fs
repz
add
and
add
sub
aaa
add
fiadd
add
test
pop
in
add
in
pop
aaa
add
xor
jg
pop
adc
jb
mov
gs
addr16
repz
cmp
pop
xor
add
add
jb
add
jae
add
add
add
int3
or
add
add
(bad)
fiadd
add
add
and
add
or
cmp
xor
add
daa
fiadd
add
fiadd
add
aaa
add
mov
aaa
add
addr16
repnz
jp
xchg
dec
mov
imul
xchg
or
xor
add
add
rcr
stc
repnz
gs
movs
imul
ja
xor
lods
pop
fs
and
sbb
cmp
add
cs
and
inc
scas
jno
dec
lods
cs
mov
gs
mov
cmp
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
add
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
loopne
add
fild
add
fild
add
aaa
add
add
add
mov
add
movs
fild
add
add
add
add
imul
add
add
add
add
add
add
add
fild
add
add
and
add
and
add
xor
add
xor
add
and
add
sub
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
add
add
movs
fiadd
add
add
stos
fiadd
add
add
je
add
je
add
fiadd
add
add
add
je
add
fiadd
add
add
add
xor
add
and
add
sub
add
xor
add
xor
add
and
add
add
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
add
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
add
add
je
aaa
add
pop
cmp
je
add
ret
push
push
mov
push
pop
pop
scas
jno
inc
pushf
jo
dec
pushf
xor
fadd
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
add
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
add
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
add
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
mov
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
sub
add
and
add
add
add
neg
add
int3
fadd
add
add
xor
add
dec
loopne
and
add
in
add
mov
fadd
add
loopne
xor
add
aam
add
je
add
push
fdiv
call
add
sub
add
add
add
fadd
add
fadd
add
repz
loopne
xor
add
add
sub
add
and
repz
fstp
add
cld
fild
add
fild
add
fild
add
fild
add
fcomip
(bad)
in
fild
add
fadd
add
add
test
add
movs
fcomip
call
fadd
add
add
add
add
js
add
je
repz
fld
add
add
add
add
fs
jmp
fadd
add
(bad)
fdiv
add
xor
add
adc
repnz
mov
fild
add
fiadd
add
add
fcom
add
add
add
hlt
fiadd
add
xchg
cmc
call
fiadd
add
rol
add
cmc
call
rol
add
add
push
fiadd
add
add
jne
and
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
add
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
add
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
add
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
add
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
imul
add
and
sbb
and
ret
xchg
in
jno
jmp
pop
stos
fs
fld
sbb
fld
sbb
fld
adc
fld
or
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
je
add
fld
add
add
add
add
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
add
fadd
add
jecxz
and
ins
lock
cwde
rol
and
call
mov
dec
sbb
jecxz
in
(bad)
leave
je
add
je
add
fadd
xor
and
fadd
adc
fadd
pop
and
add
and
add
xor
add
xor
add
add
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
icebp
push
push
sbb
pop
xchg
sbb
mov
sbb
jmp
stos
loop
mov
fsubr
xchg
mov
xchg
ins
inc
lods
in
mov
jecxz
ins
lods
jecxz
pop
sbb
dec
xlat
inc
(bad)
aam
neg
cmp
add
movs
fiadd
add
add
add
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fcomp
add
add
fsubr
push
test
out
adc
out
add
in
repnz
jmp
repnz
sar
cmp
mov
inc
cmp
or
in
jl
in
test
fdivr
pop
(bad)
fdivr
in
rcl
jmp
gs
shl
inc
xor
add
xor
add
add
add
and
add
and
add
fld
push
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
and
fsub
add
add
jmp
icebp
(bad)
jmp
shl
test
jmp
out
jmp
in
jmp
mov
jmp
jae
jmp
call
jmp
mov
dec
ret
test
inc
fdivrp
jno
lods
inc
cmp
jno
ret
jmp
aad
in
add
add
add
add
movs
fild
cmp
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
mov
fnstsw
mov
test
loop
test
std
mov
add
add
clc
in
ins
sti
jmp
add
(bad)
jns
jmp
push
std
jmp
data16
jmp
xor
(bad)
jmp
inc
bound
call
mov
sub
call
shl
jle
in
test
(bad)
(bad)
mov
inc
dec
ins
(bad)
fbstp
add
loope
aam
fiadd
aas
xor
add
and
add
and
add
fiadd
and
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
jecxz
cmp
out
(bad)
std
jmp
and
jmp
add
add
inc
clc
stc
jmp
clc
stc
jmp
clc
stc
(bad)
out
idiv
(bad)
out
imul
(bad)
std
stc
jmp
stc
jmp
clc
jmp
sti
jmp
mov
jmp
xchg
push
mov
mov
movs
(bad)
fnstcw
call
cld
in
cmp
inc
test
(bad)
jns
loopne
add
add
into
adc
call
out
popa
mov
jmp
fadd
cmp
add
movs
fadd
xor
fadd
xor
add
movs
fadd
push
movs
fadd
add
add
add
add
add
add
add
add
add
add
rol
out
mov
stc
inc
add
add
psubd
movs
psubd
mov
psubd
jno
stc
jmp
stc
(bad)
jg
jmp
cld
jmp
por
imul
jmp
dec
mov
push
add
call
sti
jmp
cmp
loop
add
add
dec
mov
dec
out
(bad)
fmul
call
jmp
ss
add
fild
xor
add
and
add
fild
sub
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
push
(bad)
out
(bad)
adc
jmp
ret
es
jmp
adc
push
adc
push
psubd
loope
stc
inc
std
stc
(bad)
(bad)
stc
stc
(bad)
out
stc
jmp
push
jmp
jmp
jmp
clc
jmp
ins
pop
mov
inc
add
dec
dec
test
call
add
add
mov
dec
(bad)
(bad)
div
inc
and
call
jmp
(bad)
in
add
mov
add
mov
add
movs
fld
sub
add
mov
add
movs
fld
sbb
add
je
add
fld
add
add
add
add
add
add
add
add
add
shl
stc
jmp
adc
jmp
adc
push
adc
jmp
cli
inc
or
cli
jmp
jmp
pop
push
jmp
pop
sti
jmp
stc
jmp
in
dec
mov
jmp
add
inc
add
add
cli
jmp
xor
(bad)
js
loop
push
test
dec
adc
(bad)
(bad)
out
jecxz
(bad)
fadd
sub
fadd
sub
add
and
add
xor
add
fadd
sbb
add
and
add
hlt
fild
or
fild
push
in
add
in
add
hlt
fild
add
add
add
fild
add
fild
add
fild
add
out
xchg
adc
jmp
shr
sub
stc
(bad)
cmp
stc
jmp
pop
cli
jmp
pop
cli
inc
pop
cli
jmp
push
cli
push
or
inc
or
(bad)
fisttp
cli
(bad)
fimul
jmp
lods
sti
jmp
pop
mov
jmp
add
add
aas
mov
jns
call
cld
jmp
je
jmp
jns
loop
push
mov
dec
and
call
out
arpl
add
mov
add
movs
fiadd
sbb
fiadd
sbb
add
movs
fiadd
adc
add
je
add
fiadd
add
add
add
add
add
add
add
add
add
xchg
shl
xchg
adc
jmp
add
call
add
(bad)
mov
push
stc
jmp
stc
push
cli
push
push
cli
inc
cli
jmp
cli
call
cli
jmp
pop
jmp
sub
in
inc
add
add
push
enter
mov
pop
add
call
mov
jmp
idiv
jmp
jp
loop
inc
stos
fdivrp
lock
out
ret
pop
in
push
or
push
add
xor
add
fld
sbb
add
xor
add
xor
add
and
add
hlt
fadd
push
add
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
out
inc
stos
out
jmp
std
out
call
out
call
clc
(bad)
cmp
clc
(bad)
jmp
mov
clc
push
mov
jmp
mov
inc
mov
jmp
mov
jmp
mov
inc
add
add
mov
(bad)
mov
cmp
call
dec
xchg
dec
jmp
or
inc
fdivrp
jb
out
ret
sbb
push
out
xor
jmp
sbb
add
movs
fild
adc
add
mov
add
movs
fild
push
add
add
movs
fild
add
fild
add
add
add
add
add
add
add
add
add
mov
out
(bad)
lods
out
jmp
mov
call
mov
(bad)
mov
mov
call
clc
(bad)
js
clc
push
clc
jmp
stc
jmp
stc
inc
add
add
stc
jmp
stc
push
mov
jmp
mov
push
loop
call
fcos
inc
cmp
call
mov
(bad)
stc
mov
(bad)
jge
repnz
fdivrp
sti
mov
stc
(bad)
fld
out
mov
loopne
fiadd
adc
add
xor
add
and
add
xor
add
add
add
xor
add
fiadd
add
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
out
inc
lods
out
jmp
cld
out
call
mov
call
mov
jmp
mov
jmp
mov
(bad)
(bad)
clc
(bad)
stc
mov
inc
add
add
mov
jmp
mov
push
mov
push
mov
jmp
repz
jmp
or
jmp
mov
jmp
or
jmp
jmp
icebp
call
out
xor
fadd
or
mov
add
movs
fadd
push
add
add
movs
fadd
add
fadd
add
add
movs
fadd
add
add
add
add
add
add
add
add
add
add
lea
out
jmp
stos
out
push
stos
out
jmp
lods
out
call
inc
add
add
clc
(bad)
jp
clc
jmp
clc
call
clc
push
mov
push
mov
jmp
stc
jmp
stc
call
in
test
call
and
call
jmp
pslld
jmp
(bad)
fdivr
jmp
or
add
xor
add
add
add
xor
add
fild
add
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
in
dec
test
jmp
add
jmp
mov
push
mov
push
mov
push
mov
inc
add
add
mov
(bad)
fidiv
clc
dec
clc
(bad)
fidiv
push
mov
jmp
mov
call
adc
cdq
inc
in
call
mov
jmp
or
jmp
call
jmp
rcr
add
add
add
in
add
fld
add
add
movs
fld
add
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
in
retf
lods
out
push
scas
out
call
scas
out
inc
add
add
scas
out
jmp
out
call
out
dec
mov
call
call
clc
(bad)
cmp
clc
jmp
clc
jmp
clc
call
cmc
mov
push
cld
mov
adc
jmp
mov
stc
jmp
mov
jmp
push
or
(bad)
call
add
add
xchg
or
fadd
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
in
pop
test
push
add
add
out
call
out
inc
push
mov
jmp
mov
call
mov
call
mov
(bad)
fidiv
clc
(bad)
mov
lods
clc
(bad)
jmp
scas
clc
(bad)
mov
adc
dec
inc
xchg
mov
jl
xchg
adc
jmp
mov
stc
(bad)
jp
stc
inc
add
add
repnz
(bad)
hlt
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
ret
mov
inc
add
add
movs
out
push
cmps
out
call
cmps
out
inc
cmps
out
inc
mov
call
call
out
call
mov
call
out
call
out
jmp
out
jmp
jmp
clc
jmp
clc
(bad)
aas
pop
(bad)
inc
repz
jmp
cli
xchg
dec
sti
mov
cdq
adc
jmp
mov
push
mov
inc
add
add
mov
dec
or
(bad)
call
fld
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
add
in
pop
stos
out
push
mov
call
out
dec
out
inc
out
inc
out
call
cmps
out
call
mov
call
mov
jmp
mov
push
mov
(bad)
out
mov
(bad)
out
mov
(bad)
fdiv
out
(bad)
fucomip
stos
(bad)
(bad)
test
xlat
dec
jge
stos
xor
jl
add
add
mov
stc
jmp
jmp
cli
call
scas
icebp
jmp
loop
hlt
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
add
add
(bad)
std
in
loopne
out
push
pxor
leave
pxor
enter
(bad)
pxor
push
pxor
push
pxor
test
out
push
lock
lock
lock
lock
lock
lock
lods
inc
imul
mov
and
cmp
add
add
ret
xchg
and
in
in
cli
(bad)
fld
cli
(bad)
cmp
out
jmp
lods
icebp
(bad)
jmp
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
add
add
fld
add
fld
add
fld
add
fld
add
in
pusha
or
push
(bad)
out
call
out
dec
out
dec
out
dec
out
(bad)
fmul
out
inc
or
lock
(bad)
out
push
(bad)
out
(bad)
out
add
(bad)
mov
pop
pop
(bad)
jge
cmp
add
add
popa
pop
push
jmp
mov
jl
dec
jmp
add
call
cli
inc
adc
jmp
icebp
jmp
lock
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
add
add
fadd
add
add
add
add
add
add
add
mov
adc
push
adc
dec
adc
dec
adc
dec
adc
call
out
dec
out
inc
or
call
cli
out
push
out
jmp
out
(bad)
cmp
aam
add
add
sub
dec
cmp
call
into
enter
cwde
call
xchg
push
das
cmp
xor
clc
clc
call
sti
out
inc
out
jmp
lods
icebp
(bad)
jmp
icebp
push
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
add
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
out
arpl
(bad)
cmp
out
dec
dec
out
(bad)
cmp
out
dec
out
(bad)
fisttp
out
dec
or
call
pxor
test
out
inc
add
add
scas
sar
div
jmp
jnp
lds
(bad)
fcom
xchg
jmp
dec
(bad)
mov
idiv
call
out
push
lods
lock
call
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
add
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
mov
or
(bad)
mov
pmaxsw
into
or
(bad)
mov
pmaxsw
dec
adc
dec
out
dec
push
out
call
add
add
pxor
test
out
jmp
jecxz
mov
push
lods
jmp
xchg
(bad)
aas
gs
outs
iret
mov
jmp
(bad)
jmp
clc
dec
cmc
out
dec
pop
out
(bad)
jmp
push
add
add
add
add
xor
add
and
add
and
add
add
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
in
push
or
(bad)
cmp
out
dec
out
jmp
or
(bad)
aas
or
(bad)
ds
out
dec
or
out
dec
add
add
or
out
dec
pxor
jmp
(bad)
(bad)
inc
(bad)
call
mov
jmp
lds
(bad)
mov
repz
inc
lock
(bad)
out
(bad)
jl
lock
in
hlt
fiadd
add
fiadd
add
fiadd
add
add
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
mov
adc
(bad)
mov
adc
jmp
or
inc
adc
(bad)
mov
adc
inc
add
add
out
call
or
call
or
dec
push
out
jmp
in
jmp
adc
(bad)
jg
lahf
push
fwait
call
sub
(bad)
fcomip
out
(bad)
cmp
out
(bad)
cmp
lock
(bad)
in
je
add
fld
add
add
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
in
push
or
(bad)
cmp
out
dec
out
jmp
or
inc
out
inc
add
add
out
dec
or
dec
or
call
or
dec
out
dec
push
out
jmp
icebp
in
call
call
sti
adc
dec
lods
mov
fs
xor
jmp
out
(bad)
cmp
out
(bad)
mov
lods
lock
in
hlt
fild
add
add
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
mov
or
(bad)
mov
or
inc
add
add
or
inc
or
inc
or
call
out
inc
in
call
or
dec
or
(bad)
jl
out
dec
repnz
jmp
lods
jmp
popf
(bad)
dec
sar
in
dec
push
hlt
clc
jmp
icebp
out
push
or
inc
std
in
jmp
test
add
fsubrp
jmp
je
add
fiadd
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
in
pop
or
inc
add
add
imul
call
in
inc
inc
in
inc
in
call
std
in
inc
in
jmp
std
in
dec
or
(bad)
jge
out
(bad)
jl
out
call
adc
inc
cld
xlat
inc
lock
(bad)
sti
sar
data16
mov
out
jmp
out
jmp
or
inc
add
add
add
jmp
lock
jmp
hlt
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
add
add
mov
in
fscale
in
(bad)
mov
or
inc
std
in
call
std
in
inc
std
in
call
in
inc
out
jmp
sti
in
call
sti
in
(bad)
jle
out
(bad)
jge
out
dec
sar
rol
cmps
call
add
call
sbb
xor
out
inc
add
add
icebp
out
jmp
cmc
in
push
xchg
lock
(bad)
jmp
fild
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
add
fiadd
add
in
pop
cli
in
(bad)
cmp
out
inc
inc
in
call
stc
in
call
stc
in
call
stc
in
inc
in
jmp
cli
in
call
or
(bad)
jg
out
(bad)
jle
out
dec
sti
out
into
sahf
test
pop
repnz
or
aad
add
add
pusha
jl
inc
icebp
out
call
out
jmp
imul
(bad)
(bad)
in
push
out
pusha
in
push
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
add
in
fdecstp
in
(bad)
mov
imul
inc
imul
call
imul
call
imul
inc
inc
jmp
loop
call
jecxz
inc
jecxz
dec
out
out
push
mov
pop
mov
add
add
out
inc
mov
inc
out
call
out
out
call
call
call
push
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
add
add
fild
add
fild
add
fild
add
fild
add
fild
add
in
pop
in
(bad)
cmp
out
inc
inc
in
call
loope
call
loope
inc
in
inc
in
call
in
call
jecxz
inc
in
call
out
in
inc
add
add
mov
push
bound
fst
xchg
lds
call
out
call
call
in
(bad)
jp
call
push
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
add
add
je
add
fiadd
add
add
add
add
add
add
add
mov
in
fabs
in
(bad)
mov
loope
inc
in
call
in
call
in
inc
in
inc
in
call
jecxz
inc
in
inc
out
in
inc
add
add
or
jmp
cwde
jmp
inc
outs
arpl
dec
ret
aam
mov
shl
out
nop
in
push
sti
in
dec
out
(bad)
sti
push
call
push
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
add
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
in
pop
out
in
(bad)
cmp
out
inc
inc
in
call
in
in
call
in
in
inc
in
inc
in
call
in
in
inc
in
inc
add
add
loop
call
call
iret
push
xchg
enter
dec
dec
pop
cmp
mov
lock
out
jmp
jmp
call
push
fild
add
fild
add
fild
add
add
movs
fild
add
add
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
mov
in
fld1
in
(bad)
mov
call
in
call
jmp
in
inc
in
inc
in
call
call
add
test
in
inc
jmp
cmp
jmp
out
dec
pop
outs
call
cmps
call
lds
fdivr
jmp
add
push
cld
in
loop
out
xchg
je
add
fiadd
add
add
add
xor
add
and
add
add
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
in
pop
out
(bad)
cmp
out
inc
in
inc
in
call
out
call
out
inc
in
inc
in
inc
add
add
call
in
inc
jmp
out
inc
in
out
inc
lock
jmp
cmc
jmp
outs
push
mov
call
push
ficom
jmp
icebp
clc
inc
jb
out
pmuludq
add
hlt
fadd
add
fadd
add
fadd
add
add
mov
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
mov
in
fsubr
in
dec
cmc
in
inc
in
in
inc
in
in
call
in
in
call
in
in
inc
add
add
in
(bad)
cmp
out
call
cmc
clc
dec
repz
pop
mul
call
sti
xchg
cli
jmp
(bad)
repz
icebp
stc
jno
jmp
sub
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
jmp
push
jmp
dec
jmp
(bad)
cmp
add
add
jmp
std
in
cmp
jmp
xchg
repnz
lock
xchg
(bad)
lock
push
repz
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
add
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
mov
lock
lods
icebp
jmp
add
add
leave
out
jmp
hlt
stc
jle
cmc
clc
inc
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
add
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
add
shr
push
shl
push
shr
call
shl
inc
shr
call
shl
call
shr
call
iret
repz
shr
push
shl
push
shr
pop
rcl
repz
rcl
psrlq
repz
iret
repz
std
repz
repz
add
xchg
shl
call
repz
add
adc
repz
fadd
add
iret
repz
fadd
add
iret
repz
fadd
add
iret
repz
fadd
add
shl
push
repz
repz
repz
repz
add
int3
repz
pop
ror
repz
pop
ror
repz
add
add
pop
xchg
int3
repz
add
jae
repz
add
xchg
int3
repz
add
xchg
int3
repz
add
adc
repz
fild
pop
repz
repz
fild
pop
ror
repz
fild
pop
ror
repz
fild
pop
adc
repz
repz
repz
add
adc
repz
repz
pop
repz
fild
pop
ror
repz
pop
ror
repz
pop
xchg
retf
xor
add
jae
repz
add
xchg
retf
xor
add
xchg
retf
and
add
adc
repz
fimul
jmp
loope
call
leave
repz
add
add
leave
in
call
leave
repz
leave
in
call
retf
or
add
adc
add
fild
add
fild
add
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
add
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
je
add
fadd
add
aas
mov
jae
dec
jne
fadd
sbb
push
xor
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
call
or
mov
cld
ins
icebp
(bad)
cmp
call
(bad)
cmp
sahf
xchg
and
sub
add
fild
or
fild
add
add
xor
add
add
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
pushf
(bad)
xor
aam
sub
jmp
test
fdivrp
repz
(bad)
jmp
mov
pop
push
out
pop
lock
add
add
xor
dec
(bad)
fdiv
aad
adc
and
xor
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
(bad)
xor
out
aam
sub
call
mul
jmp
inc
add
add
out
icebp
call
jmp
out
push
add
dec
mov
(bad)
movs
call
in
inc
repnz
sahf
repz
call
out
call
cmps
pushf
xor
add
fld
cmp
add
xor
add
fld
add
add
hlt
fadd
add
fadd
add
add
add
fadd
add
jmp
int
jmp
loop
cs
lock
jmp
jmp
add
jmp
clc
in
xor
imul
call
imul
call
nop
popf
jmp
cmps
cmp
xchg
mov
ins
add
inc
loop
push
repz
inc
pushf
xchg
(bad)
jmp
movs
xor
add
add
add
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
out
addr16
jmp
pusha
iret
jmp
sub
cld
jmp
iret
jmp
stc
jmp
and
jmp
xchg
sti
in
cmp
mov
add
mov
mov
inc
call
(bad)
sbb
in
(bad)
jmp
(bad)
mov
xor
and
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
call
jmp
jmp
stc
jmp
stc
inc
add
add
cli
stc
jmp
cli
jmp
cld
jmp
stc
jmp
sti
in
ffreep
xchg
jmp
movs
nop
push
mov
inc
loop
dec
(bad)
(bad)
sbb
in
(bad)
fdivr
fdivrp
mov
add
and
add
fiadd
pop
xor
add
and
add
add
add
and
add
hlt
fld
add
fld
add
fld
add
out
jmp
clc
push
sar
push
cld
stc
jmp
stc
(bad)
aas
sti
jmp
into
jmp
int
jmp
imul
inc
ret
stos
test
dec
ret
push
stc
jmp
inc
repz
dec
jmp
inc
add
add
aad
(bad)
fdivrp
(bad)
jl
enter
add
fld
pop
and
add
xor
add
xor
add
and
add
hlt
fadd
add
fadd
add
fadd
add
shr
jmp
out
push
sar
push
iret
stc
jmp
jmp
stc
inc
stc
(bad)
aas
into
stc
jmp
into
jmp
sti
jmp
stc
jmp
call
cmps
xchg
(bad)
call
imul
dec
loop
inc
std
(bad)
sbb
in
jmp
add
inc
fadd
sbb
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
add
add
add
(bad)
cmp
clc
(bad)
cmp
clc
jmp
clc
jmp
stc
inc
stc
jmp
retf
xor
stc
jmp
leave
jmp
retf
jmp
mov
dec
fwait
jmp
cld
jmp
dec
repnz
cmp
fdivr
ret
aad
jmp
add
inc
fild
adc
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
shr
inc
out
jmp
(bad)
cmp
clc
jmp
clc
jmp
clc
push
(bad)
stc
push
stc
push
enter
leave
stc
call
retf
push
retf
in
nop
jmp
scas
xchg
inc
add
add
lahf
(bad)
cld
jmp
neg
call
repz
mov
iret
jl
fiadd
or
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
iret
out
inc
out
jmp
out
jmp
clc
jmp
clc
inc
add
add
clc
(bad)
cmp
clc
push
xabort
and
(bad)
and
stc
jmp
enter
stc
fcos
fidiv
fwait
jmp
(bad)
jmp
clc
loop
mov
jecxz
jmp
mov
adc
add
and
add
xor
add
xor
add
and
add
and
add
add
add
hlt
fadd
add
fadd
add
fadd
add
sub
jmp
push
in
jmp
in
call
in
call
(bad)
cmp
jmp
cmp
jmp
daa
cmp
jmp
aaa
jmp
cmp
jmp
dec
xchg
(bad)
out
dec
xchg
jmp
push
fdivr
repz
(bad)
cli
ds
call
loop
loopne
(bad)
add
add
mov
fadd
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
sub
jmp
in
push
in
push
sub
in
call
in
dec
ss
sub
jmp
sbb
jmp
add
add
ss
push
add
(bad)
fld
call
fwait
push
xor
jmp
xor
call
loop
fadd
jmp
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
in
inc
add
add
in
inc
sub
in
call
in
dec
sub
call
jmp
sbb
jmp
cmp
jmp
ss
call
sbb
push
push
fdivr
jecxz
jmp
or
(bad)
jmp
(bad)
fiadd
add
add
xor
add
and
add
and
add
add
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
das
in
jmp
in
inc
sub
call
in
call
ss
call
ss
call
cmp
call
mov
(bad)
cmp
call
xchg
inc
add
add
cmp
call
push
loop
jmp
fdivr
fld
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
sub
call
in
dec
cs
call
xor
inc
add
add
ss
jmp
ss
call
sub
jmp
xchg
inc
call
push
xchg
xor
jmp
push
call
(bad)
jle
in
push
or
(bad)
jmp
fdivr
fadd
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
add
add
fild
add
fild
add
sub
in
dec
sub
in
call
das
in
inc
jmp
xor
push
xor
push
sub
push
lods
dec
jmp
jle
push
jg
call
pop
call
out
sub
in
(bad)
call
add
jmp
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
sub
call
in
(bad)
jge
out
dec
sub
in
dec
in
inc
in
call
in
push
xor
push
xor
inc
add
add
imul
call
stc
jmp
sub
(bad)
jmp
jecxz
jmp
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
sub
call
in
inc
add
add
out
(bad)
jge
out
dec
in
dec
in
dec
in
call
in
call
in
inc
push
mov
jmp
lods
imul
cmp
out
(bad)
in
or
(bad)
jmp
add
add
and
add
and
add
xor
add
add
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
sub
call
inc
sub
dec
sub
dec
out
dec
in
call
in
dec
in
inc
in
jmp
inc
daa
sar
xchg
adc
jmp
ss
inc
add
add
and
(bad)
out
or
(bad)
fadd
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
das
out
call
in
inc
sub
call
das
out
call
out
inc
add
add
call
in
dec
in
dec
in
jmp
(bad)
inc
and
(bad)
push
(bad)
call
jle
out
in
dec
and
inc
or
(bad)
jmp
fild
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
add
add
fiadd
add
sub
call
in
inc
cs
call
sub
call
out
call
out
dec
out
dec
out
dec
in
(bad)
fild
jmp
(bad)
cmp
jb
xchg
(bad)
call
and
jmp
or
(bad)
jmp
fiadd
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
cs
call
in
call
inc
cs
inc
out
jmp
out
inc
out
dec
out
dec
out
(bad)
cmp
out
dec
in
add
add
cmp
jbe
test
jp
in
out
inc
and
jmp
add
(bad)
jmp
fld
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
sub
call
in
call
out
inc
add
add
out
inc
inc
out
jmp
out
inc
out
call
out
dec
out
(bad)
ds
(bad)
ds
push
xchg
xor
xchg
push
jns
cli
push
(bad)
inc
and
(bad)
fsin
jecxz
call
fadd
add
add
xor
add
and
add
and
add
xor
add
xor
add
add
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
or
call
in
call
out
call
out
inc
out
inc
jmp
out
inc
out
call
out
jmp
or
inc
out
dec
and
dec
push
mov
inc
adc
inc
add
add
xor
(bad)
call
fild
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
or
call
in
call
out
call
out
inc
out
inc
out
call
out
jmp
inc
add
add
call
out
jmp
out
push
out
dec
cld
into
jmp
call
call
(bad)
in
fnstenv
in
call
fiadd
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
add
add
or
dec
or
call
out
inc
out
inc
out
call
out
call
in
dec
jmp
call
ss
inc
(bad)
in
mov
fscale
in
cmp
cmc
push
sbb
mov
call
fld
add
add
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
adc
(bad)
jns
in
call
in
dec
cmp
(bad)
aas
push
out
pop
push
out
inc
add
fcomp
in
dec
add
jbe
add
cmp
add
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
add
in
jp
out
pop
add
stos
pop
add
jne
add
add
out
xor
out
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
add
add
and
add
hlt
fiadd
add
fiadd
add
or
call
or
inc
or
call
or
(bad)
sar
repnz
nop
fild
call
fild
push
add
and
add
and
add
xor
add
xor
add
and
repz
and
repz
hlt
fcomip
(bad)
hlt
fcomip
(bad)
in
idiv
in
idiv
hlt
fcomip
(bad)
hlt
fcomip
inc
add
add
fcomip
(bad)
in
idiv
mov
idiv
mov
idiv
movs
fcomip
(bad)
movs
fcomip
(bad)
mov
idiv
mov
idiv
movs
fcomip
(bad)
movs
fild
push
jmp
or
call
add
hlt
fld
add
add
cmc
fldenv
add
fld
add
fld
add
add
movs
fld
add
add
add
add
hlt
ds
jmp
ds
push
mov
jmp
mov
jmp
mov
dec
mov
mov
jb
fld
add
add
push
add
jmp
cli
loop
jo
loop
ins
sub
inc
add
add
jbe
ins
push
mov
dec
sub
jmp
ds
call
aad
or
(bad)
add
in
jbe
jmp
cmp
jmp
add
inc
es
pop
and
dec
dec
movs
(bad)
fld
lock
push
(bad)
daa
inc
dec
dec
add
add
add
xor
add
xor
ss
stos
add
inc
jmp
call
loop
xor
ja
jbe
ins
push
mov
sbb
jmp
cmp
call
fdivr
xchg
inc
dec
dec
cmp
add
ret
push
ss
call
aaa
out
test
push
jecxz
add
add
ins
jmp
jmp
dec
movs
(bad)
fld
icebp
push
ret
dec
fdivrp
add
fdivr
mov
add
xor
add
pop
dec
(bad)
(bad)
mov
xor
(bad)
jnp
out
jne
in
jb
jecxz
xor
ja
jbe
ins
dec
mov
push
clc
loope
sub
daa
(bad)
add
add
cmp
dec
cmp
add
mov
add
repz
fcos
xor
jmp
xor
out
out
in
xchg
ss
call
jg
jmp
std
jecxz
jae
fcos
and
inc
cld
(bad)
mov
mov
and
add
xor
add
mov
les
stc
inc
add
add
stc
jmp
clc
(bad)
jl
out
sub
ja
jbe
xor
jmp
jecxz
dec
inc
int3
jmp
loop
sub
loope
or
enter
add
mov
add
cmovb
dec
in
push
or
(bad)
jmp
inc
xor
inc
push
in
jmp
inc
add
add
loopne
mov
dec
sar
mov
xchg
and
add
xor
add
test
sar
mov
or
call
jmp
pop
or
stc
(bad)
mov
arpl
jmp
out
adc
(bad)
push
pop
loope
push
je
dec
movs
fadd
add
add
cli
sbb
inc
add
add
add
dec
in
jmp
or
(bad)
fimul
jmp
sti
push
jmp
push
stos
(bad)
fnstsw
push
xor
dec
fadd
add
add
and
add
xor
add
jg
xlat
inc
add
(bad)
mov
or
call
call
add
call
and
inc
add
add
arpl
cmp
clc
(bad)
dec
push
add
movs
fild
add
jmp
inc
out
dec
(bad)
in
dec
add
dec
jno
call
inc
(bad)
fld
jmp
dec
jmp
add
add
and
add
add
add
xor
add
test
(bad)
int3
imul
(bad)
fscale
out
inc
out
inc
out
jmp
sub
ja
pop
and
or
push
pop
loop
cmp
push
add
movs
fiadd
add
(bad)
sub
(bad)
sub
(bad)
sti
daa
(bad)
jmp
(bad)
jmp
(bad)
add
add
xchg
sar
inc
into
(bad)
jmp
(bad)
jmp
(bad)
mov
fiadd
add
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
add
add
movs
fld
add
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fild
add
fild
add
fild
add
add
movs
adc
call
add
add
add
aaa
fnstenv
xor
add
inc
fldcw
add
add
add
mov
and
pushf
out
add
fcom
adc
fadd
add
push
inc
ja
jae
mov
ins
in
mov
ins
add
bound
mov
or
imul
mov
popa
push
mov
jbe
mov
imul
mov
add
add
push
cmps
sub
and
mov
gs
jnp
fs
cmps
push
jns
mov
gs
jnp
mov
push
ins
xchg
mov
xor
push
ins
cmp
mov
dec
shl
sub
xor
mov
push
cmp
push
mov
outs
or
outs
add
add
fwait
mov
inc
adc
xor
jnp
outs
inc
mov
and
bound
mov
cmp
add
push
xor
rcr
gs
mov
pop
mov
push
xchg
push
push
mov
and
bound
push
dec
pop
ja
outs
dec
stos
pop
cmp
push
mov
es
mov
xor
cs
jge
jae
mov
ins
std
(bad)
push
add
das
sbb
push
outs
pop
popf
arpl
mov
ins
cmp
test
push
outs
inc
jne
cmp
mov
js
pop
mov
mov
cmp
add
add
mov
mov
imul
jns
arpl
sub
mov
jbe
mov
push
jne
movs
fs
shl
jns
jae
test
push
push
movs
imul
gs
ret
or
push
fs
jns
outs
adc
jbe
mov
ins
dec
ja
ins
add
add
add
push
jae
sahf
popaw
cmp
stos
adc
jns
inc
arpl
mov
push
and
pop
jb
mov
xchg
js
fs
jns
outs
bound
cmp
mov
jno
jae
je
je
jb
cmps
imul
pop
jae
and
sbb
int
jb
mov
dec
add
ds
sbb
push
ja
imul
pop
jae
ret
mov
jae
popa
xchg
retf
pop
imul
fs
xchg
imul
retf
inc
mov
pop
imul
mov
cmp
movs
jo
push
scas
fs
stos
inc
and
jne
xor
lock
mov
in
xor
jle
sub
popa
jmp
cmp
jne
gs
jg
les
mov
arpl
stos
pop
jb
je
dec
cmps
mov
jo
xchg
scas
push
mov
mov
add
inc
in
xor
cmp
in
cmp
and
xchg
jg
cmp
icebp
and
(bad)
lock
jno
cs
mov
jo
lea
dec
je
push
adc
jb
jg
dec
daa
ror
shr
out
push
xor
push
cmp
out
and
push
mov
popa
add
add
mov
loope
xor
out
popa
ss
out
cmp
mov
jo
inc
mov
gs
stos
inc
ds
scas
gs
mov
mov
push
inc
xchg
push
cmp
cmp
arpl
sbb
sub
shl
bound
cmp
dec
lock
ss
lock
popa
sti
out
and
mov
add
sbb
push
fs
cs
lods
jo
add
inc
and
jae
and
call
popa
xor
mov
pushw
out
sbb
sub
adc
cmp
out
xor
out
popa
cmp
adc
inc
int3
arpl
test
push
dec
ja
sub
xchg
test
popa
je
add
add
pop
ds
int3
push
outs
xchg
test
je
jle
ins
pop
movs
jns
adc
pop
bound
cmps
cs
hlt
sahf
xor
sbb
rol
call
sahf
xor
std
xchg
aaa
pop
fmul
inc
inc
call
sahf
xor
fst
inc
inc
sub
xor
mov
enter
add
add
lahf
xor
popf
xchg
aaa
pop
pushf
enter
xchg
ds
je
xor
jge
aaa
pop
pop
enter
xchg
ds
je
xor
pop
xchg
aaa
pop
pushf
iret
inc
inc
test
ds
xor
xor
cmp
enter
xchg
ds
hlt
cwde
xor
sbb
enter
nop
ds
hlt
cwde
xor
std
xchg
aaa
pop
add
add
fadd
inc
inc
call
cwde
xor
fst
inc
inc
sub
xor
mov
iret
inc
inc
test
ds
je
xor
popf
xchg
aaa
pop
pushf
iret
inc
inc
push
cwde
xor
jge
aaa
pop
pop
iret
inc
inc
push
cwde
xor
pop
xchg
aaa
pop
pushf
into
inc
inc
test
ds
xor
xor
add
add
cmp
enter
xchg
ds
hlt
sahf
xor
sbb
enter
xchg
ds
hlt
sahf
xor
std
xchg
aaa
pop
fadd
inc
inc
call
sahf
xor
fst
inc
inc
sub
xor
mov
into
inc
inc
test
ds
je
xor
popf
nop
aaa
pop
pushf
into
inc
inc
push
add
add
inc
jge
aaa
pop
pop
into
inc
inc
push
popf
xor
pop
nop
aaa
pop
pushf
int
inc
test
ds
xor
xor
cmp
enter
xchg
ds
hlt
pushf
xor
sbb
enter
xchg
ds
hlt
pushf
xor
std
xchg
aaa
pop
fadd
inc
inc
call
pushf
xor
fst
inc
inc
add
add
sub
xor
mov
int
inc
test
ds
je
xor
popf
(bad)
aaa
pop
pushf
int
inc
push
sahf
xor
jge
aaa
pop
xor
repz
in
xor
sub
nop
xor
jmp
xor
jmp
scas
in
push
cmp
es
in
cmp
add
add
mov
in
cmp
jecxz
cmp
jecxz
cmp
jecxz
cmp
sbb
mov
add
and
xor
pop
xor
fsubrp
aas
cmp
call
xchg
cmp
jecxz
cmp
jecxz
cmp
jecxz
cmp
jecxz
cmp
jecxz
cmp
xor
add
push
add
add
pop
xor
xor
in
mov
mov
jmp
jmp
cmp
jecxz
cmp
loope
cmp
in
cmp
dec
in
add
add
and
into
xor
dec
xor
call
pop
xor
in
xor
fdiv
add
add
ret
xor
into
ins
ss
in
pop
cmp
and
add
sbb
add
mov
call
and
movs
loope
aas
hlt
jp
add
fadd
add
jmp
dec
iret
mov
xor
jg
mov
scas
cmp
adc
cmp
sbb
pop
cmp
add
add
sub
jle
and
ds
movs
aas
je
add
adc
add
adc
inc
xor
xor
jmp
xor
jmp
xor
jmp
pop
call
cmp
js
imul
into
loope
sub
adc
ss
test
cs
or
fistp
add
in
cmp
jns
loop
in
add
cmp
add
mov
jmp
jge
pop
xor
call
pop
xor
sbb
int
xor
pop
jmp
ss
jmp
cmp
loopne
cmp
loope
cmp
dec
cmp
pop
cmp
add
add
loope
cmp
loop
cmp
fimul
cmp
mov
cmp
loope
cmp
loop
cmp
mov
mov
add
fadd
add
call
mov
xor
jmp
enter
push
ss
add
add
into
jmp
jne
push
aaa
push
int
aaa
das
int
aaa
cs
cmp
loop
cmp
jmp
in
cmp
in
cmp
jecxz
cmp
jecxz
cmp
mov
jl
inc
aad
cmp
sub
rcl
ds
or
aas
das
rcr
add
add
mov
iret
push
xor
fwait
xor
push
xor
ror
xor
int
xor
(bad)
xor
push
xor
jmp
xor
int3
and
xchg
jmp
addr16
mov
stos
cmp
xlat
fstp
call
add
xor
add
je
add
sub
fbstp
add
add
pop
int
xor
lock
jmp
xor
test
or
cld
call
ds
(bad)
inc
cmp
xlat
dec
cmp
push
cmp
xlat
pop
cmp
aad
cmp
shl
mov
iret
add
je
add
rcr
add
test
xchg
iret
loope
mov
mov
or
xor
add
add
jmp
and
cmp
stos
call
dec
cmp
xlat
or
jle
mov
inc
shl
cmp
dec
iret
jne
xchg
add
hlt
sub
add
sbb
leave
xor
aam
cmp
rol
cmp
std
(bad)
call
fld
add
add
add
jmp
push
xor
(bad)
gs
rcr
cmp
add
add
or
or
jmp
lods
ss
out
ss
call
pop
cmp
rcr
cmp
or
add
and
add
xchg
fadd
add
int3
pop
xor
mov
xor
xor
clc
aad
aaa
sbb
jns
adc
xor
popa
aad
aaa
cmp
cdq
aaa
xor
mov
aaa
loope
mov
(bad)
mov
aaa
mov
aam
aaa
cmp
fnstenv
xor
loope
(bad)
jmp
cmp
sbb
fs
(bad)
inc
add
call
cmp
out
cmp
add
add
out
cmp
out
aas
ror
aas
ss
mov
aas
fcmovne
add
in
add
rcr
add
hlt
retf
add
add
sbb
fxch
cmp
sub
popa
xor
outs
xor
retf
xchg
xor
mov
xor
fbstp
mov
hlt
xor
sar
xor
rcr
shl
add
add
jecxz
mov
mov
inc
xor
ins
shl
aaa
pop
shr
aaa
mov
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
(bad)
cmp
call
out
cmp
call
or
cld
in
cmp
out
cmp
test
xor
sahf
cmp
out
cmp
retf
add
add
push
cmp
out
cmp
popa
cmp
jmp
enter
cli
cmp
int3
das
cmp
out
cmp
retf
(bad)
cmp
retf
jle
out
out
cmp
(bad)
jmp
leave
xchg
ds
(bad)
ds
fidivr
std
int3
add
and
add
mov
leave
jl
add
add
cmp
stos
xor
leave
(bad)
xor
iret
adc
xor
into
xchg
xor
iret
or
rcl
xor
and
ror
xor
int
xor
popa
into
les
jae
test
xchg
aam
cmp
mov
and
cmp
loope
cmp
out
cmp
add
add
out
cmp
out
cmp
call
jo
ret
out
cmp
in
cmp
out
cmp
(bad)
retf
add
hlt
cwde
add
je
add
repz
sar
xor
rcr
sbb
ja
(bad)
ror
xor
iret
push
or
iret
xor
jno
or
add
add
jecxz
xchg
xor
js
jno
(bad)
ss
inc
aaa
cld
int3
scas
aaa
enter
mov
cmp
call
cmp
loope
cmp
in
cmp
in
cmp
retf
lods
cmp
int3
jo
cmps
retf
pop
int
cmp
fmul
sbb
and
aas
jbe
add
hlt
scas
add
add
add
jo
add
in
shl
cs
enter
enter
enter
int
xor
into
jo
cwde
int
xor
int3
mov
xor
int
xor
into
arpl
dec
into
ins
xor
int
xor
int
xor
retf
or
retf
adc
retf
sbb
retf
and
add
add
retf
nop
retf
or
in
iret
shl
retfw
jle
scas
retf
aam
repz
stc
leave
test
xchg
leave
movs
ss
out
cmp
add
in
add
mov
(bad)
dec
xor
int
xor
dec
xor
add
add
push
xor
int3
ja
scas
int3
xchg
xor
int3
sahf
xor
int3
pushf
xor
sar
test
or
and
add
cs
(bad)
sbb
ss
xor
inc
ss
push
ss
imul
(bad)
mov
arpl
cdq
ss
(bad)
popf
ss
mov
add
(bad)
iret
ss
in
ss
enter
enter
enter
out
cmp
out
cmp
in
cmp
in
cmp
cmp
mov
sbb
mov
cmp
adc
pop
jecxz
cmp
cmp
loop
cmp
loop
cmp
loop
cmp
jecxz
cmp
add
inc
loope
cmp
cmp
cmp
mov
cmp
in
cmp
in
cmp
in
cmp
jecxz
cmp
in
cmp
jecxz
cmp
jecxz
cmp
jecxz
cmp
(bad)
cmp
dec
jecxz
cmp
push
jecxz
cmp
fnclex
scas
cmp
add
add
aaa
loop
ds
loop
ds
in
ds
in
aas
mov
in
aas
hlt
mov
add
fadd
add
enter
enter
enter
enter
enter
retf
mov
xor
test
push
retf
call
retf
scas
xor
leave
xor
retf
stc
xor
add
add
sbb
dec
enter
leave
xor
mov
enter
(bad)
movs
xor
(bad)
xor
pop
leave
push
xor
cdq
xor
enter
leave
cmp
addr16
push
xor
lds
xor
shl
(bad)
(bad)
xor
enter
fimul
xor
int3
pop
xor
int3
mov
retf
fwait
xor
add
add
fist
xor
bswap
sub
ror
cmp
pop
retf
fwait
int3
mov
inc
retf
mov
les
xchg
leave
lock
test
aaa
and
(bad)
loopne
cmp
loopne
cmp
fst
cmp
fnsave
cmp
loopne
cmp
add
add
fdivp
cmp
fild
cmp
loopne
cmp
fild
fist
push
fbld
inc
loopne
cmp
aad
aas
js
out
mov
add
mov
add
mov
inc
xor
leave
pop
xor
lds
aas
(bad)
shl
mov
cmc
xor
and
mov
(bad)
ja
or
xor
add
add
int3
es
fld
ss
cmps
ss
int3
pop
aaa
jne
dec
aaa
mov
xchg
aaa
repz
(bad)
aaa
cli
retf
div
sub
or
cmp
data16
aad
in
loope
cmp
inc
cmp
loopne
cmp
in
cmp
in
cmp
in
cmp
xor
mov
jb
idiv
mov
aad
aas
xchg
add
movs
push
add
push
inc
xor
(bad)
and
mov
retf
pop
leave
and
add
daa
xor
enter
enter
enter
int3
push
xor
fadd
xor
int3
cmp
dec
fidiv
stos
fldcw
push
fstp
add
(bad)
ss
fisub
aaa
lock
pop
fdivr
push
xlat
add
cmp
fcomp
or
aad
cmp
lock
aam
cmp
jecxz
cmp
jecxz
cmp
loop
cmp
aam
cmp
ds
cmp
sbb
aam
cmp
es
cmp
jns
push
ds
xchg
sub
xchg
mov
fwait
aas
hlt
add
sbb
add
into
dec
xor
xor
test
js
shl
iret
fidiv
fwait
iret
hlt
xor
iret
xor
xor
push
xor
jns
cmp
xchg
xor
iret
xchg
xor
into
fidiv
push
iret
out
add
add
dec
out
xor
div
jle
(bad)
xor
sbb
dec
int3
jo
out
int
xor
fstp
ss
fchs
cmp
test
add
and
(bad)
xor
(bad)
fadd
xchg
xlat
xor
xlat
jmp
fdiv
aaa
and
fcom
aaa
retf
fcomp
aaa
xchg
fsubr
aaa
add
add
sbb
cmp
xlat
ins
cmp
cmps
cmp
cmp
aam
cmp
rol
cmp
mov
cmp
loope
cmp
loopne
cmp
loop
cmp
test
int
cmp
adc
fs
add
ss
xor
into
push
xor
retf
daa
int3
xor
add
add
int3
inc
xor
fcomp
popa
fld
xor
jecxz
xor
jecxz
cmp
out
cmp
or
add
add
mov
out
test
xor
jp
xor
lea
push
repnz
xor
push
xor
lock
xor
jecxz
xor
in
xor
jecxz
xor
or
xor
add
add
inc
jecxz
xor
scas
loop
xor
and
or
jo
push
ss
loop
cmp
out
cmp
dec
cmp
jmp
(bad)
cmp
fld
and
fs
dec
fidivr
in
add
or
add
add
iret
xor
jmp
xor
icebp
push
imul
xor
add
add
out
inc
xor
jecxz
xor
in
xor
cmc
in
aaa
push
loop
aaa
xchg
loop
cmp
jecxz
cmp
xor
jb
jo
sub
sar
adc
cmp
call
adc
cmp
cld
cmp
xchg
cmp
(bad)
fnstcw
aas
add
add
hlt
sub
add
add
stos
out
xchg
xor
lahf
xor
jmp
lock
xor
jecxz
xor
mov
sub
inc
out
cmp
out
cmp
(bad)
cmp
fistp
jl
retf
aas
and
add
fs
jmp
jmp
xchg
jmp
push
lock
xor
dec
xor
jmp
retf
in
les
add
fidiv
in
sahf
xor
and
arpl
mov
fcomp
in
ds
bnd
loopne
add
xor
xchg
xor
xor
xor
out
ja
fucomi
cmp
cmp
add
add
loope
cmp
mov
(bad)
cmp
cmp
out
cmp
out
cmp
out
mov
jmp
cmp
and
hlt
jmp
add
push
jmp
shl
jmp
pop
xor
jnp
mov
dec
out
jo
add
loopne
cmp
add
add
out
cmp
loope
cmp
stc
cmp
mov
xchg
ins
cmp
in
aas
movs
call
add
inc
jmp
and
jmp
sub
jmp
fidiv
pop
in
push
nop
jecxz
ds
repnz
add
stos
out
call
out
mov
add
add
es
out
out
in
repnz
out
(bad)
xor
out
or
loope
sub
sbb
out
push
sub
out
(bad)
xor
jmp
xor
jecxz
xor
jecxz
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
popa
in
xor
dec
in
xor
mov
jecxz
xor
xor
inc
ss
ins
ss
call
hlt
ss
or
stos
jmp
sbb
sub
push
cmp
fdivr
rcr
pop
cmp
int3
cmp
in
cmp
in
cmp
out
cmp
cmp
push
cmp
jecxz
cmp
add
add
in
cmp
in
cmp
movs
cmp
ret
cmp
in
cmp
in
cmp
add
fcomp
cmp
loop
cmp
loop
cmp
loop
cmp
(bad)
scas
fild
mov
fdivr
cmp
loope
cmp
loop
cmp
add
add
inc
loope
cmp
push
loop
cmp
fcmovu
adc
jecxz
sub
jmp
loope
ds
gs
ffreep
ds
inc
aas
je
repnz
add
dec
xor
js
loop
sahf
xor
mov
xor
in
push
sub
stc
xor
sub
push
out
xor
add
add
jo
inc
xor
xor
in
xor
daa
out
int3
xor
out
xor
out
xor
jb
inc
jmp
enter
sbb
jmp
push
xor
cdq
jmp
or
jl
cmp
test
aaa
dec
in
and
aaa
add
add
dec
in
ja
fsubr
cmps
aaa
and
lock
pop
in
cmp
fisttp
cmp
ffreep
cmp
(bad)
cmp
loopne
cmp
loopne
cmp
fbld
fistp
cmp
fsubp
cmp
fidivr
cmp
fbstp
(bad)
ficomp
cmp
out
cmp
out
cmp
in
cmp
out
cmp
in
cmp
mov
loop
ds
in
ds
in
mov
loop
aas
sub
outs
aas
test
mov
add
(bad)
jmp
xor
call
inc
xor
pop
xor
je
mov
mov
xor
jmp
xor
jmp
outs
call
jno
ins
call
add
pop
call
mov
in
jmp
or
das
xor
call
xor
xor
mov
xor
in
xor
call
pop
xor
jns
in
xchg
xor
call
cli
xor
or
out
daa
xor
in
xor
out
jnp
add
add
loop
cwde
xor
jmp
xor
jmp
xor
jmp
xor
in
sbb
pop
in
inc
xor
(bad)
out
ins
xor
fucomp
dec
ss
in
push
imul
shl
in
fidiv
jle
adc
push
loopne
cmp
loope
cmp
fisttp
jbe
lock
xchg
cmp
add
add
out
arpl
add
xchg
dec
cmp
in
cmp
loop
aas
sbb
inc
aas
sub
bnd
jmp
add
pop
xor
jmp
xchg
xor
call
cmp
cli
jmp
mov
xor
out
xor
out
xor
jmp
js
push
xchg
xor
mov
add
call
out
xor
in
jp
(bad)
jmp
xor
in
mov
xor
jmp
xor
jmp
xor
adc
pop
xor
push
jmp
xor
add
jmp
out
dec
ss
out
pop
ss
push
ss
sahf
ss
shl
add
add
std
in
std
ss
in
xchg
aaa
sbb
xlat
inc
cmp
fnstenv
imul
cmp
fdivr
loopne
xor
hlt
(bad)
inc
cmp
pushf
cmp
(bad)
out
cmp
aam
cmp
shr
sub
jnp
and
rcr
ds
rol
ds
shl
ds
in
ds
aas
add
add
add
xor
lods
sar
aas
mov
popa
aas
cmp
rol
aas
fcmovnbe
lods
aas
pop
shl
push
repz
in
fiadd
add
iret
cmp
mov
iret
icebp
xor
iret
sub
inc
iret
push
xor
into
adc
push
into
cmp
sub
xor
int3
aas
xor
int
xor
int3
jg
fs
in
add
add
cmps
retf
sahf
retf
mov
int3
cmps
xor
retf
loope
xchg
retf
cld
xor
leave
and
outs
leave
jb
stc
retf
test
scas
xor
adc
div
push
retf
xchg
jno
outs
enter
leave
lds
or
loopne
adc
sbb
or
(bad)
aaa
aam
bound
push
aad
cmp
add
add
(bad)
adc
adc
jnp
rcl
sub
add
dec
cmp
sahf
cmp
mov
ins
aam
cmp
shl
cmp
lahf
rcl
aas
sub
ins
repz
cmp
add
and
mov
xor
int
xor
int
xor
sbb
or
push
xor
retf
and
shl
(bad)
int3
and
add
add
jne
jge
pusha
leave
aam
and
sub
xor
scas
cmp
aad
cmp
fdivr
add
jmp
cmc
rol
cmp
retf
mov
mov
cmp
leave
fdivr
cwde
leave
sti
cmp
test
cmp
retf
sub
cld
retf
ss
iret
cmp
dec
push
add
add
je
clc
ds
int
jmp
push
fild
add
data16
xor
iret
xchg
xor
iret
pop
xor
into
jns
stos
ror
jmp
xor
iret
add
scas
aam
xor
in
aad
ss
and
pop
aad
add
add
push
shr
cmp
pop
cmp
enter
lds
cmp
xlat
cmp
(bad)
test
cmp
int
cmp
adc
dec
ds
int3
test
aas
fs
repz
retf
lds
rcr
xor
push
xor
iret
mov
xor
add
add
rcl
xor
into
jnp
push
iret
loope
out
pop
xor
test
int3
ss
sbb
push
aad
aaa
ja
aad
out
xor
sti
(bad)
jg
pop
mov
je
into
cmp
ret
stos
enter
lds
leave
xchg
cmp
(bad)
fs
leave
out
ds
cwde
aas
cmp
sar
add
add
je
repz
adc
push
shr
xor
inc
xor
popa
xor
shl
xor
leave
aas
xor
xor
mov
xor
retf
leave
retf
out
iret
adc
movs
iret
ret
xor
iret
fnsave
jp
in
xor
shl
add
rcl
cmp
ret
ror
xor
int
xor
int
xor
int3
mov
xor
test
xor
and
ret
xor
inc
sar
movs
rcl
lahf
shl
pop
sar
ss
getsec
adc
aaa
sar
jns
dec
cmp
jle
pop
ror
add
add
mov
(bad)
loope
(bad)
(bad)
out
rol
repz
mov
cmp
pop
cmp
(bad)
push
cmp
mov
jno
fdivr
or
hlt
cmp
cmp
ret
mov
dec
cmp
pop
cmp
rcr
out
rol
sbb
add
add
shl
and
adc
cmp
les
mov
imul
int3
cmps
cmp
int3
ret
ret
in
test
push
cmp
sub
push
cmp
push
int
cmp
(bad)
int3
popf
cmp
jp
fnstcw
push
int3
out
cmp
pop
rcr
add
add
sbb
dec
ds
shl
rol
pop
shl
jb
dec
aas
cmp
ret
loopne
xchg
aas
mov
rol
cli
shl
sbb
in
xor
repz
add
or
xor
(bad)
mov
xor
(bad)
jns
push
iret
(bad)
xor
mov
xor
add
add
into
in
test
int3
inc
xor
int
xor
into
pusha
xor
int
xor
xor
into
cmps
xor
int
xor
int
xor
int
xor
int3
xor
retf
pop
xor
int3
mov
xor
int3
clc
xor
retf
cmp
dec
xor
shr
(bad)
shl
aam
xor
retf
pop
leave
dec
xor
pushf
retf
sbb
retf
jne
cmp
sub
pop
aaa
(bad)
jns
fidiv
xlat
lds
xadd
adc
jnp
cmp
xchg
cmp
cmps
cmp
(bad)
jg
pop
cmp
scas
cmp
(bad)
aad
add
add
aaa
ret
sbb
or
bound
in
mov
in
ret
inc
les
cmp
xor
cmp
ret
cdq
cmp
(bad)
(bad)
cmp
mov
std
cmp
les
cmp
les
loopne
lods
mov
lds
aas
push
lds
pop
(bad)
test
fnstsw
xchg
stc
aas
add
add
mov
repz
fcom
add
test
clc
xor
sbb
ret
xor
xchg
xor
(bad)
xor
or
sub
cmp
leave
retf
xor
fwait
xor
and
or
dec
retf
mov
int
ss
adc
aaa
test
jbe
mov
shl
rcl
test
add
rol
cmp
xchg
cmp
pop
cmp
iret
cmp
mov
or
cmp
mov
sar
(bad)
mov
or
pop
les
cmp
mov
cmp
mov
cmp
add
sbb
ds
inc
ds
test
and
repz
add
add
mov
xor
das
xor
pushf
xor
enter
retf
test
dec
xor
xor
(bad)
mov
adc
fadd
adc
aam
aaa
xor
enter
leave
imul
leave
mov
dec
leave
lahf
xor
enter
enter
leave
cmc
xor
add
add
int3
adc
xor
mov
push
xor
mov
pushf
xor
retf
int3
xor
retf
fidiv
retf
add
pop
mov
cmp
jl
jno
jge
outs
xor
jp
test
xor
enter
sar
or
adc
adc
add
leave
inc
ss
retf
add
jae
sbb
cdq
ss
xchg
ss
lods
ss
leave
ss
int3
ins
aaa
in
movs
aaa
scas
int3
mov
cmp
mov
aaa
rcr
pop
shl
sar
ror
shl
daa
ret
dec
ret
dec
ret
(bad)
pop
cmp
add
add
ret
imul
cmp
mov
in
cmp
ret
lock
ret
and
data16
ret
ins
rol
rol
cmp
les
cmp
xor
icebp
inc
xlat
add
sti
(bad)
enter
jl
cmc
leave
enter
add
dec
add
inc
mov
mov
sar
out
cmp
mov
sub
push
mov
jo
push
mov
sar
mov
hlt
cmp
mov
cmp
mov
cmp
mov
cmp
push
cmp
mov
cmp
mov
cmp
mov
cmp
add
add
sar
mov
cmp
mov
cmp
adc
sbb
inc
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
ret
push
cmp
ret
and
ret
xor
cmp
ret
jo
push
stos
cmp
mov
cmp
ret
jns
add
add
inc
ret
jg
scas
mov
shl
shl
movs
out
icebp
jmp
fild
add
into
push
xor
mov
aam
jmp
mov
cmp
push
cmp
mov
pop
mov
cmp
mov
cmp
ret
das
sar
faddp
call
fiadd
add
add
add
xor
iret
cmc
xor
xor
into
inc
xor
int3
test
ss
mov
sbb
cmp
mov
cmp
mov
cmp
mov
cmp
rol
aas
ret
imul
adc
push
shl
mov
cmp
add
add
fs
(bad)
js
add
or
aas
xor
jno
pop
int
xor
int3
or
push
into
pusha
xor
call
retf
sbb
dec
retf
sbb
dec
retf
xor
popa
retf
push
xor
retf
test
mov
cld
xor
jge
arpl
sbb
movs
fdiv
mov
dec
xor
add
add
sbb
pop
xor
dec
mov
fbstp
mov
cmps
pop
ss
jl
clc
movs
cmps
and
std
ss
movs
sbb
aaa
dec
movs
js
fbld
aaa
sbb
xor
cmp
cmps
mov
cmp
or
add
add
mov
push
cmp
lahf
cmp
test
cmp
test
cmp
movs
dec
cmp
pusha
cmp
movs
idiv
mov
xor
cmp
cmps
add
mov
and
ss
mov
pop
mov
repnz
js
add
ins
stos
sub
inc
stos
aam
add
add
jo
inc
xor
into
xor
mov
xor
push
xor
scas
inc
xor
pop
xor
hlt
xor
movs
xor
mov
ss
push
scas
mov
xor
mov
mov
mov
mov
aaa
mov
add
adc
add
(bad)
mov
mov
cmps
movs
jecxz
stos
cmps
call
test
sbb
cmp
cmps
dec
cmp
cmps
dec
cmp
cmps
ins
cmp
cmps
sar
mov
into
cmp
fwait
mov
pop
aas
das
mov
repnz
mov
mov
sub
sub
add
pop
stos
scas
xor
scas
mov
inc
scas
or
xchg
mov
xor
lods
and
mov
mov
or
xor
scas
shl
scas
in
xor
jmp
xor
mov
sub
push
movs
cdq
aaa
cld
mov
icebp
cmp
add
add
pusha
cmp
mov
into
cmp
cmp
xor
cmp
mov
loop
cld
mov
push
cmp
mov
sar
mov
push
cmp
repnz
mov
movs
clc
icebp
inc
add
and
lods
xor
xor
add
add
shl
xor
inc
xor
lods
arpl
mov
and
mov
mov
js
xor
mov
adc
jne
push
mov
xchg
stos
mov
cmp
pop
cmp
sar
cmps
push
cmp
add
add
cmps
pop
cmp
inc
cmp
mov
pushf
cmp
mov
dec
cmp
mov
addr16
mov
mov
push
mov
add
aas
inc
mov
ds
ja
push
aas
jge
(bad)
aas
adc
bnd
icebp
inc
scas
xor
add
add
jb
mov
rep
push
xor
cwde
xor
stos
aaa
xor
mov
mov
sub
pop
aaa
mov
pop
cmp
cmps
scas
cmp
cmps
sar
lea
push
cmp
(bad)
cmp
mov
and
xchg
mov
lea
fisub
add
xor
repnz
call
scas
push
xor
cmps
(bad)
inc
lods
push
xor
pop
xor
lods
mov
xor
adc
and
mov
xor
test
or
cmp
shl
dec
stos
xor
push
cmps
shl
sbb
cld
add
add
push
test
aaa
fisub
push
cmp
movs
jnp
sbb
nop
cmp
movs
imul
outs
movs
ja
mov
mov
lods
cmp
mov
xor
adc
dec
ds
cmps
popa
ds
mov
js
int3
add
add
adc
mov
aas
leave
movs
icebp
aas
movs
dec
repnz
lods
clc
das
shr
push
lods
das
xor
test
xor
test
xor
test
xor
cmps
call
xor
or
outs
cmps
cmp
popf
cmps
push
xor
xor
cmps
mov
(bad)
cmps
popf
xor
cmps
shl
add
add
jp
lds
out
test
push
xor
cmps
mov
xor
lods
jne
(bad)
lods
dec
ss
lods
out
add
or
cmp
mov
aas
cmp
lahf
popa
cmp
mov
sar
xor
mov
push
cmp
mov
outs
cmp
add
add
popf
xchg
cmp
sahf
(bad)
cmp
cmps
push
cmp
cmps
sbb
cmps
cmp
cmp
cmps
stc
cmp
movs
inc
cmp
sbb
lock
dec
mov
aam
fisub
mov
mov
cmp
inc
add
and
xor
cmps
xor
add
add
test
sub
stos
lods
xor
mov
xor
inc
lods
and
shl
cmp
push
cmp
push
cmp
jo
rcr
pop
cmp
mov
xchg
cmp
mov
inc
cmp
inc
movs
lds
dec
mov
add
in
repnz
test
bound
jle
loope
test
xor
cmps
mov
xor
test
xor
test
xor
stos
dec
xor
mov
xor
test
push
cmp
mov
mov
daa
mov
xor
add
add
xchg
lahf
jp
dec
mov
sahf
cmp
movs
pop
cmp
movs
cmp
cmp
movs
jne
and
mov
retf
mov
pop
cmp
sub
jno
and
mov
pop
ds
mov
or
(bad)
aas
je
repnz
add
add
add
jge
sahf
xor
xor
cmps
ret
cmps
pop
xor
lods
and
stos
add
push
stos
jg
mov
fbstp
sub
mov
cmps
test
inc
aaa
mov
xchg
and
add
mov
cmp
add
pop
xchg
aam
add
push
adc
aas
mov
repnz
cmp
add
retf
(bad)
daa
xor
nop
repnz
mov
lods
mov
xor
stos
aam
mov
mov
loope
and
aaa
cli
test
adc
dec
xchg
and
push
mov
cmp
add
add
cwde
adc
fist
sub
jne
mov
mov
xchg
inc
cmp
xchg
mov
pushf
xchg
les
pushf
xchg
(bad)
cmp
sub
xchg
data16
xchg
mov
outs
xchg
aad
nop
xchg
std
cmp
xchg
cmp
dec
nop
xchg
aas
inc
xchg
lds
fs
(bad)
clc
fild
add
push
xor
xor
add
add
pop
xor
mov
xor
mov
mov
mov
xor
cdq
test
push
lods
cmps
pop
ss
stos
mov
leave
cmps
or
aaa
sub
cmp
xchg
or
cli
xchg
push
cmp
xchg
inc
cmp
xchg
mov
cmp
add
add
xchg
push
cmp
xchg
cmp
repnz
xchg
sub
ss
pop
cmps
pop
aas
fimul
bnd
call
lea
xor
ins
xor
sti
xor
sub
lods
lea
xor
mov
xor
sub
xchg
xor
add
add
xchg
push
xor
xchg
retf
xchg
and
imul
mov
gs
in
mov
sbb
(bad)
xchg
cli
aaa
mov
xor
push
test
cmp
les
(bad)
cmps
sar
cmps
jmp
pop
stos
push
cmp
jnp
mov
lea
sbb
test
cmp
test
cmp
test
cmp
add
add
sar
mov
lds
and
hlt
jmp
nop
and
scas
nop
cmp
bound
shl
sub
adc
push
xchg
push
ss
xchg
repz
cmp
mov
ds
lea
ds
stos
idiv
add
add
mov
add
pop
xchg
xlat
xor
xor
cwde
xor
lea
xor
je
push
aaa
or
mov
mov
cmp
imul
test
aas
cmp
xchg
mov
ds
adc
add
push
aas
hlt
mov
add
out
js
fwait
(bad)
cmps
xor
add
add
nop
in
mov
mov
xor
in
xor
(bad)
cld
xor
xchg
jb
loop
mov
xor
nop
sbb
xchg
ds
mov
loope
movs
xor
xchg
aad
pop
xchg
or
dec
lea
mov
mov
xor
dec
xchg
cmp
ins
xchg
ins
add
add
outs
xchg
mov
ss
or
or
outs
aaa
outs
xchg
lahf
aaa
xchg
xchg
aam
xchg
xchg
add
cmp
test
cmp
mov
add
(bad)
mov
ins
cmp
popf
cmp
mov
adc
xchg
cmc
cmp
movs
inc
cmp
int
sbb
add
mov
aas
dec
mov
jmp
mov
xor
(bad)
sbb
xchg
(bad)
mov
add
cdq
xor
xchg
jo
(bad)
xchg
repnz
sub
(bad)
ss
lea
cmp
ins
cmp
fdivr
aam
mov
nop
cmps
(bad)
add
add
mov
cmc
cmp
mov
scas
cmp
movs
push
cmp
movs
mov
cmp
xchg
cmps
xchg
ds
cmc
ds
movs
push
aas
retf
movs
fdivr
and
cmc
(bad)
cmp
add
sbb
xor
mov
xor
pushf
xor
mov
xor
mov
js
add
add
in
movs
cwde
cmp
mov
inc
aas
mov
hlt
(bad)
clc
xlat
add
or
call
xor
xor
addr16
mov
xor
xchg
xchg
xor
je
sub
ss
mov
cmp
mov
push
cmps
xor
cmp
cmps
xor
mov
add
add
mov
bnd
hlt
push
fild
add
shl
or
cmp
mov
hlt
inc
add
(bad)
retf
cmp
cmps
mov
cmp
movs
outs
cmp
mov
xchg
movs
(bad)
cmp
inc
cmp
movs
js
shl
cmp
mov
add
add
loopne
xchg
cmp
mov
cmp
mov
cwde
cmp
sbb
xchg
ds
mov
dec
aas
pop
repnz
cmc
jmp
add
repz
lea
xor
mov
sbb
mov
retf
mov
xor
mov
add
add
add
mov
adc
xor
mov
cmp
mov
ss
xchg
aaa
dec
mov
aas
mov
in
mov
mov
mov
daa
mov
aaa
int
jecxz
xrelease
cmp
movs
and
dec
movs
sub
ins
movs
cmp
cmp
pop
cmp
add
add
mov
mov
mov
cmp
lahf
or
add
lahf
and
mov
sahf
dec
cmp
lahf
push
cmp
nop
cmp
popf
cmp
sahf
mov
lods
sahf
lds
xchg
sahf
fstp
fstp
push
cmp
sahf
inc
cmp
jno
xchg
sahf
jg
add
add
xchg
mov
sar
push
mov
add
cmp
inc
cmp
ins
cmp
lahf
mov
and
hlt
cmp
xchg
push
cmp
movs
cmp
movs
pop
cmp
movs
jl
outs
xchg
pushf
cmp
xchg
mov
fwait
xchg
loope
lahf
xchg
in
movs
movs
idiv
sub
jmp
add
add
add
ins
lahf
into
xor
lahf
(bad)
xor
lahf
fidiv
sahf
out
in
sahf
out
xor
mov
xor
mov
xor
mov
xor
adc
push
xor
push
mov
xor
je
ss
je
inc
xor
mov
xor
outs
xor
mov
mov
lods
mov
add
aaa
lods
mov
aaa
aam
(bad)
aaa
int3
mov
aaa
les
push
cmp
lahf
cmp
mov
cmc
push
mov
xor
xor
push
xor
xor
push
dec
fild
add
xchg
xor
cmps
xor
mov
in
xchg
add
xchg
xor
xchg
xor
(bad)
xor
fidiv
add
out
in
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
push
xor
push
xor
mov
xor
ss
mov
xor
mov
in
mov
add
push
xor
pop
xor
outs
xor
mov
add
add
in
mov
in
xchg
in
mov
xor
cmps
xor
mov
in
mov
xor
mov
xor
(bad)
xor
fidiv
add
out
in
xchg
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
pushf
sub
pushf
xor
mov
xor
add
add
mov
call
mov
or
xor
pushf
push
jo
jb
call
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
cwde
cmc
push
fadd
add
out
cld
mov
idiv
add
add
cld
mov
push
aas
hlt
fcomip
inc
loopne
add
inc
xor
xor
lea
lea
xor
mov
xor
mov
xor
mov
add
xor
lea
xor
mov
xor
(bad)
loop
ror
bnd
inc
fild
add
add
add
or
loopne
into
cmp
out
cmp
xchg
push
cmp
sub
rcl
cmp
cmp
jp
jo
xchg
pusha
xchg
scas
cmp
loop
mov
cmp
xchg
push
cmp
mov
cs
xchg
ss
xchg
ds
xchg
pop
cmp
add
add
mov
xchg
call
xchg
sar
xchg
out
cmp
mov
push
cmp
movs
mov
pop
cmp
mov
xchg
cmp
hlt
mov
sar
loopne
push
and
inc
sub
push
ds
mov
add
xor
xchg
ds
lahf
call
lahf
into
test
jmp
mov
xor
cmp
outs
aas
cld
lahf
call
mov
bnd
(bad)
cmp
add
lea
xor
sahf
xor
mov
xor
mov
xor
add
add
sub
ins
mov
je
jp
pusha
mov
xor
out
and
or
sbb
sub
dec
xor
push
xor
je
inc
repnz
xor
icebp
xor
hlt
lock
xor
pushf
xor
xor
in
xor
cmp
lock
xor
lock
add
add
fsub
mov
xor
jecxz
xor
pushf
jecxz
xor
call
loop
ss
loop
ss
ss
ins
ss
cwde
ss
loop
ss
in
ss
in
ss
in
shl
adc
in
loop
aaa
fsub
cmp
hlt
loop
aaa
and
push
aaa
and
mov
dec
loop
aaa
add
add
cmp
shl
loop
aaa
test
aam
and
aaa
add
adc
pop
jecxz
cmp
sub
adc
cmp
mov
inc
cmp
jo
nop
jecxz
cmp
add
pop
call
inc
cmp
push
cmp
lods
cmp
out
cmp
jecxz
cmp
call
pop
cmp
add
add
cmp
in
cmp
in
cmp
out
cmp
jo
and
xchg
cmp
call
mov
pusha
call
aam
add
in
lock
xor
out
cmp
out
cmp
sbb
mov
sbb
cmp
add
add
sbb
cmp
sbb
cmp
dec
in
cmp
xchg
out
cmp
cwde
out
cmp
test
int3
cmp
add
and
lock
adc
push
and
gs
jne
xor
test
xor
xchg
ds
sbb
ds
lds
add
add
nop
sbb
ds
adc
jo
sub
aas
pushf
sbb
aas
in
mov
mov
sbb
aas
in
sbb
add
cmc
dec
adc
inc
jmp
xor
mov
inc
xor
lock
mov
mov
mov
jl
shl
out
fdiv
int3
out
sbb
add
add
adc
sub
(bad)
out
cmp
in
cmp
add
js
sbb
mov
xor
aam
sbb
in
xor
xor
sub
test
push
xor
xor
jmp
movs
xor
jmp
sub
adc
adc
sub
push
jmp
pop
xor
add
add
out
lods
xor
out
call
xor
in
xor
in
xor
in
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
in
xor
fsub
push
xor
and
xor
and
mov
xor
add
add
cld
jmp
dec
ss
jmp
movs
ss
loopne
add
cld
ss
cmp
je
cmp
sub
aaa
lods
jmp
mov
aaa
enter
fsubr
in
aaa
clc
out
aaa
fsub
cmp
and
dec
cmp
fbld
loopne
cmp
(bad)
cmp
in
cmp
add
add
in
cmp
sub
cmp
cmp
sbb
pusha
cmp
out
cmp
out
cmp
loopne
and
cld
cmp
in
cmp
cmp
mov
shl
int3
cmp
out
cmp
in
cmp
cmp
inc
cmp
in
cmp
je
pusha
in
cmp
add
add
xchg
cmp
movs
cmp
in
cmp
loope
cmp
sbb
cmp
loope
cmp
sbb
cmp
sbb
cmp
loope
cmp
loope
cmp
loopne
cmp
loope
cmp
loopne
cmp
loopne
cmp
loop
cmp
add
and
push
loop
cmp
nop
loop
cmp
add
add
mov
lods
cmp
fsub
loopne
sub
adc
inc
fbld
rcr
mov
out
ds
out
ds
out
ds
movs
ds
int3
ds
mov
in
ds
cld
ds
in
aas
or
ins
aas
sub
jl
cmp
mov
dec
in
aas
inc
in
aas
mov
add
add
in
aas
shl
aas
shl
add
call
fiadd
add
cld
das
push
in
sub
push
in
dec
xor
in
ins
xor
out
xor
pushf
xor
call
mov
xor
jmp
xor
call
or
or
sbb
enter
add
add
call
call
pop
xor
jmp
mov
inc
call
shl
nop
call
or
or
sbb
sbb
sub
mov
jmp
pop
xor
call
les
shr
aam
add
in
add
hlt
xor
add
xor
adc
inc
out
xor
add
add
in
xor
jmp
js
pusha
jmp
mov
xor
call
in
xor
out
or
enter
enter
call
jmp
xor
jmp
xor
jmp
xor
in
mov
inc
in
les
in
aam
shr
in
shr
hlt
xor
in
add
add
add
xor
adc
adc
and
xor
xor
sub
xor
nop
in
fs
mov
out
test
xor
fdiv
call
jmp
ss
sbb
clc
jmp
cmp
clc
jmp
pop
ss
jmp
mov
inc
jmp
ss
mov
add
add
sbb
in
ss
add
pusha
in
adc
shr
aaa
shr
aaa
mov
fs
inc
in
je
fsubr
mov
mov
pushf
aaa
fsubr
lods
aaa
clc
jmp
aaa
sbb
int3
aaa
or
fdiv
sbb
in
aaa
cmp
cld
aaa
push
loope
cmp
cmp
cwde
cmp
cmp
call
cmp
add
add
fistp
cmp
fild
ficom
fbld
fidiv
fild
push
fbld
pusha
faddp
cmp
aam
nop
fsubp
cmp
fdivp
cmp
loop
cmp
loop
cmp
loop
cmp
jl
mov
loope
cmp
loope
cmp
loope
cmp
add
add
loop
cmp
loope
cmp
loope
cmp
loope
cmp
(bad)
sbb
mov
xlat
cmp
cmp
dec
cmp
pop
cmp
xlat
ins
cmp
jl
cmp
mov
cmp
(bad)
hlt
cmp
rcl
pusha
shl
rcl
xor
loopne
inc
cmp
aam
cmp
rol
add
add
sub
mov
cmp
rcr
cmp
shr
cmp
aam
cmp
aam
cmp
pop
aam
cmp
test
ins
cmp
rcl
cmp
or
lock
or
sbb
sbb
sub
cmp
cmp
sbb
dec
ds
mov
cmp
movs
ds
loopne
adc
add
add
or
cmp
in
dec
aas
in
dec
aas
adc
mov
inc
sar
cwde
rcr
aas
clc
shr
aas
fs
(bad)
mov
into
cld
das
pop
into
or
or
sbb
pop
into
sub
js
cmp
cwde
into
dec
xor
movs
xor
iret
mov
add
les
lock
aam
add
in
add
hlt
xor
add
add
into
add
adc
sub
and
pop
xor
ins
xor
jl
cmp
mov
mov
pushf
xor
lods
xor
mov
xor
into
in
xor
retf
cmp
in
dec
xor
pop
xor
push
xor
shl
sbb
loopne
ror
xor
int3
sbb
add
add
dec
int3
sub
movs
int3
dec
xor
retf
jl
pushf
retf
mov
xor
retf
in
adc
hlt
xor
enter
enter
aam
xor
aam
xor
aam
xor
aam
xor
rcr
js
mov
xor
rcr
xor
shr
xor
sar
xor
ror
add
add
pop
shr
sbb
dec
xor
pop
shr
ror
nop
rcl
xor
add
hlt
xor
js
dec
ss
pop
ss
ins
ss
jl
mov
aad
ss
shr
mov
aad
ss
call
add
add
rcr
enter
call
ror
rcr
shr
sar
ror
dec
shr
cmp
int3
aaa
enter
enter
push
ret
or
or
sbb
dec
ret
sub
push
ret
dec
cmp
ret
ins
cmp
add
add
ret
call
ret
in
lock
add
add
lock
ret
and
adc
xor
and
inc
cmp
ret
push
ret
fs
ret
inc
ret
test
xor
xchg
cmp
movs
cmp
mov
pusha
ret
jo
aam
nop
ret
lock
or
cmp
adc
add
add
adc
and
adc
xor
mov
enter
enter
lds
cmp
fdivr
clc
(bad)
sub
adc
pop
mov
enter
(bad)
je
pusha
enter
enter
enter
enter
enter
enter
enter
enter
add
add
lds
pusha
lds
rol
xor
loopne
inc
cmp
int3
push
cmp
lds
lds
les
loopne
movs
cmp
lds
and
aam
add
in
lock
hlt
cmp
mov
(bad)
and
push
(bad)
xor
pusha
mov
push
cmp
add
add
jo
je
pusha
retf
test
pusha
retf
movs
cmp
mov
retf
or
cmp
mov
(bad)
adc
pusha
(bad)
and
rol
xor
loopne
inc
ds
push
ds
ds
je
loopne
cwde
ds
ds
sbb
in
ds
lds
add
add
or
sbb
pop
lds
push
lds
lds
lds
les
ret
mov
dec
ret
pushf
aas
cwde
ret
test
mov
aas
enter
cwde
ret
in
hlt
(bad)
call
iret
cld
das
mov
iret
sbb
enter
call
(bad)
dec
xor
enter
add
add
into
jl
clc
into
mov
mov
pushf
xor
iret
mov
xor
into
fdiv
or
in
xor
enter
enter
enter
enter
enter
enter
enter
enter
enter
iret
mov
mov
pushf
xor
into
mov
xor
add
add
into
fdiv
mov
in
xor
int3
or
enter
enter
call
int
xor
into
pop
xor
int
xor
int
xor
in
ror
hlt
xor
add
xor
adc
adc
and
xor
xor
or
xor
push
xor
retf
je
add
add
mov
int3
xchg
xor
movs
xor
retf
mov
ror
xor
int3
in
ror
hlt
xor
leave
add
mov
adc
adc
and
mov
xor
add
inc
xor
rcl
aam
xor
aam
xor
leave
test
leave
xchg
xor
enter
leave
mov
inc
leave
les
leave
aam
ror
in
add
add
ror
hlt
xor
retf
xor
adc
adc
and
xor
xor
or
xor
nop
retf
nop
retf
mov
leave
xchg
xor
xor
mov
ror
xor
ror
in
ror
hlt
xor
mov
adc
adc
and
mov
xor
add
inc
ss
add
add
adc
fs
je
and
test
xor
xchg
ss
movs
ss
mov
inc
into
les
xor
aam
ror
in
ror
hlt
ss
int
aaa
xor
adc
adc
and
xor
xor
or
aaa
jo
push
aaa
nop
int
aaa
nop
int
aaa
mov
int3
xchg
aaa
push
retf
movs
aaa
xor
mov
ror
aaa
add
add
mov
aam
ror
in
ror
hlt
aaa
loopne
add
mov
adc
adc
and
mov
xor
add
inc
cmp
mov
cmp
shl
test
xor
xchg
cmp
ret
xor
mov
inc
ret
les
xor
aam
rol
in
rol
hlt
cmp
add
xor
adc
adc
and
xor
xor
add
add
add
cmp
push
cmp
shl
test
mov
xchg
cmp
movs
cmp
shl
rol
rcl
shl
mov
dec
cmp
pop
cmp
mov
jl
xor
enter
in
movs
mov
pop
cmp
sar
add
fadd
pushf
cmp
cld
cmp
les
cmp
mov
cmp
mov
cmp
mov
cmp
ret
int3
cmp
(bad)
in
cmp
mov
cmp
mov
nop
cmp
lock
cmp
mov
ret
pusha
ret
cwde
ds
ret
sar
enter
int3
ret
adc
mov
inc
aas
add
add
dec
ret
fs
lock
pop
(bad)
enter
int3
aas
mov
hlt
(bad)
cmp
add
mov
leave
and
xor
pop
xor
mov
mov
enter
retf
or
xor
fs
leave
cwde
xor
leave
enter
in
and
adc
inc
(bad)
and
je
push
xor
(bad)
xchg
xor
add
add
(bad)
movs
xor
enter
clc
xor
leave
sub
and
pop
xor
xchg
xor
mov
lods
enter
enter
mov
pop
xor
int3
jl
cmp
pushf
xor
int3
fdiv
retf
add
enter
loopne
pop
xor
ror
mov
mov
mov
xor
aam
ror
in
ror
hlt
xor
pusha
mov
adc
adc
push
mov
mov
test
mov
xchg
sar
ss
push
aaa
pop
mov
pushf
aaa
jl
shl
mov
clc
aaa
mov
sub
lock
cmp
mov
cmp
cmp
int3
cmp
add
pusha
mov
push
cmp
mov
cmp
in
jl
add
jo
and
test
push
cmp
mov
cmp
and
xor
jl
fdiv
mov
cmp
ret
adc
rol
cmp
ret
ins
cmp
mov
cmp
mov
cmp
add
add
sar
in
rol
fs
xor
mov
cmp
pushf
shl
shr
shr
mov
ds
rol
xor
push
aas
mov
push
aas
inc
mov
movs
aas
nop
shl
rol
xor
hlt
dec
add
add
into
cld
das
sub
or
dec
into
sbb
dec
into
dec
xor
xor
mov
dec
shl
xor
into
add
add
inc
xor
xor
xor
xor
les
nop
into
call
xor
retf
and
ror
dec
xor
into
xor
retf
xor
enter
add
fs
add
je
hlt
das
ins
int
xor
int
xor
je
lods
int3
xchg
xor
loopne
sbb
push
xor
xor
je
ins
int3
test
dec
int3
test
mov
jecxz
xor
pusha
out
ss
in
mov
in
add
add
and
ss
hlt
mov
in
aaa
pusha
in
aaa
shl
xor
loopne
inc
aaa
mov
and
mov
pusha
cmp
call
mov
pushf
cmp
and
les
add
aam
sbb
fdivr
cld
mov
hlt
cmp
add
add
in
add
fdivr
adc
sbb
sbb
add
and
cld
mov
xor
sbb
cmp
and
inc
ds
dec
ds
push
ds
pop
ds
fs
mov
xchg
ds
pushf
ds
mov
lods
ds
mov
enter
enter
je
repz
fiadd
add
add
add
cld
das
push
lock
pop
jmp
xor
cmp
push
jmp
xor
jmp
dec
jmp
xor
out
mov
xor
dec
out
nop
xor
call
loop
ss
loop
ss
loope
aaa
aam
xor
in
inc
aaa
add
add
or
push
aaa
in
test
fsub
mov
xchg
out
cmp
add
je
add
fiadd
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
add
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
xor
add
and
add
and
add
add
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
add
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
add
add
je
add
fld
add
add
add
add
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
add
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
add
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
add
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
add
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
add
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
add
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
add
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
add
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
mov
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
add
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
add
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
add
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
add
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
and
add
and
add
xor
add
add
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
add
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
je
add
fld
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
add
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
add
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
add
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
add
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
and
add
add
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
add
add
fild
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
mov
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
add
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
add
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
add
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
add
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
and
add
add
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fadd
add
add
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
movs
fadd
add
add
mov
add
movs
fadd
add
add
je
add
fadd
add
add
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
add
movs
fild
add
add
mov
add
movs
fild
add
add
add
add
je
add
fild
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
xor
add
and
add
and
add
hlt
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
fiadd
add
add
add
fiadd
add
fiadd
add
add
movs
fiadd
add
add
mov
add
movs
fiadd
add
add
je
add
fiadd
add
add
add
add
add
add
add
xor
add
and
add
and
add
xor
add
add
add
xor
add
and
add
and
add
hlt
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
add
movs
fld
add
add
mov
add
movs
fld
add
add
je
add
fld
add
add
add
add
add
add
add
add
add
and
add
and
add
pop
and
int3
push
and
int3
dec
and
int3
and
mov
jne
call
pop
gs
stc
or
inc
mov
mov
inc
out
mov
inc
fadd
mov
add
mov
mov
inc
lods
mov
inc
scas
int
inc
outs
mov
inc
imul
mov
inc
adc
sahf
ror
adc
aam
xchg
int3
mov
sar
dec
add
cmps
clc
mov
idiv
inc
adc
sahf
clc
mov
dec
lock
cdq
clc
mov
add
add
std
dec
add
cdq
in
add
arpl
sbb
mov
xchg
arpl
mov
add
dec
dec
xchg
push
mov
(bad)
dec
sbb
sbb
inc
add
jno
dec
in
xchg
inc
add
add
add
ror
rcl
inc
lock
xchg
cmp
and
int3
dec
and
int3
mov
or
inc
aam
mov
inc
(bad)
mov
inc
rcr
inc
mov
mov
inc
lods
mov
mov
inc
scas
cwde
mov
inc
mov
mov
inc
add
add
jne
mov
inc
addr16
mov
inc
jns
mov
inc
imul
inc
bound
mov
inc
cmp
mov
inc
ds
data16
pop
mov
or
jmp
fstp
add
mov
std
mov
jmp
mov
xchg
add
add
fadd
rcr
(bad)
mov
jle
adc
or
add
test
stos
test
popa
jg
adc
add
pop
popa
inc
or
data16
fild
inc
adc
fadd
call
ror
hlt
add
popa
dec
cld
add
add
mov
add
or
ins
sub
call
test
stos
test
popa
jg
adc
add
mov
cmps
or
or
fsubr
sub
fadd
or
xchg
pop
je
or
inc
or
arpl
xchg
hlt
inc
add
add
mov
mov
fcomp
pop
(bad)
pop
(bad)
pusha
in
cmp
mov
inc
and
mov
inc
not
mov
inc
call
mov
mov
inc
fdivr
mov
inc
mov
jnp
dec
add
add
add
mov
out
fild
add
aas
xchg
lods
call
adc
inc
popa
pop
inc
call
mov
mov
add
or
lods
data16
mov
mov
test
(bad)
push
in
stc
jecxz
inc
icebp
mov
inc
call
add
add
int
inc
cli
iret
mov
inc
fdivr
inc
mov
int
inc
rol
inc
mov
(bad)
mov
std
dec
mov
add
mov
out
fild
add
xor
mov
dec
repnz
inc
dec
pop
inc
in
fcom
call
fisttp
cld
test
add
mov
test
lods
icebp
push
adc
sbb
int3
rcr
(bad)
sbb
int3
pop
push
in
xchg
lahf
add
cmc
sub
mov
or
je
push
inc
or
push
dec
or
cmp
cmp
fdivr
or
or
aaa
dec
add
add
push
cmp
xchg
push
ret
fcom
lods
in
add
push
inc
or
push
dec
or
sbb
int3
push
sbb
int3
dec
sbb
int3
fcom
cmp
test
push
cmp
push
lahf
hlt
add
push
inc
cld
mov
add
icebp
add
adc
test
fdivr
cld
xchg
fisttp
mov
mov
int3
leave
pop
vaddps
cmp
cmp
xchg
mov
add
inc
jle
or
dec
clc
xchg
sahf
clc
cmp
jmp
adc
inc
xchg
fmul
xchg
fisttp
in
sbb
int3
pop
pop
vsqrtps
(bad)
pop
(bad)
add
add
mov
add
add
cmp
mov
mov
xchg
add
out
push
add
mov
mov
std
dec
mov
sbb
fld
add
or
mov
sbb
int3
push
sbb
int3
dec
sbb
int3
fcom
cmp
inc
adc
add
add
fadd
mov
rol
or
push
cmp
or
dec
mov
add
dec
jle
or
inc
cld
xchg
outs
inc
xchg
mov
add
add
add
xchg
push
inc
lock
repnz
or
add
add
cwde
add
add
fisttp
add
jmp
dec
add
in
test
push
std
or
xchg
push
cmp
push
call
inc
inc
repnz
test
int3
fcom
cmp
test
push
cmp
xchg
(bad)
push
dec
push
dec
call
test
or
add
add
pusha
scas
add
(bad)
xchg
scas
loopne
dec
cmp
js
fadd
test
fsub
xchg
xchg
loopne
inc
fdivr
push
add
mov
add
pop
push
cmp
xchg
std
inc
std
push
cmp
xchg
ins
pop
xchg
scas
in
mov
inc
add
add
add
pop
(bad)
and
push
xchg
or
or
sub
pop
xchg
dec
or
lahf
lar
push
dec
or
fdiv
rol
xchg
push
adc
adc
hlt
cmps
popa
xchg
pop
rcl
loopne
add
add
loop
repnz
pop
vsqrtps
(bad)
pop
(bad)
push
in
cmp
pop
mov
sti
push
inc
xor
push
dec
or
xchg
in
mov
dec
xchg
push
inc
clc
xchg
mov
test
sar
fadd
sub
jne
xadd
(bad)
fadd
add
in
jne
add
add
xadd
je
add
xchg
test
push
cmp
test
add
cmp
or
add
repnz
shr
(bad)
fld1
test
shr
inc
rcl
inc
sub
add
or
aaa
add
or
push
cmp
xchg
jge
add
add
jbe
add
mov
pop
clc
dec
js
xchg
shr
gs
rol
push
maxps
inc
cmp
test
shr
gs
test
shr
inc
sbb
jge
jge
ins
or
jecxz
sbb
push
cmp
xchg
nop
clc
cmp
aas
ins
add
add
add
sbb
add
inc
push
fcomp
pextrw
push
in
rcl
xor
mov
shl
add
sbb
(bad)
adc
int3
pop
push
in
stc
hlt
test
push
cmp
xchg
std
push
or
call
adc
pop
in
inc
popf
dec
inc
cld
add
add
cmp
inc
mov
xor
inc
(bad)
push
sbb
push
cmp
xchg
or
sbb
adc
rol
and
push
add
xchg
cmps
or
enter
int
add
or
xchg
push
dec
sbb
or
fdiv
rol
add
add
add
mov
mov
test
scas
test
push
mov
fadd
(bad)
fdiv
add
xchg
cmps
call
mov
test
scas
test
push
mov
fadd
call
or
jge
xor
imul
fwait
push
mov
xor
add
add
add
inc
ror
jmp
xchg
push
push
ja
test
push
aas
and
xor
sti
jmp
call
xchg
or
lea
dec
aam
dec
jmp
xchg
sub
sbb
fadd
add
test
add
add
rol
xchg
clc
mov
aad
inc
push
iret
jge
or
dec
jle
and
add
test
add
cmp
or
cwde
lock
jg
or
call
aas
and
fadd
add
and
add
push
push
and
add
add
ins
or
fwait
xchg
push
inc
lock
dec
inc
push
cmp
call
sub
call
mov
nop
add
aad
dec
mov
rol
lock
popf
add
xor
pop
mov
or
push
std
xor
add
xchg
push
dec
and
push
dec
or
xor
sti
loop
jle
add
(bad)
clc
and
in
xchg
call
add
mov
test
push
dec
loopne
imul
adc
or
xchg
in
push
gs
mov
add
cmp
or
call
xor
push
cmp
adc
(bad)
dec
inc
add
or
cmps
clc
or
xchg
push
cmp
or
clc
jle
push
dec
lock
or
add
add
pop
jns
or
add
add
and
add
push
push
and
cmp
add
xchg
lock
idiv
or
aam
inc
gs
add
or
cdq
sbb
or
rol
inc
test
dec
mov
push
mov
xchg
addr16
xchg
movs
xor
dec
out
mov
add
add
cs
lods
xor
pusha
inc
add
push
in
dec
jmp
cmps
add
xchg
mov
cld
dec
sub
xor
sti
icebp
push
cmp
xchg
movs
sbb
sar
xchg
addr16
push
sahf
xor
rol
dec
xor
sahf
sbb
int3
out
mov
mov
add
add
cdq
mov
int3
fimul
mov
ret
leave
daa
vaddps
push
shl
add
add
cmp
mov
std
mov
xchg
test
or
cld
xchg
(bad)
inc
mov
test
dec
cld
mov
test
fistp
cld
ds
test
add
add
int3
in
xchg
ret
mov
mov
out
xchg
xchg
dec
cld
adc
test
(bad)
jmp
or
leave
sub
int3
pop
gs
stc
cld
test
arpl
xchg
(bad)
push
or
in
lahf
fmul
add
add
add
(bad)
clc
mov
inc
cmp
xchg
std
push
adc
lahf
clc
mov
xlat
std
dec
adc
lahf
in
add
gs
hlt
mov
add
xor
mov
dec
or
inc
pop
call
cmp
or
dec
std
adc
add
add
pusha
in
call
mov
add
mov
xchg
call
dec
in
xchg
sahf
in
dec
cmp
or
pop
mov
jmp
in
ror
daa
(bad)
daa
(bad)
fs
jns
xchg
arpl
xchg
(bad)
push
or
call
xchg
sahf
call
add
mov
add
pusha
mov
push
add
dec
lock
xchg
loopne
dec
cmp
js
fadd
test
fsub
xchg
test
std
push
add
mov
add
fsub
cld
xchg
imul
loopne
dec
call
inc
hlt
add
add
xchg
xchg
in
add
data16
inc
adc
mov
inc
out
test
mov
dec
or
add
pop
arpl
xchg
xchg
arpl
mov
inc
sbb
in
inc
adc
test
push
xchg
test
mov
dec
add
add
or
add
fild
mov
jle
adc
hlt
cmps
dec
xchg
pop
rcl
loopne
push
aaa
repnz
daa
vsqrtps
(bad)
daa
(bad)
(bad)
in
jns
mov
add
adc
call
gs
mov
in
push
mov
jecxz
add
add
push
mov
loope
rcr
out
jae
lahf
out
inc
retf
lahf
in
push
rcr
jmp
rcr
jmp
jb
lahf
mul
lahf
test
lahf
hlt
mov
xor
mov
dec
mov
push
call
mov
or
int3
inc
xor
dec
add
add
mov
call
mov
call
fld
div
xor
shl
shr
pusha
cmp
adc
icebp
rcl
xchg
push
sbb
add
daa
(bad)
daa
(bad)
daa
(bad)
popa
in
mov
xchg
add
adc
add
xchg
sahf
hlt
mov
xor
mov
cmp
xor
xor
adc
ror
inc
imul
or
inc
ret
cmc
push
xor
les
popa
dec
cld
mov
sub
inc
cmc
push
pop
mov
adc
retf
icebp
jne
xor
mov
push
push
ret
add
add
(bad)
int3
fldenv
(bad)
and
int3
leave
and
int3
cmp
cmp
rol
or
adc
add
enter
pop
jns
or
das
xchg
gs
clc
out
inc
jns
ins
or
mov
addr16
xchg
push
ret
(bad)
int3
pop
and
int3
push
and
int3
add
add
dec
and
int3
fsub
cmp
mov
add
adc
add
in
dec
xor
xchg
mov
inc
adc
add
mov
sub
jne
xor
mov
xchg
data16
xlat
add
rcr
(bad)
pop
(bad)
addr16
jns
mov
add
rol
or
adc
add
jecxz
dec
xor
jle
cmc
(bad)
call
adc
inc
or
das
add
fadd
add
cmps
hlt
or
jle
adc
cld
mov
push
in
idiv
jmp
adc
int3
icebp
jne
add
add
xor
or
inc
mov
cmp
xchg
push
ret
(bad)
int3
shl
(bad)
and
int3
cmp
cmp
cmp
or
pop
std
dec
lods
cmc
call
call
adc
inc
or
clc
xchg
cmc
jmp
arpl
mov
add
mov
stc
std
xor
or
call
mov
sbb
xor
add
fild
add
xor
nop
xor
mov
call
or
jge
adc
cmps
add
xor
push
mov
jp
out
xchg
sti
push
mov
add
add
xchg
sti
push
xor
mov
repnz
sub
inc
icebp
bound
xchg
mov
cmc
call
ret
cld
add
xor
call
test
repnz
push
nop
dec
xchg
cld
fisubr
dec
mov
mov
push
mov
test
das
repnz
lea
mov
add
add
das
repnz
fisttp
xchg
popa
jge
jp
xchg
xchg
call
pop
inc
adc
push
das
cld
pop
sbb
add
cmp
pusha
ss
repnz
mov
das
bnd
or
jl
push
das
repnz
mov
pop
add
add
fsubr
repnz
xchg
xchg
sti
retf
mov
mov
(bad)
cmp
cs
or
pop
xchg
cs
xchg
dec
gs
sub
call
mov
or
bound
repnz
mov
cs
mov
into
or
add
add
or
cs
dec
pop
xor
sbb
pop
(bad)
mov
cmc
dec
test
repnz
jl
imul
sub
loop
pop
(bad)
nop
out
call
cmps
mov
push
push
jl
mov
repnz
push
cmp
stos
sub
cmc
call
xor
(bad)
stc
adc
repnz
add
push
push
xor
jb
inc
(bad)
nop
out
cmc
jmp
mov
jmp
adc
repnz
push
inc
sti
cmp
cmc
jmp
fdivr
call
adc
repnz
cli
add
idiv
repnz
mov
push
jl
xlat
sub
fs
push
idiv
retf
mov
add
mov
idiv
mov
xor
push
push
jl
cmps
sub
inc
rcl
cli
xchg
sub
(bad)
nop
sub
inc
xor
(bad)
call
sub
dec
dec
push
(bad)
cli
pop
sub
(bad)
mov
cmc
dec
mov
push
sub
push
push
push
sti
cli
and
(bad)
nop
fcomip
call
xchg
mov
add
daa
repnz
jg
jl
imul
repnz
popa
add
jmp
(bad)
ficomp
repnz
jl
(bad)
sub
(bad)
popa
push
sti
mov
outs
(bad)
nop
shl
jmp
daa
repnz
and
sub
jns
popa
or
jp
add
mov
cmc
jmp
mov
push
and
add
add
bnd
popa
push
sti
inc
sub
enter
mov
repnz
sub
jne
popa
adc
or
gs
mov
cmc
(bad)
cli
sar
push
and
sub
popa
shl
sti
shr
arpl
nop
push
inc
mov
bnd
and
sub
gs
pusha
sbb
add
add
call
dec
es
and
sub
gs
pusha
cmp
bound
ins
(bad)
nop
mov
mov
push
sub
fs
pusha
inc
sti
sub
ins
(bad)
mov
mov
push
jl
push
sub
dec
rcr
sti
repnz
nop
cdq
cmc
inc
add
add
mov
repnz
jl
(bad)
sub
ins
retf
pop
dec
sti
mov
(bad)
cmc
jmp
and
add
repnz
test
and
jns
push
add
add
rcr
test
fadd
inc
add
add
add
pop
mov
cli
adc
jle
std
and
jl
paddusb
mov
mov
cmc
imul
repnz
xchg
push
test
(bad)
sub
push
xchg
dec
icebp
cli
mov
je
inc
mov
jl
cmps
sub
push
xchg
cli
xchg
sub
loopne
mov
push
mov
sub
push
add
add
xchg
cli
push
push
(bad)
mov
push
test
push
sub
push
xchg
dec
icebp
cli
inc
sub
loopne
mov
push
jl
es
push
xchg
push
icebp
cli
sbb
push
(bad)
mov
mov
add
fadd
call
jl
out
repnz
cmc
dec
loop
ficomp
or
imul
mov
add
or
fdivr
mov
repnz
cmp
dec
test
push
jl
xchg
daa
repnz
xchg
pop
(bad)
sti
and
mov
mov
jns
daa
repnz
nop
xchg
sahf
add
mov
test
lea
(bad)
fist
xchg
es
repnz
xchg
pop
and
call
mov
or
add
push
push
sti
repnz
mov
push
mov
mov
call
jl
(bad)
es
movs
(bad)
jmp
adc
retf
mov
fild
push
xchg
icebp
cli
and
mov
mov
(bad)
mov
es
stc
arpl
mov
add
add
(bad)
test
and
(bad)
fst
(bad)
fcom
lock
es
xchg
pusha
(bad)
sti
sbb
push
mov
mov
(bad)
repnz
mov
mov
cmc
jmp
mov
(bad)
frstor
repnz
or
and
and
call
mov
or
add
add
add
push
push
sti
mov
dec
mov
mov
(bad)
mov
and
jmp
ins
mov
fnstcw
ss
call
cli
sbb
cmc
dec
mov
call
div
and
les
bound
dec
fdivr
xchg
add
add
cmp
repnz
aas
push
cmp
pop
push
test
(bad)
and
push
xchg
sti
mov
dec
mov
mov
adc
iret
mov
xchg
popf
add
nop
xchg
(bad)
jp
test
mov
(bad)
mov
and
push
xchg
sti
dec
and
call
mov
or
add
pop
push
sti
add
add
and
mov
pop
push
mov
idiv
or
repnz
test
and
push
cmc
imul
loop
mov
mov
rcr
xchg
mov
cli
mov
add
xchg
push
(bad)
dec
and
push
movs
xchg
out
mov
add
cdq
test
nop
in
cmc
push
test
pop
es
mov
cdq
fmul
dec
mov
(bad)
frstor
dec
test
cdq
call
jmp
lea
(bad)
mov
cwde
in
mov
cmc
(bad)
cli
mov
(bad)
cmp
dec
test
cwde
ror
lea
call
dec
test
cwde
mov
add
push
jno
mov
out
cmc
call
and
or
mov
or
fadd
mov
push
pop
push
sti
push
and
fdiv
mov
lea
(bad)
mov
and
push
and
pop
mov
inc
or
add
add
and
push
xchg
icebp
cli
loop
push
mov
mov
call
lahf
hlt
mov
arpl
mov
repnz
cmp
dec
call
xchg
repnz
xchg
dec
(bad)
sti
jp
push
mov
mov
jne
and
adc
adc
xor
add
add
inc
mov
xchg
cmp
push
jl
es
push
xchg
sti
adc
push
call
mov
or
add
inc
push
sti
jmp
mov
mov
call
jl
mov
repnz
movs
(bad)
in
jmp
sbb
or
and
push
add
add
xchg
xchg
cli
jp
push
mov
mov
(bad)
mov
and
and
retf
(bad)
test
and
(bad)
fst
mov
and
push
xchg
sti
adc
push
mov
mov
sar
repnz
mov
xchg
xchg
add
js
cmc
(bad)
fimul
add
in
test
pop
push
mov
mov
repnz
xchg
sti
stos
pop
push
call
mov
or
add
push
push
sti
sbb
mov
das
dec
mov
mov
(bad)
mov
pop
repnz
xor
pop
mov
inc
or
pop
repnz
xchg
xchg
rcl
add
xchg
cli
adc
dec
mov
mov
call
repz
mov
std
xchg
xor
repnz
cmp
pop
push
test
mov
repnz
xchg
sti
stos
push
dec
mov
mov
or
push
(bad)
push
lea
mov
inc
add
add
dec
call
mov
add
(bad)
cmp
ins
jbe
push
xchg
test
dec
push
pushf
jo
push
repnz
push
test
xchg
push
ret
or
fadd
add
fadd
add
fadd
add
fadd
add
add
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
add
add
fadd
add
fadd
add
fadd
add
fadd
add
mov
dec
add
mov
dec
add
dec
add
dec
add
mov
dec
add
dec
add
dec
add
mov
dec
add
add
add
mov
dec
add
mov
dec
add
mov
dec
add
dec
add
add
dec
add
dec
add
mov
dec
add
mov
dec
add
add
add
mov
dec
add
add
mov
dec
add
dec
add
dec
add
dec
add
mov
dec
add
mov
dec
add
mov
dec
add
mov
dec
add
mov
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
