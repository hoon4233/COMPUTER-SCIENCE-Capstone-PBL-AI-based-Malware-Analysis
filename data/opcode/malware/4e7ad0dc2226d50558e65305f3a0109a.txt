call
mov
ret
lahf
(bad)
xlat
arpl
mov
js
das
pop
cdq
xor
pop
enter
(bad)
call
xlat
test
ds
sti
rcl
daa
cs
or
leave
mov
test
ret
sbb
gs
rcl
inc
les
ficomp
cwde
cmps
scas
sub
repz
mov
scas
jno
jg
sahf
and
dec
and
pop
mov
loopne
das
daa
stc
popa
mov
and
mov
loopne
and
xlat
dec
rcl
xor
pop
int
jle
and
(bad)
fstp
enter
jne
adc
or
pop
inc
inc
jb
sbb
(bad)
scas
ins
xor
mov
jno
outs
push
test
popa
scas
cmp
test
push
loopne
fwait
sbb
cli
leave
dec
xor
stos
cmp
jecxz
inc
lock
stc
popf
popa
jo
push
loopne
and
mov
(bad)
aam
sub
leave
inc
out
mov
arpl
popf
inc
mov
loop
push
push
mov
fisubr
shl
mov
mov
adc
hlt
scas
pop
or
push
cmp
mov
(bad)
sub
cmp
push
cld
push
mov
pop
mov
push
in
test
dec
inc
outs
sbb
add
cli
test
aam
mov
out
inc
repnz
cs
scas
(bad)
in
xchg
xor
fadd
cli
add
sub
arpl
inc
ficom
inc
retf
shl
jb
cdq
test
or
mov
pusha
or
add
sub
push
ds
dec
mov
mov
iret
mov
ds
fidiv
iret
push
cs
mov
add
rcr
scas
mov
mov
imul
lock
mov
push
cld
ror
outs
or
bound
push
test
push
mov
out
or
mov
mov
into
iret
mov
stos
in
fadd
mov
inc
mov
xor
mov
ror
sti
mov
or
popa
mov
mov
ja
mov
jb
into
or
ja
dec
dec
lea
(bad)
popf
pop
lahf
cld
xor
mov
sahf
and
dec
call
pop
(bad)
bound
gs
ins
and
mov
add
movs
and
ins
pusha
mov
pop
imul
fisubr
jmp
lea
and
adc
fisubr
aas
addr16
xor
scas
jmp
cmps
ja
fbld
and
mov
add
push
and
push
xor
mov
add
pop
dec
sbb
fbld
and
sbb
mov
call
retf
xor
dec
popa
leave
iret
and
mov
sbb
leave
jns
popa
frstor
pop
and
xor
bound
in
movs
jne
pop
fs
loopne
in
sbb
mov
les
and
cwde
push
addr16
shl
or
inc
int
sahf
push
and
sahf
cdq
xchg
sahf
inc
mov
movs
pop
popa
frstor
sahf
and
sbb
cmps
pop
dec
call
das
jae
and
frstor
pop
and
pop
cs
xor
and
aas
pop
bound
fbld
ins
movs
dec
xchg
arpl
gs
and
sub
lock
(bad)
mov
loope
aad
cld
nop
(bad)
repz
ret
push
ret
push
aad
cld
add
mov
test
shr
pop
ret
pop
aad
cld
mov
sub
rol
push
mov
pop
dec
aad
cld
push
(bad)
out
jmp
ret
push
shl
jmp
ret
pop
aad
cld
aam
clc
ja
jmp
repz
ret
push
aad
cld
(bad)
sti
jmp
ret
push
ret
ss
lock
aam
jecxz
pop
ret
pop
arpl
jmp
ret
jo
mov
out
sahf
addr16
push
dec
int
jae
lock
in
mov
pop
ret
push
aad
cld
(bad)
sti
jmp
ret
push
ret
push
mov
cmp
push
int
int
mov
cmc
and
lock
mov
mov
test
push
push
xor
int
and
mov
sahf
mov
fbld
add
sub
xor
jmp
add
cmp
lahf
movs
push
je
jbe
cmp
out
rcr
ss
mov
xchg
cmps
xchg
mov
xchg
movs
shl
adc
pop
push
jbe
rcr
lods
fisub
pop
mov
sub
inc
mov
and
mov
mov
lahf
and
dec
and
fbld
sbb
int
and
leave
in
ja
gs
cmp
dec
ret
ficomp
cmps
xchg
scas
push
mov
sbb
(bad)
rcr
jmp
sahf
and
sbb
fsubp
pop
sbb
xor
fbld
lahf
pop
xchg
dec
push
and
mov
sahf
leave
fistp
shl
fbld
stos
leave
call
inc
aad
sbb
mov
gs
sbb
and
pop
gs
je
inc
aaa
lahf
mov
popa
cdq
out
jb
fidiv
fs
ret
fucomp
movs
and
retf
xchg
frstor
jl
xchg
cwde
mov
gs
fst
loop
push
pop
jns
retf
popa
frstor
scas
adc
frstor
pop
and
leave
loop
cwde
pop
mov
fidiv
ja
and
mov
and
ins
and
sub
cwde
push
adc
and
(bad)
movs
fcomp
imul
imul
cmps
bound
jne
mov
call
fistp
div
pop
addr16
call
xchg
call
inc
addr16
neg
push
stos
dec
and
sbb
fmul
push
fstp
inc
fmul
jmp
inc
fsubr
stc
xor
es
dec
jle
adc
popf
mov
frstor
xor
loope
lahf
jle
popf
mov
mov
and
mov
fisub
and
sbb
xchg
fbld
pushf
and
xchg
lods
loopne
jo
and
mov
pop
loopne
mov
xchg
jmp
push
movs
sub
jmp
pop
lahf
jle
popf
mov
popa
aaa
xor
fsub
xor
pop
and
mov
sahf
ret
sti
loop
fsubr
fldenv
sahf
addr16
sahf
fbld
sahf
sub
cmc
iret
dec
adc
dec
and
mov
add
(bad)
(bad)
call
outs
inc
mov
jnp
sbb
jge
les
loope
(bad)
stc
push
fwait
aad
clc
stos
stc
dec
stc
rcr
jns
sbb
mov
(bad)
cmp
push
cdq
lods
or
mov
adc
jl
in
sub
push
aad
mov
dec
pop
cmc
repnz
(bad)
dec
ret
dec
add
sub
adc
jl
jl
outs
mov
std
data16
lods
adc
pop
mov
fidivr
(bad)
fsubr
out
dec
cmp
popf
mov
cli
mov
jle
enter
dec
(bad)
mov
in
idiv
lahf
(bad)
shl
mov
sbb
fnstsw
inc
and
je
or
rcr
push
aas
int
and
mov
add
sub
push
add
add
loope
fisttp
cli
sti
(bad)
leave
aam
aad
clc
xchg
into
dec
stc
rol
popa
xor
movs
cmc
cli
cmp
into
push
push
js
sub
pop
cmps
dec
and
lods
inc
xor
cdq
or
pop
add
and
fst
fld
addr16
test
mov
pop
aam
adc
xor
and
sub
or
sub
push
mov
adc
cld
push
inc
adc
mov
lahf
dec
in
es
sub
xor
aam
xlat
lds
(bad)
pop
and
sub
xchg
hlt
ret
mov
or
jg
push
movs
pop
xchg
jb
jg
push
movs
ds
jb
jg
push
movs
push
xchg
jb
jg
push
movs
(bad)
xchg
jb
jg
push
movs
ficom
push
movs
mov
mov
movs
jle
pop
and
push
cld
sbb
into
push
cld
daa
rcl
jae
mov
ja
or
cmps
mov
cmp
inc
inc
mov
aaa
jb
add
xchg
jo
pop
into
jbe
dec
test
scas
lock
cld
cmp
pop
mov
rcr
jb
fistp
jno
fwait
mov
cld
fwait
mov
in
mov
jns
mov
sub
addr16
fistp
jno
fwait
mov
cld
fwait
mov
in
mov
jns
mov
jns
ja
stc
pop
or
adc
adc
xchg
movd
mov
fwait
mov
cld
fwait
mov
in
pop
xlat
dec
inc
add
push
adc
xchg
mov
addr16
out
test
aaa
leave
or
push
xchg
jb
jg
push
movs
mov
mov
mov
daa
push
jne
stc
or
pusha
jb
xor
jno
(bad)
cld
push
sahf
mov
daa
xor
xchg
daa
shl
test
mov
and
dec
je
ror
test
out
je
mov
cs
movs
aas
enter
mov
mov
xlat
aad
movs
out
sbb
daa
jno
cmps
pop
test
(bad)
xchg
cmp
mov
push
xchg
xchg
jg
mov
pop
test
or
pop
(bad)
ss
xchg
cmp
pop
jo
mov
mov
push
cmps
pop
push
sbb
idiv
mov
aas
sub
lea
loope
cmps
or
sbb
push
and
(bad)
call
clc
stos
stc
adc
lock
push
scas
fisttp
pushf
aad
imul
test
push
inc
fiadd
cmc
ins
push
cld
scas
mov
fnstenv
repnz
push
inc
sub
dec
outs
adc
and
and
adc
scas
icebp
add
daa
xlat
fnstcw
loop
(bad)
mov
frstor
fstp
aam
sub
movs
rcr
push
and
ss
jl
shld
and
(bad)
or
and
and
jno
jle
fsub
fldcw
mov
and
add
out
mov
inc
jmp
ss
dec
mov
movs
pop
sub
movs
or
mov
(bad)
cmp
xchg
test
mov
rcr
and
rol
mov
daa
leave
jecxz
sub
test
and
mov
retf
cmc
add
into
mov
pop
sbb
add
mov
xor
jns
adc
fiadd
test
mov
sub
mov
movs
add
mov
pop
mov
hlt
mov
add
retf
or
imul
cdq
add
retf
cs
or
push
or
call
sub
mov
jmp
and
dec
inc
push
push
adc
test
iret
mov
add
je
dec
add
inc
push
arpl
jb
retf
pop
xchg
or
arpl
mov
sbb
pop
adc
dec
rol
dec
sub
js
inc
cld
jmp
pop
int3
xor
pop
inc
add
xor
inc
add
mov
push
xchg
add
fistp
dec
sbb
lods
rcl
movs
dec
inc
inc
pop
mov
inc
push
push
xchg
push
push
adc
push
add
cli
aam
sbb
inc
mul
out
std
dec
mov
jae
inc
pop
pop
mov
push
pop
inc
movs
push
and
test
in
push
scas
inc
push
mov
int3
and
stos
xor
or
mov
mov
dec
imul
lahf
lods
add
pop
inc
cld
jmp
add
pop
inc
cld
jmp
add
mov
push
pop
inc
add
pop
xchg
cmp
pop
int3
add
int3
and
jp
ins
add
pop
inc
dec
(bad)
iret
cdq
mov
ret
add
pop
icebp
lods
pop
inc
sub
es
les
(bad)
call
clc
stos
stc
(bad)
rcr
sbb
mov
inc
(bad)
cld
mov
push
retf
mov
es
ss
adc
lds
aas
cmc
daa
sahf
mov
rcr
inc
std
xchg
push
sti
data16
pop
pop
ds
mov
aam
push
dec
xchg
sbb
ret
movs
jmp
mov
sub
push
add
add
and
bound
into
scas
xlat
fnstcw
loop
fld
(bad)
fcomip
mov
in
idiv
out
and
and
xchg
xchg
mov
ret
xchg
outs
xor
fstp
(bad)
jp
jg
sar
add
lds
(bad)
shl
xchg
mov
sub
xlat
retf
test
adc
fisttp
daa
cmp
test
sahf
imul
adc
mov
out
jmp
mov
sbb
cli
mov
test
not
sub
mov
cmp
fcom
cmps
mov
jmp
ficomp
cmp
add
mov
repz
push
add
sbb
les
xor
in
mov
inc
push
mov
ins
retf
mov
mov
icebp
adc
ss
push
or
or
adc
retf
and
shl
xchg
push
retf
(bad)
(bad)
pusha
jmp
(bad)
fdiv
pop
xchg
loop
stos
xor
mov
cli
hlt
ret
or
cmc
mov
icebp
and
dec
pusha
inc
mov
retf
bnd
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
leave
repnz
mov
icebp
sar
dec
loop
jb
xchg
aad
add
frstor
loopne
retf
or
jo
dec
push
mov
pop
in
retf
or
xchg
jo
dec
out
pushw
outs
retf
jmp
aas
repnz
outs
retf
or
jo
dec
push
jl
loope
mov
push
xchg
jo
dec
out
pushw
outs
retf
jmp
aas
repnz
outs
retf
or
jo
dec
push
cmp
loope
mov
out
retf
or
xchg
jo
dec
out
pushw
outs
retf
jmp
mov
mov
leave
mov
repnz
retf
(bad)
mov
lock
je
dec
stc
ds
out
xor
es
lock
retf
(bad)
leave
lock
sbb
mov
lock
je
dec
stc
ds
out
popa
sub
xchg
inc
data16
retf
xor
xchg
data16
retf
cmp
leave
bnd
cmp
mov
stc
(bad)
and
lahf
push
leave
repnz
leave
repnz
xchg
dec
mov
xchg
lock
popa
aam
call
dec
ins
popa
or
mov
xor
dec
addr16
(bad)
clc
(bad)
shl
cli
(bad)
jmp
cli
(bad)
repz
call
xchg
fisub
loop
leave
repnz
cmp
mov
jns
out
ds
out
aad
mov
imul
loopne
mov
rcr
xchg
leave
lock
cs
repnz
mov
retf
mov
out
es
es
out
cmp
sub
jno
mov
hlt
loop
mov
mov
retf
mov
rcl
dec
or
xchg
ds
es
sahf
sbb
loope
xor
xchg
leave
lock
ins
xor
mov
push
leave
lock
popa
outs
shr
ins
sbb
out
cli
or
(bad)
mov
xchg
retf
mov
loop
retf
(bad)
retf
(bad)
leave
lock
ins
xor
mov
outs
retf
retf
and
retf
fmulp
aam
inc
loopne
cmp
retf
mov
and
retf
jp
xchg
cmp
retf
sahf
cs
out
(bad)
(bad)
sbb
xchg
sub
(bad)
pop
iret
ja
jle
xor
test
push
mov
icebp
cli
mov
sti
sti
outs
fmul
add
pop
cli
outs
xchg
dec
jl
rol
hlt
cli
or
mov
xor
pop
push
ins
cmp
xchg
out
outs
cmp
test
movs
mov
sahf
sbb
or
xor
push
int
(bad)
shld
xor
(bad)
cmp
add
pop
dec
or
into
jns
fldcw
(bad)
fadd
pop
je
icebp
mov
add
cli
loop
test
xor
lods
(bad)
dec
movs
fwait
mov
(bad)
shl
cmp
fisttp
mov
jmp
push
in
pop
add
mov
(bad)
xor
sbb
aad
add
or
sub
fisttp
dec
repz
add
push
push
sub
sbb
mov
cli
mov
ss
xchg
lods
mov
xchg
add
rcr
leave
out
sub
ss
mov
sahf
adc
aad
sub
and
mov
lods
or
dec
faddp
ret
and
out
mov
es
add
data16
sbb
stc
movs
and
inc
std
inc
push
adc
stos
fild
sub
rcr
pop
ss
xor
or
das
test
pop
lea
(bad)
jo
sbb
test
sbb
(bad)
jl
ss
push
mov
loopne
stc
leave
jg
push
jae
pop
or
call
into
xlat
pop
pop
in
xchg
int3
movs
cmps
mov
movs
std
xor
push
pop
dec
ja
push
inc
dec
dec
gs
fwait
sbb
icebp
jmp
lock
vpsubd
inc
stc
loop
inc
clc
ficomp
aad
cli
fwait
adc
loope
fwait
push
loopne
fwait
adc
jmp
repnz
(bad)
jmp
ficomp
in
sar
fwait
sub
shr
fwait
ins
shl
fwait
sub
fsqrt
fwait
and
fldl2e
gs
gs
push
dec
lahf
sub
stc
loop
and
push
sbb
inc
(bad)
jmp
add
popa
hlt
adc
cdq
hlt
fnstsw
nop
dec
fidiv
imul
enter
jb
stc
call
fld
mov
mov
mov
push
stos
fwait
std
pop
stos
fwait
std
pop
stos
fwait
std
pop
stos
fwait
std
pop
stos
fwait
cmc
pop
enter
stos
fwait
std
pop
push
repz
popa
in
(bad)
stc
push
dec
(bad)
push
inc
xlat
mov
mov
mov
inc
xlat
fstp
int
jno
ror
in
iret
sar
int
jno
repz
addr16
inc
lahf
leave
fcmove
leave
icebp
imul
addr16
inc
iret
fnstcw
pop
jno
push
dec
addr16
inc
mov
pop
int
push
imul
jmp
push
fldenv
jp
fs
(bad)
popf
ror
(bad)
xchg
fbstp
mov
or
shld
lea
fadd
or
add
es
imul
inc
pop
push
sbb
cmps
or
pop
stc
push
cdq
jnp
hlt
in
push
and
add
dec
xchg
iret
pop
div
fdiv
mov
hlt
adc
stos
jbe
and
neg
and
test
and
push
ss
inc
sbb
in
sti
jns
movs
sti
jns
xchg
vmwrite
lock
test
popf
sub
loop
push
jp
mov
stc
mov
pop
cmovge
es
and
js
xor
adc
pop
sar
mov
out
dec
fadd
data16
add
pop
and
jnp
lock
in
mov
cli
mov
mov
pop
cmps
lds
pop
ret
hlt
fsubr
(bad)
and
push
pop
es
jp
inc
sti
aaa
fcmove
cmps
fnstcw
sti
clc
lock
mov
jnp
stc
dec
push
push
mov
clc
jnp
in
push
cli
push
xor
inc
inc
lock
jb
sbb
push
jp
xor
cmp
ins
jo
js
xor
(bad)
push
out
iret
loope
es
out
mov
shl
mov
arpl
movs
xchg
push
lods
es
sbb
xchg
cmp
in
retf
cmps
cld
cmps
pop
inc
data16
arpl
lds
shl
xchg
arpl
xchg
push
lods
es
sbb
xchg
cmp
mov
xchg
inc
out
lahf
cmp
cld
es
(bad)
clc
mov
test
xchg
push
out
xchg
loope
es
out
mov
jecxz
out
in
popa
inc
pavgw
mov
inc
movs
outs
loope
packsswb
aas
push
xor
ins
test
xchg
mov
dec
(bad)
loopne
lods
push
add
xchg
mov
and
dec
(bad)
push
or
cmp
(bad)
sar
(bad)
clc
mov
rcr
hlt
iret
pop
cwde
jbe
fldenv
je
jmp
xor
neg
sbb
mov
cmps
test
clc
ja
mov
push
xor
pmulhw
dec
or
mov
movs
push
lea
and
sti
js
mov
aaa
jo
in
clc
into
pop
(bad)
movsx
xor
pop
pop
add
and
jnp
jp
pop
or
dec
jo
sar
shl
mov
call
and
jnp
into
push
and
in
js
cmp
bswap
out
cmps
push
mov
xchg
mov
pop
mov
js
aaa
das
fsubr
sar
push
push
push
and
mov
cmp
clc
int3
js
es
int
test
out
xchg
cmps
outs
jae
test
cld
dec
push
dec
test
(bad)
hlt
adc
push
cmps
and
js
js
pop
popf
mov
(bad)
clc
outs
lods
rcr
fs
pop
push
ins
lds
xor
fnstenv
std
icebp
inc
les
outs
test
clc
xchg
sar
push
sti
adc
test
(bad)
jb
inc
mov
jno
in
jnp
enter
outs
xchg
jb
cmps
inc
pop
cmc
loopne
daa
ja
sbb
push
jne
popf
daa
stos
inc
pop
aas
cmc
loopne
daa
ja
sbb
push
cmc
xchg
popf
daa
hlt
pusha
outs
fs
loope
pop
ja
sbb
pop
cmc
loopne
cmps
(bad)
stc
sbb
push
cmc
loopne
daa
cmc
loopne
daa
cmc
loopne
daa
cmc
loopne
daa
out
lods
sbb
pop
loopne
pop
cmc
cmc
loopne
daa
jecxz
sbb
pop
loope
(bad)
ins
imul
mov
cmc
rcr
push
inc
lahf
popf
or
pusha
xchg
xor
popf
xchg
cmc
loopne
daa
mov
mov
mov
hlt
pusha
xchg
or
bound
aad
dec
xor
pusha
popf
daa
out
fcom
jne
popf
daa
inc
cmp
loope
lahf
push
lock
and
jecxz
psrad
mov
loope
(bad)
ins
jmp
sbb
pop
sar
adc
daa
cmc
loopne
xor
jb
popf
xchg
test
test
jne
popf
daa
or
je
cmc
loopne
addr16
popf
mov
loopne
ins
imul
cmc
popa
xchg
pop
add
das
cmc
adc
es
loopne
add
loopne
ja
mov
add
(bad)
imul
cmc
adc
daa
cmc
pusha
fisttp
xor
call
sub
xchg
sbb
pmulhuw
imul
inc
scas
iret
in
cmps
fucom
imul
shl
daa
pop
sub
push
loop
cmps
aad
sbb
shr
sbb
out
add
cmps
aad
jg
or
bound
scas
mov
jb
movs
mov
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
(bad)
jnp
shld
shld
shld
shld
and
jnp
xor
and
inc
lea
movs
dec
or
xor
and
imul
movs
jle
(bad)
lea
movs
jnp
shld
shld
es
pop
lea
movs
push
lea
pop
lea
and
jnp
das
and
sti
aaa
or
mov
push
out
in
cmp
mov
sti
or
sqrtps
(bad)
and
into
cmp
ins
das
and
sti
aaa
adc
ins
lods
(bad)
and
(bad)
out
clc
psubb
push
movs
sbb
je
fdivr
movs
ins
addr16
jo
pop
frstor
movs
movntq
out
scas
sti
int
in
push
mov
xchg
push
push
rcl
or
mov
push
cld
dec
cli
sub
jb
sbb
sar
or
lea
shl
cwde
(bad)
fcmovnu
pop
or
jo
mov
(bad)
js
bound
test
mov
and
sti
sar
xor
movs
popf
jnp
jp
fwait
jae
push
mov
ins
icebp
push
call
arpl
clc
xor
or
jno
jp
js
movs
mov
or
mov
cmps
adc
sti
xchg
xchg
fcmove
or
iret
mov
lock
test
in
xchg
push
mov
jnp
inc
je
rcl
(bad)
jb
sar
jnp
mov
jb
pop
push
pop
sar
xor
pop
aam
into
push
mov
cmps
stc
dec
cli
push
lds
cmp
je
(bad)
cmps
jb
in
bound
add
jne
arpl
add
pop
add
jecxz
and
pop
mov
add
in
xchg
lss
mov
fwait
pop
jb
pop
add
in
out
(bad)
cmp
xor
mov
(bad)
adc
sbb
(bad)
and
ror
hlt
pop
or
(bad)
ror
dec
pop
jge
push
pop
repz
dec
cmp
push
popf
sahf
repz
scas
inc
(bad)
cmp
iret
pop
in
jb
fcomi
add
pop
cmps
jb
adc
bound
push
cld
dec
jp
test
xor
or
je
test
lea
and
sti
ins
hlt
js
jns
fmul
(bad)
cmps
scas
pop
movs
sti
jns
mov
lea
(bad)
clc
ins
jno
push
jl
pop
test
and
sti
xchg
cli
cmps
sbb
or
cmps
mov
jp
(bad)
jg
js
clc
retf
pop
sub
(bad)
cmps
add
push
cmps
dec
jb
push
sbb
je
mov
fisttp
lods
js
mov
loope
push
push
push
fwait
jae
push
js
cli
js
jp
in
jae
pop
mov
sar
dec
jg
lea
xor
pop
cmpxchg
xchg
js
jb
pop
pop
jae
pop
push
inc
into
js
mov
movs
fs
jae
jmp
clc
js
or
(bad)
cli
xchg
jbe
movs
in
hlt
pop
cmps
add
inc
test
scas
stc
sar
sub
add
js
jb
pop
(bad)
sahf
cmp
hlt
push
rol
xchg
dec
xchg
xchg
mov
jl
mov
nop
arpl
enter
or
adc
xchg
jo
and
out
adc
(bad)
xor
hlt
cld
out
xchg
retf
imul
cmc
mov
jl
inc
ins
test
movs
pusha
retf
ins
xchg
jecxz
dec
(bad)
and
inc
(bad)
lods
jns
shld
shld
shld
shld
fbstp
mov
or
shld
ret
xor
or
fnsave
cwde
(bad)
shld
aas
cli
jnp
das
movs
outs
xchg
lock
jnp
sbb
loopne
lea
add
jnp
das
and
jp
sahf
and
jnp
adc
es
sub
rcl
int3
jo
push
or
(bad)
cmc
fsub
data16
xchg
rol
pop
icebp
repz
sub
push
cld
dec
jp
test
js
stc
cmps
fadd
lea
mov
jns
cmps
jnp
das
and
jp
rol
xchg
psubb
ins
pop
jbe
lock
clc
fstp
lods
retf
(bad)
daa
loopne
idiv
jp
xor
call
adc
repz
lahf
add
jnp
(bad)
sar
(bad)
xchg
push
pop
cmps
adc
test
xchg
mov
xor
mov
jns
(bad)
js
lea
jbe
lea
stc
leave
fcmovne
sti
into
pop
mov
adc
stc
mov
fdivr
cmps
dec
inc
mov
push
stc
push
sti
mov
jo
test
jge
or
pop
js
mov
and
push
mov
es
cli
in
js
inc
(bad)
jl
mov
pop
or
cli
jmp
cmp
push
rcr
jb
xchg
push
fld
sbb
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
nop
push
test
loopne
push
sub
pusha
retf
push
sub
lock
sub
enter
cs
loopne
or
push
pusha
jne
or
adc
outs
adc
aas
xchg
cs
push
into
push
sub
or
scas
and
jp
aad
mov
adc
enter
cs
jp
mov
pusha
jne
or
hlt
mov
pusha
or
or
lea
bound
xchg
mov
xchg
push
or
sub
loopne
push
or
jne
(bad)
clc
sub
cmp
scas
push
or
ins
test
popf
inc
retf
js
add
sti
lea
cmps
jg
shld
lea
cwde
(bad)
shld
jp
jnp
or
in
(bad)
retf
pop
das
and
mov
or
xchg
jecxz
dec
(bad)
and
inc
(bad)
lods
jg
shld
shld
shld
shld
dec
cmp
pop
in
cmps
pop
or
shld
xor
sbb
mov
or
dec
cmp
(bad)
shld
aas
cli
jnp
das
and
push
aas
shld
sbb
loopne
lea
add
jnp
das
and
dec
mov
jp
jnp
jbe
(bad)
pushf
sub
sti
xchg
sub
cmp
jnp
fcmovnu
arpl
ins
mov
jno
pop
pop
cmp
cmp
dec
out
or
push
mov
and
mov
sar
clc
ds
cli
jnp
das
and
cmps
inc
adc
xchg
xchg
dec
jb
call
add
sbb
jnp
mov
sar
repz
std
dec
rcl
inc
cmps
repnz
and
movs
cmc
stc
rcl
jnp
icebp
stc
and
(bad)
dec
(bad)
out
js
sbb
fisub
(bad)
rep
sti
dec
push
xor
in
icebp
push
bound
push
push
(bad)
adc
xchg
dec
or
cmps
test
cli
xchg
das
movs
xchg
xchg
dec
inc
mov
jnp
stc
dec
rol
mov
lock
clc
int3
test
cmps
mov
push
outs
es
mov
test
lods
js
repnz
mov
sti
xchg
jae
inc
test
add
jnp
mov
js
jb
pop
jbe
lea
stc
sahf
pop
dec
clc
lock
mov
pop
add
push
cmp
mov
push
jp
mov
and
sti
push
jnp
popa
jb
js
jb
pop
stos
inc
and
hlt
dec
pop
cmp
and
je
fdiv
cmp
mov
xor
mov
xchg
call
call
pop
xchg
xchg
mov
push
xchg
into
call
cmps
mov
adc
jnp
popa
pop
shl
sbb
aam
stos
aad
or
cmp
pusha
xor
ja
loop
popa
iret
in
cmp
jl
jge
scas
cdq
mov
aad
adc
push
mov
pusha
dec
adc
push
xlat
out
mov
stos
xor
jmp
daa
mov
das
and
jnp
sbb
movs
leave
dec
(bad)
in
lea
add
sti
lea
xchg
sti
clc
(bad)
mov
or
(bad)
loopne
lods
push
add
sti
mov
(bad)
and
ror
movs
jnp
shld
shld
adc
inc
popa
lods
sbb
jnp
sbb
popa
lods
adc
lods
sti
outs
(bad)
popa
lods
setne
adc
and
mov
and
jnp
shld
mov
mov
lea
cld
sti
sbb
sti
mov
mov
les
out
rcl
shl
jo
jl
jmp
cmps
sbb
sbb
stc
push
stc
jnp
(bad)
clc
inc
xchg
mov
sbb
scas
push
cmp
dec
pop
xlat
jae
pop
xor
dec
fstp
or
ror
lea
arpl
lea
cli
es
add
clc
call
test
jp
ins
jae
inc
fistp
and
sti
ror
pop
xchg
jbe
imul
(bad)
sar
cmp
jnp
or
fdiv
fisttp
and
sti
clc
jp
sbb
pushf
call
jae
and
sti
push
push
cmp
aaa
lahf
xor
cli
xor
(bad)
sbb
clc
das
movs
es
jno
es
(bad)
in
js
std
sbb
pop
cmp
push
pop
es
rcr
xlat
lock
test
rcr
in
jae
xlat
or
(bad)
daa
in
and
push
jb
clc
stc
clc
std
fcom
or
mov
jnp
and
ja
cli
adc
arpl
lock
(bad)
adc
add
push
cmps
lods
jb
popf
es
in
clc
cmp
cmp
lods
xchg
sbb
inc
cwde
inc
add
icebp
jae
into
cld
sti
pop
xchg
jl
ficom
cld
std
ficomp
jl
fidivr
jl
fisub
cld
cmps
fimul
xchg
int3
pop
push
fsin
mov
imul
pop
fnstcw
xchg
dec
sbb
in
(bad)
cmp
ins
cli
iret
cmp
lods
jl
fst
pop
cli
fimul
jl
fsubr
cli
fimul
jl
fimul
fistp
jl
fidivr
pop
fcomp
mov
mov
cmp
mov
inc
inc
inc
cmp
(bad)
cmp
mov
mov
inc
pop
fst
mov
inc
adc
cmp
lea
movs
dec
lea
pop
outs
lods
inc
add
jmp
pop
or
(bad)
and
jnp
or
mov
or
das
movs
repnz
(bad)
jnp
mov
and
sti
int3
mov
mov
or
(bad)
call
movs
jnp
shld
shld
or
or
dec
lea
test
fisttp
nop
jnp
add
inc
xor
movs
sti
lea
retf
(bad)
and
shr
jns
lock
jnp
add
xchg
xor
rcl
lods
(bad)
fidivr
inc
add
dec
jae
sti
int3
dec
fld
or
add
lock
jnp
movs
mov
lock
dec
xor
ds
or
shld
loopne
mov
or
call
xchg
xor
outs
test
xor
xchg
shld
stc
gs
push
movs
or
outs
(bad)
and
jnp
push
movs
lock
sti
sbb
cmps
xchg
nop
sti
clc
add
in
lods
adc
bound
movs
(bad)
stc
clc
mov
pop
or
xlat
pop
mov
jb
fisub
xchg
or
xchg
jnp
das
and
js
lock
test
pop
sub
dec
(bad)
(bad)
and
mov
movs
cmp
or
js
fild
cmps
call
push
(bad)
imul
sbb
repnz
dec
xchg
dec
cld
dec
jp
test
and
sti
push
cli
mov
mov
push
cli
cdq
into
jb
and
sar
sti
push
out
shl
jbe
daa
ret
or
pop
jnp
sti
dec
rcr
xchg
jo
test
movs
add
and
sti
push
sar
lahf
insertq
lods
push
and
jge
movs
loope
or
(bad)
xchg
ret
in
js
or
sub
test
nop
in
clc
push
push
jg
das
movs
inc
nop
int3
in
fsubr
pop
(bad)
xor
js
jno
pop
mov
jo
in
clc
xor
outs
es
ror
xchg
repz
dec
push
adc
cs
es
ins
sbb
retf
jmp
clc
xchg
pop
adc
push
das
arpl
repnz
inc
ret
fnsave
leave
repz
xchg
sub
mov
out
cmps
pop
cmp
into
push
push
or
sti
test
test
jo
inc
mov
sar
mov
rol
retf
in
mov
in
in
mov
stc
push
idiv
data16
ins
pop
in
stc
lahf
fs
mov
div
icebp
lahf
stc
push
out
stc
in
in
mov
in
repz
(bad)
hlt
pop
inc
in
in
mov
and
in
aas
(bad)
hlt
test
xchg
je
popf
fs
in
mov
in
xchg
mov
mov
add
inc
in
aas
mov
lea
jge
into
in
aas
out
sbb
fs
in
mov
xchg
in
aas
in
call
fsub
hlt
in
mov
fs
mov
pop
rol
dec
and
in
aas
push
hlt
in
mov
mov
lock
pop
xchg
test
mov
lock
fadd
icebp
sti
fadd
jb
fadd
jae
fadd
push
pop
pop
in
in
mov
nop
pop
sub
nop
cmp
fstp
in
scas
xchg
in
in
mov
hlt
lods
mov
shl
pop
mov
sbb
mov
out
adc
inc
fs
sahf
jecxz
nop
aas
in
clc
mov
lds
or
mov
mov
jle
dec
(bad)
cmc
fs
ret
in
stos
mov
loop
pop
cdq
fstp
in
mov
out
jbe
out
mov
mov
xchg
(bad)
cwde
ins
js
xor
xchg
adc
push
in
lods
ret
in
in
mov
gs
retf
mov
in
xchg
dec
pop
into
aad
add
inc
xchg
adc
or
add
fist
pop
xchg
in
popf
in
dec
sbb
aas
out
lahf
sbb
fs
sahf
jecxz
nop
aas
in
sub
pop
pushf
in
dec
and
in
aas
sbb
jne
clc
hlt
pop
(bad)
xchg
jg
ds
ficomp
and
ds
mov
in
in
mov
gs
fild
mov
stos
and
ds
jnp
pop
sub
(bad)
imul
hlt
in
mov
fs
in
mov
xchg
in
aas
in
in
cld
fild
sbb
in
sbb
in
pusha
fsub
mov
mov
gs
test
mov
lock
pop
out
test
repz
int3
mov
fcom
int3
cmp
je
mov
ficomp
adc
in
fadd
fs
sar
je
mov
inc
into
(bad)
retf
and
in
aas
and
cwde
pop
adc
sar
cmp
sub
dec
or
shr
ins
jp
xor
inc
sbb
scas
arpl
xor
(bad)
gs
mov
cwde
arpl
fmul
push
aas
xchg
push
ss
hlt
sti
aas
out
(bad)
lahf
in
ins
(bad)
loopne
(bad)
lahf
lds
fsubr
sahf
sub
sub
mov
sbb
scas
arpl
push
xchg
pop
sbb
mov
vcvtdq2ps
fmul
sti
aas
movs
dec
push
cmp
sub
test
push
jb
pop
repnz
aas
cmp
sub
dec
or
shr
ins
jle
xor
or
retf
scas
push
out
mov
je
inc
and
cmp
(bad)
mov
(bad)
cmc
movs
hlt
fdivr
sbb
mov
out
pop
adc
and
lahf
fs
mov
in
sub
pop
imul
(bad)
hlt
stos
mov
push
xor
mov
movs
imul
aas
(bad)
hlt
scas
mov
fs
int3
aas
out
ins
pop
in
lock
fs
in
and
ins
lock
clc
push
outs
arpl
ins
daa
in
lock
sbb
ins
inc
clc
push
cmp
dec
inc
ins
test
loopne
cwde
(bad)
shld
mov
shl
(bad)
dec
mov
pop
setle
or
dec
push
ds
std
out
dec
movnti
mov
cmp
or
js
test
cmp
adc
aam
sub
push
icebp
jo
pop
xchg
movs
or
je
pop
sbb
cmc
aaa
cmps
jmp
mov
xor
pop
test
dec
inc
push
add
movs
stc
jns
(bad)
jnp
push
out
stc
sar
iret
jbe
std
add
ret
lods
(bad)
clc
mov
int3
into
pop
push
sub
push
stc
mov
movs
and
push
pop
nop
pop
lea
mov
clc
scas
mov
test
das
movs
jle
cmp
mov
push
jp
push
jno
jl
push
jp
out
jno
movs
pop
jp
call
js
xchg
imul
(bad)
xor
test
jp
xor
xlat
popa
push
mov
fld
sar
test
(bad)
js
lods
adc
arpl
fisub
push
jp
jne
cli
out
push
xchg
es
cmc
in
js
pop
(bad)
jg
fcmovbe
jb
and
jnp
jp
cli
jo
daa
call
fiadd
jb
push
sti
aaa
lock
jb
or
int3
test
lock
add
aaa
cmp
aas
or
xchg
jmp
sbb
fadd
(bad)
inc
stos
(bad)
inc
stos
pop
pushf
inc
stos
(bad)
js
mov
fistp
mov
inc
stos
(bad)
js
lods
int
(bad)
outs
pop
mov
inc
cmps
(bad)
inc
stos
add
inc
fcomip
mov
fdiv
push
fucomip
inc
stos
fistp
mov
(bad)
fmul
pop
daa
mov
adc
cmps
(bad)
outs
(bad)
jae
in
(bad)
push
inc
adc
sub
fdivr
stos
fucomip
inc
sahf
(bad)
pop
stos
jmp
stos
pop
cmps
inc
stos
and
das
(bad)
fsub
loope
pop
push
xlat
(bad)
add
movs
(bad)
outs
and
jb
aad
mov
mov
in
lods
pop
sbb
fcomp
lock
movs
pop
xchg
std
faddp
outs
and
and
stos
je
push
pop
cmp
fistp
shr
fadd
pop
cmps
inc
pop
fdivr
adc
(bad)
push
pop
cmps
or
cmp
(bad)
ins
and
dec
imul
fisttp
fist
stos
pop
popf
(bad)
fidivr
and
(bad)
xor
ja
gs
and
push
scas
adc
sub
sbb
sub
jp
sub
cmps
ror
sub
push
fistp
stos
movs
pop
xchg
std
faddp
outs
and
and
stos
xor
stos
fistp
shl
inc
stos
daa
pop
or
fdiv
sbb
inc
add
mov
push
shl
and
xchg
pop
(bad)
les
pop
sbb
ins
sub
in
push
cmp
ret
daa
and
sub
push
inc
(bad)
in
aaa
cdq
mov
sar
mov
hlt
jmp
in
jmp
mov
ins
pop
cmps
outs
sahf
and
das
(bad)
fadd
mov
xchg
fisubr
sub
or
sub
shr
cmps
inc
adc
push
jge
(bad)
fdivr
xchg
and
std
das
aad
stos
push
pop
sbb
gs
sub
sub
(bad)
(bad)
stos
pop
cdq
(bad)
(bad)
arpl
in
ret
push
mov
mov
sub
fdivr
mov
or
fsub
call
scas
fistp
stos
mov
push
test
lods
inc
stos
sbb
inc
sbb
fadd
dec
sbb
push
lods
int
(bad)
outs
pop
cdq
addr16
js
cmps
in
(bad)
sub
fdiv
pop
fld
cmp
inc
sub
fcomp
mov
fsubr
xor
fadd
mov
inc
fild
inc
fisub
call
mov
cmps
mov
lods
inc
mov
stos
jo
mov
dec
(bad)
(bad)
sbb
setne
enter
aas
movs
or
cmp
into
or
nop
icebp
repz
int3
cmp
shl
or
lods
(bad)
(bad)
sbb
and
mov
mov
aas
lea
mov
outs
test
mov
jnp
mov
xchg
cmps
fimul
inc
add
inc
xor
movs
dec
lea
fidivr
inc
add
dec
sub
push
lea
and
or
sub
dec
(bad)
sbb
movs
loopne
or
nop
adc
pop
gs
retf
or
xor
movs
(bad)
lods
and
out
or
fisubr
lock
inc
pop
movs
or
lock
mov
mov
test
test
pop
test
mov
dec
retf
or
movs
repz
(bad)
fidivr
lock
inc
pop
xor
pop
test
or
les
movs
loopne
or
nop
adc
pop
outs
stc
retf
or
xor
movs
(bad)
imul
sti
dec
xchg
pop
out
or
fidiv
lock
inc
add
movs
or
and
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
movs
loopne
or
mov
adc
das
and
iret
scas
adc
pop
(bad)
lock
movs
jnp
cld
movs
jnp
cmp
outs
lea
movs
arpl
sub
jnp
mov
rcr
lock
jb
pop
mov
or
jnp
pop
lea
test
and
push
in
jns
ror
das
and
iret
pop
sbb
pop
lea
xchg
pop
lods
das
and
setp
movs
pop
lods
setno
(bad)
mov
mov
mov
setno
das
and
iret
pushf
jg
jnp
into
cmp
or
jnp
das
and
(bad)
imul
jns
push
xchg
lea
adc
das
and
iret
xchg
sbb
pop
(bad)
lock
test
add
jnp
cld
movs
jnp
cmp
outs
lea
movs
arpl
adc
jnp
mov
rcr
lock
push
pop
mov
or
jnp
pop
lea
test
and
push
in
jns
ror
(bad)
mov
pop
cwde
(bad)
shld
cmp
test
movs
loopne
or
jnp
pop
lea
add
sti
lea
add
dec
outs
cmps
sti
mov
call
mov
pop
lods
seto
add
or
lods
setno
(bad)
das
and
iret
xchg
adc
mov
pop
lods
das
and
pslld
mov
lea
adc
das
and
iret
pop
mov
pop
(bad)
lock
lea
movs
jnp
shld
shld
shld
stc
fs
retf
lahf
or
outs
(bad)
outs
lods
(bad)
loope
(bad)
retf
pop
dec
jno
fld
lea
dec
push
and
pop
lea
and
jnp
(bad)
imul
shld
jp
jnp
repnz
(bad)
sub
xchg
pop
fidivr
pop
lods
(bad)
mov
mov
scas
loope
jnp
das
and
dec
mov
daa
jnp
das
and
jnp
in
daa
push
sbb
and
jnp
sbb
movs
leave
dec
(bad)
in
lea
and
jnp
or
in
(bad)
retf
pop
cmp
and
ror
add
cli
xchg
(bad)
stc
retf
jb
and
jnp
shld
shld
shld
shld
stc
fs
retf
lahf
or
outs
(bad)
outs
lods
(bad)
loope
(bad)
retf
pop
dec
jno
fld
(bad)
fiadd
pop
lea
and
jnp
(bad)
imul
shld
jp
jnp
repnz
(bad)
mov
fisubr
pop
lods
shld
lea
test
das
and
jnp
das
and
dec
mov
push
jns
daa
jnp
das
and
jnp
in
daa
push
sbb
and
jnp
sbb
movs
leave
dec
(bad)
in
lea
and
jnp
or
in
(bad)
retf
pop
cmp
and
ror
add
cli
xchg
(bad)
stc
retf
jb
and
ror
out
pusha
jecxz
push
dec
push
or
xor
in
shld
stc
fs
mov
mov
(bad)
mov
jnp
sub
sti
or
clc
call
inc
xor
enter
dec
or
ret
mov
add
(bad)
out
(bad)
jnp
dec
push
ds
loope
or
pop
pop
jae
movs
dec
dec
shl
cld
adc
(bad)
fidivr
out
and
int3
jle
ds
adc
pop
jae
push
shl
in
stc
pusha
ror
ins
and
jnp
or
pusha
ror
ins
and
jnp
or
fs
in
xchg
lea
pop
pop
jae
test
adc
daa
mov
lea
mov
jecxz
or
fdivr
mov
dec
rcr
mov
pop
push
retf
or
push
movs
dec
jns
sar
jb
fidiv
lods
into
sbb
mov
xchg
shld
(bad)
std
mov
dec
shld
(bad)
shld
(bad)
(bad)
jns
dec
push
ds
xchg
shld
push
xchg
xchg
mov
jg
enter
inc
fst
stc
retf
pop
jnp
adc
pop
lods
setle
repz
and
jns
sub
sti
or
mulps
aam
jb
popa
xor
movs
cmc
test
xchg
pop
pop
jae
fild
scas
in
pop
pop
jnp
movs
(bad)
mov
and
jns
and
push
mov
(bad)
cmc
and
jnp
movs
or
popa
push
test
(bad)
cmp
scas
xor
pop
mov
test
adc
lahf
inc
push
sub
and
jnp
or
mov
dec
mov
xor
add
push
lock
cld
adc
pop
jnp
popa
inc
fmul
es
mov
jns
popa
(bad)
jnp
and
shl
jg
(bad)
cmp
xor
bound
movs
mov
xor
pop
cmp
jae
jecxz
push
int3
ror
and
sti
jbe
stc
sahf
js
movs
cmp
adc
shl
test
adc
lahf
inc
push
sub
movs
cmps
(bad)
std
mov
dec
psrlw
mov
movs
shl
and
dec
repz
jecxz
mov
dec
ja
sar
jb
fidiv
lods
sti
xor
(bad)
xor
jge
stc
jge
shld
and
retf
or
cli
mov
pop
test
(bad)
in
lea
pop
test
(bad)
in
lea
movs
cmps
(bad)
std
mov
dec
(bad)
(bad)
sbb
retf
mov
push
xchg
xchg
mov
jg
enter
xor
and
jnp
or
fs
mov
mov
jno
movs
dec
jp
inc
or
pop
test
(bad)
in
lea
pop
test
(bad)
in
lea
pop
test
(bad)
in
lea
pop
test
(bad)
in
lea
pop
test
(bad)
in
lea
movs
cmps
(bad)
std
mov
dec
(bad)
(bad)
sbb
mov
jge
shld
lea
sti
mov
mov
scas
out
clc
xchg
(bad)
jp
dec
inc
xor
ins
xor
cmp
aaa
(bad)
jnp
or
mov
lea
movs
jnp
and
jnp
movs
loopne
or
(bad)
sbb
movs
loopne
or
lock
lea
addr16
or
pop
sub
bswap
pop
dec
or
mov
cmp
ror
mov
fmul
movs
dec
(bad)
clc
sbb
hlt
push
jp
jno
gs
mov
xchg
or
cs
pop
jmp
stc
rol
jnp
psubw
lock
test
add
xchg
pop
(bad)
psllq
mov
pop
rsqrtps
mov
jno
mov
pushf
in
js
aaa
jg
movnti
push
cmps
cmp
jmp
imul
jnp
inc
movs
add
dec
and
jnp
icebp
push
mov
push
jp
or
pop
mov
ins
and
es
test
xchg
xchg
sub
js
and
xor
ficom
mov
or
xor
push
mov
(bad)
dec
sbb
or
push
test
movs
jo
cli
jmp
or
mov
inc
test
(bad)
stc
clc
pmaxsw
cmps
jnp
test
cmps
cmps
(bad)
clc
fwait
scas
or
and
push
dec
pop
out
jae
fisub
sahf
and
xchg
pop
and
pop
(bad)
cmp
adc
add
loope
lock
ins
or
jmp
(bad)
and
or
sbb
cmp
iret
test
add
push
jmp
repnz
lods
jle
cli
outs
repnz
sub
lock
stc
outs
jb
fld
push
pop
stc
outs
repnz
push
pop
lock
jns
xlat
xor
and
jnp
shld
stc
fs
in
xchg
mov
movs
jnp
fbstp
mov
or
shld
mov
push
pop
lods
lock
fidiv
add
or
(bad)
xlat
lea
push
(bad)
iret
pop
xor
fist
mov
push
shld
cli
outs
mov
repz
clc
push
dec
loopne
ret
mov
mov
div
cmp
cmp
dec
jnp
test
les
push
and
rol
pop
or
shld
lea
call
in
clc
mov
(bad)
(bad)
lea
xchg
cli
int
or
jbe
sti
sar
shl
pop
mov
ins
icebp
shl
scas
jae
out
rol
cmp
push
adc
jns
test
or
(bad)
das
lea
push
call
fcomp
xchg
dec
inc
mov
mov
jns
into
ror
or
cli
inc
cmp
mov
mov
jns
js
repnz
pop
add
stc
js
js
pop
mov
clc
add
or
hlt
push
sbb
sub
mov
jno
fisub
push
push
cmps
push
test
jns
js
and
add
xchg
es
js
js
fcom
(bad)
stc
rcr
repnz
adc
jb
adc
bnd
jg
je
jmp
pop
add
out
fdivr
dec
sbb
addr16
js
fcmovne
dec
out
fsub
out
in
js
nop
fmul
dec
rcl
shr
clc
js
nop
sar
dec
inc
lods
in
nop
pop
xchg
xchg
pop
ror
add
cli
cld
add
(bad)
cld
out
and
scas
fadd
(bad)
mov
mov
gs
sub
addr16
inc
loopne
idiv
pop
ror
in
pop
loopne
fwait
call
nop
mov
bound
test
mul
inc
push
or
add
or
(bad)
in
(bad)
fisubr
(bad)
iret
fcomp
jbe
cmp
jp
pop
sar
mov
repnz
jnp
jne
xor
jmp
jge
ret
mov
gs
inc
cld
dec
cli
sbb
jp
sub
stc
pmaddwd
push
push
sahf
pop
jb
clc
jnp
pop
pop
ins
xor
pop
mov
test
aaa
sahf
jg
push
push
cdq
push
jo
mov
js
cli
test
arpl
jno
jne
jg
cmps
je
fs
sub
(bad)
(bad)
push
push
lods
ins
cmps
xchg
int3
out
out
es
stc
xchg
lock
test
and
cmp
jnp
(bad)
cmps
(bad)
test
inc
push
icebp
rol
add
je
mov
into
adc
lahf
jnp
lock
or
cmp
das
movs
into
pop
mov
js
xor
push
dec
into
push
push
pop
jae
stc
dec
rcl
inc
pop
icebp
rcl
shl
retf
pop
pop
stos
(bad)
cmps
movs
mov
sti
jns
js
jb
pop
stos
mov
shl
dec
or
imul
sub
jo
xor
lock
xor
in
mov
shr
or
push
jmp
test
adc
adc
call
jmp
call
or
call
xor
leave
push
mov
push
in
out
inc
xor
fcmovbe
jb
fnstenv
inc
mov
sti
mov
daa
mov
(bad)
loope
lods
iret
cmp
das
and
cwde
int
and
jnp
das
movs
scas
das
or
jo
in
and
jmp
push
mov
or
(bad)
pop
cmp
adc
jbe
and
test
pop
cmp
inc
and
jnp
adc
stc
mov
fisubr
jnp
push
es
sar
mov
cmc
xchg
rep
out
dec
and
jnp
repz
mov
fcom
popa
(bad)
paddusw
movs
sti
rcl
loop
or
xchg
je
rcl
cmps
xor
lea
out
xchg
pop
or
push
push
sub
push
jp
xchg
(bad)
shl
lea
mov
cli
mov
mov
ins
test
push
sti
clc
lock
test
retf
es
(bad)
push
lea
daa
mov
push
adc
icebp
jns
sti
xchg
pop
jb
push
test
out
icebp
outs
cmovbe
sqrtps
mov
lock
(bad)
and
pop
lock
jp
adc
lea
mov
sub
test
shl
sar
lods
in
repz
out
icebp
pop
in
bound
and
pop
lock
enter
dec
leave
xchg
dec
push
out
inc
jb
pop
xchg
xchg
movs
sub
jns
(bad)
call
inc
ret
xchg
mov
addr16
inc
jns
sbb
sub
sbb
das
loope
(bad)
mov
sbb
or
stc
movs
inc
fst
mov
or
jns
inc
ins
test
icebp
fs
cvtps2pi
xchg
and
scas
lock
cmp
jnp
pop
(bad)
lock
xor
mov
cmp
xor
jnp
shld
dec
sar
daa
jo
mov
lea
stc
mov
das
and
idiv
and
test
xchg
imul
dec
repz
in
lea
push
jnp
mov
(bad)
in
lea
add
xor
rcl
inc
repz
sbb
xor
jnp
test
in
lea
movs
cmp
(bad)
rcl
(bad)
cmp
das
movs
cmp
repnz
ficom
daa
fcomp
test
cli
jnp
jb
es
fld
cwde
inc
mov
xor
push
cli
add
repz
inc
adc
rol
jmp
push
cdq
xchg
jnp
dec
mov
clc
push
les
psllw
push
cmp
int3
lea
stc
movs
fbld
sar
dec
or
loopne
xor
push
dec
jno
int
mov
js
lods
ror
icebp
js
mov
jb
inc
cmps
nop
mov
xchg
jae
lahf
dec
out
push
lds
xchg
lahf
outs
(bad)
sqrtps
mov
cmp
test
pop
test
pop
xchg
popf
pusha
outs
cmps
jbe
dec
test
repnz
call
aaa
inc
(bad)
stc
push
xor
mov
inc
std
sub
mov
inc
call
inc
in
and
mul
std
mov
jmp
mov
inc
setne
(bad)
btc
test
sbb
xor
push
(bad)
iret
fcomp
xchg
pop
mov
je
cmp
psubb
leave
jl
ss
shld
int
js
and
pop
movs
fs
cmps
adc
outs
add
adc
or
out
pop
cmp
test
cmp
(bad)
(bad)
(bad)
rcr
cdq
xchg
fisub
sar
in
jb
sar
shld
lea
and
jnp
lock
lods
jle
daa
(bad)
lds
push
push
sbb
test
or
lea
outs
(bad)
scas
push
lods
(bad)
js
in
or
jae
shld
mov
sti
clc
ins
pop
jmp
cli
or
call
ror
in
(bad)
push
push
lods
push
pop
mov
test
stos
js
or
(bad)
sbb
sar
cmps
in
jno
inc
bound
or
stc
js
pop
scas
loop
push
mov
mov
ror
pop
hlt
jb
sar
xor
int3
lea
stc
lock
int
(bad)
pop
mov
push
cli
jae
jno
or
sti
int
js
cmc
mov
or
xchg
jae
xchg
pop
nop
fdivr
sbb
cmp
mov
sti
xchg
pop
nop
outs
call
mov
pop
je
cdq
icebp
aaa
inc
rcl
mov
test
inc
ds
aaa
ror
scas
inc
and
call
lods
call
cmp
cdq
lock
mov
inc
stc
gs
or
mov
inc
cmps
outs
and
jl
jp
jnp
jle
and
cmp
push
enter
gs
dec
jbe
test
bnd
add
clc
jo
movs
pandn
sti
int
clc
xlat
neg
fld
icebp
mov
fdiv
jae
pop
movs
(bad)
mov
aam
jbe
and
iret
rcr
add
js
cmp
movs
repz
cld
retf
push
mov
(bad)
repz
das
cmp
and
cwde
jne
mov
movs
std
sti
jmp
out
jbe
xchg
cmps
xor
js
xchg
(bad)
adc
out
jmp
enter
sbb
jnp
jns
cli
sub
jno
push
mov
jns
hlt
jnp
repnz
push
shld
lea
cmps
int3
mov
test
xor
pop
(bad)
dec
push
mov
push
push
lods
xor
push
push
pop
call
lea
pop
mov
js
aaa
push
push
call
test
mov
test
into
pop
(bad)
cmovg
xor
pop
stos
cmp
mov
lock
movhlps
aaa
add
rcl
psubb
jl
dec
xchg
lock
(bad)
xor
inc
test
xchg
cmps
test
pop
pop
jae
js
clc
scas
pop
push
jg
aaa
es
clc
pop
xchg
js
jae
iret
pop
push
push
ss
adc
cmp
es
icebp
sub
test
cmp
rcr
pop
gs
add
mov
add
mov
cs
(bad)
scas
cmp
sbb
fsub
clc
sbb
in
mov
sbb
fild
lock
jecxz
not
mov
ficomp
cs
adc
push
and
fnstcw
popa
add
inc
sar
sbb
sub
and
add
mov
cdq
cmp
jbe
(bad)
rol
gs
mov
cmp
cmps
(bad)
dec
or
and
dec
shl
adc
sar
pop
add
mov
pop
sbb
pop
add
(bad)
pop
mov
push
imul
ficomp
push
add
(bad)
je
mov
and
retf
cmp
mov
fdivr
mov
xchg
sti
cmps
lods
xchg
sar
adc
shld
shld
shld
(bad)
(bad)
mov
push
ds
and
dec
mov
mov
xchg
fwait
aaa
pop
and
mov
cdq
ficomp
dec
imul
dec
jecxz
test
dec
das
ds
out
mov
outs
mov
mov
int3
in
es
in
clc
dec
mov
dec
(bad)
aas
push
je
sti
adc
and
ror
iret
mov
ret
mov
stos
and
jnp
xor
xor
xlat
and
or
rol
test
movs
add
(bad)
hlt
js
adc
pop
jge
hlt
xchg
sub
jno
and
or
pop
cmp
cmp
arpl
and
sti
jns
sar
push
fistp
sti
pusha
push
jae
clc
jnp
mov
int3
mov
cwde
(bad)
pextrw
pop
or
sqrtps
lea
sbb
test
or
fbld
xchg
(bad)
cmp
js
mov
test
movs
sub
push
sub
push
fs
or
jb
inc
xchg
mov
or
or
lock
test
push
push
(bad)
repz
lods
mov
js
dec
inc
ds
xchg
jns
sti
xchg
jne
lock
jb
pop
loope
into
pop
mov
(bad)
stc
xor
pop
mov
imul
into
pop
mov
js
xor
ins
mov
mov
clc
clc
shld
lea
daa
dec
lea
stc
jp
popf
ins
and
sti
jns
pop
test
(bad)
adc
es
sub
dec
jb
pop
lods
lock
cmp
stos
jbe
les
add
fdivr
cmps
add
pop
in
mov
mov
outs
les
aas
and
fwait
mov
or
in
or
cli
cmp
add
xchg
cli
add
inc
cli
add
cdq
xchg
js
rol
cli
add
arpl
push
xchg
jl
add
lds
mov
jge
inc
(bad)
add
xor
cdq
aam
outs
lds
sbb
jp
lds
bound
scas
inc
xchg
xchg
clc
fcomp
cs
or
mov
clc
mov
cmp
mov
cmp
je
loopne
xchg
js
rol
cli
add
add
inc
pop
in
sahf
(bad)
mov
fild
push
mov
je
inc
mov
push
lds
dec
lds
dec
lds
pop
inc
cli
and
sar
xchg
jp
jns
add
mov
push
sbb
stos
mov
jp
push
cwde
(bad)
and
jle
cmc
xlat
rol
and
fcmove
jnp
xlat
xor
and
jnp
stc
gs
shld
mov
stc
fimul
bnd
test
cmp
inc
test
push
inc
(bad)
lock
jne
inc
mov
or
inc
movs
jge
stos
and
jnp
jl
xor
popa
cmp
ror
daa
repz
in
(bad)
cmps
scas
add
dec
pop
ins
or
shld
jmp
aam
dec
repz
popf
and
or
gs
fisttp
sti
push
adc
jno
and
xor
pop
cmp
cmps
jnp
pop
cmps
mov
shr
cmc
lock
retf
or
cli
lahf
pop
or
jp
push
jae
fs
push
sbb
add
out
fs
adc
add
jge
adc
sar
sub
cmps
jmp
daa
adc
fstp
hlt
push
sbb
movs
xchg
dec
jp
inc
pop
xchg
mov
test
push
ins
push
(bad)
(bad)
js
lods
inc
pop
(bad)
or
jmp
test
xor
pmaddwd
test
repz
push
dec
lock
and
pop
test
push
ja
sbb
jnp
hlt
rcr
pop
iret
jb
push
cmp
or
mov
movs
sti
popa
push
hlt
jo
test
pop
fnstenv
push
push
mov
lea
push
lods
psubb
lds
pop
push
arpl
fcom
dec
rcl
mov
div
in
xor
mov
int3
imul
pop
dec
sbb
pop
dec
sbb
pop
dec
sbb
pop
push
dec
mov
int3
call
js
mov
aaa
pop
pop
push
mov
int3
fcomp
js
mov
mov
dec
pushf
sbb
sub
pop
jl
call
jae
pushf
sub
jmp
repnz
jns
pop
pop
push
sbb
pop
dec
push
aaa
ins
jns
aaa
pop
and
enter
push
fdiv
sbb
mov
cmp
pop
dec
call
and
(bad)
lea
fsubr
sub
cdq
lea
mov
dec
das
ss
leave
pushf
mul
popf
mov
mov
aaa
fsubr
arpl
jno
jecxz
sbb
daa
scas
pop
aaa
fdiv
sbb
pop
in
aam
dec
pushf
enter
aaa
fdiv
sbb
pop
mov
aam
mov
enter
adc
jnp
call
cdq
pop
mov
mul
popf
xor
mov
fdiv
sbb
adc
sbb
adc
add
ds
mov
enter
cmp
sahf
xor
push
js
sub
sahf
mov
enter
mov
sbb
jecxz
sbb
enter
aaa
fdiv
sub
sahf
mov
enter
push
pop
pop
mov
mov
mov
enter
jg
enter
retf
test
mov
pusha
or
(bad)
(bad)
cmp
pushf
into
mov
pop
mov
int3
jl
pop
mov
push
ror
cmc
or
pop
int3
fnstcw
and
push
mov
retf
ja
mov
daa
pop
dec
sbb
pop
mov
aaa
lods
loope
fdiv
mov
jbe
mov
cmp
(bad)
jbe
mov
imul
dec
pushf
imul
mov
mov
jne
dec
pushf
dec
adc
xor
sahf
xor
add
mov
fwait
cmps
pushaw
lahf
sahf
inc
sbb
sub
inc
aaa
fdiv
call
sbb
add
mov
xchg
cmps
push
sbb
ins
mov
fdiv
sbb
sub
sub
pop
dec
sub
ins
push
ss
xor
adc
sub
sahf
xor
xor
arpl
ins
mov
fdiv
pusha
lahf
sahf
xchg
sbb
sub
inc
aaa
fdiv
call
mov
mov
fbstp
pusha
sahf
sahf
loopne
push
sub
pop
aaa
fdiv
jecxz
push
mov
enter
mov
mov
fdiv
sbb
pop
mov
pop
aaa
pop
mov
jge
stc
fwait
dec
jno
jecxz
add
arpl
jb
sbb
pop
adc
cdq
mov
enter
(bad)
fimul
pop
jns
add
pop
sbb
arpl
cmps
mov
enter
ins
cli
pop
icebp
dec
lods
jl
aaa
fmul
mov
enter
enter
enter
xchg
cmps
dec
sbb
stos
adc
mov
mov
enter
or
pop
mov
jne
fs
enter
repnz
lea
fsub
mov
neg
repz
jecxz
cli
sub
enter
pop
sub
fmulp
cmps
mov
xchg
cmps
enter
dec
sbb
pop
mov
dec
jp
fdiv
cmp
lock
pop
arpl
mov
aaa
pop
lods
adc
fdivr
sub
pop
retf
cmp
dec
pop
xor
mov
mov
mov
fimul
fmul
cs
fdivr
pop
and
pop
cs
mov
dec
leave
xchg
int3
imul
jmp
jbe
bound
popf
int3
fstp
js
mov
mov
jbe
cmp
push
sub
ret
mov
xchg
cmps
inc
sub
jecxz
sbb
sbb
arpl
push
scas
push
push
fsubr
jbe
pushf
jle
aam
mov
ins
pushf
lea
mov
fcmovbe
push
pop
fsubr
jbe
arpl
or
pop
fdiv
shl
mov
cmp
pop
(bad)
lock
(bad)
jb
daa
mov
cvtdq2ps
(bad)
mov
mov
clc
(bad)
in
mov
add
inc
or
push
ror
fsubr
outs
cmp
push
or
shld
sahf
mov
jnp
iret
pop
mov
pop
and
dec
mul
or
cmp
dec
or
loop
jg
dec
sti
jl
jb
clc
jnp
pop
pop
jae
(bad)
daa
mov
sar
pusha
jo
push
ja
push
int
rcr
jnp
repnz
hlt
lea
and
(bad)
fmul
dec
mov
(bad)
sar
rol
das
mov
or
add
cmps
add
test
and
sysret
pop
cmps
sub
fwait
test
mov
aas
out
clc
ror
sbb
in
clc
cli
dec
(bad)
bswap
push
push
sbb
out
push
ror
lods
je
adc
mov
cmp
jb
pop
push
imul
pop
push
fs
push
sti
mov
daa
(bad)
push
xor
dec
rcr
std
repnz
bound
call
sar
mov
lock
js
cli
dec
movs
jb
lea
push
push
cdq
jnp
repnz
or
or
cmp
sub
test
add
pop
lsl
cmp
ror
mov
adc
cli
test
xchg
bnd
call
dec
stc
(bad)
int3
call
dec
stc
fnstsw
pusha
push
hlt
test
stc
(bad)
dec
inc
dec
mov
hlt
test
stc
(bad)
retf
mov
ss
dec
dec
inc
retf
mov
jg
retf
shr
shr
pop
into
retf
cli
cld
(bad)
dec
test
jle
imul
(bad)
hlt
imul
clc
mov
lock
test
or
pop
enter
retf
aad
dec
js
(bad)
(bad)
sub
dec
outs
test
js
push
or
aas
cdq
push
in
mov
mov
mov
sub
or
mov
mov
mov
sub
mov
jp
dec
xchg
mov
inc
into
aam
out
xor
pop
into
mov
jg
jnp
int3
fadd
pop
dec
push
fwait
xor
mov
mov
jnp
(bad)
jnp
loope
jnp
jbe
jnp
iret
mov
dec
mov
call
or
lahf
sub
int
in
iret
aaa
inc
stc
push
cmp
in
mov
idiv
dec
repnz
inc
mov
sti
je
jb
cli
jnp
das
and
push
(bad)
lock
jb
movs
clc
jns
(bad)
jnp
icebp
jns
sub
and
mov
jg
cmps
cmp
les
inc
movs
xchg
loope
(bad)
repz
cs
pop
movs
in
jns
into
jnp
hlt
shr
cli
aaa
inc
or
inc
arpl
mov
stc
clc
xor
aam
ret
cmp
(bad)
ja
es
or
pop
sar
dec
push
jae
jnp
xchg
mov
xchg
mov
pop
push
inc
jns
sti
xor
push
fs
popf
stc
or
test
movs
mov
in
daa
mov
and
dec
iret
lock
clc
into
rcr
(bad)
iret
jns
jp
mov
cmp
sti
jnp
jp
out
jb
gs
cli
ins
bnd
mov
daa
neg
int
js
loopne
and
cmps
loopne
es
ja
pop
xchg
xchg
std
mov
push
mov
mov
mov
jo
popa
push
xchg
xor
push
test
aas
test
sub
(bad)
mov
mov
stos
test
paddd
(bad)
gs
inc
ins
test
dec
push
call
and
jnp
stc
inc
mov
lea
cmps
sti
out
shld
or
jnp
shld
in
xchg
lock
mov
inc
add
or
(bad)
int3
retf
xchg
and
neg
scas
lock
inc
or
movs
lock
sub
ror
outs
cmp
mov
mov
add
add
(bad)
int3
retf
sbb
leave
pop
aas
or
call
lock
inc
jae
movs
hlt
(bad)
jo
cmp
in
js
pop
inc
repz
movs
(bad)
and
pop
sbb
push
test
and
ror
shld
dec
lock
sbb
(bad)
popa
xchg
(bad)
lock
cmp
dec
pop
test
movs
test
loopne
lea
pop
or
arpl
ins
lock
std
(bad)
fidivr
jb
fiadd
iret
(bad)
test
in
out
or
shld
jne
mov
repnz
jecxz
mov
cmp
test
and
mov
movs
es
ja
out
iret
xchg
pop
test
(bad)
repz
pop
cmp
(bad)
add
dec
sar
dec
jo
test
cmps
iret
mov
mov
lea
add
sti
dec
jo
test
pop
ror
add
cli
push
sar
dec
jo
test
xchg
push
inc
sar
dec
lock
jb
loopne
js
and
test
inc
mov
or
(bad)
pusha
jnp
ins
and
test
movs
(bad)
xchg
dec
(bad)
dec
lock
and
sti
dec
dec
inc
ds
out
push
test
mov
leave
lock
jb
pop
test
in
test
fiadd
jb
movs
jnp
jae
cwde
iret
(bad)
test
leave
out
or
seto
dec
(bad)
dec
jo
test
scas
dec
or
jo
cmp
dec
dec
stc
call
jb
sbb
scas
dec
push
aad
jo
test
jecxz
(bad)
lock
cmp
mov
loopne
(bad)
or
xor
and
shld
add
in
lods
lock
and
(bad)
pop
shl
cmps
dec
lea
and
shl
xor
pop
mov
(bad)
(bad)
out
lock
test
and
daa
and
or
shld
jecxz
vphaddudq
dec
mov
mov
arpl
lock
not
pop
jnp
sub
and
jnp
lock
jb
movs
jnp
mov
scas
out
loopne
enter
icebp
jg
test
pop
aas
dec
lock
dec
pop
test
movs
test
(bad)
jnp
lock
cmp
(bad)
add
dec
(bad)
dec
jo
test
movs
dec
lea
mov
repnz
xor
and
cwde
iret
(bad)
test
leave
out
or
xor
jns
jge
test
(bad)
in
(bad)
lock
and
lea
mov
jb
fimul
jb
pop
mov
jb
loopne
ss
jb
loopne
or
lock
dec
cmps
pop
lea
push
repz
int3
(bad)
out
sbb
fimul
mov
movs
or
dec
push
retf
dec
lock
pop
add
add
shld
lea
and
test
inc
mov
or
lock
inc
add
cmps
pop
lea
sbb
(bad)
int3
retf
or
sar
sub
pop
sbb
movs
loopne
or
lock
inc
or
movs
out
(bad)
mov
mov
add
sbb
sti
mov
test
sti
cmps
arpl
cmps
pop
pop
sti
lock
inc
or
movs
faddp
mul
scas
retf
and
or
inc
mov
or
loope
(bad)
adc
test
loopne
lods
(bad)
and
shld
clc
(bad)
gs
fmul
push
xchg
test
pop
hlt
jo
fucomi
pop
movs
or
jae
and
movsx
pop
push
clc
fmul
outs
adc
shl
int
cmp
mov
dec
or
outs
test
clc
jnp
ficomp
fs
cmps
lds
sti
sar
data16
fs
(bad)
(bad)
sub
movs
add
push
repz
cld
retf
push
jmp
adc
test
lea
out
and
js
stc
jmp
push
mov
mov
jns
cli
mov
or
xor
pavgw
es
cli
ins
sub
dec
push
dec
add
jp
addr16
dec
mov
push
jl
mov
std
js
mov
in
(bad)
push
dec
lods
rep
icebp
dec
out
push
inc
pop
or
loopne
lods
(bad)
push
ja
lock
push
push
push
test
add
js
mov
rcl
es
enter
inc
clc
test
fmul
sbb
arpl
repz
retf
sbb
jo
test
(bad)
inc
loopne
mov
jae
pop
xor
inc
pop
into
push
lods
xchg
inc
and
dec
inc
or
inc
add
sub
in
(bad)
dec
cmp
cmps
out
add
mov
mov
enter
ret
mov
inc
call
jge
cmp
xor
clc
mov
mov
and
mov
and
ret
rol
jmp
inc
mov
ja
dec
pop
shr
out
gs
mov
hlt
cdq
mov
sub
in
test
retf
xor
cmp
dec
or
(bad)
popa
xor
inc
test
(bad)
pop
repz
jnp
cmp
arpl
inc
add
loopne
iret
sti
dec
mov
push
mov
movs
add
and
xlat
dec
retf
add
cmps
dec
jge
mov
or
cmp
test
xor
lahf
into
or
(bad)
pop
xor
movs
in
(bad)
and
shld
movs
loopne
or
das
and
cmpxchg
jns
dec
jb
popf
out
shld
clc
(bad)
in
xchg
(bad)
and
test
icebp
in
(bad)
not
add
pop
or
mov
jge
movs
setns
jnp
dec
pop
cmps
jo
(bad)
and
pop
xor
pop
jmp
mov
outs
enter
scas
jb
fdiv
push
rol
lock
sar
repz
inc
sub
clc
jnp
cld
pop
add
adc
lea
sbb
jae
fmul
inc
ds
cmp
lea
dec
(bad)
sar
push
xor
in
sar
call
push
(bad)
rsqrtps
mov
sbb
jmp
push
sar
clc
shld
test
js
js
fist
xor
test
cmps
in
adc
push
jp
pop
or
jp
arpl
inc
pop
sbb
fisub
shl
sub
push
and
jb
adc
sti
js
imul
int
(bad)
sti
sar
call
nop
jle
hlt
iret
pop
shl
pop
push
mov
jl
je
xor
adc
dec
jg
into
push
pop
mov
int3
rol
dec
jg
push
jg
mov
lods
mov
dec
cdq
xor
test
xlat
out
cmp
add
mov
mov
div
outs
jle
lea
adc
lea
xchg
int3
mov
mov
scas
mov
and
mov
std
movs
push
mov
push
adc
int3
movs
push
cmp
inc
in
mov
rcl
or
pop
cmp
inc
adc
loope
cmpxchg
test
movs
pusha
push
es
or
lahf
std
iret
in
es
cli
xchg
in
es
mov
fs
not
inc
cwde
or
and
inc
xchg
jbe
les
xchg
xchg
cwde
retf
sub
xchg
(bad)
fs
or
clc
movs
cld
dec
retf
mov
mov
outs
clc
or
mov
(bad)
aam
movs
loopne
or
xor
dec
loop
sub
mov
loopne
mov
xchg
neg
cmp
cmp
test
lea
bound
push
in
stc
gs
cmp
sti
jns
mov
mov
mov
mov
ret
shr
jb
gs
sar
cmp
jnp
push
jnp
adc
(bad)
sti
cwde
add
jbe
test
jno
and
bound
hlt
adc
jno
and
sbb
test
ror
inc
lods
jnp
fisttp
cmps
and
fisttp
lds
jnp
or
or
and
test
cmp
cdq
cmps
aaa
xor
pop
rcl
je
(bad)
sar
repz
rcl
mov
cwde
lock
js
dec
inc
nop
jno
in
clc
cli
jmp
(bad)
fimul
imul
aam
into
pop
mov
jnp
mov
repnz
femms
call
jns
aad
sti
jns
stc
sti
js
movs
push
lea
int
push
jp
ds
test
cli
sub
jb
fcmovu
stc
into
push
test
loopne
sar
mov
test
bnd
cli
in
push
or
shl
ret
clc
loope
inc
and
pop
scas
xor
call
aad
test
jg
imul
push
rcl
pusha
add
adc
push
rcl
mov
imul
inc
mov
pusha
xlat
sti
jmp
test
or
mov
or
shld
lea
icebp
ss
repz
or
fdivr
add
addr16
cld
scas
add
dec
pop
ret
jb
pop
scas
pop
shld
mov
jb
fs
pop
jmp
lea
hlt
push
(bad)
xor
js
xor
push
mov
enter
test
push
ror
inc
lods
shld
lea
int3
mov
cmp
xchg
psrlw
movs
sti
push
into
sar
cwde
in
clc
xor
mov
test
(bad)
shl
call
(bad)
clc
jnp
pop
pop
test
lods
js
aam
pop
aas
xchg
and
jnp
jp
pop
or
lea
outs
(bad)
mov
fwait
jmp
mulps
test
fldenv
push
repz
dec
sbb
and
inc
je
sar
jb
js
out
xchg
pop
clc
add
jae
sti
dec
push
sub
pop
repz
xchg
mov
pop
test
lock
jb
enter
int
jae
popf
es
mov
cmps
xor
pop
movups
daa
test
lds
shr
jmp
inc
js
clc
lahf
pop
push
mov
pop
xor
pop
jns
jns
or
retf
movs
js
dec
movs
call
inc
shl
push
dec
ret
pop
xlat
mov
aam
and
xlat
dec
sub
ror
(bad)
dec
ret
push
inc
scas
(bad)
inc
dec
lods
rcl
scas
rcl
dec
cmp
rol
pop
fimul
dec
pop
dec
lods
(bad)
(bad)
enter
outs
movs
dec
jbe
xchg
icebp
retf
movs
(bad)
iret
movs
fcmovnbe
inc
push
pop
fisubr
outs
fcom
fiadd
xor
ror
icebp
shl
dec
and
jbe
mov
not
aas
fxch
ret
sub
dec
pop
dec
das
ficom
and
inc
dec
into
lods
dec
push
fsubr
dec
dec
mov
inc
dec
dec
and
push
inc
scas
(bad)
(bad)
shl
into
cmps
ret
(bad)
jmp
lods
dec
jbe
movs
push
aam
aas
outs
fcom
fiadd
xor
ror
icebp
shl
fnsave
faddp
sar
pop
dec
dec
das
ficom
and
inc
dec
into
lods
dec
push
fsubr
dec
dec
mov
inc
dec
dec
and
push
dec
mov
int3
push
shr
inc
dec
retf
and
inc
xchg
icebp
dec
daa
pop
push
fistp
jbe
sub
fstp
pop
iret
jns
outs
aad
scas
js
xchg
lods
int
dec
out
jmp
jb
jns
js
pop
push
sbb
cmps
pop
xchg
call
fidiv
ret
adc
jle
xchg
rcr
leave
cs
loope
pop
pop
push
out
fiadd
xchg
jo
test
movs
mov
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
push
pop
mov
or
(bad)
jecxz
cld
pusha
push
(bad)
push
out
pop
or
sbb
cmps
xor
and
rcl
addr16
shld
lea
cmp
or
repz
fs
add
mov
mov
lock
pop
pop
(bad)
(bad)
aam
cmps
sti
dec
jnp
push
sbb
movs
cmp
mov
mov
or
pop
daa
mov
pop
mov
(bad)
fimul
mov
adc
psrlq
(bad)
sar
jnp
fwait
dec
jmp
clc
sti
js
(bad)
lods
jp
arpl
repz
lds
repz
fcom
cli
sub
(bad)
imul
test
xchg
sbb
repnz
std
push
rep
lahf
dec
sar
scas
repz
stc
pop
push
push
mov
inc
clc
clc
push
push
push
pop
icebp
stc
mov
(bad)
addr16
into
pop
mov
(bad)
sar
xor
mov
(bad)
repnz
fcmove
jb
pop
cwde
mov
pop
or
icebp
push
xchg
sbb
pop
es
int
fdivr
pop
cs
out
mov
mov
add
or
and
addr16
movs
cmp
push
addr16
jb
jmp
jo
clc
jb
push
jb
push
jb
jmp
jo
clc
jb
push
jb
push
bnd
shl
clc
jb
push
jb
jmp
enter
jne
pusha
je
pop
inc
dec
jne
pusha
je
jmp
jo
clc
jb
push
jb
push
jb
push
jb
push
jb
clc
push
loop
loope
push
push
push
ins
jp
pusha
jo
push
jo
clc
jb
push
jb
push
jb
push
or
mov
clc
pop
sub
out
adc
mov
jmp
maxps
(bad)
lock
push
jo
loopne
jo
mov
repnz
push
cmp
sub
jo
clc
push
push
xor
adc
repnz
xchg
push
js
inc
dec
fdiv
push
jb
imul
inc
push
jb
mov
fptan
jo
ret
jb
inc
inc
sub
jb
pop
stc
jb
pop
js
lock
dec
inc
push
push
jo
loopne
jo
mov
repnz
push
cmp
sub
mov
ret
push
pop
js
sub
jb
retf
bound
ins
js
lock
repz
mov
fwait
not
sbb
hlt
or
fdiv
xchg
sar
bnd
mov
xor
clc
mov
sbb
jns
sub
cmp
jb
retf
fld
fidivr
push
cs
mov
push
pop
imul
jno
lock
push
dec
retf
jo
js
imul
js
shl
cdq
sti
dec
retf
xchg
ins
js
xchg
lods
pusha
imul
mov
outs
clc
pop
mov
rol
jo
sti
jb
cmc
cmp
repnz
jmp
mov
retf
out
das
js
jo
rcl
sbb
sar
call
xchg
ins
jns
ret
mov
shl
pop
jl
addr16
ret
or
jb
jmp
xchg
dec
ret
push
jb
pop
clc
inc
jo
mov
repz
jmp
jo
clc
jb
sar
repnz
repnz
dec
dec
dec
mov
push
jmp
lock
repnz
sub
jo
rcl
jg
(bad)
pusha
clc
repnz
push
cmp
je
repnz
jmp
adc
xor
xor
stos
ret
push
(bad)
repz
call
into
dec
imul
jo
sti
jb
push
adc
clc
jb
jmp
retf
arpl
aaa
ret
scas
cmp
adc
mov
stos
mov
jae
outs
in
jae
dec
adc
imul
push
xor
ret
push
xor
sub
inc
outs
retf
jp
lds
pop
jo
int3
jb
add
mov
rol
pop
mov
fptan
jo
ret
push
clc
(bad)
(bad)
jo
repnz
jmp
icebp
jo
repnz
jmp
jnp
(bad)
(bad)
fcom
repnz
cmp
lock
ret
retf
repnz
push
xchg
retf
(bad)
fsubr
or
ret
push
jae
hlt
and
ret
or
jb
stos
sti
pop
pop
xchg
fwait
repz
mov
call
push
jmp
jnp
jle
mov
pop
enter
mov
repz
jmp
jo
clc
jb
sar
repnz
repnz
inc
push
jb
dec
dec
mov
lock
repz
cs
bound
ins
js
lock
repz
icebp
jo
not
jne
(bad)
pusha
rcr
push
push
cmp
pusha
fdiv
push
push
cmp
out
repz
repz
pusha
jmp
lods
mov
fptan
popf
sub
jmp
out
test
pop
dec
aaa
mov
cmp
xor
shl
push
repnz
stc
rcr
adc
imul
(bad)
pusha
clc
repnz
push
cmp
dec
cmps
lods
push
clc
(bad)
mov
ret
inc
push
jb
pop
clc
jb
pop
js
jo
out
(bad)
cmc
lock
fnstenv
jmp
fcom
repnz
adc
repnz
lock
rcl
repnz
repnz
jo
ret
in
mov
jmp
cli
push
jb
js
jo
ret
adc
sub
daa
clc
push
inc
ins
test
adc
call
mov
cmp
(bad)
fsincos
clc
psubb
inc
fmul
xor
xchg
test
sti
(bad)
aaa
lea
inc
add
ins
repnz
icebp
je
xor
pop
pop
loope
xor
jo
and
nop
rcr
mov
test
sub
sti
js
pop
aas
pop
rcr
mov
ins
daa
int3
int3
lea
stc
rep
(bad)
dec
push
and
jnp
icebp
(bad)
cli
or
sbb
push
inc
and
jnp
add
add
fistp
fnstcw
mov
xor
pop
ins
iret
outs
js
push
pop
call
lea
int3
ret
mov
clc
xchg
and
cwde
pop
loop
lea
push
or
sbb
jp
pop
or
mov
xchg
push
mov
stc
js
push
pop
bswap
push
push
push
xchg
iret
jns
sti
(bad)
sbb
lock
jb
fnstenv
pop
push
and
sti
js
lock
rcl
dec
ds
shld
adc
pop
xchg
and
jb
cmp
js
sti
mov
or
mov
xchg
mov
jns
jg
repnz
test
call
jo
xor
sub
jge
or
cmp
push
dec
jl
je
xlat
cmp
jo
sti
adc
pop
pmaxsw
push
dec
fadd
mov
xchg
dec
sub
nop
retf
nop
jle
dec
mov
repnz
movs
jl
ins
mov
push
dec
arpl
call
dec
mov
sti
in
sub
int3
iret
test
cli
jmp
add
retf
iret
es
shl
push
and
dec
imul
retf
iret
es
pop
dec
sub
dec
dec
mov
pop
(bad)
rol
js
std
xchg
fnstsw
add
dec
imul
fldl2t
or
pop
sti
nop
retf
nop
retf
nop
retf
nop
retf
nop
(bad)
pop
into
mov
push
mov
adc
pop
xchg
(bad)
cld
sub
push
sti
mov
pop
iret
adc
sti
movs
cmp
std
shl
(bad)
jl
nop
rcr
retf
movs
call
cmps
xchg
add
sbb
dec
pop
lds
repz
loope
call
mov
xor
cli
nop
aad
popa
cmp
push
dec
add
retf
xchg
cmpps
pmulhw
jns
fist
repz
loope
test
xchg
push
pop
clc
and
fcomp
jns
shr
out
clc
xchg
in
sbb
retf
mov
jmp
pop
sti
nop
(bad)
sbb
nop
retf
nop
dec
push
in
(bad)
pop
into
nop
sub
sti
nop
repz
gs
xor
pop
pushf
(bad)
cld
sub
jmp
test
mov
popa
xchg
shl
mov
cld
popa
xchg
shl
outs
dec
sbb
call
jmp
aas
jmp
out
ret
cwde
mov
push
retf
out
mov
(bad)
and
aas
jmp
aas
jmp
call
jnp
add
(bad)
pop
ficom
hlt
cld
popa
cwde
xor
pop
push
(bad)
cld
sub
jmp
nop
(bad)
dec
dec
shr
faddp
adc
retf
nop
(bad)
loop
push
dec
data16
or
jmp
pop
lds
(bad)
pop
and
sbb
cwde
adc
aas
ins
stos
hlt
cld
jns
retf
nop
inc
sbb
gs
lock
jnp
aad
dec
sar
pop
dec
ror
ret
jmp
stos
fcmovnu
sbb
fcmovnu
sbb
retf
nop
push
gs
and
add
nop
retf
mov
pop
sti
nop
retf
movs
retf
nop
or
into
adc
fmul
dec
push
in
hlt
cld
sub
retf
mov
xchg
add
call
popa
xchg
add
sub
adc
pop
out
lods
lahf
fadd
or
fcom
xchg
push
pop
fist
jmp
(bad)
in
add
mov
ins
cld
jb
mov
aaa
mov
and
jl
jp
jnp
bound
cmps
xchg
jp
pop
push
dec
fcomp
in
pusha
fstp
and
jnp
(bad)
js
popf
cmp
cmp
xchg
xlat
in
jo
and
lahf
les
outs
movs
fs
jp
sbb
lea
stc
mov
push
mov
and
js
arpl
lea
push
xchg
vmread
pop
bound
lock
jns
fnstcw
leave
outs
stc
or
and
bswap
jae
sti
dec
out
js
xor
outs
js
adc
inc
sbb
or
lock
mov
stos
js
cs
pusha
mov
vmread
fcmovnb
(bad)
push
push
and
clc
stc
js
pop
and
(bad)
daa
cmps
xlat
mov
sar
aas
jno
push
cmps
add
test
fnstsw
repz
popa
lock
jb
fimul
lds
add
jp
int3
jb
push
es
xchg
fdiv
push
jo
test
stos
js
cli
imul
ror
(bad)
test
push
xchg
pop
test
lock
(bad)
test
clc
mov
(bad)
mov
das
mov
repz
xor
nop
jl
jmp
bound
imul
jge
push
add
sub
inc
gs
movs
ret
mov
cmp
push
add
sub
push
lods
lds
add
ficomp
add
pushf
xor
mov
jnp
lock
test
fs
cmp
dec
push
sar
pop
test
xchg
sti
mov
movs
fdiv
mov
add
pop
push
jnp
seto
add
xor
test
int
sti
mov
idiv
not
push
mov
sub
ins
outs
movs
push
stc
push
xchg
jnp
jae
repnz
and
inc
add
ret
mov
in
sub
pop
mov
push
push
cmp
jns
jp
popf
jo
movs
fdivr
fnstcw
xchg
xor
(bad)
sar
push
add
shr
pop
cmps
mov
bound
fcomi
imul
leave
sbb
lock
js
gs
or
lock
test
loope
mov
sti
jns
fnstcw
in
js
aaa
dec
pop
pop
cs
ja
push
cli
jmp
fmul
stos
cmp
(bad)
js
mov
clc
test
pop
pop
pop
push
and
jnp
into
push
imul
pop
sbb
cli
ins
arpl
sti
push
cmps
jecxz
movs
xchg
shl
jnp
icebp
push
or
fcmove
jb
cmp
mov
sti
push
mov
jo
test
and
cmps
ins
jmp
test
shl
pop
add
jp
(bad)
repnz
fdiv
mov
xchg
rcr
mov
idiv
stc
mov
pop
mov
sar
out
add
cmp
iret
pop
fidiv
fcmovne
stos
iret
jl
hlt
dec
pop
ins
jno
pop
ret
mov
cs
fldcw
mov
pop
mov
mov
faddp
add
in
jge
mov
into
imul
xor
jge
add
das
mov
pop
stos
adc
pop
scas
adc
sbb
inc
shr
xor
jge
mov
pop
stos
adc
pop
(bad)
inc
(bad)
xor
push
ss
fldcw
test
xlat
cwde
test
jmp
hlt
jmp
hlt
jmp
movs
cwde
call
retf
hlt
jmp
hlt
jmp
mov
sbb
hlt
jmp
hlt
push
test
jmp
hlt
jmp
xor
xchg
push
add
call
inc
xor
aam
mov
inc
pop
push
test
hlt
jmp
fistp
test
jmp
hlt
jmp
je
sbb
jmp
or
fprem
aad
pop
out
push
fsub
lock
test
jmp
hlt
push
shl
cli
je
addr16
adc
cwde
add
ret
je
addr16
sbb
xor
ins
mov
test
jmp
je
sbb
jmp
sbb
shl
je
dec
add
sub
jmp
in
stos
loop
pop
enter
jmp
popa
call
fiadd
sbb
jmp
hlt
ret
(bad)
call
mov
add
call
mov
xchg
pop
cwde
test
jl
repz
sbb
mov
adc
(bad)
hlt
rcr
and
lock
hlt
mov
and
lock
hlt
mov
test
repnz
(bad)
and
je
addr16
shr
out
stos
fs
shl
into
adc
test
mov
test
jmp
xor
and
les
mov
hlt
jmp
dec
ins
sbb
hlt
jmp
je
and
test
xchg
mov
test
inc
add
sbb
hlt
jmp
je
and
sub
push
xchg
je
sbb
lea
mov
inc
pop
call
in
xchg
push
xchg
sub
fldenv
hlt
and
push
dec
mov
sbb
ins
addr16
or
mov
inc
pop
call
ins
mov
xor
jmp
mov
sbb
hlt
jmp
mov
jnp
into
ins
mov
test
gs
out
rcr
and
neg
out
lahf
fldenv
neg
icebp
je
mov
je
loop
fstp
dec
adc
push
fnsave
out
cwde
add
jmp
inc
or
test
jmp
hlt
jmp
(bad)
ror
mov
mov
fldenv
stos
mov
test
stos
loopne
sahf
pop
cmp
adc
fadd
fbld
into
push
mov
inc
xor
jmp
mov
mov
jge
cmps
inc
pop
call
pop
sbb
push
inc
ins
call
mov
inc
ins
call
addr16
or
std
fiadd
dec
inc
adc
in
fimul
cs
pop
add
inc
add
dec
shld
shld
lea
movs
sti
lea
movs
sti
lea
movs
sti
lea
movs
jnp
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
lock
test
movs
jnp
shld
shld
shld
shld
shld
lock
test
movs
jnp
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
pop
mov
popf
pop
mov
popf
pop
mov
popf
shld
shld
shld
shld
shld
shld
shld
inc
cdq
jl
shld
shld
shld
shld
shld
shld
movs
loopne
or
pop
lods
(bad)
and
in
movs
mov
clc
psubb
pop
jmp
jae
sar
shld
lea
and
hlt
push
sbb
or
mov
cmp
jbe
xchg
mov
xor
dec
jnp
test
sar
shld
(bad)
into
pop
push
aaa
int
sti
or
clc
jnp
and
mov
and
sti
dec
push
adc
sub
(bad)
lea
sub
bts
mov
or
popa
pop
cmps
dec
fwait
js
js
pop
push
int
push
arpl
jp
sbb
lock
rcl
mov
repz
js
cli
push
mov
inc
push
cmps
(bad)
sar
lods
jnp
pushf
dec
rcr
mov
repnz
call
call
dec
add
sti
outs
or
jnp
lock
test
fcmove
jb
and
sti
dec
std
sub
mov
les
jnp
test
movs
push
leave
out
fs
inc
cli
repz
leave
repz
or
add
ret
aaa
cmps
jmp
out
js
jb
ficomp
and
pop
es
xchg
scas
adc
popf
test
lock
push
aad
pusha
adc
add
jle
xor
mov
xor
inc
jae
ss
xor
xor
mov
sar
aas
stos
cwde
jns
xor
push
sbb
repz
imul
je
fs
jae
sbb
mov
ficomp
or
pop
std
sar
mov
mov
jbe
ss
cdq
mov
lods
ins
imul
shl
shl
mov
mov
jno
dec
or
or
shl
sub
mov
inc
ins
test
pop
and
ror
shld
cmp
and
(bad)
jae
test
retf
push
or
popa
mov
or
(bad)
(bad)
push
mov
jmp
mov
pop
cmps
sbb
dec
fdivr
cwde
fstp
ins
cmps
pop
mov
pop
push
adc
push
jae
and
cld
sbb
clc
(bad)
inc
lea
es
movs
xchg
mov
or
jp
fidiv
xor
add
xchg
js
js
pop
or
test
inc
das
or
mov
clc
shld
lea
push
hlt
(bad)
rol
rcl
mov
pop
scas
(bad)
aas
lea
clc
je
outs
fnstcw
and
es
push
ins
push
cmps
adc
inc
cmps
scas
sbb
sti
sar
jnp
(bad)
sbb
sar
(bad)
jb
js
stc
sbb
test
(bad)
sti
js
rcr
cmovb
loope
or
fist
stc
xchg
mov
pop
js
xor
pop
int3
cmc
push
and
(bad)
repz
mov
lock
jb
or
movs
xchg
(bad)
stc
into
pop
test
sar
mov
fidivr
rol
test
clc
pop
xor
stc
sbb
(bad)
push
cmp
fadd
pop
pop
push
retf
cmp
ret
mov
jne
inc
cld
jne
xchg
outs
imul
loopne
cmp
inc
cld
jne
xchg
arpl
fdivp
mov
ja
ret
mov
jne
ret
xchg
shl
mov
jne
ret
cmp
and
sbb
popf
inc
adc
(bad)
lock
mov
jne
cmp
aaa
mov
pop
mov
xchg
sbb
cmp
cli
ret
lock
jne
loop
add
cmp
add
or
icebp
cld
cmp
cmp
jns
xor
add
cli
jne
cmp
retf
cld
ret
cmp
lods
cmp
jbe
sbb
mov
mov
cmc
rcr
push
xor
sbb
sbb
idiv
not
daa
jne
inc
and
push
cmps
push
sub
mov
call
retf
ret
mov
inc
cmp
inc
and
jbe
ret
add
add
mov
inc
int3
jne
ret
mov
mov
sbb
jne
mov
jg
mov
cmc
rol
call
jbe
push
add
jp
or
cmps
push
and
pop
inc
inc
pop
out
sbb
jne
mov
cmc
ret
and
cmps
iret
xchg
jecxz
pop
inc
ret
mov
iret
xchg
jecxz
pop
inc
dec
clc
jae
sbb
jno
mov
jne
sbb
jno
mov
cmc
cmp
mov
jne
adc
add
and
mov
jne
idiv
mov
pop
call
mov
jg
loope
cmc
mov
sbb
and
jo
mov
adc
jecxz
rol
fild
sbb
cmps
ret
mov
jne
div
push
add
mov
jne
mov
jg
inc
aam
loopne
mov
jne
sbb
imul
shl
loopne
mov
xchg
and
jne
movq
and
push
add
sbb
loope
cmc
loopne
mov
mov
mov
mov
das
or
in
(bad)
inc
cld
and
sbb
ret
mov
cmc
loopne
mov
inc
add
mov
jg
loope
cmc
(bad)
mov
mov
ret
mov
inc
and
jl
xor
inc
pop
jmp
sbb
inc
(bad)
jne
idiv
dec
inc
cmp
inc
cmp
mov
idiv
inc
add
mov
ret
adc
and
jp
add
lea
leave
mov
cld
inc
jmp
cmp
jnp
popf
push
mov
mov
xchg
sti
jne
ja
push
add
mov
and
cmp
sbb
ja
pusha
mov
ss
cmp
inc
cmps
cwde
shl
sti
jne
aaa
repz
add
sub
cwde
rcr
jne
ja
push
add
int3
and
retf
cwde
shl
jne
ja
push
add
mov
and
cmp
inc
aas
mov
add
mov
jne
ret
mov
popa
add
cmp
ret
mov
jne
ret
mov
jne
ret
mov
jne
ret
mov
jne
ret
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
aam
lods
lods
push
fcomp
sub
sbb
out
sub
(bad)
sbb
and
mov
add
mov
ins
or
mov
add
mov
ins
or
ss
dec
cmp
mov
jl
retf
sbb
mov
jl
retf
sbb
ins
or
int
retf
sbb
mov
jl
retf
sbb
mov
jl
jo
jne
cs
ficomp
out
outs
pushf
xlat
sbb
ins
sub
xlat
sbb
fidiv
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
sbb
aaa
push
add
cmps
call
loope
push
add
cmps
call
loope
es
ins
rcr
mov
or
mov
ins
or
mov
add
mov
mov
addr16
sbb
mov
mov
jl
retf
sbb
mov
jl
dec
mov
rcr
aam
in
hlt
add
or
mov
add
mov
ins
or
jl
nop
(bad)
lock
dec
xor
sbb
loope
push
add
cmps
call
loope
jl
dec
leave
fidiv
scas
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
fidivr
and
xor
sbb
mov
repnz
add
out
test
aas
repnz
fidiv
jne
ret
mov
jl
jno
jne
cmp
(bad)
adc
mov
jg
retf
sbb
mov
jl
xchg
shl
test
inc
dec
call
in
or
fidiv
jne
ret
mov
jl
sbb
movs
xor
enter
out
test
repnz
add
out
test
bnd
inc
inc
fidiv
scas
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
fidivr
and
xor
sbb
mov
repnz
add
out
test
aas
jb
shl
retf
sbb
mov
jl
adc
outs
or
ret
mov
fstp
jb
outs
and
pushf
jnp
cmp
ret
hlt
ins
or
push
mov
mov
jle
out
test
add
mov
outs
pusha
fidiv
jne
ret
xchg
ins
or
lahf
pop
xor
sbb
mov
repnz
add
out
test
bnd
inc
inc
fidiv
scas
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
fidivr
and
xor
sbb
mov
repnz
add
out
test
jb
inc
(bad)
retf
sbb
cmc
dec
aaa
retf
sbb
mov
jl
sbb
xchg
sahf
mov
jb
inc
add
pop
call
jmp
ds
inc
add
out
test
mov
push
rcr
xor
sbb
xchg
ins
or
sub
fidivr
enter
out
test
repnz
add
out
test
bnd
inc
inc
fidiv
scas
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
fidivr
and
xor
sbb
mov
repnz
add
out
test
repnz
pop
enter
and
lods
ret
mov
jl
and
xchg
rol
test
repnz
out
test
adc
push
jle
rcr
inc
add
out
test
mov
out
fidiv
jne
stc
es
xor
pop
aas
je
inc
add
out
test
repnz
add
out
test
bnd
inc
inc
fidiv
scas
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
fidivr
and
xor
sbb
mov
repnz
add
out
test
repnz
out
add
shl
or
and
fidiv
cmc
(bad)
inc
in
test
repnz
add
ins
add
xchg
pop
movs
fimul
lahf
jle
push
mov
inc
add
ins
add
jp
sahf
mov
iret
jmp
leave
mov
push
pop
fidivr
repnz
(bad)
mov
repnz
add
out
test
bnd
inc
inc
fidiv
scas
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
fidivr
and
aaa
inc
add
out
test
repnz
add
out
test
repnz
add
out
add
or
xor
mov
add
cmc
and
jle
outs
mov
repnz
add
ins
test
adc
fimul
mov
les
out
test
and
fidiv
jne
stc
test
jle
in
xchg
repz
add
out
test
repnz
add
out
test
repnz
push
ret
xor
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
stos
xchg
xor
jle
out
test
repnz
add
out
test
repnz
add
out
add
aas
jb
mov
imul
mov
ret
addr16
xlat
cwde
pop
mov
dec
cdq
call
adc
imul
inc
add
ins
add
push
in
xor
mov
jl
test
test
(bad)
mov
repnz
(bad)
mov
repnz
add
out
test
repnz
dec
inc
fidiv
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
cmc
jl
cmps
push
mov
lods
(bad)
and
fidivr
repnz
(bad)
mov
repnz
add
out
test
aas
repnz
fidiv
cmps
pop
retf
sbb
mov
sub
data16
idiv
call
adc
imul
les
enter
in
add
ret
movs
ins
or
icebp
sti
push
imul
call
repnz
add
out
test
repnz
out
add
or
scas
sub
fidiv
mov
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
popf
cmc
xor
ja
and
fstp
dec
cdq
(bad)
mov
repnz
add
out
test
aas
repnz
out
xchg
mov
sbb
ins
or
stos
push
inc
add
ins
test
adc
movs
aam
outs
cdq
jle
push
mov
inc
or
dec
mov
ins
or
push
daa
pop
ds
inc
add
out
test
repnz
add
out
test
jb
(bad)
mov
sbb
jbe
pop
and
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
jg
lea
jle
in
test
repnz
add
out
test
repnz
dec
cdq
imul
clc
pushf
cmp
sti
and
cmp
cmp
outs
pop
ins
test
mov
dec
jle
shl
(bad)
and
clc
jno
retf
xchg
mov
sub
inc
add
out
test
repnz
add
out
test
mov
shl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
fdiv
cmp
loop
(bad)
and
sbb
aas
repnz
(bad)
mov
repnz
out
add
lea
aam
dec
mov
pop
aas
stos
mov
ins
pop
ins
add
popf
push
cmps
loop
inc
stos
jle
fbld
dec
sub
test
mov
(bad)
mov
repnz
add
out
test
repnz
in
test
xor
or
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
call
push
aas
stos
mov
(bad)
and
aas
jb
rol
xchg
cld
scas
in
add
inc
test
icebp
sbb
icebp
in
sbb
cdq
repz
outs
or
push
and
mov
push
(bad)
mov
(bad)
ds
(bad)
pop
mov
mov
jb
cdq
pop
jmp
ds
inc
test
jle
out
test
jb
les
mov
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
daa
ret
mov
jl
sub
xor
pop
push
ds
and
add
aas
repnz
std
mov
lock
lods
ins
add
inc
xor
frstor
ret
sahf
icebp
pop
fbld
push
cmp
adc
jecxz
(bad)
mov
repnz
xchg
jns
ins
xchg
sub
les
out
test
mov
fdiv
inc
xor
cmp
retf
cdq
push
xchg
fidiv
in
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
inc
jmp
push
retf
sbb
pop
sub
mov
dec
call
pop
cmp
(bad)
mov
repnz
pusha
popf
shr
pop
mov
frstor
cmps
rcl
fisub
outs
add
ins
test
cmp
adc
fidivr
retf
ins
xlat
cdq
mov
ds
mov
jl
test
fchs
sub
fmul
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ficomp
gs
fbstp
loopne
cmps
cmp
retf
sbb
ins
or
pop
push
es
add
ins
test
jbe
lds
call
stc
ret
mov
fsubr
test
pushf
push
cmps
ficom
pop
es
neg
(bad)
jmp
fnstenv
pushf
mov
jle
bound
pop
xchg
sar
sub
sbb
or
or
ins
pop
es
addr16
cmps
inc
mov
(bad)
imul
ret
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
lods
jne
xor
mov
pop
mov
dec
call
fwait
and
mov
jl
aam
lods
mov
std
and
mov
inc
adc
retf
sbb
retf
inc
jmp
jecxz
imul
sbb
(bad)
daa
ja
rep
inc
xchg
cmps
cmp
fstp
dec
cdq
cmc
sbb
test
cwde
retf
sub
mov
pop
retf
sbb
mov
jge
inc
xchg
ja
jecxz
sbb
nop
loop
(bad)
movs
fidiv
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
jl
sbb
add
ins
test
aas
repnz
jle
ins
test
mov
pop
out
hlt
loop
dec
(bad)
mov
leave
xchg
data16
pop
fdiv
stos
aaa
and
mov
cmp
inc
cmps
ins
or
sub
mov
repnz
cmps
dec
cmp
mov
cmp
inc
movs
ins
or
xchg
pop
jge
iret
and
mov
ds
adc
ins
jg
bound
add
in
add
les
out
add
xchg
repz
xor
adc
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
push
inc
and
mov
repnz
add
out
add
aas
repnz
pop
in
sub
inc
xchg
test
mov
jl
retf
sbb
mov
jl
pusha
mov
xor
fidiv
jne
ret
mov
jl
outs
popf
cmc
cmp
and
push
mov
push
jbe
sub
push
mov
enter
ins
test
repnz
add
out
test
sbb
mov
fidiv
jns
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
pop
jmp
mov
repnz
(bad)
mov
repnz
ins
add
jae
mov
or
dec
cld
imul
mov
jl
retf
sbb
mov
jl
pusha
mov
xor
fidiv
jne
ret
mov
jl
retf
sbb
add
pusha
add
lds
mov
jb
inc
add
out
test
repnz
out
add
int
xchg
int3
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
inc
test
scas
lods
pop
pop
mov
dec
cdq
(bad)
mov
repnz
add
out
test
mov
mov
pop
mov
sub
fidiv
jne
data16
fsub
loop
retf
retf
jmp
loopne
popf
and
jnp
or
stc
dec
ret
mov
jl
dec
mov
ret
sub
out
mov
les
out
test
repnz
add
out
test
aas
repnz
pop
arpl
push
cld
adc
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
dec
cmp
aas
mov
sbb
mov
repnz
add
out
add
xor
mov
jl
in
pop
fwait
out
jnp
clc
mov
jl
retf
sbb
mov
xor
sub
pusha
dec
fist
mov
sub
pusha
jbe
adc
fidiv
jne
sbb
out
pop
add
out
test
repnz
add
out
test
jb
(bad)
sbb
fwait
jbe
and
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
cld
sub
lods
lods
ret
xchg
jge
bound
aam
jbe
inc
xchg
adc
das
bound
mov
fwait
cli
daa
in
test
jp
jmp
mov
add
jne
es
pop
int3
test
pusha
rcr
adc
mov
adc
test
addr16
adc
mov
add
cmc
mov
or
das
aam
fstp
retf
xchg
jge
loop
aam
jbe
rol
add
idiv
fidiv
jne
ret
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
scas
jl
movs
(bad)
jp
fwait
or
jae
movs
pop
adc
mov
xchg
(bad)
ja
aam
loop
mov
out
and
call
cmp
in
nop
jl
push
pop
dec
adc
test
addr16
adc
mov
adc
test
addr16
adc
push
fs
xor
popf
jne
adc
mov
and
and
push
in
push
push
adc
mov
mov
shr
fist
outs
lods
xor
xor
add
ret
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
out
or
popf
mov
mov
add
mov
rol
or
ss
pop
rcr
cmps
mov
adc
test
addr16
adc
mov
adc
test
addr16
adc
mov
adc
sti
pusha
retf
sbb
xchg
add
mov
mov
pop
xor
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
test
inc
enter
dec
mov
loop
mov
mov
fist
lds
popa
add
shl
mov
xchg
int3
test
pusha
rcr
daa
mov
adc
aaa
cli
pusha
rcr
cmps
mov
adc
mov
adc
lds
xchg
pop
xor
mov
movs
call
xlat
jle
dec
mov
jnp
enter
into
mov
fidiv
jne
ret
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
add
test
xchg
jmp
jno
inc
test
cld
mov
jo
(bad)
stc
mov
jl
loop
push
mov
mov
addr16
push
or
psubq
fcom
or
mov
adc
gs
fistp
adc
test
loopne
sbb
mov
xchg
xchg
cld
and
xchg
ret
inc
add
xchg
jge
ins
add
mov
mov
fidiv
jne
ret
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
(bad)
cwde
pop
ds
mov
repnz
out
add
xor
cmp
nop
outs
mov
mov
cmp
jne
dec
push
mov
les
rcr
daa
test
adc
sub
ins
(bad)
and
jl
sahf
aam
ss
je
adc
and
js
jno
inc
add
out
add
aas
repnz
add
out
test
aas
jb
inc
and
cdq
sti
adc
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
rcl
fidivr
enter
out
test
repnz
add
out
add
aas
repnz
pop
icebp
xlat
sbb
mov
jl
aad
jne
inc
sub
inc
mov
cmps
mov
adc
in
push
mov
pushf
(bad)
jl
int3
aas
jae
jge
fidivr
fidiv
enter
out
test
repnz
add
out
test
aas
jb
inc
add
loopne
lds
dec
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
push
push
(bad)
and
fidivr
repnz
(bad)
mov
repnz
out
add
sub
cmp
lahf
push
inc
jge
mov
out
jne
ret
mov
jl
retf
sbb
xchg
outs
mov
mov
gs
pop
push
mov
push
stc
loope
cmp
sbb
mov
jl
retf
sbb
ret
daa
jmp
repnz
rol
in
pop
fidivr
repnz
(bad)
mov
repnz
add
ins
xchg
fiadd
ret
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
add
in
xchg
repnz
add
out
test
jb
inc
add
sbb
sub
sahf
pop
dec
sbb
push
dec
xchg
jle
in
test
div
loopne
inc
test
retf
sbb
call
pop
push
fmul
mov
mov
retf
sbb
mov
jl
(bad)
iret
xor
and
sar
repnz
js
into
ret
pop
mov
dec
cdq
(bad)
mov
repnz
add
ins
add
in
imul
fidiv
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
neg
mov
repnz
add
ins
add
cmp
push
mov
out
xchg
jmp
mov
dec
cdq
fimul
inc
test
mov
jl
retf
sbb
mov
jl
pusha
jmp
movs
lahf
mov
jl
retf
sbb
mov
jl
out
sahf
cmc
mov
mov
dec
inc
pop
mov
dec
lods
arpl
sub
sub
add
out
test
repnz
add
out
add
xor
mov
mov
pop
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
div
retf
es
(bad)
(bad)
and
pop
aas
repnz
stc
dec
cdq
in
loopne
sahf
fistp
mov
xor
adc
sahf
ret
outs
popf
clc
sbb
pop
push
mov
xor
fidiv
jne
ret
mov
jl
call
pop
movs
fidiv
jne
ret
mov
jl
out
lahf
cmc
ss
xchg
jmp
daa
and
fidiv
cmp
cld
test
mov
add
pop
sub
ja
inc
add
outs
add
retf
cwde
and
push
fidiv
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
lds
(bad)
mov
pop
sub
mov
scas
ret
mov
jl
adc
push
cmps
jo
inc
aas
jle
loop
pop
mov
xor
in
lods
(bad)
mov
inc
iret
jbe
loop
retf
sbb
ins
or
and
xor
xchg
xlat
adc
je
popf
pusha
stos
cmp
lds
ins
add
pop
ja
sbb
xor
sbb
pop
sbb
adc
movs
sub
addr16
mov
xchg
add
ret
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
in
push
xchg
pop
sbb
fidiv
jne
rol
sub
pop
mov
mov
neg
jmp
and
mov
sub
test
dec
add
push
add
mov
mov
fwait
sub
out
call
out
(bad)
es
sub
sbb
fstp
retf
sbb
ins
mov
scas
ret
mov
jl
and
shl
push
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
jl
cld
add
ret
ret
mov
jl
add
mov
std
mov
jo
rol
out
mov
jbe
sub
in
lods
outs
mov
jno
popf
enter
adc
test
pop
cmp
cs
fwait
cli
cmps
and
mov
jge
jecxz
xchg
outs
mul
rol
add
les
in
xchg
cli
cdq
lea
clc
push
retf
sbb
inc
mov
xor
sbb
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
(bad)
xor
add
out
test
aas
repnz
jl
outs
or
jo
iret
test
pop
pop
(bad)
out
add
mov
mov
pop
or
add
inc
cmp
cmps
dec
fwait
stc
daa
mov
lods
fsub
dec
test
in
lahf
jb
sti
add
in
add
inc
add
out
add
ds
sti
and
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
jne
and
ins
push
jge
scas
pop
fidivr
stc
ds
test
(bad)
and
aas
jb
les
out
add
in
in
stos
mov
ss
test
call
rol
daa
retf
and
mov
add
movs
push
(bad)
cmp
adc
rcl
and
fidivr
repnz
(bad)
mov
jb
lds
push
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
loope
mov
push
inc
ss
mov
repnz
add
out
test
repnz
sbb
add
mul
xchg
xchg
mov
dec
jg
xor
mov
dec
cdq
push
add
cmp
enter
pop
pop
mov
dec
cdq
push
add
punpckhdq
dec
jl
mov
ds
add
out
test
repnz
out
add
sbb
cmp
sbb
data16
mov
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
push
movs
ja
stos
imul
test
(bad)
and
aas
repnz
add
out
test
aas
jb
inc
lahf
dec
cdq
jge
int
fs
and
icebp
xchg
xor
mov
enter
ins
xchg
daa
mov
movs
stc
cmps
xchg
in
mov
enter
in
add
(bad)
les
repnz
xchg
out
mov
enter
out
test
repnz
add
out
test
jb
inc
or
xchg
popa
fdivr
dec
out
mov
movs
retf
and
xchg
fidiv
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
jl
xchg
fisub
add
call
ds
add
out
test
repnz
add
out
test
aas
repnz
pop
xor
sbb
jle
jmp
les
dec
cdq
cmc
sti
ins
xchg
mov
ins
or
adc
mov
dec
cdq
std
scas
outs
add
(bad)
mov
cwde
ins
or
addr16
xor
cdq
(bad)
mov
repnz
add
out
test
repnz
add
in
add
es
aam
fidiv
out
push
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
popf
adc
and
test
repnz
add
out
test
repnz
add
out
test
mov
outs
pop
fidiv
jne
add
in
test
repnz
add
sbb
cli
fistp
retf
sbb
lock
or
fwait
xchg
in
aas
loope
les
out
test
mov
jl
xchg
mov
(bad)
and
aas
repnz
add
out
test
repnz
add
out
test
mov
inc
retf
fidiv
scas
fs
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
fidivr
and
xor
sbb
mov
repnz
add
out
test
repnz
add
out
test
jb
cmps
mov
jl
mov
out
mov
repnz
enter
pop
lahf
retf
sbb
(bad)
ins
or
popf
dec
xor
mov
dec
cdq
(bad)
mov
repnz
fidiv
cmc
lods
fadd
out
test
repnz
add
out
test
repnz
add
out
test
bnd
ret
inc
fidiv
scas
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
fidivr
and
xor
sbb
mov
repnz
add
out
test
repnz
ins
add
int3
cld
pushf
xlat
and
lahf
outs
stc
jl
jge
mov
cdq
jle
ins
test
jb
rcr
inc
retf
sbb
ins
or
(bad)
lods
push
mov
dec
cdq
(bad)
mov
repnz
dec
cmp
popf
cmc
xor
(bad)
mov
repnz
(bad)
mov
repnz
add
out
test
bnd
inc
inc
fidiv
scas
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
fidivr
and
xor
sbb
mov
repnz
add
out
test
repnz
push
dec
cdq
gs
pop
pop
jmp
iret
ret
mov
jl
and
mov
std
and
ss
sbb
mov
fmulp
mov
ins
or
out
adc
in
sbb
dec
test
lahf
(bad)
and
add
mov
push
in
xor
retf
sbb
mov
jo
inc
add
out
test
repnz
add
out
test
bnd
inc
inc
fidiv
scas
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
fidivr
and
xor
sbb
mov
repnz
add
out
test
aas
repnz
ins
enter
mov
ins
or
mov
add
cwde
cmc
sub
or
mov
mov
jl
retf
sbb
mov
jl
add
jns
pop
and
(bad)
jl
retf
sbb
cmps
pop
pushf
stc
es
jno
mov
enter
out
test
repnz
add
out
test
bnd
inc
inc
fidiv
scas
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
fidivr
and
xor
sbb
mov
repnz
add
out
test
jb
inc
cwde
xor
push
cmp
mov
jl
xchg
cmc
dec
adc
add
aaa
hlt
lods
bound
jmp
sub
pop
aaa
outs
or
mov
enter
fidiv
ret
mov
jl
retf
sbb
mov
dec
xor
aas
add
cdq
(bad)
mov
repnz
add
out
test
bnd
inc
inc
fidiv
scas
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
fidivr
and
xor
sbb
mov
repnz
add
out
test
mov
jmp
fidiv
jne
ret
mov
jl
lods
push
sub
ret
retf
sar
movs
mov
mov
add
jno
push
xchg
dec
ss
cmp
call
add
mov
ins
or
frstor
ja
xchg
and
retf
fwait
(bad)
and
aas
repnz
add
out
test
bnd
inc
inc
fidiv
scas
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
sub
mov
jns
push
add
cmc
ret
mov
sub
mov
fidiv
call
sbb
ins
or
fdivr
rcl
xor
shl
jmp
xchg
in
shr
int3
sub
das
jmp
aaa
retf
mov
test
jg
add
or
dec
dec
sbb
sub
fidiv
jne
ret
mov
jl
das
inc
outs
call
loopne
push
cmp
ret
mov
add
cmc
ret
iret
inc
fidiv
scas
imul
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
in
add
scas
in
rcl
jmp
bound
mov
cmps
arpl
and
dec
fidiv
jne
inc
xchg
ins
or
push
cld
imul
outs
cmp
xor
cwde
popa
or
or
dec
push
inc
das
pop
adc
mov
(bad)
and
sbb
scas
fstp
pop
xchg
xchg
mov
loope
fidiv
jne
ret
mov
jl
sbb
jne
and
in
(bad)
imul
nop
fst
mov
jmp
bound
pmullw
fidiv
jne
ret
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
xchg
inc
ret
mov
add
sub
xchg
pop
ret
mov
add
sub
xchg
pop
inc
ret
mov
jl
retf
sbb
ins
or
and
ror
ret
cmc
mov
xchg
xor
lods
and
jle
fst
push
das
or
jne
enter
nop
mov
xor
inc
retf
sbb
mov
jl
retf
sbb
stc
aaa
xor
not
mov
add
sub
xchg
pop
ret
xor
fidiv
(bad)
pop
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
xor
add
inc
xchg
call
sar
cmps
sbb
test
xor
sbb
aad
xor
mov
(bad)
jnp
iret
or
and
and
inc
inc
or
scas
push
xchg
jge
fidiv
and
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
cmps
out
pop
add
push
retf
clc
xor
test
lfs
lock
jo
dec
dec
out
jecxz
push
pop
inc
mov
sub
xchg
movs
js
in
cmp
inc
push
sbb
mov
retfw
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
cmp
cmp
loopne
retf
xchg
jl
out
mov
outs
dec
cmp
ins
adc
add
dec
lds
jmp
adc
or
aas
lock
xchg
adc
dec
jecxz
dec
leave
add
mov
mov
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
sbb
into
xchg
cs
add
jl
stc
xchg
inc
jl
ret
pop
mov
push
into
pop
dec
retf
pop
(bad)
sbb
repnz
push
nop
inc
cmp
jmp
lds
int
jae
sti
sbb
and
ret
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
pushf
mov
stc
scas
jmp
mov
in
into
or
xor
add
or
pusha
mov
xor
mov
mov
jae
pop
neg
mov
pushf
mov
les
cmps
adc
fidiv
jne
ret
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
xor
(bad)
sbb
mov
gs
fmul
or
mov
adc
fbstp
leave
test
fmul
ret
vpsubsw
and
data16
or
mov
ret
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
xchg
jl
adc
int3
xchg
mov
dec
into
mov
das
imul
arpl
sub
xchg
xchg
jle
clc
(bad)
iret
add
mov
push
sbb
mov
cmp
movs
fs
mov
or
adc
mov
daa
int3
fidiv
jne
ret
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
test
jne
dec
ss
aam
stos
clc
dec
push
rcl
cwde
sbb
popa
pop
xlat
sub
and
test
outs
sti
xor
inc
sub
sbb
in
cmc
in
mov
mov
scas
scas
jo
push
pushf
adc
xor
mov
jle
mov
xchg
lods
cdq
and
fcomp
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
fcom
xchg
in
stos
test
mov
push
aam
jp
aam
sbb
pop
fsubr
pop
sbb
xor
push
xchg
dec
stc
shl
stos
dec
push
push
adc
cdq
mov
xchg
push
push
sbb
push
lock
jns
mov
xchg
dec
mov
xor
adc
ret
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
outs
in
pushf
fsub
mov
daa
int
loopne
mov
pop
sub
adc
fstp
adc
fdiv
ds
or
cs
sbb
shr
ret
xor
stos
in
pop
outs
adc
and
out
sbb
add
and
or
daa
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
push
fidiv
jne
fadd
(bad)
xor
mov
ins
or
out
jl
jns
cs
mov
jl
retf
sbb
sbb
or
dec
cmp
ins
or
cli
jl
sub
and
mov
push
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
jl
sti
lea
xor
xor
bswap
mov
ins
or
mov
add
mov
xor
arpl
mov
xchg
inc
jae
aas
push
retf
sbb
mov
jl
retf
sbb
ins
or
sti
xchg
pusha
sahf
shr
bound
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
xchg
jl
daa
fist
mov
mov
outs
retf
sbb
mov
jl
push
fadd
fwait
daa
mov
push
sar
daa
pop
sbb
ror
sub
aad
movs
pop
sub
cwde
and
mov
or
mov
pop
call
mov
fidiv
jne
ret
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
pushf
jl
(bad)
jae
int
and
sub
nop
in
mov
or
dec
ja
imul
xchg
test
push
aam
js
fyl2x
adc
in
fwait
bound
add
cdq
in
pop
jo
cmps
arpl
icebp
das
movs
xor
jmp
in
leave
aam
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
jne
lods
imul
sahf
jns
push
daa
ficomp
(bad)
jae
int3
std
push
mov
inc
in
cmp
or
add
test
dec
daa
fmul
xchg
xor
jg
mov
sti
mov
push
imul
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
retf
or
leave
xchg
bound
pop
fld
push
movs
inc
xchg
js
push
pusha
add
(bad)
xor
pop
push
retf
adc
loopne
pop
dec
xor
and
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
jno
shl
or
mov
ins
or
cld
add
fld
fidiv
jl
retf
sbb
call
push
xor
and
and
(bad)
fidiv
jne
ret
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
fbld
stc
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
xchg
mov
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
(bad)
push
pop
rcr
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
(bad)
pop
and
movs
sahf
xchg
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
retf
sbb
mov
jl
ret
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
add
mov
jmp
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
ins
or
mov
add
mov
aam
ret
mov
jne
xlat
mov
jne
fnstsw
jne
ret
mov
jne
ret
mov
jne
ret
mov
jne
ret
mov
adc
add
jne
inc
sub
popf
mov
cmc
pop
inc
sub
popf
mov
jne
ret
fsubr
add
mov
xchg
add
ret
cmp
jns
inc
or
cmp
vmwrite
inc
psubw
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
ret
mov
ret
mov
ret
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
mov
and
std
ret
fcom
add
mov
adc
add
jne
inc
in
add
mov
sub
popf
mov
cmc
pop
inc
sub
sbb
mov
adc
add
cmc
pop
inc
sub
popf
mov
jne
ret
out
add
mov
adc
and
je
inc
pop
adc
xchg
inc
outs
in
ret
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
vmwrite
inc
vmwrite
ret
cmp
stc
cmp
jns
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
(bad)
or
pop
and
jge
pop
push
add
cmp
inc
sub
mov
mov
sub
pushf
mov
jne
ret
out
add
cmc
pop
ret
out
add
mov
sub
inc
fcom
mov
mov
adc
add
cmc
pop
ret
out
add
cmp
arpl
fst
add
cmc
loope
ficom
pop
xor
inc
mov
inc
vmwrite
ret
cmp
stc
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
ret
vmwrite
ret
or
cmp
or
cmp
stc
mov
inc
(bad)
jns
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
or
pop
and
push
add
mov
sub
pushf
mov
cmc
pop
ret
pop
sub
pushf
mov
cmc
pop
inc
sub
pushf
mov
cmc
pop
inc
out
add
mov
adc
add
mov
adc
mov
mov
sub
mov
mov
adc
mov
mov
push
and
out
in
inc
mov
ret
mov
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
vmwrite
leave
(bad)
popa
sub
sar
ret
cmp
vmwrite
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
and
push
add
mov
sub
mov
mov
sub
pushf
mov
cmc
pop
inc
sub
mov
mov
adc
add
cmc
pop
ret
mov
adc
mov
mov
adc
mov
mov
adc
add
jne
ret
pop
xchg
add
mov
jne
inc
ficom
and
ins
in
ret
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
ret
mov
(bad)
stc
fistp
cwde
pushf
pop
jb
mov
inc
vmwrite
inc
psubw
inc
psubw
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
es
inc
pop
push
add
cmp
arpl
pop
adc
add
cmc
pop
inc
sub
pushf
mov
cmc
pop
ret
fcom
add
mov
adc
add
mov
sub
ret
fst
add
mov
xchg
add
mov
adc
mov
mov
pop
add
cmp
ret
and
jo
xor
ret
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
ror
xor
(bad)
jns
fimul
xchg
and
jne
mov
inc
push
stc
cmp
stc
cmp
psubw
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
daa
or
ret
fst
add
jne
ret
pop
adc
add
cmc
pop
inc
out
add
cmc
pop
inc
out
add
mov
adc
add
jne
ret
mov
adc
and
cmc
bound
adc
and
cmc
bound
adc
mov
mov
adc
and
cmc
loop
ficom
add
inc
or
ret
cmp
psubw
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
ret
mov
mov
push
fimul
add
ret
cmp
jns
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
daa
or
pop
push
add
cmc
arpl
adc
add
jne
inc
sub
mov
cmp
arpl
adc
add
jne
ret
pop
adc
add
jne
ret
mov
adc
and
cmc
(bad)
pop
adc
mov
mov
adc
mov
mov
adc
and
jne
ret
loope
ficom
pop
mov
ins
in
ret
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
ret
mov
psubw
fimul
push
aas
inc
nop
idiv
inc
vmwrite
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
sbb
std
inc
pop
adc
pushf
mov
jne
inc
sub
mov
mov
sub
mov
cmp
inc
pop
adc
add
jne
ret
fcom
pushf
mov
cmc
fadd
adc
add
mov
adc
mov
mov
xchg
add
mov
adc
and
jne
inc
pop
adc
and
in
gs
mov
inc
(bad)
jns
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
ror
xor
psubw
fisttp
or
inc
adc
ror
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
sbb
jge
pop
adc
mov
mov
adc
add
mov
adc
add
jne
ret
pop
adc
add
jne
ret
addr16
add
jne
ret
mov
pop
add
mov
adc
add
jne
inc
pop
adc
add
jne
inc
pop
adc
add
cmc
bound
xchg
and
ret
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
ror
mov
psubw
fisttp
or
les
stc
cmp
vmwrite
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
sbb
jge
pop
adc
mov
mov
sub
mov
mov
adc
add
jne
ret
pop
sub
mov
mov
adc
add
cmp
pop
ret
cmp
add
pop
pop
add
mov
adc
mov
mov
adc
mov
mov
adc
mov
mov
xchg
and
inc
mov
ret
cmp
psubw
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
ret
cmp
jns
inc
(bad)
jns
inc
(bad)
jns
inc
(bad)
stc
cmp
(bad)
jns
inc
psubw
ror
aaa
int
jns
fimul
or
inc
popf
jne
inc
push
jns
inc
vmwrite
inc
(bad)
stc
cmp
jns
inc
(bad)
stc
cmp
(bad)
stc
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
sbb
add
mov
adc
add
mov
adc
add
jne
inc
fcom
add
cmc
arpl
addr16
add
cmc
pop
ret
mov
pop
add
mov
adc
mov
mov
adc
add
mov
adc
add
mov
xchg
and
ret
cmp
psubw
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
psubw
ret
cmp
stc
cmp
psubw
inc
(bad)
stc
cmp
stc
cmp
(bad)
jns
ror
(bad)
(bad)
sahf
mov
les
hlt
cmp
mov
cmp
jns
ret
cmp
stc
cmp
(bad)
stc
mov
inc
psubw
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
mov
sbb
add
mov
adc
add
cmc
arpl
adc
mov
mov
adc
mov
mov
adc
add
jne
ret
cmp
add
mov
adc
mov
mov
adc
mov
mov
adc
add
mov
adc
and
loop
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
or
mov
ret
mov
inc
mov
cmp
stc
mov
ret
mov
ror
mov
(bad)
clc
(bad)
fisttp
aas
inc
pop
cmc
cmp
stc
mov
ret
mov
inc
(bad)
jns
ret
push
jns
ret
cmp
js
inc
vmwrite
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
mov
sbb
add
cmp
pop
ret
pop
adc
add
cmp
arpl
adc
add
cmc
arpl
fcom
mov
cmp
inc
fcom
pushf
mov
cmc
pop
ret
cmp
add
cmp
ret
cmp
(bad)
fst
mov
mov
adc
add
jne
inc
pop
adc
add
cmc
jecxz
fst
mov
ret
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
retf
test
int
(bad)
div
inc
cmp
mov
cmp
ret
mov
ror
aaa
into
(bad)
jns
fimul
push
cmp
cmp
jp
lds
clc
mov
retf
or
sub
test
and
es
cmp
hlt
cmp
(bad)
jns
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
(bad)
or
pusha
sbb
std
inc
fcom
add
mov
adc
add
cmc
arpl
fcom
add
jne
inc
pop
adc
add
jne
inc
pop
adc
mov
mov
adc
add
cmp
ret
mov
adc
mov
mov
adc
add
cmc
arpl
adc
add
jne
ret
pop
xchg
add
stos
jbe
xor
inc
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
vmwrite
dec
vmread
fimul
push
sub
fistp
and
jle
sub
sbb
aas
inc
mov
aas
inc
mov
pop
mov
and
or
sbb
mov
data16
or
sub
mov
shl
push
mov
inc
lahf
jne
inc
psubw
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
or
pusha
sbb
std
inc
pop
adc
mov
mov
adc
add
mov
sub
mov
mov
adc
add
jne
ret
fcom
mov
mov
adc
add
mov
jne
inc
pop
adc
add
cmc
arpl
fcom
add
jne
inc
pop
adc
add
mov
adc
and
pusha
gs
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
ret
mov
ror
mov
mov
pop
add
mov
adc
mov
sbb
pop
xchg
(bad)
and
push
xchg
mov
cmp
out
addr16
pushf
mov
jne
inc
fcom
xchg
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
mov
sbb
jle
pop
adc
mov
mov
sub
mov
mov
sub
mov
mov
adc
and
cmc
arpl
adc
add
jne
ret
mov
pop
add
mov
cmc
(bad)
fst
and
cmc
bound
adc
add
cmp
ret
pop
adc
add
cmc
arpl
pop
adc
add
inc
loopne
mov
ret
cmp
vmwrite
inc
(bad)
stc
cmp
stc
cmp
jns
inc
(bad)
stc
cmp
(bad)
stc
cmp
(bad)
stc
cmp
psubw
ret
mov
into
push
addr16
mov
adc
mov
mov
adc
mov
mov
adc
add
jne
inc
pop
adc
mov
mov
adc
add
cmc
fadd
adc
enter
js
ret
cmp
stc
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
mov
sbb
adc
mov
cmp
inc
sub
mov
mov
sub
mov
mov
adc
mov
mov
adc
add
jne
ret
cmp
add
adc
mov
mov
xchg
add
cmp
ret
mov
adc
mov
mov
adc
mov
mov
xchg
add
ret
cmp
push
cli
cmp
vmwrite
ret
cmp
stc
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
(bad)
stc
cmp
(bad)
stc
mov
ret
movs
cmp
ret
mov
adc
mov
mov
xchg
add
mov
adc
mov
mov
xchg
add
mov
adc
add
jne
ret
in
add
xchg
push
cmp
vmwrite
inc
psubw
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
vmwrite
inc
mov
data16
jge
out
add
mov
sub
popf
mov
cmc
pop
inc
sub
pushf
mov
jne
ret
fcom
add
mov
adc
add
mov
sub
ret
fst
mov
mov
adc
mov
mov
adc
add
jne
ret
pop
adc
add
mov
xchg
add
inc
pusha
cmp
cli
cmp
jns
ret
mov
inc
vmwrite
inc
(bad)
jns
inc
(bad)
stc
cmp
stc
mov
inc
psubw
inc
(bad)
cli
mov
ror
ret
mov
adc
mov
mov
adc
and
cmc
bound
adc
add
mov
pop
add
mov
adc
add
cmc
pop
ret
pop
sub
mov
das
pop
mov
inc
psubd
ret
cmp
(bad)
stc
cmp
jns
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
mov
sbb
adc
mov
mov
sub
pushf
mov
cmc
pop
inc
out
add
mov
sub
mov
mov
adc
mov
mov
adc
add
cmp
arpl
adc
mov
mov
adc
add
jne
ret
fst
mov
mov
adc
mov
shl
inc
mov
mov
ret
mov
inc
vmwrite
ret
cmp
stc
cmp
vmwrite
ret
cmp
or
and
js
pop
add
mov
mov
adc
and
jne
inc
pop
adc
add
jne
inc
pop
adc
add
jne
inc
pop
pop
add
mov
sub
pushf
mov
cmc
pop
ret
sub
sbb
stc
mov
sar
aas
inc
mov
mov
ret
mov
inc
psubw
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
or
gs
adc
pushf
cmp
ret
mov
sub
mov
mov
adc
add
cmc
arpl
adc
add
mov
adc
add
jne
ret
mov
adc
mov
mov
adc
mov
mov
adc
add
cmc
pop
ret
fst
add
jne
inc
pop
adc
xor
ror
ror
mov
inc
(bad)
stc
cmp
jns
inc
(bad)
jns
inc
mov
inc
(bad)
jp
inc
vmwrite
jbe
js
ds
ret
pop
sub
mov
mov
adc
add
cmp
arpl
pop
adc
add
cmc
arpl
adc
and
jne
inc
fst
add
mov
sub
pushf
mov
cmc
pop
ret
pop
sub
sbb
or
fdiv
ror
mov
ret
cmp
stc
cmp
jns
inc
psubw
inc
(bad)
stc
cmp
stc
cmp
vmwrite
(bad)
mov
push
or
out
add
mov
adc
add
cmc
pop
inc
out
add
cmc
pop
inc
sub
mov
mov
adc
add
pop
ret
mov
adc
and
jne
ret
mov
adc
mov
mov
adc
add
jne
ret
pop
adc
add
mov
xchg
and
ja
xor
loope
mov
ror
ret
cmp
jns
ret
mov
ror
ror
stos
cmp
xor
mov
xchg
add
mov
adc
add
jne
ret
fst
mov
mov
adc
pushf
mov
jne
ret
fst
mov
mov
sub
pushf
mov
jne
inc
in
add
mov
sub
aaa
inc
popf
in
ret
or
ret
mov
ret
cmp
jns
inc
(bad)
stc
cmp
stc
cmp
jns
inc
mov
push
mov
ret
fcom
add
jne
inc
out
add
jne
inc
sub
mov
mov
sub
mov
mov
adc
mov
mov
sub
mov
mov
adc
mov
mov
sub
mov
mov
adc
add
cmc
(bad)
pop
xchg
add
ret
cmp
hlt
cmp
jns
ret
mov
ror
ret
cmp
or
cmps
or
pop
fld
es
mov
jne
inc
pop
adc
add
jne
inc
fcom
mov
mov
adc
mov
mov
adc
pushf
mov
cmc
arpl
adc
add
arpl
sub
pushf
mov
jne
inc
out
add
mov
sub
mov
inc
mov
stc
mov
inc
mov
inc
(bad)
stc
cmp
(bad)
stc
mov
inc
vmwrite
inc
mov
push
or
ret
pop
adc
pushf
mov
jne
ret
out
add
mov
sub
mov
mov
adc
add
cmc
arpl
addr16
add
jne
ret
mov
adc
mov
mov
adc
mov
mov
adc
add
cmc
pop
ret
fst
add
jne
inc
pop
adc
mov
shl
cmp
je
inc
lea
inc
or
mov
inc
or
cmp
vmwrite
jmp
mov
add
mov
jne
inc
fst
mov
mov
adc
add
jne
inc
fcom
mov
mov
adc
pushf
mov
jne
ret
ficom
add
mov
adc
add
jne
ret
out
add
mov
sub
cli
mov
mov
ror
mov
inc
or
mov
ret
cmp
vmwrite
inc
or
in
mov
ret
pop
adc
pushf
cmp
ret
mov
sub
mov
mov
sub
mov
mov
sub
pushf
mov
cmc
jecxz
addr16
add
jne
ret
mov
adc
mov
mov
adc
mov
mov
adc
add
cmp
pop
inc
fst
mov
mov
xchg
and
hlt
xor
in
mov
rol
mov
ror
mov
mov
ja
inc
fcom
add
cmp
arpl
pop
adc
add
jne
inc
pop
adc
add
jne
inc
pop
sub
mov
mov
adc
add
mov
adc
mov
mov
sub
pushf
mov
cmc
pop
inc
sub
pushf
mov
cmc
pop
ret
fcom
add
mov
sub
cmp
clc
cmp
sti
cmp
jns
ret
cmp
stc
cmp
jns
push
mov
inc
pop
adc
popf
mov
jne
ret
fcom
add
jne
inc
out
add
jne
inc
out
add
mov
adc
add
cmc
pop
ret
mov
adc
and
cmc
bound
adc
mov
mov
sub
mov
cmp
inc
pop
adc
add
mov
adc
xor
gs
ret
mov
inc
psubw
ror
imul
mov
mov
jne
ret
fst
add
mov
adc
add
mov
adc
add
cmc
arpl
sub
ret
cmp
inc
out
add
mov
adc
mov
mov
adc
add
cmc
pop
inc
sub
pushf
mov
cmc
pop
inc
sub
pushf
mov
cmc
pop
ret
sub
and
in
adc
lds
clc
mov
ret
cmp
stc
cmp
jns
push
or
ret
pop
adc
pushf
mov
jne
inc
out
add
mov
sub
pushf
mov
jne
inc
sub
mov
mov
sub
popf
mov
cmc
pop
ret
mov
adc
mov
mov
adc
mov
mov
adc
add
mov
adc
add
mov
adc
xor
gs
inc
or
cmp
stc
mov
inc
(bad)
sti
mov
sub
je
pop
xchg
add
cmp
mov
adc
add
cmc
arpl
pop
adc
add
cmc
arpl
pop
adc
add
mov
sub
mov
cmp
inc
sub
pushf
mov
jne
inc
pop
adc
add
cmc
arpl
adc
add
cmc
pop
inc
out
add
mov
sub
pushf
mov
cmc
pop
ret
data16
add
mov
repz
inc
(bad)
clc
mov
ret
cmp
mov
push
or
ret
pop
adc
pushf
cmp
ret
mov
sub
mov
mov
sub
pushf
mov
cmc
pop
inc
sub
mov
mov
sub
sahf
mov
jne
ret
cmp
add
mov
xchg
add
mov
sub
mov
mov
adc
mov
mov
xchg
add
mov
xor
jnp
mov
dec
cmp
inc
(bad)
cli
mov
mov
(bad)
mov
xchg
add
mov
xchg
add
cmp
arpl
adc
mov
mov
adc
add
jne
ret
pop
adc
add
jne
ret
pop
adc
add
mov
adc
add
mov
sub
pushf
mov
cmc
pop
inc
sub
mov
mov
sub
ret
mov
adc
add
mov
sub
mov
inc
psubw
inc
(bad)
cmp
lea
pop
or
inc
out
add
cmc
pop
inc
sub
mov
mov
adc
add
jne
ret
fcom
add
jne
ret
data16
popf
mov
cmc
pop
ret
mov
adc
mov
mov
adc
add
jne
inc
out
and
cmc
arpl
adc
add
cmc
(bad)
fst
and
jne
mov
sti
out
ret
cmp
stc
cmp
jp
ret
ud0
sbb
lds
adc
add
mov
adc
mov
mov
adc
add
cmc
arpl
adc
add
cmc
arpl
adc
add
jne
ret
pop
sub
mov
mov
adc
add
cmc
pop
inc
out
add
mov
sub
mov
mov
sub
pushf
mov
cmc
pop
inc
out
add
sbb
fisttp
ror
cmp
(bad)
jp
inc
lea
push
mov
inc
out
add
cmc
pop
ret
out
add
jne
inc
sub
pushf
mov
cmc
fadd
sub
pushf
mov
cmc
pop
inc
data16
sbb
mov
adc
add
mov
adc
mov
cmp
ret
sub
jne
ret
mov
adc
mov
mov
adc
mov
dec
cli
in
inc
mov
mov
inc
(bad)
jp
inc
(bad)
sti
mov
psubd
mov
mov
cmc
popa
inc
fcom
mov
mov
adc
add
jne
ret
pop
adc
add
cmc
arpl
adc
add
cmc
pop
ret
fsubr
add
mov
adc
add
jne
inc
addr16
add
mov
sub
pushf
mov
jne
inc
out
add
cmc
pop
ret
sub
sbb
ret
mov
inc
(bad)
cli
cmp
(bad)
jns
ret
cmp
jns
pop
mov
out
add
mov
sub
popf
mov
cmc
pop
inc
out
add
jne
ret
out
add
jne
ret
out
add
mov
sub
ret
pop
adc
mov
mov
adc
mov
mov
sub
mov
mov
adc
add
jne
ret
ficom
xor
out
ret
push
jne
inc
add
ret
cmp
psubq
inc
(bad)
cli
out
push
mov
mov
mov
adc
add
jne
ret
pop
adc
add
arpl
pop
adc
add
cmc
arpl
adc
add
cmp
arpl
sub
mov
mov
xchg
and
cmc
pop
inc
sub
pushf
mov
jne
inc
data16
ret
mov
adc
add
cmp
pop
ret
pop
sub
sbb
jne
cmp
mov
ror
cmp
jp
inc
lea
pop
or
fcom
add
mov
sub
mov
mov
sub
mov
mov
adc
add
jne
inc
out
sbb
cmc
pop
inc
cmp
add
adc
mov
mov
xchg
add
mov
sub
ret
mov
adc
add
cmc
loop
pop
adc
and
in
inc
pcmpeqw
ret
cmp
sti
mov
dec
(bad)
jns
fmul
adc
mov
adc
add
cmc
arpl
pop
adc
add
mov
adc
add
mov
adc
add
mov
adc
add
jne
inc
fcom
ret
mov
sub
pushf
mov
cmc
pop
inc
data16
popf
mov
cmc
pop
inc
sub
pushf
mov
cmc
pop
inc
sub
pop
cli
jne
mov
inc
(bad)
jp
inc
or
cmp
jns
ret
cmp
lea
pop
mov
pop
adc
pushf
cmp
add
cmc
pop
inc
out
add
cmc
pop
ret
fsubr
add
cmc
pop
ret
fcom
add
cmc
pop
ret
data16
add
mov
sub
ret
pop
adc
and
jne
ret
mov
adc
mov
mov
sub
mov
mov
adc
mov
mov
pop
add
mov
xor
push
jne
inc
add
cmp
(bad)
jp
inc
(bad)
sti
cmp
(bad)
stc
mov
out
and
cmc
(bad)
pop
adc
add
mov
adc
add
cmc
(bad)
pop
xchg
add
mov
jne
inc
fcom
add
arpl
fcom
add
mov
adc
mov
mov
sub
and
cmc
arpl
sub
mov
mov
sub
pushf
mov
jne
inc
out
add
push
jp
ror
cmp
psubw
inc
(bad)
cli
cmp
or
imul
std
inc
fcom
add
cmc
arpl
sub
pushf
mov
jne
inc
out
add
mov
adc
add
cmc
pop
inc
out
add
cmc
pop
ret
mov
adc
mov
mov
adc
mov
cmp
pop
inc
sub
mov
mov
adc
and
jne
ret
mov
pop
add
xor
xor
or
inc
add
mov
inc
(bad)
cmp
or
stc
ret
pop
sbb
mov
mov
adc
add
mov
adc
add
mov
xchg
test
jo
ret
fcom
mov
mov
adc
add
mov
adc
add
hlt
fst
xchg
mov
mov
sub
mov
mov
adc
add
mov
sub
and
jne
lods
dec
ja
mov
ret
cmp
psubw
ret
cmp
jp
adc
jge
pop
adc
mov
mov
sub
pushf
mov
cmc
arpl
adc
add
mov
sub
pushf
mov
cmc
pop
ret
fcom
add
cmc
pop
ret
cmp
add
adc
mov
mov
adc
mov
mov
sub
mov
mov
adc
add
jne
inc
pop
pop
and
je
xor
out
inc
push
jne
inc
add
mov
ret
cmp
or
jp
pop
sbb
add
mov
push
add
cmp
ret
mov
adc
mov
mov
arpl
sub
popa
inc
pop
adc
add
mov
adc
popf
mov
cmc
pop
ret
fcom
mov
cmp
adc
mov
ret
mov
sub
pushf
mov
cmc
pop
inc
sub
pushf
mov
jne
inc
sub
jne
pcmpeqb
fnstsw
inc
cwde
jns
ret
mov
ret
cmp
mov
adc
jge
pop
adc
mov
mov
sub
pushf
mov
cmc
pop
inc
out
add
cmc
pop
inc
fcom
add
mov
adc
add
cmp
arpl
cmp
add
and
cmc
arpl
fst
mov
cmp
inc
pop
adc
add
cmc
arpl
adc
and
jne
inc
pop
adc
mov
sar
inc
push
jne
rol
mov
push
or
hlt
ret
add
mov
push
add
cmp
inc
pop
xchg
add
ins
repnz
ret
xor
xchg
retw
cmp
inc
pop
xchg
add
mov
adc
mov
mov
pop
add
cmp
fsubr
push
xchg
sub
leave
mov
sahf
add
ret
pop
adc
mov
mov
xchg
add
jne
ret
mov
sub
and
cmc
arpl
inc
(bad)
jns
ret
cmp
jns
(bad)
mov
adc
add
cmc
pop
ret
out
add
mov
sub
mov
mov
sub
ret
mov
adc
add
cmc
pop
ret
mov
xchg
add
mov
adc
add
cmc
arpl
fst
mov
mov
adc
add
cmc
loop
pop
adc
mov
inc
cli
out
ret
mov
ret
mov
fisttp
jne
pop
adc
and
jbe
pop
and
adc
ret
mov
push
add
xor
in
mov
mov
mul
fcom
add
cmc
arpl
adc
mov
mov
xchg
add
mov
cmc
fstp
adc
mov
push
push
cli
fcomp
adc
ret
cmp
dec
fcom
inc
(bad)
and
loopne
pop
pop
or
ja
push
scas
hlt
fdiv
int
ins
mov
ret
cmp
jns
(bad)
mov
adc
std
ret
pop
adc
pushf
cmp
ret
mov
sub
pushf
mov
cmc
pop
inc
sub
pushf
mov
cmc
pop
inc
sub
pushf
mov
cmc
pop
ret
sub
pushf
mov
cmc
pop
ret
cmp
add
adc
mov
mov
adc
add
cmc
arpl
adc
add
jne
inc
fcom
mov
mov
xchg
and
cli
mov
hlt
mov
inc
or
mov
in
mov
nop
lods
icebp
adc
mov
xor
popf
idiv
mov
inc
cmp
ret
fist
cmp
les
mov
mov
adc
mov
mov
adc
mov
mov
pop
and
jne
into
fst
mov
dec
mov
cmp
xchg
ret
mov
stos
mov
das
dec
or
and
add
xchg
xor
fcom
ret
into
adc
mov
ret
cmp
jns
(bad)
mov
adc
std
inc
adc
pushf
cmp
add
mov
sub
pushf
mov
cmc
pop
inc
sub
pushf
mov
cmc
pop
ret
sub
pushf
mov
cmc
pop
inc
out
add
cmc
pop
ret
cmp
add
pop
add
mov
cmc
loop
pop
adc
mov
mov
sub
mov
mov
adc
add
jne
ret
ficom
add
inc
in
cmp
stc
cmp
jns
ret
mov
ror
mov
inc
(bad)
jns
inc
push
jg
ret
cmp
js
lods
or
pusha
in
rcl
cmps
mov
inc
vmwrite
aam
ret
mov
adc
mov
mov
adc
and
cmc
loop
pop
xchg
add
mov
xchg
xchg
inc
and
ret
mov
ss
imul
inc
scas
jo
ret
cmp
psubw
inc
ud0
inc
vmwrite
ret
cmp
vmwrite
inc
vmwrite
(bad)
vmwrite
adc
std
ret
pop
adc
mov
mov
sub
mov
mov
adc
add
mov
adc
add
cmc
arpl
out
add
jne
ret
cmp
add
pop
pop
add
mov
adc
mov
mov
sub
mov
mov
adc
mov
mov
pop
add
ret
cmp
stc
cmp
jns
ret
cmp
(bad)
stc
mov
ret
mov
ret
cmp
jns
ret
cmp
cld
push
sbb
div
inc
add
les
jns
ror
inc
mov
adc
add
mov
adc
mov
mov
adc
mov
mov
adc
cmp
mov
arpl
jg
in
pop
idiv
inc
or
cmp
psubw
inc
(bad)
cli
mov
inc
or
mov
ret
cmp
jns
ret
cmp
vmwrite
or
adc
pushf
mov
cmc
pop
inc
out
sbb
pop
inc
out
add
mov
sub
mov
mov
adc
pushf
mov
cmc
pop
ret
cmp
add
pop
add
mov
adc
mov
mov
sub
mov
mov
adc
mov
mov
adc
cmps
mov
add
psubw
inc
or
cmp
(bad)
stc
mov
inc
(bad)
jns
inc
(bad)
jns
inc
(bad)
stc
mov
inc
(bad)
stc
mov
inc
mov
dec
or
ret
mov
(bad)
psubw
dec
mov
cmp
or
jne
ret
pop
adc
add
jne
inc
fcom
mov
mov
adc
mov
mov
adc
movs
(bad)
push
cmps
mov
inc
mov
cmp
(bad)
stc
cmp
mov
ret
cmp
psubw
inc
(bad)
stc
cmp
stc
mov
inc
psubw
inc
psubw
inc
vmwrite
inc
psubw
inc
or
push
adc
pushf
mov
jne
ret
sub
popf
mov
cmc
pop
ret
out
add
cmc
pop
ret
pop
sub
mov
cmp
ret
out
add
mov
adc
add
mov
cmc
bound
adc
and
jne
ret
fst
mov
mov
xchg
add
mov
adc
and
jno
mov
out
mov
inc
or
cmp
(bad)
stc
mov
inc
(bad)
stc
cmp
stc
cmp
stc
mov
inc
vmwrite
ret
cmp
jp
ret
mov
inc
(bad)
cli
add
mov
mov
cmc
popa
ret
pop
adc
mov
mov
adc
mov
mov
adc
mov
mov
adc
push
aas
inc
cmp
inc
mov
ret
mov
ret
cmp
psubw
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
(bad)
stc
cmp
cli
cmp
jns
adc
jge
out
add
mov
sub
ret
mov
sub
mov
mov
adc
add
cmc
pop
inc
out
add
mov
adc
add
mov
adc
mov
mov
adc
mov
mov
adc
and
jne
ret
ficom
and
in
mov
inc
or
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
ret
cmp
psubw
ret
mov
ret
cmp
vmwrite
inc
push
jp
ror
add
mov
adc
mov
mov
adc
sbb
jne
ret
(bad)
pop
pop
add
mov
adc
or
inc
vmwrite
ret
cmp
vmwrite
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
(bad)
stc
cmp
cli
cmp
jns
adc
add
cmc
pop
inc
sub
mov
mov
stos
add
jne
ret
fcom
add
arpl
addr16
add
cmp
arpl
mov
pop
add
mov
jne
inc
pop
adc
mov
mov
adc
add
jne
inc
pop
adc
mov
mov
xchg
and
ret
cmp
stc
cmp
jns
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
(bad)
stc
mov
inc
(bad)
stc
mov
inc
or
xor
jns
pop
add
inc
mov
xchg
add
mov
adc
mov
mov
pop
and
cmc
jecxz
pop
adc
add
cmp
mov
inc
(bad)
jns
inc
(bad)
stc
cmp
stc
mov
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
psubw
inc
or
outs
adc
add
mov
stos
add
cmc
pop
ret
sbb
fadd
fcom
add
mov
adc
add
jne
ret
cmp
add
pop
add
mov
xchg
add
mov
sub
mov
cmp
arpl
adc
and
jne
ret
pop
xchg
and
inc
psubw
inc
or
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
lds
stc
es
mov
inc
pop
add
mov
pop
add
mov
adc
mov
mov
push
add
mov
cmc
arpl
fsubr
add
inc
int3
call
cmp
jns
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
psubb
inc
vmwrite
mov
ret
fcom
add
mov
xchg
add
cmc
fadd
sub
pushf
cmp
ret
fadd
pop
adc
add
cmp
arpl
out
add
hlt
add
mov
sub
ret
fst
ret
mov
adc
mov
mov
sub
mov
cmp
inc
pop
adc
add
jne
inc
pop
adc
cmps
mov
add
inc
psubw
inc
or
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
les
jns
jmp
jns
out
and
cmc
and
pusha
out
adc
ret
mov
adc
add
mov
pop
add
add
daa
shr
mov
add
push
imul
(bad)
jns
inc
(bad)
stc
cmp
(bad)
stc
cmp
stc
cmp
vmwrite
inc
(bad)
stc
mov
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
psubb
inc
vmwrite
mov
ret
fcom
add
mov
adc
add
mov
xchg
sbb
jne
ret
fcom
add
mov
xchg
add
mov
sub
mov
mov
adc
mov
mov
sub
mov
mov
adc
and
cmc
loop
ficom
add
mov
cmp
ret
push
cli
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
psubw
or
aas
(bad)
stos
icebp
aaa
inc
(bad)
outs
mov
mov
adc
pushf
mov
jne
ret
out
xor
sub
push
mov
add
add
pushf
sub
sub
aas
inc
cmp
vmwrite
inc
(bad)
stc
mov
inc
(bad)
stc
mov
ret
cmp
vmwrite
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
jns
inc
psubw
(bad)
or
push
pop
adc
pushf
mov
jne
ret
sub
pushf
mov
jne
ret
out
add
je
ret
mov
sub
pushf
mov
jne
inc
out
add
cmc
pop
ret
cmp
add
pop
add
mov
jne
ret
fst
mov
mov
sub
mov
mov
adc
add
jne
inc
pop
xchg
and
inc
push
cli
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
(bad)
cli
(bad)
xchg
enter
ret
add
inc
push
jns
ret
mov
mov
cmc
bound
adc
and
jne
jmp
inc
(bad)
jle
inc
or
aas
ror
mov
fs
ret
cmp
(bad)
cli
cmp
stc
cmp
stc
mov
ret
mov
inc
(bad)
stc
cmp
stc
cmp
stc
mov
inc
(bad)
stc
cmp
cli
cmp
jns
adc
std
ret
pop
adc
pushf
mov
cmc
pop
ret
out
and
jne
ret
out
add
cmc
fld
sub
mov
mov
adc
add
mov
sub
ret
pop
xchg
add
cmp
ret
mov
adc
mov
mov
adc
add
mov
adc
mov
mov
xchg
and
inc
fs
ret
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
ror
mov
inc
psubw
inc
mov
cmp
mov
mov
cmp
pop
ret
pop
pop
add
mov
stos
pop
cmp
mov
mov
inc
vmread
ror
mov
ret
cmp
jp
inc
(bad)
stc
cmp
stc
mov
ret
mov
inc
(bad)
stc
cmp
stc
cmp
stc
mov
inc
(bad)
stc
cmp
cli
cmp
jns
adc
jge
out
add
mov
sub
mov
mov
stos
add
mov
stos
add
hlt
arpl
sub
pushf
mov
cmc
pop
ret
cmp
add
pop
pop
add
cmp
loop
fst
add
jne
inc
out
and
jne
inc
pop
adc
add
mov
pop
add
inc
fs
or
inc
or
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
psubw
ret
cmp
(bad)
jp
ret
mov
inc
vmwrite
mov
test
mov
xchg
jne
cmp
lahf
jbe
inc
psubw
ret
cmp
jns
ret
mov
inc
psubw
inc
(bad)
stc
cmp
stc
mov
ret
mov
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
psubw
(bad)
vmwrite
adc
add
cmc
pop
inc
sub
pushf
mov
cmc
pop
inc
out
add
mov
sub
popf
mov
cmc
pop
ret
addr16
add
cmc
pop
ret
cmp
add
fst
add
mov
xchg
add
mov
sub
mov
mov
adc
add
jne
ret
add
shl
push
stc
cmp
jns
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
ret
mov
inc
vmwrite
ror
mov
ror
mov
sbb
add
ds
push
bound
cmp
jle
ret
cmp
jns
inc
vmwrite
ret
mov
inc
(bad)
stc
cmp
(bad)
stc
mov
inc
(bad)
stc
mov
ret
cmp
vmwrite
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
jns
inc
(bad)
stc
cmp
vmwrite
mov
fcom
add
jne
ret
sub
pushf
mov
jne
ret
sub
sbb
mov
stos
add
mov
adc
add
mov
sub
inc
fcom
mov
mov
adc
mov
mov
sub
mov
mov
adc
add
jne
inc
ficom
mov
in
mov
inc
or
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
(bad)
stc
cmp
stc
cmp
stc
mov
inc
(bad)
jns
ret
vmwrite
jmp
sbb
mov
imul
(bad)
stc
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
psubw
(bad)
vmwrite
mov
fcom
add
mov
sub
pushf
mov
cmc
pop
ret
sub
sbb
mov
stos
add
mov
adc
add
pop
ret
mov
pop
add
mov
adc
add
cmc
arpl
sub
ret
mov
adc
add
mov
xchg
and
ret
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
vmwrite
ret
(bad)
stc
mov
(bad)
jp
pop
lea
cmp
cmp
ret
mov
ret
cmp
vmwrite
inc
(bad)
stc
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
clc
cmp
jns
adc
add
mov
sub
popf
mov
cmc
ffree
out
sbb
add
mov
stos
add
jne
inc
out
add
mov
sub
ret
pop
adc
mov
mov
adc
add
mov
sub
mov
mov
adc
mov
mov
adc
mov
inc
gs
ret
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
(bad)
stc
mov
inc
(bad)
stc
ds
push
cli
xchg
leave
push
dec
and
sbb
inc
test
mov
ret
mov
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
psubb
inc
vmwrite
mov
out
add
mov
sub
popf
mov
cmc
pop
ret
stos
sbb
pop
ret
out
add
cmc
pop
inc
data16
add
mov
sub
inc
fcom
add
mov
adc
add
arpl
sub
mov
cmp
arpl
adc
mov
mov
xchg
and
ret
cmp
jns
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
ret
(bad)
cli
mov
iret
mov
mov
adc
push
clc
mov
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
psubw
(bad)
vmwrite
adc
jge
out
add
mov
stos
add
jne
ret
stos
add
mov
sub
mov
mov
stos
add
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
adc
add
mov
adc
mov
inc
gs
ret
cmp
jns
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
vmwrite
ret
mov
ret
cmp
psubw
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
mov
inc
(bad)
stc
cmp
stc
cmp
vmwrite
or
ret
adc
pushf
mov
cmc
pop
inc
stos
add
jne
inc
stos
add
mov
sub
pushf
mov
cmc
pop
ret
out
add
mov
sub
ret
pop
adc
mov
mov
adc
add
jne
inc
out
and
cmc
arpl
adc
add
cmp
(bad)
pop
adc
mov
shl
inc
mov
inc
or
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
(bad)
jns
inc
(bad)
jns
inc
vmwrite
ret
mov
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
(bad)
stc
cmp
vmwrite
jge
out
add
cmc
pop
ret
stos
add
mov
sub
sbb
mov
sub
pushf
mov
jne
inc
out
add
mov
sub
ret
pop
adc
mov
mov
adc
mov
mov
adc
add
mov
adc
add
mov
adc
add
ret
cmp
vmwrite
ret
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
psubw
ret
cmp
jns
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
vmwrite
adc
jge
data16
sbb
jne
ret
pop
ret
out
add
mov
stos
add
mov
xchg
add
cmc
pop
ret
data16
add
hlt
add
mov
sub
inc
pop
adc
and
cmc
(bad)
fst
mov
mov
adc
add
cmc
arpl
adc
add
jne
ret
add
xor
gs
inc
push
js
ret
cmp
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
jns
inc
(bad)
stc
mov
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
vmwrite
jge
adc
sbb
jne
inc
mov
stos
sbb
pop
inc
stos
add
mov
xchg
add
cmc
pop
ret
data16
add
mov
sub
ret
pop
adc
mov
mov
xchg
add
cmp
pop
ret
fst
add
cmc
arpl
adc
and
cmc
arpl
fsubr
pop
and
jp
mov
ret
cmp
psubw
inc
(bad)
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
stc
cmp
vmwrite
std
ret
in
add
mov
sub
sbb
cmp
ret
sub
pushf
cmp
add
mov
adc
add
mov
xchg
add
mov
sub
ret
mov
jne
ret
mov
popa
add
mov
arpl
iret
cmp
ret
mov
push
or
mov
jne
ret
mov
jne
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
aad
repz
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
(bad)
jmp
cdq
adc
add
mov
cmps
pop
push
and
fstp
and
push
mov
jne
ret
in
mov
add
mov
daa
adc
cmp
rcl
mov
rcl
or
arpl
ret
jmp
jp
aad
jne
ret
in
mov
add
mov
mov
add
mov
cmps
pop
pop
cs
add
mov
and
push
and
fnstcw
mov
add
mov
and
xchg
mov
div
ret
cmp
inc
or
arpl
sar
scas
movs
sbb
(bad)
and
mov
mov
xchg
imul
lods
and
pushf
imul
xchg
mov
adc
outs
fcmovnb
in
cmps
pop
push
and
fnstcw
cmps
pop
pop
adc
jbe
pusha
bound
xor
and
sar
and
ret
cmp
enter
push
mov
jne
mov
xlat
movs
jnp
jge
cmp
ret
aam
pop
cmp
and
mov
or
in
lods
and
inc
xchg
cld
sub
push
adc
dec
xchg
clc
mov
xlat
push
and
push
xlat
mov
test
fidiv
inc
add
in
fs
mov
cmps
pop
ret
cmp
(bad)
push
adc
sar
sbb
sub
cld
iret
cmp
dec
out
inc
xchg
cmp
or
pushf
or
in
daa
adc
inc
xchg
cld
repnz
mov
movs
fprem
idiv
mov
loop
jne
sub
ins
mov
jecxz
aas
fcmovnb
loopne
sbb
or
pop
ds
inc
lea
push
(bad)
push
adc
sar
sbb
sub
cld
jecxz
dec
(bad)
inc
mov
sub
cld
sar
dec
push
ret
in
mov
add
xchg
cld
out
imul
gs
mov
mov
gs
mov
xchg
mov
ja
ret
in
mov
add
mov
mov
push
(bad)
push
adc
sar
sbb
xor
push
pop
jnp
dec
mov
xchg
stos
adc
mov
mov
add
xchg
cld
repnz
adc
in
ja
pop
mov
xchg
mov
ss
in
jne
mov
stos
and
fnstcw
and
xchg
mov
jne
inc
lea
push
(bad)
push
adc
sar
sbb
mov
mov
(bad)
sti
adc
ret
add
jbe
jno
mov
mov
add
xchg
cld
sub
or
loop
ret
cmp
in
adc
xchg
stos
in
add
push
mov
xchg
stos
and
fnstcw
and
xchg
mov
jne
inc
lea
push
(bad)
push
adc
sar
sbb
test
mov
mov
inc
dec
and
clc
adc
daa
adc
inc
xchg
cld
jns
sbb
xchg
mov
ins
sbb
xchg
sub
or
mov
xchg
stos
scas
push
fnstcw
mov
add
mov
mov
push
(bad)
push
adc
sar
sbb
test
mov
mov
inc
xlat
and
cmp
scas
ror
push
mov
inc
in
daa
adc
inc
xchg
cld
imul
cmp
cld
xor
sub
add
cmp
sbb
or
push
inc
out
daa
adc
adc
add
inc
lea
push
(bad)
imul
push
and
pop
mov
add
xor
add
fnstcw
dec
push
stc
jmp
adc
inc
rcl
push
rol
cmp
xchg
cld
xchg
in
test
and
xlat
mov
pop
cmp
(bad)
sbb
inc
pushf
leave
mov
fwait
push
mov
cmps
pop
ret
cmp
(bad)
imul
push
and
loop
jne
jns
sbb
cmp
add
push
dec
sbb
xlat
ret
in
adc
or
push
dec
sub
and
hlt
pop
retf
(bad)
lds
xchg
outs
add
mov
cmps
pop
stos
call
setle
repnz
aad
pop
sbb
mov
mov
push
(bad)
imul
push
and
fstp
daa
adc
mov
daa
adc
scas
add
mov
mov
add
jne
leave
push
sahf
xchg
stos
add
mov
lods
adc
aad
inc
fcmovnb
in
and
xchg
sub
sar
cmps
pop
setnp
in
call
ret
cmp
(bad)
imul
xchg
and
fnstcw
and
xchg
mov
jne
ret
in
and
xchg
and
fnstcw
mov
or
and
in
daa
sbb
fnstcw
das
pop
je
retf
cmp
mov
sub
call
pop
inc
out
das
pop
out
bound
inc
lea
adc
cmp
(bad)
imul
xchg
and
fnstcw
and
xchg
mov
jne
inc
out
and
push
mov
jne
ret
jmp
add
xchg
mov
jne
ret
cmps
lods
adc
xchg
xor
icebp
cmp
or
cmp
dec
inc
retf
sub
mov
ret
cmp
(bad)
imul
xchg
and
fnstcw
and
xchg
mov
jne
inc
je
sbb
mov
mov
jmp
ret
in
mov
add
mov
into
mov
xchg
adc
sahf
xlat
ret
sti
adc
mov
xchg
mov
jb
jl
mov
push
inc
lea
push
(bad)
imul
push
and
fnstcw
and
xchg
mov
jne
rcr
push
jns
outs
cmp
mov
jo
ret
in
and
call
iret
mov
cli
push
stos
mov
pop
ret
bound
call
push
int3
lahf
daa
sbb
aad
cmp
inc
lea
push
(bad)
imul
push
and
fnstcw
and
xchg
mov
cmc
pop
icebp
mov
mov
xor
or
cs
push
fnstcw
mov
and
out
mov
addr16
mov
jne
inc
out
mov
add
push
cmp
sub
ret
add
xor
and
ret
cmp
(bad)
imul
push
and
fnstcw
and
cwde
stos
outs
xor
cmc
ret
cmp
sti
imul
cmp
sub
call
cmp
jle
and
pop
pop
pushf
sub
add
xchg
mov
cmc
push
inc
out
and
add
fsubr
sahf
call
ds
and
or
arpl
(bad)
imul
push
and
fnstcw
mov
add
inc
pop
lea
cmps
(bad)
xlat
mov
and
or
out
adc
mov
int3
xlat
pop
fwait
jge
and
retf
inc
jmp
fidivr
sub
call
mov
cdq
lods
jg
and
jne
ins
or
arpl
(bad)
imul
push
and
fstp
lods
adc
movs
dec
mov
in
pusha
into
mov
arpl
fnstcw
sub
fistp
or
mov
sbb
pop
fld
shr
add
sub
xchg
xchg
push
int3
push
int
adc
cmp
(bad)
imul
xchg
and
pop
mov
pop
dec
addr16
jl
sub
adc
and
xlat
mov
mov
gs
dec
mov
mov
cmc
pop
cmc
pop
aas
add
dec
xor
jmp
push
dec
mov
push
int
popf
xchg
push
addr16
jge
arpl
(bad)
push
adc
mov
cmc
sub
dec
xor
ret
or
setnp
in
call
fsub
jl
scas
stos
retf
das
pop
xchg
and
aam
cmc
push
sbb
es
and
ret
in
adc
fdivp
xchg
imul
jg
and
cmc
xchg
add
arpl
(bad)
outs
rcl
inc
fisttp
xchg
mov
cmc
pop
aam
mov
jb
inc
mov
outs
xchg
mov
jbe
ret
in
and
cwde
stos
outs
cmp
cmp
push
fcomp
sbb
xlat
sahf
loope
mov
std
or
and
pop
dec
out
icebp
iret
xor
lea
push
(bad)
imul
fsub
add
ins
adc
scas
outs
add
mov
push
daa
mov
fild
jge
pop
mov
sbb
jne
les
push
js
popa
sub
jns
std
mov
xor
dec
pop
adc
xor
inc
xchg
mov
call
outs
sbb
sahf
inc
or
arpl
dec
hlt
retf
arpl
or
mov
push
inc
outs
and
push
mov
lock
repz
stc
fidivr
sub
cdq
lods
outs
add
or
aas
adc
movs
mov
sub
aad
xchg
jne
ret
icebp
jg
and
cmp
and
shr
retf
sub
ret
cmp
inc
je
adc
fidivr
lods
push
ret
in
lods
adc
xor
test
sub
cmc
push
inc
jecxz
sbb
iret
jmp
cld
sbb
xlat
mov
mov
jmp
(bad)
mov
rcr
movs
and
xor
loope
rol
inc
or
arpl
(bad)
imul
jbe
popa
sbb
int
inc
cdq
mov
pop
xchg
imul
xchg
mov
jne
ret
jle
adc
pop
pop
pushf
xor
or
jl
cli
sbb
aam
(bad)
push
ret
ins
cs
jns
pop
sahf
fimul
aaa
aaa
fs
je
dec
or
shr
or
arpl
(bad)
imul
sbb
popa
add
jne
call
jl
mov
lods
adc
fidivr
sar
test
xor
mov
retf
ficomp
jecxz
sub
test
add
mov
mov
adc
jp
nop
ins
push
push
bound
xchg
inc
lods
or
mov
push
(bad)
imul
sbb
popa
add
add
sub
sub
inc
popa
and
add
push
lahf
cmp
jl
arpl
test
sub
dec
hlt
and
bound
xchg
xor
test
fwait
mov
push
leave
jmp
in
repnz
dec
mov
adc
mov
ret
cmp
(bad)
outs
rcl
(bad)
xlat
or
ret
mov
cmc
push
(bad)
lahf
mov
push
movs
int3
mov
cs
loope
rcl
mov
rcr
mov
dec
rol
mov
fs
rcr
mov
sub
cmp
push
inc
or
arpl
(bad)
outs
rcl
out
sbb
outs
sub
push
mov
cmc
push
xchg
mov
xchg
push
mov
push
dec
ja
and
mov
cmc
pop
aas
dec
push
dec
xor
ret
(bad)
test
lock
sbb
test
dec
xor
add
cdq
sub
push
fstp
and
ret
cmp
(bad)
imul
add
ret
ins
sub
sbb
outs
add
call
cdq
sub
or
inc
jno
push
bound
xchg
sahf
pop
sub
sbb
aam
dec
shl
inc
adc
cmps
ret
loopne
adc
(bad)
mov
sub
call
pop
ret
ins
sub
push
and
fnstcw
and
ret
cmp
inc
je
adc
loopne
pushf
iret
ret
ins
and
call
mov
arpl
push
mov
jne
inc
and
lods
jecxz
je
sub
dec
xchg
or
xchg
mov
jne
ret
in
and
xchg
mov
jne
ret
in
and
xchg
mov
jne
inc
lea
sbb
cmp
(bad)
imul
add
ret
in
lods
adc
in
cmc
retf
mov
add
mov
daa
sbb
xchg
xor
inc
inc
jbe
retf
mov
ret
ins
and
xchg
mov
jne
ret
in
and
xchg
mov
jne
ret
in
and
xchg
mov
jne
inc
lea
sbb
cmp
(bad)
outs
rcl
stc
mov
push
sbb
ins
add
mov
and
xchg
and
fnstcw
lods
adc
and
xchg
stos
mov
sub
call
xchg
mov
jne
ret
in
and
xchg
mov
jne
ret
in
and
xchg
mov
jne
inc
lea
sbb
cmp
(bad)
ins
rcl
mov
ret
in
lods
adc
fdivr
sbb
mov
mov
xchg
shl
dec
push
xor
push
bndldx
mov
add
mov
and
xchg
mov
jne
ret
in
and
xchg
mov
jne
inc
lea
sbb
cmp
(bad)
ins
rcl
mov
mov
pusha
fnsave
lods
adc
xchg
div
sbb
test
add
mov
test
arpl
add
aad
xchg
inc
outs
daa
push
xchg
mov
jne
ret
in
and
xchg
mov
jne
ret
in
and
xchg
mov
jne
inc
lea
sbb
cmp
(bad)
ins
rcl
mov
push
push
or
xchg
out
fstp
daa
push
or
push
add
xchg
es
adc
mov
push
iret
jmp
cmps
leave
sub
xchg
mov
jne
ret
in
and
xchg
mov
jne
ret
in
and
xchg
mov
jne
inc
lea
sbb
cmp
(bad)
ins
rcl
mov
loop
push
test
push
sar
pop
retf
rcr
adc
cmps
leave
add
rcl
je
dec
add
mov
fs
leave
popf
mul
out
daa
sbb
fnstcw
and
xchg
mov
jne
ret
in
and
xchg
mov
jne
inc
lea
sbb
cmp
(bad)
ins
rcl
mov
push
shl
fwait
std
in
dec
leave
sahf
test
popf
not
popf
push
int3
out
and
adc
xchg
popf
push
shl
jmp
es
inc
outs
daa
push
xchg
mov
jne
ret
in
and
xchg
mov
jne
ret
in
and
xchg
mov
jne
inc
lea
sbb
cmp
(bad)
ins
rcl
mov
mov
jmp
mov
sub
pop
(bad)
mov
lods
adc
aad
jne
ret
loopne
adc
aad
jne
ret
in
and
xchg
mov
jne
ret
in
and
xchg
mov
jne
ret
in
and
xchg
mov
jne
inc
lea
sbb
cmp
(bad)
ins
rcl
mov
lods
adc
je
xlat
mov
push
and
mov
mov
add
mov
mov
add
mov
and
xchg
mov
jne
ret
in
and
xchg
mov
jne
ret
in
and
xchg
mov
jne
inc
lea
push
dec
loope
sbb
xor
pop
iret
fs
pop
sbb
pop
aas
std
pop
inc
sub
xor
pop
dec
popa
sub
call
pop
dec
popa
sub
call
pop
dec
popa
sub
call
pop
dec
popa
sub
call
pop
dec
popa
sub
call
pop
dec
or
arpl
cs
aam
ret
mov
jne
xlat
mov
jne
sar
jne
ret
mov
jne
ret
mov
jne
ret
mov
jne
jbe
jne
aad
lock
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
(bad)
cmp
adc
aad
lock
or
arpl
inc
or
arpl
inc
or
arpl
fnstsw
xor
movs
call
mov
mov
pop
jno
push
xor
arpl
inc
or
arpl
inc
or
arpl
fnstsw
xor
and
inc
fistp
push
or
es
adc
mul
mov
or
pop
jb
jmp
xor
(bad)
push
lock
jmp
pop
jle
xor
cmps
jmp
pop
jle
xor
cmps
jmp
pop
lea
xchg
mov
xor
lock
jmp
pop
jle
xor
cmps
jmp
pop
jle
xor
inc
sbb
inc
or
arpl
fistp
mov
mov
lahf
repnz
xor
aad
lock
jg
adc
jb
push
mov
mov
pop
jo
push
mov
arpl
inc
jle
adc
jb
push
xor
or
jb
imul
or
push
jo
imul
ss
mov
rep
jmp
mov
or
lahf
jo
call
aaa
add
arpl
jno
imul
jp
mov
or
jb
jmp
mov
cs
popf
aad
lock
jg
adc
repnz
ss
mov
pop
jno
jmp
mov
arpl
(bad)
cmp
adc
aad
lock
or
arpl
inc
or
arpl
pop
jge
mov
mov
push
ins
and
pop
add
scas
js
fstp
pop
add
pop
cdq
in
and
mov
xchg
inc
lahf
lock
call
adc
aad
lock
or
arpl
icebp
movs
jmp
pop
xor
imul
leave
test
adc
outs
ret
xor
push
or
ins
and
pop
add
sti
xchg
fistp
pop
push
into
sub
movs
imul
adc
out
mov
cld
push
fcomp
ins
mov
mov
jbe
inc
popf
aad
lock
jl
xor
pop
les
ins
and
pop
push
retf
scas
jge
fcomp
pop
clc
dec
lods
pop
mov
sbb
cmps
push
aaa
add
out
cmp
add
xchg
fistp
pop
jns
scas
xchg
call
mov
adc
cwde
imul
dec
sub
fistp
(bad)
mov
jbe
inc
popf
lock
lock
ss
adc
imul
int3
sub
pop
sbb
and
cmp
dec
sub
push
fstp
ins
mov
int3
sub
lahf
rcl
aam
ret
xchg
fistp
fidivr
mov
xchg
inc
sahf
push
or
stc
xchg
pop
sbb
in
aas
pop
js
scas
or
inc
fidivr
mov
xchg
inc
lahf
imul
pop
fwait
outs
mov
ss
cs
popf
aad
lock
cmp
adc
aad
lock
or
arpl
inc
or
arpl
pop
test
xor
pop
sbb
scas
ins
mov
jno
scas
pop
in
retf
mov
jmp
popa
and
rcr
fs
cmc
stos
push
jge
xor
ins
and
pop
push
popf
aad
lock
jg
adc
call
add
movs
sbb
pop
and
and
pop
sahf
gs
(bad)
adc
xor
fistp
pop
jmp
sub
pop
adc
push
fwait
imul
jg
cmp
add
mov
mov
inc
jae
xor
or
leave
xor
mov
imul
(bad)
jbe
xor
(bad)
xor
mov
inc
mov
jae
xor
test
inc
jb
mov
mov
mov
pop
xor
neg
pop
call
stos
fld
adc
lahf
out
or
cmp
(bad)
xchg
pop
adc
sti
jmp
jmp
xchg
jmp
push
mov
in
and
fisttp
rcl
movs
retf
fwait
imul
or
rcr
fdiv
pushf
xor
(bad)
(bad)
cli
cmp
mov
mov
push
pushf
out
jbe
bound
pop
pop
sbb
loop
mov
push
cmp
pop
in
dec
or
and
push
mov
mov
jo
fcom
push
adc
xor
pop
in
pop
cdq
in
add
scas
inc
sahf
aad
lock
cmp
adc
aad
lock
or
arpl
inc
jle
adc
out
and
aam
inc
stos
or
rcl
stos
(bad)
outs
cmp
mov
cmp
mov
xor
test
xor
adc
fstp
push
loop
jnp
mov
aad
jmp
(bad)
jl
adc
lods
ins
mov
(bad)
test
cmp
mov
cmp
mov
movs
jecxz
outs
sbb
inc
mov
data16
jnp
lods
rol
(bad)
push
stc
cmp
mov
cmp
mov
mov
or
into
lahf
ins
mov
test
sar
(bad)
cli
cmp
mov
cmp
mov
cmp
mov
cmp
mov
and
imul
test
inc
jle
adc
test
inc
mov
cmp
mov
cmp
mov
cmp
mov
ss
mov
cwde
dec
fimul
dec
sub
outs
rcl
cmp
movs
cld
cmp
mov
xor
sbb
xchg
popa
or
inc
sahf
in
jae
fcomp
jno
test
ret
cmp
mov
cmp
mov
mov
bound
jmp
pop
mov
(bad)
adc
outs
mov
(bad)
lods
cmp
xchg
fnstsw
mov
mov
popa
sbb
sbb
popa
lea
pop
cmp
add
cmp
js
inc
xchg
popa
cmp
mov
cmp
mov
cmp
mov
cmp
mov
sbb
popa
mov
adc
cmp
mov
ss
mov
sbb
jg
and
ret
sub
out
pusha
xchg
xor
inc
xchg
cmp
mov
mov
ins
mov
scas
int
jae
cs
aad
lock
cmp
adc
aad
lock
or
arpl
pop
js
mov
xchg
ficomp
jg
mov
cli
cmp
mov
cmp
mov
or
cmp
rcl
mov
rcl
cmc
push
jecxz
out
add
mov
inc
fld
mov
jbe
fistp
xchg
imul
cmp
mov
mov
or
arpl
lock
mov
jp
inc
or
cmp
mov
cmp
mov
cs
mov
jle
adc
stos
(bad)
outs
(bad)
ss
inc
int3
test
inc
mov
cmp
mov
cmp
mov
adc
pop
inc
or
arpl
inc
or
arpl
in
mov
xchg
fnstsw
mov
cmp
mov
cmp
mov
add
mov
shl
inc
mov
cmp
mov
jbe
push
fcom
mov
rcl
inc
inc
clc
mov
add
cmp
(bad)
cli
cmp
mov
cmp
mov
jbe
cwde
in
cmps
lock
mov
pop
or
dec
cmp
push
stc
cmp
mov
cmp
jg
or
arpl
fnstsw
mov
call
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
lahf
push
aaa
ret
inc
sub
mov
cmp
mov
cmp
mov
jbe
cwde
in
mov
rcl
push
shl
mov
(bad)
(bad)
cli
cmp
mov
cmp
mov
mov
push
les
xor
aad
lock
cmp
adc
aad
lock
or
arpl
(bad)
pop
adc
fsubr
call
cmp
mov
cmp
jg
lea
jbe
arpl
inc
or
arpl
inc
or
arpl
jmp
mov
out
repnz
xor
push
sbb
mov
cld
mov
cmp
rcl
mov
mov
cmp
dec
mov
inc
mov
cmp
mov
cmp
mov
add
or
inc
or
arpl
fiadd
xor
and
pop
call
mov
mov
mov
aad
cwde
mov
or
arpl
inc
or
arpl
pop
(bad)
dec
sub
cmp
mov
mov
or
cmp
mov
cmp
mov
cmp
mov
xor
arpl
inc
or
arpl
cmp
mov
cmp
mov
cmp
mov
mov
cs
lock
lock
mov
or
inc
leave
cld
cmp
mov
mov
or
inc
or
arpl
inc
jle
adc
sbb
inc
mov
cmp
mov
cmp
mov
cmp
mov
test
call
test
(bad)
(bad)
cli
cmp
mov
cmp
mov
jbe
enter
lock
or
arpl
jae
push
stc
cmp
mov
cmp
mov
mov
scas
movs
rcl
lock
or
arpl
(bad)
cmp
adc
aad
lock
or
arpl
in
and
push
pop
ret
and
inc
shr
inc
mov
mov
or
inc
or
arpl
inc
or
arpl
inc
or
arpl
fnstsw
xor
dec
inc
mov
fadd
xor
push
outs
pop
sbb
movs
cld
cmp
mov
xor
jl
es
inc
inc
or
arpl
pop
add
xor
stos
cld
cmp
mov
cmp
mov
aad
mov
jbe
arpl
pop
xor
fwait
jmp
cmp
mov
mov
mov
aad
xchg
mov
or
arpl
inc
or
arpl
fcmovnbe
dec
sub
sbb
cld
mov
or
mov
cmp
mov
cmp
mov
and
scas
rcr
or
arpl
das
mov
cmp
mov
jbe
arpl
fild
fisub
cmp
mov
cmp
mov
mov
mov
rcl
mov
rcl
pushf
jmp
cld
cmp
mov
cmp
mov
cmp
mov
push
mov
mov
cmp
mov
cmp
mov
cmp
mov
jbe
inc
popf
aad
lock
or
arpl
out
and
adc
fstp
mov
cmp
mov
mov
cs
aad
lock
or
arpl
(bad)
cmp
adc
aad
lock
jg
adc
push
outs
cmp
retf
inc
or
cmp
mov
cmp
mov
call
mov
or
arpl
inc
or
arpl
inc
or
arpl
(bad)
jle
adc
mov
aam
ja
cmp
rcr
sbb
nop
cld
cmp
mov
mov
mov
xchg
or
arpl
pop
xor
fwait
jmp
cmp
mov
cmp
mov
aad
mov
jbe
arpl
pop
xor
fwait
jmp
cmp
mov
mov
mov
aad
xchg
mov
or
arpl
inc
or
arpl
fcmovnbe
dec
sub
sbb
cld
mov
or
cmp
(bad)
sbb
inc
mov
cmp
mov
mov
add
scas
inc
sahf
aad
lock
or
arpl
call
inc
sub
cld
cmp
mov
cmp
mov
add
arpl
in
mov
inc
movs
cmp
test
cmp
mov
cmp
mov
jbe
xor
mov
rcl
mov
rcl
mov
test
inc
mov
cmp
mov
cmp
mov
xchg
push
push
cmp
mov
cmp
mov
cmp
mov
test
mov
or
arpl
jae
xor
cmp
mov
mov
cs
aad
lock
or
arpl
(bad)
cmp
adc
aad
lock
jl
adc
jmp
inc
add
cld
cmp
mov
cmp
mov
jbe
push
fcom
mov
rcl
mov
rcl
mov
rcl
mov
rcl
adc
xor
ficomp
cmp
stos
cld
cmp
mov
cmp
mov
vmread
xor
rcr
xor
fwait
jmp
cmp
mov
cmp
mov
aad
mov
jbe
arpl
pop
xor
fwait
jmp
cmp
mov
mov
mov
aad
xchg
mov
or
arpl
inc
or
arpl
fcmovnbe
dec
sub
sbb
cld
mov
or
ds
sbb
cld
cmp
mov
mov
or
cmp
cmp
rcl
mov
sub
cld
cmp
mov
cmp
mov
push
or
outs
and
mov
cmp
mov
cmp
mov
mov
cs
aad
lock
or
arpl
inc
or
arpl
sbb
pop
cmp
mov
cmp
mov
cmp
mov
add
arpl
ins
mov
and
inc
mov
cmp
mov
cmp
mov
pop
or
inc
inc
or
arpl
jae
xor
cmp
mov
mov
cs
aad
lock
or
arpl
(bad)
cmp
adc
aad
lock
js
xor
pop
pop
cwde
xchg
jb
fstp
mov
cmp
mov
cmp
mov
cmp
or
jbe
int3
cmps
aad
lock
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
cdq
loopne
bound
repnz
inc
retf
inc
mov
cmp
mov
cmp
clc
outs
jnp
aas
add
les
aad
jmp
pop
xor
fwait
jmp
cmp
mov
cmp
mov
aad
mov
jbe
arpl
pop
xor
fwait
jmp
cmp
mov
mov
mov
aad
xchg
mov
or
arpl
inc
or
arpl
fcmovnbe
dec
sub
sbb
cld
mov
or
mov
and
sar
cmp
mov
cmp
mov
mov
add
cli
jb
pop
(bad)
pop
lea
push
call
inc
sub
cld
cmp
mov
cmp
mov
pop
or
imul
mov
cmp
mov
cmp
mov
jbe
mov
aad
lock
or
arpl
inc
or
arpl
push
inc
lods
push
cmp
mov
cmp
mov
cmp
mov
jbe
arpl
gs
mov
cmp
mov
cmp
mov
cmp
mov
xchg
jae
cld
rep
mov
pop
or
arpl
jae
xor
cmp
mov
mov
cs
aad
lock
or
arpl
(bad)
cmp
adc
aad
lock
add
xor
pop
sbb
xlat
cld
cmp
mov
cmp
mov
cmp
mov
push
lea
xchg
mov
rcl
mov
rcl
mov
rcl
mov
rcl
movs
lock
jmp
mov
inc
test
inc
mov
cmp
mov
cmp
mov
mov
push
xor
icebp
movs
out
inc
pop
add
mov
jmp
cmp
mov
cmp
mov
aad
mov
jbe
arpl
pop
xor
fwait
jmp
cmp
mov
mov
mov
aad
xchg
mov
or
arpl
inc
or
arpl
fcmovnbe
dec
sub
sbb
cld
mov
cs
lock
lock
aaa
xor
add
cld
cmp
mov
cmp
jl
or
pop
mov
call
inc
sub
cld
cmp
mov
cmp
mov
or
xchg
and
sbb
pop
cmp
mov
cmp
mov
cmp
mov
jbe
arpl
inc
or
arpl
inc
or
arpl
or
push
cmp
mov
cmp
mov
cmp
mov
jbe
arpl
fbld
mov
inc
and
cmp
mov
cmp
mov
cmp
mov
or
or
jnp
scas
xchg
push
mov
cmp
mov
mov
cs
aad
lock
or
arpl
(bad)
cmp
adc
aad
lock
mov
xor
inc
mov
cld
cmp
mov
cmp
mov
imul
lock
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
pop
aad
xor
movs
rol
(bad)
xchg
fistp
mov
cmp
mov
cmp
mov
es
repnz
sub
fld
enter
fcom
inc
mov
cmp
mov
aad
mov
jbe
arpl
pop
xor
fwait
jmp
cmp
mov
mov
mov
aad
xchg
mov
or
arpl
inc
or
arpl
fcmovnbe
dec
sub
sbb
cld
mov
cs
aad
lock
lock
daa
fs
and
cmps
cld
cmp
mov
cmp
mov
cmp
mov
xchg
stc
xchg
fsin
adc
outs
cmp
inc
sub
cld
cmp
mov
cmp
mov
or
xchg
and
cmp
(bad)
cdq
imul
cld
cmp
mov
cmp
mov
jbe
arpl
inc
or
arpl
inc
or
arpl
je
ds
cmp
mov
cmp
mov
cmp
mov
jbe
arpl
fnstsw
mov
jmp
cmp
mov
cmp
mov
cmp
mov
and
adc
outs
cmp
mov
cmp
mov
cmp
mov
mov
cs
aad
lock
or
arpl
(bad)
cmp
adc
lock
lock
retf
scas
cmp
xchg
cmp
mov
cmp
mov
cmp
mov
xor
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
fucomp
xor
or
cmp
mov
popf
ins
dec
sub
add
cli
cmp
clc
adc
and
mov
cld
cmp
mov
aad
mov
jbe
arpl
pop
xor
fwait
jmp
cmp
mov
mov
mov
aad
xchg
mov
or
arpl
inc
or
arpl
fcmovnbe
dec
sub
sbb
cld
mov
cs
aad
lock
or
arpl
jg
jmp
or
sub
leave
sbb
cwde
cld
cmp
mov
cwde
ins
(bad)
cli
repz
mov
cmp
mov
cmp
mov
cmp
mov
pop
or
imul
sbb
inc
mov
cmp
mov
cmp
arpl
inc
or
arpl
inc
or
arpl
jae
xor
cmp
mov
cmp
mov
cmp
mov
jbe
arpl
inc
or
arpl
je
imul
push
das
dec
mov
xchg
fnstenv
inc
mov
cmps
addr16
jg
lods
inc
ins
inc
mov
cmp
mov
cmp
mov
mov
cs
aad
lock
or
arpl
(bad)
cmp
adc
icebp
movs
jo
pop
jge
sub
dec
mov
inc
mov
cmp
mov
cmp
mov
popf
ins
or
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
(bad)
jg
adc
or
(bad)
fwait
imul
inc
mov
cmp
mov
aad
mov
jbe
arpl
pop
xor
fwait
jmp
cmp
mov
mov
mov
aad
xchg
mov
or
arpl
inc
or
arpl
fcmovnbe
dec
sub
sbb
cld
mov
cs
aad
lock
or
arpl
inc
or
arpl
loopne
mov
ret
cdq
cld
xor
idiv
mov
cmp
mov
cmp
mov
xchg
arpl
call
inc
adc
cmp
mov
cmp
mov
cmp
mov
jbe
rcr
or
arpl
inc
or
arpl
push
inc
aas
ret
mov
cmp
mov
cmp
mov
jbe
arpl
inc
or
arpl
inc
or
arpl
pop
in
xor
cmp
lods
cld
cmp
push
stc
cmp
mov
cmp
mov
mov
cs
aad
lock
or
arpl
(bad)
cmp
adc
jb
lock
fneni(8087
int3
sub
and
cmp
mov
cmp
mov
cmp
mov
adc
pop
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
pop
fdiv
cmp
mov
cmp
mov
cmp
mov
aad
mov
jbe
arpl
pop
xor
fwait
jmp
cmp
mov
mov
mov
aad
xchg
mov
or
arpl
inc
or
arpl
aam
ret
inc
sbb
cld
mov
cs
aad
lock
or
arpl
inc
or
arpl
(bad)
jg
adc
sbb
out
addr16
mov
cmp
mov
cmp
mov
cmp
mov
test
arpl
outs
and
or
push
cmp
mov
cmp
mov
mov
scas
dec
cmps
aad
lock
or
arpl
inc
or
arpl
or
sar
mov
cmp
mov
cmp
mov
jbe
arpl
inc
or
arpl
inc
or
arpl
inc
jg
adc
mov
imul
cmp
mov
cmp
mov
mov
cs
aad
lock
or
arpl
(bad)
cmp
adc
rep
lock
inc
stos
cmp
sbb
cld
cmp
mov
cmp
mov
add
mov
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
pop
jle
mov
cs
popf
aad
lock
or
arpl
fiadd
xor
xor
inc
xchg
cmp
mov
cmp
mov
aad
mov
jbe
arpl
pop
xor
fwait
jmp
cmp
mov
mov
mov
aad
xchg
mov
or
arpl
inc
or
arpl
aam
ret
and
inc
sbb
cld
mov
cs
aad
lock
jle
adc
lock
adc
aad
lock
or
arpl
imul
mov
cmp
mov
cmp
mov
test
xchg
ret
cmp
inc
mov
cmp
mov
mov
cs
aad
lock
or
arpl
inc
or
arpl
jmp
push
cmp
mov
cmp
mov
cmp
mov
jbe
arpl
inc
jle
adc
jo
push
mov
arpl
inc
or
arpl
sbb
pop
cmp
mov
cmp
mov
mov
cs
aad
lock
or
arpl
(bad)
cmp
adc
rep
jo
push
dec
inc
movs
cmp
fwait
call
cmp
mov
cmp
mov
aad
mov
jbe
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
jg
adc
in
mov
enter
pop
cwde
ja
call
adc
aad
lock
xor
fwait
jmp
cmp
mov
cmp
mov
aad
mov
jbe
arpl
pop
xor
fwait
jmp
cmp
mov
xor
jl
cmp
rcl
mov
rcl
mov
shl
inc
mov
mov
cs
ja
lock
pop
pop
xor
jle
pop
sbb
mov
xor
jbe
rcr
or
arpl
adc
test
cmp
mov
cmp
mov
cmp
mov
jbe
arpl
fadd
dec
mov
(bad)
(bad)
cli
cmp
mov
cmp
mov
test
push
aad
jmp
inc
or
arpl
inc
or
arpl
in
jmp
popa
cmp
mov
cmp
mov
cmp
mov
jbe
arpl
fdivrp
mov
jg
pop
cwde
outs
and
mov
jbe
inc
popf
aad
lock
or
arpl
je
ds
cmp
mov
cmp
mov
mov
cs
aad
lock
or
arpl
(bad)
cmp
adc
rep
jo
push
mov
cld
cmp
mov
cmp
mov
cmp
mov
aad
mov
jbe
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
(bad)
jle
adc
in
out
mov
jecxz
aas
lea
enter
inc
inc
or
arpl
pop
add
xor
inc
mov
cld
cmp
mov
aad
mov
jbe
arpl
pop
xor
fwait
jmp
cmp
mov
cmp
cld
jo
or
inc
or
arpl
inc
or
arpl
in
mov
inc
and
cmp
mov
mov
scas
mov
jo
jo
pop
mov
test
adc
repz
fdiv
cmp
scas
(bad)
sahf
aad
lock
or
arpl
or
sar
mov
cmp
mov
cmp
mov
jbe
arpl
pop
pop
xor
fstp
mov
cmp
mov
mov
(bad)
jp
mov
rcl
mov
rcl
outs
aaa
xor
idiv
mov
cmp
mov
cmp
mov
jbe
arpl
pop
(bad)
mov
push
add
xchg
nop
repz
pop
add
jbe
inc
sahf
aad
lock
or
arpl
out
and
jae
xor
cmp
mov
cmp
mov
mov
cs
aad
lock
or
arpl
(bad)
cmp
adc
rep
jo
push
inc
inc
movs
cmp
mov
cmp
mov
cmp
mov
cmp
mov
aad
mov
jbe
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
jge
adc
add
outs
push
cmp
mov
cmp
mov
or
mov
pop
or
arpl
pop
xor
sbb
pop
sbb
mov
cld
cmp
mov
aad
mov
jbe
arpl
fiadd
xor
fwait
push
fwait
cmp
mov
cld
cmp
mov
xchg
xor
jbe
arpl
inc
or
arpl
popa
(bad)
dec
mov
inc
mov
cmp
mov
cmp
mov
jbe
mov
jo
lock
fld1
enter
mov
cmp
mov
cmp
mov
jbe
mov
mov
or
arpl
jmp
push
cmp
mov
cmp
mov
cmp
mov
jbe
arpl
fdivrp
mov
cmp
and
mov
cmp
mov
sbb
mov
mov
adc
aad
lock
cli
xor
jp
inc
pop
ja
in
mov
cmp
mov
cmp
mov
cmp
mov
jbe
arpl
pop
cli
mov
cmp
inc
test
mov
or
mov
or
arpl
jae
mov
cmp
mov
cmp
mov
cmp
mov
jbe
mov
aad
lock
or
arpl
(bad)
cmp
adc
rep
lock
cmp
mov
cmp
mov
cmp
mov
cmp
mov
aad
mov
jbe
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
(bad)
jg
adc
pop
jae
pop
cmp
mov
cmp
mov
mov
or
xor
jbe
rcr
or
scas
and
(bad)
stos
cld
cmp
mov
mov
cmp
rcl
and
retf
imul
cmp
mov
cmp
mov
test
std
aaa
xor
jmp
(bad)
mov
cld
xchg
inc
push
fs
ss
cmps
enter
cld
cmp
mov
cmp
arpl
pop
jecxz
lods
cmp
mov
cld
cmp
mov
xchg
add
inc
inc
jge
adc
in
out
mov
inc
xchg
popa
cmp
mov
cmp
mov
xor
arpl
fnstsw
xchg
jae
sahf
cmp
mov
cmp
mov
cmp
jl
adc
ss
or
push
icebp
and
xor
neg
jecxz
cmp
mov
cmp
mov
cmp
mov
cmp
mov
jbe
arpl
pop
repnz
(bad)
dec
mov
inc
mov
cmp
mov
test
mov
push
inc
(bad)
jle
adc
in
outs
mov
(bad)
lods
push
cmp
mov
cmp
mov
cmp
mov
jbe
int3
cmps
aad
lock
or
arpl
(bad)
cmp
adc
jb
lock
fild
sub
(bad)
cli
cmp
mov
cmp
mov
cmp
mov
aad
mov
jbe
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
cmp
stc
cmp
mov
cmp
mov
jp
and
add
out
ds
ret
inc
inc
mov
cmp
mov
and
mov
mov
adc
jb
imul
dec
scas
mov
push
xchg
cmp
xchg
cmp
mov
mov
mov
xchg
sbb
jecxz
mov
sbb
movs
imul
adc
sbb
movs
bound
inc
mov
cmp
mov
or
push
pop
jbe
arpl
pop
jg
mov
inc
int
cmp
mov
cmp
mov
mov
cld
ins
mov
mov
je
pop
cdq
jae
loop
cmp
mov
cmp
mov
cmp
mov
or
push
pop
jbe
arpl
inc
jg
adc
psubb
push
cmp
mov
cmp
mov
cmp
clc
push
adc
outs
aas
fisttp
push
xchg
cmp
mov
cld
cmp
mov
cmp
mov
cmp
mov
jbe
arpl
fnstsw
xor
push
ficomp
cmp
mov
mov
mov
mov
jp
fcomp
push
mov
cld
and
add
jbe
arpl
inc
or
arpl
(bad)
cmp
adc
icebp
movs
jo
pop
push
into
sub
sbb
cmp
mov
cmp
mov
cmp
mov
lock
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
ins
retf
cmp
inc
mov
mov
adc
cmp
aas
cmp
inc
call
pop
mov
jbe
sub
aad
lock
or
arpl
add
scas
int
inc
add
cmp
mov
cmp
mov
cs
mov
xchg
dec
and
add
gs
dec
(bad)
pop
jle
sub
icebp
iret
sub
inc
mov
cmp
mov
mov
or
arpl
(bad)
jle
adc
mov
pop
je
inc
mov
cmp
cld
or
or
pop
or
sub
(bad)
icebp
cmp
mov
cmp
mov
popf
ins
or
inc
or
arpl
inc
or
arpl
test
cmp
xor
inc
mov
cmp
mov
pop
jb
pop
add
retf
dec
sub
lock
clc
xchg
cmp
sbb
cld
cmp
mov
jbe
arpl
inc
jle
adc
movs
fcom
cmp
mov
cmp
mov
push
je
(bad)
add
mov
add
fwait
test
inc
mov
cmp
mov
cs
mov
or
arpl
inc
or
arpl
(bad)
cmp
adc
lock
lock
dec
sub
cmp
mov
cmp
mov
cmp
mov
test
or
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
pop
or
arpl
pop
jge
mov
test
jmp
mov
cmp
mov
cmp
mov
fild
xchg
icebp
adc
imul
lock
or
arpl
(bad)
jg
adc
test
inc
push
lea
ficom
cmp
mov
popf
in
leave
sub
mov
cld
xor
fild
aad
ret
mov
or
arpl
inc
or
arpl
adc
bound
cwde
cld
cmp
mov
cmp
mov
xor
pop
cwde
fs
cmp
rcl
mov
rcl
mov
xor
and
dec
jmp
mov
cmp
mov
cmp
or
mov
fwait
cmp
fcmovnbe
dec
sub
sbb
cld
cmp
mov
add
movs
imul
sti
ss
mov
lahf
repnz
cmps
(bad)
mov
test
cmp
adc
inc
mov
cmp
mov
mov
mov
fiadd
jb
pop
inc
pop
sti
ss
mov
pop
mul
push
adc
aad
lock
cmp
adc
aad
lock
jge
xor
dec
test
inc
mov
cmp
mov
cmp
mov
nop
jo
fld
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
and
inc
(bad)
ss
cs
popf
aad
lock
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
fcmovnbe
dec
sub
sbb
cld
mov
mov
call
add
jns
pop
sbb
and
pop
lea
mov
arpl
fnstsw
xor
inc
popf
aad
lock
jl
adc
jmp
sub
fistp
jno
outs
mov
adc
aad
lock
cmp
adc
aad
lock
add
pop
sbb
cdq
cld
cmp
mov
cmp
mov
and
lea
aaa
jbe
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
out
and
mov
jbe
mov
aad
lock
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
fcmovnbe
dec
sub
sbb
cld
cmp
mov
cld
push
inc
sbb
cmps
aam
imul
nop
in
add
arpl
(bad)
ss
mov
aad
jmp
(bad)
jp
adc
stos
frstor
cmps
aam
imul
nop
out
or
arpl
(bad)
cmp
adc
aad
lock
jp
mov
jno
pop
cmp
retf
inc
mov
cmp
mov
cmp
mov
pusha
lea
xchg
mov
rcl
mov
rcl
mov
rcl
mov
rcl
and
and
scas
mov
aad
lock
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
fcmovnbe
dec
sub
sbb
cld
cmp
mov
jge
inc
popf
jg
out
inc
cmp
mov
cmp
mov
cmp
mov
lea
fiadd
mov
leave
test
or
dec
jo
jmp
adc
cmp
jecxz
cmp
mov
cmp
mov
scas
pop
mov
or
arpl
(bad)
cmp
adc
aad
lock
jle
adc
sub
outs
out
cmp
mov
cmp
mov
cmp
mov
mov
xchg
aam
cs
popf
aad
lock
or
arpl
inc
or
arpl
inc
or
arpl
(bad)
jnp
adc
cli
adc
inc
cmp
mov
jbe
enter
lock
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
fcmovnbe
dec
sub
sbb
cld
cmp
mov
jge
inc
popf
jg
out
inc
cmp
mov
cmp
mov
cmp
mov
(bad)
cld
pop
fidivr
les
imul
enter
dec
pop
jns
mov
sahf
lds
cmp
jecxz
cmp
mov
cmp
mov
scas
pop
mov
or
arpl
(bad)
cmp
adc
aad
lock
or
arpl
cmp
mov
cmp
mov
cmp
mov
mov
mov
aad
jmp
inc
or
arpl
inc
or
arpl
inc
or
arpl
fiadd
xor
cmps
out
imul
xchg
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
movs
jo
fcmovnbe
dec
sub
sbb
cld
cmp
mov
jge
inc
popf
jg
out
inc
cmp
mov
cmp
mov
cmp
mov
or
push
pop
cdq
push
test
into
cmp
mov
cmp
mov
aaa
dec
or
loope
xor
jbe
ficomp
cmp
jecxz
cmp
mov
cmp
mov
scas
pop
mov
or
arpl
(bad)
cmp
adc
aad
lock
or
arpl
jl
mov
cld
cmp
mov
mov
mov
rcl
mov
rcl
mov
rcl
mov
rcl
cmps
jo
fmul
fst
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
aam
ret
inc
sbb
cld
cmp
mov
jge
inc
popf
jg
out
inc
cmp
mov
cmp
mov
cmp
mov
push
adc
cmp
mov
cmp
mov
cmp
mov
cmp
mov
das
jo
repz
dec
sub
jecxz
cmp
mov
cmp
mov
scas
pop
mov
or
arpl
(bad)
cmp
adc
aad
lock
or
arpl
pop
pop
mov
cmp
adc
cld
cmp
mov
xchg
je
cld
icebp
and
xor
aad
lock
or
arpl
inc
or
arpl
rep
jmp
fisttp
dec
test
cmp
xchg
cmp
mov
jbe
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
aad
inc
movs
cmp
sbb
cld
cmp
mov
jge
inc
popf
jg
out
inc
cmp
mov
cmp
mov
cmp
mov
lea
adc
xor
pop
cwde
cmp
cdq
cld
cmp
mov
cmp
mov
cmp
mov
mov
sahf
mov
cld
cmp
mov
cmp
mov
scas
pop
mov
or
arpl
(bad)
cmp
adc
aad
lock
or
arpl
(bad)
xor
and
inc
lods
cld
cmp
mov
mov
xchg
mov
jg
mov
cs
popf
aad
lock
or
arpl
inc
jle
adc
imul
sub
cmp
mov
xor
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
(bad)
ret
(bad)
cmps
cmp
(bad)
cli
cmp
mov
cmp
mov
jge
inc
popf
jg
out
inc
cmp
mov
cmp
mov
cmp
mov
or
loopne
sahf
push
hlt
mov
fstp
mov
or
or
xchg
jmp
mov
cmp
jecxz
cmp
mov
cmp
mov
scas
pop
mov
or
arpl
(bad)
cmp
adc
aad
lock
or
arpl
inc
jg
adc
mov
push
stc
cmp
mov
mov
clc
movs
inc
pop
mov
sbb
push
mov
or
xchg
imul
ss
xchg
pop
sbb
scas
in
mov
inc
xchg
pop
cmp
mov
cmp
mov
and
add
xchg
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
cmps
jo
fdivrp
xor
jle
inc
pop
fs
out
ss
cmp
cmp
mov
cmp
mov
cmp
mov
jge
inc
popf
jg
out
inc
cmp
mov
cmp
mov
cmp
mov
or
or
rep
jmp
and
push
gs
mov
add
or
(bad)
jp
adc
cmp
jecxz
cmp
mov
cmp
mov
scas
pop
mov
or
arpl
(bad)
cmp
adc
aad
lock
or
arpl
inc
or
arpl
push
cmp
sahf
in
inc
mov
mov
or
outs
and
mov
adc
cwde
outs
and
mov
jl
pop
sbb
fst
cmp
mov
cmp
mov
cmp
mov
and
test
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
pop
test
xor
xchg
pop
cdq
jge
in
dec
cmp
mov
cmp
mov
cmp
mov
mov
pop
inc
sbb
cmp
mov
cmp
mov
cmp
mov
or
arpl
pop
push
xor
aad
fbstp
stc
xchg
les
cmp
in
cld
cmp
mov
cmp
mov
scas
pop
or
inc
or
arpl
(bad)
cmp
adc
aad
lock
or
arpl
inc
or
arpl
(bad)
jle
adc
sub
repz
mov
cmp
jl
loope
out
pop
ds
clc
adc
pushf
jae
in
mov
cmp
adc
cld
mov
or
fldenv
lea
xchg
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
mov
rcl
cmps
jo
pop
fnsave
xor
(bad)
cwde
cld
cmp
mov
cmp
mov
cmp
mov
cmp
arpl
cmp
mov
cmp
mov
cmp
mov
or
push
pop
jbe
arpl
inc
or
arpl
inc
jle
adc
cmp
jmp
cld
cmp
mov
cs
mov
or
arpl
(bad)
cmp
adc
aad
lock
or
arpl
inc
or
arpl
inc
or
arpl
pusha
loop
mov
fidivr
inc
scas
pop
scas
jae
inc
mov
cmp
mov
cmp
mov
cs
add
ins
adc
or
adc
aad
lock
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
(bad)
cmp
adc
aad
lock
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
(bad)
cmp
adc
aad
lock
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
(bad)
cmp
adc
aad
lock
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
inc
or
arpl
(bad)
cmp
adc
jecxz
xchg
inc
push
(bad)
cmc
cmp
mov
mov
jecxz
pusha
ret
pop
ss
std
cmc
cld
inc
pop
aas
and
mov
cmc
loopne
mov
jne
pop
jbe
cld
inc
(bad)
and
div
cld
ret
int3
ss
mov
mov
loop
jp
and
adc
cmp
sar
xor
mov
jne
jae
pop
add
mov
jbe
cmp
adc
out
inc
std
xor
xchg
addr16
cmc
ret
xor
neg
dec
push
ret
dec
dec
add
add
jl
sbb
mov
in
sbb
stos
inc
cmp
mov
push
add
in
jecxz
mov
and
add
das
and
pcmpeqb
test
test
and
test
or
and
jnp
shld
shld
retf
mov
hlt
cmp
xor
(bad)
retf
mov
or
adc
pop
in
daa
pop
or
shld
fst
pop
lea
and
jnp
(bad)
imul
seto
lea
cmp
retf
out
or
mov
mov
repnz
lds
leave
cmps
inc
add
and
shl
jecxz
lods
dec
add
jnp
movs
outs
(bad)
cli
aaa
mov
xor
or
mov
and
sti
int3
lea
outs
(bad)
and
jnp
enter
shld
popf
pusha
cmp
mov
test
dec
(bad)
fs
lods
mov
mov
iret
sub
aam
stc
(bad)
test
nop
cmp
(bad)
pusha
xor
sar
daa
xchg
sti
mov
mov
sti
mov
movs
stc
movs
jbe
sti
dec
je
mov
stc
popa
push
cmp
ins
jb
shr
adc
movs
imul
sar
mov
ss
push
push
mov
mov
sub
lea
and
jnp
cli
adc
push
jp
push
jo
push
push
adc
xor
js
xor
pop
dec
pop
es
mov
jp
add
push
into
pop
pop
jb
js
xor
push
mov
lods
mov
pop
jno
inc
arpl
cld
repnz
sar
jmp
push
pop
sar
js
movs
dec
lea
and
sti
js
pop
jl
fs
push
shl
pop
lea
js
lods
daa
fild
sub
mov
gs
or
xor
rsqrtps
mov
mov
mov
jnp
cli
repnz
jae
and
cmp
add
sti
xchg
jo
test
pop
test
mov
adc
(bad)
sti
js
call
adc
jnp
icebp
rol
lock
jb
sbb
add
dec
pop
movs
jno
pop
ds
or
jo
pop
and
mov
cdq
and
lock
or
pop
dec
scas
cmp
push
mov
lock
cmp
push
mov
iret
ror
lahf
inc
fmul
mov
and
in
gs
shr
mov
aas
repz
lds
out
aas
shl
ins
(bad)
bswap
ficomp
adc
aad
aas
packuswb
mov
das
fisttp
xchg
xor
(bad)
sbb
inc
inc
dec
psrlq
stos
mov
sub
dec
mov
movntq
aad
mov
packuswb
ins
in
jle
pop
(bad)
packuswb
and
cmp
outs
aas
ins
cmc
in
jle
and
lds
out
cwde
mov
in
shr
jg
push
addr16
call
das
out
mov
dec
mov
icebp
cwde
cwde
shl
xchg
outs
sti
add
in
test
mov
daa
xchg
gs
mov
into
jnp
dec
mov
jnp
rcr
dec
repz
sbb
mov
fdiv
fstp
or
cmp
(bad)
icebp
(bad)
in
lea
sub
test
hlt
in
push
mov
add
xchg
adc
xchg
mov
or
lock
call
cmps
sti
dec
cli
or
repz
lds
rcl
lea
iret
dec
repnz
jns
pusha
(bad)
mov
into
push
mov
in
js
inc
(bad)
(bad)
(bad)
(bad)
dec
mov
sar
mov
sbb
pop
es
lea
or
shr
cmps
cmp
daa
test
cmp
dec
xchg
das
movs
lahf
cmp
push
(bad)
aad
stc
clc
(bad)
pop
stos
cmp
and
sti
push
jp
pop
jo
fimul
sar
shl
mov
sar
popf
sub
jb
pop
nop
xor
es
inc
lea
out
lock
jb
test
rcr
repz
jb
movs
into
retf
push
jge
inc
cmc
das
mov
into
jnp
pop
clc
sti
js
pop
sar
push
add
hlt
shl
repnz
bound
mov
cwde
call
fsqrt
mov
(bad)
pushf
js
xor
inc
dec
int
adc
clc
add
mov
dec
jge
push
and
fs
dec
jge
fisttp
fnsave
sbb
jge
ss
(bad)
cld
mov
lock
jge
dec
mov
fstp
mov
mov
je
push
repnz
jge
sbb
add
aas
dec
out
repnz
jge
sbb
(bad)
jns
out
retf
pop
adc
call
dec
std
add
mov
jnp
mov
retf
jge
ds
mov
std
mov
and
adc
pushf
(bad)
jae
pop
imul
enter
dec
std
jbe
aam
(bad)
xor
outs
inc
pushf
test
(bad)
mov
into
mov
xor
dec
retf
inc
or
mov
dec
std
pop
dec
rcr
cs
aam
sahf
enter
dec
or
aam
xor
pop
retf
lahf
push
ins
mov
rcr
cmc
or
mov
dec
std
stos
int3
loopne
xor
pushf
jo
lahf
push
cmp
cmp
cmp
ds
inc
and
mov
ds
sysexit
dec
jge
pushf
test
fcmovbe
mov
into
mov
(bad)
pushf
aas
ja
adc
pop
sbb
fidivr
mov
test
std
add
dec
into
cmp
inc
loop
mov
add
pop
dec
cli
cmp
retf
retf
xor
jp
push
jle
mov
push
in
add
dec
mov
cvttps2pi
mov
clc
or
je
jo
aaa
mov
dec
std
jno
mov
xchg
sbb
mov
mov
xchg
jg
pop
(bad)
loope
jns
mov
dec
aas
test
dec
jge
mov
dec
aas
sbb
dec
std
mov
inc
dec
retf
jge
ds
xchg
std
pop
or
sub
push
cmp
mov
mov
or
xor
xlat
mov
int3
cmps
out
sar
mov
xor
jp
adc
hlt
mov
add
and
mov
or
jg
inc
xor
retf
mov
mov
inc
pop
dec
aad
push
xor
cmp
cmp
clc
test
dec
sahf
mov
cmp
add
es
sbb
push
retf
sub
jp
mov
or
xor
mov
int3
mov
sub
lock
test
push
jmp
fnsave
mov
sti
mov
jbe
rcr
sub
mov
xchg
std
mov
jne
push
xor
pop
or
inc
retf
std
mov
je
push
repnz
xor
dec
fucom
ds
out
repnz
jge
js
enter
test
shl
mov
add
mov
fistp
mov
pop
fnsave
or
out
xor
pop
dec
jge
sbb
dec
xor
or
mov
pop
dec
jge
push
fdivr
(bad)
(bad)
iret
mov
je
xchg
add
dec
rol
retf
add
add
outs
lods
es
sahf
dec
sub
cmps
cld
fld
inc
dec
or
(bad)
(bad)
fisubr
inc
movs
pusha
aad
jns
(bad)
int3
cmp
shr
pop
cmp
cmps
lahf
jae
sti
mov
(bad)
lock
jb
daa
mov
ud2
ret
lods
(bad)
and
aam
movs
mov
clc
(bad)
gs
jmp
mov
push
dec
fsub
jo
(bad)
pop
dec
ss
jnp
dec
repnz
in
(bad)
div
jnp
rcr
inc
rol
add
sti
icebp
test
clc
jnp
scas
pop
scas
iret
sub
arpl
rcl
stos
lock
(bad)
and
into
pop
icebp
jb
push
sti
mov
mov
clc
int3
(bad)
paddq
jnp
ror
jnp
cmp
xchg
and
push
mov
fs
lea
and
cmps
(bad)
mov
test
rcr
(bad)
pmuludq
push
rol
loope
repz
call
es
push
xchg
shld
lea
clc
test
pop
(bad)
or
and
sti
js
pop
(bad)
(bad)
push
mov
dec
push
pop
lds
lock
dec
push
iret
scas
in
repz
mov
lock
shl
sbb
pop
(bad)
ror
lea
mov
jb
mov
fnstcw
clc
cmp
mov
dec
inc
arpl
dec
cli
stc
clc
das
and
cmps
jb
jns
sar
sbb
jb
jb
(bad)
icebp
in
jne
arpl
(bad)
pop
loop
lock
(bad)
test
in
cli
push
ins
add
and
jbe
mov
jbe
mov
jbe
mov
jbe
mov
or
je
xchg
sub
add
test
je
mov
nop
xchg
push
sub
test
adc
jbe
nop
adc
mov
push
sub
mov
mov
fs
mov
iret
or
ins
jb
xor
mov
div
push
aam
xor
xor
or
aaa
jl
xor
not
sti
xor
xlat
xor
rcl
nop
xchg
push
test
test
jl
sbb
idiv
xor
adc
push
xlat
xor
repnz
jne
iret
or
aam
xor
ret
push
test
dec
sbb
test
add
pop
dec
bound
cmp
xchg
jbe
nop
xchg
xor
mov
adc
xor
push
add
imul
mov
mov
mov
jbe
mov
in
icebp
jae
or
imul
call
outs
dec
lods
xor
mov
stos
dec
out
push
test
pusha
xchg
out
sub
mov
cld
test
adc
adc
sub
test
(bad)
les
pushf
adc
cmp
adc
cld
jb
lahf
xor
lock
jb
daa
mov
dec
sar
daa
aas
adc
sti
in
jp
jnp
pop
(bad)
lock
jb
mov
dec
and
leave
jnp
retf
jb
cmp
ins
das
and
inc
cmps
xchg
and
jnp
or
cmp
sbb
lods
fisubr
shld
int
fnsave
imul
test
vmread
aad
push
icebp
dec
inc
les
lock
sub
and
jnp
hlt
stc
jno
(bad)
push
lea
mov
mov
stc
(bad)
and
movs
sti
jns
ret
(bad)
push
shr
and
inc
add
mov
(bad)
(bad)
lea
push
and
mov
clc
push
jnp
stos
jb
clc
jnp
movs
pop
or
movs
cld
jnp
sti
push
cli
ds
js
out
(bad)
pop
adc
out
push
push
sub
into
pop
push
pop
call
(bad)
repz
cdq
(bad)
xchg
sahf
cld
stc
sar
adc
push
fild
xchg
lock
test
std
cmps
std
mov
xchg
push
push
push
outs
sar
js
ficomp
test
sti
pop
test
add
lock
mov
js
das
cmps
inc
stc
clc
test
inc
fmul
or
arpl
repnz
sbb
rcl
dec
cmp
add
cmp
test
push
icebp
xor
icebp
xor
icebp
mov
(bad)
icebp
mov
ficomp
xor
rcl
mov
(bad)
icebp
mov
rcr
and
inc
xor
mov
(bad)
pop
xor
icebp
outs
dec
(bad)
jg
sub
push
xor
icebp
xor
add
cmc
jo
jno
push
dec
xchg
mov
pop
push
jle
sbb
(bad)
jno
dec
mul
push
aam
pop
push
cld
inc
mov
std
bnd
mov
shl
(bad)
and
xrelease
sti
cmc
leave
xchg
test
in
xor
clc
les
push
icebp
add
push
icebp
nop
sub
icebp
mov
inc
loopne
pusha
les
push
mov
adc
inc
aaa
cmp
inc
adc
ror
xchg
cmp
jp
into
cwde
or
inc
push
pop
mov
in
test
add
push
icebp
add
push
icebp
and
add
xchg
in
jp
into
push
hlt
arpl
(bad)
les
push
mov
xor
icebp
add
push
mov
pop
(bad)
les
pop
les
(bad)
icebp
and
add
xchg
in
jp
into
xchg
adc
inc
xor
test
(bad)
push
inc
push
pop
mov
in
cmp
cmp
xor
shl
push
lock
mov
in
test
add
push
icebp
add
push
icebp
and
add
xchg
in
jp
into
push
mov
retf
xor
icebp
add
mov
push
(bad)
icebp
mov
test
xor
in
inc
outs
les
push
ss
(bad)
icebp
cmc
jl
arpl
push
dec
fcmovbe
add
icebp
hlt
in
adc
dec
xor
jmp
mov
cmp
xor
shl
cwde
pop
imul
push
inc
imul
adc
xchg
xchg
xor
ins
test
mov
iret
or
retf
jb
and
jnp
movs
loopne
or
das
and
unpcklps
test
cmp
inc
mov
push
inc
(bad)
lock
in
push
sbb
or
(bad)
ror
push
sbb
or
add
xor
iret
pop
xor
pop
xchg
les
movs
(bad)
mov
jmp
lock
or
xor
add
adc
mov
and
scas
mov
test
loopne
cli
dec
movs
test
sar
mov
stc
clc
mov
or
test
outs
inc
movs
xchg
xchg
jnp
(bad)
push
(bad)
lods
(bad)
sub
mov
xchg
(bad)
sub
icebp
dec
movs
cmp
lock
jb
push
dec
pop
or
jle
sti
push
push
push
outs
(bad)
repnz
pushf
sub
sar
hlt
loopne
(bad)
paddusw
in
js
aaa
xchg
repz
mov
test
mov
or
in
js
add
cmps
fcomp
xchg
pop
fist
call
pusha
bound
rcl
jnp
psubb
pop
fistp
lea
stc
hlt
fsub
push
lock
(bad)
cmp
adc
cs
jnp
mov
lock
test
js
xchg
or
jbe
lea
out
push
(bad)
sbb
pop
(bad)
pop
ins
daa
test
sub
es
jnp
or
or
iret
pop
test
fpatan
sub
push
ins
(bad)
repnz
in
mov
mov
sbb
add
je
ins
inc
je
ins
shl
ins
std
aam
aad
or
xor
ins
std
aam
fst
sub
aam
xlat
inc
je
ins
sahf
sbb
pop
inc
fistp
xchg
inc
inc
add
hlt
(bad)
jg
outs
add
popa
je
sar
imul
jnp
xchg
mov
and
xchg
loope
out
inc
je
in
add
add
repz
imul
sub
mov
shl
dec
rol
ins
xchg
fild
add
mov
paddw
adc
push
inc
sub
aam
xlat
jnp
sub
je
mov
hlt
or
or
fdecstp
test
popa
je
rcl
call
je
sar
enter
xchg
and
jo
in
loop
xor
jnp
pop
(bad)
lock
jb
(bad)
sbb
shld
mov
rol
lods
lock
sub
(bad)
pop
cmp
movs
lahf
jl
sti
mov
(bad)
lock
adc
mov
mov
gs
imul
sti
mov
mov
in
movs
jnp
iret
pop
imul
fisub
dec
jae
xchg
or
out
lea
fdivr
or
and
xchg
adc
lea
and
ins
mov
arpl
lea
leave
es
movs
test
into
sar
push
movs
stc
jns
clc
jnp
jnp
xchg
icebp
lea
out
shl
icebp
sbb
imul
out
xchg
test
push
push
push
test
ror
jns
fnstsw
repz
add
movs
sub
jns
push
xchg
loop
lods
psrlw
lea
test
xor
psrlq
cmps
(bad)
cli
adc
test
dec
cmps
jmp
es
mov
test
into
push
test
stos
stc
push
cli
or
mov
add
xor
inc
cdq
fucomi
out
or
lock
test
pop
enter
cmp
or
push
rcl
ds
(bad)
hlt
rol
push
push
sub
icebp
jb
jle
sub
jl
lock
jb
and
pop
repz
test
lds
test
rcl
jnp
icebp
rcr
rcl
das
icebp
div
clc
xchg
fiadd
cli
push
cmp
ror
jge
repnz
inc
pop
sub
inc
pop
sub
sbb
mov
pop
sub
sbb
mov
pop
sub
gs
sbb
xchg
call
test
sahf
neg
sahf
inc
push
xchg
pop
pop
scas
(bad)
mov
jecxz
adc
ins
xchg
sub
xchg
cmps
jmp
sbb
out
repz
mov
cld
or
loop
fwait
lods
std
ins
adc
std
out
or
xor
aam
sbb
cmps
imul
repnz
inc
pop
sub
sbb
pusha
mov
xlat
mov
sbb
(bad)
pop
test
push
cmp
sub
pop
sbb
popa
mov
ficom
adc
push
and
ficomp
outs
jecxz
in
add
cmps
jne
add
xchg
inc
imul
out
jle
jle
outs
sub
jp
sbb
jo
xor
mov
sbb
mov
push
sahf
jno
add
lahf
inc
pop
sbb
jo
push
push
mov
movs
adc
xor
imul
push
jbe
mov
pop
sub
sub
sub
jp
sbb
jo
xor
mov
outs
test
stos
imul
sahf
inc
outs
sub
jg
mov
cmps
push
push
enter
dec
mov
pop
sub
inc
push
sub
inc
fcomp
jge
pop
test
sahf
lds
sub
fisubr
inc
lahf
aas
cld
xlat
jp
fwait
sti
pop
xchg
pop
push
fwait
mov
lds
xchg
sti
pop
popf
push
jg
test
push
pop
loop
cmps
pop
inc
and
cs
push
pop
mov
fstp
mov
gs
pushf
rcr
push
fstp
and
push
js
out
iret
and
ins
test
mov
iret
cwde
imul
jns
xlat
test
and
jnp
jns
(bad)
int
nop
jns
sbb
jp
jnp
pop
(bad)
lock
jb
mov
dec
and
xlat
test
cmp
ins
das
and
mov
xchg
and
jnp
sbb
cmps
push
not
xchg
push
fcmovnbe
jns
test
loope
movs
add
iret
fdivr
mov
or
hlt
push
inc
mov
jno
out
es
jg
push
jp
(bad)
dec
pop
xchg
or
push
xor
and
jnp
mov
stc
clc
jp
sbb
out
js
xor
ficom
mov
sar
js
movs
xor
in
movs
sti
stc
into
sar
repnz
stc
rcl
aad
(bad)
js
lods
hlt
fldcw
push
and
push
cwde
jo
test
(bad)
pop
in
daa
mov
das
and
mov
lock
js
sbb
sar
jo
jno
sbb
cs
add
(bad)
std
in
clc
mov
pop
cmpxchg
js
push
xchg
repz
stc
dec
sti
adc
jo
test
movs
ds
push
sub
repz
shl
pop
shl
mov
xchg
pop
and
jnp
aaa
pop
call
mov
js
dec
(bad)
pusha
jb
cli
stc
js
and
(bad)
cmp
dec
add
push
and
icebp
(bad)
clc
jbe
stos
fstp
xor
jb
cmps
sub
push
cmps
and
push
jge
movs
xchg
out
call
cmps
and
xchg
out
call
(bad)
movs
mov
daa
call
xchg
lahf
aad
and
push
mov
cmps
and
dec
xchg
sbb
push
push
daa
adc
push
cmps
sbb
inc
daa
adc
daa
adc
daa
pop
shl
and
or
nop
movs
jbe
xchg
and
imul
pusha
out
and
outs
out
and
imul
imul
movs
data16
and
fs
and
inc
out
and
push
push
daa
adc
sar
pop
push
push
cmps
adc
push
daa
adc
push
addr16
and
xchg
push
cmps
adc
ins
ficomp
test
sbb
lahf
aam
fcomp
xchg
pop
fisubr
cmps
and
adc
pop
fisubr
movs
and
rcr
cwde
or
rol
xchg
mov
fcomp
scas
jnp
xchg
adc
(bad)
pop
aad
cmps
movs
xchg
addr16
and
xchg
out
in
js
(bad)
push
cmc
and
int3
cwde
fadd
scas
ins
fmul
jae
pop
addr16
daa
pop
dec
and
daa
fsubr
call
shl
daa
fsubr
call
xchg
cwde
popa
fsubr
and
inc
fsubr
addr16
ficom
(bad)
movs
xchg
sbb
fsubr
push
rol
out
and
sub
xchg
and
xchg
push
cmps
adc
ins
ficomp
test
addr16
pop
addr16
or
cmps
adc
xchg
and
addr16
sub
sbb
sbb
push
test
test
and
cmps
xchg
xchg
out
and
rcr
pop
daa
mov
movs
push
bound
loop
lds
xchg
out
call
(bad)
movs
xchg
out
call
push
pop
push
cwde
fadd
aaa
push
sbb
ror
inc
add
ror
sbb
rol
pop
in
rcr
rcl
jbe
lods
inc
cmps
push
repz
lds
movs
push
jmp
sbb
and
lahf
jnp
dec
repz
adc
cmp
pop
(bad)
lock
jb
mov
dec
jns
sar
jb
shl
lods
xchg
xchg
mov
cmp
(bad)
pop
jp
inc
add
cli
jmp
add
jnp
int
sti
mov
mov
or
stc
sti
dec
lock
jnp
popa
add
rsm
sti
push
rcr
imul
mov
fsubr
jae
(bad)
rol
cmp
push
out
loop
bnd
mov
shr
lock
xor
clc
jae
test
in
pop
(bad)
iret
test
jnp
in
cmps
ss
movs
cmp
adc
adc
dec
xchg
mov
or
psllq
aad
movs
xor
xchg
stc
sti
js
movs
mov
jmp
test
xor
xchg
dec
inc
push
and
stc
sar
pushf
push
lock
bound
test
cli
cmp
sbb
ins
lock
push
push
popa
dec
jae
cmp
hlt
push
js
jp
out
mov
pop
test
adc
or
test
movs
mov
rol
pop
jno
icebp
stc
push
jp
shl
(bad)
imul
shr
(bad)
sar
lock
jb
pusha
arpl
into
test
shl
(bad)
icebp
shl
jb
xor
jo
pop
rcr
loope
(bad)
aad
xchg
xor
jmp
(bad)
xchg
and
imul
cmp
scas
pop
int3
xchg
mov
cmc
test
stos
pop
push
imul
das
inc
(bad)
cmp
jmp
mov
push
jmp
mov
jmp
retf
lock
imul
push
imul
and
xchg
xchg
pop
push
dec
adc
xchg
shl
fadd
xchg
leave
cwde
and
inc
sbb
lds
and
inc
sbb
pop
inc
mov
inc
les
push
ror
and
ret
fcmovnbe
xchg
das
jmp
xchg
and
fwait
and
push
sbb
jb
xor
xchg
ret
aas
pop
pop
and
push
pop
sbb
pop
xchg
(bad)
sub
inc
xchg
mov
inc
xchg
xchg
ror
fld
push
inc
retf
mov
rol
and
fst
mov
pop
ret
xchg
stos
jb
xor
imul
push
inc
sbb
inc
inc
xchg
sub
lds
cmp
sbb
repnz
push
imul
pop
retf
sbb
push
bound
sub
inc
xchg
and
push
scas
inc
rcl
por
mov
and
adc
jmp
xchg
movs
dec
fist
lods
inc
rcl
imul
mov
rol
fadd
mov
mov
cwde
jmp
xor
jmp
mov
imul
inc
and
not
(bad)
ficom
xor
ror
lock
repnz
and
(bad)
fisub
mov
push
and
imul
adc
xchg
jbe
adc
jb
push
retf
call
xchg
adc
adc
repnz
add
data16
lea
push
imul
xor
repnz
lea
push
imul
mov
pop
xchg
stos
xor
ror
and
xchg
push
leave
jmp
sub
cld
lea
sub
adc
int
jp
pop
jp
xchg
and
imul
imul
push
imul
jno
and
jmp
loop
mov
push
mov
sbb
repnz
xchg
sub
sub
mov
xchg
push
push
mov
push
ret
jb
aaa
mov
push
mov
sbb
repnz
xchg
sub
sub
mov
xchg
push
push
mov
push
ret
jb
aaa
mov
push
mov
sbb
repnz
xchg
sub
sub
mov
xchg
push
push
mov
push
ret
jb
aaa
mov
push
mov
sbb
repnz
xchg
sub
sub
aas
xchg
push
push
mov
jmp
imul
mov
retf
xor
jb
and
push
mov
push
pop
push
and
retf
in
(bad)
inc
mov
pop
retf
cmp
jb
and
push
mov
push
pop
push
and
retf
in
(bad)
inc
mov
pop
retf
sub
and
push
mov
push
pop
push
and
retf
in
(bad)
inc
mov
pop
retf
and
jb
and
push
mov
pop
retf
push
repnz
jne
das
ss
loop
pop
repz
loope
or
imul
jmp
movs
sbb
ficomp
pop
cmp
and
push
mov
aaa
imul
shl
fisttp
push
and
push
cmp
push
imul
and
enter
ficomp
pop
cmp
and
push
mov
aaa
imul
shl
fisttp
push
and
push
cmp
push
imul
and
enter
ficomp
sub
adc
fst
imul
xor
pop
push
and
jg
cmps
xchg
scas
jb
jmp
xor
fisttp
arpl
retf
push
repnz
jmp
jecxz
imul
dec
inc
in
push
inc
jb
or
push
and
adc
cmps
push
pop
jb
inc
sub
and
push
mov
xchg
sub
adc
push
and
imul
repnz
mov
and
(bad)
(bad)
dec
xabort
inc
jb
or
push
and
pop
jb
je
jb
and
push
mov
xchg
sub
adc
push
and
imul
mov
pop
mov
jmp
imul
in
xor
push
imul
ss
arpl
retf
push
repnz
sub
jmp
xchg
mov
aas
fisttp
mov
jmp
mov
push
and
xchg
mov
push
test
push
push
iret
mov
jmp
sub
hlt
lea
pop
cmp
jmp
imul
shl
fst
fidiv
ret
jb
aaa
mov
push
and
jmp
loop
jmp
mov
push
jmp
jb
dec
imul
xchg
stos
xor
out
push
add
add
lock
imul
and
repnz
imul
xchg
(bad)
ret
into
xchg
xchg
jecxz
jmp
pop
arpl
and
shl
jb
sar
scas
pop
int3
xchg
mov
xlat
mov
pop
jmp
fcomip
fwait
push
jmp
fwait
je
xchg
outs
mov
xchg
in
ja
xchg
xchg
cmp
retf
jo
xchg
sub
cmp
lahf
mov
jmp
retf
and
cmps
inc
jb
inc
ins
test
retf
fs
lds
cmp
test
(bad)
fidivr
inc
add
cli
aaa
fsincos
jns
and
test
or
movs
jnp
stc
fs
into
mov
call
gs
retf
mov
out
jnp
int
sti
mov
enter
in
jnp
iret
fdiv
mov
popf
fwait
mov
fcom
stc
pop
add
std
int3
loope
push
iret
pop
mov
pop
cmps
push
int
es
push
pop
repz
mov
leave
xchg
sub
dec
jp
test
ja
cmc
inc
loopne
push
jp
pop
or
xchg
xchg
sti
sar
jne
(bad)
in
lea
sbb
lea
stc
jns
inc
cmp
and
jnp
jp
jo
(bad)
and
retf
imul
or
retf
mov
out
jnp
dec
movs
sti
jns
fidivr
lock
jb
pop
xor
sti
in
hlt
in
push
into
pop
pi2fw
xor
js
adc
ds
daa
and
jnp
jg
call
sar
lods
test
jecxz
pop
es
or
pop
mov
ins
add
aaa
cmp
jb
push
push
push
out
jns
daa
shld
lea
cmps
je
pop
xchg
shr
test
jo
inc
xchg
clc
out
es
sti
jo
jb
fidiv
aam
clc
test
pop
and
push
push
push
out
repnz
lahf
sbb
jns
push
test
int3
jns
sti
pop
xor
rol
push
and
jno
pop
mov
shl
dec
jb
call
sub
xlat
leave
xchg
pop
loope
xchg
pushf
push
retf
jae
repz
xlat
stos
fwait
jb
and
pop
jne
(bad)
or
pop
repz
fdivr
push
push
pop
in
or
sbb
pop
jmp
and
sbb
inc
ins
test
and
shld
movs
loopne
or
mov
lahf
pop
(bad)
std
mov
dec
(bad)
in
test
gs
or
jnp
shld
lea
arpl
or
shld
lea
shr
pop
pop
fidiv
imul
rcr
test
adc
pop
dec
test
fdiv
pop
push
pop
in
dec
(bad)
sar
jb
arpl
push
push
pop
lea
imul
(bad)
(bad)
out
movs
sti
dec
dec
and
jnp
icebp
inc
loop
fistp
cmps
xor
popa
lea
cmps
jmp
xchg
adc
push
xchg
shld
lea
js
js
pop
(bad)
mov
pop
add
jp
gs
and
jnp
jp
cmc
jb
sbb
stc
rol
jnp
lock
repnz
add
sti
rcl
jnp
cli
push
mov
dec
or
es
push
clc
test
xlat
pop
inc
rcl
arpl
mov
xchg
mov
ss
push
repz
jbe
shld
lea
shl
sar
and
test
mov
(bad)
in
pop
jp
(bad)
jge
inc
jg
lock
fidiv
(bad)
cmps
in
js
xchg
and
test
pop
mov
(bad)
stc
xor
bound
stc
out
js
jb
fcomp
adc
popa
test
jge
sub
mov
mov
sbb
mov
mov
push
mov
sbb
fcomp
mov
xor
xchg
and
push
mov
push
pop
xchg
add
add
shl
push
je
cmp
mov
push
pop
xchg
add
add
fsubp
push
je
cmp
mov
push
pop
xchg
add
add
fsub
push
je
cmp
mov
push
pop
xchg
add
(bad)
out
fadd
into
sahf
pop
sbb
push
inc
cmp
inc
cmps
leave
sbb
pop
call
sub
mov
je
cmps
fst
mov
cdq
add
xor
les
sbb
and
fst
mov
sahf
mov
sbb
fst
mov
sahf
mov
sbb
fst
mov
sahf
mov
sbb
dec
ret
fst
mov
sahf
mov
sbb
sub
fs
les
mov
loope
call
adc
mov
stos
add
mov
je
cmps
fst
mov
cdq
add
aaa
test
sbb
adc
mov
sahf
mov
sbb
dec
ret
fst
mov
sahf
mov
sbb
fst
mov
sahf
xor
sbb
dec
ret
fst
mov
sahf
xor
sbb
sub
fs
les
mov
loope
call
adc
mov
mov
pop
mov
add
inc
cmp
mov
lods
pop
add
xchg
push
je
cmp
mov
push
pop
xchg
add
add
shl
push
je
cmp
mov
push
pop
xchg
add
add
fsubp
push
je
cmp
mov
mov
add
add
fsub
push
je
cmp
mov
mov
add
(bad)
out
fadd
into
sahf
pop
sbb
push
inc
cmp
inc
cmps
leave
pushf
pop
pop
call
mov
mov
enter
sbb
es
push
or
xlat
test
pop
adc
sbb
lods
test
sbb
test
adc
daa
pop
retf
iret
sub
jecxz
rol
lock
js
retf
inc
pop
and
jnp
shld
shld
stc
gs
shld
movs
or
popa
jl
lock
cmp
xchg
outs
test
mov
or
mov
std
or
dec
(bad)
loopne
test
pop
or
add
jnp
lock
dec
or
lds
(bad)
(bad)
pop
or
jo
xchg
jb
out
jb
push
xor
and
sti
aaa
shld
(bad)
pop
mov
sub
sti
stc
xchg
lods
jnp
(bad)
pop
jp
shld
jp
jnp
retf
and
and
pop
jae
sti
int3
push
inc
rol
inc
mov
or
xor
or
aam
pop
and
push
cmp
mov
dec
(bad)
rcr
test
(bad)
int3
cmp
test
retf
and
and
push
sub
lahf
jp
mov
xchg
xor
and
jnp
xor
daa
mov
pushf
dec
pop
mov
jb
lods
icebp
jb
pop
test
movs
push
(bad)
retf
and
and
mov
test
mov
jb
and
in
dec
lods
and
jnp
dec
movs
fldcw
shl
cwde
lock
mov
cwde
add
jbe
test
gs
or
movs
jnp
shl
jno
and
add
repnz
out
mov
loopne
jb
sar
shld
lea
es
or
sti
rcl
xor
jnp
shr
push
shl
(bad)
repz
stos
push
lods
in
clc
jp
pfsub
push
shl
inc
lea
and
jnp
cmp
pop
test
pop
mov
mov
pop
cmp
jle
call
ins
cmps
cmps
int3
ds
aas
shl
mov
xchg
xor
inc
bound
bound
or
mov
test
daa
test
and
in
dec
push
or
mov
cmp
xchg
xchg
cmp
clc
clc
push
or
test
mov
pop
(bad)
pop
(bad)
cmp
add
pop
xlat
icebp
jecxz
es
into
push
test
in
jns
push
xor
or
lock
retf
jb
add
jae
pop
bndstx
cmps
push
mov
pop
lods
jno
fidivr
pop
movs
sbb
cld
es
mov
and
cmp
sbb
mov
cmps
sbb
int3
jns
dec
frstor
int
cld
es
out
es
mov
dec
add
mov
cmp
pop
out
inc
maxps
xchg
pop
(bad)
push
xchg
pop
imul
jbe
mov
std
retf
xchg
push
jg
xchg
shl
lahf
aam
dec
lahf
push
dec
mov
jge
cmp
inc
xchg
ret
sbb
clc
retf
adc
int
push
std
retf
mov
js
pushf
push
jbe
push
push
jg
xchg
sar
imul
jge
xchg
sar
pushf
xlat
jne
xchg
rcr
xchg
aam
lds
pop
jge
xchg
aam
in
sbb
jge
push
pop
jae
xchg
push
dec
jno
dec
adc
fucomip
adc
xchg
push
jbe
mov
jge
adc
std
into
xchg
shl
dec
pop
jno
(bad)
xchg
aam
dec
xchg
aam
ins
adc
xchg
fistp
adc
ins
call
retf
clc
into
lahf
fdiv
enter
dec
adc
pop
retf
adc
dec
xchg
push
(bad)
push
adc
fmul
fcomp
adc
pop
into
adc
ffreep
ss
jge
ss
dec
xchg
push
js
sbb
jecxz
adc
ffreep
adc
xchg
aam
dec
xchg
sar
xchg
xlat
cmc
dec
pop
rcr
dec
adc
(bad)
ins
pop
push
jl
adc
in
xchg
aam
jmp
push
je
push
pop
jae
xchg
push
dec
ss
dec
xchg
(bad)
(bad)
pushf
push
jge
pop
jno
inc
xchg
ja
xchg
(bad)
clc
retf
mov
jg
pushf
dec
std
inc
sbb
retf
sbb
imul
jns
xchg
push
jge
xchg
aam
dec
pop
fcomip
pop
xchg
aam
dec
adc
sti
into
ss
sti
pop
pop
dec
pop
idiv
inc
adc
cmc
dec
sbb
inc
xchg
fistp
sbb
imul
adc
sar
pop
pop
int
jno
pop
xchg
fild
dec
jmp
pop
imul
mov
in
add
gs
pop
dec
sbb
jecxz
adc
ffreep
pushf
shl
ins
popf
aam
ins
xchg
push
jbe
nop
fdiv
dec
xchg
(bad)
cmc
dec
call
into
xchg
push
cli
push
adc
pop
retf
xchg
push
not
pop
inc
adc
jg
adc
fild
aad
in
adc
push
jne
ss
dec
pop
fdivr
dec
adc
inc
adc
jne
adc
fsubr
jbe
pushf
push
jns
ss
jge
xchg
push
jbe
xchg
push
je
adc
jmp
aam
inc
xchg
rcr
xchg
push
dec
jbe
inc
adc
jne
pop
(bad)
inc
lahf
push
std
retf
adc
jg
pop
div
inc
adc
js
adc
cld
ins
call
in
pop
pop
jge
xchg
push
test
push
pop
js
xchg
push
jae
adc
cld
retf
xchg
aam
dec
pop
(bad)
stc
into
mov
jge
adc
jnp
xchg
(bad)
in
pop
sar
xchg
aam
int3
adc
(bad)
nop
aam
inc
xchg
ficomp
xchg
push
js
pop
aam
ins
call
retf
clc
into
lahf
fdiv
iret
ss
into
ss
dec
adc
jnp
ss
(bad)
ss
js
adc
dec
icebp
gs
imul
dec
pop
idiv
inc
adc
cmc
dec
sbb
inc
xchg
fistp
sbb
imul
adc
sar
push
xchg
(bad)
fmul
(bad)
inc
push
rcr
xchg
fcmovu
in
xchg
fdiv
mov
clc
dec
xchg
sar
sbb
jge
sbb
imul
xchg
jnp
xchg
shl
jmp
sar
pop
inc
jnp
mov
jnp
xchg
push
jbe
adc
dec
xchg
(bad)
jle
sbb
clc
dec
popf
push
js
mov
std
dec
xchg
(bad)
stc
(bad)
xchg
rcr
xchg
aam
in
pop
push
jbe
popf
aam
retf
ss
retf
adc
jnp
adc
jne
push
idiv
lds
std
into
adc
hlt
lds
push
js
sbb
jecxz
adc
ffreep
pushf
shl
ins
popf
aam
retf
jns
sbb
jge
pop
sar
into
mov
jge
xchg
(bad)
jl
adc
fisttp
(bad)
ins
call
inc
adc
(bad)
mov
js
adc
fmul
(bad)
dec
adc
fucomip
pushf
push
jge
xchg
rcr
in
sahf
fdiv
adc
dec
push
push
dec
rcr
(bad)
xchg
fdiv
xchg
push
cmc
retf
adc
jg
sbb
test
fistp
push
push
jge
adc
pop
pop
xchg
aam
dec
xchg
(bad)
ins
sbb
sar
xchg
fstp
ins
xchg
fdiv
pushf
push
jns
ss
jge
nop
pop
jnp
ss
dec
xchg
fdivr
xchg
push
cli
enter
retf
ss
jnp
ss
inc
xchg
pop
js
mov
clc
inc
pop
push
dec
adc
into
mov
clc
dec
adc
jnp
sbb
test
lahf
(bad)
inc
xchg
aam
inc
lahf
push
std
in
xchg
aam
push
xchg
ficomp
mov
jg
adc
iret
ss
dec
xchg
inc
jg
add
adc
pop
dec
xchg
aam
ins
adc
dec
xchg
fistp
push
fcomp
mov
jge
xchg
(bad)
(bad)
adc
test
fucomip
pop
sar
lahf
aam
into
xchg
pop
cmc
retf
pop
idiv
dec
sbb
repz
pop
(bad)
lds
std
(bad)
adc
(bad)
mov
jle
nop
pop
jnp
ss
inc
sbb
(bad)
jbe
adc
pop
dec
sbb
repz
adc
pop
retf
jg
xchg
push
jne
pushf
shl
lds
jbe
enter
dec
adc
pop
dec
push
jbe
into
adc
cld
dec
adc
pop
into
xor
retf
adc
int
pop
sti
in
xchg
aam
ins
pushf
shl
adc
pop
ins
sbb
inc
lahf
push
jg
push
icebp
gs
adc
jbe
add
fisttp
jnp
(bad)
mov
(bad)
in
xchg
push
repz
adc
sar
int3
sbb
aam
in
pushf
aam
inc
xchg
push
jns
adc
in
pop
push
jae
adc
ins
xchg
aam
inc
adc
fild
jbe
pushf
push
jns
xor
pop
inc
jnp
mov
jnp
adc
jge
adc
in
pushf
push
je
xchg
rcr
ins
xchg
push
jge
adc
(bad)
xchg
fcomip
retf
adc
fisttp
push
jnp
sbb
test
mov
in
push
pop
std
ins
xchg
sar
lahf
push
inc
lahf
fistp
xchg
(bad)
clc
in
xchg
aam
dec
xchg
shl
lds
pop
js
adc
sar
xchg
pop
jnp
adc
jg
pop
pop
std
int
neg
leave
mov
(bad)
ins
pop
pop
js
mov
idiv
es
pop
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
fcom
pop
jge
ss
inc
adc
(bad)
mov
js
xchg
push
jbe
nop
sar
into
xchg
shl
retf
sbb
jge
mov
jbe
pop
pop
jg
ss
jge
xchg
ret
popf
aam
enter
enter
retf
adc
shl
retf
adc
pushf
int
lds
jbe
inc
pop
inc
jnp
mov
inc
jnp
mov
jnp
xchg
push
jbe
adc
pop
hlt
dec
xchg
push
pop
into
mov
jge
xchg
sar
push
push
jge
xchg
push
rep
pop
shl
xchg
pop
jbe
xchg
rcr
lds
pop
jge
xchg
aam
dec
xchg
sar
xchg
xlat
cmc
dec
pop
rcr
dec
push
jbe
enter
dec
xchg
(bad)
jle
adc
(bad)
mov
inc
inc
jge
mov
test
inc
js
xchg
push
jle
mov
clc
into
mov
js
xchg
push
js
mov
jle
sbb
js
add
into
pop
shl
inc
or
lds
push
js
pop
idiv
dec
adc
inc
rcr
popf
push
std
jmp
aam
dec
xchg
inc
hlt
dec
adc
div
dec
xchg
sar
dec
xchg
(bad)
cmc
in
push
rcr
xchg
push
repz
shl
into
mov
test
test
neg
aam
dec
sbb
std
retf
ss
enter
in
mov
cli
pop
pop
xor
jmp
(bad)
push
push
add
pop
shl
dec
out
pop
add
imul
jmp
es
cld
es
cld
es
cld
es
cld
es
dec
xchg
(bad)
idiv
ror
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
cmps
in
dec
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
dec
xchg
(bad)
idiv
ror
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
dec
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
(bad)
lahf
inc
clc
lds
out
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
dec
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
(bad)
lahf
inc
clc
lds
out
cld
es
cld
es
cld
es
cld
es
cld
es
cld
cmps
in
dec
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
(bad)
lahf
inc
clc
lds
out
cld
es
cld
es
cld
es
cld
es
cld
es
cld
cmps
out
dec
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
(bad)
lahf
inc
clc
lds
out
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
(bad)
lahf
inc
clc
lds
out
cld
es
cld
es
cld
es
cld
es
cld
es
fild
shl
ins
test
js
push
pop
jle
pop
push
cld
inc
pop
inc
jnp
mov
jnp
lahf
(bad)
in
xchg
ret
sbb
clc
inc
adc
outs
into
lahf
pop
test
js
add
inc
xchg
aam
ins
pop
pop
jp
xchg
sar
xchg
xlat
cmc
push
adc
int3
sbb
aam
inc
push
pop
jge
adc
(bad)
adc
cmc
ins
pop
pop
jbe
adc
enter
arpl
(bad)
hlt
(bad)
xchg
loopne
dec
xchg
aam
ins
sbb
sar
pop
push
jge
xchg
(bad)
hlt
retf
ss
in
test
inc
nop
push
inc
aam
retf
adc
cld
lds
push
jge
mov
jbe
xchg
push
jae
xor
dec
sbb
jecxz
adc
dec
pop
jbe
lds
shl
lahf
(bad)
cmc
push
add
jl
fisttp
xor
ss
dec
pop
inc
js
adc
jg
pop
jbe
(bad)
mov
jge
xchg
dec
jae
adc
aam
dec
xchg
fdiv
ds
jmp
dec
mov
jle
mov
clc
ins
mov
jne
push
jbe
inc
xchg
pop
jnp
xchg
push
jbe
adc
jg
xchg
xlat
jnp
xchg
push
jns
mov
dec
(bad)
aas
inc
jnp
ss
jnp
mov
jbe
dec
adc
jbe
(bad)
mov
jge
pushf
dec
clc
fstp
rcr
xchg
push
jbe
xor
enter
enter
retf
ss
inc
pushf
lock
pop
fdivp
dec
adc
outs
dec
adc
push
dec
adc
fsubr
mov
dec
(bad)
mov
jne
or
retf
jns
pushf
dec
std
into
adc
jmp
push
retf
lahf
inc
std
ins
lahf
push
jge
sbb
fisttp
aam
in
pop
jbe
inc
xchg
shl
xchg
rcr
ss
jge
adc
clc
dec
sbb
(bad)
ins
adc
jne
adc
pop
ins
paddusb
push
(bad)
cli
and
stc
inc
adc
enter
inc
adc
outs
int3
xchg
(bad)
in
xchg
xchg
shl
ins
xchg
js
xor
cmp
push
retf
adc
dec
sbb
call
aam
ins
(bad)
(bad)
jge
xchg
push
jne
adc
outs
int3
xchg
(bad)
into
fwait
aam
enter
dec
adc
inc
and
fst
jecxz
leave
mov
dec
lahf
iret
cmc
dec
pop
mul
shl
neg
cmc
fild
jge
xor
shl
mov
xlat
retf
adc
mov
clc
into
xchg
(bad)
hlt
ins
mov
jge
pop
mul
into
lahf
aam
pop
(bad)
ficomp
mov
dec
enter
dec
xchg
push
jg
pop
push
jl
xchg
shl
ins
xchg
js
ss
imul
adc
retf
ss
jge
xchg
iret
jne
mov
jne
pop
inc
sti
cli
mov
repz
sbb
out
into
ss
cli
jmp
jge
xchg
push
jne
xchg
aam
dec
adc
or
(bad)
mov
dec
inc
xchg
shl
pop
jnp
adc
dec
adc
ins
xchg
into
mov
cld
fbstp
imul
retf
adc
clc
dec
sbb
out
jmp
jae
lea
xchg
push
jbe
xchg
push
jge
adc
fist
pop
ins
paddusb
push
(bad)
ins
push
sar
add
jge
xchg
(bad)
not
sbb
(bad)
pop
lock
xor
xchg
shl
pop
jnp
adc
in
adc
into
nop
aam
jmp
jns
adc
into
adc
(bad)
pop
push
clc
jmp
outs
pop
adc
pop
retf
jge
adc
pop
ins
xchg
jge
pushf
push
jne
sbb
pop
int3
ss
ins
test
jne
sbb
jne
push
lock
pop
sar
ins
pop
pop
jg
lahf
aam
stc
mov
dec
fdiv
dec
std
dec
adc
in
mov
in
add
fdivr
adc
pop
jbe
retf
dec
inc
jg
adc
pop
retf
jge
mov
jge
inc
adc
outs
into
ss
cld
inc
xchg
iret
jne
mov
jne
xchg
dec
jae
mov
jae
and
fmul
iret
push
xchg
inc
jbe
add
in
xchg
jle
xchg
shl
ins
xchg
js
xor
aas
not
dec
adc
dec
adc
enter
iret
adc
(bad)
pop
jbe
inc
mov
jecxz
int3
push
mul
pop
xchg
aam
pop
adc
pop
dec
adc
or
fisttp
rcr
pop
idiv
into
xchg
(bad)
cmc
retf
ss
in
jg
retf
lahf
iret
sti
enter
in
adc
enter
inc
xchg
iret
jne
mov
arpl
mov
dec
adc
jg
ss
in
jg
retf
lahf
iret
sti
enter
in
adc
enter
inc
xchg
iret
jne
adc
dec
xchg
sar
ds
aam
not
loopne
dec
xchg
fstp
(bad)
lahf
sar
lahf
(bad)
std
into
sbb
clc
dec
xchg
jno
inc
push
shl
xor
and
jns
arpl
push
push
js
adc
pop
dec
adc
or
fucomip
mov
fucomip
pop
jg
inc
xchg
push
imul
jns
adc
neg
fcomp
pop
sar
in
add
pop
dec
xchg
sar
adc
les
fdiv
nop
jno
int3
nop
sar
inc
pop
push
jnp
xchg
push
jnp
pop
pop
jns
mov
loopne
fist
aam
into
xchg
shl
int
shl
inc
push
jbe
retf
adc
adc
jmp
inc
pop
inc
jnp
mov
jnp
mov
in
mov
retf
inc
jnp
xchg
(bad)
aad
aam
pop
adc
pop
retf
adc
std
in
jbe
fdiv
cli
in
dec
adc
into
ss
jge
xchg
inc
jnp
es
clc
dec
xchg
(bad)
neg
or
pop
pop
xchg
rcr
push
jg
add
test
push
stc
retf
ss
js
daa
repnz
sbb
js
adc
inc
xchg
fdiv
mov
jb
inc
adc
jne
mov
jns
lea
dec
xchg
(bad)
clc
into
lahf
fdiv
gs
fcmovnb
pushf
addr16
push
xchg
dec
cmc
in
mov
jle
(bad)
jg
inc
sbb
push
js
adc
fs
fisttp
addr16
xchg
fbstp
fistp
xchg
jb
enter
in
mov
jl
push
jl
into
pop
sar
in
xor
(bad)
jle
dec
xchg
push
test
pop
clc
gs
pop
retf
xchg
addr16
fs
fcmovne
lahf
out
in
pop
fdivr
mov
jae
mov
retf
xchg
shl
in
xor
or
push
jle
ss
sti
push
adc
shl
jg
daa
jb
retf
pop
out
retf
mov
dec
pop
js
xchg
push
js
and
enter
enter
push
add
enter
enter
retf
cmc
dec
mov
arpl
test
leave
mov
test
push
clc
inc
adc
adc
enter
enter
inc
nop
jo
int3
sahf
jo
jns
jno
enter
enter
push
add
int3
push
jbe
enter
enter
dec
nop
(bad)
cmc
imul
stc
cld
and
dec
lahf
push
stc
in
xchg
dec
xchg
shl
ins
xchg
js
adc
adc
fisttp
aam
in
adc
xchg
sar
retf
xchg
(bad)
dec
adc
inc
and
data16
fs
(bad)
fistp
icebp
pop
inc
popf
loopne
int
fstp
nop
push
test
cmc
imul
jbe
xchg
push
dec
retf
push
sar
dec
pop
xlat
cmc
(bad)
pushf
sar
dec
lahf
push
js
and
jns
bound
pop
arpl
ficom
(bad)
pushf
push
js
adc
retf
jns
pop
inc
jnp
mov
jnp
mov
in
pop
mul
dec
xchg
push
(bad)
stc
cmp
in
cli
push
in
jle
in
or
pop
retf
adc
xor
xor
int3
adc
dec
mov
arpl
enter
inc
adc
int3
nop
sar
dec
adc
enter
fcom
push
js
xchg
shl
adc
xchg
(bad)
jns
mov
(bad)
push
pop
xchg
cli
pop
into
lahf
fcomip
inc
adc
outs
dec
adc
out
mov
std
iret
xchg
inc
js
(bad)
push
jge
ss
js
xchg
(bad)
std
retf
adc
cmc
enter
enter
push
add
in
loopne
loopne
jg
lds
inc
jmp
jbe
sbb
jge
xchg
aam
retf
pushf
push
js
xchg
js
pop
sar
cli
and
push
shl
sbb
dec
xchg
push
jl
adc
adc
fmul
pushf
shl
in
mov
jbe
mov
js
nop
inc
jg
adc
pop
ins
add
jne
lahf
push
jmp
enter
enter
push
add
push
xchg
loopne
lds
pop
jge
adc
js
adc
pusha
cmp
jle
dec
xchg
(bad)
jbe
sbb
(bad)
sbb
std
retf
pop
imul
pop
pop
(bad)
lds
push
jae
xchg
outs
int3
xchg
(bad)
clc
push
mov
ret
add
inc
push
push
jbe
xchg
push
clc
enter
enter
push
add
ins
add
(bad)
lahf
sar
mov
jg
adc
jmp
js
and
std
int3
pop
arpl
into
mov
sti
shl
cmc
pop
xchg
(bad)
retf
push
fdiv
enter
retf
mov
jnp
pop
dec
clc
shl
jge
adc
inc
xchg
pop
mul
not
push
adc
fisttp
xlat
cmc
push
adc
pop
dec
mov
cld
in
not
cld
pop
jmp
fdivr
lahf
inc
jge
nop
shl
dec
xchg
shl
pop
pop
rcr
push
push
(bad)
inc
mov
js
adc
into
mov
jbe
ss
aam
inc
push
out
(bad)
jecxz
xchg
inc
jg
and
push
shl
adc
inc
push
push
jbe
xchg
push
clc
retf
cmc
dec
mov
arpl
push
push
jbe
xchg
push
clc
enter
enter
push
add
ins
or
pop
jg
mov
cmc
(bad)
lahf
inc
clc
inc
mov
arpl
xchg
(bad)
pop
into
popf
fdivr
into
mov
jbe
add
xchg
push
sti
dec
sbb
clc
ins
add
lds
jmp
ins
push
rcr
mov
(bad)
(bad)
and
ffreep
mov
hlt
lds
inc
push
jg
adc
enter
pop
adc
inc
push
push
jbe
xchg
push
clc
retf
cmc
dec
mov
arpl
push
push
jbe
xchg
push
clc
dec
pop
imul
dec
push
push
jge
mov
jge
sbb
out
enter
enter
dec
pop
imul
dec
push
push
jge
mov
jge
dec
xchg
shl
pop
idiv
dec
adc
out
adc
clc
in
or
jbe
xchg
aam
retf
adc
ins
mov
pop
fnstcw
int
cli
and
ffreep
push
shl
adc
inc
push
push
jbe
xchg
push
clc
retf
cmc
dec
mov
clc
cli
mov
inc
jne
xchg
push
clc
into
mov
cld
inc
pop
inc
jnp
mov
jnp
mov
in
pushf
lock
pop
xchg
ficomp
adc
adc
fild
shl
mov
cld
push
dec
adc
outs
retf
mov
jnp
adc
xchg
(bad)
fucomip
adc
std
jmp
sti
ins
sbb
(bad)
lahf
sar
mov
jg
adc
out
ss
std
push
ds
push
cli
mov
pop
hlt
inc
xchg
push
jne
xchg
push
clc
into
mov
cld
dec
mov
arpl
xchg
shl
ins
test
js
lahf
sar
jmp
js
adc
enter
enter
push
add
ins
add
(bad)
lahf
sar
mov
jg
xchg
dec
cmc
cli
mov
call
sbb
inc
push
jge
pop
fistp
adc
pop
inc
xchg
push
jne
and
jne
sbb
jnp
xor
rol
push
jnp
xchg
push
jnp
lahf
sar
imul
dec
retf
push
sar
inc
pop
push
jnp
xchg
push
jnp
lahf
sar
imul
dec
push
cmp
fld
dec
in
pop
xchg
loopne
inc
adc
jne
(bad)
(bad)
jns
or
push
enter
dec
xchg
sar
inc
mov
arpl
xchg
std
pop
jmp
fdivr
or
inc
xchg
push
jne
and
cmc
pusha
mov
imul
inc
push
push
jge
pandn
pushf
push
jnp
pushf
lock
pop
adc
fild
shl
mov
jns
or
aas
jmp
and
aam
xchg
dec
jne
mov
jae
lahf
(bad)
stc
cli
mov
loopne
push
adc
jns
xchg
push
dec
les
fdiv
popf
jno
dec
xchg
fstp
inc
adc
jns
xchg
rcr
and
ds
(bad)
ss
inc
push
dec
clc
fcomp
aam
retf
adc
dec
push
fdiv
ins
push
rcr
xchg
pop
int3
xchg
(bad)
clc
jns
push
dec
dec
lahf
(bad)
hlt
retf
adc
push
std
in
arpl
jmp
push
inc
adc
clc
(bad)
xor
push
push
lock
dec
sbb
inc
xor
imul
outs
jns
jno
pusha
cmp
jge
push
(bad)
aad
and
push
(bad)
sbb
jnp
xor
rol
mov
hlt
inc
pop
push
jnp
xchg
push
jnp
mov
dec
push
clc
cli
mov
dec
cmc
dec
push
pop
sti
shl
jbe
dec
pop
dec
jg
xchg
push
jne
adc
pop
dec
adc
or
(bad)
mov
dec
adc
js
xor
fbld
std
push
addr16
aad
mov
loopne
inc
push
(bad)
ffreep
ss
jge
xchg
fbstp
mov
jne
pop
pop
jg
xchg
push
jne
pop
fistp
xchg
push
dec
les
fdiv
popf
jno
inc
pushf
fstp
inc
xchg
(bad)
jge
call
dec
xchg
loopne
dec
pop
shl
inc
sbb
out
inc
xchg
(bad)
jge
call
cli
mov
int3
sti
dec
adc
in
adc
clc
into
mov
test
cmc
into
mov
clc
pop
xchg
lock
dec
adc
or
fistp
inc
dec
ins
or
push
jbe
push
(bad)
test
push
push
lock
dec
sbb
inc
ss
jge
and
les
shl
sahf
pop
repz
push
jge
mov
(bad)
stc
dec
popf
shl
in
xchg
jbe
ss
std
int
dec
jne
xchg
lock
dec
adc
or
(bad)
pop
enter
retf
sbb
jge
and
(bad)
(bad)
sbb
jnp
xor
rol
mov
hlt
inc
adc
into
adc
stc
in
(bad)
dec
mov
jecxz
int3
lahf
(bad)
stc
dec
xchg
aam
(bad)
ss
inc
xchg
shl
pop
jg
add
cli
mov
loopne
pop
pushf
aam
lds
(bad)
int
dec
jne
push
cmc
fild
pop
jge
mov
(bad)
pop
retf
jge
mov
jg
add
jge
sbb
(bad)
pop
fnstcw
rcr
or
jge
enter
retf
sbb
jge
and
(bad)
(bad)
sbb
jnp
xor
rol
mov
hlt
inc
adc
into
adc
stc
in
(bad)
dec
mov
arpl
adc
xchg
js
xchg
shl
ins
xchg
js
xor
adc
dec
push
fdiv
push
pushf
push
jnp
xchg
lock
jns
jb
int
(bad)
test
push
sbb
pop
lds
inc
jge
nop
shl
dec
xchg
shl
push
adc
pop
dec
xchg
pop
jle
add
pop
inc
sahf
push
clc
in
mov
jg
int
dec
std
retf
mov
js
adc
push
pop
out
call
(bad)
adc
pop
adc
(bad)
push
fdiv
enter
retf
mov
jnp
mov
jbe
xchg
dec
call
pop
pop
int3
lahf
sar
ins
push
aam
pop
mov
into
fistp
std
fisttp
push
jg
pushf
loopne
popa
xor
ja
lahf
jno
dec
adc
pushf
sar
dec
xchg
rcr
jns
push
dec
dec
pop
arpl
adc
adc
dec
xchg
push
jle
adc
(bad)
in
pop
jbe
in
xchg
xchg
shl
in
adc
dec
xchg
push
jle
adc
jmp
loopne
ficomp
jge
mov
xchg
push
js
lahf
push
jge
pop
mul
dec
adc
into
xor
clc
fnsave
jbe
xlat
ss
push
mov
jecxz
imul
rol
pushf
sar
dec
xchg
push
inc
push
jg
adc
jns
jno
inc
adc
out
ss
std
inc
call
dec
lahf
push
neg
mov
fistp
inc
dec
in
std
push
dec
nop
(bad)
sti
in
xchg
sar
xchg
aam
int3
adc
dec
xchg
(bad)
jbe
mov
test
out
xor
fnsave
jbe
fnstenv
jg
dec
xchg
shl
ins
xchg
js
cmovl
sbb
push
js
adc
inc
push
jbe
int3
xchg
sar
in
aas
push
jge
and
ds
aad
std
fist
(bad)
out
test
ins
push
add
imul
lock
(bad)
out
mov
ins
fnstenv
jbe
(bad)
sbb
jnp
xor
ror
xlat
cmc
(bad)
pushf
sar
dec
lahf
push
js
and
retf
adc
shr
nop
push
test
cmc
imul
jbe
lea
(bad)
mov
jbe
lahf
inc
clc
fist
fcomp
mov
jg
pop
inc
jnp
mov
jnp
mov
arpl
in
jl
retf
xchg
dec
jne
mov
jg
pop
into
stc
ins
(bad)
aam
lds
sti
lds
push
jge
and
fisttp
pop
fdiv
dec
imul
inc
dec
(bad)
xor
fmul
jbe
aad
dec
(bad)
add
call
in
mul
xchg
loopne
into
adc
in
and
(bad)
sbb
jnp
xor
inc
popf
jno
enter
retf
jge
xchg
aam
stc
mov
(bad)
aad
mov
jle
stc
pop
arpl
mov
pop
test
jmp
fimul
shl
xchg
dec
pop
or
jmp
or
outs
push
mov
jecxz
gs
jo
jns
jle
fiadd
ins
ins
xchg
pop
add
fmul
jbe
fisttp
retf
int3
jmp
add
pop
fadd
shr
and
in
jecxz
loopne
lock
gs
jl
push
pop
arpl
dec
dec
ins
cmp
(bad)
iret
gs
mov
call
xor
data16
push
pusha
mov
jle
ins
(bad)
(bad)
push
pop
or
loopne
into
lahf
shl
inc
call
dec
xchg
(bad)
jns
and
cmc
dec
pop
arpl
inc
xchg
push
jg
out
js
xchg
jbe
xchg
shl
ins
xchg
js
adc
push
rcr
inc
adc
in
lahf
push
jbe
lahf
push
test
js
arpl
imul
xchg
(bad)
std
fcomp
push
dec
jmp
pop
je
adc
adc
lds
push
dec
sar
pop
(bad)
jle
pushf
pop
js
adc
xchg
(bad)
push
xchg
loopne
int3
pushf
pop
cli
retf
mov
js
ss
(bad)
(bad)
out
stc
packsswb
xchg
push
cld
pop
xchg
(bad)
pop
dec
adc
push
rcr
enter
jns
push
dec
in
(bad)
xlat
dec
nop
ret
imul
xchg
jbe
shl
dec
std
ins
sqrtps
xchg
ret
fisttp
push
jg
popf
loopne
inc
xchg
fstp
xchg
push
jnp
pop
push
jnp
mov
jnp
mov
inc
cmc
dec
adc
ins
stc
xchg
pop
dec
les
fdiv
popf
jno
dec
pushf
fstp
xchg
push
jg
xor
dec
mov
clc
addr16
cli
fild
js
add
pop
int
sar
jmp
outs
cli
mov
jle
int3
adc
dec
mov
jecxz
retf
sbb
in
enter
dec
and
stc
inc
sbb
dec
xor
cmc
dec
lahf
inc
sti
cli
mov
shl
sbb
pop
je
sbb
jae
xchg
push
fxch
mov
imul
push
jmp
aas
arpl
inc
adc
data16
pop
push
inc
jbe
pop
adc
pop
enter
inc
and
enter
enter
dec
pop
imul
(bad)
lahf
aam
cli
mov
std
push
dec
adc
ins
push
push
jg
xor
retf
pop
mul
inc
xchg
sar
pushf
loopne
popa
xor
ja
popf
jno
dec
pop
icebp
std
(bad)
lahf
aam
imul
dec
inc
adc
ins
dec
pushf
(bad)
in
or
jge
xchg
aam
retf
jg
sbb
in
dec
call
int3
xchg
fcomip
push
ds
dec
sbb
out
inc
and
retf
pop
jecxz
inc
xchg
sar
add
fbld
jbe
fidivr
lock
push
jg
xchg
loopne
dec
adc
enter
jmp
sti
dec
xchg
shl
enter
enter
push
add
fs
(bad)
push
into
lahf
shl
into
adc
aad
(bad)
into
sbb
std
push
adc
pop
retf
lahf
xlat
cmc
jmp
outs
dec
xchg
inc
jg
and
mov
hlt
(bad)
pop
push
jnp
adc
clc
enter
dec
xchg
xlat
fdivr
mov
sar
sbb
dec
xlat
test
imul
push
jle
mov
inc
jg
ss
jg
push
inc
js
adc
dec
and
sbb
out
enter
push
add
dec
pop
imul
into
xchg
(bad)
cmc
(bad)
ss
lds
jne
xchg
ficomp
xor
(bad)
enter
dec
and
dec
adc
gs
adc
jmp
enter
enter
push
add
lds
jbe
retf
xchg
(bad)
fisttp
aam
int
pop
std
dec
xchg
push
js
or
fistp
inc
dec
dec
sbb
sar
(bad)
mov
clc
in
push
pop
js
xchg
fdiv
into
mov
test
jnp
mov
jnp
pushf
sar
pop
sar
ins
adc
(bad)
pushf
sar
cli
mov
inc
jne
xchg
ficomp
xor
(bad)
enter
int
dec
jne
mov
jbe
into
mov
stc
in
or
enter
jmp
data16
mov
(bad)
iret
enter
inc
and
sbb
jnp
xor
inc
popf
jno
int3
sbb
shl
adc
fmul
push
pop
cli
mov
repnz
in
repnz
mov
jl
enter
enter
dec
lahf
push
dec
loopne
dec
adc
pop
push
sti
dec
xchg
(bad)
jns
push
dec
dec
lahf
(bad)
hlt
retf
adc
push
std
in
jbe
jmp
push
inc
adc
clc
(bad)
xor
push
xchg
loopne
dec
sbb
inc
pop
jge
ss
shl
int
out
jg
dec
xchg
inc
jg
and
mov
jge
data16
out
std
push
dec
xchg
loopne
dec
pop
shl
dec
adc
outs
dec
adc
pop
push
sti
dec
xchg
(bad)
jns
push
dec
inc
push
arpl
dec
adc
push
outs
inc
push
arpl
dec
adc
push
jle
mov
jecxz
loope
push
jge
mov
jl
loopne
jge
cli
and
xlat
dec
xchg
inc
stc
ins
pop
rcl
xchg
sar
sahf
xlat
jne
lahf
pop
jg
xchg
push
cld
dec
adc
fdivr
push
dec
inc
adc
fisttp
retf
push
dec
(bad)
dec
xchg
push
fdivr
jno
loopne
lock
push
xor
mov
cld
pop
jmp
aad
mov
out
in
xchg
js
mov
repz
js
adc
imul
js
xchg
pop
repz
mov
jns
mov
arpl
int3
mov
std
dec
xchg
dec
jnp
cmp
imul
addr16
dec
adc
inc
xchg
sar
cmp
(bad)
aas
(bad)
pop
out
cli
pop
cli
mov
cli
aad
fwait
shl
aam
ins
(bad)
(bad)
jge
sbb
push
js
adc
cli
mov
dec
dec
adc
jbe
dec
xchg
push
jbe
xchg
loopne
inc
xchg
fdivr
sbb
test
jbe
adc
call
mov
aad
xor
ds
push
mov
shl
jge
fs
in
loopne
pop
adc
pop
shl
test
jne
mov
jne
pushf
int3
clc
in
jbe
fstp
(bad)
js
mov
jbe
sbb
push
pop
xchg
loopne
dec
push
push
jg
aas
lock
out
iret
fistp
jp
dec
adc
fst
rcr
int
fdiv
dec
xchg
loopne
int
sar
int
fdiv
dec
adc
pop
nop
loopne
retf
jnp
push
jbe
lds
js
adc
dec
sbb
jle
xor
mov
jecxz
fistp
push
pop
loope
push
jge
mov
jle
in
jl
cli
mov
loopne
into
xchg
(bad)
std
dec
xchg
shl
imul
stc
cld
and
int3
nop
push
dec
sbb
out
enter
stc
nop
pop
dec
int3
nop
push
inc
push
jnp
lahf
push
jnp
adc
cli
mov
int3
test
aam
enter
(bad)
lahf
loopne
into
xchg
(bad)
std
dec
xchg
shl
imul
stc
pop
xchg
loopne
push
pop
fsubr
xchg
loopne
inc
pop
fdivr
adc
cli
mov
inc
js
adc
test
pop
dec
push
js
adc
sti
inc
xchg
fidiv
pop
push
test
pop
sti
dec
adc
cli
mov
inc
clc
int3
adc
idiv
mov
pop
hlt
enter
int3
adc
imul
xchg
aam
cli
mov
loopne
inc
push
pop
data16
mov
pop
hlt
inc
pop
push
jnp
push
pop
dec
sbb
clc
cli
mov
inc
dec
sbb
imul
fild
sar
dec
pop
arpl
retf
sbb
jnp
xchg
push
(bad)
imul
jbe
mov
loopne
into
xchg
cli
and
mov
hlt
dec
adc
dec
xor
cmc
dec
mov
arpl
pushf
shl
dec
mov
jecxz
dec
xchg
pop
cmc
dec
xchg
rcr
cli
mov
inc
clc
push
and
js
sbb
jno
retf
pop
shl
adc
cli
mov
les
xchg
mov
arpl
pop
pop
std
enter
dec
adc
cli
mov
inc
clc
dec
xchg
inc
jg
xchg
loopne
dec
xchg
sar
imul
jge
mov
loopne
pop
xchg
sar
mov
push
clc
inc
adc
dec
jno
cli
mov
data16
dec
pop
shr
jns
push
dec
retf
xchg
push
jnp
mov
test
clc
jns
arpl
xchg
dec
mov
arpl
int3
adc
aam
jns
push
dec
retf
mov
jnp
xchg
inc
jg
adc
(bad)
mov
jg
inc
xchg
push
neg
popf
(bad)
jmp
js
adc
stc
stc
pop
pop
dec
dec
adc
retf
xor
shl
imul
in
jle
stc
push
jg
dec
adc
js
aas
sti
pop
call
xor
cmp
loopne
retf
pop
fdivp
dec
adc
out
dec
xchg
sar
imul
jge
mov
loopne
aad
sar
adc
fdivr
push
dec
imul
jnp
pop
shl
mov
pop
jne
xchg
jbe
xchg
push
clc
lds
fistp
mov
clc
cli
mov
inc
call
(bad)
in
sbb
icebp
stc
inc
xchg
aam
dec
adc
cli
mov
ins
inc
pop
pop
std
enter
into
call
dec
xchg
pop
dec
rcr
jns
push
dec
inc
xchg
fdiv
adc
jne
adc
ja
xchg
pop
imul
sar
mov
loopne
pop
xchg
sar
jns
pop
dec
dec
nop
push
jnp
xchg
shl
mov
loopne
inc
adc
mov
push
jnp
xchg
pop
sti
retf
es
(bad)
sbb
jnp
pushf
(bad)
dec
xchg
loopne
rcl
cmc
imul
fdivr
mov
ret
xchg
loopne
imul
fdivr
mov
inc
jnp
xchg
(bad)
idiv
mov
push
jnp
xchg
(bad)
imul
sar
xchg
rcr
cli
mov
inc
jnp
xchg
fucompp
inc
lahf
push
clc
dec
xchg
loopne
rcl
cmc
dec
xchg
push
(bad)
imul
stc
push
pushf
loopne
leave
xchg
pop
xchg
shl
cli
mov
pop
cmc
enter
enter
retf
xor
cli
mov
pop
jne
xchg
jbe
xchg
pop
cmc
enter
enter
retf
xor
cli
mov
loopne
push
xchg
aam
in
add
cli
mov
jg
retf
lahf
iret
sti
enter
in
adc
enter
inc
xchg
iret
jne
mov
pop
hlt
enter
dec
adc
stc
dec
adc
fmul
jno
jns
arpl
adc
(bad)
jns
push
dec
imul
dec
rcr
pop
xchg
ror
xchg
fstp
sbb
out
enter
enter
stc
sbb
xchg
push
je
pop
inc
cmc
dec
xchg
shl
lds
sar
mov
js
and
cmc
stc
pop
arpl
mov
jne
adc
pop
nop
loopne
retf
jnp
adc
int
pop
dec
sbb
(bad)
imul
jb
mov
into
sti
ins
mov
push
in
aas
std
push
in
jle
pusha
cmp
loopne
enter
imul
pop
pop
pushf
loopne
enter
enter
retf
xor
cli
and
repnz
pushf
push
js
xchg
rcl
cmc
dec
xchg
shl
imul
pop
cli
mov
data16
retf
adc
pop
dec
imul
jnp
mov
jl
mov
clc
cli
mov
loopne
dec
adc
jg
pop
jbe
int3
adc
idiv
mov
xlat
jne
sbb
std
inc
xchg
fbstp
xor
dec
mov
arpl
loope
sar
push
push
jge
adc
pop
(bad)
jle
xchg
(bad)
std
(bad)
lahf
pop
jbe
xchg
(bad)
stc
dec
adc
aam
loopne
into
mov
jbe
ins
cmp
push
loopne
jle
out
jg
push
and
out
fs
ins
or
shl
sbb
out
mov
arpl
shl
std
push
or
loopne
mov
cmc
cli
mov
inc
jnp
mov
jnp
ss
cmc
dec
and
jne
sbb
aam
ins
mov
cld
push
dec
xchg
sar
sqrtps
adc
idiv
pop
dec
dec
xchg
aam
dec
xchg
fdiv
pop
mul
in
jbe
pop
sbb
fild
fbstp
and
into
sbb
cld
inc
pop
push
jnp
mov
jnp
mov
clc
cli
mov
loopne
pop
xchg
sar
sbb
pop
ficomp
fmul
xchg
inc
jge
xchg
push
jne
xchg
pop
(bad)
lahf
pop
jbe
xchg
(bad)
stc
dec
xchg
loopne
dec
xchg
sar
adc
fdivr
push
dec
inc
pop
jecxz
inc
xchg
push
jg
mov
jecxz
inc
xchg
push
jg
mov
cmc
inc
and
stc
add
shl
inc
mov
jecxz
dec
lahf
aam
dec
adc
fmul
fdivr
mov
inc
jg
pop
(bad)
stc
stc
xchg
push
dec
into
xchg
(bad)
jbe
adc
into
sbb
clc
cli
mov
inc
clc
iret
sbb
js
xchg
loopne
dec
xchg
sar
pop
aad
imul
dec
dec
pop
jecxz
dec
xchg
(bad)
jns
adc
and
dec
push
push
clc
enter
enter
dec
xchg
(bad)
jns
push
dec
push
adc
dec
loope
push
je
xchg
inc
jg
adc
pop
jbe
dec
adc
push
test
ins
dec
adc
push
test
ins
dec
adc
push
test
jne
adc
inc
pop
jbe
dec
adc
push
jbe
xchg
fstp
xchg
(bad)
stc
ficomp
aam
int3
xchg
xlat
sti
inc
adc
pop
shl
inc
adc
int3
nop
sar
inc
pop
jbe
dec
adc
push
imul
jne
xchg
fistp
adc
sbb
out
enter
lds
jbe
inc
xchg
(bad)
fild
aad
jmp
test
jbe
into
mov
clc
inc
adc
(bad)
mov
js
pushf
pop
repz
dec
in
pushf
push
je
xchg
rcr
mov
fisttp
push
jnp
mov
icebp
out
lahf
xlat
sti
dec
xchg
aam
dec
adc
adc
pop
clc
ins
xchg
(bad)
js
push
pop
jle
ss
cld
ins
xchg
shl
or
(bad)
mov
call
xchg
(bad)
clc
in
pushf
aam
(bad)
xchg
rcr
xchg
aam
dec
pop
aam
push
adc
retf
ss
inc
call
in
adc
pushf
push
inc
xchg
aam
dec
xchg
aam
dec
lahf
(bad)
test
(bad)
int3
xchg
xlat
sti
ins
xchg
push
jge
adc
fist
jbe
inc
adc
js
adc
pop
dec
xchg
aam
dec
pop
fcomip
retf
adc
js
mov
clc
int
pop
jg
adc
cli
mov
loopne
dec
sbb
repz
pop
div
dec
lahf
xlat
sti
ins
xchg
aam
int3
push
div
ins
popf
aam
dec
xchg
(bad)
jns
pop
(bad)
dec
sbb
repz
adc
inc
adc
pop
dec
adc
push
jbe
ss
(bad)
ss
std
inc
pop
push
jnp
mov
jnp
nop
pop
jg
xchg
aam
dec
xchg
sar
xchg
fstp
xchg
aam
inc
pushf
fbstp
xchg
xlat
cmc
in
pop
push
jbe
popf
aam
jns
jnp
retf
ss
jge
xchg
ret
sbb
clc
inc
adc
outs
into
lahf
pop
neg
icebp
(bad)
ss
into
ss
into
lahf
(bad)
jge
mov
idiv
xchg
push
cli
retf
mov
jnp
xchg
sar
nop
jno
(bad)
ss
jge
mov
js
xchg
xlat
stc
outs
(bad)
rcr
lds
jg
add
ins
lea
xchg
(bad)
jns
add
pop
into
pop
shl
dec
sbb
repz
xor
(bad)
nop
push
dec
adc
jg
pop
pop
std
les
js
xchg
push
js
push
push
pop
in
push
sar
popf
push
test
shl
adc
inc
pushf
aam
ins
sbb
lds
pop
inc
xchg
pop
js
ss
dec
pushf
pop
std
jmp
pop
jge
xchg
dec
jg
sbb
repz
push
fistp
xchg
pop
imul
jge
nop
(bad)
cld
in
sahf
ficomp
adc
jge
adc
retf
xchg
fcmovu
enter
int
aam
leave
mov
inc
inc
js
xor
pop
adc
pop
dec
sbb
div
adc
jbe
push
pop
jbe
push
pop
clc
into
ss
jge
pushf
sar
sbb
aam
ins
push
pop
jge
push
sar
xchg
push
jae
adc
clc
(bad)
sbb
jg
xchg
aam
in
pushf
sar
xchg
rcr
xchg
aam
inc
xchg
push
jne
pop
pop
jae
nop
push
dec
xchg
push
jge
xchg
(bad)
cmc
jmp
push
jbe
adc
inc
adc
pop
dec
sbb
repz
adc
pop
dec
adc
push
rcr
into
sbb
stc
dec
adc
jle
xchg
push
cli
retf
mov
jnp
xchg
sar
nop
jno
inc
xor
dec
adc
fst
rcr
leave
mov
(bad)
ins
adc
retf
lahf
shl
jmp
(bad)
inc
xchg
les
fbstp
xchg
les
adc
pop
inc
xchg
aam
lds
pop
jge
nop
pop
jg
lahf
aam
inc
adc
ja
adc
jg
sbb
shl
inc
jae
adc
dec
push
(bad)
int3
adc
in
xor
inc
xchg
push
dec
adc
inc
xchg
pop
jnp
ss
std
into
mov
js
xchg
xlat
stc
retf
xchg
rcr
fcom
(bad)
pop
aam
int3
pushf
shl
pop
xchg
aam
jmp
pop
pop
dec
xchg
(bad)
stc
outs
(bad)
rcr
into
sahf
pop
std
dec
sbb
ins
xor
into
mov
cli
inc
xchg
pop
jne
sbb
repz
adc
pop
dec
adc
push
rcr
pop
push
jg
xchg
aam
dec
pop
aad
in
sbb
jbe
adc
in
xchg
push
je
lahf
aam
imul
dec
enter
pop
xchg
aad
dec
adc
push
rcr
xchg
pop
stc
ins
pop
fcom
adc
push
adc
fsubr
jge
call
dec
adc
jne
adc
ins
xchg
fcomp
pop
shl
dec
adc
jne
sbb
dec
xchg
push
clc
into
adc
jg
pop
pop
std
int
lock
mov
dec
xchg
jne
push
push
aam
into
xchg
pop
stc
imul
pop
stc
add
lds
jbe
int3
xchg
aam
(bad)
mov
jne
pop
inc
jnp
mov
jecxz
dec
sbb
js
pushf
(bad)
enter
enter
in
ss
js
neg
neg
neg
sbb
dec
xchg
push
clc
inc
adc
loopne
enter
enter
inc
xor
dec
xchg
pop
sti
retf
pushf
jno
dec
sbb
js
xchg
xlat
cmc
in
rcr
adc
(bad)
sbb
dec
xchg
push
clc
inc
xor
dec
xchg
pop
sti
into
pushf
jno
dec
adc
dec
jbe
adc
cmc
into
xchg
loopne
enter
enter
inc
xor
dec
xchg
pop
sti
inc
call
inc
pop
push
jnp
lahf
push
jnp
adc
(bad)
sbb
dec
xchg
push
clc
inc
xor
dec
xchg
pop
sti
dec
xchg
jno
push
push
push
pusha
cld
cmps
push
jge
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cld
es
cmp
out
fsub
data16
fsub
push
int
es
lea
xor
cmps
fmul
inc
and
dec
cli
cmps
es
and
dec
cld
cmps
movs
jmp
and
mov
das
nop
in
sar
(bad)
iret
cld
cmps
movs
fsub
data16
outs
ins
cmps
popa
lea
fs
add
mov
fldenv
add
mul
int
mov
out
sbb
or
popa
cmps
(bad)
(bad)
popa
lods
pop
xor
cmps
imul
push
arpl
or
test
jl
movs
outs
cmp
xchg
fsub
es
out
fsub
out
fsub
movs
add
mov
cmps
loope
pusha
push
mov
pusha
loopne
icebp
add
mov
ins
fcomip
add
mov
cwde
(bad)
std
es
dec
aad
data16
jbe
iret
mov
outs
mov
xor
push
fidiv
mov
sbb
mov
es
mov
pop
in
aad
and
iret
cmp
and
movs
outs
sub
in
cmp
iret
jl
mov
sbb
lods
fmul
frstor
icebp
add
cwde
xchg
(bad)
std
es
inc
cmc
add
and
push
xchg
sbb
pop
es
jl
sbb
jge
test
cld
sbb
push
mov
cmps
cdq
dec
mov
push
out
mov
pop
enterw
mov
cmps
fmul
jnp
out
cld
cmps
inc
dec
jbe
and
ror
lds
jl
arpl
in
pushf
ss
jl
out
mov
jge
(bad)
jecxz
dec
mov
xor
jl
out
mov
add
jl
out
cmp
mov
pop
enter
dec
cmp
mov
or
jl
out
mov
fs
cld
es
nop
in
sar
dec
cld
cmps
and
bound
cld
movs
outs
pop
movs
pop
enter
or
es
cld
cmps
xchg
or
data16
outs
pop
movs
fmul
fsub
out
cmp
cmps
pushf
or
out
jne
xchg
mov
and
iret
push
in
int
es
dec
or
iret
pop
fs
cld
sbb
dec
bound
mov
movs
outs
add
push
mov
cmp
mov
outs
cld
cmps
stc
dec
cmp
cld
or
fxch
jp
xchg
lods
jle
data16
jl
movs
outs
jl
out
mov
es
jns
data16
es
jle
data16
jl
movs
outs
jl
out
mov
xor
push
fidiv
mov
sbb
mov
es
mov
pop
in
aad
and
iret
cmp
and
movs
outs
sub
in
cmp
iret
jl
mov
sbb
lods
fmul
frstor
icebp
add
in
leave
cmp
(bad)
iret
cld
cmp
in
lds
dec
in
aad
inc
(bad)
iret
cld
cmps
inc
dec
pop
in
sar
dec
dec
inc
sahf
jnp
inc
nop
sti
scas
inc
xchg
sti
and
jnp
push
in
sar
iret
bound
mov
movs
outs
pop
movs
pop
out
cmps
dec
or
es
pop
in
aad
and
iret
cmp
iret
data16
mov
out
outs
or
in
cmp
iret
data16
jl
movs
outs
xor
pop
add
or
lock
dec
jl
out
leave
cmps
les
stos
mov
ins
js
sbb
xchg
pop
jp
data16
outs
cmp
or
jecxz
cs
outs
haddpd
out
mov
jo
(bad)
jl
out
push
mov
pop
hlt
push
cmp
hlt
mov
es
data16
mov
out
outs
jl
in
add
or
shl
dec
add
or
call
and
xchg
xor
paddb
xor
xchg
and
jo
mov
and
jmp
sbb
and
iret
fsub
daa
scas
mov
sub
jl
out
mov
outs
haddpd
out
mov
jo
(bad)
jl
out
push
mov
pop
hlt
push
cmp
hlt
mov
es
data16
mov
out
outs
jl
in
add
or
shl
dec
add
or
call
and
xchg
xor
paddb
xor
xchg
and
jo
mov
and
jmp
sbb
and
iret
fsub
es
cmp
iret
fsub
cmps
cmp
iret
fsub
cmps
sub
cmp
iret
fsub
es
inc
out
loope
pop
loopne
leave
pop
loop
dec
pop
in
movs
pop
out
cmps
mov
es
pop
in
aad
and
iret
cmp
iret
data16
mov
out
outs
or
in
cmp
iret
data16
jl
movs
outs
xor
pop
add
or
lock
dec
jl
out
leave
cmps
les
stos
mov
ins
js
sbb
xchg
pop
jp
data16
outs
cld
cmps
push
lods
jbe
data16
outs
std
es
push
data16
jl
movs
outs
cld
test
jl
movs
outs
cld
cmps
test
sbb
lahf
dec
push
adc
dec
lods
jl
movs
outs
jl
out
mov
xor
push
fidiv
mov
sbb
mov
es
mov
pop
in
aad
and
iret
cmp
and
movs
outs
sub
in
cmp
iret
jl
mov
sbb
lods
fmul
frstor
icebp
add
in
leave
cmp
(bad)
iret
cld
es
dec
pop
in
lds
lea
in
aad
inc
(bad)
iret
cld
es
pop
in
sar
xor
scas
jnp
inc
mov
sti
and
jnp
daa
pop
adc
jp
sbb
std
cmps
push
and
add
mov
outs
std
es
fsub
data16
outs
cld
test
jl
movs
outs
cld
cmps
test
sbb
pop
push
push
adc
dec
lods
cld
and
outs
cld
push
out
add
dec
xchg
pop
in
aad
and
iret
cmp
iret
data16
mov
out
outs
or
in
cmp
iret
data16
jl
movs
outs
xor
pop
add
or
lock
dec
jl
out
leave
cmps
les
stos
mov
ins
js
sbb
xchg
pop
bound
cld
movs
outs
cmp
inc
or
cmps
es
cmp
iret
fsub
cmps
cmp
iret
fsub
cmps
sub
cmp
iret
fsub
es
inc
out
loope
pop
(bad)
loope
pop
leave
popa
dec
pop
retf
mov
pop
dec
add
mov
xchg
pushf
sub
mov
and
mov
adc
in
aad
inc
(bad)
iret
cld
es
dec
pop
in
sar
fwait
dec
lds
sti
scas
lds
jnp
nop
in
sar
dec
bound
movs
outs
dec
mov
dec
cld
push
sub
pop
pop
fwait
pop
in
leave
cmp
(bad)
iret
cld
cmps
and
in
lds
adc
in
aad
inc
(bad)
iret
bound
movs
outs
popa
mov
loope
pop
ret
pop
les
cmps
mov
xchg
data16
cmps
leave
sub
adc
(bad)
ficomp
mov
outs
ja
popa
lea
and
iret
fsub
es
cmp
iret
fsub
cmps
cmp
iret
fsub
cmps
sub
xchg
lahf
aas
data16
jnp
inc
mov
scas
inc
(bad)
sti
and
jnp
mov
add
iret
add
iret
fsub
cmps
dec
sub
and
xchg
xor
paddb
adc
fldenv
ins
mov
xor
push
fidivr
mov
sbb
mov
es
cdq
fidivr
mov
add
iret
add
out
xor
jl
lods
outs
mov
add
and
mov
es
pop
in
aad
inc
(bad)
iret
bound
arpl
popa
mov
loope
pop
loop
dec
pop
in
movs
pop
out
cmps
xchg
or
es
pop
in
aad
and
iret
cmp
iret
data16
mov
out
outs
or
in
cmp
iret
data16
jl
movs
outs
xor
pop
add
or
lock
dec
jl
out
leave
cmps
les
stos
mov
ins
js
sbb
xchg
pop
ret
(bad)
cld
es
inc
movs
popa
lea
add
iret
shr
mov
xchg
push
cmp
dec
mov
outs
std
cmps
xchg
jbe
data16
outs
std
xchg
out
outs
cld
es
bound
data16
outs
cld
cmps
test
pushf
pop
data16
pop
jb
adc
jbe
cld
cmps
movs
outs
cmp
cmps
mov
inc
data16
fldenv
pop
movs
sbb
cmps
dec
or
test
jl
movs
outs
cmp
or
jecxz
cs
outs
haddpd
out
mov
jo
(bad)
jl
out
jb
xchg
cmp
je
cmp
je
xchg
inc
and
add
mov
xchg
sbb
data16
and
mov
es
pop
in
aad
inc
(bad)
iret
cld
es
pop
in
sar
xor
test
das
(bad)
stos
sti
scas
lds
mov
jl
(bad)
dec
ds
in
add
sbb
cmp
(bad)
iret
cld
cmps
imul
and
mov
es
dec
pop
in
aad
inc
(bad)
iret
cld
es
pop
in
sar
xor
test
das
(bad)
stos
sti
scas
lds
mov
jl
(bad)
dec
ds
in
add
sbb
cmp
(bad)
iret
cld
cmps
add
lds
cld
dec
pop
in
aad
inc
(bad)
iret
cld
es
pop
in
sar
xor
test
das
(bad)
stos
sti
scas
lds
mov
jl
(bad)
dec
ds
in
add
sbb
cmp
(bad)
iret
cld
es
dec
pop
in
lds
lea
in
aad
inc
(bad)
iret
cld
es
pop
in
sar
xor
test
das
(bad)
stos
sti
scas
lds
mov
jl
(bad)
dec
ds
in
add
sbb
cmp
(bad)
iret
cld
cmps
lea
in
lds
jne
pop
in
aad
inc
(bad)
iret
cld
es
pop
in
sar
xor
test
das
(bad)
stos
sti
scas
lds
mov
jl
(bad)
dec
ds
in
add
sbb
jl
(bad)
dec
jp
dec
mov
outs
std
cmps
push
fdiv
data16
outs
std
xchg
jl
movs
outs
cld
test
jl
movs
outs
cld
cmps
test
sbb
pop
push
adc
outs
mov
cmps
movs
outs
pop
in
dec
add
mov
jp
data16
outs
cmp
or
cmps
cmps
cmp
iret
fsub
cmps
sub
xchg
lahf
or
lds
sti
scas
lds
jnp
push
in
sar
dec
(bad)
retf
cld
movs
outs
cmp
inc
or
cmps
es
cmp
iret
fsub
cmps
cmp
iret
fsub
cmps
sub
cmp
iret
fsub
es
inc
out
loope
pop
fucom
leave
pop
fbld
pop
sar
dec
or
addr16
xchg
inc
and
add
xor
jnp
(bad)
jl
out
mov
haddpd
dec
mov
push
haddpd
out
mov
or
jl
out
push
xchg
cmp
je
cmp
je
xchg
inc
sub
daa
sar
dec
ds
lods
add
sbb
jl
(bad)
iret
mov
sub
mov
and
mov
adc
in
aad
inc
(bad)
iret
cld
es
dec
pop
in
sar
fwait
dec
inc
mov
das
inc
mov
scas
inc
test
and
jnp
nop
in
sar
dec
bound
movs
outs
pop
in
dec
add
mov
jp
data16
outs
cld
cmps
push
mov
data16
outs
std
xchg
jl
movs
outs
cmp
add
or
mov
xchg
cmp
je
cmp
je
xchg
inc
and
add
mov
xchg
jnp
iretw
cld
cmps
mov
pop
in
leave
cmp
(bad)
iret
cld
es
dec
pop
in
lds
sbb
pop
in
aad
inc
(bad)
iret
bound
arpl
popa
mov
loope
pop
fbld
pop
sar
mov
addr16
xchg
inc
and
add
mov
xchg
pushf
add
and
mov
es
pop
in
aad
inc
(bad)
iret
bound
arpl
popa
mov
loope
pop
fbld
pop
sar
mov
addr16
xchg
inc
and
add
mov
fnstcw
sbb
mov
iret
push
gs
(bad)
dec
jle
in
jl
movs
outs
push
gs
jge
(bad)
dec
dec
movs
outs
scas
pop
add
xor
fnstcw
sbb
mov
ror
jl
out
mov
in
inc
jmp
data16
fnstcw
sbb
mov
push
mov
jp
xchg
inc
mul
cmp
fnstcw
sbb
mov
push
iret
jl
out
mov
in
inc
leave
pop
out
js
sbb
xchg
je
and
cld
es
cmp
pop
leave
add
mov
add
jl
lods
outs
jl
fmul
fs
cld
es
dec
pusha
pop
and
cmp
and
add
dec
int3
lahf
fadd
cs
ins
arpl
mov
push
push
push
test
mov
xor
outs
pushf
sbb
pop
(bad)
cs
mov
cmp
or
xlat
ret
mov
(bad)
jbe
popf
fadd
cs
addr16
in
fadd
cs
cli
je
lahf
fadd
ret
mov
adc
jl
out
add
add
in
int
and
iret
fsub
and
outs
xchg
or
out
hlt
mov
fmul
(bad)
and
daa
jno
mov
fmul
pop
out
mov
adc
cli
(bad)
and
jmp
sbb
es
iret
jl
out
(bad)
mov
iret
(bad)
in
int
cmp
iret
fsub
inc
cmc
push
fs
sti
add
iret
frstor
cdq
add
cld
es
dec
cmp
iret
add
pusha
push
inc
mov
out
add
out
punpckldq
fsub
push
or
push
fld
dec
mov
in
push
fidiv
mov
pop
dec
mov
fldenv
pushf
jl
push
mov
jg
movs
es
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
bound
jl
movs
outs
xchg
cmps
popa
or
fsub
cmps
dec
data16
jl
movs
outs
and
in
cld
inc
rcr
adc
jp
jl
mov
adc
dec
cld
es
push
pop
data16
mov
inc
data16
pop
lods
outs
mov
xor
paddb
aaa
dec
data16
jl
movs
outs
das
or
pop
cld
inc
rcr
adc
jp
jb
mov
adc
dec
cld
es
push
pop
data16
mov
inc
data16
pop
lods
outs
mov
xor
paddb
popa
dec
data16
jl
movs
outs
sbb
in
enter
jl
das
outs
out
dec
mov
fldenv
data16
mov
out
outs
ss
push
pop
out
mov
xor
paddb
cmp
xchg
retf
jp
cmps
sbb
fsub
push
or
or
(bad)
iret
pop
in
aad
and
iret
push
pop
hlt
xor
(bad)
xor
push
leave
sub
bound
push
push
dec
push
pop
data16
mov
jno
mov
pop
lods
outs
mov
xor
paddb
push
dec
data16
jl
movs
outs
sbb
in
dec
sub
jl
sub
out
dec
mov
fldenv
data16
mov
out
outs
jl
in
add
or
shl
dec
add
or
cmps
cmps
dec
and
and
xchg
xor
paddb
cs
and
xchg
mov
jl
dec
lods
fcomp
nop
in
sar
dec
sti
cmps
movs
aad
cmp
(bad)
fsub
cmps
dec
jl
out
add
or
std
cmps
dec
jl
out
add
or
mov
dec
jl
out
add
or
and
in
les
cld
jbe
adc
in
xchg
fisub
data16
out
outs
mov
add
iret
data16
mov
out
outs
mov
in
cmp
iret
data16
jl
movs
outs
push
in
cmp
iret
data16
mov
out
outs
pop
es
cmp
iret
pushf
jl
push
mov
mov
and
mov
push
sub
in
sbb
add
iret
add
out
es
or
in
(bad)
iret
pushf
push
mov
adc
fsub
push
or
in
(bad)
iret
pushf
push
cmp
sar
add
or
in
(bad)
iret
pushf
push
cmp
cmp
add
or
in
(bad)
iret
pushf
push
cmp
jmp
out
es
or
add
iret
fsub
cmps
dec
data16
jl
movs
outs
jns
in
enter
jl
sub
out
dec
mov
fldenv
(bad)
jb
mov
in
sbb
and
iret
fsub
dec
mov
bound
sbb
imul
aas
lods
outs
dec
inc
xchg
push
pop
mov
mov
jge
mov
aas
lods
outs
add
xchg
es
xchg
dec
push
pop
xor
jnp
mov
pusha
lods
outs
and
out
pop
in
inc
cmp
cmps
sbb
jl
out
fsub
jp
inc
xchg
(bad)
dec
hlt
adc
jp
cmps
in
sub
inc
int3
push
(bad)
iret
cld
ror
test
iret
frstor
cdq
add
dec
movs
(bad)
dec
cld
push
push
outs
mov
xchg
ja
stc
sbb
jl
push
outs
sbb
jl
bound
push
outs
inc
lds
add
pop
xor
out
adc
cmp
jnp
mov
data16
mov
out
outs
ins
es
cmp
iret
data16
mov
out
outs
ds
in
cmp
iret
data16
jl
movs
outs
gs
in
add
or
test
ins
add
xchg
es
xchg
dec
leave
cs
sub
push
outs
mov
or
lods
outs
jl
cmps
mov
add
mov
out
outs
jl
in
add
or
shl
dec
add
or
call
and
xchg
xor
paddb
xor
xchg
and
jo
mov
dec
mov
pop
movs
outs
mov
in
pop
(bad)
jb
mov
in
sbb
cmp
iret
fsub
enterw
dec
mov
fs
cld
movs
dec
(bad)
jmp
int
fld
dec
mov
in
push
fidiv
mov
pop
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
pushf
jl
push
mov
data16
movs
dec
mov
mov
fldenv
data16
mov
out
outs
in
in
pop
in
aad
and
iret
cld
es
jmp
push
ficom
mov
mov
jno
mov
pop
lods
outs
add
add
cmps
xchg
or
cld
push
sub
in
sbb
add
iret
add
out
es
or
in
(bad)
iret
pushf
push
cmp
jmp
out
es
or
in
(bad)
iret
pushf
push
mov
adc
fsub
push
or
add
iret
fsub
cmps
dec
data16
jl
movs
outs
pop
es
rcl
out
ds
add
sbb
sub
iret
frstor
mov
sub
sbb
xchg
push
jle
mov
push
sub
in
sbb
add
iret
add
out
es
or
in
(bad)
iret
pushf
push
cmp
jmp
out
es
or
in
(bad)
iret
pushf
push
cmp
cmp
add
or
add
iret
fsub
cmps
dec
data16
jl
movs
outs
gs
pop
dec
sbb
sub
out
dec
mov
fldenv
data16
mov
out
outs
test
pop
pop
in
aad
and
iret
rcl
hlt
in
mov
sar
(bad)
iret
add
sbb
sub
iret
frstor
mov
pop
in
aad
and
iret
std
es
daa
add
jecxz
cmps
inc
or
test
jp
cmps
jb
add
or
add
iret
fsub
cmps
dec
data16
jl
movs
outs
push
or
pop
dec
push
push
gs
sub
out
dec
mov
fldenv
bound
jl
movs
outs
add
or
lods
cmps
dec
data16
jl
movs
outs
dec
or
pop
dec
dec
rcr
(bad)
das
outs
out
dec
mov
fldenv
imul
in
(bad)
xor
push
add
jecxz
cmps
inc
or
xchg
cmps
dec
in
xchg
retf
cli
fsub
jge
add
or
add
iret
fsub
cmps
dec
data16
jl
movs
outs
mov
adc
iret
push
ins
into
sti
aad
(bad)
iret
add
sbb
sub
iret
frstor
mov
pop
in
aad
and
iret
push
pop
hlt
inc
mov
xor
paddb
lods
dec
retf
jp
cmps
xor
fsub
push
or
add
iret
fsub
cmps
dec
data16
jl
movs
outs
test
adc
iret
imul
sti
aad
(bad)
iret
add
sbb
sub
iret
frstor
mov
pop
in
aad
and
iret
push
pop
hlt
inc
mov
xor
paddb
mov
cli
fsub
iret
out
es
or
add
iret
fsub
cmps
dec
data16
jl
movs
outs
xchg
es
rcl
out
cmc
jmp
add
sbb
sub
iret
frstor
mov
pop
in
aad
and
iret
cmp
lds
xor
or
in
cmp
iret
data16
jl
movs
outs
(bad)
es
cmp
iret
data16
mov
out
outs
and
out
pushf
jl
push
mov
cmp
cmp
(bad)
dec
pop
mov
xor
push
pusha
out
data16
fldenv
bound
jl
movs
outs
add
or
jecxz
dec
cld
or
dec
pop
in
aad
and
iret
cld
es
aaa
leave
sub
aaa
push
rcr
push
pop
data16
mov
jno
mov
pop
lods
outs
mov
xor
paddb
mov
mov
out
outs
jle
in
rcl
out
mov
mov
iret
add
sbb
sub
iret
frstor
mov
pop
in
aad
and
iret
push
pop
hlt
inc
mov
xor
paddb
fwait
dec
out
retf
cli
fsub
iret
out
es
or
add
iret
fsub
cmps
dec
data16
jl
movs
outs
dec
es
rcl
out
xchg
in
(bad)
jnp
mov
iret
add
sbb
sub
iret
frstor
mov
pop
in
aad
and
iret
push
pop
hlt
inc
mov
xor
paddb
retf
cli
fsub
iret
out
es
or
add
iret
fsub
cmps
dec
cld
or
dec
pop
in
aad
and
iret
cld
es
ret
leave
and
aaa
push
ror
mov
jno
mov
pop
lods
outs
mov
xor
push
add
jecxz
cmps
inc
or
stos
cmps
dec
jl
out
enter
jl
sub
mov
fldenv
data16
mov
out
outs
jbe
in
add
or
jecxz
dec
jl
out
add
or
mov
out
add
or
and
in
les
cmp
je
cdq
jp
xchg
fcomp
jp
cdq
sti
add
iret
fsub
push
or
in
(bad)
iret
pushf
push
mov
adc
out
dec
mov
fldenv
data16
mov
out
outs
pop
daa
in
push
pop
out
mov
xor
paddb
jg
clc
xchg
retf
jp
cmps
push
add
iret
out
es
or
in
(bad)
iret
pushf
push
cmp
cmp
add
or
in
(bad)
iret
pushf
push
cmp
out
loop
add
or
cmp
iret
fsub
addr16
sbb
dec
cmp
(bad)
fsub
inc
mov
out
outs
mov
in
push
pop
out
mov
xor
paddb
jg
dec
fmul
data16
movs
outs
out
dec
mov
fldenv
(bad)
jb
mov
in
sbb
addr16
iret
mov
fs
es
dec
nop
in
sar
dec
cld
cmps
and
data16
mov
out
outs
shl
in
push
pop
out
mov
xor
paddb
sahf
dec
in
cmps
retf
jnp
or
ror
fsub
rcr
push
out
aad
out
add
sbb
sub
iret
frstor
xchg
in
aad
and
iret
std
es
add
jecxz
cmps
inc
or
les
jnp
or
ror
fsub
rcr
push
out
aad
out
add
sbb
sub
iret
frstor
xchg
in
sar
iret
(bad)
cmps
and
data16
mov
out
outs
ins
es
cmp
iret
data16
mov
out
outs
cwde
daa
in
cmp
iret
data16
jl
movs
outs
test
in
cmp
iret
data16
mov
out
outs
inc
es
cmp
iret
pushf
jl
push
mov
inc
das
movs
and
xchg
in
data16
mov
out
outs
ins
es
cmp
iret
data16
mov
out
outs
lahf
daa
in
cmp
iret
data16
jl
movs
outs
test
in
cmp
iret
data16
mov
out
outs
dec
es
cmp
iret
pushf
jl
push
mov
pop
das
and
cmp
call
add
mov
out
outs
ins
es
cmp
iret
data16
mov
out
outs
cwde
daa
in
cmp
iret
data16
jl
movs
outs
xchg
es
cmp
iret
data16
mov
out
outs
xchg
es
cmp
iret
pushf
jl
push
mov
inc
das
movs
and
xchg
sbb
add
mov
out
outs
and
in
cmp
iret
data16
mov
out
outs
in
in
cmp
iret
data16
jl
movs
outs
pop
es
cmp
iret
data16
mov
out
outs
push
es
cmp
iret
pushf
jl
push
mov
jns
movs
and
data16
mov
out
outs
and
in
cmp
iret
data16
mov
out
outs
in
in
cmp
iret
data16
jl
movs
outs
pop
es
cmp
iret
data16
mov
out
outs
push
es
cmp
iret
pushf
arpl
push
mov
and
push
and
push
(bad)
dec
cld
shl
pop
mov
and
push
fld
dec
mov
in
push
fidiv
mov
pop
dec
mov
fldenv
pushf
jl
push
mov
pop
das
and
cmp
out
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
bound
mov
cmps
movs
outs
cmp
cmps
dec
or
addr16
mov
aas
data16
pop
in
aad
and
iret
cld
es
cmps
add
jecxz
cmps
inc
or
cld
cmps
dec
jl
out
dec
sbb
das
outs
out
dec
mov
fldenv
popa
data16
loopne
ds
pop
in
aad
and
iret
cld
es
stos
add
jecxz
cmps
inc
or
cld
cmps
dec
jl
out
enter
jl
das
outs
out
dec
mov
fldenv
(bad)
jb
mov
in
sbb
and
iret
fsub
dec
mov
bound
sbb
imul
aas
lods
outs
inc
inc
xchg
push
pop
ds
mov
jge
mov
aas
lods
outs
add
xchg
es
xchg
dec
push
pop
xor
jnp
mov
lods
outs
mov
fs
cld
es
dec
pop
in
aad
and
iret
cld
es
fld
cmp
jecxz
cmps
inc
or
enter
or
dec
dec
rcr
comiss
pop
dec
mov
fldenv
data16
mov
out
outs
push
in
push
pop
out
mov
xor
paddb
sahf
dec
in
xchg
retf
cli
fsub
iret
out
es
or
add
iret
fsub
cmps
dec
cld
mov
dec
pop
in
aad
and
iret
cld
es
int
xor
shr
push
pop
data16
mov
jno
mov
push
lods
outs
cld
es
dec
push
in
sar
iret
cld
cmps
movs
add
data16
out
outs
push
in
push
pop
out
mov
xor
paddb
mov
xchg
retf
jp
es
xchg
mov
push
or
add
iret
fsub
cmps
dec
cld
mov
dec
pop
in
aad
and
iret
cld
es
aaa
leave
sub
xor
pop
data16
mov
jno
mov
pop
lods
outs
mov
xor
paddb
jo
data16
jl
movs
outs
jle
in
rcl
out
outs
out
jmp
iret
add
sbb
sub
iret
frstor
mov
cld
cmps
adc
or
cld
cmps
movs
outs
add
or
mov
dec
cld
mov
dec
pop
in
aad
and
iret
cld
es
and
bound
pop
data16
mov
jno
mov
push
lods
outs
bound
movs
outs
add
or
mov
dec
cld
mov
dec
pop
in
aad
and
iret
cld
es
and
xor
xor
pop
data16
mov
jno
mov
pop
lods
outs
mov
xor
paddb
jo
data16
jl
movs
outs
test
in
rcl
out
cmp
jnp
mov
iret
add
sbb
sub
iret
frstor
mov
sub
sbb
xchg
push
jle
mov
mov
outs
movs
in
sbb
add
iret
add
out
es
or
in
(bad)
iret
pushf
push
mov
adc
fsub
push
or
in
(bad)
iret
pushf
push
cmp
cmp
add
or
add
iret
fsub
cmps
dec
cld
mov
dec
pop
in
aad
and
iret
cld
es
in
leave
and
rcr
mov
jno
mov
pop
lods
outs
add
add
cmps
xchg
sub
data16
outs
pop
cmps
popa
lea
and
iret
fsub
dec
mov
bound
sbb
imul
aas
lods
outs
dec
inc
xchg
push
pop
mov
mov
jge
mov
aas
lods
outs
add
xchg
es
xchg
dec
push
pop
xor
jnp
mov
pop
lods
outs
mov
xor
push
add
jecxz
cmps
inc
or
cmps
cmps
dec
sti
xchg
retf
cli
fsub
iret
out
es
or
add
iret
fsub
cmps
dec
jl
out
add
or
shl
dec
add
or
mov
ins
mov
xor
push
fdivrp
pop
mov
fcos
das
clc
cld
xchg
adc
mov
cmps
leave
add
push
add
iret
frstor
int
pop
in
aad
and
iret
cmp
retf
xor
adc
in
cmp
iret
data16
jl
movs
outs
jae
in
add
or
out
cmps
dec
jl
out
in
les
cmp
je
cdq
jp
xchg
fcomp
cld
cmps
fs
and
shl
pop
data16
fldenv
(bad)
jb
mov
in
sbb
sbb
iret
jl
jmp
mov
fs
cld
es
mov
daa
sar
dec
(bad)
cmps
movs
into
jle
mov
push
sub
in
sbb
add
iret
add
out
es
or
in
(bad)
iret
pushf
push
cmp
jmp
out
es
or
in
(bad)
iret
pushf
push
cmp
cmp
add
or
cmp
cmps
xchg
or
ret
jne
jl
out
mov
xor
push
fidiv
mov
sbb
mov
es
out
fidivr
pop
in
aad
and
iret
cmp
(bad)
data16
mov
out
outs
xor
in
cmp
iret
pushf
jl
push
mov
cmp
cmp
(bad)
dec
push
mov
cld
xchg
out
fsub
jbe
add
sbb
sub
iret
frstor
int
pop
in
aad
and
iret
cld
es
jmp
sbb
mov
es
pmaxub
pop
in
aad
and
iret
cmp
(bad)
data16
mov
out
outs
xor
in
cmp
iret
pushf
jl
push
mov
cmp
cmp
(bad)
dec
push
mov
cld
xchg
out
fsub
fist
add
iret
frstor
int
std
cmps
adc
cld
pop
movs
outs
jl
out
cld
cmps
and
data16
mov
out
outs
jns
in
add
or
xchg
dec
add
or
mov
and
xchg
xor
paddb
cs
and
xchg
leave
cs
es
ss
jl
jnp
mov
push
or
add
iret
fsub
cmps
dec
jl
out
add
or
out
dec
jl
out
add
or
mov
and
xchg
xor
paddb
cs
and
xchg
leave
cs
adc
jl
pop
cmp
mov
or
lods
outs
cld
es
dec
mov
shl
adc
sbb
mov
add
retf
xor
pop
es
cmp
iret
data16
jl
movs
outs
gs
in
add
or
out
cmps
dec
jl
out
in
les
cmp
je
cdq
jp
xchg
fcomp
cld
es
daa
push
push
mov
jl
movs
outs
mov
in
fs
cmp
iret
fsub
pushf
dec
lahf
cmps
popa
lea
cmp
iret
fsub
cmps
dec
sub
and
xchg
xor
paddb
inc
dec
fldenv
ins
mov
xor
push
fidivr
mov
sbb
mov
es
xchg
jp
mov
fcos
das
clc
cld
xchg
adc
mov
sbb
cmp
mov
or
lods
outs
mov
xor
paddb
inc
dec
sub
and
xchg
xor
paddb
cmps
dec
fldenv
ins
mov
xor
push
fidivr
mov
sbb
mov
es
xchg
jp
mov
fcos
das
clc
cld
xchg
adc
mov
adc
jp
rcl
sub
iret
frstor
int
cld
cmps
adc
cld
and
or
fsub
cmps
dec
sub
and
xchg
xor
paddb
inc
dec
fldenv
ins
mov
xor
push
fidivr
mov
sbb
mov
es
xchg
jp
mov
fcos
das
clc
cld
xchg
adc
mov
int
enter
jl
cmp
xchg
mov
or
lods
outs
mov
xor
paddb
inc
dec
sub
and
xchg
xor
paddb
cmps
dec
fldenv
ins
mov
xor
push
fidivr
mov
sbb
mov
es
xchg
jp
mov
fcos
das
clc
cld
xchg
adc
mov
jne
dec
jl
cmp
xchg
mov
or
lods
outs
cld
mov
in
rol
fs
cld
test
in
aad
and
iret
cmp
retf
xor
pop
es
cmp
iret
data16
jl
movs
outs
gs
in
add
or
out
cmps
dec
jl
out
in
les
cmp
je
cdq
jp
xchg
fcomp
xchg
jge
sti
add
or
add
iret
fsub
cmps
dec
jl
out
add
or
out
dec
jl
out
add
or
mov
and
xchg
xor
paddb
cs
and
xchg
leave
cs
es
add
jge
sti
add
or
mov
(bad)
iret
mov
add
iret
add
iret
div
mov
lods
outs
mov
fs
cld
cmps
imul
and
push
fld
dec
mov
in
push
fidiv
mov
pop
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
data16
mov
out
outs
jns
in
add
or
xchg
dec
add
or
mov
and
xchg
xor
paddb
cs
and
xchg
leave
cs
es
cmp
jg
jnp
mov
push
or
add
iret
fsub
cmps
dec
jl
out
add
or
out
dec
jl
out
add
or
mov
and
xchg
xor
paddb
cs
and
xchg
leave
cs
es
sbb
add
or
add
iret
div
mov
pusha
lods
outs
xor
out
frstor
mov
ins
add
sbb
sub
iret
frstor
stos
add
xchg
jmp
clc
cld
xchg
stc
mov
pop
add
sbb
sub
iret
frstor
mov
das
clc
cld
xchg
or
push
add
iret
frstor
mov
aad
and
iret
push
pop
hlt
dec
mov
xor
push
leave
and
push
je
pop
data16
mov
jno
mov
pop
lods
outs
add
add
in
sar
dec
jle
inc
mov
push
sub
in
sbb
add
iret
add
out
es
or
in
(bad)
iret
pushf
push
cmp
jmp
out
es
or
in
(bad)
iret
pushf
push
cmp
cmp
add
or
or
(bad)
iret
stos
jmp
int
fld
dec
mov
in
push
fidiv
mov
pop
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
data16
mov
out
outs
pop
popa
in
add
or
mov
dec
jl
out
add
or
mov
and
xchg
xor
push
fidivr
mov
fcos
das
clc
cld
xchg
add
cdq
xchg
mov
sub
cmp
(bad)
leave
das
mov
and
push
jno
pop
data16
fldenv
mov
mov
out
fsub
pushf
dec
leave
scas
pop
inc
stos
lea
jne
popa
ror
pop
cmp
xchg
mov
or
lods
outs
bound
jl
movs
outs
jl
out
je
jmp
xlat
xchg
fcomp
mov
mov
push
or
or
(bad)
iret
mov
daa
sar
(bad)
dec
je
jmp
xlat
xchg
fcomp
scas
jnp
sti
add
or
or
iret
mov
rol
sub
iret
cmp
(bad)
leave
and
add
pop
data16
fldenv
(bad)
jb
mov
in
sbb
cmp
iret
fsub
data16
xor
out
frstor
mov
ins
add
sbb
sub
iret
frstor
stos
add
xchg
jmp
clc
cld
xchg
stc
mov
pop
add
sbb
sub
iret
frstor
mov
das
clc
cld
xchg
or
push
add
iret
frstor
mov
jmp
idiv
mov
bound
sbb
imul
aas
lods
outs
dec
inc
xchg
push
pop
mov
mov
jge
mov
aas
lods
outs
add
xchg
es
xchg
dec
push
pop
xor
jnp
mov
lods
outs
mov
add
sbb
mov
es
enter
mov
sbb
mov
es
mov
jl
mov
sbb
mov
add
retf
ds
out
outs
gs
in
in
les
cmp
pop
fstp
cmp
xor
push
fidiv
mov
sbb
mov
es
mov
jl
mov
sbb
mov
add
retf
ds
out
outs
gs
in
in
les
cmp
je
cdq
jp
xchg
fcomp
xchg
sti
in
jnp
mov
push
or
add
iret
div
mov
push
lods
outs
cld
cmps
xor
sar
(bad)
iret
hlt
cmps
and
jle
mov
push
sub
in
sbb
add
iret
add
out
es
or
in
(bad)
iret
pushf
push
cmp
jmp
out
es
or
in
(bad)
iret
pushf
push
cmp
cmp
add
or
add
iret
div
mov
lods
outs
mov
fs
cmps
adc
mul
int
mov
out
adc
add
inc
fidivr
jbe
(bad)
sar
outs
jle
inc
mov
push
sub
in
sbb
add
iret
add
out
es
or
in
(bad)
iret
pushf
push
cmp
jmp
out
es
or
in
(bad)
iret
pushf
push
cmp
cmp
add
or
or
(bad)
iret
stos
jmp
int
fld
dec
mov
in
push
fidiv
mov
pop
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
dec
arpl
add
or
mov
inc
or
mov
and
xchg
xor
paddb
jo
fldenv
ins
mov
xor
dec
and
and
xchg
xor
dec
and
xchg
leave
cs
mov
push
or
add
iret
div
mov
push
lods
outs
jbe
cmps
sub
cmps
xchg
pop
data16
sbb
(bad)
jnp
cmc
cld
es
fucom
adc
fs
iret
add
test
push
fld
dec
mov
in
push
fidiv
mov
pop
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
bound
out
jl
outs
add
or
ret
jl
out
add
or
shl
dec
add
or
mov
and
xchg
xor
paddb
cs
and
xchg
leave
cs
es
sysret
jbe
jnp
mov
push
or
mov
iret
cld
out
dec
and
js
jnp
out
cld
or
sbb
mov
es
sub
jo
mov
sbb
mov
es
mov
jl
mov
sbb
mov
add
retf
ds
out
outs
xor
in
cmp
iret
pushf
jl
push
mov
cmp
cmp
(bad)
dec
push
mov
cld
adc
dec
fsub
ficomp
add
iret
frstor
int
pop
in
aad
and
iret
std
es
pop
fidiv
mov
sbb
mov
es
out
jl
mov
sbb
mov
add
retf
ds
out
outs
xor
in
cmp
iret
pushf
jl
push
mov
cmp
cmp
(bad)
dec
sbb
fs
pop
data16
fldenv
and
dec
fsub
data16
xchg
xor
paddb
or
and
xchg
xor
paddb
sbb
fldenv
ins
mov
xor
push
fidivr
mov
sbb
mov
es
xchg
jp
mov
fcos
das
clc
cld
xchg
adc
mov
adc
jp
or
add
iret
frstor
int
jmp
out
cld
cmps
outs
call
iret
fsub
cmps
dec
jl
out
add
or
fsub
dec
add
or
mov
and
xchg
xor
paddb
cs
and
xchg
leave
cs
es
mov
add
or
add
iret
fsub
cmps
dec
jl
out
add
or
(bad)
cmps
dec
jl
out
add
or
movs
cmps
dec
and
and
xchg
xor
paddb
cs
and
xchg
leave
cs
es
mov
add
or
mov
iret
cld
out
dec
and
js
inc
adc
pop
in
aad
and
iret
cld
es
sub
jo
mov
sbb
mov
es
mov
jl
mov
sbb
mov
add
retf
ds
out
outs
xor
in
cmp
iret
pushf
jl
push
mov
cmp
cmp
(bad)
dec
push
mov
cld
xchg
out
fsub
in
add
sbb
sub
iret
frstor
int
(bad)
cmps
xchg
in
bound
out
cld
movs
outs
add
or
ret
jl
out
add
or
fsub
dec
add
or
mov
and
xchg
xor
paddb
cs
and
xchg
leave
cs
es
and
add
or
mov
iret
cld
data16
and
js
inc
adc
pop
in
aad
and
iret
cld
es
sub
jo
mov
sbb
mov
es
mov
jl
mov
sbb
mov
add
retf
ds
out
outs
xor
in
cmp
iret
pushf
jl
push
mov
cmp
cmp
(bad)
enter
cld
xchg
out
fsub
repz
(bad)
iret
frstor
int
(bad)
cmps
xchg
jg
sub
(bad)
cld
movs
outs
add
or
ret
jl
out
add
or
fsub
dec
add
or
mov
and
xchg
xor
paddb
cs
and
xchg
leave
cs
ror
and
jnp
mov
push
or
mov
iret
cld
out
dec
and
js
(bad)
adc
sbb
mov
es
sub
jo
mov
sbb
mov
es
mov
jl
mov
sbb
mov
add
retf
ds
out
outs
xor
in
cmp
iret
pushf
jl
push
mov
cmp
cmp
(bad)
dec
push
mov
sub
rcl
pop
data16
fldenv
inc
daa
mov
out
fsub
(bad)
cmc
mov
xor
paddb
or
and
xchg
xor
paddb
sbb
fldenv
ins
mov
xor
push
fidivr
mov
sbb
mov
es
xchg
jp
mov
fcos
das
clc
cld
xchg
adc
mov
sbb
dec
jl
xor
xchg
mov
or
lods
outs
cld
cmps
pusha
dec
jae
sar
(bad)
iret
data16
mov
out
outs
cwde
es
cmp
iret
data16
mov
out
outs
push
es
cmp
iret
data16
jl
movs
outs
jns
in
add
or
out
cmps
dec
jl
out
in
les
cmp
je
cdq
jp
xchg
fcomp
inc
lock
sti
add
or
mov
iret
cld
out
and
js
inc
adc
retf
sbb
mov
es
sub
jo
mov
sbb
mov
es
mov
jl
mov
sbb
mov
add
retf
ds
out
outs
xor
in
cmp
iret
pushf
jl
push
mov
cmp
cmp
(bad)
dec
dec
mov
cld
adc
dec
fsub
sub
add
iret
frstor
int
std
cmps
xchg
pop
bound
out
jl
outs
add
or
ret
jl
out
add
or
fsub
dec
add
or
mov
and
xchg
xor
paddb
cs
and
xchg
leave
cs
sbb
addr16
xor
xchg
mov
or
lods
outs
cld
cmps
cmp
jle
sar
(bad)
dec
data16
mov
out
outs
cwde
es
cmp
iret
data16
mov
out
outs
push
es
cmp
iret
data16
jl
movs
outs
jns
in
add
or
out
cmps
dec
jl
out
in
les
cmp
je
cdq
jp
xchg
fcomp
lahf
jno
jnp
mov
push
or
mov
(bad)
iret
cld
out
dec
and
js
inc
adc
pop
in
aad
and
iret
cld
es
sub
jo
mov
sbb
mov
es
mov
jl
mov
sbb
mov
add
retf
ds
out
outs
xor
in
cmp
iret
pushf
jl
push
mov
cmp
cmp
(bad)
dec
push
fs
adc
dec
fsub
imul
frstor
int
cld
cmps
xchg
and
out
cld
mov
fdivr
fsub
cmps
dec
jl
out
add
or
fsub
dec
add
or
mov
and
xchg
xor
paddb
cs
and
xchg
leave
cs
ror
daa
jno
sti
add
or
or
(bad)
iret
jae
sar
(bad)
iret
data16
mov
out
outs
cwde
es
cmp
iret
data16
mov
out
outs
push
es
cmp
iret
data16
jl
movs
outs
jns
in
add
or
out
cmps
dec
jl
out
in
les
cmp
je
cdq
jp
xchg
fcomp
cld
cmps
xchg
dec
and
push
push
out
data16
fldenv
(bad)
jb
mov
in
sbb
gs
iret
jl
in
mov
es
mov
loopne
dec
xor
out
frstor
mov
ins
add
sbb
sub
iret
frstor
stos
add
xchg
jmp
clc
cld
xchg
stc
mov
pop
add
sbb
sub
iret
frstor
mov
das
clc
cld
xchg
or
push
add
iret
frstor
mov
aad
and
iret
cmp
retf
xor
push
in
cmp
iret
data16
jl
movs
outs
jns
in
add
or
test
and
inc
xchg
cmp
ds
cmps
outs
lahf
cmp
(bad)
dec
and
mov
fldenv
data16
mov
out
outs
cwde
es
cmp
iret
data16
mov
out
outs
or
in
cmp
iret
data16
jl
movs
outs
jns
in
add
or
out
cmps
dec
jl
out
in
les
cmp
je
cdq
jp
xchg
fcomp
cld
cmps
cmps
dec
sub
shl
fldenv
data16
mov
out
outs
jns
in
add
or
mov
dec
jl
out
add
or
ret
jl
out
add
or
aad
dec
jl
out
in
les
cmp
bound
sub
jo
mov
int
add
sbb
sub
iret
frstor
int
pop
in
aad
and
iret
cld
es
sub
jo
mov
sbb
mov
es
mov
pop
in
aad
and
iret
cld
es
sub
jle
mov
sbb
mov
es
xchg
jp
mov
fcos
das
clc
cld
xchg
add
cdq
xchg
xor
out
xlat
xchg
fcomp
cld
cmps
and
fimul
jl
movs
outs
mov
in
fs
jb
mov
in
sbb
popa
(bad)
iret
jl
in
mov
fs
cld
adc
jmp
int
fld
dec
mov
in
push
fidiv
mov
pop
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
data16
mov
out
outs
jns
in
add
or
mov
dec
jl
out
add
or
mov
and
xchg
xor
push
fidivr
mov
fcos
das
clc
cld
xchg
add
cdq
xchg
sub
js
je
out
xlat
xchg
fcomp
add
or
add
iret
fsub
cmps
dec
jl
out
add
or
shl
dec
add
or
mov
and
xchg
xor
paddb
cs
and
xchg
leave
cs
es
sysret
jbe
jnp
mov
push
or
add
iret
fsub
cmps
dec
sub
and
xchg
xor
paddb
jo
fldenv
ins
mov
xor
paddb
lods
dec
and
and
xchg
xor
paddb
mov
ins
add
xchg
es
xchg
dec
cmp
ds
rol
leave
and
fs
dec
mov
fldenv
data16
mov
out
outs
cwde
es
cmp
iret
data16
mov
out
outs
or
in
cmp
iret
data16
jl
movs
outs
mov
in
cmp
iret
data16
mov
out
outs
xor
in
cmp
iret
pushf
jl
push
mov
cmp
(bad)
call
(bad)
dec
stos
lea
jne
es
add
in
es
or
add
iret
div
mov
push
lods
outs
cld
cmps
stos
dec
mov
shl
fs
cld
es
int
fld
dec
mov
in
push
fidiv
mov
pop
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
data16
mov
out
outs
jns
in
add
or
mov
dec
jl
out
add
or
mov
and
xchg
xor
push
fidivr
mov
fcos
das
clc
cld
xchg
add
cdq
xchg
sub
js
je
out
xlat
xchg
fcomp
add
or
add
iret
fsub
cmps
dec
jl
out
add
or
shl
dec
add
or
mov
and
xchg
xor
paddb
cs
and
xchg
leave
cs
es
sysret
jbe
jnp
mov
push
or
add
iret
div
mov
push
lods
outs
cld
cmps
push
dec
(bad)
jmp
int
fld
dec
mov
in
push
fidiv
mov
pop
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
data16
mov
out
outs
jns
in
add
or
mov
dec
jl
out
add
or
mov
and
xchg
xor
push
fidivr
mov
fcos
das
clc
cld
xchg
add
cdq
xchg
sub
js
je
out
xlat
xchg
fcomp
add
or
add
iret
div
mov
pusha
lods
outs
xor
out
frstor
mov
ins
add
sbb
sub
iret
frstor
stos
add
xchg
jmp
clc
cld
xchg
stc
mov
pop
add
sbb
sub
iret
frstor
mov
das
clc
cld
xchg
or
push
add
iret
frstor
mov
aad
and
iret
cld
es
sub
jo
mov
sbb
mov
es
mov
pop
in
aad
and
iret
cmp
retf
ds
out
outs
xor
in
cmp
iret
pushf
jl
push
mov
cmp
cmp
(bad)
dec
data16
cld
adc
dec
fsub
sbb
push
add
iret
frstor
int
sub
sbb
xchg
push
pushf
es
out
fsub
fs
dec
mov
xor
push
fidiv
mov
sbb
mov
es
mov
pop
in
aad
and
iret
cmp
retf
ds
out
outs
xor
in
cmp
iret
pushf
jl
push
mov
cmp
(bad)
jmp
int
fld
dec
mov
in
push
fidiv
mov
pop
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
je
out
xlat
xchg
fcomp
por
sti
add
or
add
iret
div
mov
pop
lods
outs
mov
xor
push
fidiv
mov
sbb
mov
es
mov
pop
in
aad
and
iret
cld
es
xchg
jle
mov
sbb
mov
es
cdq
fidivr
mov
cld
xchg
call
call
dec
stos
jmp
int
fld
dec
mov
in
push
fidiv
mov
pop
dec
mov
fldenv
pushf
jl
push
mov
inc
das
and
cmp
out
dec
mov
fldenv
pushf
jl
push
mov
cmp
movs
js
adc
pop
dec
mov
fldenv
data16
mov
out
outs
jl
in
add
or
xchg
cmps
dec
fldenv
ins
mov
xor
paddb
cs
and
and
xchg
xor
paddb
xor
mov
xchg
dec
xor
dec
stos
lea
jne
jbe
dec
jl
sub
mov
or
lods
outs
mov
xor
push
fdivp
dec
mov
sbb
mov
es
ret
fidivr
pop
in
aad
and
iret
cld
es
xchg
jle
mov
sbb
mov
es
cdq
fidivr
mov
cld
xchg
cld
adc
pop
(bad)
lock
cmc
adc
cli
fsub
lea
add
iret
frstor
int
pop
in
aad
and
iret
cld
es
fidiv
mov
sbb
mov
es
scas
fidivr
pop
in
aad
and
iret
cld
es
xchg
jle
mov
sbb
mov
es
cdq
fidivr
mov
cld
xchg
cld
adc
pop
(bad)
lock
hlt
adc
cli
fsub
add
push
add
iret
frstor
int
pop
in
aad
and
iret
cld
es
scas
fidiv
mov
sbb
mov
es
push
fidivr
pop
in
aad
and
iret
cld
es
xchg
jle
mov
sbb
mov
es
cdq
fidivr
mov
cld
xchg
cld
adc
pop
(bad)
lock
cli
adc
jp
cmps
add
push
add
iret
frstor
int
pop
in
aad
and
iret
std
es
push
fidiv
mov
sbb
mov
es
fidivr
pop
in
aad
and
iret
cld
es
xchg
jle
mov
sbb
mov
es
cdq
fidivr
mov
cld
xchg
cld
adc
pop
(bad)
lock
hlt
adc
jp
cmps
cmp
add
iret
frstor
int
pop
in
aad
and
iret
std
es
fidiv
mov
sbb
mov
es
fidivr
pop
in
aad
and
iret
cld
es
xchg
jle
mov
sbb
mov
es
cdq
fidivr
mov
cld
xchg
cld
adc
pop
(bad)
lock
call
int
fsub
sbb
sub
iret
frstor
int
xchg
daa
sar
dec
data16
mov
out
outs
outs
daa
in
cmp
iret
data16
mov
out
outs
or
in
cmp
iret
data16
jl
movs
outs
xor
in
cmp
iret
data16
mov
out
outs
sub
in
cmp
iret
pushf
jl
push
mov
data16
movs
es
fisttp
mov
xor
shl
jl
movs
outs
mov
in
fs
jb
mov
in
sbb
cmp
iret
fsub
enterw
dec
mov
xor
push
fidiv
mov
sbb
mov
add
std
data16
jl
movs
outs
xor
in
cmp
iret
data16
mov
out
outs
sub
in
cmp
iret
pushf
jl
push
mov
cmp
std
es
stos
jle
mov
push
sub
in
sbb
add
iret
add
out
es
or
in
(bad)
iret
pushf
push
cmp
jmp
out
es
or
in
(bad)
iret
pushf
push
cmp
cmp
add
or
dec
xor
dec
stos
lea
jne
jbe
dec
jl
sub
mov
or
lods
outs
add
add
cmps
adc
bound
mov
outs
pushf
cmps
popa
lea
cmp
iret
fsub
cmps
dec
sub
and
xchg
xor
paddb
push
fldenv
ins
mov
xor
paddb
cs
and
and
xchg
xor
paddb
xor
mov
xchg
mov
dec
jl
out
xor
out
frstor
mov
ins
add
sbb
sub
iret
frstor
stos
add
xchg
jmp
clc
cld
xchg
stc
mov
pop
add
sbb
sub
iret
frstor
mov
das
clc
cld
xchg
or
push
add
iret
frstor
mov
fisttp
mov
xor
shl
pop
data16
fldenv
(bad)
jb
mov
in
sbb
sbb
out
mov
fs
cld
test
in
aad
and
iret
cld
es
fidiv
mov
sbb
mov
es
scas
fidivr
pop
in
aad
and
iret
cld
es
xchg
jle
mov
sbb
mov
es
cdq
fidivr
mov
xchg
jmp
clc
cld
xchg
stc
shl
pop
cld
cmps
repz
stos
jmp
int
fld
dec
mov
in
push
fidiv
mov
pop
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
pushf
jl
push
mov
cmp
out
dec
mov
fldenv
outs
pusha
out
xlat
xchg
fcomp
sub
out
jnp
mov
push
or
add
iret
div
mov
push
lods
outs
cld
es
sar
(bad)
iret
cld
cmps
movs
sub
jl
movs
outs
sbb
add
iret
data16
mov
out
outs
loope
in
cmp
iret
data16
jl
movs
outs
xor
in
cmp
iret
data16
mov
out
outs
sub
in
cmp
iret
pushf
jl
push
mov
cmp
cld
es
loop
jo
mov
push
sub
in
sbb
add
iret
add
out
es
or
in
(bad)
iret
pushf
push
cmp
jmp
out
es
or
in
(bad)
iret
pushf
push
cmp
cmp
add
or
dec
xor
dec
stos
lea
jne
jle
dec
jl
sub
xchg
mov
or
lods
outs
add
add
cmps
adc
cld
and
outs
cwde
cmps
popa
or
fsub
cmps
dec
jl
out
add
or
mov
dec
jl
out
add
or
out
cmps
dec
jl
out
add
or
lock
dec
jl
out
in
les
jmp
mov
div
mov
pusha
lods
outs
xor
out
frstor
mov
ins
add
sbb
sub
iret
frstor
stos
add
xchg
jmp
clc
cld
xchg
stc
mov
pop
add
sbb
sub
iret
frstor
mov
das
clc
cld
xchg
or
push
add
iret
frstor
mov
fisttp
mov
xor
push
test
jl
movs
outs
mov
in
fs
jb
mov
in
sbb
add
iret
add
out
adc
lods
outs
out
push
push
mov
cmp
iret
(bad)
js
mov
mov
ins
add
sbb
sub
iret
frstor
retf
add
fstp
jne
xchg
push
or
scas
cs
int
es
iret
mov
popa
hlt
dec
cld
cmps
in
sahf
and
push
mov
sbb
cmp
std
cld
es
outs
jecxz
sub
scas
out
sbb
add
mov
iret
(bad)
es
loopne
add
sbb
mov
movs
popa
xlat
fsub
add
movs
(bad)
iret
fsub
xchg
ret
outs
out
sbb
jo
mov
dec
add
jns
dec
loope
dec
lock
fwait
stc
mov
inc
mov
lea
movs
jnp
shld
shld
shld
shld
shld
movs
loopne
or
mov
sar
lock
sub
mov
dec
(bad)
in
(bad)
or
shr
retf
int
sti
mov
stos
jns
jbe
sti
dec
jo
push
add
push
pushf
jno
js
enter
test
movs
vpshld
int
in
and
xor
gs
les
inc
sbb
cmp
or
and
dec
jp
test
js
out
popa
movs
rcr
clc
jns
inc
fstp
and
sti
int3
push
inc
push
xor
fnstenv
popa
into
pop
push
sub
ficom
ins
rcl
clc
adc
jns
imul
retf
ja
jnp
jp
cmp
sub
sti
clc
lock
test
in
cmps
xchg
mov
test
and
icebp
push
(bad)
shr
push
ror
pop
retf
cmc
outs
js
addr16
push
and
pop
cmps
(bad)
test
test
pop
stos
inc
xor
leave
jb
push
mov
ins
leave
stos
stc
push
cli
sub
(bad)
and
js
js
fldenv
cmp
cli
(bad)
pop
or
sti
cmp
jb
add
mov
stc
stc
pop
es
mul
fdivr
mov
(bad)
pop
shl
es
js
js
fdiv
pop
and
cmp
iret
pop
xchg
jbe
pop
retf
push
add
mov
or
mov
mov
or
jmp
ins
push
or
call
pop
or
mov
push
data16
adc
scas
mov
or
xchg
and
int
mov
and
and
dec
ret
mov
sub
dec
jmp
dec
fldenv
adc
mov
ds
repnz
or
fisub
cmp
dec
jmp
fsincos
inc
push
push
and
int
test
int3
les
mov
dec
push
or
inc
sub
xchg
es
paddb
or
dec
dec
and
clc
out
mov
and
push
or
xchg
or
pop
and
cmp
jmp
inc
xchg
cmc
int
call
or
or
int
cmc
dec
fisub
push
out
and
mov
or
sub
outs
ja
mov
imul
fldenv
sub
leave
mov
ds
pop
shr
leave
mov
cmp
or
sub
lea
push
or
cwde
push
jmp
js
mov
add
or
repnz
jmp
inc
xchg
cmc
int
call
pop
jns
xchg
sub
mov
or
jmp
ins
fisub
adc
xchg
mov
addr16
jmp
or
jmp
js
mov
add
mov
or
adc
lods
or
xchg
mov
test
mov
mov
pop
push
retf
xchg
inc
inc
leave
and
int
call
pop
int
loop
dec
shl
jmp
mov
pop
cmc
ins
jmp
dec
shl
jmp
mov
pop
cmc
dec
jmp
dec
jmp
push
jmp
into
int
cmps
sub
and
dec
jmp
int
cmps
sub
mov
dec
std
and
dec
jmp
dec
retf
jge
call
mov
mov
pop
outs
adc
or
stos
mov
(bad)
out
mov
xchg
cmp
call
mov
or
push
dec
jmp
mov
or
jg
xchg
int
or
push
sub
outs
pop
int3
pop
and
fnstenv
dec
push
mov
xchg
sbb
xchg
int
or
jbe
jle
hlt
pop
cmc
ins
push
pop
dec
sahf
and
scas
push
jo
dec
push
or
out
dec
jmp
std
mov
mov
mov
or
and
push
or
mov
iret
int
cmps
sub
mov
push
std
and
int
cmps
sub
cwde
cmovge
cwde
or
jmp
dec
dec
cmp
inc
cdq
and
dec
fsubrp
sub
mov
mov
or
and
jns
or
(bad)
or
lds
cmc
int
mov
jns
(bad)
retf
dec
jmp
ins
push
or
fbld
cmc
js
xchg
or
pop
pop
and
cmp
jmp
int
mov
sbb
or
mov
mov
dec
push
or
sub
mov
dec
mov
clc
or
imul
aam
cmps
mov
mov
xor
dec
mov
test
repnz
iret
std
and
dec
dec
and
xor
pop
cmc
dec
sahf
mov
sub
sar
lock
sbb
lock
dec
or
and
shld
shld
or
jle
(bad)
imul
and
imul
shld
shld
or
jnp
sbb
jnp
sbb
jnp
sbb
jnp
adc
jnp
or
ror
sti
mov
sar
pushf
nop
sti
push
rcl
call
xchg
mov
cmp
je
fcom
jb
pop
cmp
movs
bswap
dec
retf
jnp
rcr
or
jb
leave
imul
or
hlt
adc
push
loopne
pop
cmp
js
js
and
arpl
repnz
push
push
jp
xor
test
jnp
jl
jbe
(bad)
in
cmps
jnp
movs
xor
shld
push
jp
xlat
jo
daa
call
clc
jnp
xchg
dec
(bad)
dec
inc
push
cmp
stc
dec
sti
push
jnp
test
fisub
fsubp
sti
clc
mov
xchg
cli
xor
cmp
jle
push
repnz
fisttp
ror
popf
vmread
out
(bad)
pop
(bad)
dec
sub
inc
fwait
cmps
sbb
pop
test
add
or
js
jb
pop
jecxz
push
adc
lea
pfnacc
adc
xchg
xor
jo
test
pop
test
dec
es
mov
test
pop
mov
repz
in
cdq
scas
push
and
or
and
xor
push
clc
adc
jmp
js
lea
xor
retf
push
int
sub
loope
mov
in
call
jns
sbb
xor
xchg
sbb
mov
fnstenv
push
mov
adc
xchg
data16
xchg
pusha
xor
adc
int3
jb
pop
xor
out
mov
test
dec
push
call
daa
mov
cs
cmps
in
and
jnp
ja
outs
(bad)
xlat
pop
mov
repnz
xor
pop
xchg
scas
stos
cmps
sahf
jbe
sti
dec
jo
mov
and
cmps
mov
iret
fdivr
xchg
sar
dec
fcomip
or
push
js
repz
inc
and
ror
push
out
rcl
pusha
fmul
and
mov
(bad)
mov
shl
(bad)
stc
clc
arpl
es
dec
movs
xchg
sar
adc
clc
movs
mov
mov
inc
xchg
lea
stc
push
es
lods
neg
adc
mov
cs
cmps
in
movs
pop
ret
clc
xor
inc
push
push
jnp
stc
dec
mov
in
clc
mov
xchg
mov
es
clc
lock
test
add
clc
es
push
jnp
or
cmp
jb
in
js
pop
pop
(bad)
pop
sysenter
pop
ds
ror
mov
lea
shl
xor
sub
pop
aas
ins
sub
jnp
mov
pop
jmp
xor
cmc
jg
push
fnstcw
cli
imul
(bad)
dec
(bad)
pop
jmp
pushf
cmp
pop
repnz
das
xchg
pusha
pop
out
repz
pop
jb
inc
xchg
in
inc
out
push
(bad)
pop
repnz
xor
push
lock
mov
mov
daa
mov
lea
sti
outs
daa
mov
cs
cmps
pusha
xchg
and
jnp
jle
daa
scas
das
frstor
dec
repnz
pop
push
sub
mov
movs
pop
jns
fdivr
push
movs
dec
xor
je
(bad)
jae
pop
dec
cmp
daa
pop
jb
mov
push
nop
and
test
mov
push
sar
push
jnp
mov
or
pop
test
cli
cmp
jbe
and
sti
push
cli
aam
or
lock
pop
iret
push
add
ins
icebp
clc
ficomp
out
pop
jp
in
daa
push
js
and
cmps
pusha
shld
js
pop
test
push
es
rol
jo
push
mov
repnz
jmp
ror
pop
dec
or
and
dec
dec
inc
mov
jmp
stc
ror
push
ins
jae
(bad)
stc
clc
jbe
es
fucom
test
mov
xchg
fild
sti
clc
movs
out
outs
js
pop
stos
fistp
scas
js
cmps
pop
xor
stos
jnp
(bad)
and
ds
imul
into
rcr
setl
stc
stc
into
push
test
mov
clc
js
pop
jns
scas
popa
and
xchg
repz
dec
retf
pop
dec
fimul
scas
call
lock
popf
test
jp
jg
movs
xor
rcr
cmc
pusha
out
adc
ins
cmps
fcmovne
data16
pop
sub
(bad)
outs
mov
out
stos
rcl
rcr
out
adc
ins
cmps
(bad)
outs
out
fisttp
(bad)
push
fist
in
pop
vxorps
outs
out
movs
jne
xor
mov
(bad)
fisub
inc
ins
test
std
or
dec
(bad)
(bad)
sbb
mov
add
push
cmps
sti
js
mov
jnp
sar
rcl
push
mov
sub
cmp
int
ror
shld
(bad)
out
sub
cmc
jae
in
xchg
mov
and
xor
pop
add
mov
shr
psllw
test
lea
sti
cmps
(bad)
or
push
jae
(bad)
js
(bad)
nop
fst
shld
scas
pop
out
sar
sbb
fldenv
call
stc
stc
clc
lock
test
add
icebp
rcr
push
jnp
ror
ror
pop
or
rep
out
dec
ror
shl
loop
bnd
retf
dec
(bad)
rcr
in
stc
mov
shld
call
and
mov
icebp
cmps
push
mov
xchg
add
push
cli
jmp
push
std
sbb
cmps
push
idiv
pop
lahf
sub
out
ins
rcl
cmps
repnz
sbb
(bad)
cli
push
add
lea
mov
(bad)
fcmovb
jb
retf
(bad)
in
clc
xor
(bad)
pop
rdpmc
xor
sar
xchg
lock
jb
pop
fwait
inc
jae
mov
jno
fstp
add
xchg
(bad)
sub
sub
xor
imul
mov
imul
in
mov
dec
fisubr
xor
imul
mov
dec
dec
dec
jmp
pop
dec
imul
icebp
jmp
xor
mov
imul
xchg
mov
fisubr
mov
(bad)
sbb
adc
stc
dec
(bad)
xor
(bad)
mov
mov
clc
(bad)
in
xchg
mov
test
clc
pusha
mov
data16
es
jo
push
lea
cmp
fidiv
clc
dec
push
mov
shl
lock
shld
(bad)
into
push
mov
jae
stc
dec
push
or
and
push
fimul
add
ds
test
repz
shld
lea
js
js
pop
cdq
sbb
push
cmp
sar
js
and
jnp
(bad)
pop
mov
shr
jo
jg
add
ror
loope
clc
jno
mov
data16
shr
push
repz
(bad)
jge
clc
out
xchg
jg
pop
(bad)
arpl
outs
(bad)
sar
rcr
cdq
ins
repz
clc
test
(bad)
daa
iret
jnp
sti
dec
push
cmps
cmps
aam
cli
xchg
and
cmps
jb
and
sar
(bad)
push
jb
test
push
lea
stc
sub
push
jno
pop
mov
sar
xchg
jae
push
test
mov
cdq
pop
xchg
leave
frstor
push
cmps
pop
test
in
daa
test
movs
mov
jl
ins
in
lock
inc
mov
data16
dec
call
gs
jno
clc
mov
enter
scas
ins
cs
and
aam
jp
aam
jo
into
and
clc
and
cmc
and
and
xchg
mul
shl
call
inc
cs
dec
sub
pop
mul
loopne
inc
call
pusha
push
push
stos
fldcw
pusha
fadd
ret
add
jo
push
push
adc
inc
out
rol
jmp
cmp
repz
ret
ss
pop
pusha
mov
mov
(bad)
mov
call
ins
test
mov
fs
jp
or
lea
movs
jnp
shld
shld
mov
mov
or
shld
mov
mov
or
mov
cwde
(bad)
shld
aas
cli
jnp
movs
push
xor
movs
jnp
sbb
loopne
lea
ret
sti
dec
(bad)
fs
(bad)
mov
mov
clc
psubb
cmps
(bad)
fcmove
cmp
imul
mov
(bad)
jmp
icebp
jnp
iret
fdivr
jae
pop
inc
pop
mov
cmps
sub
addr16
lea
es
pushf
jns
clc
(bad)
int
sbb
cmps
loope
cmps
xchg
(bad)
int3
dec
scas
jnp
rcr
pop
(bad)
lock
test
dec
enter
test
movs
loopne
cli
pop
lds
cli
sbb
jge
pop
(bad)
dec
fs
js
or
or
lock
js
dec
inc
fwait
jb
sar
js
dec
inc
rcl
cmp
repz
mov
ja
cmps
push
adc
fnstenv
jmp
nop
pop
or
add
xchg
or
test
jle
inc
add
movs
(bad)
hlt
clc
sti
js
fimul
push
lock
jb
pop
adc
pop
(bad)
jae
test
inc
push
pop
fidiv
add
clc
push
pop
mov
icebp
in
add
in
loope
rol
repnz
pop
xlat
test
sub
xchg
pop
pushf
inc
cmps
outs
mov
cmps
pop
test
in
pop
les
(bad)
ins
inc
cmps
inc
mov
sbb
lods
aaa
sub
xchg
fimul
fs
rcl
cmps
pop
popf
and
sub
pop
pusha
mov
cmps
pop
xlat
push
pop
push
test
cs
fucomp
sbb
and
mov
mov
pop
jecxz
mov
cdq
push
pop
movs
xchg
cwde
(bad)
in
aam
pop
aad
daa
and
mov
inc
jns
in
pop
lods
fs
and
xchg
sbb
pop
pop
mov
pop
test
cmps
outs
mov
mov
test
jb
dec
sub
xchg
mov
mov
pop
mov
pop
and
push
aam
cmps
leave
in
pop
test
cmc
out
test
push
sbb
pop
cmps
leave
in
pop
test
jecxz
inc
test
push
cs
fcmovnu
push
ins
cmps
outs
jmp
fwait
aam
push
outs
data16
popf
push
xlat
fs
popf
fs
and
xchg
call
dec
repz
mov
and
and
shl
out
pop
mov
xchg
sahf
outs
popf
shl
push
dec
mov
push
fwait
xchg
push
outs
icebp
pop
fnstsw
(bad)
push
add
lea
outs
(bad)
and
jnp
or
mov
or
cs
jnp
mov
and
sti
int3
mov
mov
or
mov
mov
or
sti
mov
popa
jb
jns
jnp
(bad)
jne
das
loopne
movs
cmp
(bad)
idiv
clc
(bad)
clc
jno
std
fisubr
mov
mov
cmp
(bad)
add
mov
xchg
loope
lock
sub
pop
cld
dec
cli
xor
nop
cmp
xchg
and
xchg
adc
repz
jmp
aad
(bad)
icebp
sar
jnp
retf
pop
mov
add
jbe
in
daa
imul
sbb
std
sub
jecxz
movs
push
stc
jp
jnp
or
sub
dec
cmps
mov
test
lds
lsl
push
rcl
jae
sar
or
ss
stos
js
or
(bad)
sbb
js
pfsub
push
push
outs
js
icebp
stc
sub
int3
inc
es
(bad)
fs
xor
psubd
push
jl
in
xchg
sbb
clc
movs
hlt
cmp
fiadd
jb
pop
stc
or
js
jb
pop
or
into
pop
push
or
lock
(bad)
sbb
test
rcr
inc
je
pop
or
js
outs
push
pop
and
mov
es
(bad)
pop
ror
pop
hlt
jo
movs
push
lods
fnstsw
xchg
std
(bad)
icebp
(bad)
fisttp
icebp
jmp
cs
mov
icebp
jno
popf
add
fsubr
xchg
xchg
pop
jb
imul
data16
add
mov
rcr
add
and
jne
cld
(bad)
pusha
add
retf
jae
pusha
aad
jns
(bad)
int3
and
mov
or
shld
lea
pop
push
(bad)
dec
pop
ja
fcmovnu
mov
add
es
rol
dec
pop
fnsave
pop
shl
movs
bsr
mov
shl
push
pop
cmp
push
jl
je
push
inc
(bad)
fldcw
sbb
mov
lock
xchg
sub
rcl
ds
inc
jl
push
cmps
xor
push
cmp
shld
(bad)
lock
sar
xlat
(bad)
jae
fisub
outs
pop
jbe
(bad)
rcr
mov
movs
in
rol
jnp
repnz
jae
movs
dec
rcl
ins
hlt
les
jno
cwde
es
mov
mov
js
dec
(bad)
prefetchw
pop
(bad)
psubw
mov
movs
jo
push
clc
jnp
icebp
push
sti
dec
shld
lea
test
lea
adc
pop
mov
sar
retf
sbb
push
push
mov
cmp
push
mov
test
push
sub
repz
shl
stc
lock
(bad)
jb
and
jnp
into
ror
xor
stc
push
cli
and
int3
adc
push
sti
adc
or
cs
(bad)
dec
test
push
sahf
jp
jae
pop
fild
fcmovnb
(bad)
cmp
mov
mov
test
data16
jns
mov
data16
and
push
pusha
mov
popf
int3
std
xchg
and
pop
fwait
mov
loop
sbb
dec
jmp
enter
cdq
mov
retf
inc
std
mov
mov
ds
lods
dec
into
jne
(bad)
mov
mov
clc
vmread
ja
ins
ja
scas
es
repnz
shl
cld
add
jnp
repnz
xor
push
fadd
es
jne
test
mov
jb
pop
pop
jo
and
sti
push
jp
jnp
push
inc
push
add
mov
js
icebp
sar
clc
rcr
in
lock
jno
movs
push
lea
mov
inc
movs
xchg
xchg
jnp
repnz
add
loope
adc
sti
js
jb
sar
jae
movs
dec
push
adc
sbb
shl
adc
push
pop
mov
psubb
jl
mov
stos
js
or
faddp
dec
(bad)
sbb
clc
lock
test
shl
push
es
jno
shl
cmps
in
js
add
(bad)
(bad)
push
jne
lock
jb
fs
paddd
es
test
add
test
loop
out
in
clc
mov
or
cwde
dec
sbb
sti
adc
jb
mov
cld
and
adc
jb
fmul
xlat
dec
inc
mov
(bad)
jns
pop
test
fstp
push
jbe
test
repnz
mov
scas
loop
rol
push
jo
pop
jbe
mov
sub
repz
test
lea
add
ja
stos
xchg
jne
pop
push
cmc
cmps
jbe
div
into
jmp
push
adc
inc
(bad)
jmp
or
xchg
and
inc
ins
test
repz
mov
mov
or
sub
lea
out
or
movd
bswap
pop
dec
or
ret
fisub
push
iret
fadd
fdivr
shl
stc
iret
fdivr
out
sbb
sbb
test
js
add
adc
adc
pop
cmp
(bad)
(bad)
(bad)
and
jnp
rol
lea
adc
clc
pop
ja
push
xor
lea
js
lods
imul
ror
mov
mov
clc
int3
dec
inc
mov
pop
cwde
stc
sar
loope
jno
clc
jnp
leave
fsub
inc
into
pop
push
sub
js
aaa
dec
pop
ror
sub
mov
sar
fdiv
test
cli
xchg
jb
and
sti
rcl
pushf
ins
jae
stc
fidivr
(bad)
bound
jecxz
cmp
mov
jb
push
xor
js
dec
inc
cmps
add
xchg
cs
mov
(bad)
fcmovb
jb
popf
imul
test
or
hlt
rcl
dec
lock
jb
fs
rcpps
cmps
dec
pop
jl
add
js
jb
fdivr
ror
jne
sqrtps
lock
stc
jb
xchg
cmps
daa
mov
pop
test
pop
or
movs
mov
sar
or
sub
imul
and
add
sbb
stos
mov
fwait
inc
sub
xchg
out
cmp
and
fwait
inc
test
(bad)
inc
sbb
pop
xchg
pop
and
xor
loopne
inc
retf
jae
pusha
aad
jns
(bad)
int3
retf
adc
out
or
lahf
fs
(bad)
push
fnsave
jb
mov
pop
(bad)
hlt
iret
fsubr
jae
fisub
iret
and
pop
es
pop
mov
xor
je
test
jb
mov
cmp
mov
jnp
jne
ret
cmps
scas
jo
dec
es
push
fnstcw
ds
mov
pop
aaa
jmp
mov
xchg
or
pxor
mov
and
in
repz
imul
repz
mov
lea
and
pop
push
jp
pop
jae
mov
sar
push
jb
and
sti
rcl
mov
jnp
jmp
add
or
nop
test
pop
es
icebp
jo
cmps
out
jmp
(bad)
jp
bound
imul
jns
js
jb
fcomp
lock
sar
dec
adc
pop
mov
stc
push
dec
test
psubb
and
cmp
dec
ds
or
js
jb
pop
mov
sti
adc
loopne
js
jb
pop
or
lock
(bad)
xor
int3
aaa
pop
cmps
jmp
clc
popf
dec
inc
push
inc
mov
jns
jnp
cmp
lock
sbb
xchg
gs
daa
shr
cmps
addr16
and
pop
not
jae
add
test
pop
shr
cmp
enter
mov
cmp
sub
push
test
sbb
jg
sbb
cmp
mov
jae
imul
imul
xchg
test
adc
adc
sar
cmp
adc
test
ins
push
rcl
lock
pusha
add
retf
jae
pusha
aad
jns
(bad)
int3
mov
icebp
pop
or
shld
lea
push
(bad)
dec
fcomp
sub
cmp
dec
mov
jno
(bad)
jnp
mov
icebp
jb
push
xor
movs
push
lea
mov
jb
js
pop
adc
rcr
es
stos
hlt
xchg
mov
pop
icebp
pop
push
ja
pop
mov
leave
jne
or
clc
jnp
addr16
xchg
fistp
and
lds
lock
(bad)
push
rcl
ds
pop
push
push
cli
cmp
jo
and
jnp
push
and
repz
jb
repz
rcr
cmps
xchg
in
cmp
fst
paddd
pop
or
(bad)
sar
sbb
cmps
leave
test
cmps
clc
(bad)
xchg
push
pop
(bad)
std
push
daa
mov
psubb
scas
pop
loop
lock
push
jp
adc
inc
sbb
test
(bad)
enter
jp
mov
push
add
test
mov
fcmovb
jb
js
out
pop
pop
imul
push
mov
jb
js
stc
inc
fld
cli
lea
mov
push
jp
ds
loope
mov
js
xchg
mov
std
repz
out
jnp
xchg
dec
push
test
jp
shl
ds
push
push
outs
jb
in
inc
adc
std
pop
ror
fcom
pop
push
jne
pop
xchg
or
imul
jne
push
in
xchg
sbb
aam
out
jge
fist
mov
fild
aam
pop
nop
push
pop
les
aam
stos
arpl
fild
ret
movs
and
lock
jle
retf
inc
std
mov
(bad)
dec
push
ds
shr
dec
fnsave
cwde
(bad)
shld
retf
xchg
jnp
cmp
and
jnp
sbb
fidivr
(bad)
popa
(bad)
retf
mov
aas
shld
stc
inc
mov
repz
xchg
lock
jns
pop
test
fld
dec
gs
push
stc
dec
pop
test
stos
sti
or
pop
inc
jne
xchg
and
cmp
add
pop
test
movs
sti
or
pop
inc
ja
loopne
adc
pop
push
loope
mov
lea
and
mov
and
jnp
cs
fimul
test
fsubr
cmps
pop
or
shld
cmp
lea
pop
or
in
cmps
pop
or
shld
(bad)
fst
dec
pop
test
cmc
sti
aaa
cs
stos
int
in
mov
das
and
dec
jns
mov
jnp
setno
and
iret
xchg
sbb
pop
or
sub
iret
xchg
xchg
stos
jnp
aas
xchg
test
fimul
cmp
mov
mov
movs
std
int3
dec
fld
push
mov
mov
cmp
data16
adc
and
pop
fnsave
pusha
mov
or
cli
int3
mov
push
push
loope
pop
cmp
sub
sub
dec
mov
test
jl
div
rol
outs
(bad)
and
jnp
or
mov
or
shld
clc
(bad)
mov
or
std
fs
jge
lahf
jle
sti
ret
jnp
lock
jb
daa
mov
dec
sar
daa
mov
sti
sbb
test
xor
sti
mov
leave
jns
sbb
or
js
pop
mov
xchg
jge
and
jnp
jmp
inc
jno
retf
cmps
je
scas
add
push
cmc
data16
js
in
pop
mov
aaa
dec
pmaxsw
lock
xor
cld
rcl
cmps
ins
or
movs
mov
test
xor
sti
sar
fs
clc
jnp
mov
pop
mov
inc
sti
aaa
shl
push
mov
pop
mov
push
sti
popa
mov
(bad)
in
lea
jg
pop
movs
in
push
out
or
rep
retf
dec
push
pusha
inc
out
sar
ins
cmps
retf
int3
xchg
jg
mov
push
ins
mov
rol
mov
lea
pop
rcl
clc
lock
ret
jb
test
lock
jp
test
fs
inc
mov
(bad)
pop
xlat
jb
inc
cmps
jo
fiadd
lea
out
xchg
in
rcl
loope
(bad)
sar
or
int3
shl
mov
int
jnp
mov
gs
test
inc
gs
shl
lahf
jmp
mov
shr
cmps
lock
movs
push
out
test
outs
outs
aaa
ins
out
inc
mov
outs
dec
aaa
(bad)
out
dec
mov
out
inc
aaa
leave
inc
outs
sbb
out
add
pop
outs
add
dec
outs
outs
aaa
jb
inc
mov
out
pop
aaa
jle
pop
mov
out
push
mov
inc
outs
aaa
dec
inc
outs
pop
leave
dec
out
adc
dec
outs
push
dec
jg
adc
outs
aaa
popa
outs
inc
aaa
jle
push
mov
out
pop
aaa
jg
pop
mov
outs
jle
dec
push
outs
sbb
pop
outs
push
dec
push
out
add
pop
out
pop
dec
outs
outs
daa
outs
outs
aaa
imul
popa
out
dec
aaa
dec
inc
outs
aaa
leave
pop
outs
or
dec
outs
outs
aaa
arpl
aaa
jg
pop
mov
outs
push
aaa
imul
aam
out
outs
aaa
mov
neg
sub
test
push
leave
aad
sub
xchg
repz
stos
adc
(bad)
icebp
push
mov
dec
out
xor
push
outs
out
inc
or
outs
mov
test
jo
inc
outs
out
imul
mov
aad
dec
xlat
fucomi
icebp
leave
xor
dec
outs
data16
or
out
lea
jo
inc
outs
out
imul
mov
aad
dec
xlat
cmps
call
push
dec
outs
addr16
or
in
lea
jo
inc
outs
out
imul
dec
xlat
mov
icebp
leave
xor
dec
outs
imul
xchg
sbb
pop
into
jo
dec
outs
out
imul
mov
aad
dec
xlat
test
icebp
leave
xor
dec
outs
imul
out
ror
inc
leave
in
pop
imul
aaa
call
sub
lock
inc
cli
cs
ss
sub
sti
enter
xor
into
ja
mov
std
div
push
std
div
mov
xchg
enter
and
(bad)
pusha
add
retf
jno
and
ror
iret
mov
imul
jp
jnp
jbe
pop
pop
xor
es
pop
test
push
push
sub
inc
mov
fidivr
mov
jno
jmp
jge
cmps
in
xchg
out
push
push
xchg
pop
out
into
mov
cmp
pop
sbb
shl
arpl
lock
cli
mov
(bad)
fisub
clc
xchg
jo
pop
dec
pop
add
cli
pop
test
test
std
stc
sti
js
and
(bad)
into
jnp
sti
dec
add
es
cmps
sti
dec
jp
lds
and
sti
js
ss
orps
in
repnz
add
outs
pop
outs
lods
(bad)
rcl
stc
jp
test
test
cmp
clc
push
cli
add
mov
mov
adc
jle
aaa
cmps
add
xchg
dec
movs
in
or
sbb
xchg
jmp
not
test
sar
push
push
lock
(bad)
jb
pop
(bad)
cmp
daa
test
cmp
es
jnp
xchg
cmps
xchg
mov
sti
jns
js
jb
fdivr
test
cmps
clc
ins
fild
and
fs
dec
fadd
pop
icebp
ficomp
sub
test
outs
sbb
aas
push
mov
jne
ror
test
in
inc
fisub
test
out
cmp
and
out
pop
adc
lock
inc
lods
data16
adc
sbb
sbb
cli
xchg
rcr
jo
test
(bad)
jg
loopne
or
cs
adc
stos
and
jnp
add
inc
cmp
dec
fcom
inc
xor
bnd
mov
ss
out
movs
(bad)
aam
jmp
loope
jae
mov
cmp
sub
hlt
iret
pop
cmp
xchg
addr16
dec
sbb
lea
movs
rcl
jnp
imul
or
repnz
push
xchg
pop
movs
stc
stc
rcr
jnp
jo
test
fcmovnu
jmp
sub
dec
jnp
jp
sub
movs
sub
loopne
sti
js
cmps
clc
int3
mov
push
xchg
pop
scas
jb
pop
mov
popf
js
mov
movs
scas
pop
push
es
pop
icebp
push
mov
int3
addr16
cmps
(bad)
fadd
test
add
arpl
sti
loop
clc
sti
clc
xor
scas
arpl
adc
cmps
repz
and
jnp
lock
mov
lock
jb
lahf
pop
push
sub
jb
pop
inc
or
push
pop
mov
stc
js
adc
jp
xor
fidivr
jb
clc
stc
xor
fidivr
cmp
aaa
test
vmread
and
sbb
mov
pop
test
fist
ins
test
pop
loop
es
in
xor
xchg
in
retf
and
xchg
stc
ret
dec
rcl
nop
mov
enter
retf
lods
pop
adc
cli
cmp
xor
in
in
retf
nop
fisubr
(bad)
adc
push
in
stc
fs
mov
add
xor
jnp
int
sti
mov
fwait
jns
jbe
sti
dec
jno
mov
leave
push
mov
rcl
inc
iret
jb
push
dec
stos
(bad)
dec
(bad)
xlat
add
jb
fnstcw
test
mov
jbe
and
pop
cmp
mov
test
push
out
(bad)
lock
xor
das
(bad)
psllw
jg
mov
js
out
in
jno
arpl
lea
and
jnp
mov
dec
(bad)
rol
lods
psubb
add
cmps
push
mov
test
es
jns
clc
(bad)
xor
and
fucomi
push
push
sub
push
test
sti
js
movs
popa
fwait
push
cmc
cmps
into
lock
push
jp
test
clc
fdivr
fcomp
mov
xor
lea
dec
(bad)
repnz
sar
(bad)
jnp
into
pop
mov
sti
mov
fnstenv
call
mov
xchg
in
(bad)
xor
pop
mov
and
cld
dec
shl
test
shr
clc
into
rcr
cmovne
stc
sar
push
adc
call
and
and
adc
jo
test
pop
mov
jnp
push
add
js
jb
pop
fst
ror
inc
add
fdiv
dec
in
js
sbb
movs
cwde
mov
sbb
test
inc
xchg
out
mov
sbb
inc
pop
adc
pushf
gs
dec
mov
ins
rol
daa
mov
add
mov
sub
add
sbb
cdq
rcr
sbb
lea
jmp
fwait
retfw
ins
fwait
pop
mov
mov
push
pop
jae
and
ror
test
mov
lea
out
or
fnstsw
push
bswap
pop
ins
or
jnp
es
dec
pop
cmp
cmc
fdivr
inc
adc
pop
jns
xlat
jnp
lock
mov
inc
sub
dec
lock
and
neg
icebp
loop
scas
inc
adc
push
cld
dec
sti
outs
test
sar
shld
lea
cmps
mov
cli
mov
(bad)
lahf
sti
cmp
jno
movs
(bad)
stc
into
fnstcw
cmps
push
sti
mov
ficomp
cli
sub
cmp
leave
pop
jne
push
cmp
lea
cmps
(bad)
jae
gs
jg
test
fld
test
test
push
push
jg
cs
cmps
aad
les
dec
and
in
clc
mov
pop
cmovle
call
xchg
hlt
push
push
jnp
lods
dec
jp
mov
xor
lea
push
or
lock
jb
fs
jp
(bad)
jge
je
push
jp
sub
push
push
aam
jbe
cmp
clc
js
xchg
cs
test
pop
jo
sub
je
pop
(bad)
jae
pop
in
pusha
outs
push
mov
lds
shl
jl
xor
jmp
mov
xor
imul
push
xor
std
setno
movs
loope
ret
test
outs
daa
retf
mov
or
mov
or
shld
lea
pop
push
or
jnp
es
inc
pop
push
sti
jb
lea
clc
jnp
pop
ficom
hlt
dec
fmul
push
pop
sub
pusha
add
dec
popa
cmc
or
push
mov
xlat
xlat
sar
clc
add
sar
shld
(bad)
(bad)
clc
xor
sti
js
movs
into
call
pop
push
sti
jge
jb
in
(bad)
shr
arpl
outs
mov
push
jnp
cmc
clc
push
push
shl
jae
mov
js
cli
adc
stc
cmp
cmps
add
call
cmps
leave
shl
clc
xor
cmp
cmps
ins
mov
xchg
jp
das
jb
inc
call
push
sti
aaa
jnp
in
dec
shl
pop
psubb
fcmovu
push
inc
mov
pop
xchg
pop
test
push
stc
xor
xchg
dec
out
js
sbb
movs
(bad)
push
out
push
push
dec
rcr
cmp
repz
fyl2x
mov
clc
ror
outs
or
cli
std
fidiv
inc
bound
fwait
mov
push
sti
adc
test
test
rcl
shl
lock
outs
sub
mov
sub
push
loop
xchg
push
loop
cmp
rcl
xchg
inc
pop
adc
imul
mov
push
cdq
call
cmp
dec
loop
mov
push
lahf
cwde
lds
popf
push
cmc
mov
cmp
sti
xchg
sub
rcl
xchg
push
jne
xchg
push
aam
stos
push
mov
inc
pop
adc
arpl
stos
cmp
rcr
mov
xchg
int3
stos
sub
jmp
push
loop
jmp
xor
sub
or
jnp
lods
stos
daa
mov
adc
std
out
mov
loope
jmp
and
adc
add
out
push
loop
push
je
cmps
xor
(bad)
xlat
fsub
mov
xchg
jmp
sbb
stos
mov
dec
push
xchg
clc
loop
stos
jl
stos
aad
dec
outs
add
retf
add
push
dec
stos
addr16
dec
loop
stos
push
loopne
mov
aas
test
outs
xchg
shr
fs
cwde
test
sbb
loope
xor
push
and
push
pop
jmp
and
ficom
push
xchg
ins
retf
test
xchg
sbb
lods
sbb
test
rcr
sub
push
cmps
gs
sub
mov
push
push
nop
pop
mov
es
cmp
pusha
cmp
xor
push
cmp
pusha
xor
out
cmc
jg
retf
test
loop
cli
lods
sbb
fcomp
cmps
jbe
adc
mov
mov
adc
retf
dec
(bad)
cmp
(bad)
mov
cmp
lea
(bad)
(bad)
pop
stc
adc
test
lock
mov
inc
movs
pop
jns
fdivr
add
sub
je
fadd
loopne
aad
dec
lods
dec
add
jbe
mov
cmp
cmp
shld
(bad)
dec
es
fs
xor
pop
jbe
push
shl
es
inc
test
cmp
(bad)
clc
ds
ret
sub
push
add
cmps
stc
dec
add
cmps
inc
out
xchg
jp
(bad)
(bad)
fimul
push
and
clc
lock
test
dec
bound
push
test
mov
xchg
mov
add
sub
push
push
jg
xor
mov
(bad)
shl
adc
jae
pop
arpl
repz
cli
into
sbb
inc
(bad)
imul
js
push
(bad)
(bad)
stc
in
(bad)
push
(bad)
lds
cmps
cli
jge
xchg
mov
sar
push
xor
xor
jo
cmp
add
psubb
cld
dec
pop
or
imul
push
jb
jle
cli
xor
add
mov
in
nop
rol
cmp
dec
add
dec
imul
add
adc
jl
leave
cmp
imul
add
repnz
imul
add
ins
ret
jmp
pop
out
fmul
addr16
push
nop
or
out
fst
pop
inc
nop
in
inc
sub
rcr
neg
jo
jl
scas
shl
jb
les
or
punpckhdq
(bad)
and
shld
clc
(bad)
gs
retf
add
ret
jb
sbb
(bad)
aas
lea
es
cmps
add
repz
in
or
test
mov
jmp
dec
cli
adc
sahf
outs
lods
sti
push
jp
push
jb
js
out
inc
ficomp
(bad)
pop
ins
cmps
sti
int3
lea
stc
dec
and
jnp
(bad)
sbb
push
push
inc
scas
repz
rol
(bad)
sub
and
add
jnp
mov
lea
pusha
popa
xchg
(bad)
pop
push
jp
daa
jo
and
jnp
shl
aad
(bad)
sar
or
push
lods
vmread
mov
pop
mov
sti
mov
fld
movs
out
push
call
sbb
rcl
mov
fwait
je
or
in
repz
lds
pop
imul
cli
mov
mov
cld
lea
mov
push
cli
iret
cmp
xchg
or
call
jb
fimul
push
lock
test
outs
es
js
xchg
jmp
pop
nop
test
movs
in
out
push
jp
gs
and
jno
in
outs
mov
sub
cmp
icebp
test
arpl
popf
adc
test
push
jmp
jbe
sbb
shr
test
xlat
push
add
mov
repnz
push
xlat
jb
or
test
push
push
dec
lds
retf
lock
retf
les
inc
movs
loopne
or
mov
lods
(bad)
mov
cmp
or
gs
jmp
cmps
cmp
mov
clc
cmp
dec
add
and
jnp
push
pop
enter
mov
or
adc
je
call
(bad)
pop
cmp
inc
and
jnp
and
sti
aaa
inc
fcmove
ss
push
call
and
jnp
(bad)
push
dec
sti
jnp
loope
iret
cmc
lds
cmp
fidivr
lock
jb
out
clc
push
sti
jmp
xchg
ficomp
push
icebp
stc
nop
stos
shld
lea
stc
pop
ds
int3
pop
or
je
loop
push
fdivr
lock
jge
mov
and
mov
aaa
movs
in
shl
jmp
dec
shr
fcomip
inc
pop
inc
jae
cmps
push
(bad)
xchg
fld
push
xchg
aas
cwde
(bad)
lea
adc
jo
pop
lock
dec
aad
xchg
and
clc
sar
and
js
out
js
in
add
pop
(bad)
repz
inc
dec
jbe
sbb
(bad)
sahf
jo
jmp
stos
jo
test
call
ficomp
jb
pop
add
hlt
rol
repnz
inc
jle
pop
ret
call
jmp
mov
push
(bad)
inc
mov
jge
inc
mov
fs
sbb
mov
(bad)
mov
inc
aaa
gs
mov
mov
jo
fidiv
cmps
mov
dec
sar
daa
bound
mov
or
(bad)
dec
push
dec
or
icebp
in
push
and
push
rcl
cmp
and
cmps
enter
int
clc
xor
mov
push
ins
lods
dec
in
dec
addr16
or
push
xchg
jae
idiv
in
cmps
mov
xchg
pop
and
cmps
dec
dec
and
jnp
sbb
xchg
shld
cmp
dec
jno
sbb
js
add
cmps
bound
push
cmp
test
pop
(bad)
lock
test
cmps
(bad)
int3
lea
stc
into
pop
nop
ins
mov
mov
pop
(bad)
out
push
push
push
mov
jnp
push
pop
loopne
into
pop
mov
not
mov
daa
lea
mov
sar
dec
jo
aam
cmp
sbb
adc
and
mov
movs
pop
(bad)
into
push
push
or
push
xlat
jnp
(bad)
push
pusha
lods
jbe
mov
pusha
cmp
push
add
inc
pop
icebp
btc
loop
jle
data16
into
mov
in
in
sub
scas
out
in
in
jl
out
jle
jge
in
in
outs
stc
gs
daa
cdq
mov
pop
aam
(bad)
or
dec
push
ds
movs
inc
mov
pop
mov
repnz
jo
pop
mov
repnz
jo
pop
push
or
dec
pop
test
(bad)
sti
mov
adc
mov
repnz
push
jb
outs
dec
cmp
sub
push
jns
pop
test
jg
or
fisubr
dec
dec
ja
dec
jo
test
movs
push
mov
pop
mov
repnz
jne
or
mov
repnz
addr16
or
fisubr
stc
retf
test
fidiv
icebp
shld
int3
xchg
and
jnp
lock
iret
leave
test
ficom
iret
aas
adc
mov
repnz
xchg
jae
pusha
dec
mov
push
imul
fst
mov
repnz
pop
and
imul
les
jns
test
ficom
xchg
shld
int
and
jnp
lock
in
or
jnp
shld
lea
addr16
add
inc
jmp
test
fimul
and
pop
test
retf
jb
fidiv
retf
jbe
test
dec
retf
dec
lock
test
pop
and
ja
jb
or
ja
dec
imul
jo
test
and
rcl
fidiv
add
movs
jnp
cmp
jl
shld
sub
iret
add
lods
pop
lea
add
jnp
sti
loopne
(bad)
lock
jg
xor
pop
test
lock
jb
fidiv
cwde
mov
pop
(bad)
mov
pop
and
pop
add
leave
test
fidiv
stc
leave
test
fisubr
stc
retf
jb
and
pop
lea
movs
jnp
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
(bad)
jnp
shld
adc
push
lea
movs
jnp
sub
pop
lea
and
jnp
jge
jnp
(bad)
jnp
stc
pusha
ror
retf
or
pop
cld
shld
mov
push
ds
xchg
jne
movs
and
stos
jae
test
cmp
inc
(bad)
lock
jg
mov
pop
nop
pop
and
jl
jp
jnp
add
es
xor
repz
mov
lea
mov
jo
pop
pop
or
xchg
mov
test
loop
cmp
pop
and
jnp
(bad)
jns
xchg
(bad)
clc
mov
es
daa
test
rcl
xchg
ror
lea
imul
cmps
sti
int3
retf
out
mov
aad
cmps
mov
and
jnp
lock
test
movs
sti
stc
rcl
jmp
repnz
in
pop
mov
xlat
pop
cmp
loope
es
rol
dec
iret
in
inc
repz
xchg
inc
sbb
mov
xchg
jp
popf
ins
add
movs
test
inc
js
adc
jo
xor
int3
mov
inc
xchg
adc
icebp
loope
sti
sbb
movs
mov
(bad)
in
js
imul
xchg
pop
call
shl
repz
inc
fdiv
push
and
idiv
int
in
call
add
neg
ret
pop
mov
inc
push
mov
repnz
push
or
push
or
push
or
push
push
lds
leave
jmp
(bad)
sub
sub
push
adc
cmp
int3
dec
(bad)
sub
jecxz
sub
sbb
or
push
cmp
push
sub
mov
loope
pop
call
pop
dec
xchg
mov
call
cli
gs
ss
jg
(bad)
push
jg
pop
(bad)
push
mov
mov
repz
shl
sahf
cmp
(bad)
aad
and
push
sub
ds
cmp
pop
retf
push
xor
retf
pop
xchg
sbb
stc
or
sub
jae
mul
sub
sahf
add
pop
pop
retf
js
in
loope
into
ss
add
add
imul
popa
call
mov
inc
cli
cmc
mov
jg
int3
stc
fstp
sub
add
imul
and
lods
mul
xchg
sub
call
sahf
cmp
das
jg
jle
ds
neg
inc
pop
int
lds
mul
xchg
mul
clc
xor
cmp
pop
jecxz
dec
lods
dec
(bad)
loope
jno
xlat
sbb
or
adc
popa
retf
sub
jb
pop
call
mul
rol
sub
lods
mov
mov
or
push
mov
frstor
sub
jl
popa
mov
out
mov
mov
mov
inc
ror
movs
js
test
(bad)
pushf
shl
test
aad
sahf
cmp
movs
jo
neg
jo
lods
sbb
xor
ds
mov
loope
mov
or
mov
loopne
call
icebp
push
jns
int
lds
rol
xchg
xchg
push
jg
sub
xchg
dec
(bad)
xor
mov
xlat
xchg
aaa
cmp
mov
pop
mov
pop
je
int3
xlat
(bad)
mov
(bad)
movs
sbb
ror
cmp
mov
loop
dec
ror
cld
mov
cmp
push
sahf
push
int
aam
gs
jnp
call
mov
retf
pop
sti
mov
cmp
push
call
pop
jnp
dec
mov
jnp
mov
cmp
sbb
jmp
xor
xchg
mov
dec
push
push
pop
pushf
ror
push
out
push
loope
jne
dec
push
mov
into
sbb
or
ror
call
mov
(bad)
push
push
jg
mov
dec
mov
pop
loope
mov
call
pop
cli
loope
pop
call
sahf
mov
dec
call
jb
cli
popa
jae
pop
jg
xor
jecxz
pop
jmp
jmp
add
(bad)
seto
js
sub
dec
mov
pop
(bad)
sub
dec
mul
inc
call
push
jo
xor
repz
(bad)
lock
jle
outs
sub
cmps
jge
jnp
shld
shld
shld
shld
shld
shld
shld
shld
shld
retf
adc
out
lea
out
or
out
push
(bad)
dec
pop
adc
movs
icebp
es
sti
into
jge
xor
add
imul
test
bnd
mov
jno
cmp
xor
outs
ds
cmp
arpl
jnp
mov
xchg
add
xchg
cs
cmps
rcl
xchg
mov
or
push
inc
shr
cmp
clc
sar
loop
jb
in
lea
(bad)
jp
scas
jnp
lea
mov
jns
sar
lods
out
push
jp
lods
jno
jp
stc
movs
sbb
aam
sti
js
jecxz
rcl
fs
mov
xchg
lock
test
in
push
jp
xor
cmps
and
test
js
out
lods
fisubr
push
mov
fldcw
int3
into
pop
mov
clc
stc
xor
neg
inc
push
enter
mov
and
cmps
dec
stos
fiadd
repnz
call
jns
clc
lock
test
daa
push
pop
cs
cdq
iret
sar
aas
dec
int
rcl
out
lock
mov
or
imul
out
inc
call
mov
xchg
shr
or
ds
fstp
xchg
and
mov
shr
and
mov
adc
outs
mov
lock
pop
push
lock
lock
pop
mov
out
dec
mov
or
call
pop
ds
outs
or
imul
out
(bad)
ds
call
outs
ds
and
mov
lock
or
call
outs
ds
test
shl
pop
shr
and
call
out
shl
jno
shr
retf
and
xchg
xor
ret
lock
retf
mov
seta
adc
rcl
stos
and
push
cmps
shr
push
into
dec
idiv
jmp
seta
outs
test
dec
ds
leave
jb
movs
mov
retf
or
sub
repnz
pusha
xor
cmps
add
dec
inc
jmp
sti
dec
lock
movs
push
stc
jmp
jnp
dec
pop
push
es
imul
dec
xchg
push
int3
imul
retf
jne
inc
mov
sbb
and
scas
out
xchg
jns
dec
adc
pop
(bad)
imul
add
je
imul
sbb
es
mov
mov
xchg
enter
in
stc
fs
in
xchg
or
pop
and
jl
jp
jnp
imul
sbb
pop
xor
fisub
xchg
lock
jnp
dec
pop
leave
jno
pop
lods
mov
and
hlt
adc
jo
mov
cmp
and
jnp
lock
test
dec
es
mov
rcl
add
and
(bad)
lock
xchg
shld
cli
cmps
outs
dec
and
jnp
(bad)
(bad)
in
std
jnp
jp
cmps
jbe
sbb
sar
icebp
pop
jae
clc
jnp
scas
fdivr
adc
pop
(bad)
mov
clc
push
sti
in
or
cs
cmps
lods
(bad)
cmp
pop
(bad)
push
es
and
jb
or
ins
cli
xchg
cs
es
out
js
jb
pop
loopne
dec
inc
push
pop
shl
or
cli
jp
jb
dec
mov
clc
jnp
fistp
aas
lea
stc
dec
fisub
cs
or
jecxz
pop
stc
push
and
repnz
lock
jecxz
or
fld
stc
lock
jb
and
adc
out
push
xor
in
jb
cdq
fcom
sub
loopne
pop
pop
jo
lock
(bad)
sbb
fdivr
jno
pop
mov
jo
push
jbe
xchg
jo
xchg
cs
pop
sub
and
test
cmp
inc
fdivr
jmp
pop
sbb
and
call
mov
addr16
dec
pop
sti
pop
lds
add
xchg
xor
inc
pop
pop
and
jnp
ret
mov
inc
addr16
adc
and
jmp
int3
cmp
mov
mov
nop
sub
pop
lds
add
cmp
sbb
aaa
mov
lds
add
mov
mov
jnp
xor
test
pop
loopne
mov
sahf
cld
out
addr16
sahf
sbb
and
mov
inc
xchg
cmp
loope
cwde
dec
inc
mov
cmp
xor
in
test
mov
or
movs
jnp
shld
(bad)
movs
jnp
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
xchg
pop
mov
lea
out
or
mov
pop
je
out
sbb
hlt
iret
pop
sub
ficom
jns
cmp
iret
fmul
jbe
fcmovb
stos
shld
int
in
push
bound
int
js
jle
pop
rcl
or
mov
retf
push
xchg
jae
and
inc
cmp
push
mov
lea
movs
mov
mov
sar
cmp
jno
and
jnp
vmread
sub
sub
fidivr
cs
add
frstor
pop
jecxz
jnp
jp
test
scas
es
(bad)
xchg
pop
and
arpl
sub
mov
out
pop
es
hlt
pop
pop
mov
xchg
js
push
push
inc
repz
stc
dec
jp
lds
mov
xchg
inc
push
or
jp
pop
jno
fs
psrlq
jmp
jp
nop
ins
rcr
push
xchg
icebp
stc
les
movs
and
push
clc
stc
js
pop
push
push
cli
jo
cs
xchg
cmps
jo
lock
dec
repz
test
ror
fsubr
jo
movs
shl
and
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
adc
js
sub
leave
int
aaa
dec
call
or
(bad)
xor
in
outs
add
jmp
or
outs
mov
ss
push
and
push
mov
xor
ss
mov
xor
cmp
cld
pop
and
push
mov
xor
ss
mov
xchg
jl
sbb
pop
clc
sub
xlat
inc
or
or
call
js
mov
fwait
jecxz
push
ror
ret
shr
mov
add
and
dec
pop
push
xor
and
ins
mov
mov
int3
fstp
jl
add
xor
mov
imul
cld
enter
pop
adc
sbb
xchg
jb
or
jl
xchg
cmc
pop
sub
dec
int3
pop
adc
js
mov
js
mov
mov
es
test
and
dec
push
adc
js
and
sub
xchg
xchg
add
and
push
dec
fisttp
jl
add
jb
push
pop
js
mov
out
push
cld
(bad)
mov
sbb
cwde
sti
mov
add
jne
xchg
and
cmp
or
dec
push
adc
jle
sub
xchg
xchg
push
pop
and
js
push
jl
add
xor
adc
pop
and
fs
adc
jo
push
dec
clc
add
xor
mov
test
jl
and
pusha
sub
js
imul
jbe
mov
cld
test
cmp
js
sbb
dec
pop
adc
js
fiadd
clc
and
pop
pop
and
dec
push
adc
js
and
jns
xchg
xchg
cld
pop
push
adc
pop
and
fs
adc
jo
push
dec
clc
add
xor
mov
cli
add
jl
and
pusha
sub
js
imul
jbe
cmps
ss
test
mov
mov
mul
jp
mov
sbb
pop
js
imul
out
and
mov
sbb
pop
js
and
add
push
add
jl
xchg
sub
mov
mov
neg
jl
and
pop
and
jbe
mov
data16
iret
stc
xchg
loopne
pop
and
sub
cmp
inc
pop
js
and
add
pop
add
cld
xchg
loopne
pop
and
push
xor
jl
jecxz
jl
add
pop
cmps
jmp
ret
movs
add
jl
push
adc
clc
push
mov
jp
adc
clc
mov
mov
loop
or
add
repnz
push
pop
js
pop
jg
and
iret
cmp
scas
cmp
cmp
hlt
pop
stc
pop
adc
mov
and
cld
dec
adc
adc
imul
test
pop
mov
test
pop
add
cld
mov
xchg
sar
jnp
xchg
jg
cmp
jne
repnz
adc
mov
stc
and
jo
xchg
(bad)
xchg
push
adc
clc
and
jl
mov
push
cld
sbb
adc
clc
push
adc
pop
and
fs
imul
mov
adc
pop
xor
js
adc
js
and
jns
xchg
xchg
lock
cmp
cmp
mov
repnz
and
inc
jl
test
mov
clc
and
clc
fwait
adc
dec
les
mov
clc
add
jl
push
cld
add
mov
hlt
inc
adc
mov
pop
xor
dec
cmp
js
push
jl
pop
adc
js
fiadd
clc
and
pop
dec
push
adc
js
and
sub
xchg
xchg
hlt
pop
cmp
mov
add
cld
and
inc
jl
dec
mov
jp
adc
js
push
jl
add
pop
movs
ss
arpl
fstp
jno
add
xor
pop
clc
sbb
arpl
in
push
xchg
adc
pop
and
add
das
cmp
adc
js
aad
stos
rcl
dec
cmp
mov
add
cld
and
inc
jl
dec
mov
jp
adc
js
push
jl
add
pop
stos
ss
arpl
fstp
jno
add
xor
push
pop
clc
sbb
arpl
in
push
xchg
adc
pop
and
add
push
cmp
adc
js
aad
stos
rcl
dec
mov
pop
pop
clc
movs
mov
shl
clc
add
pop
shl
pop
js
inc
add
mov
shld
loop
mov
or
(bad)
(bad)
lea
aaa
push
(bad)
iret
fsub
and
es
test
xchg
xchg
pop
sbb
mov
stos
ins
and
jnp
cli
pop
aad
movs
and
hlt
push
outs
addr16
repz
mov
repnz
icebp
pop
inc
push
lock
mov
(bad)
lock
jns
sar
jae
stc
dec
pop
and
jnp
repnz
cs
pushf
repnz
repnz
push
mov
and
cmps
lock
in
js
sbb
or
lea
clc
js
pop
mov
js
fmul
mov
xchg
icebp
pop
or
lock
jb
fcom
add
push
sbb
stc
push
into
rol
jno
clc
jns
cli
adc
jb
pop
call
scas
stc
push
push
mov
pop
lods
xor
pop
sti
cli
sbb
pop
lods
fsub
rcl
push
lea
pop
inc
pusha
push
pushf
jno
call
xchg
ret
cmp
jb
in
clc
sar
sbb
lock
jb
jb
in
xor
add
sti
mov
or
mov
(bad)
pop
(bad)
jb
jge
sahf
enter
sti
lea
jno
js
jb
pop
fucom
shl
shl
pop
push
sar
lock
inc
dec
(bad)
pop
push
outs
les
jne
add
out
out
jecxz
inc
jmp
repz
arpl
xchg
test
out
out
add
push
jle
in
stc
(bad)
add
(bad)
out
mov
ins
jle
int3
sbb
sbb
in
push
cmp
pop
push
inc
jae
nop
in
push
ja
jmp
pop
push
inc
cmp
out
out
xchg
and
fsub
data16
pop
push
outs
(bad)
pop
push
outs
(bad)
pop
push
outs
add
out
out
test
int
in
(bad)
pop
jbe
add
out
out
cdq
dec
pop
(bad)
xchg
cld
and
fadd
outs
push
jg
mov
push
outs
(bad)
fsubr
outs
(bad)
fadd
or
stos
inc
popf
jo
in
int3
push
movs
pop
(bad)
das
dec
fcom
push
inc
shr
fbstp
or
jns
xchg
(bad)
fst
maxps
out
pandn
sub
mov
cmp
mov
ins
sbb
(bad)
fwait
loopne
pop
cmc
repz
push
inc
ret
clc
fadd
scas
inc
fdiv
add
in
(bad)
out
add
push
jle
in
stc
(bad)
add
(bad)
out
dec
cs
ins
jle
int3
sbb
sbb
loopne
pop
cmc
repz
push
inc
ret
adc
inc
(bad)
scas
inc
fdiv
add
in
(bad)
out
add
push
jle
in
stc
(bad)
add
(bad)
out
push
inc
(bad)
ins
jle
int3
sbb
sbb
loopne
pop
cmc
jae
push
inc
ret
xor
inc
(bad)
scas
inc
fdiv
add
in
(bad)
out
add
push
jle
in
stc
(bad)
add
(bad)
out
arpl
ins
jle
int3
sbb
sbb
loopne
pop
cmc
repz
push
inc
ret
sub
inc
(bad)
scas
inc
fdiv
add
in
(bad)
out
add
push
jle
in
stc
(bad)
add
(bad)
out
(bad)
sub
ins
jle
int3
sbb
sbb
daa
test
ja
pop
mov
xchg
pop
or
mov
test
out
adc
mov
(bad)
pop
jbe
sub
je
inc
push
fcom
pop
(bad)
das
inc
(bad)
out
inc
fdiv
inc
sub
push
fadd
pop
push
outs
push
popf
pop
or
stc
shl
cdq
jo
loopne
enter
(bad)
out
cld
pop
loop
fbld
push
sbb
(bad)
test
mov
jae
xchg
inc
mov
aam
aam
push
dec
pop
inc
(bad)
jmp
inc
push
(bad)
test
dec
loopne
push
cmovnp
push
call
jo
lock
push
out
(bad)
xor
push
ds
int
dec
movq
and
shld
and
xlat
sti
clc
(bad)
clc
mov
pop
push
js
hlt
dec
fcom
fstp
jo
xor
jns
mov
(bad)
hlt
in
das
call
push
rcr
jno
in
sti
cmp
add
xchg
mov
mov
icebp
pop
cmp
and
jnp
push
test
(bad)
es
js
clc
dec
pop
and
sar
arpl
icebp
push
push
mov
lea
stc
ins
daa
fmulp
lea
stc
daa
fild
inc
lea
push
retf
pop
(bad)
icebp
push
fadd
add
es
loopne
es
fcom
push
push
in
psllw
add
lahf
or
pop
or
cli
dec
mov
lea
mov
clc
push
pop
mov
(bad)
daa
iret
push
clc
sti
clc
(bad)
in
and
cwde
pop
ret
push
rol
jae
sahf
jne
movs
outs
(bad)
into
pop
mov
dec
adc
or
push
test
push
lods
clc
in
sahf
ror
(bad)
jno
psubq
lock
test
js
cs
popa
icebp
jns
sbb
and
cmps
or
into
pop
mov
mov
or
test
pop
jp
and
call
push
es
jbe
xchg
gs
test
or
cmps
jbe
test
cmpxchg
xchg
cmp
dec
in
add
xor
shl
dec
clc
cmp
(bad)
shl
cld
lds
jg
mov
xchg
cmp
add
jge
hlt
lea
cld
imul
mov
mov
mov
mov
mov
jl
cmc
icebp
add
sbb
shr
jnp
add
mov
inc
jl
out
add
add
add
out
mov
jnp
push
and
ds
push
les
call
mov
lds
out
mov
xchg
cmp
out
cld
rcl
cld
inc
xchg
cmp
inc
xchg
cmp
inc
jle
cmp
jno
ffree
mov
cs
xchg
cmp
inc
jp
cmp
push
sub
shl
pop
ret
xchg
cmp
inc
mov
cmp
xchg
cmp
inc
cmp
test
jle
inc
mov
push
cld
je
push
cld
je
jp
je
fwait
bound
adc
ffree
push
cdq
add
cmps
cmp
inc
mov
mov
adc
hlt
xchg
jl
adc
ffree
push
cdq
add
ins
xor
shl
dec
out
push
cld
cmc
cmps
cmp
inc
cmps
cmp
inc
cmps
cmp
inc
cmps
cmp
inc
push
scas
cmp
ror
js
adc
fisub
aas
jg
adc
fisub
call
xchg
jl
mov
cmp
repz
cmp
inc
adc
pop
ret
xchg
cmp
shl
cld
rcl
cld
inc
push
sub
adc
js
cmp
cmps
or
inc
adc
fcomp
jl
out
add
adc
mov
leave
ror
xchg
adc
inc
push
cmp
les
jnp
call
stc
icebp
add
sbb
shl
lods
pop
cli
(bad)
jp
cmp
inc
out
cmp
movs
(bad)
(bad)
mov
ds
push
les
call
mov
data16
inc
cld
je
call
rol
rcl
cld
sti
xchg
mov
cmp
in
cmp
cmp
inc
xchg
cmp
inc
xchg
cmp
inc
adc
inc
mov
imul
jg
inc
mov
add
fcom
pusha
mov
cmp
inc
int
cld
jno
adc
pusha
mov
dec
mov
xchg
mov
cld
shl
cmp
ror
js
adc
fisub
aaa
jg
xchg
mov
pusha
cwde
cmp
jp
pusha
sub
leave
inc
cmp
fstp
cld
cmc
cmps
cmp
inc
xchg
lock
inc
ffree
xchg
push
cld
sti
xchg
push
cld
hlt
ins
xor
jmp
push
and
ds
push
les
call
mov
leavew
cwde
fs
xchg
(bad)
mov
xchg
cmp
inc
in
add
sbb
shl
push
jl
cmp
inc
cmps
cmp
inc
cmps
cmp
inc
push
and
ds
push
les
call
mov
lds
into
mov
adc
outs
mov
adc
inc
xchg
or
push
xchg
mov
cld
shl
icebp
mov
inc
push
and
mov
inc
sub
xchg
cmp
sub
shl
enter
jl
xchg
movzx
cmp
inc
in
add
add
shr
mov
push
fs
or
jl
mov
ins
jl
adc
aam
mov
inc
cld
mov
mov
aam
lock
adc
xlat
xor
and
ror
iret
mov
icebp
cmps
jb
fistp
and
jnp
push
mov
or
pop
aad
dec
and
adc
push
int
and
cmp
dec
fcomp
out
dec
push
pop
(bad)
cmps
xor
dec
repz
pop
outs
sbb
jp
test
rcr
push
jp
scas
jo
and
lea
push
lods
(bad)
push
test
push
pop
es
cmps
cmps
push
cli
test
and
push
and
jp
das
jo
movs
(bad)
int3
push
movs
sti
stc
shl
jnp
(bad)
push
out
(bad)
aas
lea
push
pop
ror
pop
cdq
jno
js
xor
pop
and
into
push
mov
out
stc
ror
fldenv
xor
fsub
cmp
fdivr
jb
pop
push
mov
test
pop
stos
cmp
(bad)
pop
mov
push
outs
clc
call
push
lock
rdtsc
pop
icebp
jle
xlat
ins
daa
xchg
into
push
push
push
and
jns
jp
pop
or
lock
jb
loopne
das
mov
jnp
push
adc
lock
sar
jnp
lock
test
push
push
bound
ins
or
add
hlt
iret
pop
add
and
mov
jno
jnp
int
aas
cmp
das
jb
stc
sbb
pop
mov
das
xor
mov
adc
and
adc
and
fwait
adc
popf
cmp
test
mov
push
fnstsw
fnsave
call
mov
fldenv
ins
rcr
imul
inc
retf
mov
fcomp
adc
cmp
dec
sub
fisubr
rcr
jb
cwde
int
inc
cmp
mov
ret
fwait
repz
push
mov
hlt
push
xor
inc
inc
xor
and
leave
mov
in
mov
mov
sbb
pop
inc
out
mov
call
mov
sub
push
sbb
push
fwait
stos
call
inc
ja
ret
xchg
mov
sbb
ins
test
and
shld
movs
loopne
or
push
inc
cld
adc
(bad)
pop
jnp
and
and
jnp
(bad)
or
jnp
pop
(bad)
lock
pop
or
shld
lock
jnp
add
nop
xor
xchg
pop
(bad)
lock
pop
or
cld
fistp
retf
jb
and
(bad)
or
mov
jns
adc
sti
dec
(bad)
push
lods
(bad)
and
shld
clc
(bad)
js
cmps
out
fdivr
fist
mov
jb
pop
popf
test
jnp
aaa
lea
adc
test
icebp
in
sbb
or
rcl
adc
jae
and
rcr
mov
jp
sbb
lea
stc
mov
stc
sub
and
fiadd
sti
jns
clc
jnp
cmps
ficomp
rcl
pop
or
cmp
inc
into
push
push
pop
cmp
out
jbe
js
xor
and
sti
ins
jb
pop
cmps
inc
movs
ja
pop
es
add
cmps
std
inc
js
clc
popf
pop
fmul
xchg
mov
lea
push
or
or
push
xchg
into
ja
aad
push
cmp
jne
rcr
sbb
and
jnp
repnz
fistp
out
jns
jl
and
mov
dec
lock
sysexit
rcl
ins
icebp
push
iret
and
movs
mov
inc
push
cdq
gs
test
push
or
lock
outs
cdq
js
js
pop
mov
into
pop
mov
push
sti
aaa
lock
aad
lock
js
mov
push
rol
ret
mov
pop
js
stos
pop
clc
int
pop
clc
int
pop
clc
int
lahf
loop
and
outs
(bad)
and
in
mov
jp
push
(bad)
cli
push
or
mov
js
(bad)
pop
clc
int
retf
(bad)
std
cld
jo
in
mov
jmp
js
mov
fstp
loope
fild
cmps
inc
mov
xlat
sahf
bound
pop
jp
mov
fnstcw
mov
popa
sti
shl
pop
fcmovne
and
dec
bound
dec
cdq
movs
xchg
push
and
cmp
fwait
in
and
loop
sti
mul
pop
js
mov
fiadd
cmps
mov
bound
pop
jp
mov
fnstcw
mov
popa
sti
shl
pop
fcmovne
and
dec
bound
dec
sbb
pop
mov
push
retf
scas
jmp
mov
pop
jo
and
out
je
cmps
pop
mov
sbb
movs
fistp
popf
movs
inc
mul
pushf
stc
retf
push
call
and
xor
pop
or
cmp
dec
bound
xchg
or
dec
fisub
or
cmp
dec
bound
clc
mov
mov
scas
push
ja
movs
cmp
push
fstp
cli
dec
(bad)
gs
bound
mov
mov
movs
cmp
push
(bad)
(bad)
fimul
jns
cmc
mov
repnz
je
data16
cmp
test
repnz
daa
clc
imul
out
ss
clc
or
and
lds
sahf
fidiv
mov
clc
int
mov
clc
(bad)
mov
sahf
pop
mul
js
xor
js
pushf
mov
clc
inc
mov
pop
js
stos
sahf
ror
and
dec
call
dec
and
cmp
jno
dec
call
dec
and
cmp
js
dec
fistp
popf
scas
cmp
ds
jns
push
fstp
dec
ss
rcl
pop
inc
repnz
js
dec
inc
pop
clc
int3
mov
lds
xor
mov
loop
fstp
or
fs
dec
(bad)
fdivr
repnz
dec
mov
pop
js
and
jns
pushf
inc
cmp
pop
ret
aaa
mov
fstp
push
nop
popa
sti
int
pop
js
mov
popa
in
leave
and
push
or
data16
out
or
sub
loopne
int
fstp
or
fistp
out
pop
clc
int
pop
jg
popf
sahf
mul
fnstsw
sbb
pop
or
jne
pop
call
loope
sub
or
fstp
jecxz
pop
inc
int3
mov
fisttp
dec
inc
movs
cmp
pop
jne
push
cmps
popa
sti
int
movs
pop
and
xlat
dec
sub
jo
and
cmp
pop
clc
daa
mov
fnstsw
mov
mov
mov
pop
inc
or
add
ret
fstp
jle
ror
and
lea
daa
clc
pop
loop
test
das
shl
dec
sbb
mov
xchg
mov
pop
jns
and
(bad)
mov
repz
aad
rcl
data16
mov
mov
or
sahf
fcmove
and
xchg
dec
fstp
int
rol
daa
and
data16
mov
fild
mov
sub
pop
js
mov
popa
sti
iret
mov
inc
jo
and
ret
retf
clc
dec
rcr
int
fs
(bad)
fucom
dec
sbb
lea
stc
mul
pop
js
mov
leave
fwait
dec
push
dec
pop
dec
jno
clc
dec
mov
pushf
cli
leave
adc
int
(bad)
sar
and
in
and
std
int
pop
clc
jg
fstp
scas
xor
push
(bad)
cli
push
or
call
(bad)
pop
dec
dec
sbb
push
cdq
mov
jae
push
mov
clc
cmp
ret
jp
cmp
xchg
ret
cli
in
and
test
xor
das
loop
mov
(bad)
mov
mov
lock
lea
and
lea
movs
jnp
shld
shld
dec
sar
daa
cmp
dec
or
push
lods
icebp
pop
fdivr
or
or
(bad)
in
cmp
dec
pop
cmp
sti
pop
shl
leave
in
pop
push
dec
pop
shl
push
push
movs
(bad)
fidivr
inc
scas
jbe
js
call
cmp
sbb
and
inc
rcr
mov
test
call
rcr
(bad)
(bad)
push
repz
repz
fisttp
lds
add
and
sti
dec
mov
inc
cmp
in
dec
inc
movs
test
fnstcw
mov
movs
aas
(bad)
rcr
jl
mov
mov
(bad)
repz
dec
cli
inc
inc
jle
test
cli
push
loop
out
into
es
lea
(bad)
sqrtps
(bad)
pop
(bad)
cli
push
push
or
dec
and
jnp
jg
cmps
sbb
pop
push
jp
pop
or
or
add
rcr
xchg
push
test
ja
ins
jo
jo
bound
push
jl
pop
adc
pop
(bad)
aaa
repz
inc
fs
push
sbb
xchg
cmp
clc
jnp
jns
push
out
push
mov
jb
pop
mov
jae
pop
int
xor
cmp
outs
repz
ins
ficom
(bad)
out
jge
retf
in
lods
retf
xlat
push
jae
fsubr
stos
fs
jne
sar
cmp
ds
mov
stc
mov
xchg
lea
inc
int3
ins
das
mov
into
sbb
dec
aad
fcmove
add
arpl
call
dec
inc
jge
dec
push
imul
inc
ins
test
and
jns
inc
test
movs
jns
movs
loopne
or
jno
cwde
scas
pop
jnp
(bad)
pop
icebp
mov
bound
es
test
jbe
and
(bad)
(bad)
jnp
add
lahf
jnp
add
shl
lods
std
or
(bad)
seto
dec
pop
(bad)
lock
jae
mov
iret
sub
sar
out
test
add
test
sti
ror
mov
call
sti
int
js
mov
aas
mov
jo
fstp
sub
cmp
sub
psubb
push
fcomp
test
dec
adc
pop
pop
jno
pop
shl
cmps
push
iret
int
xchg
mov
or
icebp
pop
push
(bad)
(bad)
sti
ins
and
daa
das
and
jnp
sbb
daa
mov
push
mov
rcl
mov
(bad)
hlt
shr
scas
(bad)
into
clc
outs
js
sub
mov
scas
push
sti
xor
cmp
jnp
icebp
push
adc
shl
cmc
jno
sar
jnp
xchg
dec
jle
cmps
cli
jae
xchg
inc
sub
cli
out
clc
cs
cmps
jb
js
js
pop
dec
jmp
ret
arpl
repnz
in
shl
shl
fdivrp
test
ficomp
push
lock
psllw
adc
lock
jb
push
bound
shr
sbb
(bad)
shr
dec
push
and
repz
mov
jb
adc
pop
or
sqrtps
jb
push
cmps
sahf
cmps
fiadd
jb
fsub
sbb
fadd
repnz
les
and
ds
add
xchg
cmp
cmc
adc
lock
adc
pop
jl
aad
inc
gs
dec
aad
(bad)
ins
push
in
add
in
int3
mov
iret
test
adc
sti
fisttp
sub
sti
lea
je
lods
(bad)
and
mov
movs
mov
clc
(bad)
in
mov
mov
imul
(bad)
rcr
aad
or
xor
jb
push
es
cmp
lock
loope
and
jg
dec
jp
test
mov
add
shld
lea
ficomp
in
in
cmps
sti
ins
movs
movs
mov
pop
out
push
adc
add
(bad)
repnz
ins
icebp
push
mov
stc
dec
(bad)
jnp
jnp
stc
dec
mov
sar
clc
shld
ins
pop
clc
xchg
push
inc
or
and
(bad)
repz
ins
push
dec
(bad)
(bad)
shr
int
pop
jae
shl
test
lock
repz
clc
js
pop
mov
(bad)
clc
dec
lods
movs
fld
lods
add
or
or
or
push
test
movs
mov
cmps
pop
cld
retf
rcr
bnd
loope
arpl
mov
daa
test
inc
or
test
(bad)
pop
or
mov
push
xchg
pop
lock
jb
js
stc
cs
xor
lea
mov
sar
out
dec
jae
fs
jno
clc
jb
pop
fldenv
and
and
and
cwde
stos
mov
in
inc
pop
test
push
xchg
stos
mov
sbb
pop
xor
stos
mov
jecxz
xchg
and
mov
je
mov
sub
(bad)
sub
and
or
and
stos
mov
sbb
pop
pop
cmps
dec
xchg
and
add
jns
adc
mov
popw
imul
adc
add
adc
adc
push
sti
sub
mov
and
stc
xchg
and
movs
nop
out
push
and
and
xor
dec
adc
test
jecxz
stos
xchg
adc
push
ret
sub
add
mov
sbb
pop
xor
stos
mov
jecxz
xchg
ss
xchg
cmp
(bad)
cld
xchg
enter
enter
or
test
push
xchg
adc
mov
call
xchg
stos
out
xchg
not
imul
shl
ins
test
or
movs
jnp
shld
shld
shld
shld
shld
shld
movs
loopne
or
mov
ror
icebp
pop
adc
pop
cmp
stos
pop
jno
sti
(bad)
jnp
jo
(bad)
jae
movs
jnp
and
iret
mov
inc
mov
mov
cmps
jnp
jne
out
jne
cmp
cmc
jno
js
mov
sub
cmp
push
and
repz
fisub
(bad)
sbb
jbe
xchg
lock
mov
push
pusha
hlt
es
jecxz
test
icebp
pop
xchg
push
cli
sbb
or
pop
cwde
getsec
test
jp
imul
(bad)
sti
push
jnp
fdiv
cmp
rep
test
cld
retf
push
xchg
jnp
lock
fiadd
lock
fisubr
loope
sti
sar
xor
sub
cmps
inc
and
jnp
lock
jb
pop
hlt
inc
push
ja
mov
in
cmc
mov
or
in
cmps
shl
xchg
rol
(bad)
(bad)
shl
or
mov
sbb
sbb
cmps
test
push
dec
mov
vmread
push
(bad)
xor
(bad)
cmp
(bad)
icebp
lea
and
mov
cs
es
ret
js
inc
xchg
into
push
push
pop
pushf
popf
jns
into
pop
cli
jno
clc
stc
mov
fld
ss
(bad)
cmp
shl
es
jle
es
xchg
push
ud0
loop
push
pop
xchg
lock
lar
test
mov
(bad)
jbe
xchg
(bad)
in
xchg
jg
mov
xor
popa
popf
mov
popa
popf
mov
popa
sbb
adc
pop
loop
sbb
jae
scas
adc
(bad)
fdiv
movs
sbb
adc
popf
mov
popa
inc
xchg
jae
popf
fwait
inc
inc
xchg
jae
popf
xor
loope
mov
push
jecxz
nop
inc
sbb
xor
xchg
sbb
xor
popa
mov
xor
jle
xchg
mov
xor
(bad)
xor
push
lahf
mov
cmps
sbb
rcl
jecxz
adc
popf
mov
popa
cwde
xor
popf
xor
mov
loope
sbb
adc
add
mov
sub
dec
popa
arpl
stc
xchg
cmps
add
popa
sbb
jmp
add
mov
push
sub
jmp
jmp
loope
sahf
mov
fiadd
lds
and
jb
and
movs
loopne
or
jno
and
sub
or
mov
mov
(bad)
shld
int
js
jae
fcomp
pop
cmp
and
cmps
outs
icebp
pop
int3
pop
(bad)
(bad)
shl
sti
rcl
es
jo
sub
shr
into
push
mov
cmps
stc
dec
shl
lds
shld
js
stos
sti
push
jnp
adc
les
push
movs
test
jp
jnp
cmp
sar
adc
inc
sahf
mul
and
jnp
lock
les
and
jnp
and
jns
jp
sbb
iret
mov
sub
cmps
dec
imul
xchg
jno
sbb
repz
xlat
arpl
inc
jb
push
pop
es
add
cmps
aaa
ins
cmps
sti
int3
sub
es
mov
pop
test
xchg
or
inc
test
daa
mov
movs
add
cmp
test
lock
test
pop
nop
pop
test
rcl
jb
jo
push
jp
push
jae
pop
mov
sar
xchg
dec
mov
jo
pop
scas
ret
cmp
daa
jb
push
cmps
out
(bad)
push
cmps
out
(bad)
push
cmps
out
(bad)
push
cmps
out
lods
in
je
push
xchg
shl
push
cmps
out
xchg
in
js
inc
xchg
rol
ins
(bad)
push
xchg
mov
shl
fidiv
lea
cmps
out
popf
push
adc
unpckhps
int3
lods
push
es
lods
jecxz
mov
push
inc
call
ins
rcl
scas
shl
shl
fmul
adc
ins
mov
push
es
mov
fwait
(bad)
shl
into
xor
sub
adc
xor
adc
(bad)
xchg
iret
mov
movs
pushf
out
jno
clc
sbb
jecxz
in
jbe
xchg
or
outs
je
ds
pop
push
xchg
push
mov
in
jnp
xchg
jo
pop
adc
pop
rcr
(bad)
or
iret
cmp
jnp
and
outs
int
and
jnp
sbb
mov
jno
ficomp
aad
cmp
jp
lock
inc
jno
fisubr
in
lods
jnp
dec
fcomp
out
loop
pop
push
cmp
dec
jb
and
fstp
add
test
sar
jnp
icebp
shr
in
and
jnp
repz
(bad)
pop
aam
jnp
pop
es
jo
pop
push
sub
push
mov
movs
sub
and
shl
and
jnp
icebp
in
(bad)
and
jg
mov
mov
mov
cli
jg
jo
fs
cmovle
(bad)
hlt
nop
stc
sar
mov
or
movs
rol
js
pop
mov
pop
mov
cmp
adc
sti
cwde
dec
cwde
jnp
jnp
inc
jae
cmp
clc
push
lods
push
into
repnz
jb
xor
sar
jnp
cmp
rcl
pop
call
jb
fcmove
jb
sbb
stc
dec
pop
test
fcmovne
xchg
fdiv
jo
fsubr
mov
sbb
(bad)
mov
fnstsw
les
sbb
(bad)
cmp
and
fidivr
sbb
iret
bound
xchg
fidivr
stos
in
mov
sbb
pushf
jp
aad
sbb
or
cmp
sub
mov
sbb
(bad)
mov
sub
jge
sbb
jg
sbb
cmp
(bad)
xchg
ins
js
in
pushf
sub
ins
test
mov
lds
out
mov
test
aas
fs
pop
adc
fidivr
fist
mov
out
add
mov
or
(bad)
(bad)
sbb
adc
dec
lods
(bad)
and
xchg
shld
clc
(bad)
clc
or
sbb
cmp
call
cmp
je
hlt
sub
ror
lea
cmp
shl
lahf
div
in
xor
enter
fwait
sti
dec
icebp
in
sub
je
sub
ret
xchg
icebp
pop
or
and
jnp
push
pop
test
bnd
pmuludq
rcl
repnz
push
in
shld
lea
test
sti
jmp
xor
or
dec
and
jnp
loope
stc
js
movs
sbb
(bad)
js
(bad)
ret
faddp
not
push
jns
mov
clc
shr
test
jnp
shl
jno
lods
sti
in
icebp
rcl
call
jnp
mov
pop
sar
jbe
jae
fimul
sar
repnz
jno
mul
xor
and
lods
(bad)
push
std
xchg
jae
mov
cld
dec
outs
js
jb
pop
push
outs
dec
inc
push
inc
leave
sar
into
push
dec
jo
(bad)
stc
clc
lea
out
mov
dec
fist
mov
dec
es
cli
xchg
and
nop
test
push
or
ret
pop
sub
mov
adc
or
(bad)
xchg
cmps
pop
mov
jae
ret
fidivr
pusha
ret
fidivr
add
and
inc
or
ds
movs
sar
cmp
mov
cmp
sti
mov
inc
ret
mov
ret
fidivr
loopne
fidivr
push
pop
inc
loopne
nop
cdq
xchg
sbb
(bad)
lahf
xchg
inc
movs
imul
std
call
cmp
fisub
aas
cwde
fidivr
std
popa
ret
xor
mov
lahf
pop
in
pop
xchg
pop
jecxz
mov
movs
jns
inc
pop
mov
sbb
pop
rcr
adc
jp
(bad)
lahf
jecxz
stc
and
loope
movs
popa
das
cmp
lahf
ss
dec
add
ds
cmp
inc
adc
aas
sahf
cmp
pop
sbb
jns
movs
inc
inc
pop
jge
cmp
cmp
jns
and
loopne
nop
cdq
and
lock
test
and
cld
out
pop
call
pop
dec
jne
pop
push
ret
pop
mov
cmps
rcr
pusha
ret
fidivr
add
cmp
pusha
ret
sti
cmp
ret
push
mov
inc
inc
test
mov
inc
mov
and
or
and
cdq
loopne
lods
pushf
bound
and
fucomi
cdq
push
bound
bound
out
cdq
lahf
cmp
inc
push
bound
imul
repnz
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
movs
loopne
or
inc
adc
or
shld
lea
pop
cs
call
pop
arpl
jo
cmp
and
cmp
dec
pop
fdiv
movs
and
es
repz
push
inc
out
jbe
dec
sti
push
jb
cli
jnp
cs
(bad)
into
push
fistp
repnz
sbb
mov
jge
or
(bad)
jbe
sti
stc
push
sti
jnp
hlt
jns
push
shld
rol
clc
lock
test
ins
es
(bad)
rcl
cmps
nop
jae
inc
es
or
clc
cs
es
cmp
repz
push
arpl
(bad)
repz
mov
int3
into
pop
mov
inc
js
mov
pop
xchg
or
jmp
clc
mov
xchg
cli
out
jae
add
rcl
cmps
(bad)
jb
cmp
mov
sar
mov
(bad)
jns
pop
test
(bad)
stc
mov
(bad)
es
pop
(bad)
punpckhbw
mov
pop
(bad)
mov
xor
or
push
fild
icebp
rcl
rcl
(bad)
xor
jnp
(bad)
(bad)
inc
test
push
cmps
in
sahf
xchg
lock
mov
pop
jbe
sti
int
gs
jle
sbb
les
mov
xor
dec
xor
push
inc
xor
push
inc
xor
push
inc
test
ret
test
loopne
mov
xor
ja
test
ret
lods
jne
outs
xchg
rcl
(bad)
adc
jp
fst
shl
addr16
sbb
jbe
xor
pop
sbb
inc
test
xlat
xchg
pop
push
ins
push
cld
loop
xor
outs
arpl
push
push
jbe
jecxz
ret
push
ss
pop
test
int
(bad)
(bad)
xor
push
div
fst
ss
lods
stos
xchg
rcr
ins
(bad)
adc
int3
or
jecxz
sar
sar
xor
jecxz
and
push
jbe
int3
jbe
xor
nop
mov
xor
push
inc
mov
test
js
pop
stc
cmp
xlat
push
mov
push
ret
dec
mov
xor
push
not
fnstenv
push
(bad)
inc
mov
pop
inc
(bad)
pop
ins
inc
dec
ins
mov
ja
pop
ins
dec
cmp
arpl
fst
mov
xor
ja
fst
inc
hlt
fnclex
ret
adc
pop
xor
jg
xor
test
js
pop
and
pop
pop
in
pop
xor
arpl
mov
push
ja
js
test
arpl
fnsave
dec
jae
jbe
cmp
js
jecxz
sar
sar
retf
pusha
mov
push
inc
jae
jne
mov
test
int
jne
inc
jae
mov
xor
push
inc
xor
push
ja
cmps
xlat
mov
div
jbe
mov
fld
mov
xlat
clc
int
jne
inc
dec
test
pop
fldenv
xchg
bound
cmps
xlat
inc
int
ins
mov
mov
and
xchg
and
mov
mov
push
jns
rcr
rcl
pop
test
pop
push
inc
and
jo
fxam
test
mov
aad
xor
xlat
inc
aaa
jmp
aaa
xor
inc
jae
push
ret
lds
add
fcom
xor
ins
dec
xor
cdq
scas
mov
es
rcr
into
adc
jne
fldz
test
pop
rcr
adc
jmp
inc
stos
(bad)
adc
aad
int3
cmps
and
push
outs
test
inc
loopne
inc
jo
test
mov
or
ret
retf
pop
test
lahf
xchg
mov
(bad)
and
xchg
shld
clc
(bad)
clc
sub
fcmovu
jle
and
hlt
shl
xchg
jno
in
jl
stos
sub
cmc
jmp
sbb
sti
dec
icebp
js
into
lds
xor
inc
ja
pop
xchg
pop
(bad)
psrlq
test
(bad)
and
frstor
sti
sar
inc
dec
jb
clc
jnp
test
and
leave
gs
push
cli
xchg
ins
jo
fisub
push
sar
mov
mov
js
jp
ret
jp
stc
cs
mov
jns
stc
sar
pop
jo
arpl
ror
sbb
jnp
sti
dec
lea
mov
sar
push
jo
and
sti
push
cli
sub
lea
mov
push
outs
clc
add
fidivr
lock
(bad)
ror
xor
mov
jge
jp
pop
or
or
adc
adc
clc
jns
mov
in
daa
push
or
adc
cmps
push
mov
cmps
adc
outs
push
test
pop
cmc
jb
cmp
xchg
adc
adc
pop
test
stos
test
clc
jno
repnz
pusha
(bad)
pop
pusha
pop
(bad)
push
pusha
pop
(bad)
push
pusha
pop
(bad)
push
movs
inc
(bad)
xlat
inc
fild
mov
ins
aad
pop
scas
push
movs
dec
(bad)
xlat
inc
fild
out
lds
fbld
pusha
pop
(bad)
push
dec
gs
push
pusha
fbstp
rcr
(bad)
push
pusha
fistp
xchg
loopne
mov
lahf
mov
jo
xchg
jnp
inc
mov
into
stos
lock
and
mov
mov
lahf
sahf
je
lahf
in
test
sub
test
pop
and
xchg
mov
sbb
ja
sbb
inc
pusha
fisttp
and
or
outs
pusha
fisttp
push
pusha
fisttp
push
and
shl
push
mov
dec
leave
loopne
scas
xlat
shl
xchg
pop
(bad)
push
lahf
mov
lea
ja
or
inc
(bad)
pop
dec
iret
loopne
mov
pop
dec
and
sub
pop
retf
inc
or
fxch
mov
rcr
icebp
pop
fs
sbb
jnp
pop
(bad)
lock
(bad)
stc
fs
mov
test
sti
add
jnp
dec
pop
test
xchg
sti
mov
movs
retf
fisttp
dec
(bad)
in
mov
nop
jnp
dec
mov
jnp
push
cmps
jns
dec
xlat
jnp
dec
fdivr
sti
fsubr
add
sti
dec
jb
fwait
sub
and
cmps
(bad)
test
int
js
clc
xchg
pop
xchg
pushf
pop
outs
gs
aas
xchg
lock
stos
jae
movs
xor
mov
test
or
pop
push
cld
(bad)
pop
rep
sti
dec
cli
adc
mov
paddq
cmps
sub
js
out
(bad)
fcmovb
ds
pop
push
jle
push
sti
mov
sahf
or
jp
pop
or
loop
js
sub
pop
repz
pop
mov
jp
clc
jnp
xor
xchg
(bad)
cmps
mov
push
pop
mov
jo
(bad)
sti
push
cli
and
out
push
push
dec
push
jae
ins
(bad)
push
adc
push
test
sbb
inc
repz
xlat
or
inc
nop
jnp
mov
jnp
sti
stos
xor
clc
jnp
inc
and
push
pop
repz
stc
dec
scas
pop
cld
retf
shr
test
repz
inc
iret
lock
shl
and
jnp
into
push
sub
jnp
ja
lock
jb
fsubr
stos
in
cmps
in
jbe
test
(bad)
in
jecxz
push
jo
outs
adc
outs
pop
in
outs
pop
in
sub
in
iret
sbb
push
pop
out
adc
(bad)
pop
in
iret
adc
dec
pop
xchg
fisttp
add
in
cmp
aad
inc
cmp
inc
outs
mov
pop
pop
pop
in
out
ret
neg
outs
xor
and
sub
in
into
mov
xchg
mov
mov
test
(bad)
pushf
mov
adc
(bad)
(bad)
pop
in
aam
cdq
addr16
sbb
push
rol
aam
lahf
scas
out
cmp
in
pop
xor
xlat
stos
adc
jae
xchg
clc
sbb
xchg
clc
and
jae
arpl
xchg
scas
xchg
pop
call
movs
out
(bad)
(bad)
out
add
push
call
pop
outs
repz
arpl
xchg
ret
xchg
pop
call
daa
call
daa
call
outs
dec
xor
in
pop
xchg
mov
adc
and
pop
xchg
call
pop
out
jb
pop
outs
pop
in
outs
pop
in
outs
pop
in
je
gs
(bad)
fimul
outs
daa
in
js
gs
mov
ja
ins
es
ret
outs
pop
in
push
aaa
mov
pop
out
clc
(bad)
out
sub
in
out
adc
and
stos
cmp
jg
popf
lahf
ds
xchg
or
add
in
out
ret
sysret
gs
sub
loope
mov
inc
cmps
cdq
sub
out
in
stos
mov
cmp
mov
sub
addr16
test
in
xchg
fldcw
sub
dec
mov
mov
fsubr
and
jb
(bad)
and
out
call
inc
and
cmp
lea
in
and
stos
inc
mov
sub
dec
mov
mov
fsubr
and
jb
xchg
and
inc
cdq
and
lea
scas
inc
xchg
into
fs
pop
pop
in
das
aad
jbe
fs
adc
sbb
outs
scas
in
out
mov
mov
outs
cmp
in
fwait
jle
fistp
vmovntpd
in
pop
xor
out
or
gs
out
ret
out
pop
in
test
add
movs
loop
ret
jl
gs
(bad)
ficomp
push
es
psrlw
or
and
gs
outs
pmulhw
pop
in
outs
pop
in
outs
pop
in
xchg
fisttp
test
pop
outs
pop
in
imul
ins
pop
arpl
les
pop
in
dec
fsub
out
adc
into
pop
out
sbb
push
pop
outs
pop
in
rol
jmp
jo
arpl
(bad)
pop
out
pop
in
pop
xchg
in
push
imul
in
iret
popf
lahf
(bad)
push
pop
adc
sti
in
pop
outs
daa
sbb
out
sub
in
ins
xchg
out
cmp
fstp
pop
in
ins
add
outs
pop
in
stos
inc
xchg
adc
xchg
(bad)
sbb
xchg
outs
mov
mov
pop
xchg
mov
outs
jmp
sub
add
outs
pop
in
outs
pop
in
outs
pop
in
outs
pop
in
rol
jg
ins
es
aad
pop
outs
pop
in
rol
jae
jl
gs
repz
outs
es
xor
in
out
das
fsub
outs
pop
in
outs
mov
(bad)
pop
in
iret
popf
adc
adc
and
das
and
mov
out
add
sub
gs
push
add
pop
outs
daa
sbb
out
sub
in
ins
xchg
out
cmp
fstp
pop
in
ins
add
outs
pop
in
stos
inc
xchg
xchg
pop
iret
sbb
les
cdq
sbb
outs
xor
pop
xchg
mov
outs
jmp
test
xchg
sti
in
pop
outs
daa
sbb
out
sub
in
ins
xchg
outs
cmp
fstp
pop
in
ins
add
outs
pop
in
stos
inc
xchg
adc
dec
pop
xchg
(bad)
cmp
iretw
sbb
out
xchg
outs
mov
push
pop
pop
xchg
mov
outs
jmp
arpl
xchg
call
stos
adc
pop
sti
clc
push
pop
sar
pop
nop
lahf
jge
idiv
loopne
xchg
sbb
mov
iret
push
dec
sbb
pop
xchg
inc
ins
test
xor
ret
retf
jb
and
jnp
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
shld
stc
fs
iret
mov
cmps
mov
and
jl
jp
jnp
ss
cmp
mov
add
xchg
cmp
jns
out
jnp
icebp
in
push
jbe
test
in
inc
ds
mov
xchg
xchg
cmc
(bad)
mov
jp
test
push
cmps
pop
test
xchg
cmp
pslld
mov
pfpnacc
mov
inc
and
out
sti
jb
in
js
push
(bad)
(bad)
cli
mov
mov
in
and
pop
es
inc
movs
test
clc
jnp
(bad)
clc
jnp
jecxz
shl
js
add
pop
jb
stos
mov
mov
or
into
push
push
inc
mov
movs
add
jg
cmp
jno
(bad)
daa
pop
pop
clc
sti
clc
(bad)
pop
shl
in
stc
js
(bad)
(bad)
pop
mov
clc
jnp
push
shl
js
jb
and
push
ret
lock
clc
js
and
es
lock
pop
push
cli
jp
jb
js
out
jp
mov
adc
daa
test
lds
(bad)
aam
inc
xor
icebp
lds
clc
xlat
fnstcw
shr
arpl
add
lods
bnd
pusha
fild
je
call
mov
in
mov
in
mov
in
mov
in
mov
cmp
adc
cld
adc
movs
vpavgw
jbe
mov
loope
mov
loopne
imul
cmc
xor
pop
mov
mov
fisttp
mov
fucom
inc
sbb
dec
stos
les
neg
jo
and
jne
in
jne
fwait
jne
mov
je
and
test
add
or
cld
mov
out
push
adc
cld
mov
jnp
cmps
mov
xchg
and
jge
xchg
popa
addr16
pop
pop
add
stc
popa
mov
std
jmp
xor
and
mov
scas
cld
mov
sbb
and
xlat
mov
jl
out
mov
push
adc
mov
push
ss
dec
xchg
les
or
add
movs
les
xchg
addr16
scas
int
or
stc
gs
or
stos
or
enter
fisttp
push
pop
mov
in
or
in
fnsave
fbld
stos
mov
pop
stos
mov
mov
fnsave
mov
scas
cld
mov
and
test
test
or
or
cmps
dec
mov
jmp
je
sbb
shr
scas
or
gs
cld
or
mov
inc
or
addr16
inc
mov
(bad)
jne
add
mov
xor
in
fsubp
sub
test
mov
gs
push
movs
or
dec
(bad)
cld
inc
lods
(bad)
and
shld
clc
(bad)
clc
xchg
mov
pop
sar
sbb
int
js
sahf
cwde
pop
sbb
jbe
sti
dec
repnz
stc
xchg
repz
pop
shl
popf
faddp
outs
cld
dec
cli
cmp
jb
inc
mov
sbb
sub
jb
fisub
clc
shld
lea
bound
xor
jge
fisub
dec
test
out
fimul
(bad)
(bad)
test
or
lock
lea
clc
cld
clc
fstp
adc
(bad)
cmps
jmp
mov
clc
js
rcr
icebp
in
popa
push
cmp
jg
(bad)
cld
rcl
xor
and
xchg
mov
pop
je
or
sbb
add
jae
repz
icebp
sar
sar
cdq
jnp
lock
cmp
and
fld
xchg
sbb
rcl
pop
or
lock
jb
fimul
gs
outs
test
jnp
inc
jb
js
jb
(bad)
fwait
jp
arpl
mov
es
pop
xchg
repnz
enter
sbb
imul
jae
test
shl
out
shl
popf
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
(bad)
loopne
fdivrp
loopne
pop
repz
mov
stc
loopne
fdivp
loopne
pop
cmc
loopne
pop
repz
pop
icebp
loopne
pop
mul
mov
pop
clc
pusha
mov
fdivp
loopne
pop
cmc
loopne
pop
repz
pop
xor
dec
and
pusha
arpl
shl
fimul
sbb
dec
ss
jle
mov
jne
aad
scas
movs
out
not
iret
cdq
fidiv
xor
imul
pop
in
xor
leave
loopne
(bad)
call
popf
fidivr
mov
call
loopne
(bad)
(bad)
and
cs
fchs
test
and
(bad)
xchg
inc
pop
(bad)
cs
aam
pop
pop
adc
lahf
dec
and
and
adc
lahf
dec
and
loopne
lahf
sub
pusha
daa
fadd
and
and
aam
(bad)
loopne
(bad)
(bad)
and
cs
fchs
test
and
(bad)
xchg
inc
pop
sti
cs
fbld
pop
pop
adc
lahf
dec
and
and
adc
lahf
dec
and
loopne
retf
sub
pusha
daa
fadd
and
and
push
popf
(bad)
loopne
sahf
cs
test
lock
mov
movs
fdivr
push
lahf
popf
jmp
inc
xchg
dec
xchg
mov
sbb
add
das
pop
fild
shl
dec
xchg
mov
arpl
pop
push
bound
loopne
xchg
aad
arpl
cs
ja
add
pop
sub
daa
pop
shl
dec
xchg
mov
arpl
pop
push
bound
loopne
xchg
push
pop
fsub
lock
mov
movs
cmps
pop
push
and
mov
shl
popf
(bad)
bound
cmps
stos
push
mov
std
pop
cs
dec
and
or
bound
lahf
adc
fs
inc
dec
fs
popf
jbe
pusha
mov
in
mov
inc
cs
mov
mov
nop
xor
cs
and
call
fdivr
mov
daa
test
icebp
bound
mov
cs
popf
pop
lock
mov
in
mov
fsubp
loopne
faddp
and
in
mov
mov
popf
jmp
inc
pop
js
jmp
pop
loop
jl
pusha
xor
fistp
xlat
dec
push
and
(bad)
fwait
inc
xchg
inc
ja
popf
push
into
mov
call
aad
jmp
aad
jmp
aad
jmp
neg
call
loopne
add
sbb
cmp
sbb
pop
out
inc
pop
inc
rol
sbb
(bad)
out
inc
pop
xor
sahf
popf
sub
push
bound
rcl
adc
movs
pusha
aad
adc
cmp
movs
cmp
(bad)
out
sti
clc
(bad)
in
rol
imul
push
mov
(bad)
cmps
shld
lea
cmps
loopne
sti
xchg
clc
(bad)
cmp
cmp
mov
les
fs
pop
test
stos
(bad)
js
lods
pop
pop
mov
into
fsincos
sub
pop
lds
dec
inc
push
add
bnd
into
shr
mov
jns
jp
or
sahf
or
test
stc
dec
jp
mov
lea
mov
rcl
pop
icebp
repnz
jecxz
or
add
lods
psubb
cmc
push
dec
mov
shld
lea
push
(bad)
(bad)
clc
cmp
pop
push
or
push
shl
mov
clc
js
jo
inc
mov
xchg
cmp
add
jns
clc
clc
(bad)
imul
mov
pop
lss
push
cli
sub
cmps
jb
push
test
push
mov
push
rcr
jo
sar
test
clc
jbe
mov
cdq
sbb
add
hlt
ds
aas
push
js
loopne
jb
loop
jmp
not
repnz
pop
in
push
stc
mov
loop
repnz
arpl
outs
(bad)
sub
dec
repnz
outs
out
sbb
scas
cmp
jp
test
fdivr
test
(bad)
stos
outs
fiadd
dec
fwait
cwde
retw
fisub
cmps
cmc
xor
pop
pop
sbb
sub
cmp
retf
add
fld
das
sbb
xor
cdq
inc
sbb
mov
dec
push
sbb
xor
push
retf
sbb
pop
dec
jg
pop
or
pop
add
cmp
retf
add
dec
mov
push
dec
scas
pop
jl
mov
out
pop
js
jmp
out
pop
js
jmp
out
pop
js
dec
int3
add
out
pop
js
jmp
mov
cdq
xor
cmps
daa
jmp
inc
ins
test
or
mov
lea
addr16
or
pop
push
(bad)
shl
adc
sub
(bad)
(bad)
sub
je
xor
lea
fiadd
dec
(bad)
lods
mov
test
dec
repnz
cmp
dec
sti
imul
xor
and
jnp
cli
cmp
jo
test
adc
fistp
dec
(bad)
pmaxsw
jnp
out
mov
js
jp
aad
or
fadd
sbb
stc
std
mov
movs
popa
lea
es
jge
test
and
cmps
jb
sbb
jp
mov
dec
test
push
in
jae
shr
in
cmps
cmps
dec
lea
mov
push
jp
push
jae
and
sti
jns
js
jb
fidiv
imul
sbb
cli
iret
xor
dec
lea
test
and
lods
psrlw
mov
into
pop
push
push
push
sti
xor
pop
iret
jb
jp
dec
mov
add
daa
rol
fdivr
int3
cmps
mov
loop
sar
in
(bad)
pop
mov
sar
(bad)
stc
jno
or
mov
in
js
mov
(bad)
repnz
scas
jnp
sti
dec
lea
mov
add
inc
test
loop
cmps
clc
xchg
fiadd
jb
pop
js
iret
or
push
repnz
jb
retf
aaa
call
call
loop
or
dec
test
push
inc
inc
or
pop
xlat
call
call
test
in
inc
dec
add
add
fwait
jnp
dec
cmp
(bad)
push
jnp
mov
stc
push
mov
ror
aaa
jno
and
cmp
sti
or
repz
jnp
ja
in
xlat
cs
popa
ret
ror
jae
cmp
scas
(bad)
cld
dec
cli
sbb
or
test
(bad)
(bad)
shr
aam
(bad)
lea
data16
push
jne
jb
push
ins
mov
lea
stc
cmp
lock
mov
shld
lea
mov
cmp
push
cmp
ror
imul
repnz
shld
lea
clc
xchg
push
push
jl
cmps
stc
dec
sar
js
push
scas
clc
add
pop
push
in
daa
and
xor
push
add
cmps
fmul
cld
retf
push
pop
test
push
or
daa
in
int3
sti
aas
push
into
(bad)
sar
xchg
lds
jp
cld
jae
test
rol
jo
test
mov
push
lods
shl
lock
xlat
jb
pop
mov
push
jnp
add
hlt
(bad)
xor
movs
xchg
sar
mov
inc
(bad)
jae
jo
fidiv
xchg
js
clc
pop
pop
xor
xor
push
in
mov
pop
push
daa
push
pop
cld
mov
pop
ja
jmp
ror
aas
scas
fxch
xchg
or
push
retf
xchg
hlt
pop
sub
shl
lock
loop
out
(bad)
xor
pop
ds
int3
call
mov
inc
push
imul
fs
fidivr
repnz
or
test
int3
mov
dec
push
add
mov
out
outs
mov
sti
dec
movnti
lods
(bad)
and
sahf
shld
clc
(bad)
gs
rcl
movs
mov
ror
pop
jno
lds
jb
movs
pavgw
mov
int
clc
icebp
fsubr
loopne
xchg
(bad)
es
xchg
jb
rcl
div
mov
lods
sub
inc
test
clc
jnp
cmps
pop
jp
lods
shl
(bad)
cmp
stc
in
clc
xor
xchg
(bad)
(bad)
rcr
cli
sti
js
and
es
cwde
mov
clc
push
dec
(bad)
mov
push
cli
sub
jae
and
sti
clc
cli
dec
pfmax
jae
enter
pop
cdq
out
lock
test
in
js
adc
pslld
xchg
jmp
inc
pop
cmovl
es
in
js
pusha
xchg
jp
test
arpl
(bad)
in
jmp
rcr
sub
sti
or
js
jb
pop
jnp
outs
js
or
lds
jnp
(bad)
(bad)
push
test
adc
pop
ins
(bad)
sar
lock
aad
push
lods
cmps
jns
pop
cwde
outs
movnti
lods
sqrtps
sahf
lock
jb
xor
popa
repz
shl
push
iret
pop
fnstenv
pop
jbe
je
cmp
lods
mov
sbb
iret
xor
addr16
cmp
push
jmp
fisubr
sub
xor
dec
jmp
cs
xchg
lods
inc
out
add
push
rcr
jmp
cwde
in
xchg
mov
out
add
push
fadd
sbb
ss
outs
stc
cmp
fisub
stos
outs
outs
xor
fisub
stos
outs
outs
xor
fsubrp
mov
sub
outs
mov
sub
jmp
push
mov
cs
outs
xor
jmp
call
xor
cmc
call
xor
out
cmp
push
mov
push
xor
jmp
mov
outs
clc
add
out
cmp
out
xor
push
xor
std
fsubr
and
xor
imul
sub
push
sub
pusha
mov
data16
add
outs
arpl
sub
repnz
fsubp
test
lods
in
in
xor
std
jns
sub
test
push
cmp
in
push
sub
popa
mov
fsub
stos
in
push
xor
xor
jmp
out
mov
call
jmp
mov
data16
mov
jmp
push
cmp
cmp
in
push
sub
popa
mov
fs
mov
scas
imul
sub
outs
xor
clc
call
cmp
out
mov
sub
stc
mov
stos
outs
out
xor
jmp
icebp
mov
(bad)
loope
sub
fsubr
mov
out
cmp
pop
push
scas
out
shl
bound
cmp
jp
mov
in
fs
cwde
jg
mov
sub
popa
mov
fsubrp
xor
std
loop
stos
jle
cmp
in
jmp
push
mov
sub
clc
sub
in
cmp
in
mov
jmp
call
add
out
cmp
out
pop
mov
mov
jbe
mov
xor
out
xor
call
push
test
fs
jl
xor
test
std
push
mov
ins
outs
xor
ins
jnp
cmp
out
xor
call
push
test
jmp
imul
ins
jnp
xor
outs
xor
clc
call
cmp
out
mov
sub
jnp
xor
xor
ins
jnp
and
repz
imul
xor
jnp
mov
in
loop
mov
call
bound
test
jne
mov
sub
cli
sub
jle
sub
mov
scas
imul
sub
popa
xor
push
mov
mov
je
sub
popa
xor
push
test
ins
outs
mov
out
xor
push
mov
mov
clc
clc
sub
in
mov
mov
jmp
loop
stos
outs
outs
xor
out
mov
sbb
outs
xor
mov
out
outs
mov
push
bound
scas
ins
outs
xor
fisub
imul
sub
call
ins
mov
hlt
jnp
sub
ins
xor
hlt
outs
mov
das
fs
sub
jmp
cld
bound
mov
ins
outs
mov
call
repz
push
add
outs
mov
call
clc
add
ins
jnp
mov
in
popa
cmp
ins
call
cmp
ins
popa
xor
push
mov
mov
jl
add
in
mov
mov
std
loope
mov
addr16
and
out
cmp
out
mov
mov
outs
mov
outs
jnp
cmp
loop
mov
ins
popa
xor
push
mov
in
outs
ss
outs
repz
sub
cli
mov
jmp
jmp
jmp
imul
sub
out
xor
scas
in
out
fwait
lods
imul
mov
in
xor
out
out
mov
imul
das
imul
sub
stc
add
cld
push
mov
out
push
sbb
outs
ds
out
mov
out
jmp
out
imul
std
in
xor
stos
jmp
imul
sub
scas
ins
call
mov
das
out
ss
jmp
call
popa
xor
in
mov
imul
je
test
sub
jnp
and
push
mov
out
repnz
sub
push
sub
popa
mov
out
mov
lods
ins
and
outs
popa
mov
out
sub
push
scas
push
xor
outs
and
push
mov
outs
out
cmp
loop
mov
jmp
xor
push
mov
cmp
jae
scas
in
cmp
in
jmp
clc
imul
fsubrp
cmp
std
popa
mov
ins
push
and
mov
imul
mov
jmp
pop
and
in
mov
ja
and
in
in
xor
and
mov
gs
add
out
xor
push
cmp
cld
out
mov
push
mov
scas
out
loope
mov
in
mov
mov
in
jmp
push
cmp
loop
mov
call
jno
and
outs
mov
out
jp
and
mov
jmp
call
xor
fisubr
mov
addr16
add
ins
push
sub
outs
mov
cwde
outs
cli
ds
push
cmp
out
push
mov
imul
cmp
out
mov
sub
repz
loop
cmp
cmps
test
outs
mov
movs
jne
xor
ins
push
cmp
push
and
pop
xor
outs
xor
ins
popa
xor
in
mov
push
in
mov
scas
outs
push
cmp
jns
mov
out
mov
outs
pop
sub
call
loop
stos
outs
loop
mov
(bad)
jp
and
xor
outs
pop
mov
sub
jmp
mov
stos
outs
outs
mov
imul
and
movs
sub
and
push
cmp
jnp
mov
in
xor
in
mov
lods
call
das
addr16
sub
and
loope
scas
imul
mov
imul
xor
sbb
loop
cmp
mov
call
call
stos
sub
loop
stos
out
in
sub
jmp
mov
data16
and
push
mov
out
mov
sub
loope
mov
outs
imul
ins
cli
mov
cmp
mov
mov
fs
sbb
outs
mov
stos
sti
jmp
out
xor
fisub
mov
stc
pop
movs
stos
jne
sub
clc
jmp
fisub
stos
outs
loope
mov
push
lods
out
pusha
xor
imul
mov
fisub
sub
mov
repz
cmp
jmp
jmp
scas
ins
loope
mov
ins
push
lods
out
out
and
addr16
mov
ins
xor
jne
mov
in
xor
in
mov
ja
add
in
jmp
ins
push
lods
out
out
and
mov
imul
mov
push
push
cmp
ss
push
mov
stos
imul
jg
mov
imul
ins
imul
and
mov
in
jmp
mov
scas
out
imul
fisubr
and
in
and
jmp
in
mov
fisubr
das
jmp
outs
mov
scas
out
popa
xor
ficomp
das
ins
push
sub
loope
and
push
and
and
xor
jmp
icebp
mov
sub
xor
pop
fdiv
mov
out
outs
sub
mov
in
xor
data16
stos
ins
loope
stos
ins
jmp
cwde
pop
inc
pop
jg
mov
cwde
(bad)
pop
add
pop
mov
lahf
pushf
jnp
sbb
xchg
dec
test
pop
popf
mov
sbb
dec
mov
les
add
fdivrp
and
sbb
sbb
mov
out
(bad)
fld
pop
cmp
faddp
(bad)
sbb
and
fld
pop
cmp
pop
(bad)
(bad)
sbb
sbb
fld
pop
cmp
fdivrp
(bad)
sbb
lods
adc
fld
pop
cmp
pop
inc
sbb
lods
or
fld
pop
cmp
fdivp
(bad)
sbb
lods
add
fld
pop
cmp
pop
jmp
sbb
or
fdivrp
add
popf
mov
cwde
out
stc
and
push
inc
mov
jo
cmp
mov
cwde
icebp
mov
inc
aas
std
fadd
cwde
fldenv
loope
mov
fadd
sbb
jle
mov
pop
test
(bad)
add
call
pop
inc
cwde
(bad)
fdiv
pop
jg
std
and
sbb
inc
ins
test
cmps
xor
outs
nop
mov
and
mov
test
mov
gs
mov
in
mov
mov
xchg
shl
inc
jmp
adc
inc
push
xor
sahf
adc
inc
cmp
mov
inc
pop
movs
mov
and
mov
jecxz
mov
and
mov
dec
mov
fild
mov
push
gs
idiv
shl
mov
sub
mov
xchg
stos
mov
and
xchg
rcl
mov
aad
mov
inc
cli
into
mov
or
mov
add
mov
cmc
addr16
fisubr
shl
inc
inc
xchg
xor
out
mov
test
test
mov
push
xchg
inc
lods
test
rcl
or
mov
test
mov
rcr
inc
scas
scas
mov
jp
mov
xor
mov
out
xchg
inc
pop
test
inc
push
xchg
hlt
inc
mov
leave
hlt
shl
add
add
sub
inc
js
add
add
mov
shl
shl
add
add
add
mov
shl
mov
add
dec
add
mov
rcl
add
or
inc
sbb
add
add
add
push
add
pop
add
or
inc
std
ret
rol
add
mov
rcr
(bad)
shl
add
enter
test
inc
repnz
inc
xor
rol
sub
shr
sub
inc
xor
movs
sub
inc
addr16
rol
sub
shl
inc
loope
sub
inc
scas
mov
sub
das
sub
sub
ror
sub
sub
rol
sub
add
sub
mov
inc
sbb
sub
mov
inc
aaa
adc
inc
ret
fld
sar
sub
fld
shl
sub
loopne
inc
comiss
inc
sbb
aaa
shl
shl
inc
iret
mov
xor
dec
lods
xor
ret
xchg
xor
add
xor
or
xor
dec
xlat
xor
lea
xor
cs
inc
lea
sti
daa
xor
cmp
test
inc
mov
lock
ss
sti
or
cmp
(bad)
push
jnp
push
mov
aaa
fdivrp
sti
push
rcr
(bad)
fsub
and
movs
add
or
arpl
cmp
in
jo
fadd
jne
cmps
sbb
daa
test
lock
xor
popa
sbb
dec
jp
test
xlat
arpl
rcl
jo
mov
clc
jns
(bad)
jnp
hlt
shr
rcl
fwait
jne
and
jnp
je
inc
jnp
fldenv
(bad)
cmps
fmul
jp
lods
(bad)
shl
lods
rcl
sbb
into
pop
mov
mov
pop
add
daa
mov
movs
rol
and
jl
(bad)
das
mov
fmul
into
push
push
outs
add
stc
clc
cs
cmps
setle
xchg
xchg
lock
jb
mov
xor
fs
mov
(bad)
fcmove
jb
retf
mov
pop
test
jo
test
fnstenv
test
punpckldq
repnz
jmp
push
xor
movs
stos
dec
call
jb
test
jmp
rcl
psllw
mov
cmp
cmp
fiadd
xchg
jb
push
out
xchg
aas
mov
jg
dec
jecxz
mov
dec
jecxz
lea
mov
xchg
leave
inc
lds
inc
jle
popa
ret
aad
push
dec
jecxz
lods
pop
mov
adc
inc
pop
(bad)
sti
fld
(bad)
stos
enter
ret
push
ret
pusha
lods
iret
jb
jb
cmp
dec
aam
std
(bad)
ja
add
mov
add
outs
push
ret
ja
dec
or
popa
cmp
push
mul
xlat
jbe
or
popa
ret
mov
xor
dec
aad
ds
ja
cmp
lds
push
ret
mov
jg
mov
mov
push
ret
push
ret
(bad)
shl
mov
dec
dec
jecxz
enter
lods
dec
out
inc
pop
aad
jle
or
lods
dec
aad
(bad)
scas
ja
xchg
push
mov
jg
push
ret
ds
cmp
push
jns
loope
xor
mov
fwait
push
jle
push
ret
aad
mov
nop
loopne
add
push
inc
jg
adc
test
push
bound
push
ret
aad
scas
enter
stos
jnp
inc
adc
loope
dec
push
ret
jb
push
ins
std
pop
jg
adc
inc
push
add
push
add
push
inc
push
ins
fld
mov
mov
sahf
enter
clc
jnp
xchg
jbe
fist
lods
push
and
push
rcr
add
push
jge
mov
das
mov
mov
dec
xchg
pop
(bad)
pop
std
enter
scas
je
pop
or
pop
stc
mov
pusha
ret
pusha
inc
adc
xchg
add
inc
mov
or
push
ret
outs
adc
inc
mov
inc
mov
aaa
and
push
mov
mov
stos
clc
pop
or
sub
mov
mov
sbb
inc
mov
inc
mov
aaa
and
sbb
jecxz
in
xor
jb
jecxz
jnp
cmp
xchg
ins
aad
iret
xchg
stos
pop
mov
or
push
ret
push
ret
xchg
call
fwait
and
(bad)
and
or
ret
out
and
xlat
inc
jg
push
ret
add
push
adc
push
ss
icebp
sub
jg
mov
xor
das
push
ret
inc
mov
add
xlat
xor
sub
jg
ja
pushf
das
push
inc
jg
sub
sahf
and
push
ret
stos
cmp
jg
push
push
and
push
ret
stos
cmp
jnp
aad
mov
rdtsc
ficom
jmp
or
and
and
push
ret
test
or
push
ret
push
ret
and
mov
dec
push
ret
test
or
push
ret
clc
arpl
mov
std
imul
sar
xchg
mov
inc
sub
adc
xchg
push
ret
mov
jp
push
or
push
inc
test
mov
jg
push
ret
or
xchg
inc
mov
mov
cld
pushf
sbb
pop
cmp
ja
jg
mov
jg
aad
or
(bad)
clc
push
ret
fiadd
cmp
shl
or
aad
or
ret
push
ret
stc
push
or
xchg
sar
push
ret
stc
add
int
mov
cmp
lds
push
mov
add
push
inc
add
xlat
lahf
or
push
ret
push
ret
ja
pushf
scas
idiv
jg
das
ret
push
sahf
and
push
ret
stos
cmp
jnp
aad
mov
or
ficom
jmp
or
and
dec
ret
test
or
push
ret
clc
arpl
or
leave
cld
pushf
sbb
pop
cmp
ja
jg
or
jg
aad
or
ret
fiadd
cmp
shl
or
aad
or
ret
push
ret
(bad)
cmp
outs
sub
push
xchg
enter
push
mov
and
xchg
loopne
jb
mov
jg
push
sar
std
and
push
ret
ins
ret
sahf
dec
stc
ret
mov
pop
mov
inc
lds
rol
mov
(bad)
scas
ja
pop
ins
fild
rcl
je
inc
or
clc
sahf
enter
mov
sbb
dec
mov
jge
ja
arpl
nop
pop
mov
pop
mov
push
pop
push
inc
cmc
out
adc
ja
ja
dec
ret
ja
mov
lea
stc
outs
ja
jnp
ja
jmp
ret
ja
jmp
ret
push
shl
push
inc
ins
mov
in
sar
jnp
ja
dec
jns
ja
ins
mov
inc
pop
rol
jns
or
dec
aad
test
push
ret
stc
jb
shl
or
sahf
xchg
int
dec
push
inc
ins
mov
clc
ins
mov
in
int3
cmps
inc
jo
cmps
out
rcr
lea
not
hlt
repnz
sti
jb
rol
das
push
push
xor
repz
inc
rcr
nop
clc
sub
loopne
or
pop
xchg
xchg
int
dec
push
inc
fsubr
enter
and
inc
push
cmps
pop
fimul
push
inc
pop
imul
mov
dec
add
mov
jge
xchg
lea
mov
das
mov
dec
ret
mov
add
pop
or
outs
push
pushf
das
mov
dec
ret
mov
add
inc
icebp
hlt
nop
in
adc
inc
pop
jecxz
push
mov
mov
inc
repz
dec
popf
or
push
inc
pushf
sub
cmp
push
ret
ja
pop
add
loope
scas
ja
inc
push
mov
and
or
mov
or
push
ret
push
ret
ja
pushf
sub
cmp
push
ret
jbe
pushf
sub
add
int3
push
ret
ss
sbb
rol
dec
push
ret
ss
dec
push
ret
mov
push
push
inc
loopne
int3
inc
or
jne
call
pop
(bad)
daa
push
inc
inc
push
mov
ficomp
aad
mov
mov
push
jb
jne
jmp
mov
or
aad
mov
dec
mov
inc
sub
jg
push
ret
mov
mov
out
rcr
in
adc
xchg
idiv
fstp
(bad)
call
cmps
jg
nop
ins
lds
enter
push
jno
push
push
jno
clc
adc
sbb
rol
std
int3
xchg
mov
xlat
cmps
xor
xor
lahf
or
push
ret
stos
cmp
push
rol
pop
imul
inc
mov
or
outs
dec
pop
(bad)
cld
sar
test
dec
adc
sbb
fiadd
push
mov
test
aas
cs
rcr
inc
jbe
jo
cmp
pop
popa
std
lea
fmul
fnstenv
inc
sahf
sub
mov
mov
jbe
div
outs
lods
pop
ins
pop
sub
ret
cmp
adc
lock
test
repnz
aam
fmul
lds
fbstp
dec
aad
je
pop
xchg
nop
dec
sahf
int3
xchg
dec
cmp
and
mov
xchg
push
rcr
jg
push
ret
scas
cmp
push
jns
sub
xchg
int3
adc
cmp
ss
cmp
inc
inc
cmp
(bad)
cmp
int3
cmps
adc
call
xchg
cmps
adc
(bad)
cmp
int3
das
xchg
out
adc
xchg
dec
ds
lods
adc
inc
cli
dec
das
ins
(bad)
adc
in
xchg
adc
sbb
mov
dec
jecxz
outs
push
ret
push
jns
sbb
js
adc
push
xor
jne
pop
call
push
loope
jbe
ss
aad
cmp
lock
jbe
xor
sqrtps
lods
icebp
pop
les
inc
mov
lea
mov
iret
ss
idiv
iret
cmp
fnstsw
adc
scas
and
jnp
sub
cmp
cli
jno
pop
jb
std
icebp
cmps
retf
push
push
test
jnp
int3
test
add
test
in
jnp
xchg
shl
and
add
int
mov
movs
or
cld
dec
cli
cmp
push
lea
leave
cli
cmp
lea
out
shld
lea
cmps
test
cli
xchg
jnp
shl
bound
shl
mov
push
inc
mov
or
in
daa
fdiv
and
adc
lock
js
mov
out
rep
xchg
inc
push
jae
call
clc
sub
sbb
and
movs
jb
std
dec
cmps
je
js
js
fcom
lea
shl
(bad)
(bad)
push
sbb
jnp
fisttp
push
imul
sti
push
ror
ins
gs
cld
iret
ror
fs
shl
scas
pop
cmp
pop
test
lock
test
fcmovbe
jb
fs
(bad)
fcmovu
jb
pop
(bad)
repz
test
inc
inc
or
mov
jno
pop
xor
xchg
das
cmp
sahf
jae
movs
popf
sbb
xor
imul
xor
mov
cdq
inc
(bad)
fisub
ja
cmp
imul
loope
pop
data16
mov
test
nop
xchg
pop
jo
jmp
jle
sub
jne
nop
rcl
add
jo
cmps
add
sahf
and
sub
sbb
leave
out
pop
lods
rol
or
cmps
es
sbb
sbb
sbb
mov
movs
or
xchg
pusha
and
mov
in
xor
and
dec
inc
dec
nop
mov
movs
mov
or
sbb
mov
mov
popa
das
jne
(bad)
mov
(bad)
popa
std
mov
clc
and
loop
cmps
xor
fimul
xor
mov
into
loope
dec
shl
cld
mov
mov
(bad)
and
inc
sub
pop
sub
dec
cld
push
(bad)
fld
bound
push
xor
call
mov
into
pop
loop
hlt
and
push
in
jg
mov
inc
imul
push
cdq
inc
mov
pop
dec
push
shl
fisub
mov
into
loope
dec
shl
cld
mov
cmp
rcr
sbb
or
pop
dec
pop
sub
dec
cld
push
lea
sbb
sub
jne
movs
in
mov
into
pop
loop
hlt
and
cli
cdq
sub
cmp
dec
int
rcl
mov
pop
dec
jo
enter
movs
sub
pop
inc
mov
into
loope
dec
shl
cld
cmp
loop
jne
fild
pop
jg
or
pop
dec
pop
sub
dec
cld
push
lea
bound
push
xor
call
mov
into
pop
loop
hlt
and
fist
or
mov
dec
int
rcl
mov
pop
dec
js
xor
sub
pop
inc
mov
into
loope
dec
shl
cld
cmp
loop
dec
mov
(bad)
xchg
pop
jg
or
pop
dec
pop
sub
dec
cld
push
lea
bound
mov
cwde
fist
cmp
jne
movs
in
mov
into
pop
loop
hlt
and
mov
sub
lahf
movs
add
cmp
dec
dec
dec
inc
push
cdq
inc
mov
pop
dec
mov
fisub
mov
popa
hlt
dec
shl
std
mov
mov
pop
stos
pop
int
sub
dec
jl
lea
sbb
xor
cmc
(bad)
movs
in
and
loope
mov
hlt
and
shl
stos
fnstsw
ficom
xor
lds
dec
shl
cld
xor
pop
rcr
adc
mov
int
sub
dec
cld
push
lea
adc
push
mov
into
pop
loop
cld
and
inc
jmp
aaa
mov
inc
dec
dec
inc
push
cdq
inc
mov
pop
dec
pop
dec
inc
cmc
cmp
movs
daa
xor
lds
dec
shl
cld
mov
loop
and
xchg
inc
stos
pop
int
sub
dec
cld
push
lea
outs
add
cmp
(bad)
movs
loopne
(bad)
popa
std
mov
cld
and
shl
retf
xchg
cmp
or
mov
inc
dec
dec
inc
push
cdq
inc
mov
pop
dec
sbb
fisub
xor
loope
dec
shl
cld
xor
push
stc
rcr
xchg
push
jmp
mov
int
sub
dec
cld
push
lea
add
and
(bad)
movs
loopne
(bad)
popa
std
mov
cld
and
xor
pop
or
mov
inc
dec
dec
inc
push
cdq
inc
mov
pop
dec
and
fisub
sub
popa
std
idiv
mov
test
xor
inc
dec
inc
cld
push
xchg
lock
outs
xor
xor
cmc
iret
movs
loopne
iret
mov
into
push
mov
sbb
mov
push
dec
inc
inc
mov
daa
xor
inc
sub
popa
std
idiv
mov
sub
mov
inc
dec
inc
cld
push
xchg
fs
outs
xor
sub
cmc
iret
movs
loopne
iret
mov
into
dec
mov
add
mov
push
dec
out
gs
(bad)
and
movs
daa
xor
inc
sub
popa
std
idiv
mov
imul
les
mov
push
xchg
dec
sub
mov
hlt
std
xor
and
jl
xchg
repnz
mov
shl
shl
and
jne
movs
in
test
mov
stos
dec
push
pop
mov
mov
push
dec
pop
(bad)
mov
sub
pop
les
div
cmp
cli
fwait
and
xor
and
jl
xchg
int3
add
push
mov
jne
shl
cmp
jne
movs
in
test
mov
(bad)
push
cmp
mov
mov
push
repz
cld
push
xchg
xchg
sub
mov
mov
xor
inc
int
mov
push
dec
and
fisub
lea
popa
std
test
jmp
mov
push
pop
adc
push
repz
cld
push
adc
in
not
cs
xor
clc
cmp
jmp
xor
inc
int
mov
push
dec
ss
outs
fisub
lea
popa
std
test
test
into
dec
cmp
push
pop
sbb
push
repz
cld
push
adc
push
mov
retfw
es
xor
clc
cmp
das
xchg
stos
adc
xor
inc
int
mov
push
dec
cmps
inc
aam
fisub
lea
popa
std
test
mov
into
popa
mov
add
push
repz
cld
push
adc
push
mov
mov
call
xor
clc
cmp
dec
xchg
mov
or
mov
inc
int
mov
push
dec
sub
fisub
lea
popa
std
test
out
into
and
pop
or
push
repz
cld
push
adc
push
mov
addr16
push
xor
call
lahf
mov
and
pop
xchg
(bad)
push
icebp
dec
mov
lds
rcr
adc
mov
hlt
sub
cmp
cmp
xor
cmc
sub
fwait
cmps
xor
dec
cmc
sub
in
hlt
loopne
jne
rol
movs
es
ins
test
pop
test
ss
jnp
outs
and
lea
sti
daa
lea
cmp
mov
test
(bad)
jmp
cs
call
cmps
jnp
or
mov
jbe
pop
sub
loop
jnp
push
push
retf
cmp
shl
in
shld
cmp
add
loop
rcl
into
jno
clc
popf
mov
pop
add
addr16
gs
dec
xor
or
ror
jae
and
jnp
repnz
dec
xor
movs
sub
inc
call
dec
ret
(bad)
clc
jnp
cs
dec
fisttp
and
sti
jns
fnstcw
dec
jno
or
fisub
dec
popa
inc
cmps
xor
adc
or
push
mov
cmps
(bad)
jnp
iret
dec
rcr
out
js
jb
and
bswap
push
mov
stc
and
(bad)
lock
cli
repz
or
lea
test
les
lods
(bad)
js
sti
adc
pusha
shld
xchg
jno
jnp
jnp
mov
lock
xchg
pop
js
clc
sahf
fcmovnb
int3
rcl
(bad)
icebp
ins
cmps
mov
(bad)
(bad)
clc
lods
inc
fsub
adc
jns
inc
(bad)
daa
(bad)
out
js
pop
test
scas
iret
rcl
mov
cmp
pop
sti
mov
adc
(bad)
push
(bad)
cld
or
popf
xchg
push
movs
shr
or
fstp
test
jo
cmp
dec
pop
push
test
cmps
bound
test
clc
cmp
pop
pop
mov
jno
xchg
cld
dec
rcr
mov
out
sbb
out
sbb
lods
hlt
(bad)
lock
stos
out
bound
pop
inc
call
ds
lock
mov
cmps
lock
adc
ret
cmp
sbb
mov
lahf
ss
ror
mov
movs
shr
and
call
shr
ds
jmp
sbb
push
inc
out
mov
lahf
gs
ds
sub
in
cdq
mov
in
push
js
fsubr
ror
mov
cmp
jo
hlt
(bad)
neg
ret
cdq
adc
jo
jp
mov
sbb
jmp
inc
fbstp
cmp
push
inc
fistp
cdq
movs
push
mov
lds
inc
fistp
cdq
movs
jle
mov
gs
data16
and
cdq
cmp
sub
ins
js
add
cmp
neg
fsub
cdq
(bad)
sbb
xchg
mov
in
push
inc
out
xor
lahf
gs
es
jo
call
fidivr
dec
retf
sbb
jns
mov
sbb
sub
inc
fs
cmps
lock
retf
sbb
sub
sbb
xor
movnti
sbb
mov
push
sbb
inc
sbb
(bad)
and
pop
inc
sbb
fcmovnb
gs
test
dec
fs
xor
inc
sbb
out
push
mov
mov
push
sbb
mov
call
mov
jno
pop
rcl
data16
dec
cmovae
dec
(bad)
sub
inc
fs
mov
push
inc
fisttp
data16
cli
push
inc
sbb
cmc
les
data16
jae
sbb
cld
sbb
gs
and
lock
stos
in
pop
inc
fisttp
data16
jns
jg
sbb
jns
inc
jp
call
inc
in
sub
push
bound
lds
inc
call
inc
call
inc
sbb
idiv
sbb
inc
mov
rcr
jp
mov
inc
sbb
ret
jo
mov
inc
mov
inc
and
cdq
mov
jg
xchg
lahf
rcr
inc
jg
fistp
push
fisttp
push
stos
mov
sbb
inc
sbb
data16
jo
rcl
inc
test
mov
fistp
push
jo
call
adc
mov
push
inc
cli
mov
outs
lock
jl
pop
cmps
lock
test
jnp
or
rol
and
jp
inc
pop
inc
call
mov
sbb
dec
in
sub
lock
and
data16
inc
shl
pop
test
mov
push
aaa
fndisi(8087
push
(bad)
cmp
lock
loop
mov
ds
or
inc
mov
inc
and
jp
sbb
data16
ins
lock
out
jo
mov
fwait
lds
ror
bound
pop
inc
call
inc
sbb
lods
hlt
les
mov
sbb
ror
push
stos
cdq
pop
sbb
inc
sbb
fstp
push
lock
stos
in
pop
inc
fbstp
jmp
sub
inc
fs
mov
inc
pushfw
lods
inc
pop
test
lock
repnz
fistp
fwait
lds
js
jo
inc
mov
rcr
mov
out
push
mov
xor
bound
cmovae
(bad)
ds
cdq
push
inc
out
lds
js
pop
pop
inc
call
ror
push
jo
inc
mov
rcr
dec
pusha
lock
xchg
mov
and
sbb
gs
mov
push
jbe
mov
jge
pop
inc
sbb
cmc
les
data16
retf
pop
shl
bound
movlps
rcr
jg
bt
sbb
cmc
(bad)
lock
sbb
cmps
lahf
gs
popf
int3
in
inc
fistp
xchg
and
(bad)
stc
retf
sbb
fwait
lahf
rcr
test
cmc
sbb
adc
cmp
cdq
(bad)
mov
dec
es
sbb
mov
out
stc
ret
dec
inc
mov
in
in
in
xchg
lock
lock
jae
and
lea
popf
sti
dec
ja
adc
movs
mov
clc
(bad)
gs
arpl
sbb
test
in
xlat
stos
or
stc
dec
fdivr
adc
ror
mov
mov
jmp
xchg
mov
mov
icebp
pop
mov
rcr
sbb
outs
shl
js
(bad)
shl
(bad)
daa
lea
pop
and
(bad)
(bad)
fstp
cli
sti
clc
movs
adc
shl
adc
loop
in
daa
push
movs
inc
aad
movs
fnstenv
pextrw
push
scas
sti
in
jb
add
lock
test
es
add
test
push
es
or
and
push
mov
lock
add
(bad)
or
cdq
in
js
stos
sbb
lock
cmp
pfrsqit1
sti
dec
(bad)
daa
xchg
lds
lea
mov
push
jp
push
jb
je
imul
test
(bad)
fsub
jp
repnz
push
and
adc
pop
jecxz
je
jp
test
sbb
jg
inc
test
cmps
cmps
push
shl
sar
and
lock
arpl
jb
pop
nop
test
fsub
jb
(bad)
je
shl
popf
fmul
mov
test
lea
test
loopne
aad
mov
mov
aad
stos
test
jo
xchg
cmc
aad
scas
test
or
push
aam
cmp
mov
sub
sub
mov
enter
lock
test
fwait
mov
dec
les
and
mov
or
mov
js
adc
cmp
fmul
sub
lods
mov
inc
in
pusha
dec
push
jns
xchg
test
xchg
movs
mov
movs
loopne
or
mov
shl
lods
icebp
pop
sub
jl
adc
mov
lea
out
or
pop
dec
push
(bad)
iret
fsub
or
inc
int
outs
pop
push
add
or
or
shld
(bad)
les
je
pop
adc
xor
(bad)
cmp
jo
mov
cmp
push
test
jl
push
rcr
pop
(bad)
lock
test
movs
and
sub
ficom
out
cmp
xor
cmps
adc
cmps
push
lea
xchg
fs
ss
movs
xchg
aam
daa
mov
and
sbb
movs
jnp
shr
jnp
repnz
mov
lea
rol
rep
sti
dec
shl
lds
sbb
shr
mov
repnz
cli
jg
and
cmps
fwait
mov
pop
test
sar
xor
(bad)
sti
ins
repz
je
(bad)
xchg
lea
es
retf
inc
xchg
lock
(bad)
cmp
int3
into
pop
push
sbb
sti
or
js
jb
fdivr
add
js
jg
mov
clc
push
cli
dec
push
jno
js
out
movs
pop
sub
lock
jb
push
mov
clc
dec
arpl
push
dec
fsub
jae
movs
stos
add
int
xor
adc
(bad)
xchg
inc
ror
inc
ret
inc
hlt
out
mov
jne
cmp
mov
dec
mov
popa
shr
mov
ror
test
shr
rol
mov
popa
lea
call
mov
adc
shl
or
adc
(bad)
mov
cmc
(bad)
mov
call
popa
test
scas
cdq
pextrw
inc
loopne
adc
cdq
adc
(bad)
fwait
scas
adc
cmc
mov
add
repz
scas
sbb
sar
adc
jmp
sar
jecxz
aam
aad
mov
sub
jns
lods
adc
icebp
adc
les
mov
mov
push
rol
or
into
jmp
enter
inc
jecxz
adc
cmp
jmp
mov
push
test
cmp
jmp
retf
mov
popa
test
ror
push
les
mov
fsub
add
(bad)
shl
popa
call
cmp
mov
mov
xchg
(bad)
aas
sbb
popa
xchg
jnp
lds
imul
lds
dec
stos
packssdw
mov
xchg
jge
stos
packssdw
mov
lods
push
inc
jo
scas
sbb
mov
ror
lods
sbb
mov
shl
test
retf
popa
shl
mov
(bad)
shl
shr
cwde
pop
fcomp
movlps
popa
lea
inc
ror
or
pop
(bad)
mov
popa
lea
call
imul
mov
pop
sti
push
mov
shl
lods
icebp
pop
fiadd
inc
mov
or
aam
dec
jle
std
ins
and
movs
loopne
or
es
shl
(bad)
pop
and
movs
mov
clc
(bad)
clc
cmp
sub
jo
clc
cmps
cmp
pmaxsw
sti
ror
cmp
pop
test
push
pavgb
clc
jmp
movs
fucompp
jmp
add
mov
lock
jae
and
inc
sbb
push
out
data16
sbb
pop
std
jg
(bad)
icebp
neg
sti
xor
lea
clc
jnp
arpl
jae
jp
push
cmp
test
mov
clc
and
fisub
push
cli
mov
jo
inc
fistp
and
sti
push
cli
iret
push
or
or
xchg
into
push
mov
jae
stc
dec
rcr
xchg
icebp
sar
mov
push
add
repnz
jmp
pop
sysexit
add
sar
ins
jo
add
and
jns
or
movs
push
(bad)
iret
ins
es
mov
js
jp
loope
lea
out
cmp
ror
pop
(bad)
lock
int3
sti
sub
dec
scas
sbb
clc
(bad)
jp
jbe
fiadd
jb
pop
in
in
or
push
fisubr
jns
(bad)
ror
aad
pop
adc
sub
inc
pop
sub
out
inc
jmp
out
inc
shr
sbb
dec
cli
ret
xchg
lods
fadd
jmp
xchg
adc
imul
mov
jo
adc
cli
ret
retf
pop
adc
out
jecxz
sub
or
push
pop
test
ins
jae
imul
adc
loope
retf
pop
call
ret
retf
pop
and
dec
pop
sub
inc
pop
sub
adc
and
cs
mov
and
dec
stos
pop
cli
ret
rol
add
cdq
and
push
fcomi
mov
sar
pop
mov
leave
pop
push
test
push
jae
jmp
xchg
(bad)
jmp
pop
inc
cwde
lahf
pop
popa
lahf
hlt
pop
popa
leave
pop
retf
xchg
pop
xchg
lahf
pop
popa
jmp
xchg
rcr
popa
sub
loope
aaa
sub
jo
push
fcomi
popa
push
jbe
sar
xor
loope
adc
out
(bad)
retf
pop
data16
dec
fisubr
inc
aad
and
adc
cli
ret
retf
or
(bad)
rcl
jmp
rol
jb
test
imul
mov
fldenv
jmp
pop
and
call
dec
loop
(bad)
inc
ins
test
mov
or
dec
shld
mov
movs
jnp
shld
(bad)
(bad)
jnp
iret
cmp
jnp
and
push
mov
cmps
jnp
aas
and
cmp
iret
pop
mov
mov
cs
jbe
pop
bnd
cmp
fwait
repnz
jnp
jl
inc
cs
mov
dec
lock
fs
test
mov
pop
ds
xchg
icebp
pop
mov
mov
stc
repnz
and
psubusw
movs
sti
dec
sti
fs
xor
sar
into
pop
into
sub
pop
mov
sar
dec
push
test
ins
cmps
clc
int3
in
outs
mov
test
(bad)
repnz
loopne
(bad)
(bad)
psubb
(bad)
adc
dec
xchg
cli
inc
iret
jb
fisub
push
push
cmps
jnp
or
cmps
pop
jmp
movs
addr16
inc
jns
mov
pop
lea
aas
or
mov
xchg
test
fcmovne
cmp
pop
sar
in
jb
js
inc
repnz
or
daa
test
mov
jns
push
test
out
mov
push
mov
lods
jnp
mov
lock
test
and
sti
xor
jae
test
ins
pop
(bad)
xor
js
cmc
adc
adc
push
iret
pop
shl
pop
fdivr
fsubr
xchg
jnp
jae
les
ds
xchg
(bad)
sbb
retf
sti
retf
lea
mov
ror
add
dec
jnp
inc
mov
or
mov
mov
shr
jle
dec
jecxz
retf
retf
test
mov
rcr
aas
ror
dec
iret
retf
pop
push
fcmovu
test
daa
xlat
pushf
sub
jp
xor
sahf
pop
cli
sbb
jb
sub
aam
ds
sbb
jmp
pop
inc
adc
dec
sbb
jmp
rcl
loop
fidivr
lds
add
fdiv
jnp
dec
cmp
(bad)
push
jnp
inc
retf
sbb
pop
or
out
cmp
push
inc
arpl
(bad)
xor
cs
jnp
shl
repnz
retf
add
add
icebp
pop
mov
int
cmp
lock
call
pop
mov
(bad)
sar
rep
(bad)
dec
pop
and
jnp
(bad)
push
std
xchg
jnp
sti
ins
psubb
(bad)
pop
fucom
into
pop
mov
dec
jo
or
ficom
enter
int3
lea
stc
jnp
(bad)
dec
test
push
rcl
pop
or
lock
sbb
test
std
es
adc
jg
(bad)
cmps
iret
push
cli
sti
clc
cs
mov
lock
mov
push
add
fdiv
jnp
cmp
div
push
test
fcmove
jb
scas
pop
sar
and
lea
mov
sar
sub
add
cwde
or
jno
outs
int3
(bad)
call
(bad)
pop
mov
in
(bad)
sar
movs
jnp
mov
(bad)
sub
es
jb
js
out
dec
pop
les
pop
mov
pop
dec
lea
dec
cmps
imul
ss
repz
and
xchg
(bad)
cld
jb
(bad)
lock
repnz
mov
rol
inc
lock
sbb
jb
fwait
scas
int3
mov
pop
cld
repnz
retf
inc
fwait
mov
into
fidiv
lds
movs
jnp
das
movs
jnp
movs
jnp
push
and
jnp
call
inc
cdq
ret
and
xlat
cli
sbb
leave
in
or
pop
jnp
shl
sub
nop
mov
stc
pop
inc
jbe
(bad)
sub
mov
arpl
das
push
jle
int
sbb
nop
mov
neg
dec
jno
retf
hlt
sbb
iret
repnz
pop
jle
shl
daa
dec
jo
mov
adc
dec
imul
pop
jp
mov
ins
mov
pop
nop
mov
adc
bound
cs
ja
shl
aaa
pop
jb
mov
jb
lods
shl
adc
push
jns
ret
sub
mov
push
ja
ret
in
or
dec
jb
mov
clc
sbb
xchg
jl
into
icebp
adc
jp
shl
sub
mov
sti
and
push
lods
shl
push
cmp
mov
test
ins
popf
shl
sub
mov
ins
lea
pop
sub
xchg
lods
fld
and
mov
mov
pop
and
je
ret
jmp
mov
push
jle
int
and
jbe
mov
je
mov
jp
shl
das
push
jnp
mov
push
lods
int
adc
push
outs
xchg
mov
neg
cmp
mov
dec
ins
xchg
mov
ins
lea
pop
and
jno
mov
cli
and
mov
popa
and
or
dec
outs
xchg
mov
neg
(bad)
jmp
(bad)
mov
cmc
sbb
push
jae
mov
stc
sbb
bound
cs
jno
mov
cli
and
mov
pop
test
push
jns
mov
xchg
mov
data16
pop
and
add
ret
sub
xchg
imul
mov
stc
sbb
pop
and
outs
xchg
mov
not
cmp
cwde
mov
mov
adc
push
jl
enter
push
je
mov
cli
sbb
leave
in
or
push
js
mov
test
jl
ret
sub
sub
jne
mov
ins
nop
mov
repz
pop
jl
mov
outs
xchg
shl
inc
pusha
and
test
push
jae
mov
call
inc
mov
push
jp
mov
pop
and
(bad)
stc
sbb
pop
and
je
mov
jb
mov
sti
sbb
lea
pop
jns
mov
mov
dec
outs
(bad)
mov
clc
sbb
cmps
(bad)
jmp
stc
sbb
gs
(bad)
sbb
int3
out
adc
data16
xchg
push
sub
mov
arpl
xor
cwde
mov
add
inc
ins
xchg
mov
cld
sbb
bound
inc
pusha
and
and
in
add
mov
neg
dec
je
ret
cli
and
xchg
mov
cmc
adc
(bad)
cld
sbb
pop
and
ja
mov
ins
xchg
(bad)
in
comiss
xchg
mov
jbe
mov
push
sbb
sbb
and
or
push
jbe
mov
hlt
pop
aaa
ins
(bad)
mov
sysexit
push
js
mov
stc
push
cmp
xor
jp
aam
pop
aaa
pop
jp
shl
das
dec
jb
mov
sti
and
jae
mov
stc
sbb
and
je
mov
jle
shl
daa
dec
ins
xchg
mov
stc
sbb
cdq
mov
xchg
mov
not
cmp
mov
inc
push
lods
shl
daa
push
jae
(bad)
dec
jno
retf
out
adc
pusha
mov
jb
mov
add
dec
jbe
int
push
cmp
movs
enter
push
ja
mov
arpl
xor
(bad)
neg
cmp
and
ja
aam
and
and
jne
mov
addr16
ret
sub
mov
push
je
scas
shl
adc
sar
push
dec
ins
xchg
(bad)
jmp
retf
out
adc
push
je
mov
cli
and
xchg
mov
sti
sbb
popa
test
jo
mov
stc
and
test
pop
jp
mov
clc
sbb
popa
and
lock
cmp
xchg
ret
sbb
(bad)
adc
fdivr
sbb
pop
test
test
push
ja
shl
sub
scas
shl
adc
mov
pop
jl
mov
push
push
xor
mov
pop
jnp
retf
ds
jns
mov
imul
pop
jge
shl
sub
(bad)
mov
sti
and
jle
(bad)
out
pop
push
jo
ret
cs
outs
xchg
mov
std
es
imul
lock
ss
jns
mov
push
adc
push
ja
mov
pop
jle
shl
daa
dec
push
mov
add
pop
test
ja
leave
neg
mov
js
retf
sub
retf
out
sbb
bound
and
popf
(bad)
out
adc
int
adc
push
jbe
ret
cmp
jg
ret
and
mov
mov
jo
mov
jmp
inc
test
outs
xchg
mov
hlt
pop
cmp
lods
shl
adc
shl
cmp
nop
mov
stc
sbb
sbb
jp
mov
js
(bad)
in
adc
push
jbe
mov
bound
cs
ja
shl
das
push
jne
mov
jle
int
sbb
pop
and
mov
mov
ds
test
jl
(bad)
sub
xchg
mov
neg
inc
imul
sti
sbb
pop
sbb
imul
push
jp
shl
sub
sub
rol
push
jns
mov
imul
sub
jnp
mov
and
pop
push
out
shr
inc
outs
addr16
shl
shl
inc
dec
addr16
inc
out
inc
outs
pop
dec
dec
addr16
inc
push
addr16
inc
dec
addr16
inc
inc
addr16
inc
pop
addr16
inc
pop
addr16
rcl
inc
push
pop
in
inc
push
pusha
in
shl
in
shl
in
inc
push
addr16
inc
push
inc
in
rol
out
jae
mov
leave
xchg
in
repnz
enter
push
pop
jmp
inc
jecxz
pop
fcomi
jg
push
out
out
pop
arpl
(bad)
shr
(bad)
jmp
(bad)
push
pusha
imul
jmp
popa
imul
jmp
icebp
jns
data16
rcr
push
cld
test
pop
pop
fcom
test
pop
lods
fst
jnp
(bad)
ins
loope
cld
int3
pop
push
ficom
jbe
outs
popa
jmp
int
ret
jl
(bad)
popa
loope
jo
int
aad
jb
lds
jmp
push
shl
inc
jp
jmp
(bad)
jg
js
jmp
dec
jp
rcl
(bad)
jl
clc
imul
fisubr
retf
imul
lods
loop
dec
dec
int
imul
fincstp
dec
int3
dec
loop
dec
push
push
pop
push
sar
inc
loope
jmp
in
dec
jbe
add
loop
jle
cmps
loopne
(bad)
dec
leave
call
loope
inc
int
sbb
gs
sub
leave
popf
out
gs
sub
pusha
faddp
int3
retf
mov
and
pop
inc
int
pushf
outs
in
imul
mov
dec
cdq
outs
out
imul
dec
dec
cdq
in
pushw
cmc
sub
retf
or
and
lds
sbb
mov
mov
retf
in
hlt
mov
jecxz
lds
cwde
outs
in
hlt
enter
jmp
fidiv
shr
(bad)
call
dec
shr
(bad)
imul
shl
jmp
(bad)
into
fucomip
loopne
push
loopne
(bad)
frstor
dec
shr
fs
push
out
imul
arpl
(bad)
(bad)
shl
jns
sti
jecxz
out
ret
rcr
push
push
lock
lds
repz
jge
inc
outs
pusha
jmp
cld
jo
ins
loopne
jnp
fist
push
std
jbe
pusha
popa
imul
rcr
push
std
test
inc
inc
push
shl
inc
(bad)
jmp
push
shl
jge
std
popa
push
iret
ret
sar
jg
out
imul
jb
shl
jecxz
sti
ins
push
neg
loopne
push
leave
stc
pusha
imul
and
pop
ror
cdq
imul
out
cld
dec
int3
outs
arpl
rol
je
(bad)
cld
out
push
jecxz
dec
jnp
cwde
push
adc
fild
leave
sbb
mov
mov
dec
call
loopne
(bad)
dec
enter
(bad)
imul
dec
dec
call
loope
(bad)
int
fwait
outs
out
imul
popa
ffree
dec
dec
fwait
in
lea
mov
dec
sbb
or
and
ffree
dec
dec
cdq
in
or
mov
dec
sbb
lea
and
pop
clc
int
sahf
pusha
jmp
enter
push
inc
dec
(bad)
sbb
ret
shr
ret
cmc
arpl
fistp
test
shl
rcr
mul
dec
shr
inc
leave
bound
(bad)
inc
shl
inc
fisub
dec
shr
out
shl
(bad)
pop
loope
dec
sar
shr
les
push
shl
sti
jecxz
in
(bad)
xlat
(bad)
push
jb
inc
jns
call
xlat
push
jg
vpunpcklwd
dec
pop
push
fcmovnbe
jl
inc
in
popa
jmp
int3
pop
aad
push
jge
(bad)
out
loope
js
push
pop
pop
sar
jne
fs
jmp
je
lds
jmp
push
push
hlt
jge
icebp
loope
out
rol
push
jge
inc
gs
jmp
iret
jle
push
shl
inc
cld
in
jmp
lock
cli
loopne
ins
inc
scas
test
dec
sbb
or
fiadd
int3
pushf
loop
repnz
inc
dec
rcl
jbe
les
jmp
(bad)
into
cld
inc
sbb
xchg
jnp
cmps
loope
inc
dec
dec
sbb
or
sub
pusha
faddp
dec
dec
fwait
outs
in
jbe
mov
dec
call
pusha
pop
inc
dec
dec
sbb
or
lods
daa
loopne
inc
int3
leave
fwait
outs
out
jbe
mov
dec
sbb
gs
test
into
retf
pushw
jne
mov
dec
cwde
ins
or
mov
retf
sbb
mov
sub
bound
retf
jmp
(bad)
jp
inc
adc
push
dec
rcl
shr
jge
jbe
push
int3
shr
lds
iret
fucomip
pusha
enter
inc
shl
aad
push
out
pop
popa
jmp
fsubrp
addr16
push
imul
loop
pop
pop
std
dec
dec
push
ins
pusha
les
jmp
rcl
jle
std
jecxz
jmp
clc
lds
push
rcl
cli
inc
loopne
imul
jg
(bad)
jecxz
jmp
jg
inc
loop
jmp
jno
(bad)
imul
shl
(bad)
imul
hlt
std
inc
jb
push
dec
les
push
(bad)
jle
out
push
iret
icebp
jo
shl
inc
jo
imul
cli
loope
ins
shl
(bad)
fadd
int3
sbb
popa
mov
test
retf
push
jmp
sar
cmc
inc
xchg
popa
imul
hlt
dec
ror
bound
call
mov
dec
sbb
mov
and
(bad)
int3
leave
pushf
out
gs
stos
mov
dec
call
loopne
inc
int
fwait
out
gs
sub
retf
lea
and
ffree
dec
retf
out
jbe
and
inc
dec
dec
sbb
(bad)
cmc
aaa
and
fld
dec
cwde
in
pmuludq
dec
dec
sbb
out
cmc
sub
loop
cli
into
retf
xchg
loopne
xchg
stos
(bad)
clc
jb
push
loopne
or
rcl
push
call
retf
in
inc
popa
jmp
dec
pop
jmp
dec
(bad)
ins
iretw
pop
push
pusha
dec
inc
loopne
rcr
loop
push
jmp
(bad)
call
int
outs
inc
inc
jecxz
loopne
inc
enter
std
inc
jno
call
push
push
cmc
inc
jo
call
push
shl
lds
call
fcom
icebp
cli
inc
out
imul
shl
sti
inc
clc
(bad)
jmp
(bad)
push
repz
inc
(bad)
bound
inc
ret
dec
push
push
jne
lds
call
push
push
cmc
arpl
jne
imul
sar
lds
jmp
je
vmovdqu
jl
aad
fcmovnbe
icebp
cmc
inc
jl
jmp
ret
dec
dec
pop
ins
loopne
hlt
cmps
push
pop
pop
ret
sbb
loope
repnz
mov
dec
bound
(bad)
pop
dec
push
push
dec
dec
retf
(bad)
jp
mov
dec
sbb
or
pop
inc
into
retf
mov
mov
retf
pushw
jne
and
fiadd
leave
fwait
ins
out
cmc
sub
retf
out
jne
and
ffree
into
retf
sbb
jne
and
pop
lds
sbb
push
cmc
sub
dec
sbb
jne
mov
retf
out
jne
and
jns
dec
pop
out
jmp
clc
jb
popf
loopne
or
(bad)
push
pop
push
imul
arpl
fucomi
jecxz
push
out
jmp
(bad)
push
fsubrp
popa
retf
pop
ja
into
(bad)
jne
dec
(bad)
imul
(bad)
rcr
pusha
dec
fsubr
dec
fucomip
mov
dec
fisubr
leave
push
outs
in
fisub
(bad)
jnp
int
in
popa
(bad)
push
pop
jnp
dec
shr
popa
inc
int3
bound
pop
inc
hlt
dec
push
idiv
arpl
ret
dec
inc
push
push
cmc
inc
jb
push
push
shl
stc
lds
imul
push
jbe
inc
jne
call
dec
shr
inc
leave
loop
fistp
int
shl
bound
(bad)
jmp
rcl
icebp
(bad)
lds
imul
shl
out
jb
jmp
(bad)
jae
inc
jmp
imul
(bad)
repnz
xor
aam
pop
lds
xchg
in
out
ja
test
int
jmp
pop
dec
retf
imul
fild
retf
addr16
cmc
sub
(bad)
ffree
into
dec
sbb
data16
cmc
test
jecxz
inc
iret
retf
out
hlt
test
arpl
inc
dec
retf
out
cmc
ss
int3
sbb
addr16
je
mov
dec
sbb
out
hlt
aaa
mov
retf
pop
in
out
je
and
ffree
into
retf
sbb
jne
and
fld
retf
pushw
cmc
test
loop
jns
dec
lahf
loopne
mov
scas
and
enter
or
jge
fcom
ins
pusha
inc
iret
bound
pop
in
loopne
shr
jmp
pop
in
fs
pop
push
jg
xbegin
popa
xlat
leave
jbe
fcmovu
jmp
addr16
pop
pusha
in
fucom
push
shr
(bad)
shl
inc
pop
popa
jmp
pop
call
fs
retf
push
push
(bad)
push
out
lds
push
pop
jl
retf
popa
inc
retf
loop
loopne
(bad)
jae
push
in
pusha
inc
inc
loop
pop
pop
jl
dec
shr
loope
dec
(bad)
jmp
dec
push
imul
ja
retf
shr
vpunpcklwd
rcr
stc
int3
push
imul
arpl
in
hlt
test
addr16
imul
shl
lds
imul
push
cmc
clc
inc
repnz
jmp
fcmovnbe
cld
test
jmp
jns
(bad)
jmp
movs
rcr
ffreep
dec
retf
data16
scas
loope
into
iret
dec
xchg
loop
std
mov
fs
lds
xchg
pushw
je
mov
retf
addr16
hlt
test
arpl
dec
xchg
je
cmp
retf
xchg
jae
cmp
pop
ret
iret
dec
add
aaa
cmp
pop
inc
iret
retf
cwde
ins
out
hlt
mov
arpl
retf
pop
ins
out
je
cmp
fld
sbb
pcmpeqb
cmp
fadd
dec
retf
sbb
xchg
cmc
aaa
mov
dec
sbb
lods
and
dec
fwait
out
in
div
pop
push
outs
inc
(bad)
loope
dec
pop
out
out
shr
imul
imul
push
sar
pop
leave
(bad)
shl
in
lock
retf
fsubr
out
fneni(8087
in
frstor
retf
data16
shl
inc
fsub
push
shr
dec
shr
inc
pop
popa
push
shr
loopne
push
out
fs
inc
loop
into
fcomip
bound
out
gs
imul
shr
inc
loop
push
pop
hlt
jg
push
out
inc
pop
loop
int3
fcomip
std
retf
lds
jmp
enter
inc
pop
loope
retf
addr16
push
loopne
inc
fsub
int
imul
push
outs
in
inc
loop
push
fucomp
loopne
push
out
imul
(bad)
jmp
jmp
pop
inc
dec
dec
shl
jl
jne
call
push
shl
jl
cld
arpl
les
xlat
sar
cli
(bad)
in
jmp
ret
fwait
push
and
fild
pop
ins
pcmpeqb
mov
dec
pop
ins
pcmpeqb
fadd
dec
cwde
in
out
je
mov
dec
pop
in
xchg
hlt
sub
cwde
ins
addr16
jne
and
pop
lds
cwde
in
out
hlt
test
into
retf
out
jne
cmp
pop
les
push
ins
out
cmc
sub
retf
sbb
adc
mov
dec
push
loopne
or
sub
pop
pop
inc
int3
dec
sbb
in
cmc
imul
(bad)
push
shr
gs
push
out
in
fdivp
out
pop
jmp
fstp
jge
stc
imul
enter
iret
int3
lds
pop
outs
in
pop
loope
retf
shr
data16
shl
inc
pop
loope
dec
pop
imul
push
pusha
in
fucom
push
pop
push
dec
shr
in
pop
loope
dec
pop
push
gs
imul
in
data16
(bad)
jge
shr
(bad)
jmp
outs
in
(bad)
dec
pop
in
loopne
shl
imul
loope
retf
shr
addr16
shl
(bad)
fucom
push
pop
imul
shr
(bad)
pop
popa
push
pop
ins
(bad)
enter
(bad)
frstor
dec
fucomip
addr16
shr
inc
retf
loop
(bad)
pop
jnp
inc
push
imul
fnstcw
rcl
(bad)
les
call
int
mul
je
jmp
aad
clc
test
in
data16
mov
(bad)
fadd
iret
retf
pop
ins
out
je
cmp
pop
(bad)
cwde
ins
out
hlt
mov
arpl
retf
pmuludq
pop
(bad)
iret
retf
cwde
in
out
hlt
sub
pop
inc
dec
dec
sbb
cmc
test
loop
inc
into
dec
pop
in
out
hlt
aaa
mov
retf
cwde
in
out
jne
mov
dec
pop
in
out
cmc
sub
retf
addr16
test
dec
dec
sbb
in
ja
mov
enter
mov
out
iret
rcl
loopne
inc
fsub
push
shr
inc
push
out
jmp
pop
mul
pop
ins
addr16
dec
inc
ja
ficomp
dec
jg
addr16
hlt
pop
jg
dec
vpcmpgtw
in
fucom
jmp
shr
inc
push
pusha
imul
popa
push
push
ins
addr16
shr
jmp
pop
popa
push
pop
push
inc
shl
inc
(bad)
retf
push
jmp
(bad)
push
out
jmp
fldenv
rcr
call
gs
(bad)
loop
rcr
repz
shr
inc
(bad)
loope
dec
pop
jne
retf
data16
imul
jmp
frstor
retf
push
imul
outs
in
pop
popa
push
shr
data16
shl
imul
popa
jmp
loopne
inc
pop
loop
retf
shr
addr16
push
outs
in
pop
loop
rcr
loopne
push
jmp
(bad)
imul
shr
les
jmp
dec
push
mul
lds
jmp
into
dec
push
shl
inc
out
imul
les
xchg
je
mov
dec
cwde
in
gs
cmc
test
bound
retf
sbb
out
cmc
ss
dec
push
ins
out
je
and
lds
xchg
je
mov
dec
xchg
repz
mov
retf
pop
ins
adc
mov
dec
xchg
jne
mov
retf
sbb
je
cmp
retf
gs
div
dec
dec
sbb
data16
ins
jl
push
pusha
imul
loope
dec
shr
in
shr
jmp
(bad)
leave
fsubr
in
dec
sti
stc
data16
pop
retf
out
loopne
jbe
pop
jno
dec
inc
jbe
int
ins
addr16
ret
bound
pop
cmc
(bad)
enter
(bad)
jmp
leave
shr
gs
int
imul
shr
inc
ret
(bad)
jmp
dec
shr
loopne
inc
bound
pop
(bad)
cli
dec
push
push
inc
dec
(bad)
jmp
dec
shl
arpl
ja
push
(bad)
jp
push
shr
inc
iret
bound
fdiv
jp
push
outs
pusha
inc
pop
popa
push
shr
loope
shr
gs
lds
into
fisubr
dec
shr
in
pop
popa
jmp
out
in
(bad)
dec
pop
jmp
dec
shr
inc
pop
loop
rcr
cli
dec
shr
inc
arpl
fdivr
sti
int3
push
ins
pusha
les
call
dec
shr
ret
ficomp
jae
push
je
inc
jge
call
aad
inc
lock
iret
dec
xchg
out
je
cmp
pop
(bad)
iret
retf
xchg
hlt
mov
arpl
dec
xchg
je
cmp
pop
inc
dec
retf
out
hlt
sub
dec
push
in
out
hlt
aaa
cmp
retf
xchg
adc
cmp
int3
xchg
addr16
hlt
aaa
mov
retf
xchg
out
hlt
aaa
cmp
dec
sbb
nop
jne
cmp
dec
jne
push
push
outs
out
shl
inc
pop
popa
push
shr
in
shr
imul
push
int3
pop
mul
rol
jns
inc
into
dec
ror
fcos
jno
loop
div
dec
inc
aad
icebp
clc
(bad)
in
jmp
iret
push
push
call
iret
shl
inc
jo
push
push
shl
jns
jg
jmp
pop
sar
inc
pusha
out
push
dec
and
jae
adc
data16
lods
cs
ret
iret
int3
fwait
imul
jae
das
loopne
(bad)
jo
popaw
imul
push
inc
push
shr
mov
stc
int
jge
(bad)
in
in
pop
idiv
shr
out
(bad)
popa
jmp
imul
inc
loope
rcr
std
dec
push
imul
inc
loope
in
stc
retf
push
push
jbe
(bad)
dec
outs
push
dec
retf
pop
jle
inc
popaw
fs
(bad)
shl
std
lds
imul
shl
vpsrad
imul
(bad)
jmp
mov
arpl
dec
pop
ins
out
cmc
sub
loop
les
xchg
hlt
aaa
mov
int3
cwde
ins
out
cmc
mov
fs
(bad)
iret
retf
xchg
je
mov
dec
test
repz
leave
dec
add
xor
in
ret
dec
retf
add
mov
in
ret
enter
out
jae
mov
dec
xchg
in
ja
ret
loope
(bad)
fbld
dec
shr
data16
push
out
jmp
pop
(bad)
jmp
in
in
pop
outs
rcr
js
pop
jo
push
int
cli
fmulp
jno
push
int
stc
(bad)
dec
in
cld
arpl
inc
leave
rcl
hlt
jge
cli
jecxz
in
(bad)
repnz
shr
(bad)
int3
loop
pop
pop
(bad)
icebp
into
shr
loopne
dec
(bad)
jmp
dec
shl
inc
lock
pop
pop
ror
push
hlt
inc
jo
jmp
pop
fbstp
dec
out
in
rcl
(bad)
icebp
je
clc
pusha
fs
ret
rcl
jbe
(bad)
mul
push
fld
repnz
push
out
jge
pop
popa
push
pop
repz
dec
push
icebp
out
stc
loope
rcr
cld
dec
push
outs
out
fndisi(8087
jmp
out
pusha
inc
fsub
dec
pop
cmc
bound
imul
gs
mov
push
repnz
jb
jmp
jae
stos
in
ret
int
adc
loopne
dec
pop
pop
pop
(bad)
icebp
dec
clc
imul
ja
sub
(bad)
iret
sbb
sti
leave
stos
push
pop
pop
jp
dec
jmp
pop
fild
pop
ins
out
cmc
aaa
mov
dec
push
ins
adc
cmp
pop
les
pop
ins
addr16
ss
dec
add
xor
dec
retf
push
jmp
xchg
je
mov
dec
test
adc
cmp
dec
test
repz
in
inc
dec
retf
push
ins
pusha
adc
mov
arpl
ret
iret
dec
push
(bad)
out
inc
jae
rcl
pusha
out
fsub
dec
push
imul
outs
in
pop
popa
push
shr
dec
push
out
fs
pop
out
imul
jmp
retf
loopne
fdecstp
arpl
in
pusha
dec
(bad)
ins
loope
pop
ins
pusha
retf
pop
ins
addr16
pop
loopne
inc
fndisi(8087
jmp
pusha
in
fsub
dec
shr
inc
shl
(bad)
fsubp
push
push
imul
push
loopne
(bad)
pop
popa
jmp
loopne
inc
(bad)
dec
shr
in
push
jecxz
vpcmpgtb
shl
in
shl
shl
in
enter
lds
imul
outs
lds
push
pop
loop
(bad)
push
outs
imul
push
pop
loope
leave
push
out
inc
shl
inc
pop
popa
push
push
in
inc
push
pusha
in
frstor
retf
push
ins
addr16
push
loopne
(bad)
(bad)
into
pop
call
gs
inc
popa
jmp
repz
jg
imul
(bad)
dec
push
sar
je
data16
fs
mov
dec
dec
(bad)
jmp
fcmovbe
fst
imul
loop
inc
dec
retf
sbb
adc
mov
arpl
dec
xchg
je
mov
dec
xchg
adc
mov
retf
xchg
pusha
adc
ss
inc
enter
out
jae
mov
retf
test
out
repz
in
ret
add
xor
fs
ret
enter
adc
mov
retf
cwde
arpl
imul
loope
(bad)
(bad)
jmp
popa
push
push
loope
inc
shr
(bad)
push
loope
(bad)
shl
push
push
out
in
fild
dec
fucomp
out
fucomp
addr16
out
fneni(8087
in
fucomip
addr16
push
outs
fs
pop
popa
jmp
out
jmp
fabs
imul
push
out
in
(bad)
(bad)
jmp
outs
in
pop
popa
push
pop
jmp
in
pop
(bad)
jmp
icebp
arpl
dec
jne
in
dec
js
ffree
int3
pop
clc
stc
int3
in
repz
inc
arpl
push
imul
out
lds
(bad)
std
dec
repnz
imul
cli
dec
cmc
loope
fcomp
jl
push
imul
inc
loop
rcr
jmp
pop
bound
fild
shr
imul
bound
fucomip
loopne
shr
inc
pop
loop
int3
shr
data16
shl
push
frstor
dec
push
jmp
(bad)
push
retf
loope
icebp
loope
fs
pop
ret
(bad)
ja
xchg
ins
out
je
and
fld
pop
in
xchg
je
mov
retf
add
xor
dec
dec
test
pusha
adc
ss
enter
loopne
jb
mov
dec
test
adc
mov
dec
add
xor
enter
out
repnz
in
inc
dec
retf
test
repz
in
stc
iret
dec
adc
in
shr
push
push
pusha
imul
popa
push
pop
je
dec
push
in
inc
inc
bound
fdiv
leave
shl
gs
repnz
addr16
(bad)
leave
rcl
call
push
pop
lds
push
call
imul
shr
jl
cmc
jecxz
(bad)
jae
enter
inc
dec
arpl
fcompp
clc
dec
iret
push
imul
fistp
hlt
dec
push
jmp
pop
jb
int3
shr
addr16
dec
(bad)
jmp
rcl
je
out
jl
repnz
fmul
dec
pop
jmp
fist
test
ins
retf
push
ret
pop
fadd
lock
ins
jmp
push
loop
clc
int
in
popa
out
ror
iret
push
lock
inc
js
jmp
lock
(bad)
imul
inc
xlat
push
ja
(bad)
enter
ret
jns
rcl
ja
(bad)
mul
call
rcl
jge
repz
jmp
push
repnz
outs
fs
inc
icebp
jne
shr
vpacksswb
fdiv
jle
push
imul
dec
in
fcomp
inc
push
rol
repz
test
jae
mov
retf
test
xchg
jae
cmp
retf
add
loopne
jae
mov
int3
test
out
jb
mov
retf
test
loopne
jae
aas
fs
inc
leave
dec
push
in
addr16
ss
int3
add
xor
enter
pusha
adc
xor
leave
dec
loope
imul
dec
push
repnz
(bad)
out
jmp
fcmovbe
std
test
imul
jmp
lds
push
pop
push
je
inc
cld
loop
out
dec
shr
loopne
shl
push
pop
ja
dec
shr
vpunpcklwd
dec
pop
in
addr16
push
pusha
imul
loope
retf
addr16
push
loopne
inc
fsub
int3
shr
out
push
out
jmp
pop
popa
push
fucomip
data16
push
outs
imul
jmp
out
fs
pop
in
int
imul
out
push
pop
outs
push
pop
ja
leave
push
loopne
(bad)
fisub
dec
fcomip
cld
leave
shr
iret
jecxz
pop
pop
(bad)
jne
push
jmp
pop
jo
iret
shr
addr16
into
bound
pop
jge
retf
loope
dec
bound
fidivr
rcl
mul
inc
cmc
loop
out
inc
dec
rcl
idiv
loop
ins
rcl
sar
je
pusha
in
imul
dec
jo
xchg
or
and
int
xchg
push
xor
dec
int3
dec
pusha
jmp
(bad)
js
sbb
adc
mov
dec
add
ss
int3
test
adc
mov
dec
add
loopne
jae
ds
inc
dec
dec
add
xor
dec
dec
test
addr16
ss
int3
add
xor
gs
ret
add
pusha
xchg
jb
mov
dec
push
ins
addr16
call
jae
rol
jns
push
loopne
or
pop
das
fst
jge
inc
jmp
ficom
inc
loop
jl
xlat
(bad)
pop
shl
jns
jae
push
dec
shl
(bad)
(bad)
jmp
pusha
jmp
pop
loope
dec
shr
in
shl
inc
fucom
push
shl
loope
shr
out
ret
(bad)
fdiv
jle
push
ins
out
inc
loop
push
pop
in
jl
push
out
jmp
fisub
int
jp
retf
shl
jecxz
enter
dec
push
dec
rcr
inc
jb
jmp
loope
ja
retf
dec
popa
fs
inc
stc
dec
push
inc
stc
leave
imul
fdivr
dec
jecxz
imul
rol
shr
lds
call
enter
inc
int
out
pop
pop
cli
cli
dec
aad
loop
retf
in
pop
(bad)
int
jmp
inc
dec
fs
aam
jb
(bad)
cli
ins
imul
fmul
dec
popf
jbe
test
das
loop
(bad)
dec
dec
xchg
jmp
push
cmc
mov
dec
dec
stc
imul
sub
(bad)
rol
xchg
jae
cmp
dec
test
xchg
jb
mov
dec
test
adc
mov
int
jmp
fcmovb
dec
dec
add
loopne
repz
in
inc
retf
imul
xor
gs
retf
jmp
xchg
jno
cmp
ror
imul
mov
pop
iret
leave
int3
sub
mov
and
push
ror
out
hlt
mov
repz
pop
outs
jmp
inc
cli
(bad)
pushf
loopne
xchg
dec
stos
pop
shr
lds
push
dec
shl
(bad)
push
shr
in
push
pusha
imul
jmp
pusha
imul
push
fmulp
dec
push
shl
std
inc
jle
call
into
push
mul
inc
jg
push
iret
shr
loopne
fisub
xlat
pop
inc
enter
jg
jge
push
neg
fstp
into
iret
xchg
jmp
es
retf
rcl
ins
clc
jmp
push
(bad)
inc
push
mov
(bad)
popf
in
xor
ret
push
sbb
pusha
or
repz
dec
loop
push
pop
std
arpl
(bad)
jl
jnp
neg
inc
ret
enter
hlt
push
repz
repz
rcr
jb
les
ins
int3
iret
(bad)
push
push
ja
inc
cmc
call
push
pop
fld
into
xchg
in
cld
cld
dec
aam
push
push
jns
inc
push
outs
data16
stos
xlat
pop
pop
jl
retf
outs
push
adc
sub
pop
pop
dec
dec
retf
pusha
xchg
jb
mov
dec
add
xchg
icebp
xor
dec
add
pusha
adc
mov
dec
sub
jo
cmp
ror
jmp
adc
fild
dec
add
icebp
mov
gs
ror
jmp
xchg
jo
mov
dec
sub
adc
fild
dec
add
data16
mov
jae
sub
sub
out
jb
retf
jmp
ret
push
outs
or
mov
dec
ret
loop
iret
fild
retf
gs
pop
loope
iret
pop
push
fs
jmp
enter
inc
fsubp
push
fst
ret
push
push
repz
jnp
push
push
shl
std
les
push
push
push
out
cld
(bad)
jmp
aad
std
jp
out
in
jae
fstp
pop
ror
adc
jg
repnz
test
push
sbb
jg
iret
xor
dec
ret
push
push
jbe
xchg
clc
and
outs
mov
adc
mov
es
jnp
dec
ins
bound
(bad)
out
aad
dec
jecxz
push
sub
(bad)
(bad)
aad
or
fldlg2
in
cmc
push
inc
jnp
inc
jnp
push
jne
inc
push
pop
je
lds
jmp
inc
test
in
out
hlt
push
repz
rol
jnp
push
outs
out
dec
ds
fistp
jmp
in
jae
lods
fstp
ror
sub
xor
retf
add
out
jno
cmp
inc
retf
imul
mov
data16
dec
int3
add
loopne
jo
cmp
pop
ror
jmp
xchg
jno
cmp
dec
les
pusha
adc
pop
inc
dec
int3
add
loopne
icebp
xor
int3
sub
icebp
mov
out
inc
retf
out
in
jbe
je
push
inc
ja
xchg
lea
and
pop
jo
enter
adc
pusha
fild
inc
test
xchg
jae
mov
dec
(bad)
push
imul
popa
in
frstor
fcomp
inc
fst
push
push
outs
addr16
out
jnp
push
loopne
inc
pop
loop
push
fst
aad
jae
inc
clc
jecxz
jmp
shl
jle
jg
call
rcl
std
inc
inc
loop
arpl
ret
fcom
jo
jmp
lods
aam
repnz
stc
add
aas
mov
mov
shl
jg
fsubp
(bad)
xlat
pop
loope
idiv
xchg
sti
das
and
inc
leave
dec
popf
imul
sub
gs
inc
retf
loope
lock
dec
aam
jbe
cld
shl
jecxz
scas
ja
retf
call
jne
into
push
jnp
les
mov
inc
xlat
shl
loop
jns
jmp
pusha
pop
into
repnz
mov
loope
jo
dec
iret
ror
test
mov
(bad)
dec
call
stos
push
pop
fimul
retf
pusha
xchg
push
mov
dec
add
lock
dec
sub
adc
xor
dec
add
adc
xor
out
ror
push
adc
xor
int3
add
xchg
icebp
xor
out
ror
imul
mov
addr16
dec
dec
add
pusha
xchg
repnz
out
inc
dec
int3
cwde
outs
mov
sti
dec
push
inc
test
fs
scas
mov
enter
or
shr
lds
out
fs
cmc
sub
dec
enter
dec
push
jmp
fbld
pop
fisttp
(bad)
jbe
les
push
dec
shl
jmp
es
fistp
dec
dec
in
loop
jb
dec
inc
aad
jne
inc
std
arpl
call
shr
inc
loope
out
and
(bad)
sub
test
xor
mov
scas
mov
xchg
movs
or
add
adc
and
cmp
mov
scas
repnz
pop
lahf
lahf
mov
shl
mov
pop
push
je
aam
popa
les
es
retf
retf
dec
fwait
inc
div
jae
dec
push
cli
lds
out
jle
ficomp
icebp
jl
js
jmp
dec
jae
(bad)
jmp
push
(bad)
pop
dec
push
fmulp
lock
add
(bad)
inc
dec
pop
in
out
jb
lods
pop
fmulp
iret
dec
sub
mov
out
ror
sub
jo
cmp
fadd
dec
sub
xchg
jo
mov
dec
sub
adc
fcmovnb
dec
retf
sub
xchg
jo
cmp
inc
dec
int3
add
pusha
adc
fiadd
dec
add
pusha
adc
pop
inc
dec
dec
sub
adc
mov
pop
(bad)
sbb
mov
je
push
(bad)
cmc
inc
cdq
out
or
mov
inc
in
imul
push
inc
cli
(bad)
cdq
out
in
jbe
mov
dec
ret
loop
dec
shr
dec
push
popa
in
(bad)
push
pop
dec
rcr
cmc
js
cli
jecxz
test
rcl
bound
shl
jmp
jbe
push
(bad)
fild
test
push
jne
lds
push
pop
push
imul
jmp
out
mov
mov
cmp
xor
or
mov
movs
mov
sub
sbb
pop
sub
cmp
xchg
xor
prefetch
or
cmp
int
dec
push
retf
jp
xchg
clc
mov
stos
mov
rcr
hlt
hlt
dec
push
jp
(bad)
hsubpd
pop
fidiv
inc
addr16
jge
movs
loop
dec
jae
(bad)
jmp
fmul
icebp
enter
push
cmc
ds
fld
push
in
jge
repz
dec
add
adc
mov
addr16
dec
dec
add
lock
out
iret
retf
dec
sub
cmp
fcmovnb
inc
dec
sub
push
retf
int
imul
xor
dec
sub
jo
cmp
fcmovnb
dec
dec
add
pusha
adc
pop
ror
sub
adc
fcmovnb
retf
out
gs
fnstenv
inc
test
stos
mov
dec
pusha
out
jmp
les
xchg
pcmpeqb
dec
ret
(bad)
jmp
popa
in
fbld
fcomp
pop
push
cmc
js
jnp
push
rcl
(bad)
jmp
mov
push
popa
sub
jl
rcr
pop
push
cmc
jnp
jle
call
fstp
lock
push
dec
stos
lods
jmp
or
and
xor
fwait
adc
and
adc
daa
mov
sub
call
sub
cmp
movs
add
clc
mov
retf
push
int3
sti
dec
xchg
dec
(bad)
rcr
dec
lock
jae
dec
push
cli
addr16
in
jge
fstp
jb
inc
jns
push
(bad)
and
jae
push
imul
fimul
jno
or
loopne
idiv
inc
dec
xchg
in
jns
repnz
gs
dec
dec
int3
add
push
les
loopne
jg
mov
int
imul
jle
mov
int
imul
push
mov
dec
add
push
jg
cmp
iret
inc
int3
add
pusha
xchg
lock
int3
sub
xchg
jo
cmp
inc
retf
int
jmp
xchg
icebp
xor
out
les
out
in
neg
je
push
inc
ja
cwde
outs
in
jbe
mov
dec
pusha
out
jmp
ret
add
out
repz
dec
dec
inc
popa
jmp
popa
fs
push
fst
xlat
pop
push
je
les
push
push
push
loop
(bad)
push
ins
jmp
jnp
push
xlat
fild
rcr
fcmovbe
hlt
jne
jl
push
gs
push
imul
test
outs
enter
lea
mov
mov
sbb
sub
call
or
ds
lahf
test
add
cmps
xor
aaa
movs
mov
mov
cmp
mov
int
dec
hlt
dec
test
push
jge
mov
rol
stc
je
lock
int
jns
(bad)
imul
pop
pop
pop
jno
inc
addr16
pop
int3
repz
or
es
bound
jb
or
loopne
hlt
cmp
xchg
ins
popa
adc
sub
dec
mov
out
jg
mov
dec
sub
mov
int3
sub
jmp
sub
(bad)
mov
jmp
add
pusha
pop
(bad)
mov
push
sub
(bad)
mov
call
add
pusha
push
(bad)
xor
call
sub
push
sbb
in
dec
(bad)
inc
test
out
in
imul
and
lock
bound
or
pop
lds
xchg
gs
sub
int3
dec
ret
loope
dec
push
jmp
(bad)
push
fcom
pop
push
jae
les
call
push
shl
(bad)
push
ins
imul
push
shl
pusha
hlt
sti
dec
push
fcmovnu
shl
je
sti
ins
call
in
ret
push
int
gs
xor
cmc
icebp
add
or
cmp
xchg
sub
or
mov
add
rol
sbb
xchg
cmp
cmp
xor
mov
mov
test
dec
ja
push
dec
cmc
dec
xor
adc
mov
jmp
jns
je
jbe
push
jns
inc
imul
pop
fidivr
les
jmp
dec
repz
mov
xchg
jl
(bad)
loop
retf
mov
xchg
es
dec
inc
dec
adc
jo
jo
scas
data16
int3
mov
pusha
push
std
xor
add
sbb
ds
int3
sub
std
xor
fcmovne
lds
imul
std
aas
mov
fimul
int
imul
std
mov
jmp
loopne
jge
cmp
fimul
int
jmp
fcmove
inc
dec
sub
xchg
(bad)
xor
int
out
gs
pop
ja
rol
inc
xchg
in
imul
int3
leave
loope
jmp
fist
cli
(bad)
call
arpl
dec
dec
shl
shr
(bad)
enter
(bad)
pop
loop
push
fcmovne
lods
fcom
stc
inc
jge
push
aam
loop
(bad)
push
ins
jmp
cmp
outs
mov
jg
rcl
push
icebp
jne
addr16
mov
out
dec
jle
jnp
mov
ss
mov
cmps
cmp
adc
or
mov
mov
nop
aas
aas
push
sbb
cmp
mov
mov
or
cmp
push
gs
test
jnp
add
jns
mov
rol
lock
sar
loope
imul
pop
pop
pop
jg
inc
in
jmp
int3
jae
or
out
jnp
(bad)
gs
jae
mov
xchg
cmps
out
enter
jmp
test
loopne
cld
aas
mov
pop
int3
inc
int3
(bad)
jmp
sbb
mov
inc
dec
mov
sbb
aas
mov
fcmovne
inc
int3
por
cdq
cld
mov
(bad)
into
push
push
cdq
jl
mov
fcmove
(bad)
dec
push
push
sbb
jmp
dec
(bad)
int
jmp
fimul
dec
(bad)
jge
xor
fiadd
int
outs
lea
jb
rol
ja
add
test
iret
dec
out
out
jmp
inc
hlt
inc
push
outs
out
repz
leave
ret
dec
push
jmp
fs
fisub
pop
fcmovne
scas
fst
ja
inc
repnz
call
push
shl
(bad)
push
push
mov
movs
cmp
mov
hlt
and
dec
ins
clc
jmp
gs
xor
(bad)
lock
cmp
or
mov
stos
das
xor
movs
call
stos
cdq
adc
and
sub
mov
and
xchg
cmp
add
or
std
bound
jge
inc
jecxz
in
repz
ins
inc
push
rcl
jne
jo
jno
rol
dec
push
repz
inc
(bad)
js
imul
and
dec
dec
mov
out
cli
movs
shl
retf
dec
leave
mov
out
sti
cmp
dec
adc
dec
xchg
push
les
push
sbb
in
fisttp
mov
cwde
jl
xor
dec
(bad)
jl
mov
fcmove
(bad)
int
push
sbb
mov
fimul
mov
cdq
cld
ds
pop
retf
inc
dec
push
push
sbb
ds
dec
mov
cdq
jl
xor
pop
dec
ror
loope
cld
ds
int
in
xchg
repz
jno
add
adc
mov
dec
ins
in
jmp
repnz
and
shl
ins
out
jno
cmp
fsubr
dec
iret
bound
shr
loop
shl
in
fbld
ficomp
test
(bad)
out
dec
pop
push
bound
push
imul
push
pop
xor
xor
in
push
jg
jmp
inc
mov
in
cmp
pop
xchg
mov
lods
xor
cmp
das
das
or
cmp
xchg
mov
adc
mov
mov
push
add
push
test
xor
add
xchg
les
js
jo
push
into
cli
dec
push
jbe
test
mov
in
les
push
add
jbe
(bad)
jno
rcl
popa
(bad)
pop
lock
addr16
push
arpl
jle
(bad)
in
push
cli
and
imul
pusha
cdq
and
sti
enter
js
mov
daa
jmp
xchg
push
movs
cmc
jp
(bad)
ror
cmp
ror
loope
sti
cmp
ror
loope
jp
mov
pop
retf
(bad)
jmp
mov
pop
dec
ret
jmp
fcmove
inc
int
push
fwait
cli
cmp
ins
pop
retf
mov
loope
cli
mov
inc
dec
mov
fwait
cli
cmp
ins
pop
dec
ror
ins
pusha
adc
movs
iret
rcl
repnz
(bad)
ins
pusha
adc
mov
call
jmp
in
dec
ja
sub
push
push
inc
dec
dec
bound
shr
(bad)
enter
(bad)
fbld
pop
pop
shr
pop
push
jmp
out
or
bound
pop
je
jmp
mov
mov
and
out
fsub
xchg
xchg
scas
jle
les
mov
pushf
xor
sub
sbb
adc
stos
call
mov
or
adc
xor
xchg
movs
mov
mov
mov
xlat
int
push
push
test
xor
outs
rcl
aad
inc
jo
cld
jae
dec
rol
inc
xchg
jmp
gs
in
std
clc
(bad)
fs
addr16
pop
dec
dec
dec
mov
bound
and
push
iret
dec
xor
pop
mov
dec
adc
xchg
std
mov
jns
dec
rcl
push
sbb
mov
fimul
into
or
arpl
pop
leave
inc
dec
or
sbb
mov
ret
push
xor
dec
ret
call
xor
leave
inc
iret
mov
pushf
stc
mov
ret
call
mov
fmul
ret
push
mov
pop
int3
ret
in
addr16
ror
enter
cwde
jge
mov
fdivr
(bad)
ins
fs
std
daa
mov
(bad)
mov
addr16
jl
mov
pop
imul
push
imul
(bad)
jmp
jbe
inc
icebp
outs
push
popa
pop
arpl
inc
push
hlt
outs
imul
lea
mov
cmp
imul
push
push
sbb
inc
pop
scas
repnz
test
sbb
aas
cmps
cwde
xchg
aaa
test
sbb
mov
xchg
sbb
scas
xchg
adc
adc
mov
mov
mov
add
lea
aam
push
push
shl
mov
fs
pop
pop
lea
cld
hlt
jnp
rol
lds
(bad)
loopne
jecxz
push
fs
les
mov
inc
push
enter
js
loop
inc
jmp
(bad)
adc
mov
push
popf
call
daa
lock
xlat
rcl
push
xor
pop
push
pop
push
mov
jge
clc
cmp
ror
jbe
push
cmp
dec
inc
push
mov
jl
cmp
push
inc
ror
idiv
out
mov
(bad)
xlat
inc
ror
jne
push
addr16
fcom
idiv
popf
clc
mov
pop
push
or
jge
clc
cmp
ror
das
(bad)
rcl
dec
enter
xchg
std
mov
jmp
imul
push
mov
inc
add
xchg
(bad)
xor
into
loope
dec
push
jmp
(bad)
jmp
je
(bad)
jg
call
push
push
popa
imul
imul
std
pop
shl
pushf
jnp
cmp
ror
jae
ja
push
push
lock
ret
jns
out
scas
test
sbb
or
xchg
aaa
mov
mov
xchg
mov
sub
cs
fisttp
and
sbb
mov
xchg
mov
fisubr
ins
dec
call
aam
jle
jmp
fst
pop
(bad)
int3
dec
pop
mul
jmp
aam
out
jns
push
cmc
jp
xlat
fcomip
popa
inc
jnp
jmp
aad
enter
pushf
in
pop
ffreep
push
dec
dec
mov
stc
nop
inc
pop
aam
call
es
aad
push
mov
call
inc
(bad)
fst
jae
pop
data16
push
mov
clc
lahf
out
xor
(bad)
fst
clc
sahf
out
mov
inc
push
pop
ror
repz
out
mov
inc
push
pop
push
or
lahf
out
mov
ret
push
aaa
jb
pop
in
xor
inc
aad
push
aaa
bnd
in
mov
rcl
aam
in
jl
std
shl
int
int
dec
sub
aaa
mov
int3
imul
xchg
(bad)
push
mov
enter
adc
cmp
imul
int
push
in
pop
loop
rcr
hlt
int3
push
call
jmp
inc
push
dec
shl
fs
pop
out
jmp
jmp
call
(bad)
jecxz
ror
out
jno
jp
rcl
jne
inc
fs
xlat
cld
jo
test
xor
push
or
xchg
ss
sbb
add
add
adc
push
mov
lds
xor
adc
xor
add
fst
adc
push
pop
jmp
jbe
push
jp
into
std
lock
ins
leave
into
lds
icebp
pop
(bad)
jnp
push
inc
(bad)
loope
jb
jg
jne
inc
pop
(bad)
jg
leave
out
xchg
js
sub
int
dec
aam
jo
mov
pop
fild
enter
jg
jb
das
arpl
dec
rcl
cmc
repnz
xor
out
push
inc
shl
pop
or
rcl
mov
jnp
arpl
pop
push
mov
je
arpl
lea
push
pop
pop
ss
and
lea
rcr
pop
mov
cmc
mov
into
rcr
fnstenv
(bad)
cmc
and
xchg
pop
mov
jbe
loope
push
jne
push
ficomp
cld
ja
bound
fcmovu
or
xchg
jp
sub
pop
dec
inc
rol
mov
out
(bad)
jge
shl
gs
cld
mov
out
inc
dec
ret
je
cwde
clc
mov
push
jae
in
retf
clc
dec
shl
inc
pop
out
jmp
addr16
(bad)
repz
popa
(bad)
(bad)
xchg
loope
stos
fisub
inc
shl
retf
pushf
sbb
or
xor
lods
out
mov
cmp
mov
xchg
mov
fwait
adc
and
xchg
mov
mov
xchg
sbb
sub
lahf
and
mov
xchg
mov
xchg
push
mov
cmps
xchg
adc
and
sahf
xor
ror
arpl
into
fstp
movs
cs
adc
scas
sub
sbb
shr
jne
push
cmps
enter
cs
les
out
retf
loope
and
fsub
ret
arpl
pop
pusha
or
push
cmp
fistp
mov
dec
mov
cmc
ficomp
xor
repnz
leave
pop
push
pop
xor
repnz
vmwrite
ficom
mov
dec
mov
ja
aad
xor
int
in
or
jbe
(bad)
bound
add
bound
inc
dec
and
add
cli
cmc
pop
xlat
jecxz
ret
dec
movs
in
or
repz
mov
dec
movs
in
add
sti
jb
xlat
gs
ja
pusha
add
js
rcr
mov
mul
int
pop
(bad)
jg
push
loop
mov
into
push
(bad)
mov
je
bound
or
leave
je
loope
arpl
shl
leave
shl
lds
imul
clc
enter
jmp
(bad)
arpl
sar
outs
imul
and
pop
add
movs
add
or
test
mov
mov
sbb
out
xchg
scas
and
adc
mov
mov
xchg
lahf
mov
movs
call
stos
popf
xchg
cmp
cmp
movs
adc
sahf
pop
mov
scas
xchg
pushf
mov
cmps
adc
xor
mov
leave
inc
imul
rcr
mov
pusha
stos
sub
mov
shl
int3
repnz
lahf
shl
and
int3
push
xchg
inc
sti
cmps
jmp
in
ret
retf
and
or
icebp
pop
shr
inc
dec
mov
repnz
in
inc
retf
or
jo
shr
mov
inc
es
or
jmp
or
sti
cmps
sub
xor
xchg
or
ins
mov
shl
add
add
es
daa
xchg
or
jns
scas
outs
mov
inc
daa
adc
and
inc
daa
xchg
or
out
scas
jo
(bad)
fsubr
xchg
(bad)
mov
xor
int
jmp
mov
cmc
pop
push
arpl
ret
dec
movs
push
or
je
shl
inc
dec
and
or
mov
dec
movs
in
or
cmc
(bad)
out
push
cmc
cld
leave
push
popa
data16
jmp
outs
fadd
dec
out
cmps
js
fwait
jmp
jb
arpl
inc
sar
in
not
and
xchg
sub
mov
mov
mov
xor
mov
lahf
adc
movs
call
sub
adc
stos
pushf
adc
and
sub
or
pop
aas
and
xchg
xor
xchg
fwait
mov
and
sbb
and
add
adc
mov
(bad)
xchg
mov
sub
ss
cmc
dec
into
pop
lahf
fisttp
pop
and
addr16
iret
aam
retf
xchg
add
mov
ret
daa
xchg
add
cmp
scas
outs
xor
cmps
adc
and
fsubr
out
sub
rcr
test
bound
stos
jne
push
fisubr
adc
test
ds
pop
test
loopne
and
fistp
lahf
lea
clc
ds
(bad)
sub
scas
and
sub
lods
cmps
jl
pop
shr
jmp
stos
pushf
push
xchg
inc
leave
and
icebp
fcom
addr16
dec
and
jg
lods
imul
daa
lods
call
pop
add
repz
cmc
jecxz
leave
shl
push
popa
inc
pop
loopne
fs
stos
mov
les
int
mov
cmp
inc
(bad)
jmp
push
jo
out
jbe
sbb
or
add
movs
mov
push
xor
cmp
(bad)
xor
xchg
cdq
mov
movs
call
sub
adc
scas
xchg
pop
mov
mov
adc
mov
das
push
popf
mov
adc
mov
add
and
dec
fsubrp
jo
repz
mov
shl
imul
or
repz
fs
les
push
(bad)
xlat
lahf
pop
iret
sub
and
test
add
stc
xor
sub
sub
xlat
sub
mov
add
pop
nop
adc
mov
sub
mov
xchg
pop
adc
stos
daa
sub
xor
lea
mov
xchg
sbb
mov
pop
xchg
xor
mov
or
xchg
mov
or
sbb
inc
leave
and
jmp
lods
call
pop
add
add
lods
push
dec
(bad)
cmps
push
add
push
dec
(bad)
cmps
xchg
push
test
icebp
in
leave
shl
dec
popa
inc
pop
loopne
les
(bad)
dec
xchg
sub
add
stc
retf
(bad)
fcomip
out
jo
adc
and
cmp
lahf
add
sub
sub
push
or
jmp
mov
movs
call
sub
adc
movs
call
stos
sahf
adc
mov
xchg
cmps
adc
movs
call
sub
xchg
xor
add
pop
and
pop
pop
jmp
sub
push
xor
and
jo
dec
jecxz
and
and
(bad)
fild
sbb
push
unpckhps
mov
test
lahf
mov
mov
and
adc
xor
or
pop
adc
cmp
mov
pop
xchg
cmp
cwde
add
xor
lods
ud2
sbb
mov
mov
call
cmp
mov
mov
mov
xor
or
mov
mov
mov
popf
or
ror
imul
inc
movs
pop
or
mov
(bad)
cmps
xchg
add
cmp
dec
shl
push
add
in
je
loope
shl
retf
lds
jmp
jne
dec
rcl
xor
or
push
jmp
fidiv
lock
pushf
and
xchg
popf
xor
and
mov
mov
mov
adc
sbb
and
xchg
xor
xchg
lahf
cmp
call
stos
sbb
xchg
cmps
mov
push
xchg
mov
das
push
sbb
mov
mov
or
cdq
fstp
mov
call
sbb
mov
xor
mov
ins
jge
inc
addr16
movs
inc
movs
call
loopne
scas
shr
mov
mov
mov
sub
mov
mov
xchg
pop
aas
xor
cmp
sub
or
sbb
xor
cmp
or
sbb
mov
mov
sbb
xor
sub
mov
mov
or
popf
or
cmp
sub
mov
mov
mov
push
mov
xor
mov
add
or
xor
mov
mov
mov
dec
movs
imul
push
push
xchg
add
imul
inc
cmps
xchg
or
ins
xor
inc
daa
xchg
aas
push
test
jmp
shr
leave
shl
in
frstor
out
stos
aaa
repz
retf
inc
dec
pop
cmp
mov
mov
jnp
imul
out
out
not
sbb
xor
adc
mov
xchg
mov
(bad)
mov
and
and
and
adc
mov
mov
adc
mov
movs
call
sub
adc
mov
push
aas
and
adc
stos
adc
movs
xchg
xchg
xor
or
xchg
(bad)
dec
pop
mov
mov
adc
add
pop
jo
into
lds
and
sbb
and
add
fucom
in
movs
les
sahf
mov
adc
lea
xchg
cmp
or
ss
mov
lea
cwde
ds
mov
xor
mov
xor
mov
sahf
mov
mov
mov
mov
and
pop
mov
cmp
mov
mov
xchg
cmp
or
mov
mov
xor
fmul
movs
imul
lds
std
es
es
or
in
mov
inc
test
mov
cmp
out
push
push
gs
frstor
out
lods
cmp
lds
dec
call
mov
inc
pop
repnz
out
ja
popf
and
and
cwde
mov
add
mov
cmp
xor
test
ins
xchg
sub
pop
xchg
cmp
scas
adc
mov
and
adc
sub
xchg
test
mov
xchg
mov
scas
xchg
sbb
mov
and
test
xor
pop
in
cld
xor
pop
aaa
sub
xchg
sbb
mov
nop
or
pop
hlt
loope
dec
outs
and
sbb
aam
push
push
lea
cmp
sub
or
mov
mov
or
mov
cmp
or
xor
or
mov
cmp
or
or
cmp
or
mov
cmp
or
xor
test
es
or
(bad)
mov
mov
sub
test
or
xor
movs
mov
ror
push
cmps
shl
xor
movs
xchg
or
push
int
and
cld
and
jmp
dec
inc
cmps
adc
mov
jecxz
retf
shl
jg
push
popa
in
pop
pusha
imul
inc
xlat
inc
dec
cdq
cmp
ss
fs
fbstp
outs
not
popf
and
and
cwde
mov
sbb
lods
mov
ds
or
mov
lahf
xor
xchg
and
mov
and
adc
scas
adc
adc
movs
call
stos
sahf
adc
mov
adc
cdq
mov
push
aas
and
xchg
mov
xchg
sbb
mov
and
popf
aaa
das
add
daa
daa
mov
xchg
test
in
jg
retf
ss
adc
cmp
adc
mov
mov
jno
retf
retf
lods
leave
mov
adc
pop
jmp
add
xor
cmp
sahf
mov
xor
cmp
lea
and
push
push
and
add
push
mov
mov
mov
mov
mov
mov
cmp
mov
mov
xchg
mov
mov
mov
pop
mov
cmp
or
mov
mov
mov
pop
and
add
lods
xor
and
ror
add
out
dec
les
jle
lods
push
dec
lds
xchg
or
daa
adc
push
add
mul
dec
push
je
leave
push
popa
inc
pop
popa
jmp
jbe
xlat
inc
push
sbb
jno
mov
mov
adc
in
fcomip
out
out
dec
adc
mov
nop
lahf
mov
add
xor
sub
lods
mov
and
xor
or
mov
and
xchg
xor
pop
xchg
cmp
scas
xchg
pop
mov
and
cmp
xor
xchg
mov
xchg
sbb
mov
and
xchg
cmp
pop
push
xor
xor
mov
xchg
sbb
mov
or
fmulp
in
sub
test
fldl2t
sbb
push
push
or
mov
mov
or
cmp
or
or
cmp
lea
aaa
mov
pop
or
xor
or
mov
cmp
xor
or
sbb
mov
xchg
mov
or
mov
cmp
add
xor
push
and
or
xor
or
mov
pop
and
add
sub
add
mov
and
inc
dec
and
add
out
dec
inc
movs
xchg
or
jle
lods
jmp
push
or
es
mov
stc
std
stos
lock
fs
dec
push
jb
leave
push
popa
out
fsubp
imul
inc
dec
pop
aam
cmp
mov
(bad)
adc
(bad)
out
fidiv
ins
retf
and
push
sbb
xor
movs
js
or
add
mov
or
mov
and
adc
scas
xchg
sahf
cmp
pop
xchg
cmp
das
adc
mov
and
and
mov
xchg
aas
and
xchg
xor
pop
sbb
mov
mov
mov
and
xor
xor
(bad)
adc
mov
(bad)
dec
bound
sub
in
xor
or
cmp
sub
mov
aaa
stos
or
sbb
xchg
mov
mov
sbb
cmp
mov
or
lahf
or
xor
mov
and
pop
or
mov
or
mov
cmp
or
and
or
xor
test
lods
mov
and
or
xchg
mov
dec
retf
and
jo
sub
mov
inc
and
jge
sub
es
add
ins
mov
inc
daa
adc
jo
in
leave
shl
retf
lds
jmp
repz
push
sahf
mov
unpcklps
jmp
sbb
(bad)
pop
sub
daa
mov
sub
and
push
mov
call
call
sub
adc
and
xchg
xor
adc
cmp
push
xchg
cmp
cmps
xchg
es
cmps
call
stos
adc
mov
xor
test
fdiv
push
test
(bad)
nop
cmp
xchg
(bad)
int3
pop
in
cld
push
dec
pop
push
mov
mov
popa
call
fwait
add
xor
or
popf
btr
mov
call
xchg
cmp
mov
or
xchg
cmp
xor
or
sbb
mov
add
lea
aaa
sub
mov
call
add
mov
xor
cmp
fwait
mov
mov
and
cmp
mov
mov
(bad)
cmps
push
add
cmp
retf
xchg
add
add
scas
out
mov
ret
or
xor
ret
mov
icebp
jg
jl
push
jb
retf
out
pop
loope
arpl
xor
jne
into
ret
mov
mov
(bad)
out
fucomip
out
push
add
xor
lods
mov
xchg
push
cmp
ss
sbb
sbb
adc
mov
and
xchg
xor
pop
adc
and
xchg
mov
adc
cmp
sahf
adc
mov
xchg
movs
adc
cmps
call
stos
nop
fwait
mov
mov
cmps
sub
enter
dec
dec
or
adc
mov
adc
aam
pop
adc
sub
pop
pop
lahf
stos
lds
or
xchg
cmp
add
stos
mov
mov
cmp
mov
or
or
cmp
or
and
or
xor
bts
mov
mov
add
aaa
pop
lea
mov
and
mov
add
or
or
sub
aaa
add
lea
mov
push
and
dec
lds
std
and
inc
and
jns
scas
outs
mov
inc
cmps
adc
or
xor
test
or
xchg
cld
movs
repz
jge
push
repz
push
loope
inc
pop
loope
loop
xor
push
xchg
xor
and
loope
inc
pop
jmp
out
xchg
xchg
jno
mov
add
mov
mov
cmps
pop
xor
xor
sbb
call
stos
lahf
sbb
push
popf
mov
movs
xchg
xchg
cmps
daa
push
sub
push
pop
fwait
cmp
call
test
push
nop
mov
mov
scas
ds
bndldx
push
aas
and
jnp
xor
pop
addr16
dec
ficomp
sub
ret
fcom
sub
sbb
mov
sub
xchg
mov
pop
sbb
cmp
mov
mov
sbb
mov
mov
sbb
mov
mov
mov
push
and
lea
mov
syscall
sub
mov
movs
mov
add
test
movs
mov
or
test
(bad)
lods
xor
mov
xor
add
mov
inc
and
cld
mov
inc
cmps
adc
sub
rcr
pop
(bad)
or
aas
push
fldcw
pop
or
js
in
dec
shl
leave
push
popa
inc
fsubp
jmp
jbe
int3
fst
popf
mov
daa
mov
xchg
adc
out
fild
bound
add
pop
mov
sub
pop
add
add
ss
sbb
out
add
sbb
call
sbb
mov
and
adc
adc
mov
pop
sub
cmp
add
daa
xchg
push
xor
push
sbb
xor
aas
sub
mov
pop
(bad)
bound
pop
mov
sub
sbb
xor
es
add
ret
push
dec
fcom
movs
dec
sub
lods
mov
pop
nop
scas
dec
sub
mov
mov
xchg
mov
mov
sbb
aas
xor
sub
or
sbb
xor
or
mov
pop
sbb
mov
mov
or
cdq
add
mov
sub
cmp
cmp
cmp
or
pushf
cmp
lods
or
mov
mov
or
popf
mov
xor
mov
mov
sbb
retf
(bad)
cmps
xchg
add
in
mov
inc
es
add
xchg
and
test
(bad)
mov
test
lods
test
push
inc
aas
add
je
push
idiv
leave
shl
in
pop
(bad)
jmp
stc
icebp
dec
arpl
mov
scas
out
dec
pusha
in
pop
ins
imul
pop
mov
mov
mov
sub
xchg
or
mov
lods
cmp
add
mov
sbb
call
stos
pop
xchg
mov
das
adc
mov
mov
xchg
and
aas
cmps
xchg
xchg
scas
mov
mov
mov
pop
pushf
sub
mov
aam
xchg
push
inc
pop
shr
or
sub
sbb
sub
add
iret
inc
loopne
(bad)
icebp
aam
pop
retf
sub
cli
js
inc
xlat
xchg
mov
add
mov
mov
or
pop
adc
mov
mov
xchg
fwait
mov
mov
xchg
mov
mov
xchg
cdq
aas
mov
mov
mov
sbb
mov
mov
cdq
push
mov
cmp
cdq
xchg
aas
lods
or
mov
cmp
cmp
or
mov
mov
inc
movs
xchg
or
mov
shl
mov
pop
es
add
xchg
scas
stos
jbe
rcr
sahf
mov
jl
gs
inc
shl
dec
shl
inc
fsub
push
push
pusha
imul
loope
inc
pop
out
dec
shr
fs
aad
imul
lock
(bad)
int3
adc
xor
pop
xchg
aaa
(bad)
outs
or
push
sbb
xchg
add
adc
lods
adc
mov
mov
xchg
cwde
mov
scas
xchg
adc
mov
sbb
adc
es
popf
mov
or
test
or
ret
add
dec
fiadd
dec
in
mov
push
sbb
mov
cld
adc
in
inc
loope
out
icebp
or
push
fs
inc
jne
outs
and
add
add
sbb
scas
and
add
adc
xor
sub
mov
push
pushf
mov
mov
daa
stos
or
mov
xchg
call
sub
sbb
xor
mov
mov
adc
xor
add
add
mov
sub
add
ss
mov
mov
adc
mov
sbb
mov
sub
add
push
mov
iret
and
jno
push
out
iret
retf
es
or
cmps
pop
add
cmp
dec
inc
daa
adc
jno
in
dec
push
jbe
retf
out
pop
loop
dec
fdivp
jge
shr
inc
(bad)
loop
rcr
jmp
pop
jmp
out
sar
push
ret
pop
jle
daa
push
out
dec
pop
imul
jo
cmc
pop
test
popa
jb
jo
iret
jge
lock
adc
push
aaa
adc
ss
movs
cwde
mov
and
cwde
movs
(bad)
clc
ins
fcmove
pop
int3
cmps
push
std
xchg
pop
lods
add
es
js
rcr
ins
adc
inc
and
shr
jb
retf
(bad)
arpl
jns
rol
retf
jecxz
hlt
div
fldenv
dec
enter
dec
jmp
jo
pop
div
loop
jae
jl
jns
push
jmp
jne
add
add
fwait
xor
lods
or
cmp
or
(bad)
cmp
mov
cdq
test
cmp
mov
cmp
cmp
adc
mov
sbb
mov
mov
xchg
cmp
mov
fwait
cmp
mov
mov
cmp
sbb
cmp
sbb
mov
mov
dec
movs
jmp
pop
push
data16
retf
movs
call
cmps
sub
mov
inc
and
std
and
(bad)
daa
xchg
or
add
jg
cld
retf
jg
shl
(bad)
push
pop
pop
stos
pop
lock
leave
jg
out
mov
inc
int
pusha
jmp
fld
shr
pop
shl
adc
frndint
gs
xlat
outs
je
(bad)
pop
ins
je
jb
cmps
lods
jl
(bad)
sub
int3
dec
jnp
jge
mov
and
mov
or
ss
movntps
ss
out
xchg
pop
add
cmp
mov
mov
push
test
sbb
mov
cmp
cli
retf
shl
jb
(bad)
xlat
fstp
bound
and
or
dec
jo
push
scas
aas
jge
dec
(bad)
xlat
adc
add
push
mov
cmp
cdq
xchg
mov
mov
mov
xchg
cmp
sbb
mov
or
sbb
cmp
sub
mov
or
xor
xchg
mov
and
pop
or
cmp
mov
mov
or
fwait
mov
or
call
add
or
ror
call
fcom
addr16
les
xchg
add
push
int3
inc
cmps
push
or
jnp
scas
ins
xor
inc
cmps
adc
test
jl
std
leave
push
bnd
push
popa
out
fsubp
imul
jge
dec
clc
fsubp
xchg
push
xchg
fmul
imul
mov
push
mov
pop
mov
mov
mov
and
fstp
mov
adc
stos
push
lahf
mov
cmps
call
sub
adc
mov
adc
adc
cmps
cwde
xchg
stos
lods
or
pop
xor
adc
mov
sub
add
dec
pop
fisubr
cmps
lahf
add
jg
mov
push
call
rcl
mov
dec
push
adc
jb
or
call
cmp
sbb
cmp
cmp
aas
sub
mov
adc
mov
mov
mov
mov
sbb
mov
and
mov
sbb
cmp
fwait
cmp
add
cmp
xor
mov
mov
mov
or
xchg
cmp
cmp
sbb
xchg
mov
dec
movs
push
cmps
lods
jmp
push
add
cmp
daa
xchg
or
sub
cli
and
cli
fs
push
jae
dec
push
popa
out
fsubp
imul
jle
dec
jp
or
test
dec
in
push
pop
add
xchg
adc
mov
and
cmp
adc
rdtsc
sbb
mov
or
call
mov
mov
das
mov
stos
popf
xchg
mov
mov
pop
sbb
xchg
xchg
and
scas
mov
sub
mov
pop
add
push
into
fcomp
mov
fldenv
sub
div
rol
inc
int
int
pop
jno
sahf
movs
mov
push
xchg
and
add
cmp
test
xchg
adc
stos
stos
add
pop
adc
scas
sub
pop
xor
xchg
xchg
cmp
movs
sub
or
adc
and
xchg
adc
sub
adc
scas
sub
or
pop
mov
mov
mov
das
movs
sub
or
xchg
lahf
xor
mov
mov
or
dec
les
jle
lods
push
dec
(bad)
movs
push
or
cmps
xchg
or
test
or
icebp
stc
fs
push
je
leave
shl
out
fsubp
imul
fidivr
dec
stc
leave
gs
mov
fcom
outs
imul
aaa
mov
shr
movs
fwait
xchg
cmp
mov
xchg
xchg
push
mov
test
test
mov
cmp
adc
stos
pop
xchg
cmp
scas
mov
cmp
mov
sahf
sbb
cmp
or
xor
or
and
lods
aad
lahf
shl
pop
and
aam
leave
pop
mov
js
test
or
les
dec
imul
ja
ret
push
or
daa
jnp
pop
push
stos
sbb
mov
sub
sub
sub
or
and
mov
or
mov
sub
sub
mov
setbe
mov
sub
or
movhps
sub
nop
xchg
aaa
cmp
mov
or
nop
adc
and
sub
or
xchg
adc
cmp
lods
push
mov
test
and
sub
mov
push
mov
dec
movs
call
cmps
sub
xor
inc
es
add
cmp
(bad)
daa
adc
and
(bad)
sub
sub
js
dec
shl
leave
shl
out
fisub
fcomp
imul
in
loopne
or
div
fmulp
retf
rcr
icebp
dec
pop
pop
ror
ror
and
cmp
jmp
sar
nop
sbb
test
pushf
mov
cmp
cmp
das
or
mov
movs
xchg
xchg
cmps
cmp
pop
cli
imul
mov
aas
add
sub
and
and
stos
pop
mov
shl
pop
mov
fsub
das
sub
scas
push
push
lahf
inc
ret
pop
inc
iret
jp
push
pop
mov
dec
pop
fistp
sahf
push
pop
or
lods
cmps
cli
cmp
lea
mov
sti
mov
mov
jge
(bad)
stos
sbb
mov
stos
call
(bad)
mov
or
push
push
sub
add
xchg
mov
or
setne
mov
lods
sbb
nop
xchg
mov
cmp
add
cmp
sub
mov
cmp
adc
fdivr
and
jo
shl
xor
inc
es
add
call
xchg
or
std
and
jmp
add
jnp
movs
outs
gs
shl
leave
push
pusha
out
pop
bound
fsubr
leave
retf
imul
jbe
int3
dec
fs
sar
fist
pop
call
(bad)
or
cs
outs
or
xchg
cmps
cdq
cmp
scas
sub
sub
xor
mov
mov
das
mov
cmp
xchg
adc
pmullw
adc
adc
sub
add
test
mov
mov
jo
pop
and
sar
add
cmp
mov
inc
pop
mov
int3
imul
repnz
ret
repz
xchg
fistp
sahf
lea
sti
cmp
lea
sti
cmp
mov
or
sub
sub
test
shr
sub
(bad)
mov
mov
add
pop
lods
lods
cdq
mov
(bad)
pop
sub
sub
mov
movhps
lods
lods
xchg
adc
mov
cmp
mov
cmp
cs
or
nop
xchg
mov
cmp
scas
lods
xchg
mov
cmps
pop
add
add
lods
call
xchg
add
cmp
lds
xchg
jnp
jmp
dec
inc
test
or
lock
clc
enter
leave
shl
vpunpckldq
fsubr
mov
leave
sti
cli
jmp
jae
xlat
enter
fadd
lods
loop
xor
sbb
adc
inc
jo
icebp
dec
pop
std
lea
out
mov
xchg
daa
sbb
stos
and
cmp
lahf
xchg
cmp
scas
add
mov
test
jp
adc
lahf
stos
daa
add
cmp
test
mov
es
or
xchg
and
push
aas
int3
inc
and
test
ins
mov
fmul
adc
ret
inc
cli
dec
push
sti
daa
adc
ret
jb
pop
pop
(bad)
sub
xchg
cmp
xlat
sub
sub
jl
(bad)
stos
sbb
(bad)
cmp
push
sub
test
push
stos
cdq
or
seta
mov
stos
sbb
mov
test
add
or
(bad)
(bad)
mov
or
setbe
scas
lods
cwde
mov
setbe
sub
adc
movs
sub
adc
and
adc
mov
les
jmp
sub
cmps
xchg
or
xor
inc
daa
xchg
je
imul
push
add
data16
push
hlt
cld
leave
push
popa
out
frstor
push
pop
pop
cmps
in
jb
(bad)
jnp
imul
into
jle
pop
idiv
dec
add
outs
leave
mov
cmp
lahf
fisubr
ins
cdq
ins
jnp
enter
jge
pushf
xor
sar
(bad)
xor
nop
push
xor
and
xchg
mov
scas
mov
xchg
cmp
shr
xchg
mov
mov
test
add
cmp
sub
movs
mov
aaa
fmul
push
mov
ret
movs
push
add
cmp
sub
mov
fimul
xchg
inc
inc
fcmovu
inc
jle
ins
int3
clc
daa
xchg
fldenv
retf
fs
push
add
jmp
pop
push
sub
mov
(bad)
mov
mov
(bad)
jmp
pop
shr
cdq
or
mov
test
cmp
lods
sbb
add
push
pop
lods
sub
or
add
pop
sub
cdq
or
add
mov
cmp
test
add
mov
cmp
mov
cmp
add
xor
es
or
jmp
xchg
add
std
movs
cs
dec
(bad)
sub
add
jl
test
aas
retf
adc
push
out
arpl
push
jbe
leave
push
popa
gs
jmp
repz
cld
jno
or
cmc
inc
jge
pop
test
fcmovne
add
hlt
jae
and
mov
movs
xchg
cmp
push
aam
outs
sbb
jb
leave
(bad)
lods
jmp
pop
push
sub
fcom
call
adc
xor
popf
fwait
sub
pop
sbb
sub
adc
sub
popf
call
stos
ret
xor
call
push
sub
scas
mov
ss
cmps
mov
xor
add
dec
je
inc
jl
ror
jg
push
inc
cmc
call
sub
xor
fisttp
jmp
(bad)
cld
les
out
out
push
mov
inc
int3
jge
cmp
and
pop
shr
call
jge
pop
push
stos
call
jge
pop
shr
or
(bad)
jmp
pop
shr
mov
(bad)
jmp
sub
sub
sub
mov
jg
pop
shr
test
(bad)
cmp
shr
mov
mov
mov
sub
mov
(bad)
cmp
sub
sbb
mov
lods
sbb
mov
daa
xchg
or
imul
add
cld
and
jmp
dec
inc
sub
syscall
add
mov
inc
sub
call
jecxz
dec
push
push
lds
jmp
cmc
repz
jmp
push
cmp
repz
int3
clc
pop
je
stos
repnz
stos
mov
jl
mov
test
push
shl
dec
add
shl
inc
fmul
mov
in
or
mov
sbb
mov
xchg
cdq
mov
mov
sbb
xchg
mov
ds
push
xor
xchg
add
or
aaa
and
xchg
adc
jbe
cli
jne
retf
(bad)
lahf
jl
nop
out
push
std
lock
sub
xor
pop
(bad)
imul
fstp
loope
repz
gs
js
mov
vshufps
or
xchg
mov
sub
xchg
pop
(bad)
stos
sbb
xchg
mov
mov
or
lods
cmps
jp
pop
push
stos
fwait
mov
sti
mov
mov
or
stos
and
pop
push
stos
fwait
or
mov
stos
mov
sub
or
jl
pop
shr
or
std
mov
or
(bad)
mov
mov
lea
mov
lods
sbb
or
cmps
mov
daa
xchg
add
cmp
jmp
mov
mov
(bad)
add
and
sub
repz
jecxz
jecxz
enter
dec
push
popa
gs
fisub
rcr
scas
es
repnz
dec
jp
call
jmp
ja
push
inc
aam
pop
jo
test
sti
mov
push
jb
pop
mov
je
repz
jb
push
pop
pop
dec
mov
mul
cmp
movs
mov
and
adc
cmp
sbb
xor
sahf
adc
and
push
wrmsr
adc
cmp
or
adc
xor
sahf
xchg
ud2
sbb
(bad)
xchg
call
mov
es
shr
(bad)
ror
jae
ret
jne
gs
pop
mov
inc
jle
imul
sub
aam
popf
or
or
sub
js
(bad)
sub
cmps
idiv
pop
or
es
mov
mov
jns
pop
push
sub
xchg
mov
or
jnp
pop
push
sub
or
sti
mov
mov
or
stos
cmps
jl
pop
shr
or
mov
sub
jl
pop
shr
mov
std
mov
or
mov
mov
cmps
push
add
jmp
or
aas
dec
(bad)
sub
sub
aas
retf
adc
and
js
jle
shl
leave
push
loopne
inc
pop
bound
pop
scas
sub
pop
jg
dec
loop
imul
imul
pop
lock
and
retf
jp
pop
shr
mov
test
mov
fstp
and
je
aas
or
mov
add
lods
sahf
sbb
xchg
pop
mov
mov
add
lahf
cmp
popf
xchg
adc
mov
aam
sbb
or
push
cmp
in
jae
out
jp
aaa
(bad)
in
add
jl
cmps
push
xor
lds
(bad)
cld
inc
sti
clc
out
out
pop
mov
inc
in
aam
cmps
adc
movs
jbe
push
pop
sub
scas
and
sub
lods
and
sub
sub
fld
pusha
lods
idiv
xchg
outs
lods
cmps
stc
cmp
stos
sbb
lods
daa
stc
mov
or
mov
sub
cli
mov
or
jp
pop
(bad)
sub
mov
mov
sub
jp
fcom
fwait
or
jl
fcmovnbe
sub
or
jl
dec
lds
adc
movs
scas
push
int
cmps
adc
and
push
dec
inc
test
pop
cld
mov
shr
inc
daa
jno
fs
push
jae
enter
(bad)
jmp
repz
leave
cli
ins
jmp
popa
pop
jb
(bad)
dec
(bad)
dec
mov
je
push
sub
jae
imul
and
ficom
mov
adc
(bad)
fst
aad
in
inc
lock
mov
xor
cmps
push
(bad)
xor
and
pop
mov
mov
mov
sahf
cmp
sahf
xchg
or
stos
and
mov
cs
add
fistp
cmp
in
fisttp
xor
dec
and
add
sti
jbe
push
arpl
mov
jns
ret
loope
popa
mov
inc
clc
ja
ins
(bad)
addr16
mov
cmc
cmp
lea
je
rcr
sahf
mov
jbe
rcr
sahf
mov
or
sub
pop
sub
sub
pop
sub
sub
pop
stos
sbb
sub
aam
popf
or
or
cmps
clc
mov
mov
js
(bad)
sub
or
or
lods
cmps
jp
ficom
sbb
xchg
mov
or
jp
dec
lds
xchg
or
(bad)
and
(bad)
test
add
mov
pop
mov
pop
push
add
out
fs
push
jae
enter
inc
(bad)
rcr
test
fdiv
dec
dec
lock
call
pop
push
hlt
int
dec
std
addr16
lods
push
outs
lock
call
in
dec
pop
push
gs
dec
mov
(bad)
(bad)
jmp
dec
pop
std
fs
mov
lea
movs
xchg
push
mov
movs
call
sub
xchg
lods
and
aad
mov
cmp
adc
popf
mov
lods
sub
shr
cmp
jecxz
pop
int3
dec
xor
jae
out
add
xlat
loope
jl
mov
les
jecxz
in
pusha
and
frstor
(bad)
loope
cmps
xchg
or
mov
movs
hlt
cmp
or
mov
and
mov
or
mov
movs
jne
rcr
sahf
or
mov
movs
cmc
mov
or
or
and
sub
mov
mov
and
sub
scas
and
sub
mov
ja
push
fld
scas
and
stos
sahf
mov
idiv
aam
popf
or
or
movs
ja
pop
aam
popf
mov
clc
xor
inc
cmps
push
add
imul
(bad)
mov
jge
cs
add
cld
mov
shr
ret
in
in
(bad)
shl
jecxz
shl
lds
iret
pop
mov
dec
dec
je
push
(bad)
push
jmp
push
inc
mov
fsub
pop
test
and
dec
rcl
out
jo
add
jnp
pusha
lds
(bad)
shl
push
or
call
sub
xchg
mov
xchg
pop
mov
daa
sbb
movs
mov
push
add
dec
cmp
or
aaa
cmp
jge
pop
loopne
js
jle
pop
icebp
(bad)
lock
mov
dec
and
add
(bad)
popa
mov
into
or
clc
dec
push
sar
loop
fs
out
outs
pop
movs
addr16
jl
(bad)
out
xchg
or
mov
and
cmp
mov
cmc
cmp
or
or
and
mov
lea
hlt
mov
mov
je
push
fldcw
popa
scas
movs
cmc
cmp
fldcw
mov
jne
push
pop
sub
mov
idiv
add
loope
and
sub
movs
jbe
rcr
push
mov
idiv
add
mov
inc
cmps
xchg
add
call
xchg
je
push
int
test
pop
cld
mov
(bad)
test
jnp
cmps
jo
fs
enter
leave
push
loopne
vpunpckldq
pop
cs
fs
ja
dec
jbe
out
lock
push
pop
fst
lock
dec
outs
fs
fld
inc
fistp
test
cmp
pop
fbstp
addr16
pop
push
dec
push
out
les
out
sti
das
movs
adc
call
sub
xchg
mov
scas
xchg
pop
mov
cmp
sahf
mov
test
jg
add
aas
adc
and
imul
(bad)
pop
sbb
jg
je
jbe
dec
pop
jo
mov
into
movs
imul
jecxz
repnz
mov
clc
enter
(bad)
mov
fnstcw
inc
arpl
out
xchg
or
or
movs
hlt
mov
or
or
movs
je
push
fsubr
fs
and
cmp
pop
stos
lahf
or
or
das
and
mov
mov
or
movs
cmc
cmp
pop
sub
scas
and
cmp
pop
stos
pop
mov
mov
scas
and
mov
mov
or
scas
movs
cmc
cmp
pop
sub
mov
jbe
rcr
sahf
mov
idiv
pop
sub
or
or
cs
lods
push
or
mov
and
es
add
call
xchg
add
jmp
xchg
pop
aas
int3
(bad)
sub
xchg
add
out
call
hlt
jecxz
shl
(bad)
jmp
fs
jmp
push
(bad)
fidiv
aam
bound
rcl
jb
fistp
push
jle
clc
bound
iret
fcomp
push
dec
inc
out
jmp
in
retw
loopne
pusha
pop
rcl
sbb
cmp
cmps
call
sub
adc
adc
fcmovnb
(bad)
sbb
cmp
xchg
push
pop
ja
rol
jns
pop
in
inc
retf
jmp
lds
dec
xchg
(bad)
hlt
mov
stos
es
iret
dec
(bad)
push
call
rcl
inc
out
out
(bad)
shr
in
jl
inc
in
out
adc
mov
movs
je
push
fild
arpl
movs
repz
mov
je
push
fsubr
fs
movs
jne
push
fldcw
jecxz
movs
hlt
cmp
fsubr
pop
mov
or
and
sub
das
and
mov
or
or
scas
and
mov
or
or
movs
cmc
cmp
pop
sub
mov
mov
scas
movs
jbe
push
pop
stos
pop
mov
mov
and
mov
mov
or
and
mov
dec
cmps
pop
or
addr16
les
jle
lods
imul
(bad)
cmp
das
jmp
test
dec
movs
outs
xchg
fs
enter
enter
(bad)
push
fild
push
shr
jle
enter
pop
retf
pop
call
in
fistp
push
inc
inc
jno
ja
dec
pop
dec
(bad)
jne
inc
lds
jae
into
pop
inc
inc
inc
ins
bound
(bad)
(bad)
pop
adc
xchg
sbb
mov
stos
xchg
cdq
mov
and
mov
stos
xchg
sbb
pop
inc
cli
popf
mov
add
fcom
or
stos
xchg
ins
sub
sbb
jns
rol
iret
push
push
jno
outs
rcr
jge
ret
arpl
dec
(bad)
js
jb
jp
pop
inc
repnz
jo
xchg
shl
jge
inc
in
gs
mov
jae
push
fild
in
and
mov
or
or
repz
or
movs
jae
push
fild
fs
sub
rcr
sub
or
or
and
cmp
fild
lahf
or
jb
aam
sub
mov
jae
push
fsubr
pop
mov
jae
push
fild
pop
or
mov
das
and
cmp
pop
sub
das
and
cmp
pop
sub
cmps
movs
div
or
xor
inc
cmps
xchg
or
jmp
push
into
inc
test
je
push
dec
(bad)
sub
inc
cmps
jo
in
(bad)
shl
(bad)
enter
lds
jmp
cli
not
std
(bad)
jle
ja
dec
loopne
call
pusha
dec
push
inc
neg
dec
inc
div
out
les
jb
retf
outs
inc
into
pop
push
fcmovne
loopne
pop
frstor
aam
mov
popf
xchg
pop
mov
push
add
xor
push
mov
xor
jbe
xor
mov
push
add
sub
push
pop
je
inc
imul
call
(bad)
jns
push
retf
(bad)
(bad)
jo
push
stc
push
sub
call
(bad)
fisubr
(bad)
in
repnz
jg
bound
(bad)
(bad)
jmp
push
mov
stos
icebp
cmp
or
xchg
sub
cmp
or
stos
repnz
mov
jb
push
pop
stos
nop
or
pop
data16
stos
nop
mov
push
data16
stos
nop
mov
jno
push
pop
sub
and
sub
or
xchg
stos
jb
aam
stos
adc
jae
push
fisubr
in
sub
cmp
pop
stos
adc
hlt
mov
retf
es
or
push
push
je
push
dec
inc
sub
scas
jmp
dec
(bad)
sub
stc
stos
outs
gs
retf
shr
(bad)
shl
in
pop
loop
retf
push
push
int3
fld
ror
les
retf
inc
push
shl
jle
aad
cmc
je
ret
inc
std
fmulp
sti
lock
idiv
popa
dec
push
fadd
je
push
(bad)
loopne
rcr
shr
dec
inc
std
sbb
adc
and
cdq
daa
add
xor
nop
sbb
es
and
cmp
addr16
pop
add
push
fdiv
leave
inc
jmp
(bad)
out
std
enter
jle
call
iret
jns
dec
rcl
jns
pusha
iret
pop
idiv
rcl
hlt
loopne
pop
jbe
dec
pop
ins
cld
jbe
push
fisubr
les
jmp
ret
cmc
hlt
dec
fucomip
in
dec
ret
push
mov
lock
or
xchg
sub
cmp
lea
xchg
and
stos
xchg
lea
jo
push
fsubr
and
out
mov
or
sub
xlat
fsubr
out
stos
icebp
cmp
pop
stos
adc
icebp
cmp
or
push
and
sub
or
xchg
stos
jb
aad
sub
or
push
in
stos
repnz
fild
mov
repz
retf
cmps
push
or
jg
sub
daa
adc
and
jmp
add
jge
test
mov
mov
test
and
rcl
idiv
leave
push
loopne
inc
fsub
retf
addr16
shr
retf
pusha
(bad)
inc
repnz
push
inc
out
jge
pop
(bad)
in
shl
(bad)
int3
(bad)
rol
stc
cld
pop
retf
(bad)
jb
jne
dec
in
cld
into
loop
jb
(bad)
popa
jns
fsubp
push
rol
js
loopne
dec
retf
stc
repnz
int3
dec
jne
fist
std
inc
dec
out
stc
(bad)
cmc
dec
lock
cmc
cld
into
(bad)
loop
dec
shl
jno
dec
out
inc
enter
iret
data16
int
retf
pop
inc
loope
int
repnz
imul
push
(bad)
jne
dec
pop
ins
pusha
dec
inc
jecxz
dec
pop
jmp
in
pop
in
push
pop
bnd
shr
data16
into
repnz
test
stos
lock
lea
out
cmp
lea
out
cmp
mov
out
cmp
lea
jo
enter
or
sub
(bad)
pop
stos
adc
stos
jo
push
fsubr
out
sub
mov
lea
lock
or
sub
push
fisubr
data16
sub
mov
xchg
sub
iret
retf
cmps
push
add
cmp
into
les
std
and
jmp
test
dec
inc
sub
ja
dec
(bad)
in
push
jmp
lds
push
fucomip
out
shl
inc
pop
bound
push
out
lds
imul
shr
inc
shl
(bad)
frstor
int3
fild
leave
fucomip
leavew
(bad)
gs
fucomp
pusha
retf
jmp
pop
loope
dec
push
push
(bad)
shr
leave
pop
out
loope
fsubr
int3
pop
in
pusha
retf
pop
out
gs
call
popa
dec
pop
in
leave
shr
inc
push
loopne
inc
pop
loopne
dec
pop
jmp
fninit
push
(bad)
push
loopne
ret
pop
(bad)
jmp
retf
addr16
frstor
retf
push
jmp
inc
push
pusha
jmp
(bad)
push
enter
inc
inc
loope
dec
pop
imul
ins
in
inc
jl
(bad)
clc
mov
jno
leave
inc
sub
or
stos
outs
cmp
ret
lea
add
mov
or
test
sub
dec
inc
sub
or
sub
cmp
or
xchg
stos
outs
cmp
inc
sub
or
stos
outs
cmp
inc
stos
adc
test
stos
adc
push
addr16
mov
or
add
mov
or
xchg
sub
cmp
pop
stos
xchg
or
jb
inc
dec
es
add
out
dec
inc
daa
xchg
(bad)
cmp
das
jmp
adc
test
dec
(bad)
stos
xchg
xchg
add
out
daa
lock
fs
dec
shr
loopne
shl
imul
push
shr
push
loopne
(bad)
fucom
push
shr
data16
shl
imul
push
shr
inc
shl
inc
fsub
jmp
loope
lds
imul
push
out
imul
popa
jmp
loope
(bad)
call
inc
push
pusha
imul
dec
push
outs
out
shl
push
frstor
retf
pop
in
out
shr
inc
pop
loop
int3
fucomip
popa
dec
shr
lds
imul
outs
in
fsub
jmp
retf
out
pop
(bad)
jmp
pusha
in
fsub
retf
push
in
out
shr
imul
loop
iret
pop
call
in
vpunpckhbw
mov
push
in
dec
ret
sub
and
outs
cmp
ret
lea
add
cmp
or
test
stos
xchg
or
sub
mov
lea
out
mov
or
sub
mov
lea
test
mov
inc
stos
xchg
mov
test
sub
enter
lea
out
cmp
or
sub
push
pop
stos
adc
sub
mov
retf
add
xor
dec
inc
daa
adc
and
lds
adc
test
mov
shr
cmps
mov
push
lock
loopne
push
imul
loopne
(bad)
fsub
jmp
loopne
inc
fsub
jmp
pusha
imul
popa
push
shr
data16
push
pusha
jmp
fsub
push
shr
(bad)
shl
imul
push
shr
(bad)
push
pusha
jmp
fucom
jmp
loopne
(bad)
fucom
push
fucomip
data16
push
outs
fs
pop
loopne
dec
pop
ins
addr16
shr
inc
pop
loope
retf
push
in
out
push
loopne
(bad)
frstor
dec
pop
ins
out
shr
inc
pop
(bad)
jmp
out
in
(bad)
imul
push
out
loopne
pop
popa
push
pop
jmp
enter
(bad)
jmp
outs
fs
(bad)
jmp
dec
push
out
fs
pop
in
int3
sar
(bad)
(bad)
pop
loop
or
iret
das
sahf
mov
test
sub
mov
mov
add
mov
or
sub
cmp
mov
in
mov
lea
out
mov
or
test
test
sub
mov
outs
cmp
inc
sub
lea
outs
mov
or
test
sub
mov
add
mov
or
xchg
cmps
stos
jno
ror
xchg
add
add
cmps
sub
cmps
push
pop
mov
or
test
jl
jmp
jmp
ins
popa
enter
(bad)
fucom
jmp
loopne
(bad)
fucom
push
shr
out
shl
inc
fsub
push
shr
(bad)
push
loopne
inc
pop
loope
retf
data16
shl
jmp
fucom
jmp
loopne
(bad)
fucom
push
push
in
data16
push
loopne
inc
fsub
jmp
pusha
in
fsub
jmp
out
jmp
pop
loope
retf
push
in
out
shl
(bad)
fsub
dec
pop
ins
addr16
shl
inc
fsub
dec
pop
ins
loopne
push
pusha
in
fsub
leave
push
lock
shl
inc
pop
loope
retf
push
in
out
push
pusha
in
fsub
jmp
enter
(bad)
pop
bound
shr
shl
inc
fsub
into
pop
sti
hlt
dec
push
lds
imul
das
push
lea
outs
mov
or
push
js
sub
dec
ret
lea
out
cmp
or
test
stos
adc
in
mov
mov
add
mov
inc
sub
mov
inc
sub
and
out
mov
mov
outs
mov
or
add
mov
mov
lock
leave
cmps
pop
or
aas
iret
les
xchg
pop
ds
test
std
pop
movs
out
or
je
dec
push
outs
inc
pop
popa
push
push
ins
loopne
shl
imul
loope
retf
data16
push
loopne
inc
frstor
retf
data16
shl
inc
fucom
push
shr
data16
shl
inc
fucom
push
shr
data16
push
loopne
inc
frstor
dec
shr
(bad)
shl
inc
fucom
jmp
loopne
inc
pop
popa
push
shr
data16
push
loopne
inc
fucom
push
shr
(bad)
push
loopne
(bad)
fucom
push
push
in
inc
shl
(bad)
fucom
push
push
ins
data16
shl
imul
popa
jmp
loopne
(bad)
fucom
push
push
icebp
jg
push
pusha
lds
push
push
in
inc
push
loopne
inc
fsub
dec
pop
imul
push
out
imul
loope
into
pop
jbe
enter
inc
leave
jecxz
fistp
jo
shr
iret
(bad)
pusha
or
test
sub
mov
inc
sub
and
in
mov
lea
in
cmp
or
add
mov
inc
stos
xchg
or
sub
leave
inc
stos
adc
ins
mov
or
sub
mov
mov
add
cmp
ret
stos
xchg
mov
out
cmp
fsubr
xchg
or
test
sub
ror
xchg
add
lock
sub
sub
and
jmp
xchg
pop
jmp
shl
push
in
in
inc
bound
fild
enter
inc
(bad)
imul
push
outs
in
pop
popa
push
pop
ins
addr16
push
loopne
inc
fsub
push
shr
data16
shl
inc
fsub
push
shr
data16
push
pusha
imul
jmp
loopne
inc
fucom
jmp
loopne
inc
fucom
push
shr
(bad)
push
loopne
inc
fucom
jmp
loopne
(bad)
fucom
jmp
loopne
(bad)
fucom
push
shr
data16
shr
jmp
pop
popa
jmp
loopne
inc
fsub
push
push
jle
retf
loopne
(bad)
int3
push
jmp
lds
imul
in
in
inc
(bad)
jmp
enter
inc
dec
(bad)
jmp
dec
push
in
popa
inc
dec
jmp
jb
or
outs
mov
lea
add
cmp
lea
test
mov
shr
or
sub
inc
stos
adc
test
cmp
or
test
stos
adc
test
cmp
inc
stos
adc
test
sub
leave
inc
sub
mov
ret
mov
add
cmp
ret
stos
xchg
or
sub
mov
retf
cmps
push
or
lock
sub
test
pop
(bad)
movs
cs
adc
add
jp
pop
ffree
bound
pop
jbe
retf
in
fisub
dec
fild
dec
shr
(bad)
pop
loope
dec
pop
jmp
pop
popa
jmp
outs
in
pop
popa
jmp
out
lds
jmp
enter
(bad)
pop
loope
dec
pop
jmp
dec
push
outs
in
(bad)
int
imul
outs
lds
dec
pop
jmp
fisub
int
jmp
lds
jmp
enter
lds
imul
outs
gs
pop
loop
rcr
jecxz
shr
fs
into
fistp
dec
shr
loopne
pop
popa
push
pop
imul
pop
loope
dec
pop
imul
lds
imul
push
in
fs
imul
shr
les
outs
pop
pop
mov
cmc
dec
and
mov
or
sub
cmp
or
das
imul
xchg
mov
inc
stos
adc
test
sub
lea
add
mov
shr
and
stos
adc
ins
cmp
shr
or
add
cmp
inc
sub
mov
inc
sub
cmps
sub
inc
dec
daa
push
or
lock
les
adc
movs
cs
adc
push
jnp
jae
lds
rcr
dec
out
in
(bad)
imul
shr
(bad)
jmp
dec
push
out
jmp
pop
popa
jmp
loopne
inc
fsub
retf
push
ins
addr16
push
pusha
fs
fsub
retf
shr
push
loopne
(bad)
fsub
dec
shr
shr
imul
jmp
outs
in
pop
popa
push
pop
imul
outs
in
pop
loope
dec
pop
ins
loopne
shl
imul
jmp
outs
in
fabs
jmp
enter
inc
pop
bound
fucomip
loopne
push
outs
in
pop
bound
(bad)
js
shr
inc
fisub
into
fcomip
cld
leave
push
out
out
les
push
fnsave
retf
gs
jmp
leave
shr
fs
fsub
fcomp
inc
jno
sar
inc
arpl
in
out
mov
cmp
lea
test
and
stos
xchg
lea
imul
push
cmp
test
mov
lea
test
mov
inc
stos
xchg
lea
ins
cmp
mov
test
sub
retf
xchg
or
test
cmp
or
test
mov
shr
and
stos
adc
sub
ror
xchg
add
xor
call
xchg
syscall
cmp
imul
add
add
cdq
pusha
cmc
jo
jbe
dec
push
pusha
fs
(bad)
jmp
inc
shl
inc
fsub
imul
push
out
imul
push
push
jmp
dec
push
out
jmp
pop
popa
push
pop
jmp
dec
shr
inc
pop
popa
jmp
out
imul
push
fucomip
loopne
shr
imul
jmp
dec
push
outs
gs
jmp
dec
push
out
in
pop
loope
into
pop
jmp
lds
jmp
outs
lds
push
fidiv
leave
push
out
in
fsub
jmp
enter
(bad)
pop
(bad)
jmp
out
jecxz
(bad)
jmp
enter
inc
pop
loop
dec
fcomip
bound
in
inc
shl
fdivr
test
mul
outs
inc
stos
push
pop
push
daa
(bad)
push
mov
inc
cs
or
test
cmp
or
test
mov
or
das
imul
push
add
scas
in
cmp
or
das
ins
cmp
or
scas
ins
mov
lea
in
cmp
lea
in
mov
lea
ins
cmp
inc
sub
mov
outs
cmp
shr
cmps
test
mov
retf
or
mov
(bad)
add
and
imul
or
test
cs
in
cmp
ret
xlat
mov
inc
je
out
pusha
fdivr
jb
shr
vpunpckldq
pop
(bad)
retf
push
outs
lds
jmp
dec
shl
jmp
fsub
dec
shr
out
shl
jmp
frstor
retf
in
shl
jmp
ins
out
shl
imul
push
shr
inc
push
loopne
inc
fndisi(8087
jmp
outs
in
pop
popa
jmp
pusha
in
(bad)
dec
pop
push
inc
push
out
in
pop
loop
dec
fucomip
loope
shl
inc
fsub
retf
push
push
dec
shr
(bad)
pop
(bad)
jmp
in
loope
inc
loop
rcr
jl
retf
shr
loope
retf
(bad)
jmp
rcl
icebp
stc
inc
in
jmp
jg
lds
imul
cmc
mov
inc
sub
or
das
jmp
dec
shr
or
das
jmp
int3
inc
test
jl
das
imul
test
mov
lea
ins
mov
lea
cmp
ins
cmp
or
das
imul
push
cmp
sub
inc
sub
lea
ins
mov
lea
cmp
test
mov
lea
cmp
test
mov
dec
es
or
xor
dec
daa
adc
movs
scas
jmp
xchg
push
test
ds
(bad)
lods
xchg
test
xchg
shl
(bad)
out
ret
push
inc
push
push
jg
inc
outs
loopne
dec
pop
push
ficom
test
gs
ret
push
idiv
inc
je
jmp
dec
shr
loope
retf
loopne
jl
dec
shr
popa
(bad)
jmp
int3
push
in
gs
inc
loop
aad
bnd
shr
ret
pop
pop
(bad)
hlt
dec
push
jmp
vpunpckldq
pop
std
hlt
dec
push
jmp
pop
bnd
push
push
lds
push
int
push
lds
ficomp
iret
push
shr
cld
(bad)
jmp
dec
push
jb
inc
jns
push
push
push
jg
inc
loope
push
into
push
aam
push
lock
(bad)
in
push
shl
retf
(bad)
dec
jo
adc
sub
inc
sub
movs
scas
jmp
dec
(bad)
sub
scas
imul
xchg
cmp
mov
jmp
xchg
dec
inc
stos
adc
push
add
scas
ins
cmp
push
xchg
sti
movs
imul
push
cmp
cmp
lea
cmp
in
cmp
or
scas
in
mov
or
scas
ins
mov
dec
cmps
xchg
or
out
inc
dec
daa
push
(bad)
or
mov
pop
jmp
test
mov
in
cmp
sbb
pop
jbe
les
outs
jae
(bad)
pop
push
sar
stc
(bad)
imul
or
push
test
fnsave
(bad)
(bad)
imul
stc
(bad)
jmp
pop
push
std
cmc
(bad)
ins
pusha
jmp
into
int
fnop
imul
mov
push
shl
lds
imul
push
idiv
lds
imul
push
cmc
std
(bad)
jmp
push
shl
sti
(bad)
jmp
push
push
je
(bad)
jmp
push
push
repz
inc
clc
loop
in
inc
inc
sti
dec
shl
(bad)
push
dec
push
pop
pop
sar
imul
sti
int
fstp
jg
(bad)
popa
out
push
dec
add
addr16
shr
or
sub
dec
inc
sub
movs
scas
jmp
int
sub
cs
int
test
cld
movs
scas
imul
test
ds
(bad)
stos
adc
and
(bad)
stos
adc
and
imul
xchg
mov
lea
add
das
imul
xchg
cmp
or
imul
xchg
sti
pop
das
imul
or
cmps
push
in
inc
dec
daa
pop
or
jmp
dec
daa
xchg
je
jmp
xchg
push
add
jmp
nop
mov
add
loopne
out
(bad)
dec
dec
rcl
cmc
inc
jg
call
pop
pop
push
dec
out
popa
imul
push
pop
(bad)
sar
vpunpcklbw
into
fst
fnop
std
jbe
jmp
fs
dec
push
aam
push
idiv
inc
repnz
out
inc
inc
push
shl
std
inc
jg
jmp
rcl
ja
inc
repz
inc
inc
dec
dec
push
jbe
inc
jb
jmp
dec
push
je
inc
sti
(bad)
jmp
push
push
jae
lds
imul
js
js
imul
(bad)
jl
out
pusha
jmp
int
(bad)
pop
pop
jge
dec
in
loopne
jne
pop
pop
xlat
push
shl
sbb
std
and
add
ds
sub
das
jmp
add
jmp
int
test
cld
movs
cs
test
cld
and
inc
test
cld
and
inc
sub
add
push
int
sub
movs
cs
int
sub
and
(bad)
sub
movs
scas
imul
add
ins
mov
or
imul
push
cmp
scas
ins
xor
leave
es
pop
lods
out
ror
add
add
cmps
lods
out
ror
(bad)
xor
les
xchg
mov
mov
or
test
sub
mov
ret
pop
cmc
jecxz
jg
call
aam
clc
test
out
out
dec
push
pop
push
push
jle
(bad)
outs
loopne
sti
into
pop
push
fst
test
imul
fistp
jb
inc
js
jmp
idiv
lds
jmp
push
push
push
imul
shr
vpacksswb
(bad)
dec
dec
push
shl
std
bound
inc
int3
rcl
inc
std
bound
(bad)
retf
push
repz
inc
stc
loop
jmp
into
sti
retf
push
std
jge
outs
loopne
jp
pop
(bad)
ficomp
jne
jecxz
push
sar
pop
mov
mov
jmp
dec
inc
test
jge
cs
adc
es
dec
inc
test
jge
sub
sub
movs
cs
adc
and
inc
test
std
movs
lods
jmp
test
cmp
or
cs
dec
(bad)
sub
imul
push
cmp
mov
mov
push
dec
(bad)
sub
pop
scas
jmp
ret
dec
movs
jmp
fcom
data16
leave
daa
pop
or
xor
retf
daa
push
or
lock
addr16
mov
aas
dec
inc
test
push
add
imul
(bad)
aad
in
jecxz
inc
dec
push
shl
inc
fs
cmc
rcr
push
jg
(bad)
loope
jmp
jg
inc
out
popa
jmp
iret
(bad)
xlat
push
(bad)
hlt
(bad)
out
loop
push
inc
dec
rcl
ja
lds
call
push
push
jmp
jmp
dec
shr
loop
cmc
(bad)
jmp
push
shl
inc
(bad)
jmp
push
shl
jg
jp
imul
jae
lds
imul
cld
jle
jmp
aad
push
sar
inc
ins
jb
(bad)
mov
in
mov
mov
push
int
test
jle
imul
cmps
sub
sub
movs
lods
jmp
add
imul
es
imul
xchg
jl
cs
dec
inc
test
std
cmps
scas
jmp
dec
inc
test
jge
scas
jmp
int
sub
and
(bad)
sub
movs
lods
push
int3
(bad)
stos
adc
and
inc
stos
xchg
or
scas
push
ret
dec
movs
jmp
fcom
data16
dec
es
cmps
lods
addr16
dec
daa
xchg
or
mov
pop
aas
iret
inc
sub
movs
sub
test
cld
pop
sub
mov
dec
add
push
push
mul
repnz
out
pop
inc
aam
std
cmc
(bad)
ins
popa
imul
(bad)
pop
push
jg
(bad)
loopne
imul
pop
push
shl
jnp
loop
push
inc
ret
iret
push
shr
lds
imul
shr
inc
ja
jmp
dec
push
jmp
imul
push
je
inc
sti
bound
inc
dec
rcl
jae
lds
imul
jg
jl
imul
repz
jnp
jmp
fmul
shl
dec
into
lods
xchg
push
add
movs
cs
xchg
push
push
cmp
scas
jmp
adc
es
movs
sub
test
(bad)
cmps
lods
jmp
xchg
or
lods
imul
push
cmp
scas
jmp
int3
(bad)
sub
and
(bad)
sub
movs
sub
stos
push
mov
jmp
push
cmp
scas
jmp
dec
(bad)
sub
and
(bad)
sub
and
(bad)
sub
fldcw
movs
imul
shl
inc
leave
daa
pop
or
data16
retf
add
data16
dec
cmps
pop
je
out
inc
dec
daa
push
(bad)
xor
sub
sub
and
lods
adc
test
icebp
int
outs
in
inc
dec
rcl
(bad)
cld
lds
imul
push
fnop
jo
inc
loop
push
rcr
push
jg
(bad)
out
bound
ret
rcl
jecxz
jbe
imul
push
jmp
inc
retf
loop
fistp
icebp
int
jmp
pop
int
push
shl
inc
std
bound
inc
dec
inc
push
push
repz
jp
imul
shl
clc
inc
jmp
gs
cli
jp
push
ja
(bad)
lock
outs
stc
dec
mov
jne
and
imul
movs
lods
jmp
xchg
mov
push
xchg
mov
imul
mov
imul
lea
push
int
test
cld
and
inc
sub
es
dec
(bad)
sub
and
(bad)
stos
xchg
lea
add
movs
scas
jmp
int3
(bad)
sub
and
inc
test
jle
cs
xchg
std
lods
jmp
test
cmp
lea
push
inc
dec
and
jae
push
fs
leave
cmps
call
pop
sub
mov
leave
cmps
push
daa
sub
xor
dec
cmps
xchg
add
xor
lods
out
ror
add
aas
iret
dec
sub
syscall
add
cmps
sub
sub
test
add
div
inc
dec
dec
push
call
jmp
fcmovnu
icebp
hlt
(bad)
in
push
inc
pop
push
fcom
std
hlt
(bad)
ins
loopne
jae
inc
(bad)
rcl
arpl
leave
loop
ficomp
jo
push
in
lds
jmp
dec
shr
addr16
int
imul
push
cmc
std
inc
jle
jmp
rcl
cmc
inc
jle
jmp
push
push
(bad)
hlt
inc
outs
loopne
js
retf
ja
ror
clc
mov
sub
es
adc
and
lds
adc
es
push
xchg
push
test
jmp
lods
push
xchg
mov
call
xchg
or
lods
push
int
sub
movs
sub
stos
adc
es
int
sub
and
(bad)
stos
xchg
lea
jmp
int
stos
xchg
lea
jmp
xchg
mov
or
sub
test
jge
scas
jmp
int3
inc
stos
push
lea
jmp
or
je
push
arpl
ret
dec
es
pop
push
arpl
inc
dec
es
pop
shl
mov
dec
cmps
call
daa
lods
data16
leave
daa
xchg
or
mov
(bad)
add
sub
test
lea
lock
daa
xchg
dec
mov
inc
hlt
in
(bad)
fcomp
pop
aad
(bad)
jbe
outs
popa
jmp
dec
rcl
jo
(bad)
(bad)
loopne
ja
int
pop
push
jmp
pop
jo
dec
shr
dec
bound
fdivr
retf
push
imul
(bad)
jmp
push
push
idiv
jmp
push
push
shl
jge
cld
loope
jbe
pop
aam
shl
(bad)
out
popa
jmp
mov
inc
sub
add
call
adc
cmps
sub
sub
es
test
jg
sub
test
jg
lods
jmp
push
or
cs
xchg
cmp
or
scas
in
cmp
lea
jmp
push
cmp
(bad)
sub
and
(bad)
sub
cmps
lods
imul
cmps
lods
jmp
xchg
lea
push
dec
inc
sub
fisubr
movs
jmp
bound
or
bound
or
arpl
ret
iret
cmps
push
pop
push
fs
enter
or
pop
lods
gs
dec
cmps
push
cmps
lods
data16
inc
dec
test
pop
mov
add
shl
jle
inc
dec
int
aad
std
vpunpcklbw
sti
dec
push
pop
xlat
push
jb
inc
addr16
je
pop
fcom
push
jmp
dec
push
ins
out
shl
push
fnsave
retf
addr16
jmp
push
shl
std
lds
call
rcl
jg
(bad)
loopne
cli
dec
push
aad
push
inc
jnp
xchg
jl
xchg
gs
xlat
pop
and
les
jg
cs
push
lea
call
xchg
push
push
xor
iret
dec
test
jmp
inc
test
jg
lods
imul
es
jmp
dec
(bad)
sub
and
inc
sub
and
inc
sub
movs
sub
stos
adc
and
lds
xchg
or
cs
test
jle
lods
jmp
xchg
or
lods
jmp
push
cmp
inc
sub
fisubr
and
jne
shl
inc
dec
and
jne
shl
(bad)
jmp
pop
push
bound
or
jecxz
inc
dec
es
pop
push
fs
enter
or
jb
sub
mov
(bad)
xor
lods
out
ror
or
push
mov
pop
push
outs
je
aad
pop
shl
vpsrad
icebp
ret
push
push
hlt
cli
(bad)
jge
jmp
retf
shr
out
inc
(bad)
jmp
dec
shr
inc
retf
in
ror
shl
std
les
push
push
sar
inc
out
loop
je
xor
fcmovu
movs
inc
push
cmp
inc
stos
xchg
ss
xlat
pop
and
dec
test
jmp
lods
call
adc
movs
sub
sub
cmps
sub
test
lock
inc
test
std
and
(bad)
sub
movs
lods
imul
push
add
scas
in
cmp
lea
jmp
dec
inc
test
jl
cs
int3
(bad)
stos
adc
movs
cs
dec
inc
sub
movs
lods
push
dec
inc
sub
es
jmp
xchg
or
scas
push
dec
inc
sub
movs
sub
stos
adc
pop
cs
mov
dec
ficom
mov
dec
movs
push
or
neg
push
pusha
mov
dec
and
cmc
pop
push
bound
inc
dec
cmps
imul
dec
cmps
jmp
pop
shl
enter
or
daa
push
fs
ret
call
daa
sub
test
jg
sub
sub
jl
fcomp
jecxz
out
(bad)
rcl
lock
loop
push
ror
push
jae
lds
jmp
leave
shr
(bad)
imul
push
jmp
pop
inc
enter
jge
jle
imul
jg
inc
popa
cmc
push
jno
(bad)
cld
cmc
and
cmps
xchg
ss
push
pop
and
retf
stos
xchg
mov
call
push
lea
call
push
lea
call
push
push
test
mov
lea
push
dec
(bad)
sub
movs
cs
dec
(bad)
sub
cmps
imul
test
call
call
push
movs
cs
int3
inc
sub
cmps
scas
jmp
dec
inc
sub
movs
sub
stos
push
mov
jmp
xchg
or
scas
jmp
xchg
cmp
lea
jmp
mov
enter
mov
dec
and
jbe
shl
mov
int
jmp
popa
mov
dec
cmps
jmp
pop
push
loop
inc
dec
cmps
imul
shl
dec
daa
call
pop
push
jecxz
inc
leave
sub
add
aas
inc
retf
mov
jno
lods
out
ror
mov
jmp
jge
adc
pop
fcomp
jl
stc
loop
repz
(bad)
push
cmc
jg
std
loop
arpl
jge
push
outs
gs
imul
push
jmp
inc
dec
arpl
loope
inc
retf
repz
stc
loop
repz
movs
fcom
push
ror
dec
mov
sub
or
scas
jmp
xchg
mov
(bad)
fisub
test
jg
lods
call
xchg
lea
call
push
push
xchg
ror
or
lods
call
adc
cmps
lods
push
int
sub
and
(bad)
sub
movs
shr
mov
lea
xchg
movs
and
in
shr
int3
inc
sub
and
inc
stos
adc
movs
sub
sub
cmps
sub
sub
cmps
sub
stos
xchg
lea
push
dec
(bad)
stos
xchg
or
imul
or
neg
shl
xor
cmps
jmp
loop
inc
dec
cmps
imul
dec
es
pop
push
bound
(bad)
iret
cmps
jmp
fst
xor
iret
daa
call
fcom
in
inc
enter
mov
mov
dec
daa
pop
pop
icebp
es
test
jmp
scas
imul
mov
push
inc
push
cli
gs
dec
inc
rcl
jne
lds
imul
shr
inc
pop
popa
push
pop
jbe
enter
inc
ret
loop
pop
pop
dec
dec
iret
shl
lds
call
jo
and
addr16
push
test
jmp
call
call
mov
lds
xchg
push
push
xor
ror
push
mov
out
ror
mov
out
ror
lea
jmp
adc
movs
lods
push
int
stos
push
mov
jmp
inc
(bad)
test
or
das
and
adc
scas
mov
and
sub
xchg
jl
cs
xchg
cmp
inc
sub
movs
sub
stos
push
lea
add
sub
stos
adc
es
jmp
xchg
xor
movs
jmp
mov
enter
xor
movs
jmp
loop
(bad)
int
jmp
pop
push
bound
lds
jmp
pop
push
arpl
ret
dec
cmps
push
pop
shl
mov
iret
daa
push
cmps
shl
xor
enter
mov
jb
lods
gs
ret
call
lods
out
iret
dec
sub
jne
jmp
adc
pop
test
sub
leave
xor
push
push
imul
pop
push
leave
push
outs
in
pop
popa
push
pop
imul
(bad)
fsub
jmp
into
rol
les
or
scas
imul
movs
lods
jmp
push
mov
lds
push
push
add
out
ror
push
pop
mov
mov
out
iret
dec
test
lock
imul
lods
imul
pop
sub
daa
pop
pop
xchg
movs
sbb
xchg
das
scas
or
ss
xchg
sbb
das
or
mov
push
lea
push
int3
(bad)
sub
es
dec
(bad)
stos
xchg
lea
cmp
lds
adc
cmps
lods
jmp
test
mov
lea
call
jmp
or
pop
push
fidiv
(bad)
jae
push
or
pop
shl
inc
int
imul
dec
cmps
jmp
fcom
in
inc
iret
cmps
push
fcom
in
ret
enter
or
repz
push
xor
daa
pop
add
icebp
daa
sub
mov
retf
(bad)
xor
lods
addr16
inc
sub
movs
sub
sub
scas
jmp
sbb
outs
jmp
(bad)
pop
jmp
enter
(bad)
(bad)
int3
push
jmp
(bad)
jmp
enter
lds
dec
dec
sub
jg
lods
out
iret
dec
sub
movs
lods
call
pop
test
inc
push
cmp
test
jo
lods
out
ror
xchg
push
test
jno
lods
addr16
dec
test
jo
sub
test
lock
lods
jmp
push
push
test
jle
lods
jmp
add
data16
das
sub
or
cmp
sbb
mov
adc
cmp
mov
mov
popf
sbb
cwde
adc
pop
and
inc
stos
adc
movs
scas
jmp
push
add
lods
jmp
push
cmp
sub
stos
xchg
or
sub
sub
pop
sub
and
add
jl
pop
push
pop
mov
jae
push
or
neg
push
loopne
(bad)
int3
es
(bad)
loop
inc
dec
cmps
jmp
pop
shl
xor
into
daa
push
fcom
in
inc
enter
mov
je
push
gs
dec
daa
xchg
or
mov
dec
cmps
xchg
(bad)
or
jo
sub
sub
mov
ds
lds
xchg
lea
jmp
sub
inc
(bad)
retf
shr
push
loopne
(bad)
fsub
jmp
loopne
(bad)
(bad)
retf
push
cld
jmp
push
fldenv
xor
iret
sub
cs
push
push
add
out
inc
lds
push
mov
inc
sub
pop
lock
sub
ds
dec
sub
cmps
sub
sub
lods
push
xchg
mov
out
into
inc
sub
push
add
call
pop
add
scas
or
mov
mov
adc
lods
and
cmp
sbb
xor
fsub
stos
xchg
lea
add
movs
scas
push
int
sub
and
lds
jmp
lds
xchg
push
xchg
ds
inc
sub
pop
sub
movs
imul
loopne
js
and
neg
loopne
lds
or
daa
push
pop
push
jecxz
les
call
fcom
mov
enter
or
je
push
fs
enter
mov
xor
daa
xchg
je
addr16
push
add
jo
lods
push
adc
and
imul
loope
enter
dec
pop
in
addr16
push
pusha
imul
push
shr
addr16
shl
jmp
fsub
dec
pop
mov
les
inc
inc
test
jno
sub
sub
movs
lods
addr16
xor
pop
mov
inc
test
push
add
data16
push
mov
mov
mov
jo
sub
test
mov
push
push
syscall
add
daa
lods
push
pop
(bad)
or
lock
xor
mov
nop
sbb
mov
xchg
sbb
cmp
lods
mov
xchg
sbb
cmp
xor
xchg
or
cs
push
or
add
scas
push
into
inc
sub
es
jmp
xchg
push
add
imul
fld
jmp
or
push
fbstp
inc
dec
movs
jmp
pusha
mov
int3
cmps
jmp
fst
mov
dec
cmps
jmp
pop
push
loop
les
push
fcom
xor
dec
cmps
push
pop
push
in
ret
pop
add
push
push
gs
dec
daa
xchg
je
mov
test
pop
mov
mov
push
adc
add
out
in
push
fucomip
jecxz
push
pusha
in
(bad)
retf
push
imul
out
jmp
(bad)
arpl
inc
or
jne
es
mov
syscall
xor
dec
dec
sub
movs
lods
out
ret
jmp
and
pop
mov
jne
out
ror
pop
(bad)
add
sub
aas
ror
push
add
out
ror
push
xchg
mov
mov
call
call
xchg
popf
cmp
popf
xchg
stos
and
push
xor
sbb
xor
pushf
push
lods
mov
xchg
popf
cmp
or
mov
push
movs
lods
jmp
xchg
mov
lea
call
push
mov
call
push
mov
push
imul
fbstp
inc
repz
dec
movs
imul
int
jmp
loop
lds
call
pop
shl
iret
cmps
push
pop
lods
gs
leave
cmps
push
daa
sub
xor
dec
daa
xchg
(bad)
add
cmps
lods
mov
sub
pop
lock
addr16
dec
dec
sub
movs
scas
push
adc
daa
movs
in
xor
ffreep
imul
(bad)
fndisi(8087
jmp
loopne
(bad)
outs
jge
mov
push
xchg
pop
mov
push
test
jo
sub
mov
fbld
test
jno
sub
test
push
add
out
ror
push
add
addr16
dec
sub
push
add
push
xchg
push
add
push
jmp
mov
daa
jne
aaa
mov
cwde
sub
adc
mov
mov
adc
cmp
push
test
mov
into
mov
call
movs
sub
stos
push
or
cs
adc
lods
jmp
xchg
lea
call
xchg
mov
addr16
repnz
imul
pop
xor
jae
jmp
fst
xor
and
jbe
shl
inc
into
cmps
jmp
fst
mov
dec
es
pop
shl
mov
iret
cmps
push
cmps
shl
xor
leave
cmps
call
cmps
push
in
ret
pop
jnp
gs
inc
leave
sub
es
sub
and
les
jg
das
jmp
imul
imul
loopne
(bad)
(bad)
dec
fild
shl
inc
fdivr
xchg
clc
(bad)
popf
pop
cld
and
dec
sub
lods
out
ror
syscall
add
and
addr16
les
jmp
movs
push
fistp
inc
sub
es
sub
daa
sub
test
jno
sub
test
jg
sub
mov
push
test
aas
ror
jmp
aas
cmp
xchg
daa
mov
or
mov
mov
adc
mov
and
xor
xchg
sbb
scas
mov
test
jg
scas
push
into
lds
(bad)
movs
lods
jmp
push
cmp
retf
stos
pop
push
push
cmp
lods
call
pop
push
add
out
stc
repnz
dec
pop
rcr
clc
jb
jmp
loopne
inc
into
imul
dec
es
pop
shl
xor
dec
cmps
jmp
fcom
in
inc
leave
daa
xchg
add
push
shl
inc
retf
add
gs
dec
daa
pop
je
gs
inc
leave
sub
lods
out
ror
xchg
mov
jno
sub
test
jmp
inc
jno
in
imul
pop
loope
retf
inc
push
popa
jmp
pop
imul
dec
or
jnp
es
out
inc
dec
test
syscall
xor
sub
aas
inc
retf
sub
mov
cmp
inc
mov
fbld
sub
pop
aas
inc
retf
test
pop
aas
ror
mov
jb
lods
out
ror
push
mov
addr16
syscall
xor
lods
call
push
xchg
mov
(bad)
mov
mov
sub
or
mov
xchg
sahf
cmp
xchg
lods
mov
lea
xor
xchg
pop
test
or
xor
ficomp
test
icebp
cmps
lods
push
int
sub
cmps
lods
jmp
adc
es
test
jo
lods
addr16
push
add
addr16
jae
push
or
push
pop
xor
movs
push
mov
ja
push
pop
mov
dec
and
neg
push
bound
add
(bad)
jbe
push
loop
inc
iret
cmps
call
fcom
fs
enter
mov
xor
cmps
call
cmps
lods
xor
cmps
push
daa
lods
gs
inc
dec
cmps
pop
(bad)
add
sub
test
pop
mov
or
add
inc
sub
pusha
jecxz
retf
shr
(bad)
push
pusha
imul
jmp
pusha
imul
in
inc
aam
ret
pop
pop
lods
gs
pop
icebp
cmps
sub
aas
inc
retf
sub
movs
lods
out
inc
inc
and
cmp
pop
and
loopne
rol
add
addr16
push
add
addr16
push
push
test
lock
lods
out
inc
retf
sub
mov
addr16
syscall
add
pop
lods
addr16
mov
mov
mov
or
test
mov
mov
movs
pop
mov
adc
xor
pop
xchg
sub
es
into
lds
jge
lods
jmp
xchg
push
test
mov
push
test
jo
lods
addr16
push
add
out
jns
movs
imul
cld
leave
ficom
mov
jae
jmp
pusha
mov
jae
jmp
pop
shl
inc
into
es
pop
push
loop
(bad)
call
fcom
xor
daa
xchg
or
jae
push
in
inc
leave
daa
xchg
or
mov
retf
ud2
push
lods
mov
cmps
pop
je
mov
sub
mov
jo
lods
addr16
xchg
test
xchg
fs
shr
push
loopne
inc
fsub
retf
push
in
addr16
push
pusha
imul
push
pop
cmp
aam
aam
mov
pop
icebp
cmps
sub
ds
inc
test
mov
cmp
les
push
dec
aam
and
loopne
inc
les
push
mov
out
inc
dec
sub
mov
jno
sub
test
jo
sub
test
lock
sub
aas
inc
retf
test
jo
lods
addr16
or
mov
cmp
or
test
mov
xchg
fwait
cmps
mov
or
mov
lahf
sbb
mov
push
fwait
mov
xchg
or
scas
jmp
dec
inc
sub
or
add
scas
push
dec
lds
xchg
mov
out
ror
xchg
syscall
xor
lods
addr16
pop
addr16
jno
jmp
or
dec
pop
push
fidiv
js
movs
jmp
pusha
mov
int3
imul
int
imul
dec
cmps
imul
enter
or
pop
lods
fs
leave
cmps
call
daa
sub
xor
daa
pop
pop
jb
sub
mov
pop
aas
inc
dec
sub
mov
jo
scas
push
xchg
cmp
bound
out
push
ins
data16
shl
inc
pop
loope
dec
shr
out
push
pusha
imul
push
pop
pop
pusha
lds
push
cmp
sub
lods
addr16
ror
mov
jo
sub
mov
mov
push
pusha
cmp
les
push
push
test
ds
push
push
add
mov
test
icebp
cmps
sub
test
lock
lods
addr16
xchg
push
add
out
inc
dec
cmps
imul
aas
mov
(bad)
mov
mov
sbb
test
or
test
and
cdq
stos
cmp
adc
mov
lea
push
dec
(bad)
stos
push
lea
cmp
imul
lods
push
xchg
syscall
xor
sub
mov
mov
out
cli
jno
jmp
or
rcr
(bad)
jae
push
mov
pop
push
loopne
(bad)
dec
and
ja
shl
(bad)
imul
iret
cmps
jmp
fcom
arpl
add
push
(bad)
in
inc
enter
or
jb
sub
xor
dec
daa
xchg
add
repnz
lods
data16
ror
pop
mov
pop
lock
inc
sub
ja
push
loope
dec
shr
out
push
pusha
imul
jmp
pusha
imul
push
push
je
inc
rcl
in
push
dec
je
adc
test
lock
sub
mov
mov
cmp
les
fbld
loope
rol
test
jo
lods
out
ror
xchg
push
test
jno
lods
out
ror
adc
movs
sub
sub
daa
lods
addr16
pop
out
ret
imul
pop
mov
ds
mov
or
sub
or
mov
popf
sbb
add
mov
call
cmp
sub
or
cs
xchg
jge
cs
into
(bad)
stos
xchg
push
add
addr16
xchg
push
test
ds
retf
test
jo
lods
out
jns
movs
imul
cld
dec
pop
push
pop
mov
rep
imul
std
enter
mov
dec
movs
jmp
popa
xor
int
jmp
fcom
xor
call
pop
push
loop
ret
iret
cmps
imul
dec
daa
xchg
or
icebp
daa
sub
xor
daa
pop
or
mov
push
test
jo
sub
test
push
test
jg
scas
jmp
xchg
div
inc
fucom
imul
pusha
imul
push
shr
(bad)
push
pusha
imul
jmp
dec
inc
pop
dec
jnp
adc
test
ds
retf
sub
push
test
cmp
(bad)
mov
fbld
push
popa
cmp
sub
push
test
ds
retf
test
icebp
es
push
adc
cmps
lods
addr16
mov
out
dec
inc
test
jmp
dec
test
or
or
cmps
ds
or
aas
nop
cdq
sub
add
stos
mov
lahf
sbb
cs
pushf
cmp
or
mov
pop
lea
add
movs
cs
xchg
std
es
push
iret
inc
sub
movs
sub
test
jmp
inc
sub
pop
lods
call
jmp
mov
retf
pop
xor
and
neg
push
pop
xor
rep
jmp
loope
(bad)
dec
cmps
imul
into
imul
push
arpl
or
xor
dec
cmps
call
cmps
push
in
ret
xchg
(bad)
add
sub
mov
pop
lock
out
dec
les
jg
scas
imul
pusha
push
dec
push
ins
out
shl
jmp
pop
loope
retf
data16
push
pusha
jmp
pop
loope
dec
push
cld
in
rcr
loope
aaa
shl
xchg
jne
out
ror
xchg
push
test
lock
sub
and
(bad)
aad
movs
xlat
jecxz
iret
lds
adc
and
retf
sub
cmps
lods
out
inc
retf
test
lock
sub
test
lock
lods
push
xchg
push
push
add
cmps
lods
push
pop
add
idiv
(bad)
or
mov
cdq
cmps
mov
or
xor
adc
cmps
cmp
xor
sbb
stos
movs
lea
movsx
test
std
movs
scas
push
int
sub
scas
push
dec
inc
sub
push
xchg
(bad)
es
call
push
push
xchg
(bad)
cmps
lods
call
xchg
mov
push
jmp
mov
push
fidiv
or
mov
dec
movs
push
or
dec
pop
push
pusha
mov
int
imul
dec
cmps
imul
iret
daa
call
cmps
push
in
inc
dec
daa
xchg
or
repnz
lods
out
ror
(bad)
xor
sub
aas
ror
push
pop
lock
lds
adc
movs
scas
jmp
nop
out
shl
ret
ret
fsub
push
shr
inc
push
pusha
imul
push
shr
data16
push
loopne
inc
pop
loope
dec
push
std
data16
rcr
lds
syscall
add
lods
ror
push
add
call
jecxz
dec
push
shl
test
jo
lods
push
xchg
push
test
jmp
scas
push
adc
and
inc
test
lock
call
xchg
mov
jmp
xchg
jne
in
xchg
scas
sub
add
and
xor
add
stos
and
cmps
mov
xchg
popf
mov
scas
mov
and
and
(bad)
stos
xchg
or
scas
imul
xchg
std
movs
cs
add
imul
cmps
lods
call
xchg
push
push
cmp
jns
movs
ins
add
jnp
fist
xor
jb
imul
pusha
mov
dec
movs
push
or
ficom
mov
int3
imul
push
loopne
inc
dec
es
(bad)
bound
add
in
inc
dec
daa
pop
add
jg
daa
sub
xor
dec
daa
pop
(bad)
mov
lock
sub
test
mov
jo
lods
push
push
mov
mov
out
lods
out
pusha
jmp
dec
shr
out
shl
(bad)
pop
loope
retf
shr
out
shl
jmp
fsub
dec
push
inc
pusha
inc
push
pop
std
(bad)
mov
dec
stos
xchg
mov
aas
iret
retf
sub
or
das
imul
and
loop
inc
inc
sub
lods
push
xchg
or
lods
addr16
push
add
call
xchg
lea
push
push
or
cs
push
push
test
jle
lods
jmp
push
jbe
cmp
syscall
das
scas
mov
sub
adc
mov
mov
sub
sub
scas
jmp
int
stos
adc
and
inc
sub
movs
imul
movs
lods
jmp
adc
fsubr
movs
ins
or
dec
pop
push
fidiv
jns
and
dec
pop
rcr
js
movs
jmp
fbstp
clc
repz
jmp
loopne
inc
int
jmp
fst
mov
dec
cmps
imul
push
arpl
add
in
ret
xchg
(bad)
mov
jno
sub
test
je
out
inc
dec
sub
and
lds
adc
mov
inc
pop
loope
int
ins
pusha
(bad)
push
loopne
(bad)
(bad)
dec
pop
push
dec
push
outs
in
pop
popa
push
pop
aad
inc
push
movs
test
sub
pop
mov
mov
jo
sub
mov
or
shl
fs
push
test
mov
mov
out
ror
xchg
push
test
jg
scas
push
adc
movs
cs
xchg
mov
push
into
inc
sub
lods
imul
add
test
mov
mov
adc
lods
and
add
mov
lea
imul
xchg
cld
and
(bad)
stos
xchg
lea
cmp
push
into
lds
xchg
push
xchg
std
and
inc
sub
movs
cs
xchg
push
xchg
mov
icebp
and
dec
pop
push
pop
mov
icebp
and
leave
pop
rcr
clc
jb
push
or
push
fbstp
inc
int3
movs
push
or
ja
push
loopne
inc
int
imul
iret
imul
dec
es
fcom
mov
dec
cmps
pop
add
aas
inc
retf
(bad)
or
jo
lods
out
inc
retf
sub
movs
lods
call
xchg
inc
mov
repnz
(bad)
pop
loop
push
fsubrp
loope
push
out
fs
fabs
jmp
enter
lds
jmp
and
push
mov
je
addr16
mov
jg
sub
(bad)
jns
leave
push
shl
sub
and
retf
test
jmp
dec
sub
and
retf
test
lock
les
std
and
inc
test
std
and
(bad)
test
lock
gs
or
xor
ss
push
add
imul
retf
lea
cmp
das
jmp
push
cmp
cmp
lea
cmp
imul
xchg
jge
imul
and
inc
stos
xchg
lea
cmp
jmp
jp
movs
in
add
jnp
pop
rcr
js
movs
imul
std
dec
pop
push
pop
mov
int3
and
neg
pusha
mov
dec
and
ja
shl
(bad)
imul
shl
(bad)
jmp
fcom
xor
daa
push
pop
push
arpl
inc
enter
mov
mov
retf
(bad)
or
jno
sub
mov
dec
cmps
xchg
push
test
jo
scas
call
adc
add
ret
rcr
std
dec
shr
fs
(bad)
loop
push
fidiv
enter
lds
jmp
pop
frstor
inc
sub
es
test
syscall
xor
inc
or
repz
push
and
gs
mov
call
adc
and
inc
test
jo
scas
push
adc
and
inc
test
(bad)
and
push
dec
inc
stos
xchg
push
push
cmp
scas
jmp
test
mov
push
test
fcom
push
push
and
imul
and
jmp
xchg
std
movs
scas
imul
push
add
movs
scas
push
int
sub
scas
push
dec
(bad)
sub
cs
push
cmp
das
push
cli
icebp
movs
in
or
leave
fist
mov
repnz
dec
pop
push
fidiv
clc
repnz
imul
pop
mov
repz
neg
push
loope
inc
int
imul
dec
imul
dec
es
fcom
jecxz
ret
dec
es
daa
lods
in
inc
retf
add
xor
lods
data16
ror
(bad)
mov
ds
dec
sub
inc
test
in
in
push
pop
je
leave
push
out
gs
inc
loop
push
fidiv
shr
lds
outs
push
leave
cmps
scas
imul
pop
mov
pop
lock
call
in
sub
gs
push
test
cmp
push
xchg
ds
dec
test
jg
scas
call
adc
and
push
adc
xchg
cmp
lea
cmp
scas
jmp
xchg
jl
scas
jmp
int3
(bad)
sub
das
jmp
add
jmp
push
cmp
scas
jmp
xchg
jge
das
push
int3
(bad)
stos
adc
push
add
and
jmp
push
add
movs
das
jmp
push
cmp
scas
jmp
int3
(bad)
sub
scas
jmp
jns
and
or
mov
jb
jmp
mov
enter
mov
jb
jmp
mov
fcmovnbe
fbstp
add
jge
(bad)
popa
xor
and
jbe
shl
(bad)
imul
dec
cmps
jmp
fcom
xor
dec
daa
pop
add
fs
enter
mov
aas
ror
xchg
(bad)
add
es
sub
and
inc
add
stc
dec
dec
push
jmp
inc
retf
(bad)
call
dec
push
jnp
inc
pusha
(bad)
out
outs
pop
test
lods
out
ror
(bad)
xor
sub
sub
pop
jo
sub
mov
jo
scas
jmp
adc
and
inc
test
jmp
push
xchg
mov
call
adc
and
call
xchg
or
scas
push
int3
(bad)
stos
xchg
or
das
push
dec
inc
sub
xchg
int3
inc
sub
das
push
int3
inc
stos
adc
push
cmp
jmp
push
add
movs
cs
dec
inc
stos
xchg
mov
add
jmp
push
cmp
das
jmp
push
cmp
sub
cmp
lea
add
movs
das
jmp
push
add
imul
mov
dec
pop
rcr
clc
jno
imul
pop
mov
repnz
dec
pop
rcr
js
and
ja
shl
inc
dec
movs
push
or
pop
push
loope
inc
into
es
pop
push
loop
(bad)
iret
es
pop
shl
xor
es
daa
sub
xor
leave
cmps
push
daa
sub
xor
retf
(bad)
or
jno
sub
aas
ror
push
add
push
xchg
mov
retf
jecxz
(bad)
fdivr
fcomp
mov
pop
lock
sub
mov
mov
jno
sub
test
pop
mov
or
das
imul
mov
call
adc
movs
cs
xchg
or
scas
push
xchg
lea
jmp
adc
das
jmp
xchg
int3
inc
stos
xchg
mov
in
mov
or
scas
imul
push
cmp
scas
push
int
stos
adc
pop
add
and
jmp
int3
inc
stos
adc
xchg
cmp
or
test
mov
or
das
imul
sub
or
test
imul
push
cmp
test
xor
movs
jmp
or
rcr
xor
jno
jmp
or
dec
pop
push
pop
xor
and
dec
pop
rcr
mov
dec
and
enter
xor
cmps
imul
dec
and
cmc
(bad)
loop
inc
dec
es
pop
shl
ret
dec
cmps
push
cmps
shl
dec
cmps
push
daa
lods
out
ror
xchg
add
data16
inc
dec
sub
mov
mov
xchg
add
loopne
loop
mov
xor
jmp
push
pop
icebp
es
sub
es
test
jo
lods
push
jmp
imul
push
add
push
xchg
mov
call
xchg
or
das
push
xchg
or
test
cmp
lea
push
int3
lds
adc
sub
dec
shr
and
imul
sub
lea
jmp
xchg
jl
das
push
dec
(bad)
stos
adc
xchg
dec
(bad)
stos
adc
push
cmp
imul
xchg
and
jmp
int3
inc
stos
adc
xchg
int3
(bad)
sub
or
test
in
cmp
mov
in
mov
repnz
jmp
or
leave
ficom
xor
jb
jmp
or
fst
xor
movs
push
or
ficom
mov
dec
and
ja
push
loopne
(bad)
int3
es
(bad)
loope
inc
dec
and
jbe
push
loop
inc
dec
cmps
imul
enter
or
repz
shl
xor
leave
cmps
pop
(bad)
or
aas
ror
pop
(bad)
or
jno
lods
out
inc
retf
test
mov
ds
xchg
or
push
push
add
mov
pop
aas
inc
retf
test
mov
jg
sub
sub
and
inc
test
mov
jmp
xchg
mov
jmp
adc
and
inc
test
(bad)
movs
das
imul
mov
inc
stos
xchg
lea
jmp
xchg
dec
(bad)
sub
mov
shr
lea
jmp
dec
inc
sub
push
add
das
jmp
dec
(bad)
sub
movs
scas
jmp
dec
(bad)
sub
movs
scas
imul
pop
cmp
test
cmp
mov
add
mov
shr
mov
shr
fld
ins
mov
jb
imul
pop
xor
movs
jmp
or
enter
xor
dec
and
neg
loopne
inc
dec
and
jbe
push
popa
xor
movs
jmp
pop
push
popa
xor
and
cmc
pop
push
bound
add
jg
pop
shl
iret
cmps
call
daa
sub
xor
enter
or
icebp
cmps
lods
out
ror
je
data16
inc
retf
sub
cmps
lods
push
push
or
jmp
stc
mov
cmp
scas
call
xchg
pop
mov
mov
jo
cs
retf
sub
and
inc
sub
and
les
jg
das
call
adc
test
ds
inc
test
jg
das
push
xchg
lea
cmp
jmp
xchg
and
jmp
xchg
mov
(bad)
sub
and
imul
sub
and
imul
cmp
scas
jmp
int
stos
xchg
lea
imul
mov
inc
sub
and
stos
xchg
or
test
ins
cmp
shr
mov
shr
lea
test
pop
sub
xor
jb
push
mov
ficom
xor
movs
push
or
ficom
xor
movs
jmp
pusha
mov
dec
and
jbe
push
loop
(bad)
dec
and
neg
shl
(bad)
int
imul
shl
xor
daa
push
pop
shl
mov
dec
daa
xchg
add
in
inc
dec
daa
xchg
or
mov
dec
daa
xchg
je
data16
iret
retf
test
(bad)
xor
dec
sub
fisubr
jmp
stc
sysret
add
es
ror
xchg
pop
aas
ror
mov
ds
xchg
mov
jg
scas
push
adc
and
les
jmp
stos
adc
push
add
mov
inc
test
(bad)
mov
lds
adc
sub
dec
(bad)
stos
adc
push
add
mov
inc
stos
xchg
lea
jmp
push
test
mov
inc
stos
adc
push
add
das
jmp
xchg
int
stos
xchg
or
das
push
dec
(bad)
sub
or
test
mov
mov
ins
mov
or
add
and
in
mov
mov
in
cmp
inc
sub
mov
in
xor
jb
jmp
mov
fcmovbe
loopne
js
movs
jmp
fbstp
add
pusha
mov
int3
movs
jmp
popa
mov
dec
and
jbe
shl
mov
iret
cmps
imul
iret
cmps
call
fcom
mov
leave
cmps
call
cmps
push
fs
or
icebp
es
daa
push
je
mov
test
pop
mov
or
xor
dec
vmread
pop
add
scas
call
push
pop
jo
scas
out
inc
inc
sub
cmps
sub
sub
and
inc
sub
movs
scas
call
xchg
mov
imul
movs
scas
imul
movs
das
imul
and
jmp
push
add
and
jmp
xchg
dec
inc
sub
lea
jmp
push
cmp
das
push
dec
inc
sub
mov
(bad)
stos
xchg
lea
cmp
das
jmp
push
test
mov
(bad)
stos
adc
add
and
in
cmp
mov
ins
mov
mov
in
cmp
inc
sub
mov
outs
xor
and
enter
xor
movs
push
mov
pop
push
pusha
mov
int3
es
ficom
mov
dec
movs
jmp
pop
shl
xor
int
jmp
fcom
xor
cmps
imul
shl
xor
push
fcom
mov
enter
mov
repz
sub
xor
leave
daa
pop
add
xor
lods
mov
test
or
repnz
sub
and
dec
sub
(bad)
nop
out
pop
cmp
out
ror
pop
lock
lods
out
dec
dec
test
push
add
push
xchg
mov
call
xchg
mov
call
adc
and
jmp
adc
push
add
movs
scas
jmp
xchg
mov
push
xchg
or
das
jmp
xchg
dec
(bad)
sub
mov
inc
sub
lea
jmp
push
cmp
push
int
stos
xchg
lea
push
dec
inc
stos
xchg
lea
jmp
int3
(bad)
sub
or
add
and
in
mov
mov
in
cmp
shr
or
add
mov
mov
ins
cmp
shr
mov
in
xor
and
add
fbstp
or
xor
int3
movs
push
mov
pop
shl
mov
dec
es
fst
xor
int
imul
push
loop
inc
dec
cmps
jmp
fcom
mov
iret
cmps
call
daa
shl
ret
xchg
add
in
inc
dec
cmps
xchg
or
repnz
cmps
pop
(bad)
mov
xor
test
pop
jmp
les
xchg
or
add
(bad)
jmp
out
xchg
mov
(bad)
add
sub
sub
cmps
lods
call
xchg
push
test
mov
lea
call
xchg
push
add
imul
movs
scas
jmp
xchg
mov
imul
and
jmp
xchg
int
sub
and
jmp
push
test
sub
mov
lea
jmp
push
test
and
imul
push
test
jmp
dec
(bad)
stos
adc
sub
retf
inc
stos
adc
add
cmp
shr
xchg
mov
or
test
and
in
cmp
shr
mov
add
mov
jb
push
mov
ja
push
loopne
(bad)
dec
and
ja
shl
xor
movs
jmp
pop
shl
mov
int
jmp
pop
push
loope
lds
call
pop
shl
xor
into
cmps
push
pop
lods
in
les
push
daa
push
arpl
ret
pop
or
mov
dec
cmps
pop
(bad)
or
jno
lods
mov
sub
je
mov
sub
and
dec
test
mov
mov
into
xchg
out
xchg
aas
inc
dec
sub
cmps
sub
sub
es
push
add
push
adc
movs
scas
jmp
adc
test
cmp
mov
jmp
xchg
lea
imul
and
push
dec
inc
test
jge
das
jmp
xchg
dec
(bad)
stos
xchg
lea
test
and
jmp
xchg
and
sub
lea
add
and
stos
adc
test
stos
adc
add
mov
(bad)
stos
xchg
or
add
cmp
inc
sub
or
add
mov
or
test
sub
mov
mov
test
pop
sub
repnz
push
mov
ja
push
loopne
inc
int
jmp
pop
shl
inc
int
imul
int
jmp
fst
mov
dec
movs
jmp
pop
shl
xor
into
daa
call
pop
push
arpl
add
xor
daa
pop
add
in
inc
dec
cmps
pop
(bad)
or
jno
lods
addr16
ror
add
cmps
lods
out
iret
dec
sub
cmps
lods
call
xchg
mov
or
iret
adc
push
pop
add
scas
push
xchg
jne
addr16
dec
sub
movs
sub
test
jg
cs
xchg
push
push
add
and
jmp
xchg
push
push
add
and
jmp
xchg
mov
imul
movs
das
imul
and
stos
adc
xchg
int
sub
and
push
dec
inc
stos
adc
sub
cmp
or
test
mov
lea
jmp
int3
(bad)
sub
lea
ins
mov
mov
test
imul
add
and
imul
sub
and
sub
and
in
cmp
shr
or
add
xor
rep
jmp
pusha
xor
movs
jmp
pusha
xor
dec
movs
jmp
fcom
popa
xor
movs
imul
into
cmps
call
cmps
shl
xor
dec
es
add
jg
cmps
shl
leave
cmps
push
daa
sub
xor
daa
xchg
add
gs
je
out
inc
dec
test
pop
aas
ror
xchg
(bad)
cmp
dec
lds
xchg
mov
mov
iret
push
jecxz
xchg
ds
les
jg
scas
call
adc
movs
cs
adc
add
jmp
adc
add
imul
and
imul
movs
scas
imul
and
push
into
lds
std
and
push
into
(bad)
stos
xchg
lea
jmp
xchg
cmp
or
sub
mov
or
test
ins
mov
lea
test
and
jmp
retf
inc
stos
adc
test
mov
or
sub
int3
(bad)
stos
xchg
mov
add
mov
shr
mov
in
mov
or
add
mov
inc
sub
or
test
addr16
cmp
add
add
add
sub
add
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
mov
mov
mov
add
sub
add
add
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
mov
mov
mov
add
sub
sub
sub
add
sub
add
sub
add
sub
mov
mov
mov
sub
add
sub
sub
add
add
add
add
add
sub
sub
add
add
sub
sub
sub
add
add
add
sub
add
add
add
sub
sub
add
add
sub
add
sub
add
sub
sub
add
add
add
add
sub
mov
mov
mov
sub
sub
sub
add
sub
add
sub
add
mov
mov
mov
sub
add
add
sub
sub
add
sub
sub
add
add
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
add
add
sub
add
sub
add
add
add
add
mov
mov
mov
sub
sub
sub
sub
add
add
add
add
sub
add
add
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
sub
add
sub
add
sub
add
add
sub
add
sub
sub
sub
sub
add
sub
add
sub
add
mov
mov
mov
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
add
sub
add
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
add
sub
add
add
add
add
add
sub
add
add
sub
sub
sub
sub
add
add
sub
add
sub
add
add
add
add
mov
mov
mov
sub
sub
add
sub
sub
sub
sub
sub
sub
add
sub
add
sub
sub
add
add
sub
sub
add
add
mov
mov
mov
sub
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
mov
mov
mov
add
add
sub
sub
sub
add
add
sub
sub
add
sub
add
sub
add
mov
mov
mov
sub
sub
sub
sub
add
sub
add
sub
add
add
sub
sub
sub
sub
add
add
add
add
add
sub
add
sub
sub
sub
sub
sub
add
sub
mov
mov
mov
sub
add
add
sub
add
add
add
add
add
sub
add
add
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
add
add
sub
add
add
sub
sub
sub
sub
add
add
add
mov
mov
mov
add
sub
add
add
mov
mov
mov
add
add
add
add
add
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
sub
add
add
add
add
add
add
sub
sub
add
sub
add
mov
mov
mov
add
sub
add
sub
add
add
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
add
add
add
mov
mov
mov
sub
add
sub
add
add
add
sub
sub
add
add
add
sub
add
sub
add
sub
sub
add
sub
sub
add
add
add
add
mov
mov
mov
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
add
add
sub
sub
sub
sub
add
add
add
add
add
add
sub
sub
sub
add
sub
add
sub
add
add
sub
sub
sub
add
sub
add
add
add
sub
add
sub
mov
mov
mov
sub
add
add
sub
add
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
add
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
sub
sub
add
sub
add
add
add
sub
add
mov
mov
mov
sub
add
sub
add
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
add
sub
add
add
add
add
add
add
add
add
add
sub
add
mov
mov
mov
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
sub
sub
add
sub
sub
add
add
add
add
add
sub
add
add
mov
mov
mov
add
add
add
add
add
add
mov
mov
mov
sub
add
add
sub
add
add
add
sub
sub
add
sub
sub
add
add
mov
mov
mov
add
sub
add
add
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
mov
mov
mov
add
sub
sub
sub
sub
add
add
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
add
mov
mov
mov
sub
sub
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
add
sub
add
add
sub
sub
add
sub
sub
sub
add
add
sub
add
add
add
add
sub
add
add
sub
mov
mov
mov
sub
add
sub
add
add
add
sub
add
add
add
add
sub
sub
add
sub
sub
sub
sub
sub
add
mov
mov
mov
sub
add
sub
sub
sub
sub
sub
add
add
add
sub
add
sub
sub
sub
add
sub
add
add
add
add
add
add
add
sub
sub
sub
add
mov
mov
mov
sub
sub
add
add
add
sub
add
sub
add
sub
mov
mov
mov
sub
sub
add
add
sub
add
sub
sub
sub
sub
sub
add
sub
add
mov
mov
mov
add
sub
sub
sub
sub
sub
add
add
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
sub
add
add
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
sub
add
add
add
add
sub
sub
add
add
add
sub
add
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
add
mov
mov
mov
add
add
add
add
add
add
sub
sub
sub
add
add
add
add
add
sub
sub
sub
sub
sub
sub
add
add
add
add
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
sub
add
mov
mov
mov
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
add
add
sub
sub
sub
add
add
sub
add
add
add
sub
add
add
add
add
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
add
add
sub
add
sub
sub
add
sub
add
sub
sub
add
add
sub
add
sub
add
add
sub
sub
sub
sub
sub
sub
add
add
sub
add
add
add
add
sub
add
sub
add
add
add
sub
mov
mov
mov
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
sub
add
sub
sub
add
sub
add
sub
sub
mov
mov
mov
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
add
add
add
sub
sub
add
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
sub
sub
sub
add
sub
mov
mov
mov
sub
sub
add
sub
add
sub
add
sub
add
add
add
sub
sub
add
add
sub
add
sub
sub
add
sub
sub
add
sub
mov
mov
mov
sub
sub
add
sub
sub
add
sub
sub
sub
add
add
sub
sub
sub
sub
sub
mov
mov
mov
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
add
add
sub
sub
sub
add
sub
add
add
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
add
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
add
sub
add
add
add
add
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
sub
add
add
sub
add
sub
add
mov
mov
mov
sub
sub
sub
add
sub
add
add
sub
add
add
add
sub
add
add
mov
mov
mov
add
sub
add
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
add
sub
add
sub
sub
add
add
sub
sub
sub
sub
add
sub
add
sub
mov
mov
mov
add
add
add
sub
add
sub
sub
sub
add
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
sub
add
sub
sub
add
sub
add
add
add
sub
sub
add
sub
sub
sub
sub
add
add
add
sub
add
add
sub
add
sub
add
sub
sub
mov
mov
mov
add
add
sub
add
sub
sub
sub
sub
add
add
sub
add
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
sub
add
add
sub
add
add
add
sub
add
add
add
add
add
sub
add
sub
add
mov
mov
mov
add
sub
sub
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
add
sub
sub
mov
mov
mov
sub
sub
sub
add
add
sub
add
sub
add
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
add
add
add
add
sub
mov
mov
mov
add
add
sub
sub
sub
add
sub
add
sub
add
sub
add
sub
add
mov
mov
mov
add
sub
add
sub
add
sub
add
sub
sub
add
add
add
sub
sub
add
add
add
sub
add
sub
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
add
add
add
add
sub
mov
mov
mov
add
sub
sub
sub
add
add
add
add
mov
mov
mov
sub
sub
sub
sub
add
sub
add
sub
add
sub
sub
add
sub
sub
sub
sub
add
sub
sub
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
sub
add
add
sub
add
sub
sub
sub
mov
mov
mov
sub
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
sub
add
add
add
sub
add
sub
add
add
sub
mov
mov
mov
sub
add
sub
add
sub
add
mov
mov
mov
sub
add
sub
sub
sub
sub
add
add
sub
sub
add
sub
add
sub
sub
add
sub
add
add
add
sub
add
add
sub
sub
add
sub
sub
sub
add
mov
mov
mov
sub
add
sub
add
mov
mov
mov
sub
add
add
sub
sub
add
sub
add
sub
add
sub
sub
add
add
sub
sub
add
add
sub
sub
add
sub
sub
add
mov
mov
mov
sub
sub
sub
add
sub
add
sub
add
add
add
sub
add
add
sub
sub
add
sub
sub
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
sub
add
add
add
sub
sub
sub
mov
mov
mov
sub
add
add
add
mov
mov
mov
add
add
sub
add
sub
add
sub
sub
sub
add
add
sub
sub
sub
mov
mov
mov
add
sub
add
sub
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
sub
add
add
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
add
add
add
add
sub
sub
add
sub
sub
add
add
add
add
add
sub
add
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
add
add
sub
sub
add
mov
mov
mov
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
add
add
add
add
sub
add
add
sub
add
sub
sub
add
sub
add
sub
add
add
add
add
add
sub
sub
sub
sub
sub
add
sub
mov
mov
mov
sub
add
sub
add
sub
add
add
sub
add
add
sub
sub
sub
sub
add
sub
sub
add
add
sub
add
add
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
mov
mov
mov
add
add
sub
sub
sub
add
sub
sub
sub
sub
add
add
add
add
add
sub
add
add
mov
mov
mov
add
sub
sub
sub
sub
sub
sub
sub
add
sub
mov
mov
mov
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
add
add
add
add
add
sub
add
add
sub
add
add
sub
sub
add
sub
sub
add
add
sub
sub
add
add
add
add
add
add
sub
add
add
mov
mov
mov
add
add
sub
sub
sub
sub
sub
sub
add
sub
add
sub
add
sub
sub
add
sub
sub
add
add
add
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
add
add
add
sub
add
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
add
add
add
add
sub
sub
add
sub
sub
sub
add
add
sub
sub
sub
sub
sub
add
mov
mov
mov
sub
sub
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
add
add
sub
sub
sub
sub
sub
add
add
add
sub
add
add
sub
sub
sub
add
sub
sub
sub
add
sub
add
mov
mov
mov
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
add
add
add
sub
add
sub
sub
sub
sub
sub
sub
add
add
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
add
add
add
add
sub
sub
sub
add
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
sub
add
sub
mov
mov
mov
add
sub
sub
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
add
sub
sub
add
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
add
add
sub
add
add
add
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
add
sub
sub
add
mov
mov
mov
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
sub
add
add
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
add
sub
add
add
add
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
add
sub
sub
sub
sub
sub
add
sub
add
mov
mov
mov
sub
sub
add
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
add
add
sub
add
sub
sub
sub
sub
sub
add
sub
add
sub
add
mov
mov
mov
sub
sub
add
add
sub
add
sub
sub
sub
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
add
add
sub
sub
sub
sub
mov
mov
mov
add
sub
add
sub
add
add
add
add
add
add
add
add
mov
mov
mov
add
sub
add
sub
add
sub
add
add
add
sub
sub
add
sub
sub
add
add
add
add
sub
sub
add
add
sub
add
sub
add
add
sub
add
add
add
sub
add
sub
mov
mov
mov
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
sub
add
sub
add
add
add
add
sub
sub
sub
add
add
mov
mov
mov
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
sub
sub
add
sub
add
add
add
sub
add
sub
sub
sub
sub
add
add
add
add
sub
add
add
add
add
sub
sub
add
mov
mov
mov
add
add
add
sub
sub
add
add
add
add
add
mov
mov
mov
sub
sub
add
sub
mov
mov
mov
add
sub
sub
add
add
add
sub
add
add
sub
sub
add
sub
add
sub
sub
add
sub
add
add
add
sub
add
sub
sub
sub
add
add
sub
add
add
add
add
add
mov
mov
mov
sub
add
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
add
sub
add
add
sub
add
add
add
add
mov
mov
mov
add
add
add
sub
add
add
sub
sub
sub
add
add
sub
sub
add
sub
add
sub
add
mov
mov
mov
add
add
sub
add
add
add
sub
add
add
add
add
add
add
sub
sub
add
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
sub
sub
add
mov
mov
mov
add
sub
add
add
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
add
add
sub
sub
sub
sub
add
sub
add
sub
add
mov
mov
mov
add
sub
add
add
add
add
sub
sub
sub
add
add
add
add
add
mov
mov
mov
sub
sub
sub
add
add
add
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
sub
sub
sub
sub
add
add
add
add
sub
add
sub
sub
sub
sub
mov
mov
mov
add
sub
sub
add
add
add
sub
add
add
add
add
sub
sub
sub
sub
sub
add
add
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
mov
mov
mov
add
sub
sub
add
sub
add
add
add
add
sub
sub
sub
add
sub
add
add
add
add
add
add
add
sub
add
add
sub
sub
sub
add
add
sub
add
add
mov
mov
mov
sub
add
sub
add
sub
sub
sub
add
add
sub
add
add
sub
sub
sub
add
sub
add
add
sub
add
add
add
sub
add
sub
sub
add
sub
add
mov
mov
mov
add
add
add
sub
add
sub
sub
sub
add
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
add
mov
mov
mov
sub
add
sub
add
sub
add
sub
sub
sub
sub
sub
add
mov
mov
mov
add
add
add
sub
sub
add
add
add
add
sub
add
sub
add
sub
add
sub
sub
add
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
mov
mov
mov
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
add
add
sub
sub
add
add
sub
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
sub
add
sub
add
sub
add
add
add
sub
add
mov
mov
mov
add
add
add
add
mov
mov
mov
add
add
sub
add
add
sub
add
sub
sub
add
add
add
add
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
add
sub
sub
sub
sub
sub
sub
sub
add
sub
add
add
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
add
add
add
sub
add
sub
sub
sub
add
mov
mov
mov
add
add
add
sub
add
sub
add
add
add
add
sub
add
sub
add
sub
sub
sub
add
sub
add
add
sub
sub
add
mov
mov
mov
sub
sub
add
add
add
sub
sub
add
add
sub
mov
mov
mov
add
add
add
add
add
sub
sub
sub
add
sub
sub
add
add
sub
add
add
add
add
mov
mov
mov
add
sub
add
add
mov
mov
mov
sub
add
add
add
add
sub
add
add
add
sub
sub
sub
add
add
add
add
mov
mov
mov
add
sub
sub
sub
add
sub
sub
add
sub
add
sub
add
add
sub
add
add
sub
add
mov
mov
mov
add
add
sub
add
add
add
mov
mov
mov
sub
sub
sub
sub
mov
mov
mov
add
sub
add
add
add
sub
add
sub
add
sub
mov
mov
mov
sub
sub
add
sub
sub
add
sub
add
add
sub
sub
add
add
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
sub
add
add
sub
add
sub
add
sub
add
add
sub
sub
add
mov
mov
mov
sub
sub
add
add
add
sub
add
add
sub
sub
sub
sub
add
sub
add
add
add
add
add
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
sub
add
add
add
add
add
sub
sub
sub
add
add
add
sub
add
add
sub
add
add
sub
add
sub
sub
sub
add
add
add
mov
mov
mov
sub
sub
add
sub
sub
add
sub
sub
add
add
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
add
add
add
add
sub
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
add
add
add
mov
mov
mov
add
add
sub
sub
sub
add
sub
add
add
add
add
add
add
add
sub
sub
add
add
mov
mov
mov
sub
add
sub
sub
sub
sub
add
add
add
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
add
add
add
mov
mov
mov
add
add
add
sub
add
add
mov
mov
mov
add
sub
add
sub
sub
sub
sub
sub
add
add
add
add
add
add
mov
mov
mov
add
sub
add
add
add
sub
sub
add
add
add
sub
sub
sub
sub
add
sub
add
sub
add
sub
sub
sub
sub
add
sub
add
add
add
add
sub
add
add
mov
mov
mov
sub
add
add
add
sub
sub
add
add
sub
add
add
add
sub
sub
sub
sub
sub
sub
sub
add
mov
mov
mov
add
sub
add
sub
sub
sub
sub
add
add
add
mov
mov
mov
add
sub
sub
add
add
sub
sub
sub
add
add
sub
sub
sub
add
add
sub
add
add
add
sub
add
sub
add
add
sub
add
add
sub
sub
add
add
add
sub
add
add
sub
sub
add
sub
add
add
add
mov
mov
mov
sub
add
sub
add
add
sub
add
add
sub
add
sub
add
sub
add
sub
sub
add
sub
add
sub
sub
add
mov
mov
mov
sub
add
add
add
sub
sub
sub
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
sub
add
mov
mov
mov
sub
add
add
sub
sub
add
add
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
sub
add
add
sub
sub
add
add
sub
add
add
mov
mov
add
add
sub
add
sub
sub
add
call
ret
