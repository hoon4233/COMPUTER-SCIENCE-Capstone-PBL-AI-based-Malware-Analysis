sti
idiv
push
rol
push
mov
call
mov
mov
pop
ret
sub
out
fnsave
xor
push
adc
push
push
fistp
add
inc
pop
inc
dec
jne
jmp
push
mov
fst
inc
push
sbb
bound
sti
sti
pop
fisubr
jbe
push
or
xchg
ret
mov
sbb
xchg
inc
fnsave
sbb
mov
push
add
test
ret
mov
xlat
pop
inc
add
pop
das
(bad)
jl
retf
adc
inc
and
or
scas
sbb
not
cmp
cld
lea
inc
add
clc
mov
test
out
dec
neg
je
push
popa
fadd
jne
xor
dec
add
push
in
xchg
add
or
fnstenv
pop
rol
dec
jae
mov
inc
or
nop
push
add
push
push
push
push
sti
pop
add
cmp
stos
clc
je
pop
pop
pop
xchg
push
add
mov
or
push
mov
push
test
mov
mov
xor
push
call
mov
test
mov
mov
xor
mov
test
mov
jne
cmp
jbe
loope
adc
cmp
or
mov
add
inc
xor
and
in
push
push
stos
add
push
pop
push
dec
cmp
jnp
add
push
mov
shr
rep
mov
and
rep
mov
push
cmp
adc
ret
int
lea
not
mov
ret
jg
push
add
leave
mov
sbb
mov
cmp
pop
(bad)
mov
lea
jbe
jmp
mov
cmp
jne
or
sub
lods
idiv
sub
pusha
lock
push
push
or
mov
add
or
rcl
jnp
rep
or
xor
mov
pop
push
or
mov
add
outs
ins
mov
dec
out
lock
xor
push
add
cmp
mov
mov
jl
xor
adc
inc
lock
je
lods
dec
push
lods
xchg
add
push
je
sbb
add
leave
jbe
mov
pop
popa
fcomp
cmp
jbe
lea
inc
add
add
inc
test
or
push
ficomp
and
inc
xor
or
loopne
mov
addr16
push
call
ins
add
dec
add
ja
pop
cld
mov
jae
push
pop
sbb
mov
mov
in
mov
push
mov
ins
jne
maskmovq
cmp
inc
or
test
xor
sbb
lds
or
or
outs
or
pusha
mov
fucomp
ds
dec
xchg
and
push
ins
push
dec
popf
or
cmp
or
bound
xor
icebp
fldenv
shr
pop
les
repz
mov
test
and
hlt
sti
mov
pop
inc
or
movs
jo
push
je
sub
lods
inc
pushf
push
ret
add
add
jne
and
adc
or
stos
repz
test
test
add
pop
out
mov
mov
aam
add
rol
cdq
cwde
sub
inc
jne
sub
nop
add
push
mov
out
push
pop
and
in
dec
or
popa
in
fisttp
push
adc
sbb
cmps
enter
cmp
push
sbb
mov
and
int
loope
addr16
cmp
and
mov
mov
das
sub
adc
shr
mov
push
push
loop
shr
retf
jo
pop
push
add
clc
dec
in
sti
(bad)
dec
mov
dec
jmp
lea
cmp
in
push
mov
push
xor
retf
mov
inc
je
mov
lock
aaa
rcr
jbe
push
xor
mov
sbb
les
or
cmp
enter
pop
pop
sub
mov
pop
sub
add
mov
jns
adc
into
(bad)
in
rcr
fdivr
push
sub
sar
rol
inc
sti
jecxz
pop
jns
or
mov
xchg
dec
dec
jle
sbb
retf
pop
fdiv
scas
and
inc
cmp
jl
mov
push
das
pop
sar
jo
loopne
mov
sbb
aas
and
pop
pop
xchg
cwde
nop
sub
sti
xchg
fwait
jne
jb
push
push
push
push
push
mov
or
mov
scas
add
jmp
and
jne
push
mov
sbb
add
js
aad
dec
xor
add
dec
cmp
lds
inc
gs
cmp
jne
mov
cmp
(bad)
jne
cmp
or
adc
imul
pop
xchg
jo
jb
popa
mov
out
jmp
xor
mov
mov
imul
mov
mov
push
jl
jge
fst
mov
arpl
sbb
pop
or
push
mov
mov
or
fs
mov
mov
mov
sub
fisub
ins
mov
movs
imul
imul
test
stos
inc
push
dec
mov
dec
lods
lods
push
scas
outs
pusha
scas
arpl
cmp
mov
leave
rcr
(bad)
sub
mov
add
push
iret
call
xchg
jae
inc
xchg
cwde
sti
xor
jge
push
cmp
push
push
sahf
je
pop
mov
test
xchg
lods
jge
push
sub
mov
xor
(bad)
cmc
lods
imul
mov
cld
icebp
fisttp
test
push
push
mov
xchg
xchg
jo
fnstsw
out
sahf
loopne
loop
in
jns
cmps
fst
hlt
div
clc
in
sar
jmp
inc
push
in
cmps
cmp
out
dec
lock
sahf
cmps
jge
rcl
aam
inc
(bad)
xlat
fsubr
(bad)
jns
fisub
(bad)
mov
lea
push
push
mov
push
lea
mov
or
test
push
adc
stos
dec
dec
rcr
es
xchg
or
cmp
adc
hlt
sbb
sbb
std
and
and
push
adc
pop
lods
adc
and
jle
add
adc
pop
movs
repz
or
xchg
xchg
cmp
or
sub
in
sbb
and
dec
or
pop
or
add
fs
mov
aaa
adc
cmp
adc
rcr
popa
shl
clc
clc
ror
hlt
hlt
lock
aaa
inc
jnp
push
mov
in
push
in
pop
or
mov
mov
push
lock
xor
sub
cmp
out
add
xchg
pop
ret
iret
push
fistp
icebp
mov
mov
push
push
nop
mov
lock
push
or
hlt
je
sbb
enter
mov
out
scas
xchg
cmp
jne
(bad)
pop
std
jmp
xor
xor
and
imul
sub
imul
fadd
lds
scas
xor
sub
pop
xchg
loopne
xor
xor
(bad)
lea
inc
cmp
mov
cld
mov
lods
out
push
lods
dec
jb
jno
sbb
lahf
test
push
loopne
mov
mov
lock
mov
sbb
pop
pop
mov
rep
and
or
rcl
(bad)
inc
sub
jne
mov
shr
dec
add
push
mov
adc
push
or
dec
push
outs
or
lock
daa
or
pusha
xor
mov
jmp
or
xchg
push
sub
add
jecxz
in
mov
fdivr
imul
movs
push
or
icebp
popf
mov
push
push
(bad)
ficomp
sub
xor
push
push
push
ss
test
loopne
fcomp
(bad)
push
or
mov
dec
and
sub
pop
mov
xchg
add
mov
lds
mov
ins
cmp
mov
sub
add
jmp
lea
mov
mov
and
jne
out
outs
call
sub
icebp
test
je
mov
inc
pop
mov
mov
and
ffreep
mov
je
jmp
je
mov
push
inc
add
ds
mov
sub
ret
test
add
add
out
or
das
push
ja
mov
inc
lea
sbb
repnz
fwait
cwde
dec
mov
(bad)
movs
or
mov
cmps
ds
add
xlat
and
add
pusha
jns
outs
add
jns
in
xor
cmp
xor
or
test
imul
aas
mov
movs
fs
or
adc
pinsrw
and
jnp
or
fnstcw
mov
inc
mov
ins
cld
fistp
ins
(bad)
je
push
clc
jno
sbb
cmp
adc
(bad)
in
push
fmul
lods
mov
lods
call
jne
or
jl
mov
les
(bad)
add
psubb
sar
ret
lods
push
push
movs
and
and
stos
mov
addr16
mov
fild
ds
add
dec
add
or
inc
sub
cmp
pop
sub
fist
add
sbb
imul
push
out
xor
push
jb
dec
xchg
stc
adc
adc
inc
mov
test
cmp
std
ins
adc
data16
inc
cli
xchg
rol
cmp
and
lock
lea
sti
fst
sub
pop
stc
mov
push
mov
fadd
test
in
cmps
add
inc
add
or
ja
out
xor
fadd
mov
call
movs
adc
in
aad
push
xor
lea
mov
dec
jne
test
jne
xor
jmp
push
cmp
ror
pop
add
test
imul
adc
dec
lds
push
jne
push
mov
inc
mov
les
je
cmp
cmp
xor
in
push
mov
mov
cmp
je
push
sbb
xor
xchg
dec
lock
in
rcr
push
lock
shr
add
or
pop
xor
inc
clc
fwait
int
add
jg
adc
loopne
or
dec
ror
test
out
ret
xor
loop
hlt
xchg
lock
cld
adc
ror
or
or
aad
ficom
or
pusha
sbb
mov
ret
dec
mov
mov
or
mov
cmp
pop
xor
push
ins
xchg
pop
ins
in
fild
fstp
fld
fadd
(bad)
and
aam
fcom
int3
test
lods
xchg
rcr
leave
sbb
sub
sbb
mov
les
and
adc
dec
pop
mov
adc
inc
sar
shl
cs
xchg
movs
in
in
and
data16
in
loopne
fdiv
adc
or
xchg
int3
(bad)
les
imul
mov
mov
sub
or
cwde
or
int
(bad)
pop
mov
inc
(bad)
imul
dec
scas
imul
push
(bad)
sub
jo
sbb
xchg
and
fiadd
outs
mov
pop
add
jecxz
cdq
mov
and
push
in
retf
sbb
stos
xor
add
and
data16
clts
adc
or
mov
mov
adc
inc
mov
inc
jmp
cmp
xor
mov
cmp
pop
ret
push
jge
and
loop
lods
stos
add
xchg
or
sbb
ret
mov
pop
sar
fninit
sbb
mov
fadd
repz
cld
or
or
in
jl
out
or
dec
pop
or
sbb
or
adc
les
add
jmp
mov
aam
enter
in
rol
ror
fisttp
inc
or
add
lock
je
add
push
ja
(bad)
loopne
test
sub
adc
mov
cmp
push
mov
or
shl
loopne
test
pop
not
mov
add
add
or
add
jbe
ret
arpl
add
je
adc
jns
mov
xchg
adc
xchg
jne
jl
mov
cwde
push
popa
add
or
add
jno
pop
mov
xor
iret
loopne
inc
push
les
aad
jmp
je
dec
and
jl
je
or
mov
adc
repz
loope
add
je
out
or
mov
in
sbb
mov
mov
retf
dec
adc
leave
adc
push
(bad)
pop
fcom
push
add
fsubr
sbb
dec
lea
add
push
in
sbb
jne
add
ret
push
or
jg
lock
in
pop
inc
add
add
popa
inc
adc
push
adc
jmp
push
push
cmps
dec
mov
add
mov
pop
cmc
sub
ja
push
sbb
add
adc
ficomp
ins
mov
push
lea
cmp
movs
stos
and
cld
je
cmp
sub
pop
sub
cli
add
loop
lods
movs
and
sbb
fcomp
shl
outs
add
out
sub
gs
push
pop
idiv
adc
movs
sub
sbb
push
add
jo
pop
cld
sbb
imul
mov
movs
bnd
in
add
mov
push
adc
lods
cmp
fwait
aam
icebp
setno
dec
pop
(bad)
cmp
dec
fld
push
pop
adc
pop
mul
sbb
and
and
pop
fld
je
cmp
jne
mov
push
daa
std
stc
mov
sub
in
imul
aam
cmp
je
push
add
daa
fndisi(8087
inc
cmp
test
xchg
lock
mov
popa
adc
or
xchg
jo
cmp
mov
mov
dec
push
dec
xor
pop
pop
pop
jecxz
and
stos
adc
fwait
jno
in
cs
xor
cmp
mov
jl
test
jge
push
push
sbb
retf
ficomp
xchg
pop
jns
inc
sahf
jmp
lds
push
xor
sbb
iret
pop
fcomp
aas
loopne
or
add
ja
jnp
push
push
and
ror
icebp
dec
xor
int3
adc
daa
dec
jp
ffree
scas
jl
or
add
(bad)
pop
scas
inc
sbb
and
ins
jb
jle
jae
(bad)
mov
pop
cmp
mov
mov
push
ja
mov
jne
pop
lock
and
repnz
into
push
test
mov
pop
xchg
(bad)
cmps
popa
jg
mov
push
adc
dec
push
call
cmp
call
xor
es
retf
sahf
add
jb
hlt
push
sub
push
and
add
pop
cmp
sub
cmp
into
repnz
call
movs
and
lahf
xchg
imul
mov
add
push
or
adc
js
sub
jbe
push
(bad)
sub
dec
mov
neg
adc
test
add
retf
add
pushf
in
sub
mov
add
pop
aad
mov
pop
sbb
int
mov
or
and
mov
mov
loope
xor
inc
push
mov
push
inc
pop
cld
rcr
or
dec
neg
sbb
and
les
xor
add
lock
xor
in
out
jbe
test
gs
div
jbe
cmp
or
adc
xor
icebp
adc
push
jmp
push
xchg
shl
ja
and
add
outs
sub
cmp
movs
mov
or
jmp
cmp
push
cmc
ins
xor
add
push
push
(bad)
push
pop
xchg
jnp
aas
xor
sub
push
add
push
mov
push
test
jae
fimul
fadd
adc
xor
adc
fadd
cmc
or
add
and
sbb
push
arpl
push
pop
and
adc
sbb
loopne
push
dec
mov
push
jmp
ja
mov
push
add
mov
lea
sbb
mov
xor
sbb
cmp
cmp
cmp
fimul
(bad)
sub
sbb
and
adc
and
imul
(bad)
daa
loope
and
push
push
push
push
shl
xor
pop
push
add
seto
dec
pop
pusha
push
bnd
pusha
es
and
add
leave
leave
pop
push
push
add
mul
hlt
setne
dec
and
mov
das
lahf
fdiv
sbb
xor
add
movd
sbb
fmul
fiadd
push
or
add
fdiv
call
pop
sub
xor
or
push
inc
or
lock
cmps
sub
add
xlat
xlat
push
(bad)
adc
push
dec
out
push
sbb
lea
adc
pop
int3
cli
(bad)
pop
in
add
adc
push
je
add
gs
loop
xor
dec
adc
jbe
push
xchg
shr
push
call
mov
test
je
jae
imul
(bad)
xor
fisttp
ds
cmp
test
jl
out
mov
add
push
jge
ins
push
jae
loope
add
data16
retf
adc
inc
stos
add
cmp
out
mov
stos
repz
jg
imul
mov
xchg
sub
jb
lahf
fwait
push
push
inc
cwde
add
mov
test
add
mov
test
les
or
mov
sbb
xor
add
and
jle
jl
mov
xor
push
loop
dec
and
enter
popf
lds
and
jg
fisubr
sbb
mov
adc
push
mov
repz
mov
and
sub
jae
push
pusha
aas
push
(bad)
sti
pop
rcr
jmp
jnp
push
push
call
mov
and
fbld
or
push
pusha
cmp
rcl
mov
add
(bad)
lock
adc
fdivr
mov
bound
push
push
je
push
jo
lea
les
fadd
fisubr
es
mov
sub
jb
and
adc
or
adc
push
jp
call
and
xor
xor
mov
or
cmp
je
push
cmp
cmps
cmp
sbb
xlat
jnp
pop
sub
push
xor
ret
pop
(bad)
mov
test
pop
je
int
idiv
or
or
icebp
or
cmc
adc
xor
and
retf
adc
push
mov
jl
lock
imul
pop
mov
(bad)
in
jmp
mov
repz
push
pop
cmp
pop
adc
jp
out
aas
dec
add
xor
or
mov
mov
jmp
cmp
lock
xchg
mov
xor
mov
adc
push
pop
aas
pop
inc
sub
xchg
or
pop
ret
stc
sbb
sub
push
cmps
mov
xor
mov
sbb
(bad)
fcomp
mov
add
test
or
inc
jns
sub
test
cmps
sbb
cld
add
ret
jne
cli
adc
rcr
inc
mov
mov
fs
xor
test
mov
jb
inc
mov
mov
shl
mov
(bad)
jne
stos
inc
or
jb
fs
mov
shl
jl
dec
sub
sub
repz
sbb
xchg
mov
dec
jno
cmp
jp
add
in
inc
test
mov
pop
pop
mov
add
or
sbb
fwait
inc
or
push
ds
loopne
aas
repz
mov
push
fs
jb
add
and
mov
jae
mov
cmp
jl
xor
or
int
stc
add
jg
imul
or
push
jne
lea
mov
push
(bad)
dec
pop
cmp
jge
mov
mov
push
outs
rol
pop
cs
cmp
outs
mov
(bad)
pop
loope
js
sbb
mov
add
push
or
ret
xor
lahf
push
or
push
cmp
pop
mov
imul
outs
cmp
sub
je
mov
inc
clc
jb
mov
xchg
cli
jae
(bad)
pop
sub
sub
cdq
and
pop
add
sar
xor
xor
or
push
das
jl
pop
dec
jp
pop
nop
jo
fisttp
sub
cmp
jb
adc
push
pop
or
xor
jmp
add
or
inc
mov
ins
das
int3
test
xlat
jbe
out
sar
js
mov
sbb
inc
pop
jno
pushf
repnz
fild
sbb
push
xor
ret
fild
mov
jmp
add
inc
or
push
push
or
or
mov
push
or
or
adc
sub
pop
loope
enter
mov
adc
shr
cmp
inc
add
enter
pop
adc
fnstsw
and
sbb
xor
mov
aas
test
jle
push
push
jbe
adc
daa
mov
das
inc
inc
dec
sub
or
out
rol
call
fisttp
adc
push
popa
fdivr
mov
inc
sbb
test
mov
mov
jg
and
lea
loopne
or
out
lock
(bad)
fs
push
jns
rol
adc
cmps
xor
bound
sub
push
cmps
inc
xlat
fwait
push
cmp
cld
pop
xlat
(bad)
cmps
or
xor
adc
cmps
ds
dec
jns
push
aaa
add
cmp
je
retf
daa
je
fdiv
cmps
pop
inc
sbb
pop
inc
mov
das
pop
cmps
adc
adc
push
pop
jmp
inc
call
or
mov
enter
shl
test
enter
sbb
rcr
lahf
shl
sub
in
sub
setns
mov
scas
push
cld
je
pop
xchg
sub
lock
lock
aam
sbb
fadd
dec
adc
neg
sbb
(bad)
ffreep
cmp
or
sub
dec
out
push
mov
ds
(bad)
(bad)
jg
call
cmp
retf
mov
xor
or
push
push
clc
mov
add
push
mov
mov
jbe
adc
aas
adc
cmc
(bad)
bound
iret
pop
push
sbb
xchg
jne
icebp
push
mov
inc
aaa
ret
jg
mov
mov
inc
inc
xor
push
pop
lea
dec
or
jge
sub
lea
stos
push
fdiv
or
sti
jecxz
sub
push
push
push
and
in
pop
ins
sub
imul
lea
jmp
push
xchg
or
mov
inc
mov
mov
aam
or
push
sub
js
push
fst
jns
icebp
adc
stos
xlat
jge
bound
inc
rcpps
sbb
clc
xor
cmps
lock
cmp
jle
fsubr
ret
cmp
mov
dec
pop
(bad)
jle
sub
add
push
inc
xchg
jge
sbb
push
push
jp
add
or
jbe
mov
push
dec
cs
inc
mov
shl
inc
ds
imul
inc
(bad)
adc
push
add
push
push
inc
loope
mov
mov
sbb
inc
xlat
ror
push
or
adc
das
sub
sub
rol
pusha
adc
mov
jne
into
adc
inc
add
push
sar
sbb
ror
iret
adc
add
dec
jmp
pop
je
jge
fidivr
mov
sub
cmp
jmp
push
sub
mov
test
pop
xor
jmp
fst
adc
rcl
add
pop
cmp
push
or
mov
mov
arpl
arpl
cld
or
add
mov
(bad)
out
pop
das
ds
jo
sbb
cdq
lock
dec
sbb
mov
add
and
add
mov
mov
inc
cmp
or
jnp
int
(bad)
cld
sbb
sbb
pop
or
mov
mov
mov
lods
xor
dec
ins
mov
arpl
rol
ret
add
fdiv
ja
sar
das
cwde
mov
cmp
in
adc
pop
ins
pop
jo
mov
and
xchg
fist
pop
call
pop
xor
xor
inc
lahf
xor
and
mov
pop
repz
sbb
inc
mov
retf
lock
ins
inc
mov
inc
sub
mov
cld
mov
mov
cmp
(bad)
xor
add
add
rcl
pop
jmp
rcl
xchg
es
lods
fiadd
repnz
mov
push
push
xchg
mov
nop
pop
add
mov
(bad)
and
cmp
out
loopne
sti
mov
pop
jmp
ins
mov
(bad)
sub
cmp
test
bnd
les
mov
ret
fidivr
push
pop
dec
lods
or
mov
mov
jl
jle
or
cs
push
push
push
sbb
xchg
mov
xchg
xchg
loope
leave
enter
repnz
sbb
or
jmp
mov
movs
ins
xchg
mov
fwait
js
and
pop
xor
or
ror
ja
jmp
push
enter
sbb
adc
add
sub
nop
push
jbe
aaa
stos
div
addr16
in
sbb
push
neg
xor
ret
lea
test
or
adc
fist
or
icebp
push
adc
or
cmp
jbe
xor
das
shl
fld
data16
mov
pmulhw
adc
movs
sbb
add
sub
jp
sahf
add
sub
sub
dec
mov
jle
icebp
mov
cmp
or
or
push
and
hlt
cmp
cmp
mov
mov
jns
cmp
bound
and
(bad)
fisttp
sbb
dec
sub
mov
sahf
movs
cmp
sbb
movs
sub
adc
and
aas
adc
mov
adc
mov
adc
inc
mov
jns
shl
xchg
or
inc
into
push
loopne
inc
inc
mov
pusha
test
sbb
(bad)
xor
push
stos
push
mov
push
mov
push
mov
sbb
js
retf
shl
fnsave
sub
xor
outs
inc
(bad)
sbb
(bad)
in
ins
dec
mov
cmp
inc
mov
sbb
lea
push
out
adc
or
or
cmp
inc
add
pop
inc
data16
adc
jle
pop
js
jne
les
sbb
cli
ror
sbb
adc
jne
xor
cdq
mov
add
cmp
cmp
mov
push
push
test
pop
lods
aas
add
ror
lea
sub
repz
cmp
inc
jmp
lea
ins
xor
xchg
mov
add
pop
cmp
inc
add
or
mov
adc
jnp
sub
or
or
cmp
push
adc
inc
mov
sub
sub
ins
scas
and
sub
pop
dec
mov
sbb
das
sbb
dec
movs
pop
cmps
sub
imul
and
dec
xchg
adc
test
pop
sahf
adc
(bad)
push
mov
or
test
push
mov
xor
sub
mov
push
arpl
dec
lods
aad
lods
cmp
push
add
jno
stos
mov
jo
or
ss
mov
int3
call
mov
fwait
add
inc
jmp
cs
inc
out
dec
cmp
sub
ds
sub
popf
cmps
dec
inc
sbb
sub
sub
xchg
ror
jmp
or
lea
add
das
inc
js
add
push
ret
std
and
aad
and
(bad)
ins
das
imul
jae
scas
addr16
push
jle
or
mov
cli
push
cmp
add
mov
dec
push
mov
call
clc
xchg
jle
inc
fs
mov
sbb
xchg
push
cmp
push
clc
test
rcl
rol
pop
out
jmp
lock
mov
cmc
in
mov
cmp
xchg
inc
(bad)
or
test
pop
sub
add
popf
sar
and
push
inc
push
ret
mov
adc
add
jo
or
push
cmp
inc
test
dec
call
mov
lods
inc
pushf
dec
fs
add
scas
nop
scas
lahf
cmp
cld
movs
inc
cmp
shl
pop
clc
inc
jecxz
(bad)
mov
push
mov
cmp
jne
int3
cli
(bad)
cs
mov
mov
pop
push
dec
mov
add
jne
test
sbb
sbb
movs
scas
cmp
pushf
pop
sub
xchg
loop
or
cmp
push
pop
push
pop
call
xchg
jb
test
fadd
nop
dec
out
or
push
fs
cmp
inc
in
mov
and
aad
push
rcl
iret
push
push
inc
rol
push
inc
push
dec
fcom
repnz
dec
mov
or
push
jae
ret
neg
in
xlat
xchg
push
adc
out
sub
or
cmp
retf
lds
into
dec
pop
fild
leave
xchg
add
loop
mov
push
inc
and
jae
push
push
cwde
cmps
xor
pusha
div
pushf
inc
sbb
cmp
fild
push
int
shr
lods
je
test
aad
bound
pushf
mov
loop
xor
mov
jge
enter
sbb
icebp
sbb
mov
mov
jmp
outs
movs
lds
push
sub
mov
pop
push
daa
xor
pop
add
in
mov
outs
jae
add
out
inc
add
sub
inc
or
inc
cwde
in
mov
ret
push
ret
arpl
mov
adc
xchg
sub
pcmpeqd
jg
push
shr
mov
and
jg
pop
push
pop
mov
push
ficomp
xchg
das
clc
add
cmp
lahf
cmps
mov
pop
xchg
fidiv
aam
push
ret
rol
pop
sti
cmp
sub
lods
(bad)
adc
js
leave
cmp
sete
and
jae
push
enter
mov
hlt
add
nop
xchg
pop
imul
movs
jnp
mov
icebp
jbe
outs
in
addr16
(bad)
mov
jle
ret
iret
push
in
pushf
call
out
ins
cld
(bad)
fmul
pop
into
or
xchg
pop
sub
dec
mov
lahf
sbb
pusha
cdq
sub
inc
int3
into
sub
pop
pushf
ins
add
sbb
pop
sbb
rcr
or
cmp
jne
sbb
mov
mov
xlat
inc
cmova
iret
lahf
push
xor
push
mov
(bad)
lea
xchg
inc
sbb
fild
call
add
out
and
add
push
pop
mov
sub
inc
dec
jmp
inc
dec
mov
scas
sbb
clc
push
ss
adc
(bad)
jmp
cmc
pop
pop
push
add
icebp
shr
js
adc
inc
push
or
xor
pop
sub
jl
sbb
jle
add
or
in
int
or
cli
sub
je
xor
cmp
mov
mov
ja
shr
inc
pop
push
ret
push
ror
sahf
les
fcmove
sar
das
add
push
push
scas
pop
cmp
sbb
and
in
push
test
mov
dec
fwait
pop
push
or
pop
test
fcomp
and
mov
or
xor
mov
retf
ret
inc
psrld
jl
js
imul
push
or
adc
and
xor
(bad)
call
in
ss
jo
bnd
jg
dec
or
xchg
mov
adc
fist
cmp
push
adc
jmp
jg
and
pop
and
int3
dec
outs
sbb
lds
les
pop
jnp
dec
push
fstp
sbb
xor
fimul
ror
jl
sub
xchg
sbb
test
pop
cwde
sub
mov
out
inc
mov
cmp
je
aaa
push
dec
sbb
xor
mov
shl
cmp
das
je
push
and
jno
or
adc
mov
call
push
sbb
inc
pushf
out
call
xchg
sahf
cmp
or
xor
loopne
inc
fadd
mov
ins
push
lods
cmps
pop
clts
dec
mov
psraw
or
repz
loope
pop
scas
push
(bad)
jmp
push
out
in
sbb
cmp
mov
sahf
fstp
sub
imul
inc
dec
add
rcr
inc
dec
enter
inc
pop
inc
stos
rcl
dec
and
sbb
iret
or
test
add
inc
or
xor
adc
inc
das
loop
dec
mov
jge
adc
jle
mov
pushf
pop
or
bound
cmp
or
sbb
dec
adc
add
aam
or
xchg
mov
xchg
cdq
add
cld
shl
pushf
cmp
sar
fsubr
inc
in
inc
sub
or
fcom
cmp
lods
ins
sbb
movs
inc
mov
push
test
iret
push
rol
mov
ja
xchg
mov
(bad)
rcl
repnz
sub
push
adc
mov
aam
das
xchg
mov
lahf
dec
pop
xchg
call
call
clc
jb
sub
test
sub
and
adc
scas
xchg
mov
jo
daa
test
push
sbb
jl
xor
in
inc
lea
nop
xchg
sbb
xchg
scas
fcomp
rol
push
mov
add
mov
jp
add
jo
dec
cmp
js
mov
jne
cmp
inc
jo
inc
sub
xor
imul
pop
ins
pop
fisttp
je
add
sub
daa
jecxz
pop
jle
test
cmp
loope
stos
mov
cwde
mov
lods
cwde
repnz
or
mov
xor
cmc
push
jno
xchg
xchg
xor
pop
add
inc
and
jb
xor
jae
mov
out
pop
cmp
int3
and
dec
lds
push
mov
sub
test
sub
inc
jne
aaa
jle
or
cmps
pop
sub
pop
ret
pop
mov
push
push
test
js
into
mov
fist
push
adc
out
dec
dec
cmp
inc
pavgb
stos
jo
ret
push
dec
mov
xor
ds
loop
pop
fild
outs
mov
jae
push
mov
ins
adc
sbb
xchg
xchg
xchg
add
cmp
loope
and
jmp
pop
scas
outs
sub
push
mov
push
mov
dec
add
xor
mov
lahf
add
mov
add
pop
(bad)
les
mov
sub
adc
sbb
sbb
cmp
xor
jmp
pop
repz
inc
push
push
bound
pop
sbb
pusha
push
sub
jp
add
inc
repnz
pop
or
pop
push
jne
push
test
lds
jo
shl
pop
call
rcr
ins
and
push
inc
push
sub
mov
shr
es
mov
aas
jne
jmp
add
shr
in
mov
xlat
retf
in
xchg
or
cmp
adc
ficom
adc
mov
mov
or
mov
mov
inc
mov
sbb
add
add
add
push
push
jmp
xchg
js
add
adc
rol
sbb
push
jb
pop
fs
imul
push
bound
sahf
lea
or
sub
cmp
mov
sub
pop
loope
mov
cmp
mov
js
cmp
mov
inc
cdq
or
push
or
adc
add
inc
xchg
imul
xchg
sbb
push
ins
stc
fist
cmp
adc
inc
sub
sbb
or
xor
pop
not
push
xor
nop
mov
ins
adc
aas
or
and
sbb
adc
loopne
loop
fs
cmp
call
xor
arpl
jne
frstor
push
repnz
jo
(bad)
mov
and
je
push
sbb
inc
cmps
lock
fucomi
inc
cmps
lock
call
imul
cwde
pop
mov
(bad)
sub
push
mov
fimul
and
mov
pop
cld
xchg
test
or
jge
or
push
inc
xor
ins
mov
push
push
into
div
mov
add
add
sub
mov
in
inc
mov
jne
mov
inc
adc
mov
adc
leave
sub
push
and
fcmovnb
xchg
popa
shr
fidivr
loope
jl
push
xchg
(bad)
movs
inc
jns
shl
adc
mov
fdivr
mov
xchg
inc
mov
push
and
push
fstp
js
je
sti
jne
js
inc
sbb
add
aad
adc
xchg
add
and
cmp
aad
inc
sahf
push
into
add
jmp
push
dec
mov
nop
ins
xchg
pop
cmp
and
sbb
dec
mov
dec
inc
jle
idiv
add
jnp
ins
lds
jg
nop
and
push
push
inc
dec
sbb
pop
fldenv
cmc
push
mov
sar
sub
sub
add
add
adc
cdq
in
popf
shr
nop
in
pop
dec
push
jp
xor
inc
lods
push
mov
xchg
xchg
pop
fs
mov
adc
xchg
mov
jnp
sbb
js
add
and
ins
je
js
adc
jmp
je
aaa
xor
push
mov
or
cdq
or
mov
in
into
adc
ret
popa
fisubr
push
test
loope
ins
and
pop
stc
sbb
jl
sub
pop
imul
xchg
xchg
pop
pop
xchg
xchg
jle
add
push
popf
nop
loope
jns
or
inc
push
(bad)
cmp
xchg
mov
mov
sbb
mov
nop
movs
test
fldln2
ds
lea
jmp
sbb
mov
stc
cmc
push
xlat
inc
or
bound
repz
and
ins
leave
lock
sahf
sub
mov
repz
mov
or
fucomp
dec
jl
xor
sbb
push
sub
mov
and
lea
and
inc
mov
mov
pushf
push
inc
push
mov
pop
rol
and
dec
out
add
mov
push
js
nop
or
pop
dec
ins
mov
push
push
xor
inc
ss
mov
mov
fs
loope
je
mov
sbb
and
sbb
and
sbb
inc
scas
movs
lea
pushf
mov
movs
test
cs
or
mov
mov
ret
repz
in
push
push
jns
pop
ins
lods
rcl
sahf
out
jmp
inc
call
popa
mov
imul
mov
mov
adc
fwait
lock
and
cmp
mov
jb
mov
add
push
push
test
mov
dec
mov
push
push
jl
push
push
aaa
push
ret
cmp
jne
clc
xor
push
xor
neg
jl
push
or
jp
les
jbe
jmp
mov
jmp
pushf
jne
test
inc
jl
daa
repnz
(bad)
aaa
add
mov
push
add
adc
(bad)
iret
dec
sub
sub
cmps
jno
mov
scas
sbb
add
pop
ja
add
js
inc
or
outs
xadd
inc
dec
jo
add
cmp
inc
add
and
add
add
jns
add
sbb
or
out
rcr
add
bound
xchg
iret
push
and
scas
xlat
pop
enter
dec
and
lahf
inc
or
nop
rcl
or
push
jg
mov
mov
adc
sbb
mov
jns
es
dec
js
add
dec
js
and
loopne
fnstsw
add
(bad)
jnp
cmc
mov
adc
inc
mov
xor
pop
int3
push
fs
inc
pop
mov
retf
loop
push
inc
jne
imul
addr16
ja
stc
js
or
cmp
adc
jns
out
(bad)
lods
add
add
and
add
pop
cmps
sbb
shl
(bad)
and
mov
add
xchg
mov
lods
mov
int3
fbstp
pushf
xchg
xchg
(bad)
jmp
sbb
mov
xor
xchg
adc
xchg
xchg
sub
rcl
imul
into
inc
test
int
cmp
push
push
or
and
adc
xlat
clc
dec
or
or
adc
cmp
add
(bad)
ins
cli
out
je
imul
or
je
push
sbb
out
jle
push
jg
dec
pop
cld
pop
test
in
add
or
sahf
xchg
arpl
out
ret
ss
mov
imul
popa
movs
bound
mov
jl
push
or
sar
ret
xor
mov
push
test
test
dec
ret
or
pop
and
mov
mov
push
mov
mov
les
imul
pop
in
inc
loope
scas
cmp
sbb
loop
sbb
nop
adc
outs
ins
fist
jo
iret
sti
fdiv
pusha
cmp
cmp
cli
repz
inc
inc
je
xor
mov
ins
push
add
inc
pop
ins
movs
pushf
or
push
lods
pop
movs
jl
je
loopne
loopne
xchg
dec
or
fsubr
into
sub
fld
and
je
mov
pop
dec
or
add
add
js
pop
xor
inc
or
test
ss
js
jg
(bad)
lds
int3
xabort
(bad)
dec
js
sar
mov
push
and
sub
scas
outs
ins
aam
retf
push
cmp
jle
fisttp
out
xlat
jp
push
adc
icebp
or
test
je
lock
xor
fsubr
test
test
push
sbb
dec
fxch
fmul
sub
sbb
adc
call
mov
cdq
dec
std
mov
shl
das
mov
push
push
int3
daa
test
ret
pop
push
daa
and
test
test
adc
mov
add
test
add
add
push
jecxz
xchg
mov
cs
mov
xor
dec
or
and
mov
int
jmp
cmp
pushf
fldcw
arpl
add
cmp
sub
cmc
icebp
jge
lea
cmp
and
adc
test
scas
test
push
xchg
and
xchg
mov
mov
push
test
sar
sub
jmp
sub
out
ret
sbb
push
and
xor
ret
xor
pop
scas
add
stc
loopne
or
add
mov
rcr
adc
push
cli
je
repnz
test
and
xlat
cmp
sub
mov
scas
sbb
leave
leave
cdq
sub
(bad)
cmps
inc
mov
sbb
fdiv
cmps
dec
inc
push
shl
lea
es
xor
xchg
stos
add
add
push
sti
daa
xchg
push
xchg
jmp
sub
jo
aas
fs
in
leave
mov
or
add
out
jle
ret
xor
push
pop
mov
in
lds
pop
inc
test
(bad)
sub
jo
sub
sbb
cwde
dec
clc
out
mov
cmp
jle
sub
addr16
loopne
sub
loop
imul
pop
cmp
pusha
add
scas
scas
test
sub
js
cmp
dec
movs
cld
pop
inc
loopne
and
push
ins
icebp
sbb
call
push
js
sbb
add
xor
cld
xchg
mov
add
lods
xor
fldcw
push
push
push
and
dec
jp
or
iret
aam
sub
jnp
jecxz
mov
enter
inc
xor
add
add
jecxz
out
xchg
adc
inc
out
inc
xchg
push
xor
mov
adc
pop
xlat
mov
aad
inc
inc
push
ja
scas
shr
or
inc
cmp
in
or
icebp
je
cmp
and
add
mov
dec
lahf
add
int3
and
pushf
test
and
das
stos
xor
mov
or
mov
test
mov
mov
stos
loop
xor
bnd
push
cmp
xor
outs
retf
adc
and
sub
bound
cmp
int3
addr16
inc
je
adc
push
or
or
mov
stc
or
cmp
adc
push
je
inc
inc
(bad)
out
mov
dec
add
push
mov
ret
out
ret
xor
addr16
outs
loop
push
dec
xor
lock
add
pop
inc
rcl
pop
loop
fiadd
outs
adc
pop
fsub
push
push
stos
inc
cmp
xchg
cmovo
push
fs
push
ds
or
sub
and
mov
adc
dec
cmp
sub
aas
and
lods
mov
outs
sbb
daa
movaps
icebp
jmp
push
mov
mov
mov
adc
or
mov
adc
add
sbb
sti
mov
or
or
lods
pop
or
popa
fadd
add
mov
add
sub
clc
push
fwait
ret
dec
fistp
ss
call
jne
dec
mov
push
push
imul
rol
sbb
cmp
cmp
or
sbb
ret
sbb
(bad)
fisttp
fsubr
jns
imul
jne
push
push
dec
inc
call
add
push
adc
in
ret
push
jns
or
jmp
push
inc
add
cmp
inc
(bad)
jb
sub
or
dec
pop
mov
call
mov
pop
arpl
xchg
ret
sbb
xchg
jne
push
sbb
adc
daa
add
loope
dec
(bad)
pop
call
sub
and
adc
repnz
or
(bad)
jge
test
mov
add
dec
fimul
fmul
fs
push
and
or
fld
push
mov
outs
enter
addr16
sub
sbb
mov
xor
ret
add
cmp
adc
push
(bad)
(bad)
pop
add
mov
inc
fimul
enter
xor
pushf
sbb
nop
mov
sbb
lahf
cmp
push
xor
or
or
push
dec
or
and
and
xor
mov
js
sbb
xchg
retf
and
adc
push
push
test
and
and
in
mov
ins
inc
dec
iret
mov
xor
rol
or
dec
aad
jmp
xor
sbb
mov
push
sub
iret
add
xchg
add
mov
cmp
xchg
xor
test
jl
or
imul
pop
jbe
mov
mov
add
stos
fist
and
ja
pop
fwait
das
push
xchg
sbb
add
(bad)
(bad)
fs
dec
add
pop
or
mov
adc
out
and
xor
cmp
jne
movs
pop
inc
test
call
rcl
add
xchg
jle
iret
or
push
mov
in
in
rcr
test
test
inc
shl
adc
add
sbb
push
test
add
adc
pushf
sbb
retf
mov
mov
js
retf
mov
sub
or
(bad)
rcl
retf
outs
retf
jb
pop
scas
sub
ficom
adc
fist
(bad)
pop
bound
inc
or
sub
mov
and
push
mov
aad
sub
je
cmp
pop
lahf
arpl
pusha
sub
call
cmc
jnp
jecxz
add
mov
push
and
shr
arpl
or
cld
adc
push
rol
sub
xor
jecxz
jle
data16
nop
bnd
xor
mov
daa
jg
jb
adc
add
loop
pop
or
mov
mov
ins
pop
adc
cmp
sub
add
mov
and
dec
lds
and
and
pusha
sub
in
dec
sub
xor
repz
mov
push
js
repz
mov
add
inc
popf
jne
stc
lea
jmp
js
xor
dec
or
pop
rol
(bad)
pop
jno
loope
add
mov
shr
xchg
loopne
add
shl
outs
xor
test
fs
pop
mov
cmps
or
(bad)
and
sbb
push
fsubr
xor
scas
jmp
cmp
iret
enter
cmp
push
inc
sub
sub
dec
mov
pop
mov
push
add
and
mov
adc
pop
loopne
push
rcl
jo
mov
xor
or
push
and
push
inc
das
jge
xchg
pop
mov
nop
mov
pop
lock
in
and
ret
dec
mov
jge
push
stc
sbb
mov
shl
dec
(bad)
push
add
mov
lock
pusha
xor
mov
push
mov
jne
mov
pop
cmp
and
sub
cwde
mov
cmp
mov
push
cmps
dec
lock
cmps
xchg
sub
dec
xchg
in
lea
or
add
retf
push
add
enter
jg
lods
jne
cmp
pop
jmp
scas
adc
jne
mov
pusha
and
div
pop
or
push
add
sbb
or
pop
or
pop
mov
add
rcr
sub
add
xchg
mov
loopne
rol
push
shl
add
inc
or
test
aas
jb
add
and
or
mov
in
mov
(bad)
popa
or
adc
lods
ss
pop
lahf
add
fs
pop
adc
ja
adc
pop
xor
js
mov
xchg
sub
lock
lea
sub
dec
push
js
lahf
mov
sbb
fdivp
or
or
push
lahf
stos
push
(bad)
pop
add
outs
pop
inc
mov
pusha
sub
adc
xchg
retf
hlt
mov
pop
mov
inc
paddd
cmp
je
mov
inc
shufps
pushf
cmp
cld
call
add
pop
add
sub
(bad)
add
rol
and
nop
retf
and
lds
xor
outs
ret
xchg
xor
retf
add
iret
leave
cmp
adc
enter
pop
shr
pop
add
sbb
shl
or
push
sbb
pop
hlt
nop
inc
les
inc
jne
add
rol
xchg
sahf
in
icebp
adc
cli
push
pop
mov
push
je
mov
(bad)
sbb
in
les
dec
or
mov
fucomp
xor
push
push
and
cmps
test
cmps
jle
out
add
sar
cmp
jne
dec
popa
outs
cmp
rol
ficomp
loopne
push
cmp
into
sub
iret
add
test
call
in
movs
cld
dec
and
(bad)
dec
push
neg
sbb
gs
pusha
icebp
and
push
push
pusha
pop
sub
lds
fwait
cmp
inc
xlat
aas
push
jmp
aaa
push
das
gs
rcl
xor
loope
or
push
push
jmp
or
mov
call
movs
mov
jo
add
les
ins
dec
sub
sub
push
in
push
push
pop
loope
adc
sbb
clc
cmp
add
ds
sub
sub
test
dec
xor
cs
hlt
xor
(bad)
jge
(bad)
sub
arpl
mov
(bad)
fisubr
jmp
cmp
mov
call
xchg
xor
aad
pop
pop
imul
inc
add
es
iret
xor
mov
jecxz
cwde
fadd
mov
pushf
inc
mov
push
dec
xor
pusha
mov
je
ds
daa
in
leave
dec
adc
xor
pop
(bad)
lods
mov
jmp
push
jmp
push
mov
scas
push
xchg
add
int3
mov
sub
or
sbb
xchg
call
xor
dec
or
dec
scas
fadd
jle
pop
jo
idiv
mov
out
sar
mov
shr
add
pop
mov
imul
and
mov
and
cmc
push
rcr
inc
ret
jmp
dec
ret
in
cmp
mov
add
(bad)
aad
lods
cmp
sbb
outs
and
fs
push
add
jmp
ja
xchg
and
mov
popf
loop
addr16
push
add
adc
jo
or
push
scas
dec
jg
sbb
sbb
push
sbb
or
mov
sub
sbb
cmp
pushf
pop
and
or
sub
mov
xchg
mov
daa
daa
popf
ret
pop
xor
inc
or
cmp
(bad)
jg
dec
pop
and
mov
fucom
mov
jb
add
data16
and
pop
or
cmps
call
dec
jg
das
add
mov
nop
or
adc
or
cmp
push
or
sub
fs
or
adc
in
and
push
fwait
dec
or
js
enter
leave
xchg
xchg
mov
sbb
xor
movs
pop
push
dec
dec
cmp
push
imul
clc
dec
push
js
pop
sti
inc
inc
push
mov
mov
movs
sti
lods
scas
or
fild
dec
mov
inc
push
or
mov
call
xchg
lea
ins
push
mov
cmp
rcl
lods
into
jp
enter
adc
lock
cmp
std
iret
xchg
lods
mov
mov
jle
push
xchg
gs
or
mov
and
dec
jp
mov
lods
xchg
loopne
add
mov
and
out
dec
cmp
sbb
je
iret
ss
mov
dec
dec
push
jge
(bad)
push
add
mov
ret
mov
ins
push
push
aaa
jl
cmp
rcl
xchg
outs
mov
clc
mov
lds
jbe
add
ins
dec
add
dec
pusha
or
add
mov
loop
or
pusha
clc
cmp
mov
sbb
sub
dec
xchg
cmps
movs
add
inc
cmp
cwde
hlt
xchg
xchg
lds
or
and
push
sbb
mov
ja
cmp
dec
cmp
mov
outs
ror
sbb
xor
rol
je
jmp
sub
inc
xor
test
aam
lods
xor
jg
mov
adc
inc
lods
loopne
and
(bad)
aas
jo
dec
mov
lock
jg
and
xchg
xor
cmp
add
call
jno
add
lods
pop
add
jo
ins
inc
adc
ficom
dec
js
jmp
jmp
repnz
xchg
mov
or
cs
nop
inc
call
ins
push
sbb
fs
cmp
and
(bad)
and
push
cmp
mov
cli
mov
or
js
pop
and
pop
lods
mov
dec
dec
ror
hlt
movs
push
pop
dec
stos
(bad)
pop
dec
inc
cld
mov
popa
jg
movs
adc
push
(bad)
fs
adc
mov
aam
jns
xchg
inc
jmp
int3
ja
or
es
push
add
or
xchg
cmc
xor
aam
inc
push
cmp
push
xchg
add
inc
or
mov
push
pop
popa
mov
jge
push
aam
xor
add
and
dec
xchg
push
leave
les
inc
xor
or
mov
and
dec
push
inc
sahf
mov
cdq
and
mov
add
sub
push
xchg
call
mov
mov
push
jne
dec
(bad)
arpl
pop
cmp
sub
xor
xchg
cmps
add
lods
inc
xchg
inc
sub
mov
cmp
rcr
jl
add
nop
ret
add
mov
arpl
adc
jmp
or
xor
inc
cmp
in
push
push
inc
loope
inc
aas
enter
mov
mov
cmp
aaa
stos
mov
xchg
push
dec
inc
test
xchg
mov
and
xchg
cmp
xchg
or
fcmove
sub
ds
jmp
mov
mov
(bad)
dec
jne
pop
dec
adc
push
das
inc
pop
ss
sbb
movs
adc
cmp
inc
push
inc
xchg
fimul
hlt
lea
push
adc
push
test
inc
mov
mov
mov
pop
xor
xor
push
push
cmp
mov
imul
rcr
arpl
mov
jp
mov
movs
ja
sahf
dec
inc
sbb
and
(bad)
mov
mov
adc
add
aad
xor
add
clc
adc
push
out
push
pop
dec
jl
aad
push
adc
(bad)
push
lea
ror
mov
test
inc
mov
rcr
fild
jns
adc
outs
aaa
dec
sub
add
sub
xchg
dec
inc
push
(bad)
pop
mov
shl
jns
outs
aas
push
popf
aam
push
mov
int
sahf
cwde
aas
scas
jle
pop
add
mov
xchg
add
xor
sbb
pop
jb
inc
cmps
push
pop
ret
pusha
daa
xchg
ss
je
jnp
and
xchg
push
xor
cmp
push
pop
nop
add
inc
or
ret
enter
and
and
cmc
adc
bound
or
ret
rol
xor
dec
xor
ret
nop
pusha
inc
add
xor
shl
inc
xor
movs
pusha
xor
inc
mov
push
adc
fld
push
mov
mov
xor
dec
sahf
push
movs
test
iret
sub
sbb
lods
cmp
pop
add
in
cmps
mov
and
rcr
dec
pop
xchg
or
mov
sub
pop
out
cmp
fsub
mov
lea
addr16
mov
xchg
retf
pushf
mov
loopne
mov
lods
ret
jne
mov
push
leave
xchg
movs
mov
fstp
sbb
lahf
lds
adc
mov
and
add
inc
add
std
gs
test
adc
add
aaa
nop
or
xlat
movs
cdq
or
cmp
xor
jl
pop
in
lea
jl
dec
js
pop
push
mov
retf
push
out
dec
add
add
fst
and
sbb
imul
stc
lahf
add
inc
xor
sbb
sti
or
test
cmp
push
xchg
adc
outs
mov
pop
ja
jmp
adc
mov
jmp
sub
jmp
add
div
(bad)
adc
dec
jmp
add
or
outs
push
je
hlt
dec
push
or
adc
(bad)
mov
mov
cmp
push
push
jle
lock
call
push
rcl
sbb
sbb
lock
int3
push
pop
lea
push
stos
push
popa
cmc
add
ins
cmp
test
jns
push
lock
popf
movs
sub
push
cmps
lods
mov
jo
out
xchg
cdq
xchg
or
cmp
add
movs
movs
movs
inc
repnz
movs
movs
movs
movs
and
pop
adc
or
fstp
loop
imul
adc
adc
sbb
inc
sbb
test
xchg
jp
adc
add
xchg
pop
push
dec
mov
test
adc
retf
push
pop
mov
push
inc
rcl
mov
cdq
(bad)
stos
add
or
sub
add
sub
enter
fist
mov
jg
ret
pop
cmp
(bad)
cmp
mov
mov
(bad)
or
retf
icebp
push
pop
push
push
cdq
and
in
in
pop
push
mov
call
mov
push
inc
cmp
cmps
mov
test
add
push
sbb
fiadd
cmp
push
sbb
xchg
push
ror
mov
ffreep
or
leave
(bad)
push
add
xchg
outs
and
jle
adc
mov
push
add
or
addr16
sub
shl
or
mov
pop
push
mov
add
mov
rcpps
dec
push
cmp
clc
jo
xchg
int3
ret
lods
mov
push
inc
push
les
pop
pusha
inc
and
pop
mov
sahf
call
xor
pop
lock
test
pop
js
xor
push
outs
inc
ret
fwait
inc
test
or
out
mov
test
cmp
(bad)
call
push
ins
imul
clc
shl
cmp
and
dec
jge
or
imul
push
push
dec
push
icebp
or
dec
sbb
mov
sub
mov
dec
pop
shl
scas
mov
mov
and
mov
xor
cmp
mov
push
mov
mov
pop
das
add
jns
jle
mov
(bad)
mov
shl
mov
sub
xchg
lods
aas
add
aam
inc
vmwrite
fidivr
push
dec
pop
ins
leave
sbb
jge
jo
in
and
lock
retf
lea
adc
mov
jo
les
push
or
aas
sahf
sub
lahf
mov
popa
jmp
mov
sar
jbe
cvtps2pi
jmp
je
adc
add
ficom
xor
mov
adc
test
js
out
jmp
in
mov
sahf
and
cmp
fadd
mov
je
outs
add
and
jns
punpckhbw
add
and
ins
jmp
pop
jg
and
adc
add
xchg
je
cmp
pusha
test
mov
adc
adc
pop
xor
push
inc
arpl
and
rcr
inc
imul
pusha
enter
(bad)
pushf
sub
inc
inc
cs
xchg
cmc
je
mov
add
ins
sub
and
push
fisttp
xor
sbb
jmp
adc
sbb
jl
or
mov
add
test
dec
cmp
and
fwait
adc
inc
push
adc
sub
or
test
in
jne
mov
xor
sub
dec
loope
daa
push
xchg
js
and
dec
and
inc
retf
dec
pop
cmp
sub
imul
add
cmp
inc
scas
rcr
cmp
dec
sub
add
or
in
cmp
stc
imul
mov
mov
add
js
add
push
popa
je
mov
aam
add
in
inc
jo
add
xchg
gs
jg
and
jle
xor
push
cmp
jne
jmp
fiadd
std
les
xor
pop
inc
jmp
push
jmp
into
into
mov
push
adc
mov
push
jns
addr16
push
inc
pop
pop
add
xchg
out
pop
cld
hlt
xchg
dec
or
dec
je
rol
mov
push
pop
and
mov
push
jmp
dec
sub
or
lods
mov
inc
lea
int3
aad
add
and
jle
mov
push
js
mov
sub
dec
adc
fist
dec
xor
xor
daa
or
out
je
aas
dec
addr16
out
test
(bad)
sub
dec
ror
fidivr
jne
mov
xchg
mov
cmps
test
pushf
and
push
or
push
sbb
jl
xor
out
je
mov
jl
cmp
call
shl
in
or
cmp
add
dec
and
add
shl
lock
cmp
xchg
sub
pop
adc
sbb
mov
adc
adc
ror
icebp
cwde
mov
mov
and
sub
mov
adc
sbb
pop
mov
mov
dec
movs
cmp
dec
xor
and
adc
xchg
rol
clc
jbe
push
mov
ror
xlat
cmp
add
push
sahf
mov
push
ds
jo
call
add
test
ret
push
dec
pusha
xchg
pop
adc
mov
pop
add
inc
add
dec
cdq
mov
(bad)
mov
(bad)
jmp
pusha
add
sub
pusha
add
sbb
pusha
loopne
fcomp
pop
lock
push
daa
das
add
ret
fisubr
jg
add
cdq
xchg
add
mov
push
stc
sbb
push
sub
leave
clc
cmp
push
mov
push
movs
cmp
push
fucomip
imul
loopne
adc
jo
add
xlat
dec
je
xor
in
or
and
and
fistp
inc
aas
jg
jne
add
xchg
sub
xor
inc
cwde
xor
xchg
mov
stos
push
and
ss
(bad)
aas
push
stos
arpl
add
pop
cwde
inc
sub
add
jbe
push
or
or
nop
addr16
push
test
je
push
dec
and
push
cmp
out
lock
pop
and
jne
sbb
push
add
pop
cmp
stos
add
sbb
push
cld
add
ret
fstp
aas
pushf
xcrypt-ofb
cmps
lods
movs
cld
popf
push
nop
cwde
ss
cdq
test
lahf
mov
jmp
mov
jmp
sbb
jo
cmp
mov
xchg
add
sub
mov
adc
lahf
xchg
ins
add
add
sbb
xchg
xchg
test
mov
pop
push
xor
pop
dec
push
pop
xor
das
sti
jbe
icebp
aad
add
cmp
jns
lds
jne
addr16
inc
jo
int
pop
ret
call
or
pusha
inc
ret
test
mov
push
dec
mov
or
sub
or
push
add
push
adc
movs
adc
mov
in
loopne
jl
jb
sub
mov
or
js
and
xchg
test
sbb
out
imul
or
inc
xor
cmp
or
pop
loope
cmps
or
dec
popa
add
or
mov
hlt
mov
or
inc
pushf
and
jecxz
xor
test
cwde
dec
js
mov
aas
test
pop
push
inc
loopne
inc
jmp
enter
adc
sub
sahf
pop
outs
enter
cmp
or
push
adc
js
pop
jae
(bad)
imul
or
inc
loop
sbb
or
push
or
(bad)
call
jne
mov
or
push
sbb
(bad)
fcomip
and
push
adc
dec
test
inc
pop
jno
inc
sbb
mov
je
sahf
and
pop
mov
mov
loop
adc
or
mov
xor
sub
mov
cmp
pusha
sub
sahf
add
sub
ror
dec
shl
jg
addr16
loop
add
mov
push
shl
mov
lods
lods
add
lock
xor
push
dec
push
push
lock
hlt
cmp
ja
xchg
xchg
sub
dec
sbb
cmp
push
or
adc
test
rcr
inc
cmp
xor
pop
clc
push
les
cwde
jge
out
xchg
out
mov
into
les
fisubr
xchg
push
mov
inc
push
(bad)
out
rcl
adc
aaa
lea
fistp
in
push
(bad)
std
mov
or
adc
inc
mov
adc
mov
push
jae
out
add
inc
ins
fdiv
rol
pop
sbb
lahf
ret
repnz
dec
nop
bound
jo
jo
xor
add
fisttp
push
out
mov
repnz
addr16
push
sbb
call
sub
ret
inc
pop
push
push
call
sbb
xor
and
or
dec
shl
lock
int
ret
pop
mov
push
push
xor
and
pop
or
mov
mov
jecxz
stos
adc
fdivr
add
dec
push
popf
dec
cmp
adc
add
add
test
popf
push
inc
push
imul
cli
xchg
or
push
push
test
clc
in
ret
add
pop
sbb
fldcw
mov
lods
fisttp
add
mov
jne
push
and
and
sub
push
mov
in
ja
sub
rcr
xchg
or
dec
sbb
sbb
inc
daa
add
jno
test
add
dec
dec
rol
mov
or
inc
or
popf
stos
add
ffreep
dec
test
and
push
dec
test
add
push
add
sub
and
jg
movs
cs
or
jne
aaa
mov
push
mov
lock
mov
jno
sti
cmp
pop
and
and
mov
nop
add
push
jg
test
pop
push
nop
jp
pop
mov
add
stos
jno
test
push
ret
(bad)
jp
sahf
sub
cmp
dec
dec
pop
mov
or
inc
out
add
call
mov
(bad)
std
or
adc
dec
xor
sub
shl
(bad)
fbstp
jo
push
lock
into
xor
mov
add
ror
inc
adc
push
push
fmul
or
inc
cmp
mov
inc
add
xor
mov
ss
data16
loope
dec
jmp
add
inc
fld
fidiv
adc
jg
cmp
das
loop
push
xor
push
push
aaa
mov
jg
lods
cmp
jns
xchg
in
mov
sbb
dec
mov
loop
and
pop
cli
push
mov
in
or
in
jo
faddp
repnz
inc
ret
loope
les
cmps
and
or
aas
push
sub
push
lahf
sub
push
add
push
or
fwait
adc
dec
mov
push
mov
inc
dec
and
in
push
xchg
outs
and
cmp
shr
add
test
aas
cmp
sbb
stos
sub
idiv
push
ins
xchg
cmp
mov
push
add
in
mov
movs
enter
jnp
cmp
jl
enter
and
jmp
mov
pop
enter
add
nop
push
jno
int3
pusha
adc
pushf
mov
js
js
mov
add
mov
pop
inc
bound
adc
lahf
ins
leave
aam
inc
jo
pushf
adc
xchg
retf
(bad)
xchg
xchg
sti
inc
xchg
out
pop
(bad)
xchg
mov
popf
sub
add
repnz
sub
add
mov
pop
jecxz
retf
sub
or
adc
lahf
xchg
jb
nop
test
and
enter
enter
shl
mov
pop
dec
mov
js
cs
mov
jmp
test
inc
cmovo
and
ret
sbb
movs
je
lods
icebp
ror
pop
shl
add
sub
int3
or
xchg
push
pop
push
scas
and
dec
pop
push
push
or
outs
dec
popa
dec
lock
pop
or
push
add
add
add
aad
add
adc
adc
add
jl
add
fdiv
cmp
pop
or
add
dec
clc
push
ficomp
in
cmp
sub
sbb
jg
pusha
adc
in
aas
mov
mov
cmp
and
add
pop
jb
enter
fs
pop
call
pushf
mov
pusha
ret
inc
vpmovzxbq
les
in
push
jmp
inc
xchg
push
mov
sar
mov
iret
xchg
inc
in
xchg
inc
cmps
pop
push
push
mov
or
add
mov
push
add
pop
xchg
stos
mov
stos
fistp
pushf
mov
xchg
mov
mov
sub
lahf
aad
inc
mov
jns
mov
bndstx
xchg
stos
rol
(bad)
sub
sbb
fadd
xchg
pop
mov
jle
push
jecxz
inc
pop
mov
inc
cmp
jl
hlt
mov
and
pop
cmp
shld
mov
cmp
dec
int
inc
leave
adc
add
adc
sub
inc
rol
inc
cmp
js
fucomip
add
das
cmp
fnstsw
jo
dec
jmp
shl
jae
xor
or
leave
xchg
enter
xor
cmp
pop
adc
xor
aas
movs
jge
adc
xor
and
cmps
ins
dec
adc
pop
xchg
sub
aad
or
popa
sbb
push
fadd
test
sub
sti
jl
push
inc
loopne
fnstenv
mov
xchg
sbb
shr
xchg
ins
cmp
ror
sbb
fst
cmps
cmp
jne
mov
retf
call
neg
sbb
xor
and
out
imul
out
cmp
loop
pop
pusha
inc
jne
inc
cmp
jl
add
sub
mov
or
call
fsubr
jmp
jne
rol
ficomp
pop
in
iret
jae
retf
pop
push
push
js
xor
cmp
bnd
dec
add
and
cmp
jl
mov
sbb
push
clc
add
leave
or
cmp
cmps
ds
pop
push
fmul
int3
mov
js
lahf
mov
out
sti
dec
xor
mov
sbb
mov
inc
mov
and
inc
inc
inc
xor
outs
in
fidivr
cmp
mov
scas
push
jmp
adc
pop
je
aad
mov
sub
jns
in
push
sub
xor
xor
jmp
cmp
pop
dec
push
xchg
out
fs
pop
pop
cmp
inc
cs
xor
js
xor
sbb
nop
xchg
xor
lahf
div
add
xchg
add
ret
xor
mov
test
lods
dec
mov
mov
mov
xchg
cmps
push
(bad)
js
lods
sbb
dec
sub
adc
sbb
or
push
push
mov
dec
push
fs
lods
mov
sub
dec
ins
xor
out
mov
jmp
push
xor
sar
dec
test
dec
pop
test
adc
or
adc
and
pop
dec
adc
inc
adc
aam
sub
add
dec
(bad)
gs
mov
movs
xchg
cmp
test
add
push
add
adc
xor
adc
scas
and
or
cmps
cmc
push
sbb
bound
mov
inc
inc
jmp
cwde
push
xchg
dec
mov
jo
fmul
push
je
sub
test
in
xor
and
scas
int
movs
int
mov
retf
je
mov
cmp
xchg
loope
or
and
outs
push
inc
push
mov
dec
ret
daa
inc
add
cdq
pop
push
lock
push
sbb
sub
sub
sub
nop
push
sub
cmp
in
push
push
push
xchg
push
adc
fild
mov
movs
data16
icebp
(bad)
in
sbb
mov
mov
lds
push
pop
dec
hlt
iret
push
cmps
jbe
cmps
(bad)
jecxz
lds
or
lea
add
jo
sbb
or
js
cmp
cs
jb
mov
(bad)
dec
jp
pop
repz
call
es
sbb
cmp
adc
jo
out
xchg
dec
clc
shr
int
movs
jo
add
dec
and
pop
inc
ins
scas
jge
jo
arpl
(bad)
mov
xor
inc
cs
fsub
and
sbb
and
lea
cmp
cwde
jbe
sub
jecxz
add
cmp
je
aaa
cmp
into
sub
stos
or
mov
sub
push
adc
push
and
add
cmp
sub
adc
es
push
push
or
mov
pushf
xchg
pop
adc
aam
imul
out
and
iret
in
sub
dec
mov
dec
and
adc
lea
xor
push
cmp
sbb
and
jl
mov
pop
mov
ins
cs
sbb
(bad)
cmps
pop
inc
sub
cmp
adc
sub
mov
cmps
pop
push
jo
pop
pop
inc
inc
loope
dec
fs
mov
sahf
add
mov
or
mov
lock
mov
in
out
cmp
repnz
inc
sub
aas
push
xor
icebp
and
dec
ret
psrlq
push
or
dec
fdivr
jb
cmp
mov
ret
out
dec
xor
cmc
push
cli
in
addr16
fisttp
je
add
mov
and
(bad)
nop
mov
add
je
ds
fimul
rol
call
mov
push
mov
inc
in
clc
out
inc
sub
adc
sbb
push
lock
inc
sbb
and
stos
and
and
mov
xchg
pop
rcl
sbb
mov
add
dec
cmp
sbb
mov
loopne
push
mov
add
xor
push
xchg
mov
fiadd
dec
call
pop
inc
sub
int3
dec
sub
xor
cld
cmp
jge
mov
inc
dec
pop
cmp
cmp
jmp
pop
push
push
push
sub
xor
je
mov
xchg
scas
cs
nop
and
dec
into
push
push
sub
dec
lea
and
add
jns
cmp
xchg
xchg
jmp
movs
retf
mov
pop
inc
mov
adc
dec
sub
or
or
jp
mov
mov
xchg
mov
adc
pop
lods
add
or
adc
and
adc
inc
das
jae
(bad)
ss
push
push
pop
inc
xor
mov
xchg
xchg
mov
aam
jge
add
popa
mov
mov
cld
and
push
in
ret
ds
outs
fwait
loopne
add
addr16
add
jne
bound
outs
adc
mov
nop
loop
daa
nop
(bad)
fldcw
mov
mov
adc
pop
jge
or
clc
ret
fimul
ret
add
inc
adc
xchg
imul
cmp
pop
pusha
mov
dec
fmul
xchg
mov
adc
mov
push
pop
mov
je
retf
rcl
jo
dec
out
jne
mov
xor
sub
sub
bound
call
mov
outs
inc
mov
movs
and
out
imul
and
jnp
dec
xor
push
or
or
mov
ror
pop
mov
xor
xor
or
and
sub
add
adc
outs
cs
xor
movs
dec
popa
sub
js
sbb
add
inc
jbe
(bad)
cmp
push
ror
retf
pushf
push
fcomp
mov
mov
cwde
sub
sbb
cmp
mov
or
shr
cmp
icebp
clc
cli
sahf
push
and
movs
repnz
push
sub
scas
adc
mov
mov
mov
cmp
xchg
scas
jb
int3
or
aam
fidivr
scas
jmp
loopne
in
call
in
movs
sar
hlt
clc
cld
add
fdivrp
jne
add
mov
adc
jecxz
in
into
adc
dec
push
sbb
cmp
xchg
and
cmc
sbb
jb
xor
xor
xchg
cmp
retf
in
ds
inc
inc
or
ja
push
dec
pop
add
inc
push
push
jns
push
sub
pusha
cmp
sbb
push
and
js
or
inc
inc
mov
repnz
and
cmp
mov
jge
xchg
dec
add
movs
shl
xchg
cwde
pushf
mov
movs
test
mov
dec
movs
push
mov
push
sub
retf
aam
in
test
in
and
clc
pop
jns
test
and
and
or
adc
sbb
test
sub
adc
cmp
and
inc
inc
inc
dec
xor
push
test
and
pusha
fs
push
jo
out
repnz
js
jl
add
add
add
inc
sar
dec
add
les
loopne
fld
and
add
inc
add
(bad)
jne
inc
dec
test
inc
add
pop
xchg
mov
cmps
jnp
lea
add
mov
dec
jl
test
add
loop
add
(bad)
out
cmp
call
ret
and
xchg
pop
in
push
mov
jp
test
fldcw
int
fs
sub
shr
jne
das
loop
sbb
sub
cli
call
movs
cdq
pop
stos
inc
inc
test
mov
or
pushf
or
pusha
retf
jne
pop
nop
xchg
jge
fisttp
dec
lock
jg
dec
pop
pop
pushf
sar
inc
mov
loop
je
inc
data16
mov
adc
mov
or
cmp
in
jo
adc
in
mov
pop
adc
pop
(bad)
aam
outs
add
inc
add
mov
pop
xor
add
sub
pop
loope
out
sub
into
mov
or
adc
pop
mov
xor
call
stc
xchg
inc
movs
std
int3
sbb
and
push
dec
in
sub
imul
xchg
xchg
add
push
or
ins
or
push
daa
and
add
mov
push
adc
push
jle
jle
sbb
movs
adc
mov
pop
lods
mov
test
cmp
mov
mov
pop
push
or
and
xor
ret
addr16
push
jmp
inc
add
push
sbb
lods
jmp
sub
lods
shl
dec
frstor
rcr
shl
pop
adc
cmps
jge
pop
clc
into
pop
cmp
pop
pop
pop
je
pop
push
push
lea
xor
into
icebp
mov
mov
inc
sub
xor
scas
push
add
push
push
mov
mov
and
mov
mov
out
push
mov
adc
mov
iret
fnstcw
push
inc
add
xlat
adc
inc
sub
dec
mov
mov
adc
movs
mov
add
jl
ret
jmp
dec
into
dec
dec
cmps
xchg
cmp
cmp
and
push
aas
cmp
test
cld
popf
adc
sbb
jb
rcr
and
push
xor
xor
iret
cmp
dec
xchg
adc
data16
je
pushf
and
je
adc
js
test
sbb
add
dec
fsub
shr
inc
iret
pop
sbb
adc
inc
inc
outs
loopne
add
mov
dec
nop
lods
add
cmps
mov
loope
push
and
adc
jne
jle
ja
or
enter
std
inc
cmp
jl
and
add
ret
ret
bound
sahf
aam
inc
sbb
push
jo
ret
push
dec
call
sbb
sub
xchg
cs
or
push
push
mov
xchg
push
es
imul
add
push
inc
xchg
adc
mov
push
adc
or
add
xor
dec
sti
stc
je
pop
int
jbe
mov
xchg
icebp
push
sbb
cmp
sub
sbb
adc
push
mov
cmp
jmp
push
jnp
ret
sahf
fisubr
adc
enter
cmp
push
loop
mov
in
pushf
push
sbb
mov
pop
xor
cmp
sub
mov
mov
inc
and
or
test
and
push
sub
mov
call
test
xor
mov
pop
push
jno
bnd
pop
jl
add
push
pop
lahf
pop
push
and
sub
push
stos
cmp
mov
mov
loop
cmc
mov
or
aas
and
jg
add
cmp
out
mov
inc
jmp
adc
dec
test
out
mov
cmp
loope
arpl
xchg
retf
xor
enter
rcl
add
pop
and
push
inc
sub
(bad)
adc
pop
inc
daa
push
add
lahf
add
js
cwde
inc
sub
movs
add
in
fwait
pushf
push
mov
adc
je
call
retf
cmp
das
or
shl
sbb
nop
mov
call
std
inc
xchg
dec
mov
cmp
jno
add
inc
dec
out
(bad)
pop
(bad)
inc
cmc
and
repnz
adc
sbb
leave
je
mov
fbld
add
push
add
loopne
xchg
outs
adc
pop
push
dec
inc
sbb
ret
add
push
jmp
les
jb
mov
add
pushf
pop
je
xor
pop
adc
jg
xlat
or
sbb
pop
inc
adc
in
aas
loopne
ror
lds
test
mov
dec
(bad)
fdivp
lahf
inc
sbb
mov
pop
add
sub
ins
mov
fwait
lahf
mov
adc
clc
xchg
or
push
mov
or
xchg
xchg
dec
mov
nop
dec
cmp
or
stos
jle
fst
push
dec
push
push
push
add
lahf
or
clc
sub
adc
jp
xor
sbb
push
xchg
sub
mov
and
imul
test
sub
call
add
xor
inc
fist
fs
pop
test
(bad)
je
adc
rol
invlpg
retf
bound
push
mov
sub
in
pop
(bad)
pop
(bad)
pop
or
imul
jne
pop
inc
push
lahf
mov
pop
gs
mov
ror
push
cmp
xor
mov
or
push
ja
sub
in
mov
sbb
ins
mov
scas
mov
daa
je
mov
or
adc
jg
test
push
test
bnd
jmp
or
mov
inc
loopne
or
jno
add
mov
mov
add
cmp
jp
xchg
mov
call
sub
sbb
or
or
sbb
adc
push
jne
(bad)
push
jns
add
dec
dec
mov
push
or
pop
xchg
bound
mov
add
cmp
inc
mov
inc
cmp
lea
enter
stos
cmps
ret
pop
push
adc
and
arpl
leave
add
or
inc
movs
outs
add
inc
and
dec
lea
xchg
xor
pusha
lock
push
lea
adc
add
pusha
pop
add
mov
pop
enter
add
ret
cld
repnz
or
push
jmp
inc
mov
push
sub
add
push
fs
jns
inc
or
clc
movs
int
xor
scas
les
test
inc
mov
push
jg
dec
jbe
inc
ins
and
sub
add
cmp
or
mov
or
sbb
push
fld
ins
or
jle
push
sbb
add
push
sub
shl
fimul
das
sub
mov
mov
fcom
and
pushf
int
sub
or
int3
test
outs
jmp
cmp
push
and
rcr
mul
inc
sbb
push
mov
jmp
aad
xchg
lock
jge
aas
and
dec
call
jl
cmp
inc
jo
(bad)
lods
lock
fcomp
mov
inc
xor
inc
add
lods
jae
or
lds
std
shl
enter
in
es
test
fist
dec
jecxz
xchg
sub
push
push
mov
sub
dec
mov
(bad)
add
sub
lock
mov
int
dec
test
inc
xchg
push
(bad)
popa
lods
dec
(bad)
push
clc
lahf
dec
xlat
push
out
dec
mov
lock
or
push
mov
mov
dec
add
call
inc
xor
push
aaa
cwde
pop
inc
shl
fstp
inc
pop
and
adc
pusha
out
push
pop
ins
push
imul
sbb
call
mov
xchg
arpl
add
xchg
loopne
shl
test
push
movs
push
pop
das
add
lods
loopne
in
adc
out
jmp
add
add
cmp
jne
add
cdq
or
add
leave
mov
and
leave
add
adc
mov
cld
pop
add
fadd
retf
pop
pusha
pop
add
push
push
int3
push
je
fwait
xchg
add
sbb
xor
ins
fiadd
hlt
pop
cmp
cmp
cmp
(bad)
jbe
inc
imul
xchg
ret
jle
inc
pop
inc
clc
sub
mov
xchg
jl
frstor
test
cmp
jne
call
stos
or
mov
add
dec
mov
rcl
scas
push
(bad)
iret
enter
sbb
xchg
mov
push
sub
cs
rep
xchg
pop
mov
push
ret
mov
ds
ret
and
jg
jl
and
pop
fcomp
jne
(bad)
fucomip
or
mov
dec
mov
inc
ja
cld
push
aas
cld
lods
sub
(bad)
out
mov
das
xor
ror
popf
xor
and
(bad)
fisttp
mov
push
lahf
cdq
push
push
mov
cmp
xor
in
and
stos
sub
mov
es
push
fsubr
fimul
inc
add
punpckhdq
dec
leave
and
iret
or
sub
adc
arpl
mov
jmp
inc
xor
sbb
add
and
add
or
test
ss
ins
mov
ret
leave
xchg
and
ret
adc
mov
cmp
dec
pop
leave
and
sbb
je
jmp
push
xchg
jb
jge
cmp
imul
mov
mul
dec
pusha
(bad)
dec
sbb
dec
daa
mov
lds
shl
mov
adc
(bad)
enter
neg
add
mov
sbb
jp
sahf
lock
test
pop
enter
aas
out
push
stos
call
int
sub
push
xchg
jl
int
add
push
pop
jo
or
pop
sbb
not
mov
sub
pusha
dec
test
push
jne
push
vxorps
jp
xchg
cmp
jl
inc
cmp
sub
cmp
jge
cmp
jp
or
jo
jbe
sbb
lds
jb
mov
dec
sbb
inc
inc
xor
adc
lahf
dec
and
lock
or
cmc
movs
(bad)
pop
test
pop
and
mov
dec
cmp
push
fmul
test
inc
mov
das
mov
(bad)
nop
fld
movs
pop
outs
retf
and
add
test
inc
fist
push
(bad)
mov
push
adc
test
rcr
or
mov
lds
add
pusha
gs
xor
lods
push
sbb
int
push
icebp
xor
push
cmp
fldenv
cmp
add
(bad)
xor
(bad)
adc
or
sbb
pop
and
push
cmp
xchg
sub
adc
loopne
sbb
and
or
ds
xor
push
push
or
mov
mov
pop
cld
loope
dec
pop
xchg
add
mov
loopne
addr16
fcomp
stc
inc
mov
inc
movs
lea
and
cmp
mov
adc
scas
retf
cmp
outs
sbb
pop
jmp
push
pushw
lock
add
pop
jno
imul
enter
xchg
push
mov
dec
js
dec
mov
cld
ins
jg
cmp
mov
push
in
xchg
mov
or
sbb
cmp
icebp
ins
jnp
dec
mov
mov
lods
adc
clc
cld
mov
inc
or
push
and
mov
mov
mov
jo
bound
add
push
cmp
xchg
ror
ror
and
sub
out
cmc
adc
shl
push
inc
rcl
or
(bad)
pop
call
scas
mov
push
and
adc
repz
xor
sbb
pop
mov
out
and
mov
(bad)
pop
mov
adc
pushf
clc
cdq
test
bound
dec
dec
sbb
sub
fst
xchg
pop
jecxz
or
cwde
xor
lea
push
mov
push
inc
cmp
jmp
adc
push
dec
repz
jns
mov
shr
fsubr
stos
add
cmp
sti
pop
adc
test
dec
inc
or
sub
inc
repnz
lds
fwait
cmp
push
jge
mov
inc
pop
icebp
xchg
(bad)
pop
outs
aad
movs
lock
fnstenv
ud2
inc
outs
out
(bad)
jbe
imul
sbb
rcl
std
pop
mov
jmp
lea
or
or
repnz
ins
xor
test
push
adc
push
adc
fmul
inc
add
mov
mov
fisttp
inc
(bad)
jle
mov
dec
adc
sbb
add
add
call
cmp
test
push
pop
ins
dec
loopne
jge
dec
fimul
int3
pusha
inc
sbb
inc
call
xor
shl
or
cwde
push
pop
imul
cs
dec
cmp
xor
ds
or
jle
cld
ret
add
cs
test
xchg
ins
loop
push
push
dec
imul
pop
pop
mov
xchg
mov
inc
or
fld
sub
mov
inc
loope
or
adc
test
xor
pop
sbb
cmp
cmp
(bad)
mov
cmp
lea
dec
inc
sub
fcmovne
ins
adc
shl
pop
pop
adc
xchg
bound
push
jg
push
lea
or
lea
mov
inc
inc
pusha
popf
push
sbb
push
pop
mov
(bad)
push
dec
aas
or
mov
dec
add
or
sbb
ds
pop
fsub
push
fisub
push
mov
pop
stos
jg
daa
test
push
and
(bad)
pop
test
sub
(bad)
aam
adc
and
add
sahf
adc
pushf
push
push
(bad)
nop
pop
inc
imul
jge
inc
pusha
loope
mov
sahf
fnstsw
cmp
add
xor
push
xor
push
xor
cwde
mov
and
lods
test
add
push
fsubr
imul
xchg
sub
fimul
and
xchg
xor
and
loopne
xchg
dec
je
mov
lahf
fnstenv
cmp
sbb
pop
sbb
jl
mov
ret
mov
sub
sahf
jl
fbld
test
cwde
sti
pushf
mov
pushf
mov
mov
push
push
lea
fs
int3
rcr
inc
shl
push
sbb
mov
push
cwde
or
retf
in
cs
in
in
call
hlt
lock
dec
jb
mov
adc
or
movs
repnz
lods
adc
push
jns
sbb
add
int3
in
ins
jge
xor
sub
aam
repz
dec
imul
or
push
loop
inc
fimul
jo
pop
mov
xchg
dec
pop
adc
sbb
or
loope
ret
sbb
xor
cmp
fadd
add
add
in
push
and
pop
inc
cs
mov
and
or
sub
jb
loope
inc
inc
pusha
dec
jae
push
inc
rcl
adc
jl
mov
pop
pop
mov
adc
sbb
push
push
and
cmp
and
and
mov
cs
cmps
pop
stos
xchg
add
pop
fisub
fsubr
bound
xor
(bad)
leave
or
push
xchg
pop
or
nop
pushf
inc
adc
sbb
sti
xchg
jbe
sbb
pushf
dec
dec
mov
sbb
je
pushf
sbb
pop
pusha
push
pushf
sbb
leave
dec
adc
leave
and
sbb
add
dec
jnp
push
fmul
sbb
nop
fistp
cmp
pop
nop
xchg
add
or
xchg
add
cmp
and
inc
sbb
fstp
in
jne
iret
inc
and
sbb
retf
pop
(bad)
or
xor
mov
dec
pop
mov
fadd
adc
aam
add
cmp
sahf
adc
sbb
mov
ficom
rcl
add
jle
(bad)
(bad)
jle
shl
mov
push
inc
daa
pop
dec
mov
inc
or
(bad)
enter
loope
inc
mov
sbb
inc
call
aam
cmp
mov
mov
mov
shl
(bad)
jmp
cwde
lahf
inc
dec
jl
push
std
dec
sbb
rcl
test
cld
mov
push
ja
es
outs
sub
xor
jmp
or
jb
lea
jp
sbb
repnz
aas
push
mov
scas
dec
xchg
push
cmp
sub
pusha
mov
add
cld
xor
out
inc
mov
mov
dec
je
jle
push
pop
cmp
sub
xchg
jmp
imul
push
mov
or
outs
add
and
loop
nop
cmp
jae
xor
dec
jb
adc
lds
scas
adc
(bad)
cmps
add
sub
lock
mov
enter
xor
pop
sub
mov
cmp
or
fdiv
movs
and
nop
mov
mov
pop
loop
inc
shl
sbb
je
xchg
push
push
pop
in
scas
mov
add
pop
ret
mov
test
push
in
dec
add
mov
clc
bound
add
jl
push
and
je
adc
xchg
mov
and
js
and
mov
sbb
mov
je
rcl
je
out
xchg
arpl
mov
push
(bad)
lea
cmp
movs
les
pop
xchg
sti
test
push
dec
mov
out
movs
jo
xor
fistp
push
mov
pop
cmp
cwde
dec
push
or
pop
ins
sub
clc
daa
xor
pop
ret
add
xchg
push
rol
sbb
test
mov
dec
sub
and
test
cmp
or
cmc
sbb
xchg
add
sbb
pop
aas
push
jmp
sar
jnp
push
adc
adc
jne
rol
inc
adc
pop
test
xchg
lds
push
dec
sbb
pop
sub
xchg
xor
mov
sub
hlt
lea
dec
push
or
rol
repnz
push
push
cmp
outs
mov
out
jae
cmp
rcr
cmp
or
xchg
iret
scas
icebp
xor
shl
push
push
jl
rcr
or
int
jp
enter
pop
adc
pop
jecxz
rcl
adc
fdivr
xchg
mov
mov
imul
mov
lds
or
(bad)
shr
mov
dec
call
out
shr
cmp
in
je
sub
pop
jne
add
pop
sbb
or
push
pusha
out
js
mov
and
mov
push
push
repnz
adc
pop
mov
sub
push
int
pushf
fneni(8087
push
loop
mov
pop
add
aas
in
pusha
mov
sbb
jp
clc
paddb
mov
cmp
add
(bad)
mov
in
add
mov
jae
call
xlat
(bad)
popa
cmp
loope
sbb
jecxz
aad
sbb
push
outs
push
push
add
ss
xchg
or
sbb
mov
sbb
xchg
cdq
push
add
pop
cmps
out
pop
sbb
inc
mov
xor
int3
sar
jmp
outs
mov
lods
jo
mov
jb
stos
cmp
xor
dec
jl
(bad)
pusha
dec
push
pop
or
test
mov
or
test
cmp
xchg
cmp
es
inc
cmp
push
bound
mov
add
add
test
mov
cmp
jle
pop
add
xor
pop
adc
pop
mov
jnp
mov
and
adc
push
or
cmp
push
out
stos
je
scas
inc
sbb
sub
es
inc
pushf
cmp
fistp
retf
cli
dec
sub
lea
imul
popf
imul
idiv
push
mov
cmps
push
cli
mov
pop
dec
ret
adc
js
or
mov
fmul
and
adc
dec
push
push
adc
ins
cli
push
mov
clc
jl
movs
ins
push
nop
pop
add
jo
fnstenv
mov
outs
fiadd
fldenv
inc
add
mov
add
sub
push
leave
hlt
add
addr16
xor
das
in
add
push
lahf
lock
push
xor
lock
fisttp
adc
(bad)
dec
ret
mov
push
ja
imul
or
ffreep
jmp
pop
jle
push
sub
add
(bad)
punpckhwd
inc
and
(bad)
dec
sbb
fmul
lea
sub
imul
add
outs
cmp
js
inc
xor
push
push
scas
push
js
scas
or
add
mov
mov
out
out
adc
mov
add
jmp
leave
daa
inc
not
or
imul
in
lea
xchg
and
adc
adc
jmp
test
mov
imul
push
ror
mul
jbe
ficomp
rol
cmp
sub
xchg
inc
inc
outs
jge
mov
jne
rcl
test
xchg
push
push
push
and
cli
pop
rol
jne
push
aaa
(bad)
nop
xor
adc
cli
pop
into
pop
sahf
mov
adc
clc
bound
pop
lahf
lea
sbb
cli
sbb
add
ja
nop
popa
sbb
adc
mov
adc
retf
adc
test
push
mov
js
or
cdq
dec
sbb
cmp
enter
push
stos
xchg
out
xchg
adc
add
push
add
movs
and
scas
sbb
inc
push
dec
push
pop
sar
cld
and
sbb
lods
ret
xlat
sbb
cmp
fnstcw
es
push
push
and
mov
sbb
in
push
das
out
ds
push
mov
fild
dec
js
repz
xchg
and
push
call
jge
cmp
push
fwait
(bad)
fldcw
jnp
fucom
lock
test
mov
push
push
cmps
stc
cmp
mov
movs
pop
cmp
add
dec
pop
mov
add
mov
and
pusha
mov
xor
pop
jmp
mov
inc
xor
and
ret
loopne
aaa
test
sub
outs
cmp
call
push
mov
mul
dec
mov
sub
mov
das
push
(bad)
out
nop
aas
fild
add
ret
mov
lahf
mov
inc
inc
pop
aaa
arpl
retf
jo
adc
(bad)
jg
dec
mov
cmp
lds
or
inc
out
sbb
xchg
pop
cmp
lahf
test
pop
adc
mov
fisttp
xor
sbb
mov
pop
mov
stos
ss
loope
fmul
pushf
mov
xor
pop
cs
or
or
adc
adc
or
or
xchg
mov
add
mov
dec
jno
lock
dec
cmps
pop
call
mov
adc
(bad)
xchg
mov
lahf
in
mov
fimul
cmps
scas
push
sbb
into
sub
adc
div
not
aam
in
pop
mov
sub
pop
mov
fcom
pop
rcr
pop
or
fsubr
or
sub
in
inc
xor
cli
cmp
jmp
xchg
adc
xor
sbb
(bad)
pop
fsubr
(bad)
and
and
sbb
ja
test
jae
sbb
inc
cld
add
and
pop
pop
mov
jo
repnz
popf
or
xor
jmp
repz
ror
inc
jge
ror
in
mov
dec
pop
add
push
jle
mov
add
stos
pop
jne
mov
cmp
enter
pop
gs
add
or
xchg
and
outs
mov
adc
mul
jns
cli
pop
xchg
sbb
dec
push
push
jmp
sub
mov
mov
jmp
sbb
sahf
mov
shr
popa
in
ins
cmp
je
push
ss
repnz
push
dec
pop
fcom
sbb
jmp
and
ins
xchg
sub
rol
mov
rcl
xchg
ins
sar
lea
ds
push
push
mov
adc
pop
test
fs
pop
xor
xchg
call
loopne
loope
push
pop
lea
popa
and
push
outs
cmp
or
cmp
mov
jne
mov
dec
adc
and
cmc
push
mov
and
mov
dec
push
cmp
mov
pop
stc
inc
popa
shl
sbb
xor
int3
dec
add
les
push
sub
inc
popf
inc
test
in
jne
retf
lods
add
fnstcw
rcl
and
cmp
ror
xchg
cbw
pop
bound
mov
xchg
pop
add
jle
mov
jg
push
(bad)
cmp
fs
clc
mov
pushf
int3
push
out
or
push
jae
aam
jl
jns
jbe
and
push
jg
push
ficomp
xor
int3
jle
mov
and
xchg
jl
sti
push
and
mov
jb
inc
mov
push
rol
and
lahf
nop
inc
mov
pushf
or
mov
dec
lea
mov
dec
xchg
inc
mov
and
test
push
adc
jmp
or
mov
add
rol
jmp
sbb
stc
push
adc
fcom
sub
or
mov
mov
popa
mov
or
(bad)
jmp
out
push
mov
daa
movs
jbe
adc
je
or
mov
push
test
mov
jle
pushf
jmp
mov
pop
fsub
leave
rol
and
xchg
sahf
mov
jns
je
jle
mov
mov
loope
repnz
shl
in
inc
push
push
or
add
test
mov
in
js
fst
xlat
popf
push
and
stos
das
lods
push
dec
daa
enter
cmp
scas
mov
and
loopne
stos
add
jns
pushf
mov
adc
hlt
ret
leave
ror
and
mov
push
dec
xchg
fsubr
push
xchg
mov
sbb
jo
adc
push
push
cmp
inc
imul
sub
mov
dec
jl
push
mov
sbb
sbb
movs
xor
add
aad
cmp
pop
mov
lock
and
mov
jg
xor
mov
sub
dec
mov
dec
mov
or
je
or
mov
mov
retf
or
pop
mov
cmp
mov
and
pop
adc
jmp
loop
jbe
mov
fst
ret
lods
out
xor
mov
cmp
sub
push
ror
mov
xor
mov
sbb
push
or
outs
sbb
mov
loopne
outs
frstor
sbb
(bad)
adc
jno
xor
stos
adc
sbb
mov
push
add
push
loopne
repz
repz
dec
push
add
jmp
mov
adc
xor
inc
inc
imul
push
xor
call
in
xchg
cmp
bound
jmp
sub
lahf
adc
adc
lock
mov
jne
push
inc
bound
fcmovu
add
adc
aad
frstor
and
test
pop
fcomp
pop
cli
add
cmp
sbb
(bad)
mov
jle
sbb
sub
pop
(bad)
jl
movs
add
(bad)
sbb
outs
sbb
arpl
fs
jno
icebp
sbb
fidiv
or
jge
out
jl
iret
adc
lea
cmp
mov
mov
xor
dec
push
push
push
jmp
xor
adc
ds
retf
inc
jmp
and
add
je
lea
sti
push
jp
adc
lea
pop
pop
das
mov
enter
dec
xor
push
push
xchg
retf
pop
aas
push
cli
sbb
jmp
int3
inc
pop
push
call
js
lea
pop
lock
adc
ret
push
dec
push
dec
sbb
jns
mov
or
cmp
cs
xor
push
popf
outs
jno
cmp
jge
jmp
retf
xor
cmp
bound
cmps
push
inc
pop
jno
cmp
jle
icebp
(bad)
dec
add
adc
mov
dec
neg
sbb
and
mov
push
sub
test
loope
jmp
xchg
mov
sub
fcmove
mov
push
loope
dec
das
push
scas
jns
xchg
test
(bad)
mov
jb
jno
mov
scas
cs
int3
shr
bound
mov
mov
push
adc
pop
mov
movs
(bad)
scas
or
lahf
add
test
(bad)
xor
mov
inc
outs
inc
push
(bad)
or
mov
(bad)
js
fidivr
sbb
push
sbb
cmp
jne
nop
adc
fldcw
push
inc
sbb
mov
sub
inc
ins
ror
xor
adc
test
mov
(bad)
out
sub
jne
mov
not
jnp
push
sbb
push
adc
jl
mov
jne
cmc
(bad)
enter
pop
or
adc
dec
repnz
jbe
mov
or
push
dec
and
or
inc
add
adc
mov
adc
xor
mov
xor
test
arpl
and
or
mov
dec
jp
nop
cmp
push
adc
rol
pop
movs
test
mov
mov
push
sub
mov
xchg
bound
enter
jmp
add
dec
sub
and
mov
mov
xchg
mov
movs
sbb
(bad)
or
add
add
jns
or
jmp
jnp
call
inc
nop
or
mov
scas
mov
shl
push
sub
loopne
sbb
inc
cmp
jl
in
pop
adc
inc
data16
ret
mov
bound
adc
sub
inc
ret
pop
movs
or
adc
inc
das
sub
mov
and
mov
ret
add
rcl
rcl
or
push
inc
and
mov
add
jne
mov
inc
mov
pop
xlat
adc
not
scas
popa
add
xchg
pop
sbb
addr16
mov
push
adc
and
push
add
jbe
movs
adc
hlt
cmc
dec
dec
sub
sbb
jno
test
ds
dec
mov
je
mov
or
mov
xchg
adc
das
push
lea
nop
mov
outs
or
adc
in
sbb
imul
(bad)
sub
xchg
bound
jmp
jmp
fist
mov
cmp
push
std
mov
mov
pop
outs
xor
dec
cmps
jmp
ds
jb
js
push
xlat
push
movs
in
lea
sub
or
outs
sub
pusha
sbb
(bad)
and
jb
adc
add
sub
std
add
xchg
add
jne
inc
popf
pop
mov
inc
js
iret
or
xor
or
cmp
pop
lahf
mov
cmp
test
and
out
cmp
(bad)
jg
adc
pop
push
clc
cmp
add
(bad)
ja
push
movs
movs
inc
pusha
js
adc
push
cmp
push
sbb
scas
call
je
dec
mov
xlat
test
xor
loopne
fcmovbe
es
jmp
ret
retf
fistp
retf
dec
jne
pop
or
and
inc
mov
ins
sbb
inc
fs
and
jo
(bad)
into
add
pop
test
inc
xor
jp
dec
push
xchg
and
es
icebp
push
and
fwait
or
jne
lods
push
inc
xor
add
mov
je
add
in
cmp
daa
lock
adc
lea
test
loopne
ror
cmp
shl
cmp
movs
jae
mov
add
dec
push
pop
mov
xor
test
cdq
xchg
ror
fadd
data16
ins
inc
into
cmp
sbb
or
sti
mov
add
mov
pop
inc
add
dec
ja
mov
enter
shl
dec
push
out
jge
jmp
popf
nop
clc
xor
fcom
clc
nop
add
pusha
mov
retf
and
ds
inc
adc
mov
and
dec
sbb
mov
pop
push
cwde
push
(bad)
es
sbb
out
jmp
outs
push
xor
hlt
pushf
outs
sub
sar
fdiv
js
nop
push
jo
or
jns
fnstsw
jecxz
push
js
mov
fs
dec
jge
or
mov
lea
sahf
popa
sub
mov
push
add
cmc
adc
pop
sbb
rcl
xchg
sar
test
lock
inc
xor
loopne
push
fld
or
popf
ror
xor
movs
ret
jecxz
lods
dec
loopne
sub
sbb
jl
ds
shl
les
mov
and
xor
bound
mov
or
push
push
inc
outs
dec
push
sub
mov
ror
pushf
mov
pop
bound
jecxz
add
out
es
addr16
into
jge
fcom
into
xchg
pop
loope
fisubr
mov
add
imul
xadd
xor
lea
cmp
add
outs
mov
inc
aaa
mov
fsubr
cmp
inc
fiadd
lods
jbe
adc
pop
out
push
mov
xor
dec
sbb
pop
fadd
pop
push
frstor
xchg
adc
test
(bad)
pop
mov
aam
add
or
sbb
cdq
mov
xchg
test
xor
sbb
ins
xor
push
cmp
jne
lea
push
xlat
test
(bad)
jecxz
sbb
repnz
pop
pop
scas
push
fcom
(bad)
dec
xchg
or
adc
bnd
mov
lds
(bad)
xchg
cld
push
test
out
into
shl
shr
mov
mov
mov
clc
adc
add
inc
cmp
cmovo
ins
cmp
jmp
xor
push
sbb
int3
cmp
cmp
mov
dec
sbb
xor
test
pop
sahf
push
mov
mov
cli
and
sbb
jnp
cmovp
push
jp
lea
and
sbb
out
and
lods
mov
lods
and
scas
xchg
push
clc
push
aam
push
lahf
and
sbb
test
outs
ins
adc
push
and
cmp
or
jl
ret
jmp
fdivr
enter
cdq
jmp
mov
ret
popa
mov
cmp
jns
pop
jns
int3
in
out
fnstcw
xchg
jns
and
dec
(bad)
mov
cmp
jne
pop
nop
jl
not
(bad)
mov
cmps
jl
retf
pop
inc
cdq
fcomp
sub
int
push
push
push
cmp
sub
cmp
dec
ds
push
push
push
add
and
mov
adc
sahf
xor
(bad)
aad
test
pop
jb
xor
adc
pop
and
repnz
js
loopne
xor
pop
neg
adc
adc
in
fs
in
sbb
popa
dec
neg
pop
ret
mov
sub
repnz
jbe
enter
push
inc
sub
or
jge
mov
fisub
aas
adc
mov
cdq
shl
push
mov
shl
arpl
fld
popa
mov
mov
mov
push
xchg
jge
add
jecxz
push
ret
dec
rcl
call
sbb
jae
mov
and
xor
outs
sbb
shr
out
retf
xor
hlt
ret
je
cmp
ins
dec
int3
addr16
add
jae
and
xchg
add
pop
jo
xor
je
mov
pop
adc
pusha
push
mov
push
mov
inc
imul
mov
jmp
sar
xchg
mov
paddq
and
and
jo
popf
test
push
jge
mov
lea
add
or
aaa
jne
xchg
retf
ret
pop
mov
(bad)
xchg
test
ficom
(bad)
jmp
pusha
cmps
es
pop
fwait
in
add
mov
je
cmp
ins
cmp
adc
mov
scas
jns
not
rcl
cwde
jbe
leave
je
clc
jmp
call
iret
and
pop
and
inc
mov
lods
fmulp
and
xchg
hlt
inc
xchg
ins
sbb
and
dec
jle
adc
push
or
xchg
cmp
pop
inc
xlat
jb
dec
imul
add
xchg
not
xchg
jmp
mov
adc
pop
xor
xor
xor
mov
(bad)
mov
dec
fwait
adc
pop
mov
rol
mov
repz
test
(bad)
std
push
sbb
adc
mov
mov
scas
(bad)
dec
jne
icebp
jmp
(bad)
and
je
push
addr16
pop
int
and
xchg
push
or
add
les
xchg
pop
sub
dec
dec
mov
add
aas
or
jmp
mov
push
dec
pop
rol
test
pop
movs
dec
pop
outs
out
add
pop
fistp
je
shl
push
jne
scas
jo
lds
inc
mov
test
adc
loopne
lahf
add
add
inc
inc
and
mov
test
jg
popa
xor
cld
test
in
jl
out
xchg
mov
fstp
std
aam
aad
in
push
ret
cmp
lods
loope
push
in
push
sbb
sbb
inc
mov
jmp
dec
pop
push
fmul
clc
and
cmp
jne
push
sbb
cmp
inc
and
test
inc
sub
or
loopne
xor
xor
fs
push
call
cmp
and
push
call
mov
push
ins
mov
jo
jp
or
cmp
cmp
clc
cmps
jle
call
sbb
sub
sub
sbb
mov
ja
cs
jnp
nop
jmp
or
lock
mov
movs
mov
imul
xchg
ret
in
ret
ds
js
mov
xlat
mov
out
adc
sub
fnstenv
mov
push
fmul
jle
dec
jmp
jmp
jne
xchg
(bad)
fadd
leave
shr
or
loope
adc
sub
add
inc
ds
add
(bad)
and
int3
ret
movs
xor
pusha
in
push
shl
cmp
adc
clc
xchg
jl
test
gs
push
ret
repz
push
in
into
lock
jge
fs
or
push
dec
mov
add
shr
clc
inc
sub
mov
loope
loope
jmp
adc
pop
inc
jecxz
xor
push
sbb
or
add
add
scas
push
inc
ins
or
pop
jb
push
loop
sbb
inc
push
sbb
xchg
enter
arpl
pop
je
and
xchg
mov
or
push
out
movs
xchg
ds
push
mov
sbb
loopne
inc
maxps
jge
and
sbb
(bad)
cld
stos
xor
(bad)
jnp
cs
or
cmp
scas
xchg
nop
jl
(bad)
ret
stc
das
add
inc
or
out
mov
test
adc
inc
out
cmp
push
std
jge
loop
into
(bad)
aas
jmp
ins
mov
pop
addr16
jmp
xor
mov
adc
mov
adc
test
pop
loopne
or
mov
xor
sar
cmp
sub
add
cmp
sbb
mov
sub
fsub
inc
scas
xlat
adc
mov
mov
or
ja
test
iret
fld
out
test
dec
xor
int
sub
or
nop
ss
lods
sbb
pop
shr
inc
push
xor
test
rcr
jle
clc
inc
sbb
or
or
lds
and
sub
xor
mov
dec
call
pop
jns
push
xchg
outs
mov
xchg
pop
jle
mov
xchg
inc
add
or
cmp
nop
adc
cmp
call
in
hlt
or
xor
fdiv
xor
cmp
hlt
mov
(bad)
sbb
lock
or
ss
call
jo
sub
cmp
or
icebp
sbb
xor
or
jle
fidivr
xor
sub
test
scas
or
mov
pop
pushf
or
cmp
lds
ret
lock
dec
push
mov
adc
jo
pop
movs
sbb
rcr
push
cmp
push
jle
cmp
pop
nop
es
dec
jo
daa
je
push
or
jp
pminsw
cwde
inc
sbb
jne
inc
add
adc
push
sti
loop
sub
or
jo
iret
rcl
test
dec
(bad)
(bad)
mov
mov
lds
sbb
or
les
stos
in
inc
add
outs
push
ffreep
inc
mov
pop
js
jecxz
push
dec
cmp
ja
pop
push
inc
aas
rcr
cmp
jnp
mov
in
pop
in
bound
jp
sub
inc
sbb
adc
add
stc
add
dec
dec
push
mov
loopne
loope
xchg
or
sub
cwde
movs
bound
aas
cmp
pop
xor
call
(bad)
push
arpl
add
adc
jg
pop
dec
or
stos
adc
cmp
scas
push
movs
shl
or
push
xor
push
mov
add
xor
sbb
push
mov
aaa
push
data16
lock
cmp
push
push
push
inc
out
push
popa
or
xor
jg
push
mov
push
push
add
sbb
jnp
lock
jp
add
push
mov
pop
pusha
push
inc
xchg
cmc
in
add
or
int3
mov
push
pop
mov
pop
add
mov
aam
test
pop
jo
add
not
push
push
lock
push
ficom
lea
mov
lea
xor
inc
jge
pop
sub
pop
and
lea
pop
rol
popf
rol
inc
movs
sbb
inc
push
inc
popa
daa
sbb
outs
dec
into
xor
mov
imul
jo
pusha
sar
mov
stos
rcr
cmp
leave
pop
jnp
push
add
iret
sbb
neg
rcl
and
iret
adc
jne
pusha
test
sbb
and
inc
add
int
pusha
adc
loopne
xchg
mov
test
rcr
(bad)
ror
pop
mov
add
adc
sti
and
test
ds
jns
and
jb
inc
imul
sub
mov
fcmove
mov
and
mov
test
sub
push
(bad)
in
mov
jmp
jae
and
or
imul
and
dec
push
cmp
rcl
push
cs
arpl
push
into
inc
inc
sbb
or
(bad)
scas
mov
mov
and
cmp
and
(bad)
push
sahf
aaa
inc
mov
mov
mov
cmp
sub
cmp
push
pop
outs
jmp
jl
sahf
ins
push
rol
push
arpl
add
mov
jae
iret
push
xor
clc
xor
icebp
push
add
xchg
or
fdivrp
mov
xchg
push
imul
mov
push
mov
push
add
mov
loopne
push
inc
jmp
in
cmps
adc
dec
push
fistp
pop
push
mov
idiv
call
fcmovnb
and
or
mov
inc
or
jg
aad
popa
sbb
pop
jl
clc
sub
mov
adc
out
stos
sbb
dec
cmp
xchg
xchg
xor
sub
out
mov
fs
or
outs
cmp
pusha
inc
mov
pop
or
push
mov
inc
cmp
jle
repz
xchg
push
xor
adc
pop
cwde
add
and
pop
fimul
loopne
je
bound
std
aaa
aam
rcl
call
lods
push
push
or
cld
adc
rcl
fdivr
fwait
mov
rep
jmp
iret
push
xor
dec
dec
cmp
and
cwde
mov
push
popf
jo
mov
out
mov
cdq
idiv
pop
add
sar
jmp
cmp
div
or
add
pop
(bad)
ror
popa
dec
jl
dec
or
and
sub
adc
cwde
push
into
sub
sub
add
leave
jle
movs
inc
mov
and
jl
nop
das
lea
sub
xchg
or
mov
dec
push
xchg
mov
jb
sahf
les
adc
mov
(bad)
in
mov
ficomp
add
and
add
dec
add
push
dec
cmp
inc
or
dec
dec
into
sbb
add
push
push
xlat
in
inc
pop
jo
pop
adc
push
fimul
mov
push
jmp
and
rol
movsx
xchg
pop
inc
mov
scas
idiv
push
imul
lahf
aad
add
stc
bnd
push
in
fs
pop
adc
out
jns
xlat
std
push
aas
jecxz
retf
add
add
add
add
push
cli
add
sbb
jns
fstp
push
push
xchg
and
aas
xchg
loopne
xlat
push
cmps
mov
inc
push
hlt
push
movs
aaa
jno
xor
movs
stos
push
ins
pop
inc
fnstsw
pop
add
xor
or
icebp
sbb
cmp
mov
fs
dec
inc
mov
add
cs
aad
icebp
xor
inc
scas
cmps
push
pop
and
xchg
retf
loope
in
push
mov
(bad)
push
movs
xchg
sti
adc
push
stos
adc
pop
xchg
stc
xor
outs
push
daa
pop
fild
or
or
paddusb
pop
sub
xor
push
cmp
pop
sub
mov
je
(bad)
jbe
add
push
int3
je
sbb
rcr
cmp
fild
lock
sub
js
lock
xchg
hlt
je
inc
mov
adc
adc
stc
aaa
mov
mov
lods
leave
test
pushf
push
std
add
retf
test
out
into
(bad)
pop
mov
sbb
push
stos
les
mov
cld
push
sbb
push
add
cmp
sbb
mov
shl
or
push
(bad)
adc
adc
adc
ss
imul
scas
inc
pop
pop
push
sbb
jmp
push
push
adc
sti
adc
add
mov
sbb
pop
je
pop
pop
pop
fcmove
add
pop
push
jmp
daa
push
pop
ror
lods
fld
in
pop
inc
push
push
cmp
jnp
outs
and
movs
rcl
sahf
out
neg
pop
and
stos
push
frndint
nop
adc
add
add
(bad)
push
sbb
pop
push
push
popa
pop
loope
push
adc
pop
xchg
ret
mov
(bad)
mov
sar
mov
jno
add
mov
mov
sbb
iret
test
sub
out
sar
inc
pop
cmp
adc
sbb
xor
fisubr
or
or
mov
jmp
inc
sub
inc
or
sbb
xchg
rol
ins
repnz
je
and
adc
sar
jo
dec
or
and
fdiv
xor
push
dec
(bad)
and
or
mov
pop
cmp
cwde
aad
pusha
xor
xchg
mov
jnp
mov
mov
xchg
mov
jg
test
and
jl
add
repnz
mov
inc
add
je
jge
je
arpl
retf
mov
push
and
mov
inc
inc
aas
dec
popf
xchg
xor
push
adc
add
dec
mov
fdivp
mov
xor
enter
mov
pop
dec
jmp
mov
test
js
jmp
popf
push
xchg
adc
shl
dec
xchg
jbe
adc
outs
adc
test
or
dec
push
mov
mov
push
out
stos
popa
xchg
inc
cs
lea
pop
inc
jge
push
dec
cmps
xchg
shr
clc
cs
outs
mov
sbb
hlt
push
push
call
cmps
stos
push
xchg
les
push
test
xchg
or
and
repz
push
push
rol
aaa
sti
in
pop
int
xchg
test
mov
and
fistp
inc
cmp
mov
xlat
sbb
jle
adc
adc
and
dec
ins
mov
sub
or
add
in
sbb
div
add
call
add
mov
dec
inc
and
add
sbb
adc
stos
ins
cmp
adc
push
cmps
mov
mov
aas
mov
push
jb
sbb
add
(bad)
jmp
xbegin
fcom
push
adc
xchg
pusha
lods
push
xor
push
(bad)
in
jle
test
test
fwait
sbb
inc
or
add
sbb
cs
sub
sbb
sub
sbb
popa
ret
xchg
inc
pusha
iret
gs
test
xor
xchg
pusha
(bad)
mov
ret
mov
sub
mov
mov
rol
fnsave
dec
pop
iret
nop
les
jp
sub
sub
and
movs
push
rcl
retf
rol
loop
mov
inc
add
ret
scas
aad
inc
or
popa
pop
test
jne
lea
daa
sub
add
sbb
ror
push
add
loopne
mov
pop
loop
dec
push
push
mov
fstp
dec
jo
push
sub
xor
stc
adc
push
movs
pop
or
push
xchg
pushw
nop
adc
sbb
or
int
cs
(bad)
in
mov
xchg
mov
ss
or
mov
and
leave
inc
sti
leave
add
xor
sub
push
xor
ret
inc
popf
inc
xor
mov
mov
cmps
and
dec
lock
movs
dec
popa
add
push
mov
adc
das
loop
and
in
push
pop
scas
mov
pop
fldcw
push
mov
iret
sub
xor
adc
mov
cmp
mov
mov
fsubr
rcl
pop
dec
test
fcomp
ja
jb
popf
cs
push
jae
clc
or
ins
retf
sbb
sbb
sub
pop
mov
cmp
je
push
add
dec
inc
xchg
push
call
dec
jno
jge
inc
xlat
fs
xor
sbb
xor
cwde
call
add
scas
cmp
cmp
faddp
fstp
in
aaa
adc
push
xor
stos
je
dec
cmps
add
ror
fmul
pop
ins
das
sbb
mov
je
jg
xchg
add
or
add
sbb
push
ins
mov
adc
aam
ret
lods
or
loope
jns
(bad)
outs
inc
pop
sub
cmp
jb
inc
call
call
push
inc
neg
sbb
and
inc
sbb
xchg
cmp
add
xchg
or
ret
inc
adc
pop
pop
xor
jecxz
mov
adc
xlat
adc
or
rcl
and
jbe
xor
mov
or
sbb
sbb
ror
jo
fisubr
push
add
test
jecxz
jne
jnp
and
jmp
daa
fwait
xchg
imul
mov
movsx
add
call
pop
sbb
inc
cmp
mov
ficomp
popf
sub
mov
sub
cmp
add
nop
sub
test
inc
sub
(bad)
sbb
push
jg
je
add
cmp
cmp
adc
outs
ss
mov
bound
pop
ss
call
call
cmp
or
pop
je
pop
and
cmps
inc
mov
arpl
pop
cmp
adc
call
mov
dec
push
cmp
fcmovb
cmp
mov
test
xor
inc
mov
cmp
mov
popa
sub
dec
stc
adc
mov
push
sub
in
adc
inc
cld
inc
call
pop
inc
push
cmp
pop
pusha
(bad)
enter
popa
push
push
push
retf
sub
adc
dec
push
(bad)
add
push
mov
inc
cld
sbb
cmp
fs
adc
jno
pop
lods
push
cli
dec
and
icebp
fcom
lds
cwde
jns
popf
and
and
jne
pusha
mov
cwde
dec
sub
dec
sub
stc
and
daa
cmp
sub
scas
add
arpl
adc
adc
inc
mov
ss
addr16
data16
sub
push
lahf
out
aam
in
pop
ins
les
fiadd
xchg
retf
inc
in
push
pop
ins
(bad)
jns
cmps
sbb
inc
push
imul
leave
mov
and
add
pop
gs
adc
shl
(bad)
in
and
mov
inc
cmp
add
adc
jg
cld
adc
mov
mov
jnp
mov
mov
jb
mov
out
mov
into
inc
push
add
sbb
mov
imul
ret
ror
xchg
dec
pusha
shl
rol
imul
mov
jle
push
jb
cmp
adc
nop
push
pop
inc
xchg
inc
add
mov
dec
jge
mov
je
add
pop
push
xor
adc
mov
repz
add
mov
or
dec
add
sub
push
hlt
call
xor
lods
jge
jle
add
and
dec
sar
es
jl
mov
call
add
enter
cwde
scas
cmps
mov
lahf
das
add
add
mov
and
movs
mov
jge
jb
xor
sub
xor
sub
fs
and
cmp
ins
jo
pop
or
js
jb
fstp
lahf
xchg
ds
jl
in
jmp
push
inc
pusha
shl
xor
jb
xchg
popa
push
and
mov
sub
fwait
add
div
jecxz
push
add
test
dec
jns
push
and
es
pop
sbb
push
enter
or
dec
mov
push
fldcw
push
adc
fcom
fcmovnbe
xor
and
nop
and
and
xor
test
push
and
and
push
mov
inc
mov
push
push
imul
push
push
and
dec
fld
retf
mov
push
inc
adc
and
scas
mov
sub
in
cmps
addr16
outs
mov
pop
(bad)
fadd
jnp
or
or
add
or
push
push
lods
cmp
cmp
sub
mov
inc
lods
pop
mov
loopne
addr16
push
inc
repnz
pop
jmp
jle
cmovns
fcmovnb
into
xchg
jp
iret
add
(bad)
mov
cmp
sbb
sar
add
jo
xor
sub
test
xchg
mov
dec
xchg
rcl
fdivr
dec
push
dec
inc
xor
push
sub
fcmovne
xor
rcr
cmps
adc
push
enter
mov
sbb
jle
sti
inc
daa
sub
sbb
inc
inc
ror
retf
mov
sbb
sbb
addr16
(bad)
dec
clc
cmp
mov
adc
cmp
push
mov
iret
mov
and
movs
hlt
push
sub
jnp
std
cmp
and
test
rcr
jo
mov
push
(bad)
xchg
test
pushf
pop
xor
adc
xor
mov
ss
cmp
add
orps
ds
sub
and
(bad)
cmps
mov
cld
inc
(bad)
aam
mov
and
xchg
push
xor
sbb
push
repnz
adc
adc
push
daa
push
push
aad
sub
rol
(bad)
pop
jne
fidivr
inc
sub
mov
ss
push
and
add
or
pop
or
sbb
mov
ins
inc
das
adc
hlt
mov
dec
scas
fs
xor
pop
cmp
pop
or
cdq
inc
jnp
scas
xchg
dec
add
mov
test
stos
mov
cmp
dec
inc
lock
xchg
xor
(bad)
mov
ins
loop
fcmovnu
pop
sub
ins
cmp
mov
adc
lods
dec
ror
xor
pop
pop
sbb
inc
sar
loopne
loop
or
mov
add
xlat
es
pusha
jge
dec
add
pop
sbb
pop
or
lods
lods
test
xchg
clc
fs
nop
push
push
mov
call
mov
jo
je
add
dec
xlat
cmp
xchg
je
(bad)
rcr
and
fs
add
jmp
adc
xchg
mov
add
sti
xchg
sar
sar
sbb
addr16
sar
and
out
lea
cmp
adc
cdq
inc
and
push
xchg
add
(bad)
aas
lea
cmp
inc
pop
cmp
add
je
cmp
int
call
push
test
inc
es
sub
bound
loopne
loopne
mov
mov
ret
sub
push
test
in
push
ret
xchg
repnz
mov
bound
and
sbb
sub
xchg
adc
pop
dec
xor
out
jbe
jns
inc
or
lds
pop
add
adc
retf
aas
outs
fst
adc
cmp
je
adc
cmp
add
out
sbb
das
dec
push
std
fdiv
iret
mov
int3
mov
jmp
xor
pop
push
repz
mov
(bad)
push
sbb
enter
jmp
daa
ret
adc
(bad)
hlt
iret
div
scas
jo
clc
mov
add
adc
neg
sub
inc
or
sbb
rcl
and
pop
mov
inc
jecxz
add
jnp
dec
loope
test
add
call
ror
mov
add
dec
inc
adc
mov
ja
push
or
les
repnz
adc
dec
add
push
xchg
retf
jo
cmc
add
or
out
and
leave
mov
sub
sbb
sub
push
sbb
sub
pop
ret
or
sbb
cmp
push
test
shrd
pop
xchg
xchg
movs
inc
loope
int3
push
lds
sbb
pop
xchg
push
fdiv
add
push
sbb
mov
push
daa
retf
fs
push
mov
shufps
popf
jbe
or
mov
or
inc
popa
mov
adc
xchg
push
mov
dec
inc
add
in
cmps
dec
pop
and
or
add
push
adc
add
bound
mov
pop
mov
aas
loope
fcomp
inc
pusha
popa
jecxz
lods
jns
jbe
mov
push
dec
inc
sbb
cld
sbb
or
imul
dec
add
aaa
sbb
mov
inc
xchg
fs
into
mov
push
mov
add
jo
popf
add
sbb
inc
xchg
jmp
out
test
shl
mov
or
push
dec
mov
adc
enter
mov
and
arpl
xchg
jg
clc
call
push
sub
outs
adc
fstp
jge
jmp
mov
test
add
les
adc
or
sub
mov
push
test
xor
rcl
imul
cmp
add
push
inc
push
adc
push
adc
imul
lahf
push
pop
test
jp
and
cs
out
jo
scas
xor
mov
xor
sbb
xchg
lods
sub
stos
sbb
dec
add
jns
js
lahf
sbb
out
js
(bad)
into
mov
stc
sbb
dec
pusha
xor
cmp
adc
arpl
out
push
jbe
sar
scas
sub
das
push
adc
xor
sbb
and
(bad)
sbb
and
or
or
ds
mov
mov
call
(bad)
mov
xor
inc
fld
jae
push
xor
adc
adc
stc
cmp
imul
loopne
outs
jg
xor
cmps
scas
in
sbb
xor
iret
xchg
stos
or
repz
gs
mov
jecxz
rol
cmp
call
test
cmp
movs
stos
or
cmp
fsub
xchg
inc
inc
add
or
cmc
fyl2x
or
pop
mov
cld
sbb
xchg
inc
inc
pop
imul
xchg
std
test
inc
pop
pop
pushf
cmp
sbb
adc
push
cli
jns
mov
sbb
aas
cmp
repnz
mul
mov
jbe
mov
xchg
and
xor
adc
lods
test
and
push
std
je
xchg
daa
loope
dec
daa
inc
std
add
cmp
arpl
leave
je
retf
mov
push
mov
pop
retf
mov
rol
jl
lods
jl
add
add
mov
mov
rol
add
add
int3
sbb
loope
repz
repz
add
mov
mov
(bad)
sub
sahf
aas
adc
call
sub
mov
xor
pop
cdq
scas
xor
add
popa
add
lock
or
std
mov
jne
sub
cwde
pop
lods
cli
cmp
add
ror
push
or
push
lea
sub
cmp
test
adc
add
std
mov
(bad)
push
cmps
sub
mov
int
aaa
mov
mov
imul
jge
and
or
mov
xor
and
adc
repz
daa
add
movs
sti
rol
xchg
mov
sub
mov
cli
dec
imul
clc
xor
mov
sbb
mov
sbb
pop
and
mov
adc
xchg
iret
pop
aad
push
(bad)
mov
mov
test
test
add
pop
and
adc
adc
push
adc
inc
xchg
and
xor
pop
push
and
and
mov
xchg
xchg
popa
loop
out
sahf
sub
push
outs
int
je
add
push
and
xor
aam
adc
xor
mov
xchg
test
mov
imul
ins
es
mov
pop
inc
cmp
xor
lea
sub
aaa
mov
adc
xchg
or
in
mov
adc
push
sbb
mov
leave
sub
xor
pop
mov
(bad)
mov
jne
(bad)
cmp
ja
pand
add
jmp
leave
test
and
inc
mov
outs
out
test
pop
addr16
cdq
rol
loop
or
inc
fistp
mov
jne
adc
pusha
mov
jmp
mov
mov
add
and
(bad)
imul
(bad)
popa
imul
push
jg
lea
xor
jno
sub
or
cmps
pop
mov
sahf
lea
sbb
sbb
stos
pushf
push
add
dec
and
xor
xchg
cmp
loope
push
inc
retf
add
(bad)
and
frstor
into
xchg
add
pop
or
loopne
fsubr
fcomp
in
jns
add
mov
ja
jl
call
sbb
cs
loopne
mov
push
fmul
push
hlt
and
loope
repnz
jle
mov
leave
push
inc
pop
or
mov
leave
adc
cli
aam
sub
fld
and
xor
dec
push
movups
or
push
push
mov
cmp
add
add
ret
lea
data16
xor
ror
and
(bad)
push
and
movs
add
inc
mov
dec
dec
add
or
push
leave
and
and
and
cmp
test
mov
sbb
inc
xchg
int
pop
jmp
pop
dec
loopne
out
sar
or
mov
sbb
jmp
lock
sbb
(bad)
dec
out
mov
add
xor
sbb
inc
ins
xor
pop
jnp
lods
push
cmp
adc
cmp
ds
popa
sbb
xchg
test
icebp
xor
and
int3
mov
xor
scas
inc
or
and
int
mov
xchg
xchg
mov
and
mov
push
dec
iret
dec
mov
pop
mov
imul
movs
mov
add
in
or
add
cmp
add
jne
pop
xchg
leave
sbb
outs
mov
retf
rcl
aam
push
sbb
or
ret
add
or
lods
scas
pop
rol
mov
add
mov
and
mov
sbb
or
push
add
ds
add
xchg
in
fwait
imul
jno
dec
ins
or
sbb
pop
push
jmp
jns
pop
pop
push
lock
cmc
xor
cld
mov
loope
bound
pusha
in
ins
out
pop
nop
je
jg
in
dec
rol
leave
scas
mov
aas
cwde
inc
and
xlat
and
mov
std
jb
lock
jmp
hlt
sub
mov
test
dec
ret
(bad)
(bad)
icebp
jo
jo
push
and
xchg
adc
mov
and
hlt
loop
add
sbb
sbb
enter
or
lods
mov
cld
mov
jle
mov
sub
adc
data16
sbb
sbb
repz
jne
mov
cmp
lds
lea
pusha
in
mov
jmp
push
add
push
daa
inc
ss
jl
adc
sbb
lahf
das
sub
dec
iret
sahf
cmps
sub
add
xor
jns
jae
ins
push
bound
pushf
out
jne
std
repnz
icebp
loope
sbb
lock
and
xor
outs
jne
sbb
xchg
dec
test
icebp
(bad)
jle
sub
push
push
dec
push
add
jae
lds
mov
adc
stc
add
clc
(bad)
enter
sub
sub
pusha
push
push
push
and
jmp
int
(bad)
adc
and
jmp
retf
cmp
and
sub
jmp
das
in
clc
nop
push
or
push
xor
xor
js
or
clc
xor
inc
out
add
push
mov
scas
add
push
xchg
push
into
ins
xor
push
lea
psubsb
pop
pop
aas
movs
adc
add
cdq
add
add
jae
aam
jns
aaa
arpl
cmc
jbe
out
test
or
mov
inc
mov
xor
cmp
add
adc
clc
dec
or
jmp
pop
pop
xor
or
xchg
je
push
dec
fdiv
int
xchg
adc
add
js
lea
lods
retf
jmp
adc
retf
adc
add
imul
lea
pop
rcr
xor
push
sub
mov
in
push
add
add
or
loopne
or
fadd
mov
push
dec
xchg
pop
pusha
inc
loopne
out
pusha
push
shl
rol
cwde
sub
jl
dec
loopne
pop
add
sub
mov
test
jle
(bad)
into
or
or
in
push
mov
fisubr
jne
push
inc
inc
movs
out
mov
cmp
adc
repnz
push
imul
xchg
test
cs
mov
ins
out
push
pusha
sub
dec
xor
ja
cmp
jecxz
nop
cli
into
push
in
xchg
test
adc
cld
fidivr
mov
not
stc
in
fcomp
cmp
push
push
call
adc
popf
dec
leave
test
and
mov
mov
and
mov
jl
or
mov
aad
sbb
xor
mov
jne
nop
pushf
and
push
xor
push
sbb
dec
xor
dec
shl
sub
sub
and
dec
push
pop
inc
mov
sub
inc
sbb
call
mov
add
or
xor
jno
fwait
pusha
leave
inc
sub
jg
add
push
jo
fidivr
cs
ror
mov
pushf
jge
out
into
mov
(bad)
cmp
jg
aaa
fucomip
mov
sar
push
push
cmp
jle
push
call
and
adc
and
sbb
fcom
hlt
adc
mov
ret
mov
jno
mov
inc
cmp
sub
clc
push
inc
fiadd
out
cli
imul
adc
xchg
add
pop
cmp
push
mov
jne
movs
push
cmp
jb
jno
mov
push
dec
adc
imul
in
pop
cmp
popa
ins
cmp
push
or
push
fist
jmp
fst
test
popf
imul
mov
push
xchg
mov
in
in
xor
adc
movs
or
mov
mov
fmul
xchg
nop
mov
cwde
push
push
ins
cdq
mov
inc
jmp
inc
lahf
(bad)
push
cmp
dec
ins
xor
mov
jb
add
sub
dec
jb
mov
xchg
cmp
and
bound
cmp
mov
add
ins
sub
cmp
lock
xor
push
mov
sbb
jb
test
rcr
mov
(bad)
pop
test
dec
pop
mov
bound
loop
inc
push
sbb
jp
add
push
adc
add
push
mov
sbb
add
fs
cmp
inc
clc
inc
rcr
je
add
lock
push
and
jo
je
xor
dec
rcr
out
fidivr
(bad)
aam
adc
adc
aas
jmp
lods
fst
push
pop
push
mov
mov
mov
call
repz
xchg
js
(bad)
push
icebp
or
sbb
dec
and
inc
inc
(bad)
or
jb
or
test
fwait
pop
pop
cmp
fs
xchg
push
add
cmp
and
je
movs
mov
mov
sbb
fadd
loopne
imul
scas
cmp
inc
(bad)
inc
iret
pop
dec
dec
or
scas
inc
mov
std
or
jp
push
jns
push
nop
mov
sub
adc
test
push
aaa
and
mov
aaa
and
aam
dec
mov
imul
push
loopne
lods
sbb
in
sahf
xchg
sbb
xor
daa
dec
pop
sub
(bad)
hlt
dec
cmp
cmp
push
adc
inc
shr
pop
in
ins
int
xchg
add
js
xchg
or
dec
cld
jno
enter
xchg
sub
add
sub
jnp
scas
cmps
std
sahf
push
mov
fmul
pop
pop
or
dec
outs
and
imul
jl
loope
mov
push
mov
add
xchg
cli
fwait
sahf
and
pop
dec
adc
adc
jmp
call
stos
adc
pop
mov
es
lahf
push
jl
add
sbb
dec
dec
cmps
mov
loopne
and
and
sbb
mov
adc
loop
and
cmp
dec
push
push
daa
push
into
cdq
les
jecxz
adc
sub
imul
xchg
sub
push
pop
xchg
push
add
int3
add
les
cmps
adc
cmp
or
scas
cmp
sub
mov
xchg
push
mov
jp
ror
loopne
and
movs
cmp
and
inc
sub
adc
xchg
mov
inc
add
mov
add
jb
cmc
movs
and
cmp
push
mov
sbb
loop
cmp
jp
xor
mov
add
push
or
pushf
push
mov
push
clc
xchg
loopne
adc
gs
xor
inc
in
or
lock
adc
push
adc
push
add
sbb
(bad)
add
mov
adc
sub
push
sub
sbb
jo
xchg
ins
inc
ret
hlt
outs
sub
mov
and
add
push
add
add
mov
dec
xchg
dec
retf
add
lods
xchg
pop
sub
in
mov
dec
popf
data16
shr
ret
mov
cmp
ins
add
add
push
xchg
mov
fcom
mov
ins
add
push
jp
mov
fild
lds
jo
out
add
xchg
leave
xchg
retf
aas
cmps
popa
ss
mov
lock
lock
inc
sbb
and
shl
pop
and
pushf
adc
or
or
xor
lea
xor
pop
mov
sub
add
inc
mov
mul
push
retf
xchg
call
sbb
imul
clc
xchg
outs
mov
std
lods
fmul
adc
loop
jno
cwde
shr
(bad)
jbe
in
cmp
fcmovnb
je
add
enter
sbb
ffreep
and
push
pop
xor
aam
push
mov
test
fld
xor
add
into
xor
test
mov
repz
enter
cmps
dec
mov
fisttp
loopne
jae
or
pop
inc
add
dec
pop
sahf
dec
js
mov
or
cmp
jle
dec
sub
hlt
inc
add
inc
jge
cwde
adc
cmp
cdq
and
and
sub
push
add
loopne
and
in
pop
add
or
xchg
inc
inc
daa
imul
mov
mov
rol
sar
nop
ret
jns
rcr
test
or
mov
push
jmp
cld
lea
mov
shr
test
les
mov
loope
adc
jge
dec
sub
xchg
dec
push
imul
add
push
int
es
enter
push
push
rol
and
mov
ss
cs
jne
inc
loop
push
cmovle
out
lods
in
pusha
fstp
and
sbb
fdivr
add
js
mov
add
inc
inc
sbb
and
pop
repnz
ret
out
mov
cmp
rcl
push
jecxz
xor
push
and
fnstenv
aad
or
and
(bad)
je
fcomip
jmp
popf
pop
sub
pop
pop
jmp
repnz
inc
xchg
xor
pop
pop
rol
xor
es
movs
(bad)
adc
adc
test
mov
lods
and
pushf
xor
cmp
push
push
xchg
push
push
jne
mov
xlat
std
das
add
cmp
fldenv
inc
icebp
xor
mov
xor
dec
pop
aam
sbb
or
xor
inc
stos
xchg
adc
js
das
movs
dec
cli
add
jg
js
dec
cmp
psllw
push
push
push
loopne
inc
or
mov
push
adc
pop
add
add
jge
push
push
push
pop
outs
rcr
clc
mov
jnp
mov
adc
js
inc
es
dec
je
xor
js
add
mov
adc
sbb
dec
jne
mul
inc
jl
je
adc
dec
and
xchg
aaa
in
add
or
sbb
cmp
pop
sub
cmps
mov
ins
test
lea
movs
das
push
add
mov
test
es
ja
sbb
psubusw
and
scas
aam
cs
sub
mov
push
mov
xor
dec
jmp
in
adc
imul
imul
aad
sbb
or
xor
xchg
loope
jp
inc
push
xor
dec
popf
xchg
into
sahf
fstp
dec
pop
test
dec
aaa
push
push
jne
sbb
cmp
inc
mov
jp
jo
adc
das
imul
sbb
fnstenv
mov
push
mov
in
mov
popa
ins
mov
ins
lods
je
jle
jne
mov
retf
mov
mov
xor
mov
out
xor
dec
push
imul
add
jbe
xor
repz
push
add
xchg
pop
cld
mov
pusha
push
js
mov
sub
pop
arpl
jno
sub
or
in
pop
xlat
daa
mov
push
xchg
push
mov
or
fild
popf
push
mov
sub
inc
pop
inc
xlat
add
lea
push
add
addr16
mov
aam
mov
adc
sahf
inc
scas
dec
adc
or
pop
mov
and
push
cmp
push
mov
dec
aad
rol
mov
mov
adc
mov
je
sub
add
cmp
and
leave
pop
icebp
xchg
xlat
dec
pop
pusha
mov
push
sub
sti
xchg
jmp
rcr
xchg
ja
mov
and
cmp
pop
or
inc
sub
mov
(bad)
rcl
push
outs
ret
dec
mov
mov
push
stos
lock
sub
mov
and
int3
mov
mov
pushf
sbb
mov
mov
leave
mov
test
nop
ret
ret
loope
inc
punpcklbw
mov
pop
pop
lods
mov
jo
xchg
sbb
adc
cmp
into
inc
cmp
or
push
mov
push
leave
push
pop
push
inc
cmp
sub
pop
aas
inc
mov
iret
inc
rcr
inc
jb
jecxz
iret
jbe
rcl
fs
or
pop
dec
fild
or
mov
test
mov
in
mov
cmp
inc
add
pop
jbe
adc
sti
imul
or
pop
icebp
add
int
inc
jmp
pop
movs
adc
jl
push
cmp
jmp
jnp
pop
addr16
inc
sbb
mov
rol
cmp
(bad)
pop
(bad)
jg
add
sar
es
cmp
mov
aam
test
pop
jb
outs
retf
sbb
test
mov
inc
es
add
fst
test
pusha
popa
and
aam
sbb
test
mov
cmp
(bad)
and
push
inc
mov
sbb
jae
push
sbb
pushf
into
mov
ds
mov
ja
jecxz
clc
add
dec
adc
ins
shr
or
pop
jb
dec
loope
movs
(bad)
mov
mov
push
scas
sub
sub
xor
pop
aaa
and
xchg
push
pop
push
adc
pop
mov
loop
mov
adc
jne
in
xchg
jle
dec
mov
xlat
fsub
push
fcom
sub
cs
inc
add
sbb
pop
jbe
cmp
or
inc
adc
outs
jmp
push
add
sub
or
adc
mov
dec
push
out
popa
pop
sti
dec
cmp
or
sub
sbb
mov
add
into
jo
adc
call
cmp
push
inc
in
and
dec
jecxz
cli
je
or
adc
jle
(bad)
loop
in
int
sti
xor
cmp
inc
jl
xor
adc
loopne
mov
add
mov
xchg
sub
popa
mov
xor
test
or
inc
cmps
dec
test
loop
dec
bound
dec
jno
movs
test
and
nop
add
push
and
mov
cmc
mov
sbb
add
movs
inc
mov
leave
sbb
ret
std
inc
out
xor
mov
add
xchg
dec
inc
add
in
cmp
ficomp
movs
cmp
jnp
stc
gs
adc
ret
adc
scas
push
in
rcl
loope
fistp
adc
cs
dec
dec
retf
push
xor
push
pop
mov
ret
sbb
mov
mov
xlat
push
push
adc
dec
pop
dec
je
and
push
mov
and
fucomp
inc
idiv
sbb
mov
(bad)
scas
test
add
pushf
aad
sub
add
hlt
push
dec
adc
es
sti
pop
repnz
test
xchg
ins
push
and
dec
outs
pop
fimul
cdq
cmp
jo
lds
mov
pop
xor
mov
adc
dec
and
dec
sbb
rcr
sbb
test
cmp
push
pop
mov
add
inc
xchg
adc
pop
dec
mov
iret
mov
mov
cli
and
lea
sbb
dec
inc
add
xchg
aam
sub
dec
pop
pusha
arpl
and
add
xchg
or
je
mov
cld
jle
sbb
repz
test
xchg
fld
push
mov
inc
xor
inc
(bad)
and
inc
and
call
shl
pop
mov
adc
mov
dec
jns
or
(bad)
ins
test
dec
inc
std
jne
in
mov
xchg
push
cmc
fld
fwait
mov
add
sub
xchg
jno
sbb
jle
add
mov
daa
lds
mov
xlat
(bad)
cli
sub
add
cmp
(bad)
mov
sub
aaa
mov
popa
inc
adc
lods
retf
push
dec
xor
add
inc
sub
push
mov
rcr
adc
fidiv
xor
mov
push
xchg
cmc
inc
mov
mov
or
movs
gs
jbe
out
push
and
add
fwait
push
retf
or
sub
xchg
mov
movs
lods
push
xor
or
adc
xchg
inc
inc
inc
add
fcomp
rcr
adc
inc
rol
pop
sar
or
inc
add
fsubr
and
adc
adc
adc
and
push
adc
cmp
mov
mov
add
sahf
test
push
sar
mov
cwde
hlt
test
adc
es
cmp
cmp
inc
inc
lods
loopne
add
adc
dec
je
inc
push
or
loopne
push
cmp
cmps
mov
sbb
sub
mov
mov
cmp
sbb
mov
inc
test
mov
dec
pop
adc
sbb
inc
sbb
or
cmps
rcl
fwait
jne
or
and
add
jg
in
add
xchg
int3
loop
clc
mov
retf
mov
push
sbb
inc
or
adc
adc
jmp
shl
shl
inc
in
ja
adc
sub
or
mov
loope
es
shr
xor
adc
push
enter
mov
mov
loope
stos
or
ret
js
mov
mov
cld
mov
pop
xor
pop
ins
popf
add
adc
xchg
cmp
dec
clc
(bad)
test
pop
sub
das
test
xchg
adc
sub
and
int
scas
in
adc
mov
sub
jecxz
or
stc
add
inc
inc
fisttp
in
pop
or
sub
mov
push
movs
dec
ret
int3
inc
inc
mov
xchg
retf
sub
jne
sub
xor
sbb
xor
mov
or
add
sbb
addr16
sub
adc
sbb
icebp
xchg
xor
mov
cmp
sub
add
pop
and
or
cli
cmp
mov
sub
nop
push
push
push
inc
or
fbstp
movs
cmc
dec
jnp
xor
lds
pop
sbb
neg
push
push
mul
adc
out
jmp
lock
je
sti
inc
call
iret
sub
scas
ror
inc
sbb
mov
data16
sub
add
(bad)
leave
adc
dec
lock
add
xchg
js
dec
dec
xchg
mov
add
jp
aas
or
add
rcl
and
mov
push
sbb
cmp
mov
js
jne
jecxz
sbb
lea
icebp
dec
push
inc
sbb
or
(bad)
adc
jae
jnp
dec
aad
sbb
retf
xor
pop
pop
or
adc
add
push
mov
or
jmp
pop
(bad)
data16
push
mov
add
and
call
xor
or
adc
movs
cmp
jo
mov
add
xchg
je
leave
pop
pop
lods
add
or
push
sbb
and
nop
xor
sbb
stc
or
jge
lahf
add
mov
loopne
fisubr
cmp
and
inc
lods
xor
add
jmp
pop
fidivr
inc
pusha
mov
shl
sbb
mov
test
adc
cmp
add
sub
fnstcw
cmps
enter
inc
ret
sbb
adc
jge
sbb
or
pusha
aad
fdiv
push
movs
and
inc
and
lds
or
outs
es
pop
ret
int3
push
sti
add
shl
rol
pop
add
cld
mov
cli
rcr
mov
mov
add
out
xor
adc
jmp
dec
cwde
sbb
or
mov
sbb
enter
jo
sbb
mov
cmp
add
lods
sbb
xor
shl
mov
push
adc
jg
add
cwde
xchg
push
jl
aas
aam
push
and
sbb
mov
js
outs
mov
xor
loopne
cwde
lea
push
hlt
call
mov
xor
mov
inc
push
mov
inc
dec
ror
adc
sbb
lahf
inc
or
mov
jo
xchg
pop
jmp
fld
push
add
sub
cmp
in
mov
jge
add
push
push
(bad)
call
pop
stos
sbb
jmp
add
inc
icebp
mov
adc
lock
jmp
call
test
inc
clc
cmp
mov
adc
push
inc
out
fadd
and
push
test
inc
add
dec
cs
int3
sbb
jg
out
mov
gs
mov
in
jge
adc
jbe
test
loop
mov
fadd
inc
xchg
pop
and
fidiv
xor
out
int
sbb
mov
cmps
and
loope
add
scas
add
mov
mov
adc
(bad)
hlt
fs
sbb
sbb
hlt
mov
mov
add
or
enter
cmp
outs
pop
mov
inc
test
dec
jmp
scas
repnz
xor
sbb
sub
pop
scas
aam
push
dec
push
push
aam
outs
or
sub
loopne
jle
fldln2
jbe
lods
in
jns
jne
or
test
cmp
int3
xchg
cmps
es
ds
and
scas
repnz
xor
shl
les
les
add
ret
mov
in
inc
popf
pop
inc
push
icebp
or
call
aad
sbb
xor
cdq
push
push
pop
int3
cmp
xor
push
xlat
mov
add
sub
add
push
jp
sahf
and
inc
stos
push
xchg
pop
push
pop
push
mov
lea
push
cmp
in
aas
adc
scas
mov
xchg
inc
ins
aas
sbb
mov
adc
pop
xchg
mov
scas
mov
pusha
push
sub
xor
gs
test
jg
sub
push
popa
ins
aas
cmp
push
popa
pop
in
sbb
or
mov
mov
cwde
sub
mov
lock
jb
push
invd
test
sub
adc
popa
out
xor
mov
lods
or
adc
xor
pop
out
or
inc
mov
adc
sub
lock
push
out
xchg
mov
sbb
fisub
inc
jge
xchg
pop
shr
lahf
in
and
xor
popa
jbe
movs
mov
in
xchg
push
and
and
enter
ret
jno
sub
add
aam
pop
shr
ret
fist
ror
arpl
inc
adc
rol
fisubr
sbb
push
outs
loopne
add
xor
inc
(bad)
fidiv
push
or
inc
cmp
jl
xor
fild
ret
jg
adc
pop
cwde
pop
adc
mov
pop
add
sub
mov
cmp
jle
lea
push
xor
add
aam
inc
shl
cmp
or
pop
jnp
cmps
movs
adc
add
mov
sar
loope
js
sbb
inc
xchg
or
shr
mov
pop
push
push
sub
push
ret
push
push
pop
or
or
dec
xchg
icebp
cmp
retf
pusha
jb
or
dec
dec
sub
dec
push
loop
adc
adc
xlat
sub
repz
adc
addr16
out
inc
adc
and
mov
pop
mov
cmps
inc
sbb
mov
lea
adc
push
adc
loopne
mul
ror
sar
loopne
das
pop
or
inc
inc
add
mov
pop
imul
cmc
sbb
jb
loop
push
add
pop
cdq
enter
push
add
cmp
or
daa
les
and
aas
inc
and
or
inc
mov
(bad)
push
cdq
mov
pop
(bad)
mov
clc
cdq
idiv
ss
dec
pop
cmp
pop
mov
xchg
popf
push
push
dec
push
mov
mov
cmp
jne
cmp
jne
mov
mov
cmp
jne
cmp
outs
sbb
add
xor
or
adc
push
cmp
mov
jle
or
ss
push
cmp
sbb
fld
fyl2x
fstp
sub
inc
sbb
pop
cmp
shl
sub
movsx
add
fsubr
popa
add
mov
lock
xor
sub
cs
dec
fstp
fld
sbb
jg
fabs
dec
fdiv
jmp
fmul
fcom
aas
xchg
adc
inc
push
adc
adc
sub
je
ins
cmps
push
cs
push
test
lock
add
mov
and
(bad)
loop
imul
rol
(bad)
jge
pop
pop
add
mov
cwde
(bad)
pop
xor
mov
add
loopne
outs
in
or
leave
cmp
mov
stc
aaa
cmp
mov
stos
jo
daa
mov
jp
add
push
rol
stc
jl
or
fisub
cmp
mov
mov
out
fsub
verr
cmp
push
push
fs
push
pop
shl
cmp
push
mov
imul
xor
adc
inc
dec
sub
jnp
xor
mov
jmp
mov
mov
inc
sub
xchg
inc
inc
cmp
das
or
imul
xor
inc
push
(bad)
adc
and
mov
cld
jb
mov
outs
repnz
shr
adc
sbb
stc
mov
in
lock
push
adc
dec
xchg
push
sbb
cmp
jmp
and
push
mov
push
sahf
lea
push
pop
xor
cmp
push
sbb
imul
xor
and
jge
push
popa
push
jp
and
dec
or
movs
lods
inc
inc
loopne
pop
sub
mov
xor
cvtps2pi
test
push
je
(bad)
imul
and
cmova
cmp
jne
inc
inc
aaa
sar
inc
call
push
nop
add
add
or
push
add
je
lds
fild
and
loopne
mov
jmp
push
jmp
cmp
mov
cmp
cmp
ss
xchg
retf
mov
push
xor
fstp
xchg
cmp
les
or
mov
rol
dec
call
push
xor
cmp
mov
test
dec
sub
aaa
mov
movs
or
jo
shl
adc
je
push
xor
or
mov
or
or
adc
inc
in
mov
sar
sub
inc
jae
dec
das
je
or
or
je
inc
push
add
icebp
inc
mov
add
rol
add
out
cmp
out
mov
sub
add
mov
dec
push
test
jne
sar
mov
jmp
ret
iret
mov
imul
dec
dec
xchg
dec
in
push
jle
iret
xor
dec
mov
sbb
enter
fiadd
fsub
nop
iret
cdq
mov
sbb
icebp
adc
xor
mov
in
(bad)
and
sub
daa
and
dec
lods
add
add
jle
int
mov
push
and
cmc
shl
pop
pop
adc
ret
jne
pop
jecxz
pop
dec
mov
les
and
and
sbb
and
sbb
inc
imul
inc
pusha
cmp
jne
cmp
jne
add
xchg
mov
pop
push
push
add
mov
add
movs
icebp
cmp
jne
and
icebp
jne
mov
and
addr16
bound
ss
pusha
push
adc
(bad)
test
mov
pusha
gs
loop
mov
inc
pop
pop
dec
inc
jmp
push
out
mov
push
push
mov
dec
sub
test
dec
ficomp
aaa
mov
and
dec
loope
inc
pop
push
add
xor
ss
or
push
add
and
pop
cli
adc
lock
ret
sub
adc
inc
add
jmp
pop
pop
pop
pop
lea
ja
push
iret
mov
cmp
jne
mov
std
add
ret
cmp
or
out
pop
out
jne
mov
ret
outs
mov
mov
cmp
jbe
cmp
jae
jg
xor
xchg
das
and
adc
sbb
lods
mov
test
push
lock
jg
push
or
loopne
xor
push
xor
push
push
adc
cmp
jge
cmp
jle
lods
pop
mov
repnz
mov
xchg
call
inc
dec
xor
sbb
mov
punpckhwd
xor
push
adc
xor
shr
mov
inc
push
shl
mov
lea
fiadd
or
xchg
fist
inc
pop
das
mov
xchg
and
sub
add
out
pop
jns
xor
fmul
cmp
jo
cmp
inc
sbb
pop
(bad)
jbe
sbb
push
add
clc
jl
cmp
nop
call
sbb
inc
push
dec
mov
cmc
inc
les
aas
adc
cld
cmp
jle
pop
or
push
sub
mov
test
push
cmps
ins
ins
mov
(bad)
pop
or
ror
or
adc
shl
ffreep
dec
cmps
and
and
mov
jle
mov
add
lods
pushf
scas
jae
add
jmp
and
les
rol
int3
je
sti
mov
mov
xor
nop
xchg
and
mov
stos
shr
es
xchg
sub
dec
add
jmp
or
push
adc
mov
sbb
lahf
bound
jnp
add
mov
push
les
cmps
cmps
clc
hlt
xor
xchg
sub
fiadd
push
faddp
cmp
sub
retf
xor
mov
sbb
and
push
les
lds
mov
or
xchg
leave
jmp
clc
mov
mov
lea
xchg
sub
not
sbb
sbb
not
inc
ret
lods
cli
clc
sets
dec
adc
rcr
cli
sub
mov
mov
lds
cmp
fimul
repnz
sub
pop
adc
push
mov
push
mov
and
shl
add
popf
xchg
xor
dec
ror
faddp
mov
pop
ffreep
mov
aad
inc
iret
pop
push
adc
jecxz
push
pop
sbb
(bad)
cmps
mov
sar
mov
or
cli
dec
add
ret
dec
mov
adc
cmp
int
jae
frstor
(bad)
sbb
add
jmp
mov
pusha
rcl
(bad)
push
test
inc
aaa
or
idiv
aas
adc
fist
je
or
repnz
cmp
jae
mov
inc
or
mov
movs
adc
ret
lods
sub
into
xor
cmp
sub
sub
add
mov
xchg
dec
and
add
add
iret
ja
lods
or
jo
dec
mov
pop
pop
add
fiadd
push
xchg
out
lods
clc
es
and
syscall
retf
jnp
popf
or
push
xor
or
dec
or
data16
add
fs
hlt
mov
leave
cdq
jb
cs
test
dec
push
in
and
inc
sbb
or
movs
mov
les
lods
movs
jge
mov
call
pop
je
push
cmp
fmul
repz
scas
dec
push
dec
pop
pop
push
push
fcom
mov
outs
bound
jl
and
add
and
into
cs
or
adc
push
mov
and
cmp
popa
inc
sahf
or
movs
dec
push
push
sub
icebp
add
cmp
jo
(bad)
popa
jg
in
xchg
mov
sub
pop
mov
cdq
aam
mov
cld
repz
or
mov
mov
pop
(bad)
inc
add
mov
dec
iret
xlat
sbb
sbb
pop
sbb
sbb
dec
cdq
sbb
xor
xchg
xor
jmp
sub
js
scas
mov
add
ins
add
mov
and
icebp
push
jne
xor
stc
pcmpeqb
or
adc
data16
or
pop
push
jne
cmp
push
out
push
daa
ret
cmp
or
sub
add
dec
xor
adc
sahf
retf
jae
adc
xchg
out
pop
xor
pop
sbb
xor
fnstsw
adc
sbb
sub
loopne
and
mov
inc
pusha
cmp
daa
or
mov
mov
lods
sbb
mov
mov
and
out
or
xor
push
jmp
enter
xor
inc
cdq
std
jmp
rep
stos
lea
mov
jnp
mov
inc
sbb
ja
enter
aaa
xchg
outs
das
popa
cwde
pop
push
cli
push
xor
fld
icebp
inc
cmp
jb
rcl
inc
aas
inc
cmp
sti
cmp
push
pmullw
rep
movs
push
test
(bad)
fild
mov
movs
mov
mov
mov
pop
adc
add
adc
cmp
push
fcom
inc
call
je
sub
fcom
push
lock
rol
(bad)
in
xchg
dec
lods
(bad)
fsubrp
sbb
or
jne
jnp
stos
or
test
xchg
sub
repnz
sbb
jmp
push
jo
int
and
aam
inc
mov
sbb
inc
shr
test
lds
xchg
push
jo
xor
pop
aaa
fimul
leave
sbb
out
xor
push
and
adc
add
test
mov
push
movs
inc
lods
jl
mov
jp
mov
dec
xchg
cmp
dec
xchg
jle
xor
push
mov
cmp
out
pushf
xchg
in
dec
pop
mov
adc
fisttp
sbb
and
int
mov
or
add
aam
adc
mov
mov
mov
lea
cdq
not
fnsave
jle
inc
cmp
pop
icebp
iret
and
jge
mov
clc
mov
push
inc
js
inc
loopne
pop
psubb
mov
pop
jle
(bad)
loopne
inc
sub
rol
dec
jne
mov
ds
mov
mov
pop
ins
outs
popf
xor
fbld
xor
in
mov
nop
sub
in
fmul
jge
repnz
imul
or
add
cdq
mul
sbb
xor
inc
cli
out
movs
mov
ins
call
nop
xor
sbb
cli
add
call
adc
lea
and
pop
sub
ret
or
ss
add
push
adc
out
(bad)
push
or
cs
imul
dec
jecxz
jge
call
or
loop
ja
or
xchg
lea
push
test
or
add
hlt
mov
or
es
push
sar
inc
xor
test
pop
scas
cmps
or
jp
lods
push
add
lods
sbb
mov
fcomp
call
rdpmc
dec
inc
je
push
push
lock
mov
call
mov
or
ret
push
push
mov
gs
mov
inc
cwde
xor
xor
imul
in
add
pop
xor
pop
jle
and
lea
(bad)
cmp
or
sbb
add
cmp
in
jmp
rcl
add
push
lods
adc
test
add
in
rcl
in
fwait
pop
in
mov
fiadd
in
ja
(bad)
xor
aad
mov
shl
out
or
xchg
loopne
adc
push
and
mov
outs
pop
xor
scas
test
mov
int
ja
nop
mov
mov
je
dec
aam
mov
call
lods
dec
pop
mov
mov
sbb
adc
test
adc
fcmovnb
jb
ds
(bad)
jne
sbb
jb
jbe
mov
add
pslld
cs
clc
clc
push
push
add
fs
jnp
js
dec
rcl
test
les
sbb
push
in
test
inc
sub
mov
out
inc
push
add
jle
(bad)
push
push
enter
inc
or
mov
adc
cmp
mov
imul
test
xor
je
add
dec
cmp
push
les
xchg
pop
mov
je
mov
or
push
add
dec
push
add
jne
adc
and
jbe
shl
mov
clc
sbb
adc
adc
dec
xor
xor
pop
xlat
(bad)
out
arpl
xlat
lea
cmps
test
xchg
es
cmps
push
mov
movs
push
sbb
inc
xor
loop
dec
cmp
xlat
xor
(bad)
loopne
addr16
mov
and
pushf
mov
cmp
inc
pop
pop
mov
pop
sbb
retf
sub
inc
push
sub
cwde
fst
aas
adc
mov
in
cmp
lea
das
jns
cmp
jp
push
and
xor
mov
adc
add
fucomi
jl
rol
loopne
test
test
es
pop
push
push
sar
push
adc
mov
adc
sti
ror
test
mov
ss
in
or
ds
mov
pop
pusha
test
in
pop
pop
jp
icebp
int
in
mov
dec
inc
je
push
add
inc
pop
adc
push
and
push
xor
xor
mov
icebp
xor
(bad)
mov
mov
sbb
cmp
sub
rol
cmp
jb
ror
jmp
jle
add
inc
inc
imul
jnp
mov
(bad)
sti
sub
cmp
sub
sbb
inc
adc
mov
xchg
sbb
dec
dec
lods
and
test
dec
inc
jns
and
or
cs
addr16
add
dec
dec
adc
(bad)
das
mov
fidivr
cmp
(bad)
jle
lahf
rol
ds
rcl
jo
cmp
aas
rcl
jne
xor
mov
aam
and
fisttp
rcr
add
fmul
jo
xchg
add
jo
and
outs
sbb
sahf
outs
cmp
arpl
cmp
pop
arpl
fld
jns
mov
xchg
push
adc
outs
xchg
mov
push
outs
adc
xor
add
scas
mov
lahf
cmp
outs
add
repz
fs
push
int3
mov
push
adc
mov
mov
sbb
rsqrtps
jge
push
push
rcl
jl
into
fiadd
scas
lea
inc
scas
int
sbb
push
xchg
mov
push
lea
mov
adc
adc
jl
loopne
ins
xor
mov
jnp
push
sbb
test
ss
xchg
add
das
ins
or
pop
adc
jno
or
and
add
xor
retf
mov
push
ds
div
add
call
jp
ror
jb
xor
push
ins
sbb
or
sub
not
into
or
xchg
icebp
test
jne
inc
aam
cmp
adc
dec
or
sub
xlat
mov
rol
cmp
callw
mov
popa
xor
je
cmp
or
push
push
cmps
(bad)
aam
or
bound
push
add
es
push
imul
jno
adc
jae
pusha
sub
pop
aas
je
inc
xchg
xor
or
add
push
push
and
std
or
fistp
or
ror
add
lods
ins
imul
and
out
jg
mov
or
gs
lea
ds
mov
mov
sbb
cmps
adc
sub
cmp
dec
adc
daa
mov
data16
and
pushf
push
or
pop
or
jnp
add
jnp
add
cmc
cs
sti
and
imul
pop
fs
pop
(bad)
mov
int3
push
es
ss
jl
jne
sbb
or
mov
enter
adc
sti
or
cmps
adc
or
cmp
mov
mov
rcl
(bad)
add
jmp
inc
jae
or
neg
mov
jne
popa
mov
mov
jno
cld
js
pop
mov
sbb
mov
mov
mov
(bad)
call
cld
inc
daa
adc
es
push
jl
push
add
les
push
shl
xchg
sbb
jne
pop
dec
mov
adc
xor
sub
pop
inc
jb
clc
aaa
mov
pop
gs
ret
or
and
cld
test
popa
dec
pop
dec
aas
add
ins
jecxz
fcom
addr16
add
cmp
mov
mov
les
inc
push
mov
mov
jl
scas
jo
mov
es
les
xacquire
test
stos
mov
test
test
ret
ror
and
neg
xchg
sub
dec
add
push
call
push
xchg
rol
lea
push
stos
add
sub
jecxz
mov
stc
or
add
loopne
enter
test
push
cld
je
nop
mov
je
fistp
jne
(bad)
push
push
push
push
(bad)
and
dec
pop
pusha
test
push
cmp
les
inc
inc
fcomp
jb
mov
inc
inc
push
cmp
lock
cmp
pop
sub
cmp
in
mov
mov
les
leave
pop
mov
ins
retf
mov
les
dec
and
mov
xor
loopne
adc
push
push
sbb
pop
dec
mov
dec
xor
outs
js
movs
cdq
in
add
push
lahf
shr
cmp
pop
inc
int3
adc
shl
sub
pushf
pusha
clc
aam
xchg
lea
xchg
push
push
stos
mov
call
ds
or
xor
push
cmp
shl
sbb
sbb
int3
mov
mov
aaa
xor
into
je
aam
push
push
ja
sbb
aam
push
push
push
or
adc
mov
and
loopne
xor
loop
test
and
sbb
mov
xor
sahf
cmp
mov
and
pop
(bad)
dec
hlt
dec
in
ret
jle
mov
adc
lea
add
or
test
ror
mov
jge
add
pushf
inc
or
dec
sub
test
fchs
dec
cmc
(bad)
fadd
pop
loope
pop
mov
and
stos
popf
les
xor
dec
jecxz
xchg
mov
pusha
stos
push
mov
test
cli
and
inc
scas
adc
pop
inc
stos
jae
or
xchg
jp
fist
add
xlat
or
ins
add
xchg
xor
mov
and
(bad)
mov
int3
(bad)
retf
repz
mov
jg
add
imul
mov
out
ins
lahf
aam
out
cs
repz
pusha
pop
mov
jns
outs
pusha
pop
jne
sahf
data16
pop
sahf
repnz
mov
lods
sbb
pop
sahf
pop
mov
pop
adc
or
loop
lea
pop
arpl
dec
cld
add
adc
fld
stc
jp
mov
add
dec
lods
jmp
jb
or
or
inc
mov
add
mov
dec
nop
push
arpl
test
and
adc
or
dec
je
lds
pop
pop
or
popa
ins
sbb
pop
das
cdq
std
lock
xlat
fwait
aam
cmp
add
mov
inc
pushf
mov
mov
mov
mov
jmp
scas
xchg
out
mov
mov
mov
shr
or
loopne
sub
pop
inc
cmp
pop
(bad)
fistp
popa
mov
lea
jne
dec
push
pop
push
or
js
shufps
cmps
add
add
add
add
adc
int3
rol
adc
data16
std
(bad)
sub
iret
sbb
xchg
add
and
test
gs
or
jmp
add
and
cmp
add
sbb
mov
sub
push
mov
movs
and
add
sub
jo
fs
push
fild
stc
pop
fiadd
cmp
push
(bad)
sar
push
add
fmul
pop
mov
mov
dec
mov
push
ja
xchg
xchg
push
dec
repz
pop
pop
dec
sub
loopne
inc
or
test
jecxz
or
dec
pmullw
add
je
push
mov
stos
inc
out
xchg
mov
dec
ins
and
push
mov
cmp
loope
or
add
test
cdq
mov
cmp
jg
sub
leave
adc
xor
mov
xchg
or
jmp
ror
(bad)
and
adc
push
sub
sub
mov
add
sub
dec
xlat
xlat
pop
aaa
aam
lock
shl
push
fcmovnb
xchg
or
xor
fist
adc
add
inc
mov
fistp
cmp
cs
ds
call
je
xchg
push
add
(bad)
sar
push
(bad)
adc
adc
inc
lock
test
and
xor
cmc
shr
rol
add
fbstp
xor
mov
sub
pop
movs
push
add
push
or
dec
rol
cwde
push
push
clc
imul
(bad)
push
scas
pop
sub
cli
cs
stc
jmp
fistp
ret
dec
aam
jmp
cmp
push
sub
and
ins
bound
sub
das
push
pop
pop
inc
and
cmp
and
pop
sub
es
lods
add
ror
mov
push
add
xchg
nop
popa
and
mov
fcmovbe
bnd
lahf
les
in
pop
adc
xchg
dec
push
cdq
cdq
or
retf
push
fiadd
push
(bad)
mul
jo
nop
inc
pop
add
or
loope
add
or
mov
xchg
push
sub
in
dec
clc
adc
jmp
mov
(bad)
pop
pusha
ret
mov
adc
mov
mov
les
(bad)
xchg
push
movs
mov
add
xor
clc
sti
adc
mov
mov
add
movs
cdq
mov
sub
mov
and
das
push
lock
cmp
nop
int3
mov
xor
and
xchg
mov
inc
dec
pop
out
adc
add
or
nop
jp
fst
ss
add
and
mov
inc
ss
clc
retf
icebp
mov
in
push
pop
mov
es
js
mov
outs
or
push
xlat
in
jle
lds
pop
mov
push
dec
sbb
xchg
push
ins
mov
pop
retf
sub
and
xchg
mov
out
jb
ret
js
stos
add
ss
push
push
data16
cmp
pop
pop
fsub
aaa
fdiv
add
push
les
fcom
or
outs
push
cmp
das
push
test
mov
jmp
unpcklps
mov
or
cmp
sbb
xchg
cmp
pop
push
sbb
xor
ss
enter
or
out
ret
xchg
inc
pop
inc
cmp
jl
mov
ficomp
cmps
xor
push
fld
sub
cs
mov
sbb
adc
sub
sbb
adc
ret
mov
sbb
int
push
add
dec
pusha
ror
sub
push
dec
mov
mov
add
(bad)
xchg
mov
fs
pusha
lea
push
sbb
xor
xchg
rcr
adc
add
repz
xchg
(bad)
pop
icebp
adc
mov
dec
adc
loop
in
inc
nop
mov
or
and
fldenv
add
mov
pop
shr
sub
js
jl
dec
sbb
out
jle
or
int
add
(bad)
and
sub
inc
or
pop
dec
sub
je
push
pop
or
or
call
sbb
js
xor
mov
leave
cmps
les
and
mov
or
cmps
cmp
dec
xchg
clc
adc
pop
push
push
xchg
repz
jl
mov
mov
xchg
add
dec
or
add
test
nop
and
add
and
xchg
push
hlt
aad
loopne
je
push
jl
mov
mov
add
xor
mov
mov
pop
dec
cmp
pop
mov
xchg
cmc
or
mov
ret
jp
or
(bad)
movs
ja
push
push
shr
shl
push
adc
xlat
adc
push
inc
test
adc
aaa
sbb
adc
adc
push
pop
and
sbb
les
pop
inc
cdq
add
outs
mov
adc
je
int
adc
aaa
and
push
sub
sub
outs
inc
jecxz
mov
sub
shl
push
cwde
mov
add
test
sar
push
sub
or
int3
rcl
int
daa
sub
cli
neg
mov
or
ror
inc
push
dec
push
push
dec
mov
mov
dec
cld
push
add
popf
sbb
push
xchg
loope
div
sub
cs
add
(bad)
xlat
push
and
xor
fucompp
movs
jmp
mov
add
xchg
loopne
pop
push
mov
pop
ret
sub
push
mov
iret
jmp
and
adc
retf
and
leave
nop
arpl
in
in
xor
lods
sbb
pop
dec
mov
dec
mov
ins
pop
(bad)
movaps
mov
retf
icebp
push
pop
stos
or
ret
jne
mov
mov
cmp
adc
and
push
xor
into
push
inc
pusha
jnp
push
mov
pop
(bad)
mov
cmp
and
mov
call
addr16
mov
test
loopne
adc
push
rol
xchg
jp
push
shl
shr
std
or
add
jge
jg
inc
push
(bad)
int
dec
add
fisttp
adc
outs
push
or
jg
imul
int
pop
fadd
mov
lock
je
mov
push
cmp
and
add
jo
mov
adc
jl
fcom
cmp
jl
fadd
outs
pusha
jne
sbb
mov
mov
mov
hlt
movs
cmc
mov
and
cmp
push
ror
sbb
xchg
inc
scas
inc
adc
jmp
mov
daa
add
dec
addr16
loopne
lock
or
(bad)
ds
lea
mov
stos
movs
hlt
push
imul
pop
clc
ret
aam
pusha
or
adc
pop
je
pushf
daa
or
ror
arpl
cmp
int3
aaa
mov
and
mov
xchg
xor
mov
loopne
icebp
(bad)
pop
fstp
mov
adc
jne
or
jnp
and
xchg
pop
push
push
add
jae
mov
test
scas
jbe
or
add
retf
pop
pop
out
into
push
sbb
test
call
bound
mov
push
push
dec
rcl
loope
push
or
adc
pop
mov
cmc
pop
leave
and
jne
cmp
movq
outs
pusha
push
test
add
jge
cwde
xchg
add
movs
inc
sbb
sub
or
add
or
inc
aas
cmp
sti
mov
popa
mov
sbb
lahf
mov
pop
sub
push
mov
xor
call
or
or
pop
push
mov
sub
add
addr16
repz
adc
sub
ss
fimul
dec
cli
mov
ins
hlt
mov
xchg
je
mov
mov
lea
dec
push
pop
(bad)
sti
or
push
push
push
repz
xchg
mov
loop
dec
call
out
add
push
cmp
pop
adc
adc
add
test
dec
add
push
push
add
mov
test
add
or
mov
inc
push
dec
push
cdq
and
adc
sbb
sub
jl
jne
cli
inc
sub
jp
cmp
adc
pop
push
aam
sub
inc
inc
sbb
fdiv
mov
dec
jae
mov
jmp
lds
test
add
cmps
add
xchg
inc
ret
push
clc
jbe
pop
mov
mov
sbb
add
mov
sbb
push
inc
inc
mov
inc
push
push
into
es
jnp
push
pop
mov
ja
pop
pop
mov
into
adc
cmps
ds
add
loopne
inc
pop
xchg
mov
and
adc
lahf
movs
pop
add
ror
mov
or
inc
mov
jne
xchg
adc
cmp
aad
test
mov
je
dec
adc
push
idiv
mov
(bad)
ffreep
push
movs
mov
cmp
jle
inc
adc
cmp
lods
mov
inc
add
push
pop
dec
repz
jno
dec
lods
xchg
inc
cmp
and
ret
inc
adc
jne
and
ret
test
and
aam
or
dec
jne
in
pop
jle
cs
jmp
xchg
inc
outs
push
outs
and
or
hlt
jnp
in
out
shr
in
dec
xor
fistp
adc
sub
leave
lea
adc
xchg
scas
jle
add
lods
add
lds
sbb
sub
push
cmp
das
mov
add
jmp
sbb
ret
mov
pop
sbb
cmp
je
push
jp
pop
mov
and
std
hlt
push
movhps
pop
mov
pop
pop
inc
mov
and
jo
fisttp
cmp
inc
sbb
mov
in
icebp
or
adc
sbb
popf
cmps
add
jno
test
sbb
add
pop
test
add
push
outs
mov
xchg
pop
retf
aad
into
mov
inc
pop
pop
or
imul
jbe
dec
ret
jmp
push
pop
clc
outs
jbe
mov
aas
inc
std
retf
cmp
xchg
les
dec
pop
xor
fadd
mov
add
or
adc
push
push
push
outs
adc
jno
je
sub
stos
add
mov
sbb
addr16
into
rol
sub
pop
fs
(bad)
stos
push
fld
push
fnstcw
sti
mov
or
add
dec
xor
xor
movs
sbb
pop
arpl
enter
mov
mov
or
cmp
adc
inc
call
sbb
mov
js
jne
push
adc
inc
cmp
lds
div
xor
sbb
ins
aam
sub
data16
ja
push
sbb
ins
js
out
mov
pop
pusha
fs
or
ds
lock
push
pop
jg
adc
push
push
push
aam
je
repnz
out
cmps
mov
push
push
push
pusha
add
add
fmul
stos
repnz
or
loop
push
lahf
ss
test
dec
adc
data16
ins
cwde
lods
cmp
add
or
dec
mov
rcl
inc
cmp
and
adc
aad
pop
out
test
jg
inc
xor
jo
dec
shr
ins
cli
or
lea
imul
daa
xor
jae
xor
or
pop
add
mov
rcl
xchg
dec
or
rcr
pop
jg
in
jne
mov
push
aas
dec
arpl
std
pop
outs
inc
out
pop
out
loop
fwait
mov
inc
mov
push
test
mov
gs
inc
rcr
push
fsub
mov
dec
call
retf
fdivr
loope
mov
dec
push
shl
fwait
inc
jl
dec
jle
push
or
outs
push
fadd
mov
aaa
sbb
inc
fisubr
mov
fiadd
loopne
push
ror
ror
mov
mov
dec
loop
mov
mov
pop
push
nop
add
pop
loope
dec
popa
test
ret
or
mov
xor
inc
cmp
xor
push
inc
mov
pop
pop
sub
xor
cli
rol
dec
pop
push
inc
cmp
adc
loopne
leave
sbb
sub
sbb
cmp
(bad)
fld
leave
out
xchg
jmp
adc
neg
cmp
jge
mov
or
pop
push
push
(bad)
fdivr
lahf
into
jbe
sahf
pop
dec
jmp
jge
neg
cmp
pusha
(bad)
(bad)
push
outs
dec
in
mov
add
(bad)
pushf
push
cmp
inc
test
sahf
xchg
inc
les
jne
jl
pusha
int
ret
push
push
pop
jmp
and
loope
imul
addr16
xor
or
jbe
dec
add
xor
stos
xchg
push
or
lock
sub
push
cdq
cmp
and
enter
int3
jne
outs
adc
(bad)
(bad)
sub
add
out
and
test
pusha
dec
cmc
sub
inc
adc
cld
xor
pop
iret
cs
dec
scas
inc
mov
test
or
lds
into
js
test
xor
add
sub
es
nop
cdq
or
push
add
jno
mov
ds
bsf
inc
rcl
push
ja
call
sahf
mov
dec
dec
fnstenv
or
or
aam
mov
jecxz
mov
rcr
push
pop
shl
mov
xor
adc
cmps
das
into
push
xor
push
add
outs
sahf
rol
cmp
popa
hlt
mov
push
sbb
add
and
out
mov
mov
xor
mov
lods
inc
sbb
in
xchg
pop
add
push
sbb
ret
mov
xchg
add
test
mov
pop
xchg
ins
leave
call
and
xor
add
push
movs
dec
jg
inc
test
sbb
sbb
repnz
retf
adc
fs
out
xor
test
push
sbb
hlt
jo
sub
adc
lods
stos
adc
neg
jo
xchg
xchg
sub
enter
jb
dec
push
and
js
jmp
inc
add
or
test
mov
sbb
jno
push
mov
dec
sbb
ret
xchg
mov
sub
or
xor
jg
mov
rcl
cld
ins
xchg
sahf
inc
push
pop
jle
push
push
push
adc
iret
cmps
ss
cmps
jg
lea
jmp
fstp
pop
dec
loop
adc
or
cdq
test
xor
push
and
xor
rcr
jo
cmp
sub
clc
pop
int
lahf
or
dec
and
push
setp
and
lahf
enter
call
cmps
adc
add
mov
xor
push
mov
adc
std
mov
rol
adc
adc
mov
div
add
mov
push
or
jnp
mov
test
pop
dec
and
lea
jnp
lds
dec
add
mov
pushf
sub
(bad)
cmp
inc
mov
jae
pop
xor
xor
push
jp
mov
inc
pusha
or
inc
int3
not
fimul
ds
pop
in
and
cwde
pushf
mov
mov
add
mov
inc
ins
js
pop
inc
loop
pusha
and
outs
push
lahf
inc
pop
cwde
jbe
or
inc
call
movs
stos
std
add
and
pop
adc
rol
push
xor
ret
xor
imul
dec
pop
sub
push
xchg
ins
jns
jo
xchg
mov
jno
dec
lea
fldenv
cmp
je
mov
cmp
clc
sub
mov
inc
ret
or
das
mov
into
popf
idiv
lock
fst
add
adc
pop
icebp
mov
mov
mov
and
ins
jg
or
xchg
int
out
pusha
pop
cmc
mov
dec
jo
in
or
mov
(bad)
repnz
inc
je
rol
pop
pop
fdivr
mov
ret
jno
jg
cwde
fs
outs
lock
or
ret
jl
imul
je
sbb
inc
jl
jns
clc
and
jg
jle
push
outs
(bad)
dec
xor
add
inc
ja
popf
mov
(bad)
or
cmp
jle
mov
cmp
push
dec
add
mov
push
push
add
jmp
retf
loopne
jmp
jle
mov
adc
jl
jmp
pop
pop
scas
sbb
retf
adc
sub
retf
mov
push
pusha
jl
or
addr16
inc
push
fild
jne
inc
rcr
sbb
sbb
add
fcomp
sbb
inc
sbb
ins
adc
aad
fsub
in
push
jmp
adc
add
adc
mov
push
pusha
jl
mov
mov
xchg
push
add
jp
sub
xchg
hlt
adc
push
dec
ja
jecxz
xor
pop
and
aam
jno
xor
sbb
mov
inc
(bad)
mov
imul
lea
popf
dec
fld
fmul
dec
shr
inc
addr16
add
icebp
adc
test
or
jl
sub
inc
fmul
mov
shr
mov
jae
push
sub
adc
(bad)
xchg
pop
enter
fcom
push
(bad)
out
add
cmp
clc
add
push
jo
inc
add
sbb
add
rcr
movs
addr16
pushf
push
jnp
or
adc
lock
repnz
jb
mov
mov
mov
cmp
das
sbb
lock
bnd
push
adc
inc
push
mov
jmp
cmps
adc
and
jo
fild
mov
fist
fadd
loope
lds
jmp
ja
mov
xor
and
test
add
sbb
push
ret
mov
mov
outs
mov
jle
add
xor
add
jo
xor
dec
push
lea
adc
push
je
mov
inc
xchg
adc
es
clc
jl
leave
sub
inc
add
inc
dec
inc
enter
push
xchg
cmp
or
adc
lock
stos
test
retf
pusha
sub
jmp
adc
push
neg
loopne
xor
mov
or
cmp
popa
xor
cmps
jbe
mov
and
ror
dec
add
data16
mov
jne
call
jmp
inc
nop
or
sbb
dec
mov
mov
sbb
add
div
fxch
or
inc
xchg
(bad)
mov
cs
xor
or
cdq
mov
stc
inc
nop
jl
les
push
test
es
xor
jl
mov
sub
ret
retf
mov
stos
cmp
mov
dec
push
(bad)
loope
xor
pop
(bad)
push
sbb
dec
lock
sbb
(bad)
jle
ret
cmp
pop
pop
fisub
(bad)
push
in
push
mov
lahf
leave
mov
inc
cmp
push
cmp
lea
push
idiv
inc
ret
inc
imul
pop
lea
sahf
inc
and
xor
dec
cmp
add
or
cdq
cld
test
rcr
inc
loop
mov
adc
and
je
adc
mov
adc
add
add
add
movs
xor
fisubr
hlt
jnp
fcmovbe
fcom
into
jle
or
fmul
aad
ss
in
adc
or
xchg
cmp
sub
les
cmp
fs
xor
or
or
lock
loopne
xlat
data16
and
pusha
and
jb
and
leave
and
ret
leave
dec
and
and
jecxz
nop
fsubr
fsubr
ins
adc
shl
push
adc
sbb
outs
mov
sbb
fwait
mov
test
outs
pusha
nop
dec
pushf
xchg
dec
retf
sub
xor
push
lahf
ins
mov
inc
sub
adc
jbe
int3
add
cmp
cmp
adc
add
push
add
call
jmp
cld
adc
rol
enter
stos
lock
xchg
stos
test
dec
mov
add
sbb
or
push
and
or
adc
shr
add
fldl2e
add
add
pop
inc
dec
mov
cmc
(bad)
stc
call
jmp
fmul
push
xor
sbb
push
cmp
mov
add
add
jp
daa
cwd
and
jmp
xor
jbe
xor
and
add
js
pop
arpl
push
test
lods
or
xor
jge
jnp
add
mov
fld
mov
out
jg
inc
nop
adc
pop
or
jl
push
push
pop
nop
scas
jle
dec
inc
repz
sbb
rol
cli
or
mov
add
dec
or
mov
in
sbb
push
sbb
js
or
js
ret
je
pop
ret
lock
jg
ror
mov
add
jecxz
dec
or
test
lea
push
shr
cmp
sbb
test
mov
dec
fstp
sub
push
call
call
imul
xchg
pop
pusha
add
sbb
popa
dec
lock
sti
inc
js
pushf
pop
pusha
cs
shl
es
push
aaa
or
mov
js
push
ret
ret
xor
rcr
inc
mov
sbb
pop
or
add
push
retf
jbe
pop
mov
popa
dec
adc
and
add
push
mov
test
lods
add
cmp
lds
mov
push
jo
sbb
and
daa
xchg
sbb
pop
xor
cmp
mov
xchg
std
add
mov
stc
sub
inc
add
test
sub
mov
arpl
retf
push
push
xor
mov
adc
retf
xor
daa
or
pop
or
mov
mov
and
lea
cmps
fadd
inc
inc
(bad)
push
jo
shr
jmp
ds
mov
or
outs
ret
aam
add
sub
clc
aam
pop
mov
cmc
shl
cmps
sbb
clc
mov
pop
and
sbb
(bad)
cmp
iret
cmp
(bad)
mov
mov
sbb
add
fisttp
ret
stos
jnp
mov
(bad)
ror
xchg
sub
fstp
cld
xor
mov
mov
pop
sub
mov
xor
sbb
adc
test
adc
enter
add
(bad)
outs
and
xor
inc
ret
dec
sub
sub
xor
test
push
lods
std
adc
inc
adc
pop
clc
inc
dec
dec
sub
pop
aaa
add
mov
or
loopne
js
cmc
and
test
lea
lods
mov
test
int
adc
nop
inc
push
call
mov
repz
aaa
les
sbb
mov
xchg
scas
lea
scas
dec
push
cli
mov
cld
neg
xchg
in
sub
push
mov
and
adc
imul
pop
mov
rol
and
jecxz
cmp
dec
lahf
rol
inc
adc
ins
jmp
repz
inc
jae
stc
fidiv
push
adc
push
inc
and
jne
fadd
adc
js
sub
imul
jecxz
jb
dec
aam
ins
(bad)
jge
dec
test
fisub
jl
ror
jo
or
sbb
sub
add
imul
jo
add
nop
lods
mov
or
push
add
or
add
cmp
ret
add
or
xor
ret
bound
push
jae
rol
adc
xor
add
mov
mov
xor
mov
add
add
and
mov
and
jno
rcl
dec
inc
push
ret
loope
leave
push
enter
sahf
add
or
adc
mov
push
push
ja
je
and
and
sub
cmp
add
mov
sbb
adc
xchg
inc
in
push
xor
pop
or
push
loopne
movs
out
aas
dec
and
iret
push
ja
pop
xchg
(bad)
dec
add
mov
add
xor
mov
std
dec
adc
add
mov
push
mov
add
pop
ret
(bad)
(bad)
xlat
adc
sub
clc
or
sar
dec
lds
daa
cmc
bound
mov
mov
mov
dec
jne
outs
mov
xor
call
les
fbld
test
push
jne
and
ret
mov
sbb
adc
or
ret
cmp
adc
adc
or
or
call
mov
pop
push
add
fild
dec
mov
scas
ret
rep
das
jmp
add
inc
lock
mul
sub
add
dec
pop
cmc
aaa
adc
inc
add
and
cmp
jmp
(bad)
popa
or
or
fistp
xchg
cmp
add
pop
or
add
sub
and
fs
push
xchg
lock
pop
jbe
and
jle
dec
rol
jmp
test
ror
and
test
test
pusha
sbb
mov
scas
inc
add
push
je
push
(bad)
pop
and
xor
cs
lds
inc
mov
and
or
ins
xor
sub
aaa
das
sub
in
push
outs
add
sbb
jle
inc
pop
pop
movs
push
pusha
dec
sahf
xchg
ja
xchg
lods
push
(bad)
stos
aas
ja
mov
jbe
ins
xchg
jge
add
scas
push
ret
das
jbe
or
ds
mov
ins
xor
cmp
xlat
sbb
cmp
xor
and
sub
jmp
popa
(bad)
das
pop
sar
in
mov
push
dec
xor
cmp
pop
dec
or
popa
loope
rcl
fdivrp
imul
mov
and
cs
cmp
pop
xor
lahf
fidiv
xor
push
sub
lods
adc
lds
push
pop
add
jmp
(bad)
cmp
imul
bound
cmps
or
mov
lea
sub
push
sub
or
or
movs
imul
add
in
rcl
mov
jg
inc
arpl
add
mov
push
clc
adc
ds
push
xchg
xchg
rcr
clc
push
jmp
cmp
cmp
arpl
pop
sbb
out
mov
or
clc
push
or
frstor
fwait
add
or
test
adc
loopne
test
in
sbb
scas
push
arpl
add
push
adc
adc
mov
push
pop
push
and
int3
mov
and
setne
dec
aas
sub
push
(bad)
js
push
add
into
adc
pop
xchg
pop
fsub
push
out
(bad)
push
das
pop
mov
arpl
cmp
add
adc
mov
or
sub
sub
dec
push
mov
sbb
sub
sub
repnz
fst
pop
cmp
cmp
inc
push
and
push
dec
adc
add
sub
pop
test
pop
mov
in
and
daa
cmp
das
fwait
repnz
loopne
push
(bad)
mov
inc
clc
add
add
cmp
ret
push
dec
cmp
push
imul
ins
and
push
and
dec
mov
add
pop
mov
jl
xor
cmp
sub
mov
xor
adc
inc
sbb
adc
test
jae
mov
in
push
sub
das
cmp
sub
and
in
mov
lds
xor
adc
cmps
lods
xor
mov
jno
xchg
adc
and
(bad)
repnz
and
adc
dec
arpl
inc
mov
dec
mov
push
and
mov
(bad)
out
push
adc
cmp
lods
data16
and
inc
out
push
push
jo
add
push
and
mov
push
ror
mov
or
mov
add
inc
jl
xor
push
adc
adc
rcl
xchg
push
loop
bound
add
mov
cli
ins
shr
push
fs
mov
jae
aad
ins
pop
add
ins
jae
xchg
jae
push
or
hlt
jb
xchg
sahf
sbb
jg
pop
nop
xchg
inc
sub
call
sbb
test
mov
sbb
pop
and
dec
cmp
sub
aas
push
sahf
jb
xor
aam
push
push
xchg
cmp
cmp
push
mov
cmova
push
push
push
inc
mov
mov
sub
push
push
jl
popf
or
pusha
cs
out
mov
test
or
push
test
and
adc
jge
jp
ss
stos
div
jp
jbe
add
pop
push
ds
xor
mov
add
xchg
jo
movs
xor
push
(bad)
and
xchg
lock
add
pop
and
adc
ins
inc
mov
xor
popf
add
mov
xchg
push
adc
inc
xor
iret
daa
inc
or
sbb
dec
in
rcl
pop
pop
xchg
jo
mov
mov
jne
ins
cwde
ret
inc
push
xor
in
pop
div
add
rcr
aam
inc
and
push
xor
test
sbb
frstor
dec
xor
clc
push
rcr
inc
bound
mov
adc
add
xlat
data16
sub
jmp
dec
retf
sbb
unpckhps
retf
sbb
xchg
sbb
shl
mov
mov
and
les
xchg
nop
call
ins
and
cmp
cmc
and
jp
push
push
add
add
ffree
nop
push
test
in
lods
es
adc
jb
dec
adc
(bad)
mov
cmp
add
sub
add
loopne
ja
js
dec
les
rcl
popf
push
call
dec
jmp
mov
sbb
or
mov
or
jle
lea
jmp
je
jne
aas
and
push
add
sbb
std
(bad)
sbb
in
dec
call
sub
or
adc
pop
pop
xor
mov
test
dec
cmp
sbb
add
mov
push
ss
mov
dec
lock
mov
push
fistp
inc
add
or
sbb
add
xor
(bad)
aam
adc
scas
pop
mov
lock
lea
adc
(bad)
sub
and
lahf
mov
loope
lds
popa
loope
jle
dec
sub
push
and
push
inc
jg
dec
push
leave
mov
mov
sub
adc
cmp
add
cs
out
inc
popa
ret
jmp
add
out
test
inc
and
aas
cmp
inc
jp
dec
ds
add
pop
(bad)
mov
pop
add
lahf
or
sbb
add
loope
or
inc
jne
jo
jne
mov
and
test
int
push
push
cmp
inc
or
ror
add
inc
add
push
(bad)
sbb
fdiv
cs
ficomp
sub
add
and
cmp
mov
stc
aaa
cmp
cmp
add
lahf
(bad)
or
add
bound
cmp
in
xchg
push
sbb
jne
push
or
dec
add
repnz
xchg
xchg
xchg
and
xor
or
pop
fwait
or
push
add
enter
inc
ret
mov
sar
jne
enter
push
adc
pusha
adc
aam
cmc
sbb
ds
xchg
jg
pusha
add
(bad)
jne
jle
sub
aas
mov
cdq
mov
aam
dec
mov
jg
fsubr
xor
lahf
test
out
mov
adc
or
sub
adc
(bad)
xchg
dec
ds
xor
cmp
mov
outs
xor
mov
jge
ret
pop
mov
loope
push
push
or
or
les
aas
push
out
aas
loop
xor
inc
loope
jb
dec
div
or
adc
dec
fild
shl
or
data16
int3
push
shl
adc
fisttp
iret
rcr
push
push
stos
sub
int3
push
push
ret
cmp
je
push
fwait
paddsb
cmp
fs
add
add
or
int3
mov
xchg
mov
push
fisubr
repnz
clc
jno
pop
movs
(bad)
or
sub
pop
mov
cli
jg
adc
sub
push
adc
sbb
mov
or
jne
add
mov
cmc
jmp
xor
out
sub
fcmovb
cmp
add
pop
sub
lods
add
pop
or
pusha
push
daa
xor
mov
inc
dec
and
test
xchg
cmp
pop
or
ds
dec
retf
mov
cli
clc
push
sub
mov
cmp
jg
add
(bad)
mov
push
push
data16
ret
mov
sbb
in
(bad)
push
mov
sbb
add
cs
pushf
test
push
clc
outs
test
cld
(bad)
cmp
jg
push
int3
cmp
je
jecxz
cdq
dec
std
(bad)
je
mov
or
rcl
call
cmp
add
sbb
sub
xchg
mov
adc
in
pop
aaa
push
int
and
jmp
cmp
(bad)
add
mov
mov
adc
mov
mov
pop
enter
rcl
push
or
add
fisubr
rcl
and
iret
jne
xor
fstp
sbb
xor
rcl
ror
pop
adc
enter
dec
sub
push
cli
scas
sbb
ins
pusha
sub
xchg
mov
out
xchg
mov
(bad)
std
inc
cli
xor
mov
or
call
lea
sub
mov
xchg
ret
sti
je
push
outs
pop
rcr
imul
imul
push
push
fcomp
push
dec
sbb
mov
test
cs
cmp
xchg
mov
add
cmp
pop
pop
out
inc
xchg
shl
mov
inc
test
inc
clc
xchg
jg
mov
dec
clc
clts
cmp
adc
std
cmp
jg
shl
push
sub
jae
mov
outs
and
cmp
add
jle
ja
test
and
push
sbb
sbb
xchg
outs
sbb
lock
loope
ret
loopne
pop
idiv
cmp
sbb
fisttp
add
fs
pop
retf
jmp
pop
push
add
fcom
cmp
sub
and
out
push
loop
movs
lods
movs
rcl
shl
aas
cmp
pop
pop
dec
test
jge
push
ret
xor
addr16
outs
or
inc
xchg
fidiv
add
jle
and
js
cmp
inc
mov
mov
shl
push
mov
mov
mov
xlat
cwde
test
sub
fs
or
not
or
mov
xchg
jo
cli
mov
push
sub
push
push
in
stos
es
and
call
retf
inc
stos
(bad)
inc
mov
lfs
rol
movs
sbb
mov
adc
pop
mov
push
dec
fucomip
mov
mov
rol
fmul
sbb
iret
adc
lods
je
data16
stos
jmp
pop
push
push
pop
or
xor
push
loop
or
mov
add
sti
mov
cmp
jge
dec
inc
add
sbb
mov
mov
jne
cmp
cmp
ss
adc
dec
cs
dec
jae
jae
clc
out
shl
jb
pop
mov
cmp
adc
(bad)
sbb
inc
enter
ror
popf
jmp
sub
sbb
rcl
xor
ror
or
push
and
jp
shr
adc
jmp
xchg
rcl
inc
add
adc
xlat
jo
jnp
dec
push
push
and
add
ret
call
mov
fcom
jp
or
push
jg
add
(bad)
je
push
dec
inc
js
xor
pop
inc
scas
sbb
xchg
lock
jae
je
mov
nop
arpl
push
add
and
and
test
shr
aas
lock
push
jbe
popa
or
mov
pop
daa
cmp
movs
or
jne
add
cld
dec
xchg
add
mov
ror
or
lock
in
and
inc
dec
and
dec
pop
inc
push
adc
and
inc
popa
sub
sbb
push
xchg
lods
push
and
fld
pushf
aas
ret
cmp
adc
push
jp
mov
sub
ins
push
or
cmc
cmp
xor
nop
js
jle
ret
adc
xchg
jo
sbb
mov
dec
pop
xchg
jge
inc
repz
inc
sbb
push
(bad)
pop
push
push
mov
std
sbb
sbb
push
xchg
jmp
dec
loop
push
inc
adc
cmp
sbb
call
push
pop
xor
rcl
xchg
daa
loopne
call
movs
call
xchg
add
mov
inc
mov
movs
inc
jl
call
retf
jnp
aam
pop
or
xchg
out
lock
pop
cmova
out
sbb
pop
addr16
mov
sub
lods
mov
jnp
sbb
xchg
fmul
ret
pop
cmp
pop
and
dec
mov
mov
mov
mov
sub
repnz
arpl
jb
stos
jnp
(bad)
and
cmp
inc
test
mov
fld
mov
sub
into
mov
ret
rcr
mov
imul
mov
add
jge
dec
jle
mov
ja
inc
mov
mov
push
mov
adc
push
add
adc
or
mov
dec
jne
scas
shl
test
dec
lea
jg
lods
inc
push
adc
sub
jo
and
sahf
adc
push
mov
inc
xor
inc
cmp
mov
sbb
rcr
cmp
nop
mov
gs
push
adc
data16
adc
inc
and
xchg
xor
imul
stos
pop
adc
and
push
sub
leave
inc
sub
mov
(bad)
call
ret
jae
xor
imul
lock
popa
fwait
inc
and
push
aas
jp
nop
jne
loopne
shl
(bad)
aas
lea
jle
mov
cmp
jbe
add
inc
lods
call
cmp
les
std
dec
and
adc
retf
and
sahf
out
or
jp
push
push
mov
jne
add
call
in
(bad)
fist
xor
and
popa
and
or
pop
sbb
fistp
or
add
test
xchg
mov
push
sub
hlt
test
rol
out
adc
nop
ds
cmps
mov
push
lods
push
mov
jmp
and
or
adc
sbb
adc
retf
xchg
jmp
mov
add
push
cdq
aam
ret
and
push
sub
out
popa
dec
or
ins
jge
pop
jge
mov
lea
ins
test
inc
and
mov
sbb
add
pop
push
push
cmps
jo
adc
retf
cmp
jnp
ins
pusha
or
pop
adc
push
sar
inc
scas
mov
dec
or
xor
lea
aaa
jno
push
dec
sar
inc
or
jo
js
jb
into
mov
jl
mov
push
add
mov
mov
dec
in
fcom
enter
and
mov
(bad)
jg
enter
pop
inc
xchg
shr
jno
aas
(bad)
nop
dec
enter
mov
int3
inc
inc
call
cmp
cs
pop
mov
mov
push
dec
das
sub
or
inc
ja
into
imul
pusha
adc
or
cmp
dec
test
popa
lods
dec
xchg
pop
mov
mov
mov
(bad)
into
xchg
pop
cmp
jmp
xlat
add
sbb
sub
xor
and
sub
call
push
cmp
imul
dec
add
push
mov
cmp
pusha
push
cmp
push
sub
mov
jmp
or
mov
and
push
jo
push
pop
aad
into
push
je
in
mov
sbb
sbb
adc
out
mov
xchg
mov
jb
adc
xchg
retf
out
mov
xchg
cwde
add
jb
aaa
out
add
retf
mov
clc
pop
adc
sub
adc
(bad)
pop
add
adc
sbb
mov
xchg
or
or
mov
clc
push
push
xor
mov
or
add
outs
pop
jne
or
jmp
adc
sbb
adc
or
or
imul
dec
jle
jae
lea
mov
push
cmp
jle
add
repnz
sbb
adc
loop
call
or
pop
ret
adc
mov
sub
sub
movs
pusha
ins
cmp
retf
pop
fprem
call
int
(bad)
aad
add
int
push
mov
sub
pushf
adc
push
fmul
mov
mov
jae
inc
dec
push
pop
adc
xchg
cwde
retf
inc
push
ins
sub
mov
imul
cmp
adc
cmp
jae
xor
push
mov
sub
and
push
cmp
nop
lahf
sbb
(bad)
mov
das
cmp
jae
mov
aam
sbb
push
lea
push
xor
mov
into
test
mov
add
and
xchg
pop
ins
xor
mov
mov
sbb
cmps
call
push
or
mov
cmp
sub
or
or
mov
or
sub
stc
and
or
jmp
and
jbe
sub
add
mov
xlat
sbb
add
aaa
(bad)
or
push
mov
jb
add
aam
sub
xchg
shr
test
jo
sbb
retf
ret
nop
pop
or
sbb
std
fs
lods
xor
mov
adc
or
gs
mov
fwait
push
fsub
sub
pop
sub
adc
mov
cmp
es
or
and
push
add
pop
inc
rcl
xchg
icebp
pop
test
neg
xchg
sbb
pop
or
cmp
shr
mov
mov
pop
mov
dec
outs
cmp
fwait
inc
outs
or
inc
and
aam
outs
inc
fild
adc
add
in
loopne
test
inc
cwde
add
and
ds
scas
push
push
mov
add
sbb
jle
jne
rcr
xlat
mov
mov
cwde
pop
and
xor
fsubr
adc
int3
push
mov
cmp
hlt
xchg
jno
push
test
sub
add
loop
jne
push
arpl
nop
fadd
push
pushf
jge
sbb
ss
loopne
je
push
into
pop
mov
mov
adc
inc
pushf
je
mov
add
dec
pushf
sar
inc
popa
xchg
jecxz
push
adc
mov
mov
mov
mov
outs
fstp
pop
or
dec
ret
fidivr
ins
sub
dec
retf
jne
add
pusha
mov
and
push
push
test
push
or
push
sbb
add
int3
shl
push
adc
pop
xor
lods
xchg
inc
xor
pop
int3
cmp
jb
mov
test
test
sbb
movs
mov
add
jmp
mov
xchg
popf
or
nop
xor
add
or
push
jge
pop
or
xchg
dec
jmp
cmp
ds
das
push
xor
xchg
jp
clc
in
xor
xchg
mov
test
sbb
movs
adc
je
and
xchg
or
push
mov
bound
sbb
cwde
jne
idiv
xchg
pop
or
ja
ss
je
cmp
or
dec
daa
and
sbb
test
es
mov
(bad)
push
and
(bad)
mov
loopne
dec
fs
shld
cli
jae
or
rol
push
rol
xchg
sub
xchg
mov
xchg
mov
icebp
bnd
fwait
mov
mov
and
loopne
js
les
pop
push
push
cdq
xchg
mov
sub
leave
cmp
lock
bound
sub
add
fwait
add
push
xor
sbb
jno
sbb
pop
jno
mov
inc
pop
ret
ror
inc
cmp
add
pop
jl
pop
es
aas
mov
adc
sub
or
add
sbb
pop
mov
ins
pop
out
(bad)
dec
and
mov
cmp
mov
sub
fist
add
pop
repnz
xchg
fisubr
xor
push
pusha
(bad)
jg
push
cmp
enter
cmp
je
scas
jle
js
adc
mov
mov
mov
scas
in
xor
in
mov
inc
add
dec
or
dec
push
or
lods
(bad)
sbb
lods
enter
pop
sub
test
in
cmp
mov
mov
mov
or
cmp
je
or
cdq
jmp
daa
lea
xchg
pop
arpl
xor
inc
ret
xchg
and
push
jle
movs
rol
mov
ja
xchg
mov
xor
adc
inc
dec
adc
rcl
mov
inc
or
dec
clc
inc
in
adc
(bad)
and
jmp
and
sbb
pop
adc
or
aaa
pop
fsub
call
fist
std
dec
adc
pop
bound
in
mov
inc
pop
pop
sbb
ss
(bad)
test
and
adc
cmp
ret
sahf
push
iret
add
in
bound
out
cmp
shl
or
test
jne
inc
pop
fbstp
xor
mov
mov
xchg
dec
mov
mov
js
icebp
add
enter
push
jne
adc
mov
sub
jle
xchg
movs
mov
sbb
push
push
je
mov
mov
mov
fwait
add
push
sub
lods
cmp
or
jae
mov
add
xor
adc
test
cmps
sub
push
add
div
inc
fstp
push
or
out
push
inc
mov
jae
test
jne
sub
lods
ret
pop
add
sahf
cld
cmp
add
cmp
sub
push
mov
pop
inc
ss
mov
jnp
pop
jne
or
inc
out
pop
add
pop
mov
xlat
cli
cmp
inc
(bad)
std
cmc
pop
push
je
cmp
ss
push
ins
or
or
or
or
xchg
outs
dec
or
xor
sbb
inc
shl
mov
mov
sbb
popa
xor
loop
sub
inc
sub
ss
or
jbe
aaa
inc
pusha
test
add
or
mov
ins
lea
push
add
xchg
and
add
pusha
mov
push
mov
push
dec
mov
jne
lds
or
psllw
call
jle
iret
pusha
ret
mov
loope
sbb
pop
push
push
sbb
jo
(bad)
lahf
xchg
xchg
loop
fild
cmp
add
jle
iret
push
push
inc
outs
push
enter
cmps
sbb
add
or
xor
inc
and
and
and
mov
int
jnp
pop
fcom
pop
or
add
pushf
push
dec
fdiv
call
inc
push
pop
loopne
pop
or
shr
in
and
lods
cs
sbb
int3
int3
mov
mov
dec
inc
mov
fmul
add
jle
das
push
lds
fst
xor
jge
xor
aad
retf
jnp
mov
jb
cs
or
hlt
sub
mov
or
addr16
adc
pop
inc
out
fwait
test
or
mov
add
aad
pop
or
fiadd
pop
sar
add
sub
mov
pusha
pop
cmp
cmp
jo
push
or
push
cmp
pop
mov
stc
xor
or
xchg
mov
fwait
mov
push
jbe
mov
and
inc
or
mov
cmp
push
pop
sub
das
push
xor
mov
loope
mov
ins
fisub
stc
add
(bad)
mov
cmp
fidivr
psubusb
(bad)
jnp
fadd
outs
jmp
cmp
cmps
jl
mov
inc
fadd
add
outs
mov
and
mov
xchg
or
test
push
dec
inc
mov
push
mov
dec
push
popf
xchg
cs
cwde
push
test
fild
adc
sbb
push
aas
iret
jle
jnp
std
add
add
inc
sbb
ret
pop
and
push
jl
ror
pop
xchg
mov
sti
cmp
in
sbb
inc
out
rcl
nop
dec
imul
jl
aaa
jnp
retf
push
dec
cmc
ss
jne
cwde
mov
mov
sbb
lods
push
pop
jbe
iret
mov
vpackuswb
dec
rol
add
cs
dec
call
or
ret
mov
jo
and
cmps
jp
push
test
jp
cmp
adc
and
fwait
cmps
adc
inc
and
add
loope
shr
add
add
jo
push
mov
xor
or
add
pop
xor
add
inc
les
push
test
jae
ss
mov
pop
push
push
sub
xchg
aas
mov
add
je
pop
mov
jg
cmp
add
push
pusha
frstor
repnz
inc
or
or
ret
dec
or
mov
cmp
mov
ret
add
sbb
cmp
not
shr
jns
clc
ins
in
icebp
push
std
push
lods
jg
clc
xchg
jg
mov
pusha
stos
push
xor
arpl
xor
test
and
outs
cmps
test
sub
mov
pop
add
mov
push
mov
dec
or
retf
fldcw
jae
jge
sbb
mov
arpl
into
inc
arpl
pop
sbb
sbb
inc
popf
lds
movs
ja
sub
dec
xlat
data16
or
xchg
jge
mov
cmp
push
xchg
adc
test
sbb
or
lock
dec
add
add
cmp
in
push
sbb
adc
test
movs
jbe
mov
sub
dec
je
push
clc
xor
rol
dec
jne
push
jg
mov
jg
ins
jnp
cmp
lea
dec
dec
loope
je
and
ss
add
jp
leave
sti
sbb
popf
mov
fbstp
shl
sbb
arpl
and
cmp
inc
retf
in
bound
jmp
out
inc
sub
ss
lea
inc
pop
add
cmp
xor
sbb
arpl
popa
rcr
adc
or
add
(bad)
add
jp
je
push
rcl
xchg
add
jp
loope
loop
shr
lds
sub
ins
cmp
cmc
test
inc
xchg
pop
int
fst
(bad)
cmp
je
mov
jne
adc
sub
or
xchg
gs
in
add
fist
mov
pop
aaa
adc
pop
adc
mov
mov
jmp
shl
out
icebp
adc
xor
adc
cmp
add
pop
ins
cmp
push
ror
mov
fs
sti
sub
fiadd
xchg
aad
jmp
and
sbb
imul
inc
mov
(bad)
mov
fiadd
sbb
push
fcmovnbe
aam
push
outs
es
xchg
arpl
outs
jle
gs
or
outs
sub
dec
(bad)
fild
adc
adc
or
cmp
inc
adc
je
push
mov
(bad)
mov
jle
(bad)
in
pop
fst
rdmsr
shl
call
adc
sahf
pushf
adc
inc
dec
push
pop
adc
lds
add
rcl
dec
and
inc
cwde
adc
sub
or
or
jmp
jae
movs
popf
dec
repz
xchg
sti
push
mov
push
add
push
shl
pusha
js
fwait
jns
or
(bad)
mov
xchg
adc
scas
fiadd
(bad)
cmp
push
dec
add
jo
inc
cmps
add
rcl
inc
push
adc
aad
adc
xchg
jmp
(bad)
stc
adc
inc
cdq
stos
aaa
stos
adc
je
lds
sbb
(bad)
push
sahf
mov
jmp
jnp
out
nop
pushf
movs
cdq
jnp
popf
out
(bad)
fsub
jg
jle
add
and
and
pushf
or
dec
sbb
adc
or
jae
add
je
ss
or
cmps
xor
or
dec
ins
arpl
add
adc
aam
and
jmp
fs
cmp
inc
push
and
sbb
sbb
outs
mov
ins
(bad)
ret
jg
jns
test
mov
imul
cwde
fcmovb
std
jge
sbb
inc
ja
or
jmp
outs
sub
test
test
pop
pop
mov
call
xchg
add
inc
ja
or
adc
enter
push
cdq
sbb
and
dec
sub
and
push
mov
mov
dec
jge
add
xchg
add
pop
adc
sub
and
inc
nop
jle
call
dec
xor
lock
inc
push
jo
fistp
push
or
xchg
test
adc
or
push
mov
push
push
xor
sbb
and
dec
(bad)
jb
adc
push
xor
outs
sbb
call
sbb
into
jmp
xchg
push
mov
pusha
xchg
shl
(bad)
mov
mov
and
and
pop
or
rol
pusha
or
imul
hlt
pop
or
adc
sti
sub
adc
dec
loop
stos
jle
jo
hlt
sbb
mul
dec
ret
les
xor
and
push
add
adc
or
movs
push
mov
jge
sub
xchg
push
sub
in
gs
push
stc
pop
ins
mov
adc
adc
pop
mov
jo
push
push
adc
add
lock
mov
add
mov
pop
cmp
and
neg
sub
xor
cmps
mov
shl
retf
pop
inc
jne
(bad)
cdq
ror
mov
call
fnstenv
inc
sub
push
push
cmp
loope
sar
or
push
and
jne
or
lea
out
lea
or
test
push
pusha
push
add
rcl
mov
and
pop
cmp
je
fst
ss
mov
or
or
retf
push
pop
xchg
(bad)
leave
mov
loope
je
and
adc
and
cmps
mov
sbb
adc
shl
add
and
xchg
iret
xor
leave
inc
inc
ret
mov
push
sub
mov
inc
mov
pop
add
or
mov
fs
or
xor
adc
mov
cmp
push
xor
add
sub
or
mov
mov
pop
arpl
(bad)
out
add
and
cmp
pop
push
jmp
sbb
pop
xor
adc
fsubr
or
mov
pop
pop
movs
imul
popf
ins
pop
mov
mov
push
or
dec
sbb
lock
hlt
cmp
pop
xlat
jp
aaa
push
jo
sti
push
dec
fnsave
push
pop
dec
and
in
shl
adc
enter
fsubr
sub
inc
push
add
sbb
inc
aam
lea
xchg
dec
les
pop
pop
outs
or
mov
mov
cli
imul
push
cmp
ja
mov
jbe
add
(bad)
adc
add
mov
ror
sub
cmp
add
add
jmp
mov
and
add
or
inc
cmp
or
push
mov
sbb
mov
push
inc
test
shl
mov
pop
into
lock
jmp
xor
xor
dec
daa
xchg
movntq
out
inc
jae
sbb
mov
arpl
cmp
dec
push
js
iret
repz
mov
stc
out
cmp
aad
add
add
push
cmps
fld
test
sub
sbb
xchg
inc
mov
or
ret
adc
push
retf
lods
and
sbb
adc
(bad)
ror
es
push
pusha
sub
push
nop
mov
arpl
ins
stos
mov
imul
xchg
xchg
sbb
pop
mov
cmp
mov
movs
pop
sub
jge
das
xor
jnp
std
imul
add
cmp
adc
jmp
inc
ins
jno
aam
mov
mov
nop
test
inc
loopne
mov
xchg
xor
cmc
cmp
mov
sbb
inc
sbb
jnp
xor
push
je
xlat
jle
adc
enter
push
in
sub
push
push
add
sar
mov
push
arpl
or
es
fwait
push
pushf
dec
lahf
rcl
inc
inc
lods
cli
popa
xor
out
add
push
jp
mov
(bad)
mov
or
sbb
sub
sar
lods
jl
pop
mov
or
cs
cmp
leave
adc
pop
adc
cmp
nop
fcomip
jl
dec
sbb
mov
inc
inc
fsubr
or
pop
out
mov
mov
xlat
jl
xchg
xor
adc
and
push
or
(bad)
int
or
or
mov
jg
shl
lahf
add
or
lods
adc
or
(bad)
push
fwait
add
pusha
sub
mov
cld
(bad)
movs
shl
adc
pop
aam
or
loop
push
dec
add
mov
dec
mov
jg
pusha
or
or
and
push
mov
push
cmp
and
pusha
stos
pop
jg
fiadd
sbb
adc
cmp
mov
test
mov
mov
imul
pop
sbb
rcl
cmp
retf
fcomp
rol
pop
fcmovbe
push
scas
add
push
(bad)
and
pop
and
sub
adc
mov
lds
add
leave
push
push
jno
jmp
lock
xchg
and
pop
mov
jp
(bad)
pop
jae
pusha
adc
enter
dec
aaa
push
out
dec
enter
aas
cmp
mov
pushf
mov
shl
push
pop
mov
out
inc
inc
push
fsubr
adc
je
pop
pop
pop
inc
and
inc
pop
cld
(bad)
inc
movs
adc
fild
imul
sub
pop
aaa
add
cmp
je
cld
outs
and
mov
aas
into
lock
adc
push
and
dec
add
mov
jb
cmp
lahf
pop
ss
enter
aam
je
out
jne
je
mov
push
js
push
sbb
jl
or
adc
in
push
mov
xchg
dec
pop
or
mov
sbb
dec
inc
push
push
push
inc
mov
loopne
fld
ret
xchg
dec
xor
or
add
adc
xchg
inc
dec
ror
ret
pop
test
xchg
mov
repnz
cmp
and
xor
sbb
gs
mov
adc
jmp
lods
lahf
jb
sbb
dec
jp
nop
aad
sub
mov
scas
or
jb
adc
icebp
lods
sbb
cmp
or
inc
fistp
sub
or
ror
sub
push
pop
cdq
cdq
inc
cmp
ret
cwde
jae
das
sbb
cmp
xchg
pop
push
sbb
mov
test
sbb
dec
dec
ret
pop
xchg
imul
pop
and
dec
(bad)
sar
js
fs
repz
dec
mov
test
jo
jp
pop
(bad)
jl
xchg
inc
sub
fwait
sub
jb
inc
mov
xchg
sub
sub
sub
inc
mov
pop
adc
sub
add
shl
sar
push
push
sbb
je
jnp
or
mov
sub
lock
xor
clc
inc
and
test
mov
push
add
add
or
loopne
lea
xchg
test
mov
add
fimul
push
sbb
ins
lea
jne
ss
or
fdiv
push
push
adc
imul
rcr
adc
dec
ror
pop
sub
xor
add
or
mov
add
and
aaa
xchg
pop
mov
push
add
loopne
push
xchg
pop
or
dec
adc
addr16
jecxz
push
push
cmp
mov
shl
stos
mov
add
pop
rcr
(bad)
je
icebp
pop
xchg
or
xchg
dec
enter
jno
addr16
adc
mov
iret
sbb
jl
xor
cdq
loope
push
leave
aaa
inc
adc
mov
xor
lods
jb
nop
inc
ret
test
ficom
ds
xchg
sar
push
jmp
adc
sbb
rsm
and
pop
inc
pop
jle
inc
dec
add
sbb
or
jle
jle
mov
sahf
data16
mov
cmp
push
adc
scas
push
push
mov
jmp
dec
mov
ret
add
jno
scas
enter
pop
sbb
xor
sub
adc
xchg
mov
add
inc
adc
adc
movs
stc
add
out
cvtdq2ps
sahf
aaa
mov
sbb
inc
push
(bad)
xchg
mov
test
pop
xor
or
inc
dec
daa
push
jl
xchg
or
adc
ss
and
repnz
sbb
and
mov
dec
adc
add
adc
cdq
ss
(bad)
pop
cdq
fs
push
xor
enter
or
or
inc
gs
inc
cmps
dec
or
div
ss
dec
xchg
popa
xchg
add
daa
push
sub
xchg
fist
add
push
mov
add
ja
and
leave
ret
add
js
movs
xor
test
pop
pusha
adc
jae
or
das
xor
xchg
xor
das
mov
sub
sub
sub
sub
mov
and
sub
pop
and
mov
sbb
pop
leave
aad
and
push
xchg
pop
leave
xchg
sbb
leave
sbb
sbb
or
inc
jmp
sub
inc
ret
pop
jbe
repz
push
inc
jbe
mov
test
and
sbb
mov
out
mov
pop
and
retf
push
test
dec
adc
or
push
rol
jbe
xor
xchg
adc
pop
daa
daa
dec
in
clc
sbb
loopne
mov
xchg
add
push
movs
push
pushf
pushf
pushf
pushf
push
dec
inc
sahf
lock
mov
mov
or
cmp
or
in
mov
adc
sub
aas
les
daa
daa
sub
add
daa
add
adc
imul
mov
lds
jbe
popa
pop
nop
xchg
or
sbb
pusha
loop
lods
pop
jne
pop
pop
imul
push
pop
retf
sbb
sub
adc
mov
pop
add
call
pop
add
nop
xor
and
sahf
jno
jmp
or
rcr
or
ret
push
add
jne
sub
sbb
or
push
ret
push
pop
pop
add
mov
bound
sti
cli
lea
pop
stos
rol
sbb
and
and
scas
mov
add
sbb
sub
arpl
mov
push
mov
sar
(bad)
push
or
mov
jne
cwde
sub
xor
mov
ficom
je
push
mov
std
imul
dec
fmul
inc
mov
pop
sbb
pop
push
push
sbb
xor
adc
mov
leave
sbb
dec
les
sbb
aas
icebp
adc
and
and
lock
jnp
mov
sti
or
push
ins
ds
inc
push
fcomp
xchg
fnstcw
push
inc
xchg
sub
push
adc
js
fcmovnu
loope
(bad)
xchg
cmp
add
sbb
cmps
scas
ds
and
popa
retf
pop
or
loope
add
xor
xlat
xor
inc
push
inc
xchg
pop
daa
or
adc
pop
pop
shl
cli
push
add
cmp
pop
rcl
mov
or
iret
jmp
int
cmp
mov
mov
cmp
cbw
int3
scas
add
push
rcl
test
pushw
dec
sub
pop
ss
mov
sbb
push
shl
icebp
pop
test
pusha
je
mov
bound
push
and
rcl
(bad)
sbb
adc
inc
aam
and
ret
aas
mov
cmp
mov
inc
fild
fild
or
add
and
xor
mov
jle
mov
push
movs
add
cmp
xlat
dec
mov
dec
enter
add
mov
jecxz
jne
loopne
push
push
fwait
mov
sub
lods
pop
cmps
test
sbb
call
retf
fdivr
xchg
dec
inc
fmul
pusha
mov
fld
add
sub
lea
cmp
lock
or
in
idiv
cmc
add
aad
int3
add
mov
and
div
add
jmp
out
mov
add
adc
cld
jp
dec
inc
call
add
mul
repz
pop
ror
ror
sub
mov
xor
jle
or
add
xor
or
in
fsub
xor
jp
adc
inc
cmp
shl
dec
js
push
das
cmp
jge
or
jl
mov
jmp
pop
cmp
or
or
hlt
imul
and
jp
in
lods
sbb
dec
pop
arpl
enter
inc
jg
fs
lds
push
fsubr
dec
ja
pop
shl
push
jne
xor
leave
or
lahf
mov
pushf
ret
jle
cmp
jl
cli
pop
jmp
dec
cmp
jbe
imul
retf
pop
punpcklbw
add
out
cmp
sub
cli
cmp
xor
hlt
mov
dec
rol
add
jmp
test
xchg
fs
inc
(bad)
ret
and
fcom
adc
xchg
cmp
add
inc
inc
dec
dec
div
add
pop
add
adc
push
retf
and
jge
rol
push
rol
lock
add
cmp
dec
test
call
mov
cmp
cwde
add
add
pop
ror
fmul
and
lea
xchg
or
push
push
add
sub
lea
inc
popf
les
ins
movs
sbb
pop
push
xchg
loopne
int3
pushf
pop
rol
mov
cmp
cmp
mov
push
clc
inc
movs
cdq
dec
pop
mov
mov
rol
cwde
nop
xchg
push
xor
and
dec
mov
dec
xor
imul
stos
sti
ret
jmp
jge
adc
add
clc
lahf
test
out
lock
cmp
fidivr
cmp
push
adc
jae
pop
and
ins
outs
jmp
xchg
push
inc
test
daa
inc
push
mov
rcl
add
push
push
pop
out
mov
je
test
mov
and
nop
or
jo
in
add
je
mov
test
lea
mov
lods
add
jle
lods
jne
or
clc
xor
(bad)
mov
add
(bad)
fnstsw
push
sbb
inc
jae
enter
ret
fidiv
jg
and
mov
and
add
xor
mov
out
out
jae
or
dec
adc
shl
jmp
ret
add
adc
add
inc
or
cmps
pop
pop
or
push
add
dec
and
add
add
test
jl
xor
add
retf
ret
inc
add
inc
adc
clc
mov
and
cs
adc
ror
inc
lds
ret
test
jb
sbb
nop
add
inc
or
inc
cmp
aad
and
cmps
fnstcw
pop
push
inc
pushf
jmp
popa
adc
stos
aaa
mov
and
imul
and
xor
cmp
adc
push
add
or
ret
push
test
fs
add
push
das
ds
jl
cmp
or
ret
and
mov
sar
ret
jle
sub
jge
inc
add
cmp
jg
sbb
cmp
popa
int
add
inc
or
cmps
or
cmc
inc
mov
sub
mov
mov
add
xchg
bound
imul
push
rol
imul
cmps
imul
jns
cmp
cmp
inc
add
lea
cdq
cld
rcr
push
dec
cdq
push
sbb
je
xchg
mov
push
pushfw
push
pop
nop
data16
jmp
daa
xchg
bound
add
add
xlat
ret
inc
sub
inc
lahf
imul
or
adc
sub
or
or
xor
dec
cmps
mov
ret
inc
xchg
jmp
stos
sub
jae
or
cmp
fild
or
push
add
je
add
or
adc
ins
mov
loopne
call
test
dec
lea
or
pop
jne
in
adc
dec
in
scas
pop
movsx
ret
pop
cs
pop
ret
mov
call
mov
rol
cld
mov
add
cwde
push
push
rcl
jmp
fisttp
or
mov
cmp
retf
dec
xor
cmp
std
mov
mov
sahf
cmp
cmp
jne
push
add
aad
js
sub
mov
jns
outs
hlt
xor
hlt
jae
fild
dec
sbb
inc
mov
push
ss
pushf
das
ja
and
popa
add
in
xor
fstp
sbb
mov
mov
lahf
pop
push
stos
jp
test
stos
mov
or
mov
cdq
lea
pop
seto
and
scas
mov
ja
push
mov
jno
mov
imul
inc
adc
jmp
shr
(bad)
stos
out
sub
sbb
mov
sbb
dec
inc
jmp
and
aaa
and
push
sbb
lea
cli
shl
in
dec
or
adc
lea
popa
cld
jnp
call
add
lods
push
or
adc
push
push
pavgb
mov
push
enter
push
pop
jle
nop
push
push
mov
into
jb
xchg
xchg
mov
inc
mov
iret
dec
lds
and
int3
adc
in
inc
movs
mov
adc
test
inc
sub
sub
lock
imul
je
cmps
lock
lods
int
shl
xor
mov
add
cmps
ror
xchg
lock
int
test
xchg
frstor
inc
sbb
je
cmp
mov
push
mov
fdiv
mov
add
mov
inc
sub
xchg
push
inc
sub
inc
push
sbb
dec
pop
je
es
pusha
lea
sub
cmps
inc
mov
adc
and
cmp
add
or
sub
adc
js
adc
(bad)
mov
mov
push
push
imul
or
add
imul
je
xor
sbb
add
or
cmc
jg
fdivr
fidiv
pop
(bad)
in
retf
sub
jl
cmc
push
push
jle
in
not
push
cmp
push
push
call
nop
ret
gs
jb
jp
xor
int
pop
fadd
push
dec
and
jle
inc
std
dec
pop
ins
push
pop
mov
(bad)
push
add
sbb
call
call
cmp
or
das
push
inc
test
or
(bad)
mov
push
mov
or
mov
ins
(bad)
sub
push
pop
inc
inc
adc
jl
sub
pop
inc
inc
mov
xor
imul
add
test
(bad)
fadd
ins
inc
mov
out
wbinvd
cdq
add
push
aaa
sub
adc
inc
mov
(bad)
or
inc
sbb
je
shl
sar
std
sub
(bad)
jp
ror
push
adc
imul
fdiv
and
into
rcl
dec
mov
enter
and
cmp
and
fnstcw
inc
inc
adc
add
pop
adc
in
data16
mov
and
cmp
(bad)
xor
(bad)
mov
cli
mov
adc
retf
inc
add
repnz
add
dec
dec
bound
mov
stos
and
test
dec
loop
adc
or
cmp
adc
add
xchg
mov
push
outs
jecxz
mov
dec
add
push
movs
mov
xor
adc
test
add
and
fs
sbb
xchg
popa
xor
push
adc
inc
not
jle
xor
sub
out
add
inc
jecxz
je
sbb
ror
cdq
inc
popf
pop
ret
push
adc
sub
push
pop
push
(bad)
push
(bad)
xor
imul
add
ss
mov
pop
jo
fsubr
and
sbb
pop
push
mov
sbb
ins
xchg
mov
xchg
mov
or
push
push
mov
icebp
xchg
test
push
outs
dec
xor
adc
and
xchg
jo
lds
pop
xor
mov
sahf
cmp
pop
mov
aas
xor
mov
inc
imul
mov
outs
inc
jl
sub
push
mov
and
inc
xor
mov
repnz
mov
pop
dec
mov
push
sub
add
das
sub
(bad)
imul
sbb
sbb
movs
xor
pop
sbb
cmp
sahf
(bad)
and
push
and
into
rcr
and
dec
(bad)
push
lock
adc
add
pop
fiadd
xchg
js
jns
inc
jl
xchg
addr16
out
inc
sbb
mov
sbb
or
in
xchg
inc
adc
inc
inc
es
and
sbb
sub
add
mov
movs
push
dec
jmp
movs
aam
cmp
fist
xlat
or
inc
pop
cmp
adc
ret
sahf
mov
push
cmps
add
or
sbb
lea
add
cdq
cld
lock
and
adc
and
adc
mov
hlt
push
sub
stos
sbb
or
pop
add
add
adc
add
inc
pop
mov
add
loopne
dec
ror
cs
and
add
jmp
or
xchg
out
push
out
nop
dec
adc
xlat
cli
es
call
rol
les
mov
adc
add
mov
or
sub
mov
jle
jmp
sub
inc
mov
movs
cmps
out
push
dec
fist
inc
xchg
adc
pop
lods
xor
gs
or
pop
mov
push
les
xor
mov
push
fs
adc
and
xor
jg
pop
push
or
xor
sbb
into
les
xor
pop
and
pop
xor
push
pop
add
movs
cmc
xchg
pop
push
pop
add
aas
shl
add
add
add
addr16
cmp
add
ins
push
xchg
dec
push
push
push
push
sbb
pusha
mov
jle
sar
rcr
rcl
mov
inc
popa
ret
test
sbb
bound
xchg
push
adc
das
(bad)
dec
mov
ins
lods
dec
jne
loope
or
add
jge
add
mov
adc
je
gs
shl
std
or
enter
sbb
xchg
add
add
adc
daa
mov
adc
aas
and
xchg
lahf
add
iret
push
adc
xchg
shl
add
inc
fld
pop
pop
mov
ret
dec
sub
pop
inc
rcl
add
sbb
fs
mov
dec
push
adc
shl
scas
das
je
rol
test
rcl
sbb
cs
jge
pop
inc
cbw
mov
xchg
clc
dec
leave
aaa
xchg
cmp
ret
imul
fiadd
loopne
adc
loop
imul
je
mov
xlat
fwait
pop
repnz
jns
xchg
jns
sub
fbstp
push
mov
mov
out
in
nop
aas
fmul
pop
test
mov
and
inc
(bad)
dec
mov
or
dec
aam
sub
jecxz
iret
and
sub
cdq
pusha
inc
ins
xor
mov
push
pop
(bad)
pop
popa
bound
add
sar
xchg
shr
mov
pop
ret
push
sub
js
sar
dec
adc
pop
loope
aam
std
pop
lods
fwait
(bad)
jmp
ja
dec
xchg
xchg
je
xchg
popa
push
pop
mov
sbb
add
xchg
icebp
sub
bound
fsub
jns
pop
adc
and
mov
enter
push
in
setb
and
dec
mov
push
aas
push
xchg
fcomp
psubq
ins
pop
fs
and
mov
xor
cmp
inc
and
scas
js
or
sub
xor
lock
dec
cmp
out
jge
sub
adc
enter
ja
push
push
dec
dec
ss
inc
loope
lea
push
lea
call
push
mov
fcom
sbb
sbb
mov
repz
inc
inc
pushf
xor
or
(bad)
shl
add
mov
xchg
push
pusha
and
xor
add
jecxz
arpl
fcomp
inc
cs
retf
add
jo
adc
adc
sbb
test
sbb
mov
into
xchg
int3
es
sbb
das
inc
(bad)
mov
adc
call
push
sbb
js
dec
popa
push
int
in
fstp
jo
gs
xor
gs
cdq
add
shl
ror
or
push
lea
push
mov
cmp
leave
lds
jl
push
stc
xor
xor
or
ja
arpl
cmps
xor
or
add
mov
ins
mov
dec
xor
test
cmc
dec
sbb
fnsave
sub
lock
pop
mov
adc
cmp
rcl
js
pop
ins
loope
inc
sbb
ds
jo
jo
outs
lds
fwait
xchg
mov
push
and
xor
je
fsub
sub
push
jge
inc
loop
fist
rol
cli
mov
mov
neg
or
push
xchg
or
sub
mov
pop
dec
inc
imul
dec
and
push
push
gs
jo
mov
addr16
daa
sahf
and
sub
(bad)
mov
adc
cmps
jl
ret
test
cmps
test
lods
cdq
rcr
cmp
inc
stos
cmp
cmp
pushf
or
push
add
inc
loopne
add
mov
mov
jne
cmp
jp
or
clc
mov
xor
mov
push
push
mov
test
loope
div
pop
das
cmp
lahf
aam
loopne
mov
aaa
fmul
xchg
sbb
xchg
mov
pop
xchg
jo
imul
inc
mov
push
jo
scas
lahf
fist
push
mov
pop
cmp
lods
in
adc
push
and
or
ins
mov
ror
adc
imul
inc
call
mov
(bad)
fsubrp
aas
nop
or
test
pusha
inc
mov
sub
pop
push
mov
cmps
inc
pop
push
sbb
data16
mov
sbb
sub
ret
mov
fs
cmp
pop
and
sub
cmp
add
aaa
nop
xchg
xchg
push
loop
push
xor
sbb
call
daa
(bad)
mov
or
outs
sbb
lods
mov
ret
lds
lahf
xor
scas
xchg
scas
or
inc
cmp
lods
test
and
jb
xchg
nop
bound
xor
sub
inc
add
push
dec
jnp
add
sbb
xchg
jbe
mov
lds
loopne
mov
(bad)
push
push
inc
fild
dec
dec
mov
inc
stos
mov
inc
je
ror
rcr
sub
loop
xor
fld
gs
push
mov
or
mov
push
and
fs
cld
and
int3
bound
fcom
add
add
or
fdiv
int3
push
inc
mov
cmp
scas
pop
and
and
sbb
cmp
je
in
push
or
or
jno
idiv
pop
xchg
mov
sbb
scas
push
(bad)
mov
rol
and
test
jl
xor
aas
aam
push
mov
jo
jns
jbe
add
mov
jno
cmp
shl
nop
cmps
dec
push
js
dec
enter
sbb
hlt
sbb
dec
push
popa
ret
ret
add
or
xchg
cs
add
cdq
xchg
fdivr
mov
fcomp
jbe
rcl
sub
mov
shl
dec
imul
jno
mov
add
jns
movs
mov
add
push
push
stos
push
ficom
test
(bad)
ds
sub
sbb
adc
loope
sub
mov
cmp
stc
cmp
imul
sti
sub
jns
push
and
dec
rol
jmp
xchg
xchg
test
dec
push
sub
das
mov
(bad)
int3
sbb
pop
sbb
push
out
inc
and
sub
nop
dec
cmp
imul
imul
call
mov
push
push
es
mov
or
xor
sub
push
imul
aad
mov
or
dec
inc
add
jne
in
mov
sub
mov
pop
sub
stc
cmp
pop
dec
sub
pushf
and
xchg
das
jnp
out
inc
fsubr
call
mov
daa
mov
dec
jbe
or
je
cmp
or
xor
clc
ss
dec
in
arpl
or
inc
fst
jne
sti
pusha
cmp
jge
cs
nop
pop
mov
movs
and
jmp
and
dec
or
pop
lea
cmp
call
mov
mov
xchg
push
sbb
pop
ret
repnz
mov
cmp
mov
das
leave
xchg
jge
rol
mov
out
xor
pop
pop
fimul
retf
stos
test
jno
ins
(bad)
arpl
inc
repz
(bad)
out
scas
fucom
xor
jl
push
mov
gs
mov
jbe
stos
sub
fmul
adc
jnp
es
lea
cs
or
leave
cli
add
dec
cmp
add
test
stc
ds
dec
and
jo
sbb
sbb
je
and
push
mov
rcl
sub
lea
mov
push
jae
sub
mov
and
clc
cmp
not
push
rol
mov
add
hlt
adc
retf
ror
ds
pop
and
jmp
xchg
(bad)
push
out
push
int
push
ret
lock
dec
lea
or
cmps
pusha
push
nop
loope
pushf
mov
test
test
push
cmp
ins
daa
mov
mov
loop
mov
dec
iret
add
add
inc
push
ins
vmovupd
mov
push
xchg
or
cmp
xor
dec
arpl
add
push
ds
test
jbe
xchg
je
fmul
pop
dec
lahf
push
cdq
clc
cdq
push
mov
push
jns
pop
js
inc
jne
scas
adc
xor
mov
cmp
sub
add
test
adc
add
push
inc
mov
in
mov
push
add
push
icebp
mov
push
dec
mov
xchg
lods
xchg
in
or
or
push
ja
ror
xchg
js
test
mov
call
call
sbb
and
pusha
lods
pop
test
mov
bound
adc
and
or
xor
or
jo
mov
adc
xor
repnz
scas
sub
fidiv
enter
sbb
and
sbb
sbb
xor
enter
sbb
dec
add
cmp
inc
in
mov
mov
xor
xchg
xor
mov
repnz
mov
mov
or
retf
and
adc
jge
test
test
das
test
mov
sbb
sub
lahf
jp
sbb
je
add
mov
sub
mov
or
std
inc
mov
lock
pop
in
mov
sbb
push
xlat
jb
imul
push
call
rol
mov
mov
adc
fs
add
cdq
pushf
ret
loopne
pop
outs
dec
sub
or
jg
mov
sub
sbb
sub
inc
loopne
inc
in
sub
mov
inc
xlat
add
mov
dec
push
cmp
in
fstp
frstor
push
push
nop
js
jne
sbb
aaa
push
inc
jl
or
push
loope
sbb
add
pop
inc
inc
pop
or
push
mov
test
and
xor
xchg
lock
inc
xchg
cmp
out
cmp
xor
push
sbb
add
add
pop
sub
arpl
dec
dec
pusha
mov
push
in
bound
daa
fisttp
(bad)
int
pop
sbb
shr
ins
int
or
movs
jno
add
sub
sbb
shr
xchg
mov
sar
mov
dec
push
daa
jo
ja
push
inc
lods
push
jmp
add
neg
jmp
pop
aas
pop
mov
xor
push
ret
sbb
(bad)
sbb
mov
(bad)
xchg
mov
adc
gs
cmp
adc
adc
cmp
xchg
or
clc
aaa
and
lods
imul
call
push
mov
out
jle
enter
sub
inc
clc
dec
xor
and
gs
(bad)
xor
and
add
sahf
xchg
pop
sub
add
adc
add
daa
jmp
xchg
call
call
test
sahf
(bad)
nop
push
and
and
enter
jge
inc
push
loopne
imul
imul
add
xchg
(bad)
fs
adc
mov
ror
push
fcom
jmp
call
jo
cmp
sbb
rcl
push
fs
movs
in
sbb
mov
ins
stc
mov
sbb
sbb
test
add
xor
dec
mov
ret
sbb
jg
add
pop
adc
lods
ficom
int3
add
call
mov
mov
out
(bad)
jmp
inc
pop
or
mov
in
ret
sbb
loop
sbb
jg
cmp
inc
or
mov
in
cmps
test
pop
adc
shl
xchg
dec
dec
dec
push
sub
cmps
cmp
(bad)
repz
and
mov
cmp
cmp
pop
pop
loop
mov
es
jg
inc
test
(bad)
pop
test
sbb
int
sar
dec
inc
mov
mov
and
add
test
js
pop
shl
adc
fmul
mov
push
pop
cmp
div
jo
dec
adc
sar
add
stc
dec
pop
(bad)
mov
adc
pop
jne
cmp
sub
mov
outs
push
jne
cmp
sbb
cmp
push
and
add
adc
xchg
aas
jecxz
jnp
adc
lea
or
lds
into
inc
cmps
pop
addr16
repnz
shr
(bad)
fcomip
cmp
inc
dec
mov
mov
mov
je
xchg
xchg
adc
push
pop
mov
outs
gs
mov
sub
mov
sbb
and
shl
mov
adc
sub
jle
rcr
mov
add
inc
push
push
mov
pop
adc
push
jmp
pop
popf
push
popf
fisubr
iret
outs
mov
xchg
in
mov
inc
dec
ins
pop
push
push
sub
dec
aad
cdq
inc
push
and
xchg
pusha
rcr
sbb
xchg
arpl
xchg
sbb
adc
xor
cmp
mov
stos
movs
sbb
sub
push
lods
or
pop
mov
or
loope
fdivr
je
dec
inc
adc
fnstenv
or
cmp
mov
pusha
cwde
adc
rcl
loop
cmps
jmp
ret
sbb
clc
cmp
js
adc
jb
mov
test
push
nop
and
mov
push
adc
(bad)
and
enter
test
sbb
add
sbb
add
pop
mov
add
ins
or
mov
inc
enter
adc
dec
dec
loop
cmp
nop
retf
clc
adc
dec
pop
jl
pusha
push
adc
popf
(bad)
push
add
pop
mov
jge
pop
loop
push
fwait
mov
jg
cmps
or
xchg
clc
ret
jmp
push
add
pop
or
add
test
scas
mov
xor
sti
hlt
jb
mov
xor
push
outs
inc
inc
dec
push
call
sar
inc
jg
fdivr
std
leave
jae
shr
ja
fild
bswap
dec
int3
out
enter
enter
xor
sbb
cli
(bad)
mov
cmp
adc
add
sbb
xor
mov
pop
add
add
mov
je
pop
daa
pop
or
sbb
xchg
cwde
fwait
or
inc
push
add
push
rcl
mov
shr
adc
or
inc
ins
mov
sbb
or
je
nop
lahf
sbb
mov
call
movs
repz
sti
mov
dec
int3
adc
mov
xchg
sub
mov
jns
ret
mov
shl
cmp
rol
sub
xchg
or
scas
jl
inc
sbb
dec
xor
scas
call
mov
dec
out
pop
mov
inc
cmp
mov
xchg
add
mov
outs
mov
cs
xor
push
push
ret
(bad)
cmp
fist
repz
sar
dec
cld
lock
sub
cmp
dec
inc
(bad)
fcom
retf
aaa
sub
inc
dec
imul
clc
call
mov
adc
test
inc
mov
imul
push
cmp
adc
popa
pop
push
and
out
cli
sbb
xor
push
push
dec
sub
push
xchg
add
jl
test
xchg
call
out
mov
cmp
call
jmp
(bad)
dec
mov
fldpi
jge
test
mov
sub
fs
test
xlat
rcl
retf
(bad)
sbb
sub
xchg
jo
aas
(bad)
cmp
mov
adc
inc
adc
xor
(bad)
adc
call
outs
ins
movs
pop
adc
sub
rol
cmc
retf
add
(bad)
jge
mov
push
jnp
(bad)
inc
inc
dec
inc
jl
jmp
jle
add
sbb
dec
cli
dec
xor
in
sbb
ror
movs
mov
adc
push
sub
and
out
dec
jo
fwait
inc
mov
les
enter
test
sub
call
or
xchg
inc
cmps
cmp
sub
and
mov
ret
jmp
pop
jg
xchg
cmp
fmul
mov
cmp
push
es
jo
pop
sar
sbb
mov
add
adc
sbb
out
add
pop
adc
adc
lock
js
and
add
dec
repnz
pop
rcl
adc
call
(bad)
in
mov
addr16
mov
add
fist
and
in
xor
jne
jns
pop
jne
mov
mov
dec
jmp
and
stos
imul
inc
jo
jae
mov
sub
add
es
jnp
mov
aaa
icebp
mov
xchg
mov
pop
pop
adc
call
and
jmp
fs
or
xlat
and
dec
cld
imul
xchg
ret
mov
jno
and
xchg
sbb
cmps
sub
test
xor
mov
or
jmp
sbb
jmp
les
push
test
add
xor
pop
sbb
push
jmp
shr
ror
cmp
jbe
mov
int
and
ss
xchg
loope
call
mov
add
test
sub
sub
inc
mov
repz
mov
(bad)
push
loop
push
out
or
test
dec
or
dec
dec
cwde
rcr
mov
loop
cld
mov
ret
jae
or
jno
(bad)
push
adc
cs
xor
adc
adc
mov
or
and
stos
push
mov
add
push
je
cmc
and
adc
and
cmp
ret
push
imul
ret
lea
sbb
inc
add
xchg
or
pop
or
mov
inc
adc
xor
or
push
in
dec
pushf
mov
inc
sub
mov
dec
mov
dec
sub
inc
add
retf
push
out
out
push
dec
rol
xchg
fild
push
sub
add
push
jmp
add
xor
mov
add
add
add
movs
pop
ret
or
push
add
xchg
dec
gs
std
into
(bad)
jl
push
jmp
mov
mov
ret
push
sbb
in
fidiv
pop
dec
mov
xchg
push
in
push
cmp
into
pop
lock
cmps
lods
test
fs
or
push
repz
cmps
and
add
js
cld
adc
dec
xchg
inc
ins
lea
xlat
and
lock
xlat
sbb
add
cmp
test
adc
fisub
mov
outs
loop
add
push
or
(bad)
std
xchg
mov
push
dec
jne
mov
fld
ret
mov
push
sbb
dec
movs
jne
adc
pop
or
or
jmp
ror
push
and
dec
push
mov
and
cmc
mov
inc
clc
add
push
add
out
ins
stc
test
or
and
mov
iret
popa
add
xor
outs
dec
pop
test
retf
jmp
movs
xlat
sahf
push
into
push
test
cmp
fcom
cmp
rcr
cmps
add
ins
and
movs
or
pop
mov
sar
pop
jae
fwait
push
bound
cmp
push
dec
or
sub
mov
adc
dec
pop
inc
ins
enter
or
cld
jmp
fstp
in
loope
mov
pop
pop
test
out
push
or
ins
xchg
add
mov
add
mov
sahf
pop
jae
repz
mov
push
js
cmp
ins
es
(bad)
cmp
rcl
les
(bad)
js
push
dec
dec
imul
retf
add
fsub
sbb
shr
push
and
push
or
mul
stos
movs
rcl
je
adc
loope
dec
dec
sbb
sub
or
push
xor
fisubr
add
dec
test
aaa
sub
and
iret
(bad)
sub
jo
loop
lea
xor
imul
es
(bad)
sar
dec
in
push
mov
cld
and
je
fisttp
mov
pusha
fnsave
fidiv
cmp
jo
sub
sub
jne
fstp
stc
in
popa
xlat
fcomp
xor
pop
popf
add
ds
test
clc
ds
add
jl
push
xlat
pop
xchg
rcr
fwait
sbb
jns
mov
or
dec
adc
sbb
dec
sub
lds
or
movs
fdiv
and
sub
sbb
aaa
sub
mov
fdiv
mov
mov
add
mov
jle
cmp
pop
fisub
hlt
and
mov
and
inc
or
pop
es
push
inc
daa
inc
movs
(bad)
rcl
aas
and
or
test
test
pop
popa
dec
pusha
dec
and
inc
cld
pushf
lock
int
test
lds
push
retf
or
mov
jge
int3
sbb
sbb
loopne
ret
mov
add
pop
push
ror
stc
icebp
loop
add
xor
mov
dec
mov
pop
push
adc
je
mov
ins
into
or
push
inc
cs
lods
sti
test
jne
xor
loopne
lods
push
dec
add
outs
fbstp
push
push
cmp
das
xchg
pop
jl
sbb
enter
add
popa
mov
outs
imul
and
xor
add
xor
outs
and
sbb
dec
mov
push
and
iret
cmc
dec
adc
push
or
xchg
xor
sar
dec
mov
or
mov
test
push
cmc
data16
scas
jp
aas
cmp
ret
and
loope
test
and
sbb
or
dec
pop
cmp
or
sbb
push
or
rcr
aad
adc
push
push
je
jns
dec
cmp
pop
pop
cld
pop
xor
pop
cmp
inc
inc
mov
and
and
ret
adc
enter
cmp
push
cmps
repnz
push
push
mov
push
mov
call
mov
fadd
add
sbb
(bad)
and
adc
test
add
cwde
inc
movs
mov
add
imul
jnp
or
ret
iret
xor
mov
and
aam
jo
or
sbb
lahf
and
hlt
in
push
ja
in
lock
dec
jne
fwait
mov
sbb
pop
adc
(bad)
sub
mov
rcr
add
add
sbb
sbb
imul
add
push
aam
adc
retf
rcr
jne
mov
xchg
(bad)
mov
add
cmp
arpl
add
jnp
jmp
loope
push
rol
xor
or
out
sahf
push
push
or
xor
imul
fidiv
sub
inc
cmps
repnz
pop
rcr
and
dec
push
aam
xchg
push
and
or
add
cwde
xor
mov
mov
jb
rcr
push
add
icebp
jge
dec
pop
sbb
cmps
stos
or
mov
jo
test
pop
clc
aaa
or
in
add
adc
std
outs
xchg
ds
add
or
or
jl
test
jo
inc
jecxz
adc
xor
add
cmp
or
inc
int
cwde
cmp
imul
push
rcr
(bad)
mov
aam
or
push
or
adc
aas
cmp
jnp
ins
aam
push
jae
jge
lods
adc
sub
adc
dec
dec
push
mov
or
(bad)
xor
out
(bad)
sbb
push
mov
clc
clc
or
mov
(bad)
rcl
adc
add
sub
add
xchg
xor
cmp
(bad)
or
sbb
movs
pusha
sub
fidiv
add
xor
mov
test
jne
mov
sbb
(bad)
aaa
aam
enter
sub
cmp
lahf
inc
mov
xor
ret
jl
cmp
add
cmp
jl
dec
outs
sbb
add
add
(bad)
aam
and
dec
rcr
cdq
add
leave
(bad)
adc
fisttp
out
out
call
jle
xlat
jbe
loope
lahf
sbb
mov
lea
add
xchg
and
cmc
push
cmc
mov
or
out
push
push
shl
leave
sbb
push
add
xchg
or
xor
and
outs
mov
fsub
std
and
daa
je
or
je
outs
outs
outs
outs
sub
je
and
je
sahf
xor
and
jne
lods
movs
lea
push
ins
and
cmp
enter
add
cmp
jb
dec
pop
inc
jnp
dec
sub
add
retf
xchg
jo
lock
or
mov
push
mov
dec
cmps
sbb
dec
dec
xor
xchg
pop
and
sub
mov
ins
jmp
xchg
add
xor
pop
rcl
adc
ja
mov
adc
retf
xor
sub
cmp
mov
or
xor
jo
add
xor
test
ret
arpl
and
mov
or
(bad)
aam
inc
enter
xlat
(bad)
push
dec
pusha
jb
les
inc
mov
clc
in
fild
sbb
push
jmp
inc
cmp
mov
bound
je
push
cmp
scas
push
inc
xchg
inc
add
je
mov
jge
inc
and
or
add
dec
xor
cs
push
xchg
xchg
mov
lods
jbe
dec
scas
jne
xchg
inc
jmp
ds
dec
xchg
and
push
push
cmp
popf
not
xchg
mov
div
push
fs
mov
dec
sub
sahf
out
sahf
(bad)
xchg
stc
push
sub
inc
loopne
into
add
sbb
pop
popa
push
mov
add
or
sub
sub
inc
or
adc
dec
xchg
inc
jmp
jbe
push
je
adc
sbb
cmc
ss
retf
mov
jecxz
fnstcw
adc
int3
shl
clc
dec
iret
mov
sbb
je
cdq
sbb
xor
leave
and
sub
pop
add
fadd
and
and
add
cmps
xchg
mov
lods
ss
js
xor
dec
adc
and
or
jmp
or
rcl
adc
jge
(bad)
cmp
rcr
repnz
frstor
jmp
cmp
mov
jge
out
sub
add
push
inc
nop
test
popa
dec
dec
jns
mov
jl
les
adc
dec
popf
sbb
je
aad
mov
dec
test
lds
adc
cmp
xor
mov
and
xchg
pusha
pop
xor
add
dec
or
cmp
cmc
push
cmps
add
push
sub
push
pop
sbb
add
and
jmp
out
aas
call
push
mov
jecxz
sub
test
xor
arpl
jno
cmp
pop
dec
mov
jge
enter
ret
ins
add
jmp
ins
pop
pop
mov
repz
pusha
push
mov
push
dec
test
pop
pop
jge
dec
test
dec
mov
inc
cmp
inc
sbb
jo
out
xor
pop
or
or
xchg
ret
jp
jl
in
out
adc
dec
dec
adc
mov
adc
scas
add
add
lock
pop
inc
add
cs
add
sbb
sub
in
cmp
adc
test
xchg
dec
inc
inc
call
hlt
xchg
add
xchg
xor
add
dec
rol
dec
pop
pusha
add
xchg
cmp
push
add
js
scas
sbb
rol
push
ins
inc
and
cmc
inc
or
jge
(bad)
je
(bad)
xchg
pop
call
or
jge
xor
inc
sub
sahf
cmps
inc
push
test
lods
xor
cmp
and
sar
mov
adc
and
ret
or
push
pop
rcr
ret
jge
ss
nop
cmp
add
jo
int
test
dec
jmp
sub
sbb
iret
fs
dec
dec
push
test
cwde
scas
test
adc
cmps
jmp
push
aam
stc
out
ficomp
jge
neg
jb
or
pop
idiv
add
ins
scas
into
adc
and
or
or
add
lods
jmp
xchg
jae
mov
ins
or
mov
pop
movs
add
cmp
scas
xchg
xor
add
xor
jecxz
and
push
and
or
adc
test
(bad)
leave
push
fs
dec
sbb
mov
mov
adc
dec
xchg
push
mov
sbb
sahf
xor
popf
ret
add
push
sbb
retf
test
sub
push
in
les
pusha
push
adc
sub
shl
mov
jmp
or
jl
sbb
ins
jbe
lods
jge
mov
jge
rol
in
in
movs
sub
cmp
iret
mov
xchg
and
push
xor
loope
popa
movs
or
mov
pushf
jne
adc
push
add
mov
pop
push
inc
into
in
hlt
test
adc
jno
push
adc
rcl
or
push
ds
retf
cdq
test
dec
test
mov
int
fist
ret
jle
(bad)
sti
dec
pop
add
add
je
loopne
(bad)
or
pop
pop
sub
enter
cmc
xchg
test
mov
mov
jb
loope
clc
fwait
and
loope
in
fnsave
xlat
add
xchg
push
pop
fisub
add
sbb
xor
or
mov
and
fstp
pusha
add
xchg
xor
inc
ficom
pop
js
ror
mov
xchg
push
jle
mov
dec
fcom
push
or
xor
rcl
aad
or
es
push
aaa
test
mov
cmp
inc
inc
les
and
add
jns
mov
not
or
xchg
aas
fdivr
add
cmp
jbe
jle
add
jne
cmp
mov
jle
data16
sbb
pop
pop
and
and
sub
pop
outs
xchg
xor
and
cmpxchg
inc
xor
out
dec
and
cmp
cmp
and
mov
fucomp
xchg
outs
popa
push
fcomp
and
jno
and
xchg
or
xor
add
test
adc
ins
sub
aas
in
dec
and
mov
sti
lock
pop
imul
adc
jp
add
cmp
sbb
or
mov
movs
push
xlat
mov
push
mov
pop
cmc
jmp
sbb
enter
sub
add
frndint
sbb
mov
or
jmp
cmp
cmp
add
xchg
add
jp
(bad)
mov
mov
pop
cdq
adc
(bad)
mov
movs
ss
jmp
aaa
das
sbb
dec
test
cmp
iret
and
dec
pop
add
jmp
sbb
push
xchg
pop
or
popf
adc
add
lock
pop
pop
movs
xor
push
or
add
iret
pop
or
xchg
imul
ins
je
add
sub
aaa
push
and
jecxz
xchg
push
fistp
ja
sub
nop
mov
addr16
inc
in
cs
sub
lods
or
je
pop
xchg
add
inc
sub
pop
mov
call
xchg
dec
mov
neg
push
push
add
mov
call
sbb
jmp
in
xchg
arpl
or
js
or
in
mov
cmovp
mov
in
lds
sub
pop
dec
xor
xchg
sbb
jbe
rol
fist
and
sbb
inc
cwde
movs
mov
es
and
push
enter
dec
xor
sbb
adc
adc
add
xchg
push
je
xor
repz
xor
push
push
js
cmps
jno
fimul
and
lods
popf
inc
mov
shr
jae
and
pop
jg
adc
ins
xor
or
push
add
loope
lea
enter
cmp
jle
lods
test
dec
lea
fxch
cmp
call
pop
xchg
call
hlt
nop
(bad)
data16
cmp
pop
mov
sub
add
xlat
in
imul
lahf
sbb
(bad)
popf
mov
in
(bad)
cwde
gs
dec
sbb
rcl
sub
mov
and
jmp
sub
inc
in
push
push
int
mov
call
fucomip
aaa
jecxz
inc
xchg
cmp
fwait
sbb
push
mov
test
(bad)
pop
enter
or
inc
scas
pop
or
push
retf
push
xchg
push
clc
or
add
hlt
fnstenv
call
adc
adc
addr16
lods
dec
mov
nop
add
or
cs
jo
int
ja
test
cwde
pop
push
and
adc
adc
or
jmp
dec
mov
or
dec
xor
ds
mov
sbb
sti
cmps
loopne
sbb
jmp
dec
sub
add
xchg
pop
pop
xchg
or
lods
lahf
les
sbb
or
loop
jb
retf
mov
sbb
sbb
sbb
dec
or
adc
and
or
jecxz
or
mov
(bad)
scas
xor
inc
add
jmp
movs
shl
dec
inc
es
pop
rol
clc
push
mov
xchg
mov
xlat
ins
data16
add
push
add
adc
adc
or
pop
add
aaa
fst
ret
sbb
cmp
or
sbb
push
sbb
sahf
sbb
or
pop
pop
jne
push
add
call
xor
dec
imul
cdq
mov
sbb
repnz
data16
xor
shl
inc
push
(bad)
cdq
and
dec
dec
push
push
push
test
ror
out
jl
nop
sbb
or
js
xchg
mov
fisub
push
xchg
add
sub
popa
test
mov
jo
mov
outs
pop
cmp
mov
je
fs
stc
or
or
lds
lock
repnz
cs
sti
int
movs
mov
push
add
enter
mov
ficom
cmp
or
mov
int3
mov
adc
xchg
push
dec
pop
pop
add
fs
xchg
push
push
adc
dec
sahf
in
shl
cmp
loopne
sbb
daa
shl
stos
fcmove
adc
mov
cmp
and
cmp
enter
push
mov
push
lea
cmc
pop
pop
fsub
and
xor
jl
dec
inc
gs
add
xor
push
or
xor
sub
push
sub
mov
xchg
out
fadd
adc
add
cmp
sahf
or
shl
or
(bad)
sbb
or
xchg
sbb
sub
aas
test
inc
fdivr
jge
jbe
push
scas
jne
add
pop
push
cmp
loopne
rcr
cdq
pushf
push
data16
dec
ret
push
pop
pop
iret
or
pusha
nop
mov
dec
add
daa
jae
imul
dec
movs
or
outs
sbb
xchg
push
(bad)
in
adc
sub
jg
mov
mov
(bad)
sar
dec
fiadd
fbld
push
cmc
mov
(bad)
imul
fdiv
mov
mov
mov
push
dec
rcl
jmp
sub
mov
xor
dec
sub
les
aad
sub
call
inc
jno
dec
ror
inc
and
shr
cmp
rcl
int
je
mov
adc
cdq
rol
mov
xchg
add
inc
call
mov
xchg
xor
pushf
add
test
in
sub
adc
adc
(bad)
out
or
cmps
push
fadd
je
adc
pop
(bad)
pop
test
add
dec
and
ror
push
mov
fdiv
adc
pop
dec
and
xor
mov
mov
daa
jmp
ss
xor
add
jmp
mov
enter
add
push
aaa
jmp
rol
stos
mov
jge
add
add
and
push
sbb
pusha
push
rep
out
loope
fbstp
inc
mov
pusha
add
std
(bad)
pop
xchg
fwait
sbb
mov
mov
push
jl
rol
imul
mov
jl
je
or
call
cmp
je
add
ret
call
and
scas
adc
ret
dec
add
add
jmp
cmp
sbb
mov
mov
lds
aam
add
push
and
mov
xchg
xor
rol
enter
nop
xor
push
loopne
xlat
ss
pop
loope
push
gs
add
jg
sub
and
sbb
js
test
adc
dec
cmp
fnstcw
lea
mov
vmovups
mul
enter
jo
je
jle
test
mov
inc
dec
rol
push
jecxz
into
sub
les
add
pusha
mov
sub
mov
mov
push
lods
test
out
sub
add
adc
adc
test
inc
(bad)
rcl
sbb
adc
and
neg
(bad)
lea
or
sub
add
add
or
enter
pusha
je
fidivr
sbb
inc
(bad)
bnd
mov
mov
mov
rcr
sub
or
mov
mov
dec
sub
adc
push
inc
loopne
loop
or
or
sbb
jge
cmp
test
les
push
cmp
or
popf
cdq
mov
repnz
jge
push
cmp
shr
loope
mov
sbb
ror
ret
sti
aas
push
lock
or
add
mov
adc
and
inc
adc
rdpmc
adc
outs
rol
push
mov
adc
mov
mov
pop
aad
pop
int
test
xor
into
xor
lahf
push
xchg
retf
loopne
das
push
push
and
pop
cmp
aaa
loopne
mov
cmc
or
or
shr
cmp
sub
sahf
js
dec
add
cld
jg
clc
xor
and
push
sbb
pop
mov
sbb
xor
stc
push
sbb
add
dec
pop
xchg
or
das
pop
inc
js
mov
mov
cmp
lea
sub
mov
xchg
xor
pop
dec
or
sbb
jno
inc
xor
xor
xor
popa
ror
sub
jno
adc
rol
cmp
or
push
sub
adc
add
cmp
inc
call
push
mov
retf
ror
mov
dec
inc
pop
sbb
sub
pop
sub
inc
adc
adc
jg
loopne
pop
outs
mov
je
or
test
jl
mov
sbb
int
ss
inc
adc
mov
sub
pop
imul
adc
add
add
add
cli
push
stc
pop
jns
sahf
xchg
clc
or
or
xchg
addr16
or
or
js
inc
sahf
or
or
test
inc
retf
pop
xor
rol
jle
inc
mov
pop
fadd
push
cmps
xchg
inc
adc
ror
sbb
add
inc
fild
add
(bad)
ins
les
pop
mov
inc
je
or
cld
sub
or
push
mov
push
sbb
add
xchg
sbb
scas
cli
sbb
lea
inc
and
ret
leave
adc
int3
mov
dec
lahf
pop
sub
add
sahf
jbe
push
outs
or
or
popa
and
aas
cld
int3
test
mov
lock
dec
xor
or
or
inc
fild
idiv
or
cmp
repnz
mov
sub
inc
pop
imul
add
inc
mov
ret
cmp
pop
lahf
sbb
sar
sub
enter
and
(bad)
lea
add
sub
adc
out
test
stc
or
jo
ret
mov
mov
es
jl
adc
xchg
or
mov
jl
sub
jl
jmp
mov
rol
inc
mov
(bad)
retf
test
inc
out
(bad)
(bad)
mov
xchg
add
inc
stos
add
mov
or
mov
or
cmp
das
mov
sbb
call
inc
ins
ds
or
and
add
mov
rol
push
cmc
cmp
sbb
aam
jnp
or
ins
mov
stc
mov
push
sbb
sbb
sub
push
movs
popa
pop
movs
inc
je
jne
lds
and
cmp
add
fsub
(bad)
mov
xchg
and
rcl
ret
jmp
dec
mov
mov
call
jae
push
ret
lock
shl
mov
and
mov
mov
inc
sbb
xchg
xor
and
test
pop
adc
jo
and
xchg
mov
xor
dec
inc
inc
xchg
cwde
dec
sub
jle
les
ret
push
lods
jp
push
cld
jne
mov
(bad)
jnp
or
ret
ret
mov
cmp
adc
push
mov
aaa
mov
adc
retf
push
jbe
sti
cmp
call
add
aam
cld
inc
jne
push
addr16
lods
jne
or
or
jmp
mov
popf
cld
ins
loope
test
mov
inc
lea
test
or
sbb
sbb
or
inc
cmp
or
dec
in
or
inc
or
fwait
xor
fcom
push
loopne
push
fsub
test
das
adc
mov
jmp
adc
jbe
movs
or
sbb
push
xor
or
nop
mov
outs
rcl
dec
sub
sbb
push
loope
pop
mov
push
shr
push
pop
ror
pop
cwde
push
gs
popf
adc
fsub
retf
or
add
mov
test
inc
adc
inc
sbb
pop
jo
or
xor
aam
mov
test
push
push
push
aam
sar
push
call
ror
jp
pop
stc
jne
movs
(bad)
(bad)
cs
ret
mov
lea
sub
xor
or
xchg
(bad)
ja
dec
or
mov
inc
mov
je
int
cmp
(bad)
mov
ficom
sti
dec
pop
push
pop
pop
mov
cmp
rol
pop
adc
mov
cmp
add
shl
in
inc
add
inc
xor
fist
mov
add
(bad)
mov
call
popf
(bad)
dec
add
inc
add
fidivr
lods
pop
xchg
call
jp
sbb
cmp
mov
inc
or
lea
push
rep
xor
mov
push
inc
inc
push
or
sub
ins
jge
(bad)
aad
ret
or
repnz
neg
push
ffree
inc
in
dec
fiadd
sub
sub
add
mov
dec
(bad)
adc
push
mov
mov
ins
test
rcr
je
lds
ror
loope
aaa
pusha
inc
or
push
jo
adc
or
jb
and
in
ja
push
or
xor
mov
repnz
xor
jge
mov
inc
les
jmp
mov
adc
call
test
pusha
push
ret
shl
pusha
mov
or
add
dec
xchg
push
adc
call
fwait
dec
xor
add
xor
mov
xlat
sub
adc
std
dec
push
inc
pop
mov
add
nop
jo
div
push
mov
int3
push
test
out
xchg
mov
add
and
mov
lock
adc
mov
in
mov
cwde
jl
xchg
mov
xor
push
test
not
or
ud1
ja
xchg
push
sub
mov
cmp
sub
loop
clc
lea
mov
pop
mov
call
out
and
sahf
push
ss
jle
dec
jp
pop
das
dec
cmp
loope
sbb
sub
test
mov
in
push
test
xor
mov
mov
aam
or
jmp
xor
xor
add
lods
inc
mov
fcmove
fiadd
jb
pop
inc
dec
rcr
(bad)
cmp
add
mov
lock
dec
sar
bound
ins
pop
and
push
arpl
cmp
jbe
mov
push
push
sub
push
adc
sbb
push
xchg
xchg
imul
or
imul
inc
hlt
xchg
jbe
or
sbb
sub
pop
cmp
(bad)
mov
js
sub
sbb
push
into
fs
or
je
mov
cwde
das
jge
push
jle
clc
mul
adc
jne
mov
fnstsw
jge
cdq
mov
pop
les
jge
shr
pop
push
or
jmp
pop
ret
inc
pop
pop
mov
mov
fadd
shr
jne
jne
test
stos
cs
outs
fmulp
rol
jmp
loopne
sbb
push
push
xchg
jne
dec
dec
xchg
cmp
mov
data16
cli
mov
xlat
retf
push
xchg
jge
inc
jno
rol
and
adc
ins
lock
mov
add
mov
outs
xor
hlt
jne
js
inc
(bad)
les
pushf
lods
push
add
and
js
das
ins
jnp
shr
jmp
push
nop
push
into
cwde
xor
in
ret
mov
cmp
xor
or
mov
pop
popa
xor
(bad)
mov
pusha
cdq
pop
mov
fstp
(bad)
rol
jmp
and
xor
jg
push
inc
dec
pop
mov
test
out
dec
mov
sbb
cli
sub
(bad)
daa
mov
and
or
and
hlt
dec
ret
push
es
pop
jnp
add
inc
fmul
and
in
push
enter
push
test
mov
lock
stos
xchg
retf
out
adc
and
sbb
cmps
sbb
icebp
ins
push
les
inc
add
inc
add
div
dec
dec
cld
pop
pop
add
and
jle
mov
fild
pop
in
lock
mov
jmp
xchg
sub
pop
or
or
mov
xor
scas
pop
or
imul
sbb
sub
push
adc
and
jg
push
or
out
fld
or
mov
mov
lea
ja
lea
or
cmp
add
adc
or
xchg
sub
push
je
fsubr
xor
fadd
sub
jnp
cmp
in
sbb
and
and
enter
test
cmc
push
pushf
(bad)
xor
push
xchg
inc
mov
rcl
pop
arpl
jp
mov
aaa
fadd
dec
or
push
adc
sub
test
js
icebp
fwait
stos
cdq
or
xchg
add
out
xor
inc
or
cmp
push
or
data16
mov
mov
sub
rol
jnp
push
or
jmp
and
mov
repnz
loope
push
xchg
jb
in
(bad)
sbb
sbb
pop
or
or
(bad)
or
ret
xor
(bad)
pop
mov
inc
mov
mov
fs
sbb
and
adc
xchg
cmp
mov
arpl
push
loopne
inc
lar
push
pop
scas
mov
cmp
test
adc
add
movs
jno
jmp
dec
cmp
sub
inc
pop
inc
jnp
mov
fidiv
cmps
add
jne
mov
dec
sub
xchg
xchg
push
push
or
sub
mov
aam
daa
pop
add
sub
dec
inc
sbb
push
pop
clc
sbb
aas
fcmovbe
or
or
inc
sub
mov
dec
xor
rcl
xlat
pushf
lea
gs
ret
add
inc
mov
fiadd
lock
mov
add
mov
pop
mov
add
shr
in
pop
dec
shr
jmp
xor
es
in
sub
mov
or
or
mov
icebp
(bad)
sub
nop
sar
add
xor
ffree
fidiv
push
adc
dec
or
pop
imul
cmps
sbb
inc
dec
mov
test
out
pop
jo
ss
pop
jl
mov
jmp
popf
lea
cmp
test
(bad)
xchg
aaa
and
fmul
xchg
pop
leave
dec
mov
push
daa
dec
hlt
test
(bad)
mov
icebp
test
inc
imul
or
pop
lods
cld
popf
inc
push
adc
xor
arpl
sub
push
pop
push
in
jecxz
retf
add
or
xor
dec
or
les
lods
adc
repnz
pushf
xchg
or
mov
add
call
push
jg
cmp
jne
sbb
cld
pop
xchg
lea
mov
or
sbb
shl
or
xchg
and
add
sub
adc
sbb
or
and
and
inc
aaa
jae
or
inc
dec
lahf
pop
add
bound
push
mov
rol
and
dec
in
lods
add
in
shl
in
imul
outs
push
cmps
je
inc
fcomp
enter
push
adc
(bad)
in
in
icebp
xchg
out
call
inc
loopne
mov
and
dec
xchg
into
int
cld
pop
clc
mov
cwde
jle
dec
ficom
sbb
or
rol
icebp
jle
leave
cs
cmp
repnz
mov
adc
jnp
jno
test
xchg
xor
outs
inc
push
xchg
inc
lahf
or
xlat
or
ds
push
and
test
inc
xchg
jmp
lods
loopne
push
nop
xchg
add
and
fcomp
push
loop
cmp
inc
mov
fcom
mov
popa
call
dec
cmp
ret
push
and
ret
inc
adc
adc
in
int
push
add
push
(bad)
dec
test
lods
pop
adc
xor
retf
js
push
(bad)
mov
je
fwait
cmps
mov
fidiv
adc
and
mov
adc
mov
or
mov
jge
aaa
test
xor
rcr
in
sbb
inc
sbb
and
dec
shl
pusha
sub
and
cwde
jb
pusha
ror
xchg
dec
push
test
adc
daa
hlt
std
mov
ror
and
jb
pop
fldcw
and
xchg
mov
add
cmp
(bad)
ins
mov
ja
lock
aas
cmp
movs
mov
push
add
push
mov
pop
push
stc
dec
sti
rol
jl
cmp
retf
mov
pop
call
or
fld
fmul
xor
test
sbb
or
ret
fld
fcom
sbb
paddw
imul
test
rol
cli
sbb
aam
outs
cmps
in
jmp
jb
and
push
or
xchg
pop
popa
xor
mov
xchg
into
ins
enter
mov
mov
idiv
and
retf
jmp
xor
or
ja
jb
cmp
sbb
clc
aam
(bad)
fdivr
push
lods
sbb
les
(bad)
jl
jg
add
add
xor
inc
xor
and
adc
add
pushf
adc
dec
ret
cmp
stos
pop
inc
sub
bound
arpl
repz
daa
sub
add
jg
sbb
ror
adc
das
sub
sbb
mov
jne
test
inc
(bad)
cmc
add
mov
jg
mov
test
adc
jl
inc
ret
xor
jl
dec
test
pop
jno
sub
mov
aam
les
bound
test
push
iret
add
lods
fs
sbb
pusha
and
add
inc
push
sub
cwde
add
sub
inc
das
adc
or
retf
inc
addr16
dec
cmp
dec
sbb
inc
dec
mov
or
add
sbb
add
and
lods
or
or
jl
mov
push
or
cmp
jb
cmp
ja
add
jnp
retf
test
mov
xor
out
xlat
add
sti
pop
sbb
dec
fcmovb
sub
fidivr
mov
lea
cli
mov
and
jg
loopne
push
mul
jecxz
sub
rcl
jns
and
pop
sbb
push
mov
call
fcomi
call
dec
sbb
fcmove
cli
repz
pop
push
jo
dec
das
imul
xchg
fadd
push
pusha
mov
(bad)
cmp
pushf
pop
shl
xchg
clc
mov
das
test
jle
mov
cmp
push
setg
push
call
jmp
into
sar
sub
mov
dec
lods
push
cmp
sub
inc
mov
pop
and
mov
sbb
nop
push
movs
xchg
sub
xchg
idiv
fs
push
out
mov
fdiv
sysret
fisttp
add
dec
mul
push
test
push
call
push
(bad)
stos
aas
inc
cld
push
aaa
cwde
pop
jnp
aas
mov
cmp
lahf
sub
or
inc
adc
movsx
das
push
mov
adc
or
stos
and
add
nop
inc
add
loop
call
mov
xor
xor
add
jecxz
out
or
iret
xchg
pop
xor
pop
mov
push
pop
cmp
add
lahf
call
xchg
mov
push
js
cmp
ret
cs
outs
pop
pop
and
test
stos
jo
mov
jo
xor
ror
inc
inc
cmp
mov
loopne
in
pop
add
push
fisttp
mov
rol
push
ss
cmp
dec
xor
dec
and
nop
push
add
xor
or
ss
imul
in
dec
sbb
dec
sbb
adc
scas
sub
enter
adc
daa
sub
inc
loopne
xor
mov
cmp
jne
or
push
cmp
int3
push
mov
popa
les
sbb
sahf
cmc
fcmovbe
dec
imul
in
inc
nop
xchg
push
push
in
js
les
hlt
adc
addr16
je
adc
aaa
loop
cmp
pop
rcl
jle
mov
arpl
jae
push
xchg
jb
mov
sub
mov
pop
jo
fbstp
add
push
ret
in
or
and
(bad)
jmp
ds
push
xchg
sbb
popa
loopne
sbb
mov
dec
shl
loope
mov
aam
lds
jns
mov
adc
out
adc
dec
aad
jnp
shl
push
push
lea
imul
shr
sub
and
sub
fmul
push
ret
orps
add
lock
pop
xor
dec
or
jo
enter
xor
and
frstor
add
lods
data16
inc
imul
fcmovbe
and
jnp
add
inc
push
jle
inc
and
and
sbb
adc
test
dec
call
add
push
mov
dec
push
pop
dec
pop
add
pop
nop
pop
push
inc
adc
push
lahf
push
das
ins
add
test
xor
push
mov
fmul
mov
loopne
lahf
das
adc
xor
xor
call
sub
fwait
and
js
call
jmp
in
loope
dec
sub
lea
ret
push
jns
or
sub
pop
pop
test
push
(bad)
ss
jns
mov
shr
ret
inc
fidivr
adc
dec
push
jns
sbb
cmp
push
inc
jl
jno
inc
mov
out
dec
push
sets
jg
jmp
aas
mov
out
mov
mov
add
data16
shr
sub
inc
sub
add
dec
sbb
mov
dec
add
push
jle
add
xor
cmps
xor
dec
jne
out
cs
sub
les
cmps
cdq
mov
add
inc
and
mov
ss
jg
test
clc
push
add
push
push
xor
outs
repnz
and
lds
lahf
(bad)
imul
add
dec
sbb
mov
dec
cmp
movs
call
fs
js
or
push
push
mov
cs
out
jmp
inc
popa
loop
shr
dec
jno
mov
repz
dec
push
fs
mov
or
mov
xchg
sub
lea
sub
push
imul
es
pop
xor
pusha
sub
xchg
jne
(bad)
retf
xchg
lds
push
add
in
push
or
xchg
push
sbb
(bad)
stos
mov
adc
mov
jbe
or
ret
rcl
out
add
xchg
cs
cmp
xchg
fimul
je
xor
add
test
cmc
mov
test
lea
xor
add
and
adc
mov
dec
dec
and
mov
aas
mov
pushf
sub
inc
pop
neg
ret
push
inc
inc
call
add
fidivr
sbb
mov
pop
dec
sbb
xor
mov
adc
or
add
mov
add
sub
mov
mov
dec
ret
add
mov
rol
fldcw
mov
xchg
mov
add
dec
(bad)
adc
pusha
pop
dec
adc
push
mov
call
jmp
in
push
addr16
mov
imul
mov
enter
push
pop
popa
jae
or
add
sub
sbb
sub
push
xor
jae
mov
mov
imul
add
sbb
add
dec
int
push
ss
jbe
adc
sub
movs
ss
and
push
adc
sar
xchg
and
push
sub
ror
popa
mov
jmp
sbb
inc
mov
lods
loop
xchg
jp
cmp
jge
xchg
dec
mov
inc
and
adc
ins
or
enter
cmc
(bad)
jmp
add
xor
xchg
add
cmp
adc
push
fmul
mov
inc
das
mov
cmp
adc
xchg
add
dec
and
nop
sbb
cmp
ret
pop
or
push
rcr
icebp
cli
pop
mov
sub
push
js
inc
xor
scas
dec
or
out
or
cmp
retf
inc
inc
dec
rol
mov
test
test
data16
adc
cmp
sub
and
jo
push
shr
jmp
or
int
xor
stos
dec
(bad)
test
sbb
mov
lea
cmp
inc
test
movs
daa
lods
push
loope
jo
rcl
sbb
ret
mov
aas
(bad)
ss
(bad)
push
out
and
inc
cmp
push
(bad)
(bad)
loope
adc
inc
push
pop
test
pop
cmp
inc
cmps
mov
clc
or
or
mov
pop
test
sbb
retf
and
inc
xchg
in
in
addr16
sbb
jp
ror
xchg
sbb
out
jne
xor
fcom
jb
and
int
jmp
lock
or
pop
push
std
push
and
jmp
fimul
bound
push
and
mov
arpl
in
cmps
ror
push
push
pushf
push
xor
je
and
hlt
mov
push
sbb
mov
jo
movs
sub
push
loopne
xchg
cmp
xchg
pop
dec
fadd
sub
add
pushf
sbb
dec
nop
int3
stos
ret
cmps
int
loope
add
rol
(bad)
push
adc
cmp
sti
xchg
stos
push
jne
dec
js
dec
and
or
adc
neg
and
push
push
xor
in
ds
jb
hlt
cmp
sub
neg
sbb
push
pop
ins
ins
push
mov
enter
push
jmp
jge
and
arpl
movs
inc
sbb
xchg
sti
lahf
mov
mov
aam
loope
imul
sub
pop
add
fisttp
ins
sbb
cmp
sbb
mov
push
push
sbb
cwde
dec
daa
jbe
dec
mov
inc
std
imul
push
cmc
jb
sbb
inc
les
dec
call
add
adc
lds
inc
scas
adc
jp
xchg
pop
retf
push
mov
popf
addr16
jmp
ror
mov
jp
pop
sbb
jne
inc
mov
cmp
mov
outs
push
(bad)
iret
test
adc
xlat
add
pop
push
mov
fmul
dec
or
or
xchg
inc
sub
mov
cdq
call
fiadd
add
das
enter
enter
rcl
icebp
sub
dec
pop
inc
loop
dec
aad
add
mov
adc
sub
jl
addr16
adc
ret
mov
mov
lods
mov
gs
xor
add
pop
arpl
add
dec
inc
pop
dec
or
retf
cmps
jbe
data16
cli
push
sub
mov
in
add
retf
sub
sub
std
or
sbb
or
xchg
push
shl
(bad)
mov
retf
sub
call
jp
xor
call
dec
into
dec
and
inc
dec
xor
push
inc
adc
dec
fisub
out
inc
push
cmp
je
(bad)
pop
pusha
ins
jbe
pop
fmul
das
or
mov
dec
and
sub
add
add
call
jecxz
sub
jl
or
add
es
adc
lods
(bad)
and
cmps
push
lds
inc
xor
cmp
hlt
movs
jg
iret
sub
sub
or
outs
sub
cdq
ucomiss
dec
hlt
sub
fs
adc
test
or
in
or
push
es
cs
outs
jge
mov
sub
shl
or
dec
mov
mov
jl
mov
(bad)
movs
push
add
adc
jg
push
inc
(bad)
or
mov
push
das
ret
clc
jb
lea
pusha
and
add
imul
add
je
shl
add
xchg
call
clc
pop
addr16
and
lock
mov
adc
rcl
addr16
aas
cmp
add
dec
pop
ds
pop
inc
or
xor
js
cmp
fimul
pushf
into
aam
push
push
jne
bt
mov
ss
inc
imul
call
dec
mov
or
add
xchg
out
dec
push
(bad)
inc
loopne
jecxz
popa
mov
push
repz
mov
call
ret
pop
sbb
push
dec
add
sbb
xchg
xchg
pusha
mov
aam
mov
sub
jo
sub
xor
mov
das
ins
aam
adc
add
inc
or
ret
pop
dec
sbb
jne
ficom
adc
sahf
xchg
push
pop
xchg
sub
add
xchg
outs
mov
shl
add
cs
lea
shl
push
sbb
push
gs
mov
sub
mov
push
dec
inc
das
inc
jne
push
jne
add
(bad)
mov
pop
sbb
mov
sub
adc
es
mov
inc
mov
jmp
adc
add
test
mov
loopne
cdq
xor
popa
pop
cld
and
ror
add
or
clc
push
into
aaa
jne
cmp
cmps
sbb
or
daa
mov
cmps
inc
(bad)
pop
push
mov
or
jg
enter
enter
push
fwait
xor
cmp
xchg
mov
jne
mov
xchg
clc
or
sbb
or
cwde
ror
dec
aad
and
outs
adc
push
jnp
mul
jge
hlt
mov
mov
pop
jo
adc
ficomp
and
bound
sbb
add
and
test
or
das
pop
pop
nop
pop
in
jne
inc
cmp
cld
jge
mov
jmp
jne
mov
fistp
sub
adc
xor
into
sbb
sub
fiadd
jecxz
(bad)
pop
sbb
inc
and
arpl
lods
inc
add
sbb
cmp
pop
movs
sbb
pop
rcl
sbb
sub
mov
push
repz
dec
add
dec
push
ret
ror
push
aad
loope
loopne
hlt
ds
xchg
mov
mov
jl
adc
je
adc
inc
clc
repz
sbb
retf
das
out
mov
bound
loope
imul
mov
pusha
add
cmp
(bad)
cdq
loope
daa
cmp
xchg
not
xor
in
lock
pop
fisttp
dec
sbb
add
inc
and
mov
lea
sub
leave
xor
lods
push
dec
jg
xor
xchg
and
push
add
sbb
(bad)
aaa
and
dec
add
xor
loope
in
out
fiadd
das
xor
add
lahf
mov
pop
stos
inc
frstor
jg
test
out
sub
adc
mov
push
mov
push
sbb
outs
or
or
dec
add
push
xchg
jae
pusha
cmps
add
pop
cmp
es
push
push
mul
mov
pop
ja
jle
cld
add
or
push
outs
je
sub
arpl
mov
mov
enter
call
cli
xor
push
mov
xor
je
dec
lahf
xchg
inc
pop
xor
clc
inc
imul
pop
push
push
push
imul
movs
movs
push
lgs
pop
or
add
dec
dec
(bad)
push
cmp
adc
cmp
xchg
xor
sbb
stc
xor
push
push
mov
adc
push
adc
sub
push
xchg
call
ficom
sbb
pop
push
popf
push
or
pop
loop
push
dec
dec
and
sub
inc
daa
pusha
push
imul
push
add
jmp
das
jne
or
or
xor
imul
inc
sar
movs
pushf
imul
sub
xor
dec
ror
ds
cmp
push
adc
enter
adc
aam
ins
dec
xor
adc
icebp
or
cmp
clc
push
loop
mov
sbb
cli
je
mov
or
add
aas
fisttp
push
push
sahf
push
push
aam
or
and
sbb
pop
out
or
mov
xchg
cs
cmps
lods
ins
dec
lods
sbb
or
rcr
add
(bad)
push
inc
int3
push
pop
nop
push
sub
push
inc
push
call
pop
mov
dec
daa
movs
inc
and
adc
nop
push
enter
cmp
push
add
daa
dec
dec
pusha
mov
push
add
mov
test
sub
cdq
inc
sbb
pop
sbb
xchg
rol
push
and
bound
pop
push
cmp
cmp
push
adc
je
lods
adc
adc
mov
fsubrp
mov
in
fisttp
push
push
xlat
mov
daa
push
in
adc
xchg
pushf
pop
sbb
adc
jns
adc
mov
jmp
push
jo
pop
sbb
adc
push
adc
pop
sbb
fcmovu
adc
mov
adc
sbb
adc
jmp
fnstsw
pop
outs
inc
sub
mov
sbb
cli
pop
ret
push
dec
push
mov
movs
mov
and
ins
dec
jb
stos
test
sub
add
mov
test
pop
shl
adc
and
sub
push
lods
and
push
gs
xchg
dec
imul
mov
jg
xor
xor
test
sub
outs
push
pop
retf
mov
inc
cmp
jno
and
or
outs
mov
pop
and
add
les
lods
ret
call
or
aad
jbe
pop
(bad)
push
mov
nop
or
jmp
mov
addr16
and
xor
pop
push
outs
pop
adc
push
(bad)
add
sub
dec
mov
data16
jg
dec
and
sub
shl
or
mov
pop
lock
push
xchg
neg
aas
cmp
add
cmp
adc
jo
or
movs
xchg
mov
xchg
adc
es
xchg
popa
mov
push
adc
inc
adc
and
je
mov
xor
mov
push
(bad)
jbe
inc
popa
adc
pop
adc
adc
inc
add
sar
rcr
ret
adc
inc
sbb
push
fbld
dec
add
xchg
and
sti
cmp
std
inc
mov
pop
push
add
(bad)
mov
ins
or
xor
and
mov
jnp
and
add
add
dec
cs
test
push
xor
mov
adc
mov
push
dec
pop
xchg
pop
add
jo
retf
jg
pop
mov
pusha
cmp
pusha
(bad)
or
push
test
das
xchg
je
popf
mov
pop
clc
int3
hlt
mov
jb
jb
xchg
test
push
dec
popa
jno
add
test
jge
or
xor
test
aas
add
lods
push
pop
in
ret
push
inc
pop
or
mov
adc
aas
inc
and
or
(bad)
les
adc
or
inc
xchg
or
adc
jb
imul
dec
xor
sar
push
call
inc
call
adc
inc
or
in
cwde
sbb
add
push
inc
or
push
pop
inc
mov
rol
sbb
add
es
or
jns
and
add
jge
cmp
retf
ins
cs
(bad)
(bad)
sub
inc
xchg
out
aad
bound
cmp
aad
xchg
mov
push
sub
push
xor
push
push
stos
xchg
ds
adc
mov
nop
out
movs
ror
dec
bound
adc
movs
nop
xchg
sar
inc
mov
mov
fcomp
or
and
fsubp
das
push
icebp
sbb
je
push
mov
arpl
mov
jle
je
push
test
dec
jmp
mov
mov
push
movs
jns
lock
mov
movs
popa
jnp
dec
push
push
adc
jmp
adc
jecxz
push
dec
and
movs
enter
mov
mov
sub
fwait
push
mov
(bad)
or
and
dec
pop
shl
add
jp
movs
movs
retf
nop
add
fstp
sub
lock
popf
es
(bad)
(bad)
addr16
or
add
and
add
add
mov
outs
(bad)
mov
push
neg
ret
and
dec
into
jge
pop
ins
cld
jmp
iret
push
mov
add
push
or
and
rol
nop
xchg
mov
out
out
xchg
xchg
mov
scas
sbb
int3
lock
add
cmps
and
ret
fsub
inc
push
or
int3
mov
cs
sub
test
jne
fcomp
sub
xor
or
mov
and
sbb
cs
adc
xor
cmp
je
jne
adc
jge
sub
ins
xchg
push
inc
je
jb
iret
mov
sar
mov
je
push
push
pop
and
arpl
xchg
push
push
mov
push
ret
(bad)
out
dec
(bad)
sub
add
ds
sub
pop
inc
adc
test
not
jb
cmp
xchg
pop
std
add
arpl
les
xchg
data16
mov
sbb
lea
dec
leave
add
or
jns
and
jmp
mov
stos
(bad)
call
xchg
movs
fcomp
(bad)
in
into
push
or
lock
aad
ds
cmp
add
enter
pop
push
inc
add
add
xchg
or
imul
mov
and
mov
mov
mov
jns
mov
and
xor
pop
mov
in
mov
fcom
xchg
test
test
push
sbb
mov
nop
push
mov
xchg
out
cmp
xor
ror
enter
loope
loop
mov
xlat
and
jg
leave
inc
xchg
pop
add
jo
ror
lea
pop
fs
xchg
or
or
nop
imul
inc
and
cmc
xor
pop
aaa
dec
and
fisub
mov
adc
xchg
fsubr
xor
aaa
add
xchg
pop
push
add
cmp
push
sbb
mov
sub
into
and
imul
mov
fs
mov
ret
dec
inc
fs
cmp
xor
mov
aad
test
jg
mov
test
sbb
lods
xor
adc
jo
sub
add
sbb
add
out
add
xchg
pusha
pusha
push
xor
add
rcr
cvttps2pi
loopne
repnz
or
dec
mov
pop
ja
repz
loope
daa
sub
enter
fsubr
mov
xor
xchg
rol
add
mov
mov
inc
jg
jae
pop
jmp
lds
add
sub
push
dec
xor
adc
mov
xchg
push
enter
idiv
mov
sub
cdq
aaa
xor
cmp
sbb
adc
fisttp
and
test
adc
pushf
jge
neg
cmp
push
push
fistp
mov
xor
jl
sub
in
and
sbb
loope
mov
and
or
rcl
enter
add
sub
sub
mov
scas
gs
add
mov
push
push
adc
add
jbe
cmp
push
inc
(bad)
movs
ds
jge
dec
dec
mov
push
push
retf
dec
pop
or
dec
hlt
retf
pop
jmp
out
lds
daa
jo
xor
(bad)
sub
icebp
ficomp
push
jno
loopne
es
lods
sub
loope
(bad)
dec
add
or
mov
add
add
mov
add
shl
xor
mov
cmp
leave
mov
mov
pusha
inc
dec
cmp
lods
call
inc
dec
pop
mov
add
pop
fdiv
fs
call
adc
js
add
xor
rcl
jmp
and
pusha
mov
ret
aam
sub
push
xadd
movs
int
sbb
push
addr16
inc
add
in
fiadd
leave
neg
adc
push
into
jle
dec
cmc
stos
enter
stos
jle
daa
inc
fmul
ret
enter
enter
shl
add
adc
bound
dec
and
sub
imul
cmps
or
xor
sub
dec
pop
mov
jns
outs
adc
sbb
xor
sub
and
mov
push
adc
and
mov
fiadd
sub
adc
mov
or
sbb
sub
test
retf
popa
dec
lds
and
in
lds
or
pop
call
loopne
push
cmp
sub
push
push
lods
xchg
or
and
cmps
dec
pop
push
pop
fs
daa
test
push
add
arpl
add
inc
or
mov
mov
in
add
sub
push
retf
shl
xor
xchg
jb
lods
retf
bound
into
(bad)
push
inc
mov
sbb
cmp
fs
jle
mov
sbb
mov
push
pop
gs
pop
jbe
push
or
push
dec
faddp
aam
pop
sub
fadd
sub
jo
inc
fstp
(bad)
mov
add
test
adc
(bad)
dec
mov
mov
add
push
daa
pop
sbb
push
jmp
add
jecxz
imul
push
dec
inc
and
outs
sahf
lahf
aad
nop
dec
rol
dec
inc
mov
inc
ins
ret
in
xor
push
adc
add
loopne
push
test
or
les
sub
jbe
lods
jne
mov
push
push
pusha
ja
dec
and
or
loope
jmp
lock
xchg
jae
aaa
je
add
mov
add
sbb
mov
addr16
jne
xchg
dec
cmp
test
out
mov
outs
rol
inc
jl
rcl
ret
test
jno
pop
or
in
test
pop
rcr
scas
sub
pop
pop
xor
jmp
ror
mov
xor
or
sti
and
inc
mov
call
call
xchg
add
mov
cmp
jnp
cmp
je
cmp
sub
dec
and
and
je
js
inc
push
mov
movs
je
dec
jmp
mov
das
push
popa
ret
push
push
cmp
mov
inc
mov
cmp
jo
push
or
inc
imul
ret
repnz
xchg
or
pop
mov
mov
lea
pop
popa
loope
inc
or
js
fisttp
sub
lea
push
mov
in
dec
je
add
or
jp
mov
xor
scas
lock
jp
mov
jne
push
push
xchg
add
pop
retf
jo
outs
lods
clc
ret
pop
push
xchg
movs
xchg
in
inc
sbb
out
xchg
adc
fadd
xor
dec
sbb
fld
dec
push
retf
sub
(bad)
mov
sbb
xor
test
test
mov
adc
push
call
add
js
mov
mov
loopne
pop
and
in
xor
repnz
xchg
push
mov
ja
xchg
push
push
ins
imul
inc
push
push
inc
dec
and
in
sahf
pop
cmp
movs
nop
jbe
out
cmp
loop
mov
push
div
ficom
adc
test
outs
push
or
dec
inc
add
inc
or
add
ret
mov
xchg
shl
mov
movs
mov
cmp
inc
xchg
xor
mov
sub
cli
sbb
adc
ror
or
fmul
cmp
pop
mov
jmp
ror
mov
in
add
pop
jg
mov
loop
mov
inc
inc
stos
pop
aam
imul
jmp
pop
in
std
dec
ror
stc
out
xor
loop
push
int3
pop
lods
sbb
(bad)
std
imul
push
add
add
xor
or
jp
sahf
dec
push
in
in
imul
sbb
inc
mov
jne
mov
gs
mov
or
movs
ror
mov
jne
push
mov
and
fist
fsub
inc
push
or
sub
lea
push
movs
ins
lahf
mov
ins
ds
(bad)
pop
pop
enter
mov
jmp
push
mov
out
add
cmp
xor
and
lea
out
aad
test
cmp
mov
jmp
mov
mov
add
xor
movs
add
adc
inc
popf
inc
mov
data16
pop
adc
sbb
and
push
mov
cmp
xchg
push
nop
mov
inc
das
cmp
lock
dec
jmp
adc
ins
add
mov
add
sub
movs
retf
xchg
jg
sti
mov
sti
inc
(bad)
in
jbe
or
call
mov
mov
enter
neg
mov
or
mov
inc
lock
mov
jmp
dec
mov
and
lds
outs
add
dec
adc
sub
inc
fcmovbe
pop
inc
fadd
adc
std
and
(bad)
pushf
or
mov
ds
mov
or
or
sbb
ss
add
or
or
icebp
add
jl
pop
js
jp
or
dec
inc
shl
pop
jae
inc
push
or
fs
sbb
cli
pop
xor
push
cmp
add
jecxz
xchg
dec
icebp
mov
sar
and
mov
shr
dec
mov
dec
push
jbe
push
mov
cld
sub
iret
je
jmp
(bad)
jbe
xchg
xchg
repz
rcl
lea
or
(bad)
fbstp
retf
add
mov
retf
cmp
jle
sub
dec
or
and
add
inc
and
dec
sub
push
dec
dec
pop
xor
loope
xor
xlat
mov
cld
inc
imul
xor
or
mov
mov
retf
movs
inc
rcr
adc
mov
add
mov
mov
movs
movs
nop
(bad)
outs
ror
or
adc
mov
pop
nop
sub
lock
(bad)
jb
cmc
outs
adc
lea
inc
sub
cmp
(bad)
dec
lock
adc
retf
dec
xchg
jmp
(bad)
dec
imul
aas
mov
clc
cmps
sub
mov
push
out
rol
sub
dec
or
add
mov
sbb
ja
or
pop
jmp
adc
mov
inc
and
(bad)
and
add
xor
mov
xchg
xchg
lock
sbb
sbb
cmp
pusha
inc
xor
pusha
cs
scas
(bad)
movs
jecxz
or
adc
loope
mov
leave
dec
xchg
test
jg
sbb
in
pop
inc
inc
pop
mov
gs
sbb
fmul
dec
mov
adc
mov
sbb
iret
(bad)
mov
loop
fiadd
jmp
pshufw
jmp
in
xchg
(bad)
pop
adc
dec
dec
mov
test
mov
pushf
cmp
xchg
add
mov
les
and
cld
fst
add
mov
call
push
xor
mov
pop
or
and
scas
sar
clc
or
xchg
ins
hlt
mov
ins
adc
fmul
dec
inc
fs
sbb
xchg
inc
fisubr
adc
add
icebp
gs
mov
xchg
push
gs
mov
in
mov
mov
adc
pop
js
and
cmp
int
cmp
shl
jl
test
fistp
ins
add
cmp
mov
mov
les
cmp
clc
es
sub
fstp
push
rcl
shl
adc
pop
jle
mov
add
ret
mov
jbe
sub
sub
cvtdq2ps
into
add
enter
aas
inc
or
stc
and
stc
xor
push
jle
jl
inc
dec
xchg
out
jle
xchg
iret
or
xor
ror
dec
push
retf
xchg
or
jl
arpl
retf
cmp
adc
mov
daa
mov
imul
inc
or
push
inc
lock
xchg
enter
xor
mov
pop
xchg
clc
inc
and
(bad)
mov
call
pop
xor
xchg
fs
add
mov
fs
and
push
(bad)
(bad)
add
out
inc
dec
sbb
inc
push
cmp
rol
fadd
xchg
and
pop
call
out
jecxz
fnstenv
mov
mov
and
mov
pop
ja
in
inc
int3
sbb
dec
dec
jns
scas
mov
outs
xor
push
xor
sbb
(bad)
mov
add
jle
and
rcl
mov
and
es
cs
mov
jmp
ja
leave
pop
fsubr
sbb
pop
add
xor
xchg
cmp
ret
or
cmp
mov
pop
push
jmpw
and
ds
fs
in
aad
mov
and
xor
sbb
xchg
ins
dec
ins
mov
push
loop
and
lds
jb
dec
push
je
clc
sbb
mov
push
add
push
pop
and
lea
cli
jbe
jmp
add
jge
and
lds
xor
sub
popw
sub
cmc
rol
jo
xchg
movs
cmps
fsub
int3
add
cmp
lea
popf
test
inc
arpl
push
lods
sbb
push
inc
dec
push
jbe
arpl
je
popa
cdq
aas
nop
xor
imul
dec
aam
mov
ficomp
sbb
add
mov
ss
mov
out
mov
mov
jmp
sbb
mov
or
jmp
and
push
cmc
xor
adc
xor
dec
adc
and
xor
sub
inc
mov
sar
jo
imul
or
sub
jle
rcl
dec
jecxz
add
dec
push
dec
push
test
clc
push
xchg
pusha
and
mov
sub
mov
adc
inc
xor
add
lods
les
test
les
outs
ds
add
inc
mov
push
popa
lds
jns
cmp
les
inc
cmp
dec
dec
pop
cmps
or
imul
inc
neg
add
inc
(bad)
sbb
and
push
jmp
or
dec
shl
gs
jge
mov
ret
dec
fld
stc
push
push
jp
mov
sbb
cmps
mov
ret
(bad)
mov
inc
and
or
(bad)
xchg
ins
adc
cmp
jbe
pop
sub
jg
shl
sbb
loop
inc
xchg
scas
retf
and
sbb
jne
pop
mov
inc
pop
mov
fst
add
test
or
fdiv
adc
push
jle
xlat
mov
les
inc
imul
cmovp
clc
leave
adc
inc
or
cmp
cwde
cmp
mov
stos
es
cli
mov
push
sbb
xor
sbb
jo
add
sbb
mov
loopne
dec
cmp
jae
or
imul
inc
dec
in
outs
jne
jmp
ins
loopne
test
loopne
dec
repnz
xor
inc
sbb
in
dec
adc
outs
loopne
or
xor
pop
lahf
shl
int
aas
mov
dec
xchg
mov
pop
dec
or
inc
push
mov
add
imul
or
mov
sub
mov
xchg
addr16
daa
add
pop
and
lock
mov
push
in
add
pop
push
push
dec
sub
add
lea
lds
loope
dec
push
jp
push
push
pop
jne
adc
push
cmp
fsubrp
pop
inc
pop
cmp
add
clc
or
js
outs
mov
js
add
imul
movs
and
loopne
dec
sbb
dec
jne
jp
cmps
jmp
(bad)
dec
inc
add
push
pop
and
test
xchg
inc
adc
popf
mov
push
shl
test
cmp
sbb
das
xor
inc
sub
inc
push
mov
ins
lods
cmps
jl
cmp
inc
push
lock
mov
adc
sub
inc
test
in
inc
sub
scas
mov
sub
jo
sti
xchg
shl
push
xor
aad
test
push
dec
xchg
sub
push
shl
jns
push
and
sub
pop
cmp
dec
in
mov
and
push
jmp
div
push
dec
inc
add
dec
add
adc
into
sub
mov
retf
mov
pop
jmp
adc
retf
cmp
hlt
add
xor
pop
mov
cvtdq2ps
adc
cmp
dec
adc
and
push
xor
ret
int
in
jbe
mov
test
neg
nop
xchg
push
(bad)
test
inc
jo
push
shl
and
pop
mov
lea
aas
mov
dec
jb
fadd
xchg
sub
in
jo
retf
dec
lea
gs
add
hlt
cmp
ins
outs
cvtps2pi
push
popa
push
sub
dec
es
rol
and
loop
dec
mov
push
rcl
(bad)
(bad)
hlt
jmp
push
inc
inc
(bad)
mov
xchg
mov
or
iret
cmp
cdq
call
stos
push
call
and
sbb
xor
fs
add
xor
les
sbb
(bad)
das
and
push
imul
inc
sbb
jbe
push
push
add
aam
jge
push
and
jne
sub
add
or
gs
mov
xor
add
adc
fld
push
push
pop
test
sbb
sub
sub
cmp
adc
jmp
push
fs
test
xor
add
mov
add
nop
push
mov
nop
lods
dec
stos
push
in
das
clc
rcr
mov
jne
push
pop
jge
push
dec
mov
aam
rcr
and
cmc
inc
and
loopne
pop
nop
push
je
adc
sbb
dec
sub
inc
imul
cdq
cli
mov
or
je
push
adc
cmps
dec
jmp
pop
mov
push
hlt
mov
mov
or
adc
push
mov
xor
dec
push
adc
shl
push
push
sub
fldpi
shr
(bad)
idiv
dec
pop
add
mov
sub
sbb
pusha
(bad)
shl
ret
cmp
je
inc
ret
shr
jmp
sbb
pop
cmp
mov
pop
mov
jle
push
mov
gs
(bad)
imul
xchg
dec
pop
fld
addr16
xor
je
or
(bad)
mov
out
inc
sub
push
sub
sub
lods
sbb
sbb
vpaddusb
mov
xchg
xor
lea
push
xor
sbb
push
cmp
pop
cld
or
lds
sub
push
loope
inc
pop
inc
or
xor
pop
xor
jne
ins
idiv
adc
loope
int
sbb
xor
cmp
add
xchg
xchg
cmp
adc
and
jne
or
shr
jbe
or
aad
fidiv
add
xor
out
push
inc
lea
push
push
pop
sbb
fadd
inc
add
es
push
ss
mov
(bad)
and
jns
mov
jns
or
inc
adc
mov
mov
pop
fiadd
sbb
cs
xchg
cmp
add
int
outs
lea
sar
adc
shl
into
sub
sbb
ds
adc
add
or
sub
je
(bad)
test
sbb
ds
dec
jne
cmp
fmul
cmp
mov
enter
test
jbe
mov
pop
mov
int
aad
sti
jns
neg
mov
shr
xchg
rcl
add
dec
jo
dec
jecxz
mov
adc
icebp
hlt
sub
nop
mov
push
inc
adc
pop
sub
sbb
push
pop
xor
ins
retf
fimul
mov
in
(bad)
pop
out
jbe
leave
enter
ins
add
pop
mov
adc
sub
adc
pop
movs
or
push
retf
mov
ror
pop
and
jg
mov
xchg
add
clc
push
mov
jp
and
(bad)
repnz
shr
adc
dec
mov
add
xchg
repz
inc
mov
push
push
adc
inc
lea
ret
mov
xchg
jmp
xor
pop
js
mov
stos
xchg
shl
add
dec
les
mov
add
and
push
push
lahf
pop
fdiv
nop
add
dec
mov
test
mov
(bad)
lock
push
faddp
adc
leave
push
enter
bound
into
sahf
push
cmp
add
sahf
movs
or
sub
rcl
push
call
cmp
sbb
mov
jge
sub
jg
add
fmul
and
ret
sbb
clc
push
push
les
rcr
fisubr
fmul
fwait
adc
jl
xchg
test
adc
jge
and
add
call
jl
mov
ror
sbb
push
add
add
out
cmp
cmps
(bad)
push
aad
mov
adc
or
sub
push
imul
pop
mov
or
xor
clc
push
push
pop
inc
imul
adc
nop
sub
loop
inc
pop
cdq
mov
mov
push
push
xor
cmp
lods
xchg
xchg
dec
enter
bound
lods
rcl
xor
rcr
mov
pop
sbb
add
push
xchg
sbb
pop
inc
dec
lea
dec
ret
push
mov
push
ss
das
jbe
fwait
clc
mov
pop
adc
push
mov
lea
mov
dec
rcl
(bad)
ins
cmp
adc
das
mov
shl
fcomp
adc
ds
rcr
sti
movs
mov
fdiv
in
lods
cdq
test
push
call
mov
popf
js
add
jno
jns
jmp
mov
and
push
and
shl
stos
clc
popa
push
add
int3
loope
jmp
ret
rcr
cli
adc
je
jne
(bad)
jmp
inc
(bad)
and
call
or
mov
fcomp
popa
mov
test
pop
retf
ret
and
xor
sub
xchg
addr16
xor
std
lods
jl
or
push
shl
xchg
call
(bad)
xor
test
leave
mov
dec
inc
mov
in
fist
loopne
jmp
push
enter
and
movs
fs
cwde
ret
add
jae
ins
cmp
daa
sbb
scas
popa
inc
ret
push
push
loope
push
call
jne
sbb
pusha
pop
and
xor
cmc
call
cmp
add
stc
pushf
lock
scas
push
mov
xor
out
xchg
push
cli
or
mov
inc
jp
dec
cld
mov
int
jb
sub
lock
inc
adc
push
imul
dec
jge
push
or
push
push
push
xchg
adc
not
retf
and
and
or
std
mov
jae
or
movs
push
or
call
mov
enter
shl
retf
or
cmc
mov
push
mov
call
data16
loop
inc
into
ror
xlat
dec
shr
or
dec
stos
jmp
jo
sti
or
and
sar
shl
or
add
and
not
and
mov
aas
or
inc
pop
out
into
mov
ins
pop
cmp
shr
or
add
mov
push
(bad)
call
test
adc
mov
scas
(bad)
cmc
fisubr
sub
loopne
add
sub
lds
sbb
das
sub
xchg
or
add
(bad)
push
test
push
mov
inc
xor
xor
test
add
or
loope
cmp
mov
pop
cmp
push
aas
push
sar
inc
mov
sub
cld
das
cmp
mov
loop
out
pop
xor
nop
or
inc
xor
sbb
mov
or
mov
repz
mov
push
test
push
bswap
push
mov
call
adc
dec
pushf
or
pusha
mov
mov
cmp
cmp
cmp
(bad)
cwde
cs
lahf
fucom
and
nop
imul
add
dec
fst
mov
pop
lds
aas
adc
fs
push
and
jmp
pop
mov
cmps
movups
loop
pushf
jmp
and
xchg
pop
lock
lea
mov
push
push
in
or
jmp
fstp
and
inc
mov
mov
inc
or
fs
and
jmp
js
lods
cmps
repnz
mov
rcl
push
mov
xchg
add
je
and
out
push
jle
and
jl
pop
pop
adc
sbb
cmp
stc
cld
loop
rcl
stos
(bad)
mov
adc
dec
repz
int3
cmp
icebp
lock
mov
mov
or
push
pusha
and
ret
pusha
mov
push
ret
(bad)
xchg
jg
idiv
ins
push
adc
add
adc
ds
ret
lds
adc
into
jmp
sqrtps
and
out
mov
jmp
aad
xor
mov
sub
sahf
push
loop
rol
mov
push
cmps
sbb
jl
in
loopne
cmp
int
and
dec
sub
cmp
ins
cli
imul
jno
pop
aaa
ret
dec
loopne
repnz
xchg
test
mov
jp
call
push
int
into
cmps
stc
cli
aas
pushf
sbb
adc
inc
mov
push
loope
cmp
or
nop
das
fldenv
in
push
add
cdq
adc
sub
mov
adc
hlt
ret
dec
out
cli
stc
xchg
(bad)
sti
aas
cmp
pop
cmp
dec
mov
mov
push
and
push
(bad)
ror
mov
mov
xchg
shl
sub
aam
sub
iret
xor
jmp
(bad)
jmp
adc
cwde
fbstp
fdiv
into
xchg
loop
push
mov
xor
cli
mov
or
shl
shl
rol
cmp
pop
and
ins
(bad)
push
sbb
cmp
or
cmp
lods
das
mov
or
in
jp
inc
(bad)
and
(bad)
clc
lock
xor
fbstp
jl
jmp
imul
test
dec
scas
dec
mov
jl
xor
fs
cmp
aaa
pop
punpcklbw
jbe
mul
and
lds
fidiv
jo
jo
mov
imul
cs
xor
jle
sub
ret
ret
or
shl
push
cli
daa
pop
dec
adc
mov
in
cmp
aaa
jl
(bad)
xlat
cmp
xor
aam
lds
fbstp
sub
call
mov
jp
add
out
in
or
iret
or
add
push
cmp
aam
inc
xor
add
mov
jbe
cmp
in
(bad)
test
mov
cmp
pop
xchg
out
mov
into
sub
cmp
push
inc
int
stos
outs
push
mov
and
push
lods
(bad)
loopne
pop
jl
and
enter
aam
cli
ret
inc
ds
and
hlt
adc
mov
xchg
or
sahf
iret
imul
xchg
jmp
inc
push
or
sbb
xor
stos
add
cmps
repnz
and
adc
and
push
cmps
shr
arpl
add
rcr
ja
ret
pop
pop
gs
and
jg
fmul
xchg
int3
or
push
clc
mov
rcr
cwde
xchg
dec
jecxz
sbb
mov
push
push
in
rol
mov
fucomip
adc
test
inc
jmp
pop
cmp
push
dec
jle
outs
and
in
jmp
cmp
sub
inc
jmp
mov
repz
dec
adc
add
or
adc
into
cld
mov
and
stc
shl
jle
mul
cs
jmp
jle
dec
cmp
mov
dec
sbb
sub
cdq
pop
pop
push
ss
sub
add
in
inc
mov
movs
xor
ss
rol
loope
je
inc
pop
out
adc
dec
or
fisub
movs
sub
and
push
add
aam
mov
sbb
add
ds
sbb
inc
add
rol
cmp
adc
or
push
xor
loope
xchg
in
scas
jo
or
shr
push
les
jg
and
aaa
add
iret
shr
shl
mov
inc
ficomp
sbb
out
and
in
jp
xchg
ss
es
mov
jl
mov
add
mov
or
mov
fdivr
aaa
pop
jbe
xor
mov
sub
jecxz
mov
xchg
cmc
sbb
sub
mov
and
push
dec
imul
adc
add
test
ins
sbb
jb
pop
pop
or
fmul
push
add
mov
or
rcl
lahf
xchg
add
lds
loopne
cmp
mov
sub
js
and
push
sub
mov
sbb
push
jno
pop
or
pop
clc
aam
out
mov
push
mov
mov
loop
mov
fcomp
ja
pushf
pop
ja
dec
push
push
rol
dec
(bad)
nop
or
sbb
retf
pop
add
ss
inc
dec
cmp
movs
jl
xchg
inc
xchg
shl
inc
loop
lea
bndldx
retf
(bad)
push
mov
jae
inc
mov
mov
mov
sub
cmp
mov
push
rol
sbb
jmp
add
dec
add
xchg
pop
dec
jecxz
in
sahf
jne
or
mov
cmp
jae
lahf
xchg
shl
add
inc
xor
movups
push
loopne
inc
pusha
sbb
lods
mov
mov
inc
or
pop
dec
aas
scas
mov
push
adc
aad
adc
ins
or
add
imul
jge
loopne
push
cli
jmp
pop
test
cmp
test
cs
mov
test
lea
ret
cmp
cmps
add
popf
popf
xor
push
cmp
jae
pop
push
pop
call
repz
(bad)
or
xor
test
mov
push
and
mov
and
sbb
jecxz
outs
xor
fstp
inc
add
mov
cmp
shr
aas
fld
mov
inc
cmp
jae
or
inc
lahf
out
xlat
ret
test
rcl
arpl
loopne
lock
cmp
sbb
pop
in
dec
pusha
pop
xor
mov
mov
loope
add
push
adc
or
lahf
add
shr
pop
xchg
push
lock
add
adc
mov
lods
addps
cmp
and
xchg
inc
mov
pusha
jg
mov
mov
pushf
mov
je
ror
and
fistp
mov
imul
and
dec
or
ins
popa
shl
jl
dec
push
sbb
pop
mov
(bad)
jnp
push
jo
dec
jp
pusha
add
ret
sbb
into
ja
fwait
add
push
add
pop
mov
mov
dec
push
sub
mov
retf
pushf
imul
in
ss
mov
jge
test
ss
mov
fisttp
je
adc
sub
mov
mov
mov
xchg
xor
push
cwde
sub
aaa
in
(bad)
mov
dec
call
lock
xor
pushf
test
sub
test
push
ins
fwait
cmps
addr16
and
retf
shl
xor
lock
jae
ret
mov
lock
push
outs
ins
mov
test
xchg
mov
test
dec
push
stos
test
push
cmp
push
add
inc
je
cmps
ror
mov
and
lea
ins
jo
and
loopne
mov
scas
cmp
mov
ds
xchg
in
test
jl
test
loopne
or
bound
mov
outs
mov
(bad)
rcl
sub
jge
adc
pop
xor
mov
or
pop
xor
bndstx
push
xchg
lea
or
in
(bad)
aad
pop
and
jmp
mov
and
inc
adc
jbe
xor
add
aam
fmul
and
rol
fild
je
ins
dec
icebp
data16
data16
(bad)
cmps
pusha
test
adc
inc
gs
icebp
xor
cmp
loope
adc
int3
mov
adc
add
test
hlt
mov
jno
dec
lock
push
xchg
or
push
mov
fs
or
je
fs
or
cmp
outs
push
test
sbb
push
(bad)
push
sub
sbb
mov
xchg
inc
mov
sbb
shl
mov
inc
aaa
pop
lods
pop
cmp
and
cli
or
dec
add
add
and
fidiv
or
test
les
cli
or
imul
dec
loop
adc
xchg
sbb
sbb
jl
ss
ret
inc
push
aam
cmp
sub
lea
or
cmp
inc
mov
loopne
fdiv
(bad)
sub
test
jne
js
vsqrtsd
mov
mov
lock
gs
push
test
push
inc
lds
push
stc
bound
inc
dec
inc
push
in
lock
inc
mov
jmp
sar
adc
xor
dec
add
and
int3
(bad)
sbb
pop
int3
inc
inc
mov
mov
mov
or
add
mov
sub
inc
add
dec
jne
push
popa
das
xor
mov
inc
xor
adc
into
inc
test
inc
sbb
inc
push
jmp
es
rol
cmp
ins
sub
push
push
ret
and
pusha
pop
fs
lock
pop
clc
mov
jmp
rol
xor
inc
bound
shr
add
add
push
pop
dec
movs
add
test
fcomp
nop
mov
cmp
pusha
inc
and
mov
fcomi
dec
push
pusha
jecxz
(bad)
xchg
cwde
repnz
xchg
imul
add
pop
xor
add
shr
(bad)
sub
adc
les
push
mov
pop
sar
dec
cs
pop
js
fsubr
in
mov
lock
or
fs
sub
or
in
inc
dec
or
dec
cs
sbb
sbb
int3
aas
adc
adc
test
cs
pop
adc
das
test
adc
pop
ror
adc
add
jb
mov
pop
add
push
and
sbb
pop
and
shl
aad
jne
cmp
jg
and
push
add
nop
shl
add
xchg
and
int
push
mov
push
mov
jns
push
fisubr
cs
imul
(bad)
in
xchg
pop
push
mov
out
mov
push
mov
push
mov
lock
push
dec
cs
jle
jmp
scas
jmp
pushw
pop
(bad)
inc
pop
repnz
dec
dec
(bad)
inc
mov
push
ss
push
dec
cs
ror
nop
neg
push
adc
fwait
dec
loopne
add
add
fld
push
lea
xor
mov
sbb
xor
push
or
daa
add
gs
cmp
xchg
ret
or
inc
test
add
cmp
dec
add
add
adc
xor
bound
sub
pop
jl
dec
inc
stc
aaa
mov
adc
add
and
adc
js
cmp
sub
add
inc
push
xchg
jle
xor
pop
sti
mov
jmp
sti
test
sbb
inc
push
cld
push
jg
out
jns
or
xchg
adc
push
mov
sbb
or
lods
fs
inc
add
imul
dec
dec
add
in
(bad)
dec
lea
push
dec
and
mov
lea
outs
xchg
jge
sub
sbb
imul
push
imul
add
pop
ret
pop
pushf
lahf
in
pop
popa
int3
jp
sbb
fdiv
dec
jp
or
mov
mov
adc
jmp
sbb
jp
sub
adc
push
ror
arpl
jne
pop
push
push
mov
adc
add
adc
(bad)
or
and
dec
adc
or
jg
add
mov
mov
xchg
pop
xchg
sbb
pusha
ret
cmp
dec
adc
fdivr
xor
lea
rcl
cwde
sbb
mov
or
shr
inc
mov
jge
sub
push
dec
mov
push
and
sub
in
push
pop
dec
fist
push
add
adc
ss
pushf
test
fwait
xor
fisttp
add
nop
or
dec
mov
ss
or
movs
loope
cmps
dec
cmps
push
sub
sub
nop
loope
(bad)
pop
add
xchg
dec
push
pop
and
add
ror
adc
adc
les
pop
mov
pop
pusha
movs
inc
sbb
dec
add
mov
ja
(bad)
xchg
push
dec
inc
xor
and
push
mov
or
dec
add
push
xlat
adc
nop
test
pop
jmp
cmps
in
xor
push
xlat
sbb
cmp
pushf
cmp
in
enter
push
ins
loopne
sbb
icebp
call
pop
push
in
add
inc
cmp
pusha
add
je
inc
and
movs
je
stos
xor
cmp
push
jl
mov
test
jne
push
adc
push
push
ret
pop
rol
and
int
clc
or
or
dec
pop
adc
rcr
xchg
add
(bad)
shl
retf
call
or
push
shl
pushf
or
cmps
or
inc
mov
mov
cmp
loop
mov
add
fwait
mov
scas
inc
sub
pusha
aaa
stos
add
mov
int3
sub
lods
movs
setbe
add
cmp
mov
sub
or
sar
adc
mov
push
fimul
fisttp
add
test
pop
js
mov
popf
pop
push
das
push
push
cmp
dec
push
push
arpl
mov
or
xor
test
(bad)
jns
pandn
lock
pop
mov
dec
xchg
jne
repnz
jge
out
jno
and
popa
int
adc
addr16
pop
sbb
inc
ret
or
ret
cmp
inc
scas
push
jb
cmp
loopne
mov
cmps
push
lea
js
sbb
or
mov
jno
mov
jbe
pop
add
mov
mov
std
loop
bound
test
and
movs
push
jb
fs
lds
pop
add
adc
rcr
daa
dec
rcl
add
add
xchg
or
adc
or
jae
in
shl
sbb
mov
arpl
inc
fimul
lods
push
ds
rol
inc
adc
add
xor
mov
sub
inc
dec
sbb
mov
mov
push
outs
pop
fild
xchg
je
mov
les
jge
mov
pusha
adc
pop
or
jo
sti
xor
sub
rol
sub
or
es
jge
and
push
lds
pop
push
or
mov
mov
or
jg
int3
mov
adc
sbb
or
and
push
mov
add
sbb
adc
add
jae
add
scas
mov
stos
push
push
sbb
push
mov
xchg
mov
sub
mov
int3
mov
stc
rcl
jbe
adc
lea
rcl
push
mov
inc
loope
jge
or
fnstenv
jbe
nop
inc
push
outs
pusha
adc
neg
out
add
xor
jp
mov
pop
cmp
in
mov
fdivr
cmp
mov
mov
call
outs
enter
mov
push
jle
xlat
cli
adc
jmp
in
xchg
fucomip
sub
inc
or
jmp
inc
or
and
cmp
xor
lea
int
je
mov
xchg
test
push
ins
imul
or
lea
pop
mov
pop
mov
inc
push
add
jl
jmp
dec
jecxz
pop
leave
mov
arpl
and
ret
xor
wrmsr
jne
or
in
cmps
xchg
jmp
push
or
or
mov
inc
out
push
adc
dec
sbb
popf
push
(bad)
inc
in
arpl
inc
ret
fsubr
cmp
jb
lea
lds
and
cli
jg
retf
cmp
mov
mov
mov
cmps
hlt
or
ja
jg
mov
adc
mov
mov
pop
fmul
inc
push
fs
in
add
(bad)
int
lods
retf
cmp
jae
enter
jnp
add
xchg
mov
add
mov
pop
repnz
repnz
mov
sbb
adc
repz
push
out
pop
push
push
push
leave
rep
iret
xchg
mov
sar
fiadd
clc
push
cmp
dec
fidiv
das
inc
pop
ins
pusha
cs
bound
inc
push
test
dec
sti
mov
rcr
pusha
push
push
sub
mov
mov
shr
in
and
fdiv
shl
sti
sub
cmp
out
jo
and
in
push
sbb
xor
dec
in
inc
outs
push
or
or
inc
inc
push
push
xor
dec
sbb
cmp
push
mov
into
ds
fsub
fisub
add
sbb
cmps
ret
xchg
stos
pop
sbb
mov
imul
adc
mov
mov
inc
cmps
mov
mov
bound
sar
xchg
inc
adc
push
and
and
sbb
add
xor
sub
aaa
xchg
out
xor
push
ret
push
mov
bound
inc
adc
pop
(bad)
inc
nop
jmp
pop
mov
sbb
retf
and
loop
pop
mov
jp
adc
or
cmp
push
retf
fld
add
mov
add
cmp
xchg
ins
pop
dec
mov
xchg
adc
pop
dec
pop
lods
inc
push
and
retf
push
rcr
mov
cmp
dec
and
and
ror
pop
call
sbb
sbb
(bad)
movs
in
fwait
push
addr16
and
add
js
jns
or
je
das
xor
popa
js
and
pop
and
mov
stc
jmp
push
sbb
test
cwde
mov
lds
mov
adc
dec
add
hlt
and
add
das
bound
xor
lahf
fisubr
mov
dec
jne
sahf
ret
jae
sbb
xchg
mov
outs
add
test
aaa
sti
pop
and
pop
or
(bad)
jge
lea
xchg
ins
mov
mov
in
dec
lods
call
adc
test
ins
sub
popa
mov
mov
int
or
and
icebp
in
std
gs
je
sub
(bad)
pop
in
dec
or
xchg
jmp
adc
xor
add
dec
sbb
pop
dec
push
add
sub
lahf
mov
push
add
jecxz
pusha
cmp
nop
mov
add
ret
or
and
(bad)
pop
imul
mov
(bad)
ffreep
daa
test
jl
fnstcw
stos
rcr
(bad)
inc
push
scas
dec
(bad)
popf
adc
adc
dec
cmp
fcom
test
sbb
mov
cmps
adc
or
inc
cmps
lods
das
add
xchg
mov
test
push
xchg
fistp
adc
lea
je
rol
test
popa
inc
mov
cmp
pop
fwait
adc
add
inc
dec
xor
or
call
sbb
pop
test
pusha
pop
shr
dec
lea
inc
push
pop
pop
jo
mov
push
push
sbb
push
push
dec
scas
test
clc
es
in
dec
cmps
mov
or
clc
pop
pop
push
je
(bad)
pusha
xchg
sub
pop
ins
dec
push
sub
lods
add
rol
idiv
jb
jle
inc
push
scas
jl
enter
add
push
shl
mov
pop
cmp
sub
pop
and
loope
or
sbb
inc
inc
adc
adc
fs
shl
mov
jge
pop
xchg
adc
dec
adc
retf
add
ins
popa
pop
jmp
add
test
add
in
out
out
ror
adc
or
stos
cmp
leave
ret
jl
add
into
jns
or
das
sbb
dec
sbb
sbb
mov
xor
ret
loopne
add
sar
dec
jmp
or
pshufw
push
mov
xchg
imul
jge
pop
push
ror
loope
sub
push
xchg
mov
fsubrp
div
sbb
in
and
xchg
or
popa
repnz
or
fld
pusha
xor
add
xor
ror
fistp
cmp
or
inc
adc
sbb
fild
ror
sbb
ja
fisubr
cmc
daa
lock
xor
std
push
mov
sub
push
test
or
or
jmp
lock
adc
out
mov
aaa
jg
test
jle
cmp
je
fld
dec
cmps
inc
icebp
add
pop
cmp
jnp
inc
push
retf
or
push
pusha
xlat
imul
jg
add
add
dec
sahf
out
leave
push
int3
rcl
mov
mov
inc
sbb
fbstp
sbb
mov
fisub
mov
mov
or
inc
rcl
mov
shl
dec
cmps
and
add
mov
jl
(bad)
or
push
add
enter
or
adc
(bad)
sbb
add
lods
push
jmp
pusha
jns
icebp
imul
adc
cmp
adc
xchg
push
mov
fsubr
cdq
dec
fnstenv
neg
shl
inc
pop
and
pop
add
adc
pushf
neg
mov
mov
pusha
repz
fs
pop
jmp
retf
div
xchg
and
aam
sar
or
fs
test
adc
sub
fisttp
inc
jnp
dec
lods
xor
pop
cmp
and
mov
push
movs
loope
dec
adc
std
mov
not
(bad)
push
enter
dec
and
jecxz
lea
mov
clc
cmp
es
push
and
adc
lock
mov
sub
push
add
pushf
aam
pop
lods
dec
and
fwait
ins
or
or
xchg
sar
jecxz
popa
ja
test
sub
adc
popf
fadd
fs
outs
cmp
jo
movs
xchg
sub
fild
adc
sbb
mov
cli
pusha
je
mov
fild
movs
lea
adc
xchg
es
js
jo
add
push
sbb
dec
js
sbb
sbb
adc
outs
pusha
cmps
jge
(bad)
ret
sub
es
fs
add
xchg
sbb
jnp
push
or
cmp
aad
sub
sub
fidiv
mov
sub
push
js
sahf
mov
inc
xchg
mov
xor
popa
loop
mov
mov
or
jb
dec
xchg
nop
shl
push
mov
stc
add
inc
loopne
inc
je
adc
out
leave
adc
xchg
cs
dec
mov
in
out
push
add
cmp
push
sub
inc
xchg
arpl
sbb
icebp
cmp
cmp
call
cmps
cmp
ins
fistp
push
movs
test
push
lods
scas
scas
mov
rcl
lock
push
add
mov
aas
repz
push
cmp
popa
loop
ret
loopne
jb
ret
xor
add
adc
dec
push
mov
pop
repnz
pop
and
sbb
loope
aas
push
ret
pop
loope
sub
inc
push
leave
in
or
sub
icebp
ret
ds
je
cmp
sub
xor
lea
inc
repnz
loopne
and
pop
jle
pop
fcmovnu
dec
inc
icebp
xor
test
loop
hlt
test
(bad)
jmp
test
jnp
push
or
sbb
aaa
and
add
or
cmp
popa
add
xchg
pusha
jne
and
xlat
inc
push
lods
(bad)
xchg
cmp
lahf
and
arpl
iret
push
add
(bad)
inc
ror
xchg
fimul
and
inc
inc
jnp
xchg
sub
push
test
ins
pop
cmps
push
mov
sar
mov
dec
ret
mov
jmp
xor
pop
or
mov
xor
adc
imul
mov
inc
aaa
mov
repz
loopne
push
sub
mov
retf
icebp
fdiv
lahf
push
cmp
xor
push
jns
sbb
xchg
mov
enter
rcl
pop
ins
mov
cs
(bad)
jmp
fcom
loope
mov
outs
loope
pop
inc
push
repz
push
test
add
(bad)
rcl
push
call
loop
movs
in
cdq
rcl
dec
arpl
nop
mov
mov
push
push
movs
pusha
inc
sbb
xor
jbe
test
and
cmp
and
ss
or
mov
sbb
hlt
sbb
pop
les
adc
xor
(bad)
mov
adc
xchg
pop
test
js
mov
idiv
add
inc
inc
lock
jg
push
imul
push
xchg
jne
add
pop
test
je
inc
inc
and
dec
cmp
sub
pop
clc
sbb
test
icebp
mov
pusha
mov
je
fs
sbb
mov
mov
inc
inc
cmp
jmp
cmp
cmp
pop
xchg
jge
add
ror
inc
and
or
add
fadd
hlt
in
inc
jp
or
ins
bound
ficomp
or
add
lods
mov
jl
dec
imul
adc
fldcw
xchg
cvtdq2ps
xor
add
mov
retf
jmp
retf
hlt
out
mov
aad
sub
mov
dec
cli
sets
dec
and
std
xor
loop
retf
iret
ficom
jne
adc
jp
mov
cmp
test
das
mov
rol
(bad)
div
mov
push
imul
hlt
retf
and
int3
or
adc
push
or
push
adc
jo
pop
inc
jg
pop
out
retf
sbb
cmp
dec
jne
test
or
shr
ins
and
jmp
push
xor
sbb
and
adc
loope
sub
add
sub
sub
add
and
or
(bad)
test
or
sbb
cmp
add
jns
sbb
push
fimul
out
xchg
retf
jne
or
pushf
adc
adc
cmc
icebp
imul
pop
ret
pop
adc
lds
xor
jle
(bad)
aad
popa
lahf
pusha
dec
inc
adc
sub
inc
test
test
xor
call
pop
movs
adc
xchg
sub
inc
into
outs
adc
and
inc
std
jl
dec
mov
ret
rcr
xchg
lahf
daa
cwde
fidivr
ds
(bad)
and
or
adc
mov
xchg
into
jg
adc
xor
pop
push
mov
add
jno
and
cmp
add
popa
inc
movs
lahf
or
cmps
jo
jmp
pop
xor
add
test
pop
out
pop
shr
inc
test
popf
loope
xchg
xor
sahf
cs
out
push
push
pusha
pop
aam
push
dec
add
or
and
aam
ja
or
ret
add
add
push
inc
pushf
sub
call
jmp
or
sub
imul
xor
xchg
xor
and
xor
adc
pop
push
xor
mov
push
out
mov
push
cmc
add
aam
mov
push
retf
dec
clc
xor
push
push
in
mov
sub
lods
mov
sti
lods
ret
test
add
test
test
mov
out
cmp
xchg
adc
aam
scas
add
inc
xlat
les
out
sub
or
adc
pop
mov
retf
retf
pop
js
imul
mov
or
arpl
xchg
add
ins
sub
add
sub
sbb
sbb
dec
sub
test
js
inc
or
fs
stos
xor
jle
mov
push
leave
cmc
dec
dec
mov
push
add
mov
xchg
xchg
retf
loope
scas
push
add
push
test
retf
add
or
lea
add
and
add
jbe
pop
cmp
pop
mov
fs
lds
inc
pop
inc
sbb
mov
push
clc
shl
adc
(bad)
adc
cmc
daa
sti
add
cmp
aad
cmp
pushf
stos
ins
mov
mov
mov
sub
inc
mov
call
sbb
(bad)
or
mov
xchg
sub
add
daa
or
das
inc
add
dec
inc
add
push
jmp
aad
test
mov
push
sahf
inc
iret
pop
sar
sbb
aas
push
mov
mov
push
lea
push
retf
push
push
xor
push
int3
mov
int
test
ror
fcomp
and
adc
xchg
jp
sbb
lea
sub
push
mov
mov
or
dec
sbb
cmp
outs
inc
mov
push
pop
pushf
out
cmp
mov
add
mov
pusha
push
xchg
neg
xchg
in
xchg
add
add
jmp
fcomp
push
push
int
push
mov
cmp
jne
push
cmps
jle
cmp
sbb
inc
pop
inc
dec
cmp
jne
sbb
or
pusha
xchg
or
or
pop
fwait
enter
rcl
popa
and
popa
daa
cmp
lea
or
aas
je
loope
(bad)
lods
gs
jae
fidiv
jmp
cmp
jmp
dec
sbb
or
add
outs
nop
push
js
out
outs
loope
push
je
daa
sub
jno
add
xchg
add
mov
pop
loop
sbb
sbb
neg
ret
jnp
add
lock
cmps
pop
test
add
push
je
movs
fbld
adc
call
sub
aaa
stos
jae
inc
jg
pop
in
scas
sahf
inc
add
jae
dec
popa
iret
aam
test
daa
test
sub
push
outs
ficom
add
mov
adc
dec
cmp
and
jl
or
ret
sbb
or
and
and
scas
dec
adc
lahf
push
mov
jb
jg
or
loopne
dec
ins
es
mov
push
push
dec
pop
sbb
aas
adc
inc
mov
ins
mov
jle
into
ins
int3
fs
jae
mov
ret
outs
pop
movs
xor
mov
sbb
int
shl
xchg
add
scas
lods
retf
inc
add
int3
pusha
daa
ins
push
sub
and
ret
std
add
cdq
or
mov
test
add
mov
sbb
cmp
add
lds
sub
sub
mov
sbb
loope
mov
xor
sub
aas
cmc
fld
int3
dec
or
rcl
dec
ffree
pop
inc
cld
adc
enter
sbb
add
dec
push
add
mov
sub
sahf
pop
mov
add
stos
or
jge
jle
pop
dec
dec
aad
or
xor
cdq
sub
mov
or
xchg
dec
js
fdivr
mov
mov
cmp
pop
js
add
sti
sbb
and
add
push
jle
mov
daa
stos
adc
push
or
in
fisubr
pop
out
loop
inc
dec
jne
aaa
scas
test
retf
int3
lock
jo
add
sub
inc
pop
pop
pop
iret
dec
xchg
sbb
xchg
pop
mov
ret
ret
imul
sahf
cwde
sbb
bswap
sub
mov
and
adc
jb
pop
push
imul
xchg
xchg
mov
add
iret
push
fdiv
adc
xor
stos
and
mov
mov
push
add
add
in
add
dec
xchg
dec
dec
mov
mov
cmp
outs
repnz
inc
sub
daa
rcr
mov
xor
and
sub
or
inc
sbb
push
dec
xor
dec
and
not
jb
cmps
xlat
ins
or
mov
dec
call
inc
and
outs
fldpi
inc
and
mov
mov
add
shl
pop
push
sub
push
ins
push
or
ins
push
dec
out
sub
inc
mov
repnz
cld
jecxz
ret
pop
stc
add
(bad)
js
mul
ret
cmova
loop
in
push
out
shl
fmul
mov
nop
xor
mov
test
push
dec
aad
mov
lock
enter
sbb
clc
sub
mov
cmp
push
or
ret
ret
dec
mov
addr16
arpl
repz
cdq
fucom
rol
cmp
mov
mov
and
sti
add
es
mov
es
pop
fdivr
pop
shl
or
cmp
dec
push
ins
test
mov
dec
push
cmp
push
rcl
outs
mov
leave
hlt
shr
cmc
(bad)
daa
jne
push
fwait
xor
inc
add
xlat
adc
jmp
push
(bad)
inc
dec
mov
inc
and
jecxz
shr
xchg
out
pop
mov
xchg
sbb
stc
push
mov
adc
pop
jmp
sbb
int3
fimul
push
lock
push
jmp
sbb
push
rol
dec
jmp
lock
pop
inc
dec
fsub
inc
rcl
imul
sbb
or
dec
xlat
mov
sbb
stos
imul
pushf
cmc
or
inc
div
sbb
push
lods
stos
cld
xchg
pop
retf
fisttp
lods
adc
or
jae
in
push
cwde
rol
jg
sahf
ss
sbb
cwde
iret
and
sbb
jo
push
and
push
fmul
xchg
pop
dec
imul
outs
(bad)
imul
js
or
push
ins
mov
popf
add
loopne
sbb
xor
call
adc
ins
ins
push
(bad)
pusha
push
into
add
jecxz
loop
leave
fisttp
pop
push
lds
inc
jo
push
enter
std
adc
mov
sub
add
scas
mov
ret
push
mov
jl
cmp
jge
and
je
fmul
into
pop
bound
inc
and
cmps
mov
aas
cmp
xor
vcmpps
and
adc
adc
pop
out
adc
into
mov
rcl
ficomp
inc
cli
(bad)
mov
sub
push
js
mov
lock
pop
cmp
cmp
xor
movs
sar
std
pop
std
inc
add
fs
cmps
add
jge
inc
cmp
inc
jmp
or
inc
or
ret
push
dec
movs
jge
inc
(bad)
adc
(bad)
fsubr
dec
aad
mov
pop
ja
call
xchg
add
xor
ins
movs
jb
sbb
or
sbb
mov
push
cmp
and
loope
outs
and
push
lea
repz
push
inc
sbb
push
xchg
fiadd
pop
sbb
mov
dec
and
mov
cmp
into
inc
ins
cmp
add
fwait
push
jmp
sbb
mov
test
dec
push
je
mov
adc
inc
sbb
int
test
cmp
nop
adc
and
test
shr
mov
xor
ror
push
dec
push
pop
mov
mov
sub
enter
pop
dec
cmps
ror
sbb
aas
ret
inc
add
icebp
inc
add
push
lods
adc
xor
inc
lahf
mov
mov
push
mov
movs
mov
or
inc
pusha
xchg
fs
mov
push
je
jns
add
retf
sbb
(bad)
rcl
push
mov
stos
sub
rol
mov
aam
fs
test
dec
adc
jp
add
mov
add
daa
nop
inc
add
rol
aaa
mov
dec
cmp
xchg
and
xchg
in
mov
lock
loopne
and
loop
or
push
inc
mov
scas
add
test
xor
xor
shl
test
loopne
add
aad
outs
or
add
push
sub
add
movs
sub
add
cmc
loopne
mov
pop
cs
lea
jle
fidiv
fld
retf
sbb
push
mov
inc
fisttp
jp
shl
call
mov
cmp
imul
or
xchg
mov
test
sbb
fcom
pusha
sub
jnp
cmps
mov
in
adc
push
pop
out
loopne
(bad)
and
add
adc
pop
xlat
imul
add
popa
enter
fwait
rcl
test
ds
fcom
and
in
sub
lea
xchg
fld
xor
xor
shl
scas
outs
pop
sub
nop
rcr
test
retf
cmp
daa
lods
pop
and
jns
push
mov
add
sahf
dec
jne
add
push
jnp
inc
shl
pop
jecxz
sbb
pop
div
dec
push
jb
adc
sub
cmp
sub
stc
jae
lock
dec
scas
jne
xor
pushf
mov
inc
fdivr
call
or
rcl
push
jle
repz
pop
ror
cwde
dec
push
sbb
cmp
ins
adc
and
popa
push
fs
loope
ror
or
add
or
(bad)
inc
pop
xor
xor
or
loopne
and
push
and
iret
cmovs
fldenv
mov
pushf
cwde
sub
pop
pop
je
sub
mov
push
push
loop
push
sbb
and
data16
add
push
shr
dec
mov
ficom
jp
cmp
xchg
mov
call
sbb
lahf
xor
add
add
inc
and
aas
mov
mov
dec
dec
sub
mov
xor
test
xor
add
inc
sbb
and
jbe
xchg
in
addr16
add
pushf
out
sar
or
adc
mov
mov
push
sub
outs
jo
and
fmul
mov
pop
mov
jmp
inc
ins
push
outs
aam
xor
outs
cmp
jno
loope
mov
and
arpl
jle
adc
daa
dec
jmp
div
mov
push
add
adc
push
mov
jne
inc
cmp
or
add
jbe
sbb
fsub
dec
inc
ins
inc
push
popa
adc
loope
add
scas
int
add
and
pop
jo
add
adc
ins
add
mov
inc
or
rol
push
xor
cmp
sbb
sbb
or
in
outs
sbb
test
aad
pop
mov
aad
pop
add
mov
cs
cld
pop
ror
jg
shl
mov
mov
fnclex
into
mov
ds
pop
inc
aam
adc
mov
xor
pop
movs
or
mov
push
test
and
icebp
push
dec
rcr
jmp
jo
pop
pop
xchg
or
mov
pop
push
ret
push
adc
or
(bad)
or
or
inc
adc
and
mov
cmp
sub
(bad)
cmp
push
mov
dec
dec
ss
and
inc
sbb
(bad)
je
sbb
push
sbb
rcr
or
test
mov
adc
pusha
sub
jmp
int3
jmp
inc
sbb
pop
in
or
push
jns
in
pop
dec
push
sbb
inc
dec
sub
push
sub
cmp
sbb
aad
or
es
gs
xchg
popf
inc
sub
adc
(bad)
adc
cs
add
int3
mov
sbb
and
push
and
rol
sub
inc
add
movs
repnz
add
inc
inc
inc
xor
push
adc
and
shl
or
push
icebp
or
push
fadd
imul
jae
sbb
rcr
test
adc
popa
inc
jl
in
loopne
rcr
pop
mov
jecxz
imul
(bad)
jbe
js
jmp
lahf
push
mov
retf
add
in
dec
xor
add
or
cmp
loop
push
push
(bad)
mov
lock
test
add
push
adc
fld
es
push
out
push
pop
shr
pop
and
test
mov
loopne
jmp
pop
(bad)
jg
aad
add
lods
lods
or
aaa
pusha
or
pop
lock
frstor
sbb
lods
or
add
or
adc
or
test
pop
ret
call
dec
cmp
leave
arpl
jecxz
and
and
or
addr16
adc
push
or
mov
sbb
pop
les
mov
es
jl
adc
inc
cld
repz
ins
mov
mov
mov
or
or
test
adc
ret
xchg
dec
xor
in
add
iret
sbb
ret
(bad)
and
xchg
adc
sub
out
mov
nop
xchg
(bad)
scas
push
xlat
sub
out
inc
add
add
add
pop
inc
mov
inc
cmc
scas
mov
or
inc
aam
nop
push
dec
aam
and
pop
adc
add
inc
mov
push
add
add
sub
or
lods
retf
inc
mov
and
mov
mov
jle
push
and
cmp
sbb
adc
inc
sub
mov
cdq
xor
pop
dec
lods
ret
retf
imul
pop
cmp
adc
sub
daa
jbe
inc
fdiv
push
sub
lock
jne
sub
mov
sub
adc
and
(bad)
push
pusha
sub
mov
push
jl
sub
data16
or
xor
mov
aas
aad
dec
and
pop
outs
push
dec
pusha
pop
sbb
adc
push
mov
ret
mov
dec
add
cmps
adc
into
shr
sub
stos
jae
(bad)
(bad)
dec
cmp
sbb
ror
jmp
or
loope
add
nop
rcl
ss
pop
and
mov
sub
push
sbb
or
jecxz
jle
sbb
pop
data16
push
mov
(bad)
ins
addr16
sbb
mov
cmp
shl
pop
xor
iret
xchg
aaa
outs
cwde
mov
mov
adc
xlat
sbb
push
and
stos
movs
icebp
add
cs
mov
lods
or
sub
rcl
sub
xchg
mov
cmps
ss
call
push
mov
call
(bad)
cmp
mov
xor
mov
mov
xor
pusha
cmp
push
push
mov
push
sbb
es
outs
pop
(bad)
rcl
pop
mov
jp
cmp
(bad)
rol
push
mul
das
mov
inc
adc
inc
push
and
std
mov
sub
sar
cmp
aam
inc
setns
inc
or
das
jbe
sub
push
mov
push
push
pushf
gs
retf
xchg
and
cmps
mov
int3
cmp
add
icebp
inc
dec
cs
inc
jmp
fistp
loopne
mov
fcomp
add
add
or
repz
scas
fdivr
or
add
ins
sub
add
add
pop
(bad)
ss
pop
mov
int3
mov
lahf
xlat
ja
and
or
pop
and
and
dec
pop
push
emms
sbb
xor
cmp
int
push
add
ins
add
add
jbe
nop
xor
push
dec
adc
test
pop
movs
mov
xchg
das
dec
cld
mov
push
sub
call
or
lock
fidiv
into
dec
jns
mov
xchg
out
sbb
mov
or
or
stos
mov
pop
push
cmps
cmp
fisttp
add
jl
mov
inc
(bad)
mov
fimul
mov
adc
shl
and
add
push
push
sahf
movs
mov
push
inc
frstor
pop
inc
out
inc
pop
add
inc
jb
push
add
mov
sub
jae
sar
jno
(bad)
dec
clc
xchg
jb
movs
aas
lock
mov
pop
inc
fistp
inc
inc
mov
mov
sub
lods
sbb
jo
or
sar
mov
push
ret
push
jnp
mov
sub
fwait
lods
(bad)
les
push
pop
jmp
mov
jmp
in
fld
add
cmp
ror
mov
xor
xor
pop
cmp
mov
or
push
jmp
jge
push
popa
aas
fs
jmp
inc
sar
push
js
push
jne
sub
adc
xchg
pop
pop
and
rol
adc
test
cmp
mov
xlat
mov
mov
clc
and
adc
rol
movs
xchg
nop
jno
pop
test
popf
sbb
mov
pop
out
xor
ficomp
adc
xchg
stc
mov
xor
adc
mov
mov
leave
mov
pusha
cdq
arpl
xchg
mov
push
and
xchg
add
mov
adc
adc
lock
imul
inc
and
test
and
mov
and
dec
and
jb
dec
mov
xor
in
mov
xchg
and
inc
aas
adc
loope
inc
ret
popa
pop
sbb
mov
dec
or
adc
cmp
call
push
sbb
push
lea
lahf
sub
or
fadd
fiadd
mov
jb
add
inc
add
test
and
or
adc
lods
add
push
imul
mov
sbb
mov
cmps
movs
mov
mov
es
sub
mov
or
adc
(bad)
mov
adc
ficomp
xor
inc
(bad)
push
pop
cmp
sti
fisttp
dec
jne
dec
sbb
dec
xor
dec
loop
sbb
xchg
jmp
sahf
mov
out
mov
bound
mov
ss
push
jecxz
mov
ret
int3
mov
jmp
jl
jg
fadd
cmp
jg
or
jle
xor
mov
cmp
inc
pop
loopne
dec
pusha
push
xor
xchg
cmp
push
sbb
mov
js
sbb
pushf
adc
jg
cmp
(bad)
pop
add
rol
fild
(bad)
mov
daa
sbb
adc
inc
les
out
(bad)
out
(bad)
cmp
push
cmc
or
in
or
loope
push
in
sbb
sub
push
neg
popf
ret
dec
lock
xor
sahf
or
into
push
push
push
sti
sub
xor
in
xor
outs
sbb
pop
inc
or
sbb
add
sub
loopne
mov
xchg
or
or
mov
adc
js
rol
(bad)
adc
gs
or
add
jmp
cmovge
or
pop
out
out
inc
sub
push
stos
add
cmp
je
mov
stos
push
mov
mov
lahf
jmp
pushf
xchg
mov
(bad)
xor
mov
push
pop
sbb
push
jl
xlat
jg
lea
or
mov
jle
ja
clc
pop
pop
lea
das
int
jo
ret
es
div
add
sbb
dec
cli
add
stos
mov
mov
push
cmp
mov
iret
add
cs
fisubr
shr
repnz
(bad)
or
mov
add
cwde
sub
test
mov
js
stc
hlt
movs
test
jae
outs
jnp
sahf
adc
push
or
and
das
xchg
dec
mov
cmp
hlt
push
test
dec
pop
call
mov
in
xor
popa
gs
cwde
adc
ss
dec
mov
adc
or
pop
std
mov
add
into
rol
or
aad
mov
fisubr
inc
nop
dec
pop
add
mov
loop
fnstenv
adc
xor
inc
pop
stos
loope
jl
mov
dec
mov
jmp
add
jbe
add
fnstsw
add
pop
push
xchg
aaa
inc
or
pop
sbb
ret
push
and
add
int
pop
sar
fld
add
xor
push
push
inc
add
aam
lahf
dec
and
inc
or
int
ss
and
ds
rcl
dec
jge
inc
adc
enter
sub
pusha
add
jbe
daa
inc
cmp
inc
test
xor
stos
inc
push
or
rol
push
adc
and
ins
xor
(bad)
ins
adc
add
inc
inc
imul
adc
dec
dec
fisttp
dec
and
xchg
std
pop
in
inc
cmp
sbb
fidivr
dec
adc
dec
pop
jnp
cmp
adc
push
test
and
and
leave
loope
mov
pop
call
xor
add
push
sbb
movzx
xor
int3
ja
ja
sbb
jp
mov
add
pop
mov
xor
stos
das
mov
sub
cmp
xor
mov
or
cld
add
add
fsubr
loopne
pop
and
push
push
pop
and
dec
pop
dec
adc
xor
imul
or
add
sbb
jo
push
adc
sbb
mov
jmp
dec
jg
pop
stos
or
sbb
les
add
push
ret
sub
ins
push
jne
jae
sahf
dec
(bad)
rcl
add
mov
std
jo
inc
or
call
mov
cwde
pushf
popa
std
ins
adc
clc
call
jl
mov
sbb
jne
push
adc
jg
cld
or
outs
jne
pop
bound
sbb
xor
xor
and
cmp
outs
daa
jp
or
mov
or
cs
lods
xchg
mov
cmp
sub
cli
mov
dec
jle
push
push
pusha
mov
sbb
pop
adc
test
mov
xchg
pop
ret
push
pop
and
lock
mov
sbb
shl
aas
aaa
xchg
loopne
xchg
push
loop
push
sbb
(bad)
mov
inc
dec
out
dec
into
add
mov
push
add
(bad)
cmp
ja
stos
aas
push
cmp
jne
rol
arpl
shr
jne
xchg
mov
cld
sub
push
cmp
lods
scas
cmp
or
lahf
push
xchg
adc
jmp
add
out
rcl
add
lods
sahf
or
adc
jo
sbb
xor
add
cmp
jns
sub
add
and
cmps
in
push
dec
les
xchg
adc
push
or
add
mov
popf
rcl
jmp
and
fmul
das
xor
jl
add
add
jmp
xor
fimul
cli
pop
or
jns
cmps
push
popa
mov
jnp
pushf
push
lods
inc
xchg
push
aam
pushw
mov
jnp
lock
push
jle
adc
icebp
adc
add
push
mov
and
pop
sar
or
or
rol
fild
les
rol
xchg
jg
push
in
pop
push
je
mov
or
or
shr
mov
(bad)
stos
mov
sub
xor
add
jl
scas
mov
mov
mov
sahf
sbb
xchg
add
and
mov
cmp
arpl
js
je
or
test
sub
xor
mov
es
mov
ret
aaa
add
xchg
jb
inc
arpl
dec
add
push
sbb
cmp
pcmpeqd
movs
loopne
adc
in
and
repz
fstp
sti
push
in
fcmovne
add
inc
sbb
stos
sbb
nop
retf
add
sub
mov
inc
and
add
fcom
xchg
dec
lods
out
add
daa
fs
mov
jo
push
or
pop
mov
jg
push
ja
mov
mov
inc
xlat
gs
nop
add
ret
sbb
or
adc
xchg
aad
fld
cmp
ret
repnz
or
dec
jne
scas
stos
add
dec
add
or
into
gs
xlat
cli
xchg
loop
adc
inc
pusha
xlat
mov
lods
push
pop
push
cmc
xor
ds
adc
dec
je
cmp
neg
push
sub
dec
mov
cmp
loope
(bad)
cmp
cs
jo
inc
and
es
cwde
jmp
sbb
lea
mov
or
add
cwde
adc
jge
(bad)
sub
push
and
or
sbb
inc
cmp
inc
repz
leave
call
dec
cmp
inc
cmp
rcl
cmp
and
cmp
mov
pop
sub
mov
push
std
retf
pop
jmp
or
pusha
xchg
jo
xor
pop
xor
lea
jno
add
sbb
add
adc
add
lahf
sub
(bad)
lods
inc
loopne
sbb
je
loope
(bad)
hlt
inc
inc
retfw
or
sbb
inc
jmp
shr
push
add
adc
outs
sbb
xor
jno
mov
or
outs
cdq
add
outs
bound
mov
inc
je
aas
xor
nop
pop
nop
inc
adc
or
xchg
dec
les
orps
sbb
xor
cwde
mov
inc
lock
pop
pop
dec
imul
pop
les
sbb
bound
mov
movs
adc
xor
sbb
mov
mov
mov
enter
inc
sub
in
lods
sbb
repnz
xor
jecxz
ret
add
inc
xchg
shl
pusha
push
(bad)
nop
mov
nop
test
mov
pop
mov
mov
jmp
fwait
ds
mov
sbb
and
push
idiv
cvttps2pi
or
daa
mov
ins
ins
std
mov
mov
sub
cdq
(bad)
or
aam
push
xor
test
xor
sbb
or
lods
or
ins
sbb
mov
push
gs
jbe
pop
fstp
das
test
pop
out
sub
mov
(bad)
or
add
or
scas
inc
les
aam
jbe
dec
dec
dec
inc
lock
lock
pop
cmp
fcomp
mov
lods
stos
push
push
xchg
inc
cmp
adc
adc
fst
xchg
mov
fild
xchg
push
lea
mov
or
mov
fbstp
cld
dec
xor
inc
add
jmp
mov
jmp
and
jp
rol
push
pop
hlt
adc
push
inc
iret
jb
ins
or
push
fdiv
sbb
xor
loope
or
mov
sbb
cmp
cmp
jg
jl
out
lock
test
mov
xor
lea
adc
dec
jl
aas
cli
or
adc
retf
sub
jne
mov
inc
or
cmp
in
xor
pop
push
(bad)
push
adc
scas
push
fist
cmp
arpl
xlat
nop
push
mov
das
mov
pop
dec
sbb
and
adc
mov
adc
sub
jp
mov
ds
cmp
adc
nop
arpl
in
dec
fstp
pop
call
jge
addr16
mov
or
and
inc
sar
ret
pop
jbe
jecxz
(bad)
and
pushf
fs
data16
jp
pop
rcl
add
movs
pop
push
mov
dec
repz
je
inc
ret
and
dec
cmp
lds
in
sbb
sbb
or
adc
neg
sbb
add
jmp
inc
mov
cmp
mov
sbb
and
(bad)
clc
popf
or
mov
jl
imul
mov
jp
cmps
add
jne
(bad)
lods
or
retf
xor
sub
mov
mov
adc
inc
movs
jne
fist
inc
dec
or
xor
ficom
sbb
push
push
mov
fisttp
and
dec
pop
dec
xor
push
cmp
xchg
add
adc
test
or
dec
push
mov
(bad)
push
stos
xchg
or
push
adc
inc
jo
sbb
adc
gs
cmp
fadd
outs
sub
push
or
sub
je
sbb
and
or
movs
push
xor
add
push
arpl
and
inc
or
mov
popa
jne
sub
add
adc
(bad)
jns
mov
jmp
stos
(bad)
fadd
mov
jecxz
aas
mov
push
push
push
adc
xor
pop
fsubp
add
mov
sub
ds
push
xor
jo
adc
lahf
pop
inc
jbe
jne
rcr
imul
sub
and
mov
push
push
sbb
jecxz
jle
inc
cmp
sbb
or
adc
adc
sbb
sbb
lock
and
cmp
add
cmp
call
call
pop
int3
push
mov
pushf
scas
lock
pop
xor
adc
cmp
sbb
pop
loop
inc
mov
cli
pop
inc
push
cmp
inc
into
push
loopne
dec
push
and
ins
sbb
loop
popf
add
pop
pop
jae
hlt
clc
inc
movs
mov
loopne
test
add
push
dec
or
movs
push
adc
or
mov
cmp
inc
je
inc
(bad)
and
(bad)
or
pusha
std
js
jae
call
xchg
repz
add
adc
mov
lahf
cmps
ret
sbb
sbb
jg
sub
cmp
jbe
or
push
push
shl
pop
addr16
and
out
shl
jae
mov
cmps
ds
inc
je
adc
jle
aam
mov
pusha
out
ror
sbb
adc
movs
xchg
ret
ja
imul
jne
cmp
dec
adc
add
push
dec
rol
les
and
iret
ins
or
inc
mov
pop
aas
or
mov
xchg
adc
xchg
pop
jbe
ja
outs
or
loope
loope
outs
add
leave
popa
je
inc
adc
aas
add
cdq
xchg
lods
pop
adc
lea
lea
push
and
stos
cmp
add
mov
push
fdiv
ja
xchg
push
and
or
jle
fstp
pop
jns
inc
cmp
mov
push
ins
or
mov
cli
nop
add
and
iret
push
ror
lods
xor
sub
bound
dec
or
jb
into
gs
imul
pushf
push
or
mov
xchg
(bad)
ja
js
add
mov
jne
cmp
jb
jle
aas
shl
inc
and
retf
ret
sbb
and
je
and
jg
sbb
add
pop
jnp
(bad)
ret
push
adc
les
jp
mov
ret
dec
or
es
and
sub
pop
push
nop
js
dec
sub
sbb
add
inc
inc
push
mov
xor
aad
enter
mov
mov
ror
cli
xchg
cmps
ins
pusha
inc
jne
dec
inc
and
and
hlt
gs
and
push
add
nop
mov
sbb
lea
mov
jmp
or
test
jg
ret
cmp
and
in
mov
popa
stos
adc
enter
div
inc
pop
cmp
jnp
enter
pop
loop
inc
aam
mov
test
xor
int3
jmp
cmc
in
lea
dec
push
out
in
jl
push
add
or
push
inc
jbe
xchg
xchg
out
fmul
test
add
js
push
sub
dec
out
dec
(bad)
movs
mov
cld
pusha
lea
in
inc
cmp
pushf
lea
push
and
or
adc
push
sbb
or
pop
push
movq
out
jp
sub
in
sbb
push
cmp
cmp
ja
inc
push
jp
pop
sbb
call
sahf
or
loop
sub
push
in
fnstenv
push
sub
jbe
push
lea
test
jae
das
dec
outs
cmp
sti
outs
sbb
mov
push
jbe
(bad)
mov
xor
mov
mov
jae
cli
mov
in
inc
mov
or
adc
jle
mov
mov
sti
(bad)
or
mov
sub
sub
outs
mov
cwde
add
mov
dec
xor
jb
xchg
icebp
pop
inc
mov
and
jmp
mov
xchg
hlt
jne
push
mov
call
in
inc
popa
jmp
pop
movs
mov
pop
or
je
loop
add
mov
stos
inc
jmp
cmp
retf
ds
mov
add
adc
push
inc
std
mov
cmps
mov
adc
test
xchg
jno
inc
push
mov
test
and
push
xor
push
push
lea
add
or
dec
je
pusha
mov
loop
add
push
mov
mov
dec
xor
pop
push
lahf
sub
outs
and
in
fsubr
cmp
pop
pop
lds
js
push
lahf
std
jae
push
out
pop
or
lahf
fcmovnu
add
xor
sub
or
std
pop
dec
push
in
fistp
sub
pop
dec
adc
jmp
or
jmp
push
fcom
adc
pop
inc
mov
xchg
add
int3
leave
mov
inc
sub
in
dec
and
cwde
mov
inc
int3
fs
imul
ins
xchg
mov
pop
sub
dec
xor
mov
ret
push
cmp
sub
jne
inc
test
inc
push
push
cmp
enter
cmp
inc
xchg
add
loop
ss
cmp
xchg
push
sub
enter
movs
ror
out
fdiv
outs
xor
and
aas
cmp
cmps
sbb
call
jns
push
or
jl
aam
push
imul
push
jo
lock
enter
int3
adc
xchg
cmps
pop
dec
or
fs
outs
ror
in
fld
or
daa
jle
scas
int3
ror
push
jg
push
dec
xchg
repnz
rol
mov
push
cli
aas
push
add
rcr
or
inc
ror
or
sub
daa
push
push
int
sbb
xlat
or
adc
jo
daa
in
mov
int3
inc
je
scas
inc
jmp
bound
sub
mov
ret
pop
dec
push
sbb
xchg
sbb
add
sbb
sahf
push
jo
inc
sbb
ret
jl
inc
ror
hlt
lods
in
nop
loope
pop
mov
out
nop
xabort
jge
adc
(bad)
je
mov
mov
or
shl
cmp
jg
or
mov
sub
in
icebp
ja
and
add
pop
jl
mov
pop
push
stos
add
inc
xchg
push
add
jg
jl
dec
ror
dec
add
push
in
cmp
test
data16
cmovno
movs
lds
sbb
add
mov
mov
push
xchg
es
outs
js
sbb
xor
adc
(bad)
push
sub
mov
mov
gs
push
mov
or
sti
adc
mov
mov
xchg
fld
jbe
scas
inc
pop
dec
inc
pop
mov
pop
in
dec
movs
pop
imul
imul
cmp
jne
push
sub
std
cmp
jne
adc
out
dec
mov
jns
and
jns
xchg
fbstp
nop
icebp
clc
jne
cmp
add
cmp
jne
and
and
xor
dec
or
cmp
pop
jl
pop
push
cdq
pop
push
add
cdq
clc
push
mov
shr
inc
cmps
jae
repnz
sub
pop
mov
pop
or
ror
cmp
or
jnp
add
push
pop
lock
dec
fsubr
inc
jne
mov
or
jle
and
je
sub
imul
sub
adc
sahf
add
paddsw
fcmove
test
push
adc
dec
sbb
mov
je
sti
ja
pop
enter
cwde
call
jne
push
aaa
rol
ja
sbb
test
adc
rcr
or
pop
in
or
adc
sbb
pop
push
mov
(bad)
sbb
adc
xchg
adc
push
push
mov
(bad)
je
(bad)
jmp
mov
add
fdiv
or
cmp
out
ins
sbb
sar
ins
pop
sti
cmps
and
lods
nop
or
dec
jecxz
mov
mov
push
sbb
push
bound
je
or
mov
int3
cs
jg
ret
mov
pop
cmp
add
adc
lods
dec
call
sbb
cmp
xchg
dec
and
xor
adc
mov
xor
push
jl
mov
dec
shl
ret
inc
dec
and
cld
pop
test
mov
inc
cmps
popf
in
mov
dec
pusha
sahf
mov
sbb
lock
jbe
push
add
add
mov
inc
gs
lods
lahf
pop
jbe
adc
aas
sbb
imul
jo
pusha
mov
clc
jmp
je
push
dec
sbb
cmp
pop
sbb
or
mov
sar
mov
cmp
loopne
inc
imul
xchg
adc
lds
icebp
lods
pop
iret
mov
call
jl
nop
sub
jge
loopne
cmp
pop
mov
into
(bad)
cmp
rcl
mov
inc
xor
cmp
je
lods
and
jbe
inc
xchg
retf
lods
or
sbb
jp
pop
ret
lahf
cmp
ret
stos
fimul
sbb
imul
enter
xor
test
sub
rcr
pop
cmp
dec
mov
push
dec
outs
aam
or
adc
jle
imul
and
sub
dec
inc
jmp
push
lahf
adc
rep
jne
dec
sbb
xchg
mov
rcl
leave
js
fist
push
add
jb
jg
call
pop
or
jmp
popa
mov
dec
xor
loope
lea
mov
jmp
inc
sahf
leave
or
or
inc
addr16
mov
sub
sub
rcl
pusha
jnp
sbb
cmp
mul
sbb
mov
sbb
adc
mov
and
test
into
xor
sbb
sub
push
adc
dec
add
cmc
add
pusha
loopne
and
or
call
xchg
sar
and
or
mov
add
je
cmp
push
nop
push
inc
lock
cmp
sub
test
adc
or
xchg
test
inc
add
cmp
add
or
scas
or
std
cmp
inc
push
pushf
inc
je
mov
mov
call
and
and
bound
mov
or
into
mov
xor
sub
je
cmp
push
mov
inc
mov
js
repnz
xor
mov
nop
rcl
xor
push
jl
inc
add
xchg
pop
shl
xor
adc
xchg
retf
shr
aas
and
push
add
add
lea
popa
push
out
lar
call
lods
push
sbb
mov
xor
inc
push
add
loop
mov
pop
cmovp
jns
test
lea
or
pop
jmp
or
(bad)
rcr
ss
push
shr
pop
js
sar
sbb
push
mov
cmp
xchg
mov
shl
lea
mov
mov
fisttp
mov
mov
xchg
adc
adc
hlt
sub
sti
mov
push
sub
jne
sbb
sbb
leave
adc
cmp
test
(bad)
mov
lea
mov
in
lods
push
and
jmp
imul
test
push
adc
mov
cmp
arpl
sbb
or
sahf
mov
add
inc
(bad)
ss
pop
fsub
xchg
cmps
jg
ret
mov
xor
pop
(bad)
sar
add
cmp
pop
jb
jb
inc
mov
(bad)
aaa
lahf
or
add
mov
in
push
or
sub
pusha
pop
inc
dec
pop
dec
push
xor
jb
cmp
(bad)
push
ret
push
dec
je
dec
or
xchg
xor
mov
(bad)
adc
xchg
cmp
pop
aad
call
or
ror
xor
cli
cmp
jae
sbb
ror
nop
cmps
mov
push
and
ret
sbb
pop
add
inc
mov
data16
dec
arpl
aad
push
fdiv
inc
jecxz
cmp
add
js
adc
inc
out
lock
mov
jecxz
lock
sub
imul
and
add
mov
pop
sub
and
imul
and
(bad)
and
sub
outs
sub
mov
mov
retf
aam
dec
sub
lea
xor
dec
clc
inc
mov
mov
mov
mov
sub
cwde
sbb
test
cmp
ds
js
sbb
and
pop
shr
cld
jbe
sbb
xor
inc
add
inc
inc
mov
mov
cmp
out
cwde
inc
imul
inc
into
lahf
and
cmp
loopne
and
cs
mov
stc
setle
or
push
add
out
push
push
pop
add
xor
repnz
icebp
test
and
lea
(bad)
mov
pop
dec
jmp
and
or
mov
aas
test
test
loopne
mov
aam
inc
inc
jno
xor
cmc
lea
sub
arpl
dec
imul
adc
adc
iret
call
dec
xor
test
push
loope
leave
or
call
xor
mov
or
xor
pop
cmp
call
adc
nop
xchg
mov
bound
aaa
pop
jle
je
dec
mov
leave
or
mov
pop
mov
or
sub
cwde
mov
and
inc
inc
dec
or
(bad)
xor
adc
loope
and
sbb
fisttp
push
pop
mov
add
aaa
sbb
push
add
adc
dec
or
and
jbe
add
cwde
call
mov
shl
aam
add
ret
and
(bad)
push
add
lods
pop
lahf
dec
xor
xchg
and
popa
and
adc
sub
pop
mov
and
in
push
dec
sub
sbb
mov
sbb
pop
push
dec
mov
pop
sbb
inc
je
and
daa
mov
jp
adc
rol
sar
xchg
sub
daa
push
xor
mov
test
add
dec
addr16
test
push
fdivr
or
mov
in
inc
retf
adc
lea
shr
mov
and
ja
xchg
clc
push
imul
ja
sub
adc
xchg
popa
push
inc
push
pop
jl
adc
pop
adc
xor
inc
xchg
cld
jecxz
inc
dec
add
xchg
cmp
ss
enter
jg
push
wrmsr
pop
or
dec
cmp
rcr
push
xchg
mov
ja
cmp
ds
jae
push
outs
js
(bad)
sbb
fs
xchg
add
dec
sar
loop
push
mov
push
enter
cmp
ret
sbb
fprem
xor
adc
es
inc
mov
push
dec
jge
jmp
test
sub
pop
mov
and
dec
push
push
push
pop
sub
adc
push
xor
cli
xor
ret
sbb
std
dec
jne
xor
add
pusha
dec
mov
cwde
cwde
push
mov
and
fcom
(bad)
mov
pop
aam
xchg
xchg
inc
test
sbb
push
mov
test
and
pop
jl
das
sbb
ins
int
push
mov
test
enter
pop
lods
pop
mov
inc
inc
mov
(bad)
sub
dec
stc
fsubr
sub
and
push
(bad)
out
dec
or
ret
lods
mov
sbb
ins
adc
mov
xchg
scas
sar
add
fcom
bound
loopne
inc
(bad)
fstp
adc
(bad)
pop
push
inc
loop
scas
xor
add
sub
jo
add
fild
ret
inc
cmp
jmp
div
aad
hlt
inc
pushf
mov
add
or
fadd
jge
test
mov
sub
fs
xchg
or
or
cld
mov
mov
sub
lods
xchg
adc
bound
shr
lds
pop
sbb
add
or
sub
clc
jno
outs
add
popa
inc
jnp
inc
pop
jmp
cdq
or
add
mov
jbe
add
pop
add
jbe
das
push
out
mov
mov
sbb
cmp
jne
push
aam
mov
sbb
mov
or
bound
loope
cmps
push
xchg
add
cmps
pop
inc
xchg
inc
mov
pop
dec
sbb
addr16
sbb
inc
sahf
dec
rcr
clc
movs
dec
push
out
inc
dec
xchg
xchg
out
push
push
xor
jp
dec
daa
ins
mov
lds
inc
jl
nop
inc
call
ss
jnp
pop
mov
cwde
icebp
ror
movs
std
jl
jne
and
inc
push
sub
dec
clc
dec
jmp
cmps
fidiv
inc
in
sbb
jo
cmp
js
(bad)
dec
sub
xchg
xlat
inc
add
xchg
sub
sub
lds
gs
push
jno
adc
clc
call
xchg
imul
loopne
rol
or
add
loop
push
xor
jle
cmp
inc
les
adc
movs
in
jbe
add
mov
rcr
sbb
js
lea
dec
rol
jb
xor
in
inc
adc
lea
inc
adc
adc
mov
mov
rcr
int
imul
add
pop
jg
inc
xor
dec
arpl
jbe
pop
inc
mov
cwde
push
(bad)
les
push
mov
xchg
cmp
or
jecxz
lahf
push
loope
jo
sub
adc
dec
fs
push
and
or
in
nop
mov
cs
xchg
pop
imul
in
push
inc
fwait
pop
jns
and
test
xchg
xchg
jns
and
jno
or
test
pop
test
fisubr
mov
add
add
dec
or
dec
ins
sub
dec
inc
jp
rol
sbb
rcr
fldenv
pop
addr16
adc
and
adc
pop
ds
inc
mov
jo
sbb
dec
dec
pop
inc
test
and
add
sbb
mov
pusha
cs
mov
lahf
push
shr
push
pop
add
jle
ja
std
jl
fld
popf
shr
xlat
sbb
and
pusha
test
popf
add
xchg
cmps
dec
mov
pop
cmp
xor
test
pop
jo
out
rcr
pop
mov
cmp
jmp
jae
pop
mov
xor
mov
xor
shr
add
arpl
push
int3
jmp
adc
mov
push
dec
loop
mov
call
loopne
ret
sar
lea
ja
ret
dec
jmp
dec
or
call
dec
dec
adc
dec
(bad)
push
pop
jg
or
push
and
mov
pop
pushf
ss
cmp
cs
pop
xor
adc
add
retf
jae
je
mov
pop
test
or
add
cmp
sbb
mov
and
add
sti
or
mov
lods
pop
mov
mov
ror
jo
dec
loope
or
add
jmp
xchg
add
add
push
dec
inc
mov
ret
ins
in
or
xor
cmp
dec
or
pcmpgtw
inc
mov
inc
je
pop
mov
push
cmp
inc
pmuludq
(bad)
xor
out
or
cmps
mov
and
out
sar
fidiv
imul
mov
and
inc
shl
pop
outs
scas
or
call
dec
push
ins
data16
or
fcomp
into
push
ret
in
idiv
add
dec
mov
loop
adc
jmp
sub
xchg
dec
push
add
push
inc
add
(bad)
ins
lock
or
mov
fwait
adc
mov
stc
in
push
push
test
dec
or
loopne
mov
jno
in
je
add
lock
mov
int3
add
int3
pop
cmp
in
mov
ins
loopne
stos
imul
jl
sar
out
pop
and
iret
and
jns
mov
mov
adc
or
pop
add
or
jo
loopne
and
jo
test
dec
test
out
inc
sub
push
lahf
adc
aad
aad
test
enter
rcl
cli
xchg
out
fs
pop
test
ds
in
add
push
xchg
or
inc
add
cmps
ins
adc
mov
add
dec
or
xchg
ds
imul
add
mov
test
loopne
inc
test
aaa
imul
jle
ret
jp
inc
arpl
add
aaa
sbb
push
daa
sbb
inc
or
adc
mov
movs
rcr
xor
cld
xchg
(bad)
xor
mov
cmp
or
adc
int
out
jae
pop
xchg
add
mov
cli
adc
mov
ins
je
mov
lods
std
movsx
je
or
pop
mov
test
push
ins
add
std
jle
ror
or
inc
cmp
je
mov
loope
mov
jne
xor
neg
out
mov
(bad)
xchg
mov
mov
sub
sbb
(bad)
push
xor
push
xor
inc
jmp
je
mov
add
mov
pop
aad
mov
xchg
sub
jp
add
xor
jge
jecxz
adc
loopne
xchg
sbb
shl
cld
adc
mov
popf
repz
call
dec
lods
sub
cmps
cmp
inc
dec
jne
lods
or
adc
test
mov
lds
invd
jl
fwait
sub
repnz
mov
inc
adc
mov
lds
vcmpord_sss
sub
std
sbb
hlt
add
lea
test
adc
out
mov
push
sub
repnz
rcr
bound
je
pop
cmp
cmp
adc
or
mov
repnz
mov
aam
imul
add
cmps
xchg
pop
sbb
lds
cmp
xor
dec
or
arpl
mov
adc
add
retf
rcr
xchg
or
dec
cmp
jo
jge
add
mov
arpl
add
ror
pop
adc
enter
mov
shl
outs
ja
rcr
inc
dec
and
mov
dec
inc
shl
mov
inc
or
mov
imul
je
mov
jmp
mov
or
inc
dec
leave
and
cmp
cmp
cmp
lods
add
pop
or
shr
mov
ret
jb
jg
(bad)
test
inc
xor
mov
lahf
xchg
or
sub
and
push
inc
mov
ret
or
sub
rcl
or
adc
daa
jge
jg
add
ss
mov
jne
mov
mov
(bad)
pusha
push
shr
sub
lock
xor
sub
addr16
adc
push
mov
fisttp
scas
js
sbb
and
hlt
ins
push
mov
in
(bad)
sti
sahf
les
mov
inc
mov
pop
push
int3
cmp
adc
push
and
and
les
je
lods
sti
(bad)
fcom
xor
sub
repnz
js
scas
mov
mov
inc
ret
retf
mov
ficom
pop
push
inc
and
pushf
ficomp
and
pop
sti
cmp
rcl
jp
retf
inc
mov
and
shl
js
or
loope
xor
jge
ds
sar
rcl
mov
or
sar
add
and
inc
xchg
or
cmc
mov
push
dec
and
cmp
(bad)
mov
or
jno
outs
jmp
bound
add
xchg
test
jge
enter
mov
mov
inc
push
(bad)
cmp
push
lahf
add
fiadd
sub
push
sbb
fsubr
sar
std
and
ins
pop
nop
test
mov
js
mov
mov
icebp
jmp
jns
call
iret
push
ret
sar
in
ss
jnp
outs
adc
or
int
push
push
shl
add
gs
jl
icebp
pop
push
enter
or
pusha
js
and
cmp
lahf
mov
jg
xor
mov
loop
jae
loopne
inc
xor
xor
test
or
inc
xor
mov
adc
pop
or
retf
dec
cdq
nop
add
nop
push
sar
mov
mov
pcmpeqb
jmp
jb
std
or
je
add
sti
cmp
nop
mov
andps
addps
mov
jmp
jns
enter
cld
cmp
cmps
nop
sub
js
add
jne
mov
outs
and
fiadd
inc
sbb
(bad)
daa
mov
jmp
xchg
push
pop
bnd
scas
dec
stos
test
inc
fs
retf
mov
adc
jb
push
inc
xor
sbb
mov
sub
cmp
fisub
and
mov
adc
inc
or
rcl
ret
and
rcl
pop
loopne
add
cmp
add
add
call
sti
pop
xchg
add
fldenv
cwde
add
xor
mov
push
ins
mov
les
add
push
test
add
rcl
mov
dec
movs
pop
adc
bound
mov
or
or
scas
shr
push
sbb
jo
adc
js
iret
mov
enter
out
lods
dec
adc
lods
pop
clc
xor
add
cmp
push
ret
mov
push
test
fst
je
cmp
in
sub
(bad)
das
call
imul
sbb
ret
sub
shl
pop
or
jo
add
fild
cdq
jo
daa
or
(bad)
loope
adc
stc
mov
push
pop
aaa
test
retf
outs
loop
mov
or
fdivr
lea
mov
pop
jnp
cmp
je
xor
pop
mov
ins
out
fdivr
or
jmp
jae
daa
sbb
inc
or
push
xor
lds
je
adc
push
xor
fcomip
idiv
push
adc
pusha
push
pop
adc
xor
push
sbb
fld
cmp
adc
jge
sbb
xor
adc
inc
je
jl
adc
les
mov
(bad)
sbb
sbb
push
push
rol
jb
lock
dec
sbb
retf
xchg
pusha
call
adc
mov
ss
rcr
inc
and
add
adc
xchg
mov
(bad)
or
inc
sub
inc
adc
pop
jae
cmovb
inc
inc
mov
or
aam
loope
mov
shl
enter
sbb
sbb
outs
pop
mov
(bad)
les
pop
pop
cmp
setge
lock
push
pop
or
adc
mov
add
sub
in
push
inc
jb
push
inc
push
pop
shl
and
and
in
xor
pop
push
not
test
push
into
dec
inc
sti
leave
xchg
dec
push
jmp
xlat
and
stos
xor
mov
xor
out
and
dec
shl
xchg
dec
jo
cmp
loop
retf
pop
and
dec
add
jp
mov
push
jno
aam
mov
mov
lds
in
mov
and
xor
xchg
sbb
lea
add
sbb
(bad)
sbb
dec
(bad)
mov
mov
push
adc
or
push
or
dec
or
add
mov
or
inc
cmp
push
dec
lahf
xchg
stos
xor
sub
add
and
cmp
jo
jns
imul
and
ret
movs
inc
cmp
jg
fs
sub
cmp
adc
xor
xor
xchg
and
sbb
cmp
jae
mov
xchg
sub
jp
and
scas
and
mov
sar
ret
push
clc
ss
or
sbb
or
xlat
sti
push
add
xor
jp
push
loop
jmp
sub
test
push
rcr
je
test
push
or
mov
sub
adc
xchg
or
inc
xlat
sub
dec
and
add
dec
faddp
xchg
pop
daa
loop
fld
sub
cs
inc
(bad)
push
xchg
push
dec
inc
push
movs
enter
add
out
xchg
cmp
or
fbld
clc
or
mov
popa
shl
mov
adc
inc
and
xchg
push
rcl
stc
sbb
test
adc
into
movs
xchg
dec
js
mov
js
scas
add
dec
call
mov
sub
and
xor
xchg
dec
shl
add
mov
sub
jmp
scas
loopne
sub
push
dec
and
mov
or
lods
scas
xor
loopne
push
pop
inc
sbb
push
sub
sbb
fsub
xchg
dec
les
pop
(bad)
sbb
cmp
mov
sti
pusha
les
inc
jns
pop
jns
cs
stc
pop
mov
push
or
dec
add
shr
je
xchg
adc
js
inc
push
pop
push
test
inc
adc
stc
imul
ins
mov
(bad)
mov
inc
dec
push
fst
ret
cwde
push
cmp
sbb
jmp
cmp
xchg
push
inc
pusha
dec
rcl
les
inc
aam
xlat
dec
jle
mov
outs
add
sbb
ret
sar
and
jmp
jmp
jns
mov
inc
adc
in
and
retf
int
in
sub
add
mov
loope
mov
dec
and
stos
scas
sbb
dec
mov
mov
cmp
xor
push
scas
add
jb
popa
aad
xor
outs
dec
ret
add
outs
pusha
xor
shr
cmp
mov
je
sub
sbb
cmps
lock
rcr
push
nop
xchg
mov
addr16
adc
pop
dec
adc
js
jmp
xchg
ror
test
repz
mov
jl
inc
jl
sub
retf
xchg
mov
cmp
add
jg
icebp
call
out
js
cmp
(bad)
icebp
jge
pop
or
test
or
dec
test
jnp
mov
and
cmp
pop
pusha
call
(bad)
mov
test
out
mov
inc
inc
je
or
xchg
add
push
movs
mov
push
fild
mov
sub
popf
xchg
lea
lods
push
pop
push
push
and
push
pushf
shr
xchg
(bad)
hlt
adc
or
cld
mov
dec
inc
or
outs
xchg
push
jp
ds
inc
mov
inc
mov
push
or
in
or
ficomp
push
push
mov
in
mov
jo
push
inc
xor
mov
dec
test
push
push
test
(bad)
sbb
add
jecxz
inc
clc
jge
mov
inc
repz
lds
loopne
test
lods
les
sbb
and
or
push
push
aad
xlat
shl
pop
jo
loopne
cmp
push
and
not
and
int
push
mov
mov
mov
xor
inc
(bad)
mov
sbb
adc
in
in
jmp
pop
adc
adc
cli
inc
dec
call
cmp
ins
fs
jmp
and
sbb
sahf
sub
add
sbb
mov
pop
push
fdivr
loopne
test
sar
shl
cld
jo
in
adc
popa
sub
sbb
mul
or
ds
sbb
fidivr
pop
add
and
lea
cmps
or
push
sub
fcmovne
mov
fmul
fmul
fstp
jl
sub
fisttp
cwde
cmp
ja
xchg
aas
sub
pushw
mov
add
sub
push
pop
dec
xchg
sbb
adc
nop
fld
mov
pop
cld
cmp
das
jecxz
jno
ret
in
popa
sub
mov
imul
xor
mov
dec
pop
aad
pop
inc
in
sbb
mov
movs
jge
scas
ret
pop
push
rol
outs
jecxz
fucom
push
pop
push
cmp
cmp
in
pop
inc
pop
popa
push
push
daa
popa
xchg
dec
mov
je
movs
push
lahf
adc
mov
push
add
js
mov
dec
fcmovne
xchg
pop
les
cwde
cmp
adc
jo
shl
push
xchg
fild
je
push
test
fiadd
xchg
ins
movs
xor
jns
add
dec
mov
and
adc
add
pop
jo
outs
pop
mov
mov
pusha
test
cmp
inc
loopne
xor
jnp
pop
push
ds
xchg
sbb
inc
or
add
sbb
test
test
sbb
loopne
scas
or
icebp
xlat
cmp
xchg
xor
fadd
xchg
jge
dec
ret
test
push
mov
mov
push
ret
push
js
mov
mov
xchg
mov
daa
arpl
shl
(bad)
push
dec
aaa
test
pop
jmp
pop
lock
dec
ret
leave
push
add
inc
test
int3
popa
xchg
sub
sub
jecxz
(bad)
out
push
fld
inc
push
or
jbe
mov
sub
call
imul
add
test
jb
clc
xor
sub
sub
xor
xor
xchg
mov
outs
jle
test
dec
mov
clc
jbe
mov
push
ret
ja
enter
stos
lea
mov
sbb
inc
adc
adc
dec
add
sub
dec
xor
fild
xchg
mov
or
or
dec
jg
add
or
(bad)
cmps
hlt
push
xchg
pusha
fsub
bound
fnstcw
bound
jmp
inc
push
and
cmp
cmp
je
shl
ret
shl
push
cld
retf
stos
(bad)
std
push
xor
inc
in
xor
mov
ret
call
jns
imul
popf
cmps
enter
xor
js
inc
lea
jne
sub
arpl
loop
dec
push
jl
mov
(bad)
retf
add
sub
das
or
outs
sbb
dec
mov
out
add
jbe
add
adc
gs
jno
push
mov
xlat
jne
call
sbb
push
mov
dec
jmp
arpl
out
je
adc
cmp
push
pop
sahf
je
pop
and
adc
pusha
jo
push
push
and
xchg
cmp
aas
(bad)
pop
cwde
dec
mov
and
hlt
fist
in
jne
inc
mov
clc
mov
add
dec
inc
pop
and
pop
jp
les
(bad)
pop
sub
sub
aas
mov
pop
push
pop
and
ret
fbld
icebp
rcl
lahf
dec
(bad)
adc
mov
data16
aad
xchg
inc
pop
adc
or
push
pop
repnz
mov
dec
loopne
mov
sub
adc
(bad)
cld
add
pop
rcl
jnp
addr16
mov
pop
jmp
and
pop
sahf
inc
and
cmp
icebp
icebp
fwait
(bad)
cmc
push
popf
rol
mov
adc
mov
push
mov
sub
add
pop
mov
jb
xchg
jmp
aam
pop
jl
or
or
data16
mov
mov
mov
pop
dec
or
das
sbb
cld
jo
(bad)
adc
les
push
add
mov
cmp
push
repz
xor
icebp
xor
outs
fcomp
cdq
(bad)
cmc
push
and
aas
clc
sbb
aad
mov
add
sub
mov
or
jle
pushf
iret
add
popf
push
cmp
inc
mov
mov
cmps
jge
idiv
test
pop
sub
mov
dec
jo
stos
add
aam
add
xor
cmc
mov
addr16
pop
aam
add
sbb
in
icebp
scas
add
pop
pop
imul
mov
and
push
aas
push
cmp
aaa
int3
xchg
das
cmp
add
dec
ins
shl
pop
sbb
ja
shl
push
inc
mov
add
jb
js
test
push
fdiv
(bad)
inc
ret
mov
pop
mov
enter
or
into
push
ret
jmp
mov
js
jmp
xor
out
mov
adc
and
ror
or
push
jl
jge
sbb
ror
adc
sbb
out
fld
div
push
add
(bad)
adc
scas
xor
sbb
fs
mov
push
sub
idiv
lods
push
jmp
push
dec
add
neg
jne
inc
sbb
dec
jne
mov
mov
pop
jmp
movs
dec
or
push
(bad)
xchg
lea
cmp
cmps
cmp
push
mov
std
add
sub
xor
pop
add
inc
sub
ja
mov
xchg
mov
mov
sub
inc
pop
jmp
sbb
daa
jno
dec
clc
jo
gs
ins
dec
dec
cmp
or
ins
sbb
mov
add
add
dec
xor
in
mov
sti
add
jbe
repnz
inc
pop
mov
add
xor
(bad)
jbe
mov
push
jo
push
push
push
pop
and
call
inc
dec
jmp
je
outs
cmp
or
mov
mov
jnp
cmp
ret
lea
pop
pop
adc
xor
jle
mov
cmp
jp
inc
dec
jbe
ins
jne
outs
or
mov
shl
or
clc
data16
jmp
hlt
pop
sub
push
add
jnp
ins
adc
repnz
xchg
cmp
add
icebp
pop
mov
adc
xor
sbb
pusha
cmp
sub
mov
gs
sub
add
add
and
add
add
sbb
adc
(bad)
or
dec
dec
lea
fs
push
lock
cmp
add
movs
pop
daa
lods
xchg
outs
and
sbb
mov
adc
jecxz
sar
mov
test
imul
mov
sub
test
mov
jl
jne
jmp
(bad)
inc
sub
add
ss
mov
rcl
sbb
inc
ins
(bad)
cmp
pop
xchg
or
gs
dec
pop
push
adc
cmp
sbb
ja
out
or
or
xor
mov
cdq
pop
(bad)
popa
push
mov
pop
jbe
or
push
rcl
or
mov
add
loopne
aam
dec
pop
push
pop
adc
inc
pop
ins
xor
pop
imul
scas
sbb
fisttp
dec
dec
(bad)
mov
outs
pushf
fcmovb
sti
lods
sbb
adc
or
ret
into
and
outs
iret
fisub
add
push
jmp
mov
or
pop
adc
xchg
sbb
add
mov
aam
imul
cmp
aaa
push
jo
les
es
push
rcl
xchg
push
pop
push
shl
and
or
call
cmp
sub
xor
push
fbstp
inc
xor
and
sub
add
scas
or
xchg
push
test
push
js
add
inc
pop
popf
xor
dec
aas
add
cmc
loopne
lock
sbb
(bad)
push
data16
mov
rcr
add
add
mov
loop
inc
repz
fbstp
stos
add
mov
mov
stos
sbb
out
rcr
mov
push
cmp
loopne
ss
(bad)
push
bound
add
gs
sub
aaa
cmps
pop
repz
jne
mov
sbb
and
repnz
push
ret
push
cs
push
or
jecxz
xchg
cmps
sub
or
loopne
int3
(bad)
into
push
dec
ret
into
lods
sar
push
cs
test
or
xor
push
mov
inc
mov
push
cwde
dec
jne
pop
inc
xchg
and
mov
jl
shrd
xlat
retf
push
movs
(bad)
sbb
cmp
cmp
fild
inc
arpl
inc
dec
jo
mov
xchg
pusha
sbb
xor
mov
and
sar
cdq
mov
adc
mov
push
ficom
or
aam
push
pusha
pop
popa
or
add
sbb
push
or
dec
mov
rcr
xor
cld
inc
cmc
scas
pop
jns
adc
std
cmp
clc
push
(bad)
jnp
(bad)
std
or
test
sbb
push
sar
sub
sub
mov
push
sbb
and
jmp
out
mov
js
repnz
fisubr
pop
mov
fdivp
sub
jnp
mov
jp
cmp
cmp
add
or
jl
movs
inc
dec
dec
or
jp
dec
add
test
in
jle
inc
mov
xchg
jmp
inc
push
inc
outs
mov
xor
mov
in
dec
jo
sub
pop
sub
dec
aam
or
shl
xor
push
mov
push
stc
jle
lahf
neg
inc
push
push
xor
nop
jbe
jo
cmp
daa
inc
dec
push
or
adc
in
sbb
fs
sub
adc
and
in
sbb
mov
pusha
sub
and
dec
je
ret
sub
popa
jne
fiadd
push
mov
push
sub
xor
les
sub
jb
xchg
xor
popf
imul
daa
adc
xchg
ror
sub
test
adc
adc
jbe
xor
add
lds
lea
test
sti
dec
icebp
mov
sbb
dec
inc
lock
pop
repnz
xchg
pop
aaa
and
adc
(bad)
jle
pop
add
inc
jp
push
test
adc
fidivr
stos
mov
mul
push
inc
sbb
push
outs
xchg
fdivr
repnz
inc
cmp
xchg
pop
ret
and
and
stos
clc
lea
push
shl
adc
sbb
aaa
adc
pusha
cmp
pusha
imul
sbb
and
push
das
gs
nop
add
jmp
pop
xor
mov
and
adc
add
pop
dec
cmp
test
jmp
add
xor
mov
jle
mov
xor
(bad)
fild
sar
in
inc
mov
lea
add
push
xchg
imul
sub
push
inc
dec
add
pop
fisubr
cmp
push
dec
mov
shr
or
dec
sub
(bad)
cli
xchg
add
rol
xor
dec
(bad)
shr
adc
sbb
or
pop
and
push
sub
mov
or
adc
retf
add
xor
cmps
ficomp
xlat
cmp
adc
pop
and
pop
add
loope
loopne
xor
mov
mov
pop
jbe
lea
imul
xchg
push
xchg
push
jo
sbb
scas
es
pop
icebp
shl
add
inc
dec
lock
loopne
jns
jo
dec
push
add
xor
add
sub
cmp
inc
pop
shr
addr16
sub
push
cld
cli
adc
sti
pop
add
push
nop
mov
rcl
jb
fs
cmp
cmp
sbb
dec
add
pop
push
or
lock
loopne
popf
inc
add
dec
out
loope
aam
sahf
les
jg
sbb
cmp
mov
addr16
aaa
xchg
xor
jo
adc
add
lock
sbb
rcl
cmp
mov
sbb
lock
in
jmp
outs
add
dec
or
inc
push
or
retf
sbb
xchg
ja
add
mov
ret
(bad)
lods
dec
enter
jne
mov
add
and
add
push
jae
push
add
rcr
adc
ins
jg
nop
ficom
outs
(bad)
mov
add
dec
mov
sar
push
sbb
jl
call
jno
mov
rol
sub
jge
push
cwde
outs
add
xchg
dec
xchg
push
add
inc
add
je
and
and
mov
movs
lods
add
xchg
cmp
mov
sub
cmp
fsub
test
fisubr
jmp
and
popf
mov
fs
jg
call
mov
add
pop
call
add
je
fstp
xor
enter
gs
pop
sbb
add
dec
dec
push
inc
lea
mov
sub
fild
mov
ss
and
arpl
retf
dec
jl
xor
cmp
mov
push
push
lea
sub
mov
ret
mov
and
xchg
dec
pop
mov
fild
and
jp
ja
xchg
test
pop
shl
shl
pop
push
jg
aad
adc
mov
jne
jo
lea
jp
and
aas
sahf
and
je
push
mov
xor
mov
mov
sbb
ins
shl
movs
xor
lahf
je
test
jle
and
push
pop
or
test
movs
daa
fadd
sbb
stc
es
ret
jle
test
data16
jne
mov
inc
or
cmc
ret
lds
push
adc
push
bound
call
mov
rcl
push
add
shr
dec
dec
mov
call
mov
fld
fisub
pushf
cli
aaa
push
xor
test
ja
dec
mov
adc
movs
das
leave
mov
nop
mov
cmps
fild
add
sub
or
or
test
jl
adc
call
sahf
cli
imul
cmp
adc
adc
push
and
jbe
cmp
ins
push
mov
mov
push
mov
inc
pop
and
xor
mov
push
out
xchg
dec
jnp
in
call
push
mov
outs
mov
sbb
add
adc
sbb
fild
add
jne
jle
les
movs
sub
cli
test
mov
dec
mov
adc
mov
std
push
inc
dec
push
jmp
mov
mov
or
mov
dec
add
imul
imul
inc
mov
pushf
mov
inc
or
imul
aam
sahf
adc
adc
pop
adc
rol
std
cs
inc
mov
rol
inc
xor
jo
ficomp
shl
fidivr
fstp
inc
retf
pop
push
shr
icebp
fadd
popf
adc
xchg
sbb
inc
and
fsubr
inc
clc
cmp
add
cmp
push
xor
or
fwait
test
(bad)
cmp
dec
fisttp
xor
or
stos
adc
sar
sub
fcmovnbe
and
rcl
jo
dec
mov
cld
aas
add
mov
mov
pop
and
or
jo
fs
and
jne
sbb
add
(bad)
ss
loop
scas
rol
mov
shl
mov
mov
shl
sub
push
sub
div
fimul
fisubr
int
(bad)
pop
mov
or
jmp
mov
(bad)
jg
sub
jmp
cmp
jle
(bad)
cmc
mov
push
xchg
iret
js
sub
out
sbb
mov
je
mov
retf
jge
vgetmantss
pop
sbb
inc
pop
and
jmp
cmp
and
dec
jg
call
cli
sub
sbb
repz
cmp
pop
or
jg
adc
inc
out
add
retf
frstor
xor
fld
add
xchg
test
xchg
fstp
sub
out
mov
or
xchg
loop
xor
imul
xchg
ins
sub
out
fisubr
pop
sbb
push
mov
or
stos
xchg
mov
cmp
sub
push
sub
dec
jp
push
cmp
cmp
ret
ins
mov
pop
dec
pusha
push
jl
out
sahf
test
sbb
ins
sbb
js
xor
xchg
fisub
inc
cmp
sysret
add
stc
add
mov
pusha
fmul
lea
mov
push
xlat
test
lea
shl
test
push
adc
pop
jmp
or
pop
cmps
pusha
(bad)
or
or
mov
pop
push
cmp
call
jmp
jmp
mov
sub
std
xor
jne
bound
add
sbb
mov
adc
pop
xor
fdivr
cmp
cs
shr
jg
pop
push
sti
mov
cmp
mov
xchg
cmp
pop
cmp
into
les
xchg
jno
inc
iret
ja
ins
je
sbb
mov
test
inc
xor
fild
out
stc
inc
sbb
mov
adc
je
dec
jo
xor
mov
js
push
mov
ret
xor
dec
push
ud0
jo
add
inc
loop
ret
add
sub
ins
je
scas
push
hlt
test
and
push
jp
or
cmp
(bad)
call
inc
ror
and
movsx
xor
adc
pop
mov
cmps
add
retf
je
cmp
mov
dec
add
imul
cmp
pop
cli
push
sqrtps
push
add
or
(bad)
mov
xchg
pop
mov
adc
mov
enter
push
push
enter
ret
xchg
jl
mov
fsub
adc
cli
or
mov
cmp
jne
in
dec
xchg
fs
adc
and
adc
ins
lods
jo
adc
dec
mov
addr16
repnz
push
inc
adc
ss
adc
add
push
mov
jns
cmps
pushf
pop
mov
rcr
and
dec
xlat
push
push
jnp
inc
les
pop
inc
sub
shr
pop
daa
xor
fcomp
push
inc
xor
xchg
fs
iret
cmc
fidiv
pop
push
les
jo
shl
sub
inc
pop
(bad)
cmp
adc
or
adc
or
cmp
sbb
adc
popf
rol
inc
inc
ret
out
inc
lahf
std
pop
pop
pop
xor
(bad)
lahf
mov
popa
addr16
shr
sbb
sbb
cmps
sub
int
jmp
ret
pop
xor
test
pop
jbe
xor
adc
adc
cld
push
scas
mov
jmp
dec
mul
jp
jmp
jmp
adc
jne
cmc
(bad)
and
frstor
scas
mov
pop
mov
fmul
adc
loope
rol
push
jb
dec
ds
adc
sub
inc
push
add
add
mov
sbb
xchg
sub
sbb
jg
sub
nop
inc
push
xchg
push
or
inc
(bad)
xchg
dec
push
js
and
lds
data16
mov
mov
push
inc
outs
pop
mov
inc
add
idiv
add
aam
mov
push
sub
ins
xchg
ss
mov
push
push
ja
dec
rol
jle
add
mov
inc
xor
inc
add
adc
xchg
adc
push
xor
mov
mov
mov
mov
inc
dec
div
aad
icebp
pop
xchg
and
push
add
shl
xchg
je
adc
dec
adc
or
mov
int
and
jg
or
mov
pop
sbb
jne
inc
cmp
dec
sbb
jp
lods
add
(bad)
sbb
daa
movs
sub
or
or
faddp
lds
adc
mov
dec
rcl
loope
add
mov
mov
jge
inc
(bad)
xchg
or
or
or
lds
jo
dec
stc
jg
mov
sbb
loop
push
sbb
dec
pop
ret
test
cli
jg
cld
jne
shl
push
repnz
(bad)
dec
ret
cmp
ret
fcom
pushf
movs
js
xor
aas
push
fnstsw
inc
repz
bound
in
push
or
neg
rol
pushf
lods
jge
retf
fst
popa
jecxz
dec
shl
sub
adc
xlat
test
and
hlt
mov
sub
mov
push
pop
inc
push
out
mov
sub
lea
in
in
mov
mov
lods
push
xchg
inc
js
loop
daa
loope
xor
jg
shl
adc
adc
inc
out
push
push
xchg
inc
fs
mov
je
inc
mov
in
mov
dec
dec
jne
dec
mov
mov
push
out
push
dec
mov
pop
mov
pop
add
aas
mov
test
cmp
in
sbb
iret
aas
mov
pushf
sar
rcl
rcr
cmp
push
jg
add
je
addr16
add
add
inc
mov
jecxz
pop
fisubr
rcr
clc
sub
dec
xchg
fadd
jmp
mov
add
xchg
push
xchg
js
imul
inc
jns
imul
jmp
and
out
add
cmovge
push
clc
xchg
xlat
jle
mov
cwde
sub
xor
sbb
fldenv
test
add
jns
pop
add
cmp
js
sub
pop
xchg
add
cmp
pop
call
pop
push
or
jo
push
mov
add
pusha
and
iret
mov
(bad)
pop
push
and
js
je
inc
and
cmps
sub
dec
outs
adc
repnz
cdq
fisub
push
call
jne
es
jl
outs
call
push
xor
and
ret
jb
(bad)
xchg
ret
xchg
push
or
push
jb
sbb
mov
and
inc
cmp
mov
add
xchg
out
jne
mov
add
enter
fwait
in
xchg
les
mov
std
pop
jle
int
sub
add
sub
or
push
pop
mov
jge
dec
(bad)
adc
and
gs
sbb
xchg
add
fwait
mov
push
cmp
add
jnp
sbb
mov
or
add
sub
or
xor
adc
inc
mov
jne
xchg
mov
cmp
js
(bad)
mov
sti
jne
fwait
je
les
inc
cmp
pop
pop
movs
or
pop
bound
pop
pop
pop
xlat
or
xchg
cmc
adc
into
ret
daa
push
add
sbb
push
pop
ja
and
popa
push
pop
inc
adc
pop
jno
pop
lea
pop
push
pop
add
mov
sbb
test
add
mov
push
lahf
or
jle
jle
not
push
add
add
jp
clc
jmp
mov
jbe
ja
cmp
xchg
rcr
xchg
lea
push
xchg
jns
add
daa
push
inc
js
out
sub
inc
mov
dec
popa
in
inc
pop
pop
adc
addr16
or
mov
or
ret
jg
lods
imul
stos
fnsave
pop
inc
push
std
adc
es
call
icebp
adc
in
xor
inc
fcom
jp
push
add
cmp
xchg
add
loope
cli
add
inc
cmp
(bad)
sub
jecxz
dec
cmp
adc
jo
rol
test
in
(bad)
or
fst
ffree
loopne
and
cmps
mov
cmps
ins
jns
mov
lock
add
mov
ja
push
push
sub
dec
dec
cmp
gs
pusha
scas
loopne
outs
mov
lea
ja
push
jnp
dec
jne
in
mov
add
adc
add
sahf
inc
adc
jmp
sbb
cwde
xor
or
pop
jmp
xor
cmp
loop
add
mov
pop
js
popa
xor
repz
(bad)
(bad)
sub
ss
dec
dec
cmp
mov
lea
and
(bad)
jmp
popf
push
push
sahf
or
and
lods
jmp
add
cmp
dec
jne
lock
loopne
mov
pop
mov
aas
pop
mov
pop
and
xacquire
sub
push
cmp
inc
sbb
or
push
test
and
sbb
out
ins
aas
movs
pop
lock
push
mov
dec
ret
cmp
xchg
cmp
push
inc
popa
xchg
ds
clc
mov
mov
pop
add
mov
dec
loopne
dec
fcom
and
dec
or
and
pop
xchg
(bad)
jle
outs
inc
cmp
sub
jo
jmp
cmp
dec
je
push
xor
jle
mov
je
int
retf
jno
les
ret
mov
mov
xor
jo
cmp
and
cli
add
sub
scas
and
push
pusha
mov
bound
lea
xchg
xchg
mov
arpl
dec
push
lea
add
ins
sbb
pop
dec
and
aaa
inc
pop
adc
imul
or
out
ret
adc
add
pop
xor
inc
adc
arpl
mov
push
sbb
dec
out
or
test
sub
xchg
sub
add
jp
xchg
outs
push
scas
adc
in
push
add
js
add
push
mov
mov
js
and
leave
mov
add
fiadd
fsub
xlat
les
outs
xor
daa
sbb
sahf
cmc
push
shl
mov
xor
push
lock
jle
mov
dec
stos
enter
lea
xor
add
es
xchg
push
jp
lea
adc
sub
xchg
inc
cmp
xor
mov
jbe
jge
idiv
call
inc
lock
leave
and
mov
and
adc
shl
sahf
jmp
sub
xchg
mov
mov
add
mov
test
(bad)
sti
cdq
add
pusha
into
xlat
dec
pop
xor
iret
sti
ret
mov
movs
adc
push
cmp
or
outs
pop
test
inc
popf
or
pop
int3
mov
sub
jecxz
call
pop
xor
add
sahf
push
fbld
dec
je
fiadd
add
add
and
mov
add
inc
cli
cmp
imul
pop
mov
inc
jle
les
xor
mov
mov
push
js
les
or
mov
sbb
cmp
aam
sbb
or
mov
sub
daa
and
push
sub
cmc
adc
in
push
mov
sub
push
inc
stos
jge
xchg
outs
jb
rcl
inc
xchg
ret
push
adc
or
push
aam
cmp
push
mov
mov
sbb
pop
imul
jp
mov
push
ret
jle
add
nop
mov
(bad)
xor
repnz
pop
dec
fwait
mov
ret
scas
add
push
in
add
jo
mov
push
jnp
push
jecxz
push
add
xchg
dec
ror
jg
out
lea
repnz
sub
push
jg
mov
cmp
sbb
mov
aas
int3
(bad)
mov
cmp
cmp
xchg
sbb
lsl
mov
sbb
cmp
sbb
outs
mov
inc
sub
dec
outs
dec
adc
add
mov
clc
and
add
ror
ins
sub
les
sbb
adc
nop
pop
icebp
inc
xchg
pop
dec
jo
or
dec
cld
ret
in
or
lods
test
leave
jo
mov
in
call
push
add
sub
push
xor
mov
dec
mov
mov
(bad)
dec
sub
add
nop
inc
jmp
scas
jb
shl
add
add
(bad)
fisttp
adc
test
jbe
push
xchg
arpl
outs
popf
sbb
push
push
or
mov
xchg
arpl
jae
in
adc
retf
inc
xor
jo
add
sbb
mov
xor
ret
mov
sub
clc
aam
out
cmp
in
mov
lods
pop
jecxz
pop
loopne
popa
pusha
cwde
jo
xchg
add
cmp
int
mov
dec
aad
xor
mov
popf
sbb
call
ds
psrlq
pop
es
inc
inc
dec
addr16
adc
xor
lods
scas
mov
fs
adc
adc
mov
add
inc
or
rcr
rol
test
outs
pop
je
retf
cmps
call
retf
push
jo
add
(bad)
xor
outs
cmp
pop
xchg
imul
adc
push
xchg
addr16
pusha
xor
in
add
pop
adc
add
or
add
mov
lea
sub
dec
mov
or
mov
test
mov
retf
mov
rcl
dec
sti
arpl
dec
imul
inc
mov
mov
cmp
sub
sti
jmp
fldenv
push
push
inc
xchg
out
hlt
lea
or
addr16
lea
jno
inc
and
xchg
push
ins
mov
call
(bad)
loope
jle
loope
or
retf
ja
mov
iret
jmp
cmp
inc
adc
mov
repnz
and
inc
mov
xchg
iret
jmp
pop
sahf
gs
gs
sbb
inc
ds
or
sbb
add
and
adc
and
or
xchg
mov
xchg
mov
inc
add
mov
inc
xchg
jp
lock
jae
sbb
inc
add
lea
push
(bad)
rol
sub
add
mov
rcl
test
sub
lock
push
lea
and
call
push
popa
mov
fsub
lea
dec
clc
or
sub
xchg
rcr
mov
mov
pop
push
pop
call
xor
or
cmps
shl
mov
sub
adc
sahf
pusha
lahf
mov
lea
sahf
or
sbb
xchg
jl
clc
adc
adc
pusha
cmp
inc
cs
xor
aam
mov
add
not
pop
or
push
lods
mov
push
xlat
adc
inc
or
movs
ja
mov
xor
leave
adc
push
imul
shl
push
daa
test
aam
fisttp
(bad)
or
xchg
stos
imul
inc
lock
movups
and
(bad)
pop
imul
rcr
pusha
add
dec
xor
sti
push
adc
fist
loopne
cmp
adc
cs
shl
inc
aam
mov
or
and
adc
pop
pop
pop
fmul
sahf
push
sbb
sbb
dec
add
adc
and
(bad)
fcmovb
std
sbb
inc
aas
sar
loop
aas
lea
sar
inc
mov
inc
mov
inc
push
mov
jl
add
add
dec
das
in
fcom
dec
jns
sar
xor
or
fs
inc
xor
inc
adc
add
or
sub
jno
jl
push
add
and
je
or
fcmovnb
pop
sbb
xor
sub
xlat
or
dec
push
push
dec
lea
out
xchg
adc
clc
sub
add
add
push
pop
adc
add
mov
cmps
add
jmp
adc
adc
mov
push
mov
jmp
inc
mov
cs
jmp
sub
fs
popf
mov
inc
mov
xchg
sub
ins
ficom
pshufw
paddusb
sbb
xor
push
(bad)
inc
mov
xor
or
mov
xor
pop
cmp
mov
idiv
fdiv
inc
jno
push
popf
or
arpl
xchg
push
cmp
xchg
lea
jo
je
jmp
in
movs
push
adc
pop
cwde
sub
icebp
sbb
jecxz
movs
adc
mov
scas
push
pop
lea
pop
clc
cmp
adc
mov
push
and
mov
jecxz
dec
imul
xchg
cmp
pop
add
(bad)
cmp
add
mov
push
lock
(bad)
xchg
add
jb
add
ret
push
push
popa
mov
add
jecxz
std
stos
mov
cmp
scas
ret
mov
in
and
push
xor
pop
in
xor
sub
inc
jnp
mov
push
push
sahf
out
cdq
sbb
push
adc
and
and
inc
jl
jge
dec
(bad)
out
mov
pop
pusha
adc
or
or
cmps
jmp
out
cmp
push
and
cmp
scas
cmp
add
lahf
cwde
mov
shl
lock
xchg
fld
add
inc
pop
and
fimul
fmul
adc
std
add
adc
cdq
jns
add
sub
lods
jecxz
xlat
dec
xor
repz
test
sahf
(bad)
out
popf
adc
mov
mov
sub
out
cmps
inc
mov
into
xor
neg
add
or
mov
clc
adc
push
dec
jo
adc
aad
lods
and
popf
test
fcmovbe
int3
mov
test
add
mov
inc
or
jno
or
outs
or
xlat
popa
xor
add
out
add
pop
jg
sub
add
mov
ins
not
mov
outs
repnz
xor
call
pop
xor
push
adc
jmp
sub
and
sub
adc
or
sbb
mov
lahf
or
push
xchg
pop
adc
lahf
pop
push
push
aad
adc
mov
sub
cmp
loopne
dec
xor
out
data16
test
sbb
pop
jo
jno
daa
mov
out
int3
pop
or
and
in
cwde
push
sbb
or
arpl
mov
pusha
xchg
arpl
sbb
push
adc
sar
cmp
jmp
add
imul
mov
add
add
push
adc
push
jg
mov
or
or
pop
push
mov
adc
leave
(bad)
dec
add
sar
retf
and
dec
ins
mov
add
sbb
sub
sbb
cdq
pop
mov
lea
pop
pop
pop
and
add
fnstcw
push
(bad)
mov
lock
mov
sub
cli
sub
cmp
xchg
xor
sub
loop
or
pop
mov
in
(bad)
xchg
mov
rcr
mov
shl
lock
and
sbb
mov
or
ret
mov
out
fwait
pop
pop
push
retf
out
(bad)
dec
cmp
pop
inc
cmp
dec
pushf
dec
mov
stc
jg
add
mov
es
push
push
add
jle
sub
daa
sar
sub
jno
out
and
cs
mov
and
loopne
pop
loope
inc
and
fimul
push
sub
retf
enter
sub
ror
imul
cmp
in
or
and
das
mov
jb
jp
sar
div
adc
lahf
or
adc
push
and
pusha
fst
lods
or
push
mov
add
pop
imul
jecxz
sub
inc
fimul
adc
fst
mov
xor
push
inc
mov
in
xor
rcr
push
xor
jbe
jmp
loope
jge
dec
and
fadd
fsub
sub
push
or
pop
mov
adc
daa
and
fdiv
ret
rcl
inc
inc
and
mov
clc
loopne
add
inc
pusha
adc
pusha
mov
xchg
retf
test
sbb
xor
out
cmp
or
add
push
xor
xchg
xor
dec
push
adc
push
movs
sub
ja
(bad)
mov
(bad)
fnstcw
xchg
and
rol
xor
cwde
add
pop
jbe
sbb
pusha
sbb
add
loop
loopne
sbb
add
or
inc
imul
fbstp
or
inc
clc
or
fsub
nop
xchg
xchg
inc
adc
or
or
fld
xor
pop
jb
push
and
jno
ja
pop
push
aaa
inc
stos
or
mov
xor
inc
cld
jae
ret
idiv
push
ds
adc
sbb
shl
mov
or
loope
jmp
popa
fsub
mov
fild
inc
in
(bad)
adc
push
push
unpcklps
mov
ds
push
idiv
sub
pop
icebp
shr
div
retf
aas
or
add
xlat
and
popa
inc
jnp
adc
add
sbb
xchg
in
mov
scas
add
adc
inc
or
xor
arpl
dec
mov
fs
int
cmp
and
pop
add
mov
cmp
scas
sub
ds
dec
sbb
xchg
loope
iret
fcmovb
outs
leave
fdivr
or
jl
sbb
cmps
or
add
xchg
and
jmp
mov
pop
shl
outs
push
sar
mov
int
clc
and
jo
fwait
int
adc
sbb
push
push
lock
mov
(bad)
push
mov
push
aam
push
loopne
loop
in
mov
add
repnz
adc
shr
mov
sbb
lock
cli
je
and
dec
inc
cmp
mov
or
shl
lea
add
jp
cmps
push
sub
jle
mov
jo
out
(bad)
mov
sti
retf
jge
idiv
push
adc
retf
jmp
xor
int
mov
cmps
(bad)
mov
sub
imul
ror
divps
sub
pop
add
sub
xor
add
cmc
dec
push
mov
or
inc
ins
in
add
out
sahf
shl
pop
rol
loopne
push
push
call
out
rcl
fs
retf
xor
popa
rcl
push
mov
xor
jne
test
push
xchg
push
loopne
mov
dec
jg
push
jle
sar
inc
and
call
cmp
dec
push
adc
mov
(bad)
(bad)
jg
push
inc
fwait
bound
inc
arpl
ficom
cmp
les
or
call
or
xor
or
mov
push
cwde
push
and
repz
arpl
jnp
sbb
and
sub
pusha
js
(bad)
aam
fstp
inc
xor
and
sar
fiadd
sub
or
mov
push
sbb
push
sbb
jl
sub
pop
xchg
inc
out
icebp
movs
js
sub
push
dec
and
fs
adc
sub
or
sub
dec
fstp
bound
add
movs
adc
pusha
mov
dec
stc
call
ds
pop
clc
xor
add
adc
push
xor
adc
sub
push
jge
data16
push
push
repz
jo
jmp
pop
push
lock
pop
mov
adc
cld
mov
mov
(bad)
dec
push
and
imul
add
pop
add
loope
mov
push
mov
mov
mov
jp
(bad)
mov
adc
pop
call
mov
test
(bad)
pop
pop
or
or
inc
and
dec
add
add
js
sbb
sub
dec
rol
lods
repnz
pop
add
push
mov
loopne
iret
rol
add
jle
pop
xchg
stos
aad
shl
(bad)
mov
in
test
mov
or
rcr
cmp
and
int3
pop
dec
ins
xor
aaa
aad
mov
or
jbe
push
loopne
push
lahf
mov
and
adc
lea
pusha
test
or
sbb
retf
pop
mov
push
sbb
mov
std
pop
or
fs
add
add
sub
pop
ins
xor
jno
push
es
jg
ret
or
add
or
pop
jo
pusha
xchg
dec
mov
movs
cs
sub
add
cmp
icebp
sbb
xor
cmp
sbb
mov
call
pop
iret
mov
jmp
popf
jge
fcmovu
cmp
std
popa
into
movs
jnp
adc
mov
adc
push
fsubr
inc
add
pop
inc
outs
enter
cdq
cmp
push
sub
adc
dec
test
icebp
jno
adc
or
dec
data16
jmp
mov
in
test
outs
dec
add
gs
es
nop
cdq
jl
or
mov
arpl
dec
mov
(bad)
ins
adc
push
xchg
and
jno
xchg
mov
popa
push
add
adc
movs
xchg
inc
lods
mov
rol
data16
rol
add
pop
imul
add
push
push
in
adc
sbb
ja
xchg
xchg
or
loopne
leave
or
push
stos
aas
(bad)
les
pop
sbb
test
in
or
or
mov
imul
enter
and
push
push
or
adc
mov
xor
cdq
mov
imul
add
mov
push
push
ins
jmp
mov
xchg
pop
jle
sbb
aas
ficomp
sub
mov
xchg
dec
mov
add
mov
sbb
mov
mov
dec
or
mov
jmp
int3
int3
mov
lahf
loopne
push
pushf
sub
inc
inc
sub
cmp
inc
dec
jg
add
daa
mov
sbb
out
nop
mov
add
add
mov
add
jae
mov
push
jg
pushf
mov
inc
jle
push
mov
xchg
pushf
rcl
sub
or
sbb
in
(bad)
jne
mov
or
xchg
ins
xchg
movs
pop
add
pusha
xchg
adc
inc
dec
inc
sar
(bad)
sub
add
push
push
aam
ins
dec
adc
lea
add
pop
mov
or
add
or
inc
add
and
push
test
jne
jmp
icebp
es
adc
repnz
mov
push
add
mov
add
adc
out
adc
pop
mov
xor
mov
or
jp
sbb
mov
jge
pop
and
sbb
imul
aas
shl
pushf
mov
and
push
xor
xchg
inc
mov
adc
or
mov
adc
pop
fnstcw
fstp
sbb
or
cmc
rcl
daa
and
cmp
mov
sbb
and
xor
cmps
add
xor
rcl
dec
and
fs
scas
dec
loop
xor
jmp
add
jle
push
add
jge
pop
iret
jo
sbb
lods
pop
fsubr
xor
push
xor
adc
lods
mov
mov
retf
inc
jecxz
adc
rcr
sbb
jg
jecxz
mov
mov
jl
lds
push
(bad)
(bad)
out
fcmovnb
repz
and
sbb
dec
dec
test
jmp
out
pop
scas
adc
sahf
xchg
jno
adc
push
pop
dec
and
cmp
mov
inc
jb
mov
out
mov
xor
or
pop
leave
ret
and
call
outs
sahf
loope
sbb
and
icebp
mov
inc
mov
ret
jo
aam
pop
xor
or
mov
enter
sbb
sahf
jl
and
pop
xchg
cmp
adc
pop
adc
dec
xchg
into
push
inc
fucomp
jmp
and
jo
xlat
sub
push
(bad)
fisubr
lock
repnz
add
mov
sbb
xchg
inc
sub
adc
frstor
js
hlt
(bad)
ins
into
rcl
jle
(bad)
pop
or
fiadd
adc
ss
push
dec
pusha
mov
xchg
sub
jg
inc
cs
or
adc
xchg
push
xchg
xor
adc
sbb
and
xor
cmp
xchg
stos
gs
cmc
xchg
loope
dec
mov
cld
sub
hlt
ins
push
or
cmp
stos
cmp
adc
out
pop
or
sbb
inc
test
jge
ret
and
add
dec
faddp
sbb
push
(bad)
jns
xchg
inc
or
add
in
popf
or
(bad)
push
and
add
or
pop
mov
xor
cmps
sub
sti
or
js
sbb
sbb
js
fwait
adc
daa
test
nop
cmc
jbe
test
aad
or
sbb
aas
sub
xor
arpl
or
add
mov
movs
push
fcmovne
cs
add
or
dec
jecxz
dec
or
sbb
(bad)
jno
push
inc
test
imul
xchg
inc
sub
lahf
cmc
adc
xchg
dec
cmp
push
xchg
shl
les
xor
push
sub
ss
xor
mov
ret
push
sub
mov
adc
push
test
jg
popf
push
mov
dec
push
sub
inc
pop
add
aas
cwde
retf
pop
sbb
adc
hlt
in
lahf
mov
xchg
and
mov
sub
sbb
mov
pop
xchg
call
or
adc
add
push
pusha
pop
pusha
sbb
xchg
or
push
loop
xor
push
lds
adc
mov
xor
cmp
daa
sbb
(bad)
(bad)
jns
pushf
sbb
(bad)
sbb
nop
nop
cmp
(bad)
mov
xor
push
stos
inc
and
push
nop
dec
mov
inc
or
mov
adc
inc
sub
mov
push
push
jg
mov
mov
sub
mov
add
lea
inc
fld
pop
mov
add
pop
leave
inc
add
add
sub
xlat
mov
or
mov
xchg
cmp
cmp
cwde
int
mov
inc
mov
sub
push
xchg
lahf
sub
xchg
cmp
or
sub
(bad)
adc
ins
sub
xchg
push
sub
dec
fadd
inc
loop
dec
mov
rol
inc
iret
mov
mov
ins
mov
(bad)
mov
mov
sbb
and
inc
rcl
ret
jo
xchg
lock
push
push
adc
data16
add
add
aam
add
aam
push
jb
retf
mov
sub
jo
shl
mov
cmp
arpl
adc
push
fbld
mov
dec
ficom
loop
imul
mov
sub
repnz
add
xor
cmps
or
sbb
or
sub
cdq
xor
adc
mov
enter
push
repz
mov
push
call
test
dec
lock
adc
inc
dec
push
xor
pop
loope
cmp
nop
daa
sar
push
mov
add
and
mov
fisttp
or
mov
jae
test
dec
dec
or
ret
inc
xchg
cmp
ret
ins
pop
pop
jnp
push
sub
push
scas
cmc
and
inc
add
mov
int3
dec
dec
cdq
fisttp
stc
push
jmp
xor
jo
xor
xor
dec
add
outs
mov
jge
cmp
nop
push
or
push
adc
mov
pop
adc
in
test
dec
inc
enter
push
ins
and
pusha
out
add
cmp
lods
out
and
push
inc
das
idiv
or
push
mov
stos
push
mov
cmp
es
lahf
jmp
in
cmp
test
and
movs
in
pop
sbb
mov
mov
push
sbb
mov
shl
mov
aam
add
jmp
sbb
mov
xchg
icebp
adc
(bad)
repz
out
push
pushf
xchg
and
jae
cmps
dec
cs
sbb
out
add
rcr
mov
fcomp
cmp
push
inc
loopne
lea
es
xchg
shl
adc
movs
fbld
mov
rcl
call
enter
mov
lea
mov
daa
popa
cld
mov
rcl
or
dec
mov
jb
js
nop
cmps
mov
dec
adc
adc
mov
sbb
rol
sar
nop
mov
scas
and
adc
hlt
cs
inc
arpl
cmp
clc
and
xor
test
mov
and
inc
rol
push
and
lock
(bad)
rcl
dec
aam
xor
add
pop
push
nop
js
adc
fcmovbe
add
popf
mov
dec
push
push
mov
test
push
add
sahf
xchg
pushf
mov
jg
adc
xlat
jb
mov
(bad)
daa
pop
jp
arpl
push
aad
mov
mov
mov
shr
and
jg
cs
or
push
mov
inc
add
xor
shl
cmps
daa
das
add
mov
xor
addr16
push
mov
call
add
mov
push
hlt
pop
mov
pusha
loope
xchg
mov
mov
and
jle
aam
mov
popa
add
mov
and
push
divps
add
sbb
(bad)
repnz
test
das
inc
and
lea
add
push
call
dec
adc
ret
sub
push
push
add
jne
das
movs
pop
jb
mov
fcom
popa
and
xchg
push
sub
call
xchg
sahf
add
mov
aam
mov
jl
mov
icebp
dec
retf
dec
jge
add
xchg
inc
push
mov
lods
push
dec
inc
mov
out
jo
jg
push
xor
ret
sahf
push
ja
dec
iret
dec
jl
xor
mov
fs
pinsrw
outs
mov
clc
adc
or
pop
jne
jl
add
and
test
jno
add
gs
mov
adc
or
shl
xchg
sbb
aam
mov
and
push
sbb
xor
pop
pop
fdivr
aas
push
push
or
add
aaa
fbstp
pop
jne
xor
adc
mov
addr16
xchg
sub
or
ins
retf
in
push
mov
xor
es
loope
leave
fst
ss
xchg
xlat
jmp
les
push
sbb
ret
add
ss
or
inc
add
add
ds
adc
pop
je
ins
test
mov
xlat
into
(bad)
dec
and
mov
jl
sbb
pushf
dec
pop
xchg
xor
add
or
push
cmps
and
dec
sub
(bad)
lds
fcomi
fsubrp
sub
mov
lea
push
fwait
xor
lahf
mov
cs
jp
and
or
inc
es
add
push
adc
out
cmp
jb
pop
rcr
scas
push
sub
add
imul
popa
inc
mov
cmc
lds
aaa
push
push
addr16
pushf
push
mov
movs
and
pop
lahf
dec
or
out
das
xchg
and
pop
out
shl
aas
sbb
adc
ss
test
arpl
jnp
or
sub
inc
mov
jmp
jmp
pop
inc
fstp
inc
ret
jne
leave
or
dec
or
add
mov
mov
rcl
jmp
stos
js
out
inc
xchg
jl
out
enter
into
ror
add
cdq
imul
(bad)
fs
aad
rcr
in
ins
leave
ret
mov
je
pusha
repnz
aad
add
outs
(bad)
in
push
cmps
(bad)
sbb
repz
push
out
add
cmp
pop
inc
push
movs
(bad)
adc
jb
dec
aam
loope
and
out
in
or
cmps
xor
out
and
fs
aam
cwde
inc
movs
inc
test
dec
fst
push
add
int
sub
add
jo
pop
mov
loopne
cmps
pop
aam
fldenv
inc
jg
mov
adc
sbb
or
xchg
inc
ret
jecxz
or
jmp
and
and
or
add
dec
pop
pop
fcomp
mov
scas
dec
sbb
mov
xor
adc
adc
data16
js
push
xchg
in
or
repz
mov
lods
jb
xchg
out
or
or
push
jb
fwait
or
add
outs
xor
sbb
and
and
mov
sahf
cwde
inc
sub
or
or
sub
addr16
data16
or
mov
aas
add
shl
sub
aaa
int3
or
adc
test
cwde
adc
xchg
cmp
sti
gs
or
cmp
adc
jbe
loopne
adc
cmp
sub
pop
xor
jb
pop
mov
aas
or
sbb
and
sbb
push
fdivr
loopne
(bad)
jne
push
push
pop
xor
aad
adc
push
push
push
and
adc
loopne
imul
push
lods
inc
pusha
adc
adc
mov
das
pusha
nop
adc
add
or
push
nop
bound
mov
xor
mov
movs
mov
pop
mov
sysenter
mov
push
lea
or
movs
xchg
mov
push
push
movs
rcl
lahf
inc
xor
fs
(bad)
loopne
push
fiadd
(bad)
shr
push
mov
or
scas
sbb
adc
sbb
jl
xchg
iret
dec
mov
sti
push
and
sub
pop
in
pop
sub
inc
mov
jnp
inc
daa
fstp
mov
jns
jmp
stc
add
pop
dec
ror
and
ret
mov
add
sbb
fucomi
pop
loopne
fs
jns
int3
and
sbb
cdq
mov
inc
adc
shr
xor
les
xchg
nop
jge
(bad)
icebp
(bad)
push
mov
dec
pop
mov
test
pop
sbb
jns
ja
and
sub
aaa
fnop
xor
push
gs
clc
mov
push
aaa
mov
push
xchg
cmp
and
xor
fwait
mov
loop
add
adc
xor
(bad)
call
or
nop
mov
or
cmp
mov
fild
mov
adc
call
sbb
adc
into
dec
rcl
mov
inc
es
add
xor
xor
aaa
clc
test
inc
xor
pop
test
cmp
pop
aad
add
and
pop
or
jo
jmp
add
scas
rol
pop
cli
scas
loope
mov
jp
test
ret
scas
add
imul
mov
add
pop
xor
jp
cmc
pop
cmp
push
fcom
inc
dec
jecxz
sbb
inc
adc
inc
ja
pop
je
mov
adc
lea
pop
jae
dec
imul
adc
inc
fimul
cmp
cs
jns
xchg
pop
fcomp
pop
sub
xlat
lea
sbb
or
add
or
push
push
stc
pop
inc
nop
int3
loope
or
inc
jo
mov
mov
or
xor
sbb
scas
dec
and
rcr
dec
aam
mov
xchg
pop
or
mov
scas
inc
and
cmp
push
and
and
enter
push
jb
add
inc
cmp
jbe
pop
push
mov
cmp
out
add
and
cmp
ja
cwde
inc
inc
bound
jmp
cwde
add
dec
(bad)
push
mov
mov
out
push
jne
add
(bad)
jle
jp
jo
inc
adc
pop
fs
jecxz
outs
or
inc
xor
loope
push
inc
inc
mov
fadd
pop
pop
aam
pop
fadd
xor
sbb
xor
and
pusha
inc
nop
jne
inc
push
xor
jnp
and
xor
enter
xor
retf
adc
xor
xor
dec
arpl
add
dec
xchg
ret
sbb
adc
jb
and
xor
in
and
cmp
add
fsubrp
cs
cs
add
dec
imul
adc
sub
fst
push
adc
inc
cmp
mov
pop
and
adc
mov
mov
(bad)
push
pop
mov
lods
(bad)
int3
xor
in
add
call
mov
add
leave
pushf
xchg
cdq
push
xchg
add
add
add
add
add
add
add
jmp
iret
retf
in
add
daa
add
sub
add
imul
lea
cmc
es
jl
out
sub
inc
add
lods
fmul
div
shl
pusha
push
inc
call
repz
fimul
in
pop
xchg
cld
dec
in
repnz
out
iret
repz
mov
cmps
stc
and
inc
ins
xchg
mov
(bad)
or
or
adc
pop
aas
lea
push
sub
sub
leave
test
rcr
loopne
push
cmp
adc
lock
xor
loope
sub
lahf
add
or
mov
mov
in
and
ins
pop
sub
mov
mov
es
adc
fwait
jo
sub
jno
outs
cmp
xchg
jb
mov
test
fmul
pop
mov
fstp
cmp
push
add
dec
sbb
(bad)
push
adc
mov
shl
sbb
jmp
loope
jecxz
sbb
sub
jo
cmp
in
sub
and
and
inc
sbb
js
sub
scas
and
cmp
cmp
or
adc
or
popa
das
sub
icebp
imul
stc
push
daa
jnp
sbb
cmp
retf
inc
add
add
dec
add
mov
adc
out
xchg
ret
fisttp
cmp
pop
fnstenv
pop
dec
add
cmp
xor
sbb
pop
dec
inc
sar
mov
retf
int3
imul
dec
pop
sub
push
pushf
jmp
adc
nop
jno
mov
rol
nop
lahf
push
(bad)
fstp
pop
enter
sub
repnz
cs
adc
in
pop
add
add
loope
cmp
sbb
mov
int
adc
and
push
or
or
or
add
aas
test
xor
rol
add
rcl
add
push
fisub
push
push
mov
pop
cli
sub
data16
adc
jne
xchg
cmc
fdiv
adc
cmp
add
cli
lods
push
inc
pop
fs
adc
push
pop
fwait
inc
and
test
push
enter
mov
adc
push
je
movs
push
dec
dec
push
jle
arpl
popf
or
sbb
xor
shl
adc
mul
or
jmp
aaa
cmp
push
inc
cmp
mov
xor
sbb
les
push
push
call
jge
jne
jl
stc
fcmovbe
pop
clc
xor
mov
ins
xor
in
sar
adc
mov
ffreep
pop
push
and
(bad)
sar
call
cmp
push
adc
jg
cs
sub
adc
xchg
retf
mov
fdivr
pop
xchg
add
mov
push
cmp
add
popa
adc
sub
vpackssdw
push
add
fdiv
fistp
jl
jne
popa
push
pop
or
jno
imul
jb
mov
cwde
ins
and
std
sbb
xchg
cmps
mov
dec
jg
and
imul
int3
popa
jmp
or
in
cmp
xor
icebp
cmp
in
jmp
adc
fs
arpl
inc
sti
retf
div
cmps
and
lea
xchg
(bad)
iret
jl
mov
add
push
cmp
xchg
jp
push
mov
or
lods
inc
imul
ret
xor
ret
sbb
adc
adc
jp
add
fsub
push
out
ins
jno
movs
xchg
sbb
push
fwait
adc
pop
cmp
jmp
sub
xchg
sub
jns
aas
dec
rcr
add
and
pop
call
jg
and
jns
in
sub
pop
loope
push
push
popa
test
or
dec
cdq
xor
jl
push
xchg
push
mov
inc
mov
movs
in
cmp
ds
pop
fiadd
movs
into
mov
mov
adc
ret
pop
sub
stos
lahf
aas
push
push
fisub
mov
mov
sub
test
stos
cmp
inc
dec
inc
imul
xchg
pop
mov
mov
rcl
lea
pop
dec
push
ja
adc
shl
arpl
dec
and
xor
popf
js
xchg
pop
mov
je
pop
test
loop
cmp
imul
test
mov
fild
ror
adc
mov
fcom
inc
push
add
fstp
dec
mov
sub
xlat
loop
or
leave
fmul
push
jge
out
jmp
adc
pop
(bad)
jmp
iret
sbb
stos
push
jno
cmp
mov
and
add
sbb
cmc
push
pop
sbb
ret
dec
add
sbb
loop
lds
xchg
inc
aad
and
sar
and
ins
mov
shl
das
and
aas
mov
and
xchg
lods
adc
in
adc
mov
dec
push
or
lahf
lods
push
or
int
retf
popa
jb
cmp
push
and
addr16
call
jg
xchg
dec
push
sbb
rol
ins
jmp
jns
push
jbe
mov
mov
ss
mov
xchg
fisttp
aam
das
fild
out
lods
dec
icebp
xor
push
inc
mov
push
(bad)
pop
jle
mov
icebp
jno
push
push
dec
(bad)
retf
sub
xchg
xor
xor
add
inc
inc
pop
jecxz
jge
lea
ret
push
das
push
movs
xor
mov
push
pop
add
retf
retf
outs
loop
or
jmp
in
push
xchg
pop
aad
add
imul
psubsw
das
push
ror
adc
fmul
and
inc
nop
hlt
daa
in
mov
pop
shr
add
add
retf
adc
nop
and
jle
adc
lods
sahf
sbb
jl
mov
mov
ror
adc
ret
and
retf
jl
sbb
cmp
inc
jmp
adc
adc
sbb
stc
or
jmp
xchg
sub
aam
or
push
sahf
ret
dec
stc
dec
mov
sub
mov
and
frstor
push
jno
inc
ins
dec
mov
xchg
retf
ror
shl
dec
or
adc
or
lock
xchg
movnti
cmp
inc
stos
inc
rol
xchg
xchg
inc
pop
push
aas
push
rcr
push
push
call
dec
xchg
movs
cmp
loopne
pop
out
push
enter
jmp
mov
into
arpl
nop
enter
xchg
in
shl
shl
mov
sub
or
std
cdq
inc
idiv
cmp
add
add
sub
gs
stc
push
imul
inc
dec
shr
inc
mov
sahf
sub
sti
dec
js
mov
mov
ss
jmp
jecxz
push
or
and
add
add
lods
or
ret
int3
adc
add
test
movs
inc
fist
cli
ja
dec
popa
je
mov
push
or
dec
jmp
lock
push
or
out
push
and
movs
aas
mov
clc
or
(bad)
jl
add
outs
retf
icebp
or
push
or
dec
dec
jnp
or
push
repnz
dec
or
add
lds
in
sbb
push
and
cwde
mov
call
or
push
xor
mov
retf
pop
push
sub
(bad)
(bad)
mov
ja
dec
pushf
lods
and
fiadd
movs
or
jns
(bad)
xor
sub
push
cdq
enter
test
pusha
popa
cmp
fbstp
out
rol
pop
je
mov
aaa
test
dec
add
ja
and
mov
dec
push
push
jae
inc
pop
cmp
push
push
pop
jmp
mov
jge
push
mov
sub
fdivr
sub
leave
xchg
and
sbb
sbb
mul
jle
dec
inc
and
mov
arpl
xchg
pop
pop
inc
and
outs
mov
sub
jnp
jmp
daa
mov
adc
daa
and
mov
in
pop
mov
and
or
mov
or
call
push
push
aad
pop
shr
cli
adc
and
(bad)
push
adc
aas
mov
cmps
inc
mov
in
sbb
push
(bad)
fmul
cmp
or
lea
inc
xchg
adc
out
imul
add
das
or
aaa
add
and
cs
push
fwait
mov
dec
gs
cmp
movs
sub
dec
xor
jno
ror
mov
sbb
mov
xchg
mov
adc
or
adc
js
cmps
lea
data16
fs
mov
cmp
test
and
or
in
and
mov
add
aas
shl
cmps
(bad)
and
(bad)
cmps
rcr
mov
pusha
out
sub
nop
pop
mov
test
add
les
jle
popf
iret
sahf
xchg
pop
xor
fwait
sbb
pop
adc
pop
add
and
xchg
cli
out
(bad)
mov
imul
mov
popa
xor
adc
jno
push
dec
inc
icebp
xor
retf
movs
(bad)
inc
sbb
mov
inc
cmp
mov
inc
cwde
lods
pop
xchg
and
inc
add
(bad)
in
xchg
cmps
ss
sub
les
inc
xlat
iret
je
and
test
fnsave
je
xor
adc
add
int
cmp
xor
or
pop
cmp
test
or
jl
mov
sbb
sub
mov
mul
sbb
xchg
jbe
push
cdq
xor
pop
(bad)
stc
iret
push
cmp
es
jmp
sub
xor
mov
jns
sbb
loope
adc
add
xchg
adc
add
or
fs
and
mov
xchg
jae
or
pusha
or
sar
lods
sbb
pop
cmps
push
fdiv
dec
xchg
mov
mov
adc
xchg
xlat
and
test
sar
cs
sbb
dec
movs
mov
hlt
(bad)
push
add
push
jecxz
add
retf
sub
fs
ficom
add
lods
sbb
neg
rol
loope
jp
ret
mov
fsubr
imul
xor
mov
movs
nop
mov
cmp
in
inc
xchg
(bad)
(bad)
pop
loope
push
sbb
inc
and
mov
sbb
in
add
jno
jmp
or
jno
pop
mov
push
dec
sbb
or
push
fs
and
push
sahf
mov
es
pusha
push
dec
pop
imul
dec
or
push
mov
xlat
push
push
cmp
push
outs
imul
shl
or
xchg
fst
mov
in
stc
shl
fwait
shl
dec
push
call
and
xor
or
stos
mov
jns
pushf
lods
push
mov
dec
jp
mov
jbe
mov
mov
addr16
adc
sbb
add
test
pop
mov
daa
add
imul
mov
rol
mov
fs
fsub
mov
lock
cmp
mov
shl
aam
and
pop
lea
add
cdq
inc
sub
and
push
sub
sbb
popa
sar
xor
push
cmc
shl
mov
imul
sbb
cmp
inc
pop
jmp
das
jle
adc
addr16
(bad)
fisub
das
jb
dec
add
sbb
adc
pop
addr16
mov
dec
jo
cmps
mov
frstor
aas
push
mov
rol
popf
xor
xor
dec
add
xchg
adc
adc
inc
push
inc
push
fwait
sbb
das
sbb
sub
aas
jge
xchg
jo
xor
and
push
inc
in
dec
jmp
push
push
or
icebp
dec
fadd
ja
add
or
pop
sbb
mov
call
fisttp
je
cmp
dec
pop
fs
loope
jne
sub
pop
test
(bad)
adc
nop
and
sbb
cmps
dec
xchg
movs
inc
sbb
bound
push
sar
dec
je
mov
ror
in
inc
push
dec
xor
mov
pop
sbb
jne
ret
call
icebp
mov
sub
shr
add
cmps
xor
sbb
popf
pusha
nop
push
inc
test
xchg
(bad)
sub
adc
shl
cmps
xchg
ins
sbb
popf
stos
aad
xor
mov
jb
adc
addr16
pusha
push
sbb
(bad)
xlat
outs
sahf
das
push
mov
jns
jne
daa
loopne
shr
jp
inc
push
push
jo
cmp
mov
aaa
mov
xchg
mov
call
mov
mov
aam
ins
xor
imul
add
fwait
jbe
sbb
cmps
pop
inc
int3
dec
sbb
daa
xchg
clc
dec
mov
ret
aam
imul
or
cld
adc
mov
add
adc
cmp
mov
push
add
lock
cs
adc
das
push
js
jno
dec
pop
cli
aaa
or
push
or
popa
push
shl
addr16
xor
inc
sti
mov
jo
inc
popa
xchg
ror
or
adc
inc
adc
dec
sbb
cvttps2pi
add
adc
push
aaa
xor
mov
sbb
push
cmovle
loope
sbb
jo
mov
add
push
jge
push
arpl
rol
loopne
cmp
call
add
xchg
mov
sbb
adc
fwait
(bad)
loop
cmp
je
mov
jo
loopne
iret
xor
cmp
xor
or
inc
pop
retf
mov
pop
inc
jp
ret
inc
aad
cmp
test
add
mov
in
das
adc
enter
imul
adc
lock
and
ficom
push
scas
pop
fs
or
ins
pop
dec
jo
popf
add
js
ss
jb
push
inc
dec
pop
or
sub
scas
inc
loopne
cwde
(bad)
mov
pushf
push
mov
jae
call
dec
mov
adc
push
cmp
xchg
or
adc
mov
xor
or
or
fdiv
add
dec
xor
or
jmp
xchg
adc
adc
cld
mov
std
adc
sbb
or
cwde
sub
js
mov
sbb
jmp
and
cmp
jo
sbb
das
add
mov
or
mov
fild
push
adc
call
out
lods
mov
xchg
xchg
(bad)
ins
sbb
fdivr
clc
ss
popa
xor
aad
jno
loope
sbb
cwde
mov
or
xchg
jae
retf
push
mov
push
jmp
dec
xchg
inc
and
pusha
hlt
or
or
add
(bad)
adc
ja
sti
xchg
pop
ds
pusha
sbb
ror
cmps
daa
ret
adc
inc
lock
add
push
sbb
add
int
add
js
dec
pop
jns
sub
hlt
jle
daa
pusha
outs
pop
cdq
pop
cmp
add
shr
fs
popf
ins
xor
ins
cmp
sub
outs
imul
cmp
inc
adc
push
ret
xchg
out
ins
adc
fs
pop
sub
sbb
jb
inc
dec
pop
mov
jmp
jg
jp
inc
fwait
adc
push
push
add
push
sub
pushf
add
nop
rcl
test
jae
adc
jo
in
je
or
and
adc
popf
adc
retf
push
or
or
mov
mov
lods
push
jle
sbb
retf
leave
and
jl
dec
jb
xchg
test
push
xchg
sbb
dec
dec
jae
xchg
out
xchg
dec
(bad)
jl
push
xchg
sub
fwait
jae
jl
jnp
mov
jns
js
rol
pop
jmp
jo
(bad)
push
inc
push
add
sub
and
rcr
push
nop
(bad)
jl
push
mov
js
icebp
sbb
add
mov
lods
xchg
movs
sbb
add
cmp
adc
or
ja
icebp
mov
jmp
pusha
ret
push
sub
adc
call
lahf
push
lds
jns
adc
js
pushf
mov
xor
add
push
rcl
icebp
pop
mov
popa
push
fiadd
xchg
icebp
mov
push
mov
(bad)
pushf
int3
adc
cwde
(bad)
xor
push
and
sti
and
sub
xchg
add
sub
ficom
cmp
fstp
push
test
push
sub
add
mov
daa
jo
inc
ins
push
or
sbb
mov
add
cdq
jge
lds
sbb
pusha
pusha
(bad)
mov
(bad)
mov
js
sub
pop
sbb
cmp
arpl
je
or
and
imul
adc
jmp
cmp
ins
mov
pop
js
int
cli
dec
adc
xchg
pusha
fadd
fadd
inc
jo
out
jl
dec
ss
inc
xchg
dec
pop
dec
sbb
or
imul
into
test
enter
push
sahf
or
pushf
imul
dec
jmp
fstp
inc
add
repz
adc
scas
fsub
xor
leave
cmp
pop
push
xor
adc
xor
call
xor
aaa
and
mov
push
add
xchg
cmp
ja
lock
popa
mov
adc
mov
ins
mov
jb
add
loope
shl
pop
shl
xor
ins
xchg
xor
add
mov
pop
cmp
ret
iret
rcr
and
retf
ins
adc
call
or
adc
dec
fs
push
lock
outs
mov
and
sub
stos
push
sbb
(bad)
clc
xchg
xor
inc
stos
push
xor
mov
jb
fldcw
ficomp
fistp
xor
(bad)
(bad)
mov
test
cld
add
dec
pusha
addr16
sub
sub
push
fld
mul
stos
sbb
push
add
test
jnp
mov
add
imul
push
xor
push
cmp
sbb
lahf
sbb
pop
ret
adc
add
mov
adc
outs
or
mov
dec
pop
test
sbb
jge
les
je
pop
xchg
fwait
in
xor
inc
adc
jge
int3
or
pushf
imul
cmp
add
ds
test
jb
mov
in
mov
out
cmp
jns
mov
add
add
out
fwait
rcr
and
mov
fstp
xchg
or
inc
popf
popa
jmp
inc
je
sahf
fimul
pusha
popa
mov
adc
add
inc
adc
mov
inc
inc
fidiv
inc
dec
inc
sbb
inc
call
inc
xor
mov
aaa
clc
pushf
sahf
xor
ins
add
movs
adc
sub
mov
(bad)
retf
inc
dec
adc
hlt
dec
push
daa
cmp
jne
jecxz
sub
arpl
shr
push
(bad)
jmp
xor
xchg
sub
jns
push
es
test
cmc
pop
div
(bad)
push
push
aas
mov
pop
movs
out
cmp
sbb
stc
dec
push
gs
push
sbb
mov
dec
cmp
add
inc
adc
inc
test
sbb
ret
data16
movs
push
es
or
jmp
(bad)
add
add
and
jmp
xor
pop
rcl
mov
dec
mov
sbb
pop
push
imul
add
and
sub
ss
xchg
add
xchg
mov
scas
and
add
pop
xor
dec
and
stos
add
cmp
xor
pop
aad
push
xor
add
rol
pop
mov
mov
nop
inc
push
cwde
cmc
sub
test
jmp
inc
call
pusha
mov
xchg
sub
xor
add
pop
loop
push
jbe
sub
aaa
leave
xchg
jl
inc
sti
mov
aam
or
icebp
test
out
arpl
sbb
and
aas
or
adc
add
or
cmc
add
out
add
repz
sbb
xor
push
jmp
mov
mov
and
sbb
adc
inc
in
movs
outs
push
adc
add
dec
xchg
pusha
sub
imul
aad
(bad)
sbb
dec
dec
xchg
inc
scas
adc
jmp
ja
mov
shl
cld
or
daa
pop
mov
stos
add
dec
add
jne
lods
mov
ins
(bad)
xor
adc
movups
jmp
hlt
cmps
cmps
test
add
xchg
(bad)
push
add
mov
addr16
push
pop
sub
je
adc
pushf
sbb
sahf
or
or
jbe
push
mov
and
mov
mov
push
inc
push
push
jne
bound
jb
jmp
leave
jo
push
mov
or
mov
and
clc
loopne
add
inc
or
xor
dec
adc
outs
adc
jne
adc
test
jb
pusha
ss
imul
fmul
or
cmp
cli
and
jnp
push
pusha
aaa
or
or
es
out
pop
or
or
xchg
or
div
sub
lock
xor
xor
mov
sub
add
dec
and
inc
call
sbb
outs
jl
mov
lds
sahf
rcl
daa
jo
xchg
ror
xchg
scas
xor
ficomp
pop
pop
mov
adc
or
pop
mov
inc
or
jne
movzx
nop
push
cdq
pop
idiv
mov
sar
adc
adc
into
outs
cld
(bad)
jmp
and
push
jl
(bad)
cmp
mov
fwait
mov
iret
mov
push
mov
mov
adc
rcl
add
lods
jecxz
cmp
in
nop
adc
(bad)
xor
sbb
ja
ins
mov
in
or
mov
fstp
jbe
add
and
shr
cdq
pop
idiv
jno
push
and
aad
ja
jg
(bad)
mov
je
dec
jbe
adc
sbb
cmp
retf
push
cld
add
sub
sbb
pop
mov
add
sbb
sub
loop
jge
add
or
xchg
xor
sbb
fadd
fstp
pop
sahf
cwde
fadd
ds
or
clc
enter
repnz
ja
xchg
sub
and
sbb
sub
ficomp
jbe
mov
cmps
mov
aam
inc
shl
mov
les
or
mov
jmp
(bad)
mov
cmp
ins
or
ds
mov
pop
fs
push
mov
sub
cdq
pop
mov
adc
mov
mov
cmp
hlt
push
test
pop
or
test
cli
xor
add
enter
sbb
cli
ret
mov
lea
fidivr
mov
fs
mov
jl
mov
push
mov
popa
jmp
lock
push
sbb
hlt
push
fsub
xor
mov
add
(bad)
cs
jne
cmp
xchg
hlt
push
pop
mov
cmp
push
cwde
or
sbb
(bad)
in
(bad)
rcr
sbb
mov
inc
sub
jmp
loop
mov
push
jl
clc
add
fidiv
outs
jle
push
mov
rol
jmp
or
lods
daa
cdq
mov
jne
push
jnp
sbb
add
jmp
and
mov
fild
sub
adc
mov
mov
adc
rcr
leave
inc
inc
cmp
jbe
arpl
sub
mov
(bad)
stos
push
mov
inc
cmc
or
pop
add
fimul
adc
and
xor
jae
mov
enter
sub
or
loope
fsubrp
inc
imul
cmp
pop
lock
jns
leave
popa
popa
add
push
call
sub
gs
popf
pusha
mov
nop
(bad)
adc
div
dec
dec
push
jo
push
add
repz
mov
xor
loopne
or
or
pusha
rol
call
jb
(bad)
test
aaa
push
jae
cwde
add
add
lock
ret
loop
push
in
mov
inc
call
inc
loopne
or
jp
sbb
add
hlt
leave
rol
adc
sahf
pop
je
data16
sub
push
hlt
or
or
adc
mov
inc
add
push
iret
or
cvtps2pi
or
push
(bad)
loopne
mov
add
or
clc
fld
and
sbb
mov
jg
jne
inc
push
jae
and
fst
pop
shr
inc
loopne
test
adc
jbe
sub
loopne
dec
adc
xor
ror
adc
xchg
call
push
or
fstp
mov
fs
xchg
sbb
sub
mov
mov
rcr
retf
out
jns
adc
xlat
popf
dec
jbe
mov
sub
ins
mov
cld
pop
sub
inc
pop
and
mov
push
cmp
sub
adc
in
mov
cli
or
pop
pop
mov
jo
lahf
jmp
adc
jle
add
jno
fdivr
out
enter
fadd
cmp
mov
in
or
and
dec
call
push
movs
data16
mov
push
adc
fadd
imul
xchg
retf
lods
add
pop
mov
dec
add
cdq
add
xchg
and
pop
jb
js
mov
pop
xor
(bad)
loopne
enter
aaa
sbb
dec
adc
pop
frstor
retf
adc
aaa
nop
adc
sub
push
lahf
xchg
pop
pop
fld
in
movs
mov
cmc
inc
xchg
movs
mov
mov
jp
adc
and
call
inc
enter
in
jl
push
pop
in
xchg
cwde
out
mov
add
icebp
or
or
aaa
or
stos
and
enter
movs
(bad)
cmp
je
xor
push
test
add
jl
dec
and
adc
sub
mov
jge
enter
je
push
retf
dec
push
xor
xchg
sub
sbb
sbb
test
nop
or
scas
pop
pop
call
mov
add
jb
movs
test
or
ss
jo
je
jo
cwde
adc
add
push
pusha
cmp
ins
xchg
sub
loopne
jle
or
push
mov
je
rol
stos
cld
or
push
inc
add
ret
pop
xchg
xor
mov
fldcw
push
daa
scas
pushf
inc
push
pop
dec
imul
sbb
jmp
das
aaa
ss
aam
and
add
or
sbb
push
pop
jbe
iret
daa
scas
adc
retf
rcr
test
ret
dec
outs
sar
or
and
xchg
ins
fisub
dec
imul
mov
xor
js
aas
sub
jae
xor
mov
imul
jne
movs
add
inc
cld
dec
shl
pop
jb
sbb
sub
(bad)
xor
out
pop
popa
adc
sbb
push
add
in
ret
ds
js
pop
dec
call
cli
scas
aaa
push
movzx
mov
loopne
add
pop
add
mov
stos
push
rcl
lahf
cmp
dec
cmp
mov
pop
push
ins
jp
(bad)
mov
dec
add
add
and
adc
lock
movsx
loopne
xchg
sbb
xchg
stos
test
or
pop
add
pop
pop
or
jns
fnsave
add
aad
leave
test
mov
popa
push
sub
sub
jmp
cli
cmps
lods
ror
call
hlt
aam
xchg
popa
pop
push
dec
cld
pop
loop
dec
ret
ret
loopne
and
dec
add
xor
cmp
sub
adc
xor
sbb
and
dec
push
je
sub
mov
pop
test
xor
mov
xchg
jo
mov
dec
and
and
ds
adc
sbb
jae
inc
adc
mov
add
aas
clc
div
loope
jmp
cmp
(bad)
fisubr
push
or
adc
rcl
add
inc
je
int3
mov
push
sbb
xchg
data16
hlt
ret
mov
add
sub
xchg
push
std
addr16
es
pop
or
push
sbb
dec
push
adc
cwde
ins
dec
add
cmp
int3
mov
xchg
mov
sbb
imul
add
outs
scas
or
xchg
cld
or
lea
pop
dec
pop
push
and
call
xchg
push
call
imul
cmp
cmp
or
and
pop
fidivr
in
ret
test
sub
outs
push
outs
fst
cwde
sahf
lea
in
jo
inc
mov
daa
leave
push
adc
xor
ins
jne
sbb
leave
and
sub
pop
jmp
out
and
jl
pop
cmp
ins
(bad)
call
out
and
push
adc
fild
jne
and
sub
retf
push
into
xchg
clc
or
movs
xor
mov
mov
add
jle
and
xchg
ss
dec
and
sub
je
adc
pop
mov
pop
cmp
xor
sub
loop
lds
and
je
lea
or
push
jl
and
cld
pop
xor
(bad)
sahf
inc
test
and
pop
sbb
mov
clc
jmp
mov
add
mov
sub
out
push
loope
das
dec
imul
inc
sbb
xor
and
and
call
mov
jl
cmp
adc
icebp
push
add
or
or
int3
xor
cmps
adc
sbb
sub
cmp
xor
nop
push
mov
adc
icebp
call
fs
inc
push
clc
rol
cmp
xor
icebp
call
mov
or
xchg
add
mov
fiadd
pop
jo
mov
or
dec
loop
out
adc
or
add
movs
ss
les
xor
fmul
icebp
out
jns
jbe
sub
and
push
addr16
shr
xor
lea
addr16
jg
dec
es
ss
(bad)
sti
or
shl
dec
or
pop
pop
in
out
sti
enter
mov
rcl
fadd
out
sub
pop
inc
push
(bad)
sbb
fisub
daa
push
sub
fst
out
pop
sbb
fist
retf
jmp
mov
cwde
mov
jo
pop
cld
fwait
ins
mov
pop
add
cmp
push
push
ds
test
adc
sub
sub
adc
push
jo
ds
sar
sub
mov
sar
inc
adc
cld
inc
cmp
test
add
adc
pop
cmp
data16
out
lods
xor
(bad)
adc
push
mov
out
or
(bad)
int3
mov
out
shl
mov
or
or
and
repnz
aam
pop
neg
lss
mov
jg
xchg
cmp
xchg
add
add
push
mov
pop
and
push
mov
adc
pushw
or
or
sbb
add
dec
bound
mov
bound
stos
dec
push
xor
pop
or
in
not
dec
retf
pop
cmp
cmp
dec
sub
les
add
add
fisttp
mov
sub
adc
xchg
inc
sub
or
imul
xor
ins
sets
dec
cmp
ret
sbb
add
add
push
jo
sub
rol
push
push
lods
jo
adc
sbb
nop
fistp
bound
dec
inc
scas
inc
mov
dec
inc
js
adc
iret
dec
fs
add
ret
cmp
mov
sahf
push
cmp
lods
jo
mov
loopne
sub
xchg
lock
daa
call
inc
and
jp
add
cmp
sub
gs
leave
js
mov
imul
jo
dec
mov
call
ja
test
pop
daa
xlat
jbe
fild
xor
jne
mov
cmp
xor
push
sub
pop
pop
or
pop
jae
movs
ja
je
in
push
movs
mov
pop
dec
into
inc
jmp
push
xchg
(bad)
ror
mov
dec
bts
inc
push
in
cmp
adc
popf
mov
dec
ficomp
inc
pop
cmp
stos
jge
cmps
cwde
mov
fdiv
xchg
pusha
cmp
xor
fisttp
enter
or
inc
mov
xchg
sub
js
mov
jo
or
push
cmp
push
pop
(bad)
push
push
lahf
inc
inc
push
pop
popf
out
in
loopne
cmp
dec
dec
dec
pop
jae
lock
add
cmp
sbb
dec
mov
imul
pop
cmps
mov
cmps
pop
mov
cmp
add
sbb
ret
add
pop
adc
dec
dec
inc
cld
pop
and
popa
cmp
arpl
sti
out
or
add
dec
pop
add
pop
pop
sub
add
or
or
cmp
push
cwde
xchg
cmp
lock
inc
pop
cmc
or
and
sub
cmp
add
adc
fmul
das
pop
ins
cmp
xor
cli
fisub
pop
sub
push
xchg
je
pop
push
lahf
jle
bound
inc
mov
stc
mov
sbb
push
xor
test
xchg
push
dec
out
xor
ror
mov
push
rol
cmps
imul
mov
xchg
and
dec
or
mov
push
sbb
call
lea
es
adc
div
loope
(bad)
sbb
add
push
in
jmp
push
adc
mov
sahf
fdivr
rep
mov
fadd
lock
dec
aam
add
or
jmp
inc
add
pop
loop
mov
loopne
les
or
mov
mov
ss
pusha
jl
xchg
outs
js
sti
jbe
jae
(bad)
loope
loop
add
(bad)
std
fucom
sub
or
and
jmp
cli
or
mov
movs
sub
lock
fbld
rcl
push
call
dec
call
pop
or
or
add
sbb
xor
sbb
in
and
jmp
or
xchg
jecxz
or
in
ffree
add
sbb
or
jmp
pop
add
or
jp
(bad)
adc
(bad)
xchg
or
(bad)
push
xor
adc
faddp
(bad)
cld
pop
loopne
or
js
sbb
or
pop
jne
mov
jl
sbb
mov
mov
pop
ins
add
jmp
and
retf
push
loopne
or
dec
xchg
adc
cwde
inc
out
mov
enter
sahf
jo
sbb
outs
sbb
popa
lods
push
mov
jb
popf
mov
push
imul
jg
xchg
aam
dec
inc
imul
or
inc
paddd
push
sbb
inc
pop
add
cmp
push
or
push
push
jne
or
and
imul
bound
xor
push
xchg
imul
and
inc
fcomp
inc
add
sub
cmp
push
adc
ror
cmp
cld
lea
inc
mov
hlt
mov
imul
adc
test
dec
inc
cmp
(bad)
bound
hlt
mov
mov
mov
clc
xor
ror
stos
loope
jne
jle
adc
sub
popa
loope
mov
add
mov
inc
sahf
(bad)
push
sbb
mov
repz
and
and
jae
push
adc
or
or
shl
data16
lea
inc
cmp
fistp
adc
sub
push
push
fdiv
addr16
mov
aad
mov
mov
jb
hlt
jne
aad
packsswb
pop
or
mov
shl
pop
push
pop
je
add
loopne
and
cwde
shl
into
mov
push
inc
and
dec
out
lods
push
dec
(bad)
mov
loope
mov
loopne
in
adc
push
call
sbb
push
sub
or
xlat
packuswb
repnz
sub
push
sbb
and
fsubr
push
sbb
mov
pop
and
cmp
sbb
pop
or
push
adc
sbb
data16
cwde
rol
pop
and
es
ret
jo
fcmovu
ins
test
fidiv
push
je
adc
je
or
fwait
cmps
imul
adc
dec
dec
adc
ja
es
jp
lea
sbb
and
ins
pusha
enter
inc
stos
movzx
add
pop
inc
dec
dec
into
ret
add
loopne
and
aam
pop
sbb
movs
xchg
jmp
push
dec
push
and
or
mov
push
icebp
inc
popf
sbb
cmp
or
rcr
lock
add
and
add
je
xor
push
adc
push
shr
adc
xchg
sbb
xchg
popa
cmp
add
mov
inc
or
dec
ret
and
jmp
jp
inc
or
xabort
sbb
xchg
add
outs
mov
ror
sbb
jg
push
dec
push
xchg
xor
push
movs
fwait
std
adc
cmp
in
mov
inc
xchg
cmp
stc
push
ret
out
shl
or
fdivr
xor
add
inc
cmp
scas
add
adc
xor
add
pushf
pop
cwde
mov
je
jg
pop
ret
dec
pop
clc
jno
rcr
or
add
dec
sbb
dec
adc
adc
add
adc
mov
outs
add
pushf
lock
sti
lock
mov
movs
push
ins
mov
dec
jle
cmps
adc
inc
stos
inc
adc
sbb
jnp
test
lods
lea
test
push
or
inc
push
adc
aad
mov
or
sbb
into
mov
shl
les
lods
add
and
ja
pusha
jmp
jb
mov
sub
cmp
adc
cmp
add
test
sub
shr
add
outs
pop
adc
sbb
add
or
mov
or
mov
add
push
mov
mov
inc
lea
push
ficomp
xchg
sub
ret
cmp
cmp
inc
scas
inc
out
dec
repnz
loopne
push
gs
or
scas
mov
fbstp
sub
enter
dec
ret
jmp
push
das
sub
jecxz
sbb
adc
jne
or
mov
int3
js
inc
push
or
ja
push
jo
jg
fld
inc
and
sahf
sbb
add
(bad)
mov
push
ins
or
ror
push
loop
mov
adc
call
ins
jne
mov
enter
data16
add
xor
lock
nop
mov
sti
fdiv
sub
out
adc
ret
and
sbb
adc
mov
mov
aaa
push
das
gs
(bad)
pop
jb
xor
aaa
push
arpl
jbe
xor
adc
add
and
push
int3
xlat
lods
add
sbb
pop
pop
push
dec
ret
dec
ret
or
ds
loopne
xchg
fdivr
ficomp
and
xor
mov
mov
or
imul
mov
inc
shl
and
js
mov
in
or
xor
push
jbe
dec
sbb
dec
rcr
pop
push
jne
add
xchg
pop
jo
xchg
jl
add
adc
loopne
in
test
mov
xor
sub
add
jecxz
loop
cmp
dec
ss
adc
cs
fimul
mov
imul
test
mov
in
mov
mov
push
push
loopne
push
dec
mov
dec
leave
mov
sub
ss
or
or
sbb
sbb
test
lea
adc
pop
pop
xor
mov
add
loop
pop
pop
mov
daa
xor
mov
mov
in
adc
dec
sub
xor
xchg
scas
cmp
popa
mov
xor
add
inc
jb
push
rol
cwde
arpl
jnp
lods
fs
or
jno
rcl
cmps
cld
imul
sub
push
inc
xor
adc
pusha
popa
test
or
pop
mov
out
and
(bad)
sub
mov
in
icebp
adc
mov
pushf
test
jge
call
fnstcw
les
in
push
add
mov
mov
xor
or
add
in
loope
mov
cld
push
pop
ja
push
sbb
xlat
aaa
(bad)
mov
xchg
pop
adc
scas
xor
or
fcomi
js
loopne
sub
push
enter
in
inc
push
and
sbb
lahf
mov
enter
push
xchg
xor
sbb
add
pop
shr
enter
loopne
frstor
or
and
call
imul
mov
pop
or
sbb
sbb
cmp
int3
adc
stos
outs
call
ds
push
push
pop
and
aaa
push
shl
(bad)
sub
clc
sbb
iret
inc
pusha
and
or
xor
jne
ret
rol
js
push
push
and
sub
jl
pop
shr
movs
inc
test
mov
outs
sbb
loope
push
add
push
ret
push
add
mov
dec
add
(bad)
xchg
ins
pushf
xchg
mov
jmp
adc
sar
lock
adc
push
dec
sbb
xchg
adc
pusha
ret
mov
dec
add
sub
gs
pop
call
inc
add
xor
or
enter
mov
mov
or
int3
mov
test
mov
push
pop
mov
and
xor
jl
mov
add
push
inc
jns
inc
mov
rcl
dec
xor
call
pop
dec
pop
and
add
sub
enter
xchg
(bad)
je
pop
ins
inc
pop
sub
call
mov
repz
js
inc
cmp
inc
nop
xchg
and
shl
sub
push
enter
mov
xor
xor
popf
ret
dec
mov
iret
lods
dec
push
mov
outs
pop
dec
xchg
out
mov
mov
xchg
xchg
xchg
inc
and
xchg
xchg
xchg
dec
sub
xchg
xchg
xchg
push
adc
pushf
xchg
xchg
xchg
adc
pop
sbb
sub
adc
jo
retf
jno
inc
add
push
call
jb
push
push
jl
cs
pusha
mov
mov
aaa
and
loop
xchg
xor
xlat
test
dec
fidiv
es
pop
sub
pop
jmp
push
dec
add
(bad)
int3
xchg
sbb
xor
inc
fwait
loopne
and
mov
add
pop
(bad)
add
adc
arpl
push
sbb
stc
add
rcl
push
nop
xor
or
pop
stc
dec
icebp
inc
movs
or
sub
mov
adc
dec
(bad)
jbe
pop
outs
cld
cmp
pusha
movs
add
or
jae
inc
lea
push
mov
dec
movs
fnsave
mov
ja
jle
cmp
lds
add
pop
adc
cwde
and
movs
out
imul
test
push
add
cld
mov
pop
ret
push
popf
mov
push
pushf
sbb
movs
nop
aad
leave
ret
movs
aaa
js
jle
mov
sbb
push
pop
cwde
cmps
loopne
fimul
sbb
mov
shl
cld
inc
cmp
jge
cmp
fmul
js
sbb
pop
les
ror
loop
or
arpl
shl
call
fist
add
lea
bound
lock
pop
mov
dec
sub
xor
pop
mov
inc
mov
and
and
aad
(bad)
or
call
jo
sub
nop
xchg
repnz
test
xor
call
jns
iret
mov
repnz
sahf
retf
pop
enter
test
out
adc
and
in
push
adc
enter
loop
ds
mov
pop
xor
cmp
in
cmp
pop
mov
jo
jecxz
movs
mov
xor
das
push
es
not
adc
bound
ja
jg
jne
aam
dec
cmp
dec
cmp
inc
mov
stc
sbb
stos
and
sbb
xor
add
push
push
stc
adc
fxam
imul
or
sar
and
popa
aaa
mov
iret
sbb
sbb
or
pop
cmp
cmp
xchg
pop
xor
jne
adc
push
mov
jnp
mov
inc
loope
out
pop
popa
cwde
mov
xor
fiadd
inc
add
sub
sub
test
fcom
shl
xor
ins
loopne
rol
rol
inc
dec
xor
out
sbb
and
xor
cmps
pop
cmc
xchg
or
add
xor
inc
fcmovb
xor
scas
adc
sub
ror
add
popf
iret
cs
xchg
cmp
inc
sub
mov
adc
adc
jae
ret
es
pop
cmp
add
pop
cmp
xchg
add
aas
xor
mov
js
xlat
aaa
sbb
pusha
test
push
mov
js
or
test
jne
mov
in
inc
fwait
repnz
and
mov
dec
jno
je
lea
lea
or
cli
imul
mov
push
dec
dec
mov
mov
ins
movs
outs
and
jge
jmp
imul
fadd
lock
sub
jl
outs
sbb
shr
movs
hlt
jo
inc
sub
and
add
add
lods
mov
pop
pop
out
cmp
and
add
pop
xor
ins
ins
je
lea
popf
test
fucomp
test
sub
push
jns
sub
push
movs
push
aam
or
sub
inc
xlat
and
xor
push
sub
dec
movs
cmc
test
adc
push
mov
jge
cwde
push
push
sub
push
jecxz
call
mov
sub
mov
dec
mov
aas
and
sub
out
cwde
fisub
push
jo
test
mov
pop
sbb
mov
or
xchg
cmps
add
xchg
pop
add
out
test
inc
inc
retf
jae
leave
in
retf
mov
jnp
ret
lods
mov
xor
jle
and
leave
dec
add
push
test
ss
nop
cmp
movs
and
add
or
fdiv
js
es
add
sub
sbb
pop
cmp
ret
mov
push
outs
push
(bad)
dec
add
iret
push
ins
jge
jne
ret
cmp
mov
add
jno
mov
adc
data16
call
cmp
cld
jo
xchg
out
and
sbb
dec
or
mov
ja
cld
sti
mov
or
push
cmps
and
lods
lock
cmps
push
sbb
(bad)
xor
mov
add
xor
ret
adc
dec
(bad)
sbb
inc
test
pop
mov
mov
or
push
add
or
cs
jae
dec
jmp
in
mov
inc
cwde
or
pushf
jge
jb
push
push
js
ficom
sub
add
lods
in
cmp
inc
mov
xor
imul
xor
push
adc
xlat
add
sbb
jge
movs
xor
sub
fwait
lock
test
les
fisub
sbb
enter
shr
in
rcr
or
aam
push
sbb
push
loopne
repnz
inc
ins
jecxz
vmovups
fs
or
mov
dec
mov
inc
or
jae
jo
pusha
add
sahf
xor
xchg
or
fistp
pop
or
push
loopne
cs
push
sbb
test
je
pop
sub
mov
push
or
adc
and
add
cmp
xchg
ret
jp
push
jbe
repnz
(bad)
fisub
fnsave
push
bound
inc
xor
es
cmp
dec
jbe
add
mov
push
fist
push
je
or
pop
inc
xor
jne
mov
fnstenv
shr
xchg
jb
cmp
mov
(bad)
nop
cmps
mov
aam
mov
in
fadd
cmp
adc
movs
(bad)
out
movs
imul
fimul
loope
jge
push
sar
push
jo
add
adc
imul
in
les
and
outs
shr
in
mov
or
stos
xor
push
mov
repnz
cmp
push
(bad)
mov
push
xor
cs
dec
sub
mov
push
rcr
jmp
arpl
push
lock
adc
in
mov
sbb
dec
loope
or
dec
inc
jb
rol
fimul
or
and
mov
inc
ins
sub
add
inc
mov
sub
jge
pop
cmp
adc
sbb
pop
in
imul
je
cmps
pop
rol
push
arpl
push
imul
inc
sub
jo
push
dec
cmp
rol
adc
test
sub
sub
inc
or
bound
sbb
and
add
icebp
add
adc
xor
inc
mov
fiadd
push
xchg
add
or
or
pop
fnstenv
jle
mov
push
lahf
sbb
inc
xchg
push
clc
test
mov
clc
xchg
jl
mov
js
sbb
hlt
scas
ja
gs
push
and
add
dec
popa
addr16
leave
adc
and
loopne
retf
jge
mov
test
jge
push
lds
ins
aam
xor
hlt
rcl
or
sbb
cmp
dec
jmp
(bad)
or
pop
dec
test
fs
je
cmp
fld
in
enter
sbb
push
inc
popa
mov
sub
sti
scas
mov
mul
js
jbe
push
jae
pop
jmp
sbb
or
loopne
cmp
je
jge
mov
inc
movzx
jb
jmp
push
loopne
idiv
and
and
push
test
in
call
jl
pop
cs
mov
push
push
dec
dec
or
lock
popa
or
push
push
add
fimul
inc
xchg
dec
sub
ds
push
adc
and
and
adc
sub
mov
outs
push
sub
jge
mov
sbb
aam
rol
pop
jbe
int
inc
push
mov
hlt
pop
clc
daa
add
xchg
dec
add
jne
mov
push
inc
imul
add
and
fist
mov
and
cmp
adc
pop
call
push
cmp
jl
jmp
jl
push
add
dec
sub
imul
inc
jno
add
sbb
dec
pop
jae
sub
es
popa
adc
sbb
shr
test
fadd
or
push
cmp
push
xchg
in
and
int3
push
or
mov
adc
clc
mov
and
pop
push
call
sbb
push
push
or
or
imul
or
pusha
mov
retf
bt
in
frstor
cmp
adc
mov
adc
inc
cmp
inc
js
pop
adc
inc
cmp
add
jne
push
add
test
or
xchg
jp
adc
int
or
sbb
mov
pop
jae
inc
stos
bound
jmp
and
test
or
push
pop
mov
sub
dec
pop
xchg
cmp
sub
aaa
idiv
inc
xor
and
mov
push
icebp
push
lea
rcl
push
push
unpcklps
add
fisubr
sbb
cmp
aas
nop
push
add
ret
test
push
or
pusha
mov
cmp
or
ret
mov
sub
add
ret
push
movs
mov
sub
sahf
and
imul
pop
inc
xchg
mov
add
xor
clc
call
fdiv
and
ror
ins
cmps
push
push
push
dec
test
in
fadd
nop
cdq
push
xchg
mov
or
push
int3
retf
loopne
pop
lock
loopne
push
push
fiadd
mov
js
fs
out
add
xor
xchg
nop
in
xchg
mov
sbb
adc
gs
retf
cs
push
lea
xchg
pop
add
and
fwait
push
sub
icebp
imul
mov
(bad)
or
push
mov
test
cmp
xlat
and
push
das
add
dec
cwde
cs
cmps
sti
add
mul
fsub
clc
pusha
ins
fisub
pop
add
jg
pop
push
push
jo
inc
ret
repnz
add
es
push
or
jno
int3
sar
push
and
call
or
dec
shl
push
adc
jae
push
das
sti
movs
loope
dec
in
cmc
inc
and
ss
int
addr16
mov
xchg
gs
btc
pop
call
bound
adc
pop
mov
dec
test
in
push
add
les
fdivr
call
cmp
ss
pop
jmp
test
mov
lods
aad
jo
lea
sub
lea
repz
daa
je
in
cmp
dec
pop
js
lds
movs
pop
xor
out
xchg
sbb
cmp
imul
(bad)
dec
jle
inc
add
inc
or
add
sbb
pushf
test
addr16
push
push
push
sbb
ss
add
inc
je
sti
pusha
sbb
pop
enter
dec
sbb
inc
inc
or
adc
js
mov
cmps
lods
ss
cs
cmp
rol
xchg
cmp
scas
inc
xor
shl
xor
sub
dec
mov
mov
cmp
inc
add
not
adc
cdq
jb
outs
jecxz
mov
add
int
jg
jmp
scas
and
or
mov
push
push
imul
daa
jae
and
addr16
sub
jle
sub
add
fsubr
pop
(bad)
arpl
adc
push
add
shl
retf
push
inc
or
inc
aam
cmovge
stos
mov
ror
push
cdq
idiv
sahf
push
mov
xor
push
sbb
sar
push
xor
shl
ret
sar
rcl
push
adc
lods
adc
xchg
loope
inc
repnz
mov
fisttp
adc
push
mov
or
sti
ins
push
or
mov
push
jge
xchg
pusha
add
sub
add
mov
int
or
jmp
inc
xchg
das
daa
xchg
cmps
and
xchg
mov
mov
or
mov
lock
add
mov
xor
and
mov
test
inc
shl
retf
in
and
pusha
out
aaa
mov
movs
cli
outs
cmp
imul
sti
or
retf
out
adc
pop
inc
hlt
add
int3
pop
cld
sbb
outs
push
pop
das
loop
xchg
pop
or
sub
dec
mov
jge
loope
jo
xchg
pop
lock
ret
rcr
(bad)
push
inc
inc
js
push
jecxz
pop
cmp
inc
or
ss
shl
xchg
popf
mov
adc
push
or
pushf
pop
lahf
push
lods
add
xor
jo
(bad)
jne
pop
arpl
clc
pusha
cmp
jno
scas
mov
mov
sbb
or
mov
sub
fnstsw
in
or
jge
fisttp
jne
xchg
sbb
push
mov
jmp
xor
push
sar
sbb
and
or
or
imul
add
mov
xor
adc
movs
shl
add
sub
(bad)
pop
outs
(bad)
jo
push
ret
outs
loope
test
jae
xchg
add
sub
push
push
adc
xor
clc
or
jle
sbb
push
sub
inc
and
in
mov
xchg
and
jmp
and
dec
push
daa
dec
fistp
or
ror
dec
mov
sub
mov
push
sbb
dec
sbb
inc
inc
xchg
add
and
dec
push
mov
push
xor
sbb
push
ss
in
mov
inc
dec
adc
lods
not
inc
outs
imul
mov
inc
test
pop
or
xchg
jns
xor
hlt
pushf
sub
cs
mov
lock
or
popf
aam
mov
sbb
lock
adc
clc
fstp
popa
dec
add
sub
mov
xchg
mov
hlt
adc
int3
loopne
les
or
ja
lods
sub
out
outs
adc
xor
repnz
add
cld
popa
rol
push
mov
mov
imul
mov
add
enter
inc
cmp
enter
push
add
adc
mov
std
(bad)
std
add
and
movs
xor
gs
mov
jo
xchg
out
sub
mov
mov
jp
push
mov
sub
cmp
loop
lea
test
or
mov
mov
add
enter
push
push
int3
mov
add
fsub
sbb
add
add
mov
push
jmp
or
xchg
mov
inc
movs
das
lods
pusha
aaa
jg
dec
pusha
movs
mov
shl
es
ficomp
imul
or
push
(bad)
das
push
jecxz
in
pop
push
mov
inc
adc
sbb
and
dec
fsqrt
jno
xchg
dec
movs
shl
aam
fcomp
jl
mov
and
jl
mov
dec
sbb
jo
xor
lock
aaa
cmp
or
add
ror
xlat
loopne
adc
shl
hlt
lds
xor
mov
ins
in
jo
push
xor
sbb
data16
pop
lea
sbb
scas
or
and
inc
(bad)
pop
xor
prefetcht1
dec
loopne
or
and
movs
mov
in
retf
or
ret
fdiv
add
jecxz
pop
sub
je
rcl
ret
mov
mov
inc
xchg
test
xor
xor
dec
test
or
pop
xchg
sbb
scas
popa
cvtdq2ps
push
fcomp
pop
pop
dec
push
mov
mov
dec
loope
add
pcmpgtw
shl
push
jmp
xchg
shl
mov
add
push
ss
iret
fild
push
mov
pop
loope
mov
mov
ud0
scas
mov
fwait
xchg
jmp
mov
xchg
les
inc
scas
xor
add
or
jb
add
add
or
cmp
jl
test
jmp
cmp
cmp
push
sub
jnp
inc
dec
pop
les
sbb
adc
pop
or
movs
and
rcl
cmp
inc
inc
imul
stos
cdq
adc
test
xchg
ficom
cmp
jg
sar
sub
inc
adc
adc
sti
or
sbb
xor
pop
push
sbb
sbb
out
dec
push
adc
fcomp
and
js
jle
sti
movs
in
jge
sbb
call
push
in
jle
dec
cmp
sar
shl
mov
dec
inc
in
or
dec
pop
mov
loop
or
loopne
add
pop
push
add
mov
jl
fisubr
jl
fmul
push
jp
push
cli
xchg
inc
fadd
jmp
mov
add
or
sub
pop
push
and
pusha
jnp
or
stc
cld
dec
in
cmps
mov
test
popa
cmps
mov
ss
(bad)
jb
out
pusha
and
lahf
je
test
fwait
xchg
call
add
cwde
push
lea
pop
stos
and
lock
push
add
pop
pusha
add
or
or
dec
int
dec
pop
xlat
(bad)
and
sbb
ds
jb
call
sub
scas
sub
jge
or
pop
pop
cmp
loop
inc
pop
movs
je
pop
in
add
mov
adc
daa
or
fcom
inc
ror
xchg
inc
aam
int3
pop
xchg
add
jp
pop
push
mov
sub
push
push
add
stos
cmps
cdq
mov
loopne
daa
sbb
sub
mov
add
(bad)
ret
ror
in
in
adc
loopne
loopne
xchg
pop
push
cmp
in
pop
push
add
sub
je
cmps
jecxz
push
pop
dec
out
hlt
push
sbb
repnz
or
and
push
inc
add
sar
jl
dec
mov
inc
mov
repnz
js
pop
jnp
ficomp
mov
ret
lock
push
sbb
add
(bad)
sub
jge
xor
mov
xor
enter
clc
jp
adc
movs
sub
jns
and
add
xlat
add
lea
outs
in
or
cmc
jno
sub
js
mov
cmp
imul
pop
dec
sub
push
pusha
loopne
mov
and
inc
add
inc
jge
jecxz
jo
test
pop
pop
nop
mov
and
add
jo
fild
je
std
fisttp
(bad)
jge
je
pop
enter
cmp
popa
(bad)
mov
dec
repnz
imul
je
icebp
add
fstp
adc
push
outs
push
push
xchg
arpl
add
mov
and
test
retf
xchg
and
pop
ds
jmp
bound
jmp
inc
rol
into
popa
sbb
sbb
sbb
neg
add
xchg
xchg
in
dec
das
loope
es
adc
into
loopne
or
sub
stos
data16
mov
jnp
xchg
mov
xor
rcl
or
sbb
or
mov
xor
mov
call
(bad)
popf
push
dec
movs
sbb
adc
and
mov
sub
adc
xchg
imul
enter
mov
je
push
xor
jbe
jl
add
add
int3
jb
jge
inc
push
pop
jmp
push
jnp
fild
shl
fmul
dec
mov
mov
mov
pop
test
ds
and
in
or
popa
shr
or
add
iret
cmp
imul
inc
inc
shr
test
adc
lods
je
loopne
lods
adc
sbb
test
pusha
mov
dec
call
jmp
jae
cmp
jmp
call
cwde
mov
(bad)
retf
sub
jle
pop
icebp
ins
ds
jle
lds
mov
xchg
push
jno
push
pop
test
loope
jne
arpl
arpl
sbb
shl
push
jp
inc
or
out
push
or
pop
inc
fiadd
out
inc
call
xchg
int3
lods
inc
popf
jp
mov
cwde
sti
test
mov
adc
js
add
sbb
stc
xor
xchg
xlat
int
ja
inc
les
adc
jns
pusha
inc
test
imul
push
jmp
cmp
pusha
xchg
fsub
push
adc
and
shl
inc
jbe
aaa
mov
push
mov
adc
add
dec
lods
and
cmp
xchg
fdiv
ret
les
mov
idiv
pusha
push
cwde
call
stos
or
ffree
xor
push
clc
sbb
lea
adc
or
gs
mov
call
or
aam
sbb
daa
push
xor
retf
mov
adc
adc
push
popf
cmps
push
and
aad
jl
adc
mov
xor
jg
mov
sbb
pop
cmovae
or
imul
xor
pusha
clc
mov
pusha
xchg
dec
les
sbb
push
jns
fist
or
cmp
rsm
cmps
icebp
sbb
xor
add
and
or
ja
fcom
inc
neg
aam
inc
xchg
inc
fbld
cmps
xor
cli
add
push
aam
ss
shl
lahf
mov
js
add
cwde
xor
sbb
xcrypt-ecb
cmps
retf
sti
pushf
xor
adc
add
loop
pop
or
aad
stc
sub
or
out
sbb
add
inc
iret
add
jns
push
push
mov
xor
push
jae
hlt
cmps
sti
cmp
mov
jbe
and
push
push
in
dec
xor
cli
aad
pop
xchg
add
das
mul
aaa
gs
xor
sub
lahf
push
into
sbb
pop
jmp
sub
dec
inc
or
popa
lods
ret
jmp
loope
mov
fistp
shr
xor
jp
dec
ins
addr16
push
in
jge
sbb
dec
dec
sbb
inc
pop
mov
xor
and
pop
add
push
push
add
cmps
add
clc
sbb
jg
add
xor
mov
add
mov
jg
jb
sub
pop
and
mov
push
adc
adc
call
xor
repnz
fcomi
push
adc
push
push
ret
xchg
add
mov
ins
mov
add
dec
and
push
xor
enter
fidiv
push
sbb
out
xor
dec
(bad)
cs
adc
sub
or
push
cmp
jo
shl
fwait
sbb
dec
aam
popa
dec
or
or
sbb
add
es
ret
pop
xchg
clc
and
or
fisub
mov
int
inc
adc
pop
xor
xchg
ror
mov
pop
dec
add
sbb
inc
jg
mov
in
pop
pop
pop
lea
cmp
pop
loopne
aam
cmp
inc
lea
pop
not
fidivr
adc
jle
fdiv
inc
add
rcl
or
inc
adc
xchg
inc
loope
nop
lock
add
aaa
adc
jmp
cmps
arpl
mov
mov
pop
sbb
inc
(bad)
loope
dec
enter
jp
adc
sbb
je
in
mov
add
les
lds
or
rcr
inc
inc
and
inc
jl
(bad)
jmp
mov
xor
ds
add
hlt
shr
jle
dec
cmp
ror
loopne
push
daa
push
mov
popa
mov
and
mov
pop
stos
add
xor
lock
xchg
mov
into
out
inc
xchg
push
mov
jo
dec
movs
out
and
mov
push
xchg
(bad)
retf
adc
outs
cld
ret
sbb
test
and
pop
xchg
add
inc
adc
cmp
hlt
xor
mov
add
xchg
je
dec
xchg
icebp
sbb
adc
xchg
lods
jmp
sub
shl
fwait
and
pop
sbb
call
mov
add
jecxz
adc
pop
inc
mov
mov
cmp
js
mov
div
mov
push
aad
inc
push
je
or
push
loope
jle
push
imul
movs
jle
inc
cmp
ins
or
jbe
adc
xor
xor
and
or
push
or
push
sub
cmp
ss
adc
and
repnz
(bad)
hlt
(bad)
sbb
mov
push
jl
test
mov
je
adc
inc
adc
pop
xchg
inc
inc
pop
sahf
out
fcomp
push
add
cmp
ret
mov
inc
cmp
dec
out
mov
cmp
adc
push
or
lods
cli
dec
and
test
(bad)
je
xor
xor
imul
and
mov
push
xchg
push
xchg
sbb
sub
scas
movs
and
or
sub
cmc
and
mov
mov
sub
and
movs
xor
mov
fld
pusha
sub
fld
dec
adc
mov
js
sbb
xor
pop
inc
mov
dec
aaa
loope
es
lea
push
push
push
mov
lods
inc
push
jp
adc
cmp
pop
ret
movs
and
in
or
arpl
shl
loope
leave
fadd
les
inc
popa
push
sub
ret
jne
out
push
fisubr
sbb
mov
cmp
jecxz
sbb
or
loopne
mov
ffreep
les
ror
test
add
mov
push
push
dec
dec
push
cs
fild
or
add
add
test
inc
sub
or
test
xchg
jmp
(bad)
push
fisttp
mov
sahf
jl
jg
je
mov
fstp
sbb
sbb
in
or
sub
fdiv
repz
mov
adc
adc
mov
jb
mov
es
or
inc
or
add
je
or
push
and
xchg
sub
fstp
bound
pushf
jl
stos
cs
mov
jb
shl
adc
add
ins
(bad)
dec
je
inc
xchg
lea
inc
(bad)
loope
xchg
push
or
and
sbb
or
mov
or
lock
pushf
je
xor
add
fldenv
mov
jo
sub
pusha
xchg
pop
push
inc
push
daa
dec
push
sbb
dec
scas
outs
dec
shr
mov
add
jl
add
pop
or
call
pop
add
xchg
mov
outs
loope
push
cmp
add
push
cmp
aaa
sub
fld
add
pop
xchg
inc
inc
dec
or
add
mov
jo
jmp
or
lock
shl
dec
rcl
jne
movsx
sub
push
(bad)
retf
out
call
xchg
pop
daa
pop
inc
sub
test
adc
add
fdivr
adc
loopne
fldz
cmp
pop
int3
ret
cmp
aas
loopne
fsub
sar
repnz
push
push
mov
inc
int3
es
fs
sub
sub
adc
sbb
inc
adc
rcl
sbb
psubb
imul
xor
mov
aam
adc
je
cmc
popf
add
xchg
inc
mov
pop
jb
mov
aad
jmp
inc
enter
fild
mov
mov
dec
test
dec
sbb
leave
jbe
fld
ret
fstp
jmp
cmp
ins
jae
(bad)
and
loopne
out
shr
pop
push
clc
jl
ud0
imul
mov
rol
rcr
movs
mov
dec
loopne
mov
adc
xchg
add
ja
add
jo
add
jae
push
xchg
xchg
imul
cmps
add
mov
sbb
adc
push
xchg
mov
rol
cmp
push
dec
jns
and
call
adc
or
jle
ret
inc
xchg
push
adc
adc
xchg
es
push
scas
add
mov
ret
mov
dec
add
add
rcl
pop
pop
jg
ror
iret
inc
push
test
pop
mov
pop
adc
xor
or
add
fdivr
pop
enter
mov
push
sub
jmp
mov
jnp
push
mov
push
clc
and
mov
mov
or
add
adc
or
aaa
mov
dec
mov
and
and
mov
push
mov
test
jae
enter
adc
shl
loopne
or
test
imul
cmp
and
mov
pop
add
addr16
mov
xlat
mov
sbb
lods
cmps
dec
sub
pop
sar
je
adc
clc
sbb
add
movs
sub
aam
fsubp
xor
dec
jnp
test
push
aam
sub
cld
ss
bound
jmp
cmp
jo
push
test
js
movs
mov
cmp
mov
sbb
lea
pop
addr16
call
loopne
mov
or
and
pop
xchg
scas
dec
push
pop
jnp
aaa
jne
xchg
push
mov
sbb
test
adc
test
add
jle
popf
mov
push
retf
xor
dec
daa
test
outs
repnz
cmps
sub
adc
adc
xor
jnp
cs
cmps
inc
cmps
aaa
stc
outs
lods
retf
and
(bad)
jg
rcr
push
jo
pop
sub
sub
xchg
adc
ret
arpl
jecxz
les
int3
add
imul
retf
in
inc
adc
call
cmp
ror
add
add
or
pop
mov
fidiv
xchg
fld
ja
sbb
add
pop
pusha
cwde
repz
fadd
cmp
fcom
and
jbe
add
cmp
add
nop
mov
push
movs
sub
push
mov
xor
cmp
mov
and
sub
and
add
mov
(bad)
adc
mov
mov
adc
xor
dec
imul
jle
mov
and
test
retf
mov
push
fmulp
into
ret
jne
lea
fsubr
popf
popf
movs
movs
mov
cmp
xchg
jp
or
mov
or
inc
int
pop
cmp
push
sbb
push
idiv
fcomp
retf
stos
ss
dec
stos
sub
add
arpl
jbe
mov
or
test
xor
jns
ficomp
inc
movups
call
mov
mov
xor
mov
test
nop
or
jne
push
lods
or
xor
jne
sti
clc
lds
jle
xlat
int3
nop
push
ret
xchg
dec
inc
inc
ror
ja
sbb
mov
add
in
in
mov
xor
jg
cmp
pop
fdivr
rol
inc
je
cmp
mov
xor
mov
and
imul
mov
iret
push
mov
adc
jnp
or
test
inc
or
(bad)
lods
aad
pop
pushf
int
jl
loopne
arpl
and
dec
sub
push
jl
inc
jb
cld
pop
les
push
ret
rcr
ret
cmp
pop
fcomp
push
mov
pop
movs
or
mov
ret
(bad)
push
and
xor
mov
dec
add
mov
pop
daa
xchg
ret
rcr
sub
or
je
jmp
mov
jg
cmp
fmul
je
int3
adc
sbb
dec
ror
adc
mov
fs
cmp
jne
mov
sub
and
mov
cmp
jmp
push
clc
repnz
jo
jmp
or
cs
jl
cmp
mov
shl
inc
xor
jle
xor
cs
push
push
ret
and
loop
mov
inc
ret
test
push
push
add
inc
(bad)
sbb
and
pop
cwde
test
dec
sub
les
(bad)
out
or
jne
jo
push
cmp
movs
test
mov
xor
jne
xchg
in
xor
ror
pusha
loopne
mov
jae
jne
jns
jbe
into
into
rcl
pop
jle
mov
mov
jb
out
pop
push
add
test
mov
inc
inc
jo
xor
(bad)
retf
mov
ret
push
add
adc
xchg
or
and
push
adc
enter
xchg
push
mov
pop
add
ret
inc
(bad)
cmovb
retf
dec
jae
push
push
lods
pop
or
test
push
sbb
or
and
dec
or
pop
icebp
je
sub
or
add
add
and
call
call
jne
sbb
call
mov
adc
inc
adc
mov
lock
mov
add
data16
mov
add
cld
sub
es
sub
mov
jmp
std
lock
and
push
cmp
adc
mov
fsub
adc
nop
adc
push
scas
and
xor
mov
and
adc
add
dec
push
cmp
je
test
out
lods
addr16
jle
into
je
adc
pop
or
ins
mov
lea
sub
outs
(bad)
rcl
push
sbb
add
or
cmp
push
dec
or
or
sar
sbb
das
ret
add
imul
pop
add
jl
aam
add
add
fdiv
fst
dec
mov
in
mov
sbb
inc
out
or
enter
mov
jecxz
xchg
sti
mov
dec
xor
and
ins
xor
jb
out
push
jp
adc
adc
adc
mov
adc
xor
or
gs
push
push
dec
addr16
iret
fisttp
push
div
cmp
je
xor
sub
fiadd
loopne
inc
ret
scas
(bad)
out
(bad)
adc
dec
mov
or
sbb
mov
add
adc
add
test
and
jne
dec
enter
sub
and
rol
add
push
test
mov
mov
cmp
loope
push
sub
and
sub
call
add
and
nop
or
adc
push
dec
push
mov
in
sub
int
(bad)
ror
and
or
(bad)
popf
xor
call
fwait
idiv
and
inc
imul
push
or
(bad)
(bad)
add
inc
loopne
dec
ja
movzx
(bad)
fidivr
test
cmp
inc
jmp
loopne
push
add
xchg
jmp
adc
and
jmp
adc
imul
outs
pop
fcom
(bad)
mov
in
mov
and
(bad)
fcom
retf
iret
repz
push
mov
repz
lahf
mov
aam
pushf
pop
jb
add
push
mov
in
cmp
push
add
add
lds
in
ror
and
(bad)
or
sub
and
sub
dec
je
add
pop
inc
inc
lock
mov
mov
loop
dec
push
add
jmp
xor
aad
js
mov
and
jno
push
and
mov
sub
mov
pop
fcmovnb
rol
aam
mov
dec
shl
adc
and
add
xor
push
call
push
adc
sub
or
out
mov
ret
sbb
shl
sub
fldpi
or
mov
movs
test
mov
sub
jne
xchg
push
dec
push
sub
jge
xchg
or
(bad)
call
xchg
cmp
sbb
or
mov
test
push
jne
push
call
es
in
pop
clc
cld
pusha
hlt
fadd
sbb
sbb
loope
xchg
inc
pop
pop
es
fcomp
push
jno
pop
les
arpl
fistp
and
inc
xchg
sub
add
bound
(bad)
test
jbe
or
jp
push
inc
add
jne
add
aad
inc
add
jbe
dec
or
ds
push
jmp
push
test
pop
scas
and
test
sbb
adc
adc
cmps
(bad)
and
inc
lods
test
call
in
test
inc
push
ds
jno
loop
mov
loop
mov
dec
jp
push
aas
cmp
jl
mov
dec
inc
and
or
mov
retf
xor
adc
inc
popf
gs
push
aam
leave
dec
and
push
cmp
cs
sub
mov
xor
arpl
jbe
je
mov
push
pop
adc
jp
sbb
or
movs
cmp
les
add
and
add
jmp
test
lods
cmp
out
fstp
inc
xchg
push
xchg
mov
(bad)
in
ret
ss
out
rol
sar
jno
pop
inc
shl
rcr
adc
add
fiadd
add
mov
push
cmps
mov
push
jo
ss
shl
add
push
or
and
test
push
in
mov
stos
cmps
jle
out
push
test
push
xor
fdiv
xor
sub
repnz
leave
loope
pusha
xor
inc
js
dec
jecxz
or
ret
cwde
xor
mov
call
fdiv
and
js
mov
push
cmp
inc
sbb
adc
cmp
and
add
inc
clc
test
xor
push
cmp
aaa
mov
jge
js
jne
cmp
xchg
aad
jge
in
mov
ja
jnp
adc
jbe
pop
jne
retf
mov
sahf
inc
inc
jecxz
jne
mov
push
cmp
nop
movs
scas
dec
or
mov
into
xchg
jb
add
or
inc
sar
adc
dec
jbe
pop
test
push
pop
sub
xor
jnp
jne
cmp
xlat
dec
pusha
test
push
inc
rol
test
sub
ficom
fiadd
pop
js
rcl
jne
ret
rol
pop
or
and
mov
push
jmp
adc
sbb
test
push
push
jne
jg
pusha
push
and
fs
mov
dec
hlt
je
push
jp
and
cmovno
je
add
ja
or
test
fcmovb
sub
sbb
mov
or
mov
jmp
mov
jmp
push
xchg
loop
ss
mov
add
pop
adc
aam
sbb
inc
fistp
mov
pusha
loopne
ficomp
adc
pop
(bad)
cwde
test
pop
pop
dec
inc
cmp
sti
js
sahf
cmp
add
in
jae
push
addr16
mov
les
fld
das
pop
sbb
(bad)
mov
int3
or
xor
fiadd
and
or
and
int
mov
sbb
sbb
inc
mov
popf
adc
push
add
retf
pusha
ss
cli
(bad)
and
inc
movs
mov
push
inc
cld
cmp
cmps
jl
push
je
jmp
xchg
add
or
xchg
push
push
inc
js
test
sbb
cmp
int
adc
jo
test
loope
movs
mov
inc
and
lds
bound
mov
push
shl
popa
dec
pop
icebp
jecxz
sub
xor
inc
in
jmp
in
call
and
mov
xlat
dec
or
sub
fcom
jo
dec
mov
add
lahf
js
inc
push
test
jno
add
mov
jmp
xchg
jbe
into
adc
pop
cmp
js
adc
fimul
or
or
inc
cmps
push
inc
add
mov
mov
adc
adc
stos
cmp
inc
sbb
shr
cwde
ins
enter
fisub
xor
jmp
maxps
push
xchg
push
arpl
xchg
xchg
add
mov
add
test
pop
adc
mov
lock
adc
loopne
jno
clc
dec
push
test
adc
pop
mov
xor
adc
mov
rol
xor
push
and
dec
lea
or
rol
and
mov
lea
imul
fcom
and
lahf
call
adc
xlat
jmp
test
call
outs
push
and
fcomp
popf
fsubp
xchg
cmps
push
stos
out
fsubr
sub
ficom
fwait
or
sub
pop
iret
sbb
ret
push
sbb
pushf
push
add
push
fnstsw
mov
and
dec
fsubr
and
popa
mov
pop
jb
mov
sbb
clc
and
and
add
jno
rcl
or
pop
or
ins
mov
jmp
call
adc
sbb
jp
pop
lea
cmc
or
(bad)
je
es
jmp
loopne
or
add
xor
jne
rcr
cmp
pop
push
test
sbb
adc
je
xchg
mov
push
pop
adc
clc
fsubr
sub
es
or
das
mov
sti
cmp
push
aaa
sbb
(bad)
arpl
push
ret
pop
mov
inc
inc
xchg
sbb
sub
stc
cli
mov
inc
or
iret
shr
and
(bad)
retf
or
pushf
sbb
push
and
adc
gs
out
(bad)
push
pop
js
jb
adc
mov
dec
add
inc
push
sbb
mov
pop
pop
sti
nop
adc
cwde
add
mov
or
ds
shr
push
sub
cwde
cmp
aaa
or
push
nop
mov
ror
sbb
popa
rol
mov
test
mov
inc
adc
pushf
mov
mov
xchg
xor
ror
shr
inc
pop
pop
inc
(bad)
sti
add
adc
inc
xchg
push
inc
sub
cmp
and
jns
es
outs
add
jbe
loopne
gs
dec
cmc
or
cmc
jbe
xchg
jmp
pop
das
les
out
sub
jb
push
lock
imul
mov
popf
inc
jmp
retf
ins
xor
inc
out
xchg
push
pop
cmp
pop
pop
sub
popa
outs
retf
adc
popf
cmp
sub
mov
sbb
ins
movs
or
sti
dec
cmp
pop
and
jmp
jmp
push
arpl
mov
hlt
dec
pushf
add
iret
adc
jl
xor
mov
fidivr
dec
jmp
inc
cli
xor
ret
bound
test
push
lods
push
push
rcl
add
sar
jmp
icebp
and
cmc
xlat
push
inc
enter
adc
inc
in
pop
jnp
(bad)
add
push
add
loopne
add
aaa
loope
and
xor
lods
mov
mov
inc
hlt
jmp
mov
sub
jl
movs
in
les
add
or
pop
ret
xchg
and
cwde
mov
rol
jmp
xchg
add
scas
lea
jbe
or
scas
movs
adc
dec
call
mov
xor
loop
and
xchg
push
lods
or
call
inc
in
cmp
or
inc
jle
sub
push
jmp
mov
fld
sub
rcl
movs
dec
or
mov
jo
call
movs
jl
sub
push
ss
adc
sub
jnp
or
cs
fbld
lock
rcl
out
adc
in
and
mov
and
fistp
es
xor
inc
pop
inc
sub
stos
call
mov
mov
scas
sti
ss
inc
push
rcr
push
fisubr
add
add
adc
call
or
loop
and
imul
sbb
xchg
retf
loopne
and
cmps
jecxz
xchg
rcl
dec
mov
jle
in
mov
frstor
mov
fcmovbe
or
fimul
xchg
hlt
retf
nop
movs
push
push
sbb
aad
ja
fld
movs
test
aad
mov
jp
pushf
jmp
pop
rcr
jbe
or
push
or
jb
jle
push
mov
cwde
push
push
(bad)
dec
ret
mov
cwde
sbb
add
xchg
in
push
mov
popa
mov
mov
jmp
retf
cmp
dec
sbb
mov
dec
push
out
fidivr
aas
in
mov
fistp
(bad)
ds
ret
mov
add
cmc
lahf
out
shr
test
cmc
xor
je
mov
mov
mov
aas
xor
leave
mov
ffree
out
aaa
mov
lea
push
xor
fstcw
add
gs
push
sbb
jo
pop
jp
mov
pop
jae
sub
mov
sub
jnp
pop
xchg
adc
popa
add
or
adc
clc
lea
add
(bad)
hlt
push
(bad)
out
push
sub
fninit
and
cmp
sub
and
(bad)
jle
push
scas
add
xor
rcr
and
lock
pop
mov
test
cmp
dec
str
adc
adc
jns
(bad)
pop
shl
cmp
or
inc
jne
cmp
push
(bad)
mov
push
dec
dec
inc
out
data16
mov
or
add
or
out
xor
mov
and
out
or
mov
je
test
inc
mov
in
pop
imul
(bad)
in
ret
pop
aaa
mov
test
je
mov
or
adc
jl
neg
retf
pop
fld1
daa
dec
pop
(bad)
or
push
test
jmp
lods
and
sbb
cld
cld
fcomp
mov
fwait
mov
fstp
pop
sbb
fldenv
jo
gs
add
ret
ins
adc
mov
js
cdq
fisubr
mov
and
popa
outs
and
cmp
xchg
test
add
jle
pop
iret
push
sbb
test
dec
push
and
inc
xor
inc
loopne
jnp
pop
lods
lock
call
jo
mov
mov
ret
ds
mov
je
sbb
xchg
push
xor
test
xor
test
pop
adc
add
fstp
sbb
push
pop
(bad)
mov
xchg
xor
push
mov
sti
fsub
in
es
popa
femms
lahf
cwde
mov
ja
pop
push
and
clc
cld
mov
ret
das
mov
add
nop
(bad)
fwait
sahf
jp
fstp
aas
push
lods
fs
mov
movs
inc
xchg
jo
mul
sbb
push
jne
cmp
ja
call
pop
pop
pop
popa
mov
and
pop
push
pop
xchg
mov
pop
xchg
pop
push
lds
mov
daa
push
sub
push
test
imul
push
sbb
or
jo
xchg
pop
jmp
xlat
xor
mov
mov
neg
push
fcomp
lahf
push
jg
mov
iret
clc
and
ret
and
push
jge
stos
or
sahf
adc
inc
dec
add
mov
in
pop
fnsave
xor
(bad)
jg
adc
enter
loopne
clc
mov
shl
ins
outs
or
pop
dec
das
adc
xchg
(bad)
inc
jb
add
stc
test
cmc
or
(bad)
jne
idiv
sbb
mov
inc
push
(bad)
mov
or
loopne
fdiv
out
add
push
into
movs
xchg
mov
and
add
sub
or
in
pop
dec
clc
push
je
sbb
xor
sub
call
mov
cmps
ds
lds
clc
fldcw
push
sbb
add
and
jg
jle
adc
mov
push
inc
pusha
dec
movs
sar
add
adc
cmp
imul
js
adc
add
jns
mov
bswap
mov
cld
mov
dec
ror
loopne
pop
pop
inc
mov
dec
scas
invlpg
lods
inc
fs
js
adc
mov
adc
std
(bad)
mov
jae
push
pop
mov
mov
mov
mov
add
cld
sbb
add
mov
jne
test
ret
xchg
or
mov
cmp
jl
ret
adc
imul
pushf
cwde
in
cmp
cwde
test
push
cwde
push
clc
out
jbe
mov
adc
dec
pop
pop
out
rcl
aam
mul
pop
push
adc
icebp
inc
add
dec
mov
fsub
inc
scas
inc
xor
pop
or
sbb
out
pop
dec
hlt
clc
pushf
pop
lock
add
mov
ins
clc
cmp
fsub
rol
ins
inc
int3
push
js
xor
push
dec
fs
or
ror
enter
xor
jnp
pop
inc
sbb
test
push
popf
int3
fcmovnb
push
and
sahf
mov
and
xchg
jge
dec
or
jo
xor
cld
or
adc
test
and
js
dec
or
adc
(bad)
(bad)
setge
fs
jmp
add
aad
push
dec
mov
pop
fsub
and
jl
mov
or
dec
sbb
add
cmp
jae
(bad)
int
pop
add
mov
dec
dec
push
add
clc
dec
adc
add
stos
popa
out
out
inc
xor
and
pusha
dec
jecxz
(bad)
mov
ins
or
call
adc
test
imul
dec
shl
sti
push
mov
out
xchg
fld
pushf
dec
pop
(bad)
push
clc
and
mov
bound
mov
outs
and
sub
or
mov
mov
mov
inc
adc
pop
mov
shl
call
ret
pop
(bad)
out
test
add
loop
retf
bound
cmp
aaa
ins
sub
adc
mov
adc
or
mov
pop
pop
fcomi
adc
pop
sbb
mov
jge
jle
movzx
sbb
push
mov
out
sub
retf
xor
add
add
inc
jmp
pop
ja
and
loope
add
lahf
fld
fisub
inc
lock
test
pop
pop
inc
aas
or
ins
sub
inc
sub
jne
popa
fwait
ret
xor
xchg
inc
cdq
(bad)
mov
mov
lea
popa
jmp
cmp
ret
jne
movs
sbb
hlt
pop
in
lahf
sbb
jns
ret
push
sub
adc
shr
sub
push
push
cdq
adc
push
add
push
in
sbb
sbb
xchg
out
ins
mov
sbb
scas
jo
mov
adc
sbb
pusha
push
mov
push
push
sbb
xor
addr16
add
mov
or
sbb
jne
push
imul
push
mov
out
cmp
les
loope
rcr
add
(bad)
push
add
ficom
lea
pushf
inc
mov
adc
pop
test
add
xchg
rol
and
ins
add
push
(bad)
adc
call
jae
push
push
ret
cmp
aam
inc
dec
adc
push
inc
or
lock
mov
mov
movs
cmp
pop
mov
mov
outs
test
pop
xor
adc
movs
or
cmovle
add
pushf
mov
jbe
test
lods
cmp
clc
xor
rcl
adc
add
mov
aaa
mov
push
sub
fidiv
sub
sub
test
ret
(bad)
and
clc
push
sbb
or
popa
mov
lods
sbb
jg
lea
ja
fs
pop
or
jl
add
clc
mov
add
mov
and
pusha
jno
outs
push
mov
rcl
test
push
cmp
imul
popa
jb
cs
hlt
jne
push
add
jl
xor
or
jmp
adc
sub
or
mov
mov
(bad)
jne
data16
aad
sub
and
adc
in
dec
push
sbb
sub
sub
fs
mov
add
scas
mov
add
mov
test
sbb
lods
and
sbb
or
fwait
cs
inc
jg
mov
adc
shr
inc
push
xor
fild
shr
rcr
shr
rcr
or
push
(bad)
call
test
std
sti
in
(bad)
cmp
or
cmp
add
data16
jo
(bad)
dec
dec
fsub
sbb
inc
and
pop
dec
xor
xor
or
mov
out
sbb
ss
pop
sbb
push
into
repz
pop
pop
es
ret
jns
jmp
inc
loopne
shl
stos
iret
enter
pop
adc
add
push
push
bound
mov
push
or
call
pop
aas
add
dec
js
adc
aad
dec
rol
mov
je
add
xor
sub
cmp
sub
movs
push
add
(bad)
mov
mov
cs
fxch
push
mov
lea
push
int3
sbb
pusha
jmp
mov
mov
rol
add
int
mov
mov
xchg
not
lea
dec
push
test
add
int
inc
inc
inc
jg
das
or
out
ficomp
adc
add
mov
pop
mov
cmp
scas
mov
sbb
cmp
call
lock
repz
hlt
clc
clc
cld
cdq
pushf
imul
xor
outs
pop
inc
adc
loope
push
pop
rol
mov
call
sbb
adc
lea
and
fmul
jl
cld
jmp
scas
(bad)
cld
out
sar
adc
stc
sub
mov
pop
nop
call
push
fiadd
pop
sar
dec
mov
lods
mov
outs
fwait
mov
out
add
outs
in
xchg
mov
popa
pusha
ficomp
pop
mov
out
dec
in
add
test
push
xchg
pushf
das
ds
rep
lods
mov
mov
repz
sbb
adc
repz
repz
or
or
add
aas
push
icebp
jns
loopne
call
das
loop
imul
push
inc
pusha
mov
daa
outs
outs
cmp
pushf
push
xchg
add
sub
sub
xor
daa
(bad)
std
pusha
mov
adc
add
inc
es
jmp
xor
ja
and
dec
adc
shr
lods
adc
dec
push
jb
in
pushw
cmp
jge
or
push
jl
jge
sbb
les
add
ja
ret
out
xchg
xor
sysret
cmp
or
or
jae
popf
repz
xor
mov
inc
adc
or
push
sub
or
xlat
or
jmp
push
add
mov
add
movs
sbb
sbb
ret
sahf
fdivrp
jbe
add
add
fiadd
mov
ja
jb
ja
and
dec
fimul
and
mov
dec
inc
sbb
ficom
jb
adc
cld
mov
xor
adc
shrd
shr
ret
sbb
ret
and
shr
outs
adc
add
push
mov
and
leave
mov
stos
fwait
add
add
call
or
adc
add
mov
je
(bad)
sub
jae
mov
les
mov
jmp
movs
xor
mov
sbb
pop
sahf
fs
or
add
sub
call
mov
xchg
jno
js
inc
daa
adc
mov
mov
push
imul
mov
aaa
rcr
inc
les
pop
enter
lods
pop
jl
nop
push
or
cmp
and
jp
fldcw
mov
xor
jne
jmp
clc
inc
test
addr16
nop
les
sub
jne
pop
cmp
jmp
jle
and
je
inc
cmp
dec
popf
add
rcl
ret
mov
adc
ds
jne
and
mov
pop
cli
push
aam
sbb
pop
mov
(bad)
scas
mov
jg
add
add
xor
xor
or
outs
ins
mov
add
add
sbb
push
push
dec
cmp
cmc
mov
(bad)
fidiv
sub
push
adc
jp
push
add
pusha
mov
inc
call
clc
cdq
or
pusha
jne
inc
fldenv
inc
ret
loop
cli
pop
adc
and
inc
out
cmp
out
pop
test
pop
or
sbb
push
cdq
mov
push
je
sbb
dec
push
jnp
jmp
arpl
inc
push
sub
dec
jg
in
xchg
sbb
jne
cwde
jp
adc
fsubr
sub
movs
int3
int3
xor
fmul
xor
jne
pop
xor
inc
fild
and
cmp
je
ret
xor
pop
dec
out
or
out
scas
add
and
pop
cld
adc
xor
adc
adc
cmp
fidiv
adc
js
mov
inc
push
xor
push
pop
pop
cmp
push
int
ret
pop
sub
ins
sbb
shl
mov
inc
pop
ror
and
(bad)
clc
fisttp
mov
fisttp
and
or
sub
jne
push
pop
js
into
cdq
mov
pop
xchg
push
jae
add
adc
mov
imul
mov
pop
in
xor
xor
jecxz
mov
and
add
xor
sbb
xchg
push
jge
pop
jle
jo
adc
cdq
mov
jo
lock
mov
es
cmp
lods
add
(bad)
pop
fld
cmp
add
xchg
(bad)
adc
push
fild
and
loopne
jl
pop
clc
cmp
cmp
out
push
aaa
add
push
add
adc
rcr
ja
sub
ret
clc
adc
or
push
pop
pop
data16
inc
or
aad
mov
jb
add
retf
mov
push
adc
push
xlat
and
into
sub
ins
mov
or
repnz
jae
xchg
fidivr
mov
clc
xchg
scas
sub
sub
in
sub
add
mov
add
lea
out
jbe
mov
pop
loopne
(bad)
in
or
or
push
icebp
loope
mov
jp
cld
sbb
or
shl
jecxz
and
dec
adc
popa
jl
clc
jp
push
sub
aaa
adc
test
push
je
push
gs
loope
push
dec
sbb
push
sub
and
icebp
push
mov
mov
je
adc
mov
hlt
push
movs
jnp
pusha
popa
fld
xchg
dec
mov
nop
loopne
mov
jmp
retf
lock
call
xor
push
pop
pop
sbb
imul
xchg
int3
daa
adc
in
inc
dec
add
jle
inc
push
and
mov
mov
test
sbb
mov
adc
add
dec
sbb
pop
xor
push
sbb
mov
shr
or
loopne
push
lods
sbb
gs
mov
loop
imul
jno
enter
cmp
je
cmp
adc
xor
fild
and
jne
push
in
(bad)
outs
fdiv
cmp
jne
mov
lahf
std
xor
inc
shl
fucomip
mov
push
mov
xor
sub
(bad)
or
retf
cmp
dec
push
btr
das
sbb
jmp
mov
sub
mov
clc
pop
cmp
je
or
adc
cmp
ja
push
pop
dec
pop
mov
or
retf
dec
cmp
into
mov
add
or
cmp
sbb
mov
or
pusha
aad
adc
mov
stos
lea
mov
lea
or
test
outs
aam
xor
inc
cmp
je
in
mov
jne
or
push
push
jecxz
push
adc
or
add
ret
stc
xor
jle
xor
fscale
test
xor
and
pop
xchg
cmp
mov
add
sbb
inc
cld
cmp
je
outs
ins
fdiv
out
iret
xor
je
adc
cmp
arpl
outs
or
dec
cmp
loopne
stos
or
inc
neg
dec
mov
std
adc
pop
je
cmp
add
sbb
loop
in
jmp
xor
jmp
clc
test
and
adc
cli
xchg
mov
imul
add
(bad)
icebp
inc
xor
push
jmp
add
and
mov
mov
adc
cmp
hlt
cs
inc
sub
dec
pinsrw
jno
inc
jmp
jns
push
xchg
rep
lods
lods
push
cmp
and
out
ja
xchg
movs
shl
lea
sbb
in
push
xchg
(bad)
sub
dec
push
test
dec
bound
push
shl
mov
mov
test
call
mov
inc
adc
inc
push
dec
pop
rol
out
mov
dec
shl
and
inc
xchg
into
test
loop
fiadd
cmps
pop
add
pusha
rol
mov
jp
or
jae
retf
shl
and
js
xor
ins
dec
je
arpl
inc
test
adc
fdiv
add
or
sub
xor
pusha
mov
ds
jne
nop
mov
sub
xchg
je
dec
cld
popf
addr16
push
and
jmp
sbb
adc
inc
mov
cmp
aaa
xor
and
push
mov
mov
jne
rol
mov
sahf
adc
inc
and
xor
push
or
mov
or
pop
sar
or
inc
push
scas
sbb
or
or
push
dec
or
sbb
loope
mov
dec
je
pop
add
popa
adc
xor
push
dec
sub
neg
loope
in
add
fs
xchg
mov
sub
mov
cli
or
xor
popf
or
or
and
cmp
and
call
daa
dec
lahf
pop
cli
imul
cmps
inc
adc
add
sti
add
jle
mov
jmp
popf
fidiv
dec
or
jge
inc
loopne
dec
push
jmp
cmp
mov
addr16
mov
(bad)
pop
inc
xchg
fstp
stos
out
sub
(bad)
call
lock
and
loopne
std
mov
sbb
ins
pop
pusha
mov
test
inc
lea
adc
cmp
jp
dec
mov
std
jmp
repnz
cmp
sbb
and
add
fiadd
rcr
movsx
mov
push
cmp
pop
add
jmp
es
popa
(bad)
je
push
out
into
daa
mov
pop
dec
rol
mov
adc
cmp
mov
ret
je
push
sub
fsubr
leave
jnp
jge
fcomi
sub
add
pop
dec
pop
loopne
adc
cdq
jmp
daa
xor
ret
mov
repz
and
mov
sub
push
adc
mov
mov
(bad)
jmp
sub
je
sub
xor
into
mov
outs
loop
xor
bound
fdiv
or
mov
dec
movs
shl
cld
or
clc
test
inc
retf
jp
mov
leave
cmp
nop
sub
loop
add
fbstp
add
loop
or
mov
test
and
lods
aad
xor
popf
iret
fcom
je
mov
fsubr
mov
mov
lock
push
mov
xor
pop
gs
jmp
cmp
inc
adc
jb
les
mov
movs
mov
lock
ds
ins
add
push
sbb
adc
lods
and
lahf
adc
mov
and
ss
cmp
stos
push
lods
cmp
sbb
hlt
pushf
les
call
xchg
cmp
nop
push
lds
pop
mov
aad
bound
jge
ja
(bad)
jbe
shl
or
sub
shr
enter
and
pop
or
adc
jle
jae
sahf
jmp
inc
out
jnp
jne
add
int3
sub
inc
nop
mov
jmp
in
add
xchg
push
add
or
sbb
xchg
ss
sar
push
lea
adc
js
add
lods
and
ret
je
movs
jecxz
xor
sbb
imul
adc
fnstenv
jb
int3
push
inc
xor
pop
inc
xor
pusha
xchg
fadd
or
xchg
or
hlt
or
inc
inc
jae
or
or
popa
xor
mov
sbb
call
push
pop
pop
inc
js
loopne
stos
xor
dec
push
or
cmp
ins
invd
add
mov
stos
or
or
mov
jmp
mov
das
sbb
adc
push
mov
pop
sub
loop
xchg
jle
sbb
push
dec
sub
xor
pop
mov
movs
mov
or
out
jne
add
add
adc
pop
add
add
adc
dec
cmp
add
pop
inc
bts
jmp
aaa
ja
inc
in
inc
mov
sub
mov
sbb
(bad)
sar
cli
add
push
stc
xchg
jbe
dec
push
push
jne
adc
(bad)
stos
inc
mov
cmp
inc
or
(bad)
rol
jecxz
je
mov
out
or
push
cmp
push
inc
icebp
loope
pop
sbb
(bad)
data16
iret
mov
push
and
push
pushw
shl
arpl
iret
push
mov
ror
movs
adc
add
pop
call
in
jg
and
cmp
cld
fistp
and
or
or
(bad)
lahf
ror
sbb
cvtps2pd
mov
or
push
xchg
scas
sahf
add
nop
xchg
push
and
shr
out
push
push
rcl
cmp
push
cmp
add
shl
cld
push
and
(bad)
stos
adc
sub
lahf
or
repz
repz
test
fs
dec
loopne
rcr
shl
clc
adc
loope
push
int3
loopne
pop
jns
pushf
fild
lock
fisttp
pop
nop
pop
push
dec
jno
fistp
mov
or
add
push
fisubr
daa
fbstp
repz
or
adc
and
ret
add
adc
mov
push
push
and
fbld
cmp
inc
shl
inc
inc
xchg
imul
rcl
dec
mov
mov
push
add
or
push
push
imul
xchg
adc
jbe
loopne
outs
or
je
mov
mov
pop
mov
sub
or
leave
gs
je
and
or
ret
call
test
pop
pop
jmp
dec
mov
pop
sub
push
xchg
rcl
mov
jp
add
mov
lods
inc
test
leave
aam
inc
jne
mov
dec
or
adc
and
xchg
je
rep
je
inc
dec
not
or
inc
loope
pusha
or
adc
lock
inc
sub
int3
add
pop
popf
aam
dec
dec
rol
inc
imul
add
mov
jne
add
sbb
std
add
mov
mov
push
xor
and
sub
or
jmp
stos
cli
ret
adc
adc
xchg
sbb
or
sbb
or
stos
mov
rol
inc
shl
or
xlat
clc
(bad)
test
ror
pcmpeqw
push
icebp
push
inc
inc
dec
dec
scas
pop
cmp
jne
adc
sub
mov
cmp
jo
in
push
and
enter
xchg
add
sub
cmps
mov
push
cld
or
mov
adc
cmc
sub
xor
lock
jge
adc
push
stos
and
les
push
add
sha1msg2
(bad)
sbb
out
jne
cmp
fsubr
pop
test
and
push
push
and
sbb
clc
mov
pop
ret
jne
pusha
cld
mov
pop
dec
mov
je
sbb
aaa
jno
xchg
adc
mov
or
cmp
popf
fchs
or
xor
sbb
loop
push
pop
pop
clc
es
pop
pop
sub
xor
rol
sub
jb
add
or
clc
adc
retf
mov
jmp
jle
cmp
jge
sub
fisub
cwde
adc
inc
adc
and
dec
test
dec
lahf
ficomp
mov
sbb
dec
pop
jle
(bad)
pop
retf
pop
push
sub
mov
push
(bad)
mov
int3
ins
(bad)
scas
out
push
push
ficomp
mov
ror
sub
es
out
jg
outs
sub
inc
add
adc
push
add
or
ds
inc
or
add
stc
inc
jbe
or
jbe
or
pop
cs
bound
push
jle
out
xlat
outs
cmp
rcr
sbb
add
or
mov
ret
jge
inc
jge
pop
cmps
xor
inc
inc
fdivr
and
or
sub
jmp
jge
loop
xchg
dec
and
sub
pop
les
and
or
retf
aam
dec
sbb
sub
icebp
mov
and
xchg
fsubr
lock
mov
scas
cmp
dec
shl
and
push
icebp
cs
cmp
and
pop
add
inc
lds
add
call
and
fistp
cld
sar
shl
xchg
adc
cld
lock
and
clc
xchg
inc
xchg
je
jns
in
pop
push
ss
add
xchg
push
dec
loopne
test
pop
je
push
pop
add
pop
mov
lods
movs
in
dec
(bad)
push
sbb
sbb
rcl
loope
and
lock
cmp
sbb
jb
xor
mov
push
lds
or
mov
in
or
xchg
mov
int3
test
enter
(bad)
add
and
mov
iret
fcmovnu
push
cwde
inc
pop
mov
add
popa
cmp
xor
leave
and
ret
enter
push
fstp
add
push
aaa
xchg
or
and
in
fs
sub
xchg
dec
nop
add
sbb
pop
mov
into
nop
(bad)
or
adc
test
jl
xchg
mov
push
or
fsubp
xchg
or
cmp
rcl
xchg
sbb
test
bound
lahf
or
mov
fsubr
into
cmp
adc
or
xchg
dec
shr
mov
mov
cmp
cmp
test
add
ror
inc
xchg
xchg
pop
add
ja
test
pop
xor
xor
dec
sub
add
rol
mov
adc
ja
push
in
sub
and
and
ins
xchg
mov
fwait
ret
adc
jns
mul
sub
and
xor
mov
pop
adc
xor
je
cmp
and
outs
imul
add
pop
push
jne
aas
add
add
and
pop
inc
mov
scas
mov
or
es
repz
pop
xor
or
mov
loopne
repz
cmp
push
push
mov
(bad)
push
dec
cmps
nop
mov
ret
adc
mov
sbb
mov
pop
mov
jne
jb
push
pop
cmp
jbe
rcr
mov
sbb
fidiv
dec
jecxz
or
xchg
test
cmp
push
sub
pop
cld
add
dec
test
mov
call
into
test
cmp
jbe
push
adc
xchg
jbe
call
and
or
and
(bad)
sbb
or
not
sti
fiadd
add
cmp
mov
jo
sub
lods
or
cmp
ins
xlat
add
cmp
aad
sbb
pop
mov
clc
adc
or
shr
inc
cmp
pusha
mov
jb
cmp
jb
stc
and
sbb
inc
and
jp
mov
in
bound
ret
cld
cs
mov
mov
push
jo
or
pop
stc
sbb
loopne
rcl
add
(bad)
or
mov
dec
adc
inc
lods
or
stos
popf
leave
stos
mov
and
ja
test
fdiv
or
push
push
push
scas
push
fwait
sar
push
push
adc
xor
xchg
dec
adc
and
fiadd
or
cli
add
ret
es
add
xor
add
pushf
xor
mov
lea
jl
push
xchg
add
sbb
jmp
pushf
sub
sbb
adc
mov
loop
pusha
loopne
pop
mov
or
leave
xchg
shl
shl
xchg
and
imul
(bad)
movs
repnz
push
cmp
add
in
cs
pushf
inc
push
dec
or
pop
test
mov
mov
xchg
sar
or
and
jno
jg
adc
movs
adc
add
js
cwde
aas
cmp
or
or
jle
inc
dec
add
inc
xor
push
pop
popa
or
rep
mov
lock
mov
jmp
shr
sub
push
mov
inc
inc
push
mov
jle
(bad)
mov
adc
inc
retf
pop
xchg
or
mov
xor
cwde
test
cmp
hlt
xor
add
sbb
lock
or
mov
int3
push
pop
add
add
bndldx
cdq
test
cmp
inc
adc
lock
mov
aam
mov
pusha
push
cwde
pop
add
adc
jecxz
neg
jmp
and
push
adc
sub
test
or
test
or
cmp
adc
mov
cmp
sbb
je
outs
call
and
and
adc
or
mov
fs
sub
clc
dec
dec
aad
mov
sbb
nop
pop
or
imul
sub
(bad)
xchg
xchg
mov
sbb
inc
sub
xor
pop
mov
and
test
pusha
add
fisub
mov
mov
add
fsubr
scas
sbb
mov
jge
add
lea
mov
test
maskmovq
test
xchg
dec
(bad)
aaa
push
mov
jmp
inc
lods
das
adc
mov
add
cmp
je
push
and
mov
cli
cmp
scas
push
cld
mov
cmps
or
cmc
inc
inc
xchg
cmp
ret
das
sbb
jb
xor
pop
and
mov
jbe
nop
push
movs
movs
pop
mov
adc
add
(bad)
jo
add
inc
or
push
push
jno
mov
mov
xchg
stos
add
mov
cmp
jl
ds
(bad)
and
dec
fcom
pop
adc
or
pop
fcom
sbb
daa
mov
scas
and
sbb
sub
add
mov
pop
fdiv
xchg
sub
mov
je
or
jl
add
out
xor
movs
or
push
or
add
jecxz
add
mov
pop
ffreep
pop
pop
into
mov
and
test
sub
push
or
mov
mov
enter
mov
mov
and
ret
adc
sub
sbb
and
inc
loop
pop
or
sbb
add
inc
add
or
jbe
rcr
pusha
add
xchg
adc
ss
lods
push
pop
inc
std
cmp
cmp
and
sub
cmp
mov
mov
adc
push
lea
mov
sbb
push
inc
outs
xor
je
and
cmp
femms
xchg
adc
sub
pusha
fidiv
(bad)
ficom
adc
mov
push
mov
or
fist
mov
push
popf
cmp
and
loopne
xchg
sbb
(bad)
lods
dec
pushf
loop
dec
jb
mov
and
pop
push
inc
xor
jo
adc
mov
int3
adc
push
inc
inc
jmp
ins
jecxz
and
xchg
mov
dec
es
xchg
sub
pop
inc
xchg
lock
loop
or
bound
je
shr
push
pop
and
or
and
sub
adc
movs
sub
mov
arpl
fnstenv
or
jns
test
inc
daa
ret
sub
adc
ins
scas
fld
out
or
dec
inc
mov
pushf
daa
mov
jo
mov
test
xchg
fs
inc
cmp
test
loop
and
and
adc
adc
nop
pop
or
test
cmp
lea
enter
push
cmp
push
mov
mov
mov
mov
mov
ds
adc
or
push
sbb
inc
push
movups
push
scas
aam
cld
jl
ins
mov
fdivr
xor
je
cmp
add
pop
and
cmp
jne
mov
hlt
add
mov
je
shr
sbb
jmp
xlat
arpl
pop
or
add
cwde
and
test
jae
dec
or
push
dec
lods
fld
call
inc
or
jbe
inc
sbb
ja
xchg
fidiv
push
jmp
or
xor
dec
cmp
cmp
xchg
dec
test
call
scas
aas
ins
inc
clc
and
and
in
cmp
pop
push
cmp
push
push
lock
pop
cdq
call
xchg
and
cmp
xchg
sahf
cmp
push
push
mov
jl
add
outs
jne
pop
dec
ss
adc
mov
into
inc
shr
push
sar
adc
push
push
mov
andps
outs
dec
retf
test
retf
push
xor
movs
sbb
(bad)
xchg
and
mov
test
shl
inc
or
xchg
xor
cmc
dec
xchg
pop
jo
dec
mov
cmp
xor
xor
and
dec
sbb
imul
jne
(bad)
cmp
or
bound
cmp
cmp
inc
jp
mov
rol
cli
jl
cmps
shr
xchg
test
inc
inc
pop
jne
(bad)
aad
into
sbb
inc
pop
pop
mov
inc
cmp
(bad)
sahf
(bad)
xchg
xor
mov
inc
retf
or
and
inc
fcom
or
mov
movs
push
jmp
inc
sbb
nop
cmp
addps
push
add
das
pushf
sub
add
jns
inc
aaa
inc
add
or
add
shr
inc
inc
jmp
and
xchg
adc
in
xor
(bad)
dec
inc
and
mov
inc
add
js
or
or
jmp
xor
rcl
inc
adc
push
pop
inc
bound
inc
pusha
stos
add
xchg
cmps
shl
aas
je
mov
ret
adc
lds
aas
push
mov
add
pop
je
loope
pop
popa
mov
and
jp
push
sbb
inc
leave
jp
jmp
xchg
inc
sub
ins
push
sbb
loop
aad
scas
ret
add
add
outs
adc
(bad)
cmc
aaa
retf
or
mov
and
jg
or
cmp
out
iret
mov
stc
or
xlat
add
sar
sbb
or
mov
add
push
shr
pop
push
xlat
inc
je
gs
in
cdq
dec
dec
and
push
nop
popa
test
sahf
push
je
jmp
push
jo
push
cmp
ret
jmp
adc
pop
fs
dec
or
push
ror
push
in
pop
sti
or
sub
inc
aam
popf
adc
xor
push
jp
mov
push
pop
mov
add
fdivr
in
adc
push
sub
nop
xor
js
add
mov
add
sub
jo
xchg
sti
dec
in
inc
add
and
aas
test
jmp
sar
mov
inc
sbb
adc
mov
cmp
mov
or
movs
cmp
jnp
push
mov
cmp
add
scas
add
out
mov
scas
int
sbb
sbb
add
pusha
inc
mov
pusha
add
rol
iret
ins
pushf
or
push
adc
dec
loop
add
mov
test
jecxz
lods
xchg
xor
or
loopne
retf
dec
into
xor
retf
inc
and
inc
pop
mov
mov
mov
mov
inc
inc
xor
inc
fild
data16
es
test
sbb
mov
adc
nop
push
pop
jmp
ret
and
test
in
xor
jnp
pop
push
loope
and
mov
push
or
fimul
mov
cmp
add
js
sbb
xor
cmp
daa
fst
idiv
xor
adc
mov
xor
inc
(bad)
mov
jo
or
repnz
popaw
fstp
or
jae
test
push
pop
or
sar
popa
sbb
push
xor
mov
cmp
dec
aas
fldcw
inc
xor
adc
and
(bad)
cdq
add
xchg
and
adc
push
fimul
sbb
jmp
jle
ror
inc
sbb
sub
pop
inc
or
test
loop
movups
xchg
jo
cld
lock
imul
(bad)
jbe
shl
push
in
inc
nop
fsubr
inc
inc
jno
add
sub
fdivr
ret
in
stos
inc
jbe
inc
cmp
add
cmp
jg
sub
mov
inc
cmp
jne
sbb
jno
push
jl
shl
mov
or
jmp
push
fs
or
mov
mov
xor
add
cmps
in
ds
push
mov
mov
enter
or
push
cmp
into
mov
jmp
repnz
or
(bad)
or
into
inc
ss
mov
fimul
or
adc
push
pop
and
pop
test
add
cmp
shl
or
mov
xadd
(bad)
push
jne
push
and
movs
mov
pop
sbb
es
add
fld
xlat
lods
test
stc
or
mov
repnz
and
add
mov
cmp
pop
add
sub
pop
sbb
div
(bad)
dec
arpl
in
adc
xor
pop
test
adc
adc
mov
shl
sbb
fld
or
and
and
jmp
das
enter
cwde
sub
inc
rcl
pop
xchg
ins
aam
in
jbe
xor
mov
xor
sbb
add
push
std
xor
and
pusha
test
xchg
jmp
cmp
push
pop
in
pushf
push
enter
push
sub
xor
mov
pop
jmp
mov
or
mov
fdiv
xchg
out
sub
jl
inc
and
or
aam
or
sbb
add
sbb
rcl
cmp
lahf
dec
imul
cmp
add
imul
mov
mov
dec
ss
in
rcl
xor
add
push
mov
cmps
pop
fidiv
push
aas
mov
fs
or
scas
mov
push
mov
mov
adc
popf
add
adc
inc
ds
retf
dec
mov
sahf
add
hlt
and
test
inc
add
cmps
in
ins
dec
cmp
je
cmp
sub
inc
cs
adc
(bad)
call
fld
mov
movs
adc
jb
dec
cld
mov
je
adc
outs
ror
ret
inc
clc
in
cld
and
out
shl
pushf
adc
adc
or
retf
js
cmp
ins
and
push
push
test
(bad)
test
push
dec
mov
ss
sar
mov
inc
mov
lods
sub
inc
sbb
out
(bad)
scas
fld
(bad)
imul
xor
mov
jle
lock
add
mov
mov
sub
mov
pop
sub
nop
dec
jle
ins
lea
int
shl
rcl
loopne
add
fsub
push
loopne
mov
fimul
ins
and
or
mov
add
inc
rcl
ret
call
jns
neg
jmp
fs
add
inc
cmps
pop
add
adc
mov
sub
or
add
inc
xor
out
inc
add
(bad)
pusha
adc
sub
out
sub
sub
in
dec
retf
mov
inc
shr
adc
pop
shl
xor
sbb
add
pop
add
ficom
les
inc
cmc
or
jmp
mov
xchg
aam
fdivr
das
mov
jge
jo
add
clc
jge
leave
add
sub
(bad)
loopne
push
je
shr
cwde
push
xor
push
push
xor
push
lahf
adc
inc
ds
add
sbb
xor
call
push
ficom
or
in
inc
(bad)
jb
adc
pusha
pop
push
sbb
cmp
or
dec
ret
sbb
pop
cmp
(bad)
in
dec
cmp
daa
mov
inc
sub
mov
pusha
xor
bound
data16
lock
adc
out
adc
pop
je
bound
cwde
test
out
jmp
and
nop
xchg
xor
add
sub
fucomip
push
add
adc
pop
aas
inc
xchg
je
pop
dec
in
jne
fxch
fld
(bad)
(bad)
in
icebp
jmp
and
in
fldl2e
fmulp
outs
jmp
mov
cmp
dec
jmp
fdivp
add
mov
jmp
ret
std
xchg
sar
hlt
outs
lea
mov
add
aad
loope
lahf
cmp
pop
mov
mov
out
mov
add
fldln2
inc
in
(bad)
js
sub
es
inc
popa
sar
or
push
pop
in
out
mov
sbb
and
push
fldz
mov
ss
xchg
test
jmp
test
add
add
add
or
adc
add
scas
daa
add
shr
(bad)
fnstenv
xchg
push
fisttp
inc
and
ret
mov
push
sbb
out
adc
cwde
xchg
pop
adc
loope
sar
xchg
mov
ss
test
or
out
mov
adc
data16
cmp
cmp
stos
pop
jle
mov
loope
sbb
jp
mov
popf
mov
jg
pop
or
and
mov
jmp
mov
fdiv
sub
popa
rcl
push
in
xchg
(bad)
pop
add
cwde
add
loope
stc
rol
pop
imul
das
sub
xchg
sbb
cmps
ret
adc
and
fwait
and
lods
push
iret
or
add
lods
icebp
in
std
rol
mov
mov
or
in
or
pop
call
xor
adc
imul
jp
or
bound
adc
push
jbe
inc
je
aad
pop
xor
pop
cld
add
add
pop
or
pop
pushf
test
and
mov
(bad)
out
mov
(bad)
ror
cld
add
popa
cmp
pop
mov
push
push
test
stos
xchg
or
push
pop
and
sub
in
ror
mov
push
call
push
retf
mov
cmp
fldcw
add
stos
lea
push
push
pop
and
(bad)
and
mov
retf
jge
inc
sub
fldcw
ret
jns
or
pop
or
inc
jo
jnp
cmp
jo
inc
cmp
mov
fld
and
or
call
push
sbb
or
movs
enter
or
mov
and
sub
les
test
xrelease
add
ret
pop
fs
pop
outs
cmp
pop
pop
sbb
cmp
data16
adc
jle
or
bound
dec
push
gs
cmp
stos
jmp
daa
je
xlat
push
pop
cmp
pop
mov
jne
sbb
cli
sbb
int3
fld
push
add
dec
fcomp
jne
test
dec
sti
stos
(bad)
lods
and
mov
imul
movs
xchg
(bad)
jmp
sbb
std
push
pop
(bad)
ja
xor
push
sar
pop
mov
adc
xor
push
adc
mov
jmp
ins
(bad)
loopne
add
jo
dec
jnp
or
jecxz
dec
jo
add
inc
jb
and
push
mov
inc
push
mov
cwde
xchg
adc
sub
loopne
fsub
push
jne
ss
out
call
push
sub
inc
les
sti
inc
jmp
lahf
pop
cmp
dec
add
imul
xchg
rcr
pop
test
pop
jne
and
ret
sub
xor
fld
push
inc
add
pop
lea
push
add
mov
out
cmp
test
fimul
sbb
cmp
add
adc
mov
fsub
adc
pushf
icebp
pop
or
repz
inc
and
gs
push
push
or
popf
and
xor
lock
dec
jb
imul
sub
add
sub
sbb
jge
add
and
into
rol
push
cwde
sbb
ficom
adc
adc
pop
imul
mov
add
push
pop
and
add
in
bound
das
into
mov
test
and
dec
add
mov
inc
call
cmp
and
add
push
or
das
and
pop
push
pop
sbb
sub
and
xor
cs
shr
xor
ja
ins
and
add
pop
(bad)
sub
cmp
fwait
mov
test
adc
mov
hlt
push
adc
jns
test
dec
add
das
cli
(bad)
hlt
shl
stos
ds
je
js
into
adc
je
or
or
imul
add
pop
ins
jo
and
out
add
retf
mov
jmp
and
std
popf
mov
add
jp
and
jecxz
sbb
lods
fstp
add
or
jmp
add
push
add
push
add
push
or
pop
cmp
or
icebp
dec
and
jecxz
daa
jae
mov
xchg
dec
add
cmp
cs
mov
inc
and
pop
cmp
mov
test
pop
imul
mov
push
cmp
inc
or
repnz
fimul
scas
es
adc
sti
add
fist
test
fisttp
push
stos
sar
repz
jmp
dec
(bad)
or
dec
add
xlat
lock
movs
and
or
or
xchg
xchg
adc
or
push
push
popw
adc
mov
imul
dec
and
inc
xor
fld
fld
fstp
dec
mov
(bad)
jno
push
and
bound
shr
test
inc
fcomi
fwait
pop
sub
sbb
repz
push
div
dec
xchg
cmp
or
pop
mov
sti
clc
je
cmps
cmp
adc
inc
sbb
and
push
mul
and
cmp
push
mov
sub
mov
clc
add
pushf
cmp
fcomi
fstp
outs
aas
stos
or
dec
inc
cmp
sbb
movs
jns
cmp
sbb
xchg
mov
sahf
and
push
xchg
inc
inc
ja
pop
(bad)
test
pop
loope
(bad)
and
or
pop
sub
call
push
lea
cdq
imul
clc
into
sti
or
retf
mov
push
test
rcl
pop
add
inc
cli
call
imul
pop
sub
test
xor
shr
sbb
inc
test
or
add
clc
ror
lea
sbb
push
pop
pop
je
add
push
aaa
imul
popa
push
or
and
nop
jmp
ss
xchg
lds
mov
add
sub
push
sbb
and
clc
or
push
retf
push
(bad)
mov
and
sbb
cmp
cdq
pop
sub
push
push
rol
out
fwait
add
xor
popf
xor
dec
sub
out
int3
jle
clc
mov
movs
fmul
pop
and
daa
stos
call
jo
pop
mov
mov
in
call
imul
lods
push
test
dec
or
test
or
push
add
loope
push
nop
mov
shl
xchg
jge
inc
dec
push
push
sahf
add
or
jbe
jo
clc
out
shr
rcr
inc
movs
add
mov
and
lds
pushf
loop
jle
mov
xchg
and
loopne
add
adc
inc
call
mov
loope
pop
pop
cwde
push
ret
shl
ret
or
inc
inc
rol
xchg
jb
dec
sahf
jb
and
push
(bad)
(bad)
xor
outs
xor
sub
pop
cli
pop
push
shl
or
or
sbb
dec
popa
mov
shr
adc
out
and
loopne
(bad)
and
cmp
mov
ss
push
pop
mov
and
mov
data16
cmps
push
mov
inc
aaa
push
repz
loop
ror
inc
cld
inc
enter
adc
mov
dec
cld
or
ins
or
cld
and
or
loop
data16
sub
or
mov
and
add
sbb
adc
data16
mov
fcomp
out
jmp
pop
inc
mov
and
pop
push
adc
or
fsubrp
and
lea
cmp
push
stc
mov
xchg
jp
push
push
sbb
or
jmp
inc
add
mov
pop
data16
sub
arpl
jge
test
mov
add
test
shr
pop
xor
inc
popf
popf
push
mov
mov
pop
sar
in
cmp
je
cmp
je
push
xor
mov
sbb
scas
cli
xchg
fbstp
or
fisub
mov
sar
test
imul
call
push
add
mov
(bad)
ja
imul
div
in
push
(bad)
push
jmp
pop
add
cmp
nop
xor
nop
les
(bad)
inc
pop
push
sbb
inc
push
inc
loopne
cld
lea
mov
jnp
add
and
sbb
popa
sbb
cdq
push
push
pop
mov
inc
push
jmp
or
sbb
xchg
xchg
aad
jle
adc
pop
sub
push
js
jmp
popa
test
lock
gs
movs
fmul
push
cmp
and
fild
add
jmp
ror
or
fcomip
fisttp
test
stc
ret
pushf
sbb
mov
add
pop
sbb
xchg
mov
addr16
sbb
aas
mov
xor
jns
pusha
jns
in
push
sbb
fmul
and
cmovb
sub
pusha
leave
dec
test
mov
fcmovnbe
add
je
xor
das
std
test
dec
jae
sub
jb
into
and
rcl
jae
test
add
es
out
sti
je
ins
jmp
(bad)
ja
into
dec
fdiv
cmp
int
aaa
jnp
fcmovu
clc
adc
fisub
scas
lds
fstp
adc
xchg
enter
jno
or
fimul
pop
adc
scas
ins
mov
lea
push
xchg
fsubr
mov
pop
push
nop
retf
or
xchg
bound
rcl
ins
out
xor
and
retf
sbb
retf
(bad)
or
push
int3
xchg
adc
(bad)
jge
fisub
das
pop
enter
retf
retf
imul
cmp
or
mov
pop
mov
xor
add
in
pusha
and
dec
xor
or
mov
imul
movs
and
pusha
das
inc
int
or
jb
into
movaps
cmps
cmp
rcl
jnp
jge
xor
das
inc
into
add
lds
cmp
fisub
(bad)
jge
xor
js
lods
movs
das
push
cmp
push
pop
mov
push
addr16
or
xor
loopne
cmp
mov
scas
into
push
fild
and
in
sub
adc
xor
or
fsub
push
mov
xchg
fisttp
and
inc
rcr
xchg
push
push
pandn
mov
or
fld
or
add
dec
add
inc
xchg
xor
jl
cmp
sbb
mov
lds
push
mov
ds
lock
xchg
inc
call
mov
jge
aam
push
dec
fst
or
pop
cs
popf
dec
xor
stos
test
sub
das
popa
mov
push
inc
scas
std
and
pop
xor
mov
mov
sub
aam
cmps
xor
pop
or
movs
push
add
xchg
fsub
mov
pop
dec
inc
push
adc
test
cli
mov
xlat
adc
aaa
es
imul
push
lods
add
ret
add
mov
loopne
and
or
or
fcom
iret
push
lock
popa
add
add
fsubr
pop
xor
or
jg
fdiv
jns
push
sbb
sub
dec
shr
sbb
xor
je
jae
lahf
imul
cmps
das
clc
ins
push
add
popf
mov
jb
push
mov
jg
dec
pop
jb
(bad)
lods
ins
xor
int3
out
push
sbb
sbb
adc
rcr
xor
and
or
(bad)
imul
pop
xor
xor
ffreep
push
fbstp
shl
test
jb
cmp
ret
mov
mov
je
icebp
out
in
cmp
add
mov
cmp
dec
add
or
pop
sti
sbb
fsubrp
cwde
pusha
leave
mov
jns
je
cmp
ficomp
adc
outs
ret
xchg
pop
and
cmc
cmc
enter
in
add
mov
sub
push
push
sub
mov
jbe
or
and
add
sub
fs
push
jp
stc
adc
call
jmp
repnz
push
add
mov
jle
push
push
cmp
nop
jle
jne
ror
clc
pop
test
pop
call
or
pop
mov
jg
ds
pop
cmp
add
pop
pop
push
xchg
add
push
pop
jmp
mov
add
(bad)
adc
jmp
adc
or
jmp
pop
mov
jp
pop
dec
or
add
mov
jne
shl
push
aam
fnsave
jno
mov
mov
adc
out
je
pop
pop
push
push
lock
or
jmp
ret
into
or
pop
push
xchg
aam
jne
rol
xchg
pop
mov
imul
lahf
(bad)
iret
pop
div
xor
mov
clc
je
cmp
cmp
mov
pop
fadd
cmp
(bad)
sbb
or
pop
mov
sbb
cmp
popa
pop
aad
shl
repnz
inc
mov
pop
rol
jno
mov
in
in
fisttp
xor
test
cmp
bound
xor
(bad)
jl
sub
movs
test
icebp
mov
push
mov
cmp
push
sub
test
add
push
jmp
daa
inc
mov
cli
dec
sub
sbb
sub
sbb
inc
mov
push
fimul
and
or
dec
or
aas
or
stos
or
and
adc
popa
movs
mov
rcr
inc
adc
or
or
pop
sub
mov
cmp
or
mov
out
push
xor
test
sub
in
sub
jbe
push
jns
jne
sbb
adc
add
push
or
int3
sub
mov
clc
and
or
hlt
lahf
leave
or
pop
dec
jge
ret
xor
mov
adc
dec
loopne
push
xor
jmp
mov
sub
pop
mov
jne
icebp
or
mov
icebp
shr
enter
jmp
and
inc
test
add
shr
push
mov
adc
xchg
push
inc
(bad)
jae
inc
dec
aaa
and
push
jns
or
int3
int
or
jmp
sbb
fistp
adc
mov
and
out
jmp
addr16
(bad)
stos
add
jnp
adc
loope
xor
fistp
imul
fcmovbe
in
adc
xchg
mov
jae
sbb
mov
xor
push
mov
ds
clc
or
call
adc
(bad)
ds
outs
adc
ret
sahf
cmp
push
adc
push
cmp
push
cmp
(bad)
sub
daa
pop
push
push
dec
test
mov
push
int
xchg
xchg
std
rol
jb
jmp
das
xor
lock
scas
push
pop
cmp
icebp
xor
sbb
sbb
xchg
adc
fs
inc
add
push
push
pop
mov
test
cmp
and
stos
jle
bound
aas
dec
pop
idiv
jne
adc
push
jecxz
ins
jg
cmps
sbb
fstp
inc
mov
or
call
pushf
and
add
mov
jb
or
(bad)
inc
ret
aas
mov
jge
mov
fstp
mov
les
cld
mov
or
jnp
jg
add
xor
mov
or
js
dec
scas
daa
or
clc
jle
xchg
aaa
jns
(bad)
iret
je
je
sbb
dec
clc
inc
cmp
loope
nop
adc
adc
xor
jg
jmp
lods
dec
(bad)
fst
iret
mov
adc
push
lea
adc
push
repz
mov
adc
pop
sbb
xchg
xchg
mov
bswap
mov
cli
jle
call
mov
scas
shl
rcr
clc
es
add
clc
jae
cmp
jl
mov
lods
(bad)
jg
popa
adc
(bad)
sbb
enter
xchg
loopne
pop
bound
lock
ins
add
fstp
sbb
rol
adc
test
cmp
dec
cmp
push
or
dec
mov
inc
and
clc
(bad)
(bad)
ret
pop
pushf
pop
and
push
add
ss
pop
test
fisttp
sbb
sub
or
data16
addr16
inc
retf
add
push
jae
xchg
sub
ret
bound
ficomp
dec
jle
cmp
mov
inc
mov
inc
jmp
lock
imul
adc
addr16
jmp
mov
outs
cmp
mov
nop
leave
jle
mov
lock
cmps
mov
cmc
adc
ins
jle
test
sbb
jmp
(bad)
xor
or
add
popa
js
push
add
mov
adc
cmp
add
inc
inc
add
lods
push
sub
xchg
das
out
(bad)
sub
cmp
popf
cmps
ficomp
adc
(bad)
xchg
scas
pop
push
push
jg
or
(bad)
add
es
cmp
adc
cld
xchg
jbe
pop
mov
adc
sbb
loopne
js
sub
push
mov
es
inc
and
stc
icebp
jmp
push
sub
dec
int
push
imul
retf
sbb
adc
aad
lds
sub
iret
sub
jmp
adc
icebp
in
loopne
xlat
sbb
sub
jg
push
add
sub
push
mov
or
push
lahf
ficom
dec
imul
in
add
adc
dec
ds
popa
fwait
out
lahf
and
adc
pop
test
sbb
sub
inc
das
mov
data16
or
add
adc
cmps
pop
ins
xlat
jbe
das
sbb
mov
and
or
mov
push
cmp
jo
and
aas
mov
cmp
outs
aam
push
cmp
lea
dec
push
ins
std
es
jle
add
mov
pop
jbe
imul
xchg
xor
add
fisttp
mov
addr16
jnp
mov
cmp
jmp
jae
push
imul
pop
push
sbb
mov
hlt
add
ins
add
mov
lea
xchg
pop
xor
push
das
sub
mov
pop
jl
push
hlt
icebp
add
fdivr
or
cs
mov
push
cmp
pop
mov
cmp
pushf
cdq
lods
or
int
pop
clc
mov
mov
ins
add
or
mov
or
or
test
fwait
aam
pop
jg
add
mov
cld
push
push
ins
mov
pop
push
mov
fstp
mov
jbe
pop
jmp
aas
sub
jl
imul
or
mov
adc
cwd
and
pop
cmp
sbb
gs
push
inc
outs
nop
pushf
std
int3
pop
rol
ins
xorps
mov
and
jmp
xchg
ss
stos
call
loop
sub
not
test
mov
ret
inc
xor
mov
xor
inc
push
sub
fiadd
add
xor
xchg
popa
fs
loope
inc
sub
ins
inc
mov
sub
pop
mov
xchg
cmp
mov
or
inc
pop
call
dec
popf
sbb
sbb
imul
or
inc
push
add
mov
fild
dec
std
sbb
add
push
dec
or
stos
add
and
inc
and
outs
div
(bad)
cmps
inc
or
shl
icebp
and
inc
mov
inc
shl
gs
add
outs
cs
rcl
test
in
sbb
cmp
sbb
adc
sbb
and
cld
cmp
outs
xor
ror
pop
popf
(bad)
shl
adc
mov
add
sub
jge
jmp
add
mov
leave
pop
js
or
jmp
aas
pusha
test
leave
and
cmp
add
pop
push
push
xor
(bad)
out
xor
sti
or
inc
sbb
fadd
cmps
xchg
enter
aas
add
jge
jle
lea
pop
stos
inc
adc
cmp
xor
push
add
xchg
mov
push
sbb
les
int
js
out
cs
pop
cmps
lea
inc
push
push
or
push
inc
dec
fdiv
xchg
add
rol
inc
pushf
push
lods
(bad)
jne
les
jge
pop
je
adc
dec
and
jo
fdiv
ret
nop
fld
dec
lock
dec
adc
pop
push
inc
xor
inc
or
mov
adc
jg
sbb
gs
call
sub
ins
(bad)
frstor
inc
popa
call
(bad)
ds
sbb
mov
or
(bad)
test
iret
je
push
data16
test
adc
push
sbb
sub
call
xchg
and
enter
or
adc
xchg
push
aam
mov
or
pop
add
push
ins
iret
jmp
dec
shl
leave
repz
mov
enter
fwait
sbb
fist
mov
mov
jmp
fst
pop
ins
add
fnsave
bnd
lods
adc
or
mov
sbb
adc
or
call
push
outs
retf
jne
shl
xor
fiadd
or
div
pop
push
pop
ins
fst
fld
or
mov
mov
out
loopne
out
xor
push
push
or
out
sahf
adc
call
mov
add
mov
pop
sbb
and
iret
imul
or
adc
mov
xor
fs
and
pop
out
mov
lea
pushf
into
xchg
push
add
retf
sar
ja
shl
dec
cmp
jbe
push
pop
xchg
xor
add
lods
ror
jae
mov
rcl
and
jg
jmp
or
sbb
and
dec
les
pushf
mov
push
dec
xor
xchg
push
or
add
push
sbb
pop
add
jae
cmp
adc
cs
inc
mov
int3
jecxz
pop
hlt
ret
adc
clc
and
and
cli
xor
dec
pop
xlat
dec
push
sbb
or
jbe
cmp
and
cmp
es
adc
es
jno
cmp
mov
retf
shr
not
and
add
jl
pop
inc
dec
loopne
cmp
aas
jae
xchg
or
cmps
cdq
pop
xchg
dec
pop
add
pop
dec
mov
enter
push
call
jle
pop
rol
es
bound
sbb
or
jg
loope
mov
ror
sahf
mov
push
dec
push
mov
pusha
sbb
inc
pop
or
xchg
xchg
dec
adc
dec
stos
dec
pop
jl
push
mov
or
mov
sar
inc
xor
add
test
sti
mov
arpl
shl
dec
or
add
xchg
sub
pop
push
loopne
gs
fcomp
mov
or
sbb
push
pop
movs
mov
scas
push
dec
adc
popa
loope
jns
cld
dec
adc
xlat
inc
(bad)
and
mov
or
and
mov
adc
add
xor
push
ror
push
push
scas
mov
ja
les
or
jbe
ds
imul
cmp
out
cmp
in
adc
pop
push
into
mov
retf
add
scas
dec
pop
and
inc
xchg
cs
inc
push
push
(bad)
adc
adc
js
mov
not
call
lahf
push
push
push
pop
pusha
jae
inc
mov
pop
dec
pusha
mov
push
and
push
ret
adc
jg
addr16
mov
jns
(bad)
jae
fnstsw
fmul
add
mov
dec
jae
and
outs
mov
in
es
pop
mov
mul
fisttp
sbb
xchg
cmp
call
inc
neg
dec
sub
out
pop
mov
ins
jl
inc
adc
mov
adc
inc
or
bound
les
cld
ret
inc
pop
inc
cmp
push
fsubp
cmp
push
cdq
or
out
int3
lods
xlat
nop
dec
scas
into
call
not
pop
push
add
test
sub
pop
mov
add
aad
ret
adc
jle
pop
aaa
dec
(bad)
clc
jb
loop
inc
dec
popa
cmp
ror
sub
iret
rol
cmp
and
mov
dec
jne
mov
in
and
jmp
xchg
cmps
add
loop
add
or
push
ins
int
adc
xor
arpl
add
mov
outs
into
and
sbb
nop
ret
adc
push
jl
int
dec
mov
dec
inc
mov
push
inc
or
aas
dec
aad
cmp
dec
jge
inc
mov
or
mov
les
dec
shr
or
adc
jmp
(bad)
mov
push
or
push
jnp
arpl
add
sub
or
sbb
push
inc
cmp
add
data16
mov
cmp
lods
add
inc
add
xchg
jne
mov
mov
ds
push
outs
jne
xchg
cmp
fild
outs
sub
int3
hlt
aam
add
add
dec
dec
int
cmp
push
xchg
add
fwait
adc
push
pop
sbb
les
data16
je
jno
inc
mov
cmps
xor
icebp
or
sub
repz
or
dec
inc
mov
dec
idiv
retf
mov
jno
adc
xchg
imul
inc
ret
outs
imul
add
xor
in
xor
cmp
or
out
adc
or
dec
or
pop
push
lods
push
xchg
add
ds
sti
ja
lea
dec
in
mov
psubsb
jo
or
inc
cld
lock
shl
sub
and
add
int
lock
enter
sub
pop
dec
les
mov
adc
and
or
inc
inc
ret
xchg
adc
test
hlt
mov
jne
or
mov
xor
not
and
movs
xchg
movs
xchg
push
pop
sub
add
or
in
movs
xor
add
dec
cmp
ret
jmp
seto
xor
stos
or
icebp
jg
aas
sbb
pushf
pop
push
mov
pop
dec
ret
sbb
push
or
pop
cmps
in
test
push
jecxz
sub
sub
shl
call
nop
dec
or
dec
and
and
inc
loopne
push
lea
mov
mov
xor
cs
pop
mov
sub
ins
xor
adc
dec
xchg
or
dec
pop
dec
pop
xor
ss
pop
pop
pop
add
xchg
adc
test
int3
adc
and
jo
and
and
inc
mov
jae
test
mov
ins
xor
test
mov
mov
sub
loop
sbb
(bad)
jae
lea
mov
mov
ins
pop
xor
xor
and
(bad)
pop
div
push
ret
xor
aaa
xor
pop
sbb
pop
jne
push
xlat
sub
popa
xor
repz
add
and
xlat
dec
push
in
loop
je
in
repz
ja
mov
adc
pop
push
je
add
or
fstp
pusha
jo
mov
enter
add
pop
fisttp
ret
push
lods
add
pop
lds
xchg
xor
cmp
push
inc
cmp
mov
xchg
dec
sub
dec
aas
cmp
cmp
into
(bad)
fadd
pop
xor
rcl
sbb
mov
clc
aaa
or
sub
sbb
inc
push
aad
aad
add
mov
push
dec
add
je
jmp
mov
pop
mov
adc
pop
call
sbb
por
ins
mov
adc
xor
popfw
push
push
add
add
adc
aas
ss
and
dec
inc
sbb
loopne
xor
and
push
int3
jl
adc
add
or
push
lock
jo
xchg
(bad)
fldcw
imul
mov
cld
test
ss
cmp
and
inc
dec
std
mov
xor
mov
fsub
xor
int
mov
test
add
sbb
ss
xor
pop
jo
pop
sub
or
xchg
push
or
jo
or
adc
into
lock
lods
je
xchg
jae
ret
rol
dec
cdq
add
and
scas
ud0
or
cwde
cli
not
or
or
or
mov
adc
in
stos
dec
pop
xor
mov
into
inc
and
jmp
inc
mov
aas
and
mov
xor
sbb
loopne
stos
leave
mov
jmp
retf
adc
or
dec
jmp
test
jp
int
mov
out
and
bnd
mov
adc
xchg
dec
fsubr
rcr
clc
or
jne
sahf
or
in
scas
stc
(bad)
outs
rcr
jle
mov
add
and
push
call
out
xor
sub
hlt
retf
push
das
adc
mov
adc
mov
and
mov
cs
sub
and
mov
mov
inc
cmps
hlt
push
dec
inc
sbb
dec
sub
stc
fidiv
mov
sbb
push
js
retf
jl
sub
fistp
(bad)
pcmpeqw
sub
mov
or
xor
inc
jle
test
mov
jae
xor
sbb
fimul
cdq
adc
mov
es
add
mov
mov
cmp
mov
adc
jle
sbb
pop
mov
js
shl
cld
push
sub
rcr
or
fld
sbb
pop
rcl
jle
repz
out
mov
(bad)
out
add
cld
adc
(bad)
adc
push
ds
je
sbb
sub
movs
add
push
jo
push
mov
sub
dec
jno
mov
jle
outs
sbb
mov
leave
push
mov
cld
mov
inc
cmp
cwde
add
fwait
push
jne
mov
pop
sar
enter
add
and
cmp
lods
mov
or
add
ret
add
pusha
mov
es
jnp
ins
shl
mov
push
sbb
jmp
jle
adc
jmp
shl
sbb
in
sub
sbb
push
int3
adc
xchg
xlat
lea
dec
add
or
and
mov
dec
jae
add
sub
popa
clc
sub
movs
ret
dec
jbe
loop
pop
sub
neg
sub
mov
sub
dec
inc
mov
loop
or
push
xor
add
cmp
inc
inc
jmp
pop
mov
jae
cmp
add
inc
jmp
loop
sbb
ret
jmp
xchg
add
jne
mov
jae
hlt
push
data16
xlat
nop
ret
or
pop
add
sub
push
bound
sub
jg
scas
push
sbb
mov
sub
(bad)
neg
sub
jb
fsubrp
scas
iret
dec
jnp
lods
add
jmp
outs
push
ret
add
add
mov
js
leave
jns
lock
ficomp
xchg
inc
test
aad
xor
jl
and
add
or
cmp
jbe
push
cld
cmps
inc
xor
mov
add
sahf
ret
add
pusha
jae
movs
add
mov
adc
pop
inc
stos
jo
pop
push
inc
inc
mov
popa
fistp
inc
jbe
push
jae
mov
cmp
retf
cmp
mov
mov
arpl
sub
out
cmps
cmps
mov
(bad)
leave
xchg
pop
test
xchg
leave
push
cli
adc
xchg
add
arpl
arpl
lock
or
and
mov
les
daa
or
ds
movs
jl
add
or
cmps
ret
mov
and
test
cmp
sub
loopne
pop
mov
cld
sbb
pop
or
jmp
or
dec
push
pop
shl
jo
adc
(bad)
scas
pop
inc
aam
xor
xchg
div
mov
dec
je
or
je
or
dec
je
sbb
mov
test
dec
adc
outs
nop
add
and
xchg
add
sub
popa
xor
ja
fimul
lea
cmps
and
out
cmp
mov
retf
mov
cmp
inc
shr
jmp
dec
enter
xor
aaa
jne
cmp
dec
aad
add
jbe
push
adc
sub
xchg
call
dec
xchg
ds
cmp
jne
inc
gs
std
or
aaa
jo
lods
nop
(bad)
mov
cmp
je
sbb
jbe
ror
inc
inc
push
sub
rcr
rcr
clc
addr16
ins
and
mov
pop
mov
xchg
das
call
push
jecxz
jo
ins
and
call
and
fiadd
cmp
in
(bad)
and
adc
shr
add
hlt
mov
mov
or
and
xor
sub
ror
scas
xchg
test
(bad)
out
inc
xchg
rol
out
add
sub
std
movs
inc
inc
lea
clc
inc
xchg
jo
repnz
sub
xor
punpckhbw
mov
cmps
outs
push
ret
adc
aaa
mov
xor
adc
test
mov
call
cli
add
mov
pop
mov
lock
cli
mov
jo
inc
movd
cmps
fisttp
je
ucomiss
call
mov
sub
sbb
cwde
push
adc
ds
xor
ficom
push
mov
sbb
div
not
es
xchg
jp
sbb
and
sar
clc
es
push
dec
aaa
xchg
mov
inc
xchg
mov
dec
repnz
loopne
push
adc
mov
jl
lods
pop
adc
and
xchg
sbb
add
push
fneni(8087
gs
imul
or
test
mov
mov
push
push
loopne
or
out
inc
mov
xor
jo
(bad)
int3
daa
cmp
mov
(bad)
xor
and
stos
xlat
loopne
add
dec
(bad)
fisub
pop
jecxz
push
adc
mov
mov
xor
jle
ret
jbe
jmp
inc
addr16
or
cmps
stos
pop
les
cmp
(bad)
sub
push
or
jmp
mov
jbe
shl
jbe
mov
je
jne
pop
jmp
jnp
and
inc
fwait
inc
in
leave
or
sub
mov
pop
(bad)
repnz
nop
(bad)
xchg
or
loopne
xor
xor
jg
jl
jae
lock
je
neg
(bad)
jmp
sbb
mov
adc
div
bound
or
pop
inc
cmp
stos
test
cmp
call
inc
in
fadd
call
pusha
inc
sub
add
aaa
je
push
cdq
mov
ret
mov
inc
push
or
mov
inc
ret
xor
xchg
inc
frstor
dec
sub
or
xchg
shl
fdivr
jmp
lods
sub
add
add
out
cmp
call
jo
inc
push
mov
xor
add
sbb
and
push
aam
cld
(bad)
es
mov
or
inc
sub
sub
or
hlt
or
movs
adc
lods
pop
or
add
xor
xor
push
push
push
xor
jmp
sub
in
inc
loop
bound
adc
outs
inc
add
imul
xchg
js
mov
inc
mov
lea
das
fdivr
js
mov
(bad)
dec
mov
jmp
mov
xor
add
out
shl
xor
cwde
and
fcom
dec
cmp
mov
push
mov
push
sub
mov
mov
push
xor
aas
inc
add
cmp
xchg
enter
xchg
clc
outs
gs
dec
add
push
mov
mov
add
add
jmp
push
jno
mov
adc
lock
push
adc
ds
add
or
aam
pushf
and
cmp
pop
inc
jg
mov
xor
sbb
jmp
bound
imul
ficomp
ins
loop
xchg
pop
js
std
add
(bad)
call
test
fwait
mov
push
cld
cmp
add
stc
jns
sub
ins
or
add
js
sbb
aaa
mov
xor
mov
and
scas
retf
inc
sbb
cmp
mov
cmps
mov
push
dec
loopne
or
pusha
call
jmp
xchg
mov
mov
pop
mov
and
xchg
jmp
je
loopne
and
sbb
or
cs
bound
and
xor
lods
adc
pop
mov
les
adc
outs
or
out
std
add
inc
dec
shl
pop
push
mov
es
shl
mov
push
adc
test
inc
inc
hlt
jg
push
(bad)
sar
sub
add
call
sub
add
xchg
cs
dec
ss
xor
sbb
fadd
fmul
jg
jl
pop
loop
or
mov
xchg
xchg
push
fidiv
mov
aad
jmp
mov
dec
sub
cmps
scas
cs
jbe
pop
add
dec
outs
inc
psraw
inc
sbb
inc
xchg
cmp
cs
dec
popa
test
sar
add
pop
mov
ret
ja
or
mov
pop
add
xchg
mov
sub
gs
ja
lock
fst
cmp
pop
enter
jo
xchg
sub
xor
lea
repnz
pop
pop
push
push
retf
pop
mov
pop
test
xor
cmp
maxps
test
fsubr
sbb
dec
idiv
jl
xor
imul
pop
pop
mov
nop
pop
bound
xchg
ins
stos
or
inc
cs
cmp
pop
push
or
retf
xchg
or
add
add
push
or
push
and
int3
data16
test
jbe
dec
arpl
xor
cmp
add
push
sub
xchg
add
lock
cld
jnp
loope
fcomp
mov
cmp
xchg
sub
jne
loopne
push
dec
add
and
push
rol
mov
bnd
xor
or
jle
pusha
adc
adc
sub
or
imul
dec
aam
or
and
inc
pushf
or
push
sbb
inc
pop
add
or
arpl
mov
mov
loope
test
mov
mov
into
es
mov
je
not
dec
sbb
mov
ja
add
cmp
adc
nop
clc
lahf
fadd
cmp
jne
dec
jne
retf
data16
add
inc
inc
neg
push
xchg
test
fistp
mov
mov
fbld
or
mov
je
adc
lock
push
loope
jo
pop
mov
repnz
popf
and
aad
jmp
add
ins
add
sub
mov
xor
call
add
jp
sbb
or
retf
int3
add
adc
and
add
sar
rol
aaa
cwde
scas
les
gs
adc
dec
mov
push
xchg
(bad)
idiv
js
xor
or
(bad)
xchg
sub
shl
jb
aam
shl
in
xor
dec
inc
(bad)
vmread
pop
xchg
and
mov
push
and
mov
or
out
pop
retf
push
call
int
loopne
clc
or
add
jle
mov
mov
ror
pop
mov
mov
or
ror
in
idiv
gs
jg
je
or
je
or
push
mov
fbld
inc
jmp
(bad)
cmc
jbe
pop
ss
or
xor
inc
loopne
jp
mov
lock
adc
(bad)
daa
inc
repnz
out
stos
or
ins
ins
ja
or
mov
mov
sti
jmp
dec
sti
cmp
inc
inc
mov
dec
push
adc
pop
and
dec
adc
arpl
adc
adc
sti
jl
push
cwde
cmp
adc
adc
jbe
rol
xchg
call
or
cmps
xchg
sub
les
arpl
es
je
or
inc
loopne
or
wrmsr
cmp
sbb
in
or
bound
inc
add
(bad)
fmul
out
rcl
outs
jg
push
mov
sub
fs
add
mov
addr16
push
jno
cmp
imul
rcl
mov
jp
jle
adc
imul
test
jmp
out
ins
or
lea
push
mov
imul
jne
test
add
mov
fcom
sub
or
or
daa
rol
mov
mov
(bad)
inc
and
in
sti
rcl
mov
jne
push
pop
mov
jbe
inc
mov
inc
fcmovnb
rol
add
mov
mov
xchg
xor
sti
jbe
push
gs
xor
dec
pop
xchg
ins
push
mov
add
pop
add
sub
mov
sub
or
pop
mov
or
push
daa
inc
push
xor
xor
shr
or
dec
adc
and
cmp
movsx
or
sbb
out
mov
xor
loopne
jle
jmp
dec
inc
inc
outs
mov
lods
add
sbb
and
adc
(bad)
and
add
je
ret
inc
clc
aas
push
jmp
or
leave
mov
mul
ret
adc
sbb
fisttp
pop
dec
mov
sbb
arpl
fdivr
xchg
add
adc
fsubr
push
imul
xor
idiv
xchg
les
je
push
pop
je
xchg
retf
in
test
mov
outs
pop
mov
jae
jne
dec
pop
xor
inc
(bad)
sbb
sub
sub
iret
pop
add
or
pushf
sbb
movs
adc
sub
push
xchg
cmp
pop
jne
mov
inc
push
cmps
push
mov
push
retf
mov
cmp
je
inc
sub
mov
in
movs
test
cmp
sub
jmp
mov
mov
cmp
ja
movs
add
or
mov
test
add
jge
and
sbb
call
rcr
dec
test
cmp
jmp
jmp
(bad)
call
push
push
loope
(bad)
push
test
imul
dec
test
or
and
(bad)
pop
push
pop
call
or
dec
or
shl
or
pop
popf
jne
or
and
cmc
sub
mov
rol
xchg
mov
popf
pop
sub
jmp
mov
xchg
adc
pop
es
cmps
and
xor
test
and
inc
daa
adc
push
mov
es
jg
retf
xchg
leave
xor
or
sbb
daa
sub
rol
xchg
jne
mov
leave
mov
fstp
out
add
jecxz
adc
inc
jp
dec
sub
add
popf
imul
add
mov
add
add
lods
push
pop
sbb
stos
cmp
daa
push
xlat
pop
in
sub
adc
xor
scas
enter
or
push
test
xchg
mov
cdq
add
adc
lea
aad
add
inc
inc
sbb
pop
fsubr
add
hlt
movs
je
dec
(bad)
rol
lods
neg
mov
mov
aas
test
jo
cmp
sbb
aas
push
shl
jmp
add
xor
mov
jns
lock
mov
push
lock
neg
push
inc
push
push
jmp
popf
sub
and
call
adc
repz
pop
data16
inc
jmp
or
push
and
inc
jl
push
nop
cmp
clc
adc
dec
repz
adc
sbb
sub
push
pop
enter
in
xor
mov
add
or
outs
mov
or
push
div
lea
or
xchg
rcl
hlt
jmp
aad
mov
cmp
inc
loopne
outs
jo
lea
leave
jmp
jle
out
jo
add
nop
movs
mov
mov
pop
dec
loop
pusha
out
pop
jle
btr
or
push
mov
adc
jmp
mul
pop
addr16
pushf
xor
movs
push
pop
push
inc
clc
rol
hlt
mov
adc
test
adc
out
or
xor
inc
clc
pop
adc
clc
lea
xchg
fist
mov
sbb
adc
cmp
sbb
dec
lock
or
sub
cmp
lock
or
pusha
push
call
pop
popa
test
je
ins
data16
push
mov
ret
xor
fisub
adc
pop
mov
shl
sbb
ret
loope
call
les
dec
ins
adc
(bad)
or
je
cmp
fimul
or
bound
sub
rcl
mov
dec
push
cmp
ret
mov
div
les
mov
sti
inc
jl
or
(bad)
adc
sub
xchg
shl
imul
mov
jle
jle
inc
jne
clc
xchg
mov
mov
(bad)
cwde
inc
xlat
or
pop
lock
mov
mov
les
enter
add
sbb
or
cmps
sbb
es
lea
sar
and
pop
cwde
cs
sbb
dec
jl
mov
mov
inc
cmp
sub
or
adc
add
xor
add
popa
push
dec
dec
jb
xchg
jnp
sbb
add
movs
mov
xor
sbb
imul
mov
test
fadd
dec
jnp
gs
call
gs
pop
push
test
mov
aam
mov
or
aaa
push
xchg
push
xor
cmp
xor
sbb
add
out
stos
mov
addr16
push
pop
ins
dec
sub
adc
dec
test
lock
or
xor
pop
xchg
icebp
in
std
hlt
arpl
add
inc
cwde
retf
mov
adc
jbe
stos
or
push
mov
aaa
pop
push
mov
push
pop
bswap
mov
or
out
int3
xchg
ret
fbld
jmp
aad
repz
xlat
pop
jb
mov
test
je
dec
dec
aam
std
pop
add
mov
mov
mov
mov
inc
dec
cld
ret
sub
xchg
jb
test
mov
inc
es
pop
cmp
sbb
aaa
adc
adc
pop
jnp
xor
jmp
hlt
or
test
sbb
aam
and
xchg
lea
loop
repz
out
std
sub
cmp
inc
adc
sbb
mov
out
and
loopne
data16
loope
cmp
mov
mov
imul
(bad)
daa
arpl
fiadd
sbb
pushf
int3
inc
mov
xor
jecxz
push
sbb
jecxz
xchg
mov
sub
or
mov
fnsave
pop
sti
push
jp
icebp
mov
xor
cld
add
cmp
jb
cmp
and
pop
push
lahf
xor
sbb
sti
inc
adc
cmp
sub
or
pushf
lahf
mov
sbb
test
cmps
pop
ret
ret
mov
enter
popf
js
cmp
xchg
or
push
sahf
les
repnz
daa
add
inc
mov
dec
adc
jbe
imul
jmp
pop
sub
popa
movs
push
dec
out
push
cmp
pop
xchg
xor
gs
fadd
enter
and
adc
mov
cwde
mov
int3
enter
ds
js
add
jmp
sbb
pop
aad
movs
push
cmp
sbb
dec
rcr
pusha
cmp
push
out
ret
hlt
rcl
into
and
mov
mov
movs
in
xor
mov
push
inc
outs
xlat
pop
mov
mov
movs
or
icebp
rcl
cmp
sub
retf
cwde
jne
adc
xor
adc
shl
dec
push
mov
cmp
je
ins
and
sub
mov
push
and
inc
inc
jne
pushf
es
jnp
inc
jns
inc
das
out
movs
add
mov
push
aas
push
inc
push
jmp
xchg
fstp
jecxz
jnp
(bad)
sti
and
fld
pop
mov
or
hlt
adc
pop
sar
push
mov
in
mov
retf
enter
fcmovnbe
cwde
inc
ret
adc
jg
sub
pop
out
fcom
push
pop
mov
push
imul
cli
ss
xor
(bad)
movs
fld
rcr
pushf
sbb
int
add
push
jbe
and
movs
pushf
sbb
dec
fadd
stos
or
mov
add
xchg
or
jbe
rcr
imul
adc
push
and
pop
add
les
adc
sbb
push
sbb
push
loop
push
xor
sub
bound
jmp
sbb
sbb
jne
mov
mov
clc
cmp
jle
jmp
shr
adc
mov
sub
pop
adc
and
inc
add
retf
sahf
or
pop
sub
stc
mov
adc
mov
mov
or
push
dec
xor
or
dec
jo
out
es
sbb
jne
push
and
inc
and
mov
ja
mov
out
sub
dec
mov
pop
pop
mov
and
xchg
xor
mov
inc
scas
sbb
cmp
add
dec
imul
and
push
rcl
enter
addr16
xchg
mov
sbb
push
je
add
and
bswap
sub
lods
and
or
pop
xchg
out
ins
sti
adc
lock
and
pop
cmp
jl
ret
jmp
and
mov
xchg
(bad)
repz
ret
or
or
or
add
and
fldcw
popa
inc
pop
aad
out
inc
push
gs
ja
adc
pop
jae
push
jle
lahf
push
mov
push
pop
sbb
call
or
add
push
loope
js
and
xchg
loopne
rcr
push
mov
mov
in
and
push
iret
jnp
(bad)
push
adc
dec
in
pop
hlt
jmp
or
cmc
lds
mov
or
int
out
mov
cmps
mov
jmp
ins
pop
pop
test
pop
mov
fcom
fdiv
push
cmc
mov
adc
add
outs
pusha
lock
and
ret
sbb
retf
mov
bswap
mov
push
je
mov
test
or
(bad)
xchg
popa
xor
add
nop
sbb
imul
or
sahf
add
or
dec
adc
adc
push
xor
push
push
push
shr
loope
mov
sub
retf
icebp
push
dec
jp
loop
rol
push
das
inc
inc
jge
adc
add
(bad)
fimul
push
sbb
inc
pop
and
push
rcl
ficom
fcmovne
out
cdq
adc
cmp
sub
pop
push
mov
shl
aaa
sub
test
js
mov
mov
adc
and
mov
mov
pop
(bad)
pop
add
ret
pop
cdq
addr16
les
inc
fs
adc
push
or
sub
pop
sbb
test
mov
inc
mov
inc
push
aad
imul
pop
mov
inc
xchg
mov
inc
clc
sbb
or
sbb
mov
stos
aaa
rol
test
push
cmp
push
ss
test
push
sub
(bad)
or
adc
add
(bad)
test
dec
or
jecxz
dec
(bad)
in
ss
mov
movs
push
rcr
or
add
mov
(bad)
(bad)
ss
shl
mov
call
dec
push
jmp
fidiv
xchg
hlt
push
pop
inc
or
dec
inc
push
cs
js
push
add
cmp
mov
xor
fsubr
adc
dec
pop
jns
fs
cmp
ds
ror
mov
pop
add
or
add
sar
cmc
lods
mov
jmp
aas
cmp
ret
mov
push
bound
xor
test
mov
xor
(bad)
ficom
outs
sbb
and
or
push
jl
add
cmps
das
and
loopne
out
mov
imul
ret
jne
es
mov
jnp
sbb
add
xchg
dec
test
inc
dec
in
test
not
jl
movs
arpl
add
or
dec
pusha
dec
dec
adc
jbe
inc
push
ds
and
inc
sbb
inc
jle
dec
and
cmp
jg
es
or
or
or
popa
mov
sub
clc
xor
sahf
test
fmul
add
lock
mov
xlat
push
cdq
push
shr
push
xlat
sub
and
dec
dec
push
sbb
or
pop
outs
add
ins
pop
push
inc
fcom
inc
xchg
pop
inc
std
push
ss
dec
dec
or
xor
mov
mov
jle
jno
mov
sahf
xor
ret
scas
xchg
push
mov
jno
or
add
jne
ins
mov
dec
jl
cmp
jl
nop
jno
add
mov
cs
inc
sbb
mov
push
rcl
pop
pop
imul
push
xchg
push
pushf
pop
adc
push
jne
adc
ficom
sub
test
add
cmp
ins
jno
jge
adc
mov
movs
imul
push
ret
popa
sub
iret
mov
pushf
push
adc
call
aam
mov
imul
and
adc
push
adc
add
imul
mov
push
and
adc
ss
jl
les
or
imul
(bad)
in
cmp
lods
ins
enter
fwait
lea
data16
mov
test
sbb
add
dec
sbb
popw
or
adc
push
jmp
push
cmp
cli
adc
iret
push
mov
xor
test
ss
dec
adc
xchg
mov
dec
fs
fdiv
sub
add
push
dec
cmovl
(bad)
pop
dec
jne
push
jmp
or
add
bound
sbb
xchg
mov
and
sahf
pushf
inc
or
retf
inc
cmp
mov
(bad)
mov
or
je
sbb
and
inc
rcr
push
fidivr
fstp
or
(bad)
loopne
sub
push
push
inc
pusha
and
add
enter
repz
adc
push
push
pop
pop
or
cwde
mov
xor
cs
push
cli
ret
mov
mov
outs
mov
xor
cmp
adc
xchg
sbb
out
mov
cmps
adc
(bad)
ins
jmp
sub
and
sbb
movs
das
mov
jae
fwait
test
mov
pop
call
test
sbb
movs
xor
adc
mov
xchg
sbb
xchg
jne
pop
sbb
jb
pushf
test
adc
adc
mov
jb
cmp
ja
js
cmp
xchg
push
add
rol
push
cmp
jb
cmp
jbe
inc
or
out
movs
jnp
ror
xchg
sbb
or
out
jbe
and
es
push
mov
or
iret
add
or
imul
cmc
dec
and
mov
pop
ror
mov
mov
xor
aaa
jns
xchg
out
rol
(bad)
repz
popa
xchg
dec
in
loop
(bad)
sub
dec
popa
jo
jp
loopne
ss
daa
mov
dec
outs
pusha
aas
push
sub
aam
loope
ja
jp
mov
test
dec
jle
and
xchg
dec
cwde
repz
test
add
cmp
ret
pop
retf
cmp
mul
xchg
bound
mov
or
mov
in
add
imul
add
ret
pop
or
fdivr
inc
inc
pop
rcr
push
inc
in
call
rol
dec
sahf
pop
jne
cwde
ror
pop
sahf
and
cmp
push
or
adc
inc
fucom
call
dec
js
xchg
in
or
or
jl
or
pop
or
jg
hlt
push
pop
aad
sub
or
or
inc
dec
loop
push
adc
sar
add
pop
jo
(bad)
sbb
pop
jmp
add
push
sahf
pushf
inc
ret
adc
mov
(bad)
out
mov
into
mov
or
test
xor
inc
xchg
lock
imul
jnp
jg
mov
sti
dec
push
cmovnp
test
or
jb
pop
push
mov
loopne
es
or
xchg
cli
cmp
imul
sub
aam
push
push
jmp
xchg
(bad)
mov
loopne
push
bound
jae
dec
adc
mov
mov
bound
or
jecxz
outs
clc
push
jmp
adc
and
lods
fdiv
add
data16
push
dec
repz
and
cs
mov
jo
xchg
adc
iret
push
mov
push
mov
add
pop
dec
mov
push
dec
pop
inc
(bad)
je
pop
add
mov
push
mov
add
cmp
(bad)
div
or
dec
adc
out
aaa
jne
jmp
mov
sub
retf
add
mov
pop
jnp
add
pop
pop
pop
(bad)
dec
pop
or
dec
inc
add
mov
dec
mov
es
cld
mov
mov
rol
std
shr
push
cli
dec
rol
cmp
out
cmp
cmc
pop
adc
sbb
pushf
(bad)
out
into
jbe
cmp
jl
inc
hlt
jbe
sbb
js
dec
adc
xchg
in
dec
xor
iret
movs
js
fiadd
jmp
jno
and
enter
int3
(bad)
call
push
sbb
inc
sbb
cmp
adc
mov
shl
add
aas
sub
xor
dec
in
add
mov
jl
mov
dec
mov
fadd
mov
js
nop
ret
mov
mov
int
test
(bad)
sbb
aad
sub
add
les
leave
js
mov
mov
in
sub
stos
imul
int
je
push
push
ins
jnp
dec
ins
sar
or
xor
mov
push
mov
and
or
sbb
inc
dec
xchg
add
mov
es
pop
mov
xchg
hlt
sub
js
push
jp
adc
adc
pop
and
test
sub
and
mov
sbb
sbb
and
mov
pop
hlt
add
and
bnd
xchg
loopne
cwde
push
pushf
adc
sbb
rol
jle
js
jecxz
ds
pushf
pop
sub
pop
adc
fs
shr
push
rol
ins
dec
and
arpl
mov
add
adc
popa
sub
push
cmp
and
fcomp
in
popa
xor
clc
mov
or
xchg
inc
jge
dec
sbb
or
xchg
sahf
mov
leave
xchg
inc
cmp
rcl
jae
mov
jl
xchg
push
out
xor
lods
or
jnp
test
ins
and
xchg
pop
pop
pop
sub
pop
push
(bad)
jl
loopne
ret
xchg
fcom
ret
je
mov
je
jmp
pop
and
ret
lock
sbb
mov
test
cmp
jae
js
sub
push
sub
ficomp
scas
or
bound
jb
inc
loop
xor
stos
adc
test
inc
inc
sub
pop
cmp
lock
jo
xchg
add
fcom
mov
xchg
cmp
add
stos
sbb
lds
idiv
out
loop
push
add
(bad)
sahf
sub
sub
pop
or
jo
inc
cwde
call
mov
add
xchg
push
sub
inc
gs
and
jl
clc
and
outs
addr16
sbb
push
loop
xor
pop
pop
inc
adc
pusha
push
aaa
inc
pop
mov
or
sbb
cmps
enter
rcr
xor
daa
mov
test
bound
jmp
inc
sub
mov
jne
inc
inc
hlt
call
bound
mov
mov
je
cmps
pop
pushf
or
lea
ins
leave
inc
fsubr
add
les
ret
test
cmp
rcr
sbb
loop
call
cmp
sar
pop
nop
out
shl
mov
mov
or
fidiv
fdivr
adc
pop
loope
pop
in
add
mov
es
push
(bad)
push
add
(bad)
js
adc
repnz
push
sub
sub
xor
push
add
mov
ror
lahf
sub
cmc
push
push
mov
xchg
loopne
mov
sbb
jg
dec
scas
shl
ds
mov
ins
inc
or
cdq
scas
mov
mov
jae
cmps
std
mov
cmp
data16
cmp
mov
sbb
es
dec
cmp
sbb
jl
jae
push
nop
clc
adc
jmp
mov
inc
mov
jae
adc
adc
aad
or
lahf
aad
inc
pop
pop
outs
pop
inc
inc
cmp
out
ror
pop
mov
cmovae
sub
int3
or
cmps
add
fisubr
jmp
(bad)
jge
push
outs
mov
je
out
jle
jb
sahf
and
(bad)
push
test
enter
sub
test
inc
rcr
fstp
dec
xchg
movs
sbb
pusha
mov
mov
jmp
sbb
sub
in
test
push
sub
xchg
sub
adc
pusha
retf
dec
pop
test
xor
cmp
dec
adc
imul
and
push
mov
mov
and
add
inc
sub
loope
inc
dec
mov
ror
cmp
jl
dec
test
das
xor
lods
adc
retf
sbb
clc
jle
mov
jne
push
jb
mov
adc
loop
xchg
add
cmp
sub
arpl
sar
js
leave
fstp
pop
aaa
mov
xor
push
dec
mov
stc
xchg
test
hlt
push
xchg
scas
xor
leave
xor
or
xor
adc
add
and
es
sahf
add
inc
mov
out
test
pop
adc
push
cs
cmp
push
cli
mov
ret
and
(bad)
nop
inc
and
pop
mov
inc
mov
jl
loope
test
or
jg
jecxz
push
das
jecxz
dec
or
and
out
sbb
pusha
fs
cmp
repz
scas
fwait
add
lods
hlt
into
and
adc
adc
(bad)
mov
add
inc
xor
fld
(bad)
in
sbb
mov
dec
cmp
sub
lahf
cmp
mov
dec
movs
in
fisubr
pop
call
and
lods
push
call
les
jo
mov
enter
sbb
dec
and
and
fwait
pop
inc
bound
push
xchg
xor
and
test
loopne
cmps
push
jmp
sbb
push
or
push
(bad)
push
push
and
fimul
jne
sbb
ret
xor
js
push
push
call
rol
icebp
call
mov
fs
add
inc
hlt
iret
jl
shl
call
cwde
mov
push
add
sub
pop
and
jo
xchg
call
js
inc
ret
cmp
js
or
lea
ficom
hlt
adc
sbb
int
add
xor
retf
into
mov
call
and
and
sbb
jb
pop
jecxz
pop
jbe
lods
cmp
mov
sub
stos
das
or
cld
add
and
dec
in
xchg
(bad)
lods
into
add
test
pop
rol
pop
or
add
shr
shl
rcr
mov
dec
arpl
jecxz
bnd
jmp
jg
mov
or
out
shr
or
push
mov
or
adc
imul
push
inc
dec
inc
je
jg
rcl
sbb
jbe
push
xchg
and
dec
push
movs
movs
dec
push
or
mov
push
push
mov
ja
mov
sbb
add
fidiv
(bad)
pop
cmp
jmp
mov
loope
test
out
adc
add
jg
xchg
dec
add
std
rcl
mov
adc
cmp
clc
jmp
cmp
pop
or
inc
or
inc
pop
mov
fs
enter
xchg
pusha
cmp
aam
sahf
cmps
std
push
mov
push
in
out
out
sahf
out
jmp
int
sti
out
aas
xchg
push
inc
add
or
add
sub
jmp
add
data16
jle
ins
push
add
add
jo
sti
sub
lods
mov
mov
in
xchg
cmp
cmp
fcomp
pop
push
adc
rcl
in
in
test
inc
out
jne
in
xor
and
sbb
push
mov
mov
into
add
lahf
rcl
push
ins
sbb
loope
mov
out
mov
sar
dec
mov
pop
push
xor
dec
cli
imul
mov
lea
ror
inc
mov
mov
(bad)
shl
mov
fistp
cli
(bad)
aas
jb
in
xor
xor
mov
in
test
mov
je
in
dec
pop
or
add
pushf
ins
call
and
pop
inc
add
sbb
dec
cld
clc
cli
add
jns
pop
mov
adc
pop
jne
fs
neg
xchg
or
fcomp
(bad)
pusha
dec
add
or
es
out
inc
retf
dec
movs
std
in
mov
adc
cmp
ret
jle
inc
sti
mov
cmps
shl
xor
mov
cmp
ins
mov
cmp
mov
push
jl
jb
add
dec
jmp
add
inc
inc
sub
sub
mov
lods
xchg
sbb
aaa
push
xor
pop
hlt
fld
and
clc
add
and
rcl
or
jno
pop
dec
stos
cmc
fs
inc
xchg
in
ja
lea
or
mov
ss
xor
retf
mov
call
lea
or
ficom
jg
lods
shl
cli
std
mov
aas
jl
inc
or
fs
shl
mov
and
cmp
cs
push
not
cmp
cmp
add
pusha
pop
push
lahf
xor
popa
cs
in
rol
push
add
pop
test
mov
dec
shr
lea
dec
inc
cmps
push
in
adc
push
adc
add
mov
test
jbe
or
or
xor
push
pusha
enter
mov
popa
jmp
enter
scas
cmp
fidiv
pushf
cwde
or
rol
sbb
mov
or
ror
cmp
or
cmp
sbb
(bad)
sbb
mov
mov
jp
add
adc
popa
sub
add
and
and
adc
int3
fsub
jp
in
xor
pop
and
inc
fiadd
adc
sbb
call
test
rcl
loopne
inc
xchg
mov
jmp
loop
fisubr
dec
pop
pushf
push
jae
jle
push
sbb
sbb
add
push
sbb
jmp
lds
lods
xchg
push
push
scas
push
sbb
bound
cmc
cdq
data16
inc
push
mov
add
inc
jmp
fs
loopne
sub
push
mov
mov
mov
or
jp
ins
mov
inc
inc
adc
aad
in
add
sub
bound
xor
aas
sub
mov
xor
push
fsubr
xchg
ins
(bad)
jl
cmp
stos
sub
enter
std
or
or
or
sub
inc
xchg
fiadd
sbb
cmp
movs
daa
mov
sbb
cmp
test
cli
or
clc
add
aad
push
imul
add
popa
xchg
clc
ds
pop
pop
and
inc
or
stos
sub
and
inc
fcomp
dec
data16
sti
inc
push
loope
mov
idiv
push
cmp
adc
addr16
dec
dec
and
aaa
in
or
xor
pop
ins
push
mov
icebp
inc
call
cmc
inc
add
and
or
push
xor
es
or
push
push
cmc
cwde
xor
pop
xor
sub
add
dec
icebp
adc
adc
xor
sbb
sub
repz
js
dec
xor
and
sub
and
(bad)
jae
in
xor
push
inc
imul
sbb
push
ror
xor
or
int3
jmp
sub
cli
mov
add
or
jae
jae
or
neg
lods
xor
and
inc
loope
and
or
mov
out
sub
add
jae
cmp
nop
sbb
scas
adc
mov
clc
ins
jmp
push
imul
dec
push
imul
sbb
sub
push
pop
inc
daa
hlt
outs
ja
cmp
push
pop
or
sbb
ss
push
idiv
jmp
cmp
fneni(8087
(bad)
out
push
mov
cli
or
out
mov
jo
cmc
nop
adc
adc
inc
lods
xor
adc
repz
mov
test
or
jne
inc
sub
adc
mov
pop
jg
ret
test
inc
push
nop
test
add
shr
shl
inc
jbe
cmp
adc
jp
push
mov
adc
or
xor
adc
jae
mov
xchg
adc
pop
retf
cmp
mov
mov
inc
mov
test
push
loopne
jbe
push
mov
adc
pop
cwde
push
aam
push
bound
xchg
movs
sub
fld
cmp
pop
neg
movs
out
sub
aaa
xor
bnd
and
mov
sub
fild
ins
add
jmp
add
loop
jmp
or
cs
push
sub
pusha
not
mov
jmp
dec
sub
or
pop
sahf
push
movs
mov
dec
mov
add
push
mov
fs
xchg
xlat
or
arpl
and
pop
and
ret
cmp
jl
shl
call
cmp
mov
or
sub
dec
aas
push
push
out
push
mov
mov
movs
aaa
repnz
retf
jl
xchg
lahf
sti
push
dec
mov
test
xor
inc
cmp
jp
idiv
sub
in
icebp
out
cwde
push
out
mov
jns
adc
mov
mov
dec
clc
jg
xor
ror
mov
xchg
cmp
xchg
mov
neg
sahf
(bad)
or
cmp
adc
and
(bad)
pop
clc
mov
test
xor
test
test
and
adc
and
and
adc
pushf
add
les
jecxz
aas
cld
jmp
cmp
je
xchg
cmp
popa
lods
(bad)
cmp
push
outs
arpl
les
xor
rol
xor
pop
sub
cdq
xchg
mov
imul
push
test
loope
aas
cs
jbe
data16
jecxz
cld
aad
xchg
push
data16
les
hlt
xor
outs
inc
adc
js
xor
ficomp
xchg
cmp
jmp
fsub
int
and
test
xor
sub
je
mov
bound
sbb
sbb
icebp
or
xchg
add
adc
add
or
arpl
and
push
fistp
popf
jbe
pop
stos
pop
sub
adc
out
imul
xchg
lock
jnp
mov
and
nop
adc
movs
pop
pop
gs
adc
and
push
(bad)
or
and
xor
nop
or
sub
or
es
sub
popf
pop
adc
sbb
pushf
outs
ins
leave
fcom
sub
icebp
lea
fsubr
sub
mov
and
test
sub
movs
push
cmp
bound
mov
movs
mov
adc
sub
lods
(bad)
mov
lea
test
jle
cwde
mov
mov
sar
inc
fcmovb
push
fld
lds
push
es
pop
cli
mov
(bad)
and
mov
in
movs
pop
lds
and
cli
je
cmp
arpl
push
jmp
outs
and
popf
imul
retf
in
pop
inc
push
test
ja
in
or
imul
ss
jge
jns
mov
xchg
test
sub
pop
loopne
add
and
outs
push
xor
gs
loopne
add
jo
mov
push
fcom
and
mov
sbb
popa
cmp
dec
sbb
xchg
and
inc
dec
pop
mov
outs
pop
outs
push
lds
repz
dec
dec
mov
sbb
les
leave
push
adc
call
adc
and
and
sahf
retf
mov
dec
cmp
dec
xchg
xor
cmp
(bad)
fisub
mov
push
xchg
pop
call
ds
inc
mov
cli
rol
cmps
add
fnsave
int
shl
test
lock
push
es
and
call
(bad)
pop
ds
push
loop
inc
cwde
xchg
pop
sub
or
sahf
hlt
or
sub
mov
or
cdq
rol
ret
jp
outs
sub
cmp
mov
das
push
js
or
or
or
cmps
mov
mov
inc
movq
stos
data16
pop
inc
pop
ins
sbb
ficom
push
bswap
outs
adc
shr
enter
mov
in
pop
mov
push
popw
imul
iret
(bad)
(bad)
mov
add
xchg
xchg
push
xor
js
dec
call
js
xor
push
sbb
dec
test
rol
pop
test
add
mov
adc
or
mul
daa
mov
add
not
jb
sub
and
push
push
cs
mov
add
sbb
jecxz
fnsave
call
xchg
xchg
sar
aam
lea
ss
xchg
mov
add
pop
xchg
mov
xchg
ret
test
out
rol
imul
gs
lock
cmp
pop
or
lea
fadd
cs
fs
nop
retf
mov
mov
or
xchg
call
neg
push
mov
cli
js
xor
sbb
sub
sbb
push
xchg
gs
mov
fdivr
jno
mov
adc
jle
repnz
lods
or
sbb
add
daa
add
xlat
push
(bad)
ret
gs
mov
pop
mov
sub
mov
cmp
std
fs
mov
mov
cmp
movs
sub
pop
nop
movs
fs
dec
test
pop
retf
xor
adc
sbb
push
adc
es
xor
dec
inc
push
xor
outs
fisttp
shl
sub
pop
jmp
(bad)
aam
cmps
xchg
push
(bad)
pop
cmp
daa
mov
inc
lods
and
inc
xchg
add
or
ret
sub
mov
adc
sub
fiadd
or
jmp
add
cdq
ins
mov
push
push
neg
mov
pop
jo
pop
aas
shl
xor
retf
stos
ret
cmp
daa
or
add
dec
jo
push
inc
jge
repz
call
ja
movs
in
push
popf
or
mov
inc
daa
cmps
mov
inc
and
cmp
dec
jo
cwde
ror
mov
adc
push
or
stos
mov
ret
and
inc
mov
dec
leave
jle
add
and
cmp
les
test
lock
sbb
push
mov
in
push
fnsave
jecxz
mov
mov
sub
bound
ins
pop
xchg
push
mov
or
mul
test
je
push
inc
sub
sub
add
mov
mov
cmp
inc
cmc
lods
pop
sub
pop
adc
call
adc
add
pop
pop
lock
shl
mov
xchg
add
sti
adc
add
fisub
gs
outs
or
sub
mov
jmp
sub
and
mov
cld
xchg
out
sub
dec
xor
or
loop
movs
cmp
push
fdivr
sub
xchg
sbb
hlt
jg
and
cmp
aaa
push
and
lods
pop
and
cmp
scas
loopne
(bad)
out
pop
jmp
add
bound
inc
call
pop
aam
dec
call
pop
lahf
add
xchg
aam
xor
pop
add
cmp
cwde
fisub
out
dec
(bad)
aas
or
jmp
inc
adc
lods
jmp
xchg
push
test
mov
test
push
inc
(bad)
mov
mov
outs
pusha
xor
js
xchg
pop
stos
lock
add
clc
cmp
mov
adc
mov
mov
adc
xor
xchg
frstor
lods
nop
mov
lock
int3
inc
pop
mov
ret
sub
mov
inc
pop
and
test
mov
mov
add
and
xchg
adc
and
ret
ret
int3
inc
sbb
fsubp
test
pop
and
mov
push
pop
xlat
sub
fmul
pop
pusha
rcr
sbb
mov
sbb
xor
mov
push
adc
xchg
xor
hlt
jl
ficom
jnp
push
(bad)
call
push
enter
pop
clc
ret
xor
add
fadd
aam
inc
pop
daa
dec
sbb
jbe
ret
add
or
and
or
ins
sbb
add
jne
or
mov
mov
jle
xlat
push
push
sbb
loope
clc
into
adc
inc
pop
repnz
xor
data16
ret
cmp
inc
inc
fcomp
mov
sbb
add
dec
fsub
das
push
push
jl
push
xor
mov
shl
sbb
movs
das
adc
push
push
push
add
ins
sub
or
das
cmp
ret
pusha
(bad)
jp
or
push
inc
loopne
hlt
dec
jle
ja
add
sub
sub
dec
mov
loop
mov
push
or
clc
sbb
movs
jbe
std
jbe
int3
jecxz
test
and
pop
mov
or
movs
jge
pusha
jb
lods
pusha
ins
add
push
mov
xchg
pop
sbb
sub
pop
mov
mov
cmps
js
or
or
push
sbb
add
add
daa
pop
cmp
(bad)
stos
into
xlat
xchg
imul
movs
mov
test
into
mov
or
jl
mov
or
mov
shl
sbb
push
pop
mov
(bad)
mov
add
sahf
pop
cmp
dec
adc
push
xchg
xor
aam
mov
and
push
or
push
xor
push
test
rcr
pop
xchg
test
push
fdiv
jae
or
inc
pop
cmp
or
mov
imul
jnp
mov
clc
test
lea
rep
into
hlt
jne
popf
push
cwde
add
xor
clc
je
test
lea
sbb
add
pushf
in
cdq
add
sub
adc
add
xchg
mov
cmp
add
cmps
xor
aam
sbb
jmp
or
adc
dec
push
and
cli
xchg
inc
adc
cli
sbb
enter
in
pop
pop
sti
adc
(bad)
cmp
pop
or
push
pop
push
in
push
shl
lea
add
sub
fidiv
or
or
test
sub
pop
xor
cmp
(bad)
push
dec
cmp
ret
call
sub
push
sub
pop
jnp
add
pop
adc
mov
es
ret
push
xchg
out
xchg
and
pop
cmps
je
call
push
ror
scas
mov
sbb
add
mov
pusha
dec
imul
push
push
iret
scas
mov
adc
icebp
mov
dec
adc
cmp
std
(bad)
adc
mov
mov
sbb
rol
mov
cmp
sbb
mov
xor
push
enter
mov
mov
jne
fcomp
aam
or
adc
jno
jl
or
jns
ret
enter
and
xchg
fwait
sub
and
inc
xchg
dec
fs
add
nop
popf
adc
(bad)
in
adc
sbb
shr
xor
lods
or
in
jb
leave
inc
fiadd
mov
sar
push
dec
ins
and
sbb
daa
xchg
cmp
add
pop
js
leave
mov
popa
inc
out
pop
or
(bad)
cmps
cmps
mov
fs
pusha
jecxz
fist
xchg
mov
ins
push
mov
push
ins
xchg
jg
and
or
xchg
mov
shr
imul
jl
xlat
loop
add
stos
dec
jmp
and
shl
lahf
and
or
xchg
mov
int
dec
ror
or
pop
test
mov
jle
jl
sbb
scas
fsubr
sahf
push
fdivr
jb
retf
push
inc
mov
iret
clc
cmp
mov
or
(bad)
push
nop
outs
pop
push
ins
icebp
sub
dec
add
and
pop
fucomi
int3
or
push
jg
push
frstor
in
pop
xchg
push
adc
in
cs
sub
mov
sub
sbb
push
and
shl
nop
mov
rol
push
ins
ss
mov
ins
sub
mov
add
mov
push
jmp
jle
sub
push
and
sub
cmps
enter
adc
pop
mov
pop
sbb
and
addr16
and
sbb
xor
jbe
sbb
ja
lea
js
es
mov
cld
pusha
into
test
out
lea
cmp
ret
test
add
add
sub
sub
adc
mov
ret
ret
jne
pusha
and
xor
adc
xchg
push
pop
sub
fadd
inc
or
inc
sbb
lods
es
adc
push
stos
(bad)
xlat
cmps
mov
fiadd
push
outs
aad
xor
and
and
in
jmp
fld
ins
(bad)
jno
mov
adc
ror
jl
dec
xchg
unpcklps
or
mov
jge
inc
mov
ret
or
shl
stc
cwde
cmc
lock
arpl
or
cwde
sub
out
ror
add
mov
stos
arpl
(bad)
idiv
push
or
scas
inc
add
sub
pop
dec
in
cmp
mov
add
pop
jmp
pop
pop
mov
xor
daa
dec
repz
enter
xchg
dec
les
or
clc
stos
xchg
xchg
dec
pop
loopne
add
sbb
lock
shl
add
push
pushf
or
rol
loopne
add
jle
jg
shl
std
mov
mov
imul
mov
cmp
push
adc
adc
add
and
js
xchg
add
xchg
xor
push
mov
push
mov
add
mov
pop
(bad)
imul
mov
out
and
push
ins
add
push
sbb
push
mov
inc
xchg
movs
push
icebp
aas
inc
jae
(bad)
js
or
arpl
sbb
or
cmps
xor
in
jmp
ror
pop
sbb
inc
push
adc
aaa
sub
ror
loop
stos
aas
add
cmp
push
ds
jno
add
sbb
or
xchg
hlt
jl
js
ret
cmp
cmp
mov
pop
retf
add
jge
inc
sub
sbb
dec
(bad)
dec
inc
xchg
xor
mov
or
imul
rcr
sub
jo
shr
loope
mov
mov
mov
ja
adc
cmp
adc
jmp
push
popa
ja
nop
xor
jne
push
xchg
adc
ins
mov
ret
or
pop
push
sub
cmp
jne
add
cdq
mov
retf
test
or
inc
mov
add
cmp
push
sub
je
stos
add
loopne
push
mov
cld
and
inc
xor
mov
in
test
adc
lds
or
stos
leave
in
sbb
push
enter
mov
cwde
sahf
xchg
inc
test
mov
mov
or
sbb
cmp
xchg
push
mov
jno
dec
or
xchg
imul
sbb
push
jmp
or
sbb
dec
jbe
add
nop
icebp
(bad)
mov
jae
xchg
add
jp
fcmovb
xchg
pop
(bad)
pop
mov
dec
jecxz
movs
outs
gs
rcr
xchg
lods
daa
jno
das
cmps
aad
adc
(bad)
mov
cmp
repnz
xchg
mul
ror
xchg
inc
adc
add
mov
add
clc
xchg
push
or
pop
sbb
js
push
cmp
cmp
dec
mov
add
add
js
adc
mov
add
push
cmp
ds
repz
xchg
sbb
mov
sub
hlt
pop
inc
rcr
sbb
or
bound
and
pop
pop
adc
jo
mov
sub
or
jo
dec
outs
inc
das
or
sbb
push
movs
shl
pop
in
xor
sub
int3
test
cmp
xor
outs
and
and
or
aas
cmp
neg
xchg
dec
lea
mov
jmp
inc
cmp
xor
jb
pop
iret
pop
cmps
or
mov
or
mov
push
cld
ins
fsub
int
and
or
sub
xor
ins
xchg
xor
outs
into
loop
push
push
in
jae
lock
into
or
mov
mov
popf
es
retf
mov
addr16
or
or
das
shl
out
mov
xchg
push
stos
shl
mov
ret
add
out
or
mov
mov
test
push
and
xor
mov
outs
cdq
adc
jmp
shr
cmp
jae
push
loopne
mov
inc
jb
push
mov
pop
inc
or
leave
dec
inc
mov
inc
mov
iret
push
or
or
lock
jmp
in
clc
lods
xchg
xor
push
adc
adc
add
(bad)
push
ret
outs
mov
cmp
or
and
adc
mov
sbb
push
or
cdq
ror
mov
daa
add
sub
add
inc
hlt
mov
jmp
(bad)
fninit
call
dec
lods
jmp
les
sub
jle
cmp
xor
out
jmp
fsubr
push
movs
mov
sahf
iret
out
sahf
push
sahf
and
add
add
leave
dec
xor
push
sub
or
and
dec
lock
dec
or
add
push
inc
rol
xcrypt-cfb
cmps
gs
adc
test
inc
push
cmp
cs
inc
jmp
xlat
frstor
add
mov
push
or
dec
add
and
dec
shr
sub
movs
sbb
inc
xchg
inc
je
jne
(bad)
fcomi
ret
cmp
repnz
sub
fdivr
add
test
loopne
jo
inc
mov
or
jg
inc
daa
loop
jmp
rcr
test
cmp
or
adc
(bad)
sti
lahf
xor
call
stos
stos
add
ret
call
sub
clc
cdq
sahf
push
or
pop
aaa
xlat
sti
mov
push
call
jle
xlat
inc
dec
retf
push
out
adc
sbb
lea
add
push
stc
dec
jo
add
cmp
std
xor
mov
push
add
lods
(bad)
rol
pop
pop
neg
arpl
pop
stos
dec
push
(bad)
ret
or
mov
or
test
dec
sub
jmp
push
stos
dec
imul
adc
mov
xor
repz
add
std
mov
pop
cwde
xchg
icebp
int
inc
xchg
shr
loope
test
mov
push
add
xchg
or
mov
adc
push
or
push
adc
jns
jbe
adc
push
aaa
xchg
jne
and
loop
clc
mov
adc
or
stc
outs
xchg
pop
inc
pop
push
add
test
aam
jnp
in
or
enter
inc
and
popa
xchg
nop
loope
add
inc
and
mov
add
xchg
cmp
adc
mov
lods
mov
cmp
jo
cdq
test
rcl
jmp
stc
push
mov
nop
xchg
aad
or
aas
inc
pushf
add
push
mov
jecxz
push
not
hlt
push
out
cmp
imul
pop
nop
or
fild
push
iret
pop
and
push
shr
cmps
mov
pop
hlt
jg
mov
cli
scas
data16
cmp
jg
(bad)
enter
je
adc
add
mov
mov
lock
leave
jecxz
call
arpl
push
jb
movs
mov
mov
or
xor
mov
push
pop
add
jl
pop
mov
xor
sub
adc
fcomp
ss
sub
test
mov
cmps
push
xchg
sbb
pop
movs
mov
ud1
mov
or
(bad)
retf
xor
cmp
les
shl
xor
or
mov
sbb
push
sti
mov
test
push
push
xchg
add
loopne
xor
xor
adc
call
js
adc
sbb
and
xor
xor
nop
in
and
inc
xor
push
scas
jb
pop
popf
test
mov
xor
adc
add
add
loopne
lock
jle
or
push
stos
adc
jle
add
pop
lea
test
stc
xchg
cld
lea
add
shl
mov
mov
and
cmp
inc
inc
arpl
aas
inc
movs
inc
pusha
mov
cmp
xor
jmp
push
dec
mov
mov
and
shr
lock
popf
xor
dec
jno
or
pusha
add
add
cli
pop
cmp
dec
or
adc
sahf
pop
and
mov
ret
fisubr
imul
and
cmp
push
rol
test
push
xchg
sbb
jg
lds
sahf
push
or
imul
push
or
jmp
ja
sub
add
into
(bad)
inc
or
or
inc
outs
shl
addr16
mov
jp
inc
or
dec
pop
rol
inc
inc
add
outs
and
lods
arpl
lea
mov
jo
imul
sbb
jae
add
leave
mov
inc
imul
in
or
inc
shl
mov
jmp
add
jo
fwait
fwait
cmp
je
sbb
call
rcl
cmp
ret
xor
pusha
cld
xor
repnz
and
and
sub
inc
dec
adc
cmp
add
aas
adc
ret
mov
ins
push
cs
lock
lods
dec
cmp
mov
je
adc
jns
clc
xchg
ret
inc
call
pop
shl
pop
pusha
sub
jbe
sub
mov
or
in
and
jne
lea
prefetcht0
or
push
and
imul
pop
or
pop
adc
call
dec
or
ret
scas
test
inc
mov
sbb
rcr
ret
jmp
jae
jmp
enter
inc
push
xchg
xchg
inc
and
pop
pusha
or
or
add
rcl
js
nop
mov
je
sub
sub
xchg
push
adc
pop
pop
sub
scas
and
add
into
shr
cld
and
mov
test
or
addr16
adc
bound
add
mov
xor
mov
or
cmps
loope
cmps
stos
inc
push
ret
arpl
(bad)
aas
rol
addr16
popa
cmp
sub
test
and
ss
mov
add
pop
adc
inc
and
stc
inc
ror
inc
xor
dec
inc
push
push
mov
test
jo
pop
(bad)
(bad)
pop
out
mov
mov
movs
jg
pop
mov
jmp
adc
dec
sub
mov
adc
inc
push
or
out
enter
pop
pop
mov
bound
jmp
dec
ja
sub
loopne
fcmovnbe
add
popa
out
sbb
ins
xor
mov
adc
or
mov
aad
ret
inc
jbe
data16
add
pusha
adc
mov
das
or
inc
add
cmp
sub
sub
outs
push
push
add
fsub
js
inc
das
sub
pop
mov
dec
adc
js
enter
pop
xor
(bad)
rcl
js
movs
cmps
lods
(bad)
jp
inc
sub
sbb
outs
push
sbb
stos
or
arpl
dec
push
jbe
cmc
and
push
xor
hlt
pop
sbb
pop
lock
inc
dec
imul
cmc
or
and
add
inc
sbb
sbb
bound
add
adc
stos
dec
push
mov
dec
test
outs
loopne
bound
adc
jnp
iret
dec
add
sbb
lock
rol
cmps
aas
fs
pusha
and
mov
cmp
adc
stos
js
add
add
mov
inc
fwait
or
push
inc
or
dec
scas
pop
(bad)
inc
jmp
jecxz
mov
test
shl
add
imul
xchg
retf
push
pop
cld
jp
fiadd
add
mov
mov
push
xchg
cli
and
mov
ret
test
jae
mov
scas
pop
aaa
es
inc
pusha
cwde
mov
je
pop
cli
loopne
xor
loopne
test
mov
mov
sub
lahf
mov
inc
xchg
push
push
cs
adc
jno
(bad)
std
clc
push
in
es
shl
dec
retf
mov
loopne
aad
xor
loopne
popf
add
pop
cmp
(bad)
les
mov
pop
jg
fidivr
or
fdiv
adc
inc
dec
sub
push
dec
shl
rol
xor
mov
arpl
and
jbe
or
mov
add
and
add
jecxz
sbb
xchg
mov
push
ds
jl
fsub
lods
sbb
adc
call
adc
(bad)
imul
retf
movs
inc
cmps
sub
inc
(bad)
in
call
lock
aam
movs
push
fist
pop
cmp
call
adc
dec
pop
pop
pop
rcr
arpl
cmp
and
add
test
enter
(bad)
sbb
pop
sbb
mov
pop
xor
jb
jo
loope
cli
push
pop
xor
xor
sbb
mov
(bad)
sub
std
fmul
push
add
adc
xchg
outs
pop
ret
add
mov
xor
loop
xor
or
loopne
xor
test
lahf
pop
xchg
inc
ins
mov
loopne
mov
jb
dec
jecxz
push
jnp
nop
arpl
dec
arpl
out
inc
les
jae
push
sbb
ffree
enter
xor
scas
sub
call
inc
dec
out
push
mov
loopne
sub
mov
dec
adc
push
fldcw
daa
call
sub
jmp
jmp
test
add
cmp
push
ret
jo
mov
sbb
mov
add
xor
int3
inc
cmp
pop
inc
sub
pop
push
mov
inc
sbb
retf
or
mov
jnp
mov
and
sbb
jae
sbb
rol
sar
sub
movs
or
mov
or
jnp
out
push
dec
aaa
cmp
je
adc
push
dec
adc
inc
cs
cld
inc
mov
vunpcklps
xor
or
cmp
add
or
cwde
xor
lea
imul
add
aad
add
cmp
add
dec
or
outs
rcr
clc
push
(bad)
cmp
call
add
xchg
ss
fmul
icebp
(bad)
out
add
sub
sbb
xchg
pop
xchg
js
push
addr16
push
bswap
mov
push
loopne
dec
jl
add
jnp
xchg
popa
cmc
ja
mov
loopne
and
add
dec
mov
mov
hlt
inc
inc
xor
push
xor
ja
sbb
cmp
call
jle
inc
jp
scas
push
inc
push
ins
sbb
mov
pop
add
adc
and
rol
add
sbb
pop
push
mov
lock
sbb
add
dec
jecxz
xlat
fxch
fistp
dec
or
cmp
lea
stos
xchg
or
xor
cs
mov
lock
or
or
mov
push
and
and
xchg
jl
mov
xor
addr16
and
fidiv
cs
or
pop
adc
out
mov
idiv
mov
enter
jnp
inc
jb
mov
stos
mov
add
scas
frstor
add
jnp
add
test
(bad)
or
add
ja
push
push
nop
mov
sbb
mov
mov
mov
loope
lea
fnstcw
popf
push
add
sbb
push
pop
xchg
test
or
pop
(bad)
mov
sub
dec
cmp
aas
add
or
push
push
add
xchg
clc
xor
adc
inc
jl
ins
mov
pushf
xor
dec
add
popf
add
scas
pop
imul
sub
adc
or
popf
dec
(bad)
push
jne
push
ja
push
or
dec
lock
xchg
mov
hlt
jne
push
jns
hlt
stos
add
into
sahf
(bad)
dec
imul
(bad)
(bad)
xchg
xor
cmps
les
in
inc
out
jne
push
xor
ror
xchg
cmc
push
cmp
push
test
test
mov
sbb
imul
ficomp
sub
xor
js
push
jns
pop
or
dec
pop
es
cwde
jmp
pop
call
ss
sbb
movs
and
cmp
xchg
push
idiv
and
pop
add
or
jle
sbb
mov
pop
fcomp
das
xor
ror
faddp
dec
ins
rep
ds
xor
mov
sti
imul
or
xor
mov
cdq
cmc
into
push
pop
outs
inc
inc
push
inc
inc
or
movzx
xchg
cmp
icebp
dec
sbb
push
push
dec
pop
mov
(bad)
jmp
pop
push
inc
outs
lea
call
mov
or
or
cld
dec
daa
js
dec
add
cmp
adc
aas
sbb
je
pop
inc
or
ret
into
inc
or
push
mov
push
mov
nop
push
dec
dec
sub
or
adc
mov
cmp
cmp
xchg
xchg
(bad)
leave
test
outs
fnstenv
or
adc
push
sub
sbb
mov
repnz
popa
mov
aam
std
add
call
cmp
xchg
(bad)
pop
nop
dec
pop
mov
mov
cmps
mov
hlt
pop
sbb
dec
push
mov
jge
test
enter
int3
ret
lea
repnz
sbb
les
cmps
mov
fsub
pop
sbb
adc
inc
and
pop
cmp
imul
cdq
jmp
and
rol
jge
add
inc
cwde
shl
inc
mov
sbb
loopne
stos
sbb
or
es
mov
sub
mov
je
sub
fwait
jle
push
mov
in
push
push
mov
or
or
pop
imul
mov
cwde
push
dec
ror
xchg
outs
adc
xor
or
sub
dec
push
jecxz
pusha
mov
xor
dec
adc
mov
sti
and
ret
jmp
aaa
in
fdivrp
inc
xchg
arpl
xchg
jmp
ret
mov
sub
add
xacquire
mov
repz
js
in
xchg
push
idiv
popf
shl
push
or
mov
mov
push
push
imul
sar
ins
pop
xchg
test
jno
adc
clc
jne
test
nop
jmp
daa
frstor
dec
or
test
out
popa
adc
jecxz
loopne
mov
dec
shl
sub
mov
inc
add
imul
mov
adc
cwde
rol
mov
popa
mov
pop
dec
fistp
dec
push
xor
inc
xchg
imul
inc
mov
not
dec
mov
sub
pop
and
sti
dec
dec
and
xlat
pop
add
bsf
mov
adc
or
sub
cld
popa
jge
cmp
push
mov
sahf
cmps
and
inc
dec
dec
dec
pop
add
add
or
xor
pop
xchg
push
sbb
adc
pop
lahf
push
mov
push
sahf
inc
jecxz
pop
data16
sub
arpl
popf
fucomip
adc
xchg
cmp
adc
add
pop
xor
or
push
out
mov
cmps
adc
and
pop
inc
adc
and
pop
xor
sub
(bad)
int3
lea
mov
gs
fst
and
add
cmp
cs
je
and
jo
popa
jmp
dec
mov
mov
mov
jne
scas
lea
inc
sub
test
inc
and
ret
popa
sub
call
int
or
adc
gs
or
sbb
inc
mov
or
push
fs
(bad)
pop
ret
and
cmp
inc
mov
dec
sub
jmp
sub
push
jmp
rcl
sub
xor
shl
push
call
push
fld
mov
sub
fdivr
adc
pop
mov
xor
mov
jb
cmc
es
es
dec
leave
sub
clc
dec
sub
mov
adc
push
xchg
xchg
add
lods
dec
add
add
sbb
and
sub
les
push
add
push
push
mov
or
int
push
or
hlt
xor
call
(bad)
xor
or
push
or
mov
mov
loopne
loop
cmp
xor
and
out
mov
mov
and
xor
mov
aaa
hlt
clc
fsub
das
retf
sbb
scas
inc
fistp
jne
adc
jbe
adc
in
mov
xor
and
pop
and
xor
add
imul
jp
fsubr
pop
push
add
mov
test
test
cmp
xor
mov
es
or
(bad)
push
arpl
(bad)
sub
jo
adc
xchg
mov
call
adc
pop
out
out
cld
int
fsubr
pop
fs
aam
mov
int
push
aaa
or
pop
jmp
jg
push
or
xor
pusha
pop
dec
mov
mov
stos
nop
or
push
push
mov
or
ds
or
sbb
xor
add
or
rol
cdq
ret
movs
rcr
adc
lea
jmp
daa
push
test
xchg
sub
push
lea
mov
xor
shl
push
enterw
lock
pop
sub
dec
movs
sub
or
sbb
fiadd
and
js
cwde
dec
dec
dec
fild
adc
push
pop
or
test
sub
out
or
dec
mov
adc
mov
push
outs
mov
sub
jle
outs
jne
add
(bad)
sti
xchg
pop
lods
pop
sahf
enter
lods
loope
add
push
add
pop
push
sbb
jp
jge
cmp
cs
dec
fs
add
cmp
jo
retf
mov
cld
or
add
dec
or
fidiv
add
mov
push
fs
mov
jmp
lods
and
xor
aad
jbe
jecxz
pop
sub
and
fld
shl
dec
sub
ss
cmp
into
nop
dec
or
inc
xchg
xchg
xchg
xchg
add
dec
stos
jge
mov
add
fcom
and
pop
int3
jle
jo
ficomp
jmp
imul
call
in
xor
scas
mov
sti
jmp
sub
mov
loop
dec
mov
push
inc
or
aas
into
push
jmp
push
loopne
jb
xor
xlat
jl
mov
retf
lods
mov
xchg
dec
mov
mov
cwde
xor
ret
mov
adc
and
sbb
or
fist
(bad)
sub
add
arpl
sub
add
inc
sbb
js
or
in
xchg
(bad)
outs
add
push
push
mov
stc
pop
ins
jne
sar
jne
lods
push
(bad)
je
imul
xbegin
and
pop
scas
sbb
icebp
xchg
cwde
es
adc
jo
cdq
mov
in
xor
dec
jge
aaa
pop
sbb
and
inc
mov
ret
mov
push
in
int3
ins
mov
push
pop
or
sub
dec
pop
lock
sbb
hlt
sti
mov
add
mov
cmps
xor
mov
movs
loop
shl
aam
adc
cmp
inc
cmp
mov
push
push
aas
movs
setns
loope
lods
inc
ror
and
mov
jmp
int3
pusha
jb
outs
hlt
je
add
lock
loopne
mov
cli
mov
or
sbb
js
xor
pop
dec
push
scas
inc
xor
dec
inc
rol
(bad)
(bad)
adc
cmc
loope
lock
repz
fdivr
icebp
sub
rcl
push
xchg
lods
xchg
ret
clc
xchg
ret
outs
add
fcmovnbe
add
xchg
pop
int3
ret
sbb
push
add
test
dec
or
xchg
lds
mov
jp
xor
pop
adc
pop
rcr
jbe
mov
pop
sbb
pop
nop
dec
dec
jmp
movhps
push
sub
and
nop
or
pop
mov
es
and
(bad)
adc
jne
jge
int3
xor
jmp
pusha
popa
xor
jne
jno
pusha
adc
rcr
cs
clc
pop
outs
(bad)
mov
pop
test
add
xchg
retf
and
sbb
pop
add
sub
ret
or
dec
mov
xchg
sub
dec
mov
mov
inc
add
enter
or
adc
jmp
add
cmp
verr
sub
inc
or
push
sub
stos
pop
xchg
inc
shl
inc
pop
test
pushf
ficom
inc
or
int3
movs
mov
inc
cmp
jae
dec
jo
rcr
pop
or
add
ins
jmp
fisub
or
or
je
loop
add
adc
push
jne
add
push
fwait
push
jne
retf
add
push
pop
push
mov
retf
adc
jl
add
je
adc
ds
pop
jns
sbb
in
inc
pop
adc
sub
scas
das
dec
dec
ror
ja
inc
add
add
sbb
lds
mov
aas
sbb
(bad)
imul
int
push
cmp
shl
add
mov
sbb
jbe
jo
and
cmp
mov
stos
or
mov
mov
sub
push
mov
cmp
push
mov
adc
jmp
add
leave
xchg
gs
jno
test
jo
add
cmp
jmp
sbb
int3
test
cdq
loop
adc
emms
push
inc
push
aaa
adc
int
fdiv
push
push
and
ins
(bad)
sbb
test
mov
out
cmp
out
fstp
stc
xchg
sbb
jmp
xchg
aad
push
daa
xor
rcl
pop
or
add
into
stos
outs
pop
mov
aas
mov
jmp
popa
loopne
or
pop
cmps
or
push
scas
pusha
loopne
xchg
push
and
mov
pop
sbb
dec
mov
loopne
stc
in
ja
jmp
xlat
lock
mov
lods
int3
sahf
repnz
dec
mov
add
mov
arpl
imul
inc
adc
leave
lds
sbb
ins
mov
dec
repz
fisubr
fwait
int
sti
cmp
loop
daa
repnz
sahf
(bad)
neg
sar
sbb
push
and
push
sub
cmp
sahf
out
fstp
dec
addr16
jne
xchg
jns
out
mov
jge
out
in
xor
fnsave
fbld
out
daa
xchg
test
sar
outs
dec
cmp
push
test
mov
out
movs
xor
inc
and
xchg
pop
push
add
and
(bad)
adc
cwde
cs
(bad)
sub
cmp
je
sub
or
adc
pop
dec
add
call
and
add
cmp
and
mov
retf
fnclex
test
test
ins
push
fnstenv
retf
cmp
call
mov
int3
js
push
push
ror
cwde
sbb
push
loope
or
or
inc
add
les
adc
loopne
xchg
test
or
dec
or
pop
mov
test
inc
add
gs
and
test
jmp
in
push
push
sub
(bad)
or
int3
lahf
dec
add
push
fidivr
push
push
dec
jp
scas
lds
dec
xor
addr16
cs
jo
pop
call
mov
push
repnz
fmul
in
int3
lea
add
cli
clc
and
add
pop
mov
add
fwait
imul
lods
rcl
sbb
or
jmp
ins
or
pop
pop
mov
outs
adc
add
or
pop
adc
mov
mov
lods
mov
dec
add
adc
loopne
aas
das
jne
mov
xor
mov
or
and
jmp
xchg
pop
pop
jbe
fbstp
sbb
inc
and
mov
add
arpl
sbb
adc
xor
std
jno
aam
cdq
stc
sbb
cli
push
pushf
fst
pop
mov
add
ds
jmp
jmp
mov
cvtdq2ps
dec
pop
push
inc
imul
enter
sbb
add
adc
and
and
push
nop
mov
stc
mov
call
and
sub
add
popf
pop
and
dec
dec
(bad)
inc
add
cmp
jae
add
mov
mov
push
inc
and
push
jo
or
push
lods
dec
jnp
xchg
xchg
dec
je
les
in
or
pusha
lods
cmp
push
add
cmp
sub
and
mov
into
inc
sub
add
add
xor
or
enter
sbb
retf
jno
test
icebp
jne
cmp
push
sbb
adc
out
or
and
rcr
pop
addr16
lock
into
dec
add
jo
test
adc
pop
mov
push
jmp
call
test
fidiv
hlt
pop
popf
leave
pop
add
xchg
ds
pop
push
cli
add
inc
stc
in
and
and
push
(bad)
imul
pop
jne
xor
das
sbb
cmp
dec
adc
jl
ret
mov
jmp
cmp
xor
outs
push
add
inc
aas
test
fdivr
mov
cmp
mov
push
jo
retf
add
mov
adc
and
xchg
add
inc
daa
popa
jnp
xor
adc
and
pop
jb
(bad)
push
ds
mov
push
jmp
addr16
mov
loop
(bad)
jns
scas
je
xor
lea
call
add
mov
or
in
shl
jne
add
mov
and
jae
lock
cli
out
into
ja
je
cmp
jb
jno
lea
or
jge
mov
not
test
sub
adc
push
dec
mov
mov
in
push
add
push
xor
mov
and
test
cmp
pop
je
out
push
pop
dec
call
and
adc
pop
rol
cmp
or
dec
pop
leave
or
cmp
add
rcl
push
add
call
shr
sbb
cmp
sbb
shl
xor
call
jp
mov
inc
rcr
pop
adc
xor
ins
add
ret
addr16
cmp
mov
add
add
add
scas
ja
push
loope
sub
adc
push
add
add
mov
adc
sub
shl
inc
stc
or
fidiv
adc
adc
and
or
hlt
and
shr
fmul
lahf
adc
add
popf
jmp
xor
sbb
jo
sub
mov
pop
fstp
adc
cmp
sar
push
in
inc
sahf
adc
push
sbb
and
inc
and
and
jl
(bad)
in
add
dec
dec
fstp
adc
outs
test
xchg
pop
pop
jae
or
inc
sbb
lods
rcr
stos
mov
pop
movs
push
je
gs
fnstenv
mov
cmps
mov
sbb
imul
push
ror
ret
(bad)
mov
je
lock
sbb
mov
mov
cmp
sti
and
scas
pop
xor
in
add
mov
dec
lods
or
push
or
lahf
mov
xor
adc
xchg
xlat
ret
test
xchg
cwde
adc
xor
sub
clc
test
lock
sbb
or
xchg
sbb
popf
fist
clc
add
cmp
out
in
jecxz
pop
(bad)
test
mov
fmul
xchg
test
test
mov
mov
jge
mov
icebp
push
xor
mov
cmp
icebp
mov
or
cmp
(bad)
and
int3
loop
jmp
out
pusha
sbb
dec
aas
not
cld
stos
mov
popf
xor
inc
inc
cdq
popa
sub
jmp
xchg
mov
mov
pop
or
push
sahf
inc
clc
mov
xchg
lods
xchg
lea
sbb
push
call
or
adc
lock
adc
icebp
imul
gs
and
pop
or
mov
jnp
mov
mov
adc
jmp
and
add
imul
xchg
sub
sbb
jo
neg
(bad)
or
outs
je
int3
xchg
jno
sub
jge
jmp
enter
push
dec
push
(bad)
adc
inc
dec
mov
jl
add
lock
loopne
sub
dec
call
lock
and
fcmovu
or
jge
nop
cmp
jne
xor
jmp
mov
pop
hlt
jle
ins
jmp
xchg
adc
add
push
cwde
inc
and
push
xor
mov
or
xor
sbb
mov
push
dec
enter
sub
(bad)
or
and
sbb
scas
inc
pusha
clc
jg
test
xchg
pushf
cmps
inc
inc
mov
push
or
xor
jno
sbb
cld
ja
fadd
sbb
sbb
aam
add
mov
cmps
cmp
adc
push
mov
jne
push
sub
xchg
rcl
xlat
add
arpl
(bad)
mov
ins
movs
(bad)
inc
or
pop
je
push
push
rdtsc
jmp
cmc
inc
add
pop
adc
push
or
lods
sbb
int3
(bad)
pop
inc
sbb
rol
pop
inc
mov
sub
in
icebp
mov
adc
adc
adc
sbb
mov
pop
lahf
jae
shl
fs
enter
mov
jl
call
je
xor
push
mov
or
sub
push
cmp
or
out
lock
clc
ds
sbb
call
push
sub
sub
add
ret
(bad)
out
cmp
xor
cld
pop
ror
mov
je
and
movs
gs
push
jo
sub
add
data16
push
mov
in
cmp
dec
dec
add
cld
(bad)
and
loope
mov
add
loope
and
inc
and
dec
cmp
ret
and
mov
mov
sbb
adc
push
and
lods
push
xchg
jmp
push
add
and
xchg
pop
xchg
ret
mov
mov
cmp
push
aaa
ss
enter
add
add
sbb
push
xlat
push
push
movs
or
loopne
push
add
lods
std
and
nop
mov
cli
ss
xor
jne
and
or
inc
loope
jo
push
jne
sub
xchg
clc
add
imul
sbb
or
cmp
pusha
iret
aaa
or
nop
add
addr16
push
inc
and
sub
(bad)
retf
or
addr16
or
or
adc
test
lahf
and
mul
mov
mov
and
push
add
mov
push
(bad)
cmp
and
add
inc
data16
add
cmp
clc
popf
out
sti
or
add
mov
shr
loope
dec
add
and
sbb
cdq
jp
push
jecxz
mov
dec
add
add
daa
push
call
mov
repz
dec
push
push
jno
push
ins
loopne
or
xor
adc
xchg
movs
sti
fdiv
adc
jl
in
je
call
fwait
mov
mov
inc
cld
inc
retf
enter
clc
xor
adc
mov
mov
ss
push
xor
or
jge
fild
pop
xor
and
push
inc
jge
ins
adc
test
xor
cmps
cmp
xchg
push
add
rcr
int
or
enter
cli
cmp
add
adc
or
and
fild
adc
jge
pop
push
jl
push
and
xor
add
pop
aam
sbb
call
adc
inc
test
xchg
je
pop
imul
mov
dec
test
sbb
push
jo
mov
cmp
pop
xchg
shl
or
xchg
lods
push
cmp
inc
dec
ret
push
xor
jno
xor
add
push
imul
mov
and
xlat
pop
push
stos
test
adc
sbb
add
sar
push
mov
lock
xor
jb
sbb
and
push
jne
mov
mov
mov
sar
mov
sbb
sub
and
or
arpl
or
lock
ret
ds
push
ret
inc
bound
in
test
and
imul
push
cmp
inc
cmp
cmp
sub
int3
xchg
and
or
pop
jle
ins
pop
jmp
rcl
popa
test
jge
movs
rol
ret
jmp
aad
test
lea
stc
loopne
lahf
je
mov
mov
hlt
inc
push
fcomp
sbb
dec
jo
xor
mov
mov
cli
and
xor
xchg
sbb
pushf
sbb
hlt
and
sub
mov
mov
cmc
in
or
aam
push
(bad)
ss
xor
add
rol
mov
push
scas
mov
sub
lods
push
xor
mov
pop
add
xchg
clc
lods
add
adc
xor
adc
icebp
mov
push
(bad)
retf
push
arpl
cld
jnp
jne
mov
add
push
add
pop
inc
sub
xchg
push
fs
sbb
jl
cmp
pop
(bad)
aad
pusha
jl
mov
push
mov
fist
sbb
psubb
push
jmp
aam
jle
pop
or
and
push
add
mov
out
cmp
fdivr
fnstenv
add
dec
add
lods
or
jb
sub
into
mov
xchg
mov
mov
xor
and
aad
stc
or
or
enter
nop
sbb
movs
retf
xchg
or
adc
jb
fiadd
jp
les
fiadd
(bad)
shr
or
inc
inc
cwde
arpl
push
call
xor
and
cli
push
(bad)
rcl
ret
xchg
ret
shl
or
or
inc
or
pop
xchg
rcl
fs
stos
loop
xchg
pop
mov
pusha
fadd
test
std
or
lock
xchg
inc
retf
cmp
push
xchg
lea
adc
push
loope
js
mov
test
les
(bad)
out
ret
lea
aaa
aaa
or
ja
push
je
cs
cli
sub
je
cmp
call
xchg
sbb
and
inc
scas
ins
push
pop
pop
inc
cmc
fcmovnbe
(bad)
sub
adc
jne
and
mov
call
push
inc
hlt
adc
jl
push
ror
inc
movs
and
in
pushf
jmp
or
cs
inc
les
leave
sub
xchg
movs
add
push
adc
ja
mov
xor
fsub
jae
rcl
sbb
outs
pop
add
push
cmp
adc
shl
lods
iret
xor
sub
add
mov
je
outs
in
hlt
shl
je
mov
repnz
dec
popf
pop
inc
test
mov
aam
mov
adc
sbb
test
out
cs
cmp
mov
sbb
mov
sbb
aaa
add
mov
mov
sub
inc
mov
pop
mov
push
adc
push
adc
mov
mov
add
in
pop
rol
ja
fadd
push
sub
je
push
ds
into
jmp
fcmove
(bad)
test
push
xor
jmp
pushf
push
adc
pop
and
mov
popa
jl
pop
jmp
sbb
pop
push
das
les
je
or
cdq
(bad)
fisub
add
lahf
pop
out
test
sbb
adc
arpl
mov
sti
imul
das
jmp
adc
ror
mov
loopne
mov
push
sbb
and
ret
push
sub
sbb
xchg
lock
push
xor
push
and
push
inc
sub
mov
dec
or
scas
xor
aam
ret
and
dec
daa
push
sub
push
xor
add
movs
and
push
push
and
add
cdq
xchg
jb
(bad)
cmps
push
or
mov
push
xor
dec
dec
add
movs
retfw
dec
mov
sub
push
add
pusha
add
fwait
out
push
push
mov
jne
inc
mov
jo
sub
fldenv
test
in
pop
addr16
xchg
mov
ror
xor
dec
mov
jmp
xchg
mov
or
dec
or
add
jne
push
mov
pop
and
rcr
pop
sbb
add
adc
push
inc
mov
dec
add
add
and
adc
xor
adc
sbb
mov
fistp
add
mov
std
push
inc
xchg
sbb
adc
or
inc
clc
jle
push
shr
xor
adc
cs
and
add
rol
ja
add
arpl
jo
push
test
leave
mov
cmp
xchg
add
adc
and
mov
or
je
das
push
mov
adc
pop
fcmovnbe
lock
fwait
nop
shl
icebp
das
dec
pop
mov
xchg
lods
cmp
pop
cmp
cmp
cmp
cmc
add
and
sbb
xor
ins
adc
ret
cmp
outs
xlat
and
push
push
jl
div
sbb
and
or
retf
mov
hlt
popf
push
push
add
add
add
ret
lea
or
cmp
inc
push
enter
outs
jno
lods
push
adc
enter
jo
mov
pop
scas
and
popf
push
lods
arpl
pop
mov
xchg
cmp
add
test
es
ds
test
xlat
test
pop
daa
je
xlat
add
and
shr
sahf
arpl
adc
push
add
addr16
das
xchg
sbb
or
call
sbb
or
xor
push
pop
jne
cmp
int3
cmp
je
cld
and
out
sub
mov
fs
cli
or
pop
add
das
cmp
push
jg
lahf
jns
mov
mov
cmp
data16
push
sbb
mov
fwait
cdq
push
icebp
xor
cmps
add
mov
xchg
pusha
test
sbb
cmc
mov
cmp
je
je
cmp
mov
push
pop
sub
fldcw
cmp
push
xor
sbb
pop
adc
xlat
in
add
cmp
push
xchg
mov
mov
push
jmp
adc
fistp
cmp
add
jae
or
sub
adc
mov
or
add
xchg
retf
pop
or
push
adc
or
js
movs
push
pop
push
lods
mov
dec
(bad)
jne
ss
fwait
add
xor
mov
adc
je
pusha
or
dec
add
inc
pop
ss
lods
in
jnp
dec
jp
or
bound
rcl
es
cmp
lock
popa
mov
movs
cmps
jmp
mov
and
cmps
shl
inc
loope
inc
aam
mov
add
fld
pop
test
sti
push
adc
bswap
cmp
xor
dec
inc
sub
push
stos
jecxz
sti
lea
mov
add
pusha
dec
hlt
xlat
outs
rcl
xchg
cmp
and
push
call
xor
lods
nop
lock
jns
js
aaa
inc
push
shr
or
mov
mov
adc
push
push
add
pop
mov
or
mov
adc
test
icebp
fiadd
jmp
xor
div
bound
mov
cs
pop
aas
mov
mov
jecxz
mov
jmp
cmp
je
retf
xchg
cmp
fs
cmp
xor
cmps
fs
or
mov
rcl
mov
int
outs
sbb
jae
retf
push
ret
hlt
(bad)
int3
jae
push
push
lahf
push
jmp
mov
add
rcl
and
adc
add
fs
jge
mov
pop
fadd
jge
sub
jge
pop
mov
nop
jbe
dec
and
sbb
dec
push
js
loopne
dec
mov
push
adc
or
pop
in
or
cmp
and
cmp
xor
rcr
cmp
rol
jns
lds
ds
push
xlat
and
loopne
push
jbe
dec
test
xchg
dec
add
sbb
dec
sbb
jg
add
rcl
sbb
sub
cmc
pop
sbb
adc
push
loopne
xchg
leave
mul
aaa
xor
leave
or
es
pop
xor
inc
xor
scas
mov
nop
mov
ret
cmp
mov
add
push
mov
adc
jle
add
dec
inc
pusha
fs
ds
xchg
ret
add
out
cmp
push
daa
or
sti
xor
inc
loop
popf
cmp
das
sbb
ss
xor
jo
leave
in
pop
and
cmp
and
dec
push
ffree
(bad)
push
cmp
cmp
xchg
adc
sbb
or
mov
or
inc
test
cmp
push
inc
clc
adc
or
shl
pop
dec
(bad)
dec
sub
sbb
add
sub
and
dec
sbb
mov
xchg
push
or
std
movs
fisttp
ja
ins
frstor
ja
je
add
shr
mov
xchg
cmovs
ror
lea
or
jle
sub
jp
and
add
push
lods
dec
shl
jmp
add
lock
xchg
mov
icebp
lods
inc
stos
imul
imul
xchg
jl
cmps
mov
je
mov
xor
xor
(bad)
arpl
mov
inc
pop
cli
pop
xor
cmp
push
adc
mov
xchg
je
or
clc
mov
inc
ja
je
ins
jne
pop
ja
in
je
popa
xchg
call
ins
mov
or
outs
and
popa
cld
in
and
cmps
clc
and
or
enter
movs
mov
cmp
or
pop
bound
xchg
cmp
or
jne
mov
fisttp
adc
or
int3
jp
test
out
lock
push
dec
sub
jecxz
gs
or
xchg
or
dec
or
pushf
loop
pop
in
imul
int
aaa
pop
pop
xor
loop
in
in
fcom
andps
mov
mov
shr
mov
xchg
ja
sub
add
nop
jo
fimul
push
lods
xor
rcl
movups
sub
or
stos
cdq
add
sti
ror
xchg
(bad)
ins
or
imul
add
sub
inc
out
sbb
sub
dec
adc
icebp
xor
jmp
fnsave
jge
add
push
pop
or
imul
aas
fs
outs
sub
adc
push
cld
(bad)
shl
fidiv
dec
jl
(bad)
fldcw
jnp
or
pop
mov
ret
jp
fisttp
sahf
xchg
mov
fistp
inc
test
test
pop
inc
add
adc
mov
and
rol
dec
sbb
push
rol
(bad)
adc
inc
sbb
mov
je
sub
xor
adc
inc
imul
and
call
sbb
inc
(bad)
add
imul
movmskps
pop
or
jae
cmp
mov
shr
adc
jg
movs
pop
push
scas
xchg
adc
je
es
xchg
cmp
pop
jle
mov
add
outs
mov
cwde
pop
mov
adc
es
cwde
pop
pop
repnz
retf
rol
xchg
test
mov
add
xor
push
inc
inc
fisub
loope
ins
sbb
movs
push
icebp
fsubr
push
add
test
les
out
add
fst
ins
fnclex
push
and
in
leave
les
cmp
mov
push
cmp
xchg
into
jmp
sbb
test
aaa
cmp
ret
jne
sti
inc
cld
or
and
fdivr
cmp
push
push
sbb
or
add
add
faddp
and
inc
add
jmp
add
push
inc
and
ins
call
add
or
add
push
add
movs
aad
add
mov
xor
or
sahf
cmp
add
adc
aas
sub
mov
jecxz
jge
sub
clc
pop
push
xchg
sbb
shl
cs
icebp
call
inc
xchg
(bad)
sub
fisubr
fmul
icebp
push
popa
ret
or
dec
xchg
ss
inc
add
push
aam
ds
clc
xchg
dec
and
pop
ret
sbb
nop
pop
inc
lahf
cmp
or
loopne
xchg
stos
adc
iret
ret
or
mul
mov
push
pop
mov
(bad)
std
shl
pop
push
shr
or
rol
adc
das
stos
add
cmp
push
test
add
lods
dec
xchg
mov
or
ins
mov
rol
sub
rcl
in
sbb
push
or
adc
jmp
ss
dec
rcr
ret
mov
dec
or
sbb
jle
rol
popa
dec
pop
push
add
jbe
int3
or
leave
push
shl
and
ret
sbb
cmp
pop
add
push
mov
push
push
dec
retf
add
pushf
fld
inc
inc
jmp
add
je
sbb
(bad)
or
ss
in
pop
stos
add
(bad)
push
out
inc
shl
cmp
cmp
add
xchg
or
push
push
and
push
into
jle
outs
nop
push
or
test
popa
stos
bound
xor
push
test
ins
cmps
mov
mov
adc
push
push
add
daa
movs
or
sbb
jbe
js
fadd
pop
add
movs
imul
icebp
xchg
dec
push
jo
sub
push
pop
jbe
and
adc
into
adc
and
inc
fnstsw
dec
ins
jle
dec
or
or
push
sub
sbb
sbb
jmp
xchg
rol
inc
(bad)
test
dec
or
inc
sub
push
pcmpeqb
jge
and
push
add
cmp
adc
shl
rcr
xor
in
dec
mov
dec
movs
ror
test
cs
pop
ins
xchg
mov
iret
xchg
test
mov
adc
aas
jbe
pop
addr16
pop
jno
adc
xlat
add
test
sub
sub
push
cmps
jns
xor
je
xchg
or
cmp
mov
and
and
and
cs
or
xlat
js
xor
fsub
mov
mov
pop
popa
lock
out
adc
sbb
aaa
dec
lock
sbb
cmp
dec
js
sub
f2xm1
dec
mov
sbb
inc
aaa
inc
xchg
ror
dec
cmp
fidivr
sbb
mov
test
lock
out
jmp
adc
mov
mov
and
cmps
inc
adc
loopne
mov
pusha
pop
mov
ss
adc
add
in
nop
sbb
sbb
in
cdq
sbb
add
mov
push
sbb
popa
cwde
sahf
(bad)
add
and
push
into
call
or
dec
(bad)
dec
dec
adc
push
retf
test
add
shl
adc
jge
add
sbb
pop
je
push
sbb
xlat
out
or
mov
xor
xor
and
inc
push
cmp
add
jmp
es
popa
xchg
sbb
or
add
dec
pop
or
sub
movaps
push
push
add
xchg
rol
pop
or
mov
mov
(bad)
retf
shl
bound
xor
jns
cmc
in
je
mov
inc
mov
in
ins
int3
ss
sub
outs
(bad)
add
mov
dec
sbb
cmovno
bound
fmul
fcomp
xchg
mov
mov
sub
fcom
ret
aam
rcl
ret
jb
ret
test
jnp
sub
lods
inc
pop
and
and
dec
dec
or
and
mov
push
leave
inc
in
movs
mov
mov
or
pop
push
or
jno
xchg
or
jp
mov
ficomp
mov
add
inc
fs
adc
add
mov
fild
xor
push
adc
and
pop
push
inc
push
add
cdq
jo
mov
adc
je
(bad)
sub
add
mov
dec
adc
sahf
(bad)
add
in
ret
add
shl
pusha
push
jge
dec
jg
sub
mov
das
jo
xchg
js
jmp
test
pusha
stc
add
ficomp
inc
mov
jae
and
mov
push
xchg
aad
or
mov
ins
imul
loopne
and
or
inc
test
scas
add
inc
adc
stc
ja
jns
adc
ret
cmp
and
inc
adc
dec
pop
loopne
dec
aas
adc
clc
cdq
test
fcomp
test
pop
adc
or
pushf
pop
push
adc
pop
loop
pop
ss
(bad)
ss
call
adc
add
jb
dec
jmp
lock
aaa
cmc
inc
and
mov
add
push
mov
loopne
dec
add
fiadd
cmp
or
and
aas
jge
add
and
jecxz
and
fist
jbe
and
loope
loopne
mov
outs
test
in
addr16
xchg
sbb
scas
push
push
cwde
push
enter
lods
add
aam
dec
or
repnz
fmul
add
ror
xor
retf
loopne
loopne
ret
and
(bad)
fsubr
inc
xchg
and
jg
and
dec
push
cmovl
dec
xor
test
push
and
push
dec
mov
ins
sbb
adc
mov
and
and
icebp
sbb
lds
push
in
pop
not
xchg
inc
add
jb
sub
cmp
rcr
sub
daa
and
arpl
sahf
add
ret
sti
xchg
mov
sbb
jge
and
je
sar
inc
sbb
inc
jmp
sub
xchg
in
loopne
daa
inc
popa
inc
ja
xchg
(bad)
sbb
push
je
jge
add
sbb
mov
inc
test
jmp
lock
add
mov
xchg
jb
std
sbb
lods
dec
jl
push
cmp
inc
sub
mov
aad
adc
mov
fcomp
push
jae
popf
add
xor
aam
dec
or
(bad)
jmp
test
lahf
fs
pop
push
jmp
adc
adc
add
and
add
add
and
and
test
ss
or
xor
popf
fsubr
dec
test
outs
cmp
sub
test
shr
(bad)
push
sbb
stos
cmps
sub
push
add
pop
xor
test
mov
lock
call
mov
adc
or
and
adc
mov
mov
cmps
mov
jne
dec
test
mov
mov
shl
repnz
mov
xchg
in
push
pusha
add
movs
mov
push
shr
sbb
sbb
into
stos
add
add
adc
aam
and
ror
and
adc
push
mov
mov
or
add
jge
mov
add
out
push
fs
or
mov
sbb
xchg
es
inc
frstor
and
es
pop
fadd
stos
clc
in
data16
add
sub
popf
pop
xchg
hlt
dec
or
rcr
jae
mov
sub
aad
clc
retf
or
(bad)
sub
xchg
ret
adc
or
xchg
cs
sub
add
sbb
es
or
xor
xchg
or
clc
sub
jbe
dec
dec
loope
xchg
ja
sub
in
or
dec
xchg
fiadd
fnstcw
fdiv
mov
mov
(bad)
clc
xchg
sub
clc
mov
jbe
ret
movzx
jb
push
ror
sbb
mov
adc
ficom
movs
push
inc
add
adc
inc
xchg
(bad)
lods
mov
mov
sbb
inc
sbb
mov
sbb
jne
push
or
inc
pop
ror
lahf
adc
push
push
push
(bad)
cmp
fmul
loope
mov
push
imul
clc
or
add
icebp
stos
and
add
mov
push
sub
out
je
mov
jge
xchg
mov
call
sub
push
ss
sub
dec
(bad)
jge
fmul
ret
(bad)
mov
push
cli
sbb
push
ins
test
out
cmp
daa
and
push
push
add
push
lock
pop
daa
mov
inc
push
adc
and
add
cmp
sbb
adc
shl
add
popf
sbb
in
adc
jbe
push
bound
and
and
push
dec
cmp
add
add
popf
(bad)
loop
loop
xchg
mov
fcom
test
out
movs
test
fist
push
jno
call
cmp
mov
lds
pop
push
xchg
or
jl
pop
mul
leave
lods
and
jae
xor
pop
jle
ret
lods
push
clc
scas
add
push
push
sar
loop
dec
sbb
faddp
aaa
test
sbb
es
adc
rcr
and
inc
mov
das
call
test
or
push
repnz
test
add
imul
fst
push
cmps
sahf
test
lock
test
jno
add
adc
stos
xor
jmp
hlt
push
and
in
outs
and
pop
loopne
and
sbb
movs
or
xchg
sub
xor
iret
inc
push
nop
cli
add
xchg
out
das
sbb
cmps
cmp
fmul
mov
sbb
mov
mov
cld
adc
mov
jmp
aaa
dec
xor
adc
push
or
jo
add
fcmovnb
(bad)
enter
fstp
or
lods
lea
les
nop
push
sbb
sbb
mov
(bad)
(bad)
fcomp
inc
dec
xchg
dec
outs
add
xor
push
pop
xor
movs
or
je
mov
or
cwde
cwde
add
cmp
clc
mov
dec
inc
mov
lea
push
out
dec
in
sub
push
lahf
xchg
push
arpl
pop
add
dec
jne
pop
push
adc
or
pop
adc
pop
ss
mov
dec
ja
xor
les
sub
add
retf
movs
inc
push
or
leave
cmp
pop
cmp
call
rcl
adc
scas
rol
and
pop
pop
cs
xchg
mov
in
lods
or
add
sahf
or
xor
es
fsub
lahf
add
xor
dec
mov
loop
mov
sub
sbb
lahf
jecxz
loopne
jmp
call
(bad)
aad
dec
or
push
mov
(bad)
out
nop
adc
aam
mov
dec
inc
popa
mov
jg
add
adc
dec
mov
lock
cld
or
mov
daa
sub
popf
cmp
dec
add
pop
popa
push
mov
pop
(bad)
cmp
(bad)
mov
in
es
cld
mov
pop
syscall
hlt
sbb
cmc
mov
out
push
push
push
push
lahf
(bad)
xor
xchg
dec
nop
inc
xor
mov
cli
adc
pop
or
pop
jmp
add
call
or
loope
sbb
(bad)
pop
dec
loope
dec
sub
inc
push
sub
xchg
inc
or
jo
jae
lds
mov
or
imul
add
sbb
push
dec
adc
inc
inc
rol
cs
push
ss
sub
iret
scas
mov
loopne
loope
dec
or
in
and
nop
jmp
ror
mov
faddp
jne
cmc
push
das
jecxz
xor
inc
or
xchg
icebp
cmp
test
or
sub
mov
mov
outs
mov
enter
or
mov
rcr
mov
mov
js
mov
adc
sub
lea
iret
sub
cmc
cmp
inc
and
leave
and
add
cwde
retf
or
out
push
pop
inc
mov
add
sbb
sbb
fsub
jno
jae
iret
pop
lea
pop
cli
or
xchg
add
pop
pop
cmp
dec
mov
or
mov
lods
adc
mov
test
pusha
bound
scas
sbb
mov
inc
jb
adc
sahf
mov
jo
clc
mov
iret
aad
lock
(bad)
sbb
or
or
sbb
pop
rcr
jne
scas
mov
mov
push
aam
adc
jl
jns
and
dec
and
test
je
cmp
pop
cmp
lods
fs
mov
jno
rcl
dec
imul
fs
movs
rcr
push
jae
and
jo
mov
push
std
loopne
cmp
add
je
repz
mov
scas
pop
and
loopne
and
sbb
(bad)
imul
in
sub
sub
daa
fs
(bad)
and
mov
pop
cmp
sub
mov
ja
inc
mov
fs
and
add
pop
imul
push
add
mov
rcr
int3
fidiv
fldcw
ret
mov
or
pop
adc
mov
out
push
and
scas
mov
mov
dec
adc
cmp
sbb
and
rol
or
inc
movs
mov
mov
retf
mov
test
sbb
and
out
es
cs
inc
sub
je
inc
out
call
lods
mov
or
or
mov
loope
add
xor
int3
xor
xor
(bad)
sbb
pop
sub
ins
adc
jmp
mov
push
out
mov
mov
or
pop
ffree
or
add
and
pop
js
mov
je
popa
xchg
mov
xor
add
dec
data16
push
fisub
push
push
sbb
jl
pushf
popf
std
mov
inc
or
imul
sbb
add
pop
push
push
aam
or
movs
lods
xchg
fwait
cmp
clc
jl
ret
push
or
popf
out
sub
adc
jle
pop
sbb
push
aas
push
push
ds
mov
inc
add
gs
sar
push
test
repz
and
imul
xlat
mov
or
lods
push
mov
iret
lods
xor
or
adc
fdiv
imul
mov
clts
pop
pop
sbb
jle
push
ins
mov
daa
add
les
popf
shr
push
arpl
mov
sbb
pop
je
stc
retf
mov
lea
pop
mov
movs
shr
bound
mov
and
cmp
push
add
xor
dec
lock
pop
das
fs
mov
es
clc
pop
ss
cmp
xor
inc
imul
dec
fisub
inc
mov
sub
push
and
mov
pop
pop
sub
cmp
nop/reserved
xchg
sub
in
or
jb
sub
xchg
shl
in
and
clc
fsub
out
scas
xchg
adc
mov
test
rcr
inc
call
xchg
add
out
jge
lock
aam
pop
mov
cmc
and
mov
aas
adc
shl
inc
mov
cmp
mov
pop
sub
push
inc
arpl
cmp
or
pop
loope
fmul
xchg
out
sub
inc
xor
cli
mov
add
mov
push
adc
cmps
xchg
inc
or
shl
mov
pop
push
jp
xor
jmp
sbb
push
das
inc
push
or
sub
adc
dec
or
pusha
pusha
dec
test
les
stos
test
stc
cmp
jnp
mov
call
or
inc
pop
fldenv
sti
scas
jge
lods
pop
sbb
pusha
pop
sbb
call
cmp
int3
lock
(bad)
inc
or
jmp
jg
xchg
nop
inc
daa
add
mov
mov
push
inc
pop
(bad)
push
pop
cmp
mov
ss
hlt
clc
(bad)
daa
push
call
test
mov
icebp
(bad)
in
mov
sub
xor
add
lods
mov
mov
sub
rcl
inc
test
in
daa
jmp
sbb
lock
inc
adc
test
pop
daa
shl
jp
stc
js
test
loop
call
mov
(bad)
fcomip
jne
mov
fwait
mov
push
cmp
mov
dec
cmp
or
loope
fs
or
push
out
jne
inc
data16
and
adc
push
cdq
pop
daa
pop
mov
push
test
add
repz
adc
sbb
adc
shl
jle
shl
dec
std
popw
das
xchg
out
pusha
mov
mov
call
add
xchg
hlt
dec
jp
cmp
push
enter
mov
dec
add
retf
cli
sub
add
iret
outs
inc
popf
xor
cs
xchg
lea
mov
bound
ret
loope
lods
and
je
dec
test
cmp
adc
adc
or
retf
hlt
fld
(bad)
mov
pop
fs
cmp
jl
jl
sbb
mov
jle
jo
inc
or
xor
mov
sbb
push
ret
push
pop
in
dec
call
cld
sub
enter
ror
icebp
push
push
add
inc
and
add
fs
mov
mov
inc
inc
movs
call
mov
cs
nop
sahf
mov
ds
ror
and
sub
xchg
xor
ret
jae
and
push
ret
daa
mov
daa
or
adc
loopne
dec
lock
loopne
inc
fucomi
(bad)
int
fimul
in
mov
pushf
mov
push
mov
inc
sbb
outs
sub
mov
push
push
outs
test
and
mov
adc
push
jne
clc
cmp
xchg
mov
fcom
mov
mov
shr
lods
jmp
jne
in
bound
add
mov
dec
je
dec
dec
(bad)
(bad)
mov
mov
jg
nop
inc
sbb
jmp
sbb
add
fsub
sar
jle
adc
or
sbb
cmp
xchg
cmp
icebp
push
pop
jo
push
mov
or
push
inc
mov
xchg
xchg
les
dec
add
pop
in
pop
dec
push
dec
add
cld
outs
or
push
arpl
fcom
push
xchg
arpl
inc
into
push
mov
mov
mov
or
mov
mov
rcr
cmps
mov
pop
into
adc
test
jg
div
aas
(bad)
call
outs
add
lods
in
sahf
add
ja
push
xor
scas
push
dec
xchg
retf
adc
clc
clc
sub
adc
inc
shr
add
ds
inc
js
sbb
xchg
push
neg
ror
and
rol
or
enter
sbb
or
imul
rol
popa
sub
inc
out
mul
push
lea
xchg
sbb
mov
push
ss
wbinvd
cmps
inc
push
xchg
and
sub
loop
pop
push
ss
xchg
cmp
hlt
adc
and
mov
mov
pop
int
fidivr
adc
ja
jmp
sub
or
pop
adc
fiadd
fs
pop
pop
sub
imul
dec
xor
cmps
imul
into
retf
mov
rol
pusha
or
push
or
pop
rol
jecxz
or
add
in
ja
xor
fild
or
(bad)
(bad)
stc
inc
retf
add
or
inc
adc
push
adc
dec
fcom
mov
jmp
ror
cmp
or
adc
jo
dec
clc
adc
add
dec
(bad)
mov
je
jb
cmp
add
aaa
stos
shr
mov
in
push
xchg
push
outs
sbb
hlt
pop
pop
push
sbb
xchg
pusha
aam
jbe
fnsave
sub
ja
sbb
mov
jle
lds
outs
std
xchg
retf
and
fadd
cmp
push
push
sbb
rcr
inc
and
out
jo
and
xchg
adc
je
add
(bad)
or
inc
mov
lds
mov
rol
cdq
mov
or
popa
push
cs
addr16
rcl
add
xchg
sbb
sbb
daa
mov
push
ja
inc
bound
sbb
push
adc
and
ret
inc
add
iret
outs
pop
retf
push
loopne
add
xchg
fiadd
or
cmps
mov
or
mov
dec
movs
outs
ja
dec
call
and
pop
or
sbb
mov
ret
xchg
shl
or
ret
dec
jp
mov
cmp
jbe
(bad)
sub
sub
adc
xor
fidiv
popf
inc
daa
imul
arpl
and
outs
mov
push
ins
sub
mov
icebp
loopne
jae
ret
sbb
sub
adc
jbe
push
sub
lea
mov
push
mov
or
les
and
add
and
add
sbb
and
rcl
jmp
pop
inc
mov
outs
stos
inc
pusha
inc
in
out
pop
jo
inc
sbb
in
shl
aad
stc
je
fadd
pop
cmps
cmp
add
jp
ret
cwde
lock
stos
add
dec
hlt
add
clc
sub
pop
and
mov
mov
test
mov
retf
and
xchg
or
push
dec
pop
jo
call
push
cdq
rcl
gs
iret
push
add
push
inc
outs
js
js
ds
(bad)
adc
adc
or
aaa
mov
push
idiv
mov
pop
xchg
dec
enter
or
add
sub
cmp
sub
and
jo
ror
repz
or
fadd
pop
push
test
push
ffree
cwde
fiadd
dec
push
ret
jae
xlat
inc
and
mov
sub
adc
xchg
test
daa
mov
push
sub
adc
mov
stos
jp
or
rcl
sub
inc
fiadd
pusha
xchg
cmp
xchg
je
jecxz
jne
sbb
adc
adc
push
push
cmp
mov
xor
stos
jg
jmp
sub
out
mov
dec
lea
or
sub
xchg
add
fs
mov
(bad)
adc
aaa
cld
loope
adc
xor
cmc
test
inc
retf
div
leave
and
mov
iret
ret
pop
jne
mov
inc
and
int3
push
xchg
push
sub
nop
push
add
or
sbb
pop
call
sbb
cmc
jne
fcmovnb
fidivr
push
jle
adc
pushf
or
hlt
sub
cmp
enter
jne
pop
or
and
pop
imul
je
mov
xchg
sub
cwde
ret
cmp
and
outs
scas
sub
popf
sbb
mov
adc
fld
lock
push
add
cmps
in
and
xor
adc
bound
in
imul
add
mov
mov
retf
dec
popf
cs
jmp
jl
iret
daa
mov
cmps
xchg
pop
fcmovb
and
push
add
add
cmps
cwde
push
pop
dec
and
popa
outs
loopne
in
dec
enter
jmp
test
or
xor
sub
ss
loopne
sbb
jl
ret
in
or
sbb
loope
les
call
sbb
icebp
aad
jnp
inc
(bad)
jo
or
dec
loopne
sbb
cmp
loopne
pop
fsub
clc
mov
leave
jne
sbb
clc
and
add
out
mov
push
jl
scas
dec
fs
fs
lds
call
cld
add
arpl
sbb
mov
or
add
pop
or
sete
pop
jmp
arpl
and
pushf
mov
in
jp
ret
jns
dec
(bad)
sar
xchg
daa
js
adc
mov
daa
aaa
add
int3
and
pop
jns
imul
xchg
pop
xor
mov
inc
cmp
jl
cmp
out
pop
add
xor
jg
push
(bad)
pop
ret
test
call
inc
inc
cmp
jge
sub
pop
push
and
aam
aad
popa
ja
fadd
push
and
add
add
inc
jp
pop
xchg
add
outs
mov
(bad)
jns
in
mov
cmp
inc
pop
iret
inc
inc
jl
aas
inc
jmp
jmp
push
push
push
push
and
dec
mov
outs
or
pop
adc
nop
or
lea
cmp
and
(bad)
xchg
adc
and
ss
xchg
push
fisubr
ins
arpl
and
(bad)
mov
push
repnz
or
je
sar
adc
repz
push
lahf
shr
or
nop
xchg
es
xor
inc
clc
pop
pop
call
adc
or
nop
call
pop
sbb
push
push
rol
pop
mov
out
add
stos
adc
xchg
add
mov
and
add
xchg
rcl
xchg
dec
push
inc
pop
inc
pushf
sahf
adc
push
popa
inc
push
nop
mov
mov
add
inc
test
or
retf
(bad)
int3
add
mov
xor
adc
mov
jecxz
ret
bound
lock
xchg
push
jge
or
std
(bad)
push
lock
je
enter
adc
sar
sbb
jae
test
xor
cmp
popa
inc
in
and
test
ret
pop
cmp
inc
add
sub
cmp
imul
add
pushf
bound
pusha
movs
inc
push
pop
cld
mov
les
mov
inc
mov
push
bound
loope
aam
sub
add
mov
sti
push
mov
jne
js
pop
sub
cmp
(bad)
lds
or
retf
cmps
(bad)
cwde
xchg
je
xchg
loop
test
enter
stos
add
pop
xchg
mov
popa
add
outs
mov
push
cmp
jne
sub
xchg
mov
out
dec
adc
daa
sub
jl
in
test
push
div
pushf
push
das
dec
test
ror
ret
mov
inc
push
push
pop
mov
pop
xchg
ret
daa
clc
pop
mov
adc
cwde
dec
mov
shr
and
les
jmp
sbb
jno
or
mov
jecxz
inc
loopne
sahf
in
sbb
mov
add
push
jne
xchg
push
fsub
xlat
fmul
fistp
into
mov
mov
or
adc
or
aaa
je
mov
inc
into
fidiv
(bad)
dec
nop
movs
sbb
xchg
cld
jge
retf
popa
jo
xlat
shl
lock
inc
pusha
fwait
call
lds
add
rol
pushf
sbb
add
movs
push
bound
shr
and
fst
cmps
jae
jle
sti
imul
sub
cld
push
push
push
ror
sub
aaa
and
push
adc
int3
shl
retf
or
icebp
adc
dec
jne
gs
or
xchg
das
sbb
mov
sbb
pop
mov
pop
jle
jmp
sahf
xchg
xor
aam
arpl
add
sbb
mov
push
or
cmp
mov
shl
ins
add
into
int3
mov
shr
push
adc
xchg
sub
test
or
xchg
icebp
inc
add
das
cmp
jle
adc
xchg
sub
aam
jbe
adc
jmp
stc
xlat
pop
push
jmp
add
sbb
adc
aam
jne
div
push
adc
cmps
mov
dec
rol
push
enter
push
push
add
sbb
sbb
and
das
sbb
xchg
loope
ja
push
add
xchg
push
aam
mov
ins
push
(bad)
add
xchg
xor
data16
mov
cmp
inc
ret
mov
push
pusha
or
pusha
mov
iret
fs
sahf
nop
push
dec
push
push
jo
mov
fst
add
push
mov
inc
(bad)
rol
add
push
shr
pop
(bad)
sbb
leave
or
and
sbb
shr
add
out
(bad)
cmp
sub
push
mov
ror
loope
scas
sub
lock
add
js
cmp
add
mov
test
push
adc
(bad)
dec
fcomp
dec
repz
sar
or
mov
jge
push
test
jne
mov
mov
xor
mov
pushf
shl
or
fld
dec
cmps
or
jmp
xchg
mov
repnz
cmp
cmps
sub
and
pop
mov
pop
ret
sbb
adc
dec
or
adc
or
xor
scas
xchg
shl
test
cwde
pop
sbb
pop
adc
mov
mov
and
scas
rol
mov
jae
pop
cmp
mov
jmp
and
sbb
inc
push
sub
mov
gs
push
mov
sbb
sbb
jno
inc
popa
add
scas
mov
xor
dec
inc
sub
add
rcl
adc
add
fs
push
sub
or
jg
jmp
or
push
xor
xor
mov
out
mov
or
jl
mov
test
pop
rcl
dec
push
sub
dec
sbb
mov
clc
adc
cmp
or
and
and
xchg
push
or
sub
xor
mov
push
je
dec
adc
inc
pop
sbb
dec
js
pop
outs
mov
or
inc
ds
dec
pushf
gs
dec
pop
add
inc
inc
xor
pop
inc
bound
fcom
iret
aaa
push
js
int3
pop
aad
sbb
dec
icebp
out
fadd
stc
mov
xchg
loopne
push
mov
dec
or
retf
mov
xor
data16
pusha
lods
add
sub
adc
sbb
fistp
push
add
fwait
inc
ins
jnp
sub
mov
inc
int3
mov
(bad)
jmp
sti
loope
jb
adc
jg
or
mov
lea
xchg
pop
cmc
push
rcr
(bad)
mov
add
popa
mov
sbb
popf
fcomp
pop
js
ins
inc
jbe
xor
arpl
jno
pop
pusha
ror
js
adc
sub
sbb
dec
sub
fdivr
mov
xor
inc
fld
dec
out
mov
inc
adc
inc
or
jne
test
jbe
test
cmp
test
je
mov
sub
add
jl
icebp
rcl
pop
outs
mov
fdiv
fwait
sub
fisttp
mov
and
rcr
mov
data16
add
pushf
mov
push
push
jmp
test
dec
add
dec
xchg
xor
nop
fld
add
jecxz
sar
add
dec
leave
jmp
lock
test
inc
adc
ret
push
fbstp
ret
sub
jge
mov
add
push
dec
ss
adc
add
push
icebp
arpl
and
mov
jbe
cli
arpl
movs
pop
dec
dec
pop
fld
scas
sub
out
mov
out
mov
jb
mov
cmp
mov
out
mov
mov
cmp
mov
and
call
mov
shr
std
rcl
inc
mov
fidiv
push
sti
mov
push
pop
or
cs
jbe
jl
enter
mov
jb
pop
dec
and
push
mov
test
jmp
lock
call
inc
lahf
dec
xchg
or
push
test
adc
jp
test
mov
lahf
push
(bad)
sub
ja
hlt
dec
sub
(bad)
fstp
aas
sbb
adc
(bad)
mov
or
dec
adc
enter
jo
daa
add
mov
cmp
or
mov
sbb
jg
add
xchg
push
add
mov
loope
add
jo
cmps
add
dec
neg
imul
or
test
push
sbb
in
fwait
add
dec
test
cdq
cwde
dec
es
push
mov
daa
mov
push
je
adc
cmp
dec
dec
cmp
es
stc
popa
push
pop
pop
push
not
dec
shr
daa
cwde
mov
push
push
pushf
and
js
sti
scas
and
pusha
xchg
cmp
pop
mov
add
and
cs
sti
outs
or
rcr
fisubr
xor
and
clc
add
add
pusha
dec
fnstsw
mov
xor
rcl
sub
test
cmp
and
lea
and
pop
push
fst
ror
ficom
pavgw
and
xor
popf
and
inc
sub
jbe
dec
push
int
xchg
dec
or
sbb
sub
lock
daa
les
xchg
ins
add
and
test
gs
ror
cmp
push
or
mov
test
mov
add
xor
adc
jge
push
adc
push
adc
aaa
mov
inc
dec
popf
inc
rol
cmp
jle
in
repnz
sub
xor
cmp
push
sub
lea
xor
push
mov
jo
fistp
inc
jmp
and
dec
shl
or
sub
lods
inc
nop
add
addr16
and
loope
lods
add
or
jle
pop
dec
sbb
pop
sbb
xchg
dec
and
mov
push
xor
xor
jmp
inc
xor
mov
xchg
cmp
xchg
ins
cmp
sbb
add
mov
arpl
push
ret
cmp
add
dec
xchg
or
dec
xchg
jne
and
movs
xchg
mov
xor
or
movs
aad
xor
pop
loope
push
js
push
adc
dec
ret
mov
adc
push
jmp
iret
popf
push
xchg
test
inc
leave
clc
cmps
dec
sub
push
adc
cwde
cmp
sbb
mov
push
adc
punpckhbw
mov
mov
ins
(bad)
add
xor
aad
push
mov
cmp
outs
inc
cmp
cmp
in
pop
repz
shl
call
jmp
sbb
sub
adc
add
fst
or
dec
lods
popa
adc
dec
mov
in
(bad)
adc
js
lock
push
fwait
xor
xchg
mov
jae
push
mov
movs
fs
sub
js
xor
and
xor
jb
xchg
not
dec
dec
clc
daa
add
out
pop
add
aam
xchg
clc
add
ins
mov
xchg
xor
push
js
sub
jge
xchg
test
xor
test
sbb
jnp
push
in
loop
add
and
add
mov
mov
nop
js
inc
lds
addr16
jmp
pop
mov
pop
in
push
inc
cmp
and
mov
sahf
push
call
add
ret
xchg
psrlq
and
add
or
cmp
inc
xor
adc
cmp
jl
repz
xor
push
mov
cmp
clc
daa
or
or
pop
jae
cmp
sahf
and
mov
fist
cld
jge
mov
mov
and
inc
push
mov
jne
call
fdivr
(bad)
fdivr
loop
cmp
mov
ret
daa
mov
hlt
fiadd
push
test
ret
retf
cld
pusha
loop
xchg
cmp
cdq
add
pop
add
sbb
sub
sbb
rol
add
ins
dec
sbb
push
test
(bad)
call
mov
add
sub
mov
mov
pop
cmp
pop
test
repnz
js
sub
add
test
or
in
imul
fs
pop
js
rol
icebp
jnp
xchg
cmp
in
dec
sub
int3
cmp
add
out
cmp
mov
cmp
(bad)
cmp
movs
xor
push
or
jo
dec
sbb
or
push
sbb
sub
in
sbb
xchg
push
cli
or
push
push
jne
test
add
leave
sub
dec
or
or
pop
push
repz
loopne
xor
loopne
and
in
add
aam
mov
xchg
or
loopne
mov
pop
mov
xor
or
mov
or
and
mov
add
fsubr
pop
not
rol
imul
and
rcr
popa
inc
add
pop
cmps
push
sahf
or
loop
push
xchg
inc
adc
sub
add
ret
int3
push
nop
sub
shl
movs
test
xor
add
or
adc
jge
ret
sub
jne
dec
pop
scas
fnstcw
and
sub
fdiv
push
or
jmp
pop
ins
sub
mov
jb
clc
or
push
pop
div
cmc
add
data16
js
popa
daa
mov
fsub
es
sub
or
xchg
adc
sub
cmc
xchg
mov
(bad)
sub
and
lahf
mov
daa
xchg
sub
jl
test
dec
sti
adc
data16
mov
jo
test
xor
push
or
test
in
cwde
mov
add
test
sbb
mov
pop
jecxz
movs
mov
adc
inc
sbb
mov
lods
mov
into
lock
adc
xchg
ror
mov
dec
jle
pusha
and
loope
fadd
sbb
and
sbb
imul
fild
dec
sbb
mov
adc
mov
loop
or
sbb
ins
xor
cwde
fild
and
mov
data16
sub
sbb
iret
pop
sbb
or
xchg
pop
out
dec
jo
scas
movd
mov
test
inc
es
ins
pop
daa
dec
jb
test
push
data16
adc
adc
out
adc
ret
movd
or
add
cmp
adc
jl
inc
pop
mov
ret
cmp
les
sbb
push
and
or
cwde
mov
pushf
adc
gs
mov
cmp
fldenv
hlt
mov
pop
pop
sahf
mov
imul
push
ss
rcr
enter
out
shr
push
jbe
call
pop
out
or
test
mov
inc
adc
xor
fmul
xchg
imul
xor
xor
pop
lea
cmovo
pusha
or
(bad)
sub
ret
xchg
fisub
into
inc
or
inc
pop
mov
or
push
ja
mov
dec
jo
retf
mov
mov
pop
push
push
pop
out
sar
test
pop
xchg
inc
pop
movs
outs
inc
pop
push
iret
jmp
adc
leave
div
mov
mov
add
out
loopne
inc
pop
rol
(bad)
rcr
push
add
pop
push
fiadd
sub
ror
loope
add
fwait
test
and
sub
dec
sub
pop
xor
sub
add
jb
and
imul
cli
fs
adc
xor
add
xchg
inc
cmps
lock
cmp
ror
mov
mov
push
and
and
cmp
push
dec
or
mov
mov
hlt
(bad)
adc
push
cmp
sti
pushf
in
cmp
pop
inc
push
push
ins
jecxz
and
sbb
xchg
sti
in
xchg
fadd
test
jge
mov
in
pop
vmwrite
mov
clc
mov
push
loop
ror
or
pop
arpl
in
hlt
ins
xor
loop
push
sbb
sbb
loope
jo
mov
push
scas
and
and
scas
push
mov
adc
xor
imul
or
int
iret
movs
movs
mov
mov
pop
in
mov
xor
add
push
repz
outs
pop
repz
push
arpl
sub
xor
rol
jge
xor
fmul
dec
mov
inc
push
pop
add
pop
adc
mov
and
mov
add
dec
in
dec
clc
(bad)
cmp
je
and
jbe
(bad)
rol
adc
push
inc
push
xor
mov
xchg
sub
cld
dec
or
cs
dec
dec
or
push
jmp
add
mov
stos
xor
inc
jne
rol
push
cli
push
sar
ins
dec
jo
mov
and
push
pop
adc
inc
jne
sbb
nop
pop
dec
fbld
and
pop
(bad)
das
pop
nop
adc
dec
loopne
(bad)
fld1
push
pop
ret
or
adc
enter
push
js
sub
into
imul
dec
ret
outs
shl
mov
push
scas
mov
sbb
mov
jo
sbb
jnp
push
jg
sbb
cdq
leave
cmps
les
or
ja
imul
or
xor
jno
test
xchg
out
inc
inc
popa
sbb
sub
imul
inc
(bad)
adc
mov
pop
cmc
mov
test
je
mov
inc
adc
add
fcomp
or
adc
dec
adc
test
fstp
jo
adc
shl
add
test
adc
adc
(bad)
ret
push
pusha
or
xchg
and
into
jp
and
pop
adc
push
test
dec
inc
push
cmps
lock
jae
adc
add
cmovle
fstp
es
shl
push
add
pop
setne
retf
cli
add
pop
rcl
xor
xchg
sbb
sub
mov
call
lods
bound
nop
clc
push
test
inc
mov
sbb
sbb
push
jne
dec
loopne
fs
mov
adc
sub
jae
int
xchg
sub
ficom
push
push
push
jmp
je
call
lahf
mov
jne
cmps
jo
mov
inc
xlat
mov
or
js
sub
mov
push
fld
sti
gs
addr16
mov
sbb
cmp
push
jns
aaa
jne
xlat
leave
mov
mov
xor
mul
movs
sti
jne
push
mov
enter
add
add
iret
pusha
in
test
push
push
mov
test
pop
adc
enter
dec
jecxz
mov
push
pop
push
inc
retf
mov
inc
add
jnp
sbb
add
pop
pop
jge
sbb
aaa
mov
cmp
les
xchg
aaa
add
jae
jb
xor
sar
hlt
scas
sub
fsqrt
inc
mov
inc
ror
inc
in
or
and
pop
(bad)
and
lea
adc
xor
movs
stos
enter
sub
jo
sub
popa
lock
pop
mov
idiv
or
rcl
popf
adc
and
loop
mov
push
sbb
ret
popa
fcom
je
jne
add
movs
pop
and
(bad)
mov
test
retf
test
xchg
loope
mov
aad
pop
mov
cmp
and
sbb
daa
sti
add
cmp
cwde
or
push
cs
lods
repz
retf
jae
ins
or
adc
repnz
adc
sbb
sbb
in
cmp
and
and
cmp
sub
sub
mov
push
out
std
sar
dec
and
or
add
pop
les
xor
mov
push
mov
hlt
push
clc
movs
icebp
push
cmps
jbe
ins
inc
addr16
call
icebp
jmp
dec
push
pop
addr16
js
and
mov
sub
jmp
pusha
xchg
popa
push
mov
push
add
adc
imul
adc
jl
cmp
lock
je
or
test
hlt
pusha
and
jmp
jo
cmps
test
inc
lods
pop
mov
(bad)
inc
push
mov
mov
rcr
test
(bad)
or
or
sub
mov
loop
or
rol
mov
or
adc
cmp
and
fstp
sub
jo
add
pop
sub
dec
int3
mov
test
nop
and
es
add
addr16
inc
cmp
xor
ret
push
shl
ret
sub
or
xor
rcr
outs
sub
jne
jae
push
or
mov
cdq
push
jno
add
iret
push
lea
sbb
test
dec
jl
push
push
jo
or
inc
lock
mov
mov
mov
mov
mov
cmp
cli
jno
add
or
fldenv
xchg
mov
and
das
add
adc
adc
lock
add
and
nop
daa
xchg
out
inc
sub
xlat
fisubr
(bad)
xchg
test
jg
popf
adc
or
sub
or
mov
adc
inc
lahf
inc
xor
push
cmp
dec
mov
dec
xchg
cmps
jmp
adc
jo
shl
cld
pop
mov
sar
adc
push
mov
adc
ret
dec
inc
out
mov
jne
jmp
aam
mov
test
adc
inc
dec
add
scas
or
mov
push
nop
xchg
dec
inc
js
ficomp
mov
int
and
mov
lods
fild
sbb
and
inc
add
(bad)
dec
mov
call
cmps
sub
xor
sbb
loopne
mov
pop
call
mov
mov
sub
rcr
or
iret
and
ds
or
cmp
popa
lds
pushf
cmc
in
xlat
out
icebp
mov
call
add
push
mov
sahf
xchg
or
push
mov
xchg
add
mov
and
sbb
outs
mov
mov
adc
dec
push
arpl
mov
and
arpl
xor
(bad)
xchg
push
rol
mov
adc
popa
out
jbe
or
stos
popa
sub
or
mov
mov
push
(bad)
retf
mov
add
fs
or
lock
xor
jp
adc
nop
adc
addr16
imul
or
dec
mov
nop
dec
mov
xchg
and
pushf
dec
sub
repnz
popa
cwde
test
movs
push
jae
pop
ror
xor
xor
cmp
inc
into
dec
gs
xor
push
aam
mov
call
adc
sbb
jno
jmp
std
sbb
inc
jecxz
mov
mov
push
ret
xchg
xchg
adc
push
sub
shl
fs
pop
aam
lock
jno
and
mov
add
xchg
jle
cdq
inc
xchg
cmp
jb
inc
push
xor
inc
push
and
mov
sub
das
in
inc
xchg
popa
in
mov
mov
sub
ret
mov
into
push
and
js
stos
xor
loopne
xor
push
ja
add
mov
sbb
or
adc
sub
jne
ret
dec
int3
test
sbb
mov
repnz
and
add
mov
test
pusha
(bad)
mov
ins
ret
js
loopne
ror
xchg
cmp
or
ret
push
jne
jnp
push
add
dec
fsub
add
xor
in
bnd
dec
ss
or
jo
jo
and
ds
mov
lds
add
jb
sbb
lock
adc
outs
and
sub
xchg
fucomip
dec
jle
add
fidiv
sbb
pop
mov
and
sub
mov
in
push
int
dec
dec
shl
or
push
add
icebp
je
inc
ja
jecxz
inc
or
(bad)
xor
sbb
pop
sub
add
test
inc
cli
and
and
mov
in
push
dec
cmp
push
xor
inc
ret
outs
enter
aaa
push
enter
mov
out
adc
and
je
inc
and
jno
dec
rcl
xchg
add
cmps
popa
pop
xor
push
add
(bad)
mov
add
add
sahf
add
xchg
sub
arpl
jg
mov
and
inc
xchg
mov
mov
xor
scas
adc
inc
aas
inc
js
lock
je
loopne
(bad)
(bad)
inc
jb
mov
xor
pop
mov
lods
mov
and
mov
mov
dec
add
ret
sub
jns
inc
aam
jb
mov
pop
and
rol
or
bound
pushf
xchg
cmc
xor
pop
scas
mov
fidiv
scas
xchg
(bad)
les
(bad)
mov
in
cmp
je
ret
or
mov
push
push
mov
xor
mov
inc
and
sbb
adc
stos
mul
jmp
dec
or
lods
es
sub
clc
pop
lar
les
mov
jbe
sbb
push
cmp
xor
pusha
cmps
mov
cmps
into
gs
push
test
dec
aad
xor
cmp
mul
dec
pusha
jmp
ja
push
pop
adc
adc
mov
(bad)
sub
jo
div
mov
outs
mov
fidiv
add
pop
ficom
outs
add
mov
push
xor
xchg
jo
daa
(bad)
and
jmp
adc
(bad)
adc
and
xchg
or
pop
imul
push
outs
(bad)
xchg
popf
lahf
jb
inc
xor
jmp
test
es
test
(bad)
adc
add
pusha
fs
cmp
and
call
push
test
adc
enter
adc
fucomp
pop
xchg
mov
adc
jo
fisubr
or
jo
cmp
jb
int3
(bad)
lock
sbb
arpl
adc
cmp
sub
inc
pusha
hlt
add
add
push
leave
push
inc
cli
inc
pop
scas
add
sbb
xchg
lock
mov
and
add
mov
xchg
mov
bound
cmp
pop
add
dec
pop
outs
(bad)
popa
(bad)
inc
jbe
jge
mov
add
mov
ss
ins
pop
jne
sbb
mov
xchg
or
mov
or
fld
fstp
and
ret
(bad)
or
in
out
sbb
xor
les
push
(bad)
xchg
lea
dec
cwde
mov
ins
loopne
adc
popa
push
pop
pop
mov
aaa
pop
lahf
aam
push
aad
loopne
mov
ins
pusha
test
les
ss
jmp
add
ret
jo
pop
inc
push
ins
imul
push
arpl
adc
pop
sbb
fcomip
adc
fcomp
xor
into
add
ja
pop
scas
inc
cs
ret
jne
cmp
or
rol
fcom
or
adc
push
imul
inc
sbb
add
adc
mov
out
or
jne
push
leave
add
into
dec
pop
and
mov
cdq
ret
xchg
push
mov
sbb
jne
test
xchg
inc
sbb
pop
dec
xchg
cld
div
push
add
pop
or
je
pusha
or
je
push
pop
push
inc
hlt
sbb
adc
mov
inc
cmp
jbe
sub
push
daa
fistp
iret
inc
aam
jge
loope
or
adc
rol
push
and
mov
ds
push
lods
dec
movs
and
and
int3
xchg
mov
mov
std
movs
sub
mov
std
pusha
or
imul
lods
xchg
cmps
push
mov
in
push
retf
ins
adc
mov
adc
add
sahf
add
adc
dec
lock
es
xchg
xchg
call
call
sbb
ja
pushf
mov
test
xchg
push
sub
lods
cmp
xchg
push
dec
adc
rol
movs
pusha
clc
int3
sub
mov
adc
test
push
fild
dec
pop
int3
cmps
add
fs
xchg
sub
cmp
sbb
or
imul
imul
test
test
sbb
das
push
inc
mulps
pop
mov
pop
icebp
push
add
dec
xchg
pop
hlt
daa
pop
sub
dec
fld
add
mov
das
aaa
push
inc
cmp
ficomp
sti
xchg
xchg
mov
inc
pushf
push
dec
xor
or
int3
inc
jmp
push
adc
pop
dec
lea
shl
dec
dec
pop
sub
push
cmp
(bad)
jp
or
jmp
(bad)
sbb
push
add
jno
mov
adc
movs
sahf
add
xchg
mov
je
dec
jmp
pusha
into
in
mov
push
ins
jns
lods
jo
daa
out
mov
xchg
mov
cmps
add
clc
or
pop
imul
mov
ret
in
xlat
and
loope
shr
ror
outs
pusha
inc
add
jns
loop
pop
nop
lock
add
outs
outs
dec
adc
or
mov
gs
or
push
jmp
sbb
pop
add
push
inc
push
leave
push
inc
mov
mov
push
fmul
or
por
ins
push
test
add
mov
sti
fist
and
mov
js
push
(bad)
call
jbe
pop
adc
sbb
sub
imul
mov
je
jnp
cs
jbe
dec
xchg
push
sahf
int3
pop
fs
xchg
loop
popf
mov
pop
dec
add
push
inc
inc
call
sbb
xor
es
push
ins
punpcklbw
dec
shl
mov
inc
jp
jp
add
adc
jbe
push
push
ds
nop
ror
pop
gs
lea
outs
mov
loopne
aas
scas
ret
inc
add
ficom
jne
mul
inc
push
retf
or
push
enter
cmc
and
and
jne
jno
loope
sub
jl
iret
xor
or
inc
mul
js
sub
mov
inc
xchg
and
pop
sbb
mov
mov
test
jle
enter
hlt
(bad)
pop
inc
inc
push
data16
cmp
adc
inc
shl
daa
push
stos
push
rol
push
pop
(bad)
daa
ret
add
lea
jb
lahf
mov
sub
repz
loopne
push
add
push
pop
mov
aam
lock
js
xor
inc
adc
unpcklps
movs
dec
add
aas
test
xor
dec
jnp
xor
cmp
xor
lock
push
inc
bound
retf
cmp
shl
and
or
push
push
or
or
xchg
sub
sti
or
frstor
fwait
push
dec
loopne
ror
pop
ret
clc
dec
fiadd
adc
daa
fidivr
add
fisttp
mov
adc
jmp
mov
mov
dec
sbb
add
mov
cmc
or
push
mov
add
dec
jne
adc
xchg
or
or
push
sub
add
mov
or
adc
add
jo
adc
pop
fld
and
cmp
inc
ror
mov
sbb
adc
xchg
adc
clc
es
sub
jne
popa
pop
fimul
test
hlt
and
lock
scas
fimul
inc
retf
xor
(bad)
(bad)
or
fdivr
cli
les
xor
or
add
imul
shl
xor
dec
jne
add
xor
imul
push
sbb
movs
jnp
mov
daa
and
clc
loope
xor
repz
push
adc
in
jmp
jne
jge
or
xlat
mov
jno
pop
mov
add
or
(bad)
shr
or
outs
cmp
dec
mov
outs
dec
xor
pop
mov
jbe
cmc
mov
push
nop
add
mov
test
pop
ror
inc
fdivr
and
test
mov
jmp
lods
cmp
add
push
add
imul
cld
cmp
ret
into
jle
sub
rcl
(bad)
adc
jno
cmp
mov
lds
jmp
mov
pop
mov
(bad)
push
loope
fisub
pop
icebp
es
xchg
xor
add
fild
sub
sub
test
loopne
sub
or
push
out
push
add
dec
or
call
cdq
adc
aam
lea
mov
pop
mov
sub
and
adc
inc
mov
adc
push
mov
sbb
sbb
cwde
add
sbb
xlat
dec
mov
xchg
fadd
sub
test
pop
or
in
dec
sbb
jl
repnz
cmp
mov
cmps
add
push
mov
ds
xor
(bad)
stc
add
xchg
jl
cmc
push
cmp
in
push
cmp
and
js
cmp
dec
xor
xlat
sahf
inc
imul
dec
in
mov
or
add
outs
jmp
adc
push
mov
jmp
cmp
and
in
sbb
mov
das
int3
push
pop
adc
gs
add
add
ret
push
add
jb
mov
cmps
test
mov
(bad)
loope
dec
dec
pop
mov
or
adc
cmps
lea
xchg
sbb
mov
rcr
cmps
sbb
adc
test
pusha
push
pop
test
lock
les
push
fs
adc
jmp
fisttp
cmp
ja
adc
dec
inc
lea
rcl
or
cmp
es
push
inc
adc
movs
jne
pop
lods
popf
jno
call
mov
jns
mov
xor
xchg
ja
in
scas
pop
rcl
fdivr
movs
fsub
xchg
pop
and
nop
add
lock
loopne
mov
movs
pop
add
rol
in
cmp
add
push
dec
push
pop
pop
push
movs
lds
mov
pusha
add
or
pop
and
xchg
jne
ins
and
cmp
jl
jmp
add
xor
cs
pop
push
push
imul
dec
jl
xchg
imul
sub
ja
xor
(bad)
sub
aad
jp
push
push
jae
xor
mov
xlat
mov
sub
push
pop
ret
sbb
es
clc
hlt
push
push
and
mov
adc
scas
push
push
clc
arpl
or
mov
(bad)
adc
or
(bad)
and
dec
dec
mov
adc
sbb
push
or
inc
jl
and
pop
lock
sub
daa
adc
xchg
pop
pop
scas
xchg
and
cmp
sbb
add
call
mov
(bad)
and
xor
inc
lods
aam
cmp
mov
pop
jl
mov
or
dec
ror
shl
push
fst
data16
adc
shr
adc
or
je
sub
xor
add
test
adc
inc
fdiv
sbb
adc
and
and
in
lock
adc
fcom
je
inc
push
sahf
mov
nop
ja
jmp
and
dec
adc
je
or
jne
and
stos
add
into
sahf
movs
lods
adc
sub
or
sub
inc
popf
xor
mov
ret
movs
jns
ror
stos
je
pop
test
push
rol
add
and
dec
dec
pop
pop
and
dec
mov
or
sbb
test
xor
not
mov
mov
and
mov
add
icebp
inc
dec
setg
inc
push
mov
mov
not
mov
jo
mov
sbb
jmp
xor
aam
outs
mov
cld
mov
push
mov
jbe
jge
push
cmc
adc
jne
rcr
add
gs
je
mov
fidivr
fmul
rcl
movs
or
loop
std
js
movs
inc
in
das
sti
or
in
adc
lods
pop
cmps
test
pop
je
dec
xchg
lods
pop
push
jb
jne
inc
sub
xchg
cmp
mov
add
add
mov
jb
and
test
into
(bad)
pop
jb
mov
jbe
push
inc
mov
shl
push
or
add
push
test
push
(bad)
mov
and
xchg
push
adc
mov
fst
adc
push
cmp
xchg
inc
adc
cmp
cdq
ficomp
fcom
or
clc
(bad)
pop
mov
jmp
adc
pop
popf
jae
dec
push
cmp
or
popf
or
shl
and
sub
dec
cmp
mov
pop
cmp
xor
sbb
mov
adc
push
sub
leave
sub
push
xor
jbe
adc
cmp
or
or
push
push
xchg
jecxz
xor
push
push
and
xchg
ret
push
pushf
pop
pop
stos
aas
adc
mov
cli
sub
push
add
mov
call
pop
int3
rol
in
sbb
test
imul
inc
mov
pop
add
xor
push
sbb
and
mov
call
ret
and
sti
adc
fidiv
int
mov
push
movs
fs
push
rcl
push
mov
inc
in
lods
add
or
sub
cmp
jno
je
cmp
aad
inc
call
cld
lods
dec
arpl
enter
imul
test
push
(bad)
push
lods
scas
jecxz
stos
lods
jb
rol
add
retf
jo
inc
cmp
add
xchg
int3
mov
(bad)
lock
inc
aam
and
movs
es
xchg
les
or
cmp
add
in
loopne
pop
or
sbb
jne
or
inc
(bad)
hlt
and
and
sub
jne
imul
scas
movs
add
adc
mov
mov
sub
inc
sbb
mov
add
or
push
push
fs
add
push
add
cmps
add
mov
sbb
mov
ins
add
sbb
bswap
nop
sbb
push
dec
xor
pusha
loopne
cmps
push
mov
add
rol
(bad)
aam
les
ss
sbb
pop
faddp
push
cmp
sbb
and
sub
jg
or
push
sbb
fldenv
xchg
dec
dec
and
push
cdq
jp
mov
sbb
pop
add
xor
or
add
in
xor
and
jo
mov
test
nop
imul
shl
or
mov
outs
sahf
pusha
test
ret
movs
fmul
(bad)
dec
outs
loope
cmp
add
xchg
pusha
pusha
inc
iret
xor
push
fsubp
push
sbb
mov
mov
cmp
xchg
pop
add
adc
and
add
inc
std
lods
ret
rcr
cs
sub
or
mov
xor
rol
gs
cmp
mov
mov
add
or
xchg
and
push
in
mov
inc
rep
mov
outs
push
fwait
inc
lea
dec
xchg
ja
jmp
push
pop
xchg
mov
test
dec
adc
lahf
mov
or
add
xchg
adc
sub
and
push
ins
ins
xchg
xchg
inc
je
int3
cli
inc
sub
inc
cmp
lock
pop
push
or
mul
cmp
das
or
enter
or
add
pushf
mov
sub
pop
inc
add
mov
imul
into
lods
push
rcr
mov
cwde
inc
inc
mov
push
test
jmp
lods
std
push
adc
mov
cmp
mov
sbb
jg
das
push
or
mov
add
mov
adc
lock
fs
call
or
syscall
(bad)
dec
call
mov
(bad)
popf
inc
and
add
cld
ds
test
inc
mov
cs
cmp
cs
mov
call
adc
movs
dec
leave
ins
jo
call
lods
xor
push
pop
sub
leave
aaa
aas
in
in
in
(bad)
pop
xchg
pop
test
sti
cs
pop
movs
enter
fidivr
adc
mov
mov
test
adc
imul
ins
mov
lods
lea
in
mov
adc
ins
push
dec
mov
addr16
jge
ins
fnstenv
fcom
leave
xchg
mov
shl
cmp
jno
nop
out
sub
inc
pop
aas
nop
fnstenv
adc
pop
js
movs
repz
sub
je
mov
mov
or
pop
ds
fmul
fcom
in
jmp
shl
mov
mov
jmp
aas
nop
and
enter
jg
adc
pop
xchg
out
je
dec
push
ins
inc
adc
add
mov
cmp
pop
jo
sub
out
int3
test
in
xor
mov
jp
cmps
shl
call
adc
lods
test
fwait
lock
lahf
inc
pop
aas
fdivr
pop
enter
mov
cmp
aam
pop
cwde
pushf
dec
xor
pop
add
adc
sub
cwde
sbb
pop
loopne
ss
fadd
fsubr
mov
mov
lods
movs
inc
sub
int3
dec
outs
(bad)
dec
mov
push
and
ins
cmp
xor
call
add
call
xor
sbb
push
in
cmps
aas
or
cwde
inc
push
sub
push
fistp
xchg
mov
adc
pop
pop
cmp
popa
fbld
pop
mov
sbb
ret
xchg
fmul
pop
fist
lahf
fcomp
paddq
es
inc
js
sahf
add
cmp
dec
pop
mov
enter
(bad)
popf
pushf
mov
scas
test
out
mov
movs
pmaxsw
cwde
pop
nop
cmovbe
adc
js
dec
jle
sar
in
add
ins
mov
inc
pushf
inc
arpl
iret
enter
pop
push
pop
out
(bad)
cmp
or
rol
cmp
push
sbb
call
jmp
cld
push
jb
outs
cmp
pop
sbb
fdiv
cwde
and
fmul
dec
pop
stos
add
in
sbb
nop
add
push
pop
sbb
cmp
test
cmp
sub
rol
push
rcr
pusha
sbb
outs
or
sbb
sbb
nop
sbb
enter
add
add
sti
and
add
jbe
mov
sbb
stc
or
push
les
and
(bad)
jmp
jo
cmp
in
jp
aas
in
in
push
in
push
in
in
in
inc
push
in
in
in
in
push
in
in
in
push
in
push
in
in
in
inc
push
in
in
in
in
push
in
in
in
push
in
push
in
in
in
inc
push
in
in
in
in
push
in
in
in
push
in
push
in
in
in
inc
push
in
in
in
(bad)
leave
mov
in
sbb
jl
and
add
sti
jle
ret
movs
enter
addr16
xor
dec
pop
ror
iret
push
and
fistp
adc
loope
xor
outs
push
pusha
jae
push
lea
aas
leave
ins
mov
lahf
movs
aas
loopne
es
pop
or
adc
(bad)
sbb
jg
imul
mov
adc
lds
cwde
cld
mov
pop
add
fiadd
fwait
(bad)
adc
inc
jge
(bad)
push
sub
pusha
sbb
mov
pop
adc
sar
push
mov
cdq
pop
or
pusha
push
pusha
scas
sbb
pop
sub
add
lahf
nop
inc
(bad)
stos
pusha
mov
xor
mov
bound
cs
lahf
pop
pop
xlat
push
sub
icebp
aam
push
xor
sbb
push
push
xchg
push
shr
or
imul
mov
ins
mov
lea
push
xor
out
mov
adc
lds
jns
pop
sub
xchg
xchg
jbe
push
mov
pusha
ins
(bad)
daa
push
push
shr
in
mov
and
mov
xor
mov
mov
bound
sub
ins
adc
sub
mov
cmps
ror
(bad)
or
movs
push
pushf
dec
push
data16
sbb
jo
inc
out
sub
adc
push
aas
into
in
add
or
jnp
arpl
mov
pop
push
inc
ret
add
sbb
je
test
in
js
aad
cwde
loop
popa
cmp
lods
jmp
inc
add
sub
push
mov
jo
mov
add
les
jbe
adc
jo
jno
pop
mov
not
jae
add
cmp
jo
fiadd
jno
mov
push
nop
pop
pop
mov
mov
icebp
lods
ins
popa
ins
xor
mov
lahf
hlt
inc
push
or
adc
jbe
and
and
clc
add
jns
inc
pop
inc
jb
inc
ins
push
aad
or
mov
fwait
adc
pop
loopne
fbstp
or
add
ss
mov
pmaxub
push
ins
adc
mov
sbb
enter
fmul
les
mov
inc
jg
je
adc
movs
in
pusha
aas
add
fdiv
inc
pop
movs
cmp
mov
sbb
sar
pop
enter
nop
jne
add
rcr
and
std
mov
pusha
rcr
jbe
aas
add
test
xchg
jl
push
dec
add
adc
push
sub
ja
shr
pop
jb
(bad)
js
aas
(bad)
mov
call
xchg
lods
pop
ret
adc
sub
inc
cmp
sub
aas
pusha
mov
mov
mov
mov
(bad)
cmp
js
js
inc
push
or
jns
aas
in
dec
enter
mov
stc
mov
inc
jmp
cwde
aas
lahf
sbb
push
adc
and
leave
and
pop
shl
sbb
in
or
inc
dec
sti
loope
adc
rol
cld
cmp
leave
mov
push
je
mov
in
xchg
dec
push
cmp
std
mov
fdivr
pop
sbb
scas
push
(bad)
sub
es
jbe
adc
loope
ins
adc
dec
sbb
dec
sbb
jne
pop
push
popa
pop
stos
xchg
fist
scas
add
sbb
add
push
add
les
inc
jle
fidiv
add
inc
push
fs
lock
fs
push
sub
push
inc
loopne
add
cmp
ror
add
xchg
aaa
rcr
sbb
(bad)
jb
test
shl
lea
inc
in
pop
fdiv
addr16
test
leave
hlt
adc
and
or
push
mov
ffreep
jl
sbb
in
push
sub
inc
mov
sub
cmp
jge
mov
popa
inc
pop
js
jg
leave
inc
cmp
bndldx
aas
mov
and
das
xchg
nop
mov
dec
dec
xor
sub
push
inc
iret
enter
std
push
or
or
push
(bad)
cmp
jo
mov
and
adc
xchg
xchg
mov
jecxz
sub
shr
xchg
outs
jnp
cdq
sub
adc
fs
or
leave
mov
adc
ret
and
adc
mov
push
iret
cwde
mov
(bad)
lahf
(bad)
jg
ror
pop
xor
pop
out
push
mov
xor
ins
cmp
adc
cwde
lahf
movs
out
enter
adc
mov
and
div
pop
fild
adc
mov
test
sbb
jmp
pop
adc
push
in
cmp
and
or
add
test
sbb
bound
pusha
in
xchg
and
lahf
mov
or
pop
mov
sbb
outs
fdivr
fisttp
xor
mov
scas
cwde
adc
mov
jmp
pop
sub
rol
pop
mov
dec
mov
out
in
les
sub
adc
pushf
adc
aas
ins
(bad)
std
xor
xor
outs
cmp
or
or
cwde
test
sar
mov
call
test
sbb
int3
xor
xchg
js
aam
or
call
shl
dec
rcl
xor
xchg
in
dec
mov
fsubr
adc
add
pop
pop
sbb
adc
sbb
aas
or
dec
jg
push
sub
xor
(bad)
sar
mov
push
add
sahf
sbb
mov
sbb
pusha
pop
dec
pop
push
imul
add
sbb
ds
sub
scas
les
jmp
xlat
add
ds
aas
shl
shr
and
jge
lahf
paddusb
and
pop
mov
not
dec
dec
in
jo
call
mov
nop
pop
mov
daa
cmp
pop
and
xchg
xchg
enter
mov
add
xor
ins
pop
aas
mov
sub
pop
in
adc
scas
push
mov
add
outs
iret
pop
sbb
ffree
jno
(bad)
mov
xchg
(bad)
out
mov
lock
outs
adc
mov
ins
fs
jo
cmp
fild
dec
and
mov
popf
shl
adc
pop
fucom
xchg
mov
add
push
sbb
or
sbb
dec
or
movs
iret
mov
or
pushf
das
mov
or
push
mov
jg
pop
lock
stos
mov
mov
or
mov
loopne
jne
lahf
mov
test
test
add
mov
mov
fucomip
mov
enter
or
mov
fistp
lock
xchg
pop
imul
mov
sbb
mov
pop
mov
fild
das
mov
lods
das
imul
xchg
lods
lahf
mov
pop
dec
jg
xchg
mov
pop
sub
pop
imul
adc
pop
add
fcomp
adc
ror
cmp
scas
mov
int3
sub
and
and
test
in
movs
std
das
mov
push
int3
mov
mov
mov
xor
aas
mov
rcr
mov
nop
and
scas
test
fistp
adc
in
xchg
sub
xor
dec
xchg
jg
test
inc
test
jo
sub
aam
push
and
test
xchg
clc
(bad)
sub
shl
sub
ss
loopne
sbb
inc
in
call
in
mov
and
pop
cwde
pop
rol
rcr
scas
loopne
mov
mov
dec
fdivr
inc
push
nop
mov
call
or
aas
push
sbb
add
lea
call
lods
das
out
add
in
mov
add
or
mov
jo
jnp
test
add
in
mov
les
aam
or
pop
mov
inc
mov
mov
mov
lahf
les
xor
inc
pushf
xor
mov
das
es
aad
add
push
push
pop
jb
xor
add
popf
ret
fmul
popf
push
cmp
cmp
ficomp
sub
mov
push
add
jo
clc
daa
sbb
fs
jo
and
push
dec
lahf
ja
jo
mov
shr
dec
leave
sub
mov
xor
pusha
mov
shr
mov
test
sahf
jg
test
mov
fucomip
(bad)
mov
(bad)
aaa
jbe
xor
das
mov
mul
pop
in
xor
mov
or
mov
jp
fdiv
or
pop
das
inc
pop
scas
inc
add
jg
scas
adc
lock
daa
dec
inc
nop
test
repz
sub
xor
movs
dec
scas
fs
inc
push
nop
jne
inc
xor
mov
mov
movs
or
cmps
jp
mov
xor
cmps
jo
call
(bad)
int3
mov
dec
adc
mov
jo
pop
pop
cmps
cmovo
and
cwde
push
rcl
cmps
outs
mov
xchg
test
dec
ret
add
adc
adc
mov
test
pop
ret
push
sub
cmps
mov
inc
test
ret
vpmacsdqh
inc
dec
or
in
in
loopne
pop
lahf
inc
bound
daa
out
inc
push
dec
xor
mov
jg
daa
loopne
jbe
push
xor
or
leave
aad
pop
daa
sub
cmps
adc
lods
fcom
leave
test
mov
fild
jg
fwait
fwait
cmp
jg
sub
pop
lock
xchg
lahf
test
daa
in
iret
cwde
inc
pop
dec
mov
xchg
cmp
ficomp
aaa
cmps
xlat
pop
or
cmp
mov
scas
daa
push
mov
scas
out
call
sub
lock
mov
cmp
jo
aaa
sar
shr
inc
sbb
inc
mov
mov
or
adc
adc
push
dec
xor
icebp
mov
sbb
push
mov
pusha
(bad)
dec
sub
jbe
or
mov
in
in
call
pop
test
test
rol
xchg
mov
push
sbb
pusha
push
pmaxub
nop
jg
ja
mov
rcl
xor
push
adc
mov
sub
not
mov
add
daa
lahf
mov
or
out
in
cmp
mov
nop
mov
mov
ins
push
adc
mov
loope
mov
rol
dec
mov
push
js
(bad)
js
pop
mov
daa
outs
daa
inc
cmp
mov
mov
add
mov
into
fdivr
or
dec
dec
es
imul
pop
lock
push
mov
js
clc
push
mov
xlat
stos
daa
add
test
fsubr
xlat
xor
es
mov
push
push
cmp
inc
sub
mov
out
sbb
js
mov
pusha
imul
aas
jg
out
addr16
in
out
or
xlat
mov
ss
aad
and
dec
pushf
adc
sub
sbb
loope
loopne
shl
cdq
sub
push
mov
js
xchg
dec
rol
xor
(bad)
dec
test
loopne
in
enter
push
jle
dec
adc
out
dec
sbb
pop
push
cmps
mov
iret
lock
xchg
adc
sub
rcl
stos
popf
in
and
js
lahf
inc
fidiv
clc
dec
pop
and
inc
pusha
sbb
das
add
loopne
adc
xchg
add
stc
cmp
std
movs
fmul
add
push
(bad)
push
call
out
jne
mov
cmps
push
mov
cmp
and
repz
mov
xchg
mov
out
cmp
test
and
jns
out
inc
pop
data16
out
sahf
out
mov
repz
fsubr
hlt
mov
idiv
cmp
or
fstp
push
(bad)
jns
out
mov
out
sahf
jo
push
inc
sub
out
mov
hlt
cmps
loopne
retf
cmp
jnp
call
xor
iret
repz
dec
cmp
pop
sbb
cmps
stc
xchg
adc
cld
fldlg2
fmulp
jns
out
mov
out
sahf
out
push
push
ds
out
sahf
xor
sbb
or
fcomp
rcr
ins
shl
cmp
fstp
jp
repz
push
push
sahf
out
ds
out
mov
jns
mov
pop
sar
ds
loopne
iret
repz
int3
shr
repz
fs
inc
xor
mov
add
out
push
fdivr
repz
mov
cmp
repz
ds
cmp
sub
push
add
ficomp
shl
lahf
out
push
cmp
int
repz
repz
data16
xchg
iret
repz
test
fsubr
cli
or
cmp
mov
cmp
out
ds
pusha
jle
rol
iret
sar
add
shl
rol
cmp
repz
xchg
jl
pop
repz
repz
inc
sbb
jns
out
iret
in
fadd
mov
out
sahf
mov
inc
jns
out
cmp
and
iret
out
iret
sahf
out
out
push
fadd
mov
mov
out
call
int
jns
add
xchg
adc
movs
add
mov
or
jns
out
sbb
or
fnstsw
adc
scas
cmp
(bad)
sub
iret
repz
inc
xlat
mov
push
outs
cmp
repz
cmps
mov
fdivr
iret
repz
cmp
(bad)
xchg
rol
mov
cmp
jbe
or
fidivr
lock
cmp
ror
mov
jns
jnp
mov
push
jp
out
sahf
out
inc
sub
or
repz
cld
aad
fmulp
ret
iret
repz
pushf
nop
jle
repz
repz
dec
cmp
or
jns
iret
add
aam
fcmove
sahf
out
sahf
mov
ins
jns
out
pop
push
inc
ss
xor
out
or
shr
fmul
repz
(bad)
mov
cmp
repz
push
ds
repz
(bad)
shl
out
sahf
out
rol
mov
sahf
out
sahf
cwde
mov
pusha
push
jns
out
inc
xor
adc
cmp
dec
repz
shl
jmp
ds
and
ds
cmp
repz
jp
call
loopne
or
push
out
sahf
out
xor
push
data16
out
sahf
js
sahf
scas
ret
fucom
jns
hlt
add
out
and
out
sahf
cmp
mov
test
into
fdivrp
lock
repz
and
inc
push
ja
jp
mov
jmp
push
sahf
out
sahf
into
mov
jno
out
bound
and
idiv
shl
retf
push
retf
(bad)
adc
jne
xchg
push
pusha
mov
dec
dec
add
idiv
cmp
gs
call
addr16
and
call
push
cmp
out
push
out
mov
sahf
dec
repz
mov
(bad)
gs
enter
ins
dec
jo
add
add
outs
mov
cmp
xchg
dec
sahf
adc
dec
cs
add
js
cmp
inc
setle
jns
(bad)
neg
push
in
in
out
out
neg
dec
(bad)
call
popa
fs
imul
add
or
pop
jg
sar
fs
jae
cmp
jb
jo
outs
xor
jb
neg
imul
aas
aaa
push
jb
je
sbb
ins
outs
in
stc
cmp
jl
mov
jo
cli
push
nop
repnz
aas
gs
aas
cmps
inc
or
mov
ds
jmp
sub
cld
inc
div
sti
daa
pusha
push
inc
lea
sahf
push
add
js
(bad)
dec
sub
pop
cdq
mov
or
pop
dec
ja
enter
pop
mov
inc
lods
rol
cmp
int
mov
fmul
dec
and
(bad)
clc
shr
in
add
add
dec
ds
leave
add
bound
xchg
pop
mov
inc
xchg
cld
dec
pop
leave
push
mov
jmp
nop
adc
data16
xor
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
ss
popa
data16
arpl
xor
xor
mov
retf
rol
(bad)
(bad)
(bad)
mov
push
aaa
mov
push
shl
inc
lock
es
sti
add
ds
aaa
inc
inc
xor
xor
ja
aam
inc
add
xor
inc
xor
pop
xor
cmp
enter
cmps
rol
mov
or
push
sahf
xor
cmp
ss
inc
inc
and
(bad)
in
xor
add
add
mov
in
rol
repnz
inc
xor
cmp
arpl
inc
xor
aam
inc
aaa
inc
xor
inc
xor
inc
scas
outs
mov
push
in
popa
(bad)
not
xor
sub
cmp
sub
inc
push
sub
out
js
cmp
inc
xor
call
out
xchg
pusha
gs
sar
(bad)
mov
inc
or
in
or
fcom
or
pop
add
cmp
add
push
(bad)
lods
imul
test
push
shr
clts
push
inc
nop
add
test
ja
cmp
dec
inc
rcl
es
ins
cdq
adc
sbb
lahf
inc
mov
outs
jecxz
call
pop
or
out
inc
or
ret
xor
or
adc
push
adc
push
pushf
or
sbb
push
inc
lds
shl
xor
dec
enter
push
push
adc
jge
adc
scas
test
or
lock
jnp
inc
mov
or
inc
inc
mov
in
les
pop
sub
adc
sub
inc
(bad)
aas
sub
mov
mov
outs
outs
ja
pop
rol
in
fmul
mov
inc
scas
jmp
lahf
pop
leave
rcr
ror
fcom
push
mov
or
and
add
ins
add
add
jmp
pop
jmp
mov
add
pop
xchg
ss
clc
pop
mov
mov
add
outs
jne
mov
jg
or
mov
add
arpl
js
xor
mov
cmps
dec
push
sbb
cli
or
cld
in
mov
xlat
jmp
jo
xchg
or
idiv
xchg
or
(bad)
test
inc
push
adc
gs
sbb
in
test
sub
add
or
adc
das
shl
outs
outs
lahf
cmp
and
icebp
out
sar
or
cmc
add
lock
inc
popa
jb
or
add
xor
pop
test
mov
rol
push
imul
adc
clc
add
ins
ins
push
imul
xchg
mov
lods
in
jbe
daa
clc
add
mov
movs
shr
xor
bound
ja
pop
or
mov
inc
push
xor
xchg
daa
in
cmps
and
in
scas
(bad)
mov
cs
or
jmp
and
daa
mov
imul
loopne
mov
repz
mov
push
rcl
push
(bad)
jmp
inc
daa
ret
je
cmp
das
fs
gs
outs
arpl
das
out
(bad)
(bad)
aas
inc
dec
cmp
imul
sbb
arpl
imul
out
mov
xor
aaa
cmp
popa
imul
add
ret
int3
loope
retf
idiv
dec
jmp
sti
xlat
(bad)
mov
mov
mov
enter
(bad)
and
ficom
inc
mov
mov
jae
imul
(bad)
je
aad
int3
stc
and
int3
adc
ret
mov
mov
cdq
std
cmp
fs
xor
int3
add
push
aaa
add
push
adc
ja
jo
jb
fdivrp
pop
shr
push
dec
push
das
ins
gs
bound
pusha
sbb
dec
jo
pop
jbe
ins
push
mov
in
movs
pop
pop
or
nop
lahf
jne
ret
mov
inc
mov
dec
push
pop
mov
int
mov
jae
jo
outs
pop
or
cld
addr16
ins
and
outs
outs
test
and
mov
(bad)
in
outs
and
inc
dec
push
and
fs
sti
test
popf
sar
and
and
ja
push
(bad)
fild
pop
aas
mov
ficom
pop
(bad)
push
and
mov
push
xlat
adc
add
pusha
add
in
jge
and
add
cmp
and
cmps
imul
data16
(bad)
ror
das
sbb
jnp
fisttp
data16
cmp
mov
prefetchwt1
(bad)
dec
cwde
inc
dec
les
jge
mov
dec
mov
and
mov
or
add
xchg
sub
pop
xor
mov
dec
sbb
data16
push
add
jecxz
push
cs
mov
popa
cmp
add
or
aad
add
adc
stos
shl
xor
mov
or
pop
into
push
mov
mov
jbe
cs
push
es
cmp
adc
mov
pop
call
xor
xchg
dec
fild
dec
and
sbb
xchg
add
iret
fs
(bad)
jg
sub
lds
add
jo
call
push
mov
(bad)
pop
dec
fnstenv
fbstp
rol
push
fs
push
xchg
inc
je
sbb
in
ja
cdq
out
popa
or
cmp
movs
int
imul
movntps
push
pop
in
(bad)
(bad)
(bad)
dec
pop
bound
mov
and
sub
jmp
scas
(bad)
mov
call
ret
push
adc
(bad)
(bad)
(bad)
dec
dec
cmc
add
or
inc
ins
dec
adc
cmp
mov
dec
sbb
fs
ins
jmp
pusha
sar
rcl
mov
cmp
mov
(bad)
(bad)
(bad)
(bad)
cmp
xor
adc
pop
shr
ret
and
pop
fucom
retf
jnp
and
cmps
xchg
dec
(bad)
(bad)
(bad)
(bad)
js
(bad)
jo
xchg
and
jb
(bad)
gs
add
mov
repz
js
jmp
(bad)
(bad)
(bad)
fidiv
xchg
dec
fisub
aam
jbe
pop
jno
adc
mov
hlt
out
mov
mov
jo
bound
(bad)
(bad)
jmp
fwait
add
out
lds
lods
jb
mov
dec
test
jae
rol
(bad)
(bad)
(bad)
inc
push
jne
and
xlat
rol
gs
dec
scas
add
lods
mov
(bad)
(bad)
jmp
mov
fadd
jno
add
repz
xchg
lds
inc
(bad)
(bad)
(bad)
jmp
pop
inc
inc
fucomp
pop
mov
shl
inc
push
xchg
pusha
popf
dec
jmp
push
pop
popf
jge
xor
jnp
add
dec
sbb
mov
jae
aam
repnz
(bad)
(bad)
jmp
xchg
sub
cmp
mov
mov
push
mov
pop
mov
mov
jmp
inc
cmp
or
scas
xor
push
mov
in
in
bound
enter
dec
out
xchg
push
xchg
add
fwait
cli
mov
inc
cmp
(bad)
(bad)
(bad)
jg
loopne
adc
xlat
sti
mov
xor
or
or
adc
fisub
movs
sbb
cdq
jle
sar
out
out
xchg
movs
adc
cwde
(bad)
dec
xor
aad
test
(bad)
(bad)
(bad)
push
inc
push
cs
cwde
cli
aas
sbb
das
test
iret
add
and
cmp
(bad)
(bad)
(bad)
inc
xchg
sbb
dec
sub
out
(bad)
adc
sub
lods
xor
xor
pop
(bad)
(bad)
(bad)
jmp
pop
sar
(bad)
lock
loopne
int3
cmp
and
inc
ja
pop
jge
(bad)
dec
mov
jae
fcom
mov
rcl
jl
push
or
dec
mov
(bad)
fucomip
cdq
xchg
dec
gs
aad
rcr
ins
fld
xchg
and
sub
push
xor
test
inc
inc
loopne
les
out
test
leave
sub
ja
jo
fcmovnu
xor
cld
pop
add
sbb
adc
(bad)
(bad)
dec
lock
and
scas
fldenv
or
adc
aas
push
mov
das
(bad)
(bad)
(bad)
jmp
mov
mov
fcomip
fwait
shl
call
call
int
mov
(bad)
(bad)
(bad)
dec
jno
ja
loopne
pusha
push
jnp
(bad)
dec
jmp
mov
dec
mov
(bad)
jmp
popa
pusha
pop
xor
xor
xchg
xchg
push
or
inc
(bad)
dec
bound
loope
or
push
dec
mov
pop
enter
sbb
out
adc
stos
cmps
pop
jmp
xchg
mov
mov
adc
adc
test
outs
in
iret
stc
inc
stc
inc
mov
fist
shl
(bad)
(bad)
(bad)
inc
(bad)
loop
aaa
test
test
dec
cmp
jecxz
mov
sbb
sub
adc
sbb
fcomip
jmp
mov
fild
pop
push
dec
add
inc
push
nop
fldcw
and
std
imul
pop
or
jmp
das
je
test
sahf
pop
mov
(bad)
push
sub
repnz
cld
aad
xchg
mov
pop
int3
pop
cld
imul
cs
(bad)
(bad)
call
push
jecxz
sub
int3
(bad)
mov
js
addr16
jae
rcr
adc
fcmovnb
pop
lock
test
mov
mov
mov
inc
(bad)
(bad)
(bad)
mov
popf
fdivr
mov
push
cmp
imul
test
inc
cmp
mov
and
fs
and
jbe
jle
adc
jns
and
jmp
sbb
jmp
test
(bad)
(bad)
(bad)
dec
imul
aad
adc
add
in
fiadd
lods
inc
push
sbb
pusha
push
mov
add
cmc
(bad)
(bad)
mov
dec
nop
sub
pop
sahf
dec
cmp
mov
mov
cmc
push
icebp
retf
inc
ja
enter
dec
(bad)
(bad)
jmp
(bad)
in
pusha
rcl
and
sub
xchg
xchg
(bad)
(bad)
(bad)
mov
mov
adc
dec
mov
faddp
icebp
and
(bad)
push
fistp
mov
(bad)
call
and
dec
outs
mov
mov
fisttp
cmp
(bad)
(bad)
(bad)
(bad)
out
scas
xor
movs
(bad)
mov
adc
add
outs
stc
fist
(bad)
and
xor
(bad)
(bad)
call
pop
ds
sub
call
sbb
repz
(bad)
xchg
mov
cdq
sub
(bad)
(bad)
(bad)
out
jbe
xchg
lods
mov
mov
psrad
push
push
imul
mov
(bad)
(bad)
(bad)
jmp
cwde
adc
ret
adc
inc
xchg
(bad)
and
arpl
cmp
add
or
pop
mov
adc
ficom
xchg
aam
push
ins
add
jae
fwait
outs
ror
out
cdq
(bad)
(bad)
(bad)
(bad)
js
fmulp
out
mov
xchg
xor
jnp
popa
jmp
(bad)
mov
scas
cmp
pop
xchg
(bad)
jmp
(bad)
or
das
lea
xchg
mov
or
(bad)
(bad)
jmp
fs
call
xor
shr
es
inc
call
(bad)
sub
adc
push
in
pop
lds
jae
mov
(bad)
(bad)
(bad)
push
sub
cld
add
imul
movs
and
imul
js
mov
(bad)
(bad)
(bad)
push
sub
shl
pop
hlt
cwde
cmc
arpl
inc
jecxz
fisub
nop
inc
mov
mov
(bad)
(bad)
(bad)
inc
pop
out
adc
call
popa
sbb
xchg
test
test
(bad)
fidiv
arpl
mov
outs
call
dec
jnp
repnz
int
mov
sar
(bad)
call
adc
jnp
lahf
fwait
iret
fimul
enter
in
ss
loop
pusha
ret
(bad)
jmp
add
popf
cwde
jo
repnz
mov
sar
mov
or
mov
xchg
cmp
test
or
xchg
stos
add
jmp
cwde
cdq
sahf
(bad)
(bad)
(bad)
call
xorps
in
push
lock
mov
mov
mov
aaa
std
call
xlat
pcmpeqb
in
or
adc
jns
shl
(bad)
jmp
sub
mov
mov
int3
adc
outs
ja
scas
mov
scas
(bad)
(bad)
(bad)
jg
xor
mov
pop
test
cmps
loope
pushf
mov
imul
out
push
movs
jg
(bad)
call
aam
mov
mov
fwait
pop
mov
pop
xor
fidivr
jp
add
add
dec
dec
xchg
add
mov
pop
aad
dec
hlt
(bad)
(bad)
jmp
clc
jg
test
call
lahf
pop
js
scas
add
sub
jmp
mov
push
out
dec
sub
ret
dec
das
inc
pop
out
ins
push
(bad)
(bad)
(bad)
push
retf
add
hlt
mov
dec
adc
out
in
push
mov
mov
aaa
iret
call
(bad)
jecxz
in
push
pause
pop
iret
adc
ret
lds
loope
je
(bad)
in
jmp
sub
mov
aas
in
fwait
in
jl
sbb
test
ret
(bad)
mov
mov
cs
retf
inc
in
test
or
dec
in
(bad)
jg
test
mov
scas
ja
pop
add
ins
pop
mov
fs
(bad)
(bad)
jmp
enter
xchg
pop
lods
pop
push
ss
xchg
mov
adc
dec
mov
aas
push
cli
jmp
loop
adc
jge
and
push
arpl
push
jmp
outs
adc
test
cmc
sar
jle
mov
pop
and
sub
cmp
sub
retf
mov
mov
fidiv
(bad)
mov
inc
retf
imul
inc
sbb
(bad)
daa
idiv
dec
icebp
loop
call
pop
lock
push
mov
mov
loope
gs
cld
(bad)
(bad)
in
or
mov
fucomip
mov
cmp
outs
adc
inc
cmp
add
adc
(bad)
(bad)
(bad)
cmp
mov
adc
or
imul
outs
jmp
mov
jge
movs
nop
xor
(bad)
dec
push
rcr
cmp
and
ret
pop
lods
jl
push
jae
push
aas
aaa
push
jo
loop
mov
(bad)
call
jb
mov
enter
pusha
lea
push
and
xchg
les
lds
call
(bad)
adc
addr16
dec
cwde
xor
inc
mov
jmp
rol
or
ss
push
(bad)
jmp
fxch
xchg
and
push
sbb
cs
lea
sbb
(bad)
(bad)
(bad)
call
jne
jmp
xor
imul
leave
jle
ss
and
cwde
dec
xchg
fs
pop
pop
stc
mov
(bad)
jg
lahf
xor
popf
pop
and
mov
mov
fild
cli
mov
mov
add
jmp
fdivr
add
or
cmps
sahf
mov
dec
xor
fwait
cld
scas
cli
(bad)
push
ror
dec
cli
push
mov
add
add
inc
sbb
imul
out
repnz
jmp
sbb
repnz
add
ja
(bad)
xchg
fcomp
(bad)
jmp
(bad)
mov
inc
repz
fstp
cld
(bad)
inc
or
sub
mov
shl
jb
xchg
mul
adc
inc
inc
jno
test
loopne
mov
nop
(bad)
aad
add
pop
xor
test
push
push
xor
aas
loope
(bad)
dec
jae
sbb
add
shl
outs
cli
jmp
jg
daa
xlat
cmp
mov
push
aas
xor
or
fcos
(bad)
(bad)
jmp
inc
xor
jmp
or
aaa
push
adc
mov
out
inc
inc
mov
test
sub
fcomp
movs
(bad)
fcomip
mov
or
cld
retf
call
paddq
xor
xor
(bad)
(bad)
(bad)
jmp
and
and
fs
xlat
stc
xchg
fs
adc
shld
mov
(bad)
jmp
dec
stos
jl
(bad)
xor
pop
ds
sub
xchg
cdq
(bad)
mov
inc
xor
mov
dec
in
in
out
push
mul
add
data16
xchg
cmp
jne
pop
add
inc
mov
call
mov
or
scas
sub
and
xchg
outs
mov
(bad)
(bad)
(bad)
inc
adc
ja
ins
ror
cmp
dec
mov
jg
jb
inc
mov
(bad)
(bad)
(bad)
dec
xchg
cmps
adc
inc
(bad)
xchg
jo
sbb
pop
mov
call
cli
sbb
int
popf
test
cmps
(bad)
(bad)
(bad)
call
cmps
jno
scas
ret
(bad)
push
cmp
xor
jno
cmp
(bad)
call
(bad)
(bad)
(bad)
jmp
pop
or
adc
jne
ins
push
ja
xor
mov
jo
sahf
(bad)
(bad)
(bad)
jmp
shl
mov
dec
in
mov
call
imul
fdivr
(bad)
(bad)
inc
or
sbb
pop
mov
and
jnp
xor
cs
fsub
push
inc
sub
add
xor
sar
(bad)
inc
xor
pop
add
(bad)
hlt
(bad)
adc
adc
jno
sub
xor
(bad)
(bad)
dec
ins
pop
cmp
iret
cmc
fidivr
in
ret
(bad)
cmp
mov
test
xor
cmc
inc
hlt
(bad)
(bad)
call
cmp
les
inc
mov
std
retf
adc
(bad)
(bad)
fcomip
icebp
aam
mov
or
cmp
mov
outs
or
mov
stos
ret
call
loopne
add
xor
inc
dec
mov
sub
imul
push
cmp
test
and
sub
mov
adc
mov
loopne
js
xchg
mov
(bad)
(bad)
(bad)
jmp
lock
cmp
pop
cmc
call
xchg
in
imul
imul
sub
xor
std
(bad)
jmp
retf
sti
cdq
mov
shr
mov
int
lahf
(bad)
popf
ret
(bad)
(bad)
(bad)
mov
out
iret
outs
pop
rol
pop
sbb
jns
mov
in
not
cdq
xchg
mov
popa
(bad)
(bad)
cmp
sub
lods
aaa
retf
lea
je
jmp
jns
ret
loop
ss
cmp
inc
dec
xor
and
and
mov
mov
cmc
jo
in
(bad)
(bad)
(bad)
cmp
mov
(bad)
jmp
dec
xor
call
dec
push
push
sbb
cmp
ret
(bad)
shr
push
adc
inc
or
test
xor
mov
lahf
scas
xchg
jmp
mov
ins
and
jecxz
inc
repnz
(bad)
(bad)
(bad)
(bad)
call
sti
push
retf
mov
lock
xchg
mov
fld
(bad)
(bad)
inc
ucomiss
mov
and
leave
ins
cmps
push
mov
xchg
(bad)
(bad)
jmp
out
xchg
loop
mov
mov
push
sub
add
push
sub
imul
mov
fwait
inc
push
aas
retf
xchg
mov
xlat
jge
shl
dec
lea
(bad)
(bad)
call
fs
test
jbe
mov
and
mov
jmp
xchg
inc
inc
jne
fist
or
or
jp
pextrw
cmovge
mov
xor
in
jmp
mov
sub
stos
inc
xor
or
cli
ins
xchg
mov
jmp
jp
inc
cdq
dec
mov
sbb
call
pop
push
and
jo
lahf
ss
hlt
inc
fld
(bad)
(bad)
call
data16
xor
(bad)
in
inc
push
sbb
lods
cmp
mov
cs
cmps
(bad)
jnp
(bad)
(bad)
(bad)
call
data16
sahf
je
mov
sbb
pop
lods
add
mov
popf
xchg
xor
popf
dec
xor
iret
bnd
(bad)
call
shl
nop
gs
sub
leave
fcom
aas
fcmovne
mov
(bad)
fist
(bad)
(bad)
call
inc
push
cmp
and
inc
pop
dec
and
cmp
stos
push
mov
adc
hlt
retf
(bad)
(bad)
push
xchg
in
out
jno
das
imul
jns
fst
push
jmp
scas
cwde
add
mov
add
pushf
xor
add
test
push
and
(bad)
(bad)
(bad)
inc
aam
dec
pop
cmp
int
pushf
fnsave
fdivr
pusha
mov
xchg
ss
jecxz
(bad)
(bad)
push
xor
test
jmp
pop
jl
hlt
das
ds
div
out
mov
mov
(bad)
(bad)
(bad)
mov
dec
fsubr
test
es
fisub
scas
xchg
loop
mov
(bad)
dec
add
(bad)
cwde
sub
xchg
sbb
mov
cmp
(bad)
(bad)
(bad)
call
cmp
jnp
pop
jae
pop
sub
in
mov
loope
imul
outs
dec
ja
retf
(bad)
(bad)
(bad)
call
mov
xor
fidivr
pop
dec
xchg
inc
pop
shl
pop
repnz
int3
hlt
ins
xchg
mov
push
test
jbe
movs
jmp
xchg
pop
xor
jae
bound
inc
push
popf
lahf
inc
dec
mov
(bad)
(bad)
(bad)
(bad)
fisubr
je
aad
cmps
mov
imul
pop
das
aad
cwde
in
push
out
and
dec
inc
cmp
push
scas
cmps
cmp
xchg
inc
clc
outs
nop
popa
sub
inc
icebp
jecxz
ret
mov
dec
xor
(bad)
(bad)
call
adc
scas
dec
(bad)
mov
ret
adc
adc
test
mov
popf
outs
(bad)
(bad)
(bad)
dec
lods
pop
and
movs
ror
fwait
adc
fadd
enter
mov
(bad)
(bad)
(bad)
call
xchg
sar
(bad)
and
adc
in
outs
rol
cs
movs
cmp
call
fsub
push
inc
and
test
mov
push
call
loop
or
adc
(bad)
(bad)
(bad)
dec
jo
pop
pop
in
js
shl
add
xchg
pop
mov
jns
dec
and
(bad)
mov
jmp
adc
out
(bad)
cmp
jge
add
fs
(bad)
(bad)
inc
mov
push
sub
pop
jae
sbb
ss
daa
sbb
(bad)
(bad)
inc
cmp
xchg
pop
mov
scas
adc
ret
loope
fisttp
mov
sar
stc
pop
cmc
(bad)
(bad)
inc
js
mov
imul
mov
out
pop
repz
jmp
fidivr
movs
mov
(bad)
out
sub
(bad)
mov
(bad)
push
(bad)
jmp
ret
clc
lods
(bad)
jbe
int3
mov
lods
mov
(bad)
call
sub
sbb
inc
mov
stos
or
jmp
fwait
xchg
lods
cmps
std
dec
jge
xchg
add
pop
(bad)
(bad)
(bad)
push
cld
stos
test
outs
retf
mov
(bad)
imul
sar
fs
(bad)
(bad)
(bad)
call
(bad)
mov
es
xor
dec
mov
pop
pop
sti
(bad)
je
xchg
ins
cmc
in
add
mov
stos
push
adc
or
cmps
stc
loopne
push
mov
xor
imul
int
dec
push
xor
call
or
neg
inc
(bad)
(bad)
inc
icebp
xor
jl
pop
sub
stos
add
jg
inc
jmp
pop
test
(bad)
jmp
adc
clc
mov
xchg
inc
movs
jg
pop
addr16
add
xchg
inc
imul
(bad)
(bad)
(bad)
(bad)
fcom
xchg
fld
cdq
sub
or
cmp
mov
into
pushf
adc
jl
or
(bad)
(bad)
(bad)
call
hlt
iret
neg
cli
xor
xchg
sub
jns
shr
push
addr16
mov
jnp
add
(bad)
(bad)
out
cli
push
iret
daa
shl
mov
sub
cmc
inc
retf
out
and
cmps
(bad)
fcomip
call
and
cmp
inc
sub
xchg
in
je
out
inc
call
shl
jns
nop
mov
(bad)
push
lock
cmp
adc
cmp
push
mov
mov
shl
push
jno
push
(bad)
(bad)
(bad)
inc
cmp
stos
and
js
stc
cmp
vcvtps2pd
bound
inc
mov
inc
(bad)
(bad)
(bad)
(bad)
jmp
jnp
cmp
push
and
enter
mov
pop
add
fst
ja
(bad)
call
scas
dec
into
test
in
lods
sbb
ds
push
jb
iret
test
out
retf
jmp
sbb
outs
pop
xlat
adc
sbb
xchg
xor
(bad)
gs
(bad)
(bad)
dec
int
stos
ret
xor
and
addr16
cmps
or
icebp
pop
dec
lds
push
scas
dec
and
arpl
scas
(bad)
(bad)
jmp
inc
cmp
or
fdiv
jbe
pop
ss
add
xor
sub
(bad)
(bad)
jmp
(bad)
adc
nop
jb
popa
mov
sbb
mov
fimul
repz
(bad)
push
addr16
dec
pop
dec
out
addr16
ret
loope
dec
cmp
(bad)
(bad)
inc
sbb
or
or
lea
cli
sbb
imul
mul
clc
movs
(bad)
(bad)
(bad)
call
in
iret
mov
push
pusha
or
inc
popa
push
jecxz
jae
or
shl
push
ins
jecxz
jecxz
pushf
(bad)
(bad)
(bad)
call
jge
les
cmp
retf
dec
retf
jae
outs
cli
ja
in
cli
lods
sub
push
lock
loopne
(bad)
(bad)
push
fiadd
movs
out
pop
test
ins
popf
fs
xor
int3
mov
pop
mov
leave
adc
int3
jns
cmps
inc
dec
jl
fisttp
sub
pushf
cld
inc
pop
aam
(bad)
(bad)
fild
pop
jo
mov
fwait
xor
gs
out
push
(bad)
dec
ins
stos
je
(bad)
jmp
push
sub
pop
inc
inc
daa
mov
push
aad
jg
add
xor
es
sub
(bad)
(bad)
(bad)
call
imul
cs
arpl
call
xor
mov
mov
sub
or
cdq
push
setno
(bad)
(bad)
jmp
test
mov
outs
aas
push
or
push
xchg
adc
jle
push
push
loope
mov
and
or
mov
lods
psubb
xchg
push
mov
(bad)
(bad)
push
inc
mov
mov
jmp
push
scas
pop
cmp
into
pop
xor
in
and
(bad)
call
out
push
addr16
out
push
sub
jp
gs
xchg
stos
lea
(bad)
pop
pop
shl
inc
popf
mov
mov
xchg
pushf
inc
fstp
mov
cmp
xor
(bad)
(bad)
(bad)
call
sbb
push
retf
ds
test
push
jg
xlat
retf
mov
(bad)
(bad)
call
or
and
nop
ins
jmp
stc
mov
retf
ss
inc
cmp
push
push
sbb
faddp
fcomp
call
fidiv
clc
or
cmp
push
xchg
mov
sub
lods
cmp
js
retf
mov
call
clc
jecxz
call
jmp
out
popf
sbb
aad
jmp
pop
jnp
jns
mov
(bad)
(bad)
inc
jl
scas
xchg
xchg
clc
add
fcom
js
test
dec
add
mov
pop
jmp
dec
and
scas
inc
xchg
adc
push
out
cmp
lods
ins
popa
(bad)
jo
(bad)
(bad)
(bad)
(bad)
mov
xchg
pop
clc
cmp
ss
ror
loop
add
jmp
mov
push
add
(bad)
(bad)
(bad)
(bad)
jge
dec
dec
xor
arpl
out
test
push
retf
push
pop
add
push
dec
repz
add
adc
sti
jecxz
jge
ds
test
mov
xchg
mov
pop
inc
fstp
mov
call
pushf
pop
pop
retf
shl
inc
mov
loop
ja
repnz
xor
test
(bad)
mov
ret
call
arpl
outs
push
fsub
mov
(bad)
jmp
test
add
push
mov
enter
or
cdq
cmp
xchg
jle
xchg
(bad)
fldln2
xor
(bad)
(bad)
inc
mov
(bad)
or
lds
imul
ret
push
jae
mov
sub
stos
or
sbb
(bad)
(bad)
(bad)
(bad)
cmp
and
pop
hlt
push
mov
mov
sbb
(bad)
iret
in
mov
add
or
nop
loope
fisttp
(bad)
(bad)
push
xchg
cli
inc
pop
or
call
fxch
xor
test
aad
pushf
push
add
movs
sbb
add
in
inc
in
lods
fldenv
in
mov
pop
fdivp
or
xchg
sbb
mov
std
jnp
(bad)
(bad)
(bad)
mov
in
mov
(bad)
mov
mov
add
jle
mov
add
and
(bad)
inc
push
inc
stos
popa
push
adc
je
push
ret
out
xor
iret
(bad)
outs
ffree
in
test
inc
fisubr
mov
cld
sub
jp
xchg
fcom
jnp
sbb
in
(bad)
(bad)
(bad)
push
xchg
ret
and
in
adc
shr
push
fidiv
mov
int
dec
mov
inc
into
mov
mov
(bad)
retf
loop
pop
(bad)
(bad)
(bad)
jmp
ret
(bad)
popf
(bad)
loop
jmp
js
data16
gs
dec
cmps
push
cmp
inc
mov
loopne
inc
sub
xlat
cmp
or
in
push
(bad)
mov
cmp
cmovae
(bad)
(bad)
inc
jae
cwde
ret
xchg
imul
and
sahf
ds
sbb
shl
inc
aaa
rcl
(bad)
fcomip
(bad)
std
sti
clc
xchg
jle
movs
loopne
loop
sub
mov
fnstcw
scas
xchg
adc
add
nop
xor
add
or
and
stos
ins
imul
fcom
out
sbb
mov
ja
into
sbb
push
(bad)
call
adc
cmps
mov
ret
fiadd
jmp
leave
hlt
jl
mov
rol
and
ret
adc
(bad)
(bad)
(bad)
cmp
or
ret
jns
mov
push
push
sbb
inc
(bad)
leave
cmc
jo
test
ret
(bad)
(bad)
inc
or
loope
mov
cmp
stos
pop
xor
pop
lock
(bad)
(bad)
jg
jmp
arpl
imul
imul
mov
movs
inc
(bad)
push
mov
xchg
(bad)
(bad)
(bad)
call
jle
xor
fdivrp
cli
scas
jns
or
jp
push
xor
test
(bad)
call
lea
jns
clc
repz
jae
movhps
lahf
mov
dec
test
xchg
cmp
push
push
and
lods
push
adc
test
fdivr
(bad)
(bad)
jg
xlat
mov
std
leave
loop
scas
(bad)
fadd
hlt
cmps
dec
popa
inc
bound
and
paddw
push
arpl
mov
and
inc
sub
xchg
dec
xor
mov
mov
inc
pop
pusha
or
jg
push
outs
or
(bad)
(bad)
call
movs
fdivrp
aad
loope
jl
les
dec
inc
push
mov
lock
mov
mov
add
push
je
mov
adc
xor
cmp
xchg
and
jb
dec
test
jmp
(bad)
(bad)
(bad)
mov
dec
pushf
sub
mov
pop
jnp
jg
mov
sbb
mov
fwait
mov
sub
(bad)
jg
jg
push
lds
cmp
push
aad
ss
xchg
cli
add
cmc
and
stos
xchg
ror
retf
in
(bad)
(bad)
(bad)
call
mov
movs
popf
cmp
test
cmp
add
xchg
addr16
adc
jmp
(bad)
(bad)
(bad)
inc
dec
xor
adc
pop
je
jmp
mov
out
pushf
push
cld
data16
xlat
(bad)
jmp
adc
retf
dec
(bad)
xchg
sti
inc
enter
mov
pop
(bad)
(bad)
(bad)
call
out
dec
push
adc
cmp
fidiv
mov
pop
(bad)
xor
inc
or
(bad)
(bad)
dec
(bad)
lock
dec
das
add
push
xchg
dec
xchg
aas
pop
pop
jl
push
icebp
pop
add
pusha
nop
lock
(bad)
(bad)
(bad)
call
mov
push
je
mov
adc
icebp
mov
ins
pop
mov
je
mul
(bad)
cmp
cli
push
mov
sub
mov
out
aaa
ss
push
fsubr
and
and
sub
jle
inc
loope
(bad)
cmp
cs
shl
xchg
mov
fadd
pop
stc
retf
add
loope
dec
retf
sub
push
pop
shr
adc
call
cli
mov
add
stc
stos
int3
aad
pop
daa
cmp
lahf
jecxz
aaa
sbb
and
dec
add
(bad)
(bad)
(bad)
call
int3
pop
xchg
and
sbb
cmps
adc
dec
add
aad
popf
ins
adc
cmp
xor
fs
(bad)
(bad)
call
xor
push
je
push
sbb
xchg
push
mov
jg
popf
aam
pop
sub
cmp
(bad)
(bad)
jg
xor
clc
sbb
pop
fstp
push
lock
icebp
fidivr
xchg
outs
rcl
cwde
(bad)
(bad)
(bad)
jmp
add
xor
cli
jmp
call
xchg
in
xor
(bad)
(bad)
mov
daa
xchg
mov
iret
add
mov
(bad)
(bad)
dec
dec
imul
cli
mov
jo
div
mov
stos
mov
(bad)
jmp
(bad)
(bad)
pop
xchg
add
mov
outs
pop
rcr
and
or
jmp
xchg
les
jbe
push
das
cli
call
pop
cmp
(bad)
push
scas
fs
cmp
push
rol
or
add
sbb
pop
jnp
popf
jmp
(bad)
(bad)
jmp
nop
outs
pcmpeqd
out
sbb
push
mov
cmp
push
es
pusha
push
mov
call
xchg
es
test
lock
dec
dec
sbb
popa
nop
retf
mov
leave
out
jl
(bad)
call
xchg
jmp
ror
bound
add
mov
add
ja
pop
mul
sti
sbb
pop
retf
scas
aam
js
inc
int3
(bad)
(bad)
(bad)
inc
addr16
xchg
sub
mov
mov
aas
hlt
inc
and
std
std
xor
jecxz
cld
jae
(bad)
adc
xor
scas
call
(bad)
pop
jne
pop
and
daa
xchg
xor
pop
jns
(bad)
(bad)
lods
scas
(bad)
(bad)
(bad)
in
je
outs
cmp
sbb
mov
inc
arpl
mov
(bad)
(bad)
(bad)
inc
dec
inc
inc
es
enter
scas
cwde
inc
imul
(bad)
fs
pop
pop
mov
pop
xchg
rcl
test
hlt
shr
std
or
dec
(bad)
(bad)
(bad)
fild
test
or
jo
mov
call
cmp
inc
xchg
jne
and
sar
(bad)
(bad)
push
cli
rol
cmps
dec
adc
nop
push
jmp
push
mov
add
(bad)
jg
inc
les
jno
repz
sbb
add
outs
(bad)
fiadd
jae
mov
xor
mov
sub
mov
cmp
mov
(bad)
(bad)
(bad)
(bad)
jmp
sbb
rol
cmp
sbb
push
mov
dec
sub
and
(bad)
(bad)
(bad)
call
dec
inc
cmp
mov
xchg
(bad)
sti
dec
sbb
mov
das
and
adc
ja
and
(bad)
(bad)
(bad)
call
lods
shr
sti
push
std
pop
pop
fcomp
addr16
push
lea
(bad)
sar
mov
(bad)
(bad)
(bad)
sti
cmp
mov
pushf
inc
imul
ins
push
mov
add
jg
pop
fsub
js
hlt
call
sti
push
in
push
jns
inc
(bad)
(bad)
push
imul
fs
jne
ret
or
xchg
jge
fcomi
test
(bad)
dec
fwait
popf
pop
retf
in
inc
pop
mov
ins
jmp
sbb
std
or
jno
xchg
dec
jle
das
fs
or
(bad)
(bad)
(bad)
push
dec
inc
cli
cmp
hlt
mov
fld
or
and
pop
and
mov
je
(bad)
(bad)
(bad)
call
std
ret
fistp
sbb
dec
std
push
add
enter
jbe
xor
(bad)
push
sahf
xor
ins
add
pop
mov
in
mov
push
jo
mov
cmp
dec
mov
adc
pop
mov
sbb
dec
pop
or
(bad)
(bad)
call
fcmovbe
jae
xchg
out
sub
xchg
sub
or
test
pop
cmc
(bad)
call
mov
adc
mov
test
loope
cmp
fs
jmp
push
es
(bad)
(bad)
inc
add
xlat
and
mov
pusha
mov
lahf
mov
push
scas
nop
inc
std
vandnps
inc
rcl
mov
stc
imul
hlt
dec
cmps
das
push
add
xchg
(bad)
lahf
xor
call
or
sbb
push
jno
xchg
xchg
adc
and
fisub
cmp
and
shl
mov
or
sbb
js
push
mov
fdiv
jge
icebp
leave
mov
xchg
pop
dec
ret
sub
pop
icebp
inc
xchg
sbb
test
(bad)
mov
repz
jmp
mov
imul
into
add
push
ret
(bad)
imul
rol
xchg
shl
cmp
mov
sbb
into
and
addr16
(bad)
call
adc
adc
das
sub
sbb
scas
(bad)
push
sub
(bad)
call
jno
loop
push
pop
retf
jb
jmp
ret
cmp
aam
cmp
push
xchg
adc
(bad)
(bad)
mov
test
push
into
mov
int3
xchg
inc
lahf
jne
pop
fwait
xchg
ins
stos
es
(bad)
(bad)
(bad)
mov
xor
adc
mov
add
sbb
jg
xchg
and
(bad)
(bad)
jmp
mov
pop
retf
ins
mov
xchg
cmp
fild
add
jmp
(bad)
jmp
push
lahf
cdq
lods
and
and
repnz
add
aaa
xchg
mov
mov
clc
ins
xchg
jl
xchg
sar
stos
inc
popf
mov
shr
inc
xlat
push
and
(bad)
jg
sub
sbb
out
sbb
sub
mov
scas
in
xor
int3
mov
(bad)
jmp
pop
adc
dec
jae
mov
scas
jmp
call
mov
dec
sub
jno
aaa
xor
(bad)
inc
in
scas
inc
inc
test
(bad)
ds
dec
push
out
or
adc
(bad)
(bad)
call
sahf
movs
lods
test
(bad)
stc
dec
mov
pop
pusha
pop
mov
cmp
fdiv
(bad)
mov
inc
sbb
sahf
lock
ret
lock
xchg
pop
cmp
sar
(bad)
(bad)
jmp
pop
adc
inc
cld
test
adc
lods
push
mov
mov
mov
leave
xor
ins
ret
(bad)
(bad)
fcomip
pop
call
cmps
icebp
mov
mov
push
test
and
(bad)
(bad)
call
mov
call
enter
outs
and
stos
cs
(bad)
inc
retf
test
mov
aas
push
fild
shl
(bad)
cdq
or
or
(bad)
push
test
(bad)
(bad)
in
(bad)
mov
dec
sub
les
cmp
adc
imul
pushf
cld
movs
(bad)
hlt
stos
mov
(bad)
(bad)
call
(bad)
cmp
cmp
enter
aas
adc
mov
sub
lock
xadd
adc
mov
sahf
xor
int
aas
inc
mov
sti
and
push
repnz
mov
cld
rol
(bad)
(bad)
(bad)
jmp
call
or
test
inc
imul
ret
cmp
ret
les
sahf
ret
inc
dec
adc
call
call
lds
rcr
jne
add
shl
cld
fisttp
popf
movs
arpl
(bad)
(bad)
(bad)
inc
stos
push
fbld
cld
ins
rcl
dec
fld
mov
xlat
rcr
lock
inc
shl
xchg
movs
or
(bad)
(bad)
(bad)
(bad)
fld
or
ds
sti
int
scas
xchg
hlt
les
jl
call
and
(bad)
(bad)
(bad)
call
mov
popa
div
and
pop
leave
(bad)
neg
lods
pop
nop
push
mov
jmp
pop
adc
(bad)
(bad)
dec
fwait
adc
out
call
js
leave
cmp
mov
dec
inc
std
xchg
or
lods
inc
(bad)
pop
pusha
jecxz
sahf
bound
es
and
leave
mov
mov
and
(bad)
(bad)
jmp
mov
sub
sub
mov
inc
vpaddq
sub
(bad)
(bad)
(bad)
mov
jle
or
ret
ins
scas
out
jecxz
das
xor
cdq
add
scas
fldcw
or
sar
mov
mov
fistp
cmp
cmc
sub
sar
(bad)
(bad)
cld
mov
cdq
les
in
xor
mov
fs
add
mov
(bad)
(bad)
call
xor
mov
call
(bad)
(bad)
jbe
cmp
arpl
jmp
mov
ss
cs
repz
loop
mov
inc
pop
clc
cmp
mov
mov
add
dec
and
mov
gs
ss
(bad)
(bad)
(bad)
mov
cmp
loop
inc
or
cmp
loope
push
arpl
clc
(bad)
cmp
mov
jmp
std
call
(bad)
xchg
imul
(bad)
jnp
test
sbb
mov
(bad)
(bad)
mov
pop
iret
dec
mov
sub
test
outs
xchg
cmp
pop
or
(bad)
mov
and
rol
push
mov
mov
pop
push
inc
ret
or
lock
dec
push
(bad)
imul
retf
ret
cld
pop
retf
addr16
mov
push
ds
mov
cs
into
lea
retf
or
cmp
(bad)
(bad)
(bad)
call
ds
push
test
or
jmp
sub
xchg
jne
icebp
(bad)
(bad)
push
ret
push
cdq
nop
jge
inc
mov
leave
sub
add
lds
push
(bad)
retf
aas
xor
retf
pop
pop
(bad)
fimul
data16
call
xor
dec
repz
push
inc
stos
daa
ins
inc
test
es
ja
inc
test
lahf
jno
jns
jb
jg
or
cmp
and
sahf
aad
mov
(bad)
jmp
fisub
pop
in
das
fst
add
cld
push
std
(bad)
call
lods
mov
pop
and
test
ins
jnp
outs
es
jbe
sbb
mov
and
mov
fs
(bad)
dec
outs
and
nop
and
xor
mov
add
clc
(bad)
(bad)
(bad)
push
lea
mov
int3
jl
xlat
inc
mov
pop
movs
jnp
pop
mov
adc
push
mov
mov
xor
ins
jl
mov
outs
iret
pop
pop
push
out
mov
xor
test
cmp
pop
pop
int3
mov
stos
ret
call
pusha
imul
push
xchg
mov
jmp
in
mov
idiv
div
dec
adc
xchg
jle
mov
mov
arpl
inc
(bad)
(bad)
fcomip
pop
mov
inc
pop
ja
inc
or
mov
jecxz
adc
(bad)
(bad)
(bad)
push
shl
fwait
jle
adc
cmc
gs
pop
mov
pop
inc
outs
pop
mov
inc
adc
mov
or
(bad)
enter
int3
je
sbb
cli
(bad)
(bad)
call
int
adc
push
(bad)
hlt
outs
inc
lods
ins
mov
ret
push
xor
jo
xor
shr
push
imul
cmps
adc
and
retf
aaa
fmul
sar
loopne
(bad)
(bad)
(bad)
jmp
push
gs
xor
js
call
sbb
nop
test
mov
stc
aam
rcr
push
jmp
cwde
repnz
push
scas
sar
cdq
cmp
int3
push
in
retf
inc
sbb
cmps
movs
pop
out
fwait
(bad)
inc
fidivr
ffreep
retf
jbe
fmul
mov
ret
aas
add
(bad)
inc
stc
mov
mov
cmp
add
mov
or
pusha
sbb
inc
push
push
cdq
ja
int3
retf
imul
push
retf
fist
or
dec
inc
push
lock
(bad)
cmp
sub
(bad)
push
adc
icebp
or
jne
and
repz
stos
or
(bad)
(bad)
(bad)
call
inc
dec
ret
xor
stos
fstp
popf
out
aaa
jae
and
ret
sub
pusha
or
mov
add
(bad)
(bad)
(bad)
(bad)
jp
jmp
mov
shl
jmp
sahf
outs
cmps
sbb
mov
fld
(bad)
fcomip
mov
(bad)
test
adc
mov
call
fdivr
ret
(bad)
call
dec
lods
call
mov
rcr
mov
xchg
test
mov
(bad)
(bad)
call
sbb
xchg
xor
xor
and
pop
and
jne
mov
int3
inc
clc
(bad)
(bad)
(bad)
fsubr
add
mov
aam
and
xchg
sub
pop
movs
push
add
sti
jmp
fdiv
jp
bound
jnp
add
fsubp
(bad)
(bad)
(bad)
jg
addr16
inc
sbb
xchg
out
fist
xchg
fidivr
retf
sar
(bad)
(bad)
jg
das
arpl
ret
popa
mov
hlt
adc
pusha
imul
(bad)
call
jmp
aas
mov
push
iret
pop
sbb
pop
jge
mov
fidivr
mov
dec
mov
stc
sub
dec
ins
sub
es
(bad)
(bad)
push
shl
and
mov
(bad)
imul
add
outs
enter
dec
sbb
pop
sar
lock
inc
add
xchg
mov
jmp
stos
icebp
sbb
pop
ins
pop
cdq
sbb
sahf
test
(bad)
inc
icebp
sahf
data16
xchg
stos
mov
aas
jle
(bad)
pop
jns
jno
jae
mov
(bad)
push
adc
sbb
pop
fild
outs
(bad)
movs
or
inc
cdq
inc
js
mov
cdq
outs
mov
inc
add
leave
and
inc
(bad)
pop
xlat
inc
loop
push
cld
(bad)
jmp
adc
dec
mov
out
xchg
repnz
push
jne
cs
jbe
xchg
inc
ins
mov
(bad)
(bad)
(bad)
push
test
mov
call
out
sub
(bad)
push
clc
push
imul
sahf
ja
(bad)
inc
and
jae
and
fldcw
mov
data16
xchg
mov
(bad)
call
add
push
cmp
mov
cmp
fwait
sahf
or
les
ret
fwait
xlat
out
outs
clc
jmp
or
mov
mov
add
aam
and
imul
in
adc
adc
adc
(bad)
mov
pop
outs
xchg
mov
pop
shr
(bad)
(bad)
(bad)
push
lods
pop
xor
rol
lea
mov
sub
inc
scas
xchg
inc
and
inc
(bad)
hlt
(bad)
(bad)
jmp
mov
mov
jg
lds
jne
call
push
popa
adc
(bad)
push
(bad)
(bad)
(bad)
(bad)
cwde
stos
jae
mov
push
scas
jns
(bad)
push
aad
ss
add
adc
lods
sbb
(bad)
call
inc
mov
xor
mov
inc
call
outs
xlat
adc
aaa
pop
sub
mov
mov
push
pusha
or
dec
sahf
icebp
mov
(bad)
(bad)
(bad)
call
cmps
fldcw
out
jle
push
out
aad
mov
jge
mov
(bad)
(bad)
(bad)
call
jbe
shl
out
sbb
push
arpl
mov
movs
mov
clc
cmp
and
pop
std
and
dec
push
pop
stos
scas
push
aam
retf
aam
push
into
pusha
(bad)
(bad)
(bad)
push
mov
mov
das
lods
sti
outs
mov
and
adc
popf
sub
div
adc
popf
pop
lock
dec
cmp
mov
sub
mov
and
dec
jmp
ret
(bad)
(bad)
fst
jo
call
push
cli
(bad)
sub
(bad)
lds
(bad)
(bad)
mov
mov
call
cmp
xchg
ins
sbb
icebp
(bad)
(bad)
fcomip
or
in
test
jecxz
adc
add
hlt
sub
jns
arpl
(bad)
(bad)
dec
pop
xchg
popa
test
cmp
int3
xchg
retf
sar
jg
(bad)
(bad)
(bad)
(bad)
mov
mov
jle
add
xchg
es
pop
xor
jmp
pop
in
jno
retf
mov
shl
ret
fucom
mov
mov
jmp
in
in
inc
stos
fild
inc
pop
add
(bad)
jge
ins
mov
loop
xlat
sar
daa
rcr
(bad)
(bad)
call
mov
push
test
fmul
mov
int3
sub
xchg
aad
pop
fwait
sar
div
(bad)
(bad)
(bad)
call
sbb
call
xor
in
inc
lahf
call
fpatan
int3
sub
pusha
shr
xor
(bad)
(bad)
inc
sbb
sbb
dec
inc
jmp
ja
mov
or
inc
js
retf
mov
sbb
(bad)
(bad)
(bad)
call
push
jecxz
addr16
enter
mov
dec
jno
add
cmp
daa
cs
(bad)
(bad)
push
xchg
repnz
retf
stos
imul
frstor
cmp
inc
sub
xor
add
(bad)
call
imul
(bad)
ror
sar
fbld
fisttp
fwait
rcl
xor
mov
sbb
(bad)
(bad)
fcom
push
ja
xor
sbb
sub
rol
push
(bad)
(bad)
(bad)
jmp
ret
mov
pop
mov
loope
inc
dec
adc
lods
push
outs
(bad)
add
cmp
inc
mov
(bad)
(bad)
jmp
sbb
ins
jae
out
test
cmps
arpl
sub
ins
sub
loop
sbb
(bad)
push
cld
(bad)
mov
or
clc
xor
push
(bad)
mov
lods
(bad)
inc
std
xchg
imul
icebp
push
sub
std
js
(bad)
(bad)
out
inc
lea
fild
ja
add
sbb
aaa
inc
push
sti
inc
xchg
adc
call
xchg
clc
in
cwde
call
std
jae
pop
jge
adc
fwait
lea
stos
inc
stc
call
in
mov
lds
mov
repnz
aas
in
jnp
popf
jle
cmps
mov
adc
hlt
(bad)
call
add
xor
xor
imul
retf
add
call
(bad)
clc
rol
xchg
or
fidivr
test
or
test
movs
(bad)
(bad)
(bad)
inc
stc
mov
sub
jl
mov
retf
inc
fstp
fs
mov
(bad)
mov
(bad)
(bad)
call
sti
ret
dec
leave
and
out
cmp
xor
(bad)
(bad)
mov
fwait
inc
cs
sub
cmp
(bad)
or
cmp
into
bound
cld
(bad)
(bad)
jmp
xor
cmp
nop
jmp
pop
enter
movs
int3
inc
inc
in
sbb
inc
mov
or
or
or
pop
(bad)
jmp
inc
mov
nop
mov
(bad)
lods
inc
add
rol
or
(bad)
inc
pop
push
or
out
mov
and
test
xchg
ja
jns
shr
xchg
test
(bad)
(bad)
(bad)
dec
inc
dec
pop
sar
adc
sbb
stos
push
cmp
gs
rol
gs
mov
(bad)
push
or
in
das
mov
loop
cmps
xor
mov
bound
sbb
xor
(bad)
(bad)
(bad)
jmp
pop
xchg
test
adc
dec
xchg
jp
movs
pusha
sub
cmp
in
xchg
push
(bad)
(bad)
(bad)
push
and
jmp
fwait
mov
inc
loop
aaa
jo
rep
test
pop
cld
sbb
mov
lea
xor
cmp
(bad)
(bad)
fcomip
(bad)
xor
in
lahf
jle
repnz
repz
jge
loopne
and
aam
pop
sub
jg
inc
in
jecxz
out
(bad)
cli
mov
mov
pop
std
(bad)
(bad)
(bad)
jmp
jns
xchg
xchg
push
test
icebp
frstor
cmps
test
(bad)
mov
xchg
jg
push
xlat
rcl
stos
shl
(bad)
(bad)
dec
xlat
adc
test
not
movs
icebp
xchg
jp
sub
cmps
sub
mov
(bad)
mov
sahf
icebp
add
mov
jo
cmp
rol
cld
or
fnstcw
xor
add
(bad)
inc
inc
mov
sbb
xchg
into
and
std
xor
or
(bad)
call
xchg
push
push
sub
or
das
scas
fs
pop
hlt
mov
mov
(bad)
outs
fmulp
ficom
(bad)
(bad)
(bad)
inc
pop
inc
in
js
inc
xor
push
sub
aas
pop
mov
inc
stos
call
imul
xor
(bad)
jmp
jmp
adc
add
pushf
movs
xchg
fldcw
out
es
push
std
dec
stc
ins
and
pop
mov
loopne
mov
sti
pop
les
iret
repnz
(bad)
(bad)
(bad)
jmp
dec
push
jo
scas
sub
loopne
cwde
pop
dec
push
xor
ins
int
jmp
and
dec
cmp
(bad)
(bad)
dec
imul
imul
add
xchg
mov
or
dec
fwait
xlat
(bad)
(bad)
jmp
mov
pop
push
push
dec
inc
lods
adc
and
(bad)
in
adc
push
mov
dec
push
idiv
(bad)
(bad)
jg
push
addr16
sbb
xor
jae
ja
mov
jnp
int3
pop
push
pop
mov
(bad)
(bad)
(bad)
dec
mov
add
iret
fadd
mov
xchg
mov
sbb
mov
js
pop
cdq
push
pop
adc
stos
addr16
mov
xchg
ret
xor
sbb
sbb
or
in
cmp
jg
(bad)
jmp
in
(bad)
push
add
in
iret
loope
(bad)
fisttp
inc
add
add
inc
mov
adc
rcl
xor
in
cwde
mov
jmp
adc
jecxz
(bad)
(bad)
(bad)
jmp
push
fwait
movaps
cmp
imul
xchg
push
out
inc
jno
add
(bad)
(bad)
inc
jb
mov
mov
test
mov
cmps
cmps
lods
(bad)
sub
arpl
and
mov
(bad)
jecxz
cmp
fbstp
cmp
cmps
(bad)
inc
sub
mov
(bad)
loop
sbb
mov
ret
push
nop
stos
push
das
mov
mov
pop
adc
(bad)
(bad)
(bad)
mov
imul
xchg
imul
jbe
or
jno
call
dec
sar
das
sar
loope
loope
inc
push
push
ficom
(bad)
adc
(bad)
sbb
ss
call
(bad)
fcomp
xchg
(bad)
int
jo
movs
hlt
adc
xchg
inc
pop
iret
aas
pop
test
(bad)
push
jp
sbb
pop
xchg
and
push
daa
dec
shr
scas
stos
les
imul
int3
push
push
arpl
jecxz
shl
aad
push
add
movs
adc
xor
std
(bad)
(bad)
(bad)
cmp
push
pop
pop
and
jecxz
mov
in
push
sbb
das
sbb
adc
call
popf
inc
inc
inc
xchg
mov
xor
out
ins
or
lock
lods
aam
dec
sub
jbe
call
xchg
out
test
push
mov
mov
push
or
ret
sbb
inc
mov
test
std
mov
out
lods
mov
mov
xchg
idiv
pop
xor
aad
call
mov
inc
push
les
pushf
inc
addr16
push
pushf
scas
es
mov
jle
dec
cmc
es
cmp
pusha
outs
xchg
mov
cld
inc
movs
cwde
inc
(bad)
(bad)
cli
lea
rcl
icebp
retf
sub
mov
mov
pop
add
(bad)
(bad)
(bad)
fsubrp
lods
leave
sbb
jb
jo
jns
inc
xchg
mov
(bad)
sar
ja
jp
enter
(bad)
jmp
scas
dec
mov
aad
cmps
std
retf
push
shr
add
(bad)
(bad)
mov
sub
xchg
or
add
dec
jmp
jge
clc
jg
(bad)
cmp
pop
lock
mov
(bad)
adc
pop
cdq
repnz
ins
out
(bad)
(bad)
jmp
xchg
fs
sbb
xor
cmp
jb
cmp
or
jbe
add
(bad)
(bad)
cmp
ins
sahf
push
pop
xlat
ret
in
adc
repz
mov
push
cwde
(bad)
(bad)
(bad)
(bad)
sbb
mov
push
fwait
sub
mov
xor
jecxz
dec
(bad)
cmp
or
out
je
imul
add
push
mov
(bad)
(bad)
push
inc
outs
fadd
inc
sbb
pop
lock
clc
movs
pop
cwde
bound
pushf
stos
adc
setae
scas
(bad)
(bad)
(bad)
jmp
push
mov
jns
add
enter
test
or
sbb
(bad)
(bad)
(bad)
jge
daa
mov
in
or
pop
push
push
rcr
test
mov
test
jns
call
or
pop
adc
lods
inc
(bad)
sub
sbb
aam
repz
xor
pop
out
xchg
xchg
pop
retf
ret
xchg
stos
js
jp
mov
cmps
adc
jae
hlt
(bad)
jg
push
retf
div
mov
jg
addr16
sbb
ret
mov
push
jmp
dec
sar
mov
push
stc
mov
(bad)
fnstsw
sahf
(bad)
(bad)
(bad)
dec
arpl
scas
mov
cmp
and
daa
pop
mov
inc
out
pop
ja
xchg
xchg
scas
inc
cmc
mov
or
push
lods
arpl
sbb
sbb
and
fmulp
arpl
(bad)
dec
fmul
cmp
arpl
xor
lods
aas
into
and
ja
sbb
in
sti
jo
mov
call
xchg
cli
and
(bad)
mov
in
in
imul
repnz
xor
sub
adc
(bad)
(bad)
(bad)
mov
xor
inc
fs
push
icebp
xchg
arpl
rcr
xor
out
xor
(bad)
(bad)
(bad)
js
cmp
hlt
enter
xchg
call
inc
sar
mov
repnz
(bad)
(bad)
jmp
out
sub
icebp
and
div
sub
dec
nop
adc
mov
add
idiv
(bad)
fnstsw
std
xor
inc
adc
and
pop
dec
pop
in
mov
xchg
xlat
pop
mov
pop
out
popa
sbb
push
pushf
outs
mov
inc
sub
or
dec
(bad)
(bad)
stc
(bad)
mov
pusha
bnd
mov
not
adc
scas
or
popa
cdq
clc
aaa
std
mov
int
xchg
dec
pop
xor
std
jl
and
jp
aad
popa
pop
cld
jmp
push
mov
and
add
mov
mov
je
cs
mov
sbb
and
dec
adc
dec
call
out
jg
push
push
jmp
(bad)
(bad)
(bad)
jmp
sub
test
fcmovnbe
ins
adc
mov
gs
in
(bad)
popa
add
nop
icebp
in
xor
push
ret
push
add
das
pop
push
int
xchg
loopne
daa
adc
(bad)
(bad)
jmp
xor
push
cld
push
ret
push
es
sub
push
out
mov
les
retf
cmps
dec
jno
adc
mov
(bad)
sahf
ss
adc
icebp
(bad)
(bad)
inc
pusha
add
mov
adc
mov
cmp
xlat
scas
leave
sub
fmulp
ret
jmp
(bad)
(bad)
(bad)
fbld
adc
mov
popf
std
dec
mov
retf
mov
mov
test
xlat
or
fistp
(bad)
(bad)
(bad)
mov
cwde
xchg
adc
jnp
or
(bad)
and
pop
jae
pop
les
sub
and
fcmovu
fwait
jl
popa
sbb
mov
jne
or
adc
shl
loop
out
mul
adc
dec
aas
sbb
adc
dec
push
out
dec
sahf
xchg
push
cmps
xchg
xchg
outs
fcmovbe
das
sar
jnp
pop
retf
stc
xor
fimul
pushf
mov
sbb
repnz
stc
sbb
cwde
(bad)
dec
jno
das
mov
out
adc
mov
jo
cmps
mov
or
int3
push
mov
(bad)
jmp
mov
inc
mov
adc
add
xchg
sar
out
pop
mov
pusha
push
pop
outs
idiv
(bad)
jg
cmc
xor
test
test
lahf
nop
aad
inc
shl
mov
push
xor
(bad)
(bad)
in
sbb
loopne
(bad)
dec
inc
mov
mov
mov
outs
push
jbe
xor
(bad)
(bad)
(bad)
call
imul
cmp
sub
loope
xchg
retf
mov
fmul
mov
push
inc
jb
dec
push
das
out
xor
div
(bad)
(bad)
(bad)
mov
xchg
adc
movs
imul
addr16
enter
cmps
adc
pop
push
or
sub
(bad)
adc
jecxz
cmps
push
mov
jg
out
fs
(bad)
(bad)
jg
int3
fsub
stos
cli
int
jae
fsubr
cmp
fldcw
jnp
mov
aaa
mov
and
fs
idiv
add
pop
scas
pop
(bad)
(bad)
(bad)
(bad)
cld
pop
cdq
add
sahf
fcomp
div
aas
add
push
jno
fld
sbb
sbb
clc
cmps
imul
ror
pop
add
js
inc
ret
vrsqrtss
leave
inc
sub
fld
add
outs
inc
popa
xor
daa
or
and
(bad)
(bad)
(bad)
call
mov
aas
mov
retf
mov
mov
lahf
in
stc
lea
(bad)
(bad)
jae
ss
imul
jnp
cs
popa
stos
push
fucom
ja
sub
shl
xor
(bad)
(bad)
jg
iret
add
fsubr
sbb
inc
scas
int3
imul
or
aam
(bad)
(bad)
(bad)
mov
mov
cwde
add
cmp
rol
mov
pop
(bad)
das
xchg
pop
pop
mov
stos
sbb
retf
data16
xchg
addr16
(bad)
(bad)
(bad)
jp
out
ss
inc
and
pusha
jae
lahf
into
(bad)
xchg
jge
mov
out
ss
(bad)
(bad)
jmp
cmp
clc
jp
jns
jnp
push
cmc
jo
xchg
cmc
and
dec
test
(bad)
(bad)
(bad)
mov
sbb
lahf
or
xchg
jmp
cdq
dec
jecxz
loope
(bad)
jg
mov
repz
inc
lea
(bad)
jo
(bad)
(bad)
(bad)
call
xor
scas
inc
out
cmp
test
xor
movs
mov
fld
in
add
adc
(bad)
(bad)
dec
or
mov
shl
push
mov
pop
mov
lock
ja
mov
(bad)
jg
mov
adc
mov
std
sub
(bad)
mov
add
(bad)
(bad)
(bad)
dec
scas
push
jmp
dec
jmp
sub
outs
lock
push
fcmove
sub
(bad)
fcom
retf
(bad)
call
retf
sbb
pop
jne
int3
cli
ret
sub
lods
sub
rol
or
ret
outs
cli
sbb
pop
mov
outs
out
jb
mov
pop
cmps
mov
xchg
or
(bad)
(bad)
(bad)
out
add
and
push
add
jg
imul
and
das
nop
rep
(bad)
(bad)
call
stos
fmul
jmp
loop
add
mov
(bad)
(bad)
inc
movs
jae
daa
test
outs
mov
lods
xor
mov
mov
imul
add
pop
sbb
xor
add
xchg
test
js
cmps
lea
mov
shr
scas
shr
into
mov
xor
fwait
xchg
mov
in
pop
mov
inc
and
inc
imul
ja
adc
stos
(bad)
(bad)
(bad)
(bad)
in
xor
cmps
mov
std
push
pushf
cmp
xor
sbb
lock
xchg
je
and
fcos
(bad)
jg
jo
push
mov
inc
mov
ins
jbe
addr16
jecxz
jmp
into
jmp
(bad)
inc
adc
add
xor
lock
inc
sub
and
sub
mov
sti
dec
call
fcomp
aaa
or
lock
or
nop
ds
xchg
fsubr
or
mov
jp
js
(bad)
cld
(bad)
(bad)
(bad)
jmp
scas
mov
clc
push
call
inc
lea
inc
call
push
rcl
stos
(bad)
jmp
push
pop
or
jae
push
adc
xchg
mov
(bad)
(bad)
call
mov
jge
out
popa
es
fidiv
cmp
push
call
pop
imul
shl
hlt
test
xor
push
sub
shr
movs
push
(bad)
cmps
in
pop
xor
(bad)
dec
mov
das
xchg
shl
daa
popa
sub
jns
mov
mov
(bad)
push
int
cmp
adc
and
and
inc
cmp
(bad)
(bad)
pop
scas
rcl
stos
cld
fwait
add
cld
pop
shl
mov
jo
loopne
ret
dec
sub
push
cmc
pusha
loope
and
mov
xor
or
pop
(bad)
in
adc
push
jo
jbe
jmp
(bad)
xchg
jmp
mov
fistp
and
jns
stos
aad
scas
repnz
and
xlat
(bad)
(bad)
call
sbb
dec
aas
pop
aad
inc
lods
ss
or
clc
mov
gs
fimul
cs
ins
ja
and
inc
inc
mov
sub
(bad)
call
pop
les
jmp
xchg
inc
add
data16
mov
xchg
jg
(bad)
push
mov
or
shr
push
jno
mov
cmp
(bad)
mov
push
and
push
push
cmp
sub
push
cmps
push
lods
xor
mov
stos
mov
in
int
mov
les
das
sbb
(bad)
(bad)
jg
push
mov
ins
adc
pop
push
bound
fisttp
mov
out
jb
iret
pop
cmps
mov
(bad)
push
(bad)
(bad)
out
outs
fisttp
scas
mov
into
push
jb
mov
cs
lods
add
sbb
mov
push
mov
aam
push
jae
outs
fistp
or
(bad)
(bad)
mov
push
les
outs
ja
aaa
out
inc
cmp
mov
dec
mov
ja
dec
aas
adc
(bad)
push
and
pop
pop
loope
or
mov
(bad)
(bad)
jmp
bound
cmp
xchg
add
or
sub
inc
adc
push
pop
imul
(bad)
jmp
push
test
xchg
pop
pop
cwde
nop
call
popa
imul
sbb
cmc
push
jl
shr
call
aas
(bad)
dec
sbb
es
shr
xchg
dec
mov
(bad)
(bad)
(bad)
(bad)
dec
dec
icebp
sub
stos
push
cs
mov
adc
push
adc
jns
rcl
mov
pop
jg
(bad)
jmp
lds
sbb
jbe
stc
push
mov
cli
fdivp
jo
jmp
mov
pop
cmp
mov
sbb
imul
sub
je
dec
(bad)
(bad)
(bad)
jmp
test
or
aaa
add
push
push
jne
push
or
in
mov
push
cmp
data16
(bad)
(bad)
inc
test
mov
dec
xchg
mov
push
inc
out
xchg
mov
outs
jno
leave
add
test
lock
jp
retf
movs
cld
div
iret
push
lods
or
pop
pop
xchg
dec
pop
ss
xor
std
mov
div
rol
mov
push
pop
sub
test
(bad)
(bad)
(bad)
push
fadd
push
sbb
or
push
fsubp
jne
jl
(bad)
(bad)
xchg
mov
inc
xchg
cmp
push
mov
push
and
stos
lahf
push
inc
and
mov
movs
(bad)
pop
vxorps
(bad)
mov
dec
sti
mov
not
jmp
sbb
loop
mov
add
loopne
mov
mov
cmc
jb
mov
inc
mov
jmp
(bad)
fistp
xor
mov
popa
data16
mov
adc
jns
adc
pop
(bad)
(bad)
jmp
into
jle
mov
pop
repnz
mov
push
dec
shr
inc
or
(bad)
call
sub
iret
cld
mov
sub
mov
mov
test
(bad)
(bad)
(bad)
jmp
push
or
fsub
mov
pushw
pop
adc
add
stc
popf
es
repz
(bad)
(bad)
jmp
mov
pop
sub
call
mov
mov
mov
std
dec
dec
sbb
sub
xor
(bad)
(bad)
(bad)
push
retf
daa
lds
add
mov
or
mov
mov
lock
aam
add
sub
ret
mov
inc
mov
call
ret
mov
or
dec
pop
dec
and
icebp
(bad)
jmp
pusha
jp
movs
pop
push
loopne
fwait
mov
addr16
(bad)
(bad)
call
ret
pop
sbb
call
xor
xchg
lods
fs
inc
pop
and
push
add
or
pop
pop
neg
(bad)
push
ret
sbb
neg
mov
imul
in
js
cmp
loopne
push
(bad)
(bad)
(bad)
jmp
inc
movs
clc
fistp
push
mov
test
inc
pop
cld
fwait
loop
xor
in
xchg
(bad)
(bad)
(bad)
call
arpl
fidiv
xchg
pop
push
inc
pop
push
clc
jp
arpl
mov
dec
push
rol
call
fcmovb
popa
jo
and
popa
jmp
in
dec
aad
add
(bad)
mov
push
sbb
add
retf
sbb
mov
pop
and
fstp
sbb
dec
mov
sbb
fidivr
(bad)
jmp
mov
fcom
inc
repnz
mov
mov
sub
xchg
mov
sar
dec
in
les
lea
add
sbb
pop
out
sar
mov
daa
xchg
dec
(bad)
call
or
or
std
add
icebp
(bad)
(bad)
(bad)
jmp
add
or
in
dec
aad
es
dec
mov
adc
adc
icebp
fadd
(bad)
(bad)
jmp
es
clc
data16
outs
jb
(bad)
mov
(bad)
ror
loopne
push
cmp
(bad)
(bad)
jmp
add
xchg
test
jno
out
mov
push
fst
loop
add
mov
cmps
sbb
(bad)
call
adc
pop
popf
lods
les
adc
cld
and
jnp
out
sbb
(bad)
(bad)
inc
push
repz
push
mov
std
push
jmp
leave
ins
sbb
cbw
cmp
(bad)
(bad)
(bad)
push
mov
push
cmp
pop
stos
scas
test
jns
push
xchg
int
pop
cdq
bound
inc
xchg
dec
out
rcr
cli
xchg
loop
add
sub
or
scas
cli
sbb
pop
dec
(bad)
(bad)
(bad)
call
std
adc
clc
add
repnz
mov
jno
int
jecxz
inc
sub
mov
dec
rol
lock
push
pushf
jmp
cmp
push
cmp
es
(bad)
call
jmp
push
inc
cld
movs
test
sbb
inc
jecxz
mov
mov
sbb
mov
sub
hlt
ss
and
dec
cmp
(bad)
(bad)
jg
retf
(bad)
(bad)
int
push
jae
and
jbe
xlat
add
aas
aam
mov
cmp
sbb
(bad)
clc
push
out
in
outs
push
retf
inc
stos
push
cmp
loop
in
inc
xchg
(bad)
jg
pop
out
inc
and
in
inc
shl
and
int
and
mov
mov
cmp
in
popa
in
inc
(bad)
call
stos
add
pop
sbb
inc
xor
out
cmp
dec
(bad)
(bad)
call
ja
mov
sbb
mov
(bad)
bound
shl
popw
fwait
(bad)
inc
call
push
sbb
std
scas
push
js
imul
(bad)
(bad)
mov
and
iret
dec
out
test
sbb
retf
mov
push
(bad)
(bad)
jmp
cmp
popa
out
mov
das
push
loop
jnp
in
push
or
push
lods
fdiv
inc
or
in
or
mov
fadd
scas
clc
jmp
inc
icebp
and
adc
in
adc
push
cld
jmp
fwait
aaa
and
in
pop
push
sub
cwde
push
adc
scas
push
pop
sar
(bad)
(bad)
push
push
ins
or
movs
test
mov
sbb
cmps
je
(bad)
cmps
pop
sub
jmp
(bad)
std
std
paddsb
aaa
jmp
inc
out
pop
imul
dec
pop
scas
inc
sbb
out
mov
out
mov
dec
xchg
ffree
enter
mov
sub
(bad)
(bad)
call
push
mov
retf
dec
loope
int3
inc
scas
xlat
jmp
jecxz
das
mov
(bad)
call
fld
mov
arpl
mov
xchg
mov
pusha
ret
fidivr
dec
adc
(bad)
(bad)
(bad)
mov
jmp
(bad)
dec
xlat
pop
std
popa
lea
sub
push
inc
lods
xchg
mov
in
(bad)
call
loop
outs
test
xchg
enter
and
xor
adc
xor
dec
cmc
test
in
sbb
movs
pop
dec
iret
jmp
movs
popa
sti
xchg
push
jbe
dec
int3
push
dec
not
mov
lea
(bad)
(bad)
mov
inc
xor
out
enter
adc
dec
popf
xor
xor
jmp
push
int3
scas
mov
and
ror
jmp
jle
jp
inc
xor
adc
or
dec
retf
pop
aam
cmp
(bad)
popa
dec
add
inc
(bad)
(bad)
(bad)
inc
pop
fwait
mov
cld
push
repz
push
movs
daa
jns
jge
inc
imul
jmp
(bad)
bswap
ret
sub
mov
sti
adc
retf
leave
jo
es
xchg
(bad)
(bad)
(bad)
(bad)
in
mov
adc
sar
push
js
mov
retf
adc
cmps
mov
xchg
jecxz
bound
adc
(bad)
push
jmp
mov
add
setno
fnstsw
add
shr
test
cmc
aas
cmp
and
clc
push
test
(bad)
dec
je
push
cmp
lock
test
mov
xchg
fcmovbe
(bad)
mov
and
mov
pop
xchg
xchg
jbe
hlt
push
inc
or
(bad)
(bad)
jg
arpl
cmc
aad
pop
or
push
shr
sub
js
inc
test
retf
fdivrp
(bad)
jmp
lock
sub
xchg
out
cld
push
ins
cwde
cld
sti
mov
fstp
inc
or
(bad)
(bad)
(bad)
call
xchg
loop
mov
stos
xor
pop
xor
mov
xchg
jmp
call
or
in
bound
mov
(bad)
(bad)
push
mov
pop
adc
or
jmp
(bad)
adc
pusha
jo
or
jne
add
(bad)
push
ins
xchg
cwde
inc
xor
jne
jnp
cmp
sbb
(bad)
sub
(bad)
jg
mov
mov
das
dec
sbb
sbb
sahf
adc
inc
mov
xor
jmp
stos
lock
int
adc
out
fisttp
mov
dec
push
or
das
test
jle
xor
inc
mov
mov
mov
(bad)
mov
pop
pop
or
push
inc
jno
retf
inc
int
sub
pop
jbe
lods
mov
inc
mov
push
cmps
(bad)
in
push
jnp
stos
les
mov
or
gs
mov
mov
push
push
adc
(bad)
call
jle
or
dec
iret
pop
inc
inc
mov
jp
stos
cmp
in
inc
xchg
push
in
mov
pop
add
and
xchg
sub
mov
or
in
add
enter
or
(bad)
(bad)
call
hlt
mov
add
rcr
loopne
pop
aas
jne
cwde
je
cmc
test
(bad)
call
push
or
fisubr
sub
push
in
sbb
hlt
(bad)
(bad)
call
mov
mov
sub
shrd
cdq
push
out
adc
(bad)
(bad)
(bad)
xor
push
clc
adc
out
outs
inc
imul
cdq
push
(bad)
out
adc
cld
call
push
test
mov
xchg
and
or
and
mov
call
sbb
cmp
mov
scas
or
mov
mov
mov
sar
push
add
addr16
nop
das
sub
fisubr
xchg
push
cmc
fild
fisub
not
repz
mov
fidiv
scas
retf
fs
mov
(bad)
(bad)
(bad)
push
fistp
test
sbb
rep
retf
xchg
and
loop
js
sbb
out
xor
xchg
(bad)
(bad)
(bad)
inc
xor
pushf
imul
push
pushf
stos
(bad)
loopne
xor
(bad)
(bad)
call
xlat
out
popf
ret
rol
mov
or
int
mov
or
adc
mov
inc
cmp
fcomip
sbb
sti
sub
xor
(bad)
adc
loop
and
pop
mov
mov
stos
jb
pop
inc
add
jb
ret
cmps
adc
(bad)
(bad)
(bad)
mov
adc
jge
xchg
jb
or
adc
xor
sbb
cs
inc
cmp
outs
dec
(bad)
(bad)
(bad)
push
mov
ins
xor
leave
and
dec
data16
leave
stos
cdq
ret
sub
mov
jge
push
fucomi
(bad)
(bad)
jmp
shl
mov
call
cwde
sbb
sbb
repz
(bad)
(bad)
mov
(bad)
leave
cmp
and
pop
inc
xor
push
mov
mov
and
jb
mov
sub
jb
in
mov
and
cmp
cli
(bad)
call
sti
mov
hlt
mov
sbb
push
mov
(bad)
(bad)
(bad)
(bad)
mov
fdiv
ficomp
das
adc
ret
dec
pop
jg
pxor
push
sub
(bad)
jmp
sbb
adc
scas
pop
(bad)
outs
adc
aad
outs
mov
mov
jmp
iret
jbe
fld
fcom
push
out
mov
inc
and
(bad)
call
pusha
add
(bad)
gs
les
cmp
mov
imul
xor
jne
(bad)
(bad)
jmp
iret
nop
fnstcw
xchg
cmp
test
enter
jmp
mov
(bad)
jmp
test
icebp
or
or
pop
sbb
pop
mov
xor
and
dec
movs
(bad)
(bad)
(bad)
(bad)
aas
lds
in
dec
int
sub
inc
and
nop
mov
push
and
jmp
xlat
pop
aad
data16
(bad)
in
clc
(bad)
repz
sub
(bad)
(bad)
(bad)
jle
sti
cmps
xchg
mov
data16
pop
push
push
ins
retf
mov
stos
sub
adc
cmc
in
iret
out
(bad)
push
fisubr
xchg
add
sbb
retf
push
push
fldcw
(bad)
(bad)
(bad)
jmp
sbb
pop
lds
or
cmp
mov
sbb
and
mov
(bad)
(bad)
jmp
and
sbb
inc
sub
jl
push
lods
mov
aaa
cld
(bad)
dec
mov
cwde
sub
cli
sbb
mov
jmp
xchg
mov
push
mov
and
std
or
nop
aad
mov
or
(bad)
(bad)
(bad)
(bad)
mov
inc
idiv
jmp
mov
sbb
pop
push
pop
scas
fsubp
lods
ins
loop
xchg
sub
(bad)
(bad)
inc
in
outs
sbb
aaa
add
into
or
add
cmp
neg
cmps
xchg
rol
(bad)
dec
(bad)
mov
mov
data16
mov
mov
lahf
lahf
mov
push
(bad)
jmp
mov
es
(bad)
(bad)
arpl
fisttp
in
pusha
jmp
jo
(bad)
(bad)
(bad)
mov
ret
mov
push
into
mov
jg
lds
jo
fisttp
pop
std
enter
mov
test
sar
scas
(bad)
mov
call
icebp
mov
scas
fsub
dec
jle
dec
scas
add
dec
test
jno
xlat
xchg
stc
and
(bad)
dec
cmp
mov
iret
sub
pushf
scas
bound
adc
outs
popa
retf
or
(bad)
dec
lock
mov
adc
loopne
xchg
pop
pop
push
jmp
adc
shl
pop
xor
or
xchg
fwait
pop
or
mov
lock
popa
pop
call
sub
je
test
call
jecxz
cmc
(bad)
in
mov
dec
or
adc
adc
(bad)
(bad)
call
les
and
repnz
jae
fild
add
xchg
ror
call
(bad)
(bad)
(bad)
mov
sbb
xchg
loope
xor
ins
cmp
mov
push
int
jmp
(bad)
(bad)
call
xchg
mov
mov
into
hlt
adc
retf
add
rcl
popa
mov
(bad)
(bad)
dec
mov
loop
xchg
ja
jb
aas
ret
add
sub
enter
xchg
sar
(bad)
(bad)
fist
(bad)
xor
add
adc
hlt
sbb
xchg
xchg
call
sbb
(bad)
daa
inc
es
and
fisttp
add
fs
push
lock
(bad)
call
in
sbb
lods
or
sbb
jmp
(bad)
(bad)
dec
and
loop
mov
sbb
movs
popa
test
in
repnz
dec
jne
out
mov
jmp
das
aas
inc
adc
inc
aaa
push
gs
jl
sbb
adc
fdiv
push
push
les
push
rcr
ss
jmp
out
inc
and
cmp
(bad)
(bad)
(bad)
call
hlt
mov
fisub
and
adc
jnp
jl
xchg
mov
(bad)
jg
jle
xchg
or
not
sub
fstp
mov
out
xor
jmp
and
jno
in
lds
dec
in
movs
into
rcr
pushf
dec
(bad)
pop
fisub
ja
(bad)
push
out
mov
push
or
(bad)
out
mov
inc
in
or
es
push
(bad)
(bad)
(bad)
(bad)
dec
mov
and
ret
test
and
loope
mov
sbb
rcr
xor
(bad)
(bad)
(bad)
call
dec
mov
xchg
stos
shr
sbb
je
jns
mov
popa
fwait
pusha
popa
loopne
daa
sub
mov
daa
fsubr
mov
add
dec
xchg
nop
lahf
(bad)
(bad)
(bad)
dec
test
mov
and
xor
mov
pop
fdiv
sub
jle
cmp
(bad)
(bad)
dec
test
fwait
mov
lods
and
in
das
ds
aaa
sbb
scas
(bad)
(bad)
(bad)
mov
jae
xchg
and
dec
cmp
icebp
sti
bound
mov
sbb
(bad)
into
in
rdrand
sahf
jecxz
pop
loopne
jmp
test
mov
pop
and
stc
jmp
in
rcr
fld
fistp
cs
outs
sub
push
retf
loopne
(bad)
(bad)
(bad)
(bad)
fsubr
jle
pop
mov
das
add
scas
adc
lds
add
or
loope
inc
gs
(bad)
(bad)
(bad)
call
retf
xor
push
xchg
jo
mov
fld
test
adc
cmp
outs
cwde
sbb
xor
sti
scas
push
(bad)
loope
adc
outs
std
dec
mov
fsub
(bad)
jecxz
pushf
(bad)
cmp
add
pop
bound
ffreep
sub
xor
xchg
mov
cld
add
(bad)
(bad)
(bad)
jmp
mov
out
retf
and
popa
out
popa
fimul
fs
jbe
or
push
and
adc
jg
bound
push
inc
lock
mov
mov
cdq
xor
(bad)
(bad)
(bad)
call
sbb
lahf
hlt
int
fnstsw
cdq
cs
fwait
enter
xor
js
sbb
(bad)
(bad)
(bad)
jmp
(bad)
dec
out
adc
es
test
pop
xchg
test
mov
pop
dec
xchg
das
clc
xor
or
cld
sub
test
mov
jo
(bad)
(bad)
(bad)
inc
inc
jmp
inc
inc
cli
shl
fs
or
xor
jge
xor
loopne
dec
jnp
sub
(bad)
(bad)
(bad)
(bad)
mov
nop
and
shl
mov
inc
push
into
ror
mov
ins
push
adc
(bad)
(bad)
jmp
inc
jmp
or
sbb
adc
and
cmps
jno
js
test
cld
in
movs
idiv
(bad)
(bad)
call
dec
scas
or
push
leave
pop
popf
dec
outs
ss
mov
in
add
shl
jmp
call
sbb
dec
pop
(bad)
repz
std
sbb
js
mov
xlat
data16
loop
shl
(bad)
(bad)
inc
bound
cld
lods
cmp
je
xlat
ja
mov
pop
je
adc
jge
dec
movs
dec
(bad)
(bad)
call
xchg
adc
stos
xchg
pusha
imul
les
cdq
bound
loop
or
dec
neg
in
(bad)
outs
pop
ror
out
or
(bad)
(bad)
jmp
sub
ds
es
(bad)
push
pop
mov
jg
(bad)
(bad)
call
bound
mov
out
stc
xchg
sbb
mov
mov
push
pop
pop
(bad)
(bad)
(bad)
push
and
inc
in
cmc
retf
push
test
call
popa
mov
mov
(bad)
(bad)
(bad)
inc
(bad)
ins
es
movs
inc
dec
jmp
sbb
mov
test
sub
cwde
jg
fstp
mov
jmp
adc
xchg
xor
adc
jmp
mov
mov
xchg
(bad)
call
xor
pop
imul
adc
fcomp
cld
jmp
rcl
mov
rol
mov
xor
int3
xchg
(bad)
(bad)
(bad)
(bad)
out
mov
mov
shl
shr
push
jae
push
mov
imul
sub
not
lahf
pushf
fwait
test
mov
and
xchg
jbe
(bad)
jg
(bad)
cwde
es
jl
jge
fidiv
push
arpl
(bad)
cwde
sub
sub
dec
shr
test
jle
ss
sahf
test
cdq
daa
rcl
lods
sbb
(bad)
(bad)
jmp
mov
repnz
(bad)
xor
and
and
sbb
adc
cli
(bad)
(bad)
push
cmp
inc
dec
test
outs
sar
pop
pop
ret
shl
test
ja
add
lock
data16
pop
ret
int3
sub
fsub
iret
inc
and
jmp
(bad)
mov
xchg
sub
jb
addr16
rcl
idiv
push
icebp
fwait
call
jg
(bad)
dec
arpl
cmp
inc
mov
inc
cmps
xchg
mov
(bad)
(bad)
call
shl
cmps
repnz
push
jp
dec
or
pop
inc
(bad)
(bad)
(bad)
call
out
(bad)
jecxz
pop
sar
scas
mov
scas
clc
push
push
loop
or
pop
sub
adc
sub
pop
aas
fs
mov
jbe
stos
dec
cdq
(bad)
jbe
push
mov
enter
popa
into
(bad)
add
sahf
jl
jg
(bad)
test
fdivr
not
adc
sti
or
add
add
add
aaa
stos
loopne
mov
pop
lock
call
push
cs
out
xchg
dec
lahf
or
in
mov
xor
adc
(bad)
(bad)
mov
push
rcr
movs
outs
inc
aaa
ror
hlt
clc
ja
and
imul
fdiv
(bad)
(bad)
call
outs
loopne
cmps
mov
pop
loopne
mov
int3
popf
push
xchg
sub
mov
cmps
sub
(bad)
(bad)
cmp
push
inc
adc
jnp
or
sbb
jae
push
xchg
(bad)
(bad)
mov
fiadd
mov
adc
pop
sahf
aad
stos
data16
cmp
arpl
std
xchg
in
sbb
pop
or
xor
pop
pop
and
retf
mov
(bad)
(bad)
(bad)
(bad)
out
int3
dec
fisubr
std
sti
inc
pop
retf
add
jno
pop
(bad)
sbb
(bad)
xor
std
aaa
push
shl
out
stc
jne
adc
in
cdq
call
retf
fldenv
pop
mov
hlt
jmp
scas
fistp
push
push
loope
cmp
ss
sub
mov
rol
pop
sbb
mov
mov
mov
cs
add
inc
add
(bad)
(bad)
call
aas
aaa
sti
dec
and
jp
mov
add
pop
xchg
icebp
jmp
mov
jmp
es
test
pop
mov
iret
xor
jb
push
sbb
or
jle
sub
mov
pop
mov
(bad)
jmp
cld
dec
daa
neg
cmp
ins
outs
push
out
pusha
and
adc
cmp
stos
xor
jbe
(bad)
call
jae
and
push
mov
js
push
(bad)
imul
dec
fisubr
jnp
sbb
cmp
lods
add
(bad)
(bad)
jmp
or
ds
xchg
push
xlat
dec
je
and
bound
xchg
adc
sbb
(bad)
dec
sahf
xchg
inc
adc
mov
pop
lods
pop
mov
out
repnz
(bad)
(bad)
call
jg
mov
xor
cld
sbb
int3
sub
push
mov
jecxz
mov
xchg
sbb
jl
inc
das
scas
nop
loopne
pop
jmp
std
xor
fucomip
push
popf
jbe
pushf
imul
(bad)
cmc
lods
popf
xchg
cmp
imul
sar
(bad)
(bad)
jmp
xor
mov
cs
push
or
jno
sti
aam
stc
call
add
ss
inc
mov
mov
and
xchg
loop
add
bound
push
(bad)
es
inc
scas
(bad)
(bad)
jmp
imul
(bad)
pushf
ins
repz
inc
out
(bad)
cmp
jb
std
pop
lock
sub
outs
cmp
pop
add
xchg
push
cmp
fwait
and
mov
mov
retf
push
(bad)
(bad)
(bad)
push
xchg
sbb
sar
sub
nop
cmc
xor
jne
scas
gs
(bad)
(bad)
dec
in
jmp
mov
lock
adc
push
mov
mov
cld
jmp
jge
gs
dec
pop
xchg
(bad)
jg
(bad)
pop
outs
mov
push
mov
push
adc
sbb
mov
cld
bound
add
call
nop
jg
test
inc
(bad)
(bad)
(bad)
jmp
out
jge
jecxz
mov
xor
int
aaa
and
jl
daa
jp
(bad)
(bad)
(bad)
jmp
push
es
cli
xchg
ins
test
in
sbb
enter
pop
inc
shl
call
imul
adc
lods
fdivr
dec
retf
adc
mov
shr
(bad)
(bad)
jg
sbb
push
ins
push
push
in
cmps
scas
test
cmps
xor
test
cmc
mov
fcom
std
(bad)
(bad)
(bad)
inc
rcl
jg
imul
test
sbb
sub
cdq
sbb
mov
mov
jg
(bad)
inc
mov
lds
sub
mul
dec
(bad)
mov
sbb
pop
test
(bad)
(bad)
(bad)
(bad)
jl
or
addr16
inc
push
mov
loopne
mov
repnz
aaa
or
add
int
jge
sbb
push
inc
call
xchg
icebp
mov
dec
and
push
jecxz
(bad)
(bad)
mov
shl
enter
and
pop
push
xor
pop
cmp
sbb
sub
stos
dec
cld
adc
mov
(bad)
repz
fwait
pusha
rcr
sub
(bad)
push
test
jmp
pop
rcr
dec
movs
and
push
data16
cwde
arpl
push
dec
mov
(bad)
(bad)
(bad)
ds
or
and
bound
loop
add
sbb
sbb
cwde
lock
add
(bad)
jmp
je
pop
jae
rcl
xchg
idiv
in
mov
xor
pop
stos
ret
jl
xchg
out
cli
(bad)
(bad)
jmp
sub
sbb
xchg
imul
adc
push
addr16
sub
(bad)
aas
jmp
clc
outs
jp
mov
les
xor
jne
push
pop
stc
fist
jle
sub
(bad)
(bad)
inc
ret
bound
ss
or
add
xchg
lds
std
ret
inc
outs
mov
loopne
mov
(bad)
(bad)
dec
scas
mov
adc
jns
cli
or
pushf
in
enter
frstor
ret
mov
(bad)
inc
jg
ja
out
(bad)
int
shl
push
inc
in
push
jo
jge
test
cmc
jmp
add
jns
mov
jp
mov
mov
bound
and
mov
test
cmp
(bad)
(bad)
inc
ret
ret
cwde
gs
sbb
cdq
xchg
or
dec
cmp
mov
dec
fcmovu
jle
(bad)
movs
inc
sbb
in
(bad)
(bad)
(bad)
mov
jb
dec
out
daa
test
shl
mov
push
int3
pop
sub
(bad)
(bad)
(bad)
jmp
cmps
or
mov
push
mov
repz
mov
dec
addr16
stos
xor
and
(bad)
(bad)
(bad)
std
repz
jp
cmp
pop
and
xlat
pop
daa
sub
adc
arpl
je
scas
xor
inc
lar
outs
xchg
sub
jbe
cmp
cmp
loopne
addr16
add
pop
popf
inc
dec
or
and
jae
aas
cmc
dec
xchg
dec
aam
and
cmp
out
pop
xchg
lods
aas
iret
adc
into
int
mov
clc
int
sub
pop
imul
or
stc
pop
adc
mul
or
cmc
call
pop
inc
pop
dec
out
xchg
cld
mov
xor
movs
or
jle
push
fwait
sbb
xor
loope
push
mov
std
sub
(bad)
jg
mov
mov
test
cmp
mov
(bad)
(bad)
jmp
xchg
xchg
ins
cwde
jne
sbb
cmc
or
sub
int
popf
ins
scas
(bad)
(bad)
(bad)
inc
mov
pop
and
xor
push
pop
dec
jns
mov
mov
ror
or
push
jle
push
push
movs
imul
cdq
xchg
or
mov
imul
xchg
jg
pusha
cld
pushf
cmps
jnp
and
movs
jnp
dec
ret
jmp
inc
dec
mov
ja
fdiv
ret
push
hlt
fst
fwait
inc
add
(bad)
jmp
xchg
loop
pushf
jmp
adc
(bad)
adc
pop
mov
fs
test
das
push
(bad)
(bad)
(bad)
(bad)
jmp
jle
cmps
and
hlt
loopne
in
mov
jecxz
and
repz
fcom
cmp
cli
(bad)
inc
sub
jns
or
pop
int3
push
lea
add
stc
pop
sub
inc
repz
dec
adc
mov
and
(bad)
push
inc
dec
js
lahf
repnz
aad
and
mov
(bad)
(bad)
cmp
cmp
sbb
pushf
fidiv
sti
ja
cmps
sbb
jb
and
(bad)
(bad)
(bad)
cmp
test
dec
gs
xor
jecxz
cmp
pop
je
lods
imul
(bad)
loopne
fnstsw
(bad)
(bad)
jmp
jge
cmp
jecxz
mov
adc
dec
(bad)
(bad)
(bad)
mov
push
jmp
shr
in
fisubr
mov
ins
test
(bad)
call
sub
ror
retf
and
jno
ds
sbb
mov
cmp
adc
sub
inc
test
mov
mov
push
nop
ret
jnp
jae
daa
add
push
pop
jg
pop
mov
jmp
adc
cmps
push
cli
or
(bad)
mov
mov
or
or
push
sbb
iret
mov
lea
jmp
ins
lds
fadd
mov
retf
dec
arpl
add
xor
push
adc
push
cmps
pop
(bad)
cmp
jecxz
rol
mov
pop
(bad)
(bad)
inc
pop
and
lahf
bound
sbb
inc
and
lds
(bad)
(bad)
jmp
fcom
mov
(bad)
bound
aad
into
jle
cmp
icebp
icebp
sub
sub
sahf
lds
sbb
adc
jne
sbb
idiv
ins
cmps
xor
cmp
outs
ins
retf
test
outs
dec
sbb
test
inc
jo
(bad)
(bad)
inc
in
cmp
daa
pop
dec
sub
ins
ror
adc
div
aad
movs
push
js
add
(bad)
mov
mov
cmps
test
adc
neg
loop
cmps
adc
xchg
or
clc
(bad)
(bad)
call
dec
sub
push
pop
pop
cmp
out
sar
inc
dec
push
je
cmps
jne
stos
in
mov
sbb
(bad)
jmp
(bad)
mov
idiv
stos
sub
and
inc
pop
xor
add
pushf
xchg
push
out
jmp
sub
or
cmp
retf
pop
ins
add
popf
add
test
(bad)
push
cwde
in
mov
sbb
clc
cs
sti
nop
retf
jmp
sbb
data16
inc
lahf
(bad)
(bad)
(bad)
(bad)
dec
or
inc
cwd
out
xor
adc
shl
mov
sbb
repz
ins
jbe
(bad)
(bad)
call
cld
sbb
adc
test
cmps
mov
mov
cwde
fbld
call
cld
jle
ja
xor
cmc
inc
neg
out
pop
add
popa
ja
add
ds
add
test
das
loope
mov
pusha
inc
mov
lods
dec
stc
jb
xchg
loop
or
ror
stc
mov
mov
(bad)
push
pusha
enter
jnp
rol
bound
retf
cs
sub
out
and
(bad)
(bad)
inc
aad
jmp
das
out
cmp
dec
adc
pop
adc
jge
jg
adc
dec
fnstcw
in
adc
neg
fld
call
retf
dec
or
icebp
pop
xchg
fiadd
mov
(bad)
fistp
xor
int3
sub
xchg
lods
jge
dec
pop
arpl
xchg
xor
jecxz
inc
or
xor
add
in
mov
loopne
cmp
jne
mov
cld
clc
cld
adc
sbb
jmp
push
jle
or
rcl
xor
(bad)
(bad)
(bad)
(bad)
mov
sbb
mov
retf
adc
arpl
and
lods
mov
repz
mov
(bad)
(bad)
(bad)
(bad)
js
mov
jle
mov
pop
fnsave
and
inc
cld
out
mov
ins
iret
cld
mov
ret
(bad)
inc
fcmove
repnz
not
ret
sbb
outs
into
addr16
xor
sbb
jg
(bad)
inc
sti
or
das
xor
out
sub
jp
or
pop
out
push
imul
pop
cmps
cmp
cmp
(bad)
(bad)
(bad)
inc
js
adc
jmp
ror
cmp
sbb
loope
mov
inc
cld
inc
mov
dec
mov
fucomi
adc
adc
cmp
sti
call
sub
lds
mov
sub
fwait
xor
push
and
movs
jg
push
cmp
(bad)
(bad)
(bad)
(bad)
cli
ss
sar
push
sub
cld
dec
mov
xlat
arpl
je
cmp
mov
pop
std
or
cmp
out
outs
call
out
bound
jmp
mov
dec
(bad)
(bad)
(bad)
jmp
push
mov
pusha
dec
sub
pop
xchg
clc
push
add
mov
mov
lds
jmp
sub
dec
cdq
sbb
cmp
pop
sbb
(bad)
(bad)
(bad)
jmp
outs
test
in
pop
(bad)
mov
mov
sti
push
dec
hlt
sbb
sbb
xchg
dec
cwde
cwde
bound
add
mov
mov
sub
dec
jae
fld
bnd
mov
jp
rcr
scas
clc
(bad)
(bad)
jle
out
add
mov
sub
out
inc
(bad)
jmp
cmc
data16
daa
cmp
mov
repnz
stos
push
scas
cmp
call
les
push
cmp
mov
add
scas
popf
(bad)
mov
jne
mov
mov
stos
xor
or
je
lds
and
xor
lods
out
(bad)
(bad)
jmp
jbe
jmp
adc
push
aam
test
loopne
scas
fdivr
push
cmc
stos
cld
jmp
icebp
xchg
sahf
lds
pop
dec
aas
jmp
outs
fcomp
inc
ret
mov
scas
pop
jp
mov
int
cmp
(bad)
(bad)
(bad)
push
popa
xor
push
and
pop
pop
mov
popf
in
mov
retf
fcos
(bad)
mov
adc
mov
int
xchg
xchg
imul
(bad)
jmp
inc
std
mov
push
loope
xchg
inc
mov
(bad)
xchg
sahf
mov
fisub
(bad)
jmp
scas
repnz
and
in
outs
dec
lods
cmps
xchg
dec
icebp
aam
(bad)
(bad)
(bad)
fcomip
aas
push
fld
jno
out
popf
aam
xor
ficom
fwait
pusha
jecxz
pop
mov
(bad)
(bad)
(bad)
jmp
adc
arpl
and
or
mov
paddw
bound
dec
ret
xor
loop
(bad)
(bad)
dec
push
popf
and
mov
test
retf
ds
movd
daa
lds
dec
and
inc
add
sub
pop
dec
cld
enter
jnp
stos
out
ss
mov
push
add
mov
out
cmc
or
sub
aaa
dec
into
inc
jge
outs
xor
xchg
cdq
(bad)
(bad)
jg
mov
push
mov
mov
and
stos
or
(bad)
(bad)
xor
push
fwait
or
test
xchg
(bad)
jmp
mov
inc
mov
inc
(bad)
push
add
(bad)
mov
fsub
loopne
dec
sub
(bad)
(bad)
cmp
adc
pop
or
fmul
or
xchg
dec
add
sti
repnz
(bad)
(bad)
(bad)
call
fst
popa
jecxz
aam
ret
unpcklps
push
cmps
pop
dec
jmp
pop
mov
add
(bad)
(bad)
(bad)
(bad)
jmp
mov
imul
and
aad
ins
ins
inc
add
push
mov
adc
cmp
cmps
inc
sbb
out
les
push
inc
and
pop
lds
int3
bound
stos
push
push
cld
sbb
mov
jmp
inc
mov
cmp
mov
clc
je
(bad)
out
call
jmp
cli
add
sbb
int
mov
stos
mov
mov
(bad)
(bad)
(bad)
(bad)
call
pusha
jno
cdq
out
mov
imul
icebp
fisttp
dec
push
push
inc
jnp
cmps
test
mov
xchg
mov
enter
aad
call
or
lahf
mov
inc
(bad)
(bad)
(bad)
jmp
mov
aad
(bad)
pop
hlt
xchg
(bad)
xlat
sbb
or
dec
bound
fxch
fwait
(bad)
(bad)
(bad)
in
inc
mov
and
pop
test
jae
std
mov
mov
lock
mov
(bad)
fcmovb
and
inc
xor
cli
push
nop
mov
and
stos
out
(bad)
(bad)
push
stos
leave
mov
mov
push
adc
dec
push
scas
jno
jle
nop
into
ret
scas
pop
push
jnp
(bad)
(bad)
call
push
cs
lds
aam
mov
and
stc
or
mov
mov
(bad)
jmp
call
and
jle
ret
mov
imul
jge
push
sar
(bad)
push
push
test
loope
mov
sbb
loope
pop
push
bound
dec
xor
xchg
sbb
test
sbb
(bad)
and
add
adc
sub
hlt
add
(bad)
mov
sbb
mov
adc
jecxz
iret
call
sub
or
add
pop
mov
int
retf
dec
retf
or
mov
ins
inc
mov
mov
in
jmp
or
rcl
icebp
jo
mov
test
std
xabort
(bad)
(bad)
(bad)
(bad)
push
int
jmp
mov
jecxz
pop
push
ds
jmp
popa
gs
call
inc
mov
lahf
xor
mov
mov
push
int3
inc
scas
les
clc
(bad)
jmp
adc
(bad)
and
sbb
lods
mov
(bad)
push
or
(bad)
out
scas
and
in
cwde
sbb
add
sub
xor
ss
xchg
push
(bad)
cmp
test
mov
xchg
jno
fcmovnbe
mov
lods
cmp
pop
int
dec
mov
test
(bad)
call
and
call
mov
mov
push
fcomp
das
loopne
xchg
test
outs
sbb
pushf
sub
cmps
cs
neg
and
jg
leave
sub
xor
cmps
fbld
sbb
add
call
cdq
ins
dec
enter
sub
sub
(bad)
jae
cld
mov
or
cmp
cmp
jp
jmp
sbb
stos
cdq
add
xor
loope
das
cmp
(bad)
jmp
jne
std
push
int
scas
sbb
push
add
dec
loopne
cmc
pop
lods
jp
std
(bad)
(bad)
inc
(bad)
mov
xor
out
bnd
adc
xchg
nop
dec
scas
(bad)
push
fs
inc
pop
cdq
pusha
add
pop
int3
mov
or
out
dec
dec
push
(bad)
es
jno
mov
fnstcw
rcl
shl
pop
cmp
(bad)
mov
pop
imul
jle
mov
test
dec
sub
repnz
loope
out
(bad)
(bad)
call
xor
adc
pop
lea
mov
and
adc
iret
dec
shl
pop
xchg
add
lds
add
push
inc
push
push
pop
stos
test
cmps
and
cmp
(bad)
(bad)
(bad)
jmp
adc
loope
dec
stos
mov
adc
fdivr
scas
push
fs
mov
repnz
cmc
(bad)
(bad)
push
cwde
push
lahf
mov
mov
lds
xchg
rcr
and
in
movs
xor
adc
pop
fwait
jle
or
jno
and
(bad)
ffreep
jmp
xlat
pop
nop
and
add
dec
(bad)
jge
arpl
pop
cmp
les
jbe
bound
jne
jg
pop
in
in
outs
cli
vmovss
js
jo
dec
pop
and
mov
call
jo
lea
cld
mov
push
adc
mov
mov
(bad)
pop
mov
(bad)
(bad)
(bad)
mov
daa
add
hlt
mov
and
call
dec
and
mov
cld
xor
mov
adc
dec
or
jp
into
or
(bad)
in
ja
in
ds
movs
adc
lea
pushf
daa
neg
pop
mov
(bad)
(bad)
jmp
jns
mov
dec
bound
push
jmp
xchg
lahf
xchg
aaa
inc
das
push
dec
or
aad
frstor
(bad)
(bad)
(bad)
(bad)
inc
test
and
out
or
mov
xor
inc
dec
jmp
inc
in
call
cld
call
stc
xchg
cmc
lods
and
wrmsr
or
mov
mov
sub
(bad)
sub
dec
loopne
repz
sub
mov
scas
cmp
pop
addr16
xor
push
cmp
les
(bad)
(bad)
call
lea
addr16
sar
leave
mov
mov
push
shl
das
adc
inc
les
(bad)
(bad)
dec
mov
xchg
sub
cwde
xchg
pusha
rcr
(bad)
call
mov
bound
dec
inc
xchg
sbb
cs
or
cmp
cmp
ficom
(bad)
mov
imul
add
jmp
inc
rcr
mov
fdiv
or
or
hlt
mov
mov
and
inc
jno
shl
dec
test
or
(bad)
mov
xor
cli
dec
dec
pusha
push
xor
out
pop
pop
xchg
jecxz
(bad)
jmp
rcl
(bad)
daa
mov
push
pop
and
push
add
(bad)
mov
mov
pop
mov
rcr
push
push
int3
dec
int
jo
je
(bad)
(bad)
(bad)
out
je
sbb
inc
inc
outs
push
push
fst
arpl
cmp
in
js
push
(bad)
(bad)
jmp
inc
sbb
jbe
fcomp
mov
cmp
retf
loopne
mov
(bad)
(bad)
call
mov
pusha
lahf
xchg
or
adc
and
lods
sub
xchg
in
test
dec
push
sbb
aas
scas
mov
sub
loopne
mov
in
mov
xor
fs
call
cmpxchg
loopne
lods
mov
sub
inc
push
fidiv
fwait
lods
(bad)
(bad)
(bad)
cmp
pushf
imul
call
sub
pop
fisub
icebp
(bad)
fsub
pop
loope
inc
jbe
idiv
xor
cmps
push
cli
(bad)
call
mov
add
je
mov
cmp
(bad)
jmp
(bad)
fdiv
jmp
inc
scas
and
imul
pop
sub
cs
call
mov
pop
es
ret
and
pop
clc
das
clc
call
mov
cmp
cmps
mov
loopne
or
xlat
jmp
cmps
xchg
add
xlat
push
jo
xor
or
aas
stos
(bad)
(bad)
(bad)
call
addr16
add
out
cli
fwait
test
fadd
in
arpl
test
aam
sbb
and
sub
xor
(bad)
cmp
xor
push
aaa
test
sbb
ins
add
retf
xchg
fild
shr
lds
lods
cmp
out
push
dec
or
mov
push
lahf
mov
test
(bad)
retf
(bad)
(bad)
(bad)
call
retf
lods
xchg
push
add
ins
and
lahf
cld
adc
adc
xor
(bad)
(bad)
dec
test
jp
repz
movs
cmp
mov
fwait
xor
mov
(bad)
(bad)
(bad)
push
(bad)
mov
popa
nop
and
(bad)
fistp
xchg
scas
xchg
mov
test
jl
sub
(bad)
jmp
pop
lods
adc
cmp
push
mov
cwde
sub
(bad)
(bad)
jg
mov
jecxz
(bad)
(bad)
ins
call
mov
adc
xor
jns
(bad)
(bad)
push
outs
test
test
push
xchg
sbb
ret
push
pop
dec
test
and
pop
loopne
mov
push
into
icebp
(bad)
mov
mov
stos
test
sub
scas
inc
(bad)
(bad)
(bad)
jmp
mov
adc
sti
mov
sbb
pop
dec
inc
mov
and
in
jle
mov
mov
jo
inc
sub
xor
mov
push
lds
sbb
cli
mov
xchg
cmp
jne
jnp
ja
sub
(bad)
pop
mov
(bad)
(bad)
(bad)
jnp
dec
pop
or
int
sbb
mov
out
inc
sbb
cld
mov
and
or
sbb
movs
shl
movs
lods
loopne
retf
fwait
add
adc
outs
scas
cmp
gs
movs
mov
js
(bad)
(bad)
inc
addr16
push
mov
cdq
lea
sbb
aam
in
outs
lock
xchg
(bad)
(bad)
clc
jmp
bound
mov
dec
jp
inc
cdq
movs
ret
call
cld
ror
push
bound
in
les
nop
das
add
push
xor
push
loop
sti
iret
(bad)
jg
jmp
push
cwde
movs
mov
xchg
and
mov
or
cmps
and
push
mov
push
and
out
inc
mov
sub
(bad)
(bad)
jmp
cmp
js
sub
imul
push
out
push
or
jbe
xchg
dec
lods
test
dec
fidivr
xchg
in
ins
dec
enter
push
fidivr
js
push
and
(bad)
pop
loopne
ja
pop
retf
mov
fdivr
jno
mov
mov
(bad)
(bad)
(bad)
(bad)
inc
call
add
jmp
imul
and
bnd
(bad)
(bad)
(bad)
inc
mov
(bad)
out
or
add
popf
xor
test
fisttp
jg
(bad)
pop
push
or
(bad)
mov
mov
sbb
dec
mov
(bad)
aad
(bad)
(bad)
inc
stos
sub
pop
mov
sub
loope
loope
ja
shl
sub
jmp
in
js
jno
mov
test
arpl
(bad)
xchg
mov
cld
outs
and
(bad)
(bad)
inc
pusha
dec
push
imul
pushf
jns
cmps
add
sbb
ja
rcl
(bad)
(bad)
(bad)
call
adc
push
iret
add
mov
sub
movs
mov
ds
(bad)
iret
(bad)
(bad)
(bad)
(bad)
mov
cmp
aad
cwde
dec
sbb
nop
inc
mov
dec
sbb
(bad)
call
loopne
call
mov
xchg
jg
xchg
arpl
jne
mov
(bad)
(bad)
dec
push
jo
pop
inc
jae
cmp
xor
or
inc
(bad)
(bad)
inc
aam
ret
imul
test
int3
mov
sbb
mov
(bad)
(bad)
(bad)
in
pop
call
inc
stos
mov
popf
adc
sub
sar
int
or
jae
xchg
sbb
mov
pop
mov
pop
jmp
(bad)
(bad)
(bad)
(bad)
out
push
xor
outs
out
fwait
jmp
mov
jns
or
iret
sti
mov
jo
fisubr
inc
(bad)
(bad)
(bad)
call
pop
adc
adc
into
std
adc
into
sbb
add
cmp
mov
cwde
push
(bad)
loopne
imul
pop
test
out
mov
(bad)
xor
lahf
cmps
mov
ins
mov
int
sbb
inc
ja
jno
xchg
shr
das
adc
int3
aaa
cwde
dec
shr
sub
dec
and
xchg
mov
adc
cmp
xchg
pop
jno
adc
cli
sub
fcom
xchg
call
xor
xor
push
xlat
lds
sbb
mov
cmp
ds
jmp
popf
sbb
fsub
leave
xchg
hlt
adc
js
out
lds
fist
sub
mov
cwde
adc
inc
in
sub
sub
cmp
ins
es
outs
fisub
(bad)
in
outs
je
xor
imul
sti
pop
fs
mov
pop
add
(bad)
(bad)
(bad)
push
lods
iret
dec
test
inc
mov
cmp
dec
adc
stos
jmp
clc
cmp
(bad)
call
push
out
call
add
jno
(bad)
(bad)
(bad)
(bad)
cmp
add
xchg
test
not
ret
jo
sub
outs
sub
(bad)
(bad)
jmp
dec
push
invd
test
jecxz
icebp
fldcw
or
out
outs
(bad)
(bad)
(bad)
call
and
jnp
xchg
add
fsubr
mov
mov
adc
sti
ja
and
mov
sbb
rcr
fild
je
fs
pushf
dec
repz
lea
adc
mov
cli
lds
jp
mov
adc
add
int3
movs
jbe
(bad)
xor
hlt
dec
leave
mov
icebp
scas
push
call
(bad)
push
dec
stos
jne
mov
pop
mov
xchg
(bad)
sbb
arpl
jecxz
clc
mov
scas
sbb
cmps
outs
dec
jmp
push
clc
mov
and
addr16
inc
and
arpl
(bad)
(bad)
jmp
test
inc
inc
mov
call
out
jle
xor
sub
sbb
popa
(bad)
inc
jecxz
mov
js
mov
push
int
cmps
mov
pop
mov
push
(bad)
call
pop
mov
loopne
add
bound
mul
mov
(bad)
(bad)
(bad)
push
add
mov
imul
fwait
loopne
mov
jl
and
xor
scas
(bad)
sar
(bad)
(bad)
(bad)
fisub
mov
and
jg
cmp
or
xor
adc
(bad)
(bad)
(bad)
fidiv
xchg
sbb
add
push
jle
jg
data16
(bad)
inc
popf
mov
ins
xchg
mov
test
dec
gs
dec
dec
jmp
cmps
xor
push
(bad)
lods
and
xor
mov
sbb
fcom
popa
lea
pop
sub
in
js
jmp
add
outs
int
ja
dec
test
jecxz
fnsave
mov
fwait
or
loop
add
fsubr
imul
test
(bad)
(bad)
(bad)
jmp
scas
and
add
lahf
cmp
dec
(bad)
push
adc
mov
inc
mov
or
dec
lahf
call
pop
adc
or
std
pusha
mov
iret
adc
(bad)
jl
push
push
pop
cld
(bad)
push
sub
jnp
xchg
mov
stos
xor
clc
xchg
xor
jae
jmp
jmp
inc
les
xor
inc
mov
jo
inc
mov
pop
mov
shl
cmps
repz
cmp
(bad)
(bad)
(bad)
call
sti
push
and
dec
or
mov
or
push
stos
push
sub
cli
dec
mov
xchg
mov
rol
mov
or
sub
adc
sahf
retf
leave
mov
add
push
pop
fxch
(bad)
sti
outs
pusha
ret
enter
jle
and
(bad)
(bad)
push
aad
mov
or
xor
jbe
pop
mov
xor
xor
jb
jo
test
(bad)
(bad)
jmp
arpl
mov
mov
sti
pop
sub
ds
adc
inc
fstp
test
das
movs
(bad)
and
in
adc
dec
in
dec
ja
lods
out
dec
cmc
(bad)
(bad)
cmp
push
adc
mov
fcomp
or
push
mov
push
xlat
xor
sbb
jb
adc
sub
loopne
xchg
out
ret
movs
retf
gs
xor
and
xor
clc
adc
popf
pop
inc
test
adc
xchg
ins
fdiv
push
sub
xor
rcr
cwde
push
cmp
lock
rol
mov
(bad)
(bad)
cmp
scas
jbe
sub
adc
push
retf
int
and
(bad)
call
xchg
not
ret
sbb
pop
xor
sub
dec
mov
ror
cmp
xlat
imul
inc
add
mov
mov
mov
lds
xchg
outs
cmp
jnp
sbb
out
xor
call
je
mov
mov
scas
push
ins
or
mov
dec
or
mov
cs
(bad)
(bad)
jmp
xchg
ins
xor
sti
mov
jmp
push
rcr
cwde
or
jae
lahf
mov
or
loop
mov
(bad)
add
sar
mov
mov
push
inc
inc
jo
fild
stos
mov
adc
ficom
mov
(bad)
inc
sbb
xchg
ins
aam
or
adc
inc
ins
pop
test
mov
sbb
jae
sar
inc
mov
je
push
push
call
(bad)
and
(bad)
mov
xlat
add
pop
cmps
xlat
pop
lds
(bad)
(bad)
(bad)
inc
into
out
cmp
call
clc
push
fidivr
xchg
lods
add
(bad)
dec
xor
and
add
and
stc
fisub
pop
(bad)
and
rcr
push
jecxz
xor
(bad)
inc
outs
fdivr
fcomip
sbb
pop
dec
imul
pop
pusha
ss
push
sub
or
cdq
sub
je
test
push
leave
mov
inc
test
fdivr
(bad)
(bad)
call
test
ret
outs
(bad)
bound
mov
adc
rcl
xchg
pop
(bad)
(bad)
(bad)
jmp
(bad)
jb
call
adc
test
xor
(bad)
cmp
dec
or
iret
pop
sbb
test
test
out
(bad)
lods
pusha
pop
lea
mov
sub
call
(bad)
(bad)
(bad)
mov
mov
cmp
sbb
arpl
add
outs
add
(bad)
(bad)
(bad)
inc
xor
in
dec
outs
pop
cwde
icebp
cmp
enter
push
int3
scas
push
xor
or
pop
dec
movs
mov
(bad)
(bad)
dec
(bad)
test
setl
aaa
jp
mov
loopne
adc
inc
scas
ret
jbe
inc
mov
(bad)
call
cmc
outs
xor
mov
xlat
mov
sbb
dec
xrelease
add
cld
(bad)
inc
imul
push
pusha
lock
es
and
sbb
ins
add
(bad)
(bad)
call
out
or
or
and
cmc
test
sbb
call
mov
dec
jp
mov
fst
imul
mov
mov
ja
imul
mov
dec
mov
cmp
jg
(bad)
(bad)
(bad)
ds
imul
lds
aas
xchg
inc
enter
xchg
(bad)
(bad)
(bad)
(bad)
jle
and
aad
ret
pop
xchg
mov
dec
hlt
aaa
jg
xchg
ins
or
and
imul
(bad)
mov
mov
mov
jbe
mov
sub
push
imul
dec
inc
and
(bad)
inc
into
call
dec
push
pop
fild
mov
ret
cmp
gs
lea
inc
sar
push
daa
into
pop
xchg
jmp
jp
adc
adc
push
in
(bad)
(bad)
push
jne
cmp
in
dec
jl
addr16
cmp
mov
dec
jbe
add
call
and
jecxz
(bad)
pop
icebp
mov
push
out
sub
daa
repz
btc
data16
(bad)
(bad)
jmp
(bad)
jno
out
pushf
mov
dec
xlat
jmp
and
and
xchg
jmp
mov
(bad)
(bad)
call
and
scas
sub
mov
div
adc
(bad)
call
leave
push
mov
mov
aad
and
inc
and
(bad)
(bad)
jmp
cld
lfs
lea
out
ficomp
pop
mov
(bad)
(bad)
(bad)
fst
jno
test
shl
adc
xor
outs
xchg
push
data16
(bad)
(bad)
inc
aaa
sub
jmp
cmp
inc
movs
cwde
dec
sub
cmps
mov
test
adc
add
(bad)
(bad)
(bad)
out
push
push
jg
and
push
std
call
jae
aaa
loopne
(bad)
call
pop
mov
xor
imul
std
movs
outs
jbe
and
mov
call
dec
or
adc
and
leave
cmp
das
nop
mov
arpl
outs
ja
ins
push
mov
pop
cmc
(bad)
fld
and
das
xchg
cli
iret
jmp
pop
les
sbb
(bad)
(bad)
(bad)
call
lods
jecxz
lock
cmps
(bad)
xchg
pop
or
mov
ds
or
mov
bnd
arpl
(bad)
cmp
xchg
mov
mov
lea
(bad)
push
and
jg
(bad)
call
scas
dec
cld
mov
test
popf
mov
outs
aam
mov
jg
(bad)
call
adc
int3
mov
xor
xor
movs
sbb
call
int
mov
mov
mov
inc
cmp
ret
xchg
xor
in
out
clc
xor
cs
rcl
pop
mov
mov
cs
(bad)
(bad)
(bad)
inc
dec
out
push
sub
add
jecxz
imul
fwait
add
push
ss
mov
sar
(bad)
(bad)
call
outs
sub
push
mov
punpckhwd
pop
imul
xchg
push
mov
(bad)
(bad)
inc
(bad)
xor
push
outs
cmp
sbb
mov
gs
push
pop
xlat
xchg
mov
popf
adc
(bad)
(bad)
(bad)
call
sub
sub
mov
mov
pop
and
(bad)
seta
adc
into
lahf
dec
push
ja
cmps
in
pop
mov
(bad)
(bad)
jnp
fld
push
and
jmp
hlt
add
js
in
cmps
repnz
sub
or
inc
arpl
dec
xor
mov
adc
xchg
jmp
(bad)
(bad)
dec
add
enter
adc
xchg
sbb
xor
mov
xchg
pop
dec
rol
loopne
les
push
outs
(bad)
(bad)
jmp
and
es
add
sbb
loop
cwde
jp
(bad)
xchg
(bad)
(bad)
jmp
pop
(bad)
shl
test
ins
mov
leave
mov
into
imul
(bad)
(bad)
(bad)
jmp
xor
je
daa
stos
pop
clc
inc
outs
pop
call
stc
(bad)
out
(bad)
jmp
pushf
or
gs
retf
ret
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
push
test
inc
push
enter
sar
inc
cli
xchg
mov
xor
nop
fsubr
jns
daa
shr
cdq
xchg
arpl
inc
fs
push
(bad)
(bad)
inc
mov
movs
aaa
mov
retf
pop
fild
pop
push
mov
leave
fiadd
or
in
int3
mov
jmp
test
push
(bad)
(bad)
(bad)
push
jl
mov
push
loop
in
jno
leave
scas
dec
lods
pop
pop
add
pop
xor
inc
jle
dec
(bad)
(bad)
(bad)
inc
nop
shl
push
xchg
xor
cmps
in
jns
adc
add
push
jo
clc
(bad)
(bad)
call
dec
stc
imul
int3
sub
push
or
mov
rcr
xchg
inc
dec
jge
and
repz
fwait
(bad)
(bad)
js
sbb
repnz
pop
jecxz
shr
mov
dec
ja
out
jge
call
push
(bad)
pop
lds
xchg
mov
shl
ja
push
out
aad
(bad)
(bad)
cmp
xchg
cmps
aad
push
cmp
(bad)
lea
shl
push
and
cmps
sar
xchg
and
shr
xchg
push
aaa
inc
and
mov
dec
adc
mov
(bad)
mov
jmp
push
mov
or
jle
dec
shl
fisttp
shl
es
sbb
mov
aad
xchg
pop
into
inc
pop
pop
or
adc
lds
loop
in
and
(bad)
(bad)
jg
clc
pop
jmp
or
and
xor
inc
je
push
jg
jp
pop
hlt
(bad)
dec
(bad)
mov
leave
repz
inc
xchg
in
pop
jl
mov
int
mov
iret
xchg
std
stos
cmp
mov
mov
aas
out
stos
lods
lds
scas
push
xchg
or
in
add
pushf
push
dec
xor
sub
dec
out
xchg
clc
pop
shl
(bad)
(bad)
(bad)
(bad)
jmp
fstp
mov
push
(bad)
mov
scas
add
mov
(bad)
(bad)
(bad)
clc
xchg
dec
ins
sub
xor
(bad)
ja
dec
mov
cs
addr16
mov
sub
aaa
std
mov
mov
mov
shl
movs
data16
pop
xor
(bad)
(bad)
(bad)
jmp
pop
adc
adc
bound
jnp
hlt
mov
or
and
push
fild
fbstp
xor
aam
sahf
xor
(bad)
(bad)
call
es
cmps
sub
push
jge
cmp
retf
loope
adc
shl
add
cmp
(bad)
(bad)
jbe
dec
(bad)
push
fisttp
(bad)
inc
jno
cmc
call
adc
fs
shl
inc
sub
(bad)
(bad)
push
ret
adc
push
jmp
push
leave
shl
push
mov
iret
ja
xchg
mov
add
cli
jg
pop
shl
push
out
fwait
jnp
or
sbb
loopne
out
jne
(bad)
jmp
and
js
dec
(bad)
mov
sub
fst
jbe
xchg
cmp
pop
(bad)
test
xor
and
pop
mov
push
xchg
into
jae
(bad)
sub
clc
call
and
sbb
cmps
push
stos
fwait
sub
mov
(bad)
(bad)
(bad)
(bad)
aas
jg
push
pusha
dec
cmp
mov
xor
mov
mov
xchg
call
pop
jmp
std
(bad)
push
out
xor
retf
sub
fst
std
push
jecxz
iret
sbb
xor
ss
xchg
out
(bad)
(bad)
(bad)
inc
out
cmp
cmp
popa
cmp
lods
out
adc
repnz
sbb
ficomp
scas
in
jnp
fwait
mov
jg
(bad)
(bad)
(bad)
fbstp
les
jo
inc
into
loopne
pop
pop
scas
pop
scas
idiv
mov
(bad)
dec
cmp
and
inc
icebp
pop
sbb
inc
adc
adc
cmps
(bad)
mov
sub
lea
inc
jae
push
jb
ds
in
(bad)
jmp
shr
imul
retf
scas
mov
(bad)
call
ret
push
adc
xor
inc
jno
mov
dec
pop
enter
mov
imul
(bad)
inc
icebp
mov
call
ror
adc
out
add
(bad)
(bad)
(bad)
jg
bound
adc
jnp
jecxz
jb
add
mov
idiv
test
jmp
mov
xchg
jns
and
ss
in
xor
(bad)
(bad)
jmp
movs
xchg
mov
rcl
test
test
push
cmp
xor
jbe
add
ins
sbb
(bad)
(bad)
(bad)
sti
sbb
stos
pand
sub
cmovl
xor
hlt
dec
je
(bad)
iret
jns
mov
call
jnp
fs
xor
cmp
fld
adc
pop
sbb
ins
mov
(bad)
fiadd
icebp
(bad)
jge
add
cmps
fcmovnu
fst
shl
(bad)
(bad)
(bad)
call
push
ja
and
stc
es
mov
call
jecxz
xor
mov
fisubr
cmp
jg
xchg
adc
xchg
(bad)
mov
repz
repz
sub
jecxz
lock
dec
sub
push
mov
scas
inc
fisubr
int3
inc
lds
(bad)
(bad)
stc
cmps
test
icebp
jo
xlat
push
mov
out
sub
inc
dec
in
daa
pop
retf
jno
(bad)
(bad)
(bad)
jnp
shl
sbb
xchg
test
pop
and
mov
ins
jne
adc
lods
or
(bad)
(bad)
inc
pushf
cmc
push
out
mov
into
cld
sub
xor
push
sbb
(bad)
(bad)
(bad)
call
mov
stos
mov
das
push
clc
xchg
cli
das
mov
imul
enter
push
jb
loopne
jmp
add
nop
int3
mov
push
ds
push
adc
loopne
std
(bad)
(bad)
call
xchg
inc
fld
stc
dec
sbb
pop
and
test
or
sbb
xchg
mov
jae
cmp
fsubrp
add
(bad)
jmp
mov
rol
leave
add
test
add
mov
bound
dec
fist
jae
push
dec
cmp
sbb
(bad)
(bad)
(bad)
clc
outs
cmc
ror
xchg
movs
std
mov
add
mov
rcr
pop
pop
mov
push
push
jl
leave
(bad)
fisttp
nop
pop
cmp
sbb
pushf
pop
(bad)
(bad)
(bad)
jmp
pop
mov
push
fdiv
mov
or
adc
cmp
aaa
test
add
inc
pop
int
hlt
sbb
dec
fidiv
fld
cli
(bad)
aam
(bad)
mov
std
(bad)
mov
and
push
out
jo
faddp
xlat
sbb
push
popf
retf
(bad)
(bad)
jg
sub
shr
hlt
mov
je
pop
scas
aas
jae
push
push
inc
xchg
std
inc
fstp
cmps
cmp
or
jo
(bad)
mov
movs
(bad)
(bad)
(bad)
inc
stos
push
push
and
ins
sub
mov
out
or
jle
or
pop
ss
adc
adc
fistp
fsubr
hlt
or
pop
loope
es
(bad)
dec
scas
push
data16
jl
movs
mov
mov
xchg
mov
push
dec
(bad)
pop
push
outs
sub
mov
push
loop
and
movs
xchg
mov
dec
(bad)
fdivr
(bad)
(bad)
inc
std
mov
cmps
sbb
bound
push
jmp
xlat
popa
hlt
mov
mov
push
pop
rol
or
fldenv
jecxz
or
jo
ins
pop
repz
in
xor
xchg
shl
jb
xor
out
xor
call
jae
xor
jmp
int3
ins
popf
stc
shr
and
xchg
hlt
xchg
mov
(bad)
out
cli
pop
sub
inc
enter
and
cmps
and
mov
mov
sti
mov
stos
and
in
and
xchg
push
push
mov
jg
and
loop
inc
or
push
lock
push
les
or
fxch
enter
(bad)
call
mov
loope
cmp
jae
dec
push
jno
pusha
retf
mov
or
(bad)
(bad)
(bad)
dec
fwait
mov
ficomp
fs
mov
xor
xlat
mov
stos
add
aaa
mov
(bad)
call
push
pop
cmc
(bad)
jno
sti
dec
fistp
cmps
cdq
fstp
pop
(bad)
(bad)
jg
cwde
xchg
jle
xchg
dec
jle
pop
xchg
add
in
add
test
(bad)
inc
fistp
and
fild
cmps
add
xlat
data16
stos
ins
pushf
fs
(bad)
(bad)
push
pop
movs
inc
ins
xchg
das
sahf
cmp
ret
das
jno
imul
inc
inc
pop
outs
pop
or
(bad)
(bad)
loope
mov
sbb
cmp
into
icebp
mov
cwde
js
(bad)
mov
(bad)
xchg
sbb
pop
call
std
inc
sbb
or
mov
add
xor
jp
bound
call
es
mov
xchg
aaa
xor
lock
add
jae
arpl
inc
add
retf
ds
(bad)
(bad)
inc
mov
dec
push
mov
sar
xor
dec
jmp
push
xor
jmp
scas
(bad)
(bad)
(bad)
call
inc
pop
repz
sub
add
(bad)
sahf
mov
cmps
(bad)
imul
fbld
or
sub
pushf
mov
lahf
lock
scas
adc
cmc
adc
stc
(bad)
(bad)
(bad)
call
(bad)
push
cwde
ins
cmp
repnz
mov
repnz
push
(bad)
jo
daa
mov
and
sbb
(bad)
(bad)
jmp
push
ins
inc
cmps
int
fbld
pop
mov
mov
mov
aam
jbe
cmp
retf
push
(bad)
jmp
pop
mov
call
dec
and
leave
popa
push
sub
cld
test
icebp
jmp
add
jecxz
lods
push
and
dec
jmp
pop
push
jns
cmp
shr
sub
adc
in
mov
out
fld
std
xchg
(bad)
push
fwait
mov
dec
xchg
sbb
(bad)
fcomip
fs
cli
mov
sbb
mov
fidiv
xchg
mov
adc
dec
mov
jbe
sub
addr16
(bad)
and
dec
(bad)
(bad)
(bad)
call
mov
sar
int
(bad)
stc
ja
mov
and
mov
adc
or
retf
icebp
sub
or
jo
adc
xchg
mov
outs
cli
jg
shl
test
rol
adc
imul
in
int
cmps
out
add
(bad)
(bad)
dec
jge
lahf
(bad)
adc
dec
or
cmp
mov
sbb
push
push
xchg
inc
jns
call
fdivr
mov
pop
push
mov
jecxz
mov
mov
idiv
jmp
call
jns
mov
test
jmp
xchg
push
(bad)
(bad)
inc
cwde
xor
push
daa
arpl
fs
adc
add
push
xchg
leave
jns
aad
(bad)
(bad)
jmp
std
jp
in
out
push
inc
xchg
jg
mov
add
push
push
test
sahf
loopne
out
icebp
shl
(bad)
rol
mov
(bad)
(bad)
(bad)
jmp
scas
xchg
jl
adc
fisttp
xor
test
ret
int
or
mov
lods
or
cld
jl
mov
lods
ret
movs
pop
mov
pop
dec
dec
lds
sbb
(bad)
(bad)
(bad)
push
pop
or
xor
and
jge
mov
in
push
and
cmp
jg
cmc
(bad)
and
adc
addr16
cli
outs
sub
xor
jp
cld
(bad)
inc
call
ret
or
mov
dec
mov
mov
(bad)
(bad)
(bad)
jmp
mov
(bad)
addr16
gs
jo
fcom
js
stos
lods
jmp
and
dec
sub
outs
inc
pusha
cmp
data16
ss
adc
pushf
add
dec
mov
mov
daa
mov
or
inc
jg
push
rcl
inc
out
(bad)
mov
das
cmp
inc
adc
mov
retf
push
adc
ret
xor
cmp
(bad)
(bad)
(bad)
call
sub
inc
push
test
movs
jmp
(bad)
push
daa
xor
jbe
xor
or
(bad)
(bad)
(bad)
call
aam
xchg
cmp
sub
(bad)
fst
and
jmp
(bad)
(bad)
(bad)
inc
shr
mov
scas
sbb
js
out
push
push
mov
imul
cmc
pop
or
push
iret
out
sbb
in
sub
jmp
xor
mov
(bad)
call
or
mov
jnp
clc
sub
pop
lea
or
dec
(bad)
(bad)
(bad)
push
cmp
std
add
imul
add
xor
test
dec
mov
iret
sbb
(bad)
(bad)
(bad)
inc
xchg
mov
fwait
ins
mov
lahf
inc
fcom
stos
imul
dec
pushf
cmp
xchg
je
xor
add
or
or
cs
dec
xchg
sbb
sbb
call
jge
lds
sub
pop
cld
jb
mov
sar
pop
std
(bad)
call
dec
stos
mov
jp
fnsave
xor
lds
add
stos
mov
fst
aaa
pop
cli
call
outs
push
push
pop
lds
jg
(bad)
call
loop
sub
cld
mov
xchg
ja
jg
and
(bad)
(bad)
fnstsw
dec
sub
lods
cmp
xchg
mov
rcl
adc
mov
cmp
sbb
inc
mov
jmp
mov
push
jmp
clc
jmp
mov
add
out
mov
xor
aad
pop
add
mov
movs
push
sti
inc
stc
xchg
sbb
add
dec
(bad)
sub
sub
(bad)
fs
jns
cwde
mov
pop
cmp
stc
jbe
out
hlt
sbb
mov
xor
adc
dec
(bad)
(bad)
(bad)
jg
fimul
pop
mov
cmp
arpl
jmp
cmc
repz
fidivr
bound
jp
fsub
movs
dec
jmp
jmp
cdq
inc
or
mov
mov
mov
add
ds
(bad)
fndisi(8087
aas
fidiv
jns
addr16
int3
cmp
push
mov
and
xor
daa
ds
add
push
test
popa
in
repz
(bad)
(bad)
xor
jp
mov
push
dec
and
xchg
(bad)
js
popf
or
add
rol
(bad)
(bad)
(bad)
inc
iret
fstp
jbe
pop
ins
mov
icebp
leave
in
jbe
pop
call
out
das
jb
lods
fmulp
(bad)
call
std
bound
inc
push
fistp
jp
or
(bad)
lods
push
cwde
pushf
test
call
pushf
(bad)
(bad)
(bad)
jmp
mov
icebp
jp
je
icebp
xchg
popa
rcl
(bad)
out
call
pushw
(bad)
(bad)
(bad)
jmp
loop
and
xchg
inc
out
(bad)
mov
pop
pop
clc
(bad)
je
fidivr
fs
xchg
mov
mov
dec
jo
loopne
ret
out
cs
jb
aad
(bad)
(bad)
(bad)
push
or
mov
int3
test
enter
adc
pop
mov
dec
aad
(bad)
(bad)
(bad)
cmp
scas
jecxz
aad
adc
stc
aam
mov
js
jb
inc
repz
aas
add
(bad)
(bad)
(bad)
(bad)
pop
and
shr
inc
pop
ret
push
cli
(bad)
(bad)
dec
mov
pop
jecxz
sub
push
iret
int
mov
popf
sbb
inc
xchg
jle
(bad)
scas
nop
mov
neg
cmps
(bad)
jns
push
std
pop
push
mov
(bad)
(bad)
jg
or
sub
or
dec
aam
test
xchg
and
adc
leave
fisttp
data16
imul
(bad)
(bad)
(bad)
(bad)
jg
push
repnz
cmp
or
cwde
jne
stos
cmp
enter
fld
jecxz
lods
pop
fadd
popf
inc
xchg
xor
bound
cmp
mov
cli
(bad)
jg
mov
int
pop
sub
adc
push
jg
retf
iret
(bad)
dec
les
mov
pusha
mov
ud1
sbb
fsub
jmp
(bad)
(bad)
(bad)
inc
jo
je
mov
fiadd
retf
fbstp
mov
fst
cmp
nop
test
(bad)
jns
in
xacquire
imul
adc
loope
mov
rcl
int3
cmps
sub
rcr
push
int
adc
(bad)
sbb
adc
dec
or
adc
(bad)
(bad)
(bad)
jg
sub
mov
inc
aam
mov
push
and
nop
aad
aad
xor
or
and
pop
nop
retf
neg
xor
(bad)
(bad)
(bad)
push
xchg
icebp
sub
pusha
pop
mov
enter
dec
cmp
inc
mov
(bad)
(bad)
push
xchg
xor
dec
pop
pop
pop
lock
xchg
cmps
push
fimul
sub
(bad)
dec
fdiv
cmp
push
dec
mov
pop
inc
ret
push
or
(bad)
(bad)
dec
sub
push
scas
adc
inc
cs
inc
inc
es
icebp
mov
(bad)
(bad)
(bad)
jmp
push
inc
rcr
(bad)
retf
test
or
in
sahf
dec
sub
xlat
pop
and
(bad)
(bad)
(bad)
jmp
push
xor
inc
xlat
xor
repnz
mov
inc
pop
sub
outs
sbb
call
push
lods
ss
pop
mov
js
xchg
pop
js
out
mov
inc
xchg
in
popf
mov
pop
ins
mov
mov
sbb
call
xchg
jl
fmul
add
lahf
dec
sub
inc
pusha
sar
sub
(bad)
(bad)
jmp
cwde
inc
fisub
xor
pop
inc
mov
push
test
mov
rcr
bound
(bad)
(bad)
stc
mov
adc
idiv
das
imul
sahf
cmp
aam
sbb
jp
jmp
sub
xchg
scas
aaa
jmp
push
cli
(bad)
jo
push
or
inc
adc
mov
test
(bad)
(bad)
jmp
sbb
add
fidiv
sbb
scas
xchg
mov
push
mov
test
(bad)
jmp
sub
jae
add
mov
add
out
outs
fld
clc
pusha
pusha
int3
jns
icebp
(bad)
(bad)
inc
in
mov
jp
lds
dec
sbb
imul
mov
adc
aaa
in
ins
sub
xchg
jno
ss
xor
(bad)
(bad)
call
mov
dec
jl
mov
retf
mov
xchg
or
data16
jns
idiv
mov
add
das
shl
sub
call
repnz
jg
or
pop
dec
xchg
iret
mov
adc
and
push
adc
sub
pusha
sbb
(bad)
repnz
ret
out
mov
mov
dec
mov
push
pop
or
mov
xchg
ins
pop
add
sbb
inc
es
in
add
push
push
aad
in
gs
push
lahf
icebp
stos
cmovns
popf
push
call
loopne
fcmovbe
or
dec
out
add
adc
sub
(bad)
(bad)
jmp
ret
mov
xor
push
cmp
ss
call
mov
adc
cmp
cld
mov
mov
cs
out
inc
fninit
iret
loopne
fldcw
call
add
mov
or
cli
pop
push
xor
or
(bad)
fdiv
lock
ss
add
push
iret
test
test
add
(bad)
jmp
sbb
jo
dec
mov
mov
dec
fdiv
(bad)
(bad)
(bad)
fist
inc
xor
mov
mov
jo
xchg
sub
sbb
cmp
mov
dec
mov
lahf
or
into
test
mov
mov
or
xor
cli
(bad)
(bad)
out
fldcw
out
xchg
imul
push
inc
mov
aam
sub
pop
dec
dec
cld
es
pusha
push
jmp
fdivrp
inc
adc
xchg
cmc
sub
addr16
and
pop
hlt
(bad)
dec
fcomi
pop
add
scas
shr
rol
ins
aad
cld
dec
push
mov
bound
cmps
inc
(bad)
into
lahf
(bad)
(bad)
(bad)
jmp
inc
cmp
jno
bnd
outs
outs
sub
daa
es
les
aas
or
(bad)
(bad)
jmp
push
pop
mov
dec
adc
push
or
ret
pop
inc
in
xchg
mov
das
(bad)
(bad)
(bad)
dec
add
popa
xlat
add
sbb
and
mov
lock
add
pop
sti
(bad)
(bad)
call
jecxz
mov
arpl
sahf
in
inc
jge
cld
sahf
xchg
mov
pop
jg
in
xor
inc
(bad)
(bad)
(bad)
jg
daa
and
push
mov
cs
push
sti
add
mov
mov
mov
xor
and
(bad)
(bad)
(bad)
push
out
sbb
inc
push
pop
loop
mov
pusha
mov
imul
(bad)
fwait
(bad)
(bad)
dec
jle
xor
lods
test
hlt
das
out
fimul
imul
pop
(bad)
(bad)
(bad)
jmp
pop
in
int
push
cmp
(bad)
push
repnz
loopne
ins
push
push
loop
add
call
lea
ret
movs
ins
outs
mov
xor
jg
clc
dec
xlat
adc
loope
dec
lds
(bad)
(bad)
(bad)
jg
sub
dec
ficomp
mov
cmp
lock
mov
push
sbb
pop
ss
dec
dec
mov
dec
loopne
jecxz
iret
and
adc
aad
jmp
ins
stos
bound
jns
mov
enter
pop
xchg
(bad)
(bad)
(bad)
fbstp
or
mov
fcomp
fcmovbe
ret
jge
inc
popa
aam
data16
out
(bad)
call
cli
loop
enter
mov
scas
pop
je
or
leave
lds
cmps
fwait
ss
pop
push
pop
(bad)
(bad)
(bad)
call
int3
stos
mov
je
cmps
rcl
sub
repz
call
mov
xor
clc
and
cs
add
inc
fdiv
mov
xchg
cs
jb
fst
dec
xor
(bad)
dec
cdq
cmp
push
cmp
adc
sub
inc
jns
fbstp
mov
dec
cmp
fdivr
ds
mov
push
sbb
fwait
(bad)
(bad)
(bad)
inc
dec
fcomp
cmp
xchg
out
cmp
mov
pop
or
into
adc
cmp
lods
ret
mov
or
xor
div
jmp
lods
(bad)
jle
js
push
out
test
xchg
jae
retf
scas
mov
out
(bad)
(bad)
(bad)
(bad)
mov
mov
xchg
outs
or
jmp
and
or
lahf
shr
(bad)
jmp
pop
repnz
mov
dec
xor
and
call
push
test
jnp
mov
leave
push
ffree
idiv
(bad)
(bad)
call
inc
pop
add
and
mov
test
dec
jmp
xchg
add
mov
inc
(bad)
(bad)
(bad)
fcmovnbe
icebp
xor
cmp
adc
mov
loopne
aad
popf
sub
(bad)
in
mov
push
cld
imul
in
stos
fisttp
cmp
xor
sbb
test
mov
or
xchg
xlat
je
sub
ror
(bad)
(bad)
(bad)
call
inc
fwait
in
sar
or
cmp
std
push
add
push
inc
dec
or
das
fs
(bad)
(bad)
jmp
je
int
push
push
dec
into
push
inc
cmp
sub
sub
xor
lods
aaa
cmp
jmp
mov
es
into
aad
test
push
cmp
push
jns
inc
pop
mov
imul
jbe
cmps
retf
cs
cmp
(bad)
jl
shl
push
xor
popf
ret
(bad)
pop
jle
jmp
or
hlt
dec
scas
scas
icebp
push
sbb
sub
jg
(bad)
call
test
and
arpl
push
xchg
(bad)
mov
call
pop
out
jl
sub
iret
xchg
loopne
retf
push
sub
and
(bad)
call
inc
ss
fidiv
pop
add
pusha
pop
cmp
(bad)
(bad)
inc
pop
ss
mov
inc
xor
daa
xor
(bad)
pop
push
adc
mov
retf
or
popa
nop
sbb
pop
dec
inc
xchg
sar
dec
fs
addr16
fbstp
retf
jmp
popa
mov
pop
xchg
jb
stos
les
hlt
mov
loope
(bad)
(bad)
(bad)
jmp
cmp
(bad)
dec
dec
jae
ficom
push
jb
or
mov
xchg
push
pop
hlt
sbb
pop
mov
aas
ins
push
pusha
adc
jo
push
xor
dec
das
xor
stos
loope
cdq
movs
mov
push
test
das
mov
xlat
clc
cmps
mov
add
call
shl
sub
pop
jmp
mov
lods
outs
aaa
jnp
in
add
(bad)
(bad)
(bad)
jmp
xchg
sbb
mov
popa
dec
sar
mov
mov
inc
add
retf
pop
clc
push
into
fldenv
adc
push
and
retf
push
aam
pop
inc
jecxz
jle
fld
les
pop
call
xchg
mov
ror
and
pop
in
out
das
(bad)
sbb
xchg
inc
xchg
push
xchg
pushf
aaa
fistp
(bad)
sub
(bad)
(bad)
(bad)
jmp
mov
pop
pushf
in
repz
xor
fwait
lock
movs
push
nop
push
sub
inc
mov
clc
(bad)
push
fcomp
dec
rcr
mov
xchg
dec
cmps
(bad)
icebp
dec
mov
cmp
mov
and
pop
mov
pop
mov
mov
clc
(bad)
call
cmps
mov
in
mov
xor
outs
add
mov
or
xlat
xchg
je
sar
(bad)
push
mov
shl
mov
add
push
icebp
adc
mov
das
adc
and
out
outs
pop
outs
cs
(bad)
(bad)
(bad)
(bad)
std
and
adc
and
mov
sub
jae
hlt
jno
jmp
and
dec
jmp
sbb
mov
call
dec
mov
shl
(bad)
jmp
jae
xor
loop
aaa
sub
clc
aam
jne
inc
ins
pop
cmp
and
jo
retf
dec
call
adc
jmp
shl
(bad)
xor
(bad)
jmp
push
mov
push
sub
cmp
pop
call
inc
(bad)
cmc
xor
dec
icebp
jl
jno
bound
(bad)
jmp
pop
je
adc
lock
outs
je
or
push
xchg
xchg
and
xchg
mov
(bad)
fst
retf
in
(bad)
fisubr
addr16
pop
test
mov
pop
stos
add
dec
sub
ja
call
cmp
mov
mov
and
jo
push
addr16
call
jmp
adc
mov
cmp
mov
(bad)
jg
(bad)
push
or
aam
mov
pusha
push
jb
adc
ds
(bad)
(bad)
(bad)
mov
cmp
cmps
mov
sbb
out
ret
sbb
add
adc
test
jmp
pop
xor
ins
xchg
je
aad
add
pop
iret
mov
test
repnz
ret
(bad)
(bad)
(bad)
std
retf
pop
popa
pop
call
outs
scas
add
xlat
inc
xchg
lods
jo
(bad)
cmps
imul
(bad)
(bad)
dec
inc
jle
rol
scas
add
pop
mov
pop
mov
in
out
test
inc
adc
(bad)
(bad)
jmp
sbb
and
stos
mov
sbb
xor
and
pop
cs
push
mov
fiadd
add
pop
sti
retf
or
retf
adc
jge
scas
clc
call
(bad)
mov
lods
xchg
jl
xchg
mov
popa
inc
add
ror
call
(bad)
(bad)
(bad)
(bad)
jge
rcr
inc
movs
cwde
test
inc
jnp
dec
imul
cmc
pusha
test
stc
pop
and
fild
call
int3
jno
movs
fstp
test
popa
pop
adc
shr
mov
pop
(bad)
jmp
push
lahf
loopne
push
cmp
popf
shl
push
add
jecxz
xor
xor
mov
(bad)
out
sub
pop
fwait
pop
and
fild
add
push
push
add
push
mov
loopne
add
cs
fs
in
pop
and
or
dec
cmp
sbb
shl
call
cmps
ss
mov
scas
push
rcl
jmp
(bad)
mov
das
cs
(bad)
(bad)
inc
xlat
(bad)
iret
xchg
ret
icebp
retf
(bad)
ins
inc
push
ss
xchg
mov
jge
jbe
pop
push
cwde
cmp
(bad)
(bad)
inc
cwde
sub
push
les
mov
(bad)
adc
push
jae
add
cmp
(bad)
(bad)
dec
test
pop
stos
xor
mov
inc
stos
outs
push
pop
xor
imul
sub
das
push
cdq
push
sar
dec
popf
int
dec
or
jmp
adc
(bad)
(bad)
call
or
into
outs
cmp
jne
mov
mov
mov
mov
push
repz
jg
aaa
lds
mov
or
cmp
adc
retf
clc
cmp
adc
cmp
mov
imul
cmp
sbb
shl
dec
(bad)
jmp
movs
lods
sbb
loopne
cmp
mov
dec
nop
cmp
lods
or
cmp
(bad)
(bad)
(bad)
fadd
ins
jle
cmp
(bad)
in
into
sbb
repnz
fs
je
jg
add
push
xchg
mov
cmps
sub
(bad)
(bad)
call
pop
mul
jl
pop
mov
mov
dec
jne
dec
in
jne
mov
mov
sbb
mov
into
test
ins
addr16
pop
xor
pop
mov
and
inc
fisub
xor
push
mov
int3
jno
movs
js
pop
push
mov
(bad)
(bad)
dec
xor
cmc
ins
add
cmc
xchg
dec
push
movs
call
or
adc
sbb
add
pop
adc
adc
mov
cmps
pop
and
jmp
leave
frstorw
and
dec
add
mov
das
leave
outs
mov
xor
mov
(bad)
(bad)
fbld
lahf
mov
aaa
ds
pop
and
stc
(bad)
pop
pop
imul
cmp
ds
push
(bad)
cmp
cmp
out
and
stos
push
aas
push
int
addr16
dec
rcr
xlat
(bad)
(bad)
inc
lods
mov
outs
or
out
dec
push
jmp
cmps
mov
mov
jg
pop
mov
mov
mov
sbb
sbb
inc
mov
(bad)
(bad)
jmp
cli
test
push
movs
xor
ds
retf
out
fnstcw
xlat
or
mov
push
(bad)
mov
(bad)
(bad)
jmp
addr16
xor
inc
loope
cdq
and
add
(bad)
(bad)
xchg
xchg
enter
scas
hlt
pop
loopne
and
mov
add
mov
in
jo
nop
movs
test
scas
cmp
dec
jo
js
dec
scas
clc
(bad)
jmp
inc
sahf
jge
jno
ja
push
cmp
pop
sub
dec
dec
scas
scas
pusha
ret
in
and
(bad)
(bad)
(bad)
jg
in
pop
clc
pop
pop
div
test
push
pop
test
dec
mov
cmp
cmp
fdivr
(bad)
(bad)
dec
mov
fbld
xlat
or
lahf
aam
addr16
adc
xor
(bad)
(bad)
call
cmp
mov
pusha
push
xchg
jl
xor
dec
nop
xchg
loope
mov
pmaxub
sub
push
jl
inc
outs
jo
mov
inc
sti
in
adc
pop
add
push
xchg
ds
xor
clc
out
cli
xchg
test
push
aaa
shufps
push
scas
pop
cmp
je
(bad)
jb
bound
lods
add
dec
das
xor
pop
xchg
scas
stos
mov
ss
xor
sub
fld
imul
jno
test
mov
mov
inc
mov
mov
cwde
data16
jl
(bad)
and
imul
test
pop
(bad)
(bad)
(bad)
call
add
inc
les
(bad)
fimul
repz
pop
or
ins
bnd
mov
adc
fisttp
(bad)
call
or
add
xlat
iret
fisttp
mov
xchg
fisubr
mov
jnp
(bad)
(bad)
(bad)
call
js
sbb
sub
pop
lds
xchg
jb
outs
inc
xor
xchg
adc
dec
clc
lock
jp
push
(bad)
(bad)
(bad)
inc
sbb
fs
pop
jecxz
mov
mov
sahf
ins
das
(bad)
(bad)
(bad)
push
or
add
test
dec
xor
dec
jnp
scas
je
int
dec
jne
or
(bad)
(bad)
(bad)
(bad)
jle
es
loope
mov
scas
in
xlat
push
lahf
sbb
cmc
gs
leave
scas
inc
lods
(bad)
xor
bound
clc
mov
mov
in
xor
(bad)
enter
fucomi
gs
jmp
cdq
cmp
lods
push
mov
and
fucomi
(bad)
fbstp
retf
sbb
or
push
call
(bad)
push
rcr
movs
cmp
cmc
inc
inc
je
dec
bound
inc
adc
xchg
icebp
je
ds
(bad)
fcom
clc
jmp
sti
jnp
jae
imul
stos
push
movs
or
pop
lock
sbb
cwde
mov
sub
xlat
(bad)
aas
retf
mov
adc
mov
sub
retf
arpl
inc
xchg
cmp
jle
daa
push
daa
ja
(bad)
push
cmc
pop
aad
cmp
mov
push
xchg
bound
pop
call
(bad)
(bad)
(bad)
call
push
push
xchg
or
inc
jge
mov
xchg
jmp
adc
pusha
push
mov
nop
punpckhwd
push
shr
adc
ja
inc
aam
and
and
vdivpd
(bad)
(bad)
jmp
outs
aaa
mov
repz
or
mov
mov
(bad)
or
(bad)
(bad)
(bad)
mov
jmp
cmp
dec
ins
sub
xor
add
inc
mov
xchg
cwde
and
or
mov
(bad)
(bad)
(bad)
inc
inc
cmp
loope
pushf
fisub
loopne
xor
popa
aad
add
pop
nop
jge
bound
(bad)
mov
mov
dec
mov
mov
jp
iret
ins
or
sahf
sar
mov
(bad)
dec
dec
cmp
repz
xchg
jl
jnp
jle
(bad)
(bad)
dec
or
inc
cwde
or
aaa
mov
call
pop
mov
rol
fcmove
(bad)
(bad)
inc
and
push
mov
xor
push
add
jo
imul
clc
ds
sub
(bad)
(bad)
(bad)
jmp
jnp
call
je
xchg
stos
xchg
cmp
push
push
push
ins
xchg
jmp
mov
xor
xchg
ror
sti
sbb
das
dec
outs
push
mov
fadd
inc
cmp
ss
in
mov
loopne
xchg
js
push
jmp
sbb
movs
ret
retf
ds
cdq
xor
push
jge
push
(bad)
out
pop
mov
mov
adc
push
dec
push
pop
mov
xor
arpl
sbb
movs
loopne
js
pusha
sbb
mov
(bad)
jmp
data16
xchg
add
shl
scas
mov
dec
push
mov
mov
aaa
cmc
add
ss
inc
hlt
pop
sub
push
out
xor
(bad)
out
scas
xchg
cld
add
push
addr16
dec
call
jg
mov
cli
jne
dec
dec
xor
popa
pushf
clc
call
jmp
add
and
jbe
add
ficom
mov
xlat
(bad)
(bad)
(bad)
jmp
sub
mov
pusha
into
out
shl
je
sub
pop
and
(bad)
(bad)
mov
push
sahf
das
pop
jmp
xchg
xchg
pop
push
mov
inc
inc
int
rcr
xchg
cmp
(bad)
jg
add
loop
sub
shl
lock
mov
or
pop
inc
loop
push
jne
dec
mov
std
dec
pusha
ret
or
imul
lea
jg
sar
movs
mov
rol
fist
(bad)
(bad)
(bad)
jmp
mov
cdq
mov
fsubr
pop
cmps
fnstcw
scas
ins
push
dec
mov
adc
mov
(bad)
(bad)
(bad)
(bad)
mov
inc
(bad)
push
and
add
call
(bad)
mov
cmp
bound
cmp
enter
cs
(bad)
(bad)
(bad)
call
pusha
inc
jnp
inc
add
mov
cmp
sub
mov
add
jne
jnp
inc
out
leave
adc
mov
out
retf
xchg
shr
cmp
push
mov
dec
out
(bad)
(bad)
call
pop
add
mov
ror
bound
xor
inc
lock
int3
add
xchg
adc
je
leave
cld
jg
jmp
leave
ds
aaa
mov
and
push
pushf
ja
(bad)
(bad)
push
ds
sub
mov
and
dec
outs
push
std
cmp
jnp
add
(bad)
mov
or
rol
enter
mov
ss
mov
(bad)
fistp
sbb
pop
mov
call
es
ret
(bad)
jmp
ja
ss
push
jno
fstp
pop
test
push
mov
push
imul
push
std
jmp
pop
aam
cdq
push
cs
dec
iret
(bad)
aas
out
lea
das
(bad)
(bad)
(bad)
jmp
(bad)
sti
and
adc
mov
xor
or
(bad)
(bad)
jmp
fld
dec
xor
rcr
cmp
jmp
pop
dec
sub
add
jg
call
cli
cmp
cli
cwde
cmp
ins
push
imul
inc
pop
dec
outs
push
sbb
das
retf
pushf
cld
xchg
in
int
scas
jmp
stc
hlt
xbegin
sub
stos
cmps
pop
hlt
(bad)
jg
enter
cld
nop
xchg
mov
ins
jmp
jne
fldcw
fs
mov
and
out
stos
dec
sbb
inc
and
mov
rol
add
(bad)
(bad)
(bad)
jmp
push
loopne
and
dec
sahf
ret
xchg
movs
and
pop
outs
jle
mov
mov
dec
jne
(bad)
hlt
or
xor
mov
xchg
test
and
inc
jb
imul
(bad)
(bad)
(bad)
dec
popf
sub
push
mov
jg
sar
call
ret
aaa
cmps
dec
test
inc
inc
mov
fild
inc
cmps
mov
jbe
aas
sti
add
inc
adc
push
fnstcw
(bad)
(bad)
push
mov
mov
in
les
aaa
aam
js
xchg
pop
pop
fwait
xchg
and
pop
pop
(bad)
(bad)
(bad)
dec
pushf
arpl
scas
sti
ins
sahf
cmp
push
or
adc
or
adc
int3
cmc
dec
inc
(bad)
(bad)
call
sar
les
dec
int3
movs
lea
in
and
push
jbe
(bad)
(bad)
(bad)
push
pop
jle
xchg
clc
xor
test
jns
and
add
mov
mov
in
mov
test
mov
push
std
pop
(bad)
jecxz
xor
xor
ja
push
dec
and
enter
adc
les
retf
xchg
push
aam
cmp
(bad)
(bad)
fild
sbb
sub
and
add
js
pop
and
xchg
(bad)
(bad)
(bad)
push
add
in
cmps
inc
ds
mov
mov
pop
popf
cmp
mov
sbb
movs
retf
(bad)
(bad)
(bad)
(bad)
jmp
push
fwait
shr
ret
jb
mov
pop
and
and
xchg
test
mov
arpl
and
div
js
pusha
movs
pop
or
or
les
cwde
shl
into
push
pop
lahf
adc
mov
(bad)
push
jge
(bad)
sahf
fst
lods
cmp
pslld
mov
mov
test
fcom
daa
sub
push
dec
test
repnz
mov
(bad)
(bad)
(bad)
jmp
lahf
push
xchg
inc
and
xchg
add
mov
stc
cwde
(bad)
imul
not
(bad)
(bad)
(bad)
jmp
movs
fidiv
dec
shr
pop
sbb
jp
push
stos
movs
or
daa
xchg
sbb
sub
(bad)
(bad)
(bad)
call
hlt
jge
ficomp
in
pop
pop
mov
pusha
inc
fldenv
xchg
and
pop
sbb
jmp
mov
dec
test
repnz
cdq
ss
stos
(bad)
jmp
and
cmp
ret
add
out
adc
retf
mov
out
(bad)
(bad)
(bad)
(bad)
(bad)
mov
inc
pop
push
nop
in
fld
push
cmps
sbb
push
and
jo
mov
mov
jl
ins
inc
dec
inc
call
lods
(bad)
(bad)
dec
out
adc
fs
fadd
jmp
fisubr
sbb
(bad)
(bad)
jmp
or
mov
scas
inc
jbe
in
fidiv
cmp
clc
push
cmc
aad
jae
adc
popf
lahf
cmps
push
dec
or
(bad)
call
xor
dec
push
loopne
into
xchg
sub
add
push
mov
cdq
jg
sub
mov
out
xor
sti
lds
(bad)
(bad)
jmp
and
sub
mov
cmp
cmc
js
fisttp
inc
jns
fdiv
inc
(bad)
(bad)
(bad)
call
mov
mov
xchg
fwait
ret
imul
lock
std
xchg
ror
scas
mov
cmp
jmp
xchg
add
(bad)
(bad)
(bad)
jmp
mov
adc
add
cmps
fistp
(bad)
mov
add
(bad)
(bad)
push
outs
push
ret
cmc
sub
adc
mov
shl
(bad)
(bad)
jmp
mov
ret
mov
outs
ds
cdq
jmp
mov
xchg
inc
(bad)
(bad)
(bad)
fisttp
outs
sbb
jl
sti
dec
mov
shr
push
outs
(bad)
(bad)
(bad)
inc
jp
sbb
mov
mov
mov
inc
out
or
inc
cmp
cmp
cmp
(bad)
inc
and
arpl
mov
xchg
sub
mov
dec
pushf
inc
or
fist
aad
pop
and
push
cmp
or
xchg
mov
adc
leave
shl
jl
(bad)
shl
out
test
cli
(bad)
mov
mov
mov
pop
push
clc
(bad)
call
push
sbb
mov
mov
dec
mov
test
cmp
dec
cli
daa
repz
ret
icebp
jmp
sar
sti
mov
cdq
jg
(bad)
(bad)
jp
add
pop
cmp
cmp
dec
scas
push
jg
cmp
in
std
out
out
adc
sar
dec
jg
ins
fild
lds
pop
les
mov
movs
fild
das
cli
(bad)
push
push
neg
pop
and
hlt
neg
dec
cld
dec
ins
ins
xchg
call
aam
and
add
cli
fst
cmp
faddp
sbb
pop
out
pushf
inc
add
(bad)
inc
dec
and
test
mov
push
pop
aaa
scas
popa
dec
ins
call
fild
jmp
cdq
pop
mov
enter
xor
(bad)
(bad)
inc
pop
or
push
adc
jne
in
dec
or
and
scas
pop
rcl
add
mov
(bad)
(bad)
jmp
or
mov
not
xchg
add
xor
fst
clc
jns
retf
xor
dec
cs
je
(bad)
(bad)
(bad)
call
test
dec
push
not
xchg
mov
popf
leave
jns
sub
(bad)
(bad)
inc
cmp
mov
xor
jae
into
cld
xchg
aad
add
das
sbb
dec
jnp
add
jmp
stos
(bad)
call
mov
sar
cmp
dec
xchg
pop
xlat
push
fwait
push
ds
enter
inc
jns
mov
pop
xchg
inc
xor
hlt
sbb
cli
dec
loop
mov
sub
dec
mov
pop
inc
sub
bound
adc
imul
call
and
int3
fxch
repnz
and
lea
leave
add
daa
xchg
jmp
jmp
fidiv
push
jp
dec
mov
cmp
push
mov
(bad)
jge
div
ficomp
aam
pop
jmp
iret
out
sub
pop
shl
(bad)
dec
in
data16
int
sar
pushf
ret
xchg
gs
cmp
cmps
lahf
repnz
jl
lds
(bad)
(bad)
(bad)
fisttp
adc
retf
ins
mov
pop
lods
mov
jmp
sar
adc
outs
sahf
inc
sar
(bad)
inc
dec
out
loope
xlat
and
mov
repz
adc
jg
scas
arpl
add
pop
xor
dec
xchg
ins
fsub
lods
(bad)
jmp
std
(bad)
jmp
sti
or
push
cmp
pushf
cwde
dec
adc
inc
jb
mov
sar
(bad)
(bad)
push
pop
adc
jle
lds
shr
cli
loop
ret
cmps
and
and
fmul
(bad)
(bad)
call
dec
sub
pop
out
sub
cmp
mov
mov
cmps
pop
popf
into
fst
stos
adc
(bad)
(bad)
(bad)
(bad)
inc
adc
mov
dec
pusha
xchg
jl
xchg
dec
cmp
sub
nop
xchg
iret
hlt
adc
jmp
push
jecxz
jbe
shl
popa
dec
xchg
or
jge
pop
sar
inc
cmp
pushf
fidivr
stos
adc
ins
inc
push
lods
out
mov
js
jle
test
push
jno
(bad)
dec
data16
sub
jmp
ss
cmp
mov
sub
xchg
xor
dec
js
cmc
iret
aaa
lods
iret
inc
mov
jne
outs
das
imul
cmp
(bad)
dec
dec
(bad)
(bad)
iret
fmul
xor
mov
dec
cli
xor
jmp
in
xchg
fdivr
dec
add
jne
sub
fwait
out
nop
and
fldenv
(bad)
(bad)
(bad)
dec
popa
cld
cmp
mov
push
mov
test
jne
stc
jge
(bad)
mov
inc
lods
(bad)
xor
sahf
je
xor
test
mov
jge
(bad)
(bad)
(bad)
jle
push
mov
sub
cmp
cmp
xor
test
(bad)
(bad)
push
fdivr
ret
sub
imul
ret
shr
mov
xchg
popf
add
mov
(bad)
(bad)
(bad)
inc
fcom
jecxz
fnsave
and
sbb
lahf
pop
outs
xlat
fs
loopne
adc
mov
aas
mov
add
sbb
mov
sahf
or
and
mov
pop
rcl
(bad)
call
in
push
push
neg
ins
fisubr
jbe
aam
xchg
fisttp
imul
int3
xor
outs
push
push
fwait
rol
aad
fwait
sbb
xchg
dec
popa
push
dec
ja
and
jecxz
or
(bad)
(bad)
inc
pop
pusha
fldenv
adc
in
jno
pop
jmp
ds
cmps
mov
pop
icebp
push
xor
pushf
jmp
int
fprem
mov
mov
and
(bad)
(bad)
(bad)
(bad)
push
and
sbb
(bad)
adc
jbe
push
mov
push
loopne
in
out
sahf
(bad)
jge
mov
(bad)
dec
push
bound
sub
in
shr
pop
xor
ja
sub
rol
(bad)
inc
iret
fist
faddp
jmp
push
sbb
arpl
out
lahf
sub
(bad)
(bad)
call
pop
push
pop
scas
xor
movs
(bad)
movs
out
push
daa
pop
inc
dec
inc
xchg
sub
in
xor
loope
add
sbb
xor
and
mov
push
pop
fistp
in
(bad)
(bad)
jmp
inc
lods
cwde
in
adc
mov
stc
imul
out
push
inc
jne
or
mov
icebp
hlt
mov
js
(bad)
scas
and
inc
into
mov
mov
ret
cmp
int3
(bad)
(bad)
(bad)
push
dec
icebp
stc
mov
imul
scas
xchg
in
repnz
rcl
and
fwait
outs
clc
(bad)
dec
cmp
xchg
jns
jo
cld
scas
sbb
and
xor
sar
(bad)
jmp
inc
not
clc
inc
sbb
mov
ror
adc
(bad)
(bad)
(bad)
jg
pop
pop
fsubr
or
retf
mov
call
xchg
mov
jmp
jbe
(bad)
(bad)
jmp
fwait
cmp
mov
in
add
out
(bad)
enter
jl
push
cmp
push
(bad)
(bad)
(bad)
call
add
nop
fistp
sti
jecxz
pop
xchg
(bad)
push
or
into
cmp
mov
sub
(bad)
(bad)
(bad)
push
xchg
popf
movs
dec
sub
repz
les
cmc
fild
ret
push
mov
popf
test
(bad)
mov
call
xlat
pop
add
loop
ret
mov
std
adc
in
dec
jno
(bad)
(bad)
mov
and
fbld
inc
dec
aaa
daa
lods
ins
rcr
push
paddw
(bad)
dec
enter
cld
jno
inc
sub
imul
mov
mov
(bad)
(bad)
call
movs
mov
jmp
mov
mov
sub
scas
mov
push
das
les
loopne
addr16
inc
add
jbe
dec
push
movs
(bad)
(bad)
(bad)
jmp
test
xor
std
les
pop
scas
xchg
hlt
int
add
xchg
fild
cmp
stc
aam
(bad)
(bad)
(bad)
(bad)
cld
cld
mov
std
push
and
mov
pusha
mov
lods
cld
xchg
add
jnp
xchg
int
(bad)
(bad)
(bad)
push
xchg
push
mov
xchg
and
add
push
hlt
stc
popa
ss
js
mov
dec
push
stos
sbb
aam
pop
stos
pusha
popa
(bad)
adc
mov
(bad)
(bad)
jmp
mov
sub
aas
or
xchg
mov
mov
add
mov
repz
push
adc
int
icebp
outs
and
test
(bad)
(bad)
(bad)
cmp
stos
pop
not
nop
jae
call
xor
inc
xor
jb
sbb
vmwrite
mov
pop
mov
in
and
xor
pop
fistp
pop
push
(bad)
(bad)
mov
fdiv
lock
and
cld
mov
int3
mov
(bad)
lods
dec
mov
(bad)
(bad)
call
pop
ins
scas
sub
xchg
add
sub
xor
fld
in
dec
inc
sahf
pop
mul
bound
fadd
(bad)
(bad)
inc
test
mov
repz
and
aas
lds
sbb
sbb
mov
jmp
jg
mov
and
cmp
push
cs
retf
pop
xor
or
push
out
mov
(bad)
(bad)
jmp
adc
mov
pop
inc
sbb
lods
stos
and
(bad)
(bad)
(bad)
jmp
add
mov
inc
xchg
sbb
sbb
addr16
and
pop
(bad)
(bad)
(bad)
inc
mov
jecxz
outs
mov
stos
xchg
xchg
cmp
aad
mov
fst
call
fs
mov
inc
cmp
cs
shl
or
jecxz
(bad)
(bad)
dec
movs
inc
jmp
and
xchg
movs
rcr
sub
fisubr
push
test
(bad)
call
sbb
xchg
ret
addr16
outs
into
sub
cmps
mov
cwde
or
call
jne
out
stos
mov
les
(bad)
(bad)
(bad)
jge
ds
sub
mov
xor
xor
inc
xchg
mov
and
xchg
rcl
mov
mov
fsub
popf
xor
(bad)
push
std
cmp
xchg
fnsave
(bad)
out
shr
cmp
push
mov
pop
mov
cmp
dec
xor
jo
xchg
xchg
es
lea
(bad)
(bad)
mov
ja
and
sti
in
int
jae
(bad)
sbb
leave
push
call
pop
xor
fisttp
add
pop
js
sbb
shl
popa
movs
mov
cmp
mov
mov
cmovb
(bad)
(bad)
loopne
or
ret
mov
(bad)
out
cli
std
es
add
sahf
jp
jg
sbb
mov
xchg
inc
aaa
cmps
(bad)
pop
mov
sbb
cld
xchg
mov
movs
dec
cdq
or
ror
adc
rcl
and
ss
int
test
inc
inc
pop
icebp
(bad)
call
lahf
cs
inc
sub
xchg
cld
inc
not
cmps
xlat
icebp
fcos
(bad)
(bad)
push
cmps
adc
or
or
cli
jecxz
jnp
mov
dec
popf
dec
add
lods
aad
add
dec
(bad)
xchg
or
pop
mov
mov
test
ret
cmps
sar
(bad)
jg
das
push
test
lods
mov
sbb
lods
les
(bad)
dec
push
push
adc
arpl
ret
xchg
cmp
(bad)
jmp
or
rol
icebp
xchg
mov
or
inc
pop
repz
into
add
cmp
fiadd
inc
cmp
pushf
mov
call
jecxz
dec
push
les
ret
or
stc
inc
mov
ret
push
jge
inc
into
jmp
dec
dec
jge
shl
je
xlat
call
add
movs
imul
inc
jmp
dec
loopne
dec
inc
(bad)
(bad)
inc
push
sbb
repz
into
cmps
dec
out
clc
ja
int3
cmps
(bad)
sbb
add
or
add
lahf
jl
clc
retf
js
dec
rol
repz
add
fadd
inc
int3
sub
(bad)
jmp
adc
jae
stos
out
into
fwait
xchg
call
jbe
jno
push
movlps
call
jne
push
pop
les
mov
or
mov
push
and
lock
out
adc
in
xchg
std
iret
cmp
scas
(bad)
jb
(bad)
(bad)
call
(bad)
xchg
dec
in
icebp
mov
cmp
div
mov
std
mov
xlat
(bad)
(bad)
(bad)
(bad)
jmp
mov
(bad)
loopne
jmp
jae
out
jle
dec
jl
mov
iret
test
call
into
stc
cdq
dec
add
cmp
mov
pop
call
es
iret
les
shr
jb
(bad)
(bad)
(bad)
out
mov
in
or
mov
jge
mov
adc
xchg
mov
mov
out
sbb
imul
test
adc
push
stos
jae
ret
xor
(bad)
(bad)
inc
stos
leave
push
dec
iret
jge
rcl
dec
add
sbb
fs
stc
inc
mov
(bad)
(bad)
call
push
xchg
and
lahf
adc
pop
jg
das
xor
test
cmp
shr
sub
xor
shl
ds
(bad)
jmp
cmp
popf
outs
or
push
dec
dec
test
ds
lahf
dec
or
int3
stos
push
in
repz
xlat
jno
(bad)
fcmovbe
inc
jge
mov
jg
ror
out
mov
enter
gs
addr16
mov
inc
test
jo
fs
call
mov
mov
mov
jns
outs
clc
(bad)
(bad)
clc
in
add
retf
into
mov
les
sub
mov
les
(bad)
jg
add
loopne
call
call
pushf
xor
sub
(bad)
(bad)
(bad)
jmp
movs
or
nop
sub
jnp
and
iret
xor
cmp
add
push
rol
cmc
rol
(bad)
(bad)
(bad)
jmp
adc
push
sub
dec
or
add
cmps
test
jno
sub
out
(bad)
xchg
js
lods
(bad)
(bad)
(bad)
(bad)
out
int
pop
scas
pop
sbb
rol
fcomip
xchg
cmp
pop
call
ss
push
sub
jg
mov
push
or
loop
rcl
into
xchg
xchg
pop
pop
icebp
push
jp
cmc
mov
popa
nop
dec
sbb
sub
cmp
(bad)
push
pop
pop
adc
dec
inc
mov
dec
lea
adc
shl
mov
call
loopne
jecxz
scas
push
dec
sbb
cmp
stc
sbb
mov
lds
cmp
hlt
(bad)
(bad)
jns
in
mov
pop
je
movs
bnd
or
cmp
push
cmc
(bad)
(bad)
push
jg
mov
fnsave
sahf
mov
adc
scas
push
icebp
cmp
pusha
jg
cmps
(bad)
fisttp
sub
int3
fwait
ret
pop
call
lods
xchg
cmp
dec
sbb
mov
cmps
call
test
pop
sti
(bad)
push
(bad)
test
aam
add
jno
imul
mov
out
(bad)
(bad)
jg
pop
mov
cdq
push
gs
ret
xchg
mov
lahf
out
xchg
inc
cmc
pop
cdq
shr
(bad)
(bad)
inc
pop
push
out
dec
cmp
scas
jbe
or
sbb
outs
jnp
out
xlat
jne
hlt
icebp
(bad)
jmp
or
jmp
jns
call
imul
(bad)
(bad)
(bad)
mov
fnstenv
pop
rcr
mov
fdivr
in
inc
sub
xor
xchg
mov
pop
pop
movs
push
std
jmp
mov
ja
mov
test
(bad)
mov
outs
xchg
into
stc
shl
test
ins
dec
mov
mov
mov
jmp
or
sbb
sti
push
cmp
pop
cmp
out
lods
fistp
xchg
data16
cld
or
mov
mov
in
add
loopne
jg
inc
add
sub
jg
xchg
cli
or
mov
push
popf
inc
in
add
fisub
cwde
pop
es
adc
(bad)
jg
cli
sbb
or
shl
jmp
outs
push
and
pop
push
(bad)
(bad)
(bad)
push
lahf
outs
pop
scas
mov
cmps
jl
out
iret
scas
test
and
shl
lods
out
aad
(bad)
(bad)
jmp
cmp
enter
xchg
jle
in
sahf
js
mov
inc
rcr
repz
dec
call
xchg
mov
push
jg
cmp
inc
inc
xor
pop
push
fdiv
(bad)
jmp
adc
jne
xchg
pop
mov
push
cli
push
mov
fs
std
or
adc
jle
(bad)
jmp
hlt
dec
out
sbb
or
mov
push
mov
mov
jl
add
inc
adc
push
sar
and
push
pop
dec
sub
lock
sbb
repnz
pop
lock
cmc
jno
nop
or
mov
jae
into
mov
(bad)
movs
lea
push
push
(bad)
(bad)
fcomip
jmp
mov
inc
mov
imul
jl
xor
adc
push
(bad)
fcomip
(bad)
mov
inc
inc
mov
cli
aaa
cdq
(bad)
retf
pusha
sbb
push
mov
sbb
jp
repnz
test
sti
imul
(bad)
(bad)
jg
stc
sar
cwde
mov
in
dec
outs
lods
ins
addr16
les
(bad)
(bad)
out
call
fwait
inc
cld
sbb
test
(bad)
(bad)
push
add
aam
and
js
xor
xchg
push
mov
xchg
int
sar
(bad)
inc
fucomip
xor
rcl
push
pop
adc
pushf
stos
push
push
in
lahf
aad
add
push
inc
test
imul
(bad)
jmp
xor
xlat
push
les
sbb
retf
xchg
popa
push
movs
jg
(bad)
jmp
jns
stos
xchg
jle
in
scas
xor
mov
cmps
js
jmp
stos
xchg
or
(bad)
call
jl
jmp
cmp
lea
jl
or
mov
sub
jecxz
hlt
or
nop
ins
iret
call
call
xchg
mov
cld
push
out
mov
int
addr16
jno
cmp
(bad)
into
cmp
inc
jmp
pop
(bad)
(bad)
mov
sbb
mov
pop
fidiv
test
xchg
ret
data16
(bad)
(bad)
(bad)
dec
ret
xor
mov
add
cdq
outs
sbb
lods
outs
stos
(bad)
(bad)
(bad)
jg
mov
inc
dec
into
out
xchg
aad
jb
jno
add
sti
lds
pop
imul
(bad)
(bad)
(bad)
inc
mov
lods
push
xor
push
out
cmp
sahf
in
in
sbb
jo
jmp
mov
mov
(bad)
(bad)
call
outs
or
jmp
or
(bad)
or
bswap
enter
push
inc
dec
lds
xchg
and
test
shl
cmp
ficomp
(bad)
pop
(bad)
(bad)
(bad)
dec
or
inc
dec
inc
ret
movs
xor
fbstp
inc
addr16
pop
jg
jbe
mov
(bad)
(bad)
(bad)
dec
aaa
jp
imul
fwait
sbb
mov
push
mov
sbb
push
(bad)
(bad)
(bad)
(bad)
(bad)
mov
sbb
leave
jbe
mov
mov
xchg
sub
xchg
(bad)
(bad)
(bad)
dec
or
jp
dec
mov
ror
jbe
popf
mov
pop
(bad)
(bad)
(bad)
call
and
xchg
(bad)
aaa
or
lea
mov
ins
mov
push
dec
movs
(bad)
dec
jl
push
inc
mov
loop
ss
pusha
cwde
adc
and
sbb
clc
imul
(bad)
(bad)
mov
shr
mov
scas
test
rol
sti
push
mov
(bad)
(bad)
(bad)
cmp
pushf
imul
xchg
xor
mov
xchg
xchg
loope
adc
adc
call
stos
ret
add
bound
in
mov
jae
call
dec
pop
dec
and
shl
leave
into
and
pop
xchg
push
inc
mov
sub
jle
mov
dec
adc
(bad)
(bad)
call
dec
daa
xor
jl
imul
pusha
mov
push
mov
in
data16
aam
(bad)
(bad)
(bad)
call
out
inc
mov
fdiv
cmovp
hlt
test
popf
fs
adc
or
push
adc
cmp
scas
inc
jmp
xlat
sbb
mov
mov
pop
call
test
adc
xor
(bad)
cmp
xor
out
aas
jbe
and
rcr
aas
mov
and
(bad)
push
adc
dec
jb
sub
mov
pop
pop
xchg
pop
daa
test
dec
cs
(bad)
rcl
cmp
mov
outs
aaa
fldcw
ss
frstor
aad
clc
pop
dec
(bad)
(bad)
cmp
pop
push
fidiv
mov
jl
or
das
mov
cld
outs
pop
(bad)
call
std
outs
add
mov
sbb
xor
and
leave
ret
ins
xor
sub
retw
xor
int
popf
fisttp
cmp
out
(bad)
(bad)
jmp
js
xlat
jmp
sbb
ds
int3
cmp
pop
push
(bad)
inc
lds
rol
jo
mov
outs
cmp
push
in
adc
mov
xchg
les
mov
and
xor
sub
popf
pop
mov
mov
test
inc
adc
in
add
cmp
movs
add
push
cmp
dec
outs
in
pop
cmp
(bad)
call
ds
xor
mov
sub
and
mov
mov
test
(bad)
(bad)
inc
mov
mov
or
cli
jno
jg
cmp
call
call
test
cwde
gs
out
jmp
ins
movs
xchg
(bad)
(bad)
(bad)
jp
mov
pop
or
(bad)
dec
or
pushf
fs
fidiv
fiadd
sub
inc
clc
inc
cs
loopne
cld
int
bound
into
fisubr
pop
sbb
aas
mov
sub
sbb
loop
mov
push
cmp
pop
outs
into
mul
mov
inc
add
adc
out
(bad)
(bad)
jg
inc
lea
stos
add
xor
jmp
jno
or
shl
jg
(bad)
jmp
xchg
ficom
push
xchg
adc
jb
sub
(bad)
jmp
mov
xchg
push
ret
neg
stc
ja
fistp
mov
mov
call
sbb
(bad)
pushf
inc
dec
pop
je
in
mov
movs
add
aad
hlt
in
and
pop
je
sbb
or
push
or
xchg
mov
call
test
cld
xchg
in
mov
push
fbld
cmp
cld
dec
out
cmp
gs
retf
mov
jge
xchg
sbb
cs
(bad)
mov
mov
push
hlt
popa
add
push
js
(bad)
call
lock
pushf
jecxz
xchg
mov
and
(bad)
retf
(bad)
inc
push
mov
dec
aad
cdq
loopne
ins
mov
jmp
loopne
push
out
cli
dec
clc
imul
mov
mov
mov
xchg
add
inc
push
(bad)
jg
stos
mov
add
jns
call
stos
and
inc
jmp
int3
ins
mov
pop
inc
fisttp
push
das
sar
in
xor
mov
sub
cdq
fist
jnp
jmp
lea
dec
and
cwde
into
push
push
sub
(bad)
jmp
mov
out
ja
pop
inc
and
jo
fmul
xor
jbe
xor
jo
dec
sub
std
(bad)
(bad)
(bad)
inc
test
shl
sbb
dec
sar
test
icebp
cmp
xchg
mov
pop
inc
mov
push
inc
jmp
loop
inc
jne
sar
arpl
inc
push
sbb
xchg
add
mov
inc
leave
push
cmps
add
add
int
mov
push
or
mov
clc
(bad)
jle
mov
test
or
xrelease
aas
jge
mov
jmp
sbb
cmp
mov
lfs
mov
mov
in
hlt
outs
xchg
lock
stos
mov
mov
cmps
fcomp
cmp
call
das
mov
out
pushf
fidiv
out
hlt
ins
pop
out
adc
inc
jb
(bad)
(bad)
(bad)
call
(bad)
and
(bad)
cwde
inc
ins
mov
push
es
or
call
outs
cwde
pop
sbb
cwde
adc
fld
sbb
cs
sub
dec
jl
mov
cld
(bad)
fcomip
mov
xor
ds
addr16
data16
outs
imul
sub
sub
addr16
xchg
fistp
mov
push
mov
push
mov
mov
mov
add
je
adc
cli
(bad)
jge
out
xchg
repz
cld
mov
mov
das
movs
push
xchg
shr
cdq
push
shr
xor
jle
int
call
push
or
xchg
jle
pop
fnstcw
mov
pop
sti
sbb
inc
jo
xchg
(bad)
(bad)
jmp
cld
stos
aad
mov
pop
nop
out
pop
push
lock
xchg
mov
sbb
add
adc
(bad)
(bad)
call
jp
pop
jno
aad
repz
mov
aam
inc
ins
pop
iret
out
mov
and
adc
add
(bad)
(bad)
cli
jns
jbe
out
cs
jle
jae
shl
or
pop
push
(bad)
(bad)
(bad)
call
and
rcl
mov
inc
jns
xchg
xor
iret
push
xchg
loopne
adc
cwde
cmp
lock
dec
inc
loopne
scas
nop
aaa
pop
and
(bad)
test
pop
fs
sar
pusha
adc
sti
mov
clc
jae
mov
call
and
nop
push
(bad)
(bad)
fbstp
aas
dec
jl
sbb
sbb
push
out
dec
cmps
mov
call
jmp
push
pop
jns
cmps
add
loope
pop
jl
push
sbb
push
es
adc
pusha
(bad)
call
fcom
or
push
cld
adc
out
pop
cmps
mov
adc
mov
std
cmps
push
cmps
mov
out
int
push
sti
sub
(bad)
(bad)
(bad)
ds
sub
pop
in
xchg
in
in
and
cli
inc
daa
inc
or
dec
cmovno
cdq
(bad)
(bad)
call
mov
test
jae
pop
adc
sub
xchg
jg
mov
int3
(bad)
(bad)
(bad)
push
pop
xchg
js
test
inc
dec
lea
fsubr
cmps
mov
mov
(bad)
(bad)
dec
(bad)
repz
out
cmp
xchg
aaa
scas
push
push
out
inc
jns
or
(bad)
sub
xor
(bad)
jnp
out
test
enter
adc
xor
mov
sar
jb
sti
(bad)
(bad)
(bad)
jmp
and
outs
xchg
mov
push
out
les
mov
scas
call
cmp
xor
mov
(bad)
call
sbb
and
mov
mov
ins
pop
fs
(bad)
mov
into
mov
sahf
add
sbb
push
pop
lods
xchg
sar
call
mov
push
jmp
ret
out
lods
fwait
sub
add
(bad)
lds
stos
fbstp
mov
test
xchg
fst
(bad)
aam
or
sub
call
retf
mov
mov
mov
(bad)
(bad)
push
xchg
addr16
(bad)
push
lds
mov
aaa
inc
enter
(bad)
adc
cmp
dec
jo
xchg
jp
xchg
adc
(bad)
(bad)
call
xchg
dec
lahf
addr16
outs
mov
add
aaa
or
dec
outs
ror
mov
cmc
pop
rcr
iret
or
sbb
push
lahf
jle
cmp
loop
xor
(bad)
mov
test
je
inc
push
cwde
iret
cmp
xor
cdq
jnp
mov
(bad)
(bad)
(bad)
jmp
loopne
scas
jns
loopne
fld
call
enter
xchg
outs
cld
inc
and
cli
(bad)
(bad)
jmp
mov
popa
push
add
dec
test
mov
ret
dec
ret
je
mov
xchg
add
sbb
std
inc
cmp
inc
jl
jne
shl
mov
pop
(bad)
push
retf
outs
pop
aad
dec
ins
popa
nop
ret
in
sbb
mov
dec
add
cld
(bad)
(bad)
(bad)
(bad)
jle
push
retf
das
mov
(bad)
scas
int
and
mov
xchg
adc
call
cmp
in
cli
and
push
punpckhdq
push
packuswb
loope
call
dec
fcomp
jle
dec
pop
cmp
jnp
add
sub
pop
jge
int3
pop
fdivr
jmp
or
pop
cmp
push
push
(bad)
xchg
popa
xor
or
push
call
test
addr16
cmc
sub
(bad)
dec
mov
inc
mov
or
das
jnp
fisttp
ret
push
sbb
in
mov
jmp
rcl
aaa
sbb
nop
mov
jl
sbb
pop
mov
dec
ret
push
xor
cmp
jmp
aam
push
xor
jno
xor
mov
cmp
adc
mov
inc
mov
loopne
jmp
cs
pop
mov
popa
fmul
imul
jnp
sbb
call
(bad)
fdivr
dec
(bad)
(bad)
(bad)
jmp
and
pop
das
sub
jae
mov
shl
aad
jne
push
fidivr
sub
(bad)
(bad)
(bad)
inc
dec
call
inc
loope
pop
inc
in
movs
pop
jo
pop
gs
cmp
(bad)
adc
mov
sbb
inc
xchg
sub
in
mov
and
dec
lahf
dec
pop
xchg
in
out
adc
pop
cmc
call
mov
mov
loope
cmps
mov
(bad)
imul
push
inc
ja
cli
call
mov
mov
out
adc
fisttp
xchg
adc
xor
sub
call
mov
jl
scas
cmp
dec
mov
or
or
mov
(bad)
push
sub
fisubr
call
push
pusha
imul
dec
fild
sar
call
and
mov
leave
(bad)
stc
jg
nop
pop
aam
push
or
(bad)
jmp
jo
xchg
fdivr
dec
gs
add
add
adc
xlat
(bad)
(bad)
(bad)
inc
mov
fldcw
pop
loop
sbb
scas
adc
pop
in
sub
or
(bad)
(bad)
fild
call
je
dec
xor
jl
jns
xchg
and
sti
enter
push
mov
add
inc
in
hlt
inc
and
sub
(bad)
mov
mov
out
movs
xchg
rol
mov
movs
imul
(bad)
jmp
inc
sub
sti
cmp
ja
dec
sub
push
retf
xor
lahf
imul
pop
loopne
(bad)
call
xor
fild
and
das
cmp
add
ins
or
repnz
cmps
sbb
jp
or
cmc
int3
dec
std
aam
cmps
(bad)
jg
outs
call
jecxz
out
rcr
rol
mov
call
(bad)
(bad)
(bad)
call
or
test
retf
push
int
fdivr
mov
jnp
retf
xchg
js
push
jns
mov
(bad)
(bad)
(bad)
(bad)
inc
and
ss
sar
(bad)
sub
test
or
xor
cwde
(bad)
adc
fnsave
out
cmps
mov
mov
add
add
daa
xor
jnp
xchg
mov
adc
(bad)
call
dec
sub
push
call
bound
pop
popf
fistp
retf
(bad)
dec
movs
(bad)
push
(bad)
mov
add
jno
mov
jge
clc
fstp
sub
mov
cwde
adc
mov
xor
test
(bad)
inc
sbb
or
ret
or
sbb
inc
inc
jl
ja
xchg
jle
and
push
clc
(bad)
(bad)
(bad)
ds
or
clc
mov
pop
fwait
fwait
iret
xor
nop
pop
mov
fisttp
leave
fwait
dec
(bad)
(bad)
jmp
retf
in
sbb
push
pop
cmp
xor
das
mov
sar
cmc
(bad)
call
sbb
call
push
enter
mov
into
(bad)
(bad)
(bad)
jg
pop
mov
aam
mov
add
adc
push
imul
out
push
add
test
push
(bad)
(bad)
(bad)
(bad)
fadd
jmp
in
les
mov
fwait
mov
xor
addr16
js
and
call
pop
or
jl
push
pop
retf
or
movs
mov
jbe
mov
push
fwait
adc
(bad)
(bad)
aas
mov
mov
mov
lods
leave
xor
ins
xlat
inc
dec
les
ins
mul
(bad)
inc
push
es
outs
push
jbe
(bad)
ins
jl
jmp
(bad)
(bad)
mov
adc
pop
sbb
cmp
fisttp
lahf
aad
fild
ins
stos
push
cld
popa
dec
xchg
(bad)
(bad)
(bad)
jge
iret
or
add
xlat
scas
mov
shl
dec
pop
outs
push
leave
mov
(bad)
(bad)
(bad)
push
std
jbe
leave
push
cmp
inc
push
add
push
je
mov
cmp
jo
xchg
sub
(bad)
(bad)
push
or
xor
sbb
inc
push
adc
jb
imul
test
xor
movs
fidivr
loop
xchg
rcr
lods
adc
xchg
fcmovb
and
(bad)
call
out
into
add
test
(bad)
mul
ja
and
movs
pop
out
jmp
(bad)
int
pop
xchg
pop
jle
mov
test
mov
xor
loope
call
add
je
push
sub
ret
(bad)
(bad)
(bad)
mov
jno
add
or
imul
jae
xchg
or
(bad)
(bad)
dec
div
dec
(bad)
rol
ja
addr16
pop
call
mov
out
sbb
hlt
inc
mov
sbb
mul
scas
dec
xchg
out
retf
call
js
sbb
or
leave
cld
adc
and
fs
test
push
or
mov
cmp
jp
dec
dec
(bad)
scas
test
les
(bad)
mov
call
sti
fiadd
stc
out
adc
xor
std
rcl
pop
xchg
leave
fs
arpl
jno
mov
call
loopne
and
dec
jge
xchg
outs
sub
or
adc
pop
xchg
mov
(bad)
inc
std
enter
mov
mov
shl
add
bound
mov
pop
or
and
(bad)
jmp
and
jb
inc
jecxz
int3
or
jbe
and
xchg
xchg
lods
sar
(bad)
(bad)
inc
push
ss
sub
pop
call
out
cld
jecxz
push
jmp
mov
xor
jp
(bad)
(bad)
(bad)
(bad)
mov
xor
scas
dec
cli
ficom
mov
enter
adc
(bad)
(bad)
(bad)
jmp
test
push
in
inc
popa
dec
gs
cld
sub
add
mov
xchg
(bad)
(bad)
(bad)
dec
scas
sub
pop
aaa
or
mov
icebp
cmps
mov
jb
mov
into
stos
cld
(bad)
(bad)
jmp
sti
(bad)
in
repz
ins
jne
add
out
and
mov
or
(bad)
(bad)
fild
inc
std
fs
inc
mov
mov
mov
pop
outs
sbb
test
lock
fs
push
mov
sbb
and
(bad)
jg
inc
mov
iret
arpl
mov
jbe
adc
or
(bad)
(bad)
(bad)
jmp
xchg
div
(bad)
out
and
call
cdq
mov
add
shl
call
(bad)
cli
loope
cmc
xchg
or
mov
dec
repz
cmp
loopne
jno
sahf
into
add
mov
(bad)
(bad)
call
ins
mov
jnp
xor
das
or
adc
mov
dec
pusha
repz
dec
ins
cmp
pop
cmc
idiv
(bad)
jmp
movs
lock
adc
icebp
jl
sub
or
lods
mov
(bad)
jmp
call
cmp
(bad)
jecxz
push
dec
jns
dec
rcr
push
in
cwde
mov
fadd
cmp
(bad)
out
clc
(bad)
jne
std
xlat
ret
arpl
push
cmp
or
(bad)
(bad)
dec
cmp
stos
adc
or
push
cs
(bad)
(bad)
(bad)
(bad)
in
xchg
dec
inc
out
push
inc
stos
mov
test
cwde
int
add
cmps
mov
out
xchg
js
test
loopne
or
(bad)
cmp
popa
(bad)
cmps
sbb
xor
out
mov
dec
(bad)
(bad)
call
loop
sbb
jns
mov
(bad)
mov
movs
mov
(bad)
mov
push
pop
push
(bad)
(bad)
(bad)
dec
and
mov
mov
loop
pop
icebp
popa
ret
pop
inc
mov
adc
xchg
(bad)
(bad)
(bad)
call
addr16
ss
sub
xor
sub
lods
sbb
push
lods
push
mov
call
add
and
sbb
sub
mov
shr
dec
jmp
hlt
mov
(bad)
jg
int
fcom
dec
ss
jmp
sar
cmps
lock
paddw
(bad)
jmp
lock
cmps
cmp
xadd
(bad)
sbb
jp
cmp
shl
xchg
mov
mov
push
inc
sub
push
pop
call
leave
pop
sub
es
aaa
mul
enter
(bad)
(bad)
(bad)
jmp
jbe
xchg
cs
xchg
sahf
shl
mov
in
dec
int3
(bad)
adc
sub
(bad)
(bad)
fstp
das
icebp
sub
ror
add
add
adc
push
sbb
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
or
cmp
jmp
xlat
add
mov
(bad)
jmp
test
jne
fidiv
cmp
fimul
dec
iret
ds
(bad)
(bad)
stc
sub
and
sub
jle
xor
mov
test
scas
push
ret
(bad)
jmp
std
test
sub
xor
rcr
xchg
gs
in
pop
sbb
into
pop
dec
or
jg
cmp
adc
sub
clc
jecxz
add
(bad)
aam
push
push
sbb
inc
sar
(bad)
in
pop
sub
fadd
sub
fst
sub
or
xchg
pop
int3
cmc
mov
stos
lock
stos
lods
jg
rcr
jbe
cmp
in
es
cmp
mov
in
(bad)
add
(bad)
fs
(bad)
(bad)
push
arpl
push
movs
pop
test
push
mov
jmp
mov
xchg
push
dec
(bad)
(bad)
(bad)
call
push
pop
pop
fnstcw
sub
les
dec
cmc
mov
push
idiv
(bad)
(bad)
(bad)
push
das
dec
mov
push
sti
xor
jmp
sub
sub
xlat
(bad)
(bad)
(bad)
(bad)
stc
ss
push
mov
sar
mov
dec
mov
in
mov
xlat
(bad)
jmp
sbb
sahf
(bad)
(bad)
(bad)
jg
inc
or
or
push
mov
jp
adc
in
pop
cwde
mov
pop
mov
push
das
sbb
sar
call
in
mov
pop
lods
in
cs
inc
cmp
(bad)
(bad)
call
xchg
push
js
js
ret
cmp
sti
sub
jns
pop
or
cld
pop
or
(bad)
(bad)
jmp
xchg
jne
push
imul
loopne
stos
push
movs
push
push
cmp
jle
fist
(bad)
jmp
jns
xor
addr16
rol
ja
mov
lods
out
adc
xor
cmp
(bad)
(bad)
(bad)
cmp
fwait
and
adc
inc
pushf
jp
fldcw
adc
hlt
jg
add
dec
(bad)
xchg
test
(bad)
fcomi
retf
cmp
lahf
sub
mov
stos
lods
mov
movs
add
mov
adc
(bad)
inc
sar
xor
or
inc
daa
pop
(bad)
xchg
mov
inc
mov
test
pop
call
std
das
cmp
out
aam
loope
test
mov
jmp
(bad)
(bad)
jmp
test
movs
cmps
dec
mov
lods
fsubrp
jg
cmp
cld
inc
sbb
(bad)
(bad)
jmp
hlt
pop
xor
shl
mov
ins
rol
test
fs
call
xchg
cdq
cmp
call
dec
(bad)
(bad)
(bad)
push
mov
jno
push
sbb
mov
fidiv
loop
add
push
sub
hlt
sub
adc
(bad)
(bad)
(bad)
jmp
jp
dec
cdq
cmps
sub
fild
aas
push
retf
adc
cs
(bad)
mov
or
pop
ret
xor
adc
stc
test
lods
push
cld
sub
cmp
outs
or
fisttp
punpckhwd
xchg
jnp
add
(bad)
(bad)
cmp
xor
addr16
ds
push
(bad)
adc
inc
pop
inc
add
(bad)
(bad)
(bad)
push
ret
loopne
ret
cmp
push
pop
xor
inc
xchg
push
sub
aas
sbb
repnz
sbb
jo
cdq
sbb
stos
fstp
add
cmp
imul
fdivrp
call
cli
mov
mov
mov
dec
cmp
bound
jg
add
jmp
adc
es
(bad)
(bad)
(bad)
(bad)
sti
push
popa
mov
pop
sub
mov
(bad)
pop
dec
dec
xor
mov
(bad)
inc
cmps
pop
and
dec
xchg
jbe
jns
fiadd
rol
push
test
mov
call
sbb
push
out
stc
in
cli
push
imul
mov
pop
enter
out
or
into
xor
std
dec
cld
jp
mov
mov
push
outs
add
(bad)
(bad)
jg
or
in
or
cmp
fwait
pop
mov
sbb
jle
jmp
and
mov
(bad)
jmp
cmc
lods
lea
call
and
jg
mov
adc
(bad)
(bad)
(bad)
(bad)
cli
lock
xor
mov
pop
sub
jmp
mov
mov
dec
pop
jp
mov
sub
arpl
jg
ins
std
sbb
push
scas
sahf
adc
inc
dec
lea
stc
cmp
push
pop
inc
dec
dec
addr16
in
and
movs
sbb
(bad)
(bad)
cdq
daa
(bad)
aam
(bad)
(bad)
call
js
lods
test
aas
rcl
cmps
out
les
pop
add
xchg
mov
jmp
(bad)
lahf
mov
jb
jns
jne
lods
push
(bad)
(bad)
(bad)
out
fdivr
mov
sbb
je
mov
dec
inc
dec
mov
into
fist
test
(bad)
(bad)
call
test
xchg
push
inc
ins
and
imul
ficom
cs
jge
xlat
(bad)
(bad)
dec
adc
sub
shl
hlt
jns
push
sub
mov
repnz
inc
stos
and
xchg
sbb
je
ins
call
cmps
sub
daa
push
mov
std
sbb
xchg
xchg
fmul
jmp
mov
sbb
in
(bad)
(bad)
dec
(bad)
retf
cmps
mov
jge
xchg
aas
jb
jae
pop
jb
scas
movs
fs
fidivr
cmp
pop
pop
(bad)
(bad)
(bad)
jmp
push
data16
cli
mov
mov
jmp
xor
cld
sub
push
(bad)
out
(bad)
(bad)
(bad)
inc
iret
retf
es
pop
and
stc
shl
rol
cmp
jmp
and
adc
imul
cmp
mov
call
or
fnstenvw
and
ret
aaa
or
push
fdiv
push
stos
out
jo
jno
mov
push
hlt
and
pop
cmp
mov
(bad)
out
cwde
cwde
fld
xor
(bad)
(bad)
mov
sbb
jno
pusha
or
adc
mov
call
mov
xor
pop
mov
ftst
retf
xchg
in
(bad)
(bad)
(bad)
push
xlat
loopne
push
sbb
push
jmp
arpl
fdivr
and
(bad)
jns
xor
movs
ror
std
and
mov
sar
jmp
xchg
popf
addr16
xchg
mov
jno
addr16
cmp
cmps
mov
(bad)
(bad)
(bad)
(bad)
jg
xor
xchg
pop
push
xchg
movs
jmp
inc
sahf
sbb
mov
pop
pop
iret
leave
(bad)
(bad)
(bad)
push
daa
data16
or
js
repnz
(bad)
out
aad
xchg
out
jmp
jnp
scas
fmul
in
inc
push
pop
daa
idiv
sbb
in
dec
(bad)
(bad)
jmp
add
mov
icebp
xchg
movs
and
ins
pop
pop
push
iret
rcr
dec
push
mov
adc
adc
add
out
add
pop
(bad)
fbld
inc
imul
mov
(bad)
sbb
mov
test
xchg
les
or
(bad)
std
cmp
inc
push
inc
sbb
stos
dec
out
fdiv
mov
mov
push
ret
rcr
mov
lea
lds
test
adc
and
aam
cmp
jbe
xor
mov
push
nop
mov
sbb
(bad)
(bad)
call
in
push
pop
xor
cmc
int
fstp
leave
mov
or
fmul
(bad)
(bad)
(bad)
call
mov
mov
jecxz
xor
sub
or
mov
push
ja
(bad)
sti
or
(bad)
(bad)
(bad)
mov
pop
lods
stos
xchg
xlat
or
pcmpeqb
cmps
and
mov
xchg
sar
dec
mov
mov
cmc
test
jmp
xchg
and
(bad)
(bad)
(bad)
jg
dec
push
les
out
push
(bad)
xor
test
xor
inc
mov
bound
std
(bad)
(bad)
jmp
(bad)
sahf
(bad)
and
mov
imul
aaa
std
jmp
dec
inc
hlt
loop
leave
mov
xor
inc
cld
jp
xchg
push
or
sar
fdivr
imul
ins
mov
jmp
jg
jmp
call
and
push
aam
cwde
test
mov
sub
sbb
(bad)
call
or
xor
(bad)
or
aam
das
sbb
xlat
push
or
sbb
jnp
inc
(bad)
jmp
shr
dec
xlat
popa
adc
sub
movs
xor
shl
mov
cld
or
cs
mov
call
dec
mov
cwde
lock
dec
dec
adc
leave
jl
daa
daa
xor
add
aam
(bad)
(bad)
(bad)
fisub
pop
jne
and
pushf
xchg
or
stos
xlat
mov
test
cmp
xchg
sbb
pop
(bad)
(bad)
jg
nop
jmp
cmc
neg
test
or
(bad)
jmp
jl
mov
daa
mov
pop
call
ret
call
xchg
shl
push
jl
inc
call
(bad)
(bad)
dec
xor
mov
je
mov
int3
and
inc
push
pop
dec
ins
jp
ss
sub
(bad)
(bad)
call
jnp
call
jmp
jne
inc
and
sbb
in
push
(bad)
(bad)
(bad)
jmp
add
dec
repnz
out
outs
add
inc
ds
or
out
jge
jo
xchg
push
in
(bad)
jg
jmp
(bad)
push
aam
stos
into
dec
xor
in
ret
div
sbb
(bad)
(bad)
dec
dec
or
sbb
leave
cdq
jnp
outs
fbld
sbb
mov
rcr
push
dec
dec
frstor
pop
cmp
mov
icebp
sbb
lock
add
add
(bad)
(bad)
call
clc
dec
xchg
push
pop
test
ss
dec
mov
rcr
cmps
ins
pop
inc
mov
idiv
(bad)
jmp
mov
shl
stos
imul
js
das
mov
(bad)
(bad)
(bad)
jmp
test
iret
sbb
inc
mov
mov
jg
mov
xor
test
js
sub
mov
sbb
xchg
ins
cdq
mov
pop
(bad)
(bad)
in
call
or
cmp
or
mov
sbb
out
cmc
in
add
add
push
retf
push
jg
jp
loop
nop
and
cs
dec
jl
rol
repnz
clc
call
dec
sbb
and
pop
jecxz
int
sti
pop
mov
(bad)
jmp
xor
mov
mov
ins
in
test
mov
inc
mov
(bad)
mov
sbb
sbb
scas
(bad)
jmp
(bad)
dec
push
clc
into
mov
fsubr
cld
(bad)
(bad)
push
and
lahf
mul
push
scas
dec
jnp
pop
or
(bad)
jg
and
dec
or
(bad)
adc
(bad)
jmp
call
in
lahf
adc
int3
pop
test
push
movs
ret
cwde
add
call
sti
fist
clc
jne
icebp
jno
xor
xlat
add
add
(bad)
(bad)
dec
scas
(bad)
das
sbb
add
mov
xor
adc
ret
xchg
jno
outs
mov
out
lds
add
rcr
jg
out
fdiv
xchg
(bad)
jg
les
(bad)
shl
mov
(bad)
call
ret
loope
enter
lds
and
int3
cmps
pop
push
cmp
mov
(bad)
(bad)
push
ss
jl
pop
cmp
mov
imul
sub
test
aaa
in
jmp
sar
jg
pop
lods
pop
les
push
aaa
cmps
(bad)
(bad)
(bad)
push
add
adc
add
fisttp
sbb
fdiv
sbb
clc
out
push
sub
fild
xchg
push
in
js
dec
in
test
lahf
movs
jl
rcl
call
push
cmps
xchg
push
retf
jne
imul
retf
repz
pushf
sub
fist
(bad)
push
push
sti
cwde
shr
adc
pop
mov
mov
sbb
cwde
outs
cli
inc
ja
scas
imul
cmp
sbb
lds
imul
inc
div
retf
ret
jmp
pop
(bad)
(bad)
(bad)
dec
xchg
in
outs
inc
dec
imul
xor
sub
outs
dec
adc
(bad)
(bad)
(bad)
inc
and
mov
inc
mov
lods
sbb
push
pop
add
dec
iret
(bad)
jmp
dec
in
mov
shl
or
jle
dec
xchg
loop
(bad)
fcomip
dec
push
cs
mov
sub
pop
test
and
ret
dec
mov
(bad)
(bad)
jmp
pop
mov
mov
hlt
(bad)
repz
push
xor
sbb
cli
(bad)
call
(bad)
pop
fadd
(bad)
in
imul
inc
repnz
in
in
(bad)
(bad)
(bad)
jl
out
test
popa
add
jbe
mov
inc
pop
sub
rol
push
cmp
int
mov
hlt
cli
(bad)
(bad)
call
mov
outs
movs
adc
and
std
xchg
rol
dec
es
jbe
and
das
(bad)
(bad)
(bad)
out
pop
push
es
mov
loope
nop
dec
push
das
lahf
cdq
add
xabort
xchg
(bad)
(bad)
(bad)
jnp
les
cmp
(bad)
mov
scas
sub
nop
std
or
popa
ja
loopne
int
add
(bad)
(bad)
call
add
xchg
int
aas
jge
out
loopne
jns
xchg
and
ja
rcr
sub
(bad)
(bad)
call
pop
rol
cmp
arpl
imul
or
cmps
(bad)
(bad)
(bad)
(bad)
cmp
jae
and
test
jmp
jmp
jg
movs
sub
cs
(bad)
(bad)
(bad)
dec
dec
cmp
sub
sbb
test
mov
aaa
enter
cmp
(bad)
(bad)
push
xchg
fidiv
mov
aad
and
pop
inc
ret
xor
cmp
(bad)
(bad)
jl
cmp
call
or
repz
add
ss
fnstenv
add
(bad)
(bad)
inc
(bad)
outs
rol
out
add
ins
jnp
adc
not
fist
xchg
(bad)
push
mul
cmp
jns
out
adc
cmps
and
aas
sub
jmp
jmp
mov
pop
adc
imul
imul
mov
mov
addr16
inc
pop
jle
(bad)
xchg
ret
test
mov
pop
or
es
(bad)
inc
je
loope
call
icebp
jo
call
(bad)
(bad)
(bad)
dec
(bad)
in
pop
nop
mov
cs
repnz
push
ins
push
add
pop
jmp
test
mov
inc
mov
add
pop
xchg
push
pop
cmp
dec
int3
(bad)
inc
cld
imul
push
loope
cmp
xlat
xor
cmp
(bad)
call
je
mov
jge
lods
jp
sub
mov
pop
sbb
(bad)
mov
sbb
xor
mov
mov
fnsave
icebp
push
mov
cdq
push
(bad)
call
lods
repnz
and
mov
aaa
pop
push
add
xchg
sub
push
or
stos
in
mov
(bad)
(bad)
mov
add
and
add
mov
adc
rcl
xchg
mov
push
cld
xchg
(bad)
sub
adc
mov
rcr
pushf
adc
mov
add
ret
(bad)
dec
das
inc
pop
jg
das
push
or
lods
xchg
lods
rol
add
sbb
cld
(bad)
dec
and
pop
fs
ss
sub
in
in
push
push
into
cwde
(bad)
call
jmp
test
std
mov
mov
rcr
(bad)
jmp
adc
xor
shl
fsub
data16
bound
jo
(bad)
(bad)
dec
fld
mov
or
jle
shl
jp
mov
scas
adc
scas
jmp
mov
pop
rcl
add
mov
loope
(bad)
call
add
push
dec
mov
mov
into
ja
mov
or
loopne
mov
stc
retf
nop
scas
add
call
test
xchg
pop
jg
sbb
clc
push
fdivp
(bad)
(bad)
(bad)
out
mov
imul
sub
or
sub
rcl
pop
ins
aam
mov
cmp
dec
loop
and
ret
(bad)
adc
das
aaa
and
(bad)
(bad)
(bad)
cmp
in
retf
stos
cs
clc
(bad)
sub
xchg
test
cwde
dec
xchg
outs
shl
push
push
(bad)
jmp
rcl
jmp
add
cmp
cmps
mov
fadd
int3
xchg
cmp
(bad)
(bad)
dec
jb
cmps
ror
inc
sub
inc
out
jmp
loope
loopne
pop
(bad)
(bad)
(bad)
jmp
or
popf
jge
add
nop
mov
out
xchg
mov
scas
pushf
in
cs
or
ss
fcos
(bad)
(bad)
call
dec
ds
aaa
or
movs
jae
call
or
xor
retf
adc
mov
cmp
xor
icebp
es
jmp
lock
xchg
popa
shl
outs
clc
dec
fcom
into
mov
scas
fcomp
mov
jmp
in
push
pop
icebp
(bad)
inc
cmp
xchg
mov
pusha
sahf
das
mov
push
mov
dec
retf
call
push
mov
lahf
stos
sub
mov
and
fild
sar
(bad)
call
xor
xor
shr
adc
and
stos
mov
mov
(bad)
(bad)
(bad)
call
xchg
mov
xor
mov
jl
inc
and
ds
and
jle
aad
jl
(bad)
out
(bad)
pop
inc
pop
icebp
jg
mov
addr16
iret
addr16
loopne
les
cwde
in
sbb
(bad)
(bad)
(bad)
jmp
xor
jmp
loope
jne
lock
push
aad
adc
sbb
sbb
cmp
enter
(bad)
(bad)
(bad)
inc
xchg
cmc
cmp
adc
xor
mov
mov
mov
clc
jmp
out
mov
add
jle
inc
fcom
and
(bad)
(bad)
(bad)
data16
or
fs
std
xlat
sub
fbstp
and
or
(bad)
jmp
ja
ins
lods
mov
jecxz
xor
repnz
inc
hlt
push
popf
shl
push
xchg
sti
das
or
stos
or
add
add
ret
shr
ins
lea
cli
stos
jne
push
call
call
sub
pop
arpl
aas
ds
push
mov
shr
inc
add
mov
(bad)
fcomip
into
push
xor
out
fsubr
mov
mov
mov
inc
dec
inc
cld
call
cld
inc
jno
mov
in
aas
nop
cmp
sbb
cmp
jmp
adc
sbb
cmp
pop
or
xor
ja
mov
mov
cli
push
sar
(bad)
iret
pusha
mov
out
cmp
ror
add
dec
cmp
scas
scas
mov
rcr
mov
lds
add
retf
std
(bad)
(bad)
jmp
shl
xor
push
paddw
icebp
xor
jg
mov
ins
jns
aad
(bad)
jg
or
or
imul
inc
pushf
addr16
in
(bad)
(bad)
(bad)
(bad)
(bad)
faddp
out
xchg
mov
push
jnp
mov
inc
xor
push
pop
hlt
out
inc
jmp
mov
les
sub
sbb
xchg
shl
(bad)
(bad)
mov
inc
daa
loopne
sahf
in
sbb
mov
push
loope
(bad)
inc
mov
xor
jp
mov
das
xchg
out
shl
and
push
inc
(bad)
(bad)
fcomip
xchg
add
lds
xor
inc
push
ins
test
out
in
out
(bad)
(bad)
call
jmp
mov
loopne
(bad)
pusha
jo
add
or
cmc
clc
(bad)
(bad)
(bad)
jg
shr
fisttp
or
mov
sar
push
sahf
or
pop
cmp
(bad)
(bad)
(bad)
ficomp
dec
mov
mov
jmp
popa
inc
(bad)
jp
sbb
lea
inc
sbb
out
inc
xchg
add
adc
pop
jmp
cmp
jle
or
and
mov
repnz
or
inc
mov
(bad)
(bad)
call
dec
xlat
xchg
xchg
xchg
test
(bad)
aad
inc
sar
stos
jae
into
inc
das
pmuludq
dec
(bad)
(bad)
(bad)
dec
icebp
fs
jl
xchg
icebp
arpl
dec
div
or
adc
jmp
pop
mov
cmp
push
xor
fcomip
(bad)
jg
movs
loop
arpl
(bad)
and
and
inc
out
add
jg
in
imul
(bad)
call
add
push
out
cmp
xchg
mov
push
shr
inc
je
fbld
add
jl
ret
sub
and
(bad)
(bad)
inc
add
add
daa
sub
in
pop
rol
rcl
xchg
in
xchg
sub
jmp
clc
(bad)
(bad)
inc
in
js
xchg
ret
cld
(bad)
sub
fnstsw
or
std
(bad)
(bad)
(bad)
out
fsubr
xchg
lods
mov
test
pop
xchg
lahf
ss
xchg
pop
out
test
call
mov
and
and
sbb
inc
inc
or
xchg
push
cld
jmp
jp
xchg
dec
push
mov
pusha
jl
stos
bnd
nop
(bad)
(bad)
(bad)
dec
pop
and
jno
or
push
loop
dec
pop
mov
stc
dec
ds
dec
sub
(bad)
(bad)
inc
ret
jb
loopne
rcr
mov
sar
adc
adc
das
clc
(bad)
dec
ret
inc
and
cs
hlt
js
test
lods
xchg
xchg
(bad)
(bad)
(bad)
push
sar
push
int
xchg
xchg
mov
cmp
dec
sub
lods
in
sahf
xchg
or
jge
add
pop
retf
arpl
out
mov
or
pop
retf
add
(bad)
(bad)
(bad)
mov
sti
aam
scas
pushf
dec
pop
and
arpl
xchg
in
sub
mov
push
(bad)
(bad)
(bad)
jmp
push
cdq
fcomp
dec
aas
aam
(bad)
jne
sub
and
mov
jmp
push
cld
mov
or
sbb
dec
call
cdq
lock
adc
(bad)
call
loope
fs
mov
stc
mov
xchg
and
arpl
sti
adc
cmc
call
call
add
jle
lock
icebp
sbb
inc
sbb
or
frstor
(bad)
(bad)
(bad)
(bad)
cld
retf
out
and
jge
arpl
mov
ja
inc
pop
addr16
pushf
and
jo
in
movs
jl
and
xchg
daa
pop
inc
loop
lock
and
jmp
ret
dec
retf
push
adc
sub
imul
or
out
cmp
pop
ins
cdq
out
icebp
stos
lods
cdq
call
ss
cmovg
imul
push
push
das
repz
mov
(bad)
(bad)
mov
push
pop
stos
stc
dec
(bad)
jmp
adc
sahf
cli
imul
ret
inc
jb
fwait
or
jg
dec
xor
in
pop
stos
add
je
ins
fs
dec
popf
movs
push
sbb
sub
(bad)
dec
inc
mov
retfw
enter
add
mov
push
mov
out
add
mov
popf
stos
(bad)
(bad)
dec
cdq
add
or
stos
xor
call
cmp
(bad)
xlat
push
sub
(bad)
(bad)
(bad)
(bad)
dec
adc
inc
ins
xchg
sar
ret
pop
js
cmp
cmp
jnp
mov
aaa
(bad)
(bad)
(bad)
inc
shl
loope
pop
dec
icebp
dec
pop
outs
mov
loop
out
dec
dec
sub
and
or
(bad)
(bad)
dec
xor
leave
sub
ret
clc
aam
call
inc
xchg
(bad)
jmp
and
(bad)
(bad)
fnstsw
sbb
jge
pop
mov
in
jge
mov
mov
xor
inc
mov
xchg
and
(bad)
mov
fistp
and
push
push
mov
xchg
dec
pop
imul
int3
adc
and
lods
pushf
jp
nop
pop
icebp
pop
pop
pop
das
and
or
sbb
push
push
imul
popf
pop
jae
(bad)
(bad)
call
movs
dec
push
mov
push
mov
rcl
fst
push
std
jmp
xchg
gs
sub
lock
push
test
cdq
(bad)
push
mov
push
adc
test
rol
jge
loop
cmp
fwait
dec
arpl
(bad)
(bad)
dec
mov
(bad)
bound
jno
xchg
jnp
add
popa
inc
mov
mov
lock
shr
std
cs
outs
jecxz
pop
jb
xchg
jmp
mov
outs
clc
or
and
jns
in
addr16
push
or
push
int
call
ja
add
out
into
jp
cmps
and
and
ja
xchg
jmp
call
dec
sbb
ret
mov
cmps
lods
mov
ins
cmp
addr16
push
out
hlt
stos
pop
xchg
mov
scas
iret
gs
push
mov
std
out
call
(bad)
jg
in
shr
jge
push
cmc
retf
add
popa
bnd
aas
sbb
(bad)
jg
test
mov
dec
jno
xor
jp
cdq
inc
lds
lock
fwait
aad
(bad)
(bad)
(bad)
jg
int3
add
mov
repnz
popa
pop
xor
sbb
adc
stos
cmp
out
iret
adc
(bad)
(bad)
dec
cld
sub
cmp
xlat
stos
inc
addr16
add
stos
es
mul
repz
sbb
adc
ja
(bad)
std
imul
fwait
jecxz
adc
cdq
push
push
outs
pop
mov
(bad)
mov
movs
mov
mov
cli
add
xor
mov
retf
sar
(bad)
call
add
lock
xor
mov
and
or
les
scas
(bad)
call
jle
sub
ins
jmp
fidivr
sbb
sbb
sbb
lods
in
outs
xchg
or
(bad)
jmp
xchg
sub
push
mov
push
(bad)
mov
(bad)
(bad)
fisttp
cmps
in
xor
mov
sub
in
mov
cdq
rol
jg
nop
std
sbb
adc
cmp
lock
ficomp
pop
scas
sub
call
push
cmc
call
call
jb
call
(bad)
(bad)
(bad)
call
in
das
clc
jge
enter
xor
les
fisub
in
or
xchg
jae
dec
xchg
(bad)
(bad)
call
enter
cs
pop
mov
retf
dec
jnp
jae
dec
mov
(bad)
(bad)
push
adc
in
cmc
je
mov
pushw
jmp
imul
sub
call
inc
aad
pop
adc
push
sbb
xor
cmp
rol
cmp
inc
aaa
scas
cli
push
push
cmps
scas
sbb
or
out
(bad)
(bad)
(bad)
call
sub
test
mov
mov
mov
lock
sub
mov
sti
(bad)
(bad)
(bad)
inc
adc
push
and
xchg
arpl
loop
test
inc
xchg
xor
(bad)
(bad)
push
rol
dec
popa
ret
imul
pop
inc
iret
push
pop
enter
mov
jns
jmp
mov
test
loopne
in
(bad)
loopne
iret
cmp
mov
(bad)
jmp
inc
push
mov
jne
stc
sub
mov
mov
jmp
xchg
cli
sbb
xor
out
adc
dec
test
mov
(bad)
inc
aad
enter
xor
es
jno
pop
stos
sar
sub
inc
cmps
call
or
mov
add
inc
and
sar
(bad)
dec
adc
call
adc
jno
call
mov
stos
clc
pop
cmc
jmp
mov
dec
fstp
mov
test
out
test
int
push
leave
clc
add
mov
cmp
mov
mov
retf
adc
pop
or
lahf
clc
cmp
xor
dec
jp
xchg
push
mov
clc
mov
mov
stc
(bad)
(bad)
(bad)
mov
sub
out
(bad)
stos
mov
sbb
scas
cmp
and
push
cld
fwait
je
ja
cmc
cmp
in
pop
int3
jb
idiv
dec
and
(bad)
(bad)
dec
or
iret
fiadd
lds
xor
add
xor
shl
and
push
(bad)
(bad)
(bad)
dec
adc
pop
leave
sti
sub
cmp
ins
das
fld
loopne
es
xor
xchg
mov
sbb
ins
sub
cmp
aaa
retf
shl
mov
sar
(bad)
(bad)
fwait
(bad)
in
mov
push
bound
hlt
(bad)
push
pushf
mov
xor
mov
inc
arpl
lock
mov
inc
pop
mov
out
and
(bad)
(bad)
(bad)
fcom
jg
rol
cmp
push
jbe
adc
fcom
push
aam
(bad)
(bad)
out
(bad)
aaa
add
or
mov
je
jo
popf
xchg
sar
pop
cmp
(bad)
(bad)
jmp
movs
sbb
mov
push
cmp
jne
sub
bound
(bad)
push
pop
sbb
(bad)
(bad)
jmp
call
xor
test
cli
fwait
or
std
jle
sbb
not
ret
cmp
adc
(bad)
(bad)
dec
ins
sbb
mov
hlt
add
adc
xor
loope
jb
inc
(bad)
(bad)
(bad)
(bad)
mov
leave
pop
xchg
fwait
add
add
push
scas
xor
inc
leave
scas
cli
call
lock
les
dec
loopne
cmp
mov
cld
je
(bad)
(bad)
(bad)
(bad)
cld
fcmovnbe
inc
dec
ret
mov
pop
adc
add
and
xchg
mov
pop
(bad)
(bad)
(bad)
(bad)
stc
icebp
outs
mov
push
mov
mov
out
jecxz
repnz
add
pop
ins
(bad)
(bad)
(bad)
dec
ins
push
pop
push
mov
out
jae
rcr
add
lock
lods
mov
iret
cli
(bad)
(bad)
jmp
(bad)
std
popf
mov
stos
add
jbe
movs
sbb
sub
pop
mov
(bad)
(bad)
(bad)
(bad)
je
ss
mov
ror
pop
push
adc
rol
(bad)
fidivr
inc
adc
inc
mov
iret
nop
mov
mov
xchg
xor
es
loop
pop
loopne
mov
add
shl
push
sahf
fs
jg
add
out
and
mov
(bad)
(bad)
jmp
add
dec
out
push
or
mov
inc
push
rol
cmps
daa
gs
cmp
(bad)
(bad)
dec
inc
jmp
fild
call
xor
adc
sbb
inc
jno
test
sub
(bad)
(bad)
dec
pop
adc
not
inc
push
stos
xor
std
cmp
xor
mov
call
(bad)
(bad)
(bad)
inc
imul
cli
mov
push
xchg
test
fbld
dec
(bad)
mov
(bad)
(bad)
inc
sub
push
enterw
xchg
repnz
mov
dec
clc
(bad)
(bad)
inc
not
mov
sbb
mov
adc
clc
jbe
jg
arpl
add
push
(bad)
jmp
sbb
jle
pop
ror
movs
loope
mov
call
pop
lahf
mov
mov
adc
ja
dec
xor
jg
ja
xchg
mov
mov
xor
stos
xor
leave
popa
inc
and
mov
fbld
sbb
adc
fsqrt
(bad)
nop
inc
pop
pop
(bad)
(bad)
(bad)
inc
mov
test
jae
dec
jmp
cmp
xchg
mov
push
(bad)
push
adc
adc
(bad)
(bad)
jmp
ror
clc
jmp
pop
fisttp
test
out
pop
lds
sub
(bad)
(bad)
(bad)
fiadd
mov
popf
pusha
xor
xor
pusha
push
push
and
pop
jg
adc
stc
push
jbe
gs
(bad)
in
(bad)
fist
dec
clc
dec
sbb
repnz
in
xor
shr
dec
(bad)
dec
xor
(bad)
(bad)
inc
lahf
cmps
es
and
xchg
push
or
cmp
push
or
jmp
aad
into
lods
imul
(bad)
dec
loop
inc
clc
imul
fdivr
(bad)
(bad)
jg
ret
add
aas
sub
lods
dec
cld
add
fisubr
ja
loop
int3
cmps
enter
mov
dec
(bad)
sub
into
mov
and
call
add
clc
sti
jmp
or
jmp
ficom
call
cmp
repnz
int3
mov
fimul
jg
push
int3
(bad)
(bad)
(bad)
push
add
pop
call
(bad)
in
and
dec
jne
popa
sbb
(bad)
popf
mov
fistp
lock
retf
(bad)
aaa
std
(bad)
call
adc
in
xor
out
adc
cdq
(bad)
std
mov
xor
mov
cmp
adc
(bad)
mov
mov
scas
pop
cmps
cld
cld
jb
and
(bad)
(bad)
push
pusha
scas
cmps
(bad)
xor
ret
imul
pop
pop
(bad)
int
(bad)
(bad)
(bad)
jg
in
jo
dec
jmp
ficomp
pop
fldenv
or
dec
shl
dec
es
pop
jno
std
pop
push
loopne
je
or
or
(bad)
inc
dec
test
(bad)
js
cli
sub
pop
and
dec
(bad)
inc
std
sbb
or
xchg
cld
mov
sub
je
lahf
sub
(bad)
(bad)
jmp
jle
(bad)
xor
jecxz
push
(bad)
in
(bad)
(bad)
out
push
ror
(bad)
jmp
cmp
sbb
cdq
inc
and
mov
je
stos
push
dec
lock
jmp
pop
and
or
stos
clc
ins
mov
pop
mov
loop
bound
idiv
outs
cli
push
xlat
cmp
js
push
mov
(bad)
(bad)
(bad)
push
cmp
push
iret
and
dec
dec
cmp
xchg
dec
xchg
ret
sti
jl
push
inc
or
jbe
sub
push
pop
(bad)
call
xchg
cs
ins
std
daa
mov
leave
push
cmps
jb
(bad)
(bad)
(bad)
cmp
inc
sub
mov
retf
and
pop
int
das
pcmpgtb
adc
pop
or
rcr
fisttp
ja
dec
je
test
xchg
(bad)
mov
xchg
inc
scas
cmps
(bad)
(bad)
jmp
mov
in
push
mov
push
aaa
sbb
push
addr16
jmp
xchg
push
push
(bad)
(bad)
(bad)
jmp
pop
retf
lahf
cmp
sub
int3
xor
data16
(bad)
mov
movs
sub
mov
add
(bad)
jmp
dec
cmp
nop
fsub
(bad)
in
shl
mov
mov
pop
(bad)
dec
push
test
loopne
cmp
push
test
call
sub
loop
ds
jne
repz
loope
test
(bad)
fcomip
mov
mov
cmp
and
sub
mov
call
mov
push
dec
add
push
cwde
in
mov
mov
lds
jmp
xor
enter
mov
ret
int3
cmc
cmp
shl
scas
cmp
test
dec
pop
pop
push
les
mov
fmul
sbb
cld
test
std
pop
fcomip
imul
and
and
adc
adc
shr
sar
call
push
ret
(bad)
(bad)
outs
inc
call
xchg
add
fs
test
outs
(bad)
dec
add
push
adc
adc
jle
or
and
arpl
(bad)
(bad)
dec
aad
mov
test
mov
popa
sub
repnz
dec
jmp
mov
imul
(bad)
jmp
or
pop
(bad)
bound
mov
(bad)
fbld
(bad)
cwde
ds
mov
push
lock
pusha
lods
in
pusha
stc
pop
into
(bad)
(bad)
(bad)
jmp
xor
je
mov
cs
mov
jge
cmp
sbb
(bad)
fsubr
xor
(bad)
cmp
cli
xchg
loop
aas
dec
xchg
sar
fcmovnbe
xchg
jle
test
(bad)
or
adc
in
jmp
sar
pop
adc
xchg
jno
arpl
mov
xchg
div
lock
jae
(bad)
(bad)
(bad)
(bad)
call
cmps
mov
mov
dec
push
nop
aam
push
cmp
sti
mov
adc
xor
(bad)
(bad)
(bad)
call
enter
fdiv
jb
(bad)
pop
or
ucomiss
daa
xchg
shl
test
(bad)
dec
(bad)
data16
dec
and
mov
inc
arpl
push
jmp
popa
bound
adc
add
loop
push
cld
call
jmp
jae
jno
or
retf
or
jge
(bad)
stos
(bad)
(bad)
(bad)
call
int3
sub
jl
pop
cmps
leave
pop
inc
lds
mov
inc
jb
ins
mov
push
xchg
fcomp
sar
jmp
fstp
fnstenv
mov
cmp
inc
pop
and
test
fcmove
test
or
(bad)
call
pop
std
lods
inc
mov
push
jne
cmp
or
and
ret
imul
lahf
and
out
(bad)
test
(bad)
xchg
jne
jge
mov
mov
adc
cmc
out
cli
push
sar
cwde
or
movs
std
fcomip
push
aam
ds
jns
hlt
lds
jp
xchg
cmc
push
cld
cmp
mov
add
ins
fmul
add
in
(bad)
(bad)
(bad)
cmp
cmps
sub
outs
add
and
ficom
mov
push
fbstp
and
xlat
jecxz
jg
mov
ds
int3
xchg
sbb
dec
jmp
jg
test
or
icebp
dec
xor
movs
aas
mov
aaa
cld
scas
js
scas
push
xor
or
mov
pop
jbe
dec
out
cld
fcomip
jmp
jmp
mov
jmp
fcmovbe
in
aaa
or
call
mov
std
out
xchg
xchg
cmps
pop
mov
pop
hlt
in
jecxz
(bad)
dec
call
mov
imul
outs
adc
xchg
inc
mov
ret
(bad)
(bad)
call
cwde
or
sahf
(bad)
idiv
fbld
addr16
es
pop
add
dec
in
push
(bad)
(bad)
cmp
jo
test
repz
add
scas
test
jmp
sbb
fcomp
sar
ss
cmp
sbb
(bad)
(bad)
(bad)
mov
jg
jbe
adc
outs
daa
(bad)
loop
retf
or
cmp
daa
cs
mov
(bad)
fcomip
fwait
in
cs
xchg
out
mov
add
jbe
push
sbb
jmp
outs
cmp
ins
push
push
sbb
xchg
inc
movzx
mov
shl
(bad)
jmp
cmp
xlat
jg
or
dec
test
pop
fisubr
adc
(bad)
(bad)
(bad)
call
mov
sub
or
jmp
mov
ja
ins
cmc
les
(bad)
(bad)
(bad)
call
mov
ret
pop
push
and
mov
xchg
mov
jle
cmp
shr
pusha
test
push
xchg
push
jmp
mov
xchg
out
fmul
push
lahf
je
mov
js
xor
rol
ficomp
(bad)
(bad)
(bad)
cmp
inc
mov
aas
inc
cmovae
and
lock
mov
mov
mov
(bad)
dec
push
adc
jl
pop
cmp
sti
je
lahf
movs
and
les
das
jl
dec
in
mov
(bad)
(bad)
call
call
push
and
or
in
mov
cdq
(bad)
(bad)
jmp
jb
push
adc
inc
call
mov
or
movs
lds
xor
mov
pop
inc
icebp
(bad)
(bad)
call
fst
push
aam
jl
push
clc
push
(bad)
push
cs
ins
jb
nop
xchg
cld
add
stos
shr
daa
jae
fmulp
or
mov
(bad)
(bad)
sti
inc
mul
loope
in
ds
daa
mov
mov
std
(bad)
inc
add
outs
cmps
out
fs
push
(bad)
sti
(bad)
push
pop
dec
test
mov
jb
mov
test
pop
xchg
sbb
push
xchg
jb
xor
(bad)
push
or
mov
les
mov
outs
repnz
stc
(bad)
(bad)
jmp
popa
cmp
pop
xor
ret
cld
sbb
mov
(bad)
repz
pop
mov
fs
mov
ret
int3
lock
in
inc
pop
inc
cdq
test
adc
dec
adc
(bad)
dec
rol
dec
mov
add
int3
or
loop
cmp
(bad)
(bad)
call
jbe
rcr
rcr
xor
jo
mov
push
repz
jl
sub
(bad)
cmp
cmps
xor
aaa
sbb
pop
(bad)
(bad)
(bad)
dec
add
xchg
jmp
add
mov
cdq
and
mov
aas
add
call
les
and
xor
icebp
outs
fnstenv
ins
rcl
dec
jl
xor
pop
and
ja
(bad)
(bad)
(bad)
call
dec
sbb
dec
aas
sbb
in
cmp
outs
inc
sub
sub
ins
jnp
push
(bad)
not
(bad)
(bad)
out
cli
lahf
enter
mov
leave
fwait
xchg
sbb
leave
das
add
push
xchg
or
in
(bad)
(bad)
(bad)
jmp
clc
xlat
cli
mov
retf
jecxz
push
cmp
(bad)
push
xchg
or
pusha
ss
(bad)
jg
mov
loopne
es
out
mov
xchg
cmp
xchg
loopne
retf
(bad)
push
fs
adc
mov
lea
(bad)
int
idiv
inc
xor
dec
(bad)
jg
jmp
int3
loope
out
(bad)
inc
cmps
rcl
mov
add
scas
(bad)
(bad)
(bad)
dec
adc
hlt
ins
push
aad
aad
push
mov
out
or
sub
sbb
aaa
cld
dec
retf
adc
test
enter
add
std
mov
(bad)
mov
dec
mov
sti
mov
aas
inc
pop
aad
sub
mov
std
ret
(bad)
(bad)
(bad)
(bad)
mov
pop
xor
sar
mov
xchg
or
xchg
call
cmp
loope
call
cmp
icebp
mov
cmp
dec
pop
sub
adc
repnz
(bad)
jmp
lds
ins
push
xlat
into
outs
pop
gs
test
popa
jmp
and
(bad)
(bad)
(bad)
inc
inc
add
(bad)
adc
mov
sti
push
or
adc
and
stos
in
test
out
push
fbstp
fdiv
in
jmp
sahf
jae
popf
ja
in
push
stos
leave
mul
adc
aaa
inc
sub
js
push
and
cmps
(bad)
(bad)
(bad)
call
ss
xlat
mov
mov
push
cmp
pop
inc
hlt
test
add
call
outs
push
push
retf
xor
mov
mov
add
cmp
pop
push
leave
(bad)
(bad)
(bad)
push
stc
call
loop
aam
pop
inc
xor
lods
cli
loope
jae
xlat
mov
or
dec
dec
popa
nop
call
jmp
ins
mov
rcl
xor
cld
dec
jecxz
and
(bad)
(bad)
dec
movs
dec
or
jb
pop
pop
call
xor
mov
jle
mov
(bad)
(bad)
dec
mov
xor
dec
add
stc
out
sub
mov
cmp
aas
add
fld
mov
adc
clc
outs
out
and
push
(bad)
mov
and
(bad)
inc
ds
ds
add
(bad)
call
jns
push
inc
daa
xlat
mov
cdq
xchg
jmp
ins
and
(bad)
int3
retfw
lea
int3
cld
xchg
xor
inc
(bad)
(bad)
(bad)
(bad)
cmp
xchg
test
in
adc
arpl
dec
in
sbb
jae
mov
call
lds
out
movs
mov
inc
adc
xor
mov
(bad)
cld
cli
retf
(bad)
jmp
or
test
lods
xchg
inc
clc
or
into
adc
cmp
sub
(bad)
(bad)
(bad)
(bad)
fcom
mov
call
jmp
leave
inc
movs
je
mov
movs
mov
xor
pop
int
mov
jg
aas
loope
cs
ficomp
push
mov
(bad)
(bad)
push
sub
cmp
mov
inc
xchg
jmp
out
mov
pop
xchg
push
daa
out
(bad)
(bad)
(bad)
jmp
ret
sbb
push
std
lahf
xor
mov
stc
out
jmp
add
(bad)
push
js
pop
fsub
sub
jae
push
sar
(bad)
(bad)
jmp
or
jl
inc
clc
lahf
cmp
int3
aad
fnop
imul
dec
mov
mov
cmp
cli
and
pushf
loop
pusha
xchg
nop
(bad)
daa
out
stc
repz
inc
or
cli
iret
fild
add
and
lahf
push
imul
neg
(bad)
and
jg
dec
jne
aas
loop
adc
vmovss
sub
pop
inc
ss
(bad)
(bad)
jmp
dec
push
stos
dec
dec
call
dec
inc
cmp
retf
push
add
xor
push
lods
mov
(bad)
(bad)
push
mov
rcr
inc
aam
pop
and
xlat
aaa
jle
ins
rol
push
jmp
repz
(bad)
(bad)
jmp
xchg
push
dec
shl
push
add
jns
push
test
jbe
xchg
or
rcr
ficom
test
mov
xchg
jb
in
xchg
fdivr
(bad)
(bad)
mov
daa
pop
and
xor
jg
inc
and
sbb
sub
rdmsr
test
dec
push
out
enter
jo
rol
inc
fcomp
ficomp
xor
bnd
inc
jle
xor
hlt
iret
mov
mov
cmp
(bad)
(bad)
(bad)
jmp
std
jbe
sti
dec
bnd
mov
rol
adc
jle
mov
inc
aaa
test
(bad)
call
cmp
dec
lods
cs
push
test
(bad)
(bad)
fbld
pusha
iret
dec
add
sub
inc
pusha
or
(bad)
loopne
sbb
call
test
jle
xchg
call
jge
mov
and
(bad)
pop
sub
ret
xchg
stos
fimul
(bad)
(bad)
inc
push
lock
sbb
inc
adc
jo
repnz
leave
adc
cli
std
mov
mov
(bad)
jg
(bad)
jmp
scas
mov
xchg
xchg
pop
jnp
xchg
or
pop
add
(bad)
(bad)
(bad)
(bad)
(bad)
fcomp
imul
dec
aas
pop
adc
fs
addr16
(bad)
jle
pop
pushaw
adc
sbb
sbb
push
pause
retf
mov
xor
push
out
xlat
mov
ret
(bad)
in
mov
lahf
pusha
pop
xchg
ja
jp
jb
lock
ret
mov
and
push
(bad)
(bad)
(bad)
jmp
cmp
inc
in
xchg
push
sub
inc
xor
fcomp
adc
cmp
dec
sub
lahf
(bad)
(bad)
(bad)
call
dec
popw
mov
cmp
es
sar
outs
sbb
jle
test
push
call
jbe
in
xchg
daa
fiadd
cmp
scas
nop
xor
mov
lahf
jp
(bad)
(bad)
(bad)
jmp
jmp
inc
xchg
scas
cld
(bad)
inc
push
jle
xor
inc
xor
fnstcw
(bad)
(bad)
(bad)
(bad)
std
jmp
dec
cli
jp
leave
rcl
mov
imul
inc
fisubr
sub
jae
jecxz
mov
pushf
test
in
pushf
mov
loope
int
arpl
push
xchg
(bad)
call
std
out
cwde
outs
icebp
inc
dec
sar
aad
(bad)
cmps
retf
jnp
push
or
jno
ja
cmp
faddp
out
arpl
das
out
les
mov
ret
add
dec
repz
(bad)
(bad)
(bad)
(bad)
out
(bad)
ins
add
push
shl
xchg
dec
ds
sahf
in
stos
mov
rol
in
fs
sti
xor
jl
out
cmp
hlt
js
mov
push
mov
or
cmps
xchg
(bad)
call
xchg
or
push
sub
outs
out
push
jge
ds
xchg
jg
xor
xchg
mov
dec
rcl
cmp
lods
push
retf
adc
(bad)
(bad)
(bad)
jle
inc
mov
jl
loope
inc
sbb
pop
arpl
(bad)
fisttp
mov
sahf
fs
add
(bad)
call
leave
scas
add
xchg
and
xor
in
scas
pushf
in
fwait
movs
jle
cmp
call
dec
cwde
(bad)
(bad)
(bad)
(bad)
cld
rcr
test
rcr
sbb
cmps
sbb
jg
aaa
pop
call
xabort
lahf
pop
add
inc
cmp
pushf
fcmovne
(bad)
jecxz
fiadd
sub
test
aad
leave
das
mov
pop
cmp
dec
add
fcmovnu
push
and
shl
(bad)
std
(bad)
rol
fbld
pushf
std
xchg
sub
jge
mov
(bad)
(bad)
dec
lods
dec
dec
jmp
out
pop
mov
movs
mov
jp
iret
outs
dec
dec
xor
dec
test
pop
loopne
sti
dec
movs
and
adc
aam
xchg
jmp
test
jbe
mov
js
psadbw
mov
pop
mov
mov
(bad)
call
push
jbe
ds
lahf
lods
add
nop
push
fadd
(bad)
(bad)
(bad)
call
xchg
mov
scas
sub
call
dec
adc
mov
mov
retf
imul
loope
adc
cli
call
daa
ret
and
mov
rcr
mov
push
push
or
cmp
scas
js
adc
pop
cmc
xor
inc
fs
mov
mov
popa
outs
cmp
(bad)
(bad)
(bad)
dec
test
stos
outs
ret
das
cld
repnz
leave
cmp
nop
std
cwde
jmp
cli
(bad)
(bad)
inc
xlat
stos
lds
inc
push
stos
mov
movs
fwait
(bad)
mov
dec
test
or
inc
fwait
inc
mov
ret
mov
push
and
stos
inc
loope
xchg
xchg
adc
je
jb
sub
js
inc
adc
call
repz
sbb
jae
adc
call
jle
out
(bad)
ficom
push
stc
jge
or
in
add
mov
imul
dec
inc
loopne
sbb
mov
inc
push
cmp
mov
call
(bad)
(bad)
(bad)
inc
push
(bad)
aaa
inc
push
push
cmp
cmps
mov
cs
pop
jge
hlt
stc
sub
sbb
jl
jns
xlat
lds
mov
cmp
xchg
loop
add
push
sahf
daa
lahf
sbb
ds
aas
mov
mov
adc
lahf
dec
and
xchg
xor
inc
push
adc
(bad)
mov
jb
or
jo
jmp
dec
sub
inc
xchg
mov
add
inc
lods
scas
jge
(bad)
(bad)
call
inc
inc
aaa
or
dec
lds
cld
mov
sti
jmp
add
dec
mov
push
mov
ret
std
out
sbb
fnsave
bound
(bad)
push
enter
inc
arpl
or
je
loop
sub
aam
mov
xchg
mov
mov
cmp
and
std
bound
push
es
mov
adc
dec
mov
test
ror
aam
xor
mov
adc
mov
sub
xor
sub
jns
rcl
(bad)
jg
movs
test
dec
outs
rol
scas
int
hlt
sbb
mov
jns
(bad)
call
imul
sbb
or
int
dec
add
mov
jmp
test
call
loop
(bad)
mov
jns
leave
imul
ret
xchg
stos
out
lods
in
xchg
cmp
call
xchg
repnz
fs
cmp
inc
push
jg
and
mov
xchg
in
(bad)
(bad)
jmp
and
inc
addr16
and
push
inc
mov
add
mov
push
jno
outs
shl
dec
lahf
lods
mov
ret
fs
adc
mov
cld
scas
(bad)
(bad)
(bad)
(bad)
mov
mov
xchg
enter
hlt
mov
ja
jnp
aam
hlt
mov
lahf
add
adc
call
stos
sahf
lock
mov
imul
(bad)
(bad)
(bad)
(bad)
jp
adc
nop
fisttp
mov
int3
pop
and
inc
cmp
adc
jp
aaa
aaa
or
sbb
(bad)
(bad)
(bad)
call
xor
stos
dec
sub
test
out
jbe
into
(bad)
cmc
mov
mov
push
xor
(bad)
jmp
mov
push
mov
jb
sub
loopne
and
in
push
push
(bad)
call
and
outs
sahf
lods
dec
mov
mov
clc
leave
sar
cli
das
dec
ss
daa
fisub
(bad)
push
mov
fimul
sti
rcl
mov
clc
dec
mov
ja
push
scas
or
mov
repnz
(bad)
(bad)
mov
jne
arpl
cmp
jmp
sub
hlt
xchg
dec
jge
out
dec
mov
add
sbb
stos
add
mov
mov
or
(bad)
(bad)
(bad)
call
mov
or
popa
sbb
jge
das
test
sbb
or
lock
jbe
(bad)
(bad)
inc
mov
in
push
hlt
retf
shl
lods
and
es
pusha
mov
cld
aam
loope
(bad)
inc
lods
push
cmc
push
rcpps
hlt
xlat
dec
neg
mov
stc
dec
stc
push
sbb
stc
inc
lods
test
test
xchg
mov
jp
(bad)
(bad)
jmp
mov
or
push
pop
pop
(bad)
jmp
mov
shl
add
cld
sub
push
dec
sar
(bad)
push
stc
fdiv
(bad)
into
cdq
(bad)
icebp
mov
ins
ret
mov
(bad)
jg
push
add
adc
jge
add
enter
and
xchg
mov
(bad)
fcomip
int3
push
push
add
push
dec
or
stos
adc
(bad)
(bad)
ds
ret
inc
jl
adc
movs
in
les
sbb
add
dec
enter
add
xchg
add
pop
jmp
fstp
push
outs
aaa
jle
(bad)
(bad)
call
dec
mov
loope
xchg
pop
mov
add
(bad)
sahf
or
mov
mov
pop
jo
gs
or
mov
sar
(bad)
(bad)
call
(bad)
push
int3
stc
push
aam
sub
movs
into
push
and
pop
mov
xchg
inc
inc
push
xor
add
call
cmps
ins
adc
jmp
lahf
sub
je
adc
xlat
stc
ret
out
(bad)
push
dec
dec
jo
fsub
pop
ret
outs
sbb
push
cwde
jae
jae
push
push
cmp
cmp
and
and
jmp
add
pop
xor
or
dec
loop
xlat
sbb
mov
mov
xor
out
cld
fwait
cmp
xchg
sar
call
push
cli
ins
mov
add
int3
xchg
jo
in
(bad)
dec
lock
frstor
(bad)
inc
and
add
or
xor
inc
pop
push
push
test
(bad)
(bad)
(bad)
call
mov
dec
loope
outs
add
ret
adc
push
xchg
xchg
xchg
pop
sbb
adc
jp
push
push
jbe
(bad)
(bad)
inc
pop
mov
out
add
fwait
inc
and
jecxz
sar
sbb
xlat
aad
jb
cmp
jg
inc
and
lods
test
jle
push
fcom
les
(bad)
push
cli
(bad)
fsubr
fisub
fwait
retf
outs
mov
jl
pop
fstp
ds
(bad)
mov
sbb
mov
loop
mov
add
lock
inc
push
xchg
retf
jmp
push
xlat
pop
stos
test
mov
mov
je
jmp
and
arpl
out
outs
ss
sbb
mov
cmps
stos
sar
ret
movs
cmp
int3
or
repz
sub
ret
jge
fwait
(bad)
sub
(bad)
(bad)
call
jne
add
(bad)
scas
cmps
push
stos
outs
push
test
rcr
daa
fnclex
(bad)
aad
sub
mov
fbld
stos
mov
fucom
ss
xor
aad
lock
pop
mov
xor
hlt
and
(bad)
(bad)
(bad)
dec
int3
test
inc
cmp
icebp
bound
test
and
(bad)
(bad)
(bad)
dec
and
sbb
cdq
es
lds
inc
pop
mov
push
jo
aam
aas
dec
cmc
fmul
(bad)
inc
enter
addr16
sahf
jns
dec
fwait
add
shl
jge
stos
shl
enter
(bad)
js
inc
adc
jo
mov
cld
rcr
pop
psrlw
mov
(bad)
(bad)
(bad)
mov
test
popa
js
push
jbe
adc
in
in
mov
add
fisttp
(bad)
inc
rcl
xchg
popf
sahf
aam
jp
gs
ret
inc
cdq
jmp
(bad)
dec
(bad)
jmp
adc
sahf
std
aam
and
mov
lock
test
call
pushf
imul
jae
ficom
and
loop
sbb
(bad)
jg
pop
je
stc
sahf
pop
mov
cli
mov
sbb
cs
sub
test
popf
xor
popa
mov
pop
sbb
call
(bad)
or
inc
sub
(bad)
(bad)
(bad)
fist
mov
xchg
or
stos
sar
(bad)
ins
popa
repnz
daa
inc
scas
xchg
cmp
mov
xor
cmp
dec
and
movs
lock
add
jns
xchg
lods
lods
add
xchg
(bad)
mov
loop
movs
fidiv
aam
mov
push
sbb
nop
xchg
sbb
xor
call
mov
or
pop
jae
(bad)
lock
push
icebp
icebp
outs
sahf
ins
and
call
fwait
jle
retf
mov
mov
icebp
in
arpl
inc
push
jl
jl
or
or
aam
(bad)
(bad)
call
ret
ja
mov
das
xchg
dec
jge
mov
mov
clc
fild
bound
fsubr
xchg
(bad)
pop
cmp
repz
jo
fst
arpl
cmp
cmc
push
in
xlat
std
lock
pushf
xchg
xlat
mov
or
sbb
test
ds
mov
loop
lock
(bad)
je
les
mov
push
pop
pop
or
dec
push
xor
icebp
push
(bad)
mov
cmp
repnz
sbb
ds
fnstenv
add
iret
xchg
and
pushf
cdq
adc
ficom
std
(bad)
push
fadd
inc
xchg
popa
je
sub
cmps
or
cmove
(bad)
(bad)
(bad)
push
push
cmp
(bad)
adc
out
loope
mov
push
mov
sub
or
(bad)
(bad)
(bad)
jmp
dec
into
scas
enter
and
dec
mov
and
out
dec
fnsave
mov
dec
cmps
(bad)
(bad)
(bad)
call
fnstsw
fst
add
test
mov
(bad)
rcr
jge
sub
fs
(bad)
mov
clc
adc
(bad)
and
mov
and
call
(bad)
(bad)
(bad)
push
cmp
mov
pop
aaa
scas
mov
dec
stos
jmp
cmp
into
daa
xchg
mov
add
fbld
dec
or
xchg
mov
icebp
(bad)
out
cli
lahf
data16
fistp
pop
sub
(bad)
cmp
sub
pop
(bad)
jg
mov
bound
inc
retf
cdq
or
jge
(bad)
dec
xchg
pop
dec
dec
push
jle
push
repnz
data16
(bad)
jmp
xor
jns
mov
and
ins
repnz
xor
das
movs
sub
(bad)
(bad)
(bad)
(bad)
jmp
mov
arpl
cmp
lods
iret
xchg
mov
jmp
sub
js
mov
(bad)
(bad)
inc
inc
aam
mov
ret
rol
jnp
mov
(bad)
fcos
(bad)
(bad)
call
stos
and
pop
sbb
push
loope
pop
mov
movs
mov
jle
loopne
repz
enter
fwait
aam
into
paddd
and
in
int
std
(bad)
(bad)
cmp
inc
push
xchg
sub
popa
adc
call
xlat
jl
adc
add
(bad)
(bad)
(bad)
(bad)
cmp
push
add
dec
std
mov
xor
push
cli
in
ret
mov
out
mov
mov
push
mov
dec
mov
test
mov
cdq
mov
or
(bad)
(bad)
(bad)
inc
push
sar
mov
fs
repz
ret
jae
adc
mul
cmp
pop
(bad)
push
(bad)
(bad)
(bad)
push
or
movs
mov
pusha
mov
or
inc
fstp
pop
lods
fld
(bad)
(bad)
call
xchg
mov
jne
into
adc
popf
cli
hlt
xchg
cmp
add
icebp
(bad)
(bad)
(bad)
push
mov
xor
shl
std
pop
bound
pop
and
cmps
mov
(bad)
(bad)
(bad)
(bad)
cli
adc
clc
dec
addr16
dec
daa
mov
adc
cmp
test
(bad)
(bad)
(bad)
(bad)
push
cmp
outs
repnz
mov
in
jle
popa
fs
lods
adc
push
and
aam
jnp
(bad)
dec
(bad)
mov
add
inc
rep
pop
adc
neg
sub
inc
and
loope
hlt
jnp
xchg
adc
scas
cli
and
sub
repnz
test
cmp
dec
retf
enter
sti
cmp
add
(bad)
push
xchg
adc
jo
(bad)
stos
push
les
adc
sar
pusha
int3
clc
pop
cmc
call
xor
pop
add
cmp
dec
mov
jne
mov
jo
mov
push
(bad)
outs
jg
int3
cmps
sub
jb
in
pop
stos
in
(bad)
(bad)
mov
pop
mov
mov
push
sub
pop
add
xchg
push
mov
xor
push
cmps
scas
and
ja
pusha
jge
loop
mov
ds
inc
out
into
loopne
(bad)
(bad)
dec
mov
clc
aas
and
fstp
shr
push
int
sbb
(bad)
(bad)
(bad)
dec
aam
adc
sbb
xlat
pushf
repz
imul
xchg
mov
(bad)
jmp
jg
aad
mov
arpl
cli
(bad)
fist
ja
daa
jg
add
(bad)
push
inc
scas
cmc
and
mov
mov
add
push
(bad)
mov
je
mov
sub
inc
int
fdiv
cmp
in
sub
ds
jae
xor
lahf
inc
scas
stos
sbb
mov
and
nop
fist
lods
mov
lods
push
out
push
mov
ja
idiv
mov
(bad)
push
jo
xor
push
(bad)
pop
push
leave
outs
xor
sub
movs
push
push
cli
jg
jp
clc
jp
adc
or
sub
cli
and
les
cmp
pop
cmc
imul
pop
cwde
int
dec
stos
iret
repnz
add
mov
repz
(bad)
(bad)
jg
cmps
sub
xchg
cmp
mov
xchg
jp
mov
or
jbe
adc
pop
gs
fcomip
push
or
inc
test
sbb
sbb
lahf
inc
idiv
mov
lods
(bad)
call
nop
jp
ds
jne
lahf
test
mov
cmp
popf
lock
(bad)
push
(bad)
jmp
(bad)
lods
mov
mov
data16
(bad)
dec
arpl
rol
mov
jne
pop
daa
mov
loope
and
cmp
push
mov
lods
cmc
imul
daa
call
(bad)
pop
cmp
and
data16
adc
ins
icebp
sti
xchg
imul
(bad)
inc
rol
test
dec
mov
js
jecxz
push
pop
icebp
sbb
sub
dec
xor
mov
(bad)
(bad)
(bad)
mov
stos
mov
sub
pop
ins
dec
int
icebp
outs
add
pusha
das
or
(bad)
(bad)
jmp
es
sti
js
mov
jno
mov
inc
xchg
and
fwait
xor
cmp
cmps
xlat
mov
mov
xor
pushf
pop
lock
push
movs
sahf
mov
repnz
in
add
jnp
jg
(bad)
(bad)
inc
mov
std
dec
inc
xchg
xchg
cmp
fstp
mov
loope
fs
fstp
icebp
mov
cmps
jmp
adc
jne
xchg
sbb
loopne
call
(bad)
mov
mov
jl
xchg
pop
mov
retf
(bad)
(bad)
(bad)
fisubr
pop
jne
in
out
aam
pop
jns
pop
lods
cmp
push
xlat
dec
pop
in
cmp
cmp
(bad)
inc
movs
xchg
test
xchg
push
test
std
lds
jo
add
fld
sub
(bad)
(bad)
call
mov
xchg
push
fld
cmp
rol
pop
adc
mov
add
(bad)
dec
inc
sbb
ficom
cdq
cwde
js
jl
(bad)
(bad)
inc
iret
nop
push
mov
sti
mov
xor
sub
mov
mov
(bad)
inc
cmp
addr16
clc
(bad)
(bad)
dec
sbb
mov
dec
or
sub
push
sbb
mov
clc
pop
push
aad
(bad)
inc
sub
outs
jo
jge
loop
pop
xchg
jmp
(bad)
(bad)
(bad)
(bad)
fdivr
mov
mov
cmp
xchg
mov
aam
sbb
(bad)
(bad)
inc
shl
into
hlt
popa
int3
push
int
inc
gs
adc
out
sbb
mov
lock
inc
pushf
pop
inc
fild
mov
jl
mov
jge
(bad)
(bad)
(bad)
jmp
sbb
or
push
dec
lods
lahf
mov
dec
inc
out
sbb
(bad)
(bad)
(bad)
call
push
dec
xor
ficomp
loopne
or
push
hsubpd
cmp
inc
nop
cmp
ins
jecxz
sar
(bad)
(bad)
(bad)
out
pop
ret
mov
loop
xlat
jns
cmc
(bad)
push
popf
adc
mov
xor
jmp
jb
xor
(bad)
(bad)
mov
add
mov
icebp
loopne
test
cmc
lods
test
idiv
(bad)
(bad)
(bad)
call
jne
hlt
cdq
rcr
or
ds
mov
aad
test
aad
jns
dec
cwde
(bad)
call
ins
fmul
rol
xchg
xor
xor
int
inc
ret
add
(bad)
(bad)
(bad)
call
out
inc
rcl
call
in
clc
and
scas
ficomp
adc
(bad)
(bad)
fcomip
sbb
dec
loope
out
or
mov
shr
push
jp
(bad)
(bad)
(bad)
call
ret
movs
and
aas
mov
push
mov
fisubr
cmp
(bad)
(bad)
jmp
cmp
fs
movs
repz
popa
fcmovnu
add
loope
ret
sahf
push
into
shl
push
sbb
cld
imul
mov
xchg
cmp
mov
xchg
jbe
dec
loop
xchg
sti
pop
shr
(bad)
(bad)
(bad)
aas
pop
(bad)
cmp
jp
adc
jmp
enter
mov
idiv
(bad)
(bad)
call
mov
shr
pop
mov
dec
das
adc
or
adc
push
daa
es
inc
add
sub
fsub
or
add
mov
loop
sub
add
mov
and
leave
jnp
lods
mov
jge
pop
push
adc
(bad)
(bad)
(bad)
call
xchg
daa
pop
dec
test
cmp
mov
mov
not
xchg
data16
cli
(bad)
(bad)
jg
xor
push
mov
xor
adc
outs
lea
xor
loop
gs
(bad)
jg
inc
mov
addr16
jl
icebp
pushf
add
out
fxch
(bad)
mov
cmc
retf
push
and
(bad)
(bad)
(bad)
jns
jb
jb
inc
jge
push
stc
ja
fwait
mov
aaa
data16
xchg
loopne
push
sbb
push
loop
hlt
(bad)
(bad)
call
stc
add
sub
inc
int3
bound
in
(bad)
(bad)
(bad)
call
ret
xchg
pop
sbb
adc
jmp
cmps
arpl
repz
push
popf
(bad)
mov
(bad)
call
xchg
mov
lock
xchg
in
cmp
ds
mov
cwde
mov
jle
sbb
sub
mov
test
ret
adc
jmp
add
add
cwde
(bad)
xchg
jb
xchg
iret
fdiv
mov
(bad)
jmp
jg
mov
pop
lods
and
test
out
jmp
xchg
mov
ds
in
cwde
aad
aam
add
pop
xor
(bad)
(bad)
dec
lock
movs
mov
sub
xchg
inc
adc
sbb
sbb
out
(bad)
xchg
call
inc
rcr
mov
or
inc
outs
scas
(bad)
cmp
sub
pop
ins
call
push
jne
sbb
lock
int3
pop
and
dec
cld
les
out
xchg
les
mov
cld
lods
xchg
es
call
outs
ret
xor
stc
or
mov
stos
inc
int
sbb
cmp
dec
int
cmp
clc
xchg
push
retf
sar
and
stos
mov
ins
and
jne
(bad)
(bad)
push
into
jmp
cmp
push
jmp
jae
adc
pop
mov
(bad)
(bad)
call
outs
stos
in
jno
xchg
cwde
rol
sahf
movs
push
(bad)
pop
repz
or
xor
dec
mov
cli
sub
sub
lock
pushf
addr16
aas
pop
mov
stos
ins
pop
(bad)
(bad)
jmp
mov
shl
je
cmp
lods
xchg
and
and
jp
(bad)
(bad)
out
clc
jp
(bad)
add
xor
pop
ret
shr
dec
sar
push
cld
(bad)
(bad)
call
jge
pop
nop
mov
iret
jle
in
inc
dec
add
retf
pop
mov
mov
ret
(bad)
scas
cli
pop
adc
add
ret
(bad)
mov
xchg
loopne
aas
dec
enter
mov
dec
and
xor
dec
push
jecxz
movs
mov
lods
or
(bad)
call
ret
sti
pushf
mov
mov
fcom
mov
mov
fs
and
shr
cdq
mov
or
(bad)
(bad)
dec
push
(bad)
mov
pop
mov
mov
mov
or
(bad)
call
mov
repz
stc
mov
ins
inc
enter
test
repz
cdq
shl
(bad)
(bad)
(bad)
dec
stos
sbb
jbe
push
fldlg2
or
xor
fst
pop
sub
(bad)
jmp
pusha
in
jmp
shl
jae
inc
lods
mov
ud2
test
push
mov
popf
mov
push
jl
jp
pop
imul
jl
fcmovb
(bad)
inc
jae
ins
xlat
and
mov
push
stc
adc
add
(bad)
mov
movs
dec
inc
cmc
retf
test
in
(bad)
(bad)
mov
js
ficom
sbb
sbb
int
in
imul
cmps
rol
push
mov
(bad)
sbb
cmps
addr16
inc
sbb
mov
shl
pop
inc
pop
inc
mov
mov
repz
in
lock
dec
rcl
xchg
mov
xchg
ror
pop
adc
mov
(bad)
(bad)
jg
inc
div
dec
movs
sub
sbb
pop
dec
cmp
and
pop
aaa
jne
fsubr
mov
jmp
mov
sbb
lods
pop
ror
jge
clc
cmp
mov
mov
ins
pop
addr16
lahf
out
fs
(bad)
(bad)
(bad)
(bad)
fbld
or
xor
fnstsw
xlat
repz
xor
dec
jno
ficomp
outs
jmp
dec
neg
ror
movs
and
lock
je
data16
fnstsw
bound
in
stos
(bad)
mov
jns
scas
push
sbb
xor
pop
(bad)
(bad)
(bad)
call
mov
mov
jnp
mov
call
or
aaa
push
push
(bad)
(bad)
(bad)
inc
addr16
cmps
mov
jae
int
ret
arpl
popf
aad
jl
call
sti
(bad)
mov
cmp
sub
ror
stc
clc
xchg
jns
or
xor
fwait
leave
ss
mov
jb
mov
dec
xchg
jl
add
mov
aad
lods
sbb
xor
bound
popf
cmps
movs
push
xor
mov
call
adc
adc
add
sbb
icebp
jbe
push
jmp
sar
jg
call
ins
cmc
cmp
adc
cmp
sbb
jnp
sbb
cmp
add
xchg
mov
cs
fidivr
push
xor
sub
sahf
sub
(bad)
(bad)
push
push
pushf
sbb
adc
out
or
mov
(bad)
(bad)
arpl
icebp
int
(bad)
adc
cdq
fistp
fstp
push
jnp
iret
xor
arpl
inc
fwait
sub
sub
cs
data16
ss
(bad)
(bad)
inc
iret
xchg
inc
add
and
adc
sub
mul
pop
push
sub
je
xchg
aad
(bad)
call
sbb
mov
fbld
mov
test
fistp
call
fwait
xchg
xchg
call
(bad)
imul
popa
push
inc
in
fcmovu
inc
pop
mov
loope
dec
gs
fwait
add
(bad)
dec
cmc
jbe
dec
loop
xchg
jmp
mov
sub
mov
add
cld
add
mov
mov
mov
push
movs
lds
cmps
and
(bad)
(bad)
push
ins
add
sub
retf
retf
adc
ja
in
push
jns
loopne
sbb
or
xor
loopne
stos
push
(bad)
(bad)
(bad)
dec
or
push
es
or
cmp
dec
test
repnz
jns
dec
scas
mov
mov
or
mov
test
call
mov
mov
out
add
bound
repnz
mov
jmp
clc
push
sub
jne
test
jmp
scas
adc
leave
xor
inc
ss
and
xor
(bad)
(bad)
(bad)
fcomip
xchg
stos
sbb
mov
xchg
cdq
pop
lods
push
movs
clc
add
mov
retf
(bad)
(bad)
(bad)
jmp
arpl
out
gs
jb
or
jmp
pop
adc
dec
or
cmp
(bad)
(bad)
(bad)
jmp
adc
pop
out
std
push
clc
daa
xchg
add
add
pusha
sub
push
and
mov
std
ja
retf
cmp
mov
cmps
in
cmp
sbb
sub
(bad)
(bad)
inc
scas
adc
cmp
lea
add
adc
inc
dec
(bad)
jmp
add
sub
and
push
push
mov
mov
(bad)
(bad)
(bad)
fstp
sub
mov
iret
scas
pop
mov
mov
and
fmulp
int3
or
push
pop
test
pop
dec
pop
sbb
call
std
test
push
pop
mov
and
adc
pop
xor
(bad)
(bad)
jmp
xchg
mov
pop
dec
jo
mov
sbb
cdq
es
mov
ds
(bad)
(bad)
push
push
mov
test
push
(bad)
jp
mov
xchg
mov
pop
push
int
adc
lds
jmp
mov
xlat
pop
iret
enter
mov
xchg
inc
sbb
mov
cmp
out
or
mov
ror
sub
fnstsw
(bad)
pop
aam
sbb
and
out
ds
shl
mov
(bad)
inc
cmps
dec
jno
inc
sbb
sbb
jo
(bad)
pop
sbb
test
or
rcl
push
rol
mov
pop
loope
pop
mov
call
pop
stc
adc
jne
sbb
imul
xor
sahf
cmp
xchg
push
pop
nop
mov
call
cwde
in
in
(bad)
jg
sub
cmps
sahf
mov
ret
or
scas
push
jae
push
ror
push
stos
not
sahf
xchg
hlt
ja
mov
cmc
mov
ficomp
add
push
js
add
mov
(bad)
aad
lods
popa
retf
repz
bnd
mov
xlat
pop
enter
push
jecxz
jmp
imul
(bad)
call
cmps
xor
add
bound
adc
mov
add
push
jmp
ja
jmp
jle
xchg
call
jl
adc
(bad)
(bad)
mov
mov
movs
sbb
jae
mov
repnz
fild
ret
mov
adc
ins
dec
mov
sub
int
shl
cmp
xchg
clc
daa
popa
fcom
pusha
(bad)
(bad)
(bad)
(bad)
(bad)
dec
inc
sbb
pop
push
out
adc
stc
or
mov
push
pop
in
push
(bad)
(bad)
fcomip
cmp
or
mov
inc
xor
cmp
sub
fcmove
pop
loopne
call
mov
pop
test
jno
(bad)
mov
add
repz
push
das
lahf
and
fistp
pop
in
fnsave
mov
(bad)
(bad)
(bad)
(bad)
jmp
push
mov
xor
inc
sub
inc
dec
lahf
cmp
retf
xchg
test
push
stos
push
mov
pusha
cmps
call
(bad)
(bad)
jg
(bad)
and
mov
jo
mov
(bad)
in
jnp
xchg
inc
inc
or
inc
push
icebp
pop
das
xchg
jb
sbb
xchg
xchg
push
sbb
(bad)
(bad)
(bad)
mov
(bad)
test
cmp
mov
pop
sti
xchg
inc
add
pop
mov
xor
jg
(bad)
dec
inc
aad
sbb
jne
mov
fistp
loopne
mov
push
push
(bad)
adc
sti
leave
lahf
loope
xlat
adc
mov
mov
scas
pinsrw
cmp
push
xor
add
adc
push
mul
push
dec
leave
pop
sub
(bad)
(bad)
(bad)
std
iret
lahf
(bad)
aam
add
push
dec
outs
lahf
andnps
cmp
(bad)
pop
inc
repz
(bad)
(bad)
jmp
test
inc
push
ins
(bad)
or
ins
mov
push
fbstp
sti
sub
call
hlt
(bad)
(bad)
dec
in
test
jne
jge
and
imul
cmp
sbb
call
or
pop
adc
fcmovnu
inc
ret
lahf
mov
fst
repnz
iret
inc
(bad)
adc
cmp
(bad)
(bad)
(bad)
cmp
imul
jno
jmp
test
mov
outs
inc
dec
shl
dec
imul
dec
pop
xchg
icebp
cmps
cmp
test
add
xchg
xchg
push
js
shl
or
mov
lahf
pop
sahf
shl
cdq
jbe
lds
das
sar
xor
test
mov
jmp
jle
xchg
test
(bad)
(bad)
push
mov
xor
pushw
jbe
jb
aam
sbb
(bad)
jnp
cli
cwde
enter
mov
inc
sub
test
xchg
out
(bad)
(bad)
(bad)
(bad)
fcmovnbe
or
sbb
sbb
jmp
or
lds
push
jnp
xchg
pop
ret
sbb
inc
leave
fdiv
retf
adc
fwait
cmp
rcr
mov
sub
mov
(bad)
or
xor
inc
and
jns
or
add
sub
pop
lahf
push
jbe
xchg
in
icebp
(bad)
fcomip
and
int3
and
ficom
rcr
addr16
add
lods
(bad)
out
cli
fucomip
xor
scas
mov
ret
popa
adc
inc
out
pushf
pop
aad
(bad)
inc
push
test
cld
push
xchg
push
mov
xlat
cmp
xchg
stc
into
retf
(bad)
call
aaa
pop
push
cmp
and
jno
test
les
fs
es
rol
push
adc
outs
(bad)
push
mov
lods
das
imul
cli
cmps
addr16
cmp
(bad)
(bad)
(bad)
dec
pop
out
cmps
ins
push
aam
addr16
rcl
push
pusha
test
pop
in
jl
inc
scas
(bad)
jmp
pop
(bad)
retf
mov
shr
clc
(bad)
(bad)
(bad)
jmp
pushf
inc
sub
mov
pop
pop
fimul
add
sbb
pop
rcl
xor
in
adc
pop
in
inc
(bad)
(bad)
(bad)
call
lods
push
cmp
aas
lea
neg
fistp
dec
pop
scas
add
mov
jmp
into
mov
push
leave
ret
out
sar
push
mov
xchg
paddq
loop
(bad)
(bad)
(bad)
(bad)
fisubr
pop
mov
pusha
sti
popf
and
sbb
pop
loop
pop
dec
loop
sub
or
(bad)
(bad)
call
inc
and
nop
adc
test
sahf
cmp
push
mov
dec
stos
adc
imul
rcr
cmp
jmp
out
lds
or
mov
sbb
push
or
jmp
scas
xchg
mov
sbb
or
jb
inc
mov
popa
loop
cmp
repz
inc
sub
mov
pop
cmps
sub
inc
mov
jmp
pop
mov
inc
pop
add
jl
sbb
(bad)
lock
push
fidivr
push
jb
and
jmp
ins
push
js
aad
nop
inc
jecxz
mov
xor
jo
shr
cli
call
mov
cmp
fst
int
imul
mov
adc
xor
outs
int3
inc
rcr
(bad)
(bad)
(bad)
jmp
sub
movs
(bad)
sti
and
lea
sbb
dec
sbb
mov
sbb
div
cmps
add
xor
xchg
es
fwait
inc
pop
sbb
cmp
(bad)
(bad)
push
inc
cli
test
xor
adc
out
adc
popa
rcl
mov
mov
xchg
xor
mov
jmp
inc
test
in
dec
add
mov
inc
mov
int3
cs
popa
add
mov
call
nop
push
icebp
sbb
pop
sti
pop
sub
pop
int3
loopne
mov
sbb
adc
in
dec
ret
popa
pop
cmp
adc
fs
xchg
nop
xchg
aas
pop
les
mov
icebp
(bad)
cmp
push
pop
imul
ds
fwait
adc
mov
(bad)
push
lahf
lock
and
cwde
xor
and
aam
and
daa
jp
loop
(bad)
ds
call
neg
push
jg
inc
hlt
inc
sub
add
and
xchg
cli
jb
outs
icebp
icebp
cdq
call
ins
add
cmp
(bad)
cli
xchg
jecxz
scas
repnz
(bad)
(bad)
push
mov
push
dec
sbb
mov
mov
sete
fcomp
(bad)
(bad)
(bad)
push
mov
sbb
adc
or
sub
mov
test
(bad)
(bad)
jg
pop
loopne
cdq
or
pop
inc
dec
test
pop
mov
(bad)
(bad)
inc
retf
pop
cmp
or
imul
es
scas
mov
xlat
mov
pushf
fdiv
scas
push
mov
adc
pop
sahf
ss
cwde
movs
(bad)
outs
les
dec
mov
ds
xlat
jmp
lea
ins
lahf
push
movs
in
js
inc
loop
fimul
(bad)
(bad)
(bad)
fst
inc
mov
cmp
lock
in
sbb
shl
mov
dec
call
call
pop
(bad)
fisub
mov
(bad)
pop
xor
cmp
sub
call
cmp
scas
add
ins
sbb
inc
add
test
adc
js
xor
fisubr
inc
jle
xchg
in
pop
pop
out
or
pop
xor
mov
inc
out
dec
or
shr
cmps
mov
mov
mov
addr16
mov
push
std
das
lock
js
not
dec
pop
in
(bad)
shl
test
out
jg
call
pop
and
push
sub
cmps
jns
cmps
ja
(bad)
mov
je
aad
arpl
mov
mov
push
sar
hlt
pop
mov
scas
clc
lods
iret
pusha
inc
pusha
retf
and
xlat
aas
cmc
dec
cmp
in
(bad)
(bad)
(bad)
jmp
das
pop
mov
shr
fs
mov
loopne
movs
inc
pcmpgtd
ds
clc
sahf
es
imul
loop
(bad)
push
xor
dec
loope
pop
mov
pushf
push
sbb
mov
pushf
pop
xor
inc
scas
cmp
inc
inc
hlt
xchg
push
(bad)
(bad)
(bad)
inc
cmps
lods
push
or
popa
outs
retf
jns
sbb
inc
(bad)
xor
arpl
jle
paddd
and
out
ins
pusha
or
scas
in
mov
mov
lea
int
call
push
cwde
les
jmp
xor
adc
xchg
or
out
(bad)
jns
or
sbb
pop
stos
cmc
lock
fcomp
arpl
fcom
rcl
jmp
hlt
jmp
sub
and
into
inc
and
rcl
(bad)
ficomp
fist
cmp
mov
push
fisubr
(bad)
ffreep
lods
int3
pop
sbb
cmp
imul
add
adc
push
dec
sub
adc
ins
clc
sub
pop
push
cmp
mov
inc
or
shr
nop
js
add
push
pop
imul
loopne
inc
pop
cmc
(bad)
(bad)
(bad)
call
(bad)
mov
shl
sbb
dec
pushf
sbb
cmp
pmullw
dec
es
jle
(bad)
(bad)
call
(bad)
retf
popa
mov
cmp
pop
test
fs
mov
(bad)
fdiv
cli
xchg
fdiv
xor
sbb
int3
inc
(bad)
jl
add
in
fmul
pop
pop
mov
(bad)
(bad)
jmp
jmp
dec
fsub
pop
cmp
cdq
pop
adc
push
clc
(bad)
frstor
(bad)
mov
rcl
sub
data16
mov
fbld
(bad)
jg
dec
lahf
bound
lahf
data16
mov
pop
adc
(bad)
mov
aaa
(bad)
(bad)
(bad)
dec
dec
adc
icebp
push
xor
inc
dec
mov
push
stos
cmp
fwait
leave
sbb
stc
sbb
dec
icebp
lock
ja
sub
psubsb
jecxz
mov
retf
push
mov
(bad)
(bad)
call
add
sub
mov
push
or
and
jnp
dec
jle
cmp
(bad)
(bad)
(bad)
jmp
(bad)
in
inc
ins
sbb
cld
sahf
pop
dec
jle
mov
cmp
int
sar
cli
jg
inc
fwait
lds
jns
shl
and
dec
pop
dec
adc
ret
inc
pop
sbb
out
shr
push
jecxz
shr
hlt
(bad)
(bad)
(bad)
fnsave
das
lods
adc
xor
mov
dec
in
cmp
xlat
cdq
(bad)
inc
cmp
dec
fisubr
enter
imul
sbb
jg
jge
into
mov
in
sub
stos
data16
mov
aam
idiv
sub
jb
(bad)
(bad)
jmp
add
mov
test
(bad)
ins
mov
mov
mov
call
fnsave
adc
call
cmp
or
sub
aad
xchg
(bad)
jns
mov
and
sbb
pop
mov
ret
daa
or
shl
jg
cmp
or
(bad)
(bad)
fisttp
sub
rcl
out
dec
lods
pop
push
push
mov
jp
sahf
shr
ss
sar
(bad)
call
sbb
out
retf
test
sbb
hlt
outs
pop
sar
jg
fiadd
sub
sub
inc
ror
clc
push
mov
and
push
aas
mov
sub
arpl
sar
jno
(bad)
adc
(bad)
fcomip
call
nop
aas
jge
mov
xchg
pop
clc
pop
or
add
inc
fs
(bad)
(bad)
call
les
xlat
add
mov
(bad)
dec
aad
adc
(bad)
dec
push
mov
pop
mov
dec
dec
mov
std
mov
add
add
dec
jbe
inc
aaa
inc
cld
aaa
ins
call
and
nop
xor
push
push
jle
sub
cmc
std
(bad)
(bad)
push
mov
jne
xchg
pop
mov
dec
xchg
sar
push
loope
sbb
out
mov
(bad)
(bad)
(bad)
mov
push
(bad)
(bad)
adc
fwait
pminsw
cmp
fs
loope
cli
jne
ins
aaa
rep
add
(bad)
call
aad
(bad)
jmp
mov
movs
jnp
mov
add
and
fbld
xor
inc
add
pop
and
pop
push
ins
ins
push
(bad)
pop
mov
sbb
repnz
add
arpl
ins
mov
inc
sar
call
jecxz
mov
js
or
add
(bad)
push
cmp
and
jmp
push
cs
mov
mov
out
mov
pushf
add
mov
xchg
xchg
mov
mov
xchg
bound
lods
call
icebp
in
aas
push
aas
inc
pop
and
in
(bad)
(bad)
(bad)
dec
movs
int
mov
dec
sub
jne
cmp
mov
jmp
fiadd
jmp
mov
stos
jmp
xchg
pusha
sbb
cmp
sbb
mov
lock
pop
loop
(bad)
jmp
adc
nop
adc
xchg
mov
call
cdq
ret
(bad)
(bad)
mov
mov
mov
mov
xor
fsub
mov
into
inc
cwde
jnp
pop
or
adc
pop
dec
mov
jb
paddusb
test
js
push
xchg
jmp
mov
movs
ret
clc
(bad)
(bad)
(bad)
jmp
dec
std
sub
ss
or
cli
out
pop
adc
in
or
arpl
pop
or
(bad)
(bad)
(bad)
push
jmp
sar
mov
xchg
xchg
cmps
adc
or
cmc
inc
movs
int3
pop
add
mov
jnp
ror
iret
inc
fdivrp
pop
sub
ds
mov
push
es
int
cmp
mov
(bad)
(bad)
jmp
cmps
pop
cmps
icebp
mov
pop
and
jb
ja
dec
out
outs
cmp
mov
aaa
lahf
nop
push
adc
(bad)
(bad)
(bad)
fnstsw
xor
icebp
(bad)
test
lds
dec
push
push
mov
aaa
xchg
jecxz
xor
sbb
inc
(bad)
push
sub
sub
mov
or
(bad)
fldcw
int3
pop
lds
(bad)
(bad)
jmp
minps
lea
out
ror
popa
or
xor
mov
xlat
inc
popf
in
sub
xchg
cmp
adc
(bad)
call
xchg
repnz
stos
hlt
stos
jo
jmp
pushf
mov
inc
xor
mov
cmp
and
or
or
mov
mov
into
fisubr
add
rcl
adc
jg
call
mov
xlat
cs
jmp
enter
cli
adc
icebp
outs
push
jp
jae
fs
jecxz
(bad)
(bad)
(bad)
inc
scas
push
mov
int3
jmp
xchg
repz
es
retf
adc
dec
dec
imul
imul
mov
sbb
mov
(bad)
(bad)
jg
loope
out
or
test
mov
xchg
cmp
cmps
jecxz
ficom
ret
imul
clc
jmp
mov
sub
xchg
adc
ss
dec
mov
fs
jno
jmp
mov
sub
dec
out
lods
bnd
jmp
aas
test
aam
stos
xchg
push
lea
je
xor
loop
movs
je
clc
int3
mov
inc
(bad)
(bad)
and
add
(bad)
fcomip
sbb
(bad)
repz
sbb
sti
das
xor
mov
mov
(bad)
jmp
add
rcl
jno
sub
inc
dec
mov
je
dec
mov
popf
dec
xlat
(bad)
(bad)
jmp
es
adc
push
pop
jle
dec
cdq
repz
or
inc
push
or
jmp
(bad)
jg
pop
(bad)
aas
and
mov
or
in
push
adc
test
es
xlat
xchg
pusha
push
cmp
test
pop
(bad)
call
jne
jnp
pusha
pop
popf
xor
mov
jg
and
pop
mov
xchg
lock
(bad)
(bad)
push
jbe
loopne
mov
xchg
out
retf
in
mov
cdq
pop
ins
sbb
fild
mov
out
cli
stos
inc
inc
pusha
dec
mov
mov
adc
jmp
mov
fwait
mov
lods
cld
adc
jp
test
xor
cmp
icebp
jmp
icebp
cmp
std
ja
push
pop
mov
sahf
jnp
(bad)
(bad)
(bad)
push
mov
test
add
cmps
sub
or
jmp
inc
mov
adc
jbe
inc
repz
add
inc
mov
lds
(bad)
(bad)
jmp
mov
xchg
and
jo
dec
xor
pop
mov
jae
mov
(bad)
(bad)
(bad)
mov
sbb
or
nop
or
inc
xchg
icebp
mov
daa
sbb
lds
loope
ret
sar
push
inc
push
cmp
popf
push
mov
in
scas
cmp
cld
(bad)
inc
mov
mov
push
call
aam
cmp
mov
sub
(bad)
(bad)
(bad)
inc
cmp
sbb
punpckhwd
or
stos
jbe
ss
(bad)
(bad)
(bad)
call
push
test
sbb
lods
inc
push
xchg
call
pop
call
(bad)
(bad)
(bad)
(bad)
call
mov
pop
pop
and
xlat
sub
inc
std
jmp
xchg
xchg
nop
ret
xor
into
outs
mov
mov
retf
mov
sti
pop
iret
retf
imul
loop
jmp
pop
xchg
jle
call
or
push
fdiv
xchg
jp
or
int3
(bad)
(bad)
inc
enter
fnsave
out
xchg
sbb
mov
push
add
ror
sbb
(bad)
call
and
test
imul
jmp
xchg
and
scas
fwait
xlat
(bad)
(bad)
jmp
cmp
push
push
xchg
stc
xchg
dec
fcmove
or
mov
popf
xor
inc
push
(bad)
(bad)
(bad)
jmp
outs
push
push
sub
jmp
or
inc
mov
sub
adc
das
clc
jmp
mov
out
movs
push
ror
loope
lea
inc
pop
mov
dec
jnp
cmp
call
cmp
ds
xor
add
(bad)
shr
mov
xlat
fisttp
(bad)
(bad)
push
(bad)
sbb
arpl
jbe
lea
mov
mov
fstp
mov
pop
aam
call
rcl
pop
in
xor
stc
retf
xor
or
addr16
in
sub
call
or
cmp
popa
pop
inc
ror
jecxz
test
(bad)
mov
and
inc
dec
fcmovnu
iret
int
jnp
and
(bad)
(bad)
dec
push
(bad)
jo
xchg
mov
xor
fcom
je
or
(bad)
(bad)
(bad)
(bad)
ficomp
push
jns
mov
add
test
mov
xchg
repnz
mov
sbb
(bad)
(bad)
push
fisttp
stc
adc
dec
pop
aad
xchg
sbb
enter
jl
(bad)
jmp
jmp
and
sbb
fstp
popf
repz
mov
call
push
mov
mov
add
push
jl
lods
xor
dec
stos
push
xor
push
enter
loopne
dec
push
aas
jo
cs
(bad)
(bad)
inc
add
lock
cld
dec
jno
inc
fst
aas
push
in
push
xchg
ja
fnstcw
sbb
(bad)
jg
stc
fstp
mov
cmps
ss
sbb
ins
ins
outs
int3
lahf
call
icebp
jecxz
imul
and
add
shl
inc
(bad)
neg
inc
or
(bad)
(bad)
jmp
out
and
or
pusha
les
dec
fbstp
sub
or
ret
fwait
fwait
shr
outs
jns
outs
imul
and
jg
ret
mov
call
cwde
shl
pushf
dec
sbb
inc
or
dec
jmp
fidiv
xchg
(bad)
(bad)
(bad)
dec
(bad)
pusha
xchg
fisttp
hlt
popa
pop
ret
jbe
or
push
add
dec
repz
dec
(bad)
jb
iret
mov
(bad)
(bad)
jmp
dec
sub
mov
push
daa
ins
or
inc
movs
mov
jnp
cmp
cmp
add
mov
rol
pop
xchg
sbb
das
mov
add
outs
pop
int3
mov
and
mov
(bad)
dec
stos
jnp
cmp
sub
mov
and
push
(bad)
jg
int3
cmp
(bad)
(bad)
(bad)
jmp
push
and
mov
cld
mov
dec
and
add
mov
imul
sub
(bad)
inc
push
ds
aam
xchg
pop
test
jp
adc
cmps
sub
sub
(bad)
push
(bad)
fild
mov
jge
mov
xchg
daa
cmp
movs
inc
mov
mov
sbb
inc
js
add
and
adc
(bad)
mov
mov
sub
sbb
(bad)
(bad)
(bad)
mov
mov
in
pop
fwait
call
rcr
ins
jge
stos
push
sti
out
lods
rcr
(bad)
out
clc
call
jo
dec
int
push
(bad)
es
and
out
imul
in
xor
(bad)
jmp
retf
push
pop
adc
xor
(bad)
(bad)
(bad)
inc
mov
mov
arpl
cmp
pop
pop
and
pushf
xchg
int
jmp
call
pusha
xor
or
jnp
fwait
pusha
fnstcw
inc
xchg
repnz
arpl
(bad)
call
int
daa
cmp
add
pop
dec
(bad)
mov
mov
sub
mov
int
dec
je
ss
clc
(bad)
(bad)
jmp
clc
add
xchg
dec
xchg
cmp
je
out
repz
into
mov
jmp
repnz
push
cld
loope
adc
sbb
sti
adc
or
xor
mov
add
pop
mov
and
xor
fisub
or
(bad)
(bad)
call
into
call
or
push
addr16
test
cmps
arpl
or
adc
and
push
mov
enter
sub
(bad)
not
jae
cld
sar
(bad)
fidiv
jne
and
add
xlat
jne
mov
fst
add
das
pop
mov
es
pop
and
xor
(bad)
call
repnz
push
jo
cmp
fs
pop
retf
outs
retf
add
or
jp
pop
add
mov
fs
sbb
aad
icebp
popa
(bad)
jmp
(bad)
shl
xchg
pop
push
sbb
js
xor
push
inc
mov
sahf
fidivr
(bad)
mov
mov
ror
addr16
retf
mov
dec
ss
mov
cld
ins
fwait
xchg
loopne
es
mov
push
pop
cmp
pop
je
je
les
adc
adc
call
cld
pop
(bad)
mov
jnp
sbb
cmc
xchg
mov
mov
and
and
je
fadd
call
mov
push
adc
in
mov
retf
pop
stc
push
jp
fsubp
pop
(bad)
(bad)
(bad)
dec
push
add
lods
or
mov
push
call
xchg
pop
aaa
sub
xchg
(bad)
(bad)
(bad)
(bad)
push
addr16
hlt
mov
push
jbe
mov
ret
jmp
(bad)
out
icebp
pop
sub
cmp
mov
xor
pop
push
jg
dec
fwait
inc
pop
scas
lahf
cmp
pop
int3
outs
es
loop
test
jecxz
pop
adc
loope
push
ficom
lea
nop
pop
pusha
cmp
pop
xor
and
(bad)
(bad)
jg
fistp
in
fld
dec
push
sbb
or
shl
mov
mov
inc
jle
imul
scas
dec
lahf
std
xchg
dec
retf
pushf
inc
(bad)
push
scas
inc
or
jle
pop
pop
(bad)
loopne
xor
dec
pop
mov
mov
std
leave
sub
std
(bad)
(bad)
mov
movs
stos
push
mov
loopne
pop
rcl
into
fs
add
push
cmps
pop
adc
pop
dec
call
(bad)
or
imul
add
inc
xchg
adc
dec
cmp
or
mov
sub
xor
dec
jmp
scas
jno
xchg
int
iret
push
mov
cdq
enter
xchg
push
add
out
sahf
xlat
mov
xchg
push
adc
sti
sahf
stos
call
test
adc
pop
(bad)
(bad)
call
sar
add
dec
aad
pop
sub
leave
lods
mov
jecxz
xchg
push
int
mov
push
retf
jmp
aam
add
(bad)
(bad)
call
repnz
xor
pop
xor
cmp
ret
xor
dec
aam
out
jae
mov
lea
mov
lahf
pop
xchg
inc
xchg
stos
addr16
sub
arpl
ins
neg
inc
and
out
adc
call
add
enter
mov
repz
xor
(bad)
(bad)
push
xor
out
and
imul
cli
pop
inc
or
lds
repnz
call
inc
cwde
pop
pop
pop
stc
or
mov
adc
fcomp
call
call
and
or
sbb
test
(bad)
(bad)
(bad)
push
fs
xchg
inc
stc
in
out
push
push
dec
test
mov
in
add
adc
imul
adc
dec
sahf
mov
mov
dec
cmc
xor
ret
sar
(bad)
mov
ds
out
push
cmps
mov
sub
loope
data16
(bad)
(bad)
jg
fmul
sti
enter
std
std
popf
lods
aaa
sbb
or
jbe
mov
(bad)
dec
mov
jecxz
call
mov
sbb
sbb
or
pop
pop
cdq
test
cld
inc
dec
scas
fwait
ja
push
inc
mov
cmps
push
test
dec
jae
push
jl
test
sbb
pop
add
(bad)
and
(bad)
jmp
jno
stos
aad
xchg
mov
imul
jl
ins
outs
pop
mov
(bad)
push
loop
es
daa
add
jge
cmp
addr16
(bad)
(bad)
(bad)
jmp
adc
ja
cmc
inc
(bad)
iret
sbb
test
push
xor
jae
mov
jmp
mov
mov
push
pop
call
idiv
(bad)
(bad)
dec
(bad)
hlt
sahf
(bad)
sub
xchg
add
int3
xor
mov
pop
pushf
ds
inc
adc
xor
(bad)
(bad)
(bad)
call
mov
js
outs
(bad)
or
jns
es
aaa
push
dec
push
dec
lock
imul
add
rcl
out
xor
(bad)
sub
aad
das
ret
inc
dec
lods
sub
mov
addr16
daa
push
mov
push
les
push
mov
mov
lock
pop
shl
sbb
push
and
adc
out
cmps
push
mov
dec
sub
adc
(bad)
(bad)
mov
repz
xchg
mov
jmp
pop
mov
in
mov
in
call
(bad)
loopne
adc
jns
(bad)
(bad)
(bad)
inc
inc
fwait
inc
mov
sahf
push
mov
arpl
adc
enter
mov
ret
dec
add
push
mov
jle
xchg
sahf
jno
(bad)
(bad)
(bad)
call
jno
push
daa
push
clc
lahf
add
push
jno
sub
xchg
lods
cmp
push
clc
xchg
push
cmc
call
scas
adc
into
or
shl
mov
(bad)
jmp
ror
inc
daa
xor
(bad)
mov
nop
lea
dec
push
sti
dec
(bad)
fcomip
jmp
push
ror
test
fdivrp
xlat
rcl
movs
xor
sub
clc
(bad)
mov
cdq
aas
jg
shr
dec
jnp
sahf
loope
push
sbb
cmps
loop
movs
mov
adc
pop
inc
sub
clc
cmp
jmp
rcl
pop
call
retf
shl
mov
call
inc
(bad)
(bad)
(bad)
dec
sbb
fcmovu
test
ret
mov
fidiv
ror
add
xchg
out
adc
mov
mov
test
push
(bad)
(bad)
(bad)
call
cmp
clc
fbld
bound
fimul
cmps
add
pop
pop
pop
xor
imul
sbb
test
dec
push
(bad)
and
push
out
inc
xor
aam
(bad)
xchg
add
retf
pop
inc
data16
loopne
sbb
imul
xlat
out
clc
outs
mov
push
fdiv
xor
mov
and
xchg
cmp
fucomp
(bad)
(bad)
call
sbb
mov
lss
icebp
xchg
push
mov
test
xchg
sbb
repz
dec
mov
cmp
sbb
sub
mov
stc
add
or
icebp
(bad)
(bad)
(bad)
jmp
sahf
lea
inc
fidivr
add
cmps
jbe
xchg
cdq
jne
jge
hlt
gs
out
mov
xchg
or
cmc
jns
jp
stos
int3
push
lods
mov
rcl
add
xchg
inc
aam
ds
adc
leave
iret
pop
dec
fs
cdq
call
or
pop
stc
stos
int3
arpl
mov
loop
(bad)
(bad)
(bad)
call
sahf
ins
add
pop
jecxz
movs
pop
pop
js
jp
xchg
mov
pop
inc
jp
icebp
stc
(bad)
(bad)
(bad)
dec
push
jae
ret
ret
shl
push
repnz
xor
xchg
cmp
mov
inc
int
test
pop
mov
(bad)
call
xchg
ret
imul
push
(bad)
(bad)
mov
inc
in
dec
mov
icebp
lahf
fwait
push
fcmovbe
pop
sub
retf
ret
jb
cmps
or
idiv
(bad)
jmp
mov
(bad)
aam
jg
movs
ins
xchg
imul
(bad)
adc
icebp
pop
je
and
push
adc
ds
pop
or
adc
aad
inc
xchg
je
jnp
lds
sti
sbb
jl
(bad)
(bad)
push
dec
cmp
mov
lods
push
mov
scas
mov
or
jecxz
imul
pushf
and
mov
loopne
test
mov
pop
fisttp
jne
mov
(bad)
jmp
push
(bad)
sub
mov
inc
sbb
xor
daa
test
les
jle
push
push
pop
mov
mov
jmp
mov
hlt
mov
inc
cmp
jae
sbb
jmp
adc
aam
inc
call
stos
jne
jle
mov
and
xor
test
dec
outs
loope
sub
mov
(bad)
(bad)
(bad)
mov
mov
jmp
sti
ficom
pop
clc
cdq
xor
into
dec
femms
mov
call
sahf
(bad)
mov
mov
jo
jmp
pop
(bad)
cmp
ret
stos
mov
add
fbld
aaa
std
(bad)
dec
dec
xor
adc
or
pusha
sub
sar
add
les
inc
movs
(bad)
rcr
mov
xchg
mov
inc
cmp
dec
shr
(bad)
(bad)
(bad)
inc
std
pop
jno
outs
outs
push
into
pop
imul
addr16
xor
call
push
daa
push
out
dec
sbb
xchg
pop
mov
pop
push
pop
cmps
cmp
fistp
sbb
(bad)
(bad)
inc
fisub
pop
mov
out
and
call
rcl
in
pushf
ins
retf
inc
sub
mov
in
inc
adc
and
cmps
or
dec
int
(bad)
(bad)
jmp
stc
pop
pop
into
ret
nop
mov
mov
or
push
jmp
loope
xor
add
pop
movs
pushf
mov
dec
out
or
sar
xchg
sar
(bad)
(bad)
sti
pop
xchg
stos
gs
mov
fstp
xor
cmp
push
xchg
push
ss
lahf
jne
inc
mov
stc
cmp
stos
add
dec
sub
es
adc
or
(bad)
(bad)
push
imul
aad
mov
or
int3
loope
fcomp
(bad)
(bad)
(bad)
(bad)
mov
sbb
jb
cmp
pop
sbb
mov
repz
sub
inc
idiv
pop
pushf
mov
jae
lock
push
nop
jno
loopne
mov
push
js
cmp
rol
cli
movs
pusha
and
gs
cmp
inc
pop
mov
jg
jg
add
stc
fdivr
mov
xchg
jmp
add
nop
sbb
test
xchg
stos
sar
call
pop
aaa
adc
(bad)
sub
and
stos
sbb
or
jg
rcr
push
jmp
or
fdivr
lahf
pop
jbe
push
adc
sub
pop
adc
pop
sar
push
cmp
test
mov
or
or
xor
rcl
push
xor
sub
dec
(bad)
and
(bad)
gs
(bad)
push
xor
cmp
jb
fsub
(bad)
dec
out
scas
mov
jmp
rcl
stos
and
pop
icebp
idiv
icebp
mov
cmps
jmp
cli
(bad)
mov
jmp
call
fstp
push
(bad)
(bad)
jg
add
jns
fs
sub
outs
xor
and
sbb
lods
cmps
push
push
cli
(bad)
mov
sub
mov
(bad)
(bad)
(bad)
(bad)
call
adc
ds
or
and
add
cmp
mov
mov
aaa
std
(bad)
call
mov
mov
inc
jne
jle
inc
dec
outs
nop
push
stos
arpl
or
mov
push
mov
test
stc
add
inc
lea
mov
and
inc
inc
add
sbb
(bad)
add
mov
jae
sub
(bad)
(bad)
call
inc
fisubr
dec
or
arpl
mov
push
mov
xor
add
jne
mov
pop
call
(bad)
(bad)
(bad)
dec
adc
popa
clc
in
stos
pop
out
fnstcw
mov
mov
rcl
jns
(bad)
jmp
clc
adc
mov
mov
pop
push
sbb
mov
inc
call
outs
(bad)
(bad)
jmp
sbb
scas
into
push
pop
pushf
pop
jge
adc
push
and
push
mov
not
push
jb
cmps
xchg
add
(bad)
(bad)
(bad)
(bad)
out
outs
add
push
xchg
sbb
rcl
(bad)
(bad)
lods
cmp
scas
jl
(bad)
retf
movs
xchg
inc
cli
call
loop
push
jp
or
xor
cmp
daa
add
jmp
loop
mov
add
push
inc
add
(bad)
(bad)
(bad)
push
mov
aas
or
xchg
ja
xchg
daa
retf
mov
sbb
mov
jecxz
mov
test
mov
(bad)
(bad)
(bad)
(bad)
sti
and
int3
xor
sbb
jns
jg
(bad)
(bad)
out
cmp
adc
mov
(bad)
(bad)
push
test
neg
lea
fdivr
cmp
sub
stc
xchg
in
pop
mov
(bad)
(bad)
(bad)
push
sbb
jle
call
dec
jns
cmp
sbb
mov
xchg
pop
add
loopne
adc
jno
sbb
call
xchg
and
adc
(bad)
mov
(bad)
sar
in
fdiv
fisttp
pop
cmp
daa
inc
inc
retf
xor
cli
(bad)
(bad)
mov
scas
retf
mov
mov
cmc
inc
mov
sar
in
call
mov
fwait
add
pop
dec
mov
cmp
jbe
dec
pusha
clc
(bad)
jmp
mov
imul
inc
lahf
(bad)
pop
jmp
or
call
push
fimul
add
lods
(bad)
pop
mov
jae
ds
(bad)
(bad)
call
in
xchg
xchg
loop
push
xor
sbb
mov
mov
mov
fistp
pop
fmul
cmp
rcl
dec
cmps
xor
add
(bad)
jmp
das
in
jge
mov
call
dec
arpl
lock
(bad)
(bad)
jg
(bad)
jo
sahf
jl
ja
mov
in
mov
pop
sub
sar
out
fadd
mov
mov
pop
rcl
sbb
pop
xchg
push
and
lods
inc
fst
out
dec
pop
mov
pushf
xchg
sub
sar
jmp
add
push
sub
inc
sbb
fild
pop
(bad)
(bad)
(bad)
push
dec
call
cli
push
scas
neg
jle
sti
pop
jmp
or
mov
scas
cli
(bad)
fnsave
pop
fcomp
fbld
xor
cli
mov
int
push
movs
scas
(bad)
(bad)
(bad)
jmp
inc
push
push
in
cs
shl
pop
mov
inc
popa
or
call
out
enter
(bad)
mov
mov
fnstcw
mov
retf
jmp
arpl
push
xlat
(bad)
(bad)
push
push
es
inc
pop
mov
jg
stos
inc
pop
movs
push
sub
ins
jmp
(bad)
(bad)
inc
fisub
adc
push
push
dec
out
nop
and
lock
call
shl
add
mov
inc
cmp
pop
mov
cmp
call
jl
es
mov
mov
or
(bad)
jl
sbb
mov
(bad)
in
gs
ret
pop
es
(bad)
jecxz
ja
inc
adc
fidivr
lods
dec
sub
(bad)
jmp
sbb
add
stc
sti
out
adc
pop
ds
jmp
dec
add
fimul
inc
out
fistp
push
push
dec
pop
mov
jmp
loop
push
inc
scas
movs
loopne
pop
lock
inc
mov
cmp
div
leave
in
aaa
in
jg
push
int3
int
retf
mov
call
mov
into
xchg
xchg
ror
dec
and
int
fisubr
(bad)
(bad)
call
mov
sub
add
push
ret
(bad)
add
jl
cli
mov
lsl
gs
ins
retf
sbb
(bad)
cmp
out
and
adc
mov
rol
jle
in
bound
stc
mov
cli
inc
icebp
clc
and
data16
mov
enter
sbb
(bad)
dec
dec
out
push
or
daa
dec
mov
fwait
xor
jecxz
xlat
and
cmp
(bad)
(bad)
dec
loope
mov
xchg
xor
mov
xchg
push
push
adc
add
jne
push
call
(bad)
fsub
(bad)
(bad)
lods
mov
mov
pop
adc
(bad)
(bad)
(bad)
push
repnz
adc
inc
cmc
jmp
imul
movs
jge
xchg
(bad)
dec
es
imul
pushf
test
pop
pop
lock
aaa
stos
adc
jne
push
imul
sti
adc
or
mov
loopne
lea
pushf
push
mov
(bad)
(bad)
fwait
push
movs
xor
push
cmp
jne
inc
inc
imul
mov
imul
adc
add
add
aam
inc
call
pushf
add
mov
push
into
rol
ret
mov
and
sub
mov
not
movzx
mov
shl
mov
sub
out
out
out
sbb
shl
dec
cmp
ficom
push
add
(bad)
test
ret
fs
cmp
pop
push
push
ret
add
icebp
jne
lods
mov
pop
sbb
enter
mov
data16
or
cmp
jmp
lods
push
jo
add
punpcklbw
(bad)
jmp
or
inc
ret
dec
inc
inc
or
or
data16
jle
pop
mov
jae
jbe
and
ins
fcmovnu
and
sahf
sbb
add
in
add
mov
sub
ja
lahf
sub
xor
fs
test
sbb
mov
in
add
lods
fld
je
dec
sub
mov
fs
add
outs
mov
cdq
add
jae
jne
jnp
jbe
imul
sti
mov
cli
add
imul
push
add
push
lea
mov
retf
sub
pop
mov
shl
not
jnp
mov
mov
xchg
pusha
inc
dec
in
adc
cwde
inc
push
pusha
or
dec
popf
icebp
(bad)
jae
xchg
lock
nop
sub
nop
add
ja
je
jmp
sub
mov
lea
jbe
sub
add
aas
jnp
inc
fwait
je
cmp
jo
jle
sbb
jns
jg
xchg
add
push
add
dec
aaa
les
jb
dec
and
sbb
scas
jmp
sbb
cs
xchg
and
mov
shl
mov
jg
pop
jmp
std
or
or
sub
and
push
jmp
cmp
mov
rol
ret
test
ret
lea
cmp
adc
icebp
push
shl
inc
cmp
pushf
stos
xchg
adc
or
jmp
inc
pop
xor
(bad)
sbb
pop
imul
js
and
xchg
jo
jge
les
clc
mov
xor
xor
jmp
jl
mov
pop
sub
push
jl
xchg
lea
(bad)
xchg
pop
repnz
nop
dec
out
shr
cwde
loopne
mov
cmp
jecxz
mov
dec
out
sub
push
pop
call
das
lds
inc
popa
xor
jle
cli
mov
dec
enter
loopne
lock
ret
xor
or
in
jl
add
cmp
add
mov
add
jb
je
aad
lock
cvtdq2ps
add
jmp
jo
ss
lea
add
sub
sub
adc
jns
or
add
in
xchg
mov
and
jl
inc
mov
mov
mov
sub
inc
pop
jmp
ret
icebp
shr
push
xchg
lahf
mov
sub
jmp
inc
push
jmp
cmp
(bad)
dec
or
aas
cmps
(bad)
imul
jno
in
pop
cld
push
ins
out
push
and
gs
push
push
bound
inc
iret
repz
aad
pop
mov
dec
das
xchg
call
loopne
add
retf
imul
adc
inc
loopne
mov
lods
gs
adc
test
bound
adc
rol
or
inc
xor
(bad)
fdivr
inc
jns
sbb
das
idiv
xor
jo
inc
xor
sbb
push
mov
push
adc
jp
sbb
in
sbb
adc
and
jmp
loope
(bad)
loopne
sti
push
lea
shr
dec
mov
jne
mov
push
rcl
pop
out
add
or
or
(bad)
out
and
ret
call
je
pop
and
push
lock
push
test
pop
or
lea
or
or
and
jp
cmp
lock
xchg
loop
dec
mov
mov
push
ror
daa
add
mov
clc
and
pop
xor
pop
push
into
add
nop
and
jne
sti
rcr
rol
jmp
test
cmc
jnp
xchg
inc
push
add
or
cmp
popa
ins
div
sub
mov
push
fild
add
mov
xor
lods
mov
shl
leave
add
xlat
jmp
repnz
ret
mov
sbb
pop
inc
mov
loopne
sub
push
add
or
pop
(bad)
xor
sbb
and
adc
gs
std
or
je
cmp
je
adc
ja
pusha
jmp
jmp
je
add
jle
add
outs
dec
mov
lods
imul
jmp
ins
sbb
cmp
cmp
or
ud2
je
jmp
and
inc
sub
mov
adc
icebp
sbb
sar
xchg
jl
das
mov
(bad)
pop
add
add
dec
call
push
pusha
sbb
idiv
int3
jne
or
leave
pop
mov
mov
jg
shr
cmp
ja
cmp
call
ja
pop
mov
or
rcl
les
clc
sub
(bad)
aas
fld
add
lods
add
add
fs
or
dec
xor
mov
add
push
ds
xchg
sar
in
mov
or
fmul
scas
push
sub
clc
inc
inc
mov
inc
loope
popf
or
adc
pop
cld
or
(bad)
popf
adc
and
ja
xchg
call
loopne
loopne
jmp
push
fucomp
jns
out
hlt
add
mov
mov
mov
adc
xchg
push
add
test
pusha
sub
sub
pop
popa
add
sbb
add
sub
jmp
inc
sub
sbb
add
add
adc
ins
xchg
xor
add
xor
add
pop
or
push
adc
dec
popf
ja
fiadd
dec
push
dec
or
xchg
mov
mov
neg
xchg
add
add
jg
(bad)
sahf
je
jb
imul
sub
jbe
push
ins
add
sbb
outs
inc
sub
mov
push
cmp
bound
add
mov
inc
inc
ins
add
fstp
call
xchg
push
push
add
scas
jo
and
mov
jp
pop
add
lock
popa
push
sbb
ja
popa
lahf
add
or
mov
addr16
push
jae
jnp
jo
xchg
push
je
outs
push
add
jbe
jge
add
cmps
push
sahf
leave
ja
mov
xchg
xor
sub
xor
fidivr
add
outs
dec
pcmpgtd
popa
outs
adc
xchg
retf
fidivr
dec
xchg
daa
xchg
sar
addr16
dec
jns
outs
fisubr
sbb
sub
push
xor
xor
sub
in
push
not
add
out
mov
fs
ins
dec
imul
out
dec
pop
cmp
add
outs
idiv
fidivr
cs
test
xchg
jp
jne
jbe
test
fs
(bad)
aas
outs
push
cs
xor
mov
inc
inc
mov
and
leave
inc
adc
push
push
jo
out
and
fsub
ror
aas
stos
movs
cmps
xchg
mov
and
mul
imul
popa
cmp
adc
add
arpl
mov
lock
and
test
dec
or
pop
enter
pusha
sbb
test
imul
sub
mov
cs
push
mov
mov
mov
(bad)
cmp
cmp
cli
or
dec
inc
push
popa
not
xor
cs
dec
mov
push
sbb
arpl
es
inc
dec
adc
dec
dec
inc
pop
push
inc
push
push
adc
inc
push
sub
adc
scas
pop
xchg
pop
imul
je
jbe
in
fsub
pop
inc
je
sbb
push
jnp
inc
pop
dec
ins
popa
addr16
jae
pop
inc
call
imul
jae
mov
loopne
mov
pop
inc
inc
out
dec
jo
add
inc
inc
loopne
add
(bad)
push
push
mov
sub
pop
cmp
xchg
push
lock
jecxz
pop
add
loopne
cmps
stc
ficom
push
inc
push
push
pop
pusha
jo
out
mov
nop
and
xor
cmp
xchg
lock
nop
repz
mov
cmp
dec
pop
push
js
call
cmp
loopne
cld
bswap
jns
out
sbb
test
popf
out
xchg
rol
add
add
mov
or
push
cmps
adc
adc
adc
adc
adc
outs
dec
pop
ficomp
push
fs
push
sbb
push
mov
rcl
dec
mov
std
je
popa
arpl
inc
js
je
mov
adc
push
into
pop
arpl
imul
fwait
bound
cmp
sbb
jo
popa
push
in
test
and
jo
dec
or
imul
ficomp
push
gs
inc
stos
imul
inc
outs
push
sbb
jecxz
mov
and
dec
mov
jo
popa
and
and
imul
mov
fidiv
push
sub
jbe
bound
pop
sub
imul
adc
add
mov
add
mov
mov
test
rcl
mov
add
(bad)
jle
sub
xor
and
add
sbb
sub
das
(bad)
jg
push
xchg
and
and
push
mov
stos
mov
(bad)
aas
shl
(bad)
cli
lock
inc
and
and
and
idiv
mov
(bad)
in
pop
push
loope
push
leave
and
call
jae
hlt
out
data16
call
les
sbb
call
and
lods
std
ins
cmc
push
push
repz
or
and
mov
or
les
sbb
push
sbb
sbb
fistp
sbb
jmp
pusha
neg
jo
sub
(bad)
fadd
iret
pop
in
(bad)
jg
scas
mov
mov
mov
stos
xchg
xchg
(bad)
mov
lods
mov
enter
mov
scas
jmp
push
repnz
in
and
movs
and
in
(bad)
outs
jle
gs
jmp
jmp
aad
ins
mov
fistp
sbb
into
daa
push
hlt
sub
daa
faddp
or
(bad)
clc
xchg
loop
(bad)
stc
jg
pusha
jnp
out
sti
xchg
div
(bad)
bnd
sbb
push
sbb
sbb
hlt
push
add
sbb
(bad)
data16
std
out
inc
sub
mov
outs
push
inc
neg
push
cmc
pop
(bad)
push
rcl
xor
push
outs
mov
xchg
fsubr
push
std
lock
push
stc
jmp
rol
out
(bad)
clc
repz
hlt
push
clc
jle
jmp
adc
sahf
test
jmp
sub
loope
cmps
ins
into
cmps
lods
pop
repnz
lock
rol
mov
xor
scas
and
out
pop
jecxz
jbe
mov
jg
and
(bad)
mov
out
dec
lock
push
jmp
(bad)
mov
xchg
js
xor
scas
and
inc
or
push
push
sbb
sbb
pop
lock
cmp
ds
ficom
es
data16
fisubr
xor
inc
daa
inc
mov
lds
add
call
inc
data16
push
(bad)
xchg
test
sbb
aam
dec
fdiv
nop
loopne
clc
jmp
out
scas
pop
es
sti
jmp
(bad)
leave
jp
dec
inc
cmp
scas
and
push
aad
push
sub
call
push
inc
(bad)
in
sub
and
sbb
out
(bad)
frstor
cs
jl
mov
cmps
idiv
dec
iret
shl
(bad)
call
and
push
lods
and
ins
int
loopne
sbb
(bad)
pop
or
lock
mov
movs
jmp
(bad)
lock
cmc
xor
fcmovnu
push
jg
les
mov
jbe
push
mov
pop
jmp
push
mov
cs
push
popa
inc
rol
cld
out
in
sti
sbb
fmul
mov
inc
mov
ret
mov
cmps
mov
lock
mov
sbb
icebp
inc
lds
sahf
cmp
push
aaa
ds
aas
ds
call
cmps
fwait
adc
push
xor
push
dec
push
cmps
sub
fsub
pop
imul
jmp
or
jle
adc
ficomp
fdivr
push
pop
pop
jnp
mov
push
stc
lock
out
(bad)
std
pop
leave
sahf
leave
lea
fdiv
xchg
push
lock
pop
push
jns
xor
xor
out
test
cmc
ss
pop
shl
js
cld
push
or
jle
fs
push
sbb
mov
(bad)
scas
out
pop
cdq
mov
(bad)
retf
sahf
(bad)
outs
add
jmp
sti
(bad)
ins
push
fld
jmp
lods
cmps
fstp
dec
loopne
add
aaa
in
push
or
mov
xor
mov
sbb
stc
out
clc
sti
(bad)
aaa
mov
pop
not
out
push
mov
int
fld
push
push
push
ds
ror
outs
mov
fistp
icebp
test
movs
mov
ficomp
lds
and
test
dec
sub
push
icebp
call
(bad)
scas
imul
or
xor
int
lock
out
mov
pop
std
je
sbb
std
xchg
out
xchg
jmp
pop
enter
sbb
shl
jmp
push
and
neg
mov
sbb
mov
dec
rcl
fist
pop
gs
push
push
mov
mov
in
jl
les
lock
jecxz
xor
std
pop
cwde
xchg
xor
mov
idiv
xor
xor
cld
into
mov
mov
mov
inc
xor
xchg
pop
dec
push
jecxz
mul
data16
jbe
pop
ins
sti
jne
movs
ins
jbe
xchg
mov
push
fneni(8087
cld
loopne
xchg
icebp
out
jmp
fsubp
inc
and
cs
add
outs
sub
sbb
mov
mov
into
fcomi
stos
call
inc
push
ss
mov
push
daa
push
daa
pop
mov
push
movs
xor
popa
ret
xlat
scas
add
in
loopne
cli
dec
mov
rol
clc
cld
std
sahf
repz
jmp
sahf
adc
sbb
jb
scas
in
pop
lods
cmp
sar
mov
inc
pushf
push
arpl
jo
ds
cmps
stos
cmp
push
push
jge
cmp
arpl
push
imul
push
es
imul
sbb
into
pop
sbb
or
into
sbb
mov
push
(bad)
cmp
into
sub
push
mov
mov
fcmovnu
repnz
loopne
mov
cmps
ret
sbb
pop
loopne
dec
es
movs
daa
push
cmps
xor
mov
ss
lahf
das
cs
ss
shr
xchg
retf
jbe
pushf
mov
add
scas
lock
xor
jbe
cmps
(bad)
push
and
pusha
(bad)
lahf
xchg
ds
lds
out
out
into
inc
in
scas
(bad)
push
(bad)
mov
iret
push
faddp
in
push
in
add
ss
dec
cmp
fdiv
loopne
icebp
push
out
push
jle
or
add
(bad)
push
lock
sbb
mov
mov
ss
mov
xchg
neg
push
scas
inc
adc
push
push
loopne
cmp
fst
(bad)
jmp
out
push
aas
sahf
mov
inc
xor
xor
es
inc
push
or
test
cmps
xor
pushf
sub
test
fistp
ficomp
jno
(bad)
adc
outs
sub
mov
mov
mov
fdivrp
repnz
out
ficomp
out
std
clc
cmc
push
repnz
repnz
dec
and
stos
push
in
sahf
and
ins
add
icebp
sbb
sbb
jbe
or
lock
jle
fisub
clc
mov
out
pop
pop
data16
xchg
jle
lock
cs
fistp
outs
push
pop
push
fisub
push
(bad)
and
mov
inc
es
mov
movs
fcom
mov
in
ins
data16
repnz
loop
mov
inc
cs
mov
(bad)
stos
jbe
and
lock
dec
push
cmps
mov
mov
xchg
jbe
and
ret
lods
sub
fcos
xchg
cmp
mov
mov
mov
out
repnz
hlt
clc
(bad)
out
xchg
or
ret
cmp
test
and
jbe
je
add
in
fisub
mov
jo
(bad)
inc
imul
mov
icebp
hlt
stc
jle
push
aad
jae
inc
mov
lds
(bad)
mov
xchg
lods
outs
fisttp
in
dec
(bad)
jmp
jne
jno
fstp
pop
jmp
xchg
jbe
sar
mov
adc
pop
push
iret
dec
inc
dec
ret
mov
(bad)
(bad)
ja
pop
shl
lea
mov
clc
das
jmp
mov
call
xor
out
inc
dec
mov
jo
ds
push
add
pop
add
xchg
jmp
add
jbe
adc
sti
stos
ret
push
push
stc
sub
xchg
add
mov
je
inc
call
(bad)
push
sbb
push
scas
pop
es
sub
stos
lea
push
jno
in
ror
retf
(bad)
sahf
mov
sti
stc
or
mov
adc
mov
push
jle
jbe
fdivr
scas
xlat
push
fsubp
pop
jle
es
cmp
lea
imul
scas
mov
inc
test
pop
jle
clc
in
(bad)
(bad)
fwait
push
ins
call
iret
les
push
mov
mov
stc
sbb
add
mul
push
repnz
jl
sub
pop
sub
sbb
(bad)
mov
cmp
loope
mov
jmp
mov
lahf
arpl
data16
sbb
imul
push
out
mov
add
leave
(bad)
push
cmp
mov
jno
stos
xchg
test
out
cmp
xor
es
test
jbe
stos
mov
nop
fwait
jle
scas
cmps
xchg
imul
jmp
out
xchg
cmp
sahf
adc
or
inc
jmp
and
shl
jecxz
pusha
shl
ret
push
mov
std
es
and
(bad)
adc
push
adc
and
ins
push
mov
cmp
sti
push
into
sub
int3
aam
rcl
xor
and
sbb
sbb
ret
je
rol
data16
data16
mov
(bad)
(bad)
int
push
stc
(bad)
shr
out
add
fnstsw
bound
jle
lods
and
push
sub
fcmovnu
push
sbb
dec
loop
std
ret
(bad)
call
mov
pop
jle
call
push
test
fwait
outs
add
das
push
loop
and
sub
xchg
(bad)
push
call
push
sbb
mov
out
sbb
and
cmps
mov
ds
add
push
rcl
adc
push
cmc
dec
dec
ds
inc
jbe
fwait
and
sub
inc
in
idiv
adc
mov
mov
out
push
idiv
outs
jbe
jmp
push
push
(bad)
push
out
xor
cdq
xchg
rol
js
ds
out
hlt
cmps
inc
xlat
sbb
mov
shr
ins
leave
mov
(bad)
ret
fmul
sbb
dec
pop
lock
ja
sbb
(bad)
ins
pop
jle
neg
push
loop
cmps
stos
movs
adc
jmp
test
loopne
stc
das
push
into
int3
movs
jle
mov
loope
push
push
ficomp
into
clc
jmp
xor
mov
(bad)
js
scas
xchg
jg
std
cli
jmp
std
aad
stos
scas
(bad)
out
xchg
fmulp
rcl
and
add
push
push
rcr
outs
fdivr
loope
xor
and
jbe
es
xchg
pop
mov
scas
cmps
xchg
aam
cmps
(bad)
mov
xchg
imul
outs
std
mov
mov
dec
sub
popw
mov
shl
sub
cmps
jmp
pop
inc
loopne
jbe
push
cli
pop
ss
call
cdq
xchg
adc
loope
imul
call
xchg
outs
fmul
clc
ror
stos
sub
es
outs
ins
std
in
fdivrp
(bad)
ror
sbb
mov
cmp
out
scas
push
call
std
and
(bad)
(bad)
mov
aaa
mov
ret
pop
jle
das
sub
mov
ror
sub
cld
aad
stos
pop
push
inc
ret
pop
retf
leave
push
loope
or
push
cld
sar
cmp
in
pop
dec
ss
dec
shl
cdq
outs
xchg
cld
es
and
inc
loopne
call
test
in
loope
(bad)
push
fsub
fld
mov
dec
cwde
push
jbe
inc
jle
mov
or
dec
mov
mov
fidiv
out
cmps
mov
jge
push
loop
clc
cmps
cli
jg
and
inc
cmps
(bad)
inc
stc
dec
(bad)
pop
sbb
test
jbe
cmps
and
push
shl
cli
jmp
ins
mov
push
fldenv
out
loop
sbb
dec
inc
test
jbe
xor
ret
and
jbe
sub
data16
call
out
cs
mov
lods
(bad)
loopne
mov
scas
js
mov
xor
pop
inc
lock
mov
idiv
aad
pushf
aas
std
idiv
pop
pop
daa
cwde
outs
dec
push
clc
pop
icebp
sbb
mov
inc
jmp
xchg
cld
jge
push
push
push
repnz
scas
test
test
es
out
mov
push
fild
cld
cmp
cmps
mov
into
mov
add
push
in
pop
cli
jle
(bad)
push
mov
data16
push
out
cs
push
clc
adc
pop
mov
ss
jecxz
push
ficomp
sbb
ins
pop
sbb
adc
mov
out
outs
out
outs
jmp
jbe
and
jle
(bad)
mov
ror
push
jg
push
in
mov
lods
loop
jp
fld
lock
cld
call
adc
sar
cdq
mov
sub
fidiv
(bad)
jmp
mov
cmps
sbb
mul
add
push
(bad)
xchg
rol
mov
test
push
mov
pop
out
(bad)
and
jl
pop
jle
or
imul
and
ins
fcmovb
pop
into
fistp
sbb
sbb
mov
and
out
push
imul
or
daa
mov
jbe
lahf
xor
xchg
loopne
aaa
push
scas
stos
outs
imul
sbb
xchg
cmp
sahf
sub
jg
and
repz
(bad)
jmp
add
adc
ss
es
inc
inc
cmps
push
mul
push
lock
add
cmps
cmps
and
loope
js
cs
ficomp
dec
cmp
push
scas
mov
(bad)
scas
std
jbe
pop
scas
sbb
adc
adc
in
data16
adc
mov
scas
std
push
pop
pop
test
test
push
mov
jbe
pop
call
in
inc
cmp
sbb
(bad)
clc
jbe
mov
ds
and
div
out
iret
and
push
inc
(bad)
outs
sub
mov
jbe
jle
sub
ss
and
fist
aam
jbe
jbe
sbb
loop
push
xchg
push
push
in
adc
add
fisubr
mov
inc
fbstp
ins
pop
test
xchg
push
retfw
and
js
fsub
in
cs
mov
out
xor
xchg
inc
add
stc
dec
cli
sbb
bound
push
jle
add
or
cs
add
push
out
mov
(bad)
fdivr
and
shl
out
out
int
out
test
push
and
sahf
into
and
(bad)
mov
nop
add
cld
fdivrp
and
xchg
cmps
inc
jbe
stos
fistp
push
cmp
mov
outs
aas
cmp
sbb
sbb
or
ss
mul
out
push
push
mov
jne
daa
pop
sbb
neg
cmps
aad
sahf
es
std
push
div
ins
aas
cmc
mov
and
(bad)
sbb
inc
push
push
or
test
in
sbb
data16
outs
repz
repnz
scas
mov
xor
scas
daa
sbb
in
lds
ds
ss
ins
lock
add
jbe
and
push
iret
cmps
aad
pop
sahf
retf
dec
cmp
out
cmps
xlat
lods
popa
rcr
(bad)
jne
(bad)
and
fcomp
pop
xchg
inc
mov
mov
data16
add
outs
mov
jbe
mov
pop
push
mov
ficomp
sahf
xor
es
push
push
test
jg
sbb
xchg
pop
(bad)
jmp
fild
in
imul
mov
pusha
mov
mov
loop
sbb
(bad)
test
push
repz
out
cmps
jmp
neg
cmp
sub
or
xlat
mov
test
cs
je
call
es
int3
push
pop
(bad)
(bad)
mov
fwait
sub
inc
popf
es
or
test
fld
hlt
pop
ds
sbb
and
(bad)
mov
cmc
call
dec
fadd
add
xchg
dec
sbb
div
sbb
loopne
add
jmp
adc
inc
rcr
(bad)
rcr
idiv
ss
and
clc
sbb
mov
push
ss
sub
mov
neg
mov
ror
mov
(bad)
jl
push
addr16
into
inc
shr
cmp
pop
inc
inc
outs
pop
mov
mov
sub
xchg
dec
pop
jo
xchg
clc
push
psubw
mov
out
push
sbb
and
enter
cmp
outs
(bad)
xor
push
retf
lock
dec
call
push
(bad)
xchg
cmc
sbb
test
xchg
xchg
sub
push
mov
inc
popa
mov
stc
mov
jmp
repnz
mov
mov
push
out
cli
pop
jbe
fld
into
fldenv
add
jle
imul
sub
jle
ds
inc
loopne
icebp
shl
jmp
ret
repnz
aad
(bad)
cld
call
inc
es
inc
or
(bad)
mov
(bad)
mov
sti
adc
in
ss
add
iret
and
(bad)
mov
(bad)
mov
out
mov
xor
call
aad
sub
out
hlt
outs
repz
hlt
outs
mov
fisub
or
adc
repz
mov
sar
jo
inc
jg
adc
cmp
pusha
outs
(bad)
(bad)
scas
cli
sbb
(bad)
ret
in
xlat
push
in
pop
aam
shr
shl
dec
fwait
clc
push
sar
(bad)
jmp
fs
mov
imul
sti
ds
cmp
stc
sahf
mov
pop
mov
mov
or
xor
add
jmp
mov
push
int
scas
(bad)
xor
(bad)
lods
xchg
mov
(bad)
out
lock
repz
xor
xor
mov
bound
ret
outs
cmp
outs
sbb
shl
add
mov
mov
cmp
sahf
repnz
rcr
mov
push
fs
out
push
sar
(bad)
jnp
mov
pop
jecxz
jmp
icebp
int3
mov
clc
clc
stos
sbb
(bad)
lods
mov
cmps
test
scas
mov
mov
add
fcomp
js
data16
jo
int3
jle
(bad)
sbb
dec
sahf
es
test
jmp
mov
xlat
push
mov
jnp
and
jmp
mov
or
stos
xchg
mov
fcomp
out
push
sti
inc
fadd
sub
icebp
sub
pop
cmp
das
mov
sub
sbb
fldcw
pop
cdq
ins
push
jle
leave
jne
jo
(bad)
cwde
mov
retf
xchg
loopne
outs
mov
mov
mov
and
mov
dec
(bad)
push
fisub
add
or
cmp
es
lock
jne
mov
sbb
neg
in
adc
adc
js
cmp
cld
jle
ficom
and
cmp
dec
cli
div
std
sbb
enter
add
push
mov
jg
in
lock
and
retf
mov
(bad)
mov
sub
test
push
pop
cs
sub
pop
sahf
xchg
push
(bad)
leave
and
xor
or
mov
stos
movs
clc
mov
std
stc
push
xlat
xor
and
lea
repz
mov
sbb
and
mov
inc
aaa
scas
out
mov
or
sbb
repz
mov
shr
movs
jno
data16
fadd
mov
je
lock
ret
and
test
sub
inc
adc
mov
cmp
int
icebp
ds
sbb
movs
sahf
sub
xchg
xor
(bad)
dec
sbb
fsubp
cs
pop
(bad)
pop
sbb
fidivr
pushf
or
cld
sahf
sahf
sub
out
jbe
xor
pop
cmp
mov
push
and
stos
test
mov
or
pop
push
cld
ret
(bad)
pop
ss
ja
fcmovb
cmps
lods
push
outs
fldenv
adc
test
adc
pop
clc
(bad)
jmp
push
out
lods
nop
jo
fsub
scas
xchg
dec
(bad)
fidivr
xchg
call
or
(bad)
ret
sub
lods
mov
ret
mov
pop
push
push
out
out
xchg
xchg
xchg
push
sub
pop
push
arpl
jle
jmp
(bad)
aas
dec
loopne
and
ins
outs
(bad)
out
ss
sub
push
xchg
push
and
jbe
push
out
ss
bsr
adc
int3
es
jmp
outs
push
xchg
push
dec
mov
lds
push
push
or
(bad)
fsubr
mov
aam
sbb
sbb
dec
loopne
fdivp
test
loope
mov
inc
mov
(bad)
out
adc
dec
push
xchg
jle
mov
cs
mov
push
(bad)
jns
pop
pop
lods
loopne
scas
(bad)
(bad)
cmp
retf
push
clc
adc
pop
fsub
(bad)
fmulp
mov
test
push
lea
scas
movs
ins
push
mov
scas
xlat
rol
fdivp
sbb
leave
mov
sub
and
pop
push
push
mov
add
cmp
loope
popf
inc
and
ds
in
sub
and
jle
rol
inc
inc
ds
loope
mov
test
std
(bad)
leave
jmp
frstor
pop
ficom
fld
add
sahf
mov
mov
mov
rcr
(bad)
pop
dec
cmps
call
xchg
adc
push
loopne
js
and
mov
pop
push
push
test
or
mov
push
push
call
adc
push
in
sbb
(bad)
jg
data16
push
mov
mov
ss
inc
push
outs
aad
ins
movs
xchg
push
ins
inc
fwait
dec
dec
ins
ja
mov
loope
sub
cwde
mov
mov
mov
sub
jle
fsub
sbb
mov
push
push
(bad)
mov
(bad)
in
push
push
lock
cmp
fidiv
xchg
and
fidiv
push
shr
inc
pop
fisttp
cld
scas
xchg
stc
in
mov
push
adc
xchg
sub
fsub
push
mov
sub
jmp
push
or
sahf
stos
inc
inc
div
cmc
gs
ds
mov
aad
cwde
or
dec
out
mov
rcl
inc
call
push
jle
push
ins
ss
cs
push
cld
or
mov
out
fcom
or
and
int3
fidiv
pop
mov
xchg
sub
rcr
push
push
dec
inc
data16
call
gs
push
jbe
mov
call
addr16
jb
(bad)
out
pop
popa
push
mov
outs
mov
scas
dec
and
dec
adc
dec
shr
mul
fst
es
bound
and
out
retf
retf
sub
add
out
aad
icebp
mov
(bad)
mov
stc
dec
ins
lahf
mov
cmc
sti
dec
not
out
repz
js
mov
out
out
out
ror
mov
xchg
xchg
push
mov
push
fnstcw
movs
test
es
in
mov
mov
cmp
inc
jge
out
cmps
shl
mov
icebp
mov
mov
(bad)
mov
pop
nop
sub
mov
fcomip
mov
and
fdiv
xchg
xor
xor
cmc
jmp
or
icebp
xor
mov
into
xchg
push
adc
mov
loopne
mov
push
test
pop
icebp
xchg
push
jg
idiv
div
repz
jbe
pop
sub
or
stos
add
pop
jbe
push
fstp
jle
pop
xor
pop
push
mov
xchg
fisubr
inc
inc
idiv
add
stc
cmc
imul
(bad)
not
push
in
xchg
adc
inc
sub
adc
stos
xchg
pop
sub
out
jle
mov
mov
sbb
jle
mov
(bad)
out
(bad)
xchg
data16
mov
pop
pushf
stos
fcmovnb
daa
pop
jp
and
(bad)
mov
ins
adc
jb
mov
xor
mov
idiv
ja
mov
cmps
jbe
dec
push
mov
outs
scas
pop
or
xchg
pusha
push
jnp
neg
sub
into
mov
xor
rol
sub
xor
repnz
cld
jmp
lds
push
fcom
push
sti
mov
je
je
add
into
add
sbb
adc
sub
mov
and
xchg
xor
cmps
es
push
shr
arpl
test
jle
cmp
xor
fcmovnbe
fwait
aad
mov
cwde
push
sub
mov
sti
sbb
sub
xchg
pop
fs
xchg
cmps
add
pusha
(bad)
jmp
jmp
push
jecxz
push
(bad)
fsubr
sub
mov
mov
push
out
push
mov
push
xchg
pushf
push
loopne
das
pop
ss
(bad)
add
push
jbe
data16
pop
outs
jns
adc
test
bound
adc
add
scas
aaa
jbe
inc
cs
sbb
je
add
mov
and
rcr
(bad)
mov
push
dec
push
dec
jp
and
test
(bad)
(bad)
fcmovne
dec
xor
xor
fnsave
mov
xchg
jbe
push
pavgb
sub
cmps
ficomp
pop
sub
repz
xchg
jmp
sbb
sbb
fnstcw
push
push
les
xchg
cmp
and
enter
loopne
push
(bad)
jp
call
adc
(bad)
mov
pop
cmps
push
mov
stos
inc
jmp
inc
cmp
movs
out
into
idiv
xchg
retf
cld
xchg
(bad)
mov
test
cs
rcr
ds
in
leave
lods
jne
popf
paddw
scas
icebp
(bad)
aam
imul
jl
sub
loop
ficomp
mov
mov
xlat
dec
shr
fdiv
mov
jl
int
xchg
push
outs
out
mov
scas
mov
mov
lds
push
push
mov
aas
outs
aam
dec
add
loopne
fnsave
shr
retw
cmps
xchg
scas
mov
adc
ret
adc
hlt
sahf
pop
dec
icebp
dec
neg
psubb
out
pop
lods
(bad)
clc
mov
push
cmp
hlt
pop
jg
lock
in
fmulp
lods
inc
inc
mov
mov
sbb
out
cmp
mov
mov
cwde
dec
cs
jg
jmp
or
sub
mov
push
or
push
add
es
push
in
ret
pop
stos
cs
scas
sbb
mov
xchg
lds
mov
dec
test
mov
adc
sbb
shl
neg
test
push
dec
sti
jbe
stc
push
test
cld
imul
jo
call
mov
inc
xchg
cs
aam
ret
std
shr
and
(bad)
and
call
mov
push
jle
inc
fst
sahf
mov
(bad)
sbb
and
addr16
(bad)
xlat
inc
movs
xchg
inc
push
stc
fiadd
pop
adc
add
ds
daa
push
pop
aam
mov
outs
outs
ss
pmaxsw
push
mov
outs
sub
into
ds
fs
pop
inc
sbb
(bad)
sti
pop
add
sbb
pop
add
mov
sti
cmps
and
call
cmps
cmps
loop
outs
popa
das
cmp
sub
jbe
out
pushf
daa
aam
or
push
pop
scas
fwait
push
sbb
add
mov
div
xlat
and
shr
mov
adc
ret
push
push
sbb
fcmovnb
and
push
aad
push
not
es
jbe
ins
mov
fadd
dec
stos
icebp
add
out
cdq
xchg
aaa
push
es
and
xchg
mov
div
cmc
aas
push
sbb
xchg
repz
cmovle
(bad)
out
mov
jmp
sub
or
cmps
int3
(bad)
fcomp
pop
fld
push
sahf
sub
(bad)
sub
mov
cs
sbb
scas
fidiv
sbb
mov
int
std
sbb
add
pop
repz
or
int
(bad)
clc
jg
push
dec
inc
add
and
add
outs
clc
pop
fwait
int3
(bad)
(bad)
(bad)
call
cmp
cmp
adc
jnp
in
mov
sbb
xchg
cmps
lods
xlat
push
imul
ins
std
nop
sub
inc
call
loopne
or
cmp
(bad)
(bad)
inc
cmc
mov
sub
xor
daa
add
test
jge
data16
cmp
pop
(bad)
(bad)
(bad)
jmp
rcl
sbb
xor
cmps
add
(bad)
ins
push
cmp
mov
(bad)
(bad)
(bad)
jmp
adc
(bad)
push
scas
dec
mov
xlat
scas
cmc
jb
icebp
ret
mov
dec
(bad)
(bad)
(bad)
jmp
pop
hlt
outs
dec
xchg
push
pop
push
lds
fld
mov
mov
cmp
sub
pop
(bad)
(bad)
(bad)
(bad)
dec
jecxz
xlat
jne
sti
call
mov
aad
addr16
out
push
cmp
jmp
(bad)
(bad)
push
(bad)
cld
call
(bad)
and
or
adc
or
sbb
aas
movs
jl
lods
(bad)
(bad)
(bad)
(bad)
cmp
adc
xchg
(bad)
xor
dec
call
sbb
imul
or
(bad)
(bad)
dec
jno
adc
mov
add
mov
fidivr
ror
(bad)
(bad)
(bad)
call
icebp
dec
mov
es
pop
(bad)
(bad)
call
ret
mov
sub
lds
inc
sbb
jns
gs
inc
mov
arpl
scas
ret
jmp
into
mov
popa
scas
inc
push
clc
in
or
enter
xchg
arpl
call
ret
jae
(bad)
(bad)
call
bound
xchg
mov
xchg
sub
mov
pop
inc
adc
(bad)
(bad)
jmp
cmp
or
push
jmp
add
nop
shl
cld
mov
bound
jne
jno
mov
leave
jg
not
sbb
mov
pop
lock
mov
push
cmc
(bad)
(bad)
mov
repnz
jb
cmp
test
push
mov
lods
sub
jmp
(bad)
(bad)
(bad)
jmp
clc
xchg
cld
test
add
mov
andnps
push
sub
xor
jmp
loop
cmp
adc
sbb
inc
scas
add
out
imul
(bad)
std
data16
ins
ja
jmp
xchg
push
push
fsubr
inc
test
cmps
in
hlt
sub
(bad)
jp
std
(bad)
(bad)
jmp
and
outs
mov
into
adc
int
jno
pop
lods
add
sbb
push
fbld
scas
jnp
loopne
ins
(bad)
retf
xlat
aad
jae
(bad)
(bad)
(bad)
mov
sbb
adc
mov
xchg
cmp
test
jne
mov
in
int3
or
test
(bad)
(bad)
dec
shl
scas
iret
xor
loope
and
sbb
push
jle
xchg
push
aaa
addr16
and
call
popf
ds
outs
push
add
sti
(bad)
jmp
xor
dec
pop
into
xor
popf
jmp
addr16
mov
int
fdiv
hlt
stos
dec
pop
jl
(bad)
inc
inc
sub
outs
cmps
call
mov
dec
sbb
sbb
adc
inc
push
pusha
xor
jo
ror
arpl
sub
cmp
and
jg
test
jno
(bad)
(bad)
(bad)
mov
or
out
push
mov
fbld
retf
jecxz
xchg
xchg
and
(bad)
(bad)
(bad)
push
ret
jmp
dec
xor
jno
jne
and
in
jg
push
(bad)
(bad)
(bad)
jmp
rcr
leave
mov
into
sahf
dec
mov
fld
movs
rol
xor
or
leave
xchg
push
sti
(bad)
call
xchg
sbb
lea
xor
jno
enter
dec
or
stos
push
arpl
xchg
sub
mov
ror
iret
pop
enter
and
lock
(bad)
(bad)
jmp
test
inc
sub
in
lods
sub
repz
mov
ins
or
cmp
fwait
pop
pop
clc
retf
jmp
daa
jmp
push
inc
out
sbb
inc
icebp
add
mov
shl
out
mov
out
loop
(bad)
(bad)
(bad)
jmp
and
lea
lea
popa
call
in
push
push
test
(bad)
(bad)
(bad)
push
and
push
popf
mov
movs
add
(bad)
jge
mov
call
movs
rcr
(bad)
jmp
lods
movs
inc
repz
call
rcr
push
sbb
std
out
(bad)
(bad)
(bad)
(bad)
mov
imul
adc
fst
ror
inc
or
movs
cmps
mov
push
xchg
gs
(bad)
(bad)
(bad)
push
fnsave
push
mov
imul
das
addr16
std
dec
push
inc
pop
push
std
push
pop
inc
gs
jmp
push
sbb
int3
sub
xchg
bound
das
shl
(bad)
jl
stos
mov
aaa
sbb
pop
pop
scas
movs
hlt
dec
inc
(bad)
adc
and
sub
call
(bad)
(bad)
(bad)
dec
sub
xchg
push
mov
xchg
(bad)
xor
pop
test
pop
lahf
push
or
sbb
(bad)
(bad)
(bad)
call
pop
ds
fwait
out
dec
xor
jg
sbb
inc
mov
daa
int
mov
xchg
jno
pushf
clc
inc
or
int
add
mov
imul
scas
xlat
add
mov
xchg
sbb
aaa
jb
lds
aaa
(bad)
(bad)
(bad)
(bad)
jl
int
mov
arpl
and
jns
mov
sbb
and
push
pushf
jns
(bad)
(bad)
(bad)
(bad)
jmp
add
inc
cmp
clc
adc
cli
rcr
jge
inc
imul
mov
out
ins
imul
mov
(bad)
loop
cdq
nop
and
sbb
push
adc
mov
shl
adc
inc
(bad)
(bad)
(bad)
jmp
loop
xor
cmps
or
jo
sub
or
std
test
inc
cwde
lds
sahf
movs
cli
(bad)
inc
push
(bad)
neg
mov
jp
and
(bad)
(bad)
fistp
shr
mov
add
loop
hlt
(bad)
or
push
pop
jg
xchg
xor
xlat
add
hlt
(bad)
(bad)
(bad)
jmp
test
addr16
cmp
and
mov
sub
lea
js
add
xor
adc
cli
lods
cmp
retf
std
dec
(bad)
(bad)
(bad)
(bad)
call
gs
ins
cmps
push
dec
lahf
mov
out
cmp
ror
pop
lea
imul
jge
pop
mov
pop
or
inc
xchg
in
push
pop
mov
cmp
and
push
in
pop
fwait
(bad)
(bad)
(bad)
dec
icebp
lods
push
out
mov
cmp
inc
xor
cwde
xor
test
jp
jns
aam
arpl
out
sbb
fdivrp
(bad)
inc
cld
data16
adc
cdq
not
fwait
jns
loop
out
test
(bad)
push
pop
inc
sbb
aad
add
pop
mov
(bad)
(bad)
mov
test
sub
pop
or
dec
push
mov
arpl
add
(bad)
(bad)
(bad)
call
mov
test
and
sub
repz
sti
mov
sahf
add
cs
js
jae
int3
stos
test
(bad)
call
add
dec
and
mov
or
dec
xor
and
sub
(bad)
jns
call
shl
push
into
sub
lods
stos
cmp
dec
clc
(bad)
jmp
or
(bad)
je
adc
add
fwait
or
int3
ins
bound
aad
(bad)
(bad)
(bad)
(bad)
cli
bound
scas
test
adc
add
or
fstp
jne
mov
(bad)
cmps
(bad)
(bad)
(bad)
jmp
inc
in
(bad)
mov
icebp
mov
icebp
mov
jmp
xchg
enter
aaa
in
sub
(bad)
(bad)
(bad)
(bad)
clc
jl
mov
pop
inc
mov
data16
ss
mov
sbb
int
retf
(bad)
(bad)
(bad)
dec
out
repz
jbe
fimul
frstor
shr
jmp
xchg
sub
(bad)
(bad)
(bad)
call
aad
xchg
cmp
mov
lods
cmc
popa
out
mov
stc
ror
lods
(bad)
(bad)
(bad)
call
neg
xchg
ret
fwait
stos
stos
push
mov
jg
call
fnstsw
loope
and
(bad)
(bad)
push
or
push
jbe
gs
xchg
add
xchg
repz
add
add
test
(bad)
(bad)
call
popf
rcr
and
imul
imul
pop
cwde
(bad)
dec
jg
into
fsub
add
xchg
jae
ficom
mov
mov
xchg
inc
jmp
cld
mov
scas
pop
push
jl
lahf
fcom
inc
add
idiv
out
movs
icebp
and
pop
cmc
push
das
and
or
cmp
xor
inc
fld
(bad)
(bad)
jmp
mov
gs
sahf
cli
out
xor
int3
mov
(bad)
sti
not
ds
mov
ror
(bad)
call
call
js
fs
or
or
and
fistp
mov
pop
jne
xor
push
cmp
ins
call
jmp
(bad)
(bad)
call
nop
mov
fnstcw
pusha
pop
hlt
mov
inc
inc
int3
jnp
mov
das
xlat
(bad)
(bad)
push
sti
outs
push
mov
xchg
call
cwde
jno
cmp
stos
lahf
xchg
mov
push
jg
retf
test
mov
sub
ds
or
cmp
jle
(bad)
(bad)
(bad)
call
(bad)
cli
les
sbb
stos
je
jnp
add
cmp
repz
div
inc
les
call
(bad)
les
cmc
iret
add
dec
out
mov
xchg
cmp
test
cmp
mov
xor
jmp
pop
mov
pop
pop
loope
nop
(bad)
scas
sti
fst
outs
test
sahf
pop
push
jb
or
jne
test
mov
pop
std
loope
les
test
push
inc
inc
(bad)
sti
and
js
mov
iret
les
push
and
(bad)
(bad)
call
shl
mov
mov
xchg
out
ret
mov
aam
stos
sahf
retf
mov
cmps
or
(bad)
(bad)
(bad)
fdiv
adc
sub
mov
mov
cld
adc
shl
xor
stos
add
(bad)
(bad)
inc
pushf
sti
stos
repz
pop
pop
outs
jp
js
jmp
pop
jmp
(bad)
push
cmp
out
sub
retf
stos
cld
lods
out
mov
push
dec
icebp
aaa
jecxz
(bad)
(bad)
call
loopne
jmp
pusha
mov
je
cmp
jae
cld
xchg
xor
(bad)
(bad)
dec
or
aad
retf
jmp
pop
lea
pop
mov
aaa
dec
mov
inc
push
pop
dec
(bad)
(bad)
(bad)
inc
push
cld
in
and
mov
add
sbb
call
mov
sbb
jnp
neg
push
cmps
jnp
les
clc
lahf
cld
bound
ins
add
ja
mov
cs
cmps
les
in
sbb
and
xchg
push
adc
pushf
jmp
jo
inc
push
sahf
ja
add
mov
retf
in
pop
pop
arpl
xlat
xchg
in
mov
pinsrw
movs
inc
inc
jnp
rcl
in
sbb
xlat
ins
call
cmp
jmp
push
mov
xor
gs
adc
(bad)
(bad)
(bad)
mov
or
sub
mov
xchg
(bad)
call
adc
jmp
(bad)
jg
add
outs
pop
dec
xor
pop
cmps
add
jle
adc
mov
adc
aad
adc
(bad)
(bad)
(bad)
cmp
imul
push
aad
sbb
cmps
mov
push
inc
test
(bad)
enter
(bad)
dec
xchg
xchg
mov
and
mov
fdivr
mov
loope
(bad)
call
cs
push
pop
outs
and
mov
mov
lods
mov
fcomp
(bad)
jmp
xor
es
inc
mov
jnp
cmp
xchg
dec
add
(bad)
xchg
gs
or
loop
jecxz
mov
add
(bad)
jg
mov
pop
xchg
test
or
xchg
fistp
dec
retw
mov
(bad)
push
sbb
(bad)
jmp
sub
xor
enter
aaa
cmp
std
(bad)
inc
daa
into
and
push
dec
cmp
add
xor
dec
add
push
cmp
(bad)
jmp
jbe
xchg
fdivr
pop
xlat
stos
in
pop
dec
or
push
out
xchg
dec
pop
gs
(bad)
hlt
js
(bad)
mov
stos
mov
je
or
dec
(bad)
fisubr
dec
adc
(bad)
call
jb
xor
mov
pop
in
(bad)
(bad)
inc
call
(bad)
fild
mov
jle
jge
xor
sub
(bad)
(bad)
jmp
inc
xchg
cmp
out
stos
cmc
xor
loop
inc
imul
fwait
mov
(bad)
(bad)
jmp
mov
and
call
repnz
bound
push
add
sub
mov
(bad)
mov
movs
and
(bad)
(bad)
(bad)
mov
aad
add
fld
dec
dec
aam
cmps
popa
fisub
jbe
les
cdq
xchg
(bad)
(bad)
js
add
xchg
xor
mov
ds
gs
shr
add
push
scas
adc
dec
ins
fdivp
jle
ja
dec
nop
ficomp
call
jb
mov
fwait
jno
iret
sub
add
and
shl
mov
mov
xchg
outs
leave
mov
shl
sbb
test
popf
mov
lock
(bad)
(bad)
call
cmp
dec
inc
cmp
scas
inc
leave
dec
pop
xchg
push
cmp
(bad)
jg
lods
dec
fsubr
cwde
jns
pop
inc
(bad)
(bad)
(bad)
call
jbe
loop
push
loope
dec
jl
jno
jge
iret
not
inc
imul
(bad)
(bad)
cmp
and
add
(bad)
cwde
inc
test
sahf
or
dec
cmps
clc
int
pop
fld
(bad)
(bad)
inc
lock
push
sbb
jecxz
xor
mov
or
cmps
inc
cli
(bad)
mov
adc
sub
xchg
(bad)
je
jae
mov
and
push
lods
loopne
icebp
out
ja
cmp
js
ins
pop
outs
or
mov
int3
sahf
jno
xchg
shl
cmp
mov
aas
retf
mov
(bad)
jmp
pop
sti
popf
int
scas
in
mov
pop
jb
(bad)
dec
cwde
ret
xor
pop
add
sub
test
sti
pop
pop
(bad)
mov
fisub
dec
pop
adc
pop
cmp
add
(bad)
(bad)
push
add
cmp
sub
xchg
dec
ret
mov
xchg
ins
push
test
xchg
fbld
adc
jns
cmps
sub
popa
test
pop
dec
pop
push
lds
cmp
and
jp
outs
mov
add
sub
(bad)
(bad)
(bad)
jmp
dec
pusha
mov
scas
ror
ins
lea
push
cmp
lea
add
cmp
(bad)
(bad)
(bad)
dec
repnz
movs
daa
jecxz
xchg
out
(bad)
inc
nop
sbb
xchg
inc
jb
cdq
neg
xchg
(bad)
(bad)
inc
lea
in
cdq
xchg
mul
xchg
cmp
(bad)
(bad)
(bad)
cli
ficomp
add
sub
lods
or
mov
or
dec
push
xchg
pop
cmc
call
jmp
das
or
int
sbb
mov
xchg
sti
jmp
pop
clc
mov
clc
push
test
inc
jmp
mov
(bad)
(bad)
jg
stos
xor
jp
mov
adc
test
sub
and
aam
call
sbb
mov
popa
call
add
les
push
inc
inc
call
sbb
mov
xchg
mov
cli
int
aam
dec
lock
mov
push
movs
and
mov
xchg
test
sub
push
ja
hlt
cmp
mov
push
stos
push
out
jns
fdivrp
lods
jecxz
push
retf
scas
in
mov
mov
std
push
mov
(bad)
dec
clc
mov
cmp
push
cmp
sbb
arpl
pop
add
mov
daa
mov
or
pop
push
fs
test
(bad)
(bad)
(bad)
inc
icebp
mov
int
inc
cmc
fidivr
inc
sub
sti
adc
mov
test
shr
cmp
pop
mov
outs
mov
xchg
and
sbb
push
or
ins
mov
mov
lock
inc
(bad)
(bad)
jg
ins
pusha
(bad)
cmp
mov
mov
mov
push
data16
cmp
pusha
retf
iret
neg
mul
push
cmp
pusha
cmp
vandnpd
dec
sti
jns
and
(bad)
(bad)
call
loope
mov
adc
mov
jl
mov
mov
(bad)
push
sub
loopne
or
scas
loop
imul
data16
call
call
and
push
sub
pop
adc
pop
loop
js
cld
xchg
or
int3
jo
dec
addr16
push
xor
or
gs
rcr
cmp
add
repz
rcl
add
add
(bad)
(bad)
(bad)
fdiv
ficomp
test
xchg
fcomi
sbb
imul
jp
lahf
xor
enter
(bad)
(bad)
(bad)
call
cmp
push
xchg
jg
push
mov
xor
pop
(bad)
xor
int3
fcom
push
inc
stc
loop
cdq
movs
sbb
xchg
pop
xchg
jns
and
(bad)
(bad)
jmp
test
test
and
push
ins
movs
inc
daa
add
aas
xchg
and
(bad)
(bad)
(bad)
push
inc
adc
pusha
lahf
data16
cmp
lahf
mov
mov
or
push
add
push
dec
dec
pusha
ds
das
test
lock
data16
in
jmp
mov
cwde
(bad)
(bad)
(bad)
jg
scas
mov
push
retf
jmp
push
test
add
jno
pop
dec
pop
daa
stos
jge
jecxz
sub
or
(bad)
mov
sub
test
fcomp
(bad)
sub
add
inc
call
adc
test
vpaddd
and
mov
sahf
adc
(bad)
call
push
out
int3
and
inc
sub
cld
ret
or
dec
mov
add
adc
inc
ds
dec
into
idiv
ret
xchg
mov
(bad)
jmp
dec
adc
dec
add
jae
dec
inc
(bad)
jp
pop
mov
mov
push
dec
mov
test
push
pop
xchg
dec
mov
not
stc
inc
sub
or
cld
xchg
pop
inc
mov
movs
mov
sti
mov
(bad)
(bad)
out
cli
jge
push
in
sbb
push
retf
pop
mov
cwde
xchg
jno
mov
call
dec
and
ja
push
sub
xchg
aaa
call
adc
test
movs
repnz
cwde
outs
das
mov
sub
dec
ret
jl
push
rcl
into
outs
adc
fdivr
(bad)
dec
cmp
nop
cmp
sahf
cmp
(bad)
int
sbb
ret
call
aam
jnp
std
(bad)
push
and
ds
mov
test
push
sbb
out
out
lods
add
(bad)
(bad)
(bad)
fst
mov
std
xchg
sbb
fsubr
rcl
pop
enter
add
(bad)
(bad)
(bad)
(bad)
aas
pop
adc
sub
hlt
bnd
xchg
pop
push
push
mov
sbb
loop
mov
(bad)
call
sub
xchg
and
aad
pop
cmps
mov
dec
mov
fcom
dec
cmp
(bad)
(bad)
call
add
inc
lahf
es
jl
and
inc
aam
pop
leave
jl
push
inc
out
test
and
mov
ins
cmp
sahf
mov
push
ja
call
xor
dec
repnz
sub
adc
and
addr16
call
sub
push
cld
jmp
(bad)
jns
push
scas
lea
(bad)
jmp
xchg
push
jmp
(bad)
(bad)
call
(bad)
test
test
cld
jns
mov
and
outs
dec
push
popf
or
sub
push
pop
loope
adc
or
push
xchg
sbb
mov
dec
cmps
sub
call
sahf
jmp
mov
(bad)
(bad)
jg
or
adc
cmp
mov
mov
xor
(bad)
(bad)
(bad)
(bad)
fld
mov
adc
lahf
xchg
rol
jb
shr
pop
fdivrp
(bad)
(bad)
inc
and
ds
cmc
ds
cmp
sbb
shl
ja
gs
(bad)
hlt
in
mov
mov
cmp
retf
fstp
pusha
mov
fs
arpl
ss
out
push
(bad)
(bad)
call
pop
addr16
cmp
xchg
xchg
mov
icebp
das
inc
jno
and
outs
mov
dec
adc
sbb
test
es
xor
outs
lods
(bad)
outs
aad
retf
nop
cli
sub
xor
sbb
cdq
fsub
dec
into
xchg
outs
mov
inc
jns
jne
sub
(bad)
(bad)
(bad)
fisttp
fist
mov
shl
jg
xor
add
test
aad
retf
sub
nop
xchg
push
loop
cli
in
ja
xlat
(bad)
(bad)
(bad)
mov
adc
pushf
xchg
test
dec
or
ins
stos
and
dec
cmps
and
(bad)
jg
scas
mov
jmp
rcl
xchg
scas
sbb
lds
inc
ror
(bad)
mov
xor
das
retf
xchg
imul
pop
pop
pop
jg
(bad)
dec
cmc
std
push
out
in
outs
jns
cmp
and
jmp
mov
fcomip
scas
mov
cmp
add
(bad)
int3
mov
out
push
inc
(bad)
(bad)
(bad)
inc
data16
loop
mov
sbb
jno
adc
and
push
xor
mov
mov
pop
cld
(bad)
(bad)
jmp
jnp
(bad)
jp
call
sar
inc
fs
or
dec
mov
jb
int
add
loopne
mov
sbb
dec
xchg
call
mov
cmp
cmps
cmc
cmp
sub
fisub
cli
dec
enter
aaa
xchg
cdq
jl
(bad)
(bad)
push
add
xchg
mov
add
repnz
fwait
adc
pop
cmc
jecxz
dec
fist
(bad)
out
sub
cmps
xor
xchg
scas
call
aam
adc
arpl
jne
sub
xor
sahf
jb
pop
imul
cdq
outs
jb
mov
mov
adc
xlat
lds
inc
or
(bad)
(bad)
(bad)
push
fs
push
jns
(bad)
pop
sub
xor
rcr
(bad)
inc
mov
sbb
retf
xor
lock
outs
pop
test
stos
mov
(bad)
jmp
push
mov
test
dec
enter
jecxz
cmp
jne
jle
pop
pop
dec
mov
(bad)
push
xchg
(bad)
sti
xchg
repz
fnstsw
pop
jmp
(bad)
sbb
push
sub
leave
fs
mov
stc
dec
adc
je
loop
pop
jmp
cmc
mov
mov
loop
inc
arpl
jmp
add
std
push
ins
xor
and
aas
xor
shr
jne
icebp
outs
mov
mov
inc
aas
mov
retf
fwait
or
arpl
test
inc
(bad)
inc
mov
or
xchg
sbb
jns
inc
push
or
and
sbb
call
pop
pop
adc
add
pop
add
(bad)
(bad)
call
mov
dec
(bad)
and
push
jl
jno
mov
(bad)
(bad)
(bad)
push
sub
and
add
xchg
push
ror
cmp
sub
(bad)
mov
jl
mov
pop
or
jns
push
push
sbb
stos
(bad)
(bad)
(bad)
push
jnp
stc
jne
pop
xchg
test
or
mov
mov
push
cli
pop
xor
(bad)
(bad)
(bad)
call
mov
test
pop
xchg
(bad)
out
std
dec
inc
cmp
sub
stc
jae
sahf
(bad)
out
cli
dec
mov
inc
push
bound
enter
(bad)
lock
and
(bad)
(bad)
jp
fistp
pop
test
test
jecxz
sti
xor
imul
cmps
xchg
push
jmp
(bad)
push
jb
outs
(bad)
(bad)
(bad)
push
mov
mov
jg
lods
in
add
test
ret
stos
cmp
aaa
xor
aaa
pushf
jno
(bad)
(bad)
(bad)
push
ror
add
stos
xor
ja
xchg
and
bound
push
inc
push
das
jecxz
xchg
pop
ins
jmp
jns
push
jno
shr
fmul
add
(bad)
(bad)
(bad)
jmp
sbb
(bad)
in
mov
loopne
mov
jb
daa
add
mov
cmp
xchg
xor
leave
call
mov
jmp
std
mov
mov
or
(bad)
(bad)
(bad)
jmp
xor
retf
ret
repz
jns
sub
mov
(bad)
fsubr
imul
(bad)
(bad)
call
xchg
fs
and
add
rcr
clc
mov
dec
out
xor
push
jg
xor
push
xor
xchg
int
jns
fst
adc
(bad)
out
fadd
dec
aam
(bad)
adc
nop
cmps
mov
add
(bad)
(bad)
(bad)
mov
push
jno
mov
daa
mov
lods
mov
mov
out
sub
mov
adc
(bad)
(bad)
(bad)
(bad)
fnsave
lods
or
cmp
or
sbb
pop
addr16
or
inc
std
ds
ins
movs
(bad)
bound
je
(bad)
call
cld
xchg
not
jae
push
pop
bnd
sbb
add
cld
adc
outs
(bad)
(bad)
cmp
leave
sti
mov
call
jmp
mov
jbe
cmc
jmp
sbb
or
xchg
pop
push
push
sbb
(bad)
call
push
add
ds
mov
push
mov
inc
adc
cmp
jns
repz
(bad)
call
fild
mov
(bad)
ss
adc
lahf
mov
cdq
(bad)
(bad)
(bad)
call
xor
mov
sbb
test
sub
js
cmp
std
xchg
sbb
cmps
sub
mov
push
push
inc
adc
mov
jp
cmps
dec
(bad)
(bad)
(bad)
push
jecxz
and
shl
lock
inc
mov
repnz
(bad)
jmp
popf
add
cli
pop
(bad)
(bad)
(bad)
jmp
jno
enter
dec
or
ret
push
or
repnz
sub
ja
inc
adc
xchg
push
fnstcw
sbb
je
and
mov
std
sub
scas
(bad)
(bad)
(bad)
mov
(bad)
jmp
adc
outs
out
out
adc
or
fistp
out
and
cmc
push
leave
fild
test
out
jp
mov
or
and
push
jbe
call
jmp
jno
push
rcr
adc
lock
outs
mov
(bad)
jmp
jge
dec
mov
mov
(bad)
arpl
dec
sub
gs
retf
mov
inc
mov
clc
xor
lea
pop
(bad)
(bad)
(bad)
inc
test
cmc
lods
inc
mov
xor
in
sahf
jmp
out
mov
xchg
push
loopne
cmp
(bad)
(bad)
call
ins
adc
push
jno
cmc
mov
mov
ret
xor
add
(bad)
(bad)
jmp
(bad)
in
jecxz
and
jbe
pop
jmp
es
cdq
stos
cmp
(bad)
add
call
mov
imul
adc
(bad)
pop
pop
push
lods
mov
retf
fwait
jae
dec
icebp
pop
sub
in
cmp
dec
xchg
push
or
jle
call
jo
add
or
mov
pusha
and
cdq
jmp
out
movs
ret
cmps
sar
lds
clc
(bad)
jg
movs
cmp
xchg
jbe
pop
adc
jbe
jmp
sub
push
lods
daa
adc
dec
outs
mov
add
inc
das
mov
ja
inc
popf
mov
adc
inc
cmps
and
mov
jo
(bad)
(bad)
(bad)
inc
sar
cmp
scas
and
xchg
adc
(bad)
jno
jp
and
xchg
sub
ds
jge
mov
popa
or
dec
mov
(bad)
jae
in
mov
dec
not
jo
and
xchg
out
add
(bad)
jmp
pusha
sub
mov
add
sub
inc
fucomp
cmc
in
xchg
rol
fcomip
inc
(bad)
push
cli
or
add
ret
cmc
es
jge
push
cld
pop
inc
xchg
outs
push
dec
jl
mov
mov
repz
push
fmul
ret
xor
inc
push
push
or
mov
cmps
inc
cmps
add
inc
enter
int
push
push
movs
push
mov
sbb
mov
sbb
mov
(bad)
js
and
movs
es
retf
jbe
and
test
fcmovnu
(bad)
(bad)
(bad)
call
call
mov
aad
cld
sub
mov
jecxz
xchg
(bad)
(bad)
(bad)
(bad)
jmp
outs
lahf
popf
rcl
push
push
xor
xlat
lods
and
es
push
or
push
lods
shl
stc
lahf
arpl
mov
sti
jle
(bad)
jmp
mov
mov
jmp
jg
js
dec
pusha
sbb
cmp
push
dec
inc
daa
inc
loope
or
(bad)
(bad)
(bad)
mov
scas
push
dec
cmp
sbb
loope
cwde
jnp
clc
fbstp
movs
jg
(bad)
dec
sahf
or
mov
jmp
jp
and
push
mov
jb
inc
dec
mov
mov
inc
adc
sub
mov
jl
xor
cmp
enter
js
jmp
repnz
(bad)
(bad)
call
push
mov
jmp
xchg
add
xor
pushf
stos
cwde
test
mov
movs
pop
icebp
imul
cmp
ds
(bad)
(bad)
mov
enter
adc
mov
xchg
out
or
scas
(bad)
(bad)
(bad)
push
mov
fist
sahf
inc
test
fst
(bad)
(bad)
(bad)
call
sbb
and
loop
sbb
pop
dec
sub
ds
sub
js
lods
push
scas
(bad)
dec
fidivr
mov
mov
push
push
sub
or
sbb
(bad)
(bad)
inc
scas
daa
test
cwde
jbe
cmp
out
push
xchg
(bad)
shl
pushf
arpl
dec
cmp
push
cld
jmp
(bad)
ins
dec
imul
dec
or
fsub
pop
movs
jno
push
jmp
fs
sub
mov
jg
or
sbb
xor
(bad)
(bad)
dec
push
scas
out
mov
xchg
das
loopne
xor
loop
cmp
dec
jmp
loope
cmc
into
fsub
dec
pop
dec
mov
push
stos
push
or
cmp
lock
inc
pop
sub
pop
sbb
mov
sar
(bad)
(bad)
jmp
imul
mov
(bad)
out
mov
stos
jmp
xlat
scas
push
and
pusha
jmp
cli
add
aaa
out
in
stos
test
add
pop
or
sar
dec
lock
popa
cmps
(bad)
xor
es
test
push
dec
and
push
(bad)
(bad)
(bad)
(bad)
cmp
mov
add
ins
jge
adc
cmp
cmp
int3
sub
aaa
std
test
cmp
sahf
shr
push
push
gs
mov
fisttp
jge
fsub
jmp
ret
cld
(bad)
scas
add
cmp
mov
aas
push
(bad)
(bad)
(bad)
inc
push
sbb
dec
mov
rcl
pop
jmp
std
mov
sbb
movs
data16
(bad)
(bad)
jmp
inc
pushf
in
pop
cmp
sbb
(bad)
xlat
mov
pushaw
jle
(bad)
(bad)
(bad)
jmp
jmp
and
pop
out
jo
fwait
shl
mov
push
in
ficomp
out
cli
call
and
xchg
jmp
movs
cmps
jns
and
adc
sti
inc
dec
popa
sub
rcl
into
lods
adc
repz
cmp
mov
test
push
and
or
sub
jmp
retf
cwde
imul
jp
rcl
icebp
add
fldcw
in
jmp
pop
push
dec
jle
(bad)
(bad)
jmp
loope
clc
test
jbe
(bad)
xor
loopne
retf
neg
pop
pop
sbb
(bad)
(bad)
(bad)
(bad)
jmp
cmp
or
adc
ret
fimul
or
xor
lock
push
mov
inc
and
(bad)
(bad)
call
jecxz
mov
pushf
inc
jbe
lods
pop
xor
inc
pop
aad
dec
pop
inc
les
adc
call
and
dec
int3
mov
repz
mov
les
rcr
(bad)
ins
pop
inc
jmp
loope
call
imul
fadd
(bad)
(bad)
(bad)
out
in
adc
stos
xchg
gs
std
and
jle
jecxz
xor
mov
mov
shl
push
hlt
push
xchg
(bad)
mov
adc
div
mov
cwde
pop
sub
jg
out
jns
xchg
and
in
(bad)
(bad)
(bad)
jmp
loop
dec
je
inc
mov
out
dec
out
and
mov
iret
sbb
dec
xor
pop
test
mov
call
cld
xchg
je
fdivr
pop
jle
cmc
lods
sar
cmp
push
jp
shl
(bad)
(bad)
jmp
mov
es
xor
cmp
xchg
stos
sbb
inc
jg
cmps
call
(bad)
(bad)
jmp
push
mov
outs
and
pop
mov
test
std
call
pusha
jns
or
inc
(bad)
pop
inc
pop
pop
enter
pop
ds
sub
dec
ins
pop
in
add
sbb
jg
xchg
fiadd
(bad)
(bad)
(bad)
js
or
pop
dec
and
retf
sbb
in
inc
pop
out
cdq
inc
mov
(bad)
out
cwde
inc
(bad)
push
inc
xor
movs
retf
sbb
pop
adc
test
int
inc
ja
cmp
pop
lock
pop
clc
mov
adc
mov
inc
jns
sti
es
std
ja
arpl
and
rcr
mov
and
or
mov
mov
mov
or
inc
cmps
ss
xchg
leave
iret
adc
cmp
inc
shl
xchg
add
mov
sbb
xchg
push
sub
pop
and
jb
fbstp
adc
sbb
jmp
jecxz
(bad)
(bad)
dec
dec
mov
sti
pop
lods
xchg
popf
mov
inc
es
imul
call
div
test
adc
mov
cdq
sub
bnd
inc
pop
call
bnd
lods
xor
adc
xchg
jge
or
in
or
js
or
pop
mov
xor
retf
(bad)
(bad)
(bad)
jmp
pop
and
addr16
jmp
outs
dec
push
xchg
adc
gs
lock
pop
sbb
push
lods
clc
jge
add
push
mov
sub
call
jmp
rol
scas
add
ror
pushf
xchg
das
inc
mov
fwait
jle
and
(bad)
jmp
add
sub
push
ja
xor
repz
mov
or
sbb
pop
push
fsubrp
pop
jne
or
mov
popa
in
enter
in
inc
jl
sti
(bad)
jmp
outs
(bad)
adc
dec
ja
mov
dec
pop
jmp
out
mov
pop
add
cmp
jb
xchg
retf
hlt
cmp
dec
(bad)
inc
jmp
or
cdq
data16
stc
cmp
dec
out
inc
(bad)
(bad)
inc
mov
(bad)
cmps
(bad)
xor
(bad)
push
cwde
mov
loopne
pop
int
adc
test
mov
xor
mov
fdivr
mov
dec
mov
add
das
mov
loopne
add
adc
(bad)
xchg
lahf
shr
ficom
jbe
loop
sub
push
inc
aad
push
mov
aas
xor
outs
mov
aad
inc
loopne
xlat
and
(bad)
(bad)
jmp
cld
inc
sbb
cmp
add
add
lahf
imul
(bad)
cmp
jbe
jmp
cmp
mov
mov
xchg
add
nop
lds
and
mov
sbb
adc
cmp
cmp
push
jmp
xchg
movs
data16
cmp
adc
jg
mov
push
popf
push
mov
mov
sub
(bad)
(bad)
push
test
inc
inc
mov
push
hlt
mov
repnz
(bad)
(bad)
(bad)
call
mov
cdq
ficomp
and
js
inc
adc
das
dec
in
(bad)
mov
cmp
xor
xchg
adc
leave
icebp
dec
aam
lods
mov
jmp
sub
outs
dec
or
dec
mov
int3
in
ins
data16
mov
mov
movs
call
(bad)
fucomi
cld
int
add
lock
inc
inc
mov
sub
inc
sbb
(bad)
(bad)
(bad)
call
scas
es
in
and
es
mov
ins
dec
xor
jne
dec
scas
sbb
add
and
ins
xchg
retf
arpl
jg
xlat
add
imul
cmp
push
fcom
jno
(bad)
(bad)
(bad)
jmp
jmp
(bad)
push
mov
inc
ja
ficomp
data16
in
(bad)
mov
sbb
ss
dec
sbb
fcmovnu
mov
daa
test
(bad)
jg
es
fistp
sub
fisub
retf
jbe
sub
(bad)
(bad)
jmp
mov
iret
nop
lea
in
enter
sbb
mov
adc
(bad)
call
(bad)
cs
les
out
dec
add
xchg
adc
sahf
add
mov
or
add
cmc
push
and
in
iret
mov
xor
loopne
push
inc
inc
(bad)
(bad)
(bad)
push
ds
mov
hlt
ins
scas
popf
sub
or
or
ja
test
(bad)
(bad)
(bad)
(bad)
mov
cmp
inc
jg
outs
inc
pop
pop
call
js
scas
sub
(bad)
dec
fdiv
clc
lods
scas
fxam
fiadd
outs
push
mov
sbb
cmp
popf
mov
add
xchg
cli
push
xchg
mov
inc
pop
std
(bad)
(bad)
(bad)
(bad)
adc
adc
(bad)
sub
cmp
or
fwait
xor
cmp
int3
pop
push
sub
aas
fcomp
sub
ss
pop
(bad)
(bad)
jg
ins
pop
sub
scas
add
push
fstp
inc
repnz
popf
retf
adc
(bad)
dec
icebp
enter
or
xchg
and
(bad)
(bad)
jg
and
hlt
shr
addr16
pop
pop
cmp
lock
(bad)
jns
mov
add
xlat
call
(bad)
(bad)
(bad)
fist
jp
jecxz
cdq
test
loop
xchg
rcl
fstp
aaa
in
xor
ja
in
push
jno
lock
jmp
jno
jno
stos
test
or
push
fild
sub
(bad)
(bad)
(bad)
jmp
and
imul
xor
push
lahf
dec
jmp
stc
dec
xor
mov
(bad)
mov
(bad)
jg
(bad)
test
jp
jecxz
cmp
jl
fild
cmps
ins
lods
(bad)
fild
(bad)
jg
dec
or
xchg
icebp
cdq
cmps
xor
mov
pusha
(bad)
ficom
adc
xor
es
and
jbe
in
push
inc
sub
xchg
test
inc
mov
dec
lds
sub
(bad)
fidiv
cmp
fidivr
push
xchg
bound
adc
dec
mov
dec
call
xchg
movs
in
push
loopne
inc
xchg
(bad)
in
mov
jnp
sbb
mov
fistp
jle
mov
je
scas
sbb
pop
inc
sbb
(bad)
(bad)
(bad)
call
adc
sub
mov
cs
push
idiv
fist
and
cdq
sub
mov
cmp
mov
lock
jmp
cmc
fstp
les
iret
pop
or
ror
push
push
(bad)
(bad)
mov
pop
ins
jmp
mov
pop
jle
pop
pop
inc
jl
ins
lock
(bad)
(bad)
(bad)
fcom
pop
pop
lock
popf
xor
repnz
(bad)
jbe
xor
call
mov
pop
add
(bad)
popf
cld
out
add
nop
mov
(bad)
jmp
push
arpl
sbb
pusha
aas
arpl
ror
push
cmps
push
(bad)
(bad)
(bad)
jmp
call
pop
fidiv
stos
sahf
sub
add
mov
(bad)
(bad)
jmp
sbb
or
cmp
jne
xchg
mov
ja
out
inc
pusha
fs
fwait
in
or
mov
pop
mov
add
xchg
lahf
arpl
iret
mov
add
inc
int3
push
(bad)
dec
push
lods
xchg
shl
std
xor
push
int
jecxz
mov
out
fdivr
scas
(bad)
(bad)
(bad)
jmp
jnp
aas
loope
add
and
js
popf
inc
xchg
jne
jbe
dec
jbe
cmp
jmp
push
jle
(bad)
jmp
inc
sar
(bad)
dec
sbb
int
imul
dec
nop
push
push
fucomip
addr16
mul
(bad)
std
(bad)
(bad)
mov
(bad)
push
sbb
cmp
lock
jns
sub
push
jne
jmp
pushf
sti
out
inc
sahf
jns
mov
pop
push
dec
lahf
inc
add
lods
cmp
je
sub
xchg
jge
call
jl
fdivr
(bad)
(bad)
jmp
mov
pop
lods
lods
out
nop
and
jns
dec
(bad)
xchg
adc
cmp
(bad)
inc
xor
(bad)
scas
aam
pop
mov
sbb
ror
inc
rol
out
jnp
jo
call
and
and
dec
ret
ret
mov
add
cmc
out
mov
call
sub
idiv
cmc
mov
imul
mov
icebp
(bad)
(bad)
(bad)
inc
les
outs
xor
stc
lahf
sub
inc
out
mov
jp
dec
xor
sti
push
(bad)
movs
cmp
mov
jmp
push
nop
fdiv
arpl
movs
pcmpeqb
mov
mov
mov
and
push
xor
cmps
outs
add
sbb
xchg
dec
(bad)
(bad)
(bad)
push
test
and
sub
jmpw
outs
and
inc
daa
lods
cwde
sbb
inc
mov
(bad)
das
push
cmp
mov
mov
cmp
or
xchg
fild
jmp
dec
add
add
cmp
(bad)
(bad)
jmp
pop
jae
cmps
(bad)
out
adc
mov
xchg
inc
stc
or
cmps
push
enter
fisub
(bad)
mov
or
adc
mov
add
cmp
ds
(bad)
(bad)
(bad)
jmp
(bad)
xchg
xor
jmp
jge
js
xchg
and
cli
fist
xor
out
jmp
(bad)
(bad)
(bad)
jmp
gs
xchg
call
mov
adc
rcl
add
in
cmp
mov
push
xchg
mov
pop
ins
xchg
outs
mov
(bad)
(bad)
jg
inc
mov
cmp
push
xor
push
dec
sti
int
(bad)
fcomip
cld
jnp
adc
fisttp
ja
loopne
dec
jecxz
dec
dec
iret
jmp
mov
(bad)
jmp
rol
add
xchg
sub
sbb
sbb
test
fcomip
(bad)
lea
jge
xor
jmp
pop
pop
call
in
int3
or
repz
call
daa
ins
xchg
out
(bad)
call
addr16
xchg
mov
pop
aad
cs
hlt
out
(bad)
jmp
aas
out
jecxz
and
jmp
xor
stc
push
rcr
pop
push
pop
in
jns
test
xor
scas
stos
push
dec
jmp
jmp
icebp
push
enter
xchg
imul
push
pop
dec
stos
jo
fcmovnu
stc
jmp
enter
(bad)
(bad)
or
in
in
jmp
std
call
(bad)
nop
dec
fdivr
sar
stos
cmp
dec
sahf
neg
fwait
rcl
mov
pushf
mov
pop
mov
fcomp
(bad)
push
cld
mov
jne
pop
lods
mov
and
in
mov
mov
stc
pop
push
mov
into
and
push
(bad)
jge
mov
dec
xchg
lahf
outs
std
mov
(bad)
(bad)
(bad)
(bad)
cmp
shr
jg
loope
mov
xor
jae
das
inc
das
test
je
adc
test
sub
(bad)
(bad)
dec
mov
sbb
xchg
xchg
dec
sbb
push
mov
popf
inc
stos
xchg
and
jns
and
(bad)
push
into
push
bnd
(bad)
jbe
gs
iret
icebp
aad
(bad)
fild
xchg
(bad)
pop
lea
cmp
mov
(bad)
(bad)
dec
icebp
mov
repnz
push
cmp
lea
sbb
mov
cmp
xchg
mov
sub
cld
xchg
cli
loope
fistp
mov
(bad)
adc
cdq
daa
mov
sub
pop
mov
fdivr
(bad)
retf
sahf
mov
ins
(bad)
(bad)
jg
in
je
add
jp
cmp
bound
lds
shl
cdq
sub
(bad)
(bad)
(bad)
inc
xchg
xor
jl
xor
imul
sti
repnz
(bad)
(bad)
inc
mov
mov
fcomp
leave
adc
scas
or
rcr
push
rcl
(bad)
jmp
inc
cmp
dec
bnd
xchg
mov
or
xchg
ss
mov
ret
(bad)
dec
clc
add
adc
mov
sahf
cmp
(bad)
stc
mov
(bad)
out
cmp
out
ja
cmc
xchg
mov
sbb
int3
jge
xor
cmps
pop
ret
gs
sar
xchg
xchg
mul
call
fimul
(bad)
and
arpl
(bad)
dec
cs
xchg
test
daa
adc
cdq
(bad)
jg
test
(bad)
(bad)
dec
mov
and
cmc
enter
out
xor
dec
xor
pop
jmp
aam
adc
call
(bad)
jo
jbe
fwait
retf
shr
aaa
dec
mov
jmp
mov
movs
clc
(bad)
(bad)
(bad)
jmp
push
scas
stc
nop
sub
adc
mov
adc
dec
or
cmp
jmp
and
in
out
mov
jae
fwait
xlat
pusha
repz
jecxz
mov
addr16
(bad)
(bad)
mov
sbb
xchg
pushf
fdecstp
or
jmp
daa
fwait
in
int3
cld
add
push
(bad)
and
cmps
fwait
(bad)
xor
push
dec
(bad)
(bad)
(bad)
dec
xor
rcr
scas
pop
cli
(bad)
jb
ds
adc
or
jmp
(bad)
(bad)
call
shl
jae
xor
and
pop
bound
sub
(bad)
(bad)
(bad)
jmp
in
dec
(bad)
mov
jns
jbe
data16
(bad)
(bad)
(bad)
call
aam
fidivr
ins
xor
pusha
call
inc
push
xchg
retf
int
retf
gs
mov
sub
(bad)
sub
(bad)
xor
mov
dec
or
xchg
addr16
mov
mov
push
cmp
mov
sub
mov
mov
(bad)
(bad)
(bad)
jmp
or
add
sub
test
lods
into
cmps
sub
iret
push
inc
xchg
lock
pop
mov
adc
inc
loopne
jmp
add
jle
push
xor
jmp
repnz
pusha
repnz
outs
adc
mov
mov
out
push
out
and
xchg
adc
(bad)
inc
xchg
xor
bound
mov
jl
aad
not
aam
cmp
(bad)
pop
out
fadd
cmp
hlt
or
out
dec
pop
push
xchg
hlt
cs
test
mov
jns
(bad)
std
mov
call
cmps
gs
pushf
or
das
jne
cmp
fldenv
mov
push
xchg
(bad)
call
mov
sti
cmp
sbb
xchg
jnp
nop
addr16
or
push
xor
(bad)
(bad)
mov
add
and
push
pop
int3
jns
or
popf
push
inc
xchg
test
adc
pushf
add
scas
ins
ja
dec
inc
and
push
and
push
cwde
in
add
jmp
outs
sub
outs
clc
mov
mov
push
in
inc
es
xchg
fistp
or
fcomip
jmp
xlat
movs
xchg
ror
popf
cmp
psubusb
cld
push
in
loopne
dec
mov
xchg
pop
shl
movs
pop
lock
cmp
icebp
daa
push
frstor
lods
stc
icebp
out
movs
mov
push
or
(bad)
(bad)
(bad)
call
sub
sub
scas
call
call
cmp
mov
imul
test
aam
mov
mov
enter
jle
jnp
mov
cmp
cli
jmp
jmp
ds
sub
dec
xchg
dec
inc
add
push
movs
mov
push
std
(bad)
jmp
shl
jo
retw
loopne
adc
fsubr
and
mov
sbb
(bad)
jg
call
ficom
in
push
movs
loope
jp
xlat
test
sbb
sti
jmp
jb
mov
in
mov
pop
in
mov
cmp
sub
cld
neg
push
pop
in
sti
cli
outs
dec
dec
test
mov
sub
(bad)
(bad)
jmp
ror
adc
sbb
and
cwde
adc
jmp
fs
cmps
cmc
dec
pop
cli
(bad)
(bad)
(bad)
(bad)
fst
mov
icebp
ret
push
pop
es
mov
push
arpl
inc
out
out
sub
mov
inc
mov
inc
stc
hlt
mov
repnz
pop
jns
movs
fiadd
dec
stos
or
(bad)
inc
adc
inc
or
cmp
call
out
dec
pop
dec
fdivr
xor
loop
(bad)
(bad)
(bad)
call
cmps
mov
es
cmp
sub
jg
mov
add
popa
lock
(bad)
(bad)
inc
ret
or
lea
xchg
hlt
xor
inc
jo
rcr
inc
and
clc
mov
(bad)
(bad)
inc
in
mov
sub
and
inc
push
call
sbb
sbb
bound
push
test
ret
arpl
cmp
adc
cli
(bad)
push
add
dec
cdq
sar
and
mov
nop
lods
out
and
jmp
pop
or
and
and
imul
int3
(bad)
(bad)
(bad)
(bad)
call
push
imul
pushf
jne
mov
and
fsubr
push
gs
in
lahf
mov
push
(bad)
(bad)
(bad)
dec
out
xor
cmc
inc
push
mov
nop
mov
and
inc
cdq
push
push
adc
push
retf
push
dec
push
mov
sbb
mov
scas
aas
shl
inc
(bad)
(bad)
(bad)
inc
mov
(bad)
mov
xchg
adc
mov
adc
(bad)
js
cmp
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
cmps
retf
sbb
out
mov
mov
std
or
mov
call
jo
adc
jo
mov
ja
or
push
fadd
sub
(bad)
(bad)
(bad)
push
repz
out
inc
mov
push
in
pop
leave
jge
(bad)
out
test
jno
xchg
test
je
call
push
into
mov
inc
movs
test
lods
xchg
jp
into
jno
gs
mov
das
outs
dec
shl
arpl
mov
loop
push
inc
mov
xchg
xchg
pop
mov
and
mov
(bad)
(bad)
call
arpl
test
xor
shl
retf
int3
and
xchg
jl
dec
xchg
rol
into
(bad)
(bad)
(bad)
dec
out
pop
jno
idiv
or
ins
daa
outs
pxor
xchg
fnstsw
and
(bad)
(bad)
dec
pop
sub
movs
int3
movs
mov
out
ins
idiv
push
push
loopne
dec
gs
arpl
xchg
(bad)
(bad)
jg
push
mov
push
fdivr
sbb
ret
iret
(bad)
(bad)
mov
(bad)
mov
int3
fsub
mov
retf
push
push
sar
(bad)
push
idiv
pop
or
neg
jne
lock
push
xor
leave
xchg
push
jecxz
movs
sahf
sbb
push
(bad)
stos
cmc
sub
pop
dec
push
(bad)
(bad)
(bad)
call
mov
jmp
jb
shr
cmp
push
xchg
xchg
xor
xor
inc
in
xchg
sub
mov
lahf
int3
xchg
mov
arpl
ss
(bad)
(bad)
(bad)
(bad)
aas
shr
jmp
sub
cmp
in
and
sbb
pop
lods
add
jmp
pop
lods
jle
mov
push
jmp
jnp
test
sbb
(bad)
(bad)
(bad)
jmp
in
pop
out
jnp
aam
xchg
call
pop
std
scas
dec
ins
mov
(bad)
(bad)
call
add
mov
inc
fisttp
cmps
cmp
mov
push
jmp
sub
lock
(bad)
(bad)
inc
inc
jl
sar
lea
xor
and
cwde
jns
inc
(bad)
jg
add
in
add
push
retf
dec
or
and
jbe
jo
sahf
push
mov
mov
aam
xchg
jbe
or
in
aam
adc
mov
repz
(bad)
(bad)
(bad)
inc
sbb
sbb
xlat
shr
dec
cmp
jne
pop
cmp
cmp
jmp
pop
fs
pop
lahf
gs
pop
dec
inc
rcr
cdq
(bad)
(bad)
(bad)
jmp
scas
push
je
movs
jle
inc
mov
ret
imul
mov
call
jb
jo
stos
jno
mov
mov
sub
bound
mov
push
cld
dec
mov
adc
mov
shl
fcom
or
inc
mov
cmp
xor
daa
daa
into
fidiv
(bad)
fsubr
clc
(bad)
inc
std
je
loopne
adc
hlt
cmp
dec
push
imul
in
mov
inc
push
jmp
imul
shl
mov
aas
or
jle
enter
pop
repnz
jmp
in
adc
(bad)
(bad)
call
and
in
and
lods
mov
sbb
sub
xor
push
pushf
cld
sub
lahf
shl
(bad)
(bad)
jmp
imul
mov
sub
ss
sahf
shl
je
dec
std
pop
frstor
xor
sbb
cmc
(bad)
call
hlt
pop
aas
lock
movs
xchg
cmp
mov
pop
xor
fstp
(bad)
scas
mov
mov
ja
dec
jecxz
cmps
jmp
dec
les
mov
xor
dec
pop
push
shl
sub
inc
in
xor
into
fwait
repnz
push
lods
xor
(bad)
(bad)
mov
pop
mov
cmps
or
inc
jl
and
(bad)
(bad)
dec
bound
test
cmps
sti
xlat
push
fmul
push
mov
jbe
(bad)
(bad)
jl
cs
mov
cmp
dec
imul
mov
xchg
sub
mov
lods
mov
imul
or
jl
(bad)
dec
ror
outs
inc
jbe
call
vsubps
arpl
fsubr
pop
ret
adc
mov
arpl
and
ins
add
call
jbe
sar
lods
scas
inc
sar
scas
and
inc
mov
lds
sub
dec
jp
outs
mov
mov
test
fs
cli
push
push
cmp
add
mov
jecxz
and
mov
hlt
nop
hlt
(bad)
(bad)
push
mov
xor
mov
pop
pop
cwde
mov
or
scas
clc
fld
in
push
clc
jbe
or
and
(bad)
jmp
add
or
pop
test
fdivr
imul
or
(bad)
(bad)
dec
cmp
icebp
jmp
shr
test
mov
ds
mov
mov
addr16
scas
mov
xchg
cmc
cs
cld
ja
push
cdq
call
(bad)
push
test
pop
mov
jbe
out
xchg
pop
inc
into
jecxz
mov
loope
(bad)
(bad)
(bad)
(bad)
call
sub
inc
out
fimul
scas
popa
popf
fldenv
pop
(bad)
call
push
dec
xchg
adc
inc
jmp
popf
imul
dec
fcomip
dec
jno
pop
xchg
dec
adc
std
adc
shr
pop
inc
xchg
sar
(bad)
(bad)
fcomip
push
retf
add
cli
sbb
aas
push
jnp
rcl
or
dec
mov
sar
(bad)
call
adc
sbb
int3
mov
dec
enter
repz
mov
cld
in
add
push
xchg
jbe
(bad)
(bad)
(bad)
push
and
adc
pop
mov
pop
sub
jbe
call
sbb
idiv
rcr
jo
sbb
(bad)
(bad)
(bad)
jmp
or
cmp
ja
mov
xchg
xchg
dec
jecxz
cld
out
inc
jmp
popa
pushf
popa
add
(bad)
(bad)
dec
test
int
ins
push
cmp
xchg
inc
cld
rcr
(bad)
(bad)
mov
ss
add
aad
test
cmc
jmp
(bad)
(bad)
push
jno
popf
les
outs
jo
dec
cdq
lahf
in
int
inc
(bad)
sbb
test
mov
(bad)
(bad)
jmp
push
xchg
xchg
dec
pop
nop
mov
imul
jb
or
int
mov
std
mov
test
xchg
xchg
or
fbstp
mov
sub
addr16
sub
cmp
loop
pushf
(bad)
cld
(bad)
(bad)
inc
xor
fimul
mov
mov
sbb
hlt
and
mov
jg
and
jmp
mov
mov
(bad)
call
lods
in
xor
xor
movs
loopne
mov
stc
icebp
cmp
movs
mov
scas
cli
(bad)
(bad)
(bad)
call
mov
iret
shl
and
test
push
sub
mov
pop
inc
call
ins
stos
pop
cdq
ins
ds
js
jp
push
or
cmp
out
pushf
(bad)
jmp
in
pop
pop
inc
jnp
add
ret
movs
add
sub
push
es
mov
fld
mov
inc
push
pop
jno
(bad)
(bad)
call
(bad)
sub
sahf
xchg
movs
scas
jbe
push
into
sub
addr16
out
inc
(bad)
sbb
lods
add
(bad)
fist
mov
push
retf
xchg
jmp
push
(bad)
and
je
ins
cmp
add
cmp
daa
add
jmp
aaa
pop
mov
mov
sub
dec
mov
rol
push
(bad)
(bad)
call
sbb
xchg
clc
retf
xor
pop
stos
(bad)
ret
push
sbb
mov
cmc
sbb
(bad)
mov
xchg
sti
int
add
inc
pusha
push
xchg
mov
adc
fistp
in
(bad)
(bad)
call
les
mov
and
mov
inc
aas
or
sbb
cmc
sbb
dec
(bad)
(bad)
(bad)
(bad)
push
test
ins
(bad)
sbb
pop
xchg
jmp
push
ss
loop
loopne
push
aam
retf
xor
int3
mov
in
scas
(bad)
(bad)
(bad)
push
lods
cdq
sbb
loope
cwde
mov
icebp
push
sub
xchg
xchg
sub
sahf
movs
jae
(bad)
(bad)
(bad)
jmp
imul
xchg
repnz
frstor
mov
(bad)
cmp
sbb
or
outs
outs
and
in
mov
mov
ds
(bad)
(bad)
(bad)
fistp
mov
fisub
adc
stc
dec
int3
movs
jno
push
addr16
(bad)
(bad)
call
add
addr16
add
imul
xor
inc
(bad)
sar
std
mov
(bad)
(bad)
(bad)
jmp
stc
push
loope
cdq
adc
inc
cwde
mov
add
out
push
(bad)
aas
ret
ficomp
push
icebp
jne
mov
pushf
mov
retf
mov
sbb
mov
mov
mov
shl
mov
xchg
jo
imul
pop
inc
push
mov
xchg
jmp
adc
inc
int3
xchg
out
cmps
inc
pop
stc
pop
shr
fild
fisttp
push
jae
sahf
mov
push
daa
adc
fimul
mov
jp
aas
jl
mov
mov
daa
cld
(bad)
(bad)
inc
mov
test
imul
xor
ret
push
xchg
cmp
leave
mov
cmps
bound
push
(bad)
inc
mul
fnstsw
or
icebp
into
push
mov
and
cmovo
mov
scas
pop
cmc
(bad)
(bad)
call
mov
clc
mov
mov
shr
sub
in
pushf
xchg
ret
imul
(bad)
(bad)
fbstp
int3
and
sbb
inc
add
mov
pop
outs
pop
pop
cmp
jo
jmp
mov
(bad)
addr16
xor
cwde
jne
js
and
or
(bad)
mov
pop
and
test
fsubr
lods
idiv
arpl
iret
or
push
in
adc
es
xor
inc
cmp
mov
mul
xor
jo
xchg
pusha
(bad)
jg
(bad)
ins
pop
in
xchg
sbb
mov
and
js
cmp
clc
sub
(bad)
and
mov
(bad)
out
cli
push
imul
inc
dec
inc
jnp
jo
shr
dec
fldcw
jo
xor
(bad)
(bad)
dec
enter
sub
cmps
les
inc
sbb
cmp
or
imul
mov
(bad)
(bad)
(bad)
call
jecxz
pop
and
les
mov
adc
repz
cmp
test
(bad)
(bad)
(bad)
call
aas
test
jecxz
loop
aas
push
add
mov
and
bound
xchg
dec
aam
in
call
jmp
add
enter
std
ins
cdq
inc
movs
xor
add
std
call
into
xchg
jecxz
and
sub
(bad)
(bad)
(bad)
dec
adc
repz
out
fmulp
loop
sbb
mov
cld
outs
pop
arpl
jmp
das
add
ins
lock
pop
hlt
inc
lea
inc
loop
iret
xchg
sbb
or
mov
push
(bad)
retf
pop
mov
je
mov
(bad)
mov
int
(bad)
(bad)
mov
adc
out
mov
test
ins
scas
(bad)
(bad)
(bad)
dec
add
popf
cmp
iret
cmc
loop
dec
sub
add
push
mov
dec
outs
call
call
cmp
add
dec
(bad)
dec
pop
and
cld
or
lock
xchg
xor
inc
mov
adc
mov
cmp
imul
or
daa
push
mov
jmp
xor
aad
jle
out
pop
outs
xchg
pop
scas
inc
loop
cmp
invd
(bad)
(bad)
(bad)
jg
fwait
mov
out
inc
xchg
jno
lods
jge
xor
sub
shl
clc
dec
mov
mov
das
pop
call
dec
call
movs
sahf
push
das
xor
mov
in
aam
out
mov
(bad)
(bad)
(bad)
fsubr
movs
aad
bound
adc
adc
mov
and
xor
das
cli
(bad)
cmp
adc
adc
or
lea
into
fsubr
(bad)
(bad)
call
jmp
push
xchg
sub
mov
cli
daa
jns
pop
cmp
push
sbb
fdivr
push
pop
out
(bad)
(bad)
(bad)
inc
jp
in
sbb
mov
inc
inc
pop
mov
xor
sub
addr16
sub
jg
(bad)
call
retf
scas
and
mov
leave
jb
and
jl
bound
add
(bad)
(bad)
cmp
pop
gs
xchg
inc
adc
arpl
cmps
das
movs
inc
leave
sbb
in
icebp
rcl
gs
(bad)
(bad)
(bad)
cli
pop
dec
pop
mov
or
sbb
mov
imul
pop
sbb
mov
sub
dec
(bad)
(bad)
(bad)
dec
popa
jle
jle
and
jp
pushf
loope
cmp
mov
dec
mov
lds
(bad)
(bad)
(bad)
(bad)
fisttp
out
mov
popa
lds
iret
or
jo
mov
or
(bad)
(bad)
dec
xchg
ror
ins
mov
dec
inc
sbb
pop
inc
fimul
mov
das
cld
fiadd
push
ret
jne
jecxz
dec
aad
or
jmp
in
sub
pop
mov
sub
xor
mov
xchg
fcmovbe
or
or
add
retf
ret
mov
jecxz
int3
sbb
xchg
inc
mov
dec
loope
mov
mov
or
loopne
(bad)
(bad)
jg
jo
mov
stos
jg
cld
add
movs
mov
xchg
je
or
(bad)
push
xor
lahf
stos
aad
cmps
dec
loopne
idiv
(bad)
(bad)
dec
xor
inc
jno
call
daa
arpl
cli
out
test
xor
(bad)
(bad)
call
add
pop
int
adc
push
ja
push
out
cmps
fild
test
sub
loopne
dec
out
jle
(bad)
(bad)
dec
daa
mov
and
out
(bad)
mov
cmp
int
imul
and
adc
retf
adc
add
jge
pcmpeqb
sub
mov
in
mov
fs
pop
xor
(bad)
stc
das
xor
add
jne
add
mov
(bad)
push
aad
fsubr
pop
hlt
test
mov
in
jl
cwde
(bad)
xor
mov
(bad)
(bad)
(bad)
(bad)
mov
push
inc
retf
into
out
inc
aam
out
dec
xchg
cmp
adc
push
movs
loop
(bad)
push
enter
call
inc
cmp
aas
mov
add
(bad)
(bad)
mov
clc
fstp
jmp
cmc
dec
sub
aaa
xor
movs
xchg
(bad)
jmp
push
push
aaa
mov
jle
and
jbe
xchg
cdq
popf
sub
sub
push
retf
(bad)
(bad)
(bad)
(bad)
mov
movs
sub
dec
fisubr
cmps
jae
mov
enter
(bad)
(bad)
(bad)
(bad)
jge
(bad)
aas
mov
out
inc
mov
retf
or
push
lods
scas
bound
(bad)
xlat
add
inc
xlat
out
int3
push
pop
add
mov
fcmovne
inc
mov
dec
add
mov
clc
(bad)
(bad)
jmp
xchg
es
cmps
shr
in
repnz
and
inc
jnp
pop
jne
sub
out
push
jmp
ss
push
cwde
es
sbb
(bad)
(bad)
dec
fs
rcr
dec
or
daa
add
test
ins
test
(bad)
mov
(bad)
call
push
sub
(bad)
xor
pop
cmc
(bad)
jge
or
pop
jbe
pop
pusha
leave
fs
add
imul
sbb
hlt
(bad)
call
push
and
mov
inc
or
pop
jp
out
pop
(bad)
(bad)
(bad)
(bad)
call
stos
clc
mov
(bad)
mov
(bad)
mov
cld
cs
pushf
mov
pop
xchg
loop
pop
(bad)
(bad)
(bad)
inc
mov
cmp
shr
sar
add
xchg
pop
or
call
mov
jmp
scas
pop
ja
(bad)
mov
jb
aad
xor
pop
ins
push
(bad)
addr16
add
jg
cwde
popf
xor
inc
arpl
or
(bad)
(bad)
(bad)
mov
inc
gs
je
enter
imul
call
jns
(bad)
(bad)
(bad)
js
mov
loopne
push
push
retf
xor
and
or
adc
push
popa
mov
inc
cmp
(bad)
inc
add
xor
mov
mov
jnp
and
and
and
aad
ret
(bad)
(bad)
(bad)
inc
iret
loopne
cmc
out
std
push
movs
mov
outs
pop
lea
in
inc
pop
adc
xchg
pushf
mov
inc
push
cld
mov
cwde
retf
mov
stos
xchg
ret
mov
addr16
(bad)
(bad)
call
sub
arpl
mov
dec
ror
cwde
in
nop
std
or
cli
ror
dec
std
inc
sbb
jb
(bad)
(bad)
dec
add
and
ja
fisub
aad
data16
dec
les
data16
(bad)
(bad)
(bad)
(bad)
call
sbb
xchg
or
outs
outs
popf
adc
xlat
xor
int
jl
jmp
inc
sar
(bad)
(bad)
dec
add
add
hlt
sub
repz
xchg
in
popf
call
aam
addr16
(bad)
(bad)
(bad)
call
cmp
xchg
jne
cmc
or
and
rcr
cmp
push
or
daa
mov
cld
push
mov
sbb
aad
mov
stos
mov
jp
xchg
xor
cmc
(bad)
(bad)
call
sahf
lock
cmp
cmps
pop
loope
sbb
rcl
rcl
push
sbb
inc
inc
shl
stc
ficomp
retf
rol
mov
ins
cmps
fst
sub
and
jecxz
inc
dec
pop
ins
sbb
cmp
push
(bad)
scas
mov
mov
aad
hlt
sti
retf
ja
(bad)
mov
popa
out
xchg
movs
test
addr16
pop
jp
add
sbb
(bad)
(bad)
jmp
scas
(bad)
lahf
xchg
sahf
jae
xor
jmp
into
outs
popa
test
(bad)
(bad)
call
aam
movs
xchg
test
fstp
or
mov
dec
sbb
test
test
sub
retf
dec
inc
(bad)
(bad)
inc
jnp
dec
(bad)
push
jnp
adc
pop
add
add
popf
pop
(bad)
(bad)
jmp
jle
xchg
ss
push
cmps
mov
cwde
mov
mov
outs
shl
aaa
jl
jo
mov
loop
cmps
lods
in
pop
ins
cld
xor
mov
inc
dec
repnz
outs
push
mov
iret
xchg
outs
jle
hlt
sar
imul
pushf
adc
pop
xlat
shr
daa
repz
pusha
ror
(bad)
(bad)
(bad)
dec
imul
add
mov
xchg
ret
les
loopne
rol
push
cli
(bad)
mov
pop
mov
or
(bad)
fbstp
mov
sbb
jmp
stc
add
(bad)
(bad)
(bad)
push
jmp
jae
mov
add
cs
cmps
or
(bad)
mov
xor
(bad)
(bad)
(bad)
jmp
mov
pop
or
pop
mov
jg
adc
pop
stos
mov
(bad)
jmp
shr
cmc
dec
xor
sbb
test
adc
mov
cli
imul
(bad)
mov
sub
popf
sbb
(bad)
mov
mov
ja
cmp
inc
stc
mov
jle
aas
in
(bad)
cli
loope
(bad)
mov
cmps
cld
sub
out
mov
out
div
(bad)
pop
repnz
mov
and
shl
lock
and
jmp
jge
xchg
and
push
call
or
(bad)
jg
add
cli
jle
push
mov
ins
or
pop
loopne
call
fwait
xchg
data16
movs
mov
shl
retf
int
(bad)
(bad)
dec
mov
xlat
aas
mov
sbb
add
(bad)
push
dec
rcl
ror
xchg
inc
pop
and
push
shl
mov
mov
adc
mov
add
or
(bad)
mov
and
iret
sub
mov
cmps
xchg
pusha
mov
test
(bad)
(bad)
(bad)
call
pushf
pop
jg
mov
lds
fstp
enter
popf
mov
(bad)
mov
mov
or
mov
mov
pop
or
mov
sub
std
push
push
retf
mov
retf
mov
call
out
pop
xor
(bad)
fisttp
cmp
pop
dec
dec
lock
sub
(bad)
jmp
fisubr
mov
test
fisubr
lods
das
nop
(bad)
(bad)
mov
ja
dec
dec
adc
(bad)
(bad)
call
push
jg
jb
rol
call
push
dec
push
push
xor
jmp
ja
iret
inc
lods
fs
(bad)
das
mov
dec
inc
into
std
add
jno
(bad)
mov
jae
scas
pop
sti
jmp
add
imul
add
push
(bad)
adc
(bad)
dec
mov
adc
call
dec
daa
cld
int3
add
(bad)
(bad)
jmp
or
mov
sbb
or
mov
add
in
ret
jae
push
aas
pop
arpl
pop
inc
cld
jecxz
pop
jp
sub
cs
jmp
call
cmp
pusha
push
cld
movs
std
fidivr
ins
cwde
jp
push
or
jecxz
pop
aas
call
(bad)
call
pop
pop
shl
inc
cmp
jge
push
push
(bad)
fcom
push
test
mov
icebp
inc
add
mov
push
sahf
stc
mov
fiadd
ja
push
xchg
(bad)
(bad)
jg
stos
shl
jp
lea
not
mov
in
xchg
push
jle
push
jecxz
icebp
(bad)
(bad)
(bad)
mov
mov
and
dec
xor
js
test
in
pushf
jno
mov
sbb
jmp
pop
lahf
mov
fs
jnp
push
out
xchg
cmps
fld
jno
(bad)
call
or
movs
leave
out
ds
mov
outs
mov
cmc
leave
stos
mov
cmc
nop
add
stos
out
daa
push
cmp
xchg
clc
dec
inc
and
(bad)
call
stc
fdiv
jg
arpl
jecxz
or
loopne
(bad)
mov
adc
call
inc
adc
enter
mov
hlt
push
or
int
les
inc
xor
dec
fnsave
sbb
std
pop
or
ret
xchg
and
retf
ins
mov
and
inc
(bad)
(bad)
(bad)
dec
ja
mov
sbb
xchg
mov
inc
and
adc
cs
jl
dec
sbb
add
(bad)
(bad)
(bad)
jmp
push
repz
push
or
jg
pop
loope
push
(bad)
(bad)
outs
loopne
adc
push
lock
(bad)
(bad)
call
and
push
mov
clc
pop
jbe
mov
cli
fs
repz
jb
mov
add
adc
adc
pop
inc
repz
cs
lea
add
xchg
(bad)
push
test
in
ror
(bad)
push
mov
cmps
sbb
mov
sbb
arpl
fstp
test
sti
sub
cmp
cmp
jmp
ins
fldenv
out
add
ds
inc
dec
xor
xor
mov
lods
sbb
dec
js
bound
(bad)
(bad)
(bad)
push
gs
pop
popf
dec
test
or
aaa
xchg
xlat
movs
clc
push
sahf
call
std
call
or
not
int3
mov
(bad)
(bad)
pop
xor
sub
dec
push
ds
add
clc
shl
scas
pop
adc
in
aas
(bad)
jmp
mov
aas
rcl
js
retf
mov
or
add
mov
stos
mov
mov
fiadd
sub
lea
cmp
(bad)
inc
scas
inc
test
clc
add
imul
cwde
mov
js
ficom
mov
xor
dec
cmc
jns
js
add
cmps
add
push
xchg
(bad)
(bad)
push
aad
cli
lods
retf
(bad)
push
mov
jo
adc
push
cli
shl
or
or
(bad)
(bad)
dec
ins
outs
inc
lea
lds
ret
cs
mov
jo
mov
movs
scas
xlat
in
pop
out
idiv
inc
daa
pmaxub
pusha
push
cmp
push
rcl
push
jnp
dec
inc
es
(bad)
(bad)
fcomip
cli
jmp
pushf
aad
dec
xchg
ss
or
cmp
(bad)
mov
std
pop
mov
jg
(bad)
repz
mov
jg
(bad)
(bad)
cmp
dec
out
pop
pop
dec
fild
in
in
mov
pop
cmps
add
push
imul
or
cmp
or
add
adc
sbb
std
dec
sub
loopne
leave
mov
(bad)
dec
xor
out
(bad)
fcomp
cmps
or
(bad)
call
in
outs
das
aaa
int3
mov
in
jnp
sbb
shl
or
pop
cmps
(bad)
(bad)
(bad)
call
cs
out
icebp
(bad)
fcomp
clc
scas
hlt
cmps
lods
or
call
xchg
pop
jnp
fisttp
cli
(bad)
(bad)
(bad)
call
jae
add
or
sub
in
leave
push
aam
cmp
add
add
pop
sbb
std
(bad)
(bad)
jmp
ja
mov
ret
jp
les
push
lea
adc
pop
(bad)
(bad)
(bad)
mov
(bad)
and
icebp
mov
enter
mov
cld
popa
stos
push
repz
inc
add
or
pushf
jp
cwde
int
xor
cmp
aad
cs
jge
sbb
(bad)
(bad)
(bad)
(bad)
dec
pop
push
push
inc
cmps
fwait
xchg
shl
pop
loop
mov
xchg
pusha
ror
and
(bad)
(bad)
(bad)
push
mov
repnz
xchg
into
add
icebp
mov
outs
mov
ins
inc
daa
sahf
sbb
(bad)
(bad)
(bad)
call
xor
ds
cmp
adc
mov
inc
lds
popa
cmc
out
push
push
add
(bad)
dec
xchg
ret
mov
push
ret
inc
fsub
inc
mov
jbe
out
inc
mov
pop
jmp
out
out
or
mov
in
push
mov
mov
dec
pop
(bad)
imul
sbb
dec
ss
scas
cli
(bad)
call
pop
dec
fs
ja
xchg
enter
jle
(bad)
jne
in
sbb
(bad)
cwde
jg
or
mov
sub
(bad)
(bad)
(bad)
push
repz
cmps
push
pop
arpl
inc
lods
clc
ins
add
xchg
not
(bad)
jmp
push
pop
dec
clc
dec
in
(bad)
(bad)
push
sbb
xchg
xchg
addr16
or
push
rcl
dec
sbb
sbb
lds
xchg
out
cmc
cwde
mov
aad
fsub
xor
xchg
sbb
push
sub
adc
stos
dec
adc
mov
loop
fbstp
repz
cdq
(bad)
call
add
xchg
clc
mov
loopne
push
bound
mov
mov
xor
(bad)
call
sub
jo
pop
out
hlt
(bad)
jge
call
mov
push
jle
add
ret
pop
sbb
pop
xchg
sub
dec
adc
jg
lods
popa
lock
pop
add
sbb
xor
scas
cli
sub
pop
push
lds
mov
(bad)
(bad)
(bad)
mov
xor
cmp
sbb
dec
add
stc
xchg
cmp
mov
cmps
retf
mov
adc
mov
pop
lahf
sub
sub
pop
scas
je
dec
and
jg
jmp
movs
pop
repnz
jno
cmp
push
mov
xchg
ss
shl
(bad)
(bad)
(bad)
(bad)
jmp
mov
dec
xor
pop
lock
repz
int
jns
(bad)
(bad)
(bad)
dec
into
inc
push
repnz
jp
pop
sahf
dec
push
and
cmp
bound
push
int3
adc
sub
(bad)
(bad)
(bad)
push
les
lahf
add
jnp
in
and
ja
popf
mov
or
rol
inc
cli
std
lds
jbe
adc
daa
mov
dec
in
es
sbb
lods
nop
(bad)
(bad)
(bad)
jmp
test
int
adc
loopne
cmps
push
into
push
mov
mov
sbb
xor
(bad)
(bad)
mov
test
cli
sub
ins
push
(bad)
aaa
jnp
sub
dec
pusha
(bad)
(bad)
(bad)
jmp
jle
mov
addr16
test
ftst
xchg
cmp
int3
sar
lahf
jl
(bad)
(bad)
dec
data16
inc
stc
mov
push
dec
jge
sahf
pop
pop
adc
mov
fiadd
dec
mov
xchg
pop
lods
mov
or
jae
out
xchg
sbb
sbb
push
jmp
imul
retf
outs
rol
xchg
inc
loop
mov
dec
inc
pushf
xchg
mov
repz
adc
(bad)
(bad)
mov
sbb
rcr
jnp
jp
pop
inc
stos
fsub
bound
pop
jbe
inc
inc
imul
fldcw
or
(bad)
(bad)
aas
test
sbb
xchg
fistp
pop
mov
dec
sub
(bad)
(bad)
(bad)
(bad)
push
scas
mov
ficomp
outs
mov
xor
retf
int3
in
(bad)
(bad)
mov
sbb
push
inc
ret
inc
push
pop
sub
leave
subps
adc
popf
push
out
mov
push
add
ds
or
jns
cmp
lea
shl
dec
movs
mov
stos
ret
out
or
push
sbb
std
(bad)
(bad)
inc
xor
mov
fld
repz
mov
fistp
mov
fsubrp
xchg
iret
loop
jg
sub
pop
stos
add
ret
adc
dec
fucomip
mov
(bad)
(bad)
(bad)
jmp
push
out
and
or
mov
(bad)
xchg
sbb
add
jae
(bad)
push
call
cli
add
repnz
sub
cmp
aas
out
xor
dec
(bad)
(bad)
inc
inc
movs
pop
lea
das
cmc
or
mov
sahf
das
or
sub
(bad)
(bad)
push
cwde
xlat
jg
(bad)
xchg
mov
aam
(bad)
call
ins
sub
or
loop
(bad)
jg
clc
rcl
icebp
xchg
jl
in
mov
ret
cmp
jle
or
hlt
jno
outs
sub
jbe
pusha
cmp
scas
retf
mov
jp
mov
mov
mov
mov
fs
pop
sbb
push
ds
das
std
mov
mov
mov
jmp
hlt
and
mov
imul
(bad)
(bad)
(bad)
(bad)
jmp
stos
shl
mov
es
xchg
pop
mov
in
arpl
push
inc
out
mov
pop
ins
pop
loopne
jmp
mov
icebp
mov
imul
pushf
pop
sub
sbb
jmp
call
cmp
mov
scas
(bad)
f2xm1
movs
and
test
retf
(bad)
popf
xchg
lods
and
(bad)
push
in
mov
dec
cmp
lahf
test
loop
fcom
fsub
sbb
(bad)
(bad)
inc
in
hlt
cmp
adc
daa
inc
xor
lahf
ins
push
fld
fidivr
lods
cmps
xor
fcomip
(bad)
in
ss
neg
icebp
iret
xchg
arpl
dec
mov
(bad)
lods
cli
mov
retf
xchg
fstp
push
(bad)
and
mov
retf
js
popa
mov
cli
mul
jmp
sbb
push
(bad)
push
imul
sub
xchg
or
aad
dec
xchg
outs
xchg
je
inc
push
adc
jg
fdiv
mov
inc
mov
xchg
push
jl
add
push
retf
cmp
fimul
jecxz
mov
loope
dec
xor
test
scas
xchg
sub
sbb
cld
lock
push
xchg
test
mov
popa
inc
(bad)
fsubr
xlat
std
(bad)
(bad)
call
sub
popa
fdivr
xor
and
mov
and
popa
stc
pusha
xchg
call
std
inc
icebp
push
pop
push
mov
aas
sub
mov
(bad)
(bad)
(bad)
jmp
ret
retf
mov
into
inc
inc
pop
retf
leave
jo
and
mov
and
mov
(bad)
(bad)
(bad)
dec
and
fs
inc
xchg
retf
xchg
ss
add
mov
sbb
outs
repnz
aad
jbe
(bad)
(bad)
jmp
and
and
xchg
mov
movs
dec
and
cmp
(bad)
(bad)
dec
sub
xchg
mov
xchg
mov
push
sti
retf
out
jnp
loop
pop
(bad)
sbb
ret
mov
mov
fdiv
sbb
imul
push
test
outs
or
mov
(bad)
(bad)
call
(bad)
adc
jmp
pop
mov
inc
sbb
fistp
mov
(bad)
dec
aad
movs
adc
movs
adc
mov
ja
sar
xchg
jg
dec
std
pushf
js
inc
in
mov
add
call
test
xchg
cmp
push
fidivr
jle
jg
mov
fmul
mov
enter
(bad)
(bad)
call
jo
jl
sti
jae
popa
or
push
add
xchg
jns
out
mov
aad
(bad)
(bad)
(bad)
fistp
outs
and
in
xchg
cld
cmp
push
ins
hlt
sub
mov
jnp
push
(bad)
fistp
pushf
(bad)
jmp
(bad)
jnp
lods
sbb
jecxz
mov
fild
push
xchg
xchg
jmp
in
cmp
dec
mov
pop
mov
out
xor
shl
aaa
inc
pop
adc
(bad)
mov
(bad)
(bad)
out
adc
push
sub
fdivr
frstor
popf
pusha
nop
movs
scas
cwde
int
(bad)
(bad)
(bad)
(bad)
call
shl
mov
add
jno
mov
xor
xor
addr16
ficom
(bad)
(bad)
(bad)
dec
test
bound
dec
ins
dec
pop
cmp
sbb
cs
addr16
(bad)
out
mov
push
adc
outs
cmp
pop
pop
xlat
jbe
hlt
(bad)
jmp
iret
pop
sub
das
adc
pushf
mov
push
enter
nop
mov
pop
inc
mov
jmp
repz
popf
cmp
jbe
cmc
int
mov
(bad)
(bad)
(bad)
call
out
or
inc
test
pop
cmps
push
push
add
xchg
adc
jl
fiadd
inc
cmp
jmp
lods
xchg
sub
icebp
push
push
dec
xchg
or
out
mov
(bad)
jns
iret
sub
dec
fiadd
aas
retf
inc
xor
mul
cmp
aaa
jne
push
or
(bad)
(bad)
(bad)
call
je
push
sub
or
or
fwait
test
sub
scas
mov
pop
cmp
icebp
(bad)
in
in
jle
add
and
sub
pop
aam
lods
popf
stc
lahf
hlt
mov
dec
in
sub
icebp
call
push
push
call
push
(bad)
or
rol
mov
mov
cwde
cmp
(bad)
(bad)
js
repnz
imul
and
jne
cmp
push
pushf
mov
pusha
iret
add
(bad)
(bad)
call
retf
movs
add
mov
fwait
xor
mov
push
adc
sbb
push
lods
(bad)
(bad)
(bad)
inc
hlt
loopne
inc
mov
fcomip
imul
adc
cmp
push
push
mov
push
sub
not
jmp
pop
vsqrtsd
push
adc
shr
jge
push
(bad)
(bad)
(bad)
jmp
pop
js
in
jmp
fist
cvttps2pi
adc
sbb
ret
pop
push
xchg
and
adc
jmp
jnp
fld
cmps
mov
test
mov
mov
add
pop
add
hlt
mov
test
or
push
into
and
outs
(bad)
(bad)
jmp
sahf
jne
test
mov
xchg
out
rcr
mov
iret
movs
mov
inc
(bad)
inc
lods
mov
jo
pop
xor
bound
in
pop
add
mov
dec
xchg
or
popa
les
add
loop
test
dec
pop
inc
sub
int3
hlt
stc
hlt
cld
lock
das
add
(bad)
(bad)
(bad)
inc
pop
mov
pop
rcr
dec
rcl
cmps
imul
mov
cli
in
jp
(bad)
fwait
mov
jbe
shl
push
je
mov
(bad)
mov
add
xor
mov
jo
(bad)
test
test
push
push
in
loop
pop
(bad)
dec
cmp
movs
push
adc
pushf
js
jnp
rcr
retf
sub
inc
and
(bad)
inc
xchg
test
mov
jmp
or
scas
inc
cmc
sbb
aam
fsubr
sar
ret
mov
and
push
test
add
imul
stos
(bad)
(bad)
inc
daa
into
add
push
cmps
add
jae
aaa
jno
cmp
mov
xor
push
xor
mov
mov
hlt
scas
into
jle
jecxz
pusha
scas
das
(bad)
dec
sbb
or
call
add
or
outs
mov
cmp
(bad)
(bad)
inc
repnz
dec
sbb
sahf
xchg
out
mov
and
clc
push
cmp
loop
jmp
js
out
jmp
push
in
or
xor
xlat
pop
push
hlt
leave
out
scas
xor
(bad)
mov
or
fwait
mov
adc
adc
daa
mov
aas
mov
(bad)
(bad)
fisttp
int
stc
data16
fimul
popf
lods
repz
mov
(bad)
lock
ror
push
(bad)
(bad)
(bad)
(bad)
cmp
xchg
arpl
cmp
cmp
or
jae
mov
loopne
stc
loope
(bad)
(bad)
(bad)
push
loope
pop
adc
and
mov
sbb
cs
cdq
mov
fcmovnu
(bad)
(bad)
retf
psrlq
mov
popa
jmp
in
push
inc
inc
hlt
int3
mov
lahf
push
mov
imul
cmps
mov
fs
mov
(bad)
(bad)
(bad)
(bad)
cld
in
push
xor
dec
dec
add
xor
push
pop
pop
pop
inc
ins
cmp
(bad)
sub
cmp
fcomip
adc
adc
xor
inc
mov
jle
or
clc
inc
jae
and
arpl
adc
leave
push
mov
adc
ss
pop
gs
(bad)
jmp
mov
mov
push
in
pop
mov
cmp
fst
and
dec
pop
out
(bad)
xor
dec
retf
fwait
into
hlt
adc
popf
lea
mov
add
out
(bad)
dec
xchg
mov
and
mov
ss
aaa
mov
test
inc
cld
push
loope
lahf
fiadd
sub
repnz
(bad)
(bad)
jmp
inc
sbb
push
pusha
mov
add
xor
mov
and
mov
xchg
sbb
(bad)
inc
push
lock
xchg
dec
outs
xchg
fstp
xchg
sbb
and
js
jecxz
push
call
or
in
sub
int3
(bad)
jg
or
cwde
xor
jb
mov
jg
test
(bad)
(bad)
call
mov
xor
ss
mov
jne
jecxz
mov
cld
enter
shr
movs
jns
repnz
sub
clc
mov
test
(bad)
(bad)
push
mov
push
inc
mov
rcr
sbb
(bad)
(bad)
mov
jno
xor
mov
jae
xor
pop
jno
pop
stos
outs
add
and
jmp
(bad)
cmp
or
mov
test
push
(bad)
(bad)
(bad)
jg
push
cli
dec
cmp
mov
sahf
inc
pop
mov
jmp
cmps
push
fisttp
call
sbb
outs
out
push
aad
dec
mov
push
jbe
jl
ins
jle
stc
add
(bad)
(bad)
(bad)
cmp
dec
int
xchg
mov
(bad)
in
scas
sti
stos
jno
sub
push
out
mov
push
int3
sub
mov
sar
push
scas
movs
daa
(bad)
push
popa
xchg
data16
add
out
jle
(bad)
(bad)
inc
retf
push
lea
push
or
lods
jmp
cmps
jns
dec
shl
outs
lock
mov
adc
(bad)
(bad)
fidiv
sbb
xchg
xchg
xchg
dec
sub
(bad)
es
scas
xor
lahf
out
daa
in
xchg
mov
cmp
push
xchg
cmc
xchg
xchg
and
push
ss
mov
adc
xchg
pop
retf
(bad)
call
movs
nop
mov
mov
add
(bad)
jg
xchg
test
ins
cmp
leave
jnp
stos
mov
mov
arpl
adc
inc
(bad)
(bad)
call
inc
sbb
push
mov
rcr
neg
popf
imul
lock
lock
loope
outs
outs
dec
test
or
cwde
cmp
pushf
xor
ret
outs
push
dec
xchg
rcl
out
pop
or
mov
or
pusha
cs
(bad)
(bad)
call
shl
repnz
pop
pop
clc
adc
dec
pushf
push
pop
inc
xchg
mov
shr
(bad)
(bad)
(bad)
push
mov
xchg
cmp
jl
sub
pop
lea
dec
retf
jl
lds
xchg
push
dec
(bad)
lods
pop
jecxz
(bad)
(bad)
(bad)
inc
retf
clc
(bad)
lods
fstp
out
fwait
mul
adc
cmp
pop
sbb
outs
clc
lods
pop
rol
xor
js
int3
mov
mov
mov
enter
sar
(bad)
(bad)
dec
adc
sub
test
mov
xchg
les
cmps
fmul
push
dec
jp
out
(bad)
(bad)
(bad)
jmp
(bad)
xchg
scas
push
mov
cmps
mov
sub
ss
test
fisttp
out
inc
mov
dec
outs
pop
mov
jecxz
enter
fsubp
jge
pop
sbb
push
and
(bad)
(bad)
(bad)
dec
cmps
leave
not
pop
test
ret
sbb
jmp
int3
pushf
mov
pop
out
xchg
out
pop
(bad)
(bad)
(bad)
inc
add
push
(bad)
adc
pop
nop
sub
sbb
iret
mov
ud1
dec
(bad)
(bad)
(bad)
call
in
dec
add
and
movs
shl
inc
adc
inc
aaa
mov
pop
sub
movs
in
(bad)
(bad)
(bad)
call
not
cld
dec
je
out
mov
(bad)
test
pop
xchg
and
out
adc
add
or
push
jl
je
stos
fisttp
dec
inc
outs
or
cmc
add
(bad)
(bad)
(bad)
inc
int3
sbb
vpaddw
icebp
jp
push
cmp
inc
push
movs
je
xlat
cmps
inc
push
ja
jge
(bad)
(bad)
out
clc
jp
jle
movs
or
push
fwait
add
les
or
std
(bad)
jmp
mov
in
push
adc
in
push
pop
into
mov
cmp
mov
inc
(bad)
jg
mov
adc
adc
adc
and
(bad)
(bad)
(bad)
fidivr
mov
and
cmp
pop
imul
(bad)
fdivrp
(bad)
(bad)
jmp
cmp
imul
test
lock
adc
fld
icebp
push
mov
loop
add
push
out
dec
(bad)
(bad)
mov
add
and
xlat
sbb
push
pop
shr
adc
(bad)
retf
adc
out
pushf
mov
jb
out
cmc
fcos
(bad)
(bad)
call
aaa
outs
add
mov
loopne
sub
sti
sbb
dec
add
pop
mov
or
pushf
add
mov
sub
sbb
jmp
xor
imul
jno
cmc
sub
clc
scas
(bad)
jg
inc
inc
mov
out
inc
mov
(bad)
pushf
pusha
xor
ds
mov
jbe
(bad)
(bad)
jmp
adc
sub
add
mov
xchg
retf
mov
or
mov
jmp
mov
ss
lock
ret
push
lahf
adc
lods
imul
push
and
adc
in
(bad)
lods
push
ret
repnz
sbb
(bad)
jg
iret
push
mov
push
xor
xchg
sti
xor
(bad)
(bad)
(bad)
jmp
fcompp
and
clc
and
push
mov
(bad)
imul
sbb
aad
xor
inc
lock
pusha
adc
push
fdivr
das
arpl
(bad)
(bad)
fild
pop
mov
or
xor
jl
stos
cli
cmp
retf
and
sbb
sub
(bad)
inc
test
mov
outs
add
imul
fsubr
dec
mov
hlt
cmc
xchg
adc
popa
fnstenv
and
sbb
and
popf
(bad)
(bad)
(bad)
jmp
ds
xlat
rol
loop
clc
pushf
popf
sbb
push
inc
enter
mov
pop
jge
call
pop
adc
add
(bad)
mov
fstp
pop
and
add
(bad)
(bad)
call
inc
dec
xor
and
mov
dec
adc
mov
push
sub
les
push
mul
inc
pop
(bad)
(bad)
(bad)
push
push
sub
movs
sbb
(bad)
cmc
test
fs
xor
mov
out
dec
push
cld
(bad)
call
dec
sub
in
shl
xchg
(bad)
test
cmp
shl
popa
push
(bad)
(bad)
jg
mov
and
xor
ins
jo
pop
jnp
out
jge
xor
nop
(bad)
pop
(bad)
(bad)
(bad)
inc
call
xor
xor
in
xor
inc
xor
out
ror
in
or
lock
dec
add
and
(bad)
cmps
push
sub
mov
(bad)
mov
mov
xchg
iret
in
mov
mov
pop
cdq
dec
scas
daa
(bad)
(bad)
(bad)
(bad)
fisubr
(bad)
(bad)
stos
fst
adc
xchg
mov
mov
nop
mov
cmp
(bad)
(bad)
(bad)
jmp
bound
sahf
push
lds
mov
pop
sbb
xchg
mov
(bad)
adc
stc
mov
(bad)
(bad)
jmp
(bad)
jg
xor
repz
cmc
fcomp
fmul
pusha
cmps
fidivr
(bad)
or
(bad)
(bad)
call
mov
rcr
test
fmul
idiv
dec
pop
mov
inc
cmp
mov
movs
ss
mov
jg
fcomip
sbb
xchg
push
mov
add
push
int
sahf
fisttp
push
(bad)
(bad)
jmp
int
dec
adc
dec
pop
retf
mov
sub
nop
loop
xor
(bad)
call
shr
outs
aaa
push
push
mov
sbb
sbb
outs
mov
imul
(bad)
cld
(bad)
(bad)
call
shr
stc
jg
dec
adc
into
int3
rcl
mov
call
xchg
enter
loopne
rcl
lahf
dec
mov
adc
or
in
repz
hlt
lahf
jmp
repz
pop
(bad)
(bad)
(bad)
mov
push
and
test
daa
es
mov
daa
movs
(bad)
(bad)
dec
scas
xchg
jnp
fimul
mov
push
inc
jno
in
cmp
cmp
mov
cwde
call
add
outs
mov
cmp
mov
mov
push
jle
xor
dec
pop
sar
gs
scas
cmp
pop
sar
mov
(bad)
(bad)
(bad)
call
cmps
inc
stos
push
jne
jno
mov
jmp
daa
push
and
repz
ret
(bad)
(bad)
call
shl
jae
push
mov
dec
inc
jecxz
movs
mov
shr
push
dec
xchg
jmp
mov
mov
jnp
sbb
es
lods
sbb
xchg
pop
into
mov
(bad)
dec
and
int
push
popf
sub
ins
add
fcom
add
dec
xlat
retf
das
loop
and
pop
cmp
stos
ror
pop
pop
jge
fwait
mov
inc
in
popf
jae
jmpw
cmps
shl
jb
(bad)
push
test
jg
jno
into
in
fnstcw
cmps
mov
inc
sti
hlt
in
scas
mov
(bad)
(bad)
jmp
call
les
fcomp
enter
sub
rol
(bad)
(bad)
jmp
add
test
and
mov
add
mul
les
repnz
adc
sar
fild
inc
or
clc
and
mov
(bad)
(bad)
(bad)
push
in
push
sar
cmp
xchg
adc
xor
jmp
jmp
pop
hlt
inc
std
jno
stos
jae
mov
mov
adc
xchg
(bad)
(bad)
mov
ret
mov
dec
loop
cld
and
inc
into
jecxz
fcomip
(bad)
call
popa
inc
jmp
psubsb
or
outs
xchg
jne
xor
mov
push
imul
pop
retf
outs
xchg
jecxz
maskmovq
mul
test
call
cld
dec
cld
mov
cli
mov
lods
add
mov
fdivrp
call
adc
jae
mov
adc
ins
push
lock
push
add
xchg
aaa
out
jp
bound
push
jb
mov
test
(bad)
(bad)
call
aaa
in
dec
test
sub
ja
enter
cmp
lahf
pushf
jl
div
sub
xor
pop
jno
push
aam
fadd
and
push
add
sbb
cs
(bad)
(bad)
dec
xor
mov
out
aas
adc
push
pop
rcl
xchg
jae
jmp
push
mov
dec
jecxz
(bad)
(bad)
(bad)
push
in
sbb
enter
push
and
jle
mov
scas
push
gs
(bad)
fdivrp
(bad)
(bad)
push
aaa
cmp
mov
fild
push
mov
dec
addr16
test
mov
mov
and
jns
push
add
xchg
xor
pop
cwde
inc
mov
mov
call
fisttp
cld
xor
pop
sbb
inc
sar
jle
pop
dec
loope
xor
push
cmp
call
cli
retf
push
add
inc
inc
call
add
mov
(bad)
(bad)
(bad)
mov
and
enter
pinsrw
pop
sbb
stc
dec
inc
jecxz
std
(bad)
inc
pop
sbb
pop
mov
xor
addr16
jo
cli
fidiv
sbb
jp
(bad)
(bad)
out
xor
xchg
sti
mov
xor
mov
popf
push
mov
adc
mov
jns
sub
jle
xchg
lds
or
or
sbb
pop
fdivr
aas
sbb
pushf
adc
movs
movs
sub
pop
sti
mov
call
mov
sahf
and
into
mov
mov
mov
bnd
mov
bsf
mov
rol
(bad)
(bad)
jmp
pop
inc
add
lods
leave
fld
movs
sub
out
mov
mov
(bad)
(bad)
jg
mov
xor
cmp
push
mul
rcr
push
ror
adc
call
mov
mov
mov
in
movs
sub
imul
sar
call
add
mov
dec
adc
push
(bad)
loopne
in
pop
je
stc
jae
data16
stos
out
test
sahf
add
ins
sub
std
pop
(bad)
dec
or
jge
cdq
jb
pusha
stos
xchg
aas
scas
into
add
sar
ja
mov
mov
ja
push
sbb
cs
scas
ret
loop
lods
cmp
(bad)
jecxz
(bad)
(bad)
(bad)
call
mov
fnsave
sar
sar
sahf
push
adc
ds
(bad)
(bad)
inc
lea
test
pop
and
jns
sub
out
lods
jge
sub
jl
ins
push
pop
je
test
cmps
std
(bad)
(bad)
push
dec
mov
pop
push
iret
push
and
(bad)
movs
scas
ss
stos
sar
pop
(bad)
inc
(bad)
sub
pop
dec
mov
dec
mov
adc
jae
or
push
adc
(bad)
(bad)
(bad)
(bad)
(bad)
push
push
mov
or
mov
inc
loopne
or
cmp
mov
add
(bad)
(bad)
call
jle
pop
jo
(bad)
call
push
sub
fidiv
jl
jae
jl
xchg
jnp
xor
cmp
fist
arpl
pop
out
add
sahf
sbb
jmp
(bad)
gs
mov
or
jecxz
daa
or
out
cli
push
(bad)
(bad)
push
cmps
sbb
sbb
or
test
cmps
push
jnp
retf
test
test
ret
jmp
cmps
jmp
xchg
jno
sbb
in
cmp
(bad)
out
pop
cmp
mov
push
loop
cmps
data16
in
mov
imul
inc
xchg
test
lods
outs
adc
aad
sar
(bad)
jg
mov
pushw
push
bsr
mov
inc
ret
push
(bad)
(bad)
(bad)
(bad)
inc
dec
or
dec
push
js
and
push
xchg
and
movs
mov
xchg
dec
push
in
mov
inc
(bad)
sbb
(bad)
(bad)
(bad)
call
inc
stos
stos
outs
xchg
rcr
and
stc
stos
cmp
xor
inc
jns
xchg
es
push
adc
mov
aad
in
pop
adc
in
and
in
mov
pop
inc
int
jg
(bad)
jg
js
mov
ret
enter
ds
scas
imul
and
(bad)
movs
push
ja
ret
retf
inc
cmps
cmp
or
sahf
push
clc
in
inc
cs
sar
sbb
dec
and
je
int3
cmp
pop
outs
jb
mov
addr16
mov
pop
pop
xor
loop
jecxz
push
dec
pop
int3
push
popf
cmp
xchg
mov
dec
sbb
(bad)
cli
xchg
repnz
in
jbe
mov
and
push
std
mov
jo
jecxz
mov
push
xchg
mov
(bad)
pop
lock
dec
nop
add
aam
push
sti
repz
(bad)
(bad)
(bad)
mov
repz
jge
dec
xor
test
xchg
fwait
in
add
iret
adc
dec
mov
sub
idiv
popa
movs
in
fiadd
test
xchg
ret
push
je
dec
es
(bad)
call
dec
mov
cmp
in
stos
dec
inc
stos
test
inc
inc
and
test
out
jmp
cdq
mov
xor
(bad)
(bad)
push
stc
fwait
sbb
or
scas
jmp
aas
test
lock
in
sti
into
les
je
ds
jo
(bad)
(bad)
jmp
stc
rcr
fwait
jp
mov
enter
dec
jmp
jle
into
jns
mov
(bad)
(bad)
(bad)
call
popa
mov
popa
mul
out
mov
stos
and
pop
mov
pop
lods
icebp
sub
(bad)
int3
adc
std
sbb
imul
xchg
jmp
or
pop
in
sar
pop
cld
(bad)
sti
push
repz
sub
cmp
repnz
bound
or
(bad)
mov
dec
mov
int3
pop
and
xor
cmp
jnp
loope
dec
(bad)
push
sahf
inc
jmp
in
movs
jp
retf
cwde
inc
ins
je
in
cmc
es
inc
dec
add
(bad)
(bad)
(bad)
add
and
leave
js
cmp
leave
les
fwait
jno
jbe
sar
cmp
dec
or
ins
popa
mov
loopne
(bad)
jnp
adc
inc
shr
mov
mov
pop
cmp
aad
movs
call
sub
inc
pusha
mov
in
bound
rcl
out
outs
mov
shr
bound
ret
adc
sub
lea
pop
int3
ret
jmp
out
je
push
cwde
xchg
call
mov
leave
pushf
shr
inc
or
push
test
loopne
and
test
pop
push
movs
mov
pop
cdq
cmp
repnz
fbld
dec
push
mov
add
mov
or
lock
cmp
fldln2
stos
pushw
inc
xor
lds
das
xor
outs
(bad)
jmp
movs
movs
cmp
mov
sbb
sti
stc
stos
jecxz
stos
mov
aaa
out
cdq
inc
movs
fs
(bad)
(bad)
jmp
jmp
arpl
dec
pop
xor
in
xchg
and
fcomip
adc
mov
(bad)
or
pusha
xchg
mov
fcomip
(bad)
fsubr
jno
lock
mov
or
mov
or
out
pop
aam
or
(bad)
cmp
pop
leave
dec
jl
sub
not
adc
stc
fwait
cli
(bad)
inc
jbe
fst
push
mov
aad
mov
aas
retf
lods
mov
jae
push
cld
jecxz
(bad)
int3
(bad)
(bad)
(bad)
push
and
mov
cs
in
test
sub
mov
in
retf
mov
dec
icebp
sub
hlt
mov
sub
jecxz
je
(bad)
pop
stos
and
dec
data16
(bad)
(bad)
(bad)
inc
sub
jmp
xchg
cmps
mov
faddp
cmp
mov
sub
mov
xlat
(bad)
inc
sub
and
aad
xchg
std
(bad)
(bad)
inc
mov
cmp
scas
push
aam
stc
sbb
adc
or
mov
or
dec
ins
(bad)
(bad)
(bad)
jmp
and
jb
sub
xchg
jbe
inc
fscale
lock
js
std
(bad)
(bad)
jmp
mov
mov
cli
push
fnstcw
adc
sar
inc
pop
shl
shr
mov
ja
mov
loopne
es
sbb
inc
pop
test
sbb
inc
or
mov
or
scas
in
daa
add
push
xchg
or
inc
fsub
lock
(bad)
call
push
mov
add
shl
add
or
pop
add
fwait
jge
pop
out
test
into
cmp
call
(bad)
call
and
pop
push
mov
add
test
in
and
sti
call
cmp
fst
dec
xchg
xchg
(bad)
mov
push
fs
(bad)
mov
push
in
lds
scas
add
bound
sar
mov
and
mov
mov
loope
std
(bad)
(bad)
push
pop
fcom
movs
cmps
cmp
sar
pop
and
(bad)
push
push
and
mov
mov
std
cld
xor
scas
cwde
test
loop
or
std
enter
inc
imul
mul
ja
dec
pusha
xchg
push
icebp
repz
addr16
bound
inc
adc
push
gs
aad
push
(bad)
(bad)
dec
sub
add
aam
jb
xor
xchg
add
dec
nop
sub
ins
sti
loop
shl
(bad)
(bad)
(bad)
jmp
dec
cmp
call
das
fs
xor
bound
outs
mov
loopne
(bad)
(bad)
in
cmp
(bad)
or
out
adc
sub
lahf
add
call
cld
pop
or
scas
jg
inc
cmp
ror
mov
bnd
jge
pop
fimul
(bad)
dec
and
sub
or
cmc
ss
mov
jo
in
(bad)
mov
ror
imul
pop
test
mov
jg
in
out
test
(bad)
(bad)
call
test
push
cmps
shl
nop
ja
cmp
imul
aad
ds
jo
adc
xchg
jo
adc
(bad)
jns
dec
mov
xchg
jp
sub
cdq
jb
cli
movs
(bad)
repnz
(bad)
(bad)
call
lods
sbb
xchg
rcl
mov
mov
sub
pop
xlat
ja
stc
sbb
(bad)
(bad)
(bad)
fiadd
inc
and
cmp
sar
popf
push
push
and
aad
push
or
retf
xor
sbb
(bad)
(bad)
mov
sbb
pop
jle
adc
mov
popa
cwde
push
mov
hlt
(bad)
(bad)
call
jb
cmp
dec
mov
cmc
cs
dec
pop
xlat
movs
imul
fld
(bad)
jmp
and
ss
mov
stos
cli
jg
hlt
adc
sbb
outs
mov
popa
cmp
mov
(bad)
cld
inc
cdq
sbb
or
fsub
push
(bad)
(bad)
call
mov
mov
jmp
push
in
lock
retf
cld
mov
out
jns
adc
(bad)
(bad)
(bad)
jmp
enter
(bad)
sbb
fwait
push
xor
test
ror
repz
out
pop
call
inc
leave
add
(bad)
jmp
cmp
adc
or
sub
or
iret
(bad)
(bad)
dec
mov
or
loop
mov
adc
loope
xchg
sub
(bad)
(bad)
jmp
pop
fcom
mov
push
inc
ja
es
jo
ss
jb
adc
ins
dec
push
call
xor
fild
fwait
outs
data16
retf
cmp
retf
mov
mov
jmp
hlt
shl
jmp
pop
sub
jmp
push
pop
cmp
mov
outs
cli
jmp
sub
push
test
das
xchg
push
xchg
adc
lock
inc
nop
push
sbb
pop
(bad)
(bad)
call
fmul
mov
sbb
cli
add
jae
inc
jge
fdivrp
(bad)
mov
fwait
cdq
(bad)
cmps
iret
imul
jmp
pop
imul
lahf
loop
das
xor
add
int
test
push
stc
cmc
sub
(bad)
(bad)
dec
adc
in
scas
shr
cmp
inc
pop
mov
sbb
jp
xchg
scas
and
adc
enter
adc
aaa
ins
adc
mov
mov
and
shr
imul
shl
(bad)
(bad)
call
lock
push
push
dec
jbe
fs
icebp
mov
fst
fiadd
or
in
ret
inc
(bad)
(bad)
(bad)
(bad)
cmp
cmps
shl
out
jle
push
push
fisubr
rcr
mov
dec
fcomp
(bad)
(bad)
(bad)
call
cmp
loopne
mov
and
scas
gs
cld
jecxz
mov
mov
add
mov
outs
jl
and
add
mov
popf
shl
mov
shl
rcr
(bad)
(bad)
(bad)
inc
scas
adc
icebp
inc
int
mov
data16
bound
add
and
je
shl
inc
add
in
sbb
repz
and
in
scas
cmps
and
mov
dec
or
(bad)
(bad)
(bad)
inc
push
inc
xor
and
push
fst
fild
or
lods
out
sar
(bad)
inc
mov
xor
fsub
test
push
stos
pop
push
mov
mov
in
and
(bad)
call
pop
cmp
stc
mov
jg
(bad)
jp
push
out
push
loopne
(bad)
(bad)
(bad)
jmp
iret
sahf
push
mov
and
xchg
call
popa
dec
add
(bad)
mov
out
mov
lock
jmp
push
and
push
or
sbb
jmp
fdiv
jge
pop
cmp
call
cwde
jge
in
add
inc
mov
js
mov
(bad)
test
loop
mov
mov
cmps
mov
mov
ins
sbb
push
mov
ins
dec
(bad)
call
inc
add
fild
xchg
std
push
adc
mov
fs
(bad)
(bad)
push
dec
ins
xor
(bad)
icebp
(bad)
mov
add
(bad)
mul
push
loop
xchg
xchg
mov
(bad)
push
mov
and
cs
fisttp
jp
iret
xor
inc
in
adc
or
(bad)
(bad)
call
mov
push
dec
in
stc
or
adc
jno
dec
scas
ret
push
sbb
daa
inc
(bad)
or
add
or
stos
pop
mov
mov
jmp
sbb
ret
fnsave
ret
xchg
sub
popf
cmp
test
movs
(bad)
push
push
aad
adc
bound
mov
or
xlat
std
and
(bad)
mul
xor
(bad)
jmp
scas
jnp
lea
scas
mov
loop
add
mov
xor
and
clc
jg
jmp
push
push
sbb
pop
(bad)
jle
xlat
pushf
dec
aam
bound
cmp
inc
inc
cli
in
add
push
pop
add
(bad)
outs
in
jge
(bad)
(bad)
jmp
mov
inc
mov
popa
rcr
dec
out
dec
test
jp
addr16
rcl
(bad)
(bad)
jmp
outs
mov
int
mov
daa
(bad)
push
xchg
sub
mov
(bad)
(bad)
(bad)
(bad)
out
inc
pop
mov
lahf
inc
jb
sbb
mov
cmc
jge
fwait
add
cmc
(bad)
(bad)
jmp
or
shl
mov
cmp
out
adc
lods
repz
(bad)
sbb
(bad)
(bad)
(bad)
jmp
mov
inc
scas
inc
pusha
xor
and
push
jmp
lock
lea
mov
(bad)
inc
stos
sub
dec
add
call
sbb
icebp
sbb
out
jl
jbe
(bad)
jg
jmp
popa
sub
jo
cmp
and
xor
xor
test
adc
inc
fcomip
clc
scas
lahf
mov
pop
jmp
xchg
push
shr
hlt
cld
or
xor
jbe
aas
(bad)
jmp
mov
call
jmp
jg
cmps
mov
xchg
xchg
add
into
mov
fmul
shr
(bad)
(bad)
(bad)
push
mov
pop
pop
xchg
push
iret
dec
jnp
pop
jp
lock
pop
add
cmp
and
sbb
into
xchg
lahf
ja
adc
inc
push
mov
(bad)
out
inc
enter
mov
jl
cmp
(bad)
(bad)
(bad)
dec
stc
cmp
ret
sbb
cld
loope
xchg
or
cmp
xchg
shr
std
xor
nop
rcl
push
test
(bad)
jp
inc
push
aaa
test
outs
inc
pop
(bad)
neg
callw
enter
mov
jnp
jnp
fimul
xor
fs
pop
jnp
sbb
(bad)
(bad)
call
inc
imul
pop
xor
fwait
xor
mov
mov
(bad)
(bad)
(bad)
push
pop
(bad)
sbb
shl
add
stos
daa
jl
test
sub
jnp
pushf
(bad)
(bad)
(bad)
(bad)
fld
jl
call
(bad)
or
test
popa
or
push
cmp
mov
in
(bad)
jmp
sub
test
dec
xor
jmp
sub
push
jns
and
(bad)
(bad)
(bad)
call
out
push
outs
dec
mov
or
xor
xchg
stos
out
pop
ror
adc
repnz
repnz
(bad)
mov
into
pop
pop
lods
inc
xor
jmp
and
out
push
mov
popf
test
(bad)
dec
in
mov
rcr
popa
dec
mov
adc
sbb
mov
xchg
mov
(bad)
jmp
inc
aaa
(bad)
gs
test
jbe
cmp
xlat
jne
in
retf
mov
(bad)
push
pop
jl
fidivr
test
fisubr
call
cmp
outs
(bad)
out
daa
or
(bad)
(bad)
(bad)
leave
loop
adc
xor
push
or
outs
pop
pop
dec
jp
mov
(bad)
mov
pop
lods
jmp
test
mov
mov
xor
mov
cmp
(bad)
(bad)
mov
inc
shr
cld
fist
dec
mov
call
nop
push
repz
(bad)
(bad)
jmp
pop
sbb
jne
pop
dec
cmp
dec
fwait
(bad)
fbstp
and
fwait
adc
jge
add
ds
(bad)
(bad)
(bad)
push
adc
rcl
push
or
and
nop
jmp
sar
mov
jmp
sar
fldenv
popf
inc
jnp
std
cmp
pop
aam
ins
push
mov
neg
cld
ins
mov
add
ds
cli
lds
push
cld
bswap
mov
dec
mov
(bad)
lock
sar
retf
scas
rcr
push
out
push
cmps
(bad)
(bad)
(bad)
jmp
add
fnstenv
lds
mov
(bad)
dec
dec
shl
mov
test
into
test
(bad)
(bad)
(bad)
jmp
cmp
adc
push
xor
nop
pushf
ja
jae
enter
mov
fs
mov
inc
cld
jg
dec
xchg
cmp
push
jmp
cmc
mov
mov
sub
int
rol
push
mov
mov
add
lds
fcmove
inc
(bad)
(bad)
(bad)
jmp
imul
mov
leave
pop
inc
ja
retf
and
ins
loope
in
shl
jg
fs
ja
imul
not
pop
out
(bad)
mov
aas
out
mov
mov
stos
jecxz
(bad)
pop
adc
cdq
movs
add
mov
sti
mov
imul
push
push
pop
stos
fisubr
(bad)
(bad)
cmp
add
push
dec
sbb
pop
inc
(bad)
(bad)
(bad)
(bad)
mov
mov
loope
pop
ud2
adc
cli
std
int
mov
fstp
adc
inc
cmp
lahf
inc
out
(bad)
(bad)
(bad)
call
inc
dec
cmp
jmp
mov
sti
iret
xchg
add
add
jp
inc
xchg
cmps
mov
retf
aas
(bad)
jg
hlt
inc
mov
(bad)
jno
test
sbb
jmp
jmp
(bad)
jmp
cmps
push
xor
xlat
pop
mov
jno
mov
cmp
call
mov
or
cdq
fstp
inc
adc
repnz
and
call
das
cli
(bad)
(bad)
(bad)
cmp
xchg
adc
pop
out
cmpps
cld
cmp
sbb
mov
pop
icebp
fcomip
mov
pop
outs
xor
in
pusha
(bad)
(bad)
(bad)
out
pusha
mov
ret
xchg
mov
ja
outs
mov
jecxz
inc
lods
xchg
in
call
popa
cli
test
mov
adc
mov
(bad)
(bad)
call
(bad)
push
iret
popa
mul
sub
pop
aam
cmp
inc
push
mov
cli
(bad)
(bad)
push
icebp
sbb
cmps
aam
dec
(bad)
xlat
test
dec
or
adc
out
jp
pop
stos
fsub
sbb
push
(bad)
js
xor
pop
pop
cmp
xor
cmc
stos
mov
mov
jmp
and
(bad)
loop
cmp
sbb
cwde
mov
xor
(bad)
(bad)
(bad)
jg
adc
fstp
repnz
pop
adc
jno
andnps
xor
test
pop
aam
mov
mov
neg
std
ins
jno
leave
rcl
ret
movs
mov
jo
push
pop
xchg
in
dec
or
mov
(bad)
fcomip
pop
fidivr
and
jbe
mov
mov
mov
cmps
adc
mov
(bad)
dec
sbb
idiv
add
cmp
mov
mov
(bad)
(bad)
jmp
or
imul
jnp
add
sub
int
pop
dec
mov
mov
call
call
in
xchg
aaa
or
mov
sub
pop
adc
retf
not
imul
mov
(bad)
lock
bound
(bad)
(bad)
(bad)
jmp
push
cmps
shr
push
xchg
mov
(bad)
mov
out
aaa
jo
(bad)
(bad)
(bad)
dec
jne
inc
retf
cmp
adc
and
stos
pop
cwde
xor
push
inc
les
mov
(bad)
cli
cmps
mov
test
sbb
test
push
sub
(bad)
out
test
jns
add
sub
or
(bad)
(bad)
(bad)
dec
int
ss
or
stc
ins
add
loope
out
pop
das
cmp
ret
push
mov
mov
test
mov
sbb
cs
(bad)
mov
jne
inc
cmps
retf
pop
(bad)
rep
es
mov
adc
sti
push
popf
xor
cmp
scas
outs
mov
push
retf
ficomp
push
inc
into
and
jbe
std
mov
or
pusha
loopne
aas
cld
add
inc
push
hlt
pop
xchg
jo
xchg
lock
push
call
fs
(bad)
call
push
lods
dec
iret
xor
cmp
cmp
mov
adc
pop
cmp
or
adc
jmp
ror
ficom
jmp
pusha
ja
rol
retf
iret
push
add
popa
(bad)
(bad)
mov
je
or
adc
in
sar
fcomp
sbb
shr
push
call
jae
cmps
mov
sub
sbb
mov
mov
fbstp
popf
ret
pop
fcom
data16
push
pop
add
push
popf
cwde
push
stos
repz
dec
fstp
call
repz
inc
je
(bad)
cmc
and
sbb
xor
mov
test
or
(bad)
(bad)
fild
and
add
push
or
mov
stos
(bad)
jmp
not
inc
push
fdiv
mov
jbe
inc
cmc
push
lods
scas
xchg
and
mov
(bad)
(bad)
(bad)
jmp
scas
adc
movs
enter
das
rcl
call
aam
(bad)
int
jne
(bad)
(bad)
dec
aaa
dec
xchg
sub
push
ins
xchg
mov
mov
aas
push
mov
jnp
and
and
cld
std
(bad)
(bad)
(bad)
call
pop
push
xor
in
lea
push
lahf
xor
xor
mov
dec
xor
jo
push
push
cli
(bad)
jg
inc
or
xchg
movs
mov
xchg
sub
xor
mov
xchg
(bad)
fbstp
stos
jge
add
sub
inc
or
jmp
jl
(bad)
(bad)
(bad)
push
sahf
cmp
push
mov
sub
pop
and
mov
push
lds
jo
or
cli
dec
sbb
enter
out
adc
xor
in
es
shl
loope
in
pusha
or
hlt
repz
into
lods
push
fs
leave
xor
mov
(bad)
fcomip
push
push
adc
je
jecxz
xchg
lahf
(bad)
scas
data16
jmp
ja
(bad)
test
jmp
clc
sahf
mov
scas
and
cwde
push
adc
jle
neg
(bad)
xor
xchg
sahf
sub
(bad)
(bad)
inc
sahf
cmps
jnp
call
mov
xchg
aas
jl
dec
icebp
rcr
hlt
(bad)
int
les
(bad)
mov
push
stc
aam
jb
sbb
adc
inc
jp
mov
add
sub
scas
cmps
pop
mov
enter
inc
fisubr
dec
xchg
rol
(bad)
(bad)
(bad)
inc
jmp
jnp
sbb
push
aaa
pop
cdq
cdq
jmp
xor
jp
test
pop
pop
loope
(bad)
(bad)
(bad)
jp
fs
inc
std
fdivr
aaa
ins
in
sub
mov
ja
movaps
cmps
neg
(bad)
(bad)
dec
shl
mov
push
and
mov
add
mov
test
iret
push
jecxz
stos
cmc
rcl
sbb
fild
outs
sbb
adc
pop
std
push
sahf
lods
loopne
call
mov
cmp
pop
retf
mov
dec
adc
outs
(bad)
xor
loopne
mov
(bad)
lods
cld
inc
dec
and
cmp
pop
push
push
pop
fild
inc
enter
mov
sub
pop
sub
(bad)
(bad)
(bad)
(bad)
(bad)
stc
leave
dec
mov
jmp
(bad)
fs
in
xor
sbb
sub
adc
sbb
call
pop
and
dec
mov
test
out
pop
pop
(bad)
xchg
(bad)
(bad)
(bad)
cmp
movs
push
cmp
sub
mov
and
jb
pop
sub
or
(bad)
(bad)
(bad)
push
loope
in
xchg
ds
fwait
scas
pop
adc
das
fisttp
call
ret
jbe
cmp
(bad)
jg
push
xchg
pop
jl
scas
pusha
test
movs
xor
xor
push
jo
dec
xchg
jg
popf
mov
bound
(bad)
(bad)
fild
call
push
adc
idiv
shr
popa
das
adc
pop
icebp
(bad)
(bad)
sti
pushf
out
in
sub
retf
and
push
or
cmp
or
test
mov
cwde
iret
lahf
movs
pop
and
or
push
sbb
mov
call
mov
jne
xchg
and
add
sub
dec
outs
mov
ins
(bad)
(bad)
(bad)
dec
mov
les
cmp
cmp
mov
inc
lods
mov
mov
leave
pop
int
push
and
clc
(bad)
mov
mov
sub
out
jae
sbb
test
in
out
jmp
mov
ja
mov
daa
bound
(bad)
push
loope
ret
pop
mov
gs
adc
mov
stos
not
mov
stos
(bad)
(bad)
(bad)
jmp
rol
push
in
cmp
out
loop
in
mov
jo
push
stos
add
retf
popa
stc
jge
(bad)
(bad)
call
rcl
shr
clc
xchg
inc
into
test
lods
push
inc
imul
ds
and
push
dec
aas
ins
or
jecxz
pop
mov
test
les
mov
lods
jg
adc
(bad)
mov
(bad)
jg
mov
push
imul
adc
push
push
mov
jp
add
arpl
(bad)
dec
cmp
dec
rcl
enter
xchg
pop
jo
jl
or
out
sar
(bad)
dec
jmp
call
xchg
push
gs
(bad)
mov
push
lahf
mov
cmps
cmp
retf
ja
inc
add
ret
ret
pop
push
pop
lock
and
inc
jp
ret
xchg
sbb
(bad)
(bad)
dec
aas
cdq
or
ffreep
cld
and
adc
xchg
fisub
add
jmp
mov
mov
jae
adc
(bad)
(bad)
(bad)
mov
pusha
cmps
inc
mov
push
cmps
mov
mov
add
xchg
dec
jns
sbb
stos
(bad)
(bad)
jmp
push
sub
jae
cwde
aam
pop
xchg
in
jno
pop
mov
aaa
xchg
sbb
(bad)
(bad)
(bad)
push
dec
xchg
(bad)
repnz
mov
stos
icebp
imul
mov
xchg
sub
nop
enter
(bad)
dec
jne
jmp
lock
fnstenvw
in
push
mov
mov
(bad)
fild
sbb
add
movs
fadd
sbb
call
js
jmp
imul
jle
jecxz
aaa
sbb
adc
inc
arpl
jno
cmp
jmp
mov
pop
leave
xlat
lahf
push
repnz
(bad)
(bad)
mov
in
dec
rol
in
aaa
dec
ret
or
jne
retf
ss
leave
fsub
(bad)
push
xchg
(bad)
jp
retf
out
js
push
mov
test
(bad)
(bad)
jmp
jne
sbb
mov
out
test
jae
sbb
push
lea
rcl
xor
push
(bad)
jmp
jecxz
(bad)
pop
sbb
dec
test
mov
and
aam
bound
(bad)
(bad)
inc
ins
sub
mov
add
jne
(bad)
(bad)
fild
pushf
or
pop
icebp
loopne
adc
push
gs
loopne
(bad)
(bad)
dec
mov
dec
cdq
mov
adc
in
cld
movq
push
movs
and
(bad)
(bad)
call
fbld
cmp
xchg
push
pop
push
push
ss
pop
adc
xor
adc
ret
test
test
mov
pop
not
dec
or
cmps
mov
add
in
xor
popf
mov
ss
(bad)
fcomip
ror
das
enter
mov
pop
lea
jns
fistp
jle
mov
(bad)
push
push
(bad)
push
fs
cmps
cmc
lods
mov
add
cmp
in
add
imul
outs
out
xchg
std
cmp
push
cmp
call
push
jl
fcomip
pop
cdq
lock
ins
sbb
sbb
out
dec
(bad)
(bad)
jmp
pop
sar
adc
hlt
add
xor
pop
je
mov
(bad)
fild
sbb
ret
and
sar
adc
out
mov
inc
jle
sar
push
xchg
inc
popf
call
sahf
dec
lea
shl
sub
or
popa
fmul
retf
jnp
movs
cmp
dec
xchg
xchg
push
iret
mov
adc
mov
pushf
lock
push
test
lods
(bad)
(bad)
(bad)
jg
xor
je
inc
and
cmp
fcomp
mov
lds
dec
push
ret
pop
(bad)
dec
mov
mov
xchg
cmps
adc
fcom
in
(bad)
imul
cmp
mov
xchg
imul
dec
jecxz
mov
pop
(bad)
(bad)
(bad)
jmp
push
aam
or
lods
add
dec
enter
js
dec
loop
scas
xchg
lods
push
mov
bound
inc
inc
cs
xor
xchg
cli
cmps
gs
rcl
mov
mov
mov
xchg
push
jmp
iret
xchg
xchg
and
dec
dec
mov
(bad)
jg
in
imul
mov
cwde
push
retf
jle
ins
dec
(bad)
(bad)
(bad)
call
nop
xor
add
rcr
ins
jl
push
js
dec
ds
pushf
ds
(bad)
(bad)
cmp
out
push
mov
cmp
pop
mov
in
jno
dec
cmp
dec
test
pop
pusha
sbb
rcr
sub
pop
fs
(bad)
(bad)
(bad)
call
sbb
fld
arpl
loopne
ins
addr16
xor
(bad)
dec
pop
sub
mov
ret
(bad)
(bad)
jmp
jp
jmp
jae
xchg
mov
(bad)
and
in
pop
pop
cwde
call
jg
pop
repz
or
mov
push
sub
xor
and
add
call
inc
js
(bad)
cmp
in
inc
jae
arpl
jmp
(bad)
dec
fdivr
sbb
enter
dec
cmp
or
cmp
sub
add
(bad)
(bad)
inc
rol
loop
pop
hlt
xor
sbb
mov
and
fcomi
cmp
(bad)
(bad)
jmp
xor
fisubr
cmp
dec
push
or
cmp
rol
call
(bad)
(bad)
(bad)
call
sub
jno
adc
das
jecxz
mov
pop
out
adc
xlat
jmp
inc
into
cmp
(bad)
xchg
lock
add
test
mov
cmp
or
ss
cwde
push
inc
cmc
adc
outs
jmp
stc
(bad)
cmps
adc
push
daa
mov
(bad)
(bad)
(bad)
(bad)
jl
mov
fdivr
cmp
pop
cmp
mov
pop
dec
mov
sahf
(bad)
(bad)
(bad)
(bad)
jle
cmp
pop
sti
xchg
xchg
push
pushf
inc
push
or
es
mov
ja
and
(bad)
(bad)
(bad)
call
xlat
cmp
stos
jl
inc
call
mov
mov
mov
pop
(bad)
outs
cli
(bad)
cmp
mov
ins
cdq
fsub
xor
jmp
pop
mov
xor
sub
push
jecxz
popf
mov
bnd
push
xor
popa
test
add
test
xor
call
add
scas
(bad)
mov
xor
mov
push
push
fisttp
fisub
(bad)
(bad)
(bad)
call
jecxz
outs
xchg
mov
jb
mov
icebp
sbb
pushf
stos
jecxz
mov
neg
pop
push
daa
movs
(bad)
(bad)
(bad)
dec
mov
add
jns
pusha
push
xchg
scas
std
push
pop
imul
dec
ror
hlt
or
cmp
call
xor
mov
xlat
(bad)
add
add
add
inc
push
mov
mov
jmp
retf
cmps
inc
adc
mov
das
cli
add
lea
in
sar
ins
scas
lock
iret
outs
jmp
(bad)
(bad)
inc
in
stos
jmp
mov
outs
out
mov
mov
sti
std
loopne
adc
in
pop
(bad)
(bad)
(bad)
inc
dec
imul
mov
or
xlat
xor
xchg
jmp
or
std
ds
(bad)
(bad)
(bad)
call
sahf
clc
adc
sub
jnp
dec
or
retf
ss
test
popa
lock
(bad)
(bad)
push
loope
pop
repnz
mov
ret
jl
arpl
or
cs
sbb
add
(bad)
(bad)
jmp
adc
add
xchg
sbb
cmp
pop
pop
out
ds
ss
sub
cld
jmp
es
cmp
cmp
jl
dec
jmp
(bad)
(bad)
(bad)
in
xor
scas
xchg
xor
mov
and
cmp
jg
sbb
imul
(bad)
(bad)
(bad)
push
ret
not
sbb
mov
data16
lods
pop
sub
outs
retf
in
ret
daa
fnstsw
cmc
fld
cmp
arpl
clc
mov
pop
ret
loopne
dec
or
(bad)
(bad)
call
cmp
or
aam
add
call
fcomi
inc
pop
mov
(bad)
(bad)
jmp
jae
dec
in
call
ds
sbb
popa
add
pop
push
movs
iret
sub
dec
mov
mov
xor
add
push
mov
and
inc
jo
daa
jmp
lock
xchg
xor
and
xor
aad
inc
sbb
xchg
and
dec
jb
mov
(bad)
(bad)
(bad)
push
repnz
jl
push
in
sbb
xchg
xor
xchg
fs
xchg
sub
mov
jb
mov
xchg
sbb
jl
rol
ins
or
adc
mov
sbb
cld
(bad)
(bad)
(bad)
push
xchg
lds
ret
xchg
fistp
aaa
dec
js
xor
add
jae
into
push
outs
sub
(bad)
(bad)
(bad)
call
cmp
jns
dec
push
sub
or
jbe
push
ins
mov
aad
iret
add
(bad)
push
es
pop
cmp
lea
and
aam
mov
push
(bad)
(bad)
(bad)
jmp
push
cmp
push
dec
mov
test
fcomp
push
mov
add
push
pop
or
popf
push
mov
add
xor
push
push
imul
(bad)
(bad)
(bad)
(bad)
out
out
into
inc
pop
rcl
movs
imul
test
into
cmps
hlt
jl
pop
sub
adc
jo
(bad)
(bad)
call
test
jnp
test
and
aad
mov
sub
loopne
add
pop
icebp
mov
(bad)
(bad)
call
cs
sbb
adc
sbb
push
repnz
push
mov
cmps
jae
fsub
pop
cld
(bad)
(bad)
push
std
xor
sbb
stos
cmc
aad
jmp
jnp
imul
in
rcl
fwait
inc
inc
xor
(bad)
sub
add
mov
outs
adc
and
cld
(bad)
(bad)
jmp
cmp
xor
or
adc
stos
cmps
and
push
push
std
lds
pop
fisubr
xor
lea
push
adc
pop
(bad)
(bad)
(bad)
jmp
(bad)
sbb
test
int3
add
adc
sti
repz
ret
test
enter
div
outs
jne
lock
(bad)
push
int
and
xlat
jae
cwde
push
xchg
mov
mov
les
jmp
add
addr16
imul
arpl
(bad)
(bad)
(bad)
push
cmp
xor
and
nop
sti
out
aam
push
mov
gs
adc
sub
add
fcomip
call
and
sbb
ja
je
sub
shl
jecxz
(bad)
jmp
scas
(bad)
pop
xchg
(bad)
pushf
fcomp
and
jo
repnz
(bad)
(bad)
(bad)
dec
mov
push
or
cmc
imul
popf
movs
mov
and
(bad)
ffreep
repnz
sbb
add
mov
addr16
push
int
jmp
movs
call
inc
push
sbb
mov
repz
(bad)
lock
(bad)
(bad)
push
cdq
cdq
sti
inc
sbb
xchg
pop
gs
not
mov
xchg
repz
clc
test
pop
or
or
pop
inc
sub
lock
push
jg
(bad)
mov
retf
mov
mov
mov
or
cli
test
in
sub
mov
or
js
(bad)
(bad)
push
imul
push
fcmove
push
cmp
fistp
and
cmps
dec
xchg
jecxz
push
daa
jmp
xor
inc
sbb
(bad)
call
js
xlat
lods
xchg
and
sub
neg
xor
xor
cmps
inc
mov
(bad)
(bad)
jmp
scas
inc
gs
nop
addr16
inc
cmp
ror
shl
xor
cmovb
(bad)
outs
dec
xchg
retf
cmp
aam
mov
mov
call
call
fistp
fimul
hlt
mov
sub
jecxz
xchg
add
pop
fwait
inc
in
add
pop
push
dec
add
(bad)
(bad)
call
fdiv
mov
mov
mov
pop
iret
aas
leave
je
mov
rcr
inc
clc
inc
ja
scas
stos
sahf
test
repz
ins
sub
sbb
and
shl
popf
jp
enter
in
mov
(bad)
fbld
int
add
dec
push
or
clc
cmp
cld
fsub
inc
fist
inc
jb
push
jne
jbe
mov
(bad)
or
(bad)
(bad)
call
jmp
jle
sbb
or
mov
xor
lahf
mov
sbb
fmul
push
lock
lea
or
(bad)
cmp
imul
xchg
pushf
mov
ffree
imul
imul
sub
neg
add
dec
data16
(bad)
(bad)
(bad)
(bad)
out
addr16
ja
pop
and
jp
jno
mov
jne
dec
inc
call
(bad)
push
xchg
std
and
in
cmps
push
lahf
cmp
mov
dec
bswap
push
push
push
out
xchg
(bad)
call
sub
inc
or
xchg
push
push
xor
lahf
inc
ins
loop
fisubr
and
ins
leave
neg
iret
pop
mov
ja
inc
push
add
push
int
sar
(bad)
(bad)
jmp
pop
push
adc
not
cli
cmps
movs
mov
xlat
mov
xchg
(bad)
stos
add
aam
jmp
inc
(bad)
mov
loopne
ja
inc
out
stc
or
push
(bad)
(bad)
(bad)
dec
xchg
lea
popf
dec
push
pop
arpl
push
hlt
and
ss
sub
dec
mov
jmp
std
or
mov
aaa
(bad)
call
ss
(bad)
call
sahf
test
test
in
ins
test
or
pop
int
mov
das
xchg
or
cmps
adc
int
inc
adc
or
(bad)
(bad)
les
mov
(bad)
(bad)
jmp
adc
out
mov
xlat
pop
mov
daa
dec
inc
adc
test
jg
or
call
cmp
data16
(bad)
(bad)
(bad)
mov
cmc
sbb
aam
mov
dec
sbb
(bad)
cli
test
loope
(bad)
dec
sar
pop
std
mov
(bad)
leave
mov
leave
mov
outs
mov
(bad)
(bad)
mov
and
out
cmp
fnstcw
and
popa
mov
or
push
mov
or
(bad)
mov
cs
and
int
or
mov
pop
retf
inc
add
or
test
cmp
inc
mul
loopne
xor
repz
jg
xchg
stc
iret
fcmovnbe
jg
pop
ins
into
push
scas
call
fbstp
cmp
loope
(bad)
(bad)
inc
and
shr
pop
push
push
jle
mov
ins
adc
cli
adc
xlat
push
pusha
call
pop
call
std
call
scas
xor
push
add
pop
mov
dec
sbb
and
dec
add
stos
xor
call
or
stos
mov
pop
ret
outs
bound
popa
or
stc
(bad)
jg
pop
inc
enter
(bad)
cli
ret
mov
mov
mov
retf
push
ret
cmp
into
fidiv
jmp
fidiv
std
(bad)
mov
jmp
mov
out
mov
addr16
jmp
mov
dec
loopne
aam
nop
(bad)
mov
mov
ss
jbe
cmp
mov
mov
pop
fmul
pop
outs
mov
je
outs
arpl
pop
es
ins
mov
loopne
sbb
aas
jne
cmp
ss
xor
push
imul
imul
outs
cmp
stos
retf
std
or
loope
test
sbb
or
jno
sub
cs
jle
rcl
push
inc
push
dec
das
push
push
jp
popa
or
pop
popa
jne
dec
jo
not
aaa
mov
lds
xor
inc
pusha
je
outs
mov
div
ins
and
js
pop
dec
outs
xor
popa
je
sub
imul
jne
jns
xlat
mov
mov
xlat
mov
loope
popa
in
cmp
outs
movs
mov
fisubr
jno
cmc
cmp
ins
test
dec
or
aas
das
jb
jb
xor
mov
xor
aaa
arpl
cmp
xor
bound
std
push
xor
arpl
xor
xor
adc
inc
gs
aaa
or
mov
push
xor
aaa
bound
xor
pop
xor
in
(bad)
push
aaa
push
xor
jb
cmp
int
pusha
xor
call
popa
test
fwait
ret
xor
xor
xor
in
mov
add
fs
arpl
fs
cli
or
mov
lods
xor
ss
out
xor
not
or
cmp
pop
mov
inc
add
int
and
sub
add
cmp
adc
sub
sbb
fs
add
xchg
in
lahf
outs
dec
add
add
shr
add
or
add
sbb
mov
sbb
iret
repz
sub
call
jns
push
inc
inc
ds
inc
jns
out
inc
inc
inc
inc
cmp
jns
out
cmp
cmp
add
repz
mov
mov
aaa
cs
(bad)
daa
xor
int
lds
cs
ds
pop
push
adc
jmp
mov
outs
xor
das
dec
movs
dec
mov
ins
ss
dec
ror
pop
push
shr
out
push
sbb
sbb
lds
popa
jmp
in
out
(bad)
add
push
sbb
pop
sub
jns
in
ror
or
push
rol
add
(bad)
call
add
pop
add
adc
sub
dec
mov
pop
adc
das
inc
push
mov
retf
aaa
xchg
pop
rol
int3
cmp
add
mov
aas
(bad)
lds
ret
retf
clc
adc
mov
inc
and
sbb
cld
fdiv
ins
push
and
push
push
push
xor
pop
add
js
pop
ficom
add
or
xor
sahf
out
adc
push
mov
bound
jae
ins
or
jbe
push
jbe
add
aaa
inc
push
pop
adc
ds
cmp
mov
xlat
test
hlt
mov
mov
mov
push
gs
jg
test
cli
and
mov
mov
sub
cmp
pop
mov
mov
dec
or
movs
push
out
data16
xor
dec
dec
js
add
xchg
or
push
or
pop
scas
pop
(bad)
cmp
(bad)
(bad)
push
push
jg
mov
fucomi
hlt
clc
nop
movs
mov
out
cmc
(bad)
rcr
call
and
mov
fild
clc
(bad)
jnp
jno
dec
xor
mov
loop
ret
nop
sub
mov
jmp
sub
xor
jbe
enter
jecxz
push
daa
arpl
inc
inc
push
xchg
cmp
fstp
xchg
test
cmps
leave
jns
nop
fdivr
push
xchg
fisubr
cmps
push
pmaxub
into
sub
imul
xchg
cdq
mov
add
xchg
xor
adc
int
imul
xchg
ret
fucompp
sahf
mov
(bad)
(bad)
(bad)
jg
aad
loop
shl
mov
mov
stc
div
not
cmps
mov
mov
(bad)
mov
jns
mov
loop
jmp
out
shl
lock
lock
(bad)
dec
loope
retf
cmp
push
fwait
aam
xchg
retf
sub
inc
mov
xor
push
mov
pop
stos
in
mov
pop
cmp
mov
add
xchg
(bad)
(bad)
(bad)
call
dec
mov
out
std
in
cld
xchg
leave
pop
mov
in
mov
lea
(bad)
(bad)
(bad)
jmp
ja
mov
push
xchg
dec
ret
inc
pop
and
frstpm(287
jmp
in
jb
pusha
ret
(bad)
(bad)
cmp
push
pop
ja
pop
idiv
sti
stc
out
(bad)
fcom
in
cwde
fucomp
inc
ret
(bad)
fsubr
and
inc
clc
call
stc
pop
call
mov
std
in
hlt
adc
stc
add
(bad)
(bad)
ffreep
cmp
add
inc
test
mov
(bad)
(bad)
(bad)
(bad)
jg
cmp
cwde
cdq
call
xchg
pop
cmp
cmps
test
stos
stos
lods
lods
scas
scas
mov
(bad)
(bad)
(bad)
push
pop
add
mov
data16
and
and
mov
ret
(bad)
mov
pop
pop
jp
into
arpl
adc
(bad)
(bad)
(bad)
mov
into
fcomp
fcmovu
(bad)
fmulp
pop
adc
jecxz
and
push
xorps
push
mov
(bad)
(bad)
(bad)
push
repz
cmc
div
clc
jecxz
adc
std
adc
test
mov
push
and
adc
pop
enter
sub
(bad)
(bad)
dec
jo
inc
or
push
cmp
and
data16
ficom
(bad)
(bad)
(bad)
call
cwde
push
and
into
jno
ror
jo
leave
mov
or
cmp
adc
(bad)
dec
add
inc
adc
cdq
cmp
stos
dec
scas
or
(bad)
inc
pusha
pop
test
xchg
pop
xor
mov
push
add
or
test
xchg
cmp
repz
mov
(bad)
push
(bad)
clc
scas
ffree
jge
xchg
pop
mov
test
adc
mov
add
cmp
shl
jecxz
dec
push
cmp
cmp
movs
stos
pushf
inc
std
sbb
push
inc
(bad)
data16
add
inc
(bad)
mov
inc
dec
sbb
mov
mov
inc
jo
jns
mov
(bad)
(bad)
dec
fwait
pop
jns
mov
mov
(bad)
dec
cmp
push
inc
ret
popa
inc
mov
or
push
shr
loop
pop
test
inc
test
cmc
ret
out
dec
fistp
cli
(bad)
(bad)
(bad)
mov
js
push
mov
adc
sbb
in
xchg
push
pusha
add
inc
add
mov
adc
clc
and
mov
dec
std
nop
clc
sub
adc
and
sbb
outs
js
movs
loopne
or
enter
add
arpl
adc
pusha
and
xchg
push
dec
sbb
xchg
add
test
sub
test
dec
test
rol
aam
inc
pop
lfs
mov
(bad)
(bad)
(bad)
call
adc
inc
cwde
jb
imul
cmps
lahf
jl
test
imul
or
add
jo
pusha
bound
add
add
dec
(bad)
out
clc
(bad)
in
in
adc
retf
mov
cmps
jmp
test
pop
inc
inc
mov
adc
and
lds
ins
loopne
sti
(bad)
call
inc
and
lods
mov
inc
lds
mov
push
dec
ret
inc
dec
lods
mov
fild
loopne
in
add
sbb
xchg
xor
or
call
jo
mov
retf
outs
mov
mov
or
fidivr
shl
cmp
or
ret
(bad)
(bad)
inc
add
push
add
stos
out
ret
in
lock
adc
xor
add
add
add
mov
add
or
in
jno
xor
(bad)
jmp
sub
stos
or
pop
add
rol
add
int
out
repz
cmp
in
jae
xchg
dec
pop
or
inc
and
cmp
xchg
enter
jmp
lahf
fxch
push
cld
or
gs
ret
fisub
adc
push
sub
pop
pop
and
adc
cmps
cdq
or
or
inc
mov
inc
call
sbb
fld
cmp
ret
nop
cmp
add
add
retf
into
int3
in
lahf
push
add
adc
mov
ja
loopne
jecxz
jnp
jg
pop
and
mov
push
shr
xor
push
push
push
adc
fcom
nop
dec
jb
xor
or
scas
or
out
rcl
lea
add
fs
and
adc
jno
push
into
arpl
or
add
and
or
test
rol
leave
push
push
or
xor
pop
inc
retf
mov
shl
jae
inc
xor
dec
pop
and
sti
sbb
leave
push
adc
adc
xchg
(bad)
std
add
mov
cli
cld
std
(bad)
mov
in
mov
in
add
stc
sbb
clc
jmp
(bad)
shr
inc
cmp
mov
repnz
lock
loop
idiv
(bad)
(bad)
fcmovne
repz
push
in
je
in
dec
(bad)
ffreep
scas
out
(bad)
ftst
jmp
xchg
call
jmp
fisub
(bad)
icebp
inc
xchg
jle
rcl
(bad)
(bad)
(bad)
dec
out
int
outs
sar
fwait
ret
rcr
in
lahf
dec
pop
mov
sub
call
push
lods
call
mov
pop
xchg
fldenv
mov
inc
xchg
pop
sar
(bad)
fist
aad
xchg
xor
xlat
ss
shr
or
sub
xor
dec
inc
push
push
inc
inc
push
inc
xor
xor
std
cmp
ret
bound
add
cmp
or
add
xchg
and
das
cs
mov
(bad)
jmp
cmps
cmps
and
and
and
mov
mov
mov
mov
inc
sub
mov
lods
and
cli
das
xor
mov
retf
into
leave
retf
(bad)
(bad)
(bad)
dec
aad
retf
int3
int
xor
sub
sub
and
(bad)
add
add
aas
out
add
(bad)
fbstp
jecxz
repnz
loop
repz
out
rol
(bad)
(bad)
dec
je
push
cmp
or
inc
xor
adc
push
push
mov
add
jecxz
inc
add
or
dec
lahf
mov
xchg
mov
inc
not
or
cmp
lods
je
and
push
and
lods
or
jno
push
xchg
push
pop
mov
(bad)
(bad)
jg
push
jmp
mov
mov
jo
lock
and
add
pop
rcr
and
(bad)
(bad)
push
fidivr
add
fiadd
mov
js
push
sub
jnp
fdivp
inc
in
ret
xor
(bad)
data16
sbb
lock
test
cmp
sbb
jecxz
fsub
sbb
test
cmp
xchg
sbb
(bad)
mov
call
bound
test
scas
gs
cmp
(bad)
(bad)
mov
xchg
xchg
jnp
out
(bad)
mov
sbb
xor
pop
sar
jl
sbb
cmp
cwde
mov
xlat
ja
mov
mov
jmp
clc
push
test
pop
int3
jne
or
test
or
mov
fsub
or
push
fcomp
(bad)
mov
cmp
bound
mov
push
pop
mov
or
loopne
inc
cmp
mov
inc
sub
or
add
(bad)
(bad)
call
call
cld
js
nop
cmp
enter
retf
jb
sbb
mov
movs
push
xor
fst
xchg
pop
or
fs
xchg
int3
je
gs
jg
das
clc
arpl
and
push
pop
mov
or
gs
inc
push
xor
add
or
les
in
add
call
inc
adc
test
sar
(bad)
jmp
mov
movs
xchg
ds
ret
and
fs
jmp
jmp
stos
cmps
add
in
add
or
or
mov
sub
and
mov
fdiv
movs
movs
cmps
cmps
test
lods
enter
les
(bad)
dec
mov
rol
ds
and
das
mov
sub
pop
(bad)
aam
(bad)
jg
mov
fild
fucom
(bad)
xlat
fsub
aam
xor
pop
sbb
xchg
push
clc
(bad)
out
ss
int3
xor
add
inc
(bad)
(bad)
mov
inc
xor
add
jo
fwait
aas
jg
repz
mov
(bad)
(bad)
jmp
pop
cmp
in
js
iret
inc
mov
fsubr
mov
sub
loopne
add
(bad)
(bad)
inc
dec
stos
les
push
loop
or
push
xchg
sbb
jl
rcl
sbb
and
(bad)
(bad)
call
sahf
adc
lahf
push
fwait
stc
jo
fcmovnb
and
sbb
add
fcmovb
sub
inc
jmp
test
movs
fist
shl
call
fstp
push
add
push
les
(bad)
call
push
cmp
out
jmp
cld
fbstp
add
mov
leave
(bad)
(bad)
(bad)
push
pushf
mov
cmp
push
xchg
mov
xor
sub
(bad)
inc
push
push
pop
jle
ret
sub
lock
mov
jecxz
push
rcl
fist
xor
mov
sbb
out
(bad)
(bad)
call
dec
loopne
je
xor
sbb
ret
rol
test
xor
jne
adc
(bad)
inc
sbb
lahf
jg
dec
cmp
(bad)
(bad)
mov
and
xchg
mov
mov
loope
ja
and
add
fidiv
inc
or
mov
add
(bad)
(bad)
cmp
xchg
inc
stos
in
jno
push
xor
xchg
out
cdq
or
aas
inc
fiadd
loopne
or
mov
nop
ret
xchg
out
bound
call
xchg
cdq
out
cld
xor
sbb
out
addr16
shl
cmps
or
clc
sub
and
sub
stc
xor
or
data16
xchg
add
test
xor
cmp
test
add
addr16
pop
mov
mov
fnsave
adc
dec
ror
adc
test
mov
fstp
sub
jne
fwait
bound
adc
lods
pushf
cmp
push
fsubrp
scas
sbb
jbe
push
push
in
mov
jbe
(bad)
mov
sbb
mov
jmp
rdmsr
push
and
and
sbb
stc
push
int3
aam
cmps
or
xor
mov
adc
push
push
aaa
or
inc
outs
jmp
mov
adc
and
adc
iret
push
std
fsubrp
adc
cmps
stos
xchg
adc
push
push
mov
imul
es
jb
dec
push
sub
int3
(bad)
enter
push
dec
mov
xor
mov
movs
adc
sub
dec
int
or
dec
(bad)
add
mov
xor
mov
pop
stos
pop
or
and
mov
std
or
pushf
mov
das
pop
dec
adc
xchg
mov
dec
movs
xchg
jae
add
call
fbstp
nop
sub
cmp
jmp
adc
fnsave
cmp
push
popa
mov
xor
mov
inc
out
mov
out
dec
je
les
mov
xchg
mov
mov
add
mov
add
loope
sub
cmp
mov
es
dec
push
push
dec
push
push
push
repz
repz
push
push
push
push
(bad)
repz
pop
pop
pop
pop
pop
xor
jo
push
test
jg
movs
mov
jnp
xor
xor
fwait
in
fst
push
sbb
adc
mov
and
outs
adc
pop
rol
rol
dec
add
mov
stc
loop
stos
leave
add
data16
fnstsw
cmp
add
inc
sbb
pop
mov
outs
and
aas
call
xor
push
aas
test
mov
add
mov
add
neg
rol
inc
or
add
icebp
xchg
inc
inc
jbe
fs
sbb
test
pop
les
bnd
out
cmp
inc
jmp
mov
sbb
arpl
dec
jo
(bad)
jle
or
xor
rcl
in
pop
push
rol
and
pusha
(bad)
(bad)
in
push
jo
jo
or
jbe
add
enter
(bad)
outs
addr16
loop
pop
adc
ja
and
fldcw
push
loopne
rol
add
aaa
push
test
push
cmps
ror
inc
jg
add
loope
sub
adc
icebp
gs
hlt
push
or
push
jl
cs
mov
add
dec
sub
(bad)
pop
add
mov
and
xor
shr
xor
test
pop
mov
dec
bound
ja
mov
push
mov
loopne
jb
ja
add
push
or
int
lods
js
xchg
dec
sahf
jo
adc
push
push
fs
mov
fisttp
sub
daa
out
fmul
mov
call
out
and
add
xchg
int3
bound
loop
and
test
pop
loope
add
(bad)
jae
pushf
push
test
mov
xchg
add
movs
pop
and
or
dec
add
or
(bad)
repnz
jp
jmp
jg
inc
neg
fninit
test
mov
(bad)
iret
clc
lahf
mov
mov
outs
fwait
mov
mov
push
ja
sub
cmp
or
add
outs
inc
sbb
sti
jmp
mov
pop
test
inc
adc
or
inc
lds
lock
sub
xchg
push
mov
xor
push
in
pop
(bad)
in
outs
icebp
and
int
cmp
and
push
cld
adc
mov
scas
loope
data16
int
icebp
ins
ss
dec
pushf
push
jp
outs
call
mov
jmp
sar
mov
sub
sub
imul
mov
mov
ins
add
inc
mov
mov
loop
ds
jmp
(bad)
mov
jecxz
add
mov
iret
sub
xchg
sbb
inc
shr
nop
sbb
xchg
xor
loopne
xchg
repz
in
mov
pop
fcom
call
rcl
ret
je
and
sub
xor
stos
mov
inc
mov
inc
jmp
shr
je
dec
push
call
scas
dec
in
das
ret
outs
sub
add
xchg
dec
repz
dec
mov
inc
xor
ins
mov
sub
cmps
scas
xchg
cmp
test
pop
cwde
inc
jno
es
mov
test
mov
pop
into
cmps
jl
xor
popf
xor
or
popf
loope
out
and
mov
adc
mov
mov
sbb
cs
scas
lds
int
js
cmp
xor
aad
xchg
xchg
cmp
inc
jecxz
add
ja
jno
jae
jne
ja
jns
jnp
jge
push
bound
gs
or
jmp
push
ins
ins
outs
outs
jo
push
sub
sub
pop
pop
pop
pusha
popa
inc
inc
inc
fwait
add
das
push
dec
dec
dec
mov
ss
jg
aaa
cmp
cmp
cmp
ds
inc
inc
and
sub
sub
push
push
xor
xor
pop
push
pop
and
add
and
adc
mov
pop
xchg
sbb
sbb
scas
cmp
stos
push
movups
and
xchg
add
add
adc
or
add
add
in
push
xor
inc
or
jo
mov
sbb
mov
rcl
pop
test
std
ds
cmp
rol
ja
cmp
push
or
jbe
dec
ins
inc
jl
in
add
out
lahf
sub
in
(bad)
jl
adc
ja
ja
idiv
jle
mov
adc
jbe
and
jo
loopne
sti
push
xor
pop
inc
js
out
jle
adc
(bad)
push
mov
(bad)
call
sub
jbe
(bad)
pop
out
jo
push
pop
ins
mov
ja
add
xor
mov
pop
jo
out
sub
sar
push
int3
ja
or
pop
ins
jo
outs
push
sti
(bad)
jo
pop
sar
add
xor
xchg
(bad)
sahf
sar
fstp
mov
mov
cmp
ja
xchg
ja
cmp
add
or
pusha
addr16
lock
adc
cmp
stos
jbe
ins
add
or
pop
mov
adc
int3
jle
je
mov
sar
add
add
push
cmps
pop
lock
data16
addr16
add
sub
int3
lahf
loope
jg
inc
jbe
mov
mov
fdiv
fs
add
or
int3
fdivr
xor
ja
pop
sti
or
add
inc
sbb
xor
adc
sbb
adc
push
cmp
xchg
adc
ret
add
lock
loopne
in
sub
sbb
add
jmp
test
cmps
mov
push
jg
xor
xor
iret
or
ja
jmp
in
scas
push
retf
push
je
movs
dec
add
ins
xor
test
cmc
fwait
cmp
push
xchg
std
scas
or
xchg
in
inc
aam
pusha
test
push
mov
loop
push
and
cmp
fldenv
jl
pop
jmp
outs
out
es
jbe
mov
xor
xor
pop
push
(bad)
fucomp
pop
aaa
rcr
dec
add
sub
out
mov
push
mov
jae
nop
inc
rcr
or
(bad)
xor
jp
(bad)
mov
fimul
pop
adc
stos
jbe
xchg
hlt
jo
imul
movs
fisttp
push
in
xchg
mov
mov
and
adc
mov
mov
mov
mov
stos
push
cs
sub
pusha
and
out
cld
dec
ins
cmc
mov
out
mov
jne
pushw
ret
dec
sbb
sub
repz
cs
in
test
sub
adc
inc
mov
cmp
add
je
sar
rol
inc
sahf
mov
(bad)
cmp
bound
add
mov
fwait
out
add
jl
gs
adc
mov
cld
test
in
cmp
jge
ds
lds
inc
unpckhps
push
xor
or
push
popf
in
outs
push
mov
push
or
and
mov
xchg
dec
push
push
jbe
js
sub
jmp
in
cld
pop
adc
adc
neg
add
add
dec
mov
jmp
fdiv
push
loop
sahf
outs
pop
(bad)
and
jbe
aam
imul
fistp
fimul
pop
sub
in
imul
faddp
mov
add
xchg
xchg
in
mov
iret
xlat
push
in
mov
out
or
push
mov
mov
inc
shr
jmp
push
out
jle
adc
in
inc
jg
xlat
fwait
mov
xor
ficomp
add
rcl
mov
mov
scas
push
pop
loop
jnp
das
je
lods
inc
mov
push
sahf
fdivr
dec
adc
inc
fcmovnbe
push
fnsave
fs
test
ret
clc
cmp
cmp
xchg
inc
xchg
test
fisubr
pop
data16
outs
push
inc
std
pop
hlt
in
aaa
inc
(bad)
jmp
loopne
bound
mov
retf
add
lock
imul
test
ffreep
rol
hlt
jecxz
push
sbb
cmps
mov
push
nop
inc
call
js
dec
jle
mov
arpl
add
jno
in
fadd
dec
and
sar
xchg
fwait
adc
mov
scas
iret
jno
loop
es
stos
mov
ret
scas
pop
mov
adc
adc
mov
cmp
adc
hlt
dec
sbb
pop
push
add
std
dec
or
xchg
jp
mov
pusha
xchg
(bad)
outs
div
jb
inc
add
push
sbb
mov
cmps
(bad)
pop
add
(bad)
fadd
fcom
shl
ja
xchg
push
je
add
mov
sub
imul
gs
cs
mov
sub
out
je
sub
dec
lds
or
pop
imul
pop
push
in
mov
mov
les
sub
(bad)
sahf
dec
ret
xor
call
je
ins
mov
add
jb
add
fcmovu
adc
and
jge
or
cmp
sub
inc
aas
and
mov
sbb
aaa
aaa
adc
pop
and
inc
xor
sbb
scas
pop
jnp
mov
or
pop
mov
inc
mov
pushf
and
pop
dec
pop
cmp
in
push
int3
into
xor
jbe
ret
mov
mov
dec
add
cmp
add
mov
cmp
mov
scas
push
and
jl
es
sbb
(bad)
jbe
inc
add
cmp
push
push
pushf
scas
add
stos
pop
dec
cmp
pop
pop
add
dec
inc
loop
inc
dec
popa
pop
rol
jle
push
dec
pop
ja
or
cmp
dec
sub
mov
xor
ds
sub
jg
or
dec
push
mov
or
repz
shl
and
or
mov
ss
std
fucomi
xor
mov
jns
and
(bad)
xor
icebp
push
rdtsc
and
cmp
and
cmp
add
inc
icebp
or
push
and
and
pop
push
mov
push
je
inc
cmp
movs
shl
idiv
out
shl
add
sub
xor
push
adc
(bad)
fistp
push
push
sub
movs
sub
stc
or
adc
sub
cmp
pop
inc
or
xor
add
in
sub
pushf
xor
loopne
and
mov
aas
xchg
sbb
push
or
add
cmp
lea
and
clc
(bad)
push
and
dec
(bad)
xor
xchg
rol
add
adc
pop
outs
retf
fbld
dec
and
rol
cmp
push
shr
inc
or
add
adc
adc
idiv
pusha
loop
mov
ja
cs
xchg
mov
cmps
push
or
jl
adc
(bad)
loope
(bad)
inc
call
jle
in
push
and
or
shl
and
icebp
xor
into
ins
dec
pop
fcmovb
and
imul
and
outs
pop
je
mov
sahf
test
pop
int3
push
js
inc
(bad)
push
adc
pop
ret
jp
dec
mov
movs
or
int
or
and
retf
xor
mov
xchg
rcl
inc
fistp
aad
scas
pop
mov
or
jle
stos
jmp
adc
std
je
sub
mov
push
adc
mov
cmp
(bad)
call
inc
cmp
inc
gs
mul
cmp
cmp
scas
std
leave
pushf
imul
pop
sar
push
add
sub
and
lahf
mov
add
in
mov
xlat
hlt
repz
mov
push
sbb
push
ins
psrad
add
sbb
add
in
or
xor
scas
mov
repnz
xor
stos
cmp
mov
inc
stc
push
sub
mov
dec
add
sbb
adc
cmp
and
mov
adc
nop
fs
mov
mov
(bad)
and
and
cmps
or
pop
ss
add
js
out
dec
mov
mov
add
(bad)
mov
xlat
out
mov
out
mov
cli
mov
ins
push
fsub
add
sbb
mov
enter
add
dec
out
psrlq
outs
push
nop
push
loopne
pop
mov
mov
xchg
std
mov
in
mov
mov
xor
xor
xor
sbb
stos
fs
push
mov
push
mov
ret
inc
(bad)
mov
push
in
std
xlat
(bad)
mov
mov
les
(bad)
sar
adc
xor
movs
adc
iret
cwde
push
and
mul
fild
ret
icebp
retf
stos
push
xor
sub
inc
jb
mov
push
fdivr
sub
(bad)
add
repnz
(bad)
retf
mov
neg
aad
test
mov
aas
cmp
add
adc
rcl
sub
xchg
cmp
adc
or
out
shl
rcl
loop
(bad)
xlat
retf
repz
sbb
cmp
cmps
cli
add
mov
xchg
or
scas
dec
shl
sub
leave
xor
pop
nop
sahf
cld
or
mov
fiadd
jns
es
sub
cwde
add
push
and
call
repnz
mov
mov
and
fdivrp
fiadd
cmp
inc
xchg
and
jns
or
js
adc
mov
xchg
mov
enter
cmp
mov
dec
jge
inc
adc
and
dec
leave
in
mov
(bad)
movs
cmp
and
sbb
xor
xchg
cs
iret
das
mov
(bad)
mov
push
inc
cs
adc
inc
leave
dec
adc
sub
inc
and
fadd
sub
shl
(bad)
enter
xor
jle
(bad)
adc
mov
mov
out
std
stos
push
es
aaa
cmp
dec
cmps
sub
loopne
lock
add
push
jo
in
push
fcom
mov
and
ficomp
cdq
adc
inc
mov
mov
and
shr
iret
cs
xor
(bad)
sub
mov
lock
inc
add
stos
movs
movs
jo
add
jl
shr
mov
mov
fcmovnbe
pusha
cs
mov
(bad)
mov
in
mov
fisub
rol
(bad)
pop
lock
cmps
and
repz
data16
add
pop
js
xchg
fdiv
add
cli
sub
std
es
jl
jecxz
jo
scas
sbb
or
sti
or
jno
sub
fsub
mov
adc
imul
test
or
xor
retf
iret
(bad)
inc
and
or
jl
adc
ins
mov
test
out
or
pop
cmp
or
push
imul
jns
or
adc
fisttp
adc
mov
fldcw
inc
cs
js
loop
push
outs
or
sti
inc
out
fst
pop
inc
das
(bad)
push
xchg
adc
cs
pop
jo
cs
ja
ja
cmp
mov
sahf
out
and
sub
aam
out
sbb
sbb
sbb
sbb
add
and
or
add
inc
jno
outs
dec
loopne
add
or
loopne
jne
outs
das
add
push
jo
mov
enter
xchg
adc
cwde
lods
cmp
adc
and
xchg
(bad)
sahf
mov
push
and
push
cmps
cmps
add
iret
jae
jg
pop
mov
jns
adc
movs
into
test
dec
and
push
cmps
push
fwait
inc
mov
int
test
jmp
scas
adc
movs
test
sbb
scas
inc
pop
or
adc
adc
nop
scas
xor
es
mov
outs
xor
or
inc
das
clc
call
test
rol
ja
cmp
dec
mov
rcl
cdq
jg
(bad)
pop
das
fs
mov
and
adc
mov
shr
add
or
adc
pop
mov
aaa
inc
pop
aas
inc
add
mov
inc
das
mov
cmp
sahf
fild
mov
pushf
adc
cmp
mov
dec
pop
das
add
in
mov
or
xor
inc
or
mov
outs
add
push
cs
sbb
mov
lahf
popf
stos
cmp
das
rcr
rol
fiadd
outs
dec
xor
outs
cmp
data16
add
enter
pop
add
stos
adc
push
shr
daa
cmp
mov
jo
cdq
pusha
shl
dec
adc
xlat
cmpxchg
adc
daa
nop
adc
mov
or
jno
pusha
int
cmp
adc
push
inc
(bad)
or
lahf
pushf
inc
pop
enter
rcl
mov
push
das
adc
jb
add
adc
int3
mov
into
js
dec
and
or
sub
sahf
cmps
shr
add
add
nop
mov
aad
lds
dec
aad
or
xor
iret
and
out
push
add
adc
out
jo
scas
adc
aad
scas
aad
push
fiadd
pop
mov
cdq
jmp
cmp
pop
adc
cmp
loopne
inc
mov
(bad)
in
pop
or
adc
xor
push
pusha
mov
sub
inc
push
in
sub
lock
fs
mov
into
add
inc
pusha
cmp
mov
inc
xor
or
mov
pop
xchg
mov
enter
cmc
cs
or
in
adc
pop
jb
das
cmp
inc
mov
scas
fadd
lahf
lock
nop
pushf
and
pusha
clc
iret
adc
adc
add
scas
adc
imul
je
add
mov
inc
push
sbb
scas
cli
daa
sbb
and
pushf
bound
pop
jg
outs
mov
mov
adc
dec
shr
add
pop
or
cdq
and
cs
xchg
mov
jo
adc
cld
out
push
jl
mov
cmp
jecxz
pop
ds
adc
mov
and
push
mov
les
idiv
sub
ins
inc
aas
data16
inc
add
ds
(bad)
jnp
repz
cmp
push
call
mov
sar
push
pop
mov
mov
inc
mov
mov
ss
xlat
mov
push
(bad)
dec
xlat
stos
fidiv
aaa
fisttp
and
idiv
push
dec
push
push
hlt
push
retf
fmul
ins
xor
fld
push
jo
mov
jle
push
xchg
add
pop
lock
pop
add
(bad)
nop
push
cmp
mov
add
cmp
xchg
xchg
clc
add
pop
lahf
adc
or
loop
and
nop
xchg
pusha
xchg
jb
mov
xchg
inc
push
xor
dec
cwde
xchg
xchg
push
dec
daa
xor
and
dec
push
jb
inc
scas
push
scas
inc
ss
call
or
xchg
push
add
(bad)
push
jne
enter
pop
add
lods
xchg
and
or
mov
into
rcr
jo
das
inc
or
and
out
push
add
xor
or
inc
add
or
retf
adc
(bad)
sub
dec
xor
push
mov
push
pusha
cmps
adc
add
(bad)
fcmovu
add
sub
inc
es
inc
push
inc
sub
cmps
push
xor
push
push
jne
jo
pop
ss
add
or
add
inc
lds
xor
ins
sbb
out
push
lock
push
dec
(bad)
cmp
rol
ss
add
add
mov
ds
in
inc
mov
inc
loopne
cmps
lods
(bad)
sahf
pop
add
fiadd
in
push
mov
cs
in
loope
sbb
lock
inc
mov
push
mov
push
scas
popf
inc
fsubrp
and
mov
shl
scas
xor
add
push
scas
push
movs
or
ficomp
ret
out
fs
xor
mov
mov
xor
push
xor
rol
lea
push
and
mov
push
loop
xchg
inc
out
mov
dec
push
push
scas
inc
ror
in
inc
icebp
push
in
pop
or
je
loopne
add
mov
inc
leave
dec
psubsw
daa
push
mov
(bad)
hlt
adc
dec
aas
and
jmp
dec
pop
int
push
iret
sub
sub
call
cdq
shr
ret
aas
clc
pop
cvtps2pd
(bad)
push
inc
repnz
jne
scas
cwde
iret
lods
cs
pusha
retf
pop
outs
add
jle
jo
pushf
dec
dec
add
retf
inc
lds
push
aas
adc
inc
push
fild
pop
movs
fisttp
das
add
das
sub
outs
mov
push
pop
je
and
das
mov
pop
pop
das
inc
mov
inc
in
add
adc
cmp
loopne
dec
pop
test
mov
fcomp
add
mov
pop
jle
or
pop
cmp
push
inc
les
pop
mov
and
mov
js
inc
scas
imul
mov
mov
jl
rcl
inc
mov
jbe
les
arpl
loopne
inc
(bad)
mov
and
ss
push
js
or
inc
jnp
inc
outs
xor
inc
cmp
push
pusha
scas
jo
lahf
shl
mov
out
shr
lods
push
je
lahf
clc
into
add
jo
stos
inc
jg
push
add
pusha
cs
loopne
inc
add
add
cmpxchg
inc
ror
iret
cs
mov
add
out
test
push
rol
loopne
fisubr
mov
cld
mov
data16
dec
lock
das
cs
add
lods
outs
test
jle
call
xchg
fiadd
pop
mov
xchg
xor
inc
fbstp
outs
in
xchg
nop
ds
inc
inc
push
jo
add
inc
dec
sub
push
sbb
adc
ffreep
or
pusha
dec
pop
add
std
cs
dec
loope
and
std
das
inc
sar
cmp
cmp
dec
inc
(bad)
nop
movs
mov
dec
cs
mov
jns
shr
mov
sbb
xor
ss
and
inc
push
sbb
rol
pop
ja
push
fiadd
push
pusha
scas
mov
inc
pop
(bad)
nop
push
add
inc
pop
scas
or
adc
or
push
mov
mov
or
rcr
pop
repnz
add
inc
das
pop
pop
sahf
sub
popa
pop
popa
inc
inc
and
movs
inc
inc
out
xchg
xchg
ja
cs
and
dec
mov
cs
push
sub
push
push
sub
js
dec
inc
add
in
cdq
imul
test
mov
dec
loopne
repnz
repnz
adc
pop
jb
pop
pop
jo
jb
pop
push
push
mov
repnz
rcr
cmp
jns
stos
pusha
pusha
add
inc
mov
and
push
movs
(bad)
mov
lea
pusha
scas
out
mov
mov
call
jno
mov
(bad)
(bad)
aas
aas
stos
push
pop
push
fdiv
xor
push
call
or
inc
cmps
lock
cmp
loopne
rcl
mov
inc
in
jl
xor
out
cmps
(bad)
dec
aaa
fnstcw
cmps
push
retf
mov
inc
mov
in
sahf
cmp
movs
test
(bad)
(bad)
aas
mov
daa
sar
sar
mov
and
jnp
scas
inc
loope
test
rol
ins
call
dec
out
inc
mov
lahf
jo
das
jg
dec
repnz
mov
test
mov
push
jns
dec
push
das
pop
pop
mov
aas
lahf
cmp
das
bound
dec
jbe
and
mov
pop
pop
adc
push
adc
inc
fmul
sar
jg
lds
push
cmp
cmp
ret
inc
add
aas
sbb
ret
mov
cdq
sub
or
mov
mov
inc
das
aad
add
rol
(bad)
das
adc
xor
inc
mov
add
inc
adc
rcr
jg
out
xor
out
pop
int3
rol
(bad)
ror
nop
push
(bad)
in
test
jecxz
pop
enter
ficom
jb
cmp
mov
dec
dec
adc
rol
rol
pusha
(bad)
push
and
(bad)
inc
shl
jecxz
inc
hlt
add
jecxz
jo
mov
cdq
fadd
mov
sub
adc
push
jae
repnz
xor
push
and
fcmovnbe
fild
mov
outs
or
and
loopne
dec
fild
fisttp
push
jb
pop
mov
add
push
nop
cmp
sar
adc
and
inc
pop
pusha
sti
inc
xor
mov
adc
leave
or
jg
movs
xchg
cmps
test
sbb
test
add
pop
add
and
dec
dec
sub
jns
cmps
or
mov
sub
cmps
push
cmp
sub
cmp
push
push
and
iret
repz
xor
es
repz
pop
daa
cs
repz
das
aaa
ds
adc
mov
(bad)
jecxz
inc
aaa
adc
sahf
out
sahf
stc
icebp
loope
add
(bad)
cld
clc
lock
aad
repz
cld
lds
push
inc
dec
fmul
mov
and
jae
push
jle
inc
or
jle
sbb
push
bound
mov
inc
sub
sti
ins
xor
sbb
push
and
mov
std
data16
ss
and
sbb
or
mov
push
sbb
inc
fwait
cdq
cdq
cmps
mov
ss
add
(bad)
call
out
popa
dec
mov
xor
aas
retf
xchg
scas
out
aas
stos
adc
shl
aas
test
test
aas
jp
imul
mov
push
loope
pop
stos
jb
push
test
ds
cmp
lock
cmp
xor
bswap
aas
inc
push
jl
inc
mov
(bad)
dec
mov
shr
sbb
and
adc
das
out
pop
fbld
call
pop
mov
outs
lahf
pop
or
cmp
add
xor
or
cmp
pop
(bad)
aaa
test
inc
mov
mov
jnp
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
(bad)
(bad)
(bad)
call
push
stos
imul
add
xor
push
into
inc
shl
or
inc
(bad)
(bad)
(bad)
push
jle
inc
mov
lea
jge
loop
shr
out
push
fisub
loope
shr
bound
(bad)
(bad)
call
pop
mov
ins
popf
pop
or
cmp
push
(bad)
test
(bad)
call
jp
xor
jp
inc
mov
mov
jns
inc
mov
sub
(bad)
mov
push
(bad)
sub
sbb
and
push
pop
cmps
or
jmp
push
test
gs
push
popf
add
stc
push
push
aam
mov
jne
daa
inc
pop
sub
repz
aas
dec
ja
(bad)
nop
loop
stos
inc
test
dec
or
jo
(bad)
adc
cwde
das
mov
pop
pop
loopne
outs
add
pop
cs
stos
or
nop
mov
hlt
pop
nop
inc
nop
sbb
push
rol
push
test
xchg
pushw
pushf
push
or
push
pop
enter
das
dec
ins
sahf
sub
in
nop
imul
adc
push
lahf
nop
imul
push
or
cld
ficom
rcr
lds
out
jo
nop
xchg
out
dec
sti
mov
lds
add
lock
jo
pop
jb
pusha
(bad)
jbe
in
outs
lahf
adc
dec
ins
int
popf
aaa
gs
leave
xchg
shr
sbb
and
push
ins
ss
sti
sar
mov
mov
add
push
push
cs
inc
not
pop
(bad)
mov
push
les
outs
pop
push
test
inc
xchg
pusha
out
adc
aas
adc
push
xor
and
into
or
popf
dec
jle
ss
in
pop
adc
jo
sub
mov
test
fistp
stos
cs
fs
into
jl
iret
enter
push
push
xchg
loopne
sahf
cmovg
sub
pop
and
inc
or
and
or
or
in
sub
pop
and
inc
inc
dec
push
shr
add
jnp
mov
push
call
scas
inc
mov
daa
ror
cs
or
dec
cwde
aas
jo
clc
xchg
adc
pop
nop
cmps
jmp
sub
aaa
rol
repnz
retf
mov
sahf
adc
loop
cmp
xchg
sub
pop
mov
daa
in
retf
das
xor
sub
xlat
cmp
fcmovne
cmps
cmp
sub
mov
int
(bad)
xor
push
scas
push
data16
mov
dec
inc
fsubr
push
lods
jp
pmaxub
aad
cli
push
adc
data16
adc
pop
into
push
pusha
int3
jmp
imul
outs
nop
inc
out
jnp
lock
pop
pop
pop
inc
mov
add
pusha
fsub
and
inc
jmp
dec
push
or
inc
dec
mov
mov
loopne
fild
fisubr
push
sub
stos
scas
pop
loopne
push
(bad)
dec
fbld
bound
cmp
ror
arpl
(bad)
das
rcl
or
std
jg
add
scas
inc
push
lods
sbb
add
pop
js
pop
add
push
mov
or
sub
sub
mov
cs
mov
add
mov
aad
push
mov
and
add
ds
adc
xchg
or
mov
inc
out
pop
loope
mov
or
mov
sbb
mov
int
fcom
push
xor
pop
pop
add
or
mov
mov
or
sbb
loopne
mov
jnp
and
add
repz
add
(bad)
mov
sbb
mov
inc
jo
push
or
scas
int
adc
loop
popa
stc
push
mov
xor
aam
cld
iret
test
and
dec
ss
jg
xlat
sub
call
jae
mov
inc
sahf
cmp
outs
je
jne
jo
jb
inc
sbb
je
fs
js
gs
add
push
lods
jle
pop
dec
fisubr
push
add
or
neg
enter
jo
es
lock
and
mov
mov
shl
dec
and
enter
ins
gs
ss
add
ja
xchg
inc
push
mov
dec
movs
mov
cmps
or
cs
out
sub
and
movs
mov
push
jle
test
in
add
inc
cs
push
mov
cmp
imul
push
int
enter
iret
repz
fld
adc
and
imul
out
mov
xchg
call
bnd
shl
clc
dec
adc
in
push
push
lock
(bad)
push
addr16
cmp
push
jo
aas
push
popa
call
push
push
das
dec
adc
and
ins
popa
jo
aas
nop
test
jb
jae
ds
(bad)
loopne
retf
push
gs
into
pop
(bad)
or
pop
push
mov
pusha
ret
xchg
push
pop
lahf
imul
and
adc
and
add
pop
sti
adc
pop
dec
inc
ins
imul
loopne
adc
fstp
mov
cwde
out
push
inc
mov
inc
xchg
enter
mov
jb
push
or
outs
loop
cmps
push
hlt
hlt
adc
jle
sahf
out
push
pop
imul
mov
jns
iret
shr
add
movs
lock
mov
repz
sbb
ds
out
push
sub
ins
movs
shl
mov
cli
test
test
pop
cmp
mov
jns
clc
push
in
in
int
sahf
out
sub
mov
mov
push
xor
xor
(bad)
cmp
fwait
jbe
xchg
out
mov
daa
or
push
ins
ds
out
cmp
cmp
imul
hlt
fisub
sub
pop
aas
mov
adc
inc
retf
pop
test
iret
add
and
sub
add
ins
pop
in
sbb
sbb
adc
dec
leave
out
jmp
scas
imul
stos
jmp
inc
mov
cmp
sar
add
pop
push
xchg
scas
loopne
enter
xchg
mov
dec
gs
jbe
dec
push
and
sub
int3
or
pop
push
ins
addr16
cmp
retf
sti
adc
lahf
push
outs
fs
lock
xor
fild
test
frstor
not
lods
inc
scas
xor
xor
xor
pop
and
enter
fisubr
cs
ds
cli
nop
aad
bts
inc
mov
mov
pop
out
stos
adc
popa
outs
inc
cs
mov
loop
das
loope
cs
add
dec
cmp
enter
adc
adc
out
imul
xor
pop
push
call
sahf
mov
xchg
stos
push
pop
lahf
jb
mov
push
aad
sub
jle
int
fwait
shl
movs
hlt
cmps
test
jle
jmp
dec
ins
fs
sub
ss
xor
or
and
jae
fnstcw
inc
add
and
out
sahf
rol
jb
and
sbb
or
dec
jb
outs
scas
push
or
mov
jne
scas
sub
into
outs
jb
clc
inc
ins
mov
out
out
jne
inc
imul
dec
adc
cwde
and
push
outs
imul
mov
pop
pop
mov
mov
(bad)
push
jns
ins
dec
adc
js
sbb
movs
sub
ins
loopne
or
js
mov
repnz
xlat
clc
scas
pop
mov
loopne
test
xlat
push
mov
mov
ss
(bad)
cmp
jbe
daa
pop
cmp
add
pop
dec
je
add
or
push
test
jae
push
daa
add
lods
push
js
jbe
das
or
adc
mov
aaa
and
mov
jle
cld
iret
dec
jne
cwde
push
clc
inc
jb
jns
iret
div
jns
(bad)
mov
movq
cmp
or
aas
sbb
xchg
mov
in
xor
sbb
dec
jecxz
fwait
xchg
popa
cmp
push
je
inc
shl
arpl
fmul
neg
inc
hlt
xchg
or
cmp
stos
and
or
js
call
xchg
mov
sbb
dec
pop
aaa
(bad)
xchg
sub
lahf
out
and
lods
and
push
add
aad
add
cli
dec
(bad)
sbb
xor
sahf
push
int3
clc
push
out
test
add
pop
add
adc
jae
jge
dec
push
repnz
jg
mov
mov
int3
mov
xchg
xor
xor
call
cmp
aaa
adc
(bad)
ds
out
and
and
push
cs
adc
xchg
add
add
jg
or
test
fwait
in
cmp
inc
pop
fwait
mov
aam
les
mov
jno
scas
shl
mov
xchg
mov
push
ret
mov
arpl
repz
xchg
inc
cmp
push
cld
add
aam
inc
mov
imul
fnstcw
lahf
jbe
mov
cmp
pop
(bad)
fs
addps
lea
sbb
clc
dec
dec
inc
jo
iret
push
leave
lahf
loope
jle
mov
inc
das
adc
pop
sahf
outs
in
imul
pop
add
xchg
jns
add
gs
push
add
sbb
lods
push
cmp
in
jmp
scas
adc
aaa
add
mov
xchg
xchg
sub
dec
scas
mov
inc
xlat
jl
push
enter
test
dec
sub
pop
push
mov
pop
inc
int
rcl
shr
add
fadd
das
dec
jg
sub
rol
pop
add
lock
add
or
xchg
inc
(bad)
mov
inc
xor
aad
hlt
xchg
daa
xor
inc
adc
adc
(bad)
jbe
jle
add
fwait
rcr
push
pop
lods
add
dec
pop
or
imul
or
xor
inc
out
daa
dec
and
jmp
out
add
fs
cmp
js
repz
out
sub
cmp
push
xchg
lahf
out
xchg
push
dec
sahf
sbb
inc
lock
pop
inc
ins
fs
and
out
mov
str
push
fild
ds
push
inc
ret
mov
pop
pop
shr
mov
lock
pusha
in
into
cdq
jbe
mov
addr16
sbb
test
xor
jae
pop
ret
add
push
push
inc
push
movsx
push
jbe
fimul
outs
loopne
ins
(bad)
imul
dec
mov
in
jp
pop
push
mov
sbb
push
push
add
(bad)
xor
or
rol
jmp
adc
scas
out
xlat
jbe
das
dec
mov
out
mov
and
sar
outs
fsub
jae
das
arpl
add
push
outs
jb
lods
and
xor
lock
or
scas
mov
into
movs
dec
sahf
adc
leave
sub
add
inc
aas
repz
sub
retf
sbb
pushf
jmp
dec
test
mov
outs
ins
push
imul
call
out
cmps
call
das
aam
xor
mov
loopne
sbb
shl
inc
cmp
and
sbb
jae
arpl
sub
cmp
adc
aam
or
loope
add
ucomiss
sbb
stos
mov
lock
loop
xchg
push
jle
outs
xchg
add
push
pop
jg
xchg
adc
xlat
xor
popa
hlt
iret
loopne
pop
jae
sub
push
clc
ds
lock
lock
dec
dec
sub
or
push
outs
pop
jmp
das
adc
xor
push
lahf
mov
pop
out
imul
lods
repz
cmp
sub
(bad)
iret
sub
push
arpl
out
call
imul
push
xor
(bad)
jns
icebp
repnz
dec
mov
xchg
movs
(bad)
pop
add
dec
pop
ins
xor
fsubp
sub
das
pop
inc
dec
sti
fidivr
push
adc
dec
call
sub
mov
jo
out
add
push
add
(bad)
mov
cmp
shl
or
push
and
frstor
aaa
fwait
cmp
lahf
adc
push
dec
push
and
jle
or
mov
je
push
test
fadd
push
pop
mov
add
cmp
ds
push
cwde
xchg
cs
mov
iret
repz
(bad)
or
jmp
test
adc
sbb
xchg
inc
(bad)
int3
call
jns
gs
xor
out
ja
jo
cmps
xchg
cmp
jle
inc
ss
fs
mov
fwait
push
arpl
push
cmp
call
data16
and
xchg
adc
ret
nop
xchg
cmps
or
push
scas
imul
jb
sub
xchg
push
iret
adc
pusha
mov
cli
pop
shr
mov
xchg
sub
aas
scas
nop
xchg
out
push
mov
add
adc
std
not
adc
lahf
enter
loop
jmp
cmps
test
mov
mov
cs
stos
cs
xchg
xchg
add
dec
add
sub
add
loop
push
inc
scas
enter
test
scas
sub
aas
inc
out
cmp
push
sahf
add
mov
ds
jbe
mov
jg
idiv
inc
(bad)
or
inc
int3
test
push
adc
inc
cdq
js
add
test
stc
mov
sub
sahf
ja
mov
dec
movs
pop
dec
dec
jmp
dec
loopne
int3
inc
inc
push
bound
jo
imul
jb
add
fistp
ror
scas
sub
loope
add
push
xchg
add
mov
fdivr
cmc
jnp
dec
das
cs
das
xchg
out
addr16
push
push
scas
jge
fimul
(bad)
das
(bad)
pop
jnp
jns
das
pop
and
and
inc
mov
push
sahf
jl
adc
ja
outs
jb
dec
rcl
pop
xor
dec
xor
xor
mov
dec
scas
pusha
sub
mov
and
sbb
push
scas
push
jecxz
adc
push
not
jo
ins
mov
add
xchg
pop
push
arpl
pop
add
nop
sbb
add
paddsb
xor
inc
jg
and
js
add
jne
gs
icebp
pop
loopne
push
jp
popa
outs
and
push
dec
inc
inc
rcl
or
outs
dec
imul
ret
inc
and
sub
sub
outs
pop
ins
clc
in
inc
dec
dec
pop
dec
dec
dec
inc
push
pop
and
mov
mov
adc
cmps
aas
add
popa
inc
xchg
mov
(bad)
aaa
arpl
xor
push
mov
js
fdivr
ret
nop
sbb
das
pop
sub
jecxz
lock
mov
dec
inc
push
js
ins
pop
das
js
push
pushf
push
cli
fwait
cmps
stc
fdivr
dec
push
mov
add
fistp
jp
cs
push
mov
dec
dec
rcl
adc
(bad)
jp
or
(bad)
dec
lea
xchg
fs
addr16
cli
mov
push
inc
inc
jns
adc
jo
ret
jle
dec
dec
pop
xchg
dec
sbb
imul
and
pop
push
jge
popa
adc
in
dec
inc
ret
cmp
fs
cdq
dec
inc
xchg
pusha
(bad)
call
data16
movs
mov
dec
sub
dec
mov
(bad)
mov
data16
int3
call
inc
pusha
les
cld
enter
pusha
xchg
jne
stos
mov
(bad)
test
pop
fs
xchg
call
jg
mov
inc
and
jle
(bad)
pop
scas
bound
cmp
cmp
repz
adc
add
add
repz
aaa
or
test
cmp
or
lock
jp
push
xor
jg
mov
push
xor
into
les
fdivp
push
and
push
adc
pop
sar
xor
adc
mov
test
int
dec
push
push
push
int3
pop
and
xor
out
popf
mov
cmp
cmps
stc
inc
pop
shl
pop
ret
push
iret
jnp
sti
push
pop
jbe
arpl
jo
jmp
fisubr
xchg
into
and
sub
popa
les
push
cs
sbb
xchg
push
repz
addr16
clc
mov
xchg
mov
pop
sti
cmp
repz
adc
xchg
fmulp
imul
outs
push
das
pop
sub
jnp
shl
push
jns
push
rol
fdivr
ds
aaa
stc
push
ucomiss
pop
cmp
xor
and
xor
cld
xlat
retf
jecxz
out
jmp
pop
out
dec
(bad)
xor
cmp
out
(bad)
push
pop
xchg
fiadd
int
neg
mov
leave
push
inc
mov
pop
fs
jb
call
xchg
(bad)
fiadd
in
bound
pop
sbb
arpl
js
ins
ss
in
pop
outs
sahf
jmp
pop
ja
jns
add
fldenv
jl
jne
inc
xchg
mov
scas
ds
jnp
loopne
addr16
dec
push
pop
jle
jle
or
imul
mov
mov
ins
pop
add
sbb
or
mul
sub
cmp
push
gs
ins
sti
lods
pop
je
and
jae
das
or
cmc
mov
or
push
pop
das
or
push
mov
and
arpl
jo
cmps
and
cs
and
push
cs
sub
(bad)
pop
fs
jg
pushf
std
mov
gs
add
push
mov
out
mov
cmp
mov
out
or
dec
push
add
pop
add
sbb
movs
cmps
dec
lea
push
or
jmp
aaa
ja
pop
enter
inc
push
xor
out
mov
ret
xchg
sahf
out
not
(bad)
xor
push
and
lods
dec
call
and
mov
jae
pop
sbb
cs
pop
dec
fadd
push
jb
push
jnp
or
scas
sbb
mov
sub
and
sti
ins
pushw
pop
inc
dec
push
dec
inc
adc
pop
dec
push
es
xchg
mov
push
(bad)
arpl
enter
ins
pop
push
je
in
inc
jae
push
jbe
jbe
bound
es
dec
iret
xchg
mov
call
arpl
jle
outs
nop
(bad)
std
xor
or
xor
gs
test
fld
inc
cmp
jle
xlat
out
inc
shl
cmp
sub
rol
shl
xor
aaa
sti
das
jnp
cmps
icebp
inc
jne
jl
jns
pop
(bad)
xor
sub
int
xor
fiadd
or
jne
je
xor
sub
aaa
aaa
inc
and
dec
imul
inc
sub
add
lahf
xor
and
and
cmp
lods
cmps
test
jbe
jae
xchg
jp
sbb
cmp
and
sahf
cmps
stc
cmp
aam
and
jns
lock
or
cmps
pop
idiv
out
je
mov
imul
and
cmps
ins
fild
inc
sub
pop
add
cmovl
ja
cwde
aas
mov
jns
out
(bad)
push
mov
je
ror
fs
mov
mov
loopne
enter
mov
mov
mov
clc
jg
iret
int
sahf
ins
retf
daa
fwait
dec
inc
scas
and
std
push
dec
scas
cmp
cmp
fs
jmp
mov
adc
add
fs
adc
dec
sti
or
push
dec
push
inc
movs
arpl
outs
dec
outs
jbe
dec
sbb
xor
mov
sub
jp
addr16
dec
push
or
dec
jo
ds
inc
rcr
ret
mov
jne
cmp
add
cmp
scas
cmps
xchg
pop
xor
pushf
jg
addr16
stos
jb
(bad)
iret
fdiv
lahf
mov
jae
push
gs
sbb
(bad)
cmp
ins
sti
and
jbe
mov
aas
pop
test
inc
pop
repz
dec
push
sbb
sar
cld
(bad)
jg
pop
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
in
pusha
inc
xor
ret
das
rcl
or
xchg
mov
jb
dec
jp
push
fisubr
xchg
imul
and
push
xor
cmp
mov
mov
and
and
(bad)
sbb
imul
outs
mov
aaa
aam
or
push
not
data16
ins
outs
ja
jno
stos
sbb
shr
shl
mov
adc
jbe
mov
sbb
dec
arpl
out
push
mov
mov
mov
gs
das
mov
and
add
xlat
mov
adc
add
outs
push
fs
lods
push
mov
dec
imul
add
xor
inc
aaa
ins
mov
sar
pop
or
inc
arpl
jo
sub
push
pusha
daa
bound
outs
dec
ins
cwde
test
xor
mov
xor
cmp
and
mov
inc
mov
movs
jnp
jne
jae
push
xor
mov
inc
adc
mov
or
and
ret
dec
pop
shl
add
and
or
imul
pop
sub
cmp
cmp
pop
pop
cmp
ret
mov
ja
(bad)
aas
pop
aas
sar
rcl
sub
retf
jae
push
pop
es
pushf
(bad)
gs
ins
inc
gs
out
push
(bad)
fistp
xor
fimul
leave
int
xlat
ret
inc
out
jg
(bad)
rol
push
mov
into
jae
jns
xor
loope
mov
data16
jns
xor
pop
and
ins
fs
(bad)
popa
(bad)
mov
sub
and
je
mov
xor
cwde
push
jno
sub
out
ins
dec
popa
xor
pop
inc
cmovs
cmp
ins
addr16
outs
cvttps2pi
addr16
psubb
xor
add
pusha
cmp
add
xlat
jo
push
push
push
fstp
and
test
dec
mov
dec
add
ins
and
daa
dec
es
cmp
das
xchg
leave
sahf
mov
(bad)
repz
push
push
pop
call
loop
fistp
push
test
add
and
add
lds
pop
or
aaa
hlt
push
push
pop
push
or
push
add
pusha
push
ret
sar
add
leave
mov
inc
outs
sub
dec
ins
sub
outs
jo
adc
jbe
daa
(bad)
pop
call
dec
add
push
repnz
test
jo
add
and
inc
js
add
dec
mov
add
add
and
cmp
push
lea
mov
jb
(bad)
pop
mov
dec
out
je
arpl
mov
mov
daa
pop
retf
sar
xchg
xor
mov
loope
xchg
mov
daa
mov
imul
pop
push
xor
push
dec
inc
dec
add
dec
dec
adc
cdq
sbb
inc
push
cs
xchg
(bad)
push
jg
ds
sub
push
sub
(bad)
adc
jg
mov
ficomp
and
add
dec
mov
mov
sbb
cmp
aas
test
or
daa
sbb
inc
push
mov
inc
scas
into
adc
cs
call
loope
push
mov
pusha
sahf
cmps
dec
int
pop
loop
jge
inc
out
mov
repz
into
push
in
stc
pop
repnz
ja
int
cmp
sbb
xchg
inc
cs
jl
add
call
ror
dec
cmp
mov
call
test
sbb
mov
(bad)
jg
imul
clc
in
push
iret
(bad)
bound
dec
or
lock
loopne
sbb
mov
rcr
cmp
or
cmp
jecxz
mov
pop
in
inc
rcl
or
pop
xor
pop
inc
sub
dec
push
pop
xor
das
add
sbb
add
jb
pop
and
pop
and
enter
add
or
enter
enter
movups
adc
enter
adc
jb
pop
and
pop
and
enter
stc
jae
pop
sbb
mov
xor
inc
cs
and
add
in
mov
cs
add
push
scas
rol
add
add
add
fbstp
das
add
fmul
push
add
or
or
sahf
sub
sub
add
mov
add
adc
scas
mov
xor
fst
push
jo
dec
xor
leave
add
mov
xchg
mov
mov
add
shl
sub
enter
xor
add
ss
pop
lahf
call
and
adc
mov
(bad)
mov
call
adc
or
sbb
outs
dec
dec
mov
cmp
xchg
in
frstor
xor
nop
mov
mov
mov
call
iret
adc
out
sub
adc
inc
pusha
mov
xchg
cmp
sub
nop
sbb
mov
sbb
mov
fdiv
das
add
sbb
pop
adc
outs
xchg
daa
enter
jmp
fwait
inc
push
xchg
pushf
loopne
xor
sub
shr
or
adc
adc
mov
sub
js
jg
or
nop
movs
mov
or
shl
push
cwde
or
daa
ja
cmp
cmp
outs
cwde
call
add
dec
loopne
fadd
jecxz
cmp
adc
inc
das
and
xchg
movs
out
pop
ficom
cmp
xor
cmp
call
jbe
sub
lahf
mov
adc
cmp
push
lahf
xchg
or
pop
mov
frstor
mov
mov
sub
fsubr
mov
cmp
enter
push
pop
and
or
fsub
sar
cmp
xchg
daa
clc
movs
dec
and
or
cmp
push
cmp
enter
mov
lods
mov
sub
add
cs
repnz
out
outs
dec
mov
aas
cmps
sub
daa
sbb
daa
push
mov
lahf
xchg
mov
mov
xchg
lahf
test
repz
mov
mov
daa
shr
ds
enter
add
jmp
push
nop
inc
pop
mov
adc
lahf
xchg
nop
xor
inc
(bad)
nop
fldcw
xchg
inc
lahf
push
dec
dec
and
xor
inc
daa
sbb
outs
xchg
jo
jg
cmps
es
pop
sets
inc
das
mov
mov
mov
xchg
enter
add
mov
ins
leave
or
and
enter
enter
pusha
lahf
sbb
xchg
call
pop
in
cmps
inc
lahf
add
xchg
daa
sub
bnd
dec
push
loopne
adc
dec
test
ds
jno
ja
push
scas
pop
pop
fsubr
add
adc
jns
mov
daa
enter
pop
jg
adc
daa
jo
(bad)
mov
adc
mov
daa
nop
test
inc
pop
mov
or
iret
add
inc
inc
cs
sar
repnz
or
jbe
xchg
daa
adc
enter
xchg
lahf
pop
mov
push
jb
xchg
xchg
pushf
mov
scas
sbb
shr
leave
adc
mov
pop
daa
mov
cmp
and
loopne
lahf
scas
not
enter
add
fisubr
jns
inc
outs
push
clc
or
out
fsubp
pop
push
(bad)
mov
xchg
pop
daa
js
repnz
imul
pop
mov
cwde
lahf
xchg
xor
(bad)
mov
add
dec
into
scas
add
push
call
dec
adc
and
stos
fcom
repnz
dec
mov
xchg
dec
clc
push
inc
jmp
dec
jg
frstor
lock
inc
mov
push
(bad)
sahf
pop
test
adc
scas
cwde
mov
sub
adc
dec
inc
test
loopne
jmp
dec
xchg
daa
and
or
fiadd
cs
mov
cwde
push
lock
push
dec
mov
inc
push
mov
pop
pop
dec
call
cmps
dec
addr16
fisttp
jns
add
jle
adc
sahf
or
mov
lahf
lds
rcr
xchg
daa
rcr
or
lods
call
xlat
push
dec
aas
loopne
mov
push
dec
xchg
push
mov
jg
add
fidivr
dec
lods
aas
mov
daa
fmul
jns
int3
jbe
add
pusha
sub
inc
jno
inc
dec
jg
push
fdivr
pushf
and
adc
dec
out
test
or
push
xchg
mov
clc
outs
loopne
inc
mov
adc
sub
dec
and
scas
inc
scas
dec
or
scas
add
nop
iret
jo
iret
add
fdivr
clc
iret
shl
jb
loopne
dec
fist
push
dec
xchg
xor
pop
in
or
les
dec
scas
xor
sub
pop
aas
pop
mov
repnz
scas
iret
inc
fdiv
inc
lock
sub
pop
cmps
xchg
jo
push
push
mov
lahf
xchg
outs
lock
clc
loopne
push
add
fisubr
and
inc
mov
pop
enter
add
fs
push
mov
or
push
pop
rol
inc
xchg
daa
pop
mov
or
push
(bad)
movzx
lahf
dec
push
xchg
adc
daa
clc
mov
sbb
push
push
iret
pop
js
push
xchg
daa
dec
mov
pop
seto
push
push
cld
ret
pop
pop
sbb
daa
ficom
mov
and
add
js
or
daa
push
mov
jne
dec
leave
mov
enter
add
jbe
sbb
adc
inc
aas
push
scas
pop
mov
pop
cmps
dec
pop
and
inc
cs
inc
cs
or
cmp
mov
dec
or
jg
mov
jg
inc
jle
xchg
or
push
into
fnstcw
enter
shl
enter
imul
in
aas
xchg
aas
sub
fs
lahf
leave
leave
adc
sahf
in
or
sbb
inc
sub
xchg
sub
xchg
sub
xchg
pusha
nop
and
sub
mov
ret
sub
sahf
aas
or
xor
cdq
loopne
xchg
push
or
push
outs
lahf
lahf
inc
sbb
push
mov
(bad)
(bad)
nop
mov
pop
popa
inc
push
je
inc
pop
and
jmp
dec
cmps
push
ficomp
pop
ja
call
xchg
pusha
(bad)
cmps
pop
out
shl
mov
mov
xor
cmp
loopne
punpcklbw
dec
mov
addr16
iret
enter
bound
dec
xchg
imul
fisttp
push
mov
ret
xor
dec
or
fdivr
stos
movzx
leave
repz
mov
mov
dec
repnz
pop
std
in
daa
jp
mov
pop
cmps
xchg
push
jb
pop
xor
dec
pop
push
jl
cmp
pop
rcl
pusha
dec
mov
je
jo
js
sub
jo
cmp
mov
inc
scas
pop
enter
mov
call
push
jle
pop
mov
movlhps
and
aas
bound
pop
xor
js
push
enter
dec
or
outs
fistp
sub
push
add
in
jbe
cdq
movs
das
scas
dec
mov
add
or
push
jb
je
xor
add
and
or
xchg
xchg
inc
nop
and
dec
or
fstp
scas
call
pusha
push
mov
out
cmp
add
cmps
aas
scas
mov
leave
xchg
sbb
pop
rcl
pop
xchg
add
dec
inc
inc
pushf
out
adc
iret
mov
pop
outs
inc
add
adc
push
pusha
add
fld
jae
jnp
jle
sbb
leave
xchg
leave
test
pop
xor
popf
sub
xchg
dec
and
dec
ins
sbb
add
sahf
cmp
ja
daa
loop
cmp
(bad)
mov
fs
movs
fistp
push
enter
dec
adc
pusha
das
mov
popf
mov
add
mov
jo
cmps
in
jb
movs
mov
lds
cdq
add
adc
dec
xor
popa
or
in
mov
mov
mov
or
hlt
or
cmps
jmp
mov
pop
and
xor
push
pop
cmovs
(bad)
xchg
pop
fcmovne
jo
pop
or
nop
cwde
push
add
fisttp
fistp
outs
daa
daa
mov
xadd
sar
ins
(bad)
aas
or
pop
pop
mov
leave
clc
daa
pop
adc
dec
pusha
xor
call
mov
pusha
outs
mov
adc
pop
mov
enter
mov
fs
fsub
loopne
(bad)
popf
or
jmp
imul
xchg
and
sbb
es
add
inc
push
jns
out
out
add
jns
out
jp
mov
into
(bad)
jns
xchg
or
push
or
or
sahf
out
pminsw
clc
iret
repz
adc
stos
adc
and
repz
xor
iret
repz
pop
pop
sbb
repz
sbb
test
xchg
cmp
repz
mov
in
repz
test
jae
outs
test
clc
pop
add
push
enter
dec
and
dec
xor
push
stos
cmp
inc
stos
push
stos
bound
jo
jle
mov
and
stos
mov
les
shr
cld
stos
iret
repz
mov
lods
sbb
adc
adc
repz
adc
push
repz
repz
iret
repz
jp
mov
xchg
sbb
repz
sbb
iret
repz
in
cmp
jmp
xchg
push
lods
das
inc
addr16
sahf
pop
ja
(bad)
push
jo
ror
dec
mov
out
xor
lahf
add
add
test
jle
jb
mov
push
sub
fdivr
sbb
inc
add
aas
jg
lds
cmp
mov
dec
scas
nop
jo
cwde
sbb
fsubr
jnp
pop
mov
adc
dec
add
sub
mov
cmp
mov
imul
imul
add
mov
pmaxsw
in
push
fisttp
inc
jmp
packssdw
push
sub
outs
stc
pop
or
jns
in
add
jg
outs
or
or
and
scas
sahf
aaa
aad
pop
cmp
adc
sahf
out
adc
adc
leave
inc
adc
shr
add
mov
imul
mov
dec
sahf
add
sahf
cmp
scas
add
fsubr
sbb
or
push
push
das
push
movaps
enter
mov
mov
mov
pop
mov
mov
ja
jo
pop
fmul
cmps
jo
cmp
scas
mov
adc
mov
or
ins
loope
leave
leave
loopne
repz
dec
(bad)
nop
sahf
out
femms
pop
cmp
inc
inc
sahf
xchg
out
or
push
mov
mov
jo
or
js
(bad)
ins
pop
iret
(bad)
mov
(bad)
jb
mov
add
into
icebp
jbe
jb
in
pop
cli
mov
adc
jmp
mov
ins
lea
sub
scas
outs
dec
je
into
dec
pop
mov
mov
sub
xlat
scas
cwde
add
nop
dec
sbb
mov
scas
nop
dec
scas
shr
adc
lahf
nop
dec
sbb
jbe
mov
rol
mov
jmp
mov
mov
fs
jle
mov
inc
js
repnz
lahf
stos
mov
in
or
outs
dec
jo
in
sub
cwde
sub
lds
mov
outs
jg
jns
xchg
mov
or
mov
jo
pop
pop
inc
shl
shl
add
out
sub
fisttp
jnp
rol
and
xlat
push
adc
enter
inc
hlt
je
pop
dec
adc
outs
nop
jo
mov
bts
mov
push
fwait
scas
daa
or
jg
lahf
bnd
adc
add
push
mov
mov
sub
nop
imul
push
pusha
sub
dec
xchg
sbb
rol
sahf
cwde
xchg
xor
lods
xchg
pop
pand
or
push
enter
jb
mov
mov
enter
pop
inc
jg
or
dec
mov
or
(bad)
in
mov
dec
je
jae
sbb
mov
pop
push
and
loop
push
xlat
adc
pusha
jae
sbb
cdq
mov
outs
xor
pop
outs
mov
das
sub
(bad)
xchg
lock
call
scas
js
jo
cmp
add
sub
ror
stos
pop
adc
ror
in
leave
loopne
mov
xchg
mov
mov
scas
lock
jne
push
and
jne
inc
push
sti
stc
sub
push
pusha
adc
jb
daa
xchg
mov
sub
enter
xchg
xchg
sbb
scas
inc
inc
adc
jbe
nop
or
in
jl
mov
inc
aas
js
or
jbe
scas
dec
mov
loopne
enter
jbe
dec
and
jbe
add
js
sub
or
enter
push
outs
pusha
js
jb
push
pop
mov
sub
jmp
mov
(bad)
mov
bound
lock
ror
adc
fiadd
js
pop
ror
stc
jg
pop
in
cdq
not
mov
in
mov
mov
cmp
and
jns
dec
enter
mov
pushf
pop
jns
add
cmp
in
rcl
enter
or
mov
jns
jle
out
scas
psubq
mov
push
add
add
out
cmp
out
sahf
push
or
imul
je
jg
mov
jns
out
xchg
push
adc
adc
sahf
out
int3
adc
adc
out
in
pop
clc
sbb
mov
rcl
mov
push
push
sbb
repz
sbb
sbb
repz
inc
pop
dec
and
repz
pop
and
outs
and
repz
and
and
repz
iret
mov
mov
iret
repz
sub
sub
repz
std
xor
je
out
mov
sbb
or
test
mov
in
outs
inc
mov
and
sbb
mov
xchg
jb
enter
mov
inc
mov
iret
mov
stc
mov
pop
mov
mov
jb
mov
pop
mov
imul
jl
add
cdq
fistp
repz
add
pop
lahf
cdq
inc
loope
loopne
(bad)
jge
dec
repnz
mov
xchg
sub
pop
mov
outs
push
pop
mov
pop
cwde
jo
in
sub
rcl
mov
jle
adc
lock
in
jb
adc
mov
mov
in
mov
out
dec
mov
sbb
add
je
(bad)
scas
cmps
shl
mov
ror
call
shr
add
sar
rcr
leave
repz
sub
push
adc
in
in
in
dec
shr
(bad)
popa
shr
fsubrp
ja
out
or
lea
cwde
add
mov
jp
cmp
dec
repz
mov
call
mov
jbe
das
add
dec
and
dec
jns
mov
inc
ret
pop
add
je
in
pusha
push
imul
fucomip
jg
adc
mov
sbb
mov
pop
bswap
fcmovne
repz
(bad)
add
in
das
test
mov
test
push
(bad)
mov
and
wrmsr
xor
(bad)
cmp
jg
test
dec
mov
js
and
nop
cwde
push
test
mov
or
jb
rcr
jg
pushf
pop
xor
clc
stos
sub
pop
seto
scas
nop
imul
les
sub
enter
inc
mov
mov
movs
sar
iret
in
or
sbb
lds
lds
push
add
xor
shr
lds
arpl
jmp
enter
dec
mov
and
cdq
xchg
xchg
xchg
test
test
imul
and
outs
repz
lea
xchg
adc
sub
push
aas
iret
leave
std
or
adc
sbb
sub
inc
inc
jmp
rol
pop
bswap
addr16
out
nop
out
xchg
sbb
mov
outs
fs
pop
push
sub
scas
jne
pop
pop
outs
push
pop
fmul
push
sbb
push
fistp
mov
enter
or
mov
(bad)
in
in
dec
ds
sbb
mov
mov
cmp
test
aas
(bad)
and
mov
iret
sub
mov
iret
mov
out
iret
in
or
and
lock
and
(bad)
enter
xor
mov
ror
pop
jb
sub
and
loopne
push
dec
out
jnp
and
fcomp
mov
cmp
xchg
mov
mov
lds
xbegin
and
mov
pop
and
or
push
xchg
sub
pop
scas
mov
in
ror
xchg
sub
clc
loopne
mov
das
enter
push
enter
enter
or
pop
inc
dec
enter
sbb
pop
enter
sub
jg
mov
cmp
dec
clc
mov
mov
pop
and
push
dec
push
lock
loope
out
js
pop
imul
sub
iret
and
scas
nop
mov
dec
xchg
pop
pusha
leave
dec
leave
dec
mov
push
mov
push
ror
lock
into
jae
mov
imul
cmps
retf
je
inc
mov
pop
inc
pushf
xchg
xchg
out
cmovnp
cmp
pop
jmp
mov
(bad)
nop
lea
lea
or
sbb
into
xor
jns
fmul
and
xchg
pop
test
xor
inc
(bad)
or
repnz
ror
inc
sbb
or
jo
das
enter
pop
(bad)
call
retf
out
retf
pop
pop
pop
pop
or
sbb
daa
retf
xor
pop
inc
retf
push
retf
pop
retf
ins
retf
pop
pop
pop
pop
jnp
mov
xchg
retf
movs
retf
sahf
out
pop
mov
push
adc
adc
sahf
out
fst
inc
ss
push
pop
int3
pop
(bad)
push
adc
push
int3
int3
(bad)
jmp
mov
push
int3
outs
jo
push
jo
pop
call
dec
cmps
nop
nop
mov
xadd
mov
loopne
jmp
in
sbb
dec
outs
movs
dec
stos
push
mov
int
in
adc
fcomp
xchg
sub
xchg
sbb
int
fucomi
push
jle
outs
push
int3
dec
dec
scas
nop
js
fmul
dec
scas
nop
test
clc
jmp
sub
pop
adc
psubusb
push
enter
pop
adc
rol
mov
enter
jno
jg
xchg
cmp
jl
add
adc
into
into
into
cmp
mov
or
push
sub
rol
xchg
and
iret
push
iret
sub
sub
dec
aas
push
iret
call
dec
pop
scas
nop
dec
scas
nop
xor
rol
lock
sub
clc
xchg
ror
jbe
push
into
and
wrmsr
das
mov
hlt
cmp
call
rcl
call
enter
scas
mov
daa
fwait
pop
shl
mov
dec
sahf
adc
out
shl
fcom
adc
jb
adc
and
(bad)
call
cmp
add
daa
push
sub
inc
rcr
nop
imul
nop
mov
pop
clc
sar
cmp
enter
(bad)
scas
cwde
pop
popa
not
test
fild
pop
shl
in
sub
cmp
inc
rol
test
shl
dec
inc
cmps
call
jp
push
xchg
rcr
fisub
minps
cmps
mov
inc
mov
dec
scas
nop
inc
cmp
push
add
adc
dec
xlat
mov
pop
sbb
push
pop
sar
dec
and
mov
sar
scas
push
leave
adc
scas
lea
ret
cmp
mov
push
and
aam
add
dec
add
aam
mov
inc
outs
pop
outs
jo
mov
nop
mov
mov
inc
cs
push
sbb
add
in
lahf
sub
pop
cmp
outs
lock
lahf
mov
fiadd
push
aad
lds
dec
dec
dec
dec
mov
nop
rcl
mov
adc
push
(bad)
pop
enter
xor
fwait
pop
loopne
fwait
enter
pop
(bad)
(bad)
dec
jnp
mov
(bad)
fild
inc
dec
push
(bad)
popf
pushf
pushf
pop
pusha
push
jbe
jo
pushf
jb
jb
mov
outs
jb
ror
lahf
sub
dec
nop
imul
sub
sub
and
clc
adc
xchg
xchg
push
dec
sub
js
pop
or
into
leave
movs
mov
or
movs
inc
mov
mov
add
lock
repz
call
sub
repnz
sahf
inc
push
add
push
iret
cwde
sahf
mov
ror
movs
fld
in
pop
scas
lock
adc
fiadd
dec
sbb
jb
sub
adc
nop
leave
adc
push
loopne
or
nop
xor
or
mov
int3
test
mov
cli
or
fld
pushf
dec
jle
call
jb
aaa
and
jmp
sbb
das
nop
dec
pop
mov
mov
jne
sbb
jo
jo
enter
out
inc
pop
leave
pop
or
iret
or
push
dec
scas
and
fdivr
push
mov
or
nop
test
inc
jmp
movs
inc
(bad)
jmp
test
int3
call
test
nop
adc
inc
pusha
mov
repnz
les
ja
movs
add
mov
pop
outs
outs
enter
fs
movs
mov
movs
inc
mov
pop
les
(bad)
inc
fs
mov
push
add
cwde
cld
outs
xor
sub
dec
adc
call
and
movs
in
mov
mov
pusha
mov
mov
scas
pop
mov
mov
dec
push
sbb
movs
shrd
enter
dec
dec
cmp
add
jb
jbe
push
scas
nop
loopne
xor
or
dec
mov
cmp
mov
add
sub
scas
pop
and
dec
cmp
cmps
jo
in
pop
jo
mov
mov
or
test
pop
xlat
xchg
sub
mov
pop
mov
test
inc
or
scas
pop
or
add
dec
fadd
fsubr
jbe
dec
call
mov
test
and
push
jo
out
mov
or
adc
out
mov
inc
mov
ins
or
(bad)
jmp
push
int3
aad
jmp
ficom
pusha
adc
fisttp
sbb
xor
adc
stos
or
in
mov
mov
xchg
mov
test
pushf
dec
into
icebp
mov
shr
lock
aas
cmp
pusha
lods
mov
and
fnstsw
push
adc
add
ds
out
add
pop
aad
and
ficom
fdivrp
lods
nop
imul
(bad)
dec
cmp
add
dec
push
sub
fiadd
nop
aas
lock
jo
lods
scas
enter
ret
lods
jg
or
shr
cmp
cmps
in
scas
sub
push
test
loope
pop
mov
jo
pop
and
in
nop
xchg
sub
scas
fsub
pop
jo
jg
add
dec
dec
mov
sub
(bad)
jno
popf
(bad)
pop
adc
mov
(bad)
mov
(bad)
dec
mov
pop
xor
xor
and
scas
xor
mov
mov
inc
outs
jle
jno
neg
cmp
xchg
mov
lods
push
dec
jo
scas
loopne
pop
mov
mov
xchg
iret
lock
jo
in
mov
mov
fs
iret
enter
dec
mov
imul
pop
pop
adc
lods
mov
out
mov
inc
push
inc
aaa
jo
leave
push
jmp
push
int3
ret
(bad)
mov
dec
and
jmp
pushf
pushf
pop
call
push
fdiv
push
loopne
sub
dec
push
xor
adc
dec
loopne
nop
imul
pop
test
scas
nop
dec
dec
fcomp
nop
or
daa
mov
and
scas
loopne
clc
loopne
sub
ds
loope
loope
and
loope
loope
sahf
fist
add
inc
pop
fs
loope
xlat
dec
es
je
fbld
mov
jb
lds
dec
dec
leave
adc
mov
cwde
int3
rcl
enter
hlt
loope
mov
jp
leave
inc
mov
dec
inc
xchg
and
or
inc
push
rcr
and
xchg
pushf
adc
fsubr
not
adc
pushf
inc
scas
es
mov
mov
mov
cmp
cwde
add
mov
sar
push
popf
scas
loopne
dec
loopne
dec
xor
call
adc
mov
adc
lea
push
dec
js
loop
pop
pop
and
scas
cwde
dec
shr
adc
aam
mov
dec
scas
call
repnz
loop
add
pavgw
cwde
sub
adc
call
push
adc
cmp
mov
pusha
mov
(bad)
fisttp
scas
or
scas
cmp
fmul
daa
call
repnz
sbb
and
repnz
dec
shl
mov
lods
or
xor
enter
cmp
pop
inc
pop
mov
mov
test
inc
push
and
and
enter
pop
mov
mov
push
pusha
inc
scas
mov
inc
enter
sbb
mov
adc
dec
lock
sub
into
adc
cmp
in
sbb
rcr
xor
jl
or
xchg
mov
dec
push
pop
pushf
mov
pop
push
test
mov
mov
psadbw
inc
pop
pop
je
or
inc
(bad)
mov
mov
mov
push
mov
in
adc
dec
outs
cmp
in
mov
or
std
outs
repnz
in
in
jmp
mov
xchg
xlat
pop
push
cmova
pusha
or
sbb
pop
mov
(bad)
out
pushf
pop
mov
mov
loope
mov
push
dec
aad
dec
nop
fbld
mov
adc
aam
dec
call
call
xchg
dec
push
cld
in
sar
int
cs
dec
cmps
scas
nop
mov
dec
cmp
dec
pop
test
shl
inc
mov
(bad)
jle
inc
(bad)
fwait
cwde
inc
scas
cwde
add
rcr
retf
mov
and
das
dec
out
ret
repnz
inc
ret
loop
repnz
je
jo
pushf
dec
jnp
pop
test
push
leave
xchg
mov
or
jp
sub
pop
mov
sbb
daa
push
jb
dec
adc
pop
call
mov
lahf
mov
in
dec
dec
mov
sub
and
(bad)
ss
sbb
inc
mov
ins
jo
(bad)
inc
les
mov
inc
push
dec
sbb
rcl
push
push
pcmpgtw
inc
add
jno
inc
push
ins
push
(bad)
lock
dec
dec
dec
iret
add
and
inc
inc
add
push
push
dec
dec
inc
push
push
adc
push
mov
lods
test
scas
imul
dec
push
ins
fwait
int
xor
pusha
lods
push
sub
jge
shl
adc
(bad)
jo
adc
xchg
fisub
ja
xchg
mov
mov
push
xor
loopne
cmps
int3
add
mov
push
jp
test
push
stos
push
stos
mov
ret
mov
repz
jbe
push
jae
stos
das
lds
out
add
jl
out
popa
mov
jp
mov
outs
neg
ins
jb
push
xchg
sbb
test
cmps
ins
pop
sbb
add
mov
ss
shl
push
aam
xlat
fdiv
mov
pop
call
les
sbb
cmovg
add
dec
add
cmp
xchg
inc
add
jns
div
dec
add
fcmovnbe
fisubr
or
jle
fisubr
retf
test
cmps
int
psrld
pop
rol
jecxz
mov
(bad)
dec
std
retf
(bad)
into
in
stc
(bad)
fbstp
retf
fisttp
(bad)
(bad)
stos
pcmpgtd
addr16
lock
mov
enter
into
jmp
pop
div
sub
and
aam
ins
fild
aad
push
retf
(bad)
ret
jmp
sbb
test
retf
pop
es
cs
sub
ja
nop
lods
outs
dec
stos
aas
ja
adc
in
push
dec
aaa
pop
push
inc
mov
push
xlat
out
ror
iret
mov
jg
test
and
iret
mov
and
push
jo
outs
repnz
popa
(bad)
jge
into
les
sub
retf
stc
rcl
sub
sub
sub
mov
(bad)
mov
mov
mov
mov
aam
add
scas
(bad)
sub
idiv
shr
movs
in
into
fsubr
push
je
call
inc
daa
pop
and
in
jmp
addr16
daa
out
ficom
idiv
daa
stos
jne
mov
pop
adc
jmp
sub
dec
push
mov
out
leave
add
inc
mov
xchg
jmp
sub
or
cli
inc
jo
scas
cld
addr16
and
mov
dec
jmp
nop
add
or
mov
jmp
stc
push
add
lfs
push
and
push
push
daa
test
xor
icebp
add
addr16
out
mov
add
add
add
and
ret
inc
scas
adc
push
loopne
iret
mul
adc
push
dec
adc
mov
shr
sar
push
(bad)
mov
jmp
and
stos
mov
mov
xlat
das
(bad)
dec
xchg
add
cmc
inc
test
pop
outs
stos
add
push
push
add
and
inc
add
cmp
mov
jmp
inc
sub
jne
cmps
pop
pop
in
ror
(bad)
pop
add
jg
sbb
scas
addr16
fiadd
daa
add
jmp
dec
or
adc
jmp
adc
mov
inc
inc
jb
sahf
mov
pusha
adc
shl
push
jg
or
push
push
out
aas
xor
jp
out
es
and
adc
aaa
or
push
adc
loopne
out
adc
shr
daa
test
daa
es
stos
push
add
mov
imul
add
jg
sub
int3
nop
mov
retf
adc
push
inc
push
dec
sahf
add
push
test
add
push
rol
pushaw
inc
add
jg
push
shl
(bad)
jmp
add
test
dec
xlat
rol
add
mov
and
test
stos
fs
fdivr
aam
add
rol
jmp
push
daa
test
enter
in
adc
add
cs
xlat
lahf
or
mov
fadd
and
jno
cmps
add
ins
outs
add
inc
fild
iret
mov
sahf
paddw
out
inc
btc
repz
fcmovu
andnps
or
cmp
adc
and
pop
cmp
outs
add
add
add
or
xchg
or
idiv
(bad)
out
mov
in
push
or
pcmpgtd
jl
clc
add
add
je
mov
or
jecxz
clc
mov
(bad)
out
xor
and
add
push
xadd
sbb
ins
mov
jae
addr16
ds
xchg
lock
clts
jg
not
jl
jb
sbb
lods
fwait
popa
repnz
mov
xchg
push
iret
cmps
in
jnp
adc
ud0
out
data16
ja
mov
mov
out
add
cs
out
pop
or
jne
push
jge
loope
(bad)
neg
mov
ja
jbe
in
cmp
pop
push
emms
mov
jo
ss
add
inc
(bad)
jbe
ja
fadd
out
add
int
rep
push
fld
rol
add
movsx
add
mov
int3
ja
add
ret
push
fiadd
frstor
push
ror
out
pop
js
mov
test
add
scas
jno
add
push
shl
aas
push
inc
lds
xor
and
mov
add
adc
add
dec
push
outs
inc
and
and
xchg
(bad)
push
cmps
inc
dec
fmul
adc
sysret
ror
add
mov
push
sti
iret
ror
jb
push
jne
jae
or
aas
add
test
bound
iret
lea
nop
dec
push
cli
test
or
push
push
pop
jmp
loopne
mov
daa
in
inc
mov
inc
int
dec
or
and
jno
stc
pop
mov
dec
(bad)
push
pop
xchg
xor
jmp
mov
pop
push
lods
repz
dec
cmp
sub
test
adc
mov
jbe
sub
sub
inc
fs
lahf
ins
dec
sub
jp
retf
stc
int3
loope
test
mov
push
push
lock
push
mov
int
mov
push
shr
mov
fdiv
jmp
shr
sub
mov
outs
(bad)
mov
ins
jmp
jb
repz
shl
repnz
xor
mov
mov
and
xchg
lahf
in
out
fwait
or
shr
shl
idiv
in
dec
rol
sbb
cmps
jbe
mov
adc
mov
rol
scas
pop
inc
pandn
out
fwait
aas
dec
xlat
rcl
out
mov
mov
mov
fsub
aad
pop
scas
mov
sbb
stc
mov
mov
rcr
stos
or
cmp
mov
iret
(bad)
mov
aad
xchg
out
and
xor
into
jge
movs
(bad)
and
jbe
mov
mov
pop
jmp
ds
jl
xor
into
stos
xor
shl
cmp
mov
mov
mov
push
jo
and
outs
jp
ret
sbb
fs
sub
dec
out
or
rcr
adc
inc
dec
push
scas
and
mov
mov
dec
dec
add
and
pop
ins
jae
je
jae
jo
inc
ja
mov
cs
push
lods
jmp
push
add
cmp
dec
and
(bad)
fidiv
jne
jae
pop
mov
hlt
sub
out
out
mov
push
mov
cmps
cmp
imul
sbb
sbb
push
push
dec
inc
pop
cmps
shr
mov
inc
nop
bound
xor
ins
outs
adc
xchg
add
sahf
cmps
outs
dec
dec
mov
mov
retf
add
push
fcom
ds
sub
sbb
fmul
jmp
pop
mov
test
mov
repnz
div
or
(bad)
out
(bad)
push
imul
mov
mov
inc
retf
fmul
mov
rcr
mov
push
add
rcl
push
jae
(bad)
dec
adc
cmp
or
and
call
(bad)
outs
and
and
(bad)
mov
fcmovb
ficom
fbld
int
xchg
mov
imul
add
icebp
retf
mov
ret
retf
rcl
jle
(bad)
(bad)
and
push
fnsave
and
daa
push
mov
pop
bound
add
rcr
jg
push
dec
push
pop
dec
inc
repnz
sti
sub
dec
add
sar
mov
ins
dec
xor
jo
mov
sbb
cmps
and
jne
sub
ret
dec
jmp
sbb
cmp
out
fcmovbe
stos
mov
(bad)
adc
sub
ins
sbb
pusha
mov
inc
mov
push
je
add
inc
es
daa
add
adc
scas
or
jmp
cwde
clc
mov
push
xor
aaa
test
addr16
ja
push
(bad)
aas
jg
or
mov
out
aad
aas
and
aas
mov
mov
dec
sbb
aas
jnp
int
fwait
das
stos
push
adc
mov
mov
or
mov
ins
outs
pop
xor
inc
and
xor
addr16
lods
daa
pop
sbb
mov
ins
jnp
arpl
push
push
pop
push
or
adc
push
xor
add
int3
dec
xchg
push
out
add
mov
ins
loop
mov
push
xor
inc
push
push
or
fwait
mov
pop
and
sub
push
and
ud0
sub
xor
gs
repnz
inc
and
push
sub
not
sub
mov
push
cli
jns
sub
std
fwait
adc
or
fbld
hlt
push
mov
mov
imul
fiadd
sbb
test
and
mov
mov
test
data16
pop
dec
mov
push
jb
xor
int
push
inc
cmp
pop
cmp
jmp
mov
loopne
add
outs
push
cmc
dec
mov
cwde
pop
and
out
inc
popa
cdq
rcr
and
sbb
bound
in
pusha
fwait
cdq
scas
sub
pop
and
cmp
jae
(bad)
fistp
repz
pushf
mul
or
add
jns
into
scas
pop
pusha
or
outs
push
add
mov
imul
pop
ret
xlat
push
arpl
xchg
dec
arpl
pop
neg
jnp
xchg
ja
mov
or
repz
rol
test
(bad)
or
pushf
jp
or
and
mov
push
int
pop
data16
add
in
sahf
xor
sub
and
or
and
inc
pop
push
jnp
into
or
sbb
and
scas
es
fwait
push
pop
or
outs
pop
outs
push
mov
data16
push
xlat
es
ss
adc
push
inc
retf
mov
loopne
push
stos
pop
btr
sub
sbb
push
cmps
push
mov
lods
outs
jg
push
jl
jmp
push
ror
dec
mov
rol
dec
push
loopne
mov
out
pop
test
nop
cmp
fwait
lods
add
add
add
cmp
repz
repz
test
test
xor
repnz
sbb
pop
mov
pop
aad
push
mov
pop
inc
push
nop
push
sahf
out
sahf
add
sahf
out
push
add
or
jns
out
or
sahf
out
sahf
or
or
jns
pusha
subps
out
sahf
out
adc
sahf
out
sahf
adc
adc
jns
inc
pop
cmp
out
sahf
out
sbb
xor
sub
sub
jns
and
push
and
jns
out
and
adc
or
add
cld
jns
iret
repz
hlt
daa
lock
cmp
repz
sub
sub
iret
repz
sub
sub
sub
cmp
aam
shl
repz
repz
xor
xor
iret
repz
xor
xor
xor
cmp
mov
mov
add
adc
push
addr16
dec
(bad)
mov
or
add
or
adc
adc
push
pop
adc
mov
rol
jbe
ins
outs
jo
adc
sbb
jmp
sbb
sub
and
sub
xor
sub
sub
and
cmp
push
imul
jp
outs
gs
pop
adc
(bad)
and
cmp
sahf
add
sbb
push
cmp
add
mov
and
or
add
sbb
dec
scas
mov
push
sbb
sbb
and
cmp
add
or
or
or
mov
pop
sbb
jns
sbb
or
sub
mov
push
push
sub
sub
in
cmp
daa
and
fiadd
jo
or
jge
jl
add
adc
sbb
and
cwde
push
add
adc
sbb
mov
push
and
and
and
ret
adc
sbb
sbb
sbb
mov
sbb
sbb
sbb
sbb
mov
fidivr
sbb
adc
add
pop
leave
pop
sbb
inc
sbb
and
mov
stc
mov
pop
add
and
ins
fisub
pop
sub
sbb
mov
(bad)
aaa
add
add
pop
imul
and
push
and
sub
xor
pop
jb
add
sbb
in
cs
sub
xor
sub
add
retf
sub
sbb
add
rcr
xor
add
mov
or
xor
sub
cmp
and
pop
sub
xor
cmp
add
push
daa
add
add
ds
or
aaa
cmp
adc
imul
add
adc
cmp
add
sub
cmp
mov
and
add
sbb
inc
pop
jb
push
pop
pop
cli
add
and
ss
sbb
adc
pop
enter
and
nop
pop
pop
sbb
mov
mov
pop
aaa
inc
aaa
add
mov
dec
dec
add
add
mov
dec
or
add
add
xchg
sbb
or
imul
or
dec
sub
pop
repnz
enter
aaa
push
enter
sbb
add
sub
push
or
add
sub
push
xor
or
add
cmp
xchg
stc
push
or
sbb
and
rcr
repz
push
push
push
push
pop
pop
daa
add
xchg
outs
push
and
pop
add
sub
jb
ss
dec
sbb
jns
pop
adc
pop
xor
pop
adc
rcr
sub
sub
pusha
sub
popa
push
add
mov
lods
cdq
jbe
adc
xor
fs
imul
(bad)
adc
sbb
pop
(bad)
inc
xor
push
push
sbb
add
or
add
outs
ss
sub
cmp
adc
xor
je
pusha
xchg
mov
add
jbe
sbb
js
jns
add
push
mov
add
das
add
mov
push
enter
sbb
dec
push
ss
xor
call
add
sbb
xlat
cld
test
or
xchg
scas
push
sbb
pusha
pop
nop
and
pop
add
outs
in
sbb
aaa
in
cmp
xor
sub
mov
xlat
add
and
adc
add
in
add
sbb
(bad)
jle
mov
xchg
or
add
and
xor
cmp
nop
sub
sub
test
adc
leave
inc
jb
daa
cs
sbb
dec
xchg
mov
add
and
pop
cdq
sbb
mov
xor
out
dec
in
sbb
add
push
and
in
add
popf
cmp
add
lahf
sbb
mov
int
test
add
inc
mov
sbb
sbb
movs
push
cmps
adc
fisttp
repnz
sub
or
in
out
add
xor
out
jmp
and
push
pop
(bad)
lds
sbb
aaa
add
and
out
scas
sub
or
add
inc
jle
sbb
sbb
and
add
or
or
in
pusha
ins
dec
mov
sub
and
rcr
mov
das
add
or
cs
outs
stos
pushf
sub
add
or
push
add
push
loop
add
push
add
and
mov
mov
jb
mov
cmp
and
sbb
mov
enter
pop
sub
fwait
inc
sahf
xchg
sub
xor
mov
jbe
add
add
push
aaa
add
add
pop
les
adc
mov
retf
frstor
sub
or
dec
mov
int
(bad)
into
cmp
imul
add
or
scas
sbb
sbb
rol
lods
jns
xor
adc
add
test
es
(bad)
sub
sbb
aaa
add
xlat
or
fs
fdiv
add
push
xor
adc
leave
jae
in
sbb
pop
retf
xchg
cld
pop
sbb
adc
sbb
aaa
sub
jae
adc
adc
or
add
neg
sahf
pop
sbb
fdiv
and
add
add
or
sbb
fbld
sbb
sbb
and
sbb
nop
outs
fwait
add
adc
and
ror
jbe
jecxz
pop
sbb
in
sbb
adc
add
or
sub
add
jmp
arpl
mov
sub
repnz
add
lock
sub
sub
ins
in
sub
add
push
repnz
repz
sub
sbb
pop
enter
add
not
or
or
test
clc
mov
add
sbb
stc
pop
sbb
ss
cmp
or
or
add
sti
and
jb
add
or
sub
aaa
sub
cld
or
std
xor
xor
cmp
call
and
sbb
mov
or
or
inc
scas
add
add
add
add
add
ss
outs
and
and
adc
(bad)
fisubr
or
adc
or
xor
mov
(bad)
fimul
or
push
add
nop
pop
and
fidiv
adc
pop
ror
das
add
add
push
jb
daa
adc
sbb
cs
push
pusha
adc
lods
pop
aaa
or
add
and
pop
ins
sub
xor
push
xor
xchg
pushf
lods
or
and
sbb
push
sbb
and
in
imul
sbb
add
or
add
pop
lods
push
outs
add
and
add
cmp
sub
adc
sbb
add
and
jbe
inc
mov
sub
xor
xor
sub
xor
and
outs
jae
(bad)
sub
sbb
or
add
sub
and
and
pop
adc
sub
sbb
sub
xor
xor
les
ficomp
add
xor
sbb
or
sbb
mov
bound
add
lods
push
push
xchg
sbb
xor
xchg
dec
sub
aaa
inc
jns
popf
sub
cmp
dec
cs
push
cmp
sbb
sbb
cmp
mov
mov
add
add
and
add
xor
fadd
sub
inc
cmps
add
int
cmp
nop
aaa
inc
out
mov
sub
xchg
xor
or
sar
add
(bad)
pop
aaa
or
or
out
shr
pop
std
or
inc
xor
push
and
adc
test
xchg
dec
sbb
jbe
mov
fdiv
push
adc
xor
jne
scas
adc
add
sub
pop
push
ins
xor
xchg
push
push
rcr
(bad)
or
jnp
fimul
and
fimul
adc
push
jb
and
and
je
daa
fsub
pop
in
(bad)
or
sbb
push
aaa
adc
or
jbe
sbb
or
test
js
or
push
xor
or
dec
or
mov
sbb
add
lock
or
add
movntps
sub
(bad)
or
mov
or
push
mov
mov
adc
fstp
shl
or
or
sub
aaa
pop
rcr
adc
push
push
stos
or
xchg
or
or
loopne
mov
adc
or
loop
add
xchg
ret
in
mov
push
sub
mov
cmp
add
ret
or
jbe
add
xor
sbb
or
add
mov
push
repnz
adc
and
push
daa
push
das
call
push
mov
and
mul
mov
xchg
sub
or
adc
aaa
push
adc
int3
or
xor
and
not
fist
adc
and
jmp
xchg
inc
and
sbb
gs
sub
bound
in
lock
gs
into
pop
jmp
or
cs
adc
ret
mov
or
or
mov
sub
push
xchg
sbb
fiadd
sbb
es
ret
xor
stos
sbb
jp
das
push
jmp
jp
pop
pop
pop
or
cvtpi2ps
add
inc
xor
daa
add
popa
out
into
push
sub
or
add
add
push
and
dec
push
xor
sub
push
push
mov
bound
cmp
mov
push
xchg
pop
or
push
ja
stos
sub
sub
and
pop
add
mov
inc
or
pop
or
add
arpl
inc
xor
ficom
jbe
sbb
call
add
or
or
inc
or
pop
arpl
adc
retf
(bad)
jmp
cmp
sub
adc
and
mov
into
pop
(bad)
push
add
pop
sbb
adc
ror
sub
xor
xor
or
ss
jp
test
sub
add
ss
adc
ins
xor
and
mov
push
xor
pusha
and
stos
aaa
bound
or
sub
jmp
push
jbe
arpl
cmp
jbe
add
outs
mov
mov
fidivr
xchg
add
push
and
cs
gs
sub
and
out
xor
jle
dec
add
adc
add
add
push
push
popa
inc
stos
adc
dec
push
sbb
mov
push
pop
xor
mov
jo
or
rcr
and
jle
mov
cmp
(bad)
pop
cli
adc
shr
es
mov
add
add
sbb
or
push
adc
mov
ret
adc
xor
test
pop
popa
cs
sub
ds
rol
sub
or
je
xchg
mov
cmps
or
push
ficomp
call
jb
dec
cs
inc
shr
sub
(bad)
mov
ins
adc
sub
(bad)
push
pop
or
scas
jno
loope
sahf
outs
sub
mov
inc
call
rdmsr
or
sbb
or
push
sbb
push
dec
das
mov
and
mov
xchg
sar
mov
retf
shl
add
add
add
jle
add
jo
cwde
push
retf
xor
shr
fcomp
cwde
imul
mov
sub
sbb
jno
dec
rcl
xchg
push
add
add
push
push
and
jp
and
pop
jae
pop
je
and
(bad)
xor
jle
xor
daa
or
cmp
and
sbb
xchg
shl
sub
aaa
push
jbe
or
push
cs
add
sbb
(bad)
dec
push
(bad)
mov
jmp
inc
stos
add
fimul
(bad)
jnp
xor
sbb
and
mov
adc
push
sub
add
ja
push
shl
aaa
scas
add
dec
mov
or
(bad)
xor
ret
js
jns
jp
jle
dec
clc
fs
out
cs
ss
inc
adc
ds
test
cli
or
sbb
add
jle
not
add
push
sbb
add
mov
test
into
jnp
test
mov
jg
and
xchg
mov
aaa
xor
mov
add
push
mov
xor
jle
cmp
or
sbb
scas
or
test
and
and
sub
pop
cmps
mov
or
add
xchg
push
pushw
xor
or
sbb
retf
push
jecxz
add
push
sub
mov
sbb
sbb
pop
outs
adc
sbb
sbb
or
lock
loop
dec
add
jmp
and
out
xor
mov
adc
xchg
mov
push
or
inc
sub
ins
push
xor
pop
and
cmp
sub
or
or
and
sub
cmp
adc
popa
and
loop
fisub
sub
push
cmp
(bad)
cmp
bound
mov
cmps
ss
mov
dec
xor
into
adc
sbb
cmp
xor
xchg
and
ins
jo
add
mov
pop
push
cli
mov
sbb
outs
sbb
sbb
add
inc
mov
mov
push
rcl
push
sbb
sbb
loope
or
or
and
shl
sbb
push
jmp
fimul
mov
xchg
rol
inc
jbe
xchg
jecxz
mov
sbb
pop
pop
pop
cmp
dec
lea
and
out
outs
scas
mov
cmp
mov
sub
inc
mov
xchg
fidiv
(bad)
mov
loopne
adc
scas
cmp
popa
xor
(bad)
push
or
inc
test
loop
popa
mov
sub
xor
push
mov
mov
add
adc
out
fisubr
jb
or
addr16
iret
add
sbb
mov
popf
mov
and
jne
sahf
mov
sub
sbb
add
sub
pop
cwde
outs
push
dec
repnz
fcmovnb
xchg
adc
sub
mov
scas
xchg
adc
cli
ror
add
(bad)
and
or
out
sbb
add
stos
mov
add
sub
mov
push
daa
pop
adc
add
and
neg
cmp
mov
sahf
sbb
sub
mov
adc
mov
in
xor
pop
sbb
xchg
loopne
push
cwde
dec
cmps
pop
sbb
add
xchg
sub
stos
cmps
lea
push
loop
(bad)
jbe
or
mov
and
ret
add
inc
xchg
cmp
or
or
mov
es
sti
sbb
push
test
adc
(bad)
or
into
jbe
test
push
mov
sbb
cmp
mov
push
(bad)
jmp
cwde
inc
push
ss
loop
ss
mov
bound
adc
push
cdq
retf
and
mov
pop
pusha
cs
jbe
or
mov
mov
mov
or
scas
rcr
cmps
out
cli
into
bound
xchg
and
inc
rol
dec
cmps
push
and
add
or
add
out
xor
adc
push
pop
test
inc
adc
es
pop
push
xor
test
bound
ds
xor
mov
add
jecxz
shl
into
push
dec
pusha
lods
bound
add
(bad)
or
rol
es
aaa
fisubr
ror
stos
xchg
sahf
pop
sub
add
or
into
jecxz
int
mov
push
mov
pop
(bad)
rcr
lahf
pop
sbb
and
sbb
jbe
adc
and
push
sahf
jbe
fcomp
push
sub
sbb
push
mov
add
loopne
push
sbb
push
push
mov
inc
fdiv
cmps
mov
add
dec
or
and
pop
push
sub
xor
and
xchg
pop
scas
xchg
mov
push
xchg
and
pop
mov
out
dec
xor
loope
xor
sub
sahf
push
push
retf
adc
jmp
xor
sbb
loop
push
daa
cmp
call
pop
and
test
or
add
bound
rol
jp
dec
ret
or
movs
add
test
dec
shr
ds
test
bound
adc
mov
repnz
adc
or
mov
push
adc
stos
push
sbb
scas
xor
mov
cld
and
mov
lods
sub
inc
add
inc
sahf
mov
ss
daa
and
into
adc
xor
add
push
push
lods
adc
xor
or
push
stos
jmp
call
jo
test
adc
dec
or
add
push
mov
push
jne
adc
sbb
jmp
out
push
adc
cdq
sbb
sbb
iret
add
adc
and
ror
or
xor
repnz
ss
add
or
or
(bad)
sbb
adc
inc
sbb
ror
dec
and
xchg
xor
or
and
or
add
add
and
inc
sub
push
xchg
ficom
in
add
imul
mov
dec
jo
scas
add
sbb
inc
out
test
cmps
inc
push
sbb
aaa
cmp
cmp
dec
popa
and
mov
mov
and
cwde
and
push
mov
or
push
push
mov
mov
mov
ror
sub
sub
xor
cmp
or
jbe
add
sub
stos
sub
jbe
pop
js
in
mov
or
sub
sub
ret
pop
adc
or
mov
sahf
jbe
sub
retf
add
mov
mov
movs
js
push
jmp
rcl
call
push
mov
mov
jecxz
cli
mov
adc
leave
mov
add
or
adc
cmp
mov
sbb
adc
outs
sub
xchg
push
ret
mov
and
add
inc
cwde
add
xchg
push
sbb
push
cmps
data16
add
jle
jmp
xor
fiadd
pop
mov
xlat
xor
xchg
or
stos
sbb
push
add
(bad)
and
fisub
and
sbb
ss
xor
sub
mov
cmp
sbb
mov
pop
repnz
popa
stos
stos
and
sub
mov
mov
daa
mov
adc
pop
pop
mov
or
bound
sbb
add
push
xchg
call
push
or
sbb
push
test
sahf
sbb
popa
adc
fwait
add
retf
cwde
push
add
bound
stos
add
loopne
push
adc
sbb
es
add
pop
data16
test
(bad)
fimul
or
test
or
cmp
push
cli
shr
pop
lods
xor
or
ror
mov
sub
shl
cdq
pop
cli
xchg
faddp
sbb
ror
xchg
test
stos
or
pop
push
sbb
je
mov
or
lock
jmp
jp
add
or
add
cwde
inc
and
add
and
mov
add
sbb
push
xor
push
push
add
or
les
pop
xor
add
out
mov
add
pusha
and
mov
rcr
sbb
(bad)
xor
add
mov
(bad)
es
sub
add
jo
push
adc
xor
stos
or
or
test
test
push
xor
or
cmc
gs
out
and
pusha
out
xor
xchg
mov
data16
mov
bound
push
sub
lods
jmp
ret
rcl
cwde
push
iret
push
mov
shl
jb
adc
rol
jbe
sbb
ret
(bad)
push
and
push
data16
xchg
sub
pop
xchg
push
add
sbb
retf
inc
in
inc
daa
xchg
jb
mov
cli
adc
mov
adc
cmp
jle
xchg
jle
sub
push
push
pop
ss
pop
sbb
repnz
sub
jle
push
or
dec
cmps
out
mov
adc
or
and
loope
sbb
(bad)
mov
adc
fs
adc
add
out
push
int
push
sub
shl
inc
and
fiadd
and
pop
addr16
data16
xor
cmp
xlat
test
add
xchg
or
push
sbb
inc
icebp
adc
xchg
mov
dec
loopne
(bad)
xchg
sbb
and
push
(bad)
pop
lock
not
add
cmps
adc
imul
push
sbb
repnz
int
(bad)
ds
xchg
sbb
and
add
mov
push
retf
cdq
mov
adc
mov
push
pop
jp
jp
popa
adc
mov
mov
and
pop
sar
cmps
sbb
sahf
or
cmp
(bad)
(bad)
aaa
test
mov
inc
hlt
and
push
es
adc
push
adc
pop
jno
xchg
mov
mul
dec
dec
out
outs
movs
mov
out
test
das
or
fwait
dec
sbb
jg
sub
xchg
ror
mov
push
cmp
or
es
out
adc
and
and
stos
or
pop
add
mov
lods
arpl
push
cmp
jmp
cmps
out
inc
add
fiadd
enter
and
jb
dec
lea
sbb
jb
cdq
test
and
or
add
dec
add
out
mov
push
push
cli
sub
int3
into
sbb
loopne
or
sahf
out
mov
(bad)
cli
mov
inc
xor
scas
jle
adc
jp
adc
out
xchg
sbb
(bad)
pop
adc
mov
sub
pop
add
adc
jmp
das
and
or
ror
cs
test
adc
push
dec
push
or
pop
mov
xor
jbe
mov
mov
inc
push
push
pop
test
xor
mov
push
or
push
push
add
sub
cs
and
jbe
repz
ins
push
repnz
outs
icebp
mov
sub
inc
adc
sahf
and
push
js
mov
sub
fstp
cmps
mov
retf
cdq
jle
jb
stos
or
jmp
data16
adc
cs
shl
pushw
cmps
sbb
push
add
jmp
push
cs
ror
xchg
push
xchg
adc
jb
rol
add
fiadd
cs
pop
jae
call
mov
sbb
cli
div
fild
ret
das
add
xor
mov
retf
mov
and
call
(bad)
push
loop
sub
add
test
scas
mov
sub
push
icebp
mov
frstor
sbb
adc
and
dec
sbb
loopne
shr
stos
add
dec
and
xor
(bad)
xor
push
push
inc
dec
mov
enter
xchg
mov
lods
inc
test
out
ficomp
jbe
(bad)
adc
and
jbe
or
dec
mov
div
or
cmps
add
push
or
mov
out
push
sbb
or
add
jbe
dec
mov
cli
jle
and
jmp
into
push
add
push
jb
and
call
sub
ss
add
xor
push
(bad)
int3
or
sub
cmp
shr
sub
push
and
mov
add
loop
push
push
ret
inc
push
retf
or
push
jle
sahf
mov
dec
adc
jb
out
push
or
(bad)
adc
push
pop
xchg
nop
ss
sub
cwde
test
popa
jp
push
add
xchg
add
xor
xchg
xor
cs
add
out
sbb
jbe
add
neg
loop
push
ss
push
push
mov
pop
fidivr
or
add
stos
push
je
sbb
xchg
jbe
add
cs
inc
sbb
out
popf
into
push
push
and
or
lahf
push
or
ss
sbb
mov
xor
(bad)
or
pushf
and
add
sbb
cmp
push
jmp
add
or
out
rcr
or
shr
je
cmps
add
and
or
and
push
xor
arpl
push
or
jno
or
out
push
in
sbb
fisttp
push
and
jbe
or
test
xor
sbb
retf
xchg
mov
cli
or
test
or
sbb
test
push
or
loop
lods
jnp
add
or
pop
inc
or
in
cmp
push
cs
je
push
or
sbb
cmp
adc
sbb
jecxz
mov
stos
inc
fisub
or
push
jle
add
and
or
and
or
pop
xchg
fiadd
aam
or
add
push
loope
sbb
mov
push
cdq
cmp
or
push
ds
scas
leave
bound
or
inc
push
or
cmp
xor
pop
or
dec
popf
sbb
daa
push
cs
mov
nop
xchg
in
or
or
dec
ss
xlat
popf
push
stc
pop
aaa
or
popf
cmp
dec
into
add
xchg
mov
into
or
xor
sub
push
mov
and
fnstenv
ffree
cmp
or
or
(bad)
fsubr
or
or
or
aaa
sbb
push
pop
or
jmp
or
repnz
push
push
outs
loopne
sahf
or
or
or
xlat
mov
adc
ficom
push
in
xor
imul
shl
or
and
jmp
mov
push
or
pop
xor
mov
call
push
or
es
xchg
push
mov
and
and
push
imul
or
xor
outs
or
and
and
pushf
imul
and
and
pop
and
xchg
push
cmps
(bad)
popf
test
add
jno
xlat
push
or
or
data16
push
cmp
xchg
sbb
xchg
(bad)
or
push
das
daa
mov
add
(bad)
cdq
mov
test
push
mov
or
mov
pop
inc
mov
adc
ins
xor
push
or
adc
cmp
(bad)
movs
jae
or
scas
fsub
xor
push
push
sub
sub
call
mov
push
sahf
aaa
call
outs
icebp
or
mov
adc
cmp
test
add
mov
popf
or
or
mov
into
or
or
xlat
or
cmps
jbe
add
and
or
cmp
sbb
daa
add
xchg
cs
pop
addr16
pop
adc
xchg
in
mov
or
aaa
add
sub
mov
push
jmp
inc
push
adc
pop
push
ret
inc
xchg
test
or
mov
rol
sub
or
push
nop
repnz
add
mov
adc
or
pop
push
pop
mov
mov
or
xchg
mov
and
xor
xor
push
mov
addr16
fisub
push
pop
and
into
test
inc
and
xor
jmp
push
push
aam
shr
mov
mov
add
cmp
mov
pushf
bound
mov
xor
add
mov
sub
daa
test
int3
pop
ss
or
imul
or
and
pop
cdq
add
jle
push
adc
and
sub
and
sahf
adc
push
mov
push
enter
mov
pushf
loop
into
and
sub
sub
jno
loop
or
out
loopne
mov
cmps
add
into
mov
pop
or
mov
adc
or
call
retf
add
adc
cmps
inc
and
pushf
push
out
push
imul
outs
xchg
cs
dec
test
sbb
inc
adc
cmp
push
ret
(bad)
mov
xor
sbb
or
pop
add
pusha
into
mov
push
pop
pop
or
call
or
fsubr
cmps
bound
add
push
sub
add
sub
mov
adc
mov
(bad)
push
push
xchg
(bad)
rol
gs
(bad)
sbb
and
inc
add
mov
push
mov
sbb
or
add
ss
iret
jp
inc
sub
(bad)
or
popa
inc
push
or
cmp
out
rol
jb
mov
ret
imul
xchg
or
ret
sbb
sar
ss
js
rcl
or
es
pop
pop
sbb
jb
repz
jbe
add
dec
(bad)
es
jnp
sub
cmp
xor
outs
pusha
(bad)
jmp
add
ret
sub
add
test
ss
cli
mov
test
sbb
ror
pop
cmp
adc
sub
cmp
dec
jo
nop
xlat
bound
xor
cmps
stos
(bad)
(bad)
mov
call
sbb
push
xor
dec
test
addr16
or
movntq
out
call
or
shl
jne
add
mov
adc
xor
mov
cmovnp
adc
dec
out
dec
push
cmps
pop
cmps
fidiv
ret
jmp
inc
adc
mov
and
xor
xchg
sub
mov
rol
arpl
mov
div
sub
sahf
push
sbb
push
xchg
scas
xor
xor
je
out
add
xchg
das
mov
cmp
push
dec
loope
rol
ret
out
add
loop
loopne
push
dec
push
xlat
sbb
(bad)
div
or
jbe
repz
push
jne
imul
in
out
outs
gs
jne
imul
push
outs
dec
outs
push
and
addr16
push
in
es
adc
aas
pcmpeqw
repz
outs
es
mov
es
pop
gs
repz
mov
jae
jp
repz
repz
push
imul
push
outs
je
data16
imul
outs
jns
pop
arpl
jp
push
or
(bad)
add
dec
outs
xchg
add
cmp
shl
mov
(bad)
pusha
ins
adc
jp
pop
mov
sub
aas
and
push
pop
sub
std
retf
mov
pop
cmpxchg
mov
mov
loope
xlat
mov
idiv
mov
mov
sub
in
mov
cmp
mov
aam
rol
shl
pop
push
pop
push
add
(bad)
(bad)
fnstenv
leave
stc
shl
aaa
push
in
cmps
fucomp
inc
push
cmp
dec
dec
inc
inc
sbb
outs
fcmovnu
ins
aaa
jl
dec
sub
dec
jo
add
xor
in
js
or
xchg
rcr
loope
push
add
repz
pusha
pop
push
dec
repz
repz
cmp
sub
out
cmp
sbb
or
clc
sbb
loopne
ror
jns
out
sar
sahf
out
mov
out
sahf
nop
mov
sahf
out
jo
pusha
pop
push
out
sahf
out
inc
cmp
iret
sar
or
jg
in
cmp
repz
shl
nop
test
fcomip
cmp
inc
xor
adc
mov
jle
cmp
cmp
aam
sar
add
inc
inc
inc
out
sahf
out
inc
inc
dec
dec
sahf
out
sahf
dec
dec
dec
dec
dec
dec
jns
out
push
push
push
push
push
out
sahf
out
push
push
pop
pop
scas
mov
jno
jae
jne
jmp
fwait
jnp
cmp
repz
or
or
or
cmp
repz
or
or
repz
or
add
add
iret
repz
add
add
repz
repz
or
or
repz
or
or
or
ror
repz
or
add
cs
mov
inc
cmp
mov
inc
xor
or
test
aaa
ss
xor
xor
pop
push
fs
arpl
jne
das
xor
pop
cmp
in
dec
cs
mov
mov
pop
aas
sbb
das
xor
daa
mov
cmp
cmp
ss
daa
daa
daa
xor
into
mov
mov
push
push
stos
fwait
mov
ja
push
imul
out
pop
pushf
pushf
pushf
fmul
pop
pop
push
push
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
dec
dec
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
inc
mov
test
fisub
cmp
enter
push
inc
cmp
mov
mov
cwde
or
clc
cmp
push
add
jae
lds
pop
out
cmp
ins
sub
jbe
neg
jl
mov
jo
aas
ja
and
and
mov
loopne
sub
jae
and
fs
outs
outs
sub
xchg
fisub
jae
(bad)
add
div
iret
jnp
into
cmps
push
push
cwde
push
lods
mov
test
pop
jne
xor
jl
xor
dec
inc
jp
add
fidiv
shl
fimul
lea
dec
repz
and
adc
add
sahf
out
ds
mov
loopne
sar
out
clc
mov
jns
out
cmc
jl
fs
out
sahf
repz
repnz
icebp
xor
out
jnp
fisttp
out
fisttp
out
cwde
mov
repz
mov
je
repz
repz
jmp
fucomp
dec
outs
sahf
out
out
push
in
push
in
jecxz
out
sahf
jnp
dec
loope
loopne
repz
clc
mov
in
(bad)
fnsave
repz
fadd
repz
jg
fldcw
(bad)
push
cmps
stc
cmp
xlat
add
fmul
sahf
mov
cwde
shl
jns
out
sar
fs
out
sahf
iret
dec
into
xor
and
out
int3
or
loopne
retf
iret
repz
test
xchg
fdiv
cmp
mov
push
les
pop
sahf
idiv
ror
sar
adc
add
iret
sar
out
cmp
repz
mov
iret
repz
fs
push
mov
mov
out
ds
test
sahf
out
mov
mov
mov
add
ret
mov
sub
retf
dec
sbb
ret
pusha
cwde
add
out
mov
or
das
push
mov
push
(bad)
ror
lahf
dec
mov
(bad)
repz
cmps
out
mov
shr
sub
adc
lods
mov
std
xor
add
cmc
mov
popf
lods
add
mov
retf
add
jnp
retf
jecxz
jbe
cdq
(bad)
into
push
dec
pop
mov
mov
sar
ret
mov
(bad)
mov
mov
sbb
sti
mov
aad
rol
add
adc
shr
arpl
ret
push
test
iret
loopne
enter
rcr
push
or
mov
jae
mov
add
bound
push
leave
call
in
or
sti
xor
mov
cmps
cmp
enter
sbb
cmp
mov
dec
adc
fst
jbe
jg
cmps
adc
mov
sub
inc
je
inc
shl
jo
dec
iret
out
rcl
sub
mov
lds
push
dec
bound
and
xchg
aas
lock
add
cs
add
sub
cmps
repz
push
xor
(bad)
ret
push
push
and
or
mov
outs
mov
jbe
sub
fs
pop
mov
into
daa
shl
daa
(bad)
rcr
scas
pop
jnp
and
aad
in
mov
or
(bad)
inc
or
mov
in
and
push
into
stos
xchg
cmp
push
mov
lahf
ja
mov
cmp
lahf
das
cmps
push
ins
or
int3
stos
mov
das
jg
mov
xor
(bad)
mov
and
pop
push
push
dec
retf
lock
pop
(bad)
into
and
aaa
mov
lods
fadd
bound
leave
in
aas
and
mov
test
gs
int
inc
xor
mov
aas
pop
cmp
inc
mov
test
mov
shr
pop
clc
(bad)
push
test
pop
movnti
and
aam
bound
adc
xor
retf
cwde
sti
pop
mov
mov
mov
lock
add
sbb
stos
mov
mov
xchg
jle
add
in
sti
aas
mov
int3
sub
sbb
sub
mov
lds
out
pop
adc
jmp
std
mov
adc
xor
mov
pop
nop
jecxz
jnp
fdivr
(bad)
outs
int
sub
aas
inc
inc
loopne
(bad)
or
xchg
add
mov
pop
sbb
xor
and
out
cmp
push
jo
ret
fdiv
xor
daa
cs
ret
push
pop
jge
mov
(bad)
dec
idiv
sub
imul
pop
mov
ret
add
mov
int
das
shl
iret
cs
cmovg
daa
into
mov
and
or
cmps
test
push
mov
mov
jg
mov
adc
(bad)
mov
mov
mov
mul
jo
scas
aaa
daa
(bad)
stos
ficom
push
getsec
jne
add
add
xchg
cld
rcl
leave
stos
mov
push
inc
ins
je
ror
push
dec
inc
cmp
les
mov
mov
mov
or
bound
sahf
add
daa
or
lock
mov
dec
adc
daa
mov
or
mov
jmp
or
jne
mov
mov
xlat
test
xor
sar
sub
or
ss
add
xor
(bad)
out
sbb
mov
jbe
retf
cmp
push
pop
fcmovnu
ds
lock
pop
das
out
jnp
imul
jg
add
pop
pop
sahf
out
sahf
pop
pop
pop
pusha
popa
bound
mov
aas
(bad)
out
sahf
out
push
sub
sbb
or
ds
add
mov
int
into
xor
add
enter
in
pop
jl
jmp
mov
add
in
test
mov
sub
dec
iret
scas
sbb
fmul
mov
adc
adc
and
inc
sbb
mov
outs
iret
push
inc
mov
addr16
cmp
pop
(bad)
retf
pop
pop
mov
xchg
cmps
mov
mov
mov
xchg
dec
(bad)
add
test
movups
xchg
jo
mov
test
and
xchg
call
add
push
js
jmp
lar
and
adc
lods
imul
push
push
pop
xor
dec
pop
loopne
inc
push
pop
xlat
sub
scas
cmp
pusha
pop
xor
sub
fcomp
and
add
scas
nop
adc
push
or
imul
aaa
inc
pop
pusha
ds
nop
outs
sbb
ltr
pop
cs
jg
mov
leave
out
mov
in
bswap
ror
xchg
enter
loopne
mov
ret
into
mov
xlat
iret
mov
clc
mov
mov
inc
push
(bad)
(bad)
(bad)
jg
in
pop
outs
ds
fmul
mov
jnp
out
jp
pop
shufps
or
rcr
or
pop
outs
iret
mov
mov
rol
mov
fidivr
cs
mov
imul
jg
outs
addr16
and
into
jmp
fs
add
or
push
call
pop
cdq
stos
add
cs
call
and
inc
dec
inc
dec
add
cs
inc
jl
push
outs
mov
add
and
iret
retf
adc
js
scas
push
arpl
adc
sub
cmp
add
xchg
jnp
nop
fmul
adc
mov
dec
mov
sub
ins
ins
dec
aaa
pop
add
and
or
push
fmul
leave
rcl
je
sbb
fwait
dec
xchg
inc
jo
lock
pop
push
pop
push
push
in
call
push
jl
outs
aaa
jns
ins
sbb
rcl
dec
js
jo
daa
in
nop
int
cwde
nop
cwde
test
cdq
jge
sbb
xchg
mov
mov
or
and
mov
xchg
dec
adc
int
mov
daa
clc
xchg
lock
cdq
nop
xchg
call
xchg
out
aam
int3
les
test
cmp
nop
push
jo
add
push
dec
jns
popf
out
inc
adc
add
add
out
dec
repnz
mov
push
out
out
dec
push
inc
push
xor
fs
and
add
cld
xchg
aam
or
push
push
(bad)
not
fidiv
repnz
cli
daa
jle
mov
out
mov
int3
loop
and
enter
daa
add
mov
lods
int3
cmc
jae
add
test
jbe
push
das
cmps
add
mov
mov
pop
sbb
or
outs
ficom
add
xor
and
mov
xchg
pop
ret
out
repnz
test
xor
fs
cld
xchg
and
xor
hlt
rcl
data16
stos
aad
jg
daa
inc
test
mov
shl
mov
stos
xlat
aam
mov
or
loopne
mov
jmp
lea
mov
lods
call
(bad)
mov
mov
mov
mov
out
mul
add
dec
data16
imul
jbe
dec
jo
xchg
xlat
out
mov
es
dec
(bad)
adc
imul
lock
out
push
push
jp
sub
and
adc
and
fsubp
push
add
pop
or
mov
jae
outs
sub
push
pop
jbe
inc
sub
das
hlt
cmp
mov
push
data16
xor
imul
and
mov
add
aaa
test
or
sub
mov
outs
mov
and
in
jle
(bad)
jo
cmps
(bad)
scas
push
xchg
mov
jmp
mov
shr
shr
adc
xor
jae
and
pop
mov
mov
(bad)
mov
(bad)
lods
fnstsw
sub
mov
mov
adc
repz
mov
jb
pop
mov
ds
or
adc
push
cld
outs
mov
mov
dec
rol
sub
mov
mov
arpl
push
iret
xchg
dec
jae
out
mov
jmp
pop
pusha
popa
or
rcl
add
cmp
dec
test
push
or
stos
mov
xchg
sub
mov
and
xlat
xor
(bad)
iret
aas
cmps
fbld
fiadd
out
inc
adc
mov
int
mov
mov
adc
cmps
int
not
sub
out
fcmovbe
stos
xlat
inc
or
and
or
mov
in
int
and
xlat
mov
(bad)
fdivr
pop
mov
iret
push
push
ret
push
jmp
cdq
(bad)
push
mov
vpsubq
cmps
out
pop
inc
fs
stos
xchg
pop
push
mov
mov
mov
jo
push
daa
add
jb
mov
push
add
mov
sbb
pop
pushf
loope
sub
xchg
int
push
aas
push
ret
bound
mov
add
push
rcl
cwde
adc
adc
fmul
or
ficom
and
sub
and
adc
jmp
inc
lds
or
mov
xchg
ret
sbb
push
inc
cmp
in
and
fwait
out
pop
xlat
imul
ficom
cmps
adc
cs
pop
push
xchg
(bad)
mov
or
into
loop
xchg
jno
lods
fnstcw
pop
push
shr
jae
loopne
mov
iret
ret
mov
dec
adc
cmp
and
loopne
arpl
gs
pop
pop
mov
or
add
push
fst
cwde
(bad)
sbb
xchg
pop
xor
pop
ins
popf
pop
mov
into
sub
inc
fisttp
out
or
mov
or
adc
add
pop
xchg
adc
pop
adc
ss
shr
add
(bad)
dec
in
jo
sub
adc
bound
pop
sbb
in
jo
sbb
imul
add
fisttp
in
cmp
ss
outs
mov
je
sbb
popa
data16
sahf
movs
aaa
outs
(bad)
inc
jbe
push
gs
jne
(bad)
jo
stos
es
xlat
popa
jae
iret
jecxz
add
or
(bad)
pop
add
add
adc
or
add
xor
call
aam
mov
pusha
mov
cmp
add
nop
jl
pushf
pop
jb
or
repnz
pusha
push
ficom
mov
dec
pop
cmp
xchg
imul
pop
scas
jns
mov
pop
jp
daa
push
push
adc
ins
and
and
dec
xor
xor
and
xor
and
lods
add
test
add
pop
pop
pop
inc
call
iret
cmp
and
les
jns
dec
ins
add
dec
inc
pusha
mov
sbb
and
in
push
das
add
xchg
imul
ins
aas
cmps
loop
dec
mov
aas
scas
aas
mov
shl
aas
out
mov
mov
aas
aas
das
ins
dec
sub
das
or
pop
add
das
es
fiadd
mov
xchg
mov
pop
outs
push
retf
nop
fidiv
das
pop
arpl
pop
add
push
jnp
das
xlat
pop
jno
xor
mov
xor
or
adc
xor
adc
push
ja
push
int3
sub
add
das
sbb
sahf
push
dec
pop
pusha
pop
push
or
sbb
(bad)
pop
push
jb
outs
xor
dec
adc
and
adc
push
inc
push
inc
jg
and
dec
and
or
push
imul
jmp
(bad)
lock
add
comiss
inc
dec
dec
dec
xor
mov
aaa
dec
inc
je
sub
push
addr16
sbb
add
sar
cmp
and
aas
pop
and
cmp
dec
inc
lahf
aas
fisubr
inc
inc
push
inc
fwait
loopne
int
dec
adc
adc
hlt
pusha
inc
bound
inc
iret
jg
xchg
(bad)
andnps
jo
add
imul
jmp
sbb
test
sub
stos
loop
das
and
fimul
inc
push
add
xlat
aas
push
sbb
inc
aas
aas
js
adc
aaa
mov
out
outs
(bad)
daa
adc
sub
pop
add
or
enter
ins
fidiv
mov
and
in
ins
dec
stos
adc
xchg
adc
pop
test
pop
call
outs
sub
push
mov
nop
xlat
pop
dec
mov
mov
pop
gs
aas
dec
loopne
lock
outs
push
xchg
push
dec
pusha
vsqrtss
sbb
mov
push
xor
inc
retf
or
xor
pop
inc
sahf
and
push
jbe
lds
push
fdiv
sub
cwde
rcl
and
push
adc
mov
aas
mov
iret
dec
and
fisttp
or
jo
aas
jmp
arpl
outs
ret
mov
adc
call
add
pop
add
rol
dec
pop
sbb
movs
jo
push
lahf
push
or
aas
das
xchg
push
pop
test
pusha
scas
(bad)
das
cmp
mov
dec
push
gs
loopne
les
jo
xchg
gs
call
add
pop
sbb
mov
xchg
add
stos
jmp
mov
(bad)
jo
mov
add
adc
pop
push
mov
add
movs
add
push
mov
dec
inc
cmp
cmp
repz
inc
inc
jbe
jae
fisub
lahf
aas
test
das
mov
lahf
bound
lahf
fld
mov
xor
lahf
ins
mov
adc
mov
sbb
push
rol
fistp
push
dec
outs
mov
jns
mov
push
sbb
pop
dec
mov
push
pop
sub
pop
jge
lods
sub
jo
aas
and
sahf
out
push
push
jo
(bad)
adc
ins
pop
movups
pop
push
dec
dec
aas
xor
xor
das
jecxz
and
dec
pushf
adc
aaa
xor
mov
push
dec
sub
popf
iret
push
pop
xor
aas
outs
mov
add
or
fcomi
imul
jae
cmps
dec
ins
add
push
add
aas
jo
rcl
int
cmp
mov
(bad)
into
mov
add
aas
cld
(bad)
cld
pop
lock
(bad)
aas
aas
pop
lods
jbe
adc
add
sub
or
mov
punpcklwd
adc
int3
push
es
aas
add
and
push
inc
cs
mov
cmp
(bad)
pop
dec
pop
jg
add
outs
aas
push
dec
iret
xor
es
fdivr
repz
aam
enter
iret
repz
iret
repz
mov
iret
repz
ins
push
fdivp
pop
push
pop
dec
inc
cmp
repz
xor
sub
adc
add
es
in
leave
repz
jp
aas
add
push
add
jns
fild
(bad)
sbb
sahf
push
or
or
mov
or
or
fisttp
imul
daa
adc
adc
mov
xor
in
jbe
push
addr16
das
push
xorps
pop
imul
push
and
mov
out
jb
pop
and
mov
or
pop
popf
pushf
cmp
xchg
sub
cmp
into
aas
xlat
fsub
xchg
aaa
pop
sbb
add
add
outs
cmp
aas
shl
and
cmps
fisttp
mov
pop
sbb
mov
or
cmovo
pop
mov
pop
inc
mov
iret
mov
inc
(bad)
sbb
in
call
adc
push
aas
and
ficomp
pop
fisubr
xor
fcomp
loopne
popf
ret
mov
jle
ror
sbb
add
lea
leave
and
nop
and
xchg
xchg
dec
pop
jno
add
js
lsl
push
or
inc
pop
jbe
mov
sub
or
xor
dec
or
cmp
out
adc
sub
mov
iret
repz
mov
push
sbb
sbb
sub
mov
out
js
jns
jp
imul
push
in
mov
add
adc
jg
fsub
jno
or
ss
or
and
not
pop
test
stc
inc
les
push
adc
stos
xchg
add
xor
xor
or
mov
push
mov
pop
push
repz
jns
fs
push
pusha
sbb
cmp
sbb
adc
repz
cmp
xor
repz
repz
and
sbb
iret
repz
adc
jae
repz
or
push
or
sahf
out
call
iret
repz
outs
loopne
push
sbb
push
cmp
repz
pop
shl
loopne
iret
repz
or
(bad)
cmp
jbe
mov
daa
push
mov
sub
mov
mov
pop
outs
ret
shl
(bad)
sub
fist
div
mov
jg
or
call
iret
stos
mov
mov
repz
stc
(bad)
sbb
jns
dec
outs
jae
out
sahf
out
mov
fdivp
iret
repz
adc
pop
xor
push
push
iret
repz
xchg
mov
aad
call
es
jns
out
pop
jns
sahf
int
jns
mov
fdivrp
add
sbb
and
outs
xor
iret
repz
stos
push
cmps
iret
cli
adc
sub
dec
fistp
aas
mov
pop
sub
(bad)
lock
cmps
add
and
pop
mov
in
mov
sbb
dec
push
add
add
ins
jg
add
push
xor
daa
cmps
inc
push
add
shr
pop
fdiv
lock
stos
push
icebp
pop
add
js
mov
inc
sbb
sub
inc
push
inc
pop
stc
addr16
add
or
jns
pop
xor
cmp
push
push
push
inc
push
fs
test
sbb
data16
pop
popf
and
pop
jno
bound
(bad)
jns
add
push
pop
ja
out
sahf
xchg
mov
repnz
das
jo
lock
ins
loope
pop
adc
jmp
pop
pop
sbb
inc
outs
les
pxor
and
cmp
pop
repnz
jns
add
or
repnz
push
ret
mov
adc
jl
push
and
sbb
jg
in
int3
into
sbb
ror
and
sahf
mov
sub
mov
in
mov
jmp
(bad)
(bad)
inc
xchg
inc
push
add
inc
stc
mov
adc
mov
jmp
add
in
dec
pop
js
inc
outs
(bad)
loopne
jmp
(bad)
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
(bad)
(bad)
dec
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
pop
xor
jmp
(bad)
xchg
push
cmps
scas
mov
or
(bad)
mov
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
dec
pop
pop
call
lock
mov
popa
sar
mov
(bad)
(bad)
dec
stc
(bad)
xchg
clc
repz
mov
sub
fwait
xchg
and
xor
int
add
(bad)
(bad)
out
(bad)
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
shr
(bad)
call
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
(bad)
(bad)
dec
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
cmp
popa
mov
popa
push
pop
sar
jl
mov
das
lea
mov
inc
inc
(bad)
(bad)
(bad)
jg
movs
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
(bad)
fisttp
add
jp
and
cmp
(bad)
jmp
mov
cmp
std
xlat
cmp
data16
(bad)
(bad)
call
mov
jecxz
cmps
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
(bad)
(bad)
jmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
call
dec
mov
movs
rcr
jge
call
(bad)
call
xchg
cmp
push
and
dec
dec
gs
std
or
pop
ficomp
cmp
enter
fmul
add
mov
add
fild
aas
inc
xchg
add
loopne
add
lock
dec
add
dec
adc
xchg
imul
loopne
add
fwait
dec
adc
je
popf
dec
adc
(bad)
hlt
fimul
push
add
scas
adc
push
adc
xchg
add
add
js
xchg
pop
add
das
sbb
xor
add
jns
arpl
jp
cmp
add
ss
jl
(bad)
into
jge
jmp
cmp
push
jl
xor
add
jg
retf
call
cmp
or
jle
xchg
dec
mov
sub
push
add
jbe
enter
aas
adc
add
adc
out
jb
push
push
adc
dec
not
call
mov
push
push
imul
mov
addr16
pop
inc
(bad)
or
pop
xor
sbb
sbb
popa
adc
mov
ins
push
mov
inc
retf
lock
inc
push
and
mov
push
dec
xchg
lahf
aas
cdq
xchg
add
ins
add
pop
ss
cmp
add
daa
adc
sbb
sub
sub
cld
sbb
add
sub
es
mov
sub
loop
lods
cs
inc
sar
icebp
das
bound
inc
xor
dec
fisttp
ins
add
sub
push
xor
mov
(bad)
xor
add
cmc
fist
rcr
dec
add
inc
shl
add
cmp
push
pop
push
push
or
and
and
adc
inc
mov
in
inc
push
push
sbb
or
or
shl
push
jo
jo
or
inc
aaa
dec
sti
mov
mov
dec
cmp
test
int
sub
dec
mul
dec
shl
push
repz
push
xor
sbb
push
test
push
aas
bound
and
ds
test
xchg
fcomip
loopne
loopne
adc
mov
mov
mov
shl
int
(bad)
(bad)
ins
lods
stos
pusha
inc
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
inc
retf
sbb
push
rcr
and
inc
and
push
cmp
mov
int3
imul
inc
push
push
push
pop
inc
xor
sbb
pop
sbb
dec
pop
inc
lahf
pop
mov
nop
push
pop
dec
xor
push
adc
dec
aas
add
add
xor
xor
or
cs
ja
inc
add
dec
push
jbe
dec
test
add
inc
mov
cld
cs
add
mov
popa
data16
and
int3
fiadd
and
xor
jg
add
daa
dec
dec
pop
mov
push
pop
push
sbb
dec
push
push
inc
or
push
in
and
push
inc
inc
dec
adc
test
push
pop
inc
dec
shl
and
push
sub
pop
pop
fcom
or
and
cmp
inc
(bad)
dec
sbb
push
sub
and
not
sbb
inc
dec
inc
push
inc
inc
inc
sub
repz
and
jo
ins
popa
mov
pop
jo
sub
xor
imul
outs
fs
das
outs
inc
arpl
ss
ins
arpl
pop
push
and
add
ret
and
in
and
outs
jne
xchg
jne
xchg
sbb
add
imul
test
movs
add
push
jnp
fdivp
das
aas
enter
add
add
jns
inc
push
data16
jg
cmp
out
div
jg
jl
js
jo
jl
movs
fwait
add
std
push
clc
lock
jnp
fchs
aas
mov
sbb
(bad)
(bad)
mov
cld
ret
test
(bad)
adc
sbb
mov
cmp
cdq
pop
jns
ja
nop
add
add
add
add
cmp
sbb
push
jnp
push
mov
and
mov
out
sahf
xlat
mov
pop
pop
sub
push
or
cmp
xor
add
ins
sbb
add
(bad)
cmp
ret
sub
clc
outs
add
lock
jns
mov
add
(bad)
ss
pop
jg
out
es
cwde
or
call
adc
sbb
push
repnz
cld
shr
add
repz
adc
cmp
pop
cmp
push
repz
push
dec
push
(bad)
rcr
xchg
stc
inc
popw
add
push
sar
daa
mov
lock
push
add
mov
adc
cld
pop
ret
aad
adc
iret
dec
scas
aaa
or
out
and
mov
ins
mov
add
test
push
leave
dec
test
jnp
sbb
fs
rcr
sub
fwait
int
add
add
ds
pushw
pop
js
xchg
push
add
mov
sub
xchg
sbb
cs
cmps
or
add
out
out
add
in
in
out
cmc
lock
add
add
div
lock
repz
enter
clc
clc
stc
stc
adc
add
std
cli
cli
(bad)
sti
sti
movs
inc
mov
mov
das
fmul
(bad)
(bad)
mov
sar
hlt
in
in
dec
gs
add
inc
leave
into
retf
ret
jmp
aaa
sahf
nop
(bad)
and
jbe
mov
mov
dec
bound
inc
rol
mov
aaa
aas
rol
mov
cld
sti
div
loopne
(bad)
hlt
icebp
in
in
in
int
fcmove
retf
add
call
ret
fadd
stc
out
out
jmp
xlat
jecxz
iret
add
outs
cld
div
fcmovnb
mov
jecxz
outs
pusha
add
adc
add
or
pop
in
(bad)
repz
jmp
and
sbb
lods
mov
inc
mov
jo
push
add
dec
aam
mov
outs
jmp
xor
loop
outs
push
jo
aaa
call
jmp
add
pusha
mov
outs
push
push
nop
add
and
jmp
outs
inc
cmps
adc
or
sub
pop
inc
jno
call
fs
mov
outs
inc
add
lods
aaa
imul
in
add
pop
push
push
shl
fbstp
jno
and
fbstp
and
dec
aam
mov
add
sahf
in
lock
jmp
and
dec
mov
test
mov
lahf
aaa
adc
nop
add
mov
and
aaa
sahf
add
lea
mov
add
push
repnz
xchg
aas
in
out
pusha
pop
and
mov
sub
adc
inc
test
nop
or
add
into
fadd
and
(bad)
fcmovbe
add
sbb
fninit
fsub
dec
and
frstor
(bad)
pop
xor
mov
xor
adc
inc
or
mov
gs
sub
mov
aas
inc
pop
adc
add
jl
xchg
nop
scas
ss
adc
repnz
loope
fstp
fimul
or
mov
(bad)
cmp
(bad)
stc
div
add
les
push
add
sbb
retf
add
cmc
mov
push
(bad)
shr
shr
pop
or
pop
and
aas
add
adc
movs
mov
(bad)
stc
cmc
hlt
stc
hlt
cmc
or
hlt
clc
sub
add
gs
dec
pop
or
cmc
lahf
or
push
mov
cmc
inc
das
mov
xchg
jmp
inc
sub
retf
push
or
enter
inc
rcl
xchg
mov
mov
sti
adc
out
call
pop
fiadd
and
add
les
lods
adc
in
in
pop
push
inc
sub
lahf
cmp
dec
sub
jnp
or
or
add
outs
push
call
retf
xor
call
sub
repz
fcomi
pop
repnz
call
push
bound
das
and
ins
mov
xchg
dec
pop
(bad)
or
or
adc
popa
fwait
and
call
cdq
ins
and
xor
aad
add
or
push
sbb
pop
das
lahf
movs
xchg
and
test
pop
das
add
fistp
or
add
into
fdivr
fst
or
int3
add
xchg
out
int
ficom
int3
pop
push
retf
adc
outs
cmp
retf
pop
ja
pop
mov
(bad)
fadd
jnp
or
push
add
bound
call
lods
add
pushf
inc
enter
add
xchg
push
add
retf
nop
(bad)
mov
sub
cmc
outs
dec
sub
pop
call
(bad)
fisubr
mov
ds
pop
fmul
int
(bad)
retf
xor
aaa
push
add
aam
(bad)
mov
and
cmc
mov
test
mov
pop
or
pop
and
aas
inc
adc
adc
or
xchg
fwait
(bad)
lea
lods
push
pop
das
aas
push
push
sub
and
pop
dec
cmp
or
and
mov
adc
add
mov
repnz
or
sub
out
lock
and
mov
jmp
mov
mov
out
mov
in
fcomp
add
sub
loopne
jns
fstp
add
sahf
js
pop
leave
or
sub
sub
push
sub
cmp
sbb
push
pop
pusha
mov
inc
adc
xor
pusha
dec
add
jge
aam
retf
add
iret
iret
shl
ret
sar
mov
shl
fiadd
data16
int
xchg
in
sbb
aam
lds
jnp
(bad)
push
xchg
mov
pusha
dec
lahf
aam
fadd
dec
pop
sahf
ficom
addr16
ror
iret
movs
out
add
fmul
jnp
iret
jge
pop
add
xchg
ja
xchg
jnp
sub
mov
in
test
and
mov
sbb
pusha
push
pop
addr16
or
and
fadd
inc
sub
lahf
iret
add
ja
pushf
test
cdq
loop
shl
add
test
addr16
pop
push
leave
fwait
pop
pusha
xchg
jg
addr16
ds
mov
and
sub
pop
shl
shl
pop
add
sbb
add
sbb
data16
sub
sbb
pop
addr16
add
pop
outs
add
xchg
and
rcr
add
dec
push
fdiv
sub
mov
rcr
fndisi(8087
loope
leave
iret
sbb
in
cmp
jnp
jnp
and
pop
popf
jl
add
or
pop
mov
addr16
xor
or
data16
inc
add
ss
ins
jle
push
mov
(bad)
and
jb
test
arpl
fnstenv
lods
xchg
and
idiv
add
add
test
mov
jle
(bad)
jge
jns
xchg
add
add
cwde
js
push
loopne
das
add
dec
xor
jle
push
or
sub
jle
in
sub
addr16
shr
jno
add
jmp
mov
push
adc
aas
add
jae
dec
popa
sahf
test
add
shl
jo
mov
outs
in
or
xchg
jbe
add
dec
jmp
xor
mov
ror
and
loopne
add
ins
adc
push
sar
lsl
and
fnstcw
add
pop
in
sahf
adc
repz
adc
mov
or
retf
iret
das
addr16
add
add
jb
sub
pusha
repz
and
jb
add
jns
sub
sbb
push
iret
push
ror
xchg
test
add
aad
inc
add
repz
pop
and
inc
xchg
addr16
pusha
xor
addr16
enter
aaa
retf
dec
in
xchg
sbb
add
(bad)
fsub
push
retf
mov
test
mov
add
test
sbb
dec
add
add
mov
push
adc
inc
ss
mov
adc
push
or
push
mov
push
or
sbb
add
cmp
outs
add
leave
loop
stc
sub
int3
in
call
(bad)
mov
jnp
mov
stc
sub
mov
add
in
push
and
js
mov
and
popf
call
push
add
cmp
jnp
mov
pop
cmp
pop
mov
dec
sbb
mov
sti
pop
daa
pop
or
mov
add
mov
add
adc
bound
or
iret
sub
iret
dec
jns
add
jmp
adc
fld1
fld
call
mov
bound
and
mov
adc
(bad)
jmp
pusha
(bad)
push
mov
ja
adc
mov
shl
ret
push
cmp
add
jle
push
and
xchg
sub
out
cwde
pop
mov
imul
ss
mov
and
sbb
sub
jmp
and
push
rcl
jle
add
and
mov
mov
push
add
scas
into
mov
adc
and
out
cwde
mov
mov
mov
and
mov
mov
ins
mov
jmp
push
in
jbe
and
sbb
or
ss
and
add
mov
jbe
(bad)
stos
int3
mov
aaa
sub
add
enter
scas
add
daa
sub
movs
enter
fmul
pop
inc
out
push
adc
cwde
xchg
in
add
push
bound
mov
jmp
lods
jmp
(bad)
(bad)
shl
adc
mov
or
inc
inc
push
iret
add
jnp
test
add
xchg
push
or
lea
mov
rcl
popf
adc
dec
add
mov
cwde
xchg
shr
jmp
push
ins
and
jbe
dec
dec
xor
and
sbb
fmul
push
rcl
and
add
jl
jp
inc
ret
shl
mov
lds
cli
ja
js
ds
ja
mov
les
mov
jmp
and
xchg
pop
add
popa
mov
and
dec
or
pop
ja
dec
and
or
lds
jecxz
add
daa
test
mov
xor
neg
mov
jmp
and
jmp
and
dec
sub
pop
mov
xchg
push
xchg
add
and
mov
stos
mov
test
dec
pop
xchg
or
mov
cwde
jle
add
inc
jmp
adc
shl
and
dec
push
stos
nop
bound
mov
mov
and
mov
out
mov
jmp
adc
mov
push
pop
push
pusha
xor
mov
mov
pop
xchg
adc
add
jge
mov
mov
xor
sub
add
ja
xchg
mov
sub
jmp
and
jmp
and
fs
pop
gs
lea
pop
test
add
sbb
lods
cmps
addr16
sbb
or
mov
pop
push
enter
not
mov
add
jmp
and
jmp
and
shl
sub
ins
iret
test
mov
pop
(bad)
in
int
adc
add
mov
icebp
out
rol
pop
add
fcmove
add
das
xchg
adc
push
mov
and
add
push
mov
push
add
xchg
in
call
(bad)
popa
enter
mov
jmp
and
(bad)
(bad)
jg
jge
jmp
xchg
dec
in
lahf
pop
(bad)
mov
fidivr
ffree
cmps
ffreep
lods
(bad)
fbld
in
lds
mov
lock
add
mov
cdq
xchg
test
mov
nop
pushf
test
rcr
sbb
or
test
rol
mov
xchg
xor
sbb
mov
shr
push
xchg
dec
ror
or
mov
xchg
fs
xchg
outs
retf
mov
lock
lahf
cmp
js
jmp
in
mov
dec
test
and
ret
ret
stos
sub
and
add
cmp
lock
add
add
call
cmps
mov
nop
pushf
test
xor
mov
and
cmp
mov
shr
push
xchg
and
or
sbb
nop
pushf
test
xor
mov
and
aas
sbb
mov
xchg
ins
jmp
mov
add
iret
movs
jg
and
call
stos
mov
mov
call
xchg
inc
(bad)
out
xor
add
mov
in
lods
jp
jnp
out
xchg
lods
mov
(bad)
jmp
sbb
out
loopne
dec
cs
aas
out
loope
out
in
frstpm(287
fstp
jmp
push
add
and
movs
lahf
pushf
stos
cmps
mov
mov
test
pushf
adc
rcr
xor
sbb
shl
rcr
enter
xchg
pushf
scas
int
xchg
sbb
sbb
inc
sbb
or
sbb
js
shl
pushf
test
rcl
or
xchg
add
and
movs
jle
loop
cmps
push
jnp
push
adc
push
add
pop
in
mov
(bad)
cmp
add
mov
icebp
mov
leave
call
(bad)
fucomip
out
mov
push
jmp
(bad)
jmp
pop
push
sbb
add
popa
(bad)
cmp
rol
sbb
stos
movs
mov
adc
mov
scas
sar
cmps
mov
or
and
sbb
nop
pushf
test
inc
add
rcl
inc
add
or
mov
icebp
ret
loope
enter
cmp
pop
xchg
push
pop
sbb
shl
nop
pushf
test
push
or
mov
sub
sbb
pop
aam
add
lea
shl
out
add
cmp
mov
pop
jg
mov
out
lods
outs
add
lock
ja
jecxz
xor
ja
mov
icebp
mov
pop
(bad)
xchg
imul
nop
jg
fwait
jae
leave
mov
retf
mov
int
in
mov
mov
pop
popa
sub
(bad)
or
pop
mov
lods
inc
in
add
js
mov
mov
mov
and
ja
mov
mov
ret
add
shr
adc
push
pop
adc
push
sub
popa
lock
in
xchg
test
ret
or
fucom
std
adc
cmp
xor
nop
jecxz
cmp
pop
or
shl
shl
sbb
popa
xor
or
pop
xor
add
mul
xchg
sbb
mov
movs
fidivr
movs
gs
add
or
imul
lods
jnp
add
mov
jo
retf
xor
and
outs
xchg
sti
add
in
mov
lock
mov
xor
idiv
cmp
and
add
sbb
mov
cmc
adc
loopne
inc
pusha
aas
imul
or
in
lods
shl
adc
aas
or
mov
imul
xor
mov
shl
or
rol
aas
mov
adc
repz
sbb
and
(bad)
in
or
loope
adc
aas
imul
outs
nop
cmp
fsub
jnp
or
bound
xchg
cmp
xor
jmp
add
mov
mov
push
iret
add
or
daa
push
cmp
js
fcmove
add
add
jmp
mov
pop
fldcw
xor
ror
mov
jecxz
sbb
pusha
test
add
enter
inc
mov
and
pop
pop
or
mov
test
add
or
adc
inc
push
fnstenv
(bad)
imul
push
or
jecxz
adc
inc
imul
pop
test
or
or
jmp
adc
xor
xor
and
add
out
add
stos
outs
jl
or
in
nop
inc
jmp
icebp
add
sbb
adc
(bad)
xlat
mov
add
sti
add
jg
and
pop
sahf
cwde
xchg
mov
push
cs
out
or
dec
add
mov
out
push
lods
mov
mov
in
push
xor
retf
sub
popa
ins
add
adc
cmp
adc
add
push
inc
push
pop
pop
sub
pusha
adc
sbb
add
or
lock
imul
adc
cdq
hlt
ret
call
pop
lock
xchg
mov
adc
mov
stos
mov
retf
pop
pop
xchg
fadd
sub
sbb
push
hlt
sbb
xchg
test
sub
cmps
pmulhuw
cmp
jo
pop
push
sub
xchg
arpl
xlat
or
add
inc
clc
rcr
leave
mov
mov
xlat
or
mov
mov
add
stos
jns
pop
add
aas
loopne
mov
nop
add
mov
jmp
adc
xor
mov
enter
int
mov
adc
adc
sbb
xchg
sub
pop
inc
jg
or
sub
add
leave
mov
cld
mov
cmps
cmc
iret
stos
test
pop
adc
sbb
jg
add
(bad)
mov
add
jb
mov
retf
int
ror
into
aam
rcr
jl
push
and
xor
test
rcl
or
rol
mov
or
jg
or
cmp
test
pusha
sbb
rcl
add
add
inc
and
imul
or
or
aas
add
retf
cmp
push
lock
test
add
neg
mov
xchg
out
or
mov
leave
ror
int
in
arpl
cmp
aad
rol
fcom
fist
jp
(bad)
pop
xlat
push
add
test
rol
push
or
in
adc
xor
xchg
bound
or
sbb
or
popa
add
fscale
adc
loope
mov
cli
test
jge
pop
in
xchg
dec
pop
jno
mov
div
loope
mov
not
mov
add
outs
ja
or
retf
mov
xchg
clc
add
push
(bad)
(bad)
out
lock
jno
jmp
and
test
(bad)
fsub
loopne
jecxz
loope
sbb
aad
xchg
test
mov
mov
fyl2x
mov
popa
sbb
mov
cmp
arpl
call
push
mov
fyl2x
loope
and
daa
cmp
sbb
mov
mov
fistp
aad
fisubr
xchg
cmp
loopne
pushf
inc
jle
clc
in
mul
shl
in
test
loopne
out
repnz
xchg
mov
stos
loopne
fstp
sbb
jbe
jo
cmp
in
jo
into
inc
out
add
(bad)
shl
push
nop
pushf
sub
inc
sub
cmp
sbb
popa
add
push
pop
sbb
mov
sbb
addr16
pushf
or
inc
nop
scas
int
ucomiss
or
popa
sbb
adc
sbb
mov
(bad)
fmul
jnp
adc
add
mov
cmps
mov
and
mov
ret
add
mov
xchg
stos
xchg
test
mov
jo
or
or
ret
jmp
(bad)
test
loope
xlat
sbb
ds
inc
lahf
add
fs
les
sbb
add
xlat
sbb
adc
imul
call
add
imul
cs
popa
push
mov
dec
sub
xor
push
pop
pop
and
fldenv
pop
mov
lea
(bad)
sub
adc
or
fistp
and
adc
imul
or
aam
stos
fld
popa
pop
pop
iret
test
push
push
leave
adc
or
icebp
mov
lahf
mov
test
adc
add
inc
popa
pop
adc
sti
(bad)
sub
adc
ret
test
sbb
push
mov
cmp
push
or
dec
or
or
sbb
or
push
aas
cmps
push
mov
lahf
call
scas
bound
inc
ins
jecxz
jecxz
add
pop
fisttp
mov
(bad)
jecxz
xor
and
pop
arpl
push
stos
push
sti
pop
mov
std
adc
dec
ret
lock
jnp
or
push
test
dec
ret
or
lods
sub
push
sub
add
jecxz
xchg
jo
mov
adc
xchg
xor
das
jecxz
mov
xchg
fild
sahf
fst
fsub
add
(bad)
retf
pop
ins
sti
mov
adc
adc
pop
movs
fmul
ins
add
and
out
adc
cmp
or
mov
pusha
adc
add
fild
jg
pop
or
xor
adc
inc
in
dec
out
out
jecxz
and
or
retf
mov
xor
jecxz
lea
pop
xor
stos
pop
pusha
cs
sbb
fadd
pop
imul
ins
pop
or
mov
sbb
ror
xchg
add
sbb
push
adc
pop
inc
inc
ficom
aas
adc
dec
dec
(bad)
adc
call
lods
movs
sub
rol
outs
lds
mov
lods
sbb
or
mov
sbb
mov
and
fild
retf
ret
push
or
stos
test
mov
sbb
(bad)
sbb
pop
adc
adc
adc
adc
lahf
shl
rcl
(bad)
push
xchg
psrlw
pop
push
retf
push
loopne
in
pop
cmc
push
retf
jbe
arpl
cmc
push
retf
add
cmc
push
retf
aaa
div
jecxz
cmc
push
cmp
add
mov
mov
add
jg
jge
and
pop
out
jmp
inc
mov
iret
out
in
add
push
jecxz
jecxz
jnp
inc
ja
add
pop
mov
je
(bad)
xlat
pop
or
pop
iret
adc
xlat
pop
inc
sub
adc
cwde
add
aaa
or
inc
mov
aaa
inc
mov
outs
out
inc
pop
or
les
sbb
xor
or
(bad)
imul
mov
sbb
stos
dec
sbb
lahf
ret
imul
push
movups
push
(bad)
push
shl
mov
test
mov
inc
add
cmps
(bad)
fcomp
adc
retf
pop
cmc
jo
or
push
mov
mov
jecxz
cmc
push
fdiv
or
aaa
add
in
pop
ud2
sbb
inc
aas
or
xchg
mov
aaa
mov
popa
ins
rol
xlat
imul
and
mov
push
cmc
pop
mov
push
and
inc
xlat
adc
sbb
or
inc
sbb
adc
mov
mov
mov
popa
jecxz
inc
sub
and
mov
ret
push
shl
mov
push
cmp
push
fnsave
sub
adc
ret
jns
mov
or
ret
xchg
adc
push
add
mov
sbb
or
xor
shr
inc
adc
lea
adc
jge
push
adc
xor
push
xchg
adc
inc
mov
rcl
popa
shr
imul
ret
add
sbb
push
add
push
test
adc
loopne
push
mov
pop
fst
aaa
retf
cdq
add
fst
sti
pop
pop
popa
shr
sub
or
cmp
cmpps
inc
pusha
or
or
pop
dec
sbb
ret
(bad)
mov
fst
(bad)
and
ins
fisttp
inc
add
mov
fst
xchg
sbb
outs
or
call
xchg
push
iret
inc
enter
stos
push
sti
pop
or
mov
cmp
push
test
leave
or
jmp
add
dec
sbb
push
test
adc
adc
sub
das
adc
inc
pop
inc
mov
inc
push
adc
or
add
and
lea
shr
dec
dec
std
sbb
aad
retf
lods
cmp
xor
push
out
ret
adc
adc
sub
mov
mov
sbb
aaa
test
(bad)
mov
mov
(bad)
sbb
jne
push
add
inc
pusha
sbb
mov
or
or
pop
push
inc
push
call
add
add
mov
fcmovu
add
(bad)
xor
cmp
fmul
pop
jae
xor
fdivr
jnp
ds
add
jbe
fstp
(bad)
mov
mov
push
fdiv
pop
mov
fs
call
mov
cmp
cdq
test
push
jg
in
out
(bad)
pop
or
jg
(bad)
ss
sbb
arpl
test
ud0
push
nop
pop
inc
divps
iret
fidivr
add
js
nop
lea
int3
jbe
fidivr
movd
fld
shl
mov
xor
lds
mov
emms
repnz
mov
or
add
cwde
jnp
rol
or
lock
call
ja
(bad)
xchg
(bad)
adc
mov
push
clc
ja
js
cmps
in
lods
cdq
xor
mov
inc
push
ja
add
jnp
(bad)
call
out
loopne
sbb
es
daa
loope
jo
(bad)
daa
xchg
or
xchg
push
les
pop
pusha
pop
xor
mov
mov
out
pop
inc
ds
int
js
or
data16
out
das
add
pop
ins
pop
(bad)
aaa
lock
scas
add
mov
js
add
pop
adc
fcomp
movs
cmp
push
pop
imul
das
pop
inc
mov
cmps
js
pop
mov
aad
mov
push
mov
pop
adc
fcomp
scas
push
add
sbb
pop
test
sub
and
test
cwde
and
add
adc
scas
xchg
xchg
mov
add
jge
nop
and
and
add
nop
mov
test
push
add
jns
cmovbe
jl
(bad)
inc
adc
pop
jb
(bad)
in
clc
sbb
popa
dec
jg
js
jp
inc
imul
idiv
sbb
sub
or
add
sub
pop
neg
sbb
add
fstp
xchg
or
maxps
adc
add
sbb
int
(bad)
js
or
jo
(bad)
fcmovnb
call
mov
(bad)
jb
jnp
sub
mov
pop
in
inc
push
fcom
add
mov
cmp
xchg
(bad)
retf
pop
xchg
pop
aaa
or
ret
aas
ret
mov
add
jmp
or
int3
fidiv
push
sbb
push
imul
or
mov
mov
gs
pop
xchg
mov
test
outs
xor
or
mov
dec
(bad)
cmp
movs
or
mov
aaa
cmp
or
jp
jp
mov
xchg
xchg
inc
ja
push
pushf
add
jae
out
pusha
pop
or
js
mov
outs
pusha
xchg
or
or
or
imul
ja
xchg
or
test
adc
rcr
or
adc
or
sbb
inc
push
inc
fisttp
out
imul
xchg
ja
sbb
ret
nop
mov
inc
cmp
push
mov
xlat
into
mov
jo
or
mov
jle
xchg
jg
loop
add
popf
and
dec
sbb
jo
ficom
or
or
stos
pop
or
and
int
scas
inc
test
cld
(bad)
out
push
pop
(bad)
sysret
add
pop
push
sgdtd
cdq
movs
cmp
daa
or
movs
adc
test
(bad)
fbstp
daa
dec
(bad)
dec
pushw
ficomp
add
adc
add
test
out
adc
pop
add
sub
mov
add
pop
mov
arpl
lock
imul
xchg
or
daa
pop
mov
push
daa
aaa
fcomp
mul
lock
es
rol
pop
lock
test
aas
pop
mov
fwait
sub
mov
mov
fadd
mov
and
ja
or
adc
inc
sub
dec
mov
outs
lods
mov
jo
ja
jbe
mov
cmp
mov
or
add
pop
or
into
ds
adc
xchg
mov
hlt
mov
inc
call
add
fnstcw
xchg
(bad)
out
pop
push
pusha
mov
lock
loopne
sti
lea
pusha
jmp
sbb
fisttp
add
xchg
les
movs
pop
ror
or
mov
add
popa
pop
stc
nop
dec
psrad
or
xlat
push
popf
or
ss
push
dec
stc
push
xchg
fucomi
pmaxsw
psubsb
fwait
outs
(bad)
(bad)
repz
mov
out
sahf
ret
add
push
add
pusha
sahf
out
pop
nop
sub
pop
add
test
retf
inc
jle
test
add
test
test
fwait
add
or
cdq
jnp
push
out
daa
or
inc
aaa
ins
add
sbb
mov
movs
push
push
dec
(bad)
les
ds
inc
add
outs
and
repz
push
push
or
dec
push
repnz
xchg
and
dec
or
or
daa
sbb
psadbw
fxsave
arpl
sbb
pop
mov
outs
pusha
cs
push
and
dec
mov
rcl
pop
or
pop
fiadd
fs
or
inc
add
dec
shl
rol
bound
out
test
xchg
js
sbb
or
movs
mov
adc
jg
adc
pop
and
mov
(bad)
cmp
inc
sti
ins
mov
sti
in
mov
add
push
jbe
xchg
mov
add
in
repz
inc
dec
or
add
push
pushf
sti
bound
stos
mov
and
pop
jno
and
(bad)
fsub
pop
or
arpl
neg
(bad)
(bad)
jecxz
add
jecxz
hlt
mov
dec
dec
push
inc
xor
cmps
add
add
xchg
inc
and
inc
xchg
mov
pop
(bad)
sub
cmp
add
aas
ss
ficomp
aaa
dec
add
outs
cmc
retf
adc
sti
aaa
add
das
or
cmp
out
sub
mov
dec
dec
sti
push
add
adc
add
loop
jge
push
out
adc
lods
sub
sar
cmp
dec
dec
pushf
pop
or
push
bound
push
push
popf
ret
repnz
(bad)
add
push
push
retf
dec
inc
cld
jb
and
add
pop
gs
xchg
xchg
and
leave
and
inc
int
mov
pop
pop
rcl
enter
cmps
fcom
(bad)
push
mov
popa
js
inc
push
inc
test
sbb
pop
add
(bad)
push
xchg
shl
out
mov
mov
mov
mov
sbb
xchg
add
mov
pop
idiv
xchg
and
sar
add
xor
cmp
push
inc
dec
mov
or
outs
js
mov
dec
and
call
xchg
mov
add
mov
rol
jmp
stos
fild
jae
ins
fiadd
aas
push
pop
test
fiadd
sbb
out
add
jnp
mov
mul
xchg
cmp
out
(bad)
cdq
mov
mov
mov
aaa
add
add
xchg
aaa
les
in
sbb
dec
ins
mov
xchg
pop
jmp
sbb
sub
mov
mov
xchg
push
adc
and
push
and
(bad)
mov
pop
fisttp
jo
mov
iret
pop
cmp
pop
mov
inc
sub
mov
aas
pushf
jo
sbb
test
loopne
test
rol
inc
add
xlat
inc
jnp
ss
add
inc
dec
iret
add
mov
test
inc
je
out
loopne
add
cmc
push
jl
xchg
sub
pop
inc
add
ror
popa
or
(bad)
xor
dec
xchg
ds
mov
loope
add
dec
retf
jae
cmps
add
adc
ror
xor
xor
add
ds
inc
add
or
cmp
ins
push
pop
(bad)
jo
inc
sti
and
jbe
pop
and
dec
neg
xor
dec
or
push
jb
dec
jmp
leave
dec
pop
out
xchg
xchg
xchg
sub
add
adc
push
mov
test
repz
imul
push
test
jbe
jg
push
ins
ret
jmp
cdq
mov
mov
add
inc
mov
ret
addr16
jle
inc
pop
add
mov
sbb
push
pop
push
lods
clc
dec
mov
jmp
ret
shl
das
push
pop
out
inc
mov
pop
jle
push
push
aam
das
and
jecxz
push
push
repnz
cs
imul
and
sub
loope
xchg
mov
add
dec
add
out
xchg
add
outs
minps
std
inc
pop
jbe
mov
inc
add
sub
push
scas
sysret
fdivr
pop
xchg
cdq
sub
add
add
dec
sbb
jns
inc
push
cmp
mov
mov
ret
fisubr
or
retf
pop
mov
fisttp
mov
and
jnp
iret
push
retf
movs
sub
nop
retf
add
sar
addr16
push
pop
test
push
loopne
movs
or
xor
mov
push
or
js
rcl
add
or
idiv
dec
jo
inc
shl
xchg
adc
inc
inc
sti
ins
inc
shl
mov
scas
shl
sub
push
outs
jg
jmp
jmp
adc
jg
es
ret
xchg
iret
jl
pop
or
add
pop
call
cli
shufps
and
or
pop
inc
push
push
sbb
data16
jp
call
add
push
jle
js
or
lods
test
enter
inc
sub
cmp
and
lods
sub
fbstp
stc
adc
pop
xchg
mov
ficomp
jecxz
pop
addr16
pop
adc
xchg
xchg
or
jg
xor
daa
push
ret
repz
pop
mov
sahf
and
inc
jno
pop
and
popa
sbb
jle
daa
pop
push
inc
lds
(bad)
adc
pop
lds
mov
jnp
rep
packsswb
push
das
or
imul
cld
test
pop
add
dec
push
adc
push
out
dec
bound
pop
inc
adc
rol
call
xor
or
jae
in
bound
push
sub
jmp
dec
imul
push
push
outs
xor
(bad)
sahf
aaa
bound
(bad)
pop
lds
aaa
(bad)
fist
les
out
(bad)
xchg
push
pusha
in
inc
pop
add
cmp
add
cli
pop
mov
xchg
jmp
ins
(bad)
or
push
inc
or
jns
pop
jb
push
jnp
outs
test
(bad)
dec
(bad)
jge
fs
cmp
pop
add
mov
push
xchg
or
pop
xchg
js
pop
aas
sub
(bad)
cs
test
push
dec
or
or
jmp
(bad)
fisttp
repnz
and
or
mov
pop
mov
pop
dec
sbb
push
mov
and
pop
out
adc
out
pop
jb
inc
xchg
push
out
jbe
jbe
cmp
xchg
imul
pop
mov
dec
xchg
dec
pop
dec
push
lahf
rol
xchg
fs
inc
lock
pop
lea
iret
jg
xchg
fadd
add
xchg
xlat
push
jmp
push
fdiv
aaa
dec
repz
in
sti
cmp
pop
sbb
pop
data16
(bad)
sub
loopne
pop
push
ret
iret
iret
dec
sub
push
ret
mov
xchg
iret
test
add
inc
or
push
sbb
add
or
add
mov
push
bound
sti
jl
jle
das
add
int
cwde
(bad)
int
cmps
ss
sbb
mov
lea
jbe
sub
test
jb
mov
push
sahf
xchg
mov
xchg
in
dec
cmps
out
mov
pop
push
dec
gs
adc
in
loope
jnp
sbb
xor
mov
sbb
or
pop
cmp
push
sub
xor
outs
pop
(bad)
ficomp
jp
dec
or
out
call
pop
add
adc
scas
cs
push
cmp
pushf
pushf
or
pop
aaa
ja
loopne
push
pop
mov
nop
xchg
pop
jne
jp
pop
and
into
in
aas
repnz
inc
xor
pop
pop
outs
jecxz
inc
nop
rol
push
call
mov
xchg
jns
xchg
jbe
adc
clc
jbe
push
sbb
push
push
xor
inc
sbb
or
pop
dec
retf
pushw
pand
repz
xchg
ficom
bound
std
nop
mov
data16
aaa
das
jle
xor
mov
add
mov
inc
dec
jle
jbe
ret
fimul
xor
and
push
xchg
(bad)
fisub
pop
in
popa
dec
fistp
addr16
stos
rcr
mov
push
mov
sub
dec
ja
adc
inc
cs
stos
inc
je
cmp
mov
and
imul
mov
into
in
scas
xor
dec
hlt
xchg
xchg
imul
sub
movhps
shr
pop
mov
scas
mov
es
cmps
adc
or
scas
xchg
add
enter
(bad)
cli
xor
pusha
ret
push
arpl
adc
gs
cmps
mov
fsubr
add
mul
cmp
jae
lea
pusha
inc
fld
pop
das
(bad)
jp
imul
pop
outs
cwde
jp
cmp
sete
bound
sbb
jnp
cld
retfw
xchg
mov
push
push
out
lea
es
ss
sub
inc
adc
inc
and
js
jbe
call
fsubp
outs
xchg
pop
stc
pop
xor
sbb
mov
or
fadd
jle
jbe
(bad)
dec
mov
dec
and
cdq
push
loopne
or
adc
fnclex
jmp
mov
fld
rcl
jne
sub
jecxz
pop
mov
arpl
arpl
or
mov
lahf
push
data16
jns
daa
retf
or
sbb
dec
dec
mov
movs
or
mov
nop
mov
push
sar
xchg
arpl
scas
sahf
dec
add
inc
mov
out
dec
adc
out
mov
cmovg
or
sub
shl
xchg
push
pop
addr16
pop
loopne
iret
and
outs
push
add
pusha
xchg
ret
and
mov
imul
test
or
xor
retf
sar
jbe
(bad)
push
xor
(bad)
fnstsw
pop
outs
adc
sti
pinsrw
push
xor
jb
push
push
add
lock
inc
retf
cmp
adc
push
out
adc
sbb
pop
cmp
rol
lahf
pop
rcl
jo
pop
cmp
xor
js
cmp
in
add
pop
movs
bound
pop
paddsw
popa
and
jno
stos
dec
fisttp
xchg
int3
push
and
xchg
cmp
xchg
out
lea
mov
call
out
jp
mov
inc
scas
sbb
arpl
or
push
xor
imul
push
mov
sub
ds
push
mov
cwde
mov
popaw
mov
or
popf
mov
and
jmp
add
and
dec
add
mov
or
xor
push
test
add
add
mov
mov
add
xchg
add
inc
and
call
mov
sub
test
loopne
cmp
ror
or
mov
pop
cmp
inc
push
gs
add
mov
test
out
add
inc
push
push
je
cmp
jae
popa
fs
mov
test
fidiv
push
sbb
push
aad
fnstcw
aad
push
jns
(bad)
cmps
enter
push
outs
push
xor
aad
imul
cmp
sub
xchg
je
dec
lds
inc
add
push
mov
in
push
popa
sub
scas
dec
ss
xchg
add
jmp
inc
adc
pop
inc
or
lods
mov
inc
xor
gs
dec
mov
and
dec
adc
das
mov
or
sub
pop
xor
lds
or
ins
les
inc
sub
inc
push
cmps
das
add
rcr
push
popa
imul
ja
aaa
push
imul
pop
sbb
lock
retf
popa
fs
out
or
dec
and
dec
mov
adc
adc
and
add
dec
push
adc
ds
pusha
(bad)
call
movs
jno
fld
imul
jae
adc
jne
dec
(bad)
jecxz
lds
mov
or
adc
xor
mov
test
je
cwde
repnz
jle
inc
fs
int3
xchg
pop
shl
cmp
lock
sbb
mov
jecxz
xchg
loope
stc
fs
cmps
mov
pushf
sub
mov
sub
push
retf
jne
mov
push
adc
jo
xor
cmp
test
xor
les
adc
jno
imul
dec
mov
or
xlat
enter
dec
test
sbb
iret
sub
sbb
inc
push
lods
je
dec
ss
push
and
xchg
int
xlat
pop
imul
and
pusha
dec
dec
sbb
inc
imul
add
addps
mov
push
push
data16
retf
mov
cmp
jg
jb
xor
or
xor
bound
gs
push
dec
inc
sbb
push
cmp
push
into
dec
mov
pop
sbb
push
pop
dec
retf
fs
or
cmovae
jns
shl
mov
add
add
inc
pop
sbb
cmps
daa
or
retf
sub
mov
xor
int3
adc
push
lods
out
sub
dec
fst
in
sbb
imul
jo
add
pop
push
push
movs
mov
and
inc
fwait
mov
ins
arpl
dec
adc
push
stc
cmp
fistp
(bad)
and
mov
jo
jae
ja
sub
push
fcomip
mov
lods
popa
sbb
mov
fwait
mov
cwde
mov
jmp
jg
jge
pop
ins
jp
imul
xor
xor
ja
pop
loopne
push
popf
sub
or
mov
loope
cmp
cdq
pop
sub
adc
or
sar
fcmovnb
add
dec
sbb
push
xchg
rcr
outs
adc
ds
pop
dec
addr16
out
dec
push
out
dec
gs
nop
push
ret
mov
stc
pop
iret
ins
jbe
dec
inc
sbb
jbe
(bad)
pop
inc
and
mov
push
sahf
scas
and
push
pop
mov
rol
(bad)
mov
sbb
int
es
sub
adc
ret
scas
loop
sub
xor
out
outs
int3
xchg
daa
xchg
xor
push
add
adc
and
add
fnstenv
enter
or
cdq
adc
dec
inc
imul
push
enter
icebp
sbb
and
xor
and
test
mov
shl
test
imul
and
daa
ins
mov
or
pop
and
adc
mov
dec
jmp
sub
jbe
sbb
inc
or
dec
addr16
xor
and
add
hlt
push
in
dec
jne
push
out
adc
mov
add
and
sbb
arpl
jb
pop
aad
and
js
push
xor
and
lds
sub
outs
imul
loope
adc
mov
add
dec
xor
xor
sub
adc
cmp
cmp
sub
add
push
xor
mov
cdq
dec
ffree
push
inc
pop
inc
pop
inc
jbe
das
xor
sbb
je
adc
cmp
pop
or
sub
(bad)
ins
mov
xor
jge
sbb
cdq
inc
loope
sbb
lds
(bad)
xor
test
jno
mov
cmps
xor
add
mov
adc
adc
mov
bound
sub
cmp
outs
and
mov
enter
push
cmp
jae
adc
leave
nop
ins
out
mov
inc
adc
pusha
and
imul
movs
ja
push
mov
jae
test
dec
test
out
outs
jp
inc
push
fmul
push
outs
cwde
inc
adc
push
mov
xor
jno
into
mov
inc
jmp
popa
mov
lock
daa
pop
les
outs
dec
call
add
or
jne
pop
pop
cdq
outs
pusha
mov
inc
test
xor
imul
xor
xchg
xor
loopne
test
jae
sub
push
mov
pop
or
sub
(bad)
mov
inc
or
mov
xchg
push
inc
cmp
popa
int
add
xor
xor
imul
add
mov
aaa
loopne
fcomp
push
(bad)
pop
sbb
daa
pop
push
jb
inc
test
out
cmps
fsub
call
push
cmps
imul
mov
call
adc
or
push
xchg
retf
jmp
add
cld
add
add
pop
or
shr
dec
jmp
xchg
mov
push
popf
inc
jmp
fs
xchg
push
xor
int3
fmul
out
and
jo
mov
push
sbb
pop
das
adc
jo
arpl
outs
mov
sub
xchg
in
push
inc
scas
je
sub
inc
add
jo
adc
dec
mov
dec
sub
fs
pop
xchg
aam
xor
ins
test
jge
ret
ins
xor
movs
pop
jo
cmp
dec
add
shr
push
imul
sbb
and
in
mov
test
adc
sub
jmp
mov
stc
cmps
pop
pop
inc
arpl
jl
pop
jp
xchg
push
push
mov
adc
jp
fadd
cdq
std
out
mov
pusha
push
jnp
cwde
xchg
ja
jo
data16
sbb
enter
xchg
rol
push
push
jb
sbb
pop
pop
mov
mov
push
data16
lock
mov
lods
loope
cmc
mov
xor
and
adc
leave
in
ret
in
push
jne
sbb
mov
sbb
jo
addr16
or
and
cmp
xchg
dec
push
adc
imul
add
(bad)
inc
adc
sti
shl
lock
adc
mov
jge
lock
ins
(bad)
stos
cmp
enter
cmp
xor
cmp
loope
sub
dec
fcom
dec
outs
pop
add
adc
xor
and
movs
rcr
das
sub
push
fst
pop
push
es
addr16
mov
fst
jae
sbb
sbb
les
inc
xor
std
sub
sub
sar
and
pop
adc
dec
jecxz
ss
pushw
pop
add
inc
sbb
add
inc
cs
or
push
xchg
outs
mov
addr16
pop
inc
mov
int3
lods
jno
adc
sub
imul
mov
mov
rcr
inc
cld
xor
movs
jmp
scas
jmp
loop
and
mov
movs
sbb
inc
arpl
sub
imul
ins
mov
outs
mov
sbb
jmp
movs
jmp
push
jne
dec
in
je
mov
xor
fldcw
inc
inc
repnz
jmp
mov
paddsb
sbb
test
mov
mov
ret
popf
stos
adc
enter
jno
add
cmp
dec
fmul
into
cmp
and
arpl
mov
push
inc
xor
or
outs
add
mov
mov
push
mov
mov
dec
adc
cmp
sqrtps
xor
test
xor
test
popa
popa
pop
xchg
popa
imul
sbb
or
pop
cmp
ins
int3
or
mov
es
cmp
push
ins
mov
(bad)
lods
mov
inc
cmp
fsubr
jl
fmul
push
sbb
jae
dec
test
or
outs
scas
cmc
mov
retf
sub
inc
pusha
push
mov
add
cmp
mov
sub
imul
and
mov
cmp
or
and
shl
lds
jb
leave
je
push
call
ja
inc
rcr
inc
jo
fimul
dec
imul
and
popa
sbb
jbe
cwde
inc
jmp
pusha
nop
popa
jp
jbe
and
jb
ins
imul
pop
das
mov
mov
add
or
rcl
mov
cmp
sub
mov
inc
bound
add
sbb
loopne
aas
shl
ins
out
sub
nop
fadd
sbb
inc
data16
(bad)
push
ja
cwde
adc
movs
(bad)
ds
mov
xor
test
or
push
adc
aas
mov
movs
add
pop
lock
push
jo
xchg
mov
inc
stos
ret
movs
sti
or
ret
or
sub
lock
in
mov
leave
lods
and
lar
pop
cmp
jo
pop
mov
pop
loopne
add
xchg
pop
dec
pusha
cs
pop
lock
aas
stos
stc
add
add
add
inc
cs
dec
retf
test
pop
push
cmp
xlat
lock
xor
add
sbb
adc
add
dec
inc
add
add
dec
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
