mov
adc
sahf
dec
mov
in
inc
add
inc
add
pop
add
and
cwde
mov
addr16
(bad)
int3
adc
lock
cwde
jno
sub
cwde
dec
mov
cld
(bad)
lods
xor
imul
xchg
int3
jbe
in
outs
mov
mov
jnp
mov
mov
int3
hlt
sbb
cmp
in
mov
cwde
int3
dec
cmp
int
ins
(bad)
into
sbb
pop
cwde
and
enter
sbb
xor
(bad)
push
mov
add
sbb
fnstsw
nop
in
add
fimul
sub
dec
xor
mov
cwde
dec
mov
sbb
(bad)
int
adc
cwde
mov
sub
add
(bad)
sti
cmp
data16
mov
dec
mov
adc
ror
and
mov
adc
add
or
add
cmp
jae
(bad)
retf
ja
jae
sbb
pusha
and
xor
or
cmp
mov
cmp
(bad)
mov
sub
ja
pop
dec
aad
adc
test
pop
cmp
cmp
cmps
mov
cmc
pushf
ret
into
sbb
repnz
mov
inc
add
mov
int3
rol
out
les
addr16
fucompp
sbb
bound
jbe
addr16
dec
cmp
mov
retf
dec
mov
repnz
pusha
mov
dec
mov
in
outs
loop
pop
dec
cwde
sbb
dec
loop
jo
hlt
xor
(bad)
std
and
xor
mov
sbb
mov
and
or
mov
sbb
cmp
cmps
lods
dec
cwde
dec
or
pushf
test
ffree
mov
or
dec
xor
dec
mov
jae
sub
xchg
mov
imul
movs
pop
push
cmp
xor
mov
sub
add
xor
sub
adc
dec
mov
sbb
add
push
or
mov
imul
pushf
and
mov
adc
mov
or
xor
or
cmp
mov
adc
or
cmp
cmps
clc
inc
cwde
dec
or
cmp
aad
fcomp
shl
xor
in
xchg
cwde
dec
mov
pop
dec
fnstsw
cdq
dec
pusha
sahf
out
dec
mov
sbb
mov
sbb
mov
sbb
(bad)
dec
pop
cwde
and
mov
daa
mov
cwde
iret
loopne
or
mov
mov
mov
adc
(bad)
jg
or
mov
in
dec
mov
xor
mov
pop
nop
add
and
bound
push
cwde
into
addr16
mov
dec
push
cwde
jle
pop
cdq
daa
sbb
lods
mov
iret
addr16
pusha
push
cdq
dec
mov
addr16
mov
jle
jno
push
or
mov
imul
and
mul
mov
repnz
xchg
adc
aaa
fisubr
sub
xor
ret
enter
cmps
dec
xchg
repnz
loop
repnz
ja
xchg
mov
cmp
icebp
xor
pop
scas
xor
jle
fisub
cmp
cmp
mov
mul
dec
mov
jo
icebp
xor
jle
fimul
cmp
xor
or
rcl
mov
test
xchg
adc
fisttp
and
xor
mov
not
push
mov
cwde
and
ja
nop
cmps
fmul
dec
add
xchg
mov
arpl
cmp
pop
ja
test
ja
cmps
enter
add
cmp
xchg
mov
xchg
mov
arpl
test
(bad)
jo
jg
int
adc
fnstsw
retf
sbb
mov
pusha
mov
int
adc
jo
popf
cmp
cwde
int3
in
lds
movs
in
inc
(bad)
int
adc
jo
popf
cmp
cwde
jle
fcmovu
(bad)
int
cdq
mov
fs
inc
ss
cmps
jbe
inc
cdq
or
rcr
ja
sbb
xor
mov
repnz
pop
ja
ins
(bad)
int
mov
(bad)
int
jae
xor
les
(bad)
std
mov
je
(bad)
int
ffreep
jns
push
mov
mov
dec
mov
dec
inc
xor
int
adc
cmp
iret
mov
cwde
cmp
fnsave
ja
and
(bad)
push
mov
mov
cdq
dec
pusha
or
dec
mov
sbb
inc
xchg
(bad)
aad
pop
retf
data16
add
xor
mov
mov
into
adc
je
data16
xor
sti
retf
or
into
fmul
mov
cwde
cmp
pop
cmp
into
addr16
arpl
mov
mov
mov
popf
dec
mov
or
movs
add
retf
data16
mov
mov
into
outs
jmp
push
retf
data16
jmp
popf
dec
mov
addr16
add
into
(bad)
adc
clc
pop
sbb
aam
mov
add
int
cmp
lahf
lods
xor
or
fnsave
pusha
push
loopne
mov
aad
cwde
pusha
adc
(bad)
lock
push
mov
mov
adc
ja
xchg
hlt
out
or
mov
ins
(bad)
int
outs
sub
mov
(bad)
push
mov
mov
into
sbb
ins
xchg
mov
int
fs
adc
je
pop
jle
mov
jae
pusha
(bad)
out
dec
mov
aad
cwde
pusha
adc
(bad)
lock
push
mov
mov
adc
ja
xchg
hlt
out
xchg
mov
int
or
fnsave
retf
or
outs
(bad)
adc
repnz
ins
pusha
retf
sbb
mov
mov
jge
adc
je
pop
jle
mov
in
sti
retf
mov
cmp
dec
mov
bound
mov
mov
loope
dec
mov
jbe
nop
hlt
rcr
and
dec
mov
pop
adc
push
mov
mov
into
sbb
inc
nop
lock
pop
or
add
test
dec
cld
test
dec
ja
xchg
daa
(bad)
rcr
dec
fcompp
fidiv
je
lds
(bad)
lock
cwde
sbb
gs
popa
adc
je
retf
sbb
gs
mov
imul
mov
(bad)
adc
jo
pop
adc
push
mov
mov
into
sbb
ins
xchg
lock
int3
wrmsr
mov
jg
int
adc
movs
inc
cwde
dec
add
repnz
loop
lock
xor
inc
loop
repnz
pusha
shr
dec
mov
outs
test
je
(bad)
dec
neg
(bad)
push
mov
mov
iret
(bad)
std
cmp
cmp
fwait
ror
test
dec
mov
cwde
dec
cld
cmp
shr
jae
pop
add
addr16
mov
pushf
les
aaa
addr16
sub
cmp
mov
div
clc
xor
mov
mov
retf
sbb
mov
movs
cld
test
mov
sbb
mov
repnz
pusha
xchg
call
mov
retf
xabort
cwde
(bad)
dec
mov
pop
jle
cmp
adc
adc
cmp
fisub
jmp
cwde
and
int
enter
cwde
dec
add
test
ror
frstor
add
sbb
imul
les
xor
mov
mov
lods
pop
(bad)
int
xchg
(bad)
std
xor
vpmacsdql
xor
dec
addr16
ja
addr16
mov
clc
pop
sbb
aam
arpl
inc
cwde
dec
(bad)
hlt
add
jmp
sbb
test
dec
ja
cwde
dec
cld
sbb
test
dec
mov
mov
xchg
cmp
cwde
into
dec
mov
dec
mov
cwde
dec
cld
sub
shr
jae
pop
add
sbb
(bad)
cwde
int3
lods
lods
cmp
ja
cwde
ret
addr16
popa
cmp
cmp
loopne
js
mov
pop
pusha
sbb
ja
pop
inc
mov
addr16
mov
lods
lods
cmp
mov
cwde
into
jnp
nop
dec
mov
cwde
ret
enter
adc
mov
ja
data16
int
sbb
jl
xchg
retf
mov
dec
fs
xchg
sub
sbb
test
dec
ja
cwde
dec
cld
sbb
adc
push
into
data16
repnz
hlt
test
dec
add
lea
or
lods
dec
sub
mov
cmp
cmp
cwde
(bad)
int
sbb
xor
sti
xor
xchg
add
dec
add
int
cmp
cmp
cwde
ret
enter
sbb
mov
cwde
dec
jnp
adc
cmp
mov
adc
or
mov
ja
addr16
dec
mov
mov
inc
int
adc
fimul
icebp
jns
mov
mov
dec
mov
adc
je
pop
cmp
mov
addr16
popa
cmp
sub
pop
add
fcomp
xor
inc
dec
inc
lea
mov
addr16
mov
inc
mov
into
in
jo
ret
mov
sbb
xchg
fimul
inc
xchg
out
adc
fimul
mov
or
fnstsw
or
addr16
mov
shr
jae
dec
xor
dec
mov
jnp
or
mov
push
mov
mov
retf
sbb
mov
add
mov
mov
(bad)
mov
sub
or
ds
inc
push
inc
mov
mov
adc
je
(bad)
dec
(bad)
(bad)
js
inc
pop
or
mov
aad
fld
jne
dec
mov
in
inc
mov
in
dec
or
add
int3
xor
or
mov
sbb
outs
mov
pop
dec
sub
idiv
cld
xor
sbb
je
in
sbb
cmp
retf
add
leave
cdq
mov
neg
sub
xchg
add
outs
test
je
(bad)
dec
fiadd
jnp
call
xor
pushf
jae
dec
pushf
int3
in
int
(bad)
jo
pusha
(bad)
dec
ja
or
ds
int3
in
int
int3
cmc
int
cmp
add
js
xor
or
or
xor
dec
loop
repnz
loop
repnz
loopne
cwde
dec
enter
leave
xor
out
cwde
(bad)
int
repnz
loop
repnz
fcomp
scas
and
mov
fmul
mov
cwde
cmp
pop
and
fldenv
cmp
dec
test
(bad)
mov
scas
retf
cmp
repnz
(bad)
adc
js
fnstsw
jo
bound
mov
(bad)
adc
clc
pop
sbb
aam
out
xor
dec
(bad)
hlt
out
dec
xchg
sub
mov
jnp
or
mov
xchg
dec
mov
sbb
dec
loopne
js
mov
cli
and
into
data16
mov
mov
into
enter
addr16
cmp
or
nop
dec
mov
pop
and
mov
jo
out
cwde
(bad)
or
mov
pop
mov
std
addr16
mov
addr16
pusha
(bad)
ja
pop
inc
or
in
retf
cmp
les
xor
add
mov
into
enter
fimul
mov
adc
je
pop
cmp
mov
sbb
(bad)
dec
mov
addr16
loopne
jns
mov
addr16
add
addr16
mov
cwde
dec
mov
xchg
retf
cwde
dec
or
xor
mov
adc
mov
nop
add
retf
les
je
inc
dec
ds
daa
fcom
pop
mov
into
jo
jno
addr16
dec
cmp
mov
mov
les
std
addr16
xchg
int3
out
retf
xchg
mov
mov
mov
into
enter
fimul
mov
adc
je
pop
inc
or
push
sbb
ss
data16
ds
mov
cwde
iret
xor
xor
dec
loop
lock
cwde
ret
addr16
popa
jo
jle
addr16
dec
cmp
and
into
dec
mov
dec
mov
das
retf
data16
into
addr16
mov
sbb
mov
cwde
inc
aas
mov
mov
into
fcomp
add
into
enter
(bad)
retf
mov
sbb
mov
cwde
int3
sub
xor
jb
test
dec
mov
sbb
into
dec
loope
dec
mov
daa
pop
rcr
dec
loopne
cmp
mov
mov
ja
sbb
mov
in
push
push
int3
addr16
data16
jle
addr16
dec
cmp
cwde
cmp
iret
addr16
mov
cwde
and
retf
pop
sub
cmps
pusha
les
or
xchg
jb
into
cwde
dec
cld
push
repnz
loopne
js
mov
sbb
ins
mov
mov
inc
mov
addr16
mov
mov
xor
daa
and
popa
cmp
mov
ds
test
mov
xor
push
push
int3
addr16
data16
jge
addr16
dec
cmp
cwde
cmp
iret
addr16
mov
cwde
and
retf
pop
sub
cmps
in
les
or
xchg
jb
into
cwde
dec
cld
push
repnz
loopne
js
mov
sbb
ins
mov
mov
inc
mov
addr16
mov
mov
xor
mov
ja
addr16
dec
pop
cdq
daa
sbb
fimul
popa
cmp
mov
mov
test
mov
xor
inc
dec
mov
mov
into
cdq
dec
mov
repnz
loopne
js
mov
out
leave
xor
jl
addr16
dec
cmp
cwde
cmp
iret
addr16
mov
cwde
and
retf
pop
sub
cmps
inc
lds
or
xchg
jb
into
cwde
dec
cld
jne
dec
loopne
js
mov
sbb
ins
mov
mov
inc
mov
addr16
mov
mov
scas
retf
bnd
data16
(bad)
mov
test
mov
xor
inc
dec
mov
mov
into
cdq
dec
mov
sbb
mov
mov
into
cwde
cmp
jae
dec
add
into
enter
addr16
fimul
or
sub
in
in
test
dec
add
test
retf
data16
fadd
mov
add
into
enter
addr16
popa
adc
data16
(bad)
int
xchg
pop
xor
mov
mov
addr16
add
sbb
mov
jmp
sbb
je
xchg
retf
cwde
dec
or
into
jnp
ror
mov
lahf
ja
addr16
or
inc
push
test
div
cwde
sub
add
dec
mov
mov
into
cdq
dec
mov
adc
mov
mov
addr16
add
les
jmp
sbb
jbe
adc
into
enter
fimul
mov
mov
into
enter
mov
xor
inc
dec
ds
ret
addr16
popa
adc
pop
into
data16
mov
cwde
dec
mov
cdq
xchg
add
sbb
je
xchg
retf
cwde
dec
add
into
enter
addr16
popa
adc
data16
pop
xor
mov
arpl
adc
mov
mov
addr16
add
sbb
mov
adc
dec
mov
jnp
or
mov
cwde
inc
or
mov
addr16
add
les
je
(bad)
push
add
dec
mov
mov
ds
into
arpl
dec
mov
addr16
ja
pusha
mov
into
lock
sub
ret
addr16
popa
jo
in
cwde
int3
dec
cmp
data16
fcomp
dec
pusha
(bad)
dec
mov
cwde
mov
frstor
ja
sbb
pop
loopne
js
mov
pop
pusha
push
hlt
dec
mov
mov
add
dec
ja
cwde
les
mov
addr16
addr16
popa
adc
mov
fisttp
dec
mov
imul
test
mov
into
sbb
mov
cwde
dec
jnp
adc
pusha
into
data16
mov
adc
je
pop
inc
or
mov
jmp
iret
addr16
or
data16
into
data16
pop
sbb
adc
data16
mov
cwde
dec
mov
adc
je
pop
inc
or
mov
add
xor
mov
popa
adc
sub
data16
mov
adc
je
pop
inc
or
mov
out
iret
addr16
popa
rcr
cmps
je
cwde
dec
sar
pop
sub
call
dec
add
retf
data16
mov
mov
into
enter
addr16
mov
pop
add
and
xor
aas
ja
addr16
and
test
xor
cmp
mov
adc
data16
(bad)
int
and
fbstp
cwde
mov
ja
addr16
dec
mov
mov
ds
int3
sub
xor
mov
pop
call
retf
data16
mov
cwde
dec
mov
adc
je
pop
inc
or
mov
retf
ja
addr16
xchg
adc
mov
pop
cwde
mov
lds
ja
sbb
pop
add
sbb
mov
jmp
sbb
je
xchg
retf
cwde
dec
out
mov
das
ja
addr16
xchg
repnz
data16
ds
mov
cwde
ret
addr16
popa
addr16
loopne
data16
dec
imul
neg
(bad)
xor
mov
jmp
xor
xor
dec
dec
mov
mov
into
cdq
dec
mov
repnz
ja
xor
jne
data16
pop
lds
jne
data16
fnstcw
mov
addr16
inc
into
fmul
mov
cwde
cmp
sbb
into
arpl
sub
ret
addr16
popa
adc
jo
data16
mov
mov
iret
addr16
pusha
scas
icebp
dec
mov
adc
mov
pop
shr
into
data16
fst
mov
sbb
int
cwde
int3
xor
xor
dec
add
les
jmp
shl
mov
mov
into
adc
sub
data16
mov
mov
into
xchg
int
iret
addr16
mov
mov
into
enter
into
inc
add
les
mov
mov
into
adc
ins
into
data16
mov
mov
into
xchg
int
int
mov
mov
jbe
cwde
cmp
iret
addr16
xor
dec
mov
jnp
or
mov
addr16
popa
adc
addr16
int3
xor
xor
inc
add
les
mov
into
cwde
cmp
addr16
add
sbb
xchg
ja
addr16
add
sbb
xchg
ja
addr16
add
sbb
jle
mov
addr16
popa
adc
addr16
cmps
scas
(bad)
addr16
outs
ret
xchg
adc
cmp
cwde
daa
adc
fmul
nop
cwde
dec
mov
enter
cwde
dec
mov
sbb
add
int
mov
and
dec
mov
fnsave
or
lods
xor
dec
pusha
cmp
dec
mov
outs
mov
mov
iret
cmp
cwde
dec
std
out
jae
dec
je
mov
into
movs
mov
xor
mov
push
jo
int
sub
xor
xor
jle
mov
pop
or
mov
outs
(bad)
adc
mov
cwde
dec
mov
or
add
leave
sbb
data16
ins
fnstsw
fnsave
cmp
cwde
and
jmp
xor
dec
pusha
pop
std
dec
mov
sti
dec
mov
mov
mov
retf
sbb
ins
nop
icebp
hlt
or
sub
rcr
cld
test
dec
add
sbb
mov
push
int3
lods
sub
push
mov
sbb
scas
(bad)
mov
inc
sbb
dec
dec
xor
ror
xor
int3
test
dec
mov
cwde
dec
add
fld
mov
xchg
stc
lea
push
mov
pop
inc
add
call
xor
dec
ja
sbb
iret
test
pop
push
mov
das
mov
cwde
mov
inc
sub
mov
pop
iret
mov
xchg
fimul
sbb
jo
popf
ja
jo
cmps
mov
cwde
dec
or
ror
xor
mov
cmps
xor
(bad)
leave
xor
ror
xor
dec
arpl
addr16
mov
(bad)
shr
je
(bad)
dec
fcomp
dec
mov
(bad)
retf
cdq
dec
mov
popf
cmp
cwde
mov
mov
in
dec
mov
xor
dec
mov
cwde
pop
sub
push
mov
jno
ja
addr16
mov
jno
mov
cwde
into
jle
mov
mov
push
pop
jo
dec
popa
ds
(bad)
popf
push
pop
jo
inc
cld
ss
dec
mov
cwde
iret
test
pop
push
mov
cmp
adc
in
enter
popa
shl
ja
popf
push
pop
jo
dec
cld
ss
dec
mov
pop
iret
test
pop
push
mov
pop
dec
lods
(bad)
xor
mov
(bad)
popf
push
pop
jo
dec
cld
ss
dec
mov
cwde
iret
test
pop
push
mov
pop
dec
int3
test
dec
mov
cwde
dec
popa
mov
popf
cmp
cwde
mov
or
push
mov
pop
iret
test
pop
push
mov
dec
mov
cwde
out
lods
(bad)
xor
ror
xor
push
jecxz
cwde
mov
add
sbb
scas
(bad)
fdivr
mov
cmp
dec
xor
dec
popa
call
(bad)
leave
xor
dec
popa
(bad)
cwde
dec
mov
cdq
dec
mov
(bad)
lahf
cwde
dec
mov
popf
cmp
cwde
int3
lea
pop
push
mov
jno
mov
cwde
(bad)
js
push
ja
jo
dec
popa
mov
pop
cmps
inc
xor
ror
xor
dec
mov
cmp
sub
inc
ds
out
retf
(bad)
hlt
sbb
lods
mov
test
xor
dec
mov
out
ja
sbb
iret
test
pop
push
mov
js
xor
sti
retf
pusha
sub
add
ja
jo
movs
stos
into
popf
ja
jo
(bad)
js
push
push
pop
jo
packsswb
(bad)
popa
pusha
cdq
dec
mov
cwde
mov
inc
sub
mov
popf
push
pop
jo
ja
xor
xchg
mov
fimul
shl
lea
or
mov
adc
jae
cs
clc
nop
fimul
rcr
stc
int
movs
(bad)
inc
or
cwde
dec
mov
sahf
mov
cmp
js
xor
jb
xor
or
jo
dec
lea
or
mov
cwde
dec
std
and
xor
in
sbb
std
jge
dec
and
iret
cmc
retf
pushf
cmp
cwde
iret
add
cdq
mov
leave
mov
(bad)
xchg
int3
push
mov
mov
inc
xchg
iret
cmc
retf
(bad)
mov
inc
sbb
dec
add
mov
add
sbb
mov
add
jo
pop
test
adc
or
push
mov
popf
inc
sbb
out
and
(bad)
xor
xchg
or
ret
imul
fiadd
pop
test
adc
cdq
cmp
sbb
out
mov
(bad)
xor
(bad)
xor
xchg
ja
in
sti
retf
xchg
jno
jle
jno
adc
repnz
ins
pusha
enter
xlat
cmp
and
outs
mov
addr16
cld
test
dec
loopne
and
mov
adc
mov
into
xlat
xor
dec
loopne
and
xlat
xor
dec
xor
dec
mov
jle
int
adc
mov
sbb
xor
dec
loopne
and
xlat
xor
dec
loopne
and
xlat
xor
dec
xlat
outs
push
mov
mov
retf
sbb
mov
mov
xchg
mov
adc
xor
retf
xor
ret
enter
cmp
nop
xor
xchg
add
sbb
xor
mov
mov
cwde
into
arpl
std
mov
mov
mov
into
popf
cmp
cwde
int3
in
loope
(bad)
push
add
dec
mov
fwait
mov
fst
dec
je
dec
mov
cwde
imul
push
cwde
dec
jg
adc
adc
and
ja
in
sti
retf
or
xor
pop
mov
outs
lods
add
dec
neg
sti
mov
cwde
dec
or
add
loope
dec
mov
cwde
mov
fcomp
dec
mov
adc
pop
jl
(bad)
jmp
adc
dec
add
xor
dec
loop
repnz
ja
jl
adc
cwde
dec
add
inc
cmp
int
enter
cmp
mov
addr16
cld
test
dec
loop
cmp
pop
cwde
and
mov
in
stos
pusha
dec
stc
dec
mov
outs
lods
add
dec
into
in
stos
pusha
faddp
dec
mov
popf
cmp
cwde
ret
enter
adc
pop
jl
(bad)
je
movs
mov
cwde
adc
push
mov
mov
pop
or
or
mov
jl
int
outs
sub
xchg
add
int
adc
js
aad
add
in
lds
mov
mov
and
fdivr
mov
xor
mov
inc
nop
mov
add
push
mov
sbb
je
fmul
clc
pop
sbb
aam
sbb
ss
push
xchg
mov
pop
mov
inc
sub
mov
in
inc
loop
addr16
cwde
scas
(bad)
(bad)
loop
mov
jg
int
adc
add
sbb
add
aad
addr16
cld
test
dec
mov
shld
mov
xor
cmp
xor
cmp
movs
mov
xor
or
xor
dec
mov
fwait
dec
add
pop
or
xchg
stc
int
xchg
stc
mov
repz
stc
pushf
pop
lea
xor
mov
ds
sahf
or
or
mov
xchg
stc
pushf
daa
mov
mov
fistp
jbe
inc
test
mov
dec
xchg
cwde
dec
mov
ds
and
ds
or
aam
cwde
inc
ds
and
and
mov
cmps
aam
cwde
dec
add
inc
into
adc
cwde
mov
(bad)
int3
bound
pusha
int3
pusha
xor
fstp
jne
dec
mov
sbb
add
cwde
movs
test
or
pop
pop
or
cwde
dec
cld
sbb
ja
jno
ja
addr16
inc
sub
mov
int3
(bad)
jo
sbb
xor
sbb
mov
jo
jo
or
adc
ds
mov
xor
mov
fstp
cmp
and
movs
mov
lea
xor
cmp
mov
sahf
dec
std
ins
adc
mov
call
xor
jae
xor
or
leave
sbb
mov
dec
mov
in
dec
mov
cwde
dec
mov
inc
into
adc
cwde
mov
(bad)
int3
bound
sbb
add
int3
xor
dec
add
pushf
xor
dec
mov
sbb
xor
sbb
mov
cdq
cmp
mov
sbb
xor
jno
leave
sbb
mov
jo
jo
xchg
in
inc
mov
cwde
dec
mov
jb
xor
out
xor
sbb
fistp
mov
(bad)
ja
pushf
dec
mov
sbb
jne
addr16
push
mov
mov
retf
sbb
into
popf
cmp
cwde
(bad)
std
cmp
mov
or
(bad)
ja
fwait
dec
mov
into
ja
fwait
dec
mov
or
je
bound
cwde
dec
mov
out
xchg
popa
fcomp
inc
ja
in
sti
retf
stc
frstor
pop
lods
mov
fmul
jmp
or
addr16
into
popf
cmp
cwde
inc
ds
cwde
dec
cld
push
movs
cmps
mov
cwde
cmp
ficom
mov
and
or
pushf
(bad)
xor
movs
scas
mov
xchg
int3
cs
les
ret
cdq
xchg
mov
jmp
lahf
add
int3
das
cdq
(bad)
ffree
adc
sub
(bad)
xor
mov
inc
adc
inc
into
adc
add
cdq
xchg
mov
sbb
dec
xor
xchg
fs
(bad)
cwde
into
popf
cmp
cwde
int3
inc
into
mov
add
loope
cmps
mov
jno
mov
dec
mov
retf
sbb
rcr
repz
cmp
int3
dec
cmp
pop
sbb
aam
adc
imul
mov
mov
nop
ja
cwde
cmps
xor
dec
mov
cwde
dec
or
mov
xor
jnp
addr16
mov
cmp
cwde
dec
or
cmp
fisub
or
cwde
dec
cld
sub
repnz
mov
inc
mov
mov
mov
lea
or
arpl
stc
sbb
mov
addr16
ds
or
shl
cwde
les
mov
(bad)
xchg
and
das
adc
or
mov
addr16
and
(bad)
leave
xor
shl
cwde
les
mov
fmul
mov
mov
ds
mov
xchg
mov
dec
push
mov
dec
mov
sbb
mov
xor
mov
lock
or
cwde
dec
xchg
xchg
stc
sbb
lock
add
cwde
(bad)
sbb
into
popf
cmp
cwde
iret
xor
xor
dec
pusha
push
popa
mov
mov
addr16
inc
sub
mov
addr16
pop
lock
dec
ror
dec
enter
jl
addr16
into
jae
loopne
mov
bound
shl
cwde
(bad)
dec
mov
dec
dec
xlat
call
into
(bad)
dec
xor
mov
pop
mov
addr16
pusha
outs
ror
popf
cmp
cwde
int3
sub
xor
mov
cwde
daa
ja
cwde
dec
ja
je
ja
addr16
push
out
addr16
bound
add
dec
inc
cli
int3
sub
xor
ror
out
addr16
jae
mov
jmp
movs
mov
jp
mov
mov
or
jo
addr16
cmp
into
ja
pushf
dec
mov
into
ja
fwait
dec
mov
(bad)
push
xor
pop
mov
adc
or
addr16
jg
mov
retf
mov
out
stc
ja
cmps
or
mov
mov
mov
mov
cwde
les
sbb
mov
xor
mov
mov
mov
into
addr16
cld
test
dec
ja
inc
nop
ja
jo
fbstp
cwde
cmps
enter
xchg
mov
adc
adc
js
into
addr16
sub
xor
fidivr
mov
rcr
dec
dec
rcr
inc
cdq
mov
addr16
movs
ins
mov
mov
pop
scas
mov
aad
mov
sbb
into
sbb
into
xor
xor
lea
or
push
into
addr16
std
push
adc
addr16
dec
add
lea
xor
mov
mov
aaa
mov
adc
adc
addr16
mov
xchg
ja
adc
adc
addr16
repz
sbb
les
mov
addr16
mov
addr16
or
mov
addr16
or
pop
test
or
popa
addr16
push
out
addr16
push
iret
dec
mov
addr16
lea
ja
fcmovnb
or
mov
addr16
or
mov
lods
push
into
addr16
std
repnz
mov
mov
sti
push
into
mov
retf
mov
ja
jb
ficomp
dec
mov
fisub
out
addr16
stos
addr16
cld
test
dec
xchg
mov
adc
push
out
addr16
mov
adc
add
fidivr
addr16
rcr
fmulp
xor
fidivr
mov
xor
jb
xor
mov
cmp
or
mov
inc
mov
sbb
mov
cwde
les
ds
mov
cwde
dec
mov
iret
cmc
cmp
dec
mov
or
adc
jl
addr16
and
cwde
int3
(bad)
into
adc
retf
addr16
mov
xchg
ja
cwde
int3
and
xor
cli
ins
out
addr16
rcl
mov
in
addr16
sbb
std
das
adc
mov
in
pop
add
sbb
std
cmp
mov
mov
in
inc
(bad)
ficom
lea
or
sub
addr16
rcr
xchg
ja
sbb
sub
addr16
ds
mov
cwde
dec
mov
mov
dec
mov
sbb
mov
movs
or
sbb
dec
jo
push
or
into
jmp
into
cdq
inc
movs
cmp
mov
addr16
ss
iret
mov
cdq
dec
mov
cwde
cmp
xor
iret
mov
fwait
dec
mov
cwde
cmp
cwde
dec
mov
mov
popf
dec
mov
cwde
cmp
xchg
inc
dec
dec
cmp
cmp
addr16
into
sub
mov
in
mov
fldz
mov
into
sbb
push
into
addr16
cld
jae
jmp
or
mov
adc
imul
sbb
pusha
out
addr16
xor
ja
ja
and
dec
mov
cwde
cmp
cmp
cwde
cmps
cmps
int
mov
mov
mov
ds
mov
xchg
mov
dec
push
mov
dec
mov
sbb
adc
push
mov
mov
retf
sbb
mov
pusha
mov
sar
sub
xor
cmp
xor
or
fld
in
std
adc
dec
mov
inc
ret
and
dec
mov
imul
dec
dec
ret
and
dec
mov
imul
pop
pusha
push
mov
cwde
iret
mov
in
inc
retf
mov
mov
mov
cdq
lea
fs
mov
iret
cwde
movs
sahf
mov
data16
and
cmp
ficom
iret
cmc
iret
mov
mov
cmp
xor
dec
xchg
lea
mov
sbb
jo
fmul
mov
mov
ds
or
dec
mov
in
xchg
cwde
dec
mov
sbb
ja
xchg
stc
retf
xor
lea
rcr
inc
or
popf
cmp
xor
xchg
stc
retf
xor
mov
in
inc
or
lahf
int3
jo
in
dec
or
add
dec
sbb
(bad)
xchg
stc
retf
xor
jb
xor
or
xchg
stc
mov
dec
mov
in
inc
jle
cdq
ja
xor
sbb
jne
sbb
jne
xchg
int
into
addr16
je
dec
arpl
adc
int
mov
lea
ja
jae
or
or
cli
aad
and
fisttp
ds
mov
cwde
dec
mov
int
cdq
inc
ds
adc
push
mov
mov
adc
or
movs
int3
and
dec
mov
dec
pusha
ss
mov
fmul
mov
cwde
cmp
pop
movs
xchg
lahf
mov
push
cdq
dec
arpl
xlat
int3
ja
out
add
test
adc
ins
pop
sbb
aam
dec
test
cwde
cmps
test
cwde
dec
fisub
mul
cs
jo
jg
or
mov
pop
ret
into
mov
cmp
mov
(bad)
retf
addr16
fst
mov
mov
mov
mov
push
and
sbb
loop
repnz
ja
nop
and
mov
(bad)
adc
adc
fisub
out
cs
into
jg
cdq
dec
mov
daa
or
cwde
dec
loop
repnz
loop
lock
mov
sbb
fidiv
cwde
(bad)
dec
mov
mov
sub
xor
xchg
int3
test
adc
jl
pop
jle
fcmove
and
fnstenv
cwde
(bad)
dec
mov
pop
fcomp
cmps
dec
pusha
cwde
dec
add
addr16
fwait
dec
mov
int3
cmc
cmp
fld
je
movs
mov
mov
(bad)
std
int
cmps
inc
pusha
cwde
dec
fcompp
jb
mov
adc
je
sahf
(bad)
jo
pusha
(bad)
dec
outs
(bad)
adc
repnz
ins
pusha
retf
sbb
mov
mov
leave
adc
mov
cwde
and
mov
dec
mov
cmp
push
mov
adc
mov
sbb
dec
fcmove
and
mov
into
fnstenv
cwde
(bad)
int
adc
or
adc
arpl
mov
cmp
cwde
dec
loop
adc
dec
loopne
js
mov
neg
xor
dec
mov
push
fdiv
cwde
test
adc
fisttp
and
cwde
mov
add
repnz
loopne
cwde
dec
mov
and
mov
cwde
(bad)
ja
nop
cmps
push
not
mov
(bad)
adc
jl
pop
int3
jbe
in
dec
mov
xor
dec
loop
into
cmps
ins
popa
cwde
dec
loop
adc
cmp
fldenv
mov
leave
adc
mov
test
xchg
adc
add
int
jno
add
and
dec
mov
inc
(bad)
push
ficomp
dec
dec
jbe
xor
xchg
daa
leave
rcr
dec
pusha
dec
retf
dec
mov
cwde
dec
loopne
js
mov
repnz
xor
mov
ds
xchg
popa
lock
jae
cmps
fsub
dec
or
nop
or
ins
xchg
xor
movs
xor
mov
xchg
xor
lock
bound
(bad)
int
adc
je
(bad)
adc
repnz
ins
pusha
retf
sbb
mov
xchg
mov
int
pop
dec
dec
sbb
je
mov
scas
retf
mov
mov
xchg
retf
scas
fidiv
cwde
int3
dec
cmp
jbe
inc
jno
scas
rcr
dec
pusha
dec
dec
mov
or
dec
dec
mov
ret
xchg
adc
fisub
iret
(bad)
or
(bad)
dec
push
pop
or
cwde
int3
in
fstp
int3
in
aad
ret
adc
dec
xor
cwde
dec
mov
cmp
dec
jg
adc
push
mov
cdq
cmp
sub
clc
enter
ja
mov
push
cwde
dec
jg
adc
push
mov
addr16
ds
mov
int
sbb
ja
in
dec
or
or
cmp
xor
and
sbb
ja
in
test
je
inc
aas
jno
(bad)
int
jae
or
jle
mov
xchg
stc
int
xchg
stc
int3
xor
int3
dec
das
cdq
or
in
mov
in
call
iret
cwde
cmp
inc
mov
add
adc
test
das
dec
add
aas
and
dec
mov
xchg
clc
fst
xchg
loopne
xor
stos
add
cdq
xchg
add
adc
pusha
mov
xchg
clc
(bad)
scas
add
int
adc
test
das
jle
xchg
dec
mov
rcl
stos
add
aas
jno
(bad)
fnstsw
xchg
clc
fidivr
mov
mov
int
jae
add
cdq
xchg
add
(bad)
adc
clc
pop
das
sbb
cwde
pop
enter
or
fmul
mov
push
lahf
ins
or
dec
mov
mov
sbb
or
sbb
fistp
mov
or
sbb
fistp
mov
or
sbb
inc
fistp
mov
or
sbb
or
pop
rcr
dec
sbb
or
dec
mov
test
sbb
or
sbb
or
mov
je
sbb
or
sbb
(bad)
cdq
int3
addr16
mov
jmp
shl
popf
xor
movs
adc
push
sbb
pushf
fistp
mov
or
mov
mov
or
mov
or
sbb
or
or
xchg
fistp
mov
or
std
stc
or
sbb
or
out
fsubr
pop
jne
cwde
pop
enter
enter
lahf
ins
cwde
dec
xor
retf
inc
dec
jae
das
sbb
cwde
pop
enter
mov
or
sbb
or
sbb
fistp
mov
fmul
mov
or
mov
dec
fistp
mov
or
sbb
or
sbb
or
sbb
loopne
lahf
ins
or
mov
pusha
fistp
mov
or
sbb
or
jo
or
sbb
fistp
mov
fimul
mov
or
mov
dec
fistp
mov
or
sbb
or
sbb
or
sbb
fild
jae
jle
mov
pusha
fistp
mov
or
sbb
fistp
mov
mov
add
sbb
add
int
inc
int
pop
or
jno
mov
cdq
lea
fs
push
pop
or
cwde
cmps
push
xor
mov
ja
rol
mov
arpl
aaa
pop
or
jae
pusha
(bad)
xlat
dec
mov
out
mov
xchg
stc
(bad)
adc
jno
pop
(bad)
int
add
(bad)
and
in
int
or
fnsave
clc
inc
mov
inc
mov
push
xor
xchg
bound
mov
xchg
xor
xchg
mov
fadd
and
test
and
or
dec
mov
daa
sbb
cwde
dec
add
sahf
(bad)
dec
mov
or
adc
int
xchg
stc
(bad)
cdq
lahf
fcomp
adc
mov
repnz
add
jmp
loop
mov
sbb
or
mov
cwde
sub
push
pop
mov
xchg
int
into
addr16
outs
ret
xchg
adc
fisub
mov
xchg
add
xor
add
outs
movs
mov
pop
mov
lock
push
mov
mov
sbb
mov
dec
mov
dec
fcomp
dec
mov
adc
cmp
into
sbb
dec
ds
mov
cwde
inc
ds
ja
outs
xor
pop
mov
and
jb
mov
dec
add
xlat
(bad)
cmc
fxch
inc
ds
ja
outs
xor
mov
and
dec
mov
and
mov
xor
(bad)
js
popf
mov
fxch
cmps
xor
or
sub
mov
dec
add
lahf
mov
daa
sti
xor
mov
and
repnz
pop
or
sub
and
xor
jmp
mov
and
imul
mov
popf
in
and
int3
int
pushf
out
pop
mov
dec
mov
repnz
or
dec
cmps
in
cwde
dec
add
in
jl
dec
add
aas
into
adc
push
xchg
cwde
add
repnz
movs
xchg
push
cwde
dec
pusha
jb
dec
mov
aad
mov
addr16
dec
ds
popf
dec
ror
xchg
xor
pop
and
retf
mov
retf
cmps
push
cmc
xchg
out
inc
mov
dec
add
lahf
mov
stos
mov
xor
mov
retf
pop
or
sub
and
xor
jmp
mov
adc
popf
in
and
int3
int
pushf
out
pop
mov
dec
mov
repnz
or
inc
(bad)
jg
movs
mov
fs
push
mov
push
cmp
repnz
inc
mov
outs
dec
mov
and
sbb
jp
pushf
movs
jl
retf
inc
push
mov
dec
add
xchg
dec
mov
pushf
int3
in
add
jo
add
fwait
dec
dec
mov
dec
fcomp
xor
mov
pop
call
xor
cmps
cmp
add
jnp
(bad)
dec
mov
ret
enter
into
mov
aad
xor
xor
push
shl
sbb
ror
add
arpl
cwde
mov
add
(bad)
adc
clc
pop
sbb
aam
mov
(bad)
icebp
push
add
cmp
(bad)
loope
mov
jle
or
mov
sub
mov
test
js
push
add
xor
pushf
lds
push
add
outs
movs
dec
retf
lahf
mov
mov
add
rol
mov
push
add
adc
ja
addr16
je
dec
arpl
jo
ret
xor
cmc
pop
jl
pop
fnstcw
bound
enter
mov
sbb
ja
addr16
je
dec
add
add
or
xor
ret
xor
dec
std
aas
pop
retf
addr16
neg
jge
mov
mov
pop
or
retf
mov
or
popa
jo
ret
xor
and
mov
dec
mov
retf
addr16
(bad)
mov
adc
jl
addr16
inc
nop
test
fstp
dec
add
into
enter
cwde
dec
loopne
and
mov
mov
rcr
jl
addr16
repnz
into
popf
cmp
cwde
sbb
in
inc
or
jbe
addr16
pusha
mov
dec
mov
pop
loopne
inc
or
jbe
addr16
loopne
cwde
dec
or
retf
dec
mov
and
shl
mov
jne
addr16
dec
into
popf
cmp
cwde
daa
dec
out
fimul
cld
inc
or
jbe
addr16
loopne
cwde
dec
or
mov
daa
in
fimul
dec
inc
or
mov
cwde
int3
dec
sbb
xlat
outs
ret
xchg
adc
fisub
cmp
adc
ja
in
sti
retf
mov
(bad)
adc
jl
pop
int3
in
int
ret
enter
enter
cmps
dec
xchg
repnz
loop
repnz
ja
xchg
mov
cmp
shl
(bad)
jns
push
mov
mov
dec
mov
int
cmp
repnz
loop
cmp
mov
push
ror
mov
jo
xor
mov
xor
mov
mov
mov
fnstenv
cwde
mov
and
cwde
and
pushf
into
in
pop
ja
xchg
mov
cmp
mov
cwde
int3
dec
sub
adc
adc
mov
mov
jo
jg
int
adc
add
inc
mov
sbb
dec
mov
sbb
fnstsw
daa
neg
(bad)
(bad)
jo
pusha
(bad)
dec
mov
fnsave
mov
call
xor
test
in
inc
pusha
push
dec
mov
pop
cmp
in
push
ja
mov
ja
mov
shl
inc
dec
inc
xchg
mov
int
jb
xor
(bad)
jo
pusha
(bad)
dec
into
in
mov
sbb
dec
mov
pop
pmovmskb
pop
sbb
aam
mov
std
and
adc
nop
mov
add
pop
sbb
dec
aaa
cwde
(bad)
jo
pusha
(bad)
dec
mov
or
inc
xchg
mov
cmp
iret
xor
jle
fisub
sbb
xor
dec
ja
mov
iret
xor
mov
int
mov
xor
mov
int
cli
iret
xor
movs
test
outs
test
je
(bad)
dec
outs
mov
popa
into
sbb
xchg
(bad)
sub
xor
or
pusha
fmul
popa
jo
into
xor
mov
leave
adc
mov
fnsave
enter
mov
dec
mov
repnz
loop
repnz
loopne
inc
or
mov
cmp
jg
in
dec
mov
pop
cmp
lods
mov
jae
cmps
shl
add
mov
cwde
adc
clc
pop
neg
inc
add
stc
mov
add
adc
lods
xor
fimul
popa
nop
mov
mov
iret
(bad)
std
cmp
adc
adc
je
(bad)
dec
sbb
(bad)
adc
mov
in
popa
add
mov
fdivr
cmp
or
mov
int
dec
xor
sbb
int
dec
pop
mov
(bad)
mov
cwde
cmp
inc
cmp
inc
add
jns
jae
cmp
pop
add
mov
sbb
je
mov
packsswb
adc
sub
cwde
dec
add
sbb
je
dec
cmp
xchg
mov
cmp
or
je
pop
dec
mov
cdq
mov
xor
xchg
adc
fisub
adc
adc
dec
or
mov
(bad)
fmul
mov
dec
test
not
into
retf
xor
mov
mov
sbb
cmp
dec
mov
xor
pusha
cmp
test
cwde
dec
out
neg
mov
xor
xchg
movs
je
leave
and
xor
cdq
or
stc
sbb
leave
and
xor
add
pop
movs
mov
sbb
jl
lock
pusha
dec
fimul
mov
pop
out
into
fnsave
mov
pusha
cmp
xlat
outs
ret
xchg
adc
mov
out
mov
retf
sbb
(bad)
aam
je
pop
test
ja
addr16
or
ret
addr16
popa
cmp
mov
cmp
(bad)
dec
cmp
pop
pop
cmps
mov
mov
jbe
cwde
cmp
xor
inc
mov
cmp
or
xor
retf
gs
sub
mov
iret
addr16
or
mov
addr16
jmp
adc
pop
into
gs
lea
sbb
jno
sbb
xor
mov
mov
(bad)
std
xor
dec
mov
cwde
cmps
xor
dec
add
mov
add
adc
cmp
(bad)
dec
mov
mov
mov
dec
mov
dec
pop
nop
les
xor
pusha
pop
push
mov
mov
inc
loopne
inc
or
pusha
mov
pop
inc
loopne
inc
or
ja
cmps
shl
or
nop
cmps
mov
cwde
dec
xor
cwde
dec
mov
popf
xor
xor
je
data16
data16
mov
inc
add
test
inc
int
cwde
test
popa
int3
jb
in
pusha
retf
mov
add
je
data16
pop
cmps
nop
retf
cmps
jo
cwde
dec
or
mov
xor
cwde
dec
mov
popf
xor
xor
je
data16
(bad)
fmul
mov
inc
loopne
inc
or
ja
cmps
ins
jne
dec
or
nop
cmps
sub
dec
xor
cwde
dec
mov
popf
xor
xor
je
data16
mov
dec
mov
fmul
mov
mov
cmc
adc
int3
xor
dec
adc
popa
sbb
jbe
iret
daa
mov
fimul
fsin
or
into
in
imul
inc
or
ja
addr16
loopne
inc
or
int3
xor
mov
pusha
adc
dec
mov
add
cmc
and
mov
cmp
(bad)
or
pop
xchg
nop
retf
cli
je
data16
push
fmul
mov
inc
pusha
fcmovu
dec
mov
add
cmc
and
mov
cmp
fst
mov
xor
je
data16
(bad)
fisttp
mov
inc
pusha
sbb
mov
add
cmc
adc
retf
xor
dec
adc
popa
sbb
jbe
iret
daa
mov
fimul
fld
or
xor
mov
xor
add
mov
fisttp
mov
mov
add
push
jae
ret
addr16
data16
retf
xor
mov
popa
cmp
mov
iret
addr16
loopne
inc
or
retf
xor
jle
xor
dec
adc
popa
int3
jb
in
pusha
fisttp
mov
dec
mov
add
je
data16
pop
cmps
nop
retf
cmps
xchg
jb
dec
or
mov
js
jle
or
mov
cwde
dec
xor
cwde
dec
mov
popf
xor
xor
je
data16
fisttp
mov
inc
pusha
cli
fimul
mov
mov
cmc
and
test
cwde
mov
int
mov
fnstenv
mov
sbb
mov
and
xor
mov
dec
mov
js
fimul
test
into
jo
retf
int3
dec
cmp
mov
loopne
inc
or
add
daa
adc
fimul
(bad)
or
pushf
fld
or
mov
cwde
(bad)
jg
sbb
inc
out
fimul
test
into
jo
retf
int3
dec
cmp
retf
test
popa
int3
jb
in
loopne
js
mov
sub
cmps
shl
dec
or
nop
cmps
pushf
jae
dec
xor
cwde
dec
mov
popf
xor
xor
sub
xor
les
data16
jae
sbb
(bad)
mov
pop
or
xchg
sbb
dec
into
gs
fcom
dec
mov
pop
retf
addr16
mov
sbb
xor
mov
xor
add
retf
gs
mov
mov
into
jmp
add
repnz
into
gs
xchg
mov
cwde
(bad)
jg
sbb
xor
cwde
dec
mov
outs
lods
dec
fistp
mov
mov
iret
ret
cwde
mov
lock
cwde
ret
cwde
mov
data16
leave
xor
fnsave
cwde
mov
ja
addr16
dec
into
sbb
into
xor
mov
dec
mov
sbb
ja
addr16
lds
ja
in
push
add
into
enter
addr16
popa
lock
cwde
pop
pusha
(bad)
mov
push
pusha
into
fmul
mov
mov
cmc
and
adc
cwde
mov
int
mov
fld
mov
xor
inc
mov
cwde
(bad)
jg
sbb
inc
out
fimul
test
into
jo
enter
dec
cmp
mov
pusha
sahf
fmul
mov
mov
cmc
and
mov
cmp
fst
mov
sbb
ja
addr16
mov
cwde
mov
lds
ja
sbb
jbe
cmc
addr16
ds
jbe
addr16
or
mov
sbb
(bad)
dec
fsub
dec
mov
adc
xchg
mov
cmps
shl
dec
or
inc
or
cdq
dec
mov
pop
(bad)
int
popf
dec
inc
xor
mov
sbb
mov
cwde
les
mov
addr16
and
cwde
ret
addr16
popa
jo
enter
dec
cmp
gs
stc
addr16
or
adc
ja
addr16
js
push
dec
mov
addr16
xchg
addr16
ins
mov
into
enter
cwde
dec
add
into
enter
addr16
cmc
pushf
(bad)
or
into
sub
mov
sub
js
gs
mov
mov
into
enter
fimul
fnstcw
jo
xor
mov
xor
inc
mov
cwde
(bad)
jg
sbb
aad
fimul
test
into
jo
mov
cwde
int3
dec
cmp
mov
pusha
push
dec
mov
add
cmc
and
test
cwde
mov
int
mov
(bad)
jo
xor
mov
xor
inc
mov
cwde
(bad)
jg
sbb
js
fimul
test
into
jo
mov
cwde
int3
dec
cmp
js
gs
repnz
push
sahf
xor
mov
mov
addr16
ja
pusha
mov
into
retf
cmps
mov
cmc
xchg
(bad)
or
cmp
or
pop
mov
cli
je
data16
cmps
dec
mov
cmps
dec
mov
add
cmc
and
adc
cwde
mov
int
mov
fnstcw
mov
sbb
mov
and
xor
mov
dec
mov
inc
out
fimul
test
into
jo
mov
cwde
int3
dec
cmp
mov
dec
into
gs
div
mov
cwde
test
popa
int3
jb
in
loopne
js
mov
sub
cmps
add
cwde
dec
or
nop
daa
mov
test
into
jo
mov
cwde
int3
dec
cmp
mov
cwde
test
popa
int3
jb
in
pusha
adc
dec
mov
add
je
data16
pop
cmps
nop
retf
cmps
test
cwde
dec
or
mov
xor
cwde
dec
mov
popf
xor
xor
je
data16
cmps
dec
mov
and
jo
mov
cwde
test
popa
int3
jb
in
loopne
inc
or
ja
cmps
jl
cwde
dec
or
nop
cmps
cmp
dec
xor
cwde
dec
mov
popf
xor
xor
je
data16
(bad)
movs
dec
mov
movs
dec
mov
add
cmc
adc
mov
cwde
imul
xor
sbb
jbe
iret
daa
mov
fimul
fldz
jb
xor
mov
xor
je
data16
mov
dec
mov
mov
add
jo
mov
cwde
test
popa
int3
jb
in
loopne
js
mov
sub
cmps
aam
cwde
dec
or
nop
daa
xchg
out
fimul
test
into
jo
mov
cwde
int3
dec
cmp
mov
cwde
test
popa
int3
jb
in
loopne
js
mov
sub
cmps
lods
or
dec
or
nop
daa
xchg
out
fimul
test
into
jo
mov
cwde
int3
dec
cmp
mov
pusha
mul
mov
add
cmc
and
mov
cmp
fnstcw
mov
sbb
ja
addr16
add
daa
mov
fimul
fnstcw
jae
xor
mov
xor
inc
mov
cwde
(bad)
jg
sbb
js
fimul
test
into
jo
mov
cwde
int3
dec
cmp
dec
push
jae
mov
int
mov
(bad)
jae
xor
mov
xor
inc
mov
cwde
(bad)
jg
sbb
js
fimul
test
into
jo
mov
cwde
int3
dec
cmp
cmp
xor
(bad)
ja
addr16
dec
fld
cmps
mov
cwde
(bad)
jg
adc
mov
iret
les
lock
push
jae
sbb
movs
dec
mov
mov
dec
mov
add
cmc
and
mov
cmp
fst
mov
xor
je
data16
retf
mov
mov
dec
mov
add
cmc
and
mov
cmp
(bad)
mov
sbb
int
cwde
cmps
add
cwde
dec
xor
cwde
dec
mov
popf
xor
xor
sub
xor
les
data16
jae
sbb
mov
pop
loopne
inc
or
ja
cmps
add
cwde
dec
or
nop
and
mov
and
mov
cmp
xor
retf
gs
test
cli
je
data16
mov
dec
mov
ret
addr16
enterw
addr16
into
sub
cmps
call
test
jne
jo
mov
int
mov
fnstcw
js
xor
mov
fcmovnu
push
js
xor
retf
gs
outs
ret
xchg
adc
mov
iret
lock
inc
add
outs
test
mov
mov
into
adc
arpl
xchg
stc
int
enter
fimul
mov
mov
into
enter
cwde
dec
add
test
dec
loopne
inc
or
jbe
addr16
loopne
cwde
dec
or
outs
mov
xchg
mov
mov
mov
jmp
jae
daa
ret
dec
loopne
cwde
dec
or
dec
mov
push
jae
daa
push
in
fimul
fiadd
pop
fwait
dec
mov
addr16
dec
adc
mov
xlat
clc
pop
sbb
aam
mov
(bad)
lock
test
jmp
fld
or
scas
mov
addr16
int
adc
xor
ret
jne
addr16
jo
pusha
(bad)
dec
add
int
adc
pusha
jp
dec
mov
call
into
sbb
scas
dec
mov
addr16
xchg
gs
fnstcw
sbb
into
addr16
popf
ret
cdq
or
ja
adc
fcompp
call
int3
addr16
test
mov
into
jo
mov
inc
gs
into
sub
cmps
push
fs
les
mov
adc
ret
cdq
ret
cdq
or
ja
sbb
loopne
dec
or
mov
adc
sbb
addr16
(bad)
je
mov
repnz
loop
adc
mov
fstp
sbb
push
mov
dec
mov
adc
mov
pop
aaa
xchg
retf
sti
push
jae
daa
mov
cwde
iret
pusha
daa
push
imul
ds
xor
dec
mov
xchg
mov
into
lock
mov
cwde
ret
data16
popa
adc
mov
fsqrt
jnp
xor
sbb
addr16
test
mov
into
addr16
add
addr16
test
mov
into
addr16
adc
addr16
test
mov
into
into
ret
gs
popa
jo
jp
addr16
dec
adc
retf
addr16
icebp
in
inc
fcompp
cmps
jp
xor
dec
mov
xchg
retf
retf
addr16
fnstenv
ja
xor
mov
leave
adc
ja
enter
data16
popa
jo
mov
cwde
cmps
jns
addr16
mov
mov
into
repnz
xor
mov
(bad)
mov
pop
mov
jne
dec
mov
sbb
dec
mov
cwde
sub
jo
ja
cwde
dec
or
cmp
addr16
xor
mov
mov
mov
into
enter
addr16
mov
addr16
add
into
enter
cwde
and
mov
ret
data16
popa
repnz
pusha
(bad)
lods
dec
mov
pop
inc
or
cwde
dec
mov
sub
cmps
xor
cwde
dec
add
mov
add
addr16
sbb
addr16
and
mov
xchg
retf
retf
addr16
fnstenv
js
xor
mov
into
addr16
arpl
sbb
add
into
enter
fimul
adc
inc
dec
inc
and
xor
dec
mov
addr16
add
dec
cli
stc
xchg
xchg
cld
fs
lock
dec
or
cmp
xor
mov
xor
mov
into
enter
lods
dec
mov
daa
loop
fimul
mov
mov
into
enter
addr16
cmc
xchg
jb
into
cwde
dec
std
adc
jmp
test
sub
xor
mov
cmp
jmp
pop
xlat
mov
test
ja
jo
mov
das
cwde
dec
jg
adc
clc
int3
addr16
test
clc
add
cli
sub
addr16
repnz
dec
mov
sub
cmps
sub
cwde
dec
add
inc
xor
dec
mov
jg
or
mov
push
lea
je
(bad)
(bad)
aad
daa
leave
xchg
faddp
jo
pusha
(bad)
dec
into
in
inc
pusha
(bad)
stos
dec
mov
data16
jo
pusha
(bad)
dec
into
in
inc
pusha
mov
sub
fs
and
mov
push
adc
jle
jo
mov
push
adc
jl
das
or
das
sbb
inc
aas
outs
dec
pop
ds
sbb
pop
mov
mov
into
addr16
dec
mov
pop
int3
cmc
sub
adc
js
sahf
and
fdivr
and
xor
mov
sbb
mov
cmp
adc
pop
pusha
push
test
data16
pop
mov
and
or
int
or
add
or
fmul
ds
sbb
inc
aas
outs
ret
fwait
pop
pusha
fisubr
mov
pop
cwde
sbb
ror
js
fldenv
mov
adc
mov
repnz
fnstcw
jge
xor
cmps
mov
fld
jle
xor
or
(bad)
adc
repnz
ins
mov
push
mov
jo
mov
adc
or
mov
leave
adc
mov
jg
or
mov
js
ja
xchg
mov
addr16
add
into
enter
fimul
repnz
mov
sbb
mov
cwde
into
jg
mov
bound
dec
shl
pusha
mov
pop
inc
xor
push
scas
ja
cmp
jg
xor
mov
(bad)
adc
cmp
addr16
imul
mov
jno
dec
mov
pop
add
into
enter
mov
mov
pop
cmp
pop
sbb
test
into
jo
mov
cmp
cli
inc
shl
ja
xchg
cmps
pop
push
cwde
dec
mov
mov
jo
xor
adc
push
mov
mov
cwde
dec
pusha
mov
into
sbb
ins
nop
icebp
and
push
or
mov
mov
fistp
dec
mov
jo
mov
mov
mov
mov
dec
mov
dec
pop
nop
(bad)
push
xor
pusha
adc
ja
pop
inc
loopne
inc
or
mov
cmp
mov
add
mov
add
lock
cwde
ret
js
ja
jo
mov
cmp
mov
xor
int3
jb
in
loopne
js
mov
pop
pusha
into
stos
dec
mov
stos
dec
mov
add
cmc
sbb
mov
xor
sbb
ja
iret
daa
shr
fimul
mov
cmps
sub
cwde
dec
or
mov
xor
cwde
dec
mov
popf
xor
adc
mov
fld
jl
xor
mov
mov
fimul
mov
scas
ja
enter
cwde
dec
or
nop
cmps
enter
xor
cwde
dec
mov
popf
xor
adc
mov
fld
jl
xor
mov
xor
inc
mov
cwde
(bad)
jg
sbb
add
dec
xor
dec
mov
and
sbb
imul
into
sbb
stos
dec
mov
mov
call
scas
ja
enter
fimul
mov
scas
ja
enter
cwde
dec
or
mov
js
jle
or
mov
cwde
dec
xor
cwde
dec
mov
popf
xor
adc
mov
fst
mov
sbb
retf
retf
addr16
fldenv
jge
xor
mov
xor
inc
mov
cwde
(bad)
jg
sbb
js
fimul
mov
scas
ja
enter
cwde
dec
or
nop
daa
mov
fimul
mov
scas
ja
enter
cwde
dec
or
nop
(bad)
js
jle
or
mov
cwde
dec
xor
cwde
dec
mov
popf
xor
xor
sub
xor
ret
js
ja
lock
push
jae
ret
js
ja
jo
mov
and
push
jae
ret
js
ja
jo
mov
cmp
mov
xor
int3
jb
in
loopne
js
mov
pop
pusha
into
test
inc
loopne
inc
or
push
fisubr
inc
add
test
out
mov
xor
int3
jb
in
loopne
js
mov
pop
pusha
mov
inc
loopne
inc
or
push
call
pusha
push
test
dec
mov
add
cmc
and
cwde
ret
js
ja
jo
mov
cmp
mov
ja
xchg
ret
js
ja
lock
push
jae
ret
js
ja
jo
mov
and
mov
xor
int3
jb
in
loopne
js
mov
pop
pusha
or
inc
loopne
inc
or
push
push
test
inc
pusha
shr
dec
mov
add
cmc
and
cwde
ret
js
ja
jo
mov
cmp
jo
xor
mov
dec
fnstenv
jg
xor
cmps
mov
cwde
(bad)
jg
adc
mov
iret
ret
js
ja
lock
push
jae
ret
js
ja
jo
mov
and
mov
xor
int3
jb
in
loopne
js
mov
pop
pusha
stos
test
mov
inc
or
push
mov
dec
mov
sub
mov
jo
mov
xor
int3
jb
in
loopne
js
mov
pop
pusha
push
dec
mov
test
mov
add
cmc
sbb
mov
xor
sbb
ja
iret
daa
shr
fimul
mov
cmps
je
cwde
dec
or
mov
pop
in
fimul
mov
scas
ja
enter
cwde
dec
or
nop
and
mov
and
mov
cmps
add
fs
ja
sbb
add
into
enter
cwde
dec
loop
adc
mov
popa
adc
mov
into
sub
cmps
ins
sbb
fs
ja
jo
mov
jno
dec
add
mov
add
(bad)
adc
clc
pop
sbb
aam
mov
(bad)
lock
arpl
leave
outs
test
mov
mov
into
adc
ja
cwde
jle
mov
cmp
aad
retf
cmps
sub
nop
ret
cdq
(bad)
sbb
mov
sbb
(bad)
dec
(bad)
mov
enter
cwde
dec
pusha
or
mov
sahf
mov
out
dec
pusha
inc
mov
mov
addr16
or
popa
jo
cmps
xor
dec
add
into
enter
fimul
test
pop
call
into
addr16
dec
adc
xor
dec
mov
cwde
ret
data16
popa
adc
mov
fldenv
mov
leave
adc
ja
retf
ret
gs
popa
jo
jb
addr16
dec
cmp
jmp
out
push
jae
ret
data16
popa
jo
cmps
xor
mov
popa
adc
mov
(bad)
popa
mov
jo
ins
into
addr16
or
mov
pop
and
or
popa
jo
cmps
xor
mov
mov
mov
into
fmul
xor
ins
iret
addr16
xor
mov
into
cwde
cmp
addr16
xor
mov
pop
cwde
dec
add
into
enter
addr16
mov
addr16
add
into
enter
cwde
and
mov
ret
data16
popa
repnz
pusha
into
mov
mov
pop
inc
or
cdq
dec
mov
sub
cmps
dec
sbb
mov
mul
sub
addr16
and
mov
xchg
retf
retf
addr16
fldcw
bound
neg
dec
arpl
sbb
add
into
enter
fimul
sbb
inc
dec
inc
and
xor
dec
mov
addr16
add
dec
cli
stc
xchg
mov
mov
lock
js
cwde
cmps
fcomp
cwde
dec
add
mov
add
lock
mov
cwde
ret
fs
popa
into
cmps
inc
sbb
and
or
popa
jo
cmp
addr16
dec
cmp
cwde
inc
or
cwde
dec
mov
pop
fcmovnu
sub
cmp
inc
or
cwde
dec
mov
mov
movs
gs
mov
addr16
pusha
jle
dec
mov
cwde
ret
gs
popa
addr16
sbb
addr16
jge
mov
mov
gs
(bad)
mov
lock
push
jae
cmps
xchg
sbb
xchg
retf
cmps
jo
cwde
dec
or
mov
inc
mov
sub
dec
pusha
into
mov
mov
addr16
arpl
retf
(bad)
dec
xor
ja
or
ja
jo
push
into
addr16
dec
cmp
add
ja
sbb
cmp
fld
mov
cwde
sbb
mov
mov
sbb
dec
mov
cwde
ret
gs
popa
jo
mov
xor
dec
pop
cwde
mov
xchg
gs
fldenv
cli
sub
addr16
cs
mov
movs
mov
cwde
adc
push
lea
je
(bad)
(bad)
aad
daa
mov
dec
iret
into
dec
mov
sbb
leave
cmp
data16
adc
jo
int3
dec
cwde
arpl
punpcklbw
dec
mov
mov
mov
xor
mov
test
cwde
dec
ja
xchg
ret
cdq
sbb
mov
push
scas
xor
and
(bad)
jno
and
cwde
sbb
mov
fldenv
mov
adc
js
pop
ret
enter
mov
and
int
adc
clc
pop
sbb
aam
dec
cwde
xor
dec
fisub
cmp
inc
mov
dec
mov
mov
cmp
mov
mov
pop
inc
jle
pushf
jle
fcmovu
daa
ja
cwde
dec
add
into
enter
mov
mov
mov
cmp
addr16
(bad)
(bad)
ja
sbb
mov
in
dec
add
jae
or
xchg
mov
repnz
fcompp
mov
adc
inc
repnz
ins
mov
inc
fisttp
sbb
out
neg
mov
xor
xchg
sahf
xchg
retf
or
sahf
mov
pop
ror
fnstsw
retf
xor
out
retf
mov
je
int3
dec
xor
daa
ja
fimul
je
pop
pusha
scas
mov
mov
ins
pop
loop
lock
xor
push
mov
bound
xor
mov
iret
xchg
clc
int
sbb
inc
repnz
ins
mov
inc
fisub
cmp
cmp
or
and
mov
and
mov
and
mov
repnz
loop
repnz
loop
jo
mov
mov
inc
mov
outs
test
dec
pop
cdq
sbb
add
or
fimul
mov
cdq
sbb
add
pusha
lods
(bad)
dec
mov
mov
sbb
add
or
mov
mov
sbb
add
movs
scas
(bad)
outs
mov
mov
sbb
add
xchg
movs
fmul
jle
dec
mov
cwde
and
ja
mov
leave
xor
mov
data16
add
ror
xor
mov
data16
add
in
retf
push
mov
data16
add
out
retf
inc
mov
add
dec
pop
cdq
sbb
add
mov
ret
mov
sbb
add
js
(bad)
sar
sbb
add
sbb
fimul
loop
dec
mov
sbb
add
adc
mov
mov
outs
test
dec
outs
mov
lods
out
jg
xchg
dec
mov
mov
fld
push
sbb
mov
dec
loop
addr16
lods
(bad)
or
mov
mov
or
mov
cmp
jo
daa
cwde
mov
dec
loop
addr16
nop
fimul
es
or
je
lods
arpl
jo
cmps
jo
cwde
dec
sub
mov
enter
ja
mov
leave
xor
scas
xor
push
sbb
pop
cwde
dec
sub
or
mov
enter
mov
add
fcmove
xor
scas
xor
addr16
jo
cmps
cmp
cwde
dec
sub
or
enter
ja
mov
leave
xor
scas
xor
outs
pop
jo
cmps
add
cwde
dec
sub
mov
enter
ja
mov
into
scas
xor
(bad)
dec
pop
fs
mov
or
mov
cmp
jo
daa
cwde
mov
dec
loop
addr16
nop
fimul
mov
outs
pop
sbb
aam
mov
jl
rsqrtps
fiadd
mov
lock
std
cmp
je
addr16
dec
pop
je
retf
cmps
or
addr16
cmc
mov
sub
cmps
lock
cwde
dec
or
fcom
xor
cmps
in
cwde
dec
loop
addr16
scas
(bad)
xor
(bad)
int
mov
jl
adc
jo
fnstsw
mov
dec
or
xchg
push
jae
daa
imul
call
xor
or
jo
and
pop
jo
and
add
int
sbb
loop
lock
mov
fimul
jmp
or
adc
dec
sub
pusha
data16
pop
and
pop
jo
and
sub
daa
sbb
cwde
dec
add
int
sbb
loop
lock
mov
fimul
jmp
or
dec
adc
dec
sub
or
mov
and
mov
and
xor
cwde
dec
loop
repnz
loop
repnz
pusha
ss
and
ja
pushf
ror
xor
lods
xor
jnp
jo
and
sub
and
mov
repnz
sbb
dec
mov
enter
fimul
jmp
or
rcl
dec
sub
or
std
xor
jnp
jo
and
sub
and
mov
repnz
loop
lock
mov
enter
fimul
jmp
or
xchg
adc
dec
sub
cwde
mov
add
cwde
mov
jne
push
mov
daa
pop
xor
dec
mov
daa
mov
cwde
pop
loopne
inc
or
retf
dec
pusha
sar
leave
xor
dec
ja
lods
ror
xor
dec
ja
fsubr
leave
xor
pop
loopne
cdq
dec
mov
dec
mov
repnz
cwde
dec
fcomp
xchg
retf
xchg
push
jae
and
mov
cmp
jo
and
pop
jo
and
sub
and
and
cwde
dec
loop
lock
mov
fimul
mov
or
cld
adc
add
lds
fimul
xor
or
xor
dec
mov
xchg
retf
dec
loopne
cdq
dec
mov
lods
cmps
adc
adc
addr16
scas
(bad)
xor
call
sbb
stos
daa
and
cwde
dec
loop
lock
mov
fimul
mov
or
test
cmp
iret
xor
jnp
jo
and
sub
daa
movs
xor
in
xor
dec
loopne
cwde
iret
fcomp
nop
retf
retf
cwde
and
mov
cmp
jo
cmps
mov
xor
mov
xor
int3
xchg
(bad)
and
je
xlat
cwde
dec
mov
dec
mov
lock
mov
enter
fimul
jmp
or
add
cwde
dec
sub
pusha
mov
add
repnz
ja
lods
ror
xor
dec
ja
fsubr
leave
xor
pop
loopne
cwde
dec
mov
dec
mov
lock
mov
cwde
daa
mov
cwde
pop
loopne
inc
or
retf
dec
pusha
jbe
dec
mov
repnz
ja
lods
ror
xor
dec
ja
fsubr
leave
xor
pop
loop
lock
mov
cwde
daa
dec
xor
dec
fcomp
xchg
retf
xchg
push
jae
and
mov
cmp
jo
and
pop
jo
and
sub
and
mov
lock
xor
dec
mov
pop
push
jae
daa
push
jmp
stos
xor
dec
loop
addr16
scas
(bad)
xor
int3
xchg
(bad)
and
sbb
jnp
dec
mov
dec
mov
lock
mov
enter
fimul
jmp
or
adc
cwde
dec
sub
cwde
mov
add
cwde
mov
push
cmp
movs
xor
dec
mov
daa
mov
sbb
loopne
inc
or
retf
dec
mov
cwde
cmps
call
mov
or
mov
pop
cwde
mov
push
cmp
or
cwde
dec
loopne
cwde
dec
mov
daa
mov
sbb
loopne
cmp
retf
dec
mov
cwde
cmps
lods
adc
js
mov
lods
jnp
jo
and
sub
and
push
xor
dec
mov
fimul
xor
mov
dec
mov
jo
test
scas
(bad)
xor
mov
xor
call
sub
sub
les
daa
mov
sbb
loopne
inc
or
retf
dec
mov
cwde
cmps
and
cwde
dec
sub
pop
push
mov
mov
add
cwde
mov
jne
push
mov
daa
adc
cwde
dec
loopne
cdq
dec
mov
daa
mov
sbb
loopne
inc
or
retf
dec
pusha
inc
mov
in
retf
adc
into
addr16
jo
pusha
(bad)
dec
fstp
mov
into
(bad)
adc
int
ins
mov
push
fisub
js
(bad)
test
jo
pusha
(bad)
dec
pop
ins
xchg
retf
cmp
into
adc
mov
push
jg
addr16
dec
and
inc
pop
jo
(bad)
jo
pusha
(bad)
dec
pop
cwde
mov
cmp
push
mov
sahf
outs
mov
adc
cmps
mov
cwde
dec
loop
addr16
scas
(bad)
xor
(bad)
int
mov
jl
adc
jo
fnstsw
mov
dec
or
xchg
push
jae
daa
imul
call
xor
or
jo
and
pop
jo
and
add
int
sbb
loop
lock
mov
fimul
jmp
or
adc
cwde
dec
sub
ja
int3
xor
jnp
jo
and
sub
daa
movs
xor
fs
sbb
loop
lock
mov
fimul
jmp
or
rcl
cwde
dec
sub
or
mov
and
mov
and
xor
cwde
dec
loop
repnz
loop
repnz
pusha
stos
mov
and
ja
pushf
ror
xor
xchg
xor
jnp
jo
and
sub
and
pushf
pop
mov
mov
sbb
loopne
inc
or
retf
dec
pusha
fiadd
ror
xor
mov
loopne
inc
or
retf
xor
push
mov
lock
cwde
and
mov
addr16
lods
(bad)
cmps
xchg
mov
fild
jae
jnp
daa
repnz
loop
lock
fld
push
mov
jae
loop
repnz
loopne
cdq
dec
mov
lods
cmps
adc
cs
dec
loop
addr16
scas
(bad)
xor
call
sbb
stos
and
mov
sbb
loopne
inc
or
retf
dec
pusha
xchg
xchg
sbb
retf
mov
leave
adc
mov
xor
call
sbb
movs
and
mov
lock
mov
fimul
mov
or
nop
cs
dec
sub
loopne
ja
repnz
ja
lods
ror
xor
dec
ja
fsubr
leave
xor
pop
loopne
cwde
dec
mov
daa
pushf
xor
dec
fcomp
xchg
retf
xchg
push
jae
and
mov
cmp
sub
and
pop
jo
and
sub
and
rdtsc
cwde
dec
loopne
cwde
dec
mov
dec
mov
or
push
jmp
xchg
xor
dec
xor
stos
dec
mov
jg
int
adc
mov
xor
int3
xchg
(bad)
and
mov
xor
dec
loop
lock
mov
enter
fimul
jmp
or
aam
cwde
dec
sub
add
mov
add
cwde
mov
jne
push
mov
and
mov
lock
mov
cwde
daa
mov
cwde
pop
loopne
inc
or
retf
dec
pusha
adc
in
retf
dec
ja
lods
ror
xor
dec
ja
fsubr
leave
xor
pop
loopne
cdq
dec
mov
dec
mov
repnz
loopne
cwde
dec
fcomp
xchg
retf
xchg
push
jae
and
mov
cmp
sub
and
pop
jo
and
sub
and
mov
lock
xor
dec
mov
sbb
cwde
daa
push
jmp
xchg
xor
dec
loop
addr16
scas
(bad)
xor
call
sub
int
xor
daa
mov
sbb
loopne
cmp
retf
dec
mov
cwde
cmps
lock
dec
sub
outs
int3
icebp
xor
jnp
jo
and
sub
and
into
pop
mov
mov
sbb
loopne
inc
or
retf
dec
mov
cwde
cmps
mov
cwde
dec
sub
pop
push
mov
mov
add
cwde
mov
push
cmp
in
pop
(bad)
and
or
xchg
push
jae
daa
mov
fimul
xor
push
mov
cmp
jo
and
pop
jo
and
sub
and
mov
lock
pop
cwde
dec
or
lods
push
jae
daa
jb
fimul
xor
xchg
xor
dec
pusha
test
ja
inc
sbb
add
dec
fld
ja
(bad)
adc
int
ins
mov
push
(bad)
lock
pop
and
leave
outs
test
je
(bad)
dec
pop
cwde
daa
or
cwde
dec
loop
repnz
loop
lock
mov
sbb
xchg
xor
mov
mov
dec
mov
repnz
fcompp
add
xor
mov
fldcw
push
mov
sbb
je
pop
or
dec
mov
frstor
js
adc
or
cmp
xor
dec
mov
sbb
or
xor
jmp
loop
cmp
retf
xor
sbb
cwde
mov
cmp
inc
test
nop
mov
in
ins
loop
repnz
add
inc
mov
mov
fimul
xor
in
ja
sbb
jo
pop
adc
push
mov
mov
cdq
dec
mov
icebp
aas
pop
xchg
add
cdq
mov
cmp
dec
loopne
sub
ja
addr16
pusha
outs
or
bound
xor
inc
mov
cwde
(bad)
jg
adc
into
cdq
cmp
xor
mov
fldcw
mov
or
std
and
xchg
cmp
ret
addr16
popa
jo
nop
xor
cmp
xor
mov
fstp
xor
in
pop
loopne
sub
ja
addr16
pusha
fimul
dec
js
pop
iret
cmc
into
popf
cmp
xor
mov
fst
mov
sbb
ja
in
pop
loopne
sub
ja
addr16
pusha
xchg
mov
inc
mov
in
sbb
add
into
enter
cwde
dec
or
std
and
int3
cmp
ret
addr16
popa
jo
lahf
xor
(bad)
dec
mov
mov
inc
mov
sub
cwde
mov
into
enter
cwde
dec
or
std
and
nop
cmp
ret
addr16
popa
jo
lahf
xor
cmp
xor
mov
fldenv
xor
in
pop
loopne
sub
ja
addr16
pusha
push
(bad)
dec
mov
mov
mov
fimul
mov
mov
into
enter
cwde
dec
add
outs
test
ja
adc
std
and
sbb
jae
ret
addr16
popa
jo
sahf
xor
daa
retf
dec
loopne
inc
or
ja
addr16
loopne
push
push
mov
je
ja
lock
jae
daa
ss
loopne
pop
push
mov
les
scas
cmp
dec
or
mov
js
jle
or
mov
addr16
push
lea
into
sbb
inc
nop
lock
xor
mov
add
adc
mov
adc
sbb
cmp
ja
pop
inc
xor
iret
cmps
fsubr
cwde
dec
xlat
outs
ret
adc
cwde
sbb
aam
mov
(bad)
icebp
mov
fnstenv
(bad)
in
and
or
or
jg
addr16
pusha
sbb
push
mov
and
xor
fidivr
addr16
mov
ja
cdq
cmp
xor
mov
fldenv
mov
sbb
jnp
addr16
inc
mov
dec
sbb
add
into
enter
cwde
dec
or
cmp
xor
mov
fst
mov
and
cdq
xor
stos
jg
addr16
dec
mov
mov
std
and
dec
cmp
ret
outs
mov
popa
jo
popf
xor
mov
xor
pop
loopne
sub
jg
addr16
pusha
mov
dec
mov
addr16
std
and
jnp
jae
ret
outs
mov
popa
jo
popf
xor
mov
ss
pop
loopne
sub
jg
addr16
pusha
bound
dec
js
pop
iret
xor
cmp
pop
loopne
sub
jg
addr16
pusha
add
mov
std
and
les
jae
ret
outs
mov
popa
jo
popf
xor
mov
cmp
pop
loopne
sub
jg
addr16
pusha
into
mov
mov
mov
std
and
xchg
jae
ret
outs
mov
popa
jo
pushf
xor
(bad)
or
mov
pusha
mov
cmp
sub
jg
addr16
pusha
mov
jo
addr16
std
and
dec
cmp
cwde
ret
outs
mov
popa
jo
pushf
xor
mov
aas
in
pop
loopne
sub
mov
pop
pusha
mov
call
retf
addr16
(bad)
jg
adc
push
(bad)
addr16
div
aas
sub
daa
pop
sbb
pusha
enter
mov
pop
add
bnd
addr16
inc
xchg
int3
xor
xor
dec
or
sbb
adc
push
(bad)
addr16
div
xchg
loop
lock
sub
cmps
leave
repnz
cmc
nop
(bad)
or
cmp
or
fcomp
bnd
addr16
ds
mov
cwde
iret
xor
or
dec
or
inc
or
neg
dec
xor
dec
mov
jle
or
mov
pusha
mov
popa
lock
jae
ret
fs
popa
jo
nop
xor
bnd
addr16
inc
mov
enter
xor
andps
pusha
adc
(bad)
lock
push
mov
mov
pusha
mov
into
xchg
enter
dec
or
ror
xor
out
retf
gs
jae
ret
data16
popa
jo
nop
xor
(bad)
dec
pop
or
retf
push
push
jae
ret
pusha
mov
popa
jo
lahf
xor
add
xor
jo
addr16
pusha
adc
mov
outs
test
ja
adc
ja
enter
fimul
mov
mov
into
enter
cwde
dec
loopne
inc
or
jo
addr16
pusha
dec
pop
add
into
enter
cwde
dec
add
into
sbb
je
addr16
pop
bound
je
addr16
(bad)
pop
mov
sbb
or
popa
jo
pushf
xor
xchg
retf
retf
addr16
(bad)
shl
sbb
or
mov
addr16
dec
xor
cmps
push
daa
cwde
dec
sar
addr16
js
jle
or
mov
pusha
mov
cmp
dec
ja
pusha
mov
into
lock
jae
daa
ins
jmp
fs
into
enter
cwde
dec
or
mov
pop
sbb
add
into
enter
cwde
dec
add
into
enter
cwde
dec
add
imul
into
sbb
(bad)
int
mov
push
in
pop
add
retf
(bad)
int
mov
xor
ja
dec
mov
pop
(bad)
addr16
inc
dec
(bad)
js
jle
or
mov
pusha
mov
mov
addr16
loopne
inc
or
jbe
addr16
pusha
dec
mov
mov
pop
add
into
enter
cwde
dec
add
bnd
addr16
fldcw
pop
mov
adc
inc
(bad)
addr16
dec
lahf
pop
fistp
cmps
push
mov
mov
into
sbb
add
into
enter
pusha
mov
fldz
pop
mov
adc
mov
fldz
pop
mov
adc
mov
mov
addr16
cdq
sbb
mov
mov
addr16
loop
addr16
jl
addr16
shr
js
fld
pop
mov
enter
cwde
dec
add
into
enter
je
ja
jo
inc
into
addr16
dec
cmp
xchg
retf
addr16
test
into
jo
call
dec
mov
cmp
xor
mov
outs
(bad)
adc
repz
dec
fnstsw
cwde
dec
pusha
mov
sbb
xchg
test
scas
mov
pop
daa
sbb
fimul
xor
dec
mov
cwde
cmps
test
cwde
dec
add
(bad)
cld
and
cwde
dec
loop
jo
popf
xor
ja
xor
or
xor
fsubr
dec
add
outs
lods
add
mov
popa
add
pop
mov
lock
xor
dec
pusha
adc
pop
mov
enter
cwde
dec
or
pop
push
mov
cwde
ret
jbe
ja
cmp
pop
mov
repnz
loopne
cmp
data16
addr16
pusha
cmp
mov
mov
pop
mov
addr16
mov
sbb
int3
lea
or
cld
test
dec
ja
in
sti
retf
mov
sub
dec
mov
leave
(bad)
dec
(bad)
jb
jb
pop
mov
sbb
pop
push
fld
jb
or
mov
xor
pusha
inc
mov
ds
addr16
loop
sub
jg
pop
mov
lock
push
mov
mov
adc
gs
addr16
or
xor
retf
addr16
cmp
(bad)
cmp
fsub
mov
mov
lea
cdq
cmp
into
addr16
mov
mov
or
popa
lock
jae
daa
inc
jmp
pop
mov
test
ficomp
xor
dec
add
into
enter
jbe
ja
jo
cwde
xor
mov
popa
jo
dec
into
addr16
jne
ja
jo
dec
into
addr16
dec
sub
dec
add
into
enter
cwde
dec
loop
jo
xchg
cwde
into
jnp
mov
xchg
retf
fild
jae
daa
dec
jmp
pop
push
mov
cmp
adc
mov
add
cdq
retf
outs
mov
cwde
mov
push
jae
daa
sbb
inc
or
retf
cmp
sbb
dec
mov
addr16
dec
or
mov
imul
pop
xor
sub
daa
dec
jmp
or
mov
ficomp
adc
mov
add
cdq
retf
ins
mov
cwde
mov
push
jae
daa
sbb
inc
or
leave
xor
fwait
xor
repnz
add
xor
inc
mov
cwde
mov
push
mov
cwde
and
mov
dec
mov
dec
push
jo
cmps
adc
cwde
dec
add
mov
and
xchg
cwde
mov
mov
mov
adc
retf
addr16
fxch
inc
mov
adc
mov
stc
addr16
or
repnz
add
mov
sbb
sub
push
ds
dec
loop
adc
dec
loopne
js
mov
in
sti
pusha
not
push
into
xor
inc
mov
adc
retf
addr16
fldl2e
pop
mov
adc
mov
stc
addr16
or
repnz
add
mov
sbb
sub
or
cwde
dec
loop
adc
dec
loopne
js
mov
in
sti
pusha
pop
xchg
dec
mov
in
sti
pusha
cmp
mov
outs
lods
add
retf
addr16
repnz
dec
add
mov
je
ret
in
mov
out
mov
cmps
xor
cwde
dec
add
mov
dec
loop
jo
xchg
cwde
(bad)
int
sbb
je
dec
mov
cwde
and
mov
adc
push
neg
repz
cwde
dec
add
mov
add
pop
or
dec
mov
fld
add
mov
cwde
mov
add
cwde
and
mov
and
inc
xor
scas
push
jae
daa
imul
jo
cwde
xor
dec
loopne
sub
mov
fiadd
xor
dec
pusha
xchg
sub
pusha
inc
xchg
dec
mov
dec
mov
inc
or
mov
lock
cwde
pop
pusha
push
xchg
dec
mov
addr16
arpl
pop
inc
mov
repnz
fmul
or
mov
xor
inc
push
mov
jne
ja
adc
mov
pop
hlt
sti
retf
ss
jae
daa
fadd
cwde
dec
or
pop
fnstenv
sbb
(bad)
mov
and
cwde
dec
dec
xor
sti
retf
dec
mov
jo
and
addr16
push
sbb
dec
mov
addr16
loop
repnz
loopne
call
and
mov
enter
cwde
dec
add
into
enter
cwde
daa
xchg
inc
fmul
xor
dec
pusha
ficom
test
cwde
and
mov
repnz
ja
cwde
ror
xor
xchg
cwde
movs
nop
mov
and
xor
mov
je
pop
pusha
xchg
and
int
enter
cwde
dec
xor
ret
xchg
cwde
sbb
aam
mov
(bad)
lock
or
cld
dec
mov
adc
test
or
xor
inc
or
call
fcom
mov
movs
pop
mov
cwde
inc
or
call
xor
push
mov
cdq
dec
mov
adc
xor
jb
xor
dec
mov
jno
xor
int3
mov
sub
mov
xchg
retf
pop
xor
or
cmp
cwde
cmps
mov
addr16
mov
mov
into
adc
loopne
inc
or
jne
cmps
stos
aad
mov
cmc
mov
or
mov
addr16
ja
jo
ja
jo
test
cwde
inc
dec
ds
mov
cwde
ret
gs
popa
addr16
xchg
(bad)
(bad)
xchg
dec
mov
pop
cmp
mov
addr16
mov
dec
add
fiadd
addr16
loope
push
add
retf
addr16
fstp
ja
or
jbe
inc
test
stos
jne
addr16
popa
adc
push
mov
mov
into
enter
cwde
mov
jne
push
mov
xor
xor
mov
or
sti
retf
inc
or
lahf
dec
mov
cmp
cmp
cwde
into
jg
mov
sub
cwde
dec
or
sti
retf
cmp
into
addr16
or
sti
retf
inc
or
into
lods
daa
cmp
cwde
cmps
not
addr16
fsub
dec
mov
adc
sub
pop
push
mov
fld
mov
dec
mov
repnz
pusha
ss
dec
mov
ret
dec
mov
cmp
jo
jbe
cmp
inc
ja
nop
cmps
pushf
cmp
dec
xor
mov
mov
jg
or
mov
cwde
dec
add
or
mov
daa
mov
mov
fdiv
cmp
lea
add
mov
je
rol
lea
mov
or
lea
mov
pop
push
mov
je
and
sbb
and
pusha
rcl
jbe
addr16
dec
cmp
lea
nop
je
add
xchg
daa
cmp
mov
inc
mov
loopne
addr16
into
in
pop
pusha
scas
xchg
dec
mov
outs
test
mov
mov
into
adc
ja
cwde
int3
sub
xor
mov
fst
inc
mov
adc
pusha
int3
addr16
neg
mov
cwde
(bad)
jo
pusha
(bad)
dec
pop
addr16
mov
adc
mov
into
lods
cmps
adc
cmp
mov
into
cwde
cmp
pop
retf
xchg
retf
dec
pusha
xchg
dec
mov
lods
cmps
adc
cmp
dec
mov
pop
lds
mov
mov
(bad)
gs
xor
jb
test
dec
mov
sbb
daa
ja
cwde
dec
add
into
enter
cmp
mov
adc
mov
stc
addr16
or
sbb
mov
scas
retf
ror
fldenv
ja
sbb
mov
in
outs
loop
repnz
loopne
inc
or
inc
cmp
out
retf
cmp
xor
dec
xor
jg
or
mov
addr16
popa
adc
mov
pop
mov
retf
retf
addr16
fstp
inc
mov
sbb
mov
adc
mov
into
lods
push
sbb
cmp
mov
into
cwde
cmp
pop
xchg
xchg
retf
dec
pusha
xchg
dec
mov
lods
push
sbb
cmp
dec
mov
int3
inc
into
fmul
mov
cwde
cmp
pusha
pop
cld
adc
dec
loop
lock
jae
and
mov
addr16
movs
fmul
(bad)
xchg
dec
mov
pop
dec
mov
pop
retf
addr16
fisub
mov
into
adc
lea
addr16
or
mov
and
retf
dec
pusha
rcl
push
sbb
cmp
dec
mov
addr16
add
pop
cli
mov
mov
leave
adc
ja
enter
gs
popa
lock
cwde
ret
gs
popa
jo
xor
int3
dec
and
mov
xor
mov
popa
addr16
nop
fimul
into
nop
dec
mov
addr16
std
adc
dec
loop
lock
cwde
and
mov
addr16
nop
fimul
es
dec
mov
xchg
dec
mov
sbb
add
into
enter
gs
popa
lock
cwde
ret
gs
popa
jo
xor
int3
dec
and
mov
xor
mov
popa
addr16
scas
(bad)
cmps
nop
dec
mov
addr16
std
adc
dec
loop
lock
jae
and
mov
addr16
scas
(bad)
sahf
nop
dec
mov
cmp
adc
add
into
enter
gs
popa
lock
pop
jae
ret
gs
popa
jo
xor
int3
dec
and
mov
xor
mov
popa
addr16
scas
(bad)
push
nop
dec
mov
addr16
std
adc
dec
loop
lock
jae
and
mov
addr16
scas
(bad)
jbe
dec
mov
mov
ret
addr16
stc
addr16
or
sbb
mov
daa
movs
out
dec
loop
jo
xor
mov
sbb
push
mov
mov
xor
mov
cwde
mov
xor
xchg
lds
xor
mov
into
movs
jg
xor
repnz
loop
lock
cwde
and
mov
addr16
scas
(bad)
loop
dec
mov
pop
dec
mov
sbb
ja
addr16
mov
addr16
inc
and
jo
pusha
(bad)
dec
mov
addr16
add
into
enter
fimul
mov
mov
into
enter
cwde
dec
or
mov
ja
cwde
dec
add
into
enter
pop
push
mov
fimul
xor
repnz
addr16
inc
mov
daa
cdq
out
dec
loop
jo
(bad)
xor
push
mov
ret
xor
mov
cwde
mov
xor
xchg
lds
xor
mov
into
movs
jg
xor
repnz
loop
lock
mov
test
addr16
scas
(bad)
sub
dec
mov
sbb
jbe
addr16
mov
addr16
inc
into
fmul
mov
cwde
cmp
fidiv
addr16
repz
not
mov
mov
addr16
loopne
inc
or
jne
addr16
pusha
ds
dec
mov
les
(bad)
jg
or
mov
addr16
dec
pop
cwde
and
mov
daa
mov
cwde
pavgb
push
mov
push
dec
mov
adc
jl
addr16
xor
dec
loop
addr16
jl
addr16
xchg
popf
dec
mov
cwde
dec
std
jbe
inc
mov
stc
addr16
or
adc
int3
addr16
(bad)
lock
jno
mov
lds
ja
inc
dec
mov
repnz
add
into
enter
push
cli
jl
addr16
mov
mov
inc
into
fmul
mov
cwde
cmp
cwde
ret
gs
arpl
ret
gs
bound
jl
addr16
mov
cwde
ret
gs
popa
repnz
loopne
js
mov
sub
cmps
lock
dec
ja
ins
mov
into
jo
mov
cwde
mov
jne
push
mov
es
mov
repnz
loop
repnz
loop
repnz
loopne
cwde
dec
enter
enter
mov
cwde
(bad)
or
mov
sbb
les
mov
cwde
and
jbe
cmps
cmp
cwde
dec
add
xor
xchg
sbb
xor
mov
repnz
add
into
retf
mov
sub
cmps
jl
cwde
dec
loop
adc
mov
pop
cdq
daa
fs
dec
ja
ins
mov
into
jo
mov
cwde
mov
lds
ja
jmp
test
dec
mov
cwde
dec
add
mov
add
repnz
loop
lock
cwde
daa
icebp
jmp
sub
mov
dec
mov
addr16
dec
sub
dec
ja
nop
ror
xor
lea
cwde
mul
sub
retf
addr16
div
ja
mov
test
in
inc
pusha
rcr
adc
xrelease
mov
retf
sbb
mov
xchg
jecxz
mov
pop
(bad)
int
movs
dec
mov
cwde
inc
or
mov
pop
cmp
cwde
je
mov
or
mov
fld
dec
mov
adc
jo
pop
je
fld
mov
mov
or
mov
mov
dec
std
cmp
movs
scas
(bad)
pop
pushf
dec
mov
lods
arpl
jo
cmp
jno
cmps
aam
cwde
dec
add
outs
test
je
(bad)
dec
or
cmp
jo
cmps
enter
mov
mov
leave
xor
inc
ja
mov
bound
pop
push
mov
mov
sub
mov
in
inc
ja
jo
leave
xor
mov
cwde
je
adc
push
mov
mov
sub
mov
in
pop
ja
sbb
retf
mov
cmp
test
ror
xor
dec
add
fcmove
xor
dec
std
aaa
adc
scas
(bad)
add
ror
xor
dec
add
ror
xor
mov
mov
test
enter
add
(bad)
xor
dec
std
aaa
adc
nop
fimul
add
ror
xor
dec
add
(bad)
enter
or
fimul
aaa
adc
scas
(bad)
jmp
std
and
test
cmps
cld
xor
sbb
xlat
outs
ret
xchg
cwde
dec
ja
nop
mov
mov
cwde
dec
ja
xchg
mov
mov
cwde
dec
ja
mov
xor
mov
mov
cwde
dec
ja
mov
fisttp
adc
mov
mov
cwde
dec
ja
test
retf
fisttp
adc
mov
mov
cwde
dec
fnstsw
es
mov
adc
stos
pop
mov
cmps
fdiv
dec
or
nop
(bad)
int
xchg
(bad)
cld
sbb
mov
ficomp
cmp
test
xchg
popf
int3
jo
in
mov
ss
(bad)
cld
xor
mov
inc
imul
xor
dec
fistp
pop
pusha
or
ja
push
mov
mov
dec
cwde
xor
dec
or
and
mov
xor
inc
mov
into
addr16
mov
add
inc
push
mov
cmp
(bad)
adc
lods
xor
cwde
dec
ja
fdivr
xor
mov
mov
cwde
dec
ja
sar
xor
mov
mov
cwde
dec
ja
enter
or
mov
cwde
dec
ja
int3
mov
mov
cwde
dec
ja
sar
cwde
dec
ja
les
xor
mov
mov
cwde
dec
ja
cld
mov
mov
cwde
dec
ja
lock
mov
cwde
dec
ja
hlt
mov
mov
cwde
dec
ja
call
fisttp
adc
mov
mov
cwde
dec
ja
loopne
retf
fisttp
adc
mov
mov
cwde
dec
ja
sbb
xor
mov
mov
cwde
dec
ja
adc
xor
mov
mov
cwde
dec
ja
or
xor
mov
mov
cwde
dec
ja
add
xor
mov
mov
cwde
dec
ja
cmp
xor
mov
mov
cwde
dec
ja
xor
xor
mov
mov
cwde
dec
ja
sub
xor
mov
mov
cwde
dec
ja
and
xor
mov
mov
cwde
dec
ja
pop
mov
mov
cwde
dec
ja
pop
mov
mov
cwde
dec
ja
push
mov
mov
cwde
dec
ja
push
mov
mov
cwde
dec
ja
dec
mov
mov
cwde
dec
ja
dec
mov
mov
cwde
dec
ja
inc
mov
mov
cwde
dec
ja
inc
mov
mov
cwde
dec
ja
js
retf
fisttp
adc
mov
mov
cwde
dec
ja
jo
retf
fisttp
adc
mov
mov
cwde
dec
ja
pusha
mov
mov
cwde
dec
ja
fs
mov
cwde
dec
ja
cwde
mov
mov
cwde
dec
ja
pushf
mov
mov
cwde
dec
ja
nop
mov
mov
cwde
dec
ja
xchg
mov
mov
cwde
dec
ja
mov
mov
cwde
dec
ja
mov
mov
cwde
dec
ja
cmp
xor
mov
mov
cwde
dec
ja
mov
fisttp
adc
mov
mov
cwde
dec
ja
mov
retf
fisttp
adc
mov
mov
cwde
dec
ja
test
retf
fisttp
adc
mov
mov
cwde
dec
ja
mov
fisttp
adc
mov
mov
cwde
dec
ja
fdivr
mov
cwde
dec
ja
fdivr
mov
cwde
dec
ja
sar
mov
cwde
dec
ja
aam
retf
fisttp
adc
mov
mov
cwde
dec
ja
int3
mov
mov
cwde
dec
ja
sar
xor
mov
mov
cwde
dec
ja
clc
mov
mov
cwde
dec
ja
cld
mov
mov
cwde
dec
ja
call
fisttp
adc
mov
mov
cwde
dec
ja
loopne
retf
fisttp
adc
mov
mov
cwde
dec
ja
sbb
mov
cwde
dec
ja
adc
retf
fisttp
adc
mov
mov
cwde
dec
ja
or
retf
fisttp
adc
mov
mov
cwde
dec
ja
add
retf
fisttp
adc
mov
mov
cwde
dec
ja
cmp
retf
fisttp
adc
mov
mov
cwde
dec
ja
xor
retf
fisttp
adc
mov
mov
cwde
dec
ja
and
retf
fisttp
adc
mov
mov
cwde
dec
ja
pop
mov
mov
cwde
dec
ja
push
mov
mov
cwde
dec
ja
push
mov
mov
cwde
dec
ja
dec
mov
mov
cwde
dec
ja
dec
mov
mov
cwde
dec
ja
inc
mov
mov
cwde
dec
ja
inc
mov
mov
cwde
dec
ja
js
retf
fisttp
adc
mov
mov
cwde
dec
ja
jo
retf
fisttp
adc
mov
mov
cwde
dec
ja
push
fisttp
adc
mov
mov
cwde
dec
ja
pusha
mov
mov
cwde
dec
ja
fs
mov
cwde
dec
