and
add
dec
add
add
add
add
sbb
add
add
add
add
push
lock
add
xor
add
add
add
and
or
jge
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
mov
add
adc
mov
add
add
add
add
add
add
add
adc
add
add
add
pop
push
add
imul
add
frstor
add
push
inc
add
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
jle
add
add
pushf
add
add
add
add
add
jle
add
add
or
add
add
mov
add
and
add
add
push
sub
and
add
mov
add
add
add
sub
add
add
jle
add
add
xchg
add
add
add
jle
add
add
pop
push
add
add
add
mov
add
(bad)
(bad)
add
add
ffree
add
add
inc
add
add
and
add
adc
add
add
add
add
add
add
add
add
add
or
add
es
rol
and
add
add
or
dec
xor
add
add
mov
add
and
add
mov
add
add
add
dec
and
add
add
sub
jle
add
add
fiadd
add
inc
add
add
add
adc
jmp
ret
jle
add
add
inc
add
add
add
add
mov
add
jmp
add
add
add
mov
add
(bad)
fisubr
imul
mov
add
add
add
pop
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
push
push
mov
sldt
or
and
add
add
cmp
(bad)
(bad)
inc
push
push
or
add
or
add
add
mov
add
sub
mov
add
sub
add
adc
add
add
mov
add
add
add
add
add
mov
add
add
add
adc
add
adc
add
(bad)
(bad)
inc
add
pop
sub
and
add
add
sub
pop
outs
adc
add
and
or
jo
cld
or
jo
inc
inc
add
add
sar
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
and
add
add
sub
fsubr
add
mov
sub
mov
stc
add
add
add
or
add
or
cmp
(bad)
call
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
pushf
js
add
pushf
js
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
inc
push
dec
and
pop
dec
mov
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
add
jge
add
add
or
add
pop
add
add
add
add
xchg
mov
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
jae
add
or
jle
add
add
rol
add
add
inc
add
add
add
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
dec
dec
add
adc
xor
mov
add
adc
mov
or
or
add
add
add
add
inc
add
add
pop
add
add
or
add
add
add
add
add
cmp
add
push
add
add
or
add
add
cs
rol
jle
add
add
pop
push
add
add
add
mov
or
ret
inc
add
xor
add
sub
jle
add
add
pop
rol
and
add
add
sub
and
add
add
fiadd
sub
jae
add
or
sub
push
inc
add
add
pop
add
add
or
add
add
add
sub
add
push
add
add
add
add
or
add
test
push
add
push
pop
push
push
add
mov
or
ror
add
add
sbb
add
sub
or
pop
push
add
mov
or
sahf
sub
and
add
add
fstp
fst
add
add
add
jle
add
add
jle
add
add
push
add
add
add
xchg
add
add
add
add
add
or
add
add
add
fiadd
or
add
pop
fst
add
add
add
add
mov
or
or
inc
add
add
adc
add
adc
inc
add
add
or
add
add
(bad)
(bad)
dec
sub
and
add
add
sub
or
add
or
add
add
mov
or
into
sub
fadd
push
jae
add
or
jmp
add
add
mov
or
or
inc
add
add
adc
add
adc
inc
add
add
pop
add
add
(bad)
(bad)
inc
sub
and
add
add
sub
pop
outs
adc
add
and
add
add
sub
fsub
sub
push
inc
add
add
pop
add
add
or
add
add
add
cmp
add
dec
add
add
add
push
adc
adc
add
add
add
add
pop
rol
adc
pop
rcl
add
add
add
add
add
add
add
mov
or
lods
adc
add
sub
add
add
mov
or
call
add
aad
add
pop
push
add
add
add
mov
or
jp
(bad)
jmp
add
add
add
mov
or
imul
(bad)
fiadd
fiadd
fiadd
push
inc
add
add
pop
add
add
or
add
add
add
add
add
jno
add
jle
add
or
push
jle
add
add
push
pop
push
add
add
add
lea
add
add
or
or
jb
add
jo
adc
sub
add
or
push
jle
add
add
add
push
add
adc
add
push
and
add
add
adc
jb
add
jo
sbb
add
sub
and
add
add
(bad)
(bad)
jmp
add
add
add
push
pop
rol
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
dec
(bad)
(bad)
(bad)
fstp
std
(bad)
jmp
fst
std
(bad)
jmp
in
lahf
sbb
in
lahf
sbb
inc
inc
add
add
cmc
cld
(bad)
inc
add
add
cld
(bad)
inc
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
adc
sub
inc
les
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
outs
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
xor
add
add
add
add
adc
inc
add
add
and
add
or
add
add
add
inc
add
add
add
add
add
add
add
int
add
push
push
push
or
add
add
arpl
or
add
add
test
add
inc
add
add
add
add
pop
push
add
add
add
pop
push
add
add
add
mov
sub
add
push
push
and
or
mov
pop
pop
pop
pop
ror
and
add
add
(bad)
jmp
gs
shl
and
shl
mov
add
add
add
add
add
add
add
add
add
push
mov
add
add
and
add
mov
cmp
(bad)
inc
jle
add
add
sub
add
add
mov
cmp
(bad)
(bad)
jmp
movs
pop
mov
add
mov
add
push
pop
push
or
push
add
add
(bad)
jmp
fwait
and
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
or
add
or
add
add
add
adc
xor
add
add
add
mov
add
mov
add
and
imul
clc
imul
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
add
sub
add
sbb
add
add
add
push
inc
add
add
push
add
add
inc
add
add
fild
add
repz
add
add
add
add
add
cwde
shl
cwde
shl
inc
inc
add
add
mov
add
add
add
mov
add
add
mov
add
add
jle
add
or
jle
add
add
push
add
add
and
add
pop
jge
add
add
jb
add
jo
lea
add
add
pop
push
jle
add
add
sbb
add
mov
add
jo
pop
sub
add
or
add
add
jnp
add
add
mov
push
pop
add
add
dec
add
jo
lea
add
add
push
jle
add
add
sbb
add
mov
add
or
add
add
add
jnp
add
add
jge
add
add
add
add
mov
cmp
add
add
add
sbb
add
sub
and
add
add
(bad)
jmp
add
or
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
inc
sbb
add
add
add
add
add
add
add
xor
in
add
add
inc
add
add
push
add
add
inc
add
add
mov
add
add
add
aas
add
add
or
or
jb
add
jo
push
add
add
sbb
add
add
add
sbb
add
sub
or
add
or
inc
or
add
add
jle
add
add
pop
and
add
add
jecxz
and
jecxz
and
inc
inc
add
add
enter
add
add
enter
add
mov
add
mov
add
push
mov
add
add
sub
jle
add
add
jnp
add
add
add
or
add
add
mov
cmp
(bad)
jmp
add
pop
push
es
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
aad
add
xor
add
add
adc
mov
or
or
add
add
add
add
inc
add
add
pop
add
add
or
add
add
add
add
add
add
add
add
add
jle
add
add
sbb
add
add
add
mov
or
sar
add
add
cmp
add
add
mov
or
shr
add
add
jo
lea
add
add
or
or
jb
add
jo
adc
sub
add
or
add
add
add
add
mov
or
xchg
sub
and
add
add
fucom
add
add
fstp
add
add
inc
add
add
sbb
add
adc
inc
add
add
add
add
add
add
add
cmps
add
add
add
or
jle
add
add
fs
add
add
add
pop
push
add
add
add
mov
or
mov
mov
add
mov
add
jle
add
add
js
xor
add
add
mov
or
cdq
sub
add
pop
sub
and
add
add
jle
add
add
mov
add
push
add
add
add
add
add
push
add
or
add
add
jnp
add
add
ja
add
sbb
add
and
add
mov
or
ds
(bad)
(bad)
fst
add
add
(bad)
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
mov
add
call
add
add
cmp
add
sub
add
push
adc
add
add
jo
or
add
add
add
mov
or
rcl
pop
jne
or
push
add
add
sub
add
adc
pop
adc
add
add
mov
or
xchg
sub
or
add
pop
push
add
add
add
mov
or
js
(bad)
jmp
mov
jo
push
sub
add
or
pop
add
or
add
add
add
add
mov
or
push
(bad)
(bad)
jmp
add
add
add
mov
or
inc
(bad)
(bad)
(bad)
ficom
fimul
inc
add
add
sbb
add
adc
inc
add
add
add
add
pop
add
add
add
add
adc
add
and
add
adc
and
add
mov
or
shr
jnp
sub
add
or
and
add
add
sub
adc
add
and
add
add
cmp
std
(bad)
call
lea
add
add
mov
sub
mov
stc
add
add
add
mov
or
mov
scas
(bad)
(bad)
inc
jb
add
jo
stos
add
jo
pop
add
or
add
add
or
add
jle
add
add
add
add
es
add
add
inc
add
add
pop
add
add
or
add
add
add
add
add
add
add
or
or
add
add
push
add
add
jb
add
jo
rol
add
loope
add
sbb
or
add
add
add
mov
or
mov
or
add
jo
sbb
add
sub
and
add
add
sub
jb
add
jo
lea
add
add
or
or
add
add
sbb
add
mov
jl
add
add
sbb
add
mov
sti
add
jo
adc
sub
add
or
or
add
add
mov
or
dec
(bad)
(bad)
jmp
add
add
add
mov
or
ds
(bad)
(bad)
fst
add
add
fst
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
jo
add
rol
add
add
add
or
or
add
pop
add
add
or
add
add
add
mov
or
mov
dec
and
mov
mov
add
add
add
add
add
add
jb
add
add
mov
add
add
and
add
add
sub
add
add
pop
jge
add
add
add
add
mov
or
ins
(bad)
(bad)
jmp
add
add
add
mov
or
pop
(bad)
(bad)
dec
add
add
add
sub
add
adc
cmp
(bad)
jmp
add
add
add
push
or
add
add
add
mov
or
sub
(bad)
jmp
add
add
add
mov
or
sbb
jecxz
(bad)
jmp
fstp
std
(bad)
inc
outs
and
add
or
add
add
mov
or
jo
(bad)
(bad)
cmp
(bad)
(bad)
call
pop
movs
sbb
add
sub
add
add
add
add
cdq
cdq
add
adc
add
push
adc
add
leave
aas
add
adc
add
add
repz
adc
add
add
retf
adc
add
add
ret
adc
xor
add
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
nop
add
add
add
xor
add
add
add
or
add
add
add
jnp
add
add
pop
sub
add
add
push
add
add
out
add
push
add
add
add
add
mov
sub
dec
and
add
add
add
add
add
pop
push
add
pushf
test
test
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
mov
add
adc
xor
add
add
add
add
add
jle
add
or
add
add
sub
add
or
add
add
add
popa
add
add
add
add
mov
add
mov
add
and
ret
in
and
ret
in
mov
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
push
pop
add
add
push
add
or
push
or
add
or
or
add
add
add
xor
add
add
adc
mov
add
add
add
add
add
add
add
imul
jle
add
add
pop
or
add
sldt
add
pop
or
add
fnstsw
add
add
cmp
add
adc
add
add
add
add
add
add
add
add
jne
add
xchg
add
out
add
outs
add
add
add
pop
add
add
pop
pop
or
push
add
add
pop
add
imul
add
mov
add
add
add
sbb
sbb
inc
inc
add
add
inc
add
add
add
add
add
add
mov
add
add
push
or
or
pop
xchg
add
xchg
popa
add
pushf
add
pop
xchg
pushf
and
add
add
(bad)
(bad)
(bad)
cmp
add
adc
or
pop
or
or
add
mov
add
jmp
add
mov
sub
mov
stc
add
xchg
add
add
add
add
mov
add
inc
mov
dec
and
add
add
(bad)
(bad)
jmp
mov
add
scas
add
add
sldt
add
sldt
add
xor
sldt
add
mov
fnsave
or
or
add
add
mov
add
jmp
aaa
jle
add
add
pop
or
add
sldt
add
pop
or
add
sldt
add
dec
pop
or
add
sldt
add
cmp
sldt
add
xor
mov
add
mov
add
and
add
add
(bad)
(bad)
dec
push
mov
fdivr
(bad)
jmp
or
add
mov
add
(bad)
cmp
inc
mov
pop
lea
add
or
pop
add
add
(bad)
(bad)
jmp
and
add
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
add
mov
add
(bad)
cmp
(bad)
(bad)
push
add
or
jle
add
add
mov
or
add
sldt
add
pusha
pop
or
add
sldt
add
or
or
add
fisttp
(bad)
(bad)
call
or
or
add
mov
add
(bad)
cmp
inc
add
add
pop
add
add
add
add
add
jg
add
pop
add
add
add
push
push
adc
sldt
add
pop
or
add
add
push
pop
rcl
add
add
clc
add
add
adc
sldt
add
add
push
jle
add
add
pop
or
add
add
pop
rcl
add
add
add
mov
add
inc
push
and
add
add
mov
add
or
push
or
add
(bad)
(bad)
jmp
add
add
add
mov
add
(bad)
(bad)
std
(bad)
jmp
frstor
sub
inc
add
add
add
cmp
add
adc
add
push
adc
add
xor
add
adc
add
add
add
add
add
movs
adc
push
adc
xor
add
add
add
add
and
lea
xor
in
lea
xor
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
and
(bad)
daa
xlat
gs
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
adc
add
sldt
add
add
add
sub
add
or
push
push
adc
add
sub
sbb
add
push
push
add
or
add
push
mov
adc
adc
add
add
add
add
inc
add
add
pop
add
add
adc
add
add
add
data16
add
add
add
add
push
or
add
add
pop
or
add
pop
pop
ror
jle
add
add
sldt
add
pop
cmp
add
add
add
mov
adc
mov
add
xor
add
add
mov
adc
cmps
sub
jle
add
add
pop
or
add
add
add
mov
adc
(bad)
sub
and
add
add
ficom
fimul
sub
push
mov
sub
mov
stc
add
push
inc
add
add
sub
add
adc
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
adc
sub
imul
add
cmp
add
add
inc
add
add
pop
add
add
adc
add
add
add
inc
add
add
add
and
add
push
push
or
push
add
or
jle
add
add
pop
or
add
add
add
mov
adc
leave
adc
out
add
add
pop
and
add
add
sub
adc
push
adc
add
add
mov
adc
mov
pop
push
adc
add
add
mov
adc
(bad)
fucomp
add
add
fucomp
add
add
inc
add
add
inc
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
out
add
inc
add
add
add
rol
add
push
add
add
add
add
add
mov
add
les
add
pop
adc
sldt
add
pop
or
add
sldt
add
sub
add
add
add
adc
add
or
add
mov
adc
test
dec
and
add
add
(bad)
(bad)
call
sub
adc
and
add
mov
adc
fs
(bad)
jmp
imul
add
add
(bad)
(bad)
call
add
add
add
(bad)
(bad)
call
push
adc
add
and
add
add
(bad)
(bad)
call
push
adc
add
add
(bad)
(bad)
jmp
mov
or
adc
cmp
(bad)
(bad)
call
push
sub
add
mov
adc
stc
(bad)
(bad)
jmp
cmps
and
add
add
(bad)
(bad)
call
push
adc
add
add
(bad)
(bad)
jmp
mov
add
add
(bad)
(bad)
jmp
adc
or
add
mov
adc
mov
(bad)
call
sub
and
add
add
(bad)
(bad)
(bad)
fnsave
(bad)
mov
add
imul
add
mov
adc
stos
std
(bad)
(bad)
cmp
std
(bad)
call
inc
add
add
pop
add
add
adc
add
add
add
add
add
add
add
add
add
or
sldt
add
das
pop
or
add
add
add
mov
adc
ror
sub
add
mov
adc
ret
sub
jle
add
add
pop
or
add
add
add
mov
adc
stos
sub
and
add
add
fiadd
fiadd
pop
lea
add
or
add
adc
pop
add
add
std
(bad)
(bad)
cmp
std
(bad)
(bad)
jle
add
add
std
add
add
sldt
add
sldt
add
pop
or
add
inc
fiadd
add
add
mov
adc
out
(bad)
call
or
mov
adc
add
adc
cmp
cld
(bad)
(bad)
cmp
adc
add
pop
xchg
pushf
adc
pop
pop
adc
and
add
add
cld
(bad)
jmp
bound
adc
push
adc
and
add
add
cld
(bad)
jmp
test
add
or
adc
xchg
pushf
adc
pop
pop
adc
adc
pop
pop
adc
and
mov
inc
inc
add
add
mov
add
add
push
mov
add
add
and
add
add
cld
(bad)
(bad)
cmp
(bad)
call
inc
add
add
pop
add
add
adc
add
add
add
add
add
jb
add
arpl
add
jle
add
or
or
add
add
push
pop
or
add
sldt
add
nop
add
add
sldt
add
add
add
mov
adc
mov
add
jo
sbb
add
sub
and
add
add
sub
jb
add
jo
pop
add
jo
pop
add
or
or
add
add
mov
adc
xchg
add
add
add
mov
adc
ja
(bad)
(bad)
fstp
(bad)
(bad)
jmp
fst
inc
add
add
pop
add
add
adc
add
add
add
add
add
add
add
add
adc
and
add
add
adc
jle
add
add
push
and
add
add
sub
adc
pop
pop
adc
and
add
add
sub
and
add
add
fisttp
fld
adc
or
add
adc
add
adc
and
add
add
sti
(bad)
(bad)
fld
sub
push
adc
adc
or
add
sldt
add
pop
or
add
sldt
add
or
add
sldt
add
jmp
or
add
add
fiadd
fiadd
push
adc
adc
pop
inc
pop
push
jle
add
add
or
add
push
pop
pop
push
sbb
or
add
sldt
add
push
pop
or
add
fisttp
mov
add
mov
add
adc
sub
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
jnp
add
add
add
adc
add
add
add
add
add
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
add
addr16
add
adc
add
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
add
or
add
push
add
add
xor
add
add
adc
inc
add
add
cmp
add
and
mov
mov
add
add
add
add
add
add
inc
add
add
push
mov
add
add
pop
inc
add
add
cmp
add
add
add
add
sbb
add
pop
or
jle
add
add
jb
push
adc
add
and
add
add
sub
and
add
add
add
add
add
jo
add
and
add
add
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
xchg
xchg
add
adc
xor
add
add
add
add
adc
inc
add
add
and
add
or
add
add
add
mov
add
imul
add
inc
add
add
add
add
add
add
or
push
push
pop
pop
push
add
add
pop
or
add
add
pop
or
add
pop
pop
push
pop
push
add
mov
sub
and
add
jb
and
push
pop
push
sub
add
and
add
add
jb
add
add
mov
cmp
(bad)
jmp
pop
mov
sub
pop
mov
sub
inc
inc
add
add
dec
(bad)
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
add
adc
add
and
das
xor
mov
add
mov
add
and
add
add
(bad)
jmp
mov
add
add
pop
or
add
add
or
adc
(bad)
jmp
mov
push
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
or
add
or
add
add
add
adc
xor
add
add
add
ds
jmp
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
sub
add
sbb
add
lds
add
or
add
pop
mov
add
mov
add
push
inc
add
add
push
add
add
inc
add
add
xor
add
push
add
add
add
add
or
push
pop
pop
push
or
add
add
push
adc
jnp
add
add
inc
jge
add
add
pop
dec
es
add
add
jle
add
add
sbb
add
add
mov
sub
push
or
add
add
mov
sub
pop
rol
fwait
pop
rol
inc
inc
add
add
mov
add
add
push
mov
add
add
and
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
add
add
xor
add
add
add
sub
add
or
add
add
add
push
sub
add
add
xor
add
add
add
add
and
mov
dec
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
dec
in
adc
dec
in
adc
inc
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
sub
add
or
add
push
mov
add
add
add
add
add
add
jle
add
add
pop
push
add
dec
fimul
inc
add
add
pop
add
add
add
mov
sub
mov
stc
add
add
add
add
cmp
add
mov
add
lds
add
pop
sub
add
add
push
adc
sub
add
pop
pop
sub
mov
add
push
add
sub
add
or
add
add
mov
add
test
push
mov
add
cmp
add
add
inc
add
add
pop
add
add
add
add
add
xchg
add
add
add
add
add
add
sub
inc
and
inc
xchg
inc
mov
add
add
add
add
add
add
imul
add
push
mov
add
add
push
or
add
add
push
adc
add
jo
lea
add
add
add
jo
or
pop
add
or
add
add
sbb
add
jg
add
add
add
or
daa
add
or
and
add
add
(bad)
(bad)
inc
add
add
add
xor
add
add
mov
add
push
(bad)
(bad)
jmp
add
add
sbb
add
and
add
add
add
push
add
add
add
add
mov
add
xor
(bad)
jmp
add
add
add
mov
add
and
(bad)
(bad)
fst
fst
cmp
lea
or
jle
add
add
or
jle
add
add
sbb
add
mov
add
add
sbb
add
mov
add
add
add
or
add
adc
add
add
sbb
add
pop
cmp
sbb
jle
add
add
sbb
add
sub
add
fiadd
and
add
add
(bad)
(bad)
inc
cmp
add
add
mov
add
sbb
(bad)
(bad)
cmp
(bad)
(bad)
inc
jnp
add
add
cmp
add
push
add
add
add
add
push
sub
xor
add
add
add
push
add
adc
add
imul
add
add
push
adc
add
adc
xor
add
add
add
inc
add
add
push
add
add
inc
add
add
xchg
add
add
add
add
add
push
or
add
add
pop
push
add
adc
push
adc
sbb
add
xor
jge
add
add
adc
push
adc
add
add
pop
inc
xor
add
add
mov
sub
aas
and
inc
inc
add
add
jge
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
sub
jle
add
add
push
push
adc
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
rol
adc
xor
add
add
add
adc
mov
pop
adc
inc
add
add
add
add
jae
add
or
jle
add
or
jb
add
jo
lea
add
add
push
adc
push
jb
add
jo
adc
sub
add
or
jle
add
add
sbb
add
push
add
adc
add
pop
rol
push
jb
add
jo
sbb
add
fiadd
sub
mov
add
mov
add
push
or
pop
dec
popa
push
adc
and
add
add
pop
jle
add
add
or
add
fiadd
push
inc
add
add
adc
add
adc
inc
add
add
adc
add
dec
add
add
add
add
sub
add
or
add
add
mov
pop
sub
sub
sbb
add
pop
push
add
adc
push
adc
add
add
fnstsw
add
add
add
push
or
add
and
push
adc
adc
inc
add
add
dec
add
add
add
add
add
add
mov
add
add
sub
jo
adc
sbb
add
sub
add
or
jle
add
add
pop
rol
jle
add
add
pop
rol
jle
add
add
push
adc
fiadd
add
push
adc
add
(bad)
(bad)
(bad)
fstp
sub
jle
add
add
sbb
add
push
add
sbb
add
pop
push
add
add
fiadd
fiadd
push
inc
add
add
pop
add
add
pop
inc
add
add
cmp
add
add
add
or
adc
add
add
mov
pop
sub
adc
cdq
add
add
sub
add
add
mov
pop
sub
sub
jle
add
add
sbb
add
push
add
add
add
mov
pop
sub
add
mov
pop
sub
jmp
fisttp
(bad)
jmp
add
mov
sub
mov
stc
add
add
lods
add
add
add
add
add
add
adc
add
add
add
sub
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
pop
add
add
add
push
add
add
xor
push
inc
and
and
mov
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
push
or
add
add
push
adc
pop
push
add
mov
sub
add
xor
and
add
add
add
jl
add
add
sub
add
jle
add
add
fwait
add
jo
sub
add
adc
add
add
add
mov
cmp
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
mov
add
adc
xor
add
add
add
mov
add
mov
add
and
loope
and
loope
mov
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
xor
add
add
add
adc
fwait
retf
and
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
push
push
add
add
sub
add
add
add
add
add
add
sbb
add
pop
push
add
add
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
adc
add
add
add
add
adc
xor
add
add
add
add
lods
mov
inc
and
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
push
adc
add
push
add
or
push
push
adc
push
add
or
push
sbb
add
adc
add
pop
add
add
add
add
sub
add
or
add
xor
add
add
adc
fnsave
loopne
and
ss
mov
add
add
add
add
add
add
add
add
add
push
mov
add
add
and
add
add
inc
add
add
sbb
add
pop
mov
add
mov
add
pop
inc
add
add
(bad)
(bad)
inc
add
push
add
add
add
add
sub
and
add
add
add
add
jo
pop
add
add
add
or
add
or
add
or
push
sbb
add
add
add
mov
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
mov
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
jle
add
add
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
out
pop
neg
out
pop
neg
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
add
sub
adc
add
pop
add
add
add
adc
add
mov
sub
mov
stc
add
push
cli
pop
adc
push
cli
pop
adc
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
add
push
jb
add
jo
sbb
add
xor
add
or
je
add
sbb
sbb
add
jno
add
adc
add
push
inc
add
add
and
add
or
add
add
add
add
add
add
add
add
add
add
add
jle
add
or
push
or
add
xor
add
jle
add
add
shr
xor
add
add
add
jo
jnp
add
add
out
add
jo
sbb
sbb
add
std
add
jo
jb
add
jo
lea
or
jle
add
add
or
jb
add
jo
or
jb
add
jo
or
jg
add
add
add
or
add
sbb
add
add
or
inc
add
add
add
sbb
add
sub
and
add
add
(bad)
jmp
cmp
add
add
pop
rol
and
add
add
(bad)
jmp
bound
add
add
mov
cmp
(bad)
(bad)
inc
pop
dec
das
push
and
add
add
(bad)
jmp
mov
sub
add
push
pop
pop
shr
xor
add
and
add
add
(bad)
jmp
xchg
cwde
sub
mov
add
add
add
add
add
push
mov
add
add
sub
add
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
push
add
add
add
add
add
adc
xor
add
add
adc
mov
movups
inc
add
add
add
add
push
inc
add
add
pop
add
add
cmovne
add
push
add
add
add
add
add
js
add
jle
add
or
jle
add
add
inc
pop
rol
jle
add
add
jne
rol
jle
add
add
pop
rol
and
add
add
push
jle
add
add
sbb
add
sub
and
add
add
sub
jle
add
add
pop
rol
and
add
add
sub
and
add
add
(bad)
(bad)
(bad)
(bad)
pop
add
es
pop
add
push
inc
add
add
pop
add
add
cmovne
add
jbe
add
mov
add
add
add
or
or
add
add
pop
rol
jle
add
add
and
sbb
add
jo
ins
add
jo
ja
add
sbb
or
add
jo
test
mov
add
sbb
push
add
add
add
add
mov
movntps
add
add
sbb
add
sub
and
add
add
(bad)
(bad)
jmp
add
add
add
add
or
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
(bad)
(bad)
(bad)
(bad)
fst
add
add
fst
add
add
inc
add
add
inc
add
add
cmovne
add
add
add
adc
add
add
add
js
add
das
add
add
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
pop
adc
and
add
add
jle
add
add
lds
add
sbb
add
cmp
add
add
add
add
mov
movntps
add
add
pop
sub
add
adc
cmp
(bad)
(bad)
jle
add
add
fld
add
sbb
add
sub
add
mov
(bad)
(bad)
(bad)
jmp
add
add
add
mov
(bad)
(bad)
(bad)
call
push
sbb
add
pop
and
add
add
(bad)
(bad)
(bad)
cmp
xchg
scas
or
mov
add
add
add
add
add
push
mov
add
add
and
adc
cmp
(bad)
(bad)
(bad)
jle
add
add
in
add
sbb
add
sub
sbb
inc
pop
rol
and
add
add
(bad)
(bad)
jmp
adc
add
add
mov
(bad)
(bad)
(bad)
call
sub
and
add
add
(bad)
(bad)
call
pop
sub
and
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
pop
and
add
mov
(bad)
(bad)
(bad)
call
push
pop
or
(bad)
and
add
add
(bad)
(bad)
jmp
mov
pop
add
add
(bad)
(bad)
(bad)
fst
fisttp
add
add
pop
add
add
cmovne
add
ret
add
add
add
push
or
adc
jb
add
jo
adc
add
and
add
sbb
push
add
add
dec
add
jo
lea
add
add
or
xor
adc
sbb
add
mov
add
or
jle
add
add
mov
rol
jb
add
jo
arpl
add
outs
add
jo
jg
add
xor
add
sbb
add
add
add
mov
(bad)
(bad)
(bad)
call
or
imul
add
mov
(bad)
(bad)
(bad)
jmp
add
or
push
adc
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
(bad)
(bad)
(bad)
(bad)
fst
fisttp
or
add
mov
movntps
push
inc
add
add
dec
add
add
cmovne
add
add
add
add
add
add
add
repnz
add
add
inc
add
add
add
add
add
add
add
mov
add
add
add
adc
add
mov
add
sbb
inc
sub
(bad)
jmp
push
add
add
cmp
cld
(bad)
inc
push
xchg
or
add
cmp
add
or
add
adc
push
add
add
(bad)
(bad)
(bad)
cmp
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
jge
add
push
add
add
or
or
sbb
pop
rol
pop
pop
pop
push
add
sbb
push
add
pop
rol
pop
pop
pop
push
add
mov
movntps
add
xor
and
add
add
sub
jle
add
add
and
sbb
add
add
(bad)
(bad)
jmp
inc
and
adc
cmp
(bad)
dec
pop
adc
add
add
(bad)
(bad)
jmp
ret
add
add
fild
add
pop
rol
and
add
add
(bad)
(bad)
jmp
mov
add
(bad)
(bad)
(bad)
fucom
(bad)
(bad)
jmp
fstp
(bad)
(bad)
call
push
inc
add
add
pop
add
add
cmovne
add
and
add
cmp
add
add
add
add
add
adc
jae
add
or
and
add
add
adc
pop
arpl
and
add
add
mov
(bad)
(bad)
sub
jb
add
jo
push
add
add
add
add
mov
movntps
add
jo
lea
add
add
push
adc
push
jb
add
jo
adc
sub
add
or
and
add
add
fnstsw
add
fnsave
add
and
add
add
std
(bad)
call
add
popa
add
add
add
add
mov
(bad)
std
(bad)
(bad)
cmp
adc
adc
imul
and
add
mov
(bad)
std
(bad)
jmp
add
add
or
jle
add
add
pop
rol
jle
add
add
pop
rol
fstp
add
add
fst
add
add
add
push
add
push
adc
or
adc
cmp
(bad)
jmp
add
mov
sub
mov
stc
add
cmp
add
add
adc
add
adc
add
add
mov
(bad)
std
(bad)
jmp
dec
jle
add
add
pop
rol
jle
add
or
fstp
fstp
add
add
mov
phsubw
(bad)
dec
pop
pop
pop
inc
lea
add
and
add
add
cld
(bad)
(bad)
cmp
sti
(bad)
call
adc
add
sub
sbb
add
jo
lea
add
add
or
or
jb
add
jo
adc
jb
add
jo
adc
adc
or
int
add
adc
pop
add
or
jle
add
add
je
rol
jle
add
add
jo
add
add
add
pop
rol
jb
add
jo
in
add
jo
pop
add
or
fstp
fst
sbb
pop
rol
jle
add
add
pop
rol
jle
add
add
pop
rol
jle
add
add
pop
rol
(bad)
(bad)
(bad)
jmp
ffree
(bad)
(bad)
(bad)
jle
add
add
cmp
sbb
add
jo
adc
pop
add
or
jb
add
jo
sbb
add
or
add
add
sbb
push
add
add
push
add
or
fld
jmp
fnstsw
clc
(bad)
jmp
or
add
mov
(bad)
sti
(bad)
inc
cmp
(bad)
jmp
add
adc
cmp
push
add
sti
(bad)
call
add
or
(bad)
call
mov
add
mov
add
and
add
add
sti
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
or
jle
add
add
and
add
add
sbb
pop
rol
jle
add
add
cmp
sbb
fisubr
and
add
add
sti
(bad)
inc
mov
cmp
sti
(bad)
jmp
or
add
mov
(bad)
sti
(bad)
(bad)
cmp
std
(bad)
call
add
add
inc
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
sbb
add
push
pop
add
push
add
add
add
add
add
pop
add
push
add
add
add
add
pop
add
cmp
add
sbb
add
push
add
add
add
add
or
add
add
outs
or
add
add
add
add
add
or
add
or
add
add
add
xor
add
add
push
inc
add
add
and
add
or
add
add
add
add
add
add
add
add
add
add
add
push
add
or
push
or
sub
add
push
add
xor
add
pop
pop
sbb
ror
jb
add
jo
push
add
jo
arpl
jo
sbb
push
add
add
and
push
pop
pop
shr
xor
add
and
inc
pop
add
out
pop
add
inc
inc
add
add
dec
add
add
add
add
add
add
mov
add
add
and
add
add
(bad)
inc
jb
add
jo
sbb
add
sub
and
add
mov
cmp
(bad)
jmp
push
add
add
jo
lea
add
add
push
jb
add
jo
or
pop
add
or
add
add
push
add
add
(bad)
jmp
inc
and
or
inc
add
das
add
push
xor
and
add
add
(bad)
jmp
scas
add
push
pop
pop
shr
xor
add
and
add
add
(bad)
jmp
shl
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
inc
sbb
add
add
add
add
add
add
add
xor
add
mov
add
add
add
add
add
add
push
inc
add
add
pop
add
add
add
add
add
aam
add
sti
add
add
add
add
(bad)
frstor
cmp
add
add
add
add
add
add
add
add
push
mov
add
add
push
push
push
push
add
add
jo
lea
or
adc
sub
add
or
xor
add
or
add
or
add
jo
or
jb
add
jo
or
sub
add
jge
add
add
and
push
pop
pop
shr
xor
add
add
add
jo
sbb
add
or
pop
add
or
add
add
and
push
pop
pop
shr
xor
add
jle
add
add
sbb
add
add
mov
add
sub
(bad)
inc
and
xor
and
add
add
(bad)
(bad)
jmp
add
and
add
add
or
add
add
mov
add
std
(bad)
(bad)
jmp
add
add
add
mov
add
out
(bad)
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
inc
sbb
add
add
add
add
add
xor
add
add
add
add
add
jle
add
or
add
add
sub
add
or
push
sub
add
add
sub
add
push
sub
xor
add
add
add
add
and
fld
and
fld
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
loope
cwde
jns
loope
cwde
jns
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
or
add
push
add
add
add
add
mov
add
mov
add
and
add
rol
mov
add
add
add
add
add
push
mov
add
add
add
add
add
sub
add
push
popa
shr
xor
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
add
adc
xor
icebp
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
mov
add
cmps
add
add
add
add
or
and
push
pop
pop
shr
xor
add
add
sub
add
push
and
add
add
sub
add
and
add
add
pop
adc
ja
add
add
mov
sub
add
jo
lea
add
add
pop
push
jle
add
add
pop
pop
add
xor
add
or
add
add
or
add
jo
pop
sub
add
or
and
shl
sub
fcmovbe
xor
mov
add
add
add
add
add
add
add
add
add
push
mov
add
add
and
add
add
(bad)
jmp
add
add
add
mov
cmp
add
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
xlat
add
adc
xor
add
add
add
add
sub
push
mov
sub
mov
stc
add
sub
xchg
or
or
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
and
pusha
xchg
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
jge
add
add
sbb
add
mov
add
adc
inc
add
add
push
add
add
inc
add
add
push
add
add
add
jge
add
sub
add
jle
add
add
pop
rol
and
add
add
sub
add
push
jle
add
add
dec
and
add
add
add
aad
xor
aad
xor
inc
inc
add
add
sar
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
add
push
pop
pop
shr
xor
add
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
add
lahf
lahf
add
adc
xor
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
and
inc
sub
push
addr16
sub
add
add
add
add
push
mov
add
add
push
sbb
add
or
sub
add
sbb
add
rol
add
add
adc
inc
add
add
push
add
add
inc
add
add
sub
add
add
add
pop
add
add
or
and
push
pop
push
sub
add
push
add
add
add
jnp
add
add
push
add
add
add
mov
sub
and
add
add
mov
sub
add
add
pop
push
add
add
add
mov
sub
add
add
fld
jae
mov
add
add
add
inc
add
add
inc
push
mov
add
add
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
cmps
cmps
add
adc
xor
add
add
add
add
add
sub
add
or
add
add
add
push
push
cmp
add
add
add
or
inc
add
push
add
push
cmp
add
add
xor
add
add
add
add
and
stos
scas
leave
push
mov
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
and
mov
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
or
add
push
add
add
add
add
ins
inc
mov
and
mov
mov
add
add
add
add
add
push
mov
add
add
add
jnp
add
add
sbb
jge
add
add
add
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
cmp
add
adc
xor
add
add
add
add
sub
push
mov
sub
mov
stc
add
leave
sti
arpl
leave
sti
arpl
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
push
sub
add
push
sub
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
fild
add
sbb
add
push
mov
or
or
add
add
add
add
add
mov
sub
mov
stc
add
inc
add
add
adc
add
adc
inc
add
add
nop
add
add
add
push
add
pop
or
add
add
mov
or
loope
adc
add
or
xor
add
outs
xor
add
add
sub
add
or
add
or
add
or
add
adc
add
add
pop
push
add
and
push
pop
push
sub
jnp
add
add
jnp
add
add
jle
add
add
jle
add
add
and
fiadd
and
mov
add
add
add
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
adc
add
push
or
int3
add
add
sub
add
or
push
inc
add
add
pop
add
add
or
add
add
add
cmp
add
sub
add
push
add
add
adc
and
add
pop
push
add
and
push
pop
push
sub
add
push
and
add
add
adc
ret
add
add
and
add
add
sub
add
add
pop
jge
add
add
add
add
mov
or
xchg
sub
and
add
add
fst
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
push
add
or
push
adc
sub
add
or
add
or
add
or
push
or
add
add
mov
or
cmp
call
mov
add
mov
add
cmp
add
push
inc
add
add
pop
add
add
or
add
add
add
add
add
add
add
add
jae
add
or
add
jnp
add
add
test
add
pop
sar
add
add
jnp
add
add
mov
add
add
add
add
add
and
add
add
add
cmp
add
and
add
add
sub
add
add
mov
or
xchg
sub
add
add
pop
sar
add
add
add
add
mov
or
js
(bad)
jmp
add
add
add
mov
or
imul
add
add
fnstsw
add
add
add
add
push
pop
sar
add
add
add
add
add
sub
jge
add
add
and
add
pop
jge
add
add
jmp
(bad)
(bad)
push
add
add
or
pop
adc
jb
add
add
or
pop
add
or
sub
add
or
add
std
(bad)
(bad)
cmp
(bad)
(bad)
call
inc
add
add
and
add
adc
inc
pop
add
add
add
jbe
add
aam
add
lds
add
inc
add
add
add
add
or
and
push
pop
push
sub
and
add
pop
push
add
and
add
pop
sar
add
add
and
and
add
and
add
add
or
pop
xor
add
add
mov
or
xchg
add
add
add
add
add
inc
and
add
add
add
mov
or
addr16
(bad)
jmp
add
push
add
add
(bad)
(bad)
inc
sub
add
push
add
cmp
add
xor
add
adc
cmp
add
sub
add
push
add
cmp
add
inc
push
inc
and
add
add
add
mov
or
sbb
(bad)
jmp
add
add
add
mov
or
or
(bad)
(bad)
ffree
(bad)
(bad)
jmp
fnstsw
sub
inc
xchg
add
add
add
jno
add
cmp
add
lods
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
xor
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
sub
push
mov
sub
mov
stc
add
pusha
pop
test
and
test
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
and
adc
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
jge
add
add
adc
add
cmp
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
and
mov
cmp
and
add
add
add
add
add
push
mov
add
add
sub
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
je
imul
add
add
adc
add
and
add
adc
add
and
dec
inc
add
add
adc
add
and
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
or
add
sub
add
inc
add
add
add
add
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
or
push
add
add
add
add
add
push
add
add
push
add
add
push
add
outs
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
push
add
cdq
add
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
inc
add
add
add
enter
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
aaa
add
add
add
add
adc
cmp
pop
add
add
adc
cmp
lldt
add
add
add
add
add
add
add
add
add
sbb
and
add
add
xor
add
add
add
add
xor
add
add
add
cmp
aaa
add
cmp
cmp
cmp
add
add
cmp
cmp
cmp
add
add
inc
add
inc
add
push
add
aaa
add
cmp
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
push
add
pop
add
aaa
add
cmp
aaa
add
cmp
cmp
cmp
add
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
push
add
pop
add
add
add
xchg
dec
add
add
je
add
add
xchg
aaa
add
mov
add
add
xchg
cmp
pushf
and
add
add
add
add
add
add
add
and
add
add
add
xor
add
add
add
and
add
add
add
clc
and
add
add
add
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
enter
add
add
or
mov
add
add
xchg
dec
add
add
add
xor
add
add
add
add
add
add
xchg
add
add
test
add
add
or
add
clc
aaa
add
add
or
add
dec
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
inc
add
add
sbb
push
add
inc
add
add
or
(bad)
xor
add
add
or
sldt
add
adc
lock
add
add
add
adc
call
add
add
add
dec
add
add
add
add
mov
add
add
add
add
add
add
adc
mov
add
add
add
add
dec
add
add
sbb
add
add
add
dec
add
add
xchg
or
add
enter
add
xchg
or
add
sbb
add
add
add
add
add
add
xchg
or
add
int3
dec
add
add
add
adc
push
add
add
add
pop
add
add
add
adc
inc
pop
add
add
add
adc
mov
add
add
sbb
add
add
fcomp
add
or
adc
sub
add
add
or
adc
jl
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
sbb
test
push
add
pusha
add
add
add
push
add
add
add
add
popa
add
add
or
pop
add
bound
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
or
sbb
cwde
arpl
add
add
add
add
add
add
or
sbb
fs
or
sbb
mov
add
add
xchg
sbb
test
sbb
add
add
aaa
add
cmp
inc
add
inc
add
inc
add
inc
add
push
add
inc
add
push
add
push
add
pop
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
add
inc
add
add
adc
dec
add
add
add
or
and
dec
add
add
add
or
xor
dec
add
add
add
or
inc
add
or
dec
add
or
push
add
or
pop
add
verr
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
inc
add
test
inc
add
add
add
add
add
add
add
add
add
fld
fild
pop
add
add
add
jno
dec
add
add
add
add
stc
add
add
mov
add
add
add
rol
add
add
test
inc
add
add
add
or
dec
add
push
add
mov
add
add
add
add
add
add
add
add
add
lds
fld
inc
add
add
add
inc
add
pop
add
add
ja
rol
inc
add
push
add
jle
xlat
add
nop
add
add
mov
add
add
add
add
dec
add
add
dec
add
add
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
sub
add
add
sti
add
add
add
dec
add
add
dec
add
add
dec
add
add
push
add
add
dec
add
add
dec
add
add
dec
add
imul
add
add
add
dec
add
add
add
add
dec
add
add
add
loope
imul
add
add
and
loopne
imul
add
push
imul
add
imul
add
add
pop
imul
add
imul
add
add
add
pop
imul
add
or
dec
add
add
add
add
add
or
adc
sub
xor
aaa
add
inc
add
pop
add
add
add
add
add
add
lock
add
hlt
add
add
add
add
add
add
add
add
fs
add
test
add
add
add
test
add
add
add
add
add
add
add
add
gs
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
arpl
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
gs
add
push
arpl
popa
jb
push
push
gs
bound
arpl
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jae
gs
cs
dec
add
jb
popa
ins
add
ins
outs
jb
push
je
gs
ins
add
popa
add
imul
jb
jns
dec
inc
imul
ins
add
jo
jae
add
je
add
arpl
je
outs
outs
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
ins
jo
gs
imul
add
jb
outs
add
jo
jns
dec
outs
imul
jno
popa
ins
imul
jb
outs
add
pop
dec
outs
gs
popa
ins
imul
xor
dec
outs
je
xor
inc
outs
jb
popa
je
inc
jae
gs
bound
dec
gs
outs
fs
outs
outs
add
je
add
je
outs
fs
popa
jae
add
jbe
imul
outs
popa
add
je
inc
outs
je
jns
outs
imul
add
ja
jne
add
jns
gs
jb
popa
jns
inc
outs
outs
arpl
add
outs
ins
gs
outs
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
data16
outs
arpl
jno
popa
ins
jae
push
jns
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
bound
arpl
jb
popa
jns
inc
outs
jo
add
jo
outs
ins
popa
imul
add
jo
outs
ins
popa
imul
js
arpl
imul
ins
bound
addr16
inc
outs
fs
popa
jae
add
je
inc
jne
ins
dec
popa
ins
add
gs
je
dec
outs
jae
popa
outs
arpl
jb
ins
inc
outs
fs
outs
ja
popa
jo
push
outs
ins
outs
popa
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
jae
je
inc
jo
ins
imul
inc
popa
jae
add
jae
gs
cs
arpl
imul
arpl
inc
jbe
fs
arpl
inc
jb
popa
je
inc
outs
ins
popa
imul
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
addr16
ja
bound
gs
add
arpl
ins
imul
jne
arpl
outs
jb
je
jb
bound
add
bound
arpl
add
data16
inc
pop
xor
arpl
outs
jb
push
add
xor
inc
pop
xor
imul
outs
imul
add
jb
jae
jne
arpl
add
add
add
cmp
add
js
jne
bound
jae
add
adc
jb
popa
add
jbe
outs
add
outs
add
adc
jb
add
imul
imul
sub
add
jne
jae
jbe
popa
add
add
add
add
adc
xor
jge
cmp
jnp
xor
jge
and
add
sub
add
imul
popa
add
or
jb
add
outs
add
adc
outs
add
jb
imul
jae
outs
add
or
xor
jge
sub
add
jnp
xor
jge
and
add
push
outs
add
add
arpl
add
outs
add
adc
xor
jge
jl
jnp
xor
jge
pop
add
(bad)
add
add
outs
add
jne
add
jb
add
add
add
outs
add
jb
jne
add
add
ins
add
push
popa
add
jae
jo
add
add
bound
imul
js
add
imul
popa
add
jae
popa
add
or
add
ins
add
add
jnp
xor
jge
and
jnp
xor
jge
and
jnp
xor
jge
and
jnp
xor
jge
sub
add
pop
add
punpckhwd
outs
add
add
ja
imul
popa
add
jae
jne
add
add
popa
add
popa
add
add
cmp
add
and
add
add
ja
jb
popa
add
data16
ins
add
popa
add
add
add
adc
add
jne
jne
jae
outs
add
add
add
push
jne
push
jne
outs
add
cmp
add
pop
add
xor
jge
sub
add
ins
add
jne
imul
or
ins
add
ins
add
add
jnp
xor
jge
pop
add
xor
jge
sub
add
das
add
xor
jge
and
add
imul
jo
add
add
add
js
outs
add
add
jb
imul
add
bound
cmp
jnp
xor
jge
and
jnp
xor
jge
sub
add
imul
outs
add
or
imul
jne
add
jo
add
imul
add
outs
add
cmp
add
and
jnp
xor
jge
and
add
ja
jb
jne
outs
add
add
popa
add
js
jne
push
jae
imul
add
imul
jae
push
or
add
imul
jae
popa
add
outs
add
popa
add
add
jb
add
and
jnp
xor
jge
add
xor
jge
das
add
packsswb
imul
jae
popa
add
add
jb
jb
jne
imul
push
adc
add
popa
add
jb
add
outs
add
sbb
xor
jge
add
xor
jge
and
jnp
xor
jge
sub
add
ja
outs
add
data16
add
jae
jae
outs
add
ins
add
js
add
imul
add
add
popa
add
add
add
jl
add
jb
outs
add
jne
add
outs
add
imul
outs
add
popa
add
outs
add
ins
add
add
jo
outs
add
popa
add
add
outs
add
add
add
adc
jae
add
cmp
jnp
xor
jge
and
add
jne
imul
add
bound
outs
add
adc
add
outs
add
jnp
xor
jge
pop
add
or
jb
ja
imul
popa
add
add
add
arpl
outs
add
add
cmp
jnp
xor
jge
and
add
jnp
xor
jge
and
jnp
xor
jge
and
add
jbe
imul
ins
add
or
add
ins
add
add
ja
jae
popa
add
outs
add
outs
add
add
add
or
popa
add
ja
add
add
outs
add
outs
add
ja
and
jnp
xor
jge
sub
jnp
xor
jge
add
xor
jge
jl
jnp
xor
jge
and
add
outs
add
imul
outs
add
imul
add
or
add
add
add
js
popa
add
cmp
add
and
add
add
jae
add
js
add
or
jnp
xor
jge
add
dec
add
add
out
fldcw
mov
stc
cmp
call
or
and
add
add
push
add
add
add
and
or
and
add
and
sbb
add
add
inc
adc
push
push
push
add
push
push
sbb
add
push
add
add
push
add
push
push
sbb
add
sbb
and
sbb
sbb
adc
add
jno
add
adc
add
push
push
push
push
add
push
push
sbb
push
push
push
push
add
push
add
sbb
add
adc
add
add
ins
push
and
add
adc
and
sbb
adc
pop
add
push
sbb
sbb
add
or
sbb
adc
and
sbb
push
push
add
add
and
movs
add
add
push
or
add
and
and
xor
sbb
mov
add
add
add
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
add
push
or
or
and
or
push
push
add
add
push
add
add
sbb
and
sbb
and
add
add
sbb
add
add
push
or
and
or
add
sbb
and
or
add
or
push
sbb
add
or
or
or
add
lea
xchg
push
add
add
adc
push
and
sbb
and
add
add
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
xor
xor
xor
xor
add
imul
add
push
add
adc
jo
jb
addr16
and
xor
xor
add
bound
xor
xor
popa
sub
sub
sub
sub
xor
xor
add
and
ss
push
outs
ja
jns
jnp
jno
jbe
ja
jge
jl
or
push
push
push
and
add
xor
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
add
or
push
sbb
or
or
adc
adc
add
push
or
or
pop
add
sbb
add
or
pop
or
ins
adc
push
sbb
push
sbb
add
add
or
pop
push
sbb
add
add
sbb
or
or
or
push
sbb
add
add
or
or
pop
add
sbb
push
or
add
or
sbb
or
add
push
pop
add
or
pop
pop
add
push
sbb
adc
push
or
add
or
or
push
or
pop
add
add
pop
add
add
or
pop
add
or
and
adc
adc
add
add
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
xor
mov
rol
add
adc
add
jne
jne
jae
outs
add
add
add
and
add
add
stos
push
pop
pop
das
aas
mov
and
dec
inc
mov
inc
lock
out
into
cli
jl
dec
sbb
mov
xchg
xor
retf
mov
stos
fdiv
(bad)
mov
(bad)
call
push
jl
aaa
outs
add
imul
xor
push
sbb
lahf
jmp
ds
dec
data16
or
sub
arpl
loop
pop
gs
push
int
or
sub
loope
or
jg
idiv
fild
les
xchg
scas
dec
adc
js
xor
or
mov
push
jle
shl
aam
in
sub
ficom
xor
out
sub
jo
pop
xchg
into
cld
gs
or
and
xchg
or
cmc
mov
loope
xor
pop
pusha
movs
aas
and
mov
test
cmp
in
xchg
add
jmp
xor
or
jg
xchg
sub
movs
jecxz
out
sbb
push
pusha
jmp
push
dec
dec
xchg
popf
inc
ret
add
mov
cmp
inc
add
movs
dec
push
xchg
and
imul
sub
mov
pop
nop
scas
mov
int3
cld
mov
and
pop
and
cmp
sbb
mov
sub
adc
icebp
cld
sbb
js
xchg
sbb
aaa
pop
sbb
add
pushf
push
jl
outs
mov
inc
jge
xchg
or
mov
jnp
icebp
retf
sahf
cwde
pushf
fist
jno
push
stos
cwde
out
(bad)
jg
xchg
sar
in
mov
and
adc
push
jns
inc
cli
gs
add
ror
mov
gs
or
cld
fwait
and
das
inc
iret
imul
push
jno
ins
(bad)
push
mov
sub
lds
push
push
fs
out
pop
sbb
xor
test
dec
jb
xchg
neg
mov
jnp
xor
daa
pop
sar
out
adc
push
mov
and
mov
aaa
imul
ins
scas
jb
fsubrp
dec
jmp
pop
sar
push
mov
call
push
inc
ret
js
mov
fstp
data16
jns
ror
push
and
dec
test
pop
stos
mov
imul
aaa
jo
std
out
rcr
mov
loope
xor
add
mov
into
aam
xlat
repnz
mov
inc
cmps
or
movs
mov
pop
fstp
jnp
daa
retf
test
sbb
sbb
push
adc
(bad)
mov
in
les
mov
pop
es
das
xchg
mov
sar
cs
push
sti
ret
mov
mov
cmp
inc
or
push
pop
mov
dec
fs
xor
and
ret
and
inc
icebp
inc
mov
mov
mov
push
lahf
je
add
jmp
cmp
mov
sbb
cmp
cwde
push
sub
inc
mov
mov
mov
in
jmp
js
call
sbb
in
loop
stc
addr16
or
popf
and
cmp
lods
test
ins
pop
ror
xchg
ja
xor
mov
fbld
or
push
adc
out
xor
imul
mov
cdq
movs
and
push
stc
(bad)
xchg
das
repz
dec
icebp
xor
loope
jmp
lods
sub
fsub
in
gs
add
je
test
and
test
fbld
jecxz
mov
mov
popa
je
scas
imul
in
sub
sbb
mov
out
sbb
dec
out
fwait
mov
(bad)
clc
adc
aam
idiv
clc
push
jmp
fdiv
fdiv
nop
ss
out
cwde
mov
ret
out
int
adc
mov
retf
jp
adc
sbb
or
sbb
xor
sub
push
aas
sbb
mov
ret
inc
xor
sub
call
push
jae
push
inc
or
adc
data16
pop
jge
test
stos
jb
gs
add
add
pop
xchg
std
fist
movs
push
test
ins
call
dec
call
loop
xor
xor
jno
jno
outs
cmps
mov
xchg
pop
inc
comiss
mov
cdq
int3
idiv
retf
stos
loop
cld
jp
ds
or
sbb
jmp
ffreep
repnz
inc
dec
inc
sub
ffreep
sub
retf
fmul
fld
pushf
pop
lea
lds
out
push
mov
mov
sbb
sbb
push
inc
fdivr
xchg
mov
lahf
pushf
es
dec
scas
mov
int
add
fdivr
sti
lock
(bad)
(bad)
mul
sbb
mov
cmp
int3
in
psllw
sbb
in
pop
enter
gs
xchg
loopne
bound
je
call
or
sahf
sub
sbb
pop
movs
punpcklwd
cs
jnp
in
mov
or
xor
enter
mov
(bad)
pushf
ds
and
sar
std
jp
adc
(bad)
push
adc
outs
scas
dec
fnstsw
call
push
jmp
ds
jecxz
dec
mov
mov
in
push
retf
cmp
loope
aad
sbb
adc
repz
pop
test
imul
and
xor
aad
cmp
mov
mov
in
fisubr
adc
out
adc
mov
inc
je
mov
push
dec
push
mov
xchg
mov
aaa
dec
sub
mov
sti
sahf
jne
mov
loopne
push
cmp
shl
mov
and
vmptrst
call
dec
fwait
mov
ins
fadd
jae
sbb
dec
ret
stc
stc
fnsetpm(287
or
push
out
mov
xor
ds
cmps
pop
icebp
popf
cwde
ds
mov
popa
inc
sar
dec
cmp
pop
mov
jb
adc
jg
mov
mov
inc
imul
mov
pmulhw
cli
jp
mov
mov
into
popf
loope
inc
sub
gs
(bad)
dec
sub
les
mov
pop
hlt
mov
fadd
into
lds
jnp
ss
pop
xchg
lea
xchg
jg
aaa
inc
and
mov
stos
stc
xchg
mov
pop
ins
div
scas
cmp
dec
imul
adc
mov
repnz
int3
jnp
leave
outs
(bad)
cmp
test
ins
or
cld
or
fimul
stos
mov
jo
(bad)
shl
ret
cld
add
std
call
ins
test
mov
iret
inc
adc
mov
hlt
jbe
push
lea
add
push
mov
xchg
repnz
mov
or
pop
push
fs
adc
iret
cld
push
repz
aaa
outs
dec
pop
(bad)
xchg
xor
in
ror
and
dec
jp
inc
movs
out
mov
mov
dec
mov
js
push
push
adc
cmp
psllq
cli
ret
sbb
arpl
dec
mov
inc
add
xor
stc
repz
and
mov
sub
fisttp
pop
inc
pop
stc
xchg
mov
mov
inc
into
neg
mov
or
mov
out
inc
call
sbb
cmp
ss
fadd
in
fidivr
stc
pop
dec
pusha
(bad)
lds
pop
xchg
adc
fldcw
xor
mov
je
and
scas
xor
xchg
(bad)
fcmove
je
dec
push
inc
push
fsub
es
push
fcom
pop
ror
les
xor
les
add
push
dec
lods
ss
add
cwde
dec
sub
mov
movs
push
retf
ins
mov
jp
sub
mov
test
xlat
aam
lahf
adc
xchg
xchg
push
outs
pop
ja
(bad)
frstor
shl
cmp
and
mov
push
movs
dec
gs
into
lods
xchg
test
inc
fwait
dec
adc
cld
push
aam
and
ss
fstp
in
push
cli
and
(bad)
test
mov
xchg
cmp
popf
xor
div
pusha
js
cs
fisttp
sbb
call
sahf
inc
(bad)
sbb
mov
(bad)
cmps
out
mov
js
pop
pop
sti
(bad)
enter
sbb
mov
inc
lods
mov
sub
inc
dec
inc
shl
in
fiadd
xor
leave
lods
adc
push
sbb
mov
jmp
add
dec
cmp
xor
rcl
(bad)
in
pop
push
push
pushf
cdq
push
nop
push
pop
ror
ret
test
lods
(bad)
ja
shl
mov
lods
cmps
or
daa
aad
jne
outs
loope
pop
pop
int
mov
es
inc
mov
mov
js
rcl
ja
cmp
mov
add
pop
sub
daa
jo
popa
into
pop
call
xor
mov
push
cmp
push
mov
cmp
mov
mov
jnp
into
mov
jecxz
out
movs
inc
and
pop
pop
ja
imul
jmp
inc
xchg
push
ins
pop
pop
test
or
loope
push
and
ret
scas
(bad)
inc
jno
pop
xchg
int
cmps
ins
cli
mov
and
adc
and
or
xor
jg
xor
pop
shl
mov
cmp
cmps
and
cmp
jns
sar
pop
and
ins
xchg
(bad)
xchg
inc
test
rcr
jne
and
adc
adc
imul
sar
in
in
adc
mov
ds
xor
shl
or
(bad)
cld
sub
add
fucomip
inc
ja
cmp
in
cmps
out
mov
pop
or
sbb
mov
inc
je
pop
and
ficom
pop
cmp
push
add
aaa
jno
mov
js
jmp
push
out
inc
dec
fld
les
stos
cmps
retf
fdivr
call
rcr
inc
data16
and
scas
movs
lods
lea
lods
popa
mov
mov
call
jb
push
(bad)
mov
fbstp
call
clc
repnz
in
test
dec
lods
add
xchg
loope
in
test
fisttp
fistp
aas
sub
(bad)
jmp
js
aam
cmps
aad
movs
scas
dec
(bad)
jecxz
adc
mul
out
repz
nop
sbb
scas
out
(bad)
arpl
xor
jecxz
(bad)
lods
xlat
cmps
(bad)
rcr
jb
hlt
inc
jo
scas
sub
mov
fwait
arpl
xor
ret
sub
cs
mov
cmp
push
inc
cdq
xchg
(bad)
retf
dec
jecxz
jo
bound
mov
enter
cmp
push
jo
cld
cmp
mov
sub
add
mov
repz
call
ficomp
(bad)
and
adc
and
ret
add
sbb
mov
cmp
push
dec
(bad)
pop
je
pop
pop
adc
and
mov
rcr
inc
push
(bad)
adc
jle
jno
mov
in
pop
test
pop
int3
jns
mov
xor
inc
mov
mov
push
sbb
shl
cmps
repnz
and
or
pusha
nop
xchg
mov
sub
mov
mov
test
mov
jg
xor
jns
cmp
outs
mov
fidivr
mov
dec
js
dec
xchg
call
and
xchg
jnp
enter
jmp
movs
retf
mov
pop
mov
push
jp
(bad)
and
push
dec
and
jmp
dec
adc
or
out
in
mov
mov
mov
sbb
xchg
dec
pop
aam
adc
add
push
mov
mov
and
ja
daa
mov
ret
inc
data16
mov
jne
std
test
pop
mov
sbb
outs
addr16
dec
and
aad
push
inc
retf
jl
mov
cwde
(bad)
ins
xchg
call
cmc
test
push
shl
mov
lahf
lahf
mov
jb
js
ins
adc
hlt
inc
inc
daa
outs
(bad)
cmp
or
mov
aaa
add
mov
fcomp
xor
push
call
and
and
add
mov
stc
inc
add
inc
add
popf
gs
imul
call
lds
out
mov
and
mov
pusha
adc
in
into
shl
fild
mov
mov
loop
div
adc
push
shl
arpl
and
dec
push
cmps
popf
push
repnz
ds
aad
jns
and
xchg
or
fisttp
fsubr
imul
shl
ds
sub
or
sbb
ja
mov
mov
loop
out
jmp
inc
out
enter
inc
leave
add
pop
cmp
sub
and
push
xor
out
or
rcl
mov
ins
in
dec
mov
push
(bad)
push
or
add
mov
push
push
mov
cs
clc
jne
in
sahf
add
rcr
mov
adc
stos
dec
lods
sub
cmps
(bad)
ret
sbb
mov
mov
jl
ja
cmp
(bad)
cdq
add
mov
imul
push
mov
clc
in
std
inc
lods
inc
jmp
push
and
icebp
pop
pop
add
xchg
add
mov
or
stos
xor
mov
ja
push
dec
sbb
(bad)
daa
mov
ret
mov
add
cs
push
xchg
aas
xlat
or
out
or
pusha
or
mov
and
je
lea
adc
gs
or
or
lahf
push
das
cmp
push
push
pusha
push
cli
sti
xor
or
inc
adc
mov
sub
cmp
cmp
ins
out
dec
sub
stos
inc
dec
xor
addr16
cmp
cli
pop
rcr
data16
in
push
ret
cdq
test
and
inc
arpl
cmp
jp
fiadd
stos
sbb
jecxz
pushf
mov
push
leave
out
aad
popa
inc
mov
sar
ds
push
mov
dec
xlat
push
sahf
mov
mov
xor
in
push
sub
adc
fadd
cli
xchg
call
cmps
lock
mov
lods
ret
cmp
or
add
jge
jg
and
out
leave
test
fild
test
pusha
imul
mov
mov
sub
into
mov
sbb
shl
aaa
jg
stos
cmp
int3
rcl
ret
scas
out
cmps
es
push
inc
add
je
pop
sbb
test
pop
stos
xor
sbb
fsub
cli
or
aaa
or
stos
sub
and
(bad)
ins
sub
adc
mov
xor
call
sub
or
or
lea
mov
fst
les
sbb
stos
pop
bound
out
xor
std
dec
xchg
mov
mov
pushf
fbld
inc
popf
in
pop
inc
mov
jmp
jge
mov
dec
aas
in
enter
(bad)
imul
xor
pop
(bad)
popf
mov
imul
push
(bad)
(bad)
mov
inc
push
loop
push
mov
or
out
cdq
fild
cmp
pop
out
jle
cmp
(bad)
imul
add
or
in
test
setp
out
dec
rol
popa
loopne
push
data16
fdiv
dec
ja
out
cmp
jg
xor
fsubr
mov
or
out
fcomp
sar
shl
xchg
dec
jmp
inc
scas
es
arpl
fmul
and
jg
sbb
push
mov
out
sbb
clc
pop
mov
dec
and
mov
or
xor
mov
cmps
loop
ret
push
aas
cmc
rdpmc
sbb
mov
or
into
enter
mov
jb
or
les
xchg
bound
xor
adc
sub
mov
sub
clc
push
xlat
jnp
adc
jl
les
popf
iret
out
retf
xor
jl
xchg
leave
das
ret
out
sar
dec
mov
ja
and
adc
add
lea
and
and
dec
sub
into
mov
pop
scas
and
mov
repz
mov
test
push
xchg
mov
(bad)
loopne
xchg
(bad)
imul
in
jle
jne
fwait
ins
cmps
js
sub
sub
ror
movs
fcomp
cmps
(bad)
jnp
sbb
cmp
mov
xor
lds
leave
leave
xchg
movs
inc
pushf
add
imul
cdq
fs
cmp
fdivp
scas
gs
xor
outs
xlat
int3
adc
ins
mov
jle
(bad)
xlat
clc
adc
jle
push
enter
cmc
jb
outs
push
punpckhwd
push
jmp
add
jo
inc
and
push
inc
and
loope
xor
add
dec
sub
fstp
xchg
pop
push
sbb
rcr
add
fcmovnu
push
mov
enter
ds
inc
push
or
sub
(bad)
stos
hlt
xchg
out
retf
cmc
cmp
loop
shl
ds
bound
mov
mul
xchg
mov
mov
or
int3
shl
repz
sbb
inc
sub
adc
rol
ins
fmul
adc
mov
sbb
xor
(bad)
fsubr
mov
adc
jecxz
(bad)
lds
js
mov
pop
mov
data16
adc
cmps
(bad)
je
loopne
or
add
sub
jmp
push
daa
inc
jno
pop
stc
or
fld
mov
rcr
loopne
out
and
outs
sub
pop
mov
sbb
iret
retf
pop
imul
popf
jl
xchg
ret
enter
inc
stos
repz
ss
lock
fld
movs
loopne
fsubr
sub
stos
popf
push
stos
pusha
jmp
pop
cmp
cmp
mov
cmp
and
jbe
push
enter
ja
sub
aas
jno
inc
and
sar
loop
int3
cmps
mov
fsub
ror
outs
sbb
jl
xchg
xor
cmp
pop
push
inc
stos
add
fwait
mov
mov
adc
jne
nop
xor
ror
xchg
jnp
data16
mov
popa
pop
loop
inc
shr
leave
lods
outs
scas
ins
and
sbb
rcl
xlat
(bad)
test
not
jp
xor
push
push
mov
mov
xchg
pop
xchg
push
add
fwait
xchg
daa
movs
outs
out
daa
scas
not
enter
sub
cmc
and
cmp
ret
sub
sbb
sbb
pop
popa
nop
push
dec
or
cmp
inc
das
into
enter
rcr
in
mov
sbb
mov
mov
mov
dec
jg
cdq
mov
inc
push
inc
pop
adc
scas
push
mov
mov
dec
aaa
frstor
sub
inc
pop
sub
add
xor
ds
(bad)
das
dec
rol
jno
in
sbb
fild
cmp
aaa
sub
loope
mov
pop
retf
in
mov
push
popf
inc
leave
add
mov
call
(bad)
clc
xchg
jg
lock
popf
cli
pop
call
repz
xchg
jl
mov
std
mov
dec
mov
push
xchg
std
inc
add
or
pusha
stos
adc
xchg
daa
das
sub
mov
xor
fld
nop
sub
jg
dec
mov
cmps
cmps
cmp
fucom
add
or
fist
add
jle
cmp
ret
movs
mov
or
mov
pusha
cs
int
inc
in
pop
dec
repz
mov
jmp
jp
xchg
fisttp
jg
cmps
jo
fwait
mov
in
mov
out
add
clc
or
jne
std
shr
rcl
rcl
mov
cmp
loop
push
or
pop
fwait
call
and
mov
fisttp
loop
shl
fst
pop
adc
jmp
mov
sub
jge
or
adc
aaa
pop
push
add
daa
data16
mov
inc
mov
jg
jge
fstp
repnz
loopne
and
cld
xor
stos
and
cmp
mov
mov
inc
push
inc
add
(bad)
adc
mov
mov
in
ror
icebp
push
fidivr
imul
inc
stc
je
adc
jno
bnd
imul
push
out
inc
sub
fsub
xchg
add
jns
fnsave
mov
test
sbb
mov
aam
add
clc
cli
ficom
cmp
mov
lods
into
dec
and
les
mov
jge
push
(bad)
lods
or
arpl
ret
fld
out
xlat
cmp
sbb
sub
pmulhuw
cwde
or
int3
xchg
and
mov
mov
jns
or
mov
aad
sbb
scas
xor
pusha
pop
in
pop
retf
and
inc
xlat
int
das
inc
(bad)
(bad)
cmp
mov
sub
popa
add
cdq
movs
stc
sub
test
pop
(bad)
mov
fdivr
mov
xchg
fistp
retf
or
(bad)
mov
test
inc
inc
movups
arpl
mov
arpl
jle
xor
ror
stos
pop
push
ret
cmps
push
mov
test
(bad)
fwait
dec
fcom
sbb
or
xor
cmc
xor
scas
dec
add
adc
outs
test
jmp
inc
jb
mov
fcom
out
icebp
or
push
or
pop
repz
(bad)
cwde
cmp
dec
sub
xor
call
gs
or
dec
mov
add
out
ins
out
dec
mov
mov
add
sub
fdivp
or
test
mov
lods
mov
mov
sbb
out
popf
push
(bad)
dec
stos
cmps
out
arpl
in
(bad)
or
scas
xchg
loop
xchg
cmp
sar
xchg
push
arpl
mov
inc
fs
ins
push
or
inc
and
push
xlat
repnz
imul
out
mov
push
in
sahf
retw
ja
add
dec
ins
stc
leave
inc
xchg
cmp
jns
cwde
fnsave
enter
jg
stc
pop
xchg
hlt
ret
and
and
push
add
imul
std
fist
mov
out
and
xchg
xor
ins
retf
rcl
jae
jl
cmp
jnp
test
or
dec
xor
fcom
sbb
sbb
pop
push
mov
jle
sub
out
xor
cmp
dec
jae
enter
cmp
jge
mov
ins
mov
call
mov
shl
shl
pop
aaa
es
sar
frstor
push
mul
inc
int
jns
sbb
cmp
dec
xchg
sbb
inc
mov
mov
fbstp
int3
es
xchg
xor
sbb
das
jg
jae
scas
popf
and
or
or
ins
(bad)
(bad)
adc
mov
xor
push
push
lods
cmp
test
into
add
cmps
data16
cmps
pop
es
mov
retf
out
rol
fimul
shl
or
cli
jbe
xchg
call
push
clc
fdivr
or
test
pop
inc
adc
inc
push
in
xchg
push
mov
repz
lahf
mov
pop
jecxz
inc
cmp
add
adc
jno
iret
xchg
(bad)
fsubr
cmps
xor
ror
sbb
jae
test
dec
cmp
or
adc
pop
xchg
adc
and
inc
jbe
and
aaa
cli
cli
stos
pusha
fs
add
adc
(bad)
xor
lahf
fld
(bad)
ds
out
mov
ret
add
ss
sahf
jae
pop
and
jns
stos
pop
out
sub
jns
(bad)
jecxz
mov
add
stc
movs
pop
dec
mov
pop
fimul
rcr
or
or
mov
xchg
ret
adc
cld
xchg
pop
cmc
inc
mov
adc
cmp
lahf
stos
jmp
jg
out
and
loopne
fimul
jg
xor
out
sar
setp
aam
fs
rol
out
push
nop
out
pop
out
ins
stos
pop
add
sbb
and
pop
mov
xchg
sub
xchg
xor
and
adc
adc
and
push
inc
or
loop
mov
cld
mov
push
lock
pop
aaa
(bad)
scas
mov
or
jnp
fdivp
clc
cwde
and
in
and
add
(bad)
shl
and
jecxz
xor
cmp
aam
idiv
sti
(bad)
mov
lods
adc
xchg
mov
repnz
cmps
mov
xchg
and
xchg
sub
jge
mov
pop
sub
call
mov
lahf
push
mov
shr
bnd
clc
inc
div
mov
out
xchg
add
rcl
cmp
in
mov
mov
ins
dec
jg
xchg
sub
dec
movs
cli
xor
push
stos
iret
cmp
dec
pop
out
into
hlt
loope
repz
jge
(bad)
outs
bound
sub
fimul
scas
xlat
add
inc
dec
sub
jle
dec
push
jo
in
xor
loope
shl
or
dec
imul
mov
xlat
dec
sbb
xchg
pop
and
dec
cmp
je
pop
sti
lock
jno
mov
shld
sub
mov
arpl
je
ror
mov
(bad)
sti
aas
mov
mov
loopne
pop
cld
out
pop
aaa
inc
call
movs
cwde
mov
mov
xchg
or
jnp
xlat
ja
mov
xchg
lods
outs
sbb
jl
xchg
cld
ret
mov
ins
jno
mov
in
int
dec
sub
imul
jg
lahf
repnz
inc
movs
add
es
sbb
movs
mov
mov
sbb
jle
xchg
pop
fs
mov
push
sbb
pop
jns
lds
xchg
pop
push
sub
mov
sahf
mov
push
pop
pop
mov
lahf
aaa
jmp
adc
pop
(bad)
cld
sbb
and
scas
xor
mov
scas
and
xchg
je
fwait
inc
int
xlat
jne
fwait
cmps
mov
(bad)
fild
add
add
scas
push
jl
sbb
push
aas
jno
fisttp
pop
mov
pushf
pop
fistp
fs
sbb
imul
pop
out
enter
mov
or
xor
cld
or
scas
cmp
in
inc
adc
mov
gs
inc
ins
lock
in
pop
mov
aas
ss
movs
lds
into
arpl
movs
mov
sahf
shr
and
(bad)
int
mov
mov
repnz
je
std
outs
dec
xchg
adc
addr16
lds
inc
(bad)
xchg
ja
cmps
sub
into
pop
adc
mov
fldz
std
xor
ret
xor
(bad)
sbb
sub
inc
jg
xor
adc
adc
mov
ror
cmp
cmp
loopne
adc
scas
xchg
nop
sti
adc
test
cli
pusha
inc
jl
and
cld
mov
sub
pusha
out
vstmxcsr
pop
xor
or
mov
enter
fs
mov
sub
add
inc
xor
cmp
and
adc
push
and
lods
repnz
cld
in
push
add
ins
out
or
test
and
movs
dec
imul
add
xor
rcr
pop
fcomp
sbb
lds
sub
ficom
loopne
mov
mov
sar
out
stc
outs
xlat
movs
leave
or
and
ret
call
add
sbb
xor
nop
ins
movs
lea
in
cmps
sar
pushf
xchg
sub
jmp
and
daa
inc
adc
mov
ss
adc
(bad)
in
mov
adc
push
jmp
arpl
add
lea
daa
inc
mov
pop
lods
mov
mov
jmp
pop
and
in
inc
fdivr
clc
pushf
aad
je
fild
imul
mov
inc
cdq
mov
test
repz
xchg
or
daa
sbb
(bad)
fild
xor
loop
sbb
push
nop
dec
imul
jnp
dec
pop
pop
xor
(bad)
cmc
cld
cmc
mov
ins
dec
into
icebp
imul
mov
cmp
dec
lods
hlt
inc
aaa
mov
dec
adc
data16
movs
(bad)
shl
cmps
pop
outs
mov
fnstenv
mov
add
out
call
test
cmp
mov
cmp
std
dec
mov
addr16
lds
mov
pop
rcr
retf
leave
mov
xor
xor
push
mov
dec
jmp
fsubr
in
rcl
scas
mov
sbb
rol
(bad)
fs
clc
add
mov
cmp
add
loope
cmps
mov
mov
int3
mov
js
pop
cmps
lods
mov
fist
addr16
mov
pop
scas
rcr
and
movs
mov
or
dec
cli
jb
mov
std
xchg
jne
ror
jo
or
jae
in
or
shl
inc
sub
movs
xor
pushf
xchg
or
pushf
or
mov
dec
sahf
gs
cmps
mov
mov
(bad)
jne
jae
rcr
mov
xchg
adc
cmp
fcom
shl
in
addr16
or
jbe
push
icebp
sub
ret
shl
mov
push
dec
pop
cld
mov
inc
cli
xor
enter
sbb
mov
push
pop
in
push
xor
push
xor
clc
or
pop
mov
ins
lods
loope
mov
fcom
cmp
add
stos
jno
sbb
pop
add
lea
push
push
cmp
dec
into
adc
pop
outs
push
or
or
lock
popa
hlt
dec
bsr
int3
div
in
cmp
pop
jecxz
in
mov
xor
inc
aad
mov
out
in
jno
mov
add
cmps
cmps
clc
daa
mov
push
fsubr
xlat
pop
ret
out
dec
and
ret
fwait
add
test
in
mov
xchg
arpl
sub
cmp
pushf
cld
mov
mov
pop
sbb
push
push
jmp
dec
dec
pusha
gs
mov
mov
arpl
adc
inc
movs
jecxz
and
xor
jmp
or
inc
ds
adc
push
xor
adc
mov
mov
or
dec
jne
outs
jp
mov
cli
pushf
pushf
repz
inc
je
leave
shr
mov
jg
cmp
ds
jno
in
inc
jl
dec
fucomp
adc
rcr
fwait
cmps
sar
or
ret
mov
sub
add
xchg
ss
fisubr
les
cdq
push
(bad)
jmp
mov
pushf
lds
cli
mov
je
jl
adc
pop
inc
(bad)
ja
jae
out
dec
push
xor
or
mov
and
addr16
pop
repz
sub
add
fcomp
pop
rcr
mov
mov
loop
repz
test
retf
and
cmps
jo
jmp
jl
xchg
xchg
xchg
movs
repnz
aad
arpl
jle
(bad)
(bad)
xlat
lds
and
xchg
ds
fnstenv
ins
clc
ins
gs
push
fadd
sti
cmp
vandnps
xchg
daa
in
gs
scas
inc
jno
stc
int
fwait
out
mov
inc
xor
cmps
jb
daa
push
sahf
jmp
inc
mov
sbb
add
sar
rcr
or
push
dec
mov
pop
cld
mov
stos
mov
pushf
data16
push
push
scas
jmp
iret
icebp
iret
or
aam
mov
xor
push
(bad)
(bad)
shl
pop
int3
sbb
test
adc
inc
fwait
jae
mov
mov
or
in
and
xor
sti
fldenv
push
mov
pusha
or
mov
paddw
cmps
cmps
and
inc
cwde
sbb
or
jge
or
mov
xchg
lock
movs
lods
or
inc
inc
jle
jl
sub
shr
cmc
mov
out
pop
(bad)
stc
cmp
and
fs
ds
imul
xor
mov
lahf
jge
xor
mov
push
dec
imul
aaa
ret
mov
xchg
pop
xchg
add
mov
mov
rcr
jl
pusha
inc
ror
sbb
sub
lahf
test
imul
jmp
lock
aaa
sub
jmp
cmps
fld
fwait
push
sbb
mov
stos
fcom
les
jns
test
and
aam
sub
cmp
xchg
dec
repnz
retf
stos
mov
push
imul
out
inc
cli
not
cmp
(bad)
sbb
cwde
jmp
xor
jecxz
sbb
inc
add
sub
dec
xchg
push
loop
mov
or
push
mov
add
pop
mov
addr16
mov
shr
out
push
jo
pop
popf
add
aas
sar
add
leave
ds
sbb
xor
repz
cld
mov
adc
push
in
sub
mov
pop
sub
cmp
mov
mov
test
xchg
xchg
imul
scas
aam
add
mov
inc
jl
lds
fst
loopne
or
fsubr
mov
fimul
jae
push
add
jmp
mov
mov
and
push
into
movs
nop
add
test
jge
int
test
and
sub
shl
or
dec
or
adc
mov
push
mov
outs
mov
rcr
das
xchg
pop
cmp
sbb
push
push
inc
in
xor
mov
lods
add
xlat
mov
std
adc
arpl
ja
sahf
inc
mov
outs
bound
stc
imul
retf
dec
jle
or
in
mov
retf
mov
mov
sub
dec
and
sub
mov
and
cwde
mov
cmps
movs
shr
enter
lahf
pop
(bad)
int3
push
jmp
test
repz
add
sar
mov
lods
push
pop
adc
cli
push
test
movd
xchg
or
mov
imul
adc
arpl
es
cmp
cli
test
pop
mov
ja
pop
aad
loopne
jge
popf
mov
inc
ss
jo
sub
ds
cmp
mov
jl
jno
jmp
and
fwait
mov
ins
cli
pop
es
loopne
div
int3
jp
(bad)
je
cmps
pop
sbb
add
add
push
jo
scas
or
std
fs
mov
sbb
repnz
or
mov
or
lahf
or
mov
sub
or
mov
push
push
mov
(bad)
mov
push
out
jg
jne
sbb
test
(bad)
shr
push
daa
jg
arpl
sub
daa
sub
mov
ins
test
mov
pop
mov
outs
mov
cmps
stos
xchg
dec
ss
es
out
or
sahf
pop
and
jnp
shl
dec
mov
out
or
add
jmp
repnz
sar
jecxz
mov
ret
inc
xchg
ins
retf
gs
sti
dec
stc
jb
push
push
ins
loope
jae
inc
cmp
dec
test
pop
lods
into
jne
fcmovb
bound
jmp
xor
arpl
loop
push
or
and
inc
(bad)
repz
mov
lea
loopne
outs
dec
cmp
imul
es
cdq
mov
imul
xchg
inc
mov
ss
ret
mov
xchg
jle
xchg
and
es
or
xor
mov
jl
push
and
shl
pop
cmc
cmp
jge
or
push
sbb
pop
and
push
outs
and
mov
xor
shr
jl
adc
das
enter
fsubr
or
lahf
jmp
not
addr16
inc
call
cs
or
out
call
inc
leave
dec
iret
push
mov
lds
das
mov
sbb
loopne
cld
pop
pop
aam
dec
push
repnz
pop
test
sbb
ss
dec
inc
xchg
(bad)
adc
add
shl
int3
loope
and
xchg
mov
les
retf
add
outs
xor
adc
pop
jmp
add
jp
mov
stos
mov
inc
(bad)
sub
out
popa
call
test
lods
dec
adc
mov
adc
call
jmp
rcl
loope
js
enter
pusha
aam
jnp
sbb
pop
aad
inc
dec
repz
ins
jb
push
into
inc
popf
or
popa
dec
add
push
pop
and
(bad)
int3
push
mov
mov
push
pop
inc
push
mov
mov
jge
xchg
cmp
mov
loop
add
xchg
fbstp
jo
dec
dec
xchg
lea
sbb
(bad)
lds
mov
movs
dec
aas
jmp
lock
pop
fmul
rcr
dec
aad
jnp
xor
sbb
mov
mov
fwait
mov
cmp
jbe
sbb
ret
jnp
imul
sbb
ret
dec
xchg
popa
pop
push
push
lds
sub
cld
das
push
js
jmp
bound
(bad)
into
loopne
inc
push
test
pop
xlat
pop
in
jge
push
push
xor
xchg
pop
dec
ret
push
mov
mov
fs
scas
je
js
or
call
not
inc
imul
scas
push
je
lds
(bad)
pop
or
lods
int3
scas
xchg
xor
mov
push
push
sub
stos
cmp
xchg
or
mov
jle
out
pop
xchg
push
neg
ins
jae
das
call
mov
or
outs
push
jmp
fbld
mov
mov
sub
inc
pcmpgtd
sbb
push
and
sub
xor
xchg
ins
mov
enter
pop
hlt
mov
or
scas
jp
repnz
jne
int3
(bad)
push
inc
dec
jae
jbe
mov
(bad)
fbld
push
sub
outs
or
sub
sbb
cdq
mov
ret
stc
pop
(bad)
xchg
sti
dec
sahf
sub
dec
in
xor
adc
mov
not
cmp
mov
mov
fsub
sub
add
adc
scas
adc
cwde
psubw
inc
sub
jle
mov
sar
sbb
inc
mov
sub
adc
fstp
gs
mov
ret
test
jecxz
mov
addr16
xlat
push
fmul
cdq
push
mov
pop
cdq
jmp
(bad)
imul
(bad)
jbe
in
lods
sbb
mov
sahf
cmc
adc
dec
mov
lods
cmp
(bad)
sub
ds
push
cmps
xchg
inc
jmp
xchg
aas
pusha
fisub
mov
dec
leave
pop
jg
clc
mov
fisub
inc
fnstcw
enter
or
rol
mov
add
int3
add
and
xchg
aaa
sub
cmp
pop
repnz
inc
(bad)
into
push
ja
add
in
fwait
call
dec
pop
mov
pop
and
mov
jecxz
jns
or
repnz
jg
mov
movs
test
xchg
push
cmp
push
leave
pop
and
std
or
out
sub
mov
mov
mov
inc
xchg
add
ds
inc
jns
fidiv
test
jecxz
int3
inc
adc
sbb
scas
or
mov
icebp
call
leave
ret
aam
xchg
out
popa
test
ins
(bad)
mov
outs
fcomp
inc
push
je
daa
nop
inc
repz
popf
mov
mov
pushf
sbb
(bad)
xor
sbb
dec
adc
cmp
je
xchg
stos
addr16
pop
dec
arpl
cmps
test
jecxz
addr16
pop
pusha
adc
sub
push
pushf
sti
sub
jge
rcl
out
cmc
adc
inc
and
dec
mov
or
pcmpeqw
push
and
mov
cmps
xor
sub
or
inc
in
mov
dec
push
add
adc
or
dec
cmp
enter
and
loope
fstp
mov
sub
cmp
mov
(bad)
pop
ja
cmp
jl
push
(bad)
movs
push
sub
push
(bad)
call
scas
dec
push
cmp
out
mov
pushf
sub
pusha
lea
push
arpl
jnp
cmps
stos
jb
outs
push
push
cmps
xchg
cdq
cmp
int3
lods
stos
das
arpl
mov
dec
mov
inc
out
test
fbstp
or
mov
test
mov
mov
cmps
sub
xor
xor
daa
push
adc
adc
sub
shr
ret
out
or
and
jnp
test
call
or
fadd
push
mov
mov
push
mov
mov
das
add
leave
mov
and
mov
push
scas
adc
dec
cmp
scas
les
hlt
xchg
adc
scas
rcr
lods
pop
in
in
cmp
fwait
jb
cmp
test
pop
and
jge
into
dec
(bad)
push
jp
sub
dec
scas
fdivr
sub
out
adc
outs
and
arpl
mov
mov
aam
add
out
cmps
pusha
cwde
inc
add
inc
add
(bad)
ret
rcr
fst
push
xchg
cmp
jnp
or
shl
adc
popa
cmps
lock
pop
in
push
cmp
adc
sbb
aaa
adc
iret
sub
sub
inc
scas
call
jne
sbb
adc
scas
movs
and
dec
in
cmp
fist
daa
movs
test
lods
aas
into
sbb
retf
enter
add
jge
push
sub
xchg
xor
loopne
into
dec
sub
fdivr
loop
xor
sbb
sti
mov
mov
pop
and
ds
pushf
jecxz
and
inc
sbb
sub
xor
adc
(bad)
icebp
ja
int3
rcl
jns
xchg
push
add
std
and
xor
in
imul
jg
dec
xchg
iret
popa
xchg
mov
xchg
mov
sbb
(bad)
and
outs
repz
out
jbe
inc
inc
popf
nop
xchg
and
lds
out
inc
jns
add
fcmovnb
jecxz
adc
add
push
data16
not
or
add
sub
mov
std
jb
inc
add
xchg
popa
sub
bound
icebp
xor
sbb
sbb
sbb
in
pcmpgtb
in
stos
or
ins
pusha
or
rep
das
and
push
inc
retf
scas
jl
mov
pop
test
xchg
adc
jle
jnp
frstor
pop
movs
outs
adc
cmp
loope
pop
cmc
in
into
(bad)
xchg
bound
sub
inc
add
cmps
out
add
or
lods
jmp
sub
dec
shl
xor
leave
push
jmp
retf
xchg
jne
and
xlat
and
gs
je
(bad)
dec
xchg
mov
std
ret
xor
xchg
cdq
xchg
cmps
mov
(bad)
pushf
sahf
pusha
das
xlat
jmp
pop
add
push
cmp
das
stc
fwait
mov
clc
das
lods
jmp
sbb
sahf
mov
aaa
xor
cmp
les
xor
jnp
ret
pop
xor
stos
adc
jle
push
lods
das
std
jno
movs
jo
sub
out
cmps
cmp
push
(bad)
out
sub
cmp
xor
mov
mov
sbb
aaa
jecxz
jbe
ja
ror
add
pop
or
retf
mov
mov
mov
xchg
mov
and
mov
jns
movs
xchg
dec
jb
push
repnz
out
stc
ss
je
mov
or
int3
push
(bad)
dec
loop
pop
ins
test
pop
xor
sbb
repz
loop
stos
je
xchg
and
push
out
mov
push
cmc
(bad)
jl
ss
xor
rol
pusha
sbb
shl
add
test
inc
jl
add
push
pop
(bad)
ins
inc
scas
cmp
ror
movs
adc
cmp
xor
dec
int
ds
scas
iret
repz
xor
add
fs
push
outs
sahf
out
inc
sbb
add
pop
out
or
sbb
hlt
in
repz
imul
pushf
sahf
ret
addr16
pop
ins
cmp
xor
pop
enter
repnz
loopne
cli
(bad)
and
add
retf
jae
cmps
pop
jnp
bound
ins
repz
adc
movs
xchg
sub
add
sbb
push
movs
(bad)
pop
(bad)
push
retf
inc
push
fwait
cmc
cmp
mov
mov
mov
mov
jecxz
inc
retf
iret
inc
fld
pop
jb
inc
xlat
mov
or
pop
jnp
jo
popf
out
jb
and
pop
sar
push
es
push
mov
imul
jmp
push
cmp
or
cmc
jns
cmp
aas
mov
xchg
mov
mov
fstp
and
(bad)
xchg
vrsqrtps
retf
adc
pushf
out
enter
pop
push
pop
sbb
mov
std
pop
js
mov
stc
(bad)
cmc
and
mov
mov
push
xchg
dec
fs
pop
mov
scas
xor
iret
std
scas
mov
call
xor
cmp
fcmovnu
pop
rol
mov
push
rcr
push
jmp
aad
int
pop
dec
repnz
xchg
icebp
mov
pushf
mov
stos
inc
dec
dec
mov
dec
or
div
imul
fs
xchg
shr
and
cmp
cmp
pop
in
or
cmp
or
enter
cli
push
add
sbb
dec
fstp
pop
aam
daa
add
sub
bound
int
ja
shr
sub
repz
dec
jno
jno
outs
test
mov
push
mov
out
cli
repz
hlt
in
inc
cmp
ds
and
xchg
pop
mov
jb
jnp
jae
xchg
mov
and
push
xchg
mov
xor
loopne
pusha
mov
ins
add
mov
enter
sbb
(bad)
mov
mov
cld
icebp
or
xor
call
les
add
jns
mov
jne
repnz
push
xor
mov
mov
or
lods
nop
mov
sub
ins
jge
jno
pop
mov
ror
outs
scas
ret
gs
inc
sub
sub
outs
xchg
neg
push
cwde
fdiv
sbb
mov
push
inc
iret
jo
xlat
jge
test
inc
pop
inc
shl
int3
inc
jecxz
xor
out
daa
inc
stos
xchg
inc
sub
jns
pop
(bad)
fcomi
and
xchg
les
xor
aad
shl
xchg
cmps
pop
or
dec
adc
retf
xchg
cmp
pop
popa
pop
push
sbb
lods
(bad)
and
ret
(bad)
sbb
movs
call
xor
rcl
enter
inc
out
mov
xor
jo
ficomp
push
fld
mov
mov
sub
cmp
xchg
int3
and
fs
jae
push
pop
mov
mov
jmp
lea
repnz
popf
test
movs
cmp
call
pusha
js
sahf
shr
(bad)
push
mov
adc
lods
pop
dec
sub
in
loop
xor
mov
fbstp
jecxz
pushf
je
push
int
jg
pop
cmp
hlt
retf
les
cmp
dec
cmp
ror
push
cmp
cdq
mov
or
adc
pop
dec
cmp
or
adc
fwait
and
xchg
ss
aam
add
cmp
retf
repz
mov
sub
jge
and
mov
dec
inc
inc
inc
enter
hlt
(bad)
icebp
push
out
and
jns
sub
add
mov
mov
bound
and
pusha
call
scas
dec
jo
aam
dec
sbb
bound
(bad)
(bad)
mov
fsub
pushf
imul
mov
dec
repnz
pop
cmp
sub
ja
pop
mov
xchg
sbb
sahf
in
lea
jp
mov
push
xchg
scas
mov
mov
jns
sbb
repz
xchg
xchg
in
sbb
ss
add
stc
daa
push
scas
mov
mov
in
mov
or
jg
shl
ds
rol
(bad)
hlt
test
repnz
icebp
sbb
fxch
imul
pop
cmp
sbb
test
adc
pop
arpl
call
adc
data16
mov
out
in
addr16
sub
mov
loopne
stos
cmp
push
or
retf
call
jmp
inc
dec
aas
pusha
out
pop
rcr
data16
jp
or
cmp
lods
dec
xchg
loop
das
pop
into
int3
add
add
pushf
mov
mov
sbb
mov
add
push
xor
cmps
or
add
ins
pop
adc
sbb
push
pop
or
adc
int
out
adc
ffree
adc
div
into
shl
jg
imul
imul
lods
mov
push
inc
les
sbb
int3
mov
bnd
mov
pop
dec
aam
pop
call
mov
lods
sbb
test
fwait
pop
adc
outs
push
lds
push
cld
bound
pop
daa
imul
adc
out
cdq
leave
jne
sub
mov
mov
push
sbb
adc
pushf
pop
dec
fnstsw
jae
pop
stc
xor
jnp
pop
push
ins
or
out
(bad)
mov
std
(bad)
cmc
int3
cs
jne
ins
std
adc
outs
std
daa
aam
dec
xchg
fidivr
leave
retf
daa
adc
scas
data16
mov
icebp
lahf
pop
sbb
mov
mov
rol
jae
dec
mov
dec
ss
jmp
sbb
sub
es
adc
push
push
fsubr
pop
dec
retf
cmp
cld
je
outs
ret
jb
pop
mov
and
js
cmp
or
xor
mov
sar
imul
loopne
daa
mov
cwde
test
sub
inc
xor
or
sbb
loopne
add
sbb
movs
inc
cmp
js
add
add
aad
test
jg
adc
mov
or
test
jg
pushf
fwait
xchg
int
xlat
add
push
sbb
cs
mov
das
mov
stos
outs
scas
add
into
fistp
rol
(bad)
dec
or
int3
sbb
xchg
out
adc
fdiv
ret
adc
gs
push
int
and
inc
inc
mov
xchg
ret
rcr
test
inc
lds
cmp
jb
pushf
test
push
mov
(bad)
outs
sub
dec
neg
jae
mov
rcr
mov
mov
cmps
les
push
sbb
jp
xchg
(bad)
(bad)
fwait
or
push
into
scas
xor
jno
add
xchg
or
out
outs
icebp
sbb
dec
and
mov
jae
sub
inc
add
mov
mov
and
fnsave
jmp
(bad)
call
xor
add
inc
jg
push
inc
sub
xor
arpl
jl
push
and
cmps
fist
pop
push
jns
mov
pop
mov
idiv
adc
push
xor
pop
cs
or
mov
scas
push
leave
rcr
mov
std
pop
in
daa
jbe
mov
loopne
xor
xor
ror
je
xchg
jmp
jae
sbb
fadd
add
inc
(bad)
dec
popf
xor
aad
mov
pop
or
sub
lea
js
hlt
inc
mov
(bad)
xor
arpl
fs
add
mov
imul
bound
cdq
jo
pop
gs
xchg
xlat
movs
sub
mov
push
dec
mov
sub
push
jl
(bad)
dec
jmp
jb
add
mov
push
hlt
rcr
pop
mov
jbe
mov
ret
xor
add
xor
loope
int3
cmp
adc
aas
pop
je
mov
add
sub
fwait
mov
mov
jns
xchg
mov
mov
stos
cmp
xchg
sbb
(bad)
loopne
add
push
lods
test
cmps
mov
into
ja
aaa
pop
pushf
adc
dec
int3
xor
(bad)
mov
mov
pop
mov
adc
or
mov
mov
loop
rcl
push
fistp
int
xor
push
ja
out
jmp
rcl
xor
xor
test
movs
shl
jmp
fs
mov
dec
nop
push
addr16
sub
xchg
mov
aad
xchg
xchg
xchg
scas
fucomi
or
rol
(bad)
sub
adc
out
mov
loopne
vunpcklps
xchg
mov
icebp
push
sub
sar
add
jmp
(bad)
mov
mov
call
(bad)
in
mov
pusha
adc
push
inc
xchg
fimul
pop
aaa
aaa
pop
cmp
mov
popa
fwait
test
xchg
jne
xchg
mov
xor
or
pop
leave
push
test
sbb
scas
add
repnz
dec
jge
ja
mov
pop
xor
les
xlat
pushf
sub
or
hlt
pop
pop
mov
sub
cli
movs
fimul
add
push
dec
xchg
ficom
cmp
sub
loope
aad
xchg
xor
add
and
mov
loope
pusha
xchg
scas
je
xchg
jmp
push
jb
cmp
aas
adc
push
jmp
cmp
test
movq
jle
sar
fild
push
cwde
cmovno
imul
sub
xchg
ins
outs
and
fcmovne
jg
jecxz
pusha
inc
stc
mov
pop
retf
mov
aad
or
pop
call
aad
dec
ret
mov
sbb
rol
(bad)
fistp
ror
inc
int3
mov
rep
sub
mov
les
fs
cmp
inc
into
or
jecxz
pop
cmp
movs
out
add
sti
xchg
add
add
jmp
jns
test
clc
dec
xchg
inc
call
in
add
sbb
push
sysret
and
adc
ds
adc
pop
into
jle
cli
add
add
push
mov
arpl
stos
lods
and
sbb
gs
jp
aam
jl
mov
jno
mov
call
mov
adc
fisub
xchg
test
sub
out
mov
pop
xchg
mov
movs
outs
add
lods
jo
jbe
pop
sub
or
pop
sub
fnclex
fwait
dec
adc
inc
pop
inc
out
retf
ja
pop
lahf
jge
dec
jae
xor
sar
repz
inc
mov
mov
mov
call
xchg
ret
sbb
(bad)
int3
pop
mov
loope
cmc
mov
add
jg
int3
repz
inc
lock
xor
int3
and
jb
adc
(bad)
fld
bound
lods
lea
mov
inc
out
test
mov
movs
(bad)
retf
cmps
jl
inc
dec
movs
pop
pop
imul
xchg
in
push
pusha
mov
jle
sbb
in
mov
(bad)
stos
push
xchg
int3
mov
xchg
sbb
stc
sbb
test
sbb
not
pop
add
push
dec
in
adc
push
call
sbb
jl
jle
scas
and
mov
inc
and
cmc
movs
in
cmc
jns
dec
iret
pop
xor
pop
gs
xor
outs
push
aas
and
pop
or
jg
loopne
das
loope
out
repz
les
hlt
jns
pop
cmp
mov
arpl
rol
dec
sbb
push
sahf
xchg
mov
and
push
rcl
pop
neg
cwde
test
fs
cmp
(bad)
out
mov
push
addr16
cld
push
ins
sub
pop
inc
aaa
xchg
xchg
in
mov
pop
fsubr
mov
mov
cli
retf
mov
(bad)
mov
jge
add
sub
push
sbb
nop
jbe
xchg
int3
je
jp
fimul
nop
(bad)
xor
xor
dec
push
add
mov
daa
add
xor
pop
pop
pushf
dec
cmc
out
jmp
mov
in
xchg
jg
stos
mov
xchg
and
adc
and
rcl
or
jmp
xchg
pop
rcr
mov
frstor
out
jo
push
enter
dec
mov
sub
xor
js
test
xor
repz
jb
sub
push
and
mov
push
xor
or
dec
mov
cmc
push
bound
jae
push
mov
in
jne
xchg
mov
out
mov
int
outs
mov
fistp
imul
push
inc
out
mov
mov
and
xchg
in
mov
dec
pop
dec
call
push
and
mov
sahf
xchg
jmp
test
adc
pop
and
add
dec
in
int
ja
sub
test
sbb
or
aaa
fisub
jnp
cli
pop
push
jg
enter
mov
test
movs
imul
xchg
cdq
retf
(bad)
outs
jbe
add
cs
cwde
mov
aad
hlt
test
and
or
adc
lods
outs
popf
add
not
mov
xchg
xchg
inc
jg
lea
push
nop
cmps
sti
sub
mov
shr
out
jle
cmps
retf
and
push
xchg
shr
and
retf
sub
mov
inc
cwde
and
jp
hlt
gs
loop
(bad)
call
(bad)
cli
(bad)
nop
(bad)
and
mov
es
fld
test
nop
and
ficom
add
in
(bad)
ss
push
jg
push
fdiv
call
jmp
shl
adc
cmp
sbb
jle
out
adc
arpl
push
dec
dec
mov
cmp
and
movs
dec
movs
ficom
mov
(bad)
xchg
sbb
mov
or
imul
sub
out
pusha
lods
xchg
loop
shl
inc
sbb
and
mov
push
rcl
xor
sub
and
fcom
out
add
add
xchg
xchg
jle
inc
cmps
push
sub
adc
push
or
or
and
(bad)
repz
arpl
cmp
xor
pop
mov
push
add
mov
movs
pop
push
aas
mov
scas
stos
stc
outs
rol
sub
xor
ret
and
or
test
dec
pop
fwait
ss
aaa
push
adc
pop
sub
pusha
mov
(bad)
out
fs
mov
iret
sub
inc
lock
std
xchg
jg
mov
mov
sub
xchg
jae
(bad)
cmps
pusha
pusha
jge
or
in
in
lods
xchg
mov
sti
add
mov
mov
test
ins
or
jl
fnsave
cmp
mov
jo
loop
rcl
jb
ret
sub
dec
movs
adc
mov
(bad)
ins
js
into
popa
sub
inc
dec
adc
daa
sub
ror
jmp
or
add
xor
add
enter
mov
loopne
mov
aam
push
sbb
aam
add
cld
nop
sbb
les
pop
dec
pop
out
cmps
cmp
int
dec
fdiv
sub
call
mov
outs
and
push
retf
scas
aad
cmps
jae
into
add
js
ja
test
sub
pop
sub
lods
adc
jns
jo
pop
or
mov
sar
xor
std
inc
rol
out
mov
pop
aad
pushf
in
sub
call
std
nop
dec
js
call
jmp
retf
push
jmp
jmp
movs
mul
jl
inc
call
mov
push
call
mov
sub
pop
std
inc
cmps
fldpi
pop
imul
shl
scas
sti
pop
jmp
clc
int
loope
xchg
in
add
xchg
shr
int
push
hlt
cmp
fisttp
mov
mov
sbb
cmc
cmps
xchg
into
inc
dec
cmp
aas
retf
dec
mov
les
outs
xchg
cmp
nop
mov
cmp
sbb
jg
adc
out
inc
ds
jb
sbb
xor
xchg
in
push
xor
repz
mov
aad
(bad)
jne
sub
mov
push
cmps
jge
push
jg
ins
adc
retf
jmp
inc
fstp
mov
fs
adc
mov
pop
inc
push
fbstp
loopne
clts
mov
lds
and
call
daa
rcl
imul
mov
sub
dec
jmp
repnz
gs
or
scas
push
mov
ror
bound
sar
inc
arpl
jl
test
cmp
iret
sub
es
(bad)
shr
pop
outs
push
add
sti
jg
repnz
sub
int3
retf
lods
enter
xor
xor
sbb
ins
mov
mov
mov
push
xchg
sbb
clc
xchg
pop
pushf
xchg
cmp
xchg
jmp
or
push
outs
loopne
das
adc
outs
xor
mov
test
push
sub
mov
mov
add
xchg
repnz
pushf
aaa
data16
push
(bad)
retf
xor
pop
popf
cld
les
hlt
call
leave
js
push
xor
scas
lds
or
mov
stos
in
in
jo
test
js
stos
inc
mov
out
fdivr
sbb
call
jle
pop
bound
mov
cmps
xchg
xchg
fwait
in
test
sub
adc
jne
in
ins
inc
loopne
sahf
xchg
sub
jbe
(bad)
fucom
lds
mov
push
in
lods
fisttp
dec
loope
adc
xchg
xchg
inc
add
jnp
jmp
adc
pop
add
fwait
xchg
les
bound
lahf
gs
pushf
dec
cmp
inc
jnp
mov
add
popf
nop
xchg
pushf
pop
ja
push
aad
push
add
jnp
fisttp
cs
sqrtps
inc
push
push
push
sub
aam
pop
shl
push
lods
adc
pop
cvtps2pd
paddsb
dec
xor
xor
stos
jb
cmp
repz
jb
jae
mov
adc
mov
aaa
cmc
sub
mov
out
mov
mov
xchg
(bad)
cli
pop
pop
inc
je
sbb
inc
fsubr
mov
fcomp
js
aas
ss
inc
stos
mov
lds
xor
push
jle
and
outs
int
mov
push
mov
nop
mov
mov
scas
ja
sbb
ret
mov
mov
sahf
dec
dec
and
pop
inc
popa
jmp
inc
imul
jle
dec
cmp
mov
pop
es
rcr
lods
xor
push
icebp
and
ins
in
pop
lahf
mov
addr16
cmp
ins
fdiv
pop
mov
mov
iret
hlt
imul
or
inc
cmc
js
test
rcr
das
pop
cmps
or
cmp
xchg
ss
adc
movs
(bad)
int3
ficom
pusha
pop
or
inc
retf
leave
jmp
es
lods
idiv
aam
fmulp
inc
inc
retf
or
mov
retf
dec
ja
mov
xchg
pop
(bad)
setge
ror
jmp
sub
jns
(bad)
or
out
ret
icebp
jb
cmps
fcomp
push
mov
out
rcr
dec
push
lods
inc
push
adc
stc
mov
xchg
xor
add
mov
and
push
faddp
int
push
push
cld
or
mov
push
(bad)
mov
aad
fstp
mov
dec
push
cli
adc
repnz
mov
in
cs
and
mov
xchg
hlt
out
lea
xor
mov
outs
pavgb
pushf
stos
cmc
enter
das
mov
lods
push
stc
call
add
sub
mov
push
js
push
mov
xchg
mov
or
sbb
and
jne
sti
jo
mov
dec
mov
imul
inc
dec
push
ret
inc
mov
xchg
lods
xor
ror
inc
jmp
fdivr
fdiv
xor
and
vaddss
bound
sbb
pop
jo
gs
push
add
cwde
cmp
sub
push
mov
jge
sub
cmps
hlt
cli
test
mov
xchg
fwait
push
adc
test
int3
js
cmp
pop
push
das
mov
cmp
test
std
jae
das
pop
xchg
inc
inc
loopne
rol
jecxz
mov
push
and
fndisi(8087
cmp
stos
jmp
fcmovnbe
lods
push
stos
push
movs
retf
cmps
cmp
jge
std
pop
sbb
xchg
inc
pop
mov
cli
aaa
or
adc
sub
mov
les
mov
mov
loope
and
popa
adc
aam
push
(bad)
rcr
or
imul
out
adc
aaa
loopne
adc
lods
and
test
stos
cld
mov
adc
mov
jle
popf
int
mov
scas
jg
xor
or
mov
(bad)
jmp
xlat
adc
jmp
idiv
or
gs
xchg
fidivr
adc
arpl
fs
sbb
inc
mov
xchg
stc
or
pop
and
stc
mov
fild
push
xchg
xchg
call
jo
loope
cmp
pop
scas
xor
inc
leave
inc
mov
inc
pop
out
push
pop
jb
enter
stos
mov
(bad)
ds
mov
push
(bad)
pop
inc
fnsave
addr16
out
ins
push
lea
push
ja
cli
icebp
daa
jg
inc
and
rcr
dec
xchg
xchg
and
cld
xor
mov
cmc
xor
loopne
sbb
scas
cmp
sar
aaa
and
inc
inc
jle
loope
and
call
cmps
sbb
cmp
adc
jns
pop
and
xor
dec
mov
adc
fcom
push
push
mov
jbe
push
mov
dec
jbe
in
mov
jbe
rcr
cdq
jmp
(bad)
adc
adc
inc
sub
loop
pusha
mov
sbb
in
ret
add
mov
cmc
pop
retf
push
pusha
cmps
or
sub
test
shl
out
iret
cmp
jb
add
loopne
ja
ins
(bad)
cwde
out
ret
clc
out
cmp
pop
fwait
add
in
int
adc
mov
lahf
adc
(bad)
pop
push
xor
mov
xor
out
xchg
test
sbb
fisubr
and
and
adc
push
and
jnp
out
push
and
push
cs
cmp
dec
push
mov
js
pop
int3
mov
push
add
fbstp
in
test
jp
lods
cmp
lea
and
mov
les
sbb
aas
aad
sar
sub
jnp
push
xchg
cli
cs
or
cmp
aad
lods
stos
int3
(bad)
hlt
test
stos
out
jb
xchg
dec
stos
dec
sub
pop
sbb
pop
push
jno
xor
bswap
add
push
test
arpl
les
mov
in
stc
mov
jle
int
jne
jge
iret
fcomp
in
add
ror
popa
fucomp
adc
aas
cmps
nop
lahf
push
jnp
cmp
scas
xor
or
ins
(bad)
pop
add
mov
inc
dec
mov
mov
or
jbe
in
jle
mov
into
or
or
jbe
stc
pop
mov
xchg
ins
ins
data16
pop
dec
add
js
xchg
xor
bound
pop
xor
ror
jo
pushf
sahf
mov
pop
retf
cmp
ret
imul
xchg
test
js
mov
lds
fucomi
add
and
xor
dec
jl
out
mov
mov
mov
add
outs
rcr
data16
mov
(bad)
sub
sub
push
dec
adc
mov
sub
or
loopne
jns
xchg
pop
cs
repnz
retf
loop
sbb
jg
jg
jmp
jg
or
call
cli
xchg
cmp
sbb
mov
and
imul
cs
ss
dec
je
fs
dec
inc
dec
pop
scas
in
(bad)
jnp
pop
sar
nop
cmc
add
pop
sbb
loopne
jecxz
mov
fistp
jno
mov
frstor
cmp
push
pushf
fst
push
sti
mov
pop
stc
stos
mov
mov
push
cwde
imul
or
push
jns
mov
xchg
ins
pop
push
push
call
jg
lds
inc
ja
fild
ds
mov
icebp
inc
jmp
out
mov
stos
pop
or
adc
or
mov
ins
add
mov
sub
inc
cmc
mov
or
mov
mov
imul
gs
sub
jbe
inc
movs
pop
stc
push
sub
(bad)
outs
xor
test
xor
lahf
or
xor
xsaveopt
addr16
mov
adc
push
wbinvd
mov
les
jae
xchg
dec
push
cmp
inc
jmp
icebp
dec
imul
(bad)
mov
jno
data16
mov
shl
loop
scas
adc
or
and
or
mov
cmps
xchg
std
push
xor
adc
push
mov
aaa
ret
sub
(bad)
adc
and
cs
std
dec
fs
inc
call
push
add
xor
std
dec
pop
xor
enter
or
scas
sbb
sub
lea
jmp
jae
and
and
add
daa
fst
je
or
cmps
fdivr
sbb
mov
add
add
aaa
in
enter
push
(bad)
or
mov
mov
jo
int3
dec
jne
hlt
add
shl
sub
cmps
mov
adc
sahf
stos
and
out
shl
adc
gs
test
sub
enter
mov
ja
test
mov
out
jne
fs
jno
ror
jbe
repz
or
call
shl
movs
into
push
std
cmp
sub
cmp
lods
pushf
xor
cmp
jmp
mov
pop
call
push
sbb
push
or
sbb
jb
mov
in
and
jb
sbb
dec
xor
ds
add
mov
and
ret
test
retf
cld
cmp
mov
adc
popa
mov
(bad)
int3
adc
dec
aas
std
faddp
in
pushw
add
and
loopne
add
sbb
leave
ins
scas
sbb
add
sub
push
sbb
push
inc
xchg
rol
jbe
in
mov
mov
dec
mov
push
test
clc
xor
cdq
das
jecxz
sbb
or
or
aas
pop
adc
or
pop
mov
arpl
fidivr
cmp
jmp
into
cmp
jns
out
cmps
addr16
jns
loopne
iretw
fwait
cmps
add
pushf
pop
add
dec
cmc
cmp
push
pop
dec
popf
stos
out
movs
inc
loope
out
mov
popf
cld
lahf
xchg
scas
loopne
sbb
push
ror
fld
cmp
std
sahf
adc
sbb
enter
pop
pop
add
adc
cmps
xchg
loop
push
stc
dec
fisttp
push
jae
ss
cmp
inc
stc
mov
enter
ret
pop
mov
lahf
sub
pop
imul
mov
movs
fdiv
test
call
cdq
cmp
and
cld
loope
mov
jnp
jg
pop
dec
ins
pop
fidivr
aaa
fcomp
push
fldenv
loop
ss
retf
loopne
jecxz
mov
test
jns
lods
and
or
cmc
jne
pop
aaa
fisub
mov
xchg
jp
pop
ret
add
add
lock
dec
mov
add
and
xor
inc
pusha
imul
mov
stc
xchg
xchg
(bad)
ror
test
xor
mul
mov
js
mov
mov
ins
and
into
pop
shl
adc
aad
and
or
lahf
jmp
aad
mov
sahf
and
pusha
add
add
test
cmps
push
lock
cmp
lods
and
xchg
xchg
cwde
lods
mov
into
mov
iret
sbb
in
or
fsubr
clc
out
aad
add
add
cmps
mov
cwde
ja
push
ja
pop
xchg
sbb
cmp
cmp
ins
push
inc
neg
jbe
or
and
ins
out
push
leave
jmp
cmp
retf
sbb
add
adc
dec
cbw
ja
push
pop
pop
xchg
out
jge
xor
aas
xlat
out
shl
leave
mov
cmp
cli
icebp
xor
fisubr
sub
or
lods
loop
(bad)
push
xor
dec
out
addr16
out
paddsw
xor
xor
xlat
jmp
sub
xor
inc
shl
(bad)
jmp
xchg
clc
lea
sar
fmul
or
sub
lea
das
call
out
and
mov
push
mov
sub
das
lds
scas
xor
xor
push
add
xchg
inc
push
xchg
jne
setae
adc
and
xchg
jle
cmps
push
es
jbe
int3
push
push
dec
and
addr16
cmc
mov
cdq
jne
(bad)
movs
mov
xchg
cdq
rol
das
bound
(bad)
push
push
dec
mov
aaa
lahf
das
cwde
and
repnz
xor
sub
xchg
cmc
movlhps
in
xor
test
mov
sbb
push
add
fld
mov
mov
mov
sar
push
sub
imul
mov
xor
aad
sbb
cmp
jbe
dec
add
or
leave
sbb
jp
cld
in
out
mov
loope
daa
mov
push
fmul
or
pop
xchg
or
jnp
stos
jo
mov
fld
ss
mov
dec
fnstsw
adc
jns
and
cmp
lahf
stc
js
(bad)
cmp
aad
xchg
and
mov
test
call
adc
push
xchg
jl
adc
add
adc
sbb
mov
push
xor
jge
mov
addr16
mov
ror
cmp
enter
movs
out
(bad)
and
loop
jmp
mov
sub
fwait
mov
fnsave
and
cli
das
and
xor
inc
mov
pop
les
daa
push
scas
icebp
add
push
mov
arpl
out
ins
lods
push
push
neg
dec
inc
dec
xor
int
xchg
push
jp
(bad)
fsubr
xor
or
mov
xchg
retf
cdq
dec
xchg
and
cmp
ficomp
mov
sbb
rcr
movs
sub
stc
and
lods
mov
iret
sbb
mov
cmp
xchg
dec
int3
call
add
push
in
in
out
outs
cmp
mov
in
dec
add
and
mov
ds
sub
mov
(bad)
sub
push
cmp
in
dec
and
or
or
dec
and
sub
or
cmp
push
adc
iret
mov
ins
or
sub
mov
push
push
sub
adc
adc
(bad)
(bad)
icebp
loope
out
aad
push
add
cmc
adc
das
pop
hlt
push
pop
rol
call
fidivr
inc
or
loop
jecxz
cmp
(bad)
mov
test
adc
mov
aas
cmp
iret
data16
dec
or
(bad)
mov
cmp
cmp
mov
sar
stc
out
ins
and
movlps
outs
or
sub
mov
pop
arpl
inc
pop
adc
dec
sbb
xor
fcomp
xchg
adc
sub
int
hlt
jbe
jle
loopne
lods
jmp
adc
loopne
loop
and
sbb
cwde
lods
mov
inc
bound
cmp
ret
pop
mov
xor
out
ret
mov
and
adc
test
dec
push
xchg
push
mov
pop
and
inc
ss
scas
icebp
mov
sti
push
loopne
arpl
and
je
in
fadd
fsub
mov
outs
jno
xchg
scas
sbb
dec
pop
mov
data16
adc
inc
pop
xor
aas
adc
push
sub
mov
retf
sub
fmul
dec
mov
cmc
mov
jno
popf
ret
das
cmp
ret
sub
inc
sbb
mov
mov
ret
imul
push
mov
cdq
mov
lds
or
(bad)
push
lods
dec
dec
inc
fild
mov
sbb
ja
mov
jmp
test
jge
add
sub
pop
push
mov
inc
out
mov
xchg
(bad)
push
loop
adc
cmp
aam
(bad)
fidivr
popa
add
pop
jmp
cmp
adc
pop
call
cmp
add
int3
bound
jne
popf
mov
jl
nop
dec
out
cli
clc
adc
mov
lea
inc
out
rol
lds
das
cmc
adc
aad
inc
mov
hlt
cmp
jmp
lods
xchg
pushf
add
enter
add
aaa
add
retf
xor
push
cmp
ja
push
sbb
fwait
cmp
sub
mov
inc
sar
into
dec
std
push
daa
test
int3
popa
and
jl
cli
or
xchg
icebp
sub
adc
push
loop
repnz
and
int
retf
sbb
add
ja
in
xchg
jecxz
test
and
and
repz
stos
fst
fst
out
xchg
cmp
int
loope
push
jnp
jmp
sub
mov
xlat
(bad)
pushf
js
push
in
(bad)
cmp
lock
in
stos
jno
push
fisubr
pop
outs
es
fwait
cwde
jle
clc
imul
xchg
mov
fst
jo
jne
outs
xchg
sub
push
mul
cmp
pop
scas
and
in
stc
cli
loop
mov
xchg
xchg
lods
or
and
xchg
fwait
aas
dec
pop
sbb
jnp
xlat
out
(bad)
jmp
sahf
or
stos
(bad)
jb
repnz
push
leave
popf
pop
adc
add
rol
pop
mov
int
outs
ss
xchg
popf
mov
and
and
std
outs
sub
adc
mov
mov
lock
jbe
add
cmps
fnstcw
das
pusha
imul
call
ror
sbb
in
into
push
cmp
iret
mov
cld
inc
inc
jne
ds
inc
fbstp
inc
xchg
jecxz
mov
arpl
sub
push
push
lds
jo
xchg
xchg
jge
lds
adc
repnz
sub
sub
stos
xchg
setge
imul
adc
sub
add
or
jnp
jb
bound
fld
and
push
ds
rol
pop
pop
dec
dec
scas
add
and
gs
ds
add
fsubr
jo
std
in
jns
call
dec
pusha
xlat
scas
test
icebp
cld
push
mov
out
pushf
mov
sub
mov
movs
aad
xor
pop
int3
jg
ss
mov
mov
pushf
(bad)
cwde
and
fadd
(bad)
mov
data16
fst
outs
stos
jecxz
mov
icebp
xchg
and
push
loop
repz
push
out
sub
sbb
ror
jbe
pop
push
sahf
xchg
jp
or
loop
push
cli
es
mov
nop
pushf
or
xchg
iret
lods
inc
xor
sbb
pop
add
pop
outs
fist
cmp
adc
ja
mov
data16
add
sbb
je
rcr
test
push
and
sbb
dec
cmp
dec
pop
test
hlt
push
movs
mov
shr
(bad)
test
and
xor
inc
out
icebp
out
nop
adc
sub
fucom
rcr
dec
(bad)
sar
add
add
lahf
pop
and
cmps
cmps
push
addr16
xor
inc
imul
inc
jmp
loopne
cmc
clc
cmps
pop
mov
xchg
sbb
imul
popf
mov
out
ins
lahf
pop
jl
call
sub
scas
ins
out
mov
cmps
clc
push
xor
fidivr
add
(bad)
xor
cmc
inc
mov
popf
fist
adc
ss
retf
sbb
add
shl
mov
test
or
retf
arpl
sub
pop
fidivr
mov
mov
mov
scas
xor
out
or
(bad)
popf
mov
stos
cmp
inc
les
stos
sub
(bad)
dec
into
dec
(bad)
mov
xchg
ja
xor
sbb
hlt
mov
(bad)
adc
xor
out
cli
push
push
inc
imul
ret
add
call
sar
into
test
cld
xchg
xchg
xchg
sub
jnp
adc
pushf
inc
cmp
dec
mov
jle
pop
jae
lahf
leave
sahf
lods
scas
into
shl
sti
jbe
les
fst
mov
xchg
fincstp
inc
sbb
mov
scas
xor
loopne
mov
or
inc
xor
cmp
cmp
xchg
out
and
push
in
pop
fadd
fisubr
inc
ss
dec
jae
in
add
sbb
mov
adc
pusha
jo
xor
gs
rcl
jmp
sub
int
sbb
jne
cmp
jmp
repz
je
and
es
(bad)
in
mov
retf
ret
cmp
push
add
sbb
test
sub
jecxz
call
pop
sbb
xor
jg
clc
rol
sbb
icebp
into
dec
cwde
int
mov
and
xchg
inc
inc
push
and
cdq
retf
js
das
pop
mov
add
mov
fsubr
add
repnz
xor
xchg
and
dec
leave
(bad)
cmp
call
inc
imul
test
stos
outs
cmp
int3
push
out
int
retf
jle
test
adc
pop
or
das
neg
push
clc
adc
mov
out
fucompp
fcmove
hlt
popf
xchg
or
mov
jl
mov
add
pop
inc
and
sub
and
xor
ins
cli
jne
ss
jo
loopne
xchg
ins
inc
push
ss
xor
inc
in
sub
sub
jmp
cmp
add
or
imul
jmp
iret
and
cmp
retf
pop
sahf
shl
sub
cs
or
lahf
icebp
mov
adc
mov
je
xor
in
je
(bad)
scas
push
(bad)
mov
rcl
xchg
icebp
test
aaa
mov
rcr
(bad)
cmp
jg
movs
xchg
push
xchg
add
lds
js
ins
mov
les
fist
jle
pop
inc
rol
cld
call
sbb
jge
mov
sub
xor
inc
jp
jae
out
ds
(bad)
jmp
and
push
pop
in
or
movs
outs
aam
adc
out
sbb
and
(bad)
(bad)
push
mov
stos
mov
out
pop
ror
mov
call
push
xchg
mov
add
mov
xor
adc
inc
dec
sub
cmp
and
push
adc
enter
xchg
ret
popa
(bad)
test
repz
xchg
out
inc
fdiv
and
fadd
in
cld
stc
jg
push
shr
and
hlt
and
lea
jg
xlat
and
dec
mov
ds
mov
fbstp
or
dec
outs
add
ret
lea
fwait
loope
xor
inc
scas
mov
das
pop
addr16
jl
sahf
xchg
addr16
mov
push
jg
ja
xchg
addr16
cmovo
cli
adc
adc
and
imul
outs
sub
ss
int
cmps
aad
scas
dec
imul
(bad)
xchg
imul
arpl
je
lahf
adc
pusha
pop
cmc
push
in
jmp
jb
shl
mov
or
xchg
sub
sbb
push
add
cs
mov
data16
add
cmp
add
xchg
out
add
xchg
sahf
sbb
sub
xchg
neg
inc
outs
push
and
cmps
or
repnz
shl
(bad)
icebp
pusha
push
out
inc
arpl
adc
cmp
adc
inc
imul
and
xor
xchg
mov
mov
outs
xor
xchg
dec
and
inc
shl
push
xchg
in
or
push
push
ret
mov
loop
je
jno
push
cwde
push
mov
fchs
mov
fisttp
mov
push
int
xor
shl
mov
mov
mov
arpl
ret
clc
fdivrp
jo
mov
lods
pop
jno
fs
(bad)
push
lock
call
mov
push
cmp
movs
loope
fadd
jp
xchg
xor
adc
fwait
jp
fisub
nop
pop
(bad)
loope
push
pop
jl
mov
jp
inc
adc
xchg
mov
scas
push
pop
mov
fimul
push
mov
test
(bad)
loopne
pop
sub
xchg
jbe
popa
sub
push
imul
stos
ret
sub
mov
enter
adc
sub
aam
arpl
mov
jle
aas
sub
sub
or
imul
or
push
and
inc
in
iret
out
inc
scas
fsub
jae
xchg
push
sbb
sbb
pop
cwde
sub
push
xchg
out
mov
cwde
ret
movs
sbb
jmp
pop
pop
and
outs
cmpps
outs
jle
sti
test
xor
mov
lahf
xor
dec
dec
sub
fmulp
call
dec
jp
xchg
jle
or
xor
cmp
dec
shl
ins
repnz
stos
push
mov
xchg
icebp
gs
(bad)
imul
jmp
xor
lahf
stos
into
mov
std
xchg
gs
outs
std
jecxz
iret
ins
cmp
fstp
jl
inc
aas
dec
arpl
add
fst
mov
push
adc
adc
adc
movs
movs
dec
cmp
and
dec
inc
pop
or
sahf
or
sub
cmps
sub
push
sub
loop
rcr
jno
mov
push
jo
inc
js
into
jo
cwde
mov
in
cdq
jmp
and
mov
jg
gs
jle
in
bound
add
jbe
or
add
jb
fwait
and
push
and
mov
xchg
rcl
(bad)
mov
rcl
mov
pusha
mov
fistp
mov
and
icebp
and
std
xor
retf
jb
cld
add
fstp
xor
jp
mov
sahf
cmp
push
(bad)
ss
add
fsubr
dec
(bad)
aas
fcomp
cmp
mov
out
mov
xor
push
mov
push
repz
push
jb
or
sahf
nop
addr16
xchg
adc
in
mov
push
dec
popf
je
mov
sbb
xchg
pushf
mov
cmps
rcr
add
mov
daa
cmp
(bad)
std
push
xor
into
repnz
aas
popf
adc
pop
std
pop
adc
and
pop
push
loope
je
pusha
push
(bad)
add
call
sbb
jbe
jns
push
cdq
fcomip
scas
mov
dec
pop
fisttp
cmp
pmaddwd
repnz
rcr
xchg
lods
adc
in
stc
sbb
test
mov
inc
push
(bad)
jb
adc
cmc
jae
fsub
xor
lock
pop
push
mov
jmp
add
cmp
adc
inc
xor
int3
(bad)
repz
adc
sbb
jg
into
retf
icebp
outs
call
jmp
push
adc
ds
je
cmp
fwait
or
inc
adc
(bad)
adc
and
jo
adc
mov
and
pop
cmp
dec
mov
mov
retf
inc
sub
sub
call
mov
cmp
clc
addr16
daa
ret
call
xor
popf
addr16
inc
jmp
push
clc
mul
push
pop
push
pop
jno
mov
or
cdq
mov
imul
cmp
sbb
push
push
sbb
(bad)
xor
xor
std
jmp
iret
shl
les
sub
jmp
and
xor
stos
adc
mov
addr16
retf
js
retf
neg
cld
out
sub
outs
shr
cs
pop
or
xchg
mov
mov
push
retf
shl
imul
aas
jmp
(bad)
pushf
(bad)
scas
and
stos
push
jo
sbb
xchg
call
jbe
xchg
or
jmp
popf
fadd
and
push
mov
lea
loope
pop
jne
data16
out
push
bound
(bad)
add
adc
stc
lods
push
pop
test
sub
push
cld
push
inc
xor
cmps
in
ficomp
(bad)
and
adc
loope
imul
call
fs
mov
out
push
dec
in
mov
adc
cmp
out
xchg
cmp
popf
test
sti
test
or
jne
xor
lods
push
xchg
xor
stos
cld
sub
mov
jb
sar
xor
push
mov
cld
js
neg
mov
ror
repz
imul
popf
fild
inc
push
das
inc
mov
lds
gs
scas
inc
mov
push
xlat
retf
and
daa
out
repz
bound
or
(bad)
(bad)
and
inc
iret
mov
jmp
in
dec
pop
inc
adc
retf
inc
retf
xchg
cli
xchg
mov
cli
pop
popa
(bad)
pop
jge
xchg
addr16
iret
pop
retf
arpl
popf
adc
dec
pop
inc
lea
dec
(bad)
(bad)
sti
and
ss
lock
sbb
jl
and
or
jae
xor
cmps
cmps
adc
pop
neg
mov
jnp
sahf
lock
clc
(bad)
xchg
jp
mov
arpl
push
loopne
daa
shl
sub
mov
int3
mov
push
jmp
je
jge
shr
dec
cmp
cmp
push
test
and
outs
inc
cmc
aas
stos
inc
leave
icebp
data16
inc
push
jo
sbb
inc
dec
iret
add
outs
mov
out
in
aad
imul
sub
aad
retf
sar
or
cmp
sub
dec
loopne
jl
and
adc
dec
mov
inc
dec
cmps
out
and
enter
cwde
cli
jae
movs
lock
test
inc
test
aas
bt
pop
(bad)
not
xor
leave
adc
ret
int
ins
nop
sbb
rcr
sbb
jns
fist
sub
std
cmps
retf
adc
inc
add
fwait
lods
retf
sbb
sub
stos
sbb
setns
rcl
mov
sbb
retf
sti
adc
push
cmp
(bad)
jl
aas
nop
js
mov
out
ficom
js
add
xor
(bad)
icebp
pop
popf
call
ds
rol
hlt
std
int
push
das
in
jmp
jecxz
fstp
aad
daa
es
(bad)
call
dec
add
fnstcw
scas
mov
iret
push
cld
add
jne
mov
je
in
popa
cmp
and
repz
repz
add
jb
push
retf
cmp
jl
inc
call
xchg
or
inc
js
jb
into
sub
imul
cld
mov
mov
mov
ror
sub
iret
pop
mov
xchg
rol
and
add
js
imul
cmps
mov
xor
shr
shl
mov
int
xchg
mov
xsha1
cmps
lea
xor
inc
sub
adc
sbb
inc
pop
icebp
sub
mov
arpl
dec
and
jmp
jbe
jno
dec
call
push
pop
pop
ss
out
fistp
push
xor
mov
inc
add
jns
scas
dec
jle
cmps
push
sti
stc
mov
daa
adc
adc
xor
in
inc
cmps
inc
jae
sub
mov
mov
push
mov
ins
daa
popf
mov
call
fnstcw
push
sti
jns
add
cmp
loopne
push
rcl
cmp
out
out
cs
jo
sub
mov
adc
enter
mov
int3
xchg
nop
mov
jae
sbb
or
sar
lahf
cs
addr16
xchg
mov
mov
inc
sbb
jnp
xor
jns
retf
test
scas
xchg
test
cs
or
bound
test
test
scas
mov
xor
dec
cmps
fistp
sbb
cld
fs
cmp
push
jbe
pop
inc
sbb
test
lahf
fidivr
arpl
sub
add
jno
dec
shl
sbb
hlt
xchg
test
fdiv
cmp
mov
add
fidivr
je
rcl
pop
mov
adc
jmp
ja
gs
cmc
daa
cmp
pop
cwde
pop
adc
fwait
push
fmul
shl
or
jae
sbb
fdivr
and
mov
push
cwde
sbb
aaa
add
test
inc
pop
mov
mov
test
enter
inc
pop
je
inc
rcr
fwait
mov
mov
sbb
fwait
and
pop
mov
fisttp
scas
(bad)
sti
rcr
add
pop
lahf
int
mov
(bad)
push
ins
test
imul
jmp
out
cmp
mov
ret
les
push
cld
imul
xchg
and
dec
pop
cmps
push
jno
xor
call
sbb
data16
and
lock
fnstsw
jp
mov
xor
mov
dec
bswap
sbb
push
sar
adc
inc
pusha
(bad)
inc
je
add
into
dec
fcmovnu
jmp
mov
imul
cmp
imul
or
loope
js
sbb
jmp
pop
jo
aaa
stos
pop
jo
push
and
popf
cmp
popa
(bad)
cmp
inc
loope
sbb
push
aam
pusha
outs
outs
push
mov
cmp
inc
and
repz
sbb
jnp
les
enter
call
adc
jg
clc
inc
stc
jg
mov
cs
loope
sbb
mov
ins
jle
stos
adc
pop
dec
jo
inc
movs
xor
add
or
adc
mov
dec
lea
lds
and
movs
es
push
jb
mov
xor
and
shl
pop
cmp
dec
mov
sbb
out
push
pop
repnz
xchg
cmp
xchg
lods
lods
xor
sbb
ins
add
pop
cmp
sbb
mov
push
and
adc
rcl
sbb
jo
ins
cdq
pop
iret
push
cmps
jg
lahf
aad
movs
sbb
iret
es
adc
push
retf
adc
fwait
retf
retf
std
ret
lods
ss
lods
movs
and
pushf
pop
js
or
lods
adc
push
inc
pop
loop
sub
sbb
cmps
sub
xchg
test
ja
dec
outs
pop
retf
aas
movs
inc
xchg
sbb
dec
ja
ss
lea
call
mov
mov
(bad)
sar
std
ret
add
in
pop
retf
js
sti
repz
pop
mov
iret
mov
and
push
pop
cmp
int
ss
mov
frstor
in
out
scas
cmc
pop
pop
and
(bad)
xchg
push
inc
jno
add
loopne
cld
and
add
inc
jl
and
inc
jo
inc
xchg
jae
mov
test
addr16
stc
jo
int3
pop
nop
lds
imul
add
cmp
cli
inc
cmp
cmps
jnp
iret
repnz
push
fcmovne
push
add
pop
pop
ret
rol
push
stos
add
(bad)
(bad)
int
push
cmps
mov
mov
stos
out
jle
xchg
pop
bound
repz
jg
enter
mov
dec
dec
or
mov
mov
nop
mov
mov
mov
cmp
ss
mov
xchg
movs
mov
rcr
in
jne
inc
sbb
push
data16
jnp
retf
push
cs
xchg
mov
sar
xchg
mov
retf
movs
mov
imul
stc
push
mov
div
add
fidivr
js
inc
jmp
shr
and
mov
aas
xchg
(bad)
bound
sbb
jns
xchg
cmp
js
xor
and
test
jmp
pop
imul
xchg
adc
and
imul
push
repz
mov
stos
dec
pop
mov
pop
das
sub
loopne
push
sub
cmp
je
sub
dec
ret
mov
pop
mov
enter
mov
cmps
push
sar
push
inc
sub
ret
and
mov
stos
jnp
mul
sbb
adc
mov
stc
jge
cmp
lods
adc
sbb
test
iret
rcr
jbe
cmp
inc
mov
icebp
push
cmps
int3
aaa
and
jl
push
dec
sahf
call
daa
jo
xor
and
dec
pop
fldcw
clc
push
hlt
ret
pop
sub
xchg
adc
mov
ss
sub
cmps
mov
dec
int3
or
cmp
cmp
sub
dec
aam
jge
add
stos
sbb
movs
xor
(bad)
push
adc
fisubr
inc
adc
in
mov
rol
xchg
inc
push
pusha
mov
idiv
retf
xlat
std
inc
(bad)
cwde
inc
or
pop
jnp
inc
push
dec
push
bound
mov
jp
div
inc
adc
xchg
(bad)
out
fucom
ret
test
add
dec
jecxz
jb
and
movs
xchg
pop
sub
in
or
clc
lds
or
or
xchg
je
out
push
in
mov
and
dec
push
pushf
and
mov
sub
pop
in
jg
loopne
aam
jne
mov
inc
and
outs
pop
sub
outs
push
jnp
add
icebp
aad
or
fnsave
aaa
js
imul
cld
jle
dec
jmp
mov
or
add
jge
and
jle
adc
repnz
loope
movs
mov
jno
inc
(bad)
scas
or
pop
aam
shr
je
adc
xor
into
neg
push
dec
lahf
ret
pop
test
repnz
mov
ret
add
lods
rol
xchg
jns
ret
mov
inc
js
movs
cmps
mov
add
cmp
sahf
jmp
push
mov
cld
out
icebp
xchg
xchg
loop
shr
neg
imul
inc
adc
ins
arpl
nop
pop
and
xor
dec
or
sub
pop
pop
std
(bad)
jb
cmp
cmp
jns
xor
pop
(bad)
dec
cmps
popf
rol
adc
(bad)
leave
xchg
cmps
pusha
ins
cmp
pop
test
shl
(bad)
in
nop
test
and
mov
dec
enter
imul
into
aas
dec
or
retf
mov
aaa
(bad)
and
xchg
in
push
push
and
hlt
fs
stos
xchg
pop
inc
add
inc
or
adc
adc
adc
aad
lods
push
bound
inc
and
xor
or
retf
push
xlat
adc
mov
es
shr
lods
hlt
mov
call
push
iret
dec
jae
ror
add
icebp
ror
loop
ret
mov
inc
jbe
cs
cmp
sub
inc
test
loop
rcr
aad
sbb
dec
gs
loope
int
ins
or
inc
mov
cmp
cld
push
ror
es
(bad)
sti
dec
sahf
mov
stc
xor
into
movs
inc
sub
test
inc
scas
out
out
xlat
fst
mov
dec
adc
outs
inc
stos
push
jne
and
fwait
fwait
or
inc
call
(bad)
mov
pop
mov
loop
test
shl
cmp
mov
rcr
xlat
adc
push
fwait
xchg
in
enter
iret
test
cmc
sbb
push
in
cmp
jne
xlat
fidiv
jle
ds
or
pop
fcmovu
or
jge
test
xchg
mov
adc
adc
pusha
clc
mov
mov
mov
inc
data16
fsubr
mov
push
ds
mov
test
mov
sub
push
out
inc
pop
push
movs
sub
push
imul
pop
sub
popa
mov
(bad)
cmp
ds
sbb
adc
int
pop
xor
mov
arpl
push
mov
xchg
mov
mov
out
jecxz
cmp
mov
pop
sbb
movs
pushf
in
fidiv
dec
jne
fcom
mov
mov
scas
adc
movs
push
push
ss
test
fld
pop
push
js
retf
push
dec
mov
push
or
stos
cmp
cs
push
or
std
ret
push
adc
or
out
icebp
pop
push
frstor
jl
add
popa
cmp
xchg
xor
push
(bad)
inc
fadd
mul
bound
sbb
adc
jne
mov
cmp
mov
mov
mov
gs
xchg
and
pop
cmp
sub
sub
and
inc
fnstcw
leave
adc
rcr
pop
mov
and
mov
in
xor
ja
int
lods
mov
outs
adc
popa
jmp
imul
cmp
xlat
stos
test
fcom
les
xchg
adc
or
jp
(bad)
pop
mov
(bad)
sub
aad
xlat
mov
dec
push
push
out
cli
les
(bad)
inc
aam
daa
rcl
jmp
jno
shl
icebp
in
pop
push
sbb
ficomp
mov
ror
idiv
out
shl
pop
fcmovb
push
and
dec
call
mov
mov
sbb
xor
xchg
mov
mov
mov
dec
push
dec
out
popa
cmps
nop
sahf
sub
sahf
std
inc
retf
enter
int3
aad
arpl
lahf
stos
mov
fidivr
xchg
or
ror
push
retf
xor
mov
pop
bound
mov
or
adc
ins
add
fmul
loope
pop
dec
xchg
add
pop
stos
pusha
shl
cmp
stos
jbe
imul
ret
push
xchg
and
aad
out
aaa
fsubr
mov
cld
cmp
arpl
xchg
pop
(bad)
mov
in
shl
dec
hlt
dec
sbb
js
aad
and
fwait
mov
add
loop
leave
(bad)
jae
pop
hlt
lods
call
arpl
push
adc
mov
mov
ins
add
int3
or
cmps
mov
adc
inc
fist
sahf
xchg
mov
leave
lea
xchg
(bad)
push
cmp
stos
jb
jecxz
into
push
bnd
pop
(bad)
xlat
or
push
call
cmp
test
add
push
xchg
retf
fs
mov
lahf
or
lahf
popf
xchg
inc
inc
mov
adc
inc
or
aas
mov
xchg
push
fs
fnsave
in
retf
call
and
and
add
sub
push
outs
xchg
lock
pop
pop
mov
ds
and
out
mov
movs
dec
and
push
add
int
mov
mov
or
das
test
repnz
je
mov
(bad)
or
(bad)
in
es
push
je
jo
call
mov
scas
sub
or
cmp
pop
or
(bad)
or
cmp
cmp
or
fnstenv
int
dec
inc
xchg
movs
mov
pusha
daa
ins
test
mov
test
jl
xor
mov
cdq
mov
fstp
adc
jle
mov
pop
sub
loopne
je
out
ins
out
lods
shl
adc
mov
dec
sbb
jnp
or
jp
jecxz
cmp
outs
ret
sub
lea
xchg
stos
sub
aas
dec
loope
sbb
xlat
mov
aad
sbb
sub
or
adc
jle
cmps
sahf
cmp
jno
mov
cmps
mov
(bad)
movs
lock
inc
div
addr16
push
sub
enter
aas
jmp
mov
mov
mov
or
pusha
pop
cmp
lds
daa
cmps
mov
xchg
popa
cdq
mov
ss
out
scas
pop
sbb
xchg
dec
pop
aad
stos
out
lahf
inc
mov
jmp
inc
ins
clc
inc
and
shl
int
push
aaa
data16
test
add
fwait
mov
shl
mov
ret
sub
push
(bad)
mov
iret
mov
mov
push
xchg
jmp
test
jns
push
cmps
imul
jne
dec
pop
ins
push
lods
mov
jecxz
das
(bad)
cmp
mov
sub
das
adc
test
mov
inc
les
cmp
mov
pop
mov
mov
test
xchg
dec
mov
add
jmp
push
enter
cmp
push
mov
add
into
popa
or
stos
jbe
pop
mov
imul
add
cmp
and
mov
es
es
adc
mov
jmp
cli
push
fs
gs
sahf
inc
add
retf
sbb
dec
cli
xchg
jmp
enter
test
adc
and
into
xchg
adc
jb
daa
cdq
shl
push
pushf
in
mov
mov
mov
outs
dec
rol
cmc
push
ds
xor
xlat
pusha
popf
mov
std
dec
gs
or
lock
lods
pop
jmp
push
sti
out
ror
mov
rcl
enter
adc
pop
sbb
in
dec
dec
xchg
out
fadd
enter
and
pushf
leave
add
sub
dec
push
sbb
pop
add
sar
dec
dec
daa
(bad)
frstor
test
das
adc
(bad)
jl
mov
xchg
sahf
jp
in
pop
sub
(bad)
push
popa
xor
movs
push
or
push
mov
pop
movs
and
(bad)
jno
adc
in
nop
add
cmp
xor
sub
pop
stc
xor
retf
dec
jl
cld
xor
(bad)
jae
and
jns
outs
sti
jae
sbb
and
fsubr
arpl
das
mov
pop
outs
jns
mov
fdivr
pop
or
pop
xor
inc
mov
adc
xchg
stos
sub
ins
ins
push
cmps
xchg
jg
sbb
push
xor
outs
mov
fidiv
add
out
and
dec
shl
sub
add
cmp
xchg
cs
repz
test
xor
xor
mov
sub
js
inc
xor
jae
(bad)
dec
dec
lea
inc
push
inc
xor
or
xchg
or
or
sbb
xor
xor
scas
imul
pop
add
inc
and
cmp
jp
cs
inc
mov
dec
xchg
mov
repnz
fdiv
aad
jg
push
enter
hlt
mov
sbb
stos
ja
(bad)
mov
in
out
dec
mov
xchg
add
jno
lods
cmp
dec
dec
stos
xchg
jge
enter
repnz
std
les
out
dec
nop
clc
push
jp
sbb
sbb
mov
pusha
jb
cmp
fwait
dec
adc
fcomp
xor
dec
retf
test
rcr
iret
cmps
ror
sub
cmp
test
sbb
ds
cmp
jecxz
pop
outs
shr
lahf
lea
pop
cld
(bad)
sbb
or
retf
dec
inc
inc
out
shl
arpl
xchg
loopne
add
jl
dec
sbb
fisttp
addr16
add
cmp
push
mov
pusha
add
adc
cld
daa
xor
ror
xor
call
push
jne
rcl
out
dec
fwait
push
das
push
xchg
jbe
sbb
cmp
scas
sbb
mov
xor
sub
outs
and
xchg
pop
pop
sub
mov
inc
cmp
mov
cmp
(bad)
cmp
retf
je
or
emms
fnsave
mov
mov
sub
push
pop
je
stmxcsr
repnz
sar
int
xor
aas
mov
mov
outs
mov
lea
pop
push
xor
mov
mov
addr16
loope
or
dec
lahf
xchg
aam
pop
mov
adc
cld
sar
xor
xchg
ins
neg
dec
mov
in
aaa
sti
jle
les
inc
aad
mov
fwait
push
dec
mov
xchg
cmp
in
xchg
mov
loopne
xchg
or
cmp
xor
push
inc
shl
aad
(bad)
xor
idiv
sub
add
(bad)
movs
shl
fild
cmp
ret
shl
dec
dec
je
lods
sbb
(bad)
stc
aam
xchg
add
iret
mov
ja
sbb
adc
rcr
mov
dec
fs
push
scas
sbb
xchg
in
fisttp
js
daa
es
dec
add
mov
iret
mov
pop
mov
pop
leave
xor
mov
push
jo
inc
rcl
xchg
les
mov
popf
enter
les
hlt
leave
jp
addr16
xor
cwde
ja
(bad)
call
paddq
test
cmp
adc
mov
fs
mov
mov
iret
inc
js
hlt
sar
jl
stos
sahf
sbb
jecxz
mov
arpl
psubusb
pop
cmc
inc
cmc
js
test
sbb
xor
pop
lods
aad
add
jge
pop
dec
or
push
cmp
adc
inc
fwait
or
mov
lock
adc
sahf
and
jl
xchg
and
or
(bad)
inc
lds
sub
fdiv
and
imul
pop
cmp
and
jge
or
nop
inc
sub
je
cmp
xor
jp
shl
or
lock
mov
cmp
lea
cdq
mov
push
(bad)
pop
mov
iret
leave
cld
mov
scas
pop
(bad)
push
adc
test
pop
call
mov
and
fcom
and
jg
movs
dec
adc
repz
mov
jp
fwait
inc
into
movs
loop
enter
popf
test
xchg
mov
iret
jne
adc
or
inc
aas
in
lock
jns
retf
sub
test
jae
popf
lock
jmp
pushfw
cdq
in
lds
xchg
mov
outs
jl
rol
xchg
ror
in
pop
and
jne
xchg
scas
cmp
and
in
sub
shr
xchg
mov
imul
pop
mov
sub
sub
sub
inc
push
in
push
cli
or
jne
frstor
add
aaa
mov
cmps
push
ret
inc
adc
je
sar
inc
(bad)
cli
call
stos
fnstenv
mov
adc
add
les
xor
mov
sub
inc
or
or
stos
fninit
push
lods
and
inc
sub
push
test
cmps
fs
rol
cmp
dec
ret
xchg
ret
jge
and
lahf
sub
jne
or
adc
fcomp
add
mov
mov
mov
shl
aaa
mov
xchg
push
xchg
(bad)
mov
xchg
test
nop
stc
aam
test
xlat
mov
std
sbb
adc
xor
loope
fnsave
pop
call
dec
bound
mov
ds
push
mov
jg
xchg
push
cmp
xchg
adc
lahf
outs
loope
aas
xor
mov
test
mov
jbe
in
imul
sub
lods
or
aad
pop
dec
inc
loop
mov
xchg
ret
addr16
aaa
xchg
mov
add
fiadd
fdiv
mov
pcmpgtw
mov
leave
push
nop
push
jl
or
repz
repz
jno
repz
add
aaa
push
mov
push
loopne
or
imul
loopne
idiv
mov
ja
mov
cld
jns
in
jno
out
mov
mov
xchg
mov
popf
movs
xor
cdq
adc
je
xchg
xor
les
clc
ins
push
mov
sbb
nop
scas
call
mov
mov
scas
mov
jbe
or
jmp
xchg
je
retf
test
(bad)
fucom
cmp
out
inc
pop
hlt
mov
(bad)
xor
lods
adc
sti
int3
cmp
sar
mov
aad
inc
push
xor
out
addr16
jbe
xchg
(bad)
jmp
shl
add
and
dec
movs
xchg
adc
je
outs
xchg
ret
call
jle
mov
in
mov
mov
push
call
jno
cmp
(bad)
mov
xchg
jmp
fidiv
or
jae
pop
call
jl
mov
loop
dec
pop
retf
inc
out
mov
xor
ds
xor
imul
add
xchg
outs
push
ret
aaa
dec
cmp
cwde
call
push
mov
movs
iret
outs
cmp
cmc
xor
les
or
retf
lods
mov
dec
loope
ins
loop
mov
fild
scas
adc
inc
jl
(bad)
fisttp
int3
cmp
(bad)
out
(bad)
mov
scas
mov
mov
adc
cdq
popf
mov
and
rcr
pop
pop
nop
inc
gs
(bad)
out
xor
pop
push
fisubr
push
mov
rol
retf
stos
fsubr
scas
and
imul
dec
jae
movs
loopne
cli
mov
dec
mov
push
lea
(bad)
fwait
mov
jg
and
outs
xor
iret
pop
dec
scas
push
ja
inc
popf
mov
or
xchg
jge
cli
aam
mov
ds
retf
inc
add
xor
pop
sbb
mov
pusha
icebp
retf
test
je
sub
sub
imul
xor
push
dec
pop
pop
mov
jns
add
aas
inc
test
mov
nop
mov
cmp
adc
sub
into
push
and
in
or
vpsubw
mov
es
jecxz
imul
hlt
add
into
scas
aaa
mov
fmul
jle
dec
test
stos
and
cmp
pusha
cmp
push
fs
in
in
inc
pop
mov
and
jo
mov
pop
cmps
das
gs
push
adc
dec
fsubr
jmp
loope
adc
mov
mov
fiadd
push
pop
and
cmps
repnz
(bad)
sbb
fwait
retf
xchg
test
adc
sbb
xlat
ret
out
adc
js
or
push
xchg
(bad)
int
sub
rcl
ror
pop
jge
cmps
stos
adc
sbb
mov
loopne
push
lahf
inc
fst
cmc
pop
imul
jl
sub
(bad)
xor
push
pop
loop
ja
adc
inc
repnz
push
(bad)
lods
cmp
inc
movs
jae
(bad)
mov
mov
test
std
mov
jae
cmp
fimul
xlat
aas
(bad)
mov
push
cdq
loope
xor
mov
cmp
inc
xchg
mov
lds
inc
into
les
inc
or
mov
cmp
nop
mov
test
inc
and
call
sub
sub
js
push
jp
hlt
dec
(bad)
pusha
sub
fist
mov
push
inc
push
jo
jg
out
cs
jb
xchg
outs
pop
stos
push
cld
call
cmps
mov
rcr
add
sub
(bad)
sub
push
adc
shl
and
movs
jmp
jle
cmp
xor
jae
jle
push
cmp
mov
adc
push
call
test
cmp
repz
fcmove
shr
fistp
popf
jne
xlat
adc
jmp
xchg
push
stos
iret
dec
sub
mov
fdiv
repnz
adc
sbb
push
clc
mov
jne
ss
cmp
cmp
(bad)
pop
and
mov
sbb
cmp
outs
jmp
inc
pop
push
xor
inc
ds
outs
mov
jne
les
popf
cmps
xor
retf
std
add
xor
and
in
mov
dec
clc
push
mov
int
shl
(bad)
fsubr
mov
dec
push
inc
xor
lahf
xlat
jb
rcr
cmp
or
sbb
std
fimul
fisttp
jmp
inc
mov
stc
out
out
lahf
mov
jns
enter
or
adc
and
pop
lea
imul
push
or
fs
dec
(bad)
push
out
mov
mov
out
mov
dec
sar
jge
or
daa
pop
mov
add
or
out
fcmovnu
adc
out
sbb
and
(bad)
add
icebp
ja
sub
and
cmp
aam
inc
jbe
dec
push
and
cmp
inc
imul
inc
jae
and
ret
in
push
xor
xor
or
aad
fild
fdiv
adc
outs
sbb
lock
and
fistp
pop
in
xchg
gs
test
out
mov
push
sub
pushf
lods
clc
test
cdq
pop
inc
in
nop
les
jmp
cmp
fsubr
out
xor
jb
in
dec
xchg
add
int
into
(bad)
(bad)
lock
cmp
fisubr
int
jle
jge
or
aaa
inc
cmps
mov
push
and
inc
jae
not
mov
xlat
jg
out
and
push
adc
stos
jge
(bad)
sub
les
ss
or
scas
sahf
or
icebp
xchg
jmp
mov
lds
mov
mov
test
pinsrw
dec
add
addr16
cmp
into
rcr
mov
or
adc
adc
xor
sbb
adc
jmp
dec
xor
dec
ret
xchg
loope
je
fisub
daa
and
mov
mov
(bad)
jle
scas
rep
out
clc
stc
mov
stos
loopne
xor
outs
pop
jno
xor
push
cdq
inc
jecxz
mov
sbb
je
jecxz
inc
mov
mov
in
cmc
scas
jmp
int
cmp
dec
sbb
repz
add
fcomp
or
js
mov
push
sahf
xchg
add
push
call
outs
popf
nop
sub
not
test
mov
sbb
fucom
out
push
pop
(bad)
adc
int
adc
pop
shr
mov
and
cmp
jle
rcr
jmp
repz
(bad)
fwait
adc
push
mov
stos
xor
pop
dec
sar
(bad)
dec
adc
mov
iret
test
mov
outs
or
int
cdq
xor
push
out
push
cmps
das
retf
fisub
daa
jl
mov
fcom
pop
cmp
test
add
lahf
(bad)
pop
js
bound
pop
pop
mov
jno
fisttp
or
imul
add
dec
scas
leave
push
stc
mov
xchg
ds
xlat
push
jbe
retf
or
inc
cld
ins
into
add
xchg
mov
scas
cmp
jmp
icebp
cwde
nop
pop
mov
xchg
je
mov
cmp
fcmove
mov
sbb
mov
lds
js
div
shl
mov
stos
jmp
xor
xchg
cld
and
movs
frstpm(287
push
adc
add
sahf
lea
lahf
es
test
std
inc
sub
pop
sbb
outs
outs
push
xor
xchg
mov
xor
mov
xchg
xchg
(bad)
ds
sub
stos
jle
xchg
(bad)
sub
bound
jl
(bad)
push
or
pop
cmp
pusha
cmp
pusha
dec
outs
adc
xchg
pop
jmp
adc
pop
in
sub
std
ret
inc
or
nop
and
jmp
data16
movs
xor
sbb
mov
xor
call
push
scas
test
dec
retf
jecxz
lods
retf
adc
dec
mov
aad
jb
add
pop
cmc
and
mov
test
xor
push
pop
test
out
js
xchg
das
lock
xchg
repnz
pop
cld
loopne
mov
sub
fldz
out
adc
loopne
cs
adc
mov
cli
js
push
jecxz
and
adc
leave
jnp
sbb
mov
mov
stos
xchg
add
cwde
cli
jp
loope
vpminub
cmp
daa
in
inc
add
xchg
sar
stos
test
sti
mov
lods
xor
push
cmp
jecxz
in
cmp
or
mov
adc
pop
xchg
sar
xor
cs
pusha
ss
jecxz
inc
repz
in
scas
pop
cwde
mov
push
mov
xor
call
inc
fmul
push
into
push
les
test
sbb
sub
je
rol
push
pop
and
and
sub
inc
xchg
jns
ss
cmp
mov
add
aaa
mov
mov
jns
xchg
outs
dec
or
mov
pop
cmp
cmp
pop
pusha
push
add
inc
loopne
or
xchg
lods
loopne
cmp
add
cld
pop
pop
inc
das
sub
(bad)
test
aas
das
xor
or
pop
enter
(bad)
adc
sbb
dec
jb
lods
push
sub
add
cmps
int3
js
retf
pop
mov
fidivr
imul
retf
pop
loopne
cmp
ja
test
and
pop
ret
rcl
ins
mov
fnstsw
(bad)
repnz
mov
mov
inc
jge
pop
sbb
mov
or
inc
adc
sbb
aas
push
add
es
mov
call
dec
push
cli
jae
adc
pop
test
cld
data16
cmp
xchg
pop
pop
sub
xor
(bad)
jmp
pop
repz
fs
cmc
inc
jbe
push
mov
fxch
jecxz
mov
loopne
fs
out
and
pop
sub
jne
in
sub
nop
ss
ss
jnp
div
xor
and
int
dec
fwait
cs
jp
inc
(bad)
mov
adc
jmp
pop
pop
mov
pop
gs
das
or
and
and
adc
stos
loopne
popf
ss
shl
loopne
pop
add
push
iret
fcom
sub
add
push
pushf
cwde
push
add
lahf
rol
dec
enter
add
enter
jge
cmp
aaa
lahf
pop
shl
iret
mov
push
or
bnd
push
popa
or
stos
mov
sar
inc
retf
and
pusha
and
xchg
int
push
inc
xchg
ss
es
xor
iret
call
rol
and
shl
pop
cdq
and
xor
and
out
fidiv
and
jmp
pushf
das
push
and
mov
pop
daa
in
fadd
fadd
mov
clc
cmps
push
aas
mov
jecxz
ja
xchg
push
mov
hlt
sub
aas
ss
cmp
jae
jb
sbb
retf
or
arpl
outs
xor
(bad)
mov
mov
in
iret
xchg
cmc
mov
rcr
in
jmpw
call
outs
pushf
mov
std
push
jmp
in
shr
add
pop
call
push
mov
fisttp
stos
stos
sbb
or
jne
dec
mov
push
push
jbe
fs
cmps
pop
mov
cmp
repz
ret
(bad)
ret
and
add
jne
mov
das
jb
mov
retf
fcom
(bad)
cli
aas
inc
int
in
dec
push
mov
test
in
pop
mov
mov
jmp
and
xchg
pop
add
xor
mov
sbb
dec
lds
lods
iret
jge
ror
push
lock
add
(bad)
fld
mov
sti
loope
push
fld
pusha
clc
aas
jo
add
sti
out
lock
sti
test
sub
outs
push
cmps
ret
ds
jne
jo
aam
mov
xchg
mov
retf
mov
and
inc
sti
ins
stc
lods
xchg
cmp
xlat
fist
inc
xchg
shr
test
mov
ffreep
xchg
xlat
retf
nop
inc
out
test
daa
ror
pop
icebp
jmp
fild
inc
imul
fistp
(bad)
pusha
cli
or
or
test
mov
and
add
push
stc
loop
jmp
sbb
add
(bad)
xor
xchg
fisttp
jmp
push
icebp
jg
fmul
scas
loopne
movs
add
cmps
ja
lds
xlat
sbb
nop
or
or
and
loope
ret
mov
inc
nop
test
pop
pop
in
je
out
dec
les
in
out
sub
or
ins
nop
mov
fwait
push
push
jmp
jbe
add
arpl
push
sub
loope
sub
dec
push
ret
mov
sub
mov
push
das
pop
inc
aaa
cmp
pop
ins
inc
test
stc
push
mov
cs
scas
mov
stc
fidiv
add
sbb
scas
xor
cmp
xchg
jmp
test
dec
pushf
xchg
ss
sbb
fs
fnstenv
jecxz
pop
std
aad
mov
sti
fcmovnbe
test
jo
test
das
and
imul
aam
ret
add
adc
cmp
xor
sti
data16
iret
inc
cmp
pop
push
xor
scas
sub
into
cmp
les
pop
xchg
xchg
pop
das
sub
les
lea
sub
mov
pushf
call
enter
mov
jmp
cdq
lock
shl
jmp
mov
jmp
enter
adc
sbb
div
cld
dec
cmp
fld
mov
ins
js
sbb
and
or
xchg
(bad)
(bad)
xchg
add
xor
lahf
sbb
or
std
fs
lock
adc
push
inc
leave
xchg
out
jmp
test
lahf
arpl
push
pop
mov
scas
movs
into
(bad)
jbe
retf
inc
pushf
movs
ret
dec
ficom
jae
fs
jmp
pop
mov
xchg
movups
into
or
sbb
dec
pop
mov
pop
mov
add
mov
add
stos
or
or
lea
mov
jg
pop
xchg
sahf
push
movs
sbb
and
inc
fld
cs
int
lds
ins
in
or
into
cmps
mov
xchg
jmp
fs
mov
and
cmp
in
out
cmc
lock
sar
inc
retf
xchg
mov
adc
pop
jnp
mov
push
xor
and
add
fst
ins
sti
and
retf
dec
jp
dec
fs
push
mov
jecxz
fwait
nop
lods
xchg
cmp
xchg
sbb
sar
mov
pop
sbb
ror
lods
jnp
add
jl
addr16
mov
jp
push
out
push
addr16
jl
xchg
push
sub
repnz
ret
retf
(bad)
ja
repz
add
arpl
inc
pop
xlat
fcom
inc
and
out
arpl
push
xor
aad
inc
imul
in
inc
mov
lahf
or
xor
dec
frstor
out
call
add
idiv
je
dec
ins
push
icebp
test
fs
add
push
stc
or
add
scas
and
cmps
sbb
xor
inc
push
and
stos
xchg
or
jmp
xlat
add
mov
daa
(bad)
loop
add
mov
adc
ret
sub
sbb
xor
add
loopne
jmp
stc
stos
or
lods
ss
fsub
mov
(bad)
jge
pop
or
jbe
xor
cmp
mov
cmp
and
ja
lods
div
inc
sbb
es
adc
cmp
loope
(bad)
mov
rcl
stos
xchg
stos
in
fsub
mov
inc
mov
push
adc
mov
shl
jne
push
in
jb
nop
mov
ds
fs
aad
mov
test
xor
pop
(bad)
pop
das
call
test
pop
sbb
fwait
and
fadd
aaa
aaa
repnz
xchg
(bad)
push
push
dec
int
xchg
outs
mov
ret
xchg
rcr
cmc
pop
popf
push
pop
retf
in
(bad)
ss
mov
mov
imul
js
in
int3
cdq
test
pop
outs
pusha
push
xchg
shl
aad
aam
sub
cwde
mov
lock
sub
or
es
aam
rol
daa
stos
mov
(bad)
sbb
out
xlat
cmp
sub
fcomp
lahf
mov
test
rcr
fist
cmp
dec
rcr
(bad)
pop
data16
lea
xor
xchg
leave
cdq
adc
imul
jmp
sbb
test
fistp
push
(bad)
(bad)
out
fdiv
ins
push
ds
cld
mov
cmp
fadd
pop
int
test
sbb
push
xchg
cmps
add
mov
inc
inc
mov
push
arpl
jae
dec
ss
push
mov
jb
iret
daa
cmp
fstp
fisttp
xor
popf
jmp
stos
push
adc
ret
pop
jmp
adc
jg
push
ins
dec
popf
add
(bad)
lock
fwait
inc
loope
jbe
imul
arpl
repnz
xchg
add
jne
adc
sbb
sbb
mov
pop
jbe
jp
and
push
dec
pop
mov
sar
cdq
xchg
inc
dec
xor
int3
dec
mov
mov
std
mov
scas
popf
mov
jle
push
sbb
rcr
xchg
cmp
daa
xchg
(bad)
mov
cmps
or
cli
shr
ins
mov
sub
xor
cdq
je
mov
mov
mov
jnp
test
call
push
sbb
fild
mov
or
or
xor
dec
out
jge
add
xchg
stos
push
(bad)
dec
retf
add
in
or
mov
or
shr
adc
cmps
js
push
pop
out
cld
or
push
xor
dec
lds
inc
(bad)
fiadd
add
dec
inc
sub
(bad)
dec
ins
pop
mov
aas
sub
add
leave
mov
out
xlat
mov
jg
(bad)
out
and
inc
movs
hlt
pop
and
push
loopne
movs
ss
jg
movs
movs
lods
imul
loop
push
out
or
in
jp
iret
lea
xchg
mov
dec
mov
icebp
fstp
pop
sbb
sbb
lahf
dec
sub
in
in
int
pop
or
jl
shl
add
fisttp
push
and
dec
loopne
add
jo
mov
mov
loop
sub
mov
imul
js
inc
push
clc
adc
mov
mov
fdivrp
out
aad
les
lods
cli
jo
js
dec
stc
add
sbb
ror
in
mov
pop
inc
scas
add
test
xchg
dec
popf
inc
cs
xor
dec
cwde
xor
je
fmul
pop
dec
std
addr16
xchg
adc
adc
ror
(bad)
call
aam
popa
push
movs
addr16
push
aam
(bad)
leave
lods
jge
fnsave
popa
or
pop
mov
leave
pusha
cmp
sub
nop
int3
pop
sub
(bad)
jmp
cmp
stc
mov
(bad)
cmp
dec
xor
adc
inc
std
mov
add
fmul
mov
mov
jecxz
daa
mul
push
addr16
(bad)
hlt
and
and
fdivr
cmps
inc
gs
ds
sub
enter
enter
(bad)
cmps
je
arpl
mov
push
in
pop
shr
inc
inc
sub
push
xor
ror
dec
xor
ror
xchg
gs
(bad)
je
dec
push
jl
pop
add
lds
mov
mov
mov
dec
fnstsw
or
loop
mov
mov
inc
js
or
out
outs
xor
dec
or
fadd
mov
jnp
loop
xlat
(bad)
mov
xchg
jae
jne
mov
lods
(bad)
cmps
xor
or
into
adc
outs
xchg
js
or
scas
xchg
mov
pop
sar
sub
cmc
mov
or
mov
daa
shl
cdq
push
cmps
mov
test
pusha
lock
mov
add
rol
or
jecxz
mov
inc
sbb
out
mov
int
test
mov
sbb
xchg
mov
dec
mov
sub
out
lods
cmp
cdq
mov
dec
vpmaxsw
mov
cmp
retf
dec
call
data16
jle
call
imul
dec
lods
sbb
push
jb
aaa
(bad)
xchg
push
stc
jmp
or
pop
or
inc
repnz
dec
add
cmc
xchg
popa
cmps
(bad)
data16
je
cld
(bad)
add
cmp
pop
jae
stc
nop
sbb
jmp
and
arpl
rep
into
dec
sbb
and
inc
adc
sub
fwait
outs
sbb
fild
add
loop
cld
and
stc
push
adc
add
add
dec
xchg
test
stos
mov
cmp
lods
pop
mov
dec
movs
(bad)
pushfw
adc
sbb
popf
popf
(bad)
hlt
ins
pop
mov
mov
dec
jmp
imul
div
int
sub
out
leave
cld
pop
lods
popa
add
daa
add
hlt
dec
(bad)
add
jg
(bad)
xchg
fistp
in
aaa
gs
adc
out
cld
sub
bound
mov
xchg
icebp
(bad)
push
mov
(bad)
push
in
adc
xchg
add
(bad)
(bad)
loope
test
cmp
pusha
push
adc
ret
push
push
ud0
mov
aad
and
out
mov
stc
sbb
ds
out
xchg
pop
ins
fiadd
dec
xchg
dec
fistp
lea
cmp
or
push
pop
daa
iret
nop
mov
data16
mov
sbb
dec
scas
in
out
in
out
push
or
push
jmp
cmps
es
sti
xor
xor
inc
and
jo
lods
pop
cwde
inc
sub
or
rol
test
cmp
jnp
test
iret
(bad)
cli
rol
int3
pop
(bad)
test
sub
push
push
lds
cmp
adc
pop
adc
jl
jle
lods
mov
retf
stos
dec
jmp
movs
in
cmc
ret
cwde
xchg
add
clc
mov
jno
ins
xchg
ins
aad
or
stos
mov
aam
loope
pop
add
xchg
enter
add
dec
jmp
cwde
push
fsub
je
outs
pextrw
lods
mov
sbb
repnz
mov
inc
cs
mov
push
jg
sbb
jno
int
push
das
cmp
stos
dec
xchg
hlt
adc
ficom
inc
inc
outs
inc
xlat
sub
and
adc
dec
add
hlt
xchg
popf
cmp
sbb
mov
cmp
imul
fiadd
je
out
sbb
mov
jnp
cmp
test
mov
aam
mov
jns
repz
push
sub
xor
mov
sbb
sub
mov
lock
cmc
imul
mov
(bad)
retf
add
xchg
mov
imul
enter
cdq
sbb
dec
mov
mov
out
push
(bad)
push
add
or
ret
cmps
mov
les
cmp
mov
xor
ret
mov
shr
pop
inc
lea
jg
aad
dec
pusha
in
add
ror
or
mov
in
int
loop
lahf
mov
int3
shr
inc
xchg
int3
mov
test
fild
mov
jecxz
push
pop
out
leave
in
or
xchg
push
mov
jle
les
in
mov
fisttp
dec
mov
inc
leave
sahf
inc
rcr
mov
sub
mov
pop
or
xchg
and
call
stc
out
ret
sub
arpl
dec
gs
arpl
hlt
dec
test
adc
call
sbb
in
nop
pop
cdq
outs
ss
inc
dec
push
bound
cli
sbb
or
rol
int
sub
and
mov
or
pop
jp
outs
out
mov
pop
test
ja
retf
mov
pop
dec
out
stos
movs
js
or
jmp
call
ins
xlat
pop
mov
and
int
xor
pop
dec
and
call
pop
jnp
push
add
xchg
cmp
(bad)
and
and
sti
rcr
dec
pop
mov
out
mov
mov
mov
xchg
cdq
sbb
pop
or
rol
dec
rol
out
lahf
xchg
sti
inc
rcr
xchg
out
enter
shl
stc
(bad)
mov
dec
jecxz
mov
dec
jmp
test
pop
js
or
jle
shl
dec
mov
in
cs
dec
inc
popf
xlat
push
in
dec
inc
mul
mov
ss
xor
fdivr
fwait
movs
data16
or
or
mov
pop
sahf
ins
dec
pusha
popf
and
or
stos
mov
or
push
and
shl
push
push
cdq
dec
jp
dec
cmp
xor
fprem1
mov
btr
call
add
ja
shl
sub
inc
xor
adc
int3
push
outs
jne
test
pop
sub
fnstcw
push
lods
mov
movs
xor
pop
mov
data16
sub
mov
sub
sub
(bad)
xchg
div
cmp
add
sbb
imul
stos
fidivr
into
scas
mov
sub
jne
push
cmp
xor
inc
dec
ret
push
push
outs
ret
out
sub
arpl
in
jge
loopne
sub
add
popa
sub
mov
loopne
add
adc
ret
aas
dec
or
rcl
sbb
jg
adc
jo
call
cwde
loopne
je
xor
jp
jecxz
cmp
push
xchg
je
rol
pop
xchg
xor
int
push
ss
push
(bad)
bound
leave
in
jnp
daa
stos
xor
sbb
movs
(bad)
xor
cld
dec
(bad)
sbb
ss
mov
sub
out
fidiv
scas
arpl
push
dec
jl
enter
xlat
pusha
jecxz
and
xchg
not
inc
jg
in
mov
repnz
fmul
adc
xor
cmps
inc
popf
cmps
mov
mov
cmp
ins
xchg
in
cdq
and
out
dec
daa
loope
out
(bad)
mov
mov
xchg
mov
ror
icebp
and
mov
cmp
loope
mov
xchg
cmp
(bad)
push
ficomp
dec
pop
xchg
in
leave
xchg
pop
cli
aas
out
and
pop
movs
jne
and
fwait
mov
fild
sub
js
inc
loope
nop
loop
out
icebp
or
push
shl
imul
xor
mov
and
js
inc
adc
shr
adc
or
jae
enter
or
push
xlat
mov
ror
pop
mov
xchg
js
(bad)
jo
shl
pushf
xor
inc
test
bound
movs
jmp
xlat
arpl
enter
(bad)
(bad)
push
jle
mov
mov
mov
jle
daa
or
cwde
cmc
xchg
cmp
js
lahf
outs
cmp
nop
mov
mov
je
loop
fdivr
add
adc
push
mov
and
js
ror
dec
mov
xor
add
mov
pop
pop
pop
or
mov
cmps
jo
mov
inc
nop
addr16
or
test
inc
or
nop
je
mov
inc
aam
sub
and
adc
and
stos
sub
dec
aas
rcl
retf
dec
sub
mov
mov
call
fdivr
push
fisttp
pop
daa
sti
and
aaa
add
pop
xchg
jl
mov
leave
mov
(bad)
or
ds
jno
lods
sub
sub
mov
cmp
(bad)
ins
fnstsw
mov
dec
mov
repnz
(bad)
in
mov
fnstenv
xor
push
fs
push
pop
pop
xor
js
mov
clc
adc
dec
cs
fld
in
(bad)
fsub
jnp
stos
imul
nop
pop
in
xchg
pop
fidiv
leave
mov
hlt
enter
aas
nop
inc
sbb
movs
out
mov
xor
and
arpl
arpl
mov
jmp
out
loopne
dec
cld
jmp
jp
shr
shl
sub
stos
retf
cmps
clc
mov
and
pushw
aas
sar
sub
adc
sub
gs
in
mov
cmps
push
xchg
fist
enter
loope
add
xor
mov
sbb
lds
in
jb
pop
jp
pop
cli
push
xor
pop
cmp
arpl
jae
lds
adc
sbb
test
test
xlat
push
dec
call
pop
sub
fbld
cmp
scas
cmp
mov
sub
fcom
add
adc
pop
inc
xchg
repnz
pop
push
mov
rol
dec
sub
push
aas
lds
adc
jae
xchg
sub
cmps
jns
shr
fst
data16
pop
out
or
xchg
and
mov
aaa
pop
lahf
mov
and
add
sbb
gs
adc
mov
in
push
sar
xchg
aad
imul
xchg
inc
icebp
mov
adc
loop
enter
cld
or
mov
lock
cmp
ss
aad
test
mov
test
dec
ds
mov
popf
call
leave
ror
dec
arpl
sub
jb
add
xchg
repz
sti
sub
es
out
mov
(bad)
ficomp
jnp
rol
pop
mov
dec
dec
outs
stos
sub
add
retf
cmp
outs
outs
or
or
shl
pop
push
sbb
sbb
aam
add
inc
out
xchg
inc
sub
add
stos
inc
mov
inc
out
pop
jmp
mov
mov
sbb
je
neg
and
mov
imul
xor
push
xor
mov
mov
iret
std
mov
xor
mov
dec
xchg
mov
fwait
ret
int3
dec
in
inc
std
fidiv
jae
nop
cmp
jnp
mov
(bad)
mov
xor
cdq
stos
dec
mov
jmp
adc
cmps
icebp
(bad)
movs
push
stos
imul
mov
aam
push
sahf
pop
icebp
cmp
xor
das
shl
and
into
xchg
call
mov
or
push
enter
jno
aaa
xchg
pop
push
outs
lods
jge
cmp
dec
imul
cmps
push
xor
xlat
aas
jg
or
pop
mov
push
pop
fldcw
mov
mov
cmps
xor
jecxz
rcl
jmp
fdivp
out
dec
inc
dec
lahf
gs
fs
pop
rol
rcl
add
ds
inc
sub
sbb
dec
and
test
sub
test
sub
(bad)
or
mov
fs
add
rcr
iret
mov
dec
jbe
out
lods
or
(bad)
mov
xor
cmp
jl
mov
pop
daa
test
ins
cdq
jge
sbb
scas
xlat
and
xchg
xor
inc
jmp
mov
push
push
mov
test
pop
test
push
sub
(bad)
div
ins
jne
(bad)
mov
fwait
sub
jnp
cmp
mov
iret
jle
and
loop
daa
jle
dec
ja
out
mov
jo
int
mov
and
popa
pop
mov
lock
stos
popa
jmp
push
mov
pop
int
pop
pop
sahf
mov
fs
xchg
pop
cmc
sbb
ja
(bad)
cmp
lods
jmp
dec
fcmovnb
jns
push
adc
or
dec
outs
jl
(bad)
mov
add
inc
add
(bad)
dec
imul
les
mov
jbe
das
xor
mov
(bad)
leave
inc
aam
lds
test
fwait
arpl
mov
sub
jb
mov
fnstenv
movs
push
(bad)
mov
stos
rcl
add
and
in
dec
or
inc
mov
in
inc
sbb
mov
sti
ds
and
and
add
pmullw
repnz
inc
push
sahf
pop
pop
xor
cmp
push
pop
inc
(bad)
stc
mov
jae
aad
adc
outs
pop
and
ja
mov
mov
test
mov
pop
fsub
aam
sbb
sbb
popa
fcmovnbe
adc
cmp
or
push
dec
shr
cmp
mov
cld
popf
xchg
add
rol
add
xchg
stos
add
jno
addr16
fcmovnu
inc
add
push
sahf
sti
mov
dec
mov
sbb
pop
adc
arpl
retf
in
and
fnsave
push
mov
xchg
mov
mov
out
pusha
inc
or
sar
or
mov
jp
je
int
adc
fnstsw
adc
in
jae
arpl
rcr
inc
mov
daa
xlat
xlat
(bad)
(bad)
or
jecxz
retf
inc
mov
nop
sti
aas
pop
mov
les
jg
test
adc
push
(bad)
lahf
cmps
out
push
add
or
adc
mov
xchg
aas
inc
test
sub
add
mov
arpl
mov
loopne
xor
xchg
dec
stc
push
ins
pop
adc
pop
shr
sbb
push
mov
es
cdq
scas
outs
(bad)
out
pushf
sbb
cs
sbb
loope
mov
jbe
mov
movs
stos
and
(bad)
push
shl
fisub
fs
and
stos
jp
je
sub
add
test
retf
mov
rcr
psllw
xor
pushf
inc
jno
in
adc
xor
dec
pop
inc
js
sub
test
mov
nop
fwait
mov
inc
lock
movs
sbb
dec
adc
jg
or
stos
pop
addr16
popf
add
sbb
into
jae
stc
pop
aad
jmp
(bad)
ins
stos
sar
sbb
push
adc
xor
hlt
jns
jecxz
adc
in
inc
out
or
in
stc
mov
xchg
movs
add
add
mov
test
les
addr16
or
inc
add
es
scas
mov
pop
dec
mov
dec
das
test
not
add
mov
rol
fidivr
xor
scas
inc
mov
xchg
sbb
iret
mov
and
xchg
into
pop
sub
inc
xlat
or
ja
mov
std
sbb
push
fs
add
outs
hlt
iret
scas
sbb
enter
fstp
rcr
std
pop
mov
js
push
jge
cmps
mov
or
sub
dec
int3
pop
int
push
mov
fidiv
mov
inc
cmp
daa
push
mov
push
inc
xchg
aam
or
sub
and
gs
pop
hlt
mov
les
mov
aam
inc
mov
adc
out
jbe
ins
daa
jmp
mov
mov
push
std
(bad)
outs
adc
dec
and
mov
nop
lods
in
push
cmps
and
cwde
out
and
out
jb
jno
pusha
test
jmp
rcr
inc
jo
test
les
push
mov
push
xor
mov
and
jg
mov
ret
movs
ins
xchg
fdivp
in
sub
(bad)
or
lock
push
(bad)
outs
lods
inc
js
rcl
jecxz
pop
add
sbb
lahf
cmp
pop
xchg
fiadd
call
mov
adc
sub
mov
add
idiv
add
fbld
or
cmp
aas
sub
mov
mov
and
and
push
addr16
dec
xchg
xor
dec
inc
repnz
ror
mov
push
lea
or
xchg
movs
and
sbb
aad
lods
mov
shl
dec
cld
repnz
ret
push
xor
and
sbb
aas
sbb
out
mov
popa
call
stc
and
shl
mov
jns
test
push
clc
add
cmp
sub
push
jb
imul
int
sahf
cld
test
fwait
sbb
pop
popf
dec
mov
ficomp
xor
clc
scas
inc
rcl
iret
push
int3
pushf
(bad)
(bad)
xchg
sbb
dec
adc
outs
cli
(bad)
or
sbb
xor
fcomp
jecxz
mov
jp
out
jo
mov
jne
test
into
push
add
add
xchg
iret
cmp
hlt
ret
test
ficom
shr
sahf
and
cmps
add
scas
mov
int
test
test
sahf
lahf
mov
scas
leave
adc
cmp
loope
(bad)
mov
sub
add
gs
stc
jae
(bad)
adc
or
daa
popf
cmps
or
fwait
cmp
lds
sub
int3
jmp
sub
in
call
or
cmp
movs
add
shl
add
mov
mov
rcl
jge
fiadd
sahf
and
sub
pop
mov
xchg
jns
pusha
bnd
xchg
sbb
shl
inc
mov
in
popa
or
pop
dec
sbb
push
stos
jb
lods
xchg
push
mov
ret
xchg
pop
or
pop
xor
adc
xchg
cmps
out
fsubr
or
cmc
in
popa
dec
ins
and
scas
mov
mov
mov
sub
and
pop
pop
xchg
or
pushf
(bad)
mov
enter
jge
jg
adc
push
nop
jg
int
pop
in
iret
clc
clc
or
inc
inc
add
jl
inc
push
xchg
push
daa
movs
xchg
sbb
in
jmp
adc
xlat
push
pop
mov
push
aad
outs
mov
pop
sub
fwait
mov
repz
(bad)
xor
sbb
(bad)
xchg
lods
push
out
adc
(bad)
sub
into
xor
mov
and
ss
out
adc
mov
test
sahf
sbb
and
stc
sub
popa
jmp
dec
(bad)
inc
addr16
rcr
popa
mov
pop
adc
push
pop
arpl
into
mov
mov
stos
or
inc
fistp
and
inc
cmp
dec
pop
adc
outs
repz
test
les
outs
jmp
mov
sub
xchg
mov
sbb
xor
mov
sub
(bad)
fsub
icebp
repz
icebp
mov
cmp
data16
mov
aaa
push
adc
jg
loopne
push
(bad)
fist
adc
inc
dec
cmp
ins
adc
int3
push
fnstcw
mov
enter
or
(bad)
push
ret
jae
dec
mov
xor
push
scas
jno
sar
mov
mov
mov
call
mov
aad
lock
scas
sub
call
jge
mov
xor
pop
loopne
mov
les
cmps
xchg
and
sub
imul
cmp
ins
sub
test
pop
cmp
xor
es
cmps
mov
movs
and
mov
mov
push
icebp
(bad)
xchg
inc
pop
dec
pop
pop
aaa
jecxz
test
pop
and
pusha
and
ss
mov
mov
out
jbe
dec
aas
ja
and
and
or
inc
mov
ins
out
iret
dec
inc
fsubr
sub
push
imul
out
adc
pop
jmp
xchg
fnsave
pop
or
xor
xchg
sub
dec
or
sbb
xor
movs
sub
mov
int3
jae
out
pusha
and
cwde
fnstenv
dec
push
sti
inc
retf
and
mov
jae
jl
adc
jge
mov
hlt
in
retf
sub
dec
test
popf
test
in
scas
add
inc
xchg
int
mov
cmp
mov
fsub
inc
mov
int
xchg
jo
mov
fstp
int
adc
dec
xchg
sub
lahf
movs
sar
test
push
xor
ficomp
shl
add
repz
ficomp
outs
inc
in
mov
addr16
ja
or
out
mov
xor
bswap
mov
sub
sar
pop
(bad)
gs
movs
sub
xchg
movs
ja
pusha
scas
or
pushf
xor
cmp
(bad)
rcr
xchg
fcmovnu
and
xchg
cdq
push
in
cmps
jae
sbb
push
ror
pusha
and
arpl
inc
(bad)
push
xor
jb
fdivr
adc
xchg
vmovaps
imul
lds
popa
icebp
push
xlat
out
mov
enter
mov
mov
aam
mov
mov
out
sub
into
xor
pop
mov
scas
dec
xor
xor
pop
call
lahf
lock
xlat
mov
je
mov
adc
shl
sub
stos
mov
inc
cli
test
out
add
adc
pop
inc
add
sub
aam
popf
clc
cmp
push
or
in
dec
imul
push
out
inc
jns
jl
pusha
pop
inc
pop
push
imul
loop
loope
and
mov
fwait
jns
push
inc
shr
imul
mov
sub
jno
pop
dec
(bad)
stc
inc
cmp
xchg
ficom
xchg
std
mov
add
dec
jb
push
pop
push
adc
cmps
out
cmp
dec
xchg
and
lahf
xchg
mov
mov
inc
sub
fcomp
push
jp
push
sub
push
and
and
aas
xor
call
ins
(bad)
push
jge
push
mov
into
xor
or
or
inc
cmp
xchg
int3
mov
or
and
lock
jp
stos
popf
pop
dec
jmp
outs
mov
lods
dec
mov
sbb
push
inc
pop
pop
add
mov
mov
lahf
sub
cld
pop
jno
mov
and
ds
cs
sbb
mov
imul
pop
jl
sub
call
push
outs
mov
mov
fisubr
push
call
aaa
jo
dec
xchg
sbb
or
jbe
mov
jmp
push
xor
out
fbld
push
adc
xor
sbb
inc
mov
ret
arpl
jbe
mov
pop
add
not
out
inc
pop
aas
rol
aam
or
jb
mov
retf
adc
(bad)
sbb
mov
mov
push
(bad)
test
fmul
sahf
jnp
xchg
rcr
xor
jp
sbb
loope
add
jno
fisttp
ins
mov
jno
mov
mov
(bad)
sti
pop
xchg
je
xchg
push
jmp
xor
xlat
jle
retf
pop
mov
aaa
ds
fwait
adc
outs
or
or
nop
ss
scas
test
mov
pop
cmps
xchg
jle
cmp
mov
imul
pop
xor
fild
fcom
xchg
jo
jo
dec
call
ficomp
push
aaa
push
and
es
test
jb
dec
pop
cmc
mov
sar
and
std
nop
leave
mov
pop
or
and
leave
pop
bound
cmp
push
push
adc
pop
pop
dec
cwde
push
das
mov
jge
ret
sub
mov
push
cli
shl
xchg
and
sbb
sub
adc
sbb
sub
ins
sub
inc
cmps
push
adc
push
test
enter
jmp
add
(bad)
xchg
scas
call
in
sbb
mov
es
mov
js
xchg
fcmovnu
in
or
jge
pop
fnstenv
xchg
repnz
pop
mov
jecxz
push
adc
not
jecxz
hlt
ficom
inc
frstor
cmp
fmul
cli
push
xchg
shl
mov
and
mov
stc
dec
sub
ins
sbb
enter
dec
cmps
in
cmp
mov
inc
popf
sbb
lock
fnstenv
dec
inc
sub
cwde
mov
in
jnp
sbb
ror
jecxz
(bad)
push
cmp
jne
pushf
ins
mov
adc
out
clc
fldenv
out
jmp
mov
mov
iret
retf
mov
retf
addr16
idiv
cld
and
mov
mov
sub
dec
cwde
aam
loope
cs
ret
push
or
cmp
adc
xchg
push
mov
adc
(bad)
ins
das
(bad)
mov
cmp
or
imul
dec
xchg
and
es
cmp
loopne
mov
popf
mov
push
xchg
add
mov
cvtpi2ps
pop
call
mov
cmps
cmp
jmp
inc
mov
push
push
sbb
mov
jl
mov
stc
mov
js
xor
popa
movs
movs
es
or
adc
and
sbb
inc
dec
inc
cmp
pop
push
pop
fcomi
jmp
adc
push
cmp
inc
pop
push
dec
mov
in
dec
push
mov
and
mov
aad
inc
cmp
shl
lods
mov
hlt
shl
xchg
xchg
sbb
data16
xor
and
pop
fistp
test
repnz
mov
jecxz
ret
pop
mov
mov
fwait
cs
sub
stos
das
inc
pop
jne
pop
pop
pop
ja
and
mov
jl
cwde
mov
ror
xchg
dec
(bad)
ret
jmp
dec
adc
cld
bnd
sub
rol
outs
aad
clc
ficomp
jne
scas
add
int
into
repnz
jg
icebp
test
push
mov
add
mov
(bad)
adc
jbe
xor
popf
xor
push
stos
push
xchg
jbe
in
jne
pop
mov
and
mov
outs
lods
jge
inc
add
and
cmp
adc
fdivr
cmp
sub
popf
mov
mov
sub
loop
sbb
movs
mov
pushf
sbb
mov
sub
cmp
sub
add
shl
xor
test
ficomp
(bad)
cmps
xor
xchg
je
mov
mov
fs
stc
lock
iret
adc
sti
mov
xor
mov
inc
xchg
mov
inc
mov
jnp
cdq
jno
inc
add
fmul
lds
mul
sbb
arpl
dec
pop
cmp
dec
inc
(bad)
pop
cld
dec
mov
mov
cmps
add
repnz
test
jno
psubusb
gs
stc
pop
inc
sub
or
fsubr
cmp
xchg
pop
ss
dec
jbe
xlat
dec
scas
sbb
in
mov
fchs
jb
pop
dec
jle
mov
sbb
ret
sbb
gs
leave
repnz
xchg
ret
je
and
push
test
ret
inc
shl
adc
mov
shl
mul
lods
iret
push
xor
push
pop
dec
push
nop
mov
ins
jns
(bad)
adc
mov
(bad)
mov
cmp
adc
addr16
inc
(bad)
daa
pop
xor
jle
add
ins
out
xor
(bad)
cmova
push
(bad)
xchg
adc
fwait
sahf
fnsave
xor
lods
daa
and
int3
ror
inc
push
mov
ja
in
inc
jbe
sbb
xlat
addr16
sub
push
jbe
cmc
in
sbb
ja
fild
sahf
bswap
and
dec
and
xchg
mov
repnz
jmp
pushf
jmp
sub
ret
jmp
jmp
aam
adc
mov
jle
jmp
lods
mov
out
loopne
lea
mov
movs
in
sbb
popa
lods
dec
cmc
jl
iret
int3
add
imul
fbld
dec
sub
sti
push
mov
shl
dec
push
mov
jle
adc
in
and
inc
and
mov
pop
xor
xchg
mov
(bad)
sub
repz
sahf
adc
mov
ja
int
inc
jmp
into
dec
ds
addr16
imul
mov
mov
add
int3
jmp
sub
add
push
push
push
mov
add
push
fsubp
in
fs
mov
inc
dec
lds
inc
xchg
cmp
(bad)
(bad)
push
ret
shr
shl
xchg
or
test
mov
(bad)
retf
aad
in
jne
push
out
aam
scas
sbb
les
xchg
movs
cmp
mov
inc
mov
sub
jg
call
push
int
cdq
inc
aas
xchg
fimul
(bad)
fwait
ins
and
cmovg
loop
movs
lock
and
in
fidiv
push
lods
sbb
adc
and
int3
push
dec
mov
mov
dec
pop
enter
cli
mov
icebp
push
movs
stos
ficomp
or
popa
xchg
jae
xchg
daa
and
jp
adc
fdiv
push
xor
ins
mov
out
sbb
sub
and
daa
xor
inc
sahf
retf
jbe
mov
dec
mov
add
dec
dec
cwde
jmp
out
int
stos
and
and
in
xor
jno
mov
enter
pop
arpl
sub
test
jl
das
fidivr
push
adc
push
mov
enter
aad
adc
and
pop
xchg
out
and
add
or
sbb
xlat
and
fstp
aaa
cmp
xor
into
scas
xor
and
cmp
xchg
dec
ins
pop
sti
mov
jl
mov
sbb
pop
xchg
pop
mov
pop
mov
nop
popf
loope
mov
cmp
shl
add
dec
jae
and
push
fld
loope
sbb
sahf
cmp
cmp
add
aas
out
jb
pop
push
aad
push
or
and
jecxz
bound
mov
jo
ins
out
push
xchg
sti
fsub
pop
xor
adc
out
xor
adc
mov
pop
das
xchg
sub
jns
adc
jmp
fild
pop
xchg
cmp
adc
mov
test
add
adc
sub
pop
call
adc
push
data16
fs
sub
push
inc
jge
addr16
test
inc
movs
leave
add
cmps
movs
add
mov
and
or
sub
inc
aas
inc
xchg
or
pop
sbb
dec
xchg
test
push
cmp
mov
fimul
sub
push
xchg
into
popa
dec
jmp
push
sub
lods
lahf
sub
xchg
repz
sub
and
push
mov
arpl
rol
cmp
scas
add
fld
xor
mov
in
ss
fdiv
movs
or
jg
jmp
ins
push
adc
pop
adc
pop
or
xor
int3
or
pop
mov
jmp
das
ins
test
js
repz
lea
std
fucom
and
outs
aad
mov
and
mov
cld
dec
out
jae
scas
jo
dec
nop
and
pop
mov
add
clc
mov
xor
add
jle
rol
mov
jnp
jmp
(bad)
pop
mov
mov
push
add
add
out
mov
sar
or
mov
cmps
xor
pop
js
sub
sub
movs
cdq
cmps
pop
dec
outs
int3
jne
fcom
jb
mov
hlt
mov
mov
lock
daa
push
mov
in
push
mov
sar
lock
push
push
xor
inc
fidivr
or
sub
mov
(bad)
sbb
fild
daa
mov
push
into
push
push
mov
xor
fild
and
loope
popf
jnp
(bad)
xor
neg
push
cs
popa
jno
mov
es
gs
lock
mov
clc
adc
mov
popa
xchg
mov
dec
lods
arpl
lods
cld
pop
sti
lods
adc
in
jnp
bound
or
dec
clc
and
sub
inc
mov
call
into
or
adc
mov
bound
sub
xchg
jg
dec
lea
fcom
mov
cmp
inc
xor
mov
inc
jg
jg
out
test
xchg
sub
stos
push
icebp
jmp
int
mov
dec
xor
aas
xor
imul
and
and
ror
inc
cmps
or
adc
jle
inc
imul
pusha
mov
div
addr16
inc
hlt
push
out
scas
les
dec
cli
cmp
jp
cli
test
retf
or
xchg
rcr
shl
ror
pop
shl
mov
push
xor
sub
jle
adc
pop
dec
mov
mov
enter
cmp
pop
xchg
pop
movs
push
add
xchg
mov
std
(bad)
mov
mov
jmp
fcmovb
test
movs
stos
mov
mov
jo
adc
(bad)
out
xor
xor
je
sbb
sti
jo
mov
jmp
inc
ror
fistp
daa
mov
adc
stos
push
fwait
jl
push
scas
push
push
dec
mov
or
sar
and
sub
lods
mov
cld
and
mov
lods
movs
push
dec
xor
sub
test
out
or
adc
(bad)
cmp
or
movs
(bad)
pop
jnp
popa
and
fcom
jg
pop
dec
pop
mov
sub
sub
fs
push
imul
in
pop
dec
retf
xor
(bad)
adc
aad
pusha
js
aaa
cmc
dec
scas
push
dec
aaa
test
add
mov
dec
nop
mul
aam
lods
(bad)
xchg
aas
add
cmps
and
push
sbb
sbb
sub
out
fdiv
cmp
cmp
xchg
daa
in
mov
add
das
xchg
pop
fnsave
(bad)
push
scas
pop
mov
std
std
mov
(bad)
rcr
inc
cmps
mov
out
sbb
pop
pop
mov
mov
mov
cmp
add
dec
jge
or
int3
enter
stos
xchg
sahf
jl
fneni(8087
mov
inc
dec
out
(bad)
int3
lock
or
in
jno
jecxz
pop
mov
repz
or
imul
cdq
aas
(bad)
cld
and
imul
shl
xor
ins
lahf
cmps
fldenv
jb
in
and
out
mov
jge
lea
loopne
retf
sub
ret
in
sahf
jl
pop
jge
xor
enter
leave
popf
aam
stc
leave
in
mul
mov
cmp
sbb
(bad)
fwait
push
out
lods
cmp
jns
cwde
nop
push
lods
shr
lahf
xor
push
pop
imul
jmp
sub
inc
imul
sbb
adc
cmp
repz
addr16
pusha
jb
outs
dec
inc
imul
jae
inc
rcr
jge
push
or
sbb
rcl
in
mov
test
xor
mov
imul
test
in
xchg
pcmpgtb
fsubr
adc
sar
(bad)
cwde
daa
xlat
push
sahf
dec
mov
mov
inc
mov
jo
outs
out
loop
mov
xchg
loope
add
adc
or
sub
es
ja
mov
std
(bad)
arpl
int
ss
jecxz
int
aam
retf
fiadd
loopne
pusha
call
xchg
sub
out
fcmove
add
cmc
sub
jp
mov
or
loope
add
iret
xchg
loopne
xor
(bad)
cmps
or
shl
mov
test
sahf
jmp
jmp
retf
lahf
call
jne
jg
xchg
pop
out
xchg
aas
repnz
push
test
xor
pop
jnp
scas
xchg
cmp
mov
fisttp
ins
pop
(bad)
cmps
mov
push
stos
test
pop
push
xor
ins
adc
mov
pusha
out
jl
cmps
out
addr16
adc
out
js
inc
sub
ret
movs
cmp
aas
mov
dec
cmc
lods
outs
es
cmp
jmp
add
gs
or
fistp
or
inc
jb
xor
out
cdq
mov
loope
out
jmp
or
ss
cld
hlt
(bad)
push
push
scas
je
pop
ret
je
push
sub
bound
pusha
dec
xchg
test
cmp
ja
(bad)
jl
cli
call
(bad)
dec
loopne
fcmovbe
clc
jae
pop
call
mov
adc
seto
pop
push
push
inc
mov
sub
inc
faddp
fucom
jne
jae
sbb
scas
pop
loope
xor
cdq
out
les
scas
jg
add
jae
xlat
pandn
jge
and
lea
mov
jb
popf
stos
jnp
xor
mov
jl
out
sub
pusha
je
(bad)
hlt
mov
inc
loop
iret
clc
xor
fwait
sub
push
cmp
sub
mov
dec
pop
sbb
and
ds
pop
sub
retf
call
mov
inc
fs
sbb
dec
retf
sbb
sbb
dec
movs
sub
sub
push
movs
add
aaa
xchg
mov
out
lea
icebp
icebp
movs
shr
jbe
mov
mov
push
dec
add
jns
cmp
popf
cdq
fucomp
in
adc
or
call
xchg
data16
imul
repnz
rol
or
jp
xchg
popa
push
inc
inc
fld
sbb
aam
jns
cmp
cs
mov
add
fisub
cdq
or
jge
rcl
cmp
retf
push
jl
fbld
push
into
das
push
and
sbb
test
test
imul
mov
std
jb
dec
xor
adc
push
fwait
cwde
or
or
jae
mov
dec
inc
jmp
fnstcw
gs
push
popa
cmp
add
sbb
ja
fld
and
out
inc
add
rcr
sbb
xchg
or
mov
test
push
sbb
pusha
scas
int3
mov
psraw
and
pushf
cmp
dec
sbb
pop
xchg
data16
jb
mov
mov
shr
cmp
and
mov
sbb
popf
cmc
into
sbb
xchg
(bad)
adc
scas
xchg
sbb
(bad)
(bad)
mov
arpl
outs
loope
jg
shl
sub
mov
aam
call
int3
pop
xor
and
in
in
frstor
add
inc
int
add
mov
push
ss
pop
mov
xor
mov
imul
stos
or
in
jne
iret
pop
cs
imul
adc
sub
in
fcmovnu
popf
lods
pop
jl
dec
pop
jg
mov
popa
sti
mov
xor
shr
call
mov
cmp
inc
fwait
shl
fs
imul
add
pusha
test
mov
inc
sbb
repnz
mov
test
push
sti
repnz
or
jle
fnsave
stos
mov
cli
xchg
popf
mov
add
shl
xchg
dec
int3
sahf
cmp
add
je
les
fnstsw
push
loopne
(bad)
xor
push
fidiv
xor
shr
gs
pushf
daa
ret
jp
dec
dec
(bad)
in
ror
retf
lahf
pop
je
nop
jl
mov
inc
retf
pop
(bad)
pop
scas
out
sub
test
mov
leave
dec
rcr
call
stos
cmp
sub
out
aaa
dec
(bad)
xor
xor
stc
jnp
fisubr
xorps
scas
jb
mov
xor
xchg
(bad)
inc
pop
pusha
push
ins
pop
sub
xchg
test
lds
push
bnd
xchg
xchg
das
int
int
pop
sahf
pop
or
sbb
shr
fidiv
xchg
in
loop
push
ja
daa
mov
inc
retf
mov
xlat
mov
(bad)
cmc
into
mov
aaa
mov
mov
xchg
gs
xor
cmp
in
pushf
add
call
(bad)
not
xchg
sbb
push
scas
xchg
idiv
xor
in
mov
or
inc
mov
js
aad
mov
je
cdq
arpl
out
xchg
fstp
mov
and
jl
sbb
mov
and
sbb
and
jmp
dec
retf
pop
inc
cmps
test
xor
push
shr
or
int
mov
xor
mov
inc
enter
pop
das
ficom
out
loop
sbb
aam
bound
mov
add
push
into
cdq
xor
fs
inc
xor
jae
repnz
out
or
mov
(bad)
clc
fisttp
aas
adc
mov
iret
add
es
xchg
or
add
test
in
lds
je
and
pop
sbb
xchg
xor
ins
(bad)
popa
and
movs
pushf
xor
mov
cld
mov
push
fist
cmp
sub
pop
cmp
push
pop
inc
jle
and
mov
rcl
inc
cmp
fld
sbb
lods
in
fcomp
out
or
enter
ret
dec
cli
push
push
adc
leave
jne
xchg
loopne
sbb
adc
fsub
xor
mov
pop
clc
test
imul
rol
out
cli
sub
cld
scas
jbe
dec
fdivp
or
aad
leave
sub
jl
div
pop
bound
leave
rcl
mov
call
jg
mov
mov
loopne
ins
xor
xchg
aad
(bad)
sahf
loopne
scas
inc
rol
pop
jl
sub
mov
xor
int3
mov
inc
add
and
or
inc
adc
mov
lods
sub
xchg
xor
aad
out
lock
sbb
cmc
add
mov
push
lods
xor
and
sbb
cli
mov
ret
and
jmp
pop
imul
inc
sub
xchg
sub
mov
repz
jae
pop
cs
sar
cli
outs
mov
retf
sahf
not
xchg
dec
mov
dec
ins
das
mov
das
xchg
adc
repnz
(bad)
icebp
ins
mov
sbb
popa
adc
retf
mov
out
retf
test
ins
retf
ins
ret
mov
movs
or
mov
fsubr
jmp
add
cmp
push
xchg
std
enter
enter
sub
lea
add
inc
jmp
cmps
push
in
pop
sub
mov
test
fucomi
cmps
xlat
and
mov
es
lock
std
pop
push
cmp
into
push
adc
sub
push
xchg
cli
jno
mov
mov
pusha
lods
pop
mov
or
stos
xchg
and
cli
fdiv
adc
lods
push
call
loopne
mov
fild
and
test
sbb
sub
inc
std
xchg
out
xor
test
(bad)
push
mov
sbb
cmc
aaa
imul
cmp
loop
add
cmp
popf
push
hlt
std
mov
data16
ret
push
sub
dec
pop
cwde
jno
cmp
xlat
into
dec
push
jns
jle
dec
add
test
mov
in
sub
inc
iret
pop
and
jmp
inc
mov
sti
xlat
push
mov
or
inc
inc
jecxz
push
sbb
push
pop
movs
aaa
ins
mov
retf
bound
jno
fwait
mov
(bad)
cmp
fmul
div
sub
push
pop
jl
xchg
jb
add
out
mov
shr
inc
and
aam
mov
pop
dec
arpl
or
or
aas
and
sub
fist
inc
dec
idiv
repz
jnp
pop
xchg
xlat
and
icebp
pop
(bad)
jae
cmp
jg
movs
lea
shr
mov
or
push
out
mov
fcomp
mov
dec
dec
out
mov
dec
inc
enter
cmp
call
cmp
mov
cmp
aas
out
es
mov
ss
xchg
stos
dec
(bad)
mov
int
fstp
dec
repz
adc
and
push
inc
rol
mov
ret
ins
xor
or
loope
inc
pop
aaa
sbb
cmp
jp
aaa
in
inc
movs
jmp
fbstp
and
scas
scas
sbb
pop
iret
inc
sub
cmp
inc
movs
mov
mov
aam
add
lods
xor
fcmovnb
inc
lahf
sub
mov
popa
or
outs
fstp
loopne
inc
test
pop
and
pop
mov
arpl
mov
clc
xchg
test
clc
push
(bad)
jns
and
xchg
sbb
sub
and
sub
jp
and
in
push
and
or
and
jmp
pop
mov
lds
aam
scas
push
mov
mov
xor
dec
sbb
jnp
pop
jno
xchg
mov
mov
inc
sahf
sub
out
or
mov
mov
jmp
shr
retf
loope
xlat
xchg
in
(bad)
(bad)
aas
cmp
fnstcw
int3
mov
sub
dec
sub
mov
dec
shl
outs
cli
daa
mov
gs
pop
mov
dec
or
jne
enter
jmp
inc
sub
adc
addr16
aad
xor
hlt
mov
ins
stos
daa
add
add
and
pop
xor
sbb
in
xor
cdq
dec
out
mov
scas
in
and
inc
stos
pop
jnp
mov
mov
and
jae
xchg
adc
adc
arpl
leave
inc
jbe
xor
cld
mov
cmp
ficomp
(bad)
mov
mov
adc
cmp
mov
push
mov
daa
shl
cmp
cli
xchg
push
sub
cmp
dec
outs
cmp
sub
aas
dec
mov
(bad)
out
pop
mov
fs
jecxz
shr
clc
dec
mov
ret
xor
pusha
test
jmp
mov
neg
out
dec
mov
cld
sub
clc
repz
popa
fist
mov
stos
out
out
jge
lea
aas
sub
pop
lods
add
push
daa
inc
xchg
push
rcl
ret
(bad)
and
jge
or
jecxz
stos
jl
test
cdq
loopne
imul
sbb
cli
push
sar
ins
mov
jb
xor
ret
(bad)
leave
sub
mov
cmps
into
adc
ins
stc
test
xor
jne
fstp
dec
xor
inc
clc
sar
mov
lods
idiv
sub
push
xchg
cmp
int
xchg
out
shl
(bad)
les
aam
dec
fidiv
dec
sbb
(bad)
in
jb
adc
xor
mov
leave
cs
repnz
test
xor
shl
cmc
cmp
loopne
stos
in
int3
dec
stos
unpcklps
mov
mov
scas
pop
jmp
pop
fsub
and
adc
xchg
add
clc
adc
pop
retf
or
aaa
in
pop
and
outs
pop
lea
inc
mov
add
lods
leave
daa
jno
sbb
add
inc
retf
adc
jae
xchg
rcr
call
loopne
fcmovnu
popf
mov
jne
shl
(bad)
js
add
adc
(bad)
fdecstp
xchg
arpl
mov
shl
repz
jle
neg
call
aaa
bound
jle
call
les
inc
(bad)
shl
add
aaa
rcl
cmp
popf
retf
or
push
mov
data16
test
retf
or
and
emms
hlt
pop
outs
pop
cdq
out
mov
and
cmp
pop
into
aad
inc
cmp
enter
pop
push
popf
rcl
inc
ret
jmp
sbb
push
clc
ret
add
in
dec
jb
mov
or
mov
aas
dec
add
popa
mov
shl
jnp
sti
call
cdq
bound
dec
pop
pop
pusha
jmp
sub
fs
cmp
cmp
jo
pop
or
lahf
int
push
jo
inc
inc
sub
out
fmul
mov
cwde
in
push
xchg
jno
pop
lds
mov
scas
sti
mov
sbb
sbb
sti
sub
or
xlat
gs
lods
xchg
sub
cmps
xor
cmp
dec
ins
sar
sub
and
cmovl
push
push
jecxz
cdq
xor
jecxz
fwait
mov
mov
cmp
bound
mov
aaa
imul
cmp
xchg
out
aaa
dec
add
(bad)
add
fprem
cmp
data16
cmp
ds
lea
jle
mov
dec
bound
fsub
inc
jne
jne
sbb
jns
dec
dec
ins
adc
call
mov
push
ror
xchg
mov
cmp
add
pop
ds
adc
lods
inc
(bad)
aam
xlat
fst
xchg
cli
call
mov
sub
retf
xchg
(bad)
cmp
shl
jmp
adc
icebp
adc
sub
or
call
inc
rcr
ja
aaa
jp
xor
mov
aad
popa
push
jmp
addr16
out
pop
sar
repnz
movs
sub
popf
int3
shl
cmp
push
xchg
mov
xor
arpl
xchg
jmp
inc
neg
or
mov
test
mov
test
(bad)
and
xchg
dec
pop
push
add
fdiv
rcr
jo
xchg
inc
cli
mov
sti
xor
push
shl
mov
xchg
xlat
adc
in
sbb
hlt
scas
dec
pop
pusha
loop
sbb
adc
ret
and
repz
shl
adc
or
cmp
lea
mov
into
xchg
aam
ret
jl
(bad)
stos
je
dec
into
and
and
out
pop
gs
cmp
cmp
pop
adc
(bad)
cs
rcl
jmp
sbb
xor
mov
xchg
mov
out
fsub
push
adc
into
sbb
mov
sub
cmp
pop
paddd
popf
popf
mul
or
mul
dec
adc
and
cmp
pop
xor
jns
jg
add
dec
sbb
cmp
fwait
pop
mov
pop
jo
or
inc
fs
push
int3
inc
cmp
lods
mov
jge
imul
into
fidivr
cli
je
and
pop
xor
dec
aas
or
and
dec
cmp
inc
mov
or
iret
sbb
inc
movs
dec
xchg
xchg
or
xchg
push
inc
lds
aam
xchg
mov
xor
inc
into
lds
jge
dec
rcr
and
in
pop
cs
movs
push
xor
pop
push
fld
paddw
lahf
dec
inc
test
cmc
sbb
adc
push
mov
rcpps
dec
dec
js
sub
inc
xchg
adc
lahf
pop
je
cmc
cmp
(bad)
(bad)
cld
rol
mov
aas
pop
cmp
aad
adc
jg
imul
inc
sbb
movs
mov
stos
pop
jmp
les
mov
cld
repz
mov
ret
dec
std
xchg
xchg
ss
ins
push
sub
xchg
xchg
mov
aad
mov
test
dec
ja
mov
xchg
push
inc
repz
cwde
ja
stos
sub
lods
scas
jno
retf
pop
dec
pop
inc
pop
sub
mov
test
pop
imul
jns
inc
add
pop
mov
js
imul
aad
cmc
jmp
mov
push
(bad)
fnstsw
lds
ins
psadbw
pushf
jp
xchg
jmp
aam
mov
inc
popf
je
or
pusha
sar
(bad)
pop
daa
xor
pusha
loopne
cwde
push
clc
jb
aaa
(bad)
adc
push
push
daa
push
les
push
(bad)
mov
(bad)
pop
popf
adc
add
(bad)
sbb
lds
jle
xor
add
test
sbb
sub
sahf
mov
inc
ss
arpl
xor
xor
jb
and
push
xchg
inc
arpl
imul
stos
in
ret
out
xchg
jl
cli
jle
push
lods
inc
daa
dec
cmp
cmps
ror
xchg
ja
(bad)
mov
dec
jne
jne
outs
dec
das
jno
aaa
or
mov
outs
rcr
inc
and
ror
push
push
add
sar
rcl
jo
das
jbe
fcomp
adc
sub
cmp
andnps
pushf
mov
sar
sar
(bad)
push
addr16
sti
test
mov
xchg
outs
sub
bound
lea
pop
sbb
pop
jmp
ds
jle
and
(bad)
jecxz
int
ins
jbe
hlt
lods
clc
sub
mov
rcl
stos
pop
cmp
xchg
pop
xor
pop
jne
add
retf
pop
shl
xchg
aas
mov
jno
push
xor
mov
js
mov
sub
cmps
jg
inc
and
inc
dec
in
ds
dec
lahf
icebp
enter
mov
sbb
xchg
xor
inc
outs
popf
enter
es
retf
pusha
dec
add
add
push
sub
cld
shr
mov
test
outs
sub
mov
lods
add
das
sbb
push
fdivr
dec
jmp
test
mov
cli
mov
push
aaa
jne
shl
add
mov
fisub
add
outs
sub
push
adc
bound
and
add
test
call
xor
jmp
cmp
ss
sbb
mov
mov
and
or
movs
dec
imul
cmc
js
mov
push
loope
cli
adc
add
jmp
cmp
and
mov
movs
pop
sub
test
lahf
cmc
imul
xlat
add
mov
inc
and
out
or
cmp
push
xchg
fisttp
push
mov
mov
push
jle
mov
sub
or
loop
sub
or
jae
js
and
mov
shl
adc
push
aas
pop
jns
push
out
outs
pushf
popa
xchg
sub
pop
jno
outs
add
out
xchg
fimul
dec
and
pop
sbb
mov
pop
mov
xchg
jne
sti
je
retf
xchg
pop
sub
(bad)
hlt
das
clc
stos
sub
jae
pop
dec
adc
les
mov
pusha
ins
test
ret
aam
mov
repz
mov
cwde
inc
cmp
mov
ds
sbb
dec
xchg
loopne
pushf
imul
loop
push
lahf
add
sbb
out
lahf
jp
or
ss
rcl
mov
sbb
inc
cmps
dec
fisubr
push
jmp
jae
cs
or
call
cld
ds
mov
fidiv
mov
or
inc
push
jl
pop
stos
mov
or
mov
fcomp
ds
push
xor
arpl
push
sub
push
ins
sub
sti
(bad)
dec
rcr
sub
data16
das
xchg
mov
push
sbb
sahf
push
sbb
pop
xchg
test
das
add
fsubr
daa
out
cs
and
sub
ins
fadd
mov
mov
inc
icebp
xor
xchg
push
push
ror
dec
jo
mov
and
push
mov
repnz
mov
mov
sub
fmul
push
sub
hlt
rcl
lods
movs
out
iret
jno
nop
jp
test
out
push
push
jmp
push
mov
inc
arpl
push
sub
jnp
in
xchg
jnp
jns
call
enter
inc
xchg
and
movs
sbb
inc
push
pop
pushf
or
jecxz
pushf
inc
dec
clc
xchg
jno
(bad)
cli
push
cli
add
test
nop
adc
pop
in
jg
movs
cmovs
hlt
mov
ss
dec
and
hlt
pop
xchg
mov
cmp
add
test
shr
shl
pop
sub
or
mul
mov
push
test
sti
dec
retf
in
cld
add
ss
sbb
dec
movs
test
mov
sub
in
fdivr
rcl
xchg
inc
clc
loopne
ss
call
lds
xor
mov
xor
jne
scas
mov
sahf
mov
jmp
push
mov
xchg
xor
(bad)
xor
xor
jnp
dec
mov
dec
mov
outs
jecxz
mov
inc
adc
ret
cmp
(bad)
(bad)
dec
jp
in
aaa
jno
cli
test
fbstp
jp
jle
mov
sbb
les
xchg
cld
retf
imul
cmp
xchg
inc
les
pop
add
rcr
shl
push
icebp
pop
shl
shl
push
sbb
shl
in
stc
cmc
aad
dec
mov
call
in
retf
lea
xor
cli
pusha
ror
adc
adc
add
cs
push
mov
popa
xor
cdq
mov
(bad)
jae
dec
push
adc
mov
cmp
dec
jno
jecxz
inc
rcr
push
dec
dec
imul
loope
jne
lods
gs
and
repz
cmps
jle
retf
retf
mov
(bad)
mov
jb
cmc
cmp
(bad)
(bad)
xchg
push
aam
sub
stos
aad
das
fild
cmp
xchg
aaa
lea
or
retf
or
sbb
inc
cmp
mov
xor
jge
scas
inc
bound
sbb
push
xor
out
shl
add
bound
test
xchg
mov
and
int3
icebp
dec
in
popa
dec
mov
pop
xchg
xchg
jne
in
add
sub
mov
rcr
xor
es
cwde
xchg
fisubr
std
pop
inc
jl
out
int3
lods
clc
or
cmp
outs
aad
push
sub
std
dec
test
ret
popa
push
fwait
push
sti
gs
sahf
and
push
or
enter
(bad)
retf
cmp
sub
lods
adc
shl
jno
in
pop
xchg
mov
std
sbb
ja
and
add
xor
pusha
sub
fdiv
bound
dec
inc
fcomip
cld
and
mov
fimul
sub
mov
fisttp
push
mov
cmp
mov
mov
pusha
lock
call
xchg
out
mov
cdq
dec
jae
pop
loope
rol
push
aam
pop
sub
dec
push
loope
int
sar
sub
and
xor
jbe
pop
scas
cmc
inc
lds
inc
push
(bad)
ret
adc
sbb
pop
js
inc
push
daa
jmp
mov
cmps
(bad)
pop
pop
(bad)
cmp
mov
aam
ret
pop
xor
cdq
js
lods
stc
mov
test
inc
or
test
shl
lods
adc
sub
sub
cs
add
mov
sbb
retf
push
inc
cmps
push
inc
test
clc
icebp
adc
adc
or
cmp
shr
cld
pop
js
mov
xchg
mov
pushf
xchg
aaa
loope
(bad)
jmp
ret
ds
mov
adc
int3
push
jns
bound
add
dec
xor
and
mov
ins
pop
mov
stc
into
xor
std
cmp
leave
jge
aas
sub
push
push
mov
mov
loop
arpl
(bad)
cli
gs
lea
ds
mov
jmp
cmovs
sbb
daa
js
popw
rcr
adc
rol
xchg
add
sub
mov
ret
pop
imul
(bad)
xchg
ret
mov
movs
sub
mov
call
icebp
mov
pop
mov
imul
adc
and
jl
retf
push
xor
add
stc
mov
in
sahf
repz
fild
mov
adc
jge
sub
and
push
cmp
in
outs
xchg
push
mov
push
add
ins
mov
dec
inc
rol
push
std
test
test
jmp
jp
adc
shl
xchg
cmps
sub
inc
or
fs
fldenv
add
pop
adc
pop
adc
push
movs
mov
bound
ss
adc
fsub
cmp
loope
aas
pop
es
data16
sub
inc
cmp
lahf
in
sub
mov
imul
mov
push
sahf
mov
push
js
popf
popa
sahf
pusha
pop
mov
nop
aaa
dec
in
std
inc
lods
jg
sub
cdq
push
lods
(bad)
cld
sbb
dec
add
inc
stos
jp
push
dec
xchg
add
cmp
xchg
pop
pop
push
mov
lods
jmp
cmp
test
ret
fsubr
adc
nop
push
lods
in
mov
inc
aad
mov
xor
cmps
ss
cmp
inc
call
in
dec
dec
dec
adc
inc
in
lock
add
(bad)
cld
sbb
push
mov
ret
popf
fidivr
xor
(bad)
pushaw
outs
jg
pop
add
adc
jecxz
icebp
mov
pcmpeqb
cwde
popf
loop
ret
pop
ret
xchg
jle
retf
and
jp
jle
jb
(bad)
mov
adc
cdq
jl
xor
pop
dec
lods
cli
lea
mov
jb
sbb
inc
sub
lods
push
out
or
cld
push
loopne
inc
out
and
cwde
ins
leave
push
adc
shr
movs
(bad)
in
push
repnz
movs
lahf
fisub
and
adc
xlat
movs
(bad)
mov
out
aas
mov
fstp
add
xchg
stos
cmp
fwait
xchg
fcom
loop
scas
cmp
jo
or
sub
push
ret
test
pop
add
dec
xchg
mov
jmp
lods
add
div
mov
jno
push
pop
nop
dec
(bad)
pop
repnz
mov
and
and
xor
(bad)
cld
repz
xchg
sbb
inc
xchg
xor
pop
dec
sahf
xor
dec
cli
outs
push
jbe
pop
aaa
call
and
sub
daa
xchg
unpcklps
fcomip
push
mov
sbb
dec
and
aam
adc
ret
push
xor
push
cmps
arpl
mov
adc
xor
dec
das
dec
pop
sbb
push
in
leave
movs
aaa
iret
pop
call
bound
mov
push
bnd
jmp
add
cmovnp
or
movs
cmps
cmps
rcr
mov
jno
pusha
mov
retf
sub
repnz
sub
enter
popa
mov
in
and
dec
rol
add
cdq
(bad)
outs
xor
cmp
mov
(bad)
mov
fldlg2
ror
ficom
xchg
push
out
adc
and
mov
add
out
jg
aaa
mov
hlt
sbb
mov
jno
jbe
cmps
add
fist
in
inc
mov
fdiv
stos
in
outs
and
push
sbb
aas
lock
pop
outs
shr
pop
or
xchg
mov
xchg
repnz
js
je
jne
sub
sar
adc
rcl
or
mov
adc
pushf
imul
xchg
(bad)
out
nop
ja
idiv
adc
daa
xchg
sub
inc
or
jnp
mov
rcr
ds
dec
push
out
test
push
bswap
adc
outs
call
inc
nop
adc
add
pop
and
cli
fwait
test
sub
je
(bad)
cli
clc
adc
cmp
pop
ins
out
cmp
loope
outs
cmps
in
popf
cld
mov
mov
fwait
mov
xor
enter
int
cmp
xchg
out
pusha
xchg
(bad)
push
cld
nop
push
jae
or
gs
mov
cld
arpl
outs
dec
xchg
dec
(bad)
push
adc
repnz
push
sub
retf
ins
sbb
rol
jp
sbb
or
sbb
xor
ds
nop
(bad)
sbb
(bad)
pusha
dec
sub
ficom
push
jp
or
clc
jae
pop
cmp
push
out
xchg
mov
fdiv
adc
mov
push
into
mov
xor
popf
fistp
hlt
cdq
jb
test
ins
mov
mov
(bad)
xor
mov
(bad)
rol
cmp
sbb
cwde
jle
pop
xchg
std
sti
add
pop
xchg
imul
push
mov
xlat
mov
inc
popa
xor
paddusb
pop
jp
xor
test
or
(bad)
mov
xor
in
mov
(bad)
lahf
xchg
xlat
push
(bad)
xchg
nop
popf
or
xor
pop
test
fwait
xor
mov
repnz
ret
sbb
adc
jns
pcmpeqw
(bad)
or
movs
enter
mov
sub
or
inc
shl
aam
pop
push
adc
int
jmp
sub
sub
or
cli
(bad)
jno
mov
push
gs
mov
push
mov
test
sbb
rcl
pop
jl
jno
push
enter
and
dec
jnp
mov
ins
mov
fwait
jecxz
mov
sti
push
cmc
enter
mov
fidivr
nop
xlat
pop
in
clc
pop
dec
push
xor
lea
test
out
out
(bad)
enter
sub
push
int3
sub
pop
xor
jbe
xchg
jo
xor
mov
jmp
sbb
mov
sbb
outs
mov
adc
sub
call
shl
and
pop
lds
sub
dec
arpl
mov
arpl
adc
int3
inc
or
stos
sbb
pop
fild
arpl
call
pop
xchg
jns
jae
repnz
mov
add
inc
test
scas
mov
dec
or
jecxz
scas
jp
push
loope
lahf
sbb
add
jmp
push
das
ror
adc
hlt
imul
jmp
inc
push
outs
fcmovne
add
sub
shr
std
(bad)
cli
xchg
call
(bad)
addr16
jle
scas
push
mov
and
adc
mov
pop
loopne
movs
fs
(bad)
addr16
sti
or
xchg
push
jmp
sbb
jg
out
mov
sbb
dec
gs
sbb
in
out
mov
stos
idiv
mov
hlt
(bad)
ins
sbb
mov
jle
pop
sbb
fldenv
(bad)
out
in
xchg
mov
push
add
xor
cld
lock
add
fisub
mov
stos
inc
cs
cmp
mov
xchg
jmp
xchg
inc
mov
mov
jne
bound
mov
sbb
jns
lods
fcmovnb
(bad)
jmp
loope
jle
add
dec
or
out
xchg
sbb
outs
loop
out
(bad)
sub
in
lds
or
sub
(bad)
jecxz
daa
out
mov
retf
xchg
xchg
gs
ja
popa
add
cmp
xacquire
pusha
dec
lods
lock
fidiv
aaa
cdq
jo
scas
rol
add
or
mov
mov
ret
sub
test
sbb
sub
ja
inc
dec
sbb
inc
lds
xor
push
sbb
cmp
(bad)
lahf
push
inc
add
ret
mov
sbb
cmp
sbb
and
div
sub
sbb
stos
add
mov
pop
int
jmp
push
xchg
mov
ss
aas
cs
gs
cs
and
adc
fcomp
mov
adc
push
fwait
push
or
add
retf
cmp
mov
lea
movs
add
push
bound
jp
or
lods
sbb
shl
cmp
sbb
mov
data16
xor
pop
xlat
mov
pop
rol
loopne
xor
mov
lods
push
push
pop
fsub
test
cmp
cmps
popa
or
cmp
mov
stc
fadd
fnstsw
sub
jge
sti
adc
idiv
(bad)
cmp
mov
push
popf
iret
nop
jmp
rcr
or
ret
mov
sub
and
nop
jl
in
xor
sti
jns
cmc
jp
int3
mov
cmp
cmp
(bad)
mov
xchg
rol
mov
cmps
and
ror
test
pop
mov
test
pop
rcr
dec
mov
ins
es
sub
mov
jo
rcr
xlat
add
sbb
enter
cmps
add
jp
sbb
adc
fcmovbe
sar
inc
imul
mov
xor
imul
rol
adc
fucomi
stc
ss
loope
xchg
pop
test
mov
test
and
lahf
mov
pop
push
xchg
enter
fld
ret
movs
pop
inc
push
xchg
icebp
jmp
pop
rol
scas
retf
mov
not
mov
arpl
enter
sub
xor
popf
repnz
into
cmp
sub
lock
jns
hlt
adc
je
pop
xchg
push
pop
not
scas
jl
retf
pop
shl
iret
fsubr
inc
pusha
cmp
sbb
test
repz
dec
in
pop
aaa
fild
xor
push
movs
iret
les
daa
out
outs
imul
frstor
adc
mov
add
std
pop
cmp
sbb
loopne
rcl
xor
xlat
repnz
les
aad
mov
mov
mov
sub
push
(bad)
cmps
mov
or
mov
add
addr16
nop
fidiv
add
popf
daa
mov
add
outs
or
jl
jbe
add
jecxz
sbb
xchg
jne
inc
ficomp
jge
out
sbb
xor
mov
(bad)
or
ins
es
mov
adc
daa
pop
sub
mov
cmp
push
xchg
ret
ins
push
mov
icebp
pop
out
jbe
out
or
loop
repz
jnp
rol
pop
mov
jbe
cmc
jp
fs
mov
loop
push
rcr
mov
call
mov
fisubr
retf
fwait
out
jecxz
out
daa
pop
sbb
cmc
xor
cmp
test
sbb
jne
aaa
xchg
aas
fwait
sbb
dec
aaa
arpl
dec
iret
ja
sub
movs
lahf
lods
mov
inc
jb
mov
push
movs
push
xor
in
movs
arpl
in
mov
adc
add
mov
lods
arpl
jmp
mov
sub
je
inc
sub
sbb
cmps
mov
fs
mov
jecxz
or
adc
sub
(bad)
jno
fisubr
add
mov
inc
repnz
fwait
xchg
cmp
xchg
jle
clc
mov
dec
lock
and
mov
mov
jnp
call
push
je
dec
sub
imul
sti
mov
call
dec
ret
lds
push
inc
mov
(bad)
mov
jg
retf
addr16
in
repnz
cmps
mov
scas
fcom
repnz
das
stos
jmp
xchg
push
mov
dec
adc
or
in
and
shl
call
ja
pop
cld
and
aas
and
and
int3
fstp
and
xchg
or
dec
mov
addr16
inc
push
into
mov
and
adc
in
shl
xchg
mov
push
scas
pop
sahf
stos
es
shl
retf
adc
and
pushf
jnp
arpl
and
lods
add
movs
jo
out
les
arpl
mov
xchg
(bad)
mov
add
or
popf
in
pop
stc
xor
dec
mov
fwait
pminsw
in
cmp
cmps
and
ins
addr16
(bad)
fwait
or
or
sub
dec
jbe
lock
out
(bad)
cld
xor
dec
(bad)
pop
or
sub
and
mov
das
push
scas
loopne
sub
scas
push
dec
(bad)
mov
clc
(bad)
jo
mov
push
sub
inc
loope
mov
add
sahf
mov
js
ds
in
inc
mov
mov
pop
push
mov
or
mov
es
mov
ficomp
sti
fimul
xchg
nop
pop
imul
out
or
jecxz
repnz
leave
mov
mov
jge
xchg
clc
xchg
pop
fwait
sub
sbb
inc
popa
mov
inc
daa
jecxz
ins
mov
std
mov
in
push
pop
adc
das
lahf
mov
sbb
sub
fdecstp
sti
js
test
pop
mov
rcl
mov
mov
jp
nop
inc
sbb
int
cld
mov
mov
mov
(bad)
inc
xchg
inc
xchg
fnstsw
movs
adc
sbb
adc
or
stc
jmp
and
sub
inc
jge
xchg
push
enter
push
add
adc
leave
rcr
push
hlt
cmps
(bad)
stos
inc
pop
ins
sbb
xor
es
hlt
adc
aad
scas
hlt
call
scas
jne
leave
mov
add
xchg
pop
loope
xor
jns
jle
ret
dec
add
or
fcomi
and
fucom
xor
aaa
out
fdivr
(bad)
shl
mov
mov
xchg
in
repz
jg
mov
mov
inc
jmp
dec
icebp
mov
pop
push
test
push
sti
mov
test
pop
mov
push
icebp
dec
or
and
icebp
mov
adc
adc
dec
mov
int3
(bad)
inc
gs
push
fdiv
add
mov
mov
in
add
xor
(bad)
xor
jle
fisub
into
rol
mov
adc
push
(bad)
data16
and
popa
add
jl
sub
fwait
jnp
mov
ss
jne
or
ret
xor
(bad)
adc
adc
push
(bad)
mov
or
stos
dec
inc
rcr
dec
pop
add
icebp
retf
ds
push
or
pusha
mov
add
mov
jmp
or
add
test
mov
hlt
loope
(bad)
jnp
(bad)
jge
xchg
mov
aam
sub
(bad)
sahf
(bad)
arpl
cmp
cmp
push
or
sbb
aaa
pop
cld
xor
add
cdq
rep
dec
(bad)
popa
cmps
out
jns
cmp
mov
cmp
mov
scas
push
add
xchg
jne
out
daa
or
shl
lods
mov
mov
dec
adc
pop
lea
and
pusha
and
mov
les
ss
nop
arpl
data16
dec
jl
into
ret
cwde
pop
sbb
pusha
mov
hlt
pop
sahf
push
pop
push
mov
inc
mov
add
lock
sti
je
test
or
xor
or
into
das
cmps
mov
jl
int3
mov
cs
fsub
cmps
fwait
pop
xchg
ins
in
mov
mov
sub
push
jle
pop
lea
push
into
mov
jmp
mov
mov
mov
jl
jle
lods
nop
imul
sti
lods
sub
mov
les
pop
mov
shr
emms
popa
mov
xor
dec
inc
fisubr
jp
xor
xchg
dec
add
cmp
mov
push
arpl
push
jne
sbb
cwde
(bad)
push
sub
adc
sub
jae
cmp
cmp
arpl
icebp
jb
pop
repz
fimul
lock
imul
shl
xor
stos
sub
ins
es
xor
ins
push
and
sub
sub
fst
data16
cmps
jo
adc
inc
icebp
rcl
cmc
loope
adc
(bad)
frstor
fs
pusha
mov
icebp
add
push
or
sar
xchg
call
mov
(bad)
cmc
aam
push
lahf
ss
fadd
jb
add
sub
jge
xor
pusha
cmp
adc
mov
movs
push
push
sbb
out
popf
(bad)
and
mov
sub
jns
addr16
daa
out
add
pop
sbb
and
and
ds
addr16
adc
punpcklbw
sub
mov
ins
jle
lock
mov
inc
mov
lock
jb
out
cmps
rcl
add
pop
and
icebp
adc
ror
aam
mov
js
je
lahf
iret
adc
lahf
(bad)
push
bnd
ins
pop
xor
cld
pop
push
lock
loop
jge
sub
jo
iret
(bad)
fwait
pop
jae
ficom
push
btc
push
cmps
fcomip
lea
or
(bad)
ss
mov
sub
mov
fstp
sar
test
push
and
stos
mov
movs
jmp
enter
sub
sub
lods
movs
sub
cdq
mov
xchg
gs
push
out
(bad)
dec
data16
pop
cmp
inc
ss
xor
sti
clc
sub
pop
jle
imul
xor
cdq
cdq
xor
nop
push
(bad)
push
in
mov
es
outs
hlt
inc
sub
mov
xlat
jge
maxps
aas
mov
popa
out
pop
mov
xchg
loope
sub
or
xchg
lds
mov
dec
sub
xchg
out
xlat
inc
mov
dec
and
push
das
in
stos
retf
fwait
sbb
imul
jo
dec
sahf
mov
imul
leave
sbb
popf
push
or
pop
mov
inc
lds
adc
ret
ja
push
pop
or
mov
add
sahf
mov
sub
mov
xor
and
ins
mov
outs
push
fst
stos
dec
cmps
sbb
inc
and
or
cwde
in
and
pop
movs
shl
pop
jo
and
and
es
cs
pop
test
mov
fstp
push
ret
das
push
sar
push
repz
idiv
add
je
sbb
mov
sbb
or
stos
(bad)
int
add
adc
pop
ror
(bad)
mov
test
and
xor
in
add
les
daa
out
xchg
sbb
push
pop
les
xchg
mov
inc
or
fucomip
outs
shl
sti
dec
pop
mov
xor
dec
or
call
leave
outs
aam
adc
(bad)
xor
repnz
fpatan
jmp
aam
out
fwait
daa
dec
dec
cmp
fdivr
mov
xchg
jne
pop
jge
and
popf
imul
xchg
ret
push
sub
cdq
cmc
nop
cmp
push
adc
mov
jmp
aaa
add
lock
loop
jo
push
add
sub
ja
pop
(bad)
ficom
pop
call
xor
fs
cld
repnz
pop
cmps
(bad)
fdivp
sub
add
xor
fldpi
lds
xor
sub
and
int
mov
(bad)
pop
add
movs
pop
sbb
push
sub
jle
jmp
sbb
mov
jbe
inc
or
and
xor
imul
pop
dec
into
(bad)
mov
scas
jl
(bad)
fistp
inc
sub
sahf
fs
jmp
mov
xchg
scas
mov
add
dec
cmc
jecxz
jmpw
xor
push
jnp
(bad)
cs
add
out
scas
and
not
sub
data16
in
cmp
ret
xor
xor
ins
movs
pop
push
loope
mov
js
movs
int
fadd
cmp
or
(bad)
jno
inc
movs
jmp
cli
test
push
fcomp
add
call
movs
mov
ds
inc
jecxz
add
jl
mov
rcr
push
mov
test
mov
je
pop
adc
leave
ret
arpl
popa
mov
xor
fisubr
xlat
fidivr
push
iret
and
sub
jbe
push
cmp
movs
sar
in
pop
sahf
neg
mov
sub
iret
clc
cmp
xchg
popa
push
ret
aad
fcomp
neg
std
dec
fsubr
cmps
rol
jl
repnz
add
add
or
cmc
adc
inc
pop
das
jb
xor
jae
jle
iret
repnz
cmp
repnz
in
mov
dec
into
mov
loopne
mov
adc
outs
pop
out
push
rcr
xlat
or
enter
adc
mov
fld
mov
fldenv
jae
inc
dec
add
pushf
imul
sub
xchg
jb
mov
mov
inc
and
inc
jl
and
pop
cmp
shr
pop
mov
sub
xchg
test
lods
lea
jmp
popa
pop
out
repnz
and
xor
jbe
mov
mov
cmp
sti
xchg
pop
jp
mov
nop
out
(bad)
mov
cmp
add
js
mov
sbb
jae
shl
or
ja
and
clc
leave
inc
in
sbb
cmps
push
ins
push
mov
jmp
sub
mov
lahf
cmp
test
sub
jo
inc
repz
mov
test
or
add
mov
inc
adc
clc
dec
in
mov
cmp
es
cwde
ins
int3
pushf
xor
repz
mov
jp
pop
push
sahf
popa
or
dec
mov
mov
adc
cmp
mov
aam
and
aaa
mov
retf
(bad)
mov
mov
mov
mov
retf
cmps
pop
scas
je
xchg
jo
pop
push
fsubp
pusha
ficom
inc
sub
or
or
mov
cs
mov
jmp
call
add
std
rcr
cld
mov
ins
or
int
ins
mov
jmp
and
inc
or
or
fldcw
cmc
dec
retf
out
xchg
pusha
dec
mov
shr
mov
call
scas
aas
mov
fldcw
int3
adc
sub
ss
cwde
js
inc
jg
jbe
add
inc
mov
(bad)
lahf
adc
adc
lods
xchg
sbb
and
pop
xor
scas
popf
pop
mov
iret
das
xchg
test
aam
out
and
mov
dec
sahf
mov
into
icebp
mov
pop
idiv
int
arpl
push
xchg
in
iret
dec
adc
xor
cmp
fwait
dec
hlt
outs
jns
loop
stos
jo
daa
cmp
or
(bad)
ror
enter
test
pop
fiadd
cmc
mov
inc
xchg
mov
sbb
cs
idiv
sbb
test
out
mul
in
dec
xchg
pop
add
xor
sub
pop
sub
mov
repnz
cld
mov
add
or
ins
icebp
loope
push
pop
nop
and
cli
loop
repnz
and
out
ficomp
mov
hlt
fwait
cmp
ins
pop
ret
jbe
movs
pop
mov
cs
xchg
push
jo
jge
outs
fbld
fst
adc
in
mov
cmps
lds
fimul
retf
iret
and
pop
inc
cmp
stos
jnp
xchg
cmp
ret
ror
adc
sub
mov
xchg
add
add
dec
xor
mov
sahf
push
outs
cli
scas
das
std
hlt
sub
mov
ret
xor
out
sub
xor
sahf
pusha
inc
popf
sbb
push
hlt
cmp
jmp
pop
jns
sbb
popa
push
add
mov
sub
xchg
ins
test
adc
dec
or
les
pusha
iret
and
sbb
push
cmc
push
mov
cmp
loop
mov
(bad)
popf
xchg
sub
cmps
jge
mov
and
in
cmc
lahf
ror
out
outs
fisttp
je
cmp
mov
xchg
dec
xchg
xchg
mov
fst
loopne
jge
pop
loope
nop
inc
xchg
and
lea
adc
scas
jmp
sti
mov
mov
dec
mov
mov
dec
or
pop
push
add
in
mov
cmp
mov
mov
jbe
cli
sti
pop
mov
popa
push
sbb
es
into
ins
mov
fisub
inc
jno
fs
push
xor
push
loop
aas
dec
into
sbb
sub
and
inc
adc
sti
xchg
push
in
in
mov
jmp
jo
mov
bound
pop
inc
(bad)
mov
xchg
push
dec
mov
dec
push
push
lea
mov
cdq
data16
movs
mov
xchg
sub
cwde
sbb
(bad)
mov
fbld
mov
js
out
jno
jmp
lea
sub
fist
arpl
fadd
mov
xchg
test
push
mov
rol
std
sub
lahf
fisttp
or
mov
mov
bound
aaa
jb
outs
jg
cmp
xor
push
jg
xor
mov
adc
xor
jne
hlt
adc
sar
jle
addr16
cmp
lea
outs
imul
addr16
mov
cwde
outs
ret
popa
sbb
mov
mov
fs
jle
in
les
fcom
ins
out
std
stos
dec
out
call
test
in
push
gs
xchg
xchg
stc
cmc
mov
movs
mov
sar
cmc
mov
ins
test
fstp
and
fwait
and
clc
mov
cmp
dec
jle
std
push
mov
sub
inc
enter
fmul
je
inc
inc
mov
sbb
retf
cmps
dec
cmp
es
fmul
mov
fnstsw
in
stos
and
mov
sti
into
push
jp
jp
ret
mov
(bad)
fdivr
push
sti
adc
xor
push
aaa
adc
mov
ins
int3
pop
xor
fstp
imul
push
jp
(bad)
mov
sub
pop
xchg
vpmuludq
mov
in
dec
fiadd
(bad)
popf
dec
push
jbe
xor
mov
loopne
mov
or
stos
jb
int3
push
dec
mov
mov
stos
aaa
mov
and
mov
mov
cmp
aas
push
daa
mov
test
call
xchg
rcl
push
repz
in
mov
sbb
(bad)
das
pop
(bad)
mov
mov
push
or
pop
pop
mov
mov
and
pop
dec
mov
xor
cmp
dec
mov
leave
repnz
fwait
loopne
add
ins
(bad)
cmp
ja
sbb
adc
std
mov
mov
jle
cmps
mov
inc
aam
jle
icebp
xchg
jbe
or
(bad)
inc
push
mov
jb
in
push
popf
jmp
stc
mov
sbb
out
pop
repz
test
jp
les
jae
nop
xor
mov
push
cmp
push
fisttp
pop
sub
jne
call
hlt
mov
mov
xor
js
in
cmp
inc
adc
cmp
or
pop
cdq
mov
sub
ret
ret
xor
sub
ret
(bad)
dec
std
repnz
mov
cmp
dec
les
dec
call
xor
push
xchg
daa
cld
out
jle
or
stos
xlat
sub
cmp
std
pop
xchg
xchg
lods
cmp
or
gs
adc
outs
mov
outs
and
fs
add
ja
jae
loopne
dec
and
in
ins
les
sub
cmps
xchg
call
fsub
pop
dec
outs
test
jo
push
mov
inc
dec
aaa
div
imul
ds
mov
or
(bad)
push
scas
xchg
jns
imul
mul
or
jl
retf
jbe
cli
and
repz
cmp
les
lods
pop
fdivr
ss
jmp
inc
in
shl
jl
sub
cwde
mov
sahf
int
push
call
sub
xchg
mov
push
jmp
es
icebp
lds
mov
push
out
imul
mov
push
mov
push
and
and
ret
mov
jno
movs
or
inc
cmps
cmp
inc
lock
pop
sbb
cli
xor
inc
fldenv
es
inc
xor
aam
bound
mov
call
sbb
ss
fmul
mov
stc
pop
mul
jecxz
popa
mov
lods
xor
outs
mov
test
adc
sub
adc
popf
cmp
pop
cmps
jns
cmp
pop
inc
mov
pop
popa
xor
arpl
shl
or
jmp
in
test
push
test
imul
imul
mov
jae
xchg
popf
jmp
repnz
sub
push
gs
mov
push
fst
fimul
mov
inc
out
in
sub
out
les
push
shr
jbe
repz
inc
pop
push
fwait
push
cdq
enter
ins
loope
mov
sub
leave
add
pop
ds
movs
enter
hlt
or
cmc
sahf
out
mov
cmp
(bad)
jo
add
scas
sub
ret
call
(bad)
popa
pushf
pop
mov
sbb
mov
les
sbb
mov
xor
scas
(bad)
and
mov
mov
add
cmp
or
inc
xadd
jecxz
mov
jle
hlt
(bad)
mov
mov
jne
loopne
sub
push
mov
push
xchg
cmp
cld
ds
or
ret
pop
lds
imul
xor
cmp
enter
iret
add
into
jge
fimul
cmc
ret
test
nop
jo
jmp
push
jle
cmc
stc
push
add
test
xor
xchg
ins
inc
mov
(bad)
in
or
(bad)
pop
inc
push
bswap
jnp
inc
loopne
jne
and
or
scas
rcr
xchg
or
and
and
mov
jnp
(bad)
int3
and
stc
(bad)
pop
out
jl
frstor
arpl
sub
jg
out
mov
outs
or
sti
mov
add
jb
pop
(bad)
mov
hlt
push
inc
jmp
mov
push
in
mov
sub
pop
ficom
and
cmp
dec
or
cmp
hlt
jne
push
jg
and
sbb
inc
mov
icebp
inc
and
xchg
test
mov
xor
adc
icebp
mov
mov
mov
and
lahf
add
mov
loope
sbb
stos
outs
stos
enter
mov
(bad)
fdiv
jecxz
mov
or
dec
xchg
jle
xor
add
shl
xchg
ins
sbb
into
dec
inc
pop
mov
mov
mov
fadd
aaa
mov
inc
push
fadd
push
shl
(bad)
mul
test
jl
mov
mov
inc
hlt
and
mov
and
hlt
mov
xchg
retf
mov
xor
test
imul
addr16
in
pop
fcomip
mov
std
imul
jns
cmps
jecxz
cs
inc
adc
and
out
cld
jecxz
pop
(bad)
in
dec
add
shl
mov
xchg
sub
mov
clc
gs
jmp
dec
lds
pop
test
lock
jns
in
cmp
sbb
ja
push
xchg
push
test
jle
into
fisubr
pop
sar
pop
push
outs
jl
cmp
and
xchg
test
daa
(bad)
or
mov
cs
mov
stc
cmps
fisttp
xchg
add
add
xchg
mov
daa
into
pushaw
das
retf
addr16
and
adc
push
scas
sub
(bad)
aad
add
outs
xchg
cli
jbe
test
mov
(bad)
call
rcr
inc
mov
and
aam
push
mov
jge
mov
jecxz
retf
or
into
push
inc
das
inc
nop
inc
push
pushf
cmp
xchg
adc
cdq
and
retf
sti
xor
jne
fs
sar
mov
dec
inc
ror
into
into
mov
and
pop
cmp
jmp
mov
in
mov
cmp
inc
repnz
icebp
iret
dec
push
push
rol
sbb
fcomi
outs
push
xor
xlat
shl
or
cmp
add
mov
sub
inc
xchg
inc
and
push
ror
popf
pop
aas
aad
sbb
out
fwait
outs
test
pop
pop
pushw
cld
add
ins
pop
and
ret
fidivr
pop
int
jmp
loopne
int3
jmp
(bad)
mov
add
inc
xor
scas
fld
xor
add
pop
(bad)
(bad)
lea
cmp
jmp
popf
loopne
pop
cmp
xchg
cmp
pop
stc
imul
mov
mov
cmp
imul
hlt
call
add
push
or
ret
in
push
ror
sub
std
dec
inc
sbb
pushf
test
test
push
push
xor
aaa
jle
lock
shl
or
fldcw
ins
mov
mul
sbb
fnstcw
cwde
jae
int3
pusha
dec
dec
dec
shr
adc
add
adc
popa
add
mul
out
dec
mov
fsubr
add
dec
push
fsub
mov
pusha
pop
fbld
cmp
popa
add
repnz
and
push
pop
xor
push
cli
xchg
cmps
or
jnp
mov
sbb
jns
in
push
push
add
out
sub
dec
xlat
mov
and
sbb
dec
add
dec
rcl
jle
xchg
mov
dec
test
movs
iret
cmc
cmp
dec
adc
xchg
sub
rcl
retf
int
in
scas
icebp
cmc
ins
mov
inc
(bad)
cmp
pop
es
xor
cdq
loope
push
jmp
(bad)
mov
ret
jnp
mov
cld
rcl
mov
enter
sub
xchg
sub
in
mul
push
jge
sbb
gs
int
shr
sbb
int
into
mov
sbb
fstp
pop
or
lock
sbb
gs
lds
in
and
repz
aaa
push
cmp
push
cdq
fcmovbe
adc
cwde
and
and
xchg
sub
out
gs
xor
pop
jmp
or
lods
das
pusha
int
(bad)
push
push
inc
fnstsw
jbe
arpl
out
cmp
imul
adc
mov
dec
jo
inc
std
test
mov
jecxz
push
mov
jne
mov
push
adc
imul
repnz
popa
xor
mov
loope
movs
push
xor
mov
dec
xor
shr
pushf
mov
leave
or
js
jecxz
and
stos
inc
test
imul
fldl2e
cmps
sbb
daa
inc
or
dec
jecxz
xchg
dec
xor
inc
cmps
scas
pop
and
lds
mov
add
outs
iret
sbb
ins
or
in
outs
push
sbb
mov
lea
inc
ret
cmp
cmp
jns
push
je
aad
cdq
cmc
and
inc
and
add
dec
jmp
(bad)
xlat
js
adc
mov
fdivr
popf
mov
sti
cmp
call
jnp
ss
(bad)
cmp
adc
mov
pop
mov
enter
aam
dec
lahf
addr16
movs
sbb
jb
(bad)
sbb
dec
jmp
mov
lods
sbb
xchg
dec
std
ret
sbb
hlt
repnz
popf
aas
xor
push
shl
cli
add
xor
mov
imul
pop
jle
inc
or
and
add
dec
dec
pop
jns
(bad)
or
jge
and
jmp
shl
jge
cmps
loope
aaa
fist
fcomp
ret
sub
std
scas
bound
(bad)
loop
jecxz
retf
repnz
adc
adc
jo
jae
pop
mov
mov
aaa
cmc
jecxz
push
in
hlt
add
cli
jle
pop
movs
sub
xor
dec
pop
and
cmp
add
stos
movs
add
or
jno
inc
pushf
mov
add
shl
mov
cmc
shl
add
ret
mov
xchg
call
movs
pop
inc
aad
cli
int
daa
ins
movs
push
push
lods
mov
ins
mov
cmp
lods
repz
call
sub
dec
sbb
mov
(bad)
ins
inc
retf
mov
es
sub
cmp
xchg
aad
and
test
inc
clc
jecxz
sar
aam
push
dec
jnp
adc
imul
fucom
xor
jno
jae
mov
cmp
loopne
enter
scas
jg
sub
adc
arpl
outs
add
jnp
pushf
jmp
jnp
mov
sub
rcl
inc
outs
lods
cmp
scas
dec
inc
or
cdq
cmp
in
ficom
and
add
jmp
cli
pop
inc
jno
es
mov
add
mov
aaa
push
(bad)
and
pop
shl
xchg
in
or
loopne
xchg
pop
adc
loopne
loopne
add
ret
dec
adc
and
(bad)
repnz
push
ja
stos
inc
mov
jae
dec
imul
cli
add
pop
lods
jae
imul
cmps
sbb
popa
xchg
xchg
int
lahf
or
pop
push
and
test
loope
test
xchg
cmp
and
inc
mov
xchg
xchg
mov
std
pop
adc
mov
lods
xchg
push
sub
cli
mov
and
mov
fwait
sbb
outs
out
(bad)
pop
sbb
out
into
mov
ret
out
xor
xchg
xchg
in
and
adc
loop
into
call
jo
mov
jmp
retf
dec
mov
jnp
scas
sub
add
pop
call
dec
add
pop
popf
out
mov
clc
enter
scas
cmp
push
fnstsw
pushf
inc
sar
cmps
arpl
ja
sbb
or
outs
mov
and
jmp
out
jmp
fucomi
mov
xchg
jmp
xor
mov
xchg
out
mov
jg
loopne
pop
arpl
aam
mov
loop
mov
aam
(bad)
pop
or
pop
xchg
retf
pop
jno
pop
js
aaa
pusha
dec
ds
bound
adc
fwait
push
mul
mov
or
nop
jmp
add
pushf
pop
push
(bad)
mov
jne
sub
pop
mov
jbe
sbb
jae
loope
test
scas
arpl
jbe
inc
or
xor
arpl
pop
ret
mov
cmp
jl
test
mov
daa
and
test
fs
jecxz
js
retf
enter
inc
jo
mov
cmp
out
cld
lahf
jg
and
aad
popf
popf
test
daa
ja
mov
sahf
sub
jmp
sbb
int3
cmp
sub
mov
stc
pop
inc
scas
mov
push
jb
jno
mov
cmp
cmp
in
data16
repnz
lods
sub
ss
inc
xlat
retf
loopne
inc
adc
pop
jmp
dec
pop
cmp
cmp
push
es
es
xchg
(bad)
mov
(bad)
cmp
sbb
shr
daa
xlat
out
push
fisttp
hlt
leave
add
retf
dec
xor
popf
push
scas
in
int
push
cmps
test
xor
or
pop
loope
inc
bound
icebp
ds
push
pop
and
cmps
dec
loopne
mov
xor
sbb
lds
lods
test
sti
nop
dec
jecxz
nop
pop
outs
jp
das
mov
outs
lock
sbb
or
jo
mov
add
or
cmp
sti
sbb
xor
adc
xchg
inc
dec
ret
je
lods
push
inc
retf
sub
sbb
mov
test
inc
fld
jl
test
and
pushf
jb
jle
lea
dec
loop
cdq
ins
sub
gs
neg
mov
repz
rcl
push
jg
out
xchg
cwde
(bad)
cli
test
jae
sbb
push
fdiv
jp
cmp
xor
mov
inc
out
cli
inc
shr
xor
mov
lods
adc
mov
movs
mov
pop
add
jb
dec
jne
xor
dec
jo
mov
das
icebp
or
push
jmp
aad
aam
or
and
and
xor
sub
fild
sbb
int
dec
mov
adc
adc
add
add
mov
imul
adc
outs
jae
sub
and
mov
enter
mov
loop
jg
adc
dec
(bad)
sbb
popf
shl
inc
ficomp
push
imul
stos
mov
cmp
pop
mov
xchg
repnz
add
popa
in
aam
out
lock
fistp
xchg
scas
pop
test
push
sub
loope
sbb
cmp
adc
jb
movntq
out
push
imul
sub
and
cwde
and
adc
jbe
mov
loope
sahf
mov
push
mov
retf
jbe
sbb
ins
jno
ret
lods
xchg
mul
add
ficom
cmp
retf
push
scas
add
je
sbb
pop
and
push
mov
(bad)
test
and
js
cmp
pop
dec
cwde
movs
rol
jnp
mov
add
mov
retf
mov
mov
leave
mov
mov
xchg
data16
lods
repz
sbb
and
stc
push
cwde
or
inc
sbb
push
sbb
(bad)
sub
jle
rcr
call
ins
loope
rcl
nop
pop
mov
call
outs
(bad)
mov
inc
pop
dec
mov
adc
jmp
pop
dec
add
jae
clc
push
add
adc
icebp
out
sub
mov
cs
sar
je
enter
mov
sbb
sar
movs
aas
test
pusha
pop
xchg
(bad)
jge
add
cld
dec
lods
dec
sub
sbb
lock
stos
cmc
jg
out
neg
mov
xchg
push
mov
pop
add
cmp
mov
sbb
imul
mov
sbb
cli
xchg
retf
in
or
fdivr
shr
lds
push
pop
fsubr
inc
in
int3
cmp
fdivp
f2xm1
ja
imul
cli
jmp
mov
push
sub
inc
xor
dec
adc
pusha
mov
imul
enter
idiv
cmp
cld
sub
xchg
pop
(bad)
and
pop
add
ret
inc
imul
sar
movntps
and
clc
jnp
test
sub
mov
stc
inc
or
fnstenv
add
icebp
cmp
test
rcr
add
lods
mov
cli
cmp
mov
les
arpl
aam
xlat
pop
sbb
xchg
ror
or
rcl
ins
aaa
ss
retf
in
aad
and
pop
inc
in
pop
jmp
cmps
push
call
inc
xor
dec
cmp
out
pop
(bad)
sbb
in
push
cmc
pop
sbb
jmp
dec
clc
sbb
push
rcl
jae
sub
cmc
clc
dec
jge
mov
pusha
retf
cmp
mov
add
(bad)
mov
leave
pop
mov
mov
pop
mov
push
scas
int3
inc
inc
imul
rol
scas
iret
sub
cdq
test
or
xor
aam
or
fs
mov
xchg
dec
cmp
or
mov
inc
ret
sub
dec
sub
test
sahf
jle
lock
test
sub
(bad)
mov
rcr
repz
loopne
mov
retf
mov
cmp
mov
xchg
ds
mov
mov
add
cs
mov
cmc
cmp
pop
shr
adc
into
mov
or
mov
inc
aaa
sbb
aaa
jnp
(bad)
push
dec
dec
outs
dec
stos
fs
sbb
das
add
jb
inc
sub
mov
pop
icebp
add
outs
sub
rcr
int
pop
or
pushf
cwde
xor
mov
cmc
pop
lods
movs
sub
fucomi
arpl
adc
scas
xchg
aas
mov
and
ficomp
pop
fwait
loop
pushf
movs
adc
pop
mov
add
and
mov
mov
mov
pop
inc
mov
or
jl
ret
jmp
xchg
clc
push
pushf
cmps
jmp
inc
xor
push
aas
lock
jg
mov
cdq
outs
dec
sub
lahf
lahf
cli
sub
nop
add
push
cmc
jmp
sar
shl
adc
adc
xor
mov
fldcw
in
dec
fsub
popf
movs
and
inc
sar
sbb
push
or
cli
push
stos
in
lods
pusha
(bad)
imul
inc
xchg
lea
call
lahf
imul
or
and
rcl
inc
mov
inc
xor
and
(bad)
daa
es
sbb
xlat
mov
inc
or
es
jp
xchg
loopne
adc
xchg
mov
aaa
in
shr
pop
popf
shl
popa
or
pusha
add
mov
push
jmp
or
bound
push
les
es
leave
imul
mov
dec
(bad)
pop
sub
fwait
pause
inc
stos
xor
(bad)
cmp
sbb
xor
push
mov
sub
add
mov
out
jbe
je
(bad)
xchg
es
push
sub
outs
es
or
jnp
(bad)
faddp
into
fxch
movs
sub
shl
test
xchg
xchg
int3
add
mov
(bad)
cmp
hlt
ins
pop
mov
fwait
pusha
ror
fisubr
jmp
cmps
rol
dec
mov
(bad)
xchg
pop
sub
dec
jne
add
rol
mov
mov
rcr
call
repz
mov
js
into
out
int3
xor
lods
loop
pop
fs
add
push
sahf
or
imul
mov
sub
stos
pushf
bound
sbb
adc
add
(bad)
jle
stos
enter
in
inc
pushf
popf
ja
loopne
xchg
adc
mov
ud2
inc
popf
shr
cmp
pop
adc
fdiv
mov
mov
mov
sbb
ror
cmp
xchg
repnz
je
add
loopne
sub
lock
out
lock
in
mov
jmp
int3
inc
in
sti
(bad)
std
movs
test
mov
lea
mov
mov
push
pop
pop
aam
imul
loope
jle
fsubr
pop
mov
inc
mov
xor
xor
mov
stos
jo
in
dec
push
iret
dec
lods
stc
add
inc
fs
add
fs
sbb
sub
loopne
jmp
pop
jmp
jl
and
xchg
fild
test
lods
je
push
xor
fidiv
loope
stos
das
in
mov
fld
dec
push
(bad)
mov
or
es
pusha
inc
inc
popf
xor
(bad)
aad
jmp
shl
jne
(bad)
je
push
cmp
cmps
inc
test
gs
repz
sbb
sti
imul
out
cmp
test
aad
movs
bound
cld
bound
loopne
dec
or
pcmpeqw
push
imul
gs
push
mov
add
ds
jecxz
iret
(bad)
sub
inc
cmp
je
popf
mov
popf
popf
popf
pop
jp
xchg
popa
imul
sub
scas
sbb
iret
jp
push
imul
jmp
jns
mov
push
xor
dec
or
pop
rcr
jbe
mov
or
enter
ret
(bad)
int
bound
inc
push
ror
mov
lock
scas
into
mov
pop
add
shr
clc
jg
out
das
jno
popf
xchg
(bad)
int
movs
pop
mov
or
test
mov
pop
loop
aad
daa
push
pop
adc
and
cmp
jb
fwait
ds
xlat
dec
nop
xchg
dec
jp
mov
xchg
fnsave
aad
fldenv
outs
cmp
mov
cld
xchg
(bad)
add
inc
les
jno
jo
jno
pusha
neg
mov
cmp
out
sub
xchg
adc
imul
sbb
out
mov
dec
iret
es
mov
pusha
mov
jg
mov
inc
mov
xchg
dec
movs
pop
movs
or
mov
add
icebp
mov
out
mov
push
in
mov
inc
loope
and
pop
dec
dec
and
(bad)
cmps
ins
ds
dec
xchg
iret
pop
gs
mov
arpl
inc
lock
aad
add
add
push
(bad)
mov
xor
cmp
sub
out
inc
xchg
jle
sbb
mov
mov
cmp
add
jae
mov
mov
mov
rcl
sbb
adc
jns
push
sbb
jo
pusha
push
jo
and
(bad)
dec
or
jg
pop
mov
retf
push
mov
fldenv
icebp
xor
(bad)
add
xor
sub
add
xor
add
repnz
aaa
mov
sbb
adc
ins
mov
movs
and
in
psrlw
or
jne
data16
xchg
cli
sub
outs
push
pop
cmc
pop
jae
dec
adc
mov
test
pop
adc
fwait
inc
data16
push
pusha
inc
ja
int
xor
js
loop
sbb
and
pop
mov
(bad)
jns
or
pop
das
call
add
(bad)
scas
es
fldenv
pop
call
lahf
inc
mov
fist
int
cmp
cmps
pop
(bad)
imul
sub
out
cmp
mov
adc
outs
mov
dec
test
sbb
ss
mov
lahf
cmp
(bad)
jge
out
(bad)
scas
popf
nop
xor
mov
es
adc
dec
sub
mov
iret
jmp
dec
mov
or
rcr
push
ins
cmc
rol
mov
dec
aaa
xor
sahf
lock
jno
call
xlat
and
dec
inc
add
sbb
jg
xchg
xchg
adc
push
and
push
or
or
mov
ds
stos
lahf
mov
cmps
mov
fwait
push
push
xchg
mov
jg
inc
bnd
(bad)
lds
xchg
out
lea
xor
or
mov
cmps
in
jecxz
fs
push
lds
mov
sbb
xor
push
bnd
mov
push
ret
into
jl
in
arpl
sti
fidiv
push
dec
jmp
movs
cmps
inc
pop
lea
jbe
pop
out
leave
je
stos
or
jae
xlat
mov
pop
lods
and
out
mov
add
(bad)
fnstcw
nop
(bad)
leave
iret
inc
adc
and
lds
adc
sub
(bad)
xor
and
mov
imul
sti
sbb
das
inc
cmp
leave
mov
ret
les
(bad)
(bad)
xor
imul
xor
arpl
or
dec
fs
lods
mov
cmps
add
sahf
stos
mov
into
movs
hlt
idiv
scas
push
cmps
mov
mov
repz
or
ficomp
clc
jp
jae
scas
gs
(bad)
jmp
les
(bad)
cwde
js
jl
jne
out
xchg
call
ins
jbe
(bad)
cmps
dec
outs
push
int3
je
jg
ror
pop
pop
sub
add
lahf
xchg
dec
cwde
push
(bad)
fnsetpm(287
pop
cmp
arpl
or
cdq
push
mov
mov
fbld
push
xchg
pop
add
xchg
adc
ds
mov
inc
pop
inc
jle
sub
push
dec
push
jmp
les
(bad)
shl
inc
fild
lahf
shr
sti
xor
push
das
sub
and
shr
pop
loop
push
scas
pop
je
jns
add
pushf
jecxz
gs
repnz
pop
and
pop
mov
xor
call
jb
jp
rcl
add
sbb
xchg
test
inc
add
mul
adc
push
leave
rol
jp
stos
ins
add
ficom
call
and
pop
pop
push
pusha
xlat
mov
jne
and
mov
repnz
add
shl
pandn
jbe
mov
dec
(bad)
ins
jae
or
push
stc
sahf
sahf
push
and
dec
outs
retf
mov
sub
je
cmps
cwde
cmps
ror
into
jmp
inc
scas
(bad)
sbb
push
pop
adc
mov
ror
mov
xor
in
xchg
mov
or
clc
cld
jmp
jecxz
out
push
or
leave
shl
or
sbb
push
or
mov
sub
repz
xor
mov
sahf
mov
std
mov
mov
movs
and
je
jmp
mov
aaa
retf
cmp
out
inc
sub
cmps
push
mov
jle
ins
lea
call
out
lods
mov
mov
mov
dec
dec
adc
dec
pop
es
js
out
mov
inc
dec
cmp
shl
mov
fst
sbb
push
shr
dec
xchg
or
and
jmp
fwait
out
imul
es
das
popf
xchg
jbe
jecxz
xchg
fldenv
or
inc
gs
push
adc
push
sbb
or
ret
sbb
cmps
aas
push
jmp
(bad)
das
stos
push
out
sub
hlt
test
mov
popa
mov
ins
jmp
daa
fisubr
inc
or
cdq
adc
sub
xlat
stc
xchg
pop
call
fnsave
das
jae
mov
in
rcr
push
aas
and
cdq
push
test
pop
or
sub
sti
cmc
mov
shl
movs
je
and
imul
outs
lock
adc
iret
fstp
jbe
lock
adc
lds
sbb
xor
push
push
mov
cmps
fadd
(bad)
dec
push
lods
pushf
retf
mov
or
push
or
adc
dec
sbb
cli
movs
sbb
mov
jmp
std
fist
sbb
ftst
paddusb
inc
in
cwde
(bad)
pusha
add
pop
fbld
inc
ins
adc
call
or
out
adc
pop
jecxz
maxps
jmp
jb
pushf
jmp
(bad)
int3
rcl
adc
lea
inc
xchg
bnd
daa
dec
ds
mov
jp
out
mov
cmps
outs
jg
or
or
mov
sbb
rol
adc
mov
dec
jnp
or
jp
inc
popa
and
sub
sub
shr
pop
cmps
jl
cld
sbb
push
fnstcw
jg
jo
mov
mov
sub
inc
sahf
xchg
mov
adc
inc
out
bound
pop
shl
push
arpl
enter
sahf
sbb
push
lahf
mov
clc
jl
out
mov
inc
cs
aas
inc
outs
or
sbb
out
fwait
and
fucomip
int3
sar
mov
ffree
aad
inc
imul
sub
push
les
xor
lea
leave
pop
or
push
mov
sahf
mov
cpuid
add
pop
daa
lea
push
sar
jno
je
push
pop
aad
xor
sbb
hlt
nop
pop
neg
jle
lods
lea
aas
mov
pop
jnp
pop
xchg
push
adc
jecxz
mov
hlt
das
mov
mul
imul
inc
inc
out
inc
sub
outs
les
pushf
sbb
cmp
sub
dec
or
cdq
outs
leave
and
or
and
pusha
int3
cmc
test
pop
cmp
jg
or
mov
xlat
fcmovu
lock
jl
dec
add
clc
stc
or
mov
ss
cdq
hlt
int3
int3
push
jno
ins
mov
mov
xor
aam
or
jb
in
mov
sbb
push
fcmovnb
jmp
cmp
mov
add
sub
ins
fcmovb
ret
mov
out
fst
das
stos
outs
inc
(bad)
out
or
div
or
int
movs
in
shr
aas
push
add
mov
push
mov
add
adc
mov
mov
mov
inc
or
mov
mov
mov
pop
or
jl
shr
jo
xor
cmp
jno
jecxz
adc
push
xchg
scas
js
cli
add
pop
cs
jp
mov
mov
cmp
push
xor
dec
je
cmps
pop
test
lds
jne
nop
mov
dec
sahf
add
inc
pop
popa
aam
mov
push
sbb
mov
pop
out
pusha
stos
rcl
ins
movs
arpl
and
repz
push
sbb
push
neg
outs
retf
out
out
(bad)
pop
xor
xchg
mov
or
jle
test
jle
and
sti
xor
fisub
jmp
sub
iret
inc
pop
or
xor
enterw
stc
out
hlt
cmp
stc
fcom
mov
and
imul
dec
std
stos
nop
ins
sahf
std
sysret
call
push
xchg
push
scas
or
sbb
mov
sahf
or
out
dec
sbb
fwait
je
push
sub
daa
in
lahf
push
out
mov
sub
sub
and
ret
and
push
xor
adc
and
pop
dec
bound
test
mov
out
rol
adc
in
push
or
dec
lea
(bad)
out
movzx
inc
cmps
mov
push
mov
scas
not
cmp
lods
sbb
cmp
fst
pop
iret
or
sti
and
or
call
cwde
xchg
add
mov
add
adc
das
aad
daa
push
xchg
dec
jnp
in
in
std
xchg
std
sub
fmul
jle
adc
aam
jae
fwait
retf
mov
std
aam
in
mov
jb
mov
aas
jge
dec
push
mov
test
sub
pop
push
push
stc
icebp
in
jg
lock
mov
push
push
retf
add
cmp
mov
dec
inc
leave
mov
hlt
pop
pop
xor
inc
mov
out
fistp
sbb
inc
push
and
and
push
sub
add
xor
pushf
repz
mov
fld
and
dec
and
add
(bad)
pop
sub
sub
dec
cwde
(bad)
jmp
sahf
mov
test
ror
ss
xor
mov
jnp
or
and
mov
mov
pop
pushf
xchg
xor
mov
jns
call
dec
mov
hlt
cmps
xlat
ss
stos
adc
je
cli
ds
test
jbe
dec
scas
mov
ins
frstor
jge
or
push
jge
and
and
int
call
in
xchg
aam
sahf
clc
lods
fdivrp
jmp
xchg
into
jmp
mov
aam
jecxz
xor
inc
xor
dec
lock
xchg
mov
dec
icebp
cdq
jp
popf
cmp
or
aas
and
cmp
push
loop
stc
nop
ficomp
push
(bad)
fbstp
adc
cmp
daa
pop
(bad)
adc
jp
jle
add
xlat
out
xor
cmp
cwde
cmp
in
jl
lock
(bad)
dec
inc
arpl
and
jg
iret
xchg
cld
push
ins
pop
addr16
jge
mov
test
sbb
lahf
mov
jne
ins
mov
lods
sbb
or
and
ficomp
add
int
call
jmp
stc
xor
(bad)
dec
push
xchg
rcr
imul
or
mov
cmp
rcr
cmp
pop
fadd
xchg
cmp
mov
std
xchg
ins
add
pop
sbb
mov
push
pop
cld
and
or
push
add
ds
mov
and
js
jno
sti
lods
sub
add
adc
js
das
mov
mov
mov
cmps
mov
test
jle
es
mov
jmp
pop
pop
and
jecxz
add
jg
push
fcomp
fwait
dec
mov
pop
cmp
pushf
retf
cli
fstp
jae
push
xor
repnz
push
xchg
cmp
mov
int
shl
addr16
lock
cmp
enter
test
add
sub
mov
sahf
lahf
dec
mov
popa
dec
fisubr
cmps
(bad)
adc
rcr
cmps
es
popf
dec
(bad)
ja
fisttp
out
mov
pop
jmp
or
adc
sbb
cmp
or
jl
push
sbb
loopne
aad
pusha
rcr
jmp
jb
mov
and
je
pop
mov
test
imul
push
sbb
inc
fsubr
jmp
call
xchg
scas
jns
jnp
mov
xchg
add
cmp
xor
mov
ds
add
add
(bad)
popa
mov
fisub
push
pop
out
sbb
or
repz
stos
(bad)
or
rol
shr
inc
or
out
cmp
mov
cmovb
mov
add
mov
push
mov
scas
cld
mov
jbe
sub
xchg
dec
mov
dec
lds
mov
call
inc
es
div
sti
out
mov
mov
pushf
push
xor
retf
xor
cmp
mov
retf
mov
icebp
jbe
test
add
mov
clc
jg
bswap
cld
das
or
repz
test
inc
scas
in
aad
(bad)
repz
es
adc
ret
ret
sar
int
mov
dec
adc
or
or
fwait
int3
add
pop
data16
jle
popa
ja
mov
imul
xchg
xor
cmps
outs
scas
fstp
aam
(bad)
cmp
mov
jnp
pop
or
jns
ins
lods
xor
in
inc
ins
mov
sub
rol
add
push
push
inc
add
iret
sub
sbb
out
pop
hlt
outs
push
jae
jo
xor
sub
mov
mov
mov
jp
mov
in
ror
cli
mov
inc
pop
stos
data16
dec
test
je
push
stos
mov
cmp
mov
mov
ds
lods
sub
loopne
mov
xchg
mov
and
mov
fwait
push
(bad)
sub
pop
repnz
xchg
ret
outs
hlt
xor
mov
dec
daa
add
pop
xchg
aam
push
pop
into
xchg
fiadd
or
xchg
jmp
ja
or
push
push
rol
iret
xor
nop
nop
push
xlat
fimul
cmp
clc
fstp
neg
mov
pop
xchg
cmp
pushf
mov
inc
scas
adc
iret
or
cmp
add
jne
jmp
retf
xchg
retf
mov
(bad)
(bad)
retf
dec
loop
pop
push
push
test
sub
call
sti
jmp
or
cvtps2pi
adc
dec
mov
dec
xchg
jge
ins
mov
and
ss
aam
ja
xchg
retf
sbb
mov
in
movs
rcl
sbb
jo
xchg
push
outs
mov
out
add
pop
into
cmps
mov
and
cmp
dec
out
mov
xor
stos
add
or
push
scas
movs
icebp
jmp
pop
(bad)
push
mov
test
gs
push
jp
or
jae
sar
cmps
sbb
retf
cmp
(bad)
cmp
je
aad
jge
mov
daa
mov
jae
jbe
int3
xchg
test
fnstsw
mov
cli
ret
inc
xchg
mov
pop
pop
mov
jb
fs
jno
in
adc
fsubr
jp
daa
or
adc
adc
adc
sub
out
cmps
dec
in
xchg
jns
jge
xor
mov
je
clc
in
pop
and
inc
inc
(bad)
out
repnz
fdiv
jp
call
loopne
(bad)
mov
dec
ror
lock
push
shl
loope
jne
repnz
cwde
push
pop
and
call
mov
popa
ret
hlt
jle
push
dec
ret
retf
add
pushf
xchg
stc
rcl
fld
cs
pusha
push
cli
out
mov
push
retf
(bad)
movs
push
mov
and
mov
sub
loope
sbb
adc
out
ins
jg
imul
jl
dec
cmp
ins
popf
mov
imul
mov
(bad)
mov
push
icebp
je
bound
sub
lds
pop
add
retf
pxor
ror
mov
xchg
in
test
jae
fcomp
jg
or
enter
repz
and
inc
add
imul
sbb
push
add
bnd
pop
fnstenv
fsub
pusha
arpl
aas
mov
cmp
mov
out
sbb
add
mov
jmp
repz
mov
or
mov
cmp
leave
scas
cmp
mov
mov
jbe
cmc
ficomp
cmp
out
push
adc
je
in
outs
xor
in
aad
pop
jne
mov
jmp
inc
pushf
mov
pop
xor
repnz
and
pop
test
mov
inc
push
icebp
int3
shr
les
in
(bad)
mov
gs
and
mov
ins
or
mov
(bad)
cmps
ins
mov
sub
cmp
push
out
push
test
inc
lods
test
inc
cs
xlat
mov
mov
xor
pop
scas
inc
xchg
sbb
and
mov
int3
adc
movs
xchg
mov
inc
fadd
das
add
add
sbb
(bad)
dec
cdq
call
jecxz
js
xlat
push
(bad)
out
movs
sbb
adc
push
add
imul
xor
mov
lock
add
cmps
dec
aaa
data16
dec
mov
popa
adc
inc
das
mov
mov
push
jne
(bad)
out
in
sbb
ins
mov
mov
stos
nop
pop
xchg
stos
add
push
lds
mov
dec
jb
clc
(bad)
scas
push
sar
jbe
nop
dec
fisubr
mov
xor
bound
mov
dec
mov
push
outs
(bad)
mov
(bad)
mov
dec
and
dec
sbb
mov
leave
movs
cmps
inc
inc
or
pop
sub
or
or
pop
into
inc
leave
mov
pop
mov
pop
gs
sahf
sbb
jno
rcl
pop
push
xchg
xor
bnd
ficom
fadd
mov
xlat
dec
inc
xor
sub
(bad)
fucomp
lea
jbe
hlt
aas
adc
jl
lods
out
ss
lock
fnsave
mov
gs
(bad)
cmp
adc
call
sbb
adc
movs
xor
test
jmp
hlt
sti
repnz
push
sbb
mov
test
ficomp
xor
pusha
popf
aaa
in
pop
loope
cmps
and
iret
push
mov
sub
xchg
adc
iret
inc
(bad)
jmp
(bad)
push
jle
jo
add
addr16
xor
inc
and
push
jle
inc
daa
out
jmp
int3
ror
bound
inc
lods
pop
jbe
dec
mov
test
call
jne
push
add
push
js
dec
leave
sbb
out
es
push
sub
call
in
out
mov
xor
cmps
iret
adc
jno
mov
jle
inc
test
loope
test
adc
lea
mov
mov
sub
retf
push
(bad)
jmp
cmp
(bad)
out
inc
icebp
sbb
sub
ja
push
rol
ficomp
pop
outs
rcr
push
mov
xor
push
outs
push
mov
test
cdq
nop
inc
cmp
scas
jae
pop
fidiv
jbe
xchg
aaa
add
sbb
push
test
and
nop
pop
mov
xor
nop
sbb
adc
adc
and
mov
mov
pop
(bad)
mov
fwait
sahf
cmp
shl
dec
xor
leave
or
es
sti
nop
outs
sbb
test
push
xor
mov
jl
mov
inc
mov
ror
sahf
lock
pop
enter
cs
loope
mov
mov
lea
push
cmp
lock
mov
mov
xor
push
das
xchg
in
or
in
stc
sti
stos
mov
gs
cmp
out
push
ret
fdiv
pop
repnz
inc
fist
jp
pop
mov
and
jno
add
lock
dec
add
push
inc
cmp
add
adc
es
sub
inc
loope
push
arpl
imul
out
clc
mov
repnz
jo
movs
inc
mov
inc
addr16
xchg
loopne
or
jb
adc
dec
add
call
xchg
pop
mov
int
ja
or
cmc
dec
add
out
sti
mov
xchg
sti
in
push
sahf
adc
sub
cmps
push
mov
pop
mov
pop
and
push
out
dec
imul
mov
sar
int
push
push
or
sub
aad
mov
and
pop
or
outs
fbstp
mov
popf
fisubr
cmp
jb
loop
mov
mov
and
xor
test
sub
aad
pop
imul
push
ret
pop
bound
pop
jne
lods
mov
jnp
lock
sub
xor
(bad)
ret
bt
cmp
retf
movs
retf
addr16
adc
adc
fistp
or
push
popa
jb
popf
sub
pop
xor
addr16
cld
lea
aaa
dec
rol
xor
out
dec
movs
fadd
mov
inc
(bad)
retf
xchg
and
lea
dec
les
inc
cmp
fidivr
out
push
xchg
loope
enter
dec
jp
inc
xlat
mov
or
sub
ror
loopne
add
pop
fs
icebp
stos
(bad)
out
jp
lods
shr
sub
das
sbb
adc
lock
push
int
mov
and
test
push
inc
xor
and
retf
sbb
adc
into
shl
adc
sub
sbb
ins
pop
and
cdq
outs
not
cwde
or
dec
xor
xchg
popf
div
adc
mov
xchg
jb
pushf
jmp
inc
rcr
or
sbb
dec
(bad)
test
adc
or
adc
sbb
cdq
cmps
(bad)
jae
cmp
xchg
sub
and
hlt
hlt
leave
pop
sahf
xor
loop
popf
lahf
clc
xchg
mov
scas
into
sub
jb
pop
dec
outs
loope
dec
push
sahf
int
popa
cmp
mov
jg
test
sub
aad
add
xchg
rcr
fs
sub
dec
inc
hlt
or
xchg
ins
pushf
shl
push
pop
mov
mov
mov
outs
add
ss
or
mov
pop
push
std
jnp
js
iret
xchg
movs
xchg
mov
push
push
push
mov
xchg
inc
mov
stos
xchg
mov
mov
cmp
mov
mov
xchg
hlt
test
cs
lds
fiadd
leave
and
iret
jmp
cs
clc
pushw
sbb
gs
push
sub
pushf
nop
inc
lea
sub
aam
rcr
leave
push
mov
(bad)
dec
xchg
test
xchg
sbb
and
popf
lea
xor
mov
sbb
shr
push
and
bound
xor
je
push
mov
int
push
jge
or
hlt
repz
sub
lock
mov
xchg
xor
pop
movs
cmc
stos
je
in
adc
and
les
pop
mov
(bad)
out
push
das
ror
movs
mov
bnd
fcom
sbb
(bad)
cdq
imul
pusha
call
inc
push
scas
cmp
ret
inc
sbb
loope
jp
imul
and
mov
fcom
test
imul
dec
jae
imul
mov
xchg
mov
jl
mov
dec
jl
cmc
dec
ss
xchg
lahf
dec
mov
cwde
push
and
test
ror
mov
mov
dec
scas
jo
mov
inc
rcr
pop
mul
add
mov
sub
cs
js
sbb
repz
pop
mov
jecxz
(bad)
movs
stc
cmp
adc
fisttp
(bad)
cli
stc
or
push
cmp
cmp
sti
ss
and
mov
mov
int3
mov
(bad)
shl
pusha
scas
retf
mov
rcl
mul
jp
outs
inc
push
pushf
dec
dec
imul
jae
cmp
or
std
dec
sub
std
jmp
dec
jl
xor
ds
mov
mov
mov
add
xor
ins
inc
outs
inc
popa
adc
retf
cwde
(bad)
push
mov
or
add
dec
add
jnp
jo
add
and
lea
outs
pushf
cmp
mov
pop
mov
pop
jle
mov
fwait
arpl
mov
add
adc
sbb
in
loopne
jl
dec
ds
pop
sbb
icebp
icebp
int3
into
push
imul
mov
xchg
fcom
shl
push
mov
movs
out
(bad)
add
fisttp
mov
push
sbb
adc
fbstp
jge
xor
in
add
pop
or
push
sbb
add
xchg
xchg
or
mov
ret
adc
jns
dec
mov
jbe
call
arpl
xchg
mov
imul
inc
add
cmps
xor
inc
mov
or
push
aaa
dec
xor
(bad)
out
inc
jne
mov
mov
cmp
daa
dec
and
sbb
cmp
inc
shl
cwde
xor
or
xor
imul
jnp
loop
aas
add
int3
adc
dec
je
dec
jns
(bad)
xchg
xlat
push
aam
(bad)
clc
mov
mov
cmps
out
mov
xchg
dec
jo
jmp
int3
es
lds
loope
pop
cmc
cmp
mov
ret
sbb
retf
mov
push
pop
aas
jp
sbb
scas
push
jp
aad
dec
les
mul
sahf
jns
push
sub
and
xchg
sub
push
repnz
lahf
mov
mov
mov
cmp
or
into
ins
sahf
fs
xchg
fucomip
mov
ret
addr16
in
cld
xchg
sub
popa
xlat
mov
sbb
adc
(bad)
shl
xor
jns
ficomp
sub
(bad)
push
sbb
pop
stos
fidivr
pop
mov
sbb
fdivr
das
sbb
mov
cmp
pop
outs
mov
xor
ss
and
inc
mov
pop
fst
pop
sub
pusha
or
(bad)
repnz
adc
gs
adc
ja
sub
xor
leave
(bad)
cmp
out
mov
in
sahf
mov
(bad)
sub
or
xchg
sbb
sub
pop
outs
cmc
pushw
iret
imul
fimul
xor
push
fist
cmp
inc
mov
int3
adc
leave
mov
sub
sbb
adc
idiv
clc
cmp
push
mov
adc
outs
jno
or
xchg
mov
jl
loope
or
and
test
idiv
sub
sti
test
not
jns
clc
ret
ins
inc
test
cmps
fmul
sub
jge
sbb
or
jmp
xchg
push
fld
sub
mov
aaa
mov
push
stos
rol
push
call
(bad)
(bad)
sti
xchg
call
sub
dec
push
outs
inc
inc
bound
aas
inc
mov
mov
sub
scas
pop
dec
dec
inc
xor
es
inc
push
mov
cwde
nop
jle
jl
sub
mov
add
or
or
repz
ds
sbb
inc
pop
push
retf
iret
gs
adc
(bad)
jmp
jns
scas
jle
movs
mov
cmp
aaa
jb
xchg
mov
xchg
scas
popa
icebp
aaa
mov
fst
push
cmp
loopne
dec
ret
mov
inc
pusha
inc
sbb
jbe
or
ror
scas
outs
loope
sub
jl
div
adc
xchg
jecxz
mov
push
popf
mov
xor
in
fs
fimul
es
jne
imul
jo
test
test
push
adc
inc
mov
or
fwait
in
outs
out
sub
cmp
shl
repnz
fcom
adc
rol
rcl
mov
mov
jecxz
popa
push
cli
sbb
mov
ds
sbb
js
dec
popf
dec
mov
(bad)
loop
js
push
and
jecxz
inc
and
mov
arpl
inc
cmp
or
mov
sub
fnstsw
inc
mov
add
mov
adc
add
mov
add
inc
xchg
idiv
retf
pop
push
or
mov
shl
les
jp
pop
jns
loopne
inc
int
and
xor
inc
in
sbb
dec
mov
xchg
std
dec
ret
xchg
(bad)
int3
shl
xlat
push
mov
lea
jnp
pop
jne
mov
cmp
or
xor
and
(bad)
rcl
push
sub
push
out
pop
call
or
xchg
jbe
mov
mov
push
mov
test
es
(bad)
sbb
call
loop
sub
push
inc
icebp
call
(bad)
mov
xor
cmp
in
cmp
stos
sub
imul
pop
xchg
jae
dec
int
(bad)
fmul
jg
push
loope
dec
ror
popf
nop
dec
dec
xor
mov
sbb
lods
xchg
cmc
adc
adc
xor
sub
icebp
xchg
jns
aas
cmp
xchg
loop
(bad)
in
mov
stos
rcr
fcomp
push
test
cli
push
imul
xor
xor
test
dec
push
push
out
or
mov
xchg
sbb
into
dec
xchg
mov
xlat
adc
ret
das
dec
lods
inc
aas
(bad)
jnp
jo
shl
and
jne
fwait
adc
sub
push
std
add
jae
pop
fwait
out
pop
mov
into
xchg
pop
lds
mov
pop
cmps
mov
cmp
cmps
or
pop
repnz
pop
cld
jae
jno
ins
std
xor
nop
rcl
cmps
dec
js
and
repnz
adc
fcmovu
adc
mov
jb
cmp
loopne
cmp
scas
jae
std
xchg
add
push
mov
sbb
mov
xchg
lock
(bad)
ds
inc
cli
(bad)
dec
push
aas
sub
mov
jns
in
cmp
inc
xor
test
sbb
stc
pop
mov
dec
mov
ja
lea
and
sub
mov
loop
add
and
outs
scas
xlat
and
lods
in
pop
xchg
inc
out
xlat
xchg
out
mov
enter
pop
jl
jle
jae
cwde
mov
add
adc
sbb
pop
push
jno
inc
xchg
cmp
loope
jle
es
jge
adc
sar
or
xchg
cld
loop
into
cld
sub
cld
iret
pushf
test
adc
test
out
xor
pop
popa
imul
xchg
mov
popf
add
pop
outs
data16
push
addr16
std
addr16
pcmpeqd
cmp
mov
fcom
xchg
std
idiv
and
pop
hlt
push
jl
shr
ret
xchg
sub
lods
inc
and
fcomp
mov
into
popa
retf
cmp
pushf
jae
stc
jns
leave
adc
and
repnz
jnp
xor
xor
leave
adc
push
cld
repnz
mov
push
(bad)
aad
mov
inc
xor
aas
(bad)
repnz
mov
fdivr
adc
cld
mov
pushf
aaa
cmps
mov
iret
adc
mov
leave
rcr
cmps
je
shl
in
popf
inc
data16
adc
iret
test
push
stos
lock
fidiv
pop
hlt
or
or
push
dec
add
xchg
sbb
lea
dec
pop
inc
hlt
std
fs
pop
rol
mov
call
iret
sbb
jp
xchg
adc
outs
(bad)
imul
push
mov
loope
call
hlt
jmp
push
sub
das
inc
and
iret
cmp
cmp
xor
add
orps
in
pop
mov
inc
pop
xor
xchg
or
inc
leave
cmp
retf
mov
movs
imul
mov
loope
fcom
cmp
pop
(bad)
adc
(bad)
aas
repnz
dec
pop
cmp
jmp
push
cmp
xor
mov
push
mov
adc
aad
jmp
mov
push
mov
sbb
ss
fsubr
jg
add
icebp
mov
push
mov
lods
sub
inc
mov
(bad)
in
cli
jmp
pop
add
mov
fsubr
rcl
adc
cmp
int3
jg
sbb
mov
inc
ja
push
sub
jno
mov
pop
das
dec
adc
fimul
cmps
mov
ins
in
jecxz
push
pop
dec
icebp
jp
and
out
xor
xchg
push
js
cmp
or
in
pop
jmp
sub
sub
test
mov
gs
inc
sub
(bad)
cwde
div
fldenv
and
mov
cmp
inc
push
inc
inc
enter
mov
sub
test
stc
fisub
mov
cmp
xchg
xchg
cwde
mov
or
movs
test
pop
push
xor
pop
add
jge
ret
sbb
int
fldcw
leave
add
xchg
mov
xor
xor
and
sbb
pop
imul
pop
dec
mov
xchg
aam
call
mov
push
int3
xchg
xor
sar
mov
and
into
jecxz
pop
stos
pop
out
int
inc
push
push
push
pusha
push
popa
jmp
out
mov
pop
fdivr
lods
sub
jnp
xchg
jo
sbb
popf
js
test
mov
in
mov
pop
jae
sbb
jp
add
push
gs
sti
daa
sbb
ins
mov
test
shl
in
retf
xchg
data16
mov
mov
xchg
imul
sub
and
inc
iret
imul
xchg
movs
mov
aas
sti
mov
sub
pushf
and
mov
dec
test
xchg
into
pop
fidivr
mov
jl
rcl
xor
push
push
arpl
cmp
adc
test
mov
push
pop
pop
cmp
aaa
cmp
mov
mov
cmp
js
cld
fs
fcmovnbe
in
addr16
or
sub
stos
cmps
add
pop
(bad)
cmp
sbb
pop
vmwrite
arpl
sbb
pop
outs
dec
jecxz
xchg
mov
mov
push
jo
loop
inc
daa
xor
sahf
jo
or
dec
sub
es
push
xchg
pop
jp
stos
inc
add
xchg
mov
inc
xchg
jl
ja
pop
pop
test
test
js
add
push
int3
xchg
mov
cwde
lea
(bad)
daa
mov
jno
inc
loopne
or
jmp
inc
movs
iret
pop
add
int
pushf
std
nop
add
inc
push
leave
cmc
mov
dec
push
je
sbb
gs
shl
push
in
scas
push
xor
aaa
mov
xchg
loope
or
fst
jns
and
loope
repz
out
or
out
(bad)
pop
jp
sub
cmp
cmps
enter
shl
popf
daa
push
in
dec
sbb
mov
push
ret
xchg
aam
push
dec
sbb
mov
ret
sbb
pop
or
or
fldenv
mov
dec
(bad)
fdiv
adc
push
xor
retf
div
(bad)
inc
retf
dec
xchg
sub
sub
dec
ret
add
dec
fild
inc
mov
retf
ss
push
jg
push
or
in
sub
out
ins
xor
clc
retf
push
retf
dec
mov
call
pop
sub
sbb
retf
jge
enter
push
xchg
adc
sahf
mov
cld
hlt
pop
cmp
inc
xchg
push
sub
shl
sub
inc
and
push
cs
rol
mov
adc
sub
outs
or
jo
xor
and
sti
dec
push
inc
mov
mov
jo
je
sbb
mov
or
sar
cmp
inc
inc
fadd
sub
pop
mov
mov
imul
mov
pop
imul
enter
xor
mov
cmp
jns
ret
loopne
pop
push
scas
sub
and
pop
adc
add
pop
cmp
rol
movs
mov
loopne
push
xor
jmp
xchg
xchg
jbe
repnz
cmc
mov
fs
loopne
push
xor
dec
jmp
pop
hlt
jl
rcl
inc
sahf
and
(bad)
movs
jmp
outs
mov
outs
and
add
and
adc
mov
mov
cmps
cwde
cmps
nop
cmp
sub
or
cmp
push
inc
xchg
cs
cmp
fisub
shr
and
and
into
sub
push
sbb
nop
sub
scas
push
push
aad
(bad)
xchg
and
mov
sbb
sbb
(bad)
pop
or
and
pusha
(bad)
push
lock
repnz
call
enter
adc
rcl
xchg
(bad)
das
jg
and
ret
call
add
mov
or
push
add
imul
fild
add
pop
sub
sbb
mov
popa
(bad)
dec
pop
mov
icebp
mov
jl
push
ficom
add
mov
jnp
pop
in
add
push
cli
pop
(bad)
sub
loope
mov
or
popf
fcmovbe
aad
in
mov
cmps
cwde
sbb
sbb
mov
int
das
sahf
(bad)
sti
test
loop
loopne
sub
stos
pop
add
xchg
in
sbb
sub
pop
xchg
hlt
outs
pushf
sub
stc
outs
test
out
test
xor
iret
and
dec
repz
sti
leave
xor
mov
jb
sub
popa
xchg
mov
bound
fst
mov
pop
xchg
pop
sub
lahf
test
cmp
in
int3
ss
mov
int3
mov
xor
mov
movs
dec
lea
nop
pop
not
outs
and
cli
(bad)
sbb
imul
inc
lock
lea
fist
mov
loopne
in
hlt
fwait
sbb
xchg
adc
imul
add
rcl
test
xchg
inc
adc
push
lock
shr
mov
lahf
xchg
pop
pusha
ret
push
pop
loop
cmp
retf
jo
data16
and
stos
fisttp
mov
or
mov
lock
cli
jno
mov
pop
jl
inc
push
fwait
call
fs
push
(bad)
mov
xor
inc
pusha
mov
int
add
or
(bad)
push
sbb
mov
push
push
pop
dec
inc
lods
cmp
cmp
mov
shr
loop
adc
mov
shr
mov
cmp
mov
inc
out
ret
push
in
jmp
jne
test
outs
dec
inc
scas
popf
dec
sub
push
popa
pushf
xlat
add
into
mov
xor
mov
in
std
mov
mov
mov
neg
pop
nop
(bad)
add
mov
pop
imul
xchg
loope
sbb
and
aaa
jp
stos
jle
into
mov
mov
inc
xchg
xor
jle
sbb
push
out
inc
aad
pop
call
push
es
cdq
in
lahf
ret
les
jns
stos
jge
jle
cli
retf
add
sub
sar
(bad)
mov
dec
xchg
icebp
stos
out
xlat
cmp
jle
ins
rcr
sub
mov
enter
push
call
push
jge
or
in
xor
jns
push
aad
js
xor
jmp
lock
cs
adc
and
xchg
not
jp
test
dec
jae
sub
dec
and
(bad)
mov
fnsave
sti
sbb
dec
ficom
aam
mov
ret
daa
jbe
or
enter
or
fs
mov
stos
repz
mov
mov
pop
mov
push
mov
ins
fs
inc
push
mov
fwait
mov
lods
add
mov
cwde
daa
mov
movs
shr
shl
idiv
mov
out
test
frstor
mov
arpl
xor
pop
arpl
call
test
in
and
clc
repnz
movs
inc
mov
add
(bad)
fld
pop
ds
push
movs
out
mov
test
and
and
in
jb
aaa
pop
das
mov
xlat
sbb
xchg
push
jle
or
aam
xlat
ins
arpl
jne
cmps
sub
rcl
push
xchg
out
addr16
std
xchg
cwde
inc
fimul
ja
mov
jmp
nop
and
push
stc
jne
pop
adc
inc
inc
sbb
idiv
pop
aaa
xor
sub
mov
test
pop
inc
xor
jmp
hlt
loope
cmp
(bad)
int3
xchg
push
xor
je
iret
call
or
fwait
inc
mov
das
std
daa
test
test
cmp
cmc
mov
data16
sub
(bad)
dec
out
pop
sub
sar
fstp
lods
imul
inc
cld
sbb
pop
(bad)
pusha
pop
push
mov
adc
pop
push
pop
and
sti
push
mul
hlt
xchg
ret
jle
loope
and
inc
mov
push
add
ret
cmp
mov
fcom
sbb
(bad)
jmp
push
lds
mov
push
and
mov
push
sar
scas
push
inc
xchg
pop
inc
jnp
lea
out
sub
and
ja
in
pop
push
sbb
jge
test
dec
jle
ficom
push
pop
mov
ins
cmps
lsl
dec
push
inc
inc
adc
(bad)
call
popf
xchg
push
retf
adc
mov
or
inc
pop
dec
xchg
adc
mov
lahf
mov
push
adc
out
mov
test
retf
cdq
and
call
std
jae
outs
cdq
push
mov
mov
scas
movs
mov
dec
or
clc
fistp
movs
les
hlt
xchg
hlt
jbe
mov
fiadd
leave
or
pop
sub
sub
and
adc
popa
cmp
aaa
retf
fisttp
push
les
cli
retf
adc
mov
out
mov
xchg
xor
in
sbb
xor
pop
jne
push
das
mov
mov
sub
xchg
jbe
neg
cmovae
enter
pop
bsr
mov
sbb
das
nop
loopne
inc
pop
repz
mov
mov
data16
mov
mov
scas
leave
cmps
imul
icebp
cmps
call
push
mov
int
repz
xor
pop
mov
add
(bad)
aad
in
cmps
mov
sbb
jecxz
xchg
mov
adc
fist
out
into
cld
test
cwde
dec
lds
mov
sahf
outs
(bad)
sub
lahf
xor
retf
in
es
hlt
mov
cs
std
aam
adc
mov
or
and
adc
pusha
dec
rcl
mov
loopne
inc
cmp
add
jbe
jmp
ss
rcl
adc
fisub
or
fist
dec
(bad)
push
xor
mov
stos
mov
sbb
jle
push
or
arpl
loop
dec
xchg
push
je
sbb
aad
shl
scas
inc
mov
add
idiv
mov
push
and
inc
les
(bad)
fiadd
and
cmp
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
mov
js
xchg
xor
fist
or
mov
inc
fmul
sub
add
add
add
add
add
and
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
