call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
jmp
mov
jbe
test
mov
neg
jecxz
xor
fnstsw
cld
stos
or
pop
xor
fidivr
std
addr16
cmps
push
mov
out
ja
lds
shl
stos
xchg
xchg
jnp
ret
push
mov
ss
ja
retf
je
cld
pop
dec
stos
call
out
ss
sub
je
add
mov
inc
cmps
(bad)
cli
test
neg
xchg
aam
sbb
sub
sub
jbe
lds
jecxz
not
cmp
das
adc
adc
mov
std
loop
xor
inc
das
xchg
inc
and
jae
and
psllq
loopne
das
nop
ds
ins
aad
sbb
movs
push
repz
or
push
cmp
dec
xor
ins
rol
and
stos
or
push
cmp
in
je
mov
lods
pop
inc
stos
push
aas
lahf
mov
int
fmul
sub
mov
mul
mov
inc
stos
xchg
repnz
xchg
shl
faddp
xor
ret
ja
add
neg
aas
in
xor
fs
scas
xchg
sti
stos
mov
aam
out
aaa
pop
js
mov
hlt
jecxz
pop
shl
xor
test
mov
hlt
loopne
sub
ret
mov
sti
fadd
mov
aad
push
mov
(bad)
cmps
adc
mov
fwait
inc
sub
ret
test
mul
fild
retf
cmp
aam
mov
xor
jecxz
shr
(bad)
repnz
cli
out
add
call
or
sbb
ds
stc
push
sbb
jns
fimul
mov
lods
jns
loop
outs
add
lods
lds
push
outs
sub
adc
icebp
add
daa
and
xchg
lods
sbb
mov
adc
sub
fisubr
gs
pop
out
lahf
lods
stc
xchg
cwde
and
adc
in
sub
leave
fadd
stc
int3
push
fadd
in
sub
dec
pop
xor
dec
pop
fcomp
xor
adc
add
ret
push
pop
(bad)
fs
aad
jle
or
sub
adc
push
pop
shl
sub
cwde
shl
pop
mov
push
fsub
loop
xchg
out
xchg
loopne
movs
push
and
push
out
sub
scas
xor
test
pop
and
mov
aas
pop
jg
int3
lods
pop
xchg
adc
mov
lods
cli
in
sar
cmp
ds
jns
jo
xchg
stos
daa
xchg
mov
add
in
mov
cmps
add
push
adc
or
(bad)
cli
cs
xor
pop
sahf
es
push
es
push
jno
cwde
pop
outs
fcomp
mov
es
push
es
push
es
push
ins
in
cdq
jge
scas
adc
es
push
ins
out
cdq
jge
add
mov
es
push
es
push
loop
xchg
lahf
ins
call
cmp
es
push
es
push
es
loope
in
sbb
fcom
aam
push
fmul
addr16
lds
jecxz
xchg
arpl
aam
push
es
push
ins
loop
pop
outs
fisttp
mov
jno
cdq
pop
outs
pushf
or
mov
mov
es
push
es
push
ds
cdq
push
outs
aam
mov
es
push
jno
cdq
pop
outs
aam
mov
fstp
imul
fcom
aam
push
xchg
pop
push
es
push
es
loope
jmp
xchg
mov
es
push
jno
cdq
pop
out
sbb
in
sbb
sbb
call
aam
push
es
push
in
adc
sahf
outs
aam
popf
es
push
icebp
enter
fcomp
mov
es
push
es
push
es
in
iret
popf
fcom
es
push
sbb
mov
es
push
es
push
es
push
sub
fcom
es
push
es
loope
out
sbb
fcom
aam
push
es
xchg
push
in
adc
cmp
xchg
sbb
cmp
lahf
push
outs
test
mov
cmp
push
mov
repz
xchg
xor
lock
loope
ins
enter
pop
in
leave
repnz
pop
popf
fldenv
sbb
clc
dec
xor
outs
pop
(bad)
int3
pop
mov
adc
ror
xchg
pop
rcr
adc
or
ins
pop
dec
xchg
push
sbb
add
movs
stc
int3
sub
mov
or
lods
es
out
add
cs
add
sbb
lsl
xchg
adc
sbb
dec
sbb
pop
xchg
add
mov
mov
lods
and
or
in
mov
stc
push
cmp
fiadd
sbb
pop
jne
pop
into
sbb
inc
add
xchg
out
daa
das
in
stos
ds
dec
(bad)
call
cmp
(bad)
pushf
and
hlt
or
sub
mov
lahf
daa
stc
das
lds
jmp
retf
out
mov
fldenv
sbb
daa
lsl
sbb
int3
xchg
sub
cmp
pop
shl
rol
push
dec
test
(bad)
sbb
pop
pop
pop
xchg
sti
mov
cmp
push
clc
jns
pop
stos
jns
add
pop
cli
daa
and
mov
sub
jns
add
in
mov
sbb
fsubrp
jmp
mov
daa
or
mov
test
xchg
jno
imul
push
enter
(bad)
call
push
(bad)
call
cmc
sbb
pushf
xor
mov
shl
pop
push
int3
or
mov
test
pop
mov
dec
sar
test
pop
mov
loope
xor
pop
mov
test
adc
add
add
mov
test
pop
ins
ret
add
mov
test
pop
not
mov
adc
or
cdq
movs
and
cli
test
xchg
mov
test
pop
mov
push
mov
in
jle
inc
ja
jns
in
aam
push
jns
ror
jl
dec
cmc
aam
idiv
shl
mov
and
(bad)
test
inc
adc
(bad)
lahf
pop
aaa
or
(bad)
stc
sub
sti
pop
sub
fcom
pop
mov
fwait
adc
fcom
pop
mov
xchg
adc
jb
adc
fidivr
mov
xchg
adc
fcom
adc
or
sar
fidiv
push
fistp
popf
fcomp
fistp
(bad)
fnstcw
(bad)
aas
mov
shl
xor
pop
ret
jne
pop
repz
daa
stc
fcom
sti
mov
xchg
adc
jo
lods
jns
add
jp
mov
sbb
jns
(bad)
jns
ins
fdivr
rcr
xchg
cmp
aam
gs
das
fcomp
fst
pop
retf
in
dec
fsub
stos
cmp
stos
shr
sub
inc
jne
enter
scas
jns
xchg
cmp
test
add
sub
jl
xor
clc
dec
mov
dec
adc
inc
sbb
gs
dec
mov
dec
sbb
sbb
lahf
fwait
push
cs
mov
or
ins
jbe
div
stos
sub
xchg
adc
jl
sbb
ja
pop
xchg
push
arpl
cdq
aam
je
push
sbb
shl
cmp
push
(bad)
(bad)
adc
xchg
push
scas
mov
mov
cmps
mov
(bad)
loopne
mov
imul
ja
je
adc
aam
jmp
out
cmp
lock
jmp
push
inc
mov
sub
je
sub
fwait
pop
sub
jl
pop
fdivr
cdq
cmps
adc
pop
mov
sub
jg
push
aam
shl
lods
push
sahf
pop
push
retf
xchg
in
xchg
sar
jno
mov
jp
into
push
xchg
clc
in
xor
loopne
jbe
cs
not
pop
push
mov
jmp
sbb
xchg
xchg
mov
cli
xchg
stos
imul
and
popf
test
push
jle
xchg
leave
push
imul
ds
push
inc
in
aam
jns
mov
ja
shl
push
ret
pushf
jp
adc
jb
arpl
out
lods
addr16
scas
out
dec
adc
jp
xor
addr16
lods
out
out
test
jp
jno
data16
arpl
out
lods
addr16
lods
out
out
test
jp
push
jnp
jb
arpl
out
lods
out
out
test
jp
mov
data16
arpl
out
lods
addr16
scas
out
dec
adc
cli
jb
jnp
jmp
out
scas
out
dec
adc
cli
jb
jnp
jmp
icebp
out
test
jp
xor
cdq
jle
push
mov
sbb
cmp
out
in
call
scas
pop
mov
pop
shr
addr16
stos
bound
out
lods
addr16
lods
addr16
jns
data16
addr16
lods
out
out
leave
fcomp
sub
pop
repz
out
mov
out
lods
addr16
lods
addr16
test
out
test
fcom
jp
inc
jns
mov
jmp
jo
dec
sub
jns
xor
pop
jmp
lods
addr16
lods
out
ds
jmp
lods
addr16
lods
out
jle
inc
dec
rol
fcom
cdq
adc
cdq
sub
dec
push
xor
pop
jmp
lods
out
ds
jmp
stos
ja
dec
sbb
mov
test
call
or
cmc
sar
rcr
push
(bad)
and
push
push
arpl
out
lods
addr16
lods
out
ds
out
lods
addr16
lods
addr16
sub
add
xor
fsub
cmp
popa
push
test
jb
jnp
jmp
fsubrp
test
out
cmc
arpl
out
lods
addr16
out
ins
and
cmps
sub
shr
mov
out
pop
or
xor
pop
jmp
scas
out
cs
rcl
jae
add
push
lods
addr16
lods
addr16
push
push
adc
out
lods
addr16
lods
addr16
out
scas
addr16
ins
jg
out
lods
addr16
lods
addr16
scas
addr16
jae
stos
push
sub
jecxz
xor
pop
pop
mov
push
ss
cmp
sub
jecxz
push
nop
jecxz
push
push
sti
loop
jns
loop
xor
addr16
lods
out
out
push
jb
adc
js
in
jmp
lods
out
out
lods
cmps
fwait
push
fdiv
bound
sub
lods
addr16
lods
out
out
leave
pop
pop
adc
lahf
push
adc
add
sub
lods
addr16
lods
addr16
lods
out
ds
add
jb
arpl
out
lods
out
out
test
aad
mov
mov
cmp
mov
jns
pop
shr
movs
xor
pop
aam
cli
ins
leave
sub
inc
jmp
sub
loope
lods
add
push
aas
nop
ins
sub
jl
sub
std
dec
and
sbb
inc
inc
inc
sbb
sbb
mov
cdq
out
cmp
loope
push
fwait
add
shr
sbb
sub
scas
xchg
sti
rol
lods
cmc
mov
mov
pop
xlat
mov
imul
in
outs
jbe
movs
icebp
ficomp
test
ret
sbb
or
shl
and
dec
mov
xor
aam
push
shl
lock
jmp
in
fs
test
mov
xchg
xchg
mov
mov
mov
jo
jbe
repz
push
out
jecxz
scas
cs
sub
jno
xchg
and
es
mov
cli
push
sahf
jae
aad
ja
sbb
inc
shl
sti
jle
popf
xor
int3
jmp
es
sbb
jns
pop
les
jne
or
cli
jle
push
mov
into
aad
pop
lods
imul
pop
push
pusha
sahf
pushf
inc
jo
movs
imul
ins
sbb
xchg
sbb
lahf
mov
sti
(bad)
add
add
arpl
mov
push
sub
pop
data16
mov
xchg
push
inc
leave
cmps
sbb
cmc
ja
mov
dec
shl
movs
fiadd
sbb
cmp
mov
pushf
xchg
ds
xchg
mov
sbb
adc
pushf
xchg
ds
xchg
mov
pushf
adc
pushf
xchg
ds
xchg
mov
cmp
(bad)
xchg
sbb
and
adc
mov
adc
pushf
sbb
ds
xchg
mov
sbb
imul
xchg
fadd
adc
sub
dec
repz
cmp
add
mov
in
xchg
add
xchg
out
mov
popf
add
pop
and
cmp
or
pop
out
sbb
mov
add
(bad)
and
adc
mov
cmp
sbb
mov
pushf
xchg
ds
xchg
push
pushf
xchg
ds
xchg
ds
xchg
ds
push
(bad)
xchg
ds
xchg
les
adc
pushf
xchg
ds
xchg
mov
dec
or
icebp
add
adc
pushf
xchg
ds
xchg
ds
inc
sub
xchg
mov
sbb
adc
pushf
xchg
ds
pop
mov
adc
fsub
push
xor
xchg
ds
xchg
ds
xchg
push
pushf
xchg
mov
sbb
pop
cmp
outs
add
div
sbb
adc
pushf
xchg
ds
xchg
mov
add
out
add
cwde
push
mov
pushf
xchg
ds
xchg
fadd
adc
mov
pop
ds
mov
pushf
xchg
add
sbb
mov
pushf
xchg
jg
sbb
xchg
adc
pushf
xchg
mov
sbb
adc
test
loop
mov
sbb
adc
test
loop
and
stos
cmp
xchg
ds
push
mov
xor
js
pop
retf
mov
(bad)
and
sbb
retf
mov
mov
sbb
xlat
lds
pop
mov
cmp
(bad)
and
xor
push
cmp
pop
pop
imul
xor
fst
sbb
mov
xor
imul
ja
inc
in
mov
cmps
push
and
sti
sbb
sbb
inc
(bad)
fmul
fsub
(bad)
stos
std
ja
cmp
jmp
fidiv
push
mov
cmps
push
inc
test
inc
in
or
jno
sub
into
jp
fidivr
lods
test
sub
sub
lods
mov
cs
mov
call
imul
je
loopne
dec
inc
sub
fwait
daa
clc
cmp
fsubr
mov
mov
mov
push
neg
movs
mov
mov
mov
cli
push
xchg
pushf
(bad)
in
dec
xchg
mov
aas
in
xor
enter
pushf
test
lock
out
dec
rol
sti
lahf
in
mov
mov
stos
xchg
mov
push
sub
push
sub
sti
cs
push
icebp
psadbw
mov
out
cmp
push
pop
cmps
ja
pop
xchg
sub
mov
dec
jo
cld
jle
inc
mov
jne
shr
pop
imul
pop
cmps
mov
pop
push
add
pop
xchg
ror
sbb
sub
xor
sub
cld
fdivp
jg
push
adc
pop
jp
cmp
js
shl
aas
inc
cmps
mov
out
mov
xchg
jp
into
sub
(bad)
(bad)
xchg
jp
into
sub
(bad)
(bad)
xor
mov
jmp
cmps
bnd
xchg
imul
inc
aas
out
xchg
imul
cli
mov
into
mov
lds
push
cmps
lds
push
cmps
lds
push
cmps
lds
push
cmps
lds
push
cmps
lds
push
cmps
lds
push
cmps
lds
push
cmps
lds
push
cmps
lds
push
cmps
lds
push
cmps
lds
cmp
pop
imul
xchg
sbb
into
sub
movs
(bad)
xchg
imul
lds
call
cmp
je
fld1
idiv
pop
adc
movs
pop
xchg
imul
lds
call
cmp
je
pop
adc
mov
cmp
hlt
cmp
hlt
arpl
je
ds
imul
lds
call
cmp
je
fldcw
idiv
pop
adc
arpl
je
mov
xchg
or
mov
and
pop
adc
bound
je
fisttp
cmp
hlt
cmp
ret
mov
mov
and
cmp
mov
cmp
hlt
cmp
je
fldcw
mov
pop
adc
imul
lds
call
and
je
fimul
cmp
je
pop
fsubr
(bad)
mov
xchg
fwait
cmp
mov
imul
jmp
or
mov
pop
adc
mov
pop
in
jmp
loope
mov
ins
lock
loope
nop
fsubr
frstor
mov
lds
enter
lock
hlt
cmp
hlt
or
push
adc
pop
adc
cmp
hlt
cmp
je
or
call
cmp
hlt
inc
pop
loope
pop
in
jmp
adc
cmp
hlt
pop
icebp
cdq
out
stc
dec
adc
lock
mov
pop
adc
cmp
hlt
or
das
mov
pop
adc
cmp
hlt
cmp
je
aad
sub
in
push
xchg
in
lds
cmp
hlt
arpl
je
fist
retf
adc
cmp
hlt
cmp
je
jmp
test
imul
pop
adc
adc
je
repz
cmp
hlt
cmp
hlt
adc
je
repz
loopne
pop
adc
cmp
je
pop
mov
hlt
jae
adc
enter
mov
movs
xchg
mov
cmps
test
inc
pop
in
push
aas
and
cmp
je
pop
adc
(bad)
int3
mov
pop
adc
outs
pop
adc
mov
pop
adc
push
pop
loope
mov
ins
lock
loope
xchg
pop
out
fldcw
push
stos
jmp
cmp
and
mov
pop
adc
cmp
je
leave
xchg
pop
xchg
js
dec
mov
push
xchg
retf
les
retf
push
adc
pop
adc
cmp
je
leave
mov
cmps
test
mov
out
push
es
jmp
aas
fisttp
cmp
hlt
sub
je
sub
push
idiv
pop
adc
cmp
je
loope
sub
fimul
imul
mov
cmps
test
retf
retf
les
jmp
cmp
hlt
xor
les
nop
xor
mov
mov
xchg
cdq
jmp
rol
(bad)
je
movs
push
lahf
jmp
mov
es
daa
jg
or
xor
add
fs
dec
jo
movs
imul
(bad)
jno
mov
fiadd
inc
int3
fidiv
jle
mov
mov
inc
retf
nop
cmps
cmp
jmp
xor
dec
cmp
sbb
xchg
push
aad
push
pushf
mov
arpl
idiv
(bad)
jno
and
dec
cmp
adc
fcom
mov
aas
sub
sbb
xor
add
sub
in
ja
mov
into
lods
pop
in
jle
shl
sbb
sbb
ret
push
add
mov
ja
out
mov
fistp
cmp
or
mov
add
pop
sub
mov
dec
scas
and
shl
sahf
push
push
arpl
mov
add
loopne
and
mov
cmps
aaa
sub
xor
dec
lods
mov
push
test
pop
jbe
pop
mov
mov
mov
test
loopne
xor
ja
ss
sar
mov
(bad)
pop
push
stos
into
ins
mov
mov
in
push
dec
pop
push
lock
in
dec
int3
movs
mov
into
push
mov
sbb
movs
add
retf
inc
inc
or
int
int3
fwait
cli
ficom
(bad)
sbb
cld
sbb
and
pop
test
std
cli
xchg
(bad)
sbb
ficomp
daa
mov
jle
or
(bad)
sbb
call
pop
(bad)
loope
add
(bad)
loop
mov
movs
push
xor
jecxz
and
test
mov
call
cwde
jecxz
test
outs
test
mov
sub
movs
imul
shl
sbb
test
lods
cmps
inc
sahf
cmp
cmp
mov
pusha
dec
xchg
bound
test
sbb
jae
pop
imul
inc
add
neg
mov
xor
out
xor
imul
xor
xlat
cmps
fbstp
je
ins
add
cmp
fsub
icebp
xchg
pop
mov
(bad)
test
push
retf
sub
sub
into
add
xlat
jp
mov
or
mov
cld
sbb
out
pop
pop
cwde
and
cmp
ja
stos
mov
pop
dec
imul
out
mov
ins
jnp
pop
or
push
jns
jnp
fdecstp
pop
adc
mov
fcomip
div
pop
push
sub
cmp
into
loop
stc
je
and
fcom
data16
push
call
push
stos
retf
out
ja
ins
mov
adc
ja
rcl
xchg
fild
ss
and
fstp
jmp
xor
pop
jnp
jp
inc
sti
ficomp
retf
idiv
repz
jl
push
out
hlt
shl
out
pop
daa
or
push
sub
push
mov
int
addr16
addr16
nop
cmc
jecxz
mov
bnd
cdq
xchg
addr16
pop
sahf
or
push
or
push
or
push
or
push
add
adc
int
pop
mov
pop
addr16
and
les
mov
dec
cmp
xchg
(bad)
int
into
or
push
or
push
xor
push
aad
pop
pop
or
push
cmp
xchg
hlt
push
dec
leave
int
xchg
or
push
add
jecxz
mov
push
xchg
les
mov
leave
pop
push
mov
pop
xchg
or
push
or
push
xor
pop
retf
int
push
or
push
add
into
sub
pop
jns
adc
int
pop
mov
pop
addr16
push
add
push
fld
adc
fxch
pop
outs
mov
sbb
imul
mov
int
add
push
jns
sub
sub
lock
push
popa
ins
fldenv
repz
mov
mov
stc
popa
(bad)
lock
inc
jne
(bad)
in
mov
push
test
pop
mov
push
test
pop
mov
push
test
pop
fs
idiv
mov
data16
or
bnd
push
mov
popf
inc
push
mov
(bad)
fiadd
pop
(bad)
mov
test
iret
mov
jp
xor
mov
fs
sti
ret
xchg
test
retf
adc
cs
inc
fld
clc
cmp
dec
fadd
jo
pop
std
pop
pop
mov
nop
adc
mov
inc
sbb
or
movs
or
pop
ins
mov
mov
cdq
out
adc
enter
cmp
mov
cdq
push
shl
lods
(bad)
jnp
idiv
in
mov
aaa
jl
test
cmps
sub
jbe
sbb
sbb
daa
mov
rol
sbb
repz
dec
pop
data16
inc
mov
addr16
mov
pop
inc
cli
call
mov
jg
inc
mov
pusha
adc
int
addr16
mov
mov
dec
std
xchg
mov
sbb
cmps
loop
or
jae
aam
(bad)
(bad)
fmul
inc
mov
aaa
fwait
les
xchg
pop
jecxz
ja
std
aaa
pop
dec
pop
cld
jmp
aaa
fcom
mov
xor
xor
das
sbb
inc
or
fimul
cld
ja
xchg
(bad)
fiadd
ins
lods
jge
pop
or
mov
mov
xchg
retf
mov
(bad)
pusha
mov
popf
iret
leave
sbb
mul
popf
iret
stc
sbb
test
movs
mov
popf
iret
stc
sbb
test
fsub
lock
ror
mov
iret
lds
popf
iret
leave
cmp
shl
out
mov
(bad)
repnz
mov
iret
add
popf
iret
leave
and
div
mov
xor
lock
fcomip
in
test
cmps
jb
fisub
jo
aam
bound
repnz
lock
xor
mov
in
add
cld
cmc
mov
cmp
jbe
jmp
leave
add
leave
push
cli
test
(bad)
cmc
cld
clc
movs
mul
push
scas
repnz
movs
div
call
xchg
(bad)
in
jbe
mov
cld
jbe
into
movs
(bad)
mov
push
scas
clc
je
jb
fisub
jo
xchg
cs
cmp
jb
(bad)
mov
mov
div
popf
iret
jo
popf
(bad)
stc
or
iret
add
mov
leave
dec
scas
(bad)
repz
stc
sbb
fmulp
xchg
lock
(bad)
(bad)
fistp
out
leave
add
sar
idiv
popf
iret
test
add
sar
idiv
iret
test
add
iret
jo
popf
iret
stc
sbb
iret
retf
iret
stc
add
test
popf
iret
jo
popf
iret
stc
add
leave
mov
iret
retf
mov
popf
iret
leave
sub
out
cmp
mov
movs
inc
mov
sbb
jbe
mov
sub
inc
int3
mov
iret
cdq
sbb
jbe
mov
iret
leave
add
iret
jo
popf
(bad)
stc
sub
iret
leave
sbb
lds
mov
mov
movs
(bad)
test
sbb
iret
lock
iret
sbb
popf
iret
leave
cmp
cmp
(bad)
cmps
in
iret
sbb
jp
leave
mov
dec
leave
mov
sbb
imul
mov
mov
inc
mov
sbb
sbb
mov
(bad)
jl
fcom
movs
cmp
repnz
mov
iret
rol
test
push
aam
iret
inc
sbb
jnp
mov
movs
mov
loop
cmps
repnz
jmp
or
cmp
dec
clc
inc
cmps
repnz
mov
ss
ja
mov
inc
call
std
mov
inc
dec
jge
inc
call
std
mov
inc
dec
std
mov
inc
dec
fs
inc
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
sar
push
or
je
pusha
dec
xchg
mov
jo
xor
jno
cmp
bound
imul
mov
dec
addr16
jae
mov
jg
test
icebp
test
aaa
dec
add
fst
push
stc
cmp
sub
sub
pop
(bad)
pop
add
inc
push
and
inc
cmp
add
pop
je
stc
retf
jecxz
xlat
and
cld
dec
mov
mov
xlat
xchg
jb
push
or
fild
sub
add
(bad)
sbb
fs
aam
enter
xchg
xchg
cld
pop
stos
inc
add
lds
mov
in
mov
sbb
inc
stos
popa
(bad)
pop
cwde
call
cmp
xchg
pop
push
je
pop
(bad)
cmp
mov
(bad)
jmp
fiadd
ins
into
ja
inc
stc
(bad)
fwait
mov
cld
push
sti
das
lahf
push
aas
add
inc
cli
jg
je
inc
mov
xchg
div
sbb
adc
and
xchg
push
push
scas
fs
mov
cmp
push
stc
push
sti
aaa
fnstcw
adc
bound
jnp
leave
out
pop
pop
or
pop
xor
lods
pop
xor
lea
in
lea
mov
sti
movs
jmp
mov
inc
iret
into
push
mov
dec
dec
xchg
push
or
push
fld
sahf
xor
or
and
cs
into
adc
cmp
fidivr
ds
push
outs
adc
stos
jmp
sub
pop
stos
sti
les
pop
ret
pop
push
call
mov
popa
retf
mov
loope
call
jge
ret
fdiv
call
jge
and
fnstcw
inc
lods
fadd
add
sahf
pop
(bad)
mov
pop
xor
mov
add
mov
pop
xor
mov
sub
cmc
fadd
loope
jmp
popa
or
popa
or
mov
or
mov
adc
ins
call
pop
ss
fstp
aad
popa
or
mov
fldz
mov
add
mov
popa
or
mov
and
mov
fdivr
popa
or
mov
jns
mov
add
mov
popa
or
mov
or
mov
and
fwait
test
outs
sub
push
in
cld
mov
xor
mov
or
jge
or
mov
push
iret
mov
(bad)
les
popa
or
mov
stos
leave
mov
cmp
popf
mov
fucomi
cmp
out
fisttp
fmul
jne
aad
popa
or
mov
call
pop
or
frstor
aad
loope
xchg
mov
or
cmp
popa
or
mov
call
mov
xchg
jne
push
hlt
loope
bound
int
(bad)
cmps
sbb
jno
shl
enter
test
out
mov
popa
in
(bad)
cld
mov
add
mov
fmul
ins
jb
inc
cmp
ins
lods
push
les
dec
cmp
enter
cmp
cmp
outs
repnz
mov
retf
adc
jns
xor
and
mov
out
(bad)
push
cmp
inc
and
pop
fadd
std
fld
(bad)
fldenv
in
popa
jo
pop
mov
push
sub
adc
(bad)
cmp
ret
fwait
push
lea
leave
mov
jbe
jl
in
not
imul
(bad)
lods
mov
sbb
pop
loopne
leave
int3
xchg
inc
mov
aaa
mov
dec
pop
je
ins
enter
retf
retf
xchg
add
je
add
adc
mov
xlat
repz
fdivr
adc
call
sub
or
mov
cmp
shl
fdivr
cmp
fld
jecxz
enter
ret
sti
jmp
xor
aad
fsub
daa
jge
mov
sbb
xlat
jb
retf
add
jne
mov
dec
call
mov
stos
call
pop
jp
inc
add
pushf
mov
xchg
iret
xchg
mov
lahf
bnd
fist
sbb
sub
aad
xor
xor
sbb
fsub
adc
and
push
jnp
mov
fcmovnu
or
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
jmp
xchg
or
adc
xchg
or
aad
pop
aam
cdq
mov
test
or
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
(bad)
pop
ret
dec
(bad)
ror
rcr
aaa
shr
daa
shr
inc
rcr
daa
(bad)
call
ror
rcr
aaa
ror
inc
rcr
push
ror
aaa
(bad)
or
pop
sar
inc
shr
xchg
sar
xchg
rcr
pop
shr
test
call
ror
rcr
aaa
shr
daa
shr
inc
rcr
daa
(bad)
sub
pop
ret
pop
rcr
ja
jmp
rcr
push
rcr
aaa
(bad)
cli
or
(bad)
or
pop
rcr
test
push
inc
shr
aaa
rcr
inc
shr
pop
ret
push
rcr
push
ror
pop
shr
aaa
rcr
daa
(bad)
call
shr
xchg
rcr
pop
shr
push
rcr
pop
ror
daa
ror
pop
lds
push
pop
ror
xchg
shr
inc
rcr
out
mov
(bad)
dec
sysret
ror
ror
mov
cli
push
inc
rcr
push
rcr
aaa
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
jmp
ror
push
rcr
test
cli
push
out
jmp
ror
addr16
sub
mov
stos
movntq
out
call
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
fimul
pop
(bad)
cli
push
pop
shr
xchg
ret
test
jmp
rcr
daa
les
xstore-rng
cmps
shr
out
fimul
test
fimul
aaa
(bad)
cmp
pop
shr
push
shr
shr
aaa
rcr
pop
inc
lods
or
popa
fdivr
(bad)
pop
addr16
and
xor
jecxz
inc
or
(bad)
fidivr
jae
jecxz
jle
jecxz
ds
or
inc
lods
or
jecxz
add
jecxz
push
(bad)
jecxz
ds
movs
or
(bad)
fimul
push
xlat
jecxz
pop
mul
jo
jle
or
xchg
sbb
jecxz
pop
mul
xor
jle
dec
ds
fimul
xor
call
inc
fdivr
add
jmp
jecxz
push
(bad)
jecxz
ds
push
push
ds
loop
aaa
xchg
pop
scas
test
(bad)
xchg
jecxz
outs
(bad)
jecxz
ds
jecxz
ds
loope
mov
mov
inc
(bad)
adc
mov
mov
mov
jecxz
ds
jecxz
ds
sub
dec
fimul
(bad)
pop
or
inc
(bad)
xchg
jecxz
outs
(bad)
jecxz
ds
or
into
jmp
(bad)
jecxz
ds
fidivr
scas
(bad)
jecxz
ds
jecxz
ds
lea
gs
test
add
jmp
pop
cwde
jmp
(bad)
jecxz
inc
or
jecxz
cmps
mul
xor
jle
sub
into
jp
aaa
(bad)
imul
jmp
(bad)
jecxz
ds
or
int
xor
mul
xor
(bad)
jecxz
ds
mov
mov
xor
mul
xor
(bad)
jecxz
ds
jecxz
aas
clc
jecxz
mov
jecxz
ds
fimul
cmps
(bad)
jecxz
ds
pop
sub
ret
jmp
(bad)
jecxz
ds
or
in
jecxz
xchg
jecxz
push
(bad)
in
inc
ds
fidivr
xor
jle
dec
ds
jp
aaa
(bad)
imul
jmp
(bad)
jecxz
ds
fidivr
sahf
(bad)
jecxz
ds
fimul
pop
sar
mov
jecxz
ds
fidivr
sahf
(bad)
jecxz
ds
fimul
pop
sar
mov
jecxz
ds
jecxz
ds
jp
ds
xor
mul
xor
(bad)
jecxz
ds
dec
ds
jp
aaa
(bad)
imul
jmp
(bad)
jecxz
ds
jecxz
ds
fidivr
mov
jecxz
ds
jecxz
ds
fimul
pop
sar
mov
jecxz
ds
jecxz
ds
fidivr
mov
jecxz
ds
jecxz
ds
fimul
pop
sar
mov
jecxz
ds
fidivr
aas
(bad)
inc
or
(bad)
fidivr
xchg
jecxz
dec
(bad)
jecxz
ds
jecxz
ds
or
out
or
jecxz
pop
mul
xor
(bad)
jecxz
ds
mov
cmps
pop
das
push
(bad)
fdivrp
pinsrw
fs
(bad)
add
(bad)
cmps
cwde
jp
hlt
ret
stos
add
cwde
jmp
(bad)
jecxz
ds
mov
leave
je
jmp
(bad)
jecxz
ds
mov
or
cmps
xchg
xor
(bad)
jecxz
ds
cmp
ds
fimul
iret
stc
add
ret
fidivr
inc
pop
mov
mov
sub
inc
test
xor
jecxz
ds
jmp
push
les
push
xor
movs
shr
cmps
inc
mov
xor
jecxz
ds
jecxz
dec
push
ds
(bad)
bound
or
jns
out
jmp
jecxz
push
jle
mov
test
mov
cmp
movs
jecxz
outs
(bad)
jecxz
ds
mov
and
js
mov
cmp
movs
jecxz
outs
(bad)
jecxz
ds
pop
mov
test
mov
mov
jle
jecxz
ds
pop
mov
and
js
mov
mov
jle
jecxz
ds
jecxz
ds
fimul
pop
sar
mov
jecxz
ds
jecxz
ds
fidivr
ds
jle
sub
sahf
fidivr
(bad)
clc
jecxz
out
(bad)
jecxz
ds
sub
(bad)
fimul
out
in
maskmovq
div
fcmovu
aam
inc
mov
(bad)
jg
push
(bad)
sbb
ret
jg
add
jmp
(bad)
jecxz
ds
and
(bad)
sub
enter
pop
fst
mov
(bad)
xor
(bad)
mov
das
or
fidivr
sahf
(bad)
jecxz
dec
ds
rdtsc
mov
fcmove
je
jmp
(bad)
jp
ds
je
jmp
inc
push
ds
or
out
sub
add
(bad)
daa
and
jns
inc
fdivr
mov
push
jmp
jecxz
push
(bad)
jecxz
ds
mov
mov
int3
jecxz
xchg
mul
xor
(bad)
push
mov
in
xor
jecxz
push
jle
jge
mov
jecxz
push
(bad)
jecxz
ds
xor
push
xor
mov
lea
stos
sub
jno
clc
mov
movs
jecxz
sahf
(bad)
jecxz
ds
pop
ds
js
aaa
add
mov
inc
test
mov
cmp
movs
jecxz
mov
jecxz
ds
push
xor
sub
add
jmp
add
jmp
(bad)
jecxz
ds
cdq
push
ds
jmp
jle
pop
ds
mov
adc
scas
leave
pop
adc
xor
ret
sub
pop
shr
(bad)
aam
push
mov
jecxz
push
mul
xor
jle
or
(bad)
fidivr
sahf
(bad)
jecxz
ds
fimul
pop
(bad)
jecxz
ds
jecxz
ds
and
or
or
inc
cwde
jmp
(bad)
jecxz
ds
(bad)
(bad)
sbb
xor
jecxz
or
jecxz
ds
jecxz
ds
pop
ds
jl
xor
push
or
out
push
add
or
ja
jecxz
ds
aas
ds
push
aas
mov
mov
(bad)
jecxz
ds
dec
ds
mov
xor
(bad)
aas
push
sub
cmp
fs
mov
aaa
and
adc
cwde
sub
hlt
inc
mov
xor
(bad)
jecxz
ds
pop
ds
xchg
cmp
scas
jecxz
aas
clc
jecxz
out
(bad)
jecxz
ds
call
das
and
cmp
scas
jecxz
ja
jecxz
ds
and
jle
or
daa
cwde
jmp
(bad)
and
(bad)
mov
xor
jecxz
ds
push
(bad)
(bad)
fimul
xchg
cwde
jmp
(bad)
push
(bad)
(bad)
fimul
cmp
xchg
fnstcw
(bad)
shr
push
cmps
inc
mov
xor
jecxz
ds
sbb
ds
jmp
(bad)
jecxz
ds
jecxz
ds
jmp
(bad)
jecxz
ds
ficomp
ds
int
xlat
pop
inc
mov
dec
or
fisubr
inc
test
add
jecxz
sahf
(bad)
jecxz
ds
jecxz
ds
push
sbb
das
ficom
xor
pop
or
mov
xor
(bad)
jecxz
ds
jecxz
ds
jp
ds
xor
mul
xor
(bad)
jo
ds
jmp
(bad)
jecxz
ds
mov
or
out
jecxz
aaa
(bad)
adc
jle
lea
jecxz
addr16
jecxz
ds
jecxz
ds
sub
lahf
jmp
jle
or
in
jecxz
xchg
mul
xor
jle
push
cmp
jecxz
xchg
jecxz
ds
arpl
jle
lea
jecxz
pop
(bad)
jecxz
ds
dec
cmp
jmp
(bad)
jecxz
ds
cmp
pop
pushf
sub
int
scas
inc
ret
fisubr
mov
inc
test
push
movs
jecxz
sahf
(bad)
jecxz
ds
jo
into
sub
inc
(bad)
pop
mov
xor
(bad)
jecxz
ds
jp
xor
cmp
add
pop
fidivr
(bad)
jp
cmp
push
addr16
jmp
jecxz
push
(bad)
jecxz
ds
fnstenv
iret
push
push
xor
jmp
(bad)
jecxz
ds
fidivr
cmp
jecxz
jle
xchg
ds
fidivr
jle
jecxz
jle
xchg
ds
fidivr
ja
jecxz
push
inc
cdq
cmp
fidivr
ja
jecxz
push
(bad)
jecxz
ds
pop
mov
xchg
push
push
(bad)
(bad)
inc
bound
mov
sahf
(bad)
jecxz
ds
adc
ficomp
aaa
(bad)
fidivr
inc
inc
mov
test
push
mov
cmp
movs
jecxz
outs
(bad)
jecxz
ds
jecxz
ds
pop
xchg
cmp
jecxz
push
(bad)
arpl
jle
lea
jecxz
(bad)
(bad)
jecxz
ds
call
mul
xor
jle
push
cmp
jecxz
(bad)
(bad)
jecxz
ds
imul
aas
fstp
aas
xchg
and
test
mov
ret
jecxz
push
inc
ds
fidivr
xor
(bad)
xchg
adc
jle
or
xchg
jecxz
ds
jecxz
ds
movs
or
(bad)
jecxz
xor
jecxz
push
(bad)
jecxz
ds
adc
ds
mov
ret
jecxz
push
(bad)
jecxz
ds
or
int
xor
mul
xor
inc
jmp
jge
jecxz
scas
(bad)
jecxz
ds
pop
or
(bad)
fimul
push
xlat
jecxz
pop
mul
xor
inc
cdq
aaa
(bad)
fidivr
xchg
jecxz
push
(bad)
jecxz
ds
jecxz
ds
pop
mov
xchg
push
push
(bad)
(bad)
inc
bound
mov
sahf
inc
cdq
xor
fidivr
cmps
(bad)
jecxz
push
(bad)
jecxz
ds
jecxz
ds
lea
addr16
inc
and
ss
push
pop
inc
(bad)
xchg
or
mov
jecxz
ds
mov
or
daa
mov
jecxz
ds
jp
ds
cs
lahf
add
(bad)
or
mov
inc
fdivr
addr16
jmp
jecxz
push
(bad)
jecxz
ds
dec
ds
fidivr
lahf
clc
jecxz
out
(bad)
xor
ds
fsubr
aaa
adc
(bad)
jp
adc
fdivr
loop
jmp
jecxz
push
(bad)
xchg
cmp
scas
jecxz
aas
clc
jecxz
out
(bad)
call
scas
xchg
enter
pop
ror
sbb
cmps
mov
xlat
fimul
imul
aam
xor
mov
add
or
xor
in
lock
test
sahf
int
mov
(bad)
(bad)
adc
stc
xor
pop
retf
cmp
adc
fwait
addr16
(bad)
fdivr
inc
mov
push
rcr
mov
hlt
mov
aaa
pusha
imul
inc
pop
in
sub
jle
mov
dec
xor
fsub
cmp
fldenv
(bad)
push
ins
or
cmp
lods
push
mov
loope
inc
dec
scas
xchg
dec
pop
aam
enter
div
fs
push
sar
sbb
mov
out
mov
mov
jae
push
gs
xor
lahf
mov
out
and
pop
aam
sub
mov
out
jl
hlt
repz
mov
cmps
mov
xchg
enter
mov
out
ret
pop
ins
inc
mov
dec
mov
push
or
xor
call
arpl
mov
push
mov
inc
jbe
pop
pop
sub
push
loopne
in
mov
mov
fs
sbb
xchg
inc
les
enter
test
xor
cmp
push
sbb
(bad)
xor
cli
xchg
dec
int3
mov
idiv
dec
mov
xchg
fisttp
cmp
inc
mov
daa
iret
mov
jb
mov
dec
out
mov
(bad)
fldcw
xchg
push
rcl
jae
mov
repnz
test
das
pop
in
sub
cmps
sub
cmps
sub
arpl
cs
adc
sbb
in
imul
sbb
bound
lar
sub
inc
mov
cmp
pop
pop
and
cmp
jbe
pop
inc
mov
pop
addr16
das
and
cmp
mov
sub
inc
mov
sub
loopne
adc
mov
test
nop
arpl
jnp
add
pushf
add
repnz
hlt
nop
imul
mov
and
(bad)
pcmpgtb
dec
pop
(bad)
cmc
das
inc
pop
xor
das
add
sbb
adc
mov
icebp
ins
add
jo
inc
xor
sub
lock
xchg
sub
inc
mov
cmp
adc
sbb
mov
xor
cmps
aas
push
inc
mov
add
sub
inc
mov
sub
push
out
xor
mov
das
inc
inc
mov
add
cmp
jecxz
sbb
push
(bad)
sti
inc
(bad)
sar
push
push
stc
inc
jb
jp
push
push
pop
adc
test
xor
sbb
pop
inc
in
and
icebp
dec
adc
sbb
nop
cmp
mov
sub
xor
cmp
xchg
or
or
xchg
loopne
inc
repnz
sbb
movs
dec
and
ss
popa
bound
and
cmp
loop
cli
add
mov
adc
icebp
repnz
dec
xor
lock
ja
aas
adc
mov
adc
mov
xor
cmps
ficom
push
add
inc
mov
icebp
(bad)
cmp
and
adc
and
push
aaa
cmc
pop
adc
test
xor
sbb
lock
adc
nop
sub
icebp
sbb
lock
aaa
xor
imul
mov
cmp
inc
loopne
inc
inc
icebp
or
adc
inc
ret
inc
push
xchg
dec
aaa
jb
stos
add
adc
shl
sub
jb
stos
inc
ret
loope
popa
sub
arpl
jp
push
sar
and
cmp
hlt
and
xor
push
jb
stos
inc
mov
nop
jp
loop
dec
and
jp
bound
sbb
arpl
call
push
aas
inc
loop
sub
arpl
mov
inc
push
lock
xchg
sub
xchg
lahf
loope
in
add
jp
adc
cmp
push
jo
xor
xor
and
mov
add
mov
jb
jmp
mov
xchg
stos
inc
xor
sub
xchg
aas
and
cmp
jecxz
jp
pop
dec
adc
(bad)
xchg
shr
lock
bound
or
les
inc
xor
push
ret
push
adc
jp
xchg
lock
jo
adc
and
and
idiv
adc
jp
adc
mov
lock
xchg
xor
sub
jb
stos
inc
inc
cmp
jno
xor
mov
pop
push
xor
in
xor
mov
jp
hlt
ror
jae
sbb
div
sub
inc
aas
shl
mov
(bad)
repnz
inc
loopne
add
aad
loope
mov
xor
mov
sub
xor
jnp
pause
or
loop
stos
and
lock
jae
stos
add
adc
push
jb
stos
loope
loopne
xchg
loopne
adc
mov
call
sar
daa
xchg
mov
or
mov
sbb
loop
mov
mov
and
push
mov
and
xor
mov
inc
dec
adc
push
cli
shl
push
cmp
mov
add
jmp
mov
lods
inc
bound
sbb
jecxz
sti
loope
out
xchg
arpl
cmp
and
cmp
mov
(bad)
adc
sub
adc
xchg
xor
jl
arpl
mov
loope
sbb
push
cmp
inc
inc
or
mov
pop
xlat
lock
inc
pop
inc
jb
sub
arpl
pop
xchg
adc
and
xchg
nop
jb
push
add
inc
shl
pushf
inc
inc
mov
sub
jecxz
jnp
xchg
nop
sbb
jecxz
stos
loope
push
pop
adc
cmp
arpl
jnp
xor
call
mov
addr16
sub
xor
jb
stos
push
jae
pop
loope
adc
adc
cli
adc
cli
and
cmp
repnz
adc
jno
xchg
sbb
and
sub
mov
cmp
and
cmp
bound
jp
(bad)
mov
adc
shl
or
mov
shl
jp
loop
fwait
shl
adc
xor
mov
daa
xchg
push
sub
push
dec
and
mov
sub
mov
stos
push
adc
push
jecxz
stos
nop
jecxz
stos
add
mov
cmp
push
pusha
sub
cmp
xchg
das
xor
add
jecxz
mov
inc
push
sub
arpl
jp
hlt
add
inc
ret
push
arpl
popa
and
mov
xor
cmp
jae
or
arpl
jnp
(bad)
loopne
popa
inc
xor
les
add
push
dec
(bad)
xchg
mov
push
mov
sbb
jb
sub
push
cmp
adc
jecxz
cli
shl
out
adc
jo
xor
or
mov
xor
loopne
xor
jp
push
jo
xor
or
add
sbb
bound
jp
inc
ror
jb
cmp
and
cmp
and
cmp
loop
stos
and
push
mov
adc
dec
inc
inc
push
fiadd
inc
xor
inc
bound
cmp
arpl
sub
bound
mov
icebp
and
or
lock
adc
xor
lock
or
mov
xor
xor
add
or
shl
sub
jb
sub
jb
or
repz
and
push
inc
cmp
arpl
jmp
add
inc
push
xchg
sub
arpl
ficom
xor
dec
icebp
repnz
jmp
(bad)
mov
inc
xor
push
sub
movs
das
icebp
add
sub
ja
sub
test
adc
mov
xchg
xor
sub
pusha
sbb
and
jae
sub
mov
add
mov
inc
ret
add
jl
inc
mov
sub
adc
mov
jo
xor
mov
loope
lock
arpl
cmp
pop
push
pop
fs
movs
pop
icebp
adc
mov
adc
mov
push
bound
cmp
aam
mov
and
mov
push
xor
sub
add
jmp
xor
add
or
arpl
dec
(bad)
mov
sub
xchg
cmp
aam
cli
inc
inc
nop
cli
adc
dec
rcl
mov
and
jl
add
fdiv
loop
pop
xor
xchg
cmp
in
call
push
fwait
shl
push
mov
icebp
mov
push
mov
push
jae
stos
adc
dec
push
xchg
xor
repnz
add
nop
sub
icebp
imul
loope
xor
mov
dec
adc
mov
inc
inc
push
mov
mov
jae
sub
and
push
jecxz
stos
add
lock
and
mov
cmp
adc
rcl
mov
pop
xor
jnp
xor
or
xor
inc
add
cmp
and
jnp
push
loope
nop
jb
sub
push
stos
inc
and
cmp
les
and
jmp
ss
adc
loopne
loopne
loopne
xor
mov
push
xchg
xor
jp
adc
jp
and
cmp
jae
stos
inc
inc
nop
sbb
xor
cmp
jb
jnp
rol
jnp
inc
cmps
jp
ja
sub
mov
loope
test
mov
cmp
xor
mov
(bad)
adc
push
repz
adc
adc
xor
inc
push
sub
or
arpl
jp
add
jp
jb
sbb
in
fisub
mov
stos
and
mov
fs
test
and
jp
push
sbb
mov
sbb
test
push
mov
jno
ror
push
unpcklps
push
arpl
cmp
idiv
adc
mov
inc
push
sub
fs
push
xchg
lock
repnz
sub
push
cmps
cmp
loope
and
ss
daa
jb
sub
cmp
pop
inc
pop
movs
fist
jecxz
stos
add
mov
cmp
add
mov
jae
pop
adc
pusha
mov
xchg
out
scas
and
mov
loopne
push
or
and
cld
shl
push
ret
mov
xor
xchg
jp
xchg
push
sub
ret
loopne
xchg
ins
push
jecxz
cmp
push
xchg
jnp
arpl
imul
xchg
push
jae
or
in
or
bound
adc
sbb
and
sub
hlt
mov
xor
icebp
jnp
(bad)
jnp
jb
cmp
mov
sub
add
mov
shl
(bad)
push
loope
inc
add
pop
xor
mov
das
adc
xor
jnp
and
sub
jae
or
arpl
pop
add
nop
or
inc
movs
das
adc
test
add
call
push
cmp
movs
and
adc
sbb
(bad)
lock
inc
dec
adc
push
fbstp
mov
jp
jb
sub
xchg
pusha
int3
loope
mov
pop
add
aad
icebp
loop
fild
xchg
push
ret
pop
bound
push
rcl
xor
jnp
and
cmp
inc
ror
jno
lock
lock
nop
cmp
xor
sub
arpl
pop
aaa
xchg
mov
dec
inc
push
inc
or
ja
or
push
and
or
mov
sub
je
or
xor
stos
loope
mov
push
push
mov
adc
inc
sub
arpl
sbb
xor
cmp
adc
sub
and
or
icebp
cmp
sub
adc
aaa
xor
retf
mov
and
cmp
jb
dec
and
mov
pop
mov
sub
mov
cmovo
xchg
imul
xchg
sub
jae
mov
les
inc
push
push
or
and
cmp
nop
pop
xlat
mov
sub
and
cli
inc
arpl
pop
adc
movs
(bad)
mov
and
or
mov
stos
inc
inc
popa
dec
and
mov
mov
mov
jg
fs
jg
xor
or
mov
inc
add
icebp
bound
sbb
mov
and
adc
shl
aaa
inc
inc
sub
gs
adc
sub
xor
imul
sub
adc
jnp
jae
jmp
pop
adc
jmp
xor
jno
mov
and
cmp
xor
ins
aaa
adc
sbb
nop
pop
daa
jae
stos
and
pop
xor
nop
mov
in
dec
push
jae
cmp
loop
jp
xor
xor
add
loop
sbb
add
pop
repz
loop
or
addr16
adc
pop
adc
shl
push
mov
pushf
loope
mov
fadd
mov
stos
loope
loopne
inc
add
xlat
repnz
imul
loopne
xor
sti
inc
and
imul
xchg
cmp
arpl
mov
and
out
xor
dec
inc
arpl
or
xor
pop
pop
xor
or
arpl
stos
xor
mov
add
icebp
cmp
inc
movs
aas
and
mov
xchg
xchg
lock
lock
test
push
sar
movs
pop
xchg
sub
xor
push
in
push
mov
or
push
sub
xor
add
mov
jecxz
pop
xor
xchg
jnp
add
or
repz
test
xor
mov
sub
add
jnp
mov
cld
add
mov
sub
repnz
mov
cmp
loopne
and
mov
pop
cmps
xor
cmp
(bad)
pop
xchg
arpl
pop
addr16
stos
inc
inc
sbb
and
inc
loop
call
nop
imul
in
xor
mov
stos
add
or
bound
push
xor
push
arpl
or
xchg
adc
add
icebp
ficom
movs
push
dec
mov
loop
cmp
xor
jnp
push
loopne
and
cmp
aam
push
adc
cmp
repz
inc
bound
jnp
adc
or
jb
jnp
mov
stos
and
dec
inc
jb
or
inc
loopne
popa
jae
push
jecxz
pop
adc
inc
scas
inc
add
mov
add
xor
mov
fisub
inc
dec
je
ss
xor
and
in
push
repz
ins
and
push
cmp
loop
cmp
and
cmp
bound
imul
nop
cmp
gs
xor
xor
sbb
xchg
pop
daa
arpl
jp
xor
rcl
mov
pushf
adc
adc
jp
repnz
shl
(bad)
jp
repnz
push
mov
call
xor
repnz
add
repz
inc
mov
pop
and
xor
mov
adc
xor
adc
jp
xor
add
imul
xchg
das
xor
nop
ficom
adc
push
bound
xchg
jae
cli
adc
jo
mov
adc
sub
xchg
sub
or
mov
sub
xor
ja
mov
add
push
xor
adc
add
pushf
inc
bound
cmp
push
jo
xor
jp
jb
sub
arpl
cmp
out
das
lock
sti
add
cmps
sub
in
jp
xchg
nop
push
mov
sub
jae
jp
mov
nop
sub
(bad)
lock
adc
push
xchg
lock
inc
xchg
shr
xor
inc
inc
lock
xchg
pushf
adc
mov
ficom
aam
sbb
xor
sub
inc
dec
adc
adc
mov
add
inc
jp
push
loope
adc
and
cli
and
aas
adc
inc
and
jnp
xor
mov
icebp
jp
and
dec
xchg
adc
cli
icebp
and
add
dec
add
mov
adc
shl
jp
mov
sbb
inc
mov
pushf
add
push
sub
mov
adc
lock
rcl
lock
xor
mov
adc
ficom
loopne
aaa
adc
push
inc
pusha
sbb
xchg
push
pop
xor
mov
fwait
adc
push
xor
sbb
xor
or
sub
repnz
retf
add
mov
imul
xchg
cli
xor
pop
adc
call
ss
arpl
cmp
shl
jp
aaa
inc
jl
arpl
jnp
adc
sub
push
push
sub
xchg
retf
loopne
inc
and
jp
mov
sub
add
dec
and
mov
int3
push
jae
sub
adc
add
loopne
adc
jp
hlt
push
sbb
and
sub
xor
jmp
xchg
mov
xlat
xchg
push
das
shl
mov
mov
pop
xor
mov
adc
jp
andps
xchg
outs
adc
in
add
push
xor
imul
stos
and
xor
add
pushf
adc
stos
add
xor
(bad)
xor
sub
jb
cmp
repz
sub
rol
sti
add
loopne
xor
rcr
mov
fcmovb
xor
xor
loopne
inc
bound
pop
inc
inc
inc
mov
and
inc
inc
mov
lods
adc
cmp
(bad)
lock
lock
je
imul
aas
xchg
movs
scas
popa
loop
retf
push
inc
imul
xor
idiv
add
dec
icebp
mov
xchg
lods
add
mov
shl
and
and
cmp
xor
adc
push
pushf
and
push
jp
arpl
push
inc
mov
popa
xor
push
jae
sub
cmp
mov
jnp
ret
nop
mov
mov
loope
mov
xor
pushf
adc
cmp
add
shl
or
and
int3
add
retf
ss
adc
push
add
mov
xor
ficom
hlt
inc
dec
inc
inc
mov
icebp
bound
adc
loope
lock
arpl
stos
inc
xor
ins
aaa
repnz
or
sub
add
movs
int3
and
ss
aaa
inc
and
icebp
repnz
add
mov
jmp
xchg
cmp
and
mov
lock
adc
mov
inc
aaa
add
inc
addr16
jg
xor
jp
adc
or
loop
push
add
and
pushf
shl
mov
ficom
xor
cmp
jecxz
mov
loop
push
add
jnp
inc
xchg
and
mov
add
sbb
and
retf
mov
push
jae
pop
lock
pushf
inc
ret
xlat
xor
jmp
and
cmp
mov
xor
xor
lock
arpl
inc
push
inc
mov
mov
and
adc
cmp
loope
inc
(bad)
push
xor
sti
adc
mov
pop
jae
sub
mov
stos
inc
inc
inc
cli
add
jno
and
jp
bound
cmp
add
cmp
push
jnp
xor
jp
push
xor
bound
adc
adc
cli
adc
mov
repz
je
cmp
xor
scas
and
jbe
adc
adc
loope
and
or
rcr
and
or
bound
jp
jecxz
jnp
jae
mov
add
jmp
movs
nop
cmp
and
sbb
jae
stos
and
cmp
push
xchg
adc
ror
adc
mov
and
cmp
xchg
sub
aam
fwait
xor
cmp
repz
push
adc
push
xchg
mov
aaa
ret
inc
push
inc
imul
icebp
lods
inc
push
mov
jl
jecxz
mov
adc
or
inc
push
sub
(bad)
cmp
adc
sti
icebp
bound
mov
add
cmc
emms
and
sbb
jecxz
cli
xor
pop
div
sub
mov
sub
jae
mov
mov
int3
icebp
bound
fcomi
bound
cmp
(bad)
sar
adc
add
mov
sub
mov
nop
cmp
bound
mov
xor
or
jb
sbb
and
inc
loop
mov
xlat
mov
stos
xor
sbb
bound
jmp
out
and
out
and
jo
and
inc
sti
push
jae
cmp
and
mov
addr16
sub
repnz
pusha
fwait
adc
jp
and
mov
loopne
push
or
loop
sbb
push
ss
hlt
shr
lock
pop
and
xchg
popa
bound
or
loop
cmp
jbe
and
cmp
xor
jmp
push
cmp
xor
or
jae
dec
adc
mov
xor
sub
arpl
cmp
les
pop
cmps
xor
stos
and
sub
inc
jo
inc
inc
inc
jl
jae
cli
test
xchg
cmp
xchg
movs
scas
icebp
xchg
xor
xor
mov
mov
and
sbb
mov
icebp
and
xor
pushf
adc
retf
push
cmp
push
jno
xor
or
bound
cmp
xor
add
call
push
jmp
jecxz
stos
inc
and
imul
xchg
stos
push
push
nop
dec
shl
xor
mov
sub
xchg
or
inc
mov
push
jb
dec
adc
push
and
mov
rol
adc
shl
mov
mov
adc
or
bound
fild
addr16
loope
out
icebp
and
or
and
sbb
xor
sbb
adc
sub
xor
aaa
inc
push
stos
push
jb
retf
lock
inc
loop
cmp
and
cmp
add
push
xchg
inc
sub
ror
adc
call
lock
jb
mov
out
sbb
aam
scas
and
and
je
fisub
jb
cmp
mov
sub
jb
or
jb
cmp
shr
inc
loop
or
xor
shl
cmp
push
xchg
add
cmp
jb
cmp
mov
adc
add
or
repz
mov
inc
push
add
je
sbb
lock
xchg
arpl
and
sti
xor
sub
les
push
bound
shl
cmp
jae
sub
and
or
push
outs
adc
test
xor
jp
xor
inc
and
sbb
arpl
cli
popa
rol
sbb
push
mov
lods
loope
mov
sbb
movs
mov
mov
adc
sub
ret
mov
mov
retf
inc
jp
xor
retf
inc
mov
jno
inc
cmp
adc
(bad)
xchg
sub
loop
sbb
das
adc
movs
pop
add
mov
mov
lock
mov
sbb
and
sti
adc
xor
or
shl
fwait
inc
mov
dec
adc
sbb
inc
icebp
fadd
mov
mov
bound
stos
shl
xchg
push
add
lods
add
mov
pushf
xor
mov
cmp
repnz
shl
mov
mov
cli
popa
loop
retf
ss
and
add
nop
mov
inc
and
push
loop
dec
and
sub
jb
or
and
lods
loope
mov
stos
inc
mov
push
add
push
xor
jp
xor
jp
inc
inc
sub
jb
sub
les
pop
and
mov
pop
daa
arpl
pop
pusha
mov
cmp
adc
cmp
jl
and
aas
xchg
mov
xor
inc
cmps
sub
jae
mov
adc
pop
adc
shl
sub
push
inc
pop
adc
cmp
mov
sub
jb
sub
hlt
inc
cmp
bound
cmp
push
or
inc
xor
not
sub
cmp
je
outs
add
cmp
jb
sub
repnz
adc
push
add
adc
cmp
adc
cmp
repz
arpl
inc
adc
push
arpl
sti
inc
loop
jp
jb
jnp
jae
sub
repnz
pusha
sub
(bad)
loopne
add
sbb
xor
jl
mov
cmp
inc
add
inc
daa
in
xor
xchg
in
and
sbb
xchg
mov
loopne
lock
add
mov
sub
adc
xor
sub
xor
sub
inc
lock
mov
adc
mov
xor
jp
and
sbb
addr16
adc
dec
icebp
bound
sub
adc
call
push
jl
push
mov
cmp
jae
sub
inc
loopne
test
mov
scas
and
xor
jae
sbb
repz
stos
push
mov
pop
(bad)
jb
stos
add
jp
repz
adc
fwait
push
aaa
test
cmps
inc
and
sbb
arpl
sub
inc
mov
push
mov
adc
cmp
jb
or
repz
and
jo
mov
les
icebp
bound
xor
ss
and
nop
mov
adc
pusha
fwait
push
ret
adc
add
xor
pop
repz
add
sbb
and
sbb
xor
and
sbb
aam
jp
add
or
ret
mov
dec
adc
jo
mov
adc
lock
inc
xchg
movntq
das
xor
cmp
and
jp
jae
cmp
repnz
add
push
push
(bad)
jnp
xchg
nop
or
bound
cli
add
mov
adc
jnp
adc
push
repz
and
xchg
jae
jnp
xor
stos
inc
and
pushf
xor
mov
cmp
adc
fwait
jno
icebp
push
jae
sub
fs
sbb
jae
sbb
icebp
mov
and
mov
jae
sub
nop
cmp
repnz
icebp
(bad)
lock
loope
pusha
or
or
xor
cmp
mov
sub
inc
nop
ins
inc
and
stos
inc
ret
loope
xchg
pushf
inc
loop
cmp
and
and
loope
add
loope
xor
sub
and
pop
(bad)
repnz
xor
jnp
push
loopne
(bad)
jb
stos
add
nop
mov
adc
mov
pop
pop
aaa
shr
inc
push
inc
pop
shl
cmp
addr16
adc
or
jecxz
jnp
and
sub
xor
int3
and
cmp
and
xor
jp
inc
shr
push
mov
icebp
xor
dec
add
jmp
loopne
loopne
lock
adc
inc
loop
sbb
push
cmp
adc
and
icebp
jp
xor
icebp
repnz
cmp
cmc
lods
adc
push
inc
nop
retf
push
jmp
mov
adc
xor
aaa
in
xchg
ja
pop
pop
(bad)
lds
inc
push
movs
iret
add
or
push
mov
stos
shl
inc
cmp
jae
imul
pop
pusha
xor
cmp
and
cmp
inc
mov
jmp
sbb
adc
sub
or
xor
jnp
jb
in
add
nop
das
add
cmp
xor
mov
add
xchg
dec
add
cmc
cmp
repz
pop
je
test
ja
pop
adc
mov
rcl
lock
pop
adc
mov
adc
test
xor
movs
cmp
xor
sub
out
and
xchg
das
push
jb
sbb
je
imul
add
aas
push
add
sbb
mov
loopne
mov
add
mov
cmp
mov
xor
pushf
icebp
repnz
fadd
mov
pop
adc
gs
adc
cmp
lock
and
dec
adc
icebp
sbb
mov
cli
adc
(bad)
bound
pop
and
(bad)
(bad)
daa
mov
push
pop
mov
xchg
push
movs
call
test
mov
lds
xor
mov
and
mov
and
ror
and
mov
pop
jb
sub
pop
pop
add
mov
add
cmc
aas
add
mov
daa
bound
sbb
push
push
adc
sub
jb
sub
adc
sub
inc
jno
adc
cmc
out
jno
nop
pop
pop
inc
pusha
sub
push
cmc
fist
je
sub
inc
add
and
or
idiv
and
sub
inc
xor
adc
xchg
outs
loope
nop
push
repnz
sbb
adc
or
(bad)
mov
scas
add
lock
push
out
loope
sub
lock
inc
and
cmp
rol
sbb
inc
adc
inc
pop
test
xor
cmp
loop
sbb
ss
inc
mov
aaa
jb
scas
inc
loop
jmp
movs
jg
and
mov
push
jecxz
stos
and
jp
xor
add
xor
mov
or
jb
sub
xor
imul
daa
adc
or
inc
cmp
mov
and
icebp
push
(bad)
lock
push
jne
xor
nop
call
mov
daa
jae
sub
xor
or
shl
cmp
adc
stos
shl
adc
pop
and
idiv
and
jo
adc
adc
cmc
sysret
aaa
movs
das
inc
movs
aas
adc
shl
cmp
mov
add
loopne
loope
mov
in
add
mov
sti
xor
xchg
jp
aaa
lock
pop
shl
or
jb
or
inc
and
pusha
xor
call
xor
xchg
pop
mov
je
movs
das
and
(bad)
jnp
daa
loope
xor
mov
and
movs
outs
xlat
adc
scas
loope
mov
and
push
aas
je
movs
call
in
adc
push
jnp
xor
cli
jno
cmp
add
gs
test
inc
cmp
add
cmp
in
and
mov
mov
mov
sub
lock
jbe
add
mov
adc
cmc
aas
adc
add
and
inc
mov
mov
das
and
mov
and
sub
push
(bad)
inc
mov
xor
mov
xor
aas
daa
adc
sub
loope
add
mov
outs
and
mov
pop
jb
das
push
aaa
xor
or
addr16
arpl
sti
push
jb
retf
mov
loope
mov
sub
cmc
das
adc
movs
das
xchg
aaa
movs
mov
loope
test
loopne
mov
ins
xor
mov
push
jb
push
xlat
mov
add
inc
ins
icebp
loop
cmp
cmp
call
mov
jmp
mov
inc
pop
cmp
push
push
cmp
mov
das
add
aad
xchg
xor
scas
loope
nop
push
repz
jmp
mov
cld
inc
xor
sub
inc
sub
nop
cli
add
adc
sbb
hlt
lock
jae
jnp
inc
sar
pop
aad
xchg
movs
jg
xor
push
aam
sub
repz
jno
inc
imul
add
movs
jl
inc
mov
cmp
and
jnp
jb
or
pop
pop
adc
sbb
lock
add
lock
jb
mov
mov
test
nop
mov
adc
xor
sbb
test
pusha
xor
cmp
lock
xor
mov
push
mov
add
mov
cmp
xor
jecxz
jnp
jb
mov
adc
sar
adc
jnp
and
stos
add
lock
or
xor
inc
daa
xchg
iret
test
das
and
or
pop
add
sub
inc
mov
mov
loopne
mov
imul
adc
movs
das
adc
movs
das
add
mov
add
cmp
mov
lods
loope
mov
sub
out
test
das
adc
aad
inc
ret
adc
mov
mov
mov
adc
xor
dec
inc
ret
add
in
shl
sub
rcl
pop
xor
xchg
mov
loopne
pusha
sub
xor
out
psllw
mov
loope
sub
mov
xchg
push
cmc
outs
daa
jae
sub
jae
jp
add
mov
mov
mov
icebp
jb
jp
(bad)
rcr
xor
lock
pusha
stos
add
sub
push
mov
mov
adc
fcmovbe
bnd
push
inc
sbb
mov
or
inc
xchg
add
lock
and
sub
arpl
pop
add
mov
sbb
repnz
xchg
repnz
loope
inc
sub
jb
pushf
popa
shl
sub
cmc
unpcklps
sub
(bad)
lock
push
nop
pop
xor
inc
cmp
and
inc
push
push
or
bound
mov
xor
mov
scas
inc
inc
in
add
aad
and
movs
pop
inc
addr16
and
mov
xor
mov
add
and
loope
ss
push
mov
jp
inc
loopne
inc
pop
movs
outs
xlat
xor
pop
adc
and
jnp
jb
sub
arpl
cli
loope
inc
or
and
xor
nop
sub
hlt
push
ficom
inc
cmp
mov
stos
and
cmp
jo
adc
nop
imul
cmp
popa
push
add
jnp
jecxz
cmp
out
xor
movs
stos
add
jl
bound
fiadd
jo
loopne
jo
nop
repnz
pop
fs
dec
aaa
repnz
das
inc
push
xor
add
mov
cmp
and
and
or
mov
adc
jp
addr16
push
adc
jp
je
aas
xor
cli
add
sub
inc
xchg
cmp
and
sub
arpl
jnp
push
out
adc
or
arpl
mov
mov
adc
mov
inc
push
xchg
(bad)
xor
das
add
rcr
sbb
xor
xchg
jb
cmp
adc
sub
in
fiadd
push
inc
sbb
and
jp
ret
and
je
pop
add
cmc
aas
adc
mov
xor
mov
aaa
inc
mov
push
adc
mov
pop
ja
sub
in
inc
push
mov
loopne
mov
das
inc
ret
add
loope
xor
jp
aam
jp
inc
inc
aas
div
scas
push
repz
pusha
jae
mov
push
jb
pop
loope
rcr
pause
sub
arpl
cli
add
mov
sub
repnz
loop
or
repnz
dec
shl
mov
bound
cmp
mov
push
add
sbb
ss
push
fiadd
out
mov
icebp
jb
pop
xor
jne
push
xor
retf
rcr
pusha
jp
inc
jne
xor
test
add
imul
or
jb
push
ret
mov
mov
cmp
ins
and
movs
(bad)
je
mov
fs
xchg
mov
scas
loope
shr
gs
push
jb
(bad)
adc
pop
daa
xchg
sub
aas
loope
xchg
pop
pusha
inc
mov
mov
pusha
adc
adc
nop
imul
cmp
jb
retf
xor
add
cmp
mov
retf
mov
adc
mov
and
mov
add
sbb
jb
sti
adc
mov
or
xor
sti
adc
cmp
and
fiadd
loop
dec
jno
ss
xor
mov
das
and
mov
add
jl
mov
jnp
xor
stos
inc
bound
adc
push
inc
xor
adc
pusha
jae
pop
xor
mov
inc
jae
mov
add
sbb
inc
loope
xchg
daa
movs
pop
je
xor
dec
adc
popa
jb
retf
xor
push
mov
inc
in
add
and
sub
loopne
push
arpl
retf
mov
shl
cld
inc
mov
dec
addr16
mov
xor
mov
mov
add
pop
add
sub
inc
mov
stos
shl
pop
add
xchg
push
aam
call
adc
push
data16
jb
sbb
xor
imul
sub
repnz
cmp
in
mov
adc
test
xchg
ja
dec
xlat
adc
das
add
mov
das
inc
addr16
pop
adc
test
inc
and
jp
adc
stos
inc
push
loopne
add
sbb
cmp
mov
adc
cmc
jnp
mov
xor
out
push
stos
loope
push
push
jb
sub
mov
cmp
add
add
pop
inc
aaa
loope
inc
aaa
cmc
jg
add
jg
shl
sub
jb
sub
push
loopne
icebp
xchg
rcr
inc
and
cmp
sbb
push
xor
jno
loopne
fs
sbb
aad
test
aad
adc
xor
pop
and
pusha
jp
push
add
fs
dec
xor
in
adc
xor
pop
lock
xor
nop
ins
adc
mov
stos
shl
pop
adc
cmp
xor
sub
xor
cmp
adc
mov
inc
arpl
mov
xor
cmp
repnz
rcr
push
inc
pop
add
movs
jg
daa
pcmpgtb
dec
pusha
xor
sbb
xor
pop
push
jb
push
add
cmp
push
mov
inc
and
cli
inc
and
add
lock
push
fild
inc
mov
adc
in
push
jae
fwait
adc
jmp
loopne
and
stos
xor
push
retf
jno
add
sbb
push
mov
adc
icebp
xor
mov
and
movs
jg
(bad)
(bad)
cli
adc
mov
icebp
push
mov
and
sbb
cmc
sbb
jb
or
lock
adc
and
xor
xor
sub
loop
imul
xchg
cli
adc
pop
adc
pop
adc
lock
adc
rdtsc
and
dec
push
add
sbb
mov
popa
and
dec
inc
xor
pop
inc
jb
stos
rcl
loopne
add
out
adc
mov
shl
cmp
les
fwait
push
adc
sub
push
jno
inc
mov
lock
rep
shl
pop
adc
sub
movs
das
popa
adc
or
loop
stos
inc
and
movs
lock
mov
push
retf
ss
adc
and
and
dec
push
mov
lock
push
jg
je
dec
xor
icebp
jnp
ror
push
aaa
mov
adc
mov
add
rcr
pop
ja
sub
pop
inc
rol
push
add
das
inc
ret
shl
mov
loopne
and
loop
stos
inc
jb
imul
pop
mov
test
mov
mov
daa
repz
icebp
add
dec
mov
out
jp
addr16
dec
cmps
xor
das
inc
inc
mov
inc
pop
inc
ins
je
movs
jg
(bad)
out
adc
inc
and
pop
div
mov
pop
xor
xor
sti
adc
retf
mov
inc
bound
push
and
sbb
xor
shl
inc
sbb
bound
mov
inc
push
add
pop
jae
sub
inc
and
jae
stos
xor
mov
sub
aam
jp
jb
or
mov
and
dec
push
aaa
movs
pop
ja
test
xor
mov
push
jae
cli
loope
mov
add
mov
ins
add
mov
dec
xchg
jb
jmp
mov
sub
xchg
imul
lock
outs
push
aaa
xchg
pop
add
test
movs
out
loope
xchg
mov
xchg
inc
adc
jae
sbb
hlt
xor
push
xor
add
jo
xor
sub
mov
mov
loope
xor
mov
stos
inc
add
repz
repnz
push
xor
sub
jb
cmp
xchg
inc
dec
adc
loopne
push
cmp
adc
adc
xor
stos
xor
nop
sbb
arpl
mov
addr16
push
xor
xor
cmp
sub
adc
jnp
(bad)
lock
shl
sub
jae
jp
and
and
lock
loope
lock
cmp
and
jp
adc
sbb
adc
stos
adc
pusha
sub
inc
cmp
xor
sbb
and
cmp
aam
or
lock
les
sbb
push
stos
shl
cmp
fs
rcl
mov
icebp
jb
pop
daa
jae
sub
test
jp
inc
shr
xor
jp
mov
stos
shl
pushf
inc
bound
jp
mov
pusha
jmp
out
mov
mov
jnp
push
xchg
pop
adc
add
jnp
jb
sbb
jecxz
jp
inc
imul
xchg
cmp
inc
shr
pop
pause
stos
shl
nop
sub
dec
add
aad
xor
xchg
sub
arpl
mov
xor
sub
inc
mov
push
xor
adc
nop
cmp
bound
inc
inc
inc
jmp
inc
mov
adc
cmp
loopne
add
sub
xor
cmp
jae
or
add
das
inc
pop
mov
and
or
mov
inc
and
sti
adc
push
jecxz
cli
loope
inc
jmp
icebp
scas
add
sbb
pop
inc
out
xchg
pop
xchg
cmp
push
movs
jg
jb
scas
xor
mov
lods
inc
bound
cmp
ja
sub
mov
test
movs
mov
daa
loop
scas
adc
icebp
or
and
cmp
and
loopne
or
adc
or
(bad)
mov
scas
add
nop
sub
loope
loope
movs
push
rol
inc
and
sub
mov
push
adc
pop
(bad)
mov
dec
pop
inc
xchg
das
pusha
xor
scas
and
cmp
jb
sub
push
imul
(bad)
daa
mov
adc
mov
adc
sar
lock
inc
addr16
fndisi(8087
and
jl
ret
xor
mov
xchg
movs
das
and
test
inc
mov
(bad)
adc
scas
push
xchg
nop
cmp
inc
sub
xor
pop
pop
repz
pop
pop
adc
cmp
data16
cs
adc
or
xlat
mov
cs
push
mov
adc
add
cmp
movs
mov
adc
mov
sub
inc
lock
jae
das
inc
mov
imul
(bad)
push
inc
xchg
ficom
push
ficom
push
pop
shl
adc
mov
and
inc
sbb
mov
and
or
lock
out
adc
add
jp
repnz
pop
ret
xor
inc
cmp
and
cmp
jne
pop
jb
cs
xchg
or
push
jae
cmp
push
mov
sub
repnz
adc
xchg
pop
xor
sbb
addr16
xor
xchg
jnp
hlt
mov
sbb
arpl
das
pusha
arpl
jmp
and
stos
icebp
jb
cmp
jne
aaa
adc
push
je
sbb
adc
push
mov
unpcklps
and
sbb
bound
cli
adc
cmp
cmc
pop
add
sbb
ss
sbb
pusha
movs
test
add
jp
inc
jne
pusha
xor
sub
sbb
inc
mov
cmp
and
stos
xor
ror
jae
scas
mov
nop
pop
pop
mov
lock
pop
daa
and
dec
and
push
unpckhps
jo
mov
sub
aas
adc
aad
adc
pop
adc
xchg
cmp
loope
add
jp
push
inc
outs
out
xchg
movs
inc
shr
hlt
mov
and
xchg
aas
not
dec
add
ror
icebp
push
mov
xor
add
mov
adc
scas
add
mov
xor
mov
mov
jnp
jecxz
sub
xor
popa
inc
xchg
cli
push
arpl
add
cmp
mov
nop
dec
adc
sub
inc
mov
cmp
push
in
push
shl
imul
mov
adc
mov
fcomi
(bad)
aad
adc
mov
push
cmp
jae
push
inc
lds
push
addr16
xor
xchg
aas
push
inc
mov
jo
xchg
out
mov
icebp
or
cmps
mov
dec
shl
xor
mov
je
inc
push
movs
sbb
jae
pop
push
aaa
push
pop
div
das
push
les
adc
add
inc
jecxz
sbb
jb
mov
mov
mov
cmp
popa
push
cs
outs
adc
push
arpl
aas
mov
movs
cmp
bound
push
shl
jle
jae
mov
pop
inc
add
xor
mov
cmp
push
mov
scas
popa
loop
retf
mov
pop
and
icebp
jb
cmp
pop
push
test
xchg
xor
add
add
aad
shl
mov
inc
jae
cmp
in
sub
push
out
xor
mov
das
add
nop
push
pop
push
out
test
das
shl
and
inc
cmp
add
mov
and
loope
xchg
pop
and
or
and
lock
ret
push
mov
daa
mov
ror
inc
mov
push
arpl
or
mov
pop
and
cmp
pop
pop
and
cmp
mov
dec
pop
push
xor
dec
test
pop
loopne
hlt
or
out
sub
out
add
mov
nop
push
lock
xor
and
mov
and
test
push
mov
icebp
adc
push
adc
das
add
nop
push
inc
push
outs
nop
rcl
sbb
push
sar
addr16
push
xchg
cmp
jbe
adc
and
rcr
push
jb
or
push
mov
and
or
inc
xor
cmp
cld
jb
movs
dec
and
test
bound
or
addr16
cli
mov
cmps
lock
jb
mov
and
test
daa
mov
add
mov
and
pop
and
sub
mov
cs
xor
adc
xor
cmp
inc
lock
add
dec
adc
push
jp
and
adc
js
daa
movs
cs
jno
inc
push
nop
jp
hlt
loopne
add
loopne
add
aas
and
mov
xor
xchg
je
movs
jg
push
out
xor
mov
scas
icebp
jb
cmp
pop
xchg
test
jb
push
ss
adc
aaa
inc
pop
adc
xor
pop
daa
loop
stos
popa
mov
dec
adc
jp
xor
lahf
popa
rol
jle
push
in
cmc
add
shl
xor
mov
adc
inc
jg
ss
xchg
movs
pop
and
mov
add
ror
icebp
add
sub
xor
adc
mov
adc
icebp
pop
push
es
lock
cs
shr
push
out
adc
xchg
das
add
or
repnz
(bad)
repnz
cs
inc
shr
xchg
jp
jae
cmp
mov
add
loopne
adc
mov
adc
movs
mov
add
loopne
xor
mov
sbb
jae
cs
adc
sbb
not
or
xlat
mov
inc
mov
push
xor
mov
inc
pop
xor
and
pop
and
add
fs
pop
and
sbb
adc
aaa
movs
pop
add
test
push
ret
(bad)
xchg
cs
pop
(bad)
pop
xchg
scas
shl
pop
and
mov
and
ror
xchg
jb
sbb
mov
inc
cmp
add
inc
and
sub
xchg
or
icebp
cmove
mov
inc
and
sub
outs
xor
xchg
pop
add
in
test
jg
data16
inc
push
ret
rcl
sbb
out
or
push
movs
mov
and
mov
pushf
adc
mov
jp
mul
cs
mov
inc
add
cmp
es
jb
mov
pop
repz
and
pop
adc
add
adc
je
push
pop
pop
and
data16
shl
xor
mov
cmc
popa
inc
jle
adc
ds
inc
mov
lock
outs
daa
repz
cs
aaa
lds
pop
popa
test
pusha
arpl
sbb
inc
xchg
imul
xchg
cmp
nop
fild
mov
adc
mov
ja
mov
and
and
ja
aas
pop
ja
das
pop
push
in
cmc
add
inc
bound
cmp
mov
lock
or
inc
lock
outs
push
xor
imul
pop
xor
cmp
inc
sub
or
imul
dec
mov
xor
push
(bad)
cmc
pop
push
xor
mov
add
jb
scas
xor
push
stos
add
mov
je
mov
out
das
and
mov
adc
shr
add
push
mov
sbb
jb
sub
mov
cmp
repnz
popa
xor
cmp
test
movs
lahf
inc
add
dec
and
push
(bad)
jb
mov
and
test
jb
sbb
(bad)
mov
scas
icebp
jb
cmp
pop
xchg
ja
pop
loope
lds
mov
loope
icebp
xor
sub
data16
xor
in
in
sar
mov
sbb
inc
inc
imul
and
mov
xor
sar
loopne
inc
or
out
cmp
jno
cmp
add
cmp
daa
mov
iret
add
loopne
xor
cmp
rcl
hlt
xchg
aas
push
aaa
mov
mov
test
xchg
inc
cs
xor
xor
xor
mov
mov
adc
adc
or
push
das
test
mov
pop
adc
das
xor
sar
push
and
sbb
mov
icebp
xchg
lock
pop
icebp
lock
inc
sbb
not
cs
ret
and
sbb
arpl
cmp
mov
nop
dec
push
add
fcmovb
ret
pop
ret
add
push
pop
xchg
outs
inc
and
fiadd
nop
sub
jb
jnp
je
pop
add
test
pusha
xor
sbb
mov
adc
and
inc
sbb
mov
push
aaa
push
pop
xchg
ja
pop
loopne
lds
mul
or
push
mov
jp
addr16
pop
repnz
push
aaa
xchg
pop
adc
add
sar
push
mov
xor
xchg
cmp
push
movs
cmp
add
jp
jbe
cmp
jbe
jg
test
pusha
xor
sbb
es
jb
mov
add
hlt
cmp
repz
pop
and
data16
shl
ficom
nop
retf
mov
and
nop
sub
inc
movs
pop
pop
xor
sub
jae
sub
jo
add
or
addr16
and
sub
mov
or
out
cmp
jbe
and
mov
and
mov
xor
mov
inc
bound
call
test
xor
mov
and
add
aas
and
mov
push
shl
sub
jb
jnp
je
pop
xor
sbb
je
das
add
mov
adc
push
idiv
adc
push
aaa
aad
hlt
push
test
adc
xor
push
jnp
shr
pop
inc
mov
add
cmc
outs
add
or
lock
sbb
loope
push
addr16
and
(bad)
mov
mov
add
cmp
mov
xor
test
je
and
mov
add
sar
and
jnp
arpl
cmp
adc
or
shl
sub
inc
mov
stos
add
out
and
(bad)
mov
add
mov
and
movs
cmp
push
mov
stos
push
aaa
adc
das
add
lds
adc
or
lock
pusha
mov
fs
push
adc
push
jb
or
pop
adc
test
xor
jp
push
sub
sub
addr16
das
je
aad
test
movs
dec
je
xchg
mov
loope
mov
adc
xor
pop
jae
sub
rcr
(bad)
nop
imul
adc
xchg
scas
adc
and
pusha
and
sbb
xchg
cs
mov
je
movs
inc
loop
pop
and
mov
xchg
shr
adc
es
add
mov
pop
jae
das
pusha
adc
sbb
lock
imul
test
dec
and
cmp
mov
(bad)
xor
fadd
mov
pop
add
test
add
test
xor
xor
inc
in
mov
es
adc
fs
adc
push
data16
sbb
cmps
or
hlt
lock
inc
in
aaa
adc
push
je
mov
xor
mov
je
and
aas
xor
mov
inc
arpl
pop
xor
mov
aas
out
loopne
add
mov
add
or
pusha
push
scas
add
xchg
sub
mul
scas
adc
xor
fs
xchg
or
mov
test
cmc
retf
test
sub
and
or
mov
addr16
mov
and
cmc
outs
pop
and
scas
icebp
jb
cmp
repz
xor
pop
and
out
adc
add
loopne
and
cmp
fs
pop
fs
sub
cmps
sub
cmps
sub
cmps
sub
cmps
sub
cmps
sub
cmps
sub
cmps
sub
cmps
sub
cmps
sub
cmps
sub
cmps
sub
cmps
sub
cmps
sub
cmps
sub
cmps
sub
jnp
jo
push
(bad)
sub
pop
scas
adc
dec
push
lahf
jne
push
cdq
sub
aaa
lds
adc
imul
xor
sub
or
je
inc
jae
nop
fs
jae
loopne
inc
nop
adc
repz
xchg
cs
repnz
pop
scas
adc
fwait
hlt
es
in
mov
or
leave
or
cmp
or
sub
loopne
jle
xor
cmp
inc
inc
sub
pop
out
dec
and
mov
xor
test
mov
mul
cs
push
adc
cs
lahf
adc
xchg
mov
sub
mov
inc
cmp
ss
pop
scas
xchg
dec
and
adc
adc
fwait
push
scas
imul
cs
stc
adc
pop
in
sub
pop
mov
cs
lahf
xchg
sbb
xchg
ja
xchg
fnstsw
push
xchg
cs
iret
adc
test
fs
add
pop
(bad)
adc
cmps
aaa
sahf
add
xor
and
stc
adc
mov
pop
jns
xchg
dec
arpl
pop
out
cmps
jae
fst
cs
iret
adc
or
and
push
es
repnz
ss
aaa
mov
cmp
inc
cld
sub
pop
push
rcl
pop
je
pop
pop
adc
add
sahf
or
daa
pop
cmps
sub
pop
scas
adc
pop
push
call
pop
lahf
adc
daa
pop
sahf
add
or
pop
pop
loopne
mov
daa
fnsave
adc
rcl
cs
pop
adc
add
sahf
lea
jb
aas
push
cmps
cmp
pop
iret
adc
daa
pusha
sahf
add
mov
ror
jae
shl
adc
push
inc
nop
adc
repz
xchg
cs
repnz
pop
scas
adc
daa
sub
sti
leave
jne
sbb
jmp
cmp
adc
scas
jecxz
(bad)
push
dec
loopne
push
pop
in
sub
pop
cmps
adc
cmps
cmp
jo
or
scas
and
pop
adc
sub
pusha
cmps
dec
xlat
cmp
test
fld
test
jmp
jmp
push
pusha
test
pop
add
inc
test
js
shr
ret
test
push
enter
cmp
enter
cmp
mov
xor
xlat
int3
add
mov
(bad)
das
test
jb
outs
pop
dec
stos
hlt
inc
add
pop
leave
out
cmp
inc
dec
inc
cmp
stos
pop
lods
(bad)
push
push
ja
mov
pop
enter
ja
push
ret
and
fbld
jae
aam
movs
ret
push
sbb
out
jno
(bad)
lods
pushf
inc
fsubr
sbb
push
int
dec
adc
lds
in
jb
push
or
shr
jns
push
ins
popa
pusha
cmp
js
push
ins
push
sub
fdiv
cmp
enter
into
std
out
xchg
les
mov
out
or
dec
lock
and
shl
nop
xchg
or
mov
cli
pop
pusha
dec
les
sub
into
out
out
fbstp
fs
and
cmp
shr
or
add
add
adc
pop
jno
inc
push
imul
push
loope
mov
repnz
inc
lds
xlat
mov
mov
pop
pop
and
xor
inc
leave
dec
fwait
inc
mov
aaa
iret
add
imul
ins
imul
or
aaa
int3
jecxz
(bad)
dec
push
dec
inc
iret
xor
push
leave
hlt
retf
and
outs
lock
jge
rcr
scas
rcl
lock
outs
lock
adc
addr16
outs
lock
je
lock
dec
outs
lock
je
cmc
sub
je
int
xor
dec
sub
outs
lock
hlt
add
sub
jge
lock
je
jo
dec
outs
lock
je
xchg
sub
jge
lock
sub
or
dec
je
lock
adc
outs
lock
hlt
imul
outs
lock
je
lock
adc
fs
outs
lock
je
nop
sub
or
sub
outs
lock
jge
lock
je
mov
jmp
push
outs
lock
jge
mov
hlt
pop
shr
push
mov
sbb
pop
rcl
add
fstp
lds
rcl
xchg
inc
int
add
xor
loope
dec
cmp
add
inc
mov
das
sbb
add
pusha
dec
push
les
inc
loopne
sub
enter
jge
addr16
mov
lock
xor
xor
lahf
fs
xor
retf
mov
repnz
std
xor
int
ret
sub
inc
fist
pop
inc
cmp
jmp
enter
shl
sub
stc
pop
xor
sub
je
ins
fidiv
mov
mov
xchg
pop
mov
mov
fdiv
sbb
div
push
xchg
ror
lock
mov
(bad)
repz
movs
xchg
mov
mov
repz
out
loop
cli
add
jae
mov
cmc
call
sub
pop
dec
and
pop
adc
sahf
iret
add
out
aaa
les
mov
loopne
neg
mov
scas
enter
fsub
clc
sbb
pop
jno
out
inc
cmp
add
xor
fbstp
jnp
xlat
push
lock
into
add
or
mov
jae
(bad)
xchg
jmp
(bad)
pushf
ret
pushf
xchg
jb
mov
mov
add
or
retf
pusha
test
sub
sub
lods
sub
mov
and
sbb
fldcw
or
lods
mov
fcomip
repz
fldcw
jl
addr16
sbb
mov
(bad)
(bad)
pushf
xchg
pandn
pop
(bad)
cwde
sbb
out
ret
inc
inc
sbb
(bad)
pushf
mov
(bad)
pop
leave
fwait
jmp
(bad)
pushf
ret
popf
xchg
(bad)
data16
mov
(bad)
pushf
sub
(bad)
pushf
xchg
psubsw
xchg
pop
add
(bad)
pushf
inc
(bad)
fcom
jbe
sar
push
lods
inc
lahf
lods
test
mov
xor
fcom
loope
push
shr
leave
jmp
push
mov
test
int
mov
dec
or
mov
pusha
dec
push
lds
inc
lock
dec
pop
sub
add
push
dec
nop
jnp
cdq
jmp
xchg
jecxz
mov
dec
dec
inc
adc
shl
arpl
ror
dec
sar
push
(bad)
add
sbb
cmp
jb
mov
jge
sbb
les
inc
cmp
pop
mov
stos
imul
mov
nop
xchg
push
and
jb
jbe
ret
fld
div
xchg
push
add
mov
and
int
(bad)
clc
add
neg
(bad)
scas
pushf
mov
push
sub
out
push
(bad)
cmp
arpl
loopne
popw
mov
jbe
fst
and
mov
sub
iret
push
sbb
bound
add
pushf
cli
mov
in
call
int3
xor
or
test
lock
or
cmp
stos
push
push
fbld
sub
retf
jge
sub
pop
push
mov
pop
scas
xchg
scas
div
push
mov
aaa
pop
xchg
cmp
jp
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
bound
pop
bound
mov
fs
mov
gs
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
bound
pop
bound
mov
popa
(bad)
mov
gs
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
bound
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
bound
les
fisub
pop
push
out
mov
out
mov
pop
out
enter
into
bound
fidiv
add
mov
(bad)
dec
data16
imul
jmp
out
pop
out
mov
(bad)
mov
in
xchg
fisub
outs
push
data16
pop
add
out
mov
pop
mov
pop
(bad)
loope
loop
cmp
jae
or
fstp
out
lods
out
mov
pop
out
mov
out
jmp
imul
mov
pop
out
mov
out
mov
mov
dec
xchg
ds
out
mov
out
mov
mov
addr16
shl
cmp
out
sti
in
push
lock
out
mov
out
mov
repz
mov
push
repnz
cmp
adc
fnstenv
cs
out
mov
out
mov
shl
into
push
out
mov
out
mov
nop
in
dec
and
push
sub
outs
add
mov
add
out
mov
scas
in
fld
into
data16
xor
out
mov
pop
out
mov
out
mov
xchg
mov
in
rcr
mov
mov
push
out
mov
out
mov
mov
imul
sub
imul
div
cs
out
mov
out
mov
cli
loope
call
or
out
or
out
mov
mov
or
out
mov
pop
scas
popf
addr16
cli
shr
aad
push
(bad)
mov
pusha
out
mov
out
mov
call
push
out
mov
out
clc
push
pop
imul
sub
mov
(bad)
mov
jnp
mov
out
mov
out
(bad)
addr16
pop
(bad)
fs
and
cmps
sub
add
mov
fs
(bad)
std
mov
push
xchg
scas
shl
clc
cmps
dec
mov
ficom
rol
push
add
mov
pop
out
enter
mov
or
(bad)
and
mov
or
and
inc
mov
or
jmp
mov
jmp
push
ins
lock
mov
pop
sbb
inc
nop
sub
je
ss
in
mov
(bad)
cmp
out
(bad)
mov
cwde
pop
int3
add
stos
push
mov
jno
int3
add
(bad)
shl
jle
retf
addr16
pop
dec
(bad)
mov
mov
and
xchg
jnp
cmp
fs
in
sar
dec
pop
aam
pop
lds
(bad)
mov
std
add
pop
(bad)
fs
cdq
stos
inc
jns
not
mov
(bad)
test
dec
icebp
loopne
imul
mov
popf
daa
retf
js
mov
cmp
and
data16
sub
jns
mov
rcr
mov
jne
jecxz
fs
addr16
(bad)
add
fnstcw
pause
repz
out
xchg
(bad)
fld
sub
fwait
mov
dec
call
add
cmc
ja
mov
jle
push
fcomp
sub
push
daa
bound
nop
mov
cld
call
int
push
in
stos
xlat
cmp
pusha
or
vorps
mov
mov
addr16
adc
pop
sbb
xor
test
mov
sti
sbb
fwait
inc
mov
cmps
xchg
rcr
cmp
mov
movhps
lds
retf
xor
and
ins
sub
pop
in
popf
es
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
fisttp
xor
mov
pop
gs
in
frstor
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
pop
in
lea
jmp
lea
(bad)
jmp
and
jmp
pop
jmp
pop
in
jge
psubsw
and
jmp
and
jmp
pop
jmp
das
jmp
pop
jmp
and
jmp
and
ins
and
jmp
and
jmp
and
int
pop
in
lods
and
jmp
lea
(bad)
jmp
and
jmp
pop
jmp
and
jmp
pop
call
lea
aas
jmp
dec
jmp
and
jmp
pop
in
lea
sbb
(bad)
ror
in
or
lahf
add
aam
pop
es
mov
call
ins
shr
es
push
es
lahf
inc
movs
mov
loopne
mov
jle
jmp
es
pop
es
pop
(bad)
mov
lahf
inc
jmp
lea
es
pop
es
pop
cmc
loope
push
das
aam
and
aam
pop
(bad)
mov
pop
push
jmp
or
pop
test
lahf
mov
das
mov
cld
mov
and
aam
pop
push
(bad)
es
loop
es
pop
es
lahf
sbb
mov
ja
mov
push
push
imul
and
aam
pop
es
pop
pop
in
mov
sbb
adc
aam
push
es
pop
push
jmp
in
pop
es
pop
pop
in
mov
sbb
adc
aam
push
es
pop
push
jmp
sub
pop
es
pop
pop
in
mov
sbb
adc
aam
push
es
pop
push
jmp
fstp
es
pop
pop
in
mov
sbb
adc
aam
push
es
pop
mov
mov
das
aam
and
aam
pop
pop
in
mov
sbb
adc
aam
push
es
pop
cmc
in
pop
das
aam
and
aam
pop
es
pop
xchg
jmp
pop
pop
int
cmps
inc
pop
retf
push
sbb
inc
es
pop
es
pop
cmc
out
pop
das
aam
and
aam
pop
aas
out
jp
lods
hlt
and
aam
es
pop
es
pop
jg
mov
pop
lods
hlt
and
aam
es
pop
mov
call
mov
in
jns
retf
je
sbb
add
int
scas
inc
sbb
push
sbb
xchg
aam
pop
es
lahf
sbb
mov
retf
es
jmp
popf
sbb
test
retf
fldenv
mov
jmp
and
push
jle
es
pop
es
pop
cmps
mov
pop
push
imul
es
lahf
adc
mov
push
sbb
test
mov
lea
mov
es
jmp
pop
pop
es
pop
es
mov
inc
dec
mov
sbb
xchg
pop
fisttp
pop
es
pop
es
mov
adc
in
fldenv
es
push
es
pop
es
lahf
inc
int
jg
ins
mov
adc
mov
push
sbb
das
push
imul
and
mov
mov
es
pop
push
jmp
pop
adc
mov
push
xchg
push
adc
aam
push
es
pop
es
pop
adc
mov
es
push
es
pop
es
mov
retf
adc
dec
mov
outs
mov
mov
(bad)
adc
aad
fdiv
bound
ds
movs
mov
jmp
ins
pop
es
lahf
jl
mov
das
aam
and
aam
pop
pop
in
mov
es
push
es
pop
es
lahf
inc
into
mov
sbb
adc
fst
es
test
sar
mov
jne
mov
test
data16
aam
and
aam
pop
neg
jmp
jg
jge
aas
call
sub
mov
pop
in
lds
test
icebp
cmps
cwde
popf
fwait
dec
(bad)
jbe
jbe
sar
scas
mov
or
imul
pop
xchg
mov
es
pop
push
cmps
mov
jl
mov
das
aam
and
aam
lahf
dec
jmp
es
pop
xchg
mov
pop
fnstsw
pop
es
pop
push
xlat
mov
sbb
es
push
test
es
pop
jbe
mov
aas
jmp
es
pop
es
pop
arpl
in
and
aam
pop
jbe
mov
jg
mov
es
pop
es
pop
sbb
mov
es
push
es
pop
test
mov
das
aam
and
aam
pop
es
pop
xchg
mov
push
imul
push
sbb
scas
inc
pop
mov
pop
mov
aam
pop
es
pop
inc
jmp
es
pop
es
pop
es
mov
sbb
mov
es
pop
es
lahf
stc
out
das
lahf
retf
mov
sbb
sub
inc
pop
mov
pop
mov
aam
pop
es
pop
mov
mov
das
aam
and
aam
pop
es
mov
sbb
mov
es
pop
es
pop
push
imul
push
adc
add
popf
fld
es
push
es
pop
es
mov
adc
mov
pop
std
fnstenv
es
push
es
pop
push
imul
es
mov
es
jmp
sub
aaa
es
pop
data16
pop
push
jmp
sub
pop
es
lahf
adc
mov
mov
sti
test
pop
sbb
mov
sbb
adc
aam
push
es
test
repz
test
xchg
jle
(bad)
in
mov
mov
sub
shl
fldenv
sbb
jb
dec
cmp
add
inc
mov
sbb
inc
clc
fs
inc
enter
enter
(bad)
lods
into
dec
lock
imul
hlt
cld
pop
les
jbe
in
out
inc
xchg
pop
test
inc
imul
push
add
and
dec
cmp
(bad)
(bad)
(bad)
mov
xor
fsub
jge
je
fstp
inc
pop
ror
xchg
add
cmp
scas
inc
jmp
adc
jnp
and
es
add
sbb
and
jo
add
sbb
add
pop
js
ins
clc
in
cmp
mov
dec
aam
imul
hlt
push
inc
les
enter
enter
xchg
sbb
ret
repz
mov
loop
or
jae
(bad)
fidiv
jmp
test
lods
(bad)
cmps
call
aaa
pop
les
mov
mov
out
cld
out
repz
add
pop
stos
bnd
mov
repz
das
sub
mov
fidiv
sbb
aaa
mov
scas
ror
add
jne
in
push
add
mov
push
pop
(bad)
ss
dec
mov
sahf
(bad)
cdq
mov
add
movs
push
(bad)
dec
loope
inc
cmp
add
(bad)
sbb
hlt
aam
adc
retf
mov
sub
repz
out
neg
fdivp
fist
fist
data16
scas
in
scas
xchg
out
addr16
ja
fs
fisub
(bad)
jle
pop
test
nop
lods
repz
xchg
mov
into
scas
in
cs
in
scas
fxch
addr16
in
pop
scas
fcomi
pop
ss
fist
fist
data16
fs
in
outs
cmps
aam
addr16
in
scas
in
pop
scas
in
(bad)
ins
jo
nop
test
out
out
into
addr16
in
daa
scas
in
pop
stos
cdq
(bad)
addr16
into
addr16
in
scas
in
cmp
js
xchg
in
add
ret
pop
xchg
lods
into
addr16
dec
scas
in
out
in
into
addr16
into
inc
scas
in
push
mov
imul
push
xchg
in
ss
pop
cmps
cmps
and
(bad)
fsin
pop
xchg
mov
cmp
add
inc
leave
xchg
fwait
in
and
mov
mov
and
lock
add
in
outs
(bad)
adc
jbe
fsubr
adc
outs
rcr
add
cs
xchg
fadd
jge
repnz
inc
or
mov
test
ret
mov
cmps
fsub
shl
push
mov
rol
adc
(bad)
sbb
les
mov
fs
ret
or
mov
jb
and
xor
add
in
inc
(bad)
fs
enter
iret
fist
xchg
and
lods
fs
(bad)
aad
test
lock
aas
or
(bad)
jge
mov
pop
push
or
shr
jl
pop
or
xor
and
pop
and
push
aam
sub
adc
and
jbe
(bad)
jp
sbb
jbe
pop
or
adc
es
(bad)
jmp
sbb
xor
add
(bad)
out
inc
cmp
add
xor
fst
pop
mov
inc
and
xchg
aad
xor
aaa
sbb
cmp
lods
retf
sub
fidiv
je
add
mov
sub
jmp
mov
pop
pop
dec
pop
ss
enter
das
div
fwait
cwde
pop
pop
xchg
xchg
fld
ins
fstp
retf
xchg
fstp
sub
imul
xchg
(bad)
xchg
fld
stos
xchg
fistp
stos
cmp
sbb
test
leave
pop
das
loop
sti
shr
adc
sbb
and
stos
cwde
pop
sbb
xchg
fcmovne
stos
adc
sbb
xchg
fld
out
test
or
xchg
jmp
sub
(bad)
sub
(bad)
stos
xchg
jmp
sub
(bad)
stos
xchg
fistp
sub
sbb
xchg
fistp
stos
xchg
fistp
sub
sbb
xchg
fistp
stos
xchg
fistp
stos
in
rcr
sti
xchg
fistp
call
sub
xchg
jmp
sub
in
xchg
mov
loope
or
test
cwde
fcmovnbe
xchg
xchg
fisttp
xchg
fistp
stos
shr
movs
xor
xchg
sbb
jle
pop
mov
and
xchg
fist
stos
xchg
fistp
stos
xchg
fistp
stos
inc
popf
sbb
lods
rcr
sbb
jb
sub
ret
sti
ret
lods
bound
push
sbb
push
or
adc
sbb
xor
jae
in
rol
test
pop
test
pop
mov
icebp
(bad)
iret
lock
test
push
test
pop
test
fucom
inc
sti
pop
test
pop
pop
test
pop
and
sub
xor
mov
rcr
icebp
fnstsw
test
test
pop
lds
icebp
pop
mov
jg
push
test
pop
rol
sbb
test
pop
test
pop
lds
icebp
pop
mov
jg
push
test
pop
test
pop
rol
sbb
test
pop
test
fnsave
icebp
(bad)
dec
mov
mov
inc
into
pop
test
push
test
pop
test
fstp
push
clc
xor
mov
test
push
test
pop
(bad)
(bad)
cmp
jg
pusha
test
pop
test
fld
push
icebp
ja
jg
push
test
pop
test
pop
mov
movs
and
rcr
icebp
pop
lds
icebp
pop
mov
jg
push
test
pop
rol
icebp
sbb
test
pop
test
pop
lds
icebp
pop
mov
jg
pop
test
pop
test
icebp
pop
test
hlt
jne
mov
cmps
inc
enter
xchg
test
pop
test
pop
test
pop
lock
icebp
shl
mov
jg
pop
test
fucom
jne
push
mov
jg
pop
test
fucom
inc
sti
pop
test
pop
pop
test
pop
dec
push
icebp
pop
mov
and
(bad)
cld
mov
pusha
mov
push
cwde
and
inc
retf
push
enter
clc
adc
enter
ins
push
test
pop
or
jg
pusha
test
pop
test
pop
movs
jo
pop
push
xor
xor
jbe
or
jg
pop
test
pop
dec
sbb
ins
fild
add
jo
pop
push
xor
xor
jbe
or
jg
pop
test
fst
inc
std
push
jg
push
test
pop
or
xor
mov
or
push
mov
push
cmp
les
mov
jg
pop
test
pop
lds
icebp
pop
mov
jg
push
test
pop
test
pop
rol
icebp
sbb
test
pop
test
pop
mov
jg
test
pop
mov
icebp
mov
push
fsub
inc
cmp
xchg
adc
fsub
rcr
icebp
shl
mov
jg
pop
test
pop
test
pop
cmp
bound
inc
cs
push
cmp
shl
inc
cwde
adc
ror
bound
jg
pusha
test
pop
test
pop
mov
test
inc
leave
adc
jg
pop
test
pop
add
inc
stc
lods
in
js
mov
jo
sub
xchg
inc
push
sub
inc
(bad)
sbb
jg
pop
test
icebp
pop
mov
push
in
sub
shl
push
inc
outs
mov
push
cmp
shl
ja
adc
test
test
pop
test
pop
test
fld
jg
pop
xor
div
sub
jg
fucom
inc
icebp
jge
push
pop
inc
sbb
fst
(bad)
jmp
inc
sbb
jg
pop
jnp
icebp
mov
test
xchg
pop
inc
sbb
fnsave
add
jmp
inc
sbb
cmp
pop
mov
jg
pop
test
fucom
xor
clc
ins
test
pop
test
pop
push
inc
sti
pop
inc
dec
pop
xor
push
cmp
int3
pop
test
pop
test
pop
test
lock
test
pop
test
fld
jg
pop
and
jg
push
test
pop
test
fnsave
jg
test
pop
test
pop
cmp
or
jg
fucom
add
pop
test
clc
pop
and
jg
push
test
pop
test
fisttp
xchg
pop
mov
jg
pop
test
pop
test
pop
(bad)
push
pusha
test
pop
clc
ja
or
jg
pop
test
pop
aam
not
jmp
shr
dec
mov
xchg
imul
pop
test
pop
or
xor
mov
or
push
mov
push
cmp
in
(bad)
(bad)
mov
push
in
sub
cmp
test
push
test
pop
test
pop
or
jg
pusha
test
pop
(bad)
aaa
icebp
cmp
jg
pusha
test
pop
test
fld
sar
xor
inc
push
test
fisttp
xchg
pop
test
pop
and
jg
push
test
fucom
inc
icebp
pop
test
clc
pop
test
pop
test
pop
cmp
or
jg
pop
test
pop
(bad)
push
pusha
test
pop
js
icebp
or
jg
pop
test
pop
aam
not
or
push
fdiv
iret
jge
neg
test
fstp
mov
mov
mov
test
push
test
pop
test
pop
or
jg
pusha
test
pop
test
pop
add
(bad)
std
push
test
pop
int
lock
test
push
test
fstp
push
sti
clc
pop
inc
pop
lock
stos
call
test
push
test
pop
test
pop
rol
sbb
test
pop
test
pop
js
icebp
or
rcr
icebp
sbb
test
fnsave
icebp
pop
lods
push
lock
pop
pop
pop
mov
inc
into
sbb
jg
pop
test
fstp
push
clc
mov
mov
test
push
test
pop
or
jg
pusha
test
pop
(bad)
icebp
cmp
jg
pusha
test
pop
test
fnstsw
jbe
jno
jg
pop
test
pop
test
fisttp
xchg
pop
test
pop
and
jg
push
test
pop
test
fucom
add
pop
test
clc
pop
test
pop
and
jg
push
test
pop
(bad)
push
pusha
test
pop
js
icebp
or
jg
fnsave
icebp
pop
lods
push
lock
sub
xor
inc
into
sbb
jg
pop
test
fstp
mov
mov
mov
mov
jg
pop
test
pop
test
fucom
ja
adc
jg
pop
test
pop
test
fisttp
adc
jg
pop
add
inc
sti
adc
jg
pop
test
pop
dec
xchg
hlt
pop
mov
push
enter
pop
push
test
pop
pop
test
pop
test
pop
js
icebp
cmp
jg
pop
test
fisttp
mov
pop
test
pop
test
pop
test
icebp
fnstsw
test
test
pop
test
pop
cmp
or
rcr
icebp
pop
rol
icebp
sbb
test
pop
test
pop
test
pop
mov
jg
test
pop
test
pop
add
push
stc
mov
push
fsub
inc
cmp
xchg
xchg
out
bound
rcr
icebp
cmp
jg
pop
test
fld
jg
pop
test
pop
add
inc
test
js
ror
push
inc
or
test
pop
test
pop
js
icebp
cmp
jg
pop
test
frstor
jg
test
pop
test
pop
cmp
cmp
jg
pop
test
pop
test
pop
mov
jg
pop
test
pop
mov
icebp
(bad)
iret
lock
test
push
test
fucom
add
pop
test
push
pop
and
push
clc
and
jg
fst
jge
jg
pop
test
pop
add
(bad)
std
push
test
fisttp
and
mov
icebp
sub
mov
inc
push
ja
jg
pop
test
pop
bound
cmp
jae
fs
sbb
or
mov
inc
retf
pop
mov
call
pop
test
pop
mov
lock
sbb
popa
fild
adc
jg
pop
gs
pop
mov
add
adc
test
pop
test
pop
test
pop
int
icebp
pop
mov
jg
push
test
pop
test
pop
or
jge
(bad)
clc
mov
push
cld
jl
push
(bad)
jge
jg
pop
test
fucom
sbb
pop
mov
push
in
sub
inc
jnp
add
push
jg
or
jg
pop
test
fucom
ja
adc
jg
pop
test
fisttp
je
mov
popf
test
movs
out
test
push
test
fnstsw
cmp
sbb
dec
xor
lds
std
sub
dec
xor
cmp
jp
inc
test
pop
test
fucom
idiv
adc
test
test
pop
test
pop
mov
icebp
pop
int3
iret
lock
cmps
inc
pushf
mov
test
pop
test
pop
in
dec
icebp
mov
xor
enter
mov
test
pop
test
pop
test
pop
lods
jo
or
inc
mov
mov
inc
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
rcr
or
inc
sbb
loop
dec
(bad)
adc
test
test
pop
test
pop
test
pop
mov
repnz
jg
pop
test
fnsave
inc
test
pop
xor
jbe
test
pop
test
pop
test
fisttp
dec
xchg
add
jg
test
pop
inc
sbb
pop
mov
sti
cmp
jg
pusha
test
pop
loopne
icebp
or
jg
pop
test
pop
test
pop
mov
sbb
pusha
fild
adc
sub
fucom
dec
hlt
adc
jg
test
pop
call
icebp
cmp
pusha
fild
adc
jg
pop
or
icebp
cmp
mov
mov
test
push
test
pop
test
icebp
pop
mov
push
in
sub
out
adc
inc
sub
cdq
test
pop
test
fucom
inc
icebp
pop
out
clc
push
fs
cld
push
fwait
mov
mov
dec
in
mov
jg
push
test
pop
loopne
not
mov
jg
pop
test
pop
mov
add
aam
int3
push
aam
dec
les
jg
push
test
pop
(bad)
in
lock
mov
lods
nop
and
in
nop
pusha
mov
int3
nop
inc
dec
sbb
int
sub
mov
cmp
jg
pop
test
pop
xor
jbe
test
pop
test
pop
test
fstp
push
cdq
mov
mov
lods
mov
hlt
and
rcr
icebp
pop
add
jg
push
test
pop
xor
icebp
fnstsw
jge
and
shl
out
in
out
les
mov
neg
jg
pop
test
pop
push
cmp
or
jg
fstp
dec
cwde
je
dec
enter
(bad)
mov
dec
loopne
cld
xor
pop
call
cmp
addr16
test
sbb
enter
push
sbb
jg
pop
test
fld
test
call
pop
lds
icebp
pop
mov
jo
push
xor
(bad)
sar
ret
stos
inc
cmp
inc
sbb
add
loop
dec
les
mov
xchg
sbb
dec
icebp
fld
cmc
sbb
aas
icebp
(bad)
inc
hlt
and
rcr
icebp
pop
lea
dec
fwait
div
xor
xchg
js
lock
xchg
inc
sbb
sbb
inc
push
mov
test
aaa
pop
add
inc
test
js
push
loope
nop
daa
cld
and
call
leave
cmp
pusha
fild
add
jg
pop
test
icebp
pop
mov
sti
cmp
mov
ror
cmp
enter
sbb
jg
pop
loope
lock
inc
sbb
mov
sbb
pusha
fild
add
jg
pop
test
fnsave
sar
nop
push
push
movd
popf
mov
dec
sbb
test
pop
test
pop
mov
jg
pop
test
pop
in
inc
lock
cmp
jg
pop
test
pop
mov
icebp
fld
not
test
xchg
jg
pop
add
inc
test
inc
sbb
stos
dec
les
xchg
into
in
jmp
sbb
jg
pop
sbb
icebp
bound
push
cmp
mov
pop
loope
icebp
test
push
test
pop
test
pop
xor
icebp
pop
dec
sbb
and
inc
cdq
adc
inc
icebp
fld
test
inc
test
pop
test
pop
bound
cmp
inc
je
mov
out
les
mov
mov
test
pop
test
fld
dec
les
(bad)
into
in
jmp
sbb
jg
pop
add
icebp
cmp
dec
xor
cmp
adc
jg
fnsave
ja
adc
test
pop
cmp
icebp
in
inc
stc
(bad)
sbb
sbb
fnstsw
out
les
or
cmp
sbb
sbb
adc
mov
mov
pusha
test
pop
test
pop
cmp
icebp
loop
stc
push
test
pop
test
pop
test
fstp
mov
je
dec
xor
imul
movs
mov
shl
adc
jns
pop
cmp
test
pop
test
pop
gs
pop
mov
jae
fs
rcr
or
cmp
test
pop
test
pop
fs
rep
or
mov
jg
(bad)
sti
pop
mov
jg
pop
test
pop
test
pop
sub
adc
mov
test
pop
test
pop
test
fucom
add
pop
test
daa
pop
test
pop
jl
icebp
aaa
in
adc
jl
je
mov
jg
test
pop
or
icebp
mov
in
clc
ja
call
pop
test
pop
test
pop
cmp
cmp
jg
pop
test
pop
push
inc
icebp
frstor
cs
push
test
pop
test
pop
(bad)
gs
je
sbb
clc
test
pop
test
pop
cmp
or
lock
test
in
xchg
sub
pop
cmp
idiv
jg
pop
test
fld
jg
pop
test
pop
and
push
clc
xor
inc
xchg
shl
mov
nop
pusha
test
pop
mov
jg
test
pop
lock
icebp
shl
mov
nop
pusha
test
pop
test
pop
lds
pop
mov
jg
pop
gs
pop
in
jae
fs
sbb
or
mov
jg
(bad)
lock
push
icebp
pop
test
push
test
pop
test
pop
das
pop
icebp
fnsave
and
in
xchg
into
mov
jbe
jnp
jg
pop
test
(bad)
sti
pop
mov
jg
pop
test
pop
test
pop
add
icebp
pop
test
push
test
pop
test
pop
xchg
jp
fld
jg
pop
xchg
sub
pop
js
idiv
jg
fstp
push
icebp
std
cmps
inc
jmp
enter
rcr
icebp
pop
bound
cmp
inc
je
mov
movs
not
jg
push
test
rcr
sahf
mul
dec
xchg
lahf
sti
inc
cmp
mov
jg
push
test
fstp
inc
cwde
fs
inc
enter
enter
(bad)
lods
leave
movs
not
jg
push
test
fucom
add
jge
push
pop
test
pop
test
fst
or
dec
test
push
test
pop
test
fld
jg
pop
test
pop
lds
icebp
pop
mov
jg
push
test
pop
icebp
(bad)
test
jg
pop
test
pop
cmp
mov
mov
and
dec
push
test
pop
test
fucom
sbb
fnstsw
loopne
test
pop
test
pop
test
pop
mov
jg
push
test
pop
test
icebp
pop
mov
lock
pop
scas
ja
(bad)
addr16
push
enter
lahf
mov
ja
adc
jbe
pop
test
fnsave
idiv
pop
mov
jg
pop
test
fld
not
clc
stc
mov
mov
xor
jg
pop
test
pop
js
icebp
cmp
jg
pop
test
pop
aam
icebp
sbb
sbb
push
mov
inc
arpl
jg
pop
add
jg
pop
test
fstp
ss
jge
mov
xchg
imul
pop
test
pop
add
inc
test
js
ror
push
inc
or
test
pop
test
pop
test
pop
cmp
cmp
jg
pop
test
pop
mov
jg
pop
test
pop
test
pop
cmp
icebp
mov
inc
pop
adc
stc
test
mov
xor
jg
pop
mov
jg
push
test
pop
test
pop
aam
icebp
popf
cdq
mov
cmp
push
cwde
mov
mov
lods
in
clc
ja
call
pop
test
pop
and
jg
pop
test
pop
test
fucom
inc
icebp
pop
test
clc
pop
test
icebp
pop
fwait
idiv
movs
jecxz
(bad)
sbb
mov
mov
jg
pop
test
pop
test
fnsave
inc
call
cmp
xchg
mov
jg
pop
test
fnsave
add
pop
cmp
or
mov
jg
pop
test
pop
fstp
jecxz
inc
lahf
mov
test
pop
test
pop
pop
mov
(bad)
mov
mov
test
pop
test
pop
test
fucomp
scas
not
(bad)
xor
fcomp
jg
pop
bound
cmp
jae
gs
xor
mov
test
pop
test
pop
test
pop
xor
inc
cmp
cmp
jg
fucom
add
pop
test
clc
pop
test
pop
mov
or
jg
pop
test
pop
test
pop
mov
jg
push
test
rcr
jp
pop
test
pop
test
pop
test
pop
pushf
sub
pop
cmp
xlat
cmp
jg
pop
test
fisttp
xchg
pop
and
pop
clc
jae
jbe
test
pop
test
icebp
fnstsw
loopne
test
pop
test
pop
lds
icebp
pop
mov
jg
pop
test
pop
test
pop
mov
jg
push
test
rcr
xchg
std
call
test
push
test
pop
rol
sbb
test
pop
test
icebp
pop
mov
push
in
sub
aad
jne
es
out
mov
xabort
repnz
mov
leave
inc
cmp
loopne
test
hlt
sti
jae
mov
push
xor
fisttp
shl
sar
leave
repz
jmp
arpl
ja
jae
arpl
xlat
pop
xor
xchg
jnp
jb
fs
mov
jo
pop
pop
in
faddp
add
sub
pandn
fs
sub
pop
and
jae
or
fst
ins
lock
or
ins
lock
inc
stc
push
add
test
mov
mov
xor
cs
jmp
pop
mov
loop
les
in
mov
sub
mov
jb
inc
mov
ja
iret
jns
mov
add
cmp
xchg
cs
les
(bad)
ret
out
in
rol
mov
jae
sbb
sub
mov
add
dec
clc
out
push
(bad)
mov
inc
mov
mov
imul
cli
push
sbb
mov
push
retf
ret
sbb
sbb
inc
fcom
imul
repnz
sbb
fwait
ins
out
aaa
xchg
inc
jmp
xor
ja
push
pop
mov
xor
gs
mov
sbb
inc
and
sbb
push
xchg
inc
xchg
xchg
mov
mov
xchg
xor
xchg
jnp
xor
(bad)
fnstcw
inc
daa
xchg
aaa
xchg
dec
push
xchg
push
mov
stos
push
outs
adc
ins
push
icebp
add
fld
inc
outs
xchg
js
ret
push
mov
mov
add
cmp
mov
push
mov
dec
dec
push
inc
xchg
pusha
push
repnz
mov
and
mov
inc
out
or
cmp
push
xchg
bound
adc
sahf
mov
mov
inc
push
xchg
inc
out
mov
and
mov
inc
out
xor
rcr
inc
out
mov
inc
pop
out
inc
test
es
pop
mov
inc
xlat
xchg
inc
pop
out
inc
test
mov
gs
out
rcl
mov
inc
push
xchg
dec
push
(bad)
xor
rcr
mov
daa
push
ins
jnp
(bad)
mov
arpl
or
mov
inc
push
xchg
lahf
pop
mov
mov
inc
push
pop
sti
aas
push
cmps
mov
inc
push
xchg
dec
push
xchg
aaa
xchg
jg
test
ror
jmp
stc
mov
pop
push
test
ror
mov
inc
push
xchg
xor
push
mov
scas
cmps
jae
jle
jl
dec
mov
pop
xchg
adc
push
mov
mov
xchg
jnp
or
inc
cmp
mov
dec
push
cmps
mov
jg
xchg
inc
push
xchg
dec
push
(bad)
mov
inc
push
xchg
inc
pop
cmp
dec
pop
(bad)
mov
adc
les
out
inc
xlat
xchg
dec
pop
(bad)
mov
inc
push
xchg
mov
mov
mov
movs
pusha
(bad)
out
dec
dec
push
repnz
mov
sbb
cld
movs
xchg
ror
jle
nop
sub
stos
mov
cs
xchg
sub
mov
dec
pop
push
loopne
(bad)
loope
jecxz
xchg
mov
in
rcr
int
mov
push
int
mov
push
or
add
adc
inc
mov
neg
jg
pop
test
fnstsw
sbb
loop
stc
imul
jg
pop
test
pop
test
pop
hlt
dec
lock
and
xchg
cld
inc
adc
jbe
in
mov
aam
jge
inc
mov
and
cmp
xchg
mov
aas
pop
ret
aaa
push
imul
aad
adc
(bad)
sub
fist
jge
dec
add
or
sbb
xor
push
ret
cmp
jmp
mov
and
xchg
xchg
int
je
jb
fs
retf
ret
add
ja
mov
(bad)
(bad)
push
mov
(bad)
cmps
in
loopne
cmp
clc
jae
mov
jnp
aaa
dec
pop
je
pop
enter
int
mov
mul
cld
ror
xlat
jmp
xchg
bound
std
xlat
jp
stc
jno
and
aam
pop
stos
les
enter
jb
pop
ins
and
stos
retf
fist
call
je
enter
push
fimul
sub
xchg
mov
mov
or
mov
lock
dec
lods
repz
repnz
inc
mov
cmps
fwait
pop
stc
xor
or
nop
stos
dec
cmp
mov
sti
add
aaa
sbb
cmp
sbb
add
fldenv
xchg
out
loop
jg
cmp
pop
jns
dec
inc
hlt
or
xchg
jecxz
xlat
imul
push
and
push
and
xchg
sbb
ret
and
and
xor
push
and
aaa
pop
mov
mov
pop
jmp
cmps
sbb
and
push
and
xchg
cdq
test
data16
push
mov
dec
pop
push
inc
mov
sub
pop
push
and
pop
push
and
push
ins
sub
gs
and
pop
push
and
pop
gs
add
add
or
inc
mov
es
inc
xchg
mov
loop
push
and
pop
xor
es
pop
sub
jnp
and
(bad)
xchg
xchg
xchg
sub
push
and
pop
xor
xchg
xchg
sub
push
and
pop
xor
push
xchg
sub
push
and
pop
push
pusha
mov
imul
mov
xchg
pop
cmp
and
push
and
xchg
mov
dec
pop
push
and
pop
pushf
imul
push
push
adc
pop
enter
push
and
push
push
and
xchg
xchg
lea
mov
hlt
sahf
out
mov
inc
push
and
pop
push
adc
lods
lods
addr16
push
mov
dec
pop
push
and
out
push
test
cdq
inc
mov
sub
dec
ins
sub
pop
push
and
aaa
cdq
inc
cmp
(bad)
std
popa
pop
and
push
and
pop
push
and
xchg
fnstsw
ds
and
out
shr
popf
inc
pop
push
and
push
and
mov
data16
cdq
in
adc
inc
push
push
and
out
xchg
xchg
outs
inc
out
xchg
ins
inc
pushf
inc
dec
mov
push
and
pop
push
and
out
cdq
ins
inc
imul
mov
push
and
push
push
and
pop
push
pusha
mov
dec
movs
or
xchg
ins
inc
push
xchg
inc
sub
stc
xchg
mov
ss
sbb
stos
mov
adc
ds
mov
stos
adc
push
mov
dec
xchg
sub
pop
adc
xchg
or
push
and
sbb
imul
mov
pop
push
test
scas
adc
push
mov
dec
pop
push
and
xchg
lods
mov
mov
ins
sub
push
and
pop
push
and
repnz
out
dec
and
cdq
mov
push
and
pop
adc
icebp
xchg
data16
cdq
cmp
pop
push
and
xchg
leave
mov
ss
ja
adc
aaa
ds
and
push
and
xchg
xlat
dec
imul
xchg
out
xchg
xchg
mov
pusha
sbb
xor
xor
xchg
push
mov
das
sbb
push
and
push
push
and
aaa
leave
pop
cmp
ins
adc
pushfw
ins
inc
imul
ins
shl
dec
inc
push
and
pop
pushf
out
aaa
in
fucomip
adc
dec
ds
out
ss
aaa
inc
adc
cmp
push
and
mov
mov
stc
xlat
dec
imul
movs
out
xchg
mov
inc
in
ss
lds
addr16
push
and
push
push
and
xchg
and
push
and
xchg
xlat
dec
imul
stos
xor
or
imul
ins
shl
inc
into
xchg
out
inc
popf
out
cmc
xor
cmp
xchg
ds
and
xchg
mov
stos
outs
cmp
cwde
jg
mov
pushf
out
jbe
(bad)
in
mov
dec
dec
and
cmp
inc
imul
mov
push
add
test
data16
ss
jge
xchg
out
inc
popf
out
cmc
pop
lods
in
xor
inc
ds
and
xchg
sar
imul
adc
push
mov
dec
xchg
push
mov
push
and
push
and
jnp
and
xchg
mov
mov
jmp
push
and
(bad)
pop
mov
dec
pop
push
and
xchg
popa
(bad)
xlat
push
push
and
popf
out
jbe
mov
dec
pop
push
and
xchg
int
mov
push
and
push
and
xchg
mov
mov
push
adc
outs
fst
xor
push
mov
mov
push
and
pop
adc
idiv
push
mov
retf
pop
push
and
xchg
adc
pop
lock
mov
imul
mov
push
and
xor
pop
icebp
mov
push
and
pop
push
and
xchg
mov
push
and
pop
jo
mov
icebp
push
into
imul
mov
cdq
in
adc
inc
ds
and
pop
das
fwait
xor
cdq
add
sub
ds
mov
ds
and
xchg
cdq
or
repnz
popf
xacquire
sar
push
and
push
and
pop
push
mov
mov
push
and
and
out
stc
(bad)
shr
aas
leave
pop
or
and
loope
(bad)
dec
inc
or
add
push
and
popa
xchg
out
push
mov
mov
push
and
loope
test
push
and
pop
push
and
pop
and
mov
fcom
jns
mov
and
mov
cmp
out
ins
mov
out
pop
adc
mov
xor
adc
cmp
pop
test
inc
pop
test
pop
test
fnstsw
test
in
stc
test
pop
mov
mov
fisub
pushf
push
test
pop
inc
mov
xchg
push
je
mov
mov
pop
inc
test
inc
push
sub
or
in
inc
enter
or
mov
pop
neg
jecxz
test
mov
in
ja
rcl
pop
mov
push
daa
xchg
call
icebp
ins
cmp
mov
dec
cmp
and
pop
hlt
enter
xor
or
inc
sub
cli
repnz
data16
mov
repz
ret
jbe
inc
mov
aaa
push
mov
dec
nop
mov
call
push
mov
int
dec
shl
pop
lea
call
rol
add
sbb
lods
xchg
push
pop
jns
jns
fldenv
adc
pop
cmp
fld
push
pop
stc
retf
ss
loopne
jecxz
mov
enter
jle
mov
cmp
pusha
or
ret
out
(bad)
bound
mov
sbb
push
(bad)
jg
ja
pop
les
push
fidivr
lock
inc
mov
push
lahf
push
out
jns
dec
int
fwait
test
xor
add
xor
and
mov
add
clc
mov
fnsave
fwait
jg
xor
inc
mov
xchg
pop
enter
jns
sbb
scas
adc
je
pop
aad
sub
and
inc
les
cmp
pop
dec
les
loop
or
adc
pop
xor
or
xchg
sbb
or
hlt
or
xlat
xchg
or
cdq
jmp
scas
mov
or
movs
stos
dec
fcmovbe
push
jmp
stos
ret
mov
xchg
xchg
mov
xchg
sahf
mov
xchg
jo
xor
inc
mov
xchg
sahf
mov
cmp
scas
dec
add
xchg
xor
sahf
mov
xor
sahf
mov
repz
cmp
shl
xor
push
fwait
pop
cld
xchg
xor
sahf
cmp
sub
xor
sahf
mov
xor
test
add
pop
mov
mov
scas
mov
xor
scas
cli
pop
dec
test
mov
das
xchg
sahf
xor
scas
mov
jae
stos
xor
xchg
ror
xor
scas
cmp
mov
fstp
adc
xor
scas
mov
cmp
cs
push
jmp
mov
rcr
arpl
loopne
inc
sbb
xchg
jae
mov
ret
xchg
(bad)
lahf
mov
mov
ret
add
cwde
cld
movntps
inc
cmp
test
out
mov
inc
or
enter
enter
enter
enter
enter
enter
shr
mov
(bad)
scas
(bad)
sub
data16
mov
sar
jle
or
outs
mov
sbb
int3
mov
dec
addr16
test
(bad)
adc
mov
inc
xlat
aam
cmps
xlat
in
sahf
sbb
adc
not
fwait
leave
add
mov
addr16
inc
pop
aam
sbb
test
dec
fmul
jae
pop
aam
jnp
repnz
test
push
imul
ins
adc
scas
mov
cmp
(bad)
fwait
cmp
xor
and
pop
jp
mov
cwde
inc
call
aam
dec
enter
adc
adc
leave
push
test
fbld
push
pop
aam
inc
retf
aam
mov
ja
jnp
jp
inc
mov
inc
loopne
jbe
jl
popf
rep
mov
xlat
pop
pop
sub
add
retf
(bad)
mov
inc
lahf
and
push
ins
xor
mov
xor
pop
mov
test
clc
cmps
push
dec
push
cmp
cmp
mov
pop
dec
and
popf
inc
jns
fwait
repnz
mov
pop
aaa
jo
adc
mov
or
addr16
ins
stos
(bad)
retf
mul
inc
mul
inc
mul
inc
ficomp
into
gs
jmp
xchg
in
inc
ja
dec
dec
jmp
xchg
adc
fisubr
into
sub
sub
gs
inc
test
retf
je
pop
ins
in
popf
dec
shl
jg
ins
push
(bad)
popf
fmul
dec
mov
pop
test
div
pshufw
xor
ins
push
nop
push
inc
or
mov
jg
pop
test
icebp
ffree
retf
mov
jg
pop
test
pop
test
pop
clc
inc
icebp
push
test
pop
mov
icebp
sbb
test
pop
test
pop
lds
pop
mov
jg
push
test
pop
test
pop
loopne
icebp
popf
inc
mov
aaa
pop
test
pop
test
pop
sbb
icebp
bound
ret
imul
jg
pop
test
fld
icebp
ins
mov
clc
fsub
add
pop
test
pop
cmp
cmp
jg
fucom
inc
icebp
jge
jg
pop
test
pop
test
pop
jnp
icebp
cmp
movs
aaa
push
test
push
test
pop
test
icebp
pop
pop
js
cmp
jg
pop
retf
or
test
pop
test
fnstsw
mov
mov
fild
imul
dec
icebp
pop
jmp
imul
test
pop
add
jg
push
test
pop
test
lock
test
pop
test
icebp
fnsave
(bad)
sahf
add
and
test
push
test
pop
test
pop
xor
icebp
pop
or
test
dec
sbb
mov
mov
test
pop
test
pop
add
jg
push
test
rcr
cmp
adc
jmp
pop
test
pop
test
fucom
sbb
fnstsw
in
sub
(bad)
jbe
js
mov
aas
icebp
fld
hlt
adc
inc
pop
test
pop
test
pop
lock
div
jg
pop
test
pop
mov
icebp
mov
test
pop
test
pop
je
icebp
mov
or
cmp
int3
push
test
pop
test
fnsave
icebp
pop
test
pop
test
frstor
fadd
(bad)
sbb
and
dec
cmp
out
mov
inc
mov
and
mov
jg
push
test
rcr
cmp
ins
mov
jg
push
test
fucom
push
icebp
mov
sbb
sub
mov
jecxz
ds
jbe
pop
test
pop
test
pop
xor
icebp
pop
adc
mul
dec
cmp
into
sub
dec
icebp
fld
neg
dec
mov
pusha
mov
sub
mov
mov
test
pop
test
pop
gs
icebp
fld
lock
pop
popa
or
into
test
push
test
fnsave
icebp
pop
test
pop
test
pop
or
(bad)
cmp
jg
fnsave
icebp
mov
cli
pop
aas
gs
sbb
add
jg
pop
test
icebp
fld
repz
xchg
inc
jns
fwait
mov
xor
test
pop
test
fnsave
icebp
mov
test
pop
test
pop
and
(bad)
stc
pop
test
pop
add
idiv
cmp
jg
pop
test
icebp
fld
hlt
adc
inc
pop
test
fucom
sbb
fnstsw
in
sub
(bad)
jbe
js
mov
ss
popf
inc
stc
neg
test
pop
test
(bad)
(bad)
not
test
pop
test
pop
mov
icebp
mov
test
pop
lds
icebp
fld
lock
enter
jno
test
fnsave
icebp
pop
test
pop
test
frstor
fadd
(bad)
sbb
and
dec
cmp
out
mov
inc
mov
and
mov
jg
push
test
pop
test
icebp
fst
hlt
ins
mov
jg
push
test
pop
test
fucom
push
icebp
mov
sbb
sub
mov
jecxz
ds
jbe
pop
test
pop
test
pop
test
fld
lock
sbb
test
push
test
fucomp
dec
icebp
fld
neg
dec
mov
pusha
mov
sub
mov
mov
test
pop
test
pop
gs
icebp
fld
lock
pop
popa
or
into
test
push
test
fnsave
icebp
pop
test
pop
or
(bad)
cmp
jg
pop
test
fnsave
icebp
mov
cli
pop
aas
gs
sbb
fild
add
push
icebp
fld
repz
xchg
inc
jmp
les
(bad)
and
jg
pop
test
lock
test
pop
dec
sbb
in
fild
imul
icebp
pop
test
pop
fwait
div
stos
in
ss
test
js
test
pop
dec
cmp
call
test
pop
test
pop
bound
cmp
jae
fs
add
mov
in
cmp
sub
(bad)
xchg
imul
rcr
icebp
frstor
push
test
pop
test
pop
js
icebp
cmp
jg
pop
test
pop
test
fisttp
adc
mov
jg
frstor
fld
neg
test
pop
test
pop
mov
or
dec
push
test
fucomp
add
pop
clc
mov
mov
(bad)
js
loopne
cmp
jbe
in
inc
pusha
test
pop
test
pop
mov
ins
test
pop
test
pop
add
icebp
in
inc
mov
inc
clc
jle
sar
inc
cdq
xchg
mov
inc
mov
mov
test
pop
test
pop
hlt
sub
mov
mov
test
pop
mov
icebp
mov
mov
mov
xchg
imul
cmp
jg
pop
test
fld
icebp
in
lods
xabort
loopne
mov
jbe
test
pop
test
icebp
fst
lock
cmp
aas
mov
test
pop
test
pop
mov
ins
test
pop
test
fucom
ja
adc
jg
pop
test
fnsave
jg
test
pop
test
icebp
fld
repz
inc
test
shr
xor
push
cmp
in
fs
xchg
fild
sbb
jg
fucomp
inc
icebp
pop
or
jmp
pop
test
fst
cli
lods
mov
jbe
cmp
jg
pop
in
push
icebp
fld
neg
cmp
cmp
jg
pop
test
pop
test
lock
test
pop
lea
cmp
mov
pop
test
pop
retf
shl
stos
push
cmp
sub
adc
fisub
pushf
push
test
fnsave
mov
test
fnstsw
mov
out
test
cmp
jg
pop
lods
inc
icebp
push
test
fisttp
jg
push
test
pop
mov
icebp
popf
inc
stc
neg
test
pop
test
pop
test
fstp
push
cdq
xor
cdq
(bad)
loop
add
cmp
enter
jno
test
fnsave
icebp
pop
test
pop
dec
dec
std
cmp
mov
fld
icebp
in
in
call
jg
pop
lds
pop
mov
jg
pop
test
pop
add
ja
cmp
jg
pop
test
pop
test
icebp
fld
hlt
adc
inc
pop
test
pop
test
fstp
push
stc
xor
cdq
mov
aaa
outs
adc
jbe
pop
test
pop
test
icebp
fisttp
jecxz
inc
cdq
push
jg
pop
test
pop
test
pop
lock
icebp
shl
sbb
dec
or
jg
pusha
test
pop
test
pop
lds
icebp
pop
mov
jg
push
test
fucom
add
mov
jecxz
(bad)
adc
(bad)
enter
cmp
jg
pop
test
pop
mov
jg
frstor
pop
test
clc
pop
and
jg
pop
test
pop
bound
cmp
jae
fs
inc
fiadd
inc
or
jecxz
dec
adc
jbe
pop
test
pop
test
fnsave
jg
sbb
push
icebp
fnsave
inc
push
and
or
in
dec
enter
dec
dec
or
aad
ss
xor
inc
mov
jns
or
sub
iret
retf
je
inc
pusha
cmp
js
sbb
xor
sbb
add
cmp
mov
cmp
add
je
push
ret
sbb
out
ret
jnp
pop
sbb
sti
loopne
mov
mov
xchg
call
xchg
ins
sahf
xchg
jbe
in
into
ret
mov
pop
(bad)
aam
inc
clc
std
cmps
inc
push
or
hlt
push
in
xor
jnp
push
pop
movups
je
cmp
inc
or
fldenv
sbb
not
jecxz
int
fwait
or
call
and
or
sbb
fdivr
not
adc
lahf
mov
sub
add
enter
push
or
stc
jnp
addr16
fbld
lea
mov
xlat
out
cmp
aam
cmps
ret
je
dec
je
sbb
pop
out
mov
and
jmp
jns
imul
test
jmp
xor
xchg
mov
xor
lods
push
mov
mov
pusha
pop
outs
cmps
dec
ja
(bad)
jae
mov
repz
mov
repz
or
repz
mov
(bad)
repz
mov
push
mov
jae
(bad)
(bad)
repz
jbe
push
mov
repz
mov
repz
mov
repz
or
push
call
(bad)
repz
or
jmp
jb
sub
(bad)
sar
or
jae
mov
rep
mov
push
mov
repz
(bad)
into
push
test
(bad)
repz
mov
repz
mov
mov
out
jae
enter
arpl
push
repz
mov
cli
cmp
(bad)
repz
test
(bad)
repz
mov
retf
(bad)
repz
repz
mov
push
mov
les
call
jno
enter
arpl
mov
inc
imul
(bad)
repz
mov
repz
mov
aad
in
(bad)
cli
inc
mov
repz
repz
mov
mov
or
or
adc
arpl
out
pop
cmp
pop
(bad)
xor
lods
mov
cli
fidivr
cmp
(bad)
xchg
push
add
cmp
cli
dec
retf
mov
xor
stc
enter
xor
jg
pop
test
fnstsw
cdq
(bad)
jecxz
inc
cdq
je
jg
pop
test
pop
test
pop
mov
jg
pop
test
pop
xor
icebp
pop
int
mul
mov
jg
push
test
fst
icebp
jge
push
clc
fs
cdq
int
adc
iret
jmp
xor
jg
pop
movs
push
icebp
pop
xor
jmp
les
int
out
mov
cmp
jg
pop
test
pop
inc
sbb
fucom
ja
sbb
jg
fst
inc
clc
fs
dec
(bad)
adc
test
test
pop
test
pop
test
pop
cmp
xchg
pop
mov
icebp
fucom
cmp
cmp
mov
pop
xor
push
popa
test
fisttp
jg
pop
test
pop
add
(bad)
std
push
test
pop
test
fnsave
icebp
jge
jg
pop
test
pop
test
pop
stc
push
sbb
sbb
test
sub
mov
pusha
test
fnstsw
icebp
cmp
sub
mov
loopne
sbb
cmp
cmp
movs
aaa
adc
test
pop
test
fucom
inc
icebp
sbb
mov
cmp
jg
pop
add
inc
test
sbb
je
enter
sahf
gs
and
inc
jns
sbb
jg
pop
in
inc
lock
dec
cmp
xor
dec
sbb
jb
inc
imul
ss
cmp
sbb
loopne
inc
test
mov
jg
pop
add
jg
push
test
pop
test
icebp
pop
dec
cmp
push
test
pop
test
pop
mov
icebp
sar
sbb
mov
pusha
dec
xchg
bound
pop
sub
aaa
adc
mov
popa
(bad)
js
daa
mov
push
rcr
iret
jmp
movs
or
pop
jae
mov
(bad)
jecxz
mov
or
pop
fadd
icebp
xchg
pop
sbb
xor
pop
stc
push
add
stos
sub
jle
aam
(bad)
push
mov
test
add
aam
jns
fld
div
push
(bad)
cld
mov
repz
jmp
cmp
mov
adc
inc
hlt
inc
pop
es
xor
xchg
add
mov
and
push
jbe
in
xchg
dec
xor
jbe
imul
neg
add
js
pop
dec
inc
in
sbb
(bad)
stos
(bad)
into
add
and
cld
inc
sbb
(bad)
and
fiadd
pop
fwait
bnd
jl
popa
lock
das
fnstenv
daa
cmp
les
test
fiadd
in
sbb
xor
repnz
xchg
stc
(bad)
mov
lahf
(bad)
aam
js
repz
cmp
push
pop
cmps
daa
loopne
jnp
out
sub
sbb
sbb
scas
adc
call
adc
scas
pop
sbb
scas
mov
stos
mov
test
xchg
mov
mov
cmps
bndldx
push
mov
sbb
scas
mov
xor
scas
fistp
inc
sub
sbb
scas
and
sbb
and
call
les
movs
inc
adc
aas
sbb
call
dec
aad
and
xchg
stos
or
call
jnp
test
and
call
das
shr
daa
sbb
scas
popa
daa
inc
cmps
xchg
sub
imul
or
mov
adc
scas
je
jo
ret
or
and
cld
shr
or
cwde
sbb
adc
dec
in
inc
sbb
arpl
pop
in
jae
fnstenv
or
pop
test
fisttp
adc
jg
pop
loopne
icebp
ins
rol
test
push
test
pop
mov
cmp
add
aas
adc
pop
neg
jo
dec
aas
test
push
pop
test
pop
test
ffree
jns
pop
test
pop
test
pop
test
fnsave
not
jg
pop
mov
outs
hlt
pop
test
pop
test
pop
gs
icebp
pop
pushf
jnp
pop
test
jmp
jg
pop
mov
adc
imul
push
mov
or
jg
pop
test
pop
mov
sbb
jg
pop
mov
sbb
jg
pop
test
pop
mov
or
jg
pop
test
pop
test
icebp
(bad)
imul
sbb
(bad)
dec
shl
mov
push
pop
test
fld
jg
or
jg
pop
test
pop
aad
icebp
pop
sti
in
xor
jmp
push
test
pop
test
pop
xchg
sub
sbb
sub
jnp
sbb
or
(bad)
clc
cmp
arpl
fs
cmp
punpckhwd
(bad)
call
aam
(bad)
ret
fs
fist
int
mov
loopne
inc
jg
(bad)
xlat
mov
ss
les
sbb
pusha
call
scas
jmp
sbb
loopne
sbb
(bad)
sbb
mov
pop
adc
enter
pushf
aas
pushf
sbb
daa
push
pop
pop
aam
dec
enter
nop
scas
add
jmp
clc
mov
std
int3
xor
cwde
bnd
jns
or
shl
(bad)
scas
(bad)
jns
aam
test
movs
repnz
xchg
neg
mov
not
mov
shl
mov
jp
push
or
popa
jl
ret
adc
jl
mov
jp
retf
jbe
cmp
aad
inc
stc
(bad)
fwait
addr16
shl
call
cli
pusha
pop
mov
stos
sbb
push
xor
xchg
and
scas
mov
and
aam
cmps
and
ja
add
sbb
out
pop
stc
mov
add
div
or
fdecstp
fld
or
sbb
rol
sti
aas
fnstenv
adc
lock
jo
sub
pop
ins
push
push
fisubr
and
pusha
cmp
pop
xor
and
sub
inc
jb
and
cmc
arpl
inc
stos
sub
push
popa
push
sub
in
fisubr
push
popa
xchg
in
sub
lahf
out
mov
dec
loopne
xor
movs
cld
mov
retf
in
repnz
test
mov
cmp
cwde
repz
aaa
xchg
(bad)
inc
xor
mov
sub
mov
rcl
lock
jnp
retf
arpl
fdiv
add
(bad)
pop
lods
(bad)
mov
push
push
stc
mov
(bad)
sbb
jae
not
fs
shr
loopne
pop
dec
shl
mov
xchg
inc
or
shl
iret
cmps
js
pop
clc
in
mov
inc
sbb
fcomi
inc
mov
test
push
adc
pop
mov
cmp
lea
push
xor
movs
loop
into
fs
enter
into
cld
mov
call
jno
sti
mov
push
mov
xor
enter
mov
inc
pop
mov
xor
pop
dec
out
bound
push
and
enter
push
aad
mov
neg
cmp
ja
(bad)
jecxz
or
xchg
or
add
adc
repnz
sub
push
mov
inc
fnstcw
(bad)
xor
into
adc
(bad)
dec
ja
repnz
clc
(bad)
xchg
xor
cmp
dec
mov
or
sbb
pop
push
les
jbe
xor
xor
jne
xchg
(bad)
idiv
daa
push
je
xchg
push
push
cmps
fbstp
sbb
movs
sti
cmps
(bad)
pop
sbb
pop
fs
xchg
test
dec
jo
or
out
out
xchg
jp
push
xchg
mov
jbe
ret
cmp
sbb
cmp
mov
add
daa
jl
push
aad
fs
aam
and
push
popf
push
pop
cmps
mov
inc
sub
scas
(bad)
jmp
xchg
outs
movs
jmp
xchg
dec
inc
mov
dec
xchg
lds
movs
push
inc
or
add
xchg
dec
add
or
call
out
jbe
ret
cmp
sbb
cmp
mov
add
daa
mov
aad
out
aam
fcom
mov
(bad)
push
inc
sub
scas
(bad)
jmp
xchg
outs
movs
jmp
xchg
dec
inc
mov
jmp
aaa
jg
mov
sub
mov
jp
pop
push
or
or
push
mov
cmps
cmp
dec
add
inc
xchg
movs
cmp
mov
jno
jne
jno
and
out
jb
in
cmp
push
nop
jno
dec
shl
adc
pop
dec
add
mov
jno
mov
jno
jne
js
and
in
adc
loop
cmp
mov
push
add
inc
push
sbb
enter
enter
mov
adc
inc
push
(bad)
push
pop
cmp
mov
inc
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
retf
or
movs
push
pop
and
or
in
inc
enter
cmp
add
sub
push
pop
idiv
push
pop
sub
cld
sti
push
leave
add
(bad)
jbe
push
or
mov
dec
xlat
pop
arpl
fadd
or
or
shl
xchg
xlat
out
pop
sbb
inc
jns
adc
out
minps
ret
cmp
push
and
xchg
inc
enter
pop
fs
enter
enter
sar
mov
inc
pop
and
jbe
sbb
xchg
add
and
mov
fist
ins
adc
dec
jns
je
sub
mov
jp
dec
mov
push
jns
push
loopne
xchg
mov
movs
test
repnz
sbb
(bad)
jae
paddw
jmp
xchg
push
jns
out
pushf
cmps
ret
lds
fbstp
jmp
int
shl
or
mov
pushf
dec
push
sti
sbb
fwait
sub
aaa
mov
mov
out
mov
jbe
mov
xor
inc
cmp
add
mov
or
xchg
inc
mov
inc
jl
cmp
ss
(bad)
mov
push
sbb
in
ss
inc
mov
out
ja
sub
adc
xor
test
inc
dec
mov
jg
stc
outs
jnp
fldcw
jp
dec
fnstcw
or
(bad)
xor
iret
xor
pop
ss
leave
xchg
mov
iret
xchg
pop
leave
cmps
xor
cmps
ss
leave
xchg
clc
into
xchg
into
xor
pop
ss
leave
xchg
push
leave
xchg
sbb
xchg
pop
sbb
ss
sbb
popa
push
iret
daa
xor
xchg
xor
mov
pop
leave
xchg
pop
leave
xchg
pop
leave
xchg
or
xchg
jp
test
test
fwait
aad
cmp
les
test
aad
pop
dec
add
pop
leave
xchg
pop
leave
xchg
pop
leave
xchg
add
pop
push
popa
lock
pop
imul
popaw
lock
punpcklwd
mov
subps
mov
cmps
not
dec
popa
lock
mov
inc
pop
jns
push
popa
lock
pmuludq
mov
mov
rol
clc
iret
xchg
test
lock
popa
lock
punpcklwd
mov
subps
cmp
push
punpcklwd
mov
xor
iret
test
pop
jmp
mov
push
popa
lock
punpcklwd
mov
punpckhbw
xor
mov
popa
lock
xor
daa
xor
test
xchg
cmp
es
popa
lock
popa
lock
psrlw
mov
push
popa
lock
popa
loopne
(bad)
pop
dec
mov
fmul
test
pop
jmp
mov
push
popa
lock
punpcklwd
mov
(bad)
push
int
aas
popa
lock
popa
lock
xor
daa
xor
test
xchg
cmp
es
popa
lock
popa
ret
mov
cmp
out
punpcklwd
mov
mov
popa
lock
push
popa
lock
lods
xchg
mov
push
popa
lock
popa
lock
pop
stos
mov
(bad)
(bad)
enter
(bad)
sti
inc
xchg
jo
xor
mov
push
lock
popa
lock
stc
push
dec
mov
popa
lock
punpcklwd
mov
andps
mov
ss
stc
(bad)
ss
lock
popa
lock
(bad)
sbb
ja
out
mov
popa
lock
punpcklwd
mov
cmp
popa
lock
pop
leave
mov
popf
(bad)
add
pop
dec
mov
punpcklwd
mov
ds
lock
mov
punpcklwd
mov
and
stc
jecxz
popa
lock
punpcklwd
mov
es
lock
popa
lock
popa
lock
cmovns
mov
jbe
mov
data16
xchg
std
iret
rcl
data16
xor
xor
lock
shl
mov
ss
lock
mov
packssdw
outs
push
lock
popa
lock
andnps
push
popa
lock
popa
lock
vmread
mov
push
popa
lock
pop
repz
xor
popa
lock
popa
lock
adc
push
lock
jno
int
push
je
addr16
cmp
pop
and
out
punpcklwd
mov
pcmpeqb
mov
xlat
cdq
mov
cs
pop
push
lock
punpcklwd
mov
inc
push
lock
rdtsc
mov
mov
rdtsc
mov
mov
punpcklwd
mov
dec
pop
stc
div
popa
lock
popa
lock
pop
pop
dec
mov
mov
daa
mov
leave
aaa
adc
xor
popa
lock
popa
lock
inc
pop
stc
repz
popa
lock
punpcklwd
mov
aas
faddp
mov
push
leave
add
push
dec
adc
pop
stc
adc
out
punpcklwd
mov
push
popa
lock
cmp
mov
ss
leave
(bad)
and
daa
imul
out
psraw
mov
popa
lock
mov
outs
push
lock
popa
lock
inc
popa
lock
popa
lock
xor
mov
cmp
jno
lahf
fist
outs
rol
ucomiss
shr
les
das
mov
(bad)
popa
lock
popa
lock
dec
pop
stc
mov
popa
lock
popa
lock
vmread
mov
popa
lock
popa
lock
js
(bad)
aas
xchg
sar
add
out
punpcklwd
mov
pop
popa
jo
rdtsc
fistp
pop
popa
lock
punpcklwd
mov
pcmpeqb
mov
cmp
mov
xor
popa
lock
popa
lock
and
mov
add
mov
js
push
leave
ja
jle
pop
xchg
pop
adc
ss
leave
xchg
pop
stc
mov
popa
lock
punpcklwd
mov
push
lock
punpcklwd
mov
cmp
lock
popa
lock
popa
lock
lahf
push
dec
mov
stos
(bad)
(bad)
imul
xlat
out
push
cli
mov
pop
sub
mov
mov
adc
out
punpcklwd
mov
pmaxub
pop
clc
rol
jns
push
popa
lock
punpcklwd
mov
das
cwde
div
add
popa
lock
popa
lock
push
popa
lock
popa
sar
push
popa
lock
popa
xchg
outs
push
lock
popa
lock
andnps
push
and
daa
inc
popa
jo
push
popa
lock
and
mov
jae
int
add
and
push
pop
jns
aaa
popa
lock
punpcklwd
mov
(bad)
pop
dec
mov
pop
dec
cmp
add
daa
mov
leave
aaa
adc
xor
popa
lock
popa
lock
inc
pop
stc
repz
popa
lock
punpcklwd
mov
(bad)
push
int
xor
xchg
icebp
iret
mov
lock
mov
mov
outs
cmp
push
or
mov
pop
int
sub
int
push
popa
lock
popa
lock
imul
lock
punpcklwd
mov
add
aaa
pop
retf
adc
lock
lods
xchg
mov
inc
popa
lock
popa
lock
punpcklwd
or
mov
popa
lock
mov
push
inc
popa
jo
pop
popa
lock
punpcklwd
mov
pop
popa
lock
popa
lock
movd
movs
fs
(bad)
mov
popa
lock
mov
out
int
aas
popa
lock
popa
lock
(bad)
pop
jmp
xchg
cmp
xchg
ja
popa
lock
subps
cmp
loope
rol
pop
pop
popa
lock
push
popa
lock
popa
lock
aas
pop
leave
mov
pop
cdq
pop
xchg
pop
adc
push
lea
xchg
mov
aaa
and
mov
popa
lock
push
stos
mov
xor
mov
pop
stc
mov
lock
punpcklwd
mov
pop
js
inc
pop
stc
mov
punpcklwd
mov
(bad)
mov
inc
pop
stc
test
lock
popa
lock
rdtsc
les
(bad)
dec
fiadd
or
mov
sub
in
mov
xrelease
leave
jp
dec
cmp
pop
test
xchg
in
mov
xor
cld
sahf
int3
adc
jbe
in
xchg
(bad)
adc
pop
xor
pop
(bad)
ja
and
fild
jle
or
add
cmps
fist
dec
popa
imul
mov
adc
aaa
fadd
lods
shl
and
sbb
dec
add
in
shl
jb
or
mul
mov
out
adc
adc
sbb
jp
ja
fcmovnb
sub
(bad)
loop
in
lods
and
enter
ins
pop
lock
mov
xlat
and
add
retf
lahf
mov
push
sub
mov
jp
or
mov
(bad)
lahf
mov
jbe
or
adc
mov
jae
sbb
jnp
ja
mov
mov
xchg
mov
push
fwait
jecxz
xor
ret
ficom
xor
hlt
sbb
sbb
stc
aaa
xor
mov
pop
dec
pop
cwde
pop
and
pusha
aam
enterw
js
dec
push
pusha
stos
inc
mov
out
and
bndstx
xor
xchg
ins
jnp
sbb
sbb
movs
xor
stos
int
pop
test
sti
cmp
mov
adc
pop
pop
cmp
fcomp
dec
or
sbb
popa
inc
adc
xor
aas
pop
cmp
cmp
or
jne
ficom
push
xor
fs
pop
jne
nop
sbb
jo
add
daa
es
mov
aam
add
add
mov
add
lds
(bad)
cmc
and
inc
in
ffree
rcl
xor
sahf
shl
push
fdiv
and
jne
add
inc
mul
xor
and
fsub
jae
fsub
jae
fsub
jae
fsub
push
add
repz
mov
push
or
and
ret
push
mov
sbb
loope
ja
mov
sbb
loope
jne
fisub
jae
(bad)
repz
shr
fiadd
mov
loope
imul
(bad)
sbb
popa
and
repz
add
pop
and
nop
or
call
sbb
loope
ja
lds
dec
shl
sbb
loope
push
cmp
push
adc
add
fsub
ret
xchg
pushf
sub
xchg
jnp
xor
sbb
loope
sub
loope
div
mov
sbb
loope
jae
rcr
dec
xchg
call
ins
dec
cmp
inc
(bad)
cmp
sbb
loope
push
cmp
daa
xchg
xor
jecxz
movs
sbb
loope
dec
cmp
push
adc
adc
(bad)
mov
push
call
sbb
push
sbb
jnp
packsswb
and
xor
ficomp
dec
jmp
dec
add
ds
sbb
loope
dec
cmp
dec
add
ds
sbb
loope
dec
cmp
dec
add
ds
sbb
loope
jae
movs
and
fcomp
dec
or
sbb
popa
and
push
add
xchg
ja
and
ficomp
push
fcomp
test
loope
dec
cmp
sbb
popa
jl
cmp
sbb
loope
dec
cmp
mov
dec
cmp
sbb
loope
dec
cmp
mov
push
movs
push
mov
test
shr
fsubr
pop
xchg
xchg
dec
icebp
fcomp
dec
imul
dec
cmp
fisubr
loope
ja
lds
dec
icebp
fcomp
dec
imul
dec
cmp
ins
cmp
sbb
loope
dec
cmp
pop
push
cmp
sbb
loope
dec
cmp
inc
add
jle
sbb
loope
dec
cmp
xchg
sub
hlt
cs
mov
dec
inc
cmp
sbb
cmp
sbb
loope
or
mov
dec
xor
sbb
loope
inc
cmp
jae
push
pop
shr
scas
sbb
call
sbb
loope
pop
cmp
pop
jae
scas
sbb
call
pop
pop
cmp
add
std
dec
nop
jge
sbb
call
sbb
popa
and
sub
fsubr
add
lods
daa
inc
push
mov
sbb
loope
ja
lds
dec
shl
fiadd
cmp
cmp
jae
fcomp
dec
add
sbb
loope
dec
cmp
adc
xor
cmp
jae
enter
call
cmp
je
fcomp
add
sbb
loope
pop
cmp
mov
xor
dec
add
sbb
loope
jnp
loope
dec
cmp
loope
retf
sbb
imul
dec
xor
sbb
loope
or
loope
pop
ds
push
scas
pusha
mov
and
fcomp
dec
adc
sbb
loope
ins
cmp
ins
xor
adc
ret
or
cmp
adc
fcomp
add
sbb
loope
add
jle
sbb
loope
dec
cmp
sbb
loope
(bad)
and
fcomp
dec
add
sbb
loope
jne
loope
repz
mul
jae
rcr
dec
sub
dec
or
sbb
loope
jne
fisub
ret
add
daa
repz
adc
fcmovu
sub
dec
adc
sbb
loope
cmp
cs
mov
sbb
loope
dec
cmp
inc
cmp
sbb
loope
dec
cmp
sbb
popa
jl
xor
daa
ret
push
mov
jg
cmp
sub
jb
daa
arpl
xor
call
daa
repz
fmul
xor
and
test
dec
or
fs
stc
jmp
test
repnz
mov
mov
into
and
mov
retf
mov
sbb
scas
pop
test
call
pop
jge
xor
pop
mov
sar
jmp
and
fsub
pop
mov
jp
cmps
cmps
in
sahf
pop
xchg
inc
fld
pop
mov
inc
push
aam
push
enter
imul
loope
mov
test
cmp
cmps
jae
sub
xchg
jp
jbe
in
mov
mov
pop
jns
mov
sbb
mov
xor
and
add
jb
mov
test
sbb
in
popa
push
sti
xchg
pop
pop
or
jmp
enter
cmp
add
lock
pop
les
clc
rol
ins
call
pop
fwait
aam
jl
aam
mov
cmps
mov
ss
les
stos
push
push
mov
adc
mov
xor
fbstp
les
in
(bad)
sbb
mov
daa
jl
push
lock
inc
mov
idiv
xchg
leave
push
sti
inc
fnstcw
pop
test
and
cmp
mov
mov
ds
mov
aaa
mov
cmps
ss
jmp
mov
fwait
and
add
aaa
or
test
cmp
mov
mov
test
push
mov
jmp
push
jecxz
rcl
mov
test
pop
dec
dec
mov
or
add
mov
ss
inc
cdq
(bad)
fwait
or
lods
mov
(bad)
push
xor
(bad)
aad
iret
cmp
inc
pop
test
pop
test
fnstsw
inc
icebp
int
mov
xchg
jg
pop
test
fnstsw
lock
pusha
dec
push
les
inc
mov
lods
js
sub
mov
out
loopne
mov
or
sbb
int3
cmc
push
jne
(bad)
inc
jmp
arpl
mov
fdiv
aam
pop
mov
cs
js
sub
dec
fs
or
pop
(bad)
sub
mov
mov
rol
mov
lock
or
(bad)
loopne
dec
mov
inc
mov
out
jb
push
fs
or
mov
sti
rcl
add
mov
sub
int3
repnz
mov
xor
push
fild
push
fwait
mov
aaa
aas
fbstp
pop
and
es
sbb
pop
xor
mov
fild
mov
cmps
jmp
cmp
mov
mov
pop
mov
inc
push
push
pop
fbld
jbe
popf
(bad)
fild
xor
adc
aas
retf
loope
add
or
ja
mov
sar
cmps
retf
imul
test
or
lock
mov
fidivr
fbstp
or
(bad)
cmp
mov
addr16
jns
test
jle
test
pop
in
test
ret
or
add
(bad)
xlat
xor
adc
mov
jl
mov
or
popa
ja
lea
xchg
or
aaa
adc
ja
inc
jnp
popa
fs
and
and
pop
into
icebp
pop
inc
into
mov
pop
inc
into
mov
inc
into
mov
mov
je
not
fs
into
adc
mov
xor
not
fs
into
adc
mov
push
(bad)
adc
mov
mov
pusha
dec
into
shl
mov
into
mov
cmp
into
cmp
mov
mov
pop
mov
jae
pop
outs
repnz
or
pop
jb
mov
xchg
add
jnp
shl
cmp
stos
adc
sbb
inc
into
xchg
pop
inc
into
mov
fucomp
stc
mov
adc
inc
lea
inc
into
or
clc
mov
jae
repz
jnp
shl
sbb
stc
mov
in
dec
mov
pop
ret
pop
inc
into
mov
inc
into
mov
ins
inc
into
cmp
into
mov
fld
dec
pop
inc
into
js
inc
into
mov
mov
dec
into
mov
inc
into
mov
into
mov
pop
sbb
push
pop
inc
into
js
inc
into
mov
int
xor
or
push
pop
inc
into
js
mov
push
mov
xor
not
fs
into
adc
mov
fs
sbb
inc
into
xchg
pop
shl
mov
and
and
test
push
mov
inc
into
jno
inc
(bad)
mov
adc
ja
in
ja
arpl
jno
inc
into
mov
fucom
stc
mov
push
inc
mov
and
shl
mov
mov
mov
inc
into
or
into
mov
pop
jg
mov
sbb
or
in
sar
pop
pusha
cmp
mov
not
push
inc
into
aad
inc
into
mov
into
mov
mov
mov
xlat
jle
and
ja
jbe
xchg
inc
cmp
jb
inc
into
call
pop
sub
pop
jg
retf
scas
adc
not
xor
jg
not
pop
inc
into
mov
pop
push
mov
out
ja
mov
and
inc
into
jno
inc
into
mov
cmp
into
sbb
into
mov
(bad)
mov
hlt
jns
jecxz
enter
into
enter
mov
adc
xchg
jecxz
(bad)
(bad)
sbb
dec
pop
inc
into
or
into
mov
sbb
jnp
adc
mov
into
mov
pop
inc
dec
push
pop
jb
mov
adc
cli
fs
xchg
into
and
mov
into
mov
lea
int3
nop
div
fs
into
mov
into
mov
cmp
pop
pop
loopne
cmps
test
shl
mov
dec
into
shl
mov
scas
mov
cld
dec
fist
push
data16
ja
fs
into
push
pop
inc
into
mov
fnsave
mov
dec
fbstp
xor
ja
fs
into
push
pop
inc
into
mov
fnstsw
mov
loopne
mov
out
jg
stos
push
into
sbb
mov
je
not
je
into
adc
mov
int3
mov
mov
dec
das
fdivrp
jne
jb
in
xchg
adc
(bad)
call
cdq
mov
mov
mov
adc
jnp
adc
mov
into
mov
pop
mov
push
pop
push
stos
adc
jne
sar
not
inc
into
icebp
pop
ret
(bad)
daa
mov
adc
jnp
push
fs
into
mov
into
mov
push
jg
fisubr
stos
adc
jnp
shr
into
icebp
pop
inc
into
mov
pop
sub
mov
cmp
pusha
dec
into
and
mov
pop
stos
scas
mov
(bad)
sbb
test
dec
sbb
sub
fidivr
fs
into
sbb
mov
aaa
data16
leave
xor
add
into
mov
cmp
cmp
rcl
sti
xchg
cmp
pop
pusha
or
daa
inc
dec
sahf
pop
inc
into
mov
fld
mov
pop
inc
into
mov
pop
sub
jmp
into
dec
sbb
js
inc
into
mov
pop
cmp
mov
jnp
add
jge
add
test
mov
repz
inc
into
xor
test
fld
into
or
inc
into
js
inc
into
mov
fnsave
mov
pop
lock
jae
call
inc
dec
push
pop
inc
into
js
cmps
mov
fs
into
enter
mov
jns
into
sbb
(bad)
mov
jns
into
sbb
stc
mov
push
inc
into
mov
out
mov
sub
into
icebp
push
inc
into
mov
(bad)
mov
push
inc
dec
push
pop
inc
into
js
inc
into
mov
sbb
jge
femms
sub
ja
addr16
jmp
aad
jg
mov
test
ud0
jns
(bad)
repnz
sbb
xor
inc
stc
push
test
pop
test
pop
test
fnsave
cmp
inc
pop
test
pop
test
pop
mov
mov
fisub
pushf
push
test
fld
(bad)
neg
mov
inc
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
(bad)
imul
fs
inc
enter
enter
enter
(bad)
imul
fs
inc
enter
enter
enter
enter
enter
enter
enter
enter
enter
retf
inc
retf
inc
retf
inc
enter
enter
enter
enter
enter
enter
enter
(bad)
imul
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
int
fs
ja
push
add
mov
(bad)
cwde
mov
mov
retf
push
adc
mov
gs
adc
dec
xlat
and
rcl
xchg
sub
adc
jecxz
jo
cdq
xchg
in
push
adc
sbb
cmps
jno
jns
out
cmps
mov
mov
jge
aas
or
jge
mov
js
or
lods
and
enter
jo
pop
push
adc
push
lock
pop
sbb
fldcw
add
adc
cmp
adc
(bad)
fwait
sbb
xor
inc
popf
neg
ret
call
xor
fdiv
xor
or
shr
jbe
or
mov
xchg
mov
or
test
and
(bad)
stc
(bad)
sbb
mov
mov
scas
repz
dec
mov
push
jnp
pop
cmp
inc
jns
inc
and
ss
inc
xor
add
aaa
fwait
add
cmp
fbstp
aaa
fwait
inc
jns
sbb
pop
cs
push
fild
test
es
jl
call
mov
je
aam
fadd
mov
outs
cld
xor
ret
mov
sbb
adc
fcom
int3
fisub
popf
mov
sub
jae
jl
jae
jne
jae
cmc
cmp
inc
sbb
jne
aaa
movs
jae
jne
jae
jne
xchg
scas
dec
movs
jae
jl
jae
jne
jae
jne
push
scas
cmc
pop
jp
xor
jae
jne
push
scas
xor
movs
jae
jne
ins
scas
jne
retf
data16
inc
movs
repz
jne
jae
jne
add
retf
xor
rcr
cdq
dec
scas
ret
xchg
mov
inc
pop
cdq
fiadd
jl
push
pop
cdq
retf
bound
sub
mov
fwait
sbb
xor
jae
fs
cmp
add
mov
(bad)
pop
mov
inc
mov
enter
ror
or
fild
pop
mov
aaa
imul
xchg
inc
in
lods
jle
in
(bad)
(bad)
dec
adc
aad
ja
xlat
pusha
xchg
aad
push
push
xor
fwait
bnd
jl
jno
sub
sbb
jle
mov
pop
push
push
add
mov
add
out
cmc
dec
xor
cs
pushf
hlt
not
int3
in
inc
stc
aam
xchg
xchg
ss
enter
enter
div
xchg
ret
ret
xor
(bad)
jmp
pop
push
push
loopne
imul
sbb
lods
pop
fcomip
data16
cmp
test
jae
fdiv
hlt
ffreep
scas
arpl
ret
push
push
pop
(bad)
mov
pusha
pop
mov
stos
sbb
push
xor
int
adc
dec
pop
fidivr
jl
inc
mov
inc
lahf
mov
xor
repz
mov
push
add
call
call
mov
jmp
mov
fisub
push
js
add
stos
push
jb
int3
mov
cmp
jae
pop
fcom
int
into
push
fst
jo
stos
aas
sub
jmp
inc
je
push
inc
les
inc
(bad)
neg
ret
lds
inc
and
pop
inc
les
inc
fs
dec
les
push
inc
inc
test
jbe
ret
int
push
jb
div
ret
jg
inc
sbb
push
jg
not
inc
enter
inc
jbe
add
jbe
jl
das
maxps
aas
sahf
jg
adc
ret
push
dec
push
inc
xchg
jbe
inc
(bad)
imul
les
push
inc
inc
not
dec
les
inc
les
inc
les
adc
imul
(bad)
push
ret
jne
push
inc
push
jbe
inc
les
ret
lds
add
push
inc
les
ret
lds
inc
adc
push
inc
les
sbb
jbe
xchg
leave
jg
mov
iret
stos
dec
(bad)
pop
push
inc
inc
not
inc
(bad)
div
les
inc
int3
jbe
push
les
inc
int3
jbe
dec
les
jns
adc
ret
push
dec
push
inc
xchg
jbe
les
jle
push
push
jge
dec
cmp
std
pop
and
add
sub
dec
and
popf
retf
add
jb
scas
inc
add
inc
leave
repnz
cdq
dec
and
xor
(bad)
lods
mov
imul
dec
xchg
push
cld
and
in
cmp
inc
scas
jnp
jo
test
ret
test
repz
xchg
xor
fsubr
data16
in
cmc
ret
hlt
push
aam
je
imul
out
iret
int3
imul
cmp
stos
movs
xchg
lock
js
mov
jnp
enter
jb
(bad)
jnp
mov
push
push
ja
jbe
fs
stc
ret
scas
mov
ja
and
jbe
invd
mov
dec
push
push
jnp
(bad)
push
in
nop
mov
add
call
(bad)
dec
call
inc
mov
push
jmp
data16
jbe
mov
imul
add
ss
loopne
js
mov
data16
shl
cli
push
out
aam
in
sbb
or
pop
mov
ja
das
jns
pop
and
(bad)
fsub
ss
jl
mov
pop
pop
add
cmp
mov
push
call
cmps
sbb
shr
dec
enter
rcl
stc
mov
dec
imul
jae
in
out
mov
inc
mul
(bad)
mov
not
sbb
test
stos
inc
pop
imul
pop
or
xlat
lahf
xchg
xchg
aas
test
xlat
dec
add
inc
test
mov
mov
or
mov
mov
stc
jno
xchg
or
inc
sbb
mov
adc
jns
cmp
jg
pop
test
fucom
inc
icebp
pop
test
neg
jg
pop
test
pop
bound
cmp
jae
fs
sbb
dec
or
call
(bad)
addr16
sub
sub
dec
mov
and
(bad)
dec
adc
call
ret
clc
fs
enter
lds
inc
and
test
pop
retf
call
pop
sbb
xor
jb
(bad)
dec
mov
dec
fsubr
add
lds
mov
outs
(bad)
imul
jae
add
xchg
push
sbb
mov
movs
xor
xchg
jns
ins
js
mov
mov
mov
dec
aad
or
mov
cmp
(bad)
addr16
rol
or
(bad)
fwait
push
sbb
jne
cmp
inc
mov
pushf
mov
xchg
sar
dec
aam
push
fcomi
data16
das
xchg
repz
sahf
ja
inc
imul
hlt
xchg
call
pop
ins
inc
lock
cmc
pop
dec
add
bound
mov
clc
push
sbb
shr
jns
daa
and
data16
xor
mov
test
fwait
bnd
cld
aaa
mov
in
in
mov
test
sti
cmps
xchg
repnz
int3
mov
jno
and
test
mov
xchg
xor
aaa
xchg
jmp
add
inc
mov
push
loope
rol
arpl
xor
mov
addr16
aaa
fs
pop
inc
xchg
popa
cmps
cmp
in
xchg
mov
out
lock
(bad)
jge
jmp
xor
xchg
adc
shl
jmp
mov
ret
push
push
gs
(bad)
fs
in
(bad)
mov
xchg
mov
adc
cmp
push
push
xor
in
ret
mov
out
or
pop
test
outs
fucomip
mov
cdq
mov
icebp
in
xlat
js
loopne
mov
aaa
cmp
stos
daa
jg
loopne
lahf
stc
aaa
enter
cmp
and
jbe
mov
addr16
push
and
arpl
cmp
pop
je
fwait
mov
pop
or
(bad)
arpl
mov
retf
push
in
jae
fs
rcr
hlt
or
rcl
dec
xchg
bound
fsubr
lods
out
jle
cwde
inc
out
jecxz
pop
int3
adc
mov
jmp
repz
dec
dec
les
std
leave
(bad)
into
stc
ins
cmc
lods
shl
and
outs
test
sbb
push
sbb
mov
cwde
cmp
mov
mov
aaa
fbstp
icebp
xor
frstor
xchg
enter
ins
enter
mov
ret
loope
jge
sbb
mov
mov
add
mov
ret
das
and
pop
push
daa
ds
ins
fcomi
fild
ficom
movs
sti
out
inc
or
or
xor
aam
mov
sub
fdivr
ins
xor
sub
pop
cmp
jae
mov
cli
(bad)
fldenv
ret
aaa
sbb
call
(bad)
sbb
mov
ss
mov
or
xchg
jne
push
jg
xchg
mov
(bad)
jg
inc
mov
(bad)
sub
mov
cmps
cmp
(bad)
or
movs
push
cmp
jb
pop
dec
push
pusha
sti
inc
cmp
pop
ficom
(bad)
stc
inc
or
xor
aad
test
push
jae
in
adc
jmp
sub
pop
aas
fwait
xor
popa
movs
xchg
cmp
popa
and
inc
push
pop
scas
xchg
xor
cmp
lods
mov
mov
in
xor
inc
aad
xor
movs
out
xor
popa
movs
xchg
adc
ja
jne
jmp
popf
dec
xor
in
xor
movs
adc
movs
lods
xor
add
xchg
xor
popa
movs
adc
sbb
xchg
xor
popa
movs
xchg
xor
movs
xrelease
and
xor
popa
aad
push
pop
movs
sar
test
outs
add
sub
ret
pop
or
add
pop
popa
lods
stc
sbb
sub
pop
pushf
sbb
data16
adc
inc
leave
sahf
fwait
in
loope
bound
cmp
jae
fs
cmp
por
(bad)
dec
mov
jbe
aam
test
dec
fst
inc
add
(bad)
sbb
enter
daa
adc
(bad)
call
adc
arpl
push
fadd
dec
fdivr
in
inc
jnp
rol
pop
arpl
xor
add
mov
pop
dec
push
xor
mov
dec
pop
cli
add
(bad)
xchg
bound
cmp
add
(bad)
sbb
ds
and
xor
mov
mov
addr16
(bad)
loopne
aad
outs
fbstp
imul
inc
shr
fmul
jb
jne
cmp
ret
loop
xchg
xchg
cld
bnd
pop
mov
stos
stos
hlt
push
mov
fld
clc
mov
push
arpl
cli
ja
inc
(bad)
or
mov
fbstp
pop
fcomip
inc
jg
pop
inc
test
jns
push
and
scas
sbb
pop
aad
mov
aaa
cld
mov
repz
rcl
stos
movs
cdq
jl
ret
pop
dec
cmp
sub
cmp
inc
jns
sbb
jle
push
clc
xor
push
(bad)
jecxz
mov
ins
out
test
loopne
cmp
adc
mov
adc
mov
in
mov
push
shl
dec
cmp
mov
inc
ins
mov
sar
bound
add
scas
inc
mov
hlt
jae
test
lods
ins
mov
mov
inc
aad
cmps
loop
cmp
cmp
in
inc
dec
mov
mov
or
(bad)
lods
mov
hlt
and
rcr
icebp
pop
xor
(bad)
hlt
addr16
mov
daa
pop
test
fnstsw
xor
cmp
mov
int3
addr16
add
lods
(bad)
ja
and
add
pop
add
(bad)
sub
dec
mov
mov
dec
mov
ja
add
hlt
adc
jle
stos
out
call
loope
aaa
push
cmp
mov
pushf
xor
xchg
jnp
push
int
xchg
mov
ja
ror
push
(bad)
enter
ret
(bad)
mov
xchg
sbb
jbe
je
cmp
movs
icebp
test
mov
mov
mov
jae
nop
push
sbb
xchg
jnp
cmp
retf
aam
shl
push
jge
idiv
mov
add
dec
arpl
ret
adc
push
fdivp
push
pop
cld
inc
std
(bad)
fbstp
pop
les
pop
ret
mul
mov
xchg
sbb
fwait
xchg
les
xchg
jbe
hlt
dec
stos
mov
js
mov
add
pop
clc
fisub
fnstenv
inc
mov
xlat
cld
xchg
mov
int
js
mov
cmps
jl
lods
ret
cmp
mov
inc
cmp
adc
aaa
out
inc
mov
xlat
cld
dec
mov
xchg
fist
xchg
dec
test
jno
sbb
mov
mov
pop
jle
fs
aaa
add
cmp
les
add
push
xor
les
add
aaa
or
ss
out
movs
jmp
mov
les
and
std
movs
les
add
aaa
add
aaa
cmp
aaa
ret
mov
les
add
aaa
sub
(bad)
out
push
jle
les
add
aaa
mov
je
push
ret
mov
add
aaa
or
xor
addr16
int
pop
mov
les
add
aaa
test
pop
mov
add
aaa
add
cmp
add
out
cdq
mov
push
(bad)
std
addr16
les
mov
pop
pop
add
aaa
and
xor
int3
fist
mov
ret
mov
stc
push
aaa
ret
xchg
add
aaa
add
aaa
add
ficom
add
aaa
and
aaa
mov
pop
mov
retf
std
out
mov
les
add
les
test
pop
xchg
int3
fbstp
(bad)
jp
icebp
jp
mov
out
adc
mov
std
push
jle
les
add
aaa
add
fidiv
inc
pop
push
cmp
aaa
ret
xchg
add
aaa
add
aaa
add
push
pop
push
hlt
or
ja
mov
stc
test
sbb
cmp
cmp
mov
div
xor
mov
inc
mov
neg
jg
pop
test
pop
js
icebp
cmp
jg
pop
test
fucom
sbb
pop
mov
inc
clc
fs
inc
enter
enter
enter
enter
enter
enter
enter
enter
(bad)
sub
inc
fsub
enter
push
loope
inc
sbb
jg
pop
test
icebp
fucom
ret
retf
imul
in
jg
sbb
jg
pop
xor
jns
sbb
imul
jecxz
cmp
pop
test
inc
pop
test
pop
test
frstor
jg
sbb
jg
pop
dec
sbb
(bad)
fild
or
jg
pop
bound
cmp
dec
je
dec
les
pop
retf
cmp
sub
jg
pop
test
icebp
pop
mov
ja
adc
jg
pop
test
frstor
loopne
sbb
mov
out
test
fnsave
js
data16
pop
in
stc
retf
jg
pop
cmp
icebp
cmp
fisub
pushf
push
test
frstor
sahf
neg
lods
ret
lods
dec
call
and
or
in
inc
enter
mov
xchg
add
push
dec
push
ret
adc
jb
mov
popa
or
(bad)
mov
xchg
jo
sub
iret
ja
jno
mov
cmp
add
cs
cmps
in
sahf
adc
xchg
xchg
clc
xchg
add
or
cmp
fldz
(bad)
jl
rol
mov
lock
daa
mov
pop
js
idiv
aam
dec
test
inc
mov
inc
pop
mov
stos
stos
rcl
mov
push
clc
mov
add
inc
cld
adc
call
or
push
mov
sbb
cmp
pop
stc
into
jge
int
push
cmp
ror
xor
add
retf
es
pop
dec
je
sbb
dec
in
(bad)
shl
mov
push
cld
push
out
fadd
sbb
in
je
fbstp
pop
stos
in
imul
inc
mov
test
fisub
xchg
inc
jns
fwait
and
xor
xchg
out
addr16
jbe
sub
mov
inc
jns
fwait
and
ss
mov
jne
inc
or
lds
addr16
adc
or
xor
test
outs
pop
and
repz
test
imul
pop
retf
mov
push
cmp
cmp
cmp
repnz
mov
pushf
cmp
loop
cmp
repnz
adc
mov
cmp
jmp
or
into
js
xchg
cdq
xchg
out
mov
scas
fadd
mov
mov
stc
fadd
pop
scas
cdq
xchg
push
jmp
mov
cmps
lahf
mov
push
sahf
mov
fmulp
ret
pop
lahf
mov
pop
mov
mov
push
push
pop
iret
call
add
imul
pop
retf
mov
push
cmp
cmp
add
cmp
mov
cmp
mov
or
mov
cmp
pop
xor
stc
add
cmp
mov
cmp
xor
cmp
pop
mov
cmp
repnz
xor
sti
mov
cmp
mov
cmp
mov
inc
repnz
shl
aam
or
mov
xor
mov
cmp
mov
cmp
mov
jnp
xchg
sbb
xchg
push
add
xchg
shl
push
xor
cmp
mov
cmp
xor
cmp
fistp
pusha
clc
jmp
add
mov
inc
fnstsw
cmp
cmp
repnz
sbb
xor
cmp
cmp
cmp
repnz
pop
nop
cdq
fild
push
into
or
mov
cmp
mov
or
sbb
jae
sub
loopne
std
cmp
lahf
mov
cmp
repnz
add
or
push
push
xor
cmp
mov
cmp
shl
mov
mov
call
mov
pop
fcmovne
xchg
inc
cmp
sbb
repz
adc
and
cmp
mov
pop
imul
das
in
rcl
sti
add
loop
jge
in
jg
sbb
inc
icebp
pop
mov
and
cmp
mov
dec
fs
jnp
out
hlt
mov
mov
fdiv
inc
mov
mov
(bad)
jmp
xchg
mov
jbe
adc
pop
clc
arpl
out
mov
jbe
scas
(bad)
jmp
jae
inc
sub
xchg
int3
arpl
fild
mov
pushf
ret
jnp
and
enter
push
mov
in
mov
aam
sbb
fs
popa
sar
adc
loop
je
xchg
enter
xlat
cmps
inc
mov
aaa
mov
(bad)
jbe
or
mov
cmp
pop
mov
hlt
push
or
jge
in
and
lahf
jb
addr16
ret
or
js
adc
ret
fmul
pop
hlt
push
mov
jecxz
sbb
daa
xchg
jbe
sbb
jmp
loopne
xchg
sbb
jbe
rol
xchg
mov
out
fild
cmp
fimul
int
lock
stos
lock
mov
ja
sar
call
cmp
scas
retf
mov
add
jbe
out
fwait
mov
popa
jmp
dec
adc
sbb
adc
adc
adc
(bad)
bound
imul
jmp
iret
nop
sbb
shl
push
neg
adc
jno
or
pop
aam
add
and
sbb
mov
sbb
adc
adc
sbb
shl
pusha
push
sub
adc
rol
lods
clts
outs
push
push
movs
cmp
add
adc
jle
nop
mov
imul
adc
into
sub
fs
adc
(bad)
or
fs
adc
and
jbe
fimul
jmp
xor
mov
adc
inc
iret
adc
leave
sub
fs
jno
imul
fs
iret
adc
shl
imul
cmps
xchg
into
retf
mov
jp
ja
sub
mov
imul
adc
loopne
ret
mov
imul
nop
ins
cmp
pop
mov
dec
cmp
popf
ins
test
adc
mov
push
mov
push
mov
mov
imul
adc
nop
mov
iret
adc
adc
adc
ins
iret
adc
into
add
sbb
lock
data16
imul
fs
shl
adc
(bad)
sub
sbb
adc
adc
into
sub
and
push
aam
sub
das
ss
lahf
sub
shr
stc
cmps
cmp
repnz
fst
mov
jbe
jns
neg
or
shr
loopne
das
inc
icebp
das
test
jb
pop
loopne
sbb
test
pusha
(bad)
sbb
(bad)
imul
add
fscale
adc
std
loopne
cdq
mov
inc
inc
clc
in
push
neg
dec
popa
pop
sub
xchg
clc
sub
icebp
aaa
push
ins
les
imul
add
jns
adc
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
push
inc
mov
std
dec
pop
sub
jbe
dec
inc
pop
or
cmp
jo
cmp
out
pop
push
(bad)
sub
imul
sub
xor
adc
dec
push
(bad)
cmp
ss
push
out
pop
push
imul
pop
inc
imul
or
and
or
push
push
sub
sub
and
imul
or
in
and
movs
push
shl
pop
push
cmps
test
fmul
enter
mov
repz
in
jl
test
dec
pop
shl
pop
shl
test
xchg
mov
jo
inc
inc
mov
lods
pop
cmp
add
mov
daa
mov
cli
jmp
sti
aaa
hlt
mov
xchg
addr16
pop
(bad)
mov
inc
icebp
adc
int
call
inc
xchg
dec
mov
ret
fwait
ret
vmread
mov
jns
adc
addr16
aaa
nop
sub
hlt
int
(bad)
and
jmp
lahf
in
(bad)
mov
xor
aas
loop
ja
aaa
stos
(bad)
inc
sub
xchg
mov
push
pusha
loopne
enter
adc
inc
push
jge
sub
mov
sub
fdivr
bound
sbb
adc
xor
movs
dec
stc
cmp
mov
(bad)
jecxz
(bad)
iret
push
sahf
out
imul
push
cmp
inc
push
ins
xchg
sub
pop
das
and
jmp
mov
mov
sbb
pop
test
test
sub
mov
cmp
ss
add
shr
clc
adc
js
arpl
gs
std
pop
(bad)
(bad)
movs
push
pop
xchg
mov
pop
push
popf
push
jnp
cmp
ins
add
call
sub
mov
push
js
push
enter
imul
daa
aaa
sub
pop
or
(bad)
mov
inc
mov
adc
dec
push
cli
xchg
mov
stos
(bad)
push
add
pop
xor
sar
ins
dec
mov
scas
adc
pop
mov
mov
cmp
popa
push
xchg
popf
and
in
out
movs
loopne
mov
push
sub
mov
sub
fadd
xchg
pop
fsub
(bad)
mov
mov
int
add
loopne
mov
mov
mov
not
xchg
out
inc
sbb
jb
sub
cld
cmp
fdivr
bound
sbb
pop
imul
pop
pushf
xchg
ret
clc
les
imul
jg
cmc
sar
dec
dec
push
retf
xchg
pop
sub
fwait
cmc
mov
loope
clc
aam
mov
cvtps2pd
sub
icebp
fs
xor
les
ror
push
shr
mov
fs
fcom
or
or
and
mov
ret
fwait
ret
add
and
mov
retf
stc
jb
sbb
stc
out
mov
sbb
dec
cmc
sub
mov
aaa
xchg
push
lea
cld
mov
mov
cmp
inc
jge
fild
mov
sbb
push
xchg
mov
stos
adc
out
xchg
mov
sub
ret
es
pop
enter
cmp
push
mov
mov
imul
mov
mov
dec
sub
call
je
pop
cmp
dec
adc
add
xchg
lods
adc
hlt
mov
imul
sahf
cli
movs
fs
das
sbb
xor
out
sbb
or
adc
daa
aaa
xchg
push
cmp
xchg
inc
pop
add
jbe
or
(bad)
sbb
lea
ud0
xor
inc
ret
in
stos
sbb
sub
jge
sti
dec
xchg
mov
or
push
push
xchg
jns
(bad)
pusha
push
sbb
shr
mov
idiv
or
pop
fcom
push
dec
jg
inc
adc
sub
push
push
leave
cmps
mov
or
gs
test
cmp
pop
inc
inc
or
out
dec
lock
xchg
push
pop
loopne
sub
in
lahf
rcr
inc
cmp
(bad)
test
fidiv
jle
pop
dec
and
adc
(bad)
jmp
xor
push
add
call
fnstsw
jle
inc
xchg
mov
jno
add
mov
jne
xor
ins
and
mov
mov
pop
pop
pusha
jecxz
jae
cmp
jo
xlat
xor
test
in
ret
es
enter
out
into
push
icebp
out
xchg
push
sar
pop
push
xchg
nop
sub
inc
xor
pop
out
mov
add
pop
push
jp
sbb
inc
out
pop
push
mov
pop
adc
sub
idiv
and
sub
push
xchg
imul
push
repnz
mov
cmp
jbe
shr
xchg
cmp
mov
xor
aad
xchg
sub
lds
sbb
mov
adc
das
mov
inc
test
lsl
sub
mov
cs
loopne
ja
nop
je
dec
cmp
retf
xchg
add
je
lock
xor
in
(bad)
mov
pop
mov
cmp
gs
shl
jle
xchg
fiadd
(bad)
fisubr
iret
jne
cld
add
adc
mov
movs
jle
cdq
jbe
xor
cmc
mov
iret
movs
pop
add
mov
ins
lahf
jmp
or
ja
mov
inc
pop
mov
sub
jbe
mov
(bad)
je
je
icebp
imul
fistp
mov
mov
shl
jmp
popa
fwait
jp
cmps
jmp
push
int3
cmp
xchg
xchg
add
inc
xchg
(bad)
mov
fucomip
nop
jle
push
mov
enter
in
inc
jmp
out
clc
in
cmp
and
xchg
mov
jbe
and
bswap
xchg
mov
cmps
mov
and
lea
xchg
push
sbb
cld
imul
jg
leave
or
in
hlt
jbe
jp
mov
dec
xchg
adc
test
adc
xor
push
lods
cdq
out
es
test
aaa
fs
retf
mov
sbb
test
test
hlt
push
dec
mov
fild
sub
adc
lea
inc
pushf
mov
fdivr
pop
arpl
jb
cmc
dec
loopne
mov
jmp
jmp
xor
imul
jp
xor
mov
loop
es
or
cmps
hlt
inc
lods
pop
xchg
out
rcl
ror
sbb
shl
dec
push
jo
nop
push
sub
cmp
mov
push
imul
xor
sub
adc
push
pop
inc
push
cmp
mov
jbe
dec
jo
sub
arpl
cmp
or
hlt
push
jb
push
dec
dec
jmp
fs
imul
or
rcr
dec
and
sar
jmp
cld
ret
push
jl
sahf
mov
or
xor
mov
lock
jae
adc
push
dec
scas
imul
jo
jg
and
xchg
fwait
sbb
cwde
int
hlt
retf
lahf
test
cmp
adc
nop
adc
add
loope
into
outs
mov
repnz
pop
sbb
fcmovb
(bad)
sub
sbb
mov
lss
gs
mov
xor
sbb
hlt
shl
scas
fwait
sbb
mov
fbstp
pushf
add
dec
and
(bad)
loop
(bad)
into
stos
int3
test
dec
jg
(bad)
mov
fidiv
dec
test
ror
xor
inc
jns
lgs
xor
mov
repnz
int
lock
mov
rcr
jne
ins
mov
loope
mov
in
xor
lock
imul
mov
mov
pop
xchg
cmp
jecxz
mov
sub
sbb
repnz
mov
mov
(bad)
imul
or
lock
inc
xchg
(bad)
mov
mov
mov
enter
(bad)
mov
ja
mov
dec
xor
add
push
cwde
and
mov
dec
fidiv
pop
sbb
loop
inc
sbb
cmp
cmc
js
movs
push
lods
xchg
fld
call
movs
xchg
adc
fidiv
dec
pop
cmps
push
jns
mov
xlat
xchg
out
mov
jno
in
cmp
out
das
outs
dec
sub
push
add
or
xor
xlat
inc
xor
or
retf
push
cmp
aad
xchg
and
dec
mov
xor
and
dec
(bad)
push
adc
jp
push
push
inc
daa
test
scas
jne
cmc
retf
movs
(bad)
xor
scas
int3
sti
push
cwde
xchg
push
les
pushf
movs
stos
sbb
or
jb
sub
push
jnp
daa
pop
inc
mov
cld
gs
jle
cmp
gs
inc
push
sub
ret
lods
push
test
movs
lock
or
call
ja
(bad)
mov
push
retf
pop
sub
(bad)
xor
pop
icebp
in
push
out
in
retf
add
(bad)
sub
dec
in
dec
test
(bad)
jmp
push
cmp
adc
sub
mov
aam
int
inc
inc
mov
push
div
ds
add
fsubr
dec
std
or
inc
pusha
or
pop
adc
or
inc
call
sub
xor
xchg
mov
int
popa
test
push
jo
push
sbb
adc
xchg
xchg
shl
sub
inc
add
loope
(bad)
sti
sub
out
inc
into
pushf
push
xchg
rol
push
aaa
xchg
daa
xchg
and
push
gs
or
popf
fcomi
(bad)
test
xor
movs
jmp
xor
inc
ss
xchg
push
pop
sub
sub
stc
xchg
ret
push
xchg
pop
sbb
mov
jecxz
push
stos
lock
mov
dec
mov
lods
pop
mov
pop
sbb
inc
out
pop
push
(bad)
sub
imul
pop
adc
sbb
(bad)
sub
out
jg
cmc
cmp
and
cmp
dec
and
mov
aad
xor
in
cmc
out
push
das
in
or
sti
push
and
repnz
rcr
es
sub
jne
ds
mov
ds
repnz
stos
cmps
mov
aaa
jae
mov
and
call
jne
sbb
jmp
fcmovbe
push
pusha
retf
mov
fsub
cmp
enter
fnop
add
sbb
add
das
add
stos
inc
mov
das
enter
xchg
(bad)
std
sbb
repnz
push
bnd
aad
push
push
or
popa
popa
(bad)
je
or
mov
mov
mov
sub
inc
(bad)
cwde
mov
clc
inc
mov
pusha
add
mov
xlat
mov
pop
mov
call
jle
retf
xchg
inc
fistp
push
movs
fdivr
je
sbb
into
or
ror
cmp
xchg
inc
push
inc
rcr
out
into
inc
into
mov
and
mov
pop
cmp
js
xchg
retf
mov
not
push
call
test
dec
jb
jb
jbe
sar
ins
out
cmp
mov
sub
daa
sub
stos
call
adc
fidiv
mov
call
pop
xor
sbb
sub
xor
ja
sub
test
scas
int
cdq
vphsubbw
sar
fstp
jmp
cmp
sub
dec
inc
mov
imul
pop
mov
stos
xchg
ds
paddb
adc
popf
lods
jmp
mov
stos
mov
data16
add
inc
cld
mov
stos
movs
loopne
bound
jae
pop
push
call
jo
dec
pop
rcl
pop
jo
sub
neg
dec
push
out
pop
inc
in
js
cmc
cmp
dec
dec
lds
pop
inc
jmp
je
or
mov
jle
leave
push
ror
cmp
mov
cdq
jbe
add
xchg
daa
sbb
xlat
(bad)
cmps
stos
mov
popa
arpl
mov
jns
fwait
aas
push
adc
loope
and
mov
cmc
dec
or
adc
loope
stos
int3
push
fisttp
dec
mov
and
push
fistp
ret
add
and
mov
jmp
dec
popa
fisub
cmp
xabort
in
loopne
jle
ins
adc
jmp
pop
bnd
mov
iret
add
and
cld
mov
loope
fdivr
jb
mov
cmc
(bad)
inc
and
or
in
out
fistp
pop
int
cmp
(bad)
pop
std
aam
xor
test
pusha
push
aam
and
es
jmp
lahf
mov
push
jp
and
mov
mov
ss
jae
cmp
dec
cli
sbb
and
xchg
loopne
jae
jbe
out
nop
mov
ror
inc
imul
aad
jne
cli
jg
pop
add
and
in
movs
(bad)
ja
sbb
dec
sar
addr16
push
icebp
frstor
pop
mov
repz
adc
bound
and
cmp
call
(bad)
jno
sti
(bad)
ins
dec
in
push
jg
jl
scas
mov
(bad)
into
inc
in
retf
hlt
in
jmp
pop
(bad)
fsubr
ret
mov
jnp
aas
cs
call
lahf
jp
inc
fwait
sbb
mov
mov
mov
adc
mov
mov
or
mov
lock
arpl
inc
outs
cmps
and
ret
xlat
jmp
inc
icebp
jns
sti
sub
jl
mov
cmp
int3
out
and
xchg
mov
shl
mov
xchg
mov
adc
sar
repnz
arpl
sbb
and
dec
pop
cmp
aam
inc
lods
sub
dec
in
sbb
mov
fsubp
dec
das
xchg
dec
and
cld
adc
stc
cwde
cmc
cmp
and
ret
adc
sub
outs
sbb
push
repz
xor
popa
mov
mov
xchg
sub
lahf
mov
push
jmp
pop
jno
adc
mov
inc
nop
adc
pop
mov
arpl
inc
mov
in
mov
push
mov
ins
outs
jl
lods
stos
out
sbb
stc
mov
outs
fst
movs
or
xor
jnp
cmp
imul
daa
int
mov
add
out
and
pop
dec
lea
add
add
pusha
sbb
sti
pop
out
mov
push
mov
inc
add
pop
and
sti
scas
ins
jg
fisubr
push
sbb
xchg
and
sbb
pusha
sahf
and
loop
mov
jecxz
(bad)
pusha
call
fnstsw
xchg
sbb
add
mov
pop
or
pusha
sbb
in
stos
xor
jns
gs
stc
pop
sub
pop
and
mov
adc
jbe
sbb
add
or
inc
add
jns
arpl
add
loop
mov
pop
not
clc
in
cmp
out
adc
retf
sbb
inc
call
pusha
idiv
push
(bad)
cmp
out
dec
push
imul
dec
push
in
dec
inc
jmp
xor
in
mov
dec
push
out
dec
and
stos
fucomip
inc
movs
or
xchg
out
movs
dec
movs
inc
iret
in
aas
push
jns
add
mov
xchg
adc
pushf
pusha
mov
sub
cmp
(bad)
mov
mov
stos
xor
sbb
mov
add
and
mov
mov
scas
inc
ja
imul
inc
adc
mov
xor
push
in
out
mov
iret
or
ds
cmp
sub
cs
add
inc
and
call
pushf
popf
sbb
mov
pop
mov
sub
mov
aaa
dec
push
lods
dec
inc
std
lods
mov
ds
enter
adc
pop
sbb
not
(bad)
and
add
jo
push
nop
cmp
ds
je
daa
mov
jmp
or
mov
leave
retf
add
test
movs
lahf
stos
sub
jl
add
add
pop
mov
push
rol
in
das
pop
dec
cwde
dec
fld
pop
mov
(bad)
popa
push
fdiv
out
enter
jecxz
dec
hlt
test
push
mov
jmp
cmp
adc
popf
xchg
xchg
add
push
imul
fwait
popf
ret
imul
in
aam
retf
dec
iret
inc
test
aas
aad
shl
out
ret
or
cmp
dec
rep
imul
jns
stos
add
xchg
inc
cmc
imul
xchg
pop
ins
or
adc
fldenv
pop
and
add
lahf
or
inc
stos
inc
mov
mov
jmp
jl
adc
mov
test
mov
push
aaa
imul
retf
jmp
mov
pminsw
mov
stos
jp
pop
or
inc
fisub
cdq
xchg
ret
jnp
loop
add
int3
cwde
ror
add
outs
pop
push
cwde
scas
pop
adc
je
jg
dec
dec
scas
faddp
popf
mov
jmp
into
jmp
mov
rol
nop
xor
pop
ret
jl
dec
sbb
xor
adc
daa
rcl
wrmsr
mov
dec
hlt
sub
adc
out
out
xor
pusha
retf
push
xlat
and
jle
push
dec
dec
sub
sbb
mov
cmps
sbb
lock
pop
out
inc
xor
mov
enter
fmul
inc
in
and
push
mov
jmp
xchg
cmp
jecxz
retf
lds
ins
sar
pusha
test
push
imul
pop
push
xchg
sub
xor
test
pop
inc
mov
mov
pop
push
in
scas
push
pop
imul
push
in
ss
sbb
mul
dec
shl
pop
fadd
sub
aam
dec
push
pop
xchg
inc
fld
(bad)
pop
lock
jge
inc
mov
in
stos
xchg
cmp
adc
(bad)
mov
jb
repz
ss
or
aaa
mov
jge
scas
dec
mov
xchg
(bad)
retf
xor
pop
xor
shl
or
push
sub
inc
mov
adc
mov
dec
sahf
mov
cmp
or
dec
xchg
rcr
dec
push
sbb
out
mov
dec
push
mov
js
test
nop
and
lahf
retf
lds
test
cmc
sub
movs
movs
and
jp
pop
adc
cmps
retf
adc
arpl
lods
cmps
push
push
sbb
add
or
pop
call
push
inc
sub
repz
pop
shl
push
push
(bad)
and
imul
sub
fdiv
push
dec
push
jbe
sbb
inc
out
pop
push
(bad)
sub
imul
dec
inc
idiv
pop
push
repnz
pop
in
inc
pop
jmp
xor
dec
and
and
lds
add
div
sub
add
out
je
fwait
stos
lds
ret
xor
pop
xchg
div
adc
sub
loop
cwde
lahf
jmp
dec
sub
(bad)
lock
int
(bad)
int3
push
jnp
and
sbb
push
aas
cmp
add
pop
inc
cmp
adc
push
and
(bad)
push
push
pushf
push
outs
lods
xchg
mov
out
outs
xor
mov
dec
pop
test
adc
fisub
movs
push
into
mov
(bad)
int
jns
jbe
mov
(bad)
daa
inc
xor
or
xchg
dec
bnd
jno
pop
inc
fisttp
and
movs
out
in
dec
into
test
or
(bad)
in
not
mov
adc
or
popa
dec
(bad)
ins
and
test
out
leave
adc
pop
out
and
cmps
add
retf
cli
ud1
add
clc
jg
gs
call
bound
pop
inc
push
call
jb
inc
stos
leave
(bad)
call
xor
add
pop
xchg
rcr
call
or
dec
jge
mov
jb
sub
es
aaa
mov
adc
mov
xor
sbb
jecxz
sub
adc
push
mov
dec
mov
lock
xor
cld
cwde
push
or
(bad)
pop
pop
rcl
fisttp
jmp
fwait
jmp
push
clc
xchg
cdq
cmp
or
adc
dec
stos
xchg
clc
in
ins
cld
sub
retf
inc
xor
aam
mov
addr16
or
cmps
push
push
xchg
retf
sahf
out
mov
hlt
lock
jge
loopne
mov
cmps
rol
fs
jno
push
dec
cmps
ror
push
adc
xacquire
fcmove
clc
imul
xchg
jecxz
jno
jmp
mov
out
test
enter
xchg
sahf
call
push
cmp
loope
gs
inc
sub
iret
sbb
shl
inc
(bad)
mov
jbe
cdq
stos
clc
jno
cwde
mov
int3
imul
mov
rol
cs
push
gs
mov
retf
lock
mov
cmps
adc
sbb
mov
jno
jno
sbb
dec
iret
mov
inc
sti
sti
and
hlt
aad
adc
push
aad
pop
test
push
mov
ins
into
test
mov
js
push
sbb
xor
(bad)
adc
jns
rcr
ret
xor
cmp
or
pop
lahf
pop
push
pop
(bad)
(bad)
fs
add
mov
jb
bound
aas
rcl
loopne
dec
shr
(bad)
ss
into
addr16
les
cmps
sahf
shr
mov
inc
sub
or
cmp
mov
lock
into
test
fld
push
or
inc
adc
cs
shr
mov
xchg
mov
inc
jns
popa
sub
adc
ret
dec
jo
sub
out
pop
push
mov
pop
push
(bad)
sub
imul
dec
dec
in
dec
inc
in
sub
repz
inc
dec
jmp
mov
lock
sub
aaa
out
mov
bound
popf
mov
cmp
lahf
push
xlat
or
test
iret
inc
xor
mov
ins
adc
push
aam
fstp
bswap
ret
std
inc
bound
gs
call
mov
in
sahf
sbb
xchg
mov
fldcw
and
adc
or
mov
jmp
dec
gs
ret
mov
xchg
cmp
mov
push
xlat
jb
test
sbb
or
(bad)
cmp
jns
cmp
add
xor
sbb
add
push
sub
cdq
xor
ficom
mov
or
jecxz
inc
in
jbe
aaa
fild
mov
aas
and
into
imul
aas
jae
xor
pop
outs
cmp
jp
in
or
ins
jecxz
fs
jle
in
push
dec
jns
pop
push
test
stc
pop
scas
(bad)
add
mov
(bad)
call
dec
dec
sar
(bad)
sar
aas
nop
inc
cmp
aas
jmp
jmp
out
or
mov
jne
and
mov
js
push
imul
in
mov
mov
jge
mov
sub
fbld
xchg
bound
(bad)
imul
icebp
jecxz
sub
popf
repz
lock
xor
js
fidivr
xor
retf
iret
pop
in
jnp
pop
das
inc
lods
in
repnz
jae
fistp
xchg
shl
inc
std
pushf
mov
dec
adc
push
xchg
repnz
cmp
mov
push
jo
clc
(bad)
icebp
lea
push
test
addr16
out
dec
jmp
bound
xchg
xor
xor
xor
push
lds
cdq
fsubr
shl
sar
(bad)
jb
mov
pop
jo
cmp
imul
inc
out
pop
push
(bad)
sub
idiv
dec
inc
imul
dec
dec
loop
dec
push
loopne
inc
dec
repnz
push
jmp
sbb
push
sub
jo
adc
shl
or
sbb
test
mov
dec
push
xor
jns
dec
dec
sti
bnd
mov
inc
ja
ficomp
xchg
test
je
int3
or
es
jb
(bad)
in
ins
loopne
inc
cli
stos
mov
in
push
sbb
add
stc
cdq
int3
daa
out
je
and
int
or
in
inc
push
inc
shl
or
xlat
cmp
lods
push
mov
into
mov
dec
mov
ret
lahf
mov
pop
movs
mov
pop
stc
aam
clc
cmc
adc
inc
shl
mov
inc
std
mov
stc
outs
jae
enter
js
icebp
adc
test
js
or
add
mov
repnz
pushf
loope
pop
cmp
add
xchg
enter
dec
stos
dec
jg
icebp
mov
xor
adc
adc
loope
sub
sahf
loop
je
mov
mov
popa
ret
and
cld
aad
dec
mov
cwde
dec
inc
lock
scas
push
test
rcr
ins
mov
mov
pop
jne
mov
pushf
or
xchg
push
pop
je
sub
mov
or
mov
mov
push
out
out
cmp
mov
ret
cmp
aaa
dec
and
ins
push
pop
pop
sbb
out
jns
sbb
(bad)
jge
add
push
mov
enter
daa
dec
add
sar
shl
cmp
xchg
sub
and
das
call
and
icebp
pushf
push
or
add
dec
push
push
popa
lahf
aam
movs
call
jae
in
gs
pop
cld
clc
imul
cmp
xchg
inc
or
jmp
dec
dec
jmp
or
cld
add
cmp
stc
test
push
(bad)
xor
adc
inc
repnz
dec
clc
lods
inc
inc
fdivr
mov
clc
inc
xchg
and
sub
bound
and
and
(bad)
rep
jmp
cs
pop
or
mov
sub
pop
xchg
rcr
mov
clc
out
stc
adc
lahf
imul
push
icebp
inc
sbb
inc
lods
jge
aam
mov
out
inc
push
aaa
mov
adc
lods
pop
mov
xor
xchg
sbb
int
pop
xor
sub
jmp
pop
add
je
aam
fcomp
and
(bad)
rcr
jmp
loope
iret
mul
xchg
scas
(bad)
fnsave
sub
loop
call
in
mov
daa
add
jb
das
lods
pop
add
cmp
inc
sub
push
adc
pop
xlat
and
jns
loop
(bad)
das
sub
dec
jmp
outs
push
repnz
or
lods
mov
fisubr
mov
ret
mov
das
repnz
push
imul
mov
and
addr16
repnz
lock
or
clc
push
xor
push
outs
ret
xchg
jge
loope
imul
mov
inc
loope
sub
pop
inc
add
fmul
cmp
leave
xor
call
(bad)
ins
or
jmp
gs
les
sbb
sbb
cmps
xchg
out
cs
aam
sbb
aam
add
jnp
adc
push
call
mov
push
mov
or
mov
fiadd
rcl
xchg
add
xchg
inc
dec
(bad)
sbb
mov
jmp
sbb
jbe
inc
xor
stos
mov
pop
xchg
push
and
pop
add
lahf
push
and
add
xchg
and
or
mov
fist
loopne
or
dec
iret
push
lods
pop
xor
mov
and
popa
fnstenv
popf
cld
cmps
stc
push
cs
adc
(bad)
(bad)
pushf
xchg
inc
fcom
mov
pop
add
cs
lods
les
imul
cmp
loope
dec
jb
out
inc
mov
cmps
sbb
adc
es
xor
sub
repnz
pop
push
mov
loop
push
pusha
not
jge
add
jge
test
adc
sbb
adc
jns
and
fst
mov
popf
loopne
jmp
pop
adc
cmp
push
sub
inc
sbb
cmps
sub
xchg
ins
adc
jns
inc
mov
in
and
xchg
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
lods
jg
push
int
mul
pop
jo
cmp
out
adc
pop
jo
sub
sbb
(bad)
sub
imul
cmp
add
imul
jns
ins
inc
mov
pop
push
idiv
pop
push
out
pop
push
imul
ins
adc
jns
and
mov
pop
lock
cmp
(bad)
sbb
idiv
pop
(bad)
(bad)
sub
(bad)
test
pop
jecxz
mov
inc
xor
inc
fst
jmp
sar
xor
cmps
popa
inc
mov
pop
sub
xchg
mov
lea
sbb
cmp
cs
fild
js
and
pop
push
test
popa
cmp
adc
xchg
(bad)
xor
into
leave
in
cwde
lahf
mov
add
inc
pop
sbb
xor
mov
rcr
cmps
ins
dec
mov
jne
clc
call
bound
stos
mov
and
jbe
inc
test
(bad)
mov
push
cs
sti
sub
push
mov
(bad)
inc
into
sub
jge
ja
and
in
out
enter
mov
and
dec
adc
into
push
jae
jne
jecxz
add
adc
mov
jo
sub
xor
dec
cmps
jmp
out
sub
arpl
test
inc
out
adc
mov
jae
push
mov
adc
outs
add
pop
push
push
test
pop
les
jmp
mov
popa
or
arpl
push
pop
or
xchg
xchg
mov
mov
push
xor
and
mov
lea
mov
inc
ret
or
and
and
xor
mov
lods
push
adc
xchg
cmp
(bad)
les
lock
sub
in
xchg
push
mov
xchg
adc
jmp
repz
scas
dec
or
loop
dec
push
add
inc
div
add
retf
or
push
dec
and
or
jns
dec
(bad)
xor
in
inc
cmp
mov
pop
sahf
es
inc
adc
inc
(bad)
pop
aas
fiadd
mov
xchg
inc
pusha
mov
mov
xor
mov
adc
pop
sahf
cli
mov
stos
dec
add
pop
sbb
icebp
and
cmp
jg
xor
mov
pop
in
sti
cmp
jg
out
jns
adc
test
add
xchg
jle
push
add
xor
cld
push
or
test
ret
out
adc
add
ins
jge
mov
sub
fs
cwde
hlt
mov
mov
sbb
pop
dec
xchg
or
out
cmp
loope
cli
and
inc
mov
in
sub
(bad)
mov
jno
adc
aaa
add
pushf
gs
mov
in
mov
inc
lock
sub
jns
in
jmp
sbb
rol
dec
and
in
dec
mov
in
and
mov
push
rcl
inc
ss
cmp
jp
pop
pusha
std
dec
jp
outs
loope
out
pop
fwait
or
leave
stc
jp
inc
xor
or
cdq
inc
sub
jne
or
mov
jbe
inc
clc
shr
(bad)
idiv
test
out
sub
dec
fs
(bad)
jnp
(bad)
fcmove
std
in
xchg
pop
inc
sbb
bound
icebp
cli
das
in
xor
(bad)
xchg
popf
into
push
arpl
and
test
movs
sti
int3
call
dec
add
nop
(bad)
jecxz
in
jmp
scas
or
mov
shl
lea
sbb
mov
ds
jb
data16
cli
std
dec
push
mov
push
push
retf
shr
sbb
stc
scas
sub
dec
dec
push
jmp
scas
rol
(bad)
pop
mov
repz
jne
sbb
leave
inc
js
inc
mov
int
pusha
icebp
popf
mov
cmp
add
stos
ret
int3
push
(bad)
xlat
js
popa
inc
and
out
call
sbb
mov
add
dec
adc
jne
arpl
adc
movs
pop
or
fldz
jge
add
movs
test
add
sub
rcr
fcmovu
icebp
in
fsub
mov
aad
scas
dec
js
stos
in
add
dec
jne
mov
mov
sub
sti
sbb
jne
push
sahf
sub
xchg
test
daa
stc
inc
shl
sub
das
xor
push
and
jge
add
ins
adc
cmp
(bad)
cmp
(bad)
sub
push
idiv
sbb
cmps
or
js
inc
(bad)
test
pop
xchg
pop
dec
push
cmps
cmp
jbe
stos
cwde
jmp
test
and
xchg
loope
mov
xchg
lock
push
dec
mov
dec
dec
retf
test
rcl
cmps
jnp
arpl
aaa
jno
pop
xor
into
xchg
retf
sub
ror
sbb
xchg
mov
pop
pop
mov
jg
lock
and
ins
std
xor
fdivr
inc
sub
sbb
jmp
cmp
ficom
fwait
and
jne
loopne
push
mov
jae
dec
ret
sti
es
inc
sub
and
dec
stos
push
lock
out
pop
(bad)
jo
(bad)
cmp
cmps
call
and
push
sbb
clts
int
jecxz
xchg
jo
stos
xor
adc
out
jmp
push
and
sbb
mov
mov
repz
imul
or
xor
xchg
xchg
leave
pop
jmp
mov
add
arpl
gs
call
jg
sbb
adc
xchg
inc
outs
pop
xchg
(bad)
jle
std
jle
or
pop
jnp
shr
imul
push
mov
stc
gs
xchg
ins
mov
pop
movs
repz
pop
mov
lods
cmp
xchg
enter
ret
mov
cld
fndisi(8087
ins
adc
and
xor
xchg
orps
jp
pop
mov
or
bound
enter
in
test
sahf
add
xchg
or
adc
or
ins
and
data16
cmp
ds
inc
sub
xlat
fldenv
mov
retf
shl
push
cmp
into
inc
psubsw
in
adc
out
je
jg
push
in
add
ret
iret
rol
fist
popf
call
test
jnp
ret
push
pushf
mov
mov
mov
fdivr
xor
inc
sub
bound
shr
fcmovnb
int3
pop
pop
popa
aas
lds
jmp
int
sub
xchg
mov
xchg
lods
and
rcl
push
aam
xchg
xor
pop
inc
cld
fst
movs
xchg
adc
stc
call
jae
sub
add
fcmovnu
sub
push
das
pop
xchg
mov
adc
(bad)
mul
out
push
push
xchg
movs
mov
xchg
xchg
mov
adc
mov
in
pop
sub
enter
pop
pop
in
inc
test
push
push
popf
shr
or
outs
inc
cld
pop
scas
pop
adc
retf
in
out
adc
jb
pop
cdq
iret
(bad)
rcl
ins
cmp
xchg
pop
adc
(bad)
fnstsw
add
and
and
ins
jecxz
neg
push
daa
xchg
dec
add
mov
(bad)
jge
(bad)
fisttp
mov
in
pop
sub
adc
cdq
mov
xchg
jne
cmp
jmp
or
or
cmps
sbb
lods
push
cmps
(bad)
cmp
(bad)
out
add
adc
pop
xchg
jo
mov
dec
mov
inc
or
push
test
lds
stos
loopne
xchg
push
pop
or
call
inc
adc
cld
call
push
aas
mov
push
xchg
rcr
icebp
dec
mov
les
add
jge
aas
(bad)
adc
pop
(bad)
stos
fwait
push
cmp
lods
mov
cmp
out
adc
addr16
jno
jbe
xchg
stc
xor
jecxz
jecxz
sub
mov
into
ss
lods
push
sub
jbe
and
inc
xor
xchg
cmc
movs
rcl
jno
(bad)
push
int3
add
mov
ficom
test
or
ja
mov
dec
das
and
in
adc
mov
shr
adc
cmp
sahf
xor
xchg
push
pop
call
jge
jb
mov
mov
pushf
into
(bad)
pop
ret
push
jge
mov
inc
inc
imul
sar
popf
inc
pop
inc
and
or
ins
loop
push
jmp
les
xor
outs
xchg
or
or
lds
jmp
shl
sub
popa
div
push
pop
movs
mov
stos
test
(bad)
dec
sub
sbb
mov
xchg
dec
sub
arpl
jg
mov
mov
mov
jne
in
xchg
dec
and
pop
xchg
stc
adc
mov
jmp
push
jmp
sbb
xchg
jo
push
dec
add
cmp
mov
mov
(bad)
mov
in
pop
rcl
test
push
inc
xchg
push
int3
add
es
jnp
es
out
mov
cld
popa
xchg
adc
sbb
cs
cdq
shl
push
pop
jb
rcl
pop
xchg
cmp
jnp
and
jmp
push
xor
js
iret
xor
add
call
mov
aaa
mov
mov
dec
inc
add
mov
(bad)
jb
pop
jmp
stos
xchg
sub
dec
data16
add
sbb
out
pop
push
cmps
sub
out
sbb
idiv
dec
add
sbb
out
dec
inc
test
pop
fs
sub
fldenv
pushf
lds
or
loopne
xchg
cmps
inc
(bad)
dec
xor
ja
jbe
shl
pop
sahf
sub
xor
mov
movs
xchg
dec
not
push
xchg
mov
test
shl
or
fwait
pop
inc
dec
sbb
mov
icebp
aas
add
jns
repnz
or
mov
es
and
dec
mov
imul
xor
and
mov
cmps
pop
adc
xor
in
mov
outs
imul
push
cmp
push
int
pushf
mov
inc
mov
push
(bad)
fs
(bad)
xlat
sub
mov
dec
cmp
xchg
xor
mov
cmp
dec
mov
adc
es
imul
and
mov
mov
sub
pusha
sahf
imul
jno
loopne
sbb
in
mov
push
adc
pop
in
fadd
lods
inc
cmc
jp
and
push
test
jb
pushf
lods
pushf
cmp
addr16
in
mov
bound
mov
adc
mov
repz
retf
fwait
std
inc
stos
and
dec
test
xor
xlat
pop
or
ds
data16
and
and
xchg
(bad)
pop
pop
push
out
bound
mov
mov
xchg
rcl
loop
test
pop
test
mov
sahf
lods
sbb
mov
loopne
gs
in
neg
xor
retf
repnz
mov
js
fsub
mov
mov
fdiv
jae
pop
clc
or
call
pop
mov
adc
jnp
mov
pusha
stos
adc
sub
arpl
les
stc
xchg
std
rcr
cmps
dec
mov
and
sub
xchg
popa
cmp
into
add
sbb
popf
mov
pop
ret
sbb
outs
inc
push
out
xchg
push
ret
outs
data16
jmp
out
ds
or
adc
inc
out
xchg
mov
add
pop
mov
sahf
iret
jmp
mov
xor
add
int3
loope
test
loopne
test
lods
jmp
out
sbb
push
loope
sub
test
xor
je
aas
xor
or
jmp
ins
dec
xor
mov
ret
ret
inc
test
(bad)
cld
cmp
das
and
movs
stc
sbb
mov
call
lods
jmp
std
popa
cmp
clc
(bad)
push
sub
in
and
add
je
xor
imul
cmps
mov
lahf
das
imul
and
pusha
je
xchg
jne
xor
xchg
push
and
jmp
lods
lods
sbb
fadd
and
js
inc
or
push
cmc
pop
mov
mov
add
shl
lock
jl
lock
js
fcomi
xor
bound
loop
xchg
add
fdiv
pop
inc
cmp
std
push
fistp
mov
mov
sub
lods
aad
jbe
lods
ds
inc
ror
push
sub
(bad)
not
addr16
mov
pop
fisub
dec
outs
cmp
(bad)
out
sbb
lahf
push
nop
sub
jmp
cld
sub
mov
rol
fnstcw
push
cmp
stos
pop
sub
and
stc
loopne
xchg
mov
pop
pop
pusha
mov
icebp
(bad)
stos
cli
mov
push
inc
and
aaa
xor
scas
push
pop
push
adc
retf
test
dec
sub
and
mov
mov
inc
retf
ins
add
in
mov
push
inc
scas
call
pop
inc
push
pop
cdq
sbb
adc
jns
retf
sti
pop
rcl
ret
popf
dec
pop
jecxz
push
mov
sbb
ss
loopne
lods
inc
adc
lods
rcl
sti
cmp
fnsave
inc
inc
call
int3
xlat
mov
nop
lods
xchg
aas
mov
or
mov
rcl
xor
xlat
popf
stos
loope
mov
(bad)
retf
adc
add
cmp
call
add
xlat
aam
bound
loop
call
xchg
xchg
in
push
sub
arpl
stc
call
dec
sahf
sar
sub
pop
out
ja
cmp
test
pop
push
in
in
lods
popf
push
mov
out
int
ficom
sahf
ds
mov
cmps
sbb
jnp
stos
test
xchg
sbb
xchg
dec
js
xchg
cmp
or
je
mov
and
mov
repnz
js
loope
movs
enter
lods
lock
dec
mov
cmp
push
jg
or
test
mov
test
mov
sub
jae
(bad)
ins
pop
push
inc
scas
push
inc
add
(bad)
fnstsw
mov
data16
mov
fstp
inc
idiv
ins
jo
cmp
push
mov
dec
push
cmps
sub
(bad)
xlat
or
sub
ins
ins
push
jecxz
add
push
aam
inc
sub
cmp
rcr
dec
and
sub
mov
mov
fild
bound
cmp
nop
sbb
push
out
pop
idiv
add
cmp
mov
xchg
mov
or
mov
xchg
lea
cmp
scas
xor
inc
ficom
jmp
scas
mov
sub
inc
ins
inc
loopne
lea
dec
icebp
and
std
and
nop
xchg
xchg
adc
sbb
add
aaa
cmp
jb
cmp
cwde
jg
sbb
dec
pop
cmps
mov
add
shr
dec
enter
jmp
xchg
sbb
xchg
out
out
xlat
out
jmp
aad
mov
mov
jl
imul
call
mov
cli
loop
cwde
int3
outs
icebp
inc
inc
in
lds
mov
jae
adc
mov
xchg
or
inc
jp
or
push
or
inc
aas
fwait
mov
pusha
iret
xor
sub
fidivr
adc
xchg
adc
mov
inc
fwait
sbb
daa
aad
sbb
pushf
stc
xchg
ins
xor
xor
scas
stos
and
lock
call
and
inc
inc
cdq
mov
mov
ds
inc
adc
xchg
mov
jl
mov
push
icebp
fdivr
lods
mov
shl
imul
cmp
cmp
jns
add
dec
dec
addr16
jecxz
lds
push
stos
dec
xchg
add
xchg
add
xchg
mov
out
data16
sub
enter
fld
mov
sti
sub
leave
addr16
pop
stc
xchg
xor
jo
icebp
or
cwde
in
cmp
mov
cmps
inc
dec
dec
std
fisubr
dec
aam
adc
jmp
loop
jle
enter
int
dec
or
xchg
fmul
adc
cmovle
xor
push
mov
xor
cld
call
and
out
vmovsd
xchg
fwait
test
int
adc
sbb
mov
in
stos
lods
or
call
cmc
mov
and
push
and
sar
push
add
add
cmc
int3
mov
pop
sbb
pop
cmp
daa
pushf
dec
shl
pop
add
in
test
(bad)
xor
xchg
or
or
jae
or
icebp
(bad)
lods
dec
xor
cdq
or
jb
push
push
rep
add
leave
pushf
neg
mov
adc
test
addr16
fld
mov
clc
movs
jge
mov
aas
or
adc
xchg
jmp
out
ins
sbb
std
mov
push
pop
push
adc
lea
add
and
push
jns
xchg
xor
mov
jmp
adc
es
pop
mov
mov
or
mov
inc
aas
jl
(bad)
sub
add
imul
das
popf
sub
sbb
cmp
test
xor
dec
addr16
mov
ja
in
loopne
dec
push
pop
sub
and
pop
adc
and
push
js
lock
outs
push
ficomp
xchg
rol
test
and
cmp
movs
push
push
push
jecxz
push
mov
pop
add
xchg
outs
das
sub
movs
lds
fcomp
pop
push
repnz
rol
and
jno
movzx
fnsave
ins
lock
and
cmp
mov
sub
sbb
push
sub
xchg
cdq
xor
jmp
in
je
pop
jmp
ss
or
cli
aad
pop
sub
iret
inc
cmp
inc
xor
pop
mov
lea
pushf
xchg
sub
(bad)
icebp
fimul
jmp
retf
dec
pop
cld
mov
sbb
cmp
js
dec
lods
pop
gs
pop
push
int3
retf
ds
push
popa
scas
mov
jmp
fbld
(bad)
aas
test
xchg
or
mov
ficomp
fwait
aas
sbb
pop
cdq
test
xor
jl
in
lea
push
lock
call
mov
jmp
inc
xor
adc
mov
shl
push
es
sbb
retf
es
scas
mov
jg
sbb
dec
sti
lea
popa
sbb
lea
mov
call
pop
mov
nop
loop
inc
adc
xor
jnp
push
lods
or
popa
xlat
cmp
rol
jnp
cmps
sub
ret
(bad)
fisttp
outs
inc
xchg
pushf
mov
jbe
and
sbb
jle
xchg
pop
mov
addr16
lea
cmp
retf
sbb
sbb
pop
ss
fldcw
int
adc
repz
fwait
inc
or
call
and
mov
xor
push
sti
cmp
imul
cmp
popf
mov
xor
jle
iret
jb
lock
repnz
push
cmp
ja
out
(bad)
push
mov
cmps
add
rcl
push
nop
jg
add
out
dec
and
shl
rcl
xchg
or
jb
cmp
pop
mov
aaa
out
dec
mov
data16
sub
cmps
xor
scas
sar
sbb
popf
push
int
loopne
push
pop
adc
jge
nop
(bad)
mov
xor
push
jb
adc
inc
push
mov
out
jg
xchg
and
hlt
jne
adc
mov
cmc
pop
xchg
cwde
in
push
hlt
pop
push
xchg
push
jae
cli
pop
and
jbe
sbb
test
(bad)
scas
out
ins
clc
mov
frstor
or
test
dec
sbb
pushf
aaa
jae
test
(bad)
stos
pop
lock
cmc
cld
fdivr
mov
(bad)
mov
sbb
sahf
shl
mov
mov
push
push
push
jle
sbb
mov
and
fisubr
xchg
(bad)
jecxz
mov
enter
std
bnd
and
dec
arpl
test
jge
mov
inc
sub
ins
pusha
rcl
movd
cli
jl
cmp
push
cli
fs
mov
mov
test
inc
test
or
shl
rcr
lea
out
sbb
ins
(bad)
xchg
cmp
mov
hlt
jmp
add
stc
repnz
sub
add
frstor
stos
dec
call
in
in
ret
adc
and
out
mov
mov
pop
popa
xchg
xor
call
xor
(bad)
js
push
ja
dec
jbe
mov
inc
mov
jmp
out
ror
xor
xor
mov
push
push
mov
pop
pop
push
or
ins
inc
idiv
cmp
add
sub
neg
or
(bad)
or
jno
cmp
in
jg
rcr
add
icebp
xor
in
pop
push
fisub
pop
in
jnp
lds
cs
ffree
mov
test
retf
stc
xor
mov
mov
xchg
in
add
push
jmp
jns
fs
xor
test
pop
pcmpeqb
jne
jns
fidivr
stos
fmul
stc
int3
clc
jo
fwait
mov
shr
push
inc
dec
addr16
test
rol
jns
test
out
add
lea
ds
xchg
sahf
or
int
fisttp
mov
sbb
xchg
xchg
pop
mov
stc
popf
add
push
and
nop
es
jg
lds
test
mov
mov
bound
jmp
iret
retf
or
cmp
or
popf
adc
in
mov
(bad)
sub
sbb
into
jae
test
cli
repnz
mov
cmp
inc
jecxz
aam
ss
(bad)
fild
push
cmp
in
fwait
leave
push
lock
sti
stc
lods
mov
ins
or
push
or
cmp
add
and
jp
mov
sub
nop
or
int
mov
push
dec
xchg
scas
fld
into
idiv
push
sti
mov
mov
mov
xor
in
push
cwde
int3
in
out
sti
std
cmp
dec
sbb
repnz
mov
retf
push
sub
test
jecxz
call
add
add
sbb
fcmovnb
xchg
cmc
inc
inc
xchg
retf
outs
add
into
and
inc
mov
inc
push
add
mov
adc
shr
test
cmc
sub
imul
retf
gs
sbb
cmp
jo
xlat
dec
popf
repnz
cdq
aas
prefetch
or
mov
jp
push
(bad)
sub
test
stos
call
sbb
lock
call
retf
ds
call
pop
loop
jbe
sbb
aas
or
push
sub
jl
dec
inc
sbb
ja
call
or
arpl
jp
add
and
aad
push
inc
retf
cmp
(bad)
cld
int
out
in
in
and
arpl
sub
cli
sbb
adc
push
pop
outs
data16
or
dec
mov
je
test
jmp
push
mov
dec
xor
and
mov
sbb
sub
pop
stc
test
push
lahf
jl
push
pop
xchg
sub
pushf
add
sbb
xor
es
push
adc
push
cmps
lahf
sub
ja
loopne
pop
stos
je
xor
lds
push
fs
jmp
add
retf
(bad)
loopne
stos
cs
fwait
shl
sub
adc
add
imul
jle
in
call
push
inc
push
push
jb
rcl
xor
gs
lods
imul
and
lock
mov
movs
inc
les
sahf
fsub
call
push
dec
shl
xchg
shl
sub
jg
arpl
mov
jne
iret
dec
pop
adc
dec
ss
jnp
xor
(bad)
mov
lahf
pop
pop
dec
bound
inc
add
inc
arpl
cmps
cmp
pop
rcr
jmp
clc
rcl
mov
nop
adc
dec
into
xor
adc
loop
sub
ds
mov
js
lods
(bad)
and
loopne
test
or
ja
out
mov
sub
test
clc
push
les
or
sbb
(bad)
pop
dec
cmp
mov
dec
sbb
stc
sbb
push
xor
mov
std
icebp
mov
or
out
and
xchg
stos
mov
push
int3
mov
retw
sbb
std
inc
shl
xchg
pop
mov
inc
clc
movs
adc
cmp
and
jnp
jno
mov
call
es
sbb
shl
xchg
sub
enter
cmp
enter
inc
dec
mov
cli
and
lods
call
mov
xchg
inc
sub
cdq
fst
cmc
not
xor
sub
cmps
inc
cs
jmp
adc
or
mov
xchg
pop
fxtract
xrelease
push
pop
pop
xacquire
push
retf
popa
pop
and
and
cli
inc
jbe
fldenv
lods
and
or
xor
cs
mov
sub
inc
dec
adc
data16
(bad)
icebp
scas
fild
or
jge
(bad)
mov
call
sbb
rcr
retf
popa
push
lds
repz
enter
push
jnp
in
arpl
sbb
cmp
mov
shl
inc
mov
out
xchg
dec
sub
xor
lods
sub
jmp
bound
daa
or
cmps
je
mov
sbb
lds
mov
out
mov
xor
test
mov
in
loopne
dec
pop
or
into
enter
inc
pop
imul
mov
push
dec
cmp
and
repz
sub
shl
shl
movs
out
xlat
jae
(bad)
mov
movs
push
in
mov
mov
push
cmp
cmp
jne
mov
jb
adc
jl
cli
mul
mov
call
sub
mov
lods
(bad)
icebp
ss
xlat
dec
gs
shr
popa
mov
or
lock
sub
push
push
ror
fs
pop
ffree
adc
lods
jne
cli
push
pop
xor
mov
daa
ja
xchg
xchg
and
cmps
mov
mov
out
repnz
out
retf
cwde
test
int
inc
add
and
sti
mov
fs
push
repnz
push
mov
mov
lods
inc
inc
outs
mov
(bad)
cmp
cwde
jl
jo
mov
outs
stos
fadd
mov
inc
adc
aaa
add
mov
push
outs
arpl
test
push
lahf
out
inc
push
add
imul
hlt
(bad)
jo
popf
ficom
stos
addr16
lds
xor
mov
icebp
rol
shr
adc
or
(bad)
sub
repz
sub
or
xchg
and
call
cmc
ds
enter
test
dec
cmp
stos
inc
pop
cmp
mov
rcl
push
mov
xchg
ja
test
push
xchg
lea
or
inc
out
(bad)
gs
adc
push
movs
dec
adc
mov
lds
sub
ret
inc
cmp
mov
loope
jne
(bad)
in
push
push
jmp
jbe
inc
mov
cmp
cwde
and
jl
inc
mov
shl
inc
ret
stos
push
inc
xor
xor
mov
jno
and
js
int
bts
cdq
sub
or
rcr
daa
cmp
(bad)
out
lahf
cmp
mov
test
push
adc
mov
call
ret
jle
and
dec
pop
sbb
push
js
xlat
sahf
mov
scas
or
jl
mov
sub
dec
mov
test
cmp
mov
xchg
outs
jl
inc
or
adc
pop
outs
and
sbb
xchg
push
pushf
jge
nop
repnz
xchg
ss
jl
adc
mov
xchg
int
ja
into
mov
dec
mov
pop
test
mov
sub
sbb
and
mov
(bad)
arpl
push
inc
cmp
jp
xor
mov
aam
sub
call
jae
retf
aas
ins
(bad)
push
(bad)
mov
cmp
push
push
mov
(bad)
dec
out
mov
mov
xor
pop
pop
test
(bad)
loope
pop
(bad)
mov
mov
data16
test
mov
jge
cmp
cmp
sub
gs
mov
jae
retf
(bad)
jb
scas
adc
mov
test
and
cmp
jne
cli
sbb
outs
lods
lea
adc
inc
push
and
push
pop
aaa
(bad)
mov
or
pop
or
std
mov
cmp
pop
mov
into
fldcw
dec
push
cmc
xor
int
adc
sub
enter
inc
test
push
repz
ficom
pop
push
xor
jge
xor
jg
xchg
pop
push
xchg
in
ret
xor
jl
or
xor
inc
arpl
pushf
push
sub
popf
sbb
neg
push
sahf
repnz
mov
aas
push
mov
and
sar
pushf
popf
(bad)
mov
sbb
pop
jle
xchg
call
pusha
rcl
out
mov
cmp
push
add
ror
jbe
mov
les
add
in
push
sahf
shl
mov
fld
lods
add
lea
inc
jle
and
jecxz
je
int
cbw
popf
adc
xchg
mov
inc
or
mov
sbb
push
add
mov
mov
daa
fnstcw
mov
push
add
les
into
add
pop
dec
push
and
dec
mov
(bad)
imul
xchg
fs
add
mov
mov
inc
xchg
inc
mov
jae
mov
and
mov
outs
dec
loope
mov
fist
pop
mov
pop
gs
ja
and
arpl
sub
xor
aam
js
jo
sub
repz
fiadd
mov
mov
fidivr
jae
mov
out
sub
int3
xchg
fs
lock
sub
and
dec
enter
stos
es
sahf
push
pushf
mov
mov
and
sbb
push
push
cmp
sbb
cld
push
pop
pop
aad
pop
lods
test
arpl
push
jae
xor
call
pop
aas
add
sbb
fucom
or
mov
test
xor
sub
sub
push
jns
mov
or
xchg
or
loop
mov
stos
mov
cmp
and
cmc
sbb
xor
inc
adc
add
mov
push
jecxz
lahf
shl
stos
enter
ss
pushf
push
jno
loop
or
sti
sub
fwait
int
scas
lods
sahf
or
stc
popf
rol
xchg
add
mov
or
das
repz
push
push
cld
inc
xlat
std
(bad)
rep
push
fmul
jmp
repnz
push
mov
mov
inc
xchg
fidiv
je
jl
stc
les
push
jle
and
push
cs
and
das
cdq
and
les
cmc
shl
and
outs
adc
(bad)
cli
push
jno
mov
ins
stos
push
sahf
xor
mov
cmp
mov
int
mov
fidivr
xor
mov
cli
js
xor
dec
xor
and
sbb
(bad)
mov
rcr
pop
mov
icebp
or
push
mov
call
cli
in
call
scas
fsubrp
sub
mov
jb
xchg
mov
popw
je
xchg
and
js
ja
xchg
cmp
xchg
jl
sub
cmp
mov
das
loop
enter
push
jns
jl
mov
or
int3
inc
fnsave
test
sti
mov
jnp
outs
(bad)
or
adc
adc
fsub
inc
rol
xor
mov
and
push
lock
sbb
loop
push
inc
jb
or
fsubr
mov
and
fs
bound
retf
enter
and
retf
imul
lock
mov
arpl
cmp
ins
xchg
rcl
xchg
pop
sub
pop
inc
int
daa
aad
or
jmp
loope
in
cmps
or
jbe
mov
lahf
loope
inc
mov
in
dec
stos
dec
mov
xchg
mov
leave
pop
inc
imul
repz
fwait
stos
xchg
xchg
arpl
cmp
and
stc
(bad)
pop
add
xlat
(bad)
or
cmp
mov
push
test
jnp
or
pop
mov
cdq
sbb
push
jecxz
xchg
cmp
fwait
js
adc
jb
loop
inc
mov
ds
mov
aaa
aas
adc
add
push
jns
std
test
mov
lods
lea
scas
(bad)
jae
call
mov
ja
mov
mov
lahf
xchg
xchg
cmp
pop
push
mov
or
mov
adc
inc
nop
int
mov
retf
jbe
ffreep
inc
in
ins
inc
in
xor
jmp
mov
out
int3
(bad)
and
push
mov
push
lahf
mov
mov
iret
cmp
int
push
mov
fild
mov
xchg
lock
retf
(bad)
lock
call
inc
loopne
not
outs
ror
retf
push
add
(bad)
jno
and
sti
addr16
add
add
fwait
sbb
sub
jb
neg
push
and
(bad)
bnd
xchg
fsub
(bad)
fcom
ret
and
popa
mov
cld
xor
jnp
cmc
ja
ficomp
aad
push
and
jne
dec
test
ret
cmp
push
fwait
jbe
ror
mov
daa
pop
push
mov
jne
repnz
mov
(bad)
dec
xbegin
jo
mov
sub
call
int
retf
add
jnp
add
xor
fwait
jecxz
mov
cmp
xchg
add
cmps
xchg
mov
mov
push
ja
pop
rol
pusha
idiv
dec
push
mov
pop
push
mov
dec
push
idiv
dec
inc
idiv
dec
pop
jecxz
push
inc
out
inc
dec
in
and
dec
shr
lods
inc
idiv
imul
test
pop
ds
imul
xchg
or
fsub
jge
in
jp
add
or
mov
pop
sbb
imul
cs
cmp
cdq
scas
mov
push
daa
sbb
sbb
inc
push
xor
ss
outs
sahf
repnz
push
inc
inc
sub
bound
xchg
imul
jne
sbb
mov
jecxz
inc
repz
loope
js
push
mov
push
jle
sub
cwde
ins
mov
call
cmp
xor
js
jmp
inc
jecxz
es
in
xchg
cld
mov
ret
in
mov
cmp
inc
ds
call
jno
push
mov
and
jle
ss
push
pop
mov
in
mov
gs
sti
stc
mov
sub
int3
push
mov
(bad)
adc
mov
pop
inc
xor
aas
mov
jge
lock
xor
cmp
cmp
dec
dec
int
pushf
mov
push
cmps
or
int3
enter
push
ss
jno
mov
cmp
sub
mov
loope
stc
shl
outs
sahf
loope
aad
out
mov
pop
imul
ins
cli
stc
(bad)
into
mov
cmc
int
xor
add
sub
or
and
stos
retf
sar
pusha
lock
sub
jo
hlt
inc
aaa
out
mov
out
je
sbb
fs
push
call
add
aaa
jge
dec
fstp
loopne
cli
push
ss
(bad)
mov
add
lock
es
jne
je
sub
jb
mov
imul
and
mov
dec
and
into
xchg
jbe
pusha
icebp
outs
mov
movs
cmp
aam
mov
jl
scas
inc
cmc
sub
cmp
scas
(bad)
xchg
pop
dec
out
gs
aam
pop
push
dec
push
and
iret
lahf
push
mov
movs
aas
outs
and
sub
je
cld
dec
add
push
mov
mov
mov
cmc
js
push
xor
sbb
lahf
inc
push
out
add
(bad)
and
imul
pop
aaa
lahf
shl
sbb
push
xchg
sub
mov
outs
xor
xchg
push
sub
mov
mov
nop
stos
cmp
pop
rol
cmps
sti
mov
xchg
scas
adc
mul
ins
or
sbb
stc
stc
push
jo
xor
lods
add
loopne
inc
inc
stos
xlat
mov
mov
aad
pop
pop
dec
adc
jl
lods
loop
loop
fiadd
iret
int3
icebp
inc
test
dec
mov
pop
sti
jbe
(bad)
mov
push
xchg
(bad)
sti
and
jbe
inc
in
mov
push
sbb
xor
loopne
inc
sub
add
js
imul
xor
xchg
je
inc
adc
pop
sbb
cmps
jl
jmp
aaa
push
pop
pop
mov
pop
jle
jno
inc
mov
inc
sub
outs
test
mov
ror
ja
mov
cmp
adc
jbe
dec
jg
lock
mov
cli
pop
repnz
mov
dec
add
adc
test
imul
(bad)
and
cli
pusha
into
cwde
mov
dec
pop
xor
lahf
popf
popa
outs
mov
cmp
pop
inc
mov
mov
enter
repnz
xchg
ror
and
and
lahf
pop
cmp
int3
pop
faddp
pop
mov
repnz
push
icebp
xor
jmp
retf
pushf
mov
xchg
out
aaa
aam
and
xchg
ret
retf
push
cmp
or
out
adc
sbb
call
jmp
jl
dec
adc
push
adc
sub
cmp
push
and
xchg
push
ror
out
mov
(bad)
fistp
mov
pop
cmp
int
push
sbb
sub
xor
jge
in
cli
icebp
inc
test
inc
mov
sbb
inc
lock
sbb
inc
mov
jge
or
mov
dec
adc
rcl
inc
data16
lock
inc
push
mov
stos
dec
push
mov
jle
data16
retf
mov
mov
cmc
cs
adc
cmps
sub
int3
inc
cmp
ins
pop
aam
int
sub
jle
out
mov
and
cmp
or
shr
xchg
cmp
sbb
das
xor
fnsave
pop
adc
ret
loope
cmp
push
fisub
rcl
jnp
add
mov
push
jae
adc
dec
adc
and
mov
aad
daa
push
mov
lods
and
sar
xchg
outs
fcmovnu
mov
lahf
dec
sti
sub
sub
dec
call
sub
adc
xchg
mov
push
jg
pop
cmps
icebp
fistp
push
clc
cs
fbld
fistp
pushf
xchg
shl
out
lods
cmps
push
scas
ret
ja
lahf
into
pop
push
cmp
mov
pop
mov
jecxz
(bad)
out
je
pop
push
fbstp
dec
inc
push
pop
jge
repz
push
mov
push
xor
aaa
sbb
and
or
inc
or
cmps
imul
out
and
lds
xchg
icebp
xor
sahf
or
sub
in
sbb
mov
push
mov
mov
adc
scas
int3
add
and
cli
jo
pop
jbe
xchg
in
jns
mov
jb
xor
sete
popf
mov
out
(bad)
hlt
aad
jg
and
dec
pop
xchg
ins
xor
outs
jecxz
movs
enter
jge
call
mov
ret
jae
nop
mov
call
lahf
inc
cmps
addr16
sar
rcl
jmp
or
jo
lods
push
psadbw
inc
mov
pop
dec
mov
add
fwait
cdq
lahf
out
push
stos
jbe
in
clc
add
pop
es
push
sub
fwait
sbb
add
xchg
fcomp
add
add
xchg
stc
xchg
fld
ins
gs
rcl
das
iret
push
out
in
fdivr
add
jle
xchg
sbb
push
mov
inc
ins
adc
repnz
xchg
je
cmp
pop
test
mov
and
xchg
mov
sar
and
mov
pop
and
in
sub
sbb
pop
ret
(bad)
out
cmc
in
xor
xchg
js
mov
sbb
out
adc
sub
mov
jl
mov
(bad)
out
cdq
dec
add
rcl
test
(bad)
and
inc
mov
pop
pop
push
xor
push
lahf
and
lahf
push
xor
xlat
test
jns
mov
sub
es
sbb
xor
push
add
loop
or
repz
push
call
sbb
xor
jl
push
inc
popf
adc
push
scas
add
pop
leave
stos
imul
cmp
and
aam
ret
ret
jne
(bad)
mov
mov
lods
cmc
outs
arpl
jmp
jbe
cdq
stos
mov
adc
cmp
jle
push
inc
xchg
(bad)
das
dec
mov
sub
fbld
int3
mov
sahf
push
pop
jns
mov
or
shl
cdq
dec
fstp
and
pop
pop
setne
jp
lods
cmps
arpl
cld
mov
jmp
adc
neg
add
lea
fisub
and
loope
sbb
lahf
xor
nop
push
(bad)
sub
jo
stc
jns
imul
ja
and
jmp
leave
pop
pop
and
mov
mov
ja
adc
(bad)
fs
inc
loopne
jg
jmp
test
outs
hlt
fistp
push
js
pop
jbe
or
popf
jle
sbb
cs
sub
ja
cmp
pusha
aad
cld
and
push
adc
inc
repz
das
out
push
and
and
aam
xor
pop
dec
inc
in
cmp
mov
mov
push
test
mov
fwait
add
ss
xchg
mov
xchg
mov
mov
push
pop
mov
xchg
outs
push
dec
jne
adc
scas
push
sbb
or
xchg
gs
stos
push
call
or
xor
lods
ss
std
jne
xor
and
jns
jg
stc
lahf
aam
ins
xor
out
pop
or
pusha
or
cmp
popa
mov
dec
cmps
rcr
mov
mov
jnp
lods
loop
loopne
enter
sti
shr
jnp
dec
add
stos
mov
jge
in
adc
arpl
stos
pop
push
pop
(bad)
mov
aaa
repz
mov
jp
adc
cmp
pop
and
sub
rcl
ret
sti
aam
lea
push
ins
aam
shl
mov
ss
out
fsubr
xchg
lods
daa
(bad)
shr
cmps
jp
mov
inc
addr16
jl
movs
imul
mov
es
cmc
mov
cmp
loope
inc
sbb
or
aaa
push
xchg
ds
mov
aas
scas
movs
jcxz
mov
mov
inc
into
fstp
jmp
leavew
sbb
mov
xlat
mov
sbb
es
push
ret
mov
mov
sar
ja
xchg
inc
je
jl
add
xor
push
xor
pop
pop
and
sub
mov
jl
dec
in
dec
cmps
ins
fadd
enter
retf
loop
(bad)
xchg
test
push
(bad)
ins
shr
pusha
test
push
imul
jnp
(bad)
jmp
repz
push
mov
outs
sub
push
lfs
push
or
push
push
pop
cs
jmp
aam
loopne
and
push
cmps
and
fs
sbb
mov
cdq
ret
sbb
neg
gs
push
push
out
movs
std
rcl
and
mov
mov
mov
stos
(bad)
xchg
fist
das
xlat
pop
ja
push
out
fimul
pop
dec
outs
cdq
pop
inc
ret
fstp
push
aam
dec
test
mov
mov
mov
fnstsw
add
movlps
jg
je
dec
lahf
(bad)
fld
ret
jge
mov
sbb
push
out
pop
push
(bad)
sub
imul
pop
inc
in
pop
inc
jecxz
inc
dec
loope
inc
dec
jmp
push
push
stc
push
dec
rol
or
out
ds
xchg
mov
jnp
sbb
outs
je
(bad)
loopne
lahf
jmp
adc
pop
sbb
dec
push
xchg
sub
dec
cli
cmp
in
xchg
out
nop
pop
cmc
les
xor
xor
pop
in
mov
dec
jbe
mov
sbb
cmp
call
jecxz
inc
fld1
mov
sub
inc
adc
mov
xor
add
pop
mov
xor
and
or
add
in
ds
int
or
cli
clc
jns
lahf
call
test
jle
add
or
out
test
stc
jmp
imul
sub
lahf
push
outs
fmul
lahf
xor
mov
aas
loop
adc
jg
mov
fst
xor
mov
add
scas
dec
xchg
pop
jb
sti
jg
jns
mov
out
cdq
cmp
mov
call
sub
xchg
xor
xchg
ja
jns
gs
dec
or
push
push
call
mov
pop
sahf
ss
int3
or
adc
pop
fmul
fimul
pop
mov
in
dec
fcomp
jno
pop
adc
test
xchg
sbb
pop
mov
call
jl
or
inc
jno
sahf
jmp
cmp
jb
jbe
dec
push
ficom
dec
xor
ins
rcr
push
fdivr
sbb
leave
cmp
pushf
mov
pop
pop
out
das
sub
stos
scas
jmp
xchg
cmps
ins
cli
cwde
push
pop
repz
cmps
push
out
(bad)
int3
add
sbb
int3
jmp
std
int
cmps
mov
nop
arpl
mov
enter
mov
enter
adc
ss
js
das
aam
adc
pop
mov
jmp
mov
sar
jo
jae
and
dec
adc
sbb
out
jge
sbb
mul
loopne
mov
arpl
cwde
scas
div
mov
pop
ins
shl
repz
push
out
call
add
cmp
push
outs
adc
cli
test
mov
fcmovnu
jle
xor
int
loope
popa
(bad)
jmp
mov
repnz
call
and
(bad)
fs
or
push
cmps
aam
sbb
pop
and
ret
lahf
mov
mov
add
ins
daa
jae
in
int3
xor
imul
jne
clc
repz
adc
mov
mov
push
push
leave
pop
test
ss
idiv
push
mov
outs
stos
xor
pop
int3
jl
xor
xor
jl
into
push
inc
mov
jle
movs
out
inc
pop
adc
imul
js
clc
add
shr
clc
inc
into
ret
xor
cdq
pop
inc
les
inc
add
test
inc
dec
and
xchg
mov
push
out
xor
aas
jg
cmp
add
mov
or
inc
mul
push
cmp
sbb
adc
or
sbb
fs
adc
stos
push
jb
mov
pop
mov
add
add
and
jbe
das
and
ret
rcr
popa
jl
inc
dec
mov
aad
pop
sbb
in
aas
and
into
push
xchg
jo
clc
pusha
jl
sub
mov
xchg
jmp
sbb
out
cli
or
retf
js
inc
retf
in
in
out
lea
push
rol
pop
lock
ins
jo
cmp
(bad)
sbb
xchg
sub
idiv
dec
inc
idiv
pop
push
jecxz
inc
dec
jmp
xor
lock
lods
push
idiv
or
sbb
mov
dec
sub
out
stos
lahf
lds
loop
(bad)
into
iret
out
fdivr
sbb
jmp
push
add
inc
jnp
adc
cmp
mov
and
pop
push
mov
add
stos
or
(bad)
es
dec
sbb
scas
pushf
push
inc
mov
aam
push
mov
iret
xchg
fadd
xchg
arpl
and
push
movs
pop
pop
movs
inc
sub
xchg
sbb
js
cdq
push
std
test
mov
pop
call
inc
cs
sbb
or
das
rcr
sti
loop
xchg
aad
jae
pushf
jne
call
clc
dec
jne
ror
pop
fcompp
lea
jnp
jl
jns
xor
loop
nop
add
(bad)
or
out
arpl
cmp
scas
test
mov
add
cs
cwde
stos
mov
sar
retf
or
pop
add
pop
ret
pop
(bad)
cdq
xchg
pop
add
dec
mov
xor
add
mov
(bad)
jle
cmp
iret
push
jecxz
xor
leave
not
jle
(bad)
push
inc
inc
push
push
imul
push
fsub
jns
xor
outs
add
cmp
sti
aaa
add
sahf
iret
xor
fmulp
inc
in
jo
cs
sub
inc
push
sub
fisttp
aas
mov
dec
push
dec
sub
jg
retf
arpl
call
xor
sbb
xor
rol
push
adc
inc
dec
popa
xchg
loop
xchg
in
mov
imul
push
cs
mov
mov
clc
sub
dec
xchg
or
dec
and
out
gs
int3
clc
inc
jae
push
gs
(bad)
xor
sbb
mov
xor
and
shr
cmp
pop
inc
jmp
adc
mov
retf
xor
scas
inc
mov
mov
push
pop
jae
outs
out
in
mov
hlt
stos
mov
xlat
pop
jbe
clc
aaa
xor
or
pop
das
xchg
shr
arpl
std
push
je
mov
imul
sub
dec
pop
jae
cmc
mov
mov
sti
dec
stc
fild
add
push
pop
stos
xchg
or
stos
pop
xchg
repnz
stos
push
push
sub
dec
test
xor
popa
inc
xor
nop
fiadd
aad
sbb
(bad)
push
mov
pop
push
push
inc
cmp
shr
xchg
xchg
bound
pop
std
jae
push
mov
or
push
jno
repz
das
sub
sbb
cwde
mov
adc
lods
or
inc
adc
(bad)
push
push
imul
ss
dec
rol
mov
adc
ins
jle
lock
jge
xchg
test
push
add
add
jb
add
cwde
inc
iret
mov
inc
lock
or
sbb
xchg
scas
jmp
icebp
iret
out
in
scas
dec
stc
or
setb
std
push
call
inc
inc
pusha
mov
aas
cmp
iret
clc
mov
fisub
es
sbb
movs
sbb
push
mov
xchg
xchg
pushf
xchg
dec
inc
xor
cmp
push
ins
movs
out
sub
(bad)
fnstenv
adc
sub
movs
xor
call
lock
sub
ret
into
(bad)
xor
pop
push
or
fdiv
call
call
fdiv
aad
enter
int3
iret
into
inc
std
jne
jle
imul
ret
fisub
ficomp
popf
data16
cmp
hlt
retf
repz
stos
mov
shl
clc
scas
dec
bound
mov
dec
rcr
cs
mov
dec
mov
aam
stos
cmp
mov
mov
out
jo
push
stc
aaa
sub
jae
mov
icebp
add
lods
popf
push
and
cmp
xchg
mov
aad
sub
pop
fbld
sub
scas
jle
cwde
stos
jbe
out
mov
daa
push
rcr
shl
(bad)
bound
or
mov
(bad)
daa
cld
or
loop
stc
retf
outs
retf
pop
out
sub
inc
inc
shr
and
or
mov
xchg
xchg
mov
push
pop
cmp
sub
(bad)
xchg
inc
mov
test
(bad)
adc
pop
pop
cwde
scas
fwait
clc
add
repnz
mov
xor
jb
xchg
mov
ins
movs
frstor
mov
inc
popa
mov
hlt
fstp
pop
push
fsqrt
sbb
addr16
arpl
out
cmps
scas
pop
rcl
pop
inc
cmp
ins
inc
imul
jge
out
ins
inc
test
inc
mov
dec
inc
imul
dec
inc
in
pop
inc
loope
push
push
out
xor
jmp
push
pop
rol
mov
or
jnp
push
dec
out
cmp
ins
jecxz
imul
push
sbb
fisubr
js
dec
ret
imul
inc
arpl
pop
bnd
clc
movs
das
stos
push
cld
rcr
jae
js
shl
mov
sub
ins
push
cmp
inc
or
dec
and
dec
push
and
inc
pop
inc
push
iret
mov
add
pop
mul
cmp
push
inc
popf
mov
inc
mov
jmp
fs
fcom
pusha
ss
sbb
out
pop
jae
xchg
imul
mov
push
push
data16
or
push
js
addr16
out
jns
push
or
pop
repnz
xor
aas
outs
inc
cmp
stos
push
jecxz
mov
dec
dec
mov
fs
sub
jbe
pop
scas
xor
mov
hlt
mov
lock
push
or
dec
sbb
mov
lahf
sti
sub
jne
pushf
push
push
push
or
and
mov
pop
xchg
(bad)
push
call
enter
sbb
bound
pop
fist
in
xor
int
pop
sub
and
test
into
test
leave
call
dec
dec
inc
(bad)
xchg
cmps
fisttp
pop
retf
mov
lock
or
cmc
lea
and
mov
jg
dec
mov
mov
test
iret
mov
inc
xchg
shl
mov
xchg
or
mov
test
xor
xchg
xchg
sbb
out
das
jo
sub
test
(bad)
aam
inc
jo
jg
mov
jae
sub
and
push
ins
pushfw
sub
inc
add
and
pop
inc
push
sub
adc
xchg
loope
pop
add
bound
xchg
pop
and
nop
arpl
mov
push
dec
inc
pop
(bad)
jo
cmp
outs
repz
sub
jns
xchg
ret
pop
retf
sub
inc
(bad)
cmp
pop
push
out
xor
aaa
(bad)
jmp
mov
push
xchg
and
push
inc
pop
pushf
hlt
leave
sbb
xchg
les
hlt
pop
das
rol
and
lods
idiv
into
lods
mov
jp
mov
add
pop
xchg
sub
sub
sbb
jge
iret
pop
mov
scas
je
ins
dec
pop
fisubr
jo
cwde
xchg
hlt
xor
mov
mov
jp
(bad)
int3
sahf
dec
or
lds
push
mov
inc
stc
cmp
out
adc
sbb
mov
cmp
jo
je
xchg
scas
fstp
adc
movs
add
lock
xchg
adc
imul
lds
xchg
ds
mov
inc
fstp
mov
neg
add
pop
test
stos
ret
daa
dec
adc
xchg
xor
aas
or
adc
jns
out
dec
repz
(bad)
sub
mov
mov
adc
enter
or
push
xchg
test
pusha
addr16
adc
imul
xchg
ror
sti
add
mov
dec
aaa
adc
int3
in
jns
loope
ds
daa
adc
aam
stos
outs
pop
pop
inc
dec
inc
fbstp
adc
iret
ja
push
mov
dec
ja
jns
maskmovq
mul
xchg
cvtpi2ps
ror
scas
test
test
(bad)
pop
out
dec
mov
fimul
ins
mov
mov
mov
fiadd
pop
jmp
add
out
in
repz
(bad)
cmp
les
xchg
cmp
cs
pop
int
fsub
loop
mov
loop
mov
shl
mov
push
test
cmps
cwde
xlat
dec
leave
xor
adc
pop
popf
clc
sub
adc
repz
push
mov
inc
js
imul
cli
outs
or
inc
push
sbb
scas
rcl
test
or
mov
adc
stos
jle
xor
cs
pusha
or
mov
jae
into
cmc
inc
push
gs
push
dec
jmp
test
adc
jnp
fsubr
dec
or
aaa
in
cmp
aaa
cld
inc
pop
addr16
sub
out
(bad)
sbb
mov
je
clc
sub
pusha
push
imul
sbb
mov
not
mov
sbb
xor
mov
retf
pop
inc
imul
repnz
sti
ret
push
xor
mov
(bad)
push
mov
test
xchg
dec
movs
xchg
push
arpl
mul
inc
jmp
dec
mov
cmp
cmps
and
pop
daa
xchg
pop
sub
or
test
sbb
ds
mov
xor
dec
and
dec
sbb
pusha
loopne
pop
cli
mov
pusha
pop
aam
dec
popf
jns
pop
mov
adc
fadd
ficomp
es
jnp
cwde
inc
adc
cmps
imul
les
mov
cmp
push
add
arpl
jns
frstor
push
sub
test
and
jge
rcl
jb
pop
idiv
xor
shr
xor
fstp
jnp
mov
cmp
pop
pop
call
push
mov
sbb
aaa
ret
pop
jns
xchg
fist
push
pop
xor
pop
cmps
fdiv
bound
dec
or
pop
loope
mov
or
and
cmp
ficomp
retf
xlat
mov
loope
or
push
jne
stos
pop
fdivr
mov
inc
dec
mov
mov
outs
popa
xlat
lahf
call
mov
and
ds
dec
add
or
xchg
(bad)
fs
push
push
mov
mov
add
pop
jmp
lds
icebp
xchg
push
cmps
jp
xchg
or
lahf
dec
out
jl
addr16
ins
mov
das
call
push
es
or
sar
pop
adc
out
mov
mov
sub
xchg
and
adc
cli
mov
loop
sub
clc
cmp
stos
in
aas
out
(bad)
mov
data16
cli
mov
gs
push
push
jecxz
cmp
pop
fistp
pop
mov
int3
mov
leave
jg
mov
sub
jg
int
and
pusha
scas
mov
push
repz
test
xchg
fdiv
movs
aad
mov
adc
repnz
xor
pop
jae
int3
movs
jle
xlat
mov
outs
(bad)
push
cs
push
mov
loop
std
mov
cmp
sub
sbb
dec
add
sub
int
call
cmc
stos
lods
ret
push
push
jb
pop
add
pop
jo
and
sbb
inc
in
or
and
add
xor
(bad)
sbb
sbb
jmp
cmp
adc
cld
(bad)
fstp
mov
int3
sub
shl
inc
arpl
mov
jmp
adc
pop
(bad)
out
cmp
(bad)
movs
pop
stos
clc
jne
dec
cmps
lods
retf
mov
inc
nop
movs
push
popa
pop
fwait
hlt
call
mov
ds
pusha
stos
inc
mov
cmp
adc
push
and
das
bound
mov
(bad)
jbe
out
ja
ins
or
out
or
cmp
ss
arpl
dec
pop
frstor
sbb
stos
shl
xor
in
push
xchg
jmp
mov
daa
xor
mov
xor
js
xchg
mov
xor
dec
sub
add
pop
popa
or
(bad)
sti
push
fdivrp
cmc
or
call
or
int3
hlt
push
ret
(bad)
push
cli
cmp
mov
fist
sub
push
not
xchg
mov
popf
add
mov
addr16
rcl
xor
retf
jl
cmc
test
dec
ja
push
fidiv
jl
push
bswap
adc
adc
pop
or
neg
pop
mov
test
ret
inc
daa
mov
je
loope
dec
retf
dec
out
jbe
xchg
or
lahf
sbb
popf
sbb
sub
imul
aad
imul
in
jge
or
mov
adc
mov
aaa
ins
add
adc
mov
mov
push
sub
xor
fiadd
xlat
cmp
in
mov
dec
pinsrw
xor
xor
stos
and
xchg
push
push
in
pop
cdq
sbb
retf
jo
xchg
inc
dec
pop
and
jne
push
pop
movs
repz
xchg
mov
mov
int3
not
iret
(bad)
adc
adc
sub
or
es
mov
fadd
test
push
mul
mov
jbe
xor
pop
fstp
inc
lods
push
add
lock
cmps
mov
jecxz
dec
mov
dec
out
adc
pushf
push
add
aam
lods
in
mov
dec
sub
fistp
and
dec
jmp
fistp
sbb
and
adc
std
sub
stc
mov
sbb
adc
aad
dec
or
sbb
ss
loop
inc
sbb
pop
jne
jmp
and
pusha
jo
retf
jo
aas
or
jge
and
pop
inc
pop
and
cmp
test
nop
outs
xchg
nop
das
nop
adc
movs
xlat
in
clc
call
(bad)
pop
imul
out
rcl
aad
in
jmp
dec
out
aad
push
pop
dec
daa
mov
mov
daa
xor
pop
dec
add
push
pop
xor
push
scas
xor
sahf
adc
stos
retf
movs
mov
pop
sbb
inc
cwde
inc
jmp
cmc
push
mov
xchg
pop
popa
inc
cmp
aaa
dec
sbb
jno
sub
test
in
jg
mov
push
or
(bad)
push
addr16
fstp
out
add
cmc
and
mov
push
and
stos
xchg
popf
js
mov
pop
retf
data16
mov
sub
adc
js
(bad)
add
push
retf
movs
in
adc
and
xor
push
fsubr
out
sbb
gs
(bad)
dec
cwde
data16
ds
(bad)
hlt
idiv
enter
(bad)
cmps
mov
arpl
lds
xor
cmp
aas
dec
out
jns
cmc
jo
mov
fidivr
mov
sti
(bad)
pop
and
cmps
leave
clc
aas
mov
je
dec
jae
push
arpl
imul
cli
sbb
test
jp
int3
or
adc
xor
stos
mov
push
push
and
out
mov
stos
mov
sub
jecxz
ja
icebp
pop
aad
pop
bound
test
aas
(bad)
push
push
loopne
arpl
cmp
pop
adc
scas
scas
sbb
data16
mov
scas
mov
leave
xor
cmp
(bad)
jl
repnz
nop
test
adc
into
repz
(bad)
pushf
xchg
in
jae
xor
cld
sbb
xlat
retf
bnd
push
sahf
jmp
(bad)
sub
inc
cld
pop
(bad)
sbb
retf
pop
(bad)
rcr
(bad)
push
sub
pop
clc
clc
imul
jno
sub
xchg
imul
xchg
jmp
mov
jecxz
iret
mov
retf
outs
mov
xchg
rcr
inc
mov
or
loop
pop
outs
out
ror
nop
jb
jne
xchg
and
pop
jbe
push
das
movs
jge
hlt
sbb
sbb
cmp
outs
xchg
outs
arpl
ss
cwde
js
xchg
pop
jle
out
bound
or
mov
iret
mov
int3
inc
jo
sbb
xchg
xor
stos
sbb
(bad)
stc
setg
repnz
or
push
jmp
cmp
mov
xor
jae
mov
out
pop
xor
int
adc
push
xchg
add
and
imul
fwait
jbe
mov
mov
push
cmps
fdiv
xor
in
jmp
inc
push
mov
movs
jb
adc
ins
pop
fmul
or
push
popf
sbb
jge
adc
loop
dec
jae
dec
pop
pop
cs
inc
sahf
imul
repz
stos
sbb
fwait
jb
fbstp
inc
mov
and
and
add
test
adc
cmp
mov
jp
dec
dec
sub
jno
inc
jae
pop
cmc
push
xlat
sub
dec
xlat
pop
jmp
push
out
stos
fcmovb
or
xchg
and
cmp
or
pop
ins
xor
es
and
xchg
mov
repnz
mov
and
stc
popf
pop
(bad)
fs
mov
mov
xchg
sub
fisttp
es
xor
sub
repnz
pop
push
mov
loop
push
pusha
not
jge
add
jge
test
adc
sbb
adc
jns
and
fst
mov
popf
loopne
jmp
pop
adc
cmp
push
sub
inc
sbb
cmps
sub
xchg
ins
adc
jns
inc
mov
in
and
xchg
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
lods
jg
push
in
push
and
cmp
out
adc
pop
inc
out
dec
inc
cmp
cmps
sub
out
cmp
push
idiv
shl
jge
pop
sub
out
pop
push
out
pop
push
imul
ins
inc
imul
or
pop
(bad)
pop
dec
push
xchg
ins
push
sub
xlat
sub
sub
jbe
adc
into
jecxz
call
mov
cmp
pop
les
fst
jmp
in
adc
mov
jmp
push
dec
cmp
push
xchg
sub
jb
inc
(bad)
loopne
rcl
mov
mov
cmc
jl
ja
sbb
retf
inc
adc
leave
addr16
clc
lods
loope
add
sub
jp
outs
push
pop
cmp
fmul
pop
fst
xchg
mov
jle
stc
jl
gs
mov
dec
cmp
(bad)
ins
mov
fdiv
nop
jge
clc
pushf
call
mov
sbb
in
sbb
fs
ins
nop
sub
je
idiv
stos
cwde
jecxz
sahf
and
les
or
sub
aaa
(bad)
inc
fild
in
aam
mov
push
pop
adc
cdq
fcmovu
test
stos
or
ins
adc
mov
(bad)
mov
pop
out
xor
sbb
aaa
clc
mov
mov
leave
mov
outs
ss
pop
movs
sbb
sar
stos
cmps
shr
xor
or
jle
stos
ins
sub
scas
adc
and
sbb
push
xor
push
lea
mov
dec
fadd
aas
cmp
test
pushf
cmc
mov
ds
sub
pop
inc
arpl
leave
sbb
inc
pusha
repnz
or
mov
mov
jmp
aam
push
or
pop
bound
fist
not
cmp
outs
mov
jns
and
es
arpl
dec
int3
cmp
inc
ret
imul
push
xor
fist
push
mov
mov
mov
clc
mov
in
scas
ret
in
fldcw
int
pop
adc
jo
jns
and
fsin
xchg
or
xchg
adc
push
and
dec
sbb
dec
push
ret
mov
push
mov
mov
pop
or
repz
or
imul
cmp
loope
sub
movs
mov
ja
aam
cli
mov
retf
leave
adc
pop
scas
add
mov
sbb
loopne
and
jo
xchg
xchg
scas
cmp
fild
fidivr
inc
sahf
and
repz
sub
loope
ja
adc
or
call
mov
add
mov
test
repnz
jnp
repz
jbe
sub
dec
shl
inc
inc
xchg
dec
jb
es
and
mov
(bad)
int3
(bad)
loopne
cmc
cli
xchg
mov
pop
imul
sub
push
lods
sub
clc
mov
iret
addr16
fst
cwde
jo
jno
xchg
cmp
pusha
(bad)
rcl
outs
sub
xor
mov
into
sub
ja
inc
push
and
push
cmp
mov
dec
shl
fisubr
inc
rol
jns
(bad)
cmp
scas
cld
stos
sahf
cmps
and
ins
lds
pop
mov
jno
sbb
push
les
sub
xor
mov
and
retf
int
popa
mov
adc
push
cmp
js
mov
std
test
je
or
dec
xlat
int
stos
sbb
ss
push
loope
add
stos
and
mov
sub
dec
pop
cmp
push
inc
jmp
adc
xchg
dec
mov
or
xchg
les
imul
and
outs
jb
clc
enter
imul
shr
pushf
cmp
push
inc
sti
sbb
inc
div
xchg
fst
imul
imul
push
aam
adc
jnp
test
pop
lods
sbb
push
stos
lods
pop
neg
push
mov
or
(bad)
or
mov
pop
pusha
out
or
inc
mov
jl
xchg
push
pop
and
push
shr
dec
add
repnz
out
mov
ficom
call
(bad)
bound
lahf
pop
ret
(bad)
sbb
mov
mov
or
mov
or
pop
lea
sahf
mov
xor
inc
add
fstp
fistp
call
dec
test
cmp
sub
dec
mov
cdq
stc
xchg
out
std
add
in
mov
add
push
clc
es
aam
loopne
test
or
sub
loope
dec
xor
(bad)
mov
fucomp
in
movs
mov
test
dec
div
cs
cmps
cli
xchg
push
aaa
mov
out
sar
pop
push
dec
add
mov
mov
(bad)
jle
dec
jno
into
mov
(bad)
ja
or
mov
stc
test
jg
add
(bad)
jne
retf
or
bnd
and
bound
mov
xor
cmp
sbb
out
(bad)
aaa
(bad)
fs
mov
gs
popf
pusha
xchg
pop
call
stos
popf
pop
ins
mov
push
cmps
mov
jge
dec
jmp
movs
and
aas
or
add
xor
icebp
jmp
xchg
fcom
xchg
adc
int3
mov
mov
jmp
leave
mov
add
mov
fisubr
je
mov
arpl
pop
inc
loopne
stc
cmc
cmp
xor
mov
(bad)
xchg
dec
frstor
pop
and
adc
ja
pusha
cmp
jl
xchg
jl
neg
xchg
arpl
and
or
push
les
out
add
or
push
cdq
dec
adc
repnz
push
dec
pop
(bad)
xchg
enter
jae
fcomp
dec
rcl
and
mov
(bad)
jl
mov
jg
nop
int3
pop
mov
fmul
jb
js
pcmpgtd
add
test
movs
xor
jbe
adc
push
cld
pop
xor
pusha
adc
mov
cs
push
mov
clc
pop
adc
(bad)
in
push
mov
sti
fld
sbb
pop
mov
fwait
gs
pop
pusha
jle
shl
cmp
and
(bad)
fcmovnb
arpl
rol
push
xchg
adc
nop
or
add
xchg
jp
into
enter
rcr
aas
imul
test
cmps
int3
gs
mov
(bad)
dec
xchg
pop
fst
dec
inc
cmp
and
test
sar
into
(bad)
mov
not
push
or
int
fbld
mov
push
jmp
pop
dec
xlat
xchg
jge
pusha
pushf
jo
or
or
mov
inc
(bad)
jp
or
gs
xchg
(bad)
in
hlt
push
xor
fwait
sbb
push
and
pop
xor
or
sub
cli
out
sub
mov
dec
jbe
ins
pop
fxtract
add
and
push
xchg
ss
xor
jg
loop
out
xlat
in
or
inc
xchg
stos
(bad)
cmp
sbb
xor
jmp
add
cmp
mov
mov
leave
cmc
(bad)
in
mov
cmp
jecxz
xchg
dec
mov
rcl
push
xchg
sbb
or
nop
enter
dec
dec
add
lahf
dec
jle
add
lods
jg
inc
cwde
jmp
imul
call
cmp
das
test
pushf
addr16
mov
pop
sbb
aad
dec
xor
in
popa
mov
mov
loop
pop
pop
push
repz
retf
mov
outs
adc
sub
(bad)
bound
jns
daa
mov
sub
cmp
adc
out
sub
jb
inc
leave
lahf
sub
jp
bnd
(bad)
loopne
inc
pushf
push
(bad)
mov
pop
push
inc
pop
into
or
pop
pop
lds
adc
std
and
cmps
es
add
mov
jge
pop
cmp
xchg
dec
popf
xor
aas
push
xchg
movs
inc
sbb
mov
sub
pop
imul
adc
retf
enter
sub
movs
sbb
mov
xor
adc
sub
arpl
and
xor
popa
dec
fstp
cmp
inc
dec
xchg
fnstenv
dec
sub
mov
scas
lods
sub
mov
mov
les
push
enter
cwde
cmp
lds
jno
repnz
inc
cmc
jge
test
push
(bad)
mov
push
hlt
xlat
add
ds
inc
fstp
mov
test
shl
test
mov
push
or
(bad)
(bad)
or
ret
lahf
test
push
or
add
xor
push
loope
sub
ror
mov
and
add
movs
cli
ja
imul
leave
fwait
jo
adc
adc
jns
inc
mov
or
mov
push
cmp
sbb
mov
or
fild
(bad)
ds
and
cli
loopne
cdq
test
imul
mov
mov
add
outs
imul
and
out
ret
loop
and
dec
jp
sub
(bad)
jns
jmp
dec
jno
lods
arpl
push
xchg
inc
add
sbb
(bad)
dec
pop
push
(bad)
sub
idiv
dec
adc
cmp
(bad)
cmp
sbb
movs
sub
xlat
or
jle
jg
mov
loopne
sub
add
jbe
and
(bad)
scas
mov
and
push
pop
push
popa
adc
jl
int3
and
lock
mov
mov
sbb
sbb
pop
xchg
sbb
jge
gs
pop
sbb
out
js
dec
mov
test
cmps
cmps
xchg
leave
inc
mov
push
aaa
ret
jmp
inc
aas
jmp
stos
jns
leave
sbb
jnp
fnsave
dec
sahf
ror
fidiv
push
mov
jne
outs
mov
xlat
fimul
push
rcr
shr
add
mov
xchg
or
lahf
fcomi
xchg
arpl
or
inc
in
add
pop
ret
xchg
xchg
dec
adc
xchg
outs
idiv
inc
retf
jb
dec
cli
cmp
sub
frstor
lods
inc
add
xchg
xchg
stos
push
mov
xchg
xor
xor
fld
mov
add
xchg
xchg
fisubr
or
ins
aad
pop
repz
sub
pushf
mov
pop
(bad)
(bad)
sub
cmp
ret
jg
push
xchg
or
imul
xlat
in
xchg
popf
push
adc
dec
sar
mov
pop
push
sbb
xlat
xor
outs
push
and
or
(bad)
push
pop
imul
scas
arpl
js
push
std
xchg
push
mov
sub
and
pop
je
into
hlt
leave
cmp
dec
xchg
aaa
in
popf
imul
out
xchg
or
les
push
retf
call
data16
arpl
cmc
loope
pop
jl
je
inc
dec
adc
xchg
add
cs
shr
inc
test
dec
mov
(bad)
nop
test
dec
test
inc
stos
jecxz
xor
cmp
mov
aad
iret
out
add
test
fs
pop
pop
adc
test
mov
adc
push
pushf
inc
popf
movs
not
mov
and
cwde
xor
ret
cmp
ss
cmp
mov
retf
fucomp
fbld
push
adc
stos
stos
cmps
mov
hlt
aad
add
and
out
xchg
inc
lahf
xchg
iret
sbb
out
test
out
cld
(bad)
push
rcr
cmp
xchg
test
ja
icebp
push
int3
pop
xor
add
pop
add
inc
pop
adc
and
xor
movs
jg
jle
ret
mov
mov
gs
or
jae
repz
test
das
sbb
xor
je
jne
fnstcw
xchg
sub
enter
xor
(bad)
xor
push
fwait
add
pusha
nop
jmp
fs
das
and
inc
push
xchg
mov
push
aaa
cwde
lods
aaa
adc
xor
push
pop
mov
sub
mov
dec
pop
jb
pop
or
and
movs
jmp
xchg
(bad)
loop
push
cwde
mov
jecxz
(bad)
push
xor
adc
arpl
loopne
(bad)
jle
sbb
inc
test
mov
jne
jmp
inc
push
(bad)
mov
loope
sub
xchg
nop
mov
push
xchg
mov
add
and
str
les
test
ss
jae
sub
sahf
mov
fs
(bad)
cdq
mul
mov
inc
dec
das
gs
pusha
add
sti
mov
repnz
sub
loopne
mov
aam
bound
xchg
in
and
push
cwde
sbb
rol
push
cmp
shr
xchg
xor
je
mov
sub
and
cmp
int3
test
inc
fsub
out
lods
and
jmp
xchg
rcl
mov
mov
lods
xchg
jne
cld
shl
add
call
dec
fbld
(bad)
sbb
mov
jle
shl
sub
out
pop
ficomp
or
mov
mov
push
sub
xlat
inc
jae
xor
and
push
xchg
dec
leave
movs
lods
or
sub
outs
pop
ret
leave
and
sbb
push
(bad)
jns
push
cmps
sub
test
inc
out
pop
popa
in
jns
mov
or
repnz
addr16
inc
pop
lds
inc
out
dec
add
psubsw
(bad)
adc
bound
cmps
daa
jo
bound
daa
leave
mov
mov
ret
fwait
pop
int
cmp
sub
inc
add
lea
jmp
int
js
and
pushw
cmp
(bad)
loopne
mov
pop
jle
nop
loope
loop
data16
cmps
mov
out
aas
nop
jb
push
jl
adc
pop
xor
pop
push
mov
or
cmp
dec
sbb
outs
jbe
inc
sbb
jne
dec
mov
xor
cmps
out
in
mov
pusha
mov
cdq
fidiv
jb
stos
xor
inc
stos
and
mov
push
pop
daa
push
sbb
sbb
inc
or
fs
fldenv
pop
push
std
inc
add
sbb
cli
mov
push
fdivr
lahf
(bad)
fstp
adc
xchg
int3
pop
in
sub
push
pop
addr16
cmp
inc
stos
lock
inc
pop
xchg
jg
(bad)
mov
pop
sbb
mov
cmp
ret
or
xchg
push
inc
jl
jmp
cmps
pushf
cmp
lahf
sub
sbb
sbb
or
(bad)
int
pop
sbb
outs
lahf
xor
cmp
inc
pushf
(bad)
test
ins
ja
mov
rcr
dec
out
out
cmc
rcr
int
neg
aam
mov
add
cmps
aaa
rol
xchg
xor
xchg
or
mov
pop
pop
xchg
icebp
ins
not
test
dec
shl
(bad)
out
fdiv
and
inc
shl
and
adc
or
xor
into
push
movs
int
xchg
repz
jne
cmp
scas
js
mov
mov
cmp
scas
shl
aam
lock
loopne
push
push
enter
xchg
add
mov
stc
test
inc
inc
fwait
push
repz
push
pop
(bad)
pop
push
stos
sub
inc
mov
adc
sub
in
daa
adc
cmp
ret
dec
int3
jle
fsubrp
mov
leave
xor
inc
ret
and
xor
xchg
aam
sub
jl
and
fucompp
dec
add
cmps
xchg
push
repz
dec
push
add
fwait
xchg
inc
mov
(bad)
push
iret
sbb
inc
mov
xchg
ins
les
mov
or
inc
cld
outs
rol
sahf
pushf
adc
cmp
push
inc
mov
pop
push
dec
movs
icebp
in
jno
fistp
call
in
push
lods
out
leave
hlt
movs
xchg
jg
xchg
sti
xchg
in
outs
in
stc
push
mov
sbb
loope
mov
xchg
outs
enter
mov
push
retf
jns
inc
fldcw
(bad)
pop
xor
shl
adc
ins
ror
bound
in
add
retf
adc
adc
ins
pop
cmp
das
les
fistp
int3
sbb
jp
mov
sahf
imul
test
inc
mov
pop
xchg
cmps
dec
mov
xchg
dec
inc
sahf
mov
(bad)
fcmovnu
mov
scas
sub
adc
aas
stos
inc
mov
fisttp
xor
cmps
lds
addr16
sysret
out
ret
and
pop
push
mov
mov
cld
jecxz
(bad)
mov
aad
mov
es
jns
lock
xchg
inc
js
inc
out
popf
popf
cmp
ret
sti
test
nop
mov
es
scas
push
push
ja
cld
push
lea
repz
test
fidiv
repnz
pop
push
ins
cmps
xor
jo
sbb
cmp
es
or
pop
mov
mov
cmp
mov
sbb
mov
push
dec
aas
dec
xor
mov
repnz
hlt
aam
inc
push
or
inc
mov
scas
and
mov
mov
xchg
push
inc
repnz
outs
int
outs
or
cmp
adc
or
mov
jns
mov
xor
push
sti
add
cmp
nop
je
xchg
gs
mov
int3
jp
adc
lock
sub
sub
jg
test
(bad)
lea
jnp
jo
cmc
dec
jne
std
xchg
jmp
mov
and
sahf
pop
add
sub
fwait
mov
pop
inc
rol
xchg
sbb
xchg
push
scas
and
mov
jno
(bad)
cmp
ss
or
cmps
push
loope
mov
add
daa
push
inc
int
jge
add
cmp
adc
jns
push
mov
jge
out
dec
jno
imul
cmp
outs
ins
jae
and
loop
jle
aam
inc
dec
mov
outs
fs
add
repz
inc
das
loop
ffree
leave
and
and
xchg
out
in
out
fisttp
xchg
cs
or
mov
push
push
ds
sbb
loopne
pop
jmp
ins
pop
inc
inc
xchg
mov
jae
jmp
sbb
sub
lahf
ret
jbe
(bad)
fucomp
push
jp
in
je
mov
xchg
mov
mov
ins
test
push
cmp
in
mov
fidiv
mov
mov
imul
aas
(bad)
mov
outs
in
pop
mov
mov
push
je
inc
xchg
and
add
out
loopne
aad
(bad)
xchg
push
mov
and
ret
loopne
jno
pop
rcl
inc
or
add
adc
arpl
xor
dec
test
sub
and
retf
pushf
(bad)
je
jmp
jl
push
or
out
ss
repz
scas
sbb
dec
mov
daa
jno
bound
enter
cs
dec
ficomp
push
inc
pop
jl
and
inc
dec
ins
cli
pop
cmp
cs
mov
nop
ss
mov
mov
cli
and
pop
test
xlat
stc
jns
mov
sbb
fmul
sbb
cmp
add
sub
jmp
xchg
int
sbb
call
inc
lds
(bad)
adc
js
or
cmps
add
aam
adc
jb
mov
dec
xor
outs
jge
mov
ds
mov
scas
jmp
add
aaa
xor
xor
aad
cmp
or
and
fsub
sbb
inc
ret
jnp
call
sbb
jns
(bad)
clc
mov
test
leave
mov
xor
neg
gs
jbe
out
repz
nop
jle
jbe
sbb
daa
push
retf
test
ss
xor
leave
rol
adc
or
mov
iret
sub
adc
loope
(bad)
mov
mov
mov
xor
mov
cwde
out
enter
cmp
nop
in
imul
mov
pop
jle
mov
outs
test
sub
retf
jp
pop
test
xchg
jp
cmp
jns
repz
(bad)
lahf
jmp
xor
mov
adc
and
jmp
mov
into
(bad)
retf
loope
push
push
out
shl
jae
ss
cld
fadd
(bad)
pushf
jmp
pusha
loop
lods
ret
jno
cmps
jecxz
push
cmp
ss
(bad)
pop
sub
fmul
or
jmp
rcl
fwait
pop
adc
hlt
and
jns
(bad)
push
jbe
jno
pop
add
movs
(bad)
lods
cmp
push
fidiv
outs
popa
mov
mov
xchg
add
pop
jae
and
(bad)
cmps
or
jnp
or
(bad)
daa
retf
jg
fninit
xchg
popa
cld
sbb
jge
iret
aas
mov
or
call
jg
sub
repnz
and
mov
pop
int
out
loope
xchg
adc
faddp
fs
pop
sbb
retf
jae
fiadd
pop
fisubr
mov
sahf
jmp
fwait
retf
mov
add
jnp
mov
pop
lea
sbb
aad
push
shr
pop
adc
aad
loope
aas
aas
mov
fs
(bad)
not
cmp
or
dec
fiadd
pop
into
pushf
inc
mov
adc
sti
hlt
test
repz
push
outs
jbe
inc
inc
or
aas
call
neg
add
pop
sbb
movs
int3
icebp
pop
mov
pop
out
out
cmp
or
sbb
out
test
icebp
jle
mov
stc
out
ret
cmps
cmps
mov
add
jp
int3
sbb
mov
dec
mov
mov
iret
xchg
sub
xchg
add
or
xor
push
inc
aam
icebp
sbb
mov
push
loopne
cmps
xchg
(bad)
stos
mov
pop
in
bound
and
push
mov
add
add
xchg
or
xlat
test
sbb
repnz
dec
aam
outs
les
(bad)
enter
push
loopne
or
mov
and
and
ret
xchg
mov
movs
pop
scas
sub
(bad)
xchg
pop
push
and
mov
mov
sub
mov
mov
mov
jmp
xchg
xchg
imul
cmpxchg
sbb
mov
adc
mul
test
dec
and
aas
addr16
adc
fild
repz
mov
xchg
in
jns
fwait
cmps
jmp
jno
(bad)
(bad)
sbb
stos
mov
dec
mov
stos
xor
add
lods
hlt
ins
popf
add
mov
outs
push
fistp
aas
inc
retf
sbb
imul
mov
and
pop
fdivr
pop
xor
pushf
xor
lock
push
std
adc
inc
dec
leave
popa
test
mov
mov
cmp
jae
sub
adc
test
pop
test
jne
out
(bad)
rcr
sub
iret
scas
test
mov
add
push
shl
add
sub
xchg
cli
fnstcw
jne
aaa
pop
jns
mov
jne
shl
mov
cmps
add
dec
(bad)
repz
mov
or
call
and
add
xor
add
add
in
pushf
pop
sbb
pop
xlat
xchg
loopne
pop
mov
js
aam
mov
and
push
icebp
fist
lds
push
or
jecxz
(bad)
cmp
jl
mov
inc
pop
mov
sar
(bad)
icebp
fistp
mov
(bad)
fwait
loope
jge
sub
fldenv
push
dec
jb
stos
test
lock
ja
pusha
adc
rol
jmp
pop
xchg
addr16
lods
adc
mov
cmc
in
and
imul
xlat
jns
xor
mov
sub
adc
int3
pop
or
pop
add
fild
repnz
or
jle
cmps
xor
push
inc
fisub
test
dec
cmp
add
loop
int
div
retf
(bad)
pop
not
neg
in
xchg
sti
and
mov
scas
clc
bound
mov
scas
pop
jbe
test
dec
out
inc
mov
and
sub
icebp
jo
fistp
sbb
dec
data16
fadd
xlat
pop
cli
sar
jp
mov
adc
pop
(bad)
call
aam
adc
sbb
jbe
arpl
pop
push
pop
push
pop
sbb
push
fisubr
ins
loop
mov
(bad)
sahf
scas
mov
sbb
mov
mov
test
lds
nop
pop
sbb
cmp
cmp
adc
mov
jmp
in
mov
cmc
pop
or
fild
cmp
inc
mov
out
ficom
mov
xchg
pop
cmp
xor
jae
jno
not
inc
(bad)
push
jl
mov
aam
mov
adc
push
sbb
jle
ror
(bad)
xor
sub
cmps
or
cs
rcr
dec
aam
cvtdq2ps
fld
push
adc
jmp
dec
mov
mov
sbb
jmp
mov
push
fcomp
call
sub
or
mov
mov
(bad)
sahf
stos
(bad)
div
cmp
popf
mov
mov
pop
pop
test
fimul
mov
retf
test
push
xor
fstp
sub
fmul
cmp
xor
pop
push
jg
adc
gs
push
and
cli
out
loope
sbb
sub
repz
pusha
loop
dec
adc
hlt
rcl
xchg
idiv
(bad)
loop
call
enter
pop
addr16
out
push
push
ins
cmp
retf
std
push
stc
sbb
fbld
dec
mov
imul
fdivr
push
xchg
leave
movs
idiv
mov
or
ret
push
and
(bad)
cmp
and
mov
ss
cmp
push
mov
cmc
sub
sub
pop
xor
(bad)
in
cmps
outs
xchg
es
dec
idiv
outs
xchg
stos
mov
mov
retf
inc
jmp
push
inc
jb
push
mov
cmps
aad
pusha
(bad)
fcom
icebp
inc
push
lea
out
pop
mov
jo
inc
and
adc
repnz
retf
dec
(bad)
mov
jg
add
jecxz
and
adc
int3
mov
cmp
cmp
ins
mov
mov
cmp
and
mov
mov
mov
dec
cmc
cmp
je
retf
add
sub
lods
dec
xchg
xlat
pop
pop
ss
inc
push
pushf
adc
dec
push
add
movs
mov
nop
sbb
mov
data16
push
(bad)
jl
push
xchg
mov
adc
(bad)
push
mov
(bad)
or
xchg
add
push
xchg
popa
nop
in
cmps
mov
jp
nop
jg
movs
(bad)
out
int3
dec
(bad)
or
cs
mov
push
out
mov
scas
xchg
jne
jmp
leave
movlps
enter
mov
enter
xchg
mov
(bad)
pop
mov
sbb
aad
push
sub
xor
arpl
xor
je
xchg
stc
ss
cmp
in
cmc
xchg
pop
outs
and
or
clc
mov
and
aaa
stc
lods
add
jns
push
ins
cwde
mov
sub
jns
dec
push
jmp
repz
pop
sar
or
enter
cs
enter
xchg
pop
je
aad
sub
mov
push
cmp
mov
cdq
jne
cmc
push
xlat
inc
cmp
cs
inc
mov
sub
(bad)
jns
scas
repnz
fstp
inc
xor
add
mov
in
add
stc
xchg
jmp
cmp
cmp
psubsw
mov
fist
lea
out
xor
pop
out
add
add
dec
xor
cld
cwde
retf
fwait
adc
(bad)
adc
inc
push
fistp
pop
sahf
cs
dec
dec
hlt
mov
stc
dec
add
scas
xchg
xchg
stos
jmp
(bad)
pusha
mov
mov
mov
ja
mov
loop
push
daa
pop
jno
sbb
sbb
push
stos
push
pop
jl
lods
jecxz
(bad)
jmp
aas
add
scas
dec
fst
xor
loope
mov
mov
call
ret
pushf
jae
stos
mov
jo
call
les
push
inc
repz
in
sbb
add
pop
movs
push
cli
sahf
dec
out
rcr
inc
xchg
pop
movs
mov
pushf
ins
sub
mov
aad
loopne
call
push
mov
out
sar
xchg
pusha
das
push
movs
es
cs
jnp
jae
mov
out
mov
aas
test
inc
call
cmp
sub
adc
pop
aas
pusha
inc
in
jp
push
sub
(bad)
jecxz
rcl
pop
clc
or
push
xchg
mov
push
cli
mov
mov
in
(bad)
adc
into
push
gs
and
out
xchg
mov
mov
das
lahf
xor
sbb
mov
jl
xor
add
movs
jns
jae
ds
lock
or
push
jnp
sbb
add
ins
sbb
push
and
sub
into
lods
push
into
ds
mov
mov
mul
add
repnz
sti
les
(bad)
mov
outs
pop
inc
fs
mov
xor
xchg
adc
xchg
jae
imul
std
xchg
add
mov
jl
mov
aaa
mov
mov
leave
inc
cmp
pop
mov
mov
stos
daa
dec
xchg
mul
rol
ja
xchg
std
sbb
sub
cmps
and
jmp
pushf
mov
loop
ss
dec
dec
jge
test
xor
stos
push
test
or
sbb
mov
jne
xchg
call
jge
xor
mov
fldenv
and
call
retf
or
pop
mov
mov
sbb
ret
sub
push
mov
cmp
inc
loop
cmp
int
push
shr
aaa
fdiv
xor
xor
test
xor
adc
push
aad
scas
xchg
jns
push
les
out
es
jmp
mov
int
inc
dec
mov
jecxz
sbb
xchg
imul
pusha
add
cs
mov
jb
daa
cmp
sbb
and
out
adc
cmp
mov
xchg
popa
dec
pushf
jno
mov
jmp
push
xchg
test
mov
mov
sbb
jno
inc
xor
int
call
push
imul
rcl
iret
mov
cmp
fwait
cmc
stc
jg
icebp
adc
mov
jo
fnstcw
push
(bad)
cli
or
mov
lods
push
xchg
lahf
dec
and
adc
sub
scas
push
je
scas
popf
rcr
adc
adc
xchg
repz
les
dec
inc
dec
daa
fst
xchg
cs
adc
mov
pop
or
cwde
ja
ret
add
aaa
mov
icebp
push
mov
inc
push
mov
jae
or
mov
jmp
inc
stos
pop
mov
or
call
mov
cs
cmp
(bad)
sti
out
int3
add
in
repz
cmps
mov
mov
jecxz
cmps
cld
shl
or
shl
adc
mov
adc
setle
inc
adc
lea
ja
and
push
xchg
push
sub
jb
sub
in
nop
pop
call
push
sahf
jp
or
(bad)
sub
aam
in
psllw
push
lahf
imul
sub
int
lods
in
mov
pop
sub
lock
retf
sbb
movs
and
or
cs
cli
(bad)
adc
(bad)
sbb
test
ins
cs
fisttp
sbb
leave
add
imul
push
ds
in
pop
(bad)
test
mov
subps
jae
cmp
mov
inc
jle
mov
test
and
push
and
rcl
dec
xchg
inc
pop
sub
idiv
sbb
push
mov
pop
inc
out
dec
inc
imul
dec
inc
in
inc
dec
loope
inc
pop
in
cmp
stc
stos
push
push
stc
push
pop
rol
mov
lods
add
(bad)
retf
popf
mov
mov
cmps
loop
mov
mov
clc
adc
xchg
mov
fbstp
push
call
mov
mov
pop
imul
js
fs
mov
jno
pop
sub
loope
test
xor
hlt
loop
pop
and
dec
or
ret
in
fiadd
pushf
test
push
inc
out
or
imul
repnz
mov
xor
and
pop
aaa
loopne
mov
clc
and
mov
dec
xor
pop
jns
add
retf
lock
push
jne
dec
cwde
fist
push
sbb
inc
jle
(bad)
sub
dec
jg
mov
fistp
dec
cdq
jl
out
inc
fs
nop
xchg
call
mov
ins
ds
cmps
cld
mov
or
xor
(bad)
aam
mov
push
mov
imul
and
mov
cli
out
clc
out
xchg
retf
jmp
enter
push
fidivr
retf
sbb
ror
call
and
lock
dec
inc
xchg
movs
lods
lock
int3
mov
dec
cmp
shld
sub
pop
sbb
jae
inc
je
pop
sbb
xor
sti
ret
jl
or
aas
das
imul
mov
(bad)
push
js
add
leave
inc
daa
inc
fs
xchg
in
outs
push
jnp
mov
and
push
mov
gs
jmp
pop
mov
ja
cmp
cld
nop
xor
cmp
idiv
or
(bad)
dec
xchg
adc
jmp
jmp
imul
dec
aam
mov
mov
hlt
cmp
pop
jae
xor
push
jl
pop
pop
xchg
stc
retf
in
out
push
jge
sbb
adc
js
loope
pusha
or
adc
fimul
xchg
jge
aaa
dec
push
(bad)
jle
repnz
(bad)
test
jmp
inc
dec
int
adc
adc
ret
std
xchg
mov
daa
sbb
hlt
sub
adc
sahf
mov
mov
in
out
fimul
ja
cdq
in
sbb
mov
and
test
(bad)
(bad)
jg
sahf
push
test
and
jecxz
mov
lds
data16
loopne
mov
rol
(bad)
fwait
inc
movs
mov
cmps
repnz
lea
ins
push
nop
adc
mov
push
shl
out
xor
outs
xor
pop
mov
imul
aam
or
push
mov
jo
xor
xor
push
xchg
dec
add
mov
in
popa
xor
push
adc
inc
mov
inc
jae
mov
dec
pop
popf
movs
icebp
rcr
fsub
cwde
sti
rol
jge
mov
sub
mov
cli
jo
add
add
out
cwde
ins
sub
rol
cwde
push
xor
test
mov
ss
push
out
mov
or
cmp
test
inc
in
push
xchg
stos
fsubr
cdq
fs
ja
je
mov
rol
gs
hlt
shl
mov
rcl
ret
push
mov
clc
dec
fist
fnstenv
sbb
lock
xor
mov
sub
popf
mov
push
loopne
pop
mov
mov
clc
xchg
ret
xchg
sub
xchg
std
dec
inc
sbb
add
neg
or
aaa
adc
popf
outs
pop
and
dec
daa
jmp
in
add
add
retf
scas
xchg
jo
out
test
jl
lea
push
ins
es
iret
fidivr
mov
lahf
xlat
retf
aaa
sbb
xor
test
cs
test
dec
fldcw
push
stos
push
sub
loopne
mov
imul
test
fcom
movs
rcr
shl
out
sti
jecxz
pop
mov
xor
pushf
shr
rcl
imul
dec
sbb
push
test
dec
sbb
mov
into
test
std
inc
cmp
jae
data16
aam
pop
mov
or
add
and
mov
ss
dec
xchg
les
jne
call
mov
or
scas
mov
test
popa
cdq
sar
iret
mov
fnsave
cmp
cmp
(bad)
adc
jnp
lods
add
push
movs
jne
jo
adc
jnp
add
(bad)
js
jo
or
lds
sbb
mov
fisubr
mov
outs
sub
in
pop
xchg
icebp
cmp
addr16
movs
dec
fld
scas
inc
jl
add
push
call
neg
aad
loopne
jno
mov
in
add
pop
sbb
mov
pop
adc
push
cmc
sub
ret
hlt
cdq
ins
pushf
nop
in
mov
je
imul
ret
jg
test
popa
lahf
mov
arpl
jle
dec
sbb
cmp
test
dec
pop
jae
or
mov
cmp
leave
xchg
xchg
ja
lahf
xchg
fstp
push
ror
in
ror
mov
call
sbb
fidivr
add
pop
mul
dec
cmp
in
fdivr
xor
popf
arpl
pop
xor
ds
sbb
or
repz
test
cs
xor
dec
xor
xchg
jl
les
mov
scas
(bad)
mov
rcl
mov
jp
jno
add
mov
shr
add
cdq
mov
movs
sbb
mov
sbb
je
pop
pop
call
fcmovnb
(bad)
loop
scas
lahf
fcomp
imul
inc
repnz
and
arpl
push
adc
sub
call
mov
sbb
sti
adc
addr16
outs
movs
or
jmp
add
shl
sbb
pminsw
xor
daa
jnp
add
push
add
pop
jl
stos
test
ja
jl
xchg
movs
jne
fxtract
mov
call
jge
or
popf
and
lea
shr
gs
retf
(bad)
jb
mov
ret
inc
xor
xchg
jmp
adc
popf
lock
imul
push
inc
add
adc
shl
sbb
into
dec
sub
lods
sub
loopne
xchg
mov
(bad)
neg
rcl
jno
adc
mov
shl
jmp
ins
pop
push
or
xchg
mov
(bad)
mul
jne
retf
and
fwait
dec
into
(bad)
mov
add
inc
psubusw
or
shr
and
inc
and
jae
das
cmps
sahf
sbb
push
xor
jp
fucomip
gs
xor
cmp
jne
add
repz
sub
mov
and
das
daa
mov
and
lods
icebp
pop
sbb
xchg
dec
movs
or
daa
call
mov
mov
faddp
or
mov
push
hlt
xchg
(bad)
and
mov
mov
ret
xchg
xor
bound
scas
hlt
or
cli
adc
sar
fwait
dec
push
mov
dec
mov
and
jno
test
xchg
sahf
outs
mov
(bad)
mov
pushf
aaa
push
adc
adc
nop
mov
add
jo
xchg
xor
and
int3
xchg
repnz
cmp
push
push
mov
xor
adc
sub
(bad)
rol
stc
adc
mov
fcomp
push
push
and
bound
aaa
arpl
leave
cmp
push
dec
(bad)
out
add
ja
not
not
and
xchg
push
add
mov
adc
lods
fwait
jo
scas
outs
retf
sbb
xchg
jbe
pop
rol
leave
push
add
ins
ret
nop
fist
fwait
mov
(bad)
mov
jb
retf
popf
mov
fstp
mov
ficomp
or
xor
das
xor
stos
test
aas
push
xchg
xchg
mov
loop
ins
stos
in
inc
mov
jge
daa
xchg
int3
cmc
lods
and
daa
repz
nop
xchg
mov
jg
mov
idiv
stc
inc
(bad)
pop
nop
cmp
test
fild
mov
retf
nop
imul
and
lea
adc
xchg
cmc
fsub
lds
push
jo
(bad)
bound
je
iret
xchg
aad
(bad)
jne
mov
sub
arpl
(bad)
mov
std
or
push
gs
leave
and
xor
inc
inc
out
add
cmpxchg
push
icebp
aas
add
test
(bad)
movs
rol
mov
mov
sti
jne
pop
(bad)
outs
xor
pop
xor
call
in
test
rcl
out
xor
push
scas
rcr
pop
sub
test
push
sahf
push
pop
xchg
movs
loopne
imul
cs
movs
bnd
xchg
jae
(bad)
sbb
jmp
loop
mov
arpl
jge
or
movs
leave
jmp
jl
and
fist
jmp
or
dec
outs
mov
cmps
cmc
mov
push
or
or
mov
or
ins
ss
adc
mov
stc
pushf
pusha
push
cmc
push
push
cmc
outs
inc
mov
inc
sbb
add
(bad)
cmp
ja
inc
cmp
pop
mov
fld
inc
add
jbe
pusha
jmp
ret
cmps
jp
inc
popf
adc
xor
xchg
fistp
int3
mov
loopne
and
push
push
sub
out
sbb
(bad)
mov
in
mov
outs
jg
cmp
in
dec
gs
push
ror
in
cli
(bad)
cs
mov
out
popf
sub
(bad)
call
std
push
in
dec
fbld
jns
mov
jmp
push
mov
jbe
int3
pop
stos
mov
push
jbe
jp
jecxz
in
mov
mov
pop
inc
pop
adc
scas
mov
add
and
ret
push
loop
fcmovu
sbb
add
imul
sub
aas
push
fidiv
les
arpl
add
fwait
(bad)
jmp
and
and
cmp
push
out
pop
push
out
dec
inc
imul
dec
inc
in
dec
inc
loopne
push
inc
(bad)
and
out
xor
shr
dec
and
repnz
lds
or
lods
inc
cmp
mov
ret
loop
inc
cld
mov
xor
repnz
mov
fistp
iret
gs
pop
fsub
iret
mov
dec
clc
ret
add
pop
jae
sbb
push
fnsave
sbb
cmp
sbb
pop
cs
mov
mov
leave
pop
jge
test
push
out
push
fidivr
imul
popa
jge
cmps
in
sub
lock
sub
pop
stc
dec
inc
jae
pop
cdq
pop
mov
cmc
jb
clc
data16
xor
mov
mov
pop
out
mov
cmps
sbb
jmp
and
fnstsw
inc
aaa
and
aad
cwde
shr
aad
dec
je
inc
fimul
jo
ds
outs
jns
or
inc
std
lahf
jno
popa
js
cmps
push
xlat
les
aam
sub
(bad)
sbb
fistp
stc
lds
lods
dec
sbb
int3
imul
ret
pop
sbb
inc
adc
int
lock
adc
daa
mov
sahf
mov
clc
call
add
push
pop
jp
xor
sar
adc
inc
adc
ror
ret
clc
ror
dec
aas
pop
add
in
add
and
jne
loopne
scas
or
inc
imul
jle
jae
mov
out
sub
in
mov
xor
into
aad
mov
mov
xchg
dec
pop
cmp
pop
jno
pop
scas
push
or
mov
shr
jmp
cdq
dec
loopne
div
ret
stos
stos
jne
(bad)
ds
add
fimul
mov
xchg
ins
ret
xor
jno
cmps
enter
test
pop
nop
shl
jo
mov
cmp
dec
rol
pop
test
(bad)
cmps
sub
adc
imul
nop
fnclex
adc
xor
repnz
push
inc
mov
arpl
dec
(bad)
mov
clc
or
loope
xor
retf
and
loop
jo
gs
clc
mov
dec
addr16
repz
dec
pop
es
dec
jbe
cli
hlt
icebp
sub
cmps
movs
fdivp
mov
leave
mov
inc
inc
out
xchg
dec
jmp
mul
cld
data16
jl
and
sbb
iret
or
(bad)
iret
call
lahf
jo
retf
push
addr16
sub
push
jns
hlt
popa
mov
or
jle
out
repz
aas
mov
sub
repz
push
cld
jle
push
ror
pop
mov
sahf
push
fucomp
xor
addr16
cmp
aaa
or
fstp
in
inc
pop
pop
(bad)
enter
daa
ret
push
pop
icebp
fstp
dec
dec
add
call
jae
rcr
jns
lahf
mov
cdq
arpl
das
lea
movs
xchg
out
pop
or
lahf
pop
stc
pop
jl
mov
mov
daa
mov
cmps
test
mov
jbe
test
push
fnstsw
jle
or
add
and
lods
outs
push
xlat
sub
lods
pop
mov
sub
sbb
out
pusha
jno
(bad)
push
xchg
cmp
xchg
ror
cmp
adc
outs
and
rcl
mov
iret
mov
ret
jno
das
inc
add
fs
and
scas
jns
ret
xchg
cld
mov
(bad)
xor
jbe
mov
cdq
stos
pop
test
dec
add
pop
cmp
lods
sti
shl
push
inc
xchg
ja
xor
pusha
jg
sbb
inc
push
in
pop
fst
dec
inc
cmp
jge
test
pusha
test
push
out
pop
inc
out
dec
inc
idiv
dec
push
cmc
cmp
inc
dec
out
xor
out
movs
push
push
jmp
or
(bad)
stos
mov
dec
push
xlat
addr16
leave
and
mov
loopne
xchg
scas
fcomp
xchg
(bad)
sar
mov
shr
jno
lods
fidiv
pop
mov
sub
push
cmp
out
xor
mov
jmp
adc
mov
leave
shr
stc
test
xor
sbb
fmul
(bad)
jge
dec
and
aas
lahf
inc
outs
stos
js
mov
mov
xchg
test
adc
jl
movs
aaa
imul
push
xor
call
leave
int
jge
pop
clc
add
jne
inc
outs
mov
in
stc
test
jno
xor
jecxz
adc
or
or
and
dec
(bad)
or
test
adc
repnz
js
mov
loop
(bad)
lock
rcl
sub
adc
jnp
es
mov
and
jl
sbb
ror
lfs
cmp
ja
sub
in
pop
sti
xchg
(bad)
fcom
(bad)
mov
lahf
sahf
mov
sbb
cwde
add
sub
pop
adc
inc
pusha
xchg
mov
retf
pop
(bad)
sbb
jmp
sbb
xchg
xor
outs
int
out
inc
xchg
add
scas
out
pop
mov
fpatan
jle
scas
sbb
dec
push
push
sbb
fs
xchg
mov
and
dec
xor
int3
retf
scas
pop
jge
inc
jo
mov
jo
jmp
jecxz
pop
dec
out
mov
ins
push
lahf
mov
mov
cmp
or
push
add
loopne
(bad)
neg
and
fisttp
movs
jge
aas
dec
and
mov
aam
push
or
mov
cmp
push
(bad)
clc
outs
cld
mov
hlt
fisubr
jno
cli
xlat
cmp
and
gs
sub
mov
jecxz
iret
stc
dec
lea
addr16
icebp
mov
mov
cdq
xchg
and
nop
pushf
stos
aad
arpl
add
inc
push
cli
push
rcl
fild
inc
pop
fist
dec
push
das
(bad)
cdq
not
push
(bad)
mov
xor
mov
jae
inc
movs
mov
or
jmp
outs
dec
push
sub
inc
cs
pop
or
mov
add
outs
jae
movs
(bad)
aam
xor
in
xor
mov
cmc
and
pop
int3
sub
inc
jnp
cmp
loop
movs
stos
pusha
pusha
(bad)
pusha
and
add
inc
out
mov
sub
(bad)
or
cmp
cmps
mov
or
xor
and
test
push
xchg
lock
sub
pop
ror
cld
popf
lods
adc
xchg
dec
cwde
add
mov
mov
mov
or
mov
or
and
leave
in
mov
mov
fstp
dec
or
(bad)
inc
xor
dec
add
cmp
jnp
pop
arpl
mov
(bad)
adc
sub
add
adc
jnp
rcr
xor
repnz
cmp
and
cdq
enter
call
mov
sbb
stc
(bad)
xchg
sti
adc
adc
xchg
cmp
cld
aas
sub
cmp
icebp
mov
mov
data16
adc
xchg
jp
dec
sub
jg
(bad)
call
in
or
es
lods
lock
push
cdq
dec
adc
(bad)
pop
pop
and
(bad)
addr16
out
push
jmp
out
cmp
pop
or
repz
pop
mov
cdq
out
sbb
mov
in
lds
mov
outs
in
mov
rol
inc
mov
xchg
dec
fldl2t
test
inc
loope
sbb
in
pop
stos
jns
adc
rcl
inc
sbb
pop
retf
push
ret
das
test
sahf
mov
mov
dec
mov
mov
out
jno
aam
imul
(bad)
adc
mov
and
and
ins
push
out
ins
push
imul
push
out
pop
inc
idiv
dec
inc
in
inc
pop
loopne
dec
dec
out
mov
shr
lods
push
idiv
mov
mul
(bad)
daa
shl
push
pusha
pop
adc
push
fcom
push
cmp
push
loop
xchg
push
sub
sar
repz
stos
add
pop
xlat
pop
retf
xchg
inc
hlt
jmp
dec
adc
mov
ins
(bad)
fwait
pusha
or
ds
add
push
add
icebp
push
(bad)
jl
retf
add
sti
loop
fcom
sbb
cmp
jo
jmp
enter
cmps
jb
sub
rcr
mov
mov
mov
mov
bnd
mov
movs
and
mov
jecxz
cmc
ds
mov
rcl
shl
jmp
add
adc
mov
pop
push
aaa
sbb
jge
inc
(bad)
dec
aam
or
cmp
loopne
(bad)
scas
mov
sub
cmp
xor
(bad)
lods
dec
jmp
pop
enter
xor
test
dec
and
daa
shr
cmps
pop
retf
mov
call
inc
xor
and
rcl
jbe
scas
or
das
fs
mov
or
jae
(bad)
fistp
push
cmps
mov
dec
test
jl
rol
call
lock
dec
retf
adc
(bad)
rcr
repz
cmp
or
jo
xchg
dec
cdq
jne
xor
fucomp
aaa
jl
ror
sbb
inc
cmp
inc
ss
push
cli
add
add
xchg
push
ret
out
aaa
or
dec
jne
inc
shr
stc
test
mov
mov
cli
adc
pop
push
and
sub
std
fild
cwde
in
xchg
bound
lahf
adc
outs
jo
jecxz
jo
arpl
pop
add
das
lahf
clc
or
jl
aam
(bad)
out
sar
jbe
scas
(bad)
mov
call
js
inc
mov
push
iret
std
int
mov
xchg
inc
test
dec
cli
inc
xchg
push
inc
or
cmp
call
lods
fnsave
pop
shl
add
ds
cdq
out
pop
in
or
push
aas
mov
jmp
jp
hlt
cmp
adc
jb
pop
mov
jb
and
sub
vpcmpgtb
mov
dec
or
dec
dec
add
js
mov
fst
mov
in
lods
dec
fidivr
xchg
add
(bad)
inc
ins
test
dec
into
pusha
add
mov
push
inc
outs
jo
sti
dec
(bad)
shl
dec
mov
imul
(bad)
xchg
pop
ret
mov
mov
inc
or
mov
adc
out
icebp
or
out
push
out
je
(bad)
cmp
ja
(bad)
pop
and
dec
push
rcr
retf
aas
xchg
mov
jl
pop
jmp
sub
test
aas
sar
imul
scas
adc
cmp
inc
mov
retf
push
shr
popa
bound
inc
cld
cmps
dec
imul
sub
dec
shl
inc
mov
mov
bound
xchg
and
mov
jp
jae
pop
das
sub
pop
sbb
cs
pop
lods
push
int3
ret
rol
aaa
mov
loop
sub
add
mov
test
ja
test
mov
adc
comiss
pop
jl
lahf
push
in
fxch
add
jecxz
mov
and
rol
dec
cmp
jbe
arpl
push
or
mov
je
add
arpl
fsubr
ror
and
xchg
cmp
pop
sar
push
cmp
add
mov
adc
mov
stos
cdq
fsubr
mov
pop
popf
test
mov
push
adc
sub
mov
(bad)
and
and
int3
push
sti
ror
add
inc
mov
cwde
sahf
pushf
xor
fmul
pop
stos
hlt
(bad)
jmp
mov
inc
cli
outs
loope
(bad)
in
dec
in
inc
adc
pop
lods
adc
pop
mov
dec
cmp
mov
mov
sub
push
or
stc
out
sti
jae
fcmovnu
xchg
clc
xchg
mov
les
fwait
stos
pop
mov
sub
inc
jp
repnz
mov
or
pusha
dec
mov
in
ror
(bad)
bound
mov
inc
inc
mov
aas
mov
fidivr
adc
pop
rol
les
cmp
dec
je
aad
push
mov
fcmovbe
dec
xor
xchg
jl
inc
adc
ja
and
mov
enter
inc
and
loope
jl
push
fidivr
mov
(bad)
inc
xor
fisub
daa
xor
dec
int
and
repnz
lock
scas
movs
mov
loope
in
fist
mov
in
es
fbld
or
and
sub
mov
xor
je
aas
icebp
loop
ret
pusha
popf
jnp
les
rcr
cmc
cli
fwait
lods
(bad)
jns
push
data16
push
add
and
movs
pop
push
bound
push
jne
stos
mov
js
xchg
lods
jb
jle
or
aad
fsub
adc
or
jne
xchg
cmc
xor
sbb
mov
das
(bad)
or
xchg
gs
sahf
setnp
repz
push
mov
inc
dec
mov
mov
pusha
fisub
inc
push
lods
xchg
inc
xor
cdq
push
xchg
add
sbb
aad
std
icebp
jecxz
dec
clc
(bad)
push
cmc
(bad)
inc
mov
mov
jne
inc
and
dec
ins
adc
inc
nop
pop
lds
jl
dec
(bad)
push
fild
mov
push
test
pop
add
mov
fmul
pop
add
dec
daa
mov
fucomp
outs
adc
jnp
cmp
cs
pop
in
xchg
inc
add
imul
cmp
cmp
mov
cmp
in
test
loopne
fpatan
dec
out
rol
mov
test
call
dec
popa
push
popf
lods
shl
out
aas
hlt
push
shl
xor
(bad)
loopne
jl
ins
int
mov
xor
push
call
mov
xchg
fcom
push
ins
xor
sbb
and
pop
push
(bad)
fcomp
mov
inc
sbb
and
xchg
push
iret
lds
(bad)
retf
cmps
mov
movs
aad
adc
idiv
rol
fdecstp
fsubr
test
repnz
loop
xchg
adc
mov
push
popa
cmc
push
pop
stos
lods
addr16
jno
sbb
add
jne
test
daa
vminss
add
mov
push
jle
sbb
cmps
rcl
mov
mov
mov
mov
stos
ret
stc
ficomp
dec
dec
push
das
jge
xchg
push
or
mov
and
in
mov
ja
xchg
dec
test
push
fld
jmp
lds
mov
aaa
movs
and
sub
fincstp
retf
test
enter
(bad)
mov
es
js
fwait
arpl
mov
sbb
xor
cmp
pop
aad
mov
adc
js
mov
push
mov
cld
push
je
push
jl
call
mov
cmp
or
cmps
ja
rol
in
mov
imul
jae
pop
ins
mov
repnz
call
sbb
lods
fst
cmc
xchg
sbb
fidivr
sahf
(bad)
sub
xrstor
and
movs
adc
mov
ss
xlat
(bad)
loopne
pop
xchg
test
js
mov
xor
cs
pop
(bad)
mov
adc
fwait
ss
mov
(bad)
std
lock
adc
scas
scas
movs
or
gs
push
out
push
inc
bound
push
jae
lds
iret
popa
and
pop
push
and
es
shr
out
push
ss
gs
sti
cwde
and
arpl
inc
imul
cdq
popa
inc
add
pop
fsubr
pop
pop
scas
imul
stc
lods
or
daa
inc
sub
pushf
(bad)
and
fdiv
sub
add
cs
ins
jne
outs
(bad)
mov
jae
mov
stos
jne
pop
leave
and
mov
fdivr
(bad)
sahf
rcl
test
loopne
mov
outs
mov
jnp
aad
jbe
push
out
cmp
sub
js
push
mov
ficomp
adc
fwait
repz
fdivrp
shr
add
mov
fwait
ja
xchg
jl
xchg
fs
push
inc
stos
pop
pusha
popa
jecxz
jmp
add
pusha
in
xchg
das
or
pushf
pop
call
add
jle
jo
cmp
sbb
pop
xchg
movs
pop
pop
or
mov
(bad)
push
fs
sbb
(bad)
(bad)
mov
ds
retf
xor
push
cmp
sbb
movs
adc
dec
clc
adc
or
sub
sbb
cmp
cmps
sti
retf
jle
outs
(bad)
or
cmp
inc
or
ins
xchg
add
pop
pop
dec
inc
arpl
aaa
adc
sub
daa
xchg
aad
jmp
imul
cmps
add
repz
mov
movs
jmp
jmp
fild
inc
dec
gs
int3
sub
mov
pusha
cli
jbe
retf
inc
xchg
out
js
add
aaa
push
cs
pop
add
pop
imul
lock
push
add
sti
enter
sti
jns
ja
mov
aam
mov
mov
push
xchg
or
mov
hlt
aas
inc
jecxz
loopne
ss
pop
adc
jmp
fistp
dec
stos
sub
out
mov
mov
dec
and
call
cmp
inc
mov
sub
sub
je
mov
mov
lods
bound
sub
dec
pop
rcr
jmp
xchg
lahf
lock
jns
loope
xchg
pusha
cmp
movs
in
test
call
mov
ret
mov
push
or
mov
xor
fisttp
pop
iret
imul
dec
mov
outs
push
icebp
mov
(bad)
push
ss
mov
cmps
dec
add
xor
pop
jmp
adc
mov
cmps
push
and
xchg
cmp
jno
imul
and
xor
push
das
pushf
test
pop
dec
mov
inc
fadd
(bad)
dec
out
mov
cmp
jne
pop
cdq
arpl
(bad)
cmp
or
test
mov
jg
pop
in
push
(bad)
ret
ss
mov
inc
xor
dec
bound
mov
js
and
mov
or
fist
daa
shl
push
and
pushf
mov
ja
mov
fisub
inc
adc
dec
scas
jbe
jo
sbb
imul
or
mov
cmp
shl
or
scas
jbe
in
push
lock
jbe
pop
push
iret
dec
push
(bad)
bnd
lods
rol
inc
sub
push
shr
ror
int
cmc
fimul
cmps
stos
das
jl
mov
push
adc
xor
dec
and
push
inc
pop
fwait
(bad)
mov
sbb
fadd
pusha
test
mov
test
(bad)
aas
xcrypt-cfb
cmps
and
loop
addr16
jecxz
mov
dec
iret
xchg
inc
cs
pop
js
adc
jb
sbb
ins
dec
cmps
sub
movs
dec
or
call
pushf
or
jl
mov
call
and
pop
mov
inc
push
dec
data16
hlt
push
xor
mov
(bad)
and
loope
in
xor
mov
je
cmp
cs
jmp
mov
or
inc
jle
sub
outs
out
inc
movs
and
repnz
not
push
shr
mov
xor
xchg
push
add
xchg
ret
add
xor
adc
and
int
add
movs
pushf
mov
dec
mov
pushf
dec
xlat
mov
inc
add
jmp
enter
adc
add
pop
push
push
or
je
fstp
xor
aaa
fs
out
adc
jb
data16
push
fldcw
bound
add
mov
int3
push
or
pop
jl
mov
add
aad
pop
jne
dec
lods
push
ds
sar
mov
or
ja
sbb
push
adc
or
pop
xor
xchg
cwde
inc
jb
das
cmp
pop
retf
mov
xor
cwde
(bad)
imul
addr16
adc
or
arpl
and
imul
aaa
jmp
sbb
mov
test
addr16
jmp
fsub
ror
es
xor
dec
dec
inc
push
mov
lods
out
repnz
sti
sbb
test
pusha
(bad)
sbb
(bad)
imul
add
fscale
adc
std
loopne
cdq
mov
inc
inc
clc
in
push
neg
dec
popa
pop
sub
xchg
clc
sub
icebp
aaa
push
ins
les
imul
add
jns
adc
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
push
inc
mov
std
pop
pop
sub
jbe
dec
inc
xchg
dec
and
cmp
inc
mov
pop
push
idiv
pop
push
out
pop
push
imul
ins
adc
sub
xchg
fst
pop
cmps
pop
pop
jo
cmp
push
cmp
(bad)
sub
imul
pop
adc
sub
pop
(bad)
pop
dec
push
xchg
sbb
sub
xlat
sub
and
or
movhpd
sbb
xor
mov
pop
mov
outs
and
pop
mov
retf
jae
mov
imul
ins
adc
call
or
fsub
mov
(bad)
pop
push
scas
test
xchg
retf
(bad)
cmp
inc
lods
jle
adc
jns
mov
std
inc
fwait
xchg
cmp
dec
pop
xchg
push
out
icebp
sub
mov
jbe
cmp
jmp
and
(bad)
add
push
pop
jb
lahf
sub
mov
jp
xor
inc
and
add
data16
(bad)
scas
jge
mov
push
inc
jno
clc
cwde
mov
cmps
cmps
ds
add
nop
cmps
(bad)
lds
std
sbb
out
pop
xchg
jb
inc
mov
jp
xchg
xchg
(bad)
and
daa
leave
xchg
jae
dec
int3
ror
repnz
mov
xor
pop
sub
ret
out
jbe
ror
add
fucomi
dec
mov
pop
pop
mov
xchg
xor
push
aaa
sub
fimul
adc
push
(bad)
or
cmc
inc
mov
cmp
mov
shl
dec
jmp
sub
lods
sub
and
jecxz
jle
mov
cmp
ret
(bad)
fs
or
js
ret
add
in
aaa
or
out
cdq
mov
in
sbb
out
push
cmp
push
mov
das
movs
popf
mov
repnz
sahf
ins
jg
mov
inc
mov
jmp
ret
mov
rol
retf
clc
mov
inc
shl
sub
ja
cld
hlt
leave
jne
sub
dec
push
jbe
jecxz
dec
pop
leave
js
pop
dec
push
lock
sahf
and
or
and
mov
jmp
push
or
jnp
mov
sub
pop
add
or
jp
sbb
and
xchg
push
mov
jl
rcr
jb
stos
les
out
mov
add
ins
in
and
push
mov
pop
mov
sbb
add
jle
fdiv
les
cmp
or
push
test
leave
shl
mov
scas
dec
add
out
dec
inc
adc
pop
sti
sub
int3
adc
mov
jmp
ret
rcr
and
or
aaa
call
and
call
add
jecxz
mov
push
rcl
or
sbb
pop
(bad)
mov
and
mov
aad
sbb
shl
sub
repz
xchg
xchg
pop
push
xor
jne
mov
pop
push
imul
sbb
lahf
out
pop
push
cli
jns
jo
sbb
(bad)
cmp
(bad)
pop
pop
jo
sub
popa
(bad)
dec
dec
xor
sub
add
imul
cmc
jmp
(bad)
cmp
jbe
lock
hlt
leave
add
jbe
ins
and
ret
push
inc
mov
call
out
lds
aam
inc
gs
jmp
mov
pop
sub
aam
adc
mov
sbb
cmc
mov
mov
cdq
push
push
pop
mov
fwait
and
mov
cmp
adc
test
cwde
je
adc
jb
test
xor
push
cmps
shl
daa
mov
(bad)
jg
pop
idiv
loopne
xchg
push
std
mov
dec
pushf
lods
jno
sbb
inc
fmul
into
das
ins
out
cwde
push
jb
mov
xchg
mov
add
or
aaa
and
xchg
sar
ds
dec
out
pop
and
mov
out
ret
in
mov
mov
ror
lods
xor
aaa
cmp
adc
les
mov
pusha
sub
movs
pop
aam
xor
xchg
popa
sbb
push
and
xor
add
fsub
leave
call
out
out
daa
cmp
dec
pop
inc
aaa
push
push
sbb
rcr
sub
loop
retf
adc
shl
adc
cmp
xor
in
jg
out
aas
and
sti
(bad)
jmp
push
dec
movs
test
or
dec
sub
sti
or
pop
inc
je
sti
lds
addr16
dec
jno
test
hlt
imul
enter
push
mov
cs
shr
mov
sub
add
add
pop
rol
mov
mov
in
inc
mov
pop
xor
adc
(bad)
mov
in
sbb
inc
call
xor
in
jo
dec
cs
push
mov
test
loope
add
data16
dec
js
retf
je
(bad)
stos
push
fiadd
xchg
test
sbb
mov
inc
adc
xor
inc
and
out
or
and
xor
add
or
dec
and
cmps
pop
push
nop
mov
mov
and
mov
aas
fstp
sar
jp
dec
mov
fs
test
stos
jecxz
mov
(bad)
sbb
mov
jg
mov
jns
nop
(bad)
jmp
dec
int3
mov
mov
adc
push
repnz
out
iret
cmc
pop
inc
call
sbb
jecxz
jp
(bad)
sar
movs
xchg
out
int3
mov
(bad)
cmp
inc
dec
push
push
test
ins
adc
call
ins
or
mov
mov
cmps
stos
mov
mov
push
cdq
push
sub
cmp
stc
sbb
jb
movs
push
xor
dec
imul
into
test
cld
stos
adc
xor
or
hlt
cmp
inc
out
cmp
mov
test
or
mov
push
cmc
mov
ja
dec
sbb
cld
aad
mov
push
rcr
cmp
fmul
ret
scas
pop
xor
jo
cld
es
add
mov
pop
cli
inc
mov
in
fdiv
in
sbb
adc
idiv
call
add
div
push
retf
xchg
leave
ins
cld
imul
xchg
mov
fistp
add
nop
repz
inc
mov
inc
jp
in
xor
ret
dec
pusha
mov
sbb
push
(bad)
sbb
(bad)
sub
test
inc
out
ins
inc
in
jg
loop
pop
jae
or
ret
cmp
dec
and
adc
lds
dec
out
jge
gs
and
(bad)
xchg
aaa
in
and
push
xlat
and
adc
in
xacquire
(bad)
test
lahf
push
sub
jne
jno
lods
cmc
ret
pushf
fld
cld
and
popa
ss
ror
mov
xor
fadd
xchg
adc
pop
arpl
sar
xor
dec
add
std
dec
aas
mov
xchg
rol
inc
daa
sbb
js
jnp
aam
dec
std
jp
pop
mov
(bad)
test
cli
push
sub
push
inc
pop
fwait
int3
jns
mov
sub
cwde
sbb
adc
mov
enter
cmp
ror
jecxz
cld
mov
out
adc
arpl
sbb
jae
cld
pop
sbb
sub
push
mov
push
int
scas
mov
sub
rcl
sbb
cs
lods
pop
dec
ss
test
fucom
ins
mov
cdq
mov
jo
ret
push
in
add
sbb
inc
jae
fcomp
adc
adc
loopne
xor
mov
(bad)
icebp
add
mov
xchg
push
jmp
nop
dec
call
mov
mov
xor
push
mov
xor
add
inc
in
or
fst
inc
stos
arpl
shl
enter
fs
pop
xchg
push
xchg
retf
pop
dec
jl
cli
mov
add
clc
xor
leave
jmp
xchg
push
in
adc
fdivp
iret
pop
repz
mov
rcr
pop
lahf
int3
rcl
inc
add
jl
bound
xor
pop
lea
jnp
inc
shr
sbb
pop
stos
or
arpl
out
(bad)
mov
loop
push
repnz
call
das
out
adc
imul
sub
xlat
cmps
push
ins
movs
mov
jecxz
jl
lock
int3
or
adc
or
jnp
jmp
out
test
cmp
ins
dec
sar
push
jl
jne
leave
scas
stos
mov
pop
add
add
cs
dec
(bad)
fbstp
sbb
neg
in
test
adc
or
inc
std
daa
call
addr16
cmp
daa
push
and
jno
les
loope
jne
sti
ss
cmp
inc
ss
shl
test
and
mov
jnp
iret
outs
call
aad
fcomp
ja
setg
push
addr16
sbb
les
dec
push
cmp
in
cld
(bad)
leave
cwde
aaa
mov
inc
cmps
adc
mov
sbb
push
data16
add
imul
out
jge
cmps
cmp
imul
add
cmp
out
dec
push
test
pop
je
push
mov
lock
lods
inc
idiv
fucomp
and
dec
add
sbb
xor
inc
loope
push
ret
(bad)
or
mov
mov
add
cmp
bound
outs
(bad)
jle
sub
ror
jp
mov
popaw
popa
popa
mov
jg
sub
lahf
push
(bad)
retf
shl
les
xchg
adc
cmp
out
add
sbb
out
pop
scas
cdq
call
(bad)
adc
(bad)
cmp
lea
adc
test
sub
(bad)
xchg
add
and
xchg
pusha
push
retf
mov
mov
outs
jb
fiadd
in
jbe
cli
aas
ss
(bad)
fmul
sub
cli
repnz
les
adc
out
cmp
sub
xor
lods
sub
jnp
xor
push
addr16
mov
les
sbb
pop
xor
movs
rdpmc
retf
cmp
sub
jmp
fild
cmc
outs
sub
or
fild
jl
ficomp
push
lods
inc
xchg
je
mov
(bad)
sub
xor
test
push
dec
and
loopne
cmp
cmp
cdq
mov
adc
test
mov
dec
xor
inc
cmp
das
popf
inc
scas
shl
cdq
add
jge
lock
sbb
pop
sub
and
push
sub
jmp
scas
mov
daa
out
mov
ins
push
push
cmc
neg
xlat
jge
rcl
pop
jmp
ret
scas
push
leave
jne
adc
jo
pop
pop
inc
adc
xor
xor
lods
push
popf
scas
push
dec
in
lahf
cmps
or
movs
mov
test
xchg
cli
mov
call
jecxz
imul
call
icebp
ror
pop
pop
sbb
clc
call
retf
add
(bad)
clc
xor
ret
lods
sar
mov
fbld
or
aas
fnsave
stos
arpl
jp
inc
sub
xchg
jecxz
cli
pop
ja
or
and
inc
pop
outs
push
fnstenv
(bad)
ja
fcomp
add
xchg
retf
imul
mov
push
dec
mov
pand
sbb
int
fld
cmps
lock
or
xor
jp
push
jg
cmp
cmp
repnz
mov
stos
das
xor
aam
idiv
call
inc
sub
mov
sbb
fincstp
mov
loop
inc
(bad)
cmps
out
mov
fs
sub
xchg
pop
adc
mov
dec
ret
cld
mov
std
sub
jge
dec
adc
xor
mov
stos
add
fcom
sub
sar
xchg
stos
sbb
add
daa
jb
push
xchg
in
pop
xchg
clc
push
cwde
lods
inc
div
cmp
xchg
fs
mov
scas
imul
daa
or
ret
pop
test
and
(bad)
pop
fcom
jne
lock
jp
mov
xchg
and
cmps
cld
and
loopne
dec
dec
cdq
(bad)
inc
(bad)
cmp
sub
out
retf
test
lods
push
iret
or
out
test
pop
adc
test
push
mov
aam
loop
inc
mov
in
test
add
sub
and
dec
ins
lock
xor
push
sahf
cld
xchg
mov
pop
xor
xchg
aas
loope
adc
push
or
adc
stc
and
mov
inc
repz
sahf
lea
je
mov
shl
and
std
inc
add
add
int
push
xchg
mov
imul
mov
(bad)
outs
neg
jge
add
sbb
inc
(bad)
pop
pop
rcl
jge
cmps
cmp
idiv
jl
neg
dec
inc
in
sbb
inc
in
inc
pop
fidiv
js
out
push
jb
xor
add
and
inc
pop
icebp
add
rcr
pop
mov
cmp
pop
out
rcr
add
push
mov
jp
xlat
jge
adc
gs
mov
push
mov
add
std
sti
cmps
adc
popf
jnp
aas
adc
jl
data16
and
add
or
inc
xchg
js
xchg
inc
jae
push
xor
cmp
popf
cwde
pop
jmp
lods
dec
push
jns
dec
push
mov
fwait
and
lods
jmp
add
lea
push
pop
retf
jmp
aaa
cld
and
jmp
cmp
or
mov
pop
adc
arpl
xor
lahf
xchg
rcr
adc
mov
jns
sbb
and
sahf
stos
pop
sbb
mov
rol
mov
inc
jle
data16
or
and
int
aaa
sbb
adc
sbb
cmp
adc
in
test
inc
and
fimul
pop
cwde
js
mov
das
mov
gs
adc
mov
or
daa
popa
sbb
outs
and
pop
fidiv
(bad)
aas
fnstenv
push
scas
arpl
mov
xchg
pop
addr16
ins
jb
and
mov
or
mov
call
xor
jge
mov
push
xchg
mov
push
pop
das
mov
dec
jecxz
sub
jbe
call
push
jb
mov
jle
imul
addr16
cld
adc
mov
mov
adc
(bad)
cmp
jns
ds
je
jno
test
pop
cdq
add
jp
sub
ror
adc
add
cwde
adc
push
sub
mov
leave
sbb
ja
in
mov
adc
pop
xchg
pop
call
mov
cmp
xor
inc
mov
into
hlt
mov
mov
arpl
sub
retf
lods
call
push
inc
xor
pop
lods
xor
loopne
sahf
fmul
jae
stos
xchg
call
clc
mov
lods
repnz
fsubp
or
icebp
sar
and
mov
pop
dec
addr16
mov
neg
js
mov
(bad)
into
outs
loope
sbb
nop
ins
enter
test
rcr
retf
mov
imul
ret
mov
jnp
fisttp
ss
add
xchg
ficomp
dec
fdivr
or
call
movs
int
sbb
mov
fucom
mov
mov
mov
dec
jb
push
jno
ret
aad
setne
xor
jmp
sti
jb
mov
out
pop
mov
lods
adc
(bad)
jmp
rcl
xchg
lods
and
rol
inc
mov
xchg
imul
enter
inc
fcmove
sub
aas
jecxz
pop
pop
cmps
(bad)
pop
push
test
xor
push
lea
push
or
xchg
xor
cld
sub
sub
sbb
add
dec
sbb
enter
add
lods
mov
mov
cmp
mov
xor
into
jo
sbb
pushf
rcr
jns
std
jo
sbb
mov
mov
aaa
retf
repz
das
shl
scas
jmp
adc
jo
xor
inc
xchg
mov
sbb
push
test
pop
stos
mov
les
sahf
jmp
enter
bound
pop
xor
out
or
push
mov
loop
aam
call
add
pop
add
outs
pop
dec
sahf
rcl
inc
sbb
push
rcl
mov
test
mov
adc
inc
and
int
adc
dec
je
sub
cli
sbb
test
mov
pop
test
adc
pop
cmp
xor
mov
cmps
mov
test
ret
push
jl
add
add
sbb
shl
std
xor
ja
in
mov
icebp
mov
retf
inc
and
stos
push
pushf
shl
mul
jmp
les
cs
ffree
xchg
push
fisubr
sub
sbb
add
mov
sub
adc
bound
cmp
mov
sbb
icebp
dec
sbb
and
popf
nop
inc
lahf
push
out
inc
pop
enter
jae
retf
sbb
int
sub
add
outs
mov
push
retf
inc
mov
mov
outs
je
push
mov
jns
(bad)
stos
ins
in
xchg
jno
jg
mov
lods
inc
xor
xchg
jne
mov
retf
xchg
jae
popa
loope
les
push
iret
xlat
stos
sub
push
gs
test
cmp
fistp
je
lea
jns
pop
mov
jne
imul
div
inc
mov
imul
xchg
jo
aad
mov
dec
aaa
add
(bad)
pusha
inc
sbb
mov
idiv
out
in
cli
sbb
fcomp
mov
or
sub
out
sub
inc
repz
repnz
cwde
dec
jmp
inc
test
cmp
jnp
push
mov
stc
lods
outs
icebp
and
repz
ror
jg
rcr
inc
retf
lds
out
jo
inc
sub
leave
fsub
dec
pop
adc
stos
rol
setns
repz
cmp
imul
and
push
pusha
rol
and
jmp
fldcw
and
in
sbb
inc
in
add
mov
jo
stos
or
(bad)
sub
call
xchg
jl
mov
inc
cwde
int
sbb
ins
ins
retf
mov
xchg
dec
imul
jge
mov
add
fnstenv
or
sbb
mov
cmp
shr
dec
xchg
outs
adc
push
ds
call
inc
fldenv
imul
jmp
add
iret
cmp
push
in
int3
dec
dec
mov
cmp
mov
rol
mov
inc
loop
pop
sbb
mov
fstp
adc
mov
fdivr
dec
inc
mov
and
cmps
inc
mov
clc
mov
push
cmp
and
stc
mov
dec
mov
or
or
mov
mov
fs
cmp
xor
push
pop
mov
loop
or
popa
(bad)
jmp
add
or
inc
lods
mov
(bad)
push
push
pop
push
push
lahf
sub
xor
xor
jl
(bad)
cmp
xor
dec
adc
sbb
test
adc
(bad)
in
pushf
(bad)
jo
push
pop
or
dec
shr
in
push
lahf
mov
in
movs
clc
out
icebp
pop
sbb
xchg
(bad)
lock
push
xchg
arpl
pop
imul
cmp
add
cmp
fcmovu
ds
pop
(bad)
stc
xor
fnstenv
jb
sahf
scas
test
push
jp
push
jle
xor
or
inc
add
fist
inc
loop
jae
mov
mov
xchg
push
rcl
push
dec
push
dec
sti
std
out
xchg
(bad)
(bad)
int
jns
dec
add
cld
sti
pop
sbb
lahf
xchg
lods
lahf
addr16
retf
inc
sahf
add
ret
push
pop
sub
mov
push
stc
cdq
out
xchg
(bad)
out
pop
inc
out
in
pusha
adc
jns
dec
dec
jo
enter
fsub
imul
int
xor
push
and
das
xor
out
jb
xchg
xor
js
or
and
jmp
rcl
mov
inc
shr
jge
dec
mov
cwde
xor
mov
mov
inc
(bad)
inc
inc
lds
or
js
leave
jg
dec
xchg
ds
jg
mov
lods
add
cmc
outs
out
push
pop
mov
sbb
cdq
arpl
push
mov
jmp
mov
ret
adc
and
adc
lods
test
xchg
dec
out
stc
mov
int
pop
mov
xchg
inc
pop
cmp
push
in
fisub
inc
mov
pushf
not
cdq
inc
and
test
cmp
neg
sub
push
xor
imul
or
sbb
or
adc
cs
les
xchg
adc
imul
lea
xlat
jle
xchg
fcmovb
call
lea
dec
scas
dec
sbb
xchg
jmp
cmp
cmps
or
sbb
aam
sub
mov
outs
mov
test
sbb
smsw
or
xor
cmp
cmp
jne
jbe
jnp
mov
xchg
push
stc
mov
mov
test
leave
and
sbb
inc
out
pop
push
(bad)
sub
cmp
in
inc
dec
loopne
push
inc
in
and
jmp
sar
lods
inc
idiv
mov
hlt
out
jecxz
or
add
retf
mul
and
ds
cmps
cmc
icebp
cmp
out
add
add
es
sbb
xchg
xor
fcom
mov
or
movs
lods
xchg
or
mov
fmul
out
sar
adc
lock
gs
(bad)
or
in
fucomi
xor
retf
pop
aas
dec
retf
and
gs
fsubr
mov
sub
sahf
adc
ss
jb
sbb
test
jg
add
push
scas
ret
mov
ja
aam
shr
lods
push
mov
movs
cmp
inc
jo
pop
test
in
pusha
das
pop
fmul
pop
mov
and
xchg
push
adc
nop
jne
sbb
mov
cmps
mov
lods
out
inc
imul
mov
(bad)
jp
dec
adc
repz
sbb
push
cmp
loop
je
cli
test
mov
scas
in
lea
mov
sub
mov
inc
mov
in
rcr
pop
ret
or
cmps
ret
call
and
(bad)
(bad)
loop
pusha
out
add
sub
mov
xchg
dec
jns
add
test
les
clc
xchg
inc
sub
movs
xchg
jle
xor
xor
or
mov
cmp
or
push
jmp
inc
pop
adc
test
iret
xor
aad
adc
and
xchg
cmps
sbb
inc
xor
in
jmp
fwait
popf
sub
mov
ror
xchg
pop
mov
aam
push
fcos
xchg
movs
mov
pop
adc
push
leave
mov
aas
sbb
sbb
ins
int
mov
or
call
rol
sub
mov
jnp
mov
aaa
je
(bad)
rcl
jmp
jbe
retf
push
repz
loopne
sub
inc
(bad)
xchg
cmp
xchg
(bad)
mov
sub
in
les
dec
adc
adc
in
and
inc
sub
std
push
ja
xchg
ror
push
cli
in
stc
aaa
test
mov
gs
jg
push
retf
xchg
shr
sbb
cmp
inc
and
sbb
test
ja
sbb
pop
cmps
or
inc
mov
dec
sub
hlt
push
aas
fdivr
cmp
pop
adc
xor
push
lea
pop
movs
xchg
push
outs
lock
movs
xor
fidivr
mov
push
lea
ret
sahf
xchg
mov
mov
cld
aas
mov
retf
inc
cmp
xchg
xor
or
sub
shl
inc
mov
sub
sbb
jne
add
stc
inc
nop
mov
or
test
stos
movs
add
aas
inc
adc
mov
pop
mov
mov
jmp
xchg
fstp
xor
icebp
test
cmp
arpl
into
dec
popa
sub
je
popf
mov
mov
pop
push
sbb
mov
fisub
fld
shr
out
test
mov
and
inc
pop
enter
push
jmp
sub
xchg
jmp
movs
cmp
cmp
nop
jge
ja
mov
imul
dec
(bad)
(bad)
(bad)
shr
cwde
add
jb
xor
and
inc
sahf
ins
rcl
dec
xchg
sbb
aam
rcl
push
lahf
mov
aaa
and
jg
retf
fbstp
cmp
xchg
jne
pop
(bad)
lock
ins
or
inc
and
jae
mov
push
nop
test
cmp
call
(bad)
int3
jp
or
mov
add
leave
dec
ss
scas
push
leave
jb
ret
mov
je
or
jp
sti
les
dec
xor
push
mov
adc
and
push
and
nop
inc
pushf
push
cs
fs
mov
fs
push
sub
movs
fistp
test
pop
and
add
or
dec
int3
or
shl
lods
mov
leave
adc
cmp
mov
adc
push
test
sub
(bad)
ds
cmp
mov
inc
loop
jmp
pop
cld
xor
push
xchg
xor
mov
pop
imul
add
xchg
jns
mov
fwait
jmp
jle
sahf
push
ret
and
daa
fs
or
sti
fisub
gs
cdq
cld
cdq
movs
(bad)
(bad)
dec
(bad)
adc
jns
in
sbb
cmp
jmp
aaa
push
xor
scas
cdq
popf
nop
xor
push
ss
inc
pop
fadd
lea
sub
rol
sub
inc
(bad)
xor
cmc
aas
mov
push
xchg
lods
mov
pop
and
psubsw
arpl
adc
mov
sbb
ret
and
mov
cmps
or
or
and
jnp
lds
popa
or
mov
mov
or
shl
mov
out
sub
mov
mov
xchg
daa
push
xchg
cwde
and
mov
xor
addr16
retf
dec
aas
fucomp
fsubr
into
dec
hlt
xor
iret
jmp
sub
add
or
in
or
adc
xchg
mov
push
jge
adc
mov
and
in
movs
mov
popf
sub
push
and
xor
inc
ret
jb
mov
jge
pusha
mov
adc
cmp
xchg
dec
pop
mov
push
pop
or
call
(bad)
sbb
and
shr
mov
int3
or
fimul
leave
ror
ins
das
mov
mov
jecxz
lea
pusha
retf
add
and
in
xor
xchg
cmp
imul
dec
mov
jns
retf
hlt
lahf
sbb
mov
ja
lds
in
pop
out
add
sbb
mov
shl
adc
test
ja
out
je
fdivr
dec
jmp
jmp
sbb
gs
jl
xchg
jmp
mov
bound
std
movs
add
lods
sahf
retf
adc
add
mov
mov
push
hlt
push
dec
pop
inc
push
cdq
movs
mov
mov
mov
lahf
xor
idiv
sbb
in
mov
sub
mov
cdq
and
add
das
jmp
jg
call
fbstp
jb
lods
imul
loop
outs
push
push
addr16
test
out
das
mov
or
mov
and
fstp
sbb
xchg
movs
dec
ins
sar
pop
pusha
test
push
imul
in
xor
push
and
div
xchg
push
jge
dec
out
jg
inc
inc
aam
pop
dec
add
add
loopne
pop
int3
cmc
inc
(bad)
mov
xor
imul
stos
cmp
push
xchg
dec
pushf
call
loope
gs
rcl
mov
dec
sub
cmps
aas
mov
mov
dec
(bad)
pop
es
dec
xor
sub
cli
sub
imul
push
adc
pop
jo
cmp
out
dec
push
(bad)
sbb
(bad)
sub
idiv
dec
inc
idiv
pop
inc
jecxz
push
push
icebp
xor
loopne
sub
je
cmps
jno
(bad)
and
popa
sub
clc
sti
fsubr
out
out
and
movs
inc
mov
cwde
push
jo
mov
cld
stc
out
xor
jmp
xchg
data16
daa
sahf
or
outs
adc
loop
sbb
adc
in
je
jb
and
into
fwait
adc
push
std
push
fadd
inc
add
jne
pop
pop
(bad)
jns
sbb
mov
dec
(bad)
(bad)
dec
das
push
xchg
sbb
add
push
adc
das
fsub
inc
xlat
and
(bad)
mov
jns
push
lods
shl
outs
call
mov
jae
in
sbb
xchg
cld
pop
cmc
cmp
icebp
pop
mov
push
pushf
sub
push
sub
fcomp
xor
cld
sbb
js
add
mov
push
inc
sbb
mov
jmp
cmps
fdivr
dec
rcr
ficomp
jle
cwde
or
scas
pop
add
jl
imul
push
inc
ins
xor
add
jp
jbe
push
hlt
dec
fidiv
ja
pop
ins
sub
mov
xchg
inc
mov
cmps
mov
or
jmp
push
cdq
push
das
mov
or
push
jo
ret
cwde
sub
inc
add
xor
lock
adc
popa
sbb
fiadd
adc
ror
or
and
cmc
lods
xor
(bad)
jae
fisub
jmp
fist
fwait
jae
dec
xor
daa
pop
dec
sub
nop
std
mov
fwait
push
ins
adc
fsubr
sbb
push
xchg
adc
xor
popa
dec
mov
xchg
imul
xor
cmp
cmp
(bad)
mov
mov
jo
push
mov
jbe
jecxz
popf
adc
aam
fwait
lods
push
inc
jl
pop
sti
lock
pop
xchg
mov
ins
pop
cwde
ret
cdq
mov
inc
jg
jecxz
sbb
pusha
pop
mov
scas
xchg
cdq
lahf
and
jns
test
fld
dec
fwait
int
pop
xor
pop
mul
or
pop
jmp
cmp
or
push
mov
dec
push
out
dec
inc
idiv
dec
push
loop
inc
pop
out
inc
dec
jmp
stos
push
push
stc
push
dec
rol
or
out
mov
push
mov
mov
jbe
cli
xchg
inc
mov
stc
shl
jb
cmp
add
sbb
leave
pop
push
xor
test
out
sbb
push
lods
or
ins
mov
aad
test
lods
or
leave
push
or
sar
jo
fwait
jb
jge
inc
jle
test
shl
sahf
pushf
idiv
or
sub
out
mov
jb
push
call
ins
mov
enter
inc
push
gs
std
push
outs
cdq
hlt
xchg
stos
pop
xor
pop
jbe
mov
adc
test
inc
leave
aad
jmp
call
add
daa
xchg
push
xchg
(bad)
adc
leave
(bad)
adc
loop
push
loop
push
sbb
inc
sbb
es
(bad)
dec
popa
(bad)
jns
mov
push
sub
cmp
cmp
inc
es
add
into
retf
idiv
sbb
in
test
lahf
test
or
outs
push
push
inc
in
jp
xchg
dec
std
in
add
dec
jnp
push
inc
mov
mov
stos
fadd
fwait
lea
dec
dec
and
nop
xor
xchg
lods
pop
aam
js
xor
lods
fsub
mov
shl
(bad)
cmp
inc
cmp
mov
push
cmp
cmp
xor
adc
dec
xor
movs
imul
mov
cmps
mov
push
mov
cmc
bound
sub
mov
retf
pop
xchg
jb
popf
cld
into
inc
aad
push
jg
mov
jg
jp
jno
movs
jnp
push
push
push
add
cmps
mov
cwde
jmp
cmp
jmp
cld
sbb
xchg
inc
and
dec
je
jl
dec
push
xchg
aad
push
sub
dec
arpl
scas
xor
gs
stos
ins
pop
mov
or
rcl
push
scas
or
int3
pop
aaa
mov
pop
into
and
pop
dec
repz
(bad)
mov
sub
test
adc
mov
je
and
inc
pop
push
call
mov
mov
sbb
jb
loope
dec
(bad)
retf
addr16
lahf
inc
cmp
cmp
nop
jno
dec
(bad)
ja
es
mov
arpl
sub
cli
dec
(bad)
aam
or
pop
ja
mov
retf
add
dec
retf
xor
movs
pop
mov
cmp
cdq
jmp
es
mov
inc
sbb
cmp
or
cmc
add
jl
add
stos
cs
jb
push
mov
(bad)
(bad)
adc
fcmovnb
and
jo
fs
test
pop
adc
push
scas
(bad)
(bad)
sbb
sub
aad
js
pop
xor
enter
xchg
cdq
xchg
shl
loop
xchg
jg
sar
out
adc
adc
icebp
fisub
aaa
(bad)
pop
pop
movs
mov
adc
test
sub
xchg
sbb
push
(bad)
cmp
out
dec
inc
idiv
dec
inc
repnz
dec
out
and
in
and
dec
sar
lods
push
idiv
sub
push
sub
lock
pop
xor
inc
pop
inc
adc
pop
arpl
in
sar
pop
dec
push
and
push
les
outs
adc
inc
dec
(bad)
lods
add
sbb
loope
enter
call
ret
cmp
cmp
je
pop
fldenv
mov
inc
jno
jo
sahf
outs
imul
and
gs
mov
(bad)
fisub
xor
pop
dec
push
enter
cmps
imul
sub
xor
rol
aas
and
loopne
sub
scas
shr
(bad)
mov
aas
mov
cmp
pop
out
xor
lods
les
mov
inc
sub
xlat
push
std
add
dec
pusha
cmp
(bad)
int3
outs
sub
cld
aas
sahf
int
dec
cli
sub
test
jp
ins
jmp
iret
fcom
int3
mov
inc
in
test
jmp
movs
or
adc
adc
add
repz
push
adc
iret
mov
cdq
sub
adc
enter
dec
sbb
jo
and
mov
add
jno
xchg
push
xor
mov
rcr
fs
or
cmps
fcom
and
les
imul
cdq
pop
sub
js
aad
sti
(bad)
push
mov
or
add
shr
out
int3
jb
dec
mov
iret
sbb
aam
jae
cmp
push
fnstsw
add
fistp
sbb
test
cmc
les
jl
add
mov
push
in
jbe
mov
mov
loopne
mov
jecxz
sbb
(bad)
jbe
push
mov
imul
dec
jbe
or
xor
sub
mov
sbb
mov
inc
jne
and
adc
lods
cmp
loopne
inc
or
adc
test
sub
xlat
bound
cmp
or
jle
dec
and
jge
adc
sbb
imul
add
inc
ins
push
imul
mov
(bad)
(bad)
call
pop
out
repz
rcl
jne
ret
adc
jae
xor
jnp
xor
push
(bad)
shl
fisubr
xchg
jb
jmp
inc
mov
out
dec
and
xor
xor
(bad)
int
jg
sahf
adc
push
add
xor
repnz
jg
xor
and
lahf
pop
fimul
lea
inc
cmp
in
xlat
pop
jb
lods
sbb
push
add
xor
imul
shl
packssdw
pop
mov
push
fsubr
lahf
retf
jmp
stc
(bad)
into
fs
cdq
mov
sub
hlt
sbb
cmp
push
aad
dec
pop
sub
push
pusha
cli
pusha
mov
and
cld
sbb
xchg
pop
std
mov
sub
aam
aad
icebp
rcl
shl
or
inc
jns
out
das
je
pop
sti
cmp
movs
jmp
jmp
loop
cmp
mov
pop
dec
push
mov
dec
in
cmp
scas
xchg
loopne
and
pop
sub
cld
and
sub
imul
pop
in
and
mov
dec
inc
fiadd
pop
out
sub
stc
push
data16
mov
adc
and
mov
and
ret
out
pop
xchg
adc
call
mov
dec
inc
sar
ret
outs
adc
outs
aaa
sar
shl
xchg
xlat
or
aad
push
out
jge
js
and
clc
aaa
call
sar
mov
inc
push
aad
aad
inc
fcomp
xor
cmp
pop
ret
call
daa
inc
xchg
push
fst
js
push
cdq
movs
popa
int3
xor
ds
sbb
scas
cmp
jne
pop
(bad)
shl
cld
cmc
call
mov
push
fsubrp
ja
add
out
ins
adc
cmp
popa
div
push
xchg
push
or
jns
ds
(bad)
lea
push
rcr
fwait
mov
jp
and
push
clc
push
test
jp
adc
mov
repnz
fwait
pop
mov
mov
loop
or
clc
js
shr
shr
sbb
sub
lods
dec
mov
mov
mov
test
push
ins
sub
fucomp
sahf
cmp
in
or
sti
das
(bad)
push
fadd
xor
in
sub
or
cmp
inc
lods
sar
mov
sbb
push
mov
loopne
or
imul
mov
int
or
xor
je
leave
sbb
cwde
and
cmp
add
add
push
push
lahf
or
jae
sbb
push
stos
repz
jae
adc
mov
inc
cld
cld
jmp
cli
js
movs
xchg
lods
sub
in
(bad)
(bad)
add
lock
jl
repz
inc
les
lock
jb
xchg
aaa
mov
inc
jmp
(bad)
jns
loop
data16
sbb
adc
js
imul
xchg
mov
push
popa
pusha
dec
xor
xchg
dec
mov
movs
ins
loop
test
jae
dec
push
jle
dec
div
mov
mov
lahf
adc
sahf
add
adc
jecxz
pusha
aas
inc
daa
inc
test
fcmovne
cmp
jg
test
in
cmc
add
(bad)
aaa
add
cmp
out
loop
addr16
dec
daa
mov
and
out
inc
rcl
xor
call
lahf
xor
xlat
cld
aaa
cmc
fmul
bound
or
inc
dec
push
ds
mov
xchg
dec
sar
icebp
sbb
shl
xchg
cwde
push
or
daa
sbb
mov
in
and
pop
and
iret
push
idiv
jne
ja
push
imul
sbb
out
xchg
pop
cmp
push
sbb
fcmovu
xor
shr
xchg
xchg
fidiv
inc
xlat
cmp
leave
mul
sbb
fild
push
cwde
int3
jecxz
(bad)
dec
jecxz
test
sbb
jmp
cmp
shl
ins
(bad)
jnp
aaa
nop
push
jg
mov
adc
test
cmp
in
mov
mov
loop
and
repnz
retf
pop
sbb
sti
inc
push
mul
xor
cmp
das
cmp
dec
inc
cmp
loop
jg
pop
rcr
mov
mov
cli
sub
xlat
call
mov
(bad)
pop
jb
fiadd
push
add
sub
mov
mov
mov
les
and
mov
cdq
mov
xor
out
jo
stos
dec
out
push
cmp
inc
loopne
and
cwde
test
int
cmps
dec
xor
aam
ds
push
pop
iret
mov
fnsave
add
push
or
pop
jno
adc
dec
scas
ds
hlt
pop
popa
(bad)
sar
or
mov
ins
dec
nop
dec
ins
icebp
shl
xchg
push
jo
inc
mov
push
ds
pusha
or
push
mov
mov
icebp
sbb
xchg
cmp
daa
lods
dec
lahf
cdq
pop
push
test
out
cmc
(bad)
int
arpl
mov
pop
sub
scas
pop
fwait
pop
dec
push
cmp
and
addr16
imul
mov
and
cli
pop
aas
das
pop
jno
xchg
pop
dec
push
fwait
cmc
sub
std
cdq
dec
dec
addr16
int3
push
ins
xlat
dec
bound
sbb
fcomip
retf
jno
cdq
ror
dec
push
xchg
bound
push
es
loop
mov
push
push
jge
(bad)
popa
dec
arpl
push
dec
adc
ja
cmp
outs
jl
add
jmp
push
fdiv
lds
adc
xor
jnp
shl
xor
shl
dec
pushf
pop
mov
aad
and
push
jmp
scas
fsubr
or
xor
in
adc
addr16
ja
div
xor
mov
adc
out
jno
add
cmc
fsubr
xchg
imul
pop
cmp
pop
mov
pop
outs
mov
or
sub
xchg
outs
mov
cmp
hlt
mov
fs
add
mov
pop
dec
cld
adc
sbb
das
push
or
test
pop
jne
sbb
(bad)
faddp
hlt
loope
ins
jne
fnstenv
fwait
push
xlat
mov
pop
or
push
pusha
int3
or
jl
test
pop
aaa
pop
iret
xor
std
and
mov
test
jmp
mov
mov
xor
mov
mov
ins
dec
push
xchg
xchg
jmp
cdq
out
dec
adc
loopne
ins
push
mov
dec
mov
gs
jno
es
push
stos
jle
and
outs
mov
jo
into
movs
mov
lds
sbb
and
mov
add
adc
shl
lahf
ja
pusha
or
daa
pop
movs
mov
test
fnsave
adc
xchg
or
lahf
or
pop
pop
cmps
pop
jno
mov
adc
sub
mov
fbld
es
xor
dec
dec
inc
push
mov
lods
out
repnz
sti
sbb
test
pusha
(bad)
sbb
(bad)
imul
add
fscale
adc
std
loopne
cdq
mov
inc
inc
clc
in
push
neg
dec
popa
pop
sub
xchg
clc
sub
icebp
aaa
push
ins
les
imul
add
jns
adc
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
push
inc
mov
or
inc
jbe
dec
inc
inc
or
cmp
inc
mov
dec
push
idiv
pop
push
out
pop
push
imul
ins
inc
xchg
adc
dec
inc
(bad)
cmp
inc
sbb
imul
pop
push
out
pop
xor
sub
jg
mov
pop
popa
test
inc
imul
lea
xor
ret
(bad)
sbb
xor
ret
xor
xchg
sbb
jo
xor
shr
shl
sub
ins
addr16
int
loopne
cmp
mov
call
cld
(bad)
xor
and
inc
loop
push
(bad)
ins
or
cli
mov
fist
xor
jge
and
fimul
imul
push
rcl
int3
(bad)
push
ret
ficom
add
sbb
loop
xor
adc
imul
cmp
jl
add
fs
jmp
sub
fldenv
inc
sbb
nop
cmp
xor
mov
pop
fistp
cmp
rol
jmp
mov
pop
loop
jp
cmp
test
sbb
imul
xchg
lods
lods
popa
retf
dec
cmp
mov
add
xchg
shl
in
sub
push
and
mov
mov
mov
add
mov
movs
test
popf
jno
jmp
push
jae
sub
inc
movs
pop
mov
sbb
and
outs
call
daa
imul
aaa
sub
fsubr
xchg
adc
test
cld
lods
jmp
movs
or
out
adc
hlt
out
daa
inc
(bad)
outs
jl
imul
stos
jl
movs
in
mov
sbb
add
inc
mov
pop
jne
add
dec
enter
outs
sbb
dec
adc
mov
nop
mov
pop
pop
repz
pop
aad
jp
jb
or
mov
das
or
cmp
js
cwde
mov
mov
pop
jecxz
and
pop
clc
ret
jle
adc
daa
inc
shl
mov
icebp
jno
cmp
mov
adc
add
and
mov
pop
les
sub
and
loope
adc
pop
loopne
enter
test
and
aaa
fdiv
clc
inc
xlat
cwde
cmps
mov
push
push
cmc
mov
in
loope
jo
ds
lock
jl
sbb
in
or
sub
mov
sub
add
lods
pop
and
pop
jge
imul
pusha
out
pop
push
out
pop
adc
sub
adc
cmp
cmp
test
rcr
dec
add
rcl
mov
shr
and
add
pop
int
scas
lods
imul
fcomp
in
add
jns
cs
cmp
jno
out
or
jae
and
fadd
cld
cmc
add
cmps
pop
push
pop
mov
loope
cmp
mov
mov
cli
das
lods
mov
pop
arpl
xchg
mov
mov
out
hlt
push
dec
adc
out
mov
outs
iret
js
addr16
xchg
dec
gs
pop
inc
or
or
adc
mov
or
jo
loop
in
mov
add
fucom
stos
(bad)
fmul
int
jg
stc
aam
out
xchg
and
(bad)
(bad)
xchg
push
aaa
sub
mov
or
inc
sub
inc
cmc
adc
sbb
and
ja
loope
sbb
sub
sbb
dec
in
in
dec
mov
ror
jnp
jne
stos
add
pushf
inc
aaa
les
aaa
xchg
enter
out
ror
loopne
fwait
jmp
mov
dec
xor
mov
aaa
lea
out
mov
mov
in
push
cld
push
gs
xchg
retf
mov
dec
outs
arpl
sub
nop
fwait
pop
inc
push
hlt
xchg
out
in
jno
fidivr
mov
mov
push
mov
push
add
xchg
into
js
test
sbb
jmp
hlt
fwait
retf
cwde
fs
int
or
push
sub
ret
cmp
push
and
dec
ret
sub
ret
or
pop
int
pop
pop
lods
inc
adc
mov
retf
imul
hlt
mov
icebp
cmps
pop
push
int3
lahf
ror
call
aaa
hlt
push
call
inc
add
xor
mov
mov
outs
push
test
dec
out
(bad)
sti
xlat
dec
(bad)
leave
sbb
or
(bad)
pop
xchg
xlat
push
inc
jmp
xor
xor
imul
ret
and
sbb
push
adc
and
stos
mov
mov
xor
(bad)
fld
mov
call
fisubr
cmps
xor
fnstsw
xor
ret
adc
retf
inc
out
cmp
out
mov
jmp
cmp
lods
fild
cmp
adc
sar
ja
inc
pusha
mov
jp
icebp
shr
mov
or
je
int
jnp
fs
int3
test
mov
jmp
sbb
sbb
shr
xchg
(bad)
in
inc
sbb
shl
inc
aad
or
adc
outs
fwait
stos
cmc
stos
push
fcmovb
pop
call
outs
shl
outs
mov
pop
lea
ds
fild
movs
mov
out
hlt
sub
add
xchg
sti
jb
push
(bad)
daa
push
adc
push
and
mov
jae
aam
ins
int3
movs
loop
in
add
push
mov
xor
ret
xchg
cmps
mov
lahf
dec
and
pop
hlt
xchg
retf
cmp
jns
xchg
jmp
test
nop
push
out
stos
push
push
mov
outs
es
imul
addr16
pop
ins
lea
inc
lods
mov
jbe
inc
push
aad
add
dec
xor
mov
xchg
das
inc
mov
sbb
or
out
cmp
sbb
xor
sbb
inc
cdq
jl
sbb
pop
mov
xchg
or
or
mov
or
jns
inc
pushf
add
retf
push
loopne
fucomip
jmp
jmp
(bad)
inc
shl
ja
cmp
bound
inc
(bad)
mov
fdiv
cmps
pop
cmp
(bad)
pop
or
loopne
mov
dec
aas
in
daa
jle
ret
mov
scas
lods
add
xchg
dec
pusha
add
jmp
pop
push
(bad)
sub
idiv
dec
add
sub
or
test
push
push
shl
dec
inc
in
push
das
int3
xor
dec
and
imul
lds
int
cmps
(bad)
les
ret
aaa
add
and
not
outs
pop
mov
ret
(bad)
push
xor
and
inc
dec
imul
mov
dec
or
lea
retf
call
nop
cmps
test
dec
xchg
sbb
sbb
fucom
mov
sbb
sbb
or
clc
dec
out
and
mov
jnp
cwde
out
outs
add
sbb
outs
aam
inc
or
sub
mov
sar
xor
icebp
mov
adc
lock
sub
outs
xchg
cld
jp
mov
xor
inc
mov
sub
(bad)
leave
fdiv
dec
mov
retf
ins
adc
sti
test
out
sub
int3
xchg
push
or
enter
push
nop
loopne
addr16
inc
lods
sahf
stc
test
arpl
adc
lods
std
hlt
cwde
dec
test
scas
sbb
mov
add
in
add
pop
or
push
int3
imul
retf
inc
into
dec
into
mov
mov
fsub
push
retf
stos
fbstp
(bad)
sbb
mov
mov
sbb
push
and
fldenv
jbe
xchg
test
out
arpl
into
push
dec
push
sub
adc
cdq
sbb
push
xchg
sub
out
sbb
inc
(bad)
cmp
sbb
adc
cmp
inc
test
xor
daa
jle
in
mov
lock
lods
inc
idiv
in
test
cmp
xchg
je
js
(bad)
fstp
jb
xor
in
test
adc
and
in
dec
cmp
fwait
loope
in
out
test
xor
(bad)
lea
std
mov
neg
in
aaa
xchg
xchg
shl
push
cmp
cs
pop
xor
cmp
pop
imul
out
sub
mov
xlat
push
jmp
or
test
or
scas
test
int3
shl
fwait
dec
shr
out
or
hlt
push
(bad)
jb
mov
(bad)
es
shl
aad
clc
and
inc
xor
cmc
and
clc
sub
xor
enter
jo
cmp
fadd
scas
outs
rcl
xchg
in
popa
cmp
pop
xor
jecxz
movs
jmp
mov
adc
xchg
cmp
jmp
add
xlat
imul
jne
int3
stos
jmp
fsub
dec
xor
(bad)
mov
arpl
jmp
mov
pop
inc
push
push
inc
sub
mov
arpl
fst
mov
mov
inc
fwait
mov
push
call
call
jg
stos
or
or
sbb
lock
inc
scas
scas
xor
loope
movs
pop
push
retf
push
sub
in
mov
mov
push
jo
data16
add
ins
push
idiv
std
mov
sbb
xchg
jge
(bad)
cmp
imul
arpl
cmp
idiv
inc
sbb
xor
out
push
(bad)
xor
jecxz
jnp
in
jae
into
xor
arpl
sub
iret
cmps
push
push
jmp
cmp
or
jb
aad
adc
mov
add
push
inc
adc
lea
pop
(bad)
mov
js
div
mov
leave
mov
es
loopne
xor
cmp
test
adc
jp
mov
mov
out
pop
cs
push
mov
jbe
sbb
mov
pushf
mov
xor
xchg
xor
ins
sti
into
addr16
adc
mov
out
es
in
push
bsr
out
adc
fiadd
push
jmp
imul
adc
in
scas
cmp
sbb
xor
ror
popf
xchg
push
sub
retf
xor
push
movs
cmp
sahf
fdiv
lea
(bad)
jae
rcr
push
adc
lods
adc
xor
lahf
call
push
push
(bad)
pop
das
push
or
jecxz
aas
sub
mov
in
outs
mov
shr
ret
sub
es
and
int3
les
inc
pop
sub
or
ja
sub
dec
sub
aad
xlat
imul
popa
cmp
sbb
out
pop
test
clc
fs
adc
adc
pop
sbb
frstor
cwde
addr16
sbb
test
or
retf
pop
sub
mov
mov
in
xchg
sub
lods
fild
fsubrp
mov
mov
fsubr
mov
sub
push
(bad)
fld
icebp
add
std
aas
jg
cmp
pop
mov
imul
test
mov
dec
ss
das
sar
bound
mov
mov
popf
or
arpl
mov
ins
in
mov
(bad)
xor
ret
dec
xchg
inc
shl
mov
cmp
(bad)
sti
sub
mov
int
xor
xchg
data16
xor
ins
cmp
std
outs
mov
adc
pop
cmp
pop
shl
push
ss
and
dec
or
mov
push
cmp
add
(bad)
neg
sbb
aad
in
nop
ins
ins
je
xchg
les
mov
pop
or
(bad)
(bad)
std
stos
cmps
mov
retf
mov
inc
jnp
outs
xchg
sbb
push
and
into
xor
push
mov
ins
mov
and
and
mov
jp
sub
jecxz
cs
dec
mov
nop
xor
rcr
sub
jmp
arpl
push
fnstenv
not
add
cwde
ret
add
push
xchg
psllq
stos
outs
mov
push
enter
mov
mov
and
and
xor
fldcw
pop
jmp
mov
sbb
pop
imul
sub
pop
cld
or
xchg
loopne
(bad)
sti
retf
nop
jmp
pop
push
mov
push
pop
jnp
inc
push
mov
outs
lahf
jg
jle
imul
sbb
aaa
test
repnz
sar
jb
aas
fisubr
in
inc
in
cmp
ja
mov
push
popf
js
es
pop
add
push
mov
call
nop
mov
ss
arpl
inc
push
and
ss
inc
mov
mov
ins
lea
and
push
sub
or
pop
dec
fisubr
out
movups
pop
inc
cmp
imul
adc
mov
add
mov
inc
dec
stc
mov
sub
xchg
mov
mov
mov
cmps
idiv
and
inc
imul
outs
rol
sbb
fdivp
dec
out
shr
push
dec
push
or
jnp
inc
mov
push
or
shr
sub
mov
(bad)
fst
sub
xor
dec
push
arpl
(bad)
mov
push
and
inc
mov
outs
inc
pop
xchg
imul
(bad)
neg
and
sub
sbb
sub
xor
xchg
add
mov
rol
add
dec
(bad)
scas
icebp
mov
data16
fisubr
outs
adc
adc
sub
inc
sbb
pusha
sub
mov
test
or
je
enter
arpl
test
(bad)
add
fdivr
in
(bad)
out
not
xchg
lods
pop
pop
inc
loop
sub
add
std
or
add
mov
cmp
scas
inc
in
test
jns
cmc
jecxz
adc
outs
pop
aas
pop
push
lods
(bad)
repnz
dec
and
(bad)
sub
jecxz
cs
adc
jno
imul
jbe
xchg
pop
or
bound
xchg
cmp
cwde
adc
push
adc
add
xchg
stos
push
fild
ins
fldcw
js
or
inc
imul
(bad)
mov
xchg
mov
sbb
int3
mov
add
sbb
mov
xchg
cmp
sbb
xchg
mov
mov
dec
cmp
out
mov
pushf
and
mov
jp
or
dec
out
retf
js
call
aam
jge
test
inc
fst
sub
add
int3
xchg
xchg
mov
push
jmp
mov
sub
hlt
xor
jne
pop
enter
push
xor
jle
dec
arpl
ins
mov
std
mov
mov
xor
mov
in
out
push
ret
adc
leave
xchg
or
(bad)
mov
scas
icebp
repnz
or
sub
xor
sub
test
cli
sbb
or
adc
pop
lods
mov
mul
push
jge
adc
jp
add
and
fbstp
and
out
scas
(bad)
fiadd
std
cli
ffree
mov
fild
or
add
cmp
ror
mov
out
push
pop
xsavec
mov
shr
ret
add
cmp
jno
push
inc
ja
sar
(bad)
mov
push
retf
pop
xor
shr
out
(bad)
cmps
test
aaa
movs
push
test
fild
dec
mov
in
dec
pop
sbb
iret
dec
popa
and
cmp
sbb
es
pop
xchg
lea
fisttp
(bad)
ins
push
mov
jo
mov
test
xchg
push
adc
into
adc
dec
js
jbe
jl
(bad)
cld
retf
cli
lahf
popf
sub
inc
leave
dec
repz
mov
xor
rcr
xor
mov
ror
sub
loopne
cmp
scas
nop
in
loopne
fst
fs
mov
xor
xchg
sbb
push
(bad)
movs
push
loope
popa
xlat
arpl
mov
iret
jle
lds
sub
mov
cmps
lods
push
data16
retf
jp
push
push
cmp
enter
aam
sub
popf
out
dec
daa
xbegin
mov
pusha
stos
or
loopne
jmp
mov
mov
in
sbb
sbb
push
dec
cld
push
repnz
xchg
xor
pushf
mov
mov
imul
idiv
xor
data16
mov
repz
mov
or
jle
sub
test
out
(bad)
repnz
inc
cmps
pop
jnp
add
in
and
push
cmp
pop
(bad)
stos
lahf
leave
ficomp
call
inc
test
push
mov
pop
inc
imul
dec
push
imul
dec
inc
out
dec
dec
out
aas
push
inc
in
xor
jmp
repnz
repnz
dec
push
out
dec
adc
clc
imul
adc
lods
test
repz
(bad)
jle
stos
lahf
das
jnp
stos
push
cmps
(bad)
adc
(bad)
bnd
inc
mov
xor
(bad)
rcl
int3
iret
scas
jle
stc
(bad)
in
pusha
mov
add
sbb
xor
ins
jl
sbb
pop
inc
lods
lods
or
in
lds
or
mov
adc
xor
cli
mov
dec
jns
jno
mov
inc
pop
mov
leave
out
(bad)
loopne
enter
cld
(bad)
sub
cli
das
ds
stos
push
push
(bad)
fwait
(bad)
(bad)
mov
sub
push
cmps
aas
repnz
sub
aam
enter
or
imul
fucompp
sub
jae
mov
push
jae
jp
add
fst
outs
push
inc
mov
jecxz
mov
jge
push
ins
xchg
pop
jmp
int
(bad)
inc
mov
ja
mov
mov
xchg
fst
stos
sti
push
and
into
shl
xor
push
loope
cmps
cs
ficomp
sbb
out
ror
add
pusha
adc
fistp
cmp
out
pop
sub
push
jp
sti
jbe
iret
cli
(bad)
rcr
leave
and
leave
mov
adc
in
jmp
xor
xchg
mov
xchg
les
test
outs
in
clc
xchg
jae
stos
loopne
mov
lods
sbb
outs
jge
xchg
ins
dec
pusha
jns
sub
push
xchg
fwait
sbb
mov
mov
ja
and
pop
aam
push
movs
mov
push
jle
push
hlt
adc
mov
adc
adc
and
add
ss
ins
nop
imul
dec
je
or
arpl
sbb
mov
stos
dec
(bad)
xor
lahf
je
sub
je
mov
movs
add
scas
pop
push
imul
sub
stos
xlat
inc
clc
ret
rcr
leave
loopne
xchg
inc
mov
ja
hlt
iret
fsubr
dec
and
or
xor
jbe
lea
out
hlt
xchg
mov
jo
mov
add
push
pop
lahf
mov
adc
ins
pop
mov
(bad)
fsub
(bad)
cwde
rol
into
inc
(bad)
mov
mov
mov
ins
loop
arpl
imul
js
jl
inc
xchg
fldcw
dec
inc
and
shl
pop
xlat
cmp
pop
mov
dec
cmp
pop
stos
hlt
repnz
repz
aas
mov
inc
cdq
push
push
xor
pushf
add
mov
jmp
cmp
cmp
leave
stos
rcr
xchg
addr16
or
pop
mov
sbb
mov
push
mov
or
cmc
aas
es
arpl
add
sub
in
lahf
cmp
dec
xor
clc
dec
push
imul
les
repz
adc
ficom
dec
xor
repz
jg
or
pop
adc
add
mov
inc
test
in
sub
lods
jle
mov
js
dec
jne
sbb
cld
xchg
sub
push
fdivr
jg
pushf
sahf
or
xchg
jno
push
adc
retf
outs
les
cmp
mov
call
icebp
push
test
mov
retf
push
and
xchg
outs
xchg
nop
inc
xor
xor
arpl
loope
xor
push
mov
sbb
std
test
(bad)
repnz
call
inc
rcr
xchg
add
daa
dec
pop
push
js
mov
pusha
repnz
dec
mov
jecxz
mul
xchg
xlat
mov
or
jp
leave
jbe
nop
orps
jmp
stc
sbb
jno
ss
sub
push
sbb
mov
ror
add
add
mov
aad
push
ror
aam
or
sub
sbb
adc
stc
mov
ret
cdq
leave
loope
test
das
pop
std
nop
dec
jmp
aaa
or
mov
dec
cmp
push
jmp
jbe
cmp
cwde
cmps
aad
jo
push
addr16
in
retf
shl
mov
stos
pop
(bad)
sub
cmp
add
or
inc
cmp
cmp
imul
cs
dec
lahf
inc
in
das
pop
(bad)
fsubp
sahf
xchg
add
inc
ja
jmp
push
or
(bad)
(bad)
ret
sub
hlt
push
gs
fwait
push
cmp
xor
inc
cmps
fcomp
xchg
xchg
sbb
push
fs
mov
mov
arpl
mov
push
pop
fdivr
sbb
and
jne
frstor
xor
(bad)
mov
cmp
ds
mov
aas
push
adc
bound
outs
add
adc
pop
and
sub
mov
int
xchg
inc
sub
aas
ins
lods
adc
mov
aam
inc
fadd
out
push
std
scas
(bad)
int3
int3
cmp
into
fstp
(bad)
push
add
jne
fwait
add
sub
into
pop
in
pop
mov
sbb
xchg
(bad)
jg
adc
arpl
sbb
scas
test
jo
(bad)
mov
xchg
pop
pop
cmp
jg
stos
xchg
(bad)
pop
mov
(bad)
js
jl
jle
call
push
out
(bad)
lods
or
pop
cmps
popf
pop
test
std
jmp
mov
test
mul
push
adc
mov
inc
(bad)
repz
jecxz
push
push
scas
jne
loopne
call
into
mov
ret
je
add
lds
mov
or
cmp
mov
pop
inc
push
leave
das
pop
inc
jmp
adc
cmp
cwde
mov
add
adc
cmp
jae
ficom
scas
add
adc
fucom
mov
cwde
or
jne
scas
push
cmps
ins
sar
pop
pusha
test
push
imul
pop
dec
pop
imul
inc
mov
jg
jmp
adc
mov
jb
xor
fild
xchg
repnz
pop
push
in
pop
inc
fild
mov
mov
adc
push
outs
sub
shl
test
pop
leave
dec
shl
xor
fisubr
sbb
xor
imul
adc
sbb
mov
sub
shl
sub
mov
pop
fcomp
outs
fcom
sub
mov
jge
imul
adc
sub
push
mov
pop
inc
(bad)
sub
mov
cmp
neg
pop
push
xchg
sub
(bad)
sub
idiv
dec
push
out
dec
dec
out
inc
pop
push
dec
dec
jmp
push
dec
rol
dec
sub
stos
inc
retf
push
xor
sub
gs
adc
test
clc
or
mov
cmps
adc
mov
sbb
sub
push
jo
push
pop
rcl
jecxz
pop
dec
push
int3
jnp
fstp
or
mov
dec
push
hlt
icebp
and
movs
sbb
(bad)
and
sbb
(bad)
mov
enter
dec
or
inc
lea
dec
cmc
into
mov
pop
mov
add
xchg
xchg
adc
xor
mov
ja
adc
dec
push
push
sbb
lea
ja
pop
pop
pop
loopne
mov
push
ins
xor
fiadd
data16
xor
arpl
cs
cdq
(bad)
mov
cmps
xor
xor
fcomp
cmps
das
leave
mov
xor
xchg
mov
cmp
cld
nop
dec
shl
and
push
cmp
scas
xchg
cld
(bad)
cld
out
xor
pop
jnp
in
add
imul
cmps
std
adc
push
lahf
jno
test
pop
or
mov
sub
and
xor
dec
test
push
dec
cmp
into
push
in
push
pusha
fucompp
in
sbb
das
add
lds
rcr
pop
mov
cmp
jo
sub
out
pop
push
cmps
cmp
out
dec
inc
idiv
dec
inc
in
pop
inc
lock
loope
push
and
and
shr
dec
and
push
scas
aad
mov
aad
mov
sbb
pop
fmul
jmp
ret
(bad)
int
popf
and
push
push
or
cmp
hlt
mov
push
add
pop
movs
retf
mov
repz
pop
adc
outs
cmp
xchg
(bad)
lahf
pusha
xlat
outs
adc
mov
out
dec
repz
ja
jmp
fmulp
dec
xchg
pop
mov
int3
jo
jg
xor
and
xchg
jne
xchg
and
cdq
stos
pop
hlt
or
pushf
repz
loope
dec
das
shufps
leave
adc
cmc
inc
pop
movs
rcr
mov
sub
mov
in
or
or
sbb
add
fs
cmp
adc
mov
push
repz
sbb
in
cmp
sar
mov
es
xor
stc
les
jp
push
ss
test
cmc
xchg
jmp
aad
movs
lahf
shr
push
add
jg
stos
and
or
pop
mov
ins
test
add
inc
pop
fdiv
or
jmp
lods
cdq
int
sahf
pop
xchg
dec
push
lahf
pop
pop
xchg
add
mov
test
dec
dec
and
cmp
sub
aaa
mov
push
(bad)
mov
sub
sub
data16
out
sub
scas
inc
pop
sbb
mov
dec
xor
dec
pop
add
mov
xchg
in
pop
push
push
nop
dec
rol
sbb
pusha
(bad)
or
(bad)
sub
out
dec
inc
idiv
push
inc
jecxz
push
inc
loope
push
push
in
and
dec
shr
lods
push
idiv
stc
not
pop
mov
fcmovu
jns
sbb
in
dec
pop
test
and
and
and
adc
pop
or
ins
out
sbb
ret
(bad)
adc
adc
fwait
sahf
sub
and
mov
sub
jle
add
stc
xlat
nop
jecxz
jo
mov
loopne
jl
push
inc
mov
push
cmp
fmul
lods
pop
(bad)
push
sub
push
sbb
jp
inc
cmps
fldenv
sub
xchg
fild
je
shl
push
fcom
lods
xchg
pop
jp
hlt
push
xchg
mov
push
xchg
arpl
test
fstp
cld
cmc
call
inc
inc
(bad)
cmp
pop
jg
sub
cs
push
rcr
stc
dec
movs
cmps
js
xor
(bad)
adc
fimul
rol
xor
aad
jne
adc
mov
xchg
sub
loope
fstp
pusha
stos
mov
int3
adc
test
push
add
cmp
rol
push
cmc
add
ret
js
fld
and
dec
leave
jb
stc
sbb
cmps
jne
push
push
arpl
imul
mov
imul
jecxz
cwde
dec
test
cmp
ret
aaa
jge
dec
(bad)
adc
mov
and
icebp
pop
inc
ja
and
dec
xlat
hlt
aam
mov
dec
xchg
dec
and
mov
xchg
cmp
or
je
retf
int3
call
pop
fdivr
inc
xor
xchg
shl
push
sbb
mov
pop
push
cmc
test
daa
add
xchg
ins
mov
rcr
or
inc
dec
loope
jge
cmp
jg
rcr
repnz
test
out
push
dec
mov
add
inc
xor
(bad)
shl
fst
std
sub
stos
dec
jg
mov
lods
push
loop
nop
sub
ss
sub
jp
sub
xor
sti
xor
fsubr
fld
pop
(bad)
(bad)
loop
(bad)
cmp
xchg
jne
(bad)
push
jnp
xchg
mov
xchg
cs
lahf
push
sub
ds
stos
dec
mov
shl
mov
mov
imul
lds
mov
sbb
jno
push
pop
lds
mov
sub
xchg
inc
xchg
xchg
fsincos
push
jecxz
sub
xor
or
retf
in
in
sahf
lahf
mov
xchg
fwait
jae
push
scas
jae
fimul
adc
mov
int
sbb
xchg
cs
mov
push
addr16
sub
xchg
xor
mov
pushf
fild
dec
jnp
xchg
push
xchg
neg
jbe
lahf
push
jmp
sbb
call
shl
mov
fdivr
jo
pop
xchg
adc
je
mov
mov
bound
dec
jns
and
ret
xchg
in
std
arpl
shl
mov
inc
scas
std
push
or
clc
nop
sub
sub
fistp
xor
xchg
xchg
mov
nop
in
popf
pusha
push
(bad)
les
cmp
inc
adc
and
stos
dec
cmp
inc
push
jle
fwait
inc
push
pop
jnp
shrd
cmp
inc
sub
sub
pop
cwde
stos
mov
out
xor
lods
inc
shl
in
xchg
mov
stos
fimul
sub
xchg
pop
pop
xchg
xchg
mov
ins
call
mov
jne
jb
test
stos
pop
out
fist
cmp
dec
dec
movs
xchg
pop
cmp
lea
imul
push
or
push
test
push
mov
inc
fistp
jno
xor
push
call
std
adc
gs
mov
push
sub
mov
clc
cmc
frstor
shl
jae
dec
mov
ret
call
test
out
or
aas
xlat
fs
loop
repnz
sti
fst
push
sub
repz
imul
mul
sti
std
cmp
mov
lods
les
aad
and
sub
xchg
sbb
fdiv
and
hlt
fs
cs
cmp
loop
mov
nop
mov
shr
mov
mov
push
ror
cmp
jg
scas
inc
test
add
adc
mov
pop
movs
neg
and
or
xchg
dec
adc
clc
xor
(bad)
push
test
xchg
mov
xor
pop
clc
or
loope
xchg
fild
sbb
mov
add
in
(bad)
pop
test
mov
jl
inc
pushf
nop
cmps
cmp
cs
add
ins
icebp
xchg
and
out
je
jecxz
pop
sbb
test
pop
cmp
fwait
cdq
les
or
ja
test
jo
shr
daa
mov
std
scas
xor
stos
test
sbb
mov
rol
lds
xchg
addr16
jmp
xlat
cmp
or
call
xor
mov
adc
mov
scas
mov
push
mov
inc
and
dec
mov
mov
outs
test
pop
loopne
jns
cmp
lods
mov
pop
jmp
adc
(bad)
jp
pop
fistp
nop
fnstenv
jns
lods
pop
pushf
rcl
mov
mov
sub
add
sbb
jp
push
dec
pusha
test
sbb
imul
sbb
test
dec
test
fst
push
jge
mov
scas
add
mov
out
fcom
push
xchg
es
xor
push
retf
fcomp
or
sbb
lock
leave
jmp
into
cmps
pop
push
jp
cmp
mov
cmp
pushf
mov
mov
mov
and
pop
je
sbb
push
(bad)
movs
neg
popa
outs
and
inc
das
call
xchg
sbb
xchg
ins
and
scas
mov
and
sahf
jmp
push
xchg
jo
pop
hlt
fnstsw
mov
mov
pop
mov
cmps
fbld
fistp
or
mov
xchg
mov
gs
pop
hlt
push
cmp
mov
cwde
jae
imul
xchg
mov
push
jae
cdq
and
sbb
mov
inc
loopne
sub
or
fstp
div
lods
enter
(bad)
loop
test
push
or
and
xchg
xor
(bad)
std
pop
and
aaa
sar
add
icebp
push
pop
sbb
sbb
push
gs
ret
mov
aas
in
and
sub
jbe
pop
push
outs
pop
icebp
ins
jl
add
jp
xor
test
inc
pop
and
stos
js
push
pop
jle
out
mov
enter
push
xchg
test
call
lods
and
or
(bad)
arpl
pop
add
mov
push
sub
sub
mov
pop
jbe
ja
xchg
push
pop
adc
mov
or
push
inc
jb
dec
pusha
mov
loopne
or
xlat
cs
push
xchg
jmp
bound
add
ja
xchg
xchg
shr
cmc
mov
les
sbb
sub
out
cmps
xor
push
jmp
outs
sbb
mov
xchg
inc
daa
adc
cmp
call
mov
xor
cmp
ss
in
nop
popa
cmps
es
ss
or
xchg
sub
add
enter
jmp
mov
push
inc
push
ret
in
inc
mov
fisttp
es
xor
sub
repnz
pop
push
mov
loop
push
pusha
not
jge
add
jge
test
adc
sbb
adc
jns
and
fst
mov
popf
loopne
jmp
pop
adc
cmp
push
sub
inc
sbb
cmps
sub
xchg
ins
adc
jns
inc
mov
in
and
xchg
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
lods
jg
push
frstor
or
cmp
out
adc
dec
inc
out
pop
push
xchg
sub
out
pop
push
imul
pop
add
test
dec
inc
xchg
pop
push
xchg
pop
push
out
pop
push
imul
pop
pusha
imul
lods
jg
jmp
pop
popa
test
inc
imul
pop
push
xor
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
push
pop
das
pop
pop
push
push
sub
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
in
dec
imul
pop
push
cmc
outs
pop
push
xchg
sub
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
lds
clc
pusha
pop
push
sub
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
inc
imul
pop
inc
mov
cmp
out
pop
push
(bad)
sub
imul
sub
idiv
push
imul
push
push
mov
cmp
outs
mov
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
push
out
lahf
mov
inc
mov
pusha
fsubr
ds
dec
es
or
dec
enter
xor
sbb
fwait
adc
sbb
into
ds
and
cmp
jnp
inc
jo
fcomi
mov
adc
jmp
xor
(bad)
mov
pop
lea
inc
out
fs
or
std
retf
shl
inc
shl
sbb
fwait
adc
sbb
into
ds
and
cmp
jnp
inc
jo
fcomi
mov
adc
jmp
xor
(bad)
mov
pop
lea
inc
out
fs
or
std
retf
shl
inc
shl
sbb
fwait
adc
sbb
adc
pop
jo
cmp
cmp
(bad)
sub
out
pop
jo
sub
push
push
push
rol
rol
sbb
lock
and
aad
sub
adc
jge
jle
fdiv
mov
jp
std
sub
mov
dec
xchg
sub
xchg
pop
adc
leave
inc
aam
sub
jo
xor
aad
sub
adc
jge
jle
fdiv
mov
jp
std
sub
mov
dec
xchg
sub
xchg
pop
adc
leave
inc
aam
sub
jo
xor
aad
sub
adc
dec
dec
jle
jo
jmp
mov
push
leave
(bad)
sar
lea
push
stos
inc
xchg
inc
(bad)
stc
shl
pop
sbb
jb
hlt
hlt
cmp
data16
or
dec
mov
cmc
xor
pop
or
iret
inc
pushf
loope
jne
or
xchg
inc
(bad)
stc
shl
pop
sbb
jb
hlt
hlt
cmp
data16
or
dec
mov
cmc
xor
pop
or
iret
inc
pushf
loope
jne
or
xchg
inc
(bad)
stc
shl
xchg
sub
sbb
mov
pop
sub
out
pop
push
(bad)
sub
out
ins
push
idiv
dec
jne
push
repnz
rcr
inc
idiv
fsubr
jbe
jecxz
shl
fs
inc
cmp
add
repz
sbb
push
gs
lds
stc
mov
dec
xchg
mov
jle
aaa
setnp
dec
mov
xchg
mov
loope
jb
popf
mov
outs
xor
stos
mov
xchg
or
int3
in
jbe
xor
xchg
and
inc
cmp
add
repz
sbb
push
gs
lds
stc
mov
dec
xchg
mov
jle
aaa
setnp
dec
mov
xchg
mov
loope
jb
popf
mov
outs
xor
stos
mov
xchg
or
int3
in
jbe
xor
xchg
and
inc
cmp
add
repz
sbb
gs
repnz
aad
mov
adc
scas
or
and
rcl
mov
pop
bound
dec
out
mov
retf
xchg
sbb
bound
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
bound
cmp
and
stos
pop
sahf
push
pop
push
fisubr
push
idiv
or
push
(bad)
sub
imul
ins
add
sub
adc
(bad)
cmp
(bad)
out
push
push
icebp
push
pop
mov
cmp
fmul
call
mov
stc
(bad)
xchg
mov
fwait
push
pop
fcomip
pop
mov
bnd
mov
mov
cld
push
sub
add
pop
add
sahf
fadd
adc
rol
dec
movs
or
in
fbstp
in
push
jo
rol
xor
stos
mov
imul
retf
mov
sub
enter
bound
inc
cmp
call
imul
sub
or
jge
mov
fwait
push
pop
fcomip
pop
mov
bnd
mov
mov
cld
push
sub
add
pop
add
sahf
fadd
adc
rol
dec
movs
or
in
fbstp
in
push
jo
rol
xor
stos
mov
imul
retf
mov
sub
enter
bound
inc
cmp
call
imul
sub
or
jge
mov
fwait
push
pop
fcomip
pop
mov
bnd
mov
mov
cld
push
sub
add
pop
xor
inc
(bad)
sbb
inc
xchg
cmps
mov
push
in
xor
std
scas
movs
mov
lods
dec
mov
mov
jae
(bad)
add
nop
rol
fisttp
adc
push
rcr
aaa
inc
std
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
js
inc
sbb
cwde
and
push
push
fsub
test
mov
mov
jo
ins
rol
dec
inc
idiv
pop
push
out
pop
push
out
dec
pop
imul
dec
inc
stc
cmp
sar
lods
inc
idiv
sub
(bad)
addr16
jne
or
xchg
inc
jge
jns
scas
lahf
xor
shl
hlt
aam
fdivr
or
inc
outs
lea
shl
cmp
(bad)
iret
sbb
adc
inc
inc
xchg
inc
jge
jns
scas
lahf
xor
shl
hlt
aam
fdivr
or
inc
outs
lea
shl
cmp
(bad)
iret
sbb
adc
inc
inc
xchg
adc
xor
ss
sub
sbb
sub
std
jge
or
(bad)
pusha
cmp
mov
xchg
adc
(bad)
push
mov
dec
ret
iret
jmp
xchg
mov
xchg
adc
(bad)
push
mov
dec
ret
iret
jmp
xchg
mov
mov
pop
inc
(bad)
fst
pop
dec
push
push
sbb
sub
(bad)
test
push
mov
stc
fst
stc
fst
stc
fst
stc
fst
stc
fst
stc
fst
stc
fst
stc
fst
stc
fst
stc
fst
stc
fst
stc
pop
les
xor
fild
xchg
bound
jg
fild
xchg
bound
jg
fild
xchg
bound
jg
fild
xchg
bound
les
mov
jb
xor
fild
xchg
bound
jg
fild
movs
bound
push
mov
pop
sub
out
pop
push
out
pop
push
out
dec
inc
imul
inc
dec
lock
loop
repnz
loopne
ins
inc
idiv
cs
inc
(bad)
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
adc
call
add
into
(bad)
std
inc
sbb
mov
iret
ja
nop
fs
sub
jmp
aam
jp
outs
cmp
ja
nop
fs
sub
jmp
aam
jp
outs
cmp
ja
nop
fs
sub
jmp
aam
jp
outs
cmp
ja
nop
fs
sub
jmp
aam
jp
outs
cmp
ja
nop
fs
sub
jmp
aam
jp
outs
cmp
ja
nop
fs
sub
jmp
aam
jp
outs
cmp
ja
nop
fs
sub
jmp
aam
jp
outs
cmp
ja
nop
fs
sub
jmp
aam
jp
outs
cmp
ja
nop
fs
sub
jmp
aam
dec
popf
outs
cmp
fadd
pop
pop
pusha
push
cmp
push
sub
out
pop
push
out
pop
inc
imul
inc
inc
div
dec
dec
out
repnz
in
pop
jge
out
pop
push
jbe
xchg
aaa
loopne
xchg
test
cmp
jl
test
iret
or
mov
jl
test
iret
or
mov
jl
test
iret
or
mov
jl
test
iret
or
mov
jl
test
iret
or
mov
jl
test
iret
or
mov
jl
test
iret
or
mov
jl
test
iret
or
mov
jl
jecxz
iret
cmps
cmps
int
das
and
sbb
aas
lea
arpl
mov
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
lahf
repz
ins
(bad)
xor
bound
lahf
adc
imul
inc
push
sbb
imul
pop
push
imul
dec
inc
imul
pop
push
idiv
dec
push
idiv
pop
fs
js
sar
test
xlat
or
inc
xor
(bad)
dec
lods
add
mov
out
inc
xor
(bad)
dec
lods
add
mov
mov
pop
adc
call
sub
fs
loope
in
jnp
loope
cmp
jbe
movs
cmp
adc
push
or
inc
sbb
(bad)
dec
jnp
jmp
cmp
xchg
jbe
movs
cmp
adc
push
or
inc
sbb
(bad)
dec
jnp
jmp
cmp
pop
or
movs
ins
stc
xor
sbb
das
xlat
jmp
pop
icebp
imul
fst
loop
jbe
ins
jo
sub
ins
pusha
(bad)
sbb
(bad)
cdq
or
jo
imul
loopne
mov
inc
leave
dec
xor
leave
pop
mov
sbb
cmp
idiv
mov
fnstcw
sub
stos
sbb
add
imul
daa
push
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
dec
sar
or
cld
cmp
cmp
inc
jmp
push
imul
pop
push
out
pop
push
imul
sbb
push
(bad)
pop
push
rcl
pop
push
out
pop
push
out
pop
push
imul
dec
jo
sub
loopne
and
push
push
sub
test
pop
push
out
pop
push
imul
pop
push
imul
pop
push
imul
std
pusha
imul
mov
repnz
ret
mov
pop
ds
ror
adc
xchg
ins
dec
clc
leave
mov
xor
push
mov
or
jg
popf
dec
pusha
pop
push
and
(bad)
imul
adc
xor
push
bound
sti
div
fistp
push
adc
push
add
mov
lds
xchg
seta
imul
or
and
xchg
push
int
test
pop
ret
(bad)
pop
mov
test
sbb
cmc
pop
and
repz
(bad)
scas
cmps
arpl
mov
(bad)
mov
in
cld
push
loopne
adc
cmp
imul
retf
bound
or
cmps
push
dec
add
xchg
sbb
cli
cmp
lahf
(bad)
call
cmp
mov
jae
mov
sbb
pop
mov
into
aas
inc
sub
out
retf
cmc
lock
shl
arpl
hlt
jg
repnz
and
daa
mov
out
xlat
fisttp
mov
in
pop
push
sbb
push
pop
push
fiadd
test
lahf
pushf
sahf
xor
(bad)
jle
(bad)
mov
hlt
test
rcl
add
jecxz
fisub
adc
(bad)
fdiv
enter
mov
inc
not
(bad)
push
pop
imul
stos
and
sub
pop
jo
push
pop
pop
inc
jb
ins
scas
dec
dec
mov
xor
cmp
adc
outs
repnz
mov
cmps
lods
sub
sub
mov
retf
cmp
pop
adc
or
sbb
aam
lea
test
hlt
mov
dec
inc
out
rol
cmp
int
imul
sbb
inc
sti
xchg
pop
sahf
movs
adc
ret
ja
sar
pop
push
cmps
sub
mov
cli
mov
adc
push
pop
push
es
data16
adc
div
sbb
add
xchg
sub
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
inc
push
sub
and
sub
imul
or
inc
(bad)
cmp
xchg
or
(bad)
sub
imul
ins
jb
dec
pop
test
dec
add
push
add
pop
ds
mov
dec
adc
pop
ins
xchg
sahf
mov
sti
cld
or
xlat
or
pop
retf
cdq
fidiv
mov
gs
int
xor
sub
bound
cs
ret
xlat
mov
rcl
mov
int
adc
xor
dec
xchg
mov
in
shr
pop
mov
rcr
mov
pop
enter
retf
dec
call
ret
aas
push
push
sar
data16
out
sahf
pop
inc
ss
add
mov
mov
leave
shl
jns
es
push
imul
enter
sbb
(bad)
aad
mov
push
cld
repnz
ja
cwde
xchg
cmp
dec
push
in
xchg
repz
ds
mov
jge
xchg
xor
mov
rcr
(bad)
sub
jl
add
inc
cmps
or
retf
cli
das
retf
jle
mov
sbb
sbb
movs
xchg
dec
(bad)
fsub
xchg
jnp
inc
jmp
test
adc
cmp
xor
loopne
out
mov
mov
mov
push
sub
cmp
and
inc
cmp
clc
test
sar
(bad)
ffreep
fnstsw
sbb
push
dec
jo
test
xchg
mov
mov
in
jb
push
jnp
retf
repnz
jp
pop
xchg
jg
mov
popa
dec
into
adc
push
mov
fcomi
jmp
adc
dec
and
or
sub
mov
dec
call
mov
dec
lahf
xor
call
dec
rcr
mov
test
lock
adc
gs
mov
test
adc
and
or
test
arpl
pop
enter
scas
xchg
call
popa
clc
pop
outs
dec
xchg
xor
push
adc
or
loope
and
cs
dec
mov
daa
jns
jmp
(bad)
stc
popf
mov
push
test
pop
pop
loope
adc
shl
hlt
sbb
cmp
in
(bad)
xlat
adc
mov
mov
dec
fisubr
pop
or
lock
out
push
lods
jp
fisttp
mov
out
ja
retf
ss
movs
popa
pop
shl
or
in
fucomi
adc
or
pop
inc
icebp
jg
fstp
push
gs
scas
test
sbb
mov
xlat
gs
(bad)
cli
pop
sbb
mov
ret
ins
pusha
mov
or
push
(bad)
sub
(bad)
sub
imul
dec
inc
out
pop
jae
sub
aad
pop
inc
loop
pop
inc
jecxz
repnz
rcl
inc
out
dec
jo
fsincos
ret
je
imul
cmp
stc
mov
dec
bound
rcr
imul
test
clc
loop
test
(bad)
cwde
fdivr
mov
gs
test
jle
(bad)
sbb
jecxz
je
jns
dec
arpl
sar
nop
mov
jl
mov
pop
xchg
stc
retf
pop
aad
mov
cmp
adc
jmp
fs
jmp
out
sbb
movs
jl
test
cld
push
mov
retf
cmp
mov
rcl
pop
dec
mov
sbb
dec
ja
ja
inc
aad
mov
leave
(bad)
jmp
ds
xlat
int3
mov
mov
repnz
sub
dec
adc
adc
jb
ins
sbb
mov
bnd
sbb
cmp
addr16
sar
pop
ins
jp
inc
or
mov
mov
mul
out
mov
test
fisubr
neg
inc
push
fnsave
cmp
sbb
int
retf
not
clc
out
push
push
std
and
dec
xor
add
sub
or
mov
ja
pop
mov
aaa
test
std
test
push
or
jg
into
mov
mov
fisub
jbe
push
jno
pusha
add
adc
or
call
mov
iret
and
fsub
xor
cs
enter
imul
aaa
scas
lahf
(bad)
(bad)
dec
push
jp
jge
idiv
ins
adc
sbb
cmps
sub
(bad)
sub
test
inc
out
jl
rcr
jns
cmc
sub
adc
or
mov
movs
jg
mov
lods
inc
idiv
lea
out
jns
add
rcl
or
ret
outs
dec
call
sbb
pusha
in
int
cld
jge
jl
dec
jmp
jnp
and
pop
and
inc
push
xor
adc
icebp
mov
push
retf
shl
popa
imul
or
mov
jmp
and
and
mov
pop
fld
jo
rcl
fwait
aam
and
and
outs
dec
jne
jg
lahf
fldenv
les
repz
ror
dec
jne
hlt
cmp
mov
scas
sub
jae
inc
mov
mov
lds
scas
or
sbb
xchg
(bad)
sub
sub
out
stos
sub
outs
scas
(bad)
(bad)
rol
adc
sahf
inc
push
ret
and
shl
cmp
jmp
stos
xor
or
mov
mov
mov
or
outs
dec
out
add
push
jnp
or
cmc
(bad)
test
sahf
dec
add
push
bnd
add
fisttp
mov
sar
out
and
arpl
push
jle
aas
(bad)
xor
shl
xchg
mov
add
mov
push
stc
xchg
loopne
shl
fild
sbb
push
and
adc
mov
fnstenv
xchg
xor
jecxz
popa
div
xchg
call
mov
sbb
push
(bad)
jns
push
xchg
sub
test
inc
out
jl
in
dec
inc
mov
pop
(bad)
popa
dec
dec
in
pop
je
sbb
(bad)
loop
jnp
shr
mov
cmp
aas
push
scas
add
lods
rcpps
(bad)
in
js
fwait
xchg
shl
in
out
loop
popa
lods
outs
mov
call
mov
in
or
pusha
cdq
xchg
push
inc
retf
ins
call
les
les
jmp
push
sar
test
or
xor
xchg
or
stos
mov
or
jb
xor
stos
mov
aad
test
adc
and
pop
loop
jo
mov
jno
ficom
hlt
adc
add
or
inc
imul
sbb
stos
stos
pop
push
push
cmp
xor
inc
mov
add
inc
icebp
test
clc
dec
sbb
mov
mov
xchg
sub
dec
push
push
enter
xchg
push
add
sub
sub
ror
inc
mov
or
xchg
push
in
ror
push
mov
jmp
ror
scas
test
bound
leave
adc
xchg
inc
outs
cmp
mov
xchg
xchg
fwait
dec
mov
clc
jb
ins
add
mov
add
aas
xor
pop
(bad)
jl
push
sar
cmp
jae
pusha
cmps
test
loope
fsubr
scas
lods
mov
push
xor
es
rol
(bad)
mov
mov
adc
or
mov
retf
jmp
out
adc
inc
clc
clc
and
dec
sahf
inc
or
lods
jmp
inc
xor
scas
sar
pop
loope
loop
push
inc
dec
je
jno
fisttp
push
imul
dec
pop
repnz
retf
mov
sbb
outs
sub
clc
ficom
mov
jl
push
xlat
push
xchg
inc
(bad)
mov
fwait
cmp
push
add
popa
in
lock
xor
pop
inc
cmp
ret
jle
(bad)
push
add
in
sub
retf
dec
outs
and
cli
in
add
das
and
push
dec
call
add
shr
bound
push
imul
or
fild
outs
mov
ret
mov
cmp
std
mov
ret
shr
xchg
idiv
push
retf
shl
dec
pop
lahf
ror
imul
inc
mov
cmp
sbb
jae
mov
sbb
push
push
mov
mov
push
adc
mov
sbb
(bad)
cld
mov
or
lods
call
cmp
pop
inc
push
dec
mov
mov
rol
cmp
adc
pushf
inc
icebp
(bad)
(bad)
sbb
mov
cmp
shl
push
outs
rol
cmp
jg
cmps
std
sbb
lea
jle
sbb
jmp
dec
cmp
jbe
jo
into
enter
mov
and
push
cwde
loop
test
(bad)
lahf
dec
ja
movs
fwait
in
sbb
popa
cmp
fistp
pushf
ins
and
retf
in
xchg
or
adc
enter
mov
jl
sub
jno
(bad)
mov
scas
mov
test
dec
xchg
mov
sbb
ds
or
jmp
mov
jl
xor
arpl
dec
xchg
fs
loopne
sub
pop
mov
jns
mov
icebp
mov
outs
inc
clc
push
xor
xor
pop
loop
popa
push
shl
fsub
sti
inc
push
daa
lahf
jp
fsubr
pop
pop
aad
inc
push
clc
lahf
push
xchg
pop
xchg
(bad)
jmp
cmp
mov
pushf
cmp
sub
(bad)
mov
shl
pop
cs
jle
mov
adc
cmp
outs
hlt
sbb
inc
pop
(bad)
mov
cmp
adc
icebp
sub
adc
retf
xchg
cdq
and
repnz
gs
push
inc
inc
movs
out
mov
add
adc
out
mov
scas
mov
gs
sbb
gs
stos
and
and
retf
push
adc
(bad)
dec
pop
jo
hlt
push
pop
and
mov
jecxz
repz
sti
jecxz
xchg
mov
dec
aaa
mov
inc
xor
sahf
inc
sub
repnz
add
xchg
adc
cmps
lods
xor
cmp
mov
push
xchg
adc
pop
jo
sub
inc
cmp
(bad)
imul
out
dec
inc
idiv
dec
push
repnz
dec
jmp
and
stos
jg
lods
dec
sar
lods
inc
idiv
popf
pop
hlt
cmps
push
or
fiadd
outs
and
cld
in
mov
push
mov
pop
cmp
inc
clc
xchg
xor
lds
jo
mov
inc
fs
jb
xlat
ins
stc
push
jmp
push
adc
leave
sti
leave
movs
sbb
inc
ins
aaa
mov
fst
mov
sbb
inc
stos
sub
rcr
sbb
push
adc
sbb
and
mov
jp
ins
test
xchg
inc
in
pop
jle
gs
push
sbb
lods
pop
push
xchg
in
out
mov
sar
and
mov
sahf
bound
pop
mov
aad
(bad)
pop
cmps
jge
fidiv
je
ins
inc
repnz
inc
cwde
pop
fidiv
pop
sbb
cmp
jle
mov
add
int3
cmps
xlat
sub
and
fmul
lahf
xchg
sti
cmps
or
loop
dec
ds
mov
call
add
pop
(bad)
cld
mov
jl
jnp
cmps
addr16
stc
(bad)
dec
add
popf
pop
clc
cli
dec
fimul
jmp
push
aam
out
push
pop
jmp
iret
cld
outs
(bad)
push
add
sahf
pop
in
neg
mov
push
or
das
loope
js
imul
dec
(bad)
cld
mov
fstp
adc
mov
inc
adc
push
fs
pop
call
jmp
and
outs
test
ret
or
inc
push
ffree
and
stos
stos
xor
lea
cmp
lahf
mov
stos
mov
rcr
mov
mov
aad
dec
popf
cmp
ret
lods
and
xchg
mov
pop
out
rol
pop
das
mov
jae
and
dec
loop
out
push
ret
inc
xor
add
nop
push
pop
cmp
jecxz
push
shr
ja
pop
cmps
pop
inc
ror
pop
(bad)
jl
mov
push
dec
shl
test
daa
mov
xor
mov
xor
xchg
ss
push
fist
mov
das
(bad)
imul
sbb
es
cli
sbb
out
push
mov
movs
and
outs
daa
rcl
xchg
push
push
sar
sub
dec
adc
dec
stc
adc
fimul
push
out
clc
add
adc
popf
xchg
mov
test
mov
cli
push
repz
xchg
ins
imul
mov
jo
pop
int
jge
and
mov
enter
cmps
sub
stos
daa
sbb
dec
lods
and
dec
push
repnz
frstor
jns
jge
int
sbb
mov
xchg
and
addr16
cmp
xchg
dec
loopne
cmp
add
cmp
xchg
jne
ds
jmp
shl
aas
cmc
leave
rcl
dec
add
push
jbe
sbb
aam
or
(bad)
pop
repnz
loopne
iret
inc
retf
lods
dec
xlat
stc
pop
aam
call
pop
popa
call
inc
xor
loop
(bad)
jl
nop
push
imul
stc
pop
ret
dec
add
cdq
shl
push
mov
test
call
jle
cmps
dec
xchg
xchg
mov
pop
push
icebp
es
mov
xor
sub
jne
sti
push
adc
cmp
int3
mov
jns
loopne
ins
adc
jp
mov
loop
cmp
scas
lds
mov
jecxz
mov
inc
sub
cmp
fimul
ds
or
dec
push
cli
mov
xchg
fmul
jecxz
lea
and
movs
fmul
mov
inc
test
mov
pop
adc
arpl
fistp
inc
popf
jno
rcl
popa
pop
and
pop
inc
cwde
pop
mov
aas
xchg
mov
in
add
in
dec
push
and
and
xchg
xor
cmp
jge
add
jno
fs
stos
dec
in
test
mov
inc
in
dec
jo
cs
pop
retf
xchg
xchg
and
icebp
sub
fst
push
xchg
stos
push
push
shl
in
push
push
out
les
mov
pop
mov
mov
nop
push
dec
xor
jmp
mov
add
jae
jl
or
dec
xor
adc
or
xor
cmp
sub
stc
mov
mov
aad
in
mov
idiv
sti
rcr
(bad)
jae
xchg
les
push
adc
pop
scas
dec
cmps
push
nop
or
pop
lock
cmp
(bad)
sbb
sub
imul
pop
push
imul
pop
push
imul
pop
push
imul
ins
sub
cmp
clc
sub
idiv
pop
loopne
es
push
cs
pop
mov
pop
pop
popa
stos
shl
pop
(bad)
xchg
inc
movs
push
inc
iret
pop
push
sub
ins
cmp
arpl
arpl
mov
ret
dec
hlt
inc
in
cld
pop
test
pop
lock
adc
retf
adc
dec
and
jo
dec
pop
sar
jbe
xchg
imul
test
lock
shl
sub
sub
mul
push
imul
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
and
sub
mul
lock
ins
pusha
out
ins
push
out
pop
push
mov
pop
inc
idiv
dec
inc
idiv
pop
pop
loopne
push
push
in
inc
dec
loop
dec
sub
stc
and
and
push
nop
lds
xor
ret
dec
mov
dec
lods
inc
daa
and
in
and
sub
inc
mov
mov
fild
loop
dec
aas
movs
xchg
stos
inc
cmc
xchg
(bad)
mov
mov
jle
mov
aad
in
pop
(bad)
mul
jmp
fnstcw
cmp
push
hlt
stos
xor
add
mov
inc
cmp
mov
mov
pop
mov
iret
inc
xchg
arpl
mov
test
adc
scas
pop
movs
nop
mov
sbb
retf
cdq
sub
js
and
fsub
xlat
pop
rcr
push
sbb
and
adc
push
loope
mov
mov
jecxz
jp
mov
push
mov
pop
(bad)
cmps
aas
inc
pop
stc
xor
stc
dec
xor
js
xadd
js
mov
sbb
sbb
xlat
aam
sbb
jno
sbb
ss
imul
enter
popa
bound
cwde
cmp
jle
stos
fwait
xor
sbb
inc
mov
jle
test
(bad)
mov
or
ins
call
nop
shl
and
push
pop
lods
arpl
repnz
(bad)
data16
bnd
jle
mov
cwde
adc
sbb
adc
sahf
fbld
jb
jnp
ficomp
mov
adc
jnp
dec
xchg
pop
mov
pop
jae
and
xchg
dec
lahf
loop
lock
sbb
or
ins
sub
rol
push
xor
push
fs
int3
mov
inc
stc
dec
cmps
jg
or
jo
and
sub
xchg
js
push
test
les
popf
sub
inc
ret
and
cmc
dec
pop
xchg
movs
push
add
sub
iret
cmps
lahf
xor
dec
inc
jmp
adc
sbb
cmps
sub
(bad)
sub
cmp
cmc
cmp
lock
jmp
xor
lock
sub
(bad)
out
arpl
xchg
cld
in
mov
ss
icebp
add
pop
fnstcw
ins
adc
cmp
mov
mov
lock
cdq
jmp
mov
hlt
and
into
xor
stos
dec
call
mov
push
cmp
sbb
sbb
daa
ds
arpl
add
popf
loop
inc
movs
inc
ins
xchg
fbld
fdiv
arpl
push
dec
push
or
push
fldenv
ret
pop
dec
loopne
jbe
adc
les
jbe
sub
mov
rcl
rol
xor
sub
mov
aad
sub
out
aas
inc
aas
push
and
gs
arpl
sbb
jb
mov
mov
dec
add
dec
xchg
fcmove
bnd
inc
(bad)
dec
mov
pcmpeqd
mov
in
inc
jge
and
clc
pop
push
cmp
fcomp
push
inc
retf
(bad)
(bad)
adc
sbb
and
icebp
dec
dec
sbb
adc
xor
xor
sub
dec
movs
add
jb
imul
rcr
and
mov
gs
sub
shl
popf
inc
(bad)
xor
clc
jo
out
(bad)
jmp
adc
inc
mov
fs
xor
cli
(bad)
in
scas
inc
dec
push
jnp
jg
inc
sbb
xchg
cmp
sbb
cmp
mov
sbb
shr
les
inc
arpl
push
jmp
jmp
inc
outs
jmp
adc
ss
xchg
shl
xchg
jae
lds
sbb
cmp
cmps
xchg
jp
dec
icebp
xor
test
and
cmp
push
adc
imul
inc
inc
or
push
(bad)
cmp
out
dec
inc
imul
dec
inc
loop
push
pop
out
xor
in
pop
inc
sti
daa
stos
jg
lods
dec
sar
lods
push
idiv
or
ins
add
dec
in
or
daa
mov
mov
xchg
pop
add
(bad)
test
push
add
dec
mov
jmp
fbld
and
dec
les
pop
shl
dec
fcmovu
xchg
and
shl
(bad)
pop
ins
dec
scas
mov
mov
jmp
xlat
xchg
(bad)
jmp
das
and
xchg
ja
dec
ror
in
imul
movs
dec
cld
xchg
jbe
xchg
mov
adc
cmp
jle
lahf
mov
(bad)
jl
jp
jno
cld
and
dec
ss
xlat
scas
inc
push
les
std
scas
test
lock
stc
ret
stos
cwde
dec
pop
mov
push
or
lahf
sub
icebp
aad
and
lods
arpl
jmp
sbb
into
loopne
cld
dec
push
inc
test
jns
repz
dec
mov
add
mov
xor
in
fs
and
dec
mov
pop
jle
dec
out
lea
scas
mov
push
gs
xor
aas
mov
dec
cmp
sbb
jmp
mov
adc
jl
fstp
mov
xchg
retf
pop
jno
lds
sbb
jno
or
cwde
push
push
loop
aad
lock
and
ret
out
cs
enter
pop
dec
pop
retf
mov
pop
xor
jg
sub
fdivp
cmp
inc
inc
popa
push
scas
int3
cmp
rcl
scas
pop
(bad)
int3
mov
jl
or
xchg
cmp
outs
sub
in
lods
mov
xor
lods
and
das
inc
mov
out
jge
repz
xchg
push
adc
mov
clc
pop
sub
push
mov
mov
mov
out
sti
dec
loope
(bad)
fwait
ret
push
mov
pop
fcomp
sbb
fstp
int3
xchg
mov
movs
sahf
(bad)
fstp
leave
hlt
sub
cmps
retf
lock
push
jp
pop
rol
mov
xor
ret
out
imul
imul
aas
out
adc
out
ds
xchg
sub
xor
call
sbb
and
imul
mov
bound
xchg
add
jmp
test
jp
xchg
(bad)
stc
cdq
ss
sub
fxch
add
jbe
xchg
cwde
ins
and
imul
jle
inc
mov
stos
int3
push
cwde
pop
leave
sub
cmp
rol
inc
cmp
mov
jge
jge
lock
add
jb
push
cmp
mov
pushf
pop
jmp
jbe
test
call
test
je
jg
xor
movs
xor
or
mov
xor
not
loopne
push
pop
jle
jg
mov
mov
xchg
gs
or
dec
cmc
outs
mov
rcl
sti
jmp
sub
test
lea
dec
inc
push
cmp
fsubr
jle
inc
sbb
pop
xor
mov
push
daa
mov
test
xchg
ds
sub
test
pop
pop
imul
popa
ins
bound
loopne
pop
mov
test
jp
fistp
neg
mov
shl
das
stos
enter
clc
mov
fist
add
sar
(bad)
ret
shr
xor
(bad)
outs
sbb
ins
add
push
mov
int
in
stos
mov
xor
icebp
pop
xchg
loopne
sbb
clts
mov
xchg
or
dec
mov
adc
fild
sar
and
push
add
pop
sbb
xchg
or
shrd
push
lds
dec
push
scas
or
shl
retf
repz
adc
call
adc
arpl
jnp
xchg
xchg
(bad)
pop
add
jae
push
cmp
and
mov
jns
jecxz
push
pop
lock
sahf
or
outs
or
add
inc
in
xor
push
cmp
and
ret
pop
fld
jns
and
ins
scas
or
jle
sbb
mov
mov
inc
push
jl
mov
scas
mov
cmp
jle
push
jl
jmp
add
or
dec
or
cmp
fld
cmps
pushf
fs
sbb
jecxz
mov
push
xor
push
jno
pop
dec
retf
cmp
call
xchg
cmp
adc
cmp
cmovg
xchg
push
hlt
inc
rcl
in
and
popa
or
mov
ja
inc
xchg
out
jno
xor
das
jns
aam
sub
xor
stos
fdiv
xor
xor
or
sub
std
outs
out
and
mov
fcomp
mov
mov
cmp
mov
xor
or
jge
inc
test
jb
push
inc
sub
in
js
fcom
jb
mov
push
fadd
rcl
cmp
rcr
sub
mov
sbb
daa
mov
frstor
add
loopne
dec
adc
(bad)
jmp
adc
sar
fstp
xchg
out
mov
(bad)
mov
dec
jnp
out
inc
in
mov
test
and
test
(bad)
out
add
and
sub
adc
ret
rsm
push
xlat
xor
lods
retf
xor
dec
push
std
popa
loopne
xor
imul
test
mov
xchg
mov
xchg
mov
jge
nop
cmps
pop
into
ja
pushw
jl
(bad)
sbb
mov
pop
xor
daa
push
pop
pop
icebp
or
es
inc
jg
loope
sub
call
sbb
cdq
mov
cmp
adc
xchg
inc
sbb
xor
push
movs
sub
cmp
jmp
addr16
sub
and
cmp
mov
div
inc
jp
add
dec
stos
adc
add
push
push
lea
pop
out
push
rcl
and
sbb
mov
jnp
sbb
das
ror
mov
mov
dec
call
(bad)
in
int
xor
adc
and
dec
(bad)
pusha
int
jge
pop
add
lds
ss
mov
mov
je
sbb
push
jne
repz
fbld
mov
jmp
outs
push
mov
cmp
sti
repnz
aam
push
push
sub
pop
pop
rcl
fistp
sub
mov
xchg
xchg
call
mov
jbe
xor
pusha
inc
jns
loopne
or
cmp
pusha
mov
or
movs
cmp
inc
mov
add
cs
dec
dec
xor
cli
dec
fisubr
pop
dec
aaa
adc
and
and
dec
into
adc
aam
xor
hlt
inc
mov
mov
jge
jecxz
ins
xchg
jne
movs
xor
not
adc
retf
rcr
jno
dec
sbb
push
xor
dec
push
mov
xor
dec
push
mov
lea
movs
push
jl
pop
fistp
shl
test
sub
push
aam
push
sbb
inc
push
inc
fist
ror
adc
popa
add
shr
imul
fst
loop
jbe
ins
jo
sub
ins
pusha
(bad)
sbb
(bad)
cdq
or
jo
imul
loopne
mov
inc
leave
dec
xor
leave
pop
mov
sbb
cmp
idiv
mov
fnstcw
sub
stos
sbb
add
imul
daa
push
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
dec
sar
jns
push
hlt
cmp
cmp
push
jmp
push
(bad)
sub
imul
pop
add
sub
pop
xchg
test
dec
inc
idiv
pop
push
(bad)
sub
out
pop
pusha
imul
cmp
jg
fldcw
fld
popa
test
inc
imul
dec
or
jne
test
ins
jb
popa
cld
mov
jae
aaa
mov
adc
lahf
ret
call
mov
cmc
pop
xchg
or
sbb
xchg
into
popf
and
ins
popf
add
sar
retf
(bad)
shl
pop
lods
sar
and
pop
push
neg
pop
push
mov
pop
push
imul
jge
imul
jo
sub
out
push
push
lds
pop
rol
sub
mov
mov
push
out
in
mov
cmp
fcmovnbe
mov
bound
sbb
and
cmp
leave
adc
dec
in
pop
push
bound
rcr
pop
hlt
dec
jg
dec
cmp
mov
popa
mov
lock
adc
pop
xor
mov
push
popf
dec
xchg
mov
pop
jo
cmp
push
out
pop
push
jbe
dec
jo
sub
imul
dec
inc
(bad)
cmp
aam
dec
inc
in
jl
rcl
push
jmp
sbb
out
pop
cdq
push
aad
mov
adc
adc
or
ret
mov
(bad)
jecxz
fisttp
aas
jns
push
push
inc
enter
jmp
fiadd
rcr
push
sahf
daa
xor
mov
daa
push
xchg
pop
mov
adc
push
push
sahf
cld
retf
dec
shl
pop
cmps
addr16
inc
mov
inc
shl
xchg
xchg
fcmovb
sbb
xchg
and
adc
out
call
mov
push
jo
fs
mov
add
out
(bad)
jb
ss
stos
sub
and
sbb
push
mov
pop
push
cmps
sub
test
jo
imul
loop
sbb
or
dec
dec
xlat
mov
int3
push
dec
rol
sbb
mov
xlat
daa
jg
dec
loop
dec
lods
xchg
aaa
or
jbe
pop
out
jmp
add
sbb
mov
adc
(bad)
mov
dec
lahf
cli
sbb
mov
fld
mov
mov
or
stc
pop
xchg
popa
xchg
fmul
int
imul
mov
pop
fld
mov
fisubr
dec
xor
inc
arpl
inc
fldenv
mov
sar
cld
xor
mov
sbb
imul
jg
arpl
bound
ins
fsubr
std
jae
mov
pop
in
mov
std
mov
pop
fcmovnu
sbb
jo
or
jo
inc
jmp
pop
cdq
shr
movs
(bad)
pop
xlat
push
or
rol
mul
adc
stc
adc
mul
hlt
mov
xor
push
jns
cmp
mov
retf
out
xchg
and
call
ret
outs
xor
push
rol
cli
mov
xchg
and
retf
adc
cmp
mov
fmul
push
pop
pushf
add
test
mov
fistp
mov
cmc
out
jne
aam
mov
jne
mov
xor
(bad)
mov
outs
pop
scas
pop
int
les
pushf
dec
pop
inc
inc
mov
mov
inc
icebp
dec
mov
adc
(bad)
push
cmps
int
inc
xlat
mov
lds
push
js
les
push
fisubr
ins
inc
idiv
sub
push
cmps
sub
imul
pop
adc
sbb
(bad)
or
out
dec
inc
mov
jg
out
sbb
cmc
sbb
push
push
call
cmp
cmp
mov
sbb
aas
clc
jl
mov
iret
cmp
ror
mov
stos
fmul
push
xlat
adc
aaa
xchg
iret
or
pop
push
out
lock
cs
(bad)
or
inc
fbld
and
cmc
jge
inc
pop
dec
gs
xor
mov
push
mov
sbb
aaa
ret
loop
jmp
mov
and
scas
pop
test
adc
lea
add
lods
push
jge
rcl
fld
bound
or
sti
out
push
jb
ja
xor
repz
neg
jns
cmp
sahf
adc
dec
or
mov
dec
inc
les
push
push
jno
cdq
add
ja
popf
xor
adc
xor
lea
cmp
(bad)
ret
retf
je
pop
popf
xchg
jmp
pusha
dec
in
push
xor
add
mov
or
and
enter
mov
popf
jne
jg
add
sub
bound
push
cmps
sub
sti
imul
(bad)
xor
adc
jmp
shl
mov
jmp
sbb
dec
push
out
pop
push
out
pop
push
out
pop
inc
idiv
dec
inc
in
dec
dec
loopne
mov
shr
lods
inc
idiv
mov
hlt
iret
leave
mov
push
sbb
mov
pop
inc
shr
cmps
push
cmp
pop
(bad)
fst
xor
test
mov
and
add
or
jl
and
lds
neg
jo
imul
xchg
int
iret
adc
push
jecxz
fwait
dec
mov
mov
xor
arpl
mov
enter
mov
imul
add
sahf
je
dec
(bad)
sbb
add
sub
xor
jb
sbb
lds
jecxz
(bad)
jp
push
mov
push
dec
adc
jp
div
iret
(bad)
out
fbld
xchg
lock
stos
in
(bad)
mov
loope
ins
ror
pop
pusha
test
push
imul
jp
neg
fistp
push
sti
scas
adc
pop
jo
cmp
out
pop
push
(bad)
cmp
out
dec
inc
idiv
dec
inc
hlt
cmp
repz
inc
sub
and
shr
dec
and
pop
leave
lds
jle
hlt
scas
out
in
mov
pop
jo
add
xor
push
fdivr
add
sub
jl
xchg
mov
js
jg
pop
and
test
jge
pop
fwait
dec
jnp
int
stc
loop
loopne
popf
sub
sub
lock
pop
call
sbb
cmps
cmp
repnz
ins
sahf
cwde
and
pushf
test
pmaxub
(bad)
rol
cdq
mov
pushw
repz
shl
addr16
push
cdq
sbb
or
dec
dec
mov
mov
mov
jecxz
add
jge
stos
mov
std
or
cs
jmp
push
cmp
out
dec
push
idiv
push
out
dec
inc
imul
dec
inc
idiv
inc
inc
repnz
dec
loope
push
push
call
or
add
rol
arpl
xor
mov
dec
add
(bad)
das
dec
and
fmul
stos
push
push
mov
xor
adc
add
cmp
push
into
xchg
mov
xchg
push
rcl
sbb
jle
xor
das
and
mov
repz
sbb
mov
test
mov
sub
aad
(bad)
or
sub
adc
dec
pop
in
mov
sub
xchg
adc
in
push
aam
push
lahf
xchg
inc
mov
not
xchg
(bad)
mov
cmp
jae
mov
and
xor
xor
inc
mul
pusha
(bad)
push
imul
into
(bad)
in
repz
mov
or
int3
add
test
test
gs
mov
pop
aam
popa
retf
aam
outs
and
mov
pop
push
stos
test
cdq
and
pop
jo
sbb
idiv
pop
push
(bad)
sub
cmp
out
dec
dec
loopne
repnz
in
push
dec
push
out
pop
push
jbe
xchg
adc
repz
dec
neg
mov
push
pop
jmp
push
mov
and
add
sbb
daa
push
mov
adc
mov
jbe
xchg
fyl2xp1
in
fisttp
xor
shl
jae
pop
adc
fisubr
jnp
js
stos
loopne
xlat
(bad)
mov
mov
aam
mov
adc
or
inc
adc
jg
inc
mov
stos
bound
(bad)
aam
repz
sub
js
push
add
or
inc
adc
addr16
sbb
mov
and
mov
or
aas
fidivr
or
enter
ja
mov
imul
sub
add
push
mov
sub
mov
icebp
aaa
or
imul
loopne
cmp
sbb
and
fild
lods
cmp
imul
fst
loop
jbe
ins
jo
sub
ins
pusha
(bad)
sbb
(bad)
cdq
or
jo
imul
loopne
mov
inc
leave
dec
xor
leave
pop
mov
sbb
cmp
idiv
mov
fnstcw
sub
stos
sbb
add
imul
daa
push
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
dec
sar
cmp
idiv
dec
pusha
(bad)
cmp
inc
jmp
push
idiv
pop
push
out
pop
push
imul
cmp
mov
leave
and
dec
push
out
pop
push
out
pop
push
imul
jge
idiv
sub
adc
cmp
(bad)
sbb
das
idiv
fs
int
dec
in
or
enter
cmp
hlt
add
shl
loop
push
add
and
push
pop
movs
add
cmps
sub
imul
dec
ret
jmp
mov
in
jecxz
jno
add
(bad)
cld
sub
aam
push
pop
push
sub
fwait
sti
test
mov
cli
out
imul
add
mov
pop
push
inc
sub
imul
xor
clc
pop
bound
ret
mov
shr
add
adc
retf
adc
jp
sahf
mov
ret
aaa
push
push
call
test
fimul
cld
and
addr16
stc
mov
jmp
ins
push
test
and
add
pop
push
imul
or
hlt
xor
push
loope
iret
jmp
sub
mov
mov
scas
xchg
mov
ja
int
push
push
rol
test
(bad)
mov
mov
outs
or
jp
ret
(bad)
ror
mov
in
lahf
push
sub
aas
sti
push
fsub
sub
xchg
mov
push
xor
adc
cdq
js
push
(bad)
retf
ins
cli
xor
pop
mov
jmp
cmp
xchg
push
cmps
test
cwde
mov
aad
imul
push
xchg
rcr
ja
mov
(bad)
ror
pusha
dec
cs
rcl
enter
ss
xor
sub
jge
pop
push
fs
cmc
sbb
ins
aam
loopne
or
and
pop
push
pop
push
dec
sub
imul
pop
push
or
pop
push
imul
pop
push
imul
pop
shr
es
push
cmps
sub
imul
mov
sar
inc
pop
push
xchg
pop
push
imul
sub
sar
pop
pop
push
push
sub
imul
pop
and
test
pop
shl
sub
imul
cmps
pop
idiv
push
(bad)
minps
sub
imul
or
push
(bad)
daa
pop
push
imul
pop
push
imul
popf
xor
pop
push
fdiv
or
push
sub
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
push
xor
data16
add
dec
inc
idiv
dec
adc
sub
out
or
and
dec
ins
inc
mov
ins
push
(bad)
js
push
ror
rol
in
cmp
or
dec
dec
mov
mov
dec
stos
xchg
mov
pushf
xchg
inc
movs
mov
(bad)
fsubr
push
adc
push
add
sbb
es
in
cmp
xor
cmp
retf
mov
pop
fiadd
mov
mov
cmp
retf
nop
xchg
mov
add
mov
dec
and
and
xchg
popf
mov
lock
cmp
adc
mov
lock
cmp
adc
mov
pop
daa
lock
cmp
daa
test
nop
(bad)
loop
add
push
loope
xchg
stos
mov
or
and
inc
(bad)
fwait
mov
outs
push
sub
ss
scas
test
jg
pop
fst
retf
es
pop
in
in
lods
in
add
shl
add
push
push
jmp
mov
scas
inc
movs
sbb
push
ds
and
cmp
or
adc
dec
(bad)
ins
inc
mov
pushf
loopne
cwde
movs
ret
mov
outs
fs
aam
rcl
mov
sbb
and
shl
ja
adc
xor
stos
or
pop
jmp
or
pusha
sbb
ja
jo
dec
mov
aam
imul
pop
jbe
xchg
push
and
in
push
movs
pop
mov
jge
ret
out
inc
cwde
mov
dec
inc
scas
pop
mov
rol
(bad)
or
sbb
lock
fs
lods
ror
adc
or
hlt
imul
enter
push
mov
jae
sbb
sbb
mov
das
mov
outs
push
ret
aad
mov
or
retf
stos
add
xchg
js
mov
dec
int
sub
add
cdq
or
and
cmc
retf
push
test
push
cli
test
jle
fstp
adc
cli
test
jle
fstp
adc
cli
test
jle
enter
add
inc
mov
push
xchg
sbb
mov
int
iret
in
and
iret
shl
sti
fs
mov
inc
inc
cmps
repz
jmp
jbe
xor
gs
lods
jo
cmp
or
pop
fbstp
popaw
aam
mov
and
loopne
in
cmc
pop
xchg
pop
bound
push
sbb
sub
xor
mov
enter
xchg
mov
jl
push
inc
sub
jge
js
addr16
push
nop
dec
repnz
sbb
in
nop
or
leave
adc
outs
add
push
adc
mov
sbb
xchg
call
scas
sub
outs
dec
repz
mov
inc
cmp
sti
add
xrelease
not
xchg
shl
addr16
xor
or
fistp
or
xor
dec
cmp
mov
sbb
mov
sbb
nop
dec
cmp
pop
sub
dec
cmp
mov
sbb
mov
sbb
nop
dec
cmp
pop
sub
dec
cmp
mov
fistp
jo
and
push
out
cmp
xor
movs
mov
push
cmp
jmp
sub
adc
ins
movs
jbe
nop
stc
or
pushf
mov
(bad)
xchg
fs
sbb
hlt
imul
std
push
mov
lods
jmp
gs
add
ss
lea
(bad)
retf
in
loope
xchg
fwait
push
push
scas
inc
retf
xor
movs
ins
in
cwde
mov
inc
outs
inc
fwait
jbe
cmp
and
(bad)
neg
push
mov
in
loopne
fwait
add
xchg
ja
(bad)
enter
xor
push
pop
in
in
loope
xchg
imul
mov
stos
sbb
pusha
jbe
or
mov
sbb
daa
or
push
sbb
sti
cdq
ja
mov
ret
adc
in
xchg
icebp
mov
pop
inc
ror
gs
fidivr
sub
jl
mov
imul
mov
sub
mov
imul
repz
sbb
loop
sbb
mov
sub
and
gs
mov
mov
inc
(bad)
xor
rcl
lods
(bad)
nop
in
xchg
test
mov
xchg
inc
inc
(bad)
cmp
les
jae
xor
or
stc
lds
bound
outs
mov
hlt
inc
or
stc
lds
bound
outs
mov
hlt
inc
or
stc
lds
bound
outs
mov
hlt
inc
or
stc
lds
bound
outs
mov
hlt
and
push
push
pop
lds
icebp
mov
scas
inc
into
sar
gs
sar
movs
jl
fwait
cwde
test
xchg
jbe
push
mov
call
add
mov
in
pusha
popa
mov
xchg
ja
(bad)
enter
and
push
pop
in
lods
xlat
mov
cmps
dec
push
or
add
imul
cmps
cmp
cmps
sub
push
sbb
inc
(bad)
cmp
sti
sbb
inc
shl
pop
inc
in
pop
es
sar
dec
and
or
lds
sahf
mov
fistp
xchg
leave
sbb
dec
std
xor
mov
pusha
sbb
xlat
mov
mov
ja
out
xchg
test
sahf
and
pop
js
repnz
jne
and
call
mov
mov
pop
test
imul
ret
or
mov
scas
stos
fwait
sub
mov
inc
xchg
push
inc
or
mov
fscale
cmc
adc
test
cdq
mov
push
dec
call
jno
stos
adc
(bad)
mov
test
xchg
jo
cmp
fs
lds
xchg
sbb
gs
or
stos
cwde
mov
aas
out
xor
jl
jmp
call
and
jb
add
jl
movs
daa
push
es
inc
mov
mov
jo
jg
xchg
ja
adc
pop
sub
out
or
test
call
cmps
or
push
sub
or
shr
pop
loope
and
loop
pop
in
fidiv
sbb
add
push
ins
daa
or
outs
or
dec
sub
enter
jae
add
lds
or
inc
inc
cs
arpl
cmp
mov
xchg
inc
pop
enter
je
fistp
dec
and
inc
call
and
adc
nop
dec
daa
xor
fwait
int3
(bad)
cmc
imul
leave
xchg
rol
xchg
push
or
and
mov
jmp
push
cmp
cmp
ss
mov
mov
jle
lea
and
sub
call
dec
mov
out
out
dec
jmp
in
fsub
xchg
pop
mov
(bad)
aas
cmp
bound
pop
stos
jp
std
push
push
inc
xchg
(bad)
mov
jmp
jg
jmp
icebp
mov
jo
(bad)
xchg
cmp
es
sub
mov
cs
mov
scas
push
jl
hlt
out
xor
xor
add
lahf
xor
adc
out
inc
pop
mov
popa
sbb
adc
jno
sti
cmps
push
cwde
and
sub
adc
ds
inc
mov
retf
mov
mov
rol
pusha
xchg
cmp
cmc
adc
inc
fwait
rcl
aaa
and
idiv
inc
fcmovnb
push
movs
fs
jle
and
xor
sbb
shr
cmp
push
fs
xchg
or
push
xor
(bad)
jp
imul
call
inc
xchg
(bad)
cmc
mov
mov
dec
enter
xor
shr
(bad)
and
out
popf
and
add
jle
stc
sahf
popa
pop
fild
cld
sub
push
cmp
sub
xor
lock
dec
rol
xor
inc
fsub
les
cmps
sar
ror
push
mov
mov
jo
rcl
xchg
mov
es
add
jg
jge
in
fdivr
fbld
sub
push
cmp
sub
xor
lock
dec
rol
xor
inc
fsub
les
cmps
sar
ror
push
mov
mov
jo
rcl
xchg
mov
es
add
jg
jge
in
fdivr
fbld
sub
push
cmp
sub
adc
repz
cwde
adc
gs
sbb
xchg
lahf
cmp
ins
sbb
xchg
lahf
cmp
ins
sbb
xchg
lahf
cmp
ins
sbb
xchg
lahf
cmp
ins
sbb
xchg
lahf
cmp
ins
sbb
xchg
lahf
cmp
ins
sbb
xchg
lahf
cmp
ins
sbb
data16
cmp
pushf
dec
mov
dec
mov
int
sbb
mov
out
xchg
(bad)
adc
push
adc
xchg
fs
add
inc
xor
xor
in
jmp
mov
fsubr
sbb
stos
rcr
ret
sbb
mov
out
xchg
(bad)
adc
push
adc
xchg
fs
add
inc
xor
xor
in
jmp
mov
fsubr
sbb
stos
rcr
ret
js
push
mov
and
pop
cmp
push
loopne
sub
lock
jns
adc
cmc
sub
sbb
push
ins
in
xchg
xor
lods
or
lods
(bad)
mov
push
inc
mov
add
push
sti
jle
add
mov
pop
stc
inc
add
push
aaa
out
pop
lods
or
mov
lock
add
mov
and
sub
pusha
out
and
mov
mov
loopne
enter
popa
sbb
cmp
adc
in
dec
retf
test
push
sahf
mov
jg
in
mov
inc
cmc
inc
outs
adc
cdq
cmp
mov
inc
lea
mov
pusha
call
mov
dec
test
inc
push
mov
fistp
mov
jl
dec
gs
jns
aaa
adc
mov
inc
mov
pop
push
pusha
out
and
mov
aas
lods
mov
or
jge
imul
pop
pusha
out
pop
push
xchg
sub
test
inc
test
pop
inc
out
pop
jne
sbb
lock
sub
inc
out
test
lods
fdiv
mov
sahf
lahf
popa
inc
xchg
fsubrp
xor
mov
icebp
std
popa
sti
inc
xor
out
xchg
xchg
mov
stos
aad
call
mov
test
mov
xchg
test
pop
sbb
push
add
mov
ret
gs
gs
cmp
mov
dec
pushf
dec
xchg
xchg
cmp
sbb
ins
xchg
xchg
xor
dec
sbb
ins
xchg
xchg
xor
data16
test
mov
push
xlat
xor
stos
jno
mov
push
les
push
mov
daa
fisubr
and
fcomi
cmp
dec
gs
shl
arpl
sbb
xchg
loop
dec
out
adc
jae
mov
cmp
xor
sar
je
push
shl
pop
mov
add
cmp
sbb
jo
popf
js
shr
cs
push
or
call
sahf
cs
xchg
xor
pop
ficomp
clc
mov
arpl
push
push
aaa
jbe
cmp
(bad)
js
repz
jne
mov
daa
push
sub
cmp
cmp
pop
dec
(bad)
cs
push
int3
ss
mov
jnp
inc
push
adc
dec
mov
(bad)
mov
push
xchg
test
xchg
lods
imul
push
push
pop
inc
hlt
push
jo
fsub
repnz
or
cmp
mov
xchg
(bad)
cwde
movs
leave
fsub
inc
adc
pop
sbb
mov
sub
ins
dec
adc
pop
sbb
mov
sub
ins
dec
adc
pop
sbb
mov
push
jle
popf
inc
(bad)
loope
add
dec
xlat
xor
mov
dec
add
fst
aas
shl
gs
cmovb
pop
mov
lods
scas
xor
pop
cmp
mov
sahf
push
jecxz
sub
popf
test
int3
and
daa
in
aad
shl
pop
jo
js
xchg
and
retf
ds
mov
dec
or
push
mov
fistp
adc
sub
push
retf
mov
push
cmps
mov
dec
inc
ins
int3
loopne
xor
retf
iret
inc
cmp
cwde
or
rol
ds
or
rol
cs
mov
int
push
sbb
out
rol
js
and
mov
sbb
pop
push
retf
into
jb
inc
std
mov
mov
arpl
or
mov
sti
aam
test
push
je
push
dec
mov
adc
sub
add
dec
sbb
push
(bad)
sar
mov
or
mov
xor
pop
mov
sub
and
adc
arpl
xchg
xchg
mov
push
pop
xchg
adc
jecxz
dec
mov
jmp
sub
xor
lea
lock
mov
jmp
inc
mov
xor
sub
into
mov
cld
icebp
movs
iret
push
jle
mov
sbb
ins
push
movs
cld
push
pusha
addr16
xchg
adc
mov
add
xchg
dec
or
push
les
push
xor
out
(bad)
mov
push
das
add
xor
enter
xor
outs
pop
into
je
lea
and
mov
aad
jnp
and
mov
aad
jnp
and
mov
aad
jnp
and
mov
not
add
cli
ins
in
not
add
cli
ins
in
not
add
cli
ins
in
not
add
cli
ins
in
not
add
cli
ins
iret
div
lahf
add
cli
ins
iret
div
lahf
add
cli
ins
iret
div
lahf
add
cli
ins
iret
div
lahf
adc
pop
lods
lahf
pop
cmps
pop
push
or
add
imul
push
cmps
sub
test
inc
out
inc
ins
in
outs
arpl
cmp
fistp
arpl
xor
jo
aas
push
adc
cmp
or
cmp
inc
sub
push
ffree
fldenv
and
pop
sub
jae
jbe
imul
or
arpl
test
sub
je
movs
xor
cmp
fbstp
pusha
idiv
call
dec
mov
scas
xor
outs
das
mov
repnz
or
int
sbb
into
mov
mov
and
scas
dec
dec
addr16
cwde
rol
push
adc
mov
outs
sbb
adc
in
dec
sub
or
or
push
jns
(bad)
ror
(bad)
pop
mov
mov
mov
fidiv
je
mov
pop
xchg
xchg
aad
les
aas
inc
outs
int3
call
or
(bad)
push
ret
mov
xchg
sahf
dec
popf
stc
movs
inc
cmp
sbb
ret
adc
std
call
pusha
popa
pop
data16
je
push
fdiv
das
popf
dec
outs
mov
push
xchg
inc
iret
adc
dec
cmc
mov
ja
pop
out
cmp
scas
fbstp
xor
(bad)
cld
test
or
cmp
(bad)
cwde
jmp
xchg
push
xchg
lods
(bad)
and
mov
fstp
jp
xlat
retf
(bad)
ror
add
icebp
repz
fs
loope
jl
mov
jmp
push
mov
xlat
retf
(bad)
ror
add
icebp
repz
fs
loope
jl
mov
jmp
push
mov
xlat
retf
(bad)
ror
add
icebp
xchg
cmp
pusha
dec
repnz
adc
cmp
pop
xor
hlt
lock
adc
and
ror
mov
or
cmp
outs
mov
jl
cmp
jo
inc
loopne
jae
or
sbb
dec
add
xchg
int
pushf
mov
add
mov
and
sbb
sub
outs
in
jns
xchg
inc
ins
outs
lea
pop
fsub
pop
add
mov
cmp
mov
into
les
js
adc
inc
mov
push
sub
pop
dec
push
popa
mov
ins
push
mov
adc
jg
sub
bound
mov
mov
aaa
mov
not
fs
cmc
or
push
or
sub
stos
scas
sub
pop
xor
pop
inc
retf
and
sbb
retf
sbb
push
and
add
sahf
adc
(bad)
fst
sub
stos
scas
sub
pop
xor
int3
inc
retf
rcl
repz
cwde
and
adc
cs
mov
lea
(bad)
mov
xchg
or
sub
outs
gs
add
in
push
lock
push
push
xor
sub
push
cmp
(bad)
loopne
aaa
pop
pop
inc
bound
mov
cmp
test
lock
lds
adc
test
ret
test
add
jl
(bad)
pop
push
xor
cld
bound
cmovns
dec
inc
inc
jle
mov
sub
inc
pop
hlt
pushf
movs
cmps
das
inc
arpl
pop
inc
mov
xrelease
pcmpgtb
stos
mov
jmp
push
arpl
movs
sbb
in
lahf
pop
xchg
sbb
loope
mov
daa
mov
inc
jbe
dec
enter
push
fs
bound
div
(bad)
jp
dec
loope
sub
ss
jecxz
in
sbb
int
mov
pushf
dec
jns
mov
scas
and
bnd
inc
dec
xchg
popa
aaa
xchg
mov
out
lea
es
inc
fbstp
push
iret
inc
outs
inc
mov
je
push
push
push
pop
pop
xor
aas
xchg
mov
sub
clc
cmp
jae
mov
pusha
out
cmp
pop
jno
push
in
sub
inc
mov
ins
push
(bad)
jo
xlat
xor
ficomp
shl
in
retf
adc
jg
inc
repnz
add
call
adc
add
outs
loop
pop
add
cmp
not
adc
mov
jecxz
jmp
sbb
dec
push
xor
aad
clc
dec
scas
ret
fidiv
outs
push
(bad)
ss
jmp
adc
mov
xchg
cmps
sbb
out
pop
pshufw
or
jmp
push
mov
into
jmp
aad
cmc
xor
ins
inc
pop
and
js
retf
jle
adc
dec
add
je
adc
adc
lods
clc
jno
xchg
pop
sar
inc
rcl
cmp
rcl
loopne
jbe
fcom
je
loopne
and
cmp
xor
xor
mov
or
lea
push
movs
pusha
mov
lea
inc
xor
push
hlt
stos
scas
mov
mov
adc
sub
inc
jno
inc
sub
inc
and
sub
loop
outs
ret
sbb
loope
outs
enter
push
vmovsd
outs
popa
cld
fistp
out
pop
rcl
sbb
xchg
ficom
mov
dec
xor
and
inc
jecxz
lock
test
xchg
pop
mov
inc
mov
retf
or
xchg
lahf
or
adc
mov
fmul
xchg
fst
add
pop
cmp
mov
jns
add
jle
cmp
xor
(bad)
stos
or
and
pop
jl
or
in
cdq
daa
add
pusha
fucom
xchg
ins
xor
mov
int3
ror
test
stos
mov
adc
sub
loope
loopne
pop
xor
cmp
sbb
nop
rcl
stos
push
(bad)
dec
push
xchg
lods
fisubr
cmp
(bad)
cmp
or
cld
(bad)
and
dec
cdq
js
call
inc
xchg
std
loop
iret
sbb
mov
xor
xchg
ror
je
push
lods
dec
xor
push
ret
mov
repz
clc
xchg
dec
mov
mov
std
jno
adc
sti
cmp
mov
inc
adc
dec
mov
and
fld
cdq
out
inc
mov
jbe
and
(bad)
xlat
cmps
sbb
lds
or
not
push
in
repnz
sbb
jmp
xor
call
test
cmp
cmp
mov
adc
push
call
(bad)
cdq
popa
and
mov
scas
pop
stc
repnz
mov
(bad)
lock
push
or
retf
sub
dec
xor
dec
pop
or
lahf
je
sub
xor
or
(bad)
mov
mov
pop
xor
mov
sbb
or
or
inc
fcomp
adc
in
jns
nop
mov
inc
adc
push
xor
dec
dec
into
mov
sub
arpl
js
mov
(bad)
loop
push
rcl
pop
in
mov
xchg
xor
int3
retf
rcl
sbb
in
jns
nop
mov
inc
adc
mov
aam
pop
cmp
cdq
imul
jne
jb
mov
(bad)
rcr
jg
inc
in
nop
inc
imul
pop
stc
push
jb
mov
and
push
fcomp
fwait
outs
rol
cld
iret
es
cmc
pop
xchg
mov
and
pop
popa
mov
in
or
cli
push
push
sub
js
daa
add
dec
mov
or
cli
rcr
mov
inc
add
movs
inc
push
mov
inc
push
mov
inc
push
mov
inc
push
mov
inc
push
mov
inc
push
mov
inc
push
mov
inc
push
mov
inc
push
mov
inc
push
mov
push
pop
add
pop
ins
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sub
push
test
sub
pop
and
sub
push
test
sub
pop
and
sub
push
test
sub
pop
mov
(bad)
ror
xor
push
mov
(bad)
add
pop
xor
push
mov
(bad)
add
pop
xor
push
mov
(bad)
add
pop
xor
push
mov
(bad)
add
pop
xor
push
mov
fwait
add
sahf
fwait
push
and
cli
retf
xor
in
push
mov
call
test
int
mov
mov
cdq
mov
sbb
push
test
cwde
(bad)
add
in
mov
dec
bound
dec
xchg
sub
xlat
push
dec
mov
mov
sub
mov
out
sbb
sbb
rcr
cs
test
out
xchg
mov
sar
pop
loop
or
fsub
out
(bad)
stos
lods
and
push
(bad)
out
inc
mov
sar
pop
loop
or
fsub
out
(bad)
stos
lods
and
push
(bad)
out
inc
mov
sar
pop
loop
or
fsub
out
(bad)
stos
lods
and
push
(bad)
out
inc
mov
sar
pop
loop
or
fsub
out
(bad)
stos
lods
and
push
(bad)
out
inc
mov
sar
fsin
sbb
fdiv
jg
and
retf
sbb
inc
stos
pop
shr
adc
mov
popf
repnz
mov
(bad)
out
mov
in
scas
cmp
cmovge
sub
mov
push
les
int3
xchg
jne
clc
jecxz
push
mov
push
ret
mov
mov
sub
push
jp
or
movs
cdq
scas
clc
loopne
lea
sub
fidiv
jle
mov
add
in
(bad)
sbb
inc
imul
rol
leave
and
dec
add
imul
out
pop
inc
idiv
dec
inc
in
dec
dec
out
ss
push
jmp
inc
dec
repnz
dec
push
out
dec
adc
add
pop
jae
into
in
xchg
inc
xchg
sub
jo
push
jb
scas
push
repnz
or
shl
and
and
movlps
jno
aaa
cld
and
jbe
ret
push
sub
pop
sti
scas
push
adc
or
out
xchg
clc
hlt
js
lods
push
push
ror
sbb
movs
lahf
out
push
test
inc
loopne
adc
out
adc
dec
adc
in
ins
xor
and
jmp
in
and
pop
jno
jno
jo
(bad)
(bad)
out
es
add
not
jecxz
add
das
dec
adc
leave
jne
imul
ror
rol
xor
scas
add
loope
sub
add
inc
sbb
call
stos
adc
test
leave
push
push
inc
outs
pop
out
jno
inc
cmp
lods
pop
es
push
fs
fsub
lds
pushf
hlt
fwait
cdq
es
popf
mov
imul
fsubr
out
mov
into
mov
mov
and
mov
dec
inc
jno
sub
jo
enter
or
add
in
add
aad
jge
mov
(bad)
leave
imul
dec
and
ret
in
and
out
unpckhps
mov
sub
inc
mov
ins
ret
pop
xchg
and
push
mul
(bad)
sbb
pop
idiv
sub
ss
pop
mov
ins
ret
pop
xchg
push
stos
push
ja
pop
push
test
push
jo
add
fistp
cli
push
sub
ja
push
vmwrite
fdiv
add
cmp
adc
arpl
jmp
adc
addr16
(bad)
pusha
pop
sbb
adc
cmp
cmc
inc
add
rcl
jno
and
call
pop
inc
mov
fisub
ja
pop
in
call
inc
dec
shl
rcl
shl
inc
cmp
jmp
pop
into
mov
mov
icebp
mov
(bad)
lahf
jo
mov
dec
push
imul
jmp
repnz
in
sar
(bad)
push
or
dec
mov
jae
push
or
xor
in
pop
cld
ins
sbb
mov
out
movs
xlat
movs
clc
ficom
imul
push
cmp
das
(bad)
lds
cmp
xor
fsub
scas
mov
inc
dec
xchg
push
mov
inc
cdq
and
rol
sub
repz
push
or
test
jns
adc
mov
pop
jg
movs
jp
ds
add
loopne
push
lds
sahf
or
jge
mov
pop
sti
idiv
cmp
push
pop
std
push
mov
xor
mov
mov
xchg
cs
or
pop
cwde
mov
add
sbb
mov
cmc
push
mov
xor
mov
scas
icebp
lds
sub
jb
sub
sbb
jle
and
mov
push
or
push
add
cmp
and
sti
xchg
pop
or
ins
push
(bad)
sub
pop
mov
xor
mov
push
scas
fist
xor
jae
xor
scas
(bad)
pop
xor
aam
movs
push
std
cmp
push
call
repnz
ss
push
int
sub
lods
dec
mov
and
stos
jne
fs
arpl
jg
lahf
mov
mov
inc
(bad)
(bad)
jmp
push
not
ins
test
sub
out
mov
xchg
mov
into
cmps
sbb
pop
pop
lds
push
mov
daa
sbb
dec
sbb
fsubr
dec
mov
movs
adc
(bad)
and
pop
repnz
and
add
pop
shr
and
(bad)
movs
inc
mov
test
pop
xor
sub
mov
jo
popf
js
movs
test
(bad)
clc
leave
add
cmps
rol
push
push
stc
jae
pop
ins
repz
(bad)
sbb
and
imul
test
rol
cwde
xchg
mov
pop
icebp
hlt
jb
mov
ja
getsec
ds
jb
dec
sub
ins
push
(bad)
div
or
lds
mov
sub
(bad)
mov
sti
(bad)
mov
xchg
hlt
je
push
mov
and
les
xor
je
in
inc
push
popa
cmc
pop
mov
jecxz
dec
cmp
push
dec
out
(bad)
stos
popf
push
jp
arpl
test
sbb
(bad)
ss
xor
lods
popa
cmp
pop
daa
or
push
outs
rcl
xchg
push
jmp
jns
dec
fst
std
jge
or
pop
mov
ja
lods
sub
adc
push
or
push
sbb
mov
enter
and
xor
cmp
adc
dec
adc
and
push
mov
pop
inc
imul
adc
sub
push
mov
pop
inc
imul
inc
loop
scas
les
stos
imul
mov
mov
fwait
xchg
mov
add
push
les
iret
jecxz
iret
test
cmp
add
xchg
mov
push
retf
bound
fcmove
jns
fisub
push
adc
fisub
(bad)
cs
push
scas
les
aad
push
mov
hlt
and
fisubr
aad
jbe
pop
jb
and
fisubr
xor
jecxz
adc
ins
call
sbb
ds
or
jmp
ja
nop
call
fwait
sbb
mov
adc
in
shl
rcr
inc
cmc
cmp
call
jecxz
adc
fidivr
getsec
test
push
dec
in
(bad)
stos
cmc
adc
sbb
jb
cmps
jmp
aam
shr
pop
pusha
test
push
imul
jae
test
out
cmp
mov
pushf
adc
lahf
ins
inc
(bad)
bound
xor
hlt
adc
dec
push
out
add
xor
in
ss
je
lock
psllw
sub
dec
aas
ins
in
bound
cmp
je
lea
cmp
popf
xor
dec
in
pop
mov
mov
iret
adc
and
sbb
push
(bad)
sub
imul
jg
fild
xchg
bound
jg
fild
xchg
bound
jg
fild
xchg
bound
sbb
xor
fild
mov
mov
imul
mov
adc
popf
les
xor
imul
lea
and
adc
lea
xchg
cmp
je
lea
xor
hlt
cmps
lahf
dec
pop
dec
push
sub
pusha
idiv
dec
adc
or
imul
pop
push
(bad)
sub
idiv
inc
inc
out
ss
push
sti
daa
pop
inc
loop
inc
sub
aas
ffree
stc
and
and
xchg
mov
push
cmc
or
lds
xchg
loop
in
les
and
mov
inc
pusha
mov
or
mov
mov
xchg
adc
push
nop
jae
rol
inc
xchg
sbb
inc
xchg
pop
xor
out
xor
(bad)
cmp
mov
add
cmp
xchg
fucomi
iret
lahf
and
dec
mov
js
repz
adc
mov
add
outs
retf
jo
es
mov
test
xchg
dec
inc
lea
aas
sub
rol
bound
cmp
xchg
(bad)
out
cs
test
sahf
ins
xchg
pop
or
or
cmp
sbb
push
lea
pop
jnp
push
push
mov
hlt
cld
dec
pop
jl
rcr
mov
mov
xchg
dec
pop
jo
pop
pop
cmp
sbb
inc
cmp
ins
and
mov
int
ins
mov
jo
dec
or
sub
hlt
add
(bad)
imul
in
fnstsw
pusha
into
push
pusha
or
xchg
push
xor
lahf
xor
lock
mov
ja
je
pusha
stc
dec
cli
pop
pop
inc
frndint
push
pop
jg
jae
movs
push
shl
inc
pop
adc
push
or
jae
lahf
vmovaps
sub
dec
xlat
jmp
push
icebp
sub
movs
cmp
adc
push
or
jmp
mov
mov
sub
pop
call
pop
mov
dec
cmps
or
and
call
xor
sti
mov
jmp
les
outs
sub
inc
rcr
leave
mov
lahf
dec
xchg
pop
jb
and
fisubr
aad
jbe
pop
add
and
test
or
cs
aad
jae
or
cs
aad
jae
or
cs
aad
jae
or
cs
std
jae
pop
movs
movs
xchg
mov
jl
xchg
mov
(bad)
push
push
or
sub
rol
jp
mov
imul
mov
adc
and
mov
dec
cli
je
ins
add
sub
sbb
cmp
mov
mov
push
add
stc
fist
push
dec
std
mov
pop
idiv
dec
mov
xor
push
xor
loopne
cmc
inc
ins
inc
dec
cli
push
ret
retf
sar
idiv
sahf
mov
aaa
(bad)
loopne
cmc
inc
ins
inc
dec
cli
push
ret
retf
sar
idiv
sahf
pop
pop
(bad)
pop
sar
mov
xor
arpl
hlt
aaa
pusha
mov
cmp
ret
jns
mov
retf
dec
lahf
jae
lds
sar
mov
xor
arpl
hlt
aaa
pusha
mov
cmp
ret
jns
mov
retf
dec
lahf
jae
lds
shr
or
push
dec
sahf
jbe
das
sbb
cmp
and
neg
adc
in
mov
mov
(bad)
int
rcr
fs
pop
in
jl
mov
fld
movs
dec
ret
push
and
imul
ins
je
mov
and
lods
push
mov
data16
add
sbb
inc
out
pop
push
(bad)
sub
imul
dec
inc
idiv
dec
inc
jmp
inc
pop
repz
and
lock
sub
(bad)
out
xchg
lods
or
leave
das
mov
xor
sub
jnp
out
pop
jp
jnp
cdq
sub
ins
and
test
mov
push
std
sbb
nop
xchg
mov
cs
pop
sahf
push
int3
add
leave
ror
das
jmp
lea
push
pop
pop
je
dec
rol
ins
sub
mov
jnp
mov
xor
sbb
xchg
sbb
add
pop
outs
stos
mov
outs
inc
fwait
pop
(bad)
jmp
push
dec
cwde
aad
jns
std
aas
and
push
icebp
jno
pushf
clc
scas
push
jg
outs
ins
(bad)
aam
or
jnp
push
cs
jb
dec
call
pop
in
dec
or
mov
mov
cdq
ret
js
xchg
jmp
add
jmp
aad
mov
test
inc
lods
xor
and
xchg
mov
and
mov
adc
and
mov
dec
iret
cmps
and
pop
fxch
outs
dec
in
xor
mov
mov
cdq
jmp
test
add
daa
push
jecxz
jge
dec
daa
cdq
sbb
mov
dec
inc
inc
cmp
inc
jecxz
dec
inc
jecxz
dec
inc
jecxz
dec
inc
jecxz
pop
xor
mov
sbb
mov
xor
shl
aas
outs
adc
or
retf
and
mov
jp
out
scas
lds
into
xchg
pop
cmovns
mov
jnp
lahf
gs
adc
mov
mul
add
cmp
mov
pop
stc
jg
jne
iret
sbb
test
test
arpl
and
sbb
sbb
xlat
out
sbb
jmp
enter
sbb
push
inc
(bad)
rcl
add
arpl
(bad)
out
mov
addr16
in
test
outs
pop
jno
aaa
clc
dec
hlt
mov
jl
(bad)
jecxz
jno
or
inc
bnd
pop
jl
sbb
mov
retf
xchg
mov
inc
and
les
in
xor
push
inc
loope
push
sub
mov
mov
sbb
icebp
mov
sub
cmp
mov
pusha
inc
in
sbb
test
adc
sar
imul
adc
sub
add
inc
push
push
mov
aas
popa
(bad)
jbe
cwde
xor
jns
adc
hlt
sbb
sahf
and
adc
xor
(bad)
les
xor
fisttp
xor
dec
cmp
xchg
dec
cmp
xchg
dec
cmp
xchg
dec
cmp
xchg
dec
cmp
xchg
dec
lods
inc
xchg
enter
xor
jle
xlat
cli
out
inc
ficom
(bad)
sti
xor
jbe
and
cli
out
inc
ficom
(bad)
sti
add
or
pop
or
pop
or
pop
or
pop
or
lods
pop
test
dec
jge
imul
jge
out
dec
push
neg
pop
inc
(bad)
sub
imul
inc
inc
in
push
inc
jmp
pop
inc
loopne
movs
jg
mov
shr
lods
push
idiv
xchg
mov
clc
mov
and
add
in
cmp
jmp
cmp
xor
mov
gs
push
add
or
mov
es
add
fs
jge
fwait
jb
push
ror
fwait
mov
adc
imul
dec
pop
ds
push
out
push
xor
sbb
xchg
inc
dec
stos
inc
fadd
push
loop
aad
jle
push
mov
mov
jne
sar
jp
xor
(bad)
(bad)
cmc
jns
js
push
into
je
sub
aam
les
(bad)
(bad)
test
mov
push
mul
ficom
push
xlat
and
mov
mov
pop
lahf
cs
xchg
pop
jmp
(bad)
(bad)
enter
lock
ss
clc
inc
test
cmps
pop
adc
std
mov
mov
data16
pop
jns
out
movs
popf
push
call
inc
(bad)
imul
and
xor
jl
jns
pop
sub
fisub
outs
dec
or
adc
loop
ja
pushf
push
sbb
in
push
mov
loopne
icebp
out
div
sbb
imul
pushf
mov
cmp
sub
pop
lea
mov
jp
je
cdq
dec
adc
js
ret
mov
stos
pop
repnz
call
mov
std
scas
into
mov
push
lods
xor
xchg
(bad)
outs
sub
push
jl
cmp
xor
movs
cmp
adc
mov
adc
jmp
cmp
cmps
dec
test
and
cmp
inc
leave
icebp
adc
psubq
arpl
mov
(bad)
jne
mov
retf
(bad)
ins
dec
scas
mov
(bad)
push
out
lods
imul
icebp
dec
(bad)
jns
cwde
(bad)
fsubr
jne
mov
inc
jg
cld
clc
clc
pusha
repz
push
stc
sub
sahf
jbe
jo
fimul
push
sub
add
mov
dec
neg
rcl
sub
stos
jecxz
test
mov
cdq
out
les
pop
lods
mov
inc
ins
nop
sbb
pop
push
frstor
ror
(bad)
std
push
pop
repnz
cld
inc
ja
(bad)
imul
adc
inc
sub
dec
or
jb
in
push
sub
xchg
test
test
adc
dec
daa
imul
outs
adc
push
push
inc
repz
shr
adc
int
shr
push
in
sub
add
repz
sbb
sbb
mov
mov
mov
mov
ss
xchg
adc
loop
ret
ret
mov
add
mov
cmp
inc
inc
movs
scas
int
mov
scas
sti
call
cmp
xchg
jmp
mov
or
mov
cmp
inc
ss
out
or
pop
jno
loope
pop
shr
mov
inc
leave
adc
retf
sbb
inc
xor
loope
push
xchg
ret
inc
jae
add
(bad)
cwde
jo
repnz
(bad)
xchg
and
jle
lods
rol
jge
mov
jl
rcr
cmp
cs
and
push
lds
pop
jl
ins
and
cmp
and
mov
pop
ret
out
jno
xor
jmp
add
jle
pop
add
test
aas
jecxz
sbb
push
add
test
adc
(bad)
out
push
imul
stos
outs
aam
shl
out
push
add
jno
jecxz
add
and
hlt
mov
(bad)
push
popa
in
sub
pusha
dec
in
sbb
ds
inc
pop
adc
or
std
call
(bad)
shl
or
and
not
icebp
jl
mov
shl
inc
add
in
popf
inc
enter
xchg
xchg
jne
inc
fld
int
pop
adc
push
sub
inc
fcomi
mov
call
(bad)
fs
shl
fisubr
jne
sub
in
imul
dec
(bad)
scas
int3
inc
xchg
imul
adc
and
ins
shl
mov
in
(bad)
scas
sbb
test
pop
fadd
das
into
js
sbb
fdivr
hlt
movs
icebp
cli
hlt
les
test
pop
jo
mov
or
retf
(bad)
hlt
or
mov
cmps
in
in
inc
mov
clc
xchg
mov
fcomp
cmc
push
shl
mov
mov
sbb
test
test
sub
rcr
fwait
sub
cli
lods
sbb
pop
movs
add
inc
fwait
lods
test
push
or
dec
ins
leave
std
aas
pop
dec
mov
lods
and
inc
jle
adc
pop
aaa
dec
push
mov
and
sbb
cmp
inc
into
or
pop
pop
mov
push
xor
push
inc
stos
sub
mov
ja
adc
daa
jg
icebp
push
sbb
or
ds
adc
ja
adc
or
push
loope
aas
sub
sub
cmp
sbb
mov
cmps
dec
xor
sti
ret
(bad)
rol
lods
add
ret
xor
inc
sbb
ficom
or
fistp
popf
cld
test
cmp
jp
jmp
jns
xor
cmp
adc
push
adc
jo
cs
shl
fisttp
ins
adc
test
js
lods
pop
movs
add
pop
aas
jne
mov
mov
fcmovne
sub
and
fisubr
aaa
pop
lea
jmp
add
adc
mov
loop
pop
add
and
and
mov
ins
pop
(bad)
fst
imul
imul
xor
stos
out
xchg
sub
push
ret
cmps
sub
shl
into
fs
dec
into
and
(bad)
imul
into
(bad)
imul
in
add
imul
rol
and
fsubp
mov
into
and
iret
out
mov
out
out
test
mov
add
xchg
sub
push
pop
shr
push
aaa
test
adc
(bad)
out
push
dec
in
(bad)
stos
cmc
adc
sbb
jb
ret
cmps
and
shl
fisub
dec
into
fs
push
and
(bad)
imul
into
iret
out
int3
add
mov
sub
xchg
xchg
and
push
jecxz
cmp
shl
(bad)
data16
iret
out
movs
sahf
iret
out
out
test
mov
add
xchg
sub
push
ret
cmps
sub
shl
pop
jnp
dec
ss
push
cmp
in
inc
sbb
out
push
dec
jnp
stos
xor
xchg
bound
jp
and
push
dec
out
(bad)
stos
mov
cmp
mov
ror
es
xor
dec
dec
inc
push
mov
lods
out
repnz
sti
sbb
test
pusha
(bad)
sbb
(bad)
imul
add
fscale
adc
std
loopne
cdq
mov
inc
inc
clc
in
push
neg
dec
popa
pop
sub
xchg
clc
sub
icebp
aaa
push
ins
les
imul
add
jns
adc
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
push
inc
mov
lods
dec
pop
sub
jbe
dec
inc
pop
or
cmp
pusha
mov
dec
push
out
pop
push
out
pop
push
imul
sub
pusha
out
adc
dec
push
(bad)
cmp
sbb
(bad)
sub
out
pop
inc
imul
sbb
and
and
push
push
sub
sub
push
(bad)
fldenv
aas
(bad)
mov
je
inc
mov
xchg
mov
sbb
adc
inc
push
xor
or
(bad)
jmp
repz
rcr
push
push
sub
idiv
cs
std
rol
repz
cmps
lods
test
xchg
into
sbb
push
call
fs
dec
pop
or
dec
xor
lea
test
inc
mov
into
xor
pusha
xchg
test
pop
lock
fistp
test
test
lods
push
cmps
mov
aaa
adc
loope
(bad)
das
add
xor
or
bound
jl
push
test
out
shl
loop
call
pop
mov
and
mov
xchg
mov
adc
test
mov
mov
add
adc
call
lods
sub
sbb
inc
cmovge
stos
or
inc
sbb
cmp
ins
inc
jle
test
jmp
sbb
iret
imul
je
sub
sub
mov
xor
fdivp
call
in
mov
or
sbb
sub
inc
adc
pusha
addr16
fist
push
mov
sbb
xchg
jle
shr
sub
add
cmp
jmp
iret
and
aad
and
sub
pop
sbb
mov
fnstenv
lea
sbb
inc
sub
push
dec
push
pop
fsubr
sbb
push
cmp
add
jns
cmc
das
mov
in
pushf
into
ins
addr16
mov
push
lods
mov
xlat
fisubr
in
cmp
sbb
inc
mov
xlat
sahf
jl
xchg
mov
jl
std
and
cwde
fsubr
dec
repz
das
jbe
push
mov
test
rcr
pop
sub
inc
mov
out
fadd
bswap
adc
jp
mov
inc
retf
aas
xor
xchg
jns
ror
sti
in
(bad)
(bad)
(bad)
fs
pop
mov
push
ror
int
mov
int
sti
mov
pop
push
mov
sub
(bad)
push
xchg
dec
adc
pop
clc
fisubr
pop
jo
sub
pop
push
mov
je
xchg
sub
rcl
push
(bad)
pop
dec
jb
outs
fdiv
dec
xor
aam
outs
gs
jo
xor
(bad)
or
pop
push
lods
push
pop
hlt
sub
pop
add
jns
jno
xchg
push
and
movlps
scas
mov
push
push
sub
jge
jbe
push
push
div
and
pop
xor
pop
jbe
add
dec
pop
adc
mov
sub
aad
pop
dec
adc
test
sub
call
enter
imul
cmp
fcom
sub
cdq
xchg
ds
xchg
mov
adc
push
lds
push
pop
mul
pop
push
popf
cli
div
bound
fcom
cmp
(bad)
test
inc
outs
mov
lahf
xchg
mov
push
push
cs
pop
xchg
mov
pop
push
hlt
imul
jbe
fst
mov
sub
std
sub
imul
jns
(bad)
mov
(bad)
and
jbe
movs
pop
neg
pop
push
cli
jns
jo
sbb
push
mov
pop
add
sub
and
or
out
cmp
cmc
sbb
in
dec
(bad)
cmc
mov
pop
cmc
pop
dec
push
idiv
jge
jbe
repz
loop
xchg
dec
out
lahf
ins
sbb
mov
fist
shr
xchg
scas
fild
push
push
cmp
pop
inc
sbb
hlt
xor
dec
ins
in
push
aas
or
mov
push
adc
das
push
push
loopne
(bad)
out
(bad)
out
sub
push
dec
inc
je
pop
pop
jge
adc
pop
jge
inc
clc
jae
adc
out
xor
xchg
push
iret
mov
inc
sub
adc
(bad)
and
mov
push
inc
das
push
scas
mov
xchg
call
rol
loop
outs
rcr
ins
xor
out
ficom
in
sbb
jno
sbb
inc
cmps
xor
sar
in
mov
dec
lods
or
loopne
xor
cmc
bound
dec
popa
shl
inc
and
and
imul
ror
pop
call
scas
mov
enter
loopne
mov
dec
cli
xor
popa
push
cmp
test
mov
test
dec
push
movs
fnstcw
jle
aad
xchg
pop
stc
sbb
mov
or
repnz
xchg
shrd
adc
nop
pusha
mov
stc
pop
cli
fidivr
mov
dec
xor
fs
push
or
and
fsubr
and
add
ret
add
pop
call
lods
push
jecxz
jo
hlt
mov
inc
and
and
lods
in
jmp
or
sti
pop
loope
jg
test
hlt
call
ret
shr
inc
stos
fdivp
pop
aam
movlps
leave
pop
xlat
jmp
mov
dec
xor
lahf
jo
jbe
out
add
ret
int
jnp
xchg
adc
dec
ja
and
movs
aas
clc
dec
push
int3
jae
ror
sbb
(bad)
jge
int3
xor
mov
or
fstp
or
push
rcr
mov
imul
dec
jns
or
inc
mov
clc
push
sub
xor
imul
jmp
mov
movs
(bad)
mov
outs
aad
ds
cmp
(bad)
addr16
adc
outs
inc
(bad)
fild
mov
pop
clc
gs
xchg
inc
test
mov
ficom
sbb
pop
xchg
mov
sub
nop
cmps
pop
fcom
call
popf
mov
adc
xlat
popf
jmp
cmc
cs
push
js
push
out
dec
aas
add
iret
pandn
mov
mov
mov
pop
sbb
jbe
jge
dec
adc
popa
out
or
lods
mov
arpl
push
clc
enter
ret
leave
fild
and
pop
test
loopne
xchg
pop
or
scas
push
dec
lock
or
(bad)
or
jbe
dec
pusha
test
add
imul
out
jg
out
and
in
jo
jecxz
jl
jmp
sub
push
test
cmps
jg
mov
fld
lods
inc
idiv
stc
sub
mov
add
dec
mov
mov
test
dec
addr16
repz
mov
mov
pop
shl
mov
jb
mov
add
aad
and
sbb
lods
mov
(bad)
loopne
gs
(bad)
mov
pushf
dec
sbb
xchg
lods
jns
loop
iret
and
inc
dec
dec
mov
lock
mov
pop
std
add
(bad)
jmp
mov
push
and
fidivr
shl
jmp
pcmpgtd
out
arpl
iret
fdivr
test
dec
addr16
repz
mov
mov
pop
shl
mov
jb
mov
add
aad
and
sbb
lods
mov
(bad)
in
dec
inc
fwait
(bad)
mov
pushf
dec
sbb
xchg
lods
jns
loop
iret
and
inc
dec
dec
mov
lock
fldcw
mov
out
mov
(bad)
xor
xor
movs
push
xchg
dec
cmp
rcl
add
jecxz
call
aas
xchg
mov
lds
or
shr
mov
into
inc
into
push
push
stos
test
xchg
mov
int3
outs
xor
fistp
xor
imul
inc
cmp
mov
sahf
test
(bad)
add
push
outs
xchg
xchg
push
mov
jge
das
(bad)
mov
inc
cdq
jmp
or
fcomp
push
shl
push
aas
out
out
loope
fnsave
fisubr
dec
mov
mov
adc
and
push
pop
call
sahf
xchg
outs
outs
call
out
jmp
outs
and
dec
mov
ins
add
les
pop
enter
movs
jbe
xchg
inc
xchg
outs
mov
nop
xchg
cmp
aaa
retf
and
push
jle
scas
shl
adc
mov
jae
add
(bad)
sahf
add
repz
mov
mov
sub
stos
in
mov
fist
xor
bound
jne
stos
adc
xchg
nop
(bad)
jbe
les
jp
push
xchg
xor
xor
mov
fdiv
out
cmp
stos
test
and
add
sti
imul
or
out
repnz
in
retf
and
push
shl
xlat
adc
mov
jnp
add
int3
xor
or
jno
cmp
addr16
pop
pop
or
push
mov
test
and
inc
dec
push
cmps
xchg
jge
mov
ins
sbb
jae
pop
mov
dec
sahf
scas
or
mov
out
outs
push
cli
cmps
(bad)
mov
inc
repz
or
add
(bad)
(bad)
xor
mov
pop
cld
xor
nop
dec
js
shl
push
mov
shr
scas
add
mov
cmc
test
mov
stos
(bad)
xchg
call
or
xor
cmp
pop
scas
jmp
(bad)
js
xchg
mov
lods
clc
jmp
out
in
jmp
aas
xchg
inc
lahf
(bad)
jmp
cmc
loopne
push
adc
mov
mov
push
mov
out
push
adc
add
es
fwait
xor
sbb
fstp
dec
icebp
fisttp
cli
lods
add
fdivr
popf
in
mov
and
cmp
add
rol
div
loopne
add
cmps
sub
gs
push
and
sub
mov
adc
jns
rcr
data16
out
jmp
je
cwde
retf
movs
in
lahf
dec
mov
test
lahf
add
mov
int
out
or
sub
push
pop
rcl
push
inc
imul
movs
cs
es
mov
jae
out
stos
pop
pop
imul
aas
sar
enter
(bad)
xchg
mov
lahf
sbb
out
add
sub
sbb
je
test
(bad)
je
mov
fwait
test
fwait
inc
popf
inc
inc
add
fistp
repz
xchg
mov
inc
sub
adc
mov
xor
xchg
and
je
fwait
stc
leave
imul
(bad)
pop
cmc
dec
int3
add
rcr
test
test
call
mov
(bad)
in
jbe
fmul
adc
ror
jge
test
cmc
mov
arpl
enter
cmps
ins
bound
or
sub
push
mov
pop
push
(bad)
sub
imul
dec
jno
cmp
jo
cmp
lds
dec
imul
js
hlt
sub
aas
ffree
stc
and
and
xor
loopne
sub
mov
pop
mov
lea
mov
xor
mov
inc
popf
lea
pusha
fisub
and
push
les
(bad)
arpl
push
adc
cmc
adc
add
shl
loop
imul
in
sbb
mov
inc
popf
(bad)
cld
addr16
pusha
into
mov
ret
or
xchg
pop
aam
shl
jge
sbb
test
xlat
xchg
sbb
jle
fnstcw
mov
dec
repnz
sub
in
mov
mov
(bad)
cs
enter
dec
mov
movs
dec
and
push
lea
add
test
add
jbe
push
mov
or
jl
icebp
mov
sub
cmp
into
sub
inc
add
fdivr
mov
cmp
pop
punpcklwd
dec
ja
addr16
jle
mov
pop
outs
enter
lea
es
imul
into
sbb
adc
enter
pop
call
(bad)
and
cmps
cmp
xchg
mov
retf
pushw
push
iret
or
cmp
mov
inc
test
dec
jae
pop
movs
adc
add
mov
or
sbb
cmps
aaa
(bad)
ror
jb
or
inc
shr
ret
ja
jg
fwait
push
rcr
fldenv
(bad)
adc
cmc
dec
stos
adc
mov
int
xchg
ret
push
sub
jns
cmc
aaa
cmp
out
sbb
(bad)
mov
add
inc
js
cmp
mov
adc
out
cli
js
std
test
das
and
loop
sub
sub
push
sbb
jg
addr16
int
leave
outs
out
xor
imul
inc
push
jge
aaa
out
in
ins
jbe
sbb
cmp
imul
es
inc
je
mov
push
clc
cmp
cli
xchg
ret
pop
add
rcr
ins
add
aad
xor
add
in
inc
xchg
aas
add
xchg
movs
jl
rcr
gs
scas
adc
js
loope
xchg
pop
xor
fld
into
js
push
mov
sbb
dec
mov
and
ds
outs
mov
in
jmp
daa
and
div
or
xor
aam
outs
mov
add
test
xchg
mov
mov
dec
sub
mov
stos
jmp
jo
push
adc
fistp
fs
mov
inc
sub
aaa
cmp
dec
rol
jo
fbld
jnp
or
dec
jnp
cmp
mov
mov
in
jmp
fst
xor
cmp
imul
jnp
sti
or
xchg
shrd
scas
mov
outs
and
ret
xor
shr
(bad)
(bad)
jle
iret
adc
mov
aam
and
std
inc
neg
loopne
imul
test
add
cmp
push
dec
inc
in
inc
dec
mov
outs
push
jmp
inc
imul
ins
inc
pop
shl
push
jbe
stos
repnz
stos
push
dec
push
out
jle
jbe
cdq
test
dec
ret
xlat
mov
pop
and
dec
push
and
test
mov
inc
loopne
cmp
mov
jl
adc
adc
cmp
push
lea
lahf
int3
push
leave
add
xchg
int3
mov
sub
mov
jmp
sub
mov
mov
ret
out
cmp
mov
imul
data16
and
addr16
adc
xchg
jmp
add
jle
retf
mov
xchg
jl
mov
mov
outs
jnp
test
and
imul
movs
cmp
mov
jle
adc
adc
cmp
push
lea
(bad)
int3
push
inc
push
cmps
mov
push
jp
ins
call
(bad)
dec
dec
cs
call
pop
or
dec
cld
push
xor
mov
pop
sbb
mov
int
push
shr
jle
and
add
in
xor
and
push
ins
xlat
or
jge
push
imul
push
add
and
cwde
jp
pushf
push
cli
inc
sbb
std
test
fbstp
sti
lods
sub
or
sbb
push
jge
cmp
sub
sbb
add
sub
loope
repz
mov
pusha
push
test
push
and
les
pop
and
imul
push
mov
rol
leave
lahf
cmp
adc
sub
loop
out
(bad)
lods
cld
aad
inc
pusha
jbe
pop
xor
cmp
loopne
push
loope
movs
jmp
jecxz
push
xlat
sbb
add
jmp
in
sbb
popf
fmul
imul
adc
xchg
xor
sti
pop
and
cld
push
sub
mov
clc
sbb
mul
jl
icebp
mov
mov
pop
(bad)
psllw
ret
xchg
xor
and
sahf
and
cld
push
sub
xchg
mov
jecxz
xchg
into
cld
and
xchg
fcom
xor
ret
fs
sub
add
cmp
add
stc
out
call
ss
jecxz
pop
aaa
pushf
mov
ror
(bad)
sbb
fisttp
ins
addr16
and
sub
out
stos
cmp
shr
scas
xor
and
inc
jbe
or
jbe
sysenter
out
pop
adc
push
idiv
inc
inc
inc
add
push
push
repz
shl
xchg
stos
push
shl
aad
lods
sbb
mov
add
mov
mov
into
loopne
mov
(bad)
in
into
sub
sbb
cmp
icebp
jns
fadd
pop
xor
mov
adc
pop
mov
dec
aaa
push
and
or
ins
cmp
xor
mov
retf
cmp
aas
pop
sub
imul
cmp
retf
jle
retf
imul
and
retf
addr16
jg
sub
shr
adc
jl
pop
push
xor
outs
in
jmp
data16
xor
mov
es
jns
sub
imul
add
or
sub
sbb
bound
arpl
mov
push
fwait
fwait
retf
jnp
sbb
and
retf
and
pop
je
add
cmp
out
cwde
sub
add
adc
daa
xor
adc
outs
lahf
push
retf
sbb
lods
mov
lahf
dec
cmp
inc
and
ss
ror
aas
ss
xor
mov
pop
sub
fcmovnb
in
lds
ret
dec
out
std
jg
in
js
aaa
dec
aas
loope
cmp
icebp
dec
lea
dec
retf
pop
jo
es
hlt
in
push
(bad)
xchg
inc
adc
jmp
(bad)
into
dec
cmp
and
cmp
leave
mov
repz
aaa
mov
sub
cmp
lock
test
jle
(bad)
out
and
int3
xchg
and
movs
dec
(bad)
jg
mov
push
jmp
imul
mov
and
(bad)
out
mov
jecxz
push
and
push
sbb
inc
out
sub
add
or
iret
jmp
sbb
into
dec
push
sub
popf
repnz
out
sahf
out
imul
mov
in
outs
cmp
cmp
mov
pushf
in
sbb
sbb
mov
out
loop
imul
or
pop
or
fs
sbb
push
in
movs
jg
les
ds
int
nop
idiv
test
in
int3
jmp
xchg
push
mul
ins
test
mov
and
retf
addr16
sbb
add
scas
leave
dec
neg
inc
xchg
jne
scas
push
jb
xchg
or
ret
or
or
mov
cld
fs
lods
jge
stos
sbb
aaa
das
mov
retf
mov
mov
jno
adc
pop
jmp
rol
or
shr
inc
cdq
into
inc
mov
int3
inc
out
(bad)
xor
xor
dec
pushf
(bad)
je
mov
xchg
push
into
mov
cmp
call
out
sub
pop
jb
xchg
pop
in
or
das
cdq
sti
sub
cwde
xor
cs
ret
dec
psubusw
mov
pop
or
xchg
nop
(bad)
scas
sub
hlt
pop
jmp
jb
jp
mul
jne
push
enter
inc
or
retf
mov
shl
push
adc
(bad)
sbb
xchg
popf
(bad)
clc
pop
jo
cmp
pop
xor
lahf
pop
lods
inc
xor
imul
movs
adc
xchg
mov
cmp
jecxz
pusha
aaa
aad
(bad)
fld
pop
mov
ja
mov
mov
mov
lods
add
mov
sbb
mov
push
scas
icebp
leave
pop
adc
sub
sbb
cdq
icebp
ret
push
test
imul
enter
mov
fwait
(bad)
stc
fwait
pushf
ja
and
test
mov
pop
mov
dec
in
xor
cli
xor
xor
rcr
xchg
scas
fidiv
sub
imul
test
cmp
sbb
ds
aad
mov
nop
outs
cmps
mov
push
call
std
in
mov
pop
jne
cmc
dec
out
sbb
or
pop
mov
dec
push
out
ins
jo
sbb
out
pop
push
xchg
sub
out
dec
inc
idiv
dec
push
repnz
inc
jmp
xor
in
cmp
dec
shr
lods
inc
idiv
xchg
mov
aaa
enter
sbb
add
cmp
mov
leave
aaa
shl
ins
ins
dec
pop
lds
sub
mov
mov
popf
mov
inc
mov
icebp
mov
dec
mov
cs
pop
add
mov
push
outs
ja
mov
mov
sti
inc
outs
pop
and
(bad)
mov
jge
lea
mov
jmp
adc
mov
lahf
xchg
adc
inc
mov
adc
add
das
outs
dec
jae
mov
sti
icebp
and
jmp
mov
xchg
sbb
pop
inc
add
int3
leavew
sahf
dec
mov
sub
dec
repnz
lds
jne
aam
out
xchg
call
icebp
imul
push
mov
mov
(bad)
push
pop
and
or
in
add
pop
inc
arpl
inc
xor
out
lahf
in
jge
ficom
clc
push
test
push
movzx
div
dec
add
inc
mov
mov
(bad)
loopne
daa
jl
cs
or
xor
ja
fisttp
addr16
test
(bad)
push
pusha
fdiv
xchg
repz
or
adc
dec
fnstsw
jb
(bad)
and
xor
popf
or
or
clc
xchg
cwde
push
ret
jb
scas
adc
mov
dec
fild
mov
or
mov
add
mov
mov
mov
je
es
(bad)
mov
stos
adc
clc
sahf
test
lods
cmps
and
jecxz
mov
dec
fist
jnp
sub
mov
pushf
mov
pop
xor
fbstp
push
(bad)
add
xor
add
push
(bad)
sub
ss
lds
sbb
push
(bad)
popa
sbb
mov
pop
cwde
shr
sub
xlat
scas
jbe
pop
mov
add
imul
add
fisubr
and
bnd
pop
mov
jbe
xchg
loop
pop
push
fdiv
cdq
mov
pop
pop
mov
push
aas
outs
outs
push
outs
add
popf
sub
cmp
outs
bound
gs
inc
ror
or
pop
icebp
ins
mov
sub
fld
jns
pop
icebp
leave
lods
in
popf
std
ds
inc
or
fsubr
push
hlt
out
jg
mov
sub
jmp
fcmovbe
sbb
xor
add
or
pop
out
enter
add
(bad)
cmc
iret
mov
adc
mov
pop
mov
call
js
xchg
xchg
outs
adc
push
cmc
mov
push
clc
add
cmp
(bad)
mov
outs
xor
ret
xchg
xlat
lahf
sbb
jl
xchg
dec
jno
ins
mov
jns
shl
sbb
es
inc
push
xor
dec
call
xor
mov
rcr
ja
pop
cmp
xchg
dec
and
fisub
sahf
(bad)
iret
and
inc
loop
and
mov
and
add
push
cmp
mov
loopne
mov
inc
mov
jb
fbld
xchg
xor
loop
stc
xor
cmp
xor
fadd
or
gs
adc
push
push
(bad)
js
mov
inc
or
jmp
add
mov
lods
mov
clc
arpl
aad
jnp
push
sub
out
loop
retf
add
mov
mov
nop
bound
mov
dec
dec
mov
(bad)
add
rcl
(bad)
pushf
pop
pop
mov
push
and
add
xor
(bad)
sti
fiadd
or
outs
pushf
nop
data16
mov
hlt
xchg
sbb
in
sbb
cmp
jo
add
and
cdq
jns
jmp
and
std
xor
push
in
fwait
push
dec
cmps
inc
in
lods
retf
lds
mov
jmp
arpl
jnp
cmp
inc
or
lds
repz
sbb
mov
imul
popf
pop
adc
dec
mov
inc
or
pop
js
mov
pop
sub
fcomip
cmps
sbb
ret
dec
les
cdq
sbb
mov
movs
test
jge
stos
cmp
int3
adc
push
pusha
and
aad
(bad)
pop
out
(bad)
scas
cdq
pop
sbb
mov
nop
or
stos
fistp
(bad)
mov
sti
xchg
stc
neg
mov
aas
rcl
or
jo
inc
xor
ins
jle
sub
loopne
and
push
push
sub
out
sub
mov
mov
pop
or
inc
pop
or
in
pop
in
ja
add
push
mov
in
jne
cdq
or
xchg
or
cdq
in
cs
(bad)
les
mov
cmp
mov
outs
add
add
dec
stc
movs
pop
mov
shl
xchg
fadd
sub
icebp
out
ja
icebp
imul
fldenv
pop
es
call
pop
sbb
jo
jne
sub
div
lahf
mov
jmp
xor
xchg
inc
das
jbe
lea
jne
cdq
xchg
xchg
mov
dec
mov
das
xlat
in
stos
sub
neg
sar
stos
jl
push
mov
pop
js
cmc
popa
sub
mov
mov
cmp
mov
xchg
adc
dec
cmc
lea
lea
lods
lahf
or
sbb
idiv
ins
inc
test
xchg
sub
out
dec
inc
imul
pop
inc
in
inc
pop
loopne
dec
dec
jmp
xor
jecxz
ffree
jmp
mov
shr
sbb
mov
sahf
jg
ins
in
mov
ficomp
(bad)
xchg
sbb
adc
jne
jecxz
movs
into
sub
mov
mov
push
push
hlt
stos
adc
jg
addr16
in
sub
xlat
xor
out
or
pushf
sahf
movs
xor
das
fdivp
lahf
jg
pop
ret
int3
popf
and
loope
les
jnp
push
cld
push
(bad)
(bad)
lahf
pop
mov
repnz
nop
sbb
pop
dec
in
lock
fs
sub
fist
repz
outs
lds
cmc
stos
cmp
jl
cmps
sub
(bad)
int
xchg
push
(bad)
add
fstp
push
or
out
xchg
cmp
cdq
aas
pusha
xor
mov
sub
sbb
push
icebp
add
(bad)
out
jbe
retf
std
outs
lods
push
js
or
and
sub
popf
popa
lock
pop
aaa
lea
test
das
or
cmp
clc
out
push
jle
(bad)
and
enter
jb
sub
mov
test
jmp
shl
pop
xchg
out
fiadd
pop
fs
jno
loope
push
clc
xchg
jae
pop
xchg
mov
sbb
or
cdq
dec
xchg
push
inc
dec
jle
jae
arpl
push
jmp
(bad)
push
dec
mov
pop
mov
adc
sbb
retf
inc
xchg
imul
cmp
loopne
(bad)
daa
or
dec
(bad)
(bad)
fdivp
movs
cli
adc
push
sbb
jmp
out
js
push
stos
loop
sbb
and
jecxz
jae
lods
mov
retf
cdq
pop
icebp
add
pop
fidiv
dec
xor
pop
xchg
pop
and
inc
pop
retf
sbb
or
pop
dec
jno
retf
dec
mov
dec
cmps
out
inc
sar
test
iret
loope
aad
aas
(bad)
sub
inc
push
movs
aad
stos
sub
bound
dec
fadd
mov
pop
xlat
xchg
jp
sbb
cmp
sub
(bad)
call
stos
cmp
scas
in
xchg
sub
cmp
sub
je
and
inc
pushf
cmp
push
shl
int3
fldenv
push
rcr
ret
(bad)
dec
in
sbb
sbb
dec
xlat
pop
mov
cmp
cmp
xor
cwde
xor
dec
dec
sbb
in
and
lds
push
mov
dec
mov
mov
fst
xchg
scas
scas
in
dec
sub
jne
xor
fcom
mov
test
jle
(bad)
push
push
jge
mov
pop
dec
adc
inc
js
fcom
sbb
push
in
mov
icebp
add
imul
pop
enter
ja
inc
es
pop
rol
add
jl
inc
push
ret
aad
cwde
cmp
retf
cmp
mov
ror
into
inc
cs
fdiv
inc
cmp
cmps
mov
push
mov
jle
sbb
fwait
daa
add
push
jnp
inc
ins
fisub
mov
fcmovu
cld
xor
retf
imul
stos
mov
pop
dec
loope
daa
push
adc
mov
das
or
push
mov
jns
jge
mov
jge
imul
push
xchg
pop
push
out
dec
inc
imul
dec
inc
in
inc
dec
jecxz
dec
dec
in
and
pop
inc
out
push
push
stc
push
dec
rol
pop
inc
out
test
mov
jmp
jb
xchg
pop
cmp
xor
loope
jo
push
sbb
shl
xor
cmp
dec
(bad)
dec
hlt
jg
adc
push
pop
nop
inc
mov
add
push
mov
jmp
jb
xchg
push
cmp
sbb
push
add
int
and
hlt
dec
clc
(bad)
mov
out
sbb
fisttp
jnp
mov
leave
bound
jge
ficomp
pop
mov
call
out
test
pop
dec
in
lock
lods
adc
add
ds
js
and
ret
(bad)
hlt
mov
fnstenv
outs
pop
lock
pusha
pop
push
dec
jmp
aaa
fadd
xchg
hlt
loopne
mov
addr16
inc
and
mov
(bad)
(bad)
ins
push
fisub
jge
pop
mov
push
iret
jecxz
sub
xchg
les
sub
mov
xor
push
fs
mov
dec
ror
fwait
ret
adc
mov
or
aaa
push
popf
push
es
lock
mov
shr
cmp
dec
mov
dec
int
pop
sar
mov
pusha
push
in
popa
pop
xchg
pushf
jmp
jno
jo
into
jg
mov
mul
dec
shr
adc
adc
test
mov
sub
in
push
ss
mov
imul
sbb
in
push
push
inc
je
pop
add
xchg
sti
xor
enter
dec
into
je
xor
mov
sahf
adc
iret
mov
jbe
dec
retf
push
jge
not
jae
jbe
ret
sbb
cmps
add
iret
push
mov
xor
lock
es
into
sub
push
pop
xchg
aas
push
cmp
add
jmp
fs
xor
ror
xchg
or
jae
sub
loopne
stc
pop
push
mov
into
fdivp
cli
push
jbe
xor
ret
xchg
rcl
je
fwait
pop
cmp
dec
xchg
mov
mov
mov
mov
dec
lods
xchg
adc
rol
loop
add
cmp
add
ins
dec
sbb
pop
lahf
jle
cld
dec
cmp
in
xchg
mov
mov
movs
fcom
cmp
xor
sub
push
xlat
mov
ret
dec
push
push
pop
push
mov
cmps
mov
xchg
sbb
jl
(bad)
push
pop
dec
dec
sti
neg
outs
jl
cmp
mov
jnp
sti
xchg
stc
and
call
xchg
pop
dec
xchg
sbb
cld
int
pop
pop
push
pop
pop
mov
lods
add
add
fbstp
xor
shr
push
cmp
xchg
rcl
sbb
fbstp
in
cwde
lock
addr16
rcl
sub
mov
xchg
stos
push
sub
jp
repz
ss
pop
aam
pop
int3
dec
push
xchg
js
scas
cmp
icebp
xlat
dec
dec
lods
mov
cdq
adc
test
mov
xor
cmp
xchg
daa
pop
sahf
fwait
and
fistp
sar
sub
loop
dec
cld
cmp
stos
repnz
push
jb
jmp
ja
mov
push
(bad)
test
push
lahf
xor
or
hlt
pop
xchg
jmp
mov
lds
dec
push
push
sub
(bad)
sub
(bad)
cmp
(bad)
sub
out
pop
inc
idiv
dec
push
in
pop
push
jmp
mov
shr
lods
push
idiv
hlt
cmp
test
pushf
fs
mov
push
dec
mov
jns
shl
aam
sbb
sbb
inc
or
nop
or
mov
xor
or
cld
rol
retf
xor
cmp
lods
clc
repnz
pop
mov
adc
dec
aad
xchg
clc
adc
xchg
jnp
outs
mov
and
ret
outs
and
fcom
out
push
imul
sbb
les
cmp
dec
retf
add
jno
push
pop
sbb
push
jnp
loopne
in
jno
es
mov
sbb
in
inc
adc
out
mov
and
sar
stos
push
and
xchg
add
stos
nop
(bad)
jl
(bad)
fs
cmps
or
fwait
push
inc
jns
push
ret
lahf
xchg
add
xchg
push
jo
mov
add
ins
clc
test
sbb
sti
push
and
iret
lock
cmp
fisubr
inc
outs
adc
xchg
fsub
mov
sbb
cdq
adc
mov
cmps
add
xchg
ins
inc
mov
jne
pop
ins
jmp
sti
(bad)
mov
scas
jecxz
popa
lds
cmp
cmc
push
push
das
push
xchg
outs
mov
lahf
sbb
xchg
mov
(bad)
xchg
mov
dec
dec
movs
repz
add
and
sahf
rcr
sahf
or
leave
pushf
lds
je
sbb
rcl
cli
cmp
push
sbb
scas
push
dec
popf
iret
int3
push
imul
adc
xchg
and
nop
dec
xchg
bnd
dec
adc
inc
inc
mov
rol
mov
xchg
xor
jle
ins
xor
xchg
loopne
xlat
mov
add
mov
test
jns
or
loopne
daa
or
adc
xchg
bound
test
retf
test
jns
mov
(bad)
popa
mov
mov
cmp
xchg
adc
fld
xchg
inc
test
and
inc
int
call
xlat
push
loop
sahf
fsub
dec
mov
test
(bad)
mov
push
mov
repnz
jle
push
pop
xchg
push
mov
inc
retf
add
dec
xor
addr16
mov
cmp
pusha
dec
loop
popa
ret
push
adc
pushf
inc
scas
pop
stos
arpl
add
out
pop
pop
jae
push
mov
icebp
call
sub
pop
aad
cs
inc
je
imul
jbe
aaa
sub
push
adc
imul
ja
pop
movs
cmp
mov
jae
xor
mov
xchg
call
fcom
test
aam
enter
test
call
jo
jl
int
ret
inc
mov
dec
inc
cmp
xchg
cmp
in
or
jae
push
mov
jae
sbb
cdq
push
dec
hlt
push
shl
(bad)
mov
add
inc
out
or
test
add
retf
lods
dec
sbb
xor
or
xchg
ror
pop
jnp
(bad)
mov
hlt
mov
fneni(8087
lods
scas
stc
dec
(bad)
das
fcmovnbe
cmps
popa
push
mov
xchg
(bad)
mov
outs
sub
je
xor
mov
call
in
dec
pop
sub
fsub
sub
jle
(bad)
push
mov
cmp
ror
mov
daa
or
jne
scas
pop
mov
cld
dec
loop
hlt
fidivr
adc
addr16
mov
mov
cmp
or
add
loopne
ja
mov
fiadd
mov
or
call
xor
inc
inc
js
mov
stos
push
popf
mov
sahf
rcr
jae
(bad)
popf
jno
cmc
fisub
ror
push
jb
aad
fwait
pop
je
cmp
mov
dec
in
adc
sub
fisub
out
jle
push
cwde
cmp
pop
push
clc
inc
push
push
mov
cmp
popa
das
push
add
js
retf
addr16
push
pop
cmp
mov
jo
mov
inc
jecxz
in
out
jecxz
adc
std
ins
or
pop
nop
arpl
push
push
loopne
aam
mov
dec
cld
xor
or
or
push
clc
cmp
in
push
adc
mov
call
jl
pop
jnp
adc
add
adc
ficomp
repnz
and
xchg
fiadd
test
outs
xor
and
sti
sub
fnstcw
cld
(bad)
mov
pop
loopne
mov
push
xchg
adc
cmps
xchg
add
mov
pop
sub
or
std
xor
mov
fld
push
mov
mov
xchg
js
mov
pop
popa
push
mov
pop
jno
(bad)
mov
jle
pusha
dec
jbe
fisub
and
pop
xor
push
jmp
inc
or
loope
inc
cmp
je
mov
jle
in
sub
xor
add
inc
mov
mov
sub
into
rcr
lds
adc
dec
shl
retf
and
test
ret
dec
mov
jge
push
xchg
mov
mov
(bad)
xchg
in
xor
cmp
pop
mov
inc
inc
loopne
movs
and
pop
xchg
out
pop
test
aad
adc
aam
xlat
add
adc
adc
(bad)
rcl
pushf
add
add
xor
sar
out
fild
sahf
dec
aaa
jns
push
or
outs
shr
dec
into
ja
xchg
push
cwde
xlat
sub
loope
sub
sub
mov
call
jl
ja
mov
sbb
and
jecxz
scas
xchg
inc
lahf
add
mov
mov
adc
dec
rcl
jle
sbb
ret
repnz
jb
leave
mov
jmp
les
pop
aas
push
and
ds
(bad)
es
jmp
fist
dec
inc
and
mov
sbb
mov
inc
adc
popa
stc
les
sbb
cmps
ins
jmp
loop
dec
repnz
aad
and
sub
ret
pop
sti
mov
jl
xchg
ret
adc
pop
iret
or
out
or
mov
inc
jp
gs
call
xor
gs
js
sahf
call
nop
xchg
inc
adc
retf
out
das
fisubr
cmp
xchg
adc
ficom
or
cmp
dec
shl
fst
pop
and
sub
jge
inc
or
(bad)
or
push
(bad)
imul
jo
test
lea
inc
test
loopne
dec
pop
shl
or
imul
lods
and
push
or
ja
push
pusha
xlat
push
sbb
inc
out
int
cmps
stc
lea
cmps
sbb
daa
push
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
jb
mov
pop
and
dec
jge
out
dec
inc
out
push
adc
pop
lock
cmp
idiv
pop
push
(bad)
sub
imul
cmp
adc
jns
pop
(bad)
mov
imul
idiv
pop
push
out
pop
push
imul
cmp
push
mov
push
nop
mov
lock
cmp
(bad)
sbb
sub
sti
jle
fwait
push
stos
sti
mov
int
and
mov
mov
sub
int
mov
aaa
call
mov
sub
push
mov
out
imul
out
lock
push
lahf
sub
fsub
or
outs
pop
fld
(bad)
loop
movs
sub
dec
adc
dec
ror
pushf
shr
loop
pop
mov
push
pop
rcl
daa
pop
inc
jbe
cmp
pop
ds
retf
inc
jg
mov
mov
inc
cld
adc
push
js
fbstp
into
pop
ret
lahf
xchg
data16
xchg
push
lea
push
push
mov
push
leave
movs
shr
pop
push
cmp
pop
pusha
cmp
cdq
mov
sub
not
mov
test
xchg
lea
daa
in
add
jo
daa
mov
push
int3
and
imul
cmc
cmps
cli
inc
pop
push
sub
ror
pop
xchg
jg
inc
push
push
mov
pop
in
retf
and
dec
retf
dec
push
aad
sbb
jbe
push
mov
dec
add
popa
push
lods
mov
xchg
jmp
je
push
push
pop
and
ss
sbb
cdq
(bad)
mov
mov
retf
repz
retf
xchg
add
mov
lahf
out
loop
xchg
push
rol
pop
jmp
pop
jmp
jb
ficomp
push
and
mov
mov
sahf
sub
or
scas
nop
jae
fcomp
cmps
and
mov
mov
retf
mov
jno
inc
adc
mov
ror
into
ret
xor
je
stos
xchg
lea
inc
sub
sbb
mov
test
xor
data16
test
push
test
out
stos
xor
adc
fidivr
in
in
cdq
fmul
mov
mov
addr16
push
fdivr
or
mov
and
mov
jmp
xor
and
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
pusha
imul
and
push
pop
sar
and
imul
pop
push
imul
sbb
jmp
call
pop
pop
sar
and
pop
push
imul
in
lahf
adc
mov
xchg
push
pop
adc
push
sub
imul
ins
and
test
rcr
xor
push
push
mov
sub
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
and
sub
inc
mov
sub
push
(bad)
cmp
(bad)
sub
imul
dec
and
sub
dec
or
lds
ins
push
xchg
cld
repnz
lock
dec
push
idiv
jge
jbe
pusha
dec
loopne
jmp
inc
sbb
pop
add
mov
mov
cmps
pop
inc
xchg
fisttp
loop
lds
(bad)
stc
mov
mov
out
and
sub
in
mov
sbb
xchg
sbb
lock
lock
add
mov
or
jecxz
push
sbb
mov
sub
pop
adc
inc
push
inc
jne
das
cmps
and
loopne
adc
pop
test
xchg
in
jnp
jnp
rcr
loopne
outs
and
add
sar
mov
loop
scas
fiadd
rcl
es
and
xor
sbb
jmp
jecxz
add
mov
les
jmp
push
mov
shl
sbb
xor
out
mov
out
adc
(bad)
jg
out
ret
push
in
sahf
int3
pop
add
fs
inc
loop
and
push
movs
sub
(bad)
movs
push
cmp
imul
lea
dec
mov
scas
or
stc
xchg
in
mov
imul
sub
push
push
push
in
jmp
jo
cmp
in
pop
and
add
cmp
and
push
aad
cmp
xchg
jb
add
sub
add
scas
scas
ror
xchg
fsubr
outs
(bad)
mov
push
sbb
jp
es
stc
ins
int3
leave
(bad)
jle
mov
retf
sub
adc
jmp
push
mov
inc
sbb
stos
mov
xchg
jmp
mov
mov
mov
int
jb
cmps
mov
test
push
jo
push
jl
sub
nop
adc
jae
xchg
pushf
pop
mov
add
icebp
icebp
ins
mov
jno
dec
repz
ret
mov
inc
jge
(bad)
fsincos
lods
cmp
clc
jae
push
pop
mov
cld
out
jmp
jge
mov
inc
lods
fist
dec
mov
sub
jno
loop
mov
mov
(bad)
popf
test
push
je
mov
ss
add
inc
xor
xlat
xchg
scas
jg
lock
xchg
stc
lods
xor
sbb
out
xchg
jbe
iret
push
in
cwde
jp
sub
cwde
fist
test
movs
lods
lahf
popa
(bad)
dec
push
ficomp
jo
imul
push
push
cmp
cmps
sub
dec
(bad)
cmp
stos
or
xchg
cmp
ds
pop
in
jle
jmp
cmp
mov
jl
sub
push
ffree
stc
and
and
into
xchg
lds
jo
(bad)
jns
in
daa
sahf
sbb
call
adc
cli
jecxz
push
retf
adc
stos
pop
mov
jbe
jl
jmp
pop
js
jb
scas
pandn
add
loop
adc
mov
loop
xor
out
inc
mov
rcr
xor
mov
pop
xor
cmp
push
adc
add
adc
or
daa
mov
xor
inc
dec
outs
xchg
jbe
adc
push
dec
mov
dec
test
xor
pmullw
jl
sbb
pop
loop
pop
shl
cwde
ins
xchg
or
aam
call
js
and
pop
icebp
ins
sbb
test
cmp
mov
gs
ror
pop
cmp
fld
xchg
and
inc
mov
mov
js
test
push
adc
rol
imul
mov
pop
xchg
inc
push
mov
sbb
lods
or
fcmovnb
push
jle
cmp
cmp
out
shr
fdiv
shr
xor
out
lods
in
cmp
or
fsubr
jae
shl
retf
out
addr16
jmp
sahf
mov
imul
ret
adc
push
adc
in
(bad)
pop
xor
push
jmp
push
(bad)
loop
lock
inc
mov
xor
mov
xchg
or
pop
sub
xor
mov
xchg
pop
mov
cwde
push
nop
ss
inc
out
bnd
bound
jmp
cmc
ds
pop
lods
sbb
loopne
fmul
aas
inc
(bad)
push
rcl
sub
int
push
push
or
mov
pop
ja
push
gs
dec
mov
sbb
push
gs
into
mov
sbb
push
in
dec
test
add
loopne
cmp
mov
push
push
xor
mov
cmp
sahf
or
(bad)
test
mov
pop
hlt
pop
arpl
mov
xchg
cmps
sub
jmp
repz
jae
test
add
cli
jmp
jae
mov
pop
mov
adc
sbb
dec
add
sub
cmp
cmp
mov
outs
jb
into
jle
(bad)
xchg
pop
loop
sar
pop
jmp
or
or
add
xor
mov
cmp
jns
add
pop
fdivp
push
cmps
icebp
pop
fsubr
pop
jmp
pop
imul
xchg
xlat
fimul
or
mov
pop
loope
lods
outs
sbb
add
push
mov
test
pop
aas
dec
cmp
int
test
jb
mov
cdq
ror
push
mov
push
push
movs
mov
jno
inc
data16
jae
cdq
push
pop
mov
into
in
adc
mov
xor
jno
push
sbb
mov
jae
out
cmp
xor
test
out
sbb
arpl
mov
test
lods
js
ficom
outs
pop
in
aas
xchg
in
icebp
add
jns
fild
push
push
push
xchg
lea
es
fcom
iret
mov
test
rcr
aad
test
into
repz
fldcw
jno
lahf
fdiv
push
(bad)
adc
js
ret
call
xor
push
mul
inc
clc
inc
sbb
pop
push
xor
push
mov
jp
pop
xchg
xchg
ja
paddusw
or
and
or
dec
pop
mov
rol
rcr
aad
fist
dec
dec
mov
out
les
jge
push
les
inc
neg
push
mov
jo
dec
add
dec
and
rcr
xchg
cmp
mov
push
sbb
loop
lahf
int3
mov
adc
shl
lock
rcl
inc
ret
aam
dec
(bad)
fiadd
into
jge
jne
jbe
rcl
iret
ins
sub
adc
jp
jge
neg
sub
push
mov
pop
pusha
cmps
sub
idiv
dec
adc
jnp
jno
or
in
pop
arpl
sbb
cmc
or
dec
sub
push
ffree
stc
and
and
push
xchg
aad
popf
fsubr
mul
xor
jl
inc
cmc
cmp
xchg
fs
mov
or
sti
mov
dec
adc
mov
push
loope
sahf
push
es
sbb
cmps
xchg
adc
cmp
ds
add
imul
cmps
aaa
sbb
popa
and
sti
sub
mov
jmp
push
jge
(bad)
or
retf
cs
pop
fs
sar
cmp
push
and
ror
sbb
inc
mov
icebp
or
(bad)
add
mov
retf
cmp
jecxz
adc
mov
loop
or
mov
adc
stos
xchg
int3
call
cdq
pop
repnz
fdivr
push
inc
xchg
lahf
jae
or
dec
xchg
lahf
repz
cmp
jp
retf
and
adc
pushf
mov
mov
dec
lods
push
pushf
into
cmp
mov
data16
mov
arpl
imul
or
mov
shr
sub
inc
inc
shl
sbb
xchg
add
mov
nop
fisub
jb
dec
dec
aam
push
mov
aaa
mov
fsub
enter
inc
lahf
xor
aad
push
(bad)
cli
jno
daa
jb
jle
ficomp
stos
xchg
xchg
xchg
dec
sbb
cmp
sbb
sub
shl
mov
out
and
mul
sub
sub
adc
adc
dec
(bad)
rol
repnz
js
xlat
add
sub
sub
dec
or
xor
test
pop
or
cdq
add
jae
stos
iret
in
iret
push
lods
(bad)
imul
cwde
sti
(bad)
jb
in
xor
push
dec
popf
cdq
call
mov
cmp
xor
ret
popa
imul
test
js
xlat
add
sub
or
nop
(bad)
ror
adc
es
mov
mov
push
pop
mov
mov
js
push
fld
scas
or
inc
mov
xchg
cmc
add
mov
sub
ds
cmc
cli
sub
retf
jb
adc
fs
outs
(bad)
in
push
call
inc
movs
repnz
sbb
and
scas
mov
or
mov
or
sti
push
shl
scas
fistp
(bad)
push
sub
cdq
add
aaa
es
mov
jnp
xchg
js
push
mov
xchg
sub
not
ret
in
add
pop
int
(bad)
ins
mov
retf
mov
xchg
daa
pushf
sbb
inc
and
mov
aam
and
sub
rol
or
sub
test
inc
out
ins
adc
cmp
aad
push
loop
pop
add
je
dec
aad
inc
dec
fbstp
pop
add
sbb
hlt
ins
inc
pop
repz
push
leave
stos
repnz
rcl
(bad)
mov
mov
cmp
das
fcomp
cmc
dec
fs
aad
add
(bad)
icebp
call
jbe
(bad)
int
cmps
je
ins
ror
fmul
mov
es
cld
mov
(bad)
jmp
ret
dec
pop
ins
cmp
inc
loopne
not
add
xchg
call
out
repz
shl
outs
call
mov
ror
or
add
mov
or
clc
shl
mov
and
outs
js
push
fnstcw
mov
rol
adc
jo
retf
xchg
loop
sahf
shr
fsubr
adc
loop
test
fsqrt
sbb
mov
sub
jno
sbb
outs
aam
aad
jbe
lahf
mov
mov
imul
out
enter
sbb
pop
pop
out
mov
push
mov
xchg
adc
(bad)
adc
pop
in
dec
scas
ror
jle
inc
fcomi
pop
lock
sbb
mov
xor
cld
pop
js
inc
enter
jo
sbb
xchg
fidivr
adc
push
add
(bad)
push
inc
call
adc
dec
sbb
cli
arpl
inc
adc
sub
jecxz
rcr
ins
or
mov
jmp
imul
fdiv
ret
or
mov
cmp
push
int
repz
add
movs
jnp
out
xchg
push
ins
out
inc
and
mov
jno
push
dec
cwde
mov
mov
loop
add
push
inc
pop
add
cmp
xor
movs
(bad)
imul
fmul
retf
call
ror
cmp
rep
or
sbb
ror
test
or
rol
push
cld
push
mov
add
add
pop
test
out
xor
sbb
rol
jb
aam
push
mov
mov
cmc
mov
repz
out
mov
imul
popf
mov
pop
stos
add
jg
loopne
inc
mov
bound
retf
inc
pop
inc
(bad)
in
sbb
add
cmp
mov
push
dec
movs
out
or
les
mov
cmc
in
xor
adc
call
cmp
and
loop
test
bound
jns
push
lock
inc
lea
add
into
sub
call
xor
mov
ror
jne
pop
leave
push
dec
ror
ret
sub
(bad)
xor
dec
xlat
popf
bound
sbb
popa
sub
xchg
mov
test
adc
push
adc
movs
cmp
ret
xor
or
or
fidivr
dec
mov
or
sar
outs
pusha
sub
int
dec
xor
imul
test
jmp
outs
adc
fidivr
call
xchg
mov
mov
xor
mul
adc
inc
(bad)
inc
jg
xor
xor
retf
imul
rcl
inc
dec
inc
lods
mov
and
mov
inc
aas
sub
mov
popa
ret
push
jno
pop
mov
pusha
cmc
mov
cwde
js
xchg
stos
xchg
inc
xchg
jb
lahf
add
stos
jae
inc
xchg
push
push
pop
or
xchg
add
pop
hlt
mov
repnz
(bad)
cli
movs
jge
rep
sub
mov
and
mov
push
movs
jno
pop
not
pop
ja
xor
movs
nop
or
lahf
rcl
scas
xchg
jns
pop
or
cmc
add
xor
(bad)
add
test
mov
int
mov
jmp
ss
and
jno
jmp
pushf
jo
sub
push
adc
(bad)
arpl
add
ss
test
inc
inc
out
cmp
mov
dec
cmps
clc
mov
(bad)
loopne
fbld
cmps
lock
lds
aam
adc
and
mov
dec
add
jbe
or
add
mov
cmp
mov
sub
test
xor
sti
(bad)
cmp
mov
out
test
(bad)
aas
inc
and
in
inc
nop
rol
fwait
adc
dec
mov
gs
sub
pop
cmp
popf
rol
stos
sbb
pop
fist
cmp
pushf
xchg
xchg
(bad)
mov
ins
dec
mov
push
ja
dec
dec
jmp
inc
push
add
cmps
xor
dec
inc
test
xchg
popf
jmp
rol
sbb
mov
push
(bad)
xchg
rcr
adc
mov
jb
inc
push
fsub
inc
mov
fimul
js
imul
test
stos
cmp
inc
in
inc
in
pop
mov
ret
call
add
scas
cld
xchg
imul
repz
add
xor
js
jl
jge
lods
or
sbb
loopne
call
nop
cmp
xchg
mov
nop
or
fs
pushf
sbb
jg
jb
xchg
mov
std
push
xchg
daa
inc
xchg
and
pop
pop
jge
push
xchg
out
je
addr16
inc
scas
jmp
cmp
sub
retf
imul
gs
push
ror
js
mov
sbb
adc
jns
loop
push
cmp
int3
add
mov
cmps
jmp
cmps
test
sbb
or
icebp
xchg
fdivr
out
cmps
or
loopne
mov
mov
popf
push
mov
test
stc
mov
ins
jo
sbb
out
pop
push
xchg
cmp
out
dec
push
idiv
dec
inc
out
inc
dec
loope
push
inc
cld
and
inc
call
es
jmp
sub
std
in
shr
mov
repz
(bad)
cmps
loope
adc
scas
cmp
(bad)
jecxz
fisub
dec
loop
jb
add
xor
push
aas
and
jmp
aaa
pop
iret
scas
jmp
cs
icebp
jp
ret
sar
jb
cdq
outs
xchg
xchg
inc
outs
xor
xor
imul
adc
sahf
(bad)
cmps
loope
adc
fstp
lods
scas
mov
mov
rcl
jmp
inc
jne
and
fnstsw
mov
std
pop
adc
dec
xchg
jno
add
xchg
adc
lods
cmp
jb
mov
(bad)
xor
sbb
out
and
jmp
pop
retf
and
addr16
jle
xor
je
pop
std
mov
test
mov
push
mov
xchg
call
lods
test
ja
out
dec
outs
push
mov
or
add
out
push
mov
movs
ins
jmp
repnz
pop
cmp
or
mov
fwait
xchg
jge
sbb
push
sbb
cmp
ficomp
xchg
dec
scas
ins
sub
pop
sub
pop
stos
into
adc
es
and
ret
add
adc
(bad)
in
jle
outs
(bad)
pop
mov
fist
jne
imul
mov
ret
in
movs
pop
and
jl
cld
mov
stos
adc
ins
cmp
fdivrp
int3
jo
sbb
stos
push
adc
dec
inc
push
xlat
lea
sub
fwait
(bad)
xor
loopne
sub
stos
aad
pop
ins
and
(bad)
sub
jle
push
adc
imul
in
and
imul
mov
mov
test
dec
pop
sub
nop
cli
cmps
jmp
cmp
jl
ror
cmp
pop
mov
pop
mov
icebp
mov
cmp
nop
jmp
jecxz
in
inc
in
jecxz
ret
or
sub
sub
pop
and
cld
call
in
ja
mov
sbb
mov
mov
test
sbb
ret
pop
das
bnd
mov
mov
sbb
mov
movs
pop
out
mov
cdq
cmp
xchg
std
std
sub
sub
das
cmp
and
les
pop
rcr
push
sub
dec
pop
jg
lds
sub
mov
pop
pushf
xchg
dec
mov
fs
push
add
xchg
xor
out
fstp
sbb
ins
adc
mov
sub
enter
jge
cld
push
mov
cmp
cmp
inc
xchg
pop
sub
iret
push
mov
ins
mov
int3
lods
jo
pop
xor
jl
imul
and
rcl
mov
mov
lea
outs
pop
pop
out
scas
sbb
out
mov
inc
pushf
jnp
push
push
fld
dec
mov
aaa
pop
mov
inc
stos
add
test
js
inc
pop
int3
inc
push
in
sbb
sub
mov
jb
aas
and
imul
lea
mov
jb
sub
mov
sbb
add
hlt
xor
out
xor
cld
mov
push
and
sbb
in
out
jl
jno
dec
out
push
inc
stos
inc
in
fldenv
stos
movs
sub
jne
and
test
icebp
test
mov
mov
jno
bound
int
addr16
out
dec
push
adc
jmp
push
cmp
or
sub
adc
cmp
mov
push
sar
cmp
fdivr
rol
sbb
or
jmp
aam
shl
mov
scas
xlat
sub
pop
dec
push
push
sbb
sub
(bad)
test
jo
imul
les
and
test
jl
jns
adc
xchg
bound
rcl
xor
popf
cmp
hlt
dec
repz
xor
sub
ins
push
mov
sbb
xchg
(bad)
lock
jae
sub
lahf
outs
add
in
or
mov
jle
xchg
xchg
bound
jno
xlat
das
les
mov
jb
xor
fild
xchg
bound
jg
fild
xchg
bound
jg
fild
xchg
bound
jg
fild
xchg
bound
jg
fild
xchg
bound
jno
fild
xchg
or
dec
fisttp
xchg
bound
outs
jns
ins
les
xor
fild
xchg
bound
jg
fild
xchg
bound
dec
inc
ficomp
jge
idiv
or
push
(bad)
cmp
out
dec
inc
imul
dec
inc
in
push
inc
loope
inc
pop
out
and
dec
out
pop
daa
cli
sub
dec
and
cdq
mov
sub
cmp
cmc
pop
aad
retf
inc
cmp
mov
addr16
sub
test
lods
push
test
rcl
xor
or
pushf
repnz
sbb
push
not
adc
xor
xchg
and
pop
adc
loope
adc
sbb
movs
mov
arpl
mov
mov
arpl
mov
and
push
test
and
pop
cmps
add
xchg
and
stc
mov
xchg
aaa
or
pusha
add
cli
test
inc
sub
mov
(bad)
inc
cs
mov
or
aas
scas
adc
test
(bad)
cmp
fwait
ret
scas
ja
and
jo
mov
arpl
ja
jno
stos
or
or
add
fnstcw
repnz
outs
mov
pcmpgtd
daa
and
cmc
movs
xchg
sar
pushf
xor
mov
push
add
push
add
push
add
push
add
push
add
push
add
push
add
inc
adc
jecxz
dec
lods
sub
(bad)
pop
mov
jmp
(bad)
and
call
shl
clc
pop
inc
retf
retf
and
faddp
add
repz
hlt
lea
cmp
pusha
outs
shl
add
les
inc
daa
push
dec
adc
pop
pop
mov
cmp
cmp
arpl
aas
in
cwde
es
fcom
call
dec
fucomi
(bad)
and
pop
ficom
das
cmp
test
pop
pop
(bad)
js
mov
add
imul
mov
retf
pop
loope
sub
imul
jne
xor
int3
cmp
(bad)
jns
hlt
xor
imul
inc
sub
pop
(bad)
push
cli
push
pop
dec
int3
cmp
sub
jne
cmps
mov
jae
movs
pushf
or
dec
fs
inc
mov
sub
inc
xchg
aaa
inc
jg
lahf
movq
xor
pop
adc
fiadd
push
sbb
sub
cmp
mov
pshufw
xor
push
mov
or
and
mov
xchg
mov
adc
sbb
jmp
xchg
jmp
sub
loop
pop
cld
adc
sub
xchg
jl
neg
cdq
mov
(bad)
out
test
aaa
mov
call
and
cmp
and
xor
clc
xlat
scas
ins
push
sahf
sbb
sub
bound
sub
inc
fiadd
push
sub
mov
retf
mov
sahf
aas
scas
into
mov
and
ins
push
sub
xor
call
(bad)
push
sahf
and
(bad)
mov
add
adc
jp
scas
fiadd
sbb
or
leave
lock
sbb
cmp
call
cmp
fisttp
jecxz
dec
js
cmc
mov
jae
push
push
fwait
mov
jae
sbb
xlat
aas
inc
gs
and
mov
in
movs
dec
adc
xor
mov
fs
mov
cmp
pop
dec
pop
lahf
cdq
dec
int3
xor
mov
outs
ins
cmp
pop
mov
inc
push
cmp
pusha
(bad)
sbb
(bad)
sub
imul
dec
inc
idiv
dec
inc
loopne
inc
pop
out
xor
in
pop
push
in
dec
das
jecxz
ffree
stc
and
and
ins
sti
aad
mov
mul
jp
retf
and
mov
inc
xchg
(bad)
mov
shl
mov
fcomp
push
mov
push
out
dec
sub
cmps
pop
pop
mov
js
popa
mov
das
xor
mov
mov
aaa
push
scas
jg
adc
xor
jnp
test
push
xchg
xchg
mov
shl
mov
mov
mov
or
sbb
pop
jnp
and
xchg
jnp
rcl
sub
jg
inc
push
rol
call
sub
dec
mov
inc
je
repz
dec
repz
mov
xor
rol
fild
pop
repnz
sbb
outs
cmc
pusha
je
push
test
mov
fcmovnu
xchg
ja
cmp
mov
mov
pop
clc
dec
shl
subps
xor
in
inc
cmp
ss
mov
rcl
mov
dec
mov
dec
sbb
jmp
pop
xlat
and
xor
sbb
lock
mov
idiv
push
sub
int
rol
int3
sbb
dec
and
jg
sub
inc
repz
push
inc
pop
in
cdq
pop
cs
fnstenv
mov
enter
dec
push
stos
jecxz
inc
adc
mov
mov
jmp
dec
test
scas
call
pusha
jae
push
sbb
sub
inc
push
xor
cdq
int3
cmp
and
mov
arpl
jg
push
jmp
in
aas
mov
mov
adc
(bad)
and
adc
aad
retf
leave
lea
data16
into
inc
and
icebp
mov
and
xchg
cmp
mov
jecxz
adc
xor
adc
jp
and
sub
out
cli
fild
nop
es
int3
xlat
rcr
sar
sti
sbb
dec
mov
xchg
jmp
test
or
push
mov
mov
test
jmp
bound
dec
rcr
mov
repnz
into
inc
xor
pop
fld
dec
push
mov
xchg
stos
mov
scas
aam
add
jmp
dec
fwait
mov
jge
push
fidivr
push
push
stos
push
and
lock
cld
in
sub
ror
dec
enter
inc
adc
dec
pop
ins
retf
popa
dec
fild
ret
sbb
dec
jne
retf
push
push
fcomp
stos
mov
and
adc
inc
xor
push
pop
xchg
push
and
repnz
fcmovu
stos
lods
jnp
pop
imul
popf
bt
outs
push
add
mov
loope
loope
sbb
icebp
pop
lahf
inc
push
fucomip
adc
pop
(bad)
adc
pop
sti
xchg
mov
push
stos
push
hlt
lods
out
imul
inc
sub
inc
sbb
jo
sub
push
out
pop
inc
out
dec
inc
imul
pop
inc
in
pop
inc
loopne
pop
inc
icebp
and
sar
lods
push
idiv
cmp
outs
std
cmp
test
cmp
push
inc
aas
and
inc
sbb
mov
inc
mov
scas
xor
not
test
push
mov
fstp
into
pop
je
xchg
mov
xchg
sbb
mov
sbb
sub
sbb
cmp
inc
cli
inc
popf
cmps
pop
mov
shr
and
jg
ss
sbb
xor
ret
push
repz
sub
mov
push
ret
(bad)
jg
sbb
jge
mov
adc
pop
mov
pop
mov
and
inc
pop
test
sub
cmp
je
mov
mov
pop
fistp
mov
in
js
jo
(bad)
push
nop
sbb
push
xor
mov
or
jmp
in
pop
das
(bad)
jecxz
pop
mov
inc
push
shl
mov
mov
sbb
test
fdivr
fisub
mov
movs
sti
push
mov
repnz
sbb
mov
pop
push
push
dec
out
mov
je
icebp
lods
inc
push
ror
mov
xchg
and
inc
lods
es
cmp
nop
sub
mov
ret
xchg
addps
lock
sbb
mov
xor
push
push
or
cwde
xchg
inc
imul
mov
jl
cmc
sbb
int3
mov
sbb
xchg
dec
test
pop
outs
xor
mov
inc
mov
dec
and
lds
enter
xor
push
ins
icebp
or
shr
int
repnz
mov
aad
fcmovnbe
in
push
xchg
fwait
push
retf
outs
in
sti
(bad)
scas
pop
inc
jl
mov
sti
push
lock
clc
pop
ficomp
pop
lea
das
push
imul
call
jecxz
push
jo
jmp
cli
(bad)
(bad)
(bad)
ins
pushf
ins
adc
pop
sahf
xor
jle
add
mov
es
push
lods
mov
in
push
mov
jp
inc
inc
cs
xchg
push
not
add
pop
in
fs
aad
aam
push
and
jmp
fmul
mov
ret
cli
xchg
std
pop
jp
dec
jb
daa
fimul
popa
lock
jnp
pop
mov
jg
jnp
sub
jae
lds
mov
mov
pop
mov
xor
fdivp
js
(bad)
shl
and
cmp
iret
inc
(bad)
mov
dec
mov
adc
mov
mov
call
dec
nop
or
fiadd
addr16
ror
fisubr
mov
(bad)
(bad)
adc
inc
popf
pop
loop
call
or
(bad)
sbb
jbe
arpl
ret
mov
sub
pop
mov
sbb
cdq
or
mov
es
mov
es
cs
xchg
sahf
les
jae
mov
jne
jmp
jmp
inc
pop
cld
jb
cmp
pop
mov
cwde
dec
sub
or
jecxz
test
hlt
mov
and
(bad)
pop
es
leave
push
or
cmp
scas
and
cmp
lock
lock
mov
mov
add
add
sub
mov
mov
addps
mov
add
xor
ret
icebp
stc
sub
fnsave
std
(bad)
ds
inc
out
(bad)
inc
add
retf
lds
or
gs
cmp
dec
(bad)
fadd
fisttp
jmp
je
fst
aad
call
xchg
pop
or
fisttp
or
and
jle
add
test
cmp
mov
xchg
sbb
mov
jmp
aas
ds
aas
out
add
(bad)
and
jae
sub
jge
arpl
adc
test
dec
mov
sbb
cli
scas
jno
gs
jge
pusha
test
aam
pop
js
or
fwait
and
out
fs
test
push
mov
pop
add
daa
pop
stos
jbe
xor
out
cmc
lods
mov
add
jge
inc
and
pop
or
inc
jae
dec
cmp
cmp
lahf
addr16
sub
pusha
shl
lods
mov
rep
push
(bad)
adc
mov
xchg
add
cld
mov
ja
xchg
and
add
mov
cld
fucomp
iret
loope
mov
or
lods
push
mov
nop
js
mov
sub
jp
inc
movs
hlt
lds
xchg
cmp
mov
jp
sbb
mov
stc
test
push
cmps
clc
xchg
jecxz
xor
js
pop
sar
test
hlt
add
leave
shr
imul
fst
loop
jbe
ins
jo
sub
ins
pusha
(bad)
sbb
(bad)
cdq
or
jo
imul
loopne
mov
inc
leave
dec
xor
leave
pop
mov
sbb
cmp
idiv
mov
fnstcw
sub
stos
sbb
add
imul
daa
push
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
dec
sar
or
idiv
dec
pusha
(bad)
cmp
inc
jmp
push
imul
pop
push
out
pop
push
imul
sbb
inc
cmps
sbb
(bad)
pop
rol
dec
push
out
pop
push
cmps
sub
imul
dec
jo
sub
jg
test
pop
popa
test
inc
imul
pop
shr
and
jbe
pop
push
imul
pop
push
imul
mov
push
das
sub
imul
add
sub
xor
xchg
or
cmp
cmp
pop
and
(bad)
in
push
inc
or
xchg
push
push
aad
pop
pop
xchg
sub
popf
cld
or
jno
in
(bad)
fiadd
mov
enter
pop
mov
loopne
jl
mov
mov
(bad)
out
jbe
push
movs
retf
out
lea
test
lods
xor
lock
mov
fidivr
stos
cmp
iret
test
xor
rcl
movs
pop
push
jbe
cmp
neg
scas
sub
rol
cmps
mov
ror
and
pop
rol
mov
mov
das
imul
pop
lds
push
js
and
repz
das
dec
mov
sti
and
mov
push
push
pop
push
je
mov
jne
into
mov
sahf
jp
pop
or
not
int
mov
sub
(bad)
das
push
push
repnz
neg
mov
and
or
adc
not
xlat
sti
imul
int3
dec
jbe
sub
popa
fnsave
mov
ins
popa
hlt
mov
and
fcom
inc
(bad)
(bad)
adc
sbb
and
or
in
push
pop
jl
xchg
pop
bound
pop
cmps
jmp
cmps
fnstenv
clc
sub
xlat
fisub
sub
(bad)
fsubr
rcl
fst
sbb
inc
imul
sub
sbb
outs
(bad)
cld
adc
test
pop
pop
(bad)
imul
cmps
mov
xor
jl
(bad)
jno
in
imul
pop
jbe
and
mov
fs
imul
ja
das
mov
add
push
loope
lods
sub
sti
retf
cmp
fs
pop
or
and
ja
mov
out
jge
je
jle
dec
in
xchg
pop
lods
je
xor
aad
imul
adc
pop
pop
pop
sub
retf
lock
xchg
push
mov
add
jae
mov
stc
ret
push
(bad)
push
add
and
pop
pop
push
pop
and
cmps
or
movs
cli
add
jmp
or
retf
in
mov
jbe
jecxz
adc
(bad)
ss
cli
fstp
pop
pop
jo
sub
imul
lds
mov
mov
cwde
lods
fsubr
rcl
cmp
(bad)
test
pop
sar
imul
imul
ins
add
test
push
rcr
es
push
jbe
pop
push
imul
loope
div
rcl
sub
test
push
(bad)
or
mov
or
push
idiv
jle
(bad)
sub
cmp
movs
sbb
sar
or
push
mul
mov
pop
jp
sbb
mov
addr16
into
xchg
xchg
fisub
stc
sbb
cmp
sbb
repz
xchg
mov
mov
ret
pop
push
push
jno
fild
lods
lods
jb
icebp
mov
imul
in
push
dec
int3
pop
scas
test
pushf
je
shl
xchg
push
movq
and
mov
pop
or
sbb
or
push
adc
xor
imul
ins
dec
mov
into
call
cmp
jle
or
jg
add
test
xchg
shl
push
and
(bad)
pop
cwde
psubw
xchg
jge
cmps
mov
mov
retf
data16
pop
jge
cmp
inc
jl
and
jns
pop
pop
leave
add
jmp
hlt
xchg
push
iret
ret
mov
inc
push
dec
jbe
sahf
cmp
addr16
mov
cmp
lahf
sub
out
gs
mov
mov
push
cmp
pop
js
enter
(bad)
jle
jnp
hlt
mov
sbb
sub
out
or
data16
das
arpl
imul
jecxz
push
and
pop
es
adc
mov
aam
movs
cmp
out
xor
push
out
sbb
and
xchg
xor
sbb
sub
xchg
sbb
jo
mov
jb
lea
fs
je
mov
popf
test
mov
pop
sti
fdiv
add
mov
push
dec
mov
in
mov
mov
pop
add
daa
lods
ret
ins
jo
cmp
neg
pop
push
cmps
jns
push
(bad)
sub
test
jo
cmp
imul
pop
adc
cmp
xlat
sub
inc
dec
cmc
mov
dec
rol
lods
adc
cmp
add
es
adc
js
mov
data16
lock
pushf
div
jb
xchg
clc
push
loope
ss
or
out
sti
xchg
mov
jns
dec
cmps
fcomip
and
stc
jns
inc
mov
aam
push
mov
pushf
sub
test
push
int3
push
into
sub
ret
mov
push
cwde
ficomp
fidiv
push
and
cmc
lahf
cmc
loope
xchg
cmp
push
popa
out
pop
popf
js
or
jg
mov
xchg
push
sub
aaa
dec
adc
dec
sar
gs
cmp
aaa
jno
inc
dec
jmp
movs
mov
int3
bound
push
enter
xlat
add
push
xor
mov
and
dec
mov
pop
es
mov
jnp
push
inc
xor
fcmovnb
ret
sbb
cs
arpl
clc
daa
xor
pop
icebp
ret
adc
add
in
xchg
dec
adc
icebp
lahf
jl
cmp
xor
bound
mov
mov
xor
add
fwait
xchg
out
dec
rcr
push
scas
loop
mov
sub
fs
out
mov
repz
aas
push
loopne
xor
add
jne
ret
adc
dec
mov
jmp
sbb
pop
stos
sar
sub
xchg
push
(bad)
lock
ficom
jae
sbb
inc
mov
xor
jns
cmc
pushf
mov
call
jo
dec
mov
ja
(bad)
rol
std
arpl
and
jle
hlt
xor
repz
mov
in
js
adc
mov
sar
sbb
pushf
scas
fidiv
retf
inc
dec
cmp
lock
push
and
pusha
or
daa
cld
shl
in
std
das
cli
out
xchg
add
cmp
(bad)
out
jnp
in
xchg
pop
leave
dec
mov
pop
sbb
pop
mov
xchg
jns
data16
xchg
and
fwait
add
lahf
adc
dec
out
inc
cmp
popa
or
neg
aad
loop
dec
dec
adc
(bad)
or
fcom
sahf
sbb
jecxz
mov
(bad)
cld
adc
repnz
xor
out
fs
or
jns
enter
into
mov
stc
mov
add
jne
sbb
popf
aaa
and
and
into
mov
mov
cmp
add
stc
js
and
cli
call
addr16
mov
lahf
in
js
loopne
mov
ror
jmp
xor
fdiv
pop
inc
push
cmp
ins
pusha
(bad)
jns
rol
sub
inc
(bad)
dec
dec
inc
hlt
cmp
inc
pop
ret
dec
out
push
das
std
cmp
arpl
sbb
cmc
or
xor
aaa
jne
out
ffree
mov
mov
add
in
clc
mov
hlt
dec
dec
shl
in
fsubr
imul
push
out
mov
mov
call
aas
ret
out
mov
fnstcw
pop
hlt
ss
xor
jae
sahf
popf
sbb
or
outs
sbb
xor
mov
lds
aaa
iret
adc
fdivr
xor
sbb
dec
inc
sub
inc
cmps
and
imul
lods
cwde
pop
or
xor
pop
adc
sbb
(bad)
push
sti
adc
mov
jmp
push
adc
in
clc
xor
pop
clc
push
and
lahf
xchg
mov
retf
push
push
jp
sbb
jno
bound
inc
loope
retf
mov
mov
test
mov
sub
pop
movs
nop
gs
in
sub
xchg
out
pop
lahf
cwde
cmc
lds
mov
pop
lods
mov
push
mov
mov
mov
das
clc
arpl
push
mov
or
and
fwait
shl
jnp
out
cmp
sahf
fcom
xor
jo
mul
lock
xor
stc
jmp
push
xchg
mov
push
jmp
inc
pop
add
jb
loop
dec
push
dec
sbb
or
jecxz
xchg
jb
fcomp
jb
dec
sbb
pop
pop
lahf
fimul
test
gs
push
outs
(bad)
ss
sar
cmps
sub
xlat
imul
inc
lahf
aam
repnz
push
leave
add
xor
jmp
dec
jecxz
sub
xchg
pop
cwde
add
dec
mov
adc
rcl
setg
bound
in
ins
movs
out
cmp
add
(bad)
stc
les
(bad)
sti
dec
out
fwait
cmp
pop
(bad)
sbb
mov
sub
add
in
pop
lock
mov
pop
push
movs
aas
outs
es
jo
je
test
in
dec
and
out
ss
addr16
sti
mov
jmp
jae
push
mov
mov
fisttp
std
inc
xchg
mov
lds
sub
rol
(bad)
adc
gs
movs
lods
add
and
or
gs
inc
mov
aas
pusha
pop
sbb
fistp
int3
popa
pop
add
dec
jmp
int3
push
sahf
add
jns
repz
and
sbb
sub
jmp
vmwrite
pusha
and
das
mov
or
add
aas
(bad)
ss
sbb
pop
jg
inc
push
repnz
mov
pop
push
mov
add
in
out
cmps
cmps
outs
dec
mov
ficomp
into
cmc
mov
(bad)
in
cmps
call
sbb
xor
xchg
mov
xor
push
lods
cdq
jns
in
dec
xchg
ror
mov
test
mov
ret
mov
pushf
imul
xchg
call
test
cmc
out
cs
xchg
mov
scas
(bad)
add
(bad)
je
test
sbb
sbb
jge
and
pop
(bad)
jns
sar
adc
fnstcw
ret
lock
std
out
xchg
jecxz
xchg
adc
pop
jmp
sbb
jp
jmp
mov
mov
jns
mov
push
leave
les
fcomp
ret
inc
icebp
fld
mov
pop
js
lea
lahf
ret
scas
xchg
or
aas
dec
push
cmp
pop
dec
or
or
test
mov
int
adc
(bad)
leave
jo
aas
jl
arpl
jmp
stos
lock
dec
mov
xor
adc
inc
retf
lock
mov
mov
sub
lock
out
cmp
int
out
scas
jo
adc
cmp
(bad)
push
jmp
cmps
dec
add
adc
adc
push
je
out
pop
outs
mov
clc
arpl
sbb
into
mov
push
mov
or
ja
jecxz
mov
xchg
mov
push
xchg
cli
in
dec
sahf
mov
aad
aam
sar
ins
push
sbb
lods
push
and
push
sub
push
sar
test
jle
pop
call
dec
inc
rcl
or
add
pop
jo
ss
outs
dec
cmc
clc
pop
push
repnz
ror
enter
or
cmp
cmp
(bad)
stc
int
sbb
pop
enter
popf
and
mov
sti
cli
adc
sbb
ret
(bad)
out
cmp
xor
fistp
add
stos
test
clc
outs
in
jp
dec
or
jo
lods
xchg
pop
ficom
adc
sbb
inc
retf
fsubr
sub
test
jmp
sub
scas
lds
psubq
imul
sub
out
and
hlt
xchg
pusha
or
inc
into
sub
ins
and
ret
sub
stc
daa
stc
lods
iret
push
cmp
jle
or
shl
mov
push
aaa
jnp
cmp
sbb
lods
sbb
xor
mov
sbb
call
std
jo
adc
sub
adc
fsub
mov
pop
cmp
pop
retf
in
call
inc
mov
imul
clc
pop
jo
stos
cs
iret
push
mov
rcl
sbb
jo
mov
sbb
fcomp
add
cli
inc
adc
les
dec
stos
into
fwait
repz
sbb
repnz
std
leave
pusha
gs
nop
adc
mov
sub
push
or
push
xchg
dec
jo
sub
imul
inc
(bad)
cmp
push
aad
pop
je
or
mov
push
(bad)
loopne
dec
dec
in
dec
dec
mov
stos
repnz
rcl
(bad)
mov
jnp
cdq
fst
mov
fsub
mov
jp
xchg
fidivr
popf
int3
sub
icebp
or
mov
mov
div
fnstenv
xchg
jo
stos
cmps
jecxz
imul
lahf
ja
add
push
adc
mov
pop
das
repz
adc
or
jmp
inc
adc
aas
xor
aad
push
arpl
jbe
sub
out
shl
add
cmps
dec
xchg
in
inc
(bad)
dec
aaa
jle
cmp
mov
sub
(bad)
jmp
xchg
daa
mov
hlt
dec
cli
sbb
jmp
movs
adc
or
repnz
out
xchg
daa
and
lea
iret
mov
cmp
mov
jecxz
cmp
ret
pushf
rol
push
mov
xchg
cld
(bad)
in
je
dec
xchg
sub
pop
pop
in
(bad)
xchg
retf
inc
sbb
xchg
dec
iret
or
sbb
popa
pop
pop
push
jge
dec
jo
movs
pop
cmps
hlt
pop
fist
loope
out
test
push
cdq
mov
mov
mul
(bad)
fwait
mov
icebp
(bad)
pop
sar
call
dec
mov
jle
mov
sbb
stos
push
enter
push
(bad)
fsqrt
loopne
in
sub
push
(bad)
jbe
mov
cmp
xchg
jno
sar
dec
lds
sti
xchg
mov
(bad)
mov
cmp
sbb
jge
test
and
pause
inc
fs
(bad)
pop
retf
dec
sbb
mov
(bad)
sar
jb
ret
ret
pop
mov
into
cmp
jnp
cmp
sbb
inc
mov
out
push
adc
sub
add
push
jmp
or
imul
icebp
ret
ror
add
dec
inc
inc
mov
ins
int
inc
add
mov
dec
xor
xor
sub
scas
iret
cli
inc
sub
call
lea
sbb
and
cmp
or
cmc
pop
add
out
push
add
sbb
adc
outs
push
pushf
jmp
sub
iret
mov
or
inc
xchg
xchg
xlat
fdivrp
retf
push
add
cmp
sub
sbb
dec
or
inc
jno
jecxz
enter
aaa
test
(bad)
nop
mov
aam
cmp
push
and
mov
mov
xchg
cmp
add
retf
xor
sub
push
ficomp
inc
sti
(bad)
cwde
cli
xor
fucom
add
loop
(bad)
fsubr
popw
cmp
shl
xchg
sbb
lea
mov
dec
push
push
mov
mov
ret
mov
dec
adc
mov
dec
sbb
bound
mov
cmp
push
pop
add
mov
loope
pop
sbb
mov
add
mov
(bad)
jae
cli
inc
pop
mov
push
jl
fwait
cmc
sbb
jl
in
lods
icebp
mov
push
push
mov
xchg
adc
pop
dec
mov
movs
test
fiadd
xor
movs
cli
rcl
(bad)
test
out
test
cmp
jl
inc
btc
out
popa
mov
loope
enter
data16
mov
ins
into
xchg
mov
xor
mov
mov
ror
xor
loope
(bad)
xor
sahf
mov
push
sub
xor
fnstenv
jg
pop
repnz
jnp
push
sbb
adc
push
test
outs
mov
fnstsw
sub
or
jbe
push
popa
adc
push
adc
imul
outs
mov
ja
clc
cdq
fwait
mov
int
sub
jg
rcl
pop
rol
add
sbb
(bad)
or
imul
dec
push
idiv
dec
inc
idiv
dec
inc
jecxz
dec
dec
out
sub
cld
and
jecxz
ffree
jmp
test
push
in
call
pop
sti
(bad)
daa
mov
mov
push
sbb
sub
dec
and
add
mov
lds
xchg
mov
jo
loope
cmp
push
add
fiadd
mov
int
sbb
jge
enter
pop
mov
repz
aam
inc
push
pop
aad
xor
cs
adc
mov
jmp
sbb
bnd
(bad)
outs
mov
(bad)
sbb
push
inc
ret
sahf
ret
and
jnp
jmp
popf
and
frstor
push
or
cmp
and
(bad)
cmp
cmps
mov
ret
pushf
mov
cmp
mov
mov
je
mov
push
or
call
sub
sbb
jnp
aad
gs
cli
jg
mov
push
imul
sub
inc
or
sub
enter
pushf
ins
adc
xchg
xor
movs
mov
and
lahf
adc
mov
mov
in
dec
fucom
(bad)
stc
cmps
adc
push
mov
fwait
out
pop
sub
jmp
test
adc
je
adc
add
xchg
mov
rcr
cwde
mov
or
std
or
pop
int3
cmp
retf
(bad)
dec
push
sbb
scas
call
in
inc
jecxz
inc
inc
sbb
lods
inc
out
mov
xchg
nop
call
jno
repnz
test
jnp
xlat
lods
cld
shl
ret
addr16
push
fisttp
pop
bound
fwait
mov
mov
arpl
xchg
fimul
push
sub
lods
ret
mov
jp
jge
push
rol
xchg
mov
mov
dec
lea
fisubr
xchg
aam
retf
retf
pop
loop
pushf
in
in
rcl
pop
inc
repz
into
mov
stos
je
fdivr
test
outs
xchg
daa
pushf
xchg
out
mov
adc
xor
fld
stos
mov
push
call
mov
mov
dec
pop
cmp
daa
in
inc
and
xor
fild
in
mov
loopne
enter
call
push
cmp
add
retf
add
jp
fcmove
mov
repnz
loope
sub
pop
mov
or
(bad)
fisttp
inc
cmps
inc
cdq
inc
jb
iret
xchg
lea
mov
in
popa
lea
cli
aad
push
test
mov
shl
mov
xchg
ror
mov
mov
(bad)
mov
fadd
fisubr
jb
adc
shl
aaa
mov
cmp
outs
(bad)
jmp
pslld
pop
clc
xor
ss
pop
mov
or
pop
cmp
adc
mov
adc
mov
adc
in
imul
dec
push
push
sbb
sub
(bad)
test
out
dec
iret
shl
je
lea
shl
hlt
out
dec
(bad)
shl
je
add
mov
xchg
cmp
xchg
je
test
shl
je
or
shl
xchg
imul
xchg
es
retf
outs
lahf
je
mov
es
mov
int
iret
shl
xchg
sti
imul
shl
adc
pusha
fwait
xor
in
inc
iret
shl
call
dec
iret
shl
xchg
jnp
fwait
inc
out
dec
iret
shl
je
std
inc
iret
shl
xchg
or
je
int
iret
mov
gs
je
xchg
dec
rol
ss
xchg
cmp
xchg
hlt
jecxz
inc
fwait
shl
je
or
shl
hlt
or
nop
xchg
cmp
hlt
call
mov
xchg
cmp
je
lea
rcl
adc
pushf
sub
imul
sub
ret
jge
mov
or
push
mov
pop
push
(bad)
sub
imul
dec
inc
in
dec
inc
repz
and
in
and
dec
loopne
sub
and
push
sub
xor
sbb
cmp
dec
pop
sub
icebp
nop
int3
push
dec
mov
jo
in
addr16
mov
and
mov
mov
and
sbb
xchg
pop
lea
push
xchg
addr16
cmp
jge
ins
sub
stos
jge
cli
or
jbe
es
jg
fst
popf
aad
add
push
push
loope
dec
sub
movs
ret
(bad)
pop
mov
test
mov
sub
loopne
mov
and
retf
xor
adc
xchg
enter
sub
mov
xor
push
not
sbb
push
call
aam
inc
shl
mov
enter
push
frstor
adc
pop
push
sub
daa
retf
fwait
sbb
adc
xchg
in
xor
out
fwait
mov
movs
and
or
mov
mov
push
hlt
(bad)
push
retf
loope
pushf
push
jnp
pop
call
push
xor
xchg
jmp
mov
push
sub
mov
je
sti
pop
add
movs
sub
fisubr
xor
pop
ds
das
rcr
arpl
mov
dec
and
jo
fisttp
sub
mov
in
aad
mov
adc
sub
jnp
aas
jmp
nop
test
dec
add
fwait
inc
xchg
adc
repnz
retf
cmp
add
lahf
movs
cmp
mov
mov
pop
xchg
adc
dec
lods
iret
jle
fisubr
add
or
ret
push
dec
push
and
jmp
pop
in
jns
pop
xor
xor
cmp
push
mov
cdq
fs
test
(bad)
xchg
stos
ja
daa
mov
outs
dec
xchg
movs
out
mov
cdq
fsub
not
(bad)
scas
mov
test
mov
popa
mov
xchg
cs
adc
enter
mov
pop
scas
inc
xor
xchg
adc
enter
mov
mov
es
sub
stc
pushf
push
mov
inc
lods
adc
iret
push
push
mov
leave
data16
sbb
mov
scas
stos
sbb
fisub
imul
popf
ins
std
pushf
mov
lods
dec
lods
int3
cld
fisttp
aas
cdq
test
std
push
cld
movs
jp
and
movs
dec
icebp
aaa
ss
sbb
push
sti
out
xchg
dec
mov
add
inc
outs
add
fisttp
test
push
sti
dec
adc
sbb
sbb
dec
lods
stos
clc
inc
fisubr
xchg
jl
outs
push
hlt
add
jmp
je
mov
int3
cwde
loop
fcom
mov
jge
aad
lea
repnz
fwait
and
push
dec
inc
jmp
jo
sbb
out
pop
inc
(bad)
sub
imul
pop
inc
in
dec
dec
loopne
pop
push
out
and
jecxz
ffree
jmp
mov
mov
(bad)
lods
jae
faddp
sbb
add
sahf
shl
movs
adc
lds
inc
out
comiss
push
push
jno
jmp
mov
fucompp
pop
test
dec
mov
lods
scas
and
xchg
hlt
pop
mov
iret
lea
jmp
das
dec
add
push
xchg
lods
test
movs
push
pop
outs
loope
add
xchg
retf
push
mov
lock
sbb
pop
mov
ja
clc
xor
jns
adc
pop
cwde
pusha
sub
nop
adc
adc
sbb
pop
jno
clc
xchg
adc
xlat
inc
jmp
mov
(bad)
clc
cdq
add
sub
mov
sub
into
je
dec
in
ror
mov
dec
aam
mov
dec
push
fs
inc
pop
or
dec
fs
mov
cmp
sub
push
leave
mov
(bad)
punpckldq
xlat
or
push
hlt
and
jle
stos
bswap
push
test
in
pop
test
lock
sub
jp
adc
in
jl
mov
pushf
inc
scas
cmps
push
sbb
addr16
mov
scas
dec
clc
pop
mov
jmp
xlat
xchg
and
loopne
lahf
pop
xor
inc
dec
(bad)
scas
pop
cli
in
adc
cmp
js
xchg
pop
cmp
inc
sbb
js
out
es
mov
pop
mov
(bad)
dec
shl
call
push
mov
arpl
(bad)
jg
inc
das
mov
xor
scas
and
pop
ror
push
xchg
push
adc
rcr
and
fist
fld
stc
mov
or
shr
jno
cmp
ret
loope
(bad)
scas
(bad)
popa
test
movs
enter
sub
jne
jno
(bad)
inc
push
or
fst
add
dec
scas
cmp
call
mov
ret
add
mov
jecxz
imul
sbb
lods
inc
sbb
cmp
aam
mov
fwait
dec
mov
iret
sub
loope
daa
xor
shl
test
mov
icebp
das
mov
inc
xchg
xchg
jns
in
les
adc
mov
push
jmp
add
stc
cmp
xchg
stos
jns
aam
inc
inc
adc
mov
loope
inc
jbe
idiv
add
cmp
lds
xchg
test
inc
inc
retf
pop
xchg
cmp
mov
inc
jmp
or
xor
pop
pop
jae
int
xor
gs
pop
mov
nop
inc
xchg
ret
pop
xlat
dec
lds
bound
xchg
mov
pop
js
inc
in
mov
pop
loop
jl
ins
(bad)
imul
or
and
mov
mov
inc
sub
jae
jecxz
cmp
adc
and
add
sbb
movs
sbb
bound
fyl2xp1
stc
aam
(bad)
xor
cdq
test
push
(bad)
out
fcom
or
stos
cmp
xlat
add
hlt
mov
aaa
leave
and
or
sub
lods
ret
in
aas
cmp
push
push
ja
and
dec
sti
dec
sbb
or
mov
or
movs
cmp
cmc
dec
ficom
imul
push
xchg
leave
lds
fxtract
xor
imul
repnz
xchg
daa
or
cwde
outs
mov
push
test
cmc
add
ins
mov
jo
adc
and
xchg
imul
cld
push
dec
stos
jmp
fwait
sbb
cs
and
push
inc
xchg
arpl
jg
sub
jge
mov
xor
stc
cmps
call
push
test
cmp
push
jbe
push
push
je
cmp
out
jno
and
clc
jmp
mov
push
push
jecxz
jno
in
std
add
sub
mul
lods
stos
cmovle
icebp
movs
push
add
idiv
pusha
inc
xor
pop
xor
punpckhwd
stc
dec
nop
mov
(bad)
dec
pop
fbstp
outs
xchg
pop
outs
mov
jecxz
jecxz
dec
mov
ja
jno
cmps
aad
or
xor
test
add
inc
adc
lahf
gs
adc
mov
aam
bound
pop
or
cmp
movs
lahf
idiv
pop
inc
sub
jo
or
test
push
(bad)
cmp
(bad)
sub
idiv
pop
inc
in
pop
push
out
aas
dec
dec
in
repnz
jmp
mov
ds
jmp
push
fisttp
(bad)
dec
jg
(bad)
push
aas
cdq
adc
xlat
cmps
xor
out
xor
xor
retf
xchg
lea
cmc
xor
sub
out
lock
aad
ins
sub
inc
xchg
popf
fwait
or
out
cmps
mov
lods
mov
push
in
xor
inc
enter
push
mov
iret
push
sbb
xchg
in
daa
dec
outs
mov
inc
(bad)
and
mov
stos
rol
cmp
jp
in
dec
sub
mov
or
popa
mov
sub
loopne
and
mov
ds
aam
das
adc
popa
mov
xchg
mov
in
loop
je
or
cmp
js
add
xor
push
cli
pop
adc
xchg
sub
jge
add
lahf
adc
mov
jo
xor
arpl
or
(bad)
mov
jbe
pop
or
push
mov
jmp
into
jnp
sub
mov
push
sub
in
inc
nop
hlt
add
je
mov
mov
hlt
xor
pop
je
dec
mov
repz
dec
int
lock
test
mov
cmc
pop
add
jno
pushf
push
in
mov
jl
jno
int
outs
xor
ins
lds
mov
add
outs
ins
adc
mov
add
xor
push
sbb
fsubrp
into
mov
fidiv
xchg
mov
dec
aad
ret
fsubr
add
cmp
mov
ins
pop
mov
in
sub
aas
rol
loop
push
mov
sbb
in
push
pop
mov
sbb
je
shl
xchg
sub
loopne
ja
daa
jmp
call
pop
pop
out
pop
jecxz
in
xchg
ja
and
mov
lds
fmul
test
fwait
lahf
mov
sahf
retf
not
inc
daa
pushw
in
(bad)
dec
fisttp
test
mov
daa
mov
xchg
jae
push
sbb
xor
sub
pcmpgtd
jp
or
dec
cmp
out
or
pop
mov
sub
jmp
sti
cmp
mov
sbb
cmp
test
inc
mov
mov
jge
shr
(bad)
std
fnsave
pop
rcr
fincstp
and
sub
push
and
mov
out
xchg
scas
fdivrp
xchg
push
or
push
pop
ins
js
jecxz
cs
(bad)
jg
imul
sub
jb
lock
loop
stos
push
call
sbb
sub
dec
call
jb
push
ds
mov
xlat
sub
sub
rcr
cmp
sub
xlat
jg
fs
cs
dec
cmp
xchg
sbb
pop
jb
jmp
xchg
out
in
mov
imul
fidiv
sub
shr
cmp
retf
pop
pushf
or
xchg
fsub
jecxz
out
test
sub
mov
test
fstp
pop
dec
cmc
sub
fadd
or
add
add
jo
movs
jne
push
xchg
sub
cmps
xchg
lea
xor
xor
out
lea
mov
in
or
scas
je
push
pop
ret
cwde
aaa
cmps
cmp
mov
xor
xor
imul
aam
lahf
mov
xchg
std
sbb
aas
mov
or
and
(bad)
push
or
cmp
xor
loope
pop
xchg
or
pop
sbb
pop
dec
ds
pop
push
pop
and
mov
xchg
xchg
push
sub
push
sub
imul
sbb
jg
ins
das
adc
int3
push
xlat
aam
mov
leave
inc
mov
pop
(bad)
pushf
imul
ins
pop
push
pop
inc
int3
imul
xor
int
fstp
gs
pop
cld
sub
and
out
pop
add
out
ja
call
inc
push
adc
pushf
cwde
xchg
mov
test
imul
cmp
adc
cmp
outs
imul
fld
(bad)
xchg
pop
fs
fdivr
nop
lods
shl
xchg
pop
(bad)
ret
pop
cmps
ret
and
inc
pop
in
lods
inc
jb
scas
mov
ret
pop
add
adc
jmp
cmp
xchg
add
adc
mov
inc
ss
dec
xlat
fwait
sub
outs
mov
add
lods
inc
jb
iret
mov
jbe
stos
int3
pop
jle
jb
xchg
mov
jmp
cmp
adc
mov
int3
ret
ficom
leave
aam
inc
jbe
dec
shl
fst
pop
and
sub
jge
inc
or
(bad)
or
push
(bad)
imul
jo
test
lea
inc
test
loopne
dec
pop
shl
or
imul
lods
and
push
or
ja
push
pusha
xlat
push
sbb
inc
out
int
cmps
stc
lea
cmps
sbb
daa
push
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
jb
mov
pop
jo
sub
loope
jge
imul
dec
inc
out
push
adc
dec
rol
cmp
idiv
pop
push
(bad)
sub
out
sub
adc
test
dec
inc
jmp
push
imul
pop
push
out
pop
push
imul
cmp
and
and
push
push
sub
sub
or
test
pusha
in
push
mov
pop
pop
es
outs
add
sub
das
ds
sub
xlat
mov
cli
in
rcl
fnstenv
jne
lods
add
leave
(bad)
adc
or
push
out
add
xor
push
aaa
add
pop
mov
js
aad
add
pusha
(bad)
or
not
inc
scas
arpl
pop
icebp
add
xor
inc
int
xchg
ret
or
lods
shl
jae
out
loope
aad
cmps
call
xchg
jmp
jmp
cmc
imul
push
ret
push
mov
lods
fsub
cs
out
(bad)
repnz
mov
(bad)
jp
fild
wrmsr
sbb
(bad)
sub
int3
sbb
das
add
xchg
inc
mov
pop
cmp
ret
fist
popa
and
call
data16
sub
mov
mov
mov
fwait
stos
out
int
mov
imul
(bad)
cmp
lods
ret
call
push
add
scas
bound
xchg
repnz
pushf
inc
loopne
jmp
test
adc
popf
outs
pushf
in
xchg
xchg
(bad)
cmp
hlt
mov
mov
push
pop
pop
mov
es
cmp
mov
xchg
inc
mov
sahf
push
(bad)
fwait
es
add
loopne
clc
(bad)
push
or
and
(bad)
in
push
movs
lock
jmp
test
outs
dec
mov
mov
in
outs
xchg
mov
loope
or
sahf
dec
pop
sbb
push
mov
inc
pop
jmp
add
mov
jg
push
mov
sbb
sub
movs
repnz
mul
cmps
pop
ins
lock
pop
xor
aam
cmc
jle
mov
fisttp
push
bound
pop
push
out
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
int
idiv
ins
push
push
test
(bad)
daa
pop
xchg
jecxz
js
pop
rcl
sub
mov
xor
or
and
sbb
pop
add
test
sub
mov
mov
adc
add
sbb
dec
adc
dec
mov
rol
stc
scas
ret
lock
leave
sahf
(bad)
sahf
pop
sub
repnz
dec
xchg
dec
out
mov
adc
out
mov
adc
loopne
xchg
dec
and
mov
dec
cmp
cmps
adc
mov
mov
fwait
imul
inc
(bad)
mov
sub
(bad)
sub
(bad)
gs
adc
aam
and
dec
dec
jns
iret
xchg
mov
dec
enter
mov
stos
iret
jo
and
inc
int3
ret
or
test
cwde
movs
jb
clc
mov
mov
mov
pushf
inc
in
push
mov
cmps
and
(bad)
pushw
and
aad
jge
xchg
push
adc
arpl
ja
inc
in
push
mov
cmp
out
push
iret
ret
inc
bound
xchg
repnz
pushf
inc
jne
jmp
jb
ror
lods
ds
mov
fdivr
xchg
dec
mov
add
inc
rep
sahf
add
mov
outs
inc
cmp
fwait
in
and
pop
cli
sbb
push
xor
cmp
pop
mov
pop
aam
jnp
jbe
xlat
jl
mov
pop
nop
or
mov
sbb
in
adc
shl
pop
jbe
and
lods
addr16
jmp
lods
or
mov
test
jp
(bad)
fwait
neg
pop
pop
push
fcmove
or
cmps
leave
push
cmps
div
jle
mov
pop
push
or
add
imul
out
pop
add
sub
add
cmp
xchg
jae
sub
shr
or
inc
test
mov
es
repnz
outs
adc
pop
ret
jmp
jp
gs
add
cmp
xor
mov
mov
inc
jmp
xor
retf
dec
test
pop
sub
out
das
ss
pop
popa
mov
adc
idiv
xor
pop
sbb
adc
js
inc
ror
cmp
jbe
sbb
call
arpl
cmc
imul
add
sahf
loopne
daa
pop
mov
xchg
imul
repnz
xchg
pop
outs
inc
ins
fld
in
cmp
add
out
jnp
mov
or
adc
js
mov
jae
cmp
movs
je
shl
pusha
cmp
aaa
(bad)
retf
or
addr16
pop
add
enter
ret
dec
idiv
in
dec
xchg
cdq
push
idiv
inc
push
fdivr
shl
mov
jne
les
cmp
fild
pusha
or
out
cs
mov
dec
lods
sbb
xchg
push
sub
xor
sub
adc
or
call
mov
inc
push
inc
fisttp
loope
(bad)
mov
sub
fisubr
mov
les
pop
push
cmp
inc
pop
mov
mov
ja
or
push
(bad)
aas
imul
jmp
mov
imul
mov
repz
shl
call
or
xchg
jo
inc
mov
nop
(bad)
xor
inc
push
int
add
addr16
inc
daa
xor
push
push
xor
test
rcl
adc
hlt
sbb
push
sub
imul
pop
addr16
arpl
pop
das
jno
outs
sbb
lds
dec
fs
jl
sbb
(bad)
lds
xchg
popf
mov
pop
jl
sbb
and
sbb
dec
fs
jl
sbb
and
popf
push
mov
push
mov
in
(bad)
sti
(bad)
aad
xor
sbb
pop
fild
cmp
xsavec
pop
push
inc
mov
popf
xchg
push
add
inc
mov
loope
movs
mov
and
mov
mov
in
(bad)
sti
(bad)
aad
xor
sbb
out
sbb
aaa
sbb
out
xor
call
ins
ds
and
push
out
iret
and
(bad)
in
xchg
fs
cmp
adc
xchg
or
fdiv
jge
cdq
lea
pop
fs
pop
into
cld
jge
xor
cli
les
movs
fmul
lea
fild
inc
adc
or
lds
fwait
retf
mov
mov
test
bnd
stos
sbb
lock
dec
or
cli
mov
push
jmp
dec
lods
mov
jmp
fiadd
imul
scas
adc
mov
xchg
test
push
jbe
push
sub
cs
jmp
out
adc
adc
in
lock
shl
jecxz
or
xlat
jg
mov
jae
stos
add
add
push
mov
jge
push
test
mov
pop
nop
push
inc
xor
cmps
adc
mov
enter
loop
dec
dec
or
fdivr
xor
mov
and
fstp
and
xchg
not
xor
test
sub
xchg
loop
pop
jg
add
mov
jmp
lea
mov
pop
inc
mov
das
fdivr
push
fucomp
(bad)
sub
dec
lods
sbb
(bad)
call
push
pop
mov
jge
mov
sub
jg
pop
push
neg
(bad)
ror
addr16
push
das
shl
(bad)
cmp
scas
adc
push
mov
push
adc
repnz
sbb
push
imul
xor
pop
nop
add
pop
ins
shl
pop
push
(bad)
sub
out
or
inc
mov
jl
jecxz
pop
inc
(bad)
cmp
add
in
inc
dec
shl
jle
jmp
dec
cs
cs
jmp
mov
cwde
or
push
cdq
jle
mov
sbb
mov
push
ret
fcom
fdivp
mov
xchg
push
mov
lock
cmc
rcl
and
mov
pusha
mov
enter
call
sahf
lods
bound
in
je
mov
dec
xchg
mov
xor
push
bound
and
lods
fwait
hlt
ret
fmul
inc
push
addr16
fcmovb
xchg
pop
(bad)
ja
mov
mov
xor
jnp
or
mov
fs
mov
test
mov
outs
xor
shl
outs
mov
cwde
jg
add
xor
cmp
test
mov
add
cmps
daa
movs
pop
xchg
cs
out
call
gs
stc
and
(bad)
jno
rcl
xchg
fnstsw
sbb
adc
aas
nop
push
xor
pop
adc
dec
cs
jmp
dec
jle
(bad)
and
sbb
popf
ret
sub
mov
pop
cmps
rcr
xor
dec
add
(bad)
rcr
jge
inc
mov
das
(bad)
(bad)
(bad)
xor
inc
popa
xor
ins
outs
mov
add
mov
adc
and
call
out
idiv
cmp
cwde
add
xchg
repz
cld
mov
(bad)
cmc
add
fcom
(bad)
and
rcr
or
or
test
outs
inc
nop
shl
inc
push
retf
sub
pop
cmps
xchg
push
imul
pop
jp
cdq
sbb
(bad)
sar
outs
(bad)
adc
xchg
cli
repnz
mov
(bad)
out
js
out
push
popa
loopne
fstp
mov
retf
repz
xor
jo
bound
sti
xor
inc
pop
mov
fucomi
fwait
push
and
in
(bad)
fdivr
inc
add
ins
dec
data16
ja
dec
test
addr16
rol
fdivr
push
push
fs
mov
cmp
lds
retf
cmc
lock
fdiv
dec
addr16
aad
cmc
fcmove
jo
or
scas
cmp
popf
(bad)
out
das
sub
or
xchg
adc
and
sbb
imul
xor
mov
aas
xor
add
fimul
aaa
jb
popa
mov
cmp
adc
pop
adc
call
rcl
inc
cmp
imul
ss
and
jae
mov
inc
jmp
out
jg
fs
je
rol
sbb
leave
and
sbb
jmp
adc
dec
dec
mov
aad
icebp
(bad)
leave
mov
popa
sub
mov
ret
adc
push
es
jg
xchg
(bad)
jbe
and
ins
adc
push
fld
xor
mov
jmp
je
int
loop
fcmovbe
ins
or
shr
hlt
popa
into
add
pop
pop
in
inc
cs
add
sub
ret
push
adc
sub
repz
mov
cld
out
add
in
retf
and
and
jmp
xchg
fwait
pop
jecxz
lods
adc
iret
pop
loope
cmps
daa
in
xor
cmp
jo
int3
cmp
mov
mov
fstp
or
sahf
inc
imul
dec
pop
xor
fs
dec
push
mov
dec
jle
and
fdiv
xor
push
and
jmp
xchg
fwait
pop
jecxz
lods
adc
iret
pop
loope
cmps
daa
in
xor
cmp
jo
int3
cmp
mov
mov
fstp
or
sahf
inc
imul
outs
xor
lock
cmp
call
jmp
sahf
push
bound
jmp
rol
repnz
or
mov
nop
sti
push
int
sbb
int
leave
push
aam
loop
cmps
into
jbe
pop
ins
lea
popf
arpl
pcmpeqw
adc
cmps
loopne
addr16
lea
sub
adc
gs
ret
inc
ror
jns
dec
ins
(bad)
jl
stos
sar
add
jl
lock
and
daa
(bad)
mov
aaa
loop
adc
or
push
enter
lods
sbb
test
ja
cmc
leave
xor
add
mov
nop
sti
push
int
cli
gs
int
jb
mov
loop
mov
jle
push
mov
adc
sbb
(bad)
cwde
sub
jmp
in
fadd
push
ficomp
in
jb
push
test
test
jmp
mov
cmc
int3
and
int3
es
add
push
mov
inc
or
ror
adc
retf
dec
aad
clc
adc
xchg
hlt
cmp
pushf
out
dec
push
sbb
fldenv
scas
inc
cmp
jae
pop
mov
and
daa
out
daa
(bad)
cmps
inc
cwde
loop
clc
or
(bad)
sti
mov
pushf
(bad)
jmp
in
xchg
push
fs
jmp
inc
push
test
int3
aaa
dec
lods
cmp
test
jb
pushf
dec
dec
cmp
mov
inc
inc
icebp
ja
(bad)
loope
cmp
call
nop
rcl
mov
inc
mov
adc
ins
sti
ret
jmp
scas
add
mov
imul
cmps
loopne
addr16
lea
sub
je
in
jns
add
sbb
cwde
and
ret
dec
jmp
test
cmp
cmp
out
and
aaa
sbb
add
adc
mov
clc
adc
rcl
mov
pushf
out
dec
push
sbb
fldenv
scas
sar
ret
mov
icebp
or
movs
push
jmp
adc
jo
inc
mov
shl
icebp
sub
fidivr
scas
bound
jns
inc
xor
or
inc
sbb
jae
pop
das
jb
scas
xor
icebp
mov
xchg
cld
inc
(bad)
jnp
pop
mov
or
retf
js
xor
loopne
sub
fimul
push
jns
aad
out
mov
movs
inc
shr
imul
loop
pusha
cmps
in
imul
mov
cmp
push
sbb
(bad)
sub
imul
pop
inc
(bad)
jns
inc
mov
jle
aad
push
inc
out
pop
pop
repnz
pop
inc
in
repnz
out
pop
jge
out
dec
inc
jbe
clc
test
sub
pop
mov
imul
les
repnz
or
jae
das
or
(bad)
hlt
or
cmp
sbb
push
sahf
(bad)
adc
pusha
je
(bad)
retf
movs
push
fnstenv
or
cmovns
pop
sub
push
or
dec
mov
pop
jg
dec
adc
mov
jp
mov
ficom
and
sub
bound
jbe
pop
nop
inc
jmp
xor
inc
push
dec
(bad)
push
xlat
hlt
mov
int3
ins
adc
push
jl
repz
mov
aas
mov
mov
dec
xor
daa
cmp
into
or
int
in
in
mov
adc
and
jmp
movs
into
cli
jl
lds
jecxz
xor
lahf
sub
dec
ja
stc
ja
aad
and
stos
imul
pop
sbb
test
jp
lods
xchg
call
aad
push
ins
cli
cmc
cmp
mov
dec
xor
daa
cmp
hlt
or
fld
les
add
cmp
mov
dec
xlat
push
in
pop
lods
xor
mov
sti
mov
xor
xchg
xor
mov
scas
push
out
ins
addr16
and
into
sbb
pop
mov
out
xchg
dec
mov
mov
inc
inc
neg
or
sahf
cmps
ins
sbb
int
repz
repnz
cmps
stos
mov
jg
or
mov
sbb
add
mov
sbb
ja
test
dec
aam
cmp
mov
inc
xor
dec
sbb
xchg
outs
sub
inc
call
(bad)
repz
xchg
js
xor
push
out
pop
add
add
dec
mov
mov
or
add
iret
out
xor
mov
out
push
dec
stos
call
jno
adc
inc
adc
stos
aam
jl
outs
mov
movs
and
xchg
pop
dec
fild
adc
fisttp
movs
mov
data16
pushf
push
(bad)
pusha
sub
imul
out
xor
ss
push
push
(bad)
cmp
cmp
xchg
pop
dec
fild
adc
fisttp
movs
mov
data16
pushf
push
(bad)
pusha
sub
ja
in
out
fldln2
fidiv
fldln2
fidiv
inc
in
mov
dec
aas
dec
pop
(bad)
sub
aas
fld
pop
movs
fisttp
or
idiv
add
lds
xor
repnz
paddsb
mov
adc
xchg
(bad)
mov
jae
lods
push
mov
iret
mov
inc
(bad)
and
(bad)
and
(bad)
and
fild
xor
aas
mov
mov
adc
push
pusha
fs
out
mov
hlt
and
neg
jae
cld
ret
add
mov
sub
outs
mov
xchg
mov
icebp
mov
xor
mov
dec
mov
push
xor
loopne
cmp
jge
repz
mov
push
sbb
dec
ins
cmp
and
mov
call
dec
push
stos
add
jmp
cwde
inc
and
mov
jg
adc
xlat
sti
lock
sub
mov
fs
loopne
cmp
sbb
in
push
out
cwde
sub
push
lahf
clc
movs
xchg
mov
sub
sbb
out
enter
cdq
pop
push
mov
xor
mov
adc
sbb
pusha
xor
jnp
(bad)
sub
fnsave
leave
mov
movs
pop
(bad)
popf
inc
xlat
sub
sahf
(bad)
mov
dec
mov
mov
stos
and
outs
or
add
(bad)
and
sub
or
retf
scas
leave
out
sub
lea
pop
outs
repz
mov
xchg
add
repnz
push
cmp
sbb
jle
test
ss
imul
xor
cwde
or
and
inc
rcr
xor
xor
(bad)
jno
ja
lods
mov
lea
(bad)
sbb
jno
lock
dec
jo
sub
inc
imul
adc
pop
push
xchg
sub
out
dec
inc
imul
push
cmc
sbb
cmps
sbb
aam
dec
ja
sbb
dec
loope
imul
js
mov
or
sbb
push
inc
pop
mov
cmp
out
test
or
cmp
xchg
lahf
push
int3
sub
xchg
loope
sub
and
push
mov
and
popf
ins
sbb
rcr
mov
(bad)
pop
and
mov
fdivr
fstp
mov
mov
jecxz
xor
and
jp
ror
sar
add
ror
test
or
std
inc
sub
dec
add
xchg
or
gs
adc
cmc
push
pop
fcom
repz
out
inc
lods
adc
data16
jae
xchg
push
jge
cmp
add
aas
cwde
add
rcr
add
movs
or
sbb
inc
outs
pop
mov
hlt
rcr
retf
xor
ss
sub
pop
je
or
cmp
mov
bound
inc
pop
inc
inc
sub
lds
mov
aas
fst
xor
jb
or
(bad)
xor
icebp
into
adc
and
in
xor
pop
repz
jl
push
jle
mov
jns
push
xchg
retf
and
cmp
loope
sahf
aas
bound
(bad)
iret
and
fld
sbb
jnp
loopne
cld
xor
cmps
or
inc
pop
dec
dec
lahf
stos
mov
cs
jecxz
cmc
clc
jecxz
push
je
test
retf
pop
scas
fld
and
popf
mov
sub
push
fld
add
push
xor
in
inc
out
and
sbb
mov
rcr
lock
js
jne
and
js
pop
sub
scas
jno
or
js
fwait
das
pop
jbe
loopne
push
mov
sub
test
dec
aam
add
popf
outs
aad
ror
adc
adc
fdiv
jmp
fidivr
push
mov
shl
retf
mov
adc
cld
cmps
and
jnp
pop
inc
mov
xlat
sub
movs
jmp
loope
sbb
xor
push
sub
sbb
scas
dec
sti
mov
and
popa
repz
movs
int3
sub
sbb
popa
cmp
popa
out
or
mov
retf
popa
loope
mov
jb
cmp
inc
mov
sahf
and
cmp
xchg
stos
lahf
add
pop
sub
les
mov
sbb
jge
repnz
pop
push
int3
cmp
cmp
lock
add
iret
and
sub
loope
sub
(bad)
dec
jmp
pop
mov
xor
daa
into
pop
mov
stc
adc
fdiv
or
mov
lahf
imul
out
popa
ins
cmps
jmp
and
add
scas
ret
xor
test
mov
and
push
rcl
mov
mov
imul
arpl
sbb
mov
inc
or
fxch
and
in
xor
pusha
loop
test
push
mov
push
iret
add
mov
addr16
mov
test
push
fcom
add
cli
mov
sahf
mov
je
adc
xchg
add
mov
mov
(bad)
xlat
cmp
jle
jp
or
jae
jle
fsubr
adc
fild
ret
fsub
in
iret
(bad)
pop
cmp
loopne
push
cmp
fisttp
jmp
pushf
mov
dec
sub
mov
sub
mov
inc
in
(bad)
loope
mov
adc
(bad)
dec
jmp
outs
retf
adc
mov
test
or
retf
or
inc
jmp
outs
mov
test
fnstsw
aam
adc
jecxz
or
pushf
iret
pusha
pop
jne
mov
(bad)
dec
repz
and
push
pushf
push
repz
inc
xor
mov
inc
jno
push
mov
inc
stos
dec
bnd
jne
mov
sbb
test
and
cmc
in
xor
(bad)
jbe
test
test
call
push
int3
loopne
call
adc
lahf
hlt
call
scas
mov
mov
push
xlat
or
(bad)
jg
cmp
es
fs
sti
sbb
retf
jecxz
pushf
push
aas
dec
shl
add
adc
scas
mov
cmp
mov
cmc
stos
ins
aas
adc
and
scas
mov
mov
push
xlat
or
(bad)
jg
cmp
es
fs
sti
sbb
retf
jecxz
sbb
aas
dec
ror
ja
push
aad
jmp
jb
xor
ins
mov
in
push
rol
int
icebp
mov
jmp
and
push
cmp
jge
mov
mov
into
fiadd
xor
and
jle
arpl
dec
push
pop
or
fwait
or
movs
jnp
out
sub
mov
or
pushf
dec
ss
test
iret
add
out
mov
adc
pop
addr16
xchg
mov
pushf
bound
sbb
imul
mov
or
test
jecxz
out
rcl
cmc
jp
pop
push
push
fidiv
and
fiadd
sbb
jmp
rol
mov
cmps
cmp
inc
sub
xor
stos
das
adc
cs
rol
jecxz
in
out
inc
ins
push
aam
(bad)
(bad)
retf
daa
xor
dec
in
cmc
push
jno
test
loopne
pusha
outs
sub
push
mul
out
inc
outs
jmp
popf
cld
sbb
(bad)
ds
or
sub
sbb
out
mov
adc
rcl
in
arpl
inc
xchg
dec
cmps
cmps
pop
lock
icebp
mov
pop
mov
jne
aas
jecxz
cld
sub
lahf
pop
in
lds
jmp
mov
mov
popa
sbb
jne
ret
push
int
adc
clc
adc
pushf
cmp
pop
std
test
xor
cmps
mov
mov
xor
ror
inc
jnp
add
mov
stc
xor
sbb
sbb
sbb
cs
push
pop
adc
div
mov
cmps
retf
fs
pop
movs
cmc
dec
add
test
shl
add
stc
pop
scas
fld
and
popf
mov
sub
out
adc
or
iret
fs
dec
mov
or
xchg
sbb
icebp
sub
push
add
(bad)
pushf
(bad)
das
mov
lea
mov
repz
dec
imul
out
mov
iret
push
ins
popf
or
lock
iret
dec
retf
cld
(bad)
push
fidiv
adc
mov
test
dec
out
loop
ret
mov
dec
inc
jb
(bad)
adc
rcr
cmps
inc
ret
adc
mov
stc
push
shl
loopne
cmp
mov
retf
xor
cmp
in
jmp
(bad)
shl
stos
mov
mov
xchg
jmp
mov
ss
inc
mov
cmps
push
sbb
sub
sub
js
sub
outs
jae
xlat
push
pop
ret
dec
aaa
pushf
js
test
jae
and
xchg
pushf
and
xchg
std
fisttp
mov
int3
inc
mov
out
mov
shl
push
popf
mov
jae
push
inc
inc
jb
inc
rcr
jnp
pop
std
and
cs
dec
or
shr
mov
sbb
adc
xor
adc
sti
cmc
outs
sub
inc
aas
ss
cmc
mov
pop
mov
std
leave
into
cmp
sub
aaa
sub
mov
fnstcw
adc
mov
cmp
sbb
call
pop
aad
(bad)
fild
xor
int
cmp
adc
loopne
cmp
mov
retf
mov
ins
adc
push
sahf
loopne
out
idiv
inc
ja
leave
adc
adc
sub
inc
push
sub
inc
(bad)
cmp
(bad)
sub
imul
dec
inc
idiv
dec
inc
jecxz
inc
pop
icebp
xor
out
push
es
xor
shr
dec
and
push
shl
jle
jmp
push
pop
mov
retf
xchg
push
mov
sub
icebp
test
add
clc
adc
stos
sbb
inc
pop
lods
xchg
sahf
adc
fidivr
and
pop
pop
or
ins
fidivr
pop
not
xchg
jno
dec
xor
lods
xor
clc
inc
sub
lock
jl
dec
fnstcw
mov
sbb
push
mov
repnz
(bad)
scas
(bad)
and
aas
cmp
leave
dec
test
pop
or
aad
mov
mov
adc
xchg
jb
test
adc
push
xor
dec
xchg
icebp
adc
add
mov
fwait
aad
(bad)
cmp
outs
sbb
push
aaa
fnstcw
sbb
in
test
retf
ret
xor
imul
fistp
cmps
cdq
xor
add
sbb
xchg
fs
dec
in
mov
jp
clc
cmp
test
jne
pushf
cdq
ins
push
lock
rcl
pop
std
pop
pop
dec
push
adc
pop
jmp
retf
jmp
mov
push
loop
push
add
and
jno
jno
add
fnstenv
ret
sbb
push
retf
mov
mov
test
aas
fdivr
sar
push
push
loopne
sar
aad
test
push
shl
push
or
hlt
mov
mov
les
aam
mov
in
daa
xlat
out
ret
cmps
pusha
jmp
in
test
js
dec
jne
clc
(bad)
pop
inc
xor
leave
sub
jns
cs
mov
mov
inc
xchg
jns
sub
fdiv
add
mov
(bad)
out
xlat
cmp
mov
cmp
std
jns
adc
inc
loope
cmp
dec
fdiv
adc
fs
outs
dec
add
xor
aaa
inc
push
pop
sub
sar
nop
arpl
test
mov
xchg
pop
and
adc
popa
pop
cwde
mov
shl
(bad)
jle
jnp
jo
jbe
fistp
sar
push
cld
hlt
int
mov
addr16
xchg
fs
jns
inc
xor
adc
inc
mov
repz
jae
fld1
(bad)
push
adc
imul
test
push
xchg
mov
sbb
add
add
sar
add
pushf
push
dec
inc
or
inc
add
mov
mov
stos
xchg
fld
or
add
icebp
pop
popf
dec
xchg
fs
or
xor
pop
dec
rol
sbb
push
and
imul
leave
aaa
mov
mov
sar
mov
fmul
xchg
fs
or
xor
pop
ins
rol
les
nop
xor
ins
das
jmp
pop
push
mov
add
sub
xchg
(bad)
jle
mov
xor
movs
icebp
enter
and
cmp
xchg
setae
rcr
sub
pop
xchg
sbb
into
or
inc
stos
in
das
sub
sahf
(bad)
jge
mov
jo
jne
data16
movs
enter
jae
add
and
jmp
ret
(bad)
stc
push
fidiv
sub
std
inc
sbb
pop
push
mov
aaa
data16
fcomp
xor
test
pop
inc
aam
popf
and
aam
mov
jo
cmps
push
inc
addr16
sub
fcomp
ds
and
cmp
push
loopne
jno
mov
xchg
xchg
jmp
inc
mov
mov
rol
xor
push
mov
sub
scas
aaa
and
and
mov
and
jp
test
rcl
mov
xchg
dec
fadd
nop
mov
mov
popf
cmps
dec
add
loopne
pop
dec
jo
fcomip
pop
scas
aaa
push
scas
jno
in
mov
lahf
inc
stos
mul
sti
retf
push
inc
mov
pushf
xor
sub
cld
lods
adc
dec
ja
pusha
push
outs
test
clc
or
jmp
ins
data16
fisub
lea
sub
jne
or
or
hlt
imul
enter
jl
test
out
cmp
je
inc
mov
mov
inc
push
jmp
test
xor
mul
cmp
cmps
ja
and
sbb
(bad)
out
adc
repz
push
retf
in
push
mov
mov
jbe
jae
int3
sub
scas
sbb
sub
or
xlat
xchg
xor
mov
mov
ja
aas
sbb
and
adc
int3
sbb
mov
(bad)
push
pop
dec
inc
sbb
lea
sbb
(bad)
fnstenv
dec
jo
cmp
cwde
or
cwde
xor
loopne
add
cmp
adc
push
xchg
mov
rcl
rcpps
sub
imul
ss
and
mov
and
dec
adc
into
dec
in
cdq
iret
push
dec
retf
adc
inc
out
inc
mov
fst
and
dec
sub
test
nop
jno
pop
lock
cmp
(bad)
sbb
lock
les
push
dec
pop
inc
outs
movs
icebp
jmp
push
scas
fcom
xchg
cmp
fld
mov
jmp
out
xor
fst
retf
push
fs
mov
adc
adc
lea
dec
xlat
in
push
mov
or
push
mov
stc
fst
stc
fst
stc
fst
stc
fst
stc
fst
stc
fst
stc
fst
stc
fst
repnz
cmp
xchg
imul
lods
adc
mov
jge
mov
mov
jbe
hlt
xor
and
fcomp
call
jmp
fst
jb
lahf
jb
pop
ins
cmp
jb
sbb
test
xchg
mov
cmp
neg
dec
push
xchg
cmp
out
dec
inc
imul
dec
dec
in
dec
dec
loop
dec
dec
jmp
pop
repz
ins
inc
out
pop
xor
mov
loope
pop
add
or
mov
pusha
push
mov
in
mov
je
mov
jmp
lahf
fwait
(bad)
std
imul
out
hlt
jnp
adc
mov
dec
sub
dec
rcl
and
jnp
and
pop
fidivr
jle
out
rcr
adc
xor
dec
ret
idiv
sub
cwde
and
movs
nop
ss
movs
imul
daa
movs
xchg
sar
mov
cmp
inc
cmps
neg
push
cmc
inc
aaa
push
dec
loopne
mov
clc
mov
es
adc
pop
sub
or
enter
inc
(bad)
sub
jae
in
sbb
mov
lock
add
in
into
movs
rol
rol
cli
test
xchg
xor
mov
loope
or
(bad)
push
xor
ret
popf
pop
xor
sbb
sub
lds
xchg
imul
push
cli
(bad)
cs
jge
cwde
test
inc
fdivr
dec
sub
aad
inc
ret
stos
inc
call
loop
xchg
shr
rcl
jmp
mov
mov
or
shl
jle
pop
cmp
fwait
in
sub
mov
fbld
jb
push
cmp
mov
stos
cld
jg
ins
push
pop
retf
popf
and
ret
jmp
push
movs
pop
push
repnz
and
xchg
xchg
xlat
mov
push
mov
not
out
je
pop
jg
ficom
push
sbb
call
mov
or
das
hlt
inc
push
scas
ficom
cmp
popa
push
loop
and
dec
fwait
js
ret
cmp
aaa
cli
imul
fldl2t
add
mov
adc
lock
xlat
std
nop
inc
xor
mov
push
cmps
lea
lahf
mov
fisub
test
pop
lds
ja
test
adc
cmp
cmp
push
shr
lea
add
dec
pushf
sub
(bad)
movs
rol
or
frstor
fsubr
(bad)
sub
mov
or
mov
mov
fstp
sub
test
fsubr
(bad)
sub
mov
or
frstor
fsubr
(bad)
sub
mov
or
data16
(bad)
jmp
sub
xchg
xor
mov
adc
cli
push
jmp
sub
push
and
xor
xchg
int3
jmp
mov
(bad)
hlt
int3
cmp
xchg
sbb
mov
cmp
xchg
mov
pop
xor
sub
xchg
sbb
mov
cmp
xchg
push
xchg
jno
cs
sar
or
mov
cs
outs
sbb
hlt
(bad)
jne
add
or
fldcw
pop
and
arpl
push
push
sub
or
punpckhdq
xchg
lea
push
es
sahf
ss
pop
inc
xchg
cmp
sahf
arpl
jl
pop
jno
(bad)
(bad)
pop
push
imul
pop
jp
sub
sub
sub
inc
scas
or
leave
sub
loop
xor
xor
xor
add
or
ins
mov
xchg
push
in
pop
inc
stc
add
ins
pop
or
fsub
push
sbb
mov
xchg
sub
call
xchg
jg
push
ss
(bad)
sbb
sbb
pop
ret
xchg
and
jno
inc
aam
fadd
out
inc
std
retf
loope
dec
ror
adc
fsubr
mov
xor
sub
adc
out
xchg
pop
shr
scas
lea
sub
(bad)
adc
jge
xchg
mov
into
fist
mov
mov
sub
shl
in
xchg
imul
and
jle
pusha
ss
cdq
sub
mov
mov
repnz
or
inc
mov
or
jmp
xor
mov
dec
or
pop
sub
jl
fbld
sbb
in
mov
js
ss
lds
pop
test
cmc
js
pop
cmc
cs
icebp
push
mov
push
test
xchg
push
mov
pushf
fs
sti
xlat
sub
add
movs
lock
dec
scas
sbb
movs
jne
mov
loope
stos
rcr
adc
or
sub
jnp
mov
push
pop
sahf
fnstsw
ss
xor
inc
inc
sub
imul
leave
(bad)
pop
lods
sar
aas
xchg
test
lods
inc
or
jb
bound
out
fmul
dec
ins
jg
sub
push
pop
inc
push
cmp
push
(bad)
cmp
(bad)
sub
imul
dec
inc
idiv
dec
inc
out
cmp
(bad)
xor
in
push
push
loope
push
push
jecxz
dec
rol
jl
out
cmp
pop
movs
sub
jge
inc
pop
push
popa
sbb
mov
iret
pusha
sbb
jecxz
mov
add
test
lahf
ds
adc
pop
jmp
fnstsw
daa
sahf
sti
test
mov
loopne
aad
adc
lods
imul
int
aam
icebp
cmp
jb
mov
lea
(bad)
xor
adc
test
gs
call
xchg
jbe
sub
fnsave
xor
fadd
adc
dec
cmp
stos
xor
sbb
not
cmp
pop
add
xchg
adc
imul
int
frstor
dec
clc
pop
jo
add
stos
sub
push
pushf
sbb
fcmovbe
cmc
pop
mov
sti
push
inc
xchg
push
push
sub
loope
pop
movs
stos
inc
and
add
ja
mov
push
and
test
(bad)
rcr
fsubr
push
xchg
push
test
xchg
push
je
mov
es
repnz
jle
loop
push
inc
out
and
pop
stc
hlt
lds
mov
fistp
xor
es
fs
mov
and
outs
push
hlt
or
gs
lock
mov
xlat
test
mov
mov
pushf
stc
jbe
push
lahf
mov
mov
xor
scas
and
or
pushf
popf
fcom
jbe
aad
(bad)
mov
dec
idiv
push
inc
dec
lock
pop
test
mov
xor
icebp
fs
cs
(bad)
xor
and
jle
inc
stos
pop
sub
adc
jp
or
hlt
lods
jl
cmc
mov
inc
or
neg
gs
stc
dec
rol
loop
jl
jbe
pop
or
(bad)
pop
add
fwait
(bad)
inc
push
or
jp
ins
jle
sub
or
jecxz
test
sub
push
mov
repnz
xchg
repnz
repnz
repnz
repnz
repnz
shl
pop
aam
sbb
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
mov
mov
pop
xchg
mov
pop
mov
imul
mov
jmp
(bad)
xor
sub
push
lock
add
mov
or
mov
push
push
mov
aas
push
ret
ins
jno
mov
cmp
aam
out
sub
push
out
sub
jo
or
jo
or
xor
pop
rcl
jp
and
lea
(bad)
in
outs
jge
inc
mov
mov
jg
fwait
or
iret
xchg
(bad)
in
dec
pop
push
and
mov
push
(bad)
pop
adc
sub
pop
sub
sub
rcl
lods
je
in
dec
cmp
adc
rol
and
cld
out
cs
jg
in
iret
call
or
pusha
mov
and
and
xchg
ins
dec
or
enter
pop
mov
add
and
clc
hlt
dec
jl
jns
sub
add
pop
cmp
inc
add
pusha
call
sar
xor
sbb
mov
fimul
sub
mov
addr16
dec
mov
mov
add
adc
(bad)
clc
cmp
sub
imul
mov
pop
inc
xor
and
es
movs
push
xchg
(bad)
out
scas
hlt
mov
ret
das
clc
outs
and
pop
nop
mov
add
cmp
dec
pop
fdiv
cmp
repnz
je
xchg
stos
aas
pop
cmps
dec
xor
loopne
adc
dec
push
push
sub
inc
(bad)
jns
push
(bad)
cmp
out
dec
inc
imul
dec
push
loop
push
push
out
push
pop
in
push
es
ffree
jmp
test
xchg
sub
outs
inc
pop
push
mov
cld
daa
loopne
mov
sbb
jns
and
add
pushf
jnp
dec
pop
rcl
stc
inc
mov
jo
fwait
in
cs
out
lock
adc
xchg
jns
rol
push
jo
dec
or
push
push
and
and
scas
aam
mov
fs
(bad)
cmp
enter
out
or
(bad)
dec
sbb
jmp
ss
push
jne
call
mov
loop
lock
lea
shl
push
imul
iret
inc
xor
out
retf
ror
jb
xchg
sbb
xor
push
jle
pusha
in
aas
xor
add
retf
sub
int
and
dec
inc
scas
mov
dec
pushf
jecxz
jo
sub
test
(bad)
in
retf
ror
jo
mov
pop
mov
pop
ja
fstp
xlat
cmc
inc
mov
rol
mov
mov
mov
push
pop
jmp
shl
xor
(bad)
loope
ja
xchg
in
loopne
or
sbb
and
and
mov
dec
sub
idiv
adc
pop
mov
jb
popf
add
aad
retf
push
cmp
lods
jns
shl
gs
fisubr
sub
or
mov
iret
add
xor
mov
xor
js
(bad)
jno
pop
dec
call
xchg
cmps
inc
push
std
ror
xor
jge
pop
fild
jecxz
fsubr
and
and
push
fcom
jl
in
test
nop
mov
lock
and
or
cmp
test
rcr
dec
shl
or
sbb
sbb
das
and
xchg
js
mov
jno
sahf
arpl
mov
pop
pop
daa
test
sbb
sahf
das
jmp
mov
jne
(bad)
mov
jecxz
call
lods
cs
sbb
xchg
mov
enter
inc
aad
fadd
mov
cs
movs
ins
ins
popa
jo
xor
fistp
popa
push
ins
ret
leave
xor
cmp
or
(bad)
mov
jge
movs
xlat
aam
dec
retf
mov
inc
scas
mov
lods
or
scas
mov
sbb
(bad)
xor
pop
cs
leave
jp
dec
ror
push
out
out
push
xchg
pop
fsubr
xchg
into
(bad)
jmp
rcl
pop
inc
sub
enter
or
mov
pusha
std
mov
jne
repnz
push
cmps
add
jmp
sbb
data16
push
aas
mov
mov
fxch
mov
(bad)
xchg
add
stos
iret
jmp
or
pop
sbb
cwde
popa
cmp
je
push
cmp
paddsw
test
push
arpl
pop
cmps
pushf
cmp
dec
into
sbb
das
sub
test
inc
mov
inc
rcl
or
call
ror
stos
sahf
inc
push
pop
(bad)
outs
fisub
out
lea
mov
sub
cmp
jle
pop
mov
cmp
imul
add
adc
mov
hlt
jmp
int
imul
xchg
(bad)
repz
mov
mov
sub
inc
xor
les
add
pop
out
xchg
jg
inc
cmps
popa
fwait
add
fsubr
cmp
mov
es
shr
or
(bad)
aam
scas
fldl2t
and
std
(bad)
mov
gs
push
sbb
sbb
sbb
mov
mov
push
(bad)
jnp
rcl
test
sar
and
add
movs
xor
cld
adc
push
lods
mov
les
dec
fadd
sub
mov
inc
shr
cmc
sbb
call
fs
aaa
jb
and
cmp
and
sub
fist
ret
jb
test
call
xlat
sbb
sub
fcomp
jmp
xchg
mov
retf
dec
out
xor
fst
xor
sti
pop
shl
jl
or
mov
adc
mov
cmc
dec
imul
push
pop
lock
(bad)
shl
pop
sti
ins
iret
retf
fisub
daa
repz
jo
mov
jge
jp
call
lock
or
lahf
dec
xchg
adc
or
sub
imul
fcmove
shl
aad
or
retf
retf
adc
(bad)
cld
(bad)
mov
pop
push
test
add
shl
int3
js
sub
sub
pop
adc
xor
push
mov
(bad)
es
sub
sub
mov
sub
cmp
jge
outs
mov
cmp
sub
add
and
dec
pop
xor
dec
add
pop
sbb
and
std
stc
sub
lods
lock
ja
nop
imul
fidiv
pusha
xchg
jl
data16
mov
iret
scas
push
fs
out
or
loopne
test
rcl
or
jb
scas
or
sbb
push
push
cli
pop
xchg
xor
sahf
rdmsr
mov
nop
ins
nop
adc
sub
dec
mov
icebp
push
jo
or
sti
and
aad
fcomi
ret
adc
xchg
(bad)
pop
and
cmp
aad
xor
je
mov
cmp
push
emms
outs
fnstcw
mov
cmc
adc
mov
pop
fcom
neg
or
pop
ja
rol
mov
xchg
test
fstp
push
pop
vmwrite
ins
es
xchg
xor
stc
mov
and
dec
shl
dec
push
xchg
stc
fcomi
inc
in
pop
rcr
inc
pop
sbb
cmps
push
dec
or
pop
rcl
or
js
stos
sbb
int3
sub
xchg
inc
adc
push
cmp
sub
dec
adc
shl
jge
sbb
sbb
scas
mov
push
out
and
enter
hlt
cs
(bad)
jns
sub
(bad)
ror
es
xor
dec
dec
inc
push
mov
lods
out
repnz
sti
sbb
test
pusha
(bad)
sbb
(bad)
imul
add
fscale
adc
std
loopne
cdq
mov
inc
inc
clc
in
push
neg
dec
popa
pop
sub
xchg
clc
sub
icebp
aaa
push
ins
les
imul
add
jns
adc
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
push
inc
mov
std
pop
pop
sub
jbe
dec
inc
(bad)
or
cmp
inc
mov
dec
push
idiv
pop
push
out
pop
push
imul
sbb
jo
test
pop
jo
cmp
inc
cmp
(bad)
sub
imul
pop
add
sub
jg
fldcw
jmp
pop
popa
test
inc
imul
push
push
mul
pop
push
push
test
add
pop
push
and
pop
push
imul
or
inc
div
test
xor
push
push
and
mov
lods
adc
test
idiv
sbb
inc
(bad)
rcr
test
test
dec
adc
inc
mov
(bad)
push
rol
ins
pop
push
push
test
push
and
inc
stos
dec
cdq
pop
es
sbb
dec
pop
pop
rcr
test
xchg
push
out
cli
mov
jg
iret
retf
dec
ins
fdiv
pop
es
push
es
and
js
(bad)
ins
xchg
sahf
sub
adc
xchg
sbb
push
nop
sub
pop
push
sub
test
add
fs
lods
(bad)
sbb
movs
and
movs
pushf
cmp
sbb
add
jmp
(bad)
pop
pop
sbb
iret
das
xchg
cdq
sub
clc
push
pop
and
test
test
out
mov
pop
mov
push
sbb
in
jne
dec
sbb
icebp
jnp
sub
je
mov
mov
push
fwait
mov
mov
mov
add
ret
dec
in
adc
scas
xchg
jo
retf
xor
retf
cmp
bound
inc
adc
push
jecxz
add
cmp
xchg
out
(bad)
imul
jno
mov
xor
pop
pop
int
push
lods
xchg
in
add
std
(bad)
pop
retfw
or
sub
ds
mov
inc
mov
retw
mov
xchg
dec
xchg
mov
rcl
add
fwait
stos
repz
(bad)
jp
icebp
or
inc
pop
xor
lahf
sub
pop
mov
mov
or
cmps
push
xchg
inc
cmp
sti
(bad)
push
cmp
or
ja
mov
or
add
stos
cmp
imul
jmp
pusha
je
(bad)
mov
movlps
fnstcw
(bad)
push
pusha
xchg
(bad)
inc
cmp
ds
and
pop
pop
mov
xor
fisttp
test
lahf
jbe
shl
call
sub
retf
push
mov
out
push
pusha
neg
push
sti
mov
ret
pop
int3
cmp
arpl
mov
mov
test
(bad)
sbb
push
fnstenv
fwait
and
inc
std
push
or
push
adc
adc
int
inc
repz
fnstcw
jmp
lods
test
add
push
ins
data16
and
les
sub
sub
or
jl
out
xor
cmp
push
hlt
test
into
jb
test
mov
and
add
or
sub
je
sub
(bad)
enter
inc
xchg
sub
call
in
retf
sub
mov
sahf
or
test
aad
fiadd
hlt
mov
ror
push
cwde
out
jo
jge
xor
mov
jnp
pop
sub
cmp
das
xor
sub
mov
xor
(bad)
jmp
pusha
or
sbb
(bad)
lahf
mov
icebp
and
idiv
into
sub
jecxz
dec
gs
test
xor
push
add
idiv
imul
out
scas
popf
stos
mov
or
xchg
mov
push
cmps
icebp
mov
pop
pop
rcl
dec
daa
mov
cmps
stc
clc
cmp
sbb
repz
and
sub
push
mov
sbb
push
(bad)
sub
(bad)
sub
imul
adc
sub
cmp
xchg
pop
bound
pop
rol
lea
out
push
test
out
cld
xchg
ret
sub
in
mov
int3
arpl
cmp
ins
(bad)
and
jl
xor
push
push
inc
popa
lds
jno
fbld
push
sub
push
or
jae
cmps
mov
js
dec
cmp
retf
pop
lgs
fadd
ja
mov
leave
in
sbb
test
xlat
xchg
jb
push
in
mov
xchg
adc
hlt
dec
std
dec
div
and
xchg
xchg
mov
jl
ret
(bad)
out
adc
sti
in
mov
imul
sti
xchg
aad
sti
sbb
call
fdivp
fist
or
xor
scas
test
jae
xor
clc
mov
loope
movs
es
loope
enter
cmc
jno
pop
cdq
iret
ffreep
or
mov
push
jle
or
or
movhps
pop
xchg
in
inc
push
pop
jle
jbe
fst
pop
jge
mov
stos
xchg
(bad)
fdivr
jmp
xor
in
ror
sbb
ror
stos
out
push
inc
xchg
cmps
(bad)
inc
pusha
movs
adc
loop
inc
in
pop
sub
jl
fimul
(bad)
out
icebp
sti
addr16
inc
icebp
mov
jmp
mov
das
mov
js
sbb
leave
lahf
add
aaa
popf
popf
dec
outs
add
jb
in
adc
aad
shl
xor
xlat
mov
icebp
stos
or
movs
xor
fisub
pop
inc
fbld
or
inc
mov
lea
cmc
out
push
call
ds
sub
xchg
mov
mov
jo
pop
jg
or
push
fld
div
addr16
and
jl
imul
push
push
std
jg
jns
mov
mov
in
cmp
icebp
cdq
test
jmp
jp
or
push
pop
nop
aas
sbb
les
xchg
(bad)
mov
jmp
xchg
jne
out
dec
lea
ins
outs
cmp
push
scas
imul
je
cmp
mov
jo
dec
call
scas
hlt
sub
cmovs
push
jmp
dec
lock
push
jmp
ds
or
test
repnz
ja
rcl
inc
jmp
xchg
mov
push
lds
dec
fstp
xor
xlat
dec
dec
jo
bound
dec
mov
dec
sar
leave
xchg
ins
xor
sbb
jo
pop
cmp
sub
xchg
inc
jmp
into
and
inc
push
lods
xchg
in
clc
inc
mov
mov
ror
call
mov
or
mov
add
push
sahf
mov
ja
das
fwait
xchg
add
mov
mov
xchg
fidivr
int
test
pusha
jle
fwait
outs
jle
imul
sti
xchg
cwde
aad
icebp
stos
sbb
inc
and
imul
call
fistp
int3
les
add
xchg
imul
mov
ffree
lahf
push
xchg
ror
lods
sub
ficom
add
pop
jp
xor
retf
push
jg
jecxz
and
mov
push
cmp
push
nop
pop
dec
mov
add
imul
lods
add
adc
push
add
push
lds
or
int
inc
or
ficom
xor
inc
sahf
test
sti
mov
ins
mov
push
cmp
push
(bad)
leave
test
mov
ret
fld
or
enter
ss
add
pop
and
sahf
mov
shr
imul
sahf
mov
inc
push
and
ds
xchg
cmps
gs
outs
test
mov
add
push
ret
pusha
fmulp
xchg
dec
jbe
mov
inc
in
mov
push
push
std
jo
cmps
into
add
jl
pop
push
mov
in
and
pmovmskb
idiv
sub
stc
mov
fadd
pop
jo
cmp
xor
or
cmps
sub
(bad)
sub
imul
dec
arpl
cmp
xlat
jge
adc
aas
dec
inc
out
inc
pop
into
xor
jmp
push
repnz
rcr
inc
(bad)
mov
sub
mov
adc
gs
dec
(bad)
jp
cmp
mov
pop
daa
xor
repz
jg
jmp
xchg
sub
clc
outs
in
mov
jmp
and
mov
lods
add
not
mov
arpl
fnstenv
jecxz
shr
add
stos
pop
js
fst
xor
mov
cmp
xor
in
mov
sbb
cld
push
daa
mov
je
shl
clc
ins
xchg
dec
shl
aaa
or
jle
jo
fldenv
xor
inc
xchg
imul
sub
sub
test
add
xor
mov
adc
js
mov
pop
add
ds
push
or
mov
add
cmps
push
lock
pusha
pop
aam
loop
out
(bad)
(bad)
add
sar
jecxz
clc
cmp
in
inc
sub
cmp
dec
call
inc
pop
jmp
inc
ds
adc
sub
mov
rcr
pop
dec
sub
int3
cs
or
aam
pop
je
ins
les
add
repz
in
sar
into
adc
sbb
jmp
ins
mov
ss
push
and
aad
xchg
or
enter
sub
loopne
pop
loope
cdq
(bad)
out
lods
mov
and
(bad)
out
data16
cli
inc
pop
scas
push
rcl
scas
retf
push
adc
bnd
clc
mov
(bad)
cdq
movs
daa
xor
fdivp
sbb
and
mov
stos
fs
cli
lods
into
int
stc
call
popf
test
and
sub
jecxz
xor
mov
cli
ret
or
adc
xchg
and
and
push
outs
push
dec
pop
movs
lahf
and
mov
lock
jg
adc
xor
dec
retf
push
mov
lods
cwde
mov
ins
jle
fs
retf
adc
mov
arpl
sub
mov
arpl
add
ror
jb
push
loope
in
and
sti
(bad)
loopne
sub
jp
push
loope
sti
popa
sbb
mov
or
cmp
loop
cmp
or
dec
pop
ret
out
sbb
shl
adc
add
mov
and
pusha
inc
or
call
inc
loope
pop
fiadd
lods
rcl
data16
pop
push
jmp
jmp
xchg
retf
scas
xor
sbb
dec
xchg
jmp
cmp
pop
ret
inc
sub
cli
or
jb
inc
test
dec
lods
inc
pop
xchg
dec
sub
pushf
cmps
or
shr
cmp
dec
jnp
movs
clc
cmp
pop
pop
into
mov
lods
div
aad
sub
jne
jnp
std
adc
inc
jo
mov
mov
cmps
xor
lock
jg
aas
mov
inc
pop
xchg
jp
xchg
in
jns
test
iret
sub
ret
clc
push
loop
pop
test
jnp
rol
cld
xor
jp
jecxz
clc
mov
xchg
arpl
test
and
aad
lock
jecxz
mov
inc
mov
adc
pop
push
push
cmp
rol
and
mov
cmp
arpl
pop
adc
jecxz
stos
cli
xor
int3
call
lea
inc
lods
sbb
movs
lahf
je
ror
loope
jge
push
scas
cwde
sub
inc
adc
lahf
shl
arpl
jnp
das
push
or
cmp
aaa
jne
xor
mov
cmc
idiv
sbb
pop
aas
sbb
adc
movs
pop
pop
int3
cmp
xchg
daa
mov
pop
jecxz
sbb
test
adc
test
push
les
jno
fnstcw
and
pop
and
leave
pop
int3
or
push
xor
inc
retf
or
mov
pop
mov
inc
sbb
mov
pop
dec
mov
jmp
hlt
xor
rcl
mov
(bad)
jnp
add
rcr
lahf
fisubr
cmc
or
pop
sub
jns
mov
pop
fdiv
aas
add
call
popf
jge
jge
fst
aas
jmp
mov
cmps
movnti
fwait
sbb
shr
adc
dec
test
mov
bound
cmc
push
mov
shl
push
push
push
pop
sbb
outs
dec
add
fnstsw
ins
lods
inc
push
cli
xchg
dec
jbe
or
mov
sbb
fwait
dec
inc
les
mov
inc
xchg
in
jmp
sti
arpl
mov
ret
xchg
out
sbb
fwait
mov
rcr
aas
mov
sub
or
aad
mov
xchg
push
stc
enter
cdq
and
aaa
nop
inc
push
sahf
cli
inc
dec
add
enter
add
pop
or
mov
retf
xchg
loopne
cmp
lods
or
mov
dec
jp
jl
add
push
mov
mov
inc
(bad)
mov
mov
push
add
mov
mov
mov
in
out
out
out
push
aam
push
fisttp
es
push
or
imul
ficom
mov
pusha
push
adc
scas
xor
sub
stos
shl
pushf
fs
ds
xor
sub
js
sbb
jns
mov
sbb
dec
div
fwait
fs
mov
jno
xchg
lea
xchg
sub
pop
adc
jo
mov
fldenv
stc
and
mov
push
loop
add
je
pop
ins
cli
cli
and
lea
(bad)
pusha
dec
fmul
test
jg
mov
inc
retf
retf
cmp
mov
ins
pop
scas
push
adc
and
leave
repz
xchg
(bad)
xchg
std
iret
test
imul
xchg
in
in
cli
push
ins
out
scas
push
pop
jnp
repnz
push
out
cs
es
push
loope
pop
aad
stos
(bad)
loop
fimul
push
popf
sbb
push
movs
out
adc
enter
mov
ins
add
mov
push
mov
dec
jo
sub
cmp
(bad)
cmp
(bad)
cmp
ror
dec
mov
inc
pop
push
jns
jmp
and
call
sbb
ffree
fldenv
mov
in
or
push
xchg
lahf
cmp
cld
(bad)
loopne
fild
in
cmps
daa
nop
outs
adc
retf
xchg
mov
inc
test
mov
xor
fdivr
dec
jb
(bad)
ins
sub
mov
cmp
pop
js
les
mov
adc
add
dec
fld
out
jne
out
pop
push
leave
xor
add
cli
cmp
inc
jnp
xchg
ja
stc
jmp
inc
push
push
add
mov
std
add
shl
lds
xlat
jno
bound
mov
retf
xchg
sub
ss
mov
mov
nop
js
in
iret
inc
outs
push
ss
xor
pop
clc
clc
push
mov
cdq
inc
ficom
(bad)
outs
dec
inc
push
pop
inc
inc
sub
mov
shl
mov
pop
cdq
xchg
cmp
mov
push
add
js
sbb
vpxor
popf
in
(bad)
xchg
fcmovu
xor
or
lea
lds
mov
aad
add
inc
xchg
xlat
mov
or
out
imul
popf
lock
not
add
push
push
pop
sub
into
fucomp
push
xchg
not
pop
sub
test
and
mov
or
sahf
jp
je
mov
cwde
(bad)
mov
jmp
ret
jae
pop
push
enter
test
dec
mov
mov
nop
arpl
jne
cmp
mov
pop
imul
ss
(bad)
lock
jl
stos
mov
stc
inc
mov
sti
movs
(bad)
push
je
fwait
(bad)
(bad)
cs
cli
mov
div
and
mov
pop
xor
ret
adc
in
lahf
inc
xchg
push
sub
xchg
cmp
mov
pop
sahf
enter
out
push
sub
cmp
xchg
ret
inc
icebp
dec
jp
fcom
fadd
mov
mov
inc
jo
iret
inc
and
das
ror
cld
jb
push
cmp
pop
(bad)
adc
das
iret
sbb
or
or
pop
inc
mov
lea
cli
stos
cmp
in
fcom
cmp
outs
sub
call
jo
pusha
xchg
mov
adc
xchg
cmp
inc
mov
out
cli
(bad)
int3
xchg
lea
in
mov
xchg
mov
mov
xchg
sub
push
jns
cmp
out
shr
push
(bad)
xchg
clc
sub
pushf
mov
pop
outs
mov
add
inc
pop
mov
ins
add
loopne
add
mov
push
and
inc
les
aam
outs
cli
or
push
mov
and
fcom
lods
sbb
pop
not
xor
mov
stc
sar
dec
fwait
pushf
add
out
mov
mov
cmp
dec
add
push
cmp
xrelease
or
jae
dec
fistp
out
pop
sbb
das
loope
xchg
adc
shl
loopne
jmp
push
popa
xchg
add
retf
mov
es
xor
loop
repz
pop
xchg
or
loop
mov
test
jnp
das
iret
cmps
and
xchg
stc
push
movs
adc
xor
mov
pushf
pop
dec
jno
xor
mov
aas
xchg
inc
in
sub
jne
push
repnz
push
mov
mov
or
push
sti
aaa
std
mov
jbe
cli
test
icebp
mov
add
adc
cmp
jg
xchg
fs
(bad)
iret
test
shl
or
arpl
jne
ret
push
fs
bound
jmp
xchg
jge
cld
cli
and
enter
shl
and
icebp
retf
(bad)
cmp
cmp
xor
shl
sub
sub
adc
add
int3
inc
xchg
inc
inc
xchg
gs
jle
fild
fnstcw
or
(bad)
jge
and
and
mov
rcl
stc
mov
jns
in
xchg
cmp
jp
cmp
inc
jmp
outs
nop
jno
xchg
mov
mov
cmp
pop
in
sub
sub
mov
xchg
inc
mov
call
aam
retf
push
push
outs
mov
out
lods
popa
imul
mov
les
xor
movs
pop
pop
stos
jae
jno
(bad)
adc
cmp
add
fstp
xchg
rdmsr
rol
jno
ret
mov
mov
sbb
loopne
pop
arpl
imul
mov
pushf
fld
add
mov
lahf
lods
rcr
xlat
mov
and
dec
pop
and
jns
sahf
or
push
dec
and
mov
test
std
add
shr
shl
add
inc
in
aam
(bad)
in
mov
(bad)
adc
scas
push
inc
sub
inc
out
sub
out
xor
sahf
inc
xchg
ds
test
(bad)
(bad)
jge
adc
mov
push
popf
repnz
jp
loope
call
xor
push
xor
ins
jne
xor
dec
jo
jge
or
pusha
es
jg
iret
or
outs
mov
jecxz
mov
mov
fisubr
sub
mov
gs
xor
adc
sub
fs
lods
fist
fsub
and
add
cdq
mov
inc
mov
dec
repnz
(bad)
lock
fld
dec
push
xchg
mov
dec
push
sbb
ins
outs
ja
clc
jg
call
test
nop
call
adc
add
test
pop
inc
jle
fs
adc
pusha
xchg
jle
clc
add
or
out
mov
and
or
ffreep
adc
int3
jl
mov
add
das
call
mov
cld
jle
popa
pushf
and
gs
call
les
and
leave
sub
out
cwde
test
dec
call
mov
and
cmc
call
retf
cmp
into
outs
sti
xor
add
js
dec
inc
and
dec
mov
sbb
cmc
ret
jmp
dec
arpl
(bad)
fwait
add
xchg
mov
mov
mov
mov
test
xchg
(bad)
pop
loopne
push
inc
in
inc
cmp
xchg
iret
xchg
pop
pop
mov
sbb
mov
mov
or
in
and
mov
push
mov
fidiv
lds
pop
cmp
jl
sub
loope
into
jae
pushf
add
leave
push
dec
cmp
push
xor
push
sti
cmps
jno
cli
xchg
xchg
lock
adc
addr16
in
cmp
and
hlt
std
dec
bound
sar
push
inc
mov
add
or
inc
hlt
sbb
pop
cmp
clc
mov
fdivr
fsub
xor
sahf
lods
push
mov
ins
add
jae
dec
in
rcr
and
xchg
jne
lds
shl
mov
mov
xchg
cmp
fild
fcomp
call
inc
xor
jle
mov
jae
jge
cmps
add
push
or
(bad)
fcomp
dec
push
call
(bad)
gs
push
loop
push
mov
push
mov
fcomp
iret
ficom
and
sub
cdq
mov
xor
adc
adc
xchg
pop
inc
inc
jno
sub
fstp
mov
jno
and
cmps
jns
aam
sbb
and
cmp
imul
or
mov
(bad)
outs
dec
adc
push
aam
mov
adc
ret
int3
push
push
inc
mov
xor
mov
addr16
sbb
dec
ja
(bad)
add
fiadd
jle
mov
fcomp
loop
ret
loopne
cmp
test
es
jae
xchg
dec
push
jp
adc
xchg
ret
xchg
(bad)
push
repnz
sub
fs
jbe
ss
sbb
or
jmp
mov
mov
pop
retf
lods
jge
mov
lahf
ss
mov
cld
stos
and
out
loop
pop
mov
ins
sbb
in
pop
cdq
ret
je
cli
push
fisub
xor
ins
sbb
movs
adc
jmp
rcr
mov
out
popa
dec
cmps
repnz
aad
sub
das
jnp
sbb
xchg
adc
mov
mov
test
jnp
sub
test
sub
mov
push
pushf
dec
test
cmp
mov
bound
mov
and
push
adc
dec
jns
popf
in
xchg
cmp
jbe
adc
and
lds
repz
adc
mov
inc
daa
jnp
xchg
mov
ret
jp
xchg
mov
xchg
(bad)
retf
sub
cld
sbb
mov
push
call
scas
and
out
jmp
daa
push
in
add
cld
out
cmc
pop
adc
(bad)
retf
rol
push
mov
dec
clc
mov
cmp
mov
adc
adc
jo
sub
or
push
(bad)
sbb
xchg
dec
jno
sub
(bad)
imul
cmp
loopne
inc
dec
out
xor
push
add
lock
jne
sbb
(bad)
imul
pop
mov
mov
jle
cdq
xor
cdq
mov
(bad)
adc
pushf
mov
mov
jmp
retf
test
mov
sbb
out
inc
jmp
xchg
in
not
rcr
mov
xchg
push
inc
(bad)
xchg
outs
jle
stos
gs
int
fcom
dec
jl
pop
shl
outs
jl
and
add
(bad)
jecxz
jmp
shl
push
sbb
pop
pushf
xchg
out
sbb
in
stos
(bad)
rol
ss
xchg
inc
jne
adc
test
aad
int
int3
ror
cmp
jg
in
int
pop
adc
gs
fs
pop
xchg
adc
je
add
ficomp
xor
mov
dec
add
xchg
jmp
and
outs
bound
in
repz
push
xchg
fcom
mov
daa
sub
into
test
mov
fst
dec
mov
dec
sub
push
jl
xlat
stc
inc
mov
xchg
and
jle
cli
in
arpl
pusha
push
cwde
fsub
and
inc
outs
jne
movs
fist
fisttp
leave
pop
test
mov
stc
aas
test
mov
daa
das
sbb
xor
cmp
jo
pusha
icebp
imul
test
and
mov
gs
sbb
imul
xchg
scas
or
ret
jp
inc
mov
loopne
sub
out
mov
cmc
icebp
js
sbb
mov
ret
lock
sahf
(bad)
sub
leave
js
cmp
pop
mov
pop
(bad)
mov
or
cmovbe
aas
inc
ret
mov
out
and
sti
fisubr
xor
stos
pop
jns
movlps
xchg
and
xchg
xor
push
js
or
inc
(bad)
mov
fadd
clc
mov
push
imul
jmp
arpl
(bad)
jmp
sbb
or
mov
push
mov
fistp
inc
imul
xchg
mov
fisttp
ror
mov
xor
retf
call
dec
aas
cwde
lea
mov
(bad)
mov
daa
js
test
ret
sub
(bad)
popa
enter
and
xor
ror
loope
or
imul
enter
cmp
fmul
nop
outs
jns
inc
int3
mov
inc
clc
xchg
adc
mov
bound
sbb
sbb
cwde
push
jo
fisubr
sub
adc
call
cmc
mov
pop
and
dec
sbb
test
sar
mov
in
lods
lea
sbb
inc
and
push
add
pop
out
aam
or
and
jl
loopne
dec
cmp
outs
loope
jmp
(bad)
stos
push
sbb
ds
fsub
repz
mov
sbb
dec
mov
push
neg
cmp
xchg
icebp
mov
and
nop
sahf
add
pushf
(bad)
cmp
mul
lods
dec
scas
cmc
test
xlat
daa
push
or
out
mov
dec
imul
jo
dec
add
mov
test
mov
xchg
xchg
les
outs
and
push
retf
jo
gs
xchg
mov
call
into
add
mov
mov
and
into
ret
pop
mov
inc
jnp
adc
lods
push
xor
fsubr
sub
ins
or
jecxz
retf
leave
in
jo
push
popf
dec
inc
mov
adc
or
(bad)
xlat
fidiv
or
aaa
dec
dec
das
or
inc
arpl
fild
and
cmps
lods
test
mov
out
xlat
sub
cmps
push
cmps
jne
cmp
ja
mov
ret
or
call
add
movs
movs
add
jb
call
(bad)
mov
lock
and
xchg
ss
std
lods
cld
mov
cmp
test
and
mov
into
(bad)
cmp
cmp
adc
pop
sub
adc
inc
(bad)
mov
fwait
out
mov
(bad)
mov
mov
jmp
ret
repnz
cmp
dec
inc
adc
fsub
(bad)
mov
shl
adc
pusha
popa
in
inc
dec
sub
push
pushf
movs
xchg
lea
inc
mov
repnz
js
sti
retf
repnz
lock
(bad)
lods
test
cwde
dec
ds
aas
in
call
sub
test
jno
cmp
aaa
or
bound
mov
cmp
dec
mov
mov
push
fisub
add
inc
out
int
and
and
data16
jns
loope
pop
dec
test
shl
push
test
movs
pop
loopne
icebp
cwde
jge
mov
inc
sbb
pop
xor
xor
stos
test
test
fwait
xchg
icebp
pusha
adc
pop
ins
mov
inc
aaa
hlt
sub
ds
addr16
mov
xor
mov
sbb
sub
pop
jno
mov
adc
fnstenv
sbb
cmps
jo
mov
mov
mov
push
je
fxam
mov
adc
and
mov
jle
and
and
jno
xor
sub
cld
pop
and
nop
push
pop
fisub
mov
xchg
xchg
test
sub
das
dec
shr
sbb
lods
dec
or
out
dec
sbb
and
or
xor
fldcw
call
retf
clc
mov
xor
jo
jno
fwait
nop
xor
push
ret
jle
outs
mov
sbb
call
and
cmp
arpl
loopne
adc
push
loope
xchg
jbe
sub
push
push
stc
call
xchg
sub
jmp
retf
push
sbb
shl
or
xor
addr16
cmp
push
cld
xor
cmps
push
sahf
pop
cmps
mov
inc
lea
cmps
in
mov
jecxz
add
xor
or
pop
pop
inc
(bad)
lods
mov
dec
xor
adc
das
xchg
jp
mov
mov
(bad)
fdiv
pop
aas
loop
sbb
test
dec
stc
aaa
enter
cmp
rcr
adc
hlt
xor
rol
js
jbe
mov
mov
or
mov
arpl
cwde
sub
leave
in
push
and
cmp
daa
and
inc
add
sub
scas
dec
cmps
jb
add
es
or
sub
icebp
(bad)
in
icebp
jp
lea
xor
je
jns
and
jg
inc
pop
and
retf
mov
add
pop
inc
stc
push
mov
stos
jl
and
sti
or
rol
ret
pusha
stos
mov
arpl
imul
mov
adc
in
ds
mov
mov
ss
sbb
sub
into
sar
imul
aaa
bound
mov
jae
mov
fsubrp
jle
pop
mov
inc
sbb
repz
push
pop
mov
test
dec
stc
mov
add
idiv
mov
mov
outs
out
ja
rcl
sub
sub
mov
mov
inc
mov
dec
jns
and
push
push
cmp
stos
pop
hlt
lods
sbb
sub
test
shl
pop
cmp
pushw
cmp
pop
pop
(bad)
push
cdq
ins
jno
or
adc
(bad)
jge
xor
pop
int
jp
and
or
lods
idiv
aaa
sub
push
je
pop
mov
loop
inc
push
xchg
out
mov
pop
arpl
imul
lahf
jnp
bound
or
sub
mov
repz
test
sub
adc
jnp
xor
add
jb
xacquire
dec
jnp
pop
sub
out
repz
xor
cmp
movs
rol
mov
divps
imul
sub
lods
pop
sbb
inc
and
and
add
cmps
pop
mov
loop
(bad)
lahf
cmc
mov
leave
call
ss
add
pop
jle
cmp
nop
retf
pusha
clc
retf
mov
dec
out
lahf
retw
and
xor
repz
shl
or
and
adc
pushf
xchg
inc
cmps
int
push
jg
add
(bad)
aad
in
sbb
int
sbb
add
jg
push
pop
push
push
jecxz
xchg
xor
pop
mov
mov
in
pop
jo
jae
mov
jecxz
inc
jno
js
sub
adc
loope
lods
mov
add
stc
cmc
inc
je
mov
stos
push
xor
inc
pop
and
ss
ins
sbb
gs
bound
push
repnz
imul
pop
js
or
xchg
nop
mov
scas
jl
jp
push
jmp
push
mov
mov
pop
ins
xchg
and
gs
and
call
mov
dec
sub
ret
popa
mov
out
ds
dec
call
lods
das
loop
stos
inc
adc
jmp
sbb
push
aam
dec
push
jge
inc
test
or
arpl
call
out
retf
unpcklps
push
psrad
gs
sbb
sbb
jmp
sti
loop
ret
dec
data16
js
xor
jge
or
dec
ror
fadd
fwait
add
dec
push
jp
int
adc
leave
mov
je
arpl
mov
add
pop
mov
mov
dec
fidiv
test
push
jmp
nop
fucompp
dec
stc
sbb
and
aaa
loope
lods
mov
idiv
jne
or
ja
lahf
mov
sahf
push
sub
xlat
pop
lea
sbb
jmp
xor
out
nop
fisub
sbb
outs
mov
aas
rcr
mov
data16
outs
imul
mov
into
xor
lea
test
sub
(bad)
loope
lahf
or
push
cmp
and
test
xchg
and
je
fcomp
cmc
test
push
sbb
dec
movs
leave
inc
rcl
sbb
adc
pop
fist
pop
sub
jb
and
ins
addr16
jge
push
sub
dec
in
out
scas
rcr
mov
mov
xor
fwait
push
push
les
push
sbb
xor
inc
mov
pusha
pop
jo
jmp
add
jno
lahf
sbb
dec
push
cmps
mov
int
and
sbb
jge
les
clc
xor
shl
pop
mov
add
test
pop
cmc
int
or
sbb
push
inc
sbb
ret
cld
or
shr
shl
ds
bound
add
lods
mov
cs
cwde
fsubr
mov
and
fadd
inc
mov
mov
pop
lea
lock
(bad)
loop
aas
inc
xchg
dec
adc
xchg
ds
jecxz
push
mov
retf
mov
outs
cmps
enter
and
es
fldcw
xchg
jb
inc
(bad)
cmp
inc
sub
shl
inc
cmps
mov
das
sbb
add
mov
push
pop
inc
sbb
jo
or
push
(bad)
cmp
(bad)
sub
idiv
dec
inc
in
dec
dec
out
cs
pop
in
and
in
ffree
jmp
test
push
xchg
out
or
retf
sbb
jmp
enter
add
cmp
adc
mov
or
xchg
popa
jg
dec
aaa
xchg
test
(bad)
daa
sub
mov
xor
jmp
pop
fwait
cli
push
ffreep
mov
adc
pop
shl
rol
push
mov
adc
popf
jmp
stc
cmp
loop
aam
and
jo
imul
std
fidivr
les
jl
xor
and
cmc
push
stc
sbb
jae
scas
sbb
mov
xor
int3
pop
lods
jge
mov
lahf
sub
mov
jmp
sbb
sub
jp
jb
lea
mov
dec
aad
mov
stc
cmp
jns
mov
jle
mov
into
aad
xchg
adc
or
pop
add
adc
push
cwde
int3
stc
out
xor
gs
sub
fsub
adc
mov
sub
cmp
sbb
retf
pushf
popf
sahf
in
scas
add
stos
xchg
in
cs
add
imul
mov
sti
fsubr
cld
cld
ret
pop
add
dec
idiv
test
xchg
retf
xchg
jmp
fs
out
adc
jg
sub
jb
and
dec
cmp
lock
inc
nop
lods
test
inc
in
pop
stos
xchg
inc
loopne
push
rol
mov
sahf
es
sbb
fwait
sti
les
in
pop
sub
dec
retf
dec
pushf
mov
es
int
mov
mov
xchg
ins
pop
dec
loop
das
mov
pusha
out
xchg
push
and
dec
movs
cmps
icebp
adc
popa
ja
xchg
clc
enter
inc
mov
cmovb
iret
mov
cld
test
in
mov
inc
call
dec
xchg
xor
inc
push
add
pop
fwait
mov
mov
in
mov
cli
mov
aaa
lods
sbb
test
call
movs
jge
addr16
push
dec
or
push
cdq
pop
mov
test
pop
retf
inc
sar
aaa
imul
mov
jecxz
pop
jne
test
(bad)
rcr
cmp
sub
adc
mov
jp
mov
outs
sti
pop
sub
cli
aas
inc
leave
sbb
mov
mov
hlt
lods
gs
pop
mov
sbb
test
xchg
xchg
xor
jge
fdivr
pop
pop
dec
cli
or
jle
in
pusha
xlat
add
push
mov
dec
add
(bad)
popf
and
mov
pop
cdq
xor
outs
adc
movs
sbb
mov
sub
dec
int3
das
mov
jge
adc
int3
xchg
jo
jge
lea
cmp
xchg
and
mov
cmps
cwde
jae
mov
ins
ss
cmp
imul
adc
idiv
aam
add
or
jne
dec
inc
test
cli
sub
sbb
push
scas
cmp
hlt
xlat
out
iret
inc
mov
mov
cmp
repz
and
mov
jno
and
or
xchg
js
or
clc
in
dec
add
sbb
inc
xchg
mov
fld
(bad)
and
in
aam
into
loop
stc
nop
inc
pop
test
ins
xchg
(bad)
cld
lahf
popf
aam
jecxz
cli
cld
jecxz
daa
add
pop
cmps
outs
adc
push
shl
retf
repz
jle
mov
pop
xchg
bound
pop
out
xor
jle
das
(bad)
(bad)
or
dec
push
imul
and
mov
je
mov
push
fnstcw
jnp
sub
mov
out
add
das
mov
jle
sbb
cmp
sub
fiadd
jnp
jmp
adc
add
setbe
mov
add
stos
fld
nop
xchg
inc
fcmovnb
jb
jecxz
and
div
loopne
pop
sub
mov
shl
cld
(bad)
aaa
mov
shl
xchg
and
gs
imul
fcmovnb
mov
shr
sub
xchg
inc
xchg
loope
bound
add
xor
add
and
pop
cmp
pop
outs
loop
ret
push
xchg
popf
and
mov
xchg
aam
pop
ss
fist
cmp
sbb
test
cmp
int
sub
adc
inc
repnz
xor
pop
ss
jno
cmp
cs
loopne
sahf
scas
push
mov
out
sbb
rcr
movs
xchg
dec
push
push
xchg
inc
adc
adc
arpl
out
or
mov
xchg
or
xchg
aad
clc
ss
rol
sub
pop
xchg
push
mov
call
test
pop
xchg
or
inc
aas
in
lods
(bad)
test
addr16
les
fild
inc
jl
inc
nop
push
daa
sbb
daa
in
jb
bound
pop
xor
jb
addr16
add
popa
(bad)
mov
rcr
push
jge
popa
hlt
neg
(bad)
lods
pop
push
or
add
mov
push
add
enter
mov
mov
pop
cmps
push
mov
ror
add
adc
push
in
in
outs
imul
ds
sbb
or
pop
loope
fsubr
jmp
dec
cdq
cld
shl
push
addr16
sbb
daa
dec
pop
sbb
pop
mov
mov
out
stos
pop
pop
inc
sub
mov
jno
cmp
ficomp
bound
sahf
jne
pop
arpl
pop
pop
adc
xchg
adc
pop
jbe
cdq
mov
int3
mov
ins
out
adc
pop
div
(bad)
out
in
mov
xchg
stos
add
pop
mov
icebp
xchg
mov
pop
shl
std
jle
js
pop
scas
sbb
cdq
sub
daa
mov
add
mov
ret
jmp
jae
shr
push
push
or
retf
and
popf
cmps
inc
stos
hlt
mov
mov
jle
test
shl
jge
scas
xchg
jp
mov
push
inc
rol
ja
push
push
push
fisttp
jmp
xor
jnp
xlat
enter
mov
or
xlat
push
aas
sub
addr16
push
cmp
je
inc
iret
push
aaa
or
push
push
les
mov
loop
or
xor
es
lea
(bad)
and
in
std
call
aam
das
(bad)
dec
and
and
js
iret
or
aad
scas
outs
jmp
or
pop
mov
or
movs
sbb
rcl
inc
lock
jmp
mov
dec
xor
or
xor
mov
icebp
lds
dec
(bad)
adc
xlat
fisub
hlt
xor
push
add
push
cld
outs
inc
(bad)
cli
jl
jmp
mov
xchg
or
xor
adc
test
aas
in
jmp
movs
bound
loope
xchg
scas
mov
in
cli
mov
pop
jmp
pop
shl
int3
test
inc
inc
(bad)
sbb
stos
leave
adc
fcmovne
or
ins
cmp
movd
jmp
shr
adc
call
pushf
sub
call
pop
sbb
aaa
rcl
add
ja
test
jbe
mov
push
leave
xlat
xchg
repz
push
mov
pop
pop
mov
cmp
loope
add
dec
fist
jge
ss
sbb
mov
xor
into
jp
jmp
sub
xor
fdiv
mov
inc
xlat
inc
sbb
adc
pop
cwde
push
fimul
push
retf
mov
jno
sub
dec
xchg
push
pop
test
adc
ins
fmul
scas
mov
fld
add
pop
in
in
loope
inc
inc
cmp
ror
jecxz
add
popa
scas
repnz
sbb
and
aam
ja
mov
iret
in
aam
xchg
inc
loop
cmp
mov
adc
and
mov
frstor
retf
push
jbe
push
mov
cmp
or
je
mov
ret
aaa
sub
push
ins
jecxz
scas
call
cmp
xor
add
cmc
or
xor
sbb
xchg
fdiv
out
and
cld
arpl
call
mov
loopne
mov
cmp
mov
pop
or
aas
xor
cwde
cmp
jbe
add
call
mov
push
pop
adc
and
pop
les
dec
cmp
pop
sub
inc
outs
and
in
ds
lods
jmp
lods
xor
dec
out
es
int
in
dec
inc
adc
ds
dec
and
arpl
dec
dec
fisttp
and
or
(bad)
stos
xchg
cld
(bad)
fsub
loope
pop
jae
dec
push
mov
ins
push
sub
(bad)
sub
inc
jmp
xchg
bound
jg
jmp
sbb
mov
adc
xor
shl
bound
es
fild
hlt
or
jnp
add
adc
in
out
sbb
inc
push
push
jb
in
jmp
call
push
add
popf
mov
lea
push
xor
jl
sub
shl
push
inc
mov
xchg
sti
xchg
xor
pushf
nop
jp
xchg
mov
jmp
adc
scas
xchg
or
cmps
mov
lods
inc
xchg
popa
(bad)
adc
frstor
rol
pusha
out
dec
inc
(bad)
cmp
cmps
sub
idiv
dec
inc
idiv
dec
dec
jecxz
inc
pop
out
xor
out
push
and
cmp
sar
dec
and
xchg
rol
cwde
rol
jns
adc
cmps
pop
jp
test
sub
fild
dec
adc
pop
xchg
fisttp
popa
cs
inc
loope
sub
xchg
inc
and
sub
adc
retf
xor
or
mov
aaa
xor
push
ffreep
(bad)
mov
cmp
jne
rol
mov
aas
add
in
test
push
pop
inc
jae
mov
hlt
jmp
and
inc
adc
push
jp
adc
test
adc
fistp
ins
and
mov
dec
loopne
and
sbb
inc
cmp
cmp
xor
stos
(bad)
popf
fcom
or
shl
sbb
or
les
in
mov
xchg
cmp
inc
ds
sahf
aaa
dec
das
adc
cmp
popa
cmps
out
mov
(bad)
(bad)
mov
cmp
xlat
adc
rcl
push
dec
add
pop
leave
popf
inc
div
xor
sar
add
push
ror
outs
dec
cmp
mov
fst
repz
mov
and
push
jge
daa
cmps
fimul
jmp
push
inc
mov
cli
in
push
fwait
fs
icebp
into
push
dec
xor
fcom
or
lahf
sbb
clc
iret
daa
adc
sbb
loop
into
es
or
pop
in
xor
test
or
imul
sbb
dec
(bad)
repz
mov
sbb
xchg
pushf
(bad)
cld
jecxz
out
adc
(bad)
in
pusha
add
or
mov
mov
fxch
mov
cli
dec
pop
ins
xchg
popa
adc
stc
aad
add
pop
aad
mov
pop
mov
mov
iret
in
retf
es
pop
js
test
(bad)
rcl
shr
sbb
jle
push
push
aam
or
sub
dec
push
rol
pop
pop
cmc
(bad)
aam
sti
ins
sbb
imul
jbe
jns
xor
shl
aad
and
(bad)
xor
scas
mov
pminsw
das
emms
cli
nop
inc
cmp
daa
retf
inc
mov
ins
outs
xchg
inc
ss
neg
in
cld
cmc
loopne
arpl
aad
aas
mov
dec
ror
add
lods
cmp
in
sar
gs
mov
lods
inc
or
cmp
call
sbb
push
and
jne
ret
mov
(bad)
aaa
add
dec
mov
inc
pop
xchg
mov
enter
mov
aas
repnz
inc
retf
ds
adc
hlt
fwait
arpl
sbb
call
mov
or
loopne
pop
test
rcl
int3
mov
arpl
xchg
adc
inc
add
outs
inc
add
fadd
nop
and
sub
sbb
aaa
lds
sub
xchg
xor
aas
adc
daa
cld
test
and
jno
lds
pcmpeqb
arpl
mov
fdivr
cmovs
scas
icebp
int
je
int
nop
adc
outs
ss
mov
imul
jl
leave
jp
or
or
ret
cmp
fstp
push
popf
jns
nop
xchg
ja
xor
fwait
outs
movs
dec
(bad)
jmp
mov
xchg
int3
xchg
cmp
ficomp
es
pop
jp
aam
cdq
xchg
sti
adc
out
fcomp
sub
adc
leave
test
sbb
lock
addr16
sbb
mov
mov
clc
repnz
in
pop
xchg
dec
mov
jae
jnp
pop
outs
btc
push
test
mov
xchg
in
xlat
stos
popa
mov
jle
int3
dec
cld
mul
sahf
imul
sub
cmp
push
fcomp
xlat
mov
ja
cmp
dec
clc
push
pop
cmp
in
inc
and
test
mov
cmp
and
sbb
jecxz
fidivr
and
sub
mov
test
rol
out
fist
mov
dec
inc
pusha
lea
dec
pop
mov
mov
push
and
shl
mov
xchg
mov
test
pop
xchg
xchg
push
rcr
dec
ins
cmp
push
scas
gs
inc
fs
lds
rcr
outs
pop
pop
popfw
aaa
mov
jl
mov
inc
(bad)
mov
fmulp
retf
adc
inc
aaa
adc
es
mov
push
xchg
mov
xchg
test
dec
setns
sbb
xchg
push
push
retf
add
cli
retf
mov
stos
rcr
or
jg
aad
mov
pushf
mov
pop
pop
sbb
or
ja
xor
mov
enter
(bad)
jmp
popa
fs
mov
sbb
sub
test
mov
jge
push
add
pop
jne
cmp
pushf
inc
push
aaa
loop
ins
dec
frstor
cmp
cmps
adc
mov
mov
cmc
mov
sub
rsm
cmp
and
mov
mov
push
rcl
pop
jne
repnz
iret
mov
(bad)
not
jp
es
sbb
ins
add
add
adc
sbb
pop
maskmovq
not
nop
push
dec
xor
adc
aaa
mov
push
loopne
lods
les
push
loope
ins
mov
lods
pushf
mov
push
mov
test
repnz
repz
dec
ror
shr
add
pop
mov
xchg
add
cmp
pushf
cmps
adc
das
jp
enter
rol
cdq
dec
fcom
std
dec
jns
mov
pop
retf
test
xchg
jp
jle
push
outs
cmp
or
cmps
nop
ins
into
and
or
lds
pop
mov
enter
ret
(bad)
loop
mov
movs
out
inc
cld
hlt
mov
dec
stc
fcomp
inc
xlat
aaa
sbb
imul
fdiv
push
push
push
popf
adc
clc
scas
sahf
cmps
lahf
dec
shr
(bad)
jno
pusha
fidivr
jbe
lea
or
fwait
enter
jb
xor
jae
inc
aam
out
adc
mul
in
push
dec
pop
sbb
fwait
jns
out
hlt
mov
add
adc
inc
movs
nop
jo
inc
dec
addr16
test
(bad)
lds
push
lock
sbb
int
test
xchg
ret
adc
pop
mov
cmc
and
pop
(bad)
jge
dec
or
jo
mov
jge
lahf
popa
jle
mov
xor
jnp
mov
or
dec
test
pop
rol
das
outs
add
stos
pop
dec
(bad)
dec
inc
pop
cmp
test
pusha
neg
dec
push
(bad)
cmp
out
pop
inc
idiv
dec
inc
in
push
dec
loope
inc
pop
out
xor
out
repnz
hlt
pop
jge
idiv
aam
jmp
pop
jnp
loop
inc
push
ret
rcl
jbe
pop
cmps
sub
fucomp
push
nop
pop
push
mov
in
inc
jns
popa
jge
pop
popf
leave
fadd
jo
jbe
lods
test
jmp
fs
cmps
jle
pop
sbb
out
sub
inc
jl
fst
int3
call
sbb
sbb
popa
adc
(bad)
xlat
aaa
push
cmc
cmp
xchg
mov
mov
pushf
rcl
dec
arpl
jae
enter
push
push
(bad)
imul
lahf
popa
mov
dec
lahf
imul
ins
push
push
adc
cdq
mov
in
xor
pop
push
inc
sub
xchg
cld
sbb
shl
or
push
shr
xchg
dec
add
in
jg
push
(bad)
in
setns
nop
in
or
mov
dec
movs
sub
push
daa
mov
cs
(bad)
jb
adc
aad
std
add
popa
jmp
mov
and
mov
fiadd
mov
mov
cmp
cmp
mov
or
test
or
aas
sbb
cdq
stos
dec
cli
fisubr
sub
sub
fmul
jne
out
arpl
pop
ja
mov
push
fistp
dec
pusha
add
mov
pop
nop
or
adc
or
retf
push
add
and
aam
push
sbb
inc
or
adc
sbb
(bad)
cmp
sbb
sub
loope
bound
dec
stc
cs
shl
dec
sar
push
imul
nop
mov
mov
inc
pop
lea
fisttp
imul
inc
dec
and
pop
loop
loopne
pop
or
push
call
loope
clc
daa
loope
mov
cmps
push
xlat
add
jo
and
jbe
aad
cmp
in
mov
ins
dec
sbb
cmpxchg
movs
ret
and
push
sub
mov
or
and
cs
inc
addr16
pushf
hlt
fwait
std
(bad)
and
cmc
adc
(bad)
sbb
mov
jbe
push
adc
arpl
cmp
ds
mov
sbb
mov
mov
jl
sub
adc
aas
fwait
xchg
ins
lds
dec
std
lea
cld
test
mov
sar
adc
fldenv
pop
xchg
aad
out
cmc
jmp
outs
xlat
aad
popf
stc
xchg
push
mov
mov
sbb
sbb
aad
lahf
cmp
loopne
pop
or
test
mov
addr16
mov
push
sub
stos
xchg
enter
add
call
je
and
mov
xor
bound
push
jle
adc
fcom
(bad)
jb
sub
shl
xchg
jno
and
pop
in
scas
pushf
xchg
scas
mov
jb
call
cmp
jns
mov
cli
cmps
adc
sbb
mov
stos
fisubr
dec
cmp
inc
inc
outs
inc
or
aad
sbb
enter
lahf
enter
mov
sub
rol
cmp
(bad)
and
inc
sub
sub
push
es
ja
mov
push
push
mov
cmp
mov
setne
cmp
cld
fdiv
fnsave
ret
xor
and
sbb
push
sar
(bad)
scas
pop
sub
loope
mov
mov
jge
sbb
and
fidiv
repz
shr
leave
and
neg
out
push
pop
loop
mov
xchg
das
jns
xchg
push
stos
cmp
cmp
or
dec
mov
pop
push
cmp
jbe
test
jecxz
sahf
int3
addr16
daa
push
adc
push
jnp
sub
xchg
(bad)
mov
fisttp
pop
jmp
cs
xchg
scas
mov
rcl
stos
lods
mov
dec
repnz
lods
(bad)
and
pop
nop
or
sar
stos
addr16
mov
cmp
ror
adc
movs
cmp
mov
daa
js
(bad)
fidivr
retf
gs
inc
pop
add
scas
sbb
(bad)
xor
push
ss
push
or
shl
xor
rcr
push
call
pusha
cwde
cmc
pop
sbb
inc
and
jmp
imul
fs
and
stos
sbb
push
(bad)
mov
js
loope
pushf
xor
popf
sbb
mov
inc
out
push
daa
inc
xchg
clc
outs
mov
pop
in
test
adc
mov
push
es
mov
(bad)
cmp
and
pop
(bad)
pop
(bad)
sbb
sbb
lock
mov
jg
loope
aaa
xchg
(bad)
cmp
jmp
loop
movs
aam
test
fptan
in
stos
push
test
and
out
aam
xchg
inc
pop
test
mov
push
pop
cmp
xlat
(bad)
aaa
pop
inc
aam
mov
pop
pop
daa
sub
js
mov
out
dec
or
lods
jno
ds
gs
sub
cmc
rol
adc
sahf
mov
xchg
xor
dec
mov
repnz
adc
adc
sar
in
adc
jno
or
pop
mul
fwait
and
jne
call
aaa
test
dec
inc
sti
mov
jae
sbb
in
or
dec
sbb
pushf
mov
mov
xchg
xchg
(bad)
gs
mov
push
inc
push
sbb
push
mov
cmps
jns
xor
int3
test
cdq
test
(bad)
pusha
or
aam
aas
and
sar
jbe
push
test
sbb
or
cmp
sti
daa
test
xor
adc
repz
pop
xlat
mov
fisttp
pop
and
cmps
test
push
adc
adc
adc
clc
push
arpl
cmps
add
inc
lods
mov
loopne
or
dec
or
pcmpeqb
cmp
cmps
cdq
(bad)
(bad)
in
sbb
push
out
or
out
cmp
and
dec
pusha
(bad)
push
xor
push
and
push
jp
dec
ret
jbe
add
dec
into
rep
push
pop
jno
push
jbe
mov
push
add
push
pop
inc
push
jge
repz
dec
pop
icebp
push
push
dec
cwde
xor
call
sbb
dec
dec
fmul
imul
pop
push
xor
lahf
hlt
cdq
pop
lock
outs
fiadd
lds
sbb
sahf
lahf
jg
pop
shl
jns
mov
cld
mov
out
xor
cmc
adc
inc
push
jp
cmp
jle
adc
inc
sbb
imul
xor
sub
rcr
bound
pop
push
stc
jo
jmp
mov
mov
jl
(bad)
or
pop
cmp
(bad)
in
hlt
int
pusha
(bad)
push
mov
push
mov
lea
outs
push
jns
mov
(bad)
pop
outs
shl
test
fucomip
dec
rcr
call
fstp
data16
das
dec
aam
sbb
cmp
int
mov
inc
push
jbe
pop
pop
mov
out
dec
cwde
mov
shr
or
pop
lea
xchg
lods
mov
test
sbb
rcl
mov
ins
add
mov
mov
sbb
inc
sub
ins
adc
lea
inc
dec
lea
xor
mov
js
sbb
test
(bad)
clc
pop
mov
(bad)
cli
jns
pop
push
mov
dec
inc
ds
mov
imul
jnp
popa
enter
and
pop
sbb
(bad)
pushf
rcr
inc
dec
xor
jmp
and
cmp
scas
sub
rcr
lahf
add
test
lock
into
loop
mov
xchg
ficom
jecxz
je
pop
sbb
ret
neg
popa
repnz
pop
inc
pop
loopne
(bad)
pop
mov
(bad)
adc
out
ins
jo
and
xor
std
(bad)
sbb
inc
jge
cdq
and
dec
push
out
dec
inc
(bad)
cmp
(bad)
sub
cmp
out
dec
inc
loopne
inc
sub
cmp
sar
dec
and
adc
in
popa
adc
or
retfw
jp
jge
cwde
test
mov
dec
test
dec
rcr
add
mov
jbe
js
jg
std
sbb
dec
jge
call
adc
cwde
push
ins
jnp
ret
jg
push
icebp
push
add
sbb
sbb
loop
test
pop
int
or
aaa
jp
jne
daa
or
sub
leave
push
jl
cmc
add
(bad)
jns
push
dec
sbb
mov
stos
mov
retf
push
nop
lea
pop
sbb
sub
push
jns
jl
std
out
and
leave
fsubr
fwait
shl
cmp
aad
call
xchg
cmp
mov
shr
jns
sub
fst
jmp
inc
outs
or
xlat
cld
rol
nop
dec
jmp
push
mov
out
gs
adc
sbb
cmp
and
xor
add
add
daa
jo
jmp
lds
aas
inc
movs
push
pop
xchg
int3
out
cmc
or
popa
jnp
push
test
js
mov
sbb
fst
stc
in
cdq
sub
pop
jmp
outs
js
int
sbb
sbb
push
outs
push
pop
mov
pop
push
push
call
call
mov
cmps
and
data16
fist
xchg
in
pop
daa
in
add
paddq
outs
icebp
aas
cs
inc
xchg
sbb
call
jp
jl
push
push
int3
and
js
repz
adc
mov
cmp
push
and
cld
sbb
dec
mov
sub
push
jmp
ror
popa
rcr
gs
push
and
inc
jae
loopne
ror
pop
repnz
fisubr
add
push
push
lahf
cmp
push
xlat
xor
xor
test
push
jle
sub
int
lds
or
add
scas
xor
fldenv
push
aas
and
jle
push
jg
push
cmp
inc
out
lds
jecxz
jae
idiv
sub
mov
ss
mov
out
sbb
dec
and
sbb
or
and
nop
test
loop
cdq
rol
mul
adc
xchg
push
or
add
inc
mov
xchg
fbld
dec
arpl
ror
leave
cmc
push
ror
sub
push
mov
(bad)
pop
push
or
in
repz
int
cmp
nop
mov
mov
(bad)
rol
mov
push
push
push
stc
dec
mov
xchg
push
inc
scas
push
xchg
loop
jnp
int
fnstsw
cmp
mov
cli
pop
fnstenv
shl
aam
push
jo
bound
cmc
pusha
mov
out
push
test
daa
mov
daa
(bad)
dec
test
or
mov
push
mov
xor
loopne
lea
push
fstp
ins
fld
mov
fs
sbb
adc
imul
(bad)
in
push
out
int3
iret
out
cmps
pop
jne
or
jmp
dec
movs
rol
in
sub
ficomp
popf
dec
dec
sbb
repz
(bad)
in
xor
neg
sti
cld
icebp
xchg
jo
out
and
or
loop
xchg
pop
mov
mov
stc
cwde
inc
sub
pop
mov
(bad)
push
pop
jmp
xor
pop
pop
push
popa
ror
ins
cmp
ret
fbstp
sub
cwde
imul
pop
and
cld
add
sub
mov
fsubr
daa
add
mov
mov
fs
lds
je
xor
int
vmovaps
add
jno
cmps
mov
rcr
shl
or
pop
push
sbb
or
ret
cwde
xor
push
out
inc
xor
ror
sub
xchg
cdq
cmp
cmps
pop
jmp
dec
aad
in
repnz
mov
into
xlat
push
jbe
fdivr
(bad)
call
sar
sub
dec
cmp
popf
je
cmp
test
push
(bad)
out
sub
test
xor
or
cwde
mov
mov
ins
adc
adc
lock
add
loope
jb
mov
xor
mov
jno
idiv
rcr
nop
xchg
mov
ja
push
shl
mov
int3
jge
jp
and
(bad)
popf
ret
jge
dec
dec
cmps
jl
or
pop
jge
mov
aas
cmc
and
push
sbb
sti
push
pop
adc
iret
je
into
daa
fidivr
dec
mov
cli
inc
movs
je
jp
(bad)
loopne
fdivr
or
xor
out
adc
test
cmc
xor
add
push
pop
cmps
pop
idiv
xchg
shl
jnp
xor
daa
push
into
repz
cdq
movs
sub
push
push
ror
inc
cmp
xchg
into
shl
imul
aam
xor
adc
push
push
push
fs
push
out
push
ss
jg
loopne
mov
cmc
cmc
and
daa
push
(bad)
cmp
fdiv
adc
push
dec
dec
or
cld
cmc
sub
adc
test
das
retf
pop
jo
lods
enter
mov
jno
jns
xchg
pop
sub
push
jb
bound
xor
adc
pop
lods
lods
add
jge
dec
aam
clc
add
cmp
pop
fld
shr
fdecstp
cli
retf
pop
push
ins
and
add
mov
cs
mov
cmps
stc
cmp
inc
sub
in
cmp
pop
xor
sbb
jecxz
push
jp
fbstp
sar
and
sar
mov
jge
cwde
adc
mov
leave
cmp
sbb
stos
addr16
imul
js
ret
popa
sbb
loop
fcomip
dec
retf
mov
mov
sbb
data16
hlt
lods
imul
or
loopne
pop
or
sbb
and
addr16
or
lods
popa
adc
inc
xor
xchg
call
inc
hlt
fdivr
pusha
and
sbb
into
add
mov
and
ins
in
xor
ret
shl
clc
loope
cmp
mov
push
sbb
fs
dec
xor
jmp
inc
dec
ret
jecxz
jmp
icebp
sbb
jno
or
out
sbb
and
scas
pop
sar
fld
sbb
je
mov
sbb
and
jl
fdiv
push
mov
add
fstp
xchg
adc
push
dec
popa
retf
xlat
cmc
sti
fmul
and
div
aaa
pusha
add
bound
sbb
iret
jmp
mov
inc
test
jbe
mov
lock
lods
push
loopne
or
mov
pop
stos
or
or
pop
in
add
adc
icebp
bound
test
push
xlat
mov
mov
or
jge
dec
sub
dec
mov
dec
lea
addr16
(bad)
cwde
inc
loope
mov
ret
ins
jno
cmps
popa
jge
inc
dec
jge
add
aaa
cmp
lock
and
sti
jb
pop
sti
xlat
retf
xor
ins
mov
jae
jnp
cmps
dec
pop
arpl
push
repz
pop
mov
xor
pusha
lods
jp
inc
lods
jno
adc
push
jmp
pop
popa
pop
cmp
movs
mov
(bad)
mov
mov
movs
in
xlat
arpl
loopne
inc
push
pop
push
test
fldpi
sbb
and
inc
add
sub
and
ret
pop
jl
rcr
pop
jb
ja
push
pop
mov
add
or
xor
pop
cld
sbb
out
mov
jns
pcmpgtb
pop
addr16
push
movs
ja
daa
pop
cld
jnp
in
push
and
fiadd
xchg
add
ss
cmp
pop
pop
and
(bad)
in
in
pop
inc
ds
inc
dec
xor
inc
push
stos
nop
xor
sar
push
cmc
lea
mov
jmp
cld
or
sub
inc
inc
movs
push
std
stos
mov
loopne
xchg
or
inc
xor
dec
fdiv
shl
sbb
add
xchg
sbb
(bad)
or
dec
call
sbb
call
mov
and
xor
pop
sbb
aaa
cs
outs
pop
leave
aad
cmp
hlt
pop
jnp
(bad)
movs
xchg
jno
and
xchg
and
mov
das
jo
push
inc
cdq
ins
out
retf
inc
(bad)
ins
sbb
stc
imul
rcr
jo
enter
push
and
bound
add
or
xor
add
stos
adc
fcom
jg
inc
daa
gs
mov
iret
arpl
adc
popa
jo
pop
loope
pop
iret
into
daa
sub
push
in
inc
mov
imul
cmp
pop
sub
cmp
aam
aas
jg
in
xchg
sub
jno
or
dec
xor
xor
not
push
mov
adc
and
(bad)
pop
hlt
jo
sbb
pop
pop
xor
test
add
ins
push
pop
sar
jnp
inc
loopne
xor
jmp
push
mov
mov
enter
data16
push
xlat
cmps
sahf
inc
in
retf
fld
int
or
cmc
pop
or
xchg
js
mov
or
add
sub
ret
cwde
ins
scas
adc
mov
jecxz
retf
and
sub
fisub
call
js
fisttp
sub
add
sbb
leave
gs
fstp
dec
(bad)
movs
xor
or
pop
stos
repz
popa
fidivr
jmp
mov
retf
rcr
pop
arpl
inc
xchg
and
in
sub
push
fist
xor
test
xchg
imul
sub
movs
lods
jne
cmc
cmc
sbb
inc
xor
pushf
mov
clc
mov
data16
xor
je
cdq
aas
dec
jo
sbb
loope
lahf
inc
ins
outs
std
xchg
cmps
aaa
(bad)
mov
or
sub
jge
(bad)
test
jg
out
mov
pop
xor
sbb
pop
pop
ror
aad
(bad)
imul
xchg
call
sbb
mov
dec
rcr
mov
call
mov
fild
call
lock
jp
daa
out
rol
popa
mov
sar
sub
mov
popf
dec
pop
loop
les
fdivr
into
loopne
pop
mov
dec
jge
adc
pop
mov
sbb
mov
fwait
add
lahf
pop
sbb
mov
out
lds
nop
sbb
fcom
sbb
add
inc
imul
mov
and
int3
adc
retf
xlat
call
scas
xchg
cmp
(bad)
sub
std
enter
enter
cmp
lods
lods
es
or
add
or
mov
fsub
pop
mov
mov
out
les
fisttp
ss
ror
es
xor
dec
dec
inc
push
mov
lods
out
repnz
sti
sbb
test
pusha
(bad)
sbb
(bad)
imul
add
fscale
adc
std
loopne
cdq
mov
inc
inc
clc
in
push
neg
dec
popa
pop
sub
xchg
clc
sub
icebp
aaa
push
ins
les
imul
add
jns
adc
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
push
inc
mov
in
pop
pop
sub
jbe
dec
inc
pop
or
cmp
pusha
mov
pop
push
idiv
pop
push
out
pop
push
imul
or
inc
imul
adc
dec
push
(bad)
cmp
push
cmp
(bad)
sub
imul
pop
pusha
imul
dec
jo
stc
repnz
mov
dec
push
xchg
sbb
sub
xlat
sub
clc
mov
pop
push
shr
jo
test
pop
push
mov
sub
push
clc
or
je
pop
push
test
div
sbb
inc
adc
out
lds
(bad)
out
mov
push
or
cdq
mov
sbb
out
call
retf
push
scas
das
pop
add
add
jcxz
shr
mov
and
dec
inc
mov
lahf
adc
xlat
loope
shl
imul
sbb
push
lock
(bad)
fcomp
clc
aas
pop
ja
ins
sub
stos
adc
(bad)
cmps
jle
add
popf
ja
es
cli
add
cs
xor
rcl
js
cmc
xor
(bad)
dec
repz
aad
add
add
bound
pushf
dec
xchg
pop
xchg
cld
sbb
loope
shl
(bad)
and
lods
mov
jle
into
xor
das
mov
dec
dec
adc
dec
aaa
mov
mov
aad
cdq
mov
mov
mov
fisubr
xchg
and
mov
jbe
aam
repz
pop
inc
ror
mov
sbb
jmp
test
imul
xchg
sub
jns
mov
(bad)
shl
fisttp
xor
retf
aam
popf
mov
mov
scas
sbb
loop
fist
inc
pop
jmp
fninit
and
or
stos
pop
ds
shl
pop
repnz
inc
stos
cs
fcmovnu
ret
push
cmps
sbb
in
pop
mov
in
lahf
and
or
cdq
ins
clc
lods
cs
jne
cs
adc
clc
cmp
xchg
movs
mov
cmps
adc
in
pop
ja
xchg
sahf
mov
mov
jle
jae
pop
xchg
inc
fld
cmp
test
and
stos
mov
std
popa
push
pusha
push
inc
mov
adc
pop
popa
addr16
mov
push
cld
pusha
jge
jbe
dec
jg
imul
jnp
cmp
jns
imul
sub
imul
pop
push
imul
pop
jo
sub
inc
sub
(bad)
sbb
cmps
sub
imul
or
inc
out
pop
and
push
outs
adc
dec
shr
dec
sub
jae
mov
adc
jg
lahf
popa
dec
adc
mov
leave
or
stos
dec
ins
pop
sar
mov
pop
or
and
push
jge
jecxz
mov
cdq
retf
inc
fs
xchg
or
aas
jge
loopne
enter
dec
test
(bad)
jecxz
sbb
ins
lea
addr16
int
mov
jl
xchg
mov
cdq
dec
aad
lock
pop
mov
xchg
out
into
add
mov
mov
add
xor
pop
xor
xor
xchg
mov
push
add
js
popa
or
cmp
lods
dec
(bad)
xlat
xlat
mov
movs
fwait
lods
pop
pop
adc
fstp
jbe
out
enter
ror
push
test
call
push
cwde
jle
aad
leave
inc
mov
cwde
fs
enter
jmp
mov
pop
xchg
jge
loop
das
adc
shl
(bad)
(bad)
jge
mov
lock
add
rcl
stc
ret
mov
test
pop
out
movs
adc
jno
inc
mov
add
aas
jbe
int3
lea
pop
in
add
inc
aas
mov
cmps
clc
stc
lock
movs
mov
mov
mov
push
add
mov
pop
jmp
mov
jg
mov
jecxz
out
mov
cwde
dec
out
ret
xchg
loop
aad
sbb
sub
cmp
cmp
test
add
jbe
pop
pop
fwait
dec
jb
push
mov
arpl
call
nop
xor
xor
cwde
sub
shr
das
aas
aad
int
xchg
pushf
lods
xchg
pop
and
inc
imul
inc
mov
bound
aam
sbb
mov
xor
adc
les
push
fmul
imul
pop
mov
adc
retf
push
cs
leave
add
ins
push
cmp
addr16
adc
adc
dec
mov
imul
ja
out
test
jmp
div
cld
sub
popa
push
adc
sbb
popa
push
icebp
or
ja
call
outs
dec
out
adc
js
sub
data16
dec
outs
fmul
jl
cmp
mov
mov
sub
aas
xchg
inc
sub
add
adc
cmp
in
lock
es
mov
jne
xchg
or
aam
fadd
jmp
jo
in
sbb
inc
int
and
bound
ret
xor
adc
mov
aam
xor
lods
and
push
ss
push
pop
aaa
jge
mov
and
push
loope
dec
mov
xchg
imul
fst
sbb
dec
lds
mov
xchg
adc
sbb
add
or
test
cwde
pop
lods
clc
pusha
cli
psubusw
add
xor
mov
repz
sub
and
adc
stos
(bad)
jg
adc
sti
cmp
and
stc
adc
xor
inc
(bad)
cmp
pusha
(bad)
dec
pop
push
cmps
sub
imul
dec
jno
sbb
xlat
cmp
mov
jl
(bad)
push
push
(bad)
fisub
dec
dec
in
dec
sub
sub
rcr
dec
and
bound
out
push
pusha
rcl
out
outs
fwait
mov
sub
cdq
stos
sub
out
and
lea
mov
lods
imul
das
scas
xchg
rcl
adc
push
sbb
neg
test
enter
cs
cld
mov
in
dec
cmp
add
pop
sub
sbb
cmc
imul
add
add
ror
inc
mov
inc
xor
mov
pop
push
cmp
xchg
jp
pop
mov
outs
inc
jl
lods
xor
ror
leave
and
xlat
ror
mov
(bad)
idiv
jmp
add
(bad)
mov
aam
cmc
cld
ins
push
mov
aad
pop
call
mov
in
xchg
stos
ficomp
push
xchg
jno
push
fwait
add
pop
fucomp
retf
pop
dec
popf
inc
retf
ud1
fistp
mov
mov
add
(bad)
aas
dec
ret
out
inc
jmp
data16
inc
sbb
xor
out
shl
pusha
in
ins
dec
push
sti
mov
adc
push
std
mov
cld
and
xor
jle
sbb
fwait
iret
cli
xchg
jmp
hlt
push
enter
movs
scas
mov
je
xor
nop
das
adc
jge
and
cdq
xor
xor
pop
and
stc
cmp
fidiv
mov
inc
enter
cs
hlt
xchg
or
dec
shl
xchg
xchg
popa
dec
shl
pop
xchg
mov
fdivrp
mov
sub
push
mov
xchg
add
pop
movs
sub
(bad)
lock
lahf
mov
cmp
fwait
scas
pop
mov
and
test
push
cli
imul
(bad)
or
mov
pop
inc
cmps
sub
neg
dec
(bad)
xlat
push
sbb
hlt
sub
pop
in
dec
inc
fldcw
inc
jg
xor
in
push
push
enter
push
or
outs
out
jle
or
jmp
js
call
adc
push
pop
popa
clc
sbb
and
add
ret
outs
mov
leave
daa
call
dec
pop
or
fisttp
sub
stos
outs
int
cdq
mov
(bad)
cmp
cdq
mov
dec
inc
aad
loop
mov
push
mov
xor
in
mov
test
fst
in
ret
rol
xchg
jmp
jmp
mov
fild
in
in
ficomp
and
fcomp
xor
enter
adc
jge
cmp
or
sub
push
fnstenv
sbb
sub
cmp
sub
mov
jo
(bad)
xchg
ds
push
and
and
lock
and
scas
xchg
inc
add
cmp
mov
xchg
das
mov
(bad)
mov
cwde
mov
xor
lea
test
outs
dec
cli
iret
iret
lds
mov
jle
cmps
pop
loope
mov
cmp
inc
stc
add
call
adc
cmp
ja
mov
movs
sub
fisub
jp
push
nop
push
sbb
stos
not
and
cmp
imul
call
xchg
fild
cmp
or
popa
cwde
push
dec
mov
and
test
add
add
ins
push
jge
jle
retf
inc
push
add
and
in
fimul
dec
sbb
into
retf
push
addr16
dec
cmp
mov
stos
or
cs
pop
dec
into
fstp
jl
fwait
push
inc
leave
test
pop
mov
daa
mov
dec
lods
lahf
dec
arpl
jecxz
add
shl
inc
ins
ja
cmps
icebp
aas
xchg
jl
stc
inc
mov
mov
imul
ret
mov
imul
lods
xor
movs
or
lods
lahf
sbb
push
cli
dec
jge
idiv
sub
loopne
sub
xchg
sbb
(bad)
xlat
or
idiv
dec
jbe
or
mov
and
out
xor
ret
xor
pop
adc
data16
loop
pop
arpl
jne
jg
test
retf
sub
add
jbe
inc
push
sbb
or
mov
aas
add
sub
xchg
mov
cli
cmp
mov
xchg
ret
xlat
mov
mov
push
shl
adc
das
in
(bad)
lods
or
jae
push
mov
adc
adc
test
xchg
jmp
mov
mov
inc
into
outs
mov
push
rcl
ins
call
mov
or
outs
adc
aad
mov
mov
(bad)
xor
leave
mov
or
mov
add
sub
jg
add
sahf
popf
xchg
out
cmps
mov
(bad)
sub
inc
loopne
mov
jle
and
rcr
xor
outs
enter
or
scas
mov
mov
sub
xor
push
mov
add
mov
dec
mov
mov
idiv
cmp
cmp
repz
das
mov
hlt
repnz
aam
nop
push
mul
or
lods
retf
sub
mov
sub
mov
lea
jp
adc
mov
jnp
pop
loope
jns
mov
mov
ret
std
add
or
xchg
or
in
pop
adc
push
mov
lods
mov
sahf
popa
(bad)
cmp
lahf
or
push
imul
(bad)
popa
scas
pop
imul
(bad)
je
rep
dec
lods
(bad)
or
add
iret
adc
scas
add
jmp
sbb
or
mov
int3
pop
cmp
mov
(bad)
jae
mov
pop
in
jp
push
cld
lea
inc
sahf
xchg
addr16
retf
pusha
or
xor
jbe
cmc
shl
(bad)
popa
sub
adc
push
mov
fs
les
mov
sbb
mov
lds
outs
cwde
xchg
mov
fld
es
bound
mov
test
fwait
loop
call
retf
sub
push
movs
leave
push
sbb
sub
mov
mov
test
div
and
stos
stc
(bad)
ret
mov
aaa
je
mov
cmp
push
cs
mov
or
and
ss
dec
push
cmp
sbb
test
retf
stc
mov
dec
push
mov
(bad)
retf
js
add
cli
and
push
(bad)
jmp
iret
iret
xor
pop
xchg
in
sub
mov
inc
ins
cld
icebp
or
xlat
pop
sub
aam
in
push
pop
dec
stos
cmp
sub
fidiv
daa
test
jmp
stc
inc
mov
shr
push
retf
test
and
ds
(bad)
into
test
retf
mov
mov
es
jns
out
pop
push
mov
mov
das
xchg
or
xor
imul
jb
jg
out
adc
sti
js
popf
int
mov
jge
out
add
or
repnz
test
pushf
repz
or
dec
mov
setg
dec
fist
mov
sbb
inc
stos
pop
arpl
sahf
adc
jge
inc
bound
in
scas
sbb
stos
xor
rcr
xor
adc
or
stc
xor
idiv
je
int3
fldcw
loopne
xchg
(bad)
in
cmp
push
int
sub
sbb
or
in
jne
add
nop
ja
ins
in
push
dec
sysenter
out
or
arpl
mov
pop
cmps
fucomip
clc
push
pop
mov
je
and
(bad)
cs
je
sbb
test
xchg
pop
jnp
pop
dec
jo
test
mov
dec
push
xor
int
inc
push
aad
sbb
pop
mov
(bad)
arpl
lods
dec
aad
inc
movs
pop
cli
cmp
movs
jg
xor
fsub
sub
movs
sub
mov
sub
dec
mov
and
mov
jb
shl
sbb
mov
leave
imul
cmp
or
(bad)
add
ficom
pop
(bad)
shr
adc
pushf
inc
ret
mov
dec
(bad)
xor
inc
imul
lods
ins
rol
loope
imul
sbb
jle
loope
adc
jecxz
push
fistp
loope
and
imul
(bad)
loop
push
repz
sbb
pop
dec
rcl
repnz
aam
call
out
add
pusha
mov
xchg
xchg
test
inc
cdq
bound
sbb
mov
add
ss
aaa
sub
xor
dec
hlt
sti
iret
ja
bnd
cmp
inc
jae
sbb
int3
scas
xchg
lods
ja
mov
sbb
or
fadd
mov
cmp
imul
jae
xchg
int
(bad)
aad
push
in
and
sti
pop
xchg
loop
cmp
lods
pop
lods
dec
fist
dec
adc
push
cmp
imul
mov
fsub
xchg
les
ret
cmovle
mov
fmul
mov
mov
pop
cwde
mov
shl
and
lahf
aas
xchg
cmps
nop
jmp
in
mov
daa
mov
mov
clc
cmp
jnp
in
outs
(bad)
daa
dec
jbe
in
test
enter
dec
leave
addr16
xchg
mov
xlat
mov
scas
or
loope
int
test
xor
mov
pusha
adc
jmp
imul
cmp
pop
and
pushf
imul
push
jmp
in
or
sub
test
xchg
mov
xor
sbb
cmps
mov
fs
lods
mov
ins
xchg
lods
dec
xchg
jmp
cmps
inc
lock
xor
inc
inc
fwait
xor
adc
dec
test
sub
push
add
mov
sbb
xchg
hlt
inc
pop
call
nop
popf
ret
pusha
dec
jmp
lds
xchg
jae
jns
push
ret
cmc
std
aad
shl
inc
packssdw
nop
(bad)
jle
mov
lods
js
inc
adc
and
pop
xor
inc
out
fidiv
out
test
outs
cmp
mov
in
ins
cli
sbb
or
aaa
mov
aam
aas
cwde
xchg
addr16
movs
shl
pop
xor
scas
jl
inc
dec
pop
xchg
pushf
retf
cwde
inc
xor
hlt
ret
fadd
push
xor
clc
out
push
mov
out
sub
pop
xor
sbb
xor
in
cwde
(bad)
lods
cmc
daa
pop
push
mov
cmp
(bad)
dec
mov
jmp
(bad)
adc
sbb
or
lods
enter
lods
ret
mov
and
retf
mov
pop
(bad)
aaa
sub
inc
mov
sbb
fist
shl
loop
mov
imul
mov
stos
jmp
jp
out
push
imul
sar
not
cwde
enter
js
sub
cmps
xlat
popf
push
cmp
mov
jge
jae
cld
xor
and
push
fld
out
jae
mov
cmp
int
(bad)
pop
inc
push
aas
mov
repnz
stos
xor
pop
(bad)
jl
sub
inc
aas
adc
ror
les
daa
adc
sti
es
cwde
dec
sbb
fwait
jbe
xor
push
(bad)
fiadd
shr
rol
add
not
xchg
or
int3
bound
mov
inc
lods
pop
and
rol
out
mov
cmp
fidiv
xor
xor
int3
das
inc
aas
add
test
add
int
rol
adc
xor
xchg
js
mov
js
jp
push
sub
xchg
inc
das
adc
mov
in
popf
aam
cmp
jo
and
add
ss
adc
push
mov
enter
in
ffreep
pop
sbb
sbb
xchg
xchg
push
add
jg
jb
cmp
push
or
push
int3
out
(bad)
jb
inc
mov
sbb
cdq
mov
fs
push
je
or
stos
pop
pop
fld
mov
bound
out
push
aam
cmp
aam
pushf
shl
adc
mov
inc
and
stos
push
inc
dec
scas
dec
mov
jecxz
xor
push
push
stos
jae
sub
leave
std
mov
leave
jb
js
dec
mov
push
je
ins
sbb
lock
xchg
mov
lock
or
push
(bad)
xlat
std
cmc
mov
add
hlt
leave
jecxz
fwait
call
fist
ret
(bad)
mov
(bad)
rcl
bound
in
iret
test
add
inc
inc
ret
outs
xchg
(bad)
iret
or
jecxz
in
push
sub
mov
aad
or
and
test
mov
call
push
and
data16
inc
sbb
out
xchg
sub
mov
retf
cld
pop
inc
dec
add
xor
dec
jmp
adc
jno
ss
xchg
(bad)
std
xchg
shl
pushf
aas
xor
stos
lahf
cmp
arpl
leave
cdq
xchg
imul
sbb
dec
sbb
jo
mov
push
xchg
pop
les
repz
mov
addr16
mov
(bad)
mul
leave
pop
pop
xchg
(bad)
xchg
(bad)
pop
imul
(bad)
xchg
mov
ja
icebp
inc
mov
call
lea
cmp
dec
inc
dec
shr
push
scas
outs
les
test
fistp
jmp
sbb
int
sub
pop
jg
sub
jmp
adc
fbld
jne
mov
outs
iret
xchg
scas
(bad)
retf
popa
cli
popf
js
mov
xchg
arpl
adc
in
shr
jmp
inc
cmp
mov
fwait
test
shr
test
push
test
sbb
jle
and
aas
cmp
cmp
adc
adc
mov
icebp
je
mov
movs
pcmpeqw
mov
fstp
xchg
mov
mov
std
movs
test
sub
sti
adc
cmp
and
int3
xor
aam
enter
cmps
lds
push
cmp
rol
(bad)
rcl
call
bound
je
adc
add
mov
outs
mov
loope
xor
cmps
jle
fcom
xchg
aam
jmp
jp
mov
inc
ins
xlat
pop
jle
lods
mov
ror
and
jge
out
ins
inc
(bad)
or
xchg
sub
cmp
in
push
push
loopne
inc
dec
in
push
inc
std
and
dec
shr
lods
inc
idiv
push
mov
popf
in
ror
lea
(bad)
push
das
aas
dec
or
pop
lods
into
sbb
in
xchg
std
adc
jge
mov
mov
cmp
pop
out
dec
xor
stc
int3
push
xor
lea
call
dec
retf
push
xchg
leave
mov
test
test
push
pop
push
fcomp
stc
sbb
push
adc
iret
sar
mov
push
jmp
pop
and
pop
lock
out
stos
xchg
pop
mov
mov
loope
(bad)
fmul
pop
jne
into
retf
outs
(bad)
call
mov
mov
sub
retf
lods
mov
cmp
pusha
pop
jle
sub
jne
mov
xor
push
sar
adc
fisub
test
dec
jne
(bad)
retf
loope
popf
fisttp
fcom
jle
ja
pop
jp
cmps
(bad)
mov
push
mov
dec
mov
sti
xor
stc
mov
add
push
sub
jmp
jb
imul
push
mov
stos
les
ret
xchg
xor
lods
push
icebp
ret
xchg
inc
adc
xchg
and
xchg
or
cmp
adc
xor
bnd
es
push
mov
arpl
jecxz
push
mov
push
test
ficomp
movs
popa
cmp
inc
stos
sbb
sbb
pop
lahf
test
xchg
cmps
adc
out
push
sbb
pusha
test
mul
push
or
sahf
push
fcom
ret
add
or
sub
pop
frstor
into
mov
adc
test
jp
enter
cld
fs
push
adc
aas
add
or
test
adc
sub
push
fsubr
sbb
jo
pop
int3
sbb
push
sbb
and
iret
mov
add
or
nop
add
sub
scas
mov
or
add
mov
and
inc
push
loope
cmc
xchg
mov
retf
out
mov
jmp
shr
mov
mov
into
aam
nop
pushf
leave
sub
les
mov
hlt
mov
frstor
fisttp
(bad)
cmp
jns
outs
ret
inc
fucomi
imul
test
(bad)
xlat
cmps
mov
and
or
dec
fnstsw
data16
arpl
out
mov
and
out
popf
or
movs
fcom
(bad)
xchg
pop
dec
dec
lahf
fcom
hlt
sbb
mov
int
outs
mov
push
xchg
jnp
inc
mov
inc
call
fwait
xchg
outs
mov
ins
xchg
pusha
mov
mov
scas
icebp
mov
pushf
test
movs
or
repz
out
jnp
push
mov
hlt
or
stos
sbb
push
out
or
outs
xchg
not
push
pushf
xchg
repnz
and
mov
and
pop
popa
jg
and
sub
dec
and
add
aam
mov
fwait
ds
call
sti
mov
adc
jecxz
mov
add
nop
shl
pop
shl
xor
jmp
and
lods
or
cmps
retf
adc
outs
or
cmp
in
shl
out
clc
cld
test
dec
test
adc
jns
xchg
icebp
ss
ret
gs
add
cwde
dec
jb
in
xchg
or
lock
fs
cmps
repnz
sti
lods
sub
jb
lods
xor
(bad)
in
(bad)
xor
adc
sub
int3
jb
shl
cld
add
adc
fnsave
pop
jmp
sbb
shl
push
int3
popf
push
mov
xor
jmp
test
inc
jne
mov
repz
mov
jmp
stos
sub
dec
lds
adc
mov
cmps
ja
jp
xor
retf
push
(bad)
cmp
arpl
sub
rcl
mov
xor
push
adc
inc
or
xor
cmc
mov
or
pmuludq
xor
in
dec
adc
sub
fimul
int3
ss
call
(bad)
arpl
mov
es
mov
daa
ins
sbb
mov
jmp
pop
leave
push
dec
leave
popa
or
cdq
sahf
ror
xchg
pop
fst
add
div
in
lahf
jb
pop
or
or
sbb
mov
scas
pop
sti
pop
pop
mov
or
int3
shr
add
dec
add
pop
aaa
mov
cmps
add
push
pop
mov
mov
pop
int3
fs
mov
cdq
nop
pushf
pop
pop
movs
ins
mov
mov
push
jb
jmp
call
push
jge
add
add
pop
rol
inc
dec
dec
xchg
fdivr
push
lods
scas
sbb
stc
or
mov
bound
or
pushf
and
call
adc
mov
mov
imul
dec
mov
xchg
mov
bound
retf
cwde
icebp
ja
scas
test
nop
inc
rol
pop
in
cmp
lahf
push
sbb
dec
fild
pop
call
(bad)
std
xchg
in
dec
sub
iret
pop
cmps
mov
and
out
movs
call
shr
push
xchg
in
jecxz
lods
pop
mov
pusha
out
leave
scas
jle
lock
(bad)
in
jbe
jmp
and
scas
xchg
xlat
por
push
inc
jnp
cmp
retf
cmps
push
lea
dec
loope
mov
int3
cmp
push
or
dec
jno
jno
pop
cli
(bad)
xor
dec
ffree
in
stos
and
push
sbb
aam
mov
or
mov
add
int
mov
push
test
adc
mov
movs
test
xor
add
inc
cmp
out
lea
(bad)
mov
mov
sti
jmp
pop
cwde
(bad)
leave
ds
mov
mov
push
imul
mov
or
mov
jmp
add
xor
scas
pop
movs
xlat
push
ret
int
nop
lea
cmp
sbb
aas
and
adc
pop
jle
cmp
retf
pop
movs
fidiv
fisubr
cmp
push
aam
jp
fadd
mov
inc
dec
mov
cli
mov
or
mov
lahf
xor
mov
or
xor
or
sti
into
xor
aad
mov
inc
(bad)
pop
add
gs
std
and
jb
rol
and
pop
dec
and
out
xor
push
leave
dec
push
icebp
adc
cmp
fstp
ins
mov
xor
aas
pushf
fstp
xor
inc
mov
hlt
enter
aas
fwait
mov
push
inc
in
hlt
or
mov
test
sub
fidiv
hlt
(bad)
or
loop
mov
pop
addr16
push
jp
adc
jl
push
mov
inc
test
xchg
pop
lea
pop
and
pop
mov
or
jmp
adc
jmp
sub
jnp
jns
(bad)
retf
fild
aad
cmp
call
adc
sub
mov
mov
pop
sub
or
scas
xchg
adc
cmp
inc
mov
nop
clc
xor
add
push
push
add
loopne
jne
push
scas
and
adc
add
rcl
and
aam
dec
jg
push
mov
pop
out
dec
push
inc
sbb
sub
(bad)
sub
jmp
xchg
bound
dec
jns
ins
les
or
hlt
adc
xlat
ins
leave
xchg
bound
jnp
(bad)
ror
xchg
fistp
fcomip
mov
shl
arpl
push
cmps
sbb
add
inc
sbb
inc
inc
jge
bnd
xchg
xor
mov
nop
ins
dec
adc
mov
pushf
inc
outs
push
aam
or
jne
fistp
jmp
xchg
outs
enter
and
shr
xchg
bound
jg
fild
shl
rol
pusha
out
dec
push
(bad)
cmp
cmps
sub
idiv
dec
inc
idiv
dec
inc
loopne
pop
push
(bad)
and
jmp
aaa
ffree
jmp
mov
adc
jns
das
xchg
mov
ret
pop
push
or
mov
fxch
out
das
xchg
push
mov
mov
sub
cmp
fisttp
inc
push
inc
jle
shl
ds
mov
test
dec
inc
ret
fidivr
fcmovbe
sahf
inc
aam
outs
imul
lds
cdq
xchg
enter
sub
outs
inc
in
xor
(bad)
(bad)
or
dec
sbb
mov
in
xor
call
repz
mov
cmp
cmp
stc
cli
adc
pop
pop
daa
fnstsw
rol
movs
pusha
or
jecxz
out
sahf
cld
cld
jle
jns
test
out
pop
xlat
sbb
mov
rol
sbb
sbb
inc
in
xchg
cmps
cmp
adc
jmp
mov
les
xor
mov
mov
(bad)
enter
xlat
pop
daa
add
adc
jecxz
fstp
int
cmp
leave
dec
les
ja
pop
adc
loopne
out
jmp
stc
das
(bad)
jns
data16
rcr
test
aas
in
scas
and
xchg
(bad)
dec
jb
inc
ror
out
jecxz
es
retf
arpl
ins
and
repz
jno
sti
and
xor
and
fstp
xor
dec
pop
or
push
in
shl
call
into
cmp
push
popf
pusha
add
lods
sahf
fwait
jp
jecxz
mov
inc
sbb
daa
imul
sbb
or
add
cmps
cmps
add
jmp
(bad)
push
lahf
or
imul
mov
push
mov
push
push
sti
pop
mov
pop
sub
mov
test
stos
test
add
cmp
mov
add
or
gs
jg
aam
mov
mov
xlat
inc
inc
push
iret
dec
adc
lds
stos
add
cmc
stos
push
fstp
mov
xchg
cs
jmp
outs
aad
jno
sar
mov
ja
cmps
pop
outs
xchg
mov
stc
jnp
sbb
out
push
jne
mov
push
dec
in
inc
ret
gs
mov
cmp
mov
sub
aam
lods
jg
ret
outs
in
xor
add
xchg
add
daa
int
add
pop
mov
mov
add
js
pop
mov
sub
mov
(bad)
enter
xchg
fdivr
push
dec
push
push
cmp
push
sbb
out
pop
push
xchg
sub
out
dec
inc
idiv
dec
inc
repnz
dec
loope
push
pop
out
xor
in
repnz
jecxz
jge
idiv
movs
shr
jns
vpacksswb
call
xchg
adc
mov
jl
and
xchg
icebp
fidivr
std
fnsave
in
xor
push
or
je
add
fisttp
xchg
add
lds
sar
pop
ret
sub
leave
mov
in
jp
scas
aas
mov
je
xchg
push
push
std
xchg
aam
jo
sbb
or
in
add
dec
fadd
mov
cdq
leave
repz
loope
loop
and
mov
add
push
in
call
test
clc
push
dec
leave
ins
iret
idiv
xchg
xchg
clc
div
cwde
pop
mov
push
push
sub
(bad)
into
aaa
cwde
gs
cmp
retf
loopne
cli
cmp
or
push
aas
mov
jnp
jne
frstor
and
xor
and
outs
in
jbe
retf
mov
adc
add
jmp
xchg
sub
sub
cmp
jg
and
push
ficom
in
xchg
stc
mov
sub
dec
ret
mov
jmp
adc
stos
ror
mov
out
add
dec
call
popa
rol
sub
dec
pushf
ds
inc
imul
mov
sti
and
fcom
ds
retf
loop
sbb
mov
xor
push
cmps
push
add
xlat
lahf
imul
push
cmps
lods
in
fcmovne
sbb
mov
ror
cmp
pop
(bad)
xor
or
rcr
iret
adc
cmp
out
lods
adc
call
add
sti
ja
push
mov
xchg
push
cmp
xchg
test
(bad)
mov
dec
clc
sub
jmp
pop
jae
jns
jecxz
mov
sti
or
mov
icebp
call
fcom
push
fisttp
das
push
out
cmc
add
add
add
out
dec
test
(bad)
loopne
cmps
push
jo
pusha
or
mov
sbb
or
xlat
test
das
jg
dec
sbb
test
mov
ins
loop
pop
xchg
add
mov
inc
xor
sbb
es
sahf
imul
push
push
rol
jns
sbb
imul
push
xor
cmp
xlat
push
test
clc
xchg
inc
pushf
sub
pop
test
inc
jl
ror
loop
mov
or
add
add
cli
dec
div
stos
sti
(bad)
jne
scas
(bad)
sbb
out
or
mov
adc
scas
mov
fistp
mov
add
hlt
and
loope
and
(bad)
scas
lahf
imul
inc
idiv
dec
adc
or
neg
pop
inc
(bad)
sub
idiv
dec
push
in
dec
push
out
inc
dec
repnz
pop
in
push
dec
push
out
pop
xor
push
loop
sub
mov
and
cmp
dec
mov
mov
jmp
mov
jmp
aam
pop
lahf
retf
push
mov
ds
push
ja
and
shl
repz
loopne
(bad)
mov
addr16
jge
push
out
repz
repz
fcmove
mov
mov
xor
mov
popa
imul
dec
jno
and
sbb
pop
retf
(bad)
and
dec
jp
jg
(bad)
cli
icebp
jle
das
rcr
pop
or
dec
loopne
lods
fs
push
shr
xchg
aas
mov
iret
in
(bad)
dec
nop
sbb
sbb
inc
add
adc
nop
xlat
imul
loope
pop
test
xor
pusha
push
cmp
mov
lods
icebp
push
in
xchg
shl
lock
lahf
or
mov
jns
arpl
movs
es
jl
jbe
sub
xchg
or
xor
jo
lods
sbb
push
jo
jge
cli
pop
js
jp
stos
pusha
jbe
fs
(bad)
arpl
add
imul
lock
retf
enter
sub
ret
scas
jmp
adc
popw
push
les
out
pop
neg
ror
xor
loop
aam
cmp
fidiv
cmp
movs
cld
add
lock
dec
adc
mov
shr
add
or
push
cmps
mul
sbb
jo
jno
movs
push
loope
pop
mov
dec
popa
outs
adc
(bad)
cmps
mov
inc
repnz
rcr
scas
push
daa
pusha
push
test
adc
or
jnp
popf
je
sbb
imul
adc
push
jp
and
pusha
retf
push
push
inc
mov
cmp
test
movs
ret
sar
test
outs
jo
(bad)
xor
iret
mov
mov
ds
sub
cmp
cmp
mov
outs
mov
fyl2xp1
xor
not
arpl
mov
arpl
cs
into
ja
xor
dec
clc
rcr
pop
cmc
mov
call
daa
jecxz
rcr
cmps
sub
mov
inc
pop
and
outs
mov
mov
cmp
adc
fwait
les
push
push
repz
ror
xor
retf
jle
rcl
add
std
mov
inc
shr
push
mov
push
cmp
inc
mov
int3
mov
adc
aad
xchg
sbb
les
mov
ror
test
rcr
leave
xchg
jg
je
jb
shl
pop
hlt
push
sub
push
clc
or
in
ret
pop
jge
ja
and
stc
stos
mov
dec
aas
xor
mov
mul
cmp
outs
inc
mov
xchg
fucomi
repnz
cdq
call
inc
dec
xor
and
out
aas
or
aad
test
dec
mov
pop
ins
mov
(bad)
adc
call
xor
(bad)
jmp
shl
ror
outs
adc
sub
jne
(bad)
push
lea
ja
push
fnstcw
jb
push
in
shl
jge
shr
ins
jp
jne
ficom
adc
or
xlat
and
pop
out
sub
fisub
xchg
div
or
adc
adc
add
pop
loope
adc
daa
mov
ins
jb
mov
fiadd
push
jnp
movs
hlt
jbe
sub
repnz
add
xchg
rcr
pop
sar
and
jbe
sub
rol
mov
cmp
div
or
or
jle
and
and
or
cmp
sub
or
lea
data16
cmp
push
popa
push
add
(bad)
xchg
xor
push
dec
push
shl
leave
shl
inc
outs
mov
fisttp
sbb
fbstp
in
(bad)
fs
push
sahf
fdiv
and
or
push
mov
push
push
push
mov
inc
inc
dec
fisttp
pop
pop
(bad)
pop
cmp
push
ficom
adc
iret
imul
ja
neg
mov
call
sbb
push
fcomp
fdiv
push
add
pop
icebp
pop
(bad)
int
ret
pop
inc
mov
push
fimul
dec
push
addr16
cmp
mov
into
jb
ds
push
enter
mov
add
pop
inc
jns
or
sbb
scas
mov
outs
xchg
mov
jno
out
out
mov
sbb
adc
mov
aad
inc
push
nop
push
ins
adc
mov
cwde
(bad)
js
sbb
jle
sub
cwde
cmps
mov
clc
ficom
loope
lea
inc
sbb
xchg
in
push
repnz
pusha
scas
jo
in
inc
or
imul
mov
jg
mov
ret
mov
jl
or
xchg
sbb
push
scas
inc
pop
lock
popf
repnz
cwde
retf
mov
fs
cmp
loopne
jne
lods
pop
jns
cmp
call
cmp
sub
sbb
lods
mov
fsubr
pop
scas
in
jae
adc
cmc
mov
test
dec
cld
and
pop
mov
xor
sbb
rcl
inc
push
xchg
xor
inc
push
push
rcl
push
cld
push
call
sub
mov
cmp
cs
not
pop
addr16
sub
adc
fdivr
pop
fmul
int3
sub
lds
and
icebp
das
xor
rcr
dec
gs
bound
jo
xor
bound
jo
and
les
pop
xlat
cmp
(bad)
xor
cdq
or
push
pushf
mov
add
mov
push
mov
mov
pop
mov
adc
pop
jg
inc
js
test
jp
retf
push
dec
dec
scas
sub
adc
sti
sub
lahf
sbb
jg
pop
jp
xor
mov
xor
push
mov
pop
or
adc
inc
sbb
pop
leave
mov
pop
sub
into
jb
jl
iret
dec
jb
mov
dec
inc
test
cmp
(bad)
pop
repnz
push
and
mov
add
daa
sub
dec
(bad)
addr16
mov
aad
std
sti
out
mov
dec
hlt
mov
and
push
jns
loop
daa
add
pop
pop
push
lods
add
push
pop
out
pop
adc
and
es
call
pop
fadd
inc
imul
mov
and
les
rcl
or
xchg
dec
loop
ins
(bad)
pop
mov
push
mov
out
mov
and
pop
mov
xor
xchg
jae
cmp
mov
jns
les
cli
imul
xor
sbb
sub
std
jno
or
sahf
add
sub
cmps
jl
loope
sbb
sbb
out
sbb
icebp
mov
mov
xor
xor
loopne
mov
jnp
dec
cmps
sar
sub
sbb
daa
(bad)
and
(bad)
fst
cld
shl
ss
das
in
shr
test
repnz
arpl
mov
mov
out
outs
xchg
jne
pop
pop
pop
je
sar
fdivr
jl
dec
ret
and
sbb
inc
dec
inc
sbb
and
pop
and
stc
mov
xor
pop
inc
add
inc
sbb
pop
pop
push
inc
idiv
stos
test
and
loope
shr
popf
das
mov
xchg
sbb
mov
sub
out
xor
sbb
loope
and
aad
adc
jbe
mov
xchg
nop
in
cmp
inc
in
out
(bad)
mov
fs
xchg
(bad)
push
pop
mov
pop
mov
loope
test
sub
fstp
xchg
lea
xor
nop
loopne
pop
aam
icebp
ds
jbe
pop
int3
neg
dec
hlt
(bad)
mov
xor
sub
repnz
pop
push
mov
loop
push
pusha
not
jge
add
jge
test
adc
sbb
adc
jns
and
fst
mov
popf
loopne
jmp
pop
adc
cmp
push
sub
inc
sbb
cmps
sub
xchg
ins
adc
jns
inc
mov
in
and
xchg
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
lods
jg
push
sub
jo
cmp
out
adc
pop
inc
out
dec
push
sbb
mov
pop
push
imul
sub
inc
test
cmps
imul
inc
mov
pop
push
idiv
pop
push
out
pop
push
imul
jge
neg
cmp
adc
cmp
(bad)
sbb
js
mov
cdq
mov
sub
outs
pop
mov
pop
pop
mov
or
dec
ret
out
jmp
movs
pop
mov
imul
jo
adc
add
and
mov
jge
add
or
in
xchg
mov
call
(bad)
stos
lds
adc
inc
pop
inc
push
or
push
push
lahf
sub
jne
(bad)
and
push
inc
adc
xor
cmp
fldcw
adc
rcl
cmp
icebp
icebp
and
add
sub
dec
(bad)
shr
mov
aas
stc
push
add
sub
adc
push
fwait
pop
or
ins
jp
xor
mov
loop
or
mov
ret
xchg
cmc
dec
push
out
inc
stc
popa
mov
sbb
sti
sbb
outs
imul
pop
aaa
or
addr16
pusha
adc
jb
dec
mov
xor
cmp
and
cmp
(bad)
cmp
cmp
adc
pop
fisttp
xchg
xchg
cmc
stos
and
les
inc
scas
ret
(bad)
mov
test
xchg
cmp
add
out
cmp
popa
jb
jmp
inc
jl
add
add
xchg
int3
add
shl
and
fisttp
dec
mov
adc
lahf
adc
adc
shr
les
and
mov
cmp
cmp
aam
mov
scas
stos
sbb
cli
lods
mov
je
arpl
in
loope
imul
retf
mov
call
jo
jl
cmp
cmps
add
and
stos
fwait
hlt
add
cdq
mov
push
inc
adc
push
jecxz
sub
mov
push
movs
std
push
adc
(bad)
add
inc
lock
scas
jp
(bad)
(bad)
into
push
das
dec
mov
mov
add
mov
fisub
in
adc
mov
ins
dec
mov
add
pop
out
cmps
or
jl
retf
pop
dec
xlat
dec
hlt
jg
and
lea
add
or
mov
inc
out
into
jae
sbb
pop
int3
mov
xor
push
pop
adc
lock
sub
mov
ss
mov
in
ret
leave
cmc
pop
xlat
push
sbb
jo
test
ss
ins
pop
lahf
pusha
js
add
cmp
mov
mov
mov
fst
mov
fcomp
push
jge
test
pusha
(bad)
imul
cmps
sub
jo
sub
sub
idiv
jl
movs
pop
test
ror
je
not
xchg
push
neg
rol
leave
gs
int3
fs
inc
sbb
sub
pusha
mov
dec
hlt
mov
inc
outs
push
cs
mov
xchg
gs
dec
xchg
inc
mov
stos
fisubr
xchg
xchg
push
scas
jmp
push
jecxz
popf
cwde
fstp
test
call
inc
fwait
xchg
test
mov
in
pop
out
mov
dec
stos
pop
jecxz
(bad)
mul
push
icebp
ret
icebp
xchg
rcl
inc
jnp
in
pusha
or
popa
scas
sbb
adc
xor
xchg
mov
dec
or
jo
cmc
js
aad
clc
mov
ja
inc
mov
scas
mov
dec
mov
fadd
clc
retf
push
retf
enter
pop
cdq
pop
int
inc
and
ret
clc
retf
inc
xor
cmp
lods
push
xchg
cmp
add
mov
mov
sbb
jno
cmps
sub
inc
icebp
pop
and
jns
jecxz
mov
fwait
pushf
lds
jmp
mov
stos
mov
push
mul
sahf
xor
xor
and
sbb
frndint
addr16
adc
lods
mov
test
adc
mov
jnp
pop
clc
pusha
mov
add
in
mov
int3
ret
fistp
nop
and
rol
pusha
enter
adc
popf
cmp
ins
mov
push
xchg
jmp
dec
cli
xchg
inc
xchg
dec
int
dec
and
data16
jge
in
dec
and
xor
pop
lock
push
stos
fnstenv
cmp
jmp
mov
dec
rol
jno
mov
mov
stos
mov
imul
pop
or
not
sahf
mov
in
jl
mov
cmc
out
push
les
adc
pop
xchg
ss
aad
pusha
ficomp
mov
imul
sbb
pop
pop
ficom
in
fwait
jbe
ret
mov
cmps
shl
stos
cmp
cmp
test
cli
test
outs
in
int3
cmp
cld
imul
sbb
xor
lock
out
adc
mov
cmp
adc
arpl
push
mov
js
pop
lock
sti
mov
push
add
out
xor
add
dec
pop
cmp
xor
pop
mov
cmp
add
or
arpl
aam
mov
(bad)
cli
xchg
or
pop
sahf
xchg
(bad)
in
jns
xor
lock
pop
loope
leave
xor
call
inc
jb
aam
dec
mov
mov
hlt
fadd
stos
fidiv
fmul
push
and
fstp
(bad)
icebp
fnstenv
imul
sub
inc
mov
mov
dec
popw
out
xchg
in
in
pop
fs
test
in
cmp
inc
cmp
je
push
lahf
fbld
sbb
sbb
inc
arpl
push
aad
fistp
adc
mov
cdq
jbe
ins
push
push
cmc
daa
sbb
or
xchg
dec
rol
dec
adc
pop
push
xchg
sub
or
push
(bad)
pop
dec
iret
repz
or
xchg
jecxz
mov
jmp
mov
popa
cwde
iret
xchg
pop
adc
jno
dec
or
cmp
gs
pusha
add
sbb
push
out
pop
jo
cmp
neg
push
push
out
dec
inc
xlat
or
push
inc
dec
loop
dec
dec
fnsave
jg
mov
loopne
sub
xor
xchg
in
scas
div
nop
add
cmps
addr16
push
not
sbb
arpl
call
arpl
jmp
(bad)
or
or
mov
or
push
into
xchg
add
jecxz
int
jo
inc
pop
mov
pushf
mov
xchg
das
jae
and
ret
into
inc
xchg
pop
mov
push
adc
mov
or
pop
sub
inc
(bad)
movs
sbb
mov
pusha
out
xchg
jmp
sbb
jno
push
jge
enter
mov
and
sub
pusha
mov
clc
(bad)
ds
fnsave
adc
leave
or
outs
mov
and
(bad)
xor
mov
fcomp
mov
push
add
test
xlat
add
retf
std
bound
jmp
mov
nop
fs
dec
out
inc
(bad)
mov
or
push
and
xor
adc
push
pushf
mov
movs
(bad)
(bad)
push
aaa
(bad)
lods
push
cli
pop
ins
jb
ret
or
dec
dec
enter
ins
push
das
rcl
inc
xchg
jae
push
sub
call
shr
out
add
fist
fbld
fild
jmp
cmp
jb
clc
cmps
or
lods
stc
push
mov
fst
sahf
pop
mov
cmc
push
imul
mov
mov
out
jl
and
ret
jbe
inc
in
(bad)
das
ret
aad
jo
jne
xchg
jo
push
loope
btr
xor
push
lahf
ds
sbb
or
call
cmp
adc
mov
sbb
fcmovne
jnp
mov
xor
stos
movs
mov
je
pop
test
mov
int
pop
movs
push
scas
xchg
aaa
mov
ds
outs
lods
fisub
mov
in
ss
rol
ret
sub
iret
in
fisub
mov
mov
push
add
call
jbe
add
clc
xchg
mov
push
shl
xchg
pop
stos
mov
mov
xchg
mov
push
int
in
sub
jo
clc
dec
dec
jne
js
mov
pop
(bad)
jmp
pusha
xchg
shl
cmp
lock
cli
xchg
clc
dec
mov
dec
ret
pop
cmp
add
cwde
jbe
mov
aas
mov
sub
jle
rcr
jmp
jecxz
adc
pop
jo
cmp
cmps
sbb
push
cmps
sub
(bad)
sub
imul
outs
jno
cmp
sub
adc
cmp
jle
jmp
bound
inc
jmp
rol
popf
jg
cmp
rol
jb
loopne
clc
push
test
sbb
es
nop
cwde
mov
sbb
dec
push
pop
mov
sar
add
ins
adc
sub
jae
sti
ja
fimul
mov
inc
frstor
mul
cmp
add
jbe
repnz
jmp
jbe
mov
or
jecxz
icebp
ds
or
popa
sbb
sbb
sub
and
inc
mov
(bad)
cmovle
bound
or
out
std
or
sub
int3
fisttp
and
push
das
test
shr
cmp
lock
int3
call
inc
dec
sbb
test
mov
fst
not
(bad)
nop
mov
mov
xor
xchg
mov
mov
and
adc
lea
adc
mov
mov
xor
and
leave
daa
push
xor
cld
and
xchg
arpl
retf
push
xlat
lds
sbb
add
cmc
pop
loopne
enter
adc
mov
xor
mov
(bad)
daa
ins
sbb
repnz
fs
scas
loop
cmp
push
dec
fcom
jecxz
dec
inc
jno
jmp
sbb
test
dec
jecxz
retf
and
mov
test
(bad)
fstp
dec
cmps
jnp
gs
lahf
arpl
and
(bad)
sahf
in
pop
pop
jbe
imul
sub
lea
or
jg
js
adc
test
or
inc
pusha
push
jecxz
mov
les
push
xor
and
xchg
repz
cmp
xlat
xor
cwde
adc
or
adc
addr16
mov
(bad)
in
mov
sub
jb
icebp
xor
aas
icebp
mov
sbb
imul
stc
pop
jne
scas
stos
retf
jo
xor
fst
dec
pop
jbe
add
retf
int
inc
(bad)
push
xchg
mov
or
cmp
pop
xor
bound
mov
add
cmp
xor
push
push
inc
fwait
loop
je
(bad)
jp
dec
mov
add
mov
xchg
outs
push
mov
inc
cmp
pop
adc
pop
jnp
ss
and
popa
bound
shl
imul
or
aam
sbb
xchg
lods
fst
das
(bad)
mul
push
stos
cld
cmp
push
fisub
cwde
or
adc
and
xor
mov
jle
push
sub
lahf
adc
adc
ds
and
stc
mov
ficom
pop
mov
in
pop
mov
pop
jle
sbb
pop
cmp
cmp
or
xor
aas
stos
jae
sar
mov
(bad)
(bad)
xchg
stos
jl
dec
out
add
ror
add
loopne
clc
out
add
(bad)
xchg
sub
nop
push
(bad)
jl
mov
adc
sti
pop
push
icebp
leave
lea
pop
inc
dec
cwde
or
mov
sbb
dec
pusha
das
mov
lods
adc
(bad)
outs
pushf
inc
and
xchg
mov
jge
fisttp
cs
std
cmps
imul
adc
jg
fild
or
aam
ffree
fnsave
clc
loope
data16
add
fisubr
lahf
mov
shr
add
xor
push
pop
loop
hlt
ret
adc
cwde
fwait
loop
inc
repz
xchg
pop
into
sub
and
nop
movs
jae
push
adc
shl
imul
jo
or
repz
mov
scas
mov
dec
out
mov
ror
or
rep
(bad)
aad
or
dec
int3
fldcw
xor
lds
pop
add
mov
je
pop
lahf
mov
jmp
add
adc
xchg
ins
cmc
xchg
mov
xchg
push
jne
and
arpl
out
mov
jp
cmp
into
inc
mov
and
jl
int3
push
mov
rcl
pop
jno
stos
mov
lods
jge
fistp
rcr
das
stos
leave
jl
mov
xor
pop
loopne
add
into
loopne
and
or
icebp
lods
or
push
fdiv
xor
cmps
cli
test
and
push
dec
js
mov
push
leave
xor
and
stos
mov
pop
cmp
(bad)
xchg
icebp
call
in
mov
arpl
mov
push
shl
adc
mov
jge
neg
fnsave
out
ins
push
cmps
dec
pop
inc
jbe
sbb
inc
(bad)
js
inc
in
dec
inc
ret
jae
sbb
xor
jmp
jae
sub
mov
push
dec
das
int3
push
shr
mov
in
jg
aad
mov
clc
inc
xor
jecxz
gs
int
sub
rcr
cs
enter
jmp
sbb
fld1
push
test
int3
add
push
js
fwait
add
sbb
pop
mov
in
push
stc
icebp
stc
and
cld
cdq
xor
sti
and
and
and
push
shl
sbb
hlt
jge
repz
fldenv
jmp
pop
hlt
mov
xlat
jnp
xchg
inc
mov
js
(bad)
(bad)
jecxz
(bad)
retf
or
jge
shl
xor
mov
ret
fwait
nop
inc
std
(bad)
mov
mov
pop
aaa
fcomp
js
cmc
aam
add
mov
fldenv
ret
repz
ss
mov
clc
cs
retf
xchg
into
cli
ins
fmul
sbb
sbb
retf
aas
jmp
sub
jg
mov
mov
mov
sbb
mov
je
adc
test
push
adc
dec
int
fmul
call
push
xchg
jns
jno
repnz
sti
sub
test
fsub
lea
popf
xor
or
shl
cmps
and
jp
jnp
mov
dec
mov
and
(bad)
fisub
pop
mov
fnsave
add
movs
stos
scas
inc
lods
out
mov
add
jne
(bad)
nop
cmps
jae
adc
and
dec
dec
call
lods
xor
loope
push
xlat
lock
stc
inc
xchg
pop
and
mov
ror
push
movs
dec
retf
push
aaa
push
fisttp
mov
jbe
sbb
sub
dec
mov
mov
cmp
mov
pop
pop
icebp
fs
mov
ins
add
ins
pop
adc
xchg
sbb
arpl
xchg
or
popa
cmp
sub
mov
sti
je
stos
adc
stos
pop
push
and
inc
pop
sub
pop
lods
loope
retf
lods
mov
cmp
inc
(bad)
pop
es
sub
pop
ja
les
mov
xor
or
out
lds
enter
dec
lods
mov
das
xlat
cdq
fwait
lds
cmp
dec
jo
fidiv
or
mov
sbb
pop
jae
ins
hlt
scas
mov
pop
shl
in
adc
clc
jge
fld
xlat
scas
test
popf
fidiv
aad
outs
(bad)
std
(bad)
pop
dec
adc
jno
pop
xchg
inc
cli
mov
(bad)
hlt
ds
popa
add
or
mov
mov
dec
cmps
xchg
pop
xor
call
(bad)
shl
fld
push
pop
add
in
cmp
cmp
imul
xchg
push
cdq
cmp
aas
and
mov
add
pop
popa
ds
and
retf
call
lock
in
xor
test
scas
sbb
out
in
adc
imul
xchg
fst
mov
pop
inc
aas
mov
loopne
dec
pop
xchg
push
dec
stc
scas
outs
(bad)
sub
xchg
push
loopne
leave
sti
lahf
xchg
mov
in
(bad)
js
pop
mov
js
push
pop
add
(bad)
rcl
cmp
push
and
and
pusha
sahf
cdq
push
jne
push
sbb
xchg
js
mov
xchg
sti
in
push
adc
idiv
out
mov
in
cdq
sub
test
add
aam
mov
xchg
cs
ror
ffree
in
call
psubd
pop
or
cmc
dec
jle
out
daa
xchg
cmps
ret
sub
nop
cmp
sbb
(bad)
shl
adc
rcr
into
inc
inc
clc
pop
loopne
sbb
mov
jmp
adc
dec
inc
mov
loope
mov
dec
xchg
out
mov
hlt
cld
(bad)
dec
in
sti
cli
add
rol
int3
and
jecxz
cmp
fsubr
sbb
and
fisttp
and
push
fmul
popf
call
imul
test
loop
ins
mov
xchg
mov
in
sub
xchg
xchg
fnsave
sbb
mov
movzx
iret
out
dec
cmc
test
aad
call
mov
mov
scas
push
(bad)
cmp
or
das
out
mov
fisttp
ret
pop
lods
cld
aam
mov
dec
or
arpl
adc
test
jns
mov
hlt
fiadd
es
lods
movs
movs
ja
in
xor
mov
sbb
popa
cwde
mov
push
jns
(bad)
and
dec
pusha
out
and
jecxz
mov
mov
das
in
jnp
fldenv
outs
enter
(bad)
xlat
lahf
into
out
adc
xchg
lahf
cmps
arpl
gs
adc
xchg
dec
sbb
loope
stos
adc
jge
int
or
inc
sysret
jp
adc
add
cmp
nop
mov
sub
xchg
and
xchg
sub
xor
pop
jns
sbb
stos
sbb
cwde
jb
test
into
adc
cld
dec
dec
scas
aaa
call
cmps
lods
push
movs
mov
xor
mov
(bad)
repnz
shl
sbb
xchg
cld
cmp
sub
or
pop
into
inc
outs
xchg
ret
(bad)
ss
popa
lea
call
adc
jae
inc
and
sbb
(bad)
sar
jo
mov
sahf
jb
das
add
push
fst
dec
and
xchg
push
test
sub
push
xor
or
ja
(bad)
and
mov
sar
(bad)
fstp
pusha
enter
lahf
xor
aas
rcr
pop
push
mov
movs
mov
push
and
mov
data16
add
push
mov
movs
adc
mov
jl
movs
fidivr
popa
adc
je
xlat
cmp
cmp
fist
stos
fadd
into
fidiv
or
loop
aam
rcr
sbb
and
or
add
cmp
jg
mov
xchg
mov
std
push
lods
inc
ror
add
push
mov
sub
jnp
push
pop
mov
jno
mov
jecxz
jnp
loopne
xchg
aad
mov
sbb
into
xchg
arpl
jmp
arpl
out
jmp
mov
add
mov
ds
pop
mov
push
push
popa
jbe
out
punpckhbw
outs
cmc
stos
lods
and
fild
fwait
sbb
inc
jno
xor
sbb
popf
outs
adc
rcr
les
test
(bad)
mov
je
mov
neg
loop
fsubp
mov
xlat
lods
add
imul
xor
push
sbb
sub
ret
sahf
(bad)
gs
inc
fnstenv
sub
mov
das
jle
std
rcr
push
xor
jmp
jl
inc
xchg
mov
jp
push
push
sti
adc
neg
rcr
stos
push
in
adc
retf
or
jno
adc
shr
sub
aam
mov
in
out
mov
jmp
das
inc
cmp
(bad)
adc
movs
fadd
arpl
out
inc
retf
push
stc
mov
add
sahf
jns
mov
mov
push
(bad)
rcr
mov
les
fmul
dec
push
outs
mov
adc
fdivr
dec
inc
xchg
xor
inc
mov
dec
adc
aam
adc
mov
lock
fist
int3
pushf
cmp
out
fwait
sub
enter
push
cmp
je
mov
pop
scas
lock
inc
aam
call
cmp
xlat
jmp
out
das
add
or
xchg
int
mov
retf
sbb
cmp
(bad)
lods
sub
cmps
push
ins
je
inc
shl
mov
adc
int3
cwde
pusha
mov
inc
rol
ins
jmp
add
push
call
xor
sbb
jne
inc
sti
xor
mov
call
icebp
adc
bound
jmp
sbb
shl
jo
rcr
push
dec
dec
dec
sub
shl
int
call
add
lea
xor
imul
jne
popa
mov
ret
hlt
pusha
test
adc
(bad)
in
pushw
mov
mov
movs
out
sub
cwde
test
enter
push
adc
cmps
add
mov
sbb
repz
ins
(bad)
fucomi
push
and
icebp
movs
cli
popa
rcl
jg
xchg
fisubr
iret
les
les
push
shl
mov
or
jg
dec
jns
test
push
dec
sbb
cmp
ins
stc
cmp
(bad)
dec
cs
sub
xchg
mov
fcmovnb
pop
pusha
jns
fldenv
enter
loop
je
loopne
and
(bad)
xlat
xor
ds
or
jecxz
or
mov
(bad)
dec
in
cmp
or
inc
or
cli
loopne
popa
dec
sbb
not
lock
add
movs
adc
lds
bnd
push
outs
and
or
and
in
mov
retf
test
xor
or
addr16
leave
es
inc
lds
movs
add
pop
jnp
movs
or
out
push
pusha
dec
jmp
repz
fisttp
out
pop
(bad)
out
mov
add
sbb
enter
int3
and
arpl
xor
scas
mov
pop
out
mov
push
bound
shl
out
push
pop
stc
adc
sbb
sbb
push
shr
loop
fnstcw
cs
sbb
adc
xchg
add
xor
mov
cmc
repz
shl
sbb
in
sbb
xchg
ror
iret
bound
out
movs
aaa
and
sub
fldcw
inc
push
inc
aam
push
retf
sahf
sub
lea
scas
(bad)
sbb
push
cmps
inc
xchg
inc
mov
xor
sub
or
jmp
fsubr
dec
or
and
repz
inc
xchg
in
jg
out
push
push
xchg
into
inc
adc
call
fdiv
xlat
xor
xchg
push
icebp
sub
les
adc
test
push
lahf
jl
xor
mov
cmp
inc
or
jo
or
test
push
(bad)
cmp
(bad)
sub
idiv
dec
inc
in
push
push
loope
inc
dec
in
mov
sar
lods
inc
idiv
adc
hlt
push
and
aam
lock
push
xor
dec
outs
aad
das
cmp
fstp
jne
int
ja
push
cmc
jp
push
(bad)
sub
dec
xor
popa
mov
rcl
ret
cmp
repz
clc
xchg
mov
sub
xchg
not
out
popf
xlat
or
dec
mov
or
int
out
aam
not
cmp
mov
add
mov
xor
add
mov
dec
not
adc
mov
inc
lock
arpl
fsubr
add
loopne
cmc
xor
shr
sbb
jge
push
int
mov
dec
test
mov
mov
in
test
sbb
mov
xchg
lds
and
repnz
pop
push
push
sar
enter
int3
inc
cwde
push
imul
cli
mov
mov
mov
push
dec
in
cmps
cmp
(bad)
adc
scas
les
popf
dec
or
cdq
arpl
int
in
(bad)
es
sbb
cs
jbe
adc
and
add
dec
inc
add
js
and
push
xor
mov
cmc
xlat
loopne
fcmovbe
xor
cmps
lds
loop
mov
and
int3
ins
aad
push
(bad)
sar
push
or
add
ffreep
push
cs
imul
out
dec
or
rcr
mov
xchg
dec
dec
inc
mov
stos
mov
xor
mov
(bad)
jmp
(bad)
loope
call
fs
movs
push
adc
popf
rcl
jns
dec
out
inc
pop
fdivr
mov
xor
jbe
dec
ret
dec
ret
mov
jmp
clc
(bad)
xlat
jp
fisttp
mov
sub
outs
mov
fcom
mov
push
or
cmp
out
pop
out
movs
fisttp
out
test
adc
ror
inc
inc
jae
int
lea
(bad)
jmp
mov
ret
push
push
xor
mov
xor
out
add
mov
stc
(bad)
aam
push
daa
mov
xchg
inc
xchg
outs
retf
mov
mov
mov
sbb
ror
mov
sbb
out
dec
adc
cmp
mov
call
test
ds
dec
inc
sbb
arpl
out
cmp
(bad)
jb
rol
push
mov
push
in
js
and
idiv
xor
(bad)
push
sahf
mov
in
push
ror
xchg
mov
inc
call
jmp
jb
mov
add
pop
jmp
icebp
add
call
aam
stos
call
movs
addr16
mov
mov
or
pop
adc
sub
pop
(bad)
mov
shr
into
fiadd
call
sub
dec
push
adc
in
pop
shl
daa
dec
cdq
inc
lds
mov
jo
dec
jbe
outs
jl
jle
ins
xor
and
int
ss
pop
dec
ss
fistp
push
push
(bad)
mov
pop
int3
push
xchg
(bad)
call
stc
in
fild
cmp
xor
xchg
jbe
aam
adc
lods
outs
lods
jecxz
xchg
mov
(bad)
in
fisub
imul
cdq
dec
in
sub
arpl
jmp
das
xchg
inc
inc
pop
push
js
aad
mov
cwde
pop
push
xchg
jge
jae
xchg
xor
sbb
stc
push
loope
lds
jns
shl
dec
mov
pop
or
clc
adc
xor
test
imul
cwde
xor
js
adc
repnz
rol
push
dec
sti
leave
sbb
push
jns
push
inc
(bad)
in
iret
mov
and
push
mov
xor
addr16
cmps
inc
cmp
aam
jg
push
clc
jmp
push
mov
dec
int
jbe
int3
ret
(bad)
(bad)
push
rcr
pop
int3
push
or
and
in
wrmsr
aaa
scas
cli
loop
push
cld
jo
iret
call
push
enter
mov
mov
arpl
imul
ret
mov
push
mov
inc
xchg
stc
adc
test
push
cmp
xchg
call
(bad)
aad
popf
mov
and
inc
pushf
push
fidivr
xor
ds
(bad)
xor
xor
leave
leave
or
xchg
xchg
fs
jl
mov
shl
dec
or
movs
dec
rcl
xor
xchg
inc
arpl
out
add
in
test
dec
xlat
mov
stc
cmp
sub
mov
push
clc
daa
imul
add
push
xchg
fsub
cdq
imul
aad
out
fwait
or
std
adc
iret
out
mov
or
inc
div
(bad)
pop
retf
pop
jno
and
retf
gs
aam
dec
push
ret
in
xchg
push
int
aam
jbe
jns
sub
in
inc
push
push
fsub
(bad)
ret
sub
test
and
cmp
sahf
mov
outs
rol
inc
je
jmp
fidiv
scas
out
jbe
call
data16
das
xor
popa
and
test
or
cld
jg
mov
ret
int3
imul
stc
retf
add
sub
in
jb
fidiv
xchg
jle
out
call
shr
sub
rcl
mov
loope
cdq
push
push
cmps
jmp
mov
mov
mov
popf
xchg
pop
and
mov
sbb
dec
aam
in
lods
cmps
mov
jb
jbe
es
adc
inc
cmp
jae
test
icebp
xchg
adc
xor
fnstsw
int
sbb
loop
push
sub
nop
(bad)
loop
mov
push
ins
fdivr
mov
xor
scas
jmp
xchg
mov
pop
xor
sbb
out
repz
pop
and
add
lea
add
scas
xchg
mov
jg
(bad)
into
or
mov
stos
iret
test
xlat
jnp
mov
(bad)
je
pushf
std
clc
mov
dec
add
and
push
nop
imul
sbb
ds
popf
adc
call
mov
cld
cdq
int
enter
sbb
sahf
test
inc
fidiv
sub
aaa
xchg
dec
pop
inc
xor
aam
or
inc
or
cmps
scas
pop
fwait
dec
or
pop
fbstp
sub
lock
scas
cmps
es
popf
loopne
and
push
push
sub
out
les
mov
jb
xor
rcl
stos
sbb
mov
mov
pop
shl
in
aaa
add
data16
jmp
jmp
int3
pop
shl
mov
shl
int3
mov
jnp
cmp
adc
ret
cmp
(bad)
int3
xchg
jmp
shl
push
(bad)
out
retf
popw
pop
cli
jne
cmp
sahf
retf
cmp
fisttp
mov
jb
pop
mov
(bad)
cmp
xchg
dec
inc
(bad)
jns
push
(bad)
sub
out
dec
inc
idiv
dec
inc
loop
push
push
icebp
xor
in
mov
loopne
sub
and
jbe
pop
push
mov
cmp
mov
out
popa
pop
and
dec
xchg
and
mov
dec
or
call
out
mov
inc
pop
xchg
ins
adc
nop
and
stos
repnz
inc
mov
pop
stos
cmp
pop
fbld
mov
dec
push
in
popf
mov
outs
rcr
into
loop
add
or
xlat
aaa
fstp
and
pop
mov
inc
inc
jl
mov
xchg
lods
lahf
jle
pop
sbb
imul
ins
push
pushf
push
jmp
cli
fwait
mov
bound
inc
rdtsc
xchg
pushf
jl
nop
fwait
mov
arpl
outs
mov
pop
pop
nop
xor
fdivrp
push
or
jl
xor
ja
mov
aaa
xor
mov
cmp
out
cmp
or
xor
ret
test
xchg
add
cwde
add
push
xor
sbb
push
cmps
sbb
mov
daa
cmc
jo
lds
inc
in
jmp
pop
(bad)
lods
imul
adc
ja
adc
mov
(bad)
adc
mov
call
fistp
ja
xchg
in
adc
push
mov
sbb
daa
dec
sbb
mov
sub
sub
jp
pop
dec
repnz
stos
adc
push
js
cmps
stos
cmps
(bad)
call
popa
adc
lea
fdivr
rcr
sub
push
push
add
xchg
(bad)
dec
xor
jne
in
pop
inc
adc
pop
pushf
mov
xor
retf
fidivr
dec
stc
loop
cmp
sbb
add
test
enter
ins
shr
or
pop
ja
dec
pop
pushf
pop
inc
and
push
xchg
ins
sbb
stc
sbb
dec
add
mov
hlt
int
push
pusha
sbb
pop
or
iret
and
iret
jbe
leave
pop
dec
retf
mov
mov
jbe
and
retf
add
mov
ret
jg
dec
in
push
lods
movs
dec
leave
aaa
(bad)
stos
retf
sbb
int3
fstp
movs
and
int
pop
ret
push
or
ds
sub
loopne
cmp
nop
sub
fcomp
or
and
jne
inc
jnp
test
xor
ss
sub
mov
cmp
mov
pusha
jle
dec
retf
push
inc
(bad)
pusha
ja
xchg
loope
mov
sub
mov
out
cmp
push
mov
cmp
pop
ja
rol
jge
sbb
fld
es
push
xchg
adc
dec
pop
dec
push
idiv
ins
pusha
jbe
ins
inc
out
pop
push
mov
dec
inc
imul
dec
inc
idiv
dec
inc
repnz
dec
out
xor
and
das
in
ffree
stc
and
and
xor
aad
sbb
mov
jl
sbb
inc
mov
les
mov
nop
lock
mov
jle
jecxz
xlat
inc
sub
dec
imul
jle
ja
fcmovbe
or
sub
loope
mov
sbb
add
cmps
pop
sbb
jns
pop
mov
and
sbb
gs
test
jmp
xlat
test
inc
cmp
and
cdq
mov
add
sbb
sbb
aam
movs
sbb
mov
add
mov
shr
(bad)
jne
je
ds
jle
stc
fwait
ret
cmp
xchg
mov
jmp
sub
jnp
mov
dec
fst
or
pop
je
pop
retf
pop
jae
ins
test
leave
push
js
push
dec
mov
outs
jmp
retf
and
adc
mov
lods
out
or
inc
pop
ins
add
or
lods
push
xor
add
lock
and
aaa
pop
dec
imul
sub
retf
loop
(bad)
push
out
mov
or
adc
loopne
test
lods
cmp
stc
and
inc
xor
pop
inc
jne
xor
pusha
test
shr
xchg
in
jo
jb
popf
lds
adc
push
jo
jno
sbb
cmp
test
xchg
xor
idiv
xor
xor
stos
out
mov
inc
or
neg
lock
out
scas
call
lea
jge
repz
jns
push
lods
aaa
inc
fiadd
push
jo
fld
mov
stos
in
push
sbb
sbb
push
or
scas
int3
xchg
xlat
es
fs
pop
pop
(bad)
fisub
aaa
sub
pop
and
cmp
into
and
mov
pop
pop
fmul
adc
cmp
jp
stos
data16
ror
repnz
fidiv
mov
pop
or
neg
loope
lea
mov
xor
push
mov
mov
mov
and
movs
or
sbb
push
jbe
and
jmp
fs
xchg
je
xchg
mov
push
add
xor
jl
xor
jecxz
inc
shl
jmp
jne
std
imul
jnp
pushf
xor
int3
push
rcl
sbb
add
cmp
aad
pop
adc
std
mov
fistp
test
fnstenv
push
pop
mov
push
cmp
pop
xchg
push
shl
mov
add
cld
loopne
ret
or
add
mov
arpl
(bad)
dec
jmp
sbb
out
mov
inc
push
push
leave
adc
(bad)
out
cmp
(bad)
mov
nop
xor
outs
mov
cmp
cmp
xchg
cmps
sub
ja
push
and
push
mov
fadd
xchg
dec
xchg
ret
xchg
inc
lds
push
ss
xlat
movs
lock
xchg
out
xchg
mov
int3
(bad)
jne
cwde
inc
enter
xlat
in
xchg
test
fcom
mov
lahf
rol
cmp
xor
add
push
les
jmp
inc
cmps
call
shl
adc
xor
cld
mov
adc
enter
push
aas
shl
leave
xchg
push
inc
pop
push
mov
mov
push
loopne
adc
mov
xor
scas
cs
test
adc
sub
dec
je
int
imul
rol
fnstcw
mov
cdq
adc
push
push
cmp
lods
adc
inc
cmp
xchg
dec
fsubp
leave
sbb
sub
cmps
retf
add
cwde
push
adc
jns
scas
xchg
or
mov
lods
jno
inc
repz
mov
xor
cwde
outs
in
dec
iret
pop
gs
cmp
sbb
retf
adc
dec
cmp
sub
pop
and
or
shl
sbb
push
mov
sub
addr16
xchg
pop
dec
jne
sub
dec
fcmovbe
and
call
cmp
pushf
es
adc
cdq
push
mov
xlat
mov
xor
add
xor
in
jb
shr
(bad)
outs
stos
lods
arpl
dec
and
xchg
mov
jne
mov
enter
stos
adc
adc
sar
aad
push
scas
test
jo
jne
cdq
jge
inc
mov
pop
or
or
fwait
mov
cli
sbb
pop
pop
scas
push
or
ror
push
and
and
mov
mov
les
or
lods
inc
in
xchg
das
push
mov
retf
xor
adc
adc
fisttp
push
xlat
pop
xchg
movs
pcmpeqw
test
jge
cmp
jl
clc
ss
rcr
adc
jp
inc
jo
test
fisubr
add
(bad)
sub
jne
retf
out
pop
out
jne
scas
mov
push
xor
daa
cmp
or
arpl
pop
leave
jmp
jl
mov
out
add
cmp
xchg
cwde
cmps
xchg
cmps
mov
jl
les
push
hlt
fcmove
sub
sub
cwde
aam
arpl
sbb
and
ss
lds
adc
mov
push
ins
jl
xchg
jg
int
mov
dec
popa
pop
repnz
sub
test
pop
jle
xor
mov
or
leave
outs
xchg
cld
in
and
xchg
jno
iret
inc
lahf
and
rcr
and
dec
adc
or
neg
pop
push
(bad)
sub
cmp
in
dec
inc
loopne
inc
dec
(bad)
xor
sar
lods
push
idiv
and
je
out
cmp
enter
scas
add
fdivr
mov
jmp
jne
xor
test
mov
sub
into
push
cmp
or
and
shl
movs
shl
iret
scas
(bad)
in
jno
cdq
test
mul
(bad)
outs
xlat
mov
or
push
adc
dec
xchg
(bad)
cld
mov
(bad)
test
rcl
mov
adc
lods
dec
int3
aam
arpl
cmps
cmp
aas
aaa
push
adc
push
jp
mov
mov
sub
sbb
mov
or
and
inc
mov
loope
push
xor
les
nop
aam
mov
jns
dec
mov
sahf
push
and
out
ret
ins
into
jmp
movs
ret
jbe
loop
pop
mov
xor
and
pop
loopne
pop
jge
push
pop
xchg
xor
cmp
jecxz
movs
adc
es
push
ss
icebp
call
xor
call
loop
jmp
mov
outs
cs
data16
int
mov
lds
int3
xor
enter
call
or
ret
inc
and
or
or
jmp
shr
(bad)
imul
dec
push
or
mov
xor
stos
add
xchg
lahf
scas
xchg
out
add
jmp
adc
or
dec
aam
mov
clc
repz
fwait
pop
push
or
jge
sbb
cmp
(bad)
lods
or
sub
sbb
jbe
bound
xor
test
lods
movs
adc
mov
push
push
ja
xchg
sbb
push
test
icebp
sub
adc
dec
ret
mov
or
mov
mov
and
out
movs
push
cmp
pop
jno
cli
add
pop
inc
pop
(bad)
jp
jnp
and
test
fidiv
loope
pushf
call
out
fisub
jecxz
pushf
push
(bad)
cdq
jg
aam
adc
pop
hlt
dec
jge
gs
jno
ret
jecxz
mov
add
sbb
push
and
sub
(bad)
cmp
cld
test
mov
ret
adc
(bad)
test
cmp
xchg
lea
xchg
push
in
es
jno
stos
aad
mov
fnstenv
add
and
aas
mov
adc
and
and
cmp
add
inc
jle
inc
(bad)
rol
unpckhps
push
das
aaa
push
jg
xchg
in
mov
call
aam
icebp
cmp
lds
movs
pop
into
jle
fisubr
push
add
ins
pop
dec
das
dec
aam
jecxz
js
xor
popf
jecxz
push
arpl
gs
imul
loopne
pop
cld
test
fdiv
sub
push
les
cmps
ins
fsub
call
cmp
mov
dec
or
push
nop
cmps
and
cmp
pop
mov
rcl
ins
inc
dec
iret
mov
jge
je
test
ss
pop
(bad)
mov
pop
dec
sbb
data16
cmps
mov
aam
fmul
jne
aaa
pop
jmp
arpl
in
mov
enter
sub
lods
mov
cld
rcr
lea
clc
cmp
add
add
sbb
jae
xor
mov
mov
cmp
and
sbb
pop
sbb
lahf
push
xchg
adc
test
fidiv
ret
data16
rcl
(bad)
or
sbb
in
inc
jge
pop
fisttp
mov
mov
sbb
out
out
xor
les
jp
xchg
cmp
jbe
sub
mov
or
mul
jmp
jne
(bad)
fsub
test
inc
jmp
ds
xor
jmp
scas
pop
jno
xor
loop
push
pop
mov
lahf
jno
in
pop
fmul
enter
js
pop
cmp
idiv
in
mov
scas
rcl
dec
cmps
nop
pop
repnz
jmp
lahf
popf
push
jae
in
cmp
test
mov
outs
xor
sbb
cli
sub
aas
jnp
push
inc
fnstenv
sbb
iret
or
xor
pop
mov
or
sbb
inc
sbb
cld
int3
cli
adc
xor
mov
fstp
cmps
in
sub
test
aad
fist
xchg
or
(bad)
pop
or
test
push
into
sub
fcmove
adc
dec
mov
and
aas
inc
repz
lods
inc
jbe
mov
clc
addr16
mov
aam
jge
into
push
(bad)
iret
pusha
xor
or
pop
push
test
punpcklbw
and
push
xchg
mov
lea
aas
inc
add
push
dec
sbb
mov
xchg
hlt
daa
rol
and
in
shr
adc
shl
mov
sbb
xchg
rol
cmp
add
pop
push
call
jno
fild
ins
pop
dec
pop
add
les
std
push
mov
adc
cmp
sbb
or
pop
ds
pop
popf
mov
jge
and
sbb
cmc
movs
and
and
mov
mov
adc
repz
lods
sbb
js
mov
fist
inc
fsubr
iret
xchg
mul
or
sub
dec
shr
push
jle
dec
push
jmp
pusha
pop
push
call
mov
mov
cmc
into
psubusb
pop
sbb
fimul
sub
xor
inc
and
fbld
ss
popf
mov
jne
sbb
sbb
jne
stc
shr
pop
lea
cwde
das
xchg
hlt
sbb
arpl
out
fistp
mov
sbb
test
push
jo
pop
dec
pop
in
outs
xor
push
pop
mov
sub
mov
push
js
mov
mov
push
pusha
pop
jecxz
arpl
into
or
je
pusha
jno
jno
test
mov
sub
sbb
push
fdiv
imul
jmp
push
ficomp
push
out
pushf
sub
xor
sub
cmp
in
push
push
xor
push
pop
mov
and
dec
add
push
dec
xchg
mov
push
cmp
inc
dec
aaa
sub
xor
pop
inc
out
or
mov
into
ds
sub
in
pop
add
xchg
(bad)
iret
popf
xchg
fbld
xor
mov
mov
mov
adc
xchg
inc
sbb
pushf
call
sub
clc
and
jbe
in
pop
cld
(bad)
cmp
data16
add
sub
jb
inc
jmp
popa
fwait
dec
fild
(bad)
(bad)
inc
xchg
aad
jne
mov
xchg
test
pop
cmps
das
pop
repz
dec
pop
sub
mov
dec
(bad)
jo
sbb
xchg
xor
call
xchg
repnz
lock
inc
push
into
inc
sbb
lds
ss
les
nop
jle
test
sbb
jne
test
mov
push
or
xchg
jne
mov
and
pop
inc
daa
xchg
xchg
push
xor
fild
mov
adc
push
xchg
push
rol
popf
sbb
call
mov
pusha
pop
or
jl
push
hlt
push
push
fsubr
adc
daa
push
movs
je
popf
jo
cmp
lock
pusha
imul
sub
daa
loopne
and
sbb
std
imul
mov
dec
push
(bad)
mov
aad
test
fnstsw
add
sub
xor
adc
xor
cmc
push
cmp
loop
lahf
enter
or
xor
sbb
shr
mov
add
out
mov
sub
sbb
(bad)
and
dec
push
(bad)
jmp
sub
mov
cmp
dec
shl
fst
pop
and
sub
jge
inc
or
(bad)
or
push
(bad)
imul
jo
test
lea
inc
test
loopne
dec
pop
shl
or
imul
lods
and
push
or
ja
push
pusha
xlat
push
sbb
inc
out
int
cmps
stc
lea
cmps
sbb
daa
push
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
jb
mov
pop
jo
sub
in
dec
jge
imul
dec
inc
out
push
adc
data16
pop
sub
idiv
pop
push
(bad)
sub
imul
sub
push
idiv
lods
lahf
xchg
cdq
dec
push
ficomp
dec
inc
neg
pop
push
(bad)
sub
out
pop
push
imul
sbb
and
and
push
push
sub
test
and
jmp
sahf
retf
xchg
push
sbb
mov
mul
jp
add
pop
and
xchg
cmp
mov
sbb
inc
jge
movs
movs
and
pop
in
data16
mov
(bad)
pop
sbb
push
call
inc
inc
imul
imul
out
ja
add
aaa
not
push
movs
xor
pop
jns
shl
pop
push
mov
test
mov
add
jb
mov
jno
cmps
cmps
shl
push
xor
xchg
fcomip
jge
sub
mov
ds
or
test
mov
xlat
push
pop
arpl
inc
rcr
mov
inc
mov
lahf
shl
xor
cmp
stc
das
pop
sti
(bad)
jnp
mov
xchg
mov
adc
add
rcl
and
out
cmp
cmp
in
jb
inc
stos
jb
jne
imul
push
test
neg
stos
test
push
in
pop
jno
je
mov
(bad)
arpl
sti
mov
jmp
mov
pop
dec
ss
jle
mov
sbb
shr
mov
pusha
mov
rcr
and
loope
jne
mov
int
cmp
jns
ret
cs
adc
or
xchg
dec
pop
lea
(bad)
sub
mov
xchg
lea
add
lock
add
lahf
sub
xor
sub
loopne
(bad)
or
mov
mov
shl
lods
lds
dec
sub
dec
lods
(bad)
cli
adc
sbb
jns
xor
js
or
dec
inc
aad
dec
push
jo
mov
cmp
push
sahf
mov
inc
mov
ds
sbb
dec
out
imul
mov
icebp
fucomip
pop
mov
shr
or
jmp
rcl
clc
xlat
cmp
mov
or
pushf
ror
mov
and
sbb
jecxz
xor
lods
pop
loopne
cdq
test
rol
sub
ss
and
sbb
call
adc
inc
push
fwait
scas
push
xor
and
inc
pop
mov
add
ret
inc
test
mov
and
adc
je
fild
imul
shl
aam
fisttp
mov
imul
inc
sub
mov
xchg
xchg
arpl
push
adc
(bad)
push
aam
push
xor
call
(bad)
sub
(bad)
cmp
mov
fist
je
xor
fnstenv
enter
bound
sar
ins
sub
push
mov
and
sub
push
lods
sbb
push
cmp
pop
jmp
pop
push
pop
push
out
lea
test
xor
jmp
ret
adc
fimul
sub
xchg
push
dec
cli
push
pop
cwde
push
pop
push
inc
test
das
mov
mov
and
push
sub
imul
nop
sbb
mov
pop
inc
out
dec
inc
or
mov
pop
push
xchg
sub
inc
neg
ins
push
(bad)
pop
ins
push
xchg
or
in
outs
inc
test
ffree
mov
dec
out
xchg
dec
(bad)
cwde
nop
test
mov
daa
rcl
jne
inc
cmp
test
jae
mov
rcr
(bad)
xchg
test
or
xchg
mov
mov
fidivr
dec
aad
push
mov
push
imul
idiv
jp
inc
mov
xchg
stos
(bad)
sub
cs
clc
jle
sar
ja
sub
pop
cmp
add
mov
sbb
add
dec
xchg
lahf
cmp
inc
cmc
pop
data16
xor
mov
enter
and
ja
mov
shl
dec
lds
repnz
popa
dec
shl
jae
imul
rol
cmps
sti
ds
mov
or
cmp
mov
retf
repz
ss
push
or
adc
in
pop
rol
dec
mov
fwait
dec
and
mov
mov
idiv
ret
inc
pop
xchg
js
ds
jp
mov
mov
add
pusha
lods
pop
and
out
lock
fs
adc
inc
mov
mul
pop
cmp
and
scas
rcl
adc
shl
addr16
mov
lods
jnp
(bad)
fstp
aam
fld
inc
mov
sub
dec
lods
mov
pop
(bad)
pop
call
xlat
push
mov
js
ds
jno
sbb
out
mov
mov
enter
stos
retf
fstp
sbb
fsubr
loope
les
fwait
popa
stc
inc
js
jmp
pop
stos
mov
not
movs
fwait
inc
in
or
inc
in
adc
jno
je
sti
xor
jmp
ins
out
and
out
clc
ret
sub
scas
retf
(bad)
pushf
sub
xchg
fucomi
inc
cmp
popa
xchg
jno
sbb
push
loop
cld
and
in
mov
lahf
jns
xlat
shl
inc
push
mov
cwde
xchg
sub
add
ja
cld
or
cmp
add
push
(bad)
dec
sbb
sub
std
sub
jg
mov
xchg
retf
jns
dec
cmp
dec
xchg
int3
test
sbb
test
in
inc
outs
adc
test
sahf
(bad)
pop
inc
stos
retf
daa
pop
or
loop
add
inc
inc
pop
sub
scas
(bad)
std
daa
adc
lods
xor
mov
add
(bad)
js
adc
add
jnp
xchg
jne
cmp
frstor
aad
imul
sbb
call
xor
xchg
aad
shl
dec
push
xchg
div
add
push
jns
rcr
scas
push
sbb
xchg
sbb
lahf
xor
imul
adc
mov
jmp
lock
ins
inc
out
ins
shl
sub
out
dec
jo
sub
imul
(bad)
lds
jg
imul
dec
inc
mov
pop
je
stc
push
push
mov
sbb
add
adc
mov
call
fbld
scas
xor
lahf
lds
xchg
or
sub
dec
into
mov
sbb
or
loop
mov
sti
not
out
int
pop
mov
enter
jns
lea
mov
out
adc
and
jnp
loopne
or
aas
pop
xabort
and
out
sub
dec
push
cwde
pop
fidivr
mov
outs
xor
pushf
sub
outs
(bad)
in
rcr
test
leave
adc
jno
dec
mov
cs
shl
fsub
fldenv
ins
push
dec
cwde
and
call
lea
cmp
mov
in
cmp
mov
ja
adc
push
and
jp
leave
and
sbb
add
push
lock
cmp
adc
ret
ret
test
(bad)
cwde
repz
movs
xor
cmp
cmp
xor
dec
mov
jno
adc
(bad)
loopne
aad
mov
ja
scas
les
mov
dec
cmp
push
adc
mov
mov
jno
jae
jns
stos
sbb
aad
mov
adc
daa
fwait
mov
ret
jl
leave
ds
cmp
mov
(bad)
jo
pop
les
or
retf
jno
jns
cli
int3
lahf
sub
pop
jmp
cmp
(bad)
(bad)
shl
(bad)
(bad)
xor
iret
pop
cmp
imul
mov
clc
jb
jle
dec
push
cwde
jne
into
or
daa
jle
pop
lahf
fcmovnu
or
jmp
pop
into
sbb
test
bound
loop
push
jp
xchg
mov
add
pop
jne
ja
jmp
ror
cwde
jae
(bad)
(bad)
inc
jae
jns
arpl
jecxz
push
in
loop
sbb
inc
lahf
push
nop
adc
enter
out
push
sbb
rol
loop
sub
out
gs
fild
sti
add
mov
jmp
nop
enter
mov
adc
and
ror
adc
jl
dec
movs
lods
ficomp
aaa
jb
enter
ja
bound
inc
hlt
stos
lahf
jae
dec
push
cmp
ins
pusha
neg
or
push
out
pop
inc
cmps
sub
test
inc
idiv
pop
adc
or
rcr
jle
xchg
sbb
arpl
sti
repnz
mov
jge
(bad)
mov
xchg
or
xor
ja
je
jns
or
inc
(bad)
cli
xor
and
cmps
xor
cmps
sub
mov
popf
add
idiv
cmp
call
icebp
sbb
or
aas
(bad)
scas
popf
scas
mov
jnp
ss
or
je
out
cmp
int
pop
jbe
xor
daa
and
outs
es
dec
into
(bad)
mov
mov
dec
pop
xor
and
mov
add
xor
xchg
popf
mov
sub
lea
xor
adc
mov
add
pop
ret
icebp
xor
movs
lea
(bad)
aam
lock
pop
arpl
add
push
loop
je
or
test
sbb
cmp
jbe
sub
push
repz
ins
dec
or
(bad)
(bad)
jp
std
pop
cmp
in
add
repz
(bad)
scas
cmp
sbb
out
and
fld
mov
or
jp
push
xchg
adc
add
mul
jbe
fdivr
mov
mov
xchg
out
xchg
lock
sbb
xor
or
mov
jmp
inc
les
test
into
aam
mov
clc
iret
sar
add
jge
mov
mov
test
mov
fisubr
sahf
mov
into
neg
stos
js
in
mov
popa
jle
adc
xchg
retf
(bad)
push
xchg
mov
adc
mov
sub
cmc
pop
ds
sub
inc
aaa
int3
cld
xor
out
and
or
aad
std
pop
xchg
test
loop
in
xlat
(bad)
push
out
mov
aam
cli
sbb
iret
(bad)
(bad)
lods
aam
push
cmps
mov
mov
mov
jno
dec
out
ds
pop
sar
jmp
enter
mov
mov
inc
mov
cld
pavgb
jmp
neg
jae
lds
cmp
or
dec
adc
fcom
sub
ins
jmp
(bad)
or
cmp
push
xor
mov
sti
add
mov
jno
mov
sub
xchg
sbb
push
mov
pusha
or
cmp
sti
sbb
push
test
inc
jmp
cmp
adc
add
jge
fnsave
xchg
pop
push
jg
cld
mov
dec
jge
movs
xchg
push
jle
outs
retf
(bad)
icebp
adc
adc
arpl
jns
lods
pop
mov
jae
push
xchg
push
sbb
cli
pop
mov
cmps
aad
inc
push
or
mov
jmp
cli
mov
(bad)
cli
or
out
(bad)
retf
inc
into
and
mov
lock
lds
jmp
mov
sub
ret
popf
sub
ins
mov
xor
retf
in
jecxz
adc
ffree
cmp
in
in
ficom
jb
push
inc
pusha
(bad)
fcom
cmp
add
mov
cmps
jecxz
xlat
cmp
repnz
loopne
dec
test
cwde
add
ja
ret
shr
or
mov
cmp
int
push
scas
cld
adc
ins
cmp
jne
dec
inc
pop
push
ret
inc
add
into
(bad)
add
addr16
mov
sbb
fucomip
int3
xchg
mov
sub
movs
lea
fs
push
adc
lods
push
enter
push
adc
test
pop
pop
inc
imul
cmp
push
xchg
dec
jo
sub
push
(bad)
cmp
xlat
or
lds
adc
sar
inc
aam
inc
ins
mov
sbb
scas
pusha
inc
push
rcl
jg
lea
retf
sub
je
add
movs
stc
xchg
js
aad
ds
aas
sbb
xchg
(bad)
lods
jmp
mov
xor
mov
pop
stos
cmp
out
mov
pop
add
jae
cmps
jb
in
dec
jmp
(bad)
mov
icebp
push
jge
ror
cmp
mov
loope
pop
call
mov
(bad)
push
sub
mov
bound
shl
mov
mov
test
jp
push
ins
push
mov
sub
xchg
fld
iret
pop
ins
jmp
pop
ror
and
push
or
(bad)
xor
imul
sub
in
loopne
shr
jbe
pop
movs
jmp
(bad)
cwde
or
sbb
pop
repz
pop
jnp
push
dec
cmp
mov
jg
jns
push
jne
xchg
cmc
lock
(bad)
jno
imul
push
add
leave
ins
push
(bad)
out
mov
xchg
jmp
test
hlt
jmp
push
pop
sbb
inc
cmp
adc
shl
out
aas
jmp
int
sahf
fdivr
dec
fcomp
sbb
xchg
cmp
push
mov
inc
(bad)
sub
jle
popa
mov
mov
or
jmp
xchg
jo
add
xor
add
mov
adc
and
popf
cmp
push
push
stos
je
push
jae
ja
aas
jo
mov
cmp
inc
int3
cmp
and
in
shl
xlat
repnz
dec
aad
shl
fst
repz
xor
xchg
(bad)
clc
mov
xchg
xor
popa
movs
jmp
aad
or
leave
aam
enter
fst
rcl
call
or
or
in
jl
call
nop
retf
dec
outs
cmc
mov
iret
dec
js
gs
ins
(bad)
adc
out
sub
lods
mov
in
sub
stc
stos
push
or
push
(bad)
movs
fwait
cmp
mov
mov
mov
push
loopne
sub
sti
ficomp
inc
sbb
jns
push
jbe
mov
add
add
outs
lds
and
cmps
sar
call
cmp
prefetch
or
fwait
cwde
mov
fdiv
sub
movs
fild
test
sbb
js
jns
mov
mov
push
mov
in
cmp
xchg
sbb
int3
lods
push
(bad)
cmp
pop
dec
cmp
xchg
mov
lds
mov
jmp
in
push
xchg
stos
xor
jmp
and
popa
dec
fwait
add
lock
inc
mov
inc
mov
mov
rol
ret
xchg
sbb
mov
jp
pop
mov
dec
cmp
mov
and
ins
(bad)
sahf
xchg
and
fld
(bad)
fisttp
fscale
cli
dec
sub
int3
(bad)
mov
ds
ror
pushf
xchg
aam
ret
mov
or
and
hlt
movs
mov
xchg
push
sbb
xchg
sbb
and
aad
jle
es
jnp
scas
cmp
out
test
adc
(bad)
pop
inc
stos
sub
stos
test
(bad)
bound
popa
mov
dec
iret
adc
sbb
cmps
dec
mov
leave
clc
sbb
pushf
cmp
pop
and
add
jae
stos
sahf
cmps
ss
mov
cmp
out
add
into
adc
jno
jo
push
out
test
mov
int
scas
clc
pop
(bad)
sbb
pop
jmp
dec
mov
sub
mov
pop
and
mov
add
nop
cmp
or
std
or
dec
pop
loop
idiv
repz
cwde
fdivr
add
xor
sti
ss
and
bound
inc
(bad)
xchg
loopne
xchg
dec
int
sbb
pushf
pop
fwait
jmp
hlt
sbb
xchg
cli
inc
out
or
push
in
pop
cvtps2pi
jge
ja
jmp
je
sbb
and
mov
jle
mov
jno
hlt
in
loopne
jmp
(bad)
leave
jo
add
enter
or
jge
inc
xchg
fmul
jae
adc
jne
cmc
adc
dec
mov
jge
mov
add
add
mov
js
jl
outs
xlat
in
mov
test
int
pop
add
mov
cwde
lods
pop
lods
cmp
adc
repnz
mov
dec
xchg
push
je
jno
into
adc
mov
adc
das
mov
das
push
or
ret
cwde
xor
jecxz
cmp
movs
lahf
push
rcr
sbb
pop
adc
or
imul
push
cmps
sub
out
dec
inc
idiv
pop
inc
cmc
cmp
inc
pop
out
xor
in
push
push
stc
push
pop
rol
pop
ds
aaa
jg
mov
loope
stos
jbe
push
fcmovnb
jle
(bad)
mov
adc
into
inc
add
pusha
loopne
push
xchg
lahf
mov
iret
mov
cmps
test
sub
xlat
scas
test
jg
aaa
aad
mov
cs
mov
loopne
sbb
mov
sbb
mov
les
lods
outs
sahf
loopne
lds
mov
jne
mov
nop
inc
pop
jp
lock
retf
jnp
out
stos
dec
ja
dec
jbe
adc
test
mov
and
and
xchg
xor
call
imul
(bad)
ins
les
mov
shr
mov
mov
mov
retf
out
push
movs
(bad)
in
xor
xchg
jecxz
and
loopne
rol
push
push
aas
in
ja
and
ret
and
and
xor
test
aam
test
xchg
dec
pushf
lahf
pop
shr
aad
dec
test
adc
push
stos
lahf
add
pop
dec
icebp
dec
call
mov
or
lods
jge
add
mov
or
mov
cdq
jmp
sbb
sbb
imul
test
(bad)
outs
call
sub
je
popf
mov
clc
adc
out
outs
(bad)
and
mov
lds
and
ins
data16
bound
and
enter
inc
dec
or
adc
dec
enter
xchg
es
call
in
dec
xchg
addr16
xchg
lea
les
in
inc
fs
fisubr
dec
je
xor
and
sbb
out
mov
push
add
out
test
jmp
ja
neg
xchg
add
mov
rcr
dec
jmp
fwait
mov
dec
pusha
test
dec
sbb
adc
and
mov
cdq
sbb
dec
bound
ficom
adc
jnp
ins
inc
mov
cwde
push
(bad)
sbb
inc
bound
lods
fisttp
outs
das
(bad)
js
add
sar
scas
stc
mov
mov
ja
xchg
scas
loopne
cmp
pusha
loopne
mov
jecxz
aas
cwde
jmp
frstor
add
out
(bad)
aas
shl
ins
jne
xchg
xlat
and
cmps
cld
scas
pop
cmp
sub
push
dec
and
push
scas
cmp
pop
imul
or
out
inc
aaa
cwde
out
jmp
or
test
addr16
jns
fcomp
jp
pop
pop
sbb
test
mov
jne
inc
and
lea
dec
xor
pushf
adc
jb
leave
or
push
sub
xchg
cmp
dec
dec
ret
mov
cmp
mov
stos
adc
mov
imul
test
jo
push
mov
pop
icebp
icebp
rep
ds
inc
jp
ds
cld
cdq
jecxz
add
shl
xchg
mov
inc
xor
lods
push
stos
mov
mov
rcl
rcl
jns
test
dec
pop
or
arpl
adc
jecxz
sub
pop
loopne
or
add
cmps
xor
in
cdq
pop
neg
lock
jl
or
pop
stos
loopne
xchg
dec
test
sbb
stos
ficomp
xchg
adc
or
dec
xchg
(bad)
addr16
call
pmaxub
ins
fsubr
in
cmp
inc
mov
inc
xor
js
push
lea
iret
(bad)
retf
rcl
loop
or
add
push
repz
inc
xchg
mov
xchg
and
cmps
mov
sub
pop
lock
cmp
(bad)
sbb
xor
test
sbb
push
push
jmp
fcom
test
push
js
iret
lock
out
lea
movs
pop
dec
test
std
pop
pop
pop
adc
stos
rcr
test
or
dec
jb
push
jl
imul
outs
and
pushf
ror
push
pusha
mov
or
aaa
ins
cs
mov
xor
fpatan
imul
fld
or
xor
lds
sub
fcomip
fistp
jb
cmp
dec
jg
les
aas
push
mov
pop
cmp
out
pop
push
idiv
pop
push
out
pop
inc
idiv
pop
inc
idiv
dec
inc
loop
repnz
lock
ins
inc
out
pop
and
in
sti
out
fisttp
add
jge
xchg
int3
sub
in
add
inc
and
imul
dec
(bad)
push
ret
bound
retf
xlat
out
xchg
xchg
ror
mov
scas
jmp
in
mov
push
sar
ja
jb
pop
movs
dec
lods
gs
fdivr
loope
inc
cld
xlat
sbb
daa
dec
lods
adc
xchg
movs
ins
sahf
jle
sbb
mov
dec
call
sub
jp
sbb
mov
xor
(bad)
aam
(bad)
iret
pop
and
mov
outs
(bad)
jg
ret
popf
push
cmp
dec
xchg
(bad)
sub
ss
sub
push
lods
push
mov
pmulhuw
mov
push
mov
popa
mov
ja
push
dec
and
(bad)
iret
cli
and
mov
(bad)
or
adc
out
push
into
aad
xor
aaa
xor
mov
pop
rcl
push
sub
repz
sub
add
pusha
div
test
sub
mov
hlt
pusha
cdq
repz
pop
mov
mov
sbb
mov
sbb
mov
loope
scas
in
mov
sar
mov
mov
pop
(bad)
lods
adc
mov
stos
loopne
cmp
ror
adc
and
sbb
jmp
lea
adc
mov
ja
push
scas
sub
sti
mov
fisub
cwde
cmps
ret
mov
les
enter
inc
cmp
ror
outs
sar
cs
push
pop
ret
dec
inc
mov
jge
out
dec
push
out
pop
push
out
dec
inc
imul
dec
push
in
dec
dec
in
repnz
out
pop
jge
idiv
xchg
pop
jmp
scas
popf
and
popa
bound
cmps
sbb
daa
sub
and
adc
lea
outs
sub
shr
hlt
movs
mov
addr16
stc
jb
in
imul
cmp
mov
jbe
(bad)
aas
and
idiv
les
adc
dec
add
cmc
call
mov
add
adc
dec
sbb
sub
inc
ret
int3
xor
cld
dec
cmc
jp
repnz
in
adc
out
sub
loope
neg
cdq
out
dec
inc
ja
es
jo
call
sub
sbb
cmp
out
inc
rcr
shl
adc
inc
sub
outs
cmp
mov
(bad)
popa
push
aas
mov
aad
sar
and
div
popa
jmp
xchg
xchg
sbb
shl
sub
mov
ret
pop
xchg
and
js
or
sub
mov
push
popa
jmp
adc
test
sbb
mov
jle
popa
mov
ja
pop
(bad)
fwait
adc
sbb
adc
pop
jmp
adc
fs
movs
push
add
retf
xchg
and
xchg
aas
cmp
jecxz
xchg
and
sub
stos
fnstenv
xchg
data16
loop
pop
push
push
cmp
jmp
in
xor
mov
jecxz
add
dec
movs
cmp
cmp
rcl
out
ja
and
imul
fstp
cmp
mov
jnp
out
js
pop
pusha
data16
mov
aad
jmp
add
repnz
push
stc
sub
out
adc
test
dec
inc
pop
in
into
xor
mov
bound
push
pop
out
retf
ror
dec
dec
adc
addr16
xchg
mov
std
adc
pushf
mov
xor
inc
add
lahf
fs
inc
ret
pop
and
(bad)
jo
push
sub
mov
add
jbe
jbe
jo
dec
cmp
hlt
jmp
das
imul
mul
lock
ins
adc
cmp
(bad)
sbb
(bad)
sub
out
dec
inc
idiv
dec
dec
jecxz
push
push
out
xor
jmp
mov
shr
lods
push
idiv
cmp
mov
push
jo
loopne
int
lahf
dec
jmp
cmc
sbb
fscale
cmp
data16
lock
add
and
sub
or
inc
hlt
inc
leave
mov
es
stos
(bad)
adc
xor
mov
call
push
sub
out
adc
cdq
xchg
mov
push
jns
mov
cdq
mov
mov
inc
push
cmp
or
rcr
std
cwde
mov
pop
fild
sbb
add
int3
std
mov
sar
cld
ins
or
push
shr
in
mov
loopne
push
mov
adc
icebp
test
dec
shl
data16
jb
lods
outs
into
inc
std
lea
call
push
(bad)
pop
stos
and
iret
(bad)
cli
cwde
mov
inc
sti
ret
xor
push
and
mov
sbb
inc
hlt
mov
sub
das
pop
iret
jb
outs
lods
jnp
add
sub
hlt
fimul
xchg
sub
(bad)
pop
push
pop
sbb
mov
je
ret
out
cmps
cdq
movs
aad
les
cmc
pop
sub
dec
inc
or
aaa
cmp
(bad)
push
mov
pop
js
clc
jbe
jns
inc
lahf
adc
(bad)
pop
or
scas
inc
jmp
jnp
inc
outs
scas
lea
cmp
cdq
test
jle
jae
aaa
dec
pushf
xor
push
xor
mov
push
fisubr
sub
cmp
fadd
mov
and
popa
jns
dec
daa
mov
ja
push
adc
jg
fcompp
test
ss
cmp
mov
push
bound
pop
mov
ficomp
sbb
test
call
mov
jae
jecxz
adc
fcomp
jne
call
idiv
or
pop
loopne
and
loop
out
xchg
ret
ror
aas
retf
xor
cmp
mov
and
and
daa
inc
jbe
into
sti
or
repz
push
jnp
loope
sti
xor
xchg
push
add
loope
aaa
jno
rcr
dec
and
push
call
dec
mov
push
(bad)
hlt
ret
mov
test
rcr
sbb
mov
fnstsw
scas
jp
rol
xchg
jmp
test
add
shr
mov
(bad)
idiv
js
pushf
pop
mov
fsub
cdq
mov
ret
xor
push
xor
add
jmp
inc
mov
outs
push
cdq
cmps
xor
jl
push
xchg
outs
je
shl
inc
jmp
jmp
pop
xor
pop
push
int3
scas
sub
(bad)
out
inc
int
mov
rol
add
push
test
jl
(bad)
mov
fbstp
retf
xchg
pusha
repz
lock
scas
(bad)
adc
into
xor
cmp
popa
and
xor
jo
mov
pop
fwait
dec
in
ins
cmp
xor
jmp
in
dec
pop
stc
mov
call
in
into
mov
mov
enter
push
cmc
aaa
xlat
bound
es
in
retf
int3
arpl
pop
jl
dec
addr16
xor
pop
xchg
fistp
ret
jo
sub
mov
or
nop
jb
sub
sbb
and
jmp
xor
fisttp
imul
dec
and
rcl
out
pop
sbb
out
loop
or
mov
mov
xchg
in
aam
icebp
mov
bound
(bad)
add
jmp
pusha
jmp
and
loopne
jmp
cmp
push
out
dec
push
pop
mov
push
mov
rcr
test
sub
pusha
loopne
int
mov
jmp
sub
sbb
dec
lods
pop
sti
sub
test
xchg
test
call
test
ins
push
push
rcl
pop
sub
jle
stos
jae
jle
addr16
pop
mov
mov
pop
xchg
cmp
jl
jns
div
inc
sahf
pop
movs
repz
stc
popa
sub
jecxz
and
mov
dec
jg
push
in
push
(bad)
jns
imul
ret
lods
push
push
cmps
ins
sub
pop
jo
cmp
mov
test
jl
jnp
enter
shl
sti
cwde
fwait
dec
push
sar
stos
jae
xchg
fnstcw
call
sub
ins
xchg
mov
and
push
rcr
adc
mov
mov
sub
xchg
pop
mov
movs
int3
sub
stos
out
pop
jae
xchg
(bad)
cmp
fwait
pop
mov
mov
xor
lds
dec
cwde
fwait
mov
shr
mov
lock
test
rcr
jnp
jle
js
adc
or
test
sahf
mov
sbb
sbb
add
sub
popa
or
gs
push
shl
imul
dec
dec
xor
(bad)
mov
jne
adc
out
movs
movs
dec
in
pop
test
inc
pop
push
mov
adc
pop
leave
inc
out
imul
dec
and
and
mov
addr16
push
rcr
dec
jns
mov
xor
adc
pop
mov
scas
out
cwde
jge
dec
inc
xchg
jmp
mov
dec
out
repz
out
mov
out
in
mov
pusha
in
sbb
ins
push
sub
loop
enter
or
in
das
stc
mov
and
push
call
imul
fld
loop
dec
fsubr
pop
pop
fistp
or
iret
mov
es
xor
sub
repnz
pop
push
mov
loop
push
pusha
not
jge
add
jge
test
adc
sbb
adc
jns
and
fst
mov
popf
loopne
jmp
pop
adc
cmp
push
sub
inc
sbb
cmps
sub
xchg
ins
adc
jns
inc
mov
in
and
xchg
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
lods
jg
push
lods
push
and
cmp
out
adc
dec
push
out
dec
inc
cmp
(bad)
cmp
out
pop
add
sub
mov
leave
and
pop
push
out
pop
push
out
pop
push
imul
ins
adc
cmp
loopne
and
push
push
sub
sub
(bad)
jns
push
out
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
xor
test
shr
and
push
imul
jl
(bad)
data16
adc
ror
stc
push
fs
aaa
dec
retf
push
sbb
pop
addr16
sbb
or
add
in
xor
ins
inc
fist
bound
jne
addr16
iret
dec
xchg
xchg
outs
into
shr
push
push
out
or
pop
inc
ins
adc
xchg
call
and
aam
scas
scas
nop
adc
mov
push
sahf
(bad)
repz
xchg
xor
aad
stos
mov
pop
adc
inc
jp
jg
addr16
ret
fld
rcl
(bad)
and
cdq
ds
out
int
and
dec
pop
push
out
xor
push
or
pop
shl
dec
cli
fwait
retf
mov
test
mov
retf
shl
xor
add
stos
mov
sahf
push
into
adc
addr16
or
dec
cwde
bswap
xchg
out
lods
das
cs
cmps
daa
mov
fsubr
scas
push
dec
and
xchg
push
mov
outs
enter
mov
je
leave
fiadd
lea
pop
lods
and
js
mov
clc
sub
xor
add
inc
fptan
mov
dec
mov
jmp
hlt
pushf
mov
xor
cmp
mov
call
shl
sub
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
lods
and
sub
inc
mov
dec
adc
sub
out
pop
push
imul
jge
idiv
adc
or
cmc
sbb
in
ffree
stc
and
add
push
inc
out
es
sub
xor
pushf
imul
scas
inc
push
jge
js
xchg
xor
cld
push
dec
xchg
pop
sbb
das
or
lods
pop
cmp
cli
adc
jno
neg
rcr
cld
dec
in
in
(bad)
idiv
inc
sub
cmp
cmp
shl
retf
mov
adc
(bad)
call
clc
xlat
repz
push
test
push
sahf
les
xor
in
ins
sub
mul
adc
arpl
leave
push
fs
sti
leave
dec
daa
adc
in
xchg
push
je
sub
mov
jnp
xchg
in
jno
(bad)
in
out
or
outs
jnp
push
push
and
loope
bound
cld
mov
xchg
pop
jp
sbb
pop
ins
mov
xor
aas
mov
mov
out
je
aas
cmc
lods
repz
inc
cmp
dec
push
xchg
mov
sbb
(bad)
jmp
xchg
jmp
mov
mov
shl
les
arpl
mov
and
jne
xchg
xor
cld
test
movs
fld
fiadd
loope
rol
fadd
lahf
xor
cmc
xchg
adc
jmp
xchg
js
dec
push
iret
imul
sub
cwde
pop
shr
cmp
dec
mov
dec
(bad)
sub
adc
or
jmp
sub
add
adc
adc
sbb
test
ins
add
xlat
idiv
and
es
pop
adc
dec
outs
xor
sahf
test
stos
mov
adc
xchg
and
push
rcl
pop
mov
mov
xchg
push
mov
retf
xor
sub
inc
les
dec
pop
sub
pop
and
test
dec
aaa
ja
aam
pusha
inc
pop
inc
fucom
icebp
xchg
push
and
adc
adc
cwde
adc
jo
call
(bad)
push
popf
sbb
push
fcom
mov
stos
jp
dec
mov
cdq
pusha
iret
je
xor
cmps
enterw
sub
loop
cmc
or
xchg
pop
dec
test
or
(bad)
sahf
int3
jmp
and
ins
in
sar
and
xchg
outs
and
out
add
hlt
aaa
xchg
pop
pushf
hlt
out
lahf
pop
pop
push
pop
push
hlt
mov
(bad)
mov
scas
retf
cmp
hlt
lods
and
mov
leave
inc
xor
fst
jmp
sbb
sub
cld
sbb
xchg
jmp
(bad)
jl
retf
or
call
popf
or
mov
sub
jae
aam
cdq
data16
mov
(bad)
(bad)
and
in
stc
xchg
or
push
and
stos
adc
stos
lahf
push
aad
push
cmp
pusha
neg
ins
add
sbb
(bad)
sub
out
sbb
inc
out
sbb
movs
sbb
in
sbb
xlat
cmp
push
push
fiadd
dec
rol
lods
pop
out
icebp
dec
push
pop
add
sub
lahf
out
test
test
pop
push
mov
mov
pop
push
jle
push
imul
or
lods
jmp
shr
aad
sbb
movs
and
mov
dec
retf
outs
add
sbb
pop
lods
iret
std
out
add
mov
neg
inc
pop
(bad)
(bad)
sbb
clc
sbb
jbe
pop
pop
mov
mov
xchg
sbb
hlt
jl
inc
sub
xchg
lds
call
inc
leave
ss
cmps
dec
(bad)
gs
int
mov
and
add
mov
aad
fs
xchg
test
mov
ins
sbb
jg
jno
(bad)
jno
mov
xchg
fistp
outs
add
or
mov
ret
scas
mov
in
cmovge
xor
add
and
inc
mov
nop
jns
lods
inc
ss
mov
aam
add
and
je
sbb
push
out
mov
enter
jns
mov
stos
shr
bts
scas
push
mov
sbb
popf
jns
sbb
outs
sbb
iret
or
leave
imul
shl
stos
xor
sub
or
clc
adc
(bad)
out
into
in
in
test
mov
fsub
xchg
ret
movs
mov
adc
daa
jae
bound
inc
cmp
push
mov
xchg
sbb
fcomp
int
dec
lods
popf
call
sbb
fsub
scas
popf
sbb
ss
inc
cmp
imul
adc
retf
jge
cmp
sub
push
or
in
retf
test
ror
sbb
movs
adc
add
mov
jns
push
fisubr
fsub
and
cmp
ins
ins
(bad)
pop
ds
fs
iret
call
inc
cmp
xchg
cmp
(bad)
sbb
(bad)
sub
imul
dec
adc
sbb
sbb
push
aad
pop
addr16
repnz
aam
jge
idiv
jno
jmp
stos
ror
cmp
push
cwde
mov
jo
iret
popa
mov
pop
adc
ret
mov
ds
fimul
popf
cmp
jmp
cmp
fs
js
popa
push
leave
cmp
sub
cmp
(bad)
sbb
add
push
xchg
sbb
ins
ins
adc
lds
aaa
or
sti
sar
scas
cmp
pop
jne
and
repnz
test
cmp
lock
jge
sbb
into
and
stc
adc
inc
cmp
or
sub
int3
das
in
xor
cmp
inc
movs
in
xchg
int
jne
mov
fisubr
push
add
retf
or
xor
not
mov
and
stos
inc
xlat
retf
xrelease
or
gs
push
mov
ficomp
outs
add
cmp
inc
loop
jae
jg
rcr
shl
sub
sti
sbb
shl
xchg
sub
inc
test
jae
sub
mov
xchg
mov
fwait
aam
movs
les
xor
adc
jp
lods
push
jge
mov
or
inc
(bad)
cmp
(bad)
sub
test
popa
out
dec
adc
or
ror
jg
mov
push
dec
jns
push
add
aaa
jnp
loop
jp
rcr
sar
cmp
nop
in
(bad)
pushf
fistp
lods
mov
shl
addr16
and
out
and
or
into
jle
mov
push
push
ror
stc
xor
xchg
and
int
and
add
popf
push
pop
or
xlat
aad
cmps
jmp
add
in
nop
sbb
(bad)
nop
shl
out
out
mov
leave
add
pop
xchg
sub
mov
nop
shl
mov
inc
retf
test
(bad)
je
ss
fldz
mov
mov
in
lahf
aas
push
xchg
jae
mov
fs
sub
popf
iret
sub
fidiv
mov
mov
push
addr16
or
into
sahf
pop
mov
into
cli
push
shl
mov
cmp
jp
sar
xor
pop
mov
push
les
xor
gs
xchg
jo
xchg
addr16
sub
and
loop
and
(bad)
push
icebp
mov
nop
push
loope
and
aam
inc
sub
sub
push
cs
push
pop
sbb
pop
add
in
daa
into
or
movs
hlt
hlt
lock
les
aam
sub
test
jb
cwde
mov
and
sar
mov
pusha
das
icebp
or
sub
rcr
retf
pushf
jnp
fdiv
call
popa
sar
cwde
push
cdq
retf
mov
sub
mov
repz
inc
mov
add
push
popf
out
inc
jmp
not
ds
pushf
and
jg
mov
sub
push
cli
test
cli
add
pop
rol
mov
or
or
jle
adc
jmp
jno
push
xchg
icebp
pushf
aad
add
cmp
out
xlat
aaa
xchg
xchg
mov
pop
sbb
adc
xor
popf
jo
cdq
mov
es
std
jmp
test
jnp
sub
jg
rol
shr
dec
mov
test
idiv
xchg
or
mov
test
adc
(bad)
rcl
pop
in
mov
sbb
das
or
fidivr
mov
out
push
adc
push
push
mov
repz
fimul
and
mov
fisubr
mov
pop
and
or
into
nop
aad
pop
hlt
popf
add
pop
or
xor
pop
cmp
add
push
jmp
mov
out
mov
dec
(bad)
loope
xchg
adc
shl
inc
punpckhdq
pop
in
hlt
in
aam
xchg
aad
lahf
ret
stos
ret
iret
je
addr16
dec
ss
imul
xor
sbb
lods
jle
xchg
push
or
retf
jecxz
adc
aaa
add
in
add
dec
scas
xchg
movs
xor
wbinvd
(bad)
arpl
test
repz
ins
push
popf
popa
call
inc
int
cmp
or
aad
cmps
int3
add
push
inc
xor
mov
pop
ss
hlt
sar
(bad)
arpl
mov
mov
je
aas
aam
mov
sahf
mov
or
sub
sub
ss
pop
xchg
sub
jb
inc
mov
jge
push
and
cmp
jg
sbb
xchg
push
inc
ins
jmp
jns
fnstenv
add
retf
mov
sub
pop
dec
mov
rcr
pop
fsubr
add
call
adc
mov
call
arpl
lock
inc
es
jmp
lock
add
inc
iret
fisub
jne
(bad)
mov
mov
inc
pop
test
and
add
inc
imul
cmps
mov
push
mov
jne
cmp
(bad)
cmps
jb
mov
or
xchg
and
shl
scas
xor
int3
fimul
jne
dec
push
add
hlt
shr
mov
or
mov
adc
out
inc
ja
stos
jo
das
push
cwde
out
daa
in
data16
int3
test
pop
and
aaa
push
(bad)
imul
test
cmp
cmp
fldcw
adc
bound
enter
dec
mov
stos
inc
push
fisttp
lea
cmps
(bad)
iret
add
arpl
inc
dec
or
dec
xchg
lods
das
scas
stos
fistp
loop
inc
ss
scas
xor
js
sbb
dec
cli
outs
mov
test
mov
sti
scas
xor
fs
(bad)
adc
xor
cmp
bound
and
push
test
mov
adc
pop
jmp
inc
add
jle
call
test
fiadd
lods
xor
fwait
or
mov
pop
clc
push
mov
inc
call
or
or
loop
out
in
outs
dec
loop
adc
xchg
test
bswap
mov
int
add
les
push
add
push
das
inc
lock
jae
loop
fwait
in
inc
cld
cmps
jne
aam
js
adc
and
pop
inc
jl
dec
adc
ss
xchg
mov
or
dec
fucomp
mov
ret
loop
ret
loope
and
mov
mov
xlat
mov
mov
pop
adc
retf
inc
inc
neg
ret
push
mov
xor
mov
xchg
xchg
and
adc
out
or
mov
js
adc
neg
add
(bad)
ficom
or
pop
jecxz
pop
daa
or
xchg
jno
(bad)
ficomp
ret
mov
out
clc
stc
leave
outs
mov
dec
nop
fcom
jno
inc
inc
movs
lahf
rol
retf
pushf
hlt
pop
inc
pop
xchg
push
enter
mov
push
push
loopne
mov
xlat
mov
dec
loope
dec
movs
inc
pop
mov
jns
in
inc
imul
icebp
movs
cmc
push
outs
mov
popf
adc
leave
pop
rol
mov
frstor
ins
es
into
pop
in
dec
and
dec
dec
mov
in
rol
add
in
dec
jmp
push
test
push
fcom
out
aas
sub
jmp
(bad)
adc
adc
sbb
call
call
cmps
mov
mov
mov
mov
dec
bound
xor
push
das
test
(bad)
nop
call
mov
xor
ror
neg
mov
mul
cmp
iret
in
sbb
xchg
pop
sbb
add
mov
and
lods
(bad)
test
mov
scas
push
pusha
jns
add
sbb
sub
pop
mov
mov
ret
addr16
sti
push
xor
sub
or
pop
inc
jbe
or
ss
mov
inc
and
or
(bad)
hlt
pop
nop
pop
push
mov
pop
xchg
pop
aaa
and
pop
dec
sub
mov
sbb
nop
mov
out
dec
repnz
into
lods
xor
lods
mov
(bad)
dec
lods
mov
in
jg
sub
sbb
lahf
retf
call
neg
stos
rcl
cmps
push
xor
mov
pop
retf
cld
jle
cmp
test
pop
mov
outs
pop
inc
or
xor
sub
pop
test
out
neg
add
pop
pop
mov
xor
and
movs
cmovne
sub
ret
mov
mov
cmp
dec
test
pminsw
mov
div
pop
xchg
lds
lock
movs
pop
xor
int
jb
test
rcr
adc
push
xor
test
push
sahf
(bad)
jp
lea
ds
add
ins
and
retf
lods
pop
sbb
test
push
aad
inc
call
inc
test
push
(bad)
sbb
mov
pop
inc
idiv
dec
inc
in
inc
pop
loope
dec
dec
jmp
movs
repnz
loope
dec
push
out
dec
and
jbe
jmp
inc
mov
scas
dec
stos
(bad)
push
mov
jmp
(bad)
outs
fmul
(bad)
pop
push
pop
mov
or
add
call
mov
adc
enter
out
push
mov
lods
xchg
and
add
pushf
xor
bound
mov
popa
stc
dec
enter
or
cmp
addr16
sub
in
or
lds
fs
out
jle
out
cwde
imul
rcl
sahf
add
fdiv
fiadd
int3
or
in
icebp
and
jg
scas
mov
das
mov
or
jl
ret
and
inc
pop
in
pop
icebp
iret
mov
sub
mov
lods
xor
mov
pop
dec
arpl
dec
xchg
fiadd
dec
inc
(bad)
mov
out
push
push
std
rcr
mov
dec
pop
dec
push
rcr
stc
cwde
bound
call
or
aam
in
call
mov
stos
cmp
clc
mov
leave
fldenv
nop
xchg
sahf
ins
push
test
retf
addr16
sbb
xor
mov
rcl
stos
imul
sub
fwait
xor
fiadd
mov
cdq
mov
cmp
out
call
push
sub
jno
jns
outs
out
mov
hlt
pop
inc
jg
mov
inc
xor
jb
mov
out
dec
adc
(bad)
lds
in
imul
fwait
jle
or
jne
sahf
not
push
xor
fnstcw
mov
(bad)
xor
sub
mov
adc
fsubrp
dec
mov
pop
push
push
mov
cmp
ins
ret
and
sti
cmp
add
loope
pop
mov
sub
fistp
es
push
imul
enter
or
add
cmps
js
or
scas
dec
lahf
jae
add
add
leave
outs
add
sbb
jge
in
push
mov
cmp
push
cmp
ja
(bad)
pop
mov
or
into
sar
mul
or
mov
xor
fsubr
rcr
mov
pop
shl
push
xlat
adc
movs
nop
pusha
mov
mov
dec
dec
inc
movs
dec
sar
(bad)
repz
gs
hlt
call
and
cld
shl
in
in
xor
rcl
ror
data16
pop
loopne
jnp
aas
mov
or
lods
ins
xchg
fucomp
fcom
jns
adc
adc
jmp
prefetcht1
sti
and
mov
in
pop
pop
ss
loop
je
lds
mov
lods
sar
into
jb
sbb
sbb
std
mov
ss
imul
mov
xchg
pop
and
mov
push
out
jge
test
daa
adc
repnz
mov
adc
ror
loop
in
sub
inc
lds
leave
and
sbb
sub
mov
cmp
pushf
xor
dec
mov
ja
imul
ins
sub
popf
imul
cmp
mov
mov
sbb
ret
xchg
hlt
pop
mov
mov
js
fmul
add
call
rol
psrld
adc
pop
pop
add
fcomi
dec
cmps
fwait
jge
daa
sub
push
ins
xchg
or
out
addr16
push
sub
inc
mov
sbb
pop
dec
jae
jno
fisttp
gs
jno
xchg
xlat
mov
adc
sbb
cmc
cld
retf
cmp
mov
or
shr
arpl
test
ret
adc
inc
imul
cmp
jb
(bad)
xchg
call
aaa
aad
call
add
shl
mov
cli
fimul
test
rcl
push
push
xchg
pop
or
mov
enter
std
jle
adc
cmps
jmp
mov
pop
addr16
push
jl
jle
pop
ins
xchg
cmps
jl
fild
dec
vpmovzxbq
rcr
push
outs
ret
dec
mov
int
xchg
mov
or
data16
dec
je
dec
enter
pop
aas
or
cmc
xor
mov
mov
mov
or
adc
mov
scas
(bad)
movs
pop
sub
or
stc
test
clc
and
mov
retf
push
mov
out
popa
cs
jne
mov
(bad)
scas
mov
cmp
ins
rcr
pop
pusha
test
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
jge
imul
pop
push
imul
pop
inc
jmp
nop
test
inc
mov
fild
mov
jb
and
jb
loopne
xchg
out
inc
je
mov
jno
clc
dec
fsub
lods
add
retf
mov
fcmove
fisubr
push
imul
jbe
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
pop
push
imul
dec
inc
cli
imul
neg
pop
push
out
pop
inc
imul
dec
inc
idiv
dec
push
cmc
cmp
inc
dec
out
mov
push
call
sbb
jg
stos
out
add
mov
cwde
int3
adc
mov
in
push
mov
jp
lods
call
dec
hlt
dec
sub
in
dec
hlt
sbb
push
inc
loope
jl
jne
dec
cli
fmul
lock
and
stos
push
add
and
mov
dec
cmc
mov
fst
jmp
pop
sub
jl
push
sub
arpl
adc
aad
jbe
xchg
sbb
add
test
mov
adc
and
mov
push
sbb
test
aam
pusha
ds
aaa
pop
sti
movs
inc
cwde
loope
dec
mov
push
lods
dec
sbb
clc
fst
push
mov
call
jg
outs
jg
daa
sub
dec
or
xchg
ds
scas
cmp
jp
mov
cmp
ror
push
scas
inc
xchg
ret
jno
or
mov
and
xchg
mov
aas
adc
jne
mov
mov
mov
mov
xchg
js
mov
jp
push
inc
xchg
cmp
jae
inc
sbb
in
or
mov
push
imul
pop
sbb
dec
push
mov
sub
(bad)
cmp
(bad)
sub
imul
dec
inc
idiv
dec
inc
in
pop
inc
repz
repnz
loope
jge
out
pop
adc
or
jmp
js
mov
ja
idiv
out
out
push
and
imul
sbb
jb
ds
dec
aas
mov
popf
pop
ror
dec
dec
add
rcr
rcl
jg
dec
cmp
sub
movs
in
jno
and
or
push
(bad)
mov
out
dec
and
imul
mov
jnp
inc
in
sar
jp
dec
mov
cmps
jl
xor
fs
pop
arpl
out
adc
lahf
lahf
(bad)
cmp
stos
push
add
enter
adc
imul
movs
adc
hlt
int
or
mov
ja
mov
into
mov
or
ret
push
or
out
(bad)
pop
pop
hlt
sub
xchg
mov
gs
popf
in
push
cmp
pop
inc
sbb
push
imul
jge
out
pop
push
(bad)
jns
inc
cmps
sub
imul
dec
inc
in
pop
inc
loope
push
push
out
and
ffree
jmp
test
dec
mov
rcr
out
pushf
popa
in
hlt
test
mov
add
push
xchg
push
test
adc
push
push
fsub
pop
add
xchg
sahf
mov
add
mov
and
cwde
sub
adc
stos
or
mov
sbb
sub
jae
adc
and
push
cmp
icebp
mov
lods
shl
in
(bad)
jbe
inc
add
cmps
inc
mov
std
cmps
neg
test
in
cwde
je
adc
pop
mov
call
fcmovbe
push
popf
dec
xchg
(bad)
sub
pop
pop
cwde
ror
ret
sbb
cld
sti
aam
test
push
inc
xchg
push
jb
and
mov
push
cmc
sub
sbb
out
fbstp
mov
adc
mov
push
out
push
mov
mov
test
sub
pushf
ins
pop
gs
pop
dec
or
cmpxchg
jp
xchg
push
fcmove
pop
(bad)
cld
jle
pop
mov
adc
in
call
xchg
jb
cs
or
std
sub
xchg
mov
mov
push
cmp
sbb
push
sub
mov
(bad)
xchg
mov
lods
inc
fs
or
dec
(bad)
popf
rol
pop
retf
and
pop
jno
mov
addr16
adc
inc
loopne
test
xchg
sbb
push
data16
jle
aad
lock
fsub
mov
inc
aaa
fld
retf
inc
adc
or
jg
lods
mov
data16
outs
add
mov
dec
ins
add
shr
(bad)
rol
fidiv
(bad)
loopne
(bad)
jecxz
int
mov
arpl
inc
aam
fst
push
sub
scas
scas
icebp
fsub
movs
adc
stos
xor
mov
xchg
fimul
push
retf
jg
nop
in
push
cmp
jecxz
shr
jle
les
xor
retf
call
clc
jmp
leave
stos
js
sti
std
cmp
lock
jns
clc
jnp
hlt
call
daa
fsubr
shl
test
scas
sti
mov
xor
jno
jecxz
pop
cmps
rol
jecxz
cwde
mov
or
mov
dec
mov
cmps
dec
ss
retf
add
push
call
stos
mov
jo
lods
cmps
add
mov
push
dec
inc
xchg
cmps
dec
adc
cmp
or
xor
cmp
lea
add
or
cmp
movs
movs
pop
inc
in
sbb
fiadd
rcr
scas
pop
imul
call
fidiv
(bad)
sbb
xchg
cmp
jae
stos
mov
pop
imul
jnp
(bad)
mov
pop
aam
rcr
test
xchg
push
and
or
aam
dec
xor
mov
xor
push
fld
scas
loope
push
dec
cmp
mov
cmp
jp
push
pop
dec
ret
pop
push
ret
pop
and
inc
outs
movs
dec
xor
test
and
adc
sub
outs
mov
shl
push
xchg
fwait
(bad)
jmp
ficomp
stos
sub
inc
mov
mov
sub
xor
repz
dec
int
cdq
out
out
jmp
xchg
sbb
pop
sub
adc
mov
ja
jb
aam
xchg
ss
pop
add
bnd
sbb
test
test
and
test
and
out
(bad)
xor
xchg
aad
adc
inc
sbb
mov
arpl
test
retf
sbb
inc
xor
sbb
cmp
pushf
push
js
xor
xor
push
stos
jae
dec
out
lods
mov
xor
icebp
push
clc
sar
sub
mov
jp
xchg
(bad)
jnp
rcr
stos
icebp
pop
popf
dec
push
push
scas
fwait
inc
or
iret
repnz
xor
call
jo
cmc
xlat
xchg
add
ret
jns
and
mov
sub
fchs
mov
imul
pop
leave
dec
mov
hlt
cs
mov
leave
dec
jo
lea
(bad)
xor
int3
outs
aas
cmps
push
inc
outs
mov
(bad)
mov
add
leave
cdq
repnz
and
cli
mov
sub
lock
out
clc
pop
sbb
xchg
sbb
int3
aam
out
daa
mov
mov
xlat
sbb
sub
sbb
addr16
dec
lds
adc
mov
xchg
jnp
loop
jne
nop
add
fs
sar
aad
mov
addr16
jno
lahf
dec
dec
xchg
adc
shr
push
outs
std
inc
jge
fmul
mov
pop
jecxz
dec
(bad)
pslld
dec
mov
stos
jae
fs
retf
sub
mov
push
add
pop
mov
(bad)
mov
pop
mov
gs
cmp
dec
mov
push
lea
mov
dec
sar
cmps
push
or
jl
sub
imul
cmps
or
fsub
sbb
mov
dec
or
xor
inc
enter
push
adc
push
or
push
mov
mov
push
imul
mov
shl
loop
fldenv
cmp
stc
fadd
sub
jne
jns
in
lock
outs
mov
rcr
fst
and
add
cmp
adc
dec
cs
dec
or
js
and
xchg
cmps
fs
pusha
mov
sbb
xor
cdq
xchg
dec
call
imul
fst
loop
jbe
ins
jo
sub
ins
pusha
(bad)
sbb
(bad)
cdq
or
jo
imul
loopne
mov
inc
leave
dec
xor
leave
pop
mov
sbb
cmp
idiv
mov
fnstcw
sub
stos
sbb
add
imul
daa
push
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
dec
sar
sbb
(bad)
cmp
cmp
push
jmp
push
out
pop
push
imul
pop
push
imul
cmp
push
(bad)
sbb
out
pop
loopne
cmp
out
pop
push
out
pop
push
imul
dec
jo
sub
pop
mov
dec
push
xchg
ins
push
sub
xlat
test
pop
jno
sub
sub
mov
pop
pop
sahf
dec
jg
ss
lods
bound
dec
mov
jmp
lods
xlat
xor
xchg
inc
xor
lods
stos
nop
inc
(bad)
dec
jae
cmp
add
js
lahf
jnp
sub
push
mul
mov
cmp
jle
add
movs
jbe
addr16
adc
sub
pop
shr
mov
mov
ss
fidivr
push
sub
daa
stc
sahf
jmp
mov
sahf
daa
(bad)
in
adc
stc
fbld
pop
lahf
imul
gs
shl
cmc
mov
sbb
and
lds
push
jo
sub
and
in
stos
push
xchg
pop
mov
adc
pusha
fcomip
jp
mov
sub
lock
das
aam
jecxz
cmps
daa
push
pop
push
jb
add
xchg
push
mov
cmp
add
test
push
push
mov
arpl
das
jnp
mov
sbb
push
mov
or
div
xor
xchg
xor
xchg
shl
outs
add
data16
ins
loopne
inc
sub
ror
sub
xchg
add
ret
in
jb
add
adc
push
pop
loop
cmp
in
nop
inc
aaa
mul
out
jbe
ret
call
ret
mov
iret
mov
xor
fld
add
ret
xchg
les
in
fcom
push
not
adc
dec
xchg
vmovaps
loop
mov
fs
xor
sbb
std
out
xor
movs
sbb
xchg
pusha
add
ss
fcomp
jns
imul
xchg
mov
outs
push
les
mov
ins
(bad)
mov
sub
cmp
sbb
jecxz
jecxz
mov
adc
xor
dec
sti
jg
iret
dec
pop
cmp
pop
loop
fucom
add
fsubp
cli
xor
xor
pop
call
or
xchg
repnz
ror
mov
fwait
inc
outs
pop
nop
sub
push
dec
and
jb
push
sbb
mov
dec
push
inc
sbb
pop
push
ss
and
dec
int
stc
and
cmp
push
idiv
pop
push
(bad)
sub
idiv
jo
or
out
sbb
cmps
sbb
adc
sub
rcr
add
mul
mov
nop
mov
pop
jle
cs
leave
nop
xchg
pop
out
fidiv
push
adc
hlt
lods
popf
jecxz
loope
sub
dec
mov
out
adc
fcom
xchg
test
pop
icebp
push
pop
call
or
push
and
stc
xchg
and
dec
pop
in
(bad)
jb
push
sub
ins
outs
retf
cmp
and
les
jge
cli
mov
or
xor
sahf
and
fmulp
pushf
fs
ins
cli
inc
mov
das
fdiv
dec
cmp
mov
cmp
or
xchg
jmp
mov
test
mov
cld
xor
outs
int3
inc
jecxz
xchg
adc
stos
(bad)
je
retf
cmp
push
test
(bad)
or
add
xlat
arpl
icebp
nop
ret
lods
pop
pusha
jnp
adc
test
adc
loope
cmp
je
aam
mov
js
movs
pop
sbb
lods
mul
mov
imul
pop
jmp
addr16
std
pop
push
or
push
mov
fidiv
adc
retf
mov
adc
data16
jbe
jp
mov
mov
dec
cmp
inc
jmp
inc
pushf
adc
in
test
ret
push
ins
xlat
jns
xchg
bound
xchg
cmp
dec
repnz
shld
and
sub
pop
pop
enter
int3
xchg
mov
(bad)
add
daa
sub
fwait
bound
cli
inc
xchg
xchg
add
push
adc
mov
sub
push
shl
add
lock
mov
pop
add
jmp
ret
cmp
fiadd
xor
not
gs
inc
scas
xchg
hlt
dec
add
dec
iret
dec
daa
out
xchg
inc
sbb
push
ins
push
mov
jg
repz
and
rcr
push
les
push
mov
jnp
pop
mov
scas
pushf
xor
sbb
shr
outs
xchg
mov
mov
call
dec
ret
cmps
in
rcl
in
gs
mov
or
bound
pop
je
xor
test
add
push
arpl
ret
add
ret
test
aam
adc
sub
xor
mov
fistp
adc
stc
shl
push
bound
mov
push
push
sub
call
icebp
rcl
fwait
push
pop
inc
cmps
cmp
push
(bad)
sbb
(bad)
sub
imul
jge
imul
jge
out
pop
popa
idiv
xor
cmp
test
pop
imul
(bad)
jecxz
ret
(bad)
enter
mov
es
(bad)
ffreep
aam
push
mov
in
jecxz
outs
call
jle
xor
xor
pop
call
mov
push
fidivr
cld
daa
mov
add
mov
sbb
retf
cmp
mov
std
add
pop
and
mov
jge
fxch
adc
mov
mov
mov
ds
adc
mov
cmp
or
mov
pop
push
out
dec
push
(bad)
sub
neg
dec
adc
sbb
jno
or
cmc
jge
inc
in
dec
mov
and
and
std
xchg
aad
or
or
add
cli
outs
test
mov
add
cli
jmp
stos
push
iret
push
scas
cdq
aaa
dec
pop
push
imul
mov
idiv
std
mov
cmp
clc
pop
aas
mov
dec
inc
push
sub
pop
clc
daa
pop
stc
enter
std
push
jbe
inc
mov
jno
sbb
(bad)
into
mov
and
mov
call
add
xchg
popf
cmps
rol
dec
leave
xchg
es
jp
or
dec
add
mov
jns
push
leave
pop
jne
pop
inc
out
adc
(bad)
dec
pop
sub
scas
add
pop
pop
cmp
add
loopne
sub
pop
out
arpl
pop
les
aad
or
push
inc
or
imul
or
jbe
push
frstor
aam
bound
sub
pop
push
mov
int
xor
jbe
addr16
or
lahf
lock
outs
xchg
stc
lahf
outs
shl
mov
arpl
lahf
or
shl
sbb
xor
fild
push
aas
imul
and
fst
push
jae
or
stos
push
pop
pusha
inc
add
adc
stc
add
push
adc
das
and
in
inc
xchg
sbb
xchg
xchg
test
and
jecxz
rcl
jo
pop
mov
mov
mov
retf
adc
xchg
std
shl
nop
adc
jmp
stos
push
test
gs
and
mov
jmp
in
scas
ja
push
jmp
jae
inc
repnz
jge
dec
scas
(bad)
dec
adc
sbb
lahf
mov
and
repnz
mov
loope
mov
jno
adc
jg
mov
cwde
mov
dec
imul
or
sbb
jo
outs
mov
shl
ins
mov
cmps
xor
push
les
aad
iret
iret
fmul
bound
push
inc
scas
push
cmp
ret
out
add
pop
jno
pop
pop
call
pop
test
sbb
sti
enter
jae
(bad)
rol
(bad)
cmp
popf
cli
ds
sbb
jg
(bad)
cwde
daa
mov
or
mov
inc
xor
(bad)
outs
ret
sbb
test
xchg
cmp
retf
push
jb
jge
mov
sti
inc
jl
push
xor
or
dec
xor
ret
pop
popa
adc
mov
push
imul
neg
mov
stc
sbb
jmp
add
inc
inc
jnp
bound
outs
ret
pop
fisubr
push
sub
adc
sbb
rcl
cmp
xchg
sbb
popa
(bad)
js
jae
imul
cmp
pop
push
inc
push
in
dec
dec
ret
jbe
jbe
dec
icebp
xor
fcomp
repnz
int
dec
push
out
jle
jbe
aaa
cmc
cdq
in
xchg
mov
mov
mov
movs
imul
inc
add
lock
mov
(bad)
mov
dec
push
div
movs
jle
mov
mov
mov
add
mov
mov
dec
gs
fnstenv
ja
cmc
xchg
jmp
ins
sbb
mov
xchg
js
push
(bad)
pusha
dec
push
xchg
mov
arpl
xor
rol
loop
(bad)
fwait
mov
push
imul
adc
daa
inc
inc
and
and
fild
mov
in
call
hlt
(bad)
jbe
xchg
adc
mov
fiadd
xor
outs
add
jg
jle
jns
cs
cmps
inc
call
sub
(bad)
jnp
fsubr
cmp
and
shl
inc
sbb
add
out
sub
or
pusha
xchg
xor
push
lods
fild
mov
pop
cmps
sbb
stc
cmp
inc
and
fadd
mov
cwde
not
xor
popa
fwait
js
xchg
and
adc
pop
(bad)
repnz
dec
ins
jb
mov
xchg
xchg
pop
sahf
call
retf
mov
xor
ret
push
enter
lahf
mov
xor
rep
(bad)
mov
fcmovu
je
test
lahf
fucom
inc
icebp
popf
fs
cmp
aaa
retf
lock
dec
addr16
dec
inc
jle
cmps
mov
mov
div
pop
cwde
and
sub
ins
cmp
dec
cmp
xor
or
xchg
mov
scas
push
cmp
je
das
or
inc
mov
add
lods
loope
mov
push
cld
cvtpi2ps
push
xchg
in
(bad)
(bad)
mov
mov
sub
fidiv
es
mov
push
push
jno
(bad)
inc
and
(bad)
std
pop
mov
lods
push
std
add
pop
cmc
jmp
lods
sbb
cmp
outs
mov
stos
pop
push
call
daa
xor
ja
mov
ds
out
push
daa
jb
icebp
gs
xor
xlat
in
pop
add
mov
xor
pop
rcr
cmp
mov
push
into
sub
add
mov
dec
and
loopne
enter
and
jge
jmp
cli
aas
in
arpl
mov
add
out
mov
mov
clc
ds
stos
jmp
sub
jb
add
(bad)
imul
lahf
(bad)
out
jecxz
push
mov
(bad)
(bad)
popf
movs
bound
ret
and
xor
and
dec
iret
add
push
or
pop
pop
mov
add
lahf
add
pop
mov
cmovl
sbb
cs
lods
inc
aas
pop
or
inc
leave
jl
push
fstp
outs
data16
and
adc
mov
test
dec
loop
and
mov
pop
std
in
mov
jbe
push
or
test
fwait
shl
mov
mov
dec
jle
mov
xor
jno
ret
add
fld
sub
int
fild
lods
cmp
cmps
jp
gs
icebp
stc
inc
dec
mov
(bad)
xchg
arpl
xchg
lds
rcr
xor
imul
push
inc
add
cmp
fdiv
jp
xchg
mov
xchg
stos
adc
add
adc
jnp
or
sub
popa
pop
cmp
cmp
push
jbe
gs
adc
lock
jnp
shl
mov
iret
cmp
add
in
xchg
test
adc
sub
mov
xchg
inc
out
scas
es
sub
loop
adc
mov
das
push
outs
es
outs
pop
pop
iret
das
sub
mov
jbe
pop
mov
in
retf
call
jmp
xor
sar
pop
push
xchg
pop
sti
fistp
add
pop
pop
mov
lahf
jnp
int3
push
adc
jg
inc
dec
fmul
lds
(bad)
push
outs
aas
das
xor
fwait
test
xchg
cmp
inc
daa
sub
popa
aam
ss
mov
popf
dec
and
jbe
push
adc
rcr
sub
xchg
xor
cmc
inc
mov
xchg
fs
addr16
ins
out
dec
(bad)
inc
ja
jo
sbb
int3
in
push
sbb
mov
or
call
inc
out
sub
pop
mov
adc
pop
add
ss
bound
inc
jge
sahf
push
and
hlt
sar
das
cmc
retf
mov
dec
addr16
(bad)
sbb
retf
sbb
outs
dec
sbb
adc
jae
dec
jg
xlat
xchg
imul
shl
pop
xchg
enter
iret
adc
shl
in
mov
push
unpcklps
repz
cdq
adc
xchg
test
push
pop
adc
retf
data16
int
adc
fs
nop
mov
jb
hlt
xchg
int
js
outs
jecxz
(bad)
cmp
push
pop
outs
stc
repz
loopne
push
mov
push
add
mov
add
fst
in
pop
ss
inc
pop
pop
std
bnd
shl
dec
std
aaa
inc
jmp
bound
jns
loope
aas
test
xchg
cli
pop
inc
test
jge
adc
movs
out
xchg
js
jno
movs
and
adc
dec
adc
es
out
dec
ret
adc
mov
mov
inc
sbb
hlt
jle
sti
std
or
or
ins
push
dec
add
cmp
push
shl
pushf
stos
inc
push
ret
or
ret
jmp
jmp
pop
in
data16
sbb
cmp
add
jmp
lds
pop
pop
leave
lods
jno
imul
test
sbb
push
adc
dec
out
out
add
mov
not
aam
adc
push
xchg
out
dec
hlt
add
popa
lds
rcr
jmp
sti
push
je
imul
(bad)
pop
add
or
inc
imul
or
and
dec
mov
push
jle
pop
daa
fnstsw
adc
pop
mov
enter
or
push
mov
add
mov
loopne
fucomip
ret
mov
pop
in
pop
dec
push
push
sub
jbe
jge
(bad)
imul
out
dec
inc
idiv
dec
inc
loop
pop
inc
out
and
es
cs
shr
dec
and
inc
lods
in
loopne
jecxz
jp
les
dec
es
ret
sti
or
mov
icebp
psraw
out
inc
sbb
mov
sbb
cmps
int
dec
in
call
test
sub
pop
mov
mov
xchg
mov
push
pushf
mul
push
sub
inc
out
enter
inc
sbb
sub
shl
leave
pop
pusha
sub
out
cs
(bad)
dec
xor
stc
adc
sub
daa
gs
push
push
mov
lods
jnp
fistp
in
or
push
popa
(bad)
cmp
not
cmps
movs
sub
hlt
mov
ror
push
mov
in
jge
in
add
mov
loope
out
push
jns
or
dec
adc
cmps
mov
jno
cdq
outs
push
fdiv
std
or
xchg
cmp
cs
stc
repz
mov
popa
daa
jns
adc
or
sbb
pushf
loopne
loop
mov
ins
sub
jae
xchg
and
cmc
xchg
je
push
push
inc
repz
pusha
out
iret
shr
cld
scas
push
xor
(bad)
mov
cmc
adc
lds
mov
xor
call
add
ss
sub
mov
mov
inc
push
mov
pusha
mov
xchg
push
sub
in
inc
scas
jmp
stos
fnsave
out
and
adc
repz
push
daa
xor
neg
test
push
ror
add
inc
loopne
push
push
sahf
movs
push
ret
fwait
addr16
not
jo
dec
adc
push
push
mov
addr16
push
cmps
jg
cmps
cmp
dec
pop
(bad)
pusha
call
xchg
ins
mov
jbe
pop
mov
sub
or
mov
inc
shl
enter
mov
jp
mov
out
or
inc
add
mov
pop
fwait
jge
das
xlat
int3
cmp
loope
cmp
dec
xlat
xor
int3
in
adc
imul
jb
push
mov
cmps
mov
fsub
or
push
and
nop
xor
mov
test
aad
sahf
jne
push
jae
mov
cmp
add
stc
ror
dec
and
(bad)
dec
aas
enter
add
mov
or
adc
out
popf
xchg
push
sbb
and
inc
out
pushf
push
scas
ss
bound
aad
or
mov
lock
xchg
mov
scas
repz
fldcw
sbb
test
(bad)
loope
adc
inc
xor
jb
mov
sbb
in
inc
add
ret
stos
xchg
or
fcmovu
adc
xor
sar
dec
mov
inc
iret
ret
mov
fisub
fsubr
outs
mov
repz
aaa
imul
xlat
jmp
xor
pop
sbb
das
jecxz
lods
cmp
jae
aad
movs
(bad)
pushf
ret
dec
arpl
les
jb
pop
cmp
test
xchg
cmp
inc
push
dec
mov
sbb
and
inc
mov
movs
imul
(bad)
lock
push
cwde
or
(bad)
in
js
dec
call
dec
call
rcr
mov
repz
cmp
je
pop
cli
jno
xor
in
pop
rol
inc
sub
ret
outs
in
out
and
stos
and
xchg
or
add
sub
lahf
xor
and
ins
outs
test
cwde
push
loope
ins
xchg
aas
retf
mov
xchg
mov
fiadd
inc
pop
scas
adc
add
jae
int
out
shr
addr16
jmp
pop
es
xchg
pop
les
fidiv
lods
ror
mov
fsubr
dec
add
aaa
fsubr
inc
shl
mov
loopne
aad
inc
mov
fnstsw
aad
fstp
lock
adc
xor
cmps
pop
cwde
bound
fs
xor
lods
mov
imul
call
and
pop
cld
jle
push
xlat
gs
dec
imul
inc
repnz
dec
stc
(bad)
shl
xor
jne
sbb
hlt
or
cmps
mov
icebp
pop
inc
or
test
icebp
fwait
mov
xchg
mov
xlat
xchg
movs
stos
jg
fild
pop
imul
imul
iret
xchg
pop
nop
push
jg
fild
adc
xchg
dec
xlat
ins
int3
xchg
jb
fnstenv
sub
aad
ret
(bad)
imul
xchg
popa
sub
xor
fsubp
cmps
pop
idiv
lahf
xchg
scas
imul
movs
push
sbb
fisttp
in
cmp
stos
rol
push
fcmovne
mov
mov
imul
inc
pop
ins
dec
lock
sbb
inc
dec
dec
and
xor
frstor
push
add
ins
inc
out
pop
push
(bad)
cmp
out
dec
inc
imul
pop
inc
idiv
dec
push
loop
cmps
jg
mov
lods
push
idiv
sub
cmp
xchg
or
lea
icebp
lods
jmp
add
cmc
xchg
js
mov
add
mov
pop
xor
cmps
call
call
call
ds
mov
repnz
inc
(bad)
inc
sbb
inc
imul
and
sbb
sbb
push
xchg
cmc
sahf
and
sub
adc
repnz
add
ds
adc
in
jmp
dec
arpl
lds
pop
inc
or
adc
mov
jg
sahf
(bad)
in
ins
mov
add
inc
xor
scas
cmp
inc
(bad)
or
cmp
in
stos
xor
mov
xchg
push
ja
ss
inc
add
mov
sti
test
inc
retf
les
pop
addr16
dec
jb
test
and
ret
ins
inc
mov
ins
inc
out
dec
push
idiv
pop
push
out
dec
inc
imul
dec
push
in
dec
push
out
mov
lock
lods
push
idiv
jmp
out
(bad)
pop
test
fsubr
loop
sbb
inc
or
pop
dec
stos
fild
test
jbe
mov
pop
test
iret
or
jmp
fld
in
into
ins
add
imul
bts
lods
cdq
int3
fnsave
sbb
int
jne
outs
test
push
fisubr
neg
pusha
imul
daa
jbe
adc
jg
jp
or
mov
outs
xchg
mov
mov
imul
xchg
dec
test
xor
push
jmp
hlt
cmp
cmps
int3
sub
adc
call
jbe
stos
pop
xor
jmp
call
(bad)
or
bound
les
(bad)
and
adc
sub
int
les
cmps
mov
cs
dec
pop
jp
mov
ins
adc
cs
jns
dec
sbb
sbb
shr
cwde
loopne
sti
sub
ins
push
xor
xor
xchg
imul
add
xchg
pop
cdq
push
xor
sub
repz
push
fs
ror
or
movs
sub
adc
lds
shl
adc
enter
pop
js
repnz
dec
pusha
push
sub
fwait
jp
push
inc
and
jbe
(bad)
fild
sbb
retf
pop
(bad)
fisttp
push
cmp
mov
jno
xchg
jae
inc
and
sub
or
push
push
sbb
dec
xchg
adc
shr
scas
jns
mov
sub
movs
stc
mov
sub
xchg
(bad)
jmp
sbb
jmp
cmp
add
mov
xchg
jo
sar
aam
sti
out
sub
xchg
add
sbb
dec
in
imul
push
jp
jbe
cmp
and
sbb
fwait
rcpps
call
jo
out
fdiv
sbb
add
lock
cli
xor
and
repnz
iret
popa
mov
pop
xchg
add
pop
pop
pusha
out
ds
scas
push
rcl
pop
sbb
sub
mov
dec
push
idiv
dec
push
(bad)
cmp
(bad)
sub
idiv
dec
inc
repnz
inc
out
ds
sub
jmp
test
les
data16
mov
inc
mov
fld
adc
popa
cmps
es
mov
pushf
test
into
lock
les
aad
fwait
shr
mov
mov
inc
mov
out
(bad)
shl
stos
into
shl
mov
cmp
cld
in
test
push
lock
sbb
mov
mov
out
or
xchg
shr
push
jbe
pop
imul
test
xchg
bound
cmp
sahf
scas
(bad)
std
dec
stos
jne
mov
data16
push
inc
in
mov
pop
xchg
push
push
(bad)
push
loope
xor
sub
mov
idiv
in
mov
jle
mov
xor
xchg
adc
mov
push
repnz
jnp
push
cs
sar
jmp
cmps
push
repnz
push
in
(bad)
les
lods
ds
adc
stos
cmc
fcomp
popf
nop
cs
rol
mov
mov
mov
add
imul
adc
ja
mov
push
mov
mov
and
repnz
jnp
ss
mov
xchg
cmp
gs
adc
test
mov
js
sbb
mov
mov
sahf
xchg
adc
dec
adc
sbb
ds
es
fst
jge
aaa
clc
rcr
xor
pop
inc
lods
push
mov
or
pop
cmps
stc
fisttp
xchg
mov
fbld
outs
jae
fst
push
push
fnstsw
add
in
mov
sbb
retf
adc
lea
pop
test
mov
and
shr
cmps
leave
pop
inc
xchg
dec
in
cmp
sub
sar
push
push
cs
dec
sub
mov
add
add
sbb
mul
pusha
jg
mov
mov
icebp
lds
sub
dec
jae
add
push
ss
test
aas
mov
movs
mov
icebp
ficomp
jge
aaa
fbld
xor
lock
mov
js
push
mov
inc
dec
aaa
aad
int3
adc
fsubr
data16
pop
dec
jmp
mov
mov
mov
dec
(bad)
add
jg
ret
xor
inc
addr16
push
pop
int
into
lahf
cmp
sbb
in
inc
outs
and
ss
push
and
push
dec
into
xchg
xlat
xchg
adc
out
in
loope
mov
stc
jge
cwde
sahf
xor
mov
fisub
or
stos
imul
ins
jo
mov
dec
(bad)
mov
test
sahf
push
ins
pop
adc
mov
pop
or
jle
mov
lds
sub
sub
sub
xor
cwde
in
enter
jmp
adc
jmp
test
sbb
mov
inc
mov
fistp
rcr
inc
clc
(bad)
outs
in
or
sbb
pop
sar
push
pop
sub
pop
cmc
add
cmp
rcr
popf
fdiv
cmp
mov
and
mov
add
xchg
dec
sub
adc
in
fidivr
or
aas
push
ins
or
in
lahf
out
lahf
je
jmp
(bad)
sbb
sub
loop
cmp
xor
scas
cmc
or
pop
dec
into
push
xor
inc
cld
dec
adc
pop
mov
imul
pop
hlt
(bad)
cmps
push
div
pop
out
shr
cs
xor
ret
push
mov
dec
sub
jle
mov
mov
inc
lock
lods
mov
movs
xor
adc
stos
ds
xor
(bad)
cmc
popa
add
add
jae
inc
les
out
(bad)
out
xor
mov
inc
das
xchg
sub
pop
clc
repz
xchg
cld
jae
dec
ror
daa
inc
pop
xor
(bad)
push
(bad)
ret
addr16
jo
or
pop
mov
imul
pop
mov
xchg
ins
cdq
daa
stos
daa
aas
popf
out
imul
std
dec
shl
loopne
cmp
jno
into
push
mov
push
pop
nop
fs
push
ja
cmp
push
cdq
fs
pop
sti
call
cdq
cmp
jl
jns
ins
ins
inc
idiv
ds
neg
push
icebp
jne
in
dec
mov
jae
addr16
pusha
hlt
fst
cld
cdq
ins
sbb
cmp
sahf
add
mov
iret
push
and
sbb
adc
scas
sub
ss
dec
pop
inc
retf
pop
(bad)
dec
xor
push
fucomip
push
push
sbb
mov
dec
pop
xchg
inc
popa
stos
(bad)
ds
mov
mov
inc
mov
jg
lea
jge
cli
push
sbb
cmp
mov
push
cmp
out
xor
and
stc
je
fwait
add
mov
sbb
xor
push
jo
cmp
inc
shl
jg
aaa
ins
jb
es
test
mov
push
pop
xchg
pusha
les
xor
call
mov
into
imul
fadd
xchg
out
mov
test
pop
outs
daa
mov
call
adc
outs
sub
inc
dec
(bad)
dec
fs
sbb
jmp
ror
cmp
les
test
jg
jmp
aad
les
rcl
ret
xlat
(bad)
mov
imul
je
jne
in
jge
xchg
cs
pusha
pop
cld
fwait
cld
mov
dec
and
pop
jge
mov
and
and
pop
cmp
dec
sbb
mov
push
js
movs
push
cmp
repz
pop
cmp
push
cmp
mov
std
test
and
mov
or
push
sub
pop
mov
out
dec
or
jae
int
sahf
popa
repnz
inc
mov
pop
and
jb
jmp
dec
lock
push
inc
jp
movups
inc
cmp
mul
xchg
jae
cmc
dec
test
jp
push
jmp
mov
cdq
jmp
sub
jo
out
ficomp
cmp
xchg
cmp
test
sbb
inc
and
and
pop
push
mov
clc
imul
test
push
(bad)
aaa
pop
push
(bad)
scas
dec
push
(bad)
mov
xchg
adc
mov
pop
push
push
mov
pop
push
ss
push
imul
pop
push
ss
jl
(bad)
(bad)
pop
push
push
dec
jg
cmps
jg
push
(bad)
xor
mov
pop
push
xchg
pop
push
xchg
push
cmps
repnz
push
outs
jbe
cmps
or
out
jo
push
and
push
leave
jb
(bad)
inc
pop
push
out
outs
push
(bad)
xchg
pop
push
mov
gs
not
push
(bad)
sbb
arpl
pop
push
popfw
sbb
push
xchg
mov
pop
push
(bad)
cmp
xchg
push
imul
ins
push
cmps
cs
push
(bad)
das
pop
push
jbe
jne
ss
push
adc
mov
pop
push
imul
pop
shr
fwait
mov
shr
sub
imul
pop
push
mul
jbe
xchg
push
out
pop
push
xchg
sub
imul
pop
shr
call
sub
pop
push
imul
pop
push
mul
sbb
push
xchg
sub
imul
pop
ror
mov
ror
sub
mul
js
mov
pop
push
xchg
pop
push
imul
pop
push
imul
pop
sar
sub
imul
pop
push
imul
pop
push
imul
pop
push
imul
outs
push
(bad)
push
jns
mov
pop
push
xchg
pop
rcr
call
sub
push
imul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
imul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
imul
jg
push
jg
push
(bad)
sub
imul
pop
rcr
fwait
mov
shr
sub
imul
pop
push
imul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
imul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
imul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
imul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
imul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
imul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
imul
push
push
ja
push
(bad)
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
imul
push
push
ds
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
imul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
imul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
imul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
imul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
mul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
mul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
mul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
mul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
mul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
mul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
mul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
mul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
mul
arpl
pop
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
mul
push
push
ds
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
mul
push
push
ds
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
mul
push
push
ds
push
sub
imul
pop
rcr
call
sub
pop
push
imul
pop
push
mul
push
push
ds
push
sub
imul
pop
rcr
call
sub
pop
push
imul
sub
and
pop
pop
rcr
fs
adc
adc
into
pop
pop
pop
and
cs
hlt
jno
pop
jmp
test
popf
adc
sub
pop
jo
es
adc
sub
and
es
add
sub
pusha
icebp
pop
pop
inc
(bad)
pop
pusha
out
fs
nop
dec
ror
inc
imul
pop
pusha
int
fs
push
pop
push
ret
pusha
(bad)
sub
nop
and
and
(bad)
sub
adc
push
push
push
imul
adc
ret
es
adc
nop
gs
scas
adc
adc
push
push
push
imul
xor
sbb
nop
add
jmp
iret
adc
imul
pop
rol
xchg
arpl
jbe
pop
pusha
in
fs
nop
gs
scas
adc
adc
iret
sub
jb
pop
ins
imul
out
jb
jno
pop
jmp
sub
repnz
pop
mov
fs
adc
adc
(bad)
mov
pop
ficomp
jp
neg
push
push
mov
sbb
nop
sti
(bad)
iret
and
ss
lods
jbe
mov
pop
and
and
stc
pop
imul
jp
add
sub
(bad)
mov
retf
xchg
inc
dec
pop
nop
pusha
(bad)
cmp
mov
jg
(bad)
xor
add
outs
pop
jb
jle
je
sbb
xor
mov
push
repnz
fst
das
pop
push
push
sub
lock
imul
adc
adc
iret
xor
sbb
nop
or
pusha
sbb
dec
jne
jno
imul
fs
jb
imul
pop
adc
and
mov
pop
pusha
repz
nop
cmp
repz
imul
nop
test
push
pop
pusha
xor
fs
nop
pop
add
rol
rcr
rcr
adc
adc
push
iret
pop
push
ret
adc
std
push
imul
lods
xor
jbe
imul
jae
imul
nop
pop
adc
and
push
cmc
or
adc
jb
pop
pusha
repz
imul
nop
push
cmc
leave
jno
imul
fs
adc
mov
and
fs
adc
pusha
leave
push
pop
sar
sub
adc
adc
and
push
pop
push
int
pop
pusha
out
fs
adc
daa
and
outs
cmps
cmc
jbe
pop
lods
ds
mov
imul
push
push
lds
add
pop
pop
pusha
test
imul
add
into
sub
imul
sub
fs
adc
ret
imul
rcl
retf
xor
adc
adc
iret
adc
ret
imul
adc
retf
imul
adc
lds
sbb
jno
dec
add
cmps
arpl
clc
mov
cmps
pop
mov
push
push
pop
or
inc
adc
sub
adc
and
ins
push
ret
jbe
jmp
lahf
adc
adc
shr
adc
adc
into
sub
fs
adc
ret
imul
nop
rcl
sub
fs
adc
and
and
stc
sbb
sbb
adc
nop
add
jmp
iret
adc
iret
adc
ret
imul
nop
pop
and
and
(bad)
shr
sub
jbe
imul
adc
imul
pusha
movs
into
lods
and
sub
imul
nop
add
(bad)
das
fisubr
push
div
(bad)
or
push
cmps
das
pop
or
pop
(bad)
cmp
push
imul
daa
mov
sbb
sbb
adc
imul
nop
lods
adc
pop
pusha
mul
dec
pop
dec
sbb
push
dec
mov
stos
and
fs
adc
adc
dec
lds
pusha
cwde
sub
(bad)
ins
imul
jno
imul
fsub
inc
imul
fs
iret
adc
into
sbb
sbb
nop
xor
jmp
iret
adc
or
adc
(bad)
pcmpgtb
adc
adc
iret
inc
imul
pop
loopne
cmp
adc
adc
ins
imul
pcmpgtb
adc
cmp
adc
sbb
nop
add
pusha
sar
imul
nop
ins
jmp
lahf
adc
adc
iret
jno
imul
pop
(bad)
iret
inc
imul
fs
iret
nop
jp
into
sbb
sbb
adc
into
ins
imul
sub
fs
push
mov
dec
cmp
jns
lods
scas
mov
test
add
js
mov
sub
outs
stc
lods
mov
imul
adc
nop
outs
jbe
jno
adc
sub
dec
push
jne
dec
pop
(bad)
lahf
adc
test
imul
pop
pop
push
loopne
pop
es
dec
jnp
mov
sub
outs
stc
lods
mov
imul
adc
adc
inc
ror
inc
jb
(bad)
stc
lods
mov
imul
adc
shl
lahf
push
dec
jb
bound
push
imul
adc
shl
aam
mov
fs
movups
shr
pop
fist
dec
jb
bound
push
imul
nop
xor
iret
stos
inc
jb
(bad)
lods
mov
imul
adc
adc
sbb
mov
sbb
adc
ror
cmps
mov
push
into
push
push
cmps
xlat
pop
and
mov
stc
fiadd
push
clc
outs
std
push
and
lods
aas
push
jbe
imul
adc
iret
nop
push
push
(bad)
push
pop
push
sub
adc
adc
dec
iret
jne
push
mov
fs
adc
(bad)
xor
xchg
fs
adc
adc
push
push
cmp
push
jbe
imul
adc
lds
imul
add
iret
push
pop
mov
jmp
sbb
adc
adc
int
fs
nop
in
sbb
out
es
sub
mov
cdq
inc
push
test
imul
nop
sbb
ror
adc
sbb
jno
aad
sub
fs
iret
adc
nop
arpl
and
adc
iret
adc
adc
iret
adc
(bad)
fnop
pop
data16
add
dec
push
push
push
(bad)
push
jp
add
sub
cmc
sbb
xchg
push
lods
inc
dec
out
cs
iret
sbb
pusha
cmp
(bad)
xchg
addr16
(bad)
sbb
test
pop
test
pop
cmp
icebp
loop
jns
and
jg
pop
test
pop
js
neg
test
mov
test
pop
adc
sub
cmp
mov
pop
add
inc
test
sbb
lods
(bad)
mov
test
pop
add
jg
pop
test
fld
jg
pop
test
fnstsw
icebp
cmp
ret
sbb
loope
jg
sbb
and
(bad)
cld
mov
pusha
mov
push
cwde
and
inc
retf
sbb
add
and
jg
pop
test
fisttp
lock
cld
icebp
pop
jnp
inc
cmp
bound
ja
adc
jg
pop
test
pop
mov
jbe
aaa
mov
cmp
cmp
mov
pop
or
icebp
cmp
xor
pusha
(bad)
movs
(bad)
push
test
push
test
pop
test
frstor
(bad)
repz
pop
test
fisttp
xor
mov
or
inc
mov
test
(bad)
xor
dec
mov
or
cmp
ret
sbb
and
test
pop
test
fld
jg
pop
cmp
test
pop
test
icebp
fld
repz
pop
xor
ret
fiadd
push
pop
test
pop
test
fnstsw
mov
inc
pop
test
pop
test
fstp
add
or
jg
pop
test
fucom
idiv
adc
test
test
fucom
sbb
pop
mov
inc
loop
test
pop
test
pop
xchg
retf
push
imul
loopne
stc
les
test
pop
test
pop
test
fst
cmp
sbb
jg
pop
xor
jns
and
jg
fnstsw
movs
not
jg
push
test
pop
test
fstp
inc
cwde
fs
push
enter
(bad)
lods
dec
add
xchg
hlt
ja
mov
jle
adc
jbe
fs
xchg
(bad)
in
cmp
ror
cmp
ins
dec
out
xchg
(bad)
jle
lods
outs
mov
aaa
add
inc
int3
mov
pop
ja
es
addr16
dec
xchg
adc
pop
cmp
cmp
(bad)
mov
jge
pusha
ret
dec
add
mov
aaa
jp
stc
jl
in
popa
mov
mov
jle
daa
dec
mov
mov
fnsave
ror
clc
daa
cli
bound
js
cs
fs
les
mov
sbb
js
add
mov
and
jg
jecxz
js
cmp
xchg
hlt
ja
mov
push
retf
ror
xchg
jne
fild
(bad)
cmps
or
cmp
jbe
jo
mov
lahf
sar
ja
sub
push
stos
inc
imul
or
addr16
jns
cmp
fidiv
aaa
fwait
mov
ds
std
sbb
sbb
fmul
inc
mov
out
pop
mov
pop
or
jmp
lahf
shr
aam
cmps
ret
xchg
pop
int3
addr16
add
jae
or
rcr
xchg
addr16
pop
cmps
xchg
in
test
xor
or
lods
es
iret
cmp
xchg
xlat
in
mov
xchg
lods
inc
(bad)
iret
cmp
xchg
xlat
push
lods
loopne
aas
fdiv
(bad)
popw
out
popf
rcl
jl
imul
inc
sub
push
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
shr
fidiv
xlat
test
pop
call
jg
loopne
jmp
cld
mov
sbb
inc
aad
jecxz
push
shl
test
shl
mov
test
fiadd
rcl
jecxz
push
in
fiadd
mov
test
mov
icebp
mov
shl
mov
shl
mov
leave
out
mov
(bad)
lock
jecxz
call
jmp
jecxz
call
shl
mov
dec
dec
aad
pop
repz
outs
or
shl
mov
call
mov
or
sbb
xor
jmp
shl
mov
mov
out
cmp
pop
test
shr
int3
push
xlat
sbb
inc
aad
jecxz
call
sbb
xchg
mov
mov
shl
sub
fisttp
mov
jecxz
aad
jecxz
call
fstp
xor
push
mov
jecxz
call
rcl
mov
jmp
mov
inc
aad
jecxz
call
in
add
stos
xor
in
jmp
shl
mov
sbb
loopne
and
movs
retf
test
pop
or
mov
lods
mov
jmp
retf
stc
fsubp
cmp
cmps
push
lods
fdivp
lods
(bad)
and
push
in
lods
fimul
sub
mov
aaa
jmp
call
fs
jbe
mov
mov
sub
jbe
push
mov
inc
lock
jle
in
add
les
lahf
adc
ins
imul
jp
cmp
test
test
repz
shl
mov
push
lahf
inc
stc
cmps
fbld
stos
div
or
pop
jns
add
rol
call
repnz
sbb
inc
cmp
jmp
xor
test
pop
(bad)
xor
pop
cs
mov
and
js
ret
pop
or
inc
test
mov
rol
or
sbb
jp
push
xchg
(bad)
or
outs
loopne
loop
pop
add
sti
pop
cmp
js
or
pop
in
xchg
ret
cld
loop
(bad)
fadd
mov
std
cmp
pop
add
dec
ret
repnz
repz
fnsave
dec
jge
jae
xchg
or
mov
or
cs
aam
push
cmps
lahf
pop
mov
and
pop
adc
jmp
jg
fist
cmp
rcr
clc
xor
add
inc
ds
test
cmp
jo
jp
sub
fwait
cmp
js
ret
or
dec
add
jp
dec
sub
inc
js
ret
add
jp
js
jp
inc
es
inc
sbb
cmp
dec
add
jp
js
jp
dec
lods
jnp
pop
test
sbb
adc
add
jp
inc
push
jp
js
cli
add
jp
cdq
pop
jp
inc
sbb
js
pop
xor
add
xor
or
adc
js
dec
add
sub
sbb
sbb
jb
xlat
jl
arpl
pop
sub
inc
add
push
xchg
loop
cmps
mov
stos
mov
xlat
cld
loop
cmps
mov
sub
inc
and
sbb
dec
inc
fadd
cmp
pop
dec
js
pop
or
dec
add
jp
pop
cmps
jnp
cdq
sbb
push
cwde
inc
xor
js
xchg
or
dec
add
jnp
inc
sub
xor
bound
jp
ds
sub
cs
add
clc
adc
js
jbe
js
retf
push
jp
pop
daa
jg
dec
sub
sbb
inc
or
dec
add
jp
fild
jp
push
jo
cmp
inc
es
sub
xor
jne
pop
je
adc
or
dec
add
jp
jns
jp
js
jae
js
jp
cmp
dec
sub
and
sub
xor
fsub
jp
inc
mov
imul
xchg
sbb
or
pop
ds
cmp
clc
adc
js
jbe
js
or
dec
sub
sbb
inc
or
dec
add
jge
xor
bound
ins
inc
dec
push
sub
outs
js
add
js
jp
clc
adc
js
jbe
js
mov
js
jp
pop
daa
jg
dec
sub
sbb
inc
or
dec
add
jp
inc
test
movs
xor
bound
and
jg
cmp
sbb
pop
js
jmp
sub
jb
cmp
dec
sub
and
sub
xor
js
jp
js
jp
pop
sub
cdq
pop
ror
inc
dec
dec
xor
jno
mov
dec
lods
inc
cmps
add
xor
cwde
adc
pop
daa
pop
dec
mov
xchg
or
dec
test
xor
bound
test
xor
sbb
jns
push
jp
jo
cmp
inc
cmps
add
dec
inc
sbb
cmp
pop
leave
mov
xchg
push
sub
xor
bound
pop
jl
dec
test
jb
pop
add
inc
js
xor
jno
mov
dec
lods
inc
cmps
add
xor
sbb
cmp
dec
leave
mov
xchg
pop
inc
sub
xor
bound
jl
dec
test
xor
js
xor
jno
mov
dec
lods
inc
cmps
add
dec
inc
cwde
or
pop
daa
dec
dec
mov
xchg
pop
inc
sub
xor
bound
push
dec
mov
xor
bound
jg
mov
jno
pop
add
inc
mov
jno
pop
add
mov
inc
and
aas
inc
mov
adc
ds
pop
inc
cs
cmp
xor
cdq
pop
inc
sub
(bad)
xor
cdq
pop
inc
sub
dec
xor
cdq
pop
inc
sub
sysexit
inc
push
inc
sub
iret
xor
cdq
pop
inc
sub
(bad)
xor
sbb
sub
outs
js
popa
add
adc
js
jbe
js
retf
adc
sbb
mov
inc
cwde
pop
cmp
dec
add
jp
sbb
sub
add
clc
adc
js
jbe
js
or
dec
sub
pop
js
inc
or
dec
add
jp
xchg
jo
cmp
ja
xor
sub
pop
js
jae
js
jp
js
jp
xchg
jo
cmp
ja
xor
sub
movs
pop
outs
repz
xchg
int3
add
sbb
jne
dec
ror
test
dec
sub
mov
add
jp
enter
js
jae
js
jp
inc
inc
jp
data16
lock
ss
bound
adc
add
sub
jno
adc
or
dec
sub
jp
js
jp
cmp
jp
js
jp
js
jp
js
jnp
js
push
gs
jp
fldenv
ja
pop
push
ror
into
js
and
je
add
dec
cmp
push
retf
add
dec
inc
or
rcr
inc
fsubr
xor
js
pop
or
dec
add
jp
pop
cmps
jnp
aaa
inc
pop
pop
je
inc
jle
adc
sub
adc
ds
jp
js
jp
js
jp
fs
or
adc
add
jp
clc
and
inc
cwde
jge
js
jp
js
jp
bound
jbe
jg
xor
repz
dec
add
jp
rcr
inc
pop
loop
es
ins
or
pop
or
dec
add
jne
dec
lods
inc
sbb
mov
jno
mov
js
sub
js
jp
cdq
pop
jp
inc
cwde
pop
xor
dec
lods
xor
mov
js
mov
xchg
jo
cmp
sub
fwait
out
or
mov
and
jge
adc
or
dec
add
ja
mov
cld
call
loop
js
sub
js
jp
and
adc
js
dec
add
jp
add
xchg
int3
add
cmp
jne
jno
mov
js
dec
add
jp
fsub
jp
inc
cwde
jae
js
dec
add
jp
cdq
pop
jl
inc
cwde
or
test
inc
xor
outs
cmp
js
sub
js
jp
js
jp
mov
adc
fsub
jp
inc
cwde
jae
js
dec
add
jp
push
adc
gs
jnp
adc
xchg
sub
mov
jno
mov
mov
pop
pop
inc
inc
cmp
xchg
push
imul
add
inc
mov
imul
lock
push
sbb
xor
mov
add
dec
fisttp
leave
push
pop
pop
dec
inc
sbb
js
cmp
js
jp
pop
sbb
ret
call
add
cmp
push
dec
stos
sbb
add
xor
pop
sub
push
sub
sub
sub
ins
xor
imul
add
int
arpl
cld
int3
add
inc
leave
push
fwait
in
inc
pop
or
imul
inc
lock
dec
loop
pop
dec
in
jg
sbb
push
icebp
pop
lock
test
adc
fisub
push
(bad)
outs
mov
pop
call
ins
adc
out
ja
fs
add
pop
pop
leave
ss
mov
adc
pop
add
or
shl
mov
dec
xchg
inc
test
adc
faddp
sbb
lock
add
daa
mov
int
outs
mov
mov
pop
mov
loopne
(bad)
adc
inc
adc
mov
inc
clc
fild
ret
out
mov
pop
test
ja
inc
and
aam
call
xchg
pop
ins
jno
mov
ret
fild
add
mov
jge
mov
daa
es
aam
scas
stos
(bad)
mov
je
aam
enter
jbe
or
pop
lock
push
loope
jmp
loop
and
inc
fadd
rcl
add
stc
jnp
mov
js
iret
or
sti
pop
fld
jmp
mov
cmps
push
js
aam
cwde
shr
(bad)
test
std
dec
push
pop
fldcw
outs
or
fwait
aaa
icebp
loop
mov
outs
xchg
or
jmp
push
imul
in
imul
jmp
xchg
shl
(bad)
xchg
rcr
iret
daa
jmp
adc
and
scas
cli
add
push
or
push
in
sub
push
xchg
and
xchg
sar
push
mov
iret
int3
out
and
xchg
shr
iret
push
mov
iret
xchg
shl
leave
xchg
jecxz
dec
dec
lods
fcom
rcr
iret
xchg
shr
dec
lock
sub
lock
hlt
sub
jnp
pop
mov
dec
out
and
xchg
shr
iret
xchg
shr
iret
dec
lods
sub
rcr
iret
xchg
shr
iret
lds
and
xchg
rcr
xchg
mov
es
xchg
rcl
iret
xchg
shr
iret
xchg
shr
dec
imul
sub
xchg
push
ror
xchg
shr
iret
push
mov
dec
jmp
shl
xchg
shr
dec
imul
scas
xchg
shr
iret
loopne
sub
dec
sub
adc
stos
ficomp
iret
xchg
xchg
sub
dec
sub
adc
ror
sbb
(bad)
xchg
rcr
dec
lock
sub
xchg
shr
xchg
shr
iret
xchg
shr
dec
out
sub
pop
mov
mov
jmp
out
pushf
and
scas
push
mul
cmps
inc
(bad)
scas
mov
fs
cli
push
(bad)
fbstp
add
jmp
mov
movs
das
je
jb
push
push
or
out
clc
and
push
sbb
mov
cmp
enter
(bad)
sub
ret
stc
add
inc
pop
test
pop
fs
icebp
jge
es
and
(bad)
fdivr
repnz
(bad)
mov
mov
in
fsubr
push
imul
add
xor
outs
fs
ror
(bad)
jnp
jmp
adc
sub
addr16
test
jbe
or
adc
jg
dec
xor
dec
ins
mov
enter
jbe
jl
retf
repz
repz
clc
mov
sbb
les
jno
sti
sub
pop
out
ret
fild
pop
mov
(bad)
retf
pop
je
push
enter
sub
sbb
enter
ret
(bad)
xor
sbb
jno
xchg
jg
push
sbb
jbe
dec
add
adc
data16
pop
or
inc
sub
push
sbb
cmp
dec
pop
or
test
mul
fisub
mov
aam
addr16
dec
pop
cmp
jb
js
sti
ret
cmp
sub
lahf
scas
xor
dec
mov
push
jmp
lods
aaa
fwait
dec
stc
cmp
xlat
daa
dec
aam
enter
dec
mov
call
xchg
std
push
pop
in
jno
jnp
xor
loop
jp
mov
pop
aaa
sahf
mov
fldcw
push
stc
ror
(bad)
mov
adc
push
fcom
nop
fimul
pop
xchg
ins
jecxz
adc
dec
jl
push
or
jl
popa
push
sub
xchg
stc
jmp
cmp
push
push
stc
jp
mov
pop
iret
push
cld
into
sub
sub
dec
out
shr
sahf
sub
or
sub
pop
jmp
int
sub
pop
ds
cmp
mov
int
aas
adc
cmp
cmps
cmp
adc
and
pop
dec
and
add
pop
daa
xor
(bad)
xor
sbb
dec
and
pop
sti
jl
cmp
in
inc
xchg
dec
or
es
jl
dec
add
pop
adc
pop
adc
and
inc
sti
ins
pop
adc
ja
add
das
or
js
adc
(bad)
imul
inc
cdq
push
inc
fwait
call
loopne
stc
shl
jg
pop
test
pop
test
fisttp
inc
cwde
fs
push
int
sti
ret
push
dec
test
movs
push
enter
cmp
enter
mov
out
jne
lods
loopne
repz
lods
daa
lahf
adc
jne
lods
jle
fs
cmp
jl
push
xlat
int3
adc
pop
into
sub
adc
in
ficomp
xchg
inc
stc
rcr
mov
cld
ja
inc
add
jbe
fsub
out
cmp
sub
sub
xor
cmps
fwait
mov
dec
imul
out
fs
ret
jmp
xchg
aam
enter
inc
dec
lahf
pop
dec
pop
aam
dec
(bad)
fwait
pop
xchg
mul
inc
ret
lock
or
xchg
repz
test
js
xor
dec
stos
test
jae
mov
xlat
call
mov
mov
fdecstp
push
punpckhbw
pop
outs
xchg
fsub
jb
xchg
add
(bad)
call
ret
and
(bad)
jae
and
scas
cmp
pop
sbb
and
fcomip
push
fs
xchg
repz
push
(bad)
clc
loop
mov
push
cmps
sbb
(bad)
ja
add
mov
daa
bound
sahf
cdq
pop
in
cdq
popf
pop
pop
dec
jbe
rcl
stos
nop
js
xchg
cdq
(bad)
fst
out
or
mov
adc
mov
sti
cmps
sahf
out
and
sbb
lahf
stos
and
daa
dec
cmp
jle
jecxz
ins
in
jae
fs
sbb
or
addr16
(bad)
pusha
test
daa
pop
test
fnstsw
add
cmp
or
sub
push
jno
sub
popa
mov
shl
jnp
leave
cmp
imul
call
(bad)
dec
aaa
loop
call
mov
dec
clc
jmp
jnp
aam
mov
into
jl
and
hlt
daa
cmps
xchg
movs
pop
data16
pop
jmp
sub
sti
ret
into
adc
jb
mov
in
in
xor
mov
daa
jmp
shl
inc
repz
add
xchg
cmp
push
mov
sub
push
and
push
aam
movs
enter
enter
jae
stos
mov
sub
xlat
pop
mov
mov
std
sbb
ja
cmp
add
jae
mul
neg
mov
xchg
ret
mov
pop
js
aam
js
pop
jl
lahf
xor
inc
mov
aaa
push
or
jo
push
jnp
adc
pop
sbb
ds
mov
push
push
pop
mov
stos
dec
in
push
xor
mov
push
push
sub
or
adc
ret
fild
adc
aaa
fist
xchg
(bad)
jle
test
xor
xlat
push
je
repz
or
jns
stc
pop
sar
mov
cdq
call
(bad)
cld
cmc
sahf
dec
popf
dec
clc
enter
rol
sahf
rol
sahf
sub
cmps
loope
movs
cmp
rol
sahf
rol
sahf
cld
cmc
cmps
(bad)
cmp
dec
call
dec
mov
pop
cld
aas
mov
pop
jl
mov
enter
rol
sahf
rol
sahf
dec
mov
cmp
jp
cmps
mov
iret
pop
push
mov
mov
enter
movs
cli
xchg
aad
cmp
loopne
mov
test
cld
push
loopne
mov
retf
mov
cli
pushf
pusha
pop
add
jo
mul
stos
cmps
mov
fwait
sbb
sub
in
dec
sbb
jg
pop
add
jae
push
je
adc
inc
add
mov
arpl
cmp
jg
pop
cmp
ins
mov
inc
pop
cmp
push
cmp
shl
cwde
je
mov
mov
test
jbe
push
mov
int3
fld
dec
idiv
mov
jge
cmp
jnp
mov
jnp
cmp
add
(bad)
std
rcr
retf
pop
fsub
(bad)
sub
cmp
dec
xchg
cld
push
jnp
push
cmp
(bad)
out
jecxz
fdivr
and
call
inc
adc
bound
pop
adc
pop
jbe
(bad)
in
inc
dec
pop
dec
or
hlt
loopne
dec
movzx
and
push
sti
ret
or
jnp
xlat
push
retf
push
sub
aam
dec
test
bnd
cld
push
mov
jmp
and
xchg
aaa
repz
(bad)
add
add
aaa
pusha
(bad)
fadd
sub
or
data16
jge
arpl
cli
mov
sub
mov
add
aaa
sbb
jbe
mov
out
jl
mov
or
fst
add
cmp
xor
loope
push
dec
mov
push
(bad)
or
mov
pushf
repnz
pop
cld
inc
mov
aaa
cmp
je
pusha
sbb
test
leave
jno
inc
mov
xchg
jmp
pop
hlt
mov
and
jge
mov
fmul
jmp
rol
mov
(bad)
int3
jae
xlat
mov
and
xchg
push
dec
shr
pop
inc
(bad)
loopne
les
cdq
(bad)
sbb
outs
stc
shl
stc
rcr
out
lods
fld
push
fbld
loope
addr16
fistp
inc
out
loopne
ror
(bad)
dec
(bad)
(bad)
lahf
cs
mov
out
add
push
adc
ror
addr16
out
cmp
push
pop
addr16
rcr
out
jmp
jo
jnp
call
push
mov
rcl
addr16
rcr
addr16
fstp
lahf
pop
das
sub
(bad)
cmp
stc
mov
addr16
fcom
xor
call
(bad)
dec
out
(bad)
dec
out
lahf
jp
cs
leave
in
lahf
sbb
les
cmp
stc
rcr
out
xlat
fst
mov
pop
mov
rcl
addr16
rcr
addr16
sar
lahf
pop
out
(bad)
fldlg2
cmp
stc
rcr
addr16
lock
call
sbb
sar
pop
shr
shr
pusha
out
pusha
pop
xor
inc
and
fldenv
cmp
lahf
scas
fldenv
stc
push
outs
popa
stc
nop
sbb
test
fmul
sar
in
scas
mov
test
loop
mov
xchg
mov
mov
push
out
and
cmp
cdq
dec
mov
cmps
ins
cli
inc
leave
lods
in
js
mov
jo
sub
xchg
inc
push
sub
ret
or
dec
test
inc
pop
test
pop
test
fucom
sbb
pop
mov
push
clc
mov
add
cmp
fsub
(bad)
out
mov
cmps
pop
test
fnstsw
cwde
fbld
push
mov
inc
push
ja
imul
mov
jo
stos
daa
std
loopne
or
ins
gs
jg
dec
mov
mov
imul
sbb
inc
pop
into
nop
jmp
mov
push
nop
ret
mov
mov
pop
sbb
(bad)
scas
(bad)
jne
aam
pop
iret
retf
push
je
jge
in
pop
(bad)
mov
daa
add
pop
out
push
sub
shr
mov
rol
pop
sbb
test
pop
lock
jae
push
dec
and
rcr
dec
js
xor
xchg
jno
mov
aad
or
cdq
jnp
pop
pop
cmp
lock
movs
repz
and
jo
xchg
sti
(bad)
push
ins
add
jnp
retf
pop
scas
xchg
in
pop
call
fst
pop
and
rol
not
and
les
cmp
xlat
fwait
jb
ss
ret
dec
cmp
aaa
retf
push
jnp
dec
cmp
iret
cs
jbe
inc
mov
inc
jl
enter
sub
call
aaa
sbb
jns
mov
add
xchg
je
addr16
mov
mov
popa
clc
adc
les
out
fwait
mov
fwait
cdq
mov
ret
stos
repnz
(bad)
cmp
les
mov
(bad)
mov
sub
cmps
mov
and
mov
jecxz
push
mov
ret
cdq
push
mov
add
mov
jecxz
inc
mov
inc
pushf
jb
add
mov
and
loop
ret
fwait
loop
lds
mov
les
mov
lds
lds
mov
arpl
mov
lds
mov
(bad)
stos
mov
lahf
cli
mov
mov
cli
mov
mov
pushf
fadd
mov
and
lahf
cli
or
sbb
jbe
adc
fptan
cld
pop
stc
repz
fistp
fwait
shl
jbe
adc
pop
ins
fadd
push
pushf
stos
ss
(bad)
sub
lahf
push
(bad)
mov
jl
mov
cmc
adc
leave
and
inc
out
cmp
ret
retf
xchg
es
cmc
push
cld
mov
or
rcr
xchg
cli
mov
mov
add
fs
scas
ss
in
test
cli
mov
mov
or
int
repz
mov
lahf
mov
in
call
mov
cli
mov
mov
cmp
mov
cli
mov
mov
int3
sbb
fpatan
mov
mov
lahf
or
pop
cmp
dec
fwait
cli
and
pop
test
cmp
sub
lahf
cli
mov
mov
sbb
fpatan
mov
mov
jle
outs
ins
fld
dec
xchg
cli
mov
mov
pop
inc
movs
mov
mov
mov
mov
jb
add
mov
mov
(bad)
stos
mov
lahf
cli
mov
mov
cld
and
lahf
cli
mov
mov
out
and
mov
mov
arpl
adc
inc
js
xlat
cli
mov
mov
pop
dec
push
lea
and
fsqrt
mov
mov
mov
xchg
xor
fwait
xor
sub
mov
sbb
cmps
mov
loop
ret
xor
xor
loope
ror
and
(bad)
cmc
inc
xor
repnz
test
loop
mov
xchg
imul
call
pop
test
pop
test
fucom
sbb
pop
mov
inc
clc
fs
inc
enter
enter
enter
enter
enter
enter
(bad)
sub
sbb
in
push
iret
xchg
inc
leave
inc
sbb
cmp
jg
pop
test
frstor
icebp
push
test
push
test
pop
test
fstp
push
sbb
add
loop
ja
adc
jbe
pop
test
pop
test
pop
test
pop
fs
idiv
out
mov
test
push
mov
mov
mov
lock
sti
inc
dec
dec
dec
mov
inc
mov
mov
xor
jno
sbb
fsub
cmps
jbe
int
(bad)
in
push
adc
xchg
mov
scas
pusha
add
mov
fdiv
mov
pop
push
or
and
enter
jle
inc
xor
mov
clc
int3
daa
jno
aam
push
mov
mov
inc
or
and
pop
aam
cmp
ja
mul
cmp
add
sub
xchg
(bad)
pop
and
pop
test
inc
and
add
je
les
js
inc
mov
mov
(bad)
push
push
rol
clc
lds
xlat
cmp
in
leave
int
push
or
xchg
jmp
add
and
fistp
in
sub
repnz
pop
pop
leave
ret
fadd
xor
mov
add
mov
cmps
dec
pusha
jnp
dec
pop
fs
shr
and
pop
ffree
push
jbe
mov
dec
mov
push
jnp
ret
dec
cmp
pop
stc
std
xor
sbb
xor
ins
imul
add
imul
neg
mov
lods
mov
out
in
out
in
mov
out
xchg
call
mov
in
cs
aad
(bad)
in
mov
movs
aad
mov
push
or
aam
mov
(bad)
sbb
mov
aad
mov
xlat
shl
(bad)
cli
in
in
inc
sbb
stos
and
or
mov
jo
mov
mov
and
sbb
inc
sbb
imul
fmul
mov
mov
mov
mov
leave
mov
mov
jmp
scas
leave
stos
test
mov
inc
pop
or
(bad)
call
xchg
mov
call
ins
jp
popa
leave
pushf
cwde
inc
jmp
sbb
repz
jmp
sbb
jmp
sbb
dec
ficomp
or
fist
leave
jmp
mov
jmp
cli
sbb
inc
sbb
stos
mov
or
leave
fstp
mov
retf
cmp
iret
cli
retf
mov
stos
loope
jns
mov
mov
mov
jp
mov
mov
clc
fld
cdq
ficomp
jmp
retf
sub
test
pop
push
mov
call
mov
cmc
jmp
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
in
mov
in
ins
mov
in
ret
ins
fmul
lahf
aad
mov
shr
mov
outs
ret
ins
fmul
jmp
mov
(bad)
sbb
mov
aad
mov
aad
pop
stc
aad
xchg
dec
dec
call
pop
in
arpl
or
fisttp
(bad)
in
mov
aad
jmp
(bad)
fsubr
mov
cmc
aad
mov
push
lock
lock
mov
pushf
aad
(bad)
aad
cs
aad
(bad)
in
push
hlt
fild
cmp
mov
in
(bad)
mov
mov
xlat
pop
mov
in
push
lock
(bad)
in
fmul
(bad)
aad
mov
aad
mov
(bad)
mov
in
push
lahf
ins
dec
ror
popf
mov
mov
push
lock
mov
(bad)
pop
aad
(bad)
aad
mov
aad
push
aad
mov
fcomp
mov
in
xchg
outs
(bad)
add
in
mov
xor
call
mov
(bad)
push
jmp
fmul
aam
dec
test
(bad)
aad
mov
aad
mov
(bad)
xchg
aad
xchg
cmps
ror
mov
fmul
daa
aam
inc
mov
in
(bad)
jmp
fild
(bad)
pop
call
scas
mov
push
lock
mov
fsubr
arpl
fisttp
mov
mov
push
pop
call
mov
aad
mov
aad
xchg
test
(bad)
aad
mov
gs
fcmovnbe
cwde
repz
jl
out
lahf
jmp
mov
shr
addr16
sbb
(bad)
jmp
dec
call
lahf
jmp
fisttp
popf
mov
mov
aad
(bad)
aad
out
aam
xchg
pop
fs
mov
call
mov
pop
aad
(bad)
aad
mov
fbstp
out
fcomp
pop
cli
dec
fimul
popf
mov
mov
aad
jmp
fisttp
(bad)
aad
pop
retf
aad
aaa
std
xchg
call
mov
in
mov
aad
outs
mov
aad
jmp
dec
call
lahf
jmp
fisttp
fisttp
(bad)
in
mov
aad
or
fbstp
mov
aad
mov
aad
inc
mov
mov
push
jnp
mov
movs
push
or
aad
mov
fsubr
mov
in
out
mov
mov
pop
fisub
sub
lahf
mov
cmp
mov
in
and
aad
mov
fmul
pop
fild
(bad)
in
aad
(bad)
aad
xlat
fwait
aad
das
loopne
fdiv
push
scas
mov
inc
mov
mov
dec
fucomi
xchg
pop
push
xchg
xor
out
mov
ins
loope
in
not
sbb
jecxz
in
not
fwait
mov
in
inc
test
sbb
inc
test
sbb
jecxz
mov
add
sub
in
cmp
test
stc
mov
add
sbb
sub
test
xchg
pop
call
mov
aad
xchg
retf
pop
jmp
lods
cli
aam
dec
cdq
mov
sbb
mov
aad
mov
aad
mov
aad
xchg
pop
call
mov
aad
inc
mov
jmp
mov
pop
aad
mov
aam
inc
mov
in
(bad)
jmp
fcmovnb
test
mov
(bad)
pop
call
mov
adc
inc
call
lahf
sbb
or
fisttp
(bad)
in
mov
aad
outs
pushf
aad
mov
shr
xchg
out
mov
pushf
pushf
mov
jmp
out
xchg
(bad)
int
mov
cmps
adc
out
in
ds
jmp
pushf
add
loope
cmps
cmps
adc
nop
in
pop
out
sub
mov
cmps
adc
lods
out
in
pop
out
stos
lods
sbb
aaa
loope
lock
fwait
pushf
mov
jmp
out
in
xchg
cld
mov
pusha
adc
mov
out
fidiv
xchg
in
xor
pusha
adc
jmp
out
push
xchg
int3
xor
pusha
adc
jmp
out
stc
jae
or
out
imul
call
pop
in
jecxz
or
popf
mov
mov
aad
(bad)
aad
jmp
aad
mov
shr
mov
in
mov
aad
jmp
push
shr
mov
in
push
mov
(bad)
mov
(bad)
cmp
mov
in
mov
(bad)
pushf
aad
(bad)
aad
mov
aad
mov
(bad)
xchg
aad
mov
(bad)
mov
aad
mov
aad
jmp
leave
xor
adc
mov
in
mov
aad
dec
mov
aad
jmp
retf
cld
xor
imul
call
pop
in
jecxz
or
popf
mov
mov
aad
(bad)
aad
jmp
aad
mov
shl
mov
sbb
mov
in
mov
aad
mov
aad
enter
mov
mov
aad
(bad)
aad
mov
(bad)
cmp
mov
aad
mov
aad
mov
or
popf
mov
mov
aad
leave
aad
xchg
shr
mov
in
push
out
aad
push
rcl
mov
aad
mov
aad
xor
loop
ins
mov
sar
ins
sbb
aam
enter
out
in
(bad)
mov
pop
fmul
ret
aad
cmps
xlat
(bad)
mov
push
pusha
pop
les
pop
shr
mov
in
in
aad
mov
fsubp
outs
pushf
retf
fnsave
mov
lods
dec
xchg
mov
lods
mov
loop
xchg
loopne
xchg
mov
fcomp
mov
in
mov
aad
outs
(bad)
cmc
mov
fsubp
mov
(bad)
(bad)
aad
mov
shr
xchg
mov
aad
(bad)
aad
fs
inc
mov
call
mov
popa
in
mov
in
aad
(bad)
aad
dec
mov
aad
jmp
retf
cld
xor
imul
call
pop
in
jecxz
or
popf
mov
mov
push
call
(bad)
jecxz
nop
les
jmp
into
idiv
repnz
dec
xor
call
neg
pop
and
adc
xchg
dec
xor
mov
lods
pop
movs
mov
rep
sbb
test
loop
mov
(bad)
cmp
aam
in
xchg
mov
pushf
aad
rcl
dec
push
(bad)
mov
aad
mov
aad
or
aam
mov
ror
(bad)
aad
outs
in
push
dec
rcl
ret
mov
mov
mov
jl
mov
in
aad
mov
push
(bad)
jmp
div
(bad)
cld
aad
(bad)
aad
mov
aad
out
aad
mov
ror
lahf
aad
leave
or
popf
mov
mov
push
fstp
sar
mov
mov
fmul
(bad)
aad
int
aad
xchg
shr
mov
in
push
mov
fcom
mov
repnz
call
neg
pushf
movs
mov
shl
scas
mov
shl
xchg
cmp
xchg
pusha
adc
jmp
out
pushf
repz
xchg
pusha
adc
jmp
out
repz
lods
xor
imul
call
adc
xchg
int3
or
popf
mov
mov
aad
(bad)
aad
outs
(bad)
aad
pop
xlat
arpl
xor
jmp
jmp
div
(bad)
in
aad
mov
aad
jmp
div
(bad)
in
aad
stc
aad
inc
(bad)
fdiv
aam
in
nop
mov
pushf
aad
(bad)
aad
ds
aad
mov
fsub
push
jmp
(bad)
xchg
aad
(bad)
aad
mov
aad
test
shr
iret
jmp
mov
mov
mov
(bad)
pop
call
ds
shr
call
pop
in
mov
xchg
aad
loopne
push
xchg
scas
icebp
or
cmp
dec
jmp
jmp
nop
mov
pop
aad
jmp
fdivr
call
pop
in
mov
xchg
aad
loopne
push
xchg
scas
icebp
loopne
pop
cmp
dec
jmp
jmp
nop
mov
pop
aad
(bad)
aad
aaa
mov
inc
and
or
popf
mov
mov
aad
(bad)
aad
aas
loopne
aad
mov
fwait
mov
in
pop
mov
xchg
pop
call
mov
aad
push
jmp
fdivr
fimul
mov
loopne
mov
xchg
aad
(bad)
aad
outs
(bad)
aad
outs
shl
dec
(bad)
cld
mov
inc
mov
retf
dec
test
vpmullw
(bad)
aad
jmp
aad
mov
fsub
(bad)
cmc
aad
mov
push
xchg
daa
aam
inc
mov
in
(bad)
jmp
fild
(bad)
pop
call
mov
aad
xlat
fcom
mov
out
xchg
call
mov
in
mov
aad
jle
aad
mov
xlat
in
mov
pop
aad
(bad)
aad
mov
aad
push
leave
aad
addr16
call
in
test
adc
fnsave
xchg
lods
in
mov
in
push
adc
mov
call
call
(bad)
(bad)
mov
test
aas
loopne
push
lea
mov
mov
pop
jmp
lods
cli
aam
dec
cdq
mov
sbb
mov
aad
mov
xor
in
aam
in
call
aad
mov
aad
inc
mov
jmp
mov
pop
aad
cdq
aad
and
dec
call
pop
call
push
and
aad
pop
jmp
lods
mov
(bad)
pop
call
mov
aad
mov
(bad)
fnsave
jmp
mov
cdq
mov
loopne
mov
xchg
aad
out
aad
imul
inc
mov
jmp
sbb
mov
aad
nop
pop
shr
loopne
(bad)
clc
cmp
pop
jns
jmp
inc
fisttp
(bad)
in
mov
aad
and
aad
aaa
leave
aam
mov
scas
and
or
popf
mov
mov
aad
(bad)
aad
idiv
outs
mov
mov
jmp
(bad)
xchg
mov
call
mov
aad
pop
jmp
pop
cdq
mov
loopne
mov
xchg
push
mov
aad
jmp
out
pop
jmp
dec
mov
(bad)
pop
call
mov
aad
mov
aad
adc
stos
loopne
(bad)
cwde
cmp
mov
in
mov
mov
mov
aad
(bad)
aad
sbb
aad
stos
loopne
(bad)
clc
cmp
mov
in
jmp
mov
push
mov
aad
jmp
call
xchg
pop
call
mov
aad
mov
(bad)
fbstp
mov
mov
(bad)
mov
xchg
aad
(bad)
aad
outs
pop
rcr
mov
inc
jecxz
jmp
mov
(bad)
mov
xchg
aad
(bad)
aad
stos
loopne
fild
cmp
mov
in
inc
xchg
in
mov
(bad)
pop
call
mov
aad
mov
aad
div
rcr
adc
movs
mov
ror
push
in
pop
jmp
lods
cdq
mov
loopne
mov
xchg
aad
(bad)
aad
mov
aad
inc
scas
aam
mov
fs
aaa
test
dec
movs
inc
xor
in
aam
in
nop
mov
(bad)
mov
aad
div
rcr
push
in
call
fnstsw
(bad)
mov
xchg
aad
loopne
aad
cld
fsubr
nop
in
mov
aad
jmp
fcomp
mov
push
mov
(bad)
pop
call
mov
aad
mov
out
fcmovne
jmp
in
call
mov
mov
aad
scas
aam
mov
fs
fldcw
mov
inc
movs
inc
xor
in
aam
in
nop
mov
(bad)
mov
aad
mov
aad
div
pushf
mov
loopne
loope
jmp
fisubr
mov
xchg
aad
(bad)
aad
aas
loopne
aad
in
lods
daa
mov
ins
dec
nop
in
mov
aad
mov
push
dec
nop
aad
mov
adc
pop
mov
in
xor
adc
mov
pop
aad
(bad)
aad
mov
aad
dec
push
shl
inc
xor
mov
inc
jnp
lahf
dec
leave
or
jae
call
fist
(bad)
mov
xchg
aad
out
aad
imul
inc
mov
jmp
sbb
mov
aad
mov
iret
fisttp
outs
fcmove
push
xchg
stc
mov
(bad)
pop
call
inc
int
mov
out
xchg
call
mov
in
mov
aad
cmps
retf
aad
mov
enter
loopne
ret
ins
fmul
popa
fsubrp
aas
nop
mov
sbb
mov
mov
aad
test
das
aam
mov
stos
mov
cmps
sbb
add
loopne
out
outs
lods
call
in
lock
or
cmp
movs
mov
sbb
pop
call
lock
sbb
mov
shl
push
sbb
inc
leave
scas
call
enter
leave
add
or
fld
neg
mov
jg
fucom
sbb
pop
mov
push
call
sub
lds
mov
push
cmp
push
cmp
retf
jno
dec
push
and
or
in
inc
enter
js
cmps
adc
add
dec
jae
aas
mov
xchg
xchg
in
(bad)
cwde
and
mov
rol
xor
xchg
dec
lods
jle
loopne
dec
cmps
mov
xchg
mov
cmp
(bad)
cmp
imul
mov
xor
mov
sub
push
and
sub
or
fcomi
ja
lds
ja
mov
rol
dec
mov
push
pop
inc
or
ret
out
call
les
call
cmp
sti
retf
stc
jno
ins
adc
sti
mov
pop
sub
pop
push
xchg
gs
pusha
pop
fiadd
out
ja
gs
pop
pop
fs
cdq
(bad)
pop
fbstp
sti
loopne
and
lock
mov
cli
test
and
pop
pop
sbb
outs
or
sub
fild
xchg
or
sbb
xchg
paddb
ja
sub
adc
or
mov
jecxz
js
pop
(bad)
(bad)
fbld
cmp
stos
inc
mov
xor
(bad)
sbb
xor
int
inc
jmp
xor
dec
mov
push
pop
sbb
xor
inc
mov
aaa
pop
xchg
jmp
cmp
jg
(bad)
jecxz
mov
or
sub
ror
sub
scas
not
xor
frstor
xor
not
xor
xor
pop
pop
dec
mov
push
push
xor
push
fisub
mov
pop
pop
fistp
push
pop
call
or
mov
shl
dec
loope
pop
das
lock
ror
mov
sbb
add
inc
mov
sbb
enter
enter
nop
sub
mov
rcr
dec
lock
and
bound
cmp
push
je
mov
retf
cwde
cld
push
or
(bad)
iret
in
(bad)
push
popa
addr16
cld
mov
adc
test
push
(bad)
in
xor
mov
xor
push
sbb
mov
cmp
mov
adc
xchg
and
shr
jb
dec
xchg
mov
add
mov
fidiv
sbb
add
jmp
js
jns
shl
mov
addr16
xchg
add
cmp
xchg
mov
aaa
or
sub
mov
mov
mov
xor
fdiv
mov
cmps
pop
js
sub
push
xchg
or
(bad)
aaa
inc
pop
push
in
popa
sar
pop
das
adc
jge
push
cli
push
rol
call
sbb
inc
enter
jnp
adc
(bad)
fwait
jg
cmp
pop
mov
stos
cmp
push
xor
call
mov
int
or
mov
hlt
add
test
pop
aam
sub
sbb
sti
and
push
lahf
push
jge
fild
mov
mov
hlt
push
sbb
sub
stc
pop
and
mov
aad
(bad)
mov
or
push
sub
clc
xchg
jns
adc
(bad)
mov
(bad)
aaa
fwait
jp
aaa
fnstcw
xlat
jmp
in
pusha
sub
dec
inc
dec
inc
dec
push
pop
jg
ds
das
push
mov
jbe
cmp
inc
aaa
mov
push
sub
pop
dec
aas
pop
pushw
out
push
imul
jg
inc
dec
mov
xchg
sbb
imul
inc
ss
cdq
daa
dec
imul
inc
data16
popf
cdq
daa
dec
imul
inc
data16
push
popf
cdq
pop
or
dec
sub
fs
inc
data16
mov
pop
or
inc
add
imul
push
data16
push
pop
jg
aaa
pop
das
es
jbe
cmp
inc
aaa
pop
jg
aaa
pop
jg
aaa
cmp
in
add
aas
aaa
pop
jg
mov
inc
es
mov
jbe
add
aas
pop
pushw
out
push
imul
jg
inc
dec
aaa
in
xchg
sbb
imul
inc
ss
cdq
daa
dec
imul
inc
data16
popf
cdq
daa
dec
imul
inc
data16
push
popf
cdq
pop
or
dec
sub
fs
inc
data16
mov
pop
or
inc
add
imul
push
data16
push
pop
jg
aaa
pop
jg
aaa
cmp
addr16
jmp
aaa
pop
jg
aaa
cmp
or
pop
jg
aaa
pop
jg
aaa
outs
push
es
imul
lahf
jle
inc
add
fstp
inc
pop
push
push
gs
push
es
adc
inc
dec
pop
dec
pushw
dec
dec
imul
jle
push
pop
add
pop
aaa
dec
xchg
push
pop
mov
xor
fld
fs
dec
xchg
push
pop
mov
jne
jne
(bad)
pop
add
dec
xchg
push
pop
mov
jne
jne
(bad)
sbb
dec
xchg
push
pop
push
or
xor
data16
pop
add
dec
inc
xor
jg
push
pop
jg
aaa
bndldx
aaa
push
jg
adc
jg
aaa
pop
jg
mov
sbb
push
imul
ds
pop
ss
data16
and
adc
outs
(bad)
pop
inc
mov
data16
popa
sahf
xor
ret
mov
push
pop
xor
adc
push
dec
push
inc
sbb
push
inc
leave
loopne
cs
dec
push
inc
sbb
(bad)
inc
leave
loopne
cs
dec
push
inc
sbb
(bad)
inc
leave
loopne
cs
dec
push
inc
sbb
push
ins
push
in
ret
adc
inc
dec
pop
cmp
sbb
inc
push
push
pop
jg
aaa
bndldx
aaa
push
jg
adc
jg
mov
sbb
jo
inc
scas
sub
pop
jg
aaa
mov
into
and
push
jg
pop
leave
cmp
cmp
dec
xchg
push
pop
mov
xor
fld
add
aaa
dec
xchg
push
pop
mov
jne
jne
(bad)
pop
add
pop
mov
jne
jne
(bad)
sbb
dec
xchg
push
pop
mov
sbb
cs
dec
push
inc
sbb
push
inc
leave
loopne
cs
dec
push
inc
sbb
(bad)
inc
leave
loopne
cs
dec
push
inc
sbb
(bad)
inc
leave
loopne
cs
dec
push
inc
sbb
(bad)
ds
cmp
pop
add
jg
ds
jg
aaa
cmp
and
jmp
inc
xor
push
or
ds
(bad)
sbb
cdq
mov
mov
js
sub
bound
cmp
inc
je
mov
inc
enter
enter
enter
rcr
(bad)
or
mov
push
enter
int
mov
push
into
fs
push
into
fs
mov
fs
(bad)
iret
push
mov
(bad)
into
fs
(bad)
iret
fs
es
je
out
xor
(bad)
retf
in
push
enter
int3
push
mov
xchg
inc
mov
xchg
iret
xchg
mov
es
push
(bad)
xchg
mov
jbe
fs
xchg
into
movs
mov
xchg
retf
es
je
(bad)
into
xor
push
retf
push
iret
inc
mov
data16
fs
xchg
into
movs
mov
test
push
mov
sbb
jae
inc
pushf
jmp
push
or
mov
ret
jns
mov
in
sbb
mov
stos
inc
fild
push
aam
add
push
rcl
and
cmps
fwait
mov
push
scas
xchg
jbe
push
push
stc
loopne
mov
sub
cmp
mov
iret
fs
cmp
aaa
pusha
cld
pop
int
jecxz
retf
test
xchg
loope
sbb
sbb
xchg
inc
sti
popa
or
sahf
cmp
inc
cmps
inc
mov
pop
enter
nop
push
xor
aam
mov
test
and
jecxz
icebp
sbb
test
pop
test
fucom
dec
icebp
std
inc
jns
sbb
jg
fnstsw
mov
(bad)
pop
test
pop
test
(bad)
vmovlhps
loopne
ss
mov
jg
push
test
fst
fdivrp
in
dec
sbb
jg
pop
xor
stc
mul
jg
pop
fs
pop
mov
push
xchg
in
cwde
fst
idiv
mov
loopne
test
pop
test
fnsave
push
call
(bad)
pop
imul
call
cmp
mov
(bad)
inc
clc
jg
inc
call
pop
test
pop
xor
jns
sbb
outs
icebp
fst
dec
sbb
jg
pop
xor
stc
(bad)
and
jg
pop
test
fnstsw
movs
not
jg
push
test
fisttp
jae
lea
push
cdq
je
dec
enter
(bad)
mov
dec
shl
sbb
push
repz
std
cmp
or
jbe
fs
inc
sar
das
loop
cmp
push
mul
sub
aam
cwde
cmp
push
mov
pop
imul
mov
jg
pop
and
cmps
repnz
cwde
int
mov
(bad)
out
lea
ja
inc
sbb
mov
test
pop
test
pop
test
pop
mov
icebp
stos
or
test
dec
cdq
je
dec
enter
(bad)
mov
and
fsub
cwde
int
mov
(bad)
out
mov
clc
ins
mov
repz
and
jnp
cwde
dec
out
push
cld
push
mov
ror
ja
jecxz
out
adc
test
test
pop
test
fisttp
jae
mov
adc
retf
inc
outs
inc
fdiv
mov
push
out
ss
xor
in
push
retf
add
push
mov
cdq
aaa
mov
mov
jg
pop
test
icebp
fucom
cwde
std
push
mov
jmp
and
jg
fld
cwde
hlt
inc
stc
rcr
jg
pop
test
pop
cmp
ins
mov
inc
push
cmp
push
cmp
shl
pop
cwde
mov
test
pop
test
pop
nop
dec
icebp
jp
jg
push
test
pop
adc
icebp
pop
in
clc
and
dec
cmp
iret
ins
test
pop
fs
jmp
test
dec
mov
mov
repz
push
mov
das
xchg
test
mov
outs
sahf
inc
mov
sti
fs
or
push
int3
arpl
sbb
add
xchg
jnp
pop
cmp
in
scas
(bad)
adc
not
in
xchg
mov
fst
pusha
push
jns
scas
inc
mov
(bad)
sbb
dec
cmp
dec
push
push
jnp
(bad)
push
ins
test
pop
out
xor
jnp
pop
sbb
iret
in
retf
xor
aaa
jl
(bad)
repz
(bad)
push
or
or
iret
jp
lahf
inc
je
(bad)
cmps
add
addr16
xchg
das
(bad)
popa
sti
push
jmp
(bad)
scas
xlat
or
je
sub
or
ret
arpl
jbe
mov
mov
sub
ja
sub
xchg
xor
xchg
ret
sbb
cmc
inc
test
out
inc
cwde
imul
push
fstp
out
jmp
in
pop
add
jbe
dec
mov
pop
dec
cmp
sbb
mov
idiv
and
lahf
inc
test
xor
repnz
jmp
test
sbb
xor
test
sti
leave
imul
ins
and
pop
ins
cmp
out
adc
jnp
sbb
cmp
pop
enter
mov
adc
movs
mov
bound
hlt
sbb
adc
and
push
sbb
push
push
fdiv
inc
or
rol
ret
jb
call
jb
adc
push
repnz
xchg
xor
jecxz
jns
add
repnz
adc
loop
and
and
mov
and
cmc
test
bound
pusha
enter
cdq
mov
loopne
add
mov
test
add
jae
je
inc
loop
or
xor
mov
out
test
and
pusha
leave
xor
movs
mov
jb
pusha
fst
jne
jecxz
je
push
rcl
sub
push
xor
jbe
movs
sbb
and
inc
loop
mov
and
test
and
fst
and
push
and
mov
not
inc
and
loop
movs
or
jecxz
call
push
xchg
imul
les
push
xor
retf
xor
add
jb
add
shl
and
les
jb
fst
jne
jecxz
je
push
rcl
sub
push
xor
jbe
movs
sbb
and
and
movs
cdq
inc
mov
fld
rol
bnd
rol
popf
xor
cmc
jmp
inc
ret
xchg
test
add
push
in
cmps
and
and
mov
out
or
shl
mul
movs
call
adc
je
and
leave
and
add
xor
aam
inc
xchg
sbb
out
test
adc
ror
xor
test
inc
inc
gs
fst
xor
push
add
push
jne
xor
leave
jae
in
and
mov
and
sbb
push
add
sbb
jae
jns
push
lea
push
je
out
movs
fldenv
loope
cmp
xchg
add
xor
mov
bound
and
(bad)
xchg
in
adc
add
cmps
ret
adc
dec
daa
and
and
movs
mov
add
stc
adc
mov
jb
je
vpblendmb
fldenv
push
in
and
xor
jns
add
mov
jne
repz
push
and
inc
xor
bound
call
and
movs
sbb
push
xor
and
movs
call
cmps
and
test
jb
cmps
test
ret
test
add
push
in
ret
jb
mov
jb
inc
test
add
sbb
adc
push
add
mov
and
pusha
lea
out
test
adc
cmp
es
inc
inc
sub
push
jne
and
int
push
je
add
jmp
xor
lods
push
xchg
jne
mov
jo
mov
mov
es
adc
mov
push
push
fst
je
ret
call
and
jmp
xor
push
or
movs
call
inc
ret
and
inc
push
mov
and
jns
es
jb
inc
test
add
push
inc
add
jge
add
sbb
adc
xor
lock
cmps
inc
and
leave
xor
movs
test
arpl
mov
loop
nop
leave
adc
add
call
mov
loop
jmp
and
and
mov
inc
add
loop
test
add
add
je
and
or
test
bound
int
add
or
ret
adc
(bad)
leave
bound
gs
mov
inc
cmc
or
in
and
jns
push
jmp
jo
and
and
mov
mov
div
mov
jb
gs
xor
int
add
ret
and
pusha
enter
leave
adc
push
stc
jb
xor
ss
add
sub
in
bound
mov
and
xchg
or
fsub
jb
fldenv
xchg
sub
xchg
mov
inc
adc
mov
loop
ins
xor
lods
push
and
xor
je
repnz
in
xor
cmc
or
fs
bound
xchg
mov
xchg
call
inc
adc
xor
and
jb
aam
push
xor
mov
cmps
xchg
xchg
test
and
fs
bound
aam
bound
nop
or
add
inc
xchg
mov
xchg
xchg
lods
and
je
mov
je
push
push
les
push
and
and
or
fs
xor
adc
arpl
and
leave
ret
add
push
add
jecxz
je
push
rcl
sub
push
xor
jbe
movs
sbb
and
and
and
jae
adc
push
adc
mov
jne
ss
and
mov
mul
test
(bad)
push
adc
mov
adc
(bad)
bound
shl
mov
mov
fs
push
repnz
mov
test
xor
add
push
ret
mov
push
and
(bad)
pusha
clc
xor
jo
repnz
jns
add
std
loop
je
jb
xor
xor
cmp
jne
es
or
or
jb
enter
cmp
test
xor
int
add
ret
repnz
repnz
jns
inc
jne
test
add
or
add
mov
sbb
repnz
ret
mov
hlt
mov
mov
inc
jmp
adc
inc
test
push
ss
bound
fs
ret
sbb
inc
mov
stc
ret
enter
fst
xor
mov
push
out
repz
mov
bound
push
and
shl
jne
mov
jne
push
inc
xor
xor
je
mov
es
and
leave
add
in
and
sub
gs
jae
inc
jmp
ss
push
enter
enter
sub
adc
popf
xor
jmp
push
ret
adc
and
movs
jmp
mov
test
ret
jne
jb
mov
ss
adc
sub
repz
push
xchg
and
push
and
xor
bound
loop
xor
add
adc
and
mov
mov
data16
adc
gs
and
and
aaa
data16
inc
nop
test
loopne
push
cli
xor
or
xor
mov
data16
ret
js
inc
push
cmp
bound
ss
std
mov
ss
and
js
es
lods
mov
push
xor
xor
push
call
bound
mov
and
call
xor
jmp
xchg
arpl
or
push
pusha
test
and
js
es
add
es
jno
inc
push
icebp
mov
adc
mov
and
fldenv
and
or
xchg
add
daa
xchg
loopne
inc
xchg
ffree
push
jbe
out
jno
cmps
push
loopne
inc
push
pop
ffree
push
jbe
mov
inc
out
(bad)
daa
lock
inc
xchg
jo
jb
hlt
jmp
push
push
and
mov
in
xchg
in
adc
add
(bad)
ret
rcl
call
jae
and
inc
repz
leave
xor
movs
test
arpl
mov
loop
nop
leave
adc
add
call
mov
push
and
xchg
and
jmp
push
xor
add
inc
test
repnz
adc
mov
xor
iret
xor
sbb
inc
je
add
mov
push
jecxz
sbb
xor
pop
jb
or
shl
fldenv
xchg
test
xor
adc
cmps
repnz
cmp
sbb
xor
jae
je
inc
repnz
add
cdq
and
clc
inc
out
mov
bound
sar
add
lods
shl
jne
repnz
sbb
nop
cdq
mov
add
mov
add
jae
xor
es
lds
ss
push
xor
mov
dec
daa
add
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
jae
push
lods
and
jne
mov
hlt
mov
xchg
xchg
jne
inc
inc
nop
jns
add
not
xor
add
retf
xor
pusha
loop
mov
xchg
add
push
lock
mov
adc
adc
stc
adc
test
repnz
test
add
fcom
mov
mov
adc
mov
ss
stc
adc
jmp
ret
in
mov
hlt
mov
mov
jne
repnz
mov
loop
pusha
or
push
fst
cmc
mov
inc
loop
fldenv
push
xchg
sub
push
in
inc
adc
mov
shr
add
xor
jb
adc
push
repnz
mov
inc
jmp
jb
adc
data16
and
je
shl
leave
ret
push
and
call
and
fldenv
mul
xchg
xchg
and
mov
in
ss
adc
bound
cdq
and
leave
xor
in
inc
bound
mov
lock
mov
inc
jmp
jb
add
sbb
and
add
jmp
xor
in
aaa
and
cmps
xchg
lock
out
in
daa
pop
adc
and
jmp
push
out
movs
xchg
jb
and
jb
and
jb
and
jb
and
jb
and
jb
xor
repnz
bound
gs
movs
and
and
jb
and
jb
and
jb
and
jb
and
jb
push
add
out
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
xor
repnz
bound
gs
movs
and
and
jb
and
jb
and
jb
and
jb
and
jb
xor
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
push
add
leave
push
add
push
push
in
and
jb
and
jb
and
jb
and
jb
add
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
adc
jb
xor
and
movs
repnz
out
and
jb
and
jb
and
jb
and
jb
and
jb
add
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
fs
mov
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
add
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
fs
mov
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
je
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
fs
mov
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
adc
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
fs
mov
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
push
add
out
movs
add
out
and
jb
and
jb
and
jb
and
jb
and
jb
xor
repnz
bound
gs
and
movs
add
inc
jb
and
jb
and
jb
and
jb
push
add
out
movs
add
out
and
jb
and
jb
and
jb
and
jb
and
jb
fs
sbb
je
movs
adc
adc
out
and
jb
and
jb
and
jb
and
jb
push
add
out
movs
add
out
and
jb
and
jb
and
jb
and
jb
and
jb
fs
sbb
je
movs
adc
adc
out
and
jb
and
jb
and
jb
and
jb
push
add
out
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
xor
repnz
bound
gs
and
movs
add
inc
jb
and
jb
and
jb
and
jb
push
add
out
movs
add
out
and
jb
and
jb
and
jb
and
jb
and
jb
xor
repnz
bound
gs
and
movs
add
inc
jb
and
jb
and
jb
and
jb
fs
out
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
xor
repnz
bound
gs
and
movs
add
inc
jb
and
jb
and
jb
and
jb
push
add
retf
xor
sbb
inc
hlt
stc
ret
fld
jo
jmp
inc
nop
daa
leave
ret
inc
and
cdq
adc
or
push
jmp
bound
leave
adc
sbb
jb
(bad)
add
push
xchg
pop
mov
jae
add
and
in
bound
test
xor
jmp
jb
xor
ret
lods
and
adc
mov
je
(bad)
push
movs
sub
ret
xor
push
xchg
and
bound
adc
and
loopne
and
pop
or
xchg
fnstenv
inc
call
mov
jne
inc
inc
and
jmp
jb
push
add
data16
sbb
and
xor
jae
aaa
call
jb
xor
sbb
aam
and
adc
in
ss
and
push
and
or
xor
jae
adc
jb
push
sti
add
mov
push
adc
push
rcl
pop
shl
jbe
xor
cmps
xchg
sar
mov
push
aaa
call
and
retf
mov
push
stc
ret
cmp
add
test
mul
add
mov
add
jns
add
jb
shr
in
call
xor
jmp
inc
rol
movs
in
xchg
and
push
pop
icebp
leave
push
push
add
arpl
jp
push
inc
jns
add
repnz
jmp
and
mov
inc
xor
bound
frstor
cmc
sti
bound
dec
test
movs
js
(bad)
(bad)
test
adc
push
or
fs
and
mov
inc
std
loopne
je
es
lods
daa
(bad)
icebp
or
push
mov
xor
push
fst
je
mov
push
push
or
fs
xor
mov
cmp
es
test
and
mov
shr
push
mov
fldenv
out
inc
add
inc
es
cmp
ss
and
xchg
or
adc
or
and
fnstenv
pop
leave
xor
movs
fcmovnbe
and
or
sbb
push
int
adc
jb
std
loopne
hlt
in
push
loope
int3
daa
xlat
adc
(bad)
mul
mov
inc
inc
mov
mov
movs
dec
test
cmp
jbe
mov
rol
or
push
push
jnp
push
sar
add
icebp
xor
dec
(bad)
add
xchg
shl
and
xor
bound
adc
xor
and
inc
data16
add
xchg
push
xor
popf
jno
jne
xor
xor
adc
bound
jo
popa
add
sti
bound
std
ret
cmp
bound
stos
arpl
inc
retf
loopne
ror
push
sbb
add
xor
jo
and
movs
in
jbe
xor
add
je
and
and
add
movs
in
xchg
repnz
add
mov
ret
jmp
push
push
adc
rol
je
jecxz
push
mov
xchg
add
inc
jne
jecxz
push
sti
ret
leave
add
fnsave
je
jae
mov
ss
jmp
shl
inc
and
sbb
push
xor
popa
bnd
pusha
xchg
cmc
in
xchg
mov
and
enter
jmp
jecxz
aam
ret
jmp
push
push
jo
daa
(bad)
pusha
js
(bad)
push
jmp
jb
aad
push
inc
xor
in
inc
xchg
xor
stos
icebp
xor
cli
mov
xor
push
je
mov
inc
std
loopne
je
es
int3
daa
(bad)
rcr
es
bound
mov
es
je
mov
xchg
aaa
cmp
mov
mov
inc
out
add
jnp
add
jns
add
icebp
xor
fldenv
push
add
and
movs
jmp
push
not
leave
jae
test
xor
jmp
jb
aad
add
xchg
(bad)
inc
shr
add
and
push
pop
ror
jae
test
xor
jmp
jb
push
sub
ret
sti
cmps
loop
dec
jo
jno
shl
xor
xor
inc
loop
test
ret
clc
loop
push
or
push
cmp
push
stc
loop
push
jnp
repnz
add
icebp
xor
in
xchg
and
push
pop
jno
loop
add
mov
bound
lock
ret
add
ret
outs
loop
push
dec
push
shl
rol
sub
and
push
xchg
xchg
dec
hlt
shl
repnz
sub
add
add
mov
and
clc
bound
or
xor
push
ret
push
lock
mov
xchg
jmp
nop
daa
in
xchg
inc
loop
xchg
mov
fs
(bad)
rcr
ret
or
inc
push
sub
inc
pop
jmp
loop
xchg
jmp
add
and
sbb
add
pusha
adc
or
test
rcl
and
cmp
inc
clc
xor
aad
mov
lock
push
and
push
inc
je
xor
inc
sbb
inc
leave
and
and
test
test
jmp
mov
popa
leave
jb
and
fbld
aaa
inc
cwde
rcl
xor
and
push
jl
push
loopne
adc
std
aaa
inc
jo
ret
jmp
data16
jmp
inc
leave
jecxz
and
and
pop
sar
xchg
lds
and
add
push
not
or
test
jl
inc
loopne
arpl
ins
xor
xchg
ror
xchg
add
(bad)
xor
inc
sbb
xor
frstor
mov
es
frstor
push
stos
icebp
xor
loop
push
call
xor
in
xor
and
cmp
inc
add
loop
sar
mov
pusha
jns
add
jns
add
ret
cmp
push
add
mov
inc
mov
push
jecxz
test
push
xchg
lds
push
xor
push
repnz
mov
xchg
cmp
and
jnp
adc
jns
mov
loopne
mov
add
jns
add
repnz
xchg
adc
cmp
movs
leave
shl
xchg
xchg
add
adc
aam
inc
repnz
aas
test
sar
repnz
fdiv
add
adc
jns
add
icebp
xor
or
push
neg
adc
test
loop
jo
mov
(bad)
xchg
jmp
and
and
int3
daa
push
popa
or
push
aaa
cmp
push
cwde
ret
in
fcom
and
jb
ror
in
retf
bound
inc
js
xor
jg
loop
dec
aam
and
push
push
ss
push
mov
loop
and
mov
je
mov
inc
std
loopne
hlt
in
push
loope
sbb
rcl
or
in
cmps
hlt
jb
xlat
cmps
jno
popa
daa
icebp
fwait
popa
add
stos
repnz
mov
in
mov
mov
push
loopne
stc
bound
xchg
dec
push
adc
push
adc
sbb
in
xchg
inc
mov
add
movs
mov
hlt
adc
loop
push
test
loop
adc
repnz
loop
jl
xlat
add
and
callw
push
jmp
bound
fst
jne
repnz
adc
push
bound
loopne
cmc
or
test
push
rcl
push
lock
mov
xchg
cmp
daa
int3
xlat
inc
jno
xor
jno
add
pusha
mov
push
out
sbb
push
xor
and
test
add
outs
bound
dec
push
shl
mov
adc
in
inc
and
cmp
xor
inc
push
jo
mov
hlt
sub
inc
mov
arpl
xchg
jb
and
mov
aad
push
push
xor
jmp
add
daa
test
push
add
mul
mov
mov
push
cmp
and
fs
call
and
cmp
inc
clc
xor
push
std
and
sti
inc
rol
add
ja
mov
xchg
adc
fst
in
xchg
fcom
mov
mov
xchg
jmp
nop
cmps
sbb
inc
and
push
inc
hlt
or
in
push
adc
leave
jecxz
in
je
and
mov
adc
push
jne
and
sbb
je
mov
xor
rcl
inc
ins
push
push
cmc
fnstenv
xchg
and
fldenv
cmps
or
xor
inc
and
push
mov
arpl
add
lock
and
aad
bound
or
repz
push
inc
jns
push
out
lock
in
ss
xor
std
daa
aaa
ja
mov
jno
xor
outs
(bad)
push
dec
push
shl
or
repz
loop
xchg
fst
xchg
dec
hlt
shl
push
mov
adc
push
nop
mov
mov
xchg
jmp
nop
daa
retf
add
add
push
add
repnz
aad
xor
and
mov
and
lods
jb
hlt
sti
xor
or
add
mov
jbe
mov
xor
sub
fisub
push
(bad)
mov
xchg
jge
rcl
or
xor
or
repnz
cmp
movs
mov
hlt
xchg
or
add
stc
loop
xchg
fst
xchg
dec
hlt
shl
push
mov
adc
repnz
inc
jns
adc
in
push
loop
call
push
push
mov
out
adc
repnz
inc
jns
adc
(bad)
ja
push
cmp
push
and
es
les
inc
push
add
xchg
xchg
and
add
movs
mov
mov
push
push
retf
shr
push
dec
push
shl
or
repz
loop
xchg
fst
xchg
cmp
lock
fst
test
rol
int
xchg
je
mov
inc
std
loopne
je
es
js
(bad)
cmps
test
and
in
(bad)
test
(bad)
and
push
xlat
inc
cmp
and
and
mov
jae
push
mov
xor
adc
jecxz
movs
sbb
jbe
mov
ss
xor
jb
and
jl
aaa
out
rol
std
jb
xchg
fst
test
rol
fst
xchg
dec
hlt
push
and
loop
sar
mov
and
xor
inc
cmp
repz
push
loop
fcom
mov
mov
xchg
jmp
nop
cmps
sbb
inc
and
jno
je
adc
aam
addr16
push
in
push
xlat
and
jb
and
arpl
gs
(bad)
sar
push
xor
bound
movs
dec
and
and
add
int
inc
add
mov
inc
cmp
loop
stc
repnz
or
in
retf
xor
inc
cmp
loop
stc
repnz
dec
(bad)
in
lods
jno
cmps
cmp
test
xor
stc
(bad)
and
mov
bound
adc
repnz
aaa
icebp
mov
loope
lock
jb
xor
vfpclasssd
movs
fbld
push
in
push
xlat
and
jb
and
arpl
gs
xor
cmp
add
repz
sub
adc
(bad)
and
retf
daa
shl
add
fbstp
push
stc
xor
xor
loopne
jno
loop
les
add
push
sub
aam
pop
repnz
sbb
mov
add
pop
ret
test
mov
push
in
jbe
jno
rcl
sub
xchg
xchg
in
jbe
mov
adc
(bad)
push
pusha
sti
ret
stc
repnz
ret
call
jb
xchg
dec
adc
and
daa
push
jno
daa
push
jo
push
xlat
jno
xchg
add
or
inc
mov
movs
in
push
repnz
in
cmps
in
pushf
mov
cmp
inc
pop
or
and
add
popf
rol
int
repz
stc
xchg
inc
in
push
loop
cmp
icebp
aam
leave
xor
xor
xchg
adc
jo
sbb
inc
leave
and
movs
test
and
cmp
ss
adc
dec
cmps
mov
mov
jge
inc
and
ja
int3
cmps
fs
test
arpl
mov
xor
jo
jb
inc
leave
arpl
and
test
push
mov
add
cdq
xor
in
push
and
cmp
movs
or
hlt
add
and
inc
clc
bound
movs
cdq
xor
in
push
and
cmp
movs
scas
mov
shl
adc
jo
je
inc
push
inc
cmp
adc
or
and
div
mov
add
jne
push
inc
in
es
push
mov
and
adc
cmc
fbstp
push
sbb
shl
xor
jne
repnz
hlt
mov
pusha
jecxz
pop
loop
inc
mov
jae
push
in
jno
jne
es
test
and
cmp
ss
jb
xor
push
xchg
mov
and
and
adc
popf
rol
int
repz
sub
in
xor
fst
xchg
dec
movs
adc
ret
jmp
pusha
xor
xor
sbb
mov
sar
add
in
jno
jne
xor
es
add
gs
cmps
and
dec
jae
mov
xor
popa
ret
arpl
add
bound
test
mov
push
push
mov
adc
jb
xor
push
xchg
mov
and
and
adc
popf
rol
int
repz
sub
in
xor
fst
xchg
dec
mov
and
mov
les
loop
jnp
xor
jns
add
icebp
xor
in
test
test
and
fs
xor
cmp
xor
push
mov
and
and
and
jb
daa
cmp
and
aad
bound
or
repz
adc
pop
dec
and
jnp
xchg
repz
xor
fnsave
jo
push
ret
shl
je
mov
add
int
pop
icebp
or
push
sbb
je
mov
xor
nop
xchg
je
xor
cmc
test
ret
test
ret
mov
push
out
daa
xchg
xor
cmp
fs
inc
mov
add
mov
les
loop
cmp
xor
mov
and
inc
loop
sti
xchg
xor
or
add
jbe
and
mov
push
jnp
add
jns
add
xor
and
add
and
cmps
xchg
and
adc
xor
add
jns
add
data16
enter
or
test
mov
xor
inc
push
jbe
pop
aaa
test
and
clc
xchg
repnz
xor
in
push
repnz
sbb
movs
dec
mov
and
jb
and
call
adc
clc
daa
push
inc
cmp
ss
xchg
frstor
cmps
icebp
jns
add
mov
push
in
add
xchg
mov
ss
xor
jb
movs
in
ss
xor
xor
jbe
ja
jbe
bound
add
icebp
xor
repnz
push
add
jmp
bound
gs
bound
adc
dec
test
and
push
neg
pusha
xor
retf
xor
sub
neg
pusha
xor
cli
add
in
add
call
loop
add
(bad)
xor
dec
xor
and
mov
loopne
mov
adc
add
jb
inc
mov
push
mov
les
xor
ss
bound
mov
inc
std
loopne
hlt
dec
push
loope
lods
pop
xlat
xor
jno
jno
xor
xor
popa
loop
mov
mov
add
repnz
fbstp
and
and
fidiv
out
in
mov
idiv
lock
xchg
movs
mov
jbe
pop
jp
inc
push
int
push
ja
cmps
xor
jmp
push
(bad)
cmp
icebp
test
jb
mov
and
and
sbb
push
mov
mov
add
inc
in
out
push
fcom
push
cld
pop
xlat
mov
je
and
popa
mov
or
cmp
push
retf
mov
fisub
(bad)
test
test
cmp
aaa
xor
pop
add
ja
ror
and
mov
shr
add
push
push
push
cmp
cmps
or
jbe
sbb
and
in
not
mov
test
es
daa
xor
pop
push
mov
aam
and
jno
inc
mov
xor
jbe
pusha
loope
iret
daa
and
int
xlat
mov
cmp
daa
and
mov
and
xchg
inc
cmp
xchg
in
fdiv
push
aam
(bad)
push
gs
loopne
je
jecxz
movs
dec
adc
and
xor
les
inc
adc
fcom
mov
mov
xchg
jmp
nop
daa
fnsave
loop
call
add
test
mov
add
push
cmps
push
cdq
mov
xor
inc
adc
dec
push
xchg
and
push
push
add
test
inc
movs
fld
ret
test
in
shl
test
jb
test
inc
xor
fnsave
xor
stc
vpexpandw
add
mov
push
pop
(bad)
ror
adc
jns
mov
je
mov
inc
cmp
inc
loop
dec
mov
and
daa
push
jno
jb
push
call
and
cdq
xor
daa
jmp
xor
jbe
xor
ror
jae
xchg
or
jb
test
inc
and
mul
xor
sub
xchg
dec
movs
inc
and
popf
rol
lods
jb
adc
cdq
inc
xor
xlat
ss
cmp
push
xchg
xchg
in
jbe
mov
loop
xchg
sub
repz
jbe
push
cmp
inc
(bad)
adc
sti
ret
stc
repnz
repnz
sbb
mov
nop
mov
mov
inc
sbb
mov
cmp
je
mov
add
push
mov
in
xor
and
ret
sbb
mul
xor
jmp
inc
mov
pusha
or
mov
es
and
jns
mov
mov
add
xchg
cmp
xor
xchg
adc
test
mov
or
and
test
loop
push
dec
push
shl
rol
mov
add
xchg
or
push
mov
je
and
repz
sbb
jne
xchg
xor
xor
push
sub
out
clc
xor
adc
inc
add
cld
cmps
inc
adc
xor
inc
sbb
mov
lock
inc
add
xor
jo
xor
in
push
loop
sub
rol
jns
add
cmps
inc
hlt
fldenv
addr16
arpl
repnz
add
icebp
xor
push
xlat
push
mov
inc
repz
loope
jne
bound
lea
and
add
sub
xor
xchg
inc
or
cmp
fs
ret
inc
test
jb
add
fst
and
rcl
adc
loop
push
sbb
add
and
push
les
add
and
mov
imul
ficom
sar
add
loop
sar
mov
loopne
xchg
add
mov
and
pusha
enter
or
push
xchg
xor
add
jne
and
inc
enter
push
add
sti
jb
xor
repz
adc
jns
add
icebp
xor
fldenv
push
je
mov
je
loop
movs
or
and
xor
cmps
sbb
mov
and
xchg
mov
es
add
mov
adc
out
and
in
jbe
adc
add
loopne
jecxz
xchg
cmp
jecxz
es
push
xchg
xor
add
jne
and
inc
enter
mov
push
adc
push
pop
loopne
and
xor
jns
xor
push
push
(bad)
jmp
loopne
pop
sbb
jbe
add
adc
jae
movs
test
push
mov
add
inc
repz
test
jecxz
fst
xchg
ins
rol
movs
ins
cmps
aam
cld
xchg
ror
xlat
and
push
sar
mov
in
xor
(bad)
inc
in
push
loop
dec
aam
and
adc
adc
inc
adc
bound
and
cmps
inc
cmp
daa
push
icebp
cdq
jae
push
stos
inc
add
mov
push
sbb
inc
leave
jae
and
dec
and
and
xor
cmp
fs
cmps
inc
jno
cmps
pop
add
xchg
clc
xchg
shl
xor
jne
mov
(bad)
inc
in
push
loop
dec
hlt
xor
mov
bound
mov
inc
mov
push
mov
les
repnz
add
shl
dec
cmps
mov
mov
jge
inc
and
ja
stc
mov
cmps
in
xchg
push
aam
xor
adc
xor
xor
add
gs
adc
fst
xchg
dec
hlt
and
aam
leave
loopne
(bad)
push
push
pop
add
(bad)
fst
xchg
fnsave
shl
mov
not
inc
ins
push
aaa
jno
push
push
xor
push
push
sti
adc
jmp
and
in
bound
stos
arpl
push
add
or
rol
test
repnz
xor
stc
mov
push
addr16
jb
or
pop
xchg
or
addr16
pushf
ja
xor
shl
hlt
lea
pop
adc
xchg
pushf
cmps
xchg
xor
shl
je
xchg
push
xor
push
adc
adc
out
test
push
mov
ret
cli
bound
push
mov
shr
loop
inc
push
repnz
push
jl
xlat
and
inc
loope
jbe
sar
popa
pushf
ja
and
mov
loope
addr16
push
ins
jo
jno
and
push
enter
sub
xor
inc
push
ror
pop
shr
bound
aam
loop
add
add
fbstp
shl
loop
popf
inc
(bad)
test
xchg
inc
fucom
mov
mov
rcl
(bad)
rcl
mov
push
sar
shl
pop
ror
add
sub
add
jecxz
cmp
inc
add
loop
mov
and
ins
daa
push
mov
in
daa
pop
and
inc
shr
add
xor
push
adc
add
movs
out
in
push
stc
loop
inc
jnp
repnz
add
stc
loop
les
adc
sbb
sar
loop
clc
loop
push
jnp
inc
aam
inc
push
test
add
xor
push
adc
add
movs
outs
mov
push
stos
xchg
rcl
outs
xor
test
jb
sar
loop
sub
adc
inc
in
jb
test
loop
jb
mov
xor
sbb
gs
inc
sar
loop
jns
aam
clc
loop
push
cmp
push
cwde
ret
push
test
jbe
clc
loop
push
or
push
cmp
push
stos
mov
inc
cmp
je
ret
aam
test
and
in
bound
aas
add
push
fldenv
xor
push
add
fpatan
repnz
xchg
xchg
ret
mov
inc
or
loop
out
in
sar
add
inc
cwde
ret
inc
add
fadd
mov
repnz
xor
clc
jno
xor
jb
inc
jns
xchg
push
js
mov
xchg
aas
test
xchg
icebp
xor
cwde
shl
sbb
mov
push
sbb
sar
loop
call
adc
or
imul
and
repnz
aas
test
sar
aam
mov
xor
fist
rcr
mov
adc
push
xchg
movs
cmp
movs
(bad)
hlt
ror
mov
adc
add
movs
jns
xor
fpatan
xor
and
aas
test
push
sbb
add
dec
adc
movs
or
push
fs
repnz
test
xor
or
mov
adc
mov
inc
stc
ret
fst
xchg
dec
xchg
push
movs
or
shl
mul
inc
xor
cmp
(bad)
xor
fdiv
adc
es
hlt
test
push
es
test
sbb
and
jnp
(bad)
adc
pop
push
loope
and
mov
ins
push
xor
cmps
add
inc
xchg
fbstp
push
sbb
shl
push
add
fnstenv
xchg
movs
cmp
movs
(bad)
hlt
ror
rcl
fst
xchg
xchg
dec
aam
and
push
rol
or
repz
add
and
mov
xor
jns
lock
ret
xor
aas
test
push
pop
repnz
fidiv
ss
shl
stc
adc
push
sbb
sar
loop
imul
movs
jns
and
mov
xor
vpsrld
xchg
dec
xchg
loop
call
lock
xor
fcom
lds
xchg
xor
shl
sar
nop
rcl
jb
or
mov
iret
mov
push
mov
test
test
adc
sbb
in
sbb
aad
xor
xor
mov
test
push
fwait
loope
(bad)
jg
xchg
push
or
shl
aas
test
shr
xor
aam
add
xchg
test
xor
aam
push
adc
test
shr
adc
mov
adc
push
js
shl
or
push
movs
push
hlt
push
pop
add
inc
fcom
mov
test
and
jns
mov
sbb
xor
cmp
and
js
lock
jns
mov
sbb
xor
cmp
push
lea
push
and
int3
cmps
adc
sbb
es
bound
mov
es
je
mov
xchg
aaa
cmp
xor
ret
push
test
jbe
sbb
xor
repnz
pop
repnz
and
push
jecxz
pop
bnd
fst
adc
shl
je
rcl
jne
mov
push
jnp
add
jns
add
shl
add
xor
fcom
mov
ret
xchg
xchg
mov
xchg
xchg
dec
ret
xchg
adc
repnz
add
sar
shl
pop
inc
(bad)
add
bound
or
add
cmp
movs
sbb
hlt
imul
xchg
add
push
xor
addr16
ins
push
pop
sar
sar
aam
or
push
xchg
iret
lock
jnp
rcl
jns
xchg
push
sbb
xor
cmp
add
and
inc
js
adc
push
and
add
push
sbb
add
push
inc
test
bound
test
ret
cmp
push
test
adc
pusha
clc
bound
push
cmp
xor
jb
and
xor
stc
inc
xor
cmp
mov
xor
dec
daa
mov
and
adc
push
mov
add
lds
push
xor
jb
shr
loop
mov
mov
inc
in
ss
push
jl
pop
loope
addr16
loope
push
daa
push
sbb
add
push
pop
push
sub
push
cli
jae
inc
mov
jecxz
inc
jns
mov
nop
aas
add
push
test
push
jo
cmp
out
and
fs
div
test
push
mov
ret
jmp
push
push
xor
push
pop
icebp
sub
push
xor
xchg
repnz
mov
je
movs
leave
rol
or
push
push
jp
push
adc
daa
add
jo
jno
xor
mov
jb
fs
adc
in
ret
cmp
ror
rcl
pusha
and
cmp
add
shl
add
jns
push
mov
push
adc
dec
mov
xchg
fst
xchg
dec
hlt
and
xchg
aam
leave
adc
xor
xchg
push
push
leave
adc
xor
repz
movs
dec
(bad)
in
mov
jae
inc
sbb
mov
xchg
std
repnz
xchg
aas
add
push
leave
jecxz
out
adc
and
xor
mov
add
sar
aam
mov
xor
sub
rcl
xchg
xchg
mov
bound
xchg
push
mov
xor
inc
cmp
add
(bad)
ret
test
shl
xchg
dec
hlt
xor
mov
jb
cmps
mov
out
inc
xor
inc
and
push
add
add
and
push
add
add
and
push
add
add
mov
inc
xor
ret
push
add
add
cmc
stc
inc
jb
mov
ret
fnstenv
jo
test
loop
adc
xchg
repnz
push
add
add
movs
test
add
fcom
mov
mov
adc
mov
ss
stc
adc
jmp
add
in
xor
mov
mov
jne
repnz
xor
mov
add
or
inc
pusha
or
add
sbb
in
out
xor
not
add
add
adc
jb
and
xor
adc
and
inc
jb
aas
test
addr16
inc
loop
lods
mov
push
add
sbb
inc
aam
icebp
in
imul
and
jmp
and
adc
xor
inc
mov
ss
std
pusha
repnz
cmp
adc
adc
data16
push
je
loop
je
adc
ins
push
inc
cmc
fst
xor
ret
xor
test
xor
jmp
loop
inc
lods
and
je
repnz
je
adc
mov
ret
jmp
ret
stos
icebp
and
jmp
and
je
shl
je
xchg
push
aad
bound
test
and
movs
cmp
icebp
je
fldenv
fs
jae
std
mov
jbe
test
and
sub
gs
div
jmp
push
add
mov
and
cdq
adc
or
and
jmp
and
std
loop
je
adc
in
push
inc
aad
adc
test
mov
hlt
jge
xor
jb
xor
inc
adc
loop
je
mov
xchg
inc
call
push
and
cli
bound
add
(bad)
(bad)
and
ss
enter
cmp
ss
xor
jae
xor
push
inc
inc
js
xor
or
out
clc
adc
jo
add
test
jbe
xchg
mov
jae
movs
sbb
pusha
in
xor
jne
push
and
mov
xor
enter
fnsave
xor
ss
enter
fst
mul
leave
arpl
add
jns
add
repz
jo
xor
movs
jns
bound
bound
xchg
mov
xchg
xchg
xor
push
xor
mov
or
bound
call
push
repz
adc
jo
repz
shl
inc
xor
jae
or
pusha
clc
xor
jo
rol
inc
jmp
inc
xor
sbb
push
jne
jb
movs
test
xchg
and
cmp
and
(bad)
jecxz
cmp
mov
jmpw
add
push
loopne
jmp
jb
fs
ja
xor
mov
ret
mov
cmps
sbb
mov
jmp
jbe
movs
mov
loop
and
add
push
and
push
xor
xchg
xor
es
lds
ss
push
xor
test
jae
out
rol
xchg
dec
je
mov
jmp
add
je
bound
add
rol
ror
mov
jbe
enter
test
and
sub
gs
adc
stc
mov
hlt
jge
xor
jb
mov
push
adc
jns
jbe
sbb
mov
add
div
leave
jecxz
add
leave
mov
inc
jne
jae
gs
xor
cmc
mov
es
ror
and
lods
xor
or
xchg
in
and
pusha
or
in
xor
mov
mov
jo
push
add
mov
push
gs
inc
inc
jo
loop
je
mov
xchg
adc
and
ss
push
push
mov
push
push
frstor
jo
mov
xchg
inc
call
(bad)
push
in
xchg
push
and
repz
push
and
test
and
sub
mul
and
out
test
jb
mov
push
add
mov
bound
les
repz
in
jns
mov
push
enter
dec
ja
les
rcl
jb
add
jns
xchg
test
xor
in
es
es
jo
es
jo
es
lock
inc
and
not
hlt
mov
or
fs
div
adc
sbb
gs
cmps
inc
jo
es
lock
push
adc
push
push
mov
mov
xchg
popf
mov
test
(bad)
inc
fs
mov
sbb
jecxz
cmp
mov
xchg
push
push
mov
mov
xchg
popf
mov
test
xchg
js
mov
retf
add
mov
inc
call
push
out
fcom
mov
mov
xchg
popf
mov
test
test
shl
addr16
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
jb
and
repnz
sub
je
test
dec
jbe
xchg
dec
arpl
sbb
cmp
fwait
adc
ds
(bad)
sbb
cmp
jb
arpl
(bad)
out
movs
aam
idiv
add
pop
jl
jb
sbb
dec
retf
aaa
popa
cmp
dec
(bad)
sbb
cmp
dec
in
dec
adc
pop
add
xchg
(bad)
jge
cmp
and
jl
jb
mov
hlt
add
xor
jb
fistp
(bad)
popf
pop
dec
(bad)
sbb
cmp
cmp
popf
fisttp
sbb
cmp
dec
(bad)
jge
dec
(bad)
out
cmp
inc
and
adc
sbb
or
retf
rcr
mov
loope
je
retf
add
hlt
xchg
mov
pop
or
jb
popf
or
sbb
cmp
push
(bad)
sbb
cmp
retf
rcr
mov
dec
xchg
push
cmp
sbb
or
retf
aaa
push
cmp
adc
jge
sbb
cmp
retf
in
cmp
aaa
adc
inc
jmp
push
jge
sbb
cmp
inc
(bad)
sbb
or
dec
add
mov
pop
add
mov
lea
fcomi
cmp
fcomi
cmp
mov
(bad)
inc
xor
push
push
push
mov
sbb
cmp
dec
lahf
js
jmp
jb
sbb
cmp
retf
sub
jb
pop
and
(bad)
sbb
cmp
retf
xchg
dec
xor
and
repz
fidiv
mov
sti
or
jo
movs
sub
dec
das
hlt
add
(bad)
sbb
cmp
sar
mov
in
xor
out
and
or
(bad)
sbb
cmp
dec
(bad)
sbb
cmp
adc
pop
sahf
adc
and
repnz
xchg
sub
cmp
jbe
and
inc
sahf
push
inc
sub
or
jbe
and
dec
pop
push
je
dec
out
and
in
push
add
call
out
and
push
arpl
xchg
and
xchg
xchg
mov
mov
out
je
mul
add
rcr
std
dec
xchg
js
retf
test
xor
out
and
jb
sbb
cmp
sub
cmp
jbe
and
dec
sahf
push
test
dec
jbe
and
dec
pop
push
in
dec
out
and
out
pop
push
je
call
out
and
outs
ret
push
mov
xchg
xchg
mov
ret
xchg
xchg
adc
sub
je
jbe
daa
add
stos
jl
js
gs
inc
jno
and
jb
sbb
cmp
cs
and
jb
sbb
cmp
je
sbb
mov
retf
loope
xor
fistp
popf
dec
(bad)
dec
cmp
popa
jmp
iret
mov
mov
mov
jmp
add
xchg
(bad)
sbb
(bad)
sbb
or
add
sub
(bad)
out
xchg
or
add
dec
push
(bad)
out
xchg
or
int
cmp
xchg
push
(bad)
out
xchg
or
int
sbb
xchg
pop
shl
xchg
or
xchg
pop
pop
push
xchg
daa
pop
call
sub
xor
pop
add
out
in
jbe
add
jmp
out
out
adc
jb
sbb
cmp
add
and
(bad)
(bad)
sbb
or
(bad)
aam
jge
(bad)
sbb
(bad)
sbb
or
dec
int
cmp
imul
shl
adc
jb
stos
cmp
(bad)
dec
push
(bad)
out
adc
repnz
cmp
xchg
(bad)
out
xchg
push
repnz
sbb
xchg
or
(bad)
out
xchg
add
iret
lods
pop
push
out
xchg
adc
lahf
lods
pop
push
out
adc
repnz
lods
pop
pxor
pxor
repnz
sub
pop
je
jb
and
out
aas
xor
out
push
cmp
movs
add
aaa
push
push
inc
jmp
or
js
and
out
and
jb
sbb
cmp
jb
sub
mov
rol
inc
jnp
fistp
or
retf
jecxz
cmp
inc
jmp
or
sub
out
jl
jb
mov
test
retf
sub
(bad)
out
and
push
(bad)
sbb
or
imul
xor
loopne
pop
imul
adc
jb
sub
(bad)
xor
repnz
add
out
or
adc
shl
sbb
or
dec
xor
mov
hlt
xlat
jmp
dec
(bad)
sbb
cmp
sub
jo
jbe
xor
add
fs
jge
adc
jb
sbb
cmp
jl
jnp
je
and
sub
add
imul
aam
rol
sbb
or
add
add
jge
adc
jb
sbb
cmp
(bad)
out
and
(bad)
(bad)
sbb
or
or
xor
xor
(bad)
sbb
cmp
dec
int
cmp
test
(bad)
int
sbb
(bad)
sub
out
adc
repnz
sub
xchg
push
(bad)
out
adc
repnz
sbb
xchg
js
(bad)
out
xchg
add
nop
pop
pop
enter
or
out
int3
sub
popa
mov
aas
pop
sub
je
jbe
xor
add
movs
xchg
adc
jb
sbb
cmp
or
xor
xor
(bad)
sbb
cmp
dec
jmp
ss
pop
jl
pop
loopne
adc
fcmove
stos
cmp
xchg
push
(bad)
out
adc
repnz
sbb
xchg
push
push
jb
xchg
pop
pop
enter
or
out
hlt
sub
inc
out
and
jb
sbb
or
dec
xor
add
and
(bad)
(bad)
sbb
or
retf
aaa
push
cmp
jge
jl
ds
adc
pop
pop
jl
jb
and
push
jecxz
mov
pop
jl
jb
mov
mov
pop
aaa
adc
pop
pop
or
pop
xlat
jns
popf
clc
sub
and
and
jb
sbb
cmp
cs
and
jb
sbb
cmp
push
push
xor
adc
loopne
add
pop
pop
jl
jb
and
push
jecxz
mov
pop
jl
jb
mov
mov
pop
aaa
adc
pop
pop
or
inc
sub
popf
clc
sub
out
and
jb
sbb
cmp
dec
lahf
js
jmp
jb
sbb
cmp
dec
loopne
xor
xchg
cmp
jl
jb
and
pop
pop
jl
jb
and
push
jecxz
mov
pop
jl
jb
mov
mov
pop
aaa
adc
pop
pop
or
pop
xlat
jns
popf
clc
sub
and
and
jb
sbb
cmp
dec
lahf
js
jmp
jb
sbb
cmp
sub
cmp
jbe
and
push
sahf
push
movs
sub
or
jbe
and
pop
pop
push
je
dec
out
and
jmp
push
add
call
out
and
push
xchg
shl
xchg
xchg
push
mov
(bad)
fidiv
(bad)
sbb
cmp
add
pop
shl
adc
jb
stos
sub
(bad)
pop
push
(bad)
out
adc
repnz
cmp
xchg
push
(bad)
out
adc
repnz
sbb
xchg
push
push
jb
xchg
pop
pop
fcom
daa
pop
pop
movs
out
push
(bad)
sub
popf
imul
cmp
outs
sbb
je
int
or
neg
(bad)
out
adc
jb
stos
cmp
(bad)
sub
out
xchg
or
int
cmp
xchg
push
(bad)
out
adc
repnz
sbb
xchg
push
push
jb
xchg
pop
pop
cwde
xchg
pop
push
fcom
out
push
(bad)
pop
(bad)
popf
fisttp
sbb
cmp
push
mov
stos
cmp
(bad)
sub
out
xchg
or
int
cmp
xchg
(bad)
out
adc
repnz
or
xchg
or
(bad)
out
xchg
or
xchg
pop
pop
sub
daa
pop
test
out
hlt
sub
inc
mov
xchg
test
not
fwait
inc
or
sbb
cmp
add
push
push
jb
stos
sbb
(bad)
sub
out
xchg
or
int
cmp
xchg
push
ret
add
fistp
cld
or
vaddps
or
jae
sbb
xor
pop
repz
jmp
mov
push
jmp
pop
cmp
fld
(bad)
popf
fwait
dec
(bad)
sbb
cmp
mul
movs
add
aaa
push
push
inc
jmp
push
std
jmp
sahf
mov
adc
jmp
push
jge
and
mov
jmp
push
std
pop
jl
pop
loopne
addr16
ret
pop
mov
enter
or
daa
pop
mov
out
repz
inc
out
and
(bad)
(bad)
sbb
or
add
and
(bad)
(bad)
sbb
or
retf
aaa
push
cmp
jge
jl
push
loopne
adc
pop
pop
jl
jb
and
push
inc
adc
call
rol
add
popa
xchg
inc
mov
ret
xchg
xchg
ret
mov
pop
cmp
jbe
sbb
or
dec
xchg
js
retf
test
xor
out
and
jb
sbb
cmp
repnz
adc
jb
popf
jl
(bad)
sbb
cmp
sub
sbb
cmp
hlt
pop
jl
je
mov
je
pop
jl
jb
and
pop
pop
jl
jb
and
push
and
mov
pop
jl
jb
mov
mov
pop
aaa
adc
pop
pop
or
inc
sub
(bad)
sub
mov
sub
mov
into
add
or
(bad)
dec
cmp
add
sbb
or
sub
cmp
jbe
and
dec
sahf
push
test
dec
jbe
and
dec
pop
push
in
dec
out
and
out
pop
push
je
call
out
and
outs
ret
xor
ret
xchg
xchg
repz
lods
daa
mov
out
je
jbe
daa
add
movs
retf
js
lds
pop
dec
sbb
popf
jnp
(bad)
sbb
cmp
dec
jmp
ss
(bad)
and
(bad)
mov
adc
jmp
push
std
shl
sahf
mov
and
jmp
push
std
repnz
into
aaa
pop
fs
jmp
push
std
icebp
and
mov
or
pop
add
or
rol
sbb
xchg
inc
aaa
addr16
inc
jmp
pop
std
fidivr
loope
push
or
inc
test
add
popf
pop
ins
(bad)
sbb
cmp
or
adc
imul
(bad)
out
adc
jb
stos
cmp
(bad)
pop
push
(bad)
out
adc
repnz
cmp
xchg
push
(bad)
out
adc
repnz
sbb
xchg
or
(bad)
out
adc
jb
xchg
pop
pop
test
pop
push
call
xchg
out
hlt
sub
inc
mov
dec
add
or
(bad)
sbb
cmp
add
or
inc
sahf
xchg
fisttp
div
mov
jge
and
(bad)
aaa
pop
fs
jmp
push
std
cmc
and
mov
int3
pop
add
or
add
pop
inc
inc
aaa
aaa
add
movs
(bad)
jge
js
lds
pop
pop
sbb
popf
jnp
(bad)
sbb
cmp
dec
jmp
ss
jl
ds
adc
pop
pop
jl
jb
and
push
jecxz
mov
pop
jl
jb
mov
mov
pop
aaa
adc
pop
pop
or
pop
xlat
jns
fdivrp
sub
mov
xchg
and
popf
pop
ins
(bad)
sbb
cmp
sub
cmp
jbe
and
arpl
or
jbe
and
outs
pop
push
and
dec
out
and
jmp
push
add
call
out
and
push
xchg
add
xchg
xchg
xor
out
je
jbe
pop
add
(bad)
sbb
cmp
dec
loopne
xor
xchg
cmp
jl
jb
and
pop
pop
jl
jb
and
push
jecxz
mov
pop
jl
jb
mov
mov
pop
aaa
adc
pop
pop
or
inc
sub
fdivrp
sub
fadd
and
popf
pop
ins
(bad)
sbb
cmp
dec
loopne
xor
inc
pop
je
pop
jl
jb
and
pop
pop
jl
jb
and
push
jecxz
mov
pop
jl
jb
mov
mov
pop
aaa
adc
pop
pop
or
inc
sub
fdivrp
sub
fadd
and
popf
pop
ins
(bad)
sbb
cmp
dec
loopne
xor
xchg
or
jl
jb
and
pop
pop
jl
jb
and
push
jecxz
mov
pop
jl
jb
mov
mov
pop
aaa
adc
pop
pop
or
inc
sub
fdivrp
sub
fadd
and
popf
pop
ins
(bad)
sbb
cmp
dec
loopne
aaa
outs
sub
je
int
or
neg
(bad)
out
adc
jb
stos
cmp
(bad)
sub
out
xchg
or
int
cmp
xchg
push
(bad)
out
adc
repnz
sbb
xchg
push
push
jb
xchg
pop
pop
test
pop
push
call
xchg
out
int3
sub
popa
mov
dec
add
or
(bad)
sbb
cmp
add
push
add
jbe
and
fs
push
test
fisttp
aaa
pop
or
xchg
data16
pop
aaa
sub
pop
pop
js
pop
inc
sub
xlat
jns
fdivrp
sub
mov
xchg
mov
mov
push
add
(bad)
cmp
jbe
and
jnp
push
fs
or
jbe
and
pop
pop
push
in
dec
out
and
loopne
push
les
call
out
and
retw
adc
ret
xchg
xchg
push
mov
jl
mov
out
je
jbe
pop
add
movs
outs
std
(bad)
js
movs
adc
sbb
popf
jnp
(bad)
sbb
cmp
test
(bad)
int
sbb
(bad)
sub
out
adc
repnz
sub
xchg
push
(bad)
out
adc
repnz
sbb
xchg
js
(bad)
out
xchg
add
nop
pop
pop
call
xchg
daa
pop
push
sub
popa
mov
mov
cmp
pop
add
(bad)
sbb
cmp
dec
outs
pop
cmp
jbe
sbb
cmp
dec
int
cmp
imul
inc
sahf
push
add
jbe
and
dec
pop
push
test
dec
out
and
cld
pop
push
fs
pop
mov
jge
adc
ret
xchg
xchg
push
mov
pop
mov
cmp
aaa
add
movs
addr16
(bad)
js
movs
adc
sbb
popf
jnp
(bad)
sbb
cmp
imul
(bad)
out
xchg
push
jb
stos
sbb
(bad)
sub
out
xchg
or
int
cmp
xchg
push
ret
add
fistp
cld
or
vaddps
or
and
sbb
jecxz
aaa
pop
mov
std
(bad)
js
movs
adc
sbb
popf
jnp
(bad)
sbb
cmp
pop
je
(bad)
out
and
stc
lahf
push
mov
(bad)
cmp
jbe
and
bound
or
jbe
and
ins
pop
push
inc
sub
dec
mov
inc
jmp
cmps
jge
aaa
sub
pop
pop
js
pop
inc
sub
(bad)
sub
sub
sub
mov
dec
add
or
(bad)
sbb
cmp
add
dec
rol
push
add
dec
jbe
and
pusha
pop
push
les
fisttp
aaa
pop
or
xchg
cmps
jge
aaa
sub
pop
pop
js
pop
inc
sub
(bad)
sub
sub
sub
mov
dec
add
or
(bad)
sbb
cmp
or
pop
lock
je
jbe
push
add
jmp
idiv
sbb
cmp
sub
je
jbe
and
adc
xchg
aaa
jge
sbb
cmp
dec
xchg
dec
cmp
or
(bad)
sbb
cmp
lea
in
out
add
cmc
mov
repnz
xchg
or
dec
(bad)
sbb
cmp
icebp
adc
into
or
out
test
xchg
repnz
xchg
or
dec
(bad)
sbb
cmp
adc
into
or
out
add
cmc
mov
repnz
xchg
or
dec
dec
bound
sub
(bad)
sbb
or
retf
out
xor
xor
addr16
add
or
(bad)
sbb
or
retf
out
xor
xor
out
and
gs
add
rcr
std
dec
mov
lds
sub
and
jae
sbb
or
dec
aaa
and
push
dec
push
or
mov
rol
sbb
cmp
les
adc
adc
sbb
cmp
dec
in
push
add
sbb
cmp
dec
(bad)
test
inc
jmp
dec
(bad)
sbb
cmp
aaa
and
inc
test
movs
pop
out
push
lods
jbe
and
mov
jne
and
inc
call
push
sbb
mov
rol
jmp
test
out
adc
jb
sbb
cmp
sub
adc
jge
sub
mov
push
inc
(bad)
sbb
cmp
dec
ficomp
lea
sbb
cmp
inc
(bad)
sbb
cmp
jne
and
inc
mov
jne
push
rol
and
jge
jnp
adc
lahf
js
cs
movs
jae
fistp
or
dec
push
das
cmp
jb
sbb
cmp
dec
sbb
xor
loopne
push
cld
pushf
sub
jo
imul
add
mov
je
fistp
ins
dec
lahf
sub
jbe
sbb
or
dec
sub
dec
addr16
cmp
and
cld
lock
jnp
(bad)
mov
add
jmp
mov
(bad)
sbb
cmp
jbe
sbb
cmp
sub
rcr
imul
dec
xor
push
pop
jmp
add
(bad)
or
push
paddsb
scas
test
mov
dec
pop
jmp
add
(bad)
or
push
(bad)
loopne
push
test
jmp
add
(bad)
or
jmp
push
jge
sub
pushf
xchg
jmp
shl
mov
loopne
pop
push
scas
push
mov
adc
icebp
sub
hlt
and
sar
push
clc
add
jecxz
imul
mov
mov
sahf
js
aad
and
and
jb
sbb
cmp
jmp
jb
sbb
cmp
or
hlt
xchg
sbb
repnz
add
sub
and
test
jno
fs
jle
daa
pop
jno
and
sub
mov
add
jno
in
jle
sub
jge
and
sub
mov
add
lods
ins
(bad)
sti
ret
mov
push
and
movs
add
push
and
jbe
jnp
js
and
sub
cld
sub
aam
dec
xor
jnp
jno
and
ja
and
lock
adc
dec
xor
jnp
jge
and
ja
and
loopne
addr16
scas
push
je
mov
cmp
jmp
xchg
pop
sub
adc
and
scas
jbe
cmp
aam
jb
sti
cmp
loopne
push
push
scas
push
mov
adc
adc
adc
cld
jbe
and
scas
es
adc
pop
(bad)
aam
cld
jbe
sub
in
dec
mov
dec
(bad)
jnp
sbb
or
dec
loopne
aaa
push
scas
push
je
sub
cmp
int
sti
add
pusha
push
add
sub
pop
pop
add
mov
dec
or
jmp
hlt
and
shl
(bad)
popa
fs
test
or
(bad)
sbb
cmp
not
jl
shl
(bad)
jge
sbb
pop
jl
repnz
add
jmp
inc
jge
ds
pop
jl
repnz
add
jmp
push
jge
aas
sub
pop
jl
jb
push
(bad)
(bad)
out
iret
add
lea
dec
sub
sbb
or
or
xor
jge
sbb
pop
jl
repnz
add
jmp
(bad)
jge
sbb
pop
jl
repnz
add
jmp
inc
jge
push
sub
adc
dec
lea
mov
jge
aas
sub
pop
jl
jb
push
(bad)
(bad)
out
iret
add
mov
dec
sub
sbb
or
or
adc
jge
push
sub
adc
and
scas
es
out
aam
jb
sti
cmp
loopne
push
push
scas
es
adc
pop
or
loopne
push
push
scas
es
out
push
sbb
div
sub
adc
dec
mov
jae
jge
sbb
or
dec
push
jnp
dec
loopne
aaa
push
scas
push
je
sub
cmp
int
sti
add
and
dec
stos
pop
aam
int
sti
inc
cmps
fs
(bad)
out
and
imul
stos
sti
inc
cmps
fs
(bad)
out
and
ins
imul
sub
xor
mov
outs
pop
add
out
xchg
add
dec
(bad)
sbb
cmp
cmc
mov
push
jno
adc
imul
xor
push
pop
jmp
add
(bad)
or
push
punpcklwd
scas
and
mov
inc
pop
jmp
add
(bad)
or
push
pminsw
lahf
je
mov
inc
pop
jmp
add
(bad)
or
in
push
paddsw
fcomip
mov
push
add
(bad)
or
in
push
punpckldq
iret
add
mov
dec
pop
jmp
add
(bad)
or
push
push
(bad)
jmp
or
je
repnz
add
jmp
push
jge
and
xor
sub
push
pop
add
dec
repnz
dec
in
outs
repnz
shl
adc
xchg
mov
mov
jmp
out
dec
and
xor
sub
push
pop
add
dec
loop
int
ins
icebp
and
push
add
or
mov
push
add
push
add
mov
push
jno
or
sub
rcr
imul
dec
xor
push
pop
jmp
add
(bad)
or
push
punpckldq
scas
add
mov
inc
pop
jmp
add
(bad)
or
push
paddsw
fcomip
mov
push
add
(bad)
or
pop
and
clc
bound
aam
and
sbb
xchg
mov
ss
jmp
adc
mov
test
xor
fs
push
inc
adc
xchg
mov
cmps
xchg
pop
or
ss
inc
xor
inc
lock
and
arpl
sub
adc
sub
push
es
(bad)
out
test
push
adc
push
inc
xor
inc
add
fdiv
push
or
and
jb
pusha
jns
add
loop
fst
xor
sub
add
out
and
jb
aam
push
adc
jb
inc
test
add
push
xor
movs
or
test
mov
hlt
je
and
and
out
es
je
and
jbe
and
and
je
and
jg
add
jg
xchg
jo
es
out
es
pop
and
iret
and
jg
hlt
je
and
and
jne
es
je
and
and
and
and
out
es
(bad)
xchg
ja
es
ja
es
jmp
les
and
jg
in
mov
je
es
mov
and
and
out
es
mov
and
jg
and
mov
je
es
mov
es
mov
and
mov
and
and
je
and
jne
and
jb
push
add
fild
outs
push
add
int
dec
inc
cmps
fs
(bad)
out
and
out
stc
and
mov
and
loopne
aaa
ja
and
loopne
addr16
scas
jbe
mov
jmp
xchg
cmp
pop
add
mov
ja
mov
inc
sub
mov
add
sub
aam
jbe
movs
add
aaa
addr16
inc
jmp
pop
std
cmp
movs
and
push
push
pop
jmp
add
jmp
add
adc
adc
xor
mov
out
push
add
jmp
add
adc
adc
or
or
jmp
add
adc
xchg
mov
mov
jmp
fdivr
push
and
jbe
jnp
js
and
sub
jmp
push
xor
jnp
jb
and
ja
and
lock
adc
dec
xor
jnp
jge
and
ja
and
loopne
addr16
scas
es
out
aam
repnz
and
scas
inc
je
out
aam
jb
sti
cmp
loopne
push
push
scas
push
mov
out
push
sbb
sti
sbb
loopne
push
push
scas
push
mov
out
aam
repnz
sbb
jmp
pop
jns
and
mov
jbe
rol
stos
pop
icebp
jmp
sti
or
and
ja
pop
and
fistp
ins
dec
push
(bad)
sti
inc
aaa
addr16
inc
jmp
pop
std
cmp
movs
and
push
push
pop
jmp
add
jmp
add
adc
adc
xor
mov
out
push
add
jmp
add
adc
adc
or
or
jmp
add
adc
xchg
mov
mov
jmp
fdivr
push
and
jbe
jnp
js
and
sub
jmp
push
xor
jnp
jb
and
ja
and
lock
adc
dec
xor
jnp
jge
and
ja
and
loopne
addr16
scas
es
out
aam
repnz
and
scas
inc
je
out
aam
jb
sti
cmp
loopne
push
push
scas
push
mov
out
aam
jb
sti
sbb
loopne
push
push
scas
push
mov
out
aam
repnz
sbb
jmp
pop
jns
and
mov
jbe
rol
adc
loopne
inc
ja
pop
and
fistp
ins
dec
push
(bad)
sti
ret
mov
push
add
push
sub
jmp
mov
out
movs
psrlq
in
(bad)
sbb
cmp
sub
sbb
sbb
dec
loopne
aaa
push
lods
es
sbb
adc
out
je
test
adc
(bad)
sbb
cmp
push
(bad)
sbb
cmp
dec
loopne
aaa
push
lods
push
mov
in
in
hlt
jmp
xlat
add
jmp
add
loopne
and
xor
push
test
stos
or
mov
push
add
xchg
add
(bad)
sbb
cmp
dec
enter
mov
movs
add
(bad)
sbb
or
inc
jmp
ret
(bad)
(bad)
sbb
cmp
jge
adc
enter
mov
fild
(bad)
popf
jmp
(bad)
sbb
cmp
add
sbb
or
inc
scas
addr16
loop
es
ja
and
loopne
cmps
out
and
mov
test
and
int3
and
sub
mov
add
dec
push
jnp
dec
loopne
aaa
push
scas
ss
out
and
jb
xchg
sub
sbb
shr
dec
int
add
mov
aam
sar
stos
or
sub
push
jb
bound
out
xchg
push
repnz
adc
jmp
add
push
or
(bad)
sbb
or
add
and
in
mov
push
pop
jmp
xchg
push
sub
push
mov
bnd
and
fdiv
movs
sub
out
movs
push
jb
movs
adc
jnp
ja
and
ja
and
(bad)
sbb
cmp
push
scas
inc
je
out
movs
sbb
sub
sbb
shr
dec
int
add
mov
aam
sar
stos
or
outs
bound
out
xchg
push
repnz
adc
jmp
add
push
or
(bad)
sbb
or
retf
hlt
sub
pop
je
jb
and
mov
jmp
push
jge
push
sub
pop
jl
repnz
add
jmp
(bad)
jge
pop
sub
pop
jl
repnz
add
jmp
inc
jge
ss
pop
jl
repnz
add
jmp
push
jge
xor
pop
jl
jb
push
(bad)
(bad)
out
into
add
jmp
inc
std
in
movs
sub
(bad)
sbb
cmp
dec
loopne
aaa
push
scas
data16
out
movs
sbb
pop
xchg
sub
std
and
mov
and
add
mov
aam
sar
stos
or
out
movs
add
jnp
ja
and
ja
and
(bad)
sbb
cmp
retf
movs
and
mov
adc
jmp
add
jmp
add
adc
adc
xchg
loopne
or
jmp
add
adc
adc
xor
mov
out
push
add
jmp
add
adc
adc
xor
mov
loopne
add
jmp
add
push
add
int
mov
cmps
fs
ret
push
add
sti
not
and
lock
inc
add
sub
adc
mov
inc
or
xchg
push
jge
push
sub
aam
dec
jbe
sub
in
dec
mov
jne
rol
hlt
push
jge
jnp
jbe
and
push
pop
and
fistp
ins
dec
push
jnp
dec
loopne
aaa
push
scas
data16
sub
sub
stos
sti
add
and
dec
stos
pop
test
cmps
fs
ret
push
add
sub
sbb
push
(bad)
(bad)
out
scas
add
ds
je
push
mov
aam
pop
add
push
add
xchg
(bad)
or
(bad)
sbb
or
or
ds
movs
and
push
aam
jmp
add
jmp
add
adc
adc
xchg
loopne
or
jmp
add
adc
adc
xor
mov
out
push
add
jmp
add
adc
adc
xor
mov
out
push
add
jmp
add
push
add
mov
push
jno
add
imul
xor
push
pop
jmp
add
(bad)
or
push
paddsw
fcomip
mov
push
add
(bad)
or
push
punpckldq
scas
add
mov
inc
pop
jmp
add
(bad)
or
jmp
push
jge
push
sub
adc
and
scas
push
je
out
push
sbb
sti
cmp
loopne
push
push
scas
inc
mov
out
aam
jb
sti
sbb
loopne
push
push
scas
es
out
push
adc
aam
sbb
jmp
pop
jns
and
mov
jne
rol
mov
jge
jnp
jbe
and
push
pop
and
fistp
ins
dec
push
jnp
dec
loopne
aaa
push
scas
data16
mov
xor
jge
xor
pop
add
mov
ds
and
pop
jnp
test
lods
ins
(bad)
sti
ret
mov
push
and
and
cmp
and
jbe
jnp
js
and
sub
lock
adc
dec
xor
jnp
jge
and
ja
and
jmp
push
xor
jnp
jb
and
ja
and
loopne
addr16
scas
data16
mov
xor
jge
adc
push
inc
and
adc
mov
jmp
add
(bad)
or
jmp
push
jge
and
inc
sub
pop
add
dec
jecxz
je
and
sub
mov
add
sub
mov
jbe
js
sbb
or
adc
inc
shl
and
push
out
imul
(bad)
sbb
cmp
imul
xor
dec
dec
and
imul
adc
sbb
cmp
je
inc
add
jmp
push
aas
mov
or
sbb
or
sbb
sbb
or
dec
mov
outs
in
rcr
mov
dec
out
imul
dec
mov
sbb
cmp
dec
or
cmp
jbe
mov
in
(bad)
sbb
cmp
dec
xchg
retf
in
je
call
ja
in
and
sbb
sbb
or
dec
out
movs
aas
jb
sbb
cmp
dec
out
movs
xor
(bad)
sbb
or
sub
aam
idiv
movs
push
cli
mov
add
push
sub
movs
and
push
aam
jmp
add
jmp
add
adc
adc
xchg
loopne
or
jmp
add
adc
adc
xor
mov
out
push
add
jmp
add
push
add
int
mov
cmps
fs
(bad)
out
and
inc
sub
sub
stos
sti
add
and
dec
stos
pop
je
int
sti
inc
cmps
fs
(bad)
out
and
gs
add
int
sti
inc
cmps
fs
(bad)
out
and
push
pop
and
in
idiv
dec
and
sub
stos
pusha
adc
add
aam
cmp
stos
imul
push
push
add
xchg
or
(bad)
sbb
cmp
cmc
mov
push
jno
xor
imul
xor
push
pop
jmp
add
(bad)
or
push
paddsw
fcomip
mov
push
add
(bad)
or
push
punpckldq
scas
add
mov
inc
pop
jmp
add
(bad)
or
enter
xor
add
and
(bad)
(bad)
sbb
or
or
ds
loopne
addr16
mov
adc
jb
sub
pop
je
jb
and
jp
add
rcr
imul
dec
xor
push
pop
jmp
add
(bad)
or
push
paddsw
fcomip
mov
push
add
(bad)
or
push
punpckldq
out
add
mov
dec
pop
jmp
add
(bad)
or
jmp
push
jge
daa
sub
pop
xchg
jmp
sti
and
ror
inc
ret
add
push
add
or
mov
push
add
push
add
mov
push
jno
and
mov
jmp
add
push
and
jbe
jnp
js
and
sub
lock
adc
dec
xor
jnp
jge
and
ja
and
jmp
push
xor
jnp
jb
and
ja
and
loopne
addr16
scas
push
je
mov
aaa
pop
jmp
xchg
xor
pop
add
fild
je
and
jbe
and
pop
jnp
test
lods
ins
(bad)
sti
ret
mov
push
and
and
cmp
and
jbe
jnp
js
and
sub
lock
adc
dec
xor
jnp
jge
and
ja
and
jmp
push
xor
jnp
jb
and
ja
and
loopne
addr16
scas
data16
sub
sub
stos
sti
add
pusha
push
add
push
dec
sub
sbb
add
mov
inc
or
xchg
push
jge
push
sub
aam
dec
jbe
sub
in
dec
mov
fs
jb
jl
jb
xor
sbb
outs
rol
pop
add
push
add
xchg
(bad)
or
(bad)
sbb
or
fild
scas
push
jbe
jnp
jbe
and
push
pop
and
fistp
ins
dec
push
jl
dec
(bad)
sbb
dec
dec
(bad)
sbb
cmp
jge
sub
cs
popf
or
sbb
cmp
add
pop
push
sub
stos
sti
add
gs
bound
stos
sti
inc
cmps
fs
ret
push
add
sub
sbb
in
push
(bad)
(bad)
out
scas
add
scas
and
hlt
mov
test
loopne
bound
and
mov
add
dec
(bad)
sbb
cmp
cwde
iret
stos
(bad)
les
push
add
xchg
(bad)
or
(bad)
sbb
or
dec
(bad)
sbb
cmp
push
inc
push
je
int
cmp
scas
fs
loop
pop
push
pop
jmp
xchg
pop
sub
outs
loop
fs
stos
mov
jmp
add
(bad)
or
jmp
push
jge
and
inc
sub
pop
add
sub
inc
jo
mov
inc
sub
mov
add
sub
outs
push
add
int
dec
inc
cmps
fs
(bad)
out
and
cli
sbb
and
movs
mov
je
loopne
aaa
ja
and
loopne
addr16
scas
data16
mov
xor
jge
sub
inc
repnz
into
jbe
and
pop
jnp
test
sub
outs
push
add
int
dec
inc
cmps
fs
(bad)
out
and
clc
fldenv
movs
push
movs
mov
and
loopne
aaa
ja
and
loopne
addr16
scas
data16
mov
xor
jge
das
sub
pop
add
popf
add
and
int3
and
pop
jnp
test
sub
outs
push
add
int
dec
inc
cmps
fs
(bad)
out
and
(bad)
stc
and
movs
mov
push
ja
and
ja
and
loopne
addr16
scas
data16
sub
sub
stos
sti
add
and
dec
stos
pop
test
cmps
fs
(bad)
out
and
jl
pop
fs
int
sti
inc
cmps
fs
(bad)
out
and
jge
pop
movs
sub
xor
mov
dec
and
sub
stos
pusha
inc
rol
push
test
shl
xchg
or
(bad)
sbb
cmp
add
push
add
(bad)
and
rcr
jnp
jb
and
push
scas
jbe
cmp
xchg
sbb
outs
loop
je
xchg
test
mov
xor
jmp
add
(bad)
or
jmp
push
jge
or
xor
inc
repnz
or
fs
(bad)
out
and
std
leave
es
push
movs
mov
inc
ja
and
ja
and
loopne
addr16
scas
push
je
out
movs
sbb
pop
xchg
sub
(bad)
and
ror
inc
scas
outs
add
jmp
shl
push
add
int
mov
cmps
fs
ret
push
jae
and
scas
push
mov
out
xchg
sbb
ret
jmp
movs
mov
jmp
add
(bad)
or
jmp
push
jge
sub
xor
inc
repnz
or
fs
(bad)
out
and
jecxz
and
push
movs
mov
push
ja
and
ja
and
loopne
addr16
scas
data16
mov
xor
jge
xor
inc
repnz
jmp
jb
and
int3
and
pop
jnp
test
sub
push
jl
mov
push
inc
or
xor
jge
sub
xor
jl
repnz
add
jmp
inc
jge
aaa
sub
pop
jl
repnz
add
jmp
push
jge
xor
pop
jl
jb
push
(bad)
(bad)
out
scas
add
ds
je
push
mov
test
push
add
xchg
(bad)
or
(bad)
sbb
or
or
ds
movs
and
push
adc
jmp
add
jmp
add
adc
adc
xchg
loopne
or
jmp
add
adc
adc
xor
mov
out
push
add
jmp
add
adc
adc
xor
mov
int3
sub
sbb
jb
and
ja
and
lock
adc
dec
xor
jnp
jge
and
ja
and
loopne
addr16
scas
ss
out
movs
adc
xchg
sub
cld
and
ror
inc
inc
imul
add
or
mov
push
add
push
add
mov
push
jno
sub
imul
xor
push
pop
jmp
add
(bad)
or
push
paddsw
fcomip
mov
push
add
(bad)
or
push
punpckldq
scas
add
mov
inc
pop
jmp
add
(bad)
or
in
push
paddsw
fcomip
mov
push
add
(bad)
or
push
punpckldq
scas
add
mov
inc
pop
jmp
add
(bad)
or
jmp
add
sub
and
push
push
(bad)
sbb
cmp
dec
(bad)
popf
cmp
(bad)
sbb
cmp
(bad)
sbb
or
dec
pushf
push
xor
out
add
sbb
jb
and
push
scas
push
mov
out
adc
repnz
mov
sub
and
sub
mov
add
jno
in
jle
sub
jge
and
sub
mov
add
lods
ins
(bad)
sti
inc
fnstcw
loopne
pop
jmp
out
adc
jb
xor
add
shl
and
sti
pop
add
out
fs
mov
adc
xchg
inc
(bad)
(bad)
sbb
cmp
retf
push
cmp
jb
sbb
cmp
push
lods
es
sbb
adc
out
fs
mov
adc
xchg
jecxz
(bad)
sbb
cmp
jge
sbb
cmp
dec
loopne
aaa
push
lods
push
mov
in
in
hlt
jmp
xlat
add
jmp
pop
jge
movs
adc
std
and
xor
push
test
stos
or
mov
push
add
xchg
add
(bad)
sbb
cmp
popa
pop
je
(bad)
out
and
sbb
sti
jbe
and
shl
xchg
sub
ret
and
lock
inc
add
sub
in
add
mov
inc
add
sub
clc
and
lock
inc
add
xor
and
repz
movs
mov
dec
push
jnp
dec
loopne
aaa
push
scas
push
je
out
push
push
repnz
and
scas
push
je
out
push
sbb
sti
sub
loopne
push
push
scas
ss
out
aam
jb
sti
or
loopne
push
push
scas
push
mov
out
aam
repnz
sbb
lock
adc
dec
mov
inc
(bad)
jge
popf
div
sbb
cmp
jbe
and
shl
xchg
sub
ret
and
lock
inc
add
sub
loop
add
mov
inc
add
sub
loop
add
mov
inc
add
xor
and
repz
movs
mov
dec
(bad)
sbb
cmp
sub
hlt
and
loopne
pusha
inc
add
sti
jbe
and
loopne
pusha
inc
add
sub
sti
and
lock
inc
add
sub
cli
and
nop
mov
inc
add
in
jle
and
repz
movs
jmp
jnp
dec
loopne
aaa
push
scas
push
je
out
aam
repnz
and
scas
es
out
push
pop
jb
sti
sub
loopne
push
push
scas
ss
out
push
adc
sti
sbb
loopne
push
push
scas
jbe
cmp
aam
repnz
sbb
mov
sub
push
jmp
xchg
and
sar
xor
(bad)
sbb
or
sub
and
cmp
and
jbe
jnp
js
and
sub
lock
adc
dec
xor
jnp
jge
and
ja
and
jmp
push
xor
jnp
jb
and
ja
and
loopne
addr16
enter
retf
sub
scas
xor
sar
add
je
div
xor
jge
cmp
outs
push
inc
repnz
or
fs
(bad)
out
and
stc
mov
mov
and
loopne
aaa
ja
and
cld
add
push
mov
add
jmp
ss
cmp
outs
push
inc
repnz
or
fs
(bad)
out
and
stc
cdq
and
xlat
cmps
mov
je
loopne
aaa
ja
and
cld
and
je
div
xor
jge
cmp
outs
push
inc
repnz
or
fs
(bad)
out
and
stc
cdq
and
xlat
cmps
mov
je
loopne
aaa
ja
and
mov
arpl
jmp
xchg
sbb
repnz
add
sub
and
test
jno
in
jle
sub
jge
and
sub
mov
add
jno
fs
in
pop
jb
and
sub
mov
add
sub
push
cmp
out
add
mov
push
add
xor
jge
ss
outs
push
inc
repnz
or
fs
(bad)
out
and
dec
es
xlat
cmps
mov
in
loopne
aaa
ja
and
loopne
addr16
scas
data16
out
movs
push
jb
xchg
sub
loopne
add
dec
adc
ins
push
je
push
add
or
mov
push
add
push
add
int
mov
cmps
fs
(bad)
out
and
loopne
pop
les
jmp
xchg
xor
xor
inc
repnz
add
mov
inc
sub
mov
add
sub
aaa
xchg
inc
jmp
add
sub
hlt
jb
and
push
scas
data16
out
movs
push
jb
xchg
sub
loop
add
dec
bound
in
add
inc
jmp
add
push
add
int
mov
cmps
fs
(bad)
out
and
loopne
pop
les
jmp
xchg
sub
pop
add
ret
fbld
inc
sub
mov
add
sub
std
and
mov
jnp
jb
and
push
scas
data16
out
adc
repnz
rcl
add
xchg
mov
pop
jmp
add
(bad)
or
fistp
loopne
pop
push
mov
and
stos
sub
cmps
fs
(bad)
out
and
loopne
pop
les
jmp
xchg
sub
pop
add
int
jae
mov
inc
sub
mov
add
ins
aaa
aaa
xchg
inc
jmp
add
jnp
add
scas
data16
out
movs
push
jb
xchg
sub
loop
add
dec
inc
inc
ret
push
fs
shl
push
add
int
mov
cmps
fs
(bad)
out
and
loopne
pop
les
jmp
xchg
sub
pop
add
retf
fbld
inc
sub
mov
add
ins
aaa
aaa
xchg
inc
jmp
add
sub
pop
jnp
jb
and
push
scas
data16
out
movs
push
jb
xchg
sub
loop
add
dec
adc
ins
push
inc
jmp
shl
push
add
int
mov
cmps
fs
(bad)
out
and
loopne
pop
les
jmp
xchg
sub
pop
add
(bad)
add
mov
inc
sub
mov
add
sub
std
and
mov
jnp
jb
and
push
scas
data16
out
adc
jb
repnz
mov
pop
jmp
add
(bad)
or
jmp
push
jge
ss
outs
push
inc
repnz
or
fs
(bad)
out
and
jecxz
daa
test
cmps
mov
je
loopne
aaa
ja
and
mov
arpl
jmp
xchg
dec
out
mov
jnp
repnz
add
sub
and
test
jno
and
push
popa
add
jle
stos
sbb
aad
push
jb
push
or
stos
or
mov
push
add
adc
adc
xor
mov
out
push
add
jmp
add
push
add
int
mov
cmps
fs
(bad)
out
and
out
mov
mov
jmp
xchg
xor
pop
add
retf
add
mov
inc
sub
mov
add
lods
ins
(bad)
sti
ret
loope
push
(bad)
fistp
loopne
pop
jmp
out
push
push
jb
stos
sbb
cmps
fs
(bad)
out
and
fidiv
mov
jge
aaa
sub
pop
and
test
jo
and
pushf
xor
out
and
jb
movs
adc
jnp
ja
and
ja
and
(bad)
sbb
cmp
retf
movs
and
mov
aam
jmp
add
jmp
add
adc
adc
xchg
loopne
or
jmp
add
adc
adc
xor
mov
out
push
add
jmp
add
push
add
int
mov
cmps
fs
ret
push
jb
and
mov
mov
jnp
ja
and
ja
and
loopne
addr16
scas
data16
out
aam
repnz
and
scas
es
out
aam
jb
sti
cmp
loopne
push
push
scas
push
mov
jmp
xor
cmps
fs
ret
push
add
popa
fs
in
pop
repnz
add
movs
mov
fs
mov
add
dec
(bad)
sbb
cmp
neg
jl
shl
xor
jge
sbb
pop
jl
repnz
add
jmp
inc
jge
push
sub
adc
dec
jbe
and
scas
es
out
push
sbb
jbe
sub
in
dec
mov
jne
rol
movs
push
and
adc
mov
add
push
add
xchg
(bad)
or
(bad)
sbb
or
or
ds
out
xchg
ins
repz
sub
inc
pop
je
shr
and
aam
cmp
mov
je
and
movs
add
push
and
jbe
jnp
js
and
sub
lock
adc
dec
xor
jnp
jge
and
ja
and
jmp
push
xor
jnp
jb
and
ja
and
loopne
addr16
mov
aam
jb
stos
or
cmps
fs
ret
push
add
sti
jbe
and
lock
inc
add
sub
sbb
add
mov
inc
or
mov
jge
cmp
inc
jb
push
(bad)
(bad)
out
scas
add
ds
je
xor
jb
mov
aam
pop
jnp
jbe
and
dec
(bad)
sbb
cmp
idiv
and
shl
xchg
sub
(bad)
and
lock
inc
add
sub
sbb
add
mov
inc
or
mov
jge
cmp
inc
jb
push
(bad)
(bad)
out
scas
add
ds
je
xor
jb
mov
hlt
sub
mov
add
dec
(bad)
sbb
cmp
(bad)
jmp
or
push
sbb
movs
add
mov
push
add
adc
jge
push
sub
adc
and
scas
es
out
push
adc
sti
sbb
loopne
push
push
scas
push
mov
jmp
aaa
stos
int
sti
inc
cmps
fs
(bad)
out
and
imul
sub
xor
mov
dec
and
sub
sub
and
(bad)
fnstcw
pop
jnp
jbe
and
push
pop
and
fistp
ins
dec
push
jnp
dec
loopne
aaa
push
scas
push
je
out
aam
repnz
and
scas
es
out
push
sbb
adc
sub
loopne
push
push
scas
push
mov
jmp
aaa
stos
int
sti
inc
cmps
fs
(bad)
out
and
imul
sub
xor
mov
dec
and
sub
sub
rcl
push
mov
shl
xchg
or
(bad)
sbb
cmp
(bad)
pushf
cmp
lahf
das
sbb
inc
add
pushf
xchg
sub
pop
jl
shl
xor
jge
xor
pop
jl
repnz
add
jmp
inc
jge
push
sub
adc
dec
jbe
and
scas
es
out
push
sbb
jbe
sub
in
dec
mov
jne
rol
movs
push
clc
xchg
push
add
push
add
xchg
(bad)
or
(bad)
sbb
or
imul
xor
loopne
pop
outs
out
and
jge
sub
jnp
jb
and
push
scas
push
je
sub
xor
int
sti
add
and
stos
pop
add
int
sti
inc
cmps
fs
ret
push
add
sub
mul
lock
inc
add
fs
in
pop
repnz
add
outs
adc
push
or
jmp
add
xchg
or
(bad)
sbb
cmp
add
and
sub
sub
stos
sti
add
and
pop
stos
pop
add
int
sti
inc
cmps
fs
ret
push
add
sub
mul
lock
inc
add
fs
in
pop
repnz
add
mov
and
jnp
jbe
and
dec
(bad)
sbb
cmp
inc
jmp
or
test
hlt
jb
and
push
scas
push
je
sub
xor
int
sti
add
and
stos
pop
add
int
sti
inc
cmps
fs
ret
push
add
sub
mul
lock
inc
add
fs
in
pop
repnz
add
outs
push
fs
push
or
shl
xchg
or
(bad)
sbb
cmp
add
and
sub
sub
stos
sti
add
and
pop
stos
pop
add
int
sti
inc
cmps
fs
ret
push
add
sub
mul
lock
inc
add
fs
in
pop
repnz
add
outs
bound
push
(bad)
jmp
add
xchg
or
(bad)
sbb
cmp
std
pushf
cmp
pop
je
jb
and
jg
push
inc
sub
pop
jl
shl
xor
jge
xor
pop
jl
repnz
add
jmp
inc
jge
push
sub
adc
dec
jbe
and
scas
es
out
push
sbb
jbe
sub
in
dec
mov
jne
rol
leave
push
jne
jnp
jbe
and
push
pop
and
fistp
ins
dec
push
jnp
dec
loopne
aaa
push
scas
push
je
out
aam
repnz
and
scas
es
out
push
sbb
adc
sub
loopne
push
push
scas
push
mov
jmp
aaa
stos
int
sti
inc
cmps
fs
(bad)
out
and
imul
sub
xor
mov
dec
and
sub
sub
and
test
push
test
jnp
jbe
and
push
pop
and
fistp
ins
dec
push
dec
cmp
jmp
jbe
sbb
or
dec
push
jnp
retf
mov
xor
jmp
xchg
pop
je
(bad)
out
and
pusha
aas
xor
imul
xor
push
pop
jmp
add
(bad)
or
push
paddsw
fcomip
mov
push
add
(bad)
or
push
punpckldq
scas
add
mov
inc
pop
jmp
add
(bad)
or
jmp
push
jge
push
sub
adc
and
scas
es
out
push
adc
sti
sbb
loopne
push
push
scas
push
mov
jmp
aaa
stos
int
sti
inc
cmps
fs
(bad)
out
and
imul
sub
xor
mov
dec
and
sub
stos
loope
rol
stc
sbb
loopne
inc
ja
pop
and
fistp
ins
dec
push
jnp
dec
loopne
aaa
push
scas
push
je
out
aam
repnz
and
scas
es
out
push
sbb
adc
sub
loopne
push
push
scas
push
mov
jmp
aaa
stos
int
sti
inc
cmps
fs
(bad)
out
and
imul
sub
xor
mov
dec
and
sub
sub
and
movs
cmp
jb
jnp
jbe
and
push
pop
and
fistp
ins
dec
push
jnp
retf
mov
xor
jmp
xchg
sbb
repnz
add
sub
and
test
jno
in
jle
sub
jge
and
sub
mov
add
jno
fs
in
pop
jb
and
sub
mov
add
sub
outs
push
add
int
dec
inc
cmps
fs
ret
push
inc
inc
push
add
or
mov
push
add
push
add
mov
push
icebp
pop
cmp
mov
add
jmp
icebp
cmp
and
jbe
jnp
js
and
sub
lock
adc
dec
xor
jnp
jge
and
ja
and
jmp
push
xor
jnp
jb
and
ja
and
jg
pusha
sub
rcr
imul
dec
xor
push
pop
jmp
add
(bad)
or
push
paddsw
fcomip
mov
push
add
(bad)
or
push
punpckldq
scas
add
mov
inc
pop
jmp
add
(bad)
or
jmp
push
jge
push
sub
adc
and
scas
data16
out
aam
jb
sti
sbb
loopne
push
push
scas
push
mov
jmp
xor
int
sti
inc
cmps
fs
ret
push
add
fs
in
pop
jb
sub
mov
jl
je
add
aam
pop
add
push
add
xchg
(bad)
or
(bad)
sbb
or
imul
xor
loopne
pop
outs
out
and
jge
and
dec
push
stos
outs
(bad)
lods
ds
add
xchg
or
(bad)
sbb
cmp
cli
pushf
cmp
mov
jl
je
jb
cwde
inc
push
add
push
add
xchg
(bad)
or
(bad)
sbb
or
dec
repz
mov
jl
je
bound
mov
pop
add
push
add
xchg
(bad)
or
(bad)
sbb
or
dec
repz
loopne
rcl
push
add
mov
add
mov
and
mov
add
dec
(bad)
sbb
cmp
inc
aaa
pop
push
inc
jmp
or
cmp
movs
and
push
aam
jmp
add
jmp
add
adc
adc
xchg
loopne
or
jmp
add
adc
adc
xor
mov
out
push
add
jmp
add
adc
xchg
mov
mov
jmp
fnstsw
push
and
jbe
jnp
js
and
sub
lock
adc
dec
xor
jnp
jge
and
ja
and
jmp
push
xor
jnp
jb
and
ja
and
loopne
outs
cwde
push
xor
int
sbb
cmps
fs
(bad)
out
and
bound
pop
in
int
sti
add
and
ins
stos
pop
inc
stos
int
sti
inc
cmps
fs
ret
push
add
sub
sbb
add
in
push
(bad)
(bad)
out
scas
add
sbb
pop
loopne
mov
scas
push
je
sub
xor
int
sti
add
and
ins
stos
pop
inc
stos
int
sti
inc
cmps
fs
ret
push
add
sub
sbb
add
in
push
(bad)
(bad)
out
scas
add
ds
je
push
mov
movs
mov
add
push
add
xchg
(bad)
or
(bad)
sbb
or
or
ds
out
adc
repz
sub
je
inc
out
and
push
aas
xor
rcr
imul
dec
xor
push
pop
jmp
add
(bad)
or
push
paddsw
fcomip
mov
push
add
(bad)
or
push
punpckldq
scas
add
mov
inc
pop
jmp
add
(bad)
or
pop
cmps
push
sub
loopne
addr16
mov
hlt
js
(bad)
out
lods
add
fistp
or
dec
(bad)
pop
cmp
dec
(bad)
sbb
cmp
dec
(bad)
sbb
cmp
inc
js
pop
and
xor
mov
mov
sub
rcr
imul
dec
xor
push
pop
jmp
add
(bad)
or
push
paddsw
fcomip
mov
push
add
(bad)
or
push
punpckldq
scas
add
mov
inc
pop
jmp
add
(bad)
or
jbe
or
sbb
repnz
add
sub
and
test
jno
in
jle
sub
jge
and
sub
mov
add
jno
fs
in
pop
jb
and
sub
mov
add
je
sbb
cmp
retf
rcr
mov
dec
(bad)
pop
cmp
add
adc
jge
push
sub
adc
and
scas
data16
out
aam
jb
sti
sbb
loopne
push
push
lods
push
mov
adc
sbb
loopne
push
shr
sbb
jmp
pop
jns
and
mov
jne
rol
pop
push
pop
jmp
and
xchg
(bad)
or
(bad)
sbb
or
or
ds
fidiv
mov
sti
or
jo
movs
or
dec
das
hlt
and
(bad)
sbb
cmp
jp
fild
mov
pop
sub
push
and
jbe
jnp
js
and
sub
lock
adc
dec
xor
jnp
jge
and
ja
and
jmp
push
xor
jnp
jb
and
ja
and
mov
push
les
cmps
fs
(bad)
out
and
jle
pop
test
int
sti
add
and
dec
stos
pop
test
cmps
fs
ret
push
add
sub
mul
lock
inc
add
fs
in
pop
repnz
add
outs
add
aam
cmp
stos
sbb
mov
push
add
xchg
or
(bad)
sbb
cmp
hlt
sub
fs
push
or
loop
inc
fidiv
xor
jge
sub
pop
jl
repnz
add
jmp
(bad)
jge
cmp
pop
jl
repnz
add
jmp
inc
jge
push
sub
adc
dec
jbe
and
scas
es
out
push
sbb
jbe
sub
in
dec
mov
jne
rol
movs
push
jl
outs
aam
mov
add
push
add
xchg
(bad)
or
(bad)
sbb
or
or
xor
jge
push
sub
pop
jl
repnz
add
jmp
(bad)
jge
adc
pop
jl
repnz
add
jmp
inc
jge
push
sub
adc
dec
jbe
and
scas
es
out
push
sbb
jbe
sub
in
dec
mov
jne
rol
xchg
push
jne
jnp
jbe
and
push
pop
and
fistp
ins
dec
jbe
cmp
repnz
push
shl
xchg
sub
jecxz
add
mov
inc
add
sti
jbe
and
mov
pusha
inc
add
sub
pop
jl
shl
mov
jge
cmp
inc
jb
push
(bad)
(bad)
out
scas
add
ds
je
add
in
pop
add
push
add
xchg
(bad)
or
(bad)
sbb
or
imul
xor
mov
jl
add
aam
jb
stos
or
cmps
fs
(bad)
out
and
jle
pop
test
int
sti
add
and
ins
stos
pop
inc
stos
int
sti
inc
cmps
fs
ret
push
add
sub
mul
lock
inc
add
fs
in
pop
repnz
add
outs
adc
aam
cmp
stos
dec
shl
xchg
or
(bad)
sbb
cmp
add
and
push
sub
sub
stos
sti
add
and
inc
stos
pop
and
int
sti
inc
cmps
fs
ret
push
add
sub
mul
lock
inc
add
fs
in
pop
repnz
add
outs
and
aam
cmp
stos
imul
push
push
add
xchg
or
(bad)
sbb
cmp
xchg
sub
in
fbstp
mov
inc
add
ins
sub
pop
jl
repnz
add
jmp
(bad)
jge
cmp
pop
jl
repnz
add
jmp
inc
jge
push
sub
adc
dec
jbe
and
scas
es
out
push
sbb
jbe
sub
in
dec
mov
jne
rol
movs
push
outs
outs
adc
mov
add
push
add
xchg
(bad)
or
(bad)
sbb
or
imul
xor
mov
push
les
int
dec
add
and
jle
pop
test
int
sti
add
and
ins
stos
pop
inc
stos
int
sti
inc
cmps
fs
ret
push
add
sub
mul
lock
inc
add
fs
in
pop
repnz
add
outs
bound
push
add
jmp
add
xchg
or
(bad)
sbb
cmp
mov
mov
push
inc
add
ins
sub
pop
jl
repnz
add
jmp
(bad)
jge
cmp
pop
jl
repnz
add
jmp
inc
jge
push
sub
adc
dec
jbe
and
scas
es
out
push
sbb
jbe
sub
in
dec
mov
jne
rol
movs
push
jmp
outs
and
mov
add
push
add
xchg
(bad)
or
(bad)
sbb
or
imul
xor
mov
push
les
int
imul
fs
(bad)
out
and
jle
pop
test
int
sti
add
and
ins
stos
pop
inc
stos
int
sti
inc
cmps
fs
ret
push
add
sub
mul
lock
inc
add
fs
in
pop
repnz
add
outs
adc
aam
cmp
stos
mov
add
xchg
or
(bad)
sbb
cmp
mov
ss
push
inc
add
xor
jge
sub
pop
jl
repnz
add
jmp
(bad)
jge
cmp
pop
jl
repnz
add
jmp
inc
jge
push
sub
adc
dec
jbe
and
scas
es
out
push
sbb
jbe
sub
in
dec
mov
jne
rol
loopne
jbe
sti
pop
jbe
and
push
pop
and
fistp
ins
dec
jbe
cmp
repnz
push
shl
push
add
jecxz
add
mov
inc
add
sti
jbe
and
mov
pusha
inc
add
sub
pop
jl
shl
mov
jge
cmp
inc
jb
push
(bad)
(bad)
out
scas
add
ds
je
add
repnz
mov
les
mov
add
dec
(bad)
sbb
cmp
jb
mov
mov
loopne
push
push
scas
es
out
aam
repnz
and
scas
data16
out
push
sbb
sti
sbb
loopne
push
push
scas
push
mov
jmp
xor
int
sti
inc
cmps
fs
(bad)
out
and
imul
sub
xor
mov
dec
and
sub
sub
rol
push
lods
cmp
stos
fcmovnbe
mov
push
add
xchg
or
(bad)
sbb
cmp
fisubr
in
dec
je
div
xor
jge
sub
pop
jl
repnz
add
jmp
(bad)
jge
cmp
pop
jl
repnz
add
jmp
inc
jge
push
sub
adc
dec
jbe
and
scas
es
out
push
sbb
jbe
sub
in
dec
mov
jne
rol
movs
push
push
pop
add
push
add
xchg
(bad)
or
(bad)
sbb
or
imul
xor
mov
push
les
int
mov
(bad)
out
and
jle
pop
test
int
sti
add
and
ins
stos
pop
inc
stos
int
sti
inc
cmps
fs
ret
push
add
sub
mul
lock
inc
add
fs
in
pop
repnz
add
movs
mov
and
pop
jnp
jbe
and
dec
(bad)
sbb
cmp
jb
in
mov
loopne
push
push
scas
es
out
aam
repnz
and
scas
data16
out
push
sbb
sti
sbb
loopne
push
push
scas
push
mov
jmp
xor
int
sti
inc
cmps
fs
(bad)
out
and
imul
sub
xor
mov
dec
and
sub
stos
push
shl
test
shl
xchg
or
(bad)
sbb
cmp
in
ss
je
div
xor
jge
sub
pop
jl
repnz
add
jmp
(bad)
jge
cmp
pop
jl
repnz
add
jmp
inc
jge
push
sub
adc
dec
jbe
and
scas
es
out
push
sbb
jbe
sub
in
dec
mov
jne
rol
movs
push
sti
sbb
pop
add
push
add
xchg
(bad)
or
(bad)
sbb
or
imul
xor
mov
push
les
int
jmp
cmps
fs
(bad)
out
and
jle
pop
test
int
sti
add
and
ins
stos
pop
inc
stos
int
sti
inc
cmps
fs
ret
push
add
sub
mul
lock
inc
add
fs
in
pop
repnz
add
outs
bound
push
or
jmp
add
xchg
or
(bad)
sbb
cmp
jne
aam
mov
loopne
push
push
scas
es
out
aam
repnz
and
scas
data16
out
push
sbb
sti
sbb
loopne
push
push
scas
push
mov
jmp
xor
int
sti
inc
cmps
fs
(bad)
out
and
imul
sub
xor
mov
dec
and
sub
sub
and
movs
mov
test
jnp
jbe
and
push
pop
and
fistp
ins
dec
push
jnp
retf
mov
xor
jmp
xchg
out
movs
mov
sub
jbe
je
jb
and
push
aas
xor
imul
xor
push
pop
jmp
add
(bad)
or
push
paddsw
fcomip
mov
push
add
(bad)
or
push
punpckldq
scas
add
mov
inc
pop
jmp
add
(bad)
or
jmp
push
jge
push
sub
adc
and
scas
data16
out
aam
jb
sti
sbb
loopne
push
push
scas
push
mov
jmp
xor
int
sti
inc
cmps
fs
ret
push
add
fs
in
pop
jb
out
or
jmp
or
push
pop
and
fistp
ins
dec
push
jnp
dec
loopne
aaa
push
scas
es
out
aam
repnz
and
scas
es
out
aam
jb
sti
cmp
loopne
push
push
scas
push
mov
jmp
xor
int
sti
inc
cmps
fs
(bad)
out
and
imul
sub
xor
mov
dec
and
sub
stos
out
shl
jnp
jbe
and
push
pop
and
fistp
ins
dec
push
jnp
dec
loopne
aaa
push
scas
push
je
sub
xor
int
sti
add
and
pusha
stos
pop
les
cmps
fs
(bad)
out
and
jle
pop
test
cmps
fs
(bad)
out
and
jl
pop
fs
xor
mov
aas
jl
stc
movs
mov
xor
dec
bound
pop
jmp
jno
xchg
(bad)
or
(bad)
sbb
or
or
xor
jge
sub
pop
jl
repnz
add
jmp
(bad)
jge
sbb
pop
jl
repnz
add
jmp
inc
jge
sub
pop
jl
repnz
add
jmp
push
jge
cmp
inc
jb
push
(bad)
(bad)
out
scas
add
pushf
push
inc
sub
fidiv
dec
inc
stos
mul
sbb
add
and
ja
pop
and
fistp
ins
dec
push
jnp
retf
mov
xor
jmp
xchg
out
movs
mov
das
push
cmp
iret
movs
add
mov
push
and
movs
add
push
and
jbe
jnp
js
and
sub
lock
adc
dec
xor
jnp
jge
and
ja
and
jmp
push
xor
jnp
jb
and
ja
and
loopne
addr16
scas
push
je
sub
xor
int
sti
add
and
pusha
stos
pop
les
cmps
fs
ret
push
add
sub
push
jl
adc
push
(bad)
(bad)
out
scas
add
pushf
xor
sub
fbstp
dec
inc
stos
lahf
push
shl
stos
stos
shl
xchg
or
(bad)
sbb
cmp
add
and
jle
pop
test
int
sti
add
and
dec
stos
pop
test
cmps
fs
ret
push
add
sub
mul
lock
inc
add
fs
in
pop
repnz
add
outs
add
aam
cmp
stos
sbb
mov
push
add
xchg
or
(bad)
sbb
cmp
add
pusha
push
add
sti
idiv
and
mov
pusha
inc
add
sub
out
add
mov
inc
add
sub
in
add
mov
inc
add
fs
in
pop
jb
out
or
jmp
or
push
pop
and
fistp
ins
dec
push
jnp
dec
loopne
aaa
push
scas
es
out
aam
repnz
and
scas
es
out
aam
jb
sti
cmp
loopne
push
push
scas
inc
mov
out
push
sbb
jbe
and
scas
es
out
push
sbb
jbe
sub
in
dec
mov
addr16
and
add
mov
or
jb
stos
or
mov
push
add
xchg
or
(bad)
sbb
cmp
cmc
mov
push
icebp
les
ins
aaa
push
xchg
(bad)
jmp
or
push
pop
repnz
movs
add
mov
push
and
movs
add
push
and
jbe
jnp
js
and
sub
lock
adc
dec
xor
jnp
jge
and
ja
and
jmp
push
xor
jnp
jb
and
ja
and
loopne
addr16
scas
push
je
sub
xor
int
sti
add
and
pusha
stos
pop
les
cmps
fs
ret
push
add
sub
push
jl
adc
push
(bad)
(bad)
out
scas
add
pushf
xor
sub
fbstp
dec
inc
stos
lahf
push
shl
stos
stos
shl
xchg
or
(bad)
sbb
cmp
add
and
jle
pop
test
int
sti
add
and
dec
stos
pop
test
cmps
fs
ret
push
add
sub
mul
lock
inc
add
fs
in
pop
repnz
add
outs
add
aam
cmp
stos
sbb
mov
push
add
xchg
or
(bad)
sbb
cmp
cmc
mov
push
icebp
clc
and
lods
mov
xchg
and
movs
add
push
and
jbe
jnp
js
and
sub
lock
adc
dec
xor
jnp
jge
and
ja
and
jmp
push
xor
jnp
jb
and
ja
and
loopne
addr16
scas
push
je
sub
xor
int
sti
add
and
pusha
stos
pop
les
cmps
fs
ret
push
add
sub
push
jl
adc
push
(bad)
(bad)
out
scas
add
pushf
xor
sub
fbstp
dec
inc
stos
lahf
push
shl
stos
stos
shl
xchg
or
(bad)
sbb
cmp
cmc
mov
push
jno
xor
imul
xor
push
pop
jmp
add
(bad)
or
push
paddsw
fcomip
mov
push
add
(bad)
or
push
punpckldq
scas
add
mov
inc
pop
jmp
add
(bad)
or
jmp
push
jge
sub
pop
jl
repnz
add
jmp
(bad)
jge
sbb
pop
jl
repnz
add
jmp
inc
jge
push
sub
adc
dec
jbe
and
scas
es
out
push
sbb
jbe
sub
in
dec
mov
jne
rol
movs
push
sti
icebp
outs
(bad)
aam
pop
add
push
add
xchg
(bad)
or
(bad)
sbb
or
or
ds
out
adc
repnz
sub
pop
je
xor
and
ins
aas
xor
rcr
imul
dec
xor
push
pop
jmp
add
(bad)
or
push
paddsw
fcomip
mov
push
add
(bad)
or
push
punpckldq
scas
add
mov
inc
pop
jmp
add
(bad)
or
jmp
push
jge
push
sub
adc
and
scas
es
out
aam
jb
sti
cmp
loopne
push
push
scas
push
mov
jmp
xor
int
sti
inc
cmps
fs
ret
push
add
fs
in
pop
repnz
add
movs
mov
in
pop
jnp
jbe
and
dec
(bad)
sbb
cmp
neg
jl
shl
xor
jge
sbb
pop
jl
repnz
add
jmp
inc
jge
push
sub
adc
dec
jbe
and
scas
push
mov
imul
sub
xor
mov
dec
and
sub
stos
outs
and
push
jmp
cmps
cmp
stos
retf
shl
xchg
or
(bad)
sbb
cmp
add
and
jge
pop
movs
sub
stos
sti
add
and
dec
stos
pop
test
cmps
fs
ret
push
add
sub
sbb
add
in
push
(bad)
(bad)
out
scas
add
ds
je
push
mov
sub
loopne
pop
ja
pop
and
fistp
ins
dec
push
jnp
dec
loopne
aaa
push
scas
push
je
sub
xor
int
sti
add
and
dec
stos
pop
test
cmps
fs
ret
push
add
sub
sbb
in
push
(bad)
(bad)
out
scas
add
ds
je
and
aam
pop
add
push
add
xchg
(bad)
or
(bad)
sbb
or
or
ds
loopne
addr16
scas
es
sub
sub
stos
sti
add
and
dec
stos
pop
test
cmps
fs
(bad)
out
and
imul
add
int
sti
inc
cmps
fs
(bad)
out
and
push
movs
cmp
mov
arpl
cmp
adc
jb
sbb
cmp
cmp
and
jbe
jnp
js
and
sub
repz
movs
sub
sbb
jle
and
fisub
and
fbld
push
xor
jnp
je
and
sahf
and
loopne
addr16
scas
es
sub
sub
stos
sti
add
pusha
push
add
push
dec
sub
mul
lock
inc
add
sub
cmc
and
mov
and
scas
(bad)
popa
fs
in
pop
repnz
add
movs
mov
mov
pop
jnp
jbe
and
dec
(bad)
sbb
cmp
jbe
jl
mov
push
inc
or
xor
jge
xor
inc
repnz
add
jmp
inc
jge
cmp
inc
repnz
add
jmp
push
jge
ds
pop
jl
jb
push
(bad)
(bad)
out
scas
add
cmp
adc
movs
mov
add
push
add
xchg
(bad)
or
(bad)
sbb
or
or
xor
jge
xor
inc
repnz
add
jmp
(bad)
jge
cmp
pop
jl
repnz
add
jmp
inc
jge
cmp
inc
repnz
add
jmp
push
jge
ds
pop
jl
jb
push
(bad)
(bad)
out
scas
add
cmp
xor
hlt
mov
add
push
add
xchg
(bad)
or
(bad)
sbb
or
or
xor
jge
cmp
pop
jl
repnz
add
jmp
(bad)
jge
pop
sub
pop
jl
repnz
add
jmp
inc
jge
cmp
inc
repnz
add
jmp
push
jge
ds
pop
jl
jb
push
(bad)
(bad)
out
scas
add
cmp
adc
in
pop
add
push
add
xchg
(bad)
or
(bad)
sbb
or
or
xor
jge
pop
sub
pop
jl
repnz
add
jmp
(bad)
jge
or
pop
jl
repnz
add
jmp
inc
jge
cmp
inc
repnz
add
jmp
push
jge
ds
pop
jl
jb
push
(bad)
(bad)
out
scas
add
cmp
and
mov
pop
add
push
add
xchg
(bad)
or
(bad)
sbb
or
or
xor
jge
or
pop
jl
repnz
add
jmp
(bad)
jge
push
sub
pop
jl
repnz
add
jmp
inc
jge
cmp
inc
repnz
add
jmp
push
jge
ds
pop
jl
jb
push
(bad)
(bad)
out
scas
add
cmp
push
mov
mov
pop
add
push
add
xchg
(bad)
or
(bad)
sbb
or
dec
jmp
cmp
sbb
xor
scas
push
je
out
push
push
repnz
and
scas
es
out
aam
jb
sti
cmp
loopne
push
push
scas
es
out
push
sbb
jbe
and
scas
data16
out
aam
repnz
sbb
jmp
pop
jns
and
mov
jbe
rol
call
loopne
inc
ja
pop
and
fistp
ins
dec
push
jnp
retf
mov
xor
jmp
xchg
pop
je
jb
and
jg
push
and
fild
pop
jl
lock
inc
or
adc
jge
push
sub
adc
dec
ss
push
push
scas
es
out
push
sbb
jbe
and
scas
data16
out
aam
repnz
sbb
lock
adc
dec
mov
addr16
jge
sbb
or
dec
ss
retf
movs
and
mov
xchg
pop
jmp
add
jmp
add
adc
adc
xchg
loopne
or
jmp
add
adc
adc
xor
mov
out
push
add
jmp
add
add
xchg
mov
and
mov
mov
pop
jnp
jbe
and
dec
(bad)
sbb
cmp
ret
push
sbb
(bad)
fistp
loopne
pop
jmp
out
aam
jb
stos
or
cmps
fs
ret
push
add
xchg
jmp
(bad)
and
lock
inc
add
sub
mul
lock
inc
add
sub
cmc
and
mov
and
fisttp
jno
in
jle
sub
jge
movs
cli
inc
(bad)
sbb
cmp
jmp
push
xchg
pop
jmp
add
jmp
add
adc
adc
xchg
loopne
or
jmp
add
adc
adc
xor
mov
out
push
add
jmp
add
add
xchg
mov
and
mov
aam
pop
jnp
jbe
and
dec
(bad)
sbb
cmp
ret
adc
push
(bad)
fistp
loopne
pop
jmp
out
push
sub
stos
or
cmps
fs
(bad)
out
and
arpl
pop
mov
int
sti
add
and
outs
stos
pop
and
int
sti
inc
cmps
fs
(bad)
out
and
imul
add
int
sti
inc
cmps
fs
(bad)
out
and
push
adc
idiv
pusha
fimul
or
xchg
add
sbb
cmp
sub
movs
cmp
sub
sbb
js
and
sub
lock
adc
dec
xor
jnp
jge
and
ja
and
jmp
push
xor
jnp
jb
and
ja
and
sub
sub
shl
scas
cmp
stos
mov
add
xchg
or
(bad)
sbb
cmp
cmc
mov
push
icebp
repz
cmp
pop
xchg
inc
jmp
(bad)
sub
and
jnp
jb
and
push
scas
push
je
out
push
sbb
adc
and
scas
push
je
out
aam
jb
sti
sub
loopne
push
push
scas
es
out
push
sbb
jbe
and
scas
data16
out
aam
repnz
sbb
lock
adc
dec
mov
cmp
jge
sbb
or
dec
ss
retf
movs
and
mov
xchg
pop
jmp
add
jmp
add
adc
adc
xchg
loopne
or
jmp
add
adc
adc
xor
mov
out
push
add
jmp
add
add
xchg
mov
and
mov
xchg
sub
mov
add
dec
(bad)
sbb
cmp
ret
xchg
sub
fistp
loopne
pop
jmp
out
aam
jb
stos
or
cmps
fs
(bad)
out
and
pop
sub
sub
stos
sti
add
and
inc
stos
pop
je
int
sti
inc
cmps
fs
(bad)
out
and
imul
add
int
sti
inc
cmps
fs
(bad)
out
and
push
adc
idiv
pusha
fimul
or
adc
jb
sbb
cmp
or
ds
movs
and
push
xchg
pop
jmp
add
jmp
add
adc
adc
xchg
loopne
or
jmp
add
adc
adc
xor
mov
out
push
add
jmp
add
add
xchg
mov
and
mov
inc
sub
mov
add
dec
(bad)
sbb
cmp
ret
mov
push
mov
(bad)
add
fistp
ins
dec
(bad)
sbb
cmp
dec
imul
inc
(bad)
sbb
or
imul
aas
dec
(bad)
sbb
cmp
test
jmp
add
(bad)
or
(bad)
sbb
or
mov
and
(bad)
sbb
cmp
retf
and
xor
(bad)
sbb
cmp
dec
pop
mov
sbb
sbb
cmp
cs
lea
pop
xor
je
jno
and
neg
daa
mov
stos
sbb
test
xor
iret
xchg
(bad)
outs
test
pop
test
pop
xor
idiv
test
pop
test
frstor
xchg
and
cmp
(bad)
hlt
in
mov
mov
inc
shr
aaa
test
dec
cdq
aaa
jecxz
inc
lahf
adc
mov
cmp
jg
pop
push
jae
pop
(bad)
pop
je
mov
jg
pop
test
pop
test
icebp
fnstsw
(bad)
fs
pushf
push
or
mov
jg
pop
test
pop
test
pop
cmp
icebp
cmp
retf
mov
jg
pop
test
pop
cld
inc
icebp
cmp
into
mov
cmp
xchg
inc
les
jg
push
test
rcr
lock
js
aam
stc
rcr
jg
pop
test
fucom
jne
pop
mov
jg
pop
test
pop
das
jp
pop
in
adc
out
(bad)
sub
push
clc
xchg
inc
cmp
pop
and
jg
pop
test
pop
add
cmp
or
inc
pop
test
pop
clc
jbe
or
jg
pop
test
pop
test
pop
aam
not
sub
lock
(bad)
adc
jg
fnsave
icebp
call
test
pop
test
pop
test
pop
packsswb
cmp
jg
pusha
test
pop
test
pop
test
pop
hlt
scas
hlt
mov
test
pop
test
pop
add
mov
(bad)
pop
test
pop
test
pop
in
add
xchg
push
pop
pop
rol
adc
test
pop
rol
icebp
sbb
test
pop
test
pop
add
idiv
mov
xlat
ins
ss
enter
xchg
sbb
jg
pop
xor
fld
lock
jg
pop
test
fucom
jne
pop
mov
jg
pop
das
jp
pop
push
mov
xchg
pop
test
pop
push
mov
pop
pop
test
pop
test
pop
push
inc
icebp
pop
mov
clc
arpl
loope
fs
mov
pop
xchg
jg
test
pop
test
fisttp
je
mov
dec
jl
xor
fs
mov
inc
pop
test
pop
mov
icebp
pop
mov
inc
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
les
mov
out
test
(bad)
cmp
cmp
in
pusha
dec
xchg
jo
popa
fsubr
sbb
jne
pop
pop
hlt
cmp
mov
jnp
fstp
add
jnp
(bad)
je
mov
dec
or
test
(bad)
mov
jg
out
inc
xchg
je
adc
lock
std
inc
or
jns
adc
jnp
inc
push
ins
mov
stos
xlat
mov
xlat
cmp
fwait
in
mov
jb
push
mov
test
iret
cmps
je
push
les
(bad)
in
mov
stc
inc
add
mov
sbb
inc
xchg
mov
sbb
test
gs
lds
mov
(bad)
test
adc
jns
inc
mov
aaa
(bad)
bound
pop
mov
stos
sub
push
mov
retf
dec
cmp
cli
bound
cmp
add
xor
idiv
xchg
xlat
ss
pop
sub
xlat
mov
mov
cwde
fcomip
arpl
add
pop
mov
xor
hlt
sbb
fwait
ins
fidiv
xchg
inc
jmp
xor
(bad)
int3
inc
enter
sbb
push
pandn
jns
inc
mov
xchg
pop
test
ins
jnp
pop
or
retf
jns
fwait
pop
dec
push
sub
xchg
sub
xchg
imul
xchg
push
dec
inc
(bad)
sub
pop
inc
jp
xchg
pop
or
sbb
xchg
and
jne
sub
xchg
push
dec
dec
(bad)
sub
xchg
sub
pop
inc
jle
aam
inc
aaa
xchg
mov
dec
xchg
sub
xchg
sub
xchg
or
xchg
pop
retf
sub
xchg
sub
xchg
sub
pop
and
dec
stos
sub
pop
jmp
inc
arpl
push
cli
dec
cmps
sub
sahf
sub
pop
inc
jle
aad
inc
ja
sub
xchg
(bad)
(bad)
and
scas
sub
xchg
sub
xchg
or
dec
xchg
pop
dec
dec
cld
sub
xchg
sub
xchg
sub
xchg
or
inc
pop
sahf
sub
xchg
sub
xchg
cdq
add
and
inc
stos
sub
xchg
sub
xchg
pop
fs
(bad)
and
scas
sub
xchg
push
add
repnz
fld
mov
add
fs
inc
jle
cmps
inc
jge
std
xchg
and
sub
lds
inc
jle
das
call
imul
push
pop
test
pop
test
pop
xor
pop
mov
mov
cmps
pop
test
fnstsw
dec
(bad)
xchg
cld
and
sub
inc
adc
adc
arpl
addr16
pop
cmp
and
jbe
lds
daa
pop
xchg
cmp
push
les
out
loopne
pop
(bad)
mov
adc
mov
jmp
(bad)
fwait
addr16
jecxz
push
retf
push
add
pop
(bad)
repnz
je
or
mov
cs
and
je
xchg
and
call
fisttp
ret
repz
and
not
jecxz
sbb
loop
call
or
pop
cmp
ret
add
test
(bad)
(bad)
jns
mov
jp
stos
or
jae
mov
test
mov
pop
pop
sub
add
sub
mov
sub
sbb
fwait
ins
into
aaa
xchg
inc
jns
sbb
xor
sti
ja
xchg
aam
cmps
outs
je
add
cmp
and
cwde
fs
(bad)
sbb
es
mov
out
sbb
mov
mov
addr16
inc
retf
add
ss
mov
push
push
xor
mov
sti
aad
out
out
fistp
mov
pop
inc
out
loope
shr
and
out
mov
pop
sub
jns
jge
cdq
cmp
sub
inc
jae
mov
ins
inc
out
mov
pop
inc
out
mov
pop
rol
inc
out
mov
pop
add
mov
pop
inc
out
push
jge
mov
pop
add
mov
ins
inc
out
rcr
shr
pop
sub
mov
pop
ror
pop
xor
mov
ins
inc
fsub
pop
inc
out
push
jge
mov
pop
inc
(bad)
cdq
pop
addr16
mov
pop
inc
out
rcr
shr
popf
inc
out
mov
pop
inc
enter
out
mov
ins
inc
out
mov
pop
add
mov
pop
inc
scas
lds
test
fs
retf
test
add
(bad)
retf
test
hlt
addr16
jmp
push
cmps
xchg
std
inc
leave
cmp
cmp
retf
loopne
jns
push
test
pop
test
pop
test
fnsave
shr
xchg
rol
in
stc
int3
push
test
pop
test
pop
test
pop
addr16
addr16
xor
cmp
(bad)
loop
stc
bound
jg
pop
test
pop
test
pop
in
adc
sbb
cld
sahf
into
adc
test
mov
(bad)
(bad)
out
xchg
mov
inc
push
fistp
(bad)
(bad)
mov
jb
xor
fsub
rcr
mov
sti
je
and
push
mov
aaa
xchg
in
push
push
popf
inc
fst
jmp
idiv
ds
jns
mov
pop
ins
test
mov
enter
sbb
fcmovb
add
add
enter
pop
outs
mov
add
mov
mov
fs
ret
xchg
sub
mov
ins
push
jo
das
jb
mov
mov
adc
or
invd
frstor
sbb
jle
(bad)
pop
add
pop
xchg
repz
sbb
fadd
sub
pusha
fidivr
xchg
outs
(bad)
outs
cwde
mov
mov
jae
mov
adc
dec
add
add
out
int3
dec
mov
push
fcomi
data16
mov
xchg
or
mov
xchg
jle
out
out
ins
fcmovnb
sbb
or
and
sbb
xor
iret
loop
ja
add
pop
fwait
push
mov
inc
lahf
adc
sub
add
xor
sub
lock
dec
push
outs
xchg
repz
pop
mov
mov
and
std
imul
std
sbb
fwait
cmps
and
les
push
or
sahf
sub
cmps
and
les
sbb
les
dec
leave
mov
(bad)
daa
xor
dec
mov
aaa
jge
mov
mov
cmps
and
les
test
scas
cmps
and
les
cwde
pop
(bad)
scas
jle
mov
cmps
and
cmps
and
les
mov
les
mov
clc
les
retf
or
fwait
or
xor
cmps
mov
enter
pop
sti
push
sbb
jge
sbb
jmp
sbb
popa
out
int3
cmps
mov
or
cmps
and
les
shl
and
les
retf
inc
pop
gs
cmp
das
dec
sbb
mov
add
in
push
ds
std
call
mov
mov
or
or
cwde
add
call
cmp
sbb
xchg
and
les
inc
or
add
cmps
and
les
and
les
cwde
inc
stc
scas
and
cmps
and
(bad)
out
or
add
cmps
and
les
push
or
sahf
test
stc
cmps
and
les
add
cmps
and
das
ins
or
cmps
and
lock
or
and
and
or
push
popa
or
scas
and
cmps
and
les
inc
or
add
cmps
and
les
popa
or
scas
and
cmps
and
(bad)
out
or
add
and
les
inc
or
add
and
les
and
les
or
scas
and
cmps
and
les
or
scas
and
cmps
and
les
or
cmps
adc
les
and
les
xor
movs
sahf
dec
add
das
ss
scas
and
les
push
or
cmps
pushf
retf
cmps
and
les
sbb
mov
pop
bound
movs
mov
inc
data16
scas
and
les
push
or
cmps
fwait
retf
cmps
and
les
sbb
(bad)
outs
dec
in
sahf
sbb
cmc
pop
arpl
sahf
cwde
inc
stc
scas
and
cmps
and
les
bound
movs
mov
pop
data16
sub
std
cmps
and
les
xor
inc
lock
aaa
and
or
out
or
add
cmps
and
les
inc
or
retf
rcr
and
les
and
inc
mov
or
std
scas
mov
cmp
cmps
and
les
push
or
ds
cmps
mov
enter
or
ret
test
sub
std
cmps
and
les
cwde
pandn
and
les
dec
or
cmps
and
les
push
cmps
mov
or
pop
jbe
les
and
les
add
mov
and
les
push
or
sahf
push
into
int3
cmps
and
cmps
and
les
adc
add
daa
cmp
cmps
and
les
cwde
or
cmps
and
les
push
or
fisubr
call
push
popa
dec
test
xor
scas
and
std
cmps
and
inc
fisubr
rcr
push
popa
dec
push
cmp
movs
mov
outs
jmp
and
les
and
cmc
cmps
and
lds
push
or
push
add
cmps
and
les
and
hlt
push
add
cmps
cmp
cmps
and
les
inc
or
lahf
sbb
inc
shr
mov
and
cmps
and
(bad)
test
push
add
call
(bad)
int
gs
call
aad
retf
sahf
pop
fisttp
add
sbb
cmp
call
cmp
shl
inc
cmp
inc
pushf
loop
push
dec
fs
enter
enter
cmp
jg
fld
icebp
outs
test
push
test
pop
test
fnstsw
vunpcklps
mov
aaa
pop
test
fnstsw
icebp
cmp
xchg
cli
loopne
inc
lahf
inc
mov
inc
enter
inc
(bad)
fsub
pushf
push
test
pop
jbe
icebp
pop
mov
cli
pusha
test
pop
test
pop
sbb
icebp
bound
push
loopne
jns
push
test
pop
test
pop
inc
adc
addr16
inc
sbb
cmp
bound
into
fs
sbb
(bad)
fild
add
jg
pop
test
mov
jg
fnstsw
vunpcklps
mov
ja
test
(bad)
aas
icebp
cmp
xchg
cli
loopne
inc
lahf
inc
mov
enterw
dec
(bad)
fsub
pushf
push
test
pop
test
fucomp
inc
repnz
test
pop
sbb
icebp
(bad)
(bad)
aas
push
loopne
jns
push
test
pop
test
fnstsw
hlt
cmp
jmp
pusha
dec
xchg
jno
sbb
sub
inc
inc
add
ja
mov
jge
cld
lods
(bad)
mov
test
dec
je
stc
(bad)
hlt
mul
jae
jae
pop
int3
adc
pop
or
fisttp
ror
(bad)
in
dec
push
jle
adc
and
mov
(bad)
dec
fist
push
mov
mov
clc
pushf
pop
push
sbb
(bad)
xchg
repnz
stos
cmc
push
pop
jno
pop
in
xor
jnp
ins
pop
out
bound
fild
shl
in
out
sbb
add
hlt
into
mov
mov
retf
stos
aad
jns
fisub
pop
call
in
ret
(bad)
push
fmul
and
jle
sbb
add
and
mov
cdq
es
aam
int
sub
add
pusha
or
xchg
call
mov
jp
fcmove
retf
mov
clc
(bad)
bnd
push
lock
les
xchg
xchg
xor
aaa
sbb
ret
xor
dec
mov
push
jnp
fnstcw
test
mov
mov
jno
xchg
les
pop
les
or
sub
aaa
rcl
(bad)
xor
rcl
fild
jge
ins
sub
mov
xor
mov
ret
fcmovb
retf
jecxz
mov
leave
add
ret
fiadd
enter
push
and
sub
cmp
sbb
xchg
sbb
mov
enter
cmc
sbb
sub
mov
and
cmc
sbb
mov
xchg
pusha
pop
repnz
stos
shl
cmc
sbb
mov
adc
dec
lahf
daa
out
pop
cvtps2pd
(bad)
call
cmc
sbb
mov
int3
xchg
in
xor
aad
cmc
sbb
cmp
add
sub
mov
and
cmc
sbb
mov
lahf
daa
in
inc
dec
sub
fbstp
adc
jno
rcr
lock
push
lahf
daa
mov
pop
sbb
xchg
push
mov
inc
dec
xchg
mov
inc
pop
in
jae
fs
rcr
lods
or
mov
call
and
jp
push
jns
(bad)
xchg
retf
pop
push
pop
test
popa
lods
jle
in
jns
or
ja
test
jns
cmp
(bad)
test
ds
inc
push
dec
mov
mov
(bad)
call
(bad)
fwait
mov
(bad)
xchg
push
fs
repz
mov
retf
ja
mov
mov
pushf
(bad)
cs
jae
or
cmps
jl
xabort
add
sbb
int3
iret
cmps
xor
iret
fsub
xabort
xchg
js
les
dec
leave
out
cmps
sbb
fadd
mov
jmp
cmc
(bad)
mov
mov
ja
mov
or
js
bnd
jl
cdq
not
or
adc
iret
and
or
shl
jbe
jl
jmp
(bad)
pop
and
je
add
mov
loopne
jae
mov
out
cmps
push
stc
mov
inc
mov
inc
retf
add
xor
pop
or
clc
test
or
sbb
aam
xchg
dec
fbstp
imul
out
(bad)
mov
lods
and
cmp
push
mov
sti
mov
dec
aaa
or
dec
fsub
push
pop
mov
clc
rol
cmp
adc
(bad)
jo
mov
sar
sub
cmp
and
sar
and
pop
push
lea
jnp
adc
js
inc
cwde
pop
mov
mov
movs
add
mov
mov
cli
mov
sbb
cmp
sbb
cmp
and
clc
xor
sbb
cmp
and
clc
add
or
inc
sbb
cmp
sar
and
js
inc
sbb
jo
pushf
xchg
jecxz
sub
sar
and
or
adc
add
pop
jg
xchg
out
add
mov
dec
sar
and
into
push
daa
ins
clc
add
sbb
fbstp
leave
addr16
enter
sar
and
loope
lea
cld
mov
dec
sar
and
xchg
add
sbb
cmp
movs
jnp
mov
pop
sbb
cmp
and
xchg
jbe
and
sar
and
xchg
lea
or
cmps
mov
imul
cmp
and
jg
add
pop
test
cmp
and
cmp
add
mov
sar
and
and
lea
dec
xor
cs
sub
or
dec
cs
inc
or
add
stos
add
jne
add
sar
sub
jns
movs
add
sbb
add
sbb
cmp
sar
test
in
sar
and
sbb
clc
add
sbb
cmp
sar
and
sar
and
mov
jo
into
out
dec
pop
call
sub
into
push
xchg
dec
call
sub
into
push
xchg
fadd
(bad)
mov
inc
dec
jecxz
sbb
adc
adc
jnp
dec
call
add
pusha
cmp
js
cmps
cwde
pop
mov
outs
repz
push
jmp
retf
mov
inc
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
(bad)
popa
mov
push
int3
les
inc
enter
enter
enter
int
jp
jbe
or
xchg
jg
pop
test
(bad)
icebp
cmp
ss
loopne
(bad)
cwde
cmp
push
cwde
fs
inc
sub
push
sub
or
fs
fcom
(bad)
(bad)
aas
(bad)
pop
into
inc
inc
dec
mov
xlat
mov
sbb
mov
mov
xlat
fbld
arpl
mov
cmp
xlat
int3
arpl
rcr
cmp
repz
clc
fdiv
xchg
pop
mov
test
int3
cmps
aam
pop
mov
inc
outs
pop
cmp
iret
cwde
push
xchg
mov
sub
sub
lock
mov
aaa
outs
fbstp
pop
sub
or
and
movs
aaa
push
cs
and
je
jno
mov
xor
test
jae
test
int3
inc
cmp
shl
stc
and
pop
fstp
ins
mov
mov
pop
pop
jge
or
xchg
retf
ja
addr16
(bad)
lds
call
xchg
enter
outs
mov
hlt
inc
push
in
popa
push
sti
add
pop
retf
jge
daa
dec
imul
adc
iret
xlat
gs
or
int
cmps
movs
and
sbb
fisubr
xchg
inc
imul
cli
(bad)
leave
je
ret
hlt
mov
sub
popf
pop
adc
and
add
pop
jmp
and
push
pop
stos
jl
fsubr
and
pop
enter
xchg
inc
xor
es
scas
int3
dec
xchg
inc
jmp
xchg
add
(bad)
mov
mov
sub
pop
clc
or
dec
scas
ins
int
nop
sub
fild
out
and
mov
xchg
stos
mov
les
jns
in
dec
sbb
push
icebp
(bad)
adc
push
cdq
push
sbb
cld
mov
int
ins
stc
(bad)
(bad)
out
mov
mov
push
pop
pop
jge
pop
mov
sbb
pop
fs
pop
enter
inc
jnp
dec
hlt
jnp
fldcw
lds
aas
xchg
in
cmp
adc
mov
inc
call
retf
aam
pop
test
or
jp
dec
jns
push
add
pop
sbb
dec
dec
and
pop
aam
ins
enter
xchg
push
mov
aam
aam
pop
aam
jbe
cld
fdivr
repz
ja
imul
xor
icebp
shl
mov
dec
outs
jnp
pop
pop
in
out
mov
into
xchg
stos
test
addr16
xchg
inc
mov
xchg
sbb
jns
mov
iret
es
pop
push
mov
mov
js
les
mov
sub
inc
mov
pop
dec
loopne
ja
mov
lea
jecxz
dec
mov
inc
pop
movs
lds
push
sub
je
or
mov
xchg
pop
out
sar
aam
stos
ret
cs
in
xlat
push
out
mov
mov
xlat
sbb
jo
inc
jns
sbb
pop
xor
jle
aam
inc
xlat
pop
shl
pop
mov
jbe
or
pop
int3
xchg
adc
cmp
cmp
push
adc
or
loope
add
lods
sub
lods
sub
shr
in
stos
inc
mov
push
adc
rcl
outs
mov
add
rol
out
xchg
add
push
inc
in
inc
inc
cmp
movs
loopne
in
stos
mov
inc
xor
cdq
push
test
pop
test
icebp
fld
hlt
and
inc
pushf
inc
test
push
test
pop
test
pop
loopne
icebp
popf
inc
mov
aaa
pop
lds
icebp
pop
mov
jg
push
test
pop
test
pop
stos
push
icebp
ins
call
dec
test
and
clc
and
or
in
inc
enter
fmul
mov
ss
xchg
jbe
push
or
iret
popa
add
cmp
scas
addr16
push
sbb
dec
mov
inc
or
and
je
cs
(bad)
aam
pop
mov
retf
div
jmp
out
(bad)
leave
jge
addr16
mov
shl
mov
addr16
daa
push
and
fwait
daa
push
fild
dec
fs
push
fs
mov
xchg
pusha
fnstenv
mov
sub
mov
lahf
pop
cmps
inc
retf
add
xor
jns
adc
les
call
mov
cmps
pop
dec
les
enter
jbe
or
mov
and
push
fisttp
cli
ja
and
xchg
pop
sub
jl
push
jge
arpl
fst
cld
inc
mov
cmps
cmp
xchg
ins
(bad)
jns
mov
push
inc
popf
xor
cli
pop
scas
xchg
inc
jb
or
js
cmp
ret
call
int3
loopne
sub
lahf
dec
cmp
mov
add
add
mov
int3
add
inc
es
mov
jb
(bad)
call
xor
imul
mov
(bad)
xor
out
leave
mov
imul
(bad)
jb
test
mov
loopne
mov
mov
mov
push
(bad)
adc
imul
lock
(bad)
xor
push
fnstsw
push
push
(bad)
adc
push
pop
jno
sub
or
push
mov
xor
pusha
xor
dec
sbb
or
and
jg
pop
test
pop
xor
icebp
pop
and
clc
xor
push
cmp
rcl
dec
adc
test
sub
je
jmp
push
pop
pop
nop
xchg
outs
test
ins
sti
xor
cmp
outs
mov
jmp
jns
fwait
push
lock
dec
(bad)
mov
adc
lock
mov
aam
pop
aam
push
enter
je
pop
(bad)
jae
das
js
jp
data16
aaa
mov
push
cmp
(bad)
or
ret
rol
fst
jmp
cmp
adc
lods
lahf
bound
jnp
cs
in
sbb
les
lock
aam
dec
test
add
movs
call
ins
pop
mov
stos
ins
(bad)
push
adc
not
(bad)
ret
inc
cmp
pop
sbb
xor
push
sub
call
or
jg
xchg
retf
les
call
xchg
scas
(bad)
or
les
in
(bad)
popf
sub
mov
and
popf
fs
ret
verw
idiv
repz
jl
addr16
push
inc
ret
add
sbb
xchg
inc
jns
fwait
das
aas
xor
push
(bad)
push
sti
inc
mov
cmps
fbld
jb
adc
aaa
adc
adc
cmp
enter
(bad)
fwait
jb
aas
mov
and
movs
xchg
xchg
sbb
and
stos
push
int3
mov
sbb
imul
xchg
fstp
mov
cmc
(bad)
loope
cmc
aam
repnz
jmp
xchg
ret
mov
repnz
mov
repnz
jmp
lahf
(bad)
sti
out
cmps
scas
jnp
fdivr
sti
dec
lahf
stc
fild
pop
cli
pop
pop
lahf
imul
inc
cmc
hlt
aam
pop
fisttp
jnp
movs
lock
cmp
and
jg
pop
test
fucomp
mov
adc
mov
fs
sahf
ja
loopne
pushf
sbb
enter
icebp
pop
jns
icebp
cmp
jg
fst
stc
pop
test
pop
test
fld
outs
test
push
test
pop
adc
icebp
fucomp
scas
clc
adc
inc
repz
adc
inc
push
sbb
mov
push
js
mov
bound
stos
(bad)
sub
repnz
mov
mov
int3
je
mov
pop
outs
test
arpl
dec
push
das
mov
outs
clc
pop
adc
imul
mov
sbb
popa
sbb
mov
and
mov
mov
mov
or
test
jmp
mov
clc
lods
xchg
cwde
les
mov
addr16
ret
aam
inc
daa
out
div
aam
clc
ret
mov
pop
jae
inc
and
ret
sbb
(bad)
aam
jmp
xor
scas
pop
call
sub
pop
test
sub
(bad)
xor
sbb
call
dec
pop
fild
jp
add
pop
fwait
xchg
or
pandn
(bad)
iret
es
sbb
(bad)
outs
jl
mov
lahf
pop
inc
pop
aam
push
mov
dec
sub
xchg
cmp
lods
mov
popa
lock
nop
mov
mov
xor
jb
mov
or
inc
stos
push
jns
popa
fcomip
data16
enter
cmp
pop
cli
outs
cmp
mov
jne
ins
adc
mov
push
(bad)
push
mov
sti
and
pop
fwait
(bad)
jmp
pop
cld
and
inc
fwait
and
and
pop
fsub
pop
test
inc
ficomp
data16
in
xor
cmp
xchg
sub
adc
fcomip
cmc
sbb
dec
pushf
shl
lock
pushf
inc
pop
sti
jo
pushf
dec
mov
mov
repz
loop
or
push
movs
mov
(bad)
hlt
mov
inc
test
pop
add
jg
pop
test
pop
das
outs
(bad)
cmp
sub
mov
jg
pop
test
pop
lds
icebp
pop
mov
jg
push
test
pop
test
icebp
fnstsw
test
test
pop
test
pop
js
icebp
or
rcr
icebp
pop
test
icebp
pop
mov
jg
test
pop
test
pop
clc
inc
icebp
or
rcr
icebp
sbb
test
pop
test
pop
lds
icebp
pop
mov
jg
push
test
pop
mov
div
xor
jg
pop
test
pop
call
jg
pop
test
pop
lds
icebp
pop
call
inc
sbb
enter
icebp
pop
sub
icebp
cmp
pushf
pusha
test
pop
add
jg
push
test
pop
test
pop
call
jg
pop
test
pop
test
pop
in
ins
icebp
cmp
cwde
test
pop
test
pop
movs
push
icebp
fucomp
ret
mov
inc
xchg
push
or
or
in
dec
enter
sub
adc
sub
inc
jmp
int3
loope
lods
jle
in
pop
(bad)
push
repz
std
fst
jle
movs
shr
sub
mov
xchg
(bad)
inc
xor
pminsw
jnp
cmp
in
xchg
into
cld
aaa
cs
cmp
xchg
push
fld
fimul
div
ins
popa
cmp
mov
adc
jnp
sub
idiv
or
shr
stc
pop
adc
not
pusha
and
push
(bad)
mov
fiadd
cwde
lahf
push
and
(bad)
push
add
xchg
inc
cmp
lahf
cmps
popf
inc
fild
fs
iret
sar
fld
jo
fist
inc
sar
ja
push
sbb
shr
stc
mov
or
int
pusha
sbb
call
cli
cmps
fild
mov
xchg
das
loopne
(bad)
push
mov
out
rcr
arpl
mov
inc
retf
add
loop
adc
inc
jb
mov
and
iret
xlat
cmp
fbld
outs
jecxz
sub
lock
or
lock
or
aas
and
lock
add
xchg
aas
add
ss
shl
xchg
not
movs
out
test
adc
popa
mov
inc
into
sub
mov
in
xor
jg
pop
test
fnsave
xabort
stos
push
cwde
in
ret
fmul
adc
mov
or
fs
dec
enter
clc
pop
js
add
dec
and
ins
mov
retf
xor
pop
add
sar
xor
retf
add
addr16
or
mov
(bad)
pop
jl
inc
push
mov
jge
cli
inc
push
loop
std
mov
sub
aam
dec
push
mov
jbe
aam
jb
mov
ret
and
mov
or
pop
hlt
repz
pop
or
(bad)
imul
inc
cmp
fild
sub
je
inc
in
ret
je
fst
sbb
jns
dec
adc
xchg
inc
ret
pop
enter
retf
fild
in
arpl
push
sub
add
hlt
xchg
aam
clc
test
mov
jge
aam
pop
iret
test
push
ins
adc
retf
push
pop
add
or
dec
clc
out
push
dec
jge
or
js
(bad)
call
pop
sahf
mov
mov
pop
pop
repz
mov
jb
jmp
jbe
scas
adc
imul
fiadd
fwait
repnz
ss
dec
push
sub
lea
and
icebp
fsub
add
sub
out
adc
jle
cmp
scas
inc
std
adc
and
dec
pop
lods
das
sub
je
cmc
dec
je
test
xchg
neg
xlat
sahf
xor
je
clc
inc
je
cwde
inc
aam
cwde
inc
dec
pop
xchg
jnp
xchg
test
je
cwde
inc
add
cwde
ret
popf
sbb
test
retf
pop
mov
mov
imul
scas
dec
cli
mov
sti
jb
scas
add
das
pop
scas
dec
cmp
movs
lock
in
nop
xchg
shl
jg
push
test
pop
call
jg
pop
test
pop
test
pop
mov
sbb
jg
pop
add
ret
test
pop
test
pop
test
pop
fs
xor
out
ret
or
enter
cwde
cmp
xchg
cli
loopne
pop
lahf
je
push
cwde
cmps
adc
xchg
ds
sbb
cld
dec
(bad)
adc
test
push
mov
and
cmp
sbb
mov
dec
or
fucomi
dec
jmp
xchg
jecxz
(bad)
out
xchg
dec
dec
hlt
mov
add
retf
mov
es
mov
mov
cmps
in
pop
sbb
dec
mov
callw
cli
repz
div
jl
mov
xor
mov
(bad)
pop
(bad)
xor
aam
lahf
ret
inc
pop
popf
inc
or
(bad)
jecxz
mov
aaa
fiadd
and
cwde
(bad)
bound
pop
and
inc
push
push
cmp
cld
xor
fiadd
cdq
jbe
or
mov
pop
je
out
sar
or
xor
xor
dec
fcomip
popa
imul
inc
mov
(bad)
daa
shl
sti
(bad)
fidiv
scas
jbe
and
js
imul
fs
fiadd
mov
xchg
xchg
mov
inc
push
sub
cmp
int3
jmp
or
popa
les
test
jmp
dec
mov
mov
add
push
fwait
out
test
push
sub
jle
pop
loope
xlat
inc
xor
pop
fadd
fst
bound
add
or
sbb
sub
adc
jnp
jl
jb
pop
test
jnp
fiadd
add
cmp
ficom
jl
adc
fcomip
bound
adc
int
test
leave
sbb
mov
mov
les
add
test
pop
test
pop
loopne
icebp
adc
jbe
test
fucom
push
icebp
sbb
inc
xchg
loopne
loopne
pushf
adc
mov
mov
jg
pop
test
pop
test
icebp
pop
inc
adc
and
inc
pushf
test
push
test
pop
test
fucom
push
icebp
sbb
mov
and
pusha
dec
xchg
jno
push
mov
sbb
jl
add
leave
test
dec
sar
pop
in
pop
dec
dec
popa
mov
je
fsub
xor
sub
and
dec
lods
out
fisub
push
out
inc
leave
inc
fsub
fst
xor
fsubr
jmp
xchg
xor
pop
push
pushf
in
ret
sbb
enter
(bad)
and
xchg
(bad)
hlt
dec
sub
jge
in
jmp
adc
sbb
je
jns
jno
mov
mov
js
mov
mov
mov
mov
mov
bound
fist
int
jp
stc
jns
and
cmps
ror
fs
sbb
and
not
cmp
ins
pop
jg
pop
ins
aam
jns
mov
or
popf
loopne
xchg
cwde
cld
push
idiv
mov
fnstsw
rol
mul
ins
and
imul
pop
cmp
movs
(bad)
pop
daa
sbb
js
inc
mov
cmps
jl
(bad)
(bad)
mov
inc
(bad)
fs
sub
lods
in
inc
test
xor
adc
jmp
in
pop
sbb
mov
out
pop
cli
je
add
ret
pop
lods
mov
jbe
mov
aad
test
mov
cmc
loope
call
fsub
in
mov
jmp
jmp
and
rcl
sub
je
mov
shl
push
push
push
push
out
add
das
aam
leave
test
ficomp
and
inc
enter
pop
pop
test
fld
popa
inc
mov
retf
div
stc
popa
sar
sbb
call
ins
pop
cmp
xor
pusha
iret
mov
xchg
pop
test
ss
test
pop
test
pop
js
icebp
dec
test
pop
test
pop
mov
icebp
pop
xor
clc
sar
call
pop
test
frstor
icebp
loope
jmp
sbb
push
icebp
pop
js
(bad)
cmp
js
mov
test
pop
test
pop
add
fdivrp
fwait
inc
fld
sbb
adc
hlt
cld
scas
int
mov
mov
test
ret
or
les
cwde
int3
pop
mov
dec
rcr
clc
sti
sub
cmp
and
jns
ret
mov
adc
jno
add
fwait
repnz
jl
jmp
sbb
xchg
aaa
lahf
jb
sub
cmp
enter
shl
loopne
xor
dec
pop
je
and
enter
jl
retf
out
xor
lods
rcr
ja
aaa
fadd
call
dec
cld
xchg
iret
push
ins
sub
dec
dec
lds
or
mov
dec
loopne
sbb
jbe
cmp
lods
ret
inc
push
lods
sub
xor
or
mov
mov
and
je
rcl
jmp
std
jns
ins
and
stos
ja
push
fadd
enter
and
(bad)
daa
ret
sub
js
inc
stc
int
ins
and
jnp
lods
push
sbb
ja
test
or
xchg
xchg
aam
daa
iret
ins
jnp
sub
leave
xchg
dec
cld
and
xor
fnstenv
inc
mov
cmp
jnp
stc
aas
pop
pusha
stos
and
enter
xchg
jne
(bad)
xchg
push
fstp
cmps
add
ja
in
lods
repnz
lods
scas
in
in
lahf
in
rcr
dec
pop
stos
sub
or
add
or
rol
mov
repnz
popa
ds
mov
enter
cmps
ins
lock
mov
pop
sbb
inc
nop
push
push
or
jbe
test
pop
test
fst
(bad)
out
dec
test
pop
test
pop
add
jg
push
test
pop
das
sub
fstp
add
or
push
push
nop
push
sub
lock
mov
mov
pop
pop
test
pop
ret
xlat
mov
jle
adc
test
jbe
(bad)
aam
add
repz
pop
add
addr16
lods
out
shr
sbb
not
inc
(bad)
retf
dec
les
ins
iret
dec
add
addr16
and
dec
xchg
inc
sbb
cmp
ja
loop
retf
jae
push
fst
add
bnd
jl
mov
ja
out
js
or
mov
and
jbe
add
cwde
mov
xor
cld
push
cmp
add
pop
(bad)
or
mov
pusha
fisttp
jo
mov
ins
dec
frstor
mov
cmp
cmp
mov
jecxz
jns
fwait
mov
xor
pop
in
(bad)
sub
mov
xchg
inc
mov
inc
pop
add
xor
adc
retf
mov
(bad)
xlat
iret
aaa
push
pop
aam
push
inc
jmp
imul
xchg
shl
xchg
hlt
add
cmp
or
ja
add
xor
aaa
sbb
cmp
mov
jb
or
inc
test
stc
movs
add
cmp
lods
xchg
fldcw
or
mov
xchg
cmps
sti
push
(bad)
sbb
dec
jae
pop
int3
xor
adc
bound
adc
adc
sub
and
int
and
xchg
mul
loope
not
ret
in
xchg
ss
call
in
xchg
xchg
xchg
dec
out
(bad)
xor
adc
cmp
sahf
inc
dec
xchg
pushf
jp
and
or
inc
pop
test
pop
test
fnstsw
icebp
cmp
fstp
pusha
dec
push
xchg
push
inc
and
cs
jp
outs
push
xlat
cmp
out
adc
aad
shr
(bad)
jae
or
jbe
lods
jle
in
jge
adc
(bad)
xchg
jmp
(bad)
sbb
add
lahf
dec
bound
dec
xchg
push
adc
fidiv
mov
mov
pop
pop
dec
push
lock
inc
push
in
ret
js
pop
clc
in
mov
mov
mov
mov
prefetch
sub
mov
in
cmps
sub
aam
int3
mov
sub
imul
inc
sub
iret
data16
dec
test
pop
stc
les
jge
stos
inc
jns
pop
push
(bad)
(bad)
pop
mov
cdq
push
or
mov
shl
pop
pop
les
push
push
inc
or
sub
jns
adc
mov
aam
sbb
jl
out
repz
inc
jp
(bad)
push
jmp
mov
mov
(bad)
fiadd
add
xor
pop
push
test
dec
push
sub
cmp
call
fmul
ins
and
sbb
je
int
shr
stos
adc
sbb
lds
pop
xor
adc
sub
pop
rcr
add
adc
jmp
adc
ins
loope
out
out
sbb
mov
retf
test
pop
retf
pop
add
mov
add
add
adc
aas
add
or
ds
lods
aas
xor
in
inc
jmp
addr16
rcr
out
mov
lods
int
rol
fwait
in
and
inc
jns
sbb
jg
pop
test
pop
dec
push
lock
ins
lods
xabort
loopne
mov
(bad)
ret
ss
jg
pop
test
icebp
pop
mov
adc
daa
in
jno
hlt
(bad)
cmp
cli
loopne
push
lahf
aad
jns
sbb
adc
clc
pop
sub
mov
mov
or
add
inc
xchg
adc
test
push
in
fs
xchg
inc
cmp
fwait
mov
jecxz
xchg
fwait
mov
cmp
(bad)
adc
push
icebp
fld
icebp
aas
test
(bad)
pop
test
pop
mov
icebp
pop
in
popa
mov
mov
mov
jg
pop
test
pop
test
pop
jmp
div
mov
(bad)
popa
mov
clc
test
(bad)
icebp
cli
inc
mov
(bad)
popa
mov
test
frstor
inc
call
js
jmp
pop
test
fucom
inc
cld
xchg
adc
inc
pop
test
pop
test
fld
imul
(bad)
jae
fs
add
dec
frstor
xchg
jo
inc
enter
jge
sub
push
push
jnp
mov
test
push
and
mov
addr16
sti
lds
mov
xchg
xor
pop
(bad)
push
scas
daa
shr
arpl
dec
mov
adc
pop
mov
sub
lahf
xor
ins
jnp
pop
cmp
xlat
xchg
(bad)
aam
pop
mov
sub
xchg
pop
sub
jp
div
or
shr
adc
push
and
fdecstp
shl
xor
jge
fs
int3
mov
sub
xchg
dec
mov
fcmovnb
dec
push
in
xchg
cmp
lds
lods
(bad)
mov
fild
data16
rcr
scas
hlt
inc
mov
xor
jb
or
mov
xchg
sub
push
or
pop
jl
aam
jmp
dec
cmp
retf
add
cmp
mov
xchg
addr16
rcr
dec
stc
add
xchg
adc
inc
mov
inc
fild
jbe
push
ins
xor
clc
sub
aam
and
js
xor
sub
inc
xchg
xor
ja
addr16
popa
retf
mov
aaa
xlat
test
or
inc
add
lahf
inc
add
lahf
inc
add
pop
sub
scas
mov
dec
mov
mov
das
out
(bad)
cdq
cmp
mov
ds
or
out
(bad)
cdq
push
movs
jg
ds
movsx
shr
or
out
(bad)
cdq
mov
jne
dec
jg
and
push
out
(bad)
cdq
cmp
and
dec
lock
mov
or
dec
jmp
cdq
dec
or
push
mov
test
jns
out
and
jo
inc
add
inc
add
lahf
mov
or
inc
add
lahf
inc
add
lahf
inc
popa
xor
dec
stos
xor
jns
and
inc
add
xchg
inc
push
add
call
xchg
inc
add
lahf
dec
and
mov
add
(bad)
test
out
cmp
test
mov
test
ds
fdivr
jns
aam
inc
add
inc
add
lahf
inc
inc
xor
dec
add
inc
add
lahf
inc
sub
pop
adc
popa
lahf
inc
jno
lahf
push
clc
cmp
add
test
inc
add
lahf
inc
inc
xor
sbb
xor
jbe
call
cli
jge
clc
repz
shl
loope
add
lahf
inc
sub
lahf
jge
xor
out
mov
not
bound
cdq
and
mov
sbb
data16
popa
push
pop
fist
inc
add
lahf
inc
push
xor
jp
cmp
and
sbb
jae
dec
retf
jecxz
mov
mov
sub
jae
ins
fild
jge
pop
jae
mov
cmp
push
cmp
mov
add
cmp
jg
pop
test
fucom
sbb
pop
mov
push
in
sub
xchg
jbe
mov
mov
jg
(bad)
fsubr
repnz
leave
mov
push
stos
cmps
sete
sti
rcr
mov
or
jge
in
(bad)
enter
push
mov
jecxz
mov
cmp
ss
push
xlat
int3
arpl
or
das
in
fcomp
xor
xchg
jnp
sbb
into
add
pop
pop
and
jg
xor
scas
bound
fild
push
call
push
call
loop
inc
pop
add
dec
fbstp
sub
adc
cld
mov
mov
jecxz
enter
call
add
rol
repz
(bad)
imul
or
jnp
and
cmps
pop
sbb
stc
cdq
int
iret
data16
jge
fs
test
arpl
xlat
or
cmp
(bad)
data16
or
out
adc
xor
stos
pop
pushf
movs
pop
cmc
(bad)
dec
retf
stc
popf
sbb
sub
mov
lock
out
repz
repz
repnz
cli
adc
push
cld
inc
xlat
dec
add
dec
mov
xchg
imul
push
mov
dec
cmp
sbb
(bad)
lock
pop
sbb
fs
fsubr
stos
dec
push
shr
test
xor
scas
or
mov
scas
fadd
test
inc
stos
cmp
lods
call
imul
lods
dec
jno
lods
sbb
fisubr
ins
inc
cli
test
inc
stos
mov
scas
fsubr
lods
mov
outs
popa
lods
test
xchg
stos
scas
sbb
mov
cmp
mov
call
push
adc
scas
ins
inc
cli
test
inc
stos
clc
push
scas
test
add
aad
scas
xchg
push
sbb
test
xor
xchg
xor
jns
test
ins
mov
call
lods
shl
ror
xchg
push
fcom
sub
repz
les
bsr
mov
ins
xchg
mov
xchg
push
dec
xchg
xchg
push
js
cmps
ins
js
add
sbb
inc
(bad)
(bad)
call
rol
xchg
push
rcr
xchg
jne
xchg
test
jg
xchg
add
jbe
lods
cld
and
test
pop
stos
xchg
push
mov
xchg
test
jnp
clc
sub
sbb
loopne
cmp
scas
test
adc
xchg
push
js
xchg
jne
xchg
test
jg
out
rol
pcmpeqd
lods
cld
ss
test
pop
stos
xchg
push
inc
xchg
xchg
push
js
adc
js
idiv
sti
lods
jl
cld
test
pop
stos
xchg
push
inc
xchg
xchg
push
js
popf
inc
js
aas
mov
sub
ins
xchg
mov
xchg
push
dec
xchg
xchg
push
js
adc
js
xlat
cmp
add
jbe
lods
cld
jnp
test
pop
stos
xchg
push
rcl
mov
jbe
lods
cld
cmp
test
pop
stos
xchg
push
rcl
push
js
sub
js
pop
fs
xchg
push
push
xchg
xchg
push
js
repnz
ins
arpl
test
xor
xchg
push
js
xchg
push
js
pushf
les
clc
aam
pop
push
xchg
fst
push
cmp
pop
mov
cmp
sti
ins
adc
jl
cmp
data16
adc
aad
ins
mov
inc
mov
daa
ins
test
pop
test
fucom
sbb
pop
mov
push
in
sub
ret
repnz
call
and
or
in
inc
enter
js
push
daa
jnp
mov
and
out
addr16
retf
xor
inc
outs
mov
jbe
pop
test
sti
(bad)
hlt
and
fwait
pop
inc
(bad)
pop
adc
enter
stos
adc
adc
add
xor
test
pop
ins
mov
jno
sub
fistp
and
ins
pop
mov
adc
inc
into
or
or
enter
ret
(bad)
data16
sbb
sub
add
jno
pop
test
aam
jae
in
dec
dec
dec
and
arpl
inc
cmp
pop
or
add
mov
or
xor
jbe
sti
inc
mov
sbb
stc
ds
or
pop
pop
sbb
repnz
enter
sbb
int3
loope
cld
es
sti
adc
adc
fnstenv
mov
inc
js
and
jne
pop
sbb
ja
mov
idiv
ins
fiadd
inc
imul
repnz
in
fidiv
inc
jns
sbb
leave
xor
ret
add
sbb
push
pop
jg
add
push
sti
imul
pop
add
xchg
inc
jo
cwde
vpshufd
or
vpshufd
(bad)
pop
xchg
inc
mov
jo
lds
fwait
dec
or
sub
movs
adc
lds
cwde
lds
lock
mov
ror
shl
repz
pop
mov
mov
jo
cwde
inc
mov
jo
lds
dec
and
lds
jo
lds
jo
inc
cmp
xor
test
(bad)
mov
dec
mov
jo
lds
lock
mov
or
add
cwde
lds
jo
stos
test
sub
mov
sbb
mov
pop
movs
in
mov
out
sti
fstp
in
leave
sahf
push
mov
movs
cld
inc
pop
inc
cmp
ins
in
jae
fs
add
(bad)
add
xchg
dec
cmp
cld
into
int
mov
sahf
(bad)
movs
xchg
mov
mov
push
daa
cmp
jecxz
fsub
cmp
arpl
fdiv
pop
fisubr
data16
dec
rol
inc
adc
jae
adc
sahf
das
or
fistp
xchg
not
fwait
mov
(bad)
call
mov
inc
cmp
adc
mov
mov
rol
xchg
xchg
pop
cmp
data16
pop
lahf
jae
mov
xlat
or
pop
pop
push
xor
outs
or
adc
add
cld
fcmove
sbb
jp
inc
js
inc
inc
mov
push
addr16
ins
popa
xor
dec
stc
jge
cmps
ins
retf
les
dec
test
test
int
jnp
cmp
repnz
shl
daa
cld
neg
add
lock
or
mov
push
mov
stos
sub
mov
jnp
jge
push
pop
jl
mov
adc
(bad)
mov
mov
retf
jbe
call
pop
jmp
sub
(bad)
push
sti
inc
mov
aaa
jp
adc
out
sub
add
enter
outs
xchg
or
ret
fisub
cwde
ja
adc
(bad)
imul
dec
xor
and
xchg
mov
das
stos
(bad)
jmp
sub
mov
jmp
test
and
push
mov
mov
es
mov
pop
test
cwde
mov
shr
popf
and
das
retf
mov
fcmovnu
inc
in
fmul
mov
mov
mov
push
mov
mov
dec
lahf
xor
(bad)
mov
das
fwait
xchg
push
mov
mov
jmp
sub
enter
fs
mov
cmp
call
mov
jmp
or
push
mov
mov
inc
mov
shl
cdq
and
test
push
mov
mov
push
mov
mov
inc
mov
jmp
test
aaa
mov
arpl
xchg
add
jg
mov
mov
fwait
mov
sbb
mov
mov
in
mov
lea
test
mov
das
sahf
addr16
and
sbb
push
mov
mov
test
mov
iret
test
fucomi
inc
mov
and
repnz
lods
mov
push
repnz
lods
mov
ja
mov
ja
mov
jo
mov
fst
mov
mov
push
xchg
mov
sub
test
(bad)
lods
mov
(bad)
lea
push
jo
xor
pop
mov
fucomi
push
xchg
mov
push
lea
rcr
mov
movs
add
push
mov
mov
rol
dec
lahf
jecxz
push
mov
mov
jmp
fist
sbb
arpl
ret
inc
rcl
mov
jnp
das
add
mov
fild
dec
lahf
jecxz
push
mov
mov
(bad)
les
stos
stos
cmps
jb
adc
dec
xchg
push
mov
mov
cmps
mov
push
mov
(bad)
mov
repz
sbb
jmp
mov
push
mov
mov
and
loop
push
mov
mov
xchg
or
jmp
push
mov
mov
sbb
pop
push
inc
mov
mov
mov
mov
sub
ret
mov
mov
fisttp
jmp
mov
cmps
cwde
(bad)
in
mov
hlt
cmps
fsub
gs
add
mov
mov
mov
push
mov
mov
aas
or
xchg
mov
pop
int
sub
ret
(bad)
push
mov
mov
push
and
jmp
mov
inc
fwait
test
push
mov
mov
inc
fisttp
rcl
mov
mov
push
mov
mov
push
mov
mov
fwait
mov
push
mov
mov
push
test
jecxz
mov
mov
clc
mov
and
sbb
push
mov
mov
stos
mov
push
push
loop
jmp
mov
push
mov
mov
stos
mov
push
mov
mov
sub
jmp
mov
sub
jmp
mov
sub
jmp
mov
push
mov
mov
lods
mov
push
mov
mov
push
mov
mov
and
mov
push
loop
push
inc
lea
in
sub
jle
mov
mov
push
mov
mov
fwait
das
sbb
int3
push
mov
mov
push
push
mov
sbb
cdq
push
mov
mov
test
jmp
fsubr
sub
enter
jmp
mov
inc
adc
mov
cmps
sub
fucomi
push
mov
mov
and
jmp
mov
adc
ins
sub
sub
push
mov
mov
push
mov
mov
inc
mov
jecxz
sti
xchg
dec
sub
test
jg
or
inc
sub
fdivr
call
mov
jecxz
mov
mov
scas
pushf
mov
push
mov
mov
and
rcl
push
mov
mov
scas
loope
mov
inc
push
shl
jmp
mov
mov
neg
mov
sub
xchg
movs
cmps
shl
and
sub
outs
dec
xlat
inc
js
loop
mov
mov
push
xchg
mov
dec
test
pushf
mov
push
ins
mov
mov
retf
adc
and
push
mov
mov
pop
js
loop
mov
mov
jmp
ins
int3
das
fwait
dec
inc
data16
loop
push
mov
mov
jmp
cmp
in
fstp
sbb
push
jge
mov
jg
jb
das
stos
fwait
push
xlat
dec
mov
jecxz
mov
mov
inc
mov
out
add
and
fild
das
retf
xor
retf
xchg
jge
fs
cmp
ins
xlat
dec
dec
rcr
(bad)
out
dec
lahf
mov
push
mov
mov
call
mov
mov
mov
or
test
xchg
xchg
outs
fwait
mov
or
and
adc
ins
sub
stos
inc
mov
mov
mov
pop
sahf
mov
pop
mov
fucomi
push
mov
mov
push
mov
mov
inc
mov
out
add
and
fild
das
retf
xor
retf
cmc
jge
fs
cmp
ins
das
outs
dec
xchg
dec
js
mov
push
mov
mov
push
test
shl
lods
scas
in
addr16
sub
(bad)
mov
mov
fld
stos
mov
lods
pop
cmp
pop
rol
cdq
mov
inc
ja
repnz
das
stos
repnz
pop
hlt
cmp
add
sub
ret
and
jg
mov
stos
xchg
repz
jmp
inc
xlat
push
mov
mov
xor
sub
lahf
inc
add
cdq
cmps
sub
retf
jmp
mov
mov
pop
mov
fucomi
push
mov
mov
push
mov
mov
push
mov
mov
jg
ins
int3
cmps
enter
outs
ins
lods
pop
js
loop
mov
mov
loop
ret
mov
shl
mov
outs
in
test
das
sbb
shl
loop
pop
les
xlat
fisttp
jmp
enter
lahf
loop
jg
inc
sub
out
lods
jns
enter
xchg
pusha
mov
xchg
jmp
retf
or
(bad)
lods
mov
lock
jg
pop
dec
cmp
call
test
pop
movs
push
icebp
fucomp
ret
pop
dec
sub
push
test
or
cmp
mov
or
sbb
int3
mov
and
iret
ror
jle
lods
jle
in
arpl
push
ret
(bad)
addr16
mov
inc
ja
iret
or
lahf
xchg
mov
arpl
mov
or
in
sbb
jp
in
jecxz
add
mov
dec
pop
je
sbb
iret
xor
(bad)
ja
and
pop
push
or
add
(bad)
adc
call
or
je
pop
push
jmp
dec
stos
je
pop
test
sub
(bad)
xor
mov
neg
out
fs
ret
loop
test
mov
in
stc
into
call
enter
sbb
pop
test
push
aaa
xchg
or
mov
out
mov
cmp
ja
pusha
call
and
inc
and
jbe
adc
jns
fwait
les
inc
js
stos
inc
jns
sbb
mov
(bad)
dec
fbstp
hlt
scas
retf
ret
push
dec
cmp
pop
sub
push
mov
adc
es
mov
inc
aaa
add
inc
cmp
push
fisttp
cmp
int
pop
mov
cmp
daa
and
pop
aas
stc
fild
lods
dec
adc
(bad)
lahf
sti
add
dec
push
pop
adc
or
sbb
pop
inc
cmps
xor
mov
lock
sub
leave
push
sub
mov
in
clc
xor
inc
stc
xor
sbb
xor
sub
pop
das
int
fs
leave
xor
sbb
lea
iret
or
std
adc
leave
cmc
add
dec
push
ins
adc
or
stos
xor
jp
xor
sub
xor
sub
std
cmp
fwait
out
(bad)
xchg
xor
mov
xor
sub
sub
sub
outs
pop
inc
lods
xor
jecxz
xor
sub
xor
sub
dec
bound
xchg
xor
mov
xor
sub
xor
sub
std
cmp
fwait
repnz
inc
frstor
rcl
repz
add
ja
xor
fidiv
and
mov
xor
jmp
push
inc
xchg
or
fs
xor
sub
xor
sub
or
and
loope
outs
pop
inc
scas
xor
and
hlt
add
jo
pop
and
xor
jmp
xor
dec
jo
bound
xchg
xor
stos
lock
sub
movs
shr
dec
push
pop
adc
cmp
fs
mov
sub
in
loope
fs
lock
sub
pop
das
lea
fs
xor
sub
movs
pop
sub
leave
push
and
push
sub
mov
ins
xchg
stos
xor
jp
cmp
shl
cmc
fld
or
(bad)
sti
xor
xor
xor
sub
std
and
inc
xor
ins
mov
fs
xor
lock
jge
mov
ins
adc
xor
sub
add
sub
xor
jmp
(bad)
xchg
or
fnsave
stc
xor
sbb
xor
sub
xor
sub
ins
pop
sub
sbb
adc
add
sbb
fisttp
xor
xor
fs
xor
sub
into
and
xchg
xor
stos
lock
sub
mov
sub
xor
ret
lock
sub
xor
sub
pop
jp
stos
dec
in
xchg
xor
sub
in
int3
xor
jmp
and
es
xor
fidiv
sbb
rcr
iret
inc
sbb
nop
mov
ins
jno
xor
stos
lock
sub
xor
sub
and
mov
xor
jmp
push
sub
ins
dec
and
add
call
int3
mov
xor
sbb
xor
dec
lock
sub
test
sub
test
or
fst
sbb
lods
push
ins
std
sbb
pop
inc
enter
lock
sub
xor
sub
pop
jmp
mov
fs
stc
xor
(bad)
xor
sub
add
sub
xor
jmp
sub
call
pop
push
push
sbb
mov
cmp
fs
xor
sub
push
sub
push
sub
mov
ins
fwait
stos
xor
push
xor
sub
sbb
lock
and
xor
sub
je
sub
or
fs
xor
sub
xor
sub
add
mov
in
mov
lock
sub
xor
sub
or
fs
xor
sbb
in
sub
(bad)
or
adc
pop
pop
push
fst
or
pop
sbb
push
pop
ret
mov
minps
leave
ins
stos
adc
mov
in
clc
xor
inc
stc
xor
sbb
sub
ins
inc
mov
xor
jp
adc
(bad)
popf
sub
cmp
jae
pop
push
fst
or
add
add
cmp
push
push
ret
fstp
jecxz
lods
es
sbb
pop
inc
mov
and
not
pushf
test
dec
nop
in
jno
mov
push
call
sub
aad
je
cmps
xor
(bad)
cwde
pushf
repnz
retf
add
or
pop
std
mov
adc
inc
(bad)
ins
dec
stos
add
pop
jg
dec
ja
sbb
mov
test
jmp
lds
adc
stos
push
xchg
in
ficom
xchg
inc
stc
cmp
daa
pop
push
jns
ret
out
fld
lock
inc
je
inc
pushf
test
ret
mov
inc
mov
mov
shl
data16
cld
and
push
stos
inc
push
pop
push
mov
push
cwde
outs
and
fld
repz
sbb
jo
adc
fnstenv
xchg
data16
xchg
mov
aaa
fisubr
dec
pusha
or
sbb
cmp
sub
mov
jg
xchg
(bad)
xor
and
aaa
fmul
jge
repz
pop
fcomip
inc
push
and
xchg
cmp
and
xchg
pop
(bad)
bound
push
stos
gs
jmp
and
or
test
(bad)
jmp
add
inc
xchg
fld
mov
shl
adc
mov
(bad)
sbb
aaa
cmp
lods
push
fsub
inc
inc
pushf
xor
push
into
pop
pop
ds
mov
push
mov
push
push
pop
mov
push
mov
mov
push
mov
mov
push
mov
and
and
xor
mov
or
push
ds
pop
mov
mov
mov
xchg
cmp
sbb
add
loopne
mov
adc
mov
popa
fidivr
pusha
xchg
imul
cmp
cmp
jo
mov
imul
mov
es
outs
add
retf
jg
xor
out
imul
cmp
xchg
cmp
xchg
or
mov
sbb
mov
cmp
xchg
or
mov
sub
in
dec
adc
shr
sub
in
scas
add
mov
cmp
jmp
add
and
aad
js
push
sti
xor
(bad)
test
repnz
mov
mov
iret
xchg
pop
sbb
push
push
or
mov
cwde
cmp
mov
test
in
idiv
arpl
xchg
mov
into
xchg
jnp
dec
cmp
leave
fs
mov
sbb
sti
jbe
and
lea
sbb
pop
and
jnp
repz
enter
call
xchg
adc
cmps
pusha
mov
jge
push
jbe
xor
lods
inc
aaa
mov
aaa
dec
and
pop
aam
push
sahf
pop
fbld
jnp
xchg
push
dec
lock
or
xchg
repz
ss
js
mov
ret
push
and
jbe
in
jmp
push
popa
mov
fs
cmps
js
aam
ffree
push
(bad)
stc
imul
mov
jbe
push
and
cmps
fcom
cmp
sbb
and
data16
sbb
inc
mov
test
mov
inc
(bad)
jno
inc
mov
aaa
out
mov
scas
pop
fwait
push
jno
aam
call
retf
fwait
xlat
repnz
add
addr16
or
(bad)
pusha
fldpi
xchg
out
ja
(bad)
fild
sub
xchg
xchg
sbb
jnp
(bad)
cmp
sbb
adc
nop
jne
arpl
sub
mov
daa
loopne
sbb
dec
pop
pop
fld
je
lock
and
bound
or
and
xor
jne
pusha
aaa
push
je
pusha
pop
push
xor
stc
push
mov
mov
pop
ins
mov
push
int
test
push
test
pop
test
frstor
pop
test
clc
pop
test
pop
aad
icebp
pop
test
push
test
pop
test
pop
cwde
sub
or
mov
js
sar
inc
add
push
mov
out
test
(bad)
mov
pusha
mov
push
cwde
and
inc
retf
push
enter
fbld
xchg
jae
sbb
je
mov
push
fdiv
inc
pusha
dec
test
out
jnp
pop
ud1
inc
fcomi
outs
jmp
push
xchg
in
xor
jnp
imul
push
xchg
jmp
pop
push
das
ja
mov
adc
lods
inc
sbb
fldenv
mov
ja
loopne
pop
adc
(bad)
int
mov
push
dec
mov
or
pop
pop
jecxz
in
mov
mov
out
mov
ja
and
pop
aam
adc
push
or
sbb
pop
nop
xchg
shr
xlat
mov
mov
ret
cmps
or
leave
jnp
inc
adc
push
fsub
cmps
outs
mov
xchg
retf
jb
daa
xchg
xchg
jp
ins
cwde
fs
stc
lds
pop
shr
pop
pop
stos
inc
mov
cmps
iret
inc
push
jl
sbb
or
enter
data16
lods
repz
test
aam
neg
push
daa
or
mov
mov
jmp
xor
shl
cwde
imul
inc
mov
cmc
jns
xchg
jno
pop
xor
xor
aaa
fwait
(bad)
stc
xor
or
(bad)
retf
jae
fbstp
(bad)
xchg
sub
sar
push
stos
(bad)
test
mov
add
push
fadd
mov
pop
hlt
lods
ret
jg
cmp
add
push
add
popa
mov
jmp
add
push
ins
pop
in
or
pusha
sahf
push
ins
add
push
push
add
loope
add
pop
ins
add
outs
dec
add
ins
add
push
or
add
push
push
add
adc
push
push
jecxz
push
jecxz
ins
loopne
push
test
pop
push
push
enter
ds
push
cli
pop
cmp
gs
pop
in
pusha
pop
outs
add
ins
add
push
or
add
push
sub
push
outs
mov
and
scas
ins
add
push
ins
add
gs
cwde
in
pusha
(bad)
add
outs
ins
add
push
in
or
cmp
je
push
out
fucomi
or
cmp
add
and
pop
fdivp
xor
jecxz
ins
add
push
in
mov
in
add
cwde
ins
add
push
dec
add
outs
ins
add
push
ins
mov
jecxz
ins
add
push
ins
mov
add
mov
and
cs
inc
xchg
cmp
gs
add
xchg
gs
pop
ins
add
push
push
add
or
push
ins
add
popa
ins
add
push
or
add
push
ins
das
push
outs
xor
add
call
in
loopne
push
ins
add
cwde
ins
add
push
das
jg
push
mov
and
outs
ins
add
push
in
pusha
fisub
cmp
jecxz
gs
pop
in
addr16
push
smsw
inc
gs
pop
ins
add
push
dec
add
outs
bound
push
push
cmp
rcl
ds
shl
add
add
add
loope
add
push
sar
stos
shl
add
add
add
loope
add
push
ins
cmp
aad
arpl
add
mov
push
imul
fsubr
push
push
add
or
push
or
xor
push
ins
add
push
in
mov
jecxz
ins
pop
aad
lods
aas
in
or
add
push
ins
mov
bound
push
mov
stc
cmps
or
loop
je
movs
lods
cld
mov
pusha
fucom
imul
ds
add
push
in
or
push
ins
inc
cmps
push
sub
arpl
ins
add
ins
add
gs
popa
cmp
dec
mov
push
or
add
push
in
or
push
add
or
push
inc
or
jno
add
pop
ins
pop
jmp
jmp
cmp
jb
jecxz
push
jecxz
ins
add
push
push
add
mov
push
dec
add
call
es
cmp
sbb
jecxz
cmp
add
push
or
sbb
push
gs
pop
in
push
lahf
push
ins
add
fsubr
sub
js
jecxz
ins
stos
(bad)
push
jns
mov
dec
add
inc
ins
add
push
in
mov
jecxz
ins
add
push
ins
add
fs
enter
push
ins
add
push
in
mov
jecxz
ins
add
push
in
and
popa
pop
add
clc
ins
add
push
dec
inc
imul
cld
jmp
add
push
in
int3
and
push
dec
mov
push
ins
add
fsubr
xor
popa
jns
jecxz
ins
add
push
ins
or
adc
jecxz
in
mov
jecxz
ins
cwde
imul
add
fs
call
ins
and
mov
jecxz
cmp
mov
jecxz
ins
add
push
ins
add
fs
enter
push
ins
add
push
or
add
push
in
and
popa
pop
add
clc
ins
add
push
cmp
add
and
ins
add
push
ins
int
popa
dec
loopne
push
push
jmp
dec
push
add
or
push
arpl
jecxz
ins
push
imul
cmp
popa
jle
jecxz
add
addr16
dec
in
mov
inc
xchg
jmp
ror
sub
mov
push
sub
inc
shr
add
pushf
movs
xchg
sub
inc
fisubr
xor
rol
add
ds
and
cmp
(bad)
hlt
in
mov
mov
pusha
shr
inc
test
mov
ja
test
pop
test
pop
bound
cmp
inc
je
ins
inc
dec
pusha
mov
inc
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
into
mov
stos
(bad)
sub
(bad)
shl
pop
sti
jnp
pop
jns
cmp
xchg
jmp
cmps
pop
out
mov
ja
xchg
jns
hlt
push
fxch
and
cmp
sti
inc
fstp
retf
int3
adc
(bad)
jp
outs
ss
cmp
out
sub
(bad)
retf
or
cmp
leave
cmps
bound
aam
pop
movs
iret
addr16
fs
add
iret
adc
out
mov
xchg
push
mov
add
jecxz
pop
sbb
mov
or
leave
cld
(bad)
fsub
sbb
pusha
loopne
pop
nop
sbb
or
cwde
xchg
shl
xor
cmp
bnd
in
inc
and
sub
mov
call
pop
ret
jns
sbb
or
aas
pop
shl
(bad)
mov
lock
or
dec
lock
jecxz
pop
cld
xchg
cli
call
pop
jo
enter
fiadd
cmp
xchg
fwait
inc
mov
cmps
mov
mov
pop
jno
xchg
xor
adc
aaa
sbb
stc
xor
add
(bad)
fimul
inc
dec
xchg
mov
cmp
nop
loopne
leave
cs
mov
sbb
repnz
sti
adc
pop
sbb
fnstcw
es
jp
mov
and
popf
inc
imul
movs
inc
sbb
xchg
das
xchg
dec
jp
add
outs
dec
jge
mov
aas
call
inc
pop
sbb
cmps
arpl
and
and
popa
cmps
inc
or
icebp
mov
or
popa
cmps
push
add
cmps
adc
imul
jae
popa
cmps
and
clc
mov
xor
mov
add
cmps
adc
sub
jmp
or
inc
in
or
popa
cmps
adc
mov
cmps
and
popa
cmps
inc
or
cwde
sahf
bound
push
cmps
adc
add
sub
cmps
sbb
icebp
cwde
and
pop
mov
sbb
cli
sbb
cmps
jmp
or
pop
scas
sub
adc
pop
call
pop
sahf
sbb
cmp
xor
add
cmps
adc
loop
and
popa
cmps
inc
or
pop
popf
cs
sahf
call
cli
sbb
cmps
jmp
or
popa
in
or
popa
cmps
adc
pop
call
pop
sahf
sbb
cmp
adc
add
cmps
adc
add
sub
pop
popf
cs
mov
sbb
cli
sbb
cmps
jmp
or
pop
(bad)
and
popa
cmps
cs
xchg
adc
imul
xor
in
xor
add
popa
cmps
adc
bound
and
popa
cmps
inc
or
pop
outs
sub
push
test
daa
adc
or
pop
(bad)
es
(bad)
dec
or
sbb
dec
and
push
adc
or
jbe
dec
mov
add
dec
pop
sahf
loope
inc
cmp
test
mov
mov
inc
pop
test
pop
or
icebp
cmp
test
pop
imul
fsubr
inc
dec
push
test
pop
test
pop
cmp
cmp
jg
pop
test
frstor
pop
test
neg
jg
pop
adc
pop
clc
in
cs
data16
pop
popa
in
cwde
and
cmp
xlat
popa
mov
jg
pop
test
pop
fpatan
hlt
pop
ds
and
jg
fnstsw
call
jg
push
test
pop
test
pop
mov
jg
pop
lahf
cmp
fnsave
neg
jg
pop
test
pop
jle
lock
jg
pop
mov
push
pop
test
pop
test
pop
mov
jg
ins
test
(bad)
add
sub
jg
pop
test
pop
add
jg
test
pop
test
pop
add
jg
test
frstor
retf
aad
loopne
aad
add
pop
test
pop
test
pop
lds
icebp
fisttp
inc
test
pop
clc
add
sub
jg
pop
lds
icebp
pop
xchg
and
je
(bad)
clc
cmps
pushf
xor
clc
add
daa
pop
bnd
aam
stos
pop
test
fisttp
arpl
or
je
pusha
pop
dec
dec
or
test
pop
test
pop
test
fnstsw
imul
dec
xchg
cld
inc
push
bound
xchg
arpl
adc
jg
fld
jmp
add
repnz
enter
ret
push
lock
test
sti
and
(bad)
or
pop
xlat
in
pop
adc
pop
fdecstp
shl
std
movs
adc
rcr
mov
xchg
or
shl
lahf
test
(bad)
xchg
push
aam
dec
aam
inc
test
adc
push
sbb
mov
pop
ds
movs
das
and
ins
fcmovnbe
xor
push
arpl
push
repnz
nop
push
cmp
pushf
imul
mov
xlat
iret
add
jg
push
mov
mov
(bad)
xlat
stos
push
call
mov
inc
cmp
add
(bad)
sbb
jns
fs
es
pop
or
jns
inc
fcomip
push
fld
mov
not
repnz
fwait
jecxz
xor
and
jbe
adc
adc
push
jmp
push
(bad)
mov
sti
add
cmp
(bad)
std
mov
mov
mov
scas
xchg
neg
div
(bad)
(bad)
push
xchg
xchg
out
jbe
push
dec
xchg
mov
mov
xchg
cld
jno
repz
mov
push
pop
and
cmp
inc
jmp
xor
ja
retfw
xor
jge
test
idiv
fcom
xchg
xor
pusha
call
xchg
jle
cmp
lahf
cmp
mov
push
cmps
xchg
sub
loopne
ja
mov
std
mov
fcom
cmp
nop
push
hlt
(bad)
nop
idiv
test
scas
cmp
xchg
cmp
nop
xchg
cmp
nop
xchg
inc
rcl
xchg
(bad)
nop
cmps
and
cwde
jg
mov
call
cmp
lahf
cmp
rcl
rcl
xchg
cmp
nop
xchg
cmp
popf
(bad)
mov
xchg
add
test
add
jle
cmp
lahf
cmp
rcl
fcom
xchg
cmp
nop
xchg
jnp
nop
xchg
mov
cdq
mov
(bad)
lods
test
enter
mov
mov
pop
lea
cmp
nop
push
(bad)
loopne
xchg
add
jle
les
mov
push
cmps
idiv
fcom
xchg
dec
fist
scas
test
cmp
xor
mov
sub
movs
lea
jl
push
rcr
pop
stc
sbb
test
mov
sar
mov
pop
in
iret
in
fldenv
sbb
pushf
in
mov
call
stos
sahf
jbe
in
mov
dec
push
and
or
in
dec
enter
cwde
pop
test
popa
jnp
fst
popa
inc
mov
les
sub
bound
ror
or
jnp
pop
xlat
mov
sar
mov
jnp
jmp
add
outs
loop
xchg
sahf
adc
inc
stc
jne
add
sub
in
(bad)
neg
xchg
or
or
int
repnz
rep
lea
je
sbb
ret
je
dec
mov
iret
mov
mov
ja
sub
test
mov
shl
dec
sub
push
scas
(bad)
shl
inc
push
pop
inc
call
xchg
cmp
pusha
or
fwait
in
adc
mov
aaa
cli
inc
jmp
xor
mov
inc
retf
jbe
sbb
mov
inc
mov
push
or
fdecstp
fiadd
or
mov
cmp
into
cmp
nop
mov
mov
pop
xor
sahf
and
xlat
jns
aam
push
and
pop
clc
xor
push
pandn
jp
jg
add
pop
pop
jne
pop
push
stos
les
clc
movs
xchg
inc
jns
fwait
jb
xor
mov
dec
fild
mov
ficom
sub
ficom
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
xchg
ins
fcomp
cmc
ins
fmul
mov
ins
ss
sbb
fisub
cmc
loope
lods
push
loope
sub
in
lods
jne
push
xchg
push
icebp
jmp
loope
xchg
push
ret
cld
mov
fs
in
aad
test
fisub
gs
mov
push
shl
push
loope
lods
push
loope
fst
inc
call
test
jnp
pop
jne
pop
adc
iret
jecxz
cmp
and
push
popa
and
lods
xchg
loope
lods
push
popa
xchg
aad
in
lods
(bad)
loope
lods
push
loope
lods
push
loope
test
out
pushf
mov
jecxz
push
loope
mov
push
xlat
data16
jecxz
add
loope
fwait
push
inc
lds
pop
jmp
inc
pop
pushf
xchg
cdq
stos
jecxz
ins
lods
cmps
jecxz
adc
jae
push
popa
aas
add
in
aam
jecxz
xor
loope
leave
push
popa
adc
mov
adc
mov
inc
je
adc
(bad)
mov
sub
or
xor
jg
pop
test
fst
xabort
mov
jne
push
mov
pop
sub
push
push
adc
pop
sbb
cld
out
rcl
retf
cli
(bad)
add
sbb
in
dec
jmp
ja
fisub
xor
(bad)
ds
mov
cmp
xlat
jbe
dec
lods
outs
jns
jnp
addr16
in
push
pop
pushf
inc
jns
dec
aam
shl
jbe
jl
div
shl
fidiv
fild
cmc
push
mov
retf
(bad)
lds
fcomp
dec
sub
cmp
mov
cmp
push
cmp
mov
jecxz
cli
xchg
dec
and
jbe
mov
mov
mov
shl
pop
pop
or
jge
repz
es
(bad)
lahf
(bad)
fiadd
std
xor
cmp
jbe
in
mov
test
pop
pushf
test
clc
rcl
mov
imul
pop
aam
cmp
cli
mov
(bad)
(bad)
fbld
xchg
mov
xchg
fwait
inc
mov
xlat
or
jge
sub
jns
cmp
xchg
aam
xor
mov
popf
aaa
fwait
inc
fnstcw
adc
sub
fcomp
test
cmc
sti
adc
dec
xor
call
mov
xor
(bad)
adc
in
adc
sbb
cmp
cmp
retf
or
sbb
cmps
pop
clc
outs
inc
pop
mov
pushf
adc
push
sub
push
sub
sar
cmp
add
jp
imul
dec
push
stc
daa
and
push
and
adc
push
and
stc
rcl
scas
rcl
cs
rcr
adc
push
(bad)
dec
or
pop
mov
or
sbb
mov
dec
add
daa
or
fwait
mov
sbb
pop
add
sbb
and
sub
sbb
xor
inc
sub
ja
push
sbb
cmp
sbb
sbb
sbb
cmp
cmp
cmp
sub
sbb
pop
adc
stc
push
mov
jl
pop
sbb
push
cmp
sbb
ficomp
sub
sub
or
adc
sub
lahf
daa
jno
jns
sbb
sbb
sbb
aaa
aas
clc
sbb
and
sub
or
sbb
add
push
sub
pop
push
aaa
arpl
div
mov
sbb
jl
sti
cmp
and
in
int3
in
cmps
pushf
fsubr
dec
inc
push
das
in
add
fnsave
jle
add
sbb
retf
and
iret
push
sbb
int
sbb
jmp
inc
cmp
or
dec
cli
ins
jge
cli
in
jnp
cli
in
dec
add
in
dec
and
in
dec
add
in
dec
adc
ins
inc
or
jnp
cmp
cmps
push
lods
mov
ret
cmp
sub
pop
dec
sbb
sbb
pop
cmp
sbb
sbb
sbb
cmp
cmp
sbb
and
inc
sub
daa
cmp
fild
sbb
pop
jno
push
sub
sbb
xor
push
sub
xchg
addr16
clc
sbb
mov
ins
sub
push
mov
sbb
xchg
pop
xchg
sbb
sub
sbb
sbb
sbb
and
sub
push
add
jne
inc
cmp
sbb
mov
adc
jbe
push
and
lahf
mov
sbb
es
pop
and
xchg
test
cmp
xchg
test
loop
jp
sbb
add
es
mov
cmp
pop
enter
pop
aas
cmps
js
add
and
shl
add
xor
add
movs
ds
adc
pop
fmul
sub
add
push
and
loopne
ds
add
out
and
(bad)
jecxz
pop
stos
pop
push
sub
mov
ja
add
ds
xor
add
add
movs
ds
push
sbb
sbb
pushf
addr16
cmp
add
add
ret
and
add
pop
and
int
xchg
aas
push
jnp
add
and
pusha
mov
mul
popa
aas
xor
test
mov
cmp
push
and
add
ds
add
cmps
and
inc
movs
pusha
aas
aaa
test
imul
dec
xchg
call
push
jmp
inc
cmps
inc
ret
and
call
mov
jno
test
rcl
inc
adc
jbe
cmp
test
mov
xor
mov
test
imul
(bad)
(bad)
in
mov
lahf
pop
cmp
add
push
adc
push
inc
pushf
adc
iret
mov
ins
cmp
xor
mov
and
pop
push
mov
dec
shr
test
sub
pop
dec
cli
ins
fidiv
mov
cld
ret
aaa
mov
ja
and
pop
aam
and
aas
and
jb
add
cmp
push
retf
dec
dec
je
push
retf
mov
rol
push
iret
push
or
push
xor
std
aaa
call
mov
add
fnstcw
mov
and
(bad)
mov
jp
in
add
inc
mov
in
(bad)
(bad)
fwait
sub
sbb
mov
pop
and
ja
pop
cmp
iret
mov
pusha
sti
mov
mov
loope
cmp
or
inc
das
fcomip
gs
loopne
mov
mov
div
popaw
shl
dec
cmp
add
push
pop
inc
jns
xchg
xlat
out
push
(bad)
fdivr
aam
pusha
push
sub
xor
sbb
in
dec
cmp
or
cmp
xchg
dec
not
repz
jle
inc
mov
pop
(bad)
int
aam
lods
or
dec
cld
mov
dec
cmc
add
dec
int3
or
dec
cld
or
inc
cld
dec
pop
jmp
arpl
aam
lock
dec
fmul
dec
sbb
mov
into
fld
aam
lods
mov
dec
cld
or
dec
cld
or
inc
icebp
add
pop
int
loope
icebp
inc
mov
addr16
scas
xchg
mov
ja
call
shr
icebp
mov
iret
(bad)
sbb
jae
fs
jp
inc
add
test
inc
mov
mov
retf
pop
mov
aaa
imul
mov
adc
pop
fdiv
mov
sbb
shr
out
jbe
mov
movs
inc
nop
jnp
cmp
jnp
jmp
and
inc
shl
(bad)
in
push
adc
mov
inc
pop
retf
pop
les
(bad)
iret
inc
jb
xor
or
ja
mov
jl
out
or
jnp
cmp
inc
jns
sbb
fcomp
jge
add
adc
mov
sbb
lock
scas
ss
or
inc
pusha
jg
call
dec
cwde
xor
push
iret
das
fcomip
outs
jnp
mov
retf
lahf
adc
jbe
or
mov
push
sbb
jne
and
cmps
fstp
not
xor
jg
rcl
addr16
aaa
mov
ja
aaa
icebp
xor
int
xchg
jns
jbe
std
push
pop
retf
jns
sbb
(bad)
cmps
pop
mov
out
test
test
mov
sbb
fwait
mul
mov
stc
sar
lea
inc
adc
dec
fcomip
pusha
imul
fiadd
pop
fld
and
pop
movs
out
fild
sub
xchg
test
out
aaa
sub
out
not
popa
jb
ds
repnz
add
mov
outs
pop
pop
dec
outs
pop
push
dec
outs
pop
push
dec
cmps
and
jge
popa
mov
cli
inc
loope
cmp
ja
pop
xor
pop
pop
dec
mul
je
ds
je
gs
gs
sub
outs
pop
pop
retf
aad
push
sub
push
not
pusha
push
xor
mov
ss
xchg
or
mov
push
xchg
sub
fadd
push
push
xor
outs
pop
pop
dec
outs
pop
push
retf
push
loope
push
xor
xchg
gs
popa
xchg
or
add
sub
fadd
push
push
xor
outs
pop
pop
dec
outs
pop
push
dec
outs
dec
push
retf
loopne
add
xor
gs
imul
gs
gs
add
les
pop
pop
dec
jmp
retf
inc
push
pop
les
adc
adc
or
arpl
push
adc
adc
outs
pop
arpl
pop
ds
outs
dec
push
retf
loopne
add
xor
adc
dec
xchg
ror
arpl
push
adc
adc
outs
pop
arpl
pop
ds
or
push
or
add
outs
pop
arpl
pop
ds
outs
pop
push
dec
or
or
bts
dec
add
jno
sub
cmp
jno
bound
cmp
or
sbb
repnz
aaa
sbb
inc
xor
inc
cmp
mov
pusha
dec
push
xchg
gs
push
call
gs
and
add
mov
pop
daa
jecxz
(bad)
neg
xlat
push
dec
les
lods
into
sub
repnz
ja
add
in
xor
mov
ret
mov
dec
xor
mov
ret
xor
inc
xchg
dec
cld
push
hlt
call
pop
in
xor
arpl
(bad)
outs
loopne
push
jnp
dec
cmp
repz
js
xchg
mov
sbb
xchg
(bad)
frstor
cmps
push
les
and
js
push
pop
jne
addr16
mov
xchg
aaa
jge
aam
sbb
or
mov
aam
push
push
pop
or
adc
dec
stc
pop
pop
ins
popa
nop
sub
scas
push
mov
in
xor
jnp
pop
push
cmp
mov
aaa
mov
sub
shr
pop
xor
test
fs
enter
into
fwait
inc
gs
daa
jecxz
jnp
cmp
add
dec
mov
or
repz
fadd
xlat
push
aam
hlt
lea
cmp
sar
mov
scas
mov
mov
adc
test
mov
fisub
(bad)
adc
leave
pop
dec
sbb
ds
mov
rol
lea
mov
mov
mov
test
mov
scas
and
pop
mov
mov
mov
mov
pop
push
sbb
pusha
inc
mov
mov
mov
mov
xchg
sbb
mov
mov
xchg
xchg
jp
mov
mov
xchg
xchg
sbb
mov
mov
xchg
mov
pop
mov
mov
mov
mov
mov
and
xchg
mov
mov
mov
mov
mov
cmps
mov
int3
dec
push
mov
mov
xchg
push
pop
mov
mov
(bad)
mov
sub
fwait
rol
pop
mov
mov
mov
mov
scas
mov
mov
mov
mov
(bad)
mov
mov
mov
mov
scas
mov
scas
pusha
xchg
dec
sbb
test
mov
fisub
mov
mov
mov
scas
mov
or
sbb
mov
mov
sub
mov
mov
xchg
mov
mov
mov
aaa
test
mov
mov
outs
jbe
mov
mov
scas
mov
mov
retf
ds
mov
rol
lea
mov
inc
push
mov
xchg
popf
rol
xlat
add
pusha
xchg
mov
mov
mov
rol
lods
test
mov
test
into
popf
inc
pop
jmp
pop
or
aam
sbb
xchg
(bad)
retf
scas
sbb
out
add
outs
cmp
daa
mov
aaa
jmp
jns
cmp
jmp
pusha
dec
xchg
jne
inc
push
out
enter
loopne
mov
xor
jge
mov
pop
in
mov
(bad)
cmps
jp
jns
je
fld
daa
into
pop
and
neg
in
pop
ins
inc
bound
mov
cwde
pushf
ret
jnp
sbb
retf
rol
push
mov
ja
pop
or
or
shl
stc
sahf
icebp
aaa
xchg
mov
int
pusha
fstp
ins
mov
out
aaa
push
pop
aam
fmulp
aad
clc
out
mov
test
stc
cmps
les
enter
icebp
fistp
and
jbe
push
pop
js
inc
cmp
frstpm(287
(bad)
xor
sbb
ja
aam
xchg
fxch
cmp
aas
and
jne
mov
pop
stos
sub
add
fcomi
push
je
add
adc
dec
pop
jecxz
stc
sbb
shl
addr16
adc
ja
dec
cmp
jp
(bad)
push
sbb
div
add
pop
iret
stc
dec
nop
push
adc
cmps
movs
daa
sub
cmp
jb
not
sti
addr16
pop
or
push
out
imul
sbb
(bad)
mov
or
std
sti
or
mov
jb
lods
xchg
cli
ss
adc
daa
nop
repnz
nop
jb
inc
cdq
mov
enter
pop
repnz
nop
repnz
nop
repnz
nop
mov
or
mov
repnz
sbb
repnz
nop
bnd
nop
mov
or
mov
repnz
nop
xchg
add
push
iret
or
shl
daa
nop
repnz
jbe
repnz
nop
(bad)
or
sub
or
nop
repnz
repnz
sbb
repnz
jbe
repnz
nop
(bad)
or
imul
or
nop
repnz
pop
nop
mov
or
xor
fs
repnz
lods
or
mov
or
nop
jb
cmps
xchg
(bad)
or
shl
and
repnz
xchg
lods
or
mov
or
nop
repnz
shl
daa
nop
repnz
cmps
xor
fxch
or
mov
repnz
add
iret
or
shl
dec
nop
repnz
sbb
ror
sbb
or
mov
mov
or
mov
or
sbb
or
nop
repnz
repnz
cdq
retf
test
fwait
mov
daa
lods
dec
daa
mov
repnz
add
sahf
iret
or
shl
jbe
repnz
popf
cli
or
pusha
repnz
nop
jb
push
xchg
(bad)
dec
add
scas
iret
or
shl
das
nop
mov
or
sahf
iret
or
shl
cs
mov
pop
adc
mov
daa
mov
jb
stc
fwait
jnp
ds
sti
add
test
repnz
nop
repnz
and
jecxz
and
mov
daa
popf
sti
or
mov
iret
or
shl
daa
nop
jb
jns
icebp
or
mov
jb
sbb
repnz
nop
repnz
nop
ror
sub
or
mov
repnz
jnp
pop
std
fisttp
cmps
test
repnz
nop
jb
dec
nop
xchg
and
dec
cmp
retf
mov
repnz
nop
jb
adc
sbb
or
loopne
or
nop
repnz
cmp
std
fisttp
daa
test
or
jb
push
xchg
leave
add
sub
or
mov
repnz
sahf
iret
push
sbb
shl
sbb
or
nop
jb
inc
xchg
enter
fist
test
or
sub
or
mov
jb
ficom
retf
or
mov
repnz
repnz
sbb
fwait
mov
daa
int
or
loopne
or
nop
jb
sbb
repnz
nop
repnz
push
ror
sbb
or
mov
mov
push
add
cmps
test
repnz
call
or
nop
repnz
nop
jb
push
cdq
js
push
mov
retf
or
mov
repnz
xchg
mov
daa
and
or
nop
repnz
xchg
lea
dec
ss
sbb
or
stos
jmp
push
std
(bad)
mov
sub
cmps
mov
dec
pop
adc
outs
push
test
(bad)
in
mov
cmp
cld
mov
adc
test
repnz
mov
leave
add
popf
ret
fldl2e
xor
ja
fist
mov
pop
add
shl
mov
jb
outs
xchg
imul
scas
mov
aaa
out
mov
push
imul
mov
and
pop
aam
sbb
xchg
les
mov
add
ins
jno
sti
cmp
ja
aaa
push
cmp
add
mov
lahf
xchg
jnp
pop
sbb
pusha
sub
stc
push
inc
ins
jno
stos
or
jns
je
mov
dec
or
xlat
xchg
test
and
(bad)
jmp
mov
and
push
or
cdq
inc
cmps
movs
or
lock
cmp
repz
mov
mov
call
jb
and
(bad)
aad
push
sub
mov
mov
ja
and
pop
aam
(bad)
pop
test
mov
pop
mov
jo
out
inc
cld
dec
cmp
jp
not
mov
test
daa
into
inc
pop
mov
imul
mov
adc
aad
sub
adc
mov
cmp
ret
sub
mov
div
fidivr
cmp
mov
push
test
not
aas
adc
iret
(bad)
mov
pop
test
xor
jg
mov
(bad)
and
iret
mov
dec
add
xlat
mov
mov
iret
ja
cmp
mov
mov
iret
mov
aas
adc
iret
(bad)
mov
pop
test
xor
aas
xor
test
xor
jg
mov
pop
fbld
pop
sub
mov
inc
add
xlat
mov
mov
iret
aaa
adc
xor
test
mov
aas
adc
iret
(bad)
mov
pop
test
xor
jg
mov
aas
shl
pop
test
xor
aas
xor
sub
mov
dec
add
xlat
mov
mov
iret
not
aas
adc
iret
(bad)
mov
sub
popf
aam
jbe
(bad)
jb
out
jle
inc
out
aam
jbe
clc
jb
cs
jb
out
(bad)
rol
ror
mov
mov
iret
mov
aas
adc
iret
(bad)
mov
pop
test
xor
aas
xor
test
xor
jg
mov
pop
shl
pop
sub
mov
inc
add
jg
mov
lahf
rcr
sbb
xchg
aam
pop
rcr
pop
adc
dec
rcr
inc
xchg
clc
or
mov
xlat
sbb
js
(bad)
cli
ds
(bad)
test
repnz
mov
mov
ret
and
fwait
mov
pop
xchg
fs
xor
cmp
mov
jmp
and
adc
sti
pop
pop
in
inc
push
dec
sub
cmp
jmp
repz
mov
xlat
cmp
pop
push
sub
enter
adc
xchg
aam
bound
icebp
mov
pop
ficom
dec
pop
je
ins
enter
iret
fs
icebp
ret
xchg
mov
je
popa
sbb
pop
in
jno
sti
inc
cld
push
fsubr
mov
mov
xor
mov
retf
aas
mov
jnp
out
mov
rol
call
nop
inc
pop
lea
cs
aam
jge
dec
cmp
mov
push
pop
out
xor
mov
jmp
xchg
jmp
je
or
repz
repnz
cld
or
repz
mov
lock
aaa
fwait
repnz
hlt
push
in
cmps
sbb
retf
cmps
outs
mov
call
xchg
leave
push
jl
lods
add
int
xchg
into
mov
jl
mov
inc
(bad)
mov
inc
(bad)
cwde
pop
inc
dec
arpl
(bad)
mov
inc
(bad)
mov
inc
xchg
ficomp
loopne
pop
mov
mov
dec
(bad)
mov
inc
(bad)
mov
inc
ins
mov
inc
push
mov
mov
aas
out
aas
cmp
(bad)
xor
inc
(bad)
mov
inc
(bad)
mov
inc
call
inc
dec
push
push
jbe
(bad)
fs
mov
inc
(bad)
mov
inc
(bad)
mov
inc
int
pop
sub
push
jl
pop
(bad)
mov
dec
(bad)
mov
inc
(bad)
mov
rcl
push
inc
(bad)
mov
shl
pop
inc
(bad)
mov
dec
(bad)
mov
inc
(bad)
mov
rcl
pop
inc
sbb
pop
dec
(bad)
mov
dec
(bad)
mov
inc
(bad)
mov
inc
ins
mov
inc
(bad)
xor
(bad)
mov
inc
(bad)
mov
ror
pop
popa
mov
push
sub
mov
outs
dec
(bad)
mov
inc
into
xor
(bad)
mov
inc
(bad)
mov
inc
jecxz
pop
add
mov
dec
(bad)
mov
inc
loop
pop
or
mov
dec
(bad)
mov
inc
cs
pop
lahf
jecxz
jne
out
mov
(bad)
mov
inc
(bad)
mov
inc
(bad)
mov
shl
pop
dec
(bad)
mov
dec
(bad)
mov
inc
out
push
enter
dec
cli
sbb
(bad)
xor
(bad)
mov
inc
(bad)
mov
inc
cmps
sti
pop
inc
cli
retf
pop
pop
dec
xchg
ja
mov
(bad)
or
inc
(bad)
mov
inc
(bad)
fistp
cdq
(bad)
push
popa
dec
xchg
push
sub
sar
add
mov
inc
(bad)
loop
ror
push
jo
mov
inc
(bad)
mov
inc
mov
dec
lahf
inc
mov
cmp
(bad)
mov
inc
(bad)
jecxz
shl
pop
dec
cli
mov
jle
(bad)
mov
inc
(bad)
mov
inc
out
push
retf
sub
mov
cli
jnp
lahf
or
ja
mov
jo
cmps
clc
or
pop
(bad)
mov
inc
(bad)
mov
inc
out
pop
dec
(bad)
mov
dec
(bad)
mov
inc
(bad)
mov
shr
pop
(bad)
xor
(bad)
mov
inc
(bad)
repnz
shl
pop
or
mov
js
mov
dec
(bad)
mov
inc
(bad)
mov
rcl
test
adc
jecxz
outs
or
in
pusha
inc
(bad)
mov
dec
(bad)
mov
inc
repnz
pop
adc
xor
(bad)
mov
inc
jmp
inc
inc
rcr
cdq
orps
pop
inc
(bad)
mov
inc
out
pop
inc
dec
addr16
into
xor
(bad)
mov
inc
into
pushf
pop
and
(bad)
or
inc
(bad)
mov
inc
(bad)
mov
shl
pop
add
mov
dec
(bad)
mov
rcr
mov
sbb
dec
cdq
(bad)
dec
gs
mov
inc
inc
jmp
push
jo
jecxz
push
(bad)
xor
inc
(bad)
mov
inc
(bad)
mov
inc
cmp
inc
(bad)
mov
inc
enter
out
pop
enter
fild
hlt
fisttp
enter
dec
fsubr
cdq
xcrypt-ofb
cmps
outs
(bad)
(bad)
xlat
test
outs
cwde
pop
retf
sbb
add
mov
sub
cdq
(bad)
adc
(bad)
mov
inc
(bad)
mov
inc
(bad)
fistp
cdq
(bad)
push
popa
dec
xchg
push
sub
icebp
sar
or
(bad)
mov
inc
(bad)
mov
inc
(bad)
xchg
pop
ror
pop
cmp
mov
inc
aaa
mov
inc
(bad)
xor
(bad)
mov
inc
(bad)
mov
inc
jecxz
pop
or
mov
dec
(bad)
mov
inc
out
push
retf
sub
mov
cli
sbb
mov
jo
mov
push
cld
loop
cmovs
shl
cmp
jecxz
imul
out
push
int3
pop
test
push
cwde
pop
movs
(bad)
xchg
dec
jnp
div
in
fsub
push
sahf
mov
sub
fdivr
movs
(bad)
aaa
ret
push
data16
call
cld
inc
dec
cmp
mov
ret
xor
test
test
and
or
fs
cmp
fbld
pop
imul
sar
add
pop
aaa
mov
sbb
jg
leave
fs
jmp
mov
xchg
mov
fsub
fisub
loope
fdiv
adc
sti
mov
pop
push
jbe
fs
(bad)
push
mov
mov
push
jbe
push
nop
ret
adc
(bad)
ja
mov
mov
sahf
xchg
iret
aaa
js
push
clc
fs
int3
jp
stc
jbe
in
push
pusha
sti
xchg
jno
fbstp
sbb
add
dec
pushf
aam
(bad)
aam
pop
int3
push
mov
icebp
(bad)
pop
or
xchg
in
mov
jp
fistp
(bad)
mov
pop
mov
push
push
jbe
mov
or
cmp
adc
ror
int
add
ffree
pusha
xor
or
cmc
sbb
add
pop
fstp
call
jo
sbb
inc
stos
js
pop
add
lea
dec
stc
xchg
ja
pop
adc
(bad)
fs
sub
ret
mov
addr16
lds
fisub
push
test
sub
adc
xchg
mov
sub
pop
fmul
jbe
xchg
push
fwait
pop
pop
sbb
mov
mov
cmp
std
mov
cmp
mov
xchg
cmp
adc
pop
pop
cmp
movs
mov
test
xor
test
mov
mov
cmps
cmp
sub
and
adc
ror
inc
mov
lods
mov
sar
lds
sbb
fcmovne
cmp
xchg
ss
lock
xchg
movs
mov
mov
mov
mov
nop
mov
sar
(bad)
ds
mov
leave
cmp
xchg
ss
lock
xchg
mov
in
(bad)
in
call
or
lds
xchg
test
aas
(bad)
xchg
mov
or
mov
sbb
jmp
loopne
push
call
mov
aad
lds
cmp
mov
leave
cmp
xchg
xchg
xchg
or
ror
cmp
xchg
sbb
mov
std
cmp
mov
cmp
ss
pop
loopne
xchg
call
cmp
cmp
in
xor
stos
repnz
jecxz
mov
xchg
lea
shl
add
add
xchg
pop
pop
std
xchg
ror
inc
mov
or
rep
cmp
pop
ins
pand
or
pop
pop
sbb
mov
cmp
xchg
pop
xor
mov
add
lds
sub
mov
mov
cmp
mov
cmp
mov
mov
shl
or
cli
xchg
lds
or
out
cmp
pop
pop
sbb
int3
(bad)
add
es
mov
sar
xor
xchg
push
es
sbb
inc
pushf
stos
add
xor
mov
or
fs
xor
repz
jg
test
data16
retf
pop
pusha
sub
xor
cmp
rcl
out
not
dec
push
adc
mov
int3
ret
inc
xchg
pop
outs
call
mov
sbb
push
mov
mov
jbe
in
(bad)
sbb
fsub
pop
pop
enter
xchg
jmp
bound
(bad)
jecxz
mov
add
pop
movs
mov
hlt
(bad)
fnstenv
or
ins
pop
mov
adc
mov
jne
stos
mov
pusha
test
pop
aam
pop
(bad)
mov
test
scas
cmp
jl
xor
pop
pop
adc
cli
imul
(bad)
jno
dec
pop
fs
jns
push
adc
add
popf
daa
pop
mov
aam
aaa
mov
push
or
add
leave
nop
cmc
inc
mov
aaa
jp
out
ds
mov
das
rcr
fisttp
inc
fcom
aam
push
fld
or
lea
retf
jbe
sbb
sti
ficom
xchg
jecxz
mov
xchg
sar
fiadd
lods
mov
cmp
out
add
enter
aaa
sbb
aas
stc
inc
mov
ja
adc
aad
sub
adc
mov
jmp
in
inc
mov
mov
mov
in
pop
mov
not
jg
(bad)
in
ins
mov
jne
mov
in
push
mov
in
jne
xchg
enter
sar
fisttp
cmp
jne
test
int3
mov
xchg
jne
(bad)
in
jnp
test
and
mov
div
mov
in
cld
mov
test
jne
sub
cmc
sub
shr
test
mov
mov
out
jne
mov
in
push
mov
in
jne
test
jne
test
ret
(bad)
in
dec
mov
jne
les
jl
mov
in
dec
mov
in
jne
xor
jne
mov
xor
loop
sbb
mov
in
and
mov
stos
jne
cmps
mov
cld
mov
in
dec
mov
stos
mov
(bad)
in
rcr
ror
xchg
sub
dec
mov
call
int3
mov
test
jne
xchg
jne
(bad)
in
jnp
test
and
mov
div
mov
jno
(bad)
in
sti
mov
jne
sub
mov
in
jmp
in
push
mov
in
jne
test
jne
or
aam
mov
in
inc
mov
in
jne
les
jl
mov
in
dec
mov
in
jne
test
jne
into
ret
mov
xlat
sub
mov
push
(bad)
fdivr
jmp
xor
push
push
in
mov
test
jne
aad
jne
mov
jl
test
cmc
mov
in
jne
icebp
in
in
icebp
jg
cwde
sar
test
pop
test
mov
push
ja
test
or
test
jne
add
mov
cmp
std
sbb
cld
mov
xor
in
int3
sbb
mov
aam
pushf
test
dec
mov
test
jne
push
adc
jmp
test
gs
in
jne
xor
mov
rcr
int
jl
sub
les
fcmovbe
push
lahf
test
mov
mov
in
jne
mov
jne
test
aad
test
jne
and
jne
test
mov
test
jp
test
cmp
test
inc
mov
int
xor
test
lds
(bad)
in
sti
mov
jne
pop
in
test
jne
inc
jmp
jne
test
jne
lea
stc
test
lds
add
jne
test
mov
in
jne
test
jne
mov
jne
test
mov
in
cmc
mov
in
jne
mov
pop
in
mov
jmp
in
push
mov
in
jne
test
jne
pop
test
aad
mov
mov
mov
js
repnz
push
lods
lods
lods
je
mov
mov
lods
mov
in
jne
les
js
test
or
test
inc
mov
in
jne
loop
jne
mov
push
push
mov
jne
mov
in
int3
mov
test
jae
arpl
sbb
in
dec
mov
in
jne
sbb
jne
xor
mov
add
aad
sbb
inc
dec
aam
test
push
fld
pushf
mov
sub
inc
mov
add
test
inc
dec
inc
jae
ret
dec
mov
push
into
ret
mov
cmps
sub
test
push
xor
mov
sub
adc
test
cwde
mov
test
int3
cwde
jl
stos
dec
rep
xor
mov
cmc
cwde
pop
pop
add
repz
call
jne
mov
jne
add
mov
in
jne
(bad)
jmp
mov
(bad)
jae
(bad)
in
sti
mov
jne
push
shl
jp
sub
retf
push
cmps
push
mov
in
push
xor
(bad)
in
jl
test
inc
mov
in
jne
xchg
cwde
(bad)
or
in
jne
mov
(bad)
rol
cmp
mov
call
sbb
sar
lods
pop
push
or
rcr
ja
ret
mov
imul
pop
je
rcr
or
push
lds
mov
(bad)
dec
mov
push
mov
lds
cmp
and
mov
outs
xchg
push
icebp
daa
aas
xchg
fnstcw
pop
dec
ss
adc
fsub
add
jo
mov
fiadd
dec
out
out
xchg
arpl
cmp
sbb
pop
pop
cmp
(bad)
mov
mov
fsubr
and
pop
aam
inc
enter
pop
push
and
pop
dec
push
jo
mov
jae
iret
xchg
repnz
pop
jmp
frstor
cmp
mov
dec
mov
test
ret
sbb
jnp
inc
pop
stc
fld
sub
mov
mov
icebp
ret
xlat
icebp
jmp
or
sbb
ret
test
iret
cmp
stos
jb
and
cmps
aam
dec
add
inc
pushf
mov
sub
push
out
add
add
inc
cmp
add
addr16
adc
adc
cdq
inc
push
or
adc
and
xchg
js
stos
inc
stc
jl
fcomip
ss
or
adc
fbld
sbb
jb
ins
sti
sbb
sbb
ss
dec
mov
and
test
add
hlt
add
xor
adc
sbb
or
inc
push
mov
jge
retf
das
xchg
iret
mov
mov
div
iret
je
mov
mov
das
retf
das
xchg
iret
hlt
dec
mov
(bad)
je
push
iret
dec
xchg
mov
iret
je
mov
leave
dec
cmps
out
xchg
dec
inc
mov
adc
es
je
or
das
jae
je
mov
iret
movs
adc
sub
mov
adc
iret
je
mov
dec
jne
mov
iret
je
mov
inc
jb
mov
xor
mov
inc
jbe
scas
add
push
cwde
hlt
add
xchg
cwde
hlt
add
xchg
cwde
cmc
add
xchg
cwde
jne
push
(bad)
add
test
sbb
push
pop
(bad)
je
call
pop
mov
hlt
je
ror
or
mov
je
mov
iret
and
mov
je
mov
mov
adc
fnstsw
je
mov
mov
das
test
iret
or
je
or
je
mov
iret
or
mov
je
mov
iret
or
or
add
das
cwde
lds
dec
jb
mov
iret
je
mov
dec
jle
scas
mov
das
ror
or
je
sub
je
mov
iret
je
stos
iret
je
mov
mov
push
test
iret
je
mov
mov
je
sub
hlt
mov
iret
je
mov
iret
dec
xor
in
mov
mov
sbb
jbe
add
jae
das
mov
je
arpl
aam
mov
repnz
enter
jmp
adc
iret
aam
mov
leave
je
ror
je
mov
cs
stos
xor
push
fidiv
fisubr
rcl
inc
mov
out
xchg
push
xchg
jp
dec
xchg
push
es
out
push
xchg
sub
ins
int
jl
or
xchg
fwait
in
xor
call
pop
test
pop
test
pop
cmp
cmp
jg
pop
test
frstor
pop
test
pop
test
pop
bound
cmp
push
je
out
inc
xlat
lods
daa
sbb
cld
mov
adc
jbe
fs
fcom
aam
rol
push
cmp
sbb
sti
sbb
push
and
(bad)
cmps
arpl
pop
cwde
dec
sbb
(bad)
imul
jae
jmp
fs
sbb
aam
(bad)
mov
push
(bad)
in
mov
aaa
jmp
cmp
test
adc
jge
div
inc
or
mov
or
enter
frstor
push
jbe
in
inc
xor
mov
hlt
dec
repnz
mov
mov
push
shl
xor
shr
out
fs
ret
jp
pop
enter
jbe
mov
test
or
out
dec
out
xchg
push
(bad)
inc
cmp
jae
xchg
xchg
sbb
popf
pop
sbb
mov
jmp
fs
in
popa
mov
and
sub
shr
jns
int3
xchg
push
leave
ret
call
pop
inc
clc
cmc
inc
cmp
mov
add
aas
push
addr16
sub
sub
shl
stc
mov
xchg
cli
ins
(bad)
ja
inc
jns
sbb
jno
inc
jle
adc
jmp
mov
xchg
add
add
fistp
out
hlt
dec
fwait
out
call
lods
in
xchg
xchg
movs
adc
xchg
xchg
inc
inc
retf
sti
into
sbb
mov
sbb
sbb
lods
xchg
sub
xchg
je
pop
jbe
lods
inc
dec
scas
sbb
push
int
leave
sbb
sbb
cld
sahf
(bad)
adc
jbe
div
xor
mov
xchg
imul
mov
outs
inc
dec
mov
mov
fs
or
mov
fcom
sub
xor
mov
xchg
bound
cmp
mov
pop
cmp
bound
es
out
pop
stc
jo
mov
jbe
mov
push
jmp
ja
xchg
int
jnp
cs
aaa
sbb
les
lock
dec
push
cmp
push
ins
(bad)
push
or
bnd
jl
(bad)
repz
mov
mov
aam
mov
aaa
iret
ja
jo
and
push
out
add
mov
mov
cmp
stos
ja
pop
fadd
sub
mov
cmps
xchg
iret
xlat
inc
ja
or
pop
in
(bad)
int
jb
arpl
push
and
cld
outs
push
(bad)
and
pop
in
inc
and
adc
lahf
repnz
ret
call
and
cmp
aas
or
jb
jbe
adc
daa
fwait
je
cmp
and
mov
les
aaa
(bad)
xor
div
cld
test
push
dec
mov
push
or
xor
inc
sub
push
cmps
popa
jp
and
add
(bad)
xlat
xor
aad
int3
mov
sub
fnsave
aas
cmp
mov
inc
in
ss
jae
aas
pop
lods
lea
pop
std
lea
jae
in
ss
jae
aas
pop
lods
lea
pop
std
lea
std
or
ss
jae
aas
pop
lods
lea
pop
std
lea
je
or
aas
pop
lock
pop
dec
or
mov
hlt
inc
mov
fwait
adc
xchg
mov
outs
or
lea
pop
hlt
mov
pop
dec
lea
aas
nop
in
arpl
lods
aas
pop
hlt
lea
pop
std
lea
pop
std
lea
std
jmp
(bad)
aaa
xor
push
movs
cmp
jle
lea
fdivrp
lock
pop
lods
lea
pop
std
lea
add
add
cmp
add
xlat
mov
add
ror
add
mov
cmps
add
out
cmp
movs
add
outs
stc
cwde
dec
pop
jg
mov
mov
(bad)
fwait
cdq
or
xor
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
retf
sar
push
and
or
in
dec
enter
pop
int3
adc
fstp
jle
ds
add
xor
inc
mov
int3
xor
call
jmp
pop
adc
inc
sti
addr16
pop
or
mov
mov
(bad)
sti
push
and
cmp
fs
inc
sub
push
ja
pop
sbb
adc
add
cmps
inc
adc
xchg
shl
push
pop
imul
(bad)
repz
xchg
enter
fdiv
aaa
fimul
fisub
dec
bnd
xchg
int3
(bad)
js
cmp
in
test
cs
repz
jecxz
idiv
mov
pop
mov
ins
jns
fs
push
shr
div
jl
in
and
rcl
pop
pop
mov
jbe
jl
out
fnstsw
mov
push
retf
adc
cmp
sbb
add
sub
pop
dec
jns
jle
dec
mov
test
scas
jb
je
add
ins
fcmovnb
sbb
out
js
ds
push
out
loop
popa
jmp
test
fwait
inc
jmp
xor
and
mov
test
jo
xor
push
add
hlt
push
shr
cmp
mov
dec
in
pushf
ret
mov
ret
mov
in
in
ret
in
in
lods
or
mov
sub
mov
(bad)
or
sbb
(bad)
call
mov
jg
test
in
test
mov
rol
out
mov
mov
ror
jecxz
mov
test
in
test
mov
jbe
mov
mov
in
test
aad
test
mov
mov
test
mov
sbb
call
ffreep
lea
test
mov
jg
mov
mov
in
test
aad
shl
mov
cld
mov
ins
sub
push
mov
(bad)
in
test
mov
aam
mov
inc
out
std
mov
in
test
test
test
mov
in
mov
js
mov
scas
mov
(bad)
pushf
rol
retf
mov
shl
ins
sahf
test
fadd
(bad)
mov
retf
cmp
stos
mov
mov
inc
rol
scas
mov
fadd
sti
fadd
ret
mov
mov
(bad)
mov
mov
dec
fsub
cdq
test
fcomp
test
test
ret
mov
test
mov
test
mov
test
mov
pop
mov
in
jle
mov
test
mov
(bad)
shr
dec
fiadd
shl
test
aad
js
mov
test
out
rol
(bad)
mov
mov
(bad)
mov
in
test
aad
test
mov
test
mov
imul
or
mov
(bad)
cmc
rol
sbb
jmp
(bad)
fcomp
test
test
test
mov
push
les
dec
mov
enter
popf
call
test
in
fcom
mov
mov
(bad)
jl
test
mov
mov
mov
sbb
fmul
(bad)
dec
in
mov
mov
test
test
aam
mov
pop
cmc
ins
test
(bad)
mov
rcl
mov
test
mov
rol
jecxz
add
lock
test
in
test
mov
test
in
test
mov
mov
cwde
mov
enter
mov
xor
xlat
and
fld
inc
push
mov
ror
jecxz
mov
test
in
test
mov
out
mov
test
mov
test
mov
test
mov
sbb
(bad)
cwde
fadd
sahf
mov
mov
enter
call
inc
and
test
pop
rol
(bad)
mov
test
cwde
fadd
sahf
mov
mov
call
dec
mov
inc
and
test
pushf
rol
(bad)
mov
test
cwde
fadd
jecxz
xor
in
jmp
ret
in
mov
mov
test
test
gs
mov
out
mov
test
(bad)
mov
test
mov
sub
cmp
test
test
test
fdiv
mov
in
mov
jmp
mov
jecxz
jl
dec
test
(bad)
mov
test
mov
nop
div
xlat
test
rol
test
xor
lods
das
adc
neg
test
in
test
mov
mov
mov
fisttp
cmp
test
xlat
mov
(bad)
and
sar
(bad)
and
rol
inc
mov
test
mov
test
mov
test
mov
mov
pushf
in
test
inc
rol
mov
mov
mov
lods
das
adc
neg
test
in
mov
mov
sbb
mov
xchg
test
cld
rol
mov
shr
shl
test
mov
aad
mov
cmp
mov
test
cld
rol
(bad)
mov
shl
out
test
aad
test
mov
lds
mov
shr
jl
or
mov
ins
out
fadd
adc
fadd
cmp
ja
inc
dec
rcr
mov
popa
pop
loopne
into
mov
mov
inc
into
cmp
push
pop
fs
retf
pusha
pusha
inc
call
and
or
xor
mov
jne
aas
xchg
pop
outs
hlt
adc
shr
push
nop
jnp
jns
sti
dec
stc
pusha
outs
cdq
mov
xchg
mov
adc
add
call
retf
in
rol
sahf
pop
xchg
inc
fnstenv
repnz
pop
(bad)
repz
(bad)
pop
dec
mov
adc
xchg
fs
(bad)
xchg
call
rcr
out
fs
mov
cmp
mov
mov
or
enter
les
and
enter
add
shr
jns
sbb
sub
pop
pop
jp
pop
ins
jno
jnp
adc
jb
fs
in
xor
out
pop
out
xor
jns
(bad)
lea
test
pop
loopne
mov
inc
cmp
lahf
xchg
or
jbe
or
dec
lock
pop
pop
push
cwde
inc
mov
cmps
push
cli
jne
sub
retf
jle
mov
mul
or
cmps
pop
scas
enter
cmp
jl
mul
push
sub
aam
or
fwait
xchg
les
enter
ret
pushf
ja
pusha
cmp
xchg
in
stc
sbb
add
nop
jb
sub
mov
dec
test
pusha
out
cmp
sahf
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
data16
cmp
imul
fnsave
add
inc
(bad)
lds
mov
ds
sub
out
xor
jg
add
sahf
or
add
pop
or
popa
cmp
imul
fnsave
add
inc
or
cmp
pop
imul
aad
pop
cmp
sahf
or
add
pop
or
cmp
scas
imul
aad
pop
cmp
sahf
or
lea
fcom
cli
sub
cs
je
mov
and
daa
or
xchg
pop
pop
or
retf
xor
jg
add
push
or
stc
sbb
imul
aad
pop
cmp
sahf
or
ins
test
shl
cmp
out
push
or
jle
add
daa
or
cmp
ret
scas
xchg
gs
mov
push
add
cmps
or
add
pop
or
add
cs
xor
mov
outs
inc
cmp
cmp
ds
add
or
retf
sub
cmp
push
add
jp
add
daa
or
mov
pop
or
call
xor
sbb
xor
dec
pop
pop
fwait
scas
xor
fbld
outs
and
xor
add
cmps
or
retf
sub
cmp
push
add
jp
add
daa
or
or
adc
add
ja
add
pop
lea
and
xor
data16
cmp
mov
outs
imul
fnsave
add
inc
or
add
pop
or
cmp
add
out
or
jne
pop
mov
gs
mov
and
mov
xor
add
daa
or
jp
push
mov
cmp
mov
jp
inc
ds
inc
call
add
jp
add
daa
or
and
aaa
jp
cli
xor
and
imul
shl
add
fimul
inc
gs
or
mov
push
pop
sub
and
cmp
outs
sub
xor
jle
cld
inc
outs
cmp
mov
mov
dec
jns
mov
xchg
and
cmp
(bad)
hlt
in
mov
mov
pop
shr
sbb
movs
cld
mov
int3
in
loope
push
test
xor
ret
gs
mov
ret
(bad)
test
retf
sub
jecxz
fdiv
mov
das
fs
ret
dec
cdq
mov
bound
cdq
pop
adc
aam
call
out
push
ja
arpl
call
ret
in
fcmovnb
fbld
xor
rol
mov
xchg
dec
hlt
je
ins
mov
retf
add
sbb
sbb
movs
ja
into
aam
js
dec
mov
sub
push
les
data16
mov
or
je
pop
iret
xchg
scas
and
out
mov
ret
ret
inc
or
cli
mov
jbe
imul
push
push
loop
cwde
lahf
mov
gs
ins
adc
iret
mov
outs
fcmovnbe
push
and
and
and
fnsave
sbb
jbe
aam
enter
aaa
sbb
stc
cmp
dec
cmp
inc
mov
aaa
fwait
inc
jns
fwait
mov
ss
sub
cmps
xor
mov
fiadd
jbe
add
test
daa
icebp
xchg
enter
fld
sub
push
int
push
fnstcw
inc
mov
daa
je
jmp
mov
fdiv
fnop
out
cmps
je
out
es
(bad)
out
es
(bad)
out
es
(bad)
out
es
(bad)
out
es
(bad)
out
es
(bad)
out
es
(bad)
out
cmp
adc
jb
mov
scas
cmps
(bad)
push
cli
jb
mov
in
push
push
sbb
aas
shr
pop
shr
out
shr
jge
jmp
inc
jmp
aam
cmps
cmp
idiv
test
jbe
hlt
jmp
cmp
jmp
cmp
cmp
cmp
jmp
aam
pop
cmp
std
xlat
pop
add
aaa
jle
std
mov
push
cwde
sti
pop
lods
mov
xlat
pop
xchg
std
xlat
pop
add
xlat
dec
add
mov
mov
and
pop
loope
and
xlat
pop
mov
std
xchg
lods
sar
pop
mov
(bad)
xchg
std
xlat
pop
add
fisttp
add
(bad)
stos
or
pop
or
inc
nop
fsubr
ficomp
cmp
xlat
pop
xor
xlat
pop
add
pop
or
dec
and
rcr
pushf
out
push
in
sahf
lds
xlat
pop
imul
xlat
pop
add
xchg
or
xlat
pop
fs
div
add
out
and
in
pop
int
xlat
pop
add
sub
add
bound
imul
mov
mov
pop
mov
std
push
xchg
sbb
cmps
cmp
pop
into
rcl
push
std
xlat
or
std
jmp
std
xlat
aas
add
push
or
out
es
(bad)
out
cmps
cmp
and
xlat
pop
add
jae
add
xlat
pop
or
xlat
pop
xor
xlat
das
add
scas
or
and
xor
xlat
pop
imul
xlat
pop
add
pop
jle
dec
out
mov
int
xlat
pop
add
xlat
pop
add
repnz
add
jge
ret
aaa
sar
inc
and
pop
fistp
cld
int3
xlat
pop
movs
std
inc
and
enter
dec
and
ficomp
into
rcl
push
std
jae
add
xlat
pop
or
xlat
pop
xor
xlat
pop
add
call
push
or
cmc
xlat
pop
imul
call
cmps
or
out
daa
cmp
fs
xor
xlat
pop
xor
movs
push
add
ficomp
fs
inc
and
call
and
pop
inc
cmp
rcl
push
jge
jge
into
xlat
pop
or
xlat
sysenter
jge
cmps
or
outs
and
(bad)
out
push
cmp
mov
xchg
cmp
movs
cmp
xlat
pop
fs
inc
and
call
and
pop
inc
cmp
rcl
push
jge
jge
into
xlat
pop
or
xlat
pop
xor
xlat
(bad)
jge
cmps
or
outs
and
(bad)
out
push
cmp
mov
xchg
cmp
xlat
pop
add
mov
pop
fcmovbe
pop
std
std
inc
and
call
and
pop
inc
cmp
rcl
push
std
xlat
pop
add
xlat
sub
std
jmp
std
xlat
pop
add
xlat
das
add
out
cmps
or
lods
push
cmp
shl
int
jmp
std
xlat
pop
add
call
jns
inc
mov
ds
inc
mov
inc
test
(bad)
cmc
xlat
pop
imul
xlat
das
add
mov
or
clc
jns
les
xor
jmp
cdq
lods
push
sbb
shr
popa
(bad)
xlat
pop
add
xlat
pop
add
cwde
or
out
xchg
imul
xlat
pop
add
xlat
pop
add
mov
add
aam
sbb
fwait
outs
mov
shr
imul
pop
push
std
xlat
pop
add
js
add
outs
push
add
jmp
sbb
js
les
jns
inc
mov
outs
in
and
mov
std
mov
or
push
and
retf
mov
std
ss
add
mov
outs
dec
pop
mov
jge
push
add
jne
add
pop
cmp
std
jge
add
dec
std
add
hlt
xlat
pop
xor
jo
add
hlt
xlat
pop
xor
jo
add
hlt
xlat
pop
xor
xlat
dec
add
ficomp
or
pop
add
xchg
add
xlat
lahf
add
std
xlat
dec
add
ficomp
or
xlat
pop
movs
std
push
and
pop
add
sbb
call
xchg
pop
cmp
(bad)
xlat
pop
(bad)
xlat
pop
add
xlat
pop
add
stos
inc
add
call
pop
xor
xlat
pop
add
in
jbe
movs
xlat
pop
sbb
xlat
pop
xor
xlat
pop
add
ret
mov
xlat
pop
mov
std
ins
xchg
pushf
ficomp
fs
cmp
ficomp
fs
xlat
pop
add
push
jle
jge
and
xlat
pop
cmp
std
xlat
pop
add
xchg
add
xlat
pop
push
std
js
add
xlat
pop
or
jge
push
add
xlat
pop
push
std
xlat
pop
add
xlat
dec
add
in
or
push
jge
fidivr
add
aam
jbe
lds
xchg
paddq
pop
xor
xchg
bound
xlat
pop
(bad)
xlat
pop
add
xlat
pop
add
push
and
call
xlat
pop
fs
stos
es
call
pop
xor
call
cmps
or
cmp
ficomp
into
rcl
push
std
xlat
pop
add
jno
add
xlat
pop
or
xlat
pop
xor
xlat
(bad)
jge
cmps
or
dec
pusha
les
stc
cmp
mov
xlat
pop
add
xlat
sub
std
jmp
std
xlat
pop
add
xlat
outs
add
jge
add
mov
std
std
xlat
pop
add
xlat
pop
add
out
es
xlat
pop
lods
hlt
xlat
pop
xor
xlat
pop
add
ss
jmp
std
xlat
pop
add
xchg
sub
fcomp
dec
xchg
xlat
pop
mov
mov
add
jmp
(bad)
xlat
pop
jmp
jge
es
ficomp
or
std
xlat
pop
add
xlat
imul
xlat
pop
fs
xlat
pop
add
xchg
inc
add
nop
mov
jge
and
scas
es
fs
xor
xlat
pop
xor
xlat
pop
add
movs
cmp
xlat
pop
fs
push
add
out
es
(bad)
out
cmps
cmp
and
xlat
pop
add
jno
add
xlat
pop
or
xlat
pop
xor
xor
lea
cmp
ficomp
fs
es
xlat
pop
lods
hlt
xlat
pop
xor
xlat
pop
add
mov
add
out
push
pop
(bad)
xlat
pop
xor
xlat
pop
add
xlat
jg
jge
cli
add
(bad)
jmp
std
xlat
pop
add
xlat
pop
add
out
push
add
mov
pop
imul
jno
add
hlt
xlat
pop
xor
xlat
pop
add
in
jbe
mov
(bad)
cli
xchg
aaa
jne
imul
xlat
pop
xor
xlat
pop
add
xlat
imul
mov
dec
sbb
lods
iret
xlat
pop
lods
hlt
xlat
pop
xor
xlat
pop
add
mov
(bad)
or
and
movs
xlat
lahf
dec
repnz
pop
fs
jle
lea
cmp
ficomp
fs
es
xlat
pop
lods
hlt
xlat
pop
xor
mov
add
out
push
pop
(bad)
xlat
pop
xor
xlat
jg
jge
cli
add
(bad)
jmp
std
xlat
pop
add
out
push
add
mov
pop
imul
jno
add
hlt
xlat
pop
xor
xlat
pop
add
jmp
adc
push
cmp
out
cmps
push
(bad)
xlat
pop
lods
std
xlat
pop
add
adc
add
sahf
arpl
pushf
jle
loope
out
xchg
ins
(bad)
xlat
pop
xor
xlat
pop
add
mov
(bad)
or
and
movs
xlat
lahf
dec
repnz
pop
fs
xlat
pop
add
test
add
(bad)
mov
mov
jp
xchg
mov
xor
mov
jle
pusha
dec
imul
(bad)
sbb
jbe
test
push
ins
mov
push
enter
rcl
or
(bad)
cld
scas
int3
adc
jbe
in
retf
(bad)
and
mov
les
outs
xor
pop
hlt
sti
or
sbb
mov
cmps
ds
mov
addr16
and
mov
(bad)
pop
(bad)
inc
xchg
inc
xchg
sbb
ror
mov
pop
pop
push
sbb
adc
popa
or
sbb
int
mov
pop
pop
sbb
jbe
or
ret
sbb
jo
stc
test
pop
mov
enter
pop
aam
cmp
fild
jnp
pop
dec
push
add
mov
adc
js
cmp
push
jg
idiv
inc
mov
mov
sbb
ja
(bad)
(bad)
push
pop
std
(bad)
pusha
mov
ret
or
mov
cmps
out
(bad)
enter
adc
and
(bad)
aam
sbb
lahf
daa
cmp
ret
sbb
fsubrp
xchg
mov
int
call
jbe
js
dec
cmp
and
push
pop
test
add
in
xchg
fdivr
sub
sbb
adc
sbb
pop
mov
sub
ja
inc
imul
pop
ret
mov
(bad)
scas
or
cmp
fstp
jnp
into
jmp
retf
mov
ja
sti
push
ja
repnz
add
jb
pop
push
mov
sbb
call
push
ja
sti
push
ja
repnz
aaa
pop
repnz
in
dec
add
dec
ds
xchg
mov
xor
xor
xlat
push
(bad)
xor
sub
js
cmp
ja
repnz
ja
repnz
ja
jb
mov
mov
repnz
push
pop
bnd
push
adc
push
out
outs
rcl
push
jp
ds
and
outs
js
cmp
push
ja
repnz
pop
pop
jb
xchg
push
fwait
or
idiv
ds
pop
fwait
jecxz
cld
nop
mov
adc
int
dec
lahf
movs
push
ja
repnz
ja
repnz
ja
repnz
pop
xchg
daa
imul
and
ss
dec
push
xlat
adc
int
dec
lahf
movs
push
ja
repnz
ja
repnz
push
pop
bnd
push
adc
push
out
outs
rcl
push
sub
and
outs
js
cmp
push
ja
repnz
ja
jb
push
pop
xchg
and
add
jp
lahf
aas
jg
out
sahf
and
sbb
int
and
iret
push
ja
repnz
ja
repnz
pop
xchg
daa
imul
jg
push
xchg
pop
retfw
xchg
daa
imul
and
xor
push
ja
repnz
addr16
jb
retf
sbb
xor
ja
jb
ds
addr16
lods
add
push
ja
sti
push
ja
bnd
pop
mov
mov
pop
sub
(bad)
fsub
pop
sub
retf
adc
fwait
je
push
and
cmp
fdiv
popa
add
dec
cmp
mov
inc
clc
fs
inc
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
(bad)
cmp
push
sti
loopne
or
xor
push
mov
les
scas
(bad)
dec
fdiv
push
mov
(bad)
retf
retf
fwait
pop
adc
fild
std
aaa
out
leave
jp
mov
dec
js
not
call
xor
mov
mov
inc
lock
push
xor
and
sbb
(bad)
cld
call
iret
xchg
sub
add
(bad)
mov
xabort
and
cwde
push
mov
arpl
inc
or
movs
arpl
jns
fcomip
jge
sbb
push
sub
stc
lods
shl
xchg
pop
push
sub
mov
pop
sbb
sub
add
into
and
mov
mov
cmp
mov
pop
push
mov
pop
mov
mov
push
push
sbb
loopne
jns
mov
out
and
inc
stos
sbb
test
xchg
sub
aaa
mov
(bad)
xchg
xor
mov
sub
mov
adc
pop
sbb
cmp
xchg
xchg
adc
lea
xchg
sar
add
fld
aam
or
adc
dec
mov
push
retf
adc
loope
imul
push
lock
mov
jo
pop
fs
cmp
push
ds
lock
inc
jo
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
pop
xchg
inc
je
xor
stos
sub
xor
push
outs
push
mov
fmul
sahf
dec
adc
fst
jg
repnz
bound
jg
bound
jg
stos
sub
bound
jg
bound
xor
retf
pop
pop
sub
fbstp
in
pop
pop
jg
(bad)
jg
push
sub
bound
inc
inc
ins
jo
dec
and
jg
bound
sbb
ins
test
inc
imul
pop
jo
dec
and
jg
bound
inc
inc
ins
into
jbe
inc
pop
push
lods
mov
jns
push
ins
jg
repnz
bound
jbe
xchg
mov
pop
and
je
add
pop
imul
dec
mov
stos
xor
sbb
jbe
pop
div
inc
add
add
jg
mov
dec
push
sub
popw
jg
add
jg
bound
pop
sub
fbstp
mov
movlps
dec
jmp
jg
bound
inc
inc
bound
dec
inc
stos
ror
jbe
imul
hlt
pop
xor
jo
inc
sbb
pop
or
stos
in
jo
and
hlt
pop
or
imul
leave
pop
adc
push
stos
dec
and
inc
add
xchg
je
jg
mov
sub
inc
sub
int3
jnp
push
push
inc
sbb
jnp
dec
inc
inc
jmp
jg
adc
gs
fs
pusha
imul
lods
jae
jg
mov
or
data16
imul
push
inc
sbb
jnp
dec
inc
inc
jmp
jg
inc
sub
bound
jns
push
lahf
push
inc
jnp
inc
rcl
dec
inc
sub
bound
inc
add
and
mov
or
push
sub
movlps
pop
and
push
sub
loopne
nop
mov
jnp
sbb
das
fwait
std
sbb
das
pop
adc
jg
stos
sub
bound
jg
bound
inc
push
ins
mov
icebp
ins
xor
or
dec
jbe
test
jg
xor
inc
add
mov
xchg
push
bound
mov
dec
push
sub
bound
push
inc
arpl
data16
cmp
mov
jns
stos
mov
leave
in
jmp
bound
sbb
test
and
xchg
jns
sub
bound
jg
bound
inc
shr
dec
inc
stos
enter
jns
gs
jg
mov
sub
je
or
jmp
jbe
test
jg
xor
mov
je
mov
push
jmp
push
and
mov
pop
adc
push
xchg
pop
inc
inc
or
jo
inc
adc
inc
not
inc
jo
into
inc
lock
cs
sti
sub
bound
jg
bound
inc
inc
inc
xchg
popa
jae
adc
pop
pop
sbb
and
hlt
pop
mov
(bad)
jg
push
stos
popa
jae
adc
ja
add
sahf
mov
dec
mov
mov
jge
dec
jmp
fistp
sub
arpl
rcl
inc
mov
dec
inc
jo
dec
push
stos
adc
push
xchg
inc
push
or
inc
rcr
jae
adc
ja
add
sahf
mov
dec
out
mov
or
jg
push
stos
xor
mov
push
ja
add
sahf
mov
dec
mov
mov
js
dec
imul
dec
bound
mov
adc
pop
pop
out
cmp
out
sti
xchg
lds
dec
push
and
sbb
pop
arpl
aad
sbb
lds
add
sub
mov
jns
stos
dec
lock
xor
jbe
test
jg
xor
jmp
sub
jb
fistp
lock
inc
inc
sbb
push
inc
push
pop
mov
adc
adc
bound
inc
lock
push
adc
inc
lock
shr
or
jo
adc
push
pop
adc
jbe
test
jg
xor
jg
bound
jg
bound
inc
shr
dec
adc
jg
bound
ja
addr16
push
jo
adc
pop
and
push
sub
arpl
das
movlps
je
push
ja
mov
test
jg
xor
jbe
fwait
adc
push
sub
je
mov
push
and
sahf
arpl
rcl
sahf
ret
add
dec
mov
inc
cmp
pop
mov
or
jg
stos
sub
bound
mov
ins
adc
dec
imul
dec
bound
mov
bound
and
dec
jmp
jg
bound
jg
bound
inc
jo
dec
xchg
xor
mov
cmps
pop
and
dec
sub
jg
bound
mov
imul
mov
test
and
mov
jns
stos
es
ins
ja
adc
inc
push
fbstp
inc
rcr
inc
rcr
jae
adc
ja
add
sahf
mov
dec
mov
mov
jg
dec
imul
dec
bound
iret
jbe
sub
ins
sbb
jg
mov
dec
push
sub
bound
les
sbb
adc
pop
push
sbb
sbb
inc
sbb
hlt
jle
pop
or
pop
sbb
les
cmps
dec
inc
add
adc
pusha
inc
dec
outs
sub
lsl
pop
into
mov
lods
in
cmc
pop
outs
repz
push
sbb
(bad)
fild
or
arpl
pop
in
jae
fs
sbb
or
(bad)
aad
dec
xchg
jo
dec
fsubr
sbb
jo
ins
imul
das
test
gs
leavew
xor
mov
pushf
adc
xchg
cmp
stc
add
adc
xlat
int3
arpl
mov
and
xchg
pop
dec
push
xor
inc
push
out
mov
outs
add
jp
bnd
cld
adc
pop
pop
mov
jge
stc
iret
jae
push
mov
jp
and
inc
fptan
daa
call
aam
dec
enter
sbb
retf
outs
or
mov
or
sahf
jmp
out
fs
sub
cld
daa
mov
mov
and
pop
(bad)
imul
mov
sbb
add
push
aas
cld
fistp
inc
mov
aaa
pop
lock
or
test
stc
push
in
sbb
mov
mov
cmp
jno
mov
ins
or
push
mov
sti
mov
aaa
fwait
lahf
inc
cmp
or
mov
aam
jbe
cld
or
mov
sti
movs
(bad)
push
sub
jmp
int3
mov
pop
(bad)
push
lds
jne
pop
dec
into
in
sbb
cs
test
ins
lahf
in
clc
out
jle
jns
fdivrp
clc
dec
out
sub
dec
cs
test
outs
sub
aas
push
int3
sbb
out
adc
and
and
mov
mov
and
and
sbb
das
loop
mov
loopne
sahf
jmp
sbb
adc
sbb
adc
jbe
test
and
and
dec
sub
push
sub
pop
push
sub
iret
sbb
adc
push
xor
mov
call
mov
loopne
mov
mov
and
and
inc
mov
mov
mov
(bad)
and
and
inc
iret
and
sub
loopne
mov
mov
and
and
pop
(bad)
lods
mov
push
les
mov
sbb
sub
jmp
cmps
cld
pop
sub
inc
mov
popf
inc
mov
mov
fstp
das
inc
mov
xchg
push
pop
push
cmp
dec
xchg
cli
imul
inc
sub
out
inc
leave
dec
lahf
in
icebp
pop
mov
push
in
sub
aad
je
mov
mov
(bad)
sub
repnz
mov
mov
retf
leave
ror
test
(bad)
sti
adc
sub
std
(bad)
mov
mov
pop
dec
je
pop
iret
ror
stos
out
cmc
(bad)
push
xchg
xor
jns
sub
xor
xchg
jnp
or
fs
mov
or
mov
pop
push
mov
stos
sbb
push
xor
call
sub
les
sub
mov
jbe
iret
xchg
push
push
mov
in
loop
aam
sub
lahf
cmps
in
retf
and
pop
jbe
pop
xchg
mov
mov
bnd
push
in
adc
(bad)
xchg
jno
pop
ins
add
mov
ret
and
lahf
sbb
call
loope
test
jno
pop
test
scas
loop
popa
fist
or
enter
lods
ja
imul
ja
not
addr16
push
dec
mov
push
fist
cmp
push
jo
inc
mov
xchg
or
lock
popf
fidiv
mov
add
out
imul
jnp
test
lahf
fistp
cwde
pop
mov
pop
sbb
mov
pop
sbb
cmp
test
and
es
add
mov
adc
mov
cli
cs
dec
push
jne
mov
adc
and
and
cmp
sbb
pop
sub
mov
jbe
(bad)
add
shl
mov
and
es
sub
gs
fiadd
(bad)
fiadd
sbb
mov
mov
sbb
sub
and
xor
and
fist
aas
jno
(bad)
(bad)
fiadd
sbb
mov
imul
mov
cmps
idiv
jae
and
jecxz
popa
fsub
ret
pop
sbb
pop
pop
sub
fsin
push
xchg
jo
pop
sbb
cmp
and
push
jns
mov
jecxz
sbb
clc
dec
sbb
pop
std
push
jg
and
mov
xor
and
xchg
shl
repnz
jnp
jno
cli
pop
sar
mov
jg
in
jno
mov
push
call
lods
lods
cmc
jbe
lahf
jnp
pop
mov
jg
pop
test
pop
lds
pop
cmp
cmp
jg
pop
test
pop
test
fnsave
jo
xor
enter
dec
in
inc
sbb
jg
fnsave
call
mov
jbe
test
pop
test
fucom
inc
icebp
sbb
mov
pusha
test
pop
test
pop
adc
sbb
add
dec
in
inc
sbb
dec
icebp
pop
fcmovnb
div
(bad)
into
mov
arpl
pop
test
fstp
mov
test
pop
test
pop
cmp
cmp
jg
pop
test
pop
test
icebp
pop
mov
inc
or
xor
pusha
dec
xchg
jo
jno
sub
mov
sti
test
sub
push
dec
fild
(bad)
push
shl
sub
mov
jp
push
clc
out
aas
xchg
cdq
jge
jge
push
js
pop
adc
das
nop
in
inc
push
adc
or
(bad)
fidiv
jnp
mov
sub
scas
mov
dec
enter
(bad)
push
mov
sbb
(bad)
sbb
adc
lods
aas
and
ja
or
jae
not
or
lock
neg
pop
or
hlt
jecxz
push
add
(bad)
repz
xor
and
loop
ret
jmp
inc
cmp
add
mov
into
stc
cmp
mov
mov
test
aam
rol
or
xchg
push
pop
ins
add
cmp
inc
js
or
movs
mov
dec
push
pusha
stos
inc
mov
ja
or
jo
push
test
jecxz
cmp
imul
pop
int
cli
popa
pop
js
inc
mov
out
fbld
je
mov
out
mov
cmp
call
cmp
scas
pop
adc
test
std
jnp
jmp
sar
pop
fcomp
ds
fcomp
cs
sub
jle
fmul
mov
pop
enter
push
xchg
retf
pop
cdq
pusha
pop
fmul
xor
pop
pop
xchg
cmp
pop
fcomp
outs
and
(bad)
leave
mov
popaw
adc
data16
pop
data16
xchg
(bad)
gs
pop
data16
pop
data16
pop
outs
mov
jb
sub
jle
fdiv
push
rcl
data16
pop
data16
pop
data16
inc
mov
adc
data16
xchg
(bad)
gs
pop
data16
pop
aaa
xchg
cmps
xchg
push
xor
test
ds
pop
data16
pop
shl
data16
pop
data16
xchg
clc
cmps
data16
scas
mov
data16
pop
data16
pop
ret
cmp
data16
pop
aaa
xchg
cmps
xchg
push
xor
test
ds
pop
data16
xchg
pushf
cmps
daa
data16
pop
data16
pop
data16
dec
fcomp
fistp
ret
pop
mov
data16
pop
data16
pop
out
cmps
pop
data16
push
rcl
popa
cmps
pcmpgtd
xchg
pop
xchg
cmps
pop
cmp
outs
add
outs
fnstcw
xor
push
push
data16
pop
data16
pop
xchg
cmps
pop
mov
sar
les
data16
pop
xchg
cmps
pop
pop
pop
scas
outs
cwde
push
daa
pop
data16
pop
ret
cmp
data16
pop
outs
mov
loop
outs
loope
ds
pop
data16
pop
aad
cmps
icebp
mov
loope
pop
data16
xchg
call
pop
pop
daa
xchg
cmps
pop
adc
scas
inc
popaw
cmps
push
data16
pop
data16
pop
add
mov
ds
pop
data16
xchg
mov
mov
data16
pop
out
cmps
xchg
lods
and
sahf
pop
data16
mov
inc
data16
xchg
fsub
outs
fist
popf
inc
data16
xchg
pushf
cmps
daa
popaw
mov
xchg
outs
popa
and
pop
data16
xchg
cmps
inc
iret
xchg
ds
xchg
jns
pop
outs
push
cmps
(bad)
mov
adc
outs
popa
xchg
jnp
loope
pop
data16
xchg
jmp
daa
pop
data16
pop
cmps
fbld
dec
pop
call
xchg
xor
loope
pop
data16
pop
data16
xchg
bound
scas
mov
pop
jns
inc
pop
call
xchg
pop
data16
pop
pop
scas
cmps
xor
loope
xchg
cmps
xchg
movs
sahf
imul
fimul
data16
pop
pandn
data16
pop
shl
data16
pop
data16
xchg
cmps
inc
movs
scas
or
retf
loope
push
data16
pop
data16
xchg
fsub
ds
pop
call
pop
data16
pop
data16
pop
outs
popa
cmps
cmp
out
data16
pop
(bad)
lock
pop
data16
pop
data16
pop
data16
xchg
enter
add
and
sahf
pop
data16
pop
fwait
call
daa
pop
data16
xchg
popf
cmps
pop
popaw
scas
pop
(bad)
lock
pop
data16
pop
data16
xchg
clc
cmps
out
add
and
sahf
pop
data16
pop
fwait
call
daa
pop
data16
pop
shl
data16
pop
data16
xchg
call
scas
outs
fist
xchg
inc
data16
pop
data16
pop
data16
pop
ret
cmp
data16
pop
data16
xchg
mov
(bad)
dec
sub
pop
jg
xchg
jp
loope
ds
pop
data16
xchg
popa
adc
data16
pop
ret
cmp
data16
xchg
popa
scas
pop
data16
pop
jecxz
cmps
or
loope
push
data16
pop
mov
mov
push
data16
pop
data16
pop
pop
cwde
cmps
jns
lahf
imul
pop
pop
lea
hlt
sahf
sbb
(bad)
ds
pop
data16
pop
data16
xchg
cmps
pusha
comiss
push
pop
out
cmp
pop
fcom
push
data16
pop
data16
xchg
fisttp
pop
fcomp
ds
pop
data16
xchg
cwde
cmps
data16
scas
cdq
mov
loope
pop
data16
pop
data16
pop
ret
add
push
data16
pop
data16
xchg
scas
ds
pop
data16
pop
jae
cmps
inc
pop
call
xchg
pop
data16
xchg
sbb
cs
data16
pop
pop
fsub
ds
pop
data16
xchg
mov
scas
cdq
add
int
data16
pop
data16
pop
out
cmps
pop
data16
push
data16
pop
shl
data16
pop
data16
xchg
test
data16
add
and
sahf
pop
out
cmps
pop
data16
or
loope
xchg
popa
scas
pop
data16
pop
outs
loope
push
data16
pop
data16
pop
data16
xchg
mov
adc
data16
pop
data16
xchg
call
push
jnp
loope
pop
data16
pop
xchg
cmps
ds
test
ds
xchg
cmps
mov
add
addr16
xchg
cmps
pop
pop
pop
lods
xor
mov
popa
popa
pop
data16
pop
data16
cwde
mov
adc
data16
pop
ret
cmp
data16
pop
shl
data16
push
data16
xchg
cmps
jp
loope
pop
(bad)
mov
cmps
and
fiadd
data16
pop
data16
pushf
and
push
popaw
adc
data16
pop
data16
pop
ret
cmp
data16
xchg
cmps
cmp
addr16
jecxz
cmps
or
loope
push
mov
mov
push
data16
pop
pop
cwde
cmps
jns
lahf
imul
pop
pop
(bad)
fild
hlt
sahf
jns
fdivr
ds
pop
out
cmps
xchg
js
inc
mov
scas
dec
pop
mov
(bad)
call
xchg
pop
data16
xchg
xchg
cmps
aaa
outs
popa
scas
ds
pop
sub
fsubr
pop
pop
fcomp
sbb
mov
pop
pop
cs
pop
call
xchg
repnz
xchg
dec
pop
fmul
scas
icebp
cwde
sahf
push
pop
fcomp
mov
pop
call
xchg
retf
dec
cdq
loopne
into
mov
pop
int
sti
daa
rcr
popa
xor
data16
pop
call
push
data16
pop
add
cmps
inc
pop
sbb
or
cs
dec
xchg
cs
fcom
inc
pop
push
icebp
hlt
xchg
mov
mov
xor
xor
cmp
test
pop
test
pop
add
inc
test
sbb
je
enter
sahf
push
test
inc
pop
test
pop
fs
icebp
jge
push
stc
cmp
(bad)
sub
repnz
enter
adc
xor
fnstsw
xor
jns
mov
stc
ret
mov
xchg
imul
add
xlat
xlat
in
sahf
sbb
inc
mov
mov
adc
cmp
push
popa
sbb
inc
push
pop
mov
es
jbe
mov
or
dec
and
mov
add
clc
or
and
jge
test
scas
ret
mov
mov
dec
arpl
or
sbb
shl
(bad)
push
aam
or
mov
rcl
pop
fbstp
jmp
xor
fidiv
and
add
sbb
dec
add
call
jge
adc
stc
cmp
ins
push
adc
rcl
cmp
add
xor
lock
cwde
pop
out
(bad)
jmp
adc
or
fnstcw
xchg
aam
scas
scas
mov
jnp
push
or
sub
push
sub
scas
aaa
push
imul
mov
push
arpl
pop
sbb
aam
xor
xchg
pop
xor
hlt
stos
imul
jecxz
shr
shr
and
push
rol
xchg
mov
jecxz
enter
ror
movs
imul
gs
inc
mov
push
shr
shr
ror
push
shr
out
jecxz
enter
iret
pop
push
bound
gs
pop
jbe
push
jmp
rol
rcr
shr
mov
addr16
imul
shr
iret
imul
jmp
bound
mov
js
rcl
push
rcr
inc
push
push
ror
pop
shr
ror
push
shr
mov
arpl
mul
cmp
clc
push
cdq
stos
leave
sbb
enter
shr
push
shr
enter
shr
leave
imul
push
push
ror
hlt
shr
push
inc
arpl
push
shr
shr
jmp
sub
popf
push
popa
mov
dec
pop
xor
add
pop
out
and
xchg
inc
or
dec
out
mov
imul
push
pop
test
pop
test
fstp
inc
clc
fs
inc
enter
enter
mov
(bad)
bound
adc
pop
pop
test
fnstsw
jnp
cmp
mov
xchg
pusha
mov
push
js
sbb
jno
ret
jmp
ret
adc
sub
dec
sar
pop
mov
sub
push
imul
frstor
xlat
(bad)
pcmpeqw
inc
push
es
push
cmp
or
or
add
enter
fs
mov
sbb
and
pop
push
dec
ja
aas
and
imul
cmp
stc
sbb
add
cmps
(bad)
jle
in
movs
cmps
mov
add
xchg
loopne
mov
aaa
push
stc
jg
adc
aam
and
fs
dec
js
imul
scas
mov
popa
jnp
sub
fs
sbb
jmp
sub
ins
xor
cmp
(bad)
outs
fild
jbe
(bad)
(bad)
stos
bnd
setnp
mov
cwde
xchg
retf
jb
and
jl
addps
lock
or
js
sub
std
ins
pop
push
stc
pop
and
sti
add
pop
mov
and
aas
imul
pop
or
sub
test
lods
fwait
cmps
pop
cmp
movs
gs
pop
movs
scas
mov
popa
fld
std
sti
inc
pop
mov
mov
mov
fild
sbb
inc
jno
cmp
pop
out
fistp
xor
vmptrst
or
idiv
ins
sbb
lods
stos
inc
jae
and
sub
les
cli
(bad)
movs
ret
stc
enter
retf
adc
les
pop
mov
ret
int
sbb
(bad)
repnz
(bad)
call
sti
jmp
scas
or
ins
std
les
mov
scas
call
or
xor
ins
mov
mov
(bad)
pop
test
pop
gs
pop
mov
jae
fs
rcr
or
mov
jg
pop
loopne
icebp
sbb
test
pop
test
pop
test
pop
(bad)
gs
je
ins
xor
mov
jg
pop
test
pop
test
icebp
pop
loopne
neg
test
pop
test
pop
movs
push
icebp
(bad)
pop
std
jmp
jg
sbb
jg
fnstsw
jg
push
test
pop
inc
mov
mov
test
pop
addr16
outs
test
push
test
fucom
add
sbb
mov
pusha
test
fld
icebp
or
inc
jbe
mov
pusha
enter
ins
mov
test
push
pop
test
fnsave
adc
gs
(bad)
inc
jns
inc
test
pop
mov
ret
pop
inc
call
and
or
fs
dec
enter
dec
pop
mov
dec
cmps
ins
mov
pop
fcmovu
adc
push
mov
jp
dec
xchg
mov
jno
dec
fsubp
adc
std
xchg
out
pop
xor
arpl
mov
pushf
repnz
xchg
jnp
pop
cmp
or
(bad)
xor
mov
mov
sub
es
mov
ret
lea
fcmovu
fnsave
mov
mov
adc
aam
jns
pop
or
mov
lock
inc
mov
cmps
fwait
mov
xor
sbb
cmp
call
inc
outs
jnp
pop
or
jno
retf
cdq
(bad)
fisttp
push
sbb
add
imul
inc
(bad)
loopne
bound
(bad)
adc
pop
mov
test
mov
hlt
sbb
sbb
rcl
mov
int
sub
sbb
les
gs
movs
mov
into
aam
mov
out
inc
pop
jb
sbb
neg
mul
test
aaa
push
not
inc
mov
fs
cmp
fcomip
push
imul
aaa
rcl
mov
neg
mov
popa
xchg
ret
mov
cld
lds
jno
push
or
jno
scas
add
fsubr
arpl
jo
sbb
cs
call
gs
dec
clc
xchg
jecxz
pop
push
out
in
mov
sbb
xor
rcr
dec
in
inc
sbb
push
icebp
mov
or
xlat
pusha
dec
push
xchg
popa
mov
add
sub
xchg
adc
add
xchg
add
sar
sub
adc
(bad)
pop
jns
test
inc
mov
jecxz
out
ficomp
inc
and
inc
shl
cmp
ret
push
and
out
repz
call
shl
mov
fs
shr
not
retf
out
sub
sbb
ret
jbe
jl
enter
jb
call
test
not
fs
inc
sar
cmp
ja
iret
hlt
xor
cwde
addr16
retf
sbb
pavgb
sbb
test
xchg
ret
push
sub
and
push
push
in
aaa
push
jbe
mov
add
xchg
sbb
outs
fcomip
(bad)
in
mov
or
fsub
test
cmp
mov
adc
push
(bad)
stc
xor
aam
push
pop
pushf
js
sti
adc
cmp
or
aam
cmp
pop
ins
inc
xor
lea
mov
mov
retf
xchg
and
bound
dec
mov
inc
xchg
sbb
rcr
shl
ficomp
rol
sbb
inc
fimul
xlat
inc
leave
fsqrt
add
mov
inc
push
inc
leave
fwait
les
xchg
(bad)
inc
xlat
adc
sbb
inc
pop
xor
mov
sbb
push
sbb
dec
pop
inc
nop
adc
sbb
dec
pop
xchg
push
fisub
jmp
mov
push
jae
and
add
and
jl
sub
pusha
fisub
jmp
mov
shl
sub
xchg
(bad)
fsubrp
mov
inc
xlat
inc
inc
imul
mov
out
dec
jg
sub
fisub
jmp
and
out
and
leave
out
jmp
sbb
xor
and
or
and
jns
inc
mov
or
sbb
adc
push
xchg
inc
out
out
mov
sbb
rcr
ret
inc
xchg
sbb
jbe
or
aas
fisubr
push
inc
test
jecxz
fisubr
push
add
fwait
les
xchg
mov
fiadd
adc
mov
push
push
or
inc
push
iret
mov
sbb
or
ret
pop
or
adc
sbb
sub
mov
or
fs
dec
dec
sbb
inc
xor
inc
sbb
enter
enter
enter
enter
enter
enter
enter
rcr
or
mov
mov
xlat
pop
test
pop
jmp
div
(bad)
into
xor
dec
jp
inc
test
fnsave
jg
test
pop
add
inc
test
jne
cmp
push
xlat
pusha
dec
push
xchg
ins
mov
data16
sbb
jle
push
jns
push
inc
xchg
inc
jo
mov
fisubr
jns
dec
adc
xchg
xor
hlt
in
cmp
mov
aas
jmp
mov
inc
aaa
sbb
arpl
or
in
fsub
loope
pop
or
lea
pop
ds
int3
dec
mov
jbe
or
pop
lock
(bad)
out
aaa
or
or
cwde
adc
div
push
fwait
retf
jecxz
sbb
ja
ss
icebp
mov
stos
push
push
pop
les
int
push
jbe
fs
shr
and
cmps
pop
push
js
xor
adc
repz
xchg
cmps
cld
xchg
sar
mov
in
jl
adc
sbb
mov
sbb
xchg
ins
add
in
inc
mov
pop
scas
push
ins
pop
lods
retf
or
mov
lahf
mov
push
jb
ins
fsub
adc
adc
sub
and
add
dec
push
jmp
mov
aaa
aad
mov
xlat
cld
dec
mov
pop
fild
mov
and
mov
push
mov
movs
xor
dec
mov
push
(bad)
mov
idiv
and
pop
fwait
add
xchg
mov
push
test
aaa
fdiv
aam
leave
sub
and
sub
and
sub
and
sub
and
addr16
jnp
jo
daa
retf
or
sub
mov
pop
je
daa
xchg
sub
imul
dec
xor
xchg
test
ja
jae
leavew
sub
mov
leave
sbb
and
push
outs
and
adc
pop
sbb
pop
sbb
adc
test
sbb
adc
pop
call
push
push
int
pusha
inc
lock
pop
sbb
lods
push
mov
jo
je
sub
cmp
adc
imul
int
cmp
leave
sbb
and
push
jnp
fs
and
sub
push
mov
or
and
jnp
je
daa
xchg
sub
jmp
fnstcw
jg
aaa
and
(bad)
mov
cli
jae
arpl
xor
fnstcw
bound
jae
jae
pop
xor
int
pusha
cld
mov
mov
dec
xor
div
xchg
cld
dec
mov
out
mov
mov
(bad)
pop
add
jg
pop
test
fstp
mov
cmp
pop
xlat
pusha
dec
push
cdq
fs
and
sub
push
and
xchg
xlat
dec
lods
out
aad
rol
stos
mov
xchg
sub
leave
icebp
ja
nop
sti
neg
add
jo
pop
js
in
pop
push
jmp
(bad)
mov
push
cmp
sbb
(bad)
call
mov
ret
call
fld
jge
inc
clc
call
retf
mov
sbb
lods
xlat
mov
add
jge
pusha
push
jns
sbb
mov
das
inc
mov
pop
aam
imul
iret
adc
adc
adc
pop
mov
inc
dec
out
inc
enter
jge
fs
shl
addr16
ja
and
(bad)
xlat
jecxz
or
mov
call
add
jbe
mov
call
or
jl
mov
pop
cmps
and
hlt
xchg
test
xor
mov
ja
fcomip
ss
adc
es
cmp
cmc
cmc
cdq
ret
mov
loop
call
push
push
or
push
test
repnz
jnp
cmp
in
jns
sbb
movs
xor
mov
fcomi
and
inc
test
in
daa
jno
in
push
jg
in
loop
sbb
loop
mov
or
(bad)
sbb
xchg
jnp
mov
jg
push
bound
push
call
mov
sbb
in
jnp
in
mov
pop
cli
adc
ins
jmp
fsub
mov
and
mov
ja
aad
inc
and
fild
in
inc
(bad)
fnstsw
sub
adc
aad
inc
mov
mov
and
call
and
out
repnz
ins
push
or
fsub
xor
aas
sbb
mov
mov
loop
sbb
in
sub
dec
sbb
mov
cmp
sbb
out
cwde
stos
xchg
pop
sbb
mov
xor
fmul
mov
cwde
mov
or
mov
call
ret
out
mov
inc
call
mov
imul
lods
jecxz
jnp
fiadd
and
cmp
enter
sub
addr16
fist
sbb
mov
sub
mov
int3
xor
lock
mov
xor
shr
inc
daa
add
in
pop
adc
mov
mov
or
push
add
sbb
rcl
div
and
add
std
mul
jns
mov
push
push
sbb
out
(bad)
mov
(bad)
fidiv
call
test
xchg
jne
ror
push
sub
shr
and
(bad)
adc
mov
add
jnp
sbb
(bad)
push
and
not
push
ins
sbb
and
ss
mov
inc
aam
xchg
push
sub
cmp
or
fwait
jb
scas
ret
pop
or
push
sub
stos
cmp
or
pop
xchg
es
(bad)
dec
xchg
push
nop
add
fnstcw
inc
mov
xchg
jl
mov
pop
pop
or
xor
adc
inc
iret
aaa
sahf
fist
sub
test
mov
dec
pop
mov
jae
mov
jae
mov
jae
in
xor
jnp
popf
inc
out
inc
mov
daa
xchg
push
mov
je
sub
jmp
call
(bad)
jnp
mov
jecxz
sub
jne
icebp
xor
add
mov
jno
(bad)
pop
jae
add
int3
add
jg
aas
lea
aas
cwde
inc
dec
jg
jbe
push
lea
aas
lea
mov
popf
inc
dec
inc
mov
daa
xchg
cld
add
inc
push
jno
mov
repz
clc
push
jae
add
inc
pop
movs
(bad)
or
add
and
mov
xor
push
push
jnp
jmp
xor
xchg
pop
test
and
adc
push
mov
gs
xor
sbb
cmps
cld
jns
cmps
xchg
mov
sub
mov
adc
cmp
loopne
out
daa
push
mov
jae
dec
mov
cmp
fisub
xchg
inc
xor
je
sbb
lods
push
nop
jmp
push
and
or
in
inc
enter
pop
int3
add
in
fnstenv
mov
in
(bad)
sbb
mov
test
(bad)
mov
dec
jle
mov
cmp
add
sbb
inc
xchg
jno
sbb
cli
(bad)
mov
out
idiv
(bad)
mov
sbb
popf
imul
(bad)
data16
push
test
add
jnp
pop
sbb
(bad)
aam
ins
mov
fstp
push
mov
jle
das
fcomip
jp
or
pusha
sub
jne
pop
fbstp
jnp
fldenv
aad
jp
and
xchg
rol
pop
js
adc
pop
pop
sub
add
(bad)
sbb
xor
mov
aam
pop
ja
mov
test
jmp
and
not
and
sbb
mov
pop
or
dec
jo
mov
fwait
aam
jp
scas
ret
fninit
ret
pop
adc
retf
add
mov
add
sub
jns
sub
in
pop
push
stc
repnz
shl
(bad)
fbld
mov
xlat
push
pop
aam
test
cwde
mov
mov
jmp
inc
aaa
in
mov
(bad)
jp
mov
daa
cmps
or
out
out
jne
fs
jl
arpl
push
push
and
and
pusha
dec
fmul
call
in
lock
les
pop
test
pop
imul
xor
jmp
xchg
retf
pop
jbe
xor
retf
loope
pop
mul
stc
xchg
jmp
xor
neg
xor
jmp
push
pop
test
pusha
iret
jmp
cmp
fnstenv
pop
imul
xor
jmp
add
mov
push
push
sub
cmp
test
pop
neg
mov
(bad)
jmp
push
pop
imul
mov
jbe
dec
pop
test
pop
imul
xor
std
jmp
mov
sub
cmp
test
pop
neg
xor
jmp
xor
out
xor
jmp
mov
outs
xor
rcl
jo
hlt
push
jbe
dec
pop
test
push
mul
xor
jmp
xor
int
ret
cmp
jge
call
inc
xchg
pop
sahf
dec
pusha
iret
jo
sub
rol
enter
iret
xlat
test
into
nop
rcr
xor
test
fs
ficom
jae
dec
cmps
test
fs
sub
inc
cmp
add
inc
mov
sbb
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
nop
jmp
call
and
or
fs
inc
enter
pop
int3
adc
pop
pushf
mov
mov
inc
mov
add
movs
sbb
mov
rcl
imul
ficom
cdq
inc
stc
ret
lds
int
repnz
jns
ins
fcomip
(bad)
hlt
add
push
dec
mov
imul
mov
xor
clc
sbb
not
bnd
jl
mov
ror
sbb
jl
xlat
imul
push
out
dec
push
fst
mov
out
push
mov
je
sbb
retf
inc
aam
mov
pop
cmp
pusha
or
call
cdq
(bad)
rol
adc
out
out
sub
addr16
stc
lahf
sbb
popa
xor
cmp
ja
xlat
cmps
xor
xchg
xchg
push
lock
test
mov
sbb
xor
or
fnstcw
mov
ja
iret
mov
outs
retf
and
call
push
add
cmp
popf
cmp
jae
dec
mov
push
sti
sub
cmp
test
ret
pop
push
fdiv
(bad)
pop
jmp
es
mov
das
add
(bad)
imul
add
into
out
out
jmp
lods
mov
sub
mov
(bad)
fsub
ret
pop
sub
and
(bad)
inc
mov
test
inc
cdq
pop
mov
jbe
adc
dec
cmp
mov
jbe
in
fsub
or
(bad)
mov
pop
gs
dec
sub
in
fsub
or
(bad)
mov
push
in
inc
test
in
jmp
mov
dec
in
loop
gs
pop
jne
add
fcmovnbe
fbstp
mov
push
in
loop
in
loop
gs
fidiv
lods
fdiv
pop
add
test
jecxz
ret
mov
adc
mov
das
in
loop
in
mov
sbb
rcr
ja
mov
xchg
in
loop
in
fistp
(bad)
(bad)
jmp
or
(bad)
and
fdiv
std
es
mov
mov
rcr
test
pop
std
mov
pop
mov
scas
mov
mov
pop
in
fstp
gs
test
pop
movs
fild
fdiv
or
mov
loop
in
fstp
in
fist
pop
test
cs
push
in
jb
mov
es
in
fsub
add
dec
in
loop
gs
test
push
mov
adc
mov
push
aam
and
jmp
xchg
fist
fdiv
sub
mov
jb
mov
das
in
movs
pop
gs
sbb
pop
pusha
lods
xor
add
dec
in
loop
in
fistp
stos
mov
cmp
mov
ss
loop
in
loop
in
in
test
loop
in
movs
pop
in
pop
sbb
movs
jb
mov
jecxz
ret
mov
sbb
xor
xchg
pusha
jl
sbb
lods
ret
add
dec
in
loop
gs
pop
test
jmp
lds
loop
gs
pop
lds
loop
gs
fist
sub
mov
in
loop
in
fstp
repnz
xchg
pop
mov
xchg
in
pop
cmps
lods
add
add
dec
in
loop
gs
mov
pop
in
ret
mov
in
mov
pop
in
loop
gs
pop
lds
loop
in
loop
gs
fist
sub
mov
in
loop
in
loop
in
jmp
mov
pop
in
bound
(bad)
loop
aam
loop
in
test
in
repnz
mov
xchg
es
rep
and
mov
outs
fdivr
xchg
jbe
out
jmp
stos
mov
cmp
mov
(bad)
fadd
sub
jmp
push
cs
repnz
mov
das
sbb
out
jecxz
repnz
loopne
and
pop
mov
and
in
jmp
dec
movs
pop
mov
mov
mov
pop
in
rcr
in
bound
in
loop
in
lea
and
pop
fadd
jne
adc
pop
in
fbstp
mov
mov
xor
pop
dec
in
and
fucomip
test
call
jmp
retf
mov
push
enter
(bad)
sub
mov
aaa
pop
and
jg
pop
test
fstp
add
lds
test
ja
(bad)
hlt
mov
test
retf
jns
push
out
and
mov
xlat
stos
xchg
and
mov
jno
pop
mov
int
xor
mov
lods
mov
or
fwait
mov
xabort
ror
je
cs
(bad)
aam
adc
js
fadd
arpl
sbb
mov
or
add
aaa
adc
add
iret
scas
mov
sub
mov
or
out
cmp
or
add
push
push
mov
mov
mov
mov
cmp
les
(bad)
shr
and
inc
loope
aam
mov
repnz
loopne
ins
sbb
out
daa
ins
xchg
mov
mov
jp
push
ins
push
sar
push
push
sbb
push
fistp
push
mov
add
mov
or
jmp
pop
xor
inc
mov
aaa
jl
jge
push
or
fsub
test
push
js
or
jae
and
cli
in
mov
mov
adc
or
pop
test
lock
jmp
mov
ror
lods
into
mov
lods
into
out
cdq
scas
hlt
dec
mov
xchg
mov
lods
into
out
sbb
xchg
inc
cmp
hlt
mov
lods
test
fsubr
xchg
into
mov
mov
std
dec
loop
or
movs
push
div
xchg
xchg
jo
and
mov
mov
xchg
ja
cdq
xchg
ja
jge
inc
or
jle
push
repnz
jno
stc
mov
movs
(bad)
div
ficom
shr
mov
mov
(bad)
not
xchg
idiv
es
adc
or
(bad)
into
or
movs
mov
aad
into
clc
shl
mov
mov
into
(bad)
sar
jle
movs
scas
xchg
lds
je
cmps
lods
xchg
sahf
int
dec
mov
retf
jecxz
dec
jno
lods
ins
stos
std
inc
ds
mov
mov
mov
mov
sahf
push
jo
stc
dec
mov
mov
scas
dec
cmp
ins
lock
mov
sbb
(bad)
gs
test
xlat
pop
test
pop
test
fucom
ret
cs
dec
pop
test
inc
pop
test
pop
test
pop
mov
icebp
pop
in
jae
fs
rcr
or
(bad)
addr16
mov
push
pop
test
fnsave
adc
gs
dec
in
jns
inc
test
pop
test
fstp
aad
je
out
add
mov
test
in
repnz
rol
mov
int3
add
ror
pop
imul
ds
dec
dec
aam
inc
add
les
fcom
lods
fucomp
push
cdq
aas
inc
nop
(bad)
sbb
jp
mov
dec
cmp
mov
dec
shr
leave
jbe
sub
or
retf
mov
push
mov
push
in
movs
(bad)
sbb
sti
jl
or
add
fadd
push
or
jge
jae
mov
pop
stos
dec
jecxz
xor
(bad)
ror
cmps
retf
jbe
or
fsub
shr
xchg
add
fisub
sub
or
int
sahf
movs
adc
lods
fs
and
pop
rcr
aaa
xchg
aam
les
lahf
jb
pop
push
in
popa
sar
cmp
add
sub
push
test
ins
add
(bad)
(bad)
pop
dec
retf
les
test
retf
bnd
jl
mov
jo
fidiv
jmp
lea
mov
fidiv
cli
cmp
ja
push
xchg
lahf
mov
outs
fucomi
es
hlt
loop
pushf
les
mov
cmp
ret
call
fidivr
pop
mov
jmp
imul
lea
pop
lea
pop
lea
pop
lea
pop
out
ror
pushf
outs
mov
rcr
ror
call
lea
pop
imul
mov
iret
call
imul
inc
cmp
outs
retf
jne
fadd
pop
mov
es
icebp
es
icebp
cmps
sub
lock
mov
sbb
mov
shl
jns
pusha
mov
repz
push
(bad)
push
das
and
mov
(bad)
es
ss
lea
adc
shl
push
icebp
es
ins
icebp
or
(bad)
cwde
jecxz
pushf
mov
push
sub
xchg
push
pop
(bad)
jmp
cmp
pop
or
aad
popa
mov
jno
shr
not
mov
inc
and
icebp
cmps
aad
icebp
es
mul
mov
icebp
es
icebp
push
mov
dec
das
mov
shl
push
icebp
es
sbb
sbb
jmp
mov
push
shl
xor
es
inc
lea
lds
cmp
popf
mov
aaa
pusha
mov
xor
mov
dec
das
mov
shl
push
icebp
es
sbb
sbb
jmp
mov
(bad)
pusha
mov
xor
retf
shl
sbb
mov
icebp
es
icebp
es
inc
jb
ss
mov
icebp
es
icebp
mov
xor
rol
pusha
mov
xor
or
shl
sbb
cmp
push
pop
lea
pop
lea
pop
lea
pop
outs
enter
pop
sbb
push
lahf
scas
outs
enter
pop
fwait
in
outs
stos
sbb
test
(bad)
jmp
in
out
ret
cs
cwde
pop
lea
lahf
aad
enter
mov
aad
pushf
das
mov
inc
mov
push
es
icebp
es
icebp
cmps
mov
inc
mov
push
xchg
es
icebp
es
icebp
cmp
hlt
pop
lea
add
mov
push
shl
pop
icebp
es
adc
sbb
push
or
xor
icebp
lea
add
push
pop
pop
mov
shl
pop
icebp
cmps
xchg
push
adc
sbb
leave
stc
jb
(bad)
push
mov
icebp
cmps
sbb
icebp
jbe
push
add
icebp
cmps
xchg
jmp
(bad)
fcmovb
pop
mov
shl
mov
icebp
es
(bad)
clc
sub
xchg
fist
push
mov
es
pop
clc
cwde
sbb
push
add
icebp
es
shr
es
icebp
cmps
mov
dec
mov
pop
es
icebp
es
push
push
or
idiv
push
mov
add
adc
lea
add
icebp
es
icebp
es
ja
ja
adc
lea
add
icebp
es
icebp
lea
add
push
pop
pop
mov
shl
add
lea
add
je
addr16
push
shl
push
icebp
es
pop
icebp
cmps
cmp
shr
es
icebp
es
cli
sti
repz
push
mov
mov
icebp
mov
ja
shl
mov
xor
xor
icebp
cmps
sbb
push
lods
cs
shl
push
icebp
cmps
in
icebp
cmps
enter
mov
jno
mov
dec
mov
cmp
mov
icebp
es
icebp
or
idiv
xor
xor
icebp
cmps
sbb
push
lods
cs
inc
es
icebp
cmps
cmp
lock
mov
lods
cs
add
mov
icebp
es
cli
sti
repz
push
mov
mov
icebp
mov
ja
shl
mov
xor
mov
icebp
cmps
sub
pop
xor
sub
sbb
popa
lock
push
shl
push
icebp
mov
jmp
adc
xchg
cmps
dec
mov
ja
mov
icebp
es
icebp
es
add
sbb
jg
addr16
push
enter
icebp
es
icebp
es
stc
es
icebp
es
jne
cmp
push
or
mov
icebp
es
icebp
cmps
rcr
repnz
lea
pop
sub
das
jnp
retf
push
pop
sar
ins
outs
inc
jmp
aad
enter
mov
aas
xor
shr
out
mov
out
outs
call
fwait
in
out
stos
sbb
jmp
mov
inc
and
hlt
sbb
push
shl
push
icebp
cmps
sub
lea
pop
lea
pop
lea
pop
lea
pop
xor
sub
lea
lahf
cmp
sbb
mov
sar
or
push
pop
imul
pop
mov
leave
call
imul
inc
cmp
outs
retf
daa
in
cwde
mov
mov
push
xchg
es
icebp
es
icebp
lea
pop
mov
and
mov
(bad)
mov
or
sbb
pop
adc
pushf
lahf
mov
into
pusha
mov
xor
xor
icebp
es
inc
cli
inc
popf
push
sbb
sbb
sbb
lds
cwde
das
sar
imul
mov
pop
lea
pop
rcr
cmp
sbb
mov
push
jge
psubusw
retf
or
mov
retf
push
popa
es
icebp
es
ss
lea
add
shl
push
icebp
xor
lea
pop
lea
pop
lea
pop
lea
pop
outs
and
inc
std
mov
sbb
push
lahf
out
and
inc
sbb
outs
stos
push
lods
and
(bad)
jmp
in
out
ret
dec
jnp
dec
pop
lea
lahf
aad
enter
mov
aad
pushf
das
mov
inc
mov
push
es
icebp
es
shr
es
icebp
es
std
inc
(bad)
jmp
mov
icebp
es
ss
mov
lea
pop
retf
push
js
lea
pop
popf
sbb
push
inc
or
and
enter
into
inc
mov
or
sub
inc
mov
cmp
mov
jg
dec
or
lea
sbb
xchg
xchg
dec
mov
addr16
icebp
mov
inc
lea
pop
mov
shl
push
icebp
xor
es
inc
cli
inc
popf
push
sbb
sbb
sbb
lds
cwde
das
sar
enter
sar
pop
test
jnp
(bad)
pop
lea
pop
rcr
in
lock
aad
sbb
mov
sar
mov
psubusw
mov
push
retf
push
popa
mov
inc
lea
pop
mov
shl
push
icebp
es
ins
icebp
sub
dec
jb
(bad)
outs
mov
mul
add
icebp
cmps
jb
cld
popa
mov
popa
es
icebp
sar
mov
cld
jg
sbb
or
jp
call
or
jns
xchg
xchg
out
mov
cmc
jecxz
cld
lahf
mov
(bad)
fwait
repz
cmp
sbb
jg
pop
bound
cmp
inc
je
mov
inc
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
rcr
sub
cmp
mov
pusha
dec
xchg
jo
pop
test
sbb
jo
xor
jge
es
idiv
fnstenv
ins
and
sti
loop
loop
lods
jle
fs
cmp
mov
fs
fbstp
outs
aam
push
iret
ja
mov
push
sbb
call
pop
cwde
shl
jl
aaa
cmp
mov
addr16
outs
(bad)
pop
pusha
fistp
dec
js
retf
dec
and
(bad)
(bad)
fild
mov
fcmovnu
ret
or
enter
push
sub
inc
sub
ret
ja
cmp
dec
or
mul
inc
cmp
fild
jbe
call
jbe
daa
or
shl
scas
mov
or
call
scas
adc
push
and
ret
fwait
sbb
fidivr
ja
test
sar
fadd
mov
jbe
and
ss
push
push
fmul
aam
data16
sub
mov
xchg
xchg
pusha
mov
popf
pop
test
mov
mov
(bad)
xor
pop
call
pop
popf
rol
bound
pop
push
mov
stos
ins
into
push
xchg
inc
pop
sahf
fwait
inc
mov
pop
fcom
(bad)
dec
pop
(bad)
outs
cdq
sub
sti
sub
pop
mov
not
in
xchg
lods
ret
pop
sub
jns
arpl
jns
arpl
jns
arpl
jns
arpl
jns
arpl
dec
adc
mov
pop
dec
jbe
jmp
adc
inc
adc
inc
adc
sar
ins
add
push
mov
mov
popf
push
test
sbb
mov
adc
rcr
ins
cmp
xor
loope
inc
test
test
inc
mov
jbe
mov
sub
pop
fild
pop
mov
jno
mov
fimul
inc
and
fmul
and
pop
inc
jge
pop
fild
pop
mov
mov
adc
ds
sub
adc
dec
adc
rcl
mov
adc
rcl
add
pop
add
pop
mov
pop
mov
sbb
and
fiadd
jge
pop
fild
pop
mov
sbb
and
fiadd
jge
pop
fild
pop
mov
cmp
push
adc
inc
mov
mov
cmc
xchg
(bad)
xor
lods
gs
pop
sub
loop
(bad)
mov
jecxz
adc
inc
adc
inc
adc
inc
fnstcw
jg
adc
adc
inc
mov
adc
ds
sub
adc
dec
adc
inc
adc
shl
or
mov
dec
adc
inc
adc
inc
sub
mov
clc
arpl
and
pop
add
pop
fild
cmp
js
pop
mov
inc
adc
inc
push
mov
sbb
jge
pop
fild
cmp
jns
pop
xor
pop
mov
pusha
mov
jns
xchg
sub
stc
fnstenv
mov
jp
jecxz
icebp
stos
je
jmp
sub
push
sub
jns
pop
mov
inc
sub
pop
sub
jns
pop
mov
inc
mov
adc
ds
jcxz
adc
inc
adc
inc
adc
inc
fnstcw
jg
adc
adc
inc
adc
inc
sub
push
xor
sub
pop
fild
pop
mov
aas
adc
sub
jns
pop
fild
pop
mov
test
(bad)
in
mov
and
push
jns
cmp
push
adc
sbb
pop
fild
sbb
mov
cmp
mov
pop
jp
out
sub
add
mov
out
push
mov
dec
sbb
push
cmp
jae
push
je
adc
push
push
fs
daa
loopne
hlt
jne
test
sahf
lds
jbe
fsub
add
repz
inc
ja
out
xchg
push
imul
mov
les
(bad)
(bad)
outs
pop
sbb
jnp
mov
imul
pop
sti
sti
pop
sbb
xchg
stos
fidivr
aam
dec
mov
pop
cmp
lods
inc
imul
pop
ret
jge
pop
(bad)
push
out
bnd
jl
nop
repz
mov
cmps
cmp
jbe
push
or
shr
stc
push
fcmovb
call
cmovnp
sub
inc
test
mov
push
add
cmp
cmps
sbb
movs
xor
pop
stc
jg
xchg
out
xlat
or
cmp
sbb
imul
mov
loop
ja
cli
inc
fiadd
enter
cmp
(bad)
mov
and
pop
mov
mov
pop
mov
xchg
adc
aad
outs
(bad)
jge
sbb
fidiv
add
pop
mov
cmp
test
aam
xchg
bnd
cld
retf
and
repnz
stos
daa
mov
ret
(bad)
fdivp
fisubr
xchg
inc
stc
mov
and
ss
aam
sbb
stc
cmp
jle
jns
jle
push
mov
inc
mov
(bad)
out
add
jnp
adc
xor
xchg
test
pop
push
cwde
iret
rcl
lods
pop
call
mov
stos
pop
dec
mov
stos
pop
dec
mov
stos
pop
dec
mov
stos
pop
dec
mov
cli
pop
dec
mov
pop
pop
imul
mov
pop
dec
mov
mov
mov
pop
pop
jns
cmp
mov
retf
cmp
xchg
jecxz
lea
jb
push
push
aad
ret
cdq
test
inc
jo
stos
push
mov
xchg
arpl
repnz
jo
scas
retf
push
jnp
test
jecxz
mov
xchg
arpl
inc
dec
jo
lahf
xlat
jl
hlt
cmp
outs
ds
or
(bad)
mov
xchg
arpl
lahf
xor
mov
or
and
lods
fimul
mov
stos
jp
cmp
stos
dec
int
jmp
xchg
arpl
retf
pop
jae
xchg
arpl
test
pop
jo
cmc
sbb
int
stos
dec
fmul
mov
sbb
test
push
dec
loop
add
js
imul
jmp
xchg
add
call
adc
ret
nop
test
mov
sbb
ret
nop
test
push
jo
call
test
sti
jbe
cmc
cdq
pop
int
fimul
stos
fiadd
mov
arpl
stos
pop
jo
cmc
sbb
int
stos
dec
fmul
mov
sbb
test
pop
jo
pop
add
dec
stc
sub
in
das
cwde
cmp
mov
sbb
test
mov
sbb
ret
nop
test
add
out
mov
sbb
ret
nop
test
fidiv
xchg
arpl
test
arpl
mov
jo
mov
mov
sbb
mov
xchg
arpl
and
stos
jp
xor
scas
stos
dec
pop
iret
mov
sbb
test
jl
mov
call
test
add
push
and
xchg
add
and
arpl
test
add
movs
scas
xchg
inc
jo
mov
cmc
jmp
ret
mov
xchg
arpl
test
push
jo
stos
jmp
xchg
arpl
xchg
add
ja
jno
jb
push
add
mov
xchg
arpl
test
push
addr16
sub
push
and
inc
dec
push
movs
inc
ret
xchg
int3
xchg
arpl
test
push
jo
nop
dec
jns
out
mov
pop
lea
xor
test
push
lea
push
inc
lods
stos
or
fcom
rcr
arpl
mov
movs
jno
xchg
jecxz
adc
jo
ret
nop
xchg
arpl
xchg
xor
fwait
arpl
xchg
arpl
test
outs
jne
cli
sub
aam
call
test
mov
sbb
ficom
arpl
int3
sub
out
mov
sbb
ficom
sub
xor
push
std
xchg
arpl
xchg
arpl
mov
add
xchg
jecxz
ret
mov
xchg
jns
scas
fwait
arpl
arpl
add
imul
arpl
test
arpl
retf
adc
cmp
xchg
jecxz
test
or
xchg
arpl
test
pop
jo
xchg
jecxz
test
or
xchg
arpl
test
pop
jo
stos
sub
out
mov
sbb
ficom
jae
add
cli
jg
lods
cli
dec
sbb
scas
cli
dec
pop
movs
lods
bsr
arpl
xchg
arpl
add
stos
ds
stos
scas
cdq
mov
xchg
arpl
test
push
jo
dec
mov
sbb
ficom
arpl
add
test
jns
pop
add
sub
xchg
arpl
and
scas
pop
jge
retf
fmul
pop
dec
mov
or
pop
add
jmp
arpl
test
pop
jo
xchg
arpl
lea
arpl
(bad)
push
jo
retf
pop
jns
dec
push
jns
mov
pop
mov
out
mov
pop
sub
cmc
mov
leave
cs
in
popa
pop
or
idiv
mov
pusha
dec
xchg
jbe
inc
sbb
sbb
jae
inc
pop
mov
fwait
daa
addr16
jbe
in
mov
call
push
pop
xchg
dec
fs
jns
push
pop
xchg
jecxz
adc
pop
xchg
in
sahf
push
cdq
inc
pop
out
mov
jbe
jl
xor
cmp
loopne
mov
rcl
iret
inc
shl
pop
mov
cmp
lahf
out
popa
jnp
pop
js
mov
inc
dec
push
or
int3
out
bnd
jl
mov
out
cs
mov
ffree
add
js
add
jge
mov
popa
dec
jg
mov
sub
sub
xchg
add
rol
and
js
mov
fld
pop
add
arpl
adc
add
xor
repnz
(bad)
push
ins
xor
stos
jmp
pop
pop
add
bound
ins
mov
call
dec
hlt
xor
or
xchg
xchg
pop
inc
test
test
cmp
add
inc
(bad)
not
jp
sbb
or
sub
nop
lock
movs
jge
addr16
cmp
jo
push
mov
adc
in
xor
in
mov
pop
inc
mov
ds
jo
(bad)
in
mov
cmp
push
and
sub
and
(bad)
call
jle
outs
mov
and
out
fbld
call
pop
sub
mov
mov
or
pop
test
inc
xchg
neg
daa
push
jmp
jle
inc
adc
sbb
ret
lahf
jae
inc
mov
jmp
pop
sub
push
and
out
fbld
jae
push
mov
aad
sbb
shl
sbb
repz
inc
adc
sbb
mov
outs
adc
and
rol
out
pop
and
out
fbld
and
fbld
and
test
vorps
mul
(bad)
adc
adc
mov
or
popf
jno
xchg
sub
push
and
out
fbld
mov
or
popf
jno
xchg
sub
(bad)
and
fbld
imul
push
mov
push
add
add
xchg
call
jbe
popf
inc
leave
xchg
fs
je
(bad)
ret
add
scas
(bad)
enter
mov
(bad)
stc
push
lock
mov
jns
xor
ret
or
xlat
or
stos
xlat
jnp
aam
outs
int
and
mov
dec
nop
addr16
ficom
inc
pop
jle
mov
push
test
cmps
lods
call
and
dec
sub
sbb
or
jbe
or
xchg
xor
imul
(bad)
fiadd
pop
lahf
(bad)
cmps
xor
bnd
aam
mov
add
lods
or
push
jns
jge
mul
out
popf
xchg
push
dec
outs
imul
fiadd
retf
jbe
sbb
stos
hlt
aaa
xor
test
lock
and
mov
pop
mov
fadd
clc
clc
cmp
hlt
aam
test
mov
daa
pop
dec
and
scas
inc
test
cmp
inc
cli
push
pop
or
xor
push
pop
jne
mov
cmp
jo
pop
daa
adc
mov
xor
in
mov
fwait
pop
lea
adc
push
mov
retf
add
int3
inc
jl
and
sbb
inc
and
rcr
clc
gs
test
mov
stos
clc
test
cmps
hlt
scas
fwait
outs
push
and
clc
adc
outs
cli
push
hlt
inc
cmp
jne
ficom
xchg
lds
sbb
cld
into
leave
adc
test
cmc
popf
(bad)
push
xchg
leave
xor
out
xor
ret
fs
enter
retf
les
add
fnstcw
cmp
fdiv
push
cmp
(bad)
jmp
jno
repz
cld
add
call
out
or
and
inc
mov
mov
fchs
outs
jns
dec
and
(bad)
aad
sbb
sbb
adc
push
fst
lods
mov
mov
jbe
or
mov
cmps
mov
fdiv
add
add
ja
neg
and
or
in
mov
fnsave
retf
jns
jecxz
xchg
pop
(bad)
popa
imul
xchg
mov
xor
in
add
jnp
cmp
into
call
jb
mov
stos
pop
mov
xor
out
inc
cmp
add
lds
popf
iret
popa
mov
out
ret
adc
ja
pop
mov
int
dec
pop
dec
inc
sub
lods
(bad)
(bad)
jne
neg
ror
fcmovu
pop
stc
push
sbb
cmp
jle
retf
add
inc
jle
jecxz
ja
loop
jle
rol
jecxz
in
movs
sbb
jle
push
inc
jle
and
jecxz
inc
or
pushf
dec
retf
add
adc
call
pop
cmp
sbb
pushf
mov
fiadd
std
mov
xlat
sbb
push
xor
cmp
idiv
jg
pop
mov
sti
pop
(bad)
popa
push
sub
jbe
cmp
jg
pop
test
pop
test
pop
lea
push
test
push
test
pop
test
pop
cmp
fnsave
jnp
jbe
dec
mov
inc
in
push
test
pop
test
pop
test
pop
xor
je
jg
pop
movs
push
icebp
fnstsw
cld
mov
or
or
(bad)
sub
sahf
mul
in
pushf
pop
test
or
jg
pop
test
fld
jne
in
in
call
sub
jg
fnsave
inc
fistp
jg
test
pop
test
pop
sub
mov
mov
mov
or
stc
fnstsw
jg
pop
test
fst
call
(bad)
(bad)
rol
sahf
fsub
inc
xchg
sar
sbb
sbb
dec
xchg
ins
dec
sbb
sbb
jno
ret
pop
pop
cmp
jmp
inc
stc
push
sbb
mov
iret
inc
dec
jle
lods
outs
sub
(bad)
mov
cmps
mov
adc
and
(bad)
and
inc
pusha
fld
enter
push
mov
and
lock
in
(bad)
sbb
je
mov
data16
test
rcr
movs
fld
cwde
nop
dec
mov
inc
cmp
add
xor
mov
jbe
jl
push
lock
cwde
mov
idiv
cmp
add
add
add
dec
ror
push
adc
ret
pop
mov
add
out
daa
dec
jne
and
pop
mov
add
pop
mov
jp
inc
xlat
(bad)
or
aaa
mov
sub
ret
push
jge
dec
jle
jae
in
inc
cmp
pop
ffreep
dec
push
mov
or
jle
sbb
pusha
sub
fldcw
adc
repnz
xchg
cmps
(bad)
fsub
pop
jne
mov
lds
xor
or
bnd
jl
div
fidiv
outs
xchg
ins
gs
pop
movs
jp
mov
cmp
or
inc
pusha
jmp
call
lock
stc
xchg
loop
fdiv
test
aad
aas
lods
mov
scas
sbb
pop
clc
mov
aas
cmp
adc
push
mov
enter
cmp
je
ins
mov
or
push
mov
enter
cmp
je
sbb
lock
in
nop
push
scas
fdiv
mov
cmp
push
mov
enter
cmp
xchg
sbb
mov
jns
repz
(bad)
repz
inc
sbb
cmc
hlt
fldenv
das
test
sbb
hlt
cs
out
pop
cwde
mul
pop
mov
inc
dec
outs
aaa
cmps
pop
leave
jne
jmp
out
outs
cdq
fs
dec
stos
mov
aas
cmp
das
stc
addr16
cwde
xchg
mov
out
pop
cwde
xchg
movs
aas
stc
movs
in
mov
add
addr16
cwde
out
das
enter
clc
cmc
hlt
mov
or
jge
in
das
ficom
pop
cwde
out
jle
push
push
aas
out
addr16
dec
cwde
out
aas
cdq
xchg
mov
mov
xor
sub
fadd
in
clc
xor
mov
push
movs
std
call
out
push
sub
loop
cwde
cmc
mov
test
les
sub
xchg
lods
cwde
jne
das
test
movs
aas
mov
dec
test
in
pop
stos
test
out
test
xchg
sub
and
pop
mov
and
movs
cmp
call
not
mov
and
movs
aas
stos
mov
dec
stc
aad
dec
test
gs
outs
stos
test
sub
test
movs
aas
mov
xlat
neg
inc
les
xchg
sbb
hlt
cs
xchg
movs
sbb
cmc
mov
call
test
dec
int
mov
cdq
hlt
in
mov
inc
cmc
dec
cmc
in
scas
xlat
hlt
ins
enter
mov
aad
cs
in
clc
mov
dec
jmp
lods
mov
xchg
idiv
test
movs
out
mov
out
pop
cwde
mov
ds
vucomiss
adc
aad
or
les
in
xlat
mov
enter
mov
in
aas
retf
push
fprem1
test
test
ret
jbe
aas
mov
pop
mov
xor
outs
jmp
xchg
mov
hlt
test
mov
add
das
stc
xchg
cmp
inc
aas
call
xor
pop
stos
xor
out
jmp
ins
sub
ret
jbe
js
lds
pop
mov
xchg
shr
not
mov
ins
sbb
outs
ds
je
leave
out
or
mov
movs
std
clc
movs
hlt
push
ds
in
mov
cmc
scas
mov
test
dec
retf
sub
test
inc
pop
push
aaa
je
mov
xchg
outs
retf
aas
cmp
and
cs
mov
aas
jmp
jg
in
pop
scas
ja
scas
or
mov
mov
aad
scas
test
xchg
cs
mov
mov
and
fldenv
and
scas
xchg
dec
mov
les
fwait
adc
hlt
(bad)
test
je
scas
cmps
in
fadd
in
jmp
(bad)
clc
lds
retf
(bad)
(bad)
call
in
jg
movs
je
fisub
(bad)
cld
mov
cmps
cmc
cs
daa
das
push
gs
stos
xor
hlt
outs
cmps
add
mov
push
aas
push
out
or
hlt
ds
xchg
in
stos
push
xchg
outs
push
test
les
gs
das
sub
ret
div
scas
mov
inc
das
enter
mov
out
sub
call
out
sub
mul
call
div
jmp
hlt
jl
mov
mov
fadd
in
clc
mov
aas
jmp
cs
mov
ins
sbb
xchg
jle
test
fisub
fs
sbb
movs
pop
sbb
movs
jge
movs
hlt
dec
cmps
xchg
cs
cmc
jl
mov
mov
fdiv
test
sti
test
outs
retf
aad
scas
test
inc
dec
sbb
test
(bad)
scas
cmps
xchg
cs
mov
test
in
sbb
jg
in
dec
into
(bad)
test
lds
stos
mov
outs
mov
xchg
je
or
ret
cmc
inc
std
fidiv
(bad)
cld
test
out
scas
push
in
mov
test
test
movs
mov
test
test
sbb
test
mov
push
lahf
sbb
xchg
mov
ret
ret
cmc
xchg
mov
movsx
inc
pop
mov
mov
outs
stc
aam
lahf
mov
add
aam
push
xchg
daa
lahf
clc
add
inc
outs
mov
in
leave
mov
mov
(bad)
test
movs
aas
xchg
jge
aad
outs
push
cmps
in
fdiv
dec
leave
mov
outs
leave
movs
xchg
cs
psubb
ss
push
mov
hlt
por
out
mov
pop
enter
jmp
mov
out
jmp
outs
mov
xor
push
lds
mov
hlt
outs
push
movs
mov
mov
and
pop
cli
in
ds
data16
and
(bad)
mov
push
push
aas
out
addr16
aas
cwde
out
jge
test
in
call
mov
pop
sbb
iret
clc
movs
les
mov
test
mov
adc
bts
out
mov
mov
lds
mov
les
mov
out
(bad)
hlt
cmc
sub
test
movd
xor
mov
jbe
lods
mov
les
inc
(bad)
dec
sbb
mov
clc
mul
sub
push
cmc
cmps
out
test
mov
mov
mov
scas
test
cmps
test
(bad)
outs
es
retf
ds
hlt
outs
or
jbe
mov
movs
xchg
(bad)
jmp
hlt
dec
out
cmps
test
gs
(bad)
xchg
pop
call
test
lahf
or
iret
sbb
out
enter
stc
push
push
mov
mov
cmc
cs
jbe
push
inc
and
into
mov
ds
stc
in
push
fld
mov
leave
xor
cmc
pop
push
div
outs
test
(bad)
hlt
cs
push
test
dec
js
in
enter
or
scas
mov
in
jns
cmp
push
in
push
xchg
mov
outs
scas
xlat
test
mov
push
hlt
cs
cmc
movs
aas
jmp
out
test
in
clc
mov
sub
test
or
hlt
into
stos
out
aas
fnstenv
in
stos
aad
sub
mov
lds
dec
clc
xor
in
or
repnz
cmc
inc
sub
jns
cmc
push
mov
mov
outs
scas
xlat
aam
enter
mov
in
jge
mov
pop
into
cmps
inc
aas
retf
leave
dec
aad
sub
mov
or
js
in
xlat
hlt
ins
enter
mov
in
mov
stc
aaa
and
fidiv
movs
mov
mov
lds
pop
push
cmc
push
test
hlt
out
fadd
and
dec
test
push
xchg
ds
test
(bad)
out
cmps
push
iret
fisub
lods
test
lds
out
push
cdq
movs
out
stos
push
inc
dec
clc
aaa
out
leave
(bad)
test
(bad)
fs
test
test
mov
test
and
pop
sti
cmps
in
enter
jmp
in
push
test
in
leave
inc
mov
imul
das
sbb
cmp
cmc
dec
mov
aad
jmp
(bad)
cld
test
inc
dec
into
mov
pop
leave
inc
test
test
out
dec
js
xchg
ds
xchg
push
mov
lds
push
mov
mov
les
sub
mov
dec
test
imul
lds
outs
mov
mov
push
leave
cmps
in
leave
lds
push
hlt
mov
call
mov
scas
call
pop
hlt
out
jmp
mov
test
hlt
or
lds
and
xor
fstp
hlt
test
mov
dec
mov
aad
mov
leave
xor
in
clc
xchg
lds
push
pop
scas
xchg
dec
leave
aad
or
mov
out
push
test
scas
mov
in
aas
clc
and
inc
pop
retf
ret
xchg
mov
cdq
mov
in
enter
sbb
in
outs
xlat
mov
enter
mov
add
bswap
xor
movs
femms
(bad)
push
(bad)
cmp
dec
sti
mov
dec
or
idiv
imul
hlt
fsubrp
xchg
xor
stos
test
leave
enter
imul
inc
dec
mov
push
in
mov
mov
(bad)
js
in
enter
sbb
jne
mov
lds
dec
mov
mov
jle
hlt
cmc
(bad)
mov
adc
mov
mov
enter
stos
out
cs
aad
cs
adc
and
mov
cmc
in
mov
jecxz
jle
cmc
hlt
jle
movs
xchg
push
mov
hlt
dec
out
movs
add
mov
dec
and
xchg
cs
clc
mov
outs
jmp
push
jg
add
mov
mov
in
ds
dec
in
cs
mov
imul
ds
movs
mov
or
idiv
mov
fs
clc
cmps
test
aad
cs
cmps
xchg
dec
sbb
cdq
test
in
call
sub
mov
cmps
aad
fcom
mov
test
mov
(bad)
jle
test
daa
xchg
scas
mov
les
fidiv
in
retf
fldenv
xchg
scas
mov
xchg
jg
in
sbb
mov
das
mov
(bad)
movs
ret
je
packssdw
test
inc
mov
test
out
or
fistp
mov
outs
jmp
test
test
bound
or
sar
sub
mov
into
repz
retf
(bad)
retf
ret
stc
mov
cmp
scas
hlt
mov
movs
repz
retf
(bad)
retf
int
mov
retf
(bad)
dec
rcr
(bad)
leave
mov
ret
mov
retf
(bad)
dec
jns
(bad)
cli
add
mov
retf
(bad)
mov
inc
test
or
(bad)
retf
rcr
inc
(bad)
retf
(bad)
in
mov
ret
mov
retf
(bad)
retf
rcr
inc
into
retf
(bad)
retf
(bad)
retf
int
jne
dec
or
xor
pusha
stos
and
sbb
repz
stos
jecxz
jmp
std
inc
mov
jae
xor
mov
mov
cmps
ins
pusha
and
push
int3
cs
cld
lds
jbe
in
jecxz
xor
or
pop
jb
and
xchg
fdecstp
jnp
pop
cmp
div
loopne
mov
loope
xor
cmp
(bad)
mov
cmp
mov
arpl
lods
in
cmps
in
ficomp
fwait
inc
stc
or
push
in
jbe
retf
scas
fiadd
cmp
dec
clc
xchg
and
enter
imul
rcl
pop
mov
data16
repz
clc
ja
and
(bad)
(bad)
inc
dec
clc
xor
ins
cmp
ins
stc
int3
xchg
(bad)
test
or
mov
arpl
or
inc
sahf
retf
dec
add
hlt
lahf
mov
lock
pop
loopne
mov
cmps
push
ins
jno
stos
ja
pop
iret
and
faddp
ret
test
mov
pop
out
lea
xor
inc
xchg
sbb
jb
and
push
push
test
call
inc
(bad)
daa
xlat
gs
pop
sub
inc
jns
sbb
xor
add
push
xchg
adc
add
iret
sbb
not
out
neg
mov
jge
imul
sub
mov
pop
or
cli
jae
jmp
das
lods
aad
stos
int
add
xchg
(bad)
sbb
fdiv
adc
adc
mov
pop
dec
lods
gs
pop
test
jae
mov
scas
push
ins
sub
js
pop
add
jae
mov
scas
(bad)
ins
sub
js
pop
add
jae
mov
scas
call
scas
pop
add
jae
mov
scas
jp
ins
sub
js
pop
add
jae
mov
scas
or
ins
sub
js
pop
add
jae
mov
scas
cli
rep
sub
js
pop
add
jae
mov
scas
pop
rep
sub
js
pop
add
jae
mov
scas
push
ins
sub
js
pop
add
jae
mov
scas
cmp
ins
sub
das
iret
loope
dec
xchg
fdivr
xchg
fdiv
adc
xchg
adc
pushf
add
jo
ss
imul
add
sub
xchg
pop
cmp
xchg
mov
xchg
pop
add
leave
inc
cmp
add
and
sbb
cld
scas
enter
retf
enter
sbb
out
push
and
sub
mov
mov
jbe
int3
mov
dec
(bad)
ss
addr16
sbb
setns
lods
mov
test
sbb
icebp
sbb
test
aaa
int
add
mov
(bad)
aaa
out
and
jae
or
adc
or
mov
sub
push
sub
mov
mov
out
pop
sbb
shl
jp
(bad)
add
mov
push
sbb
pop
cmp
call
inc
inc
clc
sub
pop
push
fs
sbb
adc
les
and
inc
fs
(bad)
fild
pop
sub
jb
call
jns
jp
push
mov
scas
xchg
js
pop
pop
cmp
pop
pop
add
ret
fiadd
mov
icebp
(bad)
fsub
push
enter
jns
and
(bad)
sbb
xabort
jns
sbb
leave
mov
iret
not
imul
cmp
xchg
pop
inc
xor
pusha
test
xchg
into
inc
xchg
fisubr
cmp
stos
arpl
pop
test
cmp
pop
test
cmp
pop
test
mov
lods
push
xchg
add
pop
test
cmp
stc
cmp
jp
cmp
pop
test
js
shl
jb
add
sbb
aas
arpl
cmps
arpl
adc
addr16
or
mov
lock
loopne
ret
ds
sbb
test
(bad)
pop
mov
ret
fild
cmp
or
cmp
dec
inc
enter
fcomp
fst
and
fucomip
je
imul
out
loopne
jecxz
mov
jge
les
lods
retf
mov
stc
out
sbb
and
jecxz
push
fsub
sub
xchg
in
ficom
cdq
inc
jns
cli
not
cmps
push
sub
mov
(bad)
and
ret
out
bnd
cld
cmps
mov
hlt
or
inc
enter
call
retf
inc
dec
or
loope
push
iret
jl
(bad)
imul
clc
fbld
sub
mov
aaa
enter
imul
mov
js
clc
mov
add
inc
sbb
jns
aaa
add
mov
in
jno
sti
aaa
mov
cli
ret
xor
cmps
stos
call
cmp
xor
(bad)
pop
push
pop
push
pop
fbstp
pop
sbb
push
test
jns
xor
ss
pop
enter
(bad)
iret
push
push
or
add
mov
jnp
sub
inc
test
jns
sbb
mov
mov
pusha
push
cmps
dec
call
scas
addr16
mov
xor
stos
in
push
(bad)
pop
ins
inc
jge
mov
add
push
leave
cli
(bad)
cmc
sub
in
mov
popf
mov
add
or
jmp
fsubr
xor
add
adc
xlat
push
mov
leave
shl
scas
mov
xchg
jns
int3
jg
sub
xlat
mov
clc
lea
cwde
and
rcr
popf
lea
cwde
mov
xlat
mov
clc
lea
cwde
mov
lea
cwde
mov
xlat
mov
cmp
sbb
fwait
loope
movs
loopne
popf
xlat
mov
xor
xchg
test
leave
(bad)
adc
ret
loop
sub
xor
sbb
or
imul
sete
inc
xchg
popf
std
add
xchg
test
ss
(bad)
push
in
mov
sub
push
imul
int3
arpl
inc
into
repz
fadd
xchg
jnp
or
into
pop
add
stos
lahf
inc
cmp
add
(bad)
sbb
jo
(bad)
jbe
lock
or
js
stos
repnz
and
not
sbb
ret
push
stc
sbb
and
iret
inc
mov
push
push
shl
pop
sub
sar
mov
pusha
pop
xchg
retf
inc
jo
fnsave
cmp
fisttp
add
std
cli
mov
pop
les
(bad)
iret
mov
pop
sbb
mov
jbe
iret
loop
jbe
jmp
xor
loopne
jne
mov
test
inc
mov
inc
pop
push
or
loop
adc
aas
fbstp
pop
sbb
and
inc
mov
inc
cld
shr
sub
aaa
xchg
sub
ror
call
xor
dec
mov
push
fist
or
adc
cdq
(bad)
cli
xor
dec
pop
sub
add
push
mov
test
idiv
mov
fsub
dec
(bad)
es
mov
ror
pop
repz
push
pop
out
pusha
xchg
jnp
pusha
imul
pop
ret
push
and
or
pop
sub
sbb
pusha
or
shr
ret
pop
dec
out
mov
out
imul
pop
ret
pop
fld
sbb
pusha
or
pusha
pop
inc
cmp
add
cdq
push
cwde
fsubr
xor
dec
jge
nop
cmp
cmp
outs
cwde
and
or
sti
mov
push
push
mov
xchg
and
lahf
arpl
cmps
arpl
mov
arpl
xchg
les
int3
(bad)
adc
inc
int3
fs
push
enter
int
mov
inc
enter
enter
enter
retf
and
mov
add
idiv
sar
idiv
xor
mov
arpl
repnz
arpl
jae
add
idiv
or
repz
mov
sbb
mov
mov
icebp
clc
mov
adc
sahf
mov
mov
out
fwait
mov
adc
mov
arpl
idiv
arpl
idiv
jae
cmc
mov
xchg
bnd
or
mov
idiv
arpl
mov
arpl
jne
mov
xchg
xchg
jp
mov
sub
mov
mov
daa
(bad)
mov
rep
idiv
jae
repz
jae
jae
jae
repz
xchg
imul
and
idiv
arpl
idiv
add
mov
arpl
les
arpl
ret
jno
xchg
mov
adc
xchg
ret
and
xchg
adc
xchg
shl
mov
xchg
mov
stos
xchg
jecxz
stos
xchg
sub
xchg
jae
mov
xchg
repz
mov
xchg
repz
mov
xchg
repz
xchg
repz
xchg
add
enter
xor
adc
mov
xchg
adc
xchg
add
test
push
mov
xchg
adc
xchg
xchg
push
ds
mov
mov
xchg
add
xchg
add
scas
xchg
mov
stos
xchg
mov
xchg
xchg
sbb
xor
mov
ror
stos
jae
push
stos
and
stos
arpl
stos
jae
pop
stos
and
stos
adc
stos
sar
pop
stos
mov
xchg
push
stos
jecxz
push
stos
xor
stos
add
stos
add
push
stos
jecxz
shl
adc
xlat
xchg
adc
xchg
xor
in
xchg
mov
sbb
xchg
mov
sbb
xchg
and
rcl
sub
xchg
xor
retf
sub
xchg
xor
retf
xchg
mov
adc
xchg
and
xchg
inc
cmp
xchg
and
xchg
rcl
out
mov
push
xchg
xchg
arpl
mov
mov
xor
mov
repz
xchg
mov
arpl
xchg
mov
add
mov
inc
mov
nop
mov
xchg
mov
mov
sar
mov
add
cmps
sbb
xchg
out
inc
mov
xchg
cmps
hlt
xchg
or
xchg
mov
inc
xchg
inc
mov
enter
enter
enter
enter
(bad)
sub
and
sbb
cld
out
(bad)
adc
test
out
(bad)
je
mov
into
jo
dec
mov
xlat
popa
cli
fist
pop
push
jecxz
dec
mov
arpl
or
jno
or
outs
pop
ds
arpl
aad
hlt
xor
bound
sub
clc
xor
int
push
pop
fcomip
jp
sbb
test
jbe
in
add
and
adc
push
ja
(bad)
xlat
jp
or
inc
dec
enter
cmp
leave
cmc
ret
loop
in
mov
add
arpl
test
xchg
jne
les
enter
jbe
or
mov
aam
jge
(bad)
sbb
pop
sbb
and
xchg
cmc
test
sbb
mov
cs
push
adc
push
pushf
xchg
xchg
std
(bad)
push
mov
test
cdq
cmps
les
sbb
out
pop
bound
add
dec
fsub
push
into
fwait
shl
xor
mov
addr16
dec
push
sar
cmp
xor
(bad)
scas
mov
pop
sahf
add
jb
add
cmp
push
xor
sbb
fwait
inc
jmp
sub
cmps
scas
inc
mov
ja
dec
mov
pop
dec
add
mov
retf
and
dec
test
push
jnp
stc
aas
lods
jg
ret
jge
(bad)
cmps
(bad)
imul
jbe
rol
push
rol
push
rol
push
rol
push
rol
push
rol
push
rol
push
rol
push
rol
push
rol
push
rol
push
rol
push
rol
push
rol
push
rol
push
rol
mov
xor
xor
mov
loopne
jbe
rcl
ja
mov
push
push
loopne
ss
mov
(bad)
push
loopne
data16
mov
(bad)
push
loopne
es
mov
push
push
loopne
push
ja
mov
xchg
push
rol
push
lock
ret
push
loopne
jbe
lock
push
push
loopne
push
ja
mov
(bad)
push
loopne
ss
mov
push
push
loopne
inc
ja
mov
push
rol
push
lock
jbe
inc
nop
cmp
push
lock
cmp
sar
push
lock
cmp
inc
push
lock
cmp
inc
push
mov
neg
ret
push
nop
adc
rcl
addr16
inc
out
cmp
outs
or
(bad)
out
popa
mov
jbe
mov
inc
out
cmp
lahf
or
push
shl
lahf
mov
inc
push
shl
outs
mov
(bad)
out
xor
ds
inc
pop
jbe
add
neg
shl
xchg
mov
inc
push
shl
out
mov
(bad)
push
and
push
ret
push
xor
neg
add
pop
add
neg
shl
out
mov
(bad)
push
ret
push
xor
ds
mov
jbe
ret
push
sar
add
neg
shl
out
mov
(bad)
push
ret
push
push
mov
push
fs
jp
clc
nop
inc
cmps
adc
mul
lock
xchg
ds
mov
jbe
inc
cmp
mov
neg
mov
lock
dec
mov
ja
inc
jbe
add
je
mov
push
pop
inc
mov
jmp
es
mov
neg
ret
push
loopne
jbe
rol
xlat
lock
mov
mov
neg
add
lock
xor
daa
rol
xchg
dec
mov
daa
lock
jbe
dec
mov
daa
lock
jbe
iret
cmp
rol
inc
mov
daa
sti
rol
ds
pop
and
push
add
lock
xor
aaa
rol
dec
ror
push
and
out
nop
jbe
iret
mov
push
rol
out
xor
mov
push
rol
out
xor
mov
push
rol
out
xor
mov
push
rol
daa
rol
ds
rol
push
inc
mov
fadd
(bad)
iret
jo
inc
fwait
loopne
out
ja
mov
out
cmp
dec
adc
iret
xor
ds
xor
neg
ret
push
jo
jbe
jecxz
out
daa
shl
xlat
lock
jbe
iret
mov
xlat
mov
neg
ret
push
xor
neg
add
daa
rol
ds
lock
jbe
dec
mov
daa
rol
xchg
iret
cmp
lock
jbe
iret
mov
push
mov
neg
add
daa
lock
xor
daa
rol
adc
mov
jbe
dec
(bad)
xlat
lock
mov
pop
mov
neg
add
daa
lock
xor
inc
rol
push
in
test
shl
jp
ret
test
pop
enter
shl
jbe
add
cmps
nop
rcl
ror
push
rol
out
inc
xchg
enter
rcl
add
repnz
lahf
mov
push
shl
jl
shl
shl
dec
mov
ja
inc
jbe
mov
hlt
addr16
neg
mov
dec
mov
ja
inc
jbe
add
je
mov
xchg
mov
mov
push
pop
inc
mov
add
pop
inc
mov
shl
lock
add
shl
xchg
iret
lock
lock
mov
ja
inc
jbe
add
je
mov
push
push
ror
rcl
clc
daa
mov
pop
ror
daa
mov
xor
rol
daa
mov
je
rol
daa
mov
xor
rol
(bad)
mov
je
retf
shl
lock
icebp
add
rcr
mov
ja
cmp
out
test
jg
mov
pop
shl
aas
daa
lock
mov
addr16
lock
(bad)
or
mov
mov
neg
mov
dec
mov
daa
lock
cmp
lock
mov
out
rol
add
pop
ror
pop
ror
xchg
dec
mov
ja
shl
mov
(bad)
mov
push
pop
ror
pop
ror
pop
ror
adc
lock
mov
ja
shl
xor
mov
ja
lods
out
mov
and
loopne
not
test
shl
pop
enter
shl
pop
add
neg
mov
stc
jg
inc
inc
push
ret
push
xor
ds
nop
pop
jbe
rol
pop
ror
pop
mov
jns
mov
jns
mov
pop
ror
out
rcl
add
mov
push
shl
pop
mov
push
shl
pop
mov
inc
push
shl
sbb
xor
shl
xor
mov
test
out
rol
call
add
int3
add
shr
test
dec
inc
mov
push
push
shl
push
rol
push
shl
push
rol
sbb
xor
rol
sbb
xor
rol
mov
out
ret
adc
adc
lock
addr16
inc
out
in
(bad)
aas
jecxz
inc
lock
jp
or
test
jmp
out
rol
test
inc
out
mov
pop
mov
push
shl
pop
mov
push
rol
out
inc
sbb
rol
test
(bad)
pop
mov
stc
pop
mov
push
shl
pop
mov
push
shl
pop
mov
push
rol
out
inc
test
mov
test
push
pop
mov
stc
pop
mov
push
shl
sbb
bnd
mov
jns
mov
push
pop
ror
out
rcl
add
bnd
lock
ja
xchg
pop
pop
int3
and
mov
aaa
mov
jne
inc
pusha
jle
mov
popw
ret
push
mov
nop
xlat
lock
xchg
iret
mov
pop
mov
jbe
add
and
sbb
iret
xor
adc
rol
push
inc
mov
pop
mov
jns
mov
mov
neg
inc
mov
inc
push
shl
aas
mov
inc
sbb
mov
jbe
add
sbb
cmp
mov
jbe
ret
push
nop
mov
cmp
daa
scas
mov
mov
push
shl
pop
mov
push
shl
aas
mov
inc
sbb
mov
jbe
fiadd
jbe
ror
lock
jbe
inc
nop
cmp
push
lock
cmp
sar
push
lock
cmp
inc
push
lock
cmp
inc
push
mov
neg
cmp
nop
adc
rcl
cmp
mov
inc
(bad)
scas
arpl
push
cmp
inc
out
jl
lahf
or
push
shl
lahf
mov
inc
push
shl
das
mov
(bad)
scas
xor
ds
inc
pop
jbe
add
neg
shl
xchg
mov
inc
push
shl
scas
mov
(bad)
sbb
mov
neg
cmp
xor
neg
xor
inc
lahf
jbe
add
neg
shl
scas
mov
(bad)
sbb
mov
neg
cmp
mov
jbe
ret
push
sar
add
neg
shl
scas
mov
(bad)
sbb
mov
jbe
ret
adc
cld
push
fcmovnbe
mov
inc
cmps
adc
push
push
ror
push
push
xchg
ds
mov
jbe
inc
cmp
mov
neg
mov
lock
dec
mov
add
inc
jnp
(bad)
mov
push
pop
inc
mov
jmp
es
mov
neg
cmp
loopne
jbe
rol
xlat
lock
mov
mov
neg
cmp
pusha
aas
mul
or
iret
xor
xchg
dec
mov
adc
lock
jbe
iret
cmp
inc
mov
daa
mov
mov
pop
and
sbb
cmp
pusha
aas
mul
or
iret
xor
dec
ror
xlat
jb
out
add
data16
movs
xor
inc
bound
push
movs
and
repnz
icebp
ret
aam
mov
push
adc
pop
jo
les
adc
rol
pusha
div
and
xor
xchg
shl
les
and
mov
in
aam
addr16
xor
in
jbe
mov
adc
outs
stc
aam
outs
stc
mov
or
mov
xchg
jae
xor
loope
data16
add
stc
cmp
stc
mov
jge
stc
add
mov
mov
div
sbb
shr
stc
jae
outs
stc
jmp
dec
push
mov
push
cmps
pop
(bad)
jno
(bad)
rcl
outs
stc
mov
outs
stc
mov
sub
(bad)
loopne
pop
in
add
push
inc
xchg
jb
lahf
loopne
xor
mov
cs
sbb
xor
loopne
ja
shl
sub
sbb
xor
loopne
adc
inc
sub
(bad)
loopne
pop
in
shr
add
div
sbb
shr
pop
jae
xor
jecxz
xlat
icebp
shr
sbb
xor
loopne
push
rol
adc
sub
sbb
xor
loopne
pop
in
sub
add
div
sbb
shr
sbb
xor
loopne
or
ins
adc
jo
lea
cli
and
mov
rcl
push
xor
mov
adc
push
push
adc
loopne
test
add
mov
xchg
clc
and
ss
lea
cmps
sbb
bound
mov
ret
and
push
rcl
push
inc
mov
stc
inc
dec
outs
stc
mov
or
stc
xchg
inc
outs
stc
mov
repnz
jb
stc
jmp
dec
(bad)
(bad)
mov
dec
outs
stc
mov
dec
push
nop
mov
and
adc
cmps
sbb
xor
loopne
xchg
in
shr
inc
repz
stc
loopne
outs
stc
mov
stc
mov
sub
repz
stc
loopne
outs
stc
mov
stc
mov
cs
push
jb
jns
dec
outs
stc
mov
cs
jb
stc
jmp
iret
xor
mov
outs
stc
ror
mov
dec
imul
push
push
sar
outs
stc
mov
out
mov
cs
jb
stc
jmp
cs
repnz
lock
inc
outs
stc
leave
dec
outs
mov
jbe
lock
outs
stc
mov
stc
mov
iret
outs
lock
outs
stc
mov
mov
imul
mov
dec
outs
stc
mov
mov
outs
stc
leave
iret
pop
mov
dec
outs
stc
mov
dec
outs
jns
dec
outs
stc
or
or
iret
xchg
clc
and
test
test
outs
stc
mov
outs
stc
mov
dec
sbb
mov
jp
stc
adc
ret
mov
es
jbe
sbb
inc
outs
stc
ror
mov
lds
dec
addr16
mov
dec
call
stc
cld
dec
outs
stc
mov
cmp
outs
stc
mov
stc
mov
movntq
aam
ja
mov
push
inc
mov
dec
outs
stc
mov
push
call
les
dec
into
test
dec
outs
stc
mov
outs
stc
dec
dec
outs
mov
outs
push
lock
addr16
jb
stc
jmp
dec
outs
sar
call
jns
outs
stc
mov
dec
dec
mov
pop
(bad)
nop
jbe
mov
xchg
inc
outs
stc
mov
stc
mov
jbe
stc
ror
mov
aad
mov
mov
outs
stc
mov
mov
mov
es
loope
push
in
shl
stc
add
stc
mov
aaa
stos
mov
inc
out
call
inc
outs
(bad)
xor
jmp
dec
dec
cld
mov
call
inc
inc
sub
rol
fimul
jbe
stc
cmp
stc
mov
emms
push
leave
f2xm1
and
dec
inc
sub
imul
cmp
cwde
popa
shl
jecxz
outs
stc
or
mov
dec
push
idiv
ins
outs
stc
and
stc
mov
stc
mov
dec
addr16
cmp
nop
shl
rol
addr16
xor
stc
mov
call
mov
push
outs
stc
cmp
lock
arpl
jmp
inc
mov
outs
stc
add
stc
mov
iret
pop
mov
adc
outs
stc
mov
dec
push
cld
mov
or
call
aad
jns
push
outs
stc
sbb
stc
mov
cmp
cmp
mov
nop
shl
rol
addr16
and
stc
mov
aad
iret
loop
mov
outs
stc
cmp
iret
xlat
lock
jb
jns
inc
outs
stc
jmp
fcmovu
enter
repz
xchg
add
out
fdiv
stc
push
inc
outs
stc
mov
das
lock
dec
jecxz
mov
dec
into
mov
mov
outs
stc
mov
dec
dec
pushf
mov
cs
jo
repnz
out
mov
nop
xlat
ss
mov
outs
stc
ror
mov
dec
outs
stc
mov
dec
loope
mov
dec
outs
stc
mov
pusha
outs
stc
jmp
dec
imul
outs
out
mov
mov
or
and
xadd
push
push
mov
adc
inc
repz
push
je
or
stos
jbe
stc
ror
stc
mov
dec
or
rcl
outs
stc
mov
stc
mov
iret
jge
mov
outs
stc
add
stc
mov
sar
dec
outs
stc
mov
dec
inc
sar
outs
stc
add
stc
mov
stc
mov
pop
outs
stc
mov
outs
stc
mov
call
xchg
xchg
or
xor
push
out
cmp
cmps
sbb
xor
loopne
test
or
stc
xchg
inc
outs
stc
mov
stc
mov
dec
push
inc
mov
dec
outs
stc
mov
dec
enter
xor
icebp
inc
outs
stc
or
mov
dec
jmp
jbe
stc
mov
stc
mov
pavgw
mov
add
aam
jecxz
mov
outs
stc
aam
outs
stc
mov
mov
mov
jbe
stc
add
mov
mov
mov
pushf
rcl
outs
stc
mov
(bad)
mov
pop
mov
jecxz
push
push
sar
outs
stc
mov
stc
mov
setbe
mov
addr16
jb
stc
jmp
iret
dec
mov
gs
mov
xlat
scas
xchg
push
push
lock
stc
jmp
out
jecxz
mov
pusha
mov
add
rcl
outs
stc
mov
stc
mov
dec
xor
repz
pop
mov
push
lock
outs
stc
mov
iret
pop
mov
adc
outs
stc
mov
push
outs
stc
leave
dec
pop
in
iret
test
stc
xor
(bad)
mov
js
stc
add
stc
mov
push
loopne
fild
stc
loope
outs
stc
mov
sar
lock
shl
outs
stc
add
stc
mov
stc
mov
out
xor
mov
dec
(bad)
inc
shr
mov
pop
cs
xor
mov
not
jbe
stc
and
stc
mov
iret
sub
jbe
stc
xor
(bad)
mov
pusha
push
lock
stc
(bad)
jmp
mov
push
inc
mov
stc
ror
stc
mov
dec
test
add
stc
mov
jmp
mov
push
inc
mov
outs
stc
push
dec
outs
stc
mov
iret
jno
mov
push
inc
dec
and
adc
stc
mov
jge
stc
add
outs
stc
mov
stc
mov
inc
repnz
jbe
rol
outs
jmp
mov
push
inc
mov
inc
mov
inc
push
lock
stc
(bad)
fnstcw
rcl
hlt
mov
jb
inc
loopne
inc
repz
je
or
stos
jbe
stc
add
(bad)
mov
pop
loop
mov
inc
outs
stc
mov
stc
mov
iret
inc
jecxz
add
test
outs
stc
sub
std
mov
jbe
stc
mov
dec
data16
mov
iret
pop
nop
mov
data16
stc
push
dec
outs
stc
mov
mov
xor
stc
sub
stc
mov
dec
jmp
jbe
stc
mov
stc
mov
cmovb
mov
outs
stc
sbb
ret
pop
addr16
mov
inc
jecxz
shl
sbb
popa
outs
stc
aad
outs
stc
or
stc
mov
cli
xor
add
ror
mov
cs
jb
stc
jmp
dec
push
push
mov
push
outs
stc
sub
stc
mov
dec
outs
jns
inc
outs
stc
cdq
dec
outs
mov
cmps
stc
loopne
inc
outs
jns
dec
outs
stc
cmp
iret
mov
jno
enter
test
push
lock
ja
stc
mov
stc
mov
inc
repnz
aam
push
cmp
stc
add
stc
mov
stc
mov
fild
jl
jbe
stc
icebp
jbe
stc
mov
stc
mov
iret
xor
mov
jmp
and
les
dec
outs
stc
mov
dec
addr16
mov
iret
inc
lock
dec
outs
stc
mov
jg
in
mov
ja
jbe
stc
add
stc
mov
stc
mov
clc
jmp
stc
popa
jbe
stc
mov
idiv
stos
test
aad
adc
aaa
fucomp
je
jbe
stc
and
stc
mov
idiv
cmp
add
stc
mov
leave
mov
push
outs
stc
add
lahf
mov
push
push
inc
dec
inc
outs
stc
push
dec
outs
stc
mov
dec
shr
aas
ja
stc
cmp
push
loopne
fucomip
outs
mov
addr16
push
jbe
stc
mov
retf
mov
ja
stc
mov
stc
mov
inc
repnz
aam
jp
cmp
add
stc
mov
stc
mov
fild
mov
addr16
loope
outs
stc
mov
stc
mov
clc
xor
xor
aam
add
xor
aas
loopne
stc
sbb
jns
jns
jbe
stc
mov
lods
mov
inc
outs
stc
cdq
dec
outs
test
mov
pop
outs
stc
inc
dec
outs
cwde
mov
pop
add
add
les
dec
outs
stc
mov
iret
push
out
mov
repnz
shl
addr16
mov
outs
stc
mov
stc
mov
iret
cli
and
inc
outs
stc
mov
pop
mov
push
lock
adc
outs
stc
mov
(bad)
xor
mov
dec
outs
stc
mov
in
adc
inc
mov
les
jo
sahf
adc
outs
stc
add
mov
enter
xchg
pop
out
inc
add
dec
retf
push
jo
adc
outs
stc
mov
iret
stc
and
cmps
aaa
dec
mov
addr16
adc
jmp
les
pop
outs
stc
add
cwde
mov
bound
lock
outs
stc
mov
push
outs
stc
sbb
mov
dec
clc
and
push
push
or
addr16
jb
stc
jmp
iret
and
mov
jb
stc
jmp
dec
scas
mov
mov
adc
bound
mov
xchg
xor
sbb
stc
inc
dec
outs
sar
cs
jb
stc
jmp
dec
pop
test
dec
add
ss
(bad)
fcom
out
loopne
imul
or
mov
pop
out
jbe
sahf
mov
lock
jbe
stc
leave
dec
outs
stc
mov
iret
jns
mov
addr16
xor
mov
mov
xchg
inc
outs
stc
mov
sar
dec
outs
stc
mov
iret
xor
mov
(bad)
lock
push
adc
adc
addr16
jb
stc
jmp
dec
out
cwde
mov
bound
xor
test
iret
mov
stc
leave
dec
outs
mov
mov
inc
push
ror
test
ror
rcl
outs
stc
add
mov
stc
mov
rcpps
adc
outs
stc
mov
stc
mov
iret
xor
mov
dec
outs
stc
mov
iret
push
mov
dec
outs
stc
mov
dec
outs
jns
inc
outs
stc
cmp
stc
mov
dec
push
push
mov
es
xor
push
rol
outs
stc
or
mov
cwde
xor
xor
xchg
adc
(bad)
inc
adc
sbb
repnz
loopne
push
rol
outs
stc
nop
dec
outs
stc
mov
iret
xchg
icebp
mov
repnz
inc
outs
stc
mov
stc
mov
dec
outs
jns
inc
outs
stc
cmp
stc
mov
outs
addr16
jb
stc
jmp
dec
out
push
mov
data16
add
stc
sbb
pop
icebp
mov
dec
outs
stc
mov
dec
addr16
mov
call
xor
stc
mov
dec
fcmovnbe
mov
and
test
call
cs
jb
stc
jmp
dec
outs
sar
push
mov
enter
mov
jbe
test
arpl
pusha
dec
outs
stc
mov
dec
outs
stc
mov
dec
out
retf
mov
jbe
stc
mov
stc
mov
(bad)
cli
mov
aam
outs
stc
mov
xlat
mov
es
cmp
out
stos
inc
outs
stc
ins
dec
outs
stc
mov
jge
stc
xor
stc
mov
mov
mov
adc
outs
stc
or
jmp
mov
push
data16
stc
leave
dec
aas
pushf
mov
bound
pushf
mul
xor
dec
push
lock
outs
stc
sbb
stc
mov
dec
ret
and
data16
jns
dec
outs
stc
mov
dec
daa
(bad)
mov
jb
shr
jge
loop
and
xor
loopne
addr16
xchg
repnz
out
xor
(bad)
cmc
mov
js
inc
jmp
push
and
jg
pop
add
inc
test
js
push
mov
and
pop
(bad)
hlt
cld
push
lds
jbe
fs
(bad)
fs
xchg
inc
fxch
jae
daa
nop
sub
imul
(bad)
push
shl
or
mov
dec
xchg
gs
addr16
lahf
and
dec
xchg
(bad)
and
cmp
mov
aam
pop
push
sbb
jo
mov
es
scas
bound
push
mov
and
call
inc
jns
or
enter
les
or
cwde
fs
rol
ret
fnsave
pop
scas
ret
jae
add
aaa
jo
pop
pop
in
xchg
(bad)
push
mov
mov
imul
mov
mov
xchg
bnd
aam
loope
jnp
int
xchg
lods
cmps
fadd
stc
pop
add
neg
sbb
sbb
xchg
cmps
push
or
cmp
jl
xchg
repz
ret
sbb
inc
js
mov
or
cli
loop
inc
sti
sbb
sbb
ret
xchg
ja
cmp
sub
xchg
fistp
or
xor
and
neg
add
dec
xor
push
int3
add
mov
ja
sahf
fsub
xchg
nop
or
stos
lock
daa
fild
pop
xchg
test
int3
rcl
lock
xor
push
adc
repz
(bad)
jl
in
fmul
mov
das
lock
ja
shl
lock
clc
and
nop
ja
jmp
and
mov
xchg
ja
out
data16
outs
cmp
(bad)
leave
adc
iret
loopne
in
xor
call
pop
add
inc
test
dec
sbb
mov
cmp
pusha
dec
xchg
jae
cmp
call
daa
stos
xor
xchg
xchg
jmp
push
xor
clc
fsub
inc
xchg
(bad)
frstor
call
mov
and
xor
mov
xchg
or
lahf
jp
aas
and
data16
dec
enter
cmp
ret
push
sar
push
ins
pop
add
push
dec
jo
or
dec
in
stc
int
mov
es
js
in
(bad)
int3
mov
add
int
adc
into
pandn
js
mov
not
add
lods
mov
scas
xor
jb
jge
fdiv
fs
clc
ret
hlt
xlat
ret
add
jnp
mov
sub
cmp
ret
mov
daa
jbe
les
fadd
cdq
mov
cmp
aam
pop
mov
jae
lods
pop
fcomip
jae
cmp
arpl
sbb
jmp
test
and
iret
sbb
pop
push
inc
mov
(bad)
(bad)
jb
fs
sub
sbb
mov
push
pop
mov
xor
loopne
jp
mov
(bad)
cmps
mov
xchg
jp
inc
out
ret
sti
add
aaa
fwait
jnp
cmp
or
aam
cmp
retf
mov
cmp
adc
cmps
xchg
mov
and
pop
xor
fcom
ret
(bad)
jae
dec
xchg
add
lock
popa
hlt
mov
(bad)
dec
xchg
inc
jmp
adc
out
dec
mov
jmp
data16
or
test
outs
into
inc
in
(bad)
mov
mov
in
sbb
mov
or
xchg
sbb
pop
mov
mov
lock
sar
sbb
int
pusha
dec
xchg
mov
ins
jo
pop
pop
mov
mov
inc
mov
mov
or
int3
xor
rol
push
loope
rcl
mov
mov
inc
(bad)
mov
mov
jns
or
pop
psrlq
bound
jbe
jl
adc
stos
inc
neg
and
outs
pop
sbb
adc
push
sub
fld
inc
jg
addr16
lahf
or
jnp
dec
mov
add
call
enter
mov
clc
retf
pop
aam
or
xlat
add
sbb
test
mov
daa
sbb
mov
pop
and
jns
cs
je
aaa
rol
mov
js
aam
pusha
fist
xor
add
aaa
fwait
jecxz
xor
cmps
xchg
call
add
push
icebp
mov
sbb
fiadd
call
push
data16
fdivr
pop
dec
and
push
fild
ds
mov
leave
(bad)
fadd
out
push
frstor
cmp
stc
jnp
ja
xchg
int
int
jnp
fldenv
hlt
add
cmps
sbb
stc
aaa
rcl
dec
xchg
mov
fadd
cmp
xchg
pop
jne
mov
inc
pop
mov
js
bt
xchg
fistp
pop
sub
pop
mov
jns
das
mov
in
fistp
pop
mov
gs
mov
js
scas
xchg
cmp
xchg
fistp
fsub
and
lods
scas
xchg
jge
das
cmp
xchg
scas
pop
inc
(bad)
pop
add
mov
das
cmp
test
sbb
mov
sub
pushf
fistp
pop
sub
fdivr
sub
pushf
fistp
pop
mov
gs
mov
sbb
pushf
fistp
fsub
and
lods
scas
sbb
scas
cmp
scas
pop
inc
(bad)
pop
add
mov
scas
cmp
scas
dec
jne
rcr
fdivr
sub
sahf
fistp
pop
sub
fdivr
sub
sahf
fistp
pop
mov
gs
mov
sbb
shr
inc
fsub
and
lods
scas
sbb
scas
cmp
scas
pop
inc
(bad)
pop
add
mov
scas
cmp
scas
dec
jne
rcr
pop
mov
stos
mov
das
cmp
pushf
fistp
pop
sub
pop
mov
stos
mov
das
cmp
pushf
fistp
pop
mov
gs
mov
fwait
xor
pushf
fistp
fsub
and
lods
scas
fwait
jne
das
cmp
pushf
scas
pop
inc
(bad)
pop
add
mov
das
cmp
mov
sbb
mov
test
in
fistp
pop
sub
pop
mov
test
in
fistp
pop
mov
gs
mov
cdq
aaa
shr
in
fistp
fsub
and
lods
scas
cdq
ja
das
cmp
sahf
scas
pop
inc
(bad)
pop
add
mov
das
cmp
mov
sbb
mov
sub
lahf
fistp
pop
sub
fdivr
mov
scas
cmp
fistp
pop
mov
gs
mov
sbb
shr
inc
fsub
and
lods
scas
sbb
scas
cmp
scas
pop
inc
(bad)
pop
add
mov
scas
cmp
scas
dec
jne
rcr
fdiv
and
xchg
fistp
sbb
sub
mov
jns
das
and
xchg
fistp
sbb
cmp
mov
js
scas
adc
xchg
fistp
pushf
mov
and
lods
scas
adc
out
jnp
xchg
scas
pop
inc
pushf
rcr
int3
mov
jp
das
adc
ret
out
jnp
test
sbb
les
movs
jae
sub
les
movs
inc
enter
les
movs
add
dec
push
jne
add
jne
add
jmp
push
jne
cmps
ins
or
xor
mov
jge
lahf
adc
mov
dec
test
add
jmp
push
inc
pushf
out
or
xor
mov
dec
mov
adc
mov
dec
les
add
jmp
push
add
fs
xor
mov
in
mov
adc
mov
dec
hlt
lahf
jnp
jne
add
jmp
push
adc
fs
xor
adc
mov
dec
aam
jnp
jne
add
jmp
push
gs
push
in
or
xor
adc
mov
dec
xchg
lahf
jnp
jne
add
jmp
push
jne
cmps
ins
or
xor
mov
jge
lahf
adc
mov
dec
test
add
jmp
push
inc
mov
cmp
pop
add
mov
cmps
dec
or
pop
pop
nop
test
cmp
adc
pop
nop
out
nop
(bad)
imul
cmp
nop
mov
lock
imul
cmp
nop
cmps
dec
or
pop
pop
nop
test
cmp
ror
pop
pop
nop
out
nop
(bad)
imul
sbb
nop
pop
gs
pop
adc
cmp
pop
inc
cmp
pop
jne
loopne
gs
pop
adc
cmp
pop
inc
cmp
das
js
pusha
xor
shr
sub
dec
pop
test
mov
js
lock
shr
sub
dec
pop
test
mov
adc
cmp
fs
shr
stos
fmul
test
sub
cmp
cmps
jns
add
stos
pushf
dec
fistp
jmp
movs
cld
test
inc
aas
mov
inc
std
mov
(bad)
hlt
xor
xor
sbb
fs
ret
and
(bad)
dec
lods
repnz
mov
cs
dec
loopne
dec
imul
sub
into
cmc
ins
pop
shr
std
jnp
pop
add
jns
inc
mov
inc
xchg
sub
mov
xchg
and
pop
aam
or
adc
push
inc
push
iret
xor
lods
(bad)
xlat
das
and
pop
push
mov
enter
pop
push
addr16
retf
cwde
inc
mov
test
adc
pop
lahf
xchg
fsub
xchg
fsub
mov
fdivr
sbb
push
repnz
int
lock
stos
inc
cmp
fcomip
inc
pop
aam
ss
pusha
cmp
or
int
sbb
add
out
movs
and
js
push
jmp
fist
cld
jae
sbb
jmp
xchg
add
inc
jns
jb
out
push
xchg
mov
shl
or
fwait
int
xor
aaa
sbb
fiadd
dec
mov
daa
and
enter
pop
arpl
pop
mov
or
lods
adc
jo
sbb
arpl
pop
dec
push
cmps
pop
dec
xchg
es
fs
(bad)
cmps
lahf
sbb
retf
aas
mov
dec
lods
lahf
pop
dec
movs
cmps
push
push
xchg
(bad)
fld
push
cmp
repz
mov
pop
cmps
pop
dec
xchg
cmps
dec
push
xchg
and
cli
ficomp
pop
dec
movs
cmps
pop
dec
xchg
cmps
rdmsr
xchg
cmps
(bad)
(bad)
xchg
call
das
push
and
dec
fsub
sub
sub
jecxz
iret
jbe
mov
or
sbb
push
js
iret
ss
mov
adc
into
pop
fwait
pop
dec
lds
sub
out
into
xchg
scas
pop
dec
aad
enter
neg
test
push
(bad)
cmp
ja
in
dec
sbb
pop
push
movs
cmps
shr
xchg
xor
dec
fsub
pop
dec
xchg
es
xchg
out
into
xchg
scas
pop
dec
aad
or
xchg
loopne
dec
push
cmps
pop
sub
cmc
aam
jl
jne
fmul
add
out
xchg
add
int3
jbe
mov
jmp
or
ins
cdq
and
inc
dec
ret
sbb
std
or
sub
sahf
jbe
fcmovb
mov
dec
test
and
fsub
or
fs
sub
test
hlt
dec
jns
add
shl
adc
cmps
int3
mov
add
fidiv
imul
pop
dec
pusha
sbb
inc
push
repnz
in
mov
daa
cmp
sbb
jbe
push
xor
ja
push
mov
ja
sub
or
(bad)
enter
(bad)
jecxz
or
mov
mov
lock
or
pop
lock
inc
jns
jle
mov
push
out
adc
add
sub
pusha
aam
mov
sti
dec
lds
sub
ins
fmul
dec
dec
jae
mov
retf
les
fsubr
jl
mov
pop
sbb
pusha
aam
add
jp
mov
or
jnp
sbb
fnstenv
mov
sub
mov
and
sti
dec
cmp
jcxz
or
cmps
mov
mov
mov
pop
jns
mov
mov
push
or
in
ins
rcr
outs
loopne
jbe
mov
jbe
repnz
add
xchg
test
and
push
pop
and
cdq
loope
ins
fstp
cmp
jbe
or
cli
sbb
adc
jae
test
cdq
imul
mov
out
sub
xor
js
in
or
sti
call
daa
jle
push
add
adc
and
xor
(bad)
call
or
iret
or
adc
or
and
or
and
dec
push
and
push
push
sub
mov
pop
fwait
sub
jmp
sub
imul
jnp
les
data16
xchg
pop
mov
in
mov
or
popa
jge
jg
pop
test
fstp
mov
jb
push
leave
cmp
enter
mov
mov
ret
ret
mov
aam
cdq
or
pop
ret
cdq
test
mov
jnp
retf
xchg
out
(bad)
push
mov
xor
xchg
in
sahf
sbb
inc
fincstp
jg
(bad)
xchg
imul
out
neg
(bad)
(bad)
pop
fdivr
or
and
xchg
dec
cld
addr16
push
sub
mov
fs
shr
pop
push
fs
popa
fdivr
data16
cmp
push
mov
or
mov
xchg
enter
mov
sub
add
(bad)
jge
stc
icebp
cs
push
ficom
stc
adc
mov
cmp
pop
mov
ja
mov
mov
aaa
sub
ret
mov
fld
mov
clc
cmps
sbb
ret
je
call
jne
out
dec
add
xor
and
hlt
add
xchg
mov
jle
repz
mov
push
fild
scas
push
retf
fadd
inc
or
inc
cwde
push
mov
ja
jae
out
adc
rcr
cwde
mov
xchg
sar
aam
std
xor
jne
mov
(bad)
std
mov
jg
mov
jg
enter
mov
das
std
mov
jg
mov
jg
pushf
fnsave
mov
(bad)
mov
jg
mov
aam
hlt
mov
dec
std
shr
jg
mov
idiv
mov
(bad)
hlt
mov
dec
std
mov
jg
push
jmp
mov
dec
xchg
mov
das
std
mov
jg
mov
jg
jmp
jne
scas
mov
xchg
cmp
pop
shl
aam
std
mov
jg
push
pop
js
mov
daa
call
aam
aam
aam
std
mov
imul
xchg
sub
jp
mov
das
jge
fistp
sbb
xchg
test
sub
jge
(bad)
ja
fdivr
and
aam
std
mov
jg
mov
aam
std
lods
fnstsw
mov
(bad)
mov
jg
mov
push
paddw
sbb
xor
mov
pop
std
in
jg
mov
jbe
mov
iret
std
mov
or
int
sbb
xor
mov
pop
std
mov
jg
in
jg
mov
jbe
mov
iret
jge
test
jbe
mov
jg
mov
jg
lods
fnstsw
mov
fistp
test
jbe
js
inc
hlt
mov
into
int3
cwde
fnsave
mov
das
std
push
fidivr
mov
daa
call
aam
hlt
mov
pop
std
mov
imul
xchg
sbb
push
mov
das
std
mov
jg
neg
jg
sbb
xchg
hlt
pushf
dec
inc
test
push
and
mov
jg
mov
imul
xchg
push
aam
std
mov
jg
mov
jg
push
pop
js
mov
(bad)
add
aam
std
adc
jge
enter
in
xchg
movs
mov
cmps
std
mov
jg
loope
jg
mov
aam
std
adc
jg
mov
inc
call
ins
xchg
cld
in
push
movs
pushf
popf
inc
test
push
sub
mov
jg
jmp
jne
dec
(bad)
not
aam
jge
fdivr
sbb
xchg
in
jge
test
aam
std
xor
jb
mov
leave
and
aam
jge
fidivr
sbb
xchg
test
sub
mov
jg
xor
ja
fdivr
and
aam
std
mov
jg
mov
je
popf
xchg
aam
hlt
mov
outs
std
mov
jg
mov
aam
std
in
jg
out
jbe
mov
cmp
into
into
call
aam
std
mov
jg
mov
jg
cwde
aad
shl
aam
std
mov
jg
sbb
xchg
aam
pop
inc
test
aam
std
xor
jg
cmp
jo
test
jne
in
and
aam
std
push
pop
js
mov
cmps
jmp
aam
in
aam
std
mov
jg
mov
imul
xchg
call
aam
std
mov
jg
mov
jg
push
pop
js
mov
(bad)
mov
mov
outs
std
mov
jg
dec
fnstsw
mov
(bad)
std
mov
jg
loopne
jg
stos
in
jbe
push
jmp
mov
in
les
aam
std
mov
jg
mov
jg
mov
aam
std
mov
jg
in
jg
mov
jbe
mov
jg
mov
jg
push
fidivr
mov
daa
call
aam
hlt
mov
outs
std
xor
jg
cmp
jo
test
jne
in
and
mov
pop
std
mov
jg
push
pop
js
mov
cmps
jmp
aam
in
aam
std
mov
jg
mov
imul
xchg
call
aam
std
mov
jg
mov
jg
push
pop
js
mov
(bad)
jecxz
aam
mov
aam
std
dec
fnstsw
mov
(bad)
jge
fnstcw
lahf
in
jbe
push
jmp
mov
nop
mov
xchg
mov
jg
mov
aam
std
mov
jg
in
jg
mov
jbe
mov
jg
in
jg
mov
jbe
mov
dec
std
mov
jg
shr
jbe
mov
jg
mov
ins
enter
push
sbb
add
mov
push
hlt
mov
pop
std
mov
jg
pop
fidivr
mov
das
std
mov
jg
mov
aam
std
mov
jg
lods
std
jg
mov
dec
bsr
jmp
jbe
mov
push
hlt
mov
das
std
mov
jg
in
jg
mov
jbe
mov
mov
std
in
jg
mov
jbe
mov
(bad)
std
in
jg
mov
jbe
sub
cli
push
jmp
mov
les
aam
std
loope
jg
mov
jbe
mov
jg
mov
jg
cwde
sar
mov
das
std
mov
jg
mov
jg
sbb
xchg
aam
pop
inc
test
aam
std
xor
jg
cmp
jo
test
jne
in
and
aam
jge
fnstcw
sbb
xchg
hlt
lods
int
test
aam
std
mov
jg
mov
jg
mov
imul
xchg
call
aam
jge
fdivr
sbb
xchg
xchg
lods
popf
inc
test
aam
std
mov
jg
mov
jg
dec
fnstsw
mov
(bad)
jge
fnstcw
fcomp
jbe
mov
std
cs
in
cwde
mov
es
test
out
or
push
inc
ja
sub
lock
out
xor
inc
fs
int3
cmp
call
aam
(bad)
retf
push
lock
div
mov
inc
sub
outs
jnp
dec
adc
out
test
mov
push
mov
enter
cmp
fadd
dec
fmul
mov
fstp
sub
xor
mov
pop
dec
imul
mov
fst
repz
mov
call
mov
fs
shr
sub
fcmovb
jae
mov
jmp
sub
call
je
idiv
mov
sbb
outs
xchg
jns
or
xchg
jbe
mov
out
xchg
add
inc
retf
jae
mov
pop
pop
push
mov
jb
call
ja
and
jbe
and
cdq
js
or
jns
ja
div
lods
push
ins
sub
imul
or
ja
inc
cmp
retf
inc
pop
xor
addr16
mov
fldcw
pop
dec
(bad)
adc
jl
mov
test
mov
hlt
mov
ins
aaa
or
aaa
dec
xchg
jns
jnp
fld
out
call
scas
dec
xor
mov
mov
(bad)
xor
cmp
in
pop
cmc
cmp
cmps
push
mov
idiv
mov
scas
xor
int3
push
arpl
cmp
call
pop
(bad)
jbe
das
push
mov
pop
lahf
or
(bad)
jmp
mul
pop
andps
lea
movs
imul
fidivr
dec
mov
inc
imul
cmp
jb
test
mov
cvtpi2ps
push
mov
(bad)
or
jecxz
xor
cmps
int3
add
rcr
dec
mov
mov
or
mov
mov
bound
aaa
cmps
add
(bad)
scas
jne
dec
push
shl
cmp
pop
lea
push
idiv
mov
inc
cmp
jbe
or
mov
xchg
int
jnp
pop
cmp
cmp
lds
mov
pushf
aam
into
(bad)
je
(bad)
enter
ret
test
pop
xchg
aaa
mov
std
mov
push
frndint
(bad)
in
push
add
pushf
dec
fldenv
ins
or
pop
pop
lock
mov
repz
jbe
jl
fcmovb
xor
or
jl
in
add
aad
push
fbld
in
jb
stos
mov
imul
push
fnstcw
pop
outs
mov
pop
inc
xchg
mov
daa
dec
ins
jnp
sbb
shr
stos
sub
pop
cwde
inc
mov
cmps
call
ss
push
dec
cld
aaa
repnz
add
sbb
fbstp
(bad)
leave
inc
jl
pop
mov
sub
aam
cmp
fwait
mov
xor
mov
mov
jns
in
pop
int3
adc
lods
pop
pop
push
mov
cmp
sti
xlat
(bad)
repnz
xor
mov
loop
push
out
mov
push
imul
push
cld
mov
outs
jmp
push
push
jmp
ja
imul
pop
jecxz
push
out
jmp
push
push
jmp
pop
push
scas
mov
pop
jmp
push
push
jmp
inc
push
jmp
pop
pop
stos
mov
imul
mov
push
jmp
push
push
mov
mov
push
jmp
das
push
jmp
call
sbb
sbb
(bad)
imul
sbb
js
jb
or
push
cmp
sub
(bad)
imul
shl
mov
and
push
in
sbb
cld
jle
adc
test
xor
(bad)
add
sbb
pusha
push
dec
jmp
sbb
sar
outs
push
sbb
xlat
mov
sbb
(bad)
in
push
sbb
jle
mov
outs
push
mov
ror
sub
sub
ret
test
mov
jbe
scas
or
jae
pop
pop
fs
cmc
(bad)
xor
pop
aam
xchg
jbe
add
inc
jmp
pop
ins
push
inc
sti
jne
pop
inc
pop
shr
jns
push
or
xor
mov
ficom
mov
mov
adc
pop
sbb
jno
push
mov
pop
or
into
loopne
and
sbb
fdiv
(bad)
adc
or
js
xlat
int3
data16
fdivr
inc
stc
jne
sbb
in
push
fcomip
inc
jge
sub
fwait
jecxz
xor
ja
(bad)
(bad)
sbb
repnz
jns
fwait
addr16
xlat
and
mul
(bad)
fild
sbb
adc
cmp
jle
inc
stc
cmps
fwait
cmps
(bad)
fiadd
cmp
cmp
jp
arpl
mov
jb
mov
test
sub
xchg
fsubr
lods
pop
jnp
lods
fs
mov
fsubr
lods
fsubr
lods
lods
pop
jbe
movs
iret
push
fcom
sub
repz
pop
fdiv
xchg
test
cdq
call
xchg
xchg
in
xchg
loope
mov
cwde
pop
stc
xchg
ja
sbb
fwait
sahf
adc
pop
inc
cmp
movs
lock
in
cmp
and
push
icebp
pop
mov
not
jae
fs
rcr
ror
mov
mov
xchg
pop
test
pop
movs
push
icebp
fstp
ret
aaa
inc
call
and
or
in
inc
enter
cwde
fcom
in
aam
inc
pop
cmps
and
popa
and
and
cli
imul
push
jecxz
push
int3
mov
cmps
jnp
fwait
pop
int3
arpl
fnsave
pop
shr
fdivr
pushf
xchg
les
sbb
mov
outs
push
fcmovnb
ret
jne
add
jbe
or
mov
cmps
fiadd
ret
sbb
inc
enter
call
cli
mov
dec
les
dec
into
or
sbb
fs
shr
lea
shl
lahf
loop
jb
aam
retf
push
out
test
xor
fist
xor
and
jb
add
or
mov
pop
sub
sub
int3
dec
and
js
movaps
sbb
adc
imul
mov
neg
add
retf
out
repnz
call
dec
and
push
fist
or
adc
mul
stos
dec
mov
push
fild
out
xchg
or
xlat
xor
fiadd
add
sbb
xchg
pop
sub
imul
ja
cmp
out
fwait
or
jle
dec
mov
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
or
jle
pop
lods
jle
int3
mov
popf
clc
pop
cmp
mov
pop
int3
pop
cwde
jmp
enter
cli
dec
(bad)
mov
dec
clc
cmp
mov
clc
cli
dec
pop
popf
pop
dec
mov
cmp
dec
(bad)
dec
mov
(bad)
mov
int3
ins
clc
mov
pop
popf
or
jle
sbb
jle
sub
jle
cmp
jle
dec
mov
or
jle
or
jle
or
jle
or
jle
cli
movs
jle
retf
sbb
jb
cmp
jle
sbb
mov
jl
retf
sbb
or
fcmovbe
outs
sbb
mov
pop
mov
sbb
outs
fwait
arpl
push
sbb
jg
sub
jg
mov
or
stos
retf
lods
or
cmp
pop
sbb
or
fisttp
into
sbb
or
or
cli
mov
jbe
jmp
aam
(bad)
ds
and
jae
pop
in
scas
fwait
cmp
jno
sub
into
fwait
dec
or
sub
push
or
dec
mov
jp
push
mov
jp
dec
fwait
mov
push
sbb
mov
jbe
or
sahf
sbb
outs
sbb
or
mov
out
sbb
or
sub
sahf
sbb
mov
cmp
je
cmp
jae
stos
mov
fwait
sbb
jno
sbb
scas
fwait
mov
dec
aad
fwait
xor
dec
sbb
je
sbb
jg
call
out
push
outs
sbb
js
jp
(bad)
sbb
int
fwait
xchg
mov
call
xchg
mov
je
dec
sar
lds
mov
(bad)
call
sub
out
sbb
mov
cli
mov
sbb
xchg
mov
cli
fsubr
sub
ficomp
call
aam
loopne
fwait
push
mov
mov
or
stos
xchg
sbb
ret
pop
fwait
lea
out
sbb
nop
ficomp
cmps
or
dec
mov
pushf
cmp
cs
or
mov
mov
retf
fwait
loope
ja
(bad)
into
fwait
dec
mov
sbb
mov
or
jae
cli
(bad)
cmp
push
sbb
jle
dec
mov
push
mov
push
push
fwait
imul
sbb
jae
stos
jmp
sbb
(bad)
into
sbb
iret
into
sbb
call
mov
test
push
jns
jmp
mov
lock
jae
jp
outs
sbb
vmread
or
sbb
(bad)
jle
cmp
jbe
push
ficomp
dec
mov
fwait
pop
(bad)
jb
or
mov
mov
psrld
out
(bad)
fwait
mov
jo
push
outs
fwait
xchg
pcmpeqw
(bad)
jno
pop
mov
fwait
mov
lahf
jle
retf
(bad)
mov
(bad)
xchg
(bad)
mov
jmp
enter
(bad)
jo
retf
sbb
or
xlat
jmp
out
jmp
mov
xor
mov
fmul
jecxz
lea
pop
or
scas
sub
sbb
jno
cmp
ja
jp
(bad)
fwait
mov
fwait
xchg
or
sub
jae
ficom
jge
sub
je
pop
cld
sahf
sbb
or
test
mov
fwait
in
or
shr
cs
repnz
lea
mov
sbb
or
(bad)
fwait
pop
or
scas
sbb
or
jle
xor
(bad)
fwait
dec
lea
cmp
je
sbb
push
fwait
lea
pop
(bad)
mov
jge
jbe
push
sahf
sbb
mov
jle
push
scas
fwait
stos
or
out
sbb
lods
outs
fwait
enter
push
scas
fmul
ds
jecxz
jb
retf
fwait
test
ja
call
in
mov
into
sbb
add
sbb
jl
cmp
(bad)
sub
dec
fwait
push
add
pop
mov
sbb
jbe
dec
fcomp
jno
jge
jp
push
sbb
mov
jo
mov
cmp
into
sbb
mov
sbb
cmp
loopne
sbb
xor
mov
jb
dec
in
fwait
stc
add
pop
mov
fwait
push
add
jmp
mov
ret
mov
mov
add
stos
jmp
fwait
inc
add
jp
jle
pop
add
push
(bad)
sbb
jle
cmp
mov
mov
mov
ja
mov
xor
mov
fwait
scas
cmp
test
xor
movs
jle
ret
xchg
retf
fwait
rol
jne
fcmovbe
ficomp
dec
xchg
sahf
sbb
add
pop
(bad)
out
sbb
add
sbb
jbe
mov
pop
fwait
add
mov
xor
(bad)
mov
xchg
jp
ds
pop
cmp
pop
sbb
jne
push
mov
jo
jle
call
ror
out
sbb
imul
sbb
xchg
scas
sbb
(bad)
ds
xor
jecxz
sbb
xor
xchg
into
fwait
jmp
jnp
stos
(bad)
mov
mov
xor
push
xor
sub
jl
stos
test
in
sub
dec
cmp
pop
add
retf
sbb
jnp
fisub
jo
sub
jb
mov
sbb
sahf
scas
fwait
lods
add
retf
push
fwait
mov
ja
pop
mov
fwait
lds
dec
sbb
add
or
jle
dec
out
fwait
cli
xor
or
js
jp
jle
adc
jl
push
scas
sbb
push
ja
mov
push
jae
jp
sbb
jg
call
dec
scas
fwait
ins
push
jbe
mov
mov
jne
jl
stos
in
scas
sbb
cs
xchg
xchg
(bad)
out
fwait
mov
xchg
mov
mov
call
or
out
sbb
xchg
pop
ret
out
xchg
mov
push
jge
stos
jmp
jbe
cli
mov
sbb
xchg
(bad)
(bad)
fwait
sub
jb
mov
pop
jns
push
ficomp
mov
pop
jno
dec
out
pop
fwait
addr16
jno
jp
push
fwait
jne
jo
push
mov
pop
sti
into
sbb
scas
push
sbb
in
fwait
mov
fcomp
fwait
iret
pop
jne
push
jle
rol
jle
fimul
jbe
retf
sbb
xchg
mov
rcr
mov
out
push
(bad)
sbb
test
pop
loopne
sbb
jge
jmp
shr
jle
pop
add
cdq
dec
lods
sbb
stc
sbb
lds
mov
cmps
dec
sbb
repz
sbb
test
jp
push
sbb
test
dec
out
push
sbb
add
into
stos
mov
fwait
clc
add
(bad)
mov
jle
or
(bad)
fwait
pop
test
cli
cmc
mov
das
test
sahf
outs
fwait
xor
dec
fwait
dec
add
scas
fwait
pop
test
call
cli
or
jl
sbb
push
sbb
dec
sbb
mov
js
stos
(bad)
cs
retf
call
fld
jle
out
jb
sub
jns
mov
call
push
call
ins
sbb
dec
xchg
dec
fwait
jae
js
mov
call
cwde
sbb
test
fwait
mov
shr
mov
mov
fwait
(bad)
sbb
dec
stos
dec
sbb
sbb
pop
(bad)
ficomp
out
sbb
or
sahf
fwait
cmc
call
or
outs
fwait
sbb
jns
pop
cmc
pop
fwait
sbb
mov
jae
call
scas
fidiv
jnp
sub
ja
retf
fwait
jns
jg
call
mov
(bad)
nop
sbb
ficomp
je
mov
js
pop
pushf
jle
rcr
sbb
sbb
stos
fdivrp
sbb
sbb
push
mov
neg
cs
or
jl
call
shr
cwde
jbe
mov
cwde
jge
or
pop
sbb
jno
sbb
jp
fcmove
into
sbb
jno
or
jns
or
mov
mov
lods
sbb
retf
fwait
mov
jge
or
into
fwait
iret
cwde
js
sbb
jae
mov
cwde
jl
jp
mov
lock
ficomp
add
sahf
sbb
sbb
lock
sub
mov
xor
(bad)
fwait
inc
cdq
js
retf
fwait
push
cdq
js
fimul
jae
sbb
jae
dec
sbb
pop
aam
fwait
cwde
cdq
je
stos
fimul
mov
leave
mov
lods
mov
sbb
pop
xchg
outs
fwait
jecxz
jo
retf
fwait
stc
sbb
cmp
retf
call
loope
int3
scas
fwait
xor
jle
mov
push
jo
sub
dec
sbb
jb
jmp
mov
ret
jl
jae
sub
out
sbb
mov
fwait
xchg
sahf
jns
or
cs
scas
sahf
jb
push
outs
sbb
mov
fwait
(bad)
push
jne
fcmovu
out
fcomp
jle
jp
scas
sbb
sahf
jle
dec
cld
sahf
fwait
hlt
sahf
jns
pop
test
jb
sub
mov
cmp
jno
cli
cmc
push
sbb
pop
jg
call
sbb
fwait
push
lahf
jae
retf
sbb
jl
or
js
pop
mov
jp
pop
clc
mov
hlt
dec
stos
cs
mov
in
sbb
pop
jno
mov
fcomp
pop
fwait
in
ja
mov
pop
ja
stos
hlt
ds
add
mov
fwait
pop
pushf
jbe
sub
dec
fwait
and
fwait
ds
jbe
cli
cs
fwait
inc
pushf
jge
mov
jbe
pop
fisubr
sbb
jbe
dec
(bad)
push
sbb
jge
pop
mov
sbb
out
sbb
xchg
push
sbb
xchg
scas
fwait
mov
jge
dec
(bad)
mov
ret
pop
stos
(bad)
fwait
rcr
mov
mov
mov
lahf
(bad)
fwait
and
jle
cmp
aad
fwait
dec
sbb
mov
sbb
sahf
fwait
bound
jle
ja
jle
push
pop
fwait
mov
sahf
sbb
mov
jb
stos
ret
mov
xchg
outs
sbb
popf
jle
pop
fisubr
fwait
rcr
jle
out
sbb
ds
sbb
mov
xchg
push
(bad)
fwait
sbb
mov
jl
call
(bad)
sbb
scas
fwait
inc
xchg
jg
or
je
sbb
jne
push
sahf
fwait
jnp
jae
push
(bad)
sbb
call
aam
mov
je
push
ds
xchg
js
mov
jg
jmp
(bad)
cli
jmp
cli
into
dec
fwait
setae
stos
(bad)
inc
xchg
je
stos
out
into
sbb
jns
mov
xchg
jb
mov
xchg
jno
stos
(bad)
out
fwait
xchg
xchg
jp
jmp
in
mov
jae
pop
mov
sbb
xchg
jl
dec
out
sbb
xchg
ja
dec
in
jle
in
xchg
jnp
pop
mov
jo
jmp
in
hlt
dec
sbb
nop
jb
dec
jmp
jp
mov
xor
jb
push
mov
mov
leave
(bad)
sbb
jns
pop
mov
jbe
mov
adc
dec
iret
jle
adc
std
pop
call
fidivr
ja
jmp
cdq
(bad)
ficomp
mov
nop
jne
stos
aam
sbb
nop
jle
mov
js
mov
xchg
jp
jmp
xchg
cmp
sar
dec
fwait
xor
jp
cli
mov
jno
mov
xchg
jno
dec
out
pop
fwait
arpl
scas
sbb
jno
or
sbb
fcomp
mov
cmps
xchg
jnp
retf
sbb
fnstcw
iret
xchg
js
sub
mov
test
js
call
or
pop
sbb
sub
push
jo
cli
lods
push
sbb
movs
push
fwait
cmp
jb
jmp
xchg
sbb
out
fwait
pop
xchg
jns
mov
push
jle
(bad)
(bad)
fwait
jg
jbe
mov
push
jg
dec
mov
jnp
sbb
jg
jp
out
fwait
mov
jne
sbb
lods
mov
push
ja
jp
mov
mov
std
push
jl
sub
mov
in
mov
jbe
or
jo
jmp
loope
hlt
out
sbb
js
jp
cs
pop
pop
ja
sub
scas
fwait
outs
xchg
jg
retf
sbb
mov
xchg
jp
mov
pop
jp
dec
mov
fwait
movs
pop
jp
pop
fmul
mov
clc
push
fwait
into
xchg
jge
cmp
push
sbb
pop
jae
stos
cli
out
fwait
jmp
jge
pop
repz
fwait
repnz
jno
stos
ret
push
sbb
adc
shr
jmp
sbb
adc
fstp
fsubr
jmp
cmp
fwait
dec
adc
in
jp
outs
fwait
pop
xchg
jge
mov
xchg
jge
or
jle
jo
jg
sbb
je
retf
sbb
push
sbb
call
jl
retf
sbb
adc
out
xchg
sbb
adc
stos
cmp
jbe
cli
mov
fwait
repz
mov
mov
je
fcmovb
sbb
adc
scas
sbb
xchg
jae
push
scas
fwait
xor
jns
mov
xchg
jno
or
jae
fcmovu
sahf
fwait
gs
out
fwait
jne
jo
mov
mov
call
aad
mov
jp
ficomp
jp
call
mov
ficom
dec
sbb
xchg
jns
sbb
ds
xchg
jno
cli
mov
add
jge
call
call
je
stos
stos
cs
xor
jbe
sbb
jno
push
mov
jp
dec
fwait
ins
stos
jnp
or
push
sbb
jp
pop
in
sbb
mov
sbb
in
sbb
jmp
jg
push
outs
fld
jb
jp
ds
in
jns
dec
in
sbb
sub
fisub
jle
retf
sbb
stos
jne
call
icebp
mov
jnp
retf
fwait
inc
stos
je
ficomp
jg
mov
stos
jnp
mov
sub
stos
lods
(bad)
fwait
sub
jmp
jbe
cli
jmp
jb
jmp
loopne
lock
enter
dec
movs
into
sbb
stos
jno
mov
jnp
call
movs
mov
test
ror
test
int
lods
scas
sbb
mov
fwait
xor
push
sbb
js
pop
repnz
fwait
push
sub
sbb
jnp
or
ficomp
sbb
cs
sub
sbb
fmul
sbb
ficomp
mov
jb
stos
repz
fwait
leave
sub
call
aam
mov
into
cli
out
sbb
sub
or
jp
pop
mov
fwait
adc
dec
sbb
test
mov
aaa
test
sbb
jg
mov
test
out
sbb
jb
fcmovu
ficomp
jnp
jne
call
lods
mov
push
sbb
cmc
dec
sbb
lds
(bad)
sub
jp
or
jle
mov
mov
mov
sti
sub
sub
into
fwait
add
fisttp
fwait
adc
jbe
retf
fwait
and
mov
mov
out
fwait
dec
scas
jbe
call
mov
aam
fwait
imul
jne
jp
outs
fwait
mov
dec
fwait
xchg
scas
jo
stos
out
fwait
mov
out
fwait
mov
js
mov
cs
mov
scas
jno
jmp
fisttp
mov
ja
cli
mov
comiss
mov
fwait
push
das
jne
call
pushf
jmp
mov
in
sbb
test
jg
sbb
mov
dec
test
sbb
scas
jno
pop
std
cs
scas
jp
retf
fwait
jmp
outs
fwait
or
scas
pop
fwait
adc
jne
(bad)
push
sbb
fistp
clc
cli
in
sbb
jne
dec
xchg
sbb
jp
pop
ret
pusha
sub
out
mov
sbb
jle
jp
outs
sbb
xchg
xchg
sub
mov
test
jl
dec
mov
fwait
mov
mov
sbb
sub
movs
mov
jp
mov
ficomp
dec
scas
mov
sbb
js
retf
sbb
sub
push
sbb
lods
jnp
mov
outs
sbb
lods
jo
pop
lods
sbb
jge
fisubr
jae
cli
ret
pop
sbb
sub
push
sbb
jge
sub
jb
cmp
sahf
sbb
mov
sbb
fidivr
popf
stos
lahf
(bad)
fwait
enter
jp
out
sbb
lods
jno
push
out
sbb
lods
jp
pop
call
jp
ficomp
push
mov
into
sbb
xchg
sbb
jg
sub
outs
fwait
cmp
into
fwait
inc
mov
mov
push
and
sub
or
sbb
jl
sbb
ja
cmp
jp
jp
jle
lods
mov
jle
mov
jle
fidiv
jne
jp
outs
sbb
mov
ficomp
jmp
test
out
sbb
mov
into
fwait
pop
mov
scas
fwait
sub
out
fwait
cmp
jo
stos
out
ficomp
dec
and
mov
and
sbb
jae
jmp
cli
fcmove
jle
(bad)
mov
pop
sbb
mov
jle
stos
test
fwait
mov
jae
or
into
sbb
mov
into
fwait
aad
jns
mov
jle
out
jnp
cli
(bad)
dec
fwait
mul
jne
mov
jb
call
lods
pop
in
jle
das
mov
sbb
and
or
push
fwait
inc
mov
ficomp
push
(bad)
sbb
jp
call
call
jnp
dec
icebp
jle
lahf
and
sub
push
sbb
fimul
mov
jb
retf
fwait
retf
mov
pop
sbb
and
call
test
mov
out
fwait
add
sub
dec
(bad)
sbb
and
jmp
shr
mov
mov
scas
sbb
jge
sub
jno
mov
out
sbb
jo
jp
pop
sbb
leave
mov
int3
sbb
jle
retf
fwait
mov
sub
push
fsub
jns
stos
icebp
mov
(bad)
outs
sbb
and
retf
sbb
jae
dec
fwait
(bad)
fwait
sbb
into
fwait
and
clc
out
fwait
cmp
sahf
fwait
dec
cmps
jno
mov
test
es
cli
xchg
cs
jb
ja
mov
push
sbb
or
jp
into
fwait
stos
es
or
mov
retf
cmps
jno
jmp
out
lds
fwait
in
jne
cli
loopne
sbb
cmps
jne
dec
mov
fwait
add
jne
mov
sbb
daa
je
sub
jne
cmp
dec
fwait
cmp
jle
sbb
push
fwait
dec
cmps
jb
or
mov
mov
in
stos
into
fwait
xchg
je
stos
fimul
xchg
scas
sahf
fwait
movs
cmps
jbe
fcmovbe
sahf
sbb
mov
int3
cmps
jl
mov
daa
je
cli
clc
pop
fwait
jmp
js
cmp
push
sbb
cmps
jle
dec
leave
(bad)
sbb
and
test
jle
sbb
sbb
out
sbb
and
mov
iret
scas
fwait
inc
movs
jne
sbb
jbe
dec
(bad)
into
sbb
jnp
call
sbb
fwait
test
fwait
sahf
movs
js
cli
(bad)
ds
scas
movs
je
jmp
clc
call
mov
fwait
jle
fisub
sbb
movs
jg
push
ficomp
jp
pop
fwait
pop
and
push
sbb
movs
jns
push
push
fwait
daa
and
out
fwait
cmp
ds
inc
and
jle
push
movs
jb
jp
pop
sbb
sahf
sub
sahf
sbb
jnp
stos
mov
sbb
sbb
jecxz
fwait
test
mov
fwait
mov
jg
or
jp
sbb
push
fwait
xlat
movs
jno
push
dec
fwait
out
and
mov
jmp
out
retf
sbb
cmp
(bad)
sahf
sbb
jge
stos
in
fwait
aas
cmp
mov
cmp
mov
jp
cli
fistp
cli
push
into
sbb
jne
pop
out
into
fwait
mov
mov
cmp
jle
push
outs
sbb
fucomp
fwait
ret
cmp
push
mov
xchg
into
into
sbb
mov
sahf
fwait
cli
cmp
retf
fwait
add
leave
scas
sbb
jnp
retf
sbb
mov
into
fwait
aaa
mov
push
fwait
dec
mov
dec
sbb
jae
push
dec
sbb
js
jmp
(bad)
leave
ds
xchg
jle
xchg
cmp
call
(bad)
sbb
jle
or
mov
pop
mov
dec
stos
outs
fwait
sub
dec
sbb
or
or
je
stos
movs
ficomp
pop
or
cmp
into
fwait
imul
fwait
je
jae
pop
iret
out
fwait
xchg
out
fwait
cdq
mov
jp
into
sbb
xchg
(bad)
sbb
int3
push
sbb
or
mov
mov
or
push
fwait
out
mov
pop
retf
dec
jl
dec
lahf
cs
add
ja
sbb
mov
cli
pop
fwait
daa
mov
retf
fwait
cmp
outs
fwait
inc
or
retf
fwait
push
or
fidivr
jno
push
out
sbb
jle
mov
or
jmp
(bad)
jmp
or
cs
mov
jp
fisubr
jno
cli
movs
outs
fwait
xlat
or
retf
fwait
out
jb
fcmovu
scas
fwait
stc
mov
call
xchg
in
fwait
adc
dec
fwait
sub
jns
mov
jno
retf
fwait
inc
or
jp
pop
fwait
push
or
fidiv
jae
mov
jns
cli
out
sbb
imul
fwait
lahf
or
cli
popf
jle
cmps
or
call
mov
lds
jp
jmp
mov
loop
jl
mov
jo
call
rcr
jle
sbb
mov
jl
push
jle
cmp
jae
jmp
fxch
mov
fwait
push
or
mov
push
fwait
or
cmp
jae
dec
call
jle
pop
mov
sbb
lods
scas
sbb
movs
outs
sbb
lds
mov
mov
sbb
mov
cmp
pop
sbb
mov
sub
je
fiadd
xlat
cli
fwait
mov
mov
sub
sahf
sahf
fwait
mov
fcmovb
sbb
je
retf
sbb
jg
jmp
popf
fiadd
jl
mov
mov
stos
xchg
out
fwait
xchg
mov
dec
test
sbb
std
ficomp
mov
fcomp
int3
pop
(bad)
out
fimul
scas
sbb
push
jge
cli
aad
fwait
stc
mov
sub
jnp
sub
sahf
fwait
sbb
fsubr
sbb
(bad)
jge
mov
(bad)
jbe
cmp
jl
sub
ficomp
pop
cmps
cs
imul
push
fwait
jbe
jl
stos
mov
js
mov
(bad)
jae
jmp
test
aad
je
push
ficomp
out
jae
cmp
js
sub
scas
fwait
add
imul
push
sbb
or
scas
sub
jne
or
jecxz
aad
fwait
inc
mov
sub
jae
pop
or
mov
jmp
out
mov
sbb
mov
jne
sub
cs
lods
or
stc
mov
mov
iret
scas
sbb
mov
(bad)
out
sbb
or
mov
sar
sbb
mov
jmp
std
jp
scas
sbb
or
ficomp
push
lea
fisub
jb
cli
xchg
mov
cli
iret
scas
sbb
jp
cli
sti
outs
sbb
jo
jmp
or
sahf
fwait
jno
jbe
cli
int
fwait
mov
push
sbb
ror
lea
or
js
retf
fwait
retf
or
ds
aam
jo
sub
jle
in
lea
cmp
je
jmp
xchg
cli
into
push
fwait
adc
mov
jg
dec
cdq
jle
cmp
int3
push
sbb
js
mov
cmp
push
fwait
push
jl
retf
fwait
jae
jge
call
cmps
push
jle
xchg
add
or
ficomp
pop
mov
jae
fimul
jb
cmp
(bad)
sbb
cmp
push
sbb
xor
mov
jl
call
ror
add
mov
add
jmp
cmp
xor
(bad)
jle
push
add
stos
sahf
fwait
cmp
(bad)
outs
fwait
js
jbe
dec
xchg
sbb
mov
fwait
lahf
xor
fisttp
fwait
mov
movs
dec
fwait
mov
jge
retf
fwait
leave
xor
sar
rol
mov
cli
cmp
scas
sbb
cmp
ds
add
jl
mov
ja
sbb
(bad)
fwait
and
loope
fwait
cmp
jp
cli
lods
mov
pop
mov
sbb
js
jp
ficomp
arpl
jns
or
jbe
jp
pop
fwait
xchg
jo
push
into
fwait
cwde
add
push
mov
sbb
jbe
or
push
fwait
mov
jbe
push
outs
sbb
xor
jmp
jle
call
popf
push
dec
sbb
cmp
and
xchg
fwait
aaa
add
jmp
mov
pop
cmp
imul
fwait
jp
ja
mov
jmp
jl
cmp
jo
cli
xchg
sbb
(bad)
jle
rol
fwait
xlat
cmp
xor
repz
retf
sbb
push
jae
or
jno
sbb
sahf
fwait
and
retf
ficomp
aas
push
js
mov
xchg
loope
sbb
jge
stos
mov
sbb
jbe
stos
out
(bad)
sbb
ja
dec
mov
je
fcmovb
ficomp
retf
fwait
scas
push
js
mov
xchg
dec
popf
ficomp
or
jp
stos
(bad)
push
fwait
loopne
jg
mov
push
jle
dec
mov
jbe
mov
out
fwait
adc
jg
call
retf
pop
call
jge
or
mov
test
sbb
jo
pop
sub
pop
jg
sub
scas
sbb
jp
or
jnp
sbb
pop
sbb
test
sbb
cli
cs
ret
fisttp
(bad)
pop
fwait
stc
pop
jns
cmp
jge
cli
xchg
dec
sbb
test
jmp
cli
sub
mov
push
push
fwait
dec
add
iret
jp
cs
push
add
sub
outs
sbb
jno
cli
fstp
sbb
jp
retf
sbb
out
push
fwait
xchg
test
mov
test
jp
push
sbb
mov
sbb
test
fldcw
aam
ja
call
cmc
cli
test
sbb
mov
inc
add
jle
pop
add
outs
sbb
jno
jp
outs
sbb
cli
into
sbb
stos
mov
mov
jns
call
lahf
mov
ds
add
jle
adc
stos
mov
and
(bad)
fwait
cmp
jnp
stos
out
push
fwait
jne
jnp
mov
call
cwde
sbb
jp
outs
fwait
mov
clc
out
fwait
mov
jl
jp
pop
fwait
int3
sbb
push
push
fwait
rcr
jnp
mov
call
hlt
call
add
mov
loop
xchg
sahf
sbb
lea
xchg
jmp
(bad)
mov
fwait
jo
pop
movs
scas
sbb
jno
push
cs
test
scas
sbb
scas
jle
scas
fwait
jnp
stos
(bad)
outs
sbb
(bad)
out
fwait
lds
ficomp
outs
sbb
sbb
cli
enter
sbb
call
(bad)
mov
mov
ds
and
ds
ins
cwde
je
sub
jnp
cmp
ds
mov
jle
xchg
cwde
js
mov
scas
sbb
jecxz
fwait
mov
iret
fistp
push
sbb
cwde
jge
fcmovb
push
sbb
sbb
call
stos
mov
scas
sbb
je
retf
sbb
cdq
jp
mov
sbb
jmp
or
jo
call
mov
(bad)
cdq
jno
fimul
jae
pop
out
mov
mov
cdq
jae
jp
scas
sbb
sbb
sub
jb
stos
in
fwait
cmc
sbb
call
js
stos
mov
sbb
jbe
sub
push
fwait
es
je
sub
dec
fwait
cmp
jp
mov
push
je
stos
mov
jg
mov
push
jge
or
(bad)
push
outs
fwait
mov
je
mov
jns
jp
mov
jp
mov
push
out
fwait
leave
push
jne
pop
in
scas
fwait
rcr
push
fwait
in
jns
sbb
je
mov
out
sbb
pop
je
retf
sbb
pop
jnp
jmp
cmp
out
fwait
cmp
jmp
mov
stos
out
fwait
pop
pop
jno
sbb
scas
fwait
pusha
lahf
jno
stos
lahf
mov
aad
call
mov
jle
call
fwait
cmps
pop
jns
fiadd
jne
retf
sbb
pop
jle
mov
jb
retf
sbb
lahf
jbe
stos
neg
xchg
jmp
xchg
cli
icebp
dec
fwait
push
sbb
fisttp
sbb
in
retf
fwait
cmp
stos
call
ror
pushf
jne
mov
sbb
mov
jge
js
dec
mov
jne
pop
in
dec
sbb
ret
push
sbb
enter
pushf
jge
mov
sbb
mov
ret
fstp
mov
jmp
sbb
pushf
jno
jmp
in
mov
jp
sub
ja
mov
jo
retf
fwait
dec
popf
jle
cli
cmps
push
sbb
jo
call
mov
jb
jae
retf
sbb
xchg
ficomp
xchg
popf
jns
dec
in
sbb
xchg
fwait
mov
jnp
sub
outs
fwait
int
jo
stos
mov
jge
mov
sbb
into
fwait
hlt
sbb
out
sbb
jge
call
loopne
mov
fwait
das
adc
jmp
jmp
dec
xchg
jo
call
movs
cmp
jns
call
mov
(bad)
xchg
ja
cmp
js
sbb
ja
pop
int
fwait
mov
jle
sbb
jle
mov
push
sbb
adc
sbb
jbe
jp
(bad)
sbb
adc
sub
out
sbb
xchg
jb
cmp
jns
mov
xchg
je
stos
cdq
jle
cmp
ds
dec
xchg
jno
sbb
js
or
jle
xchg
jae
stos
movs
ds
jne
jp
or
out
sbb
mov
lahf
sbb
jp
or
(bad)
sbb
mov
mov
xchg
stc
sbb
(bad)
fwait
out
jae
sbb
outs
sbb
adc
sahf
scas
sbb
adc
or
js
mov
jbe
call
mov
xchg
(bad)
fwait
inc
nop
jae
retf
sbb
jg
or
jp
dec
mov
sbb
fmulp
mov
jns
cmp
outs
sbb
push
fwait
scas
adc
dec
test
fwait
mov
jbe
pop
std
(bad)
fwait
leave
nop
jge
push
mov
mov
out
nop
ja
cmp
into
fwait
clc
nop
ja
jmp
fucomi
sar
fwait
pop
adc
stos
std
scas
fwait
sub
push
fwait
xor
jp
cmp
dec
fwait
inc
adc
sub
jnp
retf
sbb
jae
(bad)
sbb
js
cli
xchg
adc
movs
sbb
out
fwait
xchg
xchg
jns
or
jb
sub
jg
call
popf
jmp
(bad)
jmp
leave
retf
sbb
xchg
js
jmp
cmp
push
fwait
adc
jbe
sub
jne
sbb
stos
pop
lahf
mov
dec
retf
push
xchg
jp
or
push
sbb
jne
stos
ror
jp
jge
stos
imul
(bad)
iret
scas
sbb
call
cli
cdq
ds
mov
jae
sub
icebp
sbb
jnp
or
mov
mov
icebp
xchg
jno
mov
pop
jae
fcmove
scas
fwait
sbb
ds
and
test
xor
pop
sbb
jg
mov
xchg
jp
sbb
jg
or
pop
sbb
je
mov
xchg
jg
push
out
sbb
movs
push
sbb
xchg
pop
fwait
mov
test
fwait
iret
pop
jl
fcmove
into
fst
je
retf
fwait
out
jg
jp
mov
(bad)
into
fwait
or
int3
call
mov
adc
(bad)
retf
fwait
aaa
adc
sbb
adc
jmp
jnp
or
(bad)
fwait
imul
je
jae
sub
ja
mov
xchg
jae
stos
nop
push
sbb
leave
(bad)
sbb
pushf
ds
adc
(bad)
cmps
jle
rcl
hlt
push
push
sbb
adc
repz
dec
jmp
sbb
xchg
ja
sbb
jl
mov
ja
mov
adc
jle
inc
xchg
jno
push
scas
fwait
pop
xchg
jae
jp
jle
ins
adc
(bad)
sbb
jnp
call
xchg
mov
jb
mov
adc
mov
xchg
mov
(bad)
fwait
rcl
fist
dec
fwait
loop
jne
cmp
outs
fwait
std
xchg
jle
cmp
cs
or
mov
jp
stos
cmc
out
fwait
and
push
sbb
ja
dec
repz
jl
retf
sbb
jb
mov
sub
jmp
fistp
sub
stos
(bad)
out
fwait
lahf
stos
jb
mov
stos
jns
cli
enter
sub
jmp
out
stc
scas
fisubr
mov
out
sub
pop
loop
fwait
repnz
fisub
je
dec
xchg
outs
sbb
sub
out
(bad)
sbb
stos
jne
pop
scas
cs
xor
ficomp
jmp
xchg
stos
ja
cli
imul
fwait
jo
jo
sub
dec
fwait
test
outs
sbb
retf
out
sbb
jmp
call
ror
js
stos
mov
fwait
jmp
stos
mov
std
sub
jmp
test
mov
jle
cli
jmp
mov
pop
fwait
cmp
jae
or
mov
cli
sub
jae
mov
into
sbb
mov
jl
jl
call
jmp
xchg
test
ret
ficomp
lods
sub
jp
push
sbb
(bad)
dec
fwait
retf
sub
pop
mov
jns
or
jne
cli
mov
sbb
sub
cmp
outs
fwait
push
sub
sub
jp
stos
xchg
sbb
test
cs
cmp
js
cmp
dec
fwait
inc
test
push
sbb
clc
mov
jno
or
jns
call
repz
jae
cli
repnz
fwait
mov
(bad)
fwait
mov
jne
mov
cs
sub
jmp
xchg
cli
cwde
sahf
sbb
sub
push
ficomp
mov
out
fwait
add
in
sbb
cs
push
ficomp
sub
sbb
or
push
fwait
dec
scas
jno
mov
mov
mov
push
fwait
ins
cs
fcmove
sahf
sbb
ja
mov
scas
jns
cmp
jge
sub
jle
mov
jmp
fwait
mov
js
or
push
fwait
retf
mov
lahf
scas
fld
jge
pop
mov
fwait
loopne
jp
dec
fsin
fwait
jmp
mov
cmc
or
jge
retf
sbb
das
js
push
dec
sbb
das
jbe
pop
sar
fwait
dec
das
je
dec
sub
sbb
mov
mov
das
jp
sbb
jbe
sbb
outs
sbb
mov
sbb
jecxz
fwait
mov
mov
fwait
shr
fisubr
dec
sbb
das
jb
mov
out
sbb
das
jns
pop
leave
jle
or
sbb
lods
jle
mov
sahf
sbb
ja
jp
dec
fwait
ss
ret
call
fwait
cmp
mov
sahf
sub
jne
retf
fwait
jnp
jp
retf
sbb
loopne
fwait
sahf
sub
mov
lods
sub
stc
jp
cs
mov
jno
cmp
sahf
sbb
sub
fdivr
jmp
jne
jmp
int3
mov
pop
sbb
lods
jle
call
loop
in
out
sbb
sub
push
sbb
sbb
lods
ja
push
push
sbb
jle
mov
sub
outs
sbb
js
jp
outs
sbb
js
push
dec
sbb
push
fwait
xchg
sub
dec
fwait
cmps
lods
jle
sub
ja
ficomp
jle
jp
ficomp
push
out
fwait
call
in
fwait
imul
ds
or
jno
sub
jle
cli
nop
jle
(bad)
jne
jp
jle
adc
ja
call
pushf
pop
mov
sbb
or
mov
ds
dec
or
mov
jge
jp
pop
sbb
jle
push
sahf
sbb
jae
stos
xchg
out
fwait
xchg
je
dec
out
sahf
sbb
fsin
sbb
repz
mov
jnp
cli
nop
scas
sbb
mov
cmp
outs
fwait
aam
jbe
pop
rep
sbb
mov
jmp
fidivr
cld
pop
sbb
jnp
jp
mov
mov
jmp
sbb
mov
jl
fcmove
cs
inc
or
movs
scas
sbb
fimul
push
fwait
or
sbb
push
fwait
jo
jns
jmp
mov
mov
je
fisub
jae
sbb
jge
call
xchg
sbb
mov
retf
fwait
jmp
jne
pop
ror
retf
fwait
add
jbe
cli
ret
(bad)
fwait
push
or
sub
ficomp
cmp
jle
call
sar
(bad)
outs
sbb
jl
stos
mov
sbb
js
mov
or
cmps
scas
fwait
mov
sbb
sar
dec
in
sbb
hlt
mov
in
dec
xlat
out
sbb
or
cli
mov
je
mov
or
cmp
dec
fwait
pop
or
pop
test
sbb
or
retf
dec
fwait
sub
jg
jmp
scas
stos
ror
fwait
pop
or
ficom
jl
or
mov
test
dec
sbb
retf
sahf
sbb
movs
ficomp
movs
mov
mov
scas
fwait
mov
movs
push
fwait
int
jb
jmp
jmp
jae
sbb
into
sbb
or
cmp
jae
push
dec
sbb
js
sub
ficomp
and
jg
stos
repz
mov
loope
fwait
dec
mov
cli
out
fwait
pop
push
jbe
cli
test
sbb
jne
or
jg
stos
mov
test
jbe
mov
push
jp
jmp
retf
pop
fwait
mov
fdivrp
sbb
push
js
dec
xchg
ficomp
ror
jge
jp
out
sbb
mov
dec
lods
mov
out
retf
fwait
add
jl
stos
pushf
push
sbb
movd
(bad)
jb
jmp
call
dec
(bad)
xchg
jmp
nop
sub
jo
push
pop
fwait
jge
jo
pop
scas
jle
mov
jno
retf
fwait
call
sbb
lods
push
fwait
mov
test
fwait
enter
pop
shr
fisttp
mov
loope
jnp
call
rcr
cmps
dec
fwait
or
sbb
mov
dec
test
fwait
and
sbb
or
int3
or
jne
or
je
call
movs
cmp
js
sbb
jnp
push
jle
sahf
lea
mov
lea
retf
fwait
mov
ror
int3
or
outs
fwait
test
jl
or
jne
stos
cmp
cmp
je
cmp
ja
push
jle
pop
cmp
loopne
sbb
jg
cmp
jb
(bad)
sahf
sbb
sar
fwait
cdq
add
cli
mov
fwait
movs
add
sub
xchg
stos
mov
sbb
add
jmp
cmps
cli
mov
jp
cli
fimul
hlt
xor
in
into
sbb
add
push
(bad)
fwait
adc
int
fwait
daa
xor
fcmovnu
fwait
xor
jb
ficom
jo
mov
add
jmp
mov
push
sbb
je
cli
lea
fwait
add
lock
lds
sbb
mov
sbb
dec
fwait
mov
into
ficomp
les
jg
sbb
je
push
ds
add
retf
sbb
add
retf
fwait
or
jl
jmp
into
stos
xchg
out
fwait
and
jp
call
or
push
sbb
jne
mov
cmp
stos
out
fwait
add
or
(bad)
fwait
js
jno
sub
jns
sub
jg
push
push
fwait
movs
xor
pop
fwait
mov
call
fidivr
retf
dec
fwait
jecxz
jae
dec
xchg
push
fwait
clc
add
mov
js
push
push
sbb
add
jp
cs
and
jge
push
(bad)
fwait
cmp
ja
mov
add
(bad)
mov
push
cmp
add
cli
mov
fwait
jg
jno
sbb
push
fwait
test
jb
(bad)
sbb
out
sbb
(bad)
mov
mov
mov
fwait
mov
(bad)
sbb
cmps
dec
xchg
scas
fwait
jmp
js
call
in
rcr
sbb
jo
mov
push
jl
mov
xchg
retf
fwait
xor
shr
dec
push
jns
jmp
rcr
jae
mov
xchg
jp
push
sbb
push
jl
sub
int3
jmp
mov
icebp
push
sbb
push
jns
stos
icebp
(bad)
sbb
xchg
jp
pop
fwait
push
xchg
jmp
ret
jle
xor
jp
stos
xchg
ds
inc
xchg
jmp
xchg
pop
jae
or
jle
jo
jnp
sub
jo
sbb
sbb
movs
(bad)
sbb
mov
jp
(bad)
jle
retf
int3
mov
dec
fwait
rol
ja
push
mov
loopne
jb
fcmovbe
push
fwait
icebp
pop
jl
call
fucomi
sbb
adc
mov
daa
add
stos
mov
jno
cmp
into
fwait
dec
add
nop
jp
push
fwait
push
add
in
std
scas
fwait
fs
stos
sub
jle
jl
js
jmp
mov
retf
lahf
test
or
ja
sub
dec
fwait
mov
jp
sub
cs
enter
cli
xchg
aad
jl
cli
dec
mov
lahf
mov
retf
sbb
scas
sbb
add
scas
sbb
mov
jg
mov
add
(bad)
fwait
push
test
call
pushf
jp
pop
sbb
js
ficom
jns
jmp
ficomp
add
mov
mov
test
jae
call
mov
fild
sbb
test
call
in
or
ja
or
into
sbb
sbb
call
loopne
jmp
sbb
sbb
jmp
(bad)
jp
into
fwait
pop
call
arpl
dec
fwait
jb
jle
mov
jae
sbb
shr
fmul
fisttp
sbb
call
aam
mov
jns
pop
out
sahf
sbb
call
stc
call
or
jge
retf
sbb
sbb
retf
sbb
fwait
ja
fcmovbe
mov
sar
ret
push
sbb
jg
push
pop
sbb
(bad)
cli
sti
scas
fwait
ins
sbb
sbb
ja
or
jno
sub
jbe
mov
sbb
mov
dec
fwait
mov
test
sbb
sbb
stos
mov
js
pop
fsubr
jmp
sbb
fwait
jae
pop
cmps
out
fwait
or
js
dec
test
fwait
sbb
clc
push
sbb
jno
jp
ficomp
retf
fwait
inc
cwde
jae
jp
sahf
sbb
jno
sbb
mov
out
loopne
fwait
jno
jl
retf
fwait
mov
push
sbb
mov
jno
jp
dec
fwait
mov
in
jle
into
sbb
or
push
sbb
sbb
sbb
sahf
fwait
jmp
jo
sub
mov
mov
repz
sbb
jmp
sbb
push
sbb
cdq
jo
mov
sbb
jmp
fisttp
retf
push
fwait
pop
cdq
ja
cmp
dec
fwait
sbb
into
into
sbb
js
retf
sbb
les
retf
cs
cmps
cdq
jg
retf
fwait
mov
je
push
dec
sbb
sbb
mov
jno
cmp
out
fwait
in
jno
mov
jo
pop
(bad)
ficomp
or
jne
stos
repz
sbb
mov
fwait
sub
jnp
call
call
jne
retf
sbb
jne
fisubr
jg
push
outs
fwait
je
jno
cmp
jle
ficomp
jl
dec
retf
outs
fwait
adc
sahf
sbb
mov
cmp
jle
cli
aad
fwait
inc
or
mov
jno
push
outs
sbb
jl
jp
mov
jg
ja
retf
fwait
mov
dec
sbb
(bad)
ficomp
movs
mov
cli
xchg
sbb
lock
or
int3
mov
dec
clc
scas
sbb
or
cmp
jle
cld
mov
xchg
scas
fwait
or
into
sbb
or
fidiv
jb
stos
(bad)
fwait
cmp
ds
dec
or
retf
fwait
pop
mov
fidiv
jns
sbb
jle
jae
jge
or
jbe
fisub
sbb
(bad)
fwait
scas
or
or
outs
fwait
mov
js
jp
cs
les
scas
fisttp
jne
push
ficomp
cmp
mov
iret
cli
mov
ja
jmp
int
mov
jge
jmp
clc
sbb
sbb
jb
dec
nop
push
fwait
pop
mov
call
mov
ja
jp
or
ficomp
or
sbb
jmp
sbb
mov
sbb
in
sbb
mov
cmp
jo
sub
jb
cmp
jle
lock
cmp
jp
jp
mov
(bad)
sub
ja
jp
cs
aaa
mov
mov
fsubr
fucomp
fwait
pop
or
dec
fnstsw
sbb
jns
mov
or
jmp
stos
mov
jp
retf
fwait
movs
mov
mov
sahf
fwait
mov
jge
fcmovb
ficomp
retf
mov
sahf
sahf
sbb
or
retf
sbb
or
dec
mov
fwait
test
jo
sub
dec
sbb
push
jne
cmp
jle
cmp
jle
xor
jno
mov
mov
popf
sbb
ja
cmp
ja
jp
jle
jns
jg
cli
mov
fwait
mov
jo
retf
fwait
xchg
mov
mov
push
jnp
dec
in
fwait
mov
jae
mov
push
js
mov
mov
push
into
fwait
out
mov
retf
sbb
mov
jmp
cdq
or
dec
fwait
adc
mov
enter
fwait
xor
jo
cmp
jno
jp
mov
(bad)
cli
fwait
push
fwait
ins
psrlw
sti
mov
sbb
mov
test
xchg
into
sbb
sar
in
sub
jns
or
ja
dec
cdq
mov
mov
pshufw
movq
or
sbb
mov
jp
pop
sbb
or
cdq
push
scas
fwait
mov
fidivr
jg
mov
mov
mov
lea
fwait
outs
or
stos
fidivr
jbe
jmp
enter
fwait
xchg
mov
mov
or
imul
(bad)
push
fwait
mov
mov
jnp
sbb
(bad)
(bad)
sbb
or
movs
fisub
jge
push
dec
sbb
mov
adc
jp
sub
outs
fwait
and
pop
fwait
cmp
fiadd
jle
pop
mov
sub
hlt
cli
(bad)
out
fwait
pop
or
stos
sti
ficomp
call
lds
jle
mov
sbb
(bad)
jle
test
int3
sahf
fwait
mov
xchg
sbb
or
cli
mov
jns
jmp
(bad)
cmp
jbe
retf
sbb
jne
push
out
fwait
sbb
fnstsw
int
repz
xor
jp
mov
or
dec
or
pop
or
cmp
scas
sbb
jb
mov
jns
retf
fwait
or
fstp
(bad)
jle
pushf
or
call
std
pop
mov
fwait
mov
mov
jne
jmp
into
dec
loope
fwait
add
je
dec
mov
jp
pop
jmp
jno
pop
icebp
mov
cli
mov
sbb
jno
sub
jb
sub
jg
fidivr
jl
jmp
in
pop
(bad)
push
sbb
stos
scas
sbb
mov
sbb
out
sbb
mov
or
jns
pop
loopne
sbb
or
cli
fistp
mov
call
mov
mov
pop
mov
sbb
mov
jmp
mov
mov
pop
xchg
ficomp
dec
les
mov
ds
call
fwait
movs
mov
or
js
push
mov
retf
fwait
ror
push
sbb
mov
call
in
stos
or
shr
stos
mov
stos
cli
(bad)
cs
sub
jge
sbb
js
or
mov
(bad)
cli
sbb
popa
push
jp
retf
fwait
jle
jb
or
ja
sub
jl
cmp
jne
cli
sbb
mov
std
outs
fwait
ror
cmps
call
clc
retf
sbb
push
jbe
jp
push
sbb
push
jg
jp
out
fwait
or
out
fwait
adc
test
je
mov
scas
sbb
jae
pop
(bad)
fwait
dec
(bad)
jp
call
hlt
sub
jnp
cmp
jle
call
jmp
lahf
(bad)
movs
dec
fcmovnu
fwait
lods
(bad)
jne
push
scas
fwait
mov
mov
jno
dec
xchg
push
fwait
(bad)
(bad)
jo
call
test
mov
sbb
(bad)
cli
cli
xchg
outs
sbb
jmp
sbb
or
into
call
xchg
pop
mov
sbb
shr
mov
sbb
mov
cli
cli
jmp
sbb
jbe
jmp
lods
cmp
jnp
or
(bad)
sbb
mov
je
pop
(bad)
mov
test
mov
call
test
jnp
dec
int
sbb
or
out
push
push
fwait
prefetch
jp
ds
adc
jle
es
dec
fwait
xor
out
sbb
jne
dec
call
mov
jg
jmp
in
out
into
sbb
mov
jl
dec
jmp
js
push
jle
mov
xchg
jmp
jl
mov
jns
retf
sbb
xor
mov
jns
cli
cli
out
sbb
scas
push
sbb
xor
mov
je
call
repnz
jle
ins
add
call
leave
sbb
outs
fwait
add
fwait
lahf
cmp
hlt
mov
imul
in
(bad)
fwait
mov
mov
sbb
cmp
loopne
sbb
xor
mov
jl
or
cs
inc
into
fwait
add
mov
jp
push
sbb
ja
jmp
fidivr
sahf
sbb
jno
push
sbb
jp
sub
jle
pusha
xor
movs
outs
sbb
jge
pop
sub
add
jno
mov
ja
mov
add
dec
scas
out
fwait
loop
jp
pop
sti
pop
fwait
std
xor
sbb
add
cli
out
sbb
cmp
xchg
scas
fwait
sub
xchg
sbb
add
sar
sbb
ja
sub
je
sbb
ds
bound
pop
sbb
jne
cli
sahf
mov
test
mov
jno
jp
mov
ror
add
jp
mov
mov
jmp
jl
mov
cmp
adc
ficomp
das
xor
aaa
add
(bad)
sbb
jns
cmp
push
sbb
ror
cmp
jno
je
mov
push
fwait
test
jns
mov
scas
fwait
cdq
add
cli
fnstsw
mov
je
push
mov
(bad)
dec
out
out
fiadd
jge
or
dec
sbb
xor
add
retf
sbb
jle
call
mov
retf
into
sbb
push
jl
cmp
ja
jmp
(bad)
jp
push
fwait
pop
xchg
mov
xchg
(bad)
push
fwait
mov
ds
out
push
jg
retf
fwait
dec
pop
jae
fcmove
into
sbb
js
retf
sbb
ret
xchg
xchg
call
lea
xchg
xchg
out
sbb
xchg
pushf
(bad)
sbb
xchg
ficom
jno
retf
sbb
xchg
call
mov
retf
push
test
cli
in
out
sbb
test
or
mov
sbb
jle
push
mov
retf
fwait
pusha
add
jmp
leave
pop
fwait
jnp
jg
jmp
rcr
push
fwait
push
jle
sub
jle
add
(bad)
sbb
mov
or
jae
mov
mov
or
ficomp
stos
ror
pop
mov
scas
into
fwait
arpl
(bad)
fwait
mov
sbb
mov
jle
or
jg
call
mov
fimul
jnp
pop
mov
fwait
in
jns
jmp
scas
sbb
(bad)
fwait
or
js
or
jnp
or
outs
sbb
mov
retf
fwait
dec
mov
jmp
sbb
jns
sbb
js
stos
leave
ds
jb
jo
pop
xchg
into
fwait
or
sbb
mov
jb
mov
jns
call
sahf
sbb
jg
retf
fwait
out
jge
sub
into
sbb
or
mov
mov
mov
mov
cli
sbb
sub
jl
retf
sbb
jge
pop
(bad)
fwait
inc
mov
mov
mov
jp
outs
fwait
imul
jne
pop
int3
push
fwait
mov
dec
sbb
rcr
sub
jl
sub
jp
sub
jg
dec
ret
in
mov
pop
in
(bad)
fwait
cld
or
mov
or
dec
les
loopne
cmps
sbb
mov
lock
test
icebp
pop
fwait
inc
mov
stos
aam
sbb
jl
sub
sahf
sbb
jge
cli
ret
jo
jb
cli
mov
jns
mov
js
sub
out
fwait
test
jno
sub
sbb
int
sbb
mov
jp
dec
fwait
(bad)
mov
jp
mov
loope
jge
push
ds
cli
mov
pop
mov
pop
mov
call
cmc
sub
int
loope
sbb
mov
cmps
scas
fwait
inc
mov
call
scas
retf
fwait
push
scas
into
fwait
jl
ja
sbb
jns
cmp
jnp
sub
jae
sub
jl
fiadd
jnp
call
(bad)
fwait
out
push
js
cmp
jp
push
(bad)
fwait
push
(bad)
je
fcmovbe
push
sbb
(bad)
lahf
or
ja
mov
(bad)
jg
fisubr
xchg
sub
sahf
fwait
push
ror
sub
dec
sbb
test
jb
mov
jle
mov
sbb
ficomp
pshufw
sar
fwait
ror
pop
sbb
(bad)
jle
mov
mov
(bad)
push
push
fwait
pop
or
(bad)
fwait
adc
fwait
das
mov
jp
(bad)
fwait
xor
jne
push
sahf
fwait
dec
mov
retf
sbb
jns
cmp
jnp
mov
jne
call
jecxz
mov
ja
mov
or
neg
mov
sbb
fisttp
lock
cdq
mov
jmp
loop
sbb
mov
pop
mov
jle
jmp
jecxz
movs
scas
fwait
sbb
scas
sbb
or
ds
cmp
jl
retf
sbb
in
retf
pop
lea
mov
or
outs
fwait
jne
jle
mov
jl
mov
ficomp
call
sbb
dec
fwait
mov
stos
push
sbb
lea
stos
mov
fmul
into
sbb
lea
dec
mov
jne
pop
ficomp
scas
jmp
mov
leave
(bad)
sbb
jp
sbb
into
fwait
xor
sbb
cli
ret
outs
fwait
pop
add
call
jmp
jne
jl
mov
into
sbb
clc
into
sbb
int
fwait
lods
cmp
(bad)
sahf
sbb
mov
sbb
add
(bad)
pop
fiadd
jo
pop
sti
scas
sbb
add
or
jge
sbb
(bad)
fwait
add
jb
jmp
(bad)
pop
fwait
das
cmp
cld
into
sbb
xor
mov
jae
mov
add
or
jg
jp
(bad)
fwait
jno
jbe
sbb
je
mov
add
jmp
cli
pop
mov
sbb
in
ds
into
cmp
fsubr
sbb
add
pop
(bad)
ficomp
jmp
out
test
fwait
or
jb
cmp
mov
mov
jmp
sbb
add
sub
scas
mov
ja
jmp
cdq
jmp
xchg
or
out
stos
mov
jo
cli
in
ficomp
dec
scas
out
sbb
mov
mov
xchg
mov
call
cdq
cli
repz
fwait
out
jo
pop
call
jne
or
jg
mov
add
retf
fwait
cmp
xor
mov
fwait
inc
add
stos
xchg
jle
pop
add
or
jno
mov
mov
mov
cs
xchg
add
cli
imul
sbb
imul
fwait
mov
jne
jp
ficomp
cmp
ficomp
fadd
ja
retf
fwait
in
add
push
pop
sbb
add
cmp
js
mov
(bad)
sbb
xchg
xchg
sahf
sbb
xchg
(bad)
sahf
fwait
xor
jo
sub
(bad)
fwait
dec
push
jne
dec
movs
sahf
fwait
push
push
ja
jmp
fnstsw
push
js
or
jl
retf
sbb
mov
fwait
stos
push
jg
retf
sbb
stos
push
fwait
enter
sbb
jne
mov
outs
fwait
in
push
jnp
push
into
fwait
cmc
push
je
sbb
pop
fwait
add
push
sbb
ja
mov
jns
cmp
ja
mov
out
fwait
inc
xchg
cmp
jge
(bad)
jle
imul
fwait
jns
jae
or
sbb
out
sbb
mov
js
jp
sahf
fwait
mov
jno
sub
cs
rol
sbb
xchg
retf
fwait
out
pop
jno
fidivr
jns
push
ficomp
add
sar
jp
sahf
sbb
add
mov
cdq
sahf
fwait
ss
cdq
mov
push
sbb
jle
cmp
jp
jmp
mov
repnz
sbb
jns
push
push
fwait
test
fwait
popf
add
cli
sub
jb
pop
loopne
sbb
test
sbb
add
mov
fadd
fwait
out
js
mov
add
stos
sub
jae
dec
cld
outs
fwait
pop
add
outs
sbb
add
(bad)
fwait
xor
into
sbb
jp
dec
lods
scas
sbb
ja
jp
pop
sbb
jp
retf
fwait
jb
ja
sub
scas
fwait
add
jne
cli
mov
sbb
test
fwait
mov
jge
mov
test
stos
ret
rol
pop
sbb
add
ds
repz
cmp
sahf
fwait
or
sahf
sbb
call
sub
jle
jp
sbb
jp
or
js
cmp
jl
mov
js
ficom
jns
retf
sbb
xchg
push
sbb
(bad)
sahf
fwait
test
jnp
jmp
neg
pop
sbb
call
(bad)
call
out
call
neg
(bad)
fwait
or
into
sbb
sbb
cli
retf
sub
jg
stos
jmp
je
or
leave
call
repz
lahf
or
jb
or
mov
sbb
jg
dec
into
(bad)
fwait
test
movs
mov
mov
int
sbb
fwait
js
dec
xchg
mov
neg
fwait
jb
mov
fwait
jo
stos
idiv
stos
cmp
jo
jmp
cmc
jp
into
fwait
cmp
in
sbb
jp
mov
mov
fisubr
sub
fwait
js
jno
retf
sbb
in
sbb
scas
into
sbb
mov
fwait
mov
jns
or
pop
sbb
sbb
mov
cwde
ja
cli
mov
jg
jmp
sar
push
sbb
cdq
jg
sbb
push
sbb
sbb
ds
fwait
and
(bad)
sbb
sbb
fmul
out
call
stc
sub
cs
fs
ja
cmp
jg
push
dec
sbb
sbb
ds
movs
sbb
cli
mov
sbb
lock
fwait
retf
cdq
jbe
sbb
(bad)
sbb
sbb
or
jae
jmp
out
ficom
js
or
je
stos
in
ficomp
and
jl
sbb
(bad)
fwait
ds
js
sub
pop
fwait
dec
push
jl
cli
sti
push
sbb
js
push
sbb
jle
call
mov
(bad)
sahf
jg
push
dec
fwait
xchg
sahf
jne
(bad)
jle
mov
(bad)
push
sbb
int
fwait
retf
sahf
jge
mov
jae
dec
ret
ds
in
je
sbb
jle
stos
rcr
jmp
jg
retf
fwait
sub
mov
jg
retf
fwait
dec
lahf
js
cmp
jge
dec
xlat
cs
gs
jnp
jmp
mov
lahf
into
fwait
sbb
cmps
or
(bad)
sbb
cmps
sahf
sbb
in
fwait
mov
in
fwait
int
jae
fisub
jno
sub
into
fwait
loop
jle
call
sbb
fwait
pop
sbb
retf
push
mov
fisub
js
mov
sbb
loop
lahf
ds
dec
sbb
repnz
pushf
dec
lahf
pop
sbb
jge
sbb
into
fwait
je
ja
stos
mov
sbb
sahf
sbb
mov
fwait
scas
sbb
xchg
retf
fwait
mov
jae
stos
mov
jno
or
je
jmp
in
mov
fwait
stc
sbb
test
mov
fwait
pop
popf
jl
call
(bad)
ds
es
into
fwait
xor
jne
stos
mov
jle
or
jnp
jmp
sti
cli
rcr
repz
nop
sahf
fwait
sbb
fwait
xchg
sbb
into
fwait
lods
sbb
into
sbb
mov
jg
sbb
jge
stos
scas
push
sbb
popf
je
cmp
sahf
fwait
stc
popf
js
dec
cmp
adc
sbb
jl
dec
mov
jo
sub
mov
movs
push
out
fwait
dec
adc
dec
test
fwait
push
xchg
js
jmp
int
cmc
ficomp
jae
jno
or
pop
sbb
push
fwait
call
sbb
jl
mov
mov
stos
retf
sub
je
push
ficomp
sbb
sahf
fwait
inc
or
cli
scas
sahf
sbb
jp
jmp
lahf
pop
xchg
push
fwait
jg
jg
jmp
mov
lods
(bad)
fwait
nop
or
jmp
shr
xchg
mov
mov
push
sbb
or
cli
fmul
pop
mov
cli
sar
fwait
sbb
fistp
xchg
jle
cmp
jnp
cli
loopne
sbb
jbe
stos
mov
jne
stos
leave
(bad)
sbb
je
or
jl
push
mov
ror
mov
jp
push
fwait
cmps
or
stos
lea
mov
ja
jp
push
fwait
int3
or
mov
or
sub
(bad)
fwait
jmp
repz
sbb
or
cli
aam
fwait
or
dec
sbb
mov
call
xchg
jmp
(bad)
in
fwait
dec
or
sbb
ficomp
stos
fsubr
xchg
push
out
fwait
js
jae
sub
jno
mov
jbe
dec
mov
fwait
call
lea
fwait
hlt
or
mov
sbb
mov
js
stos
test
sbb
mov
jmp
fisubr
mov
jb
retf
fwait
push
into
ficomp
sbb
mov
cdq
jmp
jmp
mov
mov
fcomp
sbb
xchg
outs
sbb
mov
pop
(bad)
fisttp
mov
jmp
jns
dec
cmc
push
fwait
xrelease
cmp
into
fwait
add
je
sub
scas
sbb
push
jb
push
cs
and
ja
mov
push
je
cmp
jo
sub
jg
fidiv
jb
mov
push
jae
sub
jne
cli
fdivr
sbb
movs
into
sbb
mov
je
jmp
xchg
or
ficomp
jp
outs
sbb
mov
cmp
jb
sbb
jg
call
scas
(bad)
pop
sbb
je
mov
(bad)
jle
mov
(bad)
jle
mov
(bad)
ja
dec
retf
ins
(bad)
jl
cli
sbb
stos
jmp
sbb
shr
cmp
js
mov
movd
stos
lahf
push
sbb
(bad)
ret
sub
pop
sbb
vmwrite
jmp
idiv
(bad)
pushf
retf
fwait
add
fwait
sbb
fxch
sbb
mov
stos
ror
inc
or
in
retf
sbb
jl
call
xlat
or
into
sbb
jb
jp
out
fwait
or
xchg
or
lods
call
xlat
pop
or
mov
jb
cli
sbb
xchg
call
xchg
retf
fwait
out
or
mov
outs
sbb
or
mov
sar
sbb
or
into
fwait
adc
dec
fwait
cs
push
sbb
or
push
fwait
inc
lea
call
out
lahf
sahf
sbb
je
or
dec
sbb
jb
dec
xchg
outs
fwait
mov
(bad)
fwait
cdq
or
outs
sbb
mov
(bad)
stc
push
fwait
ret
shr
je
call
ret
call
(bad)
or
mov
mov
sbb
add
call
(bad)
sbb
xor
fstp
inc
add
pop
mov
jp
dec
int3
scas
fwait
data16
dec
retf
ficomp
jno
jg
sub
scas
sbb
mov
jge
retf
fwait
lods
xor
jle
mov
js
dec
(bad)
(bad)
fwait
iret
cmp
(bad)
ds
aad
jnp
cli
lock
sbb
xor
clc
into
fwait
inc
push
fwait
or
jp
sub
jge
retf
sbb
cmp
cwde
sahf
sbb
cmp
retf
inc
add
or
into
fwait
push
xor
out
fwait
ins
add
sub
push
sbb
jnp
sbb
jl
ficom
jo
retf
fwait
scas
add
dec
in
into
sbb
fld
mov
fadd
jp
retf
fwait
loop
jl
fcmovbe
mov
stc
add
retf
sbb
xor
test
sbb
xor
in
push
sbb
add
jmp
xchg
int
sbb
jle
sbb
jp
cli
mov
sbb
js
jp
dec
fwait
mov
dec
fwait
xchg
add
retf
fwait
mov
or
sub
(bad)
sbb
add
call
push
jle
call
in
sbb
xor
mov
jp
dec
test
jge
sbb
jno
mov
jle
aas
add
mov
jnp
fisub
jno
jmp
fisubr
sar
ja
jo
cli
(bad)
push
fwait
lea
mov
sbb
jns
retf
fwait
mov
jbe
retf
fwait
rol
fidivr
mov
jg
cmp
ficomp
dec
shr
test
out
call
jno
call
mov
sub
jl
sbb
scas
fwait
ss
js
sbb
push
fwait
inc
push
jae
call
scas
call
stos
push
mov
call
aam
loope
fwait
xchg
xchg
cmp
push
fwait
movs
push
jne
pop
xchg
out
sbb
lahf
dec
fwait
mov
cld
cmp
jno
retf
fwait
in
xchg
call
ret
stos
stos
cs
add
jbe
call
loope
test
fwait
daa
xchg
pop
xchg
jle
xor
jns
stos
xchg
test
push
pop
jb
call
ret
fidiv
mov
mov
dec
sbb
mov
jg
jp
scas
fwait
mov
jne
call
test
dec
fild
scas
sbb
pop
jae
fcmovu
ds
test
js
mov
test
dec
retf
sub
std
push
ficomp
dec
xchg
cs
inc
add
mov
mov
stos
stos
scas
pop
sbb
je
push
pop
sbb
jle
fidivr
jae
stos
xchg
cs
xchg
add
(bad)
sbb
jne
or
into
fwait
mov
jp
dec
fnstsw
fwait
leave
test
mov
test
cmp
ja
push
scas
fwait
lock
in
test
fwait
or
scas
sbb
ficomp
and
cs
ss
(bad)
sbb
jo
retf
fwait
pop
add
mov
shr
fwait
dec
sbb
jp
call
mov
lock
cwde
test
push
out
sbb
test
fwait
mov
jnp
mov
jle
push
into
fwait
rol
mov
mov
jl
cli
retf
scas
sbb
call
adc
jae
stos
xchg
mov
fimul
pop
fwait
aas
call
dec
call
pop
sbb
or
jle
cli
fcmovne
fwait
jb
jp
cmp
dec
fwait
(bad)
sbb
pop
call
pop
mov
fwait
stos
sbb
stos
xchg
pop
sbb
outs
fwait
ret
mov
pop
sbb
sbb
sbb
sahf
fwait
jmp
fwait
repnz
dec
xchg
mov
iret
mov
jp
pop
(bad)
out
sbb
stos
pop
sbb
jle
jp
dec
sbb
jp
sub
jae
retf
fwait
sbb
fcmovb
push
sbb
jo
jmp
mov
fmul
fwait
movs
fwait
jno
mov
ficomp
mov
jb
push
mov
xchg
call
(bad)
in
jle
(bad)
sbb
pop
xchg
sbb
sbb
sub
ds
sbb
jne
sbb
jnp
sbb
jle
cmp
jns
cli
test
cwde
fisub
jg
sbb
jle
sub
cld
mov
jge
retf
sbb
(bad)
push
sbb
mov
mov
sar
(bad)
cwde
ja
cmp
jle
sub
push
fwait
in
cwde
jb
fcmovb
mov
mov
cdq
jae
retf
fwait
adc
aad
fwait
das
sbb
jp
sahf
fwait
cmp
jns
or
jns
mov
cdq
jl
call
in
nop
pop
fwait
jge
jns
push
dec
fwait
mov
mov
retf
fwait
test
fwait
push
sbb
sbb
ret
cdq
jb
sbb
(bad)
ficomp
out
sbb
cdq
jb
cmp
jbe
cli
mov
fwait
push
push
ja
stos
mov
fwait
sbb
mov
xchg
stos
loope
fwait
xor
jge
mov
sahf
jp
mov
sahf
jae
mov
jle
popa
push
jo
cli
mov
jg
or
outs
sbb
scas
fwait
cdq
push
ja
jmp
int
lock
sbb
int
sbb
sahf
jge
cmp
je
cmp
jge
fcmovb
push
sbb
push
js
stos
xchg
outs
sbb
lahf
jg
sub
pop
fwait
adc
ficomp
and
jle
cli
(bad)
pop
fwait
cmp
jge
or
jne
stos
cmps
mov
in
mov
lahf
jle
mov
lahf
jno
jmp
mov
call
fwait
stos
lahf
jbe
pop
xchg
outs
sbb
or
rcr
sbb
pop
jg
push
into
fwait
jecxz
jge
dec
mov
jae
cmp
jle
cmp
ja
mov
jbe
sbb
ficomp
aaa
pushf
jp
stos
mov
je
dec
pushf
jle
pop
pushf
jns
mov
pushf
jo
or
into
fwait
jbe
jbe
jp
dec
fwait
xchg
xchg
call
shr
sbb
mov
mov
loop
fwait
lds
sub
pushf
jle
sbb
js
sub
mov
rep
int3
cs
nop
jmp
mov
jmp
or
jb
pop
in
push
sbb
jae
sub
js
jp
outs
sbb
jg
cmp
scas
fwait
jae
jge
jmp
scas
call
or
sbb
ret
push
fwait
mov
mov
iret
sbb
dec
fwait
(bad)
popf
jo
jmp
mov
ds
repnz
jl
pop
fistp
fwait
add
pop
fwait
adc
dec
sbb
xchg
jns
mov
xchg
jae
or
mov
in
fwait
imul
(bad)
mov
jge
mov
jle
retf
fwait
cdq
adc
dec
test
mov
xchg
mov
cmps
into
sbb
adc
dec
popf
outs
fwait
rcl
jnp
dec
hlt
ds
in
jl
call
lods
push
scas
fwait
push
xchg
jne
pop
stos
outs
sbb
adc
pop
cli
(bad)
fwait
das
adc
or
js
stos
cld
out
sbb
jnp
jp
dec
fwait
pop
adc
cmp
jo
cli
cdq
(bad)
sbb
je
retf
sbb
cmps
ficomp
push
sahf
sbb
int
fwait
mov
jo
cli
scas
dec
fwait
ret
sar
adc
out
fwait
stc
xchg
jle
sub
fdivr
mov
sbb
jg
push
sahf
fwait
inc
adc
retf
sbb
jl
cmp
jns
stos
(bad)
fwait
mov
jne
dec
scas
sahf
fwait
lahf
adc
cli
stos
mov
mov
lea
mov
jne
stos
imul
stc
jmp
stos
push
jle
in
jl
call
sub
ficomp
add
mov
push
adc
call
call
jo
call
mov
adc
cmp
jle
ins
adc
mov
xchg
jbe
stos
mov
js
sbb
jp
call
loopne
repz
sbb
sar
adc
pop
icebp
ds
xchg
je
or
scas
fwait
in
adc
popf
jle
cld
xchg
jnp
mov
xchg
jno
stos
xchg
into
fwait
and
sahf
fwait
xor
scas
fwait
dec
push
ja
mov
jle
cli
test
js
pop
jecxz
fwait
jbe
je
call
cmp
ficomp
nop
xchg
jle
sub
ficomp
sub
jl
mov
xchg
jl
mov
mov
cld
cli
cmps
push
fwait
loopne
je
dec
test
fwait
cmc
push
jae
pop
test
movs
push
pop
sbb
pop
jg
or
jle
sub
js
mov
xchg
js
cmp
jo
mov
xchg
jns
fcmovb
pop
fwait
gs
je
dec
mov
icebp
cli
mov
fwait
test
jl
sbb
jg
ficomp
jl
pop
iret
dec
sbb
sahf
fwait
retf
stos
dec
movs
push
sbb
xchg
jno
fimul
jg
dec
test
fwait
cld
xchg
jp
pop
mov
fwait
unpcklps
sbb
lods
mov
outs
fwait
das
xchg
jl
sbb
sahf
sbb
adc
lods
retf
sbb
jg
jp
ds
pop
adc
mov
sub
pop
mov
jle
retf
fwait
mov
fwait
xchg
adc
pushf
jp
push
sbb
cld
outs
fwait
mov
jg
call
fucomp
retf
mov
(bad)
dec
cld
out
fwait
add
sbb
xchg
jnp
pop
out
cs
sub
scas
sbb
xchg
jb
or
ficomp
sbb
jbe
stos
call
jmp
fidivr
scas
dec
fwait
adc
jl
(bad)
(bad)
fwait
lods
xchg
je
push
ficomp
mov
jno
mov
xchg
jle
or
js
stos
xchg
into
sbb
xchg
jbe
sub
je
retf
sbb
je
mov
stos
jge
push
(bad)
fwait
and
pop
fwait
cmp
push
fwait
inc
stos
jae
mov
stos
jns
(bad)
out
sbb
jns
mov
sub
mov
pop
sbb
scas
fwait
xchg
stos
jl
jmp
fwait
jp
jle
mov
xchg
ds
sub
jmp
test
jmp
mov
or
jl
stos
cdq
outs
fwait
sub
jp
fiadd
jg
dec
test
fmul
outs
fwait
pop
sub
cmps
ficomp
popa
sub
sbb
jb
mov
stos
ja
sub
jb
cli
test
jno
pop
int
sbb
mov
jo
pop
mov
jg
or
jno
dec
mov
jo
sbb
pop
sbb
sub
mov
test
movs
pop
test
xor
mov
loope
rcr
push
mov
jb
retf
sbb
pushf
push
fwait
pushf
sub
mov
sub
call
xchg
mov
sub
mov
sub
sub
js
pop
mov
ja
or
sahf
fwait
or
test
sbb
jns
sub
je
retf
fwait
dec
sub
pop
xchg
fwait
pop
sub
mov
test
mov
out
push
pop
fwait
test
outs
sbb
lods
sbb
fild
fwait
call
nop
dec
enter
sub
stos
cmps
outs
fwait
jmp
jno
(bad)
mov
pop
cs
jp
outs
fwait
sbb
jbe
push
dec
fwait
cs
cli
sar
fwait
dec
scas
je
cli
mov
jns
cmp
jns
dec
loopne
fwait
jne
jns
fisub
jb
call
movs
cmp
out
sbb
mov
jl
(bad)
scas
fwait
shr
fwait
shr
push
fwait
out
jns
jp
scas
fwait
(bad)
cs
jmp
test
jl
or
push
fwait
cmp
push
fwait
inc
scas
jp
call
mov
imul
fwait
imul
jl
call
repz
stos
mov
pushf
das
ja
push
push
sbb
sahf
mov
sub
(bad)
dec
fwait
out
das
jl
jmp
xchg
fidiv
jbe
or
out
fwait
push
lods
jo
sub
ds
cs
mov
les
out
xchg
pop
fwait
dec
lods
jge
pop
or
sbb
jnp
call
mov
mov
sbb
movs
push
fwait
cmps
sub
std
push
push
fwait
mov
mov
jnp
retf
sbb
sub
mov
jecxz
jns
call
xchg
cmc
into
sbb
sub
push
fwait
sbb
dec
fwait
sub
scas
sbb
std
push
fwait
dec
sub
sahf
fwait
push
lods
jp
jp
mov
sar
sbb
jnp
dec
nop
ficomp
sub
fwait
nop
lods
jno
mov
lods
jnp
retf
fwait
mov
mov
sbb
lods
jnp
retf
fisubr
pop
sbb
sub
mov
cmp
jnp
cmp
push
sbb
and
mov
js
cmp
loopne
mov
fwait
outs
mov
mov
cli
mov
fwait
(bad)
and
call
icebp
dec
nop
scas
sbb
sar
fwait
ret
int
stos
ds
mov
(bad)
sbb
mov
mov
sbb
jle
add
std
mov
jp
mov
(bad)
fwait
cmp
into
fwait
dec
and
jp
(bad)
sbb
jo
push
mov
leave
stos
mov
fwait
jo
jo
push
mov
enter
fwait
pushf
mov
(bad)
fwait
mov
jmp
jo
push
push
fwait
into
and
jmp
movs
dec
xchg
push
sbb
and
dec
lods
into
sbb
mov
(bad)
fwait
or
jne
call
leave
jmp
rcr
cs
dec
mov
mov
mov
retf
sahf
sbb
jge
cmp
ficomp
retf
fwait
and
out
mov
mov
pushf
mov
jle
cmps
and
sbb
jne
fcmovu
mov
mov
(bad)
jb
sbb
ficomp
jecxz
jg
cmp
jo
jp
sbb
and
or
outs
fwait
sbb
jo
jmp
mov
cmp
ds
dec
mov
outs
fwait
pop
mov
pop
sbb
je
mov
scas
call
repz
jno
call
jmp
fdivrp
sbb
ds
and
cmp
in
cmps
(bad)
fwait
add
jno
mov
es
push
(bad)
fwait
and
xchg
ficomp
cmp
js
stos
mov
jp
fcmovbe
mov
call
pusha
cmps
jno
dec
mov
jnp
push
ficomp
mov
pop
sbb
cdq
jle
mov
int
sbb
movs
mov
(bad)
mov
cmps
jo
push
jle
out
jg
or
sahf
sbb
cmps
jne
stos
loop
sbb
daa
jns
jmp
mov
cmps
jp
or
js
or
out
sbb
jge
dec
ret
push
cmps
je
mov
daa
jne
call
lods
mov
jg
dec
mov
jne
mov
cmps
jl
mov
test
iret
daa
jne
dec
pushf
mov
retf
sbb
daa
jge
or
mov
cmc
mov
and
fnstcw
and
leave
push
ficomp
jmp
scas
push
outs
fwait
inc
movs
js
jp
outs
fwait
push
movs
jl
cmp
mov
xchg
(bad)
(bad)
sbb
jp
dec
std
cs
test
fwait
nop
movs
jl
jmp
xchg
(bad)
ds
mov
jae
jmp
xchg
or
jp
pop
movs
dec
sbb
and
hlt
jmp
mov
xchg
sbb
and
dec
sbb
and
scas
sbb
and
cs
cmp
ficomp
mov
movs
jge
stos
mov
js
jmp
mov
mov
cs
popf
movs
jns
jmp
in
xchg
pop
sbb
cdq
mov
idiv
(bad)
sbb
and
out
sbb
movs
jae
stos
xchg
(bad)
fwait
std
and
pop
sbb
mov
push
fwait
adc
dec
fwait
sub
jge
mov
mov
cmp
jge
dec
mov
sbb
js
cli
(bad)
cs
bound
jo
mov
cmp
or
outs
sbb
loop
fwait
xchg
cmp
jp
pop
fwait
mov
std
push
sbb
fmul
cmc
jmp
into
call
mov
hlt
mov
ds
add
jns
jmp
fidivr
(bad)
sbb
fisttp
fwait
xor
jns
mov
mov
mov
mov
cmp
stos
popf
into
fwait
ja
jo
mov
cmp
mov
out
sbb
in
dec
fwait
cmps
mov
into
sbb
fcomp
xchg
cli
cmp
mov
mov
mov
cmp
mov
ficomp
sub
jg
or
mov
sbb
jno
push
dec
fwait
pop
mov
sahf
sbb
js
dec
mov
sbb
jbe
jp
into
sbb
sar
mov
dec
sbb
stos
into
sbb
iret
(bad)
fwait
int
jp
mov
dec
fstp
pop
fwait
out
mov
ds
cmc
cmp
or
test
adc
repnz
fwait
sub
outs
sbb
cmp
sub
je
sub
sahf
fwait
pop
mov
jle
ins
cmp
pop
sar
jns
jo
cli
mov
jg
push
ficomp
sahf
mov
mov
enter
sbb
cs
cmp
jp
into
sbb
mov
sahf
fwait
call
mov
js
call
loop
xchg
sbb
mov
scas
sbb
js
push
scas
fwait
aaa
mov
mov
fstp
into
sbb
jo
call
cli
pop
movs
mov
stos
mov
mov
scas
fwait
fwait
ds
pop
fmul
lods
ds
sbb
cli
pop
xchg
pop
fstcw
js
cmp
pop
fwait
out
ja
retf
sbb
ds
stos
(bad)
out
fwait
or
jo
sub
ficomp
sbb
jo
or
out
fwait
das
aas
je
or
jge
cli
xchg
sbb
jg
ficom
je
stos
mov
fwait
bound
jbe
push
into
fwait
jb
jle
sub
ds
xchg
mov
sbb
mov
jns
dec
mov
int
js
cmp
js
call
imul
fstp
fwait
hlt
mov
out
sbb
cmp
jmp
ja
mov
mov
out
fwait
cmp
jne
dec
(bad)
mov
sub
jg
jp
mov
cli
aam
fwait
test
sbb
les
cmp
fwait
mov
jno
jmp
out
stc
push
fidivr
nop
retf
sbb
cmp
les
cs
mov
sbb
mov
cs
sbb
jne
pop
lea
sub
mov
iret
cli
ret
sahf
fwait
dec
mov
dec
fwait
pop
mov
cs
push
xchg
outs
sbb
ret
jle
xchg
mov
into
fwait
cmps
cmp
out
fwait
mov
jb
fisubr
movs
mov
jo
retf
fwait
out
jb
pop
in
ficomp
stos
cmp
mov
lods
push
scas
sbb
mov
xchg
or
push
sbb
mov
icebp
stos
call
jle
call
idiv
jle
push
mov
jecxz
aam
fwait
outs
xor
stos
mov
fwait
jno
jnp
call
ror
sahf
sbb
iret
jle
mov
int
fwait
mov
jge
mov
xor
cmp
jb
or
jge
mov
xor
cmp
push
sbb
xor
mov
repnz
sbb
jmp
lock
ja
cmp
pop
sbb
jnp
pop
scas
dec
sbb
jb
mov
mov
idiv
shr
sbb
clc
ds
mov
sahf
scas
fwait
mov
jbe
sbb
je
dec
(bad)
push
sbb
xor
pop
xchg
ficomp
in
jb
call
mov
add
push
sbb
xor
jmp
fsubr
fucomp
sbb
xor
call
fisubr
mov
fwait
push
mov
mov
lock
fwait
xor
mov
push
fwait
jl
jg
jmp
in
aam
sbb
ret
ds
mov
int
sbb
lock
fwait
retf
(bad)
sbb
jno
sub
jae
call
hlt
mov
jl
sbb
jae
stos
xlat
jle
sub
xchg
ficomp
mov
jns
push
dec
fwait
push
mov
sar
sbb
jnp
(bad)
mov
jl
jns
dec
mov
ja
or
ja
sub
jl
sbb
jle
mov
jge
call
loop
out
push
sbb
mov
loope
neg
fwait
loop
jno
call
fnstsw
mov
(bad)
cmp
mov
fwait
jp
(bad)
sbb
xchg
ret
sbb
jae
call
out
into
(bad)
fwait
imul
scas
cmp
(bad)
sbb
je
stos
xchg
sbb
in
fwait
fwait
mov
mov
mov
lds
fwait
mov
xlat
outs
sbb
mov
mov
ss
mov
ss
sub
jge
or
jg
fcmovbe
mov
(bad)
sbb
jl
pop
mov
jb
jp
ds
push
aaa
js
sbb
jne
push
ds
jp
jns
or
jnp
cmp
jno
push
pop
sbb
icebp
mov
popf
cli
mov
fwait
into
mov
cmp
into
fwait
shl
out
sbb
aaa
jae
jmp
xchg
mov
into
sub
ficomp
dec
mov
jbe
cmp
jl
cli
movs
(bad)
fwait
dec
mov
scas
push
outs
fwait
push
xor
mov
test
sbb
jg
mov
xor
stos
dec
in
fwait
xor
cdq
mov
mov
lods
xor
rcr
mov
sbb
mov
fwait
int
jne
push
out
fwait
shl
fwait
jmp
fwait
lock
lea
mov
mov
xor
outs
fwait
sub
ficomp
cmp
jo
call
xchg
sub
jae
push
into
fwait
arpl
ficomp
jmp
in
scas
ficomp
mov
xor
sahf
sbb
lods
outs
fwait
ret
mov
loope
ret
(bad)
xor
into
fwait
loope
jb
cmp
ja
fidiv
jp
sbb
iret
retf
sbb
dec
jnp
pop
cdq
out
fwait
aaa
retf
pop
sub
jmp
jae
pop
(bad)
dec
fwait
fs
jg
jp
out
sbb
jle
sub
sbb
cs
pushf
retf
dec
xchg
into
fwait
cmps
dec
jnp
sbb
jl
dec
call
jne
mov
scas
fwait
ror
jns
dec
xchg
mov
les
sahf
fwait
repnz
js
dec
mov
fwait
pop
dec
jnp
cli
xchg
sbb
enter
retf
jg
cmp
jo
fiadd
cld
mov
dec
jo
dec
ror
outs
dec
jae
retf
sbb
test
sbb
mov
jbe
dec
test
jl
retf
fwait
mov
jb
pop
icebp
dec
fwait
(bad)
retf
jo
sbb
jno
push
outs
fwait
in
dec
jnp
sbb
scas
sbb
dec
jae
sbb
scas
sbb
sahf
fwait
push
enter
mov
sbb
jb
mov
dec
jbe
dec
sbb
dec
jp
pop
cmc
push
fwait
push
enter
loop
fwait
outs
enter
fmul
fwait
js
jb
jp
out
fwait
test
in
cli
out
cs
popf
dec
jbe
call
ror
enter
hlt
ficomp
call
repz
jp
or
jg
cli
fnstsw
add
jnp
cmp
(bad)
fwait
sbb
iret
sahf
fwait
and
retf
pop
nop
jle
aas
leave
jno
stos
mov
fwait
dec
leave
jp
mov
jae
pop
leave
sahf
sbb
jge
mov
dec
jbe
dec
mov
je
jmp
cmps
fcmovbe
mov
ror
xchg
ds
mov
jo
cmp
mov
retf
leave
jle
pop
(bad)
into
sbb
leave
jno
mov
scas
fwait
loop
jae
jmp
mov
cmovle
mov
dec
jg
sbb
jo
stos
in
ficomp
dec
xchg
ds
bound
clc
call
xchg
in
fwait
xchg
nop
sub
out
sbb
cmps
into
fwait
mov
jmp
fwait
mov
mov
jns
cli
or
aad
jb
jp
jle
in
into
jno
mov
into
jo
sub
jo
sub
jo
sbb
jo
mov
iret
jb
call
out
mov
dec
jb
call
xchg
pop
movs
sahf
fwait
jge
jae
sub
push
sbb
stc
pop
sbb
mov
jp
or
js
sub
loop
ret
(bad)
jne
sbb
jb
mov
dec
ja
jmp
xchg
dec
mov
sbb
dec
jns
jp
push
fwait
and
jne
call
sti
mov
int3
jnp
mov
dec
jg
sbb
push
sbb
jg
stos
cmp
(bad)
jmp
xlat
pop
mov
fwait
xchg
int3
jns
sub
sahf
sbb
test
movs
mov
pop
sbb
dec
js
push
out
sbb
dec
jg
retf
sbb
dec
jle
pop
or
mov
dec
fwait
or
neg
out
fwait
sbb
jns
cmp
jle
sub
jbe
sub
jle
xor
jne
dec
iret
push
sbb
jo
mov
dec
jl
ficom
jns
stos
retf
jne
jo
sbb
rep
xchg
outs
sbb
xchg
out
fwait
stos
dec
js
or
cs
mov
jb
stos
stos
mov
retf
dec
jno
stos
(bad)
ds
aam
js
stos
sub
sbb
jle
cli
dec
jle
call
dec
outs
sbb
ret
mov
inc
jge
sbb
into
fwait
xor
(bad)
out
sbb
jbe
stos
mov
fwait
pop
ret
or
jp
cmp
jno
push
sbb
call
call
out
popf
cs
mov
jnp
retf
sbb
inc
jg
or
jp
jmp
xchg
sbb
jo
or
dec
sbb
ret
jbe
fimul
jbe
retf
sbb
jnp
stos
stos
ficomp
cmp
jno
jp
mov
fwait
cmp
jle
pop
mov
sub
jge
fisub
jg
sbb
jb
or
push
fwait
inc
or
mov
mov
fnstsw
imul
fwait
je
jno
push
push
sbb
out
sbb
retf
mov
lahf
into
fwait
mov
mov
sbb
mov
sub
(bad)
sbb
or
sbb
jbe
stos
cmps
out
sbb
or
mov
jnp
jp
pop
fwait
sbb
ja
push
sahf
fwait
daa
mov
jp
into
sbb
mov
push
jle
dec
or
sbb
scas
fwait
pop
or
jp
dec
fwait
outs
mov
loopne
fwait
jno
jle
push
jle
or
idiv
(bad)
mov
lds
dec
fwait
cmps
or
dec
cmps
dec
fwait
mov
mov
je
call
xchg
fimul
jae
retf
fwait
cld
mov
fidiv
je
retf
sbb
mov
fisub
ja
retf
fwait
cmp
jl
call
ror
or
(bad)
(bad)
sbb
jae
retf
sbb
js
stos
idiv
mov
mov
sbb
jp
or
mov
pop
or
iret
or
dec
aad
fwait
ror
jge
call
fwait
mov
jle
clc
mov
push
ds
or
mov
sbb
push
fwait
mov
xlat
pop
fwait
xor
jnp
cli
cmp
dec
or
call
xchg
mov
or
stos
or
jne
jle
sbb
mov
or
fwait
fwait
or
sbb
pop
fwait
cmps
or
cli
imul
pushf
pop
shr
fwait
ret
or
cli
nop
ficomp
ror
jge
call
ret
pop
test
jmp
jnp
cmp
jo
sub
sahf
sbb
mov
cmp
jae
cli
mov
sbb
ja
jmp
enter
fwait
bound
mov
sub
dec
fwait
mov
ja
mov
push
fwait
popf
mov
pop
repnz
fwait
stos
mov
dec
cmps
pop
fwait
mov
jp
(bad)
push
sbb
mov
retf
sbb
mov
push
mov
jmp
ficomp
clc
mov
sbb
je
or
mov
fimul
jno
retf
sbb
fstp
inc
(bad)
jb
call
call
jg
stos
repnz
sbb
idiv
pop
fwait
mov
jg
or
jg
cli
cli
pop
sbb
mov
fstp
stos
sahf
fwait
retf
vmread
(bad)
jbe
jmp
xchg
fcmove
(bad)
sbb
or
or
push
sbb
or
into
mov
dec
fwait
mov
or
cs
inc
mov
mov
or
stc
stos
xchg
fwait
arpl
fwait
jae
jl
stos
jecxz
fwait
mov
mov
sahf
mov
jmp
pop
in
out
fwait
mov
js
dec
mov
jae
call
cli
mov
jne
sub
jle
cmp
sahf
sbb
lea
jp
ficomp
or
mov
lahf
sbb
ja
push
ds
dec
lea
jp
(bad)
fwait
push
or
outs
fwait
ins
or
sbb
jo
or
jnp
jmp
sbb
sahf
sbb
outs
sbb
xchg
cs
(bad)
lea
pop
loopne
sbb
or
pop
sbb
or
push
sbb
lea
retf
sbb
add
icebp
out
sbb
add
jp
scas
fwait
and
xchg
push
sbb
xor
sar
sbb
(bad)
retf
fwait
push
add
mov
fwait
ins
xor
(bad)
dec
fwait
jg
jns
fcmovbe
scas
fwait
mov
cs
xchg
xor
outs
fwait
scas
add
or
mov
ja
or
dec
sbb
add
cmp
outs
sbb
add
cli
icebp
mov
jecxz
idiv
mov
mov
jns
cli
movs
into
fwait
sbb
push
sbb
add
cli
fwait
out
sbb
xchg
(bad)
fwait
dec
add
or
jbe
mov
jns
mov
cmp
cmps
sahf
sbb
int3
jle
call
fwait
cmps
add
retf
fwait
mov
xlat
push
fwait
rol
sbb
cmp
aam
sbb
xor
cmp
inc
dec
fwait
or
jne
mov
cmp
test
jge
sbb
dec
fwait
cmp
push
sbb
jno
retf
sbb
jp
mov
jnp
stos
fucomip
sbb
jl
retf
sbb
movs
sbb
xchg
mov
mov
mov
js
pop
fcomp
fwait
int
jl
sbb
jle
or
ds
xor
cwde
jle
icebp
add
call
xchg
mov
jp
sub
mov
add
call
mov
pop
cmp
add
sbb
ja
or
jle
mov
sbb
int3
sbb
jmp
jp
push
mov
retf
out
retf
fild
dec
fwait
loopne
jb
mov
jl
call
int3
cmp
out
sbb
mov
jge
jp
push
fwait
xchg
cli
fisttp
dec
xchg
jp
pop
fwait
pop
xchg
sbb
into
sbb
jae
or
js
jp
dec
fwait
mov
jp
dec
(bad)
ficomp
jmp
idiv
mov
fwait
mov
js
pop
xchg
mov
les
mov
(bad)
sbb
push
jns
cli
call
jge
(bad)
mov
call
jge
sub
push
sbb
pop
jbe
pop
stos
pop
fwait
xor
in
jle
dec
xchg
sbb
jae
sub
jle
imul
jge
fidiv
jae
ficom
jl
retf
sbb
fstp
mov
out
fwait
retf
pop
jg
stos
lea
aad
je
cmp
push
sbb
pop
je
sub
jg
jp
sahf
sbb
test
push
mov
adc
jp
or
into
fwait
and
fwait
sbb
jp
retf
fwait
dec
add
xlat
fidiv
jae
retf
fwait
imul
fiadd
jge
retf
fwait
xchg
sbb
stc
jle
mov
sar
fisttp
xchg
nop
mov
jbe
mov
add
retf
stos
in
sbb
test
or
outs
sbb
add
push
fwait
adc
pop
fwait
sub
mov
cmp
jno
sub
jo
cmp
push
sbb
jnp
retf
sbb
jp
or
scas
fwait
jnp
jp
push
(bad)
fwait
xchg
ficomp
sbb
jno
pop
test
jl
push
push
fwait
enter
mov
add
push
sbb
test
(bad)
out
sbb
test
mov
jmp
hlt
out
sbb
sbb
or
and
jae
cli
fistp
mov
nop
push
sbb
jg
jmp
mov
lea
fwait
data16
cli
enter
call
mov
jle
cdq
sbb
retf
into
fwait
cmps
sbb
ficom
jbe
retf
sbb
call
aam
jge
or
jo
jmp
fcmovne
xchg
pop
fwait
or
sub
(bad)
stos
sub
es
jnp
cmp
cs
aas
sbb
sub
jnp
dec
mov
sbb
jp
pop
loopne
sbb
jno
cmp
jg
sub
scas
fwait
xchg
je
cmp
jae
sub
sahf
sbb
mov
jg
sub
push
sbb
sbb
in
pop
fcomp
push
sbb
fwait
jae
retf
sbb
fwait
js
mov
sbb
pop
in
(bad)
fwait
sbb
loope
fwait
sub
jo
call
in
icebp
push
fwait
inc
cwde
js
jmp
scas
pop
retf
push
scas
into
fwait
jb
jg
jmp
xchg
push
ds
cwde
cwde
jae
jp
pop
fwait
cmps
cwde
js
cli
lods
push
sbb
cmc
jle
ret
fisubr
mov
jp
mov
cwde
jbe
push
mov
pop
loope
fwait
pop
sbb
call
mov
sub
jnp
jmp
out
mov
jg
call
mov
push
jnp
sub
dec
fwait
jne
jo
mov
je
sub
into
fwait
xchg
cdq
jae
cmp
js
call
in
xchg
dec
sbb
cdq
jno
mov
push
fwait
rcr
jg
call
leave
mov
jbe
call
test
pop
push
jne
cmp
jle
jmp
fwait
cli
cwde
push
fwait
inc
sahf
jg
sbb
jp
sub
jle
data16
jb
pop
sti
push
sbb
jns
cli
call
fwait
mov
ficomp
nop
push
jbe
sub
jl
jp
into
fwait
mov
jg
fcmovbe
(bad)
sbb
sahf
jl
fcmovbe
(bad)
sbb
push
jo
stos
nop
scas
fwait
out
jle
jp
mov
mov
pop
jb
pop
cmp
pop
jnp
jmp
xchg
dec
xchg
jle
cmp
outs
sbb
jno
call
leave
jp
push
sbb
jne
sbb
jl
pop
ror
fwait
mov
jle
xchg
lahf
jbe
sbb
js
jp
sbb
in
sbb
pop
jl
retf
sbb
lahf
jg
cli
sti
sahf
sbb
lahf
jne
cli
lods
(bad)
sbb
pop
js
jmp
in
or
jo
dec
int3
push
sbb
sbb
out
sub
jge
push
ficomp
inc
pushf
jae
stos
mov
jo
cmp
jbe
sub
jae
(bad)
sahf
sbb
out
sbb
cld
outs
fwait
mov
mov
sbb
mov
jp
jp
cs
sbb
stos
call
mov
popf
ficomp
or
jo
jp
dec
fwait
push
popf
jno
or
jle
sub
(bad)
sbb
cwde
sbb
jns
push
dec
sbb
ja
sub
pop
sbb
jp
or
sub
fwait
sbb
sbb
shr
cmps
sbb
into
fwait
mov
jg
push
outs
fwait
leave
sbb
push
sbb
popf
jne
dec
xchg
cs
sbb
ficomp
mov
adc
pop
loop
sbb
adc
cmp
scas
sbb
adc
or
pop
sbb
adc
call
fmul
aad
sbb
jno
pop
int3
cs
adc
retf
fwait
jl
js
or
jge
or
scas
fwait
call
sbb
cli
push
sbb
lock
fwait
enter
cmp
jge
sub
ja
cmp
pop
sbb
adc
rcr
or
outs
fwait
adc
jnp
pop
shr
es
jge
dec
xchg
dec
fwait
cmp
push
fwait
inc
adc
mov
jp
jp
pop
sbb
jno
push
(bad)
sbb
jp
sub
mov
idiv
mov
jnp
call
cmps
mov
ja
retf
sbb
adc
ficomp
jl
sbb
out
sbb
adc
mov
mov
push
nop
jo
call
jecxz
mov
jbe
call
mov
pop
nop
jae
jp
sbb
jle
cli
xchg
into
fwait
ja
jb
jmp
fmul
scas
sbb
fucomip
sbb
(bad)
leave
retf
fwait
(bad)
adc
sub
(bad)
sbb
adc
dec
sar
out
js
pop
scas
ficomp
sti
nop
jb
cli
sbb
add
jb
jmp
test
sub
mov
dec
sbb
pop
xchg
jp
pop
(bad)
dec
sbb
jno
call
mov
cwde
xchg
js
sbb
jge
or
jle
fst
ds
adc
call
lahf
sub
out
fwait
sub
lock
sbb
xchg
jp
or
jno
sbb
into
sbb
xchg
jb
or
jecxz
mov
jg
retf
fwait
jp
jno
(bad)
ficomp
mov
je
call
cdq
mov
xchg
jo
stos
fimul
mov
push
xchg
jge
stos
mov
fwait
dec
xchg
jbe
mov
jne
call
mov
ret
rcr
fst
fwait
call
ror
cli
xchg
jl
mov
xchg
ja
stos
loop
fwait
pop
xchg
jb
call
mov
cdq
ficomp
pop
sahf
sahf
fwait
dec
adc
sahf
fwait
pop
xchg
jl
sbb
aad
loope
fwait
ja
jbe
mov
adc
push
sbb
cmps
scas
sbb
mov
jl
(bad)
out
fwait
les
push
sbb
adc
scas
sbb
xchg
jg
pop
in
jle
std
adc
ficomp
or
js
mov
sub
mov
push
sbb
sub
mov
sub
stos
fmulp
sbb
mov
pop
stos
jb
retf
sbb
jns
cmp
js
sub
sbb
outs
fwait
fwait
stos
jp
pop
cmc
ds
movs
stos
jno
or
jle
mov
js
retf
sbb
stos
jo
jp
dec
sbb
sub
mov
sbb
stos
jnp
call
clc
mov
ds
or
jle
adc
outs
sbb
stos
jb
(bad)
sbb
stos
jg
call
rcr
fstp
fwait
push
sub
scas
dec
sbb
jo
call
sub
outs
sbb
scas
dec
sbb
scas
scas
sbb
stc
dec
sbb
lods
mov
int3
sub
or
jge
jp
outs
fwait
loopne
js
cmp
dec
sbb
sub
pop
out
mov
fmul
call
stos
mov
sub
dec
les
fwait
dec
test
int
scas
jle
pop
test
dec
cli
scas
sbb
js
pop
xchg
out
fwait
jb
ja
retf
sbb
cmc
sbb
cld
jle
test
test
jo
push
push
sbb
sub
retf
fwait
loope
jp
stos
mov
jns
call
mov
sbb
jae
pop
icebp
scas
fwait
and
jbe
cmp
ds
sub
sub
je
dec
test
fwait
pop
test
into
fwait
outs
sub
jp
mov
scas
fisub
mov
xchg
sub
mov
cs
scas
sub
jmp
(bad)
push
sbb
sub
sub
mov
xlat
sub
cmp
ja
pop
mov
je
sub
jp
dec
sub
cs
jmp
lea
cs
mov
cs
fcmovb
mov
jmp
fxch
fwait
bound
jo
sbb
pop
fwait
jne
jae
or
jb
push
ficomp
cmp
jns
pop
xchg
ficomp
cli
mov
pushf
call
in
stos
fisttp
in
cs
push
push
sbb
cs
dec
repnz
sbb
das
jo
sub
into
sbb
das
jae
(bad)
mov
out
sub
into
fwait
cmp
out
pop
fwait
inc
scas
jo
sub
ficomp
sbb
jle
ins
scas
jne
or
jle
sbb
jp
or
(bad)
fwait
pushf
scas
jno
cmp
mov
xchg
stos
test
sbb
mov
fwait
les
ficomp
sbb
jge
pop
cmps
mov
fisttp
mov
sbb
jle
push
ret
push
sbb
jle
jmp
xchg
dec
mov
jg
cmp
shr
sbb
sbb
cmp
push
sbb
sbb
jp
(bad)
fwait
xchg
cs
outs
lahf
jp
cmp
push
sbb
pushf
jns
mov
sbb
sahf
fwait
sbb
push
fwait
(bad)
adc
fstp
fisubr
out
sahf
sbb
adc
jmp
xchg
stos
sahf
sbb
jg
sbb
jle
or
jle
mov
jge
call
cdq
retf
sbb
xchg
cli
mov
jge
or
jnp
cli
enter
add
sbb
add
push
sbb
jle
retf
sbb
mov
jns
mov
je
jp
sbb
sbb
jp
out
fwait
dec
sbb
(bad)
cs
push
call
push
stc
out
sbb
jno
jp
out
sbb
cwde
jb
mov
cwde
jno
push
(bad)
fwait
push
sbb
mov
mov
stc
jp
sbb
ja
jp
mov
mov
jp
jg
mov
repz
inc
mov
xor
inc
mov
push
push
dec
lahf
jge
push
retf
push
mov
mov
mov
or
inc
fwait
xor
inc
mov
test
pop
imul
imul
ja
or
mov
(bad)
cli
aad
lahf
imul
inc
mov
push
mov
pop
ret
ins
imul
xor
inc
xchg
cli
aad
call
mov
cmp
pop
mov
cmp
addr16
inc
mov
pop
mov
xchg
mov
add
mov
mov
push
mov
xor
inc
stos
xor
inc
mov
or
jle
xor
inc
mov
xor
ja
jecxz
inc
mov
xor
mov
adc
dec
ret
xor
inc
mov
xor
inc
mov
ins
mov
dec
xchg
mov
in
xchg
or
jle
xor
mov
mov
and
and
mov
lock
inc
mov
loope
inc
mov
xor
mov
imul
lea
in
sbb
xor
inc
mov
or
aaa
mov
sahf
imul
xor
inc
mov
jp
inc
retf
sbb
lahf
push
mov
out
xor
inc
mov
adc
data16
mov
stos
xor
inc
and
inc
xor
inc
mov
dec
xor
xor
inc
and
stc
inc
mov
xor
inc
mov
xor
inc
lahf
xor
inc
mov
xor
inc
lahf
xor
inc
retf
mov
cmc
mov
icebp
xor
inc
and
inc
in
mov
mov
xor
icebp
movs
xor
dec
or
add
mov
mov
mov
inc
mov
(bad)
mov
ret
xor
inc
mov
xor
inc
mov
dec
mov
(bad)
(bad)
fwait
(bad)
in
xchg
or
(bad)
fdiv
mov
mov
jp
inc
in
(bad)
rcr
retf
mov
inc
fidiv
mov
mov
xchg
loop
mov
xor
inc
mov
xor
inc
mov
xor
inc
mov
xor
inc
xor
dec
mov
xor
inc
mov
(bad)
into
inc
xor
dec
mov
adc
inc
and
xor
xchg
mov
xor
inc
or
mov
ret
shl
mov
mov
stos
xor
inc
mov
xor
inc
mov
xor
ja
push
mov
xor
inc
mov
or
cmc
mov
xor
inc
movs
sbb
cmp
xor
mov
fmul
dec
daa
iret
xor
xor
inc
and
xor
xor
inc
mov
or
push
fbstp
mov
mov
xor
mul
sub
inc
fwait
xor
inc
and
mov
fwait
or
mov
mov
mov
or
mov
mov
xor
inc
sahf
xor
inc
and
inc
ret
xor
inc
and
dec
lods
xor
inc
mov
push
cdq
call
lahf
xor
ja
xor
inc
pop
jb
pop
or
sbb
mov
pop
repnz
push
mov
mov
ret
xor
inc
and
into
sub
or
js
xor
inc
mov
aaa
xor
xor
inc
mov
xor
push
sahf
xor
inc
mov
xor
inc
and
inc
xchg
or
dec
fwait
add
jbe
or
and
xor
inc
mov
xor
inc
mov
or
mov
cmp
mov
xor
inc
stos
xor
inc
and
into
inc
mov
xor
inc
mov
xor
inc
and
xor
xor
inc
mov
xor
mul
cmp
inc
fbstp
mov
mov
xor
mov
lods
mov
stos
mov
int
faddp
imul
inc
mov
xor
inc
popf
(bad)
mov
xchg
or
(bad)
fwait
lock
push
pushf
jo
sub
xor
inc
mov
xor
inc
mov
call
ficom
int
jne
imul
inc
mov
mov
test
(bad)
icebp
stos
(bad)
icebp
push
sbb
cmp
pop
mov
xor
inc
mov
int
stos
inc
ds
cmp
sub
outs
imul
xor
inc
and
mov
mov
push
int
bound
inc
mov
xor
inc
loop
mov
mov
xor
inc
(bad)
cli
aad
pop
push
lea
loopne
xor
jmp
inc
mov
xor
dec
mov
dec
mov
xor
ja
xor
inc
xchg
cmp
ja
and
inc
fwait
xor
inc
mov
or
inc
fwait
xor
inc
mov
push
into
inc
mov
mov
mov
cld
cli
inc
sti
ror
jle
cmp
xchg
pop
into
jp
push
ss
xor
inc
and
fiadd
sbb
jge
xor
push
mov
xor
inc
and
dec
xchg
mov
mov
mov
inc
fstp
cmp
mov
mov
inc
mov
xor
inc
in
xor
inc
and
ror
mov
or
ja
push
into
inc
mov
xor
inc
shl
xor
mov
push
mov
stos
xor
inc
add
jmp
mov
xor
inc
mov
or
ds
xor
inc
mov
or
(bad)
mov
ss
mov
cdq
inc
into
cmp
or
(bad)
stos
xor
inc
fisttp
ds
dec
dec
stos
pop
popf
cld
call
(bad)
stos
xor
inc
mov
pop
fnstsw
xchg
gs
xor
ja
dec
into
inc
add
dec
imul
mov
cmps
or
inc
mov
mov
mov
dec
mov
xor
into
mov
dec
enter
adc
inc
mov
mov
cmp
mov
mov
xor
inc
stos
xor
pop
mov
clc
inc
xor
cmp
cmp
mov
fcos
jne
add
movs
int
pop
xor
inc
mov
cdq
neg
stos
sub
jle
add
dec
fwait
xor
inc
mov
xor
inc
mov
mov
pop
sbb
or
xor
xchg
rol
xor
aaa
and
inc
mov
adc
inc
mov
dec
mov
ret
xor
inc
mov
mov
inc
fbstp
mov
stos
xor
inc
mov
or
xchg
(bad)
into
inc
xor
inc
mov
dec
mov
ret
xor
inc
and
inc
add
test
retf
fwait
cmp
jbe
xor
inc
mov
xor
inc
mov
fcmove
push
stos
xchg
inc
lahf
xor
inc
mov
cmp
inc
pushf
xor
inc
mov
xor
inc
mov
fcmove
push
stos
xchg
dec
pushf
xor
stos
stos
xor
inc
and
mov
cmp
mov
xor
dec
mov
xor
inc
or
dec
jmp
ror
stos
xor
dec
fidiv
mov
cmps
xor
inc
mov
int
sahf
ret
xor
inc
or
dec
sbb
xor
lahf
xor
inc
mov
cmp
out
xor
inc
jae
xor
fbstp
mov
mov
mov
fdiv
mov
mov
cmp
outs
sbb
jb
cmp
(bad)
fwait
xor
inc
mov
xor
inc
and
inc
xchg
mov
fwait
xor
inc
xor
inc
mov
xor
inc
ret
xor
inc
mov
(bad)
into
push
or
mov
ret
xor
inc
mov
push
xchg
stos
xchg
jle
cld
mov
jb
push
stos
xchg
gs
xor
ja
xor
inc
lahf
xor
inc
and
ror
pop
ins
cmp
cli
stos
dec
mov
lahf
or
jne
popa
cld
jge
cmp
out
fwait
xor
inc
dec
xor
inc
fdiv
mov
mov
or
ja
xor
inc
xor
inc
mov
int
inc
ret
xor
inc
and
pop
xor
inc
mov
pop
mov
out
xor
inc
and
xor
xor
inc
and
mov
fwait
xor
inc
and
mov
mov
cmp
adc
neg
sbb
xor
inc
mov
xor
inc
cmps
mov
dec
test
xor
xor
inc
scas
ss
ret
mov
mov
mov
cmp
aaa
mov
dec
mov
xor
out
mov
mov
inc
and
mov
cdq
xor
inc
mov
or
into
stos
xor
inc
loop
popf
inc
xchg
mov
mov
mov
cmp
inc
fdiv
mov
mov
inc
mov
inc
fbstp
mov
and
iret
inc
mov
xor
inc
and
mov
mov
mov
mov
aaa
xchg
inc
mov
xor
dec
pop
xor
mov
mov
cmp
inc
clc
mov
inc
xor
xor
aaa
mov
xor
inc
stos
xor
inc
xor
dec
mov
inc
mov
dec
cmps
xor
inc
mov
xor
inc
mov
loop
dec
test
mov
mov
test
into
dec
cmps
xor
aaa
mov
cmp
inc
fdiv
mov
mov
adc
inc
mov
jp
inc
(bad)
or
cs
xor
inc
(bad)
pop
pop
or
dec
mov
lahf
ins
mov
sahf
sbb
imul
ins
mov
mov
imul
fcmovb
ds
imul
test
fstp
(bad)
cdq
in
inc
enter
into
call
test
inc
pop
test
fnsave
push
sbb
cld
pop
(bad)
adc
test
mov
(bad)
in
xchg
mov
adc
mov
sbb
sar
js
sbb
sar
jle
mov
out
movs
pop
cmps
in
ficom
cdq
inc
fldl2e
jne
mov
inc
call
push
in
push
sar
xor
repnz
repnz
jmp
mov
cld
mov
clc
lods
ror
je
sub
iret
in
into
ret
add
js
add
cmps
shl
inc
mov
call
(bad)
in
out
arpl
cmps
pop
mov
mov
rol
sbb
fistp
out
xchg
repz
sbb
mov
sub
pop
sub
mul
or
add
and
fldenv
mov
add
jo
mov
push
aam
push
pushf
test
cmp
in
ffree
sbb
mov
(bad)
scas
bound
outs
sti
xor
aaa
sbb
div
jg
or
scas
lahf
inc
mov
xchg
jb
jo
and
mov
stos
retf
dec
cmp
fild
cmp
arpl
fsub
pop
imul
aaa
(bad)
ins
retf
mov
dec
daa
stos
push
sub
xor
inc
sub
inc
fs
push
cmp
and
rcl
test
test
das
fs
lock
pop
in
push
xor
add
(bad)
push
stos
cmp
adc
mov
cmp
or
pop
loope
push
pop
in
xor
imul
push
mov
push
loope
arpl
loop
xchg
push
and
jb
inc
adc
imul
into
push
mov
nop
add
sbb
mov
(bad)
push
xchg
out
push
push
ss
enter
and
xor
fadd
cmps
test
xchg
pop
jne
out
aad
repz
(bad)
jp
arpl
mov
out
inc
mov
or
jns
loope
or
loopne
cmp
mov
jle
push
ror
inc
jne
pop
push
imul
mov
xchg
ins
or
add
pusha
iret
cmp
arpl
mov
out
mov
push
mov
fcom
or
xchg
popf
or
push
mov
jmp
pop
jl
push
outs
pop
cmp
loope
or
loopne
cmp
int3
cmp
(bad)
dec
dec
inc
gs
push
imul
mov
xchg
fs
add
pusha
iret
cmp
arpl
mov
pushw
test
xor
aam
out
adc
or
push
mov
jmp
pop
inc
retf
or
loopne
cmp
pushf
cmp
aad
jns
inc
jne
pop
push
imul
mov
xchg
popa
(bad)
ror
icebp
movs
loop
test
arpl
mov
out
mov
lock
xor
xchg
mov
push
adc
or
push
mov
imul
and
pop
cmp
loope
or
loopne
cmp
fdivr
inc
inc
adc
xchg
ror
or
push
cmps
leave
mov
xchg
fs
xchg
movs
loop
test
arpl
mov
data16
inc
xor
xchg
mov
push
adc
or
push
stos
mov
xchg
push
imul
cmp
loope
or
loopne
cmp
in
cmp
push
sar
pop
push
imul
mov
cmps
mov
lea
(bad)
rcl
loope
loop
lds
arpl
mov
out
cmp
loope
cmp
loopne
cmp
mov
rol
popa
add
xchg
rcr
add
leave
mov
xchg
outs
test
dec
outs
or
inc
and
aad
mov
iret
cmp
arpl
mov
ss
sub
or
push
adc
or
push
mov
popa
nop
aam
pop
jl
push
outs
jge
cli
loope
cmp
loopne
cmp
lea
jle
pop
fld
dec
popa
aad
outs
push
imul
mov
xchg
aas
nop
mov
add
jecxz
test
arpl
mov
data16
clc
or
push
adc
or
push
mov
(bad)
mov
rcl
jge
cli
loope
cmp
loopne
cmp
mov
aad
dec
popa
xchg
jb
push
imul
mov
xchg
(bad)
mov
js
jno
es
test
arpl
mov
out
popf
mov
add
push
adc
or
push
mov
cli
mov
lods
push
outs
jge
cli
pusha
(bad)
cmp
retf
push
ds
hlt
mov
int
or
mov
inc
jb
adc
lds
mov
int
inc
jno
jb
push
jmp
mov
mov
mov
dec
push
outs
jge
retf
cmp
cli
add
or
pop
inc
mov
int
ss
xchg
mov
or
loopne
jecxz
add
mov
in
cmp
xor
jno
jb
push
jmp
mov
xchg
outs
jge
retf
cmp
mov
cmp
add
pop
xchg
int
ss
xchg
mov
sbb
pop
adc
not
or
xor
mov
in
outs
arpl
icebp
cmps
loop
les
xchg
mov
push
aad
into
push
jmp
mov
xor
movs
xor
outs
pop
cmp
pusha
pop
or
rcl
call
call
in
xor
mov
mov
ret
loope
movs
loop
les
xchg
repz
push
gs
push
jmp
dec
int
movs
or
leave
mov
je
pop
xchg
mov
ficom
mov
xor
call
fwait
jl
(bad)
outs
ins
cmp
pusha
outs
mov
jle
push
fcomip
dec
jno
xor
push
jmp
dec
std
mov
mov
out
popf
out
popa
or
xor
jecxz
cmp
and
push
ds
push
mov
ficom
mov
xor
call
fwait
std
sub
call
mov
(bad)
mov
jno
xor
push
jmp
dec
std
mov
mov
popf
outs
data16
shr
inc
cmps
jecxz
inc
es
cmp
and
inc
ds
idiv
ficom
mov
xor
push
fwait
dec
(bad)
outs
ins
cmp
pusha
outs
mov
jle
push
aam
dec
jno
xor
push
jmp
dec
std
mov
mov
popf
out
push
les
mov
movs
jecxz
inc
es
cmp
and
push
imul
(bad)
adc
mov
xor
push
fwait
call
outs
ins
cmp
pusha
outs
mov
jle
(bad)
retf
dec
jno
xor
push
jmp
dec
std
mov
mov
popf
out
pusha
or
pusha
movs
mov
sub
(bad)
mov
in
xor
stos
(bad)
retf
xchg
add
or
pop
icebp
inc
pop
in
sbb
pop
sbb
add
inc
inc
sbb
push
es
in
add
mov
popf
sub
add
cmps
mov
add
rcl
or
ret
jg
pop
test
pop
xchg
or
pop
mov
push
enter
(bad)
sub
lock
enter
dec
in
jg
sbb
jg
pop
mov
inc
js
mov
inc
enter
enter
retf
jge
outs
mov
mov
push
enter
retf
pop
or
call
mov
ins
enter
leave
pusha
mov
push
cmp
shl
add
rcl
sbb
cld
faddp
adc
test
sub
dec
mov
add
fmul
ds
loopne
xchg
leave
in
sti
iret
leave
mov
mov
dec
js
idiv
sbb
ins
or
pop
int3
adc
(bad)
scas
adc
mov
mov
mov
pop
out
daa
xor
mov
in
pushf
mov
js
adc
ss
xchg
sbb
aam
fadd
fld
jns
loop
inc
fcmovne
ret
mov
test
inc
cmp
add
(bad)
fwait
dec
jns
cmc
push
bound
loop
mov
cmp
mov
jmp
icebp
cld
iret
jns
xor
push
aad
push
js
out
dec
add
or
inc
daa
inc
add
mov
outs
(bad)
addr16
mov
hlt
inc
not
rcl
or
(bad)
adc
sar
pop
or
inc
sub
js
retf
jns
and
neg
ins
add
jnp
scas
push
push
pop
popa
pop
mov
daa
fmul
add
pop
sbb
fnstenv
mov
pop
jnp
add
inc
cld
inc
mov
dec
mov
(bad)
jmp
xchg
int3
add
je
pop
imul
nop
adc
out
sub
repz
jae
adc
in
or
jp
adc
in
sub
jae
dec
sbb
in
ret
in
dec
fld
and
sub
jae
dec
adc
iret
(bad)
and
jmp
and
in
sub
jae
adc
and
lock
adc
fild
jp
ins
xor
sub
mov
sbb
jbe
and
in
sub
jae
sbb
xor
mov
sub
jae
ins
xor
sub
or
sbb
jb
mov
adc
out
fs
or
add
adc
sar
loopne
mov
mov
sub
push
mov
inc
and
ffree
in
xchg
fstp
cmp
dec
call
xchg
fisttp
adc
add
jbe
sbb
sub
jp
sub
jae
sbb
jp
dec
aad
sub
loop
(bad)
sub
xor
dec
call
jmp
gs
sub
sbb
jbe
sbb
sub
jae
sbb
jp
dec
cdq
or
lods
inc
popf
jmp
inc
aas
jbe
sbb
sub
jae
sub
jae
sbb
jp
dec
(bad)
mov
inc
sub
jae
nop
loope
loopne
in
add
mov
jp
dec
cdq
sbb
sub
jae
sub
jae
shl
jae
sub
repz
mov
jp
int
sbb
cmc
adc
inc
cmp
lods
add
push
pop
call
ds
leave
sub
push
mov
inc
and
adc
sub
jb
adc
test
jmp
out
and
(bad)
pop
jmp
pusha
jp
mov
mov
ins
adc
sub
jae
repnz
out
jmp
pusha
mov
call
xchg
inc
dec
push
mov
inc
dec
sbb
enter
addr16
mov
sub
jae
sub
jae
(bad)
aad
sub
mov
sub
jae
sub
jae
push
push
jne
adc
and
sub
adc
sub
jb
sub
adc
sbb
add
fild
jp
in
xor
fnstcw
popf
scas
dec
pusha
mov
call
xchg
inc
and
push
adc
inc
dec
sbb
enter
addr16
mov
sub
jae
sub
jae
(bad)
aad
sub
mov
sub
jae
sub
jae
push
adc
dec
mov
pop
pop
adc
mov
inc
add
add
adc
shl
lds
and
xlat
jmp
mov
jl
jae
js
jne
popa
and
adc
or
mov
mov
adc
addr16
mov
mov
dec
sub
(bad)
adc
mov
sub
jb
sub
adc
sbb
test
int3
sub
lds
mov
jb
sub
test
adc
sahf
retf
lods
inc
jmp
push
mov
inc
sub
jae
adc
mov
adc
mov
loopne
adc
retf
add
(bad)
adc
mov
dec
sub
(bad)
adc
mov
add
jae
jmp
sub
jb
adc
xchg
cli
dec
jmp
mov
inc
sub
jae
jmp
mov
sub
jae
dec
aad
dec
jmp
mov
inc
sub
in
sub
jae
sub
vcvttsd2si
mov
lods
test
sub
jle
sub
add
sub
adc
add
(bad)
jl
je
jp
jmp
mov
inc
add
mov
jl
sub
repz
jae
adc
in
sub
jae
jmp
sub
jae
ins
lods
jae
sbb
and
sub
jae
jecxz
jge
jmp
dec
dec
jne
dec
jmp
mov
sub
jae
sbb
or
mov
(bad)
aad
sub
mov
ins
xor
adc
in
sub
jae
jmp
popf
and
loopne
adc
enter
out
in
mov
sub
jae
mov
mov
pusha
sbb
xchg
inc
dec
adc
imul
lods
aas
addr16
fsubr
cmp
sub
jae
push
aad
in
ins
cmp
sub
jae
out
add
push
sub
sub
add
and
jecxz
adc
shl
test
dec
fldcw
mov
sub
jae
lds
loop
xchg
jne
std
and
(bad)
adc
mov
sub
jae
dec
adc
inc
(bad)
sbb
das
pusha
sub
sub
mov
dec
(bad)
jae
jmp
xor
adc
fld
and
adc
jb
mov
mov
lds
cmp
jae
and
dec
push
adc
(bad)
jno
xor
mov
inc
add
in
jae
and
jb
sub
adc
and
in
sub
jae
adc
sub
repz
jae
adc
in
sub
jae
jmp
mov
fs
inc
out
fs
sub
jae
jmp
fsub
inc
xor
adc
fld
and
int
jae
add
aas
jbe
sbb
sub
jae
push
shl
in
jp
dec
in
sub
fld
ret
sub
jae
sbb
popf
enter
out
in
mov
adc
jae
sub
repz
jb
push
sub
jne
dec
call
and
in
sub
es
fstp
sub
mov
jmp
push
pop
cmp
fnstcw
popf
nop
mov
lds
inc
dec
xor
xchg
inc
les
inc
pushf
hlt
hlt
add
push
dec
push
retf
inc
dec
fs
enter
(bad)
cmp
mov
adc
shr
pop
or
sahf
js
int3
ret
in
outs
dec
adc
push
aad
xchg
aaa
rcl
and
sbb
cld
mov
into
in
mov
je
jmp
ret
adc
imul
loope
mov
mov
dec
dec
aam
std
rcl
pop
pop
add
xchg
imul
adc
fnsave
out
push
push
cdq
inc
fldcw
out
iret
push
ins
sti
cmp
mov
inc
cmp
adc
xor
fucomip
inc
jne
std
xchg
and
xlat
mov
or
js
xor
imul
push
ja
lahf
xchg
push
pusha
pop
and
add
les
add
into
data16
mov
int
js
cmp
retf
sbb
xchg
mov
jo
push
ins
add
mov
xor
fist
add
pop
jno
pop
and
pop
mov
add
(bad)
xchg
sub
cmp
in
add
jmp
mov
loop
jns
push
aam
xchg
fld
mov
push
xchg
cli
mov
jbe
sub
mov
inc
leave
mov
inc
or
mov
lahf
daa
clc
jle
sub
leave
loopne
jns
sbb
jno
jnp
ins
push
out
loop
jne
sbb
fwait
sti
sti
aaa
mov
mov
jmp
mov
push
jnp
imul
ins
xchg
aam
fadd
mov
or
in
cmp
in
cmp
shr
std
outs
mul
jae
inc
les
mov
push
or
in
cmp
in
(bad)
mov
inc
adc
and
mov
loop
push
inc
mov
cmp
into
adc
dec
add
mov
and
pushf
retf
ins
cmp
enter
mov
fucom
sbb
fnstsw
call
pop
push
add
cld
push
les
jbe
in
repz
fs
sub
out
es
push
sti
pop
shl
mov
xor
mov
imul
aas
add
stos
daa
(bad)
lock
ins
jecxz
mov
enter
xchg
jnp
sbb
fs
ret
(bad)
je
jge
in
stc
mov
jbe
fs
movs
ret
push
or
mov
ins
rol
cmps
mov
or
(bad)
pop
enter
ja
leave
mov
cmps
jmp
(bad)
repnz
dec
cld
pop
idiv
inc
or
(bad)
lock
lds
in
icebp
fcom
sbb
out
or
mov
cld
pop
movs
test
or
mov
jmp
inc
cmp
retf
inc
sti
sub
fwait
dec
xor
dec
mov
push
fcmovnbe
xor
mov
fidiv
fwait
inc
mov
ja
loopne
jnp
mov
data16
fcmovbe
mov
mov
pop
fild
test
jbe
test
dec
mov
push
fist
sub
hlt
in
(bad)
mov
cmp
fsub
push
xchg
sbb
push
out
daa
sub
aaa
ss
mov
push
xchg
and
fsubp
sub
or
dec
ret
or
pushf
mov
xchg
in
mov
xor
add
jno
add
add
push
mov
adc
xchg
mov
sbb
push
jmp
gs
data16
fld
push
test
stos
xor
add
jnp
clc
repz
clc
repz
clc
repz
icebp
jne
mov
dec
cmp
inc
aaa
xchg
and
dec
dec
addr16
pop
and
pop
adc
stos
xor
es
ss
arpl
or
inc
pop
das
jne
ss
arpl
dec
push
inc
push
sub
xor
sub
inc
pop
sub
ss
pop
arpl
or
pop
sub
push
pop
pop
or
ss
and
or
inc
aaa
sub
aaa
pop
inc
or
inc
inc
sbb
ja
pop
jp
jo
sbb
jecxz
emms
dec
adc
inc
arpl
or
adc
test
xor
pop
xor
sub
dec
ins
xor
pop
adc
adc
dec
adc
xor
pop
xor
adc
pop
mov
xor
xor
xor
add
dec
cmp
xor
xor
addr16
pop
xor
xor
xor
dec
cmp
xor
xor
xor
into
push
dec
pop
cmove
pusha
mov
arpl
xor
xor
test
pop
daa
xor
xor
pop
xor
outs
pop
dec
fimul
inc
inc
xor
leave
push
daa
mov
jbe
xor
fidivr
dec
inc
mov
inc
pop
cs
pop
xor
daa
xor
cs
pop
add
dec
xchg
or
or
jno
xor
jnp
outs
ds
pop
sbb
jp
push
inc
sub
jae
fwait
jns
inc
jp
mov
pop
and
sub
xchg
inc
mov
inc
ins
mov
push
int
jp
jbe
int
mov
pop
cwde
push
inc
test
pop
cmp
lock
call
adc
test
addr16
add
cmp
xlat
sbb
out
xor
push
mov
mov
xor
or
int3
mov
das
push
inc
xchg
mov
fsub
rcl
outs
cmp
(bad)
mov
enter
xchg
jnp
pop
cmp
push
int
je
pop
mov
push
ffreep
add
enter
(bad)
mov
push
pop
inc
ss
dec
pop
je
pop
enter
(bad)
mov
mov
ja
into
jns
mov
stos
aam
scas
mov
aam
test
jg
js
cmp
ret
iret
pop
mov
jl
mov
stos
jl
add
or
sbb
addr16
or
mov
adc
std
sub
dec
push
scas
xchg
pop
sub
add
add
retf
adc
ins
xor
mov
bound
pop
xor
mov
cmps
jne
fadd
pop
repz
mov
jmp
ss
dec
mov
pop
fild
cli
or
in
(bad)
push
fnstcw
mov
cmp
mov
cmp
cmp
inc
fnstenv
pop
ror
addr16
add
(bad)
into
stc
pop
and
enter
adc
jb
mov
ret
xchg
ret
xchg
ret
xchg
ret
xchg
and
mov
les
adc
into
cmp
jbe
push
mov
xchg
push
mov
retf
pop
mov
sti
fnsave
cli
sbb
in
outs
mov
not
retf
pop
jnp
hlt
fs
xchg
ret
add
lods
sti
pop
into
(bad)
sti
xor
adc
loopne
mov
ror
(bad)
out
in
adc
movs
lds
mov
stos
pop
mov
sti
pop
add
sti
pop
mov
lods
mov
pop
daa
xchg
sti
pop
cs
repnz
in
adc
inc
fs
xchg
ret
add
lods
sti
fst
sti
cs
not
retf
pop
mov
sti
pop
adc
lods
not
retf
(bad)
sahf
sti
sbb
out
lods
jbe
and
retf
lods
push
push
mov
retf
fnstsw
lods
cmc
adc
fwait
rcr
mov
lock
jne
push
mov
inc
pop
mov
sti
pop
mov
sti
pop
call
pop
mov
sti
pop
stos
movs
sti
sbb
lods
sti
pop
mov
sti
pop
mov
lods
movs
pop
mov
sti
pop
mov
sti
pop
retf
sbb
lods
sti
pop
mov
sti
pop
adc
sti
cs
(bad)
push
mov
retf
(bad)
xchg
sti
jge
dec
repnz
call
repz
lods
ret
lods
sti
pop
mov
sti
fisttp
sti
pop
mov
jnp
mov
sti
pop
mov
sti
pop
es
not
ror
cmps
scas
pop
mov
jnp
mov
sti
pop
mov
sti
pop
es
not
lea
and
or
mov
loopne
cmps
scas
pop
mov
jnp
xchg
stos
sti
sbb
xchg
mov
aas
dec
retf
xchg
mov
mov
sbb
sti
pop
mov
sti
pop
retf
cmps
sti
pushf
mov
cmps
mov
pop
mov
sti
pop
es
(bad)
ror
pop
jmp
and
lods
retf
pop
aaa
jmp
pop
jnp
idiv
jg
add
mov
lods
stos
pop
mov
sti
pop
or
dec
xor
xchg
mov
mov
jb
mov
sti
pop
ja
sti
(bad)
xchg
icebp
jle
icebp
ret
lods
xor
lods
stos
pop
mov
sti
pop
test
neg
mov
or
fld
fs
cmps
shl
xchg
adc
and
stos
pop
mov
sti
fst
std
out
movs
xchg
adc
and
stos
pop
mov
sti
pop
adc
std
out
movs
xchg
adc
and
stos
fst
sar
pop
mov
std
pop
mov
sti
pop
mov
sti
pop
ds
or
fwait
jb
mov
dec
mov
jle
mov
aaa
sahf
inc
shl
call
and
push
pop
shl
jno
mov
call
xchg
cmp
ret
stos
pop
cwde
pop
test
inc
pop
test
fstp
push
cwde
xor
ret
cmp
adc
cmp
cdq
retf
or
(bad)
sub
xor
sar
fnstsw
leave
fldenv
push
mov
mov
or
sbb
jne
pop
jmp
push
adc
test
retf
mov
jae
or
mov
dec
daa
inc
add
xchg
add
shr
jge
cmp
adc
imul
mov
mov
clc
call
enter
enter
jo
sbb
push
stc
jl
in
popa
cmp
pop
out
mov
and
js
xor
jo
mov
mov
and
jo
inc
sub
sub
xor
mov
aam
add
mov
xchg
jge
aam
jge
dec
imul
mov
ss
or
daa
xor
mov
aaa
fcmovb
movs
jbe
xchg
push
mov
sar
pop
cld
or
leave
mov
push
pop
push
rol
(bad)
xchg
inc
scas
neg
int
repz
ins
mov
lea
and
shl
sub
les
and
cmp
mov
stos
ins
into
push
xchg
inc
imul
mov
add
xor
in
lock
je
add
xor
cwde
into
jbe
fabs
gs
rol
aas
inc
rcl
inc
rcl
or
push
js
out
mov
xor
out
leave
adc
leave
xchg
in
cmp
rcr
inc
rcl
inc
rcl
sub
xor
jnp
pop
cmps
sbb
xchg
and
ins
gs
rol
aas
inc
rcl
or
push
jns
xchg
jns
(bad)
add
sbb
aas
inc
rcl
mov
ins
call
and
jae
cdq
test
js
mov
pop
dec
rcr
aas
inc
rcl
test
pop
js
(bad)
stc
pop
dec
rcr
aas
inc
rcl
(bad)
push
adc
ins
out
mov
mov
jmp
jns
xor
inc
mov
scas
test
cmp
jns
push
not
sar
aas
inc
rcl
cmp
push
inc
sbb
ss
inc
sar
aas
inc
rcl
sti
repnz
outs
jmp
pop
data16
ins
push
repz
and
ret
jmp
fldenv
loop
push
and
fs
jge
lahf
sbb
and
out
daa
jae
(bad)
adc
pop
lea
cwde
add
in
sbb
rcr
aas
aam
push
aas
scas
xchg
pop
pop
lea
cwde
add
in
sbb
rcr
test
pop
jns
fldenv
aas
inc
rcl
and
push
ja
sbb
jns
jae
mov
stc
cmp
test
mov
(bad)
mov
gs
sbb
and
(bad)
jge
mov
inc
enter
enter
int
into
ret
pop
inc
push
and
or
in
dec
enter
sbb
add
pop
push
jns
sahf
(bad)
int3
mov
mov
imul
imul
shl
or
mov
mov
in
ficomp
inc
stc
cwde
imul
push
jo
or
in
rol
cmps
xor
ja
or
xor
fbstp
pop
aam
es
addr16
jge
ins
jno
jnp
push
pop
fisubr
jns
pop
ins
adc
sbb
jb
mov
and
add
(bad)
jbe
jl
inc
lock
mov
mov
int
je
js
in
(bad)
retf
inc
sti
aam
sub
jmp
les
and
das
in
xchg
(bad)
xlat
cmp
pop
jecxz
ds
stc
js
in
xor
sti
cmc
sbb
imul
xor
scas
daa
jne
les
(bad)
cdq
cmp
mov
popa
xchg
or
mov
mov
and
rol
fnstcw
sub
xor
cdq
in
add
retf
mov
sti
push
jns
xor
and
int
leave
xlat
sti
jmp
retf
mov
dec
test
cmps
imul
dec
sbb
lock
shl
mov
xchg
div
mov
shl
mov
cld
std
mov
fbstp
dec
leave
aaa
xchg
cmp
stc
into
sbb
sar
or
call
cdq
push
jbe
mov
int
leave
int
cmp
mov
(bad)
imul
xchg
push
adc
cld
push
leave
adc
test
jno
(bad)
xchg
daa
(bad)
lea
retf
adc
aaa
int3
add
aam
imul
fdivr
inc
dec
les
or
push
pop
int3
arpl
into
and
inc
iret
xchg
jnp
pop
cmp
repnz
push
mov
jg
fbld
ins
pop
in
push
adc
cwde
lods
pop
das
add
das
(bad)
mov
pop
les
cmp
xchg
mov
or
xlat
push
enter
gs
or
inc
jge
sub
fld
cmp
lods
clc
xchg
add
mov
or
stc
jne
adc
sbb
cmp
repnz
jp
push
jo
xor
push
mov
add
jbe
repnz
repz
xchg
push
test
push
into
ret
inc
cmp
adc
inc
fild
mov
int3
xor
inc
mov
jmp
call
aaa
sbb
movs
repz
mov
push
fild
data16
out
ja
jp
ja
jae
mov
add
(bad)
pop
imul
jnp
cmp
dec
mov
outs
cli
jl
in
mov
jne
daa
pushf
cmc
inc
daa
pushf
cmp
and
mov
lods
addr16
in
neg
mov
dec
pop
outs
test
or
mov
pusha
fidivr
cmp
mov
mov
aaa
imul
mov
inc
enter
enter
test
sbb
enter
aaa
adc
xor
(bad)
in
jmp
xchg
movs
ret
sub
repnz
pop
adc
cli
push
cmp
add
in
in
mov
sub
(bad)
fmul
icebp
or
aam
rol
cmp
pushf
xchg
inc
xchg
sub
pop
xchg
or
add
fst
cmp
jg
pusha
popa
sbb
xchg
cli
jmp
inc
xor
sbb
and
inc
fimul
div
iret
aaa
mov
fwait
xchg
jae
mov
push
and
dec
mov
je
sbb
or
and
test
loope
in
mov
xor
adc
xlat
sbb
sar
out
add
mov
mov
sbb
xchg
rol
fld
dec
pusha
jge
call
das
inc
mov
jp
xchg
pop
xchg
or
pop
cmp
into
pusha
icebp
addr16
scas
inc
xor
repz
pop
adc
fbld
loopne
push
call
das
(bad)
mov
dec
in
fcom
stos
push
fimul
inc
arpl
push
in
add
dec
mov
pop
add
jl
and
stos
dec
aam
shr
push
lock
movs
push
sbb
dec
mov
ins
test
(bad)
mov
loope
fcomp
mov
mov
fisttp
push
daa
int3
adc
bound
addr16
or
add
push
add
repnz
add
(bad)
scas
cmp
bound
pop
adc
jns
aaa
mov
sub
jl
pusha
ins
popf
xchg
ret
lea
xchg
pop
adc
lock
mov
fsub
(bad)
arpl
add
xor
iret
jecxz
fist
(bad)
lock
sub
aaa
inc
jg
sbb
xchg
sti
mov
fild
repz
mov
mul
xchg
fstp
xor
mov
loop
gs
scas
xor
ins
add
ja
and
xchg
lods
inc
mov
dec
pusha
adc
push
mov
cmp
jmp
or
sub
repnz
ficom
xor
dec
cmp
(bad)
cmc
popa
outs
test
mov
fimul
test
rcl
jnp
lahf
loope
adc
and
aam
jle
clc
xor
aam
dec
out
pusha
popa
add
xor
ficom
xor
push
sbb
iret
mov
js
xchg
in
push
jp
cmp
fsub
jne
cdq
in
xchg
inc
(bad)
mov
push
mov
add
mov
(bad)
js
popf
jmp
mov
repnz
adc
fwait
push
js
mov
push
ds
jle
lahf
jmp
sub
adc
ins
add
cld
aaa
cs
and
add
imul
xor
mov
pusha
pushf
adc
mov
push
or
std
gs
stos
cmp
cmp
loope
pop
xchg
mov
mov
push
xchg
addr16
repnz
cmp
push
adc
cmp
xlat
jmp
cmps
push
es
dec
mov
adc
lods
inc
fiadd
push
cdq
iret
push
lods
lds
ds
adc
push
mov
cli
xor
fcomp
loop
jecxz
pop
nop
ror
cmp
add
data16
jmp
xchg
daa
les
pop
nop
xor
fmul
inc
sti
neg
or
inc
pop
mov
out
add
imul
inc
mov
sti
not
add
sar
ins
add
xor
cmc
fs
add
sub
ret
rol
dec
loopne
jmpw
retf
(bad)
xor
ja
xchg
fst
stos
push
xchg
push
int3
mov
sti
out
lahf
call
and
cmps
sub
mov
xchg
cld
mov
push
fwait
pop
leave
cmp
(bad)
call
inc
or
fisttp
dec
out
gs
add
(bad)
mov
fcom
js
sub
movs
pop
push
mov
push
cmps
(bad)
sub
dec
out
shr
xor
and
aam
mov
imul
sbb
mov
and
pop
mov
arpl
jne
sbb
xchg
scas
lds
imul
addr16
mov
movs
mov
or
test
scas
cmp
bound
fcom
mov
cmp
ds
imul
xlat
iret
cmp
jbe
loop
adc
add
or
(bad)
jmp
shl
fwait
xchg
jbe
mov
dec
add
jg
pop
pusha
xchg
sub
adc
jae
mov
rcr
dec
mov
jle
popf
arpl
aas
stos
mov
fmul
jle
mov
mov
sti
ja
in
mov
mov
fisttp
(bad)
in
out
jge
cdq
xlat
fwait
aad
mov
outs
add
aaa
into
addr16
push
in
mov
aaa
cs
daa
pop
int3
mov
repz
push
sbb
sar
cld
call
les
sub
xor
jecxz
push
test
xor
mov
ins
or
dec
adc
pusha
pop
fcom
mov
stc
aas
test
or
jns
ja
daa
dec
xchg
sub
lods
mov
popa
or
push
inc
mov
repnz
adc
xchg
mov
jns
test
sbb
dec
cmp
push
push
enter
sub
out
test
cmp
add
jmp
push
mov
int3
xchg
sub
bound
shr
add
jle
mov
sub
dec
or
add
repnz
inc
stos
sub
popa
or
test
lods
push
cmps
pop
dec
mov
jecxz
adc
or
aas
fsub
jg
imul
dec
xchg
das
inc
mov
imul
xchg
out
or
add
ret
leave
outs
jle
jle
and
adc
bound
cmp
mov
imul
mov
jne
loopne
adc
call
and
test
shr
xor
xor
push
aaa
inc
js
sahf
loopne
sbb
sub
fisttp
ficom
add
mov
fcomp
js
pop
bound
push
ror
pop
mov
xchg
add
xor
xor
cli
jmp
inc
(bad)
movs
mov
sub
(bad)
sti
xor
fldenv
arpl
arpl
add
and
ret
push
jmp
ins
jo
and
mov
je
xchg
fst
movs
lods
ret
fld
jo
movs
rcr
jmp
and
mov
xchg
mov
dec
add
out
loop
mov
mov
jb
subps
mov
mov
std
icebp
loopne
add
inc
mov
or
jp
dec
sar
xchg
das
push
pop
dec
mov
jae
dec
fmul
rcl
cmp
mov
pop
push
retf
in
push
sbb
inc
xor
mov
sub
jmp
or
xchg
fisubr
jb
or
push
pushf
aad
aas
dec
out
jmp
popf
push
ret
imul
xchg
pop
xchg
or
xchg
sub
and
cld
cmc
pop
out
sbb
and
pop
and
addr16
cld
ss
cmp
je
loope
adc
mov
fisttp
jnp
das
aam
pop
dec
cmp
sbb
or
test
xlat
test
loopne
imul
sbb
push
inc
xor
addr16
push
stc
cmp
add
push
outs
icebp
ss
and
arpl
call
cmps
inc
sub
imul
push
es
retf
jne
cwde
sbb
jge
mov
rol
imul
imul
xchg
or
add
stos
fisub
loope
data16
cmps
lds
sub
xchg
in
or
test
aaa
and
(bad)
push
jmp
ins
cmc
(bad)
mov
xor
pop
sbb
fisub
in
ins
jbe
call
dec
outs
(bad)
fist
add
mov
push
add
jmp
data16
sbb
inc
xor
adc
pop
and
or
sbb
xchg
sub
lods
mov
out
pop
sbb
pop
cmps
pop
push
add
loop
(bad)
jmp
xor
sbb
frstor
in
imul
sbb
inc
xor
xchg
jle
daa
mov
mov
fimul
(bad)
imul
push
sub
xor
mov
xchg
jl
sub
and
mov
jmp
sub
fstp
xor
or
in
pop
sahf
inc
xchg
movs
mov
mov
nop
add
sti
mov
push
cmps
(bad)
add
jb
hlt
mov
mov
lock
xchg
out
mov
xor
aam
inc
cld
jb
outs
add
ror
pop
push
shr
out
jnp
and
movs
pop
retf
jecxz
in
test
mov
jae
sbb
pushf
or
cmp
and
arpl
loope
sbb
pop
fcomp
mov
stos
dec
fisttp
lock
cmp
adc
(bad)
sbb
ds
push
pusha
popa
add
lods
xor
nop
fcom
(bad)
idiv
scas
pop
mov
push
pusha
popa
add
lds
fmul
sti
mov
(bad)
cmps
push
dec
mov
pop
push
push
inc
pop
push
shl
push
push
(bad)
mov
arpl
xchg
add
mov
aad
sar
jne
sbb
(bad)
iret
aaa
inc
jle
sbb
popf
xchg
jg
mov
fimul
jno
and
movs
aad
mov
out
sbb
mov
sub
out
int
js
jmp
sub
lods
cmp
cwde
fcom
or
jne
xchg
dec
and
mov
dec
ins
cmp
cmps
dec
call
cmp
into
ins
and
cmp
dec
pusha
in
ins
or
dec
ins
inc
sbb
xchg
inc
push
ins
xchg
inc
lods
fiadd
sahf
ja
mov
push
std
mov
jbe
cld
sahf
out
mov
push
and
mov
lods
fiadd
lahf
push
dec
nop
sub
mov
cmp
(bad)
sbb
arpl
dec
and
rcr
sub
fadd
pusha
cmp
outs
popa
mov
dec
popf
ja
dec
popa
sbb
dec
lahf
mov
nop
or
cmp
dec
ins
popf
push
xchg
ficomp
out
jmp
sbb
arpl
add
rol
mov
lods
add
aam
fldcw
ins
and
xlat
push
dec
add
mov
inc
in
add
out
and
mov
popa
mov
fisubr
jbe
add
push
xchg
sub
add
ret
push
push
fnstenv
mov
daa
repz
aad
daa
fstp
jne
nop
mov
in
fsubr
out
nop
sub
and
ret
ins
xchg
or
mov
mov
sbb
add
std
inc
jne
cld
mov
cmp
xchg
mov
ja
fld
out
mov
cmp
daa
dec
icebp
mov
fiadd
and
sub
dec
cld
lahf
mov
mov
ret
std
add
in
cld
sub
std
add
outs
and
or
ins
std
aad
outs
dec
lock
(bad)
popa
cmp
dec
icebp
sbb
fisub
xchg
outs
aad
mov
inc
lods
xchg
(bad)
arpl
mov
sbb
dec
aam
xchg
outs
pusha
push
dec
ins
lock
outs
aam
daa
outs
inc
sbb
xchg
inc
mov
and
sbb
inc
ins
repz
add
ins
mov
push
fld
xlat
in
nop
sub
outs
xchg
sub
and
ja
add
ret
or
xchg
outs
(bad)
lods
add
or
ret
and
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
dec
icebp
cmp
cli
icebp
cmp
dec
icebp
sbb
cli
dec
xor
push
inc
sar
test
out
jle
inc
sbb
(bad)
out
(bad)
rcr
xchg
and
cmp
daa
add
scas
(bad)
xchg
sbb
arpl
push
int3
rcr
loope
outs
add
dec
and
inc
(bad)
test
stos
cmp
push
and
loopne
pop
pop
xchg
inc
dec
std
jl
mov
push
enter
and
xor
nop
xchg
add
loopne
add
jp
ret
out
into
jmp
cmp
push
mov
push
pop
adc
xor
jge
adc
or
dec
jle
loopne
ins
adc
jae
loopne
aad
int3
pop
inc
sar
inc
in
push
loop
jo
inc
dec
icebp
dec
inc
or
loope
mov
cs
outs
or
push
xchg
out
cmp
fadd
xchg
mov
loop
mov
int
sub
ds
icebp
lods
pop
dec
in
jecxz
mov
lock
ret
ins
jmp
sub
pop
repz
dec
repz
dec
mov
cmp
outs
cmc
jl
dec
loop
xor
cmp
mov
cmp
add
dec
ins
add
nop
add
sbb
jo
jns
dec
pop
sub
mov
add
xor
(bad)
(bad)
ds
jmp
cmps
mov
push
dec
mul
jb
aad
cmp
xor
dec
(bad)
jo
dec
imul
push
lods
xor
shl
push
mov
lods
arpl
outs
push
retf
pop
xchg
mov
xchg
sbb
in
push
cmp
adc
outs
push
or
push
es
mul
or
xor
mov
mov
(bad)
push
or
push
mov
push
jl
mov
cmps
fild
add
xor
das
push
inc
(bad)
mov
or
sub
or
mov
fisub
not
and
pop
movs
jo
in
add
or
stc
idiv
cli
fcomp
sbb
(bad)
cld
xchg
inc
clc
push
clc
daa
movs
cmps
nop
and
add
mov
xor
pop
cmps
jp
test
add
out
dec
add
mov
mov
cmp
ss
(bad)
test
icebp
push
cwde
or
lea
sbb
in
add
ss
push
cmp
data16
xchg
add
xchg
out
mov
jle
mov
xor
add
jmp
leave
stc
add
push
cmp
mov
push
aaa
repnz
xchg
loopne
lds
push
repz
jecxz
out
clc
pop
pop
imul
mov
rcl
jmp
fisub
jmp
(bad)
jbe
mov
pop
cmp
pushf
imul
push
shl
mov
repnz
fadd
scas
test
(bad)
mov
repz
(bad)
aaa
les
or
jecxz
ret
dec
inc
dec
rcr
and
mov
fimul
shl
xchg
inc
pop
call
cld
les
push
fadd
pop
cmc
lods
xlat
ss
gs
iret
pop
mov
add
pusha
mov
cmps
sti
sub
je
xor
add
fucomip
mov
cmp
rcr
xchg
pop
cmps
inc
in
add
std
ja
stos
cmovb
ret
adc
inc
aaa
ja
ret
pop
(bad)
clc
push
dec
shl
movzx
mov
sbb
jne
cmp
pop
imul
in
xchg
test
pop
lahf
adc
pop
dec
in
outs
gs
(bad)
push
mov
sbb
ds
pop
jbe
stc
xchg
and
fwait
pop
lock
xor
(bad)
in
push
cli
mov
arpl
aaa
inc
je
add
cdq
pop
sub
rcl
xchg
repz
jmp
pushf
js
shl
pop
outs
inc
into
dec
and
dec
ficom
mov
pop
repz
xchg
test
imul
jo
cmp
add
call
mov
add
popa
xor
mov
sub
mov
cmc
jecxz
mov
sbb
pop
shr
je
cmp
jmp
mov
fs
add
fild
ror
xchg
stos
or
xchg
mov
fbstp
cli
and
shl
jb
lea
sbb
xor
dec
and
stos
sub
mov
jl
mov
jnp
call
push
adc
sti
sbb
cmp
ret
rol
xlat
in
add
ins
out
call
test
aam
add
inc
stos
push
add
jle
mov
pop
ret
pop
lock
sbb
pop
retf
loop
div
sub
addr16
cs
mov
mov
femms
shl
push
inc
or
scas
test
add
pop
xchg
fist
(bad)
or
into
or
xchg
mov
gs
xchg
and
push
mov
fwait
sbb
xchg
push
cld
push
test
jecxz
test
dec
ins
es
inc
loope
mov
push
out
push
outs
pop
ds
sbb
xor
das
mov
mov
push
fucomp
scas
lds
aam
pop
jmp
ds
jae
pop
sbb
imul
rcr
add
jg
mov
gs
daa
adc
shr
push
sub
mov
sub
addr16
icebp
xchg
mov
jp
mov
fsub
mov
sub
test
inc
xchg
jl
inc
frstor
ds
bnd
cs
or
test
sbb
jno
mov
xlat
xor
stos
inc
(bad)
popa
iret
lods
mov
and
loop
or
mov
and
add
adc
and
repz
adc
stc
repnz
out
call
lods
cs
xchg
pop
outs
jl
inc
sar
and
(bad)
adc
lock
jmp
push
dec
xchg
adc
ret
fsub
jmp
jo
rcl
add
loop
add
jb
(bad)
out
dec
mov
out
(bad)
ret
dec
test
fdivr
mov
xor
sqrtps
or
jo
xchg
inc
jmp
push
xor
dec
and
and
ins
test
jne
mov
xor
addr16
sub
mov
mov
adc
mov
in
inc
mov
je
jo
and
mov
adc
or
push
inc
jo
jmp
sub
xchg
cmp
add
xor
or
or
dec
fimul
inc
inc
cmc
out
les
sbb
xlat
mov
les
jns
sub
add
mov
jl
pop
ins
cmps
cmp
xchg
mov
neg
fcom
xchg
dec
mov
gs
xor
adc
(bad)
ins
xchg
push
das
aaa
fisub
jge
popa
shr
retf
pop
add
or
sbb
dec
mov
lea
popa
jp
test
mov
pop
jmp
sbb
ins
sub
mov
pop
imul
mov
into
sub
or
jp
(bad)
sub
int3
mov
fs
loopne
cli
jns
test
aas
movs
dec
cli
fwait
in
test
dec
dec
std
inc
jl
(bad)
pop
fdivr
sbb
push
cmp
dec
cmp
int3
fstp
es
addr16
movs
aas
cmps
xor
push
inc
mov
pushf
mov
push
sahf
dec
jmp
xlat
or
(bad)
loop
xchg
ds
push
in
sub
cmp
add
cmc
cmp
in
stc
jmp
mov
add
dec
cmps
shl
push
mov
jl
jbe
loopne
jmp
test
add
and
or
test
dec
sti
and
add
sub
cmp
add
sbb
leave
cdq
and
out
aam
pop
jmp
sbb
shl
jae
ins
pop
std
jle
mov
or
mov
inc
ja
or
loopne
mov
pop
jge
or
xchg
fistp
dec
sti
retf
push
ds
jmp
fwait
gs
dec
inc
mov
add
push
adc
mov
sbb
sbb
iret
jne
pop
jnp
sbb
add
aad
cmp
xor
dec
sub
movs
add
and
mov
push
add
leave
ss
dec
mov
xlat
mov
call
jno
cmp
sub
sar
push
outs
xor
xor
jmp
test
mov
mov
inc
loopne
adc
lock
(bad)
cmp
push
jge
adc
repz
retf
(bad)
xor
add
retf
xor
outs
loope
mov
pop
not
loopne
or
loopne
mov
in
nop
xchg
add
loopne
sbb
shl
mov
jecxz
je
and
fisttp
in
jecxz
or
inc
pop
jl
pop
call
dec
out
fcom
add
and
cmc
ficom
rcr
aad
mov
(bad)
repz
je
push
jns
cmps
mov
push
add
in
retf
addr16
fcom
or
outs
add
cmp
push
sub
add
pop
xor
(bad)
fcomp
jl
and
mov
add
iret
out
cmp
or
xchg
int3
ret
addr16
ss
pushf
and
and
pop
xor
in
pop
mov
inc
xchg
xor
sbb
test
stos
neg
inc
dec
mov
cdq
out
fisub
pop
fcmovnb
loope
push
sti
les
pop
xor
ret
mov
adc
xchg
test
dec
in
jo
adc
xor
dec
jmp
test
(bad)
call
out
xlat
fidiv
cld
rcr
and
jno
fimul
iret
mov
mov
cmp
fcmovbe
and
or
sub
sbb
jns
xchg
mov
je
mov
xor
dec
mov
mov
or
lods
cdq
mov
std
test
lds
mov
popa
clc
xchg
and
dec
sub
xor
clc
lock
cwde
pop
and
out
adc
ins
inc
xchg
das
inc
push
mov
call
shr
xchg
or
aaa
pop
mov
sbb
add
jecxz
sbb
sbb
mov
xor
add
add
adc
arpl
add
pop
out
pop
pop
pusha
push
xchg
push
and
pop
in
pop
pop
pusha
jo
jbe
sub
pop
out
pop
pop
adc
pop
in
pop
pop
xor
pop
out
pop
push
push
push
mov
inc
inc
jno
push
out
aam
dec
or
dec
add
push
and
cmp
(bad)
xor
rcr
(bad)
lock
dec
mov
adc
mov
nop
jo
dec
sbb
push
adc
popa
rcr
xchg
sub
pop
mov
cli
xchg
mov
xor
push
sub
inc
xor
push
sub
mov
in
mov
(bad)
retf
(bad)
xchg
outs
cdq
inc
retf
int3
fs
not
xchg
in
xchg
je
jnp
out
mov
in
pusha
xor
retf
adc
push
fdivr
pop
mov
out
push
add
or
in
ja
jmp
jl
sub
stc
ins
aad
into
mov
jbe
hlt
pop
fisttp
mov
repz
ret
stos
xchg
test
and
out
das
push
loop
inc
retf
int3
(bad)
pop
outs
loop
daa
mov
es
or
adc
jl
ss
add
movs
shr
cld
(bad)
mov
jbe
sar
fwait
call
mov
aas
push
dec
mov
fld
scas
sub
or
gs
int
(bad)
mov
ror
mov
sahf
dec
lods
fsub
test
push
sub
xchg
dec
dec
xor
inc
mov
mov
hlt
rol
jge
and
iret
stos
adc
push
fild
and
mov
out
mov
dec
inc
std
xchg
daa
push
xor
add
jge
fimul
je
(bad)
scas
push
pushw
(bad)
cmc
mov
inc
repz
push
sbb
dec
mov
mov
inc
lock
add
rol
iret
fwait
(bad)
in
push
mov
movs
inc
retf
les
repz
shr
cmp
es
les
mov
neg
xchg
xchg
loope
jl
or
sub
repz
in
xor
mov
sbb
xchg
jno
bswap
jl
jmp
dec
mov
nop
add
sub
inc
hlt
sub
loopne
mov
jp
push
out
pop
mov
cmp
jb
neg
cmp
mov
xchg
(bad)
cmps
sbb
ins
test
ds
cmps
sti
shr
pushf
in
rcr
push
sbb
pushf
out
sar
cmc
push
mov
jg
dec
mov
or
ficomp
xor
loop
adc
inc
push
cmp
xchg
and
ja
jecxz
stc
xor
cmp
mov
xor
cmp
push
jno
push
push
sub
adc
iret
or
mov
push
(bad)
retf
lods
into
pop
inc
aam
xchg
ja
lea
xchg
repz
add
out
jge
pop
push
ret
in
mov
mov
fsubrp
push
jbe
retf
addr16
push
push
clc
sub
adc
sub
xchg
mov
or
inc
dec
pop
jecxz
movs
icebp
dec
daa
adc
inc
pop
mov
shl
xor
or
int3
inc
xor
sub
in
push
jmp
(bad)
mov
(bad)
mov
in
not
scas
jnp
or
inc
sbb
and
pop
aas
fld1
pop
push
push
(bad)
push
push
xor
push
jno
mov
movs
mov
pop
mov
ds
xchg
inc
ror
in
retf
mov
pop
sbb
inc
int3
popa
pushf
scas
jns
es
jo
retf
push
cmp
and
dec
push
mov
push
push
ss
ret
test
(bad)
xor
push
jle
pop
sahf
or
pusha
pop
sub
sub
test
pop
xchg
cmp
(bad)
pop
iret
jg
imul
sbb
loope
sbb
ins
lds
jno
xchg
stc
fild
pop
fs
xor
push
xor
pushf
jns
cmp
jmp
mov
call
and
cmp
xor
or
lea
ficomp
add
test
jns
ficomp
pop
push
add
xor
addr16
in
cwde
cli
mov
or
or
pop
hlt
popf
retf
push
fnstenv
and
shl
and
and
cs
imul
inc
sbb
pop
test
pusha
sti
cmp
outs
fdivr
pop
fisttp
sub
cmp
add
enter
jp
sahf
xchg
fcom
and
rol
dec
dec
ins
retf
adc
dec
inc
js
lea
or
add
repnz
sbb
stos
std
cmc
jb
sti
xchg
push
(bad)
std
mov
outs
jnp
mov
les
and
pusha
jmp
jns
sub
fmulp
adc
jge
in
push
or
pop
push
sub
ins
jnp
sbb
movs
xchg
mov
jp
fs
fbld
add
(bad)
out
or
dec
loop
fld
out
scas
xor
sbb
or
fadd
outs
icebp
or
jp
pop
dec
pop
adc
inc
aas
and
inc
(bad)
mov
icebp
ss
jbe
cmp
nop
out
arpl
add
js
icebp
or
mov
push
add
and
icebp
cmp
dec
mov
mov
aad
or
dec
mov
xor
inc
mov
push
scas
xchg
test
cmps
mov
inc
jmp
pop
ficomp
xchg
sbb
mov
pop
push
(bad)
jmp
outs
ins
or
sbb
push
in
add
sub
enter
pushf
ficom
sbb
rcl
pop
push
(bad)
std
loop
stc
stos
mov
cwde
int
or
fsub
mov
std
sbb
stos
dec
mov
jmp
repnz
ret
or
lahf
(bad)
std
cld
xor
(bad)
mov
data16
cmp
clc
push
pop
loop
push
cmp
xor
test
sbb
(bad)
repnz
pop
cmps
mov
and
test
or
push
test
or
sbb
out
pop
retf
jns
xor
fnstcw
fdivr
adc
and
sbb
add
jg
jns
stos
cmp
gs
dec
xor
ret
cmp
sub
mov
enter
(bad)
xchg
fild
dec
bound
nop
mov
mov
jbe
and
test
movs
cmp
push
imul
ja
inc
data16
dec
(bad)
repnz
sbb
jge
in
retf
pop
imul
out
lds
push
pop
arpl
xchg
mov
cwde
out
je
push
lds
xchg
xchg
sub
(bad)
sub
sti
or
mov
jmp
mov
push
dec
xor
aad
call
xchg
shl
cmp
retf
hlt
stos
sub
rcr
add
retf
inc
aam
sub
mov
jb
sub
imul
jl
sbb
mov
ins
(bad)
jae
xchg
push
loop
repnz
mov
mov
push
out
mov
pop
push
xor
data16
pop
dec
mov
dec
in
xor
stos
pusha
dec
loopne
test
pushf
add
mov
in
fdivr
out
cli
jge
push
pop
mov
(bad)
ror
mov
rcl
pop
mov
sub
or
sti
mov
aas
pop
pop
in
je
jno
cmp
outs
and
push
dec
sub
rol
test
jecxz
mov
jbe
sbb
push
lods
out
mov
inc
and
add
sbb
(bad)
xor
mov
push
mov
data16
and
out
mov
icebp
cs
pop
push
les
mov
out
pop
cmp
out
xchg
or
xor
xchg
pop
inc
ficom
int
fstp
pop
sub
inc
push
or
(bad)
lods
inc
pop
jmp
ins
xor
out
pop
sbb
ins
push
adc
xchg
into
xchg
ret
jo
jno
(bad)
daa
add
sub
sti
addr16
sub
xchg
dec
(bad)
lods
aaa
sbb
mov
xchg
jmp
test
stc
pop
cmp
shld
push
inc
outs
loope
mov
mov
xor
dec
int3
xor
mul
loop
addr16
call
icebp
or
stc
sbb
outs
jle
push
mov
xchg
mov
jo
mov
scas
lods
mov
fbstp
pop
sub
in
jecxz
pop
xchg
sub
imul
mov
xor
icebp
int3
out
js
add
sbb
push
mov
pushf
daa
retf
test
iret
dec
pop
dec
mov
repz
test
inc
daa
pop
jns
xchg
jmp
int
cdq
icebp
stc
repz
repz
mov
jmp
pop
cld
mov
sub
(bad)
push
inc
mov
and
sar
cmc
jg
jmp
xchg
jns
int3
or
fmul
hlt
mov
call
xchg
retf
pop
fucomip
loope
xor
popa
retf
add
pushf
adc
lock
mov
pop
jo
inc
dec
in
or
js
or
cmp
pop
cmp
mov
icebp
mov
mov
fs
aam
push
mov
and
xor
popa
icebp
fidiv
(bad)
in
add
outs
addr16
lock
sbb
mov
int3
mov
add
fwait
jg
call
sub
inc
fstp
pop
sbb
cmp
shr
jmp
call
xor
xchg
shl
xchg
xchg
xchg
jmp
inc
and
neg
and
xor
xchg
xor
nop
xchg
bswap
neg
jmp
pop
mov
xchg
xchg
dec
sub
shl
jmp
add
mov
sub
mov
add
add
shr
xchg
sub
jmp
pop
xchg
not
add
xor
bswap
rol
mov
ror
jmp
push
add
mov
jmp
call
xor
mov
xchg
and
dec
sub
neg
xchg
xchg
mov
or
jmp
mov
and
sub
rol
inc
or
or
rol
sub
mov
inc
or
xor
and
shl
shr
add
jmp
push
inc
xor
xor
xchg
mov
xchg
dec
ror
and
add
shl
or
shr
jmp
mov
or
and
shl
mov
and
shl
mov
or
jmp
pop
or
xchg
add
shr
add
and
inc
add
and
jmp
push
add
xor
sub
mov
mov
xor
mov
mov
sub
jmp
push
dec
xor
xor
jmp
cmp
jmp
push
xchg
xor
and
shl
xor
add
and
neg
sub
xchg
sub
jmp
cmp
jmp
add
xchg
dec
mov
xor
or
sub
or
jmp
call
add
add
shl
sub
xchg
dec
and
or
add
jmp
pop
mov
dec
rol
shr
shl
or
sub
and
and
xor
dec
ror
mov
jmp
sub
rol
and
xchg
bswap
xor
add
inc
shl
mov
add
sub
jmp
call
mov
xor
xor
or
shr
xor
and
bswap
jmp
pop
and
inc
ror
add
xor
rol
mov
or
mov
jmp
pop
rol
or
or
rol
bswap
and
sub
and
rol
mov
jmp
call
add
xchg
mov
dec
add
inc
or
xor
add
or
xchg
xor
or
inc
jmp
push
sub
add
dec
xor
shr
shl
rol
sub
xor
dec
or
add
jmp
call
xor
ror
add
mov
and
not
add
mov
xor
jmp
push
add
xchg
not
or
sub
and
rol
jmp
push
and
xchg
xchg
add
add
xchg
or
mov
neg
and
xor
jmp
pop
xchg
add
shl
and
add
mov
xchg
add
mov
or
mov
and
neg
add
add
jmp
call
ror
or
sub
add
add
xor
xor
add
jmp
push
or
shl
or
and
mov
shr
jmp
mov
xor
or
mov
xor
or
jmp
jne
inc
and
add
xor
and
mov
inc
or
neg
xor
xor
neg
jmp
call
or
shl
or
xor
mov
xchg
sub
jmp
mov
and
xor
not
mov
xor
xchg
add
bswap
xchg
or
add
shr
jmp
pop
and
shr
mov
or
shl
mov
and
xchg
and
bswap
or
jmp
push
and
and
neg
xor
mov
sub
and
add
ror
mov
jmp
ret
add
inc
or
mov
add
mov
add
shl
mov
jmp
mov
xchg
add
jmp
call
add
and
or
xor
xor
jmp
pop
or
mov
or
xor
jmp
pop
xchg
or
or
inc
or
add
dec
and
jmp
push
mov
and
sub
xchg
mov
add
xor
and
shl
xchg
sub
jmp
add
and
or
mov
or
neg
mov
and
or
and
jmp
push
dec
mov
sub
sub
shl
sub
inc
jmp
push
sub
xor
and
xor
or
mov
xor
xor
jmp
mov
and
ror
xchg
and
and
sub
and
sub
jmp
push
mov
not
xchg
or
mov
add
add
jmp
mov
mov
mov
and
jmp
push
and
and
shr
xor
xor
shl
add
ror
sub
xor
sub
jmp
mov
or
not
inc
xor
inc
xor
mov
bswap
sub
ror
add
mov
mov
xor
jmp
mov
add
shr
xchg
mov
inc
xor
mov
xor
inc
jmp
pop
add
xor
shl
sub
ror
or
and
add
xchg
ror
nop
or
xor
dec
jmp
pop
shr
sub
mov
xchg
and
dec
sub
shr
xor
or
jmp
pop
sub
or
and
or
xor
xchg
and
sub
and
jmp
pop
sub
or
mov
or
jmp
push
rol
add
xchg
sub
xor
xchg
sub
mov
and
jmp
push
or
xchg
inc
xchg
mov
and
ror
add
and
shr
shl
mov
ror
neg
inc
jmp
mov
ror
sub
add
and
or
add
add
inc
xor
shl
xor
or
sub
mov
and
jmp
or
or
add
xor
xor
or
and
add
and
or
mov
xor
neg
jmp
add
add
sub
add
ror
dec
inc
xchg
xor
shl
xor
and
or
neg
sub
not
jmp
push
ror
add
and
jmp
pop
add
xchg
ror
neg
sub
jmp
mov
add
shr
neg
neg
add
xor
or
jmp
pop
xor
sub
add
xor
add
mov
xor
jmp
push
or
xchg
shl
inc
ror
shl
xor
mov
shr
shl
jmp
mov
xchg
add
or
and
dec
sub
and
rol
rol
xor
rol
add
mov
jmp
push
xor
xor
sub
inc
xchg
add
shl
and
nop
add
jmp
push
sub
sub
or
mov
sub
sub
mov
mov
sub
xor
sub
not
and
jmp
pop
xchg
xor
sub
and
inc
xor
or
xor
and
bswap
jmp
rol
shl
shl
and
xor
sub
sub
and
or
shl
and
mov
xchg
jmp
mov
xor
nop
or
dec
shl
add
and
mov
xor
sub
and
dec
mov
mov
jmp
call
or
and
or
mov
ror
and
jmp
mov
rol
xchg
not
xor
and
jmp
push
xor
mov
or
dec
sub
or
xchg
bswap
bswap
and
or
or
xchg
mov
and
jmp
push
and
mov
sub
or
mov
inc
xchg
xor
shl
mov
jmp
call
xchg
or
xor
mov
rol
or
rol
add
jmp
push
and
xchg
shr
or
and
or
xor
not
xor
jmp
pop
sub
dec
and
and
rol
xchg
and
and
shl
add
shl
mov
neg
jmp
pop
mov
ror
mov
xchg
mov
and
add
or
sub
jmp
call
and
or
and
shr
or
xchg
sub
rol
xchg
or
ror
dec
jmp
call
and
mov
neg
add
shl
rol
sub
mov
add
or
add
not
xchg
jmp
xor
sub
or
shr
xchg
mov
shl
mov
xor
xchg
add
and
jmp
mov
inc
mov
shr
sub
not
shl
and
jmp
mov
or
or
shl
mov
neg
bswap
dec
add
mov
mov
ror
or
xchg
mov
jmp
call
dec
mov
add
mov
mov
mov
and
dec
jmp
jne
and
bswap
dec
rol
neg
xor
neg
jmp
push
ror
or
mov
add
xchg
xor
jmp
push
shr
shr
xchg
xor
xchg
bswap
xor
add
xor
xor
xor
or
sub
jmp
pop
shr
or
xor
mov
xor
jmp
mov
add
and
mov
mov
mov
add
dec
shl
and
and
mov
add
jmp
pop
not
add
add
xor
sub
dec
and
mov
not
jmp
mov
rol
xchg
xor
xor
xchg
xor
shl
sub
rol
and
and
add
jmp
call
xor
and
xor
or
add
shr
rol
add
mov
jmp
sub
sub
sub
inc
jmp
push
shl
and
xor
and
mov
mov
and
sub
mov
inc
dec
or
xor
jmp
push
shr
xchg
mov
mov
nop
sub
xchg
sub
xor
inc
inc
sub
jmp
ret
add
shr
inc
sub
bswap
neg
or
or
sub
jmp
mov
add
and
sub
bswap
and
jmp
pop
not
shr
mov
xor
xchg
sub
xchg
or
dec
jmp
call
rol
mov
rol
mov
and
sub
mov
xor
or
jmp
pop
add
mov
mov
sub
xor
not
and
mov
sub
sub
xchg
and
jmp
call
sub
or
not
ror
or
mov
jmp
pop
sub
and
xor
or
add
mov
jmp
mov
and
add
mov
ror
xor
mov
or
or
sub
sub
sub
xor
xchg
bswap
jmp
pop
sub
add
xor
sub
neg
or
sub
not
and
rol
jmp
call
add
add
add
sub
and
rol
shl
or
shr
add
add
bswap
and
jmp
call
or
or
mov
neg
mov
xor
mov
add
bswap
xor
jmp
pop
xor
bswap
or
or
rol
add
shl
mov
sub
jmp
add
xor
and
mov
or
xchg
or
mov
neg
add
add
mov
or
and
jmp
pop
mov
mov
and
shl
neg
jmp
call
sub
xchg
and
mov
xor
sub
or
and
xchg
sub
sub
mov
jmp
push
not
and
mov
mov
mov
add
jmp
push
rol
and
mov
or
bswap
sub
xchg
sub
bswap
dec
jmp
push
xchg
and
sub
mov
add
mov
dec
add
jmp
push
and
sub
mov
sub
sub
jmp
call
bswap
add
bswap
sub
ror
or
shl
or
jmp
call
mov
ror
or
ror
dec
jmp
pop
and
inc
rol
bswap
not
and
ror
and
jmp
nop
add
dec
rol
xchg
xor
xor
shr
bswap
add
xchg
add
sub
inc
jmp
mov
inc
xor
sub
mov
sub
xor
rol
jmp
pop
bswap
rol
add
ror
and
sub
ror
shl
sub
sub
mov
or
mov
add
and
shl
jmp
add
nop
xor
mov
inc
mov
add
ror
or
xchg
dec
mov
xchg
bswap
not
jmp
movzx
xor
or
add
nop
xor
jmp
pop
sub
or
sub
neg
ror
mov
mov
or
xor
sub
mov
jmp
mul
mov
ror
add
xor
xchg
add
and
sub
xor
sub
add
jmp
push
mov
mov
or
inc
jmp
call
add
sub
xor
xor
ror
or
bswap
xor
or
sub
jmp
push
ror
nop
xchg
add
and
xor
dec
jmp
pop
or
rol
or
xor
add
and
add
and
sub
or
or
jmp
mov
or
neg
xor
sub
sub
not
and
not
or
bswap
not
mov
jmp
add
neg
sub
inc
and
add
sub
add
mov
jmp
call
xor
sub
sub
and
not
mov
sub
and
xor
bswap
rol
and
jmp
call
mov
add
xor
add
or
shr
mov
and
or
jmp
push
and
mov
not
or
xchg
or
not
xor
add
or
or
jmp
call
inc
xor
not
xchg
sub
or
ror
jmp
call
or
xchg
or
or
inc
jmp
push
sub
and
sub
rol
xchg
or
sub
bswap
xchg
or
and
add
and
mov
jmp
call
mov
xchg
bswap
rol
and
or
dec
xchg
ror
dec
ror
neg
xor
jmp
pop
or
ror
or
neg
xor
or
add
mov
xor
jmp
call
dec
and
add
shl
jmp
push
or
shl
sub
sub
xor
add
jmp
pop
add
neg
jmp
push
add
mov
add
mov
mov
or
add
shl
add
mov
xchg
xor
xor
jmp
add
neg
xchg
mov
sub
mov
sub
or
not
mov
neg
xchg
add
jmp
add
ror
xor
add
xor
sub
ror
inc
or
add
xchg
jmp
mul
and
xor
xor
jmp
pop
sub
xor
mov
or
add
sub
add
mov
jmp
nop
and
xchg
and
shl
bswap
shr
xor
xchg
or
xchg
jmp
push
xor
xchg
or
add
add
add
and
or
mov
xchg
mov
ror
and
jmp
mov
shl
xor
sub
mov
and
add
ror
and
sub
mov
xchg
shr
xchg
and
jmp
pop
and
add
shr
and
mov
xchg
xor
jmp
rol
or
mov
xchg
mov
neg
xchg
xor
add
xor
add
jmp
nop
xor
mov
add
sub
add
and
not
sub
and
not
jmp
pop
bswap
add
xchg
shr
xchg
sub
xchg
mov
jmp
ret
or
sub
jmp
pop
and
and
add
ror
and
xchg
xchg
xchg
jmp
pop
not
add
and
or
jmp
pop
xchg
xor
inc
xchg
shl
jmp
push
sub
xor
xor
xchg
mov
xor
rol
xor
xchg
xor
bswap
jmp
push
and
sub
xchg
inc
jmp
pop
dec
and
xor
mov
not
xchg
xchg
rol
add
jmp
mov
mov
neg
and
mov
mov
or
jmp
push
xor
and
or
inc
not
nop
mov
rol
and
xor
jmp
pop
xor
and
or
and
xor
add
or
not
xor
or
add
jmp
pop
xor
and
shl
xchg
or
xor
sub
or
sub
ror
dec
and
jmp
pop
and
xor
bswap
jmp
mov
xchg
mov
and
and
xchg
sub
jmp
call
xchg
bswap
add
rol
ror
jmp
pop
sub
neg
sub
not
add
add
rol
bswap
and
inc
jmp
pop
rol
xor
ror
and
add
xor
add
bswap
jmp
mov
add
shl
add
sub
inc
shl
or
xor
add
and
and
jmp
inc
and
inc
sub
neg
add
xor
add
bswap
xor
xor
xor
xchg
or
jmp
ret
mov
xor
or
and
dec
xchg
and
and
jmp
push
shr
mov
mov
add
add
not
sub
mov
inc
sub
xor
xor
ror
add
jmp
nop
add
nop
mov
or
or
not
and
xchg
and
mov
shl
jmp
pop
mov
or
dec
shr
or
mov
not
rol
xor
jmp
ret
xchg
and
or
and
shl
jmp
push
and
mov
not
sub
sub
rol
mov
and
shr
add
mov
and
sub
jmp
pop
xchg
shl
bswap
jmp
mov
dec
rol
shl
bswap
dec
mov
add
mov
add
add
or
and
shl
jmp
pop
xchg
add
neg
neg
mov
or
sub
add
xchg
neg
sub
not
or
add
jmp
push
sub
xchg
mov
xor
or
xor
xchg
and
sub
jmp
pop
or
and
add
and
xchg
rol
and
rol
jmp
add
xchg
sub
ror
sub
sub
dec
xor
dec
ror
sub
xor
or
sub
shl
jmp
push
and
xchg
sub
mov
xor
and
jmp
pop
and
xor
ror
neg
not
inc
jmp
mov
xor
xchg
ror
neg
add
xor
mov
xor
jmp
call
or
sub
xor
xor
add
xchg
sub
jmp
push
xchg
mov
sub
mov
shr
mov
rol
bswap
mov
not
and
and
jmp
pop
mov
sub
add
shl
mov
mov
ror
shr
jmp
xor
xor
add
and
sub
add
neg
and
or
add
ror
xchg
add
jmp
pop
xchg
or
xchg
bswap
xor
sub
and
add
xchg
ror
not
xor
mov
jmp
call
dec
xor
sub
xor
add
or
add
inc
jmp
push
neg
xchg
bswap
ror
inc
or
and
sub
xchg
sub
jmp
push
and
xchg
or
or
and
add
shr
xor
sub
ror
xor
or
jmp
mov
mov
add
neg
add
and
or
rol
xchg
xor
add
sub
not
add
jmp
pop
and
xchg
add
sub
bswap
xchg
mov
and
jmp
mov
sub
xor
neg
jmp
cmp
jmp
push
or
xchg
sub
not
add
add
xor
sub
shl
dec
or
jmp
pop
mov
mov
xor
ror
shl
jmp
add
mov
ror
or
or
and
or
sub
and
or
bswap
xchg
bswap
xor
xchg
or
jmp
mov
add
sub
xor
sub
shl
shr
sub
xor
ror
jmp
push
sub
ror
and
xchg
mov
xor
or
xchg
and
mov
or
jmp
push
sub
shl
xor
dec
mov
xchg
or
add
ror
jmp
mov
sub
or
inc
xor
add
rol
xor
ror
jmp
call
sub
xchg
sub
mov
xchg
add
and
jmp
push
add
xchg
and
xchg
xchg
xchg
not
add
jmp
mov
add
or
and
xchg
and
add
jmp
mov
add
add
sub
not
rol
mov
neg
add
xor
inc
jmp
push
sub
or
dec
xor
mov
add
rol
and
and
jmp
add
shl
xor
sub
or
add
jmp
pop
sub
and
add
mov
mov
or
sub
inc
and
sub
jmp
pop
bswap
and
or
rol
neg
xor
xor
jmp
pop
xor
xor
and
mov
rol
xor
xor
xchg
bswap
jmp
pop
shr
inc
shl
add
xor
dec
sub
mov
and
jmp
add
xor
xchg
xor
or
not
dec
add
ror
shr
dec
or
jmp
pop
sub
ror
sub
and
add
not
mov
mov
mov
shl
jmp
push
and
add
inc
or
xchg
neg
xor
or
add
jmp
mov
xor
and
sub
sub
or
or
and
xor
and
jmp
pop
shl
sub
sub
xchg
sub
xor
dec
rol
sub
shr
dec
jmp
and
or
and
jmp
push
mov
add
xor
not
mov
xor
jmp
nop
xor
and
sub
mov
dec
xchg
mov
xor
dec
sub
add
add
mov
xor
jmp
call
or
sub
xor
neg
inc
xor
xchg
or
and
add
or
xchg
or
not
jmp
rol
dec
xor
sub
add
add
or
rol
neg
mov
and
mov
add
and
not
jmp
push
neg
or
mov
and
add
mov
and
jmp
mov
add
xchg
add
add
jmp
pop
and
sub
and
and
sub
jmp
push
inc
add
ror
and
sub
xor
xchg
shr
jmp
pop
and
add
rol
or
mov
mov
shr
xor
add
shr
jmp
mov
bswap
or
bswap
or
add
xchg
jmp
call
ror
rol
sub
and
shl
mov
add
mov
add
add
dec
shl
jmp
push
sub
sub
not
sub
xor
sub
sub
mov
or
jmp
mov
shr
mov
inc
and
add
sub
or
sub
xchg
ror
shl
jmp
mov
sub
xchg
or
inc
add
and
and
jmp
push
xchg
sub
bswap
sub
xor
nop
and
jmp
push
and
rol
shl
not
add
add
ror
mov
mov
sub
mov
inc
shr
jmp
mov
or
mov
sub
xor
mov
add
jmp
call
dec
xor
or
mov
sub
rol
add
mov
neg
add
rol
jmp
mov
and
and
add
mov
ror
dec
shr
jmp
mov
sub
and
ror
add
add
and
add
neg
bswap
xchg
xchg
inc
jmp
and
xor
mov
neg
neg
mov
and
mov
mov
sub
bswap
xor
shr
add
add
and
jmp
pop
and
sub
sub
jmp
push
dec
bswap
xchg
sub
xor
jmp
mov
rol
sub
mov
or
xor
rol
jmp
mov
sub
mov
nop
mov
or
xchg
rol
jmp
pop
xor
xchg
add
sub
not
sub
xor
jmp
push
mov
and
mov
sub
shl
or
ror
add
and
jmp
push
xor
mov
xor
sub
and
add
and
jmp
pop
sub
sub
bswap
xor
or
neg
jmp
xor
mov
or
xchg
xor
mov
xchg
or
ror
jmp
push
mov
and
sub
sub
xchg
xor
jmp
call
xchg
add
and
xchg
xor
and
mov
not
add
shr
xchg
add
dec
jmp
mov
sub
or
and
mov
mov
neg
xchg
xchg
xor
or
not
neg
jmp
sub
add
or
ror
or
sub
sub
xchg
inc
add
neg
mov
or
jmp
push
bswap
mov
mov
xor
xor
sub
jmp
call
sub
mov
dec
and
sub
neg
add
jmp
mov
xor
bswap
or
sub
and
mov
sub
add
shr
xor
xchg
mov
neg
mov
jmp
call
and
xor
xor
and
mov
mov
shr
sub
shr
xchg
add
xchg
shr
jmp
rol
xor
inc
shl
add
and
neg
jmp
pop
sub
neg
mov
xor
or
mov
sub
jmp
push
xor
or
or
xchg
add
neg
sub
mov
xor
jmp
mov
shr
add
and
or
xor
xor
shr
sub
jmp
call
mov
xchg
add
sub
xchg
mov
not
jmp
pop
xchg
rol
or
add
xchg
dec
mov
jmp
mov
add
dec
not
dec
sub
and
and
not
mov
and
dec
xchg
sub
or
mov
jmp
mov
add
xor
not
jmp
call
and
or
mov
not
ror
mov
sub
jmp
pop
sub
or
or
sub
or
jmp
add
inc
sub
add
shl
xchg
dec
jmp
pop
bswap
ror
or
xor
mov
rol
add
nop
xchg
add
jmp
pop
and
and
xchg
and
sub
jmp
pop
neg
sub
xchg
bswap
shl
jmp
pop
or
sub
mov
add
xchg
ror
mov
jmp
call
xor
shl
and
jmp
xor
ror
mov
add
sub
or
or
xor
add
jmp
push
and
sub
nop
xchg
ror
or
shl
xchg
sub
xchg
xor
add
and
jmp
jl
rol
sub
xchg
add
or
mov
jmp
call
xor
neg
mov
and
bswap
xchg
mov
inc
neg
mov
or
mov
bswap
and
and
jmp
call
xor
xor
add
add
xchg
or
inc
add
dec
or
add
add
not
jmp
push
not
ror
or
mov
add
add
nop
xchg
xchg
xchg
add
mov
sub
xor
neg
jmp
mov
inc
xchg
sub
add
and
xor
or
xor
or
jmp
mov
or
not
mov
add
ror
and
inc
rol
and
and
xor
sub
xor
jmp
pop
mov
shr
sub
sub
shr
xchg
mov
jmp
call
xor
or
mov
or
and
jmp
push
mov
rol
add
add
ror
neg
and
jmp
push
add
add
dec
bswap
not
add
ror
mov
neg
add
jmp
pop
mov
or
bswap
sub
or
or
or
add
jmp
call
and
or
jmp
push
add
xchg
add
or
xor
dec
jmp
pop
xchg
add
mov
not
xchg
shr
sub
sub
add
dec
jmp
mov
xchg
not
bswap
dec
rol
add
sub
or
sub
jmp
pop
and
inc
xchg
sub
bswap
xchg
rol
jmp
mov
add
xor
xchg
xor
add
sub
or
and
jmp
push
ror
mov
dec
xchg
or
inc
xchg
inc
add
jmp
mov
add
sub
sub
add
dec
jmp
call
mov
add
add
xor
sub
or
xchg
mov
jmp
pop
sub
or
sub
add
add
inc
xor
xchg
sub
jmp
call
add
ror
add
ror
or
sub
or
xor
or
xor
jmp
push
and
xor
add
add
xor
add
mov
add
or
shr
neg
jmp
pop
not
bswap
xor
mov
rol
mov
not
xor
add
bswap
xchg
rol
and
mov
or
jmp
push
or
xchg
xor
xchg
or
or
ror
xor
rol
sub
add
dec
jmp
push
shl
or
ror
inc
or
inc
or
jmp
push
sub
and
add
rol
xor
shr
jmp
push
shl
mov
or
and
sub
or
add
and
and
not
mov
dec
mov
rol
jmp
xor
add
shl
bswap
and
dec
xor
add
xor
xchg
or
bswap
ror
xor
and
or
jmp
nop
mov
add
xor
sub
neg
jmp
call
ror
add
mov
xchg
sub
mov
xor
xchg
and
jmp
pop
or
shr
mov
xchg
xor
mov
and
mov
and
or
jmp
push
add
or
xchg
neg
and
add
or
xor
or
shl
add
jmp
mov
or
add
sub
xor
sub
xor
rol
xor
not
jmp
push
mov
dec
add
rol
sub
xchg
add
not
and
add
add
jmp
mov
or
and
and
or
sub
xor
xor
sub
sub
jmp
push
xor
or
sub
sub
sub
jmp
mov
sub
dec
or
neg
xor
jmp
mov
bswap
xor
add
mov
sub
neg
xor
xor
jmp
pop
shr
xchg
shl
and
jmp
push
ror
dec
sub
rol
sub
and
xchg
inc
add
nop
jmp
add
neg
bswap
mov
sub
jmp
call
xor
inc
sub
mov
mov
sub
add
bswap
and
or
and
inc
sub
jmp
ret
shl
sub
ror
add
or
mov
and
or
xor
jmp
call
ror
xor
add
rol
sub
bswap
neg
xor
sub
or
add
jmp
mov
or
or
shl
mov
or
jmp
call
mov
bswap
sub
add
mov
mov
add
xor
jmp
push
add
sub
and
shl
bswap
or
and
xchg
mov
and
jmp
add
inc
mov
xchg
xchg
shl
or
and
jmp
mov
and
sub
xchg
mov
add
xchg
xchg
mov
jmp
call
ror
and
and
mov
inc
or
mov
xchg
and
jmp
mov
sub
xor
or
or
neg
xor
xchg
and
sub
dec
shr
jmp
push
shr
sub
xchg
xchg
ror
mov
ror
mov
jmp
push
xchg
mov
sub
add
shr
add
xchg
or
mov
xor
xor
dec
jmp
mov
shr
rol
or
sub
shr
sub
xor
xchg
and
or
or
neg
xor
dec
rol
jmp
mov
add
sub
jmp
mov
neg
and
xchg
add
rol
rol
not
or
rol
jmp
pop
add
xor
dec
mov
mov
xor
and
xor
inc
sub
jmp
mov
and
shr
mov
inc
xor
add
mov
or
mov
mov
add
xor
xor
or
jmp
call
xor
bswap
or
or
xor
add
and
xor
and
add
not
and
dec
jmp
call
and
xchg
neg
or
add
neg
add
xor
xor
jmp
mov
xor
xchg
add
xchg
dec
shr
neg
xchg
bswap
jmp
call
and
and
sub
or
not
shr
or
mov
or
shl
sub
jmp
call
xor
or
add
or
xchg
inc
add
or
jmp
push
mov
ror
xor
or
or
sub
and
mov
jmp
pop
and
and
mov
dec
xor
ror
sub
bswap
shl
and
bswap
bswap
xor
add
sub
jmp
push
add
add
ror
bswap
or
sub
and
add
xor
jmp
pop
inc
mov
xor
xor
xchg
or
mov
and
jmp
add
sub
xchg
add
nop
mov
and
bswap
sub
mov
xor
add
jmp
rol
sub
mov
or
mov
not
bswap
rol
xor
xchg
xchg
or
rol
shr
jmp
push
or
not
add
xor
xchg
add
shr
or
sub
and
jmp
ret
add
add
dec
xchg
not
xor
and
xor
jmp
call
xchg
mov
add
ror
shr
xor
neg
mov
and
jmp
add
bswap
bswap
add
xor
sub
xor
xchg
xor
xchg
xchg
rol
jmp
mov
nop
mov
xor
shr
not
xchg
xchg
and
or
jmp
call
xor
xor
xor
and
or
jmp
pop
xor
and
bswap
shl
or
mov
sub
xchg
shr
add
jmp
push
neg
mov
or
shl
xor
neg
mov
sub
rol
ror
sub
and
or
jmp
add
and
xor
xchg
and
or
mov
or
sub
xchg
neg
xor
jmp
pop
or
add
mov
add
xor
add
inc
or
sub
or
and
shl
inc
jmp
pop
mov
xchg
or
inc
shl
sub
and
sub
jmp
mov
and
sub
and
jmp
call
xchg
and
mov
jmp
call
mov
not
add
sub
shl
neg
shr
or
mov
or
add
jmp
add
not
rol
mov
and
ror
and
inc
rol
xor
jmp
pop
rol
add
xchg
add
and
or
or
xchg
jmp
rol
xor
shl
sub
bswap
xor
or
add
bswap
xor
mov
jmp
push
xor
sub
xor
mov
and
xor
add
not
mov
rol
mov
or
or
sub
or
jmp
mov
bswap
mov
add
xor
mov
jmp
mov
or
add
xor
xor
mov
jmp
xor
xchg
or
or
rol
neg
not
bswap
and
shr
and
xor
xchg
xor
jmp
mov
or
rol
mov
dec
and
shr
xchg
shr
mov
jmp
push
add
shl
not
add
or
rol
and
add
add
jmp
ret
mov
rol
mov
mov
mov
mov
neg
sub
add
bswap
sub
xor
sub
xchg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
