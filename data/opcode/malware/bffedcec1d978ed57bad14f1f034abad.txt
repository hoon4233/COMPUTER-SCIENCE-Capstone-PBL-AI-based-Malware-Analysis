mov
push
mov
push
push
push
notrack
je
jmp
call
jmp
add
push
xchg
mov
xchg
ret
pop
lea
pop
pop
pusha
mov
imul
popa
jne
sub
push
mov
lea
mov
add
and
or
pop
push
mov
push
xor
cmp
jne
add
ret
pop
jmp
add
add
xchg
xchg
xchg
jmp
xchg
repz
add
inc
jmp
cld
nop
xchg
add
adc
add
add
add
or
add
add
jmp
mov
cwde
add
xchg
jae
jmp
add
cmps
or
add
sbb
add
add
add
cwde
add
lock
int3
xchg
add
add
jmp
add
add
add
mov
add
ror
add
mov
cld
popa
jmp
dec
stc
xchg
add
leave
jmp
xchg
xchg
add
add
test
add
clc
jae
add
add
stc
jb
add
std
add
add
add
std
add
inc
add
cdq
xchg
add
test
add
jae
dec
add
pop
jmp
add
xchg
xchg
add
(bad)
call
mov
clc
jae
add
adc
jae
add
and
clc
jae
add
jb
inc
add
icebp
xchg
xchg
sub
stc
jb
add
add
xchg
xchg
test
clc
jae
add
add
add
cdq
mov
jmp
call
add
(bad)
call
mov
jmp
inc
stc
add
jmp
inc
stc
mov
sbb
stc
jb
add
add
add
jne
stc
jb
add
add
clc
jae
inc
xchg
xchg
sub
stc
jb
inc
add
icebp
int3
push
clc
jae
add
xchg
add
pop
and
jae
inc
std
cdq
add
cdq
xchg
add
push
clc
jae
call
add
popa
jmp
add
add
clc
jae
add
jmp
stc
jb
inc
add
add
xchg
add
icebp
add
add
jmp
dec
add
xchg
call
xchg
add
push
stc
jb
(bad)
cld
mov
repz
add
ret
jmp
xchg
add
add
jae
add
add
clc
jae
add
nop
xchg
pop
clc
jae
inc
stc
nop
add
stc
add
cmps
call
push
clc
jae
inc
add
add
add
call
clc
jae
call
pop
clc
jae
inc
stc
xchg
repnz
repnz
clc
jae
inc
cwde
std
add
add
inc
jmp
add
jmp
add
add
xchg
push
jmp
add
repz
xchg
push
jmp
inc
add
repz
xchg
push
clc
jae
inc
add
movs
stc
jb
inc
add
add
add
clc
jae
inc
add
dec
imul
add
std
call
stc
jb
add
add
add
mov
jmp
call
add
call
jmp
add
jae
add
std
std
add
nop
call
add
add
clc
jae
add
add
jle
(bad)
dec
add
inc
jb
jmp
add
add
mov
stc
jb
add
jb
inc
add
call
jmp
add
xchg
repnz
add
add
int3
add
push
stc
jb
inc
add
push
stc
jb
add
cdq
add
lock
jae
inc
xchg
stc
add
add
add
xchg
xchg
add
add
add
cld
xchg
add
add
jmp
inc
xchg
add
cwde
cdq
stc
push
jmp
inc
add
add
stc
jb
call
xchg
push
icebp
add
add
stc
jb
call
push
jmp
add
add
std
add
jmp
add
stc
add
inc
add
xchg
std
add
push
stc
jb
inc
int3
xchg
int3
add
add
popa
ins
push
stc
jb
add
xchg
add
pop
add
add
add
add
push
jmp
(bad)
stc
add
add
imul
add
add
test
add
jmp
push
add
mov
jmp
inc
add
icebp
add
inc
add
add
add
mov
jmp
inc
int3
add
add
std
mov
stc
jb
call
jb
add
repnz
add
jb
inc
mov
xchg
add
call
jmp
add
xchg
mov
or
add
jmp
add
push
in
jae
inc
int3
add
cwde
mov
clc
jae
add
add
add
pusha
jmp
inc
xchg
add
std
xchg
icebp
add
cwde
int3
cdq
xchg
add
add
clc
jae
add
xchg
add
add
add
cwde
call
jmp
call
xchg
call
stc
jb
inc
int3
add
popf
dec
add
xchg
push
clc
jae
add
clc
jae
add
icebp
add
fdivr
add
add
clc
jae
inc
cwde
cld
push
stc
jb
inc
add
mov
clc
jae
inc
cwde
icebp
repnz
xchg
mov
clc
jae
call
push
add
jmp
add
outs
arpl
mov
xchg
push
icebp
add
call
add
add
icebp
xchg
pop
stc
jb
add
cld
add
add
jmp
jmp
add
xchg
int3
add
clc
jae
inc
stc
std
shl
jmp
add
or
add
jae
add
add
push
jmp
inc
xchg
add
std
add
add
add
add
add
add
jae
add
retf
push
cdq
add
cdq
add
xchg
inc
add
add
jae
inc
add
cwde
xchg
add
add
add
cld
add
jne
clc
jae
add
mov
clc
jae
add
stc
stc
add
nop
add
add
jb
add
add
add
out
(bad)
out
clc
jae
add
jb
inc
add
add
icebp
add
sar
pop
add
xchg
add
adc
stc
jb
dec
add
mov
clc
jae
inc
add
add
add
jae
call
jmp
call
xchg
std
mov
stc
jb
add
cwde
push
add
cwde
cmp
jmp
add
jae
jmp
repnz
jmp
inc
add
xchg
repz
shr
clc
jae
dec
ja
jmp
add
and
add
add
cwde
add
jae
jmp
inc
xchg
add
inc
add
add
add
add
add
jb
add
icebp
cwde
stc
add
add
cmp
imul
stc
jb
add
add
clc
jae
call
mov
movsx
clc
jae
add
repz
add
xchg
add
jns
clc
jae
add
add
std
std
push
jmp
(bad)
stc
push
add
mov
clc
jae
call
add
stc
jb
add
add
stc
jb
dec
mov
jmp
add
call
icebp
nop
add
jmp
add
xchg
add
shr
push
add
std
add
cdq
xchg
xchg
mov
clc
jae
add
int3
add
repz
mov
sub
cld
xchg
xchg
add
jb
inc
xchg
add
add
clc
jae
add
mov
clc
jae
dec
add
enter
call
xchg
jne
jmp
add
add
add
add
xchg
shl
jmp
add
add
mov
add
pop
add
xchg
repz
pusha
jmp
call
stc
mov
imul
stc
jb
call
rep
jmp
inc
cld
add
add
clc
jae
add
add
add
popa
stc
jb
inc
add
add
jae
inc
add
jmp
add
pusha
clc
jae
add
add
xor
jmp
(bad)
cld
xchg
add
xchg
add
jb
add
add
add
jmp
add
xchg
add
test
cld
add
xor
stc
jb
push
int3
xchg
xchg
add
mov
jmp
xchg
add
add
mov
stc
jb
call
add
add
add
xchg
add
add
stc
jb
add
add
int3
add
sar
jae
add
add
add
nop
mov
jmp
(bad)
std
nop
cwde
icebp
add
(bad)
(bad)
stc
jb
inc
stc
call
stc
jb
call
and
jb
add
cdq
add
jmp
add
clc
jae
add
mov
jmp
inc
xchg
add
clc
jae
add
stc
jne
stc
jb
call
jae
call
add
or
push
int3
xchg
std
stc
add
add
push
stc
jb
add
add
mov
xchg
int3
mov
jmp
add
stc
jb
add
add
clc
jae
inc
add
push
jmp
add
add
add
clc
jae
call
add
cmps
cld
(bad)
(bad)
jmp
add
add
add
jge
clc
jae
inc
add
pop
push
add
jmp
inc
repnz
add
stc
jb
add
add
add
add
leave
call
shr
add
int3
xchg
stc
icebp
add
mov
jmp
dec
stc
stc
mov
stc
jb
push
add
std
(bad)
(bad)
jmp
inc
add
add
test
add
sbb
add
mov
jmp
add
jae
add
int3
xchg
mov
stc
jb
inc
add
jb
add
add
mov
add
cld
xchg
add
jecxz
add
add
add
mov
add
cwde
add
stc
jb
add
cdq
repz
test
jmp
add
jle
add
cmp
add
add
jae
push
add
add
jb
inc
xchg
xchg
add
(bad)
clc
jae
call
or
add
jae
add
repz
retf
pop
add
add
add
add
test
(bad)
(bad)
(bad)
jmp
inc
xchg
add
push
add
repnz
nop
add
jbe
stc
jb
add
add
xchg
add
push
add
add
repz
mov
clc
jae
call
stc
jb
add
sub
stc
jb
add
mov
add
add
stc
jb
add
std
xor
jmp
add
add
push
ret
stc
jb
inc
add
xor
clc
jae
inc
add
adc
adc
stc
jb
(bad)
stc
add
push
push
add
add
icebp
xchg
mov
or
add
add
jmp
jmp
call
stc
jb
add
add
jmp
jmp
add
jne
clc
jae
inc
xchg
test
jmp
call
shr
or
add
add
add
jae
add
add
cmp
cmps
inc
add
jmp
jb
inc
stc
xchg
cwde
add
jae
add
add
add
(bad)
std
add
cmp
stc
jb
add
xchg
mov
stc
jb
call
add
icebp
inc
jmp
add
xchg
add
cwde
add
add
clc
jae
inc
add
mov
add
add
repz
jae
inc
add
stc
add
cmp
jmp
add
xchg
cwde
jne
stc
jb
call
jb
call
add
test
add
add
add
jmp
add
xchg
add
add
(bad)
(bad)
stc
push
add
add
test
jb
add
jmp
inc
add
add
js
jae
add
add
(bad)
inc
stc
xchg
add
xchg
shl
stc
jb
add
mov
clc
jae
inc
xchg
stc
xchg
add
dec
cmc
(bad)
inc
xchg
add
adc
jb
inc
xchg
add
add
test
(bad)
(bad)
clc
jae
inc
stc
xor
jmp
add
stc
jb
inc
add
clc
jae
inc
add
movzx
stc
jb
add
xchg
mov
inc
add
std
icebp
add
jae
call
add
mov
stc
jb
add
icebp
add
add
jb
add
add
popa
jmp
inc
add
add
cwde
mov
call
jmp
add
stc
jb
add
xchg
mov
clc
jae
inc
xchg
cwde
xchg
mov
ret
clc
jae
call
xchg
mov
jmp
dec
add
jb
call
repnz
add
xchg
add
add
cmp
clc
jae
(bad)
cld
add
add
add
xchg
add
add
add
add
stc
jb
add
push
jmp
add
lods
clc
jae
add
add
mov
push
add
add
jb
add
repz
jmp
inc
add
sub
stc
jb
add
add
iret
or
mov
clc
clc
jae
add
std
rep
jmp
(bad)
cld
add
mov
stc
jb
inc
add
add
cmp
stc
jb
call
push
xor
clc
jae
inc
add
add
xchg
dec
clc
jae
call
add
rep
jmp
icebp
add
add
pop
add
push
test
jmp
nop
mov
clc
(bad)
inc
std
add
add
jmp
int3
add
int3
inc
stc
cdq
xchg
add
inc
add
add
(bad)
clc
jae
inc
xchg
icebp
nop
add
mov
clc
jae
inc
nop
add
xchg
xchg
add
stc
jb
inc
stc
add
xchg
sub
jmp
add
add
int
add
add
add
jmp
inc
add
add
add
stc
jb
call
jmp
push
add
repz
icebp
ret
jmp
add
add
add
adc
cld
add
jp
add
add
mov
xchg
add
sar
aaa
add
add
push
add
ret
jmp
inc
add
add
xchg
add
jmp
jmp
push
add
add
jb
add
xchg
add
add
add
sar
(bad)
push
add
int3
xchg
add
push
add
ja
stc
jb
add
jb
add
stc
add
jmp
add
cld
add
add
mov
stc
jb
add
mov
add
test
jmp
nop
add
jmp
add
add
xchg
push
int3
add
sar
jb
inc
add
add
jb
(bad)
cld
xchg
xchg
mov
add
pop
cmp
jb
add
nop
add
stc
push
stc
jb
add
add
sub
pop
add
add
add
call
icebp
xchg
push
stc
jb
add
add
nop
add
jb
add
xchg
add
jb
call
add
jae
add
xchg
xchg
add
add
add
mov
cmc
(bad)
(bad)
stc
jb
inc
add
cmp
jmp
add
call
stc
jb
dec
push
jmp
add
add
stc
jb
add
add
cmp
jmp
xchg
add
sub
add
int3
std
std
xchg
std
call
jmp
call
inc
stc
jb
push
xchg
xchg
add
(bad)
(bad)
stc
jb
add
int3
add
jmp
call
xchg
add
stc
jb
call
and
out
call
add
jb
inc
add
cdq
xchg
xchg
xchg
lea
clc
jae
inc
nop
nop
add
jne
clc
jae
add
add
stc
jb
add
xchg
add
jae
inc
add
pop
clc
jae
add
add
mov
jmp
inc
int3
push
add
repnz
jb
call
add
mov
stc
jb
add
add
jne
clc
jae
add
repz
xchg
pop
jmp
add
add
add
add
add
add
add
xchg
add
add
xchg
add
icebp
add
pop
stc
jb
add
xchg
add
add
repnz
clc
jae
call
dec
jmp
add
nop
add
add
cwde
add
inc
std
(bad)
call
add
add
add
test
jb
call
adc
add
cld
mov
clc
jae
add
xchg
mov
add
pop
jmp
push
add
mov
jmp
add
add
repz
clc
jae
inc
add
jae
call
stc
add
sub
add
stc
jb
add
add
dec
stc
jb
dec
add
mov
add
add
add
mov
clc
jae
add
add
pop
stc
jb
add
nop
add
add
add
mov
jmp
add
stc
jb
inc
add
add
cmp
pop
add
int3
stc
add
xchg
add
add
repnz
push
jmp
add
add
add
add
call
add
add
add
clc
jae
inc
repnz
add
clc
jae
push
cld
add
fdivr
add
add
xchg
add
mov
stc
jb
(bad)
stc
add
add
stc
ror
jmp
inc
add
jmp
inc
xchg
add
add
add
add
inc
add
add
repnz
stc
jb
inc
icebp
mov
xchg
cld
mov
jmp
add
nop
add
add
sar
fwait
inc
add
cwde
nop
xchg
mov
jmp
add
cwde
cdq
mov
jmp
add
int3
xchg
add
out
(bad)
(bad)
jmp
inc
xchg
add
push
clc
jae
inc
cdq
cwde
cld
add
add
shr
mov
add
add
xchg
xchg
repnz
clc
jae
add
push
add
nop
repz
stc
jb
add
add
repz
add
jb
inc
add
jb
push
repz
add
inc
add
mov
push
in
(bad)
call
push
stc
jb
call
xchg
add
xchg
idiv
(bad)
stc
jb
dec
add
mov
jmp
call
add
add
jae
add
jae
add
stc
add
cmp
add
mov
cld
add
sub
jmp
inc
xchg
add
cmps
add
add
cmp
(bad)
(bad)
stc
mov
clc
jae
add
add
movs
stc
jb
dec
xchg
xchg
mov
jmp
add
add
inc
clc
jae
call
int3
add
(bad)
(bad)
jmp
call
add
mov
jmp
add
mov
add
add
call
jmp
call
stc
jb
inc
cld
push
repnz
add
movs
jmp
inc
repz
xchg
add
inc
add
int3
stc
add
repnz
cmp
jmp
add
stc
add
jmp
push
push
add
repz
movs
clc
jae
add
add
xchg
mov
jb
add
in
(bad)
(bad)
clc
jae
inc
icebp
movs
jmp
call
add
add
xchg
cld
add
add
popa
jmp
cdq
repz
add
je
stc
jb
inc
xchg
mov
clc
jae
add
int3
cdq
mov
jmp
push
add
add
sbb
retf
add
stc
jb
add
xchg
add
add
pusha
jmp
add
add
add
cld
repnz
clc
jae
inc
add
test
in
(bad)
(bad)
stc
jb
add
add
jbe
jmp
call
add
add
jb
inc
add
call
xchg
add
jmp
add
cld
add
clc
jae
add
xchg
add
call
add
pop
add
add
ret
jmp
call
repz
jne
jmp
repnz
(bad)
(bad)
jmp
inc
add
add
xchg
icebp
(bad)
(bad)
jmp
icebp
add
jae
call
cdq
std
add
add
add
jae
add
add
inc
add
xchg
cwde
add
jae
inc
add
xchg
xchg
add
je
stc
jb
call
jmp
inc
add
jmp
inc
repz
add
inc
add
add
cld
add
nop
inc
clc
jae
add
add
test
clc
jae
add
stc
cwde
add
sar
add
repnz
add
mov
jmp
dec
xchg
cwde
xchg
xchg
add
stc
repnz
add
add
movs
clc
jae
inc
cwde
nop
cld
xchg
nop
add
cdq
add
add
add
test
stc
jb
add
add
add
add
stc
jb
inc
add
add
je
jmp
call
lock
(bad)
jmp
add
push
clc
jae
add
mov
jmp
push
add
add
add
(bad)
inc
add
clc
jae
add
add
mov
add
add
pop
add
repz
clc
jae
inc
add
xchg
add
je
clc
jae
inc
add
jb
inc
add
fdivr
cld
add
add
add
mov
clc
jae
add
add
jae
dec
mov
jmp
dec
add
push
clc
jae
add
xchg
cld
cld
add
jae
inc
add
add
mov
clc
jae
inc
add
mov
jmp
call
xchg
xchg
call
clc
jae
add
cwde
std
adc
jmp
cwde
xchg
add
stc
add
clc
jae
push
cld
add
add
add
nop
add
add
push
add
mov
clc
jae
call
mov
stc
jb
(bad)
std
add
add
mov
jmp
push
add
cwde
icebp
jmp
jmp
add
add
call
jmp
add
cdq
stc
xchg
stos
jmp
add
stc
cld
add
jmp
add
add
add
inc
cld
(bad)
(bad)
jmp
inc
add
add
clc
jae
add
call
add
add
retf
jmp
add
int3
xchg
call
jmp
add
cld
jmp
add
std
xchg
int3
repz
jmp
call
push
in
(bad)
(bad)
jmp
add
(bad)
inc
add
jmp
add
nop
cdq
repz
jmp
repnz
jmp
inc
add
add
mov
mov
jmp
call
pop
jmp
icebp
mov
cmp
mov
cmp
mov
dec
cmp
stc
div
and
push
ror
or
jp
and
mov
repnz
es
mov
(bad)
test
add
es
jmp
aaa
es
push
push
sub
loopne
es
cld
jns
stc
stc
loope
hlt
es
in
aam
dec
add
es
ins
pop
test
pushf
movs
jo
jb
pop
or
scas
adc
cmp
nop
add
mov
or
pop
cs
in
and
es
sub
xchg
xchg
add
xor
sub
gs
mov
ret
add
mov
and
int
sub
imul
es
cmps
add
mov
out
mov
out
adc
shr
rol
lea
adc
in
outs
retf
cwde
ret
and
mov
movs
and
pusha
(bad)
or
fcmovu
push
fisubr
clc
clc
inc
sub
adc
inc
and
shr
push
sar
out
test
es
in
mov
push
out
adc
adc
xor
or
pop
push
es
fiadd
outs
aad
cmp
cmp
jmp
xor
lock
adc
push
jmp
push
xchg
xchg
xchg
test
sub
add
mov
jecxz
mov
movs
pop
out
cmovae
mov
add
and
mov
out
dec
sub
ins
ret
xchg
les
pop
ret
out
jg
scas
es
or
cmp
mov
add
and
scas
scas
clc
xor
out
add
(bad)
out
out
movs
inc
stos
out
lock
clc
clc
or
xchg
out
or
cmp
mov
add
fstp
call
push
add
in
adc
add
jp
pop
xor
sbb
(bad)
retf
add
hlt
hlt
xor
js
ja
push
add
ror
fwait
mov
add
ins
leave
xchg
out
push
data16
add
xor
test
add
lods
xlat
out
cli
scas
hlt
es
aad
mov
es
mov
sbb
xchg
es
and
div
shr
push
sbb
outs
sub
es
push
pop
sub
frstor
add
out
aas
sbb
add
push
xchg
jle
dec
out
add
into
add
mov
cmc
and
(bad)
jnp
mov
sahf
xchg
xchg
iret
cld
lahf
out
add
std
std
cmps
shr
pop
jmp
loope
retf
test
lock
scas
out
(bad)
sti
add
cld
add
add
es
rol
aad
pop
jmp
cmp
xchg
xchg
add
lock
push
mov
xchg
add
cmp
cld
out
rcr
add
jecxz
lods
push
imul
fiadd
out
jl
idiv
pop
mov
out
pop
retf
and
and
hlt
in
in
rol
clc
popf
popf
leave
aad
out
pop
jo
xlat
xlat
add
pop
out
frstor
add
out
stos
xchg
mov
cmp
pusha
dec
jp
es
pop
cmp
leave
movs
call
add
out
sbb
test
add
aam
shl
rcl
xchg
inc
aaa
out
mov
add
sahf
push
rcl
push
cmp
data16
lock
das
add
add
jbe
sbb
shr
es
mov
xor
add
call
adc
add
aas
aas
or
out
mov
add
or
mov
add
sbb
aam
add
pop
push
es
xor
in
and
cmps
jmp
ret
es
call
es
mov
inc
cmp
add
cmps
popf
out
cs
(bad)
(bad)
pop
push
mov
arpl
retf
xor
(bad)
(bad)
xchg
das
xchg
add
jg
mov
inc
shr
add
xor
shl
mov
push
fstp
movs
movs
imul
xor
es
leave
adc
loop
mov
jge
push
retf
jne
sbb
add
out
mov
push
mov
out
push
in
(bad)
add
out
cmp
push
movs
add
dec
jno
pop
adc
jbe
add
sub
or
es
inc
mov
call
or
sbb
rcl
push
test
scas
call
jmp
mov
sar
pop
add
nop
pop
ja
inc
imul
dec
sbb
arpl
out
lods
call
add
paddsb
imul
enter
or
mov
mov
jo
xchg
test
sbb
hlt
in
mov
jecxz
nop
xor
and
lods
mov
test
add
out
call
jae
hlt
pushf
pushf
ror
or
out
pop
add
jne
inc
test
aam
or
add
pop
mov
sub
fldenv
push
and
cmp
les
dec
dec
pop
pop
es
adc
adc
lods
retf
sti
sti
in
inc
mov
xchg
iret
and
imul
inc
cli
mov
lods
jmp
es
and
xor
(bad)
fcomip
xchg
jg
add
es
lahf
aaa
dec
sub
(bad)
aam
rcl
mov
fsub
and
mov
cmp
pop
pop
add
xlat
cmp
js
stos
add
fsubr
loopne
dec
out
movs
ja
add
iret
push
push
int3
int3
mov
add
push
movs
les
add
lahf
test
add
pop
es
sbb
sar
adc
(bad)
call
jne
test
(bad)
jge
in
shl
xchg
push
push
pop
add
add
cmp
jg
scas
add
out
jle
push
add
jns
jmp
sbb
jp
mov
fcmovu
retf
out
out
jmp
add
sar
int
sub
test
add
in
out
out
loop
cdq
es
ins
and
sbb
icebp
cmp
mov
push
or
mov
test
loopne
cld
cld
add
hlt
out
sbb
mov
out
retf
add
jecxz
ds
es
fimul
into
xor
pusha
and
jmp
add
test
add
push
in
mov
js
out
xchg
pop
les
and
out
lods
jns
sbb
pop
stos
out
push
mov
and
rol
enter
sbb
and
mov
mov
movs
cwde
add
push
push
dec
mov
jmp
repnz
movs
add
mov
nop
xor
lock
in
sub
xchg
add
sti
mov
rol
add
jecxz
and
jns
pop
cli
test
ja
into
icebp
es
aam
xchg
(bad)
(bad)
mul
push
cwde
cwde
movs
cs
(bad)
mov
mov
jbe
sbb
xor
fcmovnu
ds
loopne
add
idiv
aaa
aaa
ds
mov
stos
aam
jle
xor
in
jo
es
and
sub
push
mov
test
arpl
in
add
mov
adc
stos
stos
inc
ficom
add
mov
es
inc
pop
add
cmc
pop
and
cmps
pop
add
ret
mov
aas
xchg
shl
jmp
stos
xor
cmp
std
out
inc
bound
mov
xchg
test
shrd
push
inc
call
out
(bad)
mov
icebp
icebp
dec
repnz
sub
inc
inc
xchg
xchg
pop
pop
enter
add
cmp
jne
cwde
es
shr
mov
add
pop
mov
and
inc
and
sub
pop
sbb
out
call
mov
push
daa
daa
int3
movs
push
out
lds
es
pop
out
dec
shl
dec
add
add
das
inc
add
dec
jb
or
les
out
adc
xchg
push
scas
scas
add
dec
dec
call
mov
popa
int
test
xchg
loop
jp
add
fmul
es
or
add
mov
dec
jmp
add
inc
mov
fnstenv
xor
out
outs
mov
fisttp
lods
dec
xchg
adc
inc
and
es
and
(bad)
aam
ins
jo
test
cmp
out
popf
mov
in
mov
xor
ins
out
dec
pushf
fwait
cmps
or
call
and
pop
cmp
cmp
stos
add
ss
push
adc
jae
mov
es
dec
adc
mov
stos
(bad)
neg
out
sbb
std
std
pushf
inc
and
es
mov
popf
pop
push
add
sar
inc
out
test
or
out
cmp
mov
fwait
es
mov
fnstenv
pop
out
test
pop
es
inc
cld
push
es
mov
xor
fsub
and
sub
cwde
push
add
dec
inc
sti
sti
xchg
mov
out
(bad)
out
ins
add
mov
data16
add
ret
push
add
pushf
pushf
fs
inc
inc
and
adc
xor
in
dec
imul
scas
out
add
movs
movs
ds
out
in
mov
into
out
xor
dec
and
loope
add
fwait
sub
es
pop
popf
adc
inc
inc
ss
jge
xchg
call
adc
(bad)
out
or
loope
sbb
shl
icebp
pop
call
jno
jbe
hlt
hlt
jno
sbb
xor
std
inc
jecxz
sub
xchg
sbb
and
cmp
pusha
retf
mov
rcl
les
or
add
gs
sbb
in
out
pop
xchg
push
es
cmp
jne
es
sbb
lock
es
cmp
mov
pop
mul
es
cdq
cmp
pop
add
es
cmp
stc
es
or
enter
retf
add
(bad)
es
inc
(bad)
push
add
pop
enter
stos
test
xchg
pop
cmp
add
sbb
loopne
add
outs
ss
out
jge
pop
mov
inc
lock
mov
and
aaa
das
in
push
mov
pop
ret
out
pusha
retf
aad
jp
add
push
inc
cmp
popa
inc
mov
and
es
dec
xor
sub
es
add
mov
and
mov
mov
xor
push
loopne
xor
pop
or
pop
lods
jnp
xor
add
mov
test
clc
fstp
sbb
cmc
pop
pop
or
aad
bswap
pop
xchg
ss
add
cmp
fldlg2
in
push
repnz
add
add
push
push
fist
add
pop
pop
xchg
call
es
neg
ror
mov
adc
test
mov
es
adc
scas
scas
xchg
add
jg
aas
out
out
pushf
es
jb
stc
stc
pop
jl
cmps
cmps
xchg
add
out
rol
ja
mov
loope
fistp
cmps
cmp
add
out
neg
adc
and
xchg
jmp
push
push
jl
loopne
dec
in
out
movs
retf
es
push
or
and
femms
xor
fbstp
adc
xor
sar
retf
mov
imul
mov
out
jmp
retf
out
sahf
jecxz
mov
out
out
pop
jns
pop
and
test
xchg
sub
add
and
adc
(bad)
push
out
add
div
push
pop
push
out
add
jmp
call
pop
lahf
stc
mov
add
frstor
dec
stos
cmp
test
es
adc
inc
inc
push
add
call
mov
add
adc
frstor
sbb
add
sahf
pop
pop
xchg
cmp
in
jmp
jecxz
add
mov
push
cmp
mov
add
cwde
retf
jns
pop
enter
pop
out
mov
aam
and
sbb
xchg
ror
lods
lods
or
ins
cli
mov
add
daa
mov
xchg
mov
lock
push
cmp
or
shl
or
add
lahf
lods
pop
out
sahf
mov
test
outs
xchg
jno
mov
dec
push
push
inc
mov
mov
repnz
mov
stos
sbb
mov
cmp
shl
sbb
add
push
push
pop
(bad)
mov
adc
inc
xor
aam
jg
out
repnz
cdq
ins
out
add
out
sub
icebp
out
jnp
push
mov
out
stos
ret
add
jns
es
add
scas
mov
cld
cmp
dec
jle
and
mov
cdq
dec
call
sub
stos
jnp
es
prefetcht1
test
ret
sti
xor
sbb
xchg
inc
xor
sbb
call
and
iret
cmps
rcl
out
js
mov
add
push
loope
xor
out
and
add
jl
or
cmp
add
push
inc
in
cmps
xor
xchg
cmp
es
lea
push
inc
inc
mov
xor
jg
sub
add
es
je
add
add
jmp
xchg
imul
clc
ins
sbb
stos
mov
out
or
add
sub
int3
xchg
push
add
dec
ret
es
add
aad
scas
aam
or
sub
sbb
jge
out
xchg
dec
daa
sbb
xchg
inc
popf
out
add
add
hlt
xor
bound
push
es
and
es
or
sbb
dec
mov
es
pop
sti
repnz
jle
out
mov
xchg
(bad)
cmps
xchg
xchg
addr16
out
lea
add
xchg
(bad)
gs
push
lahf
or
adc
movs
add
aam
cmp
pop
pop
jmp
call
push
jns
ins
test
inc
inc
(bad)
pop
fsub
sti
ret
mov
ja
xchg
sar
inc
and
inc
pop
pop
dec
fs
jne
ss
daa
daa
or
adc
xchg
pop
jns
cdq
cdq
ret
jo
out
mov
adc
add
or
icebp
(bad)
lea
add
popa
add
test
pop
pop
add
addr16
out
xor
mov
adc
mov
sbb
sbb
cmp
xor
shr
push
out
jg
jo
out
push
stos
data16
add
(bad)
es
shr
sub
es
or
je
(bad)
pop
add
out
in
pop
add
dec
repz
xchg
push
push
ja
cdq
add
arpl
mov
ror
sbb
sbb
inc
add
das
das
loop
lods
es
sub
test
int3
loope
jmp
adc
mov
loopne
in
out
xchg
pop
sar
jnp
mov
pusha
and
aam
or
cmp
add
out
add
adc
test
add
int
and
out
jae
repnz
lods
pmaxub
cmp
es
jl
cwde
add
shl
es
adc
mov
mov
shr
out
pop
clc
shl
jl
add
repnz
adc
sar
loopne
cli
add
jo
arpl
pop
pusha
pusha
imul
fsubr
jmp
test
pop
out
sub
xchg
add
adc
mov
cli
push
int3
int3
out
add
scas
lahf
dec
leave
jecxz
push
or
add
into
push
es
dec
xlat
adc
gs
push
cmp
std
mov
cmps
out
lock
add
int
jbe
xchg
add
stos
stos
(bad)
jmp
add
mov
jge
sub
pop
cmp
test
jbe
stc
es
add
sub
addr16
adc
mov
push
ss
daa
daa
dec
lods
(bad)
rol
push
mov
xchg
stos
pop
push
cmp
or
add
and
test
mov
mov
aam
add
ss
add
repz
rol
xor
test
mov
bound
fadd
pusha
es
scas
icebp
add
arpl
xor
and
dec
xchg
pop
es
ror
gs
not
ret
dec
add
sub
jp
add
adc
int
inc
fwait
mov
out
data16
into
cld
cmp
out
fldcw
cmp
cmp
loop
xchg
mov
sub
adc
and
cmp
inc
fsub
adc
test
clc
clc
add
mov
je
cmp
leave
leave
push
xchg
sub
lahf
or
pop
iret
iret
mov
mov
adc
adc
and
repnz
pop
add
sub
mov
loopne
mov
add
pop
inc
sbb
scas
mov
repnz
cmp
adc
xchg
(bad)
sub
frstor
and
adc
cmp
add
push
es
mov
mov
sar
and
sub
push
mov
in
sub
ret
repz
push
jne
mul
add
(bad)
cdq
mov
jl
xchg
repnz
pusha
cwde
test
add
lods
repnz
or
mov
int
and
pop
add
imul
cmps
push
(bad)
mov
stc
out
and
vmovd
out
fist
shl
fwait
pop
adc
les
loopne
mov
jmp
add
es
jno
or
bound
dec
aad
es
adc
cmp
cs
enter
into
sbb
outs
out
loopne
push
es
dec
pop
add
fdivr
es
out
add
sti
sti
adc
cmp
(bad)
mov
sbb
lahf
lock
out
sub
test
add
jo
xor
jno
sub
fwait
out
icebp
and
add
xchg
ds
add
xor
jnp
mov
test
aad
loop
add
hlt
jmp
and
add
sbb
iret
out
push
fist
add
retf
xlat
out
es
add
cmps
lods
es
in
add
pop
shl
dec
dec
mov
cmp
push
push
cmp
add
es
pusha
pushf
jo
(bad)
xor
out
mov
cmp
aam
add
add
(bad)
out
rcl
es
outs
dec
int3
push
push
add
sub
gs
mov
mov
sbb
fisttp
or
out
dec
pushf
and
cwde
add
mov
xchg
loopne
jnp
or
aam
xchg
lds
mov
add
sbb
and
aas
fst
dec
dec
iret
cmp
xor
fcmovnu
dec
adc
adc
push
icebp
(bad)
fbld
fs
pop
pop
in
pop
xchg
out
cmp
stos
add
add
(bad)
out
xchg
pusha
mov
xchg
(bad)
sbb
rcr
cmp
push
jmp
out
(bad)
aaa
pop
movs
cmp
mov
inc
mov
out
mov
cmp
add
es
jne
lsl
fsubrp
fadd
ret
nop
out
aas
push
add
mov
(bad)
mov
popa
es
push
add
loop
mov
enter
mov
cmp
jbe
adc
xadd
out
xor
jo
inc
ins
sub
and
cmp
add
je
call
cs
lahf
cmp
out
sub
es
adc
shl
add
or
cmp
retf
hlt
dec
dec
add
out
mov
cmp
adc
sti
loopne
cmps
mov
jg
cli
adc
das
add
out
mov
push
pop
add
repz
retf
jmp
push
and
out
jg
mov
inc
add
shl
clc
out
mov
out
mov
mov
stos
je
es
cmp
adc
scas
in
mov
(bad)
jge
add
out
out
xchg
aad
out
int
add
les
mov
es
arpl
mov
add
jne
out
xor
adc
mov
loop
rcl
sub
sti
cmp
and
popf
add
or
aam
cdq
out
dec
sbb
es
call
dec
mov
mov
ja
es
in
sar
es
xchg
ins
repz
daa
cmp
dec
test
xchg
ret
xor
(bad)
xor
es
neg
mov
cwde
cmc
es
fadd
int
outs
xchg
lock
add
(bad)
mov
fld
sahf
dec
pop
pop
adc
ror
sbb
sbb
mov
test
es
es
test
neg
inc
inc
mov
add
mov
jmp
pushf
or
mov
push
fstp
ret
fisttp
out
rcr
add
arpl
add
mov
cmp
cdq
mov
rcl
sbb
es
mov
mov
cld
(bad)
out
shl
push
out
fstp
es
add
push
stc
frstor
movs
or
push
pop
test
lahf
mov
add
sbb
int3
imul
sti
es
data16
push
add
dec
mov
out
cmps
jae
add
jmp
xlat
es
jb
pop
stc
stc
cld
or
jae
xor
add
and
rep
sbb
sub
add
inc
mov
mov
shr
fsub
out
mov
outs
pop
pop
jge
push
out
jecxz
add
cmps
sbb
mov
imul
rcl
jl
push
or
in
mov
adc
push
add
dec
popf
(bad)
fcmovu
pop
int
out
mov
add
(bad)
leave
clc
fs
cwde
pop
xchg
pop
pop
inc
imul
jmp
rcr
(bad)
mov
pop
out
loopne
shl
faddp
add
add
data16
out
cmp
add
mov
xor
push
push
add
in
ja
push
out
dec
scas
pop
xor
(bad)
out
dec
out
mov
dec
mov
addr16
pop
je
hlt
add
out
and
out
test
(bad)
mov
xchg
neg
pusha
fs
sbb
test
sbb
add
(bad)
dec
out
pop
jmp
fcmovu
repnz
and
loope
sbb
add
cmp
xor
add
in
cmps
push
outs
outs
in
cs
or
ds
xchg
ss
sub
ret
cmp
jne
es
out
inc
enter
loope
cmp
and
mov
mov
inc
pop
inc
std
es
jns
mov
cld
setle
add
jbe
test
adc
popf
int3
int3
hlt
fadd
out
lock
inc
dec
dec
sbb
out
pop
add
rcl
loop
add
mov
dec
add
dec
or
or
stc
stc
add
out
out
sub
aam
mov
mov
addr16
ret
add
ins
out
jns
cmp
cmps
int3
pop
pop
lods
add
push
or
adc
loope
test
or
out
sub
jmp
cmp
js
add
cwde
icebp
xor
aas
aas
mov
add
cmps
fnstenv
inc
es
test
xchg
es
mov
sub
sub
out
cmp
pop
xchg
mul
dec
inc
jo
push
xlat
jg
es
test
pop
push
js
mov
sbb
mov
adc
add
mov
pop
and
pop
inc
jmp
pop
pop
ds
cld
cld
xor
push
out
and
(bad)
or
add
jmp
and
ss
add
xchg
es
pop
mov
and
stos
or
in
in
test
jmp
es
add
stc
test
and
ins
add
xchg
lea
jge
out
ss
es
or
mov
and
add
lahf
and
out
jns
add
out
xchg
call
sub
mov
mov
lods
pop
out
cs
es
mov
mov
retf
add
mov
pop
xor
and
ins
aaa
lock
or
add
aad
out
inc
cmp
es
bound
mov
rcl
sub
xchg
fisttp
lahf
es
shl
jg
sbb
xchg
jge
mov
sbb
or
xchg
xchg
or
shl
add
xchg
out
adc
sti
das
das
dec
add
xlat
(bad)
sar
repnz
dec
es
arpl
push
push
popa
add
pop
xor
out
push
ror
add
add
jp
or
setg
mov
mov
leave
xor
cs
and
hlt
sub
or
out
loop
test
out
test
imul
add
scas
out
es
ret
in
fcmovnu
add
aam
sub
mul
jo
add
aas
rol
add
out
movs
dec
sbb
add
jae
pop
cmp
test
jmp
xchg
jl
add
push
pop
out
sub
stos
inc
inc
lahf
and
mov
push
(bad)
mov
xchg
out
dec
dec
sub
mov
in
retf
add
fidiv
mov
shl
add
jmp
je
mov
add
add
movs
inc
inc
sbb
out
test
cld
mov
dec
popa
out
jb
add
out
retf
add
fstp
ins
out
cwde
push
mul
out
xchg
and
xchg
aas
aas
int3
ds
push
mul
retf
dec
addr16
pusha
iret
inc
fucom
rcl
(bad)
movs
je
shl
movs
pop
mov
mov
(bad)
out
mov
pop
test
cmp
and
clc
add
gs
popa
pop
es
mov
sldt
stos
enter
ds
je
or
push
fadd
(bad)
cmp
and
(bad)
imul
shl
js
sbb
enter
add
push
hlt
mov
mov
mov
out
into
jnp
inc
es
mov
clc
(bad)
(bad)
fwait
xor
pusha
pusha
push
int
out
sbb
rsqrtps
sub
aas
test
dec
imul
enter
push
adc
fisttp
add
out
shl
lahf
mov
adc
out
jecxz
daa
outs
outs
sbb
stc
add
add
outs
loopne
mov
sbb
xchg
(bad)
out
and
mov
mov
scas
rcl
leave
mov
or
jae
out
(bad)
push
imul
fdivr
es
push
dec
cmp
pop
jne
aam
add
xchg
jmp
jb
lds
and
(bad)
je
cmp
cmp
and
mov
xor
inc
push
cmp
in
mov
jle
out
(bad)
jp
ds
add
es
jmp
and
cmps
dec
enter
(bad)
jae
es
add
jecxz
(bad)
std
mov
adc
cmp
adc
push
out
ror
es
xchg
cli
rcr
iret
add
jg
fs
mov
mov
into
fdivr
push
pop
in
div
add
rol
add
data16
test
add
out
into
movs
es
xlat
xlat
shl
jns
add
repz
in
inc
jne
mov
fidivr
add
fdiv
rcl
out
lods
add
sub
pusha
jo
add
add
out
fcmovnu
repz
jbe
out
mov
dec
jg
mov
es
fs
jg
add
inc
xchg
mov
std
std
sahf
dec
push
out
in
call
out
ja
jmp
ret
into
jno
sub
add
jb
dec
sub
ds
xor
clc
and
add
add
gs
(bad)
es
(bad)
mov
es
push
emms
mov
out
add
es
dec
std
data16
sub
fisub
mov
cmp
inc
pop
xchg
add
sub
fcomp
add
adc
es
movs
jmp
jmp
pop
in
pop
xchg
out
adc
popf
es
sub
adc
loopne
imul
out
mov
lock
dec
add
jne
mov
fdivr
cmp
pop
fsub
pop
pop
pop
dec
pushf
pushf
or
pop
loopne
inc
ds
push
sbb
ror
adc
jae
aas
add
data16
(bad)
pop
adc
cmp
mov
xor
sub
adc
shl
fisttp
mov
js
sub
xchg
xchg
clc
cmp
inc
cmp
pop
outs
fsub
out
mov
(bad)
adc
cmp
pushf
add
jp
jge
in
xlat
leave
add
out
pop
xchg
imul
out
ds
xchg
xchg
add
mov
aad
aam
loop
pop
in
push
rcl
iret
and
les
(bad)
pushf
cs
mov
push
loopne
ret
out
std
push
and
xchg
sub
fwait
out
add
scas
mov
dec
pop
sahf
out
dec
push
leave
addr16
inc
out
cmp
add
sbb
shl
je
add
nop
es
je
jns
inc
retf
scas
out
mul
push
push
adc
data16
es
cmc
jecxz
or
out
ror
add
mov
jnp
jnp
add
mov
jecxz
call
aaa
popa
out
mov
push
push
push
xor
out
es
call
add
outs
es
fisttp
xchg
test
pop
or
inc
mul
cmp
add
jecxz
out
add
jno
ds
stos
mov
and
pop
outs
add
es
and
fbstp
fidivr
inc
inc
inc
pop
push
int
out
js
out
xor
mov
out
add
add
jo
mov
add
(bad)
xchg
ds
push
push
rol
std
sub
add
popw
mov
les
sub
outs
sti
in
add
(bad)
jae
add
sbb
ins
ins
push
inc
add
cmp
sub
sub
idiv
clc
retf
add
fimul
adc
fst
add
rcl
cwde
pop
es
add
add
xchg
cmps
jp
inc
into
lods
push
ret
ret
add
dec
es
das
push
(bad)
les
push
push
fs
es
stos
xor
cmps
cmps
shl
out
pop
or
jae
add
jne
mov
popf
sub
enter
dec
push
or
out
(bad)
hlt
(bad)
out
and
mov
adc
call
mov
add
and
mov
out
add
cmc
adc
stos
int
out
mov
cmp
into
or
add
or
push
xor
imul
sub
rol
inc
add
adc
outs
push
sti
es
add
cld
jl
jo
jno
hlt
pop
out
jp
adc
fdivr
movs
es
data16
or
jb
jns
lea
stos
and
es
xlat
mov
add
hlt
mov
js
enter
lds
pop
jb
push
lahf
out
mov
xchg
push
retw
add
and
es
xchg
fbstp
jl
in
and
sar
xchg
out
push
mov
add
add
and
or
pop
mov
sub
out
and
sbb
rcl
out
clc
outs
lock
inc
aad
add
call
or
je
and
out
outs
fild
xor
out
ins
mov
daa
cmp
pop
or
out
dec
ins
mov
out
cs
push
rol
add
mov
es
sub
je
lock
or
addr16
out
push
sbb
sub
in
mov
jno
rol
out
cld
mov
es
addr16
sti
xchg
push
sbb
or
(bad)
test
mov
or
cdq
aam
mov
xor
pop
mov
in
add
xchg
push
dec
push
sti
sti
jbe
mov
iret
es
pushf
inc
sahf
es
pop
pop
mov
retf
rcl
call
dec
hlt
in
es
int
cmp
rcl
sbb
and
sub
jno
cmp
and
es
aaa
pop
add
xchg
inc
in
bound
addr16
imul
imul
out
nop
push
test
ror
adc
mov
cmp
sbb
sub
add
pop
pop
or
(bad)
div
adc
out
loopne
push
push
cmps
es
out
ss
es
std
mov
mov
mov
out
mov
enter
dec
add
cmp
or
push
pop
call
es
cmps
pusha
rcl
sbb
les
add
jecxz
clc
es
clc
and
add
std
push
out
add
or
fidiv
sahf
out
lahf
add
in
out
cmp
cmp
nop
bound
mov
or
pop
aam
ins
aad
fldenv
push
lock
jp
les
(bad)
mov
out
mov
add
out
call
in
out
xchg
lods
in
push
out
(bad)
popa
es
push
(bad)
repnz
sub
add
cs
push
pop
fstp
vxorpd
xchg
out
mov
ret
out
add
das
es
add
pop
nop
es
sahf
ja
adc
inc
fisub
fadd
mov
imul
jp
dec
out
ss
mov
add
or
les
addr16
(bad)
shl
rol
cld
ret
out
jb
pop
adc
or
popa
js
(bad)
icebp
sahf
jmp
loopne
dec
xor
out
or
xlat
ret
mov
add
mov
sbb
add
dec
dec
pop
mov
jbe
das
add
leave
mov
inc
push
push
cmps
mov
fisttp
shl
sub
or
es
add
fcmovu
xor
in
out
sub
es
add
jle
pop
leave
(bad)
aad
xor
sub
inc
inc
dec
orps
or
inc
inc
adc
shl
int3
nop
aad
js
add
xor
mov
jl
not
xor
adc
stos
add
aad
(bad)
inc
out
push
inc
in
xlat
mov
scas
test
mov
xchg
pop
mov
es
int3
jl
add
clc
movs
aaa
es
inc
cmp
add
(bad)
mov
dec
add
outs
outs
xchg
enter
add
sub
pop
fnstcw
int3
push
push
mov
(bad)
imul
stc
not
adc
sti
in
inc
inc
retf
je
push
push
xor
xor
pop
jmp
ins
outs
or
je
jae
add
aas
arpl
ficom
xchg
ret
inc
mov
sahf
sahf
jp
jl
mov
sti
jle
test
fs
ds
pusha
pop
xchg
xchg
xchg
data16
xor
add
hlt
loopne
retf
jo
enter
dec
dec
out
leave
paddq
push
setno
out
jne
shl
cwde
repz
mov
add
cs
out
addr16
ror
(bad)
and
std
sahf
shl
add
push
icebp
jp
push
mov
add
hlt
pop
pop
cmp
out
dec
(bad)
inc
es
add
fsubr
in
pop
loopne
es
call
es
(bad)
xchg
mov
mov
add
out
mov
cmova
repz
sub
and
out
jle
add
adc
xlat
mov
push
xchg
jge
xchg
iret
repz
out
aaa
in
mov
sbb
and
mov
ficom
mov
pop
call
es
mov
retf
mov
es
loopne
cli
pop
pop
nop
(bad)
fld
das
jo
jg
sbb
pop
rcl
push
out
mov
je
icebp
out
inc
xor
out
jmp
or
fadd
mov
icebp
cs
sbb
add
test
out
popa
xor
(bad)
shufps
push
es
inc
pusha
cs
sbb
dec
lods
(bad)
out
sbb
icebp
out
dec
or
inc
sbb
loopne
or
es
mov
(bad)
es
mov
pop
and
and
ret
out
jmp
mov
jno
mov
add
mov
mov
loop
in
sbb
xchg
or
stos
stos
stc
jnp
out
ret
es
add
loop
jle
out
repnz
inc
push
push
jmp
fisub
sbb
add
jne
fs
xor
shl
out
add
ja
add
out
inc
sbb
jbe
sub
jne
es
jg
xor
retf
add
and
mov
aas
pop
repz
mov
add
xchg
ins
ins
les
mov
pop
ins
cmp
js
and
pop
inc
xlat
imul
in
(bad)
icebp
clc
add
cmp
cwde
mov
in
gs
add
in
push
test
push
es
mov
add
inc
cmp
lock
sar
clc
add
out
or
fistp
sbb
add
mov
pop
mov
cmp
movs
add
inc
push
jl
jae
(bad)
jmp
push
xchg
sub
rol
jb
es
push
stc
push
enter
add
xchg
rcr
sub
pop
xchg
jno
out
scas
sbb
mov
loop
je
es
adc
sub
cmp
lods
shl
cmps
movs
inc
div
sub
je
push
xor
add
dec
fcomp
push
out
aam
jne
ss
je
call
es
ins
ret
or
js
add
(bad)
cmps
out
stos
mov
clc
aaa
out
aam
test
xor
movs
xchg
add
xchg
and
add
push
pop
pop
mov
iret
xchg
popa
popa
sub
loope
cmp
cmp
and
fs
pop
xchg
mov
repz
out
daa
popa
int3
es
cmp
and
movs
out
add
(bad)
call
out
xchg
stos
mov
xor
mov
mov
and
les
add
mov
sbb
pavgw
and
es
adc
jle
cwde
push
test
xchg
shl
dec
movntq
add
ins
aad
(bad)
add
sahf
push
push
jnp
loopne
jo
inc
out
mov
and
out
(bad)
sbb
fnstenv
cmp
in
cwde
cwde
out
cwde
add
sbb
iret
out
add
push
push
add
mov
or
cmp
sbb
fnstenv
add
ret
shl
dec
cmc
clc
(bad)
cmp
mov
xor
sbb
push
mov
mov
aaa
es
imul
(bad)
(bad)
xchg
pop
mov
ret
sbb
add
fwait
xchg
xchg
(bad)
ja
out
cmp
clc
clc
inc
dec
in
mov
sbb
repz
pop
sbb
popa
mov
bound
jne
out
cwde
mov
xchg
jge
dec
mov
jb
jmp
(bad)
out
cli
dec
(bad)
(bad)
inc
jmp
out
imul
mov
push
adc
out
ret
xlat
pushf
mov
xor
or
gs
sub
add
es
in
ins
rol
add
sub
jmp
ss
in
in
cmp
loopne
inc
jno
call
icebp
pop
scas
add
(bad)
clc
scas
out
push
mov
add
push
dec
inc
bound
ret
or
add
push
sub
fdiv
into
xor
adc
sar
add
cs
push
retf
out
std
mov
int3
int3
scas
sahf
stos
out
mov
add
push
call
mov
jmp
add
std
jecxz
push
rol
inc
sub
sub
out
add
cmps
cmps
xchg
jbe
out
hlt
xor
add
add
mov
mov
jge
add
pop
xor
mov
cmp
mov
adc
mov
cmp
es
ja
shl
xchg
push
std
arpl
add
test
cli
aad
push
sub
ds
ss
mov
outs
rol
sar
es
push
push
push
push
mov
test
mov
imul
inc
inc
rol
out
mov
push
loope
(bad)
les
clc
pop
es
add
inc
dec
dec
push
or
es
mov
cmc
sbb
sbb
inc
add
jge
stc
jnp
fldcw
or
push
sub
and
int3
add
iret
mov
mov
outs
movs
xor
es
wbinvd
rcl
and
or
push
cli
out
add
ss
add
inc
xchg
out
arpl
shl
out
cli
cmp
fbld
dec
es
lods
pusha
mov
cmc
pop
push
add
repz
scas
out
xchg
jae
fadd
xchg
and
in
cmp
add
out
daa
dec
and
div
outs
ds
aad
mov
mov
mov
mov
sub
jp
add
outs
mov
push
add
sbb
daa
js
jno
mov
inc
mov
je
mov
addr16
(bad)
(bad)
sub
push
sbb
add
mov
repnz
shl
mov
jae
xor
es
gs
idiv
add
out
call
test
fisubr
pop
push
jo
add
xchg
fcmovu
rol
out
jbe
dec
out
js
fs
lahf
ins
call
xor
mov
ds
xor
xor
in
add
mov
add
into
into
jne
mul
dec
mov
das
(bad)
(bad)
sbb
sbb
cmp
movs
into
pop
fadd
add
(bad)
je
nop
push
loopne
pop
pop
psrlq
es
pop
mov
adc
inc
out
and
sub
nop
out
xchg
jbe
mov
stos
xor
loopne
adc
int
es
fdiv
xchg
xchg
push
fisub
pop
hlt
test
(bad)
xor
dec
int
sbb
push
out
mov
pop
or
jbe
sbb
int
add
stc
mov
and
sbb
outs
dec
or
(bad)
mov
add
hlt
jmp
add
mul
das
ins
lods
xchg
add
fwait
pop
jmp
add
das
ret
jge
push
add
retf
mov
pop
es
loope
lods
in
in
out
mov
add
daa
xlat
es
es
jmp
rcr
dec
dec
aas
add
add
ret
loop
out
movs
int3
jge
outs
add
out
sub
es
mov
add
aam
jle
mov
pusha
cs
add
pop
sub
xchg
(bad)
fdiv
es
hlt
mov
es
fnstsw
add
and
repnz
repnz
es
mov
aam
pop
fisub
jecxz
mov
in
xor
add
retf
mov
es
push
ffree
inc
inc
xchg
popf
add
shl
ss
xchg
cmp
dec
hlt
pushf
sbb
mov
xchg
stc
ds
cmc
cmc
or
stos
out
jae
add
push
or
icebp
test
xor
lods
lods
or
and
cli
out
inc
fmul
(bad)
sti
cli
pop
add
adc
xor
int
movs
(bad)
out
add
pop
es
arpl
into
js
add
test
jo
add
(bad)
xchg
ss
iret
in
imul
add
loope
fsub
lea
mov
push
push
fild
xchg
inc
pop
xorps
es
cwde
dec
mov
mov
jns
sub
sbb
jnp
add
es
cmc
movs
push
pop
xchg
xchg
dec
jo
out
push
and
nop
(bad)
out
fld
mov
sbb
or
cli
add
inc
dec
pusha
pushf
data16
jmp
sbb
jno
das
mov
push
repnz
add
push
and
mov
sub
xchg
push
repz
int
add
out
cdq
js
es
add
adc
aas
sub
fistp
sub
xchg
pusha
out
imul
cmps
out
or
pop
es
add
bound
mov
je
xchg
mov
icebp
ss
movs
jp
lods
out
xchg
push
es
add
xchg
es
pop
add
push
push
jae
sti
out
das
shl
mov
out
paddq
fwait
fwait
push
xor
or
lock
adc
addr16
out
popa
data16
pop
ds
mov
jbe
cmp
out
add
mov
and
retf
imul
xchg
dec
dec
sub
xchg
out
sbb
add
movs
cwde
es
repnz
(bad)
aad
pop
pop
add
xor
shl
add
push
push
mov
popa
out
jmp
rol
xchg
xlat
out
or
(bad)
arpl
adc
out
or
es
push
dec
scas
cmps
cmps
ret
es
add
(bad)
xchg
repnz
or
xor
aad
or
pop
loop
cmps
or
sbb
pop
es
retf
retf
pop
mov
push
push
mov
add
cmps
adc
add
lods
es
lock
test
ror
in
mov
stc
sbb
loop
test
add
pop
ins
dec
out
pushf
pop
push
es
sub
cmp
cmc
mov
in
es
and
and
iret
adc
or
pusha
stc
es
mov
loop
es
clc
adc
xchg
xchg
mov
mov
jmp
clc
popf
ret
(bad)
movs
movs
mov
pop
cmp
shl
add
imul
repz
inc
add
dec
and
bound
cmp
and
pop
lods
test
iret
mov
fdiv
test
xchg
out
arpl
and
sub
add
aaa
test
mov
and
movs
pop
add
retf
es
xor
in
mov
cld
sar
add
push
jbe
xchg
xchg
loope
mov
add
repnz
inc
leave
out
jae
pop
add
cmps
lock
ret
ins
sub
out
fld
or
shl
dec
(bad)
leave
out
push
inc
or
mov
pusha
add
push
jmp
add
lods
or
(bad)
push
jmp
adc
cmp
icebp
sbb
out
push
push
sbb
fsub
jmp
add
shl
xchg
out
sbb
imul
sbb
es
jge
jmp
xchg
es
aam
dec
imul
cmc
ins
jo
stos
aaa
mov
scas
push
out
adc
mov
add
or
add
jbe
cmp
sbb
dec
hlt
(bad)
inc
es
daa
mov
shl
outs
out
pushf
jo
mov
mov
test
add
mov
es
cs
jge
dec
dec
or
cmp
aam
mov
cwde
es
sbb
xor
add
es
mov
aas
adc
inc
sbb
push
push
and
in
sub
mov
aam
je
call
dec
popa
popa
xor
pop
mov
out
jle
ror
adc
fcom
or
add
and
out
repz
jbe
int3
add
out
mov
dec
jmp
sbb
repz
imul
pop
pop
and
(bad)
out
jnp
add
fsub
es
cmps
push
lock
add
adc
(bad)
es
jmp
(bad)
es
pop
fistp
add
mov
sbb
dec
add
(bad)
les
repz
pop
out
push
sahf
out
stos
addr16
les
outs
mov
ret
add
clc
out
ss
xlat
xlat
and
push
push
pop
test
rol
scas
xor
jb
and
pop
jp
in
in
jmp
test
xor
out
push
fmul
adc
(bad)
nop
nop
jmp
scas
mov
out
cmp
sub
jecxz
pop
movs
add
lock
and
jle
out
sbb
imul
icebp
icebp
add
loopne
dec
(bad)
add
mov
(bad)
sub
fs
aam
adc
inc
xor
dec
scas
scas
fcomp
mov
jp
(bad)
es
das
dec
push
pop
pop
jbe
add
out
rol
pushf
add
sub
cmp
add
lock
mov
fwait
fwait
jge
add
fnstenv
popa
mov
rol
test
push
push
jmp
xchg
out
das
xchg
loopne
mov
mov
xlat
xlat
jne
jl
xchg
add
cwde
jb
sbb
and
mov
mov
jno
add
push
mov
push
pop
add
inc
out
bnd
jb
add
sbb
fld
es
dec
sub
mov
and
cwde
sub
sahf
scas
add
push
int3
ret
mov
add
cmovg
test
in
rol
pop
jne
push
xor
lock
xchg
stc
es
add
adc
imul
sub
add
mov
add
(bad)
sar
test
adc
mov
push
inc
inc
es
add
or
pop
mov
mov
dec
es
add
cmp
ins
mov
shl
mov
pusha
mov
(bad)
call
xor
add
jbe
xchg
out
push
sub
es
mov
std
std
push
clc
nop
inc
inc
pop
scas
out
mov
in
in
not
ret
retf
add
hlt
(bad)
mov
mov
add
gs
sub
fstp
loope
out
popf
xor
les
cli
out
(bad)
cmp
cmp
xor
jo
fadd
jl
lock
dec
retf
push
cli
jge
cmp
xchg
xor
les
add
rcl
add
aad
add
idiv
cmp
hlt
icebp
cmp
dec
mov
adc
es
fdiv
aad
push
shl
int
push
jnp
shl
cmc
dec
mov
dec
dec
iret
pusha
add
stos
sbb
es
jne
int3
mov
inc
or
es
mov
inc
inc
or
xchg
es
loop
out
jmp
sub
int3
ss
pop
out
cmp
fidivr
jmp
add
mov
cmps
mov
les
mov
es
add
jb
stc
(bad)
sbb
arpl
out
lahf
sahf
mov
or
xor
movs
iret
pop
mov
retf
out
pushf
loope
es
or
std
movs
movs
add
fild
sub
lahf
cdq
sbb
into
(bad)
sahf
loopne
adc
xor
out
test
xlat
mov
and
add
gs
ins
es
addr16
mov
out
add
xor
inc
sar
add
sub
jp
add
push
xor
push
ss
pop
imul
nop
pop
push
hlt
hlt
mov
mov
dec
adc
in
mov
sub
pop
movs
add
popa
add
es
add
jns
add
xlat
jg
push
addr16
aam
nop
out
jb
ins
ja
dec
das
sub
add
rol
shl
sahf
add
test
in
in
pop
sub
out
xchg
in
es
cmps
cmp
sub
xchg
mov
aaa
adc
test
push
fldenv
or
push
mov
mov
add
call
mov
jmp
cwde
es
xchg
(bad)
inc
jno
es
shl
cmp
sub
jmp
das
es
outs
outs
loop
pop
mov
loop
add
es
dec
stos
aam
mov
pop
jo
out
sbb
sub
cmp
out
add
fnstenv
inc
icebp
dec
out
jo
scas
or
sub
jmp
cmps
xchg
mov
add
js
movs
add
pop
dec
sub
ins
mov
cmp
stos
fsub
sbb
sbb
pop
pop
xchg
loopne
add
popf
adc
enter
and
mul
in
cmps
add
pop
sbb
mov
call
add
retf
out
or
ins
add
popa
add
shr
mov
sub
ds
js
push
test
and
test
push
dec
ja
mov
xchg
call
pop
(bad)
jecxz
or
out
add
push
add
out
fsubp
push
es
cmp
mov
aas
out
lahf
add
cli
push
popf
jle
(bad)
daa
jne
mov
mov
pop
out
fbld
add
mov
mov
add
pushf
mov
ja
add
and
mov
test
out
mul
add
mov
(bad)
xchg
cmp
push
add
jae
js
sar
leave
leave
enter
test
push
cmp
add
out
leave
pusha
xor
aas
out
hlt
add
adc
and
cmc
xchg
mov
inc
cmp
adc
cmp
pop
pop
xor
out
shl
test
cmps
jns
out
add
inc
ror
push
sti
pop
add
es
movs
js
aam
mov
inc
stos
add
ins
add
add
jmp
loopne
add
mov
or
outs
add
out
inc
leave
add
int
jo
out
into
mov
rol
add
out
mov
sbb
cmp
es
adc
push
add
std
std
or
add
fistp
pop
dec
es
mov
jp
es
add
sub
and
mov
xor
add
out
lds
bound
mov
mov
data16
push
push
xchg
add
es
fxch
addr16
in
sbb
data16
shl
in
push
xchg
jg
(bad)
cld
pop
pop
fld
loopne
sar
rcl
cli
test
test
call
pushf
test
je
mov
dec
push
mov
add
inc
shl
fcomp
add
retf
aas
movs
add
pop
and
rol
nop
xchg
out
push
sar
es
hlt
add
jl
dec
rol
and
out
div
dec
loopne
out
jns
gs
ror
push
mov
push
out
pusha
repz
inc
inc
jmp
enter
cmps
out
in
or
pop
ror
dec
loop
and
xor
ror
add
ins
inc
mov
int3
add
push
es
nop
add
retf
shr
cmp
fadd
out
mov
xor
scas
fcomp
imul
repnz
add
dec
inc
or
out
pop
pop
add
or
add
rcl
jmp
jae
jmp
les
out
je
xor
jecxz
in
out
pusha
hlt
aaa
dec
dec
pop
pop
add
jnp
xchg
shl
jb
adc
ss
adc
add
lahf
and
out
ret
mov
cmp
xchg
es
mov
rcr
add
cdq
xor
dec
cs
in
add
xchg
shl
out
cmp
outs
es
add
pop
cmp
jns
add
loope
arpl
ss
sub
inc
xchg
push
out
jno
inc
xor
mov
dec
add
cld
mov
js
inc
cmp
or
out
add
ins
ins
dec
mov
hlt
jnp
sub
add
sbb
(bad)
add
add
pop
movs
imul
addr16
xor
fnstenv
push
mov
add
clc
adc
movs
jns
push
push
mov
cmps
push
and
ficom
add
mov
cmc
ins
jnp
movs
sub
sbb
pop
out
out
add
in
mov
(bad)
mov
add
movs
out
pop
mov
pop
pop
add
and
addr16
call
add
adc
and
jle
loopne
jnp
cld
cld
enter
(bad)
or
add
pop
sub
pop
ret
jo
es
or
jo
cld
movs
add
retf
fbld
stos
cwde
sbb
cmp
and
mov
add
aad
mov
inc
add
leave
(bad)
jnp
clc
sub
cs
call
iret
(bad)
les
dec
ins
mov
out
cli
push
xor
loop
pop
out
mov
add
or
pusha
js
out
es
xor
dec
mov
dec
dec
and
add
out
data16
test
out
leave
push
and
add
lahf
mov
push
mov
push
pushf
pushf
adc
jecxz
ss
cmp
inc
outs
add
es
jo
loopne
je
clc
cmp
syscall
fs
sub
jl
cs
xchg
jns
inc
pop
es
test
add
mov
pop
iret
pop
push
out
(bad)
inc
push
out
shr
cmp
scas
(bad)
jno
pop
dec
addr16
push
push
(bad)
pusha
cmps
bound
xchg
add
mov
xchg
ins
jmp
sub
fadd
add
mov
ins
pop
add
fst
sti
es
push
mov
mov
pop
sub
stos
add
ja
js
mov
sar
add
mov
and
xchg
add
push
sbb
sbb
mov
push
or
call
push
or
push
out
mov
popa
mov
jae
in
inc
add
and
pusha
push
popf
add
or
out
test
cmp
push
push
and
mov
aad
add
inc
out
out
adc
add
lea
inc
aam
out
or
jmp
es
mov
mov
cmp
aam
pop
out
jo
aad
add
xchg
adc
outs
lea
mov
lds
movs
shl
fucomp
add
adc
lock
in
imul
add
push
(bad)
pop
dec
cmp
out
int
ja
imul
xor
es
sbb
xor
mov
lds
jecxz
call
ret
out
mov
push
mov
out
sbb
ret
ret
shr
jle
mov
out
dec
jl
es
rcr
add
xlat
(bad)
ror
retf
add
ret
stos
stos
lods
mov
add
iret
inc
inc
dec
sub
aam
retf
push
(bad)
movq
add
fs
add
mov
sbb
mov
mov
iret
repz
add
sub
imul
add
out
jbe
adc
xor
pop
dec
out
adc
es
stc
loop
(bad)
les
sub
cwde
out
mov
sub
add
out
jbe
das
in
in
cli
rol
out
mov
xchg
add
add
repnz
xor
sbb
adc
push
cmp
bnd
mov
loopne
rcl
and
cld
adc
mov
movs
and
mov
(bad)
jns
jae
fisubr
add
jb
aam
je
es
js
add
sbb
add
sbb
es
or
std
es
ins
lods
jne
adc
add
mov
cmp
vpackuswb
add
popf
retf
mov
cmps
add
stos
adc
bound
or
inc
add
pop
ret
es
xor
es
enter
pop
lea
cmp
lock
pop
es
(bad)
mov
sbb
es
(bad)
mov
push
xor
ret
xchg
retf
jge
and
icebp
icebp
int3
or
(bad)
xchg
es
xor
fidivr
out
jne
sub
out
pop
add
(bad)
(bad)
cmp
push
sbb
mov
fdivr
mov
add
rdtsc
sub
fstp
inc
mov
lods
outs
inc
imul
ret
inc
lock
fild
(bad)
call
je
outs
es
and
pop
sti
sti
xchg
sbb
mov
iret
cli
jns
es
lahf
adc
and
into
clc
clc
pop
add
add
movs
mov
out
xor
pop
mov
jmp
jbe
out
push
pop
or
test
scas
(bad)
sub
cwde
add
iret
es
add
es
sti
dec
mov
es
loope
lods
xchg
xchg
and
outs
pop
pop
mov
push
mov
sub
out
add
js
inc
inc
xor
cmps
ss
lea
mov
xchg
and
in
pop
or
adc
add
popa
out
push
and
je
popf
mov
shr
out
aaa
ret
in
es
jae
femms
push
push
fisub
cwde
out
xchg
add
aas
out
(bad)
fwait
shr
imul
out
ss
stc
and
pop
repnz
cld
dec
push
add
dec
jecxz
out
inc
mov
cmp
push
shr
push
add
in
jmp
retf
xchg
aam
cmp
(bad)
out
add
test
sbb
xchg
outs
mov
push
push
inc
inc
clc
dec
mov
das
aas
pop
add
enter
lock
add
ror
es
jg
add
mov
jnp
dec
dec
add
sub
and
out
inc
in
add
cld
inc
add
repz
jecxz
es
add
std
aaa
jle
sub
xchg
out
dec
dec
inc
es
and
add
dec
out
sbb
jb
dec
cmp
stos
add
cmps
aam
imul
add
addr16
jo
enter
push
int3
add
out
nop
nop
pop
add
out
movs
icebp
mov
add
loop
sub
inc
fdivr
lods
adc
pop
sbb
inc
dec
test
inc
sub
fs
cmp
jbe
push
push
xchg
data16
hlt
jmp
and
es
repnz
add
or
out
ja
into
inc
out
cmp
cmp
add
cwde
pop
pop
xchg
dec
xchg
cmp
fld1
add
(bad)
out
cmps
sub
cs
stc
mov
add
sub
cmp
retf
fisttp
out
sub
add
out
add
cli
cli
add
or
lods
pop
add
xchg
and
shr
mov
mov
enter
movs
movs
xchg
or
idiv
scas
add
in
xchg
mov
lock
sub
lahf
jp
pop
xchg
mov
jge
inc
mov
add
fsub
in
jmp
rcl
daa
add
xchg
xor
jl
inc
inc
and
add
imul
pop
dec
push
stc
stc
push
sbb
out
pop
add
sub
push
loopne
xchg
cmps
mov
add
out
psubw
(bad)
pavgb
xchg
je
dec
add
es
(bad)
test
es
js
loope
loopne
pusha
push
push
push
add
xor
out
jbe
rcl
aas
(bad)
out
fiadd
mul
dec
or
cmc
cmc
pop
das
add
fldz
cmp
pop
jo
cmp
adc
adc
cmp
sbb
adc
add
xor
and
sub
push
shl
add
je
fistp
jnp
out
(bad)
sqrtps
jns
lahf
in
xchg
add
clc
jge
add
out
jbe
cmp
pusha
ret
adc
lock
and
mov
imul
jne
idiv
add
je
adc
rol
(bad)
mov
lods
es
arpl
add
mov
or
jno
or
ds
and
ret
mov
mov
adc
out
fisubr
sub
std
pop
cld
add
pushf
pushf
adc
out
xchg
cmp
ss
dec
stos
out
mov
stc
add
jl
fs
add
out
fisubr
mov
jnp
outs
add
sub
popf
in
out
add
lods
iret
jmp
lock
add
es
call
add
es
mov
sub
add
hlt
movs
mov
out
pop
inc
loop
jle
sbb
jmp
jne
cld
push
and
cmp
(bad)
pop
mov
sbb
mov
es
pushf
xchg
mov
cmp
dec
stos
out
rcl
dec
movs
push
add
imul
push
or
xor
add
out
pop
cld
sub
jo
add
dec
aad
mov
sub
ja
call
aas
imul
adc
(bad)
dec
dec
cmc
sub
into
into
cld
or
out
cmp
adc
push
fld
cmp
neg
lock
mov
loopne
jo
add
(bad)
add
out
add
div
test
cmps
adc
xchg
xchg
mov
mov
cmp
mov
ret
hlt
cwde
cwde
rol
out
jns
mov
fcmovne
mov
out
in
stos
or
xchg
out
jmp
(bad)
xlat
mov
test
add
aas
sbb
fsub
xor
sub
sub
jb
std
ins
push
push
add
mov
shl
mov
push
add
into
into
arpl
jmp
aas
inc
xchg
xchg
xchg
jmp
in
iret
add
es
call
and
pop
push
or
and
mov
xchg
xchg
scas
in
out
test
shl
pushf
jge
int3
add
and
es
add
lods
lods
xchg
xchg
cmp
xchg
leave
jl
cld
and
mov
cmp
gs
cmp
mov
add
push
push
pusha
frstor
cdq
lds
je
fs
dec
out
in
sbb
cmps
and
scas
scas
sub
in
es
repz
mov
fadd
push
test
pop
mov
in
push
call
out
sub
movs
das
jne
enter
mov
mov
scas
mov
lods
add
cdq
mov
or
repz
dec
es
lock
outs
add
and
shl
frstor
out
ret
xchg
sbb
out
cmp
add
sbb
add
add
out
sbb
push
adc
pop
add
and
mov
jns
outs
outs
xor
fsub
push
push
stos
mov
dec
cmp
imul
shl
xchg
add
mov
xlat
xchg
repnz
adc
les
fnstenv
je
jnp
add
shl
pop
sar
pop
sbb
aam
adc
add
push
es
loopne
adc
add
outs
pop
popf
es
add
sbb
leave
mov
lea
fbld
int3
jo
daa
add
enter
cdq
pop
es
add
(bad)
es
and
sbb
sub
dec
cmp
jmp
stos
sub
(bad)
(bad)
jp
aad
xchg
jecxz
push
out
fistp
(bad)
outs
and
sub
mov
pop
out
adc
int
mov
add
inc
js
add
call
and
add
cmp
or
sbb
or
pop
mov
out
mov
iret
add
add
mov
(bad)
xor
pop
out
das
jmp
mov
out
int
xor
add
in
es
aad
(bad)
lock
out
mov
or
ret
add
out
xlat
mov
in
add
add
jmp
ret
hlt
mov
in
cmp
out
ins
repz
icebp
xor
(bad)
enter
add
daa
(bad)
movs
movs
mov
adc
mov
out
pop
pop
mov
cmp
add
out
push
call
add
aas
aaa
push
adc
pop
or
jl
mov
out
mov
cwde
push
cmp
add
xor
xor
inc
pop
and
rcr
add
xchg
xchg
es
aad
add
jnp
pop
mov
xchg
cmp
cmp
out
or
add
and
sbb
pop
add
sub
in
and
and
call
xor
out
aaa
sbb
test
out
loope
push
es
xlat
or
sbb
add
inc
es
xchg
aam
in
jmp
xchg
es
jno
add
pop
mov
ds
add
iret
and
loopne
push
dec
(bad)
push
inc
inc
cdq
cld
pop
out
inc
jnp
(bad)
(bad)
test
out
add
lods
mov
mov
mov
jge
jle
(bad)
call
inc
jo
jg
inc
add
mov
loop
out
arpl
add
ins
out
es
pop
pop
ret
mov
sub
or
add
mov
pop
dec
dec
pop
mov
loop
add
out
push
loope
cli
cli
pop
mov
out
xchg
pop
and
xor
sub
add
xchg
dec
inc
data16
or
(bad)
(bad)
mov
xchg
js
add
dec
into
aad
in
add
cmp
mov
push
es
aas
ret
cmp
add
repnz
sub
pusha
pusha
(bad)
dec
add
cmps
mov
retf
add
int
mov
pop
sub
pop
pop
add
mov
and
nop
(bad)
out
out
std
push
pusha
sbb
cmp
add
mov
sub
je
xor
nop
arpl
cmp
xor
and
add
fdivr
clc
jo
inc
es
rol
adc
leave
leave
add
push
pushf
es
jmp
loopne
cmp
add
stos
stos
test
aas
fldcw
jo
add
push
xchg
cmp
inc
jmp
mov
dec
dec
cli
ins
add
and
dec
out
loopne
dec
es
jb
add
retf
xchg
xchg
cmps
jo
out
add
pop
pop
pop
adc
ror
clc
(bad)
js
dec
add
mov
jle
push
mov
cmp
add
call
mov
out
cmp
into
ins
ins
add
es
cdq
push
mov
es
dec
rol
add
xlat
jmp
lea
lods
mov
lock
add
addr16
push
in
out
add
mov
push
push
scas
pop
adc
out
or
jns
jp
xchg
add
cmps
scas
cmp
es
lock
push
test
or
shl
jg
loope
mov
cmp
retf
es
pop
sub
add
jmp
pop
out
pop
int3
adc
out
xor
xchg
pop
ss
aas
enter
cmps
ja
cmp
add
loope
inc
and
movs
int
add
pop
jnp
fbld
xor
pusha
std
int3
int3
jp
pop
pop
pop
jne
mov
pushf
es
jnp
xchg
movs
movs
sbb
xchg
xchg
scas
dec
add
pop
int
rcl
and
out
sbb
iret
mov
push
add
mov
stos
scas
gs
jbe
mov
out
(bad)
push
mov
add
leave
(bad)
es
hlt
sub
jg
add
(bad)
daa
pop
es
pusha
inc
inc
inc
cmp
xchg
jns
jb
scas
in
es
rol
rol
pop
mov
add
cmp
sub
sbb
mov
jmp
adc
fwait
cdq
mov
fistp
int3
(bad)
(bad)
pop
pop
mul
iret
and
cmp
cmp
sbb
or
mov
mov
add
shl
or
xor
outs
xlat
out
out
cli
in
imul
out
test
es
pop
out
aas
rcl
xchg
lock
inc
scas
out
or
pushf
adc
sub
add
stos
pop
popa
outs
(bad)
setno
enter
push
call
dec
xor
add
retf
mov
in
in
add
pop
jbe
mov
or
mov
pop
es
cwde
neg
fs
xchg
nop
nop
push
mov
xor
loopne
loop
push
or
mov
add
fbld
mov
mov
(bad)
out
mov
rcl
stc
stc
add
out
es
pop
xor
loope
sbb
shl
sahf
addr16
pop
add
push
out
retf
or
es
xchg
add
add
push
jmp
inc
out
out
inc
push
cmp
call
push
add
es
and
add
out
adc
scas
retf
fwait
out
mov
xor
ds
aas
pop
inc
es
dec
xor
lds
mov
add
ret
out
cmps
cmp
cmp
movs
add
scas
shl
xchg
pop
add
mov
sbb
lods
movs
call
add
stos
mov
rol
jg
cmp
jmp
jle
add
es
pop
dec
push
int3
int3
jbe
out
arpl
adc
call
mov
or
mov
cmc
cmp
mov
inc
add
mov
jmp
mov
mov
je
mov
add
es
popa
inc
aas
add
out
xchg
or
cmp
adc
add
leave
xchg
and
add
or
out
ins
add
mov
push
adc
inc
jno
sub
push
scas
and
retf
dec
dec
std
push
adc
add
and
js
lods
es
jnp
mov
es
inc
out
out
inc
pusha
pusha
mov
jecxz
pop
es
rdpmc
repnz
dec
es
xchg
add
sub
es
mov
(bad)
daa
daa
add
sbb
sub
mov
out
into
cmps
jnp
add
fcomi
or
test
xor
add
sti
add
daa
in
jg
es
jl
out
out
add
add
nop
out
sub
aaa
es
test
scas
xor
out
fldcw
push
push
int3
test
out
loopne
or
rcl
mov
and
es
jge
add
daa
hlt
imul
es
add
repz
add
push
sahf
scas
scas
outs
sbb
mov
add
in
out
sub
enter
mov
jg
mov
push
add
push
out
out
and
jmp
add
add
sbb
mov
lahf
add
out
push
jecxz
(bad)
femms
aas
xlat
out
sbb
test
add
es
das
pop
jae
add
push
rcl
push
mov
pushf
add
add
jbe
out
mov
sbb
mov
sub
add
jb
fmul
mov
pop
jmp
leave
lock
push
push
mov
add
adc
add
mov
es
inc
cwde
add
in
mov
jmp
xor
pop
add
hlt
ins
cmp
repnz
xchg
add
mov
out
xchg
es
(bad)
cmp
push
cwde
movs
movs
arpl
mov
(bad)
mov
xchg
push
ja
and
leave
add
or
(bad)
popf
jae
js
cmp
es
jnp
push
jge
cmps
or
add
xchg
ins
pop
fsub
gs
mov
shl
xchg
es
add
sbb
pop
ja
pop
pop
or
dec
out
xor
in
in
jp
add
push
cvtdq2ps
cld
add
adc
rcr
add
pop
pop
repnz
hlt
sti
jle
out
xor
mov
xchg
out
add
xchg
mov
test
add
mov
pop
adc
push
fsubr
sbb
dec
and
test
out
xchg
sbb
push
add
arpl
out
cmp
dec
es
adc
out
add
ret
push
xor
test
cmp
xor
out
popf
imul
push
(bad)
(bad)
aad
es
fdivrp
je
dec
test
inc
call
add
dec
dec
fucomp
(bad)
es
repnz
stos
stos
jle
fisttp
out
adc
(bad)
es
fild
add
clc
clc
das
int
out
call
es
push
jmp
inc
out
les
mov
add
shl
rcr
shl
jo
or
cld
push
bound
es
jne
push
push
or
xor
cmp
sbb
xchg
movs
movs
movs
sbb
add
jbe
es
lea
(bad)
add
test
xor
jae
and
fistp
iret
sbb
paddusw
jp
and
inc
out
(bad)
mov
pop
aam
and
cmp
inc
(bad)
(bad)
inc
xor
mov
rol
xchg
fucom
loopne
ret
xor
iret
sti
add
push
das
das
mov
add
call
mov
out
push
xor
lods
popf
and
add
test
loope
outs
out
pop
add
addr16
add
sbb
add
or
fdiv
scas
scas
fwait
adc
es
(bad)
clc
out
add
es
xor
sbb
cmp
mov
add
fistp
mov
dec
or
dec
xchg
adc
or
add
mov
cmc
push
and
mov
call
mov
shr
es
jg
sub
bswap
xchg
es
or
(bad)
dec
rcl
add
repnz
cmc
add
out
mov
push
push
sar
call
rol
pop
out
movs
or
(bad)
push
push
mov
pusha
push
push
cmps
or
xchg
add
(bad)
(bad)
jle
mov
fwait
xchg
aad
lods
push
xlat
xlat
cld
scas
add
and
sbb
xor
shr
push
mov
add
fs
leave
aas
jb
sbb
sub
push
imul
ds
cld
out
add
inc
jge
add
add
or
adc
(bad)
stc
out
es
rcr
fs
mov
add
test
sbb
(bad)
fcomp
rol
in
scas
movs
push
out
xchg
add
leave
inc
xchg
scas
out
xor
xchg
out
jo
cmp
sub
out
cdq
int3
sub
je
xor
jo
add
es
mov
and
mov
dec
inc
mov
leave
mov
dec
mov
pop
movntq
and
shl
les
add
jg
sub
mov
test
cmp
cmp
jmp
adc
shl
mov
mov
call
popa
retf
or
into
pop
lods
cmp
add
scas
scas
push
rcl
es
xchg
add
cs
pop
es
adc
add
jb
cmovp
add
fimul
or
int
(bad)
pop
adc
add
mov
out
test
sub
add
mov
(bad)
call
call
mov
out
clc
jg
fist
fistp
inc
push
es
ror
add
adc
dec
add
mov
adc
and
shr
add
lea
out
test
sbb
mov
aad
out
inc
jo
push
out
dec
cmp
inc
ins
ins
mov
dec
ret
push
movs
xor
dec
mov
out
add
(bad)
xchg
add
mov
pop
in
in
aad
ss
es
outs
out
out
pop
and
or
stos
stos
test
pop
push
jbe
in
fst
out
sub
lss
dec
cvtps2pi
js
loop
add
add
xchg
enter
dec
ss
aas
cs
nop
cmp
add
ret
aam
mov
out
pop
call
sbb
pop
es
push
mov
fisub
daa
push
out
add
dec
and
adc
sbb
add
xchg
sbb
jl
mov
mov
jno
pop
inc
inc
add
and
add
out
fst
cli
add
out
cmp
mov
ja
push
pop
int3
fld
add
dec
or
push
or
add
out
lods
in
inc
inc
jl
xor
int3
add
mov
and
and
mov
pop
add
jmp
bound
es
popa
loope
xor
add
mov
xor
out
xchg
push
push
out
xor
add
out
and
push
and
add
outs
push
mov
sbb
cmp
call
cmp
in
iret
out
jg
ins
mov
lods
add
loopne
xor
(bad)
gs
cmp
cli
cli
popf
lock
out
add
(bad)
sbb
mov
push
aas
ret
xor
out
popf
shl
sub
fs
mov
jecxz
mov
je
es
test
add
out
out
mov
vminsd
mulps
mov
dec
xchg
lock
out
ja
jecxz
loopne
fst
out
add
shl
sub
call
pop
add
jo
xchg
jb
sub
pop
sbb
out
adc
es
push
pushf
std
dec
dec
add
push
es
push
outs
and
xor
test
sbb
push
mov
add
out
cs
sub
pop
dec
pop
out
push
data16
or
cmp
sti
fcomp
movs
jbe
mov
push
scas
inc
inc
ds
dec
mov
cmp
es
mov
rol
jbe
inc
or
(bad)
xchg
xchg
scas
mov
popa
in
pop
jne
push
dec
dec
mov
(bad)
les
jg
je
paddd
rcl
sub
xor
xchg
out
lahf
lock
push
dec
adc
add
jb
stos
stos
(bad)
adc
add
ins
out
pop
je
jo
or
out
pop
rol
lods
xchg
pusha
in
jmp
mov
out
imul
inc
inc
fwait
mov
jle
call
rol
push
mov
cmp
jno
out
(bad)
push
les
out
add
sar
inc
jecxz
rol
cwde
outs
outs
stos
add
out
push
bnd
mov
mov
dec
fcmovnu
add
out
dec
push
jne
pop
pop
inc
add
cmp
inc
and
sbb
retf
(bad)
repnz
add
in
es
mov
pusha
pusha
adc
xor
cld
hlt
hlt
xchg
iret
cmp
aaa
add
(bad)
push
out
fcomp
add
fstp
dec
es
add
inc
dec
dec
xchg
pop
test
bound
(bad)
dec
inc
es
hlt
hlt
xor
add
or
sbb
add
in
out
add
(bad)
(bad)
pop
jmp
fnstsw
es
inc
push
shl
es
push
aam
out
fs
mov
sbb
call
add
add
pusha
pusha
inc
out
pop
mov
sub
out
aaa
mov
push
push
iret
mov
fstp
cmp
cmp
adc
push
push
cdq
sub
out
out
add
dec
stc
js
add
jnp
adc
dec
ins
hlt
mov
pop
pop
ror
xchg
dec
xchg
pop
mov
pop
outs
daa
jnp
mov
pusha
aas
in
adc
add
out
inc
mov
es
in
add
cmp
add
xchg
inc
sub
iret
in
hlt
add
push
push
and
mov
pop
sbb
sub
repz
xor
test
mov
movs
add
xor
out
add
mov
out
xchg
sti
sub
adc
shl
es
cs
sbb
sbb
add
aaa
aaa
inc
xor
add
cmps
scas
pop
out
cmp
leave
ins
ins
or
cdq
out
ret
es
xor
pusha
inc
and
popf
outs
cmp
mov
add
mov
aaa
lods
lods
xor
mov
pop
pop
jmp
(bad)
add
pushf
out
jnp
adc
int3
test
pop
dec
dec
test
dec
es
dec
add
addr16
jnp
leave
leave
outs
add
sbb
gs
ja
adc
lods
shl
in
outs
outs
loopne
xchg
out
mov
out
inc
add
pop
stos
das
xchg
add
jecxz
out
clc
(bad)
xor
loope
add
out
pop
dec
lock
ret
out
(bad)
dec
cwde
xchg
xchg
add
out
rol
add
cld
push
push
cli
ds
jmp
mov
fisttp
out
rol
es
push
xchg
xchg
sub
aas
add
or
push
add
out
xchg
dec
sub
cmp
lea
fs
mov
add
add
lahf
and
mov
or
add
sub
popf
pop
pop
add
mov
mov
mov
add
int
add
or
loope
and
add
(bad)
jo
sldt
jmp
jno
sub
pop
adc
pop
mov
out
cld
sbb
add
mov
and
es
mov
lods
push
mov
mov
mov
(bad)
repnz
xor
lock
out
cmp
es
xchg
aaa
aaa
(bad)
jno
push
loop
add
cmps
pop
std
and
add
out
jl
jno
push
lods
mov
pop
dec
mov
stos
mov
jp
adc
mov
add
pushf
in
and
hlt
call
add
pop
ret
dec
mov
mov
add
out
lods
mov
es
popf
xchg
mov
es
pop
movs
add
lock
(bad)
nop
out
or
cmp
out
in
add
jp
mov
loope
iret
mov
add
cdq
out
imul
aas
and
add
or
sbb
pop
pop
scas
inc
jg
mov
jns
out
test
pop
cmc
cmc
push
fsubr
out
into
hlt
les
add
mov
icebp
lods
pusha
leave
out
add
xchg
mov
addr16
cwde
add
sbb
loopne
ins
out
add
out
out
(bad)
add
jmp
aad
inc
pop
shl
dec
dec
fldenv
and
add
rcr
add
pop
mov
out
aad
test
cs
cmp
jb
adc
in
mov
add
pushf
xor
cdq
cli
pop
add
neg
es
icebp
lods
adc
mov
mov
fsub
aam
add
(bad)
pop
push
out
stc
mov
es
sub
xor
movs
movs
(bad)
imul
fnsave
pushf
aas
out
or
push
add
or
out
movs
jecxz
es
push
lea
mov
out
inc
add
jle
mov
pop
add
pushf
xchg
jno
add
or
and
dec
sub
add
adc
cmp
or
(bad)
fcmovnu
ins
mov
xor
(bad)
pcmpeqw
adc
cmp
pop
dec
xor
jp
add
out
ja
fsub
jno
das
add
or
addr16
mov
xor
add
mov
mov
push
out
or
pop
inc
inc
jmp
add
ins
les
mov
es
imul
jno
pop
sub
cmp
(bad)
dec
xchg
sbb
shr
mov
mov
out
jnp
popa
es
fcomp
dec
pop
es
outs
ds
jbe
dec
adc
or
call
out
bndstx
jo
int3
(bad)
movzx
cmp
jb
sbb
mov
dec
dec
stos
inc
pop
es
xchg
ret
scas
in
in
xor
mov
push
or
add
jp
inc
shl
adc
add
imul
cmp
sub
out
pop
jbe
and
mov
test
es
pop
popf
add
dec
fidiv
mov
dec
mov
add
push
lock
sbb
fdivr
dec
mov
sub
imul
shl
jmp
cmps
add
push
and
outs
ret
ja
jl
aam
nop
and
add
xor
xor
or
pop
add
(bad)
setge
add
adc
jge
xchg
out
gs
add
sbb
add
(bad)
int3
es
adc
cmps
xchg
add
into
out
push
adc
es
leave
inc
mov
(bad)
jb
out
repnz
push
push
in
in
add
bound
fsub
hlt
ja
sar
or
stos
pop
out
out
pop
add
sbb
out
xchg
aam
jp
jae
es
jecxz
inc
shl
push
add
sub
(bad)
icebp
cmp
add
cwde
mov
test
adc
add
mov
(bad)
(bad)
add
push
push
(bad)
popa
aas
out
dec
out
sub
add
movs
loop
mov
mov
mov
jno
shr
push
es
cli
and
add
sbb
xchg
fs
gs
fcomp
mov
lods
mov
pop
add
push
jb
push
sub
jno
mov
adc
add
add
or
lahf
out
push
push
stc
dec
shl
add
mov
fcmovnu
aaa
popa
mov
mov
test
cmc
xchg
sbb
pusha
pusha
jecxz
mov
call
ins
inc
out
mov
xor
sbb
sar
and
popa
popa
mov
inc
retf
iret
aad
out
inc
adc
out
int
push
pop
xlat
xlat
or
mov
inc
es
add
dec
call
add
or
adc
xor
mov
fwait
jae
jecxz
jbe
pop
push
push
and
push
sub
ror
aas
adc
dec
pop
xchg
es
xchg
mov
pop
add
sbb
leave
add
push
xlat
inc
popf
js
sub
(bad)
int3
mov
mov
jl
add
dec
rcr
dec
add
mov
scas
aaa
aaa
cmp
sbb
mov
xor
add
xor
jae
jmp
xor
add
xor
jmp
jecxz
out
push
add
es
pop
xchg
mov
push
cmps
cmps
stos
lahf
sbb
and
pushf
js
lods
stos
adc
sub
mov
cmp
sti
add
sub
push
push
loope
jp
sbb
nop
nop
sbb
add
ficomp
push
mov
loope
add
dec
add
add
lahf
in
rol
mov
out
adc
xor
(bad)
jp
lea
icebp
and
rol
jne
xor
add
outs
xchg
mov
cdq
add
test
pop
cmps
in
in
gs
add
out
or
xchg
mov
loopne
sbb
and
ins
(bad)
pop
push
cmp
lock
cmp
sbb
sub
out
sti
cmp
or
push
sbb
out
xchg
mov
mul
stc
test
stc
out
mov
int
mov
(bad)
jns
cmp
jmp
repz
repnz
fs
push
push
add
jp
inc
jg
sbb
mov
test
xchg
lods
stos
and
dec
lea
ror
cmc
sub
xor
out
jge
cld
add
(bad)
xchg
mov
sbb
(bad)
dec
mov
shr
mov
stos
stos
call
add
cmp
mov
inc
dec
add
pop
mov
ret
es
les
inc
inc
fisub
es
sahf
outs
add
jnp
push
xchg
xchg
lock
loope
jne
mov
shl
jmp
push
jnp
push
add
les
jmp
std
add
sub
icebp
push
add
inc
out
(bad)
push
add
retf
not
jb
fld
es
add
adc
push
mov
add
scas
daa
daa
ret
out
fadd
js
xor
sar
jl
sub
int
je
retf
es
add
or
pop
sbb
daa
daa
lahf
loope
js
fld
rsqrtps
or
xchg
and
in
or
mov
cmc
shl
ret
addr16
jbe
add
cld
mov
mov
add
push
cmp
es
xchg
sti
out
add
int
push
into
xchg
aaa
popf
popf
add
cmp
(bad)
in
gs
inc
inc
outs
pusha
iret
out
push
add
xchg
inc
xor
out
mov
popa
dec
dec
add
es
push
jg
xchg
pop
ja
mov
int
mov
jae
sub
imul
retf
jecxz
mov
push
out
mov
shl
(bad)
test
add
push
jbe
add
repz
xor
inc
es
pop
dec
inc
inc
inc
data16
xor
mov
(bad)
bswap
and
out
add
loope
or
outs
jecxz
(bad)
out
je
sldt
lahf
popf
ins
out
mov
scas
dec
dec
add
jg
rol
cmp
mov
sub
sbb
lods
add
adc
mov
fs
add
xor
div
pop
add
and
add
mov
aaa
les
in
es
rcl
mov
inc
int3
sahf
es
ret
(bad)
in
ds
imul
clc
shl
jno
xor
ss
(bad)
repz
dec
je
xor
jnp
out
imul
out
es
ins
lods
or
shr
sbb
out
(bad)
pop
pop
add
sahf
jmp
out
mov
sub
sbb
sub
ins
and
add
popa
sbb
es
push
dec
xchg
xchg
jge
pop
sbb
test
inc
add
int3
int3
mov
add
add
mov
aas
cmc
cmp
cmp
cwde
rcl
add
xor
jb
mov
rcl
adc
jmp
pop
enter
xadd
mov
jmp
jg
es
xchg
push
push
pop
cmp
std
push
inc
pop
ins
ins
add
out
sbb
out
data16
xchg
xchg
push
movs
inc
add
dec
push
adc
lock
mov
es
cmp
mov
es
cli
dec
add
in
mov
(bad)
pop
lock
add
add
dec
in
ficomp
push
push
pop
xchg
daa
add
mov
imul
stos
addr16
aam
and
ins
push
push
fs
inc
lods
adc
cmc
cmc
inc
outs
or
xchg
jmp
jnp
add
in
sbb
jb
sub
dec
dec
call
in
dec
out
push
jo
add
ds
out
cmp
cs
sbb
je
mov
add
mov
inc
out
pop
out
push
fsubp
imul
pop
add
add
dec
push
loopne
mov
dec
js
into
add
jnp
call
cdq
xchg
mov
push
push
add
iret
out
scas
xchg
cmp
lds
(bad)
pop
mov
xor
mov
in
add
loopne
out
inc
jno
int3
inc
add
retf
out
and
pop
(bad)
push
adc
es
jno
push
push
pop
jmp
mov
bound
add
in
popa
sub
dec
add
out
pop
out
es
dec
cs
es
enter
(bad)
add
xchg
push
inc
aaa
in
es
in
call
add
add
add
shl
mov
pop
pop
(bad)
and
repnz
out
add
cmp
(bad)
rcl
loope
sbb
into
into
jp
out
add
pusha
(bad)
cld
cld
add
and
iret
in
mov
push
sub
sub
add
sub
jmp
fild
data16
je
mov
aaa
mov
xchg
(bad)
fmul
out
push
push
scas
es
or
lahf
lahf
jnp
retf
add
fst
es
mov
add
es
cmps
add
das
inc
sbb
(bad)
out
sbb
push
or
out
or
add
xchg
adc
ss
es
loope
pop
pop
dec
sbb
mov
mov
add
repz
scas
push
and
imul
pushf
adc
mov
ror
inc
inc
add
xor
aaa
pop
pop
pop
jae
cdq
out
dec
ret
js
into
enter
xor
aas
lahf
mov
adc
out
out
add
aad
out
adc
fld
add
out
jge
add
lahf
cmps
hlt
push
inc
inc
clc
mov
add
add
add
(bad)
out
or
(bad)
out
out
jne
mov
push
dec
popf
rcr
cmp
jp
xor
jno
add
sahf
es
fadd
sti
ins
ins
sub
jo
imul
out
fld
pushf
xchg
cwde
add
fs
sub
pop
les
adc
rcr
out
pop
int
add
pop
or
out
dec
sub
push
out
lods
mov
add
out
aas
mov
sbb
add
ds
sbb
pop
in
repz
rcl
cld
cld
xchg
xor
out
jne
mov
xchg
add
push
imul
fcomp
int
je
push
outs
adc
in
cmp
out
or
push
dec
and
loopne
and
ret
pop
add
pop
push
pop
in
mov
cld
inc
inc
shl
out
pop
sbb
inc
repz
cmp
imul
in
fcomp
es
mov
stos
daa
lods
enter
xchg
out
add
sahf
es
mov
add
lea
(bad)
inc
inc
call
sbb
out
les
movs
inc
inc
push
adc
in
add
es
push
add
add
mov
bound
jecxz
add
call
inc
jno
aaa
add
pop
data16
push
jno
out
push
push
cmc
es
leave
mov
push
fisubr
es
inc
xchg
nop
fwait
fwait
jns
add
dec
push
ret
rcl
jmp
in
cmp
nop
test
or
ja
add
push
imul
sbb
and
lods
lods
add
ficom
out
push
stos
add
into
dec
and
loope
add
es
addr16
cwde
cwde
int
iret
loop
aaa
inc
icebp
out
mov
shl
lds
sbb
gs
out
adc
mov
sub
mov
fimul
es
mov
in
(bad)
es
in
ja
add
fld
mov
jg
inc
push
hlt
les
sub
push
push
and
push
out
sbb
xchg
jno
test
inc
repnz
es
std
in
add
mov
add
push
mov
inc
in
aas
push
dec
pop
pop
call
fbld
cld
dec
add
push
push
enter
pop
jg
lods
sub
mov
je
rcr
push
pop
cdq
or
dec
add
push
cmps
jo
rol
loopne
sub
add
out
pop
out
in
add
mov
xor
add
jmp
push
cmp
bound
out
es
pop
aad
or
push
(bad)
xchg
xchg
push
test
out
fadd
lods
test
out
in
in
mov
out
stos
(bad)
loop
(bad)
cli
fs
push
xchg
dec
es
icebp
or
bound
(bad)
add
or
push
das
fild
add
out
lods
pop
mov
cwde
add
pop
pop
shl
or
dec
stos
add
sbb
mov
xchg
dec
add
and
xor
bound
out
pop
ss
in
add
imul
sub
jmp
call
add
pop
mov
cli
stc
stc
push
fs
es
jge
lock
add
sub
mov
hlt
out
push
test
mov
lods
es
xor
xchg
icebp
mov
inc
(bad)
out
sub
(bad)
out
jns
mov
aaa
adc
cmp
call
shl
test
(bad)
scas
(bad)
leave
out
cwde
les
dec
add
xchg
stos
es
add
xchg
inc
lods
jne
xor
push
movs
es
sbb
std
popf
add
push
sub
add
sbb
lahf
loop
fiadd
lock
mov
out
push
out
sub
retf
out
jl
dec
(bad)
gs
out
add
cwde
sbb
test
rol
inc
dec
dec
xchg
mov
lods
or
add
push
push
retf
div
(bad)
(bad)
les
push
fsubr
adc
pop
cmp
mov
shl
add
inc
call
out
xchg
es
lea
dec
add
cmp
repnz
out
cs
sbb
sub
aam
jmp
sbb
ret
add
fsub
das
pop
daa
outs
xor
dec
iret
xor
xlat
cwde
std
push
add
fs
xchg
adc
call
es
rcr
add
lahf
xor
xor
add
xor
jp
pop
add
add
push
imul
or
aam
jp
nop
jg
pop
lods
add
adc
out
add
ins
aas
int3
int3
cmp
ret
es
mov
aaa
outs
inc
jl
xchg
xchg
repz
es
or
(bad)
(bad)
push
cmp
movs
xsave
jns
add
popa
xchg
call
out
and
(bad)
dec
jecxz
out
dec
xor
add
xor
pushf
mov
out
and
mov
mov
mov
jnp
add
pop
es
mov
add
jne
leave
xlat
mov
add
in
inc
inc
sbb
int3
out
jnp
add
sub
addr16
test
aam
add
(bad)
xchg
leave
push
add
sub
add
es
les
push
es
xor
add
sub
neg
cmps
cmps
loop
icebp
es
scas
mov
enter
pop
mov
pfrcpit1
and
movlps
inc
shl
ret
popa
pop
in
xor
pop
add
bound
jg
mov
out
xchg
repnz
adc
mov
xor
add
sbb
fs
push
or
xchg
iret
add
jbe
sub
add
loopne
and
add
sub
popf
inc
dec
clc
sbb
mov
div
call
(bad)
aam
lock
sub
xor
(bad)
leave
xor
cwde
add
adc
daa
hlt
xlat
add
shl
int3
jo
add
(bad)
(bad)
cmc
sub
dec
es
cli
mov
repnz
jp
es
mov
inc
test
mov
pop
add
lods
adc
mov
stc
stc
daa
(bad)
lods
out
dec
shr
add
dec
pop
out
outs
sbb
rsqrtps
push
pop
loop
pop
test
inc
out
push
mov
into
ins
out
int
std
es
hlt
pop
push
add
mov
jno
mov
mov
pop
out
retf
and
jp
cmp
jmp
imul
popf
out
add
jecxz
in
xchg
pop
out
nop
add
inc
sar
out
push
lods
out
jmp
out
inc
test
cmp
clc
mov
imul
fcomp
pop
out
sbb
adc
psubq
push
loopne
jg
imul
mov
mov
push
inc
enter
pop
and
ins
test
mov
mov
add
out
cmps
es
(bad)
or
xlat
mov
nop
nop
loope
test
cmp
mov
mov
fcmovnu
sub
int
push
adc
lahf
mov
leave
leave
test
mov
pop
jp
jge
call
add
ret
ret
mov
add
into
pop
sub
jns
inc
es
add
sbb
icebp
mov
sub
pop
pop
jae
push
adc
jge
add
inc
mov
xchg
xor
cmp
clc
cs
mov
push
push
daa
xchg
inc
es
add
xchg
mov
sahf
test
cmc
mov
movs
xchg
out
ror
cmps
cwde
cwde
add
fdiv
(bad)
fld
push
out
scas
mov
add
addr16
es
inc
sbb
es
push
xchg
mov
es
mov
(bad)
inc
jne
add
sar
out
mov
mov
mov
pop
pop
(bad)
lahf
inc
sub
adc
add
es
add
in
es
fcom
or
mov
push
cmp
popa
test
fld
dec
sbb
out
push
in
add
dec
push
xchg
je
adc
setne
cdq
out
mov
jb
ins
lods
lods
add
inc
push
ds
dec
cmp
out
fnstsw
ja
adc
mov
mov
xor
inc
and
and
shl
add
in
out
hlt
retf
shr
idiv
add
js
and
out
add
sbb
movs
pop
pop
(bad)
aaa
test
add
in
es
rcl
pop
(bad)
repz
push
and
(bad)
fisub
push
stos
stos
bound
into
cmp
daa
inc
add
pop
cmps
cmps
ss
push
add
add
pop
out
adc
test
out
inc
jbe
imul
ss
es
ret
pop
(bad)
inc
outs
add
jne
gs
add
sub
fdivrp
pop
es
fcmovnu
mov
dec
and
add
mov
mov
sub
sbb
in
pusha
out
mov
fstp
sbb
ret
out
test
pop
aaa
inc
out
movs
add
jg
leave
mov
push
es
outs
push
call
ins
pop
sub
push
rcr
loope
cmp
add
push
es
ret
test
and
add
xchg
mov
or
pushf
add
lahf
lahf
mov
add
mov
es
xor
out
jae
movs
mov
les
add
push
sub
iret
es
inc
and
add
pop
addr16
pop
add
cmp
out
mov
shl
push
clc
jle
pop
pop
lock
es
cwde
add
sti
add
push
dec
retf
es
repnz
jl
jo
retf
es
sub
jg
xchg
pop
out
out
shr
nop
es
pop
add
adc
repnz
mov
cmp
pop
outs
es
xlat
popf
in
inc
inc
clc
or
es
jg
in
jnp
cmp
in
mov
out
test
test
mov
jl
pop
sbb
xor
add
(bad)
hlt
pop
es
xchg
or
sar
or
mov
in
int3
push
push
adc
push
xor
add
push
out
xchg
outs
fsub
mov
out
in
pop
es
dec
pop
push
add
mov
xchg
js
add
int
outs
outs
and
mov
in
out
fldl2t
leave
sub
scas
xor
pop
push
adc
(bad)
stos
not
sahf
add
xchg
xor
es
cmp
add
sbb
inc
into
stc
out
jbe
xchg
adc
xor
(bad)
movs
sub
imul
ds
test
das
nop
dec
loop
aam
jae
push
push
mov
add
jnp
inc
and
out
fnstcw
pop
fcomp
add
xchg
cwde
imul
mov
fcmovb
popf
aas
push
push
scas
add
push
test
jp
add
out
(bad)
xor
call
out
mov
add
jmp
fisubr
cmp
mov
push
xor
mov
(bad)
lds
add
sbb
ret
mov
hlt
out
add
test
out
mov
xor
cmp
ja
(bad)
fldenv
iret
add
adc
adc
es
sbb
add
rcl
jp
(bad)
xchg
xchg
add
cmp
mov
fsub
jmp
mov
js
jp
push
aaa
add
and
icebp
out
xor
sub
std
jl
arpl
jno
dec
jp
add
js
or
mov
mov
xor
xchg
xchg
(bad)
icebp
jno
call
add
loopne
inc
inc
xchg
mov
pop
add
repnz
aam
mov
out
sbb
nop
es
test
inc
pop
pop
and
or
ror
out
jno
(bad)
es
movs
div
es
xchg
mov
movs
movs
imul
ins
pop
aaa
aaa
add
inc
outs
push
or
and
fdiv
push
jbe
lock
test
push
push
or
jg
and
(bad)
(bad)
pop
cs
add
adc
add
aas
lods
lods
add
sub
mov
pusha
imul
es
mov
inc
es
inc
or
add
sar
int
in
jne
mov
add
and
lods
es
imul
aad
in
mov
es
les
push
add
or
pop
gs
dec
dec
sbb
mov
(bad)
add
out
push
add
popa
add
out
mov
or
pop
add
les
pushf
out
out
aas
mov
jmp
es
lds
(bad)
and
(bad)
outs
sahf
je
lods
and
pop
icebp
icebp
(bad)
inc
out
in
add
mov
out
and
(bad)
stc
stc
cmp
add
push
out
enter
popa
in
jl
test
xor
aas
add
sub
inc
mov
sbb
or
loop
push
xchg
cs
xchg
sub
and
jmp
mov
aaa
jo
and
xlat
je
cmps
mov
nop
push
enter
stc
jns
jne
popa
sub
out
test
clc
dec
dec
ss
shl
adc
es
push
cwde
in
sbb
xchg
pop
ss
xchg
or
mov
es
sbb
jle
cdq
cdq
pushf
cld
push
push
es
sbb
mov
mov
jge
dec
jmp
xlat
jl
add
lds
out
sub
add
cld
sbb
sbb
mov
add
push
pop
ins
pop
pop
sub
pop
adc
hlt
hlt
nop
cmp
and
add
xor
(bad)
iret
fstp
adc
push
mov
test
sub
dec
xchg
arpl
add
shr
mov
lock
inc
add
xor
xchg
and
cmp
jno
add
mov
or
mov
imul
inc
push
push
mov
adc
jns
test
add
sub
pop
pusha
mov
add
adc
mov
mov
es
cmc
adc
jge
mov
add
lods
mov
sbb
push
mov
push
loope
pop
pop
addr16
xor
out
in
frstor
dec
mov
pop
ins
ins
pushf
dec
scas
inc
inc
shl
add
pop
pop
sbb
out
xor
add
mov
mov
mov
add
outs
mov
add
and
mov
xchg
xchg
mov
int3
retf
and
inc
out
mov
add
sub
add
sub
add
test
retf
retf
xor
jge
out
dec
jnp
icebp
icebp
lea
cli
daa
pop
pop
xchg
cmp
out
mov
mov
add
jmp
push
out
gs
add
ss
pop
aam
enter
add
dec
pop
adc
xchg
in
dec
outs
es
in
add
fs
add
(bad)
mov
dec
out
xchg
add
movs
test
sar
cmp
js
add
pop
mov
jecxz
inc
movs
movd
(bad)
mov
xchg
inc
pop
mov
imul
push
(bad)
pop
cmp
es
mov
addr16
cdq
dec
adc
in
push
xchg
out
(bad)
mov
xchg
jmp
(bad)
add
mov
test
cvttps2pi
ds
fldenv
xchg
nop
add
cld
loop
es
imul
and
ds
jl
jae
jmp
out
je
and
or
inc
int3
nop
nop
cwde
cld
mov
and
cmp
es
push
repnz
cmp
mov
shl
nop
or
fld
dec
cs
sub
aaa
push
inc
jo
dec
add
mov
adc
out
shl
stos
es
test
into
pop
movs
paddq
add
push
out
(bad)
add
loope
lea
xor
repnz
icebp
add
das
enter
cmp
add
jns
or
ja
fcom
pand
lds
retf
out
bound
cld
cld
inc
mov
movs
rcl
jecxz
pop
out
fldcw
mov
clc
out
cdq
add
aas
out
sbb
sbb
and
ficomp
or
cld
popa
popa
inc
add
arpl
mov
test
sbb
leave
leave
dec
or
es
cmp
retf
jne
rcl
popa
cmp
push
repnz
dec
es
test
jb
and
xchg
sbb
jne
enter
mov
out
rol
test
push
mov
cmps
pop
add
(bad)
push
out
inc
mov
and
cmp
add
dec
sub
repz
(bad)
and
add
mov
mov
xor
push
add
fsubr
jle
(bad)
add
mov
loope
push
popa
es
add
xor
or
push
cwde
inc
add
dec
jnp
add
adc
les
sub
add
repz
out
mov
mov
ffree
cwde
cwde
push
jp
add
cmp
enter
mov
ret
ret
add
out
cmps
jae
nop
nop
or
mov
lock
add
scas
scas
call
(bad)
jbe
ret
inc
es
push
push
(bad)
(bad)
rol
(bad)
es
inc
(bad)
enter
add
fs
ins
or
fcmovnu
test
push
out
inc
mov
es
add
repnz
ds
mov
inc
cmc
out
ret
inc
setno
pop
jns
push
pusha
pusha
xchg
mov
out
xor
(bad)
es
cmp
fnstenv
es
scas
add
jno
mov
sub
nop
mov
pushf
movs
repnz
leave
xor
push
es
cmp
or
aas
lea
add
dec
popf
cmp
repz
mov
push
(bad)
test
ins
div
or
add
adc
mov
out
stc
and
(bad)
adc
xor
(bad)
call
cmp
mov
jp
mov
and
cmps
mov
clc
mov
and
lahf
jb
dec
push
push
jb
adc
xchg
xchg
add
daa
xor
sub
or
clc
jne
pop
xchg
fadd
xchg
es
push
pop
pop
mov
pop
lock
cmp
or
sbb
add
cmc
or
adc
pop
pop
add
xchg
out
lds
push
out
test
call
mov
pusha
lock
add
pop
pop
ins
pshufw
sbb
outs
out
into
adc
out
add
jl
inc
out
cmp
mov
out
scas
pusha
lods
add
xor
out
jg
adc
movs
add
mov
xor
out
sbb
sbb
scas
mov
out
andps
div
dec
enter
jns
les
mov
add
std
aas
stos
add
out
inc
push
jmp
out
sub
repnz
add
stc
test
jge
out
xor
test
mov
lods
xchg
and
or
out
xor
xchg
add
mul
out
and
and
inc
cmp
ror
retf
inc
sub
out
cwde
cmp
xor
pop
pop
out
and
or
push
mov
and
add
inc
or
cmp
out
mov
xchg
es
outs
add
mov
xchg
out
jle
mov
scas
out
cmp
jno
out
aas
inc
dec
add
fs
ins
inc
cmps
fmul
out
imul
dec
out
sub
add
mov
retf
aam
iret
jns
repnz
pop
pop
add
or
inc
(bad)
in
add
retf
out
rol
test
mov
xor
and
pop
cmp
in
add
mov
aaa
adc
push
add
lods
out
in
pop
mov
dec
out
mov
loop
push
out
shl
es
add
or
in
mov
repz
add
sar
add
inc
pusha
pusha
das
pop
xchg
es
inc
leave
mov
dec
in
fsubr
out
add
pop
push
push
js
addr16
jp
adc
fcmovne
stos
test
add
ss
jmp
stos
mov
imul
dec
aaa
mov
and
xlat
xlat
add
inc
out
ins
es
es
push
add
fldenv
movs
adc
add
shr
pop
es
push
daa
out
cmp
es
sbb
mov
cld
mov
add
xor
sub
xor
test
hlt
or
in
add
jno
add
ficom
sub
cmp
rol
sbb
fs
cvtdq2ps
add
dec
cdq
in
out
fmul
jne
jmp
and
add
dec
mov
int
xchg
xchg
out
xor
add
out
jo
out
out
mov
cmp
xchg
add
push
mov
adc
repnz
fiadd
and
add
hlt
loopne
das
mov
xchg
mov
leave
pop
(bad)
mov
cmc
mov
jo
out
out
add
packssdw
push
jecxz
and
jbe
push
gs
mov
stos
push
jae
jge
fbstp
mov
js
or
jno
adc
es
mov
xlat
aas
mov
xchg
dec
adc
out
arpl
adc
mov
mov
mov
and
inc
fs
jnp
sbb
adc
add
fsub
and
dec
xchg
ret
add
push
pop
sbb
es
add
push
rol
out
ins
mov
das
cmp
cmp
add
jge
jnp
cs
(bad)
out
sbb
cwde
add
jmp
scas
lods
add
xchg
adc
test
mov
jmp
sub
and
adc
jne
or
pop
add
sbb
cmps
add
call
shl
es
add
gs
ins
sahf
push
rcr
sbb
dec
das
into
ins
ins
dec
or
ja
push
mov
add
and
sub
(bad)
aas
add
scas
scas
fisttp
test
sbb
or
loopne
inc
inc
fsubr
dec
es
push
add
jo
sbb
add
fcmovnu
jl
out
test
out
sar
adc
sar
fsub
add
mov
in
or
sub
dec
out
and
das
pop
icebp
icebp
mov
or
push
imul
xchg
out
test
pop
repz
adc
add
adc
add
es
or
mov
shl
mov
aas
in
cmp
cmp
jecxz
pop
es
push
dec
sub
fs
and
cld
cld
fistp
mov
add
cmovge
push
add
or
xor
and
inc
lea
icebp
icebp
dec
jmp
pop
pop
mov
inc
js
fadd
push
out
push
add
es
popa
arpl
mov
call
or
enter
out
std
cdq
pop
pusha
pusha
jno
pusha
out
cs
add
loop
sub
add
out
inc
aas
daa
es
imul
push
addr16
and
leave
pop
es
lds
jb
loopne
sbb
fist
cmp
push
es
mov
test
push
push
sbb
mov
pop
sub
stos
stos
pop
sti
xchg
out
add
mov
movsx
lds
mov
popf
es
jb
mov
cmp
xchg
push
es
dec
shl
xlat
and
retf
retf
push
sub
shl
inc
fstp
out
mov
add
jl
sub
jmp
mov
jge
dec
push
and
mov
hlt
add
shl
add
cmc
es
test
rcl
push
sbb
aam
pop
pop
mov
stos
stos
repz
out
cmps
xlat
or
sub
jo
movs
lock
pandn
push
mov
outs
adc
pop
div
add
pushf
pushf
fs
pop
out
mov
std
lock
scas
out
ss
es
jmp
movs
movs
call
ins
es
loope
call
or
add
out
clc
sbb
imul
add
addr16
inc
lahf
and
aaa
add
xchg
jbe
lods
xor
fsub
retf
jle
repnz
stos
add
mul
add
pop
jmp
(bad)
test
stos
or
setp
dec
leave
leave
xor
cmp
movs
lods
and
loopne
mov
push
mov
rol
inc
xor
jo
mov
adc
add
repz
rcl
mov
push
xor
std
std
iret
add
out
out
pop
inc
inc
popa
or
out
jecxz
sub
mov
fucom
add
cmp
cmp
add
into
mov
mov
mov
sbb
add
out
mov
ins
lock
out
pusha
pop
nop
es
pop
cwde
cwde
pop
mov
es
sbb
es
rcl
fld
xor
add
or
jbe
lods
jo
mov
int3
add
xchg
retf
pop
pop
cmp
push
adc
int3
es
push
sbb
jg
lahf
sub
retf
add
out
xchg
out
jbe
jecxz
inc
out
int
sub
(bad)
jmp
frstor
loopne
imul
(bad)
push
pop
xchg
es
lock
mov
inc
inc
pop
gs
out
add
es
test
in
aam
pop
dec
inc
mov
addr16
out
pop
(bad)
cmp
cmp
add
loope
dec
dec
pop
cld
cld
add
add
ret
leave
mov
out
push
cmp
cmps
fcmovbe
rcl
add
aam
cmc
or
aad
jecxz
add
shl
test
cmp
add
out
and
movs
nop
nop
sub
out
rol
in
call
xor
add
out
jno
(bad)
es
aam
push
loop
fiadd
fs
(bad)
loopne
dec
out
inc
test
es
repz
mov
adc
sub
es
adc
rol
rol
bound
sbb
aam
cmp
fcmovnu
sahf
cwde
es
jg
pusha
pusha
pop
pop
xor
xor
out
mov
in
rol
(bad)
test
and
rol
add
xchg
daa
stos
lea
mov
pop
pop
adc
mov
pop
ss
cwde
add
mov
xchg
sti
out
jo
scas
movs
movs
rcl
out
add
adc
sub
fsubp
popa
es
inc
cmp
es
call
(bad)
stos
stos
loope
mov
dec
hlt
inc
daa
es
jge
or
es
pop
pop
push
push
nop
jmp
add
call
add
outs
lahf
push
push
ja
pusha
lds
add
test
repnz
or
in
test
ror
and
and
out
rcl
add
inc
jbe
xlat
add
sub
add
les
jle
add
sti
push
out
dec
loope
es
pop
add
jmp
scas
out
add
shr
sub
std
cmp
inc
mov
jnp
popf
stc
stc
sub
add
mov
out
js
add
loop
adc
retf
jae
icebp
out
sar
xchg
in
in
movsx
out
mul
(bad)
jmp
mov
loop
or
fcmove
es
add
(bad)
sbb
adc
add
push
xchg
and
or
or
es
push
add
push
push
pop
bound
xchg
add
mov
cmp
es
or
loop
add
push
(bad)
sub
jl
aas
aas
or
add
fcmovnu
mov
not
pushf
(bad)
pop
push
sub
xor
add
jns
fld
loop
es
clc
shl
pop
imul
sub
xor
lahf
inc
add
xor
mov
add
ret
loopne
jp
rcl
out
jbe
mov
cmp
adc
popa
test
dec
push
mov
fdiv
addr16
setnp
mov
sub
cdq
cdq
pusha
jnp
out
sbb
push
es
movs
in
add
mov
and
jg
cmp
std
sbb
pop
add
xchg
out
adc
jno
or
cdq
jbe
clc
add
cmps
out
stos
hlt
dec
xor
add
out
in
sbb
sub
jl
sbb
(bad)
jnp
scas
jmp
es
or
test
call
sbb
std
add
out
xchg
mov
ror
dec
js
lds
or
shl
dec
test
adc
es
dec
adc
add
add
and
pop
in
jge
sbb
dec
dec
mov
iret
out
or
inc
add
ins
es
and
push
cdq
cdq
dec
fs
es
fnsave
(bad)
je
add
dec
adc
inc
outs
push
jmp
pop
xchg
xchg
add
test
adc
(bad)
enter
sbb
add
xor
in
cmp
into
mov
out
mov
nop
jg
out
in
dec
pop
add
xchg
(bad)
mov
dec
imul
jno
(bad)
(bad)
shl
add
mov
xor
sub
sbb
aas
ja
out
lea
sub
push
ss
pop
cmp
pop
iret
add
out
dec
cmp
jmp
mov
push
out
fadd
push
cmps
and
fldz
out
sar
es
mov
dec
dec
test
lods
arpl
jmp
xchg
or
fwait
cmps
in
xor
lahf
int3
in
add
mov
push
paddsb
jle
mov
into
clc
es
jmp
es
aad
jle
xor
mov
out
adc
shl
inc
test
xchg
(bad)
(bad)
xchg
mov
test
test
(bad)
loopne
out
push
push
mov
out
add
and
inc
adc
xchg
xchg
ret
pop
push
sbb
cmp
and
push
lahf
xor
xchg
jno
add
retf
mov
jnp
adc
aaa
stos
mov
movs
cli
mov
es
out
cdq
js
es
aas
inc
xor
xlat
xlat
add
pop
out
push
pop
sub
push
mov
sub
adc
xor
test
add
idiv
mov
xchg
add
sub
pop
pop
pop
inc
scas
out
add
cwde
cmps
out
or
outs
add
(bad)
repnz
icebp
shl
xor
push
adc
add
pop
es
mov
les
and
add
nop
cmp
xor
pusha
dec
mov
jns
cwde
sub
cmp
mov
pusha
add
xchg
sub
mov
out
pop
add
sti
out
idiv
mov
cmps
mov
aas
push
and
add
call
push
(bad)
add
pop
sbb
hlt
cwde
push
cld
and
add
out
xor
sub
scas
movs
rol
dec
cdq
out
add
retf
inc
inc
bnd
out
aam
pop
jae
popa
test
jne
es
xor
shl
and
movs
add
aam
test
xchg
dec
movs
add
or
inc
in
xor
stos
stos
jae
mov
push
es
dec
and
pushf
rol
mov
mov
xor
pop
add
inc
fistp
dec
repz
sub
popf
cmova
xor
psraw
es
shl
es
add
inc
inc
pop
push
loop
es
scas
dec
es
add
inc
and
out
xor
out
mov
hlt
aaa
leave
frstor
outs
mov
call
out
sti
movs
movs
add
add
fild
scas
(bad)
(bad)
(bad)
push
add
pusha
out
out
or
pop
sub
mov
mov
pop
add
outs
scas
add
scas
loopne
push
mov
call
pop
xor
out
pop
add
pop
pop
dec
and
sbb
out
out
jge
shl
jns
add
xchg
xchg
sub
dec
push
inc
or
adc
cmp
sbb
add
shl
es
jnp
xchg
rcr
xor
jno
popf
ror
out
add
loopne
mov
inc
sub
in
je
es
push
and
jmp
xor
sbb
out
shr
add
stc
out
adc
add
push
mov
sbb
js
ja
out
jnp
adc
fstp
mov
shl
test
lods
lods
cmp
add
sbb
jae
(bad)
add
xchg
out
pushf
pop
push
sub
and
lock
lea
jp
add
je
out
cmp
rcl
sub
cld
stos
cmps
cwde
mov
es
push
inc
rol
enter
push
add
inc
inc
lods
adc
add
fadd
dec
frstor
cmps
cli
lock
add
sti
test
das
int
push
clc
mov
add
sahf
out
in
add
fmul
inc
mov
lods
lahf
hlt
xchg
add
jbe
retf
out
xor
ja
out
and
repz
cmps
sbb
cmp
pop
xor
out
sub
mov
cmps
and
out
(bad)
cmp
push
push
add
xchg
out
ret
push
adc
jg
add
icebp
icebp
lock
mov
out
or
outs
mov
sbb
leave
das
inc
imul
adc
add
jae
add
mov
shl
out
cmp
sub
fldenv
xchg
add
out
mov
loopne
sbb
mov
push
out
add
jmp
imul
jmp
imul
push
jp
stos
stos
or
aam
data16
and
pop
or
xchg
xchg
jbe
nop
out
retf
test
fcomp
and
das
out
ds
es
xchg
mov
adc
xchg
cli
add
int3
es
ret
cwde
dec
pop
pop
jo
mov
popa
out
cmps
xor
lods
lods
je
ja
jg
add
mov
nop
jns
sti
sti
mov
(bad)
out
add
ins
test
pop
pop
add
loope
fcmovu
scas
add
cmp
mov
mov
and
sbb
es
add
sahf
outs
outs
xor
jg
add
rcl
push
rcl
add
and
iret
add
rcr
pop
add
test
mov
addr16
clc
add
push
xor
out
cmc
mov
loop
out
cmps
fistp
adc
pop
add
adc
shr
(bad)
mov
lea
xchg
es
jg
movs
or
sbb
push
ds
push
std
dec
es
(bad)
es
scas
fnstcw
add
mov
xor
imul
add
add
xchg
dec
out
jmp
test
push
inc
mov
add
mov
div
aaa
add
clc
(bad)
adc
in
add
lahf
icebp
loop
xchg
sbb
mov
repnz
dec
ds
push
cmp
and
add
pop
dec
xchg
es
(bad)
jo
into
fcomp
add
out
push
leave
out
xchg
push
out
xchg
mov
cmp
out
and
popf
mov
test
mov
inc
cmp
sbb
jmp
mov
xrelease
push
xchg
int
es
xor
add
pop
sar
ins
cli
inc
mov
xor
in
jecxz
out
nop
outs
mov
mov
std
es
cld
int3
add
shr
xchg
data16
and
push
mov
push
adc
add
out
int
sbb
add
repnz
das
ror
fs
cmp
push
xor
out
mov
push
es
clc
mov
jne
add
es
call
add
pop
out
jp
add
sub
stos
shl
sar
test
add
leave
lods
fisttp
mov
stos
xor
xchg
inc
inc
aaa
jg
out
inc
push
add
sub
ror
jl
pop
xor
xchg
shl
pusha
mov
add
pop
es
inc
in
add
mov
pop
jbe
cmp
or
fisttp
ret
mov
out
lock
into
es
cs
in
in
aad
or
pop
hlt
shr
cmp
repz
loop
cmps
es
push
cmp
or
cmp
cmp
ror
add
loop
imul
(bad)
daa
lea
xor
jecxz
push
push
imul
out
lahf
outs
and
sti
enter
mov
pushf
ret
stos
out
aaa
sub
lods
inc
out
add
pop
add
jl
sub
dec
xchg
add
stc
out
fprem
jo
in
lods
add
mov
and
imul
jmp
adc
cdq
es
(bad)
push
inc
inc
mov
(bad)
pop
mov
data16
fst
cmp
out
add
repz
neg
and
xor
mov
add
inc
inc
pop
xchg
out
mov
enter
add
mov
test
push
dec
jle
add
jae
out
mov
sub
jecxz
mov
rcl
call
out
ins
ins
sbb
es
mov
xchg
or
and
mul
std
cmp
pop
add
icebp
mov
jns
shl
add
aad
es
imul
cmps
cmps
add
aaa
std
std
mov
add
sbb
popa
mov
push
fild
stc
stc
pop
cwde
xchg
out
xor
add
lods
mov
jb
push
adc
sar
add
es
push
lods
imul
or
movs
or
xor
jge
loope
mov
xor
push
shl
jne
mov
add
test
inc
sub
je
xor
pop
arpl
push
push
or
iret
adc
add
out
cmp
push
(bad)
and
popa
es
outs
out
pusha
pusha
pop
xor
fmul
loop
xchg
xchg
ficom
push
(bad)
jne
mov
scas
out
adc
cli
cli
xchg
cmp
out
or
popa
cmps
loope
es
es
loopne
lods
mov
fcomp
adc
mov
(bad)
daa
mov
push
push
data16
out
add
jl
push
inc
pop
add
and
dec
(bad)
std
out
jb
lea
in
pusha
push
mov
arpl
sahf
add
out
dec
pop
xor
add
out
ret
rcl
dec
leave
jo
sbb
lea
aad
out
pop
or
ja
cmc
rcl
dec
add
jnp
div
add
mov
test
jg
xchg
arpl
das
xor
es
cli
push
dec
(bad)
stc
add
pop
pop
mov
mov
push
es
cmp
push
es
mov
es
pop
icebp
adc
jmp
adc
outs
inc
js
out
push
scas
out
fld
loopne
pop
pop
pop
jge
add
imul
sti
pop
push
add
mov
int
sbb
sbb
es
(bad)
xor
rol
pushf
add
push
adc
inc
inc
in
gs
pop
daa
imul
out
dec
aam
es
or
and
scas
scas
aad
pop
out
sbb
es
test
int
add
push
es
mov
cdq
jno
dec
xor
loopne
add
pop
push
jmp
out
shr
es
fcom
dec
dec
and
jne
push
add
mov
sahf
inc
es
mov
neg
inc
fistp
xor
mov
fs
test
cmp
(bad)
mov
jnp
inc
sub
rcl
rol
test
scas
scas
in
stos
inc
jg
mov
sub
dec
repz
daa
cmp
rcr
repnz
add
(bad)
ds
push
add
test
out
cmp
mov
aaa
jb
hlt
hlt
loopne
cld
out
(bad)
mov
xor
cmp
outs
out
jmp
mov
sbb
pop
cmp
hlt
xor
out
in
out
or
out
inc
into
xchg
sub
out
dec
adc
or
pop
add
retf
retf
add
out
in
mov
add
pop
adc
(bad)
outs
es
xor
cld
cld
add
ds
xchg
loop
pop
dec
pop
and
call
rcr
es
jns
(bad)
test
cli
mov
push
or
fidiv
shl
add
lea
or
add
es
int
push
push
ins
jnp
or
adc
repz
outs
xchg
mov
mov
xchg
inc
push
inc
jns
add
movs
loop
int
push
mov
ret
icebp
add
dec
dec
inc
lock
out
pushf
test
es
add
cmc
cmc
mov
jbe
mov
dec
out
xchg
lahf
std
sbb
cmp
sar
test
jmp
out
fstp
es
add
xor
xchg
test
mov
and
out
and
call
xor
mov
imul
mov
xchg
lock
test
out
jnp
add
dec
cmp
cmp
mov
add
add
lock
push
sbb
add
jge
out
data16
es
scas
out
or
lods
and
es
sub
jmp
add
push
sub
ss
ds
fmul
es
push
inc
inc
cwde
mov
das
add
out
add
pop
sub
out
lock
jno
and
push
out
sub
out
test
scas
es
enter
sti
aas
dec
jo
add
out
fcomp
mov
add
loope
stos
(bad)
lds
es
es
ficom
lds
aad
es
mov
in
fld
add
add
mov
(bad)
ja
add
pop
iret
add
out
or
out
cmps
push
test
add
jnp
jecxz
popf
loopne
dec
dec
retf
neg
push
imul
out
out
cmp
or
js
adc
push
iret
mov
out
retf
out
mov
xor
add
and
xchg
in
fcomp
add
retf
adc
out
push
push
sahf
loope
or
out
movs
call
mov
es
pop
push
adc
add
adc
shl
add
icebp
add
(bad)
es
add
jbe
inc
pusha
fcomp
outs
ins
add
cli
push
sub
or
cmp
add
sti
mov
pop
int
mov
mov
aaa
sahf
add
mov
cli
mov
add
xchg
gs
cwde
add
inc
inc
dec
pusha
sub
in
add
es
shl
ret
jnp
add
test
out
mov
cmps
es
imul
es
pop
xor
push
or
leave
or
add
jae
sbb
out
sar
xchg
es
cmp
in
es
add
fldenv
vpminub
jns
and
jmp
push
out
adc
addr16
out
ss
cmp
and
sub
nop
pop
add
es
jb
test
loopne
pop
popf
out
dec
push
in
out
xor
loope
fcomip
fwait
pop
nop
mov
add
sbb
lods
and
pusha
xchg
jle
push
add
push
gs
les
shr
pop
(bad)
jmp
out
ins
xchg
xor
sbb
enter
xor
and
pusha
add
or
cmp
pop
ds
add
mov
out
sub
fwait
es
xchg
lock
into
into
add
gs
inc
add
add
inc
scas
scas
repz
push
push
xor
aas
sahf
add
mov
lods
out
xor
push
jp
out
retf
adc
mov
mov
and
sbb
inc
pusha
out
adc
push
popf
push
mov
movs
(bad)
sbb
push
push
mov
(bad)
in
add
leave
xchg
loopne
add
lods
call
sbb
mov
inc
add
ficom
inc
out
call
test
rol
(bad)
outs
mov
retf
stc
stc
(bad)
ret
push
mov
xlat
push
out
aad
add
mov
fwait
cmp
lods
jl
add
dec
xor
push
fcmovnbe
into
mov
popa
shl
leave
es
xchg
add
or
jns
ds
jae
add
or
pushf
sub
into
cmp
sub
sbb
pop
sbb
pop
add
jns
mov
inc
add
pop
pop
pop
add
std
fmul
cmc
add
inc
sbb
xlat
dec
dec
ret
add
jge
mov
add
push
xchg
add
es
ja
icebp
icebp
add
jo
cs
enter
dec
pop
test
hlt
add
popf
mov
jo
sub
sub
js
jl
add
add
push
fwait
popf
popf
xlat
add
mov
pop
push
jg
test
in
push
es
add
(bad)
bsf
mov
add
(bad)
in
dec
pop
pop
into
mov
add
es
and
je
(bad)
(bad)
xchg
xchg
dec
(bad)
xor
ins
outs
pop
(bad)
es
add
je
mov
loopne
add
mov
add
pop
fdivr
push
pop
movs
add
hlt
cmp
jle
out
inc
pop
shl
mov
cmp
add
fs
mov
out
mov
add
fmul
es
lea
pushf
(bad)
(bad)
sti
jl
outs
jnp
bswap
retf
jo
rol
cmp
out
cmp
in
in
imul
mov
add
es
pop
iret
or
clc
out
cmp
and
or
arpl
mov
stos
es
js
mov
es
xchg
ret
add
retf
lea
fsub
out
dec
push
or
sub
cmp
dec
out
lock
xchg
jmp
lods
sbb
rcl
call
outs
out
out
add
ss
aad
add
inc
fst
jmp
test
das
out
lds
dec
icebp
xchg
mov
adc
mov
stos
add
shr
clc
cmp
out
pop
xlat
je
adc
add
aad
adc
loop
out
sbb
rcr
push
or
mov
or
mov
add
ins
pushf
push
adc
mov
xor
daa
aam
xlat
imul
jmp
ss
stc
mov
out
scas
sar
sub
cmp
popf
add
jae
push
popa
(bad)
lods
lods
into
jb
pop
pop
mov
and
clc
add
inc
dec
call
hlt
mov
lock
out
pop
add
rol
retf
retf
or
adc
out
and
sub
daa
shl
and
xor
jmp
inc
out
mov
push
adc
inc
jo
adc
jmp
outs
sar
clc
out
jl
sbb
push
mov
lock
fld
dec
lods
sbb
jge
inc
add
aas
and
jns
in
xor
add
dec
out
jb
imul
pop
push
fsubp
ja
pop
lock
pop
jno
sub
add
mov
es
add
and
lds
pop
ss
jmp
add
sub
push
inc
es
ret
pop
pop
cmp
xor
jmp
loope
(bad)
sbb
push
adc
lods
es
mov
loop
pop
add
sbb
add
xchg
es
(bad)
or
fcomp
arpl
int3
push
add
jmp
sub
sbb
add
push
sbb
movs
add
cmc
mov
fisttp
bnd
mov
add
int3
ins
sti
sti
push
mov
sub
fcmovu
lea
mov
xor
xor
icebp
inc
pop
mov
ins
jns
rcl
mov
sahf
xor
arpl
xchg
add
cmp
es
rep
push
pop
pop
inc
movs
imul
xor
imul
out
gs
cmp
dec
or
ss
es
mov
rcl
test
and
jmp
retf
push
out
fsub
sub
add
push
scas
scas
add
es
cwde
rol
pop
pop
push
or
lds
push
mov
and
pop
outs
outs
ror
or
push
add
xchg
mov
and
mov
add
jl
hlt
hlt
or
pop
(bad)
inc
(bad)
out
push
cdq
gs
pop
ins
jne
out
cli
add
in
inc
inc
sbb
jg
pop
(bad)
test
xchg
es
push
pop
xchg
pop
pop
repz
addr16
mov
or
add
sub
int3
cmps
xchg
inc
sbb
fwait
add
dec
dec
in
add
add
cli
dec
stos
outs
out
xchg
(bad)
add
loope
ss
sbb
adc
ror
fwait
inc
fcomp
add
outs
out
fldenv
and
fld
std
add
fisub
fidiv
inc
out
xor
sbb
leave
(bad)
loop
add
push
test
pop
imul
dec
(bad)
sbb
out
push
jne
add
pop
es
jo
div
loop
inc
adc
push
add
cwde
cmp
sbb
jp
dec
out
scas
mov
stc
lods
add
and
daa
stos
stos
cli
loop
es
lahf
pop
jmp
aas
push
outs
and
shl
push
sbb
repz
xchg
xlat
add
ja
jl
out
movs
add
test
sub
iret
adc
es
add
or
in
xchg
pop
add
pop
cmps
cmps
xlat
jbe
outs
outs
add
add
push
xchg
dec
inc
inc
mov
fwait
mov
or
popf
pop
out
jno
(bad)
es
sti
loope
loop
jle
mov
mov
adc
pop
cmp
ds
jbe
add
adc
shl
out
pop
stos
push
es
in
dec
dec
xor
sbb
lds
add
das
fsub
add
imul
arpl
adc
movs
shr
stos
test
push
add
jno
(bad)
loopne
out
setle
pushf
pushf
lods
in
out
dec
mov
xor
out
or
or
push
aad
in
mov
mov
pop
mov
mov
adc
jl
iret
sub
mov
clc
inc
out
push
xor
es
aas
push
test
or
xchg
cmp
fcomp
out
pop
jae
mov
dec
add
sub
inc
scas
cmps
cmps
sti
test
out
shl
add
out
imul
mov
xchg
jge
and
loopne
inc
and
add
adc
iret
es
loopne
bound
es
jmp
mov
popa
es
shl
jmp
cli
jle
add
int
dec
mov
xchg
shl
in
add
mov
out
inc
and
es
outs
arpl
hlt
cmp
add
push
push
push
mov
mov
out
repnz
shl
inc
or
iret
add
lea
es
call
ds
mov
add
mov
out
leave
jecxz
es
pcmpeqb
push
sub
nop
xor
push
push
push
sbb
add
pushf
ror
aaa
add
adc
inc
inc
mov
add
clc
imul
add
test
es
cli
mov
mov
js
pop
xlat
add
out
push
and
cld
add
dec
pop
shr
out
xor
ror
sub
in
and
lock
jmp
sbb
clc
sbb
dec
(bad)
jns
jo
mov
or
lods
add
mov
cmp
mov
addr16
add
xchg
adc
stos
ds
out
mov
cmps
xor
mov
pop
mov
out
push
pop
outs
es
jg
sldt
and
pusha
out
out
add
test
mov
or
cs
(bad)
sub
out
xchg
or
pop
pop
or
add
imul
pop
jo
fdiv
push
push
(bad)
scas
fsub
imul
in
mov
clc
rol
xor
out
inc
sub
add
ins
jp
cwde
jae
repnz
cmp
pop
add
mov
cmp
or
push
out
mov
cmp
adc
jge
cmp
add
and
mov
mov
fld
loopne
fs
mov
sahf
es
mov
xchg
xchg
add
push
sar
out
mov
test
cmps
out
xchg
xchg
add
pop
or
test
mov
addr16
xor
imul
push
push
loopne
sti
out
js
mov
jmp
lea
add
fdiv
adc
and
mov
in
add
dec
sub
ja
aad
cmp
add
xchg
(bad)
(bad)
out
popf
inc
(bad)
es
mov
in
pop
dec
add
test
js
xchg
jbe
add
mov
adc
pusha
jne
es
pop
add
lods
fcmovu
pop
inc
cmp
jnp
xor
xchg
pop
rcl
(bad)
stos
jne
mov
add
in
add
xor
cmp
not
inc
dec
lods
lods
add
stos
out
daa
sbb
dec
dec
rol
je
jle
sti
test
sbb
mov
add
out
and
shr
out
sbb
imul
inc
inc
popa
add
dec
jno
adc
dec
(bad)
sub
jecxz
ret
ret
add
out
mov
mov
adc
ss
faddp
leave
add
in
and
xchg
xchg
xor
add
xchg
imul
cmp
jnp
add
sti
out
mov
sbb
mov
jo
push
add
dec
inc
inc
cwde
outs
mov
std
out
aas
cmp
shl
clc
clc
out
push
add
arpl
daa
in
jge
or
imul
dec
jo
aam
(bad)
popa
add
pop
mov
es
mov
mul
rcl
jl
add
in
dec
inc
xchg
xor
cmp
cld
mov
test
out
pop
test
pop
inc
cmps
cmps
adc
jnp
add
mov
sub
add
xor
out
mov
call
mov
adc
jo
shl
fisttp
pop
pop
dec
add
out
xor
jb
xchg
out
in
retf
sub
test
push
out
clc
xor
adc
out
jmp
and
push
scas
(bad)
fstp
fmul
inc
push
out
call
and
movs
icebp
into
jecxz
(bad)
pusha
fxch
fcomp
add
rcr
(bad)
add
(bad)
dec
dec
clc
jle
jns
mov
sbb
and
(bad)
adc
vmread
out
push
es
pusha
add
fiadd
mov
and
lock
jmp
lds
push
(bad)
aam
jo
test
jle
add
int
scas
jnp
popf
popf
cdq
sub
out
fsub
cli
sub
add
out
movs
inc
pop
es
and
imul
es
outs
and
xor
add
ins
pusha
inc
inc
call
cld
cmp
add
fs
nop
mov
jg
xor
sub
sbb
aaa
add
push
cli
mov
aad
std
ret
(bad)
repnz
mov
xor
popa
out
ds
sub
jae
movs
add
pop
loopne
adc
das
add
out
sbb
ret
rol
push
mov
cmp
dec
xchg
sbb
arpl
pop
ins
push
push
add
daa
call
ret
es
xchg
loopne
push
add
loop
pop
pop
jns
repnz
jecxz
jp
rcl
ja
add
mov
mov
es
adc
int3
cmp
jns
xor
mov
icebp
add
out
addr16
int3
add
outs
out
out
popa
push
jecxz
lea
ins
call
test
sahf
pusha
ss
retf
add
out
or
iret
mov
scas
inc
test
xor
push
and
xlat
rcl
xor
jns
push
dec
pop
pop
mov
add
sub
mov
es
add
push
out
add
and
mov
sar
jno
cmp
adc
std
std
jbe
jmp
jle
xchg
jmp
mov
lahf
out
out
jae
es
inc
jmp
aaa
xor
fnsave
es
popa
mov
stos
stos
lods
cmp
out
xor
in
call
jmp
dec
dec
out
daa
out
dec
inc
cmps
push
push
rol
out
dec
xchg
in
lods
iret
inc
pop
mov
inc
loopne
push
sbb
add
pop
push
mov
mov
call
inc
mov
or
pop
xor
mov
mov
push
es
add
in
mov
mov
inc
js
jb
add
sbb
mov
fadd
or
xchg
pop
out
sub
pop
jmp
shr
nop
std
std
or
push
pop
es
cwde
and
jo
jecxz
shl
or
or
je
inc
pop
jnp
add
push
inc
out
pop
cli
jno
mov
les
mov
out
fbld
add
xor
mov
jbe
jge
es
aad
add
shl
stos
stos
jecxz
pop
lods
shr
mov
js
jno
mov
add
or
out
sbb
dec
jns
out
jmp
sub
push
out
push
jp
add
jo
jecxz
addr16
es
add
push
xchg
xchg
xchg
pop
pop
es
outs
lds
sbb
imul
(bad)
(bad)
mov
cmp
repnz
rcr
cmps
shl
add
(bad)
or
repnz
es
in
ficomp
adc
outs
je
ficomp
es
retf
popa
popa
sub
adc
and
dec
add
sub
out
test
push
mov
in
test
lods
scas
scas
add
out
xchg
fdecstp
es
mov
mov
push
iret
iret
xor
cld
outs
outs
retf
out
test
add
or
adc
xchg
es
je
push
pop
pop
jp
add
jnp
or
sub
add
dec
gs
lods
std
pop
fistp
cmc
and
jns
add
adc
ror
push
mov
pop
es
sbb
and
jns
sub
loope
add
pop
inc
cmp
adc
sub
cs
dec
mov
cwde
es
push
xor
mov
add
xor
adc
adc
es
out
lods
lods
(bad)
fild
jae
ret
(bad)
mov
enter
dec
out
loopne
pop
add
dec
(bad)
push
add
int
cmps
inc
es
pop
push
mov
mov
push
leave
mov
mov
dec
arpl
or
fadd
es
push
pop
test
call
aaa
adc
es
(bad)
xor
aaa
les
add
mov
mov
xchg
outs
cmp
and
iret
jae
add
jnp
xor
outs
in
sub
push
out
es
mov
add
arpl
clc
das
dec
into
into
in
ins
add
xchg
inc
ss
es
mov
stos
sbb
dec
add
pop
jns
mov
adc
out
retf
mov
xor
and
cli
add
enter
in
xor
bound
and
addr16
add
sbb
scas
adc
out
push
sub
fistp
add
jmp
jle
es
add
xor
mov
shl
shr
div
add
push
push
mov
shl
pop
add
es
sub
fld
loope
add
not
mov
out
xor
es
mov
add
into
mov
add
fild
mov
nop
sbb
es
loope
in
iret
retf
inc
and
push
jmp
jl
add
ret
rol
ins
sub
mov
mov
add
add
out
push
loopne
mov
and
jmp
add
sub
shl
dec
fistp
es
data16
push
jmp
test
leave
fsubp
add
adc
addr16
xchg
add
es
xor
int
and
xchg
scas
mov
sub
jne
cmp
rcl
sar
mov
sub
add
add
jns
add
pop
lods
cmp
xchg
xchg
cdq
push
out
adc
jle
dec
pop
cld
and
mov
pop
sahf
in
and
cmp
daa
inc
inc
xor
jne
add
xor
outs
sbb
rcl
adc
and
in
and
out
out
and
sub
fsub
cmp
(bad)
les
gs
mov
scas
cwde
es
xor
jl
in
call
repnz
test
aam
es
xchg
(bad)
pop
lods
loope
cmc
push
and
add
ss
shr
push
inc
mov
add
fbstp
inc
nop
add
and
loop
mov
adc
mov
add
dec
adc
out
mov
inc
and
cmp
out
mov
les
push
push
pusha
cmp
out
mov
add
mov
icebp
ret
add
xor
out
push
(bad)
std
es
pop
popa
sbb
xchg
cli
addr16
loopne
inc
jecxz
add
dec
fimul
cdq
add
pop
jns
(bad)
mov
add
mov
inc
ret
xchg
add
mov
cs
jno
push
aas
es
push
mov
les
mov
jp
imul
sahf
mov
js
xchg
and
pop
jle
mov
mov
add
inc
inc
mov
add
xchg
mov
add
and
bnd
lods
fdivr
adc
fs
int3
mov
out
call
mov
out
addr16
es
nop
fisttp
es
ds
clc
ds
jp
addr16
sbb
and
out
push
lock
pop
out
stc
mov
lds
out
aas
scas
(bad)
es
nop
das
test
add
fsub
push
out
push
pop
xor
sub
add
mov
add
pop
mov
out
mov
push
push
fbld
in
stos
(bad)
wrmsr
into
jmp
clc
fadd
dec
es
aaa
add
dec
es
cmp
mov
ror
add
pop
xchg
mov
lods
mov
les
das
add
xor
mov
sub
pop
pop
fnstsw
cwde
cwde
add
xor
fwait
sahf
add
scas
scas
not
sbb
xchg
jnp
pop
pop
xlat
out
add
mov
sub
es
call
sbb
iret
es
ins
or
add
cmp
cdq
push
pusha
fbstp
popf
or
movs
movs
or
xchg
es
cmps
imul
sub
hlt
xchg
jo
movs
add
fcom
out
sbb
shl
xchg
xor
sti
retf
scas
sub
es
push
jge
fld
in
imul
bswap
jecxz
aaa
test
cwde
pusha
(bad)
inc
adc
and
rol
inc
outs
rcl
push
ins
loop
es
test
cmc
rol
sub
out
scas
jbe
es
add
pop
es
fsubr
add
scas
rcl
inc
add
sub
cmps
outs
fcmovu
add
enter
mov
add
rol
jg
into
or
add
nop
or
out
iret
ja
add
sbb
fcomp
dec
mov
sub
mov
test
cmp
adc
sub
or
test
add
out
push
adc
jmp
add
lock
(bad)
(bad)
add
mov
add
xchg
into
add
out
ins
sbb
clc
clc
inc
cmp
out
sub
add
cmp
pop
add
sbb
movs
ins
int
es
mov
imul
add
enter
add
push
push
test
jecxz
mov
outs
mov
lea
xor
fnstsw
add
xchg
stos
dec
xor
xchg
out
ins
adc
imul
out
ror
rcr
mov
in
sbb
bound
and
out
out
mov
fs
test
cs
lahf
int3
add
add
mov
mov
or
clc
jmp
xchg
fs
xchg
es
retf
sub
sbb
add
or
inc
(bad)
out
mov
call
jbe
fist
aas
add
test
jmp
adc
sar
and
es
mov
pop
pop
pusha
imul
out
iret
loopne
es
mov
test
jmp
pop
add
xor
sbb
into
cmp
out
shl
loope
gs
add
lahf
adc
push
push
out
mov
sbb
and
cmp
dec
stc
mov
mov
push
push
es
(bad)
or
push
cld
ds
jecxz
adc
mov
pop
rcr
mov
mov
retf
add
xchg
pushf
out
stc
outs
or
out
inc
dec
into
es
mov
adc
cmc
cmc
add
(bad)
out
jns
ror
out
lods
sub
fidivr
mov
and
cmp
jle
jb
push
in
inc
inc
shl
add
test
or
into
aam
mov
ret
pop
movaps
dec
push
jb
es
cmp
add
jbe
popf
mov
xlat
inc
inc
add
mov
aad
test
imul
out
jnp
pushf
add
jo
add
mov
cmps
push
add
cmp
out
jp
inc
inc
add
inc
out
arpl
cmc
in
out
imul
xor
ror
into
adc
push
sbb
inc
add
sti
call
sahf
lods
push
push
mov
cmp
mov
pop
es
outs
add
fistp
adc
shl
cdq
mov
movs
es
lahf
pop
std
mov
sbb
jle
je
mov
mov
in
out
and
mov
fld
or
push
add
push
cs
cwde
adc
add
mov
add
out
lds
mov
(bad)
sbb
ficom
push
push
add
adc
sub
mov
add
and
xchg
add
jno
mov
dec
dec
cmp
(bad)
out
dec
or
xchg
xor
test
mov
add
loopne
out
pop
pop
mov
mov
(bad)
ins
jne
es
add
in
out
adc
enter
mov
es
loop
add
ror
inc
adc
es
std
dec
add
aas
jnp
out
ret
cmp
out
push
jg
jo
mov
(bad)
out
loope
cmp
arpl
in
out
add
add
out
or
push
ds
out
call
adc
push
out
loopne
add
push
int3
pop
shl
xchg
or
shl
pop
pop
xor
das
es
sar
sub
push
cli
es
mov
add
gs
xor
ds
out
jo
pop
es
lods
xor
fwait
(bad)
sub
push
add
out
popf
movntps
add
test
out
mul
fst
add
xor
es
outs
pusha
es
add
xor
out
and
jecxz
in
and
add
mov
pushf
xor
or
add
and
sub
hlt
cmp
jns
xchg
out
inc
add
cwde
out
add
add
mov
loop
sbb
and
add
(bad)
aad
out
sbb
and
adc
jbe
out
out
movs
(bad)
loopne
cmp
pop
xor
out
mov
ds
stos
ss
push
inc
or
add
popa
jge
out
jb
(bad)
es
dec
das
ret
add
scas
enter
mov
sub
and
add
jnp
xor
pop
pop
lods
(bad)
out
out
adc
dec
es
ins
xor
mov
or
add
sub
inc
or
add
out
mov
mov
jge
add
mov
cmp
es
sub
inc
xor
out
lods
add
out
scas
add
sub
lea
sbb
or
add
and
mov
out
jno
cmp
out
cmp
push
sub
inc
add
pop
sub
add
(bad)
push
loop
out
sub
inc
or
adc
jae
scas
je
es
sub
inc
ja
push
push
cmp
shl
add
movs
shl
es
mov
and
into
es
inc
sub
pop
hlt
hlt
mov
shl
inc
jne
ins
ins
inc
add
out
mov
ret
in
bound
push
xchg
add
dec
scas
out
sahf
adc
add
das
arpl
(bad)
retf
dec
xor
xchg
add
and
jg
pop
inc
inc
adc
mov
fbld
and
cmp
jns
jmp
add
out
int3
mul
arpl
mov
cmps
mov
jge
jnp
pop
cmps
out
jmp
add
push
out
or
(bad)
jle
inc
pop
mul
add
pop
jecxz
ins
sbb
pop
pop
mov
add
fwait
out
or
mov
out
cwde
mov
jbe
out
cmp
add
xchg
xchg
icebp
jae
out
adc
inc
dec
jno
mov
or
xchg
xchg
adc
in
mov
out
push
sahf
push
adc
cmp
repz
push
push
fist
add
cmps
or
pop
or
jne
popf
add
and
pop
out
cli
es
iret
cmp
xor
xlat
aad
add
stos
es
add
popa
popa
lods
add
mov
icebp
cmp
es
add
pushf
pop
pop
retf
jb
es
mov
mov
and
fs
popa
addr16
es
sbb
out
out
mov
retf
add
ror
maxps
out
jmp
and
fs
push
adc
dec
xor
dec
adc
mov
mov
es
jmp
mov
lods
lods
add
sti
out
ret
and
mov
es
outs
mov
dec
mov
and
jbe
add
std
sub
cwde
cli
cli
add
out
movs
xchg
dec
sub
clc
(bad)
sysret
inc
popf
sbb
mov
cmp
adc
cmp
jmp
sub
ja
stc
mov
sbb
jmp
pop
pop
ss
out
sbb
xchg
pop
loop
loope
add
adc
ss
add
int3
div
dec
rol
out
test
dec
prefetch
mov
pushf
pushf
loopne
repz
cmp
retf
xchg
inc
jo
(bad)
out
int3
jno
out
adc
(bad)
arpl
sbb
std
push
es
add
inc
or
fbstp
out
mov
cmps
es
cmp
test
mov
adc
pop
shl
es
mov
xchg
mov
add
out
dec
clc
jmp
jbe
add
rcl
aam
out
cmp
mov
add
push
add
pop
sbb
popa
out
mov
es
jmp
rol
shr
es
add
(bad)
cld
cld
add
out
cmp
dec
add
sub
xor
es
ret
pusha
add
js
ss
mov
out
pop
add
ficom
movs
scas
cli
es
mov
out
cmps
in
imul
ins
leave
(bad)
xlat
xlat
retf
aaa
add
iret
out
inc
cmc
cmc
or
shl
adc
add
cmp
xchg
xchg
dec
dec
add
cmp
jo
xlat
xlat
sub
out
jns
aam
add
loopne
cmp
dec
push
xor
fsubr
mov
shl
sar
pop
mov
or
stos
stos
cli
jle
out
push
mov
add
jmp
es
out
sbb
add
mov
(bad)
xor
fimul
or
add
mov
adc
out
and
xlat
(bad)
in
add
aas
xor
pop
out
mov
sahf
into
into
jo
es
add
push
fsub
inc
sti
xchg
retf
and
lock
push
movs
xchg
out
fild
dec
cmp
retf
pop
push
add
xchg
xchg
mov
cdq
es
lds
pusha
push
es
pop
aaa
or
in
rcl
pop
adc
mov
sub
out
push
sbb
adc
pop
push
out
pf2id
ins
out
pusha
mov
nop
pop
out
lock
mov
call
fbstp
xchg
ja
or
(bad)
stos
rol
inc
(bad)
out
add
mov
les
ss
push
jecxz
mov
scas
mov
ins
sbb
out
mov
add
arpl
out
shr
es
cmp
enter
or
dec
dec
mov
loop
add
(bad)
fucom
out
call
mov
dec
scas
leave
add
out
add
mov
out
int
mov
jae
inc
outs
out
shr
lahf
lahf
xchg
inc
shl
out
jge
add
nop
out
mov
out
add
pop
pop
pop
mov
jmp
inc
inc
add
fucom
fidiv
ins
jnp
add
dec
mov
and
fldl2t
inc
inc
add
or
mov
cli
cli
icebp
add
and
dec
popa
rcl
mov
xor
sub
add
shl
jns
mov
iret
jg
fs
adc
es
xchg
mov
inc
es
(bad)
cmc
and
clc
add
add
in
or
and
rcl
addr16
cmp
call
sar
pop
add
pop
test
cmp
jns
shl
xchg
out
pop
iret
add
ins
sar
out
sbb
call
xor
pop
mov
stos
cmp
sub
inc
imul
out
dec
pop
addr16
clc
fdiv
out
add
cmp
push
xchg
mov
push
es
and
mov
add
data16
or
into
int3
sbb
repnz
add
leave
out
dec
or
dec
dec
xchg
cdq
retf
out
and
mov
repnz
xor
add
(bad)
out
das
add
jo
xchg
mov
aam
les
es
neg
test
xchg
inc
add
push
adc
es
inc
add
loope
xchg
(bad)
sahf
loopne
out
sbb
pop
es
imul
out
es
sub
es
push
and
xor
add
push
xor
mov
popf
add
mov
mov
repnz
cmp
push
mov
mov
inc
out
adc
dec
add
retf
out
daa
les
adc
add
outs
imul
scas
adc
out
stc
ret
cs
sti
add
xchg
imul
push
bound
add
out
mov
es
add
adc
jbe
add
pop
add
ss
aam
es
cmp
rol
add
dec
cwde
in
add
push
in
mov
in
xchg
xchg
lea
loopne
es
pop
add
mov
es
outs
jne
lea
pop
jmp
mov
ror
sub
pop
fcomp
xor
(bad)
cdq
add
sbb
sbb
jle
adc
add
dec
cmp
adc
loop
out
add
nop
sbb
cmp
add
add
in
lods
sbb
xor
xor
xchg
xchg
ss
retf
sub
lods
lock
cmps
push
out
add
push
push
jmp
retf
xor
push
es
pop
lods
stc
stc
xchg
cwde
push
es
dec
push
inc
inc
xchg
or
daa
test
add
inc
push
psubusb
xor
pop
ss
add
out
inc
inc
dec
es
add
xlat
push
retf
add
and
add
xchg
bound
inc
es
in
xor
mov
mov
mov
es
add
cs
fsub
(bad)
cwde
clc
add
iret
dec
nop
movs
jle
cmc
xor
out
out
daa
cmp
inc
(bad)
inc
push
rol
retf
hlt
mov
or
add
sbb
add
jl
add
fisubr
xor
out
out
cmp
sbb
jae
jbe
addr16
ds
sub
ds
pop
add
cmp
or
mov
jbe
mov
out
inc
sbb
and
out
sbb
jge
pop
adc
out
add
jmp
test
sub
mov
xchg
xchg
add
cs
ret
xchg
mov
es
pop
add
icebp
mov
daa
out
inc
cmc
dec
call
or
out
mov
xchg
jae
jle
pushf
sub
cmp
movq
iret
retf
xor
cmp
mov
cmp
jae
(bad)
adc
mov
inc
pop
mov
sbb
(bad)
in
and
sahf
sahf
aas
cmp
cmp
adc
inc
add
sub
adc
push
ret
out
xlat
addr16
(bad)
out
jnp
std
or
add
out
cdq
mov
or
out
pop
add
aam
or
movs
or
mov
and
es
pop
add
outs
mov
xor
out
add
push
es
push
jb
fist
rcl
int3
int3
rcl
out
es
fsub
loopne
ja
mov
and
pop
out
repnz
add
inc
rcr
imul
sti
enter
pop
push
inc
mov
or
push
rcr
scas
cli
cli
push
sti
es
in
in
in
scas
stos
sbb
and
ss
jo
and
add
imul
pop
out
push
push
test
xor
es
dec
add
sub
lahf
scas
out
fcmovb
cmps
fldenv
add
jae
leave
inc
into
and
add
push
out
in
movs
add
js
mov
mov
cmps
loope
push
or
daa
icebp
add
out
mov
retf
lods
add
mov
ss
int3
cdq
call
out
add
jge
sub
stos
mov
xchg
and
inc
xchg
or
mov
repz
out
add
push
movs
out
sti
call
in
mov
lock
sbb
cmp
outs
out
adc
mov
pop
je
inc
add
sub
adc
mov
jnp
adc
push
cmps
mov
in
sbb
jns
enter
xchg
add
mov
or
add
push
out
test
out
sbb
jg
adc
das
add
mov
and
add
(bad)
loopne
sub
xchg
and
adc
div
hlt
add
xor
(bad)
out
mov
in
lds
mov
cmp
add
out
push
fs
aam
pop
out
lds
add
jge
movs
mov
es
dec
mov
sahf
xchg
es
add
pop
add
xor
int3
int3
pop
xor
mov
out
pushf
jno
es
add
adc
xchg
rol
cpuid
mov
add
cmps
mov
mov
sbb
mov
add
or
push
add
pop
sbb
rcl
es
mov
add
es
jp
fcmovu
ss
es
mov
add
in
dec
xor
icebp
fs
add
mov
imul
adc
add
jl
mov
icebp
add
jp
(bad)
(bad)
pop
cdq
add
inc
das
pop
adc
call
add
xor
out
fmul
cmp
mov
je
add
push
jg
ss
loope
add
int3
(bad)
or
push
mov
cs
push
out
add
sub
popf
jp
out
cwde
add
pushf
add
cmp
cmp
jp
inc
ja
and
dec
scas
out
add
xchg
jmp
inc
mov
enter
add
enter
mov
jb
out
add
dec
dec
in
cmp
out
fcmove
ud2
or
arpl
out
dec
xchg
add
inc
and
mov
das
add
mov
movs
mov
in
out
sub
scas
adc
enter
mov
xor
inc
adc
loopne
das
es
cmc
inc
nop
nop
dec
sbb
inc
inc
rol
out
inc
mov
adc
out
loope
cmps
es
or
push
sbb
pop
shl
in
mov
sub
jno
add
push
cdq
adc
arpl
movs
aaa
out
loopne
dec
es
add
xchg
sub
jb
add
inc
sbb
cmp
or
scas
es
pop
js
jbe
jp
add
rol
xor
or
cmps
(bad)
je
add
xchg
xor
ja
or
pop
push
ds
es
add
into
aam
push
sar
out
mov
fbld
stos
cld
jb
int3
int3
rcr
inc
add
push
or
outs
jecxz
ds
add
dec
jnp
loop
sbb
call
push
sub
xor
es
cld
retf
test
clc
out
outs
cmp
enter
retf
rcr
lds
in
aaa
std
jno
neg
push
leave
leave
inc
push
out
add
aam
mov
mov
ret
bound
add
or
pop
sbb
add
add
outs
outs
xchg
xor
out
add
mov
pop
and
jmp
mov
cmc
add
adc
xor
fwait
or
and
mov
sbb
cmp
out
(bad)
ja
das
das
pop
test
es
pusha
or
rcl
es
mov
imul
adc
(bad)
ud1
rcr
out
lock
cmp
jno
je
out
pusha
mov
js
cli
sub
aam
leave
scas
push
sub
jae
stos
int
out
add
cdq
(bad)
out
xchg
add
movs
mov
cmp
sub
pop
out
out
cwde
es
mov
fnop
mov
out
add
test
sbb
mov
add
xor
push
fstp
and
es
loopne
jb
add
mov
jae
out
mov
hlt
jecxz
add
jns
fs
in
add
cli
dec
out
add
daa
es
in
mov
(bad)
adc
fsubr
jmp
data16
push
pusha
repnz
clc
mov
fsubp
add
lahf
(bad)
es
add
xor
es
sub
bound
pop
push
stos
out
cmp
shl
xchg
add
lahf
lahf
xchg
jg
ins
ins
call
stos
iret
(bad)
cld
push
dec
ins
out
add
test
and
jbe
pop
out
fcomp
bound
cwde
and
es
sub
or
mov
push
push
add
(bad)
out
icebp
sbb
ror
lock
inc
scas
mov
add
rcr
movs
add
out
xor
xchg
mov
verw
aas
and
popf
popa
xor
xchg
sbb
push
clc
repz
rol
aaa
js
pop
out
add
mov
jg
hlt
es
(bad)
inc
cmp
dec
dec
daa
addr16
out
xor
mov
and
out
out
(bad)
cmp
rcl
call
sbb
out
xor
add
aas
call
pop
pop
lock
out
int3
out
mov
add
repnz
imul
mov
rcl
out
adc
ss
inc
inc
mov
inc
sbb
and
inc
add
cwde
xlat
mov
cmps
fidiv
fcos
out
adc
arpl
or
es
outs
add
imul
xor
inc
mov
adc
out
add
inc
and
stos
out
sar
sub
xchg
lods
js
es
or
push
push
add
pop
pop
out
(bad)
es
sub
mov
es
push
movs
js
es
sub
repz
outs
es
aas
out
jne
cs
daa
out
pusha
cmp
bound
sbb
push
mov
scas
jnp
es
sub
cmp
icebp
lods
int3
nop
out
push
les
pop
pushf
clc
enter
sub
pop
out
push
std
add
and
inc
jg
mov
add
pop
sub
shr
mov
pop
cwde
into
out
sub
ret
rcr
add
xchg
cmps
or
ins
xchg
xchg
add
push
sub
aam
adc
pop
and
or
shl
or
xor
add
pop
cli
out
dec
add
(bad)
out
inc
inc
push
pop
pop
add
lods
out
or
ret
pop
add
in
fs
cmp
outs
cmps
push
out
out
sbb
and
repnz
(bad)
jne
nop
push
push
xchg
pop
int
lods
add
jbe
loope
es
sar
cmp
imul
mov
out
(bad)
jns
es
sbb
mov
mov
push
out
test
xor
push
add
out
mov
inc
lds
lock
push
push
std
sti
lods
add
cwde
xor
sbb
mov
add
daa
mov
fstp
call
push
and
sbb
out
mov
xchg
xor
cmp
cmps
enter
jg
add
out
lahf
in
mov
or
sub
or
adc
add
movzx
test
(bad)
or
add
(bad)
es
or
and
pop
mov
hlt
out
pop
ja
dec
dec
shr
mov
jae
out
(bad)
push
ret
ret
or
dec
push
mov
(bad)
and
pop
stc
cmps
(bad)
rol
add
push
jge
sbb
xor
or
ret
mov
or
xor
les
out
mov
out
mov
add
mov
cmp
movs
add
push
and
out
pop
dec
ret
clc
popf
sbb
ror
and
std
test
push
mov
push
in
jb
add
rol
gs
jecxz
lea
shl
ficom
add
cs
ror
xchg
aam
sub
mov
jne
ins
shl
repz
cmp
inc
movs
sbb
mov
mov
or
out
(bad)
rol
sar
out
add
bound
loope
out
in
mov
outs
ja
jne
sbb
mov
out
jmp
xchg
push
push
(bad)
jp
out
xor
ret
stc
aaa
mov
and
jne
es
adc
fsubr
pop
pop
add
popa
js
call
repz
add
sahf
xchg
enter
adc
push
dec
rol
rol
xchg
adc
aas
iret
xor
out
pop
add
jle
add
es
call
clc
push
mov
adc
int
push
add
imul
cmps
add
or
adc
cmp
mov
mov
xor
es
fadd
jmp
or
es
adc
mov
jns
and
cdq
cdq
dec
mov
retf
lock
in
fnstcw
adc
pop
out
jns
cmp
daa
bound
dec
out
pop
pusha
icebp
ss
mov
aaa
mov
fstp
inc
push
add
dec
mov
fldenv
pop
push
sahf
adc
push
mov
xor
leave
es
dec
cli
test
rol
adc
mov
imul
add
out
mov
jge
jp
or
outs
mov
add
mov
pop
movs
dec
push
es
add
push
push
mov
jb
clc
jo
in
sbb
int3
rcl
(bad)
jl
add
inc
jno
ins
leave
mov
es
add
retf
or
(bad)
or
repz
es
ret
add
es
aas
adc
js
ins
add
push
add
out
pop
dec
std
add
mov
cwde
adc
dec
dec
dec
out
rcr
adc
add
not
mov
dec
add
lods
test
add
dec
push
xchg
rcr
pop
or
push
imul
sub
ds
push
add
mov
loop
(bad)
sub
int
cmp
cwde
inc
inc
add
les
push
mov
sub
fld
jo
sbb
inc
aad
add
sar
jmp
es
dec
mov
jno
sti
(bad)
sbb
out
cs
sub
add
iret
mov
enter
add
sub
out
rcl
dec
es
pop
jecxz
data16
dec
dec
mov
(bad)
out
inc
adc
gs
add
inc
inc
adc
out
mov
mov
outs
and
mov
es
mov
push
xor
es
cli
xchg
cmp
out
mov
pushf
xor
mov
mov
add
aad
ins
or
lds
out
xchg
or
inc
mov
xchg
(bad)
movs
xchg
jmp
loope
out
dec
rol
or
add
out
dec
inc
adc
sbb
add
sbb
sbb
jo
jo
xor
jno
and
nop
or
cmp
jb
loop
mov
add
cdq
fsub
shl
inc
out
pop
sub
stos
and
leave
mov
cld
int
out
pop
add
es
out
ret
ja
jmp
pop
pop
mov
lods
movs
push
outs
popf
nop
and
xor
(bad)
out
int
into
es
pop
mov
fsub
and
mov
jmp
mov
xchg
pop
xorps
xor
jmp
or
mov
xlat
push
add
push
es
nop
cdq
add
ret
retf
popf
popf
lahf
stos
cmp
jg
in
add
inc
cld
dec
es
loop
adc
or
mov
jmp
es
cli
imul
add
pop
fild
out
test
xchg
pop
and
fdivr
hlt
ds
cmp
out
ror
test
adc
inc
pusha
pusha
push
push
enter
clc
js
push
sub
sbb
in
in
add
cwde
es
xchg
imul
es
data16
aaa
ins
cs
loope
cmps
sbb
pop
xor
jp
add
dec
popf
inc
add
repz
es
xchg
sbb
inc
scas
out
stos
out
lods
adc
adc
xchg
add
jecxz
pop
inc
inc
jge
int3
xchg
xchg
out
add
out
xchg
popf
mov
lock
ins
pusha
pop
pop
neg
out
shl
jmp
inc
stos
stos
add
xor
lock
cmps
pusha
pusha
cs
cli
sti
out
es
(bad)
mov
sahf
push
pop
pop
out
and
fcomp
jle
add
repnz
enter
rol
les
icebp
daa
add
aad
push
ret
dec
aam
int3
repz
adc
sub
jle
nop
out
inc
push
es
add
js
mov
mov
mov
out
jo
mul
add
outs
cmp
clc
mov
sub
repnz
jmp
dec
xor
add
out
in
lods
popa
popa
jns
cwde
out
add
imul
adc
enter
inc
inc
(bad)
repz
out
enter
adc
mov
clc
jmp
sub
sbb
sar
lods
inc
xchg
out
lahf
jle
lock
dec
popa
add
out
les
or
mov
and
cwde
pop
jge
adc
fdiv
fwait
es
cli
inc
mov
sbb
add
xchg
xchg
or
add
setle
daa
or
and
fwait
cmp
cdq
mov
out
add
jb
xchg
aad
or
mov
(bad)
out
jle
add
mov
jnp
fwait
push
jne
mov
lods
jl
shr
add
and
or
add
ss
push
out
sbb
add
cmp
repnz
sbb
loop
pop
pop
out
push
mov
aaa
jo
pop
add
ret
es
inc
(bad)
imul
mov
out
in
call
mov
sub
std
inc
test
test
into
pop
inc
add
shr
sbb
sub
movs
es
xor
pop
iret
iret
adc
nop
ror
pop
pop
push
mov
dec
cwde
cwde
cdq
add
out
mov
nop
lods
lods
rol
jae
fwait
(bad)
sbb
add
mov
es
sbb
cli
scas
adc
mov
add
in
outs
js
mov
out
push
mov
xchg
mov
out
jnp
mov
mov
jecxz
xchg
lock
dec
aaa
mov
add
(bad)
sti
sti
xchg
shl
out
push
or
jmp
test
iret
xor
push
inc
add
xchg
sub
dec
mov
std
out
add
mov
dec
jmp
mov
adc
mov
cmp
sbb
out
cmp
mov
inc
imul
call
add
shr
xchg
xor
das
out
add
test
add
es
loope
fdivr
es
clc
loop
outs
sub
sbb
add
stc
push
pop
es
push
adc
enter
es
call
jge
out
add
mov
add
out
xchg
sbb
push
sbb
add
lods
out
push
pop
adc
shr
out
addr16
dec
sbb
out
pop
cli
sbb
sbb
mov
xor
lds
push
je
cmp
(bad)
and
sub
jl
imul
cmp
enter
mov
into
inc
jbe
jne
add
shl
xor
xchg
out
cmp
add
sar
cli
out
xor
push
sub
out
out
dec
push
or
xlat
es
mov
push
push
cmp
add
and
pop
test
xchg
and
add
pop
mov
data16
jo
(bad)
push
es
cmp
sahf
sahf
lods
add
inc
or
out
xchg
mov
es
sar
dec
repz
sbb
ret
movhps
and
es
xor
(bad)
imul
cmp
into
stc
jecxz
out
or
sub
ret
out
fiadd
ja
pop
mov
xchg
fbstp
cmps
es
in
push
push
pop
push
retf
cdq
cdq
sub
inc
das
addr16
(bad)
ds
icebp
cwde
cwde
adc
stos
out
add
nop
loop
je
inc
out
sahf
into
add
xchg
inc
or
es
enter
add
out
xor
rcr
mov
mov
nop
sti
out
and
add
(bad)
or
xor
and
cmp
cld
cld
out
dec
push
out
jmp
mov
xor
push
(bad)
out
outs
jl
es
or
rcl
push
mov
aaa
(bad)
out
mov
movs
and
out
mov
pop
jl
or
mov
mov
sub
xchg
call
pop
addr16
sbb
out
sti
add
jmp
out
ja
add
jmp
dec
es
cwde
jg
es
sbb
jns
mov
outs
aas
aas
jnp
mov
int3
out
cwde
xchg
xor
mov
rol
cmps
test
adc
push
(bad)
mov
add
and
fisub
rol
push
ins
jns
cs
jle
not
out
jmp
and
xchg
out
add
mov
cli
cli
loopne
das
bound
xor
add
idiv
rcl
sar
outs
(bad)
push
add
scas
mov
lods
inc
into
xlat
xlat
push
loope
jmp
in
jbe
jns
mov
xchg
add
es
adc
cmp
sbb
add
add
pop
jae
popa
cs
xor
add
int3
sub
aad
adc
mov
lods
add
es
add
daa
pop
inc
es
mov
pusha
out
out
jp
add
out
xor
repz
dec
dec
out
add
sbb
jle
and
cmp
mov
loopne
mov
add
sbb
xchg
retf
and
or
xchg
add
bound
aaa
lods
lods
je
mov
jmp
in
or
add
mov
mov
popa
popa
std
pop
add
xlat
sub
sub
adc
add
out
iret
add
lahf
lahf
lods
clc
add
jecxz
aam
es
out
sub
jae
in
add
es
jnp
pop
fwait
fwait
shl
cmovg
mov
out
stos
jmp
add
or
ucomiss
out
lock
les
add
or
loopne
mov
ins
jmp
es
mov
xchg
es
je
push
push
call
push
cld
stos
stos
dec
push
aas
out
pop
call
jmp
rcl
das
sbb
add
retf
jp
mov
mul
test
mov
push
out
adc
loopne
mov
es
inc
rcr
cmp
aam
add
sub
or
out
in
cs
test
jno
add
sub
and
xchg
jbe
sub
inc
out
popf
(bad)
or
out
add
pop
es
xor
loope
add
out
jns
add
cmc
ret
fsub
jae
xor
pushf
bound
ja
xchg
mov
retf
cs
es
xchg
add
inc
xchg
and
sub
popa
add
loopne
out
sub
dec
cmc
cmc
inc
xor
out
jns
jae
aad
sbb
dec
dec
out
sbb
in
out
fbstp
pusha
ss
add
mov
push
push
aaa
pop
pop
clc
jno
add
in
cs
cld
(bad)
mov
add
inc
test
clc
and
pusha
add
cld
sub
sbb
pop
or
adc
leave
lods
lods
fisttp
in
out
sub
dec
iret
pop
out
add
scas
cmp
out
dec
pop
in
(bad)
pushf
mov
cmp
out
or
jns
mov
shr
mov
or
es
push
lea
add
fsub
jle
cmp
stos
fucomi
jmp
xchg
cmc
out
dec
add
je
adc
ret
xchg
es
cmp
and
es
mov
push
loopne
jge
out
add
and
out
out
fbld
add
jle
cmp
adc
cmp
lea
lods
xchg
mov
es
mov
sbb
in
es
add
daa
or
mov
popf
cmp
add
lods
dec
mov
or
(bad)
in
and
loopne
jp
addr16
jno
(bad)
out
or
add
aas
call
sbb
add
sahf
out
mov
add
into
jno
adc
(bad)
frstor
mov
xor
out
add
xor
mov
mov
pop
test
rol
loopne
es
in
rol
and
test
out
retf
or
aaa
add
mov
add
iret
out
mov
sahf
add
fldcw
ja
mov
or
push
jl
inc
add
or
mov
xchg
inc
out
add
push
adc
verr
sub
push
aam
call
out
(bad)
adc
into
out
cdq
cdq
add
xchg
xchg
retf
out
aam
jle
in
add
loop
adc
rol
out
add
outs
(bad)
aam
test
pop
pop
rol
out
js
add
fnsave
and
cs
cmc
add
jecxz
(bad)
sub
mov
jnp
sub
xor
sub
pop
es
add
fist
adc
test
adc
dec
add
cmp
out
add
mov
outs
(bad)
(bad)
sub
lds
out
jecxz
dec
inc
out
jbe
add
test
and
int3
mov
out
popf
out
mov
jno
cli
(bad)
bound
out
mov
push
add
jmp
xor
sbb
mov
out
(bad)
xor
inc
inc
inc
cmp
call
(bad)
mov
(bad)
movs
lods
lods
pop
stc
add
push
push
mov
fs
push
xchg
out
cld
add
pop
fcom
add
test
(bad)
pop
push
enter
mov
xlat
mov
jbe
and
sub
mov
(bad)
div
and
fiadd
add
cmc
mov
mov
push
push
pop
jp
es
push
xor
test
es
sti
push
jno
mov
call
inc
pushf
sbb
adc
pop
pop
not
aas
es
dec
stc
add
(bad)
retf
arpl
cmp
push
push
out
add
adc
push
mov
scas
xchg
test
lahf
out
xchg
pop
sub
add
pop
dec
out
ret
es
add
push
rcl
push
mov
es
add
rcl
dec
loopne
mov
inc
mov
out
or
es
or
pop
cmps
sub
(bad)
out
jmp
add
rcr
add
out
aad
sbb
(bad)
jle
call
fmul
int3
push
daa
(bad)
rol
and
out
or
sub
add
call
inc
inc
lds
shl
mov
pop
jne
imul
sub
mul
movs
dec
pop
add
inc
inc
cmc
pop
pop
and
and
repz
arpl
enter
adc
mov
mov
es
add
and
nop
pusha
xchg
(bad)
out
add
scas
inc
inc
jnp
mov
les
push
into
es
add
das
outs
outs
add
(bad)
out
pop
add
sbb
add
ins
pop
sar
add
jae
jecxz
test
daa
outs
outs
lahf
xchg
xor
and
xchg
imul
shl
add
pop
xor
je
adc
push
out
lea
xor
sub
add
sbb
push
dec
dec
pop
cmp
mov
out
push
(bad)
pop
cmp
xchg
les
cmp
ds
and
xchg
xchg
sbb
push
jnp
sbb
out
xlat
sub
ret
out
add
sbb
arpl
add
push
les
out
mov
es
mov
mov
es
fucomi
push
pushf
pushf
mov
mov
cld
fs
sbb
add
aas
cli
cli
nop
aad
es
dec
mov
movs
movs
inc
sar
cmps
xchg
xor
es
dec
test
lds
lock
add
sbb
scas
shl
aad
pop
add
repnz
push
(bad)
(bad)
add
sbb
out
or
xchg
add
or
mov
les
cld
add
jle
xor
xchg
fcom
rcl
pop
scas
out
mov
adc
xor
es
add
and
xchg
outs
ins
add
push
xor
out
cmp
add
mov
sbb
out
out
cmp
jne
sar
out
sbb
(bad)
cmp
jle
mov
in
jb
out
inc
adc
int
add
es
add
cli
cli
retf
add
fcmovnu
mov
push
out
iret
lea
sub
out
gs
or
out
pop
cmp
es
(bad)
sar
arpl
into
hlt
shl
xor
and
add
stos
jmp
shl
pop
add
bsr
sbb
call
rol
mov
out
shl
add
pop
mov
xchg
es
aaa
movs
add
lahf
mov
clc
push
out
dec
fnstenv
loopne
cwde
(bad)
xchg
out
repz
sub
retf
inc
and
out
add
push
xchg
inc
pop
sub
add
sbb
imul
inc
call
add
imul
and
out
add
(bad)
out
icebp
lods
out
(bad)
add
std
std
lds
repnz
iret
loope
and
add
loopne
xchg
and
cmp
adc
push
push
cmc
add
es
ret
les
test
out
aad
mov
cmps
jg
pop
cmc
leave
es
cld
mov
pop
cmp
loope
push
push
lods
add
cmp
ret
hlt
xor
sar
cmp
xlat
add
(bad)
(bad)
clc
es
fisubr
out
sub
fsub
leave
add
test
sub
test
adc
or
fwait
or
inc
mov
mov
adc
les
add
retf
lock
in
in
rcr
loopne
add
test
scas
scas
xchg
es
cld
jge
mov
xchg
mov
out
es
add
rcl
aad
mov
lea
aas
out
and
mov
or
lods
clc
push
add
clc
inc
(bad)
add
(bad)
rcr
daa
es
dec
sub
mov
or
in
and
aaa
loopne
xchg
fld
push
test
mov
cmp
add
fwait
xchg
add
inc
inc
mov
pop
sti
add
push
mov
popa
stos
fld
add
aam
sub
add
cmps
js
push
mov
cmp
sub
cli
jo
add
jmp
cmps
out
inc
pop
mov
xor
add
dec
mov
pusha
mov
retf
retf
add
nop
xchg
out
fdiv
es
imul
add
fisub
cwde
jno
es
out
ret
add
cmps
sbb
out
add
add
outs
jns
imul
std
(bad)
(bad)
cld
add
adc
mov
pusha
test
rol
aad
clc
out
sbb
sub
out
(bad)
es
xor
bound
sub
ja
pop
xchg
test
add
cwde
int3
cmp
push
jnp
adc
add
shl
mov
add
sub
xchg
adc
xor
hlt
push
push
fld
bound
out
retf
dec
add
push
not
in
mov
dec
imul
add
(bad)
in
dec
es
mov
data16
inc
inc
stos
mov
loopne
cmc
cmc
jmp
and
iret
pop
clc
es
adc
mov
int3
(bad)
and
popa
jno
add
out
sub
pop
push
cmp
xchg
or
pusha
pusha
xor
lahf
add
sysret
je
stos
stos
cmp
dec
add
lds
out
ins
xor
test
faddp
das
jno
sbb
mov
adc
mov
cmps
pop
(bad)
arpl
sub
dec
cdq
sbb
push
mov
loopne
es
out
sbb
dec
pop
pop
into
push
jo
retf
mov
mov
(bad)
out
add
and
in
cmps
dec
and
cmp
in
xor
adc
push
lock
shl
and
sbb
adc
ja
adc
add
in
jbe
leave
cli
dec
sub
mov
add
out
es
mov
out
movs
movs
in
les
mov
sbb
or
cli
mov
jne
push
push
add
es
pop
push
cmp
cmp
test
inc
push
out
push
(bad)
es
(bad)
scas
scas
inc
fild
mov
out
ins
dec
sbb
sbb
pop
mov
lds
sbb
mov
add
es
mov
nop
in
and
loop
sbb
into
test
movs
inc
ret
(bad)
les
lock
es
pushf
pushf
test
add
dec
or
(bad)
stc
es
add
cmps
arpl
fidivr
pop
pop
pop
shl
aas
add
dec
pop
js
out
or
mov
mov
or
jle
sbb
xchg
xchg
(bad)
and
retf
out
cmp
popf
push
dec
mov
es
add
pop
pop
inc
cmp
es
repz
jo
jmp
add
pop
in
sub
xchg
movs
aaa
add
add
dec
pop
pop
pop
cli
daa
adc
mov
inc
inc
push
mov
test
add
add
cmp
in
sub
out
add
push
inc
in
rol
jb
add
push
sbb
out
clc
pop
adc
in
pop
rcr
cdq
retf
shl
sbb
inc
xor
call
rcl
fs
out
inc
push
inc
imul
or
mov
movntq
daa
inc
adc
outs
fcom
arpl
(bad)
int
inc
out
idiv
xor
(bad)
jmp
dec
sbb
xchg
jbe
mov
push
int
fcomp
mov
mul
es
jns
xchg
xchg
sbb
es
push
jne
dec
jmp
and
sub
mov
es
setg
or
stc
xor
add
es
sbb
add
es
add
lods
aam
arpl
mov
add
and
adc
mov
add
(bad)
bswap
ja
es
mov
adc
mov
cmp
fcomp
xor
jbe
cld
call
add
mul
mov
or
jmp
push
or
pop
add
push
mov
(bad)
stos
in
dec
out
ja
fldenv
pusha
dec
aaa
cmc
push
push
add
fild
cli
pop
pop
icebp
add
rcl
sbb
xchg
add
add
out
pop
jmp
es
add
jne
push
icebp
mov
add
xor
push
mov
inc
es
mov
push
sahf
sahf
pop
nop
call
add
into
jo
and
add
out
movs
cmp
icebp
sar
jmp
push
fstp
add
out
xor
fsqrt
cli
ret
out
add
cmp
mov
lock
jno
push
pop
dec
es
add
fild
sbb
rcl
pop
mov
pop
shl
(bad)
pushf
mov
add
in
xchg
sub
imul
xor
jmp
pop
fild
pop
out
out
in
add
cmp
xchg
shl
out
and
es
aaa
mov
mov
hlt
out
sar
pushf
(bad)
out
add
cmp
repnz
out
lds
cmps
es
int
punpcklbw
test
loop
add
mov
mov
mov
out
jae
jb
hlt
out
jns
dec
es
cmp
add
dec
jg
sub
out
sete
xor
mov
pusha
(bad)
rcr
adc
add
out
sub
mov
cld
push
int3
int3
daa
mov
aas
pop
add
inc
dec
jne
jo
jno
out
mov
ss
and
jle
add
cmp
mov
(bad)
sbb
es
mov
popf
stos
gs
push
sbb
out
or
es
and
scas
scas
jg
mul
jae
add
jmp
es
mov
add
shl
add
mov
push
pop
sub
xchg
nop
nop
mul
les
cdq
add
es
scas
mov
mov
jg
add
clc
into
sbb
pop
out
ficom
jne
inc
add
or
add
loopne
ret
jecxz
imul
pop
jnp
xor
pop
ds
add
call
add
push
sub
sub
ret
out
in
(bad)
es
mov
adc
stos
es
sub
dec
mov
pop
pop
or
add
pop
aam
int3
int3
out
mov
xor
jo
add
ins
ins
mov
xchg
retf
(bad)
fsubr
add
cs
out
pop
sub
adc
mov
mov
in
sti
sti
push
inc
(bad)
es
add
cli
aad
rcr
dec
add
sub
mov
inc
cld
cmps
add
idiv
and
(bad)
rcr
adc
add
inc
out
xor
retf
retf
dec
aaa
and
mov
xor
add
sub
adc
lea
add
jbe
add
xlat
jle
sbb
mov
bound
popf
mov
int3
add
mov
jg
bnd
dec
ss
ins
test
mov
loop
jle
lock
std
stos
stos
loopne
icebp
out
pop
add
pop
out
inc
ds
add
add
cmp
hlt
inc
es
dec
outs
fcom
adc
sbb
dec
sub
jmp
and
jb
loope
add
fwait
test
and
add
or
out
and
mul
sub
hlt
mov
inc
add
push
icebp
mov
lahf
pop
(bad)
pushf
jge
sub
inc
shr
xor
out
pop
in
inc
sahf
xor
add
inc
or
add
pop
xchg
out
sar
or
mov
outs
fsub
and
cwde
stos
add
jae
add
xor
jg
out
jp
mov
mov
cmps
push
add
adc
mov
mul
pop
inc
rol
retf
adc
out
shr
es
add
ficomp
or
out
out
mov
jecxz
jmp
sbb
add
arpl
mov
add
cli
cli
xchg
fucom
ds
mov
fcomp
inc
bound
mov
ret
or
aad
and
ins
push
or
rcr
add
lds
push
xor
sbb
nop
sub
out
pop
pusha
add
jnp
sub
data16
sahf
out
out
pop
add
in
fadd
movs
cli
lods
ins
sub
xchg
shufps
mov
es
dec
xchg
rcl
add
sti
or
hlt
jge
push
shl
push
jl
cld
addr16
inc
out
add
nop
es
arpl
in
in
inc
mov
loopne
out
div
add
popa
jae
daa
(bad)
xor
ret
rol
test
pop
or
push
rcl
(bad)
(bad)
jns
and
add
mov
adc
push
add
add
fs
repz
es
cdq
push
pusha
pusha
pop
push
mov
fmul
xor
(bad)
mov
xchg
es
ss
add
pop
sub
mov
xchg
and
mov
lock
or
mov
add
jge
sti
leave
fwait
out
dec
ins
(bad)
cmp
push
add
loop
sub
or
cmp
fadd
stos
stos
adc
(bad)
out
ror
add
(bad)
or
shr
test
out
adc
cwde
call
out
es
pop
sahf
sahf
push
sbb
pop
pop
icebp
lock
std
jmp
loopne
shl
shl
loopne
add
es
in
clc
cmp
jb
add
call
push
test
add
es
dec
retf
loop
stos
sbb
out
xlat
push
and
adc
jns
xchg
xchg
pusha
popa
pop
xchg
xchg
mov
std
xor
outs
sti
mov
jo
jmp
daa
out
and
stos
fldln2
rcl
loope
or
out
ds
and
gs
out
mov
js
mov
xlat
cwde
dec
dec
cmps
addr16
out
and
(bad)
cmc
iret
ins
out
in
in
popa
popa
nop
push
mul
mov
inc
sbb
add
ss
ficomp
fxch
out
ja
sbb
out
repnz
push
push
fnstsw
mov
add
inc
cmp
add
sbb
add
add
and
in
push
push
add
out
adc
push
es
mov
mov
rcr
mov
retf
pop
out
mov
str
out
inc
pop
ret
es
mov
mov
pop
sti
out
js
mov
in
mov
out
imul
hlt
int
jbe
adc
stos
dec
add
jecxz
add
sbb
add
scas
hlt
sub
imul
ja
bsf
lahf
mov
and
out
sub
push
inc
inc
push
daa
shl
add
sbb
aas
push
out
mov
cs
pop
(bad)
sbb
fcomp
xchg
sub
ja
out
xor
test
lods
push
push
aam
(bad)
shl
xor
push
dec
add
and
leave
cld
dec
add
pop
(bad)
cmp
push
xchg
frstor
add
loope
addr16
(bad)
ss
xor
dec
pop
pop
cmp
jb
cmc
add
cwde
out
shl
mov
xchg
aad
stos
mov
stc
stc
dec
dec
cs
jne
add
aam
(bad)
(bad)
out
and
rol
aaa
jmp
push
xor
dec
popa
ds
xchg
mov
or
es
mov
sub
mov
jb
add
inc
cmp
jle
test
jl
xor
sub
xlat
add
out
inc
mov
mov
out
cmps
mov
int
rcl
mov
cmp
xchg
xchg
xor
or
loop
add
jno
outs
outs
push
int3
out
(bad)
add
rcr
mov
imul
add
jae
movs
push
inc
fcmove
enter
out
(bad)
into
mov
xor
sbb
mov
out
test
sbb
(bad)
out
jno
and
pop
outs
add
sti
ja
(bad)
nop
js
sub
pop
jle
out
clc
mov
loop
jne
stc
add
imul
add
retf
repnz
cld
es
rol
xor
lea
es
pop
add
fwait
mov
fild
jmp
mov
and
inc
ficom
xchg
or
daa
out
mov
or
das
shl
mov
mov
or
sub
out
or
dec
xchg
out
add
mov
test
jg
test
add
dec
es
popf
daa
loopne
sub
xchg
ss
inc
pop
out
and
xor
aaa
inc
inc
shl
xchg
sub
loop
jno
pop
pop
add
in
add
cmp
jge
dec
inc
retf
xchg
es
gs
dec
(bad)
dec
out
or
or
popa
sbb
pop
xor
mul
pop
inc
pop
jno
sar
and
shr
or
inc
scas
out
pop
add
lea
test
loop
into
loope
add
test
add
stos
push
out
(bad)
daa
or
add
outs
jl
sbb
add
sbb
sbb
sti
jno
adc
sbb
xor
mov
inc
pop
icebp
icebp
push
enter
rcr
add
out
xchg
gs
add
ror
jno
or
sbb
mov
std
aaa
es
push
sbb
js
cwde
pop
jge
cmc
xchg
push
mov
xchg
sbb
icebp
mov
xchg
push
enter
pop
(bad)
es
fild
adc
lock
repz
push
add
shl
jb
aam
add
test
mov
mov
fnstsw
jl
arpl
lods
pop
jp
cs
out
repz
fsubr
rcr
add
outs
jno
fcomp
dec
test
es
mov
add
lea
sbb
addr16
and
jno
out
in
adc
out
push
add
in
in
push
sti
int3
out
je
add
aam
out
repnz
out
add
xor
push
and
dec
dec
add
out
out
pop
aam
cmps
add
popf
out
mov
fwait
inc
add
aad
mov
int
out
or
add
ror
mov
mov
add
icebp
aas
pop
jae
sbb
pusha
push
bound
dec
jecxz
mov
dec
dec
jnp
sub
pop
add
add
push
push
sbb
hlt
xchg
inc
inc
xlat
inc
xchg
out
and
mov
(bad)
push
mov
sub
es
aaa
adc
add
and
dec
out
inc
fnstsw
mov
mov
ret
out
cdq
scas
push
add
sbb
xlat
or
mov
(bad)
xor
dec
out
sahf
add
rol
ror
mov
sub
lock
loopne
add
nop
jle
outs
jmp
hlt
loope
scas
scas
adc
std
out
popf
mov
add
outs
pop
movs
out
test
out
aas
jnp
sub
adc
mov
in
xchg
mov
sti
add
inc
inc
xchg
dec
and
shr
add
mov
das
dec
cld
mov
add
sub
jl
add
push
call
dec
iret
out
aas
test
pop
cwde
std
mov
daa
daa
inc
out
out
add
mov
xlat
and
gs
or
dec
add
cld
es
push
out
sbb
jbe
icebp
out
sbb
outs
mov
out
jmp
pop
out
pop
(bad)
adc
pusha
push
lock
mov
out
cmp
pop
es
fwait
sub
test
inc
add
repnz
cs
data16
add
loopne
pop
in
aad
icebp
or
jmp
adc
push
push
add
js
and
add
sub
add
pop
hlt
out
(bad)
shl
sub
movs
cmp
test
cmp
es
stos
out
xchg
xchg
mov
sub
or
pusha
pop
int3
int3
jne
add
xor
lods
stos
out
mov
add
add
pop
mov
dec
rol
xchg
aas
out
movq
es
or
out
add
loope
outs
sub
add
jmp
aas
push
sti
mov
dec
inc
sbb
jmp
and
es
push
add
xor
or
(bad)
loop
lea
cmp
int
out
dec
loopne
lods
jnp
out
out
push
rsqrtps
in
jmp
rcl
mov
pop
out
adc
pop
ins
ins
mov
push
out
aam
fiadd
add
pop
xchg
out
loop
loopne
dec
movs
call
xor
aad
dec
out
push
mov
es
adc
pop
aam
pop
inc
xchg
add
mov
mov
or
pop
inc
inc
mov
xchg
sub
aam
xor
push
cdq
add
sub
sbb
dec
loop
es
dec
add
inc
inc
add
adc
add
and
lds
cmp
adc
inc
xor
mov
push
(bad)
jo
out
lahf
jg
int3
int3
add
out
add
(bad)
push
(bad)
out
jmp
push
out
retf
adc
mov
out
fwait
mov
js
add
div
fs
add
add
ss
dec
(bad)
getsec
jbe
pop
pop
pop
dec
xor
or
push
cmp
cdq
out
dec
add
sub
inc
push
xor
repz
fstp
adc
add
inc
pop
jmp
jl
(bad)
cmp
or
out
ret
adc
iret
iret
jg
add
es
clc
cs
les
bound
pop
movs
jne
inc
or
pushf
add
movs
movs
sbb
pop
out
and
jnp
stac
or
and
sbb
fld
or
and
ficomp
pushf
es
cld
rol
rol
fsubr
out
add
fiadd
pop
es
in
test
adc
jnp
(bad)
cli
jmp
pop
add
push
ss
xor
out
xor
push
repz
and
call
and
ror
clc
push
add
sub
inc
inc
je
pop
xchg
jne
add
sbb
mov
jmp
inc
out
dec
pusha
cs
add
cmp
xchg
out
jmp
loop
mov
xlat
add
dec
outs
outs
shl
out
mov
stos
shl
pop
pop
add
cdq
fist
adc
out
add
test
sub
in
and
or
pop
jl
jno
add
es
or
sub
add
arpl
fst
out
and
or
cmp
out
xchg
cmp
rol
pop
mov
cs
sbb
aaa
mov
add
mul
jmp
or
sahf
jne
and
push
push
pop
pop
add
clc
mov
test
mov
add
(bad)
and
icebp
pop
add
test
inc
inc
jge
loopne
nop
add
add
out
stc
popa
add
push
jo
push
out
leave
imul
pop
pop
aad
xor
in
in
aaa
jge
cmp
sub
es
(bad)
ficom
in
in
es
cmp
lea
es
fst
je
mov
sub
pop
repz
js
sub
cmc
ja
jmp
outs
sbb
fcom
cmp
out
mov
add
out
ficomp
jp
popf
add
cmp
cmp
xor
fs
xchg
jae
movs
out
xchg
xchg
mov
cli
out
push
sti
fisub
gs
ins
add
xor
(bad)
mov
add
push
imul
add
call
sbb
jo
add
aad
push
ffreep
es
pop
or
and
add
es
ret
add
das
outs
add
es
pop
clc
adc
sub
loopne
add
add
mov
sar
lds
popa
adc
jl
dec
add
out
push
pusha
imul
lock
jbe
add
hlt
cmp
push
cs
add
es
add
pop
mov
out
sbb
fwait
sub
push
cmp
and
pop
xchg
pop
pop
out
jnp
jb
cmps
and
adc
mov
cmp
mov
ja
add
xchg
pop
rcl
(bad)
adc
clc
clc
add
cwde
out
push
xchg
push
cmps
cmps
sub
mov
sub
push
hlt
hlt
cli
mov
inc
jo
adc
fst
sbb
out
lea
es
push
(bad)
cs
test
adc
add
mov
add
xchg
gs
mov
jbe
add
popf
es
test
push
pop
pop
aas
out
rol
loop
push
lea
(bad)
or
int3
loopne
jg
mov
push
jmp
out
jnp
mov
add
pop
out
xor
das
or
jno
push
into
call
out
aas
gs
xchg
xchg
add
push
fadd
mov
or
(bad)
cmp
jns
test
fadd
jp
(bad)
call
inc
xor
or
cmp
add
imul
cwde
pop
and
gs
mov
jmp
dec
es
add
adc
cmp
add
ror
dec
es
add
pop
movs
lods
cmp
jns
cli
hlt
push
push
add
into
movs
in
aad
xchg
es
or
arpl
test
pop
int
cld
cmp
sub
jo
add
(bad)
adc
pop
test
gs
out
dec
mov
movs
nop
push
push
add
push
es
stc
aam
sbb
mov
aaa
mov
or
sbb
out
sahf
cdq
nop
add
xor
out
inc
sub
es
mov
sbb
out
stos
xchg
xchg
push
hlt
lods
out
out
jmp
addr16
cmp
out
add
adc
fidiv
mov
aad
inc
add
cmps
and
push
aas
sbb
add
out
dec
es
pop
mov
push
movs
std
stos
bound
inc
mov
mov
icebp
xchg
imul
sub
jne
push
int3
adc
xor
retf
sbb
mov
add
int
push
rcr
cmp
sbb
fild
out
out
loop
cmp
imul
add
lods
cmp
icebp
jns
ja
les
jge
in
out
mov
add
(bad)
xor
and
dec
out
test
add
in
(bad)
add
out
and
mov
int
es
fsub
xor
nop
leave
push
out
es
push
mov
out
mov
into
jge
lods
lods
test
jnp
and
xchg
pusha
mov
jo
stos
push
call
add
(bad)
xor
in
mov
stos
pop
mov
jecxz
xchg
jle
mov
(bad)
mov
inc
and
adc
dec
(bad)
adc
out
add
ror
out
sub
xchg
fs
add
and
out
inc
adc
es
mov
test
xlat
xchg
add
cmp
mov
data16
jmp
inc
iret
inc
add
mov
and
add
jns
mov
out
add
fwait
or
outs
test
jo
add
xor
test
es
ins
call
xchg
add
daa
rcl
add
(bad)
retf
xchg
es
je
into
into
xchg
pusha
dec
es
jl
inc
add
js
ss
jp
aam
cmp
or
mov
js
mov
out
add
cmc
mov
clc
ret
movs
movs
add
cwde
cwde
adc
pop
out
in
jge
push
sar
jae
mov
leave
mov
out
loop
setp
add
add
out
pop
sbb
fld
out
or
stos
mov
icebp
hlt
pop
out
push
int
aas
aas
pushf
fild
iret
add
(bad)
cld
xchg
add
mov
pop
aaa
sub
mov
cmp
out
mov
cmp
clc
add
inc
xchg
lods
cmp
cmp
pushf
jb
push
inc
ins
(bad)
dec
in
pop
add
ret
es
fimul
(bad)
add
es
aad
stos
xchg
xchg
(bad)
repz
nop
mov
cmc
je
add
jo
pop
outs
es
lock
push
aaa
aaa
lea
out
call
das
xchg
loope
test
mov
add
(bad)
aas
or
jns
pop
sbb
out
pop
mov
les
xor
loopne
stos
dec
dec
fmul
inc
cwde
add
xchg
cmp
shr
and
gs
stc
out
dec
inc
xchg
add
and
loopne
enter
out
jo
daa
sbb
out
pop
out
int
mov
add
lods
xchg
jae
mov
sub
pop
add
out
mov
ins
add
lock
mov
retf
mov
add
or
inc
push
push
cwde
add
es
mov
lds
add
pushf
out
data16
es
add
aad
hlt
push
add
js
add
cmp
pop
test
sub
lea
mov
(bad)
loop
cmp
push
add
xchg
sub
out
mov
add
dec
lock
and
dec
or
xor
fsubr
ins
sahf
out
add
and
jmp
push
es
jb
sti
arpl
stos
nop
es
gs
jg
es
add
mov
icebp
movs
jmp
out
shl
jmp
lods
jnp
out
or
fs
add
pop
push
add
out
enter
jmp
jns
(bad)
cmovs
je
jle
sbb
jne
rol
dec
or
out
mov
out
out
ss
leave
push
es
(bad)
int
out
cmp
add
push
xchg
jle
outs
sub
cmp
in
sar
inc
sbb
xchg
add
das
das
pminub
call
out
rol
fcomp
cmp
scas
out
sbb
jl
mov
pusha
and
or
inc
and
lock
enter
daa
and
fwait
adc
or
jg
add
shl
sub
stc
mov
out
fwait
mov
repz
popa
popa
cmp
in
es
xor
xlat
cli
cli
cdq
jmp
es
inc
add
loope
pop
push
(bad)
adc
or
sub
jg
sub
adc
pop
cmps
rol
jae
mov
sub
adc
dec
dec
inc
xor
out
adc
dec
dec
popf
shl
out
add
sbb
fucom
xor
repz
scas
out
cmp
dec
dec
aad
xchg
out
pop
inc
cli
mov
hlt
jo
add
mov
jae
mov
mov
adc
inc
je
es
cs
out
out
push
dec
and
or
jnp
mov
es
pop
fadd
add
(bad)
cli
es
xchg
dec
bound
adc
push
cmp
outs
cdq
dec
sub
jg
add
lock
xor
cwde
ins
xchg
nop
add
out
iret
and
fstp
fst
push
and
sar
out
or
je
stos
or
mov
mov
mov
es
add
movs
sbb
push
(bad)
sbb
es
and
out
out
shl
es
mov
jge
add
fist
mul
popf
aam
add
xor
shr
es
sbb
jmp
mov
out
and
cmp
add
inc
cmp
adc
or
popa
cmp
scas
sbb
loop
loopne
add
inc
xchg
cli
push
push
sub
out
push
imul
div
add
inc
es
fnstcw
add
pop
scas
mov
push
lock
lods
pushf
pushf
pop
mov
mov
jge
add
lahf
jns
lds
add
pop
mov
xchg
jmp
or
loopne
ja
mov
or
(bad)
in
or
retf
dec
pushf
out
and
out
sub
in
ins
add
jmp
xor
pop
daa
push
sub
es
(bad)
lods
add
test
push
sub
add
loope
sub
and
adc
xor
call
cmp
jne
inc
dec
mul
out
mov
mov
out
aaa
add
fucom
call
mov
fiadd
clc
or
xlat
dec
(bad)
jo
es
push
out
mov
xchg
push
js
out
sbb
and
or
jae
es
fcom
push
icebp
into
es
or
mov
rol
and
das
mov
or
cmp
pop
xchg
aam
into
sbb
out
xor
mov
dec
xor
out
cdq
rol
pop
imul
add
js
push
fidivr
repnz
jb
out
or
out
cli
aad
cwde
popf
add
out
jne
add
inc
stos
cmp
sub
add
mov
outs
es
add
shr
clc
rcl
sub
and
pop
jb
dec
xor
test
adc
adc
ror
movd
out
movs
adc
es
mov
jo
jge
jne
add
or
movs
movs
out
sahf
add
sbb
pop
add
add
test
mov
out
sbb
adc
add
pop
iret
es
add
test
xchg
sub
out
icebp
cmp
addr16
imul
ror
in
push
je
popa
add
leave
out
add
push
pop
or
out
and
mov
inc
sub
add
cli
stos
mov
(bad)
xchg
out
jmp
into
rol
sub
mov
add
inc
stos
movs
cmp
sti
pop
dec
dec
or
dec
out
pop
mov
es
inc
pop
jbe
jns
push
cmp
rol
shr
push
das
out
jo
adc
out
or
out
idiv
inc
inc
inc
jne
out
xchg
jl
cwde
cwde
call
out
or
or
mov
lds
je
sbb
aas
lahf
stos
shr
dec
cmps
out
adc
jno
loopne
add
jb
rcl
out
jmp
js
es
xor
xor
add
add
out
adc
cmp
out
add
push
out
rcl
add
test
add
inc
push
fldenv
loop
arpl
add
pop
xor
mov
aaa
jg
add
out
or
add
push
out
es
jecxz
jae
test
test
dec
out
neg
cmp
daa
push
push
scas
cld
add
stc
int
sbb
ret
mov
adc
pop
mov
cwde
ror
std
push
adc
push
push
stos
and
lock
fdiv
inc
pop
add
jg
shl
out
and
cmp
lahf
and
out
or
mov
out
mov
fsub
test
test
jne
add
adc
mov
aas
es
inc
repnz
cwde
ins
mov
lea
xchg
sbb
rol
jp
pusha
mov
and
ds
pop
pop
add
sahf
out
stos
xor
es
add
stc
push
push
movs
jae
out
out
out
out
out
mov
sti
xchg
push
aaa
aaa
ficomp
es
mov
and
jl
push
shl
rol
sbb
rcl
add
clc
jno
and
ins
dec
repnz
pop
es
nop
aaa
mul
in
cmp
and
and
push
mov
or
out
jbe
cmp
jo
sub
push
or
fcmovnu
outs
out
pop
scas
scas
add
out
mov
inc
es
dec
rol
mov
jne
xchg
xchg
add
das
icebp
out
cdq
packsswb
pop
push
cs
neg
mov
sbb
xchg
out
inc
pop
mov
and
jmp
ins
pop
mov
lock
inc
outs
and
js
es
adc
push
mov
lods
lods
add
leave
jns
call
xchg
sbb
inc
and
or
inc
jge
(bad)
js
out
pop
add
jle
pushf
pop
pop
dec
pop
add
or
aas
xchg
add
adc
push
psrlq
aad
dec
cmps
retf
call
sbb
jle
adc
fidivr
mov
ss
sti
out
add
es
(bad)
and
dec
adc
movs
jnp
out
aaa
repz
xchg
add
inc
fwait
jmp
je
cmp
xchg
xchg
(bad)
sbb
xchg
mov
js
or
pop
es
pop
leave
pop
jmp
push
and
es
and
es
cmps
fs
cmc
dec
sbb
imul
(bad)
cmps
call
rol
pop
clc
clc
das
inc
mov
sub
adc
xor
add
pop
out
pop
(bad)
cmc
add
mov
adc
add
and
retf
xchg
repz
jmp
into
nop
(bad)
mov
adc
cwde
cwde
jle
add
mul
add
shl
out
icebp
and
call
out
sub
enter
dec
add
or
in
mov
add
pop
in
add
jg
ss
mov
jno
sbb
mov
pushf
sub
rol
inc
es
addr16
loope
or
out
js
ja
out
dec
dec
mov
cmp
jno
imul
and
dec
out
cmovbe
add
mov
fs
add
pushf
(bad)
jp
(bad)
or
add
es
(bad)
sbb
pop
pop
add
cmp
pop
repnz
(bad)
pushf
inc
jo
jl
lods
out
add
cli
adc
out
push
inc
pop
cmc
cmc
push
add
out
cdq
test
es
adc
imul
js
test
lock
mov
(bad)
into
adc
xor
inc
out
shl
or
mov
adc
push
(bad)
test
jo
cmp
push
lea
xor
nop
repz
xchg
mov
pop
add
retf
cmp
adc
cld
adc
add
cmp
aad
es
iret
or
repz
add
repnz
fwait
jmp
mov
adc
mov
jnp
add
adc
out
xchg
or
inc
ds
sub
jnp
push
push
push
mov
les
fcmovnu
sbb
pusha
es
imul
sbb
pop
inc
(bad)
out
add
mov
out
retf
and
jmp
adc
add
ret
push
out
inc
jl
(bad)
mov
add
adc
dec
loopne
mov
xchg
out
add
jle
sub
into
es
inc
mov
add
push
jl
lahf
jne
cmp
stc
add
loope
xlat
dec
jo
sbb
add
out
call
xchg
jp
xchg
clc
enter
imul
int3
xchg
fsub
hlt
hlt
bnd
jl
add
add
or
es
mov
movs
cdq
add
or
pop
or
add
mov
fs
or
xor
lock
fiadd
movs
mov
push
(bad)
dec
add
xor
loop
add
hlt
in
(bad)
out
ret
call
out
jno
inc
es
(bad)
ins
jge
pop
(bad)
mov
ss
fwait
fwait
sub
lock
aad
(bad)
mov
out
jns
jmp
rcr
ins
shl
es
div
inc
inc
inc
not
out
push
(bad)
mov
xchg
pop
aas
loopne
iret
add
add
push
imul
(bad)
xlat
les
add
and
repnz
add
jae
cmps
sub
jg
outs
fadd
mov
pop
pop
add
neg
es
lock
jmp
in
in
mov
loope
add
out
bound
test
add
jle
and
scas
mov
es
popa
add
mov
out
or
es
xor
test
movhps
pop
mov
ja
xchg
sub
cmp
jge
je
add
sbb
bound
out
imul
mov
rcl
xor
shl
mov
add
lds
cmp
test
push
jmp
(bad)
out
loop
cwde
es
int3
add
clc
test
mov
jno
cmp
inc
or
in
es
push
cmp
es
push
or
lea
and
pop
out
mov
out
push
mov
test
in
inc
shl
dec
ja
out
jmp
shl
aam
lds
add
add
test
add
and
pop
test
rcl
and
dec
es
push
dec
dec
dec
add
les
mul
xor
push
jg
sbb
push
es
cmc
movs
adc
xchg
mov
int3
out
add
es
jns
lods
out
jl
lock
push
add
(bad)
out
js
rol
pop
ins
out
mov
test
mov
push
dec
out
(bad)
add
outs
jg
push
mov
dec
pushf
fwait
push
mov
mov
shl
mov
jmp
movlps
ins
test
pop
jno
push
aas
test
(bad)
pop
pop
clc
out
out
xor
and
dec
push
add
fnstsw
pop
pop
pushf
shl
sbb
loopne
test
xlat
or
or
xchg
retf
es
cdq
sbb
fs
shl
push
ins
add
daa
daa
out
jno
inc
inc
cmp
jmp
test
out
in
add
movs
sar
add
ds
imul
lahf
jge
cmc
add
push
mov
sahf
hlt
out
add
add
sbb
pusha
pushf
xor
push
jl
cdq
out
loopne
mov
add
mov
or
jbe
lahf
out
add
(bad)
push
imul
leave
pop
call
cli
adc
jmp
or
rcr
mov
add
div
shr
fs
call
sbb
add
cmps
cmp
mov
fstp
jle
sti
sti
cmp
loopne
add
inc
add
adc
push
pop
add
dec
add
xor
pop
sub
add
(bad)
fnstenv
mov
add
pop
sub
push
aam
add
test
out
jp
cmc
es
add
aad
and
xchg
sub
es
xor
stos
js
add
mov
inc
cmp
wbinvd
(bad)
sub
addr16
leave
movs
add
cmp
jmp
in
fimul
jbe
dec
es
sub
into
into
mov
lahf
dec
dec
sbb
add
es
sbb
fucomp
cwde
cwde
test
add
fisubr
sub
out
xchg
add
hlt
out
retf
jae
mov
out
inc
fist
adc
out
rcr
es
loope
aas
popa
and
pusha
es
sbb
lock
cmp
pop
pop
ins
mov
add
out
ror
jecxz
mov
jnp
ds
and
dec
mov
clc
out
add
hlt
pop
pop
mov
mov
cmps
in
in
addr16
mov
pop
pop
sub
mov
jmp
dec
adc
xor
neg
cmp
inc
es
mov
mov
lds
cmp
mov
cmp
pusha
ins
out
aaa
mov
add
leave
dec
loopne
jnp
or
mov
es
das
call
pop
es
mov
rcl
out
ror
xchg
repnz
icebp
mov
stc
add
out
or
enter
xor
out
out
mov
ror
inc
out
add
arpl
(bad)
in
or
or
out
mov
repnz
xchg
mov
cmps
sbb
cmp
xchg
(bad)
jp
in
out
addr16
es
fst
push
push
add
add
xchg
ret
iret
popa
loop
add
es
out
and
es
sub
inc
add
add
jae
sub
add
scas
add
add
pushf
cmps
cmps
fbstp
out
mov
push
xor
ins
jmp
out
repz
loopne
icebp
es
out
aad
fsub
mov
ja
out
push
test
je
jb
add
inc
fwait
jno
cld
sti
clc
sbb
(bad)
and
xlat
xor
push
or
daa
hlt
push
cmp
out
stos
jb
pop
pop
js
(bad)
out
(bad)
inc
es
add
popf
outs
sub
jg
jmp
adc
jp
jl
add
cdq
adc
ror
out
add
retf
bound
std
movs
out
aaa
add
outs
repnz
add
das
fs
adc
xchg
ret
std
or
add
pop
mov
inc
scas
scas
shufps
sbb
cmp
mov
shl
add
out
retf
test
scas
scas
push
cwde
loopne
jp
ja
add
sti
out
pop
mov
jmp
push
add
sbb
jecxz
(bad)
outs
add
pop
es
test
or
out
fcomp
(bad)
out
(bad)
xlat
pop
pop
cwde
mov
add
xchg
out
(bad)
cmp
out
inc
scas
scas
test
push
es
add
addr16
(bad)
xor
hlt
out
dec
add
ds
adc
add
mov
cmc
and
lods
add
imul
rol
xchg
retf
mov
cs
add
out
adc
add
out
out
dec
sub
out
cld
dec
push
lea
(bad)
int
add
mov
add
xor
leave
add
jno
es
ja
addr16
sbb
es
pushf
sahf
inc
cmps
cmps
ficom
jae
add
loope
arpl
out
jns
add
test
movs
push
es
call
(bad)
shl
push
push
add
aad
inc
inc
ja
movntq
out
jl
retf
out
pop
out
das
xchg
pusha
and
xchg
jl
add
fsubr
data16
out
pop
int3
das
imul
(bad)
aam
dec
mov
fs
xor
or
add
movs
pop
cmp
es
mov
jbe
add
mov
hlt
jnp
sub
ret
add
out
cmps
loopne
aas
out
cmps
add
sbb
pop
nop
sar
jmp
jmp
ja
dec
adc
test
es
push
movsx
cmp
pop
or
push
pop
push
test
jmp
out
leave
jae
add
jb
inc
out
fcom
and
cmp
ins
add
cmp
push
fild
ret
out
and
es
mov
add
xor
stc
gs
loopne
out
mov
aam
out
test
add
jmp
xor
add
inc
out
imul
add
sub
pop
es
fcomp
cmp
add
dec
out
sbb
pop
cmp
je
xor
out
lods
xor
add
push
ret
push
xchg
xchg
dec
imul
add
mov
out
jle
dec
cs
add
adc
out
into
push
pusha
add
jmp
xor
ret
nop
xor
sbb
sbb
(bad)
daa
push
aas
out
push
fmul
ins
cmp
lods
pop
dec
dec
pop
xor
out
mov
call
(bad)
out
mov
daa
add
out
stc
mov
shl
stos
jno
test
das
int
out
mov
cmp
sbb
retf
push
add
loopne
rol
push
jno
mov
mov
sahf
pop
es
lods
push
loop
dec
dec
xchg
les
das
or
jo
es
rol
lods
lods
ins
cmps
dec
add
add
mov
pusha
rcr
add
fcmovb
out
idiv
add
push
push
lock
xor
jnp
cmp
movs
movs
add
div
sbb
add
loopne
icebp
cmc
add
push
pop
(bad)
out
lahf
mov
es
movs
add
or
xchg
push
out
mov
into
inc
cld
out
add
push
jne
fist
add
cwde
cwde
jp
es
dec
std
mov
repz
add
push
bound
js
dec
pushf
add
out
iret
movs
inc
mov
cli
in
add
xchg
cld
dec
xchg
es
add
push
mov
mov
in
repz
sub
ucomiss
add
retf
out
loopne
mov
aad
jmp
out
out
xchg
ss
in
loop
popa
cs
test
adc
cmp
add
cmps
mov
cmp
jecxz
inc
add
and
xor
mov
cli
pushf
outs
push
push
ins
mov
out
sbb
rcl
mov
(bad)
and
loopne
out
or
icebp
div
mov
test
cwde
cmps
xchg
add
add
xchg
inc
ror
push
fstp
add
pop
sbb
es
dec
push
xchg
adc
fiadd
sub
retf
sbb
add
mov
pop
mov
fsub
in
xor
sbb
inc
inc
cmps
jmp
out
dec
jb
es
int3
add
test
daa
jbe
jl
add
sbb
push
fld
ins
ins
inc
cld
dec
out
and
add
inc
imul
inc
add
mov
cmps
out
cmp
and
cmp
lock
mov
inc
out
and
sahf
adc
scas
sub
fsub
mov
out
fwait
mov
cmp
add
retf
mov
lods
mov
push
es
test
push
frstor
or
aas
leave
push
push
scas
fwait
add
inc
lea
loopne
outs
dec
out
ja
mov
pop
out
mov
ret
add
cwde
mov
(bad)
fiadd
dec
mov
jno
sub
into
ja
cwde
push
push
add
out
lea
push
hlt
pop
add
add
sti
sub
outs
outs
add
aaa
repz
mov
add
loopne
push
(bad)
mov
cmps
out
add
jo
or
in
out
push
clc
mov
xchg
add
(bad)
aas
fisttp
jmp
add
dec
push
out
cmp
add
shl
pop
mov
ja
jnp
add
das
fcomp
ss
out
cmp
out
out
and
mov
mov
jb
inc
xor
mov
sti
add
out
es
and
not
add
pop
pop
mov
push
pop
outs
cmps
cmps
fadd
inc
out
or
or
std
cmps
cmp
inc
add
js
mov
pop
jmp
lds
ja
pusha
nop
call
es
pop
rcl
add
and
je
mov
out
push
and
es
pop
das
mov
aas
mov
jmp
jo
sub
in
nop
sbb
dec
daa
xor
outs
adc
es
add
mov
and
cmp
jge
out
ds
xchg
xchg
push
add
out
popf
xchg
cmp
rcl
add
es
dec
(bad)
ud1
pop
es
cmp
inc
add
out
lock
es
xchg
add
loop
jo
xchg
push
fisubr
xchg
out
mov
shl
sbb
mov
cmp
mov
pop
adc
adc
cdq
push
push
daa
xchg
xor
out
cmp
dec
or
add
aam
aaa
cli
jecxz
sbb
lods
inc
and
pop
pop
mov
out
out
push
push
push
dec
dec
cmp
retf
add
add
out
je
sub
stos
mov
je
repz
add
ror
retf
inc
inc
cmp
push
(bad)
adc
xchg
es
pop
adc
in
inc
mov
gs
je
sbb
dec
dec
mov
test
or
out
fwait
imul
push
out
int
mov
mov
ss
movs
add
repnz
(bad)
fwait
es
push
and
pop
pop
es
sub
inc
inc
xchg
cmp
jmp
jg
es
add
ja
es
shl
in
jl
pusha
pop
int3
out
lock
add
mov
pop
int
add
jo
or
sti
fisub
add
fnsave
lock
add
fdiv
loopne
add
sub
enter
xchg
adc
(bad)
sbb
cmps
jnp
bound
xor
fcmovbe
es
mov
add
lods
cdq
ss
mov
loopne
je
call
retf
push
mov
cmps
xchg
add
inc
pop
pop
call
cmp
out
mov
out
scas
or
ds
and
jo
int
ins
ins
daa
cmp
shl
or
add
div
call
sub
fcmovnu
push
mov
es
mov
jmp
and
adc
ret
add
add
rcl
mov
add
(bad)
mov
movs
add
push
ret
mov
out
inc
jmp
out
push
add
fsub
mov
inc
fs
add
mov
retf
inc
mul
loop
cmp
out
scas
repz
add
xchg
push
mov
scas
sub
mov
out
inc
add
es
retf
adc
dec
fs
xchg
add
fcmovbe
aad
mov
add
dec
stos
fldenv
inc
fwait
adc
or
es
cmp
mov
fs
dec
arpl
jo
mov
jl
add
test
sub
dec
rol
dec
(bad)
shr
es
add
es
xchg
xor
mov
lods
jl
mov
add
and
out
jmp
or
stc
rcl
mov
or
xlat
es
push
adc
add
mov
pop
out
add
mov
out
into
add
es
adc
(bad)
cwde
es
add
je
xor
pusha
pop
gs
mov
adc
out
jo
div
add
jmp
jae
loop
ror
sub
or
aam
push
push
mov
xlat
es
inc
add
jne
jmp
dec
push
test
lods
sub
lea
aas
cdq
add
xchg
cli
and
jnp
dec
add
scas
or
cmp
out
mov
xor
pop
push
sub
xchg
ja
imul
das
fild
es
dec
add
nop
int
retf
xchg
std
std
add
jbe
bound
mov
add
xchg
xor
scas
scas
sub
add
ja
fstp
out
aas
push
pop
es
out
sbb
call
into
mov
pop
pop
loop
jne
arpl
call
add
jmp
mov
ja
sub
jecxz
pop
push
xor
sub
daa
inc
xlat
xlat
into
std
mov
sar
sti
jp
pusha
out
test
dec
es
loop
inc
inc
fidivr
clc
jmp
xor
out
frstor
sbb
mov
add
mov
in
jns
and
out
cli
retf
add
out
pop
aas
inc
div
or
(bad)
out
(bad)
dec
enter
bound
push
inc
mov
and
fnstcw
imul
mov
cmp
pop
lahf
lahf
cmp
out
add
adc
or
(bad)
mov
pusha
es
fnstenv
add
jns
loopne
mov
gs
cmp
outs
add
dec
ss
mov
add
es
in
arpl
jmp
dec
and
fldenv
mov
add
pop
adc
push
ins
push
pop
pop
pop
sbb
sub
push
push
xchg
out
jl
or
sti
cmp
out
cmps
mov
cmp
pop
push
xor
dec
loopne
ss
add
(bad)
out
mov
add
xor
out
and
xchg
test
mov
icebp
in
in
pop
out
jae
fild
mov
inc
or
add
out
push
and
adc
jmp
push
push
cs
inc
out
movs
push
mov
jp
pop
add
push
jb
daa
test
mov
test
lds
(bad)
ds
push
aam
cmps
out
repz
mov
mov
push
or
addr16
adc
scas
aaa
xor
jno
add
mov
mov
ins
add
out
push
pop
or
rcr
jne
mov
adc
lds
hlt
hlt
and
mov
xor
mov
jg
je
mov
out
mov
out
les
pusha
pop
out
or
jmp
and
movs
sbb
loop
mov
jne
xor
repz
push
aad
test
retf
out
xor
adc
ins
sbb
mov
out
add
es
xor
shl
idiv
add
jge
outs
sbb
es
test
ins
mov
pusha
mov
push
cld
sar
push
out
pusha
mov
add
es
inc
dec
mov
adc
xchg
sub
jp
push
add
pop
es
imul
dec
pop
pop
xchg
xor
out
inc
repz
mov
sar
cmp
and
add
retf
sti
or
sub
popf
es
push
dec
pop
call
xchg
xchg
jnp
sbb
lahf
add
std
inc
inc
push
ror
test
cmp
ret
stos
movs
sar
mov
xchg
cmps
adc
iret
fs
out
or
rcr
jns
out
add
dec
dec
or
sub
inc
loopne
xchg
ds
out
nop
inc
(bad)
es
sbb
or
xor
fistp
out
cmp
cwde
es
and
inc
dec
out
pop
scas
adc
shl
in
or
lahf
es
push
mov
mov
mov
fsub
pop
out
push
xchg
ds
sbb
out
add
jp
nop
add
es
jae
mov
push
test
add
in
(bad)
sub
popa
add
sub
js
mov
add
test
push
inc
daa
daa
add
pop
out
push
fstp
es
xor
mov
test
in
inc
xor
out
aam
add
cld
fadd
cmp
inc
retf
add
jp
add
pop
jmp
xor
or
aas
sbb
add
mov
sbb
jno
ficom
mov
sar
bswap
fs
mov
cmps
cmps
das
and
cmp
fwait
pop
daa
daa
sbb
stos
sbb
popa
xchg
add
inc
bound
sar
es
jnp
mov
push
add
and
arpl
es
push
add
xor
mov
xchg
mov
into
cmp
gs
call
out
dec
sub
add
or
pop
lods
es
cmp
jne
xchg
add
out
add
xor
xchg
add
addr16
xchg
jns
add
ror
adc
retf
dec
inc
lock
in
sub
enter
out
outs
push
icebp
xchg
add
scas
or
jge
add
aad
add
mov
add
es
in
loopne
int
xchg
scas
es
call
dec
daa
add
fcomp
fst
rcr
das
out
add
mov
lods
out
jl
cmp
and
lods
sbb
es
push
and
leave
leave
rcr
es
ins
out
add
cwde
cli
test
pop
jae
icebp
icebp
inc
imul
add
pop
cmp
xchg
jbe
or
es
hlt
push
push
add
movs
xchg
xchg
push
outs
out
or
cmp
(bad)
(bad)
adc
ja
cmp
lds
or
pop
pop
add
or
cmp
add
std
mov
es
mov
pop
pop
imul
inc
out
mov
cdq
sahf
addr16
pop
add
pop
push
jecxz
add
lahf
iret
imul
or
xor
add
out
cmps
sbb
add
(bad)
dec
es
or
mov
inc
xchg
lods
cmp
push
adc
dec
dec
fs
out
pusha
pop
xor
push
adc
sub
fisub
xchg
lahf
inc
out
add
mov
add
es
jns
add
dec
sub
adc
loope
adc
leave
fcmovnu
es
or
and
rcl
jecxz
sub
cld
add
gs
es
hlt
or
or
push
mov
cmp
sub
leave
stc
pop
adc
out
ror
ds
test
sar
lods
in
or
mov
adc
es
add
jnp
mov
or
out
fwait
stos
(bad)
pop
jp
out
inc
ja
hlt
hlt
leave
pusha
cmp
and
mov
mov
mov
repz
fild
mov
hlt
jbe
out
or
dec
add
mov
push
push
ror
or
mov
adc
dec
es
les
push
push
cwde
daa
add
ds
pop
xor
lods
enter
mov
fwait
out
rol
mov
mov
and
imul
jmp
pusha
inc
sbb
cmp
jo
mov
and
in
pop
pop
xchg
add
out
int3
add
shl
pop
aam
div
xor
(bad)
ja
(bad)
data16
sbb
xchg
cli
cmps
cmps
pop
cmp
pop
mov
clc
sbb
xor
popf
popf
cwde
jb
(bad)
les
fidivr
ret
es
pop
xor
jp
cmps
add
mov
cmp
aas
sub
fisub
sbb
mov
ret
sqrtps
lock
mov
mov
mov
frstor
mov
add
xchg
jle
shl
retf
out
pop
pop
je
test
(bad)
in
xchg
es
add
sar
mul
and
add
push
push
and
sub
sahf
es
xadd
ja
mov
retf
hlt
adc
add
loope
es
pop
mov
inc
inc
into
mul
in
in
add
es
outs
imul
add
xchg
or
sub
es
or
daa
scas
add
mov
(bad)
dec
push
mov
cld
es
or
xor
lahf
call
out
inc
arpl
test
mov
add
(bad)
mov
jl
cmps
std
in
and
mov
xor
jns
gs
call
cmp
jno
out
add
loope
out
fild
mov
and
addr16
enter
pop
(bad)
sbb
cmps
inc
xchg
fs
and
pop
push
fwait
pop
fcomp
cwde
sbb
call
dec
and
aad
add
inc
dec
(bad)
cmp
add
add
std
shl
push
es
cmp
xchg
lock
inc
js
push
add
pop
(bad)
out
out
icebp
es
aam
(bad)
arpl
es
loope
into
pmuludq
sub
js
out
mov
xor
out
ins
jb
es
pop
ins
jbe
fisub
add
(bad)
iret
nop
out
jg
push
add
movs
cdq
cdq
mov
add
ins
out
mov
pop
es
fld
fisub
mov
push
jno
out
(bad)
push
pop
es
jo
add
xchg
rol
mov
aad
icebp
icebp
inc
add
mov
push
cmp
mov
xor
dec
dec
hlt
cld
push
shl
ret
out
sub
out
add
push
es
mov
add
rcl
push
cli
out
cwde
lock
and
lods
out
add
sub
ret
test
pusha
das
pop
pop
add
test
inc
inc
jns
bound
sbb
fwait
sar
inc
cwde
cmp
das
jl
pop
out
icebp
sub
out
xor
pop
pop
mov
add
push
mov
and
sub
pusha
es
sbb
jmp
inc
vpmovzxdq
add
mov
push
add
dec
and
mov
inc
adc
sbb
cmp
push
adc
loopne
lea
adc
jo
test
mov
or
out
clc
mov
add
test
pop
out
out
lea
xor
and
out
ret
xor
push
out
(bad)
sbb
inc
push
out
in
(bad)
aam
mov
adc
out
enter
pop
data16
out
sbb
push
mov
push
ret
sub
iret
fistp
dec
push
imul
in
jle
rcl
pop
clc
fs
xlat
shl
call
mov
loopne
sbb
(bad)
pop
add
es
sub
add
or
sbb
es
aaa
lds
pusha
int
test
out
shr
sbb
fldcw
sub
arpl
add
retf
out
adc
bound
sub
out
push
jnp
(bad)
sub
mov
in
mov
jg
inc
cmp
mov
xor
jge
add
(bad)
push
out
aam
ret
and
mov
jbe
es
xor
and
es
cmp
loopne
cmp
rol
dec
cs
in
or
test
xor
scas
lods
mov
sar
lock
jmp
nop
es
add
clc
hlt
xor
push
adc
mov
xor
mov
and
pop
fdecstp
out
sldt
or
(bad)
mov
out
cmp
add
daa
ins
lahf
inc
mov
aad
enter
fld
add
imul
sub
icebp
fistp
dec
fcmovnu
sbb
jg
jl
add
sub
adc
jns
es
and
adc
ins
in
es
ficom
and
cmp
inc
out
push
scas
inc
es
sar
sub
out
pop
movs
add
out
test
add
mov
add
push
sbb
je
out
mov
mov
mov
shl
call
xor
sbb
shl
add
inc
xor
addr16
fisub
mov
sbb
jns
add
out
movs
cmp
jp
outs
sub
or
stos
mov
enter
rcr
add
jae
aam
push
es
outs
add
out
mov
and
add
dec
mov
mov
out
add
repnz
ds
popf
popf
stc
add
and
sbb
add
sub
(bad)
aam
popa
sub
in
dec
cli
add
sub
xor
sub
es
out
aam
cmps
sub
jp
add
add
icebp
es
inc
add
cmp
out
mov
es
cdq
mov
sbb
pop
movs
jmp
movs
push
jbe
es
(bad)
jg
and
jge
pop
es
inc
dec
push
push
int3
sbb
es
add
sbb
call
out
mov
jle
fwait
add
and
xor
mov
nop
rcl
xchg
test
shr
stc
cmp
loopne
push
in
and
int
xchg
(bad)
(bad)
rol
lods
lods
loopne
mov
mov
mov
cmps
cmps
jecxz
loope
fldcw
fnstsw
add
or
mov
xlat
add
pop
call
push
sub
repz
sbb
out
add
or
cmp
es
dec
jmp
sbb
pop
mov
popf
add
es
sub
call
in
push
sub
dec
dec
and
es
mov
and
rcr
adc
out
push
dec
bound
xlat
and
jmp
pushf
or
nop
sbb
and
bnd
aad
jg
add
mov
xchg
(bad)
jbe
in
mov
add
popf
dec
lds
adc
retf
jg
inc
mov
cmps
add
test
out
out
pop
add
cmp
out
pop
popf
push
add
imul
inc
inc
or
cwde
and
sbb
xor
popf
or
and
iret
or
inc
inc
ss
or
ret
jae
sbb
add
mov
mov
sub
out
sub
dec
es
dec
add
mov
pop
pop
cwde
cwde
mov
pop
mov
dec
call
add
mov
sub
(bad)
pusha
pusha
repnz
out
icebp
add
xchg
jmp
mov
out
lock
xchg
jp
iret
push
add
dec
nop
(bad)
mov
jp
add
clc
stos
lods
cli
es
aas
sbb
div
inc
pfrcpit2
out
mov
or
add
add
add
out
pop
movs
out
cmps
stc
mov
add
popa
sti
lods
inc
rcl
fwait
push
mov
inc
sbb
je
out
mov
leave
es
sbb
clc
push
es
push
mov
or
add
pop
cdq
out
popf
movs
pop
xor
fs
or
add
out
les
mov
enter
inc
outs
xchg
jne
inc
inc
movs
add
stos
(bad)
jecxz
out
pusha
push
add
out
stc
pop
retf
aam
mov
fdiv
pop
dec
or
cmc
inc
xor
out
repz
add
inc
adc
sti
add
and
es
sbb
jno
es
adc
inc
es
add
mov
out
add
popa
test
jb
ret
pop
and
sahf
ja
add
fwait
mov
out
or
add
ds
and
fnstenv
pop
es
add
mov
(bad)
out
add
dec
es
mov
mov
lds
dec
inc
inc
mov
ds
(bad)
test
add
clc
repnz
out
dec
mov
pop
pop
cmp
inc
jge
aas
test
out
mov
add
out
call
inc
out
xchg
dec
add
out
jo
out
es
scas
das
mov
fisub
mov
add
or
mov
es
add
mov
sub
xchg
cmp
rol
ficomp
mov
out
sub
shl
shl
loopne
adc
stos
mov
xchg
enter
test
pop
push
mov
mov
push
xchg
add
out
inc
cs
cwde
sub
mov
(bad)
(bad)
es
ret
xchg
dec
in
adc
call
es
adc
xor
nop
mov
cmp
aas
es
out
test
add
and
shl
add
nop
arpl
enter
es
add
adc
sahf
xor
rcl
jae
nop
out
ret
and
mov
push
(bad)
push
adc
stos
stos
jge
jmp
scas
rol
cmp
fs
rsqrtps
dec
pop
and
pop
stos
mov
sbb
push
dec
out
push
xchg
add
and
jmp
inc
out
and
psrld
push
jle
and
nop
mov
or
sub
out
icebp
add
enter
(bad)
out
sub
es
sar
test
out
pop
ret
and
push
push
xchg
ja
inc
inc
add
adc
in
sbb
enter
out
jecxz
mov
push
out
push
xchg
jbe
add
shr
pop
inc
add
cmps
mov
jnp
es
cs
inc
dec
jl
add
icebp
adc
dec
mov
es
adc
add
test
dec
push
inc
adc
push
push
add
xor
xor
test
and
and
je
mov
test
mov
or
xor
pop
add
imul
retf
in
add
xchg
mov
aad
cmps
add
out
or
and
add
loop
das
pop
leave
or
es
jnp
add
pop
stos
fsub
addr16
inc
(bad)
pop
jle
outs
outs
repnz
out
sbb
push
jmp
es
jge
add
es
fadd
das
add
mov
out
fist
test
add
or
aaa
stc
es
and
loop
arpl
push
mov
jg
es
inc
add
std
(bad)
in
sbb
ds
cdq
adc
out
rol
ins
push
push
fs
lods
add
jnp
pop
or
add
sbb
cmp
outs
out
imul
jno
movs
sbb
cwde
add
jmp
ss
gs
lock
cmps
mov
add
push
std
imul
add
pop
out
jne
adc
das
js
repnz
ins
adc
popa
popa
fmul
jmp
dec
sbb
add
arpl
test
lock
jno
cmp
push
out
mov
pop
add
es
cmp
(bad)
dec
icebp
outs
outs
adc
add
and
mov
out
js
pop
es
push
add
push
es
push
pusha
rcl
cld
or
icebp
icebp
and
out
shl
pop
sti
add
retf
out
fisub
add
push
cmpxchg
push
pop
push
mov
xor
in
pusha
mov
je
mov
(bad)
add
push
push
sbb
out
xchg
add
enter
jbe
imul
lock
shl
jmp
cmp
xlat
and
out
xchg
and
add
mov
(bad)
push
(bad)
in
ret
add
es
push
sub
xchg
xor
pop
ins
inc
inc
shl
stc
out
xchg
inc
mov
push
pop
or
pextrw
push
sbb
and
inc
inc
les
add
out
out
scas
push
push
jmp
inc
mov
sar
cwde
popf
add
aam
mov
inc
mov
pop
push
icebp
icebp
fs
pop
out
cld
jge
add
xchg
mov
cdq
cdq
add
out
stc
adc
int
rcl
out
iret
add
repz
enter
sub
add
or
movs
add
aad
inc
out
fnsave
or
add
and
inc
out
cmp
xchg
or
call
add
sub
out
sbb
add
dec
es
pop
add
and
rol
push
ret
dec
add
out
cmp
cli
xchg
outs
outs
pop
inc
in
inc
inc
retf
out
adc
hlt
iret
iret
adc
add
stos
push
out
leave
jle
mov
add
mov
aad
fmul
mov
daa
add
es
fwait
adc
test
jne
sub
mov
xchg
ins
sar
out
sbb
mov
xchg
das
out
shl
imul
fsub
lods
adc
add
or
mov
xchg
out
add
es
ins
mov
cwde
pop
out
add
loopne
pop
es
and
mov
cmp
add
out
test
add
pop
out
clc
inc
mov
aas
in
pop
mov
frstor
rcl
jae
pushf
cmp
or
out
mov
add
dec
lahf
adc
fsubr
xchg
es
add
sbb
fsubr
lea
pop
ins
(bad)
das
and
test
in
jo
push
jp
jb
hlt
dec
es
pop
sbb
mov
sbb
nop
lahf
movs
out
fdivr
inc
add
and
xor
cmc
call
xchg
es
ss
sbb
or
and
mov
push
dec
add
es
test
jle
call
cmp
and
add
das
das
pop
push
repz
or
(bad)
mov
fsub
push
pop
pop
xor
add
add
call
push
push
add
mov
add
push
xchg
outs
es
mov
mov
rcl
es
or
jae
sub
sub
std
std
(bad)
and
sub
xlat
sahf
gs
lock
out
es
and
div
pop
pop
add
out
(bad)
jnp
pop
pop
jns
jg
push
dec
xchg
or
jae
test
cmp
lahf
push
div
mov
out
shl
outs
outs
cdq
scas
movntq
dec
pop
pop
sbb
sbb
aas
lock
stos
stc
add
cld
call
es
test
add
mov
out
mov
dec
or
add
ds
and
jno
cld
es
push
sub
rcl
enter
push
add
push
out
cs
cmps
lock
lea
out
retf
mov
adc
dec
ins
add
push
sub
pop
add
mov
xchg
es
mov
dec
sahf
outs
ret
push
bound
sbb
movs
sbb
add
mov
rcl
cmp
(bad)
out
jp
add
in
fwait
xchg
into
pop
pop
push
cmps
inc
loopne
movs
idiv
mov
and
jge
dec
push
es
sbb
sbb
es
inc
test
pop
xor
out
imul
lock
mov
out
sahf
mov
fnstenv
or
ins
pop
aas
cmps
aam
out
add
mov
sti
out
push
cmp
add
not
sub
test
lock
call
jbe
stos
xor
add
add
enter
mov
arpl
jge
out
lahf
add
in
out
jb
enter
xchg
add
xchg
popa
adc
rol
push
dec
and
jg
add
mov
jnp
cld
cld
mov
push
adc
add
mov
fdivr
imul
xchg
add
js
rol
ret
mov
loope
dec
mov
push
out
xor
or
xchg
ins
ds
add
jecxz
fiadd
jl
mov
fstp
mov
(bad)
fmul
add
out
adc
and
retf
add
pop
stc
adc
pop
imul
dec
pusha
adc
lds
add
xchg
bnd
mov
mov
inc
jo
imul
add
aam
fwait
rcr
not
shl
in
jle
es
inc
add
cmp
jne
repz
retf
push
sahf
pop
out
call
ins
mov
leave
inc
out
xor
pop
es
push
push
mov
es
pop
xor
xchg
add
jge
mov
inc
out
into
scas
je
rcr
jmp
or
add
dec
add
imul
out
ins
jmp
cmps
cmp
shr
add
imul
adc
pusha
jg
int
(bad)
add
popa
popa
gs
xchg
xor
cld
(bad)
mov
out
add
ret
push
mov
out
out
mov
push
les
sub
test
add
es
call
jmp
add
adc
popa
out
add
outs
outs
ins
xchg
mov
pop
emms
and
or
scas
jnp
add
arpl
ja
cs
out
pop
mov
out
les
add
(bad)
jb
mov
daa
dec
cmp
add
loop
out
mov
clc
add
pop
lock
(bad)
stos
add
sub
add
lods
dec
dec
fdivr
push
add
dec
pop
shl
jne
stos
and
mov
popf
shl
aaa
hlt
mov
mov
loope
scas
jmp
or
dec
mov
shl
and
push
add
dec
out
es
add
sub
sub
lods
outs
retf
mov
das
or
xchg
add
repz
and
or
aas
jmp
out
scas
push
sbb
add
xchg
sbb
xor
mov
add
es
sub
add
aaa
aaa
(bad)
in
call
imul
pop
add
fcomp
add
data16
call
(bad)
pop
mov
out
test
rol
je
out
lods
sub
les
mov
xchg
cmp
adc
sub
add
mov
sub
add
jo
or
rol
es
test
cmps
add
or
jne
pop
pop
mov
cli
cli
add
out
xchg
cwde
pop
repnz
push
add
jbe
hlt
es
popa
push
ins
test
add
fstp
out
sti
add
es
movs
stc
mov
(bad)
imul
sub
mov
pusha
add
inc
sbb
out
pop
(bad)
pop
jmp
mov
xchg
ret
adc
xor
xlat
mov
xchg
push
mov
shl
or
es
pop
popa
outs
outs
pop
add
cs
(bad)
rol
es
xchg
cmp
ds
pop
pop
or
add
mov
sar
mov
int
cmc
mov
out
cli
pop
add
icebp
loope
mov
(bad)
es
fadd
cmp
sbb
sbb
inc
out
add
sbb
rcl
cmp
out
ficom
stos
jl
adc
(bad)
sub
out
(bad)
pusha
movs
mov
or
repz
rol
ja
es
popa
sub
scas
add
out
jmp
out
dec
out
leave
jns
addr16
and
out
add
mov
out
sub
aas
aas
push
repnz
test
or
in
dec
push
stos
stos
add
push
jg
add
mov
cli
inc
inc
xchg
lods
add
jo
rcr
out
fwait
(bad)
mov
jmp
push
mov
nop
ja
dec
add
or
fs
arpl
mov
sahf
xchg
out
adc
inc
stos
out
push
ficomp
das
or
cwde
out
loop
mov
add
pop
sbb
out
xor
or
dec
inc
add
pop
ja
lods
pop
pop
mov
lahf
out
pop
add
lods
mov
fucomip
fwait
fwait
jns
add
push
pop
mov
rol
(bad)
pop
add
and
pop
add
pop
(bad)
cmp
xor
lea
std
pushf
fs
inc
inc
lds
out
mov
sbb
inc
(bad)
inc
or
dec
inc
push
push
push
popf
out
add
loopne
xor
movs
add
lods
mov
sti
adc
jge
out
sbb
ror
pop
pop
jno
or
xlat
and
mov
bound
xor
sub
dec
das
das
cmp
(bad)
cmp
es
(bad)
in
mov
es
xchg
jo
clc
pop
cmp
pop
add
pop
mov
mov
add
lds
adc
mov
arpl
leave
leave
xor
sub
mov
out
js
out
test
repz
add
xor
imul
in
jecxz
pushf
mov
pop
out
rcl
es
add
add
scas
sub
repz
fnstenv
mov
adc
icebp
add
(bad)
pop
test
or
scas
scas
es
shl
mov
imul
aaa
out
or
jl
pop
out
pop
adc
es
(bad)
mov
xor
mov
es
add
daa
div
loope
dec
es
sub
mov
dec
mov
pop
sbb
es
add
and
or
movntq
repnz
sbb
loopne
mov
lock
bound
xchg
add
add
mul
fcom
push
cs
push
jnp
es
out
in
mov
popf
scas
scas
and
loopne
cmp
and
add
sub
adc
es
imul
(bad)
(bad)
pushw
adc
ss
pop
add
xchg
cmc
jae
jle
inc
cmps
mov
mov
cmp
dec
and
hlt
xchg
stos
or
mov
xor
stos
mov
fucomp
and
cs
jb
push
adc
adc
out
cmp
jbe
sbb
cmp
cmp
aad
inc
call
aaa
es
sbb
adc
add
shl
ja
jbe
fild
shl
dec
es
adc
(bad)
std
jge
jo
arpl
out
add
mov
push
sub
pop
inc
inc
mov
jns
out
mov
add
dec
inc
rcl
push
add
out
sbb
ins
fwait
pop
pop
sub
leave
nop
das
das
push
sub
cmp
out
pop
pop
out
push
popf
loope
xchg
adc
jecxz
cmp
add
jo
fist
sbb
ror
out
loopne
and
popa
or
repnz
mov
pop
div
aas
aad
mov
mov
cmps
add
not
mov
cmp
out
cld
jo
push
xlat
es
cmp
es
or
adc
into
into
stc
mov
out
imul
es
add
mov
es
inc
push
push
jp
mov
add
repnz
daa
add
jo
and
rcl
and
inc
mov
pop
(bad)
out
push
cmc
mov
inc
out
cs
sub
mov
add
pop
sbb
out
(bad)
push
add
sub
mov
push
add
inc
enter
pop
jo
mov
out
mov
out
or
add
pop
es
call
push
sbb
loop
imul
or
iret
out
push
cmp
push
add
pop
out
fld
jg
add
mov
es
stos
add
fs
pop
out
test
mov
lock
loope
cmc
xor
sub
outs
or
add
out
out
pop
in
movs
es
cmc
pop
pop
mov
aas
es
pop
push
pusha
xchg
test
in
fcmovu
mov
add
outs
or
mov
add
pop
mov
out
add
fld
pop
lock
es
and
dec
add
(bad)
inc
jbe
push
push
loop
pop
add
push
sbb
add
inc
xchg
(bad)
add
hlt
out
adc
push
iret
push
push
push
add
jp
pop
xor
scas
xchg
xchg
xchg
add
pop
pop
cmp
shl
xlat
retf
push
test
add
es
pop
mov
mov
stc
cmps
inc
pop
daa
mov
ds
int3
xor
push
out
dec
jns
aam
jae
ja
mov
cmp
(bad)
nop
out
push
int
pop
fist
out
(bad)
icebp
add
xchg
ret
pop
mov
shl
inc
mov
pop
dec
rcpps
xchg
jns
mov
add
enter
es
cwde
xor
add
out
mov
xor
stc
imul
es
jae
and
fild
pop
cdq
or
imul
ficom
aaa
lods
push
out
sahf
mov
nop
mov
add
out
pop
pop
retf
es
add
mov
cmp
add
out
cld
inc
jns
movs
rol
push
add
es
dec
xchg
sbb
cmps
mov
es
and
or
cwde
push
add
mov
dec
push
mov
mov
pop
add
(bad)
idiv
and
or
add
pop
xor
cdq
lock
mov
out
test
xchg
mov
mov
outs
retf
es
xchg
jae
push
es
fsub
imul
aaa
inc
jle
add
mov
es
dec
sub
ja
scas
ja
mov
add
es
jo
inc
inc
cmc
adc
and
in
inc
inc
mov
add
rcl
es
mov
pop
or
cwde
out
loopne
add
cmp
cld
in
out
out
stc
mov
es
mov
in
loope
sub
pop
pop
add
inc
and
int
movs
dec
dec
push
js
out
scas
scas
add
nop
mov
push
pop
mov
mov
add
xchg
pop
es
cmp
xlat
add
lock
mov
cmp
cmp
pop
out
mov
add
and
mov
nop
jbe
push
add
lods
sti
retf
fs
rcr
out
pop
(bad)
add
mov
pop
mov
in
(bad)
lock
jo
jns
ret
ret
add
push
out
call
cmp
pusha
mov
test
jo
mov
int3
xchg
call
xlat
inc
mov
es
and
cmp
fs
add
scas
jl
out
xchg
in
inc
es
add
outs
dec
fwait
cwde
cwde
xor
dec
out
paddw
mov
aam
add
retf
mov
push
daa
push
push
das
shl
int3
not
rol
dec
push
mov
outs
mov
es
mov
call
imul
gs
pmullw
(bad)
out
inc
push
mov
mov
and
jo
(bad)
mov
and
jmp
pop
out
test
sbb
and
cmp
add
pushf
pop
lods
out
inc
xchg
scas
(bad)
add
out
je
gs
dec
add
les
inc
jbe
add
jo
ret
add
dec
xchg
out
pop
jmp
add
cmps
sub
out
or
mov
add
das
loope
(bad)
repz
out
mov
out
imul
mov
xor
rol
aam
je
pop
aad
retf
fadd
fs
xor
adc
mov
nop
data16
scas
add
addr16
out
clc
add
sbb
test
or
out
pop
sub
pop
jl
je
mov
call
pop
push
ret
mov
pop
add
sar
lds
(bad)
push
pop
gs
icebp
pop
inc
nop
les
add
mov
out
mov
(bad)
cli
lock
(bad)
mov
add
leave
sahf
and
rcl
fsub
pop
je
or
push
aas
aas
mov
mov
add
outs
push
iret
in
mov
lock
add
out
addr16
or
out
in
sbb
es
pop
out
cwde
cwde
(bad)
ss
add
adc
scas
xlat
es
add
arpl
xchg
add
push
call
cwde
xchg
xchg
sbb
rcl
test
jnp
fs
adc
movs
es
add
mov
cmp
add
es
add
rol
andps
out
mov
shl
sub
mov
or
loopne
inc
xchg
cmp
es
stos
sub
or
out
mov
fwait
mov
outs
lods
and
mov
out
repz
add
ror
call
jo
add
loop
icebp
stos
adc
add
inc
pushf
xor
popa
test
(bad)
sbb
in
add
mov
mov
int
jns
lahf
or
or
add
out
dec
sbb
es
sti
sar
xor
inc
or
pop
js
add
adc
movs
movs
add
out
pop
sbb
push
push
push
pop
sbb
push
and
popf
sub
cdq
sub
out
add
(bad)
push
out
mov
cmp
mov
push
sbb
fcmovu
adc
cmp
push
add
shl
lods
clc
clc
cli
(bad)
loopne
inc
out
hlt
pop
es
aam
(bad)
loop
mov
add
lds
mov
jge
out
pop
pop
es
out
ret
sub
div
loop
das
out
mov
jg
jnp
xchg
test
sbb
pushf
jns
sti
add
loope
cmp
out
in
add
mov
es
js
dec
dec
clc
add
mov
sbb
icebp
icebp
fdiv
jl
out
aaa
frstor
shl
mov
(bad)
or
fucomip
pop
out
nop
into
(bad)
push
push
add
adc
je
icebp
call
jne
or
lods
add
sbb
push
int
out
or
pusha
jmp
out
movs
sub
jb
icebp
retf
mov
fsub
add
inc
inc
aaa
scas
ins
push
push
das
sub
out
shl
xchg
out
cdq
pop
or
out
add
inc
jbe
lahf
ds
out
mov
in
pop
out
adc
in
clc
clc
add
fs
ss
cmp
sbb
add
jle
fistp
add
aaa
out
xor
inc
cmc
jno
jo
ins
pop
bound
es
out
cmp
mov
(bad)
xor
and
shr
cli
inc
dec
es
iret
sahf
sbb
hlt
rol
xchg
xchg
and
cmp
adc
mov
cmps
cmps
ins
cli
sub
in
or
and
stc
je
cmp
cmp
xchg
test
mov
pop
cli
mov
or
out
add
xor
(bad)
call
pop
(bad)
es
inc
jmp
add
jnp
mov
fldcw
movs
sub
es
mov
fdiv
or
add
adc
aad
or
clc
aam
pop
bound
jae
add
add
call
sbb
push
cmp
or
add
ds
out
in
int
outs
inc
lods
add
add
lds
test
pop
sbb
sub
out
or
in
add
out
mov
ja
mov
sub
lods
call
sub
inc
out
cld
jb
es
aam
cmp
sbb
and
imul
out
outs
fmul
pusha
pusha
mov
out
dec
jne
add
mov
jge
es
push
out
repz
sahf
es
sbb
ror
sub
dec
scas
out
jle
add
xor
cmp
movs
movs
stos
add
int3
pop
jg
es
sbb
shl
je
hlt
sbb
test
call
add
fsubr
nop
test
stc
stc
and
inc
out
xchg
adc
dec
dec
(bad)
(bad)
add
cld
sar
ss
in
pop
out
jge
mov
loopne
mov
inc
jbe
add
lods
mov
es
mov
ror
into
push
jne
jp
nop
rol
cs
rcr
add
leave
aam
inc
aaa
add
stos
fs
cmp
jne
lods
es
jmp
mov
xor
add
call
sahf
add
inc
mov
inc
jns
cmc
cmc
mov
sub
xor
push
add
lock
mov
sbb
jne
mov
movs
cli
ins
mov
dec
test
pop
mov
loop
sbb
out
mov
retf
js
stos
aad
xchg
gs
addr16
inc
mov
icebp
add
or
es
jnp
xor
popa
mov
into
add
test
sub
add
out
call
in
add
sub
jmp
out
push
or
add
imul
and
out
rol
add
jno
(bad)
(bad)
movs
sub
loopne
ins
add
adc
ja
in
test
std
popa
add
push
pop
cmp
out
dec
mov
in
or
scas
push
mov
pop
pop
mov
cdq
out
cld
add
cwde
ins
inc
lock
add
sti
popa
add
aas
pop
jl
xor
mov
out
fbld
es
in
add
out
out
push
pop
into
out
call
jle
movs
out
add
out
cmp
mov
add
int
or
imul
cmp
jo
vpminub
icebp
out
xor
push
add
mov
xor
addr16
xchg
div
add
pusha
fsubr
jb
dec
mov
jmp
rcr
adc
mov
es
add
out
push
and
(bad)
fisttp
pusha
ficomp
out
pop
add
ins
ins
sub
(bad)
es
or
add
loop
es
mov
ror
loope
nop
add
stos
clc
(bad)
call
sub
add
pop
pop
ins
test
out
dec
int
es
mov
or
mov
xchg
xchg
sbb
das
out
loope
movs
imul
add
dec
sub
stos
stos
jnp
xchg
out
jno
(bad)
aad
rol
jge
push
pop
dec
dec
clc
push
lock
sbb
(bad)
pop
out
inc
or
and
pop
xchg
pusha
out
add
mov
imul
or
adc
inc
lock
jne
loop
neg
out
push
add
out
int
sub
add
or
pop
inc
inc
add
retf
xlat
xor
add
ds
fwait
out
mov
cmp
xor
or
(bad)
jmp
mov
jle
add
mul
imul
add
push
pusha
fstp
pop
pop
push
rcr
cli
mov
es
mov
ds
call
in
mov
arpl
mov
add
jns
es
add
cmc
or
int
out
xor
add
clc
out
out
mov
loop
xchg
out
ret
add
sub
(bad)
(bad)
(bad)
add
mov
add
out
lock
es
fdiv
add
(bad)
pop
jg
mov
out
pusha
inc
aas
es
and
and
data16
ret
out
out
adc
add
lock
rcr
or
fstp
out
fcomp
(bad)
lahf
jns
out
jne
cmc
add
stos
hlt
add
pop
dec
in
outs
es
pop
cmps
pop
inc
inc
adc
inc
xor
jmp
js
add
es
std
mov
ja
stos
outs
add
cmc
shl
nop
inc
push
data16
cmps
mov
adc
es
inc
mov
sti
es
movs
add
rol
inc
push
cmp
call
push
sbb
xchg
jbe
add
pop
pop
es
ss
add
test
nop
nop
inc
lods
dec
out
add
sbb
or
in
cs
es
test
sbb
aam
jmp
push
mov
dec
addr16
mov
sti
push
out
jmp
push
es
movs
aad
popa
popa
xcrypt-cfb
cmps
and
data16
add
or
sbb
imul
pop
adc
mov
fld
fisttp
add
or
movs
bound
xchg
pusha
mov
daa
(bad)
push
add
out
mov
fwait
les
fadd
retf
std
adc
pop
out
jle
fsub
(bad)
sbb
push
xchg
xchg
pop
push
add
cli
jmp
xor
out
sub
inc
es
xchg
clc
loop
imul
loope
add
out
leave
loopne
test
mov
add
inc
sub
out
(bad)
cmps
add
sbb
cs
add
add
call
cmps
es
sbb
fst
push
out
xor
sti
es
ins
mov
gs
cmp
add
fstp
(bad)
add
js
fmul
push
jg
add
and
idiv
lods
cmp
sub
inc
cmps
out
and
add
(bad)
jmp
es
mov
rcl
fwait
push
idiv
out
xor
inc
jbe
fdivr
dec
out
retf
(bad)
retf
retf
add
mov
in
push
mov
out
fcom
mov
(bad)
cmp
out
aas
dec
push
add
or
out
les
shr
and
or
pop
daa
test
push
xor
sahf
rol
mov
inc
jns
out
add
mov
add
out
push
js
test
daa
jae
out
push
jmp
pop
pop
mov
mov
int
mov
dec
out
inc
push
es
es
rcr
ficomp
push
add
xor
mov
int3
es
pop
adc
in
dec
and
es
sub
add
in
ins
adc
or
add
(bad)
out
pop
mov
jbe
out
repz
mov
add
add
dec
mov
out
mov
mov
stos
push
push
mov
movs
loopne
cmps
test
out
jb
add
inc
sub
rol
add
adc
mov
pop
sbb
and
or
scas
in
call
fbstp
adc
cs
les
push
fld
adc
(bad)
xor
aam
adc
test
out
loop
inc
inc
test
pop
int3
add
cld
ret
mov
out
call
dec
mov
ror
es
ds
rcr
mov
bound
out
es
add
mov
(bad)
add
mov
arpl
inc
es
push
add
out
adc
shl
adc
in
push
(bad)
and
repnz
call
imul
mov
inc
xlat
mov
mov
call
out
lock
fld
hlt
and
rol
add
pop
ja
es
(bad)
mov
nop
dec
es
movs
cmp
retf
xchg
ret
shl
mov
int3
sub
leave
add
xchg
adc
jns
outs
outs
out
pop
out
pusha
cmc
mov
jbe
leave
jmp
int
pop
and
push
pop
pusha
lea
lock
mov
into
pop
sbb
out
out
xlat
es
iret
inc
daa
add
test
pop
leave
adc
add
dec
out
dec
cmp
cdq
sbb
add
popf
xor
out
mov
and
cmps
bound
cmp
xchg
cmp
es
mov
es
pop
js
adc
pop
clc
fimul
out
in
push
es
add
lds
inc
in
pop
adc
lock
pop
dec
push
dec
inc
inc
add
jecxz
scas
xchg
out
fist
in
inc
inc
fxch
adc
imul
mov
dec
out
loope
jns
dec
jl
add
and
js
add
aam
call
mov
in
out
add
stos
add
es
pop
and
push
ret
mov
add
sbb
add
or
shl
sub
out
lahf
cmps
add
sub
sbb
add
repz
es
enter
mov
out
mov
xchg
jbe
test
xchg
inc
inc
xor
sbb
lds
out
or
add
mov
xchg
push
sbb
mov
ret
ret
jp
cwde
jb
stos
sti
mul
inc
in
icebp
xor
add
lock
push
push
add
aad
out
add
pop
pop
cmp
out
ja
add
jmp
pop
add
in
xchg
bnd
cmps
cmc
add
(bad)
adc
test
mov
inc
minps
inc
cmps
in
loope
pop
call
es
cld
or
sahf
es
add
fwait
fwait
rcl
dec
pop
pop
mov
jg
mov
dec
and
jmp
out
xchg
out
mov
add
(bad)
xchg
add
ss
dec
jmp
(bad)
das
mov
addr16
pop
mov
add
cld
inc
fs
pop
and
mov
sbb
icebp
or
sbb
sahf
out
sbb
add
or
pop
loopne
test
les
mov
jnp
add
out
xchg
(bad)
cld
add
jg
xor
out
add
or
(bad)
mov
movs
add
es
mov
fdivr
fld
mov
inc
add
iret
rcr
es
lock
mov
dec
cli
cli
test
or
jns
ss
sbb
cs
es
and
push
push
sbb
and
cdq
pop
out
rcl
loopne
movs
sub
mov
imul
xchg
fiadd
jl
hlt
out
fwait
movs
jns
retf
push
xor
repz
out
add
add
xchg
(bad)
int3
hlt
fwait
fwait
iret
adc
out
loop
push
push
push
and
mov
add
mov
or
cmps
lock
(bad)
add
xchg
sar
aad
add
adc
movs
ret
lds
es
jnp
lock
clc
jecxz
add
mov
and
cs
sbb
je
out
cmps
add
sbb
jmp
hlt
fldenv
jle
cli
fucom
loopne
mul
lods
and
out
mov
nop
mov
call
pop
test
push
mov
sub
je
mov
dec
push
iret
xor
out
mov
shr
ins
ins
cmp
add
in
(bad)
mov
add
push
int
out
sbb
cwde
test
out
cmp
jle
loopne
int3
dec
jnp
jae
sahf
add
shl
jg
out
add
es
movs
es
xchg
cmps
ds
xor
add
cmc
out
sbb
popf
fcomp
xor
ja
add
out
les
sub
leave
leave
add
xlat
div
push
xor
fild
stos
cs
xchg
cli
shl
es
mov
xlat
mov
out
stos
(bad)
cmps
pop
pop
stc
nop
add
dec
rol
xor
add
ret
idiv
mov
and
pop
push
push
add
jmp
icebp
inc
cmc
hlt
add
pusha
jbe
out
ins
out
lods
lods
fbstp
pusha
out
dec
stos
sbb
sub
rol
pop
int3
fwait
jecxz
out
in
into
cmp
add
pop
push
out
pop
add
jno
cmc
cmc
mov
jns
add
arpl
inc
es
stos
sub
jae
mov
add
out
adc
fcomp
out
add
iret
mov
pop
fstp
mov
leave
out
nop
push
cmc
es
cmp
addr16
inc
inc
ficom
out
inc
add
mov
and
add
push
push
push
out
ret
es
sub
jg
stos
stos
fbld
out
add
lods
pop
pop
cmp
pop
bound
push
call
es
add
xor
int3
test
jmp
cmp
in
pop
out
jmp
jp
movs
repz
out
xchg
aaa
imul
out
mov
scas
dec
dec
dec
jno
out
adc
push
clc
out
adc
cdq
add
xchg
lock
and
jge
xchg
xor
add
mov
movs
add
inc
inc
test
fs
pop
push
push
adc
retf
es
stc
test
push
push
test
repnz
loopne
or
jne
add
retf
fisubr
stos
stos
xlat
inc
sbb
add
add
mov
es
add
cli
dec
dec
fcomp
arpl
or
out
aam
xor
lods
sahf
add
mov
es
jne
mov
cwde
push
js
jo
cdq
ins
mov
add
pop
sub
stos
(bad)
jmp
jge
ror
dec
lods
add
push
inc
mov
es
fwait
push
cmp
cmp
sbb
sbb
idiv
push
aad
dec
popf
daa
add
lods
scas
arpl
sub
sbb
mov
push
lods
add
adc
aas
add
imul
es
mov
out
inc
mov
out
add
cld
in
in
jae
xchg
or
mov
out
(bad)
add
cmp
mov
stos
ja
sbb
xor
sub
movs
loopne
sbb
es
xchg
inc
lds
es
aas
push
mov
inc
icebp
icebp
cmp
out
pop
pop
call
cmp
and
aaa
xchg
ins
add
push
mov
out
(bad)
jecxz
es
add
cmps
mov
push
popa
jmp
sub
es
in
push
inc
mov
out
add
out
inc
ins
xor
add
inc
out
sbb
jmp
je
es
in
in
sti
add
xor
add
sub
jmp
mov
add
sub
out
add
fwait
rol
pop
retf
out
mov
inc
dec
dec
xor
out
arpl
es
add
push
push
xor
pusha
jno
into
out
push
adc
(bad)
ins
sbb
cmp
sar
test
cmc
popa
nop
es
int3
rcl
mov
je
xor
std
js
xchg
mov
jge
pop
(bad)
cdq
jmp
aas
out
push
push
sbb
out
and
mov
or
inc
in
out
(bad)
cmp
out
arpl
mov
mov
push
out
fdivr
es
bound
sbb
xor
dec
or
cmp
or
sbb
sbb
add
push
mov
cdq
mov
retf
out
pop
lea
mov
outs
outs
lods
add
out
sub
ja
add
bswap
bound
loop
or
add
cli
adc
movs
jo
or
inc
lds
add
jecxz
shl
add
push
icebp
push
test
js
mov
jl
add
scas
scas
or
mov
add
into
out
int
adc
imul
fwait
(bad)
out
or
ret
cmps
dec
add
push
std
rcl
clc
adc
mov
das
out
ja
pop
es
jno
or
and
sti
mov
retf
lds
mov
pop
pop
dec
imul
and
mov
jne
retf
cmp
fld
mov
cmps
repnz
pop
or
mov
fldenv
data16
mov
add
pop
out
push
jmp
mov
rcl
aam
(bad)
out
enter
rol
inc
or
es
mov
fisttp
rcpps
add
adc
pusha
addr16
dec
paddb
gs
out
stos
push
mov
mov
sub
nop
es
adc
inc
inc
imul
mov
cmp
or
adc
aam
cmp
mov
push
sub
cmps
stos
add
fmul
int3
add
dec
out
test
cmp
(bad)
(bad)
add
out
mov
(bad)
cmp
xchg
ds
inc
shl
into
add
es
inc
and
add
or
mov
loope
stos
loop
xchg
clc
add
out
aam
dec
and
push
push
mov
sbb
jbe
cmp
scas
or
cmc
cmc
add
mov
xor
add
out
pop
sbb
xor
out
xchg
daa
add
hlt
mov
out
test
es
sbb
xor
stc
pop
sub
or
ins
icebp
daa
es
retf
or
push
sub
mov
aaa
add
iret
iret
xor
stc
out
mov
add
sbb
addr16
xor
loop
xor
add
out
ins
push
jb
add
lea
jl
int3
add
and
xor
adc
inc
out
jmp
add
xchg
push
dec
fcom
or
sbb
(bad)
jmp
add
out
adc
xchg
dec
sbb
adc
or
pop
add
ja
shl
push
retf
es
pop
and
iret
iret
pop
loop
rcl
fwait
mov
add
cdq
clc
out
ret
pop
pop
push
inc
out
mov
call
div
movs
mov
ret
ret
and
out
out
add
cmps
es
ret
add
or
in
mov
pushf
out
add
jnp
cmp
in
lea
add
je
scas
int3
call
out
push
or
out
(bad)
pushf
es
pop
pop
mov
inc
or
in
movs
sbb
(bad)
ds
add
dec
add
inc
push
sahf
sahf
cmps
mov
es
mov
inc
inc
inc
mov
and
out
fstp
push
xor
stos
xchg
das
push
es
or
mov
pusha
shr
add
pop
add
ret
push
or
mov
add
mov
push
push
out
jle
mov
cmp
retf
inc
nop
nop
or
add
inc
out
leave
test
inc
add
movs
movs
and
xchg
es
ret
iret
sbb
out
add
inc
es
ds
xchg
pswapd
add
ds
ja
sub
es
(bad)
cmp
mov
pop
fcmovu
push
jne
ins
push
cli
cs
adc
sbb
inc
inc
hlt
jo
out
sahf
dec
add
(bad)
cmc
adc
rol
je
add
sub
out
cmp
cmp
inc
add
mov
loope
stos
pusha
lods
hlt
ds
shl
mov
sar
jo
out
(bad)
fild
fcomp
aas
xor
add
push
pop
call
add
shr
imul
(bad)
mov
test
out
cmp
(bad)
es
pop
pusha
push
aad
add
sbb
(bad)
(bad)
(bad)
outs
jo
out
sbb
lds
and
jno
ss
add
lods
es
adc
repz
xchg
add
fnstsw
inc
lods
lods
add
div
scas
sbb
jmp
cmps
inc
mov
inc
xchg
and
mov
mov
add
xchg
and
sbb
out
or
lahf
es
adc
ret
add
enter
mov
fwait
fwait
or
cmp
out
add
aaa
out
mov
pop
(bad)
in
jno
(bad)
jmp
pop
test
and
ficom
add
sbb
in
pop
stos
es
xchg
add
shr
stos
imul
add
jne
adc
ret
sbb
and
jmp
add
out
stos
push
out
out
xor
lods
jmp
sbb
es
rol
mov
adc
std
xor
inc
loop
sbb
arpl
add
sub
adc
retf
and
fimul
ds
and
mov
cmc
cmc
(bad)
and
mov
add
es
mov
add
pop
sahf
out
mov
mov
nop
sbb
sub
lock
adc
out
xor
es
add
jo
sub
sub
hlt
mov
push
repnz
in
inc
es
retf
shl
push
xchg
add
push
out
cmp
punpcklbw
lods
pop
out
mov
mov
fs
(bad)
out
lods
cmp
mov
xor
leave
addr16
shr
add
out
dec
jg
das
das
adc
xor
mov
add
cwde
popf
mov
add
stc
gs
es
(bad)
and
ins
add
int3
int3
xor
jmp
ins
movs
out
dec
adc
into
out
stos
cld
lea
in
out
enter
cmps
mov
in
out
add
xchg
es
ja
mov
add
pop
pop
inc
xor
out
js
jbe
lods
add
sub
pop
je
pop
es
xchg
push
shr
mov
push
aas
jo
es
xchg
out
add
rcl
out
mov
sub
hlt
gs
jecxz
lock
(bad)
aas
aas
pop
xor
add
movs
sti
out
xor
add
jg
cmps
push
es
inc
mov
ds
push
inc
sub
dec
in
div
repz
push
sub
test
mov
nop
shl
out
adc
repnz
loope
jnp
push
mov
out
int3
(bad)
mov
das
sbb
push
sbb
dec
in
(bad)
jno
ds
outs
shl
add
lock
xchg
es
(bad)
call
add
adc
loopne
out
push
mov
movs
movs
rol
out
xor
es
add
outs
outs
stos
dec
call
add
adc
int
add
xor
call
es
jns
fcmovnu
addr16
repnz
xchg
mov
out
sbb
mov
sub
outs
pop
cmp
mov
out
add
fild
xchg
mov
mov
inc
pop
mov
or
mov
sbb
jle
and
cmp
dec
pop
inc
lea
or
into
cwde
or
add
retf
ja
sti
out
loopne
cmc
div
push
inc
mov
xor
in
sbb
into
add
stc
imul
es
cmps
push
jge
add
xlat
es
cmc
(bad)
add
es
call
cwde
pusha
ror
inc
gs
das
lock
stos
out
jle
xchg
retf
aam
out
xchg
jl
add
mov
out
mov
add
hlt
hlt
ds
es
mov
clc
push
es
xor
cmp
pop
loop
and
es
arpl
in
xor
inc
add
adc
lock
jno
punpcklbw
xor
dec
jmp
add
xor
sbb
mov
dec
adc
sbb
retf
es
jne
mov
mov
mov
cmp
es
add
xor
das
das
daa
xor
dec
pop
cs
pop
dec
cmp
mov
mov
inc
sahf
es
sub
les
and
xchg
es
(bad)
or
enter
sub
and
jge
pop
pop
jl
aaa
es
shl
mov
add
jae
xor
cmps
push
push
xchg
es
clc
lods
add
add
sub
add
(bad)
in
es
or
xor
push
fld
fcmovu
adc
sub
popf
sahf
es
mov
or
cmp
out
add
outs
call
add
xor
ja
mov
dec
out
or
add
xchg
out
add
addr16
add
mov
add
mov
pop
hlt
fnstsw
cmp
pop
(bad)
out
popa
xchg
sahf
es
xchg
add
xchg
xchg
clc
mov
mov
pop
pop
and
daa
add
cmp
out
sbb
sti
sbb
inc
mov
mov
imul
scas
loop
arpl
add
pop
sbb
xor
add
retf
add
xchg
aad
pop
pop
jbe
or
or
mov
jp
xlat
lds
add
rcr
out
push
jno
out
mov
call
cmp
test
add
or
adc
add
cmc
leave
mov
je
add
xor
(bad)
ins
add
rol
(bad)
mov
leave
out
int3
push
shl
out
stos
aad
jp
dec
es
in
push
add
retf
cdq
aaa
push
mov
mov
add
or
add
sti
or
loopne
icebp
mov
add
push
sbb
and
jp
fucom
loopne
mov
out
aam
adc
push
and
leave
out
add
mov
out
jp
int3
es
add
es
inc
push
cld
aas
aas
jp
add
and
pop
out
inc
cld
jl
add
pop
(bad)
sahf
sahf
cmp
add
out
std
es
jmp
add
push
ds
jl
clc
clc
out
scas
and
inc
xlat
jno
add
iret
fldenv
sub
and
ins
ins
(bad)
movs
pusha
lods
cmp
int
cld
cld
gs
cli
out
xor
retf
inc
sar
push
adc
or
fcmovu
add
cmps
xchg
sub
add
leave
mov
mov
iret
sub
push
mov
test
mov
aad
mov
sahf
out
cld
pop
popf
arpl
paddsw
cmp
loope
out
or
ins
es
cmp
bound
adc
jl
sub
inc
out
pop
mov
es
mov
scas
imul
inc
jnp
aad
and
stos
arpl
cmp
test
cmpxchg
push
push
push
add
outs
outs
xor
adc
dec
dec
jnp
lahf
out
cmps
icebp
push
es
adc
sahf
sahf
xchg
out
retf
cmp
jbe
and
in
pop
mov
push
mov
daa
add
es
ret
aad
jge
shl
out
out
or
mov
cld
jmp
retf
mov
xchg
into
pmaxsw
(bad)
out
rol
add
dec
xor
and
sub
es
add
out
push
xor
repnz
inc
dec
into
icebp
icebp
hlt
sar
mov
mov
movs
mov
es
jmp
inc
inc
mov
hlt
out
push
mov
in
inc
add
add
int3
sbb
icebp
out
dec
lahf
sbb
and
add
inc
pop
mov
cwde
dec
shl
add
pop
std
jp
fiadd
punpcklbw
movs
pop
arpl
mov
sar
sar
add
xchg
(bad)
push
iret
iret
repnz
xor
fs
add
mov
dec
es
mov
add
adc
mov
add
xchg
out
ror
and
push
stos
jle
nop
jno
xor
pop
es
push
pop
pop
ror
xchg
test
out
fcom
call
movs
and
mov
out
or
dec
es
add
xor
jg
out
adc
sub
es
cmc
mov
es
add
out
das
das
js
shl
fwait
add
not
push
pop
and
icebp
pop
repz
cmp
iret
scas
ja
int
jl
cwde
cwde
push
pop
js
cs
in
icebp
out
loopne
mov
hlt
bound
scas
mul
daa
pop
mov
add
push
push
inc
fdiv
pop
fnstsw
add
sub
inc
ror
sbb
push
mov
out
jbe
loop
rcl
pop
jl
fsubp
(bad)
xchg
xchg
adc
cwde
out
cld
in
dec
sub
xor
inc
es
mov
shr
out
cdq
loop
mov
out
sti
imul
add
sbb
es
push
pop
lock
sar
rcl
data16
aad
add
pop
cmp
fadd
fcmovne
xor
pextrw
lods
inc
inc
test
out
xchg
daa
in
xchg
mov
push
push
stos
stos
sub
inc
add
pushf
out
jecxz
shl
push
xor
ret
pop
sar
out
mov
(bad)
pop
mov
add
fdivr
dec
pop
cmp
add
xor
pop
pop
jle
push
es
loop
add
dec
dec
rcr
(bad)
out
imul
and
out
out
adc
pop
pop
xchg
movntq
push
les
std
mov
es
add
sbb
and
cmp
lahf
pop
pop
sub
je
or
or
sar
xor
lock
sub
pop
add
std
pusha
pusha
pop
int
(bad)
add
out
das
push
ficomp
out
cdq
sub
mov
repz
mov
push
test
add
sub
jl
fsub
mov
sbb
es
idiv
push
es
mov
xor
mov
xchg
inc
cli
dec
es
jle
cmp
aam
add
push
arpl
pop
ret
mov
repz
loopne
mov
push
jbe
add
xor
loopne
in
icebp
clc
add
push
xchg
hlt
add
sbb
into
jmp
scas
add
jge
cmp
sub
push
push
es
fst
rcl
sbb
jbe
ror
outs
inc
inc
out
out
es
mov
xchg
cwde
or
jle
and
in
popf
popf
cmps
aad
out
push
and
lods
jmp
xchg
xchg
cmp
and
test
xchg
add
scas
mov
xor
out
repnz
pop
in
nop
loop
pop
add
cs
mov
add
and
es
pop
mov
movs
es
adc
out
add
and
sbb
add
xor
arpl
or
clc
es
outs
push
jae
stc
pop
lds
shl
neg
es
add
arpl
es
add
inc
rol
jp
mov
xor
mov
add
pop
xor
out
rol
rcr
aam
inc
es
ss
lock
test
dec
add
sbb
adc
ret
and
es
mov
cmp
out
stos
add
es
sbb
inc
sbb
sub
jmp
push
nop
(bad)
adc
inc
mov
loop
out
and
or
out
popf
xchg
ret
add
(bad)
push
push
out
sbb
sub
sub
out
add
pop
push
test
sti
jo
push
mov
call
ins
ins
int3
mov
out
and
ja
std
add
jg
and
out
call
mov
add
jb
add
(bad)
retf
out
cmp
xor
pop
(bad)
rol
add
mov
cmp
and
cmp
or
hlt
es
add
mov
movs
xchg
out
or
test
push
add
(bad)
mov
out
neg
xchg
(bad)
add
ret
(bad)
add
out
nop
mov
imul
inc
scas
sub
mov
add
rcl
dec
dec
scas
imul
stos
add
jae
cmp
cli
xchg
add
mov
push
out
jno
loopne
mov
pop
shl
jmp
pop
(bad)
fisttp
es
inc
rcr
leave
add
xrstor
adc
dec
mov
sbb
out
test
jg
add
inc
adc
icebp
stos
cdq
shl
sbb
jae
or
arpl
loope
mov
out
jg
push
cmps
out
sbb
sbb
shl
fwait
das
push
mov
push
int
dec
es
jb
retf
pop
inc
es
in
and
cmps
cmps
loope
mov
(bad)
out
sbb
movs
push
out
push
sbb
out
clc
jecxz
es
inc
add
inc
in
in
jns
cli
out
add
int
test
ret
cwde
push
lock
xchg
pop
sar
dec
cmc
mov
xor
out
mov
int
popf
out
mov
je
add
and
aaa
sbb
push
add
movs
movs
mov
push
cmps
mov
int
imul
push
out
add
sbb
mov
cmp
es
ret
(bad)
dec
add
push
js
mov
jae
outs
rol
inc
(bad)
jmp
cmps
ja
out
imul
jge
in
pop
add
mov
nop
xchg
aad
add
in
cwde
mov
fistp
or
sub
ds
and
cdq
cs
pop
shr
or
inc
loopne
inc
add
mov
xor
xor
stc
jne
add
out
lods
and
cmp
cdq
add
int3
int3
scas
pop
xlat
out
add
inc
adc
inc
add
cmp
and
imul
mov
add
test
pusha
mov
adc
dec
fsub
leave
out
stos
add
es
xor
(bad)
cmps
add
aaa
inc
lea
add
mov
stc
out
sti
cmp
es
add
sbb
mov
lds
out
inc
cs
add
(bad)
jnp
es
pusha
cmp
bnd
call
cmp
cdq
and
retf
loop
add
mov
mov
(bad)
fild
add
jmp
shr
jle
add
push
push
clc
jmp
jl
mov
mov
movs
stos
stos
push
and
out
ret
push
sub
pop
add
fimul
lds
pusha
(bad)
fucomi
add
das
iret
add
or
mul
lock
xor
es
xchg
add
das
aad
mov
enter
sub
jmp
xor
ret
mov
jle
lock
repz
mov
out
or
dec
dec
out
inc
add
dec
es
push
add
rcr
loop
out
out
add
push
inc
pushf
mov
es
movq
or
cmps
mov
icebp
and
add
add
imul
jbe
adc
push
mov
(bad)
out
cli
push
mov
ds
loopne
je
in
cmps
scas
jle
cmp
push
or
push
test
adc
lds
add
and
mov
add
out
into
sar
es
mov
inc
mov
add
mov
out
test
jp
jl
cmp
out
xchg
jp
sbb
rol
jl
push
inc
jecxz
js
xor
mov
jmp
shr
inc
and
add
(bad)
ror
cmp
add
cld
or
test
fistp
inc
lods
sbb
shl
jle
(bad)
cmp
in
add
daa
adc
stc
mov
inc
add
dec
ror
movs
(bad)
push
add
jl
cmp
popa
xchg
adc
sub
in
dec
dec
(bad)
stos
ds
push
add
icebp
add
es
inc
mov
leave
add
lods
mov
adc
mov
dec
outs
pushf
sar
dec
ss
mov
mov
dec
jbe
in
inc
push
sub
es
leave
into
xor
cmp
add
pop
pop
icebp
pop
in
out
sbb
(bad)
es
add
test
sub
sbb
add
test
mov
or
mov
or
dec
es
mov
xchg
sahf
pusha
out
sahf
sahf
aad
scas
out
out
and
es
rcl
push
cmp
cmp
add
mov
push
dec
es
or
iret
sbb
es
in
push
dec
add
ja
pop
es
push
dec
and
add
jo
pop
and
dec
cmp
mov
in
push
call
dec
xchg
(bad)
les
test
mov
add
jns
fs
icebp
mov
imul
punpckhdq
loopne
js
int
ins
dec
mov
jecxz
cmp
ds
repz
mov
(bad)
aaa
out
sbb
jb
sub
push
add
xchg
add
and
and
mov
add
lods
out
test
(bad)
dec
jmp
mov
sub
push
out
test
pop
pop
stos
verr
fwait
lods
add
dec
(bad)
xchg
sahf
add
lahf
lea
mov
cmps
add
call
pop
int3
add
jae
(bad)
retf
out
or
push
es
retf
shl
inc
or
add
adc
cld
pop
stos
jnp
add
push
popf
pop
pop
jne
retf
out
mov
sbb
mov
hlt
cs
inc
inc
loopne
add
and
cmp
pop
pop
mov
shl
add
ds
inc
out
push
sbb
add
add
pop
pop
std
or
mov
retf
push
je
popa
popa
shl
mov
ins
add
sub
mov
add
out
or
dec
sub
adc
push
mov
or
xchg
jmp
add
(bad)
idiv
es
and
sub
add
adc
cmps
cmps
add
push
popf
movs
movs
or
aas
es
out
out
sub
xchg
mov
jl
out
fcomip
inc
es
xchg
movs
outs
outs
in
push
mov
out
test
add
sbb
adc
fdiv
aaa
fst
out
add
push
push
ins
push
sbb
pop
fsubr
xor
test
call
add
je
out
cmps
cli
in
and
pusha
(bad)
mov
leave
add
and
mov
out
sar
es
add
inc
inc
daa
cmp
sub
cmc
mov
pop
sbb
adc
out
add
out
sub
sbb
loop
add
out
imul
add
add
mov
sbb
pop
cmp
movups
repz
pop
inc
and
or
add
nop
nop
mov
jle
gs
add
bound
xor
add
push
sar
add
mov
cwde
inc
inc
sbb
cmp
fcmovne
retf
or
pop
push
rol
shl
(bad)
xlat
mov
mov
mov
inc
add
xor
cmps
sub
es
jp
seto
(bad)
adc
cmp
cs
xor
sbb
add
lahf
out
mov
into
into
inc
add
sbb
xor
add
cmps
adc
int3
int3
iret
add
mov
or
sbb
lock
sbb
jecxz
std
push
out
mov
ror
out
push
mov
jns
je
pop
out
out
add
xor
(bad)
sub
add
dec
ds
push
adc
and
shl
in
add
mul
pop
mov
xchg
push
push
add
push
es
xchg
mov
or
jmp
shr
out
mov
mov
add
mov
dec
out
clc
adc
push
push
add
es
call
mov
push
push
mov
push
out
xchg
sub
mov
(bad)
pop
scas
les
add
mov
jno
es
or
loopne
cmps
fiadd
ins
int3
int3
test
loopne
addr16
out
js
mov
add
movntq
mov
mov
add
ins
out
inc
imul
lahf
push
js
out
adc
and
jmp
xchg
jge
pop
pop
inc
je
add
out
cmp
es
jne
popf
popf
test
push
mov
out
je
push
fcmovnu
push
ins
leave
out
add
sbb
dec
add
sub
mov
mov
es
sbb
lahf
dec
dec
jno
cmp
xchg
repz
test
sub
cs
push
add
out
push
sub
mov
out
add
and
xlat
scas
mov
repnz
out
cmp
push
xchg
xchg
pop
stc
loope
mov
jg
fucomip
out
outs
jns
sub
push
inc
(bad)
das
int3
inc
jnp
mov
add
sbb
cdq
cmps
es
in
push
ret
ret
push
wrmsr
test
cmps
imul
test
stos
out
push
push
mov
mov
es
ret
fwait
ror
out
jnp
mov
sahf
out
pop
add
es
sbb
inc
add
int3
pop
add
adc
sbb
rol
add
mov
addr16
push
push
push
pop
push
out
aam
mov
sti
out
mov
enter
or
xchg
es
add
pop
pop
and
add
mov
shld
icebp
int3
pop
pop
push
or
(bad)
out
xchg
in
out
add
jmp
cdq
scas
xlat
es
push
add
imul
cmp
add
out
xor
mov
(bad)
sub
add
cmc
or
pop
pop
out
(bad)
add
lds
xor
fs
push
sbb
cmp
ja
jne
sbb
std
icebp
into
out
out
add
aaa
es
or
xchg
inc
inc
inc
jno
out
add
das
sub
out
jle
mov
rcr
add
adc
es
pop
cmp
add
sub
push
push
(bad)
ficom
adc
sub
mov
scas
add
sbb
scas
test
adc
jle
mov
(bad)
xor
fiadd
es
add
rol
mov
or
push
push
pop
xchg
mov
gs
mov
aad
pop
jp
ds
inc
sub
and
pop
dec
adc
add
test
pusha
cmps
cmp
adc
aas
inc
push
dec
out
popf
inc
pop
es
iret
outs
test
out
push
push
sbb
or
std
and
push
push
div
out
pop
test
xor
out
pushf
and
es
or
popf
jbe
pushf
push
jg
cmps
jnp
mov
and
add
and
icebp
out
ja
xchg
out
pop
mov
out
add
frstor
sbb
(bad)
jmp
je
push
sub
out
aas
loopne
add
and
(bad)
jmp
push
push
test
mov
push
pop
add
jecxz
mov
push
add
and
jae
pop
cmp
xchg
out
mov
add
ja
xor
mov
fsubr
sbb
sti
loop
imul
inc
out
outs
outs
mov
cwde
cwde
xchg
pop
or
sub
retf
add
out
stc
in
mov
mov
pushf
jmp
sahf
jmp
jns
xchg
jae
out
ds
xchg
nop
movs
add
inc
ja
lods
push
push
cmp
pop
adc
out
add
and
xchg
xchg
test
mov
icebp
adc
mov
push
lahf
call
fcmovu
and
es
add
mov
inc
inc
ror
es
js
loop
or
cmp
or
mov
xor
enter
add
cmp
sub
add
mov
lock
fwait
jle
es
or
mov
or
xor
out
push
pop
sbb
add
aas
pop
mov
xor
cwde
rcr
es
fs
mov
in
popa
pushf
es
imul
pop
pop
mov
lods
sbb
out
ja
(bad)
repnz
cmovns
jns
push
xchg
add
mov
jl
retf
ret
je
pop
stos
cld
mov
out
dec
loopne
adc
daa
int
out
mov
stos
add
out
sahf
xchg
lds
mov
and
dec
es
cmp
out
out
jmp
xchg
xchg
xchg
cmp
shl
or
xrelease
aas
add
aad
and
fdiv
ins
ins
cmp
outs
into
dec
dec
inc
iret
xor
sub
out
sub
jnp
dec
mov
out
(bad)
push
add
rcl
xchg
(bad)
(bad)
in
imul
jns
jne
in
push
xor
pop
xchg
pop
out
xor
rcr
out
dec
add
mov
xchg
loop
mov
fimul
jg
fild
add
xchg
out
retf
in
es
imul
add
out
lods
mov
ficomp
add
ret
pop
push
push
imul
movs
and
loope
lods
mov
jo
nop
shl
shl
pop
les
out
in
out
es
and
mov
add
sbb
shl
mov
pop
lds
mov
add
test
out
inc
cwde
nop
es
jmp
out
jl
imul
sub
sbb
inc
xor
mov
in
imul
out
call
sub
out
ins
add
iret
mov
xor
xor
lock
inc
xor
or
out
dec
add
mov
popa
cmp
setb
out
fdiv
fsub
loopne
add
out
sub
cmp
cmc
lock
lahf
jnp
shl
ins
fld
mov
sbb
inc
loop
sub
lock
mov
push
loopne
add
sbb
movs
int3
test
jp
add
push
out
inc
icebp
add
out
lea
push
sub
push
jo
shl
cmps
pusha
pusha
es
out
mov
pop
pop
sbb
out
mov
xchg
adc
add
mov
in
sub
es
test
cmp
sub
dec
out
stos
add
push
out
add
(bad)
rol
out
in
out
dec
add
into
mov
mul
stc
call
push
xchg
out
es
cmps
push
cdq
cdq
lock
test
push
jecxz
sub
cli
nop
in
out
push
mov
es
pushf
pushf
imul
out
inc
scas
fsubp
xor
mov
sbb
repnz
xor
es
lods
push
add
call
xor
jle
(bad)
sbb
dec
out
shl
sbb
jp
add
hlt
cli
(bad)
push
not
jb
jns
cmp
neg
out
or
rol
jns
enter
into
into
xor
push
inc
xor
es
popw
ds
pop
sbb
jmp
scas
push
test
and
les
add
das
call
adc
cdq
add
int3
int3
sti
movs
inc
sub
ins
add
out
fisttp
add
shl
add
out
add
call
add
out
xchg
push
add
into
mov
add
call
sbb
add
adc
iret
iret
(bad)
adc
es
push
add
pop
lods
jo
in
or
popf
popf
lock
add
push
(bad)
out
cmp
cmp
in
sbb
pop
dec
aaa
outs
outs
inc
add
ins
ins
inc
rol
mov
mov
add
cmps
cmp
inc
xor
and
clc
jnp
repnz
sahf
add
add
lea
mov
outs
out
iret
enter
popf
sbb
pop
add
jb
add
jmp
scas
mov
dec
jne
add
sbb
and
mov
add
add
dec
jmp
push
div
(bad)
pop
add
aad
repz
push
mov
movs
movs
dec
mov
mov
pop
pop
int3
daa
cmc
out
push
shl
jmp
mov
clc
push
fyl2x
out
jmp
mov
add
ffreep
xchg
adc
call
push
push
loope
out
out
retf
mov
aas
lock
icebp
push
push
ds
inc
es
mov
(bad)
mov
fisub
mov
es
sub
xchg
push
mov
int
shl
(bad)
mov
add
dec
out
je
out
es
pop
jb
fbld
mov
mov
ret
div
fadd
add
(bad)
inc
loope
data16
movs
outs
outs
psrlw
mov
(bad)
pusha
jmp
out
inc
inc
jecxz
jae
mov
and
lock
xlat
es
sbb
lea
sbb
jge
sub
cmps
cmps
fs
xchg
out
push
xchg
call
and
sub
mov
pop
lea
push
sti
iret
mov
lock
jo
or
in
mov
sbb
or
jae
(bad)
mov
dec
mov
and
out
mov
mov
lock
scas
jb
push
push
xchg
leave
pop
out
clc
push
add
or
cmp
neg
loopne
add
push
cmp
popf
sar
out
jmp
call
xchg
es
jno
je
sbb
std
push
and
es
cdq
pop
jmp
repz
add
(bad)
stos
jb
dec
or
cmp
lahf
pop
cld
xor
pop
pop
mov
out
adc
pop
sbb
xlat
mov
add
movs
sbb
fucomp
adc
in
es
jge
jns
jmp
stc
sub
shl
cmp
rcr
sar
out
sbb
test
out
cmps
add
xlat
xlat
sub
xchg
out
adc
loope
pop
or
out
fnsave
push
es
add
ret
ret
xchg
xchg
ret
shl
sbb
mov
inc
inc
push
(bad)
(bad)
pop
fiadd
pop
mov
inc
fnsave
sbb
idiv
cmp
mov
(bad)
add
gs
scas
inc
adc
or
push
out
add
into
lds
add
es
and
add
(bad)
fwait
ss
ret
repz
push
bound
xchg
shl
into
popa
pop
es
inc
cmp
push
mov
jg
add
inc
jmp
sbb
aaa
inc
push
and
mov
cmp
mov
xchg
ror
es
adc
add
aas
mov
mov
pop
pop
(bad)
xchg
(bad)
out
mov
repnz
add
xor
inc
aad
test
inc
out
push
movs
shl
xchg
es
mov
adc
fidivr
mov
and
sub
(bad)
lahf
es
aaa
cwde
cmp
add
mov
pushf
cmp
out
mov
call
pusha
add
je
xchg
mov
pop
xchg
sbb
inc
push
nop
jo
push
push
add
jns
(bad)
loopne
test
jb
add
stos
sub
mov
add
loope
xor
add
imul
ds
add
rcl
adc
repnz
add
sbb
jl
fwait
push
xor
leave
(bad)
movs
loopne
inc
dec
push
out
mov
nop
xchg
xchg
rol
add
in
aaa
xchg
and
push
push
out
mov
pushf
xchg
add
les
push
mov
fisub
add
adc
test
mov
mov
add
in
shl
cs
inc
mov
add
jnp
ds
and
xchg
jmp
js
out
jp
add
in
out
and
add
push
and
es
add
imul
sar
bound
and
push
iret
aad
adc
push
(bad)
in
cmp
cmps
inc
inc
mov
inc
es
add
and
out
push
add
shl
pop
out
loopne
add
fistp
fsubr
es
aaa
outs
jle
pop
fldcw
xchg
mov
cmp
ss
cwde
pusha
adc
push
dec
or
out
shr
es
mov
xchg
mov
adc
add
and
ret
jbe
sub
sub
add
pcmpgtw
movs
movs
test
cmps
out
mov
xor
cdq
out
es
add
or
(bad)
cld
pop
lods
push
add
in
mov
sti
cmps
mov
inc
lahf
lea
xchg
mov
cld
movs
movs
lock
mov
mov
je
cmp
es
pminub
dec
es
imul
jo
xor
cli
test
xchg
adc
es
sti
popa
repz
out
pop
loopne
pop
pop
mov
call
add
pop
movs
popa
push
es
(bad)
scas
cwde
cwde
sahf
pop
les
out
mov
loopne
fisub
jae
dec
add
icebp
add
jnp
push
add
es
or
adc
add
push
push
jmp
pusha
sbb
add
out
sbb
add
add
push
sysret
nop
nop
jbe
inc
es
sub
mov
add
stos
es
inc
sbb
fcmovnu
pop
inc
(bad)
bound
shr
loop
mov
push
out
call
hlt
xor
pop
pop
xchg
mov
adc
in
scas
push
add
retf
sub
inc
test
imul
int
clc
clc
cmp
out
fild
ins
cmp
out
adc
xor
out
sub
push
in
in
outs
add
ret
mov
not
inc
add
mov
js
es
xchg
ds
add
mov
test
sbb
adc
or
es
addr16
(bad)
out
or
jp
add
and
popf
test
add
out
sub
test
sub
mov
cli
es
add
mov
lods
out
in
xor
and
pop
cmps
cmps
dec
adc
sub
push
cmp
jl
jge
jno
test
mov
(bad)
or
and
das
and
test
add
mov
out
mov
add
sub
or
aam
and
mov
loop
sti
out
sbb
mov
pop
pop
out
mov
fucom
cmp
movs
xchg
out
mov
cmp
out
fnstcw
add
jmp
dec
clc
mov
rcr
sbb
pop
enter
shl
ds
mov
int3
add
(bad)
push
sub
aam
pop
mov
mov
scas
push
add
out
(bad)
jl
out
adc
int
jno
adc
xor
xor
out
cli
ror
xor
jg
mov
js
scas
and
into
es
lds
cmp
sahf
sbb
fistp
sbb
lods
(bad)
mov
jo
jb
aaa
inc
repnz
lods
out
(bad)
enter
add
push
sbb
push
fwait
iretw
iret
or
xor
push
dec
add
push
out
sahf
mov
dec
add
(bad)
out
and
cmp
pop
adc
stc
call
xchg
add
sub
(bad)
int
(bad)
movs
lock
inc
add
loope
cs
out
pop
shl
or
ins
xchg
test
fist
nop
sbb
pop
cmp
jle
in
xchg
push
fsub
sar
jl
and
enter
add
(bad)
std
iret
jb
mov
lds
retf
in
and
and
out
adc
sbb
add
mov
sar
inc
add
xor
repz
cmp
jo
adc
(bad)
pop
pop
or
je
push
or
xchg
imul
sar
test
add
adc
mov
add
jle
int3
xchg
out
or
into
shl
fs
arpl
iret
cli
push
xlat
es
add
popf
pop
add
es
nop
pop
mov
add
int3
aaa
mov
mov
adc
cli
cli
int
push
out
cwde
sub
pop
add
xchg
lea
inc
and
jo
es
push
cmps
mov
inc
pop
fld
inc
jo
out
scas
xor
cdq
sbb
add
push
div
cmc
add
out
add
es
lods
lea
push
div
dec
and
aam
enter
pop
xchg
cmp
add
inc
es
addr16
pop
retf
retf
mov
add
sbb
cmps
pop
repnz
and
mov
test
lods
inc
(bad)
out
or
sahf
xlat
xlat
push
mov
add
out
mov
iret
fsubr
push
pop
es
mov
add
pop
sbb
out
mov
jecxz
xlat
add
inc
xchg
lea
(bad)
push
jbe
add
js
arpl
mov
imul
pop
loope
cmp
add
push
cmp
xor
dec
or
pop
add
shl
in
cli
sti
cmp
mov
mov
jmp
nop
sub
clc
pop
mov
pop
push
sahf
(bad)
add
mov
pop
pop
mov
mov
pop
icebp
adc
test
mov
popf
add
cmps
in
fimul
unpckhps
sub
add
sub
je
xor
aas
pop
add
cmp
pop
dec
es
out
add
mov
lods
es
or
jmp
xchg
nop
nop
dec
mov
out
add
sub
mov
jp
test
pop
idiv
cmp
cli
mov
add
and
scas
(bad)
cs
daa
out
cmp
jo
jge
sbb
aas
aas
cmp
pop
mov
cdq
add
rcl
sahf
retf
lahf
scas
add
(bad)
mov
add
(bad)
into
lock
jnp
jle
clc
es
and
sub
push
xchg
enter
add
es
push
out
mov
cwde
std
xchg
out
rol
inc
loope
and
out
xchg
es
jg
jnp
pop
sbb
rol
test
push
adc
aas
add
icebp
dec
dec
je
mov
lods
add
cmps
cmps
cmp
add
pop
mov
push
imul
(bad)
xchg
add
out
out
inc
ret
add
(bad)
out
jge
imul
das
loop
add
stc
jne
lahf
lahf
ds
out
pop
mov
(bad)
pop
add
or
cs
add
outs
adc
cld
bound
out
add
out
stos
icebp
ds
out
or
and
adc
ins
and
xor
sub
mov
mov
add
retf
out
jle
xchg
es
or
add
xor
jmp
xor
add
(bad)
(bad)
and
out
add
sub
sbb
jge
pop
pop
out
add
add
js
jmp
sbb
push
rcl
add
cmp
add
es
push
hlt
cmp
int
movs
(bad)
mov
jne
bound
add
shl
sbb
jo
push
arpl
push
popf
shr
adc
cmp
or
out
dec
aas
and
shl
jl
add
xchg
iret
mov
mov
jle
xchg
push
scas
push
mov
push
hlt
add
es
inc
int
cmp
add
out
test
push
out
lock
and
mov
xchg
sbb
dec
cmc
sahf
add
dec
aas
mul
sbb
int3
ret
cmp
popf
out
cdq
mov
mov
mov
pop
add
xor
movs
pop
ret
fistp
add
mov
cwde
pop
inc
inc
add
test
mov
mov
mov
add
das
push
push
loope
add
sbb
in
mov
mov
jae
xchg
out
mov
add
out
mov
out
cmc
scas
xchg
sub
pop
scas
xor
mov
mov
out
inc
jae
es
sbb
shl
pop
cmp
call
add
pop
inc
es
pop
add
or
sbb
add
ret
jbe
pusha
rcl
xor
pushf
test
adc
add
out
jl
mov
mov
out
pop
xor
es
sbb
adc
add
adc
out
mov
out
pusha
cmp
push
push
ins
data16
das
mov
or
add
daa
jbe
es
not
xchg
call
es
lds
fcmovu
pop
push
rol
mov
cmps
bound
xchg
jmp
(bad)
fnstsw
add
(bad)
fisubr
cli
add
sahf
test
shl
es
push
jle
cwde
mov
out
jnp
out
dec
mov
shl
or
pop
add
out
add
xchg
jge
jae
add
stos
stos
imul
fwait
out
xor
pop
fs
pop
push
adc
ds
aam
addr16
leave
sahf
sbb
bound
add
mov
pop
jle
xchg
add
jecxz
sub
inc
(bad)
das
jp
adc
popa
add
in
rcr
jae
fild
add
mov
add
add
es
jo
pop
pop
div
sub
xor
inc
cmp
mov
or
cmp
pop
push
mov
loop
xor
inc
out
jb
add
cmp
scas
out
imul
sub
je
cld
sub
mov
add
add
bound
push
jmp
scas
mov
and
int3
sub
add
or
jge
popa
out
jo
(bad)
es
add
lea
icebp
jbe
mov
es
loopne
pop
sub
add
es
fiadd
or
and
in
add
dec
lods
sub
add
sbb
push
xor
sub
out
test
add
dec
jae
dec
iret
iret
js
jmp
mov
add
fwait
test
push
fcmovnu
add
jg
mov
pop
sbb
es
imul
add
jae
add
sub
inc
es
out
call
out
icebp
icebp
clc
push
pop
out
add
xchg
enter
add
push
fistp
pop
pop
outs
loope
mov
sahf
jecxz
sbb
xor
out
out
imul
xchg
or
jmp
mov
jnp
lgs
xchg
pop
iret
add
push
out
neg
pop
rcr
pushf
shl
(bad)
loop
iret
add
out
call
or
jge
add
div
add
mov
dec
cs
dec
mov
cmc
es
sbb
ins
ins
icebp
stc
mov
xor
push
imul
mov
pop
pop
jns
call
gs
add
jmp
or
neg
cli
add
mov
pop
cmp
adc
ds
mov
mov
mov
xchg
cmp
inc
es
mov
pushf
pushf
dec
add
fild
dec
fucomp
es
shl
fadd
mov
add
mov
es
xchg
imul
adc
fwait
aam
and
add
mov
add
es
mov
loop
xor
out
pusha
cvtpi2ps
imul
or
inc
arpl
mov
dec
dec
test
and
push
push
mov
inc
mov
cs
xchg
add
cwde
mov
pop
shr
pop
es
xchg
jne
jbe
aam
es
and
(bad)
aad
lods
std
pop
ins
out
popf
test
add
fcomp
cli
es
add
(bad)
sti
mov
es
mov
in
es
mov
adc
mov
or
lds
xlat
push
out
add
pop
fwait
add
xchg
sub
in
adc
sub
or
add
lods
out
pop
inc
bound
add
or
cmp
movs
retf
retf
add
jae
and
mov
lock
cld
mov
mov
das
push
ins
or
jae
and
or
mov
add
je
xchg
hlt
jo
xchg
push
sbb
out
or
(bad)
in
in
int
aad
push
faddp
lock
or
xchg
out
mov
es
addr16
inc
pop
aad
xchg
xchg
std
xchg
xor
out
sbb
pop
push
nop
mov
out
add
mov
xchg
dec
loopne
out
lds
push
bound
cmp
out
jns
inc
push
push
add
inc
out
push
loopne
jecxz
cmp
clc
clc
add
cmp
out
add
inc
shl
or
mov
add
bound
adc
cmp
push
pop
out
enter
add
adc
rcl
out
add
in
daa
daa
dec
add
es
sbb
lea
dec
out
or
lahf
mov
out
pop
aam
jae
mov
or
xor
in
lds
push
sub
xor
dec
inc
add
mov
pop
imul
push
sub
push
pop
scas
out
sub
cwde
add
dec
das
das
jae
sub
xor
and
sahf
sahf
aaa
jo
cs
add
pop
imul
shr
jl
dec
dec
in
mov
lods
(bad)
and
add
dec
mov
cmp
lea
imul
push
jge
fucomip
or
in
in
repnz
icebp
adc
xchg
xchg
add
out
pop
jb
es
aas
add
ss
fwait
outs
add
add
dec
sub
add
jle
inc
es
test
push
icebp
xchg
mov
out
pop
inc
fld
add
scas
add
dec
cmp
daa
and
and
ror
dec
dec
push
xchg
xchg
out
adc
jns
ror
aam
adc
out
jbe
xchg
es
pop
cwde
xor
loop
(bad)
es
dec
fsub
int3
inc
jns
inc
inc
test
and
pop
sbb
and
leave
sti
ja
pop
clc
mov
out
add
xor
out
loop
popa
es
sbb
inc
sub
pop
or
xor
rol
out
cmps
mov
sbb
pop
pop
mov
add
jle
aad
pop
(bad)
fistp
out
cmp
jae
loopne
scas
and
ss
xchg
add
les
cmp
test
gs
push
push
lods
jae
in
popa
jo
sbb
fsub
push
push
inc
add
rcl
lahf
fcom
cwde
mov
jg
gs
xchg
test
ret
aaa
repz
pusha
aad
sub
hlt
int3
add
pop
pop
lods
mov
push
jmp
mov
fnsave
mov
es
add
lock
fs
out
sub
cwde
leave
leave
add
out
int
jl
pop
loopne
test
add
sbb
cs
cli
sbb
add
(bad)
sub
push
cmp
int
jle
push
push
add
out
xor
and
add
lds
add
mov
es
dec
shl
mov
aad
or
sbb
js
or
inc
sub
out
cld
lahf
mov
adc
inc
add
stos
sub
fdiv
dec
mov
cdq
push
push
adc
rcl
(bad)
add
cwde
bound
es
jmp
add
es
gs
nop
fild
sti
in
out
out
loopne
pop
sbb
xlat
mov
out
mov
bound
mov
test
xchg
enter
add
out
fnstcw
es
jo
or
aas
int
cmp
inc
lahf
lahf
lods
mov
es
sbb
mov
jno
stos
stos
adc
mov
fsubr
call
mov
mov
push
push
inc
out
in
add
scas
(bad)
dec
add
sbb
pop
out
cmps
mov
lahf
shl
add
sahf
daa
add
int
sbb
out
mov
fst
or
add
ja
jno
mov
clc
es
jnp
sbb
inc
stc
out
xor
pusha
es
(bad)
fld
bound
jmp
push
push
push
lds
out
jle
(bad)
es
jbe
rcl
es
es
mov
dec
xchg
ret
mov
movs
out
jmp
add
pop
out
sub
ds
cld
xor
add
repnz
pusha
pop
pop
cmp
xchg
cmps
cmps
mov
or
dec
lea
dec
cmp
add
cs
cmp
dec
out
ror
es
xchg
xlat
movs
movs
int
mov
pop
add
jae
and
sahf
jge
out
es
sub
cli
mov
out
and
fstp
cld
add
or
xchg
rol
(bad)
add
retf
iret
and
push
mov
dec
inc
jg
es
in
(bad)
add
inc
cs
cmp
out
or
mov
out
rcl
xor
out
fist
pminub
xor
mov
mov
or
add
mov
mov
sub
nop
nop
add
out
dec
push
cs
cmp
(bad)
aas
pop
test
add
std
fwait
fwait
jne
test
xor
je
psrld
es
add
repnz
and
fidiv
iret
add
imul
xchg
xchg
xchg
add
xchg
hlt
out
and
jae
shl
(bad)
in
add
mov
inc
mov
in
dec
dec
adc
es
lahf
add
push
and
add
out
arpl
es
je
rcl
jb
add
jo
pop
push
jp
rol
shl
cmps
ja
es
arpl
inc
es
sbb
pushf
fisub
ret
fisttp
lods
repnz
pop
loopne
mov
stc
inc
add
ins
ins
and
sub
cmc
adc
hlt
hlt
pop
(bad)
jmp
inc
enter
mov
add
inc
xchg
out
es
jno
lock
jne
(bad)
das
test
xor
mov
pop
mov
sti
jbe
sub
out
push
add
out
cmps
in
or
push
push
std
dec
(bad)
es
add
cmp
cmp
add
inc
adc
dec
dec
stc
sbb
loop
add
out
push
jmp
mov
es
xor
iret
add
jb
out
frstor
xchg
sbb
and
pop
icebp
icebp
ins
push
outs
es
mov
ja
data16
add
out
mov
and
out
rol
jbe
xchg
sti
out
mov
outs
test
das
add
xchg
aad
ds
gs
add
cmp
popa
sti
xor
and
mov
es
jg
test
aas
imul
pushf
mov
out
lfs
or
or
lock
out
test
mov
sti
add
jae
out
mov
ins
out
xchg
pop
data16
lds
cmp
sti
add
push
out
cli
sub
xlat
xlat
jecxz
jo
mov
pusha
cld
add
adc
fild
or
shl
out
add
int
mov
push
add
lahf
(bad)
add
dec
dec
dec
cmc
jo
out
add
es
loope
(bad)
dec
dec
hlt
hlt
push
cli
and
retf
ins
ins
add
out
push
cdq
add
lods
pushf
out
fwait
cmps
clc
es
data16
xor
es
dec
mov
inc
inc
and
mov
pop
lea
sbb
sar
cmp
adc
pop
add
mov
aad
addr16
jns
xchg
jne
out
jno
fldenv
sbb
(bad)
and
mov
es
mov
mov
sub
pop
pop
cmps
pop
movs
out
add
cmp
out
je
cmp
out
sbb
pop
jno
jmp
pop
mov
cmps
add
mov
sbb
imul
xchg
xchg
sub
dec
es
aaa
pusha
cmps
cmps
sub
movs
movs
in
add
sti
cwde
in
dec
xchg
hlt
xor
push
sub
and
and
cmc
xchg
es
cs
rcl
mov
idiv
and
xor
pop
pop
ret
cmps
scas
out
or
push
add
call
call
mov
mov
inc
stos
push
mov
add
es
or
cmc
add
test
enter
jl
cmp
retf
lock
xor
sub
cmp
ud1
adc
sbb
rcl
inc
xchg
mov
repz
sbb
pop
pop
jbe
or
or
add
out
pushf
mov
add
leave
and
sub
inc
cmp
movntq
and
mov
sbb
cmp
out
cmp
sti
es
mov
hlt
ds
jg
inc
sbb
shl
add
out
int3
repnz
clc
rcr
adc
(bad)
repz
jno
stc
cld
add
daa
stos
push
scas
out
js
xor
add
jmp
dec
pusha
pusha
add
out
enter
dec
iret
add
out
std
popf
cmp
inc
push
mov
mov
fs
(bad)
cli
cli
ja
out
add
out
pushf
or
leave
test
out
and
mov
xchg
add
push
or
sbb
add
mov
xchg
xchg
mov
inc
jae
or
dec
rol
out
clc
cmps
add
(bad)
sub
rcl
add
xor
or
xor
sub
bound
imul
adc
mov
add
inc
les
popf
adc
xor
add
and
dec
add
sbb
cld
(bad)
adc
out
mov
jmp
add
dec
outs
inc
out
test
ins
enter
push
out
loope
sub
jbe
adc
sbb
in
es
loopne
std
cmp
mov
push
pop
pop
sbb
out
sbb
cmp
shl
push
lds
out
inc
jp
es
jecxz
dec
dec
adc
int3
add
mov
sbb
cmps
cmps
jb
mov
add
jge
dec
rol
stc
mov
and
pop
in
jae
dec
aaa
rol
jmp
cmp
add
xor
pop
mov
add
cmp
sti
pop
add
out
add
fsub
mov
rol
add
and
leave
mov
cwde
es
add
cmp
sub
mov
push
mov
cmc
inc
cmp
mov
std
std
jmp
(bad)
es
adc
sbb
sub
push
test
sbb
mov
push
push
adc
in
lods
shl
pop
add
in
xchg
std
cmp
out
mov
push
sbb
xlat
and
out
ss
and
add
mov
popa
and
out
add
push
popf
sti
shl
xchg
pop
cmp
retf
dec
add
out
nop
xor
mov
adc
xchg
out
rol
and
lods
fst
fstp
mov
dec
mov
add
scas
dec
xchg
out
lahf
sub
(bad)
push
rcl
das
push
iret
or
shr
dec
(bad)
les
mov
xor
jg
enter
out
sar
es
xor
ins
add
inc
add
es
popf
scas
pop
pop
repnz
(bad)
ins
leave
neg
popa
popa
jns
jmp
fadd
add
cld
push
push
mov
mov
inc
add
aas
not
rol
repz
sbb
add
adc
ins
fcomp
and
push
es
sbb
imul
or
push
push
push
ret
icebp
icebp
or
mov
adc
out
dec
out
add
pop
and
dec
xchg
sbb
out
push
(bad)
xor
push
(bad)
sbb
pusha
jb
inc
rcl
(bad)
sub
out
or
xlat
es
xchg
xor
sti
idiv
pop
jnp
add
jmp
mov
or
out
fwait
dec
add
icebp
jmp
mov
jns
cmp
push
push
jmp
xor
add
out
out
jns
add
in
sbb
imul
add
adc
inc
ja
jbe
dec
add
mov
mov
jns
out
fsubr
add
pop
mov
out
adc
mov
add
movs
ret
or
mov
stos
test
pop
push
pop
out
and
and
push
mov
pushw
add
inc
aad
fstp
es
dec
mov
add
jecxz
pop
lock
cmp
shr
jl
add
xchg
mov
ss
xchg
fldcw
leave
out
add
adc
sub
jae
test
in
xor
sbb
es
mov
fwait
mov
add
std
dec
or
add
push
adc
or
add
sbb
dec
out
cld
jne
mov
dec
sar
cmp
(bad)
aam
sub
mov
out
add
arpl
adc
pop
pop
int3
in
jae
add
dec
dec
sub
out
enter
or
xor
out
mov
and
xchg
or
cdq
shl
es
add
cld
add
stc
push
mov
push
and
out
sub
jb
add
retf
mov
mov
xor
sar
stc
add
adc
mov
xchg
add
addr16
inc
es
jmp
push
mov
sar
rol
es
jge
inc
into
into
pop
out
es
in
cli
repz
jmp
push
sbb
dec
pop
mov
inc
xor
cmps
add
or
test
rcr
aaa
aaa
sub
mov
rcl
sbb
es
dec
cs
push
add
popa
popa
push
outs
ss
fiadd
push
mov
out
out
rol
es
out
clc
adc
pop
pop
cmc
imul
es
es
push
push
sbb
pop
es
add
sub
dec
clc
clc
sti
add
pop
cwde
bound
sub
push
or
cmp
(bad)
xor
add
push
add
add
lds
mov
imul
sub
cmc
cmc
adc
add
add
xchg
out
test
mov
jle
int
scas
popf
pop
scas
clc
clc
fwait
add
pop
dec
add
es
int
mov
lea
lods
mov
sub
xchg
add
out
adc
mov
mov
sub
push
outs
cmp
add
fdiv
movs
or
add
call
js
repz
repnz
into
mov
es
push
dec
(bad)
dec
ins
add
cmp
out
hlt
pusha
lahf
es
js
add
xor
adc
xor
xor
es
or
mov
add
add
inc
out
xchg
hlt
in
into
into
xor
adc
pop
pop
or
lods
jg
sbb
out
inc
mov
xor
jmp
ror
add
lods
out
xchg
(bad)
loope
jne
add
out
jmp
cmp
jge
add
mov
out
les
push
add
xchg
fisttp
push
rcl
std
(bad)
dec
es
adc
cmp
sti
sti
sbb
jno
repz
icebp
test
add
push
sub
cmp
pop
pop
outs
cmp
mov
push
imul
pop
out
shl
es
sbb
shl
adc
push
fisubr
out
sub
es
or
aad
pop
pop
sub
out
mov
pop
aam
out
add
out
pop
pop
xor
sar
mov
in
scas
sbb
pop
push
out
cmp
add
clc
into
dec
add
cwde
jle
or
jae
adc
arpl
mov
shl
int3
sbb
mov
enter
sbb
add
fs
sub
cli
mov
inc
pop
xor
out
lods
add
add
or
add
xor
fcom
pop
pop
inc
mov
fstp
icebp
icebp
jge
bound
inc
inc
sub
push
dec
jmp
mov
(bad)
cld
cmps
cmps
loope
add
adc
cmp
xor
cmps
cld
cld
pop
aas
mov
sbb
imul
push
es
inc
or
or
push
es
clc
pushf
inc
add
add
es
mov
add
xor
in
xchg
jno
out
mov
pop
nop
mov
data16
es
push
outs
dec
dec
call
fisub
es
sub
jne
lea
and
mov
jne
add
fs
mov
mov
add
fldenv
sti
out
es
mov
fs
sub
loopne
shl
or
push
jp
inc
cmp
xlat
or
push
add
in
loope
div
int3
movs
add
scas
adc
addr16
mov
out
repnz
dec
in
fwait
inc
xchg
sbb
ror
xor
aad
cs
(bad)
out
dec
call
cmp
div
push
mov
es
lock
add
pushf
out
mov
out
loopne
cmp
clc
mov
mov
add
out
xor
popa
add
push
imul
pop
add
pusha
jo
ins
ins
xchg
adc
aaa
cmp
mov
gs
es
sahf
jbe
cmp
retf
cmps
cld
es
jp
fild
and
add
lods
cmp
pop
pop
xchg
movs
add
(bad)
push
xchg
aaa
dec
dec
ins
jle
push
push
pop
aad
out
mov
inc
rol
and
shl
pop
xchg
ja
jb
(bad)
out
or
dec
sbb
loop
in
es
icebp
add
push
pop
adc
(bad)
out
xchg
xchg
push
sbb
add
es
mov
inc
inc
call
rcl
pop
(bad)
es
in
mov
xlat
pop
pop
add
inc
sar
dec
in
cmp
pop
es
vandnps
adc
rol
and
adc
es
sub
xor
es
add
es
jge
pop
pop
add
ret
and
add
xor
pop
in
nop
nop
daa
jb
es
ror
mov
pop
add
out
imul
imul
das
das
adc
fwait
out
arpl
cmp
je
test
pop
in
movs
mov
in
mov
xchg
es
test
sahf
scas
adc
add
mov
mov
add
aam
sub
add
xchg
out
mov
lea
out
mov
cmc
les
mov
outs
sbb
imul
add
leave
sub
cmp
add
outs
out
cwde
es
es
mov
clc
aaa
aaa
out
lahf
lock
imul
add
test
add
ret
gs
test
xchg
add
es
sub
retf
and
test
es
fistp
pop
fsin
(bad)
pusha
js
mov
add
out
jge
out
sub
inc
add
pop
movs
fcmovnb
es
dec
dec
mov
aam
call
loopne
xchg
add
or
cmps
jbe
imul
add
out
test
or
sti
sub
jae
lock
bound
call
inc
push
push
mov
movntq
add
test
cld
lods
int3
int3
inc
mov
add
out
out
inc
mov
es
or
adc
es
push
movs
sub
test
xchg
es
call
add
inc
pushf
jl
dec
dec
daa
xchg
push
xchg
xchg
out
xchg
out
mov
arpl
cmps
popf
out
nop
test
inc
sbb
push
cwde
es
data16
mul
push
es
add
inc
jmp
cmp
test
and
pop
add
xchg
out
std
mov
add
pop
pop
lahf
je
or
and
sub
add
out
dec
cs
push
jae
(bad)
pop
xchg
or
xor
rol
add
sub
imul
push
(bad)
js
add
aam
add
rcr
cld
sbb
and
and
stos
stos
inc
and
out
sbb
inc
scas
das
out
dec
dec
xchg
add
mov
lea
aas
add
stos
stos
mov
adc
sbb
jns
pop
rol
es
push
out
jmp
out
and
sbb
in
push
push
jmp
push
es
add
xchg
retf
push
out
inc
es
jp
femms
out
(bad)
push
(bad)
es
out
rcr
div
fld
add
sbb
ffreep
int
cmps
cmps
add
push
loopne
cmc
adc
cs
pop
pop
mov
xor
js
jg
sbb
push
movs
out
ins
sub
add
sar
and
add
out
jecxz
push
dec
dec
add
test
retf
popf
popf
bnd
test
test
cmp
mov
push
or
add
mov
movs
movs
cmp
inc
out
jns
das
cmp
(bad)
add
mov
dec
imul
arpl
sahf
jo
mul
and
add
dec
sub
jnp
add
lock
cmps
or
ret
in
xor
lar
mov
add
add
in
jmp
jns
add
cmps
or
fisubr
out
cmp
adc
sti
xchg
and
add
mov
loopne
sbb
cmp
add
push
out
fiadd
inc
mov
and
inc
sub
and
add
sbb
add
mov
fbld
fs
sbb
ret
cmc
(bad)
test
add
es
inc
cmp
or
jge
je
add
mov
add
jle
aam
adc
cmc
xlat
cmp
pop
mov
shl
sbb
push
pop
out
pop
stos
add
push
cmp
mov
inc
es
inc
cmps
mov
push
retf
retf
dec
repz
out
add
ins
dec
dec
es
das
bound
shl
add
add
jge
xchg
std
(bad)
(bad)
enter
add
sub
inc
xor
out
jge
jo
jno
fdiv
out
xor
add
rcl
(bad)
add
movs
out
pop
add
xchg
xchg
jae
mov
jbe
outs
add
(bad)
push
int
fsub
(bad)
xchg
jnp
loopne
test
jo
lahf
lahf
add
gs
(bad)
es
push
adc
ficomp
ret
push
or
inc
lea
add
fldl2t
cmp
out
push
sar
out
fwait
call
out
add
ret
add
jo
mov
mov
mov
cmp
(bad)
sbb
stos
and
ss
xor
in
mov
out
std
push
and
and
sbb
cmp
mov
add
mov
test
sbb
add
cmp
pop
out
test
add
aam
mov
lods
cld
jne
sub
push
dec
fbld
jge
add
fcmovu
push
sqrtps
dec
xor
out
(bad)
sar
inc
inc
adc
cwde
out
xor
sub
(bad)
and
or
sub
arpl
es
rsqrtps
rol
shr
(bad)
movs
(bad)
out
in
add
fstp
inc
xor
es
ret
sub
scas
fld
add
stos
stos
cmps
inc
bound
sub
sbb
or
and
add
ss
fisub
out
mov
or
out
jle
rol
mov
lea
pop
pop
mov
rcr
sahf
sahf
add
(bad)
lods
mov
adc
es
lea
fucomp
xchg
or
out
add
push
push
mov
xlat
add
xchg
xchg
scas
cmps
and
mov
dec
call
mov
icebp
int
add
out
stos
iret
sub
int3
push
pushf
out
or
es
(bad)
dec
es
jecxz
dec
dec
in
cmc
test
sub
add
add
adc
popf
push
xchg
push
fld
sbb
pushf
mov
cmp
out
dec
mov
rol
adc
add
es
mov
ja
mov
push
mov
out
int3
cmps
inc
es
push
test
sbb
call
data16
cli
cli
cmp
(bad)
out
xor
mov
add
mov
xor
es
shl
add
jno
fbld
js
loop
(bad)
in
leave
add
out
pop
fwait
aaa
add
mul
fistp
add
aas
push
push
jmp
ja
jne
jns
out
clc
loopne
es
jmp
cmps
sahf
sahf
add
mov
xor
popa
pop
add
in
jecxz
(bad)
mov
retf
out
sub
add
mov
or
es
sar
jge
repz
sbb
retf
cli
cmp
loop
add
mov
add
or
stos
shl
xchg
jnp
xchg
push
sbb
pusha
xchg
cmp
pushf
das
sbb
retf
sub
aas
stc
push
mov
add
xchg
out
leave
pop
icebp
es
inc
add
jne
mov
mov
jle
add
or
push
rcl
pop
imul
mov
xor
pop
cmps
outs
jle
jg
gs
dec
hlt
mov
out
sbb
adc
pushf
cwde
cwde
daa
xchg
out
add
mov
add
repz
pop
pop
mov
ins
or
aas
sti
sti
sub
out
(bad)
add
xor
call
std
and
lds
daa
es
out
add
es
mov
pop
fs
and
add
inc
daa
imul
add
es
bound
mov
inc
out
in
add
es
pop
cmp
jo
add
jb
lahf
push
or
cmps
cmp
xchg
or
imul
pop
jmp
add
out
xor
xlat
ret
out
add
or
push
adc
out
push
(bad)
push
push
mov
es
pusha
sub
mov
stc
les
es
push
jle
pop
pop
add
fild
pop
outs
jae
inc
inc
push
sub
adc
fdivr
inc
out
(bad)
sub
jle
add
es
and
or
pop
call
es
into
pop
fdivr
fnstenv
add
mov
and
mov
test
xchg
sbb
jl
fsub
scas
mov
or
add
iret
mov
and
movs
add
out
imul
es
es
fucom
push
das
loopne
mov
pop
maskmovq
imul
add
jecxz
inc
dec
mov
dec
out
jp
inc
es
repnz
sub
and
xchg
out
pop
dec
das
es
mov
shr
jnp
fild
mov
ret
pop
aam
sbb
out
in
sub
out
shl
add
enter
es
add
pusha
and
add
push
ja
xlat
shl
outs
add
loopne
jl
mov
(bad)
sbb
add
or
loopne
push
push
pusha
add
jne
pop
sbb
mov
mov
leave
sahf
shl
adc
cmp
ds
mov
mov
mov
js
test
je
out
hlt
cli
outs
add
mov
xchg
mov
push
fsubr
add
push
xchg
test
adc
call
sbb
in
popa
cmp
int
add
mov
enter
es
les
add
out
jae
mov
movs
jge
add
in
out
cli
dec
es
repnz
pop
int
jae
mov
and
sti
test
jmp
push
pop
mov
add
loop
popf
les
mov
add
dec
out
ins
mov
add
loopne
pop
mov
daa
xor
add
xlat
xor
pop
es
and
jecxz
lea
push
pop
pop
dec
pop
aam
add
and
ss
sbb
add
pop
or
retf
add
aaa
sbb
and
(bad)
(bad)
fmul
in
jg
add
into
sbb
es
jnp
test
mov
test
les
out
add
dec
repnz
adc
add
mov
out
shl
shl
add
call
and
sub
out
out
xor
push
xadd
(bad)
arpl
loopne
inc
jb
out
sti
fdivr
push
xchg
xchg
lds
rcl
sub
dec
out
push
push
ins
es
inc
ins
mov
nop
push
repz
neg
test
les
jne
test
push
add
xchg
xchg
pushf
jl
add
mov
push
out
pusha
mov
leave
popa
aam
push
js
es
loope
and
or
add
push
inc
inc
push
or
xchg
xchg
mov
cmp
test
arpl
out
push
mov
rol
or
inc
jno
add
mov
out
add
jb
mov
sbb
scas
inc
jbe
(bad)
(bad)
aaa
sar
ja
pop
or
add
or
lea
into
mov
movs
es
int
dec
pop
pop
push
bound
out
or
dec
cmc
jg
jns
add
fstp
push
(bad)
xchg
out
fnstcw
cmps
movs
inc
inc
cmp
es
int
add
dec
dec
or
cmps
cli
xchg
es
out
lock
pusha
sbb
outs
push
js
cmp
cmp
in
in
mov
jle
xor
inc
mov
jge
xchg
js
out
inc
mov
aam
xchg
test
cmp
mov
sbb
enter
mov
add
es
mov
pop
je
das
pop
repnz
dec
dec
add
es
jnp
cmp
dec
es
push
mov
test
adc
sub
add
add
ja
xor
add
jo
es
in
int
add
sbb
mov
inc
add
adc
out
(bad)
es
jle
pusha
pusha
rcr
dec
cmp
pop
(bad)
xor
add
aas
stos
mov
out
dec
add
es
test
nop
lock
add
call
aad
clc
lahf
add
mov
pop
repz
or
adc
push
into
xchg
and
inc
sbb
push
mov
fdivr
out
pop
add
cmps
cmps
inc
mov
out
xor
sub
add
test
mov
or
xchg
xchg
pop
jge
mov
out
dec
nop
in
xor
daa
add
inc
aad
xchg
add
(bad)
xor
add
mov
test
mov
ins
popa
popa
ja
fcomp
out
cwde
jmp
jmp
dec
jnp
out
xchg
nop
es
xor
lods
xor
es
int
dec
bound
ds
es
mov
inc
pop
add
stc
adc
xor
and
and
faddp
data16
add
pop
pop
out
out
add
dec
dec
push
mov
out
xchg
add
out
dec
retf
call
lods
jge
cmp
movs
xchg
(bad)
sldt
out
sahf
mov
es
add
jecxz
cmp
mov
or
out
and
aas
add
pop
xchg
push
movs
movs
xchg
add
ja
pop
stos
mov
pop
pop
push
push
shl
mov
(bad)
stc
dec
add
out
dec
pusha
outs
dec
and
add
not
sub
out
mov
mov
add
add
add
dec
sub
jnp
xlat
add
out
adc
or
in
idiv
cmp
out
mov
retf
inc
inc
pop
add
sub
push
pop
les
es
mov
aam
cmp
aas
cmp
cmc
xchg
add
inc
test
xchg
dec
add
stc
and
mov
popa
inc
fmul
int
push
mov
ds
stos
add
rol
(bad)
hlt
out
sar
add
push
push
jecxz
les
rol
sahf
push
push
adc
inc
clc
pop
pop
sub
cdq
mov
fiadd
pop
pop
xchg
or
push
cmp
es
enter
add
in
es
aad
loopne
or
out
es
pop
dec
inc
ins
ins
fst
jmp
add
mov
inc
aad
(bad)
setge
sbb
inc
mov
xor
add
mov
pop
setp
pop
dec
push
xor
out
jp
ret
inc
inc
test
jl
pop
mov
out
mov
leave
es
cs
add
add
es
imul
cmps
(bad)
stc
mov
out
and
dec
es
xchg
enter
out
ins
ins
loopne
dec
and
sub
shl
out
add
add
loop
call
mov
add
sub
ret
retf
retf
add
jecxz
pop
gs
(bad)
dec
lods
xchg
sbb
hlt
or
es
add
es
inc
xchg
in
inc
out
cdq
add
mov
out
rcl
cmp
out
push
dec
call
jnp
lahf
inc
es
les
add
mov
out
test
outs
rcl
aas
xchg
out
add
pop
lods
out
fnstsw
dec
dec
xor
push
jns
movs
fstp
add
xor
adc
enter
inc
xor
cli
pop
pop
add
out
push
sub
es
adc
test
es
bound
push
and
les
shr
pusha
dec
test
out
in
call
(bad)
cmps
add
es
xchg
mov
es
sub
pop
sub
nop
adc
adc
push
leave
push
out
jp
mov
add
pushf
fidiv
dec
push
push
push
jae
add
push
cmc
cmc
mov
add
stos
stos
jge
cmp
out
ror
mul
inc
cld
push
add
cmp
push
pop
cmp
sub
add
outs
out
iret
stos
dec
retf
fidivr
xchg
es
shl
fld
add
adc
inc
xor
jb
add
loopne
xchg
enter
cmp
outs
jmp
out
mov
fild
fist
jae
jo
(bad)
mov
or
add
xchg
xchg
push
scas
es
add
fmulp
iret
(bad)
sbb
ror
add
mov
dec
test
add
imul
test
sahf
add
lahf
mov
inc
(bad)
fcomp
jns
add
mov
xchg
sub
add
pop
or
out
xstore-rng
cmps
and
jp
add
aaa
mov
fidivr
(bad)
mov
out
push
sub
mov
add
jbe
pop
and
lock
add
dec
dec
inc
xchg
add
add
pop
push
jle
es
and
push
fwait
scas
shl
sti
addr16
loopne
je
adc
mov
pop
jle
mov
js
aad
data16
std
push
inc
add
pusha
and
popf
pop
leave
add
rcl
fist
out
out
out
pop
xchg
shl
enter
mov
and
jg
adc
pop
xlat
xlat
jl
pop
adc
jae
cwde
xlat
xor
xor
add
xchg
xor
out
sub
mov
push
fidivr
out
out
sahf
inc
jnp
inc
adc
add
mov
dec
cs
out
int
and
xor
es
add
jnp
mov
imul
out
sbb
test
popf
dec
bound
add
cmovne
out
das
mov
add
pop
and
out
pop
pop
adc
xchg
add
lock
add
in
bound
cmp
add
mov
rol
xchg
or
xchg
push
add
fidiv
in
cmps
es
shr
dec
fcomp
adc
add
jb
rol
add
movs
mov
pop
lahf
cdq
cdq
mov
shr
xor
imul
push
sbb
add
jmp
jo
loopne
out
cld
(bad)
cmps
cmps
xchg
pop
out
add
aam
inc
je
mov
out
or
es
leave
mov
daa
stos
es
loop
es
and
jb
(bad)
xchg
test
scas
push
cmps
rol
sbb
out
cli
inc
add
sar
inc
pop
out
sbb
add
mov
(bad)
outs
loopne
cdq
inc
inc
add
out
aas
xor
je
pop
out
xlat
dec
iret
es
and
jmp
jg
pop
mov
lods
cs
fwait
dec
jmp
es
data16
and
iret
daa
add
inc
icebp
icebp
shr
add
sbb
pop
mov
lea
(bad)
jp
pop
retf
es
inc
add
cmp
pop
xchg
xchg
mov
inc
es
xchg
clc
sub
scas
scas
jne
add
and
jp
mov
adc
out
cdq
pusha
adc
add
mov
out
out
add
push
out
add
out
mov
push
push
add
movntq
pusha
add
out
ins
ins
jmp
cmp
les
cmp
ss
test
in
sub
jb
pop
xor
ror
jno
cld
add
mov
sbb
popa
add
jne
mov
fsub
adc
pop
cli
repnz
shl
pop
mov
add
jo
inc
es
ss
shr
shl
fistp
add
not
out
or
mov
add
lock
stc
out
sbb
movs
retf
xchg
add
mov
jb
cmp
add
loopne
mov
mov
push
sar
clc
cmp
cmp
arpl
lock
sbb
lods
dec
mov
popa
push
aam
es
add
sbb
inc
inc
add
add
shl
add
xchg
jb
pop
ins
ins
and
add
xchg
jl
jno
jge
out
add
pop
(bad)
sub
inc
and
cmp
inc
out
dec
mov
es
push
mov
cld
cld
jo
xor
dec
es
fwait
(bad)
loope
loop
push
push
es
cwde
adc
test
pop
inc
push
add
cdq
xchg
rcr
sub
push
push
mov
es
dec
out
add
clc
or
add
aam
add
les
inc
inc
stos
jnp
out
fiadd
push
push
mov
out
scas
adc
div
push
add
and
pop
cmp
sbb
adc
jge
push
cs
pop
fs
xor
aaa
add
int3
gs
cld
mov
jg
add
lea
jo
add
and
scas
pusha
mov
add
jmp
xchg
mov
shr
adc
inc
in
out
je
je
sub
aaa
lods
enter
push
push
push
jmp
mov
add
sub
ror
mov
mov
xchg
adc
inc
stos
cmp
pop
pop
add
out
nop
or
les
nop
xor
xor
rol
es
inc
pop
cmp
out
push
call
fstp
mov
add
xor
fdiv
lods
jno
das
add
outs
outs
stc
push
mov
lahf
sahf
or
adc
ins
cdq
out
xchg
bound
and
adc
pop
inc
and
pop
push
jae
iret
add
dec
(bad)
test
push
push
cmps
cmps
nop
cmc
call
stos
and
pushf
out
add
fsub
fs
call
pop
add
in
mov
cmp
cmps
repz
dec
lahf
lods
iret
ins
ins
add
mov
es
call
sub
and
dec
test
sub
and
in
jge
ret
(bad)
int3
cld
push
(bad)
pop
rol
(bad)
std
xor
and
test
push
es
sar
pop
pop
cdq
fsubr
es
ins
lods
test
es
add
repz
pop
add
fld
mov
inc
out
stos
add
es
push
mov
mov
es
add
jno
pop
adc
cmp
or
cmps
cmps
push
stos
dec
out
dec
mov
mov
hlt
cmp
mov
add
imul
sahf
sahf
push
fld
dec
mov
aad
cmp
add
icebp
(bad)
push
fcmovnu
test
(bad)
out
add
push
lea
mov
js
add
movntps
out
adc
push
es
scas
add
jns
shl
sahf
add
neg
mov
shr
popf
movs
(bad)
minps
jns
dec
and
loope
(bad)
push
out
pop
rol
out
mov
(bad)
shl
adc
test
test
sbb
add
or
test
pop
pop
add
jbe
(bad)
(bad)
push
add
pop
dec
dec
add
cmp
int
xchg
ins
ins
xchg
clc
lock
cld
mov
xchg
jbe
popa
xchg
push
pop
out
add
jg
pushf
add
dec
adc
or
push
es
pop
or
inc
clc
inc
sti
add
repnz
adc
add
pushf
push
fs
aaa
add
add
loop
call
push
add
fcomp
int3
and
repnz
mov
xchg
out
inc
clc
das
sti
sti
dec
movs
add
daa
out
xor
mov
add
adc
sub
jne
ret
ret
jmp
shl
push
(bad)
sahf
jns
pop
sbb
out
and
inc
pop
add
lods
inc
push
pop
add
and
es
int3
mov
aaa
aaa
add
jbe
das
jg
out
sub
jle
outs
dec
imul
imul
out
cmp
or
and
fucom
jmp
push
int
and
rep
adc
add
addr16
inc
sub
sub
out
shl
in
add
out
inc
mov
xchg
out
icebp
pop
adc
hlt
adc
push
pusha
test
inc
loop
xor
push
imul
mov
add
pushf
out
push
fwait
jnp
out
loopne
inc
es
adc
and
adc
add
leave
jne
xor
push
mov
es
add
mov
add
pop
and
enter
out
push
jo
es
adc
jb
aas
xor
out
or
addr16
add
or
lods
cwde
cld
add
adc
test
add
fiadd
out
les
inc
es
shl
rol
repz
aad
mov
out
inc
add
(bad)
out
in
xor
(bad)
push
dec
movntq
leave
sahf
out
sbb
add
push
pop
in
dec
xchg
add
popf
push
mov
pop
aad
cmp
mov
add
mov
sub
mov
xlat
loopne
test
mov
add
pop
or
cmp
pop
(bad)
ja
sbb
inc
add
arpl
jne
sbb
xlat
inc
mov
push
out
add
and
dec
xchg
iret
addr16
sub
add
es
sbb
call
xchg
mov
outs
out
(bad)
add
es
test
mov
sbb
adc
imul
sub
push
es
repnz
jo
arpl
out
inc
dec
nop
nop
pop
mov
push
jmp
jb
pushf
jo
gs
pusha
and
add
aam
jl
sti
sti
add
sub
loope
lahf
adc
sub
psrld
or
mov
lea
out
es
bound
mov
add
rcr
sub
xchg
out
add
jae
out
fadd
jp
arpl
push
push
mov
sbb
mov
imul
ins
add
es
push
mov
rcl
hlt
add
es
push
cmps
push
jle
imul
inc
fld
mov
or
jns
es
fcomi
sub
add
fsub
jb
mov
jbe
icebp
jno
fild
scas
xlat
out
(bad)
xor
cmp
bswap
and
out
ins
adc
pusha
mov
add
es
retf
sub
inc
add
addr16
call
es
sub
push
lods
lods
mov
add
mov
iret
(bad)
xor
cmp
ss
cmp
mov
mov
fsubr
call
(bad)
fistp
dec
add
inc
aam
movs
(bad)
loopne
es
dec
pop
pop
iret
add
mov
jecxz
sti
add
outs
rol
mov
mov
iret
pop
jmp
jno
cmp
es
movs
aaa
(bad)
arpl
es
clc
mov
add
es
repz
add
and
cmc
and
ret
int3
xchg
add
cmps
rcl
pop
pop
xor
es
pop
jg
je
rcl
mov
push
es
loop
mov
jmp
aam
add
xor
jo
cwde
cwde
mov
aas
aas
movs
fild
out
loopne
mov
add
adc
arpl
inc
jge
add
call
in
test
es
stc
add
add
out
mov
ins
add
cmp
dec
imul
add
adc
ret
sbb
mov
and
push
aaa
dec
iret
out
or
jbe
leave
out
adc
icebp
shr
add
stos
or
add
add
push
push
stos
jmp
fdivr
add
aas
sub
push
test
out
lods
in
test
hlt
pop
add
dec
dec
inc
push
or
out
fiadd
and
(bad)
cli
js
shl
xchg
xor
inc
xor
out
pop
loop
push
sbb
ror
mov
cli
add
div
(bad)
push
lods
pop
out
das
xor
push
mov
sbb
jg
lock
add
sub
pop
pop
pop
add
ja
out
std
add
repnz
gs
sbb
nop
mov
es
sar
xor
push
jbe
mov
in
sub
int
dec
popa
out
mov
ret
jg
ja
out
add
add
test
xchg
fld
mov
mov
pop
sub
hlt
imul
sahf
movs
aaa
out
out
sbb
ret
out
leave
pop
dec
inc
inc
and
add
stos
sub
cmp
(bad)
adc
add
xor
jo
iret
iret
inc
or
out
sbb
mov
add
add
mov
(bad)
jo
mov
les
mov
es
lods
add
call
dec
add
jbe
xchg
out
out
mov
sub
aaa
dec
mov
es
xor
int
mov
sbb
hlt
cli
aas
popf
popf
push
stos
add
lahf
adc
adc
mov
out
mov
mov
add
(bad)
mov
retf
sbb
lock
mov
test
push
stc
add
cwde
cwde
pop
adc
sbb
es
adc
inc
dec
dec
(bad)
inc
jns
add
sbb
das
sub
fld
push
mov
sbb
jb
es
mov
add
es
lea
cmp
cmp
or
mov
xor
call
mov
rol
cmp
xchg
pop
pusha
dec
dec
aam
mov
call
loopne
cmp
add
adc
or
nop
cmp
pop
inc
xor
and
and
jmp
out
pop
and
mov
jo
cmc
xor
out
xchg
clc
clc
push
fcom
out
mov
es
fs
push
add
js
loope
push
frstor
cwde
daa
daa
mov
sbb
add
loop
adc
sahf
mov
add
and
mov
loop
mov
je
ss
adc
ins
ins
inc
mov
es
xchg
push
and
sti
add
jl
jno
das
add
es
xchg
fild
bound
out
out
push
mov
ins
out
add
ss
add
out
mov
cli
imul
xor
sbb
add
pop
jecxz
jmp
out
cwde
add
outs
out
push
ret
out
add
dec
push
sbb
jbe
inc
push
push
mov
cs
fist
and
daa
es
setae
jg
mov
add
mov
arpl
jnp
daa
sub
jbe
push
add
test
scas
and
mov
add
push
lea
pop
fmul
add
add
in
in
add
out
and
es
imul
mov
mov
out
xchg
hlt
shl
xlat
add
and
(bad)
sbb
add
mov
cmp
fld
icebp
pop
jmp
sahf
mov
mov
test
mov
mov
add
or
sub
das
out
and
sbb
loop
push
or
cmps
cmps
mov
cwde
int3
out
pop
ror
sub
jnp
es
push
int
fcmovnu
into
add
outs
out
jb
jns
dec
cdq
loope
out
or
cs
xchg
add
out
xchg
push
jns
movs
push
xchg
out
retf
pop
pop
daa
popa
mov
add
sub
stos
stos
add
jo
jge
fstp
mov
call
mov
mov
imul
outs
mov
aam
xchg
rol
inc
out
daa
out
es
inc
scas
mov
push
mov
outs
add
(bad)
sbb
movs
shr
rcl
mov
sub
jns
cwde
cwde
gs
add
dec
dec
(bad)
out
ins
enter
add
pop
jecxz
outs
(bad)
sub
arpl
in
and
push
dec
mov
sbb
adc
repnz
(bad)
fild
add
xchg
xchg
dec
jl
out
iret
add
sti
out
jmp
add
stos
xor
je
add
cmp
popf
loopne
out
jl
js
inc
jns
or
cmps
rol
add
and
jl
add
fild
fs
in
dec
cwde
add
cmp
pop
es
and
pop
aam
data16
out
push
rol
(bad)
scas
push
arpl
xor
out
push
pop
mov
out
aad
mov
jno
out
arpl
jbe
mov
ss
add
mov
add
push
pop
adc
push
pop
out
inc
enter
out
fwait
out
add
loope
loopne
sub
mov
and
add
jo
mov
sub
lods
nop
out
inc
jne
es
add
(bad)
pushf
iret
iret
add
lock
psubb
out
stc
adc
cmp
out
jo
shl
mov
sbb
rcl
mov
add
es
cmps
fild
(bad)
das
hlt
out
out
mov
ret
out
scas
stc
add
shr
popf
(bad)
out
add
push
mov
nop
pop
inc
sub
loopne
jle
test
dec
sbb
xchg
adc
push
add
pop
push
stos
es
mov
mov
and
xor
mov
inc
retf
es
in
pop
pop
add
repnz
cwde
fild
sbb
out
fiadd
push
es
pop
dec
test
mov
out
cmp
fsub
push
xchg
retf
retf
dec
pop
push
jl
imul
mov
repnz
add
and
inc
jl
add
repz
hlt
nop
out
adc
push
add
xor
std
aad
out
add
cwde
loopne
sub
jno
out
xchg
add
wrmsr
loopne
mov
out
mov
imul
push
push
call
out
xchg
add
stos
repnz
hlt
pushf
add
movs
push
lock
push
push
xor
jns
adc
push
push
pop
aad
out
cld
mov
lahf
lahf
shr
mov
adc
add
in
add
fdiv
cs
inc
and
out
loop
mov
push
movs
movs
add
fisub
jae
xor
mov
es
scas
mov
mov
loop
jmp
mov
loopne
jns
sbb
rol
adc
out
pop
or
push
out
(bad)
add
cmps
aaa
xchg
das
das
add
out
xchg
(bad)
add
test
sbb
ja
data16
es
xchg
repnz
add
div
mov
movs
lds
lods
sub
xchg
cmp
add
ins
sub
(bad)
popf
or
mov
movs
ja
and
call
add
nop
es
and
lods
(bad)
dec
push
lods
loop
fdivr
add
add
pop
xchg
in
out
or
and
(bad)
out
dec
or
es
push
out
out
jmp
sub
sub
es
mov
push
add
stos
xchg
or
es
hlt
add
aaa
add
cmps
aad
push
add
cs
es
loop
pop
mov
mov
mov
mov
test
ins
repnz
ins
add
sbb
fadd
add
test
movs
repz
lahf
adc
out
push
add
sbb
add
shl
out
jg
pop
add
imul
push
popf
popf
pslld
fadd
jge
ror
(bad)
sbb
rol
retf
inc
das
sbb
pop
push
rcl
lea
sub
add
stc
out
call
scas
sbb
dec
into
clc
out
loope
sub
push
or
add
cmp
adc
and
add
mov
mov
jmp
ds
pop
int3
jge
(bad)
pusha
out
adc
add
dec
dec
mov
cwde
cdq
add
in
out
sbb
mov
pop
cld
gs
movs
jmp
out
(bad)
loopne
xor
jbe
add
loop
adc
pop
xor
add
adc
dec
pop
sbb
rcr
inc
out
adc
jo
add
or
jl
or
adc
jmp
xor
das
movs
sub
mov
ja
jae
es
pop
ret
pop
or
dec
call
ret
push
xchg
loopne
es
pop
and
mov
imul
ror
inc
or
pop
repnz
mov
cmp
sbb
pushf
loopne
es
add
push
loope
rcr
cmps
xchg
or
or
test
add
ds
jno
or
mov
loopne
rcl
scas
push
stos
push
rol
mov
jle
xchg
outs
(bad)
out
or
pop
arpl
call
aad
cmp
test
es
ja
es
test
sub
retf
shr
int3
aas
ss
out
mov
push
je
ret
out
jae
fisub
push
cmp
xor
inc
or
adc
aas
int
mov
mov
(bad)
cli
add
push
cmc
aam
fiadd
jne
lods
es
clc
lahf
xchg
xchg
xchg
jl
or
adc
out
jo
xor
add
fdivr
inc
es
add
nop
cmp
mov
aam
movs
pop
es
lds
loop
and
jle
add
adc
out
fwait
inc
sahf
es
add
imul
dec
or
jmp
jp
add
adc
dec
fsub
cmp
mul
cmp
call
inc
in
cmp
aam
mov
inc
or
add
sbb
cmc
jmp
jge
lds
pop
xchg
es
mov
mov
in
clc
stos
add
push
xchg
mov
out
aad
add
cmps
jecxz
call
jg
out
mov
mov
jns
add
push
adc
loopne
and
add
mov
jb
mov
push
test
mov
es
add
mov
mov
xlat
fsub
jg
adc
mov
jge
sbb
ins
rcr
es
add
out
test
dec
sub
loopne
dec
xchg
cld
je
sbb
sbb
out
pushf
xor
hlt
test
popf
enter
cmp
jmp
mov
xchg
es
(bad)
repnz
es
call
inc
cmps
and
test
xchg
cmc
cmc
add
add
hlt
adc
call
adc
push
ja
lahf
xor
out
ret
js
lods
dec
mov
cmp
out
jnp
pop
or
sub
mov
mov
sbb
ret
lahf
inc
add
cmps
or
mov
xchg
xchg
inc
add
and
ds
cwde
push
mov
and
cmp
int
mov
gs
jbe
adc
(bad)
jmp
in
out
jecxz
outs
sub
push
push
add
mov
daa
jbe
sub
es
add
xor
cmp
daa
(bad)
and
jmp
add
es
aad
push
mov
sub
add
lods
out
cmps
pop
jns
hlt
hlt
add
out
mov
aam
call
stos
dec
sub
dec
adc
cmps
hlt
(bad)
push
push
dec
call
mov
es
add
cmps
into
into
sbb
shl
cmps
or
and
rol
bound
sbb
int
adc
and
add
xchg
xchg
test
(bad)
out
nop
and
fld
mov
out
imul
fwait
fwait
hlt
xchg
or
add
out
mov
out
cs
outs
fild
pop
add
xor
mov
xor
fisub
out
repz
sbb
imul
movntq
out
xchg
add
sbb
adc
ds
nop
das
(bad)
mov
cwde
mov
mov
add
add
fild
clc
in
add
dec
inc
mov
add
jo
fwait
out
bnd
(bad)
(bad)
out
add
fmul
add
or
xchg
add
inc
(bad)
cmp
add
vpsubusw
add
sbb
sahf
mov
fs
movs
movs
jmp
ja
(bad)
es
add
add
test
clc
out
add
cmp
lds
inc
in
jmp
call
xchg
and
sbb
add
and
mov
cmovp
pop
loope
pop
dec
sbb
out
jbe
call
pop
out
jmp
mov
mov
cmp
push
push
hlt
add
cmps
fcmovnu
movs
loopne
out
scas
add
cmp
je
or
and
ret
(bad)
pushf
out
das
test
es
add
mov
sar
rol
dec
dec
neg
xor
mov
pop
(bad)
fstp
repnz
stos
les
add
push
jg
out
xchg
rol
adc
and
ds
es
add
stos
stos
mov
dec
lahf
punpckhwd
test
es
(bad)
mov
add
fisubr
es
out
add
es
sbb
or
mov
out
jns
add
les
pop
add
cmp
adc
mov
jbe
adc
mov
and
inc
add
es
inc
inc
cmp
jmp
jg
es
add
sbb
add
add
mov
or
cdq
sbb
ja
adc
mov
and
sub
sub
(bad)
aad
add
push
xor
shl
movs
int
jb
pop
nop
pop
enter
call
es
push
ret
imul
dec
push
out
add
(bad)
mov
push
lea
fadd
dec
mov
jno
jg
or
push
pushf
pushf
add
out
push
bound
out
jecxz
arpl
out
add
test
out
fild
mov
(bad)
xchg
xchg
loop
add
or
sbb
xchg
and
add
xchg
out
inc
test
into
add
stc
fs
add
ja
imul
mov
out
out
inc
es
xchg
add
pushf
cli
fiadd
es
mov
repnz
add
call
test
es
cmp
es
clc
ins
out
std
sub
push
push
add
scas
es
add
out
fs
fidiv
ds
add
int
push
call
shl
xor
add
and
add
cmp
mov
inc
es
test
sti
sti
popa
and
ins
stos
sbb
add
shld
mov
add
sbb
icebp
or
fild
sbb
push
adc
pop
das
add
jmp
or
nop
add
xlat
add
out
push
jp
sbb
add
out
xor
jmp
sti
out
lods
mov
es
add
fdiv
outs
ja
and
inc
das
sub
shl
add
jmp
push
xchg
dec
cmp
add
pop
ret
out
add
pop
lahf
rol
mov
jp
and
aad
daa
push
sbb
fild
scas
cmp
jno
inc
push
mov
out
stc
jnp
jae
and
out
add
or
retf
cmps
out
shr
out
out
test
(bad)
out
aaa
pop
mov
pop
cwde
movs
out
add
cmp
test
out
add
nop
es
xchg
adc
sub
jne
pushf
add
out
inc
mov
es
(bad)
std
sbb
and
in
int3
(bad)
out
add
jmp
ds
ja
test
into
fild
push
add
add
inc
dec
aaa
aaa
aas
add
inc
push
cmp
out
add
popf
popf
jmp
int
add
retf
aad
gs
cmp
repz
iret
movs
cmp
loopne
fld
es
add
or
enter
es
push
dec
out
sbb
es
inc
and
ins
ins
inc
sti
data16
cmps
cmps
and
rcr
add
test
jno
lahf
push
es
imul
xlat
es
mov
pop
aad
ins
sub
push
out
out
add
or
pop
loopne
pop
shr
mov
and
add
add
add
out
jecxz
aas
mov
sbb
push
es
retf
push
push
pop
cmp
jno
inc
jp
mov
or
mov
test
sub
fxch
es
sbb
in
cli
adc
adc
mov
sbb
mov
out
add
sub
and
pushf
add
jl
jge
jne
in
dec
shl
add
mov
lods
lods
and
out
dec
fild
es
adc
fnstenv
fimul
nop
outs
imul
out
mov
outs
es
jmp
movs
xor
jnp
mov
out
jecxz
dec
es
loopne
mov
es
sub
sti
mov
sub
sub
add
dec
sub
add
int3
out
add
ds
mov
es
clc
std
gs
pop
add
sbb
dec
mov
loope
popf
popf
inc
les
cmc
jnp
add
(bad)
sub
and
outs
mov
out
mov
int3
lock
out
gs
fbstp
jne
inc
jp
out
mov
add
and
hlt
test
or
inc
imul
dec
or
out
jg
shl
cmp
sti
add
xchg
fistp
rcr
fisubr
cwde
mov
popf
xchg
fadd
or
adc
test
ins
push
mov
cmc
mov
add
les
lea
cmp
rcl
addr16
dec
es
inc
inc
data16
and
out
mov
fcomp
mov
mov
pusha
daa
out
ja
imul
or
or
fmul
pop
je
out
imul
loopne
cmp
movs
out
adc
jnp
dec
es
and
pop
sbb
pop
add
aas
push
push
mov
enter
add
lock
pushf
test
or
sub
cli
cli
ss
xchg
xchg
jecxz
mov
lds
mov
cwde
add
dec
dec
aaa
push
out
adc
xchg
cld
fwait
ss
out
fs
pop
pop
sub
xor
mul
and
push
call
aad
push
retf
cld
out
pop
add
lods
out
adc
push
es
mov
stos
inc
inc
daa
add
out
cmps
add
xchg
out
or
fld
imul
pop
pop
cmps
xor
mov
add
movs
or
sbb
add
popa
mov
inc
out
add
mov
es
cli
add
dec
dec
sbb
pop
add
lods
lods
mov
jo
lahf
inc
add
xlat
out
inc
in
aad
mov
cld
out
rol
sets
mov
xchg
add
ss
jnp
dec
in
mov
add
mov
cmps
les
fild
xchg
add
dec
out
pusha
add
in
inc
xlat
jecxz
loopne
xor
jb
add
repnz
imul
mov
popa
dec
(bad)
es
scas
cmp
jmp
pop
xor
or
aad
mov
es
add
adc
add
add
bound
out
out
loopne
mov
cmp
mov
inc
ins
es
add
xchg
movs
aam
add
pop
or
out
xchg
daa
mov
add
hlt
adc
add
imul
dec
dec
add
push
rol
sbb
mov
xchg
mov
in
and
out
and
or
pop
or
call
std
in
scas
inc
inc
add
bound
aad
enter
jo
adc
mov
add
jge
pop
ds
jg
sub
imul
add
pop
pop
iret
mov
out
inc
sbb
enter
or
lock
das
clc
push
out
test
mov
add
cmp
mov
cdq
movs
hlt
hlt
bound
out
add
adc
out
cmp
jecxz
pop
rcr
(bad)
(bad)
add
jb
addr16
fild
es
sbb
add
(bad)
in
mov
out
add
jbe
aas
push
out
mov
mov
jne
add
leave
and
mov
es
inc
(bad)
not
pop
hlt
sbb
test
jmp
pop
dec
dec
mov
dec
arpl
cs
add
mov
pop
rep
and
out
pop
mov
test
out
inc
loopne
dec
pop
addr16
jb
fcmovnu
into
call
and
add
cwde
das
imul
and
out
push
dec
xor
add
pop
out
cmps
add
in
inc
outs
mov
mov
inc
std
lds
pop
adc
add
add
retf
mov
shr
out
cmp
mov
aas
out
inc
xor
dec
adc
inc
xchg
push
push
xchg
sbb
cmp
in
push
fisttp
xlat
xlat
jb
mov
shl
add
in
pop
and
les
mov
mov
or
add
xchg
add
test
pushf
std
jmp
out
xor
inc
icebp
icebp
imul
jae
aam
jge
lea
lods
push
push
lahf
xchg
add
inc
je
paddb
retf
out
dec
or
clc
icebp
out
inc
add
ss
shr
in
and
es
push
pop
cmp
aad
leave
shl
add
adc
pop
int3
mov
sub
das
or
push
jne
or
jb
add
loope
outs
mov
sbb
or
arpl
fcmovu
mov
movs
add
push
and
sar
out
out
sbb
es
sbb
mov
pop
pop
mov
adc
call
add
data16
adc
out
pop
adc
rcl
adc
dec
lock
add
pop
inc
fs
hlt
cmps
add
mov
inc
in
retf
push
bound
add
aam
call
mov
sub
les
add
call
imul
push
or
mov
out
push
add
out
jle
adc
xor
das
das
add
dec
out
mov
push
add
out
stos
pusha
xchg
(bad)
mov
jns
loopne
mov
add
mov
dec
inc
lods
es
cmp
inc
pop
es
cmps
cmps
scas
sub
(bad)
jb
in
out
cld
adc
out
adc
in
inc
cmp
jns
add
xchg
out
add
es
outs
enter
jnp
cs
stc
stc
sbb
add
ins
pop
pop
or
out
mov
mov
fs
xor
push
mov
es
add
xchg
or
add
stc
jle
std
adc
xchg
es
test
ret
mov
jo
add
mov
mov
repz
es
and
cmp
jg
(bad)
pushf
add
xor
cmp
add
or
lea
popa
xchg
mov
dec
mov
cmp
movs
xor
add
retf
out
pop
jo
inc
inc
xchg
pop
push
cdq
sbb
xor
in
jae
mov
adc
out
out
mov
gs
and
test
je
cmp
pop
fs
int3
cmp
mov
add
test
in
mov
mov
out
(bad)
loop
sub
jo
jno
mov
scas
mov
leave
out
adc
mov
xor
out
jo
sbb
jno
adc
or
imul
fist
or
add
mov
lahf
ins
popf
rol
add
loop
mov
push
add
repnz
adc
pusha
or
clc
add
loope
pop
(bad)
scas
es
int3
pop
mov
add
sub
out
add
(bad)
ror
cs
xchg
add
movs
sub
outs
or
add
push
es
pop
mov
adc
or
fdivr
xchg
and
inc
push
inc
inc
into
cmp
sub
cmc
push
push
out
mov
xchg
add
mov
mov
mov
loopne
cmp
jno
xor
retf
sub
add
cwde
mov
aad
pop
fld
mov
out
rcr
movs
movs
icebp
idiv
out
push
aas
xchg
es
popa
and
bound
pop
add
neg
adc
(bad)
cmp
aaa
aaa
gs
out
mov
xor
xor
fsub
dec
(bad)
push
shl
jne
and
aas
es
push
fidivr
(bad)
push
jl
add
mov
add
dec
or
das
stos
add
ret
cmp
movs
idiv
mov
out
mov
mov
add
fcmovbe
aam
popa
add
scas
(bad)
add
and
out
ret
sub
in
(bad)
(bad)
sti
in
jno
mov
add
dec
dec
js
and
out
mov
nop
cmps
fiadd
mov
leave
mov
mov
jle
clc
js
jnp
add
inc
out
dec
adc
cdq
cdq
movs
or
std
push
call
add
aas
aas
push
push
cwde
jmp
push
adc
lods
add
jmp
ret
aaa
inc
mov
xor
add
jb
sub
and
add
add
es
and
add
or
inc
rcl
lods
shl
push
add
xchg
fwait
ja
es
jp
ss
mov
icebp
mov
loope
add
lods
lods
mov
imul
dec
dec
std
dec
jns
mov
xchg
jne
add
dec
icebp
xchg
dec
dec
add
es
push
push
clc
add
int
hlt
mov
xor
mov
leave
out
cli
out
and
add
(bad)
out
js
(bad)
movs
movs
or
out
add
es
xor
add
dec
out
fdiv
mov
mov
pop
add
es
lahf
push
mov
pop
or
cdq
push
sbb
jb
jg
add
into
dec
xor
and
int
pop
mov
or
pop
out
add
mov
sbb
mov
rcr
test
std
(bad)
xor
and
sub
fisttp
push
inc
scas
call
pop
xchg
mov
rol
imul
movs
es
cmp
sbb
add
mov
adc
and
es
ins
or
xchg
xchg
inc
push
sbb
jo
shl
mov
out
add
xchg
jno
js
push
sbb
mov
and
add
add
push
push
dec
add
mov
inc
jne
add
push
add
and
pop
es
mov
cmp
pop
pop
add
lods
out
mov
test
out
pop
add
shl
cli
nop
inc
inc
mov
lock
repz
mov
xchg
xchg
ret
push
add
or
addr16
out
(bad)
es
clc
scas
add
cmp
ds
sub
addr16
sub
jp
adc
pop
bound
jge
out
jmp
xchg
movs
movs
add
jns
ins
inc
mov
add
dec
es
xchg
add
fidivr
sahf
push
pop
out
and
add
add
jg
jbe
xchg
lock
stos
jne
add
ror
or
pop
cmc
add
mov
mov
xchg
les
and
or
rcr
push
fcomp
cwde
movs
movs
inc
test
add
mov
mov
jb
add
inc
cli
repnz
das
das
std
mov
shl
(bad)
jmp
jl
xchg
leave
out
bound
mov
inc
repnz
cmps
push
out
inc
stc
sbb
mov
xchg
mov
inc
inc
jge
add
enter
fstp
cli
mov
out
or
sbb
push
sbb
dec
dec
push
fwait
and
fcom
outs
add
es
je
add
mov
movs
lock
add
jbe
loop
cs
out
pop
add
out
in
test
es
add
mov
mov
cmp
adc
push
push
imul
jmp
pusha
sub
lock
inc
inc
add
mov
out
scas
pop
inc
es
pop
add
dec
dec
and
mov
add
rcr
es
mov
xchg
add
pusha
adc
js
pop
cmp
dec
dec
add
mov
les
mov
mov
int3
es
inc
inc
pop
stos
(bad)
es
add
push
push
pop
iret
es
mov
pushf
dec
xchg
es
add
pop
pop
je
inc
out
jno
cmp
push
cwde
pop
fwait
mov
mov
div
outs
enter
mov
pusha
arpl
out
add
and
fistp
shr
add
es
lock
add
add
fiadd
and
pop
rcl
add
stos
out
add
xor
add
jl
das
add
push
hlt
jp
add
mov
xor
jmp
lods
into
into
ror
out
and
pusha
(bad)
(bad)
cmp
(bad)
out
add
test
xor
push
dec
movd
in
mov
pop
push
push
cmp
psubq
and
lahf
out
xor
lea
mov
xchg
pop
es
call
add
mov
fisttp
mov
movs
movs
mov
cmp
sub
ins
test
pop
cmp
cmp
(bad)
in
sahf
lods
es
sbb
shl
out
jecxz
out
push
xor
jle
adc
(bad)
out
and
out
or
mov
add
pop
ret
aam
jl
psrlw
push
jg
std
es
add
push
popa
call
mov
inc
mul
out
aad
add
(bad)
(bad)
pop
popf
popf
fucom
pusha
out
ret
ins
ins
cmc
(bad)
mov
jo
jle
add
and
(bad)
repz
xor
mov
sbb
imul
pextrw
lods
bound
(bad)
mov
add
je
or
out
movs
loopne
es
dec
enter
js
es
stos
in
add
mov
xor
stos
aaa
cmp
jecxz
hlt
push
inc
inc
pop
push
fucom
pop
jne
pusha
pop
pop
push
iret
in
out
dec
add
js
lahf
mov
out
lea
add
cmp
xor
out
inc
loopne
(bad)
fmulp
jns
cmps
add
sub
cmp
repnz
test
aaa
cmp
out
ficom
add
xchg
gs
fidiv
xor
fs
das
jns
inc
inc
pop
xchg
mov
imul
sbb
and
mov
nop
nop
mov
mov
adc
lea
jp
mov
ja
cdq
xlat
pushf
pushf
popf
add
out
and
pcmpgtd
pop
add
cs
cdq
pop
aaa
add
cwde
rcr
mov
sbb
dec
xlat
xlat
ror
pop
es
ins
push
pop
add
mov
test
cmps
cmps
xchg
and
es
mov
(bad)
adc
es
cmp
or
adc
(bad)
fstp
push
cld
cld
push
add
lea
out
xchg
out
es
add
shr
fcmovu
inc
mov
out
add
jmp
cmp
inc
mov
and
add
pop
pop
(bad)
dec
rcr
xor
add
lahf
add
cmp
add
outs
cmps
add
out
mov
in
or
add
in
pushf
dec
push
jge
imul
and
es
jmp
inc
in
pushf
pop
pop
push
add
es
ss
mov
es
add
adc
push
push
fnstenv
out
fdiv
mov
ds
sub
cmp
inc
cmp
es
mov
add
jbe
les
adc
add
popa
inc
adc
jmp
or
jbe
mov
push
xchg
out
add
jp
add
dec
loopne
bound
add
ins
adc
sbb
shl
jmp
pop
mov
sub
jo
xchg
pop
pop
jb
clc
out
jo
add
nop
out
xchg
sti
es
cmp
iret
(bad)
mov
es
push
popa
popa
(bad)
es
add
mov
jb
std
pop
out
cmc
push
rol
out
pop
fcmovb
es
jae
pushf
ss
add
cmp
popf
mov
pop
xor
pop
sbb
inc
out
jmp
jbe
sub
test
(bad)
push
dec
out
push
push
mov
sub
out
xor
nop
stos
stos
sub
lahf
imul
dec
out
ins
add
out
out
mov
mov
add
addr16
adc
retf
sub
jno
ds
shl
add
jecxz
mov
or
push
pop
cli
out
leave
xchg
add
add
cmc
xor
fbld
lock
jnp
add
out
push
scas
xor
pop
add
and
fst
es
gs
add
dec
into
cmps
cmps
fwait
pop
cmp
out
aaa
shr
inc
jbe
jl
sub
cdq
out
xchg
pop
dec
and
mov
sub
add
or
adc
stc
ds
xchg
xchg
mov
out
inc
mov
push
push
daa
dec
jae
jb
(bad)
in
es
sub
in
sbb
add
js
and
(bad)
(bad)
cmp
imul
inc
inc
dec
add
inc
lahf
lahf
sub
popf
int
mov
ds
clc
push
ror
outs
movs
fild
out
xor
es
fimul
cmp
xchg
retfw
movs
or
add
shl
lea
ins
ins
call
enter
pop
inc
mov
loopne
out
iret
mov
lahf
lahf
stos
es
out
push
ja
add
daa
sti
(bad)
adc
test
push
xor
jl
js
xchg
(bad)
pop
pop
mov
push
out
mov
mov
and
add
add
cdq
mov
mov
sub
mov
scas
es
sti
add
xlat
mov
ja
add
popf
ins
ins
shr
xchg
cmp
inc
out
leave
add
test
pop
jno
call
cld
add
mov
retf
out
add
stos
stos
add
in
out
in
add
es
pop
and
cwde
loope
out
pusha
xor
fiadd
jae
es
add
or
pop
pop
rol
sbb
pop
add
inc
out
cmps
jae
shl
lods
mov
add
loop
jge
jecxz
test
ins
cdq
sbb
mov
sbb
int3
mov
push
add
adc
out
xor
push
sbb
loope
in
mov
sbb
loopne
pop
or
jp
retf
out
xchg
lea
add
out
push
push
rcl
call
ins
in
es
ds
not
add
jecxz
dec
outs
es
xchg
out
inc
inc
and
or
loope
loopne
es
pop
movs
in
(bad)
(bad)
ja
mov
in
imul
stos
stos
pop
cmp
out
add
sbb
adc
out
sbb
mov
xchg
rcr
(bad)
stc
cmp
add
es
inc
jmp
xchg
mov
cmp
jb
fimul
outs
out
pop
(bad)
jae
add
xchg
pushf
out
loop
cmp
mov
cwde
stos
pop
(bad)
jae
sbb
dec
dec
fldcw
xor
fld
push
sub
xchg
push
push
xlat
add
jns
in
fsub
cwde
jg
cmp
jmp
pop
inc
inc
(bad)
xchg
xchg
rcl
in
dec
and
add
ret
fsub
pop
fsub
loop
add
aam
sub
in
jp
lods
add
mul
rcl
pop
leave
pusha
mov
add
sub
pop
cmc
mov
pmaxub
inc
jp
(bad)
pop
inc
sbb
lock
imul
leave
mov
es
cmp
hlt
aaa
es
ret
loope
add
jle
xchg
mov
lahf
pop
xchg
test
ins
mov
xor
nop
loop
pop
(bad)
mov
dec
dec
popf
loop
es
dec
pop
pop
jae
ss
loopne
lock
xchg
or
push
punpckldq
out
ret
rcr
cmp
int
lock
add
pop
movs
movs
test
push
mov
jl
cmp
mov
loope
add
rcl
xor
sub
add
into
aaa
xor
add
outs
es
loope
add
push
and
out
jne
cdq
es
adc
dec
es
add
add
inc
mov
mov
pop
adc
inc
xchg
stos
inc
inc
scas
lods
jmp
add
es
add
retf
jb
lods
es
repnz
cmp
es
ffreep
cld
nop
nop
addr16
cmp
and
adc
cli
rol
inc
inc
add
pop
repz
sbb
test
adc
(bad)
push
out
add
fs
push
add
(bad)
das
pusha
imul
add
sbb
call
fldenv
push
mov
cmp
je
out
and
shr
clc
out
jns
xchg
daa
daa
jmp
inc
mov
xor
add
retf
jbe
dec
cld
cld
arpl
rcl
push
es
mov
movs
inc
inc
repz
out
data16
cs
(bad)
sub
es
jae
mov
adc
inc
jo
push
xchg
add
jmp
mov
jns
out
fcom
ss
test
out
cmp
shl
xor
xor
add
repnz
out
bound
es
sub
mov
sub
out
pop
rol
pop
push
mov
or
pop
out
add
fmul
add
out
out
push
xchg
pop
out
add
xor
out
add
hlt
es
push
fwait
loopne
add
jge
icebp
in
in
jecxz
add
mov
add
int3
movlps
jb
adc
ins
mov
outs
push
cmp
xor
shl
rol
push
jb
add
outs
shl
aad
jae
es
push
punpcklwd
push
mov
xor
or
clc
out
add
ss
in
or
sahf
imul
xor
mov
push
jg
out
jmp
aad
(bad)
idiv
jb
out
fwait
in
mov
add
pop
es
arpl
jl
es
es
jne
shl
cmp
add
inc
scas
cmp
jmp
cld
mov
popa
sbb
jp
retf
iret
inc
stc
mov
out
aaa
ins
out
push
push
outs
retf
add
mov
jo
cmp
sldt
dec
cld
es
push
aas
aas
ss
mov
verw
cmp
jbe
mov
rcl
cmps
aaa
cs
or
adc
xor
push
movs
movs
add
fsub
out
stc
iret
ret
add
add
xchg
pop
imul
es
cli
je
shr
shl
mov
xchg
aas
daa
movs
jmp
sub
add
in
cmc
es
push
add
and
xchg
aad
jge
sub
ret
ret
ret
jl
or
jnp
sbb
sbb
add
mov
ret
push
adc
out
in
mov
int
(bad)
hlt
scas
out
mov
std
add
out
add
jmp
add
cli
cli
xchg
and
out
inc
in
jl
js
push
out
sbb
sub
dec
adc
in
add
es
cmp
add
mov
ret
jae
lds
dec
out
inc
and
sahf
sahf
xchg
or
out
cmp
aam
xchg
sub
nop
mov
es
leave
cmovl
push
sbb
es
test
jno
pop
les
xor
jne
ins
jae
pop
or
out
rcl
push
cmp
cmp
sbb
out
or
jne
add
inc
jo
xchg
(bad)
xlat
sbb
shld
mov
add
movlps
sbb
cmp
out
inc
pop
cmps
(bad)
(bad)
out
push
xor
add
cld
or
(bad)
push
mov
out
imul
ja
(bad)
pusha
pop
js
les
push
int3
jmp
loope
xor
imul
mov
mov
dec
add
pop
mov
cmp
call
bound
sbb
jl
std
add
mov
mov
lock
es
xchg
addr16
jecxz
out
movs
loopne
es
icebp
pop
pushf
sbb
inc
in
dec
aas
aas
xor
out
jo
dec
es
add
pop
sbb
out
(bad)
dec
loope
out
xchg
clc
lock
add
push
add
sbb
adc
in
lods
lods
fsubr
repnz
out
in
jbe
pop
jnp
cli
out
add
cmp
loope
add
outs
icebp
icebp
xchg
rcr
bound
addr16
inc
fcomp
lods
out
outs
(bad)
fld
out
add
fisttp
jecxz
sub
mov
inc
or
or
aas
push
push
das
sbb
mov
or
jl
pop
in
push
pop
es
data16
cli
inc
inc
add
cmp
out
add
jg
mov
stos
mov
add
adc
scas
add
pop
nop
not
xchg
int
sbb
jge
mov
inc
inc
mov
sub
and
fcom
daa
xchg
pop
pop
fcomp
sub
push
inc
push
outs
es
add
ret
jb
retf
es
std
sub
add
and
hlt
(bad)
dec
add
pop
jns
push
imul
add
and
xor
sub
in
cmp
sub
inc
mov
out
jo
mov
dec
jo
add
sbb
mov
sbb
cdq
cdq
add
(bad)
out
iret
mov
add
ds
sub
out
jns
jo
rcr
std
in
es
(bad)
mov
and
outs
add
enter
out
lock
es
cmc
add
in
in
dec
xor
(bad)
test
sub
addr16
aaa
add
rcl
jb
push
lods
inc
out
add
enter
out
out
rcl
es
lods
ja
push
lahf
xor
es
or
iret
add
es
sub
push
icebp
icebp
cmp
pop
fnstenv
or
push
pop
jne
add
lods
adc
adc
dec
cs
jp
out
add
xor
loopne
stos
daa
out
push
cmps
sub
ds
pop
out
cmp
test
and
push
call
hlt
push
adc
add
mov
and
cmp
mov
ss
add
inc
test
mov
add
(bad)
jmp
es
aad
call
test
out
pop
and
es
je
stos
pop
pop
pop
pop
xchg
out
push
push
es
shl
mov
es
aam
add
sub
pop
cs
pop
ins
add
shl
(bad)
xchg
mov
inc
out
inc
sbb
jp
add
jmp
ficomp
es
es
jecxz
or
out
jb
add
out
xor
es
inc
aas
sub
sub
and
dec
out
push
(bad)
jmp
loope
sbb
pushf
fsub
and
jle
in
in
int3
sbb
add
sub
jmp
enter
es
push
xchg
jo
dec
gs
add
or
je
push
add
xlat
xlat
retf
es
sahf
push
out
es
out
add
pop
ret
inc
(bad)
mov
sahf
out
test
inc
sti
sbb
rol
lods
mov
add
and
js
scas
es
test
adc
loopne
aad
call
mov
mul
and
add
xchg
xchg
adc
jge
sbb
into
add
xor
pop
loop
dec
(bad)
pushf
loope
out
stc
lock
inc
inc
add
mov
or
(bad)
aam
ret
xor
ins
pop
pop
xchg
out
cmp
add
les
out
inc
push
out
(bad)
setae
gs
or
cld
rol
xchg
jl
mov
push
fld
into
adc
out
out
add
xchg
fcomp
pop
aad
push
push
test
mov
es
add
cmp
pop
nop
out
add
popa
add
cmp
mov
add
pop
adc
out
xchg
or
es
pop
ins
ins
repnz
xchg
add
cmp
pop
lahf
pusha
pusha
add
out
fstp
(bad)
add
out
add
add
jecxz
xor
add
xor
leave
adc
add
inc
mov
loop
push
fstp
adc
sub
jl
sub
out
cmp
imul
out
inc
int3
pop
es
loopne
jns
cld
mov
pop
(bad)
xor
nop
pushf
mov
xlat
push
out
mov
jmp
mov
(bad)
pop
add
xor
push
out
inc
aaa
aad
jp
add
std
cmps
cmps
mov
icebp
cmp
stos
stos
pushf
js
out
pop
dec
cmp
rol
js
add
jmp
jp
inc
in
(bad)
add
push
mov
rcl
or
std
rol
jle
jle
loopne
aad
mov
stos
jecxz
cmp
lds
adc
dec
pop
dec
fnstenv
into
add
out
push
adc
das
cmps
add
sbb
sub
mov
sbb
add
retf
lods
lods
add
dec
cmp
fwait
iret
add
rol
mov
pop
out
sbb
inc
sti
sti
xor
pop
out
cmc
add
enter
mov
lods
in
je
jge
inc
inc
jmp
movs
adc
jle
mov
inc
es
(bad)
adc
mov
jg
push
push
movs
int3
es
cmp
dec
mov
es
and
jp
cld
or
add
out
cmp
jle
inc
adc
cmp
es
pushw
fcomp
dec
lds
add
jmp
das
imul
add
hlt
mov
mov
out
stc
idiv
add
(bad)
sbb
es
xchg
out
loopne
or
sbb
test
pop
test
es
rcl
sbb
out
add
out
mov
fisub
inc
out
mov
sub
enter
popa
jbe
dec
and
test
addr16
(bad)
jmp
add
push
test
push
retf
jmp
add
imul
(bad)
lds
xchg
ins
ins
xchg
mov
or
ret
adc
cmp
push
dec
xchg
mov
add
dec
dec
lods
cmp
pop
aam
mov
mov
add
loop
sar
xchg
add
or
daa
push
push
jns
and
cmp
add
sub
pushf
xor
push
add
lea
test
js
in
in
mov
xchg
mov
(bad)
pusha
xchg
es
sbb
add
add
sahf
add
out
sbb
shl
daa
cmp
add
add
xchg
dec
inc
es
stos
xchg
scas
scas
add
repz
xchg
out
pop
add
inc
je
xor
inc
pop
test
es
push
xor
add
or
test
adc
imul
dec
push
sub
es
inc
test
add
fdiv
out
and
out
es
cmps
ins
xchg
xchg
pop
mov
jno
cmp
mov
push
mov
cli
push
ins
mov
xor
(bad)
cld
cld
cmps
jo
out
push
int3
movs
es
push
ss
fs
(bad)
retf
outs
cwde
xor
add
pop
pop
es
jnp
pop
dec
dec
add
out
sbb
sar
sbb
mov
out
cmp
cmps
jne
jno
outs
rcpps
fistp
pop
out
xor
in
and
out
or
js
xor
ss
cmp
add
stc
ins
call
out
push
xchg
icebp
and
push
lods
lods
sub
xlat
xlat
push
(bad)
cwde
out
add
mov
jae
add
cmc
pushf
xor
out
iret
cmp
es
out
rcr
fs
clts
sub
repnz
cld
and
es
add
cli
cli
ds
es
push
mov
test
dec
cwde
cwde
xchg
push
test
inc
or
lea
sub
push
clc
and
out
outs
cmp
push
add
ror
pushf
add
icebp
add
cli
ret
or
ds
enter
xlat
cwde
out
sti
cld
popa
movs
push
test
shr
(bad)
jg
jp
loopne
call
or
es
jns
es
add
mov
ss
popa
popa
data16
out
mov
push
sar
xchg
cdq
pop
mov
push
es
add
lahf
mov
inc
add
inc
xchg
int
mov
inc
in
or
xchg
pop
ins
out
add
jge
xlat
jne
out
push
add
jbe
mov
push
pop
add
or
push
popf
popf
dec
lods
jmp
xchg
xor
lods
lods
xor
fcom
push
push
imul
add
xor
sub
cmp
adc
and
bound
add
(bad)
jnp
cmp
in
lds
mov
test
jg
rol
add
mov
pop
retf
mov
add
call
sbb
adc
mov
add
jno
es
push
stos
ret
inc
inc
mov
and
sbb
out
out
call
pop
prefetchw
ins
mov
into
pop
lahf
lahf
and
push
pop
add
push
xchg
add
and
mov
movs
sti
jmp
ret
lahf
jecxz
pop
es
aad
add
enter
cmp
outs
gs
push
aad
cdq
mov
cmp
add
jmp
pop
(bad)
js
jge
scas
rcl
movs
call
ffreep
es
bound
push
enter
adc
pop
jmp
and
sahf
mov
mov
aad
nop
push
dec
dec
jmp
add
sub
fistp
es
dec
imul
push
add
and
xchg
popa
cli
cli
cmp
and
xchg
pfacc
and
ds
inc
inc
add
es
push
push
fild
test
clc
clc
push
and
xchg
add
rcl
sti
loop
out
mov
frstor
add
scas
xchg
add
push
push
jnp
lods
push
add
ret
out
pop
call
add
out
jle
es
mov
cmp
sti
add
inc
inc
cmp
iret
add
mov
mov
test
sub
stos
test
lods
cli
or
mov
add
es
add
add
push
sbb
daa
adc
jle
movs
mov
or
fdiv
fild
cmp
in
or
hlt
je
aaa
add
out
pop
call
fcmovnu
xor
and
(bad)
jp
in
jo
jne
push
dec
dec
lea
cs
mov
push
jle
out
inc
ret
push
and
out
pop
cli
add
into
cmp
test
pop
xchg
fist
inc
inc
dec
jbe
xchg
xchg
(bad)
rol
xor
jno
jmp
dec
mov
add
mov
(bad)
xchg
out
add
bound
in
add
mov
and
test
dec
out
jno
pop
div
add
out
push
dec
and
jnp
add
pop
mov
aas
push
push
add
xor
out
rol
in
pop
leave
cmp
mul
add
cmp
(bad)
je
pop
cmp
movs
out
or
dec
es
adc
out
out
or
nop
add
push
jno
xor
rcl
data16
jns
or
add
fsub
mov
and
add
jmp
adc
xchg
push
fs
int3
(bad)
dec
out
leave
loope
xchg
xchg
cmp
test
es
dec
inc
mov
xchg
xchg
pop
jae
out
lock
add
dec
mov
out
lods
enter
push
add
out
inc
add
es
pop
dec
dec
repnz
enter
aas
hlt
out
push
add
and
dec
mov
or
xor
sbb
out
add
mov
cli
faddp
xchg
out
loop
add
movs
dec
ins
outs
adc
mov
hlt
out
lds
mov
popf
popf
retf
cmc
cmc
int
clc
out
lods
ins
dec
xlat
inc
adc
or
add
mov
out
xchg
retf
aad
shr
cs
outs
or
and
fadd
add
push
std
jmp
out
pop
int
es
mov
mov
add
(bad)
pop
pop
pop
or
loopne
push
add
cli
cli
fnsave
push
and
inc
jg
dec
dec
add
les
xchg
(bad)
std
jno
call
mov
inc
out
add
xor
push
retf
add
adc
stc
pop
add
push
lods
lods
fldenv
add
add
ficomp
mov
xchg
out
and
fcomp
inc
xor
lock
paddsw
dec
out
lea
mov
mov
ins
pusha
xor
or
add
out
out
and
ins
inc
add
mov
icebp
mov
mov
mov
and
aam
out
sbb
dec
es
adc
pop
pop
lods
sbb
add
sub
es
or
add
and
(bad)
pop
dec
shr
call
es
add
pop
pop
out
and
out
dec
sbb
jb
pop
add
div
(bad)
out
out
in
sbb
mov
dec
vhsubps
add
xor
loope
cmp
ss
pop
fidivr
ret
cwde
out
movd
out
xor
arpl
pop
push
ror
or
add
into
es
mov
mov
mov
mov
pop
jae
mov
push
es
(bad)
jae
jle
test
test
es
jg
shl
lock
jl
test
sub
xchg
into
into
add
scas
mov
lea
jmp
mov
add
pusha
cmc
daa
es
pop
mov
ds
scas
out
hlt
push
lock
push
add
jb
xchg
daa
sbb
inc
inc
out
add
push
dec
jl
adc
stc
stc
lods
or
add
shl
test
fucom
rol
mov
ds
test
(bad)
out
and
pop
adc
cmps
cmps
call
add
mov
in
ja
es
adc
(bad)
lods
lods
or
xchg
mov
push
mov
pop
int3
pusha
mov
pusha
movs
movs
and
or
pop
xor
scas
inc
test
add
outs
ret
add
clc
clc
stos
jl
sbb
out
push
add
es
out
aas
aas
repnz
xchg
xchg
mov
and
es
jp
in
stos
aaa
cwde
je
jle
call
ins
ret
ret
imul
cmp
xor
pop
out
dec
out
pop
hlt
es
pop
sar
dec
dec
mov
mov
popf
ss
in
xchg
jae
mov
inc
pop
add
fild
out
pop
rcl
mov
lods
out
dec
mov
sub
add
add
jns
add
out
mov
rcr
mov
js
fnop
add
jmp
cmps
push
adc
test
jmp
(bad)
out
add
lea
mov
jae
(bad)
jg
in
pop
mov
out
cmp
and
daa
add
push
out
out
stos
inc
out
not
and
jnp
aaa
out
bound
jo
gs
dec
jns
inc
cmp
inc
enter
movs
add
out
fwait
loope
or
out
mov
adc
(bad)
add
cdq
mov
stos
ret
jnp
cld
repnz
sub
cmc
adc
cmp
add
shl
jp
out
inc
jns
imul
lea
add
sub
xchg
pop
cmp
add
jmp
add
pop
mov
retf
jge
xor
fcomp
push
cmp
jns
jb
sbb
ins
mov
cld
add
cs
repz
lock
add
int
and
sbb
sbb
out
gs
mov
add
ja
out
mov
movs
es
mov
jno
outs
idiv
jmp
ss
add
lds
mov
add
pop
hlt
hlt
movs
sbb
mov
stos
loopne
jae
and
mov
out
add
cdq
cmp
(bad)
inc
mov
push
and
pop
sbb
add
mov
fisttp
out
sub
cld
cmps
xor
repz
or
add
mov
sar
inc
(bad)
jp
mov
dec
cmp
sar
add
fucom
pop
add
es
add
mov
add
imul
add
and
cmp
loopne
add
loopne
inc
cwde
out
dec
pop
xchg
es
jnp
push
push
mov
pop
es
ud0
stos
sbb
add
imul
mov
jmp
imul
add
loopne
es
ins
aad
push
push
lock
mov
loop
je
add
and
adc
(bad)
cmp
add
jnp
sbb
push
es
out
ds
(bad)
(bad)
add
cmp
add
dec
(bad)
out
add
mov
repnz
add
ficom
inc
mov
pusha
ret
jl
out
out
push
xchg
and
fdiv
aaa
(bad)
mov
jb
hlt
xor
retf
xchg
add
mov
es
mov
stos
mov
sbb
les
mov
shl
jne
mov
out
xor
out
add
mov
xchg
out
ret
and
add
fnsave
cdq
es
retf
loope
daa
xchg
aas
aas
sub
inc
mov
loop
add
(bad)
js
shl
enter
cld
cld
xor
in
call
retf
dec
inc
inc
cld
cmp
fnsave
sbb
out
cdq
xor
fadd
push
pop
jbe
inc
mov
aam
inc
das
out
push
pop
mov
icebp
stc
aad
hlt
hlt
pop
push
add
ret
jp
int
push
repnz
out
jl
cmps
ja
cmp
pop
cs
add
jae
fnstenv
clc
ret
jge
mov
aad
mov
call
xor
add
retf
retf
jne
sub
shl
cmps
add
shr
add
in
xchg
jecxz
dec
push
mov
add
mov
es
add
and
sbb
icebp
cwde
and
out
cli
inc
push
add
inc
out
pop
dec
sub
mov
hlt
dec
cmp
shr
scas
(bad)
es
dec
jno
(bad)
(bad)
aas
cmp
mov
add
gs
rcl
adc
xchg
add
neg
sub
adc
xor
mov
aam
es
push
add
cmp
lods
lods
dec
rol
test
inc
push
sbb
out
retf
xor
sub
vlddqu
push
cli
add
call
add
call
shl
movs
xchg
add
cwde
cmp
xor
add
or
add
mov
jo
jbe
js
add
and
dec
mov
mov
adc
in
iret
stos
test
inc
es
and
aas
add
pusha
xor
cli
cli
sbb
out
add
repnz
cdq
xlat
cmp
(bad)
(bad)
add
(bad)
out
cs
leave
jmp
imul
ja
es
sahf
inc
loop
test
test
inc
out
or
js
xor
scas
mov
mov
lock
jge
xchg
push
aaa
(bad)
les
out
mov
inc
jo
in
sub
add
fbld
out
cmp
or
add
bswap
retf
adc
mov
cld
das
das
sbb
add
out
fidiv
lock
cld
out
pop
mov
fstp
popf
add
test
fdiv
es
push
sub
imul
jp
mov
push
es
ret
jge
ss
pop
es
sbb
push
ins
add
neg
push
repnz
es
push
jle
leave
es
add
call
add
xchg
xor
mov
mov
es
sbb
(bad)
shl
xchg
out
push
push
adc
out
shl
outs
lea
pop
maxps
pop
jmp
cmps
sub
je
xor
pop
out
aas
xor
test
inc
inc
or
add
out
or
add
rol
out
loopne
sub
push
pop
mov
adc
jmp
dec
dec
es
pop
add
xchg
jle
lds
or
xor
imul
jb
out
jge
or
add
out
sbb
imul
sub
(bad)
loop
shl
jne
int
pop
xchg
mov
or
lock
cmps
push
jnp
pop
nop
fwait
retf
retf
mov
cmp
jle
out
es
push
mov
pusha
xchg
fisubr
mov
add
adc
fistp
popf
and
cs
ins
stc
pop
leave
mov
out
cwde
jle
fadd
inc
mov
frstor
push
push
push
add
mov
inc
mov
test
pushf
xchg
dec
add
std
fld
fwait
out
jl
add
cdq
bound
pop
das
sub
inc
scas
stos
out
push
dec
sub
out
sbb
inc
in
out
or
jmp
clc
dec
pop
and
sbb
in
aas
add
out
adc
pop
jne
cwde
mov
out
add
cs
mov
aaa
cmps
cmps
xor
mov
out
movs
mov
inc
inc
sahf
data16
out
cwde
xchg
add
xlat
pop
daa
arpl
out
cmps
mov
jbe
mov
and
loope
dec
dec
adc
jge
adc
setbe
xor
loopne
add
sub
dec
enter
fisttp
add
jecxz
cmp
pop
pop
stos
sbb
jo
dec
ds
mov
out
ins
outs
push
xor
mov
mov
test
add
adc
dec
loopne
loope
add
xor
pop
jb
aas
aas
and
and
ds
pop
es
add
mov
mov
out
outs
add
push
loopne
xchg
(bad)
(bad)
cld
scas
add
fidivr
rcl
rcr
inc
sbb
push
push
add
out
fist
es
in
add
sahf
es
les
sbb
fiadd
add
fldenv
and
add
popa
jp
add
lea
dec
dec
pop
and
js
jge
pop
jle
test
adc
out
push
ret
xchg
add
ins
jmp
call
push
es
sti
repnz
adc
in
pop
pop
xchg
and
add
xchg
and
and
or
cmps
sahf
mov
or
mov
add
mov
add
add
es
fdiv
jns
adc
es
aas
sub
adc
jl
inc
add
mov
cs
mov
mov
sbb
xchg
adc
ret
je
add
div
mov
jb
mov
call
adc
jns
push
pop
out
add
cdq
fbld
rcl
inc
inc
add
pop
add
xlat
jbe
arpl
push
cld
out
inc
inc
dec
es
jno
(bad)
(bad)
(bad)
cmp
or
clc
mov
mov
mov
lods
mov
call
(bad)
xchg
mov
mov
int3
out
mov
inc
add
shl
dec
mov
test
repnz
push
movs
arpl
add
sub
xor
adc
jecxz
xor
push
es
sbb
add
mov
das
sbb
out
cmp
or
cld
loope
clc
cmp
jmp
loopne
inc
mov
shl
xor
out
jg
xchg
inc
inc
sbb
aam
es
add
add
inc
and
sub
and
xor
xor
das
or
je
jns
sbb
sar
xchg
sub
in
add
out
cmp
add
cmp
mov
ins
add
(bad)
out
div
add
out
cs
push
cwde
out
les
es
add
pushw
push
add
out
adc
and
and
pop
pop
pop
pop
sbb
es
aaa
test
push
gs
sub
inc
inc
add
out
pop
(bad)
pop
xor
fist
mov
add
and
and
rol
cmp
data16
inc
dec
add
icebp
test
inc
movs
sub
mov
mov
mov
or
mov
in
in
scas
sub
out
xchg
cmp
and
out
in
add
inc
aam
out
jno
imul
es
xor
(bad)
js
pop
out
js
iret
es
dec
addr16
addr16
and
fist
out
or
lahf
or
cmp
nop
fdivp
arpl
mov
lock
pop
or
repz
or
out
mov
push
test
xchg
pop
pop
addr16
(bad)
outs
jecxz
add
mov
shl
push
loop
loopne
or
add
fbstp
push
es
pop
dec
popa
int3
es
mov
mov
paddusb
addr16
out
and
das
add
inc
sbb
out
mov
xchg
es
add
div
jnp
cdq
add
out
add
test
test
and
arpl
(bad)
in
in
int3
enter
jp
mov
lods
jg
retf
pop
mov
mov
push
popf
add
scas
stc
std
test
aas
jmp
clc
cmp
add
test
xlat
int3
add
push
xchg
icebp
out
xor
add
dec
pop
pop
js
sub
pop
add
pop
pop
jbe
dec
add
call
xor
sbb
xchg
push
jp
(bad)
sbb
ficom
out
test
stos
xchg
xchg
sbb
jo
mov
pop
mov
mov
sub
add
out
scas
adc
jle
add
jnp
cmp
scas
out
out
cmp
shl
inc
add
lock
test
out
jno
std
jns
pop
push
loopne
mov
test
int3
add
repnz
or
inc
stos
push
push
mov
cmps
mov
pop
(bad)
(bad)
push
iret
xlat
out
pop
ret
mov
push
cdq
fld
push
push
xor
out
push
push
in
inc
pusha
out
push
add
push
mov
sbb
add
add
aam
mov
jge
mov
in
and
adc
fcom
mov
fmul
bound
fmul
or
aam
and
dec
cmp
xor
sbb
push
pop
hlt
out
in
mov
add
imul
mov
push
das
add
xchg
out
outs
sub
es
cld
cli
mov
or
push
out
push
shl
inc
out
into
stc
xor
loope
add
hlt
inc
inc
cmp
shr
mov
cwde
pop
xor
adc
mov
fld
mov
add
in
push
add
dec
in
in
dec
push
fs
dec
out
push
sub
sbb
ja
ds
xor
pusha
mov
dec
in
in
add
jp
sti
gs
out
add
ds
inc
mov
out
cmp
xor
sub
cli
div
sbb
(bad)
out
adc
xchg
outs
mov
jns
dec
add
pop
repz
ins
dec
out
xchg
pop
in
in
sub
xchg
out
loope
dec
loopne
jno
add
scas
frstor
xchg
pop
pop
xchg
nop
and
add
push
cdq
dec
dec
imul
out
mov
nop
aas
and
mov
inc
inc
jnp
cmps
sbb
mov
int3
(bad)
outs
out
bound
fsub
jns
out
dec
dec
loope
icebp
es
xchg
push
call
sbb
inc
mov
loopne
lds
out
jg
dec
mov
out
add
es
jne
cmp
sti
rcr
lahf
scas
scas
int
div
repnz
and
add
jecxz
imul
es
add
adc
shl
inc
inc
mov
add
pop
xchg
xor
retf
pushf
push
jmp
add
lea
adc
xchg
out
imul
add
sub
xor
xor
in
adc
push
out
jle
jge
xchg
add
mov
cmp
xchg
pushf
mov
out
retf
verw
aas
div
pop
inc
adc
iret
out
mov
std
rol
out
dec
(bad)
leave
es
inc
mov
cmp
clc
add
out
js
add
and
dec
mov
imul
push
mov
add
es
cld
mov
cli
add
pop
scas
mov
fnsave
cmp
test
jge
mov
push
dec
out
cmp
adc
out
jb
mov
es
mov
jmp
sub
(bad)
sbb
xchg
mov
inc
mov
or
mov
call
inc
inc
and
fcmovnu
or
cmps
out
movs
and
les
aas
imul
add
cwde
adc
stos
ss
data16
add
shl
mov
mov
jo
mov
inc
loope
jmp
pop
outs
cmc
jo
or
dec
imul
out
aad
inc
es
aas
xchg
loopne
(bad)
xlat
add
lea
jnp
int
push
cmps
shl
out
and
addr16
push
out
mov
mov
sub
and
add
and
push
adc
jmp
inc
mov
mov
cmp
js
xor
shr
add
xor
adc
xchg
loope
sbb
lods
push
push
adc
sub
out
push
lods
pop
es
outs
in
sbb
xor
rcr
aas
add
xchg
sbb
jns
dec
ins
out
fld1
add
icebp
mul
out
xor
add
or
jo
clc
in
out
sbb
jo
add
dec
stos
mov
shl
add
mul
and
test
jns
add
es
mov
adc
test
ins
ins
push
ret
push
add
mov
mov
xchg
pusha
shl
xchg
jmp
pop
es
add
dec
mov
out
cli
sub
sbb
pop
jle
add
rol
es
stos
jns
in
mov
pop
out
jne
jmp
push
hlt
or
es
pop
out
dec
mov
sbb
lock
and
xor
add
lahf
sub
aaa
and
js
add
jnp
pop
inc
gs
add
xlat
(bad)
push
out
dec
(bad)
or
fld
loopne
out
lods
outs
inc
es
mov
push
adc
and
mov
aaa
std
out
mov
fs
jno
jnp
pop
clc
es
jo
dec
dec
stc
mov
add
mov
cmps
cmps
mov
fdivr
sar
pop
add
or
add
ret
push
in
mov
push
not
add
(bad)
jns
cmp
rcr
popa
es
std
cmp
mov
rol
xor
out
push
mov
add
out
in
bnd
xchg
adc
out
or
retf
imul
punpckhbw
es
rol
add
out
dec
cmp
and
inc
sahf
loop
bound
nop
out
jmp
xchg
or
xchg
xchg
loopne
and
sub
inc
add
mov
pusha
push
dec
dec
add
stos
pop
pop
adc
out
mov
push
mov
and
scas
fadd
retf
out
out
jmp
add
add
aaa
iret
jbe
ficom
mov
pop
cmp
mov
xchg
dec
xchg
rcr
jmp
pop
dec
and
repz
cli
fcomp
outs
inc
out
mov
cmp
add
das
retf
and
rcl
stc
push
push
add
out
mov
push
cmc
cmc
in
and
jp
shrd
daa
xor
cmps
cmps
fmul
test
ins
cmp
test
sahf
or
rcr
add
fld
pop
cld
cld
push
mov
outs
popf
cmp
push
push
mov
jo
add
cmp
ss
out
call
cmps
ds
add
sbb
in
mov
xor
test
movs
les
leave
adc
pusha
xor
es
(bad)
and
mov
inc
push
(bad)
es
mov
add
sbb
es
neg
pop
pop
push
ja
movs
retf
pop
pop
and
nop
lods
lods
rcr
addr16
rcl
sub
into
out
jmp
or
jae
xchg
or
es
shl
call
jmp
add
push
pop
(bad)
out
xchg
aad
int
push
inc
add
ss
jmp
jnp
add
pop
es
dec
lahf
cs
es
leave
sbb
mov
es
jmp
ss
add
fisubr
sbb
cli
mov
cdq
add
mov
(bad)
ja
sbb
add
retf
out
das
mov
jmp
in
add
jae
pushf
pusha
cld
bound
in
(bad)
add
fiadd
or
xchg
mov
sub
sti
fsub
mov
cs
mov
test
and
mov
adc
out
mov
sub
cmp
and
bound
add
out
adc
es
add
ficomp
(bad)
lea
ss
imul
mov
sar
mov
lods
test
push
push
jbe
into
out
add
es
movs
sub
pop
das
movs
add
cmps
jg
loop
jecxz
add
sti
sti
mov
add
add
nop
sub
mov
add
fwait
sbb
sbb
add
popa
mov
pop
es
jb
dec
mov
cdq
inc
es
sbb
stos
add
mov
hlt
shl
imul
push
mov
mov
or
jno
es
inc
or
dec
mov
pop
adc
pop
out
enter
inc
fs
sub
into
add
add
pop
mov
jle
ficom
int3
add
adc
mov
cmps
es
add
dec
jmp
jecxz
add
enter
arpl
adc
add
jno
rcr
adc
fstp
out
add
es
xor
jb
sar
jg
push
push
add
fcmovnbe
aad
les
movs
cmp
ret
mov
jl
add
jge
gs
jmp
add
popf
popf
sbb
enter
(bad)
mov
sub
out
push
add
es
mov
add
mov
fsubr
and
push
add
das
das
cmc
inc
add
mov
xchg
and
out
inc
dec
or
cmp
out
sbb
repz
inc
push
adc
jno
ficomp
jmp
sub
test
out
rcr
adc
out
inc
in
inc
rcl
nop
sub
out
lds
and
mov
daa
add
fisttp
inc
xor
add
out
scas
mov
pop
es
add
xchg
xchg
aad
or
out
int
scas
es
(bad)
cld
fadd
xlat
es
popf
ds
dec
dec
hlt
sbb
es
add
mov
cmp
retf
lds
aaa
call
add
mov
es
xchg
mov
add
dec
mov
xor
dec
pop
pop
dec
test
xchg
xchg
or
sbb
pop
add
sub
xor
mov
loope
bound
in
es
jne
push
movs
movs
pop
mov
xor
test
imul
scas
add
xor
mov
shl
pop
cmps
shl
add
sub
sub
movs
add
mov
xor
or
mov
xchg
es
xchg
jl
xor
or
xchg
loopne
push
ins
in
push
out
out
retf
push
cmp
aaa
push
outs
inc
es
inc
fs
or
add
fwait
sbb
xor
pop
shr
dec
scas
xor
es
pop
imul
add
out
fnstcw
sbb
add
and
icebp
icebp
aaa
add
es
ret
stos
sbb
es
stc
dec
bound
jnp
add
not
fcomp
add
out
outs
and
mov
lods
sub
es
adc
jg
jge
frstor
out
push
sbb
mov
mov
adc
out
add
jmp
shl
lea
add
arpl
out
mov
cmp
out
inc
push
ja
push
adc
sub
add
(bad)
stc
or
jle
mov
div
mov
xor
in
jb
femms
xor
es
or
loopne
add
ins
or
out
inc
add
mov
pop
mov
jmp
or
cmp
or
xor
into
sbb
rol
out
push
add
(bad)
out
leave
add
pop
fucom
push
sub
out
hlt
sbb
inc
add
and
(bad)
mov
add
lds
and
pop
jg
out
add
jae
(bad)
(bad)
loope
or
std
in
into
add
mov
push
push
sub
js
adc
and
jg
xor
imul
or
mov
movs
lock
stc
add
mov
(bad)
sbb
and
call
mov
or
sbb
(bad)
pushf
xor
in
shl
dec
xchg
cmp
rol
or
test
rcr
push
add
out
out
out
inc
inc
int3
cmp
mov
(bad)
xchg
mov
push
push
loop
add
fwait
pop
xchg
pop
out
imul
(bad)
xor
cmp
jl
add
aas
std
outs
fs
xchg
cld
fld
add
movs
out
add
es
sti
adc
test
jg
cdq
rol
out
xchg
out
xchg
pop
or
mov
inc
out
out
shl
aam
out
cmps
cmp
in
out
int
push
es
push
add
add
out
movs
(bad)
jmp
out
add
and
dec
mov
imul
sbb
es
add
aam
xchg
add
add
pop
and
mov
ja
add
or
xor
ins
sub
out
cmc
fwait
add
mov
xor
mov
mov
test
mov
sub
ret
add
daa
sbb
(bad)
(bad)
add
es
fs
mov
cmp
add
cmps
or
jp
dec
bound
xor
outs
adc
jle
lea
fild
out
out
add
out
mov
stos
add
sbb
pop
inc
xlat
pop
pop
mov
add
jne
mov
pop
xchg
push
push
es
add
lea
xchg
add
cs
push
and
jl
fucom
out
fwait
pop
out
std
add
add
shl
out
pop
push
inc
es
pop
icebp
fcom
push
fs
out
fisttp
add
retf
and
fimul
mov
out
out
mov
add
loopne
enter
push
push
sar
add
in
stos
stos
stc
push
movntq
or
fimul
mov
adc
and
add
push
xchg
ret
(bad)
hlt
hlt
gs
test
add
das
sub
movs
int
es
add
lods
sub
daa
push
xchg
es
bound
lds
ret
sahf
cmp
push
cdq
push
sbb
mov
push
js
add
inc
push
mov
or
out
xor
add
xlat
es
dec
cdq
mov
and
cs
dec
and
xchg
xchg
mov
pop
pop
ror
sbb
sar
or
add
cmp
ds
ret
pop
push
out
repnz
or
add
sbb
xlat
sbb
ret
xor
mov
add
xchg
aam
je
mov
pop
cs
leave
into
pop
add
stos
clc
lock
and
push
xchg
clc
imul
add
(bad)
sbb
push
ret
out
cmps
push
in
es
mov
sub
adc
pop
xor
out
push
mov
es
fwait
and
aas
aas
js
add
dec
xor
stc
stc
(bad)
or
cmp
jl
add
movs
dec
jae
es
jp
call
push
es
fnsave
outs
outs
in
add
aas
xchg
inc
out
lods
push
fwait
jle
jecxz
mul
out
pop
xor
test
out
sub
xor
sbb
jl
cdq
stos
out
xlat
or
push
int3
mov
dec
cmps
add
jbe
push
add
inc
inc
cmp
push
cmp
es
sbb
add
dec
pop
nop
es
in
add
xor
xor
add
cmp
jl
xchg
add
arpl
or
push
push
add
iret
out
sbb
add
or
cmp
mov
add
xor
fist
out
add
sub
add
adc
add
inc
inc
dec
cmps
(bad)
jp
add
xor
fcom
rcl
fsub
xlat
jae
mov
mov
add
or
out
outs
xchg
jl
es
add
mov
mov
lahf
push
(bad)
leave
retf
xor
out
ds
pop
pop
jmp
push
mov
push
nop
cmp
(bad)
(bad)
push
or
test
add
lods
movs
test
jge
fs
shl
inc
mov
rol
jle
out
sub
jp
popf
add
cli
ds
stc
enter
push
push
cdq
push
add
mov
retf
es
add
and
jne
into
es
out
jnp
mov
dec
mov
add
add
cmp
push
mov
lods
mov
fwait
jb
add
and
push
fcom
add
test
out
xchg
xchg
shl
repnz
(bad)
xchg
repz
es
ret
mov
movs
ret
cmp
add
dec
es
jae
(bad)
(bad)
push
add
sub
cmp
jno
pop
call
sahf
sbb
(bad)
push
jl
jp
sar
add
in
cmps
cmps
cmps
pop
adc
cld
push
add
pop
hlt
test
xchg
dec
dec
add
xor
es
add
and
sti
or
add
(bad)
dec
mov
push
push
add
(bad)
out
xchg
rol
pminub
inc
aam
pop
add
pushf
adc
stos
scas
inc
scas
out
fsubr
and
xor
test
iret
es
cdq
or
lods
in
in
pop
(bad)
fucom
adc
lods
jae
add
gs
fs
loope
das
data16
xchg
xchg
pop
enter
mov
cs
adc
pop
sub
add
ret
mov
cmps
cmp
in
add
dec
or
add
and
(bad)
test
repnz
mov
push
add
mov
sub
mov
adc
(bad)
(bad)
shl
inc
repz
es
xchg
rol
add
cmp
das
outs
mov
(bad)
jno
jmp
pop
lea
jo
ror
out
(bad)
push
movs
dec
add
pop
add
call
fist
jns
xor
lahf
push
mov
push
dec
dec
xchg
clc
add
into
std
loopne
test
inc
inc
stos
cs
out
jge
push
es
cwde
xlat
pop
pop
jmp
mov
ss
xchg
cdq
add
out
es
add
mov
dec
out
nop
out
cld
push
outs
es
jo
cs
mov
cli
jecxz
out
mov
push
mov
add
addr16
es
jo
xchg
mov
lods
pop
mov
sbb
or
es
pop
es
hlt
hlt
mov
lahf
mov
push
cld
es
sub
sub
js
mov
ja
xchg
cmps
cmps
add
jmp
push
je
pop
in
popf
add
out
add
dec
es
or
cmc
popa
popa
loopne
push
or
pusha
es
addps
or
js
add
mov
mov
xchg
shl
daa
scas
sbb
add
mov
add
rcr
and
repnz
xor
xor
in
cld
add
clc
adc
retf
xchg
arpl
add
fisttp
or
aad
out
dec
add
es
scas
xchg
xchg
test
cmp
inc
sbb
jne
out
fst
xor
es
es
idiv
pop
pop
jg
nop
int
dec
cli
xor
cwde
xor
jo
(bad)
es
push
adc
fadd
mov
push
es
jmp
es
add
sar
bound
js
add
sbb
jnp
stc
aad
rol
xor
out
mov
dec
es
or
add
xchg
mov
nop
aas
push
push
hlt
(bad)
lods
out
shl
or
or
push
mov
out
xlat
add
pop
dec
and
mov
arpl
mov
daa
lahf
nop
out
mov
jne
pop
out
ret
jmp
out
add
les
or
push
sub
js
popf
add
out
add
fcmovnu
add
(bad)
out
mov
popa
jl
in
cmc
(bad)
out
jmp
(bad)
pop
rol
mov
out
add
js
retf
pop
popa
out
cld
xor
add
inc
mov
push
jge
mov
out
pop
mov
cmp
jmp
pop
sbb
les
es
jle
mov
imul
xor
jb
sbb
add
fs
(bad)
push
pushf
pushf
into
sub
hlt
push
es
pop
push
mov
inc
sbb
imul
sar
adc
ret
mov
xor
add
es
dec
test
dec
sar
dec
push
add
es
sbb
add
shl
mov
inc
xor
xchg
in
add
out
jecxz
sbb
push
add
sub
scas
xor
add
nop
lods
pop
add
sub
mov
lahf
mov
aaa
xchg
lds
pop
add
and
or
out
add
fmulp
iret
pop
fwait
(bad)
out
std
nop
inc
es
sbb
shl
ins
sub
mov
add
add
push
jo
or
popf
fsub
out
or
xchg
jb
loope
mov
in
sbb
lods
out
clc
cmp
mov
stc
and
jns
add
fidivr
scas
out
cmp
pfrsqit1
out
dec
mov
mov
in
cmp
test
add
aad
int3
add
fwait
lods
jnp
mov
and
mov
jp
in
icebp
icebp
jns
mov
and
loop
jnp
data16
test
call
add
push
adc
mov
and
add
sbb
outs
cmps
mov
es
fiadd
mov
pop
adc
es
mov
sbb
outs
add
pushf
mov
mov
push
adc
daa
add
add
xlat
add
faddp
(bad)
lock
or
jo
call
jnp
xchg
out
cmp
jno
mov
add
pop
add
xlat
add
mov
adc
cmovl
xchg
or
add
out
repnz
lea
das
nop
out
add
add
popa
popa
jmp
push
out
xchg
pop
push
sbb
mov
jbe
inc
fistp
out
sbb
je
mov
inc
shl
push
pop
fnclex
es
push
lods
xchg
xchg
test
xchg
xchg
or
out
jmp
jle
addr16
xor
inc
xchg
push
push
and
inc
out
call
adc
pop
inc
jb
add
jae
movs
out
mov
pop
pop
mov
add
imul
jbe
cmp
adc
mov
inc
add
es
into
mov
pushf
pushf
pop
scas
cmp
shl
ss
pop
mov
dec
pop
add
not
push
add
(bad)
shl
adc
aaa
es
stc
cld
inc
inc
(bad)
ret
loopne
out
lods
std
xchg
es
add
mov
sub
sti
enter
add
push
stc
or
jmp
call
out
retf
mov
es
hlt
stos
neg
sbb
fsubr
adc
ror
inc
in
cld
out
sub
test
xchg
lea
add
inc
out
pop
sub
push
repnz
aad
sub
add
es
add
shr
out
popf
ins
mov
mov
add
es
or
sbb
shl
scas
add
push
les
je
pop
ret
jo
push
jb
jge
add
inc
add
loopne
or
cmp
push
jg
cwde
add
es
in
add
es
add
int3
jl
add
call
es
cdq
pop
adc
and
lock
imul
fld
sbb
jmp
inc
rol
sub
cmp
xor
sbb
pusha
imul
and
push
fistp
es
push
jmp
or
cmp
jmp
out
mov
stc
dec
dec
add
xor
add
out
sbb
xchg
stos
stos
lea
ret
out
mov
dec
hlt
inc
out
pop
xor
es
pop
lods
lods
ja
cmps
add
jnp
adc
or
and
cmp
es
adc
xchg
xchg
dec
scas
add
xchg
cmp
out
mov
movs
add
adc
out
jo
mov
das
stos
stos
and
in
es
retf
pop
out
int
in
xor
add
add
arpl
out
call
fidiv
add
fld
out
cmp
xchg
pop
retf
movs
aas
js
(bad)
shl
pop
sbb
dec
add
mov
loope
cs
out
push
add
and
add
repnz
shr
mov
cmp
xor
out
xchg
scas
aad
mov
imul
or
jp
ds
add
xor
(bad)
iret
movs
adc
adc
es
leave
sub
daa
xchg
add
jnp
xlat
das
movs
out
shl
je
and
mov
push
imul
out
jne
bound
xchg
adc
cmp
out
inc
jl
add
push
dec
enter
sub
icebp
fstp
mov
jl
inc
push
es
fwait
ret
test
inc
cmp
mov
sub
lock
push
or
scas
mov
out
popa
add
dec
push
sbb
mov
outs
add
gs
ds
es
cmp
jnp
(bad)
mov
push
adc
es
push
xor
fld
adc
call
add
pusha
out
clc
mov
add
dec
es
sti
jne
pop
add
jg
out
dec
add
fcom
mov
add
je
out
add
jl
add
jmp
inc
out
mov
imul
sar
and
mov
add
or
cmp
push
add
int
mov
dec
loopne
sub
clc
mov
inc
shr
xchg
push
dec
dec
adc
out
(bad)
xchg
cs
repnz
out
push
xor
in
jge
inc
es
jl
pop
pop
adc
add
sub
es
mov
push
sub
loope
outs
adc
dec
(bad)
repnz
cmp
aaa
aam
out
add
ins
inc
out
pop
fld
push
out
sub
imul
inc
inc
out
pushf
add
das
xchg
xchg
stc
jns
es
add
push
cmps
sub
int
repz
mov
shl
ret
movs
repnz
add
cmp
add
cld
es
gs
add
cmp
jge
es
es
aad
add
loop
mov
and
in
rol
xchg
les
es
inc
xchg
adc
and
loop
aaa
mov
cmp
add
pop
loopne
xor
fimul
ds
mov
(bad)
hlt
hlt
push
rol
out
dec
push
(bad)
(bad)
ja
dec
out
mov
into
ins
ins
mov
add
es
adc
rcl
cmp
jo
add
sbb
pusha
pop
xor
out
fidiv
and
test
add
mov
add
or
xor
in
je
dec
sub
pop
mov
lods
add
inc
cmp
out
add
adc
add
es
out
std
inc
sub
or
or
jecxz
fisub
add
xchg
in
imul
out
add
cmp
push
out
stos
add
mov
mov
shr
pop
pop
clc
xor
out
add
cmp
xchg
adc
hlt
jmp
out
mov
es
or
jne
mov
ins
data16
out
sahf
mov
out
out
add
cwde
sar
retf
es
mov
jmp
add
mov
cmp
mov
das
in
js
sbb
sti
add
mov
add
and
xchg
addr16
inc
jecxz
add
sbb
es
mov
lahf
mov
rcl
jae
xor
jmp
addr16
fs
push
add
fbld
inc
xor
lahf
test
and
aas
pop
dec
pop
out
xor
mov
jecxz
imul
jno
add
push
pop
es
aas
mov
add
inc
es
sbb
xor
jno
push
out
lods
rol
adc
test
ficom
pushf
push
es
jo
jl
retf
(bad)
xchg
enter
add
sub
cmp
push
daa
sbb
pushf
cmp
inc
inc
rol
push
es
in
xchg
xchg
mov
imul
(bad)
mov
add
cli
mov
mov
fsubr
jmp
(bad)
(bad)
jns
out
push
daa
or
push
mov
mov
in
jmp
and
pop
loopne
xor
scas
sti
add
cmp
in
mov
es
or
jmp
pop
repnz
and
stc
xor
dec
loop
add
sub
mov
shl
and
les
mov
and
es
jmp
pusha
pusha
stos
int
cs
imul
add
adc
bound
lods
cdq
sbb
sub
xlat
(bad)
fwait
sbb
test
sub
adc
popa
xchg
sub
add
push
imul
jp
push
out
sbb
(bad)
setnp
fucomp
es
add
bound
or
sbb
les
es
pop
add
fbld
(bad)
es
sbb
mov
(bad)
out
loop
jnp
js
add
out
(bad)
fmul
xchg
add
pop
mov
cmp
aam
adc
sub
mov
pop
enter
sahf
add
xor
add
(bad)
mov
es
or
xor
ss
xor
add
fwait
push
pop
pop
jmp
js
(bad)
sbb
ret
addr16
int3
int3
adc
push
out
sbb
cdq
(bad)
out
adc
jp
jge
add
mov
sub
add
in
sub
aam
cli
cli
jne
add
mov
leave
pusha
cwde
push
aaa
aaa
pop
add
and
cmp
add
cdq
inc
popa
popf
popf
(bad)
ins
dec
out
add
es
mov
xor
movs
out
out
mov
pop
sub
push
ds
out
jb
out
popa
xchg
add
movs
es
fiadd
mov
es
add
pop
pop
cld
dec
imul
out
gs
sub
inc
add
push
(bad)
(bad)
mov
fld
fwait
enter
mov
psrad
add
jne
nop
rol
imul
add
or
movs
je
out
add
sbb
out
cmp
movs
aam
test
pop
out
mov
and
mov
and
sar
es
push
add
mov
(bad)
shl
xchg
push
call
add
sbb
prefetchnta
sti
movs
cwde
sbb
scas
out
add
sub
jecxz
(bad)
adc
push
div
out
and
add
cli
lds
aas
movs
cmp
and
mov
sbb
xor
es
add
dec
retf
retf
leavew
add
cmp
mov
(bad)
out
out
pushf
sub
cmp
mov
add
es
inc
push
add
add
push
in
lea
shl
add
jecxz
add
stos
sub
cwde
and
std
push
pop
pop
and
push
push
jnp
iret
out
push
cs
mov
bound
ror
pop
pop
les
xchg
mov
adc
out
push
arpl
xor
lock
add
push
out
lods
mov
es
push
loopne
mov
inc
push
jmp
push
jp
pop
call
test
rcr
add
pop
rcl
fwait
xchg
pusha
xor
cli
sbb
out
ret
div
mov
test
xchg
add
add
xchg
xchg
pop
and
es
xchg
mov
dec
mov
mov
push
jne
add
lahf
add
push
and
leave
call
jp
es
lods
add
inc
out
sub
mov
int
add
lea
out
and
push
jge
adc
add
stc
inc
ret
or
xor
fwait
fwait
ja
addr16
lock
push
push
arpl
popf
out
inc
xchg
mov
or
pop
add
add
inc
test
add
cmc
pusha
xor
cmps
pop
test
lds
bound
mov
lahf
sbb
out
cdq
cli
shl
sbb
imul
jbe
call
jmp
inc
pop
inc
inc
dec
cmps
sahf
out
sub
sbb
pusha
mov
inc
xchg
es
dec
fbstp
iret
es
mov
sub
call
clc
pop
jns
inc
inc
xchg
push
repnz
push
cmp
mov
sub
mov
es
retf
div
icebp
add
out
cmc
bound
rcr
enter
inc
jno
add
in
ss
nop
es
xor
sub
shl
mov
add
push
(bad)
jmp
add
out
mov
xor
sbb
mov
cmps
sub
jmp
sub
outs
pop
lods
shr
jno
call
outs
dec
ja
das
cmp
outs
add
out
mov
sbb
or
int3
faddp
xchg
mov
test
xchg
pop
ja
and
dec
or
repnz
and
es
clc
mov
mov
add
sub
cdq
out
or
mov
leave
leave
inc
dec
hlt
hlt
sub
lea
xor
out
or
js
into
lock
jnp
cs
es
mov
and
out
add
inc
cmc
out
bound
mov
add
out
or
add
push
rcl
adc
push
cmp
add
nop
pop
sbb
cmps
es
fcmovu
add
out
pop
xor
rcl
jge
cmp
pushf
rcr
es
mov
retf
sub
es
scas
ret
or
pushf
push
pop
rcl
xchg
push
loope
push
push
cmp
es
mov
add
es
dec
xor
pop
cmp
sti
es
or
addr16
pop
(bad)
out
outs
xor
add
add
xor
out
add
xchg
push
xchg
xchg
pop
add
es
idiv
mov
xchg
push
out
adc
pop
mov
out
in
push
scas
push
push
jl
pop
out
dec
xor
and
cld
loop
rol
push
mov
push
jl
out
icebp
push
dec
es
iret
cmps
div
imul
or
add
retf
daa
out
mov
xlat
add
mov
nop
adc
sub
xor
jl
lea
rol
ds
xor
in
inc
add
xchg
jecxz
pop
and
leave
add
daa
scas
inc
sub
add
or
xchg
sub
add
es
cmp
or
add
pop
dec
test
cmp
movs
lsl
mov
xor
daa
jno
test
or
out
lfs
shl
mov
add
out
cmps
popf
jne
add
mov
inc
mov
add
dec
out
mov
dec
cmp
pop
and
add
fiadd
test
xor
jmp
pusha
adc
fwait
fwait
sbb
cmp
cli
hlt
mov
xchg
xchg
add
jg
adc
(bad)
xlat
xchg
int
pop
cdq
out
sub
add
out
out
retf
stc
jmp
inc
es
push
fdivr
mov
mov
ds
sub
mov
lea
imul
out
xchg
and
add
dec
out
mul
outs
add
adc
(bad)
inc
bound
sbb
out
add
sahf
sahf
dec
out
into
out
cwde
pusha
add
adc
mov
cli
or
pop
rcl
(bad)
mov
lods
push
cmp
inc
stos
sbb
jne
or
mov
(bad)
add
mov
push
rol
out
sbb
repz
cwde
add
dec
pop
dec
inc
jge
sub
push
mov
out
in
adc
mov
dec
es
mov
sub
shl
adc
and
out
xchg
push
add
outs
pop
xchg
cmp
(bad)
out
out
imul
add
test
(bad)
add
cmps
mov
add
cli
xchg
cmp
push
out
or
cdq
es
(bad)
rol
sbb
es
out
adc
pop
in
jb
lods
lods
jp
add
stc
sub
bound
xor
shl
add
retf
mov
out
adc
repnz
imul
mov
es
inc
pop
adc
shl
imul
xor
xchg
es
and
mov
int
cmp
mov
or
out
fprem
push
es
call
mov
lods
out
dec
mov
das
das
cmc
loope
out
or
je
(bad)
psubb
xchg
xchg
dec
dec
lods
out
add
sbb
into
jl
add
clc
lods
push
loope
cmp
sub
scas
das
rol
pop
mov
inc
mov
aaa
loopne
dec
retf
out
push
sbb
es
jg
adc
add
repnz
add
xchg
or
dec
aam
mov
in
push
es
sub
pop
les
cmc
xor
jmp
out
cmp
es
sbb
out
mov
imul
sbb
cld
fwait
add
mov
jg
es
push
popf
ret
int
push
pop
push
push
adc
ins
es
aas
mov
cmps
call
or
fisttp
scas
add
pop
sub
in
inc
push
mov
adc
es
dec
cmp
mov
loope
jbe
dec
(bad)
inc
jno
shrd
xchg
cdq
cwde
(bad)
mov
out
add
icebp
mov
frstor
scas
jno
les
sub
imul
out
or
mov
or
pusha
es
mov
das
xor
es
and
add
mov
sbb
xchg
(bad)
fdiv
sub
das
jg
add
loop
daa
scas
out
jmp
fstp
test
es
push
int3
mov
sbb
sbb
outs
outs
cmp
sbb
gs
inc
(bad)
es
inc
add
pop
mov
cld
es
and
add
data16
pushf
xchg
jns
out
jb
sahf
es
push
call
outs
add
fstp
loopne
adc
add
xchg
ja
ins
cmp
loope
out
call
not
es
cmp
(bad)
(bad)
push
adc
out
pop
add
test
cmovne
out
cmpps
es
mov
add
rcr
cmps
add
lds
add
or
pop
xor
adc
mov
mov
out
add
mov
mov
or
and
fs
dec
add
xlat
mov
push
push
lods
es
mov
and
add
mov
out
popf
not
dec
pusha
pusha
mov
jae
aaa
add
and
fisub
push
imul
push
cmp
out
mov
div
inc
pop
(bad)
out
lahf
dec
shr
mov
push
add
test
dec
and
mov
test
add
cmp
or
add
loopne
xor
add
ins
es
lods
(bad)
pusha
pusha
add
retf
and
pop
sbb
fs
out
iret
sub
in
out
dec
sub
jle
rol
nop
out
and
xchg
xchg
out
add
mov
sub
jmp
pop
jbe
add
or
dec
dec
mov
jno
add
iret
shl
ret
out
cmp
cmc
add
lea
xor
sbb
imul
xor
push
mov
xor
mov
es
xchg
or
rol
ds
aam
(bad)
jns
jl
mov
out
sar
mov
out
jmp
cmps
es
mov
add
out
or
(bad)
add
in
mov
and
add
xchg
out
jge
mov
scas
mov
sbb
dec
sti
add
or
and
in
add
xor
cld
adc
mov
add
hlt
hlt
inc
nop
aad
xor
leave
cmp
das
dec
out
icebp
jge
es
les
mov
call
mov
cmps
rol
lds
cld
es
maxps
xor
test
int3
out
or
cmps
push
add
sbb
jbe
and
sar
xor
out
adc
(bad)
mov
int
(bad)
push
jae
out
dec
mov
div
add
lea
inc
xchg
mov
pusha
pusha
pop
mov
jae
xor
mov
addr16
cld
pop
add
push
mov
es
push
sbb
es
ret
adc
add
and
cmp
mov
out
add
push
std
std
je
or
pop
in
mov
jg
sbb
ficom
es
cmps
fild
stos
es
nop
add
(bad)
es
clc
cwde
and
es
dec
adc
inc
test
repnz
pop
ss
js
es
and
or
in
aad
loopne
lock
mov
add
push
xor
adc
jbe
add
out
in
out
es
push
pop
xchg
adc
xlat
leave
add
xor
dec
sbb
lods
lods
test
xchg
add
sub
mov
loope
add
add
cmp
out
sbb
lea
mov
add
pop
jp
daa
add
cmp
sbb
inc
add
fisubr
es
es
and
outs
mov
out
cdq
add
es
std
mov
imul
inc
mov
xchg
mov
test
and
jns
cmp
cwde
add
dec
repnz
inc
(bad)
(bad)
add
dec
add
stc
push
mov
mov
mov
popa
or
add
out
mov
lock
cmp
(bad)
jnp
es
push
cld
aas
aas
cmp
pop
add
jp
or
js
sub
sub
pop
mov
add
out
inc
xchg
fwait
mov
mov
mov
add
ds
out
dec
mov
and
icebp
pop
push
push
inc
push
add
out
xor
mov
add
push
daa
out
dec
dec
jbe
jb
and
add
out
out
sub
scas
cmp
xchg
jns
add
add
xor
lahf
pop
aad
(bad)
je
pusha
out
mov
jae
add
and
and
into
push
add
jle
xlat
es
(bad)
pop
push
push
pop
mov
and
dec
fwait
adc
ja
enter
fsub
in
mov
cwde
cli
adc
lods
lods
mov
shl
call
sbb
out
out
mov
pop
(bad)
je
jne
add
push
mov
loopne
pop
enter
mov
enter
cs
jecxz
mov
rol
sub
jle
ss
inc
mov
dec
data16
add
fbld
es
imul
xor
xor
retf
enter
adc
out
clc
sti
lea
rep
add
pop
pop
je
cdq
sbb
sbb
pop
out
in
mov
retf
and
add
dec
aad
out
sbb
pusha
es
bswap
clc
fstp
les
es
xchg
into
mov
add
jl
scas
out
ret
ret
mul
repnz
es
pop
cmp
xchg
es
loopne
add
jmp
(bad)
add
and
or
inc
jmp
loope
aaa
push
and
add
lea
imul
add
ss
loopne
sub
jne
mov
addr16
out
xor
add
sti
out
out
cmp
lods
lods
inc
inc
jmp
sbb
cmc
movs
pop
and
or
rcl
imul
aas
xchg
xchg
test
aad
add
cmp
pop
or
and
pop
lds
mov
aaa
ds
out
ins
add
lods
lods
outs
dec
pop
out
sti
popa
add
ins
jecxz
xor
out
mov
add
into
mov
sar
add
pop
fcmovnu
(bad)
mov
xchg
dec
add
jnp
fsub
out
repnz
es
aaa
push
inc
inc
leave
les
or
adc
into
push
add
out
lods
add
es
dec
stos
std
push
es
adc
pusha
pusha
loop
adc
ins
out
mov
mov
repnz
out
add
sub
push
inc
movntq
add
mov
pop
pop
(bad)
les
enter
sbb
adc
out
or
es
add
xchg
xchg
sbb
add
(bad)
out
pop
mov
es
inc
add
fbld
inc
push
lds
jg
es
icebp
aam
iret
iret
adc
mov
lock
shr
cmp
nop
fstp
fwait
ins
ins
adc
sub
add
mov
js
sub
out
add
es
lahf
lock
mov
xlat
cmp
outs
add
lock
xchg
sbb
cmp
imul
out
sub
lock
add
and
and
pusha
out
imul
sub
pop
pop
ret
cli
cdq
mov
jne
out
adc
iret
call
inc
pop
std
es
pop
jle
inc
movs
nop
or
aaa
gs
cmp
adc
sub
xchg
xchg
add
int3
inc
inc
xor
loop
mov
out
jg
push
add
shr
outs
outs
cmp
add
mov
scas
pushf
pushf
das
add
or
retf
cmp
sbb
ret
and
js
add
out
sub
cs
je
nop
div
repz
aad
out
lea
(bad)
sahf
adc
add
dec
adc
dec
and
shl
mov
add
cmp
ret
mov
or
mov
mov
push
hlt
sbb
(bad)
mov
adc
or
or
inc
data16
out
sub
es
xchg
push
jae
add
mov
add
jmp
push
inc
out
jns
inc
korb
movs
out
add
and
xchg
xchg
out
test
aad
pushfw
mov
sub
mul
adc
mov
add
push
sbb
cmp
cmp
in
sub
xor
out
mov
imul
aaa
dec
sbb
sahf
jmp
add
dec
push
add
add
jb
es
inc
jbe
jno
xchg
add
pop
jle
test
js
pop
jbe
add
sti
pop
mov
mov
xlat
add
mov
(bad)
loop
add
mov
sub
push
jl
rcr
jbe
out
push
add
es
cdq
inc
pop
loope
add
es
lods
mov
stc
mov
jl
es
ror
out
sub
ins
fcompp
pop
pop
enter
or
push
test
sbb
xor
xchg
out
fdiv
es
clc
popa
jbe
add
cmp
jne
mov
stos
es
cs
xchg
xor
loopne
add
shr
and
out
dec
add
sub
or
add
das
jnp
push
out
sbb
int3
add
mov
enter
pop
scas
out
add
out
ins
out
test
pop
jnp
inc
or
ds
dec
add
out
xor
rcl
mov
lea
adc
sbb
in
jmp
rol
call
out
retf
add
out
aam
inc
out
and
hlt
rol
out
mov
ins
inc
inc
shl
push
out
pop
fwait
(bad)
add
adc
es
pop
jnp
psrlq
sbb
out
inc
je
es
xchg
stc
pop
pop
inc
inc
push
add
aad
cmp
jmp
sbb
or
daa
retf
jns
iret
add
nop
add
cmp
not
in
aad
add
sbb
popf
lea
ins
xor
or
lods
out
rol
pop
pop
push
push
mov
icebp
and
retf
mov
fcmovu
add
fwait
into
mov
es
jle
xchg
add
push
pop
jmp
imul
sti
ins
add
sub
pop
mov
cdq
data16
out
test
ds
mov
add
xor
pop
fsubr
es
push
pop
out
adc
sbb
pushf
int3
mov
mov
push
xchg
add
outs
adc
je
rcl
inc
out
rol
addr16
out
mov
dec
int3
int3
aam
xchg
out
out
push
es
js
add
int3
clc
add
add
push
pop
pop
iret
mov
fild
cmp
out
xchg
xchg
xchg
add
adc
pop
xchg
push
jmp
dec
es
add
(bad)
(bad)
sub
sar
out
add
es
cmps
retf
inc
fcomp
jge
xchg
or
shl
es
cwde
stos
jnp
imul
dec
rol
cmps
sbb
out
jo
sbb
loope
add
es
jmp
add
test
imul
int3
jnp
(bad)
add
sub
icebp
movs
pusha
mov
jns
add
sbb
add
sub
sahf
xor
sbb
shl
inc
mov
push
add
xchg
inc
es
add
lods
mov
fidivr
cmp
xchg
mov
es
out
mov
rol
lea
jo
aad
sub
add
xchg
das
jg
inc
in
out
adc
jnp
nop
push
push
add
cmps
pop
movs
scas
fcmovu
clc
jle
add
inc
prefetch
or
movs
xor
add
in
out
jmp
je
ret
out
sbb
lds
aas
and
jecxz
sub
out
cwde
retf
imul
popf
popf
jno
add
out
xor
add
sti
outs
mov
repz
lods
xor
mov
xchg
mov
add
xor
xchg
add
out
call
dec
bnd
std
fsubr
pop
out
pushf
mov
cli
sahf
out
mov
or
int3
jbe
es
and
cwde
add
popf
and
mov
jae
sbb
(bad)
out
xlat
ds
shl
add
push
mov
es
xchg
div
es
or
repz
push
cmps
and
es
add
pop
cmps
fadd
lds
add
ja
aas
xchg
jae
mov
pusha
es
int3
add
outs
fucomip
mov
mov
sbb
retf
mov
es
mov
sub
add
out
test
sbb
mov
int
jbe
es
imul
mov
out
out
lods
loope
mov
out
add
xchg
push
add
cs
retf
or
dec
ja
shl
add
xor
xchg
scas
es
addr16
(bad)
clts
test
sbb
mov
and
movs
add
mov
xchg
sbb
sbb
inc
adc
out
mov
inc
fld
out
imul
pop
and
ja
dec
xor
dec
mov
out
cmp
popa
mov
inc
xchg
cmp
es
sbb
mov
mov
adc
adc
push
add
es
mov
stos
add
test
fsub
mov
add
mov
in
in
dec
sbb
es
pop
pop
pop
add
out
push
add
xchg
cs
es
sub
(bad)
(bad)
cmp
dec
and
mov
push
push
push
add
dec
mov
out
hlt
hlt
add
out
aam
sbb
xchg
xor
ret
mov
mov
mov
pop
pop
cld
cwde
xchg
push
push
sub
movs
lods
xchg
add
out
movzx
es
dec
rcl
add
out
xor
sbb
int3
scas
add
jl
mov
mov
out
ret
shl
mov
out
lods
lahf
cli
es
test
mov
test
add
aas
rcl
aam
xchg
fld
jb
leave
leave
jne
outs
es
pop
pop
clc
clc
fst
cmp
cmp
xchg
pop
add
ja
and
add
out
inc
xchg
mov
scas
jg
pop
es
jge
xor
es
xchg
inc
add
inc
xor
cmp
inc
mov
jns
sub
xchg
out
clc
add
push
jbe
in
out
and
and
pusha
pusha
mov
lock
in
div
loop
add
add
ins
mov
clc
out
push
mov
es
stos
add
int3
int3
(bad)
add
out
add
add
dec
dec
push
into
and
add
aaa
jo
adc
lock
add
or
mov
push
push
loope
inc
out
cmp
inc
jb
mov
or
ror
hlt
add
test
dec
stc
shl
mov
es
pop
cmc
push
(bad)
sbb
test
out
jp
cli
es
push
in
and
ins
or
inc
loopne
xchg
xchg
cmps
lods
mov
mov
or
jne
es
retf
mov
bound
add
jae
into
inc
inc
es
aam
cmps
cmps
add
xor
retf
push
mov
add
cmp
cld
pusha
addr16
mov
mov
mov
pop
or
js
push
inc
and
add
mov
cmc
inc
dec
dec
xchg
es
clc
mov
add
inc
push
xchg
xchg
push
inc
in
out
cld
adc
outs
pop
adc
dec
test
add
dec
in
push
xchg
mov
pop
pop
pop
popa
and
pop
test
adc
test
call
pop
mov
pop
mov
out
push
es
pusha
pusha
adc
jmp
cmp
out
popf
mov
and
add
es
sub
in
mov
pop
pop
into
shl
add
neg
sahf
sahf
hlt
mov
jne
es
add
movs
or
sar
add
cmp
jge
pop
out
xchg
add
in
out
cmps
lods
add
out
adc
mov
adc
xor
test
add
add
mov
mov
jno
fild
or
out
xchg
(bad)
data16
fwait
test
inc
es
jl
jmp
into
cmp
es
jo
jp
dec
scas
add
es
xchg
test
mov
sti
jbe
add
cmp
fmul
pusha
pusha
cmc
sub
out
pushf
inc
cld
mov
mov
or
cdq
add
xor
rcl
aad
mov
cmp
or
xchg
out
mov
pop
add
lods
add
mov
out
mov
mov
call
jns
add
sahf
es
xchg
mov
stos
add
sub
call
sbb
sahf
es
mov
sub
and
(bad)
sbb
dec
dec
cmp
sub
es
add
jo
stos
mov
sub
out
push
out
in
xchg
les
mov
add
dec
mov
es
add
push
push
xchg
scas
(bad)
lods
shr
jmp
adc
ds
rol
mov
adc
fsub
icebp
js
add
xlat
fidiv
fcom
es
add
gs
sub
pop
out
cmp
mov
mov
int3
dec
dec
ds
and
mov
lods
lods
sub
lods
mov
sbb
sbb
in
dec
dec
add
es
mov
rol
sahf
cmps
dec
and
and
mov
pop
and
and
add
(bad)
jb
es
test
add
jle
or
sti
and
add
in
cdq
xor
imul
xchg
rol
out
out
pop
bound
ror
add
lahf
jp
out
cmp
in
pop
mov
call
shr
jge
cmc
out
repz
es
test
out
push
add
jecxz
out
or
sti
push
out
jle
pop
adc
repz
jle
inc
inc
loope
add
mov
mov
gs
xchg
or
adc
out
pop
mov
add
jg
xor
add
call
add
nop
cmp
xchg
es
inc
in
sub
mov
leave
jno
scas
in
(bad)
es
add
mov
loop
pop
add
mov
hlt
push
xor
add
rol
es
jae
jno
es
dec
sub
inc
fiadd
and
mov
repnz
out
jno
out
es
sub
mov
rol
add
xor
add
or
dec
call
out
dec
push
fwait
shl
add
add
cwde
jns
out
mov
xor
cmp
fsave
xchg
xchg
mov
and
push
sbb
call
mov
nop
and
rol
pop
dec
out
push
add
sbb
mov
mov
imul
pop
xor
loop
inc
xchg
lock
inc
add
mov
scas
repz
add
mov
hlt
push
icebp
mov
add
aaa
stc
cld
sub
aam
ficomp
add
sbb
jbe
(bad)
js
out
mov
and
jecxz
adc
mov
sbb
arpl
cmps
es
clc
js
mov
add
xchg
sub
add
rol
in
scas
push
aam
pop
xor
jg
stos
out
(bad)
xlat
int
es
lock
pop
ja
cmp
out
lods
lods
rol
adc
adc
cmp
fwait
mov
lock
pop
push
jge
pop
pop
ficom
jge
mov
pop
xchg
xchg
mov
push
out
out
sbb
lods
in
pop
mov
mov
(bad)
setp
jne
ins
rcl
push
xor
add
imul
mov
add
push
push
or
cdq
nop
adc
pop
adc
or
xchg
inc
inc
es
add
iret
movs
outs
mov
out
pop
mov
es
and
push
pop
xchg
mov
inc
out
sub
mov
sub
sub
popa
xchg
add
adc
push
push
mov
hlt
sbb
out
lea
pop
dec
out
outs
(bad)
dec
mov
aad
add
mov
or
xchg
lock
mov
addr16
adc
repz
icebp
xor
das
cmp
xchg
mov
out
mov
sbb
add
fwait
fwait
stos
add
out
out
or
nop
nop
hlt
push
jl
imul
or
add
pop
jg
pop
cmp
es
sub
ret
add
addr16
out
call
cmp
dec
sbb
cmps
es
push
outs
adc
test
in
add
retf
sub
push
xchg
xchg
mov
pusha
out
out
mov
xor
or
and
xor
mov
jle
in
cmp
fsub
rol
clc
mov
push
push
lahf
add
scas
or
cmp
in
cs
or
in
dec
pusha
push
push
es
add
xor
shl
aam
es
pop
mov
(bad)
sub
mov
inc
fmulp
es
adc
cmps
cmc
es
pop
mov
mov
pop
ss
shr
loop
add
jb
lahf
mov
or
add
(bad)
aas
aas
rcr
es
add
mov
jecxz
jle
cmp
pop
psraw
je
xchg
add
cmp
into
out
(bad)
stos
add
sbb
in
(bad)
add
inc
rcr
sbb
inc
mov
pop
aaa
inc
xchg
es
stc
mov
es
add
mov
ja
adc
add
out
lock
pop
and
add
mov
in
inc
add
in
clc
clc
dec
imul
imul
lea
es
ja
cld
cld
add
stos
pop
or
clc
add
es
jle
cmps
cmps
adc
sbb
imul
sub
psubq
movs
in
xchg
add
das
xor
push
leave
out
sbb
fucomip
out
fldcw
add
mov
std
dec
rol
test
add
out
cmps
pop
pop
es
xor
pushf
cmp
sub
es
dec
push
(bad)
add
or
xlat
mov
add
jo
mov
les
pop
enter
fmul
or
push
inc
add
or
xchg
lahf
(bad)
push
lds
push
test
push
adc
aad
dec
out
adc
xchg
jns
add
shl
cmp
and
repnz
xor
imul
inc
mov
out
inc
sbb
es
sbb
mov
lea
mov
outs
jne
scas
out
iret
cmp
push
out
ror
cmps
xchg
setns
shl
out
out
jne
hlt
hlt
xchg
add
out
sub
inc
pop
add
or
sti
repz
(bad)
out
sub
mov
fcomp
or
mov
dec
inc
dec
shl
sbb
add
inc
inc
pop
push
adc
fldenv
rcl
iret
or
es
or
arpl
shl
sbb
sbb
aad
mov
add
icebp
std
add
jmp
sahf
bound
repz
push
mov
ds
push
clc
clc
push
add
out
je
shl
sti
lods
push
out
out
pusha
pop
add
xchg
push
pop
inc
pop
pop
jmp
mov
add
es
add
cmp
and
add
mov
out
loop
mov
inc
je
stos
pop
pop
pop
adc
dec
dec
js
add
fimul
sti
es
mov
dec
pop
lock
fdivr
adc
or
je
fimul
(bad)
arpl
stos
out
js
jle
pop
add
push
cwde
and
(bad)
add
es
aas
ins
and
aaa
aaa
adc
movs
out
nop
ja
ret
ret
add
push
es
int
add
popf
jb
stos
stos
loopne
jl
divps
loop
arpl
jmp
out
(bad)
in
and
stc
add
rol
es
mov
dec
or
les
mov
aam
arpl
pop
out
push
cmp
(bad)
(bad)
mov
jbe
add
loopne
lods
out
cld
push
call
(bad)
out
stos
jge
es
test
js
mov
add
cld
xchg
out
dec
pop
popa
es
out
inc
inc
inc
mov
das
das
out
shr
out
jl
sbb
out
pusha
or
and
test
xchg
not
add
add
inc
inc
xor
or
xor
es
into
dec
add
sub
mov
movs
(bad)
mov
add
mov
jae
mov
push
es
fst
(bad)
enter
iret
iret
xchg
push
add
test
pusha
push
push
dec
mov
mov
out
inc
add
fdivr
loop
dec
mov
xchg
mov
outs
lock
mov
cmp
in
in
fmul
daa
out
or
lea
out
mov
addr16
mov
cmp
fisubr
add
out
out
test
or
hlt
lods
lods
pop
nop
add
out
cmp
out
fimul
je
call
es
stos
add
es
shl
popf
sbb
pusha
dec
add
sub
add
mov
enter
jb
movs
loopne
out
lds
mov
sar
push
dec
add
popf
mov
inc
xor
add
fmul
dec
pusha
xchg
mov
shl
sub
out
cmc
add
inc
repz
shl
inc
jge
and
and
retf
add
dec
out
xor
push
out
add
sub
add
mov
add
mov
(bad)
(bad)
repnz
scas
pop
inc
ins
sbb
stos
mov
out
xchg
jb
es
int3
pop
add
mov
sbb
loope
and
pop
jg
jecxz
test
add
mov
lods
sbb
inc
push
adc
sub
es
jo
aas
aas
add
fs
out
cs
pop
xchg
out
cwde
add
(bad)
cmove
out
inc
add
es
jmp
jae
add
inc
jl
jo
ins
xchg
es
shl
jne
jae
pop
dec
out
add
dec
shl
rol
push
popa
mov
ds
loopne
cmps
js
mov
xor
std
or
je
add
add
and
add
push
pop
add
inc
add
es
lods
cli
add
sub
icebp
icebp
mov
mov
sbb
mov
lock
add
mov
add
(bad)
dec
sub
add
popf
loopne
es
add
mov
popa
jmp
xor
cmps
push
(bad)
out
sti
test
and
xchg
mov
out
pop
jg
add
loopne
mov
push
add
rcl
ja
ror
jl
out
pop
push
inc
out
add
or
ss
out
push
pop
jne
aam
mov
lods
shl
cmp
std
xchg
in
or
add
push
es
ficom
into
into
pop
jbe
or
out
cmp
es
das
mov
out
cld
and
jbe
icebp
adc
out
je
rcl
jmp
out
out
sub
scas
cdq
cdq
lea
sub
es
push
xor
and
div
adc
sahf
sahf
add
mov
sub
les
out
out
rcl
add
inc
and
add
pop
pop
shl
out
idiv
cs
xchg
(bad)
pavgb
jno
out
inc
test
or
xor
cmp
add
out
mov
jle
nop
jl
pop
out
xchg
xchg
jmp
inc
fcmovb
or
dec
je
cmp
test
mov
adc
cs
jl
add
pop
out
mov
mov
fcmovne
retf
shl
and
adc
sub
daa
shl
out
(bad)
pop
inc
es
je
add
lahf
cli
or
bound
stos
mov
add
mov
mov
popa
sub
(bad)
out
cwde
pop
rcl
out
rol
es
div
gs
inc
jl
add
pop
out
rol
mov
xor
sub
add
xchg
loopne
ret
pop
out
push
scas
(bad)
es
inc
(bad)
les
and
aaa
aaa
cmps
add
sub
fidivr
add
imul
out
cdq
xchg
loope
hlt
jno
int
arpl
cs
fs
jle
add
out
daa
inc
shl
(bad)
test
push
es
inc
add
addr16
or
add
loop
outs
jmp
jno
cmc
add
jge
es
sub
and
or
mov
mov
test
inc
fs
push
push
add
mov
xchg
and
or
cmp
in
and
adc
mov
xor
es
dec
mov
sub
jns
pusha
add
xchg
dec
dec
pop
mov
fcomp
rcl
ss
jbe
push
jnp
shrd
fucom
cmp
pushf
pop
mov
out
jbe
sub
add
jb
cmp
pop
pushf
nop
out
push
cwde
or
and
and
imul
add
rcl
ss
fwait
out
scas
xchg
push
test
add
aaa
cld
cmp
sub
std
sbb
(bad)
out
pop
stos
xor
(bad)
(bad)
out
lock
and
inc
add
out
xlat
int3
int
ins
jmp
inc
or
mov
sbb
or
inc
inc
(bad)
fs
out
pop
daa
mul
lods
sub
into
add
int
call
add
movs
or
inc
jle
gs
leave
add
sub
enter
loopne
out
jns
mov
data16
lock
pop
es
or
retf
sbb
iret
out
add
or
outs
pop
pushf
out
add
es
jb
mov
mov
cld
imul
aam
loop
clc
in
out
sbb
data16
out
mov
test
or
add
icebp
add
in
xchg
cmp
add
enter
out
es
jp
mov
adc
es
mov
in
jge
es
out
jmp
movs
mov
push
mov
ins
ins
inc
mov
out
mov
shl
mov
add
sub
add
push
push
mov
mov
add
push
inc
xor
jae
push
jne
mov
(bad)
mov
inc
js
sub
add
out
shl
es
push
mov
add
pop
lea
adc
es
in
bound
add
sub
sbb
xor
add
inc
pop
fbld
add
pop
jo
out
adc
lds
popf
mov
mov
out
or
es
add
popf
repz
cmps
add
mov
jge
(bad)
out
add
test
jecxz
sub
adc
pop
add
sbb
xchg
mov
test
add
xor
push
out
add
es
add
xlat
mov
out
xchg
lds
es
pop
in
add
idiv
aaa
aaa
hlt
add
shl
int3
aas
cmps
clc
add
mov
add
jb
dec
dec
push
cmp
sbb
add
jmp
mov
scas
or
cmp
cwde
stos
or
mov
cmp
jg
add
cld
cmp
cli
jecxz
ret
int
in
dec
mov
dec
test
out
fwait
add
es
or
add
add
out
mov
mov
cmp
ror
adc
mov
cmps
es
arpl
pop
es
mov
out
cli
inc
inc
mov
sar
jnp
repnz
movntq
mov
xor
inc
sti
adc
cs
push
ffree
(bad)
jmp
mov
arpl
stc
fsub
les
fs
pop
shr
loope
div
add
dec
mov
outs
add
lahf
add
add
mov
xchg
pop
pop
add
or
jns
add
pop
pop
xchg
adc
out
pop
std
test
adc
daa
xor
add
jo
mov
xor
add
sub
outs
call
add
push
add
or
pusha
iret
out
aaa
push
sub
add
out
pop
fcmovbe
loop
add
mov
jne
test
sbb
std
add
out
sub
or
cmp
ret
add
ficomp
add
push
arpl
jne
std
in
pop
add
scas
aaa
lahf
aad
fidivr
cmp
mov
adc
out
popa
dec
jge
or
ret
pushf
mov
or
fisttp
xor
outs
cdq
jmp
xchg
jbe
movs
add
shl
mov
out
mov
fld
push
mov
jl
jno
fidiv
aas
lahf
es
cmp
out
add
gs
xor
sbb
add
dec
out
mov
es
pop
int3
int3
add
not
rol
pop
jp
push
movs
popa
pop
out
aad
xor
in
adc
lock
dec
jnp
push
sbb
xor
repnz
cmp
test
cmc
cli
loopne
loop
mov
or
push
add
movs
or
mov
add
es
add
popa
mov
test
xchg
sbb
in
cmp
pop
jnp
ja
ret
add
xor
mov
mov
enter
add
lea
out
rcr
stc
out
pushf
in
shl
mov
jecxz
cmc
fadd
push
add
push
jmp
test
shl
add
ins
imul
(bad)
pmaddwd
out
mov
mov
push
popf
(bad)
add
repz
es
cvtpi2ps
or
and
inc
out
movs
cmp
fistp
xchg
add
out
rol
sub
and
fidiv
into
add
mov
aad
test
push
es
sub
shl
jmp
add
xchg
jo
jmp
add
xchg
rdmsr
fdiv
push
push
add
out
inc
cmp
push
stc
add
shl
inc
leave
push
or
shl
add
test
outs
cld
inc
dec
add
fwait
call
loopne
loope
enter
xchg
es
sbb
pusha
es
pop
mov
xchg
add
test
cmp
pop
stc
add
and
xchg
mov
push
push
in
idiv
ds
dec
xor
jl
aas
mov
cmp
or
rol
fisttp
cs
add
cmp
xor
pop
out
cli
xchg
xchg
es
mov
test
in
add
out
call
in
add
es
inc
dec
add
sbb
inc
xor
loope
pusha
lea
add
movs
aaa
mov
cmp
inc
dec
mov
loope
mov
xchg
out
shr
mov
outs
outs
cmp
add
out
ss
in
in
and
int
xor
fcomp
push
pusha
and
shl
stos
leave
es
inc
xchg
loopne
xor
or
or
es
movs
(bad)
movs
mov
sub
pop
mov
adc
jge
popf
out
nop
hlt
add
or
shl
in
xchg
clc
pop
jle
in
and
mov
add
(bad)
psrlq
push
pop
and
pop
out
movs
sbb
es
sub
dec
mov
stos
push
jne
add
test
xor
add
or
add
imul
jl
es
test
add
xchg
call
pop
js
ds
movs
jge
add
push
mov
ins
lods
dec
out
cmp
packssdw
dec
adc
jge
retf
mov
(bad)
lea
pop
add
test
xor
dec
and
add
test
fcomp
mov
pop
pop
mov
(bad)
out
int
cmps
es
adc
mov
mov
test
scas
xor
add
lahf
mov
out
inc
sbb
mov
(bad)
(bad)
test
dec
es
pop
sub
push
push
add
inc
xchg
xchg
enter
scas
mov
cmps
xchg
add
stc
sub
mov
mov
push
add
cmp
push
test
xchg
dec
dec
ret
fsubrp
out
mov
mov
clc
out
dec
cmp
dec
mov
mov
push
outs
outs
(bad)
mov
add
xor
sbb
pop
sti
(bad)
(bad)
xchg
retf
lock
bound
add
jp
sub
add
fisubr
pop
add
push
push
cmp
sbb
mov
xor
dec
add
in
movs
imul
pushw
add
int
push
pop
sbb
add
add
leave
mov
mov
push
ja
jb
ja
jmp
es
repnz
xor
es
and
icebp
pop
add
es
(bad)
mov
add
sbb
imul
add
mov
xchg
jnp
imul
adc
es
aam
add
jns
scas
arpl
out
movs
out
add
es
lock
dec
dec
xor
out
test
es
pushf
mov
popf
dec
std
nop
(bad)
(bad)
dec
pusha
push
out
mov
out
mov
out
sahf
push
dec
or
iret
mov
movs
rol
gs
xor
push
push
mov
inc
retf
mov
es
inc
rol
pop
jno
les
out
loopne
js
cdq
add
int3
dec
xchg
lods
xchg
mov
in
ins
mov
or
into
xchg
sub
add
es
xor
add
lea
cmp
and
xchg
out
xchg
add
push
out
inc
cmp
sbb
add
fwait
inc
push
cmp
cmp
(bad)
add
xlat
movs
push
pop
es
dec
jle
mov
ja
mov
inc
inc
mov
out
pop
pop
mov
add
popa
or
sub
add
cmp
pop
cmc
mov
pop
out
out
cmovle
in
out
sar
in
pop
pop
int
or
nop
scas
and
xlat
add
mov
icebp
int3
loop
sbb
out
repnz
lock
mov
or
ins
pop
cmp
ficomp
daa
loopne
add
popf
push
sbb
into
maskmovq
neg
xchg
outs
(bad)
daa
fwait
add
push
loope
out
jbe
mov
mov
mov
iret
out
xchg
adc
movs
fwait
imul
ror
cmp
cs
jns
add
or
lods
lods
pushf
enter
add
dec
dec
fcomp
cmp
retf
out
rcl
es
fsubp
mov
add
es
xor
ja
xor
dec
scas
out
inc
es
mov
xchg
push
rol
cmp
pushf
add
jbe
call
hlt
fs
and
aad
pop
push
mov
out
jb
ds
(bad)
int
add
ficomp
cmp
daa
in
add
jle
repz
out
add
mov
xor
sub
fs
nop
retf
cmp
stos
add
sbb
and
movs
add
push
rol
out
pushf
sbb
inc
into
cmps
cmps
mov
add
mov
es
aad
out
push
dec
clc
or
pop
add
mov
inc
pop
jmp
add
xorps
or
add
xchg
mov
into
jecxz
cmp
cwd
cdq
adc
push
out
add
xlat
cwde
jmp
add
call
sbb
or
xchg
adc
es
add
push
mov
adc
in
add
rcl
(bad)
outs
clc
add
jmp
lahf
(bad)
dec
add
xchg
fst
lods
pop
pop
xor
xchg
and
and
cmp
sti
add
es
out
add
loop
out
es
sbb
fwait
bound
mov
mov
out
adc
xchg
das
es
sbb
add
out
sar
lahf
lahf
cmp
inc
add
test
popa
add
cs
out
adc
add
inc
stos
rcl
imul
out
add
iret
ret
addr16
add
je
out
jmp
push
rcl
or
sbb
movs
test
xchg
inc
dec
clc
out
loope
jp
lods
add
out
in
push
jnp
enter
jno
retf
and
mov
adc
inc
call
iret
cdq
xlat
xlat
jnp
aad
add
pop
js
scas
inc
cmp
out
or
in
jle
out
rol
je
add
out
ret
mov
sti
cmp
sbb
in
out
fcom
add
ss
pusha
push
push
(bad)
push
imul
mov
mov
and
cmp
cmp
add
in
loope
push
shl
daa
sbb
cmp
xor
add
sbb
leave
(bad)
pop
pop
mov
sahf
icebp
arpl
inc
(bad)
nop
(bad)
imul
cmp
mov
xchg
(bad)
(bad)
cli
cwde
push
es
jnp
jmp
arpl
out
sub
push
outs
icebp
xor
(bad)
jge
(bad)
seto
dec
add
pop
adc
push
push
jns
mov
es
loopne
jmp
punpcklwd
out
lods
into
test
add
and
inc
inc
jg
jge
inc
push
xchg
jo
mov
fmul
shl
cmp
cwde
add
jmp
cld
out
push
sub
add
aas
popa
aad
sar
sbb
fadd
pop
and
cmps
xor
cmp
add
adc
bswap
cs
mov
cli
call
loopne
pop
es
outs
das
test
and
mov
add
ror
es
rol
or
test
out
jecxz
xor
fst
sbb
xchg
xchg
jmp
sub
bound
adc
sbb
rcr
out
out
mov
pop
es
pop
mov
aam
out
dec
add
push
pushf
out
int
jmp
in
add
sub
es
inc
sti
sub
mov
dec
add
(bad)
test
loop
mov
out
out
sub
into
into
aas
sbb
es
pop
push
push
call
icebp
cmp
cmp
in
and
out
repz
aad
sbb
add
jl
outs
or
dec
xor
pop
add
(bad)
mov
outs
test
or
add
in
out
push
add
jmp
mov
push
rol
sar
dec
cdq
addr16
pop
jge
add
jmp
enter
mov
es
dec
ret
sub
cmp
in
or
dec
cmp
add
out
jge
ins
retf
cmp
stos
add
(bad)
jae
test
sbb
(bad)
fadd
or
das
or
dec
dec
dec
lods
pop
(bad)
add
(bad)
retf
mov
es
jge
rol
push
scas
leave
leave
out
jnp
sbb
je
add
jmp
(bad)
out
div
in
pop
cmp
mov
mov
xor
out
mov
add
ret
mov
test
pop
std
call
mov
sub
out
jl
and
ja
add
lods
mov
mov
icebp
or
cli
lea
inc
lds
shl
daa
add
loop
sub
add
loope
aaa
xlat
out
(bad)
pop
pop
es
xor
dec
mov
jmp
pusha
sbb
sbb
ret
es
pop
out
add
imul
fdivrp
pop
pop
pop
ins
xor
mov
and
imul
cmp
das
add
out
lock
ficomp
push
bound
adc
inc
inc
out
shl
adc
or
fs
out
int3
pushf
add
out
icebp
(bad)
shl
xor
out
jno
add
jb
or
and
(bad)
(bad)
cmp
mov
pop
mov
out
cs
sub
fadd
add
les
mov
dec
mov
cwde
xor
out
and
mov
mov
or
out
bound
in
mov
jl
hlt
test
out
pop
sbb
loopne
scas
add
pop
push
out
es
xlat
or
or
xor
out
and
add
jo
or
aas
pop
pop
in
repnz
(bad)
mov
out
mov
push
adc
out
imul
add
cmps
xchg
push
out
mov
call
scas
mov
or
jno
mov
pop
inc
inc
dec
aad
out
sbb
xor
push
pop
sahf
(bad)
pop
pop
in
mov
add
mul
shl
test
(bad)
ja
add
mov
loope
push
mov
xor
xchg
add
and
out
mov
cmp
and
es
mov
call
sbb
xchg
mov
add
xor
(bad)
(bad)
xor
out
mov
std
dec
pop
lods
es
pop
cmps
mov
xor
add
popf
jg
mov
ret
dec
ja
pushf
cmp
out
add
cmp
and
adc
ret
ret
add
(bad)
out
push
in
cld
cld
in
push
out
pop
dec
sahf
pop
pop
sub
add
push
push
sbb
imul
sti
add
jmp
and
pop
push
add
jecxz
sahf
push
out
xchg
mov
push
out
lahf
push
test
xchg
xor
retf
cmp
pop
pop
fiadd
pop
sub
es
lods
ins
mov
xchg
adc
ja
es
stos
mov
sbb
ds
jne
mov
jnp
mov
es
add
dec
sub
imul
stc
cmp
out
push
inc
jle
leave
jbe
ss
pop
(bad)
rcr
jne
sbb
mov
add
add
out
ror
iret
iret
fld
jb
mov
repnz
dec
scas
and
ficomp
xchg
ds
add
out
jb
clc
es
add
dec
dec
jns
popa
lods
mov
jmp
fiadd
lea
mov
xor
test
sbb
mov
mov
dec
movs
and
rol
adc
and
jmp
sbb
es
movs
jl
repz
xchg
jmp
pop
push
test
sar
inc
mov
push
js
add
frstor
pop
out
xor
add
aaa
cmp
adc
add
sbb
push
xchg
jae
add
loop
push
es
sahf
lahf
lahf
add
imul
fcmovu
pop
into
es
std
xchg
push
inc
inc
mov
lods
push
sbb
inc
xchg
adc
jge
in
les
shufps
es
loopne
int
ins
jl
add
and
loope
out
push
call
jge
shr
xor
out
fidivr
movs
mov
inc
mov
adc
add
push
repz
sub
and
jbe
cmp
xchg
xchg
mov
gs
pop
dec
cld
outs
ret
cs
mov
jecxz
or
dec
out
(bad)
add
dec
pop
dec
dec
push
add
out
add
xlat
cmp
cmc
push
add
push
lock
(bad)
daa
mov
lahf
es
retf
add
and
xor
in
rcr
add
mov
fcomi
imul
mov
jg
jae
js
ds
sbb
pushf
test
mov
add
call
shl
add
cmp
neg
out
test
bound
push
es
aam
das
cmps
and
inc
hlt
out
jle
add
and
mov
mov
push
mov
icebp
add
(bad)
pushf
out
add
(bad)
sbb
mov
add
xchg
xchg
or
test
std
jg
add
out
out
fbld
add
push
mov
lea
mov
mov
lahf
loope
call
sub
lds
pop
retf
mov
sbb
pfsubr
out
mov
call
aas
es
inc
in
pop
scas
add
lods
movs
push
es
fdivr
pop
add
mov
out
and
pop
add
in
sahf
es
repnz
jne
movs
lds
fcom
(bad)
out
mov
add
cmc
(bad)
jmp
test
or
add
ins
jl
mov
call
sahf
push
xor
cdq
mov
and
jp
push
out
fiadd
xlat
jb
add
xchg
es
add
sub
cmp
inc
pop
pop
add
cli
cmp
out
sub
jmp
out
sbb
pusha
in
fcmovnu
add
fidivr
div
in
add
es
push
add
jecxz
pop
mov
mov
add
ds
mov
fild
aam
ret
cmps
lods
es
add
fisubr
int
es
dec
dec
push
mov
add
ja
sub
inc
outs
add
sahf
mov
es
adc
push
mov
out
cmps
add
dec
test
fsub
adc
(bad)
jmp
out
jnp
mul
add
(bad)
jl
or
pop
push
mov
bnd
xchg
inc
in
out
add
loope
out
ret
verr
js
rol
xchg
xchg
mov
adc
fsub
das
add
and
add
push
ins
dec
jp
neg
(bad)
pop
pop
push
sub
gs
jmp
cmc
xor
jg
add
add
out
movs
arpl
retf
pop
sbb
and
les
test
fnstcw
pop
mov
pop
cmp
stc
or
popf
(bad)
out
xor
xchg
test
add
ss
xor
mov
test
mov
ins
add
int3
pop
push
mov
cmp
adc
jl
es
dec
adc
call
je
add
bnd
test
pusha
retf
hlt
hlt
add
jbe
fisttp
icebp
mov
dec
mov
add
in
imul
add
pusha
push
scas
int3
es
mov
xor
icebp
xor
adc
pop
jae
out
jl
shl
push
push
dec
push
push
pop
sar
es
mov
daa
dec
es
add
cmp
mov
rol
push
adc
jl
not
shl
add
ins
stos
stos
hlt
add
mov
out
or
inc
inc
aaa
mov
(bad)
xlat
xlat
add
out
xor
cmps
into
pop
out
push
enter
xor
and
out
mov
fild
mov
mov
out
jecxz
xchg
out
adc
lods
ja
dec
(bad)
add
xor
xchg
repz
xchg
add
es
loope
add
retf
sub
or
rcl
add
cwde
cwde
fstp
outs
and
dec
add
add
pusha
mov
add
cmp
shl
mov
cmp
dec
dec
cmp
ret
jge
pop
pop
ja
das
es
cmp
inc
es
ret
or
pop
cmc
pop
es
cmp
vpsllw
mov
fld
xchg
add
out
add
mov
out
repz
push
or
adc
out
xchg
pop
es
or
cmc
xchg
sub
pop
movs
xor
shl
idiv
pop
ret
int
pop
pusha
out
xchg
add
out
cdq
mov
jne
out
and
pusha
repz
out
or
es
(bad)
inc
add
cs
push
(bad)
add
cmp
nop
and
add
int
cmc
adc
dec
dec
jge
push
fwait
or
mov
iret
iret
icebp
mov
(bad)
(bad)
cld
jmp
out
and
shl
stos
rol
push
adc
push
mov
adc
enter
out
push
or
es
sub
fwait
std
std
mov
daa
xor
mov
mov
es
retf
sub
add
adc
and
out
aam
fisub
jmp
add
jno
es
pop
loope
(bad)
jne
add
rcr
into
jmp
inc
cmp
xlat
sti
sti
add
(bad)
rcr
out
fadd
inc
inc
fs
add
(bad)
cmp
nop
mov
xor
add
shl
sub
add
fs
mov
mov
bound
add
inc
outs
ds
in
push
call
out
and
es
xor
add
es
jno
xchg
dec
dec
(bad)
arpl
es
daa
into
mov
imul
or
dec
cli
cli
add
out
scas
and
xchg
xchg
inc
cmp
out
sbb
repz
cmps
call
add
in
(bad)
cmps
out
retf
lods
inc
es
pop
mov
mov
xor
xchg
dec
es
imul
aas
ret
repnz
test
fs
xor
es
push
test
cmps
in
add
jmp
mov
push
repz
cmp
out
hlt
mov
add
mov
addr16
iret
lea
add
(bad)
out
jns
lahf
or
add
repz
fsubr
fs
mov
mov
dec
jge
add
mov
(bad)
(bad)
ret
stc
inc
inc
push
jo
out
dec
nop
pop
es
pop
movs
dec
dec
ficom
retf
xchg
out
fadd
nop
dec
dec
fwait
inc
test
sbb
adc
lds
xchg
sub
add
out
sbb
sbb
(bad)
(bad)
(bad)
pop
test
and
or
push
mov
xor
pusha
shl
cli
cli
dec
shl
ror
es
add
jae
cmc
push
mov
add
adc
cmp
add
hlt
hlt
mov
into
add
mov
imul
and
ror
in
xor
cmp
and
pop
mov
out
add
fisub
push
mov
add
add
push
push
add
scas
out
(bad)
push
es
xchg
or
dec
out
imul
or
push
in
es
xor
es
cmp
push
xchg
scas
pop
pop
add
out
and
enter
ins
ins
hlt
sti
lods
es
pop
xchg
rcl
push
jmp
push
push
and
vcvtdq2pd
mov
mov
push
out
xor
aad
out
call
jp
add
ins
ins
ds
(bad)
scas
push
fcmovnu
jge
shl
fnsave
mov
inc
out
ins
int
es
xchg
sbb
fcmovu
cmp
xchg
es
fistp
lea
cld
das
(bad)
xor
loopne
add
add
out
movs
sti
cmp
fwait
jle
out
shr
mov
ins
add
adc
es
add
mov
add
js
or
mov
div
clc
(bad)
hlt
aas
cwde
out
mov
inc
shr
cmps
cmps
push
pushf
clc
adc
mov
(bad)
out
ds
mov
cli
jecxz
adc
cwde
sbb
mov
sbb
xchg
cmp
mov
test
sub
add
es
sbb
dec
lods
lods
pusha
jge
pop
pop
xchg
cmp
sub
outs
sbb
shl
retf
sti
adc
xor
es
out
add
in
mul
inc
inc
inc
fdiv
es
test
and
es
push
sar
add
cmp
or
cld
es
into
fbld
add
in
mov
imul
int
out
pop
lods
sub
pop
add
out
shl
adc
jns
sub
mov
cmp
(bad)
into
and
jge
out
hlt
or
push
ja
out
sar
sbb
xor
mov
es
pop
sub
and
sbb
(bad)
add
mov
jb
inc
les
cli
and
mov
or
adc
out
mov
jno
movs
sbb
xchg
add
jmp
cmps
mov
mov
je
inc
inc
std
adc
jle
ins
out
push
push
jns
jne
xor
add
add
adc
outs
jnp
jno
ins
ss
pop
inc
es
cmp
ja
inc
cmp
out
push
pop
add
sbb
shr
mov
pop
out
(bad)
cdq
es
inc
add
adc
lods
sub
fstp
pop
out
lock
out
mov
inc
pop
imul
inc
rcl
add
es
add
mov
and
jnp
rcl
bound
adc
stc
(bad)
pop
pop
fmul
rcr
jle
out
sbb
or
jp
sbb
mov
add
retf
es
push
addr16
sub
mov
sar
out
inc
and
add
mov
enter
cmp
retf
lds
iret
mov
adc
les
int
arpl
add
out
pop
sub
imul
jmp
xor
xchg
add
push
es
mov
xor
inc
push
popf
sbb
ins
add
int
push
mov
adc
mov
pop
xor
out
test
sahf
rcr
es
mov
out
leave
and
xchg
add
mov
inc
mov
out
add
imul
inc
out
cmp
pop
jg
mov
and
xor
dec
es
add
cld
cld
push
add
add
mov
cmp
pop
retf
xor
enter
je
and
xor
aaa
add
add
movnti
cmc
out
inc
add
loopne
dec
mov
out
(bad)
es
push
xor
add
out
sub
fldenv
cmp
add
es
mov
or
(bad)
adc
pusha
iret
adc
mov
mov
mov
sub
mov
out
add
adc
and
push
test
add
pop
dec
repz
xchg
mov
test
pushf
and
inc
add
adc
mov
(bad)
jmp
sub
add
(bad)
dec
es
mov
push
push
xchg
mov
add
jmp
add
ficomp
add
and
cmp
add
lea
mov
out
and
loop
out
push
loope
call
add
sbb
out
pop
push
hlt
es
push
test
sub
and
xchg
in
add
mov
out
aas
add
push
push
out
xchg
out
jp
inc
cmp
cwde
sbb
jae
push
lock
mov
add
jnp
mov
pop
loopne
(bad)
inc
aad
out
pop
sub
push
push
mov
xchg
xchg
xchg
inc
js
out
inc
pop
sbb
mov
imul
xchg
out
popa
adc
loopne
out
add
dec
fisttp
bound
add
mov
cwde
enter
sahf
add
xor
jo
repz
les
mov
ror
lods
es
movs
fsubr
pop
es
xor
sub
add
sub
lock
jmp
arpl
or
es
cmp
mov
daa
out
pop
mov
adc
call
cmp
cld
mov
jmp
add
std
faddp
fwait
test
add
push
sub
es
inc
add
pop
add
es
mov
loop
sub
sub
loop
fstp
add
sub
leave
leave
inc
stos
loope
aad
pop
inc
add
(bad)
stc
out
retf
xchg
xchg
call
jecxz
pop
rcl
fisub
ret
pop
int3
shl
inc
mov
add
loope
lods
lods
rcr
cmp
scas
addr16
pop
and
mov
stc
push
sub
(bad)
sahf
arpl
es
cmp
outs
hlt
xchg
xchg
sub
pop
cwde
lods
out
fdiv
mov
mov
mov
out
sbb
sbb
loopne
mov
mov
jge
fmul
stos
pusha
pusha
sbb
xlat
fsub
mov
(bad)
ud1
test
jno
mov
jnp
push
and
sbb
mov
dec
out
inc
mov
add
mov
cdq
enter
and
jg
call
arpl
repz
sub
sub
push
int3
int3
leave
cmps
add
test
mov
cmp
xchg
repnz
iret
aas
pop
dec
out
mov
add
mov
jns
inc
outs
outs
jo
add
out
iret
add
cmp
cmp
push
mov
je
clc
sub
push
mov
push
mov
sub
nop
add
add
jmp
lods
add
leave
es
cmps
mov
jbe
sbb
xchg
xchg
pop
cli
and
mov
imul
sar
sub
loope
pop
pusha
and
int3
xor
loopne
out
push
add
loop
mov
shl
push
mov
arpl
out
mov
jns
add
cs
inc
les
aam
out
and
push
push
repz
mov
inc
add
in
addr16
add
in
jo
jne
sub
cli
and
int3
pop
cmp
mov
mov
int3
add
add
pop
out
adc
js
mov
add
inc
mov
lock
xlat
and
add
jp
fwait
out
aad
cld
add
fld
mov
cmp
in
call
mov
sbb
jecxz
inc
enter
into
pop
repz
imul
add
(bad)
out
mov
add
out
sbb
push
push
inc
pusha
nop
out
add
or
jmp
jecxz
push
pop
pop
inc
push
add
add
jg
mov
add
mov
es
push
mov
es
sbb
xor
mov
es
movs
or
dec
es
hlt
inc
jne
push
sti
add
sub
into
xchg
add
cli
nop
push
je
(bad)
movs
sysenter
add
mov
(bad)
xor
xor
dec
dec
jmp
or
pushf
dec
cli
aas
jge
adc
out
retf
(bad)
lock
std
std
or
dec
lods
clc
out
add
out
sub
mov
cmp
in
add
jmp
push
inc
cmp
es
dec
pop
sbb
in
add
lods
aaa
aaa
fdiv
add
dec
dec
repz
addr16
ins
and
ins
jne
out
mov
sub
and
cwde
jns
add
jnp
aam
mov
add
mov
rol
in
adc
out
sub
shl
mov
mov
jg
jno
mov
mov
sti
sti
fs
push
jmp
mul
or
ret
pop
(bad)
loopne
std
xchg
xchg
cmp
popa
out
xchg
mov
adc
out
in
add
lds
es
rol
push
dec
dec
mov
and
jmp
add
out
add
jmp
cvtps2pi
es
pusha
in
jl
or
ret
(bad)
mov
add
and
loop
push
cmps
jae
fcom
(bad)
adc
out
in
int3
add
cmp
out
mov
inc
es
add
dec
mov
and
mov
clc
clc
sbb
add
js
ret
int3
add
adc
dec
out
lods
loop
add
sbb
ins
(bad)
mov
mov
es
push
lods
add
mov
or
enter
inc
(bad)
rcl
jae
out
out
add
xor
retf
cmps
out
shr
je
add
jne
adc
(bad)
pop
sar
out
lahf
sbb
jle
out
and
jns
pop
pop
xor
and
out
ror
add
in
adc
out
call
inc
and
test
es
or
gs
data16
nop
imul
adc
sbb
or
mov
pop
jae
add
add
pop
ja
cmovnp
fcmovu
ret
rcl
inc
out
add
int
out
aam
xlat
adc
sbb
cmc
out
xor
xchg
movs
xchg
xchg
or
xor
rol
call
mov
popa
add
in
add
push
add
jmp
add
mov
les
mov
add
clc
outs
outs
or
popa
add
sbb
mov
sbb
cdq
(bad)
out
lods
adc
mov
mov
dec
dec
sar
out
add
cmp
aam
in
iret
scas
out
xchg
inc
hlt
es
push
jo
sub
jns
(bad)
add
dec
retf
jge
mov
jne
mov
mov
clc
add
cli
rcl
es
inc
cwde
and
loop
add
out
bound
add
fwait
jae
arpl
fdiv
pop
nop
ja
adc
add
lods
lods
rcr
push
sub
sbb
sbb
mov
es
in
xor
xor
adc
out
xchg
pop
repz
(bad)
dec
aam
sbb
js
ins
inc
xchg
xchg
movs
cmp
add
scas
leave
jl
(bad)
call
pop
jne
es
aas
sbb
xchg
fwait
mov
(bad)
mov
sbb
out
add
push
es
daa
sbb
call
add
repnz
jb
inc
sbb
inc
es
shl
es
test
xor
(bad)
(bad)
imul
data16
pop
pop
cmps
jno
out
outs
nop
xchg
mov
dec
retf
es
aam
add
jo
out
mov
jecxz
ds
nop
dec
mov
xchg
xchg
jle
leave
out
cmp
es
push
movs
lods
pop
pop
sbb
inc
repz
inc
mov
jmp
clc
and
repnz
push
out
cmp
repz
inc
inc
jle
add
into
ins
das
out
xchg
inc
sti
es
add
pushf
pushf
inc
out
mov
or
xlat
cmp
out
push
(bad)
test
cmps
out
adc
out
add
shl
movs
pop
xor
(bad)
fisub
(bad)
out
mov
movs
out
nop
push
sbb
inc
out
inc
retf
sar
pop
add
out
dec
mov
aaa
aaa
rcr
add
rol
xor
cmp
into
in
jecxz
ins
xchg
out
add
es
fidiv
int
add
pop
pop
outs
pop
jmp
js
pusha
pusha
aas
fnstcw
jne
add
popw
out
or
cmps
es
repnz
out
jge
dec
dec
cmc
jecxz
out
pop
push
xchg
jbe
dec
mov
loopne
cld
add
sub
out
cmp
mov
inc
inc
jge
scas
es
jbe
mov
xor
push
jmp
ds
out
add
add
add
inc
inc
aaa
cmp
out
fdivr
and
out
push
and
cmc
cmc
enter
(bad)
movs
es
jbe
retf
retf
arpl
jne
pop
add
imul
jb
popa
fadd
jo
loopne
jmp
pop
dec
mov
cmp
mov
cmp
loopne
arpl
out
add
adc
jae
add
cmp
in
iret
int
xchg
outs
icebp
add
adc
shl
jp
scas
es
(bad)
add
mov
es
stc
jge
push
push
add
mov
dec
out
cmp
fld
xor
xchg
xchg
add
ss
dec
dec
out
sub
es
mov
loop
in
add
xchg
es
sub
in
std
out
push
inc
add
jle
popa
and
add
jnp
xchg
shl
sbb
or
cmp
out
scas
xor
jp
lods
lods
add
sub
stc
pop
mov
jb
cmp
into
pusha
lea
cmp
ins
loope
cmp
icebp
shl
shr
iret
es
jb
out
mov
mov
sbb
psrlq
ss
rol
loope
mov
sub
mov
mov
add
jmp
out
cmp
adc
inc
out
mov
es
add
ss
jp
dec
(bad)
in
out
push
push
dec
es
mov
leave
verr
scas
jae
dec
fwait
add
mov
out
adc
pop
es
(bad)
xchg
push
fwait
fwait
(bad)
adc
lds
shr
dec
add
sbb
add
enter
out
imul
add
je
inc
mov
hlt
or
inc
xor
xlat
gs
out
mov
cld
jo
in
jmp
add
or
imul
cmps
inc
cmc
sahf
sahf
mov
retf
repnz
nop
out
test
and
or
out
cdq
add
fistp
mov
mov
out
add
lods
xchg
fs
add
sahf
xor
daa
daa
pop
stos
add
test
cmc
out
test
arpl
outs
sub
add
jo
int3
es
inc
inc
and
add
inc
cmps
ins
ins
outs
add
movs
mov
fcmovnu
loopne
in
inc
fnstsw
out
mov
mov
arpl
and
rcl
shl
or
test
sbb
lahf
inc
(bad)
jle
gs
pop
out
ins
mov
es
cmp
jnp
push
pusha
iret
cmc
cmc
lods
or
inc
rcl
out
cwde
es
jns
push
out
out
(bad)
fisubr
loopne
js
out
in
nop
int
push
lock
mov
aam
out
mov
jle
sbb
push
pop
ss
add
mov
popf
add
movs
movs
(bad)
pop
out
jmp
mov
lahf
add
pushf
into
(bad)
push
es
loope
in
add
sti
xchg
xchg
ss
out
add
pop
pop
pop
mov
add
(bad)
repz
(bad)
cmp
sbb
aad
jg
add
jae
mov
xchg
pusha
(bad)
jg
scas
(bad)
loope
loop
mov
add
test
sbb
shl
or
jge
ins
ins
popf
inc
add
add
xchg
dec
mov
and
leave
add
cdq
add
and
setbe
es
sub
push
rcl
and
loope
out
jns
inc
pop
pop
pop
add
dec
jmp
and
in
push
cli
jno
adc
xchg
lock
add
and
es
jo
add
adc
sbb
inc
mov
int
sub
jmp
adc
out
pop
add
es
cld
js
scas
scas
push
mov
es
in
sbb
mov
inc
mov
mov
jnp
jo
fiadd
mov
daa
(bad)
xchg
mov
add
fnstenv
arpl
pop
hlt
xchg
out
rol
ss
ret
add
or
sub
add
cmp
rcl
inc
cdq
jae
es
test
in
in
loopne
lods
es
fdiv
push
add
imul
jmp
add
fs
aad
shl
xchg
push
push
inc
add
mov
xchg
out
es
mov
add
(bad)
rol
mov
out
stc
push
es
add
sbb
out
mov
jge
or
dec
add
jns
gs
and
sub
imul
push
out
sbb
enter
or
in
hlt
cmp
out
mov
push
add
out
scas
cmp
pop
dec
mov
mov
mov
or
in
adc
jmp
sbb
stc
stos
stos
mov
dec
es
rol
(bad)
es
cli
sub
je
call
push
sub
pop
rcr
in
add
xlat
sbb
mov
lds
xchg
aas
aas
pop
dec
pop
add
sub
es
pushf
movs
fs
jp
add
repnz
sti
sti
add
out
popf
add
mov
mov
add
(bad)
out
sbb
mov
loopne
inc
(bad)
cwde
shl
mov
mov
add
lock
sub
(bad)
subps
inc
out
outs
cmp
in
mov
push
jmp
idiv
mov
push
lock
out
sub
ins
cld
repnz
stc
xchg
cld
cs
retf
dec
int3
add
xor
or
adc
add
mov
cld
inc
add
cli
es
cmp
add
aas
push
push
jae
pusha
out
in
ss
add
lahf
rol
sysenter
ret
adc
xor
add
inc
inc
sub
add
mov
lods
es
mov
data16
mov
cmp
retf
test
lock
mul
ror
pusha
out
mov
add
out
jb
mov
push
scas
out
out
cmp
mov
adc
repnz
pop
or
out
xor
fmul
cmpps
out
mov
sbb
add
inc
push
jmp
outs
outs
sti
add
stos
shr
ret
jecxz
xor
push
push
into
push
sub
pop
js
xor
stc
cmc
cmc
push
aaa
ins
out
(bad)
imul
scas
out
lods
jb
fdivr
jo
fld
addr16
push
add
out
push
pop
fsub
add
fstp
cmp
sub
ret
sbb
arpl
or
lock
fucomp
add
dec
and
out
and
pop
mov
adc
daa
push
es
and
sahf
cmp
jae
outs
adc
mov
push
add
(bad)
setb
push
push
xchg
or
dec
test
repz
sub
outs
add
scas
scas
pop
or
out
fs
adc
aas
and
push
sbb
out
push
mov
jae
or
into
or
inc
daa
daa
xor
(bad)
out
jo
iret
pop
pop
dec
add
xchg
ret
sbb
sti
pop
es
inc
test
adc
xor
inc
jmp
call
xchg
imul
jae
pop
out
and
arpl
add
retf
retf
sbb
jns
push
mov
into
into
ror
add
inc
data16
push
add
nop
nop
call
ja
sar
cmps
test
add
stos
add
hlt
test
mov
clc
add
xor
xchg
rcl
lock
or
int3
cmp
das
push
push
pop
push
sar
add
pop
fs
add
and
arpl
es
mov
ss
inc
inc
mov
cmp
xchg
cmp
add
ins
xor
xor
es
dec
xchg
xchg
nop
pushf
jo
xor
imul
out
fistp
es
push
js
add
neg
jmp
add
add
out
adc
jp
rcr
mov
add
xchg
pop
or
imul
push
scas
mov
(bad)
mov
test
cwde
xlat
sbb
inc
in
dec
dec
mov
sub
add
sbb
mov
stos
stos
mov
movs
add
addr16
push
bound
jp
xchg
lock
in
add
aaa
aaa
dec
leave
dec
out
jae
jno
rcl
jp
repz
inc
cmp
add
ficom
inc
es
push
and
mov
adc
add
and
hlt
hlt
loop
cmp
dec
loop
add
or
mov
retf
add
jae
jl
mov
xor
jg
and
ds
(bad)
mov
in
mov
push
pop
sub
(bad)
mov
pop
cmps
mov
mov
add
lock
hlt
clc
ficom
sbb
fs
mov
mov
mov
inc
outs
outs
pop
mov
sbb
jnp
imul
repz
ret
push
jmp
pop
adc
inc
add
adc
pop
addr16
retf
inc
pop
clc
sbb
adc
cmp
(bad)
stc
stc
inc
mov
out
push
cld
and
(bad)
out
mov
add
push
es
shl
cmps
pop
pop
fist
out
mov
hlt
es
and
out
out
xor
aam
push
in
xchg
ds
outs
xchg
jmp
add
loopne
scas
scas
xor
dec
std
add
dec
dec
adc
out
xor
jnp
out
pop
je
mov
es
add
push
out
data16
rol
xor
rol
punpckhwd
mov
add
es
xor
hlt
add
push
gs
dec
inc
xlat
sahf
fcmovnu
outs
fmul
out
push
pop
jno
jmp
cwde
ja
ds
outs
test
je
push
scas
out
inc
cmp
stc
add
mov
sbb
es
(bad)
out
and
out
rcr
inc
test
xor
out
out
or
ds
fwait
cmp
ja
xor
out
pop
or
pop
cmp
cwde
mov
test
out
pop
jge
sbb
mov
push
add
sbb
inc
(bad)
out
xchg
add
add
int
and
jns
nop
es
add
rep
ins
sub
es
scas
xchg
xor
jmp
dec
stc
or
jb
test
stos
scas
es
dec
add
es
mov
push
add
mov
dec
es
fs
mov
or
std
add
adc
mov
add
popf
push
mov
mov
and
repz
xchg
adc
fisttp
ret
sub
popa
and
sub
pop
adc
xor
out
xchg
dec
lahf
pop
pop
mov
sbb
fadd
test
js
or
and
out
add
sub
jb
aas
lahf
iret
iret
aas
scas
shl
add
jnp
es
jle
add
shl
es
shr
pop
add
sub
sub
inc
scas
cmp
sub
out
mov
ret
sbb
xor
popf
mov
or
add
shl
iret
ret
ret
or
mov
mov
mov
sbb
jns
pop
repnz
sub
shl
push
out
or
in
pop
pop
(bad)
jb
out
mul
test
out
add
into
into
pop
mov
add
ins
sti
sti
mov
add
cmp
(bad)
(bad)
in
cs
push
pop
out
es
shr
mov
es
mov
push
pop
pop
mov
push
mov
es
cmc
pusha
jecxz
cmp
cmp
test
out
xor
in
ss
repnz
xchg
cs
es
jecxz
inc
cmp
hlt
pop
add
pop
jb
mov
and
mov
iret
add
repnz
in
xchg
dec
inc
add
xor
cmp
adc
cwde
sub
cmp
out
add
outs
mov
or
mov
gs
shl
add
and
push
addr16
std
std
js
mov
jbe
test
add
(bad)
xchg
icebp
rcr
lds
add
mov
in
and
mov
pop
jne
ins
add
or
fwait
test
stc
sbb
inc
inc
pusha
adc
out
js
ja
mov
imul
jmp
out
in
(bad)
movs
ja
rcr
lds
out
popf
in
pop
pop
mov
pushf
xor
pop
adc
mov
aaa
test
add
mov
out
add
pop
out
jne
mov
mov
call
jnp
add
out
scas
jnp
mov
and
add
mov
movs
pop
ss
std
test
xchg
xchg
mov
repz
adc
add
call
cmp
pushf
iret
in
xchg
xchg
add
aad
out
mov
lods
mov
jno
test
es
cmc
sub
add
es
cmp
push
cmp
mov
mov
add
cld
popa
and
mov
es
fcomp
xor
add
out
or
into
sqrtps
rol
mov
icebp
add
aad
cmp
bound
add
pop
adc
inc
dec
pop
ffreep
rol
leave
out
push
mov
add
jle
jb
dec
out
mov
xlat
add
std
mov
mov
aam
repz
sub
stc
mov
lods
jns
jnp
add
dec
dec
fdivr
mov
stos
aam
loope
add
add
sub
add
sbb
lods
out
xchg
add
frstor
add
add
idiv
inc
aas
(bad)
les
and
cmps
adc
pop
call
sbb
out
out
add
out
out
mov
ins
out
inc
dec
pop
xchg
mov
and
adc
mov
sbb
pop
in
(bad)
fsubr
fstp
rcr
es
shl
inc
inc
xchg
pushf
inc
out
push
or
es
add
cld
xchg
ret
ret
push
xor
or
psrlw
clc
mov
add
adc
or
jle
jns
popa
fiadd
mov
scas
sub
cmp
mov
fstp
out
pop
jecxz
es
inc
sbb
push
lods
gs
mov
int
mov
loopne
movs
add
jne
push
adc
add
movs
out
cmp
dec
add
adc
xchg
cli
ins
(bad)
out
add
pop
es
inc
js
mov
aas
mov
or
or
add
or
jg
out
sbb
les
ret
cmps
ds
dec
cmp
mov
add
jg
out
dec
push
add
mul
xchg
test
add
fnstcw
cld
xchg
sub
es
test
and
es
rcr
or
ins
add
push
out
or
pop
es
sub
push
ja
adc
mov
imul
(bad)
aam
sbb
add
out
fbstp
push
es
and
mov
pop
sub
jge
popa
jae
out
inc
xor
jmp
sbb
mov
iret
ror
lods
mov
ss
xchg
add
out
addr16
sbb
bswap
out
xor
push
js
fwait
fwait
add
cmp
push
and
mov
out
int
mov
add
mov
xchg
adc
fstp
int3
out
loopne
or
push
bound
pop
ins
ins
mov
add
jmp
ret
xchg
out
loop
sbb
add
mov
and
cli
cmp
mov
es
pop
xor
es
push
out
cmp
fcmovu
add
pop
out
xor
mov
pop
out
int
mov
xor
mov
cmc
mov
(bad)
dec
pop
mov
out
xchg
scas
sbb
jb
cmp
addr16
mov
pop
jge
ss
out
mov
pop
es
add
and
cmps
add
pop
icebp
mov
es
dec
sbb
push
sti
sti
inc
loope
out
fdiv
call
je
mov
es
sbb
aaa
add
and
(bad)
jo
adc
out
cmp
jecxz
add
and
add
dec
popf
xor
and
stc
add
test
and
addr16
pop
out
push
mov
and
rcl
or
movs
leave
movs
xchg
fstp
pop
mov
es
push
ret
ins
xchg
jmp
add
pop
mov
fild
xchg
es
loop
add
es
pusha
mov
mov
nop
or
and
(bad)
sbb
retf
fadd
aas
(bad)
jns
movs
cmp
adc
mov
mov
jb
in
mov
out
pop
loope
push
gs
and
and
nop
pop
add
mov
into
dec
dec
pushf
bound
add
out
jo
mov
and
in
sub
pop
add
mov
pop
es
cmp
div
xchg
and
xor
mov
(bad)
cmps
inc
lock
fiadd
out
add
xor
sbb
push
push
xor
xchg
xchg
dec
call
imul
out
adc
cmp
jb
pop
mov
ds
xchg
or
bnd
sbb
(bad)
es
push
jecxz
mov
es
movs
push
xor
test
inc
scas
ds
es
fnstenv
sub
out
ins
mov
inc
add
and
mov
jae
mov
or
inc
es
push
adc
pop
fsub
mov
pop
and
in
and
add
sti
add
es
hlt
call
pop
pop
add
ja
add
xchg
add
out
mov
jo
add
mov
fidiv
arpl
es
add
or
adc
add
pop
int
popa
es
add
stos
cli
xchg
jp
add
jns
push
aad
or
in
add
movs
jmp
stos
div
sub
pop
imul
inc
out
(bad)
aas
shl
call
add
mov
or
ds
mov
adc
es
cmp
dec
mov
cdq
pop
adc
data16
fnsave
xchg
es
add
(bad)
pop
pop
out
push
jns
es
sub
aaa
or
pop
jmp
pop
add
adc
das
sub
and
out
xchg
jg
pushf
pushf
mov
mov
mov
lock
push
rcl
data16
or
or
inc
nop
ds
out
scas
xchg
clc
aam
and
stos
out
add
or
adc
mov
jbe
cmp
out
in
add
pop
cmp
es
ins
and
inc
fisub
(bad)
clc
push
pop
pop
xchg
ds
out
xor
add
adc
sub
add
out
adc
jg
add
(bad)
hlt
hlt
add
(bad)
out
aas
cmc
jmp
inc
out
adc
pusha
rcl
add
sahf
out
into
aam
es
ss
jg
call
es
jae
clc
clc
fiadd
test
mov
cmps
cld
cld
mov
aad
fldenv
scas
jg
fiadd
mov
inc
cdq
icebp
out
jns
add
inc
xor
jo
add
sub
gs
es
add
adc
xlat
cmp
sub
adc
push
mov
enter
mov
lods
lods
and
mov
mov
cdq
cmp
or
inc
lock
retf
loope
xchg
inc
adc
shl
out
cmp
mov
repz
lods
add
stos
add
xor
cmp
xor
mov
out
fiadd
lea
imul
xchg
xchg
mov
and
out
inc
(bad)
jmp
aas
(bad)
jnp
es
push
scas
loopne
rol
lds
xor
inc
lahf
add
lock
out
inc
stc
cmp
cmp
lea
sahf
cmp
inc
jae
out
movs
push
sbb
nop
out
xor
add
push
fiadd
add
imul
add
push
inc
inc
test
das
ror
mov
push
shr
xchg
out
cmp
frstor
(bad)
push
pop
push
mov
add
cs
jmp
icebp
cmp
div
add
shl
out
push
and
push
mov
add
push
push
out
jne
stos
xchg
push
pavgusb
pop
cs
fsub
add
push
jle
jecxz
int3
cmc
out
add
es
test
push
push
sbb
aas
popf
mov
es
add
pop
pop
ret
xchg
adc
mov
bound
clc
jge
out
lock
cs
dec
add
in
push
cld
es
push
lock
add
dec
mov
jp
ret
add
leave
pop
xlat
es
repz
es
add
(bad)
mov
pop
adc
out
fcmovb
mov
rol
add
pop
adc
outs
jmp
popa
fcmovu
xchg
add
mov
add
es
out
mul
iret
div
hlt
xchg
mov
dec
enter
or
out
sbb
rcr
add
in
mov
daa
es
mov
ins
pop
es
add
dec
xchg
xchg
inc
jge
mov
movs
jnp
int3
cmps
mov
popa
or
int
adc
pop
add
shl
cdq
js
jns
xchg
push
add
push
loopne
out
ud2
sub
lea
add
out
in
out
pop
dec
(bad)
es
xor
(bad)
add
ret
inc
inc
cmp
lea
(bad)
js
push
repnz
fadd
mov
adc
(bad)
sub
shl
jmp
sub
jae
mov
aaa
cmp
out
std
mov
jle
add
xchg
je
fadd
scas
iret
sbb
inc
popa
popa
ret
mov
out
(bad)
pop
call
inc
add
push
xchg
jmp
pop
gs
movs
fld
push
lods
mov
mov
cmp
push
leave
in
cwde
mov
enter
mov
test
jmp
out
jl
xchg
mov
ror
out
cs
xor
sub
pop
mov
fnstsw
push
add
call
cmp
movs
es
clc
fdiv
add
mov
mov
xchg
fisub
adc
and
pop
push
movs
rol
in
jecxz
pusha
adc
es
fild
aaa
aaa
pop
int3
xchg
or
rol
pushf
sub
es
out
fstp
and
(bad)
push
xchg
mov
pop
out
or
inc
inc
inc
push
add
je
cmp
shl
cmp
push
push
push
sahf
add
(bad)
fisubr
imul
paddq
mov
rol
mov
mov
push
and
scas
loop
out
test
dec
ins
xchg
xchg
add
adc
jbe
add
es
outs
loop
sub
xchg
jo
out
xor
lods
mov
mov
dec
xchg
out
add
sar
in
xor
mov
retf
mov
dec
xor
push
inc
inc
pop
sar
out
fwait
js
add
dec
xor
js
ret
(bad)
(bad)
add
xchg
or
jbe
cmps
add
out
mov
fnstcw
cmp
push
mov
xchg
fild
add
fstp
dec
stos
stos
sbb
movs
inc
adc
lock
es
jl
add
mov
rol
cli
call
in
add
mov
ins
sub
and
dec
imul
jae
add
or
js
sbb
leave
shl
rcl
sub
pop
pop
xchg
pop
lods
lods
add
outs
outs
mov
sub
pop
fstp
es
out
imul
add
cli
gs
add
retf
(bad)
sbb
es
pop
not
jg
sub
mov
hlt
pusha
pusha
leave
js
es
sahf
dec
add
mov
cli
push
add
mov
(bad)
lahf
loopne
call
jno
outs
outs
inc
dec
push
add
and
inc
cmp
cmp
push
jg
es
adc
push
arpl
cmp
xchg
ins
inc
cld
cld
daa
add
out
mov
nop
imul
mov
(bad)
pusha
es
nop
enter
pop
mov
ds
adc
rcl
pusha
and
out
inc
adc
pop
add
mov
cmc
lock
mul
pop
inc
jp
push
push
inc
add
dec
dec
movs
sub
add
loopne
xchg
jge
nop
icebp
icebp
call
and
stc
sbb
out
push
cmp
fs
mov
repz
and
add
jno
jle
sti
mov
pop
call
cmp
and
ja
push
push
pop
shrd
fmul
adc
es
add
test
dec
cmp
into
add
(bad)
pop
or
add
xor
ret
(bad)
xor
out
in
sbb
imul
mov
dec
cmp
add
out
(bad)
and
mul
test
rcr
lods
mov
or
in
jl
out
scas
leave
add
pop
fwait
mov
out
in
jno
xchg
add
cmp
das
mov
mov
daa
cmps
jg
shl
rol
sub
sbb
add
sub
pop
or
add
js
shl
(bad)
dec
adc
es
add
out
in
or
adc
test
out
push
xchg
es
addr16
sbb
mov
out
or
adc
jne
pop
jp
lock
les
into
out
cmc
stos
cs
push
dec
je
out
jmp
mov
nop
xchg
mov
lock
es
pop
xchg
jge
cmp
cwde
mov
gs
xor
lea
sub
ss
push
es
repz
pop
jle
inc
inc
es
dec
mov
sbb
xchg
scas
es
ins
and
ja
push
gs
mov
out
ror
xlat
xor
add
cld
sub
out
aad
push
es
mov
popa
mov
es
pop
xor
lock
idiv
cld
adc
dec
out
out
sub
dec
lock
rcl
add
ja
movs
in
xor
sbb
sahf
movs
cmp
push
out
inc
add
pop
out
xchg
xor
add
xlat
sbb
mov
mov
das
(bad)
bound
aam
mov
adc
(bad)
ss
(bad)
sub
cwde
jnp
add
retf
inc
mov
jg
jle
pop
es
jmp
iret
inc
lahf
lahf
add
out
lods
call
pop
arpl
adc
mov
enter
mov
dec
cli
aas
std
out
lea
cmps
mov
out
add
mov
add
cmp
adc
dec
js
enter
pop
pop
iret
xchg
dec
es
jb
sbb
shl
push
mov
pop
aam
xchg
inc
add
(bad)
(bad)
jae
inc
es
jnp
sbb
rcl
aad
(bad)
out
fs
in
fsubr
mul
shr
movhps
push
mov
and
push
or
push
mov
nop
xor
add
xchg
es
pop
dec
add
int3
in
hlt
out
iret
lds
and
fdivr
cld
mov
adc
pusha
adc
test
(bad)
jg
push
repz
rcl
pusha
add
or
dec
mov
cmp
test
leave
push
ins
out
or
stc
stc
mov
shl
loope
add
xchg
add
cmp
xchg
xchg
push
push
ret
ret
js
addr16
call
add
mov
xor
shl
push
sahf
mov
pinsrw
fcmovnu
pusha
gs
out
nop
lahf
pop
es
cmps
in
inc
inc
jo
adc
sub
(bad)
xor
ins
pop
jg
daa
daa
out
push
and
int
and
mov
(bad)
popa
pop
into
into
push
cld
pop
out
sub
xor
add
cdq
adc
out
push
add
add
repnz
cs
pop
hlt
xchg
sub
(bad)
pop
add
std
std
imul
pop
mov
add
adc
jg
mov
pop
add
push
jle
es
bound
lea
inc
mov
jae
xor
add
imul
sbb
cmp
mov
xor
mov
mov
xor
rcr
pusha
out
mov
mov
out
or
push
add
popf
addr16
pop
adc
add
es
sbb
into
into
xor
clc
add
dec
sbb
cld
aaa
or
mov
clc
pop
(bad)
out
add
cmp
aam
fdivr
out
in
(bad)
es
jmp
loop
es
mov
mov
and
loope
xchg
add
(bad)
lods
push
xor
xchg
jb
fadd
(bad)
sub
xchg
es
mov
repnz
es
int3
sbb
push
and
or
jbe
(bad)
movs
jmp
mov
push
push
mov
ins
dec
je
push
shl
add
add
pushf
or
mov
xchg
pop
adc
add
push
inc
sub
sub
ins
ja
in
inc
cwde
out
cld
(bad)
pop
sbb
icebp
loope
out
xor
cmps
(bad)
xor
add
cli
out
cmp
add
jecxz
fadd
add
out
lahf
test
shl
add
aam
(bad)
sbb
out
loopne
dec
es
add
lahf
mov
add
fucom
cli
ins
sbb
leave
leave
sub
mov
jmp
les
out
xchg
mov
mov
out
pop
jo
add
mov
inc
mov
std
out
ins
lods
js
cmp
jbe
(bad)
sub
scas
or
inc
clc
leave
leave
mov
add
pop
pop
imul
pop
add
pop
(bad)
pop
scas
scas
dec
or
pop
aas
aas
movs
xchg
cmc
bound
aaa
call
out
lock
fwait
xchg
out
inc
pop
add
sti
dec
imul
add
and
int
es
sub
pop
mov
cmove
add
cmp
adc
mov
out
add
pop
cmp
dec
jns
out
push
pop
xchg
rol
lahf
ret
outs
es
mov
add
repnz
jb
inc
es
mov
in
in
xchg
jle
es
or
in
es
sbb
rol
push
arpl
xchg
out
test
es
push
or
jg
shr
out
xchg
inc
cs
scas
stos
mov
out
dec
pushf
push
es
mov
jae
(bad)
ror
push
(bad)
out
add
retf
mov
mov
test
or
mov
(bad)
push
out
add
pop
add
xchg
xchg
in
shl
into
imul
(bad)
fsub
es
call
adc
mov
cmc
inc
aam
cdq
add
(bad)
out
(bad)
mov
cmps
fimul
(bad)
repnz
lock
jmp
fstp
pop
adc
in
cmc
add
out
push
xor
mov
test
push
pop
pop
aaa
jnp
out
push
add
es
xchg
rcr
fcom
push
cmp
out
mov
pop
sub
ds
cmps
cmps
add
adc
xor
fcomp
mov
add
xor
out
xchg
add
or
xchg
out
sub
add
icebp
test
mov
mov
jmp
scas
and
shl
inc
es
lds
pop
add
mov
mov
jns
int3
mov
adc
retf
test
sub
lods
and
add
sub
fsub
mov
add
rol
loope
mov
or
jp
daa
aam
gs
ins
add
les
adc
icebp
icebp
hlt
mov
out
pop
xor
es
add
outs
cs
or
and
inc
mov
add
fimul
add
int3
add
bound
add
fdivr
js
fcmovnu
icebp
in
das
sbb
aad
jl
add
sahf
es
int
dec
dec
add
enter
test
mov
call
(bad)
dec
out
mov
(bad)
daa
add
mov
inc
fs
cmc
sub
fwait
(bad)
call
outs
out
xor
call
pop
out
jmp
lock
mov
es
scas
jmp
jns
test
jmp
sub
cmc
cmc
clc
rol
dec
mov
cmp
push
add
xor
fidivr
mov
outs
mov
les
es
add
adc
lods
jp
dec
dec
xlat
inc
jnp
outs
pop
das
(bad)
and
mov
cmps
cmps
inc
mov
pop
pop
outs
stos
test
add
into
push
rcr
xchg
jp
inc
add
int
fwait
out
fisub
bound
fnop
jecxz
jnp
out
add
xor
movs
movs
in
xor
jno
lods
add
sub
es
fstp
push
push
and
xchg
(bad)
add
or
cwde
(bad)
cs
xchg
out
dec
add
pop
scas
scas
out
pop
out
jmp
dec
es
test
add
mov
sub
outs
pop
sub
fild
(bad)
add
test
popa
popa
push
xchg
xor
add
repz
inc
aas
rcr
push
dec
test
adc
add
mov
push
push
es
pop
rol
xchg
xchg
jae
push
es
or
es
stos
sub
mov
sahf
sahf
nop
dec
shl
mov
pusha
fxch
out
(bad)
test
je
out
add
inc
mov
dec
es
xchg
(bad)
adc
mov
out
push
mov
ds
push
push
add
push
xor
rol
pop
cmp
mov
scas
lods
cld
jbe
sbb
inc
dec
rcl
or
pop
ds
add
sbb
jb
add
in
popf
pusha
jae
add
sub
aam
push
lods
daa
daa
hlt
add
xchg
pop
dec
enter
in
add
std
xor
push
push
movs
add
adc
es
adc
not
adc
cdq
adc
cli
call
iret
gs
out
add
loopne
xchg
sub
add
mov
jg
out
or
or
add
mov
(bad)
lods
sbb
repz
and
fs
add
push
loopne
jle
add
es
push
mov
add
out
in
mov
add
fisubr
jle
es
add
add
mov
inc
out
sbb
mov
jne
hlt
loop
setl
ror
or
add
mov
test
sub
sbb
sbb
mov
add
out
inc
fadd
and
add
cmp
add
cmp
stos
or
out
push
cmp
es
je
test
mov
add
xchg
mov
sub
je
sbb
daa
jo
mov
mov
hlt
shr
cld
cld
clc
in
sahf
es
xchg
xchg
xchg
fstp
add
sti
es
scas
jg
cmp
push
shl
imul
add
out
cmp
add
fst
mov
adc
sar
dec
lods
sti
in
test
pusha
cdq
test
jge
jb
out
push
pop
mov
push
nop
nop
add
mov
rcr
stos
out
out
sar
jg
int3
xchg
add
xchg
in
neg
retf
add
ss
lods
outs
and
es
xchg
fyl2xp1
sbb
dec
inc
cmc
cmc
xchg
out
out
ins
cli
push
es
int3
outs
jb
dec
pop
ja
scas
or
mov
rcr
push
mov
add
sbb
push
push
sbb
push
es
inc
mov
add
push
out
in
adc
(bad)
sub
sub
pop
sbb
mov
lds
pop
xchg
fidiv
ds
out
or
lods
inc
mov
add
out
inc
aam
imul
pop
inc
and
pop
fcom
add
or
add
cmc
mov
mov
mov
test
add
or
sbb
pop
cmps
es
mov
pop
mov
and
sbb
in
shl
mov
mov
gs
mov
sub
xlat
out
cmps
aad
and
sbb
jmp
mov
hlt
sahf
add
add
dec
and
cmp
retf
sbb
lds
mov
loopne
fnsetpm(287
out
dec
std
neg
fld
ret
add
cmp
mov
mov
call
cwde
adc
in
push
mov
in
inc
test
add
out
dec
sub
(bad)
aad
pop
out
mov
div
je
sub
mov
mov
aam
mov
jge
and
jns
jmp
nop
ret
out
push
push
cmp
xchg
into
test
pop
fwait
xchg
out
out
jmp
and
sbb
add
pusha
pusha
push
inc
clc
out
inc
add
(bad)
and
push
es
(bad)
in
mov
jecxz
xchg
add
jae
adc
cdq
retf
retf
push
test
add
out
sbb
dec
out
adc
call
data16
popf
fucom
add
push
sub
retf
test
adc
lock
push
add
stos
imul
jmp
in
es
daa
fistp
mov
shl
or
bound
cs
mov
out
fdiv
mov
out
arpl
or
fs
push
mov
push
sbb
push
add
inc
mov
movs
pop
pop
mov
add
jae
xchg
(bad)
or
pop
es
repz
xlat
push
aas
test
or
aaa
jne
push
push
inc
shl
mov
mov
push
xor
xor
add
inc
and
jne
fwait
cli
cli
pop
mov
or
gs
std
out
add
xchg
cmps
mov
imul
xchg
movs
lds
cdq
leave
or
add
movs
lods
out
pop
add
or
es
xor
xchg
jg
or
or
cmp
push
mov
xor
out
add
inc
out
add
shl
or
es
mov
std
mov
cld
imul
out
cmp
test
out
or
ja
call
stc
add
mov
jbe
add
ss
jae
add
ja
jp
es
clc
retf
add
and
ins
jbe
mov
je
dec
inc
add
add
cmp
dec
shl
es
push
inc
xchg
xchg
das
or
imul
fcmovu
in
cmp
add
in
mov
push
or
fsub
not
add
dec
pop
imul
je
ror
imul
dec
push
inc
inc
fld
or
dec
sub
repnz
or
push
outs
outs
push
shl
sub
xchg
fsubp
repz
add
inc
and
ins
fiadd
mov
retf
data16
(bad)
jmp
sbb
add
sub
out
loop
cmps
es
add
in
jo
and
test
pop
add
pop
mov
out
imul
add
pop
mov
dec
out
loope
add
out
lods
fisub
repnz
dec
out
inc
and
cld
shl
cmps
inc
add
push
fsub
xor
ret
add
inc
enter
ds
cld
cmp
lea
add
sub
ret
push
es
sbb
adc
es
add
sti
sti
or
pop
add
mov
es
add
fadd
sub
ja
mov
das
add
inc
cmps
mov
add
mov
es
cmp
cld
inc
add
lock
clc
call
sbb
push
push
stc
jae
push
push
add
xor
fstp
adc
(bad)
gs
bound
dec
aas
out
push
icebp
add
push
xchg
cwde
sar
add
cmp
ds
stc
mov
adc
loope
add
pop
jl
out
shl
cmp
addr16
add
ins
jmp
or
inc
adc
push
add
into
out
cwde
jnp
fcomp
outs
(bad)
lahf
out
add
hlt
es
jmp
out
add
mov
push
es
verw
outs
inc
cmps
es
or
sar
or
cmp
cmove
out
shl
add
fist
retf
es
inc
add
mov
sub
mov
jle
popa
popa
add
jns
div
out
xchg
add
mov
sbb
out
push
rol
loope
cmp
xchg
out
fld
xchg
push
push
out
retf
vorps
cmps
add
fcomp
hlt
aaa
aaa
xor
jb
add
out
sbb
neg
jg
add
fcmovnu
ror
(bad)
mov
xor
retf
ret
ret
or
cmpps
inc
inc
fistp
pusha
iret
inc
inc
cs
cmp
mov
jl
sar
(bad)
(bad)
shr
ret
(bad)
mov
mov
sbb
test
xor
mov
aam
and
add
int
adc
pusha
add
pop
push
push
mov
add
adc
aam
inc
add
sub
xor
popf
fs
inc
es
mov
mov
jecxz
(bad)
mov
add
das
das
shl
call
pop
mov
fild
inc
push
add
xchg
std
and
mov
mov
ret
gs
mov
mov
test
and
adc
xor
sbb
adc
in
cmp
loopne
jge
test
add
pop
pop
inc
hlt
adc
out
cmp
js
pop
pop
push
out
out
rcl
cmp
pop
push
cld
in
add
add
mov
(bad)
push
push
mov
push
es
ja
out
out
(bad)
rcl
cs
out
push
out
es
mov
cmps
cmps
jmp
add
xchg
retf
sub
int
pusha
mov
popa
into
es
lods
sub
in
in
cmp
bound
mov
es
mov
dec
push
push
call
xchg
xor
add
out
jnp
push
out
jp
add
out
es
int
add
dec
mov
sub
add
mov
push
and
mov
jno
mov
outs
add
es
mov
xor
dec
das
das
addr16
add
mov
dec
add
add
add
(bad)
in
out
or
es
cmp
cmps
popf
mov
out
cdq
push
movs
mov
out
adc
cs
int
out
jp
push
add
inc
iret
mov
es
lock
mov
jb
cmp
lods
add
jnp
pop
adc
out
pusha
push
adc
mov
add
push
mov
mov
fs
adc
and
aad
mov
add
es
mov
push
add
push
out
cmp
add
mov
bswap
xchg
es
jnp
cmp
daa
adc
call
fwait
pop
xchg
add
add
cmps
push
push
test
add
ret
xchg
call
or
xchg
hlt
xor
add
es
cli
add
das
das
mov
add
call
aas
es
add
shr
arpl
out
inc
(bad)
push
aaa
aaa
sub
out
cld
add
popa
popa
jg
into
out
mov
and
out
add
add
iret
push
pop
arpl
add
cmps
sub
lods
es
not
sub
pop
rcl
xchg
xchg
or
add
les
ja
call
je
or
adc
dec
xor
and
add
scas
es
inc
repnz
add
xchg
es
xor
adc
dec
push
push
push
add
add
xchg
xor
cli
pop
xor
stos
or
mov
in
push
mov
xchg
add
xchg
cmps
jno
fild
inc
mov
and
mov
inc
fcmovu
pop
mov
retf
add
out
dec
and
ja
push
fwait
push
es
xor
shl
es
js
and
add
xchg
pushf
es
cs
sbb
add
cmp
mul
or
adc
clc
out
add
(bad)
mov
adc
out
inc
jmp
sbb
aad
out
call
sbb
add
ds
out
movs
add
es
in
pusha
imul
pushf
outs
add
mov
popf
mov
ins
mov
cmp
ret
mov
cld
sbb
sbb
cdq
cdq
mov
out
clc
sbb
nop
out
(bad)
es
jl
sbb
sar
mov
stos
test
imul
jl
ins
push
mov
push
push
retf
out
cmps
and
rcl
int3
int3
add
jecxz
or
ror
sub
jmp
mov
in
fptan
repnz
out
add
aad
out
push
add
lahf
lahf
scas
push
retf
out
shl
cmc
cmc
add
out
dec
iret
dec
pusha
pusha
outs
loopne
out
add
xor
addr16
adc
and
pop
mov
es
cmp
sbb
dec
enter
push
sbb
out
jo
es
add
jb
inc
sub
add
inc
inc
push
inc
je
add
pop
es
pop
jo
ret
and
sbb
shl
inc
push
add
test
add
ror
cld
lds
add
add
fwait
dec
shr
aad
add
mov
add
sub
cmp
push
out
add
iret
es
stos
fstp
adc
div
test
pop
pop
imul
cli
cwde
add
fnsave
std
sbb
and
mov
and
jbe
out
add
lods
fidiv
std
lods
lods
lds
aam
mov
test
xor
popa
lock
les
jle
add
mov
stos
or
out
xchg
(bad)
es
test
cli
scas
scas
adc
ja
sahf
in
js
inc
add
stos
push
fcomi
(bad)
(bad)
pop
stos
call
mov
int3
sbb
loope
mov
jno
dec
dec
out
jb
es
out
add
es
or
cmp
and
adc
aaa
add
mov
mov
pop
pop
test
xor
xchg
es
pop
xchg
sub
add
dec
dec
call
ret
jle
cmps
push
mov
scas
ds
adc
adc
arpl
and
out
arpl
sti
movs
dec
inc
mov
add
jg
xor
mov
jmp
sbb
xchg
rcl
xchg
push
(bad)
repnz
add
push
push
push
fmul
out
cmp
and
lock
jmp
sbb
out
addr16
es
pop
aaa
in
in
iret
out
jo
inc
enter
rol
fs
jne
rcr
add
es
outs
scas
rcl
push
stos
add
cmp
dec
out
mov
out
fdivr
pop
pop
or
out
scas
nop
add
out
mov
xchg
pop
in
(bad)
inc
jne
es
mov
rcl
jg
add
xor
aaa
out
sub
cmps
add
xchg
in
jnp
dec
inc
push
xchg
stos
stos
add
out
jp
pop
mov
and
jecxz
repz
iret
rol
out
add
pop
add
cmp
out
fisub
add
sahf
ds
out
out
sub
dec
jl
add
cli
not
mov
xchg
sti
(bad)
out
out
xchg
sub
inc
mov
test
add
cmp
out
mov
add
out
xchg
stc
fld
out
inc
fcomp
out
out
pop
lahf
gs
imul
push
mov
mov
mov
ins
inc
jmp
and
add
(bad)
push
lock
fadd
xchg
add
stc
adc
cdq
cdq
mov
sbb
cmpxchg
cmp
dec
cmp
and
mov
stc
out
inc
mov
add
es
or
mov
mov
push
outs
add
and
dec
cmps
dec
dec
dec
add
out
mov
mov
out
rol
stc
stc
jl
ins
out
cmp
cmp
push
out
pusha
jecxz
in
in
cmps
(bad)
and
xor
out
mov
add
dec
pushf
pushf
das
cmps
sub
jle
add
jmp
int3
pop
sldt
dec
pop
out
dec
dec
sub
push
push
mov
cmc
mov
add
stos
and
jmp
xor
jae
mov
and
xor
(bad)
pop
xchg
add
add
out
pop
clc
add
rcl
out
rcl
add
icebp
imul
(bad)
ret
es
mov
loopne
cmp
mov
es
ss
pop
es
xchg
test
data16
leave
leave
mov
out
push
and
lods
lods
inc
inc
cmc
out
dec
dec
cli
es
push
icebp
cmp
movs
clc
adc
cwde
ficomp
das
call
lods
out
pusha
add
es
dec
lahf
fcmovnu
jne
add
fwait
out
cmp
inc
inc
add
test
out
sahf
sti
aad
jae
add
or
popf
clc
sub
push
push
add
enter
(bad)
ds
push
in
and
adc
mov
fisub
mov
test
es
push
add
cmps
mov
es
xchg
mov
mov
movs
fxch
add
adc
cmp
es
cli
and
loop
fiadd
mov
adc
imul
es
out
dec
dec
push
std
sub
xor
pusha
(bad)
ret
aas
add
in
rcr
pop
enter
inc
aaa
es
test
pop
in
inc
pop
es
sbb
xchg
push
push
and
mov
mov
inc
inc
cmps
es
hlt
hlt
adc
adc
sub
xchg
es
cmp
out
mov
pop
icebp
int
or
mov
js
lds
shr
add
(bad)
mov
or
add
pop
pop
inc
out
pop
fs
add
mov
adc
jno
add
xchg
ins
ds
cmp
fstp
add
pop
mov
and
and
out
sub
popf
adc
ins
add
ja
out
jg
out
pop
and
out
lock
es
aad
push
push
xor
es
add
js
enter
es
jnp
scas
scas
jns
sub
push
out
jge
sbb
out
inc
mov
pop
pop
pop
out
fdivr
stc
loopne
cmp
in
pop
push
push
out
pop
pusha
add
xlat
mov
push
data16
sbb
fs
xchg
out
or
es
ss
xor
sub
enter
push
iret
mov
add
add
out
jns
ja
or
mov
out
jbe
sahf
mov
inc
mov
sub
pop
out
in
cmp
xchg
fs
rcr
fsubp
(bad)
push
test
(bad)
out
pop
popf
mov
pminsw
or
pusha
pusha
or
out
loopne
mov
inc
inc
imul
add
(bad)
inc
es
enter
into
jns
and
imul
add
push
add
test
loopne
loopne
mov
xchg
add
into
hlt
out
popa
add
call
xchg
rcl
fwait
add
in
push
mov
and
dec
add
es
sti
add
retf
cli
arpl
out
add
xchg
push
int
mov
cmps
push
aad
xchg
mov
add
fist
dec
cld
aas
add
jo
adc
out
xor
(bad)
in
out
add
xlat
es
or
test
enter
pop
ins
jne
inc
inc
movs
xor
es
xor
xchg
push
inc
out
cli
add
push
push
jne
fsub
add
in
and
cmp
shl
dec
es
push
dec
add
pop
pop
rol
out
aaa
mov
popf
mov
std
std
or
add
stos
ror
cmp
ret
and
pop
mov
enter
add
retf
in
(bad)
movs
sbb
outs
clc
inc
add
es
inc
movs
add
lods
into
dec
es
adc
add
push
xor
xchg
add
mov
push
fistp
mov
cmp
es
mov
push
arpl
out
scas
mov
pushf
mul
add
xor
xor
cdq
cdq
cmp
add
add
lds
add
cli
fcomp
ror
pop
add
enter
add
sbb
lea
(bad)
lar
or
jg
in
test
es
add
add
lahf
mov
loopne
frstpm(287
jo
pop
add
and
mov
sbb
test
sar
add
mov
(bad)
and
out
add
(bad)
mov
fnstenv
jge
or
mov
dec
xchg
cmps
cmps
sbb
mov
fsub
ds
sbb
sub
adc
in
iret
lods
clc
es
shr
pop
es
and
das
es
add
xor
aaa
inc
mov
out
pusha
out
cmp
mov
int
mov
in
cli
es
das
inc
test
sbb
xchg
mov
jg
(bad)
pop
mov
(bad)
xor
pusha
dec
push
and
sbb
(bad)
cmp
outs
outs
in
xchg
and
popa
cmp
data16
out
fsub
add
cmp
leave
leave
test
sub
loope
add
mov
jge
jecxz
imul
outs
outs
(bad)
lock
adc
ret
jns
sub
pop
imul
out
fsub
es
fwait
scas
imul
or
adc
pushf
es
outs
pop
lea
add
sbb
or
clc
dec
xor
and
add
inc
out
cmp
es
xchg
add
(bad)
(bad)
pop
mov
pop
mov
mov
loopne
popa
es
cld
fiadd
xchg
xchg
mov
mov
lea
pcmpgtd
es
lahf
xor
dec
(bad)
xor
(bad)
cmp
ds
mov
out
mov
(bad)
pop
jecxz
sub
mov
out
mov
mov
jns
mov
and
fld
out
pop
aam
sub
or
adc
inc
es
ss
jmp
push
mov
cli
xor
es
rol
add
std
out
add
sbb
out
cmc
add
ins
ins
lahf
shr
ret
add
mov
fisttp
icebp
aas
es
(bad)
loop
sbb
fdiv
add
out
psllq
inc
es
jg
mov
sub
add
outs
mov
nop
or
adc
out
sbb
test
jae
stc
cmp
mov
daa
les
mov
push
jg
out
outs
push
enter
jne
out
sbb
es
xor
xchg
leave
add
int
cmp
aaa
dec
and
cmps
add
imul
cwde
adc
es
xchg
push
ins
ins
pop
push
jecxz
add
loope
pop
add
add
and
cs
mov
lea
sbb
adc
mov
sbb
std
movs
sti
add
sahf
mov
imul
sub
and
call
cmp
pop
xor
and
xor
fcomp
cld
cmps
and
aaa
add
mov
int3
scas
out
pusha
add
std
out
pop
push
es
leave
pop
test
div
cld
jp
out
shl
int
adc
mov
je
add
sbb
xor
xor
or
mov
mov
jns
imul
mov
aaa
add
xchg
mov
cmp
(bad)
out
add
fild
out
pusha
stos
cs
sbb
dec
dec
or
cmp
push
xchg
out
stos
scas
mov
pusha
pop
mov
loop
es
ror
inc
inc
stc
test
es
aad
(bad)
loopne
bound
push
adc
cmp
jp
dec
add
fmul
enter
out
out
add
out
mov
mov
out
add
movs
in
ins
out
les
jb
stos
push
jp
and
xchg
out
adc
sub
and
or
repz
ret
imul
add
ja
mov
jb
hlt
out
enter
into
pop
add
out
repz
sbb
inc
popa
mov
jecxz
cwde
(bad)
mov
es
outs
jbe
dec
fld
scas
es
neg
mov
es
adc
iret
iret
js
xor
cmp
cmp
xchg
pop
data16
jle
pop
aam
add
pushf
es
dec
(bad)
outs
outs
push
lea
pop
adc
call
inc
adc
fstp
scas
xchg
add
xchg
enter
xchg
fcom
pop
pop
jg
and
xor
not
add
sub
add
lods
es
ins
dec
cmc
dec
dec
stos
push
push
add
es
cmp
mov
ss
sub
mov
je
es
repz
xor
fld
out
dec
icebp
ins
es
xor
inc
inc
nop
add
pop
inc
inc
ret
aaa
sub
adc
cmp
inc
in
es
adc
mov
or
out
ds
bound
xchg
add
push
sub
push
jns
icebp
xor
jne
ds
cwde
outs
add
mov
jecxz
cs
ins
xchg
add
xor
(bad)
pop
push
je
ins
ins
test
add
jecxz
cld
jle
loope
jmp
es
in
cmp
sbb
jb
add
mov
mov
sub
ret
es
(bad)
jmp
xchg
stos
imul
aas
loopne
and
rol
call
jbe
out
sbb
in
fdivp
out
jo
jmp
add
jecxz
dec
lods
and
mov
dec
loope
loop
icebp
aaa
add
sub
jmp
push
jle
mov
stc
jns
sar
xor
mov
push
sbb
add
out
pop
ficomp
es
inc
dec
add
or
ins
pop
pop
adc
outs
add
data16
dec
out
push
aas
add
loope
je
rol
jecxz
jae
loopne
test
jmp
retf
push
inc
and
je
push
jmp
pushf
ins
lods
mov
out
pop
test
pop
cli
dec
add
jmp
push
mov
imul
loop
or
pop
jecxz
es
mov
jns
push
add
es
mov
add
inc
out
shl
pop
pop
push
adc
hlt
outs
add
(bad)
pushf
jnp
xor
xor
ror
mov
cli
es
inc
fild
add
sbb
rcl
dec
out
out
mov
sahf
mov
and
js
es
cmovs
fdiv
xor
es
jbe
sbb
add
in
add
out
pop
ds
es
add
jb
jmp
and
jp
add
jecxz
aad
es
xchg
mov
pusha
loopne
int3
es
xor
mov
jmp
aam
and
mov
add
(bad)
out
mov
(bad)
add
in
lahf
cmp
out
add
es
push
nop
cmps
cmps
add
xor
out
ins
pop
popf
sbb
imul
cmp
add
(bad)
es
xchg
loop
add
loop
es
push
call
icebp
or
or
sbb
sub
mov
out
fistp
(bad)
test
enter
fisub
jl
es
mov
cmc
lock
cmps
cmp
push
mov
or
sub
lds
sahf
xor
out
sub
adc
dec
es
ja
add
es
retf
push
sbb
push
push
sahf
aas
movs
out
lods
inc
mov
xchg
je
mov
push
push
pop
(bad)
mov
adc
jg
test
add
mov
data16
mov
add
push
lods
lods
loopne
shl
cmp
pop
and
ins
rol
sbb
pop
pop
sub
iret
add
jmp
sbb
push
rol
sbb
out
bound
scas
shl
add
es
add
dec
es
fnstenv
inc
es
jl
add
sub
sbb
xchg
out
shl
add
arpl
repnz
mov
jb
add
sub
mov
xor
xor
shl
sti
cmp
cmc
push
xchg
out
jb
add
out
arpl
mov
sub
out
xlat
enter
(bad)
test
loop
inc
push
ret
addr16
hlt
hlt
les
and
lods
pop
inc
cmp
cwde
call
cmp
xchg
es
dec
repnz
jecxz
mov
inc
fsub
imul
std
jo
mov
ret
mov
xlat
xchg
mov
pop
ss
jg
and
pop
xor
sub
jbe
mov
xchg
(bad)
and
shl
add
pushf
inc
inc
imul
add
or
mov
push
out
cmp
xchg
(bad)
aam
(bad)
xor
daa
out
cmp
dec
es
in
ret
dec
rol
in
repnz
mov
mov
aam
push
push
and
xchg
add
cmc
add
nop
scas
loope
aad
clc
or
fstp
cmp
scas
scas
sar
add
cwde
in
lods
push
push
and
out
cmp
mov
add
dec
neg
mov
add
in
in
ficomp
out
pop
pusha
stos
or
add
dec
nop
xchg
xchg
jg
movs
out
push
popf
imul
pop
mov
out
dec
dec
cmc
sbb
add
call
scas
add
shr
add
lahf
arpl
pop
lea
and
or
fst
cmp
repnz
out
jns
and
jl
(bad)
or
sub
inc
dec
rol
add
int
pusha
in
push
movs
pop
add
popa
ficom
inc
icebp
pop
pop
sahf
daa
mul
mov
dec
mov
xchg
arpl
or
adc
loop
dec
out
xor
jno
and
ret
inc
and
jne
stos
add
fidiv
je
adc
add
mov
repz
out
pop
pusha
mov
mov
aas
sub
es
pop
clc
mov
aam
fmul
lea
adc
inc
pop
mov
push
add
sub
std
ror
es
pop
sub
xor
add
bound
in
jno
mul
add
fwait
es
fscale
jo
mov
ds
cmp
out
(bad)
in
sbb
add
rol
sti
jns
jg
and
cmp
outs
out
lods
sbb
jp
push
push
dec
mov
retf
pusha
es
out
or
mov
(bad)
fst
add
push
(bad)
or
movs
dec
ret
(bad)
stc
cmp
loope
pop
or
sbb
shl
add
inc
not
out
push
mov
jbe
inc
inc
sbb
sti
es
(bad)
out
adc
jle
pop
add
shl
and
and
xchg
mov
inc
add
push
pop
pop
and
int
bound
or
clc
outs
(bad)
loopne
pextrw
mov
repnz
and
lods
sub
adc
mov
sbb
jno
inc
inc
mov
out
stc
test
adc
imul
add
add
mov
cmps
sub
rcr
shl
es
add
data16
push
jmp
mov
fisttp
sbb
jno
out
add
cli
xor
data16
add
repnz
mov
mov
lock
mov
adc
mov
push
xor
ja
aaa
and
gs
loop
add
out
pop
and
sub
xor
rep
outs
pop
stos
jle
add
fstp
sar
add
enter
adc
out
addr16
out
sbb
fnstsw
cmps
out
xchg
es
call
dec
repz
sub
mov
dec
and
pop
lea
push
xor
sbb
es
add
test
es
sbb
mov
jmp
(bad)
rcl
in
cmp
loopne
or
add
add
jle
popf
add
es
add
xor
mov
frndint
cld
dec
loop
es
and
xchg
repz
add
cmp
es
in
loopne
add
add
es
aam
lods
xchg
xchg
push
mul
push
out
push
push
adc
add
int3
mov
es
cmps
push
push
mov
push
dec
lea
sub
xchg
xor
add
jo
mov
sbb
add
pop
xchg
vpaddw
pop
out
aas
movs
inc
mov
inc
pslld
push
cmp
sbb
add
je
push
es
test
les
push
popa
add
out
cmps
mov
es
or
es
loopne
hlt
mov
hlt
jae
sub
fiadd
ret
add
mov
loopne
es
ds
add
jl
out
pop
loope
inc
es
(bad)
add
es
xor
add
add
dec
das
std
add
sbb
add
retf
in
push
add
xor
rol
cmps
sti
out
add
sub
push
jg
push
out
sub
pusha
out
out
xor
out
adc
(bad)
add
out
jge
fs
stc
mov
js
enter
cmp
and
sbb
pop
aaa
aaa
sar
mov
add
(bad)
inc
neg
fldcw
xor
out
sbb
ja
mov
add
mov
lds
add
test
add
fidivr
clc
add
js
fwait
add
cli
out
iret
pushf
movs
add
add
dec
out
or
mov
mov
dec
cmp
imul
out
es
jmp
add
(bad)
stos
stos
cmc
push
loopne
xchg
push
aaa
shl
or
add
pop
(bad)
test
outs
out
add
loop
mov
fcomp
pusha
adc
jge
out
fwait
xor
fcomp
aad
add
or
add
inc
add
popa
(bad)
(bad)
es
push
adc
lock
bound
jae
movs
pop
shl
fiadd
inc
add
into
not
nop
loope
inc
fcom
bsr
ret
adc
and
enter
add
push
movntq
sub
cmp
out
cmp
das
add
in
pop
inc
add
push
or
out
dec
js
test
add
int
xor
sbb
ins
out
inc
jnp
popf
popf
jge
add
mov
inc
and
in
out
push
sub
movs
movs
call
add
adc
xor
fld
add
push
popf
out
jl
jno
clc
pop
clc
add
lods
leave
adc
sub
cmp
call
push
add
scas
adc
out
add
ins
mov
loop
out
add
add
fcmovu
mov
es
inc
popa
dec
push
test
not
jno
out
sti
les
es
jae
pop
fcomp
push
push
(bad)
fs
out
nop
addr16
test
add
mov
(bad)
push
out
pushf
aad
es
scas
inc
pop
pop
adc
and
mov
outs
jmp
pusha
add
xor
or
add
and
cmc
inc
inc
xor
out
pop
retf
arpl
cmps
jae
in
les
add
jle
and
add
shl
out
add
(bad)
cmp
adc
clc
clc
push
std
inc
out
jge
add
lds
sub
adc
repnz
cmps
push
add
test
lock
pop
add
add
xlat
sbb
in
(bad)
sti
add
movs
movs
outs
cld
mov
js
data16
es
ret
pop
pop
fst
ret
es
lock
jmp
call
aam
mov
leave
es
pop
add
add
add
std
push
mov
imul
add
outs
fs
jle
add
ins
lea
adc
(bad)
push
add
enter
xchg
ins
ins
add
xchg
es
leave
xor
div
out
sbb
pop
add
jp
es
cmp
jns
fst
mov
push
out
add
or
add
mov
cld
jne
(bad)
jo
ds
xor
cs
out
sbb
cmp
push
jnp
mov
pop
or
push
(bad)
pop
stos
cmp
shl
jge
adc
not
add
out
cmps
and
es
mov
enter
ffree
stos
out
dec
add
es
cmps
aam
dec
dec
mov
mov
outs
dec
dec
jp
aaa
repnz
mul
inc
popf
mov
gs
(bad)
sahf
arpl
retf
add
leave
out
es
dec
xlat
inc
sub
jne
add
ror
out
xchg
mov
mov
and
jmp
cmp
out
dec
les
aaa
aaa
sub
shl
sub
loop
cmp
out
pop
pusha
ror
movaps
pop
out
or
inc
(bad)
jge
out
loop
loopne
add
sub
out
xor
ins
addr16
adc
dec
icebp
cld
cld
mov
pop
add
dec
inc
inc
ror
es
data16
adc
repnz
aad
add
mov
rcl
dec
mov
xchg
pop
inc
fwait
adc
cld
cmp
and
mov
jp
jle
cdq
ds
pop
add
xchg
or
inc
jo
add
dec
cmp
or
xchg
mov
addr16
cli
or
pop
pop
mov
mov
mov
xor
stos
jge
out
retf
add
cli
mov
fs
pop
add
out
jns
daa
es
in
nop
nop
mov
sbb
mov
sqrtps
mov
out
cli
cmp
mov
add
dec
add
retf
cmps
xchg
inc
fwait
fwait
idiv
and
jge
push
add
jns
sbb
jle
or
xlat
jp
shl
(bad)
rcl
dec
fstp
and
mov
push
call
out
es
es
push
ror
hlt
jl
lea
out
sbb
inc
xchg
add
jno
fs
in
(bad)
add
es
jle
xlat
fsubr
xchg
jnp
int3
pop
fs
lods
out
mul
out
mov
call
pop
xchg
out
jbe
out
sub
in
out
in
les
shr
add
hlt
hlt
test
daa
sub
out
pop
jmp
pop
pop
out
push
out
push
adc
add
dec
in
out
or
mov
lock
es
les
call
in
cli
pop
hlt
in
jle
mov
daa
daa
fcmovnu
ror
add
cmps
push
out
out
call
sbb
inc
mov
out
int
push
cmp
out
(bad)
out
outs
je
add
push
aas
scas
out
pop
je
es
pusha
cld
sub
push
xchg
and
out
mov
mov
mov
jno
cli
push
jne
or
add
out
jns
cmp
cmp
popa
(bad)
mov
pop
sbb
adc
mov
(bad)
jns
pop
add
mov
cwde
call
js
inc
pop
jle
push
pop
add
(bad)
lds
sub
sbb
clc
mov
fld
add
loopne
mov
inc
xlat
out
mov
jo
pop
add
shl
test
fld
dec
es
dec
add
jns
adc
jbe
mov
lock
cmp
es
or
and
cli
xlat
mov
pusha
adc
sub
inc
cld
add
test
mov
fdivr
stc
icebp
cmp
out
aaa
add
es
aam
cmp
add
bound
es
subps
shl
push
mov
out
call
ins
(bad)
pop
fcomp
adc
add
and
out
shl
mov
nop
cmp
cmps
out
cmp
sub
icebp
mov
cmp
cld
out
mov
pop
es
jo
fisttp
stos
stos
xchg
scas
out
in
out
es
dec
icebp
push
push
add
fstp
ror
out
adc
add
hlt
hlt
cld
into
xchg
add
addr16
ja
cmp
or
stos
idiv
clc
clc
cmp
cmp
push
fwait
add
leave
sahf
cmp
(bad)
sub
jno
mov
cmps
in
mov
(bad)
(bad)
in
and
add
les
out
add
imul
jmp
sub
pop
lahf
xor
fidivr
out
push
inc
pop
pop
or
outs
dec
dec
call
add
inc
add
cld
mov
sub
add
xchg
mov
test
add
jg
dec
out
or
movs
add
call
xchg
out
fdivr
retf
or
add
jns
pop
test
out
add
cmp
mov
add
in
push
pop
add
inc
loop
jl
leave
fst
ss
add
mov
es
(bad)
xor
push
xchg
add
mov
es
cmp
je
add
jne
push
loope
and
cmp
lods
movs
int
es
mov
or
bound
add
mov
pop
fcomp
test
rol
dec
sbb
lds
add
retf
dec
ret
sbb
add
xor
dec
inc
and
es
cmp
dec
iret
mov
movs
mov
cmp
es
loopne
es
and
leave
ds
lods
into
into
jo
add
adc
inc
cs
pop
pop
adc
and
xchg
dec
ror
add
ss
jbe
add
pop
adc
and
mov
out
call
dec
stos
add
hlt
cmp
out
js
jl
jae
in
mov
cli
push
lock
retf
(bad)
(bad)
repnz
add
out
adc
and
push
mov
adc
pop
xchg
(bad)
mov
(bad)
jmp
rcl
sahf
pop
arpl
out
rcpps
pop
out
dec
sbb
es
push
mov
es
repnz
pop
(bad)
fiadd
add
leave
mov
movs
dec
scas
mov
call
arpl
xchg
xor
cwde
jno
es
mov
mov
push
fild
add
mul
loope
push
loopne
jle
push
add
test
adc
jmp
ror
aad
es
sti
loopne
loopne
mov
rol
out
add
or
or
xchg
into
mov
add
pop
imul
mov
xor
or
cmp
add
es
inc
and
mov
jae
pop
xlat
jmp
(bad)
pop
sbb
ret
es
dec
pop
pop
dec
sbb
cmp
daa
scas
add
inc
xor
or
out
bnd
push
out
(bad)
push
test
sbb
sbb
add
push
jmp
pusha
pop
adc
iret
and
xchg
out
out
shl
fdivr
jae
add
sti
mov
out
jnp
clc
es
test
es
push
es
sub
scas
scas
push
dec
add
push
mov
stos
or
add
ins
sub
or
cmp
jae
lock
mov
xchg
pop
sbb
rol
je
inc
add
mov
sbb
mov
gs
fcomp
mov
adc
xor
mov
add
mov
retf
es
xor
out
inc
pop
pop
fcmovnu
(bad)
test
out
int
sbb
cmps
push
shr
add
fnstsw
sti
retf
ss
xchg
or
and
sbb
mov
cmp
add
mov
add
enter
or
outs
rol
out
or
shr
sldt
cmp
das
popf
popf
jg
sub
jmp
repnz
sbb
add
shl
jl
add
mov
jno
mov
add
mov
out
ja
jmp
(bad)
add
jns
scas
cmc
aam
or
sub
dec
out
mov
dec
sbb
out
xlat
(bad)
mov
push
out
out
xchg
sub
xchg
add
movs
(bad)
and
pop
es
add
and
popa
jnp
es
iret
xchg
sbb
xchg
add
mov
sbb
stos
(bad)
jbe
add
jns
cwde
dec
and
jae
out
ficomp
es
pop
add
call
bound
cmc
add
enter
movs
movs
into
nop
dec
out
add
es
and
sbb
inc
out
arpl
clc
es
add
sub
es
mov
bound
pop
es
(bad)
xlat
rcl
mov
addr16
xchg
int
add
mov
xor
and
jae
rcl
cmp
out
(bad)
outs
jnp
add
jmp
out
retf
es
pop
idiv
stc
inc
inc
cwde
pop
xor
aad
add
es
inc
nop
in
mov
pusha
(bad)
cmp
ror
sbb
adc
add
sbb
cdq
add
dec
in
in
pop
xchg
out
jns
add
ss
cmps
jmp
add
imul
add
jae
pop
pop
xor
out
add
call
add
es
clc
retf
pop
and
sbb
es
(bad)
mov
inc
add
jb
sbb
imul
and
mov
fadd
popa
popa
mov
shl
sti
mov
icebp
or
add
lods
cld
add
push
xlat
xlat
push
enter
jne
inc
out
jecxz
dec
scas
scas
or
ins
out
add
leave
push
out
sbb
jo
ins
pop
fimul
push
push
rcl
pop
out
out
test
add
out
cdq
out
push
dec
lock
add
les
leave
push
push
adc
out
add
pop
mov
push
push
mov
jbe
cmps
(bad)
loope
pusha
pusha
and
out
out
add
jmp
into
(bad)
shl
outs
xor
jnp
popa
out
sub
pop
es
or
xor
es
test
pop
popa
jecxz
add
adc
xor
mov
mov
fcmovnbe
cmp
es
add
jmp
outs
std
dec
dec
add
es
in
imul
push
add
add
pop
jbe
push
ins
mov
xor
pop
add
or
xchg
cld
out
add
stc
adc
ins
retf
sub
out
rcl
add
pop
mov
das
sbb
iret
dec
mov
mov
add
out
jecxz
and
out
add
es
movs
cwde
lock
out
jns
dec
dec
outs
pop
and
inc
mov
add
jae
pop
inc
out
fs
jnp
sbb
sbb
es
mov
fcmovnu
popa
jno
push
push
adc
out
nop
call
out
dec
cmp
test
xlat
mov
out
test
xchg
sub
push
cdq
add
mov
fs
cmc
test
add
call
inc
or
and
prefetchwt1
fcmovu
sbb
das
repz
loopne
pusha
dec
jns
mov
ret
mov
out
fdivr
movs
add
out
xchg
xchg
arpl
jb
neg
les
es
in
cld
pop
dec
dec
mov
ja
xor
jns
jbe
out
call
imul
mov
out
jo
aam
jge
retf
iret
mov
cmp
adc
enter
rol
pop
mul
mov
cmp
mov
mov
jne
clc
or
es
pop
cmp
xlat
cdq
sbb
add
jnp
out
gs
cld
and
es
test
fisubr
out
in
ret
cmc
adc
and
(bad)
cmp
mov
inc
inc
sub
out
pop
add
test
xor
in
push
fs
movs
cs
add
push
jg
xor
pop
mov
add
pop
retf
clc
jo
ds
jo
cmp
add
iret
imul
sahf
sahf
fldenv
out
add
loopne
add
and
sar
out
inc
and
rcl
adc
or
xchg
movs
es
mov
xor
push
scas
fmul
mov
dec
aaa
add
fld
mov
std
add
xchg
es
sahf
add
(bad)
leave
es
neg
mov
add
mov
es
fwait
cwde
retf
push
sbb
push
out
rol
es
pop
out
fcomp
sahf
or
lds
jp
mov
lock
cmp
sbb
xor
out
scas
xchg
adc
in
dec
fnstcw
neg
pop
ja
xchg
jecxz
out
dec
scas
add
in
test
pop
pop
les
xchg
out
out
push
clc
sub
out
sbb
add
or
es
or
pop
pop
scas
adc
mov
in
stos
cmp
sbb
inc
mov
and
or
mov
jne
jp
inc
inc
mov
(bad)
adc
add
xor
inc
std
std
jmp
sbb
ret
fcmovnu
lods
cmp
add
mov
shl
enter
push
pop
outs
pop
out
leave
sbb
movs
movs
test
jae
es
lock
add
inc
data16
mov
ror
sub
es
call
gs
clc
add
mov
shl
repnz
add
loopne
push
xor
test
cs
dec
add
dec
pusha
xor
sub
cmp
out
repnz
jbe
pop
ja
out
pop
cli
cmp
sub
adc
addr16
retf
pushf
es
in
sub
fwait
inc
mov
gs
add
out
leave
mov
add
aam
in
es
mov
pop
add
dec
push
mov
es
sub
add
sbb
clc
(bad)
jo
add
popa
lock
mov
es
lods
fwait
cmp
mov
in
mov
aas
gs
inc
(bad)
(bad)
imul
loop
mov
add
push
sahf
es
add
push
lahf
lahf
inc
jbe
sti
sti
fdivr
out
mov
stos
pop
inc
out
add
sbb
push
daa
jbe
mov
sbb
fisub
mov
xchg
add
sahf
sahf
pushf
retf
add
aad
out
mov
pop
push
push
jnp
add
nop
lea
movs
les
cmp
out
pop
mov
jae
push
add
fs
(bad)
cmp
cli
cli
add
push
out
ds
adc
add
mov
xor
add
mov
adc
in
in
xlat
mov
out
ja
out
mov
fdivr
daa
add
mov
cmp
inc
jecxz
add
(bad)
movs
adc
mov
sub
add
push
(bad)
shl
inc
rcl
pushf
or
jge
out
out
dec
movs
push
es
inc
cmp
int3
retf
es
das
inc
and
push
and
scas
add
test
mov
es
bound
xchg
es
mov
fild
mov
cdq
add
mov
out
cmp
dec
pop
xchg
int
ss
(bad)
fnstcw
pop
out
fsubp
xchg
bound
pop
es
add
and
pop
push
movs
sub
jmp
sub
mov
add
shr
jb
cld
add
push
mov
pop
jbe
pop
out
jnp
stos
rcl
or
out
out
add
clc
mov
mov
push
shld
rdtsc
and
ds
mov
call
std
addr16
mov
jle
fwait
shr
add
inc
lds
fsub
lea
pop
add
mov
int
stos
or
add
pop
add
cmp
add
rol
sbb
push
inc
cmp
dec
dec
dec
mov
out
dec
fwait
pop
add
jns
shl
sbb
arpl
hlt
pop
pop
je
xor
inc
retf
sbb
pop
pop
fnstsw
inc
pushf
cmp
lahf
clc
cmp
add
in
xor
cmp
ret
scas
push
repnz
or
div
jle
add
out
repnz
adc
aam
shl
add
dec
es
mov
setg
xor
mov
dec
cmps
cmp
pop
inc
out
and
mov
adc
sti
mov
xchg
push
es
add
sbb
fucomp
leave
or
pop
(bad)
out
aam
shl
into
call
mov
sub
out
leave
mov
call
dec
out
cdq
mov
out
inc
add
int3
jge
mov
retf
pop
out
xlat
jno
mov
lock
es
add
inc
inc
or
push
cmc
(bad)
inc
lea
mov
test
ficomp
out
xlat
out
es
jmp
inc
add
or
xor
inc
jl
add
(bad)
mov
popf
repnz
popa
cmp
xchg
std
out
inc
xor
inc
dec
fcmovnu
xor
es
mov
sbb
xor
cmps
out
add
(bad)
es
stc
popa
jbe
bound
mov
push
outs
mov
retf
ja
cmp
fidivr
sbb
add
mov
mov
out
sub
mov
retf
pop
xchg
fstp
xchg
push
clc
jns
push
add
and
jne
dec
inc
imul
add
lock
loopne
jp
add
adc
(bad)
add
sub
dec
dec
lock
enter
mov
sahf
les
xor
iret
std
out
sbb
es
lds
repnz
lock
inc
out
ds
es
sar
cmp
jb
es
clc
(bad)
mov
es
shl
movs
push
pushf
sbb
les
shl
mov
cmp
mov
or
bound
jbe
out
out
stos
push
es
aad
add
cmps
aam
or
out
cmp
mov
inc
pusha
cmp
popa
push
push
aaa
mul
icebp
iret
push
jge
xchg
add
int3
ins
ins
repz
push
out
mov
push
addr16
or
out
add
out
out
mov
(bad)
aam
cli
arpl
adc
cld
and
push
push
rol
xor
inc
inc
xor
repz
adc
cmp
inc
es
pop
fcmovnu
fmul
je
enter
in
sbb
push
sub
add
jnp
sbb
out
mov
popf
aad
out
pop
jmp
es
sahf
dec
test
les
pop
sub
fldcw
out
not
add
and
xor
int3
jl
jb
add
mov
aaa
pop
push
add
xor
jmp
add
stos
int
mov
fisttp
cs
sbb
ret
shr
add
std
(bad)
inc
inc
aaa
in
lock
jns
add
fisttp
neg
fs
sub
mov
xchg
out
cmp
cmp
dec
dec
jae
add
mov
mov
inc
leave
add
pop
movs
aaa
out
into
push
mov
add
push
pop
mov
ja
nop
add
fild
or
es
add
mov
lds
cdq
js
fild
add
xchg
mov
cmp
cmp
adc
add
jnp
push
stos
adc
cs
or
add
shr
ins
ins
por
cmp
add
test
cli
dec
clc
xchg
add
xchg
es
pop
in
in
es
fs
arpl
adc
jns
in
add
sbb
fild
out
das
in
pop
es
jmp
nop
mov
push
add
pop
xor
add
sub
add
mov
outs
or
pop
pop
ins
sbb
aas
int3
push
inc
add
es
dec
imul
inc
inc
adc
jne
or
inc
sub
gs
scas
push
es
xor
fwait
fwait
inc
mov
push
nop
out
or
mov
repnz
push
push
push
daa
cmp
sbb
rcr
add
(bad)
out
xchg
es
sub
movs
dec
stos
stos
cmp
add
mov
out
aam
xor
mov
add
sti
sub
or
add
js
sub
ins
mov
pop
les
es
cs
imul
es
shl
add
push
mov
out
es
es
out
add
mov
adc
push
jne
retf
pop
pop
stc
repz
xor
add
xor
neg
popw
push
push
in
dec
loop
outs
pusha
sti
pop
out
add
rcr
fiadd
into
into
jb
or
jp
neg
stos
pop
pop
mov
loopne
push
xchg
add
ins
cmp
xchg
sbb
push
mov
loope
ret
test
push
inc
inc
jne
dec
out
shl
leave
call
add
les
xor
cmp
aad
push
fwait
add
push
and
inc
hlt
add
out
in
xchg
add
lahf
mov
gs
xor
data16
out
es
push
xchg
add
enter
aaa
and
and
xor
add
mov
sbb
frstor
ja
es
fistp
dec
hlt
hlt
add
sbb
es
lahf
add
(bad)
dec
pop
hlt
es
jl
mov
out
loope
pop
(bad)
imul
call
out
aam
mov
jmp
mov
in
js
daa
daa
repz
sub
add
pop
loopne
out
call
add
ins
sub
(bad)
push
(bad)
out
(bad)
rol
cmp
add
repz
lahf
mov
inc
loopne
mov
or
mov
pop
jnp
adc
movs
xor
cmps
ja
gs
int3
add
cs
mov
rcl
dec
dec
rol
(bad)
(bad)
jmp
mov
bound
dec
leave
push
push
add
dec
dec
es
add
pop
pop
push
push
cs
out
test
and
pusha
inc
pop
xor
add
es
mov
add
rcl
and
pushf
pushf
push
(bad)
cmp
out
retf
xchg
es
sti
lea
add
mov
mov
add
out
dec
add
es
xor
xchg
xchg
dec
add
jecxz
push
push
das
das
imul
repnz
ins
fcmovbe
out
(bad)
std
jbe
fmul
jae
add
es
sub
rol
add
xchg
aad
movs
out
add
mov
cld
icebp
xor
(bad)
mov
push
test
out
nop
or
cmps
cmps
loop
retf
out
sub
enter
dec
pop
dec
mov
out
xchg
mov
rol
imul
out
add
cmps
es
jg
sub
mov
fs
xor
push
nop
nop
sbb
stos
push
out
inc
ret
add
adc
xor
aas
jb
out
hlt
pop
ins
es
sub
add
dec
std
dec
es
inc
mov
lock
in
into
es
jne
in
inc
add
xchg
ret
mov
adc
xchg
xor
mov
add
sub
mov
cmp
push
out
dec
movs
mov
jecxz
aas
add
cmp
in
pop
popf
out
adc
sub
loop
fwait
out
add
es
ins
in
addr16
push
aam
mov
loopne
add
(bad)
and
ss
lahf
fdiv
call
adc
adc
aam
or
add
adc
mov
fiadd
ins
jb
es
push
jb
add
stos
mov
(bad)
lock
add
cwde
cwde
test
out
pop
scas
or
or
retf
lds
add
fidiv
es
push
cs
cmp
add
lahf
mov
add
push
out
ss
in
es
aaa
add
push
cmp
sub
out
jle
stos
dec
dec
(bad)
pop
out
rcl
or
mov
movups
in
(bad)
mov
fcomp
sbb
out
movs
xchg
cmp
jmp
cmp
pusha
les
fs
out
bswap
ins
add
add
out
push
inc
stc
es
add
lahf
xchg
lock
cwde
in
add
fsub
ja
dec
imul
loopne
ds
(bad)
jo
xor
(bad)
push
cld
inc
nop
nop
jl
add
out
mov
and
add
repz
mov
mov
enter
loopne
xchg
sub
push
push
jmp
sahf
xor
out
sbb
push
pop
cmp
mov
movs
out
pusha
jmp
es
xor
add
mov
or
sub
mov
and
pop
push
add
dec
dec
in
out
cmps
iret
out
push
add
mov
inc
es
sahf
nop
movs
add
sbb
push
mov
outs
push
es
ficomp
out
dec
add
dec
aam
jmp
movs
fisttp
xor
out
push
pushf
mov
add
retf
push
push
add
cwde
or
cld
push
push
add
int3
pop
mov
mov
sbb
(bad)
(bad)
jne
push
out
cmp
out
or
mov
packsswb
add
mov
add
and
or
mov
jl
add
pop
and
cmc
cmc
nop
fld
push
(bad)
adc
pop
sub
es
mov
addr16
cwde
cwde
add
adc
add
out
mov
jle
cmp
xor
mov
and
es
add
loopne
mov
push
(bad)
jmp
mov
dec
mov
out
icebp
in
xor
rcl
out
test
into
addr16
leave
pop
xchg
xchg
xlat
fiadd
out
inc
inc
xchg
pop
pop
inc
jno
and
mov
outs
or
add
mov
add
xor
inc
sbb
push
pop
call
xchg
repz
daa
pop
and
add
sub
ror
out
add
and
repz
push
pusha
sub
loop
add
idiv
xlat
xor
nop
mov
in
call
into
movs
jo
add
mov
push
fidiv
sub
icebp
es
jne
sbb
retf
out
jmp
pop
mov
out
ss
add
out
outs
xchg
push
add
shl
dec
ja
push
add
imul
pop
pop
jmp
jp
cmp
sar
jge
mov
mov
mov
jp
(bad)
jge
and
stos
stos
ret
xchg
jl
fcomp
out
push
add
jbe
mov
pop
cmp
mov
sbb
pop
out
popf
mov
push
push
cmp
inc
out
les
jg
call
cmp
es
add
daa
stc
imul
add
pop
pop
push
jge
out
repz
push
es
mov
or
es
push
std
adc
out
fld
mov
inc
out
stos
out
add
cmp
inc
dec
hlt
es
add
adc
es
fucom
add
(bad)
test
xchg
and
out
std
or
shl
inc
pop
leave
adc
rcr
push
adc
es
es
add
out
sub
sbb
cmp
int3
int3
retf
out
jmp
jno
adc
es
cmp
jbe
add
jno
xor
cmp
dec
mov
cmp
std
bound
(bad)
pop
mov
and
add
imul
loopne
call
fidiv
xor
cld
das
lock
(bad)
pop
pop
adc
out
cmp
icebp
scas
out
mov
pop
out
push
mov
es
jmp
(bad)
popa
aam
add
add
sbb
inc
add
fstp
adc
pop
rol
aam
es
inc
add
sbb
outs
outs
packuswb
add
xor
pusha
rcl
or
push
movntq
add
jmp
inc
out
jb
repnz
(bad)
outs
je
cmp
add
cwde
mov
leave
jecxz
jo
sbb
add
out
cld
add
enter
ins
stc
and
mov
fnstsw
add
clc
(bad)
(bad)
rol
out
and
es
xchg
jmp
add
(bad)
(bad)
popa
inc
out
and
call
out
dec
ins
mov
add
stos
pop
clc
clc
add
out
(bad)
pop
rol
(bad)
out
aas
push
add
hlt
mov
add
out
es
dec
sbb
and
or
or
(bad)
cmp
(bad)
(bad)
out
add
add
sbb
repnz
add
xorps
cmc
(bad)
out
cmps
add
push
add
out
repnz
pop
and
xlat
mov
es
pop
jg
inc
inc
cld
sar
(bad)
cmc
xor
inc
rol
es
xchg
aam
sar
push
jmp
repnz
cmps
add
and
add
iret
lock
sahf
lahf
int3
and
out
mov
ins
add
out
push
lods
pop
das
das
inc
jb
out
add
retf
pop
xchg
dec
dec
es
inc
mov
mov
in
or
fsubrp
es
jne
push
clc
clc
adc
add
es
cmp
lock
lahf
lahf
dec
dec
stos
out
pop
imul
xchg
xchg
pop
sbb
add
repnz
xor
add
xor
xchg
adc
test
mov
pop
popa
call
dec
or
mov
jb
jo
add
rcl
or
and
pop
adc
xchg
xchg
jg
pop
out
stc
pop
cwde
jp
add
out
jne
std
scas
add
fwait
movs
movs
rcl
out
loope
test
add
push
mov
inc
jnp
pop
cmp
add
call
cld
add
es
ret
xor
in
bound
jo
push
je
lea
div
add
jmp
dec
inc
jg
out
scas
stos
enter
popf
sbb
pop
pop
jne
es
fsub
push
add
call
cli
add
enter
rol
or
out
sub
pop
es
cmps
dec
sbb
inc
pop
in
scas
out
mov
push
or
ins
adc
mov
shufps
mov
loopne
es
lock
dec
or
pop
pop
push
in
sbb
ret
xor
dec
out
add
call
jecxz
mov
add
aam
cmps
and
retf
hlt
jmp
es
cmp
cwde
xchg
mov
sbb
loope
js
es
clc
mov
sub
fcmove
dec
mov
push
add
inc
jl
out
cmp
push
xor
mov
dec
xchg
xchg
cli
push
add
mov
ret
sbb
xor
sbb
cwde
adc
mov
es
add
test
adc
cmps
add
sub
rcl
pop
loopne
data16
xchg
xchg
and
jnp
dec
out
add
int
out
test
clc
clc
and
dec
add
add
pop
fisub
add
out
dec
mov
(bad)
add
lods
stos
imul
ret
or
jecxz
fld
out
add
mov
out
into
add
dec
lods
xor
add
iret
pop
dec
mov
pop
push
dec
dec
es
(bad)
out
clc
clc
addr16
or
(bad)
(bad)
out
add
js
pushf
jb
push
(bad)
call
add
mov
xor
mov
sbb
aaa
and
mov
mov
jp
jmp
add
inc
out
loope
arpl
out
push
and
add
out
or
(bad)
push
sti
jne
loop
cld
add
cmp
mov
inc
es
and
sub
push
adc
xor
hlt
bound
inc
out
scas
popa
or
add
add
pop
xor
es
lods
addr16
push
xchg
es
add
sub
es
push
add
scas
scas
test
clc
xlat
add
cdq
mov
mov
xor
in
es
icebp
push
sbb
cli
mov
in
neg
add
add
pop
cmp
jp
bound
adc
dec
dec
loope
add
mov
je
aam
scas
scas
add
or
and
popa
add
cmp
pop
xchg
out
outs
pushf
mov
(bad)
sbb
(bad)
push
cs
sub
jns
aad
sbb
out
call
cmc
call
fiadd
pop
push
sub
out
movs
adc
xchg
adc
aaa
pop
test
in
stc
stc
imul
loop
and
into
xchg
shl
pop
add
inc
mov
out
test
cmps
push
cmc
add
jbe
ret
loopne
loope
xchg
lock
xlat
add
(bad)
iret
adc
in
xor
push
cmp
rcl
sbb
xchg
add
dec
mov
sbb
out
jp
jne
mov
pop
daa
mov
sbb
out
adc
imul
cmp
es
adc
mov
fimul
fcmovu
jmp
and
les
pusha
aad
push
dec
push
aam
data16
es
jle
sbb
shl
xor
ins
xchg
xchg
cmps
add
xor
out
adc
mov
inc
daa
pop
and
sbb
mov
mov
sub
into
xor
out
arpl
sub
test
in
mov
clc
add
loope
pop
in
out
and
add
cmp
cmp
push
jecxz
add
in
out
paddsw
sbb
dec
inc
dec
or
sbb
sub
and
add
ja
cmp
mov
mov
add
js
sbb
nop
jo
cld
or
inc
pop
fbld
in
jb
out
cs
cmp
aad
pusha
pop
out
lahf
push
in
pop
nop
add
shl
sbb
cmp
push
jp
aas
aas
lods
outs
add
push
push
adc
jl
cmps
add
inc
aas
es
(bad)
add
inc
or
mov
add
ror
std
and
inc
sub
out
add
cmps
adc
out
push
push
mov
out
inc
iret
mov
loopne
es
xchg
outs
clc
clc
sbb
dec
add
mov
push
pop
lock
out
jae
add
push
and
sbb
(bad)
dec
jns
adc
stc
out
daa
icebp
shl
lods
sbb
ds
add
call
mov
(bad)
adc
out
inc
add
loop
push
add
pop
lea
cmc
mov
enter
push
ins
adc
clc
clc
pushf
xchg
out
es
bound
add
stos
icebp
sbb
inc
inc
xchg
add
xchg
int
out
sbb
loopne
add
hlt
cmp
add
ret
sbb
xchg
int3
sbb
add
fstp
add
out
pop
push
push
lock
popf
out
xlat
leave
and
add
or
out
or
push
rol
and
hlt
hlt
pushf
and
cli
cli
dec
add
pop
pusha
pusha
(bad)
aas
out
jae
in
mov
pop
mov
pop
es
clc
cmp
adc
ret
imul
rol
(bad)
int
pop
sbb
es
adc
in
(bad)
popf
jno
out
pop
dec
shr
add
xor
mov
out
rol
es
sbb
(bad)
or
dec
dec
es
sti
mov
mov
xor
cmp
sbb
shl
cmps
movs
out
popf
lock
ja
mov
or
es
call
nop
es
int3
cmps
jl
sahf
outs
xor
pop
jmp
shl
scas
scas
push
out
out
es
test
out
test
mov
pop
pop
jmp
cmp
or
out
ret
int3
int3
mov
pop
leave
push
es
test
shl
add
jno
add
popf
jecxz
adc
jmp
jmp
aas
imul
mov
test
mov
add
(bad)
and
enter
ret
lods
xor
dec
add
dec
add
adc
idiv
es
int3
add
es
sbb
jecxz
jns
pop
es
dec
jp
cmp
adc
loop
out
adc
es
in
jns
or
push
into
js
add
pop
push
dec
shl
push
or
add
lea
mov
retf
and
stos
add
pop
mov
out
jmp
pop
cmc
dec
push
es
fisub
jge
test
xor
inc
aas
out
add
sti
leave
leave
sub
mov
mov
or
and
es
mov
sub
jnp
add
(bad)
(bad)
xchg
es
into
and
mov
adc
loopne
pop
out
ja
mov
sub
xor
out
test
add
cmps
xchg
imul
rcl
lea
add
icebp
test
sbb
movs
add
dec
dec
cmps
push
adc
out
pusha
fucomip
stos
stos
icebp
popf
mov
mov
xor
add
rcl
adc
rcr
lea
rcl
add
repz
cwde
shl
out
jns
dec
es
stos
(bad)
jne
mov
add
xor
xchg
push
in
or
out
popa
push
add
jne
int
sbb
jmp
bt
(bad)
sub
shl
cs
add
mov
xchg
fsub
cmp
in
es
xchg
dec
xchg
jne
rol
and
in
ins
es
lods
add
sbb
xchg
bound
add
sub
mov
outs
mov
xchg
jns
dec
or
ins
out
add
cmp
ds
data16
jnp
pop
or
push
pop
pop
add
mul
loope
es
mov
jne
add
cmps
test
es
nop
fdivr
mov
mov
xor
das
xchg
cmovnp
sub
(bad)
rcr
loop
bound
jmp
stos
popa
or
mov
add
xor
loop
mov
out
out
xchg
or
pop
hlt
out
in
fsub
loope
test
xor
sub
es
push
cmps
push
mov
xchg
push
add
xor
dec
xor
out
jmp
xor
je
add
outs
popa
popa
daa
shr
xchg
mov
cs
cmps
add
fcmovnu
mov
jbe
push
nop
sti
sub
xor
loopne
jecxz
add
(bad)
and
leave
out
adc
dec
call
push
push
add
out
shl
xchg
xchg
or
out
pop
arpl
sbb
out
push
add
es
loop
imul
mov
sbb
in
pop
es
and
add
movs
movs
mov
data16
or
or
lods
add
ret
out
fild
es
cmp
je
inc
out
add
mov
popa
unpcklps
loop
or
mov
adc
(bad)
add
lods
mov
out
xor
jmp
mov
inc
cmp
lock
pop
pop
jae
out
(bad)
jecxz
mov
sbb
add
shl
pop
inc
xchg
(bad)
out
jmp
es
out
push
movs
movs
iret
add
mov
push
test
sub
addr16
pop
bound
cmp
cld
add
cwde
cwde
push
add
js
sub
es
xchg
add
fild
jge
out
pop
or
in
out
out
and
push
ret
fcomip
rcl
lods
sub
add
(bad)
loope
loopne
es
jno
pop
pop
mov
mov
in
xor
mov
fist
pop
mov
imul
add
pusha
cmp
dec
pop
test
imul
addr16
push
loopne
jne
lock
out
add
ret
es
shr
add
cmp
inc
mov
data16
ja
lock
retf
(bad)
lahf
mul
cdq
jl
jecxz
es
push
pop
imul
add
pop
push
and
std
stos
loopne
out
mov
stc
(bad)
(bad)
shl
push
cmc
jmp
in
add
adc
pop
ret
cmp
add
ins
cmp
es
arpl
lds
es
test
leave
mov
out
add
pusha
nop
mov
dec
add
das
das
pop
cld
ss
inc
add
jb
les
sub
xchg
xchg
stos
sub
test
scas
es
ins
gs
mov
imul
inc
inc
sub
or
cmp
out
sbb
mov
rol
rcl
jecxz
sub
out
(bad)
ud0
mov
test
sub
add
mov
adc
in
in
out
in
add
mov
out
add
xchg
add
adc
out
daa
jne
test
(bad)
sbb
cmp
or
das
xor
shr
fisubr
ret
pop
fneni(8087
adc
mov
jp
adc
and
es
or
(bad)
les
fsub
pop
push
and
xor
add
jmp
stc
or
add
adc
div
add
(bad)
(bad)
in
dec
xor
iret
pop
sbb
out
out
sbb
push
push
scas
in
sub
stc
out
xor
jp
lods
lods
mov
mov
shl
std
inc
sbb
popa
out
sar
push
retf
retf
cmp
aad
hlt
add
mov
xlat
out
out
mov
(bad)
nop
nop
mov
and
mov
jmp
out
jns
and
test
push
inc
xchg
out
add
cwde
sbb
jns
push
out
pusha
push
mov
out
xchg
add
bsf
out
lahf
(bad)
pop
cmp
out
and
pop
pop
sbb
push
shr
jmp
(bad)
call
dec
mul
inc
mov
add
shr
call
add
mov
out
xor
into
inc
jno
xchg
cdq
stc
enter
add
mov
and
popf
add
clc
out
call
call
inc
es
jno
add
add
fdiv
es
fsubr
mov
inc
out
loop
or
add
mov
mov
xlat
nop
nop
xchg
es
cmp
fild
jne
(bad)
fs
out
mov
test
push
mov
test
and
nop
iret
out
int
fwait
pop
pop
sbb
cmp
xor
dec
or
daa
out
mov
fs
push
rol
es
(bad)
push
xchg
xchg
push
cmps
das
or
lock
ins
out
in
pop
ss
dec
add
retf
(bad)
inc
out
(bad)
out
cmps
in
es
add
pop
pop
push
ror
es
push
add
int
out
ret
es
aas
xchg
xchg
xchg
daa
out
push
fcmovu
add
out
add
in
mov
cmp
xchg
pop
rcl
add
out
out
and
mov
outs
es
sub
mov
add
inc
pop
mov
movs
es
sbb
shl
call
push
retf
out
rol
and
jge
mov
add
test
mov
call
scas
es
add
or
aam
jle
outs
xor
test
repnz
js
mov
push
add
cmps
rol
adc
out
mov
cmp
pop
sub
cmp
es
(bad)
mov
pushf
es
sub
add
jo
cmp
adc
cmp
add
mov
mov
push
pop
out
mov
jle
popf
lock
out
push
push
add
add
ja
push
sub
xchg
(bad)
scas
xor
rcl
add
inc
push
jmp
sub
loopne
out
xchg
xchg
lds
pop
add
aam
add
es
mov
stos
sti
sti
pop
mov
mov
cmp
add
mov
mov
es
add
ins
jns
(bad)
aam
push
mov
test
cmp
sub
add
and
sub
sti
sbb
es
js
dec
dec
(bad)
push
add
repz
pusha
push
out
mov
xchg
pop
pop
and
enter
add
or
(bad)
add
rcr
sub
cmp
adc
clc
es
push
retf
scas
mov
lds
out
in
add
xchg
outs
inc
inc
dec
and
popa
push
sub
shl
aas
out
sbb
add
inc
cmps
iret
leave
leave
adc
shl
in
jns
sbb
mov
add
add
stos
enter
push
js
(bad)
test
push
jl
arpl
loop
movs
scas
add
retf
and
leave
push
xor
imul
mov
add
test
add
pop
lock
popf
out
daa
out
jmp
inc
dec
es
out
dec
add
mov
fwait
mov
pusha
es
adc
xchg
xor
loop
int3
int3
out
xor
add
enter
rol
xchg
call
add
sub
mov
mov
out
pop
jb
mov
out
mov
xchg
add
pop
cmp
mov
sub
push
or
ret
out
add
add
ins
mov
jnp
pop
(bad)
xchg
push
out
in
push
arpl
out
xchg
test
add
mov
cmps
inc
scas
es
mov
cmp
pop
daa
add
movs
cli
in
es
dec
mov
add
aas
jbe
add
sbb
fadd
add
shl
in
mov
ss
pop
std
mov
sbb
adc
iret
cs
je
mov
out
mov
sbb
xchg
out
xlat
test
cmp
xor
add
out
adc
inc
lar
add
mov
out
les
xor
cld
push
add
cmp
or
add
mov
cmps
movs
movs
sbb
mov
std
fs
add
push
dec
adc
jmp
mov
out
ins
test
pop
cmp
fcomp
stos
push
clc
mov
bswap
sub
aaa
jmp
jl
retf
mov
pcmpeqw
cmp
adc
add
jmp
sbb
js
out
stc
cmp
dec
pop
jmp
cdq
cdq
sar
fst
jo
xor
std
lahf
mov
test
mov
or
enter
xchg
or
movs
fwait
outs
out
xor
or
fst
xor
fild
jne
mov
repz
out
xor
jmp
out
jge
or
xor
cmp
cmps
and
sub
out
jns
add
cld
push
out
repnz
scas
add
push
inc
in
call
mov
xor
mov
es
bound
push
push
into
into
dec
push
out
out
sub
es
mov
adc
dec
adc
(bad)
hlt
adc
or
call
in
push
and
and
out
sahf
mov
es
outs
pop
sub
pop
neg
lock
test
popf
add
es
sbb
scas
(bad)
(bad)
je
add
(bad)
das
dec
aam
in
lods
or
(bad)
out
js
xor
pusha
add
push
es
mov
fs
add
es
mov
cmps
das
add
sbb
xchg
out
sub
dec
add
lea
sbb
test
jl
add
outs
loop
inc
mov
sub
test
pusha
pusha
jmp
mov
jne
or
add
pop
sub
add
jg
in
add
jecxz
cmps
out
sub
add
jae
sbb
int
sbb
(bad)
out
xchg
es
lods
xor
rol
lock
add
es
xor
arpl
jmp
jbe
and
popf
enter
stos
clc
sbb
adc
xchg
lods
es
sbb
push
ss
pop
out
push
add
lahf
xchg
shl
push
push
cmp
shr
es
stos
xchg
cdq
cdq
cs
fcom
out
daa
loope
es
add
add
adc
rol
pop
outs
outs
mov
(bad)
into
mov
add
test
jno
pop
pushf
vxorpd
mov
xchg
inc
jae
mov
xchg
dec
add
out
or
xchg
mov
jg
in
dec
mov
inc
jp
cld
push
push
das
add
es
nop
aad
ret
xchg
es
mov
sub
test
enter
lahf
jae
xor
(bad)
sti
add
xchg
sub
cmp
sbb
cmp
das
inc
inc
je
pop
out
int3
dec
sub
stos
loop
aas
out
lock
movs
and
sbb
sub
ja
add
push
pop
xchg
xchg
mov
in
out
imul
aaa
push
push
mov
and
add
shr
push
push
add
std
push
add
(bad)
ss
cmp
add
fwait
sbb
pause
cmc
(bad)
es
or
add
add
cmp
rol
es
sahf
or
retf
es
sbb
cmc
cmc
xor
add
mov
inc
cmps
cmps
leave
pop
add
(bad)
jp
shl
bound
jmp
xchg
out
add
xlat
es
add
sbb
arpl
call
xchg
cmps
and
mov
push
lock
scas
add
sbb
or
dec
lea
out
nop
mov
es
bound
push
je
xchg
jle
add
adc
es
add
inc
es
pop
jne
movs
je
push
push
out
lock
add
pop
pop
dec
scas
icebp
icebp
ret
add
popa
inc
inc
cld
fnstcw
div
lock
push
bound
add
or
adc
inc
push
lods
add
cdq
ja
dec
sub
pusha
out
test
hlt
cmp
push
add
mov
(bad)
out
xor
xor
in
hlt
jo
imul
test
and
cmps
sub
xchg
rcl
mov
es
jp
adc
dec
and
mov
adc
add
out
or
jge
call
pop
cdq
xor
push
dec
pusha
out
add
sbb
jl
shl
mov
add
lds
andnps
fadd
es
popa
mov
xchg
test
fadd
add
pop
in
sbb
add
es
pop
push
es
pop
movs
pusha
pusha
stos
cmp
mov
add
sbb
add
es
mov
mov
es
mov
dec
pusha
es
pop
add
shl
(bad)
scas
add
inc
cs
enter
mov
shl
dec
icebp
ins
into
adc
xchg
ins
(bad)
fadd
fadd
pushf
pushf
jge
popf
in
xchg
and
dec
stc
shr
push
out
lods
out
add
xchg
lock
cs
fadd
cmps
es
mov
scas
jmp
fcom
es
push
jne
cmp
cdq
jae
mov
movs
stc
add
push
pop
pop
cmp
nop
ror
fist
inc
mov
aaa
jae
dec
pop
in
out
daa
cld
lahf
add
call
arpl
adc
add
inc
mov
and
mov
(bad)
es
add
or
cmp
jo
ds
mov
out
sbb
ret
xor
add
js
add
adc
mov
ffreep
ret
add
jo
retf
push
out
adc
xor
and
add
adc
push
ins
gs
xchg
jl
push
push
test
jnp
std
and
xor
jno
ja
jl
push
add
dec
and
pop
out
popa
repz
cli
es
out
add
cs
jle
out
and
out
inc
add
xor
jns
js
es
jle
jne
dec
xor
and
push
jmp
es
push
mov
add
mov
cld
push
push
add
out
push
cmp
jbe
add
stos
out
stc
and
or
data16
es
mov
adc
es
fld
xchg
pop
rcl
cmp
add
sbb
sbb
mov
add
adc
and
es
mov
(bad)
aam
mov
stos
or
mov
push
sbb
out
fist
jb
add
mov
enter
or
repnz
lods
pop
es
cmp
imul
add
add
dec
pop
pop
test
push
add
xchg
gs
xor
jmp
rol
add
pop
mov
add
add
push
inc
inc
xor
pop
out
sub
mov
out
in
retf
test
outs
jl
out
cli
loope
add
sahf
addr16
cmp
scas
sti
es
push
sbb
mov
sub
jae
cmp
cmps
xor
test
ja
push
add
stos
jge
(bad)
fisub
sub
sti
rcr
pop
xchg
jbe
out
or
es
je
je
and
es
mov
pusha
pusha
mov
mov
add
pop
es
outs
scas
rcl
sbb
sub
push
sub
mov
sbb
int3
add
out
ins
das
xor
cli
sbb
icebp
add
out
add
lods
push
push
push
jbe
bound
pop
imul
push
out
sbb
(bad)
cwde
cwde
jne
xor
jmp
or
in
xor
dec
add
div
test
es
add
xchg
(bad)
jbe
gs
fdiv
add
or
jb
push
sub
out
rcl
pop
mov
add
cmc
out
add
retf
jmp
adc
cdq
push
shl
inc
mov
neg
jmp
cmp
jg
es
add
movs
loop
mov
(bad)
push
ja
stc
daa
add
add
mov
or
adc
pushf
out
(bad)
lock
bswap
imul
and
pop
mov
adc
ss
cli
cli
push
sbb
jae
sbb
add
add
pushf
rcl
or
aam
lods
lods
inc
adc
out
sbb
neg
out
jecxz
movsx
loopne
ja
add
push
ins
jp
sbb
or
mov
es
jb
add
scas
(bad)
ds
sahf
fisttp
out
stc
(bad)
ficomp
inc
adc
je
add
mov
jae
dec
cmp
enter
adc
es
int3
popa
sbb
add
xchg
bound
jns
into
dec
dec
dec
push
adc
out
mov
mov
out
push
push
and
sub
mov
push
add
mov
and
sbb
in
scas
enter
xchg
mov
jo
out
rcl
aam
sbb
sub
imul
es
add
in
inc
stc
stc
cdq
sub
out
push
cmp
stos
out
xchg
or
cmp
inc
loopne
cmp
(bad)
js
out
cmp
scas
scas
loope
cmps
out
add
cdq
push
push
pop
retf
cs
call
hlt
into
adc
test
sub
cmp
fldenv
repnz
add
arpl
scas
pop
mov
jns
inc
retf
mov
mov
es
or
and
push
sahf
mov
out
sbb
or
js
push
jmp
xor
sbb
adc
scas
dec
(bad)
adc
add
jbe
mov
mov
add
in
and
xchg
es
cmps
pop
add
lds
es
dec
(bad)
(bad)
jo
(bad)
out
out
add
dec
int3
in
rol
mov
add
movq
xor
es
rcl
call
push
loope
shl
sbb
xchg
add
ss
scas
outs
inc
inc
out
mov
in
add
out
lea
fcmovnu
push
add
data16
jp
daa
daa
cmp
pop
out
js
arpl
adc
setne
dec
mov
aaa
mov
cs
es
pop
in
or
dec
je
nop
push
ss
out
add
mov
mov
das
lock
add
(bad)
jb
mov
xchg
stos
es
(bad)
scas
outs
outs
jp
cmp
inc
push
pusha
les
cmp
sub
dec
mov
and
adc
ins
ins
cmps
push
lock
mov
xor
xlat
out
push
add
ret
ret
popf
fs
out
add
es
or
add
imul
lock
loope
das
call
push
(bad)
pusha
fs
mov
or
add
inc
and
cmp
and
shr
or
nop
dec
xor
out
add
sbb
cmc
push
ins
out
clc
add
std
sahf
inc
scas
out
repz
add
inc
imul
daa
push
add
xchg
test
out
ret
mov
jmp
pop
xor
out
sbb
lahf
add
adc
fldcw
dec
es
or
cmp
aaa
ret
(bad)
mov
jl
add
std
push
push
(bad)
into
mov
inc
out
pop
sbb
mov
out
movs
cmp
and
sub
es
inc
push
xchg
add
push
pushf
xchg
add
jge
movs
add
push
push
es
push
adc
es
stos
test
jmp
fadd
sub
pop
cmp
es
test
jg
add
push
jg
sbb
out
and
out
adc
sub
xchg
mov
add
dec
dec
cs
jmp
pop
cmp
add
ins
int3
and
mov
repnz
add
out
adc
loop
out
pop
mov
es
pop
push
sti
sti
cmps
clc
mov
pop
push
push
into
jecxz
es
mov
xlat
outs
cmc
cmc
xchg
out
add
movs
(bad)
sbb
cmp
popa
es
out
jno
adc
pushf
shr
test
cmp
movd
push
div
shr
fadd
lds
repz
scas
mov
add
fmul
xchg
out
outs
mov
add
dec
push
icebp
icebp
jo
pushf
es
add
mov
scas
adc
sub
xor
push
enter
add
jb
or
add
mov
dec
mov
outs
mov
push
out
arpl
test
mov
gs
add
fistp
cmps
pusha
pusha
(bad)
pop
or
out
dec
stos
cmp
inc
mov
mov
out
cmp
add
std
pop
add
mov
xchg
add
sbb
shl
int3
inc
das
cmp
out
inc
mov
add
sbb
icebp
icebp
fisttp
retf
outs
es
or
loopne
dec
add
mov
out
fistp
movs
inc
and
mov
jae
mov
mov
cmp
outs
ins
push
pop
out
add
inc
es
dec
pushf
mov
clc
add
mov
enter
out
shl
loop
add
addr16
push
jae
add
sahf
pop
fstp
and
div
es
nop
int3
mov
mov
sbb
sbb
jmp
(bad)
or
sahf
stos
addr16
push
push
inc
and
out
or
fwait
out
les
lock
push
push
or
adc
movs
xchg
out
loop
jge
pminsw
out
inc
cmps
cdq
xor
sub
imul
lock
repnz
loopne
adc
adc
add
arpl
movs
movs
out
add
pop
icebp
xchg
rol
les
push
add
iret
es
xchg
mov
add
es
ins
mov
push
push
cli
add
inc
inc
lahf
retf
xor
add
or
inc
(bad)
lods
lods
push
das
jo
(bad)
cwde
add
and
test
pop
loopne
out
add
ret
inc
movs
fbstp
add
ficom
out
loop
(bad)
mov
mov
sbb
adc
or
mov
out
and
add
cs
mov
cmp
xor
xchg
es
loop
mov
es
repnz
add
(bad)
mov
int
xchg
pushf
cmp
es
push
dec
outs
outs
popf
retf
add
jp
lods
lods
ret
xor
out
scas
jns
add
retf
out
mov
ret
test
mov
mul
add
std
mov
fcmovnu
aaa
or
xchg
xchg
sub
retf
out
add
add
stos
mov
sub
sbb
mov
dec
mov
les
sbb
mov
stc
out
mov
out
bts
and
(bad)
out
outs
cld
push
(bad)
movups
mov
rol
pop
jecxz
mov
js
inc
add
cli
cwde
call
add
jmp
sahf
(bad)
pop
je
out
dec
outs
push
lea
cmps
mov
jg
addr16
retf
adc
inc
adc
out
lods
jl
es
fwait
pop
in
jle
mov
xchg
es
pop
nop
nop
hlt
aad
add
out
sahf
add
and
mov
cmc
pop
sar
sbb
xchg
push
push
inc
mov
sub
es
ins
inc
inc
arpl
stc
dec
cmp
out
and
dec
push
push
or
cwde
add
gs
out
add
fmul
es
fisubr
add
shl
shl
xchg
xchg
xor
movs
imul
or
push
(bad)
(bad)
aam
add
push
mov
dec
out
cmp
jmp
outs
es
ret
ins
adc
and
sub
sub
dec
pop
es
mov
arpl
adc
mov
inc
jae
add
adc
shr
add
xchg
pop
and
mov
inc
test
pusha
cmp
add
push
mov
mov
jb
adc
lods
adc
mov
sub
enter
div
mov
add
xor
pop
jg
cmp
inc
into
add
fdivr
imul
push
daa
jmp
scas
scas
add
out
and
in
xor
out
enter
pop
add
out
push
shr
jno
mov
xchg
(bad)
aad
repnz
ret
out
loopne
add
cs
(bad)
iret
iret
mov
int
aaa
xor
add
jb
ins
es
push
fcomp
add
mov
pop
out
test
dec
out
push
xor
xlat
xlat
mov
add
inc
and
jno
(bad)
es
in
xchg
pusha
pusha
sbb
add
xor
(bad)
ror
add
and
jno
sub
int3
test
in
popa
es
cmps
loopne
(bad)
ja
aam
xlat
sub
or
add
scas
and
shl
add
out
(bad)
and
rcl
add
out
enter
cmps
(bad)
xor
adc
cmp
lea
out
jbe
add
ja
aas
cmps
xchg
xchg
push
mov
xor
cmp
(bad)
movntq
pop
inc
test
loope
call
sub
add
es
clc
clc
lock
add
cwde
loop
jmp
sub
add
mov
fsub
div
add
out
mov
mov
add
test
repz
out
add
adc
jg
scas
add
dec
jo
add
cmp
or
mov
fst
push
add
pop
mov
out
mov
adc
out
xchg
cmp
es
add
enter
pop
lea
push
bswap
jmp
scas
es
outs
leave
mov
hlt
push
add
icebp
icebp
fs
out
shl
adc
dec
in
pop
mov
lock
and
xchg
add
cmp
in
fnstsw
mov
mov
out
popf
cmp
es
out
push
push
repz
es
push
fiadd
xlat
add
enter
mov
rol
loope
out
push
adc
push
cmp
out
pushf
cmp
dec
lahf
and
add
das
je
jg
scas
out
add
sub
or
cmp
jo
sub
mov
in
movs
push
push
in
cmp
xor
movs
out
sbb
cmp
je
or
mov
call
jmp
sub
xlat
dec
add
add
cmps
cmp
mov
dec
nop
pop
lock
pop
mov
sti
dec
lods
add
mov
int3
adc
add
jecxz
inc
outs
mov
out
test
and
out
int
adc
scas
push
add
imul
and
or
movs
fdivr
xchg
jbe
mov
fadd
jno
mov
out
ror
es
sub
fbld
ds
sub
add
pushf
mov
ins
ins
ret
out
stc
in
pop
loop
mov
mov
adc
jecxz
es
pop
dec
retf
cwde
es
push
cld
fs
add
add
icebp
jno
add
dec
adc
add
aam
fidivr
mov
pop
jbe
and
out
xchg
add
gs
les
out
add
int3
sbb
mov
in
mov
loop
out
clc
(bad)
int
sbb
and
out
(bad)
nop
xchg
mov
cld
pmovmskb
mov
out
mov
mov
add
imul
es
push
test
add
rol
mov
add
in
mul
cmp
rol
jne
mov
es
pop
call
inc
shl
jp
push
outs
mov
icebp
and
(bad)
out
inc
out
mov
add
or
daa
clc
dec
out
out
sbb
jns
sub
in
sub
jecxz
and
cmp
int
adc
fld
xchg
movs
es
or
mov
out
mov
cmps
lea
bound
aad
aam
jmp
push
jo
add
dec
lahf
retf
aad
aas
inc
push
pop
pop
pop
fsub
pop
out
(bad)
retf
or
repz
xor
scas
or
adc
xor
(bad)
out
sbb
jge
sbb
loopne
out
add
add
adc
fnstenv
xor
add
mov
push
iret
push
out
add
nop
int
shl
out
xor
xor
or
xchg
out
jg
ss
pop
cwde
in
outs
cmp
or
out
jge
inc
add
lock
pop
rol
mov
pop
data16
movs
in
sub
adc
fldenv
clc
add
and
jb
xchg
xchg
icebp
cmps
inc
(bad)
paddusb
mov
ret
into
xchg
add
test
enter
call
xor
xchg
es
add
loope
xor
or
cmps
out
cmp
outs
icebp
out
add
leave
push
out
lock
aas
pop
mul
jge
jns
add
jbe
iret
out
movs
push
out
es
das
std
add
lods
jmp
out
push
ds
lahf
mov
push
test
out
add
pop
out
in
retf
add
out
sti
or
es
add
(bad)
rcl
jae
ss
mov
adc
mov
cld
or
movs
call
out
mov
pop
mov
pop
fstp
ja
jnp
aam
out
add
jno
enter
out
push
(bad)
call
dec
and
(bad)
cmp
es
js
pop
pop
in
mov
lds
jo
test
mov
inc
das
xchg
xchg
lock
adc
xchg
push
pop
push
push
dec
cmps
adc
sub
or
addr16
push
inc
cmp
cli
cli
inc
add
jae
clc
lock
add
ins
pop
fmul
jmp
add
(bad)
(bad)
out
dec
(bad)
cmp
add
jl
out
and
mov
push
push
repz
xor
lahf
add
pop
pop
xchg
cmc
movntq
jge
sub
pop
out
jns
es
push
jo
pop
mov
(bad)
fld
imul
movs
xchg
bound
xlat
pushf
pushf
add
div
jp
mov
sbb
pop
mov
outs
out
xor
pop
es
mov
inc
xlat
es
sub
mov
pop
int
add
shl
jmp
aas
push
les
out
in
add
and
adc
fsubr
mov
es
push
arpl
scas
scas
mov
mov
xchg
push
or
in
adc
xchg
es
jae
loope
add
int
sbb
jno
es
shr
pop
add
add
dec
mov
add
call
out
es
arpl
mov
adc
xor
rcl
out
enter
and
mov
aas
cdq
dec
and
cli
xchg
xchg
cmp
jne
mov
jmp
dec
sbb
add
mov
and
es
mov
daa
xor
ficomp
and
out
jecxz
es
mov
jb
inc
add
es
mov
cvtpi2ps
fwait
fwait
pop
std
adc
adc
dec
add
sbb
dec
mov
mov
add
out
jmp
add
push
loopne
or
es
test
cmp
add
pop
add
shl
adc
and
cmp
sub
inc
push
and
cmp
mov
jg
pop
pop
pop
or
mov
popa
push
add
aam
mov
add
(bad)
es
and
lock
out
nop
add
ss
pop
inc
out
jbe
add
out
sbb
jmp
jo
push
out
cmp
mov
ds
jo
add
push
out
mov
(bad)
fsub
jmp
or
add
xchg
test
adc
dec
inc
jmp
add
rol
or
xchg
dec
aad
nop
ja
add
mov
mov
jmp
out
cwde
xor
mov
out
sar
int3
out
aad
jno
add
mul
ret
cmps
mov
add
scas
shl
push
xchg
imul
fisttp
dec
pop
es
jns
stos
inc
inc
lock
in
push
repnz
out
inc
sti
sahf
or
movs
shr
lock
jg
vpsubw
or
(bad)
out
pop
sbb
add
mov
sub
es
test
fcomp
mov
out
and
js
scas
add
xchg
out
out
std
ins
es
(bad)
imul
pushf
mov
out
push
inc
sub
sub
cmps
pop
cs
in
add
call
in
mov
out
arpl
inc
mov
clc
and
rol
push
cmp
or
mov
in
loop
xchg
add
or
and
enter
pusha
jg
clc
clc
xor
fs
dec
and
add
mov
jbe
rcr
scas
jecxz
add
inc
push
cmps
cmps
and
lods
scas
scas
add
out
push
mov
cmp
out
mov
dec
xor
add
push
add
int
repnz
cld
fld
shl
adc
iret
xchg
xchg
add
mov
or
adc
sbb
ja
xor
add
add
mov
adc
and
or
lods
ss
popa
hlt
pop
dec
dec
cmp
out
jmp
or
das
and
cwde
add
xor
arpl
xor
mov
add
xchg
je
aaa
aaa
pop
popf
cmps
cmps
add
cmc
leave
(bad)
(bad)
pop
enter
mov
xchg
or
daa
push
call
and
out
xchg
add
les
shl
sbb
adc
ja
ds
cwde
sub
xchg
stos
es
shr
xor
pop
mov
cmp
gs
bound
out
das
pop
repz
sbb
arpl
cmp
mul
push
xlat
aad
inc
div
shl
out
add
(bad)
sub
inc
in
add
clc
gs
add
mov
jb
retf
add
fsub
push
sub
pop
pop
add
or
mov
push
rol
push
fs
es
jl
add
or
pusha
add
pop
stos
cmp
leave
scas
mov
sub
sub
in
out
cmp
sbb
cmc
add
out
sahf
ficom
sti
pop
pop
xchg
add
(bad)
jmp
or
mov
out
xor
xlat
jo
cwde
cwde
clc
push
aas
iret
iret
popa
idiv
add
lahf
lahf
(bad)
out
ins
pop
or
jne
add
inc
inc
test
cmps
cmps
out
movntq
in
pusha
pusha
das
pop
add
int3
nop
add
add
inc
daa
mov
or
jp
mov
mov
pop
mov
jl
push
rol
xor
shl
rol
out
xor
cmp
out
cmp
cs
mov
imul
ret
lods
mov
jmp
shl
ss
stos
stos
popa
xchg
xchg
xchg
pusha
in
out
inc
add
sahf
sahf
push
addr16
out
out
add
adc
setb
stos
fsub
paddw
jns
cmp
pop
and
add
xchg
mov
mov
mov
es
cmp
and
enter
xchg
movs
sbb
sub
outs
outs
out
call
neg
mov
add
out
pop
add
xchg
pop
add
xor
out
push
enter
(bad)
fiadd
mov
ds
lods
(bad)
mov
loop
pop
cdq
aaa
pop
and
mov
sbb
add
sti
sti
pop
jbe
out
sbb
mov
push
pusha
iret
and
push
xchg
add
icebp
xchg
jp
pushf
xor
add
dec
cs
retf
sbb
mul
arpl
loop
cmp
push
push
pop
push
es
jg
jae
xlat
add
mov
add
popa
je
jecxz
and
out
aad
(bad)
xor
es
mov
cmp
ret
cmps
lds
add
cdq
add
inc
shl
cmp
add
fwait
stc
in
xchg
xor
add
adc
mov
cmp
stc
and
add
mov
out
mov
cld
dec
icebp
out
xlat
jmp
add
push
cdq
or
out
add
cli
les
xor
sahf
pop
xchg
out
and
push
or
add
push
jb
out
jno
(bad)
repnz
loop
out
inc
xor
es
add
add
ins
dec
pop
jmp
or
cmp
jg
mov
cli
repz
mov
xchg
es
lods
push
in
in
mov
add
cmps
out
hlt
xchg
sbb
sbb
mov
(bad)
sbb
pop
ja
mov
gs
add
or
shl
imul
push
push
add
popa
sbb
mov
add
call
mov
retf
inc
into
and
out
nop
mov
mov
aam
add
out
out
loopne
sub
add
inc
cmp
dec
dec
sbb
xchg
out
(bad)
jmp
out
mov
pop
test
in
out
push
imul
add
xor
(bad)
jecxz
fdivr
retf
es
fnstenv
add
sbb
mov
sahf
add
hlt
into
into
add
out
out
dec
push
mov
fldcw
out
out
in
stc
or
lods
std
adc
push
loopne
xchg
push
out
test
iret
es
mov
je
adc
sbb
dec
in
xor
jb
fcom
sbb
cld
call
sub
cmp
add
sbb
je
hlt
cmp
xchg
add
int3
add
js
out
sub
inc
jno
pop
inc
mov
and
and
out
dec
fcmovnu
bnd
out
pushf
sub
stos
out
mov
add
fucom
nop
inc
add
jle
add
outs
mov
or
stos
cmpxchg
push
push
mov
es
pop
jae
pop
pop
add
push
out
test
pop
es
add
mov
rcr
mov
add
es
es
push
push
shl
xor
rcl
cmp
adc
data16
add
out
cmp
sbb
mov
add
xor
out
int3
inc
add
push
sbb
out
(bad)
add
xlat
xlat
push
bound
jle
cmp
inc
add
push
imul
inc
and
jno
mov
dec
jnp
fisttp
popf
std
std
not
lock
sub
adc
mov
out
cmp
sbb
add
push
mov
es
add
adc
add
stc
bound
mov
clc
add
xor
inc
test
add
jo
out
cmc
lds
call
sbb
add
pop
pop
je
add
mov
jb
es
push
and
es
movups
inc
or
push
scas
scas
pusha
int3
mov
icebp
xchg
add
es
sub
pop
pop
push
inc
add
and
jno
add
call
xor
add
(bad)
dec
fstp
push
sbb
xor
mov
shl
out
add
pop
mov
icebp
add
ret
xchg
or
out
inc
xchg
push
es
jl
into
push
push
dec
add
xor
gs
push
es
(bad)
into
imul
jg
push
std
sti
and
sbb
xchg
add
mov
fcmovnu
pop
xchg
add
xlat
pushf
into
shr
pop
mov
adc
dec
xchg
mov
pop
adc
sbb
add
or
pusha
es
add
sub
add
pop
scas
sahf
out
clc
out
ret
aas
(bad)
out
adc
retf
js
jb
cmp
sub
push
ins
add
mov
ficomp
mov
pop
mov
repz
push
movs
out
ja
mov
in
add
mov
stc
out
sti
push
mov
icebp
mov
and
das
pop
pop
mov
add
jnp
jg
es
jmp
inc
fcmovnu
sub
push
jp
sbb
pop
cwde
mov
test
popa
out
mov
pop
es
enter
loop
lock
es
mov
es
inc
int
xor
loopne
es
imul
sti
fmul
mov
sbb
es
add
mov
push
(bad)
loop
pusha
scas
lea
out
fist
xchg
sbb
pop
stos
dec
clc
push
push
mov
jo
iret
int3
inc
add
mov
shl
daa
mov
or
and
test
xor
inc
frstor
daa
jae
and
add
imul
mov
movs
mov
es
push
movs
jl
es
add
jle
call
fmul
push
jmp
xchg
cmc
add
out
mov
add
into
or
out
xchg
dec
in
push
add
cmp
mov
push
pop
sub
jmp
mov
loope
xor
sub
cmp
xchg
out
mov
out
pop
out
push
stc
sbb
adc
push
add
sub
out
rol
add
out
imul
jnp
dec
mov
out
mov
adc
inc
in
xor
push
mov
add
aaa
mov
jle
lods
cmp
les
mov
add
pop
test
es
cli
xor
sbb
add
jb
cmp
jne
nop
stos
stos
add
pop
out
(bad)
and
push
push
out
int3
and
add
sbb
jmp
mov
aas
push
pusha
mov
inc
(bad)
popf
pop
add
aas
(bad)
scas
es
out
and
cld
add
es
cwde
pop
jmp
(bad)
pop
in
xchg
fcmovu
cmp
add
out
sub
mov
out
es
loopne
ficomp
nop
ins
ins
add
adc
aad
dec
add
sbb
sbb
out
mov
js
rol
mov
mov
add
out
xchg
cmp
ins
cmp
lock
add
ror
sub
aam
out
inc
mov
fild
out
or
mov
jge
sub
hlt
hlt
div
es
fwait
mov
fprem
push
and
(bad)
mov
push
push
data16
ss
je
ret
push
outs
mov
scas
dec
dec
mov
es
mov
add
icebp
arpl
lods
test
pop
inc
sti
cli
cli
hlt
cmp
jo
out
aas
add
add
jbe
out
add
or
push
stos
fsub
add
out
pushf
ins
into
icebp
icebp
xor
shl
pop
(bad)
(bad)
loope
out
out
test
cmp
stos
and
xor
(bad)
sub
push
stc
sbb
movs
inc
jo
es
xchg
add
shl
xchg
sbb
sub
xchg
and
into
inc
push
arpl
add
adc
jmp
ret
ret
add
mov
or
jo
add
ss
add
ja
je
shl
imul
jne
out
in
test
mul
lds
jl
clc
clc
add
adc
repnz
ja
mov
lods
out
shl
popf
jl
add
sub
and
xchg
cwde
cwde
les
stos
inc
inc
mov
jmp
clc
es
sub
xchg
xchg
es
or
daa
daa
cmc
sub
push
out
je
imul
out
push
mov
add
jnp
cbw
pop
repnz
add
dec
jg
mov
in
nop
mov
push
ds
out
into
clc
movs
es
repnz
dec
adc
mov
or
add
ftst
sub
iret
pop
add
(bad)
out
sbb
add
std
inc
inc
mov
push
outs
jb
or
(bad)
data16
out
add
mov
add
icebp
xchg
es
jecxz
cmc
es
mov
add
jl
jnp
mov
mov
pop
rcl
es
add
mov
mov
fld
addr16
les
in
scas
scas
je
sub
jo
adc
or
test
and
add
nop
in
es
out
(bad)
mov
es
cmp
sbb
bound
pusha
pusha
mov
into
out
cmp
add
stos
fsubr
xchg
xchg
add
in
out
test
sub
adc
les
or
movs
add
push
test
repnz
add
ds
es
or
pop
inc
and
ins
add
add
(bad)
into
into
mov
xor
push
cmp
mov
add
push
pop
mov
sub
jbe
aas
loope
add
pop
xchg
popf
lds
out
jl
xchg
out
add
dec
add
sub
jmp
inc
and
sub
sub
mov
xchg
add
cmp
out
add
xor
movs
and
cdq
sahf
cld
push
push
mov
jb
sbb
xor
push
jne
push
sbb
iret
sahf
push
rol
outs
adc
shld
loopne
rol
test
fsub
popa
add
sbb
mov
into
pop
or
call
je
add
jno
sbb
rol
mul
or
xor
out
in
aas
add
into
dec
pop
fwait
ss
add
sub
mov
and
or
mov
mov
add
push
push
pop
or
ror
lahf
call
adc
add
xchg
or
in
or
add
mov
mov
add
lahf
lahf
inc
mov
push
add
mov
and
shr
dec
or
or
repnz
inc
adc
add
xor
sub
mul
xor
add
sbb
and
aam
out
xchg
out
test
es
cmp
mov
es
jmp
xor
out
in
es
retf
cdq
add
mov
add
iret
add
sub
shl
in
add
xor
dec
dec
xchg
es
arpl
jnp
xchg
inc
inc
jmp
out
inc
stc
je
lods
sbb
outs
adc
bound
cmp
dec
push
jmp
call
dec
push
js
push
lods
adc
lahf
bswap
mov
dec
out
mov
pusha
dec
dec
mov
aaa
enter
ret
out
add
pushf
test
es
clc
pop
es
pop
mov
mov
sbb
imul
sub
xchg
pusha
out
push
mov
setnp
leave
stos
adc
mov
out
add
cdq
add
add
iret
lock
aas
or
mov
sub
out
xchg
fst
xchg
add
out
and
es
lock
add
fcomp
and
or
sahf
jo
ds
and
enter
in
pop
add
cmc
cs
out
mov
je
out
js
pusha
pop
pop
or
cs
ins
in
in
fisttp
cmp
add
add
shl
mov
shl
push
xchg
out
mov
push
out
ret
loopne
cmp
rol
add
cmp
push
add
inc
aas
inc
mul
cmps
ins
jo
mov
lods
lods
sbb
jmp
test
sbb
mov
scas
sbb
add
loopne
jmp
sbb
rol
add
xchg
jo
add
loop
mov
mov
out
repz
shl
imul
into
into
jne
loopne
ins
xchg
jmp
mov
inc
mov
repz
sub
push
es
(bad)
lock
in
xchg
frstor
out
sahf
test
sbb
adc
loop
sbb
out
xor
(bad)
jns
add
pop
movs
add
jp
mov
dec
in
jmp
cmps
inc
out
dec
add
or
add
add
outs
sub
fisubr
popa
sbb
sahf
sahf
call
shl
in
retf
cmp
add
inc
and
mov
sbb
sbb
jo
mov
es
cli
mov
es
add
cmp
push
js
add
(bad)
outs
ja
adc
cwde
bound
add
add
ins
or
in
(bad)
out
add
add
mov
arpl
cwde
jbe
jge
pop
push
out
mov
push
fidiv
out
stos
push
loop
jle
jmp
add
xchg
fdivr
sbb
add
jo
add
push
add
jne
fwait
stos
lahf
cli
loopne
mov
movs
es
or
jb
sub
(bad)
pop
cmc
add
adc
lock
out
ror
es
aam
cmc
pop
es
cmp
out
es
std
loope
in
xor
in
add
outs
es
rcl
and
xlat
pop
sar
push
jne
add
out
push
sbb
add
add
mov
jne
mov
push
fiadd
es
add
inc
es
ds
xchg
xchg
add
test
and
shl
add
xchg
xchg
adc
scas
out
and
push
add
sub
ret
xor
xchg
fmul
pop
out
or
dec
outs
push
out
xor
repz
out
out
and
mov
cmp
jg
add
jp
out
inc
inc
mov
shr
sub
mov
push
int3
out
cmp
aas
(bad)
cmp
add
rcr
add
es
mov
jae
daa
in
adc
(bad)
out
mov
push
imul
push
ins
inc
mov
test
and
pusha
es
and
add
retf
retf
call
add
cld
sub
scas
js
es
xor
sar
or
(bad)
jp
mov
(bad)
adc
out
pusha
jecxz
es
daa
and
add
sub
es
test
or
jbe
add
movs
gs
(bad)
in
add
push
call
push
push
ja
cmp
inc
cmp
xor
jge
aad
and
out
movs
sbb
fidivr
dec
aas
ds
nop
pop
jl
add
std
out
push
and
repz
cmp
jb
in
(bad)
fcomip
out
add
mov
mov
daa
inc
out
in
inc
and
add
or
out
imul
es
mov
gs
xor
lock
jbe
add
dec
jl
xchg
xchg
add
xlat
ins
ins
mov
hlt
out
mov
imul
in
push
add
push
loope
xchg
pop
pop
jno
(bad)
add
push
es
pop
js
leave
leave
repnz
imul
mov
lock
in
sbb
rcl
mov
sub
stc
fisttp
lods
lods
lods
retf
and
div
sub
add
push
sti
aas
aas
(bad)
jb
out
xor
loop
ds
pop
es
pop
or
inc
xor
jmp
out
leave
iret
mov
pop
or
(bad)
(bad)
fs
ror
push
daa
add
es
pushf
in
div
pusha
adc
xor
and
into
fs
and
and
out
mov
jg
inc
jno
aad
cmps
push
mov
cmp
test
inc
add
inc
mov
xor
rcl
es
or
mov
jno
add
outs
into
fstp
pop
pop
retf
loop
mov
add
aad
or
xor
add
pop
xor
xor
add
lds
adc
inc
(bad)
out
out
sbb
and
ss
sbb
add
jns
enter
add
xor
sbb
ror
xor
add
out
xchg
sbb
cmp
enter
sub
mov
es
clc
xor
lahf
sub
out
sbb
es
pop
jle
nop
inc
cld
jno
add
stos
cdq
lock
add
and
jnp
in
fwait
call
es
dec
les
add
out
in
pop
pusha
es
repz
adc
ret
add
test
sbb
pop
jbe
push
es
ret
jmp
add
out
cmp
add
fwait
mov
dec
pop
stos
dec
cmp
or
out
and
shr
out
lods
or
xchg
fild
push
fsub
ja
mov
aaa
jno
add
dec
xor
es
add
xor
movs
jl
shl
loopne
cmp
es
mov
out
arpl
out
pop
sbb
add
addr16
shl
pop
sbb
add
movs
dec
lock
sbb
out
add
retf
call
xor
dec
dec
je
pushf
es
add
jb
es
out
add
dec
dec
push
push
sti
xlat
xlat
sub
cmps
mul
test
js
sbb
add
nop
sub
fstp
mov
out
je
in
dec
(bad)
out
cdq
add
cmp
mov
pop
scas
scas
add
stos
pop
pop
xchg
adc
out
es
jge
bound
adc
inc
fld
add
jg
adc
adc
add
out
cdq
sahf
cmp
add
push
add
les
push
sbb
jecxz
add
(bad)
(bad)
mov
jmp
scas
out
sub
xor
sahf
add
xor
dec
jmp
out
add
(bad)
add
jp
ret
mov
add
sub
sbb
cmp
jne
mov
pop
sti
inc
jae
pop
popa
mov
out
iret
mov
sbb
sbb
or
scas
mov
add
add
pop
pop
test
and
cmps
jo
lahf
es
xor
cmp
mov
cmp
sbb
sahf
pop
cmps
inc
out
jmp
in
add
dec
xchg
out
adc
push
test
mov
retf
mul
mov
es
xor
adc
add
aas
out
repz
rcl
cmp
das
jmp
in
(bad)
jne
pop
test
aaa
(bad)
out
stos
in
add
out
inc
cmps
lds
add
inc
out
popf
cld
mov
sbb
dec
lods
inc
sti
iret
iret
out
add
out
(bad)
fstp
(bad)
hlt
add
adc
or
(bad)
mov
rol
add
sub
(bad)
cmp
jnp
add
lock
sahf
call
std
std
iret
and
out
mov
adc
dec
test
cmps
cmp
jno
add
stos
stos
pop
scas
frstor
add
jnp
es
sbb
aas
es
inc
add
imul
add
sbb
cli
in
in
test
out
data16
popf
es
add
sbb
add
adc
shl
or
(bad)
shl
sub
popa
es
fld
jp
int3
inc
sti
call
pop
xor
push
push
fwait
sbb
adc
adc
enter
imul
xchg
add
shl
sbb
shl
sub
dec
sbb
add
sub
add
pop
add
movs
out
adc
add
out
jae
cmp
out
xor
mov
cli
in
dec
data16
sub
out
or
and
pusha
fs
push
adc
neg
xor
es
adc
mov
icebp
repz
mov
out
inc
pop
or
cmp
(bad)
in
push
pop
sbb
nop
add
sbb
dec
cmps
dec
dec
mov
call
mov
add
pop
test
out
popf
in
es
ins
scas
xor
sub
push
out
jp
add
fdivr
inc
dec
dec
jl
fs
add
pop
pop
fwait
push
mov
jmp
ret
or
pop
aad
inc
out
cmp
in
repnz
jo
out
add
jmp
retf
push
add
ins
ss
add
pop
into
out
and
es
add
mov
or
enter
adc
add
retf
(bad)
(bad)
(bad)
cmp
rcl
out
mov
cmps
add
and
cmp
hlt
out
cmovno
jnp
ret
outs
test
sbb
enter
add
jno
jmp
jnp
ret
mov
mov
out
mov
xchg
add
out
fnstenv
push
es
add
aad
es
arpl
mov
fwait
pop
xor
cmp
pushf
add
cmp
loopne
xor
out
and
mov
mov
div
jle
xchg
out
xchg
xchg
mov
add
jp
rcl
(bad)
out
rcl
mov
sub
leave
jb
xchg
xchg
xchg
add
or
xchg
rcl
ins
add
out
test
pop
shl
hlt
hlt
and
jmp
push
push
popa
and
cs
retf
rol
xchg
pop
pop
push
push
inc
mov
out
aam
xchg
pop
pop
adc
add
cmovge
and
adc
in
jnp
lods
div
in
dec
movntq
xchg
and
rol
js
out
adc
adc
mov
cdq
out
or
gs
int
out
shl
push
mov
push
mov
es
inc
loop
pop
es
or
xor
aas
add
jne
add
mov
shl
add
xlat
cwde
cwde
add
and
es
push
out
pop
pusha
push
add
push
sbb
jp
sar
out
nop
daa
or
std
pop
pop
jae
add
mov
mov
add
inc
cmp
inc
repnz
dec
movs
movs
or
out
pop
add
pop
xor
retf
es
jnp
in
rcr
es
and
in
scas
mov
xor
movs
push
pop
pop
test
sahf
out
mov
add
ffreep
push
push
add
adc
hlt
pinsrw
add
mov
xor
hlt
add
pop
in
sbb
out
cld
fadd
adc
mul
mov
sbb
push
int
into
add
fadd
mov
fisttp
(bad)
mov
sub
es
add
xor
out
retf
scas
dec
es
xchg
popa
or
leave
push
xlat
push
ds
imul
mov
out
fadd
mov
in
out
mov
ds
in
mov
xchg
xchg
cmp
fwait
out
ss
and
aaa
sbb
out
add
or
inc
out
jbe
mov
hlt
pop
aaa
adc
in
in
cmp
shr
(bad)
out
imul
fwait
pop
shl
sbb
call
push
out
sahf
mov
mov
test
xchg
stc
mov
out
jp
ret
mov
fcom
jl
ret
es
xor
inc
inc
(bad)
imul
fs
scas
scas
pop
or
les
adc
mov
rol
test
cli
pop
jg
repnz
xchg
mov
xchg
mov
dec
out
add
retf
enterw
mov
sub
add
lods
outs
test
sub
cmp
cmp
adc
cmp
inc
add
outs
aas
inc
out
xchg
adc
rol
sbb
lods
(bad)
jnp
push
push
adc
cmp
adc
add
fadd
add
out
push
shl
push
out
fs
add
inc
push
cdq
gs
mov
in
pop
clc
lahf
add
shl
fnstcw
add
dec
mov
out
xchg
sbb
es
jne
push
mov
js
scas
pop
mov
inc
mov
pop
jb
fs
xor
pushf
stos
push
cdq
push
out
xchg
movzx
rcr
mov
jg
rcl
dec
dec
add
(bad)
fwait
es
or
adc
xchg
add
es
sbb
sbb
inc
inc
fwait
sub
out
(bad)
out
xchg
xor
pop
add
outs
adc
or
jo
add
sub
xchg
add
sub
add
lea
shl
cmp
cmp
in
out
sub
fsub
sbb
sbb
lahf
push
pop
add
add
add
mov
mov
jb
es
leave
mov
out
mov
fidiv
jbe
in
je
or
adc
fadd
fadd
or
jno
adc
cmp
adc
add
mov
jne
and
out
cmp
jp
mov
push
xor
add
(bad)
fwait
pop
es
add
push
jmp
xchg
add
and
sar
movzx
out
jae
xor
jmp
lods
xchg
ds
xor
es
xchg
out
xchg
xchg
jo
pop
shl
jns
push
push
pop
inc
mov
retf
add
ret
aad
push
or
cdq
jp
out
imul
dec
xchg
add
or
(bad)
out
mov
test
in
movs
fst
loopne
(bad)
pop
ins
cmp
imul
add
jae
ins
ror
es
add
mov
mov
mov
push
add
jg
lock
push
push
mov
inc
add
lods
lods
mov
mov
aas
mov
push
push
scas
ins
aad
sub
add
cmp
dec
sbb
mov
call
push
movs
add
adc
pop
pop
pop
adc
dec
out
cmp
add
fcmovnu
add
pop
es
xchg
push
jg
sahf
add
int
jle
mov
mov
bound
aam
out
cmp
jecxz
movs
sub
cmc
out
adc
es
lock
sbb
mov
lea
jmp
push
loopne
es
aam
xchg
cmp
mov
imul
shl
ins
int3
jno
inc
repnz
es
in
out
push
push
jo
and
xchg
stos
add
inc
add
popa
out
out
mov
movs
es
ret
retf
inc
add
es
pop
push
cmps
push
push
fdiv
add
sub
popf
add
cli
das
jmp
out
loopne
in
mov
rep
mov
es
pop
inc
and
icebp
icebp
mov
out
jne
test
aaa
fwait
enter
push
push
sub
sub
or
sbb
iret
adc
pop
mov
es
mov
and
add
sbb
aam
scas
loop
mov
in
popf
sub
out
add
push
pop
pop
test
rol
(bad)
mov
lahf
ss
add
int
loop
bound
add
sahf
add
add
mov
xor
es
aam
fs
add
div
jbe
(bad)
out
add
ins
es
std
test
scas
sti
adc
dec
dec
add
out
pop
jecxz
add
scas
sbb
inc
shl
es
(bad)
fadd
or
es
fild
pusha
mov
add
clc
rcr
mov
es
arpl
sub
leave
sub
psllq
in
scas
add
pop
es
sbb
mov
mov
out
mov
movs
call
adc
add
ret
repnz
out
cmps
mov
retf
add
pop
inc
hlt
lds
pop
sti
push
aas
aas
xchg
dec
or
cmc
fsub
cld
je
aas
push
push
in
add
out
jge
test
push
add
xchg
popf
repz
jg
int3
adc
add
std
std
pusha
test
out
add
es
push
popa
loop
es
clc
xchg
lods
cmps
cmps
pop
jo
add
div
mov
outs
icebp
xor
popf
add
leave
leave
and
pop
iret
out
les
push
mov
scas
cmp
jmp
into
or
cli
inc
pop
es
dec
jb
sbb
jns
add
scas
scas
fcmovnbe
es
push
addr16
jge
inc
mov
dec
call
rcl
in
mov
pusha
pop
test
es
or
or
loope
and
nop
adc
ja
mov
xor
add
adc
inc
es
dec
out
sbb
add
inc
jmp
es
add
bound
mov
add
cmc
push
sub
movntq
in
and
inc
in
popa
stos
out
adc
es
pop
ins
ret
ret
mov
lock
cmp
or
adc
or
add
out
dec
out
shr
out
and
add
add
xlat
and
(bad)
ins
out
sbb
xchg
push
out
or
dec
test
dec
pusha
add
es
jb
add
jl
jae
push
(bad)
jge
fs
out
(bad)
mov
outs
adc
xchg
xchg
ret
add
add
es
mov
(bad)
popa
jo
in
or
mov
add
mov
add
call
out
fcomp
pop
fstp
or
out
mov
add
push
out
in
mov
repnz
sbb
jl
loop
out
movs
test
es
faddp
ja
es
sbb
add
add
pop
push
shl
sbb
add
lock
test
add
push
or
out
xchg
lods
and
das
add
shr
push
rol
lods
lods
push
inc
fisub
shl
je
pop
push
fild
es
add
inc
and
test
and
das
inc
fsub
jp
loop
mov
jl
lahf
add
out
(bad)
cmp
outs
outs
add
inc
out
sub
fldenv
outs
outs
push
add
mov
aad
fcomp
(bad)
sar
stos
lahf
adc
mov
repnz
daa
mov
fdiv
pusha
scas
es
sbb
mov
inc
and
addr16
inc
out
sbb
add
xchg
ins
imul
pop
cmp
pushf
sub
enter
out
inc
add
sbb
out
mov
push
xor
mov
add
cmp
or
adc
cmps
aam
loopne
pop
lock
out
ins
daa
nop
es
xchg
mov
inc
jb
addr16
add
gs
dec
mov
cmp
rol
mov
cmp
(bad)
es
jnp
jo
mov
dec
aas
pop
out
add
retf
retf
das
mov
jecxz
sahf
in
push
mov
inc
inc
sub
adc
ret
dec
cmps
out
loope
pusha
sbb
push
or
adc
dec
std
push
out
jns
inc
es
stos
mov
adc
mov
and
mov
pop
or
jecxz
scas
push
out
cli
push
nop
fisubr
add
sbb
das
(bad)
popa
add
add
jp
call
out
js
(bad)
rcl
xor
cwde
or
or
inc
das
jae
(bad)
mov
ret
out
cmp
jnp
push
fadd
push
mov
addr16
add
loopne
pop
fiadd
jle
pop
test
es
sbb
sbb
add
out
es
loope
int3
int3
sbb
aas
es
mov
dec
xor
out
out
cmp
lods
out
sbb
es
pandn
out
out
mov
gs
push
pop
xor
imul
dec
add
repz
rol
movs
pop
and
fiadd
call
cwde
lods
pushf
mov
sbb
add
icebp
jg
add
dec
xor
out
mov
add
mov
fistp
jge
(bad)
sbb
out
fld
jp
aaa
jmp
jecxz
div
sub
jno
add
cmp
enter
adc
dec
stos
xor
jae
add
iret
sbb
test
cmps
retf
or
std
push
stc
mul
add
pusha
pusha
jnp
hlt
je
cmp
out
add
lahf
pop
ss
add
aam
sbb
mov
popf
iret
adc
out
xchg
jle
add
loopne
add
or
pop
aaa
mov
lds
add
add
es
rcr
je
jo
jp
out
dec
repnz
retf
and
sub
enter
test
out
add
xchg
out
icebp
push
add
jno
out
pushf
pushf
pop
cmp
es
mov
xchg
(bad)
cmp
ds
fs
add
rcr
out
out
push
pusha
mov
push
pop
ja
out
pop
cmp
mov
push
jge
mov
pop
and
out
es
fdiv
div
jmp
cmp
aam
adc
(bad)
(bad)
(bad)
cld
cld
out
addr16
xor
xor
jg
pop
es
pop
nop
nop
lock
cmp
or
add
fild
jo
xchg
imul
out
mov
and
and
test
movs
enter
xor
xchg
out
push
mov
sbb
inc
push
out
rcl
dec
nop
jno
movs
adc
push
push
or
add
popf
or
call
add
inc
es
bound
push
push
xchg
xchg
pop
(bad)
pop
out
lar
add
pop
mov
inc
add
fadd
jp
out
lods
adc
cmp
out
aad
mov
fld
(bad)
pop
aam
sti
sti
push
adc
pop
clc
out
das
mov
dec
js
sbb
test
(bad)
push
mov
sub
add
mov
xchg
mov
in
aas
push
dec
add
dec
(bad)
mov
dec
out
add
test
fld
xchg
sti
rcr
mov
or
adc
add
es
jl
xor
out
cmp
das
into
into
sbb
ret
lds
mov
push
mov
mov
pop
imul
loopne
(bad)
cdq
xor
dec
out
into
add
(bad)
mov
ret
pop
out
and
sub
pop
enter
push
enter
mov
out
arpl
lds
xor
out
add
pop
mov
out
jp
aad
ret
add
and
sbb
out
push
cli
ret
inc
xchg
xor
out
jge
lock
sub
add
or
int3
cwde
cwde
outs
inc
inc
out
add
bound
xchg
xor
adc
stos
add
push
push
sbb
pop
push
es
clc
cmp
or
xchg
ja
cmovs
popa
es
cmps
push
ins
push
push
add
int3
mov
or
(bad)
out
and
pop
xor
inc
stc
les
inc
(bad)
jae
dec
es
add
arpl
repz
cmp
xchg
or
xor
out
add
add
jae
cmc
out
ret
jns
es
add
xlat
jmp
and
pop
lock
xor
add
xchg
or
out
sar
xchg
pop
popf
xchg
lds
add
xchg
add
adc
cmp
test
add
add
fdiv
les
outs
outs
cmc
repz
pop
inc
mov
out
enter
add
inc
inc
xchg
leave
jnp
mov
loope
aas
xor
clc
es
and
add
jp
out
repnz
cmp
out
inc
dec
add
xor
call
fisub
add
aas
int
es
test
push
cmp
shl
out
(bad)
es
pusha
add
call
push
retf
pop
aad
add
pop
mov
inc
push
push
sub
es
or
and
mov
add
test
test
daa
dec
sbb
es
aas
jp
mov
out
push
cmp
or
mov
loop
xchg
push
out
push
push
popf
imul
sahf
out
push
jno
rol
adc
gs
sub
add
cwde
cmp
shl
out
or
xchg
aad
mov
jo
pop
out
imul
jl
cli
cli
jno
xor
push
sbb
mov
in
cmp
jb
movs
lock
setae
adc
jns
shl
es
jecxz
cmc
cmc
jbe
data16
std
add
jl
js
(bad)
pcmpgtw
or
(bad)
sti
jb
inc
add
out
sub
es
mov
ret
or
pop
shl
add
add
adc
xor
scas
scas
ds
xchg
out
les
xchg
call
or
call
mov
add
out
js
retf
dec
dec
inc
and
mov
es
out
add
and
in
lock
cmps
cmps
mov
adc
inc
xchg
or
inc
lock
jge
test
lds
out
pop
out
mov
cmp
adc
mov
lahf
pop
popf
icebp
mov
(bad)
(bad)
cld
fld
out
dec
xor
es
push
add
das
cmp
es
mov
xchg
xlat
jae
iret
mov
pusha
push
fld
mov
cs
std
std
cmp
js
or
out
xchg
out
push
add
je
out
mov
cmps
es
lea
push
es
inc
stc
stc
mov
out
mov
add
sub
loope
push
push
add
adc
dec
xor
mul
(bad)
cmp
adc
clc
clc
pop
ror
bndldx
cmp
xchg
or
jo
fcomp
add
xor
pop
push
nop
cmp
iret
pop
jg
mov
pushf
mov
not
fwait
push
out
and
ret
ret
daa
jmp
out
add
pop
inc
inc
js
mov
(bad)
jmp
jecxz
(bad)
mov
xchg
inc
add
sub
loope
xor
cmp
out
cmp
add
stos
data16
add
out
inc
mov
and
leave
test
shl
push
push
mov
xor
repnz
sbb
les
add
loopne
adc
sahf
movs
call
push
(bad)
es
iret
shl
jbe
call
pop
popa
ins
cmp
inc
mov
pushf
(bad)
(bad)
xchg
call
sub
imul
aaa
out
jb
int3
add
mov
jnp
pop
movs
movs
cmp
ds
xor
mov
out
pop
js
es
and
repz
jo
es
ss
mov
out
or
xlat
xlat
cmp
es
ud0
fs
lds
out
cmps
inc
xor
lods
stc
jg
out
mov
fwait
add
test
imul
push
add
hlt
mov
(bad)
arpl
(bad)
sub
out
push
inc
cmp
and
dec
scas
hlt
add
int
mov
(bad)
and
add
pop
(bad)
repz
jo
jae
pop
in
out
inc
push
adc
movs
add
(bad)
es
xchg
(bad)
jbe
lds
jmp
es
and
ins
mov
sbb
mov
es
cmps
jge
xor
push
jae
mov
enter
jne
lds
xor
in
pop
push
push
xor
xchg
out
add
add
aad
add
int
dec
setb
stc
cmc
cmc
or
mov
sbb
les
dec
repnz
fwait
fwait
or
lods
lock
cli
cli
sub
jp
out
push
mov
and
adc
nop
inc
es
in
popa
bound
add
rol
es
in
pop
pop
cmp
add
mov
cmp
add
mov
push
cld
cld
sbb
inc
je
movs
add
jg
and
jbe
es
div
call
add
les
add
adc
in
xchg
or
sbb
out
push
pop
mov
adc
jnp
cmps
sub
xchg
mov
pop
jg
pop
loope
jecxz
inc
adc
out
inc
add
push
push
and
mov
add
xchg
test
mov
add
xchg
push
arpl
jle
jne
add
jbe
fcom
shl
outs
call
xchg
scas
scas
xchg
(bad)
out
inc
test
sar
mov
fiadd
mov
jo
push
out
rol
es
jno
clc
clc
inc
push
add
mov
pusha
popa
cmp
mov
and
(bad)
aaa
cld
and
pop
xchg
adc
test
retf
add
sbb
sbb
add
out
inc
cwde
aaa
es
dec
xchg
mov
add
es
lods
push
mov
mov
loope
retf
add
es
jg
adc
adc
fwait
test
icebp
push
push
fidivr
inc
add
out
inc
or
adc
ss
fld
ds
mov
sti
inc
add
(bad)
mov
jbe
jns
add
(bad)
shl
test
xchg
sub
int
sbb
add
shr
mov
mov
fwait
sbb
(bad)
loopne
cmps
add
xor
and
jns
add
cld
mov
add
stc
sub
sbb
cmp
es
in
push
jbe
pusha
mov
lock
push
pop
add
out
repnz
mov
push
push
jmp
push
cmp
shl
je
das
adc
or
xor
xlat
out
jl
sbb
cmp
dec
dec
fcomp
add
fild
or
je
cmp
inc
add
in
cmp
sbb
add
jmp
add
clts
ror
mov
out
jmp
movs
out
pop
cs
xor
push
xchg
sar
out
and
adc
dec
test
retf
sbb
push
jmp
into
into
lock
pop
pop
ins
ins
push
aas
pop
es
add
dec
es
std
adc
loope
sub
sub
sbb
add
fcmovbe
jne
jns
add
loopne
lock
jmp
nop
xchg
add
movs
cdq
mov
out
pop
sub
es
aas
push
mov
rcl
push
in
leave
pop
cmps
mov
jno
and
out
add
and
xchg
mov
out
jge
add
out
icebp
int3
fucom
xchg
lahf
mov
xchg
fsub
add
aam
(bad)
and
(bad)
sti
out
lods
sub
out
aad
ss
add
xchg
push
push
jp
stc
out
mov
jno
sahf
adc
out
sub
mov
cmp
add
in
cmp
scas
inc
inc
mov
aad
and
in
pusha
add
enter
nop
fnsave
pop
mov
out
inc
add
out
jo
add
jne
pushf
clc
loop
clc
xchg
cwde
dec
es
add
ret
pop
push
push
cmp
lods
int
add
nop
repnz
pop
add
das
das
add
in
out
mov
inc
js
mov
push
push
mov
daa
out
outs
adc
pop
pop
icebp
fcom
xor
mov
lock
add
and
add
sub
mov
xor
popf
popf
out
shl
loope
pop
dec
out
mov
cmps
inc
pop
out
jne
es
cdq
xchg
jle
out
or
adc
stc
jbe
std
add
push
push
fucom
out
inc
xor
es
adc
mov
js
add
out
mov
jno
jo
in
or
int3
xchg
cld
or
add
(bad)
loopne
add
push
aam
and
jge
add
test
adc
es
dec
lods
add
je
mov
sbb
in
stc
stc
lock
add
sub
inc
push
push
or
ins
out
pushf
xor
add
out
fsubp
out
in
jl
ja
push
mov
es
movs
pop
jmp
lock
dec
ins
pop
out
adc
inc
es
js
test
add
add
add
out
enter
mov
scas
push
or
out
adc
add
retf
xchg
test
cli
(bad)
out
sbb
or
sub
or
and
push
rol
add
push
loopne
add
sub
cmc
sub
out
jp
add
and
(bad)
mov
retf
(bad)
out
pop
cmp
mov
or
sub
nop
nop
sbb
dec
out
dec
movs
and
add
in
inc
mov
and
test
std
imul
add
add
iret
cmp
adc
add
xor
setl
or
scas
xchg
stc
data16
in
push
sub
out
loope
(bad)
(bad)
(bad)
sub
outs
mov
add
sub
jne
add
hlt
dec
scas
out
dec
(bad)
repz
std
pop
jb
out
and
shl
arpl
mov
scas
daa
es
pop
(bad)
clc
pop
push
add
dec
cmp
out
loop
sub
add
add
jbe
retf
sbb
popf
out
mov
cld
add
cmp
hlt
(bad)
in
xchg
fst
es
jbe
add
(bad)
xchg
pusha
pusha
sub
add
jle
xor
mov
push
dec
dec
ss
jns
push
jecxz
mov
dec
es
sar
add
jbe
mov
mov
xchg
es
add
addr16
sbb
pop
inc
inc
shl
cwde
xor
sbb
call
push
es
and
in
add
jbe
xchg
out
xor
pop
push
(bad)
xor
add
out
call
add
mov
imul
outs
cmp
out
imul
jg
pop
mov
or
les
out
add
es
fiadd
adc
cmp
sbb
(bad)
add
cli
repnz
add
xor
or
cmp
jge
stos
pop
pop
cmc
es
mov
(bad)
(bad)
outs
(bad)
(bad)
xchg
xchg
cmps
push
out
jl
adc
fld
xchg
out
add
es
push
add
cmp
push
das
sbb
add
or
(bad)
movlps
jne
inc
out
imul
ds
add
add
sbb
clc
out
dec
stos
add
(bad)
pop
enter
or
add
adc
add
and
pusha
dec
loope
jno
add
pop
imul
push
sub
out
(bad)
bound
call
add
cdq
xchg
xchg
add
es
mov
dec
add
sbb
sub
test
pop
add
pop
adc
jne
inc
adc
mov
sar
sbb
ja
add
push
mov
out
mov
sbb
movs
adc
shl
push
ja
mov
aad
(bad)
or
pusha
es
jl
arpl
outs
push
scas
scas
int
cld
out
fdivr
cmp
out
jbe
in
and
icebp
xchg
out
sbb
mov
push
test
xchg
add
mov
mov
jmp
inc
imul
arpl
pop
pop
cmp
lahf
adc
shr
test
rol
(bad)
and
push
push
ss
jo
pusha
add
out
imul
adc
dec
pop
es
(bad)
dec
dec
or
loopne
or
push
mov
and
cmp
add
es
cmc
adc
add
mov
out
in
add
retf
xlat
sbb
pop
sub
add
sbb
out
jns
outs
pop
pop
add
fcomp
sbb
add
out
pop
retf
push
es
mov
inc
inc
add
add
mov
rcr
add
out
adc
loope
les
test
inc
sbb
cmp
clc
clc
dec
popa
push
out
and
add
rcl
es
adc
pop
icebp
adc
ficomp
and
nop
push
push
mov
push
xor
mov
add
mov
cs
popf
das
shl
enter
std
jae
fldenv
and
(bad)
pop
pop
pop
dec
jle
or
fist
out
add
es
rol
xor
jecxz
and
fisttp
pop
inc
inc
jne
call
jo
add
cmp
sbb
push
out
pop
jno
ror
or
xor
(bad)
add
out
dec
ins
out
jecxz
rcr
fcom
scas
addr16
add
fimul
out
cdq
mov
mov
out
jbe
outs
es
cmps
dec
shr
adc
es
jae
xchg
rcr
jge
add
out
int
sub
out
cmp
add
ficom
jmp
dec
out
es
loopne
jmp
or
push
fst
inc
inc
add
sti
push
shr
or
out
ss
xchg
xchg
jnp
outs
out
add
jbe
pop
out
js
add
or
sbb
mov
daa
cld
mov
out
es
cmp
gs
cmp
shl
mov
mov
or
xchg
sbb
pop
push
pop
nop
into
into
cli
popa
retf
add
xor
dec
xor
bnd
es
sub
scas
aas
aas
and
inc
xor
out
fidiv
(bad)
jbe
(bad)
cwde
sbb
add
leave
push
mov
push
xchg
or
(bad)
inc
stc
and
xchg
es
cli
push
add
cmp
xchg
movs
sub
out
je
add
xor
jmp
aam
out
jo
pop
es
mov
in
xor
jmp
and
mov
mov
pop
imul
shl
pop
pop
in
and
psubusb
fstp
cmps
cmps
es
push
jo
add
dec
nop
mul
mov
adc
es
adc
enter
arpl
push
loopne
out
xor
add
adc
(bad)
gs
cmps
aas
nop
mov
cmp
inc
inc
out
xor
dec
hlt
jmp
adc
cmp
add
mov
add
and
pop
cmp
push
adc
sub
xor
add
es
fwait
out
mov
xor
cli
rol
xor
add
inc
shl
jg
or
add
aaa
xor
or
pop
add
mov
add
or
(bad)
icebp
mov
out
iret
inc
or
ds
retf
add
or
pusha
adc
rcl
dec
es
sti
sbb
sbb
adc
push
cmp
out
test
dec
dec
dec
dec
int
out
jle
push
aaa
(bad)
push
push
in
es
test
mov
adc
test
out
jns
inc
add
imul
fiadd
es
mov
xchg
xchg
iret
in
add
inc
pop
leave
out
jecxz
push
sbb
shl
add
mov
out
add
es
pop
fdiv
pusha
pusha
xchg
test
add
into
and
mov
mov
mov
imul
ror
adc
popf
push
pop
jnp
int3
add
cmp
arpl
addr16
mov
add
scas
scas
or
clc
add
mov
xor
and
(bad)
(bad)
add
and
adc
popa
cli
push
xor
mov
and
xor
jo
mov
add
cld
cli
rcl
jl
pop
es
les
mov
and
adc
push
out
jb
aad
jno
dec
icebp
adc
add
mov
out
arpl
cmc
addr16
cmps
cli
mov
add
repnz
es
nop
sub
add
dec
and
stos
mov
pop
pop
add
(bad)
aas
jg
add
(bad)
lea
sub
or
cmp
mov
add
mov
sub
aaa
aaa
xchg
sbb
inc
xor
ret
cwde
ret
push
fsub
mov
mov
sti
xchg
add
movs
movs
cmps
and
lods
data16
pop
es
int
sbb
push
pop
(bad)
pop
jns
sbb
leave
es
adc
rol
sub
es
pop
jg
jae
test
es
add
dec
jmp
daa
inc
xchg
addr16
out
add
aam
lods
(bad)
out
xor
fsub
push
rcr
xchg
(bad)
add
add
add
psllq
cmp
push
add
adc
in
pop
jle
add
loope
inc
inc
out
sbb
jmp
pop
out
iret
daa
(bad)
stc
stc
add
aad
in
in
test
out
or
aam
adc
cld
jg
add
sbb
pop
fs
clc
xlat
or
xchg
xchg
test
out
add
mov
add
mov
add
cmp
nop
add
pop
cli
es
jp
icebp
icebp
sti
mov
arpl
jmp
out
outs
add
es
aas
and
inc
inc
mov
add
xchg
pushf
dec
dec
mov
jle
push
add
nop
mov
shl
and
loopne
xor
add
jl
jbe
jecxz
sbb
in
clc
or
fcom
retf
retf
xchg
push
dec
add
(bad)
out
or
dec
pop
xlat
out
cmp
in
imul
std
sbb
es
xchg
add
pop
fdiv
jge
out
jb
out
pmuludq
cld
out
jp
add
pop
test
jo
mov
sub
dec
pushf
add
addr16
add
jb
repnz
cdq
cmps
xchg
stc
add
and
jecxz
ds
push
add
inc
js
inc
inc
out
pop
out
rcl
(bad)
mov
outs
out
mov
mov
js
imul
jle
cmps
out
pop
jb
es
add
adc
add
push
cmp
es
mov
out
pop
int3
dec
dec
ss
pop
out
dec
xchg
add
cmps
xor
dec
or
pop
imul
mov
out
pop
jmp
jg
dec
(bad)
xor
add
inc
sub
outs
es
dec
sar
in
jb
es
xlat
add
dec
scas
out
(bad)
xor
aas
fsub
jne
inc
add
push
push
push
test
rol
jg
out
std
xor
mov
and
mov
adc
or
xor
out
lock
jnp
adc
mov
fmul
mov
jle
mov
mov
sub
movs
mov
inc
repz
mov
out
mov
fld
ins
ret
sbb
add
add
pop
mov
std
es
sub
add
sbb
(bad)
es
fiadd
stos
es
icebp
add
(bad)
fcmovnb
outs
jl
scas
retf
push
cmp
jp
fbstp
mov
xchg
pop
jge
push
iret
add
shl
jle
cmp
xor
pop
jno
pop
pop
aad
out
out
gs
(bad)
es
out
cmp
add
mov
lods
mov
ret
sbb
inc
add
daa
out
sub
es
mov
pop
pop
shr
test
add
pop
jnp
sub
add
xor
add
out
push
jo
pop
pop
xor
or
pop
mov
rcr
imul
test
add
jne
es
push
fld
inc
jne
xlat
add
jns
and
hlt
mov
nop
es
dec
mov
jo
pop
cs
int3
add
shr
xchg
inc
mov
mov
cmp
sbb
sbb
out
sub
lea
jmp
cmp
test
icebp
scas
scas
sar
bound
adc
out
aad
mov
fiadd
push
jbe
test
icebp
retf
and
xchg
add
xor
fsubr
or
cmp
and
cli
jmp
mov
cmps
mov
int3
es
dec
ss
into
into
aam
add
cli
mov
mov
jmp
(bad)
jae
and
retf
in
jge
out
mov
shr
cmp
es
movs
fisubr
fxch
int
xor
out
rol
(bad)
movups
dec
shl
mov
jbe
dec
dec
add
dec
push
mov
add
cmp
xor
xor
and
fld
call
dec
(bad)
fisubr
ret
add
push
inc
daa
sbb
push
int
imul
mov
std
ss
es
add
cmp
retf
push
aam
daa
or
adc
rol
sub
les
into
out
push
xchg
retf
mov
mov
push
fnstcw
sbb
add
xchg
test
sub
out
cs
movs
leave
pop
aas
add
popa
loope
rcr
xchg
enter
add
cld
(bad)
out
out
ins
movs
add
retf
out
dec
sub
lock
sub
out
mov
loopne
and
add
sub
add
lods
cmp
cld
sub
jae
pop
es
fbld
js
js
jo
hlt
ins
es
shl
out
out
test
mov
out
sub
add
imul
xchg
mov
es
fisub
ins
ins
sldt
add
xchg
push
jo
mov
add
fadd
retf
add
or
out
jb
cmp
stc
ins
lahf
scas
out
div
add
xor
xchg
jbe
add
fisub
or
and
add
loopne
push
add
pop
dec
or
sbb
sar
mov
clc
clc
stc
lock
dec
add
and
dec
dec
jo
lea
cmp
sbb
es
sti
add
pop
mov
push
cmp
jb
pusha
add
mov
mov
pop
adc
dec
cmps
or
add
das
cli
xor
ficomp
lea
lods
and
out
or
mov
gs
std
xor
shl
or
pop
out
out
data16
add
push
adc
add
(bad)
sbb
mov
add
inc
sbb
cmc
lock
fcmovnu
push
dec
add
dec
loop
rcl
rol
push
mov
mov
fsub
inc
movs
jbe
(bad)
dec
xchg
sbb
enter
out
dec
mov
mov
das
es
(bad)
and
or
sbb
out
mov
(bad)
(bad)
push
dec
dec
mov
mov
loop
add
clc
(bad)
out
dec
(bad)
and
sub
std
out
sub
xor
mov
out
cdq
or
es
ror
sahf
sahf
add
movs
add
pop
imul
iret
xor
je
loop
inc
dec
es
clc
cmp
fist
add
mov
ins
pop
add
out
shr
add
dec
mov
and
add
mov
mov
out
popa
fsubr
push
enter
mov
addr16
push
mov
jecxz
jp
add
or
out
das
daa
stos
jbe
add
and
leave
scas
scas
in
add
out
inc
aaa
ret
mov
sbb
ja
add
shl
and
out
jns
out
add
ins
mov
(bad)
xchg
pop
pop
mov
lock
adc
clc
fdivr
push
push
add
xor
ret
out
cwde
movs
out
adc
push
sbb
sub
and
fimul
xchg
xchg
fdivr
mov
out
bsr
adc
cmp
add
dec
ja
scas
push
push
in
jg
out
xchg
and
out
ffreep
add
out
add
out
xor
pop
add
lds
out
push
jecxz
and
(bad)
jle
out
sbb
push
es
int3
adc
cmps
dec
mov
pop
addr16
and
test
les
add
pop
imul
out
jmp
ss
stc
shl
add
add
es
mov
add
jmp
scas
out
add
shl
es
push
push
or
ret
cmp
mov
clc
out
data16
mov
xchg
stc
out
cmp
sub
jne
cdq
add
mov
mov
jmp
out
or
fcomp
add
je
es
cmc
mov
sbb
out
and
xlat
xor
out
bound
(bad)
jl
mov
fstp
fild
sub
aam
fwait
adc
in
out
stc
mov
dec
cmp
push
test
jb
out
std
add
push
xor
movs
or
mov
clc
inc
add
icebp
cmp
and
add
and
call
push
sar
es
test
movs
out
sbb
or
sti
add
sub
sub
fwait
scas
vmovntdq
xchg
cmps
jg
jecxz
pop
and
cmps
and
pop
iret
iret
xor
mov
dec
cmp
push
jo
mov
bound
inc
es
adc
add
imul
(bad)
add
inc
data16
jns
xchg
test
push
cmp
icebp
stos
lds
xchg
(bad)
js
mov
push
or
jg
pop
xor
and
out
out
aam
es
pop
mov
dec
sar
sahf
sahf
out
add
aam
mov
out
out
inc
out
clc
push
push
mov
loopne
push
imul
mov
add
add
and
pop
mov
outs
mov
sbb
cmp
cwde
ret
out
(bad)
dec
fldenv
rol
push
jmp
es
(bad)
pop
cmp
add
scas
add
add
cld
mov
add
pop
jl
hlt
je
stc
stc
jbe
in
out
arpl
sub
out
out
lock
enter
pusha
inc
out
and
adc
add
add
push
xchg
out
and
add
lahf
fstp
pop
and
js
add
enter
dec
dec
or
out
sti
push
lods
es
mov
inc
push
push
add
and
jmp
mov
in
push
jnp
xchg
add
popf
and
dec
es
outs
daa
es
rol
cmps
cdq
cdq
or
in
ds
mov
mov
jecxz
cmp
add
imul
out
mov
es
scas
add
mov
pop
cmp
add
xchg
mov
loope
sbb
add
(bad)
shl
pop
mov
and
pop
jo
xchg
sar
xchg
scas
sub
imul
mov
add
test
jne
outs
pop
xor
pop
push
push
or
popa
adc
movs
push
push
std
sbb
es
mov
das
das
call
add
inc
inc
cmp
cmps
out
pop
call
ret
mov
add
sub
push
jns
out
movs
js
out
jne
cmps
or
add
jmp
mov
test
data16
mov
cwde
add
adc
or
test
test
mov
shl
stos
rcl
inc
arpl
xchg
loop
mov
icebp
rcl
add
mov
jae
or
inc
icebp
sub
mul
stos
test
pop
outs
or
out
out
jl
cmc
cmps
cmps
inc
dec
add
ins
fild
xor
cwde
push
fsub
call
cmps
or
lds
mov
es
int
xlat
xlat
or
call
pop
out
cmp
aaa
add
inc
pop
cmp
lods
mov
dec
dec
imul
jae
push
out
out
xchg
shl
in
gs
push
repnz
push
shl
and
mov
leave
aas
out
out
mov
mov
and
(bad)
call
imul
test
add
mov
es
sbb
sbb
inc
mov
popf
sbb
adc
add
in
aad
add
pop
imul
in
jae
and
sub
fst
jo
pop
(bad)
pushf
dec
es
add
sar
es
lea
stos
ror
jmp
out
inc
add
mov
and
test
xor
add
add
xchg
pop
adc
out
jno
lock
push
jne
ds
push
es
add
cmp
aaa
out
retf
es
push
add
ins
mov
call
addr16
cdq
add
pop
pop
out
xor
das
cld
xchg
add
xchg
les
and
stc
ret
dec
dec
dec
jmp
out
jne
shr
in
lods
mov
out
into
test
xor
test
jmp
add
out
mov
pop
lea
lahf
mov
xchg
fnstsw
test
jno
push
jo
push
cmps
leave
std
(bad)
les
mov
jo
(bad)
fwait
jbe
rcr
lds
nop
inc
dec
add
mov
fisub
cld
add
sub
out
mov
push
loopne
(bad)
sbb
clc
sbb
out
jo
into
and
adc
in
cmc
add
add
movs
inc
(bad)
aas
scas
scas
imul
push
sbb
lock
jne
add
es
xchg
jg
stos
mov
mov
cmp
in
add
scas
es
pop
pusha
add
or
mov
das
movs
fs
add
icebp
fstp
mov
fsubr
stos
pop
je
sahf
leave
add
jecxz
fwait
cmps
fidiv
mov
scas
inc
inc
jle
and
pusha
pusha
ror
out
mov
pop
add
and
arpl
out
pop
sti
in
es
cwde
or
leave
dec
cmps
xchg
rcr
add
dec
(bad)
xor
iret
xchg
dec
sti
mov
out
lods
add
add
fs
mov
es
and
jmp
icebp
add
add
imul
push
in
mov
repnz
(bad)
es
scas
dec
fwait
fwait
cmp
xor
xor
adc
jo
out
jns
add
out
cwde
stos
mov
jge
pop
cmp
out
imul
mov
add
dec
mov
jne
xchg
out
jne
add
out
jge
out
mov
mov
mov
repz
add
cmps
push
es
cld
xchg
jbe
jo
add
es
mov
lahf
lahf
clc
cmp
es
inc
push
bound
aad
es
mov
in
es
jmp
(bad)
daa
daa
std
mov
gs
cmp
cld
sub
and
sub
sub
(bad)
addr16
out
jle
movs
inc
inc
cld
add
out
adc
es
shl
adc
fs
and
add
mov
pop
add
dec
adc
push
push
mov
jmp
loope
xor
shl
jecxz
xchg
out
dec
add
bound
sbb
mov
out
xchg
mov
sbb
push
scas
test
add
out
sahf
loope
out
stos
mov
bound
mov
loopne
xchg
sbb
call
int3
int3
sar
out
cmp
push
retf
bound
cmps
xchg
es
add
rsm
stos
xchg
shl
fadd
fiadd
add
sbb
lods
lods
add
sub
out
add
mov
inc
inc
out
ja
repnz
dec
cmp
and
fs
gs
add
mov
test
add
add
mov
xlat
xlat
xchg
add
es
mov
xlat
mov
pushf
pushf
xchg
xchg
dec
out
mov
adc
stc
pop
movsx
sub
into
(bad)
jbe
mov
mov
add
es
ror
sbb
add
jg
call
pop
add
out
fisubr
lds
xor
clc
out
xlat
in
push
es
mov
lea
adc
fisttp
dec
dec
(bad)
js
es
rcl
pop
xchg
lahf
lahf
(bad)
sbb
dec
ret
pop
pop
test
push
out
dec
sbb
add
js
pop
mov
mov
add
mov
out
out
inc
gs
es
(bad)
ret
ret
inc
fcom
cli
out
jge
adc
sub
ficomp
es
cmp
les
push
adc
movs
pop
jmp
xchg
xchg
inc
add
ins
rcl
pop
jno
out
loopne
sub
es
es
pusha
outs
bound
add
add
fwait
adc
lock
lahf
mov
test
xchg
enterw
cli
xor
add
push
mov
aaa
aaa
add
dec
dec
imul
mov
add
xlat
fild
cld
bswap
retf
jle
push
mov
out
out
pop
and
jmp
mov
sub
add
mov
jle
or
push
adc
add
ror
out
add
es
pop
or
add
inc
out
in
movs
es
daa
(bad)
or
iret
jp
pop
into
into
push
ret
add
and
retf
or
loope
mov
mov
jbe
add
and
out
push
inc
(bad)
ins
movs
push
jl
pop
add
dec
es
jl
stos
mov
pop
add
push
cmp
pop
dec
mov
add
cmp
fild
out
mov
cmp
pop
inc
popa
adc
add
push
es
gs
fld
clc
js
add
push
push
sub
out
retf
test
test
scas
gs
jo
jge
add
push
imul
add
daa
jb
xor
loopne
push
std
add
push
cli
repz
cmp
and
movs
movs
jbe
bound
out
or
fldenv
xchg
mov
jp
cmp
dec
enter
pusha
xor
dec
in
add
xchg
mov
mov
arpl
add
jb
pop
mov
out
and
gs
add
in
out
fcmovnbe
pusha
add
or
or
add
out
push
sti
lds
sbb
sbb
popf
popf
pushf
or
mov
sub
scas
aam
pop
mov
add
ret
adc
out
gs
pop
pop
sar
mov
jnp
adc
or
das
scas
clc
xor
dec
add
push
dec
(bad)
cs
xchg
mov
push
pop
aad
out
pusha
adc
aas
push
outs
mov
jge
es
sbb
ret
ret
add
call
push
fs
shr
cmp
add
ins
ins
dec
hlt
mul
punpcklwd
stc
imul
xor
fistp
jo
cmp
or
add
out
push
mov
pusha
add
add
test
es
bound
shl
loop
jae
mov
jo
or
repz
dec
mov
scas
and
inc
jo
sub
adc
xor
hlt
and
imul
dec
sti
pmulhuw
fadd
cmp
std
add
leave
es
aad
or
cdq
add
aam
sub
out
add
out
es
fisubr
loope
add
lock
inc
push
xchg
cli
cli
adc
loop
call
out
jne
pop
xor
fdivr
push
dec
shr
jmp
mov
popa
or
push
xor
add
mov
out
fisubr
dec
dec
popa
add
outs
jmp
sbb
enter
dec
call
push
mov
or
push
out
(bad)
ds
push
scas
scas
shr
out
mov
add
out
test
add
adc
shl
ins
pop
sbb
add
fidiv
add
or
out
push
push
cli
add
out
out
add
cmc
sbb
out
sub
add
js
or
add
jge
cwde
xor
es
add
nop
cmps
mov
mul
or
sub
imul
in
out
fidiv
mov
add
(bad)
push
retf
add
or
test
je
and
es
icebp
jmp
inc
out
push
push
push
nop
aam
push
imul
out
icebp
dec
and
out
fld
or
push
push
jno
mov
lods
add
add
aas
adc
out
jns
fst
out
cmp
lods
scas
scas
or
out
into
mov
mov
icebp
add
push
mov
pop
mov
add
pusha
add
sub
add
(bad)
out
xchg
shr
dec
push
pop
inc
push
cwde
jl
dec
rol
shl
enter
ret
ret
xchg
inc
push
inc
cmps
dec
fwait
out
cmp
imul
out
ins
inc
shl
xchg
xor
ficomp
mov
xor
pusha
push
push
sbb
test
imul
out
bndstx
mov
add
adc
pop
rol
add
les
sbb
ret
(bad)
int3
int3
mov
pop
es
xchg
stos
(bad)
wbinvd
lds
push
push
mov
shl
es
sub
pop
pop
mov
xchg
xor
cli
cli
pop
mov
sbb
dec
lea
(bad)
add
in
ss
retf
out
bound
sub
sbb
cmp
out
lds
sub
(bad)
sbb
fiadd
xchg
add
inc
inc
inc
fsub
out
lea
stos
or
and
fldenv
mov
or
jb
mov
outs
test
inc
sahf
sahf
push
add
or
fstp
out
jle
add
out
mov
ret
add
out
sbb
jge
cmp
out
(bad)
cld
xchg
popa
popa
pop
inc
push
out
fmul
mov
mov
shr
out
inc
inc
sub
xchg
jmp
dec
mov
rcr
ds
out
add
dec
icebp
cld
xor
push
push
add
sbb
sahf
push
add
(bad)
mov
stos
sub
movs
jmp
clc
and
loopne
add
push
jp
adc
add
lock
seta
(bad)
shr
add
inc
adc
xor
out
gs
jo
push
mov
mov
rcr
xchg
xchg
(bad)
movntq
out
jle
or
loopne
scas
fcomp
rcl
std
test
mov
out
rcr
add
xor
pop
cmps
add
(bad)
aaa
out
es
das
add
dec
es
cmp
or
ret
js
(bad)
loopne
sub
out
mov
(bad)
mov
ds
dec
xchg
(bad)
cmp
jbe
out
call
rsm
mov
mov
lea
add
cmp
push
out
not
mov
push
push
mov
repz
and
inc
sbb
call
inc
sub
fsub
jbe
movs
sbb
add
(bad)
out
push
jns
es
inc
cmp
dec
add
jne
jge
cmp
mov
xor
push
div
int
add
clc
mov
aam
xchg
dec
sti
xchg
adc
cmp
jo
lock
pop
es
in
xor
fsub
cld
sbb
es
add
pop
pop
cdq
sbb
sti
and
or
and
ins
data16
pop
popf
in
imul
loopne
(bad)
and
out
add
es
scas
cmps
cmc
cmc
xchg
mov
psadbw
loopne
sar
inc
ror
jnp
cmp
xlat
jmp
enter
add
es
push
movs
add
fprem1
cmc
int3
mov
pop
add
es
adc
cmp
add
scas
cwde
fisttp
es
dec
xor
retf
cs
sbb
or
push
pop
jae
and
inc
add
movs
imul
cmp
dec
pop
jb
add
adc
pop
push
inc
out
jnp
add
mov
jne
fwait
adc
rol
jmp
or
jp
add
mov
sub
mov
aaa
mov
add
and
pop
pop
jbe
loope
cmp
call
inc
inc
movs
jg
and
test
aas
add
sbb
cmp
(bad)
or
out
outs
push
jae
xor
add
jg
hlt
hlt
inc
test
push
bound
dec
out
std
jmp
out
aas
dec
xchg
jno
sbb
mov
adc
popf
popf
(bad)
loope
out
mov
mov
in
pop
repnz
mov
jp
jne
adc
add
sub
pop
lods
xlat
add
push
mov
or
arpl
inc
out
add
jl
fcmovu
mov
hlt
out
out
popa
jg
sub
out
push
loope
inc
cmps
push
leave
es
adc
bound
out
and
xchg
scas
add
inc
push
cs
cmc
cmp
test
pop
jb
ins
es
stos
pop
push
cmp
jne
repz
fld
loop
push
push
sti
add
es
xor
xchg
outs
cdq
cmps
and
jmp
add
mov
loopne
lock
xchg
out
test
ffree
(bad)
out
push
stos
loopne
fs
inc
orps
and
out
imul
jmp
and
mov
out
out
dec
stos
fnstsw
cmp
mov
pop
xor
mov
add
adc
xchg
mov
add
push
or
and
imul
mov
out
scas
push
out
xchg
push
outs
add
out
pop
fs
pop
call
and
out
dec
jb
add
stc
inc
es
mov
in
pop
pop
add
es
iret
push
mov
xchg
xchg
jae
ins
scas
unpckhps
mov
out
push
pop
shl
inc
ds
push
add
mov
xlat
xlat
loopne
(bad)
aad
jg
add
callw
test
jmp
add
nop
shl
cs
pop
jne
cmps
jns
out
jb
and
dec
add
repnz
loopne
pop
sub
add
mul
iret
les
fld
adc
jge
or
mov
pusha
sbb
xor
pushf
jno
iret
add
mov
jne
dec
push
add
pop
pop
jno
es
and
loopne
sub
pop
pushf
pushf
sbb
test
adc
aam
movs
add
pop
or
leave
mov
push
out
add
cld
xlat
dec
stos
popf
cwde
cwde
xchg
loop
ds
mov
out
dec
inc
jns
ins
jle
add
pop
loope
in
in
rol
mov
aaa
cmp
mov
scas
scas
fistp
call
add
es
test
lods
add
lock
in
and
xor
mov
pop
pop
pop
movs
sahf
(bad)
mov
out
dec
jp
es
ss
mov
(bad)
daa
and
in
push
cmp
out
bound
mov
and
jp
call
shl
sahf
dec
push
sub
add
or
es
(bad)
ret
add
ror
sub
stos
inc
sub
or
xchg
add
test
jno
fsub
out
add
repz
cmc
jecxz
mov
popf
inc
mov
cmp
cmp
push
out
push
add
or
xor
dec
pop
es
ret
rol
int3
test
cmp
data16
clc
mov
sub
sbb
mov
cmp
fadd
mov
mov
pop
mov
or
pop
push
cli
pop
es
std
mov
(bad)
lahf
lahf
xchg
dec
add
test
dec
and
jmp
out
add
add
xor
mov
push
lock
mov
retf
and
cmp
daa
pop
dec
dec
sbb
shl
mov
mov
add
pop
xchg
mov
jmp
inc
dec
inc
add
sahf
ss
(bad)
mov
fsub
clc
jnp
fnstenv
pop
push
out
sub
cld
mov
add
add
cmp
xchg
xchg
pop
and
out
pop
xchg
fsubr
out
and
and
add
pushf
es
or
add
xchg
jg
lock
popf
popf
add
out
leave
call
jnp
mov
pop
add
das
out
into
sahf
inc
es
add
inc
inc
or
jae
fadd
dec
mov
clc
movs
add
sahf
cmc
scas
dec
out
sbb
call
ret
mov
retf
xor
jge
mov
cmps
rcl
es
ret
add
cmp
mov
lock
add
out
cmp
outs
loop
aam
add
es
push
push
pop
cmp
es
lock
sub
out
pop
add
ds
xchg
dec
sub
inc
shl
mov
shl
cmps
add
ja
mov
(bad)
ret
sub
out
jmp
aam
jno
sub
mov
lock
xchg
cld
cli
out
fldcw
out
push
popa
add
out
push
out
push
clc
clc
les
and
sbb
add
hlt
(bad)
sbb
aaa
dec
dec
add
les
pop
pop
mov
jl
bnd
adc
cmp
cmp
clc
pop
inc
out
mov
jne
fsubp
cmp
ins
add
into
out
lods
outs
out
retf
xor
iret
sub
je
sbb
sub
cld
add
rcl
ret
xor
out
out
(bad)
add
pop
shr
out
sub
enterw
and
pushf
out
inc
adc
jns
push
add
mov
cmp
out
add
adc
gs
out
add
lahf
jmp
lods
and
loopne
pop
add
fs
into
sbb
jle
lods
xchg
cmp
movs
xchg
rcl
mov
add
and
sti
xor
add
test
loop
repnz
inc
inc
(bad)
mov
cmp
add
enter
into
or
cld
es
loopne
daa
daa
loopne
adc
aam
add
mov
push
test
add
out
adc
xor
lods
jg
lea
fiadd
xchg
out
es
es
imul
sub
sti
and
cmps
jmp
icebp
jns
pop
jmp
mov
push
mov
jne
jg
addr16
xor
mov
mov
xor
add
pop
out
ins
pop
or
enter
out
jo
pusha
fcomp
pop
or
loop
je
sbb
and
fsub
shr
loope
aas
or
add
loopne
fucomip
es
mul
dec
dec
in
popf
iret
add
in
adc
jo
in
sbb
add
push
stos
mov
adc
adc
(bad)
std
std
dec
xchg
call
fsubr
out
push
es
addr16
sub
jo
mov
out
add
ror
clc
and
mov
hlt
out
mov
cmp
aam
cmp
inc
(bad)
loop
jae
xchg
(bad)
call
jmp
pop
mul
xlat
test
dec
rcl
pop
cmps
cli
sub
adc
in
inc
add
shr
cmp
popf
fwait
mov
and
out
inc
mov
jl
inc
inc
push
sbb
xchg
loope
push
in
(bad)
and
add
mov
add
mov
sbb
mov
std
add
je
shl
xor
dec
shl
into
fcmovb
in
push
and
cmp
in
dec
dec
mov
push
out
inc
loope
out
push
add
out
icebp
sub
and
mov
add
adc
dec
mov
push
push
push
pop
jl
xor
(bad)
(bad)
out
daa
adc
call
mov
out
dec
sub
ins
add
mov
cdq
jle
out
cli
push
mov
pusha
out
jl
adc
out
or
add
sbb
mov
add
es
jns
loope
add
adc
shrd
add
pop
pop
pusha
repz
mov
es
lea
shr
sbb
dec
out
add
add
sbb
es
xor
iret
call
add
sbb
out
sbb
mov
out
add
add
lahf
push
ficomp
add
push
add
es
ins
inc
inc
adc
es
es
pop
pop
fs
es
in
dec
xchg
xchg
and
xor
jns
daa
cmp
out
mov
inc
es
cmps
jne
dec
mov
add
call
mov
fld
out
mov
popa
bound
dec
movs
movs
add
cmp
sbb
imul
xlat
fild
popf
popf
sub
xchg
out
xor
call
jmp
ret
pop
sub
gs
jmp
cmp
ss
inc
cmc
outs
pop
out
xchg
mov
in
in
sti
ret
pusha
out
inc
inc
fs
out
push
add
xchg
push
call
repnz
out
enter
jo
add
mov
xchg
les
out
out
cmp
in
or
and
in
inc
adc
and
fiadd
add
cmp
shr
mov
(bad)
add
xor
cld
dec
addr16
das
pusha
mov
add
hlt
mov
mov
or
es
cmp
iret
iret
scas
dec
sub
scas
add
cld
adc
push
push
mov
sbb
xchg
adc
imul
es
add
ins
into
jbe
cmp
inc
es
jge
sub
push
add
add
jg
lock
enter
cld
dec
add
xchg
xor
pop
es
sub
nop
ds
jmp
out
inc
inc
add
jecxz
mov
nop
ret
(bad)
add
out
mov
dec
es
lahf
repz
or
stc
adc
jbe
arpl
add
sbb
sbb
sub
add
ins
cmp
adc
out
inc
es
cmps
inc
jbe
test
rcl
fcmovnu
and
add
ret
(bad)
out
lahf
push
cmp
add
mov
rol
add
dec
xchg
and
daa
push
out
add
out
stos
mov
ror
xor
xor
(bad)
(bad)
jnp
add
adc
pop
scas
loopne
inc
add
out
nop
xchg
in
mov
sbb
add
sbb
shl
sub
push
out
js
aam
loopne
xchg
nop
aas
aas
inc
adc
(bad)
jp
add
mul
fcom
fcomp
add
mov
add
out
ins
jle
sub
jo
and
out
cdq
sub
add
ret
sbb
movs
sub
adc
inc
inc
enter
loopne
(bad)
out
mov
inc
es
cli
sub
mov
fild
out
or
add
or
(bad)
jo
add
test
xchg
add
jmp
sbb
add
xadd
xor
adc
mov
mov
arpl
fisub
daa
es
fwait
push
sub
mov
add
out
retf
shl
add
dec
popa
in
mov
pop
fdiv
xor
imul
dec
mov
cmp
jmp
add
es
ins
call
es
add
jnp
adc
mov
add
(bad)
out
inc
cmc
xor
push
push
push
test
rcl
lock
xor
adc
mov
pop
dec
add
xchg
dec
lock
mov
das
jecxz
jbe
jbe
aam
lock
pop
es
mov
in
fild
push
dec
es
mov
popa
popa
and
or
mov
push
xchg
mov
sub
nop
test
(bad)
scas
out
jmp
xchg
rcl
or
out
add
xlat
out
inc
add
int3
pop
pop
mov
and
test
es
mov
cmps
inc
fs
xor
dec
add
gs
push
popf
pop
loop
push
add
test
mov
add
outs
mov
sahf
stos
fwait
es
mov
dec
dec
push
sub
add
movs
jl
cmp
xor
(bad)
ret
and
mov
sbb
lods
cs
out
dec
imul
sub
push
add
push
push
xlat
pop
outs
es
shl
jae
xchg
xchg
or
add
ret
add
jmp
not
outs
push
push
inc
add
es
sbb
repnz
sbb
rcl
pop
mov
imul
outs
outs
inc
jl
out
cwde
add
mov
mov
cmps
mov
mul
inc
xlat
inc
les
aam
add
cmp
cwde
mov
add
call
(bad)
mov
out
jmp
xchg
pop
jmp
cmp
pop
call
outs
outs
cmp
mov
mov
ja
es
clc
popa
add
stos
dec
dec
daa
inc
inc
inc
or
sbb
and
jmp
cmp
repz
es
inc
xlat
fcmovnu
lea
xor
jb
mov
push
and
xor
cli
out
stos
enter
xor
(bad)
in
popf
test
ds
xchg
and
dec
dec
inc
es
popa
pop
add
enter
lods
out
int
cdq
cdq
stc
and
lds
hlt
add
test
sbb
ror
ret
add
out
xor
retf
add
test
sub
test
sahf
fwait
fwait
jbe
mov
fsub
add
adc
(bad)
arpl
cmp
fimul
addr16
cmp
sub
mov
mov
dec
mov
push
(bad)
add
hlt
sahf
sahf
popa
jne
sub
(bad)
bound
ds
shl
test
inc
dec
pop
es
iret
mov
or
out
push
(bad)
out
in
xor
xor
adc
es
cmps
jmp
add
cs
stc
out
sub
sub
add
retf
es
add
scas
mov
jnp
add
retf
retf
pop
jmp
sub
push
loop
pop
dec
pushf
or
and
ret
es
das
mov
dec
(bad)
pop
jp
out
dec
aad
add
mov
push
test
es
inc
jmp
je
aaa
in
es
es
pop
mov
xor
pop
add
sbb
mov
push
add
ins
sub
fstp
add
xor
adc
les
add
and
mov
(bad)
xor
sbb
xor
es
add
lahf
test
xor
adc
push
es
dec
cmc
add
(bad)
ds
jnp
pop
cmp
out
jne
shl
das
add
jmp
mov
xor
mov
xchg
arpl
enter
fld
sub
inc
call
add
pop
les
push
cmp
std
rcr
inc
cs
sar
out
pop
and
jne
add
dec
xchg
out
add
cmp
out
ret
add
or
push
xor
out
scas
cs
push
clc
sub
(bad)
xor
and
add
es
repz
mov
es
push
ja
push
loope
and
add
jl
movs
mov
jle
add
into
into
xchg
jne
out
jae
icebp
jl
movs
clc
inc
out
add
lahf
es
push
push
in
fst
adc
out
cdq
push
call
out
mov
mov
out
mov
push
shl
stc
jo
rol
pop
inc
out
jne
adc
or
sbb
cs
inc
add
int3
and
jo
mov
cmp
fcmovnbe
push
push
imul
es
push
xor
nop
nop
mov
xchg
mov
mov
dec
inc
inc
inc
out
sbb
jns
add
aas
lods
rcl
(bad)
xor
add
mov
pop
pop
add
loope
es
ret
(bad)
(bad)
clc
out
scas
out
add
mov
push
push
repnz
and
or
call
xchg
xchg
mov
add
adc
cdq
pop
add
out
jb
add
pop
dec
push
es
sbb
add
and
lds
or
(bad)
out
add
or
cld
push
jp
out
cmp
retf
mov
mov
sub
sahf
out
inc
add
push
push
push
in
mov
out
sar
or
clc
es
sub
add
jecxz
sbb
cmp
dec
push
aas
aas
in
xor
dec
leave
ins
mov
out
imul
es
mov
inc
(bad)
(bad)
sbb
add
jbe
shr
pop
pop
add
call
aas
(bad)
jmp
add
out
aam
inc
cmp
lds
out
mov
jg
sub
out
or
(bad)
add
loopne
shr
mov
mov
xor
es
adc
add
clc
clc
and
add
dec
dec
stos
lds
mov
rol
mov
out
mov
and
or
jnp
pop
sub
es
add
scas
adc
imul
fadd
mov
fbld
mov
xor
lock
sbb
mov
shl
shr
and
dec
mov
inc
pop
pop
add
add
mov
jp
outs
es
rcr
adc
xchg
scas
imul
mov
rol
lods
inc
inc
sti
popa
ds
or
out
shl
ds
and
mov
cwde
or
dec
dec
or
popa
mov
bswap
or
sar
adc
or
mov
es
and
sbb
add
cmps
cmps
pusha
inc
inc
out
in
and
aaa
jae
pop
or
jae
mov
mov
pop
inc
out
sti
add
mov
and
jge
cli
mov
add
retf
pushf
pushf
pop
into
int3
es
stc
add
clc
dec
cmps
pop
es
xor
loopne
mov
dec
add
rsqrtps
aad
out
inc
sbb
fmul
jmp
add
xchg
jl
aad
mov
mov
mov
test
out
xor
and
add
push
scas
mov
out
add
daa
daa
pop
xor
jae
add
into
cmps
jp
inc
shr
add
mov
mov
les
add
sti
icebp
lock
out
pop
xor
add
(bad)
(bad)
aam
aad
addr16
pop
mov
scas
out
add
sbb
imul
jmp
ins
adc
sbb
ss
jmp
ins
ins
add
inc
out
or
(bad)
es
add
(bad)
aaa
pop
es
lds
out
and
xchg
in
cmp
mov
and
into
jl
es
popa
add
add
cmp
push
push
dec
jmp
add
shl
mov
and
es
cmp
mov
lock
es
add
aaa
sbb
mov
cwde
sub
out
or
push
sbb
ds
push
dec
inc
mov
es
mov
add
clc
es
jne
jecxz
ror
sbb
int3
aad
pusha
out
mov
push
ins
jns
push
add
rol
xor
mov
out
fwait
add
mov
jle
add
rol
sub
pop
shl
movs
mov
add
pop
aad
gs
add
pop
aas
std
mov
inc
sub
sub
test
out
loope
mov
test
dec
sbb
push
push
sar
out
cmp
movs
movs
sub
dec
jne
dec
dec
lods
dec
jmp
add
int3
(bad)
pop
pop
push
mov
add
sbb
cmp
repnz
out
push
pushf
addr16
push
add
jbe
add
adc
out
fldenv
xor
add
jnp
(bad)
cmp
jp
shl
shr
add
jl
pop
(bad)
(bad)
or
xchg
out
mov
(bad)
ja
pop
pop
xlat
cmp
out
pop
sub
jbe
mov
cwde
and
dec
call
rol
inc
inc
xor
jg
pop
imul
cmp
test
xor
push
add
call
(bad)
popf
popf
movhps
and
mov
push
add
fadd
sar
out
add
cmp
lock
add
mov
es
dec
xchg
loope
mov
call
add
jne
xchg
or
jns
cdq
push
xor
in
movs
in
and
sub
das
jbe
inc
inc
mov
call
aaa
rol
ss
add
ja
xor
inc
cmc
cmc
mov
mov
in
push
mov
bound
jmp
lea
cmp
mov
pushf
in
mov
pop
pop
add
inc
add
add
imul
dec
dec
jb
push
pop
pop
in
or
out
add
mov
sbb
xchg
jbe
js
xor
adc
jecxz
scas
add
outs
out
sbb
jne
jno
push
add
out
leave
add
pop
mov
aaa
inc
es
jae
test
inc
inc
add
out
lods
gs
(bad)
les
add
out
in
in
jns
xchg
pop
stos
sbb
add
out
sbb
or
inc
sbb
and
add
push
push
jmp
jns
xchg
ds
pop
mov
cld
out
(bad)
xor
adc
mov
lods
test
out
mov
xor
clc
stos
call
aad
in
in
out
adc
add
das
push
add
mov
out
fstp
stc
lock
pop
mov
push
or
ins
out
mov
xchg
add
(bad)
test
add
inc
push
add
xchg
sbb
into
add
add
mov
sbb
cmp
scas
scas
dec
fldl2e
mov
clc
fwait
xor
or
pop
pop
pop
jbe
dec
out
int
cmp
jle
cli
fisttp
xchg
pop
rcr
out
es
adc
out
xchg
add
mov
jae
add
jmp
cvtps2pi
cs
in
add
cld
out
xor
add
(bad)
out
dec
test
and
mov
mov
stos
int
out
add
shl
sbb
cmc
retf
sub
es
gs
fcmovu
fcom
in
pop
xchg
dec
add
and
inc
pop
dec
cmp
inc
pop
cmp
popa
push
push
cdq
inc
or
sub
push
jns
sub
nop
call
test
lahf
jne
sbb
sar
mov
lea
mov
add
or
aam
jne
(bad)
push
push
aas
out
cmc
pop
hlt
es
add
test
dec
inc
mov
std
mov
adc
ins
adc
lea
mov
mov
add
pop
pop
adc
out
out
cmp
jle
iret
iret
mov
mov
add
sub
sub
xor
loop
out
sahf
retf
addr16
or
bound
out
mov
mov
pop
cmp
es
and
into
and
add
xadd
fiadd
add
ins
sub
add
pop
jb
xor
ret
(bad)
xchg
jg
pop
mov
and
jp
adc
scas
dec
dec
test
xor
add
loope
outs
out
add
xchg
icebp
jecxz
shl
jmp
mov
sbb
ds
cmp
out
movs
cmp
arpl
pop
dec
dec
dec
or
aam
pop
out
out
add
or
scas
inc
cli
add
push
xchg
loopne
nop
nop
movhpd
add
loope
or
out
pop
out
int3
out
cmp
push
and
fidivr
imul
add
xlat
dec
out
arpl
jne
out
fwait
and
cli
mov
movs
add
xor
(bad)
(bad)
int3
adc
dec
enter
mov
xchg
cmps
jecxz
lock
sbb
pop
es
jle
imul
in
xor
rcl
add
sub
loop
cmp
jns
out
loope
lods
stc
stc
add
sub
loop
mov
push
fadd
int
mov
stc
es
cmp
(bad)
mov
pop
out
outs
pop
dec
jmp
call
add
out
popf
adc
add
jge
fistp
push
jecxz
pop
pop
jmp
into
out
iret
sub
cdq
add
or
jge
cmp
add
mov
mov
pop
adc
mov
in
jne
add
jae
fdivrp
sbb
outs
cmp
cmps
and
es
or
adc
add
pop
shr
es
rcl
add
retf
adc
out
mov
outs
push
add
and
inc
es
rol
ret
je
popf
or
sub
inc
xchg
iret
iret
out
push
jne
mov
ins
jno
jl
jecxz
push
push
outs
add
push
xor
cs
out
jge
add
and
out
jp
inc
nop
nop
pop
add
test
cmps
in
pusha
pusha
add
jge
je
cwde
add
adc
mov
psrad
xchg
repz
lea
jnp
add
out
pop
jg
or
or
ret
sti
sbb
stc
sub
hlt
cmps
cmps
loope
jmp
pop
push
sbb
out
pcmpgtw
ds
add
out
mov
push
adc
and
add
(bad)
scas
dec
dec
jnp
mov
stc
add
push
aad
pop
test
out
(bad)
dec
jno
xchg
add
out
clc
out
es
hlt
add
dec
dec
adc
movntq
and
je
enter
retf
mov
jns
xchg
push
xchg
test
mov
call
retf
xlat
bound
push
push
dec
mov
mov
out
add
out
sbb
xchg
sbb
mov
imul
je
jbe
push
push
pushf
inc
addr16
mov
xor
rol
out
jo
sar
popf
add
icebp
jg
aas
repnz
mov
lahf
out
shl
sbb
or
add
loopne
ds
mov
sub
cmp
inc
inc
add
out
sbb
aas
es
push
gs
inc
mov
cld
jb
pop
pop
into
push
fwait
adc
in
in
out
push
inc
js
push
sub
out
in
pop
xchg
xor
sbb
adc
sahf
test
add
out
jmp
jmp
jle
xchg
cmp
ins
cdq
aam
cmp
clc
adc
jb
cmp
add
popa
jmp
xlat
xlat
push
movs
in
test
sahf
dec
sbb
inc
add
call
or
stc
gs
std
out
xchg
data16
test
add
hlt
pop
fwait
es
pop
std
je
pop
stos
xchg
aas
das
das
aaa
xor
jmp
out
or
sub
rol
add
(bad)
lock
push
pop
sbb
frstor
out
jb
data16
addr16
add
(bad)
xor
or
dec
xchg
rol
add
fs
add
pop
shr
je
add
xchg
cmp
add
mov
cmp
sbb
(bad)
push
add
xchg
out
sub
adc
div
inc
add
icebp
or
push
call
jnp
jl
xor
xchg
xchg
sub
out
fcmovnbe
or
out
aas
jb
es
xor
xor
and
inc
sub
out
scas
add
dec
dec
add
xchg
out
sub
repz
ror
xor
out
movs
adc
js
in
adc
jg
aam
fsub
ja
out
sbb
cmp
pop
mov
test
cwde
es
add
lods
lods
test
(bad)
dec
dec
out
imul
add
movs
icebp
mov
lods
(bad)
push
push
retf
stc
and
movzx
xchg
inc
jl
pop
pop
loopne
cdq
out
add
jno
arpl
add
es
jb
(bad)
or
cmp
cmp
out
out
fmul
inc
inc
in
push
out
addr16
es
add
cmp
ret
add
fidivr
adc
add
aaa
inc
aam
sar
pop
repz
xchg
fcomp
inc
pop
pop
icebp
cmp
ja
pop
inc
es
pop
xor
inc
inc
sub
lea
out
je
sahf
rol
int3
mov
mov
add
cmps
cmps
pushf
pusha
dec
out
xlat
xchg
add
shr
pop
out
imul
mov
add
cmp
inc
jmp
out
mov
(bad)
mov
out
imul
sbb
out
add
fstp
pop
add
scas
cli
out
jmp
pop
out
and
cwde
cwde
in
js
out
std
pop
test
aam
lahf
fadd
fisub
retf
imul
add
ficom
jmp
and
aaa
sub
div
add
and
(bad)
call
sbb
es
icebp
push
jecxz
shl
add
push
adc
push
adc
xchg
push
add
dec
sbb
add
hlt
loop
inc
jge
inc
inc
push
bound
xchg
retf
add
xchg
(bad)
(bad)
adc
adc
add
out
cwde
mov
es
outs
add
fadd
iret
es
xchg
xchg
add
jmp
ja
mov
inc
es
cmp
shl
(bad)
(bad)
imul
repz
shl
mov
into
movs
pop
pusha
out
inc
pushf
jo
dec
push
dec
out
out
daa
pop
add
and
xor
sub
lods
ror
push
push
jnp
ret
(bad)
mov
cmp
mov
lock
es
push
(bad)
es
pop
ror
mov
cld
js
mov
loopne
test
(bad)
cmp
lahf
sub
push
cmp
pop
or
sbb
jne
es
data16
add
fisubr
and
mov
push
push
js
and
sub
add
es
xchg
cmp
add
mov
mov
std
cmp
sti
out
inc
cmp
es
movs
push
hlt
sbb
dec
mov
stc
test
out
out
jmp
bound
cmp
push
jl
add
pop
les
out
arpl
adc
out
cmp
sub
out
std
leave
jp
imul
shl
out
rcr
outs
add
test
xchg
xchg
add
xor
pop
mov
add
lods
dec
cmps
hlt
hlt
add
mov
iret
and
cmp
loop
mov
fsubp
ror
mov
loop
and
xor
out
mov
pushf
bound
enter
and
rcl
dec
xchg
shr
rcr
add
adc
mov
retf
fdiv
add
dec
xlat
mov
adc
mov
mov
push
mov
add
cmp
jge
fstp
mov
add
mov
jns
sbb
mov
enter
jge
mov
out
mov
mov
fild
es
pop
push
arpl
mov
jno
aas
xchg
mov
rcl
cmp
cmp
enter
inc
push
adc
cmp
aas
out
sub
hlt
mov
std
int
ror
iret
jmp
imul
cmps
adc
inc
xchg
cmp
xor
rcl
out
jmp
pause
test
and
cld
out
add
fst
cmp
(bad)
xchg
es
inc
fcomp
std
std
ins
psllq
ret
(bad)
adc
xchg
cdq
sub
mov
mov
xor
les
stc
ins
ins
jge
cmp
das
and
add
outs
lods
call
out
sbb
pop
es
jle
pusha
pusha
inc
arpl
retf
jg
sti
adc
mov
test
lods
pop
les
adc
and
in
and
cmp
outs
iret
lea
es
aad
shl
es
test
jg
push
das
es
sub
add
cs
dec
test
adc
and
lods
and
out
aam
pop
add
pop
out
jbe
je
or
cli
loop
mov
pop
sbb
les
add
xor
clc
clc
jg
inc
out
add
es
inc
ja
out
out
fimul
leave
sub
cwde
inc
shl
loop
mov
pop
pop
out
sbb
addr16
cwde
dec
dec
inc
lahf
jmp
mov
test
add
mov
pop
clc
clc
xchg
and
push
rol
adc
add
int
lea
arpl
jl
inc
inc
add
es
jne
into
repnz
or
es
mov
add
mul
pop
inc
cmp
add
mov
data16
xlat
push
mov
cmp
es
add
das
das
add
jle
ret
sub
mov
dec
aaa
out
test
sub
and
rol
mov
add
addr16
add
or
inc
mov
and
sbb
add
cli
loopne
out
(bad)
push
es
xchg
or
push
xchg
scas
scas
adc
dec
out
pop
dec
xchg
sub
out
add
jmp
pop
mov
inc
je
add
test
push
out
mov
mov
adc
das
push
sbb
jnp
add
sti
and
inc
push
out
mov
and
icebp
loop
clc
(bad)
stc
mov
and
inc
inc
inc
in
hlt
out
mov
xor
jne
rol
xchg
jnp
add
rcr
popf
(bad)
(bad)
push
add
int3
int3
adc
add
inc
pop
add
ins
ins
fdiv
sbb
aad
adc
out
add
imul
int
jo
sbb
cli
scas
add
pop
jmp
es
punpcklbw
shr
add
and
xor
xchg
add
je
repz
out
cld
add
sti
(bad)
dec
and
repnz
add
rol
cmp
mov
jo
add
inc
or
(bad)
and
add
push
and
aaa
rol
or
jb
or
adc
lds
inc
xchg
sub
inc
je
call
xlat
jmp
jmp
ja
jbe
mov
sub
xor
add
nop
adc
lods
lods
add
mov
adc
jno
add
and
scas
movs
sub
out
pop
imul
add
pop
inc
pop
pop
jne
cmc
out
popa
(bad)
and
xchg
cmps
out
push
xchg
test
or
add
mov
adc
outs
(bad)
in
in
arpl
mov
pop
pop
shr
es
cs
ins
out
out
and
aam
sub
push
jp
jecxz
adc
test
adc
ffreep
imul
hlt
out
test
cmp
pop
icebp
mov
and
mov
ds
dec
inc
pop
pop
or
jno
movs
aaa
add
fldenv
nop
and
adc
push
retf
jp
add
sub
mov
out
add
clc
ins
adc
imul
rol
jp
es
fwait
in
xchg
pusha
mov
jg
fisub
sbb
icebp
add
xor
int3
int3
jbe
inc
out
xlat
sbb
es
mov
fsub
sub
push
cmps
cmps
mov
add
outs
aas
aas
call
(bad)
es
pop
xchg
enter
add
arpl
mov
call
jp
es
mov
push
jbe
and
adc
es
xchg
scas
test
sti
sti
cmp
fucom
imul
or
push
adc
out
mov
add
popa
sub
ds
out
sar
sub
outs
inc
add
scas
fisttp
add
inc
dec
dec
lock
add
inc
(bad)
jmp
es
(bad)
pop
push
push
or
or
out
jmp
mov
hlt
push
push
mov
add
das
das
ret
nop
mov
enter
sbb
stc
stc
sub
jl
add
sti
je
jl
aad
lods
test
cli
int
movs
lahf
lahf
cdq
clc
cmp
and
jbe
inc
inc
and
loop
add
mov
cmp
cli
out
sti
mov
es
(bad)
outs
(bad)
setl
sub
sub
pop
add
mov
call
fdivr
xchg
in
out
fs
mov
loopne
in
or
sub
pop
out
dec
mov
es
cwde
add
dec
dec
rcr
es
movs
loop
cli
cli
fiadd
fwait
and
or
jns
add
test
(bad)
in
leave
add
or
imul
repnz
adc
out
out
add
jnp
shr
add
jmp
mov
movs
add
pop
pop
pop
jbe
mov
xchg
out
sti
mov
es
addr16
not
push
add
es
(bad)
out
xor
test
test
add
in
bt
movs
jg
out
add
mov
(bad)
add
mov
ret
gs
pop
es
xor
adc
loope
mov
mov
int
not
mov
adc
xor
sti
cmc
add
shr
adc
add
adc
xor
enter
out
sbb
es
cdq
add
repz
adc
std
add
cmc
aaa
outs
stos
sub
repnz
push
add
mov
jo
loope
pop
pop
add
sbb
mov
xchg
retf
add
lea
cmc
push
clc
lds
xor
ror
fs
jb
out
sub
pop
lock
cmp
leave
daa
and
add
out
sub
cmp
test
cld
es
mov
add
loop
movs
aam
(bad)
mov
ror
mov
out
add
fisub
push
cmp
sbb
push
cmp
xor
pop
leave
fdivr
lods
adc
sbb
add
push
push
sub
jns
aam
bound
add
inc
iret
iret
shl
add
out
jmp
xchg
out
xchg
mov
add
dec
test
shl
ja
jge
add
push
push
or
fwait
mov
movs
dec
cmp
es
add
jb
add
in
pop
pop
stos
add
retfw
fimul
mov
test
in
out
xor
add
cmp
jb
out
jae
fsub
loope
add
sbb
ret
dec
dec
mov
fidiv
es
add
lds
in
in
jno
adc
cs
jmp
in
js
dec
lds
or
dec
mov
add
dec
or
out
and
test
add
fs
movs
cmp
add
lahf
inc
inc
ret
out
lea
mov
add
es
or
add
scas
scas
xor
xchg
adc
sbb
inc
out
pop
mov
es
add
add
rcl
cmp
es
push
les
popf
xor
ins
push
mov
dec
and
imul
push
es
and
aad
jge
mov
adc
jmp
ja
add
out
pushf
and
shl
cmp
out
push
aad
mov
push
stos
add
inc
jmp
(bad)
jmp
add
mov
and
fidivr
aad
out
or
arpl
test
in
push
add
dec
icebp
es
rol
cli
sub
out
jecxz
(bad)
add
data16
cmps
jl
push
dec
add
or
aam
jno
es
lock
push
es
mov
xchg
inc
sti
xor
jg
call
or
jae
add
movs
scas
int3
out
xor
add
out
int
pop
es
or
adc
mov
cmp
dec
dec
inc
and
out
pop
jp
es
jb
jecxz
mov
push
out
es
xchg
imul
js
push
cmps
es
jge
mov
mov
mov
xor
outs
mov
jge
ins
fbstp
out
push
fadd
es
loop
out
fwait
pusha
je
add
inc
aas
test
fsub
xchg
stos
mov
clc
sbb
lock
pop
and
std
push
xchg
sub
push
xchg
xchg
pop
stc
xchg
out
cmp
mov
enter
pop
mov
bound
mov
ficom
stos
movs
movs
cmp
mov
out
jmp
add
mov
push
mov
out
stos
add
es
aaa
rol
call
test
es
or
add
and
aas
outs
pop
sub
fiadd
out
(bad)
dec
sar
fmul
pop
popf
(bad)
(bad)
ds
imul
sub
mov
ftst
in
add
pusha
(bad)
loop
out
ror
mov
clc
jl
add
mov
iret
jg
jmp
fmul
es
pop
jle
imul
ss
rcr
sub
cmp
daa
xlat
fsub
and
adc
fild
adc
jns
and
(bad)
loopne
mov
popa
pop
icebp
out
xor
test
push
or
sar
out
add
mov
imul
es
sbb
pop
es
dec
sub
mov
jp
mov
xchg
pop
ins
aad
inc
sahf
add
out
sub
lds
mov
icebp
or
fstp
sbb
es
lods
pop
(bad)
jmp
in
inc
pusha
das
das
cdq
jge
out
pop
mov
sti
mov
std
add
ss
repnz
test
and
rcl
movs
les
cmp
add
or
iret
es
xchg
cld
aad
outs
inc
inc
sbb
sbb
es
sub
call
lods
pop
add
lahf
jmp
mov
pop
bound
adc
add
scas
inc
cmps
cmps
xor
pop
es
vmovupd
(bad)
sbb
sub
mov
imul
mov
std
or
fstp
iret
sub
pushf
call
fcmovnu
and
adc
adc
iret
xlat
inc
cmc
(bad)
adc
push
out
mov
mov
ds
pop
pop
addr16
cdq
mov
out
test
in
shl
pop
es
xlat
daa
add
cli
and
or
inc
mov
out
add
int3
int3
pusha
ins
(bad)
out
mov
mov
mov
mov
add
dec
push
mov
push
call
mov
push
es
add
js
adc
add
out
mov
jno
adc
mov
repnz
out
inc
lea
es
add
xor
scas
out
add
push
push
push
shl
addr16
ret
arpl
mov
test
add
fsubr
and
dec
loopne
fs
and
lock
mov
dec
add
out
imul
xor
aad
es
in
cmp
es
jmp
pop
mov
clc
adc
(bad)
pfnacc
out
loopne
dec
ret
sbb
mov
or
inc
ins
add
mov
es
pop
cld
xor
add
cmp
out
mov
or
cmp
cmc
xchg
inc
rol
cmp
push
bound
push
es
push
add
sub
cmps
rol
add
dec
push
retf
test
rol
in
es
retf
cmps
fild
iret
test
call
add
out
out
fs
jae
xor
xchg
out
popf
push
push
es
call
jecxz
inc
out
sub
pop
out
adc
adc
out
jg
es
out
xchg
(bad)
fsub
add
out
add
retf
cld
cld
inc
inc
xlat
out
and
adc
lods
out
jg
add
or
mov
sub
imul
out
int
mov
cmp
inc
jge
scas
(bad)
xchg
mov
out
inc
mov
sahf
outs
outs
das
(bad)
cmp
or
dec
mov
jbe
or
iret
pop
add
aaa
sbb
jb
pop
mov
test
inc
mov
cmp
jo
es
push
lock
cwde
es
adc
add
out
aas
adc
out
or
and
and
shr
es
mov
pusha
ins
mov
out
das
movs
cmp
add
es
es
retf
call
mov
dec
add
mov
add
test
out
mov
(bad)
imul
fisub
fcmovu
add
pop
out
mov
loop
cmp
jge
out
push
add
dec
dec
xchg
mov
out
inc
lods
add
frstor
mov
mov
out
int
cmp
xchg
mov
sbb
cld
es
add
jns
rol
xor
xchg
xchg
jmp
ret
into
into
add
cmp
inc
ret
data16
sbb
ficomp
inc
repz
add
movs
es
outs
xor
add
cwde
rcl
push
fsubr
or
mov
cld
add
adc
movs
cmovne
cmp
add
sbb
xchg
ins
icebp
inc
push
add
xchg
mov
hlt
and
aas
jle
mov
(bad)
mov
shl
es
sub
add
push
es
sbb
rol
push
sahf
xlat
pop
test
in
lahf
and
xchg
fcomp
sbb
loopne
cmp
adc
mov
(bad)
bswap
cmp
out
loope
or
sbb
cmps
jo
cmp
jl
es
fcomp
xor
add
out
inc
jl
cli
cli
sbb
js
pop
int
push
push
xor
jae
stc
xchg
out
(bad)
lock
shl
add
out
or
xchg
cmp
sbb
push
es
mov
mov
mov
add
and
add
adc
fdiv
es
jno
add
pop
push
mov
out
sub
cmp
add
and
add
adc
cmp
dec
scas
out
xchg
imul
add
sbb
sub
es
mov
retf
retf
push
jb
dec
out
sbb
not
in
out
popf
mov
es
add
sub
push
push
jp
fs
lea
jae
sub
xor
push
out
xor
test
inc
out
nop
sub
push
push
loop
cmp
mov
cmp
or
es
xor
add
int
dec
xchg
xchg
fisttp
loopne
es
cmp
add
fcmovu
jbe
test
sub
jnp
sbb
and
call
outs
outs
iret
add
cmp
(bad)
ja
call
jnp
inc
(bad)
iret
mul
lods
inc
push
ret
cwde
loope
add
fld
cmps
cmps
loop
jle
sahf
dec
adc
unpckhps
shl
sar
pop
aas
push
out
inc
jae
div
xor
add
or
repz
push
add
mov
push
push
aaa
mov
sbb
dec
fcomp
dec
shl
push
push
pop
inc
jne
std
hlt
and
out
or
mov
int
push
outs
outs
pop
or
out
xchg
mov
movs
retf
xor
jae
jns
lods
sbb
add
js
dec
mov
push
repnz
push
fcmovnu
sub
and
cmc
xchg
add
out
xchg
dec
lock
push
mov
hlt
sbb
pandn
out
movs
ret
in
inc
jmp
pop
push
and
sbb
add
(bad)
in
mov
add
div
inc
pop
pop
out
jae
add
out
bound
ins
shl
lock
inc
es
in
add
dec
mov
and
out
js
sub
mov
movs
frstor
enter
add
into
sub
adc
xor
out
xchg
std
mov
call
ja
add
mov
add
(bad)
jl
or
or
jae
push
pop
sub
out
je
and
out
lock
es
jle
xchg
xchg
jo
pop
es
push
adc
inc
outs
pop
fimul
add
mov
jne
and
mov
push
(bad)
mov
call
or
pop
jmp
inc
inc
adc
adc
push
out
push
xor
and
sub
es
add
sbb
scas
xchg
loopne
je
lock
mov
jmp
add
mov
lods
sbb
pushf
and
sbb
add
in
sti
dec
pop
add
cmp
jg
xchg
xchg
adc
lahf
das
scas
out
mov
out
lock
push
out
jecxz
std
aas
aas
loopne
out
imul
es
rol
mov
es
retf
hlt
mov
sbb
add
dec
out
stos
sub
fild
push
xchg
jno
dec
sahf
push
es
add
cwde
xchg
dec
lahf
cld
pop
repnz
xor
add
adc
repz
ins
add
btc
mov
sbb
cmp
es
push
arpl
es
(bad)
(bad)
add
xor
popa
shl
(bad)
int
out
and
fcom
popf
add
es
lock
call
mov
push
es
sbb
js
es
add
dec
es
xor
xchg
xchg
inc
mov
es
pop
stos
call
cld
es
in
clc
sub
add
dec
pusha
pop
mov
mov
in
or
add
data16
shl
ds
add
mov
xor
inc
xor
adc
ja
jle
mov
out
inc
dec
push
xor
out
add
es
sub
dec
es
jmp
out
cmp
mov
mov
out
popa
ret
push
add
out
jmp
push
out
xchg
ja
add
loopne
es
or
mov
jecxz
into
(bad)
(bad)
out
(bad)
xlat
sar
push
ror
sub
test
cdq
jbe
repnz
cmp
ret
push
push
add
mov
clc
mov
mov
aas
pop
bnd
cmp
cmp
add
cmp
inc
push
dec
add
sbb
cmc
ja
add
in
cmp
and
cmp
add
jnp
mov
xchg
outs
add
mov
test
ret
or
add
fidiv
mov
xchg
add
leave
dec
push
xchg
out
mov
bswap
add
mov
hlt
xor
sbb
pop
push
popa
jp
mov
mov
push
sbb
and
shl
es
call
arpl
sbb
jne
jmp
xor
inc
sbb
sub
retf
add
push
rol
jno
add
addr16
in
dec
mov
jno
pop
mov
(bad)
mov
(bad)
ja
add
int3
xor
add
push
and
lahf
add
es
aam
pop
pop
pop
push
add
outs
stos
(bad)
out
call
inc
xor
and
les
mov
xchg
(bad)
(bad)
cmp
(bad)
push
jmp
es
sub
mov
add
icebp
cmp
mov
clc
add
out
(bad)
or
add
push
dec
outs
inc
lods
out
je
or
pusha
mov
push
push
push
adc
and
mov
or
dec
add
mov
es
sti
imul
int
popfw
dec
in
add
inc
addr16
ret
and
ins
jge
mov
popa
jno
add
es
mov
pop
pop
pop
ds
add
in
adc
add
xchg
cmps
ss
add
hlt
jmp
out
lods
outs
adc
jmp
jg
into
dec
enter
fsub
add
jo
repz
xchg
add
xchg
xchg
add
rol
jmp
mov
jle
add
pushf
pop
lods
call
lods
jo
movs
out
adc
aad
cmp
jae
fwait
fwait
xchg
std
jg
push
add
jnp
sti
sti
sub
(bad)
sbb
mov
lahf
jbe
es
push
inc
xchg
or
xor
push
push
out
jmp
add
xchg
ret
mov
pushf
jle
ss
fild
out
xor
es
imul
dec
dec
loopne
cmp
push
sar
pop
(bad)
retf
out
icebp
cmp
or
aaa
in
inc
out
jmp
stos
out
mov
es
repz
frstor
add
mov
call
seto
push
inc
ss
xchg
mov
fisub
add
popf
push
mov
xchg
or
ss
or
jnp
add
sbb
sbb
(bad)
sbb
inc
and
sub
adc
inc
cmp
dec
lock
clc
(bad)
dec
mov
int
aam
es
mov
sar
cmp
rcr
call
jg
xchg
imul
jne
ja
ds
test
xchg
sbb
mov
fstp
add
cmp
ss
adc
in
pop
add
push
ja
out
pushf
add
fstp
ins
pop
pop
xor
jp
add
(bad)
in
add
mov
es
inc
icebp
add
arpl
shl
lds
fdiv
(bad)
push
dec
je
jl
scas
cmps
add
out
sub
in
push
xor
add
and
imul
leave
(bad)
mov
aaa
ins
ds
out
jnp
(bad)
mov
retf
shl
fdiv
mov
cmps
cmps
and
sbb
add
(bad)
scas
es
repnz
xchg
mov
add
push
push
push
mov
add
cs
pushf
(bad)
cmp
js
add
mov
leave
fdivp
stc
es
ffree
push
jb
adc
cmc
xor
push
mov
mov
ror
bound
in
sub
lahf
mov
push
push
cwde
pop
add
stc
js
ds
add
sbb
and
jmp
inc
es
and
movs
push
push
adc
xor
out
outs
xor
and
xor
cli
jo
mov
and
jne
and
int3
es
cmps
and
add
xor
popf
es
dec
xor
stos
(bad)
pusha
push
(bad)
cmp
add
lock
pop
out
lods
call
ja
jle
js
pop
add
out
jo
nop
es
adc
in
mov
mov
test
mov
sub
pop
mov
imul
out
retf
movs
movs
mov
or
pop
es
cmp
sub
pop
sbb
es
es
inc
ficom
out
add
cmp
and
dec
ds
add
xchg
cli
jmp
add
shl
repz
jne
xor
xor
push
jge
out
rcl
dec
es
push
jmp
jb
ret
push
pop
sbb
movs
inc
fsub
out
add
sub
rol
ja
out
cwde
push
jno
xor
movs
call
pop
mov
mov
and
or
stc
adc
jmp
mov
inc
es
mov
mov
(bad)
adc
in
add
xchg
call
cmps
es
add
push
leave
leave
test
mov
mov
in
dec
dec
call
sbb
pop
mov
xor
rcl
sub
mov
and
es
add
fwait
ins
ins
sbb
int
adc
add
out
das
std
mov
movntq
jecxz
es
xchg
lods
push
add
and
repnz
cmp
out
mov
cmp
pop
xchg
jbe
mov
push
sbb
push
and
out
in
(bad)
(bad)
cmp
add
fcmovnu
mov
mov
popf
cdq
cdq
hlt
cmp
es
ins
add
shl
pop
dec
add
push
je
es
pop
lods
scas
sub
(bad)
cld
add
jb
sbb
pop
pop
inc
loope
add
std
mov
es
add
ret
push
loope
cli
in
add
ins
ins
out
and
add
xor
xor
das
cmp
add
jno
xchg
out
and
add
jge
lods
lods
pushf
add
out
adc
das
js
sbb
(bad)
mov
es
add
rcr
out
stos
in
mov
out
call
ret
out
ins
inc
sbb
(bad)
mov
push
inc
(bad)
rol
fcomip
add
bound
ss
jl
cmp
daa
cmp
clc
pop
adc
out
cmp
rcr
add
out
adc
cmp
add
imul
jnp
add
out
xchg
pop
es
add
popa
lahf
aas
push
pop
rcl
or
dec
jle
pop
loopne
out
(bad)
(bad)
es
lock
mov
dec
push
das
xchg
adc
je
mov
mov
es
mov
xor
inc
adc
add
out
pop
mov
sbb
push
push
push
inc
ss
scas
scas
sub
inc
es
pop
ror
outs
rcr
inc
ja
out
jle
loop
add
mov
pop
cmp
inc
into
es
int
xchg
sbb
add
pop
leave
leave
pop
push
adc
pop
pop
add
cmp
push
bound
call
mov
jb
fsubp
(bad)
loope
cli
xchg
test
sbb
ss
pop
fwait
es
add
mov
cmp
pop
(bad)
es
sub
xor
sub
pop
fisub
and
cmp
stos
stos
pop
mov
sub
div
std
ds
mov
fiadd
pop
xchg
pop
add
dec
jnp
xor
sub
add
jmp
(bad)
pop
es
add
(bad)
(bad)
xchg
xor
(bad)
mov
and
clc
push
add
mov
jo
cmp
out
repnz
cmps
adc
loopne
aaa
imul
push
jl
out
sub
hlt
jae
sbb
loope
cmps
cmps
shl
add
mov
imul
fcmovb
push
and
pop
or
cld
ja
add
lods
out
mov
in
lock
out
xchg
mov
shl
loop
dec
mov
add
out
enter
pusha
pusha
psubq
out
mov
jo
popa
mov
loope
rol
out
int3
clc
push
cmps
cmps
add
out
and
xchg
mov
loope
pop
enter
inc
pop
mov
out
add
cs
add
add
popf
popf
outs
lds
add
cmps
sbb
mov
xlat
cmps
xor
out
outs
out
mov
cmp
and
gs
sbb
out
(bad)
call
cld
mov
mov
jmp
xor
pushf
es
mov
sbb
xchg
loope
push
push
aaa
add
test
int3
sub
mov
rol
mov
push
data16
sbb
into
cmp
sti
pop
adc
out
mov
push
add
shl
fld
loop
xor
test
sbb
and
add
pop
mov
addr16
(bad)
cli
adc
les
out
dec
es
xor
sub
test
fistp
mov
cmp
jmp
out
xor
jp
push
jo
jmp
adc
sbb
xchg
sbb
mov
cmps
cdq
loop
out
add
(bad)
fst
rol
psrad
xchg
inc
mov
xor
jo
jo
out
pop
pop
add
mov
outs
or
out
std
mov
push
mov
aad
inc
lods
cmp
pop
add
imul
out
and
(bad)
iret
pavgw
not
and
cwde
es
xor
test
sub
sbb
add
and
jl
je
test
imul
cmp
add
mov
or
hlt
sbb
daa
mov
add
ja
out
out
aas
add
add
fadd
rol
test
add
add
cs
sti
nop
add
lahf
test
shl
out
lock
mov
ins
ins
inc
cmp
out
sbb
repnz
shl
xlat
xlat
outs
pop
and
mov
add
out
pop
aas
stos
adc
popf
and
out
das
mov
stc
push
mov
loope
es
inc
add
shl
sbb
addr16
call
(bad)
mov
mov
or
cdq
out
dec
mov
push
out
test
add
cmp
int
loopne
pop
(bad)
adc
and
sub
out
int3
and
add
jmp
inc
cmp
paddsb
les
mov
test
mov
xchg
pop
jecxz
add
scas
add
out
shr
out
adc
dec
int3
ror
retf
inc
movs
add
retf
jno
fisub
in
sbb
add
ds
fld
xor
jnp
cld
push
push
jp
dec
addr16
out
ds
xchg
mov
or
and
xlat
push
adc
inc
add
out
lods
nop
cmp
nop
dec
out
out
or
push
push
add
outs
out
ja
iret
add
int3
mov
push
and
add
gs
shl
xchg
out
push
jnp
inc
fs
out
add
and
and
add
jno
pop
sbb
test
push
repz
les
mov
add
das
out
out
pop
add
out
inc
push
push
es
xchg
(bad)
and
mov
cmp
dec
xor
dec
rcl
dec
aaa
test
add
jne
out
out
scas
mov
push
add
push
add
in
test
jge
out
mov
loopne
sti
ds
jo
add
mov
out
xor
(bad)
mov
cdq
rol
sbb
shl
cmp
bound
lahf
out
fnstenv
sbb
add
out
sahf
adc
rcpps
icebp
sub
es
sub
cmp
pop
int3
xchg
es
sub
popa
outs
outs
mov
add
out
std
fld
fsub
add
xor
jno
add
(bad)
mov
je
punpckhbw
out
pushf
add
mov
mov
addr16
std
adc
mov
repnz
cmp
jmp
add
cmp
pop
imul
mov
mov
es
loope
retf
mov
std
popa
out
in
xor
js
mov
out
loope
add
pop
int
out
ror
js
jno
mov
gs
loopne
or
lock
add
cli
(bad)
push
xchg
add
es
mov
rol
sbb
cmp
sub
add
pop
(bad)
xchg
or
ficomp
lock
sbb
mov
popa
fwait
std
out
add
es
or
(bad)
mov
mov
inc
out
in
add
retf
nop
loop
std
std
or
pop
popa
addr16
scas
xor
add
xchg
out
lahf
je
es
add
repz
outs
add
div
std
jno
out
adc
shl
jl
add
jp
fmul
out
add
inc
es
gs
movs
es
into
add
dec
es
cld
add
icebp
sub
js
inc
gs
mov
lods
(bad)
push
add
test
adc
or
xor
dec
out
cli
xor
push
das
das
add
xor
hlt
mov
push
add
adc
(bad)
mov
mov
mov
add
out
pop
pushf
xchg
es
xchg
sbb
inc
es
push
ds
dec
add
pop
pop
scas
cmp
add
test
or
inc
sbb
rol
jecxz
out
push
adc
cmp
out
test
loopne
cwde
cwde
add
adc
add
out
out
sbb
push
mov
clc
icebp
jnp
inc
add
adc
stos
xchg
es
inc
aad
xchg
sub
pop
push
in
out
inc
or
jle
loopne
sub
les
es
mov
jge
add
mov
jl
mov
sbb
(bad)
shld
out
loopne
jmp
or
cmp
sub
xchg
fiadd
pop
xor
(bad)
xlat
inc
movs
add
out
adc
sbb
(bad)
(bad)
ret
inc
mov
outs
jmp
test
ins
add
into
movntq
daa
inc
shl
xor
xchg
add
aad
sbb
stos
ret
out
add
mov
pop
xlat
call
add
xchg
in
in
cli
cli
mov
call
ficomp
add
cmp
pop
add
cmp
sub
shl
push
retf
loopne
mov
sbb
cmp
jecxz
popf
mov
rol
lock
push
inc
inc
adc
out
adc
lods
or
pop
cdq
cwde
out
cld
mov
mov
cli
cli
sbb
test
push
jnp
add
mov
mov
pop
xor
out
mov
push
movs
and
push
jmp
sbb
inc
inc
add
fwait
out
push
mov
add
jge
pop
and
adc
inc
sbb
es
imul
inc
jmp
cmovns
es
adc
pushf
test
(bad)
push
into
out
lds
jmp
call
out
dec
sbb
push
stc
stc
fild
mov
add
loope
cmp
mov
lods
jnp
movs
enter
xchg
push
push
fstp
sbb
mul
pop
ficomp
mov
out
and
add
sbb
push
xchg
pop
(bad)
punpcklwd
icebp
out
xor
out
push
push
shl
add
nop
jns
mov
inc
(bad)
btc
add
pop
dec
xchg
xchg
cmps
in
es
mov
andps
cld
aaa
pop
push
mov
aam
and
f2xm1
inc
add
push
cmc
and
or
int3
push
cmp
loopne
shr
adc
retf
mov
out
add
call
jp
repz
cmp
mov
or
or
test
add
jecxz
loop
repz
out
xchg
(bad)
jp
dec
jnp
inc
out
movs
retf
jge
add
sbb
xor
out
push
stos
in
add
sahf
ja
out
or
hlt
es
sub
repz
cmp
retf
mov
enter
add
add
mov
or
out
fwait
(bad)
sub
daa
loopne
out
jg
das
xchg
xchg
movs
add
out
and
add
mov
fwait
mov
shl
dec
xchg
outs
mov
push
stc
pop
js
movs
adc
out
jl
cdq
es
pop
sbb
es
dec
lods
inc
imul
ret
icebp
jo
out
jnp
cli
int
test
push
out
add
inc
sti
sti
push
push
test
mov
sbb
retf
pop
adc
xor
jg
xor
leave
mov
lock
out
fadd
jl
ds
mov
lds
scas
pop
icebp
add
sti
xlat
mov
fcomp
ret
clc
sub
dec
fisttp
push
out
push
or
or
and
mov
pushw
push
int
repnz
mov
movs
(bad)
pop
out
add
push
add
(bad)
sub
xor
out
ret
ficomp
into
add
jle
or
sub
xor
and
out
sub
loopne
out
rol
sbb
pop
ds
xchg
add
push
fist
push
jp
jnp
add
retf
out
nop
dec
mov
push
pop
dec
(bad)
out
movs
mov
shl
mov
sub
xor
push
es
pop
int3
fadd
add
mov
out
jo
add
loop
mov
int3
rcr
add
(bad)
aam
enter
fwait
es
call
xchg
xchg
daa
jg
pop
pop
ds
out
push
outs
add
cmp
(bad)
out
jp
add
aaa
cmc
out
ds
sub
add
in
movs
out
sti
pusha
ret
ins
ins
add
retf
out
inc
jl
sbb
sbb
pop
out
clc
and
sbb
adc
or
out
mov
jmp
cmps
fwait
fwait
push
and
cmp
out
movs
jno
cld
cld
xor
push
nop
lock
sbb
push
das
js
mov
aad
rcr
fidivr
movs
movs
stos
push
pop
out
jecxz
and
add
in
xchg
sti
sti
fbstp
or
out
lods
xchg
xor
cmp
add
inc
inc
lock
sub
mov
adc
add
dec
jmp
into
out
ins
jnp
es
add
pusha
pusha
shl
rcl
cmp
out
(bad)
sbb
pushf
aad
or
sbb
fisubr
mov
mov
push
es
add
dec
dec
adc
xor
clc
inc
mov
mov
add
stos
adc
es
xor
stc
sbb
jmp
(bad)
add
xor
adc
mov
outs
ins
add
cmps
ins
sub
les
in
xor
inc
inc
sar
mov
out
sbb
shl
push
add
cmps
ja
fnsave
push
add
imul
inc
out
jo
add
sub
lea
das
add
outs
mov
inc
xor
es
pop
aad
add
push
bound
add
xor
cmp
sbb
xor
jae
out
cmp
aas
sti
sti
inc
adc
(bad)
data16
out
loope
push
rol
xor
out
push
pop
xchg
adc
add
aaa
push
dec
es
loop
cmp
pop
pop
out
fwait
pop
mov
pop
fistp
mov
add
push
movs
loope
and
out
inc
jg
int3
int3
icebp
inc
sub
sub
push
jl
dec
pop
pop
fcomp
add
add
dec
out
or
mov
test
add
xchg
fs
mov
mov
add
out
sbb
pop
cmovle
sar
cdq
xor
push
je
jbe
pop
pop
mov
mov
outs
icebp
out
scas
xor
add
out
jb
daa
enter
jmp
push
test
(bad)
jmp
jne
add
sahf
dec
movs
out
mov
sub
jns
jg
pop
stc
stc
test
add
pop
aam
adc
push
add
fimul
mov
int3
es
out
idiv
add
jmp
sbb
es
xchg
adc
lock
jno
sbb
cli
out
add
es
hlt
cmp
xor
inc
add
out
dec
fiadd
xchg
add
out
fcmovu
movs
es
call
in
es
test
adc
mov
test
mov
(bad)
sahf
add
mov
shl
test
inc
int3
and
cs
out
add
cmps
es
ds
add
int
mov
iret
cmps
dec
cmc
out
jno
add
rcl
out
mov
out
add
pop
int3
out
or
cmp
icebp
cwde
cwde
and
pop
mov
sub
stos
out
push
sbb
mov
pop
pop
fisub
inc
ret
retf
(bad)
sub
cwde
pop
jb
jae
xor
cmp
add
test
call
out
gs
sti
sti
ret
loop
out
or
rol
push
hlt
out
push
mov
fstp
add
add
ret
int3
aas
aas
nop
push
fiadd
add
les
dec
out
sbb
jae
inc
push
or
out
pop
ror
cmp
cdq
dec
lahf
(bad)
add
dec
bound
pop
pop
fucom
rcl
rcr
jecxz
out
jmp
call
cmp
and
add
sub
(bad)
cdq
jno
xchg
add
out
cmc
adc
add
and
push
addr16
fld
dec
sbb
es
out
dec
and
pop
ret
ret
or
arpl
or
add
cmps
lahf
lahf
call
add
pushf
or
dec
mov
jl
es
addr16
dec
fsubr
fiadd
add
mov
es
(bad)
imul
add
retf
in
and
rol
fcomp
add
fidiv
xor
pop
dec
das
imul
or
ret
ret
nop
mov
out
out
cmp
jg
ror
adc
jns
push
pusha
pusha
jp
push
es
shr
mov
mov
push
es
inc
add
and
iret
iret
and
adc
add
and
(bad)
call
es
pop
enter
jae
add
add
das
int3
add
out
mov
sbb
ja
es
add
jne
out
and
mov
sub
lock
push
push
scas
add
push
bound
call
es
cmp
enter
fist
out
cmp
cdq
cdq
pop
push
aas
out
fwait
stc
push
add
jp
or
xchg
add
mov
add
pop
pop
hlt
in
xchg
js
push
jl
out
add
sub
mov
ins
pusha
imul
stos
sub
out
xchg
add
es
add
nop
jge
push
xchg
out
xchg
xchg
lods
add
mov
push
test
inc
xor
dec
es
add
retf
retf
adc
shl
iret
loope
add
inc
cmp
fs
sti
retf
xor
clc
mul
cli
(bad)
(bad)
es
add
sub
pop
iret
ror
sahf
lds
out
xchg
pop
or
inc
frstor
dec
into
into
cmp
shl
mov
add
hlt
hlt
push
pop
gs
xor
sub
or
cmp
out
add
outs
inc
int
dec
jg
fild
add
dec
imul
loop
out
add
das
outs
mov
add
scas
ret
mov
pop
add
in
(bad)
jb
mov
dec
jno
add
inc
(bad)
out
lock
mov
cmp
ja
es
xchg
or
mov
retf
mov
(bad)
popa
mov
jnp
dec
dec
adc
addr16
and
int
out
jge
loope
pop
adc
arpl
(bad)
fadd
sbb
out
pxor
hlt
add
add
cdq
cli
clc
es
jp
jno
adc
inc
movs
add
push
jg
in
in
(bad)
loopne
out
or
add
or
pop
mov
cli
test
call
push
cmc
push
add
add
jnp
out
cwde
imul
popa
cmp
mov
dec
enter
inc
add
fwait
out
imul
dec
cmp
cli
add
cmp
out
loop
add
add
clc
sub
inc
inc
adc
push
push
sub
mul
(bad)
mov
dec
dec
add
inc
repnz
in
sub
mov
pusha
sub
add
push
sub
retf
cmps
es
add
sti
es
ror
cmp
lea
lock
add
sub
neg
mov
loopne
(bad)
or
pusha
jg
sti
push
push
inc
jno
out
cmp
dec
or
fnstenv
xchg
add
jp
pop
pop
xchg
(bad)
das
das
push
pop
or
loop
push
and
and
es
mov
cmp
loopne
add
inc
inc
xchg
push
es
pushf
jg
in
and
cs
retf
in
add
ret
push
mov
retf
mov
sbb
lds
aam
inc
repnz
dec
out
dec
ja
mov
sub
mov
mov
mov
mov
mov
xor
out
adc
add
pop
mov
xchg
add
lods
in
mov
mov
dec
add
jecxz
loopne
pop
add
or
and
out
ja
test
sbb
cld
out
xor
xlat
ins
neg
pop
add
add
in
jl
jle
je
mov
cmps
leave
neg
sbb
push
lea
out
jle
stos
lods
pop
in
stos
test
xchg
or
fidivr
or
add
movs
loope
pusha
bound
out
push
idiv
es
jg
out
mov
in
cmp
pop
or
pusha
out
pop
add
push
push
jmp
shl
clc
clc
add
sti
dec
sub
and
icebp
sub
out
test
int3
cmp
(bad)
cmc
aaa
in
es
mov
mov
push
sbb
repnz
stos
loope
push
push
add
scas
aaa
shl
pop
adc
(bad)
cmp
jge
mov
mov
jns
pop
dec
add
icebp
xor
call
aas
inc
add
(bad)
push
es
pop
or
lock
arpl
out
mov
pop
cld
cld
mov
inc
imul
js
dec
add
out
push
cld
sbb
jns
add
pop
pop
xlat
lock
add
and
sbb
jge
sub
out
dec
es
es
adc
es
jbe
pop
in
in
loopne
lahf
jne
ror
ja
daa
scas
aaa
cmp
ins
movs
call
fiadd
out
ret
into
outs
add
jg
repnz
sub
lods
lods
jb
out
mov
xchg
nop
es
les
xor
icebp
out
ins
out
mov
add
cmp
mov
mov
add
push
cmp
sbb
sbb
jne
mov
cli
dec
mov
mov
stc
pop
adc
fsub
sar
movs
push
adc
push
add
enter
loope
push
lods
fst
add
adc
xchg
push
addr16
loopne
add
add
dec
xlat
movs
movs
aad
call
out
push
nop
fsub
inc
stos
and
mov
(bad)
(bad)
pop
mov
inc
sbb
rcr
jbe
sbb
out
pop
cmps
jo
and
into
imul
jl
add
fist
es
daa
movs
iret
lock
adc
cwde
cwde
xchg
xchg
push
out
mov
cmp
leave
es
das
repnz
inc
inc
cmp
push
inc
adc
add
add
and
cdq
add
pusha
(bad)
test
fs
(bad)
pusha
out
ins
mov
loope
out
in
mov
sub
dec
rol
add
bnd
dec
out
adc
icebp
add
inc
cmc
cmc
mov
les
add
call
cmp
out
daa
popa
in
and
add
push
cmp
and
xchg
ret
add
js
ss
add
add
pmaxub
jb
xor
pop
pop
mov
inc
or
jmp
adc
mov
bswap
xchg
rol
icebp
pmulhw
sub
pop
adc
xchg
mov
inc
out
mov
and
jns
xor
sbb
repz
out
pushf
mov
cmp
pop
add
cs
jg
jno
or
out
mov
mov
sar
and
out
add
lods
fs
addr16
add
sti
sar
out
xchg
mov
cld
repnz
sub
es
add
and
xchg
sbb
test
sysexit
jmp
out
or
fadd
repnz
test
mov
pop
popa
(bad)
(bad)
(bad)
ins
mov
jno
sub
movs
mov
cs
mov
xlat
es
retf
(bad)
add
mov
add
xchg
call
(bad)
adc
dec
imul
sbb
fldenv
sbb
rcr
adc
clc
pop
add
cld
ja
mov
loopne
push
pop
je
ds
es
mov
das
sub
in
sub
aaa
aaa
cld
add
inc
leave
call
cmps
jno
add
dec
stos
mov
add
outs
leave
leave
inc
push
inc
out
cmp
inc
es
push
sub
and
jb
add
mov
sub
lea
add
xchg
(bad)
add
xchg
fadd
out
es
add
mov
add
adc
sbb
es
test
es
mov
and
test
out
cmp
and
fcomp
push
fld
imul
pop
or
xor
jmp
ficomp
nop
lds
out
aam
js
mov
xchg
inc
out
(bad)
or
inc
add
xor
out
mov
add
(bad)
and
es
cmp
not
jg
ins
or
push
mov
push
add
imul
sbb
add
js
sar
push
jo
lods
jnp
add
push
sar
shl
fcomp
jp
loopne
mov
push
mov
dec
add
in
outs
xchg
mov
(bad)
adc
dec
xor
jecxz
rcl
xor
mov
adc
movs
sahf
cmp
lock
add
mov
icebp
out
add
retf
sbb
ret
xor
add
aad
jg
cmp
mov
out
ins
ins
dec
ja
out
or
mov
add
and
jle
fld
clc
fcom
out
add
xchg
add
jmp
es
mov
sbb
jo
jo
add
mov
and
sbb
arpl
and
fidivr
std
es
or
sbb
inc
inc
fxch
add
mov
outs
push
mov
add
mov
ficom
inc
and
sbb
fld
mov
(bad)
out
sub
mov
out
cld
fimul
push
mov
int
pop
es
add
es
pop
mov
add
jmp
dec
movs
es
popa
add
cmp
mov
nop
fwait
out
push
adc
mov
out
daa
add
add
rol
out
fcmovne
(bad)
es
add
loop
mov
add
jmp
sar
stc
add
mov
fild
jle
add
ins
rcl
xchg
xchg
or
(bad)
cmc
xor
add
ret
rcl
sbb
jl
lea
pop
inc
push
push
adc
fs
pop
mov
shl
fcmovne
add
mov
cmp
call
add
pop
xchg
scas
add
movs
rcl
out
xor
cmp
inc
sbb
data16
or
cwde
loop
mov
pop
ds
push
pop
and
and
aam
jo
fwait
ret
nop
adc
jns
es
and
mov
aad
out
icebp
rol
(bad)
btr
sbb
sbb
out
adc
ins
mov
call
inc
hlt
out
fimul
cmp
dec
jbe
add
(bad)
jns
or
add
es
push
pop
out
xchg
xchg
sbb
push
mov
pop
aaa
gs
pop
lahf
outs
es
xor
and
add
add
dec
dec
fild
mov
add
ds
je
dec
es
xor
add
jb
mov
mov
add
push
jo
out
xlat
sbb
or
xchg
cmp
fisttp
out
push
mov
add
mov
nop
rol
xor
add
jo
call
push
and
or
cli
out
cmp
and
pop
cld
cld
add
es
out
add
add
out
sbb
or
pushf
out
icebp
jno
dec
dec
test
or
adc
test
pop
jecxz
sbb
sub
pop
enter
add
out
push
dec
mov
pop
pop
adc
pop
loopne
pop
and
jl
loopne
ins
je
jecxz
or
out
jp
lea
cs
loop
fs
dec
es
imul
cli
es
jne
sub
cmps
xor
outs
cs
and
mov
jae
cmp
dec
dec
rol
es
xchg
int
ds
fld
cmp
xor
fsub
dec
add
xchg
frstor
leave
cmp
add
push
add
inc
iret
out
adc
dec
push
push
add
mov
add
push
jmp
mov
mov
es
js
cmp
pop
pop
shl
add
shl
loope
das
inc
cmp
push
push
dec
shr
outs
outs
neg
ins
es
loope
or
cld
or
retf
clc
mov
mov
out
dec
push
js
outs
(bad)
fcom
add
dec
add
mov
ss
push
inc
push
push
mov
cmps
addr16
inc
es
jecxz
add
dec
movs
sbb
dec
shl
add
xor
lea
out
mov
fadd
pop
es
push
or
fsubr
lahf
ds
bound
sbb
repz
(bad)
es
lds
add
sub
rcr
es
loop
sbb
call
scas
movs
mov
mov
fsubr
aam
outs
and
cmc
add
cmps
pop
es
mov
add
fld
je
popa
popa
dec
das
scas
out
loope
sub
sub
add
call
jle
popf
call
js
es
fprem
add
xchg
mov
jnp
mov
je
cmp
push
(bad)
jg
iret
(bad)
les
xor
inc
es
add
fwait
fwait
push
lea
or
not
mov
add
jle
out
xchg
popa
es
add
xor
xlat
xlat
aad
lock
(bad)
xchg
mov
test
stos
add
out
test
sbb
fild
lock
xor
loopne
dec
cwde
add
es
pop
dec
inc
add
sub
jns
shl
jecxz
daa
jmp
in
lock
cmp
test
or
xor
mov
push
cmp
inc
out
mov
jmp
hlt
and
add
frstor
popf
dec
dec
push
cmp
add
in
out
adc
mov
add
cmp
adc
out
add
daa
es
mov
nop
adc
out
sbb
out
and
inc
and
out
pop
mov
adc
ds
es
ficomp
inc
add
imul
es
sub
xor
inc
push
es
push
out
jmp
add
mov
stc
and
pop
lods
out
out
add
inc
loope
push
data16
jbe
cmc
cmc
test
(bad)
out
lock
add
out
lods
(bad)
xchg
sti
sahf
es
int3
cmp
call
popa
dec
dec
add
mov
pushf
add
jbe
fist
jg
mov
push
sub
int
out
es
or
add
nop
sbb
pop
cli
mov
adc
push
(bad)
and
fld
xor
es
inc
inc
add
push
ret
shl
xchg
aaa
nop
mov
fsubr
sub
xor
add
stos
mov
bound
add
inc
out
push
xchg
scas
scas
data16
scas
es
xchg
pop
jg
(bad)
cmp
add
pop
stos
es
push
push
jge
sub
es
mov
xor
dec
sub
jnp
mov
out
fld
es
fnsave
add
mov
iret
mov
cmp
cmc
or
pushf
cmp
mov
lock
imul
mov
dec
xor
pop
imul
fs
mov
out
mov
iret
push
push
xor
mov
mov
out
cli
icebp
add
(bad)
sbb
(bad)
out
cld
xchg
and
adc
push
xchg
mov
and
rcr
mov
fmul
enter
out
adc
jl
mov
rol
mov
sbb
adc
fisttp
leave
out
pop
sbb
loopne
mov
xor
es
dec
sub
shl
pop
pop
les
out
pushf
pop
loope
enter
(bad)
call
add
push
push
push
rcr
out
xchg
es
mov
div
add
nop
mov
dec
test
add
jp
out
add
dec
(bad)
enter
or
stc
sti
mov
out
pusha
stos
lock
add
ret
add
mov
jp
mov
dec
and
or
push
push
add
and
repz
sbb
xchg
xchg
and
sub
icebp
cmps
push
out
fst
add
jecxz
pop
sahf
out
xchg
add
(bad)
aas
cmp
cmps
icebp
add
out
push
sbb
es
int
jge
aas
pusha
dec
sbb
inc
mov
push
es
jl
sbb
es
jle
sbb
mov
call
add
sub
pop
stos
sub
lods
out
cmp
jle
out
add
pop
pop
inc
add
adc
(bad)
mov
cmp
call
es
daa
xor
pop
pop
std
push
add
sub
jp
mov
add
(bad)
inc
lods
xlat
xlat
add
sub
and
out
enter
imul
out
aas
into
pop
out
mov
retf
add
test
cmp
shl
add
and
push
jbe
lods
xchg
imul
mov
mov
xchg
out
mov
pop
cdq
push
test
jl
adc
pop
es
push
sti
and
movaps
das
push
adc
ds
shl
pop
ret
xor
sar
popf
out
adc
lea
add
sbb
out
pmulhuw
mov
repnz
mov
add
nop
inc
jne
mov
or
pop
push
adc
sub
rcr
push
das
arpl
out
cmp
cld
dec
dec
aaa
sbb
es
sub
pop
xchg
xchg
pop
jmp
ret
repnz
(bad)
aad
pop
xchg
push
fcom
adc
data16
inc
(bad)
mov
out
pop
pop
mov
ret
call
test
add
out
out
mov
inc
or
cmp
pop
pop
xchg
adc
out
cwde
aad
pop
pop
ret
add
dec
fwait
fwait
dec
xchg
xor
xchg
les
adc
add
mov
or
daa
or
dec
mov
rol
inc
icebp
es
jns
add
or
test
test
add
test
fnstcw
mov
cmps
jne
add
sar
xor
aas
pop
mov
ret
pop
es
call
dec
cmp
es
cmps
cmp
mov
add
pop
icebp
xor
jmp
retf
out
lock
rcl
cmp
dec
es
add
fbstp
es
jns
mov
(bad)
cmove
out
and
mov
daa
adc
out
sti
add
call
sbb
xor
xor
ret
and
jge
add
cmp
fcom
dec
sub
es
mov
add
ret
dec
dec
(bad)
adc
jo
xchg
mov
out
mov
aam
ret
jae
cli
mov
dec
cmp
sub
sbb
xor
aas
adc
(bad)
mov
int3
add
sub
dec
arpl
movd
add
mov
es
mov
jae
jge
nop
nop
in
int3
jg
int
(bad)
out
pop
div
xor
cld
mov
add
cmc
out
rcl
xchg
xchg
or
hlt
cmp
fadd
out
popa
out
ins
ins
loop
adc
sbb
xor
js
pop
test
lahf
jb
add
or
mov
imul
fsub
loopne
sahf
push
mov
out
mov
inc
icebp
mov
add
pop
xor
out
jge
inc
cmps
out
jno
mov
cmp
xor
mov
pop
mov
out
outs
mov
push
push
cmp
out
xor
dec
dec
fsubr
pop
out
push
jb
es
add
and
mov
retf
rol
add
sbb
stos
adc
out
add
sti
aad
movs
mov
pop
ss
ins
in
inc
(bad)
out
inc
xor
lods
lods
sbb
pop
cwde
inc
rcl
sub
call
or
xchg
jb
pop
out
loopne
add
(bad)
dec
cmp
sub
cmp
pop
test
es
dec
add
fimul
add
es
jo
add
mov
clc
sub
out
gs
es
movs
out
jecxz
test
(bad)
dec
out
sub
adc
in
repz
daa
call
(bad)
std
out
lea
inc
out
xor
add
fnsave
add
leave
leave
ja
in
and
add
mov
fdiv
test
add
mov
pop
outs
lods
es
dec
adc
sbb
xor
imul
test
and
jmp
imul
gs
pop
pop
popf
nop
shl
test
lods
or
mov
or
scas
dec
dec
aas
out
cmp
inc
jnp
out
or
cmp
js
es
ds
sbb
mov
jle
add
hlt
jge
lods
es
loop
popf
or
aam
scas
adc
lock
mov
add
mov
and
and
es
xchg
cmc
add
retf
or
je
add
dec
movs
es
sbb
pop
pop
mov
and
fadd
sbb
retf
push
aaa
aaa
add
sub
into
nop
mov
in
add
push
out
imul
cld
mov
xchg
sti
sti
xchg
or
and
sbb
ret
ret
std
adc
sub
push
data16
mov
sub
jp
dec
add
in
mov
pop
loop
sbb
lock
leave
test
push
(bad)
mov
les
div
ins
jo
out
cli
mov
pop
xchg
xor
lods
add
aas
mov
test
in
es
add
outs
cmps
and
out
pop
mov
pop
pop
xchg
jecxz
enter
adc
js
jmp
sub
sub
es
mov
sub
out
jp
add
push
pop
fimul
sti
ins
(bad)
dec
int
es
push
mov
(bad)
(bad)
(bad)
loopne
push
push
xlat
or
out
daa
test
or
add
out
mov
and
sub
bound
add
pushf
shl
sub
pop
shl
ins
xchg
mov
into
es
sar
adc
add
enter
jo
push
push
out
lock
push
add
scas
add
push
push
test
pop
out
xor
add
fnstsw
sbb
out
sti
sbb
or
mov
jb
xchg
add
pop
es
nop
dec
(bad)
cmp
mov
and
loop
dec
cdq
cdq
fucom
add
ins
sar
sahf
addr16
movs
in
and
add
retf
sub
cmp
mov
lock
lods
adc
dec
out
sub
inc
into
out
mov
add
ret
xchg
out
xor
mov
add
iret
iret
hlt
mov
call
pop
or
pop
jb
jl
bound
(bad)
add
adc
es
jns
sub
xchg
inc
inc
pop
or
out
adc
and
mov
lea
mov
out
add
sti
sti
ja
pusha
out
es
es
add
into
retf
fidivr
fwait
out
xor
out
pop
cmp
es
or
icebp
add
iret
inc
pop
cli
out
test
xchg
sub
jg
(bad)
in
xchg
add
aaa
in
jmp
add
jno
out
movs
and
gs
test
es
loopne
aas
add
dec
mov
js
out
add
push
fdiv
sbb
xor
fsub
(bad)
pushf
lds
xchg
add
(bad)
or
mov
jno
pop
in
sub
inc
int
outs
scas
scas
movs
in
loopne
or
lahf
loopne
nop
jp
pop
cmp
dec
add
out
jmp
add
xor
js
es
stos
or
aam
add
(bad)
pusha
pusha
ja
add
out
out
arpl
cmp
test
xor
mov
add
or
pop
out
test
and
(bad)
in
pop
retf
add
data16
nop
out
nop
xchg
(bad)
es
add
call
or
add
dec
pop
pop
inc
es
ja
add
xor
dec
es
adc
cmovge
sub
loopne
out
jns
arpl
add
ret
or
add
div
std
jb
mov
out
add
adc
mov
add
mov
(bad)
lock
out
repz
inc
ins
add
add
cld
adc
or
add
push
out
fnstenv
shl
mov
call
test
es
int3
test
inc
inc
ins
add
into
out
and
add
cmc
inc
fsubp
pop
sbb
add
inc
xchg
shl
mov
pop
es
pushf
sub
loope
add
fwait
fwait
adc
mov
mov
out
xor
sub
cmp
cwde
add
mov
mov
pop
fdivr
mov
push
nop
nop
mov
cwde
data16
std
cmc
or
into
into
push
pop
frstor
(bad)
dec
sbb
push
push
sub
add
inc
out
cmp
ins
add
xchg
jb
(bad)
in
in
adc
push
pop
adc
inc
(bad)
data16
mov
sbb
into
into
(bad)
xlat
jno
add
cld
out
jbe
les
add
cs
cwde
scas
add
out
test
add
sahf
jl
jmp
(bad)
add
call
add
es
test
add
stos
out
cmp
adc
in
sbb
out
sbb
ja
sub
fs
popf
jns
jbe
add
xchg
push
add
es
push
aaa
out
in
ja
add
or
pusha
inc
push
movs
mov
fisttp
es
cs
pop
push
push
mov
fsubrp
call
xor
push
je
shl
xchg
cmp
sub
pop
jb
and
sub
ins
jne
ret
add
cdq
int3
(bad)
movs
sub
outs
mov
es
hlt
(bad)
fcmovu
mov
mov
aaa
out
inc
in
es
push
fst
sahf
sahf
lahf
sbb
es
dec
xchg
inc
inc
shl
pop
pop
jo
xchg
out
jg
mov
add
dec
in
sub
cmps
(bad)
out
jge
and
out
add
push
adc
repz
cwde
cwde
imul
xchg
sub
retf
inc
push
out
jmp
dec
es
cmp
mov
add
scas
iret
out
pop
lock
adc
popa
out
leave
push
adc
(bad)
sub
test
sti
pop
out
lods
mov
(bad)
loopne
pushf
add
dec
ins
out
cli
out
add
dec
or
xchg
xlat
and
lahf
xchg
std
mov
mov
pop
add
xchg
addr16
lods
lods
add
cmp
es
les
add
sub
and
add
or
out
add
sti
sti
cmp
mov
pop
ret
retf
cmp
imul
adc
es
in
jb
sete
lea
out
aas
and
or
cld
js
int
and
shr
sti
es
and
mov
add
out
fist
add
jle
loope
xor
es
jo
addr16
(bad)
jmp
xchg
sbb
and
pop
push
pop
(bad)
mov
popa
inc
scas
into
and
lss
ds
xchg
es
dec
dec
inc
sahf
jb
push
xor
cmpxchg
add
jl
adc
shl
ss
int
es
or
sbb
clc
push
mov
es
movups
push
add
loopne
pop
add
mov
in
out
mov
out
inc
add
inc
out
ror
fstp
rol
(bad)
jb
jo
movs
add
cmp
pop
mov
popf
xchg
out
pusha
add
and
or
punpckhbw
ds
push
pop
movs
fcomp
mov
call
and
xchg
jo
xor
div
imul
add
lea
lods
sbb
out
ret
es
pusha
jmp
sbb
(bad)
es
or
add
cmps
cdq
mov
add
out
addr16
inc
mov
mov
retf
and
sti
jg
inc
or
ins
pop
pop
stos
push
xor
cs
mov
add
xchg
je
xchg
add
test
ret
xor
stc
add
pop
pop
shl
cmp
sbb
fsub
fild
inc
xchg
cld
es
cli
add
outs
outs
jmp
or
out
mov
add
shl
addr16
out
push
xchg
es
imul
rcr
pusha
pusha
add
out
stos
loop
aas
xchg
xchg
sbb
push
icebp
icebp
daa
or
out
sub
add
pop
popf
cmp
imul
lds
lahf
out
xchg
outs
(bad)
sub
pop
mov
cmps
sbb
mov
inc
jle
lock
push
out
add
enter
movs
out
fadd
das
in
in
ret
out
dec
mov
push
pop
out
scas
push
shl
or
es
xchg
inc
es
xchg
retf
fcom
es
xor
ins
ins
jbe
add
sbb
es
add
mov
mov
jnp
xchg
xchg
stos
jmp
out
aam
(bad)
bound
lds
or
int3
fld
add
cs
cmp
fwait
imul
add
jl
out
into
push
pop
es
iret
retf
fstp
idiv
clc
out
mov
in
and
adc
gs
sbb
add
or
add
loope
ror
mov
pop
fcmovbe
or
shl
inc
jl
pop
add
data16
loop
mul
rcr
aam
push
es
iret
mov
adc
dec
in
loopne
or
pop
out
je
shl
xor
aam
jg
push
push
mov
push
dec
lods
add
or
add
jne
add
sub
ins
jecxz
and
scas
add
psrlw
cs
sti
ja
push
rcpps
es
add
pop
pop
nop
clc
movs
es
add
cli
leave
mov
add
outs
aas
xchg
mov
imul
ins
es
loop
pop
add
xchg
xchg
mov
push
pop
or
pop
or
jmp
nop
fwait
pop
xadd
add
outs
jnp
fstp
and
sub
sahf
sahf
mov
add
jl
aad
es
add
arpl
cld
inc
clc
pop
pop
add
mov
add
std
std
les
repnz
dec
add
addr16
lldt
out
mov
pop
rol
out
sbb
sub
aaa
movs
cmp
out
mov
into
test
push
jmp
push
adc
mov
inc
add
pop
pop
xor
add
mov
jns
push
clc
out
or
(bad)
pushf
loopne
push
pop
cmp
add
enter
lea
sub
icebp
icebp
(bad)
shr
int
dec
ror
add
sub
lods
push
push
add
jle
aas
aas
dec
push
nop
out
jmp
mov
repz
ins
add
pop
pop
nop
sub
sti
mov
dec
cli
fdiv
es
push
add
sar
fiadd
test
out
push
add
sar
(bad)
mov
add
repnz
inc
sub
stos
fstp
lahf
out
fmul
rcl
add
sbb
loopne
loopne
add
cmc
div
xor
test
mov
dec
repnz
jmp
mov
shl
(bad)
adc
add
out
xchg
add
xchg
popf
mov
sbb
xchg
rcr
add
or
mov
jmp
les
fcmovu
fst
imul
enter
out
sahf
add
jns
out
out
cmp
inc
mov
adc
mov
add
es
callw
retf
repnz
push
shr
das
clc
test
cld
push
add
(bad)
(bad)
push
pop
(bad)
repnz
add
dec
mov
sbb
and
add
arpl
retf
hlt
inc
inc
out
or
mov
fstp
mov
sbb
rcl
out
fdiv
and
xchg
add
mov
mov
cmp
bound
or
add
jl
in
outs
outs
add
aaa
es
mov
ror
cmps
pop
aad
add
adc
jl
clc
pop
jg
add
cmp
(bad)
int
add
leave
cli
add
add
std
out
and
xchg
out
clc
call
push
int
mov
outs
add
icebp
fcmovnu
adc
lahf
add
push
nop
pushf
es
mov
adc
es
cld
mov
sbb
rol
out
cmp
retf
retf
cld
pop
adc
cmp
or
lods
fadd
sbb
mov
dec
aas
out
add
pop
es
and
cmp
add
out
xchg
ja
jl
pop
sub
jp
add
add
out
pop
push
pop
es
add
mov
das
out
xchg
call
clc
clc
int3
inc
repnz
adc
retf
in
es
icebp
add
jno
inc
add
int
test
dec
adc
out
sahf
inc
imul
mov
jnp
adc
loop
add
es
sbb
sub
int3
gs
iret
test
lods
out
cmp
xor
out
dec
xor
ins
and
add
shufps
sub
div
pop
add
lock
int
aaa
popf
add
inc
cdq
or
es
mov
jnp
test
sbb
cmp
ins
or
add
out
xchg
es
add
es
xchg
mov
ror
js
retf
out
cmps
add
loopne
ror
cvtdq2ps
pop
pop
xchg
pop
(bad)
push
mov
pushf
pushf
les
or
pop
(bad)
clc
dec
in
xor
add
mov
mov
nop
scas
loop
sahf
add
xchg
mov
rcr
push
repz
call
add
sbb
mov
out
and
es
lock
sub
jns
add
rcr
xchg
xchg
add
jl
jns
std
das
out
add
test
pop
addr16
iret
ja
adc
add
int3
mov
push
sbb
push
arpl
out
or
add
out
add
mov
mov
pop
add
imul
mov
add
cmc
inc
jnp
sbb
cmps
cwde
sahf
add
mov
fild
cli
out
ins
or
in
mov
lock
arpl
out
popf
push
jo
inc
push
mov
cmp
add
out
dec
and
es
in
push
inc
shl
adc
add
aam
loopne
mov
mov
sbb
and
es
sahf
(bad)
jbe
xor
mov
push
cmp
jbe
ja
shr
pop
add
xchg
xor
fist
mov
test
add
ja
shl
mov
and
xor
jns
add
xchg
or
jbe
rol
movs
push
jae
dec
or
es
add
xor
jno
xchg
cmps
es
sbb
push
es
(bad)
mov
push
add
addr16
cmp
pop
ss
jp
adc
or
sub
arpl
pop
add
push
adc
and
push
icebp
sub
scas
cmp
out
add
out
(bad)
dec
add
popa
mov
scas
nop
nop
jge
add
inc
ret
hlt
in
mov
add
sbb
jbe
lods
stos
mov
and
es
outs
jo
cmp
push
es
pop
inc
mov
add
lds
sbb
pop
shr
cmp
add
jl
pop
pop
pop
inc
pop
jo
pop
pop
or
fadd
mov
add
out
adc
cmps
es
xchg
nop
nop
movs
add
mov
out
fild
mov
call
add
icebp
mov
test
push
add
mov
dec
out
dec
adc
pusha
lock
fwait
push
es
add
jg
sbb
rol
jle
es
pop
xor
std
std
movs
iret
fadd
add
pusha
push
cmp
cwde
mov
stos
pop
mov
out
pop
(bad)
daa
es
inc
push
cmp
jnp
cmp
inc
push
add
in
lods
loopne
lea
add
add
arpl
xlat
push
pop
xchg
jmp
cmps
je
add
xchg
push
ds
dec
mov
sbb
into
add
out
lods
enter
inc
sti
xchg
and
push
ret
call
mov
cmp
and
push
push
sub
sar
add
out
mov
ss
mov
add
sbb
jns
sub
stc
add
ja
add
shr
mov
sub
dec
and
adc
es
inc
dec
cmp
cmp
jmp
outs
mov
add
adc
mov
pop
xchg
lahf
add
les
dec
nop
test
ret
adc
jecxz
cmc
cmc
lock
out
pop
ins
or
cmp
mov
and
mov
aaa
add
add
sub
out
pop
and
or
js
ja
add
out
es
cs
enter
fs
jge
es
daa
pop
dec
dec
inc
lahf
push
add
aam
xchg
inc
in
out
lock
and
das
in
aas
add
loope
hlt
popa
(bad)
sti
ror
xor
add
(bad)
mov
movs
and
out
icebp
pop
mov
jmp
pop
mov
out
adc
push
add
out
xchg
(bad)
(bad)
iret
mov
out
test
jle
add
xchg
out
idiv
mov
ror
cdq
cmp
jb
pop
pop
out
ror
es
jns
add
and
data16
out
cmp
int3
cmp
add
dec
es
ret
xlat
xchg
(bad)
add
xor
retf
out
sahf
add
or
ss
mov
mov
into
push
mov
jge
es
shr
xchg
ds
movs
jl
daa
daa
(bad)
aas
dec
es
(bad)
sti
jp
add
lods
inc
loopne
mov
in
mov
rol
or
cli
addr16
add
inc
mov
add
test
add
cmp
xor
or
xchg
es
xchg
push
push
out
out
mul
add
out
jmp
mov
add
mov
mov
add
sub
(bad)
ins
out
out
fwait
ret
mov
cmps
nop
add
out
inc
push
int
mov
add
data16
out
and
sti
es
adc
movs
movs
add
mov
pop
mov
shl
inc
ins
add
stos
stos
dec
mov
out
pop
pop
es
dec
aas
(bad)
jg
jecxz
scas
add
inc
test
out
mov
dec
fcomp
int
add
mov
call
and
retf
out
add
out
out
push
add
and
out
lea
scas
scas
add
lahf
xchg
imul
or
movs
ss
mov
ja
cwde
pop
les
pop
jle
vaddsd
mov
rol
push
jecxz
stos
sti
sti
add
shr
add
adc
iret
test
repnz
xchg
push
add
cmp
sub
sbb
daa
daa
pop
js
jmp
or
nop
add
jl
add
pop
(bad)
test
adc
and
xor
or
and
cmp
cmc
sar
out
test
into
in
mov
mov
jmp
mov
dec
add
adc
es
add
pop
sbb
mov
jns
loopne
add
out
call
pop
in
out
mov
pusha
es
mov
psubq
xchg
xchg
xchg
mov
xchg
cmp
out
pushf
add
cmp
sar
add
mov
sub
add
dec
sbb
push
add
adc
mov
push
(bad)
(bad)
(bad)
js
out
pop
sub
mov
out
test
fwait
es
in
and
out
mov
out
pop
add
es
repz
jno
jo
(bad)
sub
ret
mov
push
shl
es
mov
repz
sub
out
stos
mov
jns
out
neg
shl
sbb
pop
jb
dec
dec
mov
push
inc
fcomp
leave
cmp
out
scas
jmp
out
add
jne
ret
leave
add
sub
and
cwde
push
ja
add
out
push
xchg
stos
es
out
cmp
mov
call
add
out
out
dec
(bad)
out
loopne
or
add
inc
es
add
scas
scas
mov
sub
ror
(bad)
lgs
out
cmp
push
mov
jg
imul
fcmovu
pop
pop
sbb
jmp
aas
pop
les
sub
call
xchg
out
in
add
es
push
inc
inc
and
dec
movs
movs
sbb
out
push
jae
fcmovu
add
in
imul
popa
out
lea
das
es
pop
jg
lods
lods
ja
scas
out
mov
cmp
(bad)
or
xor
and
(bad)
(bad)
aad
mov
push
out
call
jno
fwait
cmp
scas
dec
cdq
mov
out
inc
std
mul
add
cwde
cwde
popf
jns
es
mov
daa
daa
in
(bad)
(bad)
adc
int
jecxz
ja
cwde
cwde
add
movs
movs
ficom
lock
mov
add
test
gs
in
jnp
mov
pop
add
es
call
lods
jno
or
sbb
daa
les
add
sub
popf
add
rdtsc
int
div
iret
jo
out
and
in
loopne
add
out
nop
xor
mov
es
xchg
inc
adc
pop
xlat
movntq
mov
xchg
fstp
add
daa
out
hlt
dec
imul
pop
pop
aad
es
mov
mov
add
or
out
bound
sub
jecxz
es
ds
enter
mov
cli
add
xchg
jb
scas
scas
retf
out
add
mov
out
mov
iret
add
dec
push
repnz
push
add
dec
sbb
pop
es
add
add
iret
mov
xor
jp
mov
jae
jecxz
out
shl
es
dec
test
cmp
aas
out
jae
fbld
pusha
sub
dec
fcomp
sbb
jge
mov
inc
push
jbe
xor
ss
add
test
pop
out
inc
push
and
retf
test
das
es
or
addr16
sub
jb
ret
and
out
movs
cmc
test
add
into
sahf
out
repz
out
ror
rcr
xor
and
imul
or
inc
ret
bound
pop
mov
popa
add
add
jns
popa
mov
out
out
sbb
push
dec
pop
sub
and
add
stos
es
pop
mov
add
xchg
shr
mov
out
mov
xor
retf
inc
xchg
fsub
cmp
xor
mov
and
sahf
out
xor
jne
or
test
jecxz
mov
add
(bad)
(bad)
aas
out
pusha
in
es
mov
pop
ds
ret
ret
adc
mov
xchg
or
push
adc
ja
add
out
xchg
rol
pop
pop
cmp
mov
add
mov
add
aas
jne
fs
cs
cmp
shl
and
(bad)
(bad)
sub
bsr
push
pop
mov
cmc
pop
and
js
out
push
mov
add
punpckhwd
xor
movs
jp
add
xchg
jmp
push
test
es
push
add
fdiv
xor
mov
push
add
push
and
pop
add
es
daa
lea
mov
ss
popf
fsub
out
sti
hlt
add
jp
xlat
es
(bad)
add
xchg
ffreep
mov
pop
jg
out
enter
adc
mov
add
jmp
mov
add
out
jl
test
and
add
daa
push
xor
es
mov
add
fld
movs
push
add
or
inc
mov
mov
xchg
loopne
lea
and
sbb
out
xor
scas
rcl
add
sub
add
es
retf
js
adc
mov
es
lds
jo
frstor
push
stos
stos
shl
es
add
es
shl
push
or
aas
add
pop
xlat
xlat
in
dec
rol
out
outs
out
pop
loop
cmp
push
mov
add
fbld
xchg
or
icebp
push
mov
cmp
pop
and
data16
sbb
xchg
xor
xor
and
cmp
sub
icebp
int
add
mov
out
pop
cwde
fadd
add
dec
out
mov
xchg
movs
add
xchg
fxch
cvttps2pi
mov
clc
hlt
dec
out
add
push
mov
shr
mov
popf
out
daa
pop
add
popa
xor
jmp
dec
lock
rol
scas
xor
popf
imul
mov
xor
es
mov
out
cmp
add
es
dec
jo
add
sbb
xchg
call
lock
shl
mov
dec
add
cdq
push
push
adc
es
add
or
cmp
cmp
es
sub
dec
xor
add
add
cmps
cmp
xchg
xchg
in
popa
ds
and
add
retf
sub
test
scas
sbb
mov
out
es
mov
lods
shr
dec
add
adc
fiadd
xchg
out
fdivr
sub
pop
out
into
pop
ins
mov
jle
cwde
sti
bound
add
adc
rcr
cmp
add
ret
hlt
out
loop
sub
je
iret
int3
or
pop
test
loope
daa
pop
jbe
scas
stos
add
lea
push
pop
pop
imul
jae
out
mov
add
mov
lahf
or
add
outs
or
and
out
jo
ret
stc
dec
jle
mov
add
int
(bad)
data16
retf
retf
imul
jmp
push
xor
es
dec
add
loop
adc
out
add
sbb
rcr
and
jle
imul
es
push
jo
jg
nop
outs
add
push
sbb
cmc
cmc
sti
mov
add
pop
int3
int3
(bad)
jbe
es
push
jno
and
(bad)
add
rol
push
push
out
out
pop
es
pop
jmp
fcomp
jge
add
fsub
pop
out
pop
rol
pshufw
loope
rol
jle
xlat
sar
mov
push
es
dec
mov
aam
sbb
outs
out
jg
mov
pop
add
out
pop
sbb
jns
and
das
ror
add
sub
sub
xchg
pop
jg
add
stos
es
or
mov
xor
in
mov
mov
jo
add
push
int3
int3
icebp
cs
add
adc
(bad)
jge
and
leave
ins
ins
sbb
out
idiv
add
mov
jecxz
(bad)
or
fldenv
xor
(bad)
aam
out
add
(bad)
sysret
cmp
mov
sahf
sti
out
mov
loopne
out
hlt
out
pop
in
add
adc
mov
out
std
jmp
inc
inc
movs
stc
adc
fwait
add
jno
aad
lea
out
inc
movs
fisub
pop
fs
sub
adc
mov
(bad)
out
dec
or
es
daa
push
adc
out
test
mov
add
cmp
rcl
daa
sahf
(bad)
fild
push
jns
inc
in
neg
xor
and
add
jb
jb
xchg
mov
(bad)
xchg
adc
out
bound
outs
mov
movs
cmp
dec
cmp
adc
out
inc
jge
add
nop
pop
and
add
in
pop
dec
adc
mov
sub
sub
lock
xor
inc
std
loope
mov
add
inc
add
xchg
xchg
mov
xor
mov
push
int3
sbb
or
jecxz
and
jmp
and
sub
test
add
xor
sahf
(bad)
pop
out
add
movs
adc
fadd
push
mov
out
out
push
mov
add
push
ret
add
sbb
(bad)
push
je
xor
push
cmc
cmc
and
out
mov
mov
xlat
call
xor
pop
bound
out
sbb
mov
repnz
cmp
cld
es
scas
dec
shl
xor
loope
out
push
enter
push
add
out
clc
mov
inc
es
dec
dec
outs
mov
iret
xlat
xlat
add
out
push
bnd
enter
mov
test
push
mov
loopne
xchg
out
jne
push
jle
stos
inc
inc
out
je
and
and
xor
leave
fldenv
call
inc
add
xor
fnsave
xchg
add
sti
sbb
imul
addr16
dec
sub
retf
(bad)
out
add
sub
mov
jae
or
fdivr
add
loope
adc
xchg
pop
sti
cmps
add
hlt
(bad)
scas
scas
pause
xchg
fsub
or
out
sbb
fsub
out
pop
mov
adc
scas
es
cmp
leave
leave
repz
call
mov
push
mov
aas
out
dec
or
es
sbb
out
sub
and
adc
and
fiadd
arpl
ret
dec
mov
xchg
inc
sbb
cmc
push
popa
popa
add
cmp
fs
pop
shl
out
sub
inc
hlt
mov
mov
stos
aam
cwde
pop
or
outs
add
aad
es
rol
rcl
mov
call
inc
sar
es
inc
inc
cmp
push
jge
mov
es
scas
or
es
sub
dec
inc
cmp
out
jmp
dec
mov
ja
gs
cmp
mov
mov
retf
es
xor
mov
add
repz
and
cmp
out
xchg
jge
pusha
add
and
cmp
sbb
xor
(bad)
mov
out
mov
test
out
mov
mov
pop
out
mov
rcl
xchg
out
xor
sbb
sub
mov
push
aam
xor
loopne
jo
add
mov
cmp
sbb
add
adc
int3
int3
test
adc
dec
inc
inc
inc
imul
mov
sub
jb
jns
xlat
out
nop
fcmove
es
pusha
xchg
lock
es
int3
mov
lea
dec
adc
es
sub
push
es
popf
add
sub
jecxz
inc
inc
mov
pop
add
out
(bad)
out
cmps
loopne
pop
pop
add
jns
pcmpeqb
dec
push
push
or
or
gs
add
out
adc
sub
mov
pusha
mov
xchg
ret
out
ins
dec
int
mov
popa
mov
lock
add
pop
scas
scas
retf
scas
scas
add
aad
cmp
sbb
out
sahf
sub
popf
dec
test
add
lock
or
xor
ss
add
mov
pop
push
mov
out
add
das
es
push
imul
add
out
out
xor
in
rol
loop
popa
add
pop
out
loop
add
sbb
adc
add
jmp
xor
out
es
add
int
test
les
xor
jp
test
mov
mov
jnp
cmp
call
mov
add
pop
loop
(bad)
call
add
mov
pop
mov
fs
pop
(bad)
jo
fistp
out
jl
cld
test
dec
push
cmc
out
popf
outs
cmp
sahf
add
jno
add
es
lahf
or
xlat
cmp
pop
push
push
push
xchg
xchg
mov
imul
es
pop
ja
bsf
fcmovu
xor
mov
fcmovnb
add
loopne
aad
aaa
mov
es
popa
mov
sbb
imul
add
imul
test
pushf
add
add
xor
inc
aad
and
sar
push
jno
enter
cs
pop
sbb
rcl
out
movs
ds
inc
cmps
in
es
add
aas
adc
(bad)
jp
leave
xor
out
jno
imul
out
js
std
cmps
cmps
dec
mov
out
inc
cmp
es
popf
or
inc
cwde
jle
es
cld
jne
jns
add
pop
pop
jg
push
out
jo
fsub
xchg
sti
adc
dec
dec
mov
ud2
or
scas
cdq
out
out
cmp
cmc
adc
rcl
mov
add
ja
and
add
enter
jbe
xchg
add
out
popf
jo
pop
pop
dec
in
out
leave
cmp
sbb
nop
inc
lods
out
sub
mov
pop
inc
mov
xchg
fiadd
push
mov
out
fadd
adc
out
adc
jge
mov
add
aaa
aaa
inc
mov
xchg
outs
popf
pop
out
or
es
fstp
add
xor
dec
mov
xor
ins
mov
sub
xor
mov
mul
jl
push
js
push
add
jg
cmp
dec
add
push
loop
add
mov
fistp
test
out
rol
fist
out
mov
add
stc
shl
les
es
imul
or
loop
cmp
inc
xor
add
repnz
mov
sub
jbe
test
aas
stos
add
cmp
adc
out
xchg
adc
es
mov
sbb
add
add
dec
ret
xchg
add
or
mov
or
or
nop
inc
add
movs
call
inc
adc
add
and
mov
add
ret
push
sti
ins
ins
scas
setae
jg
out
stos
ja
add
ret
fs
in
mul
dec
dec
dec
mov
push
cs
add
(bad)
in
out
push
fnstsw
out
sbb
scas
sbb
add
es
xchg
sahf
add
mov
out
stc
jne
es
mov
add
mov
call
test
inc
out
mov
aam
and
out
and
add
cmp
js
clc
jp
mov
movs
xchg
xchg
nop
add
enter
add
add
inc
push
out
js
adc
(bad)
scas
and
push
push
cmp
cmp
mov
jl
test
cmp
jb
retf
retf
nop
dec
ds
inc
sbb
add
ror
fisub
xchg
jmp
add
rcl
repz
add
std
cmp
pop
lds
div
mov
push
out
mov
out
js
mov
inc
mov
mov
mov
sub
scas
pop
mov
cmp
xchg
je
es
fdivr
rol
icebp
es
out
push
rcl
mov
add
xor
adc
stos
mov
(bad)
xchg
lea
adc
dec
dec
mov
jb
sbb
mov
sbb
sahf
mov
es
stos
push
nop
and
in
add
inc
jae
es
adc
push
fcmovnu
fild
iret
iret
push
sub
sub
in
in
nop
es
cmc
ins
clc
push
out
cmp
mov
pop
sbb
jno
loopne
leave
add
dec
mov
and
xchg
xchg
sub
gs
adc
fsub
add
adc
ins
sbb
lods
pop
imul
sub
dec
ret
bound
mov
test
mov
jb
rol
push
sti
sti
add
ds
dec
adc
or
dec
movs
movs
push
nop
out
fs
outs
outs
mov
pushf
out
cmp
out
add
mov
fcomp
add
mov
pop
pop
pop
sti
jp
add
mov
mov
out
cmps
and
test
sub
jno
pop
mov
out
add
adc
aad
mov
add
jns
dec
inc
sub
ds
add
out
ret
es
jb
add
(bad)
mov
es
or
es
add
es
ret
cld
cld
inc
mov
jle
sbb
mov
cmp
iret
lock
int
je
jge
fadd
es
dec
dec
pop
mov
es
add
call
out
fidivr
out
inc
inc
inc
es
mov
retf
stos
loopne
sub
shl
mov
add
jae
es
jl
sahf
sub
jp
add
or
ds
sbb
push
mov
js
out
ret
add
ficom
jl
int3
add
mov
adc
mov
mov
inc
aam
sub
inc
jg
pop
pop
lods
es
and
add
mov
outs
inc
inc
mov
pushf
jne
es
fstp
push
fcomp
push
add
out
fst
es
add
mov
fist
sbb
and
in
lods
es
test
fiadd
xor
(bad)
sar
rol
add
es
cmps
mov
mov
pusha
cmp
cmp
std
es
pushf
in
mov
fld
jmp
mov
es
ja
popa
(bad)
out
sbb
out
loopne
mov
pop
les
or
add
sbb
repz
jae
jg
mov
cmp
nop
in
mov
cdq
pop
pop
fnsave
out
xchg
stc
mov
out
cmp
sbb
retf
push
add
enter
es
pusha
push
sub
push
lea
xchg
mov
test
pop
adc
aaa
add
out
push
shr
cmp
hlt
add
(bad)
es
in
mov
es
out
cmps
jge
lock
stos
cmp
inc
add
out
xchg
jno
adc
dec
lea
(bad)
lods
into
xlat
add
cli
mov
dec
cmp
jns
sahf
je
(bad)
nop
shl
mov
jnp
repz
inc
inc
push
fdivr
lods
pop
add
add
repz
int
ins
and
add
xchg
out
pop
dec
xchg
es
ror
into
jo
fbld
(bad)
les
sbb
inc
(bad)
loopne
xor
(bad)
mov
call
daa
add
clc
clc
push
xchg
das
rcl
push
push
bound
leave
leave
mov
mov
pop
pop
pop
lahf
push
push
inc
out
sbb
mov
jae
mov
out
pop
mov
mov
popa
das
call
(bad)
jmp
add
xor
out
cmps
sub
jp
mov
add
cmp
data16
mul
out
mov
xchg
xchg
std
or
out
scas
add
fstp
movs
xor
out
push
cmp
or
dec
jge
jp
movntq
out
mov
fcomp
cs
add
or
mov
mov
jb
push
pop
es
push
add
mov
inc
fsub
sub
ds
pop
out
jmp
fs
out
ss
es
and
not
div
hlt
das
add
out
frstor
loope
mov
add
jge
xchg
add
jns
addr16
pop
data16
into
mov
add
sbb
int3
outs
inc
add
mov
push
rol
jmp
and
es
call
push
es
adc
mov
sahf
cmp
pop
inc
add
in
push
add
xchg
jno
js
lods
es
add
sub
mov
add
out
movs
sub
mov
add
xchg
cmp
inc
add
sbb
adc
out
push
mov
cmp
mov
add
es
inc
movs
add
es
lahf
mov
push
push
jne
nop
call
(bad)
sbb
mov
pop
xchg
add
fisttp
pop
fisub
scas
dec
add
out
cmc
mov
es
stc
call
mov
out
pushf
stc
sbb
addr16
add
rcl
scas
xchg
push
sbb
xchg
dec
icebp
inc
mov
out
movs
add
adc
ret
xchg
arpl
xor
lds
adc
jbe
add
fsub
push
into
add
clc
cmp
sbb
loopne
mov
aam
add
and
pushf
inc
xchg
es
add
jns
fmulp
ror
out
sbb
call
add
adc
pop
inc
inc
or
in
add
out
aas
push
out
jp
sbb
add
adc
ja
sub
jno
inc
mov
imul
jnp
mov
add
adc
das
inc
shr
pop
sti
mov
sbb
lahf
movs
push
out
mov
xor
int
pusha
movntq
mov
retf
rol
hlt
hlt
out
jl
out
popf
cdq
add
std
push
and
out
sar
adc
(bad)
xor
push
out
inc
pop
sub
add
sbb
add
adc
jae
add
and
lods
xor
jb
jmp
cmp
shl
sbb
nop
rol
or
sub
xor
pop
add
inc
inc
inc
fmul
out
xchg
sub
jbe
out
ss
jne
push
pop
add
add
call
fcmovu
add
fidivr
test
cwde
add
cs
out
mov
(bad)
es
add
mov
xchg
in
hlt
push
push
xchg
add
(bad)
dec
jle
push
es
sbb
cmps
cmps
fiadd
shl
out
fwait
pusha
mov
and
pop
or
out
jmp
aaa
push
push
retf
out
sbb
es
or
and
add
adc
push
push
loop
jnp
fmul
cmps
pusha
jmp
in
add
(bad)
out
xchg
vcvtpd2dq
and
or
jne
call
into
mov
pop
hlt
ja
mov
sbb
add
stc
sub
inc
xlat
adc
xchg
xchg
push
inc
sub
xchg
sbb
pop
lods
or
or
leave
xchg
sbb
sbb
push
retf
je
sub
xchg
out
les
cmp
out
ret
es
lahf
arpl
jno
aam
and
pusha
add
jmp
mov
add
ret
push
dec
clc
es
push
aam
cmp
push
add
mov
mov
add
ret
aaa
dec
dec
xor
shl
ss
ds
out
adc
es
pop
add
and
cmp
and
out
sbb
inc
dec
dec
or
add
out
jns
stos
mov
add
outs
cld
mov
pop
test
call
push
mov
pop
mov
add
es
push
das
das
fild
add
mov
pop
outs
xor
jnp
push
push
pop
mov
aaa
add
add
int3
and
fcom
add
cmp
icebp
cdq
xchg
push
push
jae
add
stos
aam
stc
rol
clc
call
jp
or
xchg
cmp
bound
add
xlat
imul
or
(bad)
out
push
add
punpcklbw
cmp
add
or
and
adc
mov
or
lock
add
ja
pushf
add
adc
fdivrp
es
mov
xlat
outs
outs
and
add
xchg
add
sahf
sub
jmp
mov
ror
mov
pop
add
int3
mov
mov
push
pushf
icebp
es
add
out
jo
sbb
(bad)
call
add
jp
and
out
pop
mov
add
in
cs
int3
sub
mov
push
pusha
pusha
inc
sti
aam
add
popa
mov
fwait
loop
stos
add
arpl
int3
mov
mov
add
adc
jnp
je
inc
shl
lds
dec
jge
out
inc
scas
out
repnz
es
jle
dec
rcl
lods
jp
add
ins
je
out
inc
sti
adc
retf
clc
out
inc
sub
adc
pop
cli
out
std
add
and
inc
jno
es
or
xchg
jmp
add
ds
es
add
xchg
lods
mov
add
mov
rcr
es
pop
sbb
add
add
hlt
hlt
and
push
out
loop
dec
push
push
pop
sar
out
add
fcomp
push
push
out
and
cmp
in
test
int
(bad)
add
mov
in
in
aaa
aaa
adc
rcl
dec
add
out
adc
mov
out
add
and
test
iret
gs
jo
pop
pop
pop
xor
add
inc
out
loope
enter
nop
pop
out
xor
dec
xchg
dec
fwait
add
std
xor
les
call
jbe
es
or
pop
pop
pop
iret
inc
and
mov
jae
jg
mov
and
iret
xor
cs
mov
ret
es
fcmovnbe
adc
inc
loop
(bad)
les
ja
out
das
adc
add
push
popf
cmps
out
daa
xchg
add
mov
mov
out
mov
ins
je
add
xor
icebp
out
push
loopne
loope
out
retf
mul
add
and
out
xchg
inc
cmp
and
add
mov
in
push
packssdw
ror
mov
cmp
add
mov
int3
iret
add
mov
or
test
cs
daa
out
jo
popa
jo
and
mov
push
popf
add
fsub
ds
out
in
push
mov
(bad)
dec
inc
gs
xchg
pop
(bad)
cdq
cdq
add
cmp
xor
push
xchg
adc
into
push
imul
ja
pop
es
mov
lock
push
retf
mov
add
cmps
jbe
icebp
mov
cmp
add
sar
retf
mov
add
rcr
test
sub
or
repnz
les
out
pushf
test
adc
pop
jl
add
out
mov
add
leave
mov
sub
loopne
or
jo
(bad)
iret
dec
out
mov
(bad)
jb
out
add
inc
mov
clc
es
lods
pop
adc
cmp
fs
sbb
fndisi(8087
xor
es
add
add
imul
add
in
mov
xlat
and
pop
inc
outs
sbb
rcr
enter
mov
cmps
div
pushf
jp
add
or
out
mov
add
imul
inc
cmp
hlt
add
sbb
add
gs
add
repnz
mov
add
xchg
xchg
adc
jmp
add
xlat
ror
add
add
(bad)
xchg
xchg
jp
xor
adc
cmp
lock
mov
and
repz
add
es
adc
mov
out
(bad)
test
mov
mov
sar
shl
retf
add
cwde
mov
inc
dec
icebp
adc
inc
fcom
es
test
outs
inc
jae
in
xchg
out
and
cld
aad
inc
out
add
sub
add
shl
call
inc
addr16
lock
mov
pop
sub
jae
mul
ffreep
out
mov
xchg
in
nop
add
es
(bad)
popf
jns
repnz
es
fadd
pop
fiadd
jle
int3
int3
sbb
push
push
jmp
enter
cs
jo
jmp
pusha
repnz
or
adc
out
add
mov
pop
test
adc
sub
out
imul
iret
add
sahf
or
dec
jb
add
mov
inc
adc
inc
sbb
sub
cmp
out
mov
inc
out
out
nop
dec
sbb
push
cmps
xor
mov
popf
xor
rcr
enter
sub
sbb
cmp
fisttp
add
hlt
retf
fsub
popa
jb
jp
add
out
int
mov
add
pop
aas
aas
dec
dec
popf
es
setle
mov
mov
mov
in
sbb
ins
add
jmp
cmp
dec
and
(bad)
add
(bad)
iret
out
js
and
fisttp
or
dec
test
lods
add
es
add
movs
jmp
rcl
jg
add
cmps
cld
pop
jne
mov
pop
aaa
es
out
clc
data16
(bad)
add
push
es
iret
adc
jmp
add
rol
sti
sti
adc
out
xchg
stos
addr16
pop
jnp
mul
nop
adc
add
cli
sub
fcom
es
or
cmp
stos
mov
push
and
jmp
jno
int
inc
shl
shl
add
mov
jg
mov
mov
out
xchg
popa
xor
cmp
lock
aad
adc
pop
or
es
jp
inc
inc
mov
fld
rcr
and
jo
push
out
out
add
es
pushf
add
adc
ss
xchg
xchg
pop
xor
out
adc
add
es
cmp
xchg
ss
cwde
cwde
and
scas
loop
jge
ror
out
lds
es
add
cmp
jp
retf
out
add
xchg
or
xor
in
out
add
es
(bad)
adc
cs
add
test
xchg
es
stos
out
or
es
aaa
rep
jno
sbb
xchg
in
or
pop
fild
adc
jo
loope
rcl
jp
lds
push
retf
push
adc
pop
ds
pusha
pusha
sbb
out
add
aaa
cmps
push
sub
hlt
add
es
push
shr
out
xlat
adc
(bad)
add
cld
or
les
out
sub
mov
add
inc
push
sbb
iret
out
xchg
pusha
arpl
out
sar
mov
icebp
out
fcmovb
cmps
sahf
sahf
mov
iret
out
test
add
cs
ret
call
pop
or
fisub
xchg
fwait
addr16
push
pop
pushf
add
cs
adc
add
es
les
xchg
xchg
es
sbb
lock
pop
(bad)
je
add
jne
sar
mov
inc
add
inc
cmp
or
sub
or
jmp
xor
sbb
push
push
push
add
ins
sbb
out
add
sbb
inc
and
and
mov
cwde
out
cmp
dec
cs
push
mov
mov
mov
add
test
bound
cmp
ret
inc
pusha
pop
pop
add
sbb
scas
outs
dec
add
sub
ret
push
arpl
inc
and
mov
add
(bad)
jae
xor
inc
cmp
cli
cli
jmp
(bad)
push
mov
lds
adc
out
jge
push
es
dec
test
clc
out
lea
(bad)
xor
ror
test
test
xor
popf
out
scas
add
es
adc
rol
xor
xchg
xchg
xchg
(bad)
out
sbb
add
cdq
cdq
mov
cmp
out
push
sti
and
cmp
test
xchg
cld
loope
add
add
pushf
pushf
pop
pop
inc
out
loopne
lods
es
mov
sbb
rcl
add
out
aam
jle
stos
and
pusha
ret
xchg
push
adc
out
bound
es
retf
pop
cli
add
fmul
add
retf
sbb
adc
loope
es
jmp
in
and
leave
cli
cli
mov
out
mov
loop
pop
out
and
es
push
ins
sbb
js
mov
add
or
loopne
push
add
jp
stos
xchg
add
out
or
and
cmp
mov
and
jmp
adc
ja
add
cs
retf
cmp
add
sbb
adc
pop
aam
jne
add
adc
das
cmp
clc
out
add
(bad)
out
adc
xchg
es
out
je
pusha
adc
movs
add
test
shl
sahf
add
cmp
adc
mov
add
ds
ret
scas
sub
push
punpckldq
movs
(bad)
shl
cmp
cmp
shl
xor
fstp
mov
push
shl
fimul
std
push
out
cmp
repnz
int3
push
push
xchg
sbb
(bad)
cmova
cs
sub
es
and
add
les
out
inc
add
cs
div
cmp
add
es
or
je
es
aam
add
cmp
push
push
mov
fidivr
pop
bound
mov
pusha
push
dec
and
mov
jmp
jge
adc
lods
jg
ret
jns
push
mov
add
idiv
xchg
pop
add
sbb
mov
out
dec
sub
add
lock
sti
cmps
cmps
jno
add
fist
in
push
es
dec
adc
add
mov
(bad)
movs
add
push
es
jbe
xchg
xchg
xlat
add
es
and
test
fldenv
clc
es
jno
add
add
inc
and
aam
mov
add
(bad)
xlat
xlat
pop
push
daa
out
cmp
call
push
(bad)
out
es
pop
(bad)
mov
es
or
mov
fild
mov
sbb
sets
xor
inc
pop
shl
(bad)
pop
xchg
jo
pop
aad
es
mov
xor
jae
jl
les
mov
leave
jp
lahf
out
or
lock
add
push
addr16
out
aad
stos
mov
sbb
cmps
out
outs
add
retf
xchg
loopne
imul
push
leave
fsub
or
add
pop
pop
xchg
ins
mov
cmp
mov
push
pop
out
xchg
xchg
add
sti
loope
into
out
sub
add
add
aam
es
or
es
or
rol
pop
popa
add
mov
shl
jle
mov
(bad)
pop
add
xlat
ds
jae
es
nop
js
data16
pop
cmp
pop
in
and
aaa
ja
pop
es
add
sbb
es
daa
(bad)
dec
dec
cdq
xor
es
xchg
xor
add
rcl
add
push
pop
es
cmp
retf
loop
dec
inc
add
mov
adc
outs
pop
pop
push
rcr
xchg
bound
int
mov
imul
retf
retf
mov
or
shr
mov
out
loopne
cli
es
mov
mov
sbb
mov
add
stos
or
clc
add
loopne
mov
jge
push
cmp
fsub
shl
mov
popa
(bad)
cmovle
inc
dec
dec
ins
jno
out
inc
jb
or
dec
mov
cmp
cmp
mov
enter
xor
mov
mov
add
xor
es
or
mov
rol
add
out
add
push
es
in
(bad)
out
add
and
out
add
fldenv
pop
iret
ins
cmps
mov
mov
push
add
(bad)
aaa
cmc
sbb
scas
add
xor
add
xchg
lds
clc
clc
mov
xchg
pop
jmp
sub
fisubr
push
push
add
aam
adc
cmp
mov
pop
inc
pushf
es
cld
sbb
hlt
adc
xchg
out
inc
xchg
out
data16
mov
sub
xor
add
shl
and
push
out
add
jbe
mov
sbb
or
jg
rol
pop
fbld
shl
inc
lock
dec
fsub
or
add
push
scas
shl
dec
add
iret
(bad)
in
in
add
es
pop
out
scas
scas
add
sub
push
out
sbb
setae
or
jo
outs
push
cmp
out
add
es
cmp
loope
xchg
dec
sbb
xchg
retf
rol
pop
pop
pushf
rcr
lds
es
add
jne
sbb
std
call
gs
mov
fcmove
xchg
cmp
push
mov
out
bnd
es
and
pop
nop
nop
push
add
cmp
call
sti
es
outs
js
jns
push
stc
sub
bound
iret
das
or
cli
cli
nop
and
out
jmp
push
cmp
jp
xor
icebp
out
enter
cmp
dec
aam
es
daa
mov
inc
(bad)
stos
dec
es
(bad)
cmp
add
fmulp
stc
data16
jae
out
add
jge
push
ins
add
and
dec
add
pop
into
jmp
add
lahf
ja
es
(bad)
call
cld
xchg
xchg
add
enter
add
or
adc
shl
mov
fadd
fistp
add
es
and
cmps
add
sbb
pop
out
outs
outs
and
jb
add
mov
es
mov
add
mov
test
out
clc
mov
adc
stos
jns
jle
sbb
push
out
xchg
mov
and
jae
jle
es
test
ins
or
leave
test
shl
add
out
movs
sti
ror
or
adc
aad
rol
fs
out
addr16
movs
movs
stc
(bad)
and
push
mov
sbb
add
shl
cmc
or
cld
cld
or
out
or
cli
add
lods
push
es
jl
add
add
or
(bad)
data16
inc
add
pop
sbb
lods
shr
pop
add
pop
pop
jecxz
push
out
out
and
cmp
in
adc
call
or
jmp
sub
es
xor
mov
add
or
push
inc
addr16
repnz
mov
clc
loopne
aam
push
pop
lahf
pop
es
pop
jecxz
dec
es
jo
jge
pop
pop
enter
add
movs
imul
in
int
mov
adc
(bad)
out
add
push
jle
dec
test
jmp
je
call
pop
out
ins
or
in
jg
lahf
aas
add
push
push
imul
out
outs
sub
ds
and
mov
xchg
add
jno
push
push
cmps
sub
and
ds
and
stc
add
sbb
mov
add
(bad)
data16
xor
add
lea
ret
ret
jno
add
xor
loopne
pop
cmc
push
(bad)
add
mov
jne
jmp
mov
es
loopne
push
add
jecxz
sbb
and
and
pop
pop
outs
push
aaa
out
add
push
es
inc
jle
aad
add
push
scas
frstor
out
lahf
mov
cmc
fwait
sbb
in
xor
pushf
push
out
sahf
mov
popfw
gs
sbb
push
hlt
out
out
lock
out
sub
cld
sbb
fist
iret
es
into
push
dec
or
outs
outs
lock
out
xchg
jno
add
sbb
mov
inc
add
mov
jae
gs
pop
loopne
out
cmp
mov
call
push
jl
ret
and
ds
je
fstp
add
sbb
retf
mov
out
cmp
leave
es
xchg
jnp
pop
pop
popf
dec
add
jo
inc
pop
movs
movs
dec
(bad)
lahf
pop
pop
mov
add
out
lea
pop
mov
pop
inc
mov
leave
add
jno
add
add
or
fsub
xchg
pop
add
pop
sbb
outs
add
es
add
add
es
dec
stc
sbb
popf
ja
rcl
out
data16
es
xor
cmp
int3
inc
ins
jmp
add
mov
out
movs
mov
add
out
sbb
es
sub
pop
pop
sbb
sbb
pop
inc
or
mov
xlat
leave
stc
stc
add
out
mov
enter
add
dec
jbe
sub
add
popa
movs
dec
mov
dec
add
stos
push
movs
xchg
xchg
jo
mov
xor
dec
push
gs
imul
fld
lock
repnz
loope
mov
xchg
call
and
mov
js
movs
es
(bad)
pop
sbb
clc
hlt
lods
into
es
mov
out
adc
mov
xchg
out
xlat
shr
es
jne
rol
pop
pop
es
pop
popf
or
adc
mov
jmp
xchg
pushf
xor
out
rol
es
and
ror
pusha
add
out
pop
pop
sbb
inc
aas
aas
mov
repz
cmp
and
ret
inc
shl
out
out
add
out
push
dec
shl
out
xchg
lds
in
xor
(bad)
mov
retf
pop
add
repz
mov
enter
jle
es
xor
pop
pop
jmp
push
js
out
add
es
test
add
sub
cmp
xor
add
add
out
daa
add
les
inc
std
cdq
pop
or
add
push
out
or
add
popa
enter
ja
imul
mul
fldl2t
mov
mov
pop
paddb
xchg
xchg
(bad)
xor
dec
dec
add
cwde
mov
add
cmps
jmp
out
add
repnz
mov
add
add
pop
pop
mov
retf
outs
jge
es
mov
add
lds
xor
popa
popa
test
xor
pop
iret
es
add
cmp
xchg
push
pop
(bad)
(bad)
xor
xtest
out
push
(bad)
stos
ss
gs
add
mov
add
mov
jge
or
add
adc
mov
(bad)
aam
add
jno
data16
mov
cmp
xor
stos
mov
or
add
pushf
cmp
rol
add
call
sbb
pusha
sahf
es
cmp
aam
in
and
cmp
lods
lods
xchg
out
es
xchg
pop
push
push
in
call
rcl
add
sub
dec
pop
pop
xor
(bad)
out
aad
cmp
xor
pop
out
test
ds
jg
and
outs
adc
cmps
xlat
pop
pop
cmc
cmc
push
add
cdq
pop
fldcw
(bad)
and
pop
sub
out
adc
add
test
scas
dec
dec
call
add
es
mov
add
sub
push
inc
shl
jno
iret
shl
push
mov
add
mov
push
ds
fsub
push
cs
(bad)
loopne
rol
cmps
div
imul
add
pop
dec
cld
jae
or
adc
pop
scas
pop
and
sub
adc
add
test
add
ret
out
popf
lods
add
stc
into
jae
movs
movs
dec
or
inc
mov
pop
es
mov
dec
add
push
mov
mov
jno
add
out
fmul
xor
mov
vaddsubps
test
movs
movs
fs
out
xchg
ret
aaa
mov
fisttp
aad
std
aam
loopne
jge
scas
out
or
lds
stos
in
daa
stos
push
push
jo
sbb
and
push
add
(bad)
fsub
fnstenv
mov
pop
out
push
add
outs
outs
repz
mov
stos
es
push
movs
int
es
addr16
dec
dec
add
pop
nop
stc
cs
shl
es
or
jl
jge
push
jmp
jno
lahf
lahf
adc
add
test
stos
call
(bad)
push
into
xor
es
inc
inc
out
out
cmps
mov
add
es
je
pop
pop
mov
aad
cmps
sti
test
leave
xchg
shr
xchg
xchg
mov
or
xchg
movs
movs
mov
adc
add
cld
es
call
(bad)
lods
out
cmp
and
push
es
cdq
add
es
bound
ja
mov
add
xchg
jg
out
sbb
add
push
sbb
jmp
push
ds
dec
out
adc
pop
pop
ret
lods
pop
out
in
add
jecxz
in
add
(bad)
jp
std
out
or
icebp
es
cmp
pop
pop
stc
jno
ja
push
rcl
out
jmp
mov
dec
into
ret
mov
call
stos
(bad)
sub
cmp
jne
or
inc
inc
dec
popf
lds
ret
mov
out
sbb
aam
mov
xchg
mov
loopne
test
out
xchg
inc
sub
out
pop
add
push
call
outs
add
pusha
dec
rcr
mov
add
rcl
cmps
cmps
adc
add
jno
out
jg
stos
mov
xchg
xchg
out
out
cmp
mov
add
mov
cmp
dec
out
xor
mov
cmps
ds
into
ins
ins
jge
sti
out
out
cmp
loopne
pop
pop
pop
pusha
fld
mov
mov
ds
cld
in
add
(bad)
or
inc
inc
gs
cmp
inc
aaa
or
pop
inc
xor
cmp
int3
mov
pop
aam
mov
out
in
shl
out
(bad)
scas
shl
push
mov
add
or
mov
sub
(bad)
jne
xchg
ss
sbb
and
mov
pop
sub
nop
inc
test
sti
add
cli
pop
imul
es
out
int3
inc
add
jbe
mov
out
sbb
cmp
dec
mov
mov
cmp
fisttp
(bad)
out
push
jnp
inc
inc
pop
add
adc
mov
jns
xchg
add
adc
mov
in
arpl
add
retf
sbb
pop
add
sub
cmp
call
int3
(bad)
aad
dec
lock
es
add
mov
es
xor
cmp
stos
inc
push
and
dec
jo
out
jae
das
and
outs
pop
sub
inc
adc
push
sbb
add
dec
in
in
(bad)
fnsave
jno
pop
fld
(bad)
lds
out
sub
ret
add
and
pop
or
inc
jo
es
add
out
ja
test
jmp
adc
pop
fadd
in
(bad)
out
aas
or
push
cmp
out
jecxz
push
es
fwait
pushf
mov
call
pop
loop
sbb
idiv
mov
stc
out
add
ret
xchg
mov
mov
push
ds
xchg
add
inc
dec
out
add
dec
fcmovu
ret
xchg
ins
ins
pop
(bad)
push
out
jnp
cmp
out
mov
je
pop
mov
out
xor
or
add
sbb
fsub
fwait
pop
add
or
sub
out
mov
add
les
or
cmps
and
scas
out
mov
xor
sub
inc
add
outs
fcmovnu
cli
add
mov
fs
push
icebp
icebp
mov
(bad)
sbb
adc
ror
inc
and
iret
aaa
add
sbb
popa
adc
push
jne
adc
bound
(bad)
mov
es
sbb
(bad)
jp
es
aas
inc
inc
clc
add
repnz
ja
out
dec
pop
jl
ins
cmp
add
rol
mov
lock
add
in
shr
es
lea
jno
push
push
in
pusha
out
in
pusha
sub
and
out
xchg
mov
add
sub
fld
in
xlat
out
cmp
test
sar
inc
dec
scas
loopne
out
and
pop
es
push
ins
jns
jb
gs
repnz
out
xchg
add
fwait
loop
imul
sbb
jnp
(bad)
push
add
div
adc
js
mov
xor
cmp
cmp
pop
pop
push
out
adc
add
dec
jo
adc
inc
cmps
push
icebp
add
fdivr
popf
es
and
jmp
call
rcl
or
cmp
pop
xchg
xchg
dec
push
shl
pop
repz
add
cs
in
stc
es
out
gs
cld
daa
add
es
pop
clc
adc
aad
and
lgdtd
or
mov
es
pop
or
scas
scas
add
(bad)
(bad)
(bad)
(bad)
jo
rol
add
cs
out
add
(bad)
adc
sub
repnz
xor
cdq
cdq
dec
jg
out
mov
add
cmc
jmp
cmp
out
or
retf
add
pop
wbinvd
xchg
and
xchg
xchg
add
loope
inc
repz
or
jns
mov
add
es
rcr
in
pop
mov
arpl
out
cmp
add
push
stc
movs
jmp
push
add
enter
das
add
js
jmp
(bad)
cmp
inc
cli
nop
add
xchg
repz
or
stc
fild
sbb
mov
out
cmps
push
repnz
inc
loope
out
or
sbb
out
adc
sub
fisubr
add
mov
mov
rol
out
mov
and
jle
test
es
mov
push
shr
test
pop
pop
out
sbb
fsub
jne
loop
sar
xchg
xchg
lock
test
dec
(bad)
das
or
inc
sbb
stc
stc
xchg
add
adc
ror
(bad)
(bad)
cs
call
mov
add
test
or
jmp
es
pusha
pop
add
mov
ins
pop
es
mov
cmp
add
ds
jo
jle
pop
and
mov
fisub
jg
test
popf
test
mov
fsub
jge
xor
es
jp
rcl
stos
sbb
push
sub
out
test
or
add
pop
or
mov
stos
out
cmp
jae
add
add
adc
xor
add
mul
outs
stos
stos
in
inc
out
dec
mov
hlt
stc
out
add
lods
xor
call
aam
js
mov
lock
sub
je
aas
lods
dec
mov
add
cs
out
add
jmp
or
and
push
clc
pop
es
loopne
imul
int3
dec
dec
push
pop
sbb
(bad)
dec
inc
dec
es
inc
shl
add
jle
add
sub
in
push
sbb
out
push
mov
stos
add
loop
loope
es
test
add
push
arpl
xor
mov
cmp
aas
ds
mov
xlat
xchg
out
xchg
and
pop
jl
out
movs
mov
add
mov
inc
push
es
inc
loope
sub
hlt
cld
add
in
lods
sub
icebp
arpl
out
or
fbld
dec
iret
out
lods
call
sahf
in
out
inc
push
lods
sub
adc
out
add
mov
mov
aaa
aaa
and
cmp
repnz
sbb
outs
data16
ret
in
out
mov
scas
(bad)
enter
jp
add
add
nop
es
add
scas
shl
cmp
sbb
cmc
out
fbld
es
add
imul
jnp
es
sub
jbe
loopne
add
ror
inc
inc
cld
imul
pop
out
test
jle
ja
push
shl
push
xor
xchg
jecxz
fisttp
add
push
repz
pop
or
lds
push
js
add
push
push
or
mov
lahf
es
inc
xor
int3
int3
loopne
add
jmp
adc
mov
mov
lods
adc
add
push
ficomp
std
add
ret
cmp
in
in
add
ja
cmp
out
adc
xchg
cmc
(bad)
(bad)
jmpw
shl
enter
repnz
cs
out
add
inc
jno
icebp
icebp
fisttp
out
jnp
cmp
and
xchg
imul
or
movs
push
push
push
jo
repnz
lock
aas
clc
or
add
test
es
cld
add
adc
cs
repz
mov
div
add
xor
sub
in
or
sbb
add
inc
mov
and
iret
push
mov
and
jmp
stc
stc
idiv
mov
data16
add
fbld
es
lahf
out
push
ja
lock
xor
punpckhdq
std
mov
stos
add
inc
inc
fst
out
inc
add
je
or
add
sub
jb
je
jae
outs
mov
push
out
jbe
mov
daa
out
add
or
out
fs
mov
mov
xor
out
mov
jecxz
dec
out
loop
(bad)
mov
sub
add
sub
adc
push
in
add
mov
out
sti
adc
cwde
adc
push
nop
nop
sbb
push
and
inc
inc
out
push
or
pop
cmps
jl
ret
(bad)
jecxz
out
jmp
stos
sahf
sahf
sub
lock
jae
adc
ret
out
imul
mov
add
arpl
or
into
retf
pop
loop
pop
sub
sbb
add
mov
test
add
repz
add
dec
mov
arpl
test
mov
pop
out
mov
in
es
imul
pop
or
mov
out
mov
and
push
into
cmp
out
xchg
mov
sub
mov
push
mov
mov
jo
sbb
push
jno
rol
out
out
cmp
jne
(bad)
push
cmc
cmc
mov
adc
cmp
push
iret
mov
movs
cwde
jg
add
dec
jns
outs
(bad)
mov
dec
add
es
hlt
sbb
add
fdivr
mov
call
mov
(bad)
cld
pop
xchg
xchg
(bad)
and
or
dec
sbb
es
clc
sbb
jno
ret
push
push
mov
aaa
out
xchg
sub
adc
movs
jns
mov
jmp
scas
scas
rcr
scas
out
mov
cmp
in
out
ror
ss
out
movs
(bad)
adc
add
adc
neg
out
add
imul
pop
es
ret
mov
push
int
mov
cmp
jae
add
fldenv
xlat
pusha
pusha
jbe
test
push
dec
es
in
xchg
fstp
mov
inc
or
enter
fcom
out
jl
sbb
ins
ret
cli
cli
in
ja
jecxz
push
push
inc
inc
nop
mov
out
mov
or
add
pushf
cmp
push
movs
movs
add
loop
cmp
retf
mov
out
sahf
iret
lods
add
ss
sub
out
test
out
pop
or
mov
shl
retf
cli
cli
xor
pop
out
fiadd
cmp
fsub
or
icebp
test
add
(bad)
(bad)
mov
sub
jecxz
sahf
add
pop
out
mov
jmp
sbb
sub
lods
mov
in
mov
rcr
xor
in
mov
inc
icebp
aas
xlat
xlat
stos
mov
add
or
pop
xchg
xchg
adc
out
clc
ror
es
xor
push
add
out
repz
es
mov
add
dec
jae
out
ret
es
adc
rol
lds
mov
out
stos
mov
cld
cld
lock
mov
or
mov
dec
add
add
or
jecxz
test
mov
pusha
fld
mov
pop
pop
sub
retf
out
das
mov
retf
test
mov
add
fsub
es
fld
dec
dec
and
es
jb
add
mov
fcomip
pop
jo
int3
leave
add
and
repz
add
arpl
es
pop
retf
cld
or
inc
pop
add
out
dec
test
adc
call
fisubr
out
scas
add
es
leave
aam
xor
es
fbstp
lds
add
test
add
es
adc
sti
inc
sbb
xchg
ret
out
rol
dec
mov
int
adc
push
icebp
stos
add
inc
out
mov
inc
mov
push
cmp
test
add
hlt
mov
xchg
xor
fsub
add
mov
or
aad
out
fst
mov
push
or
add
sbb
scas
adc
or
ja
pop
outs
(bad)
push
shr
inc
sbb
add
cli
sub
jle
hlt
mov
cmp
add
in
mov
xor
cs
fsub
lock
add
and
mov
xchg
mov
jp
mov
dec
imul
aad
scas
stos
stos
add
(bad)
mov
or
add
mov
(bad)
cmp
and
add
adc
xor
inc
icebp
icebp
add
cmp
xchg
scas
xor
mov
aaa
(bad)
in
dec
test
cmp
(bad)
cmp
and
push
pop
mov
cli
lods
pop
mov
mov
adc
es
retf
jo
loopne
std
stos
pusha
pusha
add
fsub
js
adc
xchg
xchg
scas
add
div
mov
xor
xor
mov
pop
push
data16
inc
shr
loop
sbb
add
out
unpckhps
add
sbb
inc
inc
add
out
sti
or
lods
or
pop
and
sub
push
mov
xchg
xor
ror
sbb
aas
aas
cdq
rcl
xor
rol
stos
pop
pop
pop
daa
pop
shl
in
sub
sbb
push
mov
fdiv
fisubr
add
push
mov
daa
inc
mov
sbb
out
outs
add
jp
mov
or
jne
xor
cmps
data16
(bad)
pop
cmovno
add
xor
iret
mov
fwait
pop
pop
in
jbe
es
(bad)
adc
mov
dec
jge
ss
out
push
in
lods
mov
(bad)
stos
add
mov
xlat
in
cmp
add
mov
push
push
popa
push
out
or
add
rcr
es
add
push
xor
add
out
pop
pop
in
out
jb
add
fcomip
sar
out
inc
add
push
pop
xor
out
add
add
or
out
jp
jns
and
pop
push
pop
pop
xor
aam
mov
es
cmps
xchg
xchg
(bad)
cmp
clc
out
sub
es
adc
repz
scas
fadd
cmc
out
cmps
imul
out
xor
add
loop
mov
out
add
call
push
es
pop
sbb
es
jbe
add
fsubr
movs
es
sub
add
popf
popf
in
sub
jae
out
out
adc
pop
add
into
add
pop
(bad)
or
add
add
popf
out
cmp
add
jecxz
adc
rcl
mov
shld
les
aam
sub
aam
inc
inc
rdmsr
jecxz
and
adc
add
es
xchg
add
xor
cmp
add
stc
inc
mov
add
aam
das
das
out
jge
in
and
push
dec
jmp
rcr
add
mov
sti
push
popa
xor
dec
or
es
jnp
lea
inc
jne
(bad)
out
add
and
enter
ins
lods
lock
cmp
scas
scas
adc
inc
out
jo
aaa
push
push
ss
out
ret
add
sub
add
adc
cwde
aaa
into
add
enter
push
push
mov
cmp
add
or
push
movs
push
addr16
sub
inc
inc
dec
cld
jp
test
je
out
mov
in
push
add
loopne
add
addr16
adc
jmp
add
data16
shl
and
add
ret
sub
rol
add
pop
call
sahf
cli
pop
out
add
loopne
inc
out
iret
add
addr16
ins
push
cmps
cmps
mov
xor
push
out
cmc
std
push
jp
lahf
js
out
pop
imul
dec
jb
out
mov
add
out
mov
ja
fdivr
lds
sub
jo
pop
pop
add
scas
out
adc
xchg
jne
add
lock
add
lea
mov
inc
es
cmp
ss
add
jp
out
das
test
sbb
add
dec
cmp
mov
(bad)
out
dec
adc
enter
cmp
cmc
fcmovnu
jb
cmps
out
lock
cmps
xor
(bad)
cmp
scas
jnp
daa
add
inc
pop
cs
fisub
jmp
test
jp
xchg
dec
adc
pop
xor
repz
pop
into
pop
dec
mov
pop
leave
mov
fld
push
push
sbb
mov
or
sahf
pop
add
xchg
jmp
cmp
add
(bad)
lods
ss
dec
out
es
lods
es
mov
pop
adc
str
pop
and
mov
hlt
sub
lea
xor
add
adc
data16
xlat
xchg
pop
(bad)
add
enter
push
sub
mov
dec
ss
push
cmp
cs
call
pop
out
fimul
movs
es
es
jp
xchg
(bad)
mov
push
add
out
xchg
inc
arpl
xchg
loopne
int
or
push
out
jecxz
inc
(bad)
(bad)
out
add
clc
clc
shl
add
popf
sbb
pop
data16
add
or
cwde
dec
push
push
add
sub
fwait
and
lds
sbb
lock
push
icebp
test
pusha
cmps
xchg
xchg
in
fwait
loopne
ss
popa
out
out
pop
add
repz
out
cwde
icebp
and
sbb
jno
mov
fcomp
fnstenv
out
adc
mov
je
cli
add
mov
stos
xor
pop
add
cmp
test
jecxz
add
addr16
int
dec
add
jmp
loopne
aaa
pop
outs
out
or
adc
sub
sbb
pop
pushf
jp
push
nop
add
pop
pop
pop
ror
pop
pop
sub
shl
or
es
sbb
xchg
es
push
or
or
fidiv
call
popa
pop
repnz
lods
jmp
pop
in
movs
jmp
add
pop
mov
out
mov
push
out
out
outs
leave
rol
sbb
jno
ficomp
out
push
or
out
aam
and
ret
cmps
lea
mov
out
add
mov
or
mov
out
push
cwde
pop
jb
pop
das
and
push
sbb
es
or
cmp
es
push
cwde
call
add
jmp
call
xchg
cs
shl
es
aas
js
add
dec
mov
es
mov
inc
add
ret
mov
call
sti
out
cmps
in
out
add
inc
das
das
int
jmp
add
imul
outs
mov
aad
cmc
mov
rep
fistp
xor
es
or
test
out
out
enter
repz
leave
or
adc
lods
out
cdq
pop
xor
sub
shr
in
sbb
movs
fcmovu
cmp
out
out
mov
mov
mov
add
mul
sub
pop
jge
repnz
sti
sti
cmps
mov
out
pop
iret
stos
mov
mov
ins
data16
stos
mov
add
popf
int3
inc
packssdw
cmp
mov
xor
arpl
inc
sbb
or
add
das
repnz
out
jo
loopne
mov
popf
add
push
ins
sub
iret
dec
jae
out
lock
cmp
add
mov
ror
adc
pusha
xor
mov
pop
out
pop
jne
es
sahf
fld
pop
xchg
(bad)
push
push
lods
add
out
sub
jne
add
nop
arpl
mov
sub
fs
add
out
cwde
dec
add
push
loope
mov
es
int3
jmp
lods
push
dec
out
mov
es
xchg
jne
push
sbb
fcomp
lods
mov
dec
cmp
adc
add
mov
jmp
add
inc
outs
not
es
jo
cmp
mov
push
jae
add
setno
out
jnp
cmps
add
jae
inc
out
adc
shl
mov
jg
add
add
inc
ret
sbb
xchg
push
fcomp
mov
frstor
jne
dec
xor
das
cli
loope
mov
ret
jbe
or
sub
lods
scas
mov
in
imul
or
es
fadd
cmp
repz
(bad)
(bad)
enter
cmps
mov
jno
cmp
out
xor
shl
cmp
out
add
dec
pop
pop
adc
mov
lea
and
add
mov
loope
call
es
loopne
(bad)
jge
xor
push
call
mov
add
das
adc
sar
jmp
sub
mov
and
call
out
ins
test
add
pop
adc
cmps
sbb
jno
frstor
sub
test
mov
retf
outs
out
xchg
add
sbb
(bad)
loopne
out
mov
add
xor
in
lods
add
ret
imul
add
into
into
test
push
out
ret
mov
jecxz
imul
sub
sub
es
add
inc
ins
es
mov
and
or
add
mov
aad
iret
sar
add
jp
jno
jp
outs
push
push
popa
popa
fld
aam
in
add
lahf
(bad)
jmp
add
out
jle
sti
ret
dec
sbb
and
xor
test
(bad)
xor
in
inc
(bad)
icebp
sub
cmps
add
xchg
fdiv
and
jle
add
retf
push
(bad)
inc
add
lea
or
cmps
pushf
mov
or
push
xor
inc
inc
add
and
es
adc
jle
or
add
add
adc
add
push
xchg
cmp
out
jmp
xor
jl
outs
mov
test
push
bound
dec
dec
mov
dec
pop
pop
je
ins
out
xor
add
or
and
mov
jno
add
add
sub
out
and
xchg
or
outs
in
cmp
les
mov
mov
pusha
cwde
push
push
call
add
cmp
sub
push
outs
into
adc
add
js
jl
add
and
sahf
imul
fisub
xchg
adc
and
add
or
ret
add
jge
cmp
sahf
add
mov
sub
dec
jmp
out
add
mov
out
add
jge
cli
xlat
mov
outs
movs
retf
nop
nop
xor
cmps
mov
xchg
add
mov
imul
lock
les
out
adc
jge
push
call
lock
xor
sbb
add
inc
retf
leave
add
push
fistp
or
xor
push
push
ja
jo
ins
xor
inc
add
jb
xchg
add
add
push
fwait
sub
add
cli
popa
cld
and
xchg
xchg
cmp
mov
ds
jmp
les
adc
js
mov
xchg
fmul
add
sub
push
adc
adc
pop
lock
add
adc
push
out
cmp
mov
inc
pop
sub
shl
std
cmps
cmps
cld
pop
mov
jne
out
out
ret
es
add
mov
es
add
ins
ins
cdq
imul
out
add
es
dec
adc
punpcklwd
mov
pop
fist
jmp
es
inc
add
jmp
cmp
out
add
mov
and
pop
out
scas
aas
add
pop
shl
jne
jmp
and
stos
out
jbe
mov
jae
out
add
jp
jmp
xchg
xchg
and
nop
add
out
pop
mov
add
popa
cmp
xchg
pop
xchg
enter
jns
sub
push
cli
push
out
loop
les
inc
nop
inc
out
add
es
fstp
stos
movs
movs
outs
add
xchg
in
mov
dec
scas
out
mov
jne
add
add
call
rcl
sti
mov
push
sahf
out
hlt
push
out
adc
inc
push
out
add
es
cdq
xchg
jmp
pop
dec
dec
inc
out
inc
or
mov
cmp
pop
test
sub
fsubp
add
test
jnp
es
and
jmp
add
or
bound
add
ret
int3
mov
xor
or
jnp
add
pushf
into
jno
dec
add
sub
shr
xor
mov
add
add
dec
dec
cmps
loope
and
or
cmp
je
mov
sub
or
add
out
xchg
jge
add
lods
std
cdq
mov
out
in
mov
fadd
add
in
jge
pop
push
jmp
aad
pop
pop
outs
in
(bad)
out
mov
cmps
xlat
xlat
mov
out
add
shr
in
or
out
mov
mov
cld
push
push
add
pop
in
add
js
loopne
pop
pop
imul
xor
ins
or
out
and
jge
xor
and
mov
fs
fwait
gs
icebp
es
(bad)
rcr
outs
outs
inc
ror
sub
jbe
xor
sbb
push
dec
dec
shl
xor
ret
xlat
pop
xor
and
push
cld
add
out
xchg
fisubr
aaa
es
pop
jbe
inc
es
lods
add
push
push
xchg
das
add
mov
(bad)
out
add
push
outs
out
pop
xlat
or
xchg
and
jmp
add
dec
jp
and
ret
mov
mov
iret
iret
fs
out
add
(bad)
test
mov
hlt
out
jno
inc
xchg
xchg
mov
dec
add
fldenv
pop
arpl
and
in
jns
add
outs
xchg
cmp
mov
clc
dec
dec
push
lock
inc
inc
add
ins
or
out
add
movs
movs
jb
cmp
lea
repnz
pop
out
push
add
es
dec
jge
les
jno
mov
pushf
and
neg
mov
repz
aas
mov
(bad)
btc
out
js
loope
cwde
rol
(bad)
lahf
lahf
add
retf
inc
mov
fisttp
(bad)
(bad)
jnp
xor
pop
push
mov
sub
imul
mov
scas
es
in
rcl
lahf
adc
add
push
out
pop
jl
lea
xchg
clc
(bad)
stos
fimul
add
inc
or
cmps
shr
push
sbb
mul
add
jmp
push
push
add
aam
and
popa
add
xlat
xlat
rol
icebp
or
jb
out
sub
add
pop
test
out
(bad)
popf
retf
sub
stc
jo
pop
rol
es
fcom
pop
pushf
cmp
add
lods
adc
sub
cwde
mov
and
lea
lods
sar
add
(bad)
es
add
dec
dec
int
and
jle
lock
pop
js
es
mov
adc
out
adc
es
pop
stos
(bad)
add
test
daa
inc
iret
cmp
or
js
ror
sbb
dec
add
(bad)
sub
cmp
int3
sub
sbb
pop
or
add
and
xchg
mov
add
dec
or
add
sbb
es
xor
pop
and
iret
popa
and
lods
cmc
add
or
sbb
out
into
pop
adc
cmp
sbb
out
pusha
adc
dec
dec
outs
push
add
cmp
inc
and
add
sub
and
mov
push
es
cmp
loopne
xor
add
out
out
dec
add
dec
rcr
add
mov
pop
add
and
out
pop
push
retf
add
(bad)
mov
(bad)
(bad)
test
(bad)
ss
aam
popf
fs
out
mov
add
cmp
fcmovnu
fisub
out
psllq
or
daa
cmp
cld
adc
cmp
es
mov
rcr
jnp
icebp
xchg
add
inc
pop
inc
cmp
pop
mov
es
cs
sbb
xchg
je
es
cwde
les
sbb
push
outs
es
add
mov
or
cmps
cmp
mov
into
add
rol
xchg
stc
mov
add
adc
sub
mov
xchg
sub
xor
dec
call
xchg
and
add
in
mov
daa
add
mov
add
test
lods
add
lea
add
jne
jle
and
es
add
inc
inc
cwde
xlat
push
es
fstp
cs
add
cli
xchg
and
out
mov
fs
jae
pop
pop
pop
push
hlt
cmp
add
sub
es
iret
and
xchg
jge
add
xor
lods
inc
fsub
cmp
ds
stos
mov
into
mov
xchg
loopne
dec
fisttp
lahf
int3
out
cs
push
es
js
xchg
xchg
mov
mov
out
sbb
ss
out
mov
dec
out
push
cmp
es
add
xchg
es
and
add
movs
xor
add
sub
jle
ltr
mov
xor
lock
jne
jb
mov
xchg
xor
cld
sbb
push
icebp
or
add
pusha
inc
(bad)
xor
cmp
and
dec
xor
in
(bad)
bound
add
add
adc
cmp
mov
push
jae
out
lock
adc
add
sub
pop
repnz
nop
pop
lds
out
mov
and
out
add
and
push
out
add
sbb
out
inc
add
push
or
scas
xor
push
out
or
or
dec
sub
xor
adc
cld
add
es
cli
lock
ds
or
mul
retf
popa
pop
pop
adc
adc
cmp
out
inc
cli
mov
jmp
cmps
ja
cmc
es
dec
movs
add
and
fidivr
or
pop
sbb
out
xchg
es
daa
pop
jo
arpl
addr16
push
sar
cdq
ja
add
mov
fwait
out
fucom
ins
ins
add
add
lock
ins
inc
out
fld
adc
dec
int
repnz
rol
movs
add
add
test
cmp
out
add
es
and
pop
pop
add
es
pop
cmp
add
mov
add
(bad)
pop
mov
enter
mov
aas
push
test
cmp
out
push
sbb
imul
xor
add
jb
and
jle
cmps
push
push
add
cdq
out
(bad)
xchg
sti
es
add
popf
popf
and
pop
fiadd
out
xchg
out
and
out
shl
xchg
jno
jg
lods
addr16
dec
fnsave
in
jbe
out
(bad)
mov
inc
out
or
pop
push
push
icebp
pop
pop
out
in
add
push
lea
adc
add
les
add
sub
out
lds
sbb
adc
add
enter
dec
(bad)
scas
out
push
clc
pusha
inc
inc
push
dec
adc
inc
pop
sti
add
or
push
scas
scas
xor
add
fadd
imul
out
sbb
repnz
mov
mov
sub
stos
out
out
cmp
adc
sbb
dec
sub
cmp
es
(bad)
adc
ja
jmp
push
pop
add
out
daa
loopne
es
xchg
cmp
in
iret
add
ror
lods
jp
sbb
or
fucom
fdiv
imul
jae
aad
cmp
cli
and
aas
sar
sbb
cmp
adc
sbb
shl
xchg
stos
add
pusha
es
shl
pop
sub
das
bound
ret
out
mov
jmp
and
xor
iret
stc
sbb
in
cmp
out
sub
es
sub
and
sbb
inc
out
mov
dec
fcom
out
jae
sub
out
in
outs
add
push
daa
mov
jnp
add
jecxz
je
cmps
sbb
or
fwait
test
adc
pop
jnp
add
xchg
sbb
mov
out
out
xchg
(bad)
aam
sub
adc
or
stos
out
ds
add
inc
push
jmp
dec
clc
mov
push
push
pop
(bad)
add
test
jb
cli
cli
cli
movs
adc
es
jle
push
repnz
arpl
es
stc
es
rcl
and
out
xchg
xor
mov
cwde
loope
es
inc
mul
push
stc
stc
fadd
out
repnz
es
jge
in
xchg
xchg
clc
pop
fdiv
inc
inc
adc
sahf
es
mov
es
call
add
es
jnp
js
lea
adc
inc
movs
into
in
jge
cmp
mov
xor
jmp
out
ss
add
add
loop
arpl
add
in
push
lahf
lahf
adc
icebp
daa
(bad)
psrld
out
adc
cmps
xchg
sub
jge
out
daa
mov
dec
out
xlat
add
addr16
stc
jno
pop
pop
ret
out
sbb
sbb
or
add
(bad)
xchg
push
leave
loop
outs
jp
lods
ret
ret
pop
cli
mov
jmp
je
imul
(bad)
out
xchg
add
push
repnz
test
xor
mov
out
ja
mov
add
pop
mov
test
outs
out
out
jg
xchg
adc
adc
push
mov
bound
dec
sub
ret
cmps
add
sub
cmp
mov
aaa
or
add
(bad)
push
xchg
and
add
cs
jl
xchg
std
mov
push
ror
in
xchg
cmp
add
iret
jle
daa
out
jp
sbb
dec
xchg
in
or
shl
push
add
push
call
es
dec
outs
das
dec
es
mov
add
es
xor
fst
jbe
push
sti
sbb
xor
(bad)
call
mov
adc
xor
cmp
cmp
lea
jb
test
divps
out
add
jle
cmp
nop
ss
or
out
add
bound
add
pop
push
outs
outs
add
loop
jmp
call
jae
out
mov
add
jle
sbb
pop
outs
outs
inc
ret
(bad)
lea
add
ret
out
add
popf
es
xor
add
(bad)
(bad)
xor
jge
movs
sub
imul
push
push
adc
loopne
aam
adc
jbe
sbb
mov
es
into
test
ror
mov
adc
or
adc
dec
sti
call
xor
or
cmp
adc
aad
out
dec
add
mov
aam
out
daa
adc
adc
sub
in
fidivr
mov
sti
add
jge
xor
addr16
cmc
out
add
adc
and
movs
(bad)
dec
add
out
leave
jo
mov
xchg
adc
sbb
inc
dec
(bad)
fnstcw
pop
es
retf
nop
push
push
int
movntq
(bad)
fldenv
mov
mov
(bad)
es
cs
inc
push
push
xlat
out
dec
lea
retf
fist
push
push
dec
ret
popf
out
hlt
sbb
es
cmp
(bad)
mov
loopne
ret
fs
shl
stc
cmps
push
pop
pop
ins
sbb
and
mov
out
add
jae
imul
push
xchg
xchg
xlat
and
push
jle
es
out
ret
xor
add
push
push
out
out
in
mov
les
add
mov
and
xchg
pusha
(bad)
or
leave
jae
out
xchg
add
pop
jmp
dec
pop
pop
hlt
and
xchg
or
xor
xchg
add
jg
stc
and
cmps
out
inc
ror
popa
jb
scas
scas
add
into
es
or
loopne
and
add
and
cmp
mov
out
fs
sahf
sahf
retf
add
cs
xchg
hlt
aam
out
test
iret
iret
cli
pop
mov
mov
lds
pop
add
jnp
inc
xor
aam
(bad)
out
add
dec
es
int
cmp
sub
in
add
es
add
mov
std
add
lods
jle
out
fild
fsub
sub
out
mov
sub
call
push
push
popa
outs
outs
rcl
add
push
push
cmc
aad
es
mov
data16
cwde
add
dec
shr
es
mov
(bad)
mov
cmp
pop
es
jmp
add
mov
mov
leave
xor
mov
shl
xchg
xchg
pop
lds
dec
es
arpl
out
out
pop
xchg
lods
std
std
sbb
(bad)
out
leave
sub
jmp
jno
out
push
call
out
out
mov
mov
ja
clc
into
into
push
cs
xor
or
push
(bad)
pop
or
mov
add
stos
mul
mov
mov
pop
pop
fsubrp
add
(bad)
jno
out
lahf
add
and
or
ja
out
lea
int3
or
lock
inc
pop
cli
add
lock
dec
inc
es
sbb
add
mov
adc
fs
in
in
mov
aam
(bad)
std
std
mov
int
ror
ins
lea
ja
lods
pop
es
push
jb
shr
adc
mov
add
xchg
out
add
test
mov
nop
xchg
jb
add
push
cmp
arpl
sbb
rol
cmps
out
sar
xchg
ret
add
frstor
mov
fistp
lahf
add
mov
stos
hlt
es
jae
push
retf
out
fldenv
in
fwait
aaa
cmc
out
pop
fsub
adc
add
into
into
hlt
cs
sub
mov
push
jg
mov
fsubp
sbb
pusha
xor
shr
cld
mov
out
mov
lods
adc
pop
pop
push
cmp
and
std
aad
add
xor
shl
mov
lock
jmp
inc
jo
mov
mov
pushf
aas
out
xor
push
and
cmp
add
icebp
mov
sub
xlat
mov
es
jo
lock
aaa
lock
inc
pop
or
(bad)
cli
add
pop
mov
test
cmps
add
sbb
loop
mov
es
mov
jle
sub
movs
movs
add
es
mov
jmp
call
add
out
fidiv
add
out
stos
out
es
fld
adc
xchg
or
cmp
add
test
mov
xchg
out
in
jnp
ret
sub
retf
push
push
adc
pop
and
out
loopne
in
add
xor
out
jne
ds
xchg
add
jecxz
mov
inc
div
inc
dec
out
lods
push
add
fdivr
out
push
push
xchg
das
sbb
add
mov
cmc
in
in
jb
add
xor
test
inc
or
int3
int3
retf
out
sti
je
xor
mov
outs
outs
cmp
(bad)
sbb
out
mov
arpl
int
add
pop
add
frstor
adc
add
pop
ds
inc
popf
popf
and
test
fwait
jmp
out
jl
jo
add
adc
pop
std
pusha
cdq
(bad)
sysret
push
xor
rcr
lea
sub
xchg
xor
dec
aad
out
sbb
xor
cdq
add
mov
out
aad
int3
es
rol
adc
sbb
retf
nop
cld
cld
xor
iret
sub
push
fbld
inc
or
cli
add
add
sub
in
outs
add
test
cmp
inc
jmp
sbb
adc
jae
test
sub
xchg
iret
hlt
dec
add
stc
icebp
dec
or
int
cwde
mov
mov
add
stos
stos
mov
bound
cmp
inc
outs
outs
mov
push
es
mov
sub
pop
cmp
fild
add
adc
xchg
jne
nop
dec
sub
pop
movups
push
pop
pop
mov
sub
jmp
mov
iret
popf
popf
add
bound
pop
fwait
out
add
mov
pop
lods
cmps
out
push
pop
push
push
gs
out
pusha
mov
add
cmp
(bad)
stos
cs
leave
fidiv
xor
fnstenv
add
ins
loopne
pop
add
call
mov
icebp
sub
add
pusha
pusha
xor
inc
out
lods
xchg
jp
mov
sub
add
xchg
add
lock
out
add
xchg
fisub
es
fnsave
fadd
and
mov
das
jmp
outs
push
cmp
bnd
out
jp
add
jmp
test
mov
in
jb
adc
ret
out
movntq
mov
jl
das
out
add
xor
xchg
out
pop
outs
in
in
add
mov
add
push
(bad)
in
mov
sbb
xchg
xchg
movs
movs
mov
add
or
adc
mov
cmp
enter
add
pusha
scas
neg
mov
fild
out
cmp
out
aas
aas
pop
shr
xchg
mov
jmp
fisubr
in
cmps
and
test
out
and
mov
out
push
(bad)
cdq
lods
lods
call
xchg
cmps
pop
pop
inc
jle
es
loop
push
jmp
dec
rcl
mov
es
mov
push
jbe
jle
gs
dec
nop
push
out
pop
enter
add
pusha
lods
lods
jl
jbe
and
not
test
ret
xor
out
add
add
out
add
sbb
adc
rol
lock
(bad)
paddsb
out
add
es
adc
push
push
outs
mov
in
or
add
sahf
es
lods
(bad)
movs
movs
movs
push
int
and
out
shl
rcl
cmp
add
pop
fst
add
sti
sti
imul
xchg
out
xchg
inc
sub
ret
jns
dec
xor
loopne
inc
out
add
mov
js
cli
add
es
leave
lahf
and
jmp
add
lds
inc
nop
and
add
pop
cmp
icebp
icebp
cmp
mov
loop
cld
dec
fisttp
and
sahf
adc
gs
lods
sbb
cmp
cmp
add
push
sbb
in
aaa
in
add
fmul
out
add
inc
mov
jo
(bad)
pxor
mov
or
mov
bound
cs
xchg
or
mov
sbb
pop
shr
xor
es
div
xor
retf
add
mov
add
push
mov
pushf
out
sbb
es
push
fiadd
pop
pop
jmp
jl
arpl
add
es
mov
fidivr
mov
lds
jmp
push
inc
inc
adc
inc
and
bound
loopne
out
or
or
xor
ja
lods
enter
lods
add
(bad)
xchg
push
push
(bad)
js
arpl
idiv
pop
cli
cmp
hlt
inc
add
pop
and
es
nop
ja
sbb
es
das
or
(bad)
cmp
add
hlt
push
mov
add
pop
jbe
sbb
es
pop
mov
cs
jmp
and
and
sub
out
addr16
fsubrp
call
jl
adc
cmc
add
or
mov
jmp
dec
lahf
pop
sbb
pop
outs
dec
inc
add
out
sbb
mov
jmp
mov
out
and
add
mov
push
add
js
dec
cmp
es
stc
mov
or
xchg
xor
aam
daa
out
or
sbb
push
out
sbb
xchg
add
add
mov
popa
adc
int3
sahf
stc
jmp
push
push
(bad)
iret
leave
loop
outs
ins
(bad)
ds
dec
arpl
es
out
inc
jo
mov
les
mov
out
jp
cmp
push
sbb
stos
out
shr
cs
aas
out
dec
sub
inc
mov
xchg
add
jo
jne
add
repnz
outs
sub
sbb
cmps
loopne
sbb
push
fnstsw
(bad)
sar
mov
and
inc
es
add
mov
jg
pop
loopne
gs
pop
jge
pop
add
rol
and
and
dec
dec
mov
jno
add
ficom
je
push
stos
jmp
enter
out
(bad)
pop
and
add
retf
mov
fild
rep
sub
test
mov
mov
out
rol
cmp
xor
add
(bad)
push
xor
(bad)
jmp
(bad)
in
cmp
jg
xor
sub
add
ja
das
int
and
or
cwde
leave
pop
out
or
fcom
adc
add
inc
movs
dec
sar
dec
dec
jge
(bad)
cmp
loop
cmp
add
add
mov
(bad)
les
cdq
inc
and
mov
es
xchg
xchg
adc
push
out
inc
nop
ds
add
(bad)
(bad)
jge
mov
add
cmp
or
inc
push
push
mov
nop
cmc
pop
mov
jmp
mov
aam
std
add
imul
fisttp
out
mov
add
out
(bad)
mov
push
dec
fcmovu
aas
push
mov
add
mov
les
jle
mov
push
js
out
inc
and
fst
add
add
es
stos
xlat
xchg
dec
or
mov
stos
es
cmp
push
add
mov
xchg
mov
es
mov
cmp
nop
sub
mov
ss
(bad)
out
sub
add
sub
xchg
out
pop
push
cmps
jl
add
jo
imul
xor
mov
add
es
rcr
and
cmp
mov
or
aaa
inc
test
(bad)
jo
sbb
arpl
push
shl
xchg
fist
add
cmc
pop
xor
lahf
lahf
or
(bad)
out
jecxz
dec
ss
mov
inc
add
shl
pop
pop
push
add
es
sub
dec
aaa
aaa
clc
push
add
aam
cmps
pop
out
addr16
pop
test
in
or
in
scas
jns
jmp
test
or
add
mov
pop
(bad)
cmp
imul
add
shl
add
xchg
mov
stc
add
jmp
outs
outs
test
popa
es
mov
xchg
xchg
xlat
inc
push
outs
cli
sahf
add
in
loop
es
mov
adc
add
int3
jecxz
popf
popf
add
lea
ret
ret
mov
fbld
sbb
shl
and
add
sub
adc
or
xor
nop
push
es
sbb
mov
dec
pop
sti
push
es
add
retf
out
ss
out
cmp
add
out
shl
rol
add
loop
fwait
cwde
arpl
sbb
jne
push
mov
out
mov
out
or
and
repnz
fild
call
test
mov
push
ds
int
out
pop
mov
es
jb
or
fcmovu
stos
stos
xchg
out
scas
add
xchg
xchg
inc
pop
shl
sti
mov
loop
ins
inc
inc
sbb
mov
cmp
inc
mov
add
jmp
loop
out
pop
movs
shl
inc
cmc
pop
sub
mov
es
add
dec
pop
rol
div
fdivrp
xor
pop
add
fs
adc
shr
(bad)
out
cmp
call
add
add
mov
add
in
sub
xchg
out
inc
add
out
inc
bound
xchg
es
out
xlat
xlat
inc
dec
adc
fld
movs
cmp
add
call
lods
ret
je
add
(bad)
add
adc
bound
add
sbb
es
add
mov
pop
out
ret
jb
pushf
xchg
movntq
xor
out
dec
pop
test
cmp
add
mov
loop
rcl
jmp
out
or
rol
xchg
rol
aas
cld
pop
mov
ja
pop
jl
movs
add
push
out
es
ficomp
add
xchg
or
mov
sbb
ss
test
ds
out
pop
pusha
dec
(bad)
mov
xchg
retf
mov
sbb
in
addr16
dec
inc
xchg
cmp
out
adc
sub
(bad)
fimul
pusha
adc
in
add
test
into
sbb
out
xchg
jbe
test
add
mov
cmp
rol
pop
xor
test
pop
jo
out
mov
dec
dec
jmp
mov
and
mov
xor
mov
add
cwde
cwde
push
mov
add
mov
imul
shl
std
or
or
or
add
enter
or
jge
and
xlat
div
test
dec
out
sbb
das
(bad)
aam
push
out
(bad)
xchg
jbe
pusha
cmp
out
mov
int3
fcmovnu
jb
sbb
stos
bound
jmp
add
jp
xor
mov
mov
push
add
push
push
mov
rol
push
lods
lods
test
jae
xchg
sar
jge
push
sbb
out
call
es
repnz
jmp
sbb
xor
inc
inc
cmp
stc
and
mov
(bad)
pop
pop
add
mov
pop
mov
mov
inc
iret
out
add
push
lea
jmp
jge
popf
add
aam
inc
js
out
(bad)
stos
jmp
push
adc
test
xchg
add
xchg
sub
addr16
sbb
es
arpl
or
cdq
out
and
mov
pop
inc
mov
jno
scas
repz
daa
mov
mov
cwde
adc
pavgb
inc
inc
loopne
sbb
out
mov
fldcw
lock
cmp
into
(bad)
rcr
fistp
out
add
test
out
or
sub
out
shl
lea
icebp
mov
and
mov
pop
mov
out
inc
test
es
clc
sub
or
shl
repz
cmp
fcom
out
adc
or
cli
or
aaa
mov
es
sbb
pop
mov
mov
mov
fild
addr16
xor
(bad)
retf
xor
test
xor
or
dec
dec
and
pop
ds
push
or
out
cs
push
es
add
es
lds
add
lods
outs
shl
pushf
cmp
xchg
xchg
add
jb
inc
inc
mov
imul
xchg
inc
test
fcomp
mov
es
loopne
jbe
cli
jg
mul
ret
ss
sbb
es
and
shl
pop
add
jno
loopne
es
fwait
inc
shl
loop
add
push
arpl
add
inc
lds
out
out
lods
fs
aas
mov
add
aad
inc
das
mov
out
jmp
cmp
xchg
jmp
out
test
loop
push
push
cli
(bad)
les
xor
out
out
pushf
xchg
iret
lahf
add
mov
out
and
add
fadd
ds
inc
and
not
and
mov
or
loopne
cmps
inc
add
out
sbb
cmp
sbb
popa
(bad)
fmul
scas
scas
jl
pop
out
fld
and
lods
push
shl
loope
sbb
int3
int3
or
and
push
in
data16
mov
out
sub
add
inc
jmp
out
inc
movs
stos
stos
loopne
pop
es
mov
int3
dec
xchg
xchg
pop
cwde
shl
sbb
(bad)
sti
sti
push
cwde
pop
out
add
mov
cdq
cdq
jmp
pop
push
push
sahf
int3
add
out
clc
das
add
xchg
addr16
std
popf
cwde
es
add
mov
dec
ror
add
ret
fdiv
xor
test
int
inc
call
xchg
in
fdivr
std
adc
add
add
cs
int3
(bad)
jl
out
cmp
cmp
out
pop
pop
mov
lahf
push
in
emms
sbb
ret
ins
jae
js
lock
repnz
int
shr
push
and
out
in
cmp
add
in
test
pop
add
mov
sbb
retf
out
or
es
out
outs
push
dec
dec
dec
mov
add
out
out
out
add
adc
dec
dec
push
out
mul
popa
push
add
bound
sub
out
pop
aaa
add
sub
jno
mov
imul
out
pop
xor
fstp
xchg
aam
out
dec
jmp
xor
dec
out
pop
clc
test
xor
add
mov
scas
cld
fucom
loopne
add
int3
out
das
mov
xor
sti
rol
ins
clc
dec
dec
mov
dec
adc
(bad)
out
add
mov
out
mov
call
rcl
mov
out
push
pop
pop
mov
mov
mov
out
out
loop
add
push
xchg
inc
je
shl
jl
add
inc
add
add
retf
movs
jns
jno
fadd
pop
pop
es
cld
or
fwait
fwait
pop
push
sbb
jmp
xchg
cmc
cmc
or
pop
adc
(bad)
out
sub
xor
pop
add
lods
adc
fsub
outs
add
test
push
mov
rol
inc
mov
int3
fwait
sti
and
rol
jb
ins
cmp
mov
outs
add
mov
inc
add
int3
int3
into
cmp
imul
mov
add
hlt
inc
icebp
out
outs
sbb
les
sub
out
inc
scas
mov
xchg
mov
setl
clc
add
aas
aas
sub
out
lods
aas
call
shl
int
cmp
pusha
xchg
bound
out
lock
movs
push
push
(bad)
out
out
add
hlt
es
nop
jo
test
or
mov
js
shl
or
or
push
and
es
sti
jp
(bad)
jbe
add
imul
sbb
dec
adc
sub
xchg
add
ja
stc
mov
ficom
add
or
hlt
add
ret
fcmovu
add
xchg
ret
ret
(bad)
sahf
cmp
inc
lock
add
jle
or
or
mov
(bad)
pop
pop
enter
dec
mov
in
add
cmp
popf
popf
xchg
sub
xchg
pop
jmp
push
dec
out
out
inc
mov
mov
enter
pushf
es
and
daa
pop
sbb
add
push
push
sub
es
xchg
pop
push
push
test
mov
je
imul
lock
call
add
enter
movs
mov
dec
fcomp
xchg
dec
dec
call
jmp
aam
push
jmp
xor
and
add
dec
or
xchg
mov
add
push
inc
nop
add
cmps
push
inc
inc
xchg
or
in
in
xchg
popa
add
add
imul
jge
in
add
shl
cmp
ss
(bad)
mov
and
pop
push
pop
out
jo
bound
and
mov
push
scas
add
in
call
xlat
push
dec
xor
xchg
push
mov
shl
in
les
or
adc
and
mov
ret
arpl
ss
inc
stc
cmp
add
xlat
inc
cwde
out
jl
es
push
fsubr
out
js
add
out
xchg
es
jp
add
shl
or
add
xchg
jbe
or
sbb
push
shl
into
shl
add
jo
or
sub
out
push
mov
sbb
imul
out
loope
add
pop
clc
fld
cwde
cwde
dec
lock
(bad)
aam
and
in
aaa
add
jo
outs
aas
mov
outs
shr
(bad)
int
call
xchg
jae
ds
and
xchg
loopne
sahf
sahf
xor
fucomp
out
dec
adc
sbb
add
add
out
add
dec
dec
pop
aaa
adc
loope
pop
push
mov
ins
add
mov
sbb
add
call
fs
jp
bound
adc
push
nop
inc
add
icebp
movs
(bad)
out
pusha
jnp
jne
add
in
mov
jmp
or
dec
dec
icebp
jb
jecxz
nop
add
jmp
js
add
jle
imul
cli
ds
fsub
adc
lds
lods
lods
retf
out
(bad)
out
imul
push
rol
xchg
retf
loop
mov
jecxz
movs
add
in
out
jmp
push
add
mov
aaa
mov
inc
mov
pop
add
cmp
dec
es
mov
cmps
ret
out
fiadd
int
movs
or
or
jne
add
mov
xchg
add
loop
mov
in
out
add
aas
es
imul
or
mov
sbb
pop
or
add
test
inc
and
xlat
lods
push
add
test
sub
addr16
shl
mov
cmp
shl
push
push
rcr
pop
es
enter
pop
xor
shl
shl
xchg
xchg
lahf
clc
clc
(bad)
aaa
pop
out
or
test
sbb
in
inc
add
mov
xor
lods
lods
lods
repz
(bad)
jmp
mov
jecxz
add
add
or
aam
adc
fmul
fst
xor
sub
cmc
retf
es
dec
push
push
cmp
inc
scas
mov
xchg
pop
pop
sub
fiadd
add
fild
add
pmulhuw
cmps
pop
add
xchg
xchg
xchg
call
xor
fadd
push
arpl
out
add
sub
rcl
mov
xlat
add
stos
movs
es
je
test
div
cmp
add
int
mov
es
mov
and
mov
gs
ret
add
xor
aam
stos
add
pusha
add
(bad)
and
ja
pushf
add
add
(bad)
(bad)
jmp
inc
out
out
nop
es
sbb
push
test
push
cld
add
mov
cmp
and
loope
push
push
stos
push
ja
xor
sub
(bad)
mov
pop
sub
xchg
lods
xlat
or
mov
mov
(bad)
jb
out
xor
rcr
cmps
xor
add
out
es
pop
and
loopne
push
push
add
adc
es
sbb
xor
fldcw
xor
sbb
inc
es
lods
out
add
mov
test
sahf
shl
dec
xchg
pop
(bad)
fnstsw
add
mov
sub
sub
mov
adc
and
add
ss
or
stos
aaa
cmp
mov
add
cmp
jg
into
sti
push
push
test
adc
stos
sbb
fild
and
or
addr16
pop
fld
add
leave
inc
inc
xor
cmp
sbb
jne
jmp
cmp
jae
add
pop
fild
mov
sbb
lahf
and
shl
js
sbb
add
jecxz
pop
mov
out
pop
nop
add
or
push
call
enter
loop
movs
or
out
movs
mov
repz
(bad)
outs
add
sbb
imul
test
push
popf
popf
hlt
inc
call
pop
and
add
jg
and
adc
leave
out
add
mov
out
in
xor
cmc
sub
fbld
dec
add
mov
nop
add
out
sub
xchg
xchg
push
dec
loopne
push
add
popf
jne
push
ret
jp
mov
cdq
out
fs
mov
out
int3
(bad)
fwait
jle
dec
add
es
(bad)
cmp
test
movs
fdiv
cli
aam
add
mov
inc
mov
out
push
sub
add
ja
and
into
add
jle
push
es
mov
(bad)
rol
jb
cmp
enter
pop
mov
shl
or
out
imul
dec
lahf
inc
inc
adc
(bad)
sub
out
mov
mov
ret
add
mov
mov
mov
call
push
ins
leave
ss
iret
lock
es
ds
ja
add
and
out
add
pop
pop
pop
mov
enter
fst
test
call
pop
iret
sbb
mov
jmp
pop
pop
das
gs
add
es
sar
imul
loope
das
pop
repz
and
mov
add
out
sub
pop
push
sub
pop
xor
sub
mov
or
mov
out
add
fst
mov
xchg
repnz
pop
(bad)
add
es
mov
xchg
xchg
imul
(bad)
(bad)
and
add
ins
ins
mov
add
adc
inc
std
and
xor
aaa
dec
pushf
dec
es
shl
pop
add
pop
sbb
es
add
xchg
pop
pop
jb
jnp
aad
add
sahf
sahf
push
rol
es
and
add
in
dec
dec
add
test
es
pop
pop
pop
fwait
test
fmul
es
or
es
add
dec
lods
lods
repnz
es
mov
add
scas
enter
jno
out
rcr
push
vpsrad
push
adc
outs
pop
sub
adc
enter
inc
(bad)
out
scas
aam
and
bound
out
jmp
mov
add
rcr
jae
or
inc
out
pop
loop
push
das
mov
call
fsub
add
push
fld
je
pusha
jns
dec
adc
(bad)
(bad)
xchg
bt
xor
mov
lock
aam
mov
mov
mov
jge
jb
xchg
mov
inc
out
jo
pop
es
stc
inc
inc
inc
xor
add
outs
xlat
pop
les
out
inc
push
ds
into
test
mov
ret
add
clc
scas
rol
out
popa
das
cmp
loope
cmp
adc
sub
ret
pop
in
out
push
cs
lock
mov
inc
mov
adc
movs
movs
mov
mov
test
mov
repnz
and
inc
cmp
jno
jl
loopne
outs
rcl
dec
out
out
push
dec
mov
es
mov
add
sbb
mov
add
inc
inc
mov
jg
push
outs
add
aaa
int
es
xchg
rol
outs
sub
gs
and
sub
mov
jb
popf
popf
add
daa
daa
inc
add
and
in
inc
pop
(bad)
cli
add
je
xchg
daa
daa
add
das
out
std
jmp
mov
and
adc
push
ins
pop
es
iret
aam
mov
(bad)
es
inc
add
push
push
jns
dec
dec
fcom
out
vpminub
sbb
dec
dec
dec
movs
adc
jg
xor
pop
xor
out
add
es
mov
(bad)
scas
lock
es
repnz
mov
(bad)
es
sti
add
mov
out
lea
pop
es
jb
pop
xchg
popf
add
jnp
das
(bad)
(bad)
out
sub
add
fdivp
retf
(bad)
jbe
jns
add
mov
rol
adc
fdivr
ds
in
jne
cmp
adc
ja
not
lea
out
sub
add
push
jo
call
es
mov
xchg
dec
add
cld
xchg
add
mov
add
adc
gs
cmp
popf
push
fnstcw
(bad)
cmp
retf
jmp
xor
fisub
push
inc
inc
lods
jl
out
mov
add
xchg
mov
popa
sub
add
xor
das
das
pushf
push
leave
fnstcw
xor
mov
push
pusha
cld
aam
fdivr
out
out
push
xor
ins
inc
inc
call
daa
repz
xchg
es
enter
mov
pop
adc
pop
out
dec
add
add
push
sub
es
mov
add
adc
jne
xchg
xchg
(bad)
imul
mov
jmp
and
add
xchg
es
adc
mov
jno
or
fcmovu
bswap
clc
out
es
xor
mov
pushf
cmps
add
xor
xchg
dec
dec
pusha
sub
add
out
aas
fdivr
adc
in
or
str
lods
inc
mov
push
jo
out
mov
(bad)
jmp
out
push
aas
sbb
inc
es
mov
dec
fsubr
pop
pop
add
out
ret
xor
popf
movntq
out
ins
loop
add
add
inc
out
xlat
mov
and
add
jo
out
arpl
xor
or
push
add
jae
repnz
sbb
into
add
out
enter
push
adc
add
es
sub
add
ds
jmp
dec
rcr
pop
push
mov
sbb
push
push
inc
inc
push
mov
pop
lods
mov
pop
sbb
xor
shl
adc
das
and
es
or
sbb
cld
lea
jmp
lods
mov
aad
aam
arpl
push
out
jmp
add
push
icebp
adc
and
das
add
mov
cmp
fsub
xchg
sub
jnp
add
(bad)
cli
or
jns
dec
(bad)
or
aad
push
mov
pop
dec
inc
inc
add
xchg
out
jb
add
add
fisub
rep
js
es
jmp
mov
(bad)
sub
shl
pop
lahf
mov
ins
and
sbb
repnz
or
cli
sub
sbb
lock
add
inc
aaa
out
ret
into
into
les
out
adc
push
xor
(bad)
(bad)
jle
rcl
rol
sbb
mov
xor
adc
pop
pop
mov
push
add
out
lds
pop
out
cmc
add
out
fsubr
int3
out
das
add
repz
dec
adc
es
push
add
(bad)
bsf
add
and
add
cmp
out
mov
cli
jae
out
inc
fld
es
or
mov
pop
out
out
popa
xor
cld
pop
mov
aad
cmps
or
sbb
mov
add
test
retf
jns
and
add
out
lahf
dec
adc
add
lock
(bad)
and
adc
leave
sub
jb
stos
enter
add
aam
lds
mov
fcmovu
jg
(bad)
jbe
nop
iret
add
ins
inc
sub
jns
nop
mul
and
jge
dec
neg
xchg
call
pop
lahf
add
movs
movs
xor
loop
loope
pop
out
sub
mov
inc
xor
add
call
daa
dec
pop
clc
out
inc
add
xchg
gs
dec
out
fcom
es
in
rcl
dec
push
or
or
es
adc
into
into
je
pop
cmp
dec
test
out
div
movs
test
xor
push
mov
movs
xlat
out
sub
add
and
mov
add
add
out
jae
ret
push
jmp
cmps
out
add
push
jge
test
add
sub
push
daa
out
inc
in
data16
out
xchg
pop
add
add
(bad)
adc
(bad)
nop
jnp
out
out
mov
cmp
out
adc
sbb
add
add
and
das
das
dec
pop
mov
pop
es
retf
div
jle
and
ins
xor
out
jg
mov
add
jno
pop
or
es
sub
jne
mov
bound
adc
rol
jmp
es
lods
push
mov
call
mov
and
pop
pusha
js
aad
or
sub
add
call
add
and
int
inc
es
pop
and
cli
add
ficom
shr
popf
fisub
movs
movs
je
pop
lods
lods
and
sub
mov
test
es
dec
pop
sahf
sahf
dec
mov
add
out
fnstenv
or
jp
pop
inc
and
sub
add
test
and
pop
add
jp
mov
xor
add
push
push
outs
mov
test
mov
jge
lock
int3
es
jmp
push
push
loope
xor
push
sbb
fisub
inc
fcomip
lods
mov
es
fld
sbb
add
in
xchg
xchg
jbe
arpl
enter
es
cmp
aam
(bad)
cs
adc
fcmovu
inc
cmp
dec
inc
push
jmp
and
push
xor
(bad)
add
cmp
rcl
add
data16
lahf
pop
pop
ja
jl
pop
and
add
in
cmps
(bad)
jno
jno
out
imul
mov
out
pop
add
iret
out
bound
es
xlat
or
in
shl
es
cmps
inc
cmp
es
mov
dec
mov
pop
mov
test
out
add
xor
adc
and
lea
dec
jne
out
add
mov
push
loopne
sbb
sbb
xor
adc
push
mov
es
sbb
add
cmp
xor
pop
cwde
sbb
add
and
push
push
or
pushf
add
out
push
sub
and
fs
inc
mov
out
dec
add
dec
pop
pop
inc
popf
adc
(bad)
stos
sbb
in
in
cwde
jmp
add
out
mov
xchg
pop
lock
pop
shl
aad
repz
add
sub
out
add
xchg
int3
dec
add
mov
fucomip
cld
out
repz
mov
pop
dec
dec
push
retf
inc
out
(bad)
mov
add
ret
(bad)
and
pop
xchg
add
cwde
cwde
add
pop
dec
pop
push
es
adc
lods
xchg
mov
add
ins
add
in
add
xchg
(bad)
pop
cwde
scas
out
add
iret
rcl
sbb
out
fcomp
pop
add
or
inc
out
cmp
call
icebp
call
add
leave
mov
out
add
adc
xor
imul
pop
pop
mov
out
js
add
cmc
paddusw
push
add
jge
push
out
(bad)
call
inc
add
mov
jo
es
add
pop
and
xchg
xchg
add
and
ror
sbb
cmp
add
adc
mov
add
xor
sbb
sbb
add
icebp
or
gs
pushf
xchg
jae
adc
mov
es
std
sbb
sbb
dec
out
add
fwait
sub
fcomp
push
fcomp
add
dec
inc
out
icebp
mov
dec
dec
jnp
ret
fisub
daa
jge
mov
cmc
sub
mov
dec
xor
les
out
out
and
pop
in
es
inc
icebp
(bad)
cmc
cmc
icebp
shl
pushf
fmul
adc
dec
fld
gs
xchg
out
push
mov
and
les
jge
loope
fld
shl
xlat
ss
ds
inc
es
mov
rep
jmp
or
add
inc
out
(bad)
imul
push
ret
ds
out
pushf
not
sti
pop
adc
inc
es
cwde
cmp
jmp
test
(bad)
pinsrw
add
movs
outs
jg
pop
lods
call
push
cmp
dec
stc
add
stos
jno
daa
mov
ret
leave
mov
push
push
jne
cmp
jle
sub
mov
and
js
mov
outs
push
sub
test
cmps
popa
enter
cmc
in
push
jo
lock
(bad)
out
push
dec
adc
ret
add
es
add
sahf
cld
in
jno
pusha
out
jecxz
mov
add
inc
test
or
mov
xchg
cli
out
add
movs
mov
cmp
rol
add
pop
es
jno
add
arpl
jmp
lock
push
adc
xchg
out
shl
(bad)
das
out
in
out
cmps
or
cmp
xchg
mov
out
(bad)
(bad)
mov
inc
inc
add
test
scas
(bad)
mov
ins
out
sbb
retf
rol
push
and
sub
add
cmc
push
jmp
inc
add
into
(bad)
sbb
outs
mov
add
jbe
es
mov
add
push
es
cwde
into
call
sbb
push
out
out
jl
fld
add
xchg
in
imul
add
out
jo
(bad)
call
out
mov
pop
pop
or
idiv
pop
rcr
aas
inc
or
mov
nop
pusha
pusha
leave
bound
into
enter
pop
jo
mov
test
popa
into
out
das
mov
add
out
jl
iret
es
or
jb
and
lods
pop
mov
retf
out
inc
sbb
nop
nop
jnp
dec
out
jl
ss
popf
les
out
xchg
push
in
(bad)
mov
add
mov
mov
test
out
dec
push
push
push
lods
add
out
test
dec
mov
out
mov
xor
fadd
cdq
lea
movs
pop
mov
rcr
idiv
xchg
mov
out
jno
daa
es
std
mov
add
push
push
xchg
push
sbb
jge
in
add
test
and
jmp
ja
and
pop
inc
pop
out
(bad)
shl
es
or
push
es
jo
pop
pop
or
fs
popa
pop
out
mov
or
loope
test
sbb
clc
jp
nop
stc
stc
pop
pusha
push
fild
pop
div
sub
and
xchg
mov
imul
adc
cmp
leave
add
jmp
daa
es
(bad)
scas
scas
push
imul
mov
hlt
(bad)
imul
or
dec
pop
pop
inc
bound
mov
loopne
jmp
gs
sbb
es
push
test
xor
or
adc
cmp
dec
lock
sbb
icebp
icebp
(bad)
fistp
out
cwde
mov
lods
pop
pop
mov
int3
retf
daa
out
cmps
ja
fs
jle
stc
mov
out
xchg
retf
es
add
out
jo
pop
pop
(bad)
cld
add
add
cmps
hlt
out
sub
out
pusha
mov
out
inc
sbb
add
jp
mov
test
test
dec
dec
loopne
and
out
jmp
pop
cmp
inc
ja
fcmovu
pusha
inc
add
xchg
addr16
mov
psllw
add
push
xor
faddp
(bad)
dec
out
mov
cmp
add
stc
lahf
jno
aas
aas
call
clc
mov
sbb
add
lods
arpl
es
sbb
and
es
out
imul
and
cmps
push
fiadd
add
mov
test
jae
push
out
addr16
xor
out
(bad)
mov
outs
mov
std
std
add
out
push
in
push
rol
jmp
and
mov
cmp
dec
dec
add
push
jp
mov
adc
fadd
sti
sti
pop
adc
repz
add
mov
inc
mov
aaa
jnp
in
inc
out
add
popf
pop
and
mov
out
xchg
scas
scas
add
retf
addr16
pop
xor
mov
sbb
mov
mov
cmp
xchg
out
test
pusha
jo
mov
or
out
cs
xchg
add
add
out
xchg
or
jns
pop
add
and
shl
inc
add
movs
cmp
rcl
nop
inc
cmps
adc
test
push
cmp
rol
push
mov
mov
cwde
add
jp
sub
fs
movs
movs
jmp
pop
push
mov
adc
rcr
and
add
sub
add
push
out
fiadd
rcl
lea
mov
jns
les
add
cli
mov
pmuludq
add
fdiv
out
or
xor
add
xor
out
cdq
push
jecxz
inc
xchg
add
out
mov
adc
cmc
add
cli
cli
popa
mov
cwde
cmp
add
adc
adc
cld
lods
jb
sub
shl
cmp
cmps
inc
arpl
icebp
icebp
pop
cmp
(bad)
sbb
add
dec
jmp
jp
adc
sub
add
psubusb
push
dec
sbb
add
out
mov
jg
cmps
rol
icebp
add
fiadd
push
sbb
test
out
mov
mov
aas
out
(bad)
xchg
xchg
cmp
aam
fdiv
loopne
mov
sub
stos
add
add
hlt
xor
gs
xchg
jmp
fdivr
outs
inc
or
arpl
mov
leave
add
(bad)
clc
sub
add
test
popa
push
add
bound
adc
in
data16
jns
mov
pop
cmp
sub
xchg
add
jae
inc
sub
sahf
test
add
dec
jno
aaa
mov
push
add
add
mov
cmp
in
pusha
jmp
push
pushf
shl
inc
inc
aad
add
cmp
adc
ret
out
add
jecxz
out
add
jns
(bad)
jne
dec
out
sti
cmp
xor
or
push
stos
add
dec
mov
mov
out
add
inc
das
das
mov
add
jle
scas
cwde
in
sub
dec
es
sbb
stos
test
jge
add
out
dec
outs
dec
ror
jbe
xchg
and
jp
pop
imul
push
cmp
inc
inc
jne
sub
movs
cmp
lock
inc
inc
xor
out
push
inc
ss
jl
cmps
loopne
jne
add
pop
mov
mov
fwait
es
pop
mov
mov
das
stc
es
movs
sub
and
aaa
xchg
jae
jge
dec
add
sahf
add
es
stc
rcr
cmp
add
mov
inc
(bad)
div
pop
ds
in
cmc
add
inc
pop
jp
out
sub
mul
add
rcl
test
and
push
xchg
add
in
jmp
or
add
jnp
cmc
add
push
add
ds
into
push
mov
out
leave
mov
or
mov
into
ja
adc
pop
cmp
cmp
ins
mov
and
adc
mov
daa
push
out
arpl
(bad)
add
pop
sub
out
mov
es
fidiv
inc
mov
jo
dec
add
dec
iret
arpl
stos
push
dec
add
mov
push
pop
add
adc
es
inc
loop
cmp
out
xchg
cmp
cwde
loopne
sub
sbb
pop
mov
add
and
popf
aad
mov
out
jae
scas
pop
pop
xchg
add
mov
push
sub
out
cld
mov
es
push
jl
add
ja
arpl
cdq
cmps
retf
cli
xor
and
out
(bad)
sbb
add
rol
add
es
lock
cmp
xchg
rol
mov
pop
sti
mov
es
and
jmp
fdivr
mov
adc
es
leave
mov
add
call
sahf
jmp
pop
fs
repz
pop
sbb
jmp
add
push
(bad)
add
mov
add
imul
jae
cdq
icebp
push
push
add
es
xlat
and
vmread
cmp
retf
adc
adc
pop
in
in
xor
(bad)
add
out
out
iret
pop
add
push
xor
frstor
add
(bad)
les
pop
add
fs
(bad)
and
add
sbb
ficom
es
push
div
js
bound
jnp
xlat
xor
out
cmp
movs
es
add
fadd
icebp
push
add
sub
or
rcr
sub
sbb
test
push
je
or
mov
or
jno
es
mov
cmp
mov
jmp
sbb
and
push
bound
sub
pop
inc
aas
lods
out
pusha
mov
loop
clc
pop
out
test
dec
shl
add
jl
jp
dec
rcl
out
add
stos
mov
mov
push
les
fimul
push
push
sbb
xchg
test
sti
xchg
clc
clc
mov
std
adc
pop
add
ins
es
nop
pop
mov
pusha
push
push
call
mov
ss
rol
test
add
stos
(bad)
out
add
daa
or
xchg
repz
out
cdq
cmp
es
push
adc
cld
cld
cs
and
sbb
jmp
xchg
outs
daa
out
dec
add
es
out
dec
cmp
mov
push
imul
mov
cmc
out
enter
jmp
outs
adc
add
add
out
movs
stos
sbb
jnp
add
movs
movs
repz
sar
hlt
add
les
cdq
xchg
xchg
ins
pop
inc
and
enter
adc
pop
or
sbb
add
es
inc
mov
add
adc
jg
add
inc
sbb
adc
aam
out
pushf
mov
dec
fs
mov
or
add
fst
test
pop
jnp
test
jp
movs
in
add
dec
stc
shl
mov
cmp
cmp
es
gs
add
or
out
mov
hlt
test
in
add
add
mov
jae
add
into
ss
les
pushf
pushf
mov
cmp
lea
mov
mov
das
es
add
xchg
arpl
out
xor
in
out
aad
xchg
xchg
mov
into
es
jmp
lods
es
jno
push
xor
out
retf
out
ret
lahf
lahf
adc
pop
out
mov
add
mov
shr
(bad)
(bad)
cmp
add
sar
mov
es
sub
adc
add
es
out
add
cmp
outs
add
sbb
enter
les
dec
add
in
lea
add
xchg
xor
cli
cli
xchg
cmps
out
mov
stc
in
and
sbb
mov
ret
or
out
push
add
out
jl
pop
xor
(bad)
loope
out
and
sbb
mov
push
jg
cmp
push
es
xchg
adc
and
sbb
add
xor
mov
add
dec
movs
(bad)
add
pop
out
aaa
push
stos
test
out
mov
cmps
inc
movs
jne
fldenv
es
add
in
jbe
lea
leave
jecxz
pop
lock
daa
sahf
cmp
sbb
mov
pop
in
pop
jo
inc
dec
inc
mov
sub
pop
add
push
out
mul
out
xchg
add
lods
lods
jle
lods
(bad)
(bad)
(bad)
imul
repz
cwde
nop
nop
push
or
out
dec
mov
stos
fsubp
sub
dec
add
mov
nop
cmp
dec
add
mov
add
sbb
cwde
es
shl
add
jecxz
mov
out
add
loopne
les
mov
jbe
ss
jne
xchg
add
push
cmp
add
push
xor
mov
es
ins
add
fs
hlt
cmp
push
movs
jae
jbe
stos
jns
push
push
mov
repz
push
add
push
aaa
loope
add
out
mov
add
cmc
inc
inc
inc
fwait
mov
jle
dec
movs
add
int3
les
test
add
outs
es
and
lahf
rcl
cmp
loopne
and
jo
add
and
jp
es
mov
fsubrp
int
lea
out
cdq
add
retf
retf
shr
es
add
iret
outs
inc
inc
pop
fdiv
es
sub
mov
pop
add
mov
ret
or
xor
jnp
sbb
pusha
cwde
fs
push
out
xlat
add
es
pop
lods
into
rcl
pop
xor
add
sbb
mov
shl
pop
inc
scas
adc
cmc
clc
and
das
fnstenv
cwde
and
mov
and
xchg
repnz
cmps
ja
push
aas
scas
iret
sub
in
add
out
popa
inc
inc
es
pop
into
into
adc
add
sti
dec
mov
push
out
xor
add
out
nop
(bad)
out
iret
mov
and
and
sub
addr16
add
shl
and
mov
add
ss
mov
or
add
out
xchg
cs
out
push
add
pop
pop
leave
das
and
stc
enter
push
in
push
push
movs
inc
mov
lds
and
mov
cmp
dec
out
jge
test
mov
shl
les
push
mov
rol
imul
inc
imul
ja
add
es
add
xchg
int3
add
cmp
pop
cwde
cwde
rol
push
outs
jmp
out
out
stc
das
(bad)
jmp
daa
in
xor
enter
aad
je
dec
and
(bad)
inc
mov
out
fsqrt
hlt
es
or
add
es
dec
mov
dec
xchg
stc
jmp
add
pop
push
retf
lods
lods
and
(bad)
out
mov
test
add
pop
push
int
out
sar
and
cmps
arpl
mov
into
add
add
rol
out
cmp
test
push
add
dec
adc
hlt
es
sub
es
(bad)
repnz
inc
inc
pop
rcr
add
std
cli
jo
push
addr16
es
jle
push
div
aas
sub
test
jg
add
push
test
out
inc
sbb
jnp
mov
push
out
jae
xor
xchg
adc
jmp
cdq
xor
ins
test
out
xchg
add
pop
cli
mov
rol
mov
mov
out
jo
push
cmp
ss
in
and
mov
idiv
mov
out
or
es
lea
add
das
outs
xchg
jo
out
out
clc
mov
fld
loopne
in
mov
mov
ins
jnp
mul
jl
xor
es
and
loope
xchg
add
mov
pop
std
sub
sbb
add
aam
cld
cdq
int
pusha
pusha
or
out
ss
and
push
mov
shl
(bad)
xchg
xchg
inc
cmp
sbb
pop
pop
dec
es
xchg
jno
xlat
xlat
mov
loope
jns
imul
in
adc
sti
inc
push
into
jle
adc
cwde
es
and
sbb
mov
mov
out
mov
push
pushf
and
add
fldcw
ja
add
mov
push
push
add
xor
es
in
and
aam
pop
loop
stos
out
mov
lock
add
popf
popf
sbb
add
adc
inc
add
call
add
int3
mov
and
out
push
cmp
push
push
cdq
out
shl
jmp
sub
push
mov
ret
and
test
out
hlt
add
dec
js
sbb
inc
std
stc
out
inc
data16
sub
xchg
push
out
cmps
dec
cmovg
mov
out
cmps
dec
jns
ficom
add
aad
mov
icebp
mov
imul
cmp
jge
or
clc
ss
mov
add
loop
cmp
into
add
pop
out
jmp
fsub
out
cdq
sahf
rol
add
iret
add
mov
call
mov
jmp
adc
sub
xchg
lahf
es
fcmovnb
sbb
add
in
or
gs
popa
inc
inc
add
adc
js
xchg
dec
es
add
xchg
xchg
cli
mov
jb
les
jmp
and
daa
xor
sbb
dec
dec
test
and
xor
ja
mov
pop
cwde
and
ss
mul
add
or
xchg
aam
add
movs
out
jbe
push
jg
stos
add
rcl
add
out
inc
outs
mov
jbe
sti
or
aas
aas
jo
and
mov
push
push
aas
outs
in
out
lahf
repz
pop
into
retf
pusha
jp
mov
mov
in
sub
cmp
sbb
add
push
push
xchg
rol
ret
add
scas
xchg
xchg
or
sub
add
nop
in
rcl
sbb
imul
jbe
sbb
out
hlt
es
add
push
inc
inc
jmp
cmp
out
push
call
mov
add
push
sub
dec
out
ins
push
movnti
mov
push
es
imul
mov
sti
pop
rcr
jge
add
adc
inc
inc
mov
imul
sbb
push
push
pop
ror
es
mov
dec
dec
mov
pop
add
in
shl
hlt
out
out
es
sbb
inc
dec
sti
es
mov
add
xor
sbb
in
div
sbb
mov
add
add
jno
push
call
(bad)
xlat
mov
(bad)
add
fnstenv
mov
aaa
(bad)
stc
cmp
jp
sbb
bound
js
out
das
mov
add
test
pop
rcl
(bad)
loopne
add
pop
les
es
mov
cwde
pop
pop
sub
rol
mov
jno
ja
cdq
out
sbb
mov
jae
adc
add
cmp
retf
sar
out
outs
mov
jno
out
sbb
daa
aad
add
out
sbb
adc
add
jae
fcomp
test
(bad)
out
daa
mov
adc
std
mov
test
out
push
popf
lea
stos
cmps
dec
xchg
mov
out
push
push
mov
push
popa
xchg
push
mov
(bad)
frstor
inc
xchg
loopne
cmp
jg
iret
add
imul
push
ja
out
test
fdiv
xchg
xchg
rcr
xor
xor
add
es
outs
or
mov
mov
cmp
loopne
out
arpl
adc
pop
mov
push
pop
mov
dec
out
div
pop
or
fadd
daa
out
inc
repz
enter
hlt
out
add
pusha
in
push
out
mov
and
add
dec
enter
lods
xchg
es
add
or
fcomp
dec
sub
pop
xor
inc
stos
out
sbb
mov
pop
mov
mov
cs
call
dec
sahf
sahf
enter
cld
mov
cmp
leave
add
sub
div
or
adc
xor
aaa
sar
out
mov
push
sbb
lds
cmp
es
mov
inc
push
push
je
sub
sbb
xor
les
out
mov
sets
add
repz
rol
es
movs
adc
mov
and
dec
dec
addr16
es
sub
xor
push
gs
loop
mov
add
loopne
es
xchg
jmp
bound
out
push
or
lea
test
add
push
call
inc
inc
jp
leave
es
fwait
cmp
cmp
push
out
out
(bad)
pusha
out
imul
inc
jg
ret
or
pop
es
add
aas
add
stos
mov
out
jp
add
loope
push
pushf
out
jge
loop
add
pop
shrd
fs
and
adc
fcomp
xchg
idiv
daa
es
mov
push
jl
and
add
xchg
xchg
out
ins
or
daa
out
call
ja
push
sub
push
push
mov
cmc
jle
es
mov
mov
add
and
pop
push
aas
dec
dec
mov
add
sbb
mov
cmps
inc
dec
(bad)
or
inc
cmp
pop
pop
and
in
out
out
pop
jmp
es
mov
shl
add
push
daa
out
sub
or
mov
out
add
cmp
inc
loop
out
and
mul
push
fsub
rcl
add
xchg
mov
mov
push
mov
stc
cmp
pop
pop
and
out
pop
(bad)
mov
xchg
dec
int
jmp
pop
test
cs
add
popa
es
add
nop
push
push
fcmovnu
sub
adc
out
shr
call
add
xor
and
ins
jne
cmp
aas
jmp
pop
push
js
add
mov
fmul
out
mov
out
add
pop
in
in
idiv
add
loope
ret
pop
pop
dec
mov
jno
or
push
push
add
cli
pop
and
out
clc
cld
clc
lods
leave
add
or
(bad)
sbb
hlt
hlt
mov
push
sub
xchg
es
mov
xor
add
mov
fsubr
in
add
push
or
addr16
rcl
mov
movs
lea
push
(bad)
ror
cmp
outs
outs
fadd
mov
xor
std
xchg
je
push
out
fstp
dec
dec
pop
sbb
out
verw
push
mov
dec
out
jmp
add
inc
dec
sub
stos
stos
sub
scas
add
pminub
out
pop
out
es
into
(bad)
add
xor
arpl
or
cmp
je
out
add
and
push
pop
xchg
xlat
xlat
adc
push
out
scas
loope
or
les
jge
call
cmps
xlat
mov
out
bound
daa
test
in
dec
pop
test
dec
pusha
and
add
fiadd
push
js
jo
cdq
out
repnz
pop
test
or
fwait
es
pop
adc
pop
pop
pop
(bad)
stos
es
movs
das
pop
pop
call
sbb
out
shr
gs
sbb
and
add
shl
sub
ins
mov
cmp
jno
xchg
(bad)
fisttp
or
dec
add
dec
div
mov
jp
lds
shr
stos
pop
sbb
ror
in
in
xor
pop
add
(bad)
jmp
fstp
sbb
dec
sar
out
add
xchg
es
cmps
jbe
aaa
aam
inc
es
bound
adc
sub
xor
(bad)
out
add
test
jp
popf
add
inc
pop
or
pop
test
aam
pop
pop
sub
imul
repnz
xchg
xchg
test
sbb
adc
jne
push
adc
ss
in
jmp
das
int3
mov
sbb
out
test
inc
es
jmp
cmp
jle
jmp
add
imul
add
shl
(bad)
rsm
and
cmp
mov
or
xor
xchg
fwait
repnz
mov
loope
mov
jbe
(bad)
add
sbb
push
ins
in
pop
add
(bad)
or
push
frstor
mov
out
cmp
cmp
rol
add
mov
cmp
shr
sub
out
mov
pop
out
sti
scas
es
aaa
push
push
pusha
pusha
test
add
add
lock
sbb
repz
add
(bad)
fmulp
jecxz
in
clc
fild
out
lods
jp
es
in
push
mov
and
out
jo
adc
cmp
mov
push
aad
add
mov
pop
es
mov
pop
pop
add
mov
inc
mov
and
sub
addr16
cdq
cmps
es
adc
hlt
outs
lock
xlat
adc
mov
add
inc
test
out
pushf
add
es
fdivr
cmp
mov
shl
es
or
adc
scas
hlt
mov
mov
rol
add
or
shl
and
arpl
jmp
test
rol
ss
out
adc
loopne
mov
sti
push
cmp
sub
(bad)
out
sub
push
push
out
rcr
es
add
mov
es
mov
cli
not
stos
stos
cmp
pop
out
in
inc
int
leave
xchg
popa
out
pusha
ds
inc
add
sub
xor
out
add
push
mov
mov
das
sub
mov
arpl
sbb
cmp
in
in
add
(bad)
push
jnp
out
lods
add
inc
cmp
sub
and
xor
fcmovb
(bad)
sub
aas
jmp
sbb
ins
out
add
or
jg
add
and
popf
fistp
out
xor
(bad)
aad
(bad)
out
test
add
loope
cli
leave
mov
xchg
mov
es
sub
xor
es
sbb
int3
call
sar
mov
sbb
aaa
enter
lds
add
divps
lods
add
aam
in
pop
enter
xchg
cmp
shr
out
movs
jnp
add
rcr
outs
fnstsw
add
inc
sbb
stc
es
ja
cmc
adc
sbb
xchg
es
int
gs
add
add
(bad)
div
out
xchg
ret
jbe
shr
xchg
enter
jp
mov
(bad)
call
ja
sbb
inc
dec
sbb
popw
out
cmp
push
out
sahf
add
jle
mov
out
mov
dec
add
mov
loopne
sub
repnz
or
and
aam
sub
add
cmps
call
push
mov
out
mov
ins
es
adc
loop
and
fcmovu
sar
aaa
out
mov
pop
jl
imul
out
daa
loop
stc
stc
ds
fucom
push
mov
lea
add
mov
es
pop
jbe
and
cmp
sub
jne
sbb
sbb
(bad)
imul
or
adc
add
in
push
mov
out
sbb
cmp
out
push
scas
xor
add
ins
les
lahf
add
(bad)
out
test
add
mov
mov
add
or
in
in
out
add
retf
pop
push
hlt
js
jmp
daa
mov
xchg
jbe
push
and
es
and
or
adc
pop
es
cmps
leave
fcom
test
sbb
mov
cli
out
mov
mov
cmp
xchg
dec
add
(bad)
mov
mov
movs
jae
inc
fild
push
pop
stos
es
mov
in
pop
pop
es
jge
int3
int3
mov
pop
add
sbb
or
sti
sti
push
xchg
or
push
(bad)
or
ins
out
aaa
ja
adc
and
xor
push
mov
adc
into
aas
or
add
out
imul
inc
dec
add
or
xchg
add
fsub
es
(bad)
jecxz
nop
retf
add
es
mov
(bad)
div
dec
aam
sub
add
out
mov
scas
cdq
cdq
shl
out
imul
out
add
push
add
inc
add
xchg
mov
hlt
test
adc
pmaddwd
out
repz
stc
xchg
add
mov
aas
adc
mov
test
pop
pushf
push
sbb
ret
nop
mov
sbb
push
cmp
add
sbb
dec
mov
fiadd
push
es
jp
xchg
ins
ins
out
add
inc
xor
sahf
stos
clc
(bad)
loop
mov
test
xchg
in
in
call
add
(bad)
mov
push
inc
mov
daa
daa
pop
add
adc
pop
in
loopne
vpunpcklbw
pop
pop
add
enter
xchg
sub
fs
push
inc
jp
sbb
das
out
ss
add
frstor
(bad)
out
jle
(bad)
add
ins
test
fmul
pusha
add
xchg
in
nop
es
add
mov
into
mov
out
call
shl
lock
bound
add
push
hlt
xchg
push
es
dec
ss
loope
push
in
add
dec
mov
xchg
gs
add
inc
scas
scas
adc
fsubp
in
add
outs
mov
mov
adc
leave
add
or
cmp
and
or
out
movs
shr
fdiv
dec
add
cmp
mov
es
sti
shl
sub
xor
sbb
mov
add
(bad)
fistp
out
push
std
fs
inc
inc
mov
push
scas
scas
dec
ja
out
xchg
push
inc
es
and
mov
enter
ds
pop
pop
call
cdq
add
out
push
inc
fisub
or
and
mov
shl
std
call
out
stos
sbb
es
(bad)
add
inc
sbb
xchg
mov
adc
dec
out
jne
add
jl
sbb
out
add
mov
and
sar
pop
es
ins
(bad)
(bad)
inc
dec
es
lock
add
mov
push
outs
outs
adc
repz
sbb
ss
js
into
jno
dec
es
dec
add
jecxz
je
sbb
cli
ss
xor
retf
lds
and
in
add
(bad)
mov
scas
or
xchg
mov
inc
imul
ins
sub
test
dec
add
dec
sti
adc
es
xor
je
test
in
bswap
xor
ins
jb
xor
xchg
aas
aas
pop
inc
add
add
xchg
sbb
sbb
ja
and
out
cmps
or
in
dec
fld
(bad)
shl
push
or
nop
sub
add
sti
pop
shl
ds
add
push
aad
fnsave
xor
fsub
add
outs
mov
mul
add
mov
cmp
aad
add
jmp
mov
outs
cmp
jp
cmp
out
add
xor
(bad)
sub
iret
cmps
and
out
fdivr
es
add
fwait
ins
jecxz
xchg
inc
add
aaa
fsub
xor
call
out
inc
movs
movs
shr
imul
xchg
and
dec
out
add
fstp
loop
mov
pop
ins
ins
pop
mov
pusha
(bad)
data16
out
mov
es
sub
inc
sub
push
xlat
add
jp
test
add
daa
out
test
leave
lock
adc
add
les
es
mov
xor
and
or
mov
fdiv
in
add
mov
push
adc
les
mov
adc
fiadd
add
xchg
xchg
adc
add
sub
add
ret
sbb
mov
add
push
dec
dec
jmp
jbe
frstor
add
in
ins
cld
repz
pop
add
out
xor
xchg
popf
popf
sub
(bad)
pop
test
mov
jb
fwait
pop
mov
repnz
div
push
dec
aas
add
mov
jae
cmps
xchg
push
(bad)
es
shl
popa
(bad)
sub
scas
out
and
es
aaa
dec
mov
adc
jmp
aam
mov
cmp
in
outs
loope
pop
outs
outs
pop
dec
sahf
rcr
mov
es
add
retf
mov
outs
outs
and
cmps
scas
cs
pop
test
out
pop
jecxz
xor
out
mov
pop
push
push
add
or
mov
(bad)
leave
and
cld
add
pop
nop
nop
ss
or
mov
add
pop
push
test
or
add
outs
cmp
fmul
or
add
shl
jl
add
ror
out
adc
or
mov
jmp
push
out
es
adc
dec
dec
add
adc
loop
add
imul
xchg
shl
loopne
lods
or
ss
jp
sub
pop
fs
add
hlt
push
sbb
int
pop
out
add
movs
jmp
fs
cli
jb
add
mov
imul
(bad)
push
and
test
cmps
out
int3
mov
(bad)
(bad)
inc
sub
rol
xchg
and
sub
aas
jmp
pushf
adc
push
es
add
and
sbb
add
sub
add
xor
jb
es
dec
std
int
add
retf
push
push
ds
push
out
add
push
div
adc
movs
movs
call
pop
jmp
and
daa
out
sbb
xor
ret
jl
add
and
mov
mov
frstor
or
add
outs
rcl
xor
add
data16
es
aas
jns
add
cmp
je
ret
sbb
rcl
dec
pop
out
mov
push
test
add
dec
add
out
hlt
jno
sar
pop
xchg
out
leave
and
es
dec
scas
adc
and
sub
add
pop
imul
popa
adc
xchg
pop
es
loop
mov
add
popf
outs
mov
in
inc
es
xor
dec
es
loopne
ret
ret
add
cmp
out
aas
out
add
jp
adc
cmps
aaa
xor
mov
sti
sar
add
push
in
xchg
es
add
sub
push
push
leave
add
out
push
in
cmp
out
mov
and
push
push
push
fiadd
out
add
push
es
fild
pop
add
cld
push
mov
and
lahf
cmp
retf
sub
add
push
mov
jmp
es
add
jne
mov
and
clc
fsub
jle
je
adc
retf
add
fistp
add
jnp
pop
hlt
movs
(bad)
les
ror
add
cld
shr
lods
push
imul
mov
es
cwde
scas
pop
cmps
cmps
push
add
xchg
repz
jbe
data16
jmp
sahf
sbb
mov
and
or
dec
push
add
out
ins
(bad)
call
data16
inc
fcomp
adc
ins
out
xor
and
test
lods
test
add
add
cld
dec
fisttp
dec
xchg
cli
hlt
es
push
or
push
sub
ret
xchg
arpl
and
shr
ins
add
cmps
(bad)
ror
clc
clc
xchg
icebp
jle
and
and
jnp
movs
repz
xchg
lahf
lahf
add
mov
out
outs
pop
sahf
es
inc
add
out
out
mov
cld
xchg
add
(bad)
cld
xchg
and
push
adc
add
test
mov
and
out
(bad)
jmp
stos
out
mov
ds
pop
adc
in
jns
rcr
es
enter
or
es
test
inc
add
scas
cmp
je
(bad)
jp
push
cmp
fiadd
xchg
les
(bad)
push
stc
into
rol
inc
(bad)
inc
add
scas
iret
loope
lock
clc
add
int
out
mov
daa
ret
adc
sbb
jne
and
test
inc
cmps
les
cmps
int
add
repnz
hlt
mov
add
pop
sbb
int3
cmp
jae
jl
add
inc
ss
mov
jbe
add
mov
enter
out
js
(bad)
jnp
and
cmp
inc
(bad)
clc
aam
mov
mov
jb
push
loopne
push
fiadd
inc
es
inc
xchg
gs
mov
movs
add
jbe
and
es
adc
loop
pop
pop
jno
(bad)
xor
add
es
inc
into
xchg
es
pusha
loopne
add
cmp
es
fsubr
js
lds
sub
push
jnp
test
out
es
mov
out
outs
xchg
aas
inc
cli
cmc
out
mov
and
js
sub
outs
add
je
jmp
add
mov
sbb
pushf
addr16
mov
daa
cmp
cwde
out
dec
movs
and
push
add
add
mov
jnp
outs
out
push
dec
add
enter
out
lds
add
pusha
daa
cmp
mov
dec
sbb
mov
fadd
lahf
es
aam
and
xor
mov
add
sbb
jbe
push
lods
adc
dec
jb
add
aas
push
push
mov
sub
add
sub
inc
call
pop
out
jb
lods
es
xor
aam
aas
xlat
mov
out
test
fnstsw
fidivr
aas
das
cmp
adc
test
sbb
add
mov
mov
int3
fisubr
xchg
add
fsub
ret
div
add
out
pop
into
jnp
push
sub
or
jecxz
imul
stos
out
out
jge
sub
out
push
push
cs
imul
(bad)
adc
ins
cmp
es
lahf
sbb
int
psubq
rcl
jmp
add
(bad)
out
mov
outs
mov
out
sub
hlt
bound
ss
out
(bad)
adc
jae
out
out
mov
shl
push
nop
es
bound
add
mov
add
mov
mov
imul
(bad)
out
xor
and
dec
movs
xchg
popa
popa
push
xor
movs
or
lods
int
push
push
sub
cmp
inc
adc
and
dec
out
les
retf
mov
cmp
je
cld
ins
add
out
sub
push
pop
inc
mov
adc
or
pop
out
and
push
fwait
repnz
out
or
jbe
es
xor
or
(bad)
pop
add
enter
add
out
nop
stos
add
outs
popf
shl
lods
lods
add
sub
sub
jb
es
or
or
int
ficomp
add
test
cld
xchg
fistp
dec
sbb
es
ret
dec
scas
in
in
into
stos
cmp
pop
out
jbe
pop
cs
pop
add
outs
or
es
cmp
mov
out
imul
sub
cmps
cmps
out
ins
cmp
push
push
test
mov
cld
loopne
pop
rol
mov
out
or
scas
fldenv
lods
dec
dec
pop
add
jb
fimul
cmps
cmps
jg
and
add
rcr
push
jae
std
or
push
cmps
xchg
es
push
(bad)
inc
add
in
mov
icebp
mov
mov
out
ds
je
xchg
call
xor
and
lds
ret
xchg
ss
cmp
sub
bound
mov
fcmovu
mov
cld
out
pop
sbb
out
add
es
cli
leave
sub
jns
add
inc
out
cld
mov
jo
push
pop
mov
mov
idiv
icebp
pusha
(bad)
les
pop
sbb
push
sub
call
mov
lock
xchg
pop
add
shr
add
adc
daa
jbe
push
mov
test
jle
sbb
es
ficomp
push
add
out
jae
cmp
out
jmp
inc
loop
xchg
xchg
pop
mov
xor
out
shr
jecxz
out
push
loopne
cmp
jmp
adc
mov
shl
inc
cmp
aam
add
movs
sbb
add
imul
sbb
shl
int3
int3
adc
clc
out
inc
stos
cdq
add
add
out
push
mov
cs
es
out
mov
or
add
test
out
push
mov
mov
push
cdq
xor
sar
pop
pop
jecxz
lds
jno
mov
daa
add
scas
push
jl
mov
add
call
or
mov
test
cmps
cdq
xor
(bad)
cmp
pop
cmp
and
inc
inc
mov
add
out
ja
add
vpmaxub
aad
dec
adc
xchg
xchg
pop
xor
inc
(bad)
out
rol
inc
xchg
mov
outs
fwait
leave
leave
scas
add
ins
ins
mov
cs
call
add
mov
scas
or
add
sbb
push
inc
push
out
add
in
xchg
dec
dec
pusha
out
cdq
lock
add
loope
adc
call
cmp
xchg
pushw
push
add
out
pop
pop
dec
(bad)
les
scas
out
pop
pop
xchg
adc
push
cmps
nop
out
inc
dec
scas
es
add
ins
es
sub
mov
jge
jg
or
and
out
xor
out
add
loopne
and
fcomp
mov
add
in
stos
les
out
cs
mov
mov
rcl
bound
bound
add
dec
or
add
inc
xor
cmp
add
cli
pop
xor
xor
mov
add
jne
sbb
cli
push
nop
es
add
enter
dec
es
scas
stos
push
in
or
call
dec
add
out
movs
xchg
push
out
aaa
lds
es
dec
add
out
push
lea
sbb
sbb
add
xor
lods
mov
out
test
(bad)
mov
cmp
mov
add
jmp
cs
add
pusha
push
push
loopne
jnp
jo
add
dec
dec
cli
out
test
jmp
div
fadd
jnp
cmp
repz
dec
add
scas
scas
xchg
ret
cmp
test
out
mov
es
add
jne
test
mov
cli
clc
sbb
mov
cdq
clc
clc
rcr
and
(bad)
shl
fnsave
dec
dec
shr
out
out
std
push
es
sti
pop
in
das
ucomiss
retf
mov
dec
jns
and
lods
and
add
out
imul
add
cmp
stos
js
xchg
xchg
cmp
retf
es
sbb
out
out
add
cs
fimul
mov
push
out
mov
loop
and
je
sub
add
movs
call
pop
jno
dec
dec
mov
add
sar
es
sub
cld
xor
out
xchg
lock
cmp
add
push
fdivp
rcl
je
cmps
add
out
dec
xor
das
pop
mov
and
sar
push
daa
inc
mov
int
dec
add
call
das
call
sbb
add
inc
fld
lds
xchg
out
jno
or
add
in
sbb
lods
lods
or
es
cmp
and
es
add
sbb
xchg
test
pop
add
in
inc
xor
out
es
push
or
push
es
push
jmp
sub
add
imul
rcl
push
sbb
add
mov
out
out
add
cmp
adc
sbb
pop
mov
push
xchg
lock
pop
cmp
mov
outs
call
arpl
fs
add
push
push
xor
pop
sbb
dec
push
out
(bad)
adc
jecxz
cli
loope
jge
mov
jb
or
pop
pop
xor
and
je
enter
add
hlt
int3
int3
imul
out
add
iret
push
mov
add
fcomip
adc
jl
jge
loopne
add
mov
ins
js
nop
add
das
popa
pop
es
cmps
enter
push
add
cmp
mov
cwde
cwde
fdiv
shl
mov
shl
call
push
push
push
mov
add
xchg
fcmovu
in
loopne
ins
add
xor
aaa
fs
out
mov
dec
test
cld
sahf
sahf
add
dec
in
int
hlt
hlt
jne
push
or
enter
cmp
into
cmc
loop
add
cld
sub
lds
or
dec
ja
mov
mov
xchg
inc
stos
popf
es
repnz
jbe
aas
cmp
es
leave
or
add
imul
push
cmp
mov
inc
cmc
or
es
ins
test
sti
add
inc
inc
addr16
out
call
add
ret
pushf
js
es
ins
stos
int
lods
mov
shl
es
f2xm1
cmps
cmps
shl
or
dec
mov
xor
stc
stc
or
mov
mov
daa
aas
fs
(bad)
sub
mov
aam
xchg
cmp
out
add
fst
in
(bad)
les
shl
adc
pushf
pushf
in
jl
sbb
cld
pop
cs
arpl
push
pop
push
sub
retf
mov
out
xor
daa
hlt
loope
push
push
jmp
mov
jecxz
lea
movs
add
push
mov
mov
out
ret
add
push
movs
into
es
mov
xlat
pop
shl
fst
jmp
inc
mov
jp
xchg
mov
jbe
call
pop
repz
dec
int
dec
clc
clc
pop
movs
add
cld
mov
and
add
out
fld
xchg
sub
mov
mov
sub
(bad)
cmovge
bound
out
and
sbb
or
test
xchg
ins
es
cmp
inc
shl
inc
add
shl
out
fiadd
adc
jmp
jae
pop
inc
lds
sbb
or
dec
aad
add
mov
add
mov
leave
and
adc
loopne
aam
cmp
retf
fucom
enter
es
out
ret
cmp
pusha
and
es
test
inc
inc
sbb
es
in
pop
repz
ja
jmp
mov
add
ss
out
lds
imul
and
es
add
cmp
shl
bound
add
call
clc
(bad)
(bad)
inc
cs
std
sbb
out
repz
out
pop
cmps
fisub
jp
add
add
(bad)
add
xchg
popa
je
movs
fwait
mov
or
es
push
mov
ds
add
inc
cld
add
aas
hlt
popa
popa
mov
out
push
jo
icebp
icebp
add
sub
loope
pop
mov
out
adc
ret
jmp
jecxz
pusha
pusha
imul
pop
inc
xchg
dec
dec
add
rol
(bad)
out
pop
add
es
outs
and
xlat
sbb
mov
add
cmp
fst
jle
test
pop
rcr
hlt
bound
lahf
movs
lods
lods
std
jle
out
jmp
retf
test
arpl
cmp
cdq
dec
(bad)
mov
popf
pop
mov
out
mov
or
dec
es
add
push
push
scas
ss
imul
and
cmp
jnp
(bad)
adc
xor
dec
adc
cmc
sub
xchg
cdq
out
add
call
loopne
add
xchg
pop
pop
jnp
ja
jecxz
es
and
add
sbb
add
inc
es
imul
jnp
sub
mov
jp
out
push
pop
dec
es
adc
out
and
lock
daa
or
out
mov
and
scas
and
retf
inc
sti
pusha
es
mov
add
mov
out
test
loopne
mov
pop
ret
mov
out
in
out
inc
mov
add
out
add
fldenv
mov
add
pop
pop
mov
jbe
mov
inc
ds
mov
xchg
push
enter
add
out
xchg
cmc
dec
jecxz
retf
repz
dec
pop
sub
out
outs
inc
shl
add
dec
imul
pop
es
cmp
push
xor
cmp
add
jmp
es
jmp
fsubp
dec
mov
add
push
out
inc
sbb
add
int
out
ret
repz
out
xor
fisub
add
inc
mov
es
xor
pop
out
ror
and
test
push
push
add
in
scas
dec
lock
inc
rcr
mov
je
or
jno
push
push
mov
sbb
pop
out
and
sub
(bad)
retf
inc
add
imul
es
rcr
pop
mov
out
push
and
inc
in
pop
sbb
xor
xchg
fstp
out
inc
(bad)
out
cmp
jmp
pop
fist
(bad)
mov
add
inc
mov
and
je
add
out
mov
scas
add
ror
or
jae
push
push
pop
xor
test
pop
std
std
in
adc
les
add
cmps
out
xchg
lea
std
ror
in
cmp
mov
mov
pop
push
ja
and
icebp
sbb
or
jno
jle
aaa
aaa
clc
popf
stos
rcl
dec
retf
shl
adc
xchg
leave
push
add
xchg
mov
test
or
push
out
out
pop
es
pop
mov
sub
push
add
test
or
inc
rcr
xor
(bad)
packuswb
inc
out
jge
dec
rol
pop
and
xor
add
xchg
pushf
pushf
add
add
gs
dec
dec
push
push
inc
pop
pop
es
pop
jp
dec
jmp
out
out
add
mov
dec
mov
jle
and
lahf
lahf
xchg
popf
adc
outs
outs
add
rcl
fnstsw
add
es
loopne
dec
out
out
lea
adc
mov
xlat
push
inc
out
rol
loop
jb
dec
in
inc
imul
movs
movs
mov
out
mov
fnstcw
ret
out
aas
push
int
ins
pop
mov
adc
es
test
add
rol
sti
sahf
clc
clc
add
ja
int
movs
jl
je
div
aaa
sbb
mov
popf
pop
add
add
mov
test
add
retf
xchg
xchg
push
data16
sahf
pop
pop
cmc
movs
clc
inc
jo
push
(bad)
adc
mov
xchg
and
ficom
xor
jp
mov
jae
js
ds
or
dec
add
or
loopne
outs
sub
into
and
es
es
mov
pop
adc
push
jp
add
cmps
pop
cmp
out
and
inc
adc
pop
pop
out
fstp
push
cmp
scas
sti
add
or
sbb
pop
aad
push
pop
pop
mov
pop
loopne
out
test
add
out
or
push
add
retf
retf
jecxz
inc
mov
ror
jae
in
in
cmp
inc
inc
xor
aas
mov
inc
pop
pop
add
sub
fimul
mov
xor
ret
(bad)
cmp
mov
fbstp
inc
push
add
mov
adc
outs
rol
int
out
adc
or
ja
add
aad
lea
and
add
sbb
xlat
movs
mul
mov
ja
add
addr16
and
xchg
shl
push
add
add
outs
mov
out
outs
jbe
push
hlt
xchg
shl
out
add
sub
(bad)
paddw
cwde
es
adc
out
add
mov
add
ins
pushf
xchg
call
jmp
fadd
adc
or
push
iret
movntq
loope
es
(bad)
(bad)
xor
test
push
sub
xor
add
lods
fdivr
mov
int3
hlt
hlt
push
jmp
out
dec
xor
bound
aam
jp
fwait
ret
dec
repnz
add
lock
jb
out
ins
or
inc
out
sar
sbb
out
and
retf
sbb
add
es
jb
add
fwait
sahf
or
mov
add
outs
jle
out
ret
out
push
add
xchg
adc
out
imul
out
jmp
mov
pand
cmps
es
ret
movs
xchg
add
out
xlat
pushf
cld
add
inc
pop
jns
retf
add
ror
outs
or
and
fiadd
(bad)
cli
adc
ret
out
pop
adc
out
dec
clc
push
sbb
add
add
or
lock
js
call
loope
(bad)
das
test
es
jmp
rol
out
add
mov
scas
or
hlt
mov
add
cmps
(bad)
(bad)
jecxz
mov
bound
pop
stos
jne
add
jmp
dec
out
jl
add
mov
cwde
mov
repz
push
adc
rcr
dec
dec
mov
stc
pop
(bad)
es
ja
add
popf
mul
add
mov
jns
out
and
ds
out
sub
daa
mov
add
push
cmp
xchg
jg
pop
or
mov
add
and
in
inc
add
enter
mov
adc
into
nop
es
rol
daa
dec
pop
pop
lea
or
xor
xchg
fdiv
pop
es
inc
cdq
cdq
xor
inc
add
in
add
or
inc
cwde
cmp
clc
cmp
js
sbb
push
stos
inc
add
out
mov
jo
pop
mov
es
add
push
outs
outs
mov
push
out
(bad)
movs
inc
xchg
outs
xor
aad
out
popa
cmp
add
out
std
jns
es
mov
inc
inc
nop
retf
jmp
dec
cmc
cli
dec
jl
push
jnp
out
mov
test
dec
lock
sahf
sahf
ja
pop
es
jmp
std
loope
rol
xor
mov
inc
out
xor
fwait
out
add
xor
out
push
psrad
mov
mov
sbb
ficomp
out
push
ret
addr16
add
es
mov
xchg
fisub
cwde
outs
add
add
les
inc
add
xor
jp
retf
xchg
add
xor
bound
jno
adc
sbb
jb
or
cmp
mov
out
(bad)
dec
dec
pop
sbb
add
in
leave
jg
out
add
lea
and
adc
(bad)
add
adc
movs
sbb
add
call
sub
cmc
mov
xor
cs
pop
pop
gs
out
inc
push
les
lods
arpl
add
xor
push
push
shr
test
(bad)
mov
and
jne
fisubr
loopne
xchg
push
add
popa
ds
cmps
repnz
add
and
mov
out
add
xchg
fisub
cmp
pop
jne
xchg
repnz
mov
cmc
out
xchg
repz
jp
add
cdq
cdq
sub
jecxz
lods
lods
dec
push
adc
mov
add
add
push
or
xor
fimul
into
test
xlat
xlat
and
adc
rcl
push
push
pop
sub
out
out
jle
cmp
arpl
stos
add
hlt
data16
lods
(bad)
repz
cwde
cmp
lock
pfrcpit1
leave
jo
and
add
call
inc
in
jnp
add
xlat
cmp
out
mov
fcmovnu
adc
jmp
sub
jo
cs
and
shr
or
adc
or
add
inc
inc
jae
and
xchg
inc
es
mov
push
in
sub
fst
leave
out
shr
cmps
add
push
in
sbb
ss
int
sbb
arpl
out
rol
xchg
jle
and
dec
dec
add
mov
es
retf
add
out
es
xor
stc
stc
lods
cdq
add
sbb
or
es
jne
iret
cmps
cmc
cmc
add
movs
out
and
mov
nop
sbb
mov
fwait
enter
icebp
add
repnz
out
jp
popa
sbb
xchg
xlat
pusha
out
retf
sbb
mov
jb
es
iret
rol
fwait
movs
add
jle
cmp
cmp
add
sub
pusha
das
xor
or
stos
add
out
repnz
es
sbb
pop
in
mov
add
push
in
in
sub
mov
(bad)
nop
nop
xchg
and
es
es
pop
or
and
push
adc
cld
mov
add
js
mov
test
add
add
sar
out
fucomp
add
aam
in
es
mov
xchg
leave
out
je
add
cmp
inc
pop
repnz
mov
repz
or
add
sbb
fsub
mov
mov
mov
gs
mov
sub
sub
sub
popf
inc
pop
out
out
int
es
adc
sbb
pusha
xchg
xchg
mov
and
out
pop
fbld
jmp
(bad)
cli
xchg
shl
mov
xchg
mov
add
out
jnp
jl
sbb
inc
lds
xchg
leave
loopne
in
out
jns
add
mov
xlat
out
iret
shr
mov
out
mov
xchg
(bad)
add
push
xor
sub
out
sub
sub
cmp
or
inc
dec
aas
add
test
lock
cmc
push
and
push
inc
rcl
add
call
adc
sub
cmp
sbb
mov
aam
lods
xchg
out
data16
out
lds
outs
fcmovnu
cmps
jb
out
sub
fs
push
imul
mov
shl
in
add
loopne
xchg
push
cmp
ret
xor
jnp
sub
dec
push
loop
add
push
out
or
add
sub
retfw
int3
pusha
test
push
push
out
add
(bad)
jns
pop
push
(bad)
outs
lea
inc
mov
mov
add
test
push
push
in
retf
push
cmp
shl
in
add
out
sub
jmp
cmp
retf
clc
xor
es
pop
sti
push
push
cli
push
dec
adc
les
add
add
mov
adc
dec
add
cmp
(bad)
daa
daa
add
(bad)
out
int
xchg
es
add
rcl
cmps
call
out
add
das
add
outs
add
call
out
jnp
jp
fadd
adc
out
inc
not
(bad)
les
fisttp
scas
(bad)
inc
shr
and
jo
push
push
pop
ret
mov
in
dec
inc
out
pusha
pushf
sbb
add
vcmpsd
xchg
lods
out
pand
jp
sbb
adc
int3
xchg
xor
push
imul
cmp
add
ret
scas
xor
dec
and
inc
clc
sbb
sub
inc
out
add
test
or
push
lea
aaa
es
stc
pop
das
das
mov
jp
loopne
test
jne
pop
sub
es
mov
add
cld
mov
daa
add
sbb
es
adc
cmp
out
and
ja
mov
add
sti
mov
retf
out
out
imul
out
lods
int3
mov
and
js
and
xchg
pop
jmp
add
cld
jbe
xchg
add
push
jg
out
aam
arpl
add
hlt
leave
sub
mov
jl
out
nop
stc
ficomp
out
out
adc
jo
ds
icebp
add
nop
add
mov
scas
es
push
cmps
sbb
jecxz
loope
mov
xchg
xchg
xchg
add
fdiv
xor
cmp
in
inc
sub
add
fmul
pop
out
mov
rol
jns
(bad)
outs
ins
in
dec
push
cmp
xlat
xlat
cmps
mov
inc
sbb
add
jns
loop
adc
adc
jbe
outs
mov
xchg
mov
test
sub
push
ret
ret
aas
fistp
xor
inc
inc
int3
pop
mov
add
ins
add
es
or
mov
mov
pop
sbb
in
add
lds
out
scas
aam
cmp
fwait
popf
loop
and
test
add
inc
out
scas
scas
adc
add
adc
movs
loop
xlat
out
adc
outs
mov
out
add
lahf
lahf
mov
jbe
xlat
sbb
xor
push
popa
jmp
push
mov
jne
and
mov
neg
mov
sub
sbb
add
js
call
jg
add
inc
out
es
push
test
jmp
sbb
push
add
mov
ins
cmp
int3
int3
sbb
add
out
lds
mov
add
addr16
sbb
iret
(bad)
out
fnsave
add
cmp
stc
cmc
inc
inc
mov
aaa
es
inc
mov
lock
out
or
aad
fmul
out
mov
popf
push
add
pop
jno
test
sbb
mov
add
stos
les
push
add
test
inc
inc
retf
out
lock
es
cmp
rcl
lahf
or
inc
pop
ds
and
add
inc
cmps
es
inc
add
lock
aaa
into
or
out
fstp
push
ss
add
xor
out
(bad)
xor
add
das
das
aad
jle
add
cmp
ret
fprem1
test
sbb
lds
mov
add
pushf
add
and
es
sbb
sar
(bad)
out
pop
or
es
add
pusha
shl
push
scas
scas
bound
rcl
pop
add
push
enter
mov
mov
lahf
or
add
data16
xor
sub
out
sti
inc
(bad)
push
mov
iret
cmps
cmps
mov
gs
inc
add
out
call
cmp
outs
add
int3
add
jl
mov
cmp
add
push
push
rol
add
fs
fucomp
es
iret
jno
add
pop
add
mov
fadd
outs
push
test
aam
call
dec
movs
push
out
and
mov
push
add
push
test
xchg
adc
ror
out
lods
frstor
add
cmc
sti
sbb
pop
add
cld
mov
sub
int
jmp
xchg
stc
jle
mov
out
ds
push
inc
inc
dec
sbb
out
enter
mov
add
jo
es
std
jp
or
sti
push
cli
cli
pop
pop
daa
out
pushf
add
xchg
xchg
jbe
pop
out
(bad)
in
push
push
ja
in
out
aam
add
outs
mov
out
int
sbb
imul
add
jo
out
repnz
add
inc
inc
out
call
jnp
movs
aaa
iret
les
or
cmp
add
adc
out
add
cmps
in
lock
aad
xchg
pop
pop
jmp
inc
add
loope
adc
mov
retf
add
mov
out
add
shr
mov
and
add
fsub
adc
or
inc
es
add
adc
add
jecxz
or
inc
inc
inc
fild
out
push
and
pop
pop
fdivr
mov
mov
jo
mov
cs
inc
sbb
(bad)
out
out
xchg
xchg
mov
das
jnp
lods
es
jne
sub
sar
cmp
jbe
pop
inc
inc
les
leave
out
jle
add
lea
or
add
enter
mov
push
pop
pop
sub
icebp
es
js
cmp
outs
loopne
and
lods
pop
pop
int
jb
cli
jne
add
push
push
fisttp
pop
ins
mov
dec
outs
outs
add
icebp
out
add
jb
cmp
ss
es
sub
rol
sbb
mov
shl
and
xor
ins
add
xlat
cmp
sub
lock
sbb
mov
lds
add
(bad)
psllw
jg
add
test
fstp
lods
sub
cmp
iret
push
sti
sti
cld
inc
gs
add
ss
repnz
ds
add
sbb
mov
(bad)
cmp
xchg
sbb
shr
sub
out
rcr
dec
dec
push
aas
in
out
test
inc
es
and
rol
jno
lds
ds
lods
adc
out
adc
clc
add
adc
out
or
out
jne
xchg
es
dec
out
mov
jns
(bad)
test
mov
lods
js
add
dec
out
mov
jns
push
(bad)
(bad)
sbb
add
adc
and
cmp
sbb
sbb
adc
push
inc
inc
and
das
out
push
je
mov
in
dec
add
cmps
adc
out
sti
jge
mov
out
pop
jp
jns
ss
lock
arpl
into
repnz
jmp
or
jecxz
lods
xchg
cmp
movs
pop
es
and
add
xchg
jbe
push
push
(bad)
jo
out
imul
es
lds
add
sbb
(bad)
les
cs
add
(bad)
mov
jb
add
or
es
idiv
retf
movs
cwde
cwde
pop
ja
out
repnz
mov
jno
es
push
sti
or
add
ffree
(bad)
push
mov
out
int3
jnp
es
add
jl
mov
fcomp
out
push
rol
xchg
out
xchg
add
repnz
cmps
fiadd
xor
mov
mov
ss
fdivr
or
retf
xchg
repz
cmp
es
adc
shl
add
push
push
and
out
movs
mov
es
xor
icebp
icebp
stc
pop
sub
fwait
out
es
add
and
add
(bad)
out
cmp
pop
fwait
aam
inc
mov
es
out
imul
add
jae
cs
push
cmp
mov
add
push
es
imul
xchg
es
and
mov
es
sbb
inc
push
push
fmul
or
sar
movs
movs
push
(bad)
add
sbb
mov
cld
sub
pop
es
push
es
pop
pop
mov
jno
fistp
cs
es
sub
jp
verr
fs
xor
retf
inc
out
jns
cld
push
push
icebp
or
out
mov
lods
loope
out
sbb
push
mov
pusha
sub
cmp
es
outs
out
add
xchg
pop
fadd
es
adc
rcl
lods
(bad)
cmp
xor
push
sub
fwait
mov
movs
fadd
loopne
es
dec
push
and
adc
scas
es
popa
out
pop
add
fist
jo
add
and
mov
stos
add
pushf
cmp
out
sbb
adc
pop
out
clc
pop
icebp
es
push
pusha
xor
es
inc
sbb
imul
leave
mov
out
dec
jbe
add
shl
mov
pop
jns
ins
ins
ss
out
mov
mov
sub
int
cmp
dec
cmp
call
add
jo
es
xor
es
push
stos
stos
jmp
shl
add
(bad)
or
shl
add
pop
add
out
dec
pop
scas
push
push
out
cmp
stc
fadd
je
add
data16
fisub
xchg
mov
add
cmc
mov
sbb
hlt
out
fwait
add
es
movs
call
xlat
xlat
pop
enter
push
ret
or
loopne
dec
dec
call
das
out
imul
es
add
lock
retf
cli
out
outs
pop
je
sub
or
add
lahf
adc
pop
pop
cmp
and
fcomp
sub
jnp
add
dec
out
jmp
pop
add
out
mov
xchg
add
es
dec
lds
sbb
add
add
pop
es
xchg
fidiv
xor
pop
add
out
aad
(bad)
mov
add
fcomp
das
jl
(bad)
(bad)
inc
je
test
inc
or
popf
in
add
and
adc
pop
and
cmps
fistp
add
in
add
mov
xor
cli
out
es
add
dec
dec
div
es
inc
add
in
lods
test
xor
add
das
xchg
pop
out
fwait
xchg
push
es
push
js
mov
cmp
mov
jle
test
sbb
cmp
push
mov
mov
push
mov
out
pop
mov
rol
inc
(bad)
out
les
pop
pop
and
push
mul
add
leave
jg
mov
add
nop
out
shl
iret
xor
dec
sbb
scas
out
aas
es
movs
frstor
sar
in
hlt
int3
in
out
sar
scas
scas
dec
mov
inc
xchg
es
dec
adc
imul
pushf
adc
scas
add
and
mov
test
mov
xlat
push
push
out
stos
mov
loopne
or
add
and
xchg
or
cmp
add
cwde
clc
sub
std
add
push
or
fstp
add
call
push
(bad)
jl
js
xlat
add
out
call
scas
out
jb
out
cli
add
jo
pop
js
inc
add
cmp
push
push
adc
sub
mov
js
add
pop
rol
jp
out
lock
and
dec
rol
aaa
outs
mov
mov
sbb
adc
hlt
vaddsubps
test
out
cmc
dec
push
es
sub
fwait
fwait
jnp
or
dec
or
jge
push
add
mov
sbb
add
dec
out
sbb
or
xchg
repnz
mov
mov
out
test
sub
rcl
and
fwait
lods
lods
out
inc
test
imul
mov
out
add
mov
xchg
sbb
push
ficom
out
lods
add
pop
out
xchg
sti
es
push
jmp
dec
out
push
in
add
stos
sbb
xchg
mov
add
adc
fimul
rol
out
test
lock
mov
dec
dec
je
xor
mov
sub
add
(bad)
repz
add
es
cmp
or
add
sahf
sub
jbe
cli
pop
xchg
es
add
adc
and
add
adc
sub
pop
lods
add
out
xchg
adc
daa
add
es
or
pop
add
xor
mov
push
mov
enter
nop
push
inc
inc
xchg
(bad)
pop
out
sbb
sar
add
cli
out
pop
mov
int
out
cwde
test
xchg
adc
out
lods
dec
sahf
es
add
scas
cs
(bad)
repz
mov
sbb
add
(bad)
cdq
cmc
cmc
lods
jo
out
add
in
fs
movs
out
sbb
(bad)
sahf
sahf
cmp
add
add
and
dec
jmp
out
adc
mov
mov
push
add
fwait
push
push
outs
jbe
out
in
sbb
mov
out
rcl
icebp
mov
pusha
cmps
loopne
es
add
or
rcl
pop
lods
popf
out
aad
push
jp
hlt
and
push
sbb
clc
mov
cs
leave
imul
test
clc
or
out
dec
adc
shr
sbb
test
xchg
adc
es
popf
sbb
sub
dec
div
xchg
out
rol
jge
cwde
dec
xlat
add
and
push
(bad)
adc
repnz
mov
xor
add
jnp
mul
imul
out
aam
clc
in
in
xor
and
je
add
lahf
xchg
es
sub
stc
call
ficomp
mov
add
movs
mov
pop
es
nop
add
fwait
ins
popa
ret
jbe
out
mov
jle
loopne
mov
add
fadd
pop
test
hlt
mov
(bad)
leave
mul
out
sbb
add
mov
pop
loope
cmp
out
add
pop
add
add
es
sti
jns
loopne
(bad)
lahf
out
mov
(bad)
push
push
mov
out
pop
and
sbb
add
or
mov
push
add
dec
out
cmps
pusha
call
out
pushf
xor
(bad)
sub
(bad)
push
xchg
or
jno
or
scas
fsubp
out
(bad)
lock
es
xchg
push
out
inc
mov
dec
or
movs
lea
jle
add
pop
pop
adc
es
mov
sbb
in
es
cli
and
add
movzx
(bad)
sahf
fisub
and
(bad)
gs
add
(bad)
mov
sti
inc
inc
sysenter
cdq
out
clc
mov
push
and
cmp
add
popf
mov
sbb
pop
push
mov
shl
mov
jb
test
es
out
pop
pop
in
hlt
adc
xor
add
sti
cmps
sbb
out
rol
mov
out
sub
sahf
add
xchg
es
xor
inc
adc
cs
outs
and
jg
mov
add
aam
pusha
push
sbb
ror
(bad)
inc
pop
and
movs
out
loopne
mov
out
inc
gs
xor
int
mov
xor
inc
cs
ja
or
add
and
out
dec
add
sti
cmp
push
out
bound
jg
add
imul
ja
inc
add
es
and
popf
pop
pop
lds
or
or
test
lods
stos
out
movs
xchg
add
cmp
add
add
fistp
xor
cli
push
std
mov
ret
fsub
fs
dec
lock
and
pop
sub
icebp
icebp
popa
inc
sbb
push
sbb
inc
pop
pop
outs
pusha
jle
add
lock
push
jp
jb
or
mov
sub
or
xchg
adc
cwde
push
add
push
retf
rol
cmp
sbb
imul
int3
es
mov
xchg
mov
call
push
ja
or
xor
pop
clc
out
adc
sbb
cmp
aas
imul
out
jo
add
loope
and
cwde
lock
out
popf
call
out
push
rcl
xor
mov
pop
cwde
hlt
loopne
(bad)
out
push
add
mov
mov
and
add
mov
mov
push
push
push
mov
out
fs
mov
xchg
dec
or
es
aas
xor
pop
add
xor
cwde
(bad)
and
stos
pusha
lea
pop
push
imul
add
mov
mov
sub
stos
push
test
push
xor
mov
enter
add
and
jbe
sub
out
adc
add
ror
fucom
cmp
jae
push
cmps
lods
lods
push
aad
out
fcmovne
es
push
jmp
xor
mov
shl
pop
sub
xchg
xchg
push
or
arpl
fwait
adc
and
dec
fbld
push
out
(bad)
int
mov
push
or
out
push
inc
add
and
sahf
es
mov
daa
pop
xor
push
dec
imul
out
mov
ret
add
addr16
test
out
cdq
add
sub
jl
movs
add
and
nop
out
into
fadd
cs
cld
out
add
int3
iret
out
or
add
rcl
jl
push
add
lahf
push
stc
out
rcr
pushf
es
cmp
jae
imul
jne
adc
das
out
(bad)
repnz
es
retf
fs
in
scas
scas
add
push
out
loopne
pusha
and
pop
add
daa
daa
mov
cmps
mov
xchg
ins
out
(bad)
lahf
sub
add
scas
out
retf
sti
adc
out
mov
aaa
es
add
ja
jbe
cmp
stc
nop
rol
add
loopne
retf
out
push
fild
test
dec
mov
pop
or
mov
add
in
pop
pop
add
inc
xchg
push
push
jns
add
out
lods
pop
xchg
add
xor
rol
mov
call
shl
and
(bad)
and
out
pop
inc
jne
xchg
in
pop
sub
mov
ror
ins
ins
stos
cmp
out
not
dec
movs
movs
test
cmp
mov
xchg
fisubr
jmp
cmp
loop
push
push
test
es
popa
test
jo
xchg
loope
aad
es
fild
add
sub
shl
mov
add
(bad)
and
repnz
dec
jbe
(bad)
lea
adc
popf
mov
int3
int3
or
ins
and
cmps
xor
out
stos
or
test
pop
or
mov
rcl
loope
packuswb
daa
test
mov
es
add
in
clc
out
fdivr
es
ret
nop
xor
retf
es
add
push
std
addr16
or
push
add
out
pop
in
es
ja
xchg
xchg
stc
inc
xchg
es
jae
dec
add
ret
sub
xchg
lock
jbe
nop
mov
xor
cld
es
pop
inc
jmp
loope
dec
movs
es
push
dec
cmp
inc
call
out
lods
(bad)
loopne
mov
xor
das
add
add
jbe
add
cmp
adc
pop
es
sub
mov
(bad)
sub
cmp
jno
and
call
and
inc
cli
test
sahf
or
add
repz
fadd
jle
ins
add
cmps
out
sub
es
call
es
mov
adc
scas
scas
imul
add
loopne
cmps
out
mov
push
movs
jb
xchg
(bad)
pop
es
add
imul
push
es
and
add
es
test
enter
mov
push
out
and
and
inc
lock
daa
mov
and
pop
neg
dec
dec
pop
enter
adc
outs
sub
jb
xchg
pop
mov
or
add
jbe
or
add
or
out
xor
cli
cli
enter
xchg
add
jle
jae
les
dec
es
pop
cmp
lock
add
mov
arpl
xor
mul
add
jecxz
xor
dec
sub
ror
pop
adc
push
div
push
add
out
gs
mov
lds
adc
fstp
and
inc
out
jae
mul
mov
rol
add
jl
mov
cmp
jne
retf
add
add
pop
out
loop
sub
out
pop
aas
jo
mov
push
cmps
add
or
inc
add
dec
es
push
jmp
es
inc
test
cli
mov
dec
cmps
cmp
cmp
es
push
jae
out
out
test
nop
xchg
xchg
pushf
cmc
imul
xchg
cli
and
sbb
ror
pop
mov
cmp
out
repz
add
adc
inc
mov
xor
mov
daa
jmp
lahf
out
dec
add
idiv
jmp
add
pop
and
mov
les
test
add
ins
jge
out
jnp
add
sbb
or
sub
add
jl
sub
jle
ret
movs
and
and
jae
dec
fild
lea
enter
dec
out
xor
mov
mov
cmps
movs
xchg
pusha
es
add
call
pop
mov
clc
out
leave
add
push
or
out
add
scas
pop
jb
call
or
mov
in
add
jge
add
cmp
xor
es
lahf
call
or
add
add
add
xchg
push
adc
call
(bad)
push
test
sub
jo
adc
sub
pushf
jp
sbb
push
cmps
div
push
add
out
ret
pop
push
es
mov
jmp
pusha
es
pop
mov
test
vpsubq
and
fnsave
retf
out
sub
jmp
out
aaa
loop
and
jge
es
add
pop
enter
or
out
call
add
in
out
push
sbb
cmc
cmps
pop
test
xor
pusha
cmp
jbe
rcr
fisub
adc
add
es
dec
sub
pusha
stos
inc
mov
sub
lods
aaa
pusha
cmp
fld
xchg
pop
push
push
push
js
add
imul
popa
jp
cli
cli
out
sbb
rol
xor
add
int3
adc
(bad)
ret
es
retf
push
mov
lds
es
push
iret
icebp
icebp
pop
push
aaa
es
rol
push
push
xor
aam
adc
add
ss
es
jb
pop
add
rol
gs
jo
sar
cmp
push
dec
inc
es
repz
jne
add
mov
jg
mov
adc
sub
fiadd
es
rcr
xor
ret
add
enter
mov
xlat
shr
inc
sbb
add
mov
mov
sbb
out
jbe
add
es
or
push
push
add
mov
mov
pusha
xor
out
mov
rol
(bad)
(bad)
xchg
inc
shl
retf
stos
addr16
das
es
enter
loop
xchg
cmp
movs
push
push
adc
add
test
xchg
sar
mov
add
mov
clc
fs
out
mov
cli
add
xchg
retf
fnstsw
call
mov
mov
dec
repz
aaa
add
and
pusha
test
loope
adc
leave
inc
mov
cdq
lea
fdiv
sub
jmp
and
aas
adc
add
pop
or
out
(bad)
or
pop
pop
or
push
add
daa
retf
rol
jns
pop
out
cwde
imul
das
loopne
nop
sbb
lods
add
mov
fidiv
and
add
out
test
or
mov
or
mov
bsr
in
pop
cmp
lods
push
stc
add
loope
adc
and
or
dec
shl
div
hlt
add
test
and
mov
cmp
daa
pusha
lock
sub
shr
in
dec
and
out
sbb
jge
mov
inc
pop
daa
pop
xchg
xchg
cmps
leave
xchg
out
ror
mov
out
in
xor
cs
add
cmp
aad
(bad)
out
xchg
push
adc
xchg
xchg
adc
sub
out
add
imul
loope
xlat
test
xchg
cmp
iret
out
dec
movs
mov
aaa
adc
xor
and
push
push
mov
shr
and
mov
scas
scas
repz
out
cmp
dec
(bad)
nop
pop
out
popf
cli
add
(bad)
or
out
xor
shl
jo
xchg
out
jmp
xor
in
mov
fadd
retf
retf
jno
aam
(bad)
cmp
inc
out
ficomp
cld
clc
out
repnz
hlt
es
push
xor
les
jbe
add
out
data16
cwde
and
out
jp
pop
mov
out
pop
sti
daa
es
pop
pop
pusha
push
push
outs
lds
add
sub
mov
cmp
fidiv
out
sub
or
out
add
retf
ss
popf
popf
push
xchg
mov
and
jno
add
dec
fist
push
lock
lds
pinsrw
add
or
xor
and
dec
sbb
adc
fild
or
fild
nop
out
jno
sbb
(bad)
mov
push
jge
out
adc
xor
in
cmp
out
movs
loope
es
(bad)
aam
sbb
lea
pop
cmps
rcl
mov
ror
es
icebp
and
mul
jae
cwde
ret
push
add
out
sahf
into
push
cmps
cmps
and
pushf
add
fstp
inc
outs
out
push
mov
cmp
scas
je
out
push
jb
es
pusha
sub
shl
add
icebp
mov
out
mov
daa
add
cmp
push
jmp
(bad)
jo
xchg
xchg
sub
out
out
add
push
xchg
xchg
data16
mov
add
lds
xor
adc
(bad)
out
add
div
add
jbe
lock
jp
mov
fstp
add
xchg
xor
out
es
dec
es
mov
mov
pop
cmp
js
(bad)
(bad)
call
dec
add
add
lods
ins
in
outs
jnp
shr
mov
out
xlat
add
scas
scas
mov
(bad)
out
mov
add
cmp
push
test
xchg
pop
sub
(bad)
iret
stc
and
shl
or
mov
popf
test
mov
mov
gs
stc
in
daa
mov
add
mov
sub
pushf
popa
popf
es
int
and
mov
sbb
retf
xor
ret
add
mov
ins
cmps
cmps
mov
out
fsubr
xchg
xchg
push
xchg
out
sbb
push
es
push
stos
imul
pushf
ins
sbb
dec
dec
punpcklwd
into
stos
cmps
rcl
adc
or
leave
adc
shr
add
mov
imul
loope
je
push
and
add
inc
inc
cs
ret
sbb
xor
enter
cmp
jp
or
addr16
fld
add
fidivr
loop
cld
(bad)
out
call
xor
add
adc
mov
es
push
push
push
sub
add
mov
mov
lock
es
add
ja
stc
cld
mov
cmp
or
mov
iret
ror
jns
dec
out
mov
into
movs
movs
and
add
xchg
ror
call
frstpm(287
or
es
adc
add
add
pop
adc
out
xor
stc
cmp
and
mov
add
mul
sub
mov
jmp
or
in
jbe
es
pop
push
mov
mov
xchg
iret
iret
cld
add
es
test
jmp
add
lock
repz
les
jmp
es
pusha
jae
popa
mov
int3
push
adc
test
out
add
and
add
pop
pop
pop
mov
add
ja
mov
dec
dec
icebp
in
scas
add
out
pop
add
test
add
cmp
adc
es
(bad)
mov
cmp
(bad)
sub
cwde
and
push
ror
mov
pusha
es
jge
dec
xor
mov
jmp
imul
in
push
adc
out
out
pop
cmp
pop
lock
and
adc
push
push
js
add
ds
clc
dec
jae
out
cmps
dec
ret
outs
xor
cmp
in
(bad)
and
aam
div
stos
push
fisub
mov
add
retf
mov
fs
add
int
out
stos
add
gs
mov
out
jmp
or
add
es
adc
add
fwait
cmp
pop
mov
loopne
rol
out
imul
rcl
mov
out
out
popf
jmp
sub
mov
iret
and
out
test
cmps
xchg
out
cmp
mov
iret
sbb
es
lock
add
cmp
leave
sub
enter
sahf
inc
out
loope
or
popa
jmp
jo
jmp
inc
lods
je
cmp
(bad)
(bad)
xor
out
push
add
pop
(bad)
(bad)
shr
add
and
and
fisub
push
mov
popf
push
mul
out
mov
adc
add
or
jne
daa
daa
add
mov
inc
adc
mov
push
es
sbb
jp
pushf
in
aad
sti
sti
add
sub
fdiv
lock
je
xlat
xchg
add
jecxz
(bad)
clc
clc
jno
(bad)
sar
mov
(bad)
or
fld
lods
lods
mov
mov
adc
add
and
aas
out
mov
in
add
shl
push
fcmovu
idiv
mov
add
mov
data16
jno
push
ror
xchg
fisubr
ss
aaa
aaa
mov
in
es
and
sub
xor
add
cld
cmp
add
dec
sbb
jae
add
test
sar
inc
cmp
mov
mov
out
sar
aam
jge
inc
fld
add
mov
jmp
out
push
add
es
cmp
imul
ins
adc
fimul
enter
or
addr16
pop
pop
pop
push
add
imul
pusha
sti
sti
aad
loopne
ds
push
es
inc
les
pop
paddq
ins
push
ror
out
repnz
rcl
out
jecxz
ins
(bad)
pop
mov
cmps
pop
pop
xor
xchg
nop
xchg
rol
daa
es
imul
jmp
xor
es
mov
sub
dec
arpl
test
push
es
or
mov
add
jo
lds
imul
pop
add
loop
add
out
cmp
mov
mov
in
inc
xor
mov
mov
dec
ror
add
mov
loope
addr16
aam
clc
xlat
out
outs
add
push
push
cmc
lods
cmp
dec
(bad)
jge
dec
dec
fistp
out
add
push
es
in
in
push
pop
add
es
shr
pushf
sub
sub
push
push
cmps
test
out
ds
sahf
add
pop
pop
sub
jmp
daa
ror
retf
add
loope
fcom
rcl
cmps
clc
mov
mul
mov
push
out
lock
hlt
pusha
pusha
add
add
es
mov
adc
(bad)
(bad)
(bad)
out
add
sbb
cmp
lahf
out
ret
add
push
mov
xchg
in
daa
es
unpcklps
mov
loop
add
daa
pop
pop
inc
cld
ins
adc
add
out
cld
jg
stos
stos
dec
push
shl
push
pop
add
lds
addr16
xor
and
outs
int3
(bad)
lock
pop
jecxz
cmc
out
or
imul
dec
retf
(bad)
jmp
shl
std
aad
ds
push
add
mov
outs
inc
cmp
lock
ds
add
pop
dec
mov
pop
mov
int3
int3
int
aaa
out
jmp
gs
sbb
add
out
pushf
mov
es
dec
add
add
sbb
add
pop
movs
int
and
outs
ins
enter
add
and
mov
add
cmp
xor
shr
xchg
iret
push
fidivr
mov
xchg
sub
rol
jp
out
imul
(bad)
loope
push
add
cmp
es
push
mov
add
jp
adc
out
rcl
imul
in
fadd
shr
and
enter
xchg
fild
mov
scas
call
push
out
or
cmp
div
mov
stc
adc
adc
(bad)
and
add
out
add
stos
dec
int
cwde
add
sub
daa
xchg
test
ror
or
xchg
add
mov
mov
(bad)
enter
add
test
data16
add
out
xor
inc
xor
aaa
lock
je
adc
pushf
adc
call
jne
push
add
cmp
add
and
adc
out
fld1
add
(bad)
imul
js
add
add
mov
(bad)
pop
es
shl
xor
(bad)
es
push
dec
inc
jle
ror
scas
out
cmps
cwde
add
xchg
inc
in
loop
xchg
imul
into
into
add
push
es
add
outs
sbb
data16
leave
inc
les
fs
rol
out
push
sbb
add
adc
ror
out
and
retf
xchg
imul
enter
fnstcw
out
xchg
cdq
mov
add
cmp
mov
cld
ds
inc
out
retf
sub
add
imul
out
jb
int
push
jne
add
es
push
pop
jge
iret
add
imul
fadd
es
pop
add
jo
aas
add
out
dec
xchg
add
clc
and
rcr
call
fnstcw
xor
add
adc
add
push
push
imul
jle
test
out
xchg
jnp
es
outs
mov
add
stos
shl
dec
mov
retf
push
pusha
icebp
out
jg
xor
add
fwait
out
mov
pop
out
ss
jae
sbb
in
push
out
call
dec
mov
xor
add
je
sbb
pop
outs
add
(bad)
mov
mov
lods
mov
in
xor
fucomip
and
rol
pop
add
(bad)
call
inc
push
xor
add
loope
add
jl
sbb
mov
add
out
lods
xor
adc
out
out
inc
xchg
out
fisubr
push
xchg
add
out
pop
jge
xchg
xchg
add
mov
jp
test
pop
push
rcl
out
cmp
iret
cmp
add
movs
sbb
add
jns
repz
out
repnz
test
out
dec
movs
sub
add
sbb
out
add
pop
out
out
(bad)
out
mov
les
or
mov
clc
mov
inc
or
or
out
(bad)
stc
enter
add
jo
cmp
add
lods
fist
loop
pop
xor
add
sbb
es
rcr
add
ja
out
xchg
add
rcr
test
add
int
lahf
fmul
or
outs
add
popf
xor
es
ret
push
mov
pop
add
pop
jbe
out
out
(bad)
add
mov
movs
out
cmp
push
dec
test
add
retf
out
inc
jns
es
add
mov
cmp
add
xchg
mov
add
mov
clc
add
out
or
adc
cmp
out
fs
pop
pop
lds
or
in
test
es
fwait
cmp
cmp
push
bound
dec
es
or
and
jg
es
pop
add
cmp
add
jno
cmc
out
add
mov
scas
scas
adc
xchg
mov
mov
int3
ss
(bad)
es
rcl
fisttp
in
js
push
xchg
es
and
adc
repz
fnsave
add
or
es
or
js
push
pop
out
neg
pop
movs
(bad)
pop
out
fdiv
cmp
cmp
pop
sub
add
cmp
clc
mov
aas
add
outs
outs
sbb
jg
jno
inc
pop
jb
cs
xchg
add
shl
sub
jmp
(bad)
shl
jecxz
push
push
push
cmp
push
mov
pop
jnp
lods
pop
pop
mov
out
pusha
xor
or
adc
sub
add
sbb
les
pusha
out
jge
xchg
add
(bad)
psraw
pop
sar
add
fist
mov
fimul
add
push
imul
mov
add
lods
inc
out
aam
daa
add
mov
cdq
push
push
add
out
(bad)
mov
dec
icebp
out
nop
sub
pop
push
push
lea
popf
and
mov
jo
shl
ffreep
shr
shl
mov
out
cmp
xor
add
xchg
jnp
pop
fistp
add
enter
out
cmp
int3
int3
add
cmp
push
es
cs
cld
cld
(bad)
bnd
sbb
xchg
test
cmp
mov
out
js
je
jmp
mov
mov
rol
and
fld
xchg
jnp
jno
dec
jmp
enter
es
imul
pop
dec
dec
aad
mov
lea
add
mov
test
sbb
es
adc
std
es
sahf
dec
dec
fstp
lock
and
pop
pop
shl
out
adc
retf
mov
aad
sbb
or
cmp
lods
out
pushf
inc
inc
and
and
mov
inc
cmp
inc
add
es
cmp
fucomp
pop
cmps
mov
push
add
fist
xor
jl
add
call
dec
sahf
add
jb
movs
cmps
mov
add
xor
aaa
or
es
sbb
mov
add
imul
sti
xchg
pop
es
push
mov
add
stc
mov
and
jge
mov
or
cmp
mov
movs
in
jecxz
xor
lods
lods
stc
jo
out
iret
inc
lock
jnp
cdq
inc
inc
nop
inc
push
es
je
or
scas
scas
add
in
adc
sub
test
jnp
es
retf
inc
ret
add
push
daa
mov
cmp
dec
push
out
xchg
pusha
mov
mov
jns
xor
push
inc
push
push
push
and
out
inc
xchg
push
add
imul
cs
add
out
in
outs
(bad)
(bad)
call
lods
cwde
push
mov
out
jne
pop
vpunpckhqdq
jnp
sbb
leave
or
xor
das
xor
cli
adc
scas
cmp
push
mov
mov
lock
out
rol
or
pop
in
sub
add
xor
in
mov
pop
or
shr
out
js
es
icebp
add
out
jg
adc
add
out
add
es
data16
xchg
repnz
(bad)
out
in
leave
pop
pop
add
out
cmp
xchg
fldcw
cmp
fwait
arpl
out
es
jle
enter
rcl
out
jecxz
jne
add
gs
inc
mov
mov
clc
mov
sub
xor
test
and
(bad)
adc
es
mov
and
add
es
movs
push
adc
test
lods
add
lock
add
add
mov
hlt
pusha
pusha
data16
lods
add
add
in
add
cld
test
es
sbb
inc
nop
es
inc
xchg
xchg
gs
add
or
mov
icebp
iret
add
cmp
push
sbb
bound
out
mov
hlt
adc
out
ja
pop
jle
mov
aad
or
daa
mov
nop
inc
movs
ins
ins
lds
ds
es
sbb
and
popa
popa
jg
sub
fucom
adc
mov
cwde
cwde
paddd
mov
out
addr16
scas
scas
(bad)
popf
xor
movs
add
push
pop
pop
xchg
cdq
xchg
out
fcom
sti
aad
mov
cdq
out
imul
mov
js
ds
mov
add
retf
movs
leave
ja
add
jl
push
loop
into
jnp
popa
add
mov
mov
lods
add
movs
(bad)
cs
fcmovu
jg
inc
sbb
out
inc
and
call
add
lods
shr
es
add
xchg
adc
add
inc
push
add
out
add
lock
repz
sahf
add
out
clc
out
sbb
(bad)
jb
and
repnz
mul
out
add
jp
scas
xchg
ret
out
dec
add
iret
ss
pop
pop
stc
(bad)
loopne
cmp
push
jmp
das
call
fmul
arpl
ss
sub
xor
inc
add
out
pop
xchg
push
or
out
adc
dec
es
out
es
jl
mov
repz
sbb
mov
retf
retf
sbb
retf
in
xor
out
mov
fstp
and
cmp
add
sub
aad
mov
(bad)
pusha
out
sbb
dec
sbb
es
sbb
pop
lahf
add
inc
inc
jle
mov
xlat
loop
mov
sbb
in
neg
pop
cwde
mov
into
in
es
stos
adc
dec
fmul
or
and
dec
aas
aas
and
out
adc
sub
stc
stc
int3
pusha
or
add
das
and
es
mov
idiv
es
(bad)
sti
add
nop
cs
mov
mov
(bad)
iret
pextrw
add
loopne
jo
retf
adc
nop
mov
imul
jb
loop
lea
lods
xlat
add
inc
or
jle
xchg
out
outs
out
pop
mov
xor
add
pop
xchg
rcl
loope
in
sub
add
out
push
mov
push
push
loopne
jno
inc
add
lds
out
sbb
(bad)
in
repz
add
mov
xchg
shl
push
loope
bound
cmp
adc
iret
iret
in
cwde
out
add
cli
xchg
rcr
mov
pop
inc
test
push
push
dec
sbb
mov
inc
cmps
add
push
mov
add
out
add
icebp
jne
mov
fiadd
jle
sbb
ins
adc
dec
enter
cwde
sbb
test
add
out
add
retf
lods
cmc
nop
out
add
int3
cs
cmp
sar
(bad)
mov
nop
je
loopne
push
call
out
mov
inc
adc
daa
inc
(bad)
out
mul
push
ins
out
add
jb
out
jg
shl
adc
add
mov
jmp
pop
int
push
and
jle
dec
dec
mov
fbld
pushf
add
lods
lods
mov
popf
cmp
stos
pop
scas
out
div
sti
mov
mov
retf
mov
add
jg
mov
scas
test
sar
out
lmsw
jmp
out
rol
scas
loopne
push
xor
call
out
out
mov
cld
cwde
sub
xor
mov
inc
xchg
adc
cld
cmp
pop
out
sti
dec
punpcklbw
jmp
add
jg
xor
mov
add
icebp
cmp
jnp
cli
cli
xlat
jmp
out
scas
or
es
out
push
xchg
mov
call
jecxz
(bad)
out
stos
imul
out
out
rol
add
pop
mov
es
jmp
or
scas
shl
test
cmp
clc
aas
leave
add
and
mov
aad
fild
out
jge
cmp
das
das
inc
sahf
lgs
and
movs
sub
loopne
add
push
dec
mov
inc
mov
out
repz
jnp
and
aas
lea
mov
out
les
jmp
sahf
mov
push
js
sub
out
push
repz
cld
cld
jmp
int3
aad
vpaddusw
out
out
dec
es
sub
pop
es
add
inc
inc
sub
es
ficomp
pop
arpl
out
jp
jge
inc
mov
(bad)
movs
mov
adc
add
add
push
mov
scas
sbb
fadd
out
add
es
dec
xor
repnz
push
loope
add
mov
fs
sbb
push
es
dec
jp
add
movs
fwait
and
and
sahf
cli
pop
pop
jecxz
push
out
in
sbb
std
mov
dec
es
nop
mov
jo
test
push
dec
sub
out
inc
rol
es
mov
add
or
add
fist
jge
out
cmps
pop
cmp
add
pop
(bad)
(bad)
(bad)
cli
add
nop
pop
stos
sbb
mov
rcl
cmp
mov
and
in
in
ja
add
pop
jns
lods
out
push
pop
inc
add
(bad)
(bad)
jns
ds
adc
xadd
push
es
push
test
fsubr
cwde
cwde
scas
ret
shl
repnz
sbb
add
dec
sbb
adc
mov
lock
mov
sub
loop
es
bound
push
push
push
xlat
daa
(bad)
dec
dec
mov
jecxz
mov
pop
pop
mov
dec
inc
es
push
sbb
jnp
mov
out
pop
dec
mov
add
sub
pushf
addr16
out
rol
outs
outs
jmp
popa
out
add
add
rcr
xchg
rol
sbb
add
out
sub
cmp
not
mov
jmp
icebp
jae
jne
xor
add
out
(bad)
adc
pop
out
int3
sub
adc
add
push
lods
mov
jl
out
cmp
adc
mov
mov
test
(bad)
xchg
xchg
in
or
std
add
es
(bad)
push
mov
es
and
pop
pop
mov
sar
out
adc
dec
repz
out
add
and
(bad)
dec
std
cmp
push
inc
inc
sbb
test
adc
or
inc
mov
xor
loopne
ja
call
push
nop
cs
div
test
jmp
adc
add
mov
mov
stos
xchg
add
cmp
jg
xchg
fcomp
inc
lods
es
call
cld
cld
addr16
ret
push
es
pop
js
mov
push
mov
cmp
les
out
outs
test
sub
hlt
add
div
out
pop
jecxz
cmp
js
add
es
push
loope
hlt
mov
mov
xchg
add
sbb
push
push
pop
test
es
pop
pop
mov
out
cmps
push
rcl
add
dec
dec
mov
fucom
loop
jbe
add
mov
xchg
(bad)
cmp
push
push
and
or
aam
dec
jne
movs
out
fimul
es
pusha
lods
jb
add
or
dec
fwait
add
in
lods
ins
icebp
out
pop
and
(bad)
cmp
push
mov
sub
jecxz
fs
add
and
hlt
mov
jg
js
push
jge
add
cwde
lock
retf
lahf
sub
es
test
or
adc
out
or
cmp
addr16
cmp
sbb
xor
adc
out
loopne
jg
es
stos
lods
push
imul
cmp
loope
mov
fstp
je
pop
iret
iret
jno
xchg
out
dec
mov
xchg
xchg
cdq
(bad)
out
adc
les
retf
aam
mov
jp
sbb
add
xor
repnz
sub
shl
sbb
mov
and
mov
and
out
pop
push
push
out
(bad)
sub
es
test
cwde
sbb
add
sbb
cld
dec
add
mov
in
dec
inc
inc
test
jbe
adc
sbb
pop
push
inc
out
xor
jo
adc
outs
out
jns
jmp
dec
mov
cmp
daa
jbe
mov
cli
test
out
inc
jmp
add
add
or
jbe
sar
add
repnz
out
push
imul
test
movs
(bad)
out
outs
mov
es
les
arpl
(bad)
pop
push
out
dec
rcr
xchg
retf
add
ds
rcl
stos
push
cmp
out
jl
cld
xor
rcr
mov
pusha
out
xchg
adc
inc
out
add
mov
into
fimul
ins
lods
lods
aad
loope
jmp
push
clc
es
fs
inc
inc
mov
retf
es
daa
ins
or
or
add
sbb
mov
out
pop
jle
add
neg
leave
adc
fld
es
mov
add
pop
pop
inc
inc
out
cdq
push
jp
sbb
mov
out
stos
dec
jnp
fiadd
adc
not
cld
add
movs
rcl
xchg
jns
nop
out
(bad)
ins
es
fcomp
jle
scas
scas
add
or
add
push
or
mov
dec
ins
mov
bound
mov
inc
inc
push
add
mov
imul
add
cmp
das
out
dec
imul
adc
mov
out
xchg
push
stos
js
mov
fstp
out
(bad)
pop
call
or
loopne
and
(bad)
xchg
call
repz
mov
xor
mov
push
in
mov
add
jnp
not
add
out
push
dec
es
add
cmp
mov
lock
add
or
into
iret
cmp
ja
add
push
cmp
cli
pop
mov
add
out
adc
dec
add
inc
or
xchg
push
push
arpl
enter
and
bt
scas
or
call
adc
adc
out
cs
dec
es
gs
jle
js
aad
out
fcmovb
add
and
and
es
lds
jecxz
add
add
lods
mov
and
mov
add
ds
popf
push
dec
mov
add
pushf
out
and
or
add
add
rol
call
add
xchg
es
mov
add
aaa
aaa
push
mul
out
jge
jle
jbe
xchg
inc
out
xor
es
out
es
inc
test
adc
push
out
push
cld
add
js
shl
sbb
scas
or
or
jo
sbb
mov
push
movs
fsub
cld
add
call
es
sbb
pop
lock
add
sar
ficomp
jb
add
or
add
push
xor
loope
cwde
rcl
add
jecxz
jb
scas
mov
jge
pop
jo
test
inc
xchg
xor
pusha
shl
adc
out
dec
icebp
aad
rcl
push
fiadd
out
inc
xlat
in
es
add
es
jno
adc
add
pop
pop
xchg
int3
cmp
and
mov
int
loopne
out
pop
sbb
fsub
push
rcl
cmp
add
mov
mov
out
addr16
movs
arpl
push
stos
stos
daa
(bad)
inc
xchg
xor
outs
ins
js
ds
and
es
addr16
cmps
push
pop
clc
es
dec
pusha
rcl
push
add
cmp
sbb
mov
leave
aas
mov
out
sti
sti
jmp
mov
test
mul
(bad)
cmp
pop
add
xchg
out
cld
ror
sar
jmp
imul
sub
rcl
push
push
adc
pusha
fldcw
das
dec
dec
scas
or
adc
nop
dec
inc
out
add
es
cmc
in
xlat
pop
jns
es
mov
jno
add
(bad)
jle
push
xchg
xchg
add
sub
jns
stos
loop
inc
mov
push
nop
cmps
out
xchg
in
xchg
es
push
jo
outs
sbb
xor
mov
or
test
daa
in
jbe
es
sti
lods
add
idiv
and
mov
out
add
fadd
sub
out
sbb
add
or
es
xchg
push
mov
xchg
mov
mov
pop
imul
ret
or
pop
push
shl
jmp
jl
pop
push
push
add
stos
adc
and
mov
fld
add
and
xchg
out
repz
add
mov
inc
hlt
xchg
clc
out
add
popa
popa
or
lock
sbb
xor
or
add
mov
jne
loopne
out
xchg
es
std
xor
mul
shr
fs
out
(bad)
mov
data16
mov
daa
mov
nop
jge
out
bnd
jmp
(bad)
out
int
loopne
imul
(bad)
and
movs
movs
leave
and
ret
movs
into
into
push
push
int3
out
pop
add
jmp
popa
add
call
dec
ins
into
scas
add
ror
fsub
mov
cmps
dec
dec
mov
add
cmp
add
inc
outs
rol
shl
out
pushf
cmps
add
out
xchg
stc
ret
es
stos
jmp
loope
cld
xchg
xchg
add
gs
leave
daa
add
hlt
sub
mov
and
fist
fprem
xchg
push
push
inc
xor
jge
add
out
lock
adc
in
add
stc
and
adc
in
add
out
rcl
test
mov
push
cmp
mov
push
xchg
into
add
inc
cmp
lea
stos
inc
enter
loopne
pop
jb
sbb
add
cmp
add
daa
mov
outs
test
dec
aam
sub
pop
int
add
movs
es
es
adc
stc
inc
adc
or
sbb
push
out
xor
add
or
push
sbb
cwde
mov
movs
xor
xchg
add
fcmovb
push
pop
add
or
cmps
ret
cmp
push
push
ds
and
stos
imul
sub
add
adc
test
out
daa
dec
mov
gs
(bad)
jg
jmp
popf
mov
punpckhbw
add
cmp
lods
out
inc
sub
call
int3
cmp
inc
inc
sub
sbb
mov
ret
cmp
sbb
mov
dec
dec
std
fild
out
dec
or
nop
nop
inc
int
out
lods
sub
icebp
clc
inc
add
sahf
cmps
inc
pop
es
mov
sbb
sti
rcl
xor
out
sub
js
or
dec
inc
inc
inc
or
outs
es
push
jmp
xchg
test
fucom
sbb
lods
add
out
mov
and
out
mov
div
rcr
xchg
out
pop
clc
jno
cvttps2pi
mov
es
(bad)
shl
add
push
mov
pop
out
add
mov
into
xor
mov
test
out
mov
jg
(bad)
push
push
push
out
outs
xor
and
ja
mov
arpl
out
add
cmp
dec
mov
es
mov
je
mov
pop
xchg
imul
add
mov
test
jno
(bad)
sysret
adc
(bad)
retf
loop
out
mov
lods
pop
mov
aad
fcomip
(bad)
in
push
push
add
out
xchg
in
data16
add
out
int
ret
mov
in
add
sbb
dec
es
add
dec
dec
mov
sub
repnz
cdq
imul
fcomp
sub
(bad)
out
push
daa
jle
and
push
or
jecxz
pushf
out
fldcw
inc
(bad)
ss
add
xor
sbb
sub
add
ret
jae
outs
outs
jae
add
mov
jo
cmc
(bad)
hlt
hlt
test
mov
push
mov
ja
out
mov
sub
iret
lea
jmp
std
or
loopne
scas
pop
es
lods
fs
mov
sub
cmp
pop
jne
int
fnstcw
cmp
inc
inc
outs
inc
ret
retf
add
jns
push
shl
into
into
add
jge
es
stos
out
jecxz
and
pop
adc
out
out
xor
add
aad
sub
es
mov
and
clc
lock
mul
push
add
push
push
push
push
push
fadd
mov
inc
inc
es
add
daa
daa
cli
inc
xor
ds
clc
and
(bad)
in
add
or
push
push
push
xchg
mov
es
sub
push
jmp
out
add
loope
push
jae
dec
out
lahf
add
cmp
ins
test
ret
add
mov
jno
imul
cmps
jb
fnsave
pop
test
outs
rol
jnp
mov
nop
lods
or
es
add
outs
adc
aam
jle
mov
xlat
je
add
xchg
shl
scas
es
adc
mov
cmps
or
icebp
add
pop
xor
imul
es
add
or
aas
dec
iret
mov
out
in
in
add
loop
pop
pop
test
push
leave
pop
pop
jmp
retf
adc
(bad)
pop
mov
jo
pop
rol
xchg
out
xor
lds
push
add
das
les
test
xor
pop
xor
xchg
es
mov
push
imul
out
test
dec
add
daa
daa
inc
pop
adc
gs
fcomp
dec
aad
mov
out
xchg
sbb
inc
dec
(bad)
or
out
mov
in
and
repnz
push
push
out
dec
add
call
fist
adc
outs
mov
adc
jnp
hlt
jbe
out
adc
cs
lahf
pop
stos
es
add
pop
ror
es
push
pop
xor
gs
sbb
out
jnp
xchg
es
inc
mov
loopne
inc
add
out
pop
shl
mov
push
out
jae
sub
fwait
pop
add
jo
or
es
mov
jg
add
out
es
jle
test
out
add
inc
inc
adc
out
pop
jae
es
inc
sub
(bad)
les
add
inc
pop
es
aas
mov
lods
ror
out
leave
mov
test
xor
xor
add
xlat
mov
sbb
add
lods
xor
inc
add
repz
and
sbb
jge
sbb
enter
es
mov
in
or
test
jg
std
es
jbe
lahf
push
push
add
movs
add
out
stos
pop
fsub
and
and
xchg
sub
and
fidivr
out
adc
mov
or
jg
xchg
xor
inc
or
hlt
mov
scas
(bad)
bswap
add
push
movs
bound
add
arpl
xor
xor
out
add
xchg
es
shl
mov
sbb
bnd
cmp
mov
sub
push
cld
adc
add
lock
adc
jmp
pop
pop
outs
gs
ja
xchg
mov
sub
jmp
icebp
cmp
in
loopne
push
sub
sbb
rol
out
pop
sub
inc
inc
mov
ret
mov
fld
sahf
adc
out
out
shl
cld
cld
outs
pop
test
adc
sub
mov
mov
add
adc
bndldx
pop
js
(bad)
les
(bad)
xchg
es
jb
jecxz
ss
cmps
cmps
cmp
(bad)
out
sbb
lods
mov
mov
pushf
add
std
out
(bad)
sbb
ret
loopne
add
stos
mov
sub
xchg
out
shl
es
loope
dec
out
out
add
cwde
out
fadd
jbe
pop
movs
repz
in
mov
rol
mov
out
sbb
es
cmp
mov
scas
add
repz
adc
adc
jmp
rol
jns
es
dec
cmp
loopne
pop
xchg
div
rcl
out
jle
arpl
add
ins
xchg
mov
pop
add
add
mov
movntq
cdq
sub
push
xchg
out
mov
enter
rol
xor
popf
fidiv
test
pop
xchg
es
mov
(bad)
inc
or
adc
jge
cmp
jg
cli
add
rol
cmc
cmc
das
mov
es
sbb
push
add
out
retf
sub
dec
dec
add
outs
push
jmp
pusha
pusha
imul
jecxz
out
mov
add
in
mov
lods
push
dec
dec
jae
add
movs
add
scas
out
add
dec
cmps
cmps
movs
cs
out
retf
xlat
xlat
mov
popaw
add
jle
and
push
sbb
add
xor
or
xor
cmp
xchg
shl
mov
push
lods
xchg
pop
inc
inc
scas
clc
ret
out
add
sbb
arpl
sub
out
mov
add
imul
ficom
sbb
mov
add
dec
dec
js
and
cld
movs
push
mov
in
jno
push
mov
dec
shl
sbb
sbb
out
push
and
es
and
(bad)
jnp
push
out
rol
add
sbb
push
push
add
inc
inc
pop
jne
out
sbb
xor
add
shl
jbe
add
es
cwde
dec
jmp
add
inc
clc
jnp
add
es
dec
add
in
pop
pop
loope
stos
out
fild
inc
gs
cdq
or
mov
push
mov
outs
call
xchg
sub
dec
icebp
sbb
cmp
int3
add
outs
sbb
jmp
std
pusha
push
add
ins
or
(bad)
call
fucom
in
clc
aad
call
xchg
inc
jno
cmp
push
add
adc
outs
jnp
and
add
fwait
mov
dec
sbb
adc
jmp
dec
arpl
lock
js
cmps
ss
push
mov
es
gs
rcr
rcr
movs
test
cli
lods
mul
mov
mov
add
cmc
cmc
mov
mov
dec
xor
fld
outs
out
lahf
retf
out
pop
pop
fwait
out
push
jne
es
shl
jns
pop
in
sbb
inc
add
xor
sbb
pop
pop
mov
loopne
loopne
clc
dec
push
jp
lea
loope
dec
dec
test
mov
jo
popa
pop
test
out
mov
jns
xchg
add
out
push
mov
cmp
cmp
(bad)
add
mov
out
xor
retf
out
sub
(bad)
out
and
mul
jne
mov
rol
aam
adc
mov
push
mov
cmp
and
pop
movs
es
pop
add
es
pusha
sahf
(bad)
xchg
add
dec
jmp
sub
jo
cmp
loope
out
aad
jne
mov
(bad)
sub
ds
ret
adc
xor
out
add
ins
fxch
out
and
mov
shl
dec
jb
out
jge
aas
ins
rcl
jbe
mov
(bad)
out
fisubr
outs
outs
jp
adc
into
adc
jnp
enter
add
cmp
or
xlat
or
add
jo
push
push
call
dec
out
jb
add
jl
lock
push
push
xor
cmp
fsub
jno
sub
movs
movs
adc
out
sbb
add
out
cmp
xor
add
cld
adc
pop
es
loopne
add
out
popa
std
out
add
es
push
(bad)
add
sub
adc
sbb
cli
pop
addr16
imul
es
mov
jle
mov
mov
in
in
loope
adc
nop
div
les
out
in
enter
mov
inc
add
int3
pop
pop
push
push
mov
inc
icebp
icebp
xlat
rcl
dec
mov
cld
mov
mov
jl
dec
add
(bad)
(bad)
push
add
out
push
dec
lock
out
adc
jecxz
add
xor
(bad)
mov
call
xchg
out
or
pop
es
jg
dec
add
jbe
jnp
out
and
cmps
das
rcl
popa
pop
movups
je
inc
out
mov
sub
xchg
rol
sbb
jmp
mov
int3
inc
adc
(bad)
les
or
and
(bad)
cld
rcr
out
fmul
ja
fiadd
adc
pop
ror
je
clc
add
push
xchg
xor
cld
rol
sbb
ds
inc
add
out
xor
or
add
mov
clc
out
dec
dec
enter
pop
add
and
xchg
mov
mov
cli
dec
dec
test
mov
leave
fcmove
add
es
arpl
sbb
pop
pop
mov
(bad)
in
push
es
push
shl
jmp
mov
scas
dec
shr
cmp
push
es
sbb
rol
cli
inc
es
or
test
out
pop
pushf
inc
es
ret
add
jbe
mov
arpl
push
push
out
icebp
stos
(bad)
mov
out
inc
cmp
xchg
xchg
(bad)
mov
mov
in
sub
jmp
leave
add
addr16
mov
stos
out
dec
iret
jo
add
push
cmps
cmps
xor
mov
pop
out
pop
push
loope
add
lods
lock
fs
repz
out
inc
(bad)
fbld
nop
aaa
cmc
mov
adc
cmps
adc
pop
mov
sbb
and
pop
xor
(bad)
fdivr
mov
nop
xor
aas
add
clc
cwde
pop
es
add
and
fistp
pop
out
adc
sub
add
ret
mov
add
mov
iret
pop
popa
popa
add
out
jmp
js
test
int3
cmp
push
add
es
jle
add
movs
xlat
xor
popa
popa
test
es
stos
add
js
sub
add
lds
xor
mov
addr16
jmp
dec
in
lock
mov
das
sahf
gs
add
cld
add
xchg
je
push
popa
popa
adc
jbe
out
stos
push
out
xor
lds
jmp
sbb
mov
mov
mov
or
(bad)
or
faddp
dec
clc
clc
ret
out
add
jae
out
xchg
adc
or
push
outs
push
out
xlat
add
mov
mov
repnz
pop
or
es
xor
lock
dec
pop
pop
es
sub
sbb
xor
aaa
xchg
adc
adc
dec
out
fs
out
pop
pop
jecxz
out
jae
mov
aaa
out
add
dec
xchg
cld
push
add
cmps
push
xchg
push
out
ret
or
cmp
(bad)
neg
out
or
sbb
add
mov
in
add
repnz
es
mov
loopne
enter
pop
out
jl
in
cmp
and
mov
or
call
lds
add
ins
cmp
imul
jne
dec
jmp
jge
or
es
xor
add
repnz
adc
mov
cmp
jmp
add
pop
fwait
es
ds
(bad)
(bad)
jp
jge
mov
repz
jg
in
(bad)
mov
cs
mov
push
push
(bad)
cmp
out
fiadd
repnz
into
jg
add
retf
stc
mov
and
out
mov
es
test
cmp
mov
mov
add
in
sub
das
inc
ret
jmp
sub
add
dec
dec
cmp
push
pushf
add
std
adc
call
push
jnp
sbb
rol
test
adc
mov
cmp
nop
repnz
in
push
cmps
bound
add
sub
frstor
cld
fs
add
shl
pop
pop
mov
sbb
adc
movs
jbe
ror
xor
popf
popf
add
out
cmp
ins
cmp
or
inc
into
shl
or
adc
adc
out
lock
mov
cmp
fwait
loope
pop
jnp
iret
add
in
dec
es
pop
or
add
dec
add
jns
fld
add
mov
adc
add
and
std
std
or
adc
mov
inc
stc
pop
push
(bad)
add
test
jmp
test
es
sub
lds
add
pop
jg
inc
(bad)
adc
pop
jbe
add
(bad)
fistp
jp
out
fsub
pop
in
in
shl
cli
add
pop
mov
cld
xchg
jbe
add
cs
mov
out
inc
add
repz
or
shl
dec
cwde
add
out
jae
stc
add
jne
outs
out
xchg
jecxz
stos
stos
ds
xchg
cmp
ins
aam
push
add
xchg
lods
lods
push
push
sbb
fld
pop
dec
jb
scas
pusha
fs
stos
add
pfpnacc
aad
inc
xchg
add
mov
mov
sub
add
retf
push
push
das
pop
xor
dec
add
popa
out
stc
add
and
lock
dec
out
movs
lods
sbb
cmp
add
pushf
fsub
bound
inc
add
mov
jno
ins
jo
pop
add
and
mov
out
out
daa
sbb
lock
add
add
lahf
mov
rol
push
add
mov
inc
aas
cld
add
out
repnz
xchg
es
xor
cmp
test
mov
sbb
jnp
mov
add
es
add
icebp
dec
lea
inc
repnz
ins
ins
dec
pushf
inc
out
rol
pop
mov
out
and
xlat
ja
pop
or
add
push
cmc
out
adc
es
add
mov
daa
mov
out
push
or
jbe
retf
pop
loope
das
xlat
add
mov
mov
es
pop
stos
loopne
jae
push
push
addr16
outs
shl
jmp
add
lods
push
retf
add
and
test
in
add
pop
jle
cli
mov
retf
scas
ins
out
push
mov
inc
out
xor
and
push
ss
es
movs
aam
(bad)
in
mov
into
cwde
pushf
pushf
pop
sub
jnp
in
outs
adc
outs
and
dec
es
inc
mov
mov
push
gs
nop
scas
cmp
cdq
add
clc
leave
pop
stos
out
add
fsub
mov
bound
loop
xlat
es
pop
ss
jmp
pop
iret
jae
test
push
in
add
(bad)
and
loop
and
fadd
mov
xchg
test
add
mov
xchg
fmul
pop
jo
sbb
das
inc
jecxz
je
mov
jg
add
jmp
xor
lods
clc
bound
call
pop
add
stos
add
jb
shl
aaa
jbe
mov
add
clc
mov
push
out
in
(bad)
jo
xor
add
sub
(bad)
and
jnp
cmc
cmp
add
or
(bad)
jns
out
enter
in
test
out
in
in
mov
inc
dec
rcr
add
push
out
or
push
fimul
movd
lock
js
outs
mov
imul
xchg
sbb
cli
out
cmp
jb
test
jp
add
out
out
inc
es
imul
es
pop
out
cmp
movs
inc
dec
pop
pop
fld
push
out
push
je
add
inc
dec
add
stos
sbb
es
pop
lock
es
xor
dec
loope
cs
pusha
scas
cmp
out
xchg
and
es
jnp
jl
es
in
ins
mov
out
mov
jne
lods
out
add
mov
daa
retf
mov
enter
add
jbe
jmp
aaa
push
jno
addr16
pop
es
cmc
retf
retf
sub
scas
sbb
cmps
rcl
add
fiadd
add
aad
cwde
dec
push
push
repz
out
add
or
out
cmc
inc
xchg
es
push
test
sbb
out
adc
(bad)
out
sub
fyl2xp1
stc
add
in
sti
push
add
rol
shl
add
cmp
cmp
add
jo
or
or
test
add
mov
(bad)
out
mov
out
lea
mov
(bad)
cmps
jmp
add
dec
adc
pushf
push
cli
fwait
es
push
outs
fidivr
mov
add
mov
rcr
(bad)
(bad)
sbb
add
cwde
xchg
xchg
ins
cwde
pop
push
push
mov
and
mov
pusha
cwde
cmc
sub
mov
arpl
ins
ins
mov
fdiv
add
aaa
aaa
mov
inc
stc
add
outs
ss
add
and
add
clc
jns
mov
retf
in
sub
out
push
loope
pushf
pushf
test
mov
clc
xor
or
out
jecxz
pop
shl
div
and
pop
in
arpl
and
nop
es
add
cmp
lahf
clc
shl
out
xor
cmps
es
dec
add
es
dec
inc
add
mov
xlat
sub
dec
add
es
ret
mov
sub
hlt
mov
inc
inc
nop
mov
pop
add
out
call
stos
jo
out
hlt
adc
sub
daa
mov
ror
cmc
bound
out
push
ja
add
fisubr
popf
es
add
xor
(bad)
lods
cmps
retf
pop
js
sub
pop
out
adc
or
minps
out
jp
add
add
inc
add
ds
test
pop
adc
jo
cli
cli
movs
cmp
es
pusha
jl
xor
add
test
add
(bad)
out
cli
mov
add
add
xchg
scas
add
push
mov
mov
iret
xlat
add
dec
in
es
(bad)
fucomip
mov
pop
add
es
ds
lds
adc
jmp
es
mov
fld
add
bnd
lock
enter
sub
jg
push
mov
inc
out
sub
pop
pop
iret
rol
out
je
mov
leave
nop
cmp
cwde
cwde
test
and
and
pop
(bad)
ror
mov
out
push
and
es
inc
or
in
in
mov
pop
mov
add
mov
xchg
add
fsub
add
fwait
and
(bad)
sbb
out
push
call
or
adc
cwde
(bad)
fbstp
scas
fcomp
sahf
call
test
dec
pusha
rcl
mov
(bad)
das
das
xor
push
out
(bad)
fsub
es
pop
sbb
add
neg
jne
and
sub
xor
and
lods
xor
mov
rcl
pop
jle
out
xchg
add
mov
fcmovu
cmp
sub
shr
pop
ins
es
int
sbb
jl
mov
mov
mov
or
add
sbb
dec
test
or
les
stc
xchg
dec
cli
cli
jmp
popa
sbb
mov
out
sub
sub
mov
xor
inc
inc
ins
push
jge
out
dec
mov
jbe
out
inc
retf
add
mov
enter
mov
js
add
sub
es
add
sbb
add
js
dec
repz
add
push
xchg
clc
inc
push
push
mov
int3
out
stc
add
es
mov
(bad)
fcomip
jae
ret
add
pop
pop
push
or
pop
mov
cmp
repnz
xchg
mov
push
jo
es
adc
dec
cmp
mov
ret
pop
sub
dec
add
and
and
add
or
pushaw
cmps
lods
lock
or
xor
fiadd
dec
out
push
loopne
mov
add
xchg
out
int
mov
pop
out
adc
aad
test
into
out
je
loope
pop
int
popf
out
push
pop
add
jne
fs
mov
push
cmp
cmp
sti
and
mov
jbe
add
jmp
sub
add
fwait
push
je
add
dec
out
adc
add
ret
cs
jmp
add
push
out
xchg
out
cmp
pop
(bad)
out
ja
(bad)
jl
neg
addr16
xchg
and
loop
(bad)
sbb
add
jae
pop
sbb
sub
out
jbe
test
mov
loop
mov
add
dec
js
(bad)
lock
cmp
std
xchg
mov
mov
stos
es
xor
cld
ins
ins
ss
out
mov
push
add
push
jle
mov
mov
(bad)
cmp
es
js
xor
add
out
out
mov
scas
es
mov
xchg
xchg
adc
push
push
mov
int3
add
ret
aad
pop
pop
and
out
and
add
lock
or
xor
out
dec
xchg
mov
jns
push
push
jne
sti
pushf
pushf
repnz
shl
arpl
cmp
fs
es
adc
rol
in
sbb
retf
add
leave
loope
fs
mov
cmp
push
add
shl
inc
add
inc
scas
scas
fdivr
push
or
faddp
dec
cmc
es
cmp
fld
add
sub
xchg
bound
add
arpl
jg
or
fwait
lds
scas
add
es
test
repz
push
add
mov
add
es
cld
mov
push
add
sbb
cmc
cdq
and
add
fld
aam
outs
hlt
push
add
imul
sti
jb
inc
mov
out
push
inc
out
sbb
jo
test
jae
retf
xchg
es
mov
(bad)
cdq
add
jno
aas
jmp
out
adc
out
adc
into
out
xchg
cdq
bound
out
add
cmps
cmps
repnz
inc
out
stos
sti
inc
mov
cmp
jl
es
lods
add
es
loopne
mov
jle
add
in
int
add
out
imul
dec
xchg
xchg
and
out
inc
add
xchg
jbe
push
es
and
enter
popa
es
xor
push
jge
lods
pop
adc
push
push
mov
icebp
add
mov
test
push
out
out
int3
movs
mul
mov
cmp
push
fsubr
and
push
es
sub
dec
jge
jne
es
in
les
aas
pop
and
retf
add
outs
mov
jmp
loope
add
and
jnp
add
pop
add
ss
or
test
add
es
pop
shl
es
xchg
cmps
and
es
pop
or
push
out
jae
cwde
add
lahf
xchg
lods
popf
popf
add
mov
add
imul
out
out
pop
pop
es
sbb
add
stc
push
xor
adc
es
je
loopne
ins
cmpxchg
add
mov
ds
into
pop
sub
inc
out
movs
ins
xchg
loopne
add
out
bnd
mov
out
push
fist
xchg
test
mov
out
sbb
cli
and
add
mov
(bad)
sti
and
mov
mov
jb
add
es
xor
mov
xor
test
jg
mov
cmp
in
lods
lods
or
addr16
mov
cmp
out
fnsave
iret
inc
out
lds
add
inc
mov
mov
or
mov
cmp
or
pop
loope
xor
mov
cli
sub
imul
cmps
fimul
call
rcr
in
in
add
inc
out
fisub
es
loopne
sbb
pop
pop
sbb
call
scas
sti
cld
lock
imul
out
call
cmp
(bad)
mov
les
out
fisttp
mov
add
sbb
fimul
in
dec
xchg
adc
add
fisttp
out
dec
mov
es
mov
cmp
movs
add
pop
addr16
xchg
icebp
add
stos
call
mov
cmp
add
or
not
jg
add
in
stc
imul
add
repnz
and
mov
loope
cs
es
sbb
adc
sbb
dec
dec
adc
pop
es
add
adc
xchg
out
cmp
(bad)
jmp
je
cmp
pusha
push
es
neg
add
or
add
out
cdq
in
hlt
add
sbb
sbb
nop
(bad)
fwait
mov
clc
out
(bad)
dec
frstor
xor
mov
les
xchg
mov
mov
nop
loopne
lods
es
fbstp
pop
push
push
(bad)
es
int3
js
add
out
add
sub
test
lds
pop
es
fild
aam
es
shl
mov
dec
add
sbb
pop
push
nop
stos
es
mov
stos
sahf
sahf
inc
dec
out
(bad)
(bad)
xchg
xchg
inc
arpl
out
pop
push
mov
ja
loopne
mov
add
cmp
sub
stc
mul
out
jge
push
out
into
xchg
in
loopne
enter
int3
jl
cmp
mov
sbb
sub
push
shl
scas
or
sub
or
add
sub
ret
add
(bad)
ss
pop
(bad)
(bad)
add
mov
adc
leave
out
es
xor
add
js
mov
int3
out
sahf
add
sub
out
repnz
jg
add
into
fiadd
cwde
add
test
and
xchg
sub
mov
out
div
mov
mov
add
pop
add
and
jle
add
push
call
es
bound
stos
mov
nop
nop
cmp
mov
imul
scas
popa
popa
lock
into
es
or
mov
(bad)
mov
mov
out
add
push
es
ret
dec
dec
sti
and
fldcw
or
and
push
push
push
iret
push
xchg
jmp
push
or
add
jmp
aad
ins
add
xchg
out
repz
pop
pop
stos
add
jae
pop
jmp
dec
add
add
test
aam
and
inc
sbb
stc
mov
mov
es
adc
test
data16
add
(bad)
cli
cli
sbb
add
es
scas
aam
push
push
arpl
xor
(bad)
out
add
cld
les
add
sti
fcomp
call
add
into
into
and
popa
dec
dec
dec
adc
push
mov
push
push
cli
(bad)
(bad)
add
add
sbb
add
push
push
mul
out
iret
pop
jb
call
dec
push
push
jmp
in
ror
es
inc
push
cmps
icebp
sub
pop
and
add
call
mov
push
test
out
sar
pop
pop
fisubr
sub
sbb
mov
push
out
xor
lahf
es
cli
rol
ret
dec
mov
mov
add
dec
es
clc
mov
fwait
and
sub
scas
out
jmp
(bad)
(bad)
(bad)
xor
call
sbb
shl
mov
xor
int3
jg
int3
add
sbb
xchg
push
out
and
jo
sub
sub
dec
es
pop
movs
inc
ret
ret
mov
data16
mov
or
sahf
add
push
cdq
push
loopne
lea
sar
out
test
cld
push
push
fwait
mov
out
push
push
inc
es
mov
cmp
mov
mov
cmc
xor
and
xchg
add
add
mov
add
es
(bad)
retf
add
add
loopne
push
jmp
adc
jge
xchg
out
pop
add
ins
ins
call
add
pop
bound
(bad)
(bad)
cmp
(bad)
dec
dec
pop
fld
add
sub
sbb
es
pop
test
pop
sti
push
out
rol
mov
add
lea
add
rcl
push
add
pop
xor
(bad)
pop
mov
jl
out
mov
mov
cmp
mov
sbb
shl
(bad)
and
nop
out
add
or
out
inc
ins
addr16
mov
mov
repz
es
mov
mov
xchg
ss
add
movs
aad
popa
xor
test
add
cmp
push
add
aaa
jecxz
xchg
add
sub
pop
std
mov
adc
(bad)
pop
jmp
es
cmp
je
add
pop
aaa
imul
add
xlat
jmp
sub
mov
imul
es
push
(bad)
mov
mov
xor
sar
es
jmp
es
repz
in
push
inc
mov
ret
out
loopne
push
aam
enter
add
inc
push
out
add
jmp
pop
xor
sbb
add
cmps
cmp
sbb
out
es
mov
add
es
add
cdq
sbb
test
pop
add
daa
and
out
shl
ja
jle
pusha
mov
addr16
or
scas
xchg
add
or
es
mov
stos
fnstsw
sbb
mov
push
push
in
dec
dec
sbb
push
push
inc
leave
pop
xchg
es
es
rol
rol
std
push
dec
dec
int3
add
cld
cmps
fwait
jb
sti
add
rol
mov
out
sub
add
add
push
arpl
loop
mov
add
mov
jae
mov
(bad)
mov
es
or
or
mov
outs
mov
add
movs
out
ins
push
es
inc
add
in
mov
je
repz
sbb
es
es
loopne
jb
aas
add
and
rcr
movs
push
add
gs
es
and
pfcmpgt
dec
icebp
out
and
cmp
pop
rcl
scas
mov
es
jb
jmp
popf
rcr
push
cwde
mov
out
xchg
fcomp
adc
jae
add
add
pop
jo
(bad)
add
ds
push
push
pushf
pop
pop
out
mov
(bad)
mov
out
cmp
add
fcomp
xor
ins
loop
fs
out
pop
inc
pushf
pushf
jb
add
cmp
arpl
aad
nop
es
lea
cmps
xchg
xchg
jmp
dec
out
out
add
add
out
inc
add
sbb
clc
or
add
push
movs
push
out
ret
aas
aas
ret
imul
test
adc
lods
pop
gs
(bad)
dec
inc
inc
cmp
into
xchg
pop
xchg
es
or
loopne
sub
es
add
cmp
or
or
(bad)
out
add
das
movs
movs
mov
jmp
ins
jnp
or
enter
dec
add
jns
mov
mov
ret
jmp
inc
(bad)
cmc
out
int
(bad)
sbb
add
int3
es
add
cmps
xchg
es
push
daa
jmp
les
and
fwait
push
push
loopne
dec
out
mov
cwde
mov
out
xlat
add
mov
frstor
str
into
jne
pause
add
adc
lfs
xchg
xchg
ficomp
out
xor
add
adc
enter
xchg
jbe
mul
push
icebp
mov
test
aaa
aaa
add
es
and
xor
mov
and
out
or
mov
adc
mov
js
ja
mov
mov
jmp
add
push
cli
(bad)
add
(bad)
mov
xchg
mov
outs
sbb
es
sbb
push
push
sub
jle
add
add
inc
arpl
pop
pop
pop
jnp
out
cmp
cld
es
cwde
jmp
pop
ds
mov
mov
xor
xchg
(bad)
fwait
cmp
or
out
or
cmp
rol
shl
add
push
inc
and
add
add
pop
mov
mov
sub
scas
push
cmp
pop
pop
cmp
es
(bad)
arpl
mov
push
sbb
add
sub
push
pop
jg
pop
pop
test
push
add
adc
adc
call
sbb
jmp
dec
addr16
add
out
ror
ja
imul
retf
mov
inc
out
xchg
add
sbb
jo
rcr
add
outs
outs
mov
fiadd
or
sbb
pusha
push
add
movs
gs
lock
call
and
xchg
sbb
cmp
enter
add
pop
pop
mov
fiadd
xor
es
cmp
repz
js
or
mov
xor
test
cli
bnd
in
xchg
js
sbb
jns
sti
pop
lods
push
out
cmc
xchg
shl
or
outs
popf
popf
sbb
out
mov
add
sbb
(bad)
aas
iret
ror
mov
jmp
mov
enter
in
sub
das
bound
in
adc
and
hlt
cld
add
pop
lods
test
loopne
sbb
out
sub
ret
jge
cmp
push
out
call
mov
fbld
add
add
(bad)
push
fiadd
imul
jbe
xchg
xchg
and
sbb
and
sbb
add
mov
fsub
das
out
jae
mov
fild
xchg
out
out
shl
jb
add
sti
es
xor
push
push
push
outs
mov
inc
inc
jbe
mov
aas
es
pop
and
push
push
pushf
int3
add
cs
ja
nop
nop
sbb
add
mov
fistp
add
loopne
or
mov
xchg
hlt
clc
out
int3
sbb
inc
sub
and
adc
and
out
fs
fsub
lods
mov
es
(bad)
out
push
jecxz
pop
mov
es
arpl
ret
cmp
add
dec
and
leave
leave
test
or
pop
es
xor
fld
add
scas
call
lahf
lahf
lods
loop
out
int3
(bad)
shl
stos
and
add
es
push
sub
push
jmp
and
loopne
cmp
call
out
fbld
es
ret
cmp
aaa
mov
arpl
add
cli
dec
data16
add
clc
stc
lahf
add
(bad)
cmp
in
add
das
push
jmp
pop
daa
outs
scas
(bad)
pop
out
cwde
fdiv
pop
int
adc
sbb
xchg
es
imul
inc
clc
jmp
jge
adc
out
rcl
mov
out
sub
mov
add
jae
push
movsx
add
mov
add
cmc
pop
xor
jbe
mov
movs
iret
ja
push
push
scas
in
es
test
or
pop
jae
cwde
sar
dec
dec
inc
pop
gs
inc
fs
out
ret
and
adc
add
dec
das
das
jmp
fwait
out
add
and
cmp
mov
mov
push
add
fadd
loope
mov
or
es
fdivp
lods
lods
ret
es
add
sub
(bad)
out
out
and
cld
out
shl
xchg
sub
(bad)
push
sbb
out
add
daa
out
mov
inc
cmp
out
(bad)
stos
lds
nop
dec
mov
shl
inc
jl
cmc
cmc
aaa
and
mov
sti
sub
add
sahf
sahf
mov
sub
out
enter
add
mov
inc
or
add
sub
aad
cmp
add
push
ret
ret
call
xor
es
add
inc
scas
scas
out
iret
inc
es
ins
pop
mov
xchg
mov
imul
(bad)
aam
cmp
add
ss
les
push
and
aad
sbb
es
dec
mov
cld
es
sbb
stc
les
pop
and
xor
into
add
es
mov
cmp
(bad)
loop
sub
jns
sti
push
add
mov
fnstcw
ins
inc
out
inc
fwait
retf
push
and
jnp
mov
out
into
xor
arpl
mov
cs
mov
aad
loopne
pop
and
add
ret
out
add
cwde
imul
push
or
add
push
jnp
out
push
and
pop
pop
dec
add
adc
fld
add
bound
popf
cdq
cmp
pop
and
jno
retf
out
inc
push
aam
xor
mov
xchg
xlat
shl
mov
xor
mov
add
out
aaa
xchg
out
in
data16
sti
sti
push
mov
ins
jl
push
push
xor
and
fldcw
out
shl
cli
push
push
add
lock
cwde
mov
stos
(bad)
add
test
and
dec
ret
xor
mov
leave
add
neg
sub
es
popa
pop
aam
or
add
ins
out
(bad)
imul
nop
cmp
add
scas
out
sbb
es
stc
out
add
fwait
out
fidiv
sar
dec
jmp
out
add
mov
add
lahf
lahf
sbb
pop
out
dec
pop
jp
xor
mov
mov
es
inc
ror
fild
xchg
xchg
in
in
pop
dec
loopne
lods
aam
in
retf
daa
lods
lods
call
sub
fwait
inc
ss
cmp
and
ret
pushf
lock
add
mul
call
push
in
movs
mov
iret
add
rol
inc
sbb
sbb
add
mov
mov
inc
out
xor
push
sub
not
(bad)
add
out
mov
data16
loop
(bad)
daa
sub
mov
cmp
xlat
xor
es
fs
add
ds
push
mov
adc
jecxz
jmp
dec
shr
out
add
std
(bad)
mul
out
sub
ins
mov
gs
sbb
xchg
add
sub
cld
out
out
scas
mov
iret
(bad)
retf
call
add
cs
fwait
out
mov
(bad)
adc
push
mov
jmp
pop
and
fbld
outs
pop
adc
xor
js
leave
pop
daa
(bad)
stc
adc
xchg
lahf
lahf
mov
outs
add
sti
add
out
jmp
in
push
add
add
push
dec
mov
jns
out
inc
add
jmp
push
retf
cli
push
es
frstor
mov
es
add
movs
pslld
mov
out
out
imul
mov
add
dec
jmp
into
fstp
call
imul
arpl
jne
out
jb
rcl
inc
sbb
out
pop
jge
mov
aas
push
pusha
out
mov
xor
mov
mov
es
nop
lock
or
retf
shr
push
xchg
arpl
(bad)
out
es
stos
sti
es
wrmsr
adc
mov
out
pop
js
jl
sub
mov
add
sbb
add
push
es
ror
jns
and
outs
or
je
jp
add
cwde
(bad)
push
nop
add
rcr
fldenv
cmp
pop
cmps
jp
out
es
adc
add
imul
mov
out
bound
mov
and
es
pop
shl
add
es
mov
add
jo
sub
sub
sbb
imul
in
and
leave
(bad)
sub
adc
add
out
enter
aad
inc
mov
lahf
es
jmp
xor
or
adc
inc
scas
mov
es
popa
xchg
data16
stos
and
add
in
push
out
jmp
jmp
sbb
(bad)
fmul
add
adc
repnz
ret
add
mov
clc
clc
test
push
es
inc
dec
das
loop
outs
cmp
es
xlat
in
add
das
xchg
mov
outs
out
jo
ror
or
pusha
mov
out
or
retf
stos
rcl
add
in
es
dec
(bad)
sbb
es
std
rol
inc
mov
repnz
lea
es
mov
mov
jnp
xchg
es
cmp
retf
add
out
jb
scas
test
(bad)
clc
add
mov
add
sub
sbb
aaa
sahf
js
mov
mov
out
adc
sar
xchg
add
inc
aam
cli
cli
xor
dec
es
push
mov
inc
xor
clc
mov
mov
inc
inc
out
daa
jge
or
push
jmp
out
ror
jl
movs
loopne
out
sub
das
call
es
add
outs
xchg
out
frstor
mov
enter
xor
in
push
push
and
add
scas
jmp
fiadd
repz
mov
sub
add
out
popf
in
es
push
(bad)
add
bound
cmp
xchg
add
addr16
xchg
mov
ins
add
js
push
pop
movs
fldenv
dec
popa
clc
lea
add
pop
pop
cmp
mov
and
mov
fisttp
fisub
add
cmp
stos
stos
add
fsub
mov
jae
mov
xor
add
mov
es
in
mov
stos
stos
cli
add
es
sti
push
outs
push
push
xchg
jmp
lock
aaa
out
gs
hlt
js
ja
pop
adc
out
adc
repnz
xchg
rol
sahf
xor
pop
add
out
in
mov
pop
iret
sub
inc
add
es
hlt
xchg
sub
mov
addps
cwde
push
out
in
push
cmp
fxch
fmul
add
and
xor
add
mov
add
lods
out
push
cmps
add
out
pushf
shl
jge
add
inc
mov
adc
push
pop
pop
aam
dec
mov
out
lock
inc
out
mov
add
enter
adc
add
mov
add
jg
mov
and
icebp
mov
sbb
stos
add
lods
test
out
arpl
mov
es
outs
cmp
add
jae
pop
out
fmulp
mov
repnz
sub
pop
es
adc
nop
test
add
rol
loop
ja
mov
inc
lods
es
call
and
dec
xchg
xchg
jp
sbb
ss
adc
rcl
ret
pop
dec
mov
es
mov
lods
xchg
jg
retf
add
movs
dec
test
inc
adc
and
out
nop
jmp
jns
out
cmp
jbe
in
push
out
pushf
add
jecxz
gs
inc
inc
outs
sysret
add
xor
shl
jo
fistp
xor
jnp
cld
jnp
mov
lea
xchg
das
das
add
popa
ins
ins
xchg
out
int3
in
cli
add
mov
imul
es
add
pop
xor
dec
ret
in
inc
and
loopne
or
add
push
mov
pop
enter
arpl
sub
test
xchg
and
push
cmp
jae
jo
fwait
fwait
pop
outs
ret
out
inc
jno
add
out
loope
out
fmul
mov
cmp
iret
daa
dec
push
push
and
ss
adc
(bad)
es
fwait
arpl
or
shl
fsub
out
jp
add
in
mov
add
into
cwde
or
dec
fbld
jg
add
iret
es
(bad)
out
invlpg
lea
mov
jl
add
scas
and
outs
jae
add
cmp
adc
xor
fdivp
xchg
out
push
out
es
daa
jecxz
add
gs
pop
mov
cld
out
adc
jp
retf
fucom
mov
ins
cmp
dec
add
and
aam
repz
ss
in
es
(bad)
(bad)
es
loopne
sbb
add
arpl
and
or
enter
les
mov
add
jl
hlt
vcvttsd2si
pop
pop
pop
daa
adc
xchg
add
push
jmp
div
add
fldenv
inc
or
pushf
push
push
mov
cmp
adc
es
xchg
lock
movs
movs
ror
sub
movs
add
enter
data16
cs
cmps
inc
push
add
pop
loope
push
mov
int
out
rcl
xor
xchg
inc
out
or
fild
pop
leave
sub
pop
(bad)
mov
pop
pop
pop
adc
mov
shl
cs
add
sti
adc
pusha
fsubr
(bad)
xchg
jmp
es
(bad)
outs
imul
xchg
add
pop
dec
es
or
push
push
xchg
mov
mov
add
out
adc
aas
or
push
pop
stc
out
mov
mov
ss
repnz
add
dec
mov
sbb
cdq
sbb
add
mov
pop
pop
pop
stos
add
rol
jecxz
out
add
repnz
sub
add
mov
push
cmps
out
jne
repnz
or
rcl
add
int3
ja
es
hlt
add
sar
out
es
add
adc
sbb
adc
inc
and
imul
mov
add
sub
aas
pushf
lods
ret
add
fsub
jo
mov
add
out
or
loopne
cmp
push
or
and
pop
pushf
jns
pop
xchg
jmp
es
outs
add
bound
retf
add
iret
lock
mov
inc
sbb
jmp
retf
sbb
pop
rol
es
mov
call
pop
pop
add
and
popf
es
mov
sbb
sub
ret
or
hlt
xor
into
enter
mov
fiadd
add
hlt
hlt
das
lds
sti
pop
add
loope
cdq
pop
mov
xor
scas
scas
je
adc
cmp
ficom
jb
test
pop
push
in
xlat
fadd
and
push
mov
pushw
add
and
push
add
es
and
sub
sub
popf
jae
(bad)
out
add
mov
shr
ins
jmp
inc
int3
out
jnp
pop
shr
movhps
jmp
add
push
jne
jnp
out
arpl
es
enter
ins
add
rol
clc
and
adc
fwait
adc
jb
lahf
cs
loop
or
or
ins
(bad)
out
(bad)
repz
stos
inc
arpl
loope
sub
ds
and
mov
or
movs
lea
es
out
out
cld
mov
mov
add
sbb
imul
add
pusha
dec
dec
fild
jne
xor
mov
es
xchg
loopne
stos
stos
sbb
mov
stc
xchg
add
pop
add
add
out
in
add
or
fcom
lahf
pop
in
sbb
sub
xor
cmp
hlt
add
lds
add
out
lock
enter
cs
cmp
cmp
and
das
inc
in
jb
xor
out
add
cmp
xor
jae
dec
add
out
aaa
je
out
loop
add
xor
sti
shl
inc
out
pop
add
cld
and
popa
in
je
dec
dec
add
xor
xor
out
pop
imul
out
adc
es
test
stos
ror
stc
es
push
dec
ffreep
(bad)
sti
and
fdivr
dec
dec
popa
or
pusha
pusha
and
mov
inc
(bad)
lahf
lods
jns
push
mov
adc
das
xchg
add
into
pop
jg
xor
cmps
cmp
sub
ds
xor
int
call
xchg
aas
add
sub
adc
rol
in
add
cli
es
pop
pop
pop
jmp
outs
out
cmp
retf
retf
clc
xor
out
cdq
aaa
les
out
shl
stos
dec
out
add
mov
sahf
icebp
icebp
jno
and
out
inc
retf
stc
jnp
cmc
dec
dec
popf
test
cwde
cwde
dec
pop
pop
out
or
push
es
dec
(bad)
add
or
cld
stc
aam
push
inc
cmp
in
add
jb
mov
jo
cmp
inc
inc
movs
push
mov
adc
adc
cwde
out
or
fisub
dec
jl
push
mov
sahf
jbe
mov
cmp
adc
and
mov
lahf
es
mov
cmp
out
sub
xchg
ins
in
popf
popf
cmp
ds
cmp
or
and
fldcw
add
mov
ror
mov
ret
sti
and
leave
add
mov
data16
idiv
rcl
adc
cmp
sbb
mov
out
add
stc
stc
inc
cmp
out
pop
add
test
push
fsub
add
and
lea
pop
lds
push
add
mov
icebp
push
dec
mov
add
inc
out
mul
shl
sti
inc
add
add
lods
mov
add
sahf
es
jp
sub
cdq
jo
cld
cld
jnp
out
cmps
mov
es
add
lock
out
aas
push
mov
xor
test
out
xchg
mov
es
mov
jp
enter
add
pop
jle
sbb
add
rol
enter
and
add
pop
daa
aad
dec
fcmovnbe
out
add
(bad)
inc
lds
out
lods
call
sub
or
push
push
es
repz
adc
sbb
push
mov
push
push
shl
xchg
xchg
loopne
out
xor
xchg
rcl
sti
push
sahf
sahf
lods
sbb
out
test
mov
xor
(bad)
inc
and
sbb
scas
sahf
cdq
fsub
push
push
add
xchg
es
ja
(bad)
add
loop
jg
test
es
mov
dec
dec
call
in
adc
lock
and
out
cmp
es
and
aaa
aaa
cdq
mov
xchg
lahf
(bad)
setae
add
retf
pop
cmp
test
in
rol
repz
test
add
retf
out
pop
loopne
es
xor
add
in
aam
int
test
retf
scas
inc
add
dec
dec
sub
sbb
xchg
add
test
pusha
sbb
aad
add
mov
xor
fmul
sbb
clc
lea
fwait
inc
rol
out
inc
dec
lods
xchg
xchg
and
out
cmp
test
pushf
pushf
jo
mul
jb
lahf
(bad)
xor
cmp
out
or
add
scas
neg
cmps
cmps
pop
xchg
pop
out
sbb
es
enter
popf
sub
mov
push
inc
mov
xor
push
out
xchg
jl
add
es
adc
add
adc
dec
retf
out
out
add
mov
cmp
adc
ret
out
jne
outs
mov
out
xor
add
push
push
(bad)
pushf
jnp
xchg
xlat
popa
sub
les
jp
rol
cmp
sub
mov
push
lea
repnz
pop
mov
adc
jbe
add
xor
push
push
aas
std
add
push
xor
pop
and
out
pop
aas
add
fdivr
out
fs
add
ds
inc
es
dec
rcl
dec
pushf
push
pop
pop
dec
adc
out
into
jo
addr16
mov
out
les
xchg
in
inc
add
pop
pop
cmc
xchg
test
jbe
mov
movs
movs
outs
sub
push
push
in
mov
mov
add
mov
mov
test
and
jg
out
sub
jmp
test
mov
dec
pop
test
lock
in
loope
clc
cmps
sbb
sub
out
test
daa
daa
(bad)
int
out
add
test
pandn
es
push
pop
adc
pop
xor
cwde
out
imul
xchg
je
mov
movs
adc
jmp
ins
loopne
fsubp
loopne
out
xchg
sbb
sahf
jne
sti
loope
cmps
int
add
fnsave
je
add
cmp
cmp
lea
lods
lods
pop
inc
lock
inc
pop
idiv
out
add
es
stos
popa
mov
pop
pop
mov
cmp
add
add
das
out
popa
and
xchg
push
cdq
inc
fisub
add
imul
es
add
in
cmp
adc
movs
jns
add
retf
jmp
sbb
add
sub
adc
jmp
add
sar
mov
jnp
or
hlt
hlt
stc
repz
add
outs
es
out
pop
retf
add
es
std
push
outs
stc
stc
lds
or
mov
xchg
es
ret
cmps
es
in
jle
xchg
xchg
mov
int3
dec
pop
pop
xlat
jmp
out
outs
out
fisttp
aam
and
mov
add
and
push
dec
pusha
test
add
lods
add
xor
mov
out
jp
sbb
out
xchg
mov
adc
out
push
push
clc
es
div
hlt
adc
(bad)
add
cwde
(bad)
call
cmp
mov
out
and
aas
aas
les
adc
mov
inc
inc
xlat
and
jp
sbb
shl
scas
mov
sbb
es
es
inc
psrlq
cdq
cdq
pop
jl
es
sbb
push
push
jbe
ins
add
(bad)
dec
jge
es
and
jae
add
int
add
cmp
retf
imul
add
sbb
out
rol
es
rol
ins
sbb
push
xor
out
or
push
push
push
pop
sahf
xchg
push
push
and
xor
sub
out
(bad)
jmp
add
fst
mov
mov
aad
jno
xchg
pop
jmp
inc
mov
mov
fs
push
push
out
cmp
call
mov
or
mov
cld
inc
int3
add
mov
xchg
retf
cdq
jne
addr16
aam
add
pop
push
shl
cmp
mov
adc
add
dec
xor
dec
es
ss
sbb
sbb
cwde
cwde
cmc
xchg
add
push
push
addr16
jmp
dec
add
fwait
inc
shl
mov
inc
mov
jbe
out
mov
add
out
scas
fcom
push
add
sbb
popa
push
add
es
retf
add
ret
mov
pop
pop
lahf
cmp
out
out
adc
pop
out
cmp
es
cmp
inc
(bad)
jl
xlat
es
push
pop
mov
es
add
inc
inc
shl
out
sbb
es
fld
mov
aam
dec
mov
test
inc
inc
pop
or
out
and
imul
pop
es
xor
hlt
test
dec
out
jo
mov
loop
sbb
or
rol
jge
out
push
add
stc
push
mov
cmp
dec
dec
mov
xor
add
enter
inc
es
jbe
xchg
jp
add
xor
daa
shl
and
cmp
mov
jg
bound
jle
xlat
loopne
adc
inc
rcr
mov
aad
ins
stos
out
rol
jbe
cwde
lods
xor
es
add
movs
add
push
out
and
(bad)
mov
(bad)
stc
ins
mov
out
xchg
jb
(bad)
out
add
adc
jecxz
es
xor
es
addr16
rol
xchg
mov
or
fadd
mov
pop
mov
stos
and
sbb
cmp
or
cmp
push
popa
in
test
into
add
out
rcr
inc
inc
jbe
add
dec
loopne
mov
sbb
cdq
and
push
dec
dec
add
jbe
loopne
vpsraw
es
pop
cli
cld
add
repz
fsubr
out
enter
dec
pushf
pushf
add
out
ds
adc
mov
inc
add
setl
std
ds
add
shl
xlat
jbe
adc
ins
setnp
ja
mov
adc
fisttp
xor
das
(bad)
es
push
adc
adc
sahf
cmp
out
mov
outs
add
xchg
out
inc
es
fcmovne
add
popf
mov
clc
pop
out
add
hlt
es
aaa
and
or
in
add
scas
dec
inc
(bad)
popa
and
add
sub
mov
add
cdq
lahf
out
mov
and
pop
and
fwait
cmp
and
push
adc
out
sbb
call
mov
pop
xchg
push
es
arpl
fsub
retf
mov
test
cmp
std
out
clc
cdq
add
out
jp
mov
jae
dec
(bad)
in
push
push
add
popa
out
mov
sub
or
es
(bad)
mov
inc
add
sbb
in
repz
lahf
adc
add
cli
loope
out
push
mov
mov
jp
sahf
add
push
push
leave
mov
fcom
dec
dec
add
es
jle
aad
pusha
pop
jg
rol
shl
imul
les
out
inc
or
in
mov
enter
jl
xor
aad
pop
pop
stc
push
and
outs
cmp
loop
rol
add
mov
sub
ja
out
popa
pop
mov
pop
xchg
fdivrp
xor
mov
or
push
es
adc
sbb
(bad)
mov
out
jle
inc
or
push
add
out
idiv
es
das
xor
cmp
lock
xchg
xchg
stos
xor
out
adc
sub
out
add
icebp
pop
pop
push
loop
out
js
shl
mov
cmp
call
ins
(bad)
shl
shl
mov
stc
repnz
jne
add
scas
fwait
dec
es
popf
add
fld
jae
jmp
add
out
movs
rcl
es
adc
dec
es
and
mov
fnstcw
inc
inc
xor
in
inc
ins
aam
es
add
shl
inc
imul
mov
push
out
pop
add
loop
or
js
jno
cmc
mov
out
outs
inc
clc
add
fcmove
cmp
xchg
dec
adc
aad
rol
cdq
out
pop
pop
shl
xchg
jne
pusha
pusha
mov
pop
imul
push
loopne
daa
out
add
arpl
xor
mov
icebp
out
inc
(bad)
mov
add
aaa
pop
add
es
xchg
fstp
es
icebp
pop
or
add
sbb
out
pop
add
lods
push
push
out
ss
adc
popf
mov
std
cmp
lds
sar
dec
shl
jmp
push
push
add
add
adc
cmp
add
in
mov
jmp
or
es
xor
mov
test
mov
and
mov
push
mov
add
stc
push
cmp
rol
ror
aaa
add
and
mov
pop
shr
pusha
es
fsubr
mov
push
push
(bad)
jle
out
xchg
inc
mov
add
addr16
pop
pop
add
cmp
je
ins
aas
or
fsub
xor
sub
push
push
in
mov
add
pushf
pushf
or
push
jnp
pop
sub
push
push
xor
out
pop
call
cmp
jge
fstp
aas
add
add
das
dec
dec
jmp
and
sbb
mov
mov
popa
sbb
out
je
mov
jmp
arpl
outs
pop
(bad)
es
jne
cmp
push
rcr
inc
add
lea
mov
adc
add
sub
(bad)
add
mov
sbb
cmp
shl
popa
inc
pop
out
std
cmp
in
aad
or
pop
out
mov
pop
xor
(bad)
(bad)
aad
popf
add
es
xor
out
jne
mov
jns
movs
push
inc
inc
mov
push
out
mov
xchg
add
jae
add
cmps
scas
and
loope
repnz
pop
jecxz
enter
inc
inc
daa
pushf
xchg
out
mov
jne
aas
fcmovu
add
inc
adc
mov
out
test
sbb
out
rol
and
add
xchg
out
mov
add
mov
adc
jmp
inc
(bad)
xor
jnp
add
lahf
lahf
mov
mov
out
jl
nop
es
mov
jmp
out
mul
scas
icebp
out
dec
jg
lea
mov
mov
pop
loope
test
adc
xor
movs
xor
adc
and
and
call
loopne
aaa
bound
aas
fist
push
ror
pusha
test
out
add
cwde
mov
adc
shl
cmps
movs
add
adc
pop
mov
repnz
pop
int
out
(bad)
pushf
lock
push
add
pop
imul
rcl
add
(bad)
repz
inc
add
or
ss
mov
add
das
push
scas
sbb
clc
add
pusha
cmp
call
fimul
pop
cmp
out
add
imul
int3
movs
xlat
out
add
and
fidiv
add
mov
sbb
stos
int
shl
sbb
adc
sub
sub
xor
setns
out
xor
mov
and
out
shl
jns
xchg
add
mov
add
call
enter
adc
add
cmp
inc
es
adc
pop
pop
jb
add
ror
pop
inc
les
es
fadd
sub
inc
and
add
pusha
imul
add
and
push
test
imul
mov
out
xor
add
pop
std
mul
out
ret
test
push
push
stos
add
and
or
mov
(bad)
js
push
(bad)
mov
xchg
(bad)
cmps
push
add
adc
hlt
shl
pcmpeqd
xor
jg
mov
xchg
pushf
adc
inc
test
popa
and
cmp
out
sbb
fidivr
cmp
add
out
idiv
add
and
inc
mov
fnsave
jne
hlt
push
es
or
inc
inc
xchg
in
fiadd
add
xlat
sbb
int3
pop
pop
add
data16
test
out
jp
mov
(bad)
out
add
and
mov
push
ins
cld
cld
push
int
out
pop
sbb
es
dec
add
bound
or
popa
fsubr
out
add
(bad)
and
sti
out
lock
sahf
es
pop
mov
(bad)
clc
in
dec
es
outs
add
xor
ds
test
out
or
mov
lods
test
mov
sub
pop
xor
repz
addr16
repnz
cmp
std
add
out
or
cmp
sub
xchg
es
lds
adc
add
jnp
in
test
jp
ja
rol
loope
retf
pop
jb
inc
jmp
aam
es
add
arpl
push
test
out
adc
mov
add
es
pop
cmp
es
in
out
sub
mov
mul
in
test
out
dec
xchg
push
ss
shl
out
loop
xor
pop
lock
out
add
pop
test
out
pop
repnz
sbb
out
adc
add
add
cmps
in
push
out
sti
add
cmp
push
jno
push
add
mov
out
jns
retf
cld
test
out
popa
ja
es
add
inc
inc
adc
cmps
clc
ret
ins
add
es
addr16
dec
adc
in
mov
es
pop
cld
xchg
xchg
popa
std
iret
add
push
mov
out
sti
add
into
out
stc
and
es
inc
dec
and
fcmovnu
mov
popf
pop
test
cli
cli
paddd
out
nop
ret
push
mov
test
dec
gs
add
pop
add
sub
mov
mov
es
and
ror
popa
add
popw
dec
push
push
add
xchg
pop
es
fiadd
pop
add
ja
sti
mov
pop
jp
out
add
div
out
in
arpl
pcmpeqw
mov
mov
sub
dec
xchg
call
pop
es
cld
imul
inc
es
inc
sub
add
movs
leave
push
push
add
and
add
mov
out
mov
add
sub
fsub
loopne
adc
sbb
jg
add
sti
push
xor
pop
fwait
and
mov
cdq
xor
mov
add
aas
cmovb
test
(bad)
push
shl
add
out
add
fwait
push
push
in
lods
out
aas
add
es
mov
add
add
fs
out
dec
pop
push
add
inc
adc
cs
add
outs
fdivr
call
add
push
(bad)
jo
inc
int
add
outs
outs
mov
adc
mov
cli
out
fidivr
stc
out
sub
repnz
out
xchg
test
out
add
les
push
ds
mov
add
lea
lods
mov
mov
add
lds
in
mov
inc
or
add
xchg
movs
jmp
add
out
xchg
add
dec
dec
loope
sbb
ror
imul
movs
add
fistp
je
pop
shl
add
mov
test
jp
adc
push
push
stc
scas
push
out
les
add
pop
sbb
outs
outs
or
add
gs
movs
and
jmp
add
out
std
add
jmp
out
mov
sub
fiadd
rol
and
in
pushf
jg
call
inc
cli
mov
push
mov
add
(bad)
es
mov
add
es
xchg
outs
adc
mov
call
lds
add
mov
out
push
xchg
stos
stos
add
call
lods
in
test
jno
cmp
es
or
(bad)
xlat
push
fisubr
or
pop
out
ret
call
out
pop
add
es
packsswb
mov
test
add
sub
adc
xor
es
sub
cmp
es
int
loop
es
jo
nop
nop
out
or
add
mov
es
loopne
add
mul
pop
jmp
out
pop
cwde
enter
aas
and
sbb
pop
(bad)
loop
daa
sar
add
adc
pop
jl
sbb
sub
add
xlat
in
jo
push
jmp
fsubr
dec
dec
mov
xchg
into
add
xlat
clc
dec
loope
ins
pop
(bad)
sahf
sahf
xchg
(bad)
sub
in
retf
out
dec
and
es
test
mov
inc
popf
out
out
and
in
xor
dec
stos
retf
loop
mov
out
xchg
hlt
push
cmps
cmps
add
sub
and
mov
sub
push
push
push
shl
add
and
or
sbb
scas
and
cld
cmp
add
sbb
add
cmp
in
pop
sti
cs
jge
adc
cwde
into
out
push
add
imul
leave
out
mov
sbb
shl
add
das
clc
mov
movs
pop
out
and
int
js
fs
cld
cld
shl
out
add
les
in
jg
stc
dec
dec
and
loop
push
inc
push
int3
int3
pop
push
out
sar
es
into
add
(bad)
enter
sub
test
rcl
movs
add
aad
lock
out
lods
jbe
vpaddusw
out
ret
mov
cmp
add
and
out
add
iret
loope
push
sub
ins
push
push
fcmove
add
pop
fcom
es
fnstsw
dec
fcom
es
fistp
inc
inc
sbb
and
or
add
(bad)
jnp
ss
or
add
mov
and
mov
ret
sbb
dec
dec
add
and
iret
std
cli
aad
and
je
jmp
mov
mov
lods
dec
add
jo
mov
mov
xor
sbb
xor
jl
add
xor
sbb
and
mov
out
aam
repnz
dec
pop
jg
sub
xor
push
inc
inc
inc
mov
xor
mov
add
outs
cmps
jp
xor
dec
rol
shr
out
lods
nop
call
add
adc
or
imul
ss
add
xchg
add
jmp
mov
imul
int3
inc
inc
jns
add
or
pop
es
and
add
pusha
mov
iret
add
jecxz
in
jge
gs
add
int
jbe
ret
lds
cli
ds
aad
fdivr
add
mov
push
add
xchg
out
outs
add
xchg
lock
add
xchg
inc
xor
hlt
fwait
mov
out
push
popa
stos
mov
out
sbb
mov
and
xchg
xchg
cmc
push
jge
enter
(bad)
(bad)
popa
ror
imul
ja
popf
mov
arpl
mov
fwait
adc
pop
aas
aas
jmp
add
cmc
inc
mov
rcr
push
push
sub
or
xchg
add
mov
pop
es
lock
ret
dec
add
sbb
sub
cmp
es
rol
xlat
fild
add
cmc
lods
mov
es
bound
inc
mov
fidivr
retf
xchg
xchg
xor
ret
ds
pusha
xor
es
dec
lock
jl
stos
aas
ja
jmp
loopne
or
rcr
es
add
dec
or
fild
add
imul
(bad)
aad
inc
sub
ret
test
mov
(bad)
out
add
or
adc
dec
je
add
fld
push
add
push
adc
xchg
pop
pop
dec
loop
es
ins
add
push
push
sar
icebp
cmp
sub
push
push
xchg
xchg
inc
push
out
mov
shl
dec
jno
out
sub
mov
enter
push
fmul
push
jnp
add
or
add
mov
(bad)
out
mov
imul
ins
ins
add
pop
es
pop
or
movs
add
daa
lock
int
cwde
dec
mov
rcl
es
out
xlat
hlt
jl
cmp
loop
xchg
into
into
mov
mov
add
cmp
out
cli
jge
jnp
mov
pop
shl
push
imul
out
add
es
sub
mov
push
push
scas
push
jno
xchg
sbb
pop
adc
cmp
adc
xor
pop
fwait
dec
cs
ror
sbb
es
call
das
ins
sbb
std
in
je
add
pop
and
inc
lea
out
movs
add
xor
mov
cmp
nop
repnz
dec
es
jno
(bad)
psrld
es
inc
call
and
loopne
in
cwde
mov
inc
and
aam
rep
jb
es
adc
xor
add
cdq
lock
lahf
mov
es
mov
sub
out
rcr
fsub
lods
es
sbb
int
cwde
ds
test
xor
icebp
mov
mov
add
pop
adc
es
mov
jno
out
lahf
mov
xor
cmp
xchg
adc
add
or
push
out
add
pop
gs
test
stos
pop
rol
add
lods
(bad)
jbe
add
out
jo
add
and
mov
ins
out
fcmovu
popa
xor
push
test
fistp
out
mov
enter
or
jns
scas
add
xor
retf
cli
jbe
add
test
enter
out
call
mov
arpl
(bad)
es
and
jns
xchg
into
retf
pusha
pusha
popa
in
(bad)
test
stc
mov
out
or
dec
es
loopne
mov
leave
idiv
es
add
ret
xchg
mov
daa
loope
sbb
add
ret
xchg
outs
(bad)
ret
jge
xlat
sar
cmp
into
stos
push
icebp
add
cmps
out
xchg
ficomp
jp
add
test
mov
out
cmp
xor
out
cmc
es
mov
dec
sti
add
out
imul
es
je
add
es
in
add
xor
int
sbb
smsw
lock
es
and
dec
xchg
jb
jo
inc
inc
cdq
push
retf
xchg
mov
add
idiv
dec
sub
clc
outs
outs
pop
mov
out
inc
shl
xor
cmp
or
mov
frstor
xchg
mov
popa
and
inc
out
sbb
mov
rcl
lea
cmp
push
std
mov
mov
loopne
aam
add
out
js
ds
es
jo
push
and
sar
add
or
dec
scas
es
inc
lock
inc
inc
cmp
mov
pop
mov
add
mov
call
mov
pop
jge
and
sbb
add
fisttp
sub
mov
xchg
add
icebp
jae
mov
out
add
rcr
aaa
lea
or
or
mov
add
call
out
and
mov
add
xchg
or
es
or
cmps
mov
sbb
(bad)
inc
inc
fs
aam
push
mov
add
xchg
pop
xor
mov
xor
mov
inc
add
imul
lods
mov
out
cwde
dec
add
mov
sub
in
mov
sub
jne
cmp
adc
cwde
test
fld
rcl
cmp
fsub
test
add
fistp
arpl
mov
jmp
mov
adc
mov
xchg
movs
out
(bad)
cmp
es
xchg
pop
cmp
iret
outs
jle
xor
outs
push
out
mov
mov
adc
retf
jno
or
cmc
inc
add
loop
test
xor
clc
cdq
cdq
mov
sbb
or
xchg
test
out
movs
push
cmp
ds
js
add
add
out
mov
push
data16
pop
sub
cmp
mov
out
add
aas
es
lea
jge
pop
out
mov
add
ret
or
mov
pop
es
add
in
push
clc
adc
add
sti
sub
mov
aam
add
sbb
jle
inc
ja
add
cmp
fs
xor
push
pop
pop
(bad)
push
test
mov
mov
jbe
(bad)
les
xor
out
cld
add
shl
in
adc
es
sub
jle
stc
jp
add
out
daa
out
dec
pop
sahf
cwde
cwde
add
ss
adc
outs
or
push
mov
es
pop
add
or
cmps
cmp
ret
jmp
xchg
dec
push
out
add
ret
ret
pop
xor
out
cmp
add
in
add
adc
popf
sbb
add
test
js
push
dec
lds
pop
ds
dec
jecxz
add
(bad)
pop
push
xchg
jo
or
mov
(bad)
xchg
icebp
cmp
and
das
jg
out
pop
jge
add
jle
fdiv
add
movs
push
push
mov
push
add
ror
xor
or
and
in
cmp
add
cmc
sub
add
sub
inc
fisub
pop
mov
pop
xlat
xlat
jg
xor
out
mov
add
cmps
cmps
and
inc
es
test
push
add
pop
pop
xchg
jle
mov
sbb
popa
xchg
jmp
es
jmp
aad
adc
pop
es
mov
inc
out
pop
pop
loopne
popa
out
js
dec
es
pushf
pop
sub
push
inc
pop
es
mov
and
inc
es
mov
sti
xor
mov
loopne
cmp
es
jns
mov
pop
add
mov
mov
loopne
sti
jmp
mov
dec
icebp
add
mov
add
imul
ins
mov
add
or
out
loop
fwait
inc
inc
nop
ss
cld
and
cmp
addr16
out
stc
pop
mov
test
mov
jno
sbb
sub
es
movs
push
fnstcw
es
test
repz
add
ds
jo
out
lods
cmp
or
adc
es
xchg
rcr
mov
sbb
lahf
lahf
cmp
dec
mov
out
pop
pop
add
es
lahf
add
inc
test
cdq
hlt
sbb
iret
iret
add
pop
es
mov
fcomp
repnz
mov
xchg
shl
ins
ins
(bad)
(bad)
sbb
js
cmps
dec
cli
and
cwde
(bad)
sub
scas
pop
outs
rol
xchg
inc
aam
(bad)
xchg
iret
add
pop
out
movs
in
std
cmp
out
fst
sub
out
mov
js
lea
add
cmps
mov
jnp
or
nop
push
jno
add
aad
stc
outs
test
fadd
cld
add
into
pop
imul
shl
push
addr16
inc
pusha
push
push
dec
dec
push
add
add
mov
xchg
pop
xchg
inc
inc
and
mov
loopne
out
cmp
pop
es
outs
mov
or
inc
popf
(bad)
les
or
(bad)
or
jp
jae
add
dec
jg
das
cmp
es
adc
out
or
or
xor
sahf
sahf
mov
and
add
cld
ins
es
add
imul
test
stos
cmp
inc
nop
push
mov
pusha
adc
mov
fnstsw
dec
push
adc
add
out
(bad)
cmp
and
and
(bad)
in
and
xchg
inc
ret
es
dec
add
mov
stos
stos
mov
sbb
mov
dec
xor
retf
es
out
fisub
pop
add
xor
xor
out
sbb
rcl
jb
add
cmp
or
mov
pop
xchg
shl
sub
cs
inc
adc
es
sahf
xchg
add
mov
dec
es
add
div
add
int3
adc
pop
pop
sbb
out
jae
dec
div
mov
(bad)
out
sbb
loope
les
or
sub
out
add
movs
push
push
jl
out
loopne
and
sbb
outs
js
add
hlt
cmp
dec
dec
sbb
out
nop
jg
es
in
push
add
sbb
xor
sbb
jl
hlt
jno
enter
mov
pushf
les
pusha
add
add
pop
or
add
stc
int
in
out
ror
es
push
xor
sub
xchg
test
dec
es
add
mov
dec
out
pop
pop
add
lds
pop
jl
jns
enter
hlt
shr
cwde
or
sub
add
out
jno
jmp
loop
hlt
add
call
mov
mov
rol
sbb
mov
aaa
dec
es
xor
sub
mov
add
shr
and
aas
leave
daa
and
xlat
jne
lods
jo
xchg
add
xor
inc
in
pop
cwde
jl
loopne
add
into
es
jp
iret
mov
push
cmc
and
add
in
push
shl
push
add
adc
shl
bnd
add
pop
test
pop
mov
sub
loopne
bound
and
xor
push
mov
xor
add
xchg
jl
es
add
and
retf
pop
add
jmp
jb
mov
das
mov
std
je
pop
pop
gs
push
out
jg
dec
scas
scas
add
add
jnp
mov
es
mov
xor
pop
stc
dec
push
out
add
in
adc
fist
mov
sub
es
pop
stos
lock
in
ja
inc
pop
mov
add
cmc
imul
jmp
leave
cmps
mov
arpl
rcl
fcmovnu
add
out
cmp
add
jp
repz
pushf
add
inc
ss
ret
sub
repnz
push
xchg
lock
xor
jbe
inc
rol
cmp
and
mov
rol
add
in
out
sar
out
nop
xchg
imul
je
gs
es
aam
mov
add
(bad)
in
sahf
out
je
ret
sbb
out
ja
mov
or
and
cmp
mov
idiv
shl
mov
dec
cmp
and
inc
push
adc
or
sbb
arpl
jnp
pusha
pusha
push
or
out
fs
div
jl
stos
out
data16
inc
inc
sbb
out
fwait
cmc
mov
xchg
and
test
cwde
cmp
add
xor
mov
out
mov
(bad)
bswap
sti
add
ror
std
pop
enter
stos
out
leave
pop
fwait
es
xchg
cmp
daa
out
and
fs
test
adc
loope
repz
out
pop
in
addr16
cwde
and
push
add
add
out
cdq
add
rol
lock
out
repnz
cwde
push
add
or
dec
jmp
cmp
add
fisttp
popf
or
xchg
fst
mov
inc
daa
mov
jno
add
dec
out
xor
jno
add
fbstp
(bad)
loopne
dec
jl
into
out
dec
sub
es
pop
dec
cmp
add
es
and
push
stos
push
mov
outs
out
sbb
xchg
mov
add
icebp
add
dec
lea
out
push
pop
mov
scas
out
xchg
or
es
movs
addr16
into
sti
jle
es
ror
add
adc
or
cmp
push
xor
cwde
es
xor
sub
add
loop
and
out
arpl
aad
and
ret
mov
add
jns
jge
inc
sbb
rol
add
xchg
fs
out
cmp
add
add
test
mov
add
jge
cmp
inc
mov
pop
xchg
xchg
xor
popf
cmp
adc
scas
out
aas
add
cmps
push
adc
cs
add
int3
int3
mov
(bad)
jae
out
mov
add
push
outs
outs
sbb
fiadd
out
lds
popa
jg
cmp
pop
aad
out
out
dec
add
push
xchg
jbe
loopne
pop
add
loop
xor
inc
int
loopne
inc
inc
das
das
add
out
mov
and
pop
pop
adc
leave
rcl
xor
stos
stos
mov
sbb
movs
es
aad
(bad)
out
adc
mov
inc
inc
adc
dec
add
and
clc
(bad)
mov
push
add
test
fdiv
xor
or
xchg
mov
out
fist
dec
jmp
mov
repz
out
daa
add
jmp
mov
add
clc
rcl
push
femms
out
xchg
inc
inc
mov
popa
add
xchg
xchg
or
out
neg
es
imul
or
mov
jmp
ds
jge
jo
es
dec
xor
dec
daa
xor
pop
pop
punpcklwd
es
dec
add
and
in
xor
sub
push
lea
push
es
cmp
loopne
js
add
dec
out
jmp
retf
(bad)
rcl
loope
jmp
leave
int
stos
es
call
and
adc
fistp
pop
pop
lds
out
fld
cmp
movs
add
or
add
repnz
lods
pop
or
or
sub
pop
pop
ss
mov
and
or
pop
pop
jae
clc
icebp
icebp
mov
mov
cmp
aam
add
and
mov
loopne
daa
out
je
test
add
jae
add
(bad)
jbe
mov
xchg
fsubr
mov
test
rcr
jae
cmc
add
dec
add
es
jae
(bad)
(bad)
xchg
add
adc
fcmovnu
push
outs
add
les
lock
ds
adc
std
out
mov
jbe
arpl
pop
cmp
nop
out
mov
add
inc
lahf
sbb
imul
aaa
add
dec
jnp
jno
loopne
cmps
fwait
out
add
retf
mov
inc
out
pop
sbb
ror
(bad)
fs
sbb
xor
ja
add
jmp
aam
add
jg
sbb
add
push
leave
out
adc
mov
xchg
std
add
push
out
mov
jecxz
and
add
xchg
cmp
loopne
add
or
fidiv
in
mov
fwait
add
mov
stc
pop
out
pop
retf
and
push
xchg
cmc
out
imul
mov
mov
popf
jle
sbb
add
vpsubusw
test
dec
pusha
sti
sti
or
pop
retf
or
into
jae
adc
lds
add
cmps
je
es
sub
mov
or
aas
jmp
push
xchg
inc
inc
jmp
mov
int3
out
js
add
out
jmp
adc
add
test
dec
add
ret
cmp
leave
out
fcmovnbe
cmp
stc
mov
jns
loopne
and
into
xor
aas
ds
jmp
pop
popf
ins
iret
iret
fnstsw
out
dec
pop
call
sbb
gs
call
sbb
jg
jle
add
mov
test
or
scas
xchg
adc
es
loopne
sbb
dec
cmp
clc
add
pop
test
fadd
push
sar
out
fwait
es
loopne
adc
out
ret
aam
cmps
cmps
add
and
sub
inc
call
out
pop
es
icebp
add
sub
push
out
add
push
push
push
mov
jp
mov
call
cli
add
inc
inc
push
xor
hlt
out
or
es
loopne
jae
xchg
es
(bad)
loop
mov
xor
pop
iret
shl
and
ja
ret
ret
mov
call
out
out
(bad)
add
es
mov
loope
dec
psllq
pop
sbb
add
out
adc
es
add
cmp
pop
cwde
push
out
add
adc
mov
dec
push
pop
jg
push
icebp
push
es
in
xor
add
xor
fldcw
adc
popf
es
bound
push
es
fwait
aas
xchg
xchg
add
inc
lods
jb
xor
es
shl
jno
mov
neg
xchg
inc
nop
add
or
add
pop
sbb
test
(bad)
(bad)
scas
scas
enter
push
and
cmp
sbb
sub
es
rcr
pop
lahf
xor
rcr
(bad)
xchg
out
inc
mov
es
mov
add
das
popf
pop
idiv
cmp
neg
sub
cld
pop
call
mov
out
sub
add
sbb
out
adc
push
add
mov
and
clc
out
out
ss
into
call
jmp
add
jno
pop
and
sbb
add
cmps
fsubp
cmp
add
pop
pop
xchg
scas
stos
out
sbb
pop
mov
out
adc
push
push
sub
scas
out
add
xchg
sti
xchg
xchg
jne
lods
out
cmp
adc
cmp
add
cmp
pop
mov
hlt
or
xor
out
pop
fs
add
mov
out
stc
sbb
sbb
fisub
out
retf
jo
es
adc
xor
jne
mov
shl
rol
ja
mov
mov
(bad)
(bad)
test
add
pusha
pop
and
mov
leave
repnz
jge
jnp
clc
clc
xchg
out
or
mov
cld
cld
xor
pop
outs
outs
xor
mov
add
push
inc
clc
jmp
loopne
sbb
sbb
cwde
xchg
add
xor
test
fistp
mov
mov
add
fild
aaa
mov
add
xchg
pop
sub
add
in
adc
pop
pop
push
jmp
pop
mov
loop
xchg
fcom
add
cmp
push
mov
(bad)
bswap
add
lea
out
adc
add
stos
push
out
mov
mov
xor
iret
add
mov
jmp
stos
stos
add
xor
and
(bad)
pop
out
xchg
lock
es
das
lea
mov
out
inc
or
push
push
and
fsub
mov
jbe
es
dec
add
push
push
xor
mov
mov
mov
out
retf
add
loopne
adc
xlat
icebp
and
out
jns
add
or
scas
fwait
lock
stos
dec
add
into
imul
inc
jl
inc
dec
jno
mov
add
hlt
add
out
add
inc
push
adc
test
or
xor
je
add
ins
and
in
aad
arpl
out
mov
add
scas
jecxz
es
iret
ins
loop
lock
sbb
cwde
xor
hlt
hlt
mov
int3
or
es
pop
pushf
add
pop
inc
cli
movs
lea
inc
lods
lods
sub
enter
add
lods
push
pop
and
lea
sbb
je
icebp
mov
or
inc
out
or
es
fcom
loope
cli
mov
push
mov
rol
jge
mov
pop
push
add
cmp
xor
inc
add
push
mov
aad
add
mov
(bad)
lock
jbe
add
int
pusha
out
fwait
jg
es
mov
in
es
pushf
into
das
enter
dec
mov
push
inc
add
sub
(bad)
add
push
push
push
fnstcw
out
jle
pop
es
adc
es
inc
cwde
dec
pop
pop
std
js
xchg
xlat
xchg
add
mov
lds
out
out
adc
es
outs
int3
movs
push
push
ret
fs
mov
xor
mov
lock
xchg
and
jnp
cmp
pop
scas
in
jb
add
sub
std
or
and
shl
es
scas
add
xlat
mov
xor
mov
es
clc
inc
inc
vpminsw
imul
sub
add
adc
adc
ds
push
call
pop
sub
xchg
lods
add
into
push
push
out
mov
es
dec
jne
or
bound
add
jle
(bad)
pop
pop
add
mov
(bad)
hlt
je
push
push
add
out
call
pop
add
add
es
xchg
push
pop
out
icebp
dec
shl
add
sbb
add
push
push
or
add
or
out
rcl
adc
push
cmc
inc
inc
xchg
out
cmp
inc
add
dec
xchg
xchg
mov
inc
arpl
jae
es
clc
pop
pop
jne
imul
jmp
shl
mov
lods
out
cmovo
xchg
xchg
add
out
imul
out
or
add
clc
pop
popa
fisub
(bad)
xchg
and
jmp
(bad)
(bad)
push
add
mov
push
out
loope
fldcw
add
add
jne
sbb
pusha
jo
mov
jge
(bad)
std
pop
sbb
or
repz
into
arpl
push
xor
ja
dec
add
out
fldcw
push
out
stos
es
es
add
pop
sahf
sahf
jb
inc
es
test
aam
(bad)
es
mov
retf
sub
out
retf
push
jmp
pop
loopne
mov
es
(bad)
out
add
cmp
aas
outs
mov
sub
adc
jl
add
xchg
out
lods
sub
pop
pop
stc
add
out
dec
sahf
dec
repnz
clc
sub
and
or
mov
out
je
jbe
add
movs
loop
and
inc
add
imul
fs
mov
inc
ins
pop
sub
cmp
sti
es
lods
pusha
arpl
and
lods
(bad)
data16
adc
or
out
jmp
sbb
xchg
in
add
out
outs
add
pop
or
ja
es
add
cmp
pusha
pusha
mov
popf
fistp
sbb
pop
mov
mov
push
add
loopne
(bad)
out
push
test
sti
jmp
mov
pop
int3
add
gs
dec
xlat
add
cmovns
fld
push
add
rol
rcr
lods
cmp
es
ss
jg
mov
dec
leave
loop
es
add
lods
(bad)
in
adc
xor
add
es
rol
pop
pop
xchg
aad
es
dec
(bad)
sub
leave
test
pop
cmps
add
out
popa
lock
(bad)
jg
sub
add
pusha
js
pushf
add
mov
shl
adc
es
clc
cmps
shl
test
and
out
imul
es
inc
xor
loope
and
dec
dec
stos
and
mov
add
in
in
jecxz
(bad)
out
(bad)
enter
lock
jb
leave
inc
push
mov
out
call
cmps
push
xchg
adc
prefetch
dec
out
shl
jno
ret
es
mov
add
sub
inc
sbb
push
push
mov
pusha
(bad)
and
push
push
setne
out
add
cwde
stc
stc
cld
xchg
jle
add
mov
out
push
mov
es
xchg
mov
nop
jle
pop
jnp
mov
push
push
std
es
dec
adc
mov
es
jbe
add
sahf
sahf
outs
(bad)
pop
out
shl
test
nop
inc
cmp
jg
add
and
scas
scas
rol
paddsw
cmp
pop
add
es
out
es
test
or
add
mov
sbb
pop
or
pusha
xlat
aad
lock
and
cmp
shl
(bad)
aaa
scas
clc
out
and
out
dec
dec
das
ds
mov
sbb
(bad)
or
mov
fwait
out
adc
inc
loope
push
adc
xchg
add
push
cmc
jg
fadd
cli
mov
in
(bad)
(bad)
lock
xor
add
movs
jp
sub
pop
adc
add
xchg
mov
xor
es
fdiv
sub
imul
jno
repz
popa
add
ret
adc
in
addr16
push
add
sub
dec
jo
add
es
mov
(bad)
call
es
aad
jne
adc
xchg
add
fidiv
ins
push
jb
jnp
fs
xchg
xor
shl
add
es
(bad)
fbld
push
pusha
add
push
push
mov
pop
es
ins
bound
or
sbb
push
cs
adc
aad
stos
inc
xor
test
repz
inc
inc
sbb
or
je
(bad)
sti
out
cmp
add
in
rcl
shl
mov
add
(bad)
xchg
out
rdmsr
cdq
es
inc
bound
push
push
je
mov
mov
xor
cli
mov
jecxz
loop
(bad)
mov
xor
rcr
popf
and
cld
mov
add
data16
shl
add
inc
out
stos
xchg
add
bound
cmp
add
popa
add
out
out
shl
imul
lahf
add
loope
mov
cdq
mov
shr
pusha
push
push
jbe
(bad)
es
pop
ret
xor
(bad)
es
or
jp
mov
pushf
lahf
popa
out
ret
es
int3
dec
add
and
pushf
or
push
mov
loopne
test
inc
rol
lods
lds
mov
(bad)
(bad)
adc
daa
out
outs
fidiv
movhps
clc
mov
add
mov
and
pop
cmp
cmp
iret
(bad)
mov
sbb
stos
out
and
jo
inc
out
mov
add
out
add
push
jo
sub
inc
sahf
ds
adc
and
movs
mov
mov
test
aas
aas
out
cmp
push
pop
add
mov
add
cli
jp
clc
rcl
or
add
(bad)
cmp
pop
sub
sbb
jae
add
sahf
sahf
jo
in
out
cmps
gs
es
ins
pop
lods
lods
sub
mov
cmp
js
push
mov
pmullw
add
xchg
push
(bad)
jmp
and
out
mov
or
add
cmovs
es
add
add
xchg
push
adc
int3
lods
lods
add
pop
xor
mov
es
test
(bad)
jl
push
mov
push
fucom
sub
push
jecxz
fdiv
mov
clc
clc
or
clc
out
sbb
add
inc
xchg
jl
sub
in
test
es
add
(bad)
cmovne
mov
out
je
inc
(bad)
mov
add
movs
cmp
cli
cli
outs
shr
out
hlt
sti
std
es
push
mov
pop
pop
js
add
es
mov
jo
jg
xor
popa
popa
or
inc
es
mov
add
mov
mul
ror
scas
scas
test
es
or
inc
(bad)
mov
add
dec
out
sub
mov
add
pushf
sub
lods
dec
add
push
sbb
cmp
add
jno
jnp
xor
or
xlat
out
and
adc
shl
pusha
sar
out
push
popa
enter
mov
and
push
push
cdq
and
out
pushf
push
retf
scas
cmp
clc
jo
add
rcl
arpl
outs
pop
pusha
jp
out
add
pop
dec
mov
stos
stos
mov
sbb
shl
pop
loopne
cmp
push
cli
lea
push
es
xlat
lds
mov
add
jbe
mov
jmp
pop
pop
pop
add
fsubp
retf
outs
clc
clc
jb
add
xor
dec
inc
jl
sar
jg
dec
jne
ret
out
mov
or
add
(bad)
and
out
out
fcom
in
out
jmp
int
call
pusha
lods
(bad)
push
in
sbb
cmp
jge
add
mov
pusha
clc
(bad)
(bad)
out
hlt
jecxz
fcomp
lods
(bad)
jmp
add
test
mov
fucom
js
xor
dec
add
out
pop
add
retf
push
sub
xlat
out
add
mov
or
hlt
in
sbb
mov
add
out
ins
ror
xor
add
adc
jge
sbb
(bad)
pop
dec
in
xchg
inc
add
bound
fwait
push
add
jo
in
out
adc
push
(bad)
inc
sbb
pop
loopne
mov
pop
sub
fsubr
mov
mov
lods
add
out
cwde
push
cmp
mov
add
scas
sub
add
adc
and
es
cmps
int3
add
leave
shl
and
test
mov
add
xchg
adc
add
out
dec
aaa
popf
es
hlt
add
sub
jge
cld
out
jbe
shl
dec
mov
sub
mul
cdq
sbb
jg
pop
push
out
aas
mov
es
shl
push
lea
es
out
bound
(bad)
(bad)
mov
(bad)
jns
out
leave
pop
adc
out
push
aam
(bad)
(bad)
add
out
cmp
dec
es
add
test
adc
sbb
mov
push
loopne
lahf
es
jmp
ins
ins
add
inc
fild
mov
or
out
out
push
add
jo
les
xchg
fisub
add
push
js
out
ss
es
add
out
nop
es
movs
push
lods
mov
ret
and
mul
out
add
stos
es
or
push
mov
ret
xor
sub
mov
mov
es
add
jb
outs
cmps
in
in
push
push
xchg
out
cli
cs
add
js
call
or
out
es
add
montmul
cmps
adc
ja
mov
sti
inc
es
push
mov
(bad)
es
cmp
pop
pop
inc
push
add
dec
or
and
leave
outs
outs
jecxz
dec
es
or
adc
ret
jae
mov
out
push
and
cmp
out
add
xchg
sub
add
btr
stos
fwait
fwait
mov
hlt
mov
pushf
stos
out
mov
cmp
test
xor
adc
out
inc
cmp
es
ja
cmp
icebp
xlat
adc
repnz
es
fisttp
add
out
arpl
jecxz
ss
jae
es
adc
cmp
mov
int3
ins
ins
(bad)
pop
add
repz
repnz
out
cmc
fldcw
xchg
dec
pop
(bad)
out
out
fild
es
and
addr16
pop
je
add
jnp
add
or
sub
add
adc
jge
sub
adc
es
daa
retf
pop
rol
aad
mov
mov
mov
dec
dec
or
scas
out
or
cmp
test
lock
pop
add
sub
jmp
mov
add
call
and
ss
inc
es
int
lahf
adc
bnd
add
jae
dec
out
mov
repz
scas
mul
sub
hlt
add
xor
xchg
cmp
outs
outs
aas
pusha
xor
fadd
add
xchg
add
add
movs
es
xlat
add
stos
pop
mov
lods
ja
ins
pop
or
xor
push
(bad)
mov
mov
out
and
sahf
add
adc
out
lock
add
shl
xor
sbb
pop
add
retf
icebp
xchg
nop
out
pop
js
test
sahf
rol
adc
es
mov
pop
aas
aas
sbb
es
add
shl
inc
inc
ins
add
sahf
pusha
push
mov
imul
cmp
js
jae
pop
adc
out
out
lea
add
xlat
mov
addr16
add
jae
xor
mov
xor
icebp
push
or
add
lods
or
fldenv
ret
les
mov
(bad)
sub
es
imul
(bad)
or
hlt
jmp
push
push
adc
movs
add
dec
nop
retf
out
cld
and
add
loope
in
in
cli
jbe
out
xor
add
int3
or
lods
pop
jecxz
int
add
adc
cmps
xlat
add
add
pop
dec
mov
cmp
add
push
mov
and
mov
pavgb
in
repz
aam
mov
mov
add
loope
es
add
fist
mov
(bad)
mov
add
stc
add
aaa
out
scas
fsin
es
add
pushf
in
sbb
(bad)
leave
add
xor
das
jg
pop
(bad)
inc
dec
pop
mov
out
imul
cmp
sti
xor
or
hlt
hlt
sub
add
cmp
sub
imul
sub
es
sub
iret
add
in
in
xchg
imul
fcomp
inc
ss
rcl
dec
mov
sbb
shl
or
es
aad
xor
or
adc
fcomi
add
adc
mov
loope
stc
stc
inc
xor
clc
test
out
dec
jnp
in
add
out
fwait
in
es
jo
mov
push
add
inc
hlt
es
fistp
cmp
ror
pop
loopne
ins
add
(bad)
lea
jbe
cmp
cmp
nop
and
aas
push
ins
ins
add
pop
pop
xchg
inc
pop
xor
and
add
mov
add
dec
ficomp
inc
or
add
es
fidiv
jae
jl
jns
sub
pop
mov
mov
inc
cdq
mov
std
popf
es
push
dec
je
mov
xor
loopne
adc
add
sbb
xlat
mov
cmps
pusha
pusha
mov
ret
jl
aas
add
fld
sub
sub
or
stos
push
pop
loope
xchg
js
test
rol
fsub
jae
movs
movs
fdivr
clc
clc
loop
int
cmp
mov
jl
push
es
cmp
pop
pop
sub
mov
sbb
and
bound
jno
cld
mov
fucomp
fdivr
aas
mov
fcmovb
and
pop
cmp
and
xchg
xchg
and
or
lods
adc
dec
es
or
dec
inc
pop
es
add
rol
xor
rcl
lock
shl
add
fs
push
push
cmp
out
add
mov
sub
imul
add
es
jne
jb
mov
jmp
imul
out
pop
sar
push
mov
xor
push
xor
xchg
out
add
add
in
in
aad
add
pop
sub
add
out
cld
or
ins
pop
jne
add
es
xor
pop
imul
imul
push
int3
int3
test
add
and
sbb
std
add
arpl
imul
pusha
add
push
mov
xor
push
push
xchg
mov
add
out
gs
outs
add
jmp
push
loop
pop
add
pusha
(bad)
jnp
mov
xchg
out
add
pop
out
out
mov
test
add
add
mov
out
inc
jns
es
(bad)
(bad)
rcl
adc
cmp
add
push
add
call
adc
adc
push
add
loop
cmc
jmp
push
add
(bad)
sbb
lock
mov
test
add
or
xchg
dec
sub
in
add
ss
fwait
gs
test
shl
lahf
add
cs
scas
and
sbb
iret
movs
aaa
aaa
sbb
pop
es
or
addr16
sub
dec
push
add
xlat
test
sbb
mov
adc
les
jae
cld
cld
sub
out
das
add
vphaddwq
es
out
push
repnz
pop
pop
sti
mov
(bad)
jmp
dec
or
mov
rol
pop
pop
adc
icebp
xchg
xchg
out
repz
sbb
jmp
sbb
add
out
(bad)
mov
es
(bad)
test
std
(bad)
cs
bound
xchg
mov
imul
cmp
add
sub
mov
popf
add
(bad)
sbb
out
int3
in
add
inc
mov
mov
inc
es
and
jmp
aaa
aaa
int3
mov
xchg
dec
rcl
shl
rol
addr16
div
sbb
out
popf
add
jo
mov
es
rcl
push
mov
add
call
out
data16
es
jmp
pushf
xchg
es
push
pop
stc
pop
pop
add
mov
in
stos
or
ds
sbb
dec
imul
movs
cmp
pop
pop
pop
mov
jno
xor
mov
sub
sbb
out
fwait
sbb
add
add
adc
out
sbb
push
adc
add
and
jp
mov
mov
mov
push
clc
add
mov
jg
lods
sti
cmp
or
imul
push
sahf
inc
jnp
repz
adc
fnstsw
add
add
adc
mov
out
mov
mov
out
mov
pop
cmp
xchg
xor
inc
pop
pop
cmp
sbb
adc
jmp
js
in
pop
add
or
xchg
es
inc
movs
mov
inc
scas
scas
inc
or
out
(bad)
ds
es
add
(bad)
pusha
mov
loopne
inc
(bad)
cmp
daa
daa
add
stc
out
sbb
leave
es
mov
mov
add
pmovmskb
loope
or
and
mov
stc
cmp
adc
or
add
mov
scas
inc
jp
in
mov
xor
cmp
movups
cmp
loope
in
js
add
xor
es
or
imul
sbb
leave
add
mov
add
push
push
mov
clc
xchg
test
hlt
jno
shl
in
int3
int3
push
cs
or
pop
jecxz
out
sbb
and
mov
out
add
inc
push
push
adc
(bad)
jecxz
add
test
push
push
icebp
mov
es
movq
pop
lods
add
ja
test
pmullw
movs
movs
imul
out
sti
call
add
es
xlat
add
xor
out
jl
cdq
es
dec
imul
cs
jnp
and
enter
inc
cmp
out
add
out
and
ret
out
add
mov
mov
clc
mov
cmp
retf
ret
imul
es
add
push
jg
fnstenv
stos
out
or
data16
sbb
adc
mov
or
mov
repz
fistp
mov
sahf
out
das
mov
bound
pop
add
push
out
pxor
ins
lea
das
out
sbb
dec
add
adc
es
out
cli
cli
out
aas
daa
adc
mov
ins
es
cwde
hlt
hlt
inc
movs
pop
sbb
pop
in
out
xlat
jb
push
push
std
xchg
enter
add
cmp
mov
adc
test
add
lea
push
mov
add
stc
xor
out
out
es
add
push
loope
sub
and
mov
add
cs
daa
daa
retf
out
or
es
xor
sbb
adc
pop
xchg
es
je
dec
dec
cmp
popf
mov
mov
pop
add
call
add
cmps
ins
add
add
call
es
out
add
adc
outs
mov
xor
add
push
inc
es
daa
pop
mov
pop
adc
add
cmps
or
test
cmp
sub
push
and
add
leave
mov
aas
aas
jp
and
out
adc
sbb
es
xor
mov
lock
add
dec
out
cdq
xchg
ds
jno
add
fs
push
mov
int3
sub
pop
out
and
js
add
xchg
out
stc
test
sbb
add
jge
test
jns
in
add
out
xor
or
add
add
mov
sbb
dec
jbe
add
inc
outs
sub
js
push
jns
imul
push
call
add
push
es
jle
add
and
imul
test
dec
neg
mov
mov
movs
cmp
push
mov
out
or
popf
loopne
fld
test
add
sbb
dec
es
out
mov
pop
aam
jo
ret
inc
cmp
adc
jae
stos
out
jbe
and
retf
lock
pop
out
enter
test
loopne
sbb
repnz
sub
add
cdq
mov
int
or
xor
mov
out
inc
jo
es
jno
arpl
adc
xor
cmp
jecxz
cli
cli
ss
es
push
(bad)
cwde
cwde
jg
js
adc
cmp
push
mov
es
mov
jae
pop
es
xlat
aad
xchg
xchg
or
mul
pop
addr16
add
fsubr
(bad)
(bad)
sub
xor
mov
cmps
fsub
xchg
ret
push
leave
mov
and
sbb
repz
add
lds
nop
call
loop
inc
cmp
mov
jp
pop
call
dec
mov
cld
add
inc
das
xchg
add
sbb
dec
out
mov
movs
push
inc
(bad)
popa
mov
(bad)
out
add
mul
mov
aad
cmp
jecxz
and
cmc
shl
add
inc
jmp
out
or
dec
dec
and
xchg
push
cwde
out
add
inc
shl
pop
inc
inc
repz
es
std
pop
outs
outs
loopne
cmps
bound
add
mov
call
out
pop
sbb
imul
jae
or
cld
repnz
add
pusha
pusha
mov
pop
mov
stos
movs
jecxz
es
mov
add
es
jno
pop
pop
pop
mov
inc
add
sub
out
call
cmp
inc
cdq
cdq
add
stos
push
movs
movs
bound
ins
sub
xor
pop
jl
add
mov
pop
ins
fcmovnu
mov
fcom
pop
daa
or
add
cs
pop
es
je
add
push
or
nop
stos
out
pop
cld
shl
(bad)
imul
pop
add
push
jmp
daa
(bad)
cmp
push
(bad)
es
(bad)
inc
jbe
mov
cld
aas
or
add
xor
sti
ins
or
or
and
aaa
out
jmp
popf
out
adc
pop
es
or
mov
pop
pop
test
sub
sbb
loope
cmp
js
mov
cmp
pop
clc
out
push
call
jmp
bnd
div
sbb
loopne
movs
or
add
(bad)
mov
pop
movs
push
add
out
mov
pop
(bad)
cmps
push
or
shl
adc
jns
mov
fdiv
ja
es
cmc
retf
add
pop
lods
dec
rcr
add
cmp
adc
es
shrd
sti
pop
mov
rol
jle
es
stos
dec
xchg
xchg
std
inc
out
mov
adc
xchg
cmp
pusha
pop
add
data16
mul
and
aam
jg
int3
add
es
xchg
stc
call
arpl
and
fwait
call
pop
jne
xchg
mov
es
fsubr
fcmovnu
mov
add
les
push
pop
jge
add
ds
mov
mov
imul
es
cmp
ins
ins
add
push
cmp
mov
xor
add
les
movsx
(bad)
and
dec
mov
adc
out
retf
shl
xchg
scas
mov
push
xchg
jp
out
sar
es
(bad)
pop
repz
(bad)
out
add
inc
mov
or
out
inc
mov
mov
dec
loop
mov
add
psubsw
sbb
push
mov
mov
push
push
push
push
aas
aam
mov
popf
jmp
jb
add
fs
sbb
jge
es
sahf
popa
push
and
mov
shl
daa
dec
pop
inc
inc
push
add
push
inc
shl
dec
cmp
retf
gs
add
sbb
cmc
mov
inc
out
fnstcw
add
iret
iret
rcl
pop
mov
push
cmps
cmps
lock
add
int
cmps
test
ss
and
jns
sbb
dec
jb
xor
popa
inc
jno
xchg
fcmovnb
mov
add
and
push
pop
fisub
pop
mov
and
out
sbb
fstp
fcmovbe
cwde
out
inc
inc
xchg
scas
scas
nop
mov
out
add
xlat
call
test
das
into
mov
or
mov
out
mov
pop
xchg
shl
rcl
cmps
and
add
(bad)
out
or
test
fisub
jo
mov
pop
es
push
outs
add
es
mov
jne
mov
and
(bad)
push
repz
es
mov
pop
inc
add
and
fwait
out
in
jmp
sahf
jmp
sbb
addr16
push
mov
sbb
out
add
xor
(bad)
in
xchg
(bad)
xchg
add
and
nop
stc
pusha
pusha
daa
xor
out
out
pop
jae
out
imul
add
arpl
out
push
popf
jle
clc
add
push
xchg
xchg
(bad)
iret
xor
xlat
outs
add
in
xor
fstp
mov
out
lock
add
(bad)
lods
mov
es
cmps
dec
add
pop
stos
sub
push
cmp
lea
out
add
cmps
test
add
out
xor
(bad)
ret
ds
mov
or
add
mov
jmp
cmp
cs
retf
out
clc
mov
adc
cmp
and
sub
and
or
mov
fsub
inc
adc
sub
sub
sbb
push
ins
arpl
add
out
aas
sbb
rcr
ins
ret
mov
jne
out
push
cmp
cmps
out
addr16
mov
jmp
repz
adc
add
xchg
loope
add
out
jg
dec
fnstenv
pop
lock
push
(bad)
dec
cmp
mov
push
es
xchg
loopne
and
fwait
fwait
add
aas
rol
lds
push
out
mov
jl
test
scas
mov
add
mov
jle
sub
xchg
imul
pop
pop
push
xor
dec
cdq
cdq
add
and
into
push
inc
dec
sbb
call
es
or
loope
add
mov
mov
add
out
pusha
movs
and
enter
test
or
mov
or
clc
mov
idiv
stc
sahf
push
cmp
imul
ins
loopne
dec
jae
stos
repz
repnz
mov
jl
cld
cld
sbb
cmc
add
neg
mov
mov
iret
in
add
add
cmc
(bad)
xchg
jne
fwait
sbb
out
add
sti
iret
push
push
in
out
add
adc
icebp
fidivr
inc
out
xchg
adc
sub
pop
dec
mov
shl
and
movs
movs
jg
call
sub
or
retf
retf
jno
push
mov
cmp
int3
lods
lods
dec
add
out
cmp
in
push
push
js
hlt
out
add
lds
aas
(bad)
paddq
add
int
cli
pop
movs
in
push
add
xor
dec
fst
outs
aam
dec
dec
ret
push
mov
pop
or
add
and
mov
lea
es
add
es
dec
jbe
inc
inc
cmp
xchg
cdq
es
dec
stc
out
cmps
cmps
add
pop
fcomp
sbb
fwait
out
mov
push
mov
out
mov
add
fcomp
push
xor
mov
sbb
and
pop
add
cmp
jae
out
add
add
push
enter
and
add
mov
jp
lea
fbld
mov
push
inc
adc
dec
xor
xchg
es
mov
ret
add
bnd
out
out
xor
or
(bad)
jb
int
add
in
jmp
int3
mov
es
call
inc
cmps
(bad)
paddsb
xor
inc
inc
dec
dec
jecxz
push
out
jge
nop
retf
jg
out
add
and
rol
aad
inc
dec
lahf
rcl
pop
xchg
add
xlat
mov
mov
add
in
imul
add
clc
add
push
and
mov
xchg
mov
adc
add
retf
cmp
out
add
(bad)
js
(bad)
int
outs
xchg
(bad)
es
or
add
or
in
mov
repz
add
ja
popa
popa
cmp
pop
out
push
jp
add
jmp
daa
es
xchg
(bad)
(bad)
cmp
cwde
add
xchg
add
add
bound
out
mov
movaps
out
ja
push
data16
out
in
les
(bad)
out
push
aam
mov
xor
out
jecxz
pop
add
inc
push
push
clc
clc
punpckhwd
out
icebp
shl
out
ss
lea
js
adc
adc
adc
test
test
dec
sub
out
adc
mov
(bad)
pop
jo
sub
pop
or
pop
pop
in
jae
add
xchg
xchg
mov
push
test
lock
and
mov
shr
cmp
enter
push
add
es
(bad)
je
add
push
inc
ins
retf
lahf
out
fcomp
add
mov
out
xor
inc
stos
add
sub
(bad)
push
add
adc
jmp
sar
and
jp
addr16
add
es
int3
icebp
in
cmc
xlat
fmul
es
movs
movs
push
jns
call
nop
mov
cmp
add
and
xchg
mov
mov
out
jne
sbb
outs
add
add
or
add
pop
es
or
sub
aaa
out
(bad)
add
test
loopne
popf
push
and
rcpps
jg
es
pop
mov
aam
sti
jo
add
or
pop
pop
es
and
fld
cs
add
out
lds
std
add
es
scas
fsub
and
push
sbb
daa
ins
sbb
xchg
fadd
movs
movs
pop
mul
in
push
xor
add
mov
es
or
mov
(bad)
and
test
add
add
dec
dec
jno
push
out
(bad)
sub
dec
dec
jbe
xchg
out
into
cmp
ins
out
adc
es
add
nop
add
mov
jge
sub
loope
lahf
push
test
test
mov
pop
adc
mov
loop
jo
out
mov
mov
sti
nop
nop
dec
imul
add
out
popf
es
or
add
and
in
shl
loopne
cmp
push
jbe
cmp
jns
push
push
cmp
out
jno
pop
(bad)
mov
xchg
and
pusha
jle
mov
(bad)
clc
ins
add
jno
xchg
hlt
add
test
repnz
test
js
sub
or
add
and
add
add
push
es
mov
pop
xor
sub
and
je
pop
out
mov
rcr
clc
arpl
adc
test
mov
es
sbb
push
cmp
(bad)
stos
jge
push
in
das
add
jmp
jns
outs
outs
jl
fucomp
jmp
sub
out
out
pop
pop
dec
mov
sbb
aad
test
out
push
add
mov
std
sbb
(bad)
mov
mov
test
jns
retf
ins
fs
pop
inc
xchg
leave
push
push
scas
in
sbb
add
call
out
add
dec
sbb
rol
es
adc
adc
ret
jmp
lods
and
push
sub
jge
add
fadd
jle
mov
aad
fs
es
sub
jmp
icebp
sti
and
loope
es
cmp
lods
test
shl
xchg
xchg
jge
push
push
out
ret
bound
loopne
ins
sub
out
adc
mov
cld
fld
es
loope
xor
add
(bad)
es
pop
jle
call
sub
ltr
daa
daa
push
outs
(bad)
ins
sti
stos
adc
jmp
loope
je
out
(bad)
dec
add
into
push
cdq
out
xchg
add
es
adc
inc
fcomip
out
(bad)
jns
mov
mov
jnp
add
fs
pop
ror
(bad)
out
add
push
jmp
cmp
inc
repnz
cs
xor
es
lock
or
add
inc
inc
xor
es
add
xchg
movlps
dec
clc
mov
push
es
cmp
out
out
push
push
mov
fadd
sbb
ds
out
dec
add
pop
push
xor
mov
jo
sub
jo
mov
mov
lods
dec
dec
das
sbb
out
sar
es
icebp
add
jmp
sbb
rcl
dec
cld
add
in
out
shr
pop
add
loopne
outs
test
in
add
inc
jnp
push
push
push
je
push
mov
inc
retf
adc
mov
test
jecxz
sbb
inc
pop
dec
lock
sbb
int
mov
aam
pop
out
mov
call
add
fucom
xchg
add
push
shl
vdivpd
ins
out
dec
dec
pop
or
cwde
(bad)
adc
lods
jp
hlt
dec
dec
int
das
jns
fwait
and
dec
fsubr
inc
add
call
shl
mov
sub
mov
stos
add
add
sub
fcmovnu
add
das
retf
inc
loop
ins
lock
cmp
mov
ficomp
out
or
or
xor
(bad)
add
inc
inc
out
xchg
add
or
jecxz
mov
mov
jae
add
cmp
cwde
cwde
inc
jb
out
add
es
cmp
mov
js
push
retf
retf
fisttp
das
out
rcl
sub
cld
cmp
clc
inc
es
add
xor
mov
out
out
les
and
push
out
into
add
iret
iret
dec
sub
and
jmp
out
or
es
aas
add
(bad)
cmc
dec
es
setns
jmp
xor
repz
mov
cmp
gs
cmps
cmps
sbb
push
out
or
or
out
jge
xchg
dec
dec
inc
or
mov
fcomp
sub
fisub
outs
xor
dec
es
jno
lock
sbb
fsubr
inc
push
push
jg
out
aas
jno
es
sbb
sbb
retf
push
inc
int3
jmp
pop
mov
mov
sbb
inc
adc
outs
popa
scas
pop
push
push
(bad)
add
out
fs
inc
add
xchg
aas
cmp
xchg
(bad)
add
out
daa
es
fwait
nop
into
into
(bad)
dec
(bad)
es
test
jle
dec
add
iret
iret
push
outs
popa
out
push
push
add
adc
out
sub
mov
add
adc
jb
pusha
aad
add
push
xchg
ret
out
popf
(bad)
xor
sbb
gs
arpl
sahf
cmp
(bad)
dec
xchg
lock
and
jns
push
add
lahf
push
cmc
jbe
fs
hlt
div
add
retf
mov
pop
and
out
loopne
es
mov
jge
add
in
cld
ss
hlt
es
(bad)
add
out
cs
es
and
addr16
cli
add
es
fs
mov
add
dec
es
scas
push
push
sbb
mov
neg
mov
mov
mov
mov
push
movs
push
and
aad
sbb
repnz
cmp
rol
pop
pop
scas
cmp
out
in
mov
out
xchg
add
and
mov
and
add
adc
pop
sbb
ret
ins
push
push
into
sbb
add
jecxz
repz
arpl
popa
add
jo
cmp
sbb
cmp
sub
pop
add
(bad)
es
add
mov
jno
imul
das
jo
add
adc
xchg
es
sbb
ins
daa
add
xchg
jns
out
xchg
retf
push
jecxz
into
out
ret
lds
add
hlt
and
xor
out
xchg
or
sub
add
inc
retf
mov
movmskps
xor
cdq
es
add
nop
mov
and
pop
jo
out
or
es
inc
mov
add
(bad)
(bad)
div
test
and
sbb
mov
add
jp
clc
clc
or
repz
pop
mov
es
dec
pop
es
xchg
and
mov
add
and
es
mov
mov
add
adc
loope
out
sti
mov
stos
es
xchg
inc
cld
cld
add
pop
mov
sbb
add
fistp
test
pop
pop
dec
outs
ret
mov
xchg
xchg
inc
out
aad
loop
lea
sub
in
in
push
jnp
xor
lds
aas
cld
cld
fs
jns
or
xor
ss
es
inc
pusha
pop
movs
es
imul
add
frstor
int
pusha
es
or
in
add
and
es
repnz
push
xlat
xlat
cdq
add
es
mov
dec
pop
loope
es
fistp
es
les
aad
loopne
and
cdq
mov
pop
pop
loop
push
out
and
shl
sbb
es
in
iret
add
outs
add
pop
es
fisubr
sbb
cmps
cli
add
push
jb
and
aam
mov
nop
nop
jge
cli
add
cmc
cmps
gs
pop
and
cmp
jb
ja
hlt
add
jle
(bad)
sahf
es
test
adc
or
xchg
pop
inc
in
in
jge
xor
pop
sbb
mov
es
add
repnz
pop
loopne
jae
daa
and
shl
jl
add
and
jl
clc
outs
mov
repnz
mov
out
addr16
add
arpl
std
xchg
push
and
pop
pop
ret
out
adc
pop
leave
lock
add
jmp
sub
add
call
jns
push
add
ret
mov
inc
add
(bad)
(bad)
push
test
add
fadd
les
call
mov
lods
div
add
out
inc
inc
jmp
cmp
nop
(bad)
cmp
aas
pop
repz
jg
add
out
aaa
imul
sbb
adc
sub
sbb
es
push
fcomp
arpl
in
jmp
push
add
mov
(bad)
jp
mov
add
stc
icebp
mov
mov
mov
(bad)
loopne
add
xchg
pusha
dec
pop
pop
add
inc
movs
pop
in
sub
xor
push
aas
push
(bad)
add
mov
es
hlt
stos
outs
outs
ins
add
es
push
test
jmp
dec
or
popf
add
sub
cmp
enter
pop
pusha
es
mov
jno
add
das
xchg
outs
mov
sar
call
add
push
or
pop
out
es
sbb
pop
out
xchg
movs
xchg
es
mov
fstp
es
or
out
iret
iret
fistp
mov
sbb
out
cwde
ret
push
es
push
inc
adc
jle
add
push
xor
rcl
scas
sub
cli
cli
add
mov
xor
jmp
pusha
(bad)
xchg
movntq
aas
or
ds
mov
pop
add
sub
add
dec
out
es
add
retf
ja
int
aas
test
inc
or
xor
call
out
jl
xlat
iret
push
test
pop
repnz
mov
out
clc
sub
in
push
push
call
push
int
out
xchg
ja
repz
push
sysret
add
add
cmps
repnz
jle
les
outs
into
lods
adc
imul
not
inc
mov
add
fwait
jne
dec
es
sti
or
es
push
and
sub
cmp
out
xchg
inc
stc
pop
pop
outs
push
popa
out
add
je
(bad)
addr16
sbb
inc
inc
sbb
(bad)
add
out
imul
add
out
push
xor
es
leave
cld
pop
(bad)
pop
in
inc
inc
adc
out
sbb
xor
xchg
pop
mov
add
push
imul
dec
mov
out
xchg
add
es
mov
dec
add
sbb
inc
pushf
cmp
or
in
cli
mov
in
loop
es
inc
cs
ins
ins
pop
lods
jl
and
shl
dec
add
adc
add
mov
sahf
movs
dec
dec
hlt
fcmove
add
enter
ds
add
push
stc
dec
out
dec
ins
add
fucom
or
jne
fmul
jg
pop
add
out
(bad)
or
or
push
sbb
pop
(bad)
cmp
aad
sbb
shl
mov
mov
lods
mov
addr16
push
sub
cmp
cmp
push
scas
or
and
adc
ins
popa
popa
pop
xchg
sbb
mov
les
xor
call
and
fnstsw
(bad)
adc
sub
inc
cwde
or
jle
pop
add
jp
in
inc
outs
ins
out
adc
popa
es
sti
mov
add
mov
jb
push
pop
mov
add
scas
fstp
stc
ins
ins
test
add
outs
xlat
cmps
cs
add
fdiv
mov
xchg
movs
dec
dec
xchg
out
aaa
sbb
sbb
inc
mov
and
shr
lahf
cmp
xor
add
(bad)
add
cmp
push
call
mov
ins
loopne
xor
add
out
adc
push
add
movs
add
pop
cmps
mul
sbb
arpl
and
add
fadd
add
loopne
sub
and
cmp
loope
fistp
cmp
aam
pop
push
test
js
(bad)
sub
add
ins
push
int3
xchg
lock
popfw
ret
add
and
mov
add
or
pop
jb
and
inc
sub
xchg
xchg
xor
call
xor
mov
add
and
xchg
in
out
mov
mov
add
cld
jb
mov
mov
fidivr
push
cmp
lods
xor
or
adc
shl
jbe
(bad)
out
repz
clc
cli
loope
out
add
lods
es
outs
mov
xchg
xchg
lahf
push
inc
pop
pop
fld
dec
adc
add
mov
cmp
xor
out
push
mul
es
pop
push
cld
cld
jnp
inc
out
add
and
mov
push
xchg
add
repnz
mov
aam
ins
sbb
pop
out
into
jp
es
mov
add
ds
jl
adc
aam
sbb
lea
jne
adc
cwde
cwde
add
enter
jp
rcl
and
cmp
pop
daa
daa
loop
mov
mov
out
retf
jne
out
fwait
add
icebp
add
sbb
add
or
repnz
ds
lea
mov
out
xadd
dec
inc
cmp
popf
push
pop
loop
add
movs
adc
out
add
inc
inc
xchg
mov
out
fld
jg
lahf
retf
fwait
ins
out
mov
mov
stc
dec
sar
cmp
add
jge
test
jno
ja
cmp
xlat
in
mov
cmp
sbb
rcr
pop
loop
stc
sar
or
in
dec
add
test
xchg
dec
dec
dec
in
and
mov
add
(bad)
(bad)
pop
xor
out
inc
sbb
adc
sub
mov
jb
aad
loop
js
shl
int3
int
sbb
add
jne
(bad)
cdq
push
ins
(bad)
cmp
movs
movs
sub
out
xchg
cmp
jbe
add
jl
xchg
xor
dec
aad
es
sahf
ficomp
es
(bad)
inc
cdq
es
or
out
out
inc
and
lods
lods
gs
mov
push
and
add
in
mov
test
aaa
jbe
xchg
dec
stos
xchg
into
into
imul
ja
pop
div
jle
jae
and
jg
(bad)
(bad)
sahf
add
xor
add
das
loope
add
setbe
out
test
dec
cmp
es
cmp
ret
fwait
fwait
xor
add
pop
shld
mov
arpl
pop
mov
not
pop
push
int3
in
add
mov
cmp
and
pop
in
mov
cmp
out
rol
xchg
push
out
jae
add
push
test
jmp
es
out
fsub
(bad)
aas
and
out
add
popf
add
or
sbb
shl
add
add
and
mov
pop
popf
add
(bad)
out
retf
retf
jge
pop
out
add
jp
fadd
shl
icebp
into
hlt
xor
add
dec
add
mov
mov
adc
mov
push
imul
and
mov
inc
jmp
add
es
add
pop
pushf
leave
jg
mov
ds
test
test
out
and
lock
pop
pop
(bad)
mov
es
aas
xchg
push
push
shl
dec
out
push
or
out
jl
cmp
xor
mov
cmp
sbb
not
add
xor
fldenv
call
add
or
out
and
add
mov
pop
out
(bad)
mov
lods
(bad)
out
pop
cli
and
mov
in
pop
outs
outs
cmp
inc
psllw
scas
pop
add
jl
clc
dec
xor
es
sbb
int
add
in
jbe
shr
mov
outs
cmp
call
ret
mov
out
test
in
adc
dec
add
push
sbb
push
mov
jo
test
inc
out
adc
ror
std
(bad)
loopne
arpl
xor
add
outs
mov
lahf
out
pop
fneni(8087
es
leave
pop
das
inc
jno
jns
push
add
or
mov
sbb
(bad)
rcl
jbe
inc
out
mov
sub
call
out
add
adc
adc
xchg
push
out
and
add
fadd
cmp
adc
fiadd
add
pushf
pop
mov
ins
add
sub
xlat
out
call
mul
sbb
xchg
enter
mov
pop
test
out
xchg
pop
or
and
adc
xchg
sub
add
jge
stc
out
xor
punpckhwd
into
out
cmps
aas
cmc
push
push
aaa
adc
leave
push
es
stc
mov
ret
xchg
mov
out
xchg
cmp
cmp
mov
cmp
and
pop
push
push
pop
pop
add
jb
xor
or
out
jbe
outs
push
push
cmp
ret
sub
xor
dec
dec
xchg
jno
xchg
cmp
dec
and
fwait
sub
mov
xor
cmp
add
(bad)
dec
je
es
jb
pop
mov
cmps
sbb
lds
test
xchg
xchg
add
and
sub
in
es
in
nop
sbb
mov
mov
cld
sti
dec
adc
out
xor
or
xchg
test
lock
out
or
add
mov
mov
push
repnz
add
pop
xchg
cmp
rcl
rcl
jl
inc
out
(bad)
std
pusha
es
add
lods
es
xor
lea
pushf
pop
jp
cs
ficom
pop
pop
add
out
push
adc
scas
scas
sub
enter
push
mov
cmp
data16
mov
(bad)
out
aad
adc
inc
pop
ja
je
cmp
lods
dec
add
lods
or
xor
out
test
int
in
je
add
shl
in
add
out
cs
es
cmp
xchg
dec
xchg
test
or
in
out
cmps
xor
inc
mov
add
shr
mov
sahf
daa
daa
cmc
push
loopne
fwait
retf
dec
rcr
sbb
shr
jnp
sub
push
(bad)
fstp
jmp
pop
adc
test
mov
cmc
bound
inc
fld
out
pop
inc
pop
lods
dec
sub
add
mov
or
xchg
out
push
test
std
std
iret
sbb
jb
out
es
add
cwde
retf
sbb
mov
imul
push
or
ins
movntq
fwait
pop
nop
pop
pop
push
mov
ror
pusha
push
pop
int3
add
gs
es
ret
(bad)
loop
sbb
adc
pop
lods
adc
add
(bad)
fidivr
dec
mov
cld
data16
es
and
add
sbb
add
ret
xchg
mov
or
out
pop
in
add
jg
pop
out
xor
es
xor
retf
push
or
scas
dec
dec
mov
cmc
push
pop
out
clc
pop
add
sub
or
fdivr
push
mov
push
sbb
xor
add
and
fadd
or
enter
cmp
ins
dec
add
or
imul
jb
add
push
int
stc
mov
cmps
retf
retf
jmp
add
out
dec
test
es
js
imul
and
mov
add
call
out
pop
add
pop
pop
int3
xchg
fsubp
loope
mov
sub
inc
(bad)
in
das
das
cmps
jl
out
enter
fist
int
out
add
pop
es
dec
inc
dec
add
callw
test
add
push
pushf
pushf
sub
add
fs
cmc
xor
jb
sub
xchg
es
stos
jle
pushf
pushf
xchg
loope
dec
hlt
cmp
pop
pop
cmp
push
cdq
daa
or
xlat
jmp
test
shl
adc
jge
aam
mov
add
(bad)
xchg
(bad)
sub
sbb
enter
clc
clc
daa
add
or
call
ins
cmp
out
stos
add
mov
shr
jg
dec
pop
int
out
xlat
inc
es
cmc
mov
xchg
and
pop
jge
cwde
cwde
pop
inc
outs
es
jno
cmps
cmps
mov
add
outs
es
movs
add
push
cmp
ins
xchg
repz
xchg
push
out
adc
cmp
pop
cmps
add
push
push
adc
mov
xchg
jne
pop
dec
jno
out
mov
add
out
mov
mov
aas
sbb
neg
movs
icebp
or
mov
add
mov
fisub
mov
sahf
adc
cld
add
es
mov
xchg
div
test
repnz
mov
mov
ds
sbb
mov
bound
out
jg
add
scas
out
neg
add
out
jp
push
dec
dec
pop
add
int
scas
xor
add
adc
mov
fcomp
sub
add
lock
sbb
addr16
lea
add
mov
stos
test
leave
leave
add
cmps
dec
sbb
sub
inc
inc
movs
add
imul
xor
pop
push
out
mov
or
dec
ins
pop
int3
out
daa
sub
cmp
add
xchg
pop
xchg
cmp
(bad)
sahf
lock
xlat
mov
mov
add
add
and
aas
push
xchg
jle
lods
add
cmc
aam
jg
daa
loope
add
dec
or
add
pop
jl
es
(bad)
xchg
xchg
mov
imul
inc
inc
loopne
test
add
sub
lds
es
jb
push
movs
movs
sti
cdq
add
test
(bad)
stc
dec
into
es
cmps
and
and
out
cwde
in
je
push
repnz
lods
push
add
shr
pop
and
call
out
ins
inc
jmp
mov
and
push
in
xchg
jnp
add
or
dec
add
call
xor
es
dec
or
add
pop
aas
es
(bad)
hlt
and
sbb
adc
dec
and
adc
jbe
cdq
ss
push
push
pop
and
xchg
cld
add
pop
ins
add
push
cmp
std
out
jmp
cwde
out
add
es
cmp
or
sbb
es
enter
add
xchg
sbb
inc
call
es
inc
ret
movs
add
pop
retf
inc
cmps
xchg
adc
sbb
movs
dec
add
push
cmp
mov
add
add
mov
cwde
dec
add
push
cmp
adc
mul
dec
mov
rol
add
inc
out
out
in
jmp
js
out
add
inc
inc
out
popf
add
out
loope
mov
add
test
rol
mov
inc
inc
cmp
push
and
push
movs
sbb
and
sub
add
xchg
out
rcl
es
mov
mov
pop
add
arpl
pop
test
stc
pusha
mov
adc
add
popa
popa
je
test
mov
out
xchg
push
add
mov
scas
push
es
dec
sub
es
push
hlt
repz
jmp
cmp
movs
mov
sub
fisub
pop
nop
cdq
add
imul
icebp
icebp
sbb
dec
add
add
gs
retf
jbe
ins
call
dec
add
jo
daa
fistp
in
out
add
mov
xchg
fs
sti
add
pushf
mov
add
in
popf
popf
js
jae
out
retf
add
repnz
mov
scas
push
xor
sbb
fcomp
mov
mov
sub
cmp
loope
int3
jns
add
es
push
push
movs
loopne
es
movs
popf
pop
daa
jge
test
push
sbb
fisttp
inc
sbb
or
push
pop
(bad)
cli
in
aaa
es
adc
xor
mov
stos
stos
(bad)
out
into
add
cld
cld
out
jno
sti
jns
add
(bad)
fs
sub
fwait
add
adc
jo
add
out
jnp
mov
aas
jae
es
push
outs
fstp
mov
mov
jle
add
mov
jo
mov
add
add
push
out
inc
push
add
fs
int
or
retf
add
add
add
out
sar
cwde
add
and
or
jb
mov
add
sbb
call
jbe
cmp
int3
mov
out
inc
loope
out
pop
iret
xchg
es
lods
inc
pop
pop
xor
pop
es
(bad)
dec
dec
pop
mov
call
cs
mov
push
pushf
pushf
lods
dec
mov
push
out
add
out
pusha
ret
pop
pop
rol
sbb
push
jp
out
add
ror
jmp
stc
retf
xchg
pusha
mov
sbb
out
mov
push
es
test
dec
aaa
es
int
or
repnz
jg
cmp
in
add
pop
cmc
(bad)
out
sbb
ins
shl
int3
pusha
ss
out
imul
dec
jmp
jecxz
out
aaa
jle
mov
add
push
addr16
std
std
sub
repnz
and
lahf
lahf
add
push
push
dec
(bad)
adc
xor
or
jecxz
sbb
inc
out
jb
mov
xor
lods
das
out
xor
add
repz
out
cmp
add
sub
lods
jbe
cmps
test
push
push
jnp
jb
in
dec
push
xor
(bad)
ins
es
fnstsw
sub
call
scas
add
mov
mov
xchg
(bad)
clc
add
and
call
adc
(bad)
add
add
fisttp
in
or
mov
into
mov
add
fwait
sbb
ret
push
outs
outs
sbb
aas
out
ror
(bad)
les
loop
fdivr
je
sub
imul
add
call
cdq
cmp
pop
(bad)
or
es
es
mov
enter
dec
out
data16
pop
es
mov
adc
xchg
add
jmp
out
sti
push
mul
test
aad
movs
movs
popw
lea
add
xor
push
push
call
pop
mov
pop
pop
mov
push
icebp
dec
push
push
xor
(bad)
adc
add
and
stos
sahf
aam
rcr
test
sub
xchg
clc
or
cli
mov
jmp
add
aas
push
ss
es
sbb
mov
and
out
mov
cmp
out
sub
xor
in
mov
cli
cli
pop
rol
out
sti
xlat
dec
es
fs
xchg
add
aas
outs
outs
push
xor
mov
int
es
in
add
enter
jae
gs
(bad)
movs
loope
jp
sub
cwde
cwde
scas
sbb
ds
mov
stc
xor
dec
xor
pop
pop
mov
stos
imul
add
mov
shr
std
adc
js
jp
pop
adc
es
sub
dec
dec
test
push
or
outs
pushf
es
xor
cmc
cmc
dec
mov
cmps
lock
ins
cdq
cdq
mov
out
loop
lea
std
jbe
fcomp
sbb
enter
jmp
loop
add
jmp
push
lds
cmp
ds
out
cli
repz
cmp
sbb
iret
iret
xor
jns
dec
dec
cmp
add
stc
(bad)
test
int3
add
sub
into
outs
xor
leave
leave
add
out
mov
sbb
jo
add
out
hlt
or
push
out
add
push
cmc
ds
push
loop
es
add
mov
pop
pop
xchg
mov
lock
enter
nop
(bad)
fidivr
add
cmp
out
dec
lea
test
and
aam
add
mov
cmp
add
retf
xchg
xchg
repz
cmp
cmp
sar
outs
out
jmp
pop
mov
das
sbb
out
and
jmp
(bad)
les
addr16
out
add
mov
sbb
es
outs
cmps
jge
push
fcmovnbe
add
adc
lods
out
lock
add
add
nop
inc
es
dec
enter
retf
mov
out
leave
mov
lods
xor
mov
xor
jo
pop
das
push
mov
inc
es
cmp
into
add
mov
push
loop
jb
add
cmp
mov
mov
add
xchg
hlt
rcr
adc
adc
add
div
out
add
cdq
cdq
push
mov
push
inc
inc
int
fs
shr
push
rcl
test
add
loope
xchg
js
outs
and
add
lods
es
push
xchg
xchg
and
and
pop
mov
xchg
jmp
and
out
push
adc
sub
out
ins
ins
add
out
mov
dec
es
push
enter
cmp
shl
jmp
sbb
cld
arpl
add
inc
leave
leave
fsub
dec
add
mov
icebp
xor
call
jmp
es
push
sbb
mov
add
mov
jo
es
adc
add
cmp
mov
ja
sbb
mov
xchg
mov
(bad)
loop
fs
mov
(bad)
out
js
or
push
out
add
jns
and
jecxz
aaa
aaa
clc
ja
es
cmp
pop
fst
xchg
outs
aas
es
dec
push
mov
(bad)
pushf
pushf
mov
jbe
add
xchg
or
add
ds
add
loope
daa
pop
out
cmp
adc
clc
mov
add
mov
xor
es
leave
jp
push
push
xor
cmp
sbb
jb
mov
out
pop
xor
es
add
test
add
loop
sti
sti
scas
mov
out
add
adc
and
sbb
addr16
lock
adc
adc
das
aam
add
inc
adc
add
push
(bad)
sbb
add
add
repnz
or
add
adc
fbstp
add
pop
and
scas
pop
fdivr
push
out
out
cmp
cmps
es
lea
add
jnp
push
inc
inc
pushfw
cmp
ror
jae
movs
stc
retf
out
mov
mov
popf
xchg
stos
push
push
jmp
add
rol
inc
pop
mov
jno
add
shl
shl
jl
mov
out
push
adc
sbb
add
pop
pop
loopne
inc
es
cwde
sar
and
sbb
(bad)
into
into
frstor
pop
out
test
scas
push
sbb
add
aaa
retf
inc
inc
and
add
cmps
out
add
jecxz
loop
out
fmul
aam
push
dec
mov
pop
xor
es
stos
and
das
add
jmp
inc
out
mov
ss
out
sbb
push
sbb
cmps
repnz
and
push
out
push
mov
inc
inc
cmp
out
jnp
push
sub
cmp
out
pop
cmc
ret
loopne
(bad)
mov
and
dec
nop
out
outs
add
div
hlt
out
adc
es
clc
mov
es
and
push
in
or
cmp
lock
dec
shl
ror
outs
outs
add
stos
stos
adc
movs
inc
add
sti
cli
jb
cmp
mov
out
sub
out
cmps
mov
es
pop
jp
add
(bad)
ret
es
retf
jo
ja
pusha
mov
das
or
inc
sbb
add
mov
daa
pop
pop
xor
push
lds
inc
std
std
jl
push
es
data16
xlat
xlat
ins
test
dec
je
pop
sbb
retf
lock
out
mov
pop
mov
or
sbb
call
out
scas
xchg
ins
fld
add
fst
retf
adc
(bad)
out
es
in
outs
mov
pop
cdq
inc
cmps
push
sub
xchg
xchg
adc
es
nop
cmps
(bad)
mov
sti
sti
shl
test
je
loopne
sub
lods
test
cdq
cdq
xor
fcom
out
js
push
es
add
jmp
add
inc
es
js
mov
hlt
or
cwde
(bad)
imul
repnz
es
retf
(bad)
paddd
(bad)
xchg
jle
or
sar
es
or
push
push
lods
(bad)
jp
(bad)
(bad)
jp
add
call
jno
std
es
inc
out
sub
xlat
xor
out
pushf
xor
adc
inc
cmp
jle
sbb
add
outs
sbb
mov
jmp
ret
or
and
adc
xor
jo
jbe
test
jmp
fs
xchg
xchg
mov
pop
inc
inc
add
cld
add
ficomp
fcomi
cdq
hlt
mov
es
push
xchg
push
or
dec
dec
icebp
mov
add
retf
push
out
cs
jmp
cmp
out
mov
mov
out
js
dec
rol
push
out
sub
mov
jne
add
in
in
inc
pop
dec
out
ss
cmps
cmps
sbb
pop
out
sub
fs
add
es
push
xchg
out
js
(bad)
cmp
out
std
js
es
scas
add
fadd
scas
outs
es
fwait
add
lock
inc
aad
aas
bound
out
jecxz
leave
mov
out
les
imul
out
xchg
xchg
in
add
and
add
imul
sub
adc
es
stc
test
and
aam
int
js
adc
pop
fwait
lds
xchg
xchg
inc
jp
pfsub
out
jbe
xor
jge
(bad)
cld
ss
or
ret
lods
cmc
popa
out
daa
add
es
jnp
fisttp
jge
add
shl
repnz
fwait
fwait
jl
dec
es
add
mov
xchg
xchg
call
popa
ss
out
jnp
ja
clc
push
pop
dec
out
sti
pop
adc
push
fs
add
mov
cs
hlt
hlt
adc
add
test
call
cmp
add
out
xor
xor
mov
outs
jl
add
movs
stc
aas
xchg
stos
stos
jmp
test
sahf
xor
cmp
movs
jb
out
pop
dec
fldenv
push
aaa
hlt
and
bound
add
adc
mov
rcl
add
inc
loopne
out
sbb
dec
imul
jbe
jmp
movs
lock
push
out
add
out
push
out
dec
prefetch
mov
ins
loopne
shr
mov
jnp
add
shl
xor
mov
mov
leave
cmp
pushf
push
add
rcl
ja
in
in
fcomp
out
xchg
push
sub
cmp
sbb
or
pop
loope
or
lahf
lahf
add
and
outs
dec
xlat
out
xchg
add
test
das
cmp
mov
jge
sub
popf
sahf
movs
add
xor
add
mov
scas
out
add
xor
je
(bad)
mov
sbb
es
hlt
dec
cdq
cdq
sahf
mov
add
mov
lds
cmp
rcl
add
es
jne
push
into
into
popa
add
out
(bad)
jmp
or
and
push
xor
add
add
out
xchg
pop
imul
aam
out
jno
pop
es
call
push
sub
out
loopne
shr
ins
add
shl
jnp
mov
repz
pop
mov
add
mov
out
dec
xor
clc
clc
pop
or
out
cmp
dec
es
cmc
pop
call
add
inc
out
jae
or
shl
add
adc
loope
pushf
bound
out
add
sub
fs
es
rcr
pop
iret
iret
add
xchg
out
js
pop
es
add
aam
mov
mov
pop
cmp
jge
add
lahf
pop
outs
dec
xchg
js
push
add
pop
cwde
int
add
dec
out
inc
jl
stos
(bad)
cmp
loope
and
cmc
mov
push
mov
and
lock
jae
les
pop
jnp
clc
add
mov
pushw
and
adc
call
adc
mov
inc
inc
cmps
lahf
pop
es
ror
mov
scas
and
sbb
dec
xor
out
add
mov
mov
cs
cmps
add
xchg
xchg
and
out
fstp
add
fmul
inc
loop
out
pop
xchg
es
cld
fidiv
sub
cmps
add
es
inc
add
cmc
loopne
cmp
out
add
es
shr
pop
xchg
add
es
jb
add
cmp
xor
cdq
xlat
mov
add
adc
mov
add
lods
js
sbb
out
rcr
loop
jne
or
add
data16
out
add
out
mov
jno
add
pop
pop
pop
add
out
sub
cs
sbb
repz
cli
out
dec
fisubr
mov
add
push
cmps
inc
out
pop
mov
add
pop
push
sbb
adc
add
fdivr
push
fstp
mov
in
and
dec
gs
inc
add
ss
xchg
jno
or
push
push
test
xchg
cmp
out
add
sub
adc
xlat
out
cmp
jae
cmp
ss
mov
ja
cmps
(bad)
or
add
add
push
loop
cdq
jg
push
lock
out
add
xchg
es
xchg
sub
es
outs
inc
pop
and
mov
jecxz
jb
mov
dec
js
add
or
outs
pop
push
aam
push
sbb
and
repnz
mov
stc
or
xor
mov
in
add
out
(bad)
cld
push
or
add
cmp
inc
rcl
cmp
es
stc
imul
clc
clc
aad
or
data16
shl
jl
add
jne
jnp
adc
add
mov
inc
fcomp
mov
addr16
ins
add
out
fimul
push
add
enter
es
xchg
adc
es
in
imul
adc
sub
(bad)
out
cmp
inc
push
out
push
jp
add
fldenv
xchg
rol
xchg
add
mov
call
sub
dec
cld
xlat
xlat
pop
scas
add
test
lods
loop
jmp
(bad)
out
sbb
mul
pop
in
ret
xchg
aam
pop
pop
sahf
dec
aas
out
xor
or
out
test
add
add
movs
icebp
and
pop
mov
cmc
fsub
jecxz
sub
outs
adc
cli
xchg
add
cmp
jno
push
pop
retf
das
jmp
sub
test
out
les
push
adc
in
sti
sbb
and
ja
out
sahf
in
es
add
xor
cmp
ins
xor
rcr
inc
add
sub
lds
mov
out
int
push
in
mov
inc
loop
dec
mov
jo
stos
add
cmp
out
les
jmp
add
xchg
hlt
jle
add
and
in
lahf
clc
clc
call
push
cmp
es
nop
mov
sahf
iret
add
xchg
cmps
cmp
and
push
enter
mov
mov
inc
and
jge
ja
add
inc
mov
jno
(bad)
es
enter
pusha
in
xchg
xchg
add
sbb
es
jmp
fist
and
push
iret
out
pop
push
and
jmp
es
jmp
test
lds
push
xor
sbb
cwde
es
mov
adc
arpl
out
(bad)
add
cmc
popf
popf
pop
and
sbb
xchg
in
test
pop
mov
or
scas
sbb
push
out
cmp
data16
out
adc
mov
add
push
cwde
add
pop
and
ins
ins
pop
pushf
mov
add
retf
sti
add
(bad)
ffree
ret
out
shl
mov
aam
inc
jge
dec
add
or
call
aaa
aaa
xchg
retf
cmp
push
icebp
icebp
or
adc
push
addr16
xor
in
lea
mov
push
push
in
shl
xor
mov
add
fwait
les
shr
movs
mov
fiadd
inc
sbb
enter
add
nop
inc
lahf
lahf
sar
push
out
add
and
xchg
add
cdq
add
out
and
and
mov
into
into
fstp
cmp
daa
jns
jnp
pop
dec
out
add
aas
(bad)
out
cld
add
jno
aad
jl
cli
mov
add
arpl
inc
adc
pop
popf
pop
lahf
out
hlt
loopne
sub
jb
iret
xor
jnp
mov
popf
loopne
pop
pop
call
in
es
xchg
in
dec
pop
pop
adc
fdivr
outs
sbb
add
out
cmp
pop
adc
out
aad
aas
loopne
adc
out
jmp
sbb
xor
and
mov
cmp
push
add
out
fimul
xchg
sbb
add
es
daa
mov
add
shl
scas
out
jp
add
pop
stc
es
ds
add
es
xchg
daa
push
pop
pop
dec
mov
jo
out
(bad)
es
add
movs
movs
jl
dec
out
popa
add
xor
sub
pop
sbb
dec
inc
out
inc
shl
(bad)
test
push
iret
adc
pop
sub
es
mov
mov
pushf
add
cwde
imul
mov
add
xor
jl
add
sub
clc
inc
inc
push
sub
add
out
xor
jne
cdq
sar
(bad)
cmp
movs
push
push
repz
ins
ret
dec
push
out
pop
int
es
fisttp
sbb
in
add
out
fldenv
jae
sbb
pop
out
xchg
es
and
inc
add
dec
add
mov
out
sub
(bad)
cmp
inc
ror
add
loopne
je
and
(bad)
push
push
pop
sub
or
cmps
int3
push
fldenv
mov
in
xchg
js
lock
mov
add
push
inc
into
sbb
mov
adc
ror
mov
bswap
out
out
shl
jl
out
mov
jo
int
pop
retf
neg
pop
xchg
nop
nop
daa
sbb
aad
inc
iret
repnz
or
lods
pop
pop
and
mov
das
xchg
icebp
dec
dec
mov
push
out
addr16
(bad)
(bad)
jb
add
std
das
pop
loop
sub
or
js
ret
add
push
out
mov
into
xor
es
jmp
dec
dec
adc
xor
popa
xchg
xchg
les
pop
(bad)
arpl
sbb
movs
shr
mov
jno
icebp
test
add
sbb
or
es
sar
out
out
jg
jno
loopne
lea
imul
mov
pop
add
adc
scas
shr
int
loope
out
in
mov
aam
out
ins
jle
add
shl
inc
and
push
add
push
mov
ret
in
popf
fs
adc
out
push
push
scas
xor
loope
daa
out
and
add
rcr
inc
loopne
es
add
jno
add
jne
cmps
mov
out
leave
inc
shl
(bad)
xor
or
sub
pop
inc
cmp
fsub
icebp
and
add
out
loopne
or
out
pop
jno
sbb
out
add
shl
movs
jbe
outs
xchg
add
scas
cdq
pop
pop
cld
jmp
test
out
loop
xchg
repnz
into
out
dec
loope
es
add
mov
jle
pushf
out
cmps
jecxz
pop
sub
jo
fcmovu
and
add
jmp
sub
(bad)
aad
xor
out
(bad)
jo
add
lock
mov
adc
es
fadd
add
push
imul
repz
pop
add
sub
xchg
and
leave
out
jmp
add
cli
cmp
pop
add
movs
stc
jbe
pop
js
out
add
es
ins
push
add
inc
daa
ret
ret
sar
hlt
out
mov
add
push
mov
jne
out
es
repz
adc
test
jecxz
mov
hlt
std
out
xor
clc
jbe
out
inc
out
loope
add
push
iret
ret
pop
dec
dec
push
xor
add
mov
ins
out
test
hlt
out
xchg
retf
mov
add
mov
mov
pop
push
jg
pop
pop
add
inc
out
es
jo
lock
nop
push
add
cmp
and
add
out
sbb
xchg
out
hlt
aam
add
push
dec
es
pop
ds
es
add
and
pop
not
cli
dec
dec
out
sbb
sbb
adc
push
xor
push
es
sbb
add
mov
leave
dec
cli
es
out
imul
add
mul
xchg
or
pop
rol
lahf
and
xor
gs
mov
add
adc
mov
std
add
aam
push
jae
es
inc
jne
imul
inc
add
pop
sbb
jbe
das
push
fld
mov
jno
rcl
pusha
cli
out
out
adc
or
pusha
out
fldenv
fiadd
pop
loopne
jb
test
or
fdiv
daa
daa
pusha
dec
adc
sbb
push
dec
mov
test
in
hlt
add
mov
jmp
into
or
xor
mov
mov
fsubr
aaa
mov
add
pop
inc
fsub
rcr
push
mov
hlt
imul
std
outs
into
into
pop
and
out
stc
and
es
in
(bad)
(bad)
add
enter
sub
dec
xor
sbb
add
loope
sub
test
mov
sbb
mov
inc
es
adc
push
and
xor
jb
add
movs
sub
out
cmp
es
aaa
mov
lods
inc
shl
repnz
repnz
cmp
xchg
aad
out
fst
lahf
lahf
fist
out
sbb
sub
hlt
cmovbe
xchg
inc
add
jmp
add
dec
fs
cmps
cmp
push
mov
cmp
test
and
inc
icebp
pop
xchg
out
mov
mov
add
add
adc
push
jge
cmc
fistp
out
(bad)
mov
es
mov
movs
jo
ss
imul
popfw
popf
mov
pop
out
ret
loop
cdq
cmps
jp
push
fs
push
out
push
add
gs
lds
dec
ds
es
pop
cmps
sbb
pop
pop
pop
jge
add
mov
stos
sub
hlt
hlt
enter
dec
add
add
xchg
call
std
in
es
cmp
adc
or
inc
aad
es
jmp
add
shl
enter
into
ins
ins
mov
jecxz
scas
clc
cmp
popf
test
fdiv
inc
sub
sar
out
xchg
lods
mov
adc
(bad)
movs
add
pop
pop
or
and
cmp
call
jl
mov
out
popf
pop
out
pop
movs
add
(bad)
sub
ja
pop
push
int3
xchg
cmovbe
jbe
xlat
xlat
sar
out
dec
adc
into
outs
in
in
xor
in
adc
ficomp
cmp
shl
sbb
fcomip
mov
cmp
sbb
push
retf
iret
xor
pop
pop
pusha
test
xor
and
fcom
fiadd
xlat
retf
or
jmp
xor
ds
arpl
or
ret
inc
push
jae
sub
test
jecxz
mov
icebp
adc
cld
and
es
jge
out
loopne
out
jno
or
fs
dec
fsub
xor
test
cmps
cmps
add
cmp
and
out
push
add
dec
xlat
xlat
pop
sahf
nop
rol
out
in
in
mov
add
out
jl
xor
and
aas
out
lods
and
dec
mov
jo
sbb
rcl
aam
push
out
out
(bad)
in
add
(bad)
xchg
and
push
add
inc
inc
ficomp
out
add
mov
in
mov
dec
aas
and
xchg
cmc
add
test
or
lahf
lods
es
pop
aaa
xor
jl
add
xor
les
cs
pop
es
icebp
add
clc
inc
(bad)
xlat
add
add
sar
or
out
inc
add
mov
out
(bad)
add
pop
and
xchg
(bad)
call
and
pop
mov
mov
out
cmp
pop
add
ss
cdq
cdq
(bad)
ins
jmp
lods
sub
mov
ds
adc
or
jo
pop
out
cdq
push
aam
test
jb
xor
pop
add
inc
out
dec
and
popf
add
repz
dec
ds
add
aaa
mov
fs
popa
jno
lgs
out
ins
add
div
mov
mov
pop
inc
mov
or
movs
rol
es
nop
cli
push
pop
add
out
outs
adc
or
ror
xor
mov
cwde
sbb
push
add
es
sbb
nop
sbb
mov
cmps
xchg
es
leave
xlat
add
jmp
jmp
add
push
push
dec
mov
sbb
fstp
cmps
push
out
add
movs
movs
mov
jle
adc
daa
mov
(bad)
sub
cmc
push
es
das
in
add
pusha
mov
or
int3
int
jp
inc
ret
pop
aaa
es
jmp
loopne
movs
or
xor
and
push
dec
dec
in
aad
(bad)
fdivr
cwde
cwde
repnz
out
jbe
pop
pop
pop
cmp
jns
push
inc
inc
and
shl
lock
rcr
jge
out
fadd
(bad)
enter
pop
out
jae
cmp
inc
add
mov
popa
popa
inc
popf
out
mov
xchg
jg
and
sbb
xchg
mov
mov
lods
inc
inc
rcr
ds
out
adc
fdivr
cmp
add
arpl
or
outs
(bad)
ins
add
aad
inc
jo
out
mov
(bad)
lsl
ret
fcmovu
mov
and
(bad)
sbb
retf
mov
les
ins
inc
out
addr16
jp
mov
mov
inc
jne
loope
and
es
pop
push
push
int3
add
sbb
fdivr
xor
add
xchg
or
es
sbb
mov
and
sbb
stc
jo
add
sub
mov
xchg
(bad)
jmp
sub
pop
mov
enter
out
mov
sub
outs
out
mov
cmp
inc
jno
pop
enter
xchg
add
imul
pop
mov
jecxz
inc
inc
add
inc
es
(bad)
lahf
cmc
dec
dec
js
fisub
(bad)
cmp
addr16
adc
push
push
jl
add
sbb
test
xor
pop
mov
add
addr16
out
jno
sbb
retf
out
sub
add
jecxz
sbb
mov
mov
enter
out
xchg
es
sub
add
aad
iret
mov
out
add
dec
rcl
adc
mov
not
push
es
loope
jl
adc
into
add
loopne
and
out
hlt
stc
inc
add
icebp
sbb
movs
es
cmp
add
loope
jge
pop
mov
sar
div
add
dec
mov
pusha
les
jne
jp
add
sbb
popf
jl
div
pop
xor
es
inc
repz
dec
(bad)
int3
add
es
and
out
cmp
mov
popf
test
add
cwde
push
adc
aad
add
pushf
movs
call
rol
jmp
pop
push
dec
dec
or
mov
mov
add
sbb
fwait
dec
dec
sar
es
sti
scas
add
add
cmp
xchg
xchg
dec
add
ds
out
jl
or
test
adc
sbb
lds
mov
mov
rcl
dec
sahf
jo
stos
inc
add
add
and
jns
dec
sub
out
jnp
add
std
jbe
daa
adc
fcmovu
rol
scas
pusha
xor
push
mov
lods
mov
ds
or
hlt
xor
out
mov
mov
ds
out
jmp
js
dec
rol
adc
jle
cmc
dec
test
adc
sub
(bad)
stc
add
or
add
and
in
add
frstor
ss
xchg
es
xchg
or
xchg
add
ror
adc
cmp
jecxz
add
jp
out
xor
add
(bad)
out
call
add
jno
leave
outs
outs
popa
dec
push
out
add
inc
arpl
out
(bad)
in
add
out
hlt
rol
aad
or
or
add
dec
leave
leave
(bad)
mov
iret
dec
out
pop
and
sub
add
mov
pop
mov
add
not
and
jg
movs
out
mov
xchg
fbstp
adc
adc
inc
inc
and
setl
out
mov
cmp
inc
out
inc
push
jns
ds
xchg
xor
dec
mov
mov
iret
jg
retf
out
jmp
mov
addr16
cdq
jnp
add
push
mov
and
push
adc
hlt
add
stc
leave
shr
fcmovu
fs
add
push
test
mov
out
push
cmp
es
mov
js
stc
add
retf
lods
retf
jbe
daa
nop
add
inc
xchg
mov
mov
fistp
mov
push
ret
add
or
xor
sbb
or
mov
dec
es
add
and
cmp
out
add
add
or
inc
js
add
lods
push
push
jbe
shl
add
rdtsc
xor
jb
ficom
add
repz
aam
xor
out
adc
in
xor
pusha
pop
sahf
out
adc
sub
scas
push
(bad)
sbb
add
lock
fldcw
int3
adc
mov
cld
sub
iret
add
fbld
jno
repz
(bad)
es
loope
add
hlt
dec
scas
add
out
repnz
push
add
inc
mov
or
or
out
pop
add
test
xor
pop
push
mov
sbb
fwait
xor
fst
push
add
cdq
cdq
imul
scas
add
pop
sti
xor
dec
dec
loope
in
add
mov
add
out
push
adc
pop
xlat
repnz
add
inc
call
bound
adc
mov
dec
push
clc
xchg
test
and
add
arpl
ja
es
jle
add
xor
repnz
jb
add
into
out
add
and
cmps
pop
(bad)
les
iret
push
out
cmp
add
and
xor
and
data16
adc
adc
retf
out
jo
repz
or
out
lea
cmp
aam
(bad)
out
je
add
aad
cli
adc
(bad)
pop
sahf
fild
add
out
pop
stc
jmp
enter
imul
call
mov
add
xor
and
cmps
lock
add
cwde
inc
xchg
xchg
xchg
or
loopne
adc
loop
lock
daa
push
hlt
hlt
js
jmp
ror
add
out
inc
xchg
in
cmp
push
ds
dec
add
mov
call
add
add
fucom
inc
or
mov
xor
mov
or
push
out
add
fs
xchg
adc
and
push
adc
pusha
loop
cmp
adc
push
push
bound
es
cmc
add
mov
xor
out
add
or
and
xchg
jns
loopne
call
xchg
push
push
loop
add
outs
scas
pop
gs
or
add
pop
pop
out
add
xlat
aad
pop
pop
call
scas
add
pop
pop
pop
xchg
add
inc
ja
cmp
(bad)
sub
shl
add
(bad)
shl
sti
add
cmp
mov
add
xchg
inc
inc
mov
ins
xchg
xchg
es
rol
and
sti
mov
xor
scas
inc
mov
sbb
push
shr
mov
out
mov
(bad)
xchg
or
pop
mov
out
pop
add
mov
add
test
(bad)
cmp
aas
push
pusha
mov
out
sbb
xchg
out
sub
jge
mov
cwde
add
or
(bad)
in
rcl
rol
es
shr
mov
retf
inc
out
movs
pusha
das
jge
loopne
dec
out
adc
lods
es
adc
sti
mov
clc
xchg
cmp
pop
idiv
xchg
es
cmp
cmps
jns
es
(bad)
sbb
ds
repz
packssdw
push
jno
sbb
pop
mov
out
sti
adc
aas
mov
scas
inc
retf
es
(bad)
stc
stc
movs
shl
mov
push
jae
cmp
add
fcmove
ret
out
popf
and
je
or
loopne
es
add
push
es
test
std
std
and
jae
mov
hlt
into
inc
out
dec
outs
in
data16
add
dec
stc
add
jns
hlt
mov
xor
hlt
sti
add
jnp
repnz
or
nop
nop
mov
xchg
test
cld
cld
adc
add
jo
or
es
adc
add
and
nop
nop
mov
add
out
pop
and
inc
or
push
sbb
add
out
int
inc
jns
xchg
add
ins
jnp
dec
(bad)
jmp
enter
jg
add
ret
dec
je
mov
jns
add
icebp
loope
fwait
pushf
shr
out
lock
fidiv
pop
imul
es
icebp
adc
pop
pop
add
stos
out
sub
pop
nop
nop
add
pop
out
lods
(bad)
add
dec
jecxz
mov
add
in
sti
add
arpl
mov
xor
pop
add
push
push
repnz
inc
inc
mov
add
inc
push
add
xor
push
out
clc
imul
pop
pop
stos
push
mov
mov
mul
es
add
iret
lods
pop
push
pop
xchg
jp
jl
out
jo
pop
es
jle
ficom
adc
scas
xchg
dec
repnz
inc
inc
inc
lock
out
adc
pop
pop
ja
xor
popf
pop
pop
es
lods
jge
inc
pop
fmulp
mov
out
or
in
out
sar
jle
fiadd
daa
es
imul
adc
push
int3
add
and
test
mov
hlt
es
jo
add
cmps
or
cld
scas
out
add
ds
out
jbe
loopne
add
mov
sti
sti
out
ret
add
inc
sub
jnp
test
mov
mov
(bad)
ins
(bad)
(bad)
pop
fwait
add
pop
jmp
cmp
bound
add
cmc
and
adc
mov
out
cwde
imul
add
sbb
xor
xchg
jnp
rol
and
pop
popa
into
xchg
inc
inc
cmp
movntps
(bad)
or
xor
add
jle
sbb
add
ja
imul
mov
es
imul
adc
scas
cli
jne
retf
add
es
push
es
out
sub
rcl
pop
mov
jmp
mov
retf
jmp
les
mov
and
arpl
loope
hlt
hlt
mov
adc
xchg
sbb
jp
add
ror
out
dec
shr
call
es
gs
xor
jnp
mov
cmp
mov
cld
jge
add
fs
jae
stc
mov
add
mov
fistp
add
retf
mov
mov
shl
rol
push
into
out
sub
and
add
push
xchg
or
(bad)
jmp
xchg
cmp
xchg
mov
shl
out
adc
add
lods
sbb
adc
jge
out
je
daa
test
out
cmp
ins
add
push
push
push
ret
es
cmp
adc
es
fnstsw
jecxz
xchg
xchg
(bad)
sar
hlt
add
adc
add
out
out
jmp
out
ins
ficom
jae
add
out
dec
add
jo
add
mov
shl
jp
xchg
adc
loopne
pop
jno
jns
sti
out
nop
or
xchg
add
loopne
mov
popa
loop
arpl
and
fld
call
sbb
es
cmc
mov
pop
arpl
xchg
shl
adc
add
retf
sub
inc
shl
push
add
js
mov
jb
sub
jno
sbb
fsubr
or
mov
out
ds
es
das
xor
dec
dec
fwait
shl
es
push
(bad)
sub
xor
aad
add
and
xchg
iret
add
imul
pop
adc
jno
sbb
out
dec
add
xchg
or
es
inc
sbb
shl
or
fdivr
rol
es
movs
adc
rcr
mov
add
push
bound
stos
test
es
add
jae
or
dec
jnp
test
aas
out
pop
das
loopne
outs
xor
stos
add
stos
psllw
or
les
fadd
mov
aas
pop
lock
pop
add
mov
mov
test
out
data16
out
push
int
rol
push
and
push
cmp
inc
ret
ret
sbb
pop
xor
mov
xchg
push
pusha
mov
inc
and
dec
pushf
es
inc
rcr
push
push
jmp
cmp
pop
mov
out
rol
out
es
fidivr
stos
jb
es
sahf
or
rcr
jp
jg
std
out
fisub
or
dec
jmp
out
pop
jae
lea
add
in
es
mov
mov
mov
out
ins
add
adc
fld
es
not
aas
add
out
mov
clc
es
push
shl
es
fdiv
ds
lea
mov
outs
add
adc
loop
mov
out
aad
in
loopne
out
movntq
out
push
or
out
(bad)
mov
sub
es
fdivr
jne
sub
out
mov
imul
out
mov
mov
mov
mov
cwde
ins
add
dec
add
out
xor
loope
pop
pop
inc
xor
ja
out
cmp
and
pop
pop
jle
add
ficomp
sbb
add
shl
mov
fs
mov
sub
mov
cld
xor
xor
les
out
stc
add
sub
std
iret
int3
add
mov
out
fsubr
add
enter
cwde
mov
jg
add
add
sbb
pop
jmp
add
jno
aaa
mov
outs
outs
mov
mov
add
xchg
pusha
mov
es
add
outs
outs
jp
fisub
ins
test
add
inc
out
jnp
jmp
and
scas
ss
or
add
dec
mov
jle
(bad)
sub
mov
and
adc
jb
es
sbb
in
int
xor
dec
out
loope
mov
movntq
movs
lods
loopne
rol
jo
icebp
and
in
out
inc
shl
mov
jp
fadd
jae
or
imul
xor
add
es
xor
xchg
add
mov
addr16
pushf
add
jae
popf
xlat
and
push
inc
loopne
sub
js
out
out
mov
lods
cmp
(bad)
aam
div
outs
mov
cld
cmps
mov
add
fst
rcl
mov
pop
xchg
xchg
mov
xor
mov
arpl
(bad)
add
cmp
outs
pop
sub
dec
out
push
inc
aas
fs
(bad)
add
mov
(bad)
or
clc
out
bound
out
es
sbb
add
push
lods
(bad)
out
ret
dec
dec
or
sbb
jo
loope
jb
mov
out
in
out
add
and
out
aad
push
add
jmp
movs
adc
lods
add
mov
add
daa
add
or
inc
out
xchg
ret
cmp
inc
inc
add
jmp
aad
pop
mov
and
push
es
adc
add
leave
pop
mov
out
inc
add
adc
out
inc
je
cmps
cmps
add
arpl
pop
or
int3
xor
retf
cmp
sbb
jmp
cmp
add
(bad)
lea
out
cld
add
sbb
jbe
sbb
loopne
scas
scas
add
mov
sub
push
and
xor
daa
xor
jecxz
add
jge
mov
cmp
pop
push
push
in
push
mov
pusha
sti
xchg
out
mov
add
or
imul
stc
cwde
(bad)
les
jp
lea
jnp
out
sahf
call
out
jo
sbb
out
sbb
xchg
es
or
or
int
aaa
jp
aas
out
stos
retf
movs
add
mov
xor
jne
add
mov
fnstsw
loope
es
jae
es
sbb
std
inc
inc
test
retf
xor
add
add
pop
pop
out
inc
hlt
scas
or
and
add
jae
add
mov
cmp
dec
es
add
pushf
pushf
(bad)
mov
es
sub
fisub
xor
rcl
es
arpl
xlat
mov
scas
scas
cmp
mov
inc
rcl
fiadd
es
inc
mov
jo
or
or
mov
add
push
psraw
(bad)
pop
adc
jg
jmp
loopne
int
pop
iret
xor
(bad)
shl
pop
test
add
pop
out
out
js
mov
add
mov
xor
loop
add
es
mov
es
pop
pop
pop
mov
cmp
sub
lods
and
popf
es
icebp
mov
pmulhuw
or
inc
stos
cmp
add
movs
and
repz
ret
add
mov
sbb
mov
sub
add
cdq
(bad)
fmul
scas
xor
or
jle
xchg
sti
add
out
xchg
out
enter
or
fcom
xor
in
out
out
das
mov
mov
dec
ror
push
mov
pop
inc
pop
es
sub
and
cmp
es
xchg
add
jp
call
push
cs
add
push
inc
cmp
(bad)
add
aam
loope
in
out
jns
add
lods
xor
mov
push
jnp
mov
pop
pop
sbb
add
int
fadd
aam
mov
out
push
add
mov
cmp
call
push
mov
cld
add
les
fdiv
add
in
dec
adc
add
mov
int3
(bad)
(bad)
xchg
inc
loop
mov
add
pop
dec
dec
movs
das
add
retf
ja
jns
jae
in
ins
add
es
add
sub
pusha
mov
add
fdivr
cld
xchg
or
js
add
test
enter
fs
adc
mov
add
retf
popf
or
aas
sar
out
cmp
add
das
inc
or
ror
test
int3
(bad)
aaa
jo
cmp
fcomp
push
sub
es
pop
aas
js
cwde
int3
jbe
es
(bad)
and
add
ss
xchg
pop
push
out
adc
or
out
mov
cli
nop
nop
mov
add
es
jecxz
add
sbb
jne
and
jl
out
fadd
ins
gs
out
push
movs
add
out
ficomp
out
mov
in
sahf
sahf
jbe
lods
out
xor
pop
and
mov
es
add
sub
add
mov
pop
pop
scas
loopne
mov
cmp
les
es
push
inc
aas
aas
fiadd
enter
movs
repnz
sub
inc
in
es
xor
inc
cs
fisttp
or
rcr
out
add
push
dec
out
loop
dec
es
add
fld
add
xlat
or
out
jp
inc
add
pop
add
mov
and
out
js
add
pushf
ins
mov
fst
inc
shl
sbb
es
add
jmp
add
jecxz
adc
cmp
cmp
jmp
faddp
out
push
loopne
es
xchg
or
(bad)
sbb
adc
pop
pop
fimul
es
mov
add
adc
xor
idiv
arpl
ins
pop
out
popf
jo
es
inc
sbb
iret
(bad)
rcl
mov
cmp
xchg
push
frstor
movs
mov
or
out
add
inc
sbb
add
out
pusha
cmp
mov
pop
jb
in
rcl
dec
sub
and
sbb
iret
jne
pop
xlat
mov
es
add
mov
mov
add
es
cmp
bound
add
out
test
lods
es
xor
and
jns
or
inc
out
lock
dec
push
jl
pop
out
mov
jmp
cli
es
jb
add
dec
jmp
fstp
and
stos
out
add
and
out
xor
scas
es
popf
xor
jp
mov
mov
sbb
dec
dec
(bad)
out
imul
sbb
mov
add
cmp
push
add
adc
stc
inc
std
std
and
push
out
mov
dec
adc
add
pop
out
add
lock
ins
add
(bad)
nop
out
clc
or
cdq
in
out
add
ret
ret
xlat
mov
cwde
fldenv
add
pushf
and
xchg
jne
pop
es
js
xor
repz
dec
pop
pop
cmp
ja
inc
icebp
icebp
mov
add
sbb
cmp
mov
shr
add
cmc
mov
adc
enter
in
cmps
int3
data16
out
add
dec
es
out
xchg
call
sahf
(bad)
call
push
push
or
aam
leave
out
iret
inc
cli
es
jge
sbb
and
or
ins
mov
popa
inc
jle
adc
int3
in
add
inc
pop
imul
es
xchg
into
int
xchg
rol
test
es
add
loop
mov
outs
outs
inc
and
out
push
inc
es
pop
xor
pop
pop
ss
es
cmc
data16
stc
retf
cmp
jne
sbb
mov
sbb
dec
add
enter
cs
popf
outs
stos
stos
add
(bad)
(bad)
xlat
scas
out
xor
add
dec
sub
or
cli
mov
retf
mov
lahf
push
sahf
and
hlt
aas
les
movs
sar
add
cmp
movs
out
pop
test
mov
out
out
jle
aas
es
jbe
fs
leave
sub
mov
add
movs
pop
mov
or
jge
add
loope
and
pop
adc
xor
add
nop
out
jle
fadd
add
add
cmp
out
into
out
mov
daa
jne
jl
loopne
test
int3
or
sbb
lods
push
inc
es
xchg
outs
adc
repnz
add
pop
ror
scas
popa
pop
pop
add
sbb
add
repz
dec
mov
jbe
pushf
jmp
out
mov
push
sti
sti
push
fldenv
lds
es
add
lock
arpl
dec
out
jmp
mov
cmp
test
daa
daa
add
cli
clc
shl
add
repnz
les
mov
add
mov
jne
pop
std
es
push
xchg
xchg
jmp
rcl
inc
in
out
int
jg
bt
out
sbb
cmc
ret
mov
movs
xchg
(bad)
add
rol
jns
push
mov
es
fs
add
and
aad
fdivp
jle
out
jnp
pop
test
scas
sub
imul
push
daa
fs
ins
inc
sahf
pop
out
sbb
jle
mov
cmp
test
mul
cli
or
push
push
add
std
out
mov
iret
add
test
cmp
pop
inc
push
in
xchg
stos
add
out
ficom
add
xor
out
push
sub
es
nop
ror
xlat
xlat
fld
es
push
out
scas
scas
jp
pop
es
sub
pusha
pushf
cmps
es
inc
mov
dec
addr16
push
int3
dec
es
outs
jp
add
sbb
bound
out
mov
add
sub
push
rcl
xor
clc
jg
pop
out
dec
push
das
es
mov
pop
pop
(bad)
mov
cmp
sbb
and
pusha
sbb
nop
add
jmp
movs
cmp
push
icebp
mov
jmp
lock
jbe
jge
es
into
fimul
or
pop
and
fdiv
sub
sbb
push
sbb
add
dec
mov
cmp
out
rcl
sub
fdivr
stc
add
inc
inc
rol
out
rcr
repz
pop
pop
arpl
or
xor
(bad)
out
or
add
sbb
adc
je
and
xlat
daa
mov
add
es
jb
dec
xchg
int
call
cwde
cmp
popa
cmp
sbb
test
cmp
add
out
mov
in
icebp
out
xor
add
cmp
(bad)
mov
out
out
dec
fcmove
ficom
push
or
ret
and
aas
mov
outs
(bad)
add
mov
ss
popa
pusha
and
mov
add
xor
jmp
inc
inc
sub
xchg
out
fidivr
mov
push
out
or
aas
aas
pmaxsw
lahf
mov
cld
rol
retf
ret
cs
dec
mov
mov
pop
add
call
xchg
out
test
pop
popa
popa
test
out
jg
pusha
adc
add
out
xchg
inc
inc
verw
mov
out
cwde
mov
out
and
(bad)
xchg
(bad)
out
in
and
and
aas
pop
pop
cs
xlat
in
in
(bad)
out
sbb
mov
ret
test
out
fadd
stc
stc
data16
out
scas
add
into
push
retf
retf
add
aaa
rol
es
mov
es
push
push
sbb
popa
out
add
shl
jecxz
push
cmp
out
add
mov
out
and
es
adc
fs
cmp
clc
jns
lea
mov
add
mov
jmp
add
es
xor
mov
pop
dec
es
aaa
add
adc
stc
loopne
out
test
es
daa
imul
add
ret
lea
test
sub
sti
add
out
or
dec
imul
jmp
out
inc
out
mov
out
add
shl
es
inc
(bad)
push
mov
pop
pop
add
mul
outs
and
xchg
add
adc
popf
out
or
add
out
gs
mov
ror
cmp
aad
lods
es
pop
mov
sub
pusha
pusha
mov
popa
mov
lock
add
(bad)
in
inc
int
out
xchg
inc
repnz
push
sar
cs
sub
add
inc
es
in
fstp
add
jbe
cmp
dec
aas
push
adc
aad
pusha
cmp
adc
loop
push
into
rcl
das
add
out
push
jl
es
and
div
mov
cmp
jo
add
xor
inc
jmp
push
mov
add
rcl
dec
mov
out
cwde
stos
add
hlt
sub
scas
out
imul
dec
es
(bad)
out
(bad)
ror
add
push
leave
inc
or
outs
fs
add
(bad)
dec
test
mov
ds
cli
lahf
fisub
lds
and
std
es
rcr
fiadd
stos
xchg
es
sub
mov
adc
out
out
add
dec
out
pop
stos
mov
mov
cmc
push
xchg
mov
add
imul
adc
mov
add
inc
out
mov
push
mov
out
add
mov
jl
scas
xor
inc
pop
or
es
das
xchg
rol
je
add
bound
(bad)
pushw
add
call
mov
stc
es
pop
popa
cdq
daa
daa
jl
and
retf
ror
shl
sub
jmp
and
lods
(bad)
jl
pop
pop
xor
add
scas
scas
sbb
jb
(bad)
adc
pop
icebp
pop
pop
ss
push
push
out
out
pop
es
mov
add
in
mov
out
iret
push
inc
das
das
mov
daa
out
out
jp
push
cwde
repnz
add
add
inc
pop
push
push
cmps
sub
add
and
out
call
cs
stos
sub
and
mov
test
out
add
es
in
and
fld
push
es
xor
movs
ds
push
adc
xchg
(bad)
xchg
call
pop
add
(bad)
repnz
rol
stos
es
sub
and
es
aaa
mov
sbb
sbb
cwde
bound
cli
shl
mov
(bad)
test
sub
add
es
in
rol
es
fstp
repz
xchg
jnp
cld
adc
enter
pop
mov
inc
es
mov
pop
fimul
add
inc
out
shl
xlat
xlat
cmp
in
jg
adc
add
movs
scas
mov
jns
push
ret
inc
sbb
xchg
shl
mov
mov
add
lock
mov
xor
(bad)
add
cli
mov
stos
cwde
arpl
out
repnz
es
pop
cmp
ds
call
jb
out
add
pop
ins
push
jns
mov
sub
push
loopne
dec
test
out
dec
add
push
push
push
adc
cld
mov
pop
imul
out
push
aam
out
out
shr
std
cmp
movs
jmp
call
clc
aam
dec
dec
push
adc
call
dec
int
dec
adc
jl
out
jmp
add
cld
and
call
cmp
xor
imul
add
push
push
retf
or
out
mov
sub
out
push
cld
retf
lock
add
sub
push
jg
inc
mov
add
es
pusha
arpl
mov
dec
dec
shl
fadd
add
movntq
out
mov
call
es
ds
xor
and
out
pop
jecxz
jo
add
mov
aas
es
dec
add
es
cdq
fprem
add
jbe
fnsave
mov
fdiv
out
out
lock
push
and
out
sbb
pop
es
aas
in
inc
fcomp
sbb
sub
mov
add
fcomip
jae
es
add
or
(bad)
sbb
jae
out
out
xlat
pop
mov
out
in
jns
xor
push
mov
dec
test
add
div
outs
ja
add
mov
addr16
inc
ja
out
jle
or
mov
and
xor
enter
add
fild
jae
mov
fimul
pop
add
outs
in
scas
pop
xor
ins
pop
es
mov
movs
xchg
xor
add
or
push
and
add
sbb
imul
addr16
cwde
shl
out
xor
fidiv
inc
out
add
lahf
xor
std
test
pop
data16
mov
cmp
es
in
inc
inc
out
cmp
xchg
add
out
inc
push
cld
in
in
inc
sub
fwait
dec
fld
arpl
mov
loopne
inc
add
jne
cmp
xchg
xchg
sbb
popf
inc
clc
and
jo
lods
es
in
pop
mov
inc
push
mov
(bad)
jg
js
push
dec
dec
lahf
pop
xor
pusha
cmp
es
(bad)
mov
rol
push
dec
jmp
and
(bad)
xchg
cmp
dec
pusha
pusha
outs
sbb
es
add
in
in
out
ss
push
shl
or
cmp
xor
not
stos
es
lock
mov
xchg
lock
push
adc
sbb
mov
shl
adc
push
xchg
xchg
sbb
test
cwde
add
pop
add
xor
cmp
or
es
add
pop
pop
int
mov
add
push
xchg
push
ins
adc
add
fimul
push
adc
stos
test
imul
mov
mov
and
das
sbb
mov
inc
sub
sbb
inc
(bad)
xchg
icebp
out
jmp
mov
es
inc
ins
xor
inc
inc
arpl
js
push
push
xchg
fldl2t
out
rcl
push
in
in
das
cmp
out
jge
add
or
xor
add
in
in
push
pusha
mul
js
mov
and
in
dec
xlat
daa
out
into
add
xor
js
and
push
popa
out
movs
nop
lock
out
jecxz
push
es
xchg
add
call
cmp
retf
sti
cmp
mov
out
xor
test
inc
mov
retf
add
cmps
cmps
mov
jb
fcmovb
push
cwde
add
mov
push
ds
dec
pop
mov
out
xor
out
mov
iret
in
and
adc
rol
add
mov
mov
pop
mov
cmp
pop
ret
ret
sbb
adc
es
dec
sub
es
leave
rol
add
sahf
es
mov
cwde
dec
add
dec
and
jmp
fisub
out
in
xchg
and
inc
cmp
call
cmp
dec
jnp
sbb
or
mov
je
jne
cmc
sub
fldenv
hlt
inc
jo
in
cs
out
cmp
jnp
jb
add
jmp
add
mov
dec
aad
ins
pop
inc
and
loopne
cmp
dec
scas
test
nop
nop
lea
add
movs
es
cmp
aad
hlt
jnp
jns
addr16
pop
pop
push
es
fsubr
inc
in
in
fwait
sub
out
cli
push
push
es
stos
(bad)
repnz
icebp
mov
loop
sub
fbld
add
cmp
jle
out
fadd
pop
or
pusha
pushf
xchg
mov
push
lahf
rol
cmp
es
rol
pushf
mov
jne
xor
out
pop
ret
lea
and
and
out
das
ja
jecxz
xchg
out
push
cmps
jno
dec
js
mov
(bad)
in
sbb
nop
cmp
sbb
fild
nop
or
and
mov
out
fiadd
mov
xor
lds
cmps
je
(bad)
inc
pop
(bad)
es
call
cmp
popf
jno
enter
outs
add
out
add
jecxz
jo
or
es
sahf
jb
add
mov
dec
cmp
fcmovu
fst
das
(bad)
cmp
loopne
ds
add
xchg
xchg
cmp
out
out
add
ret
mov
xor
cmp
mov
aaa
dec
neg
dec
emms
sbb
add
push
jle
js
cmp
push
add
xlat
popa
popa
mov
dec
out
cmp
mov
jp
int
int3
int3
clc
cmps
clc
xor
mov
scas
scas
sbb
std
rol
push
shl
pmulhw
jg
aam
push
sbb
iret
mov
cmp
fcomp
loopne
and
xchg
add
daa
lds
cli
sbb
jl
mov
dec
dec
push
xor
jae
aas
(bad)
sbb
icebp
cmps
out
fs
mov
rcr
imul
scas
clc
adc
jmp
add
(bad)
push
push
out
les
add
xor
not
push
mov
mov
fdivr
out
xchg
push
stos
out
pop
push
idiv
std
add
addr16
add
outs
mov
gs
lock
xor
inc
popf
sub
es
mov
fwait
ret
outs
outs
push
mov
out
ja
and
cmp
retf
jnp
add
ds
out
add
(bad)
mov
xchg
add
es
inc
pushf
xchg
xchg
in
add
pop
jbe
sbb
push
sub
inc
mov
cmps
add
pop
adc
fwait
fwait
outs
push
lahf
out
xor
push
cmp
data16
shl
repnz
add
popa
cmp
out
(bad)
dec
sahf
sahf
pop
mov
out
pop
adc
mov
add
out
xchg
add
push
es
imul
setge
xchg
fnstcw
out
mov
add
repz
add
out
imul
or
rcl
bound
ins
imul
adc
into
mov
out
inc
pop
es
add
sbb
xchg
mov
ret
ret
cmps
mov
add
cmp
cmc
push
out
add
xlat
push
inc
add
in
(bad)
or
fimul
sbb
retf
jmp
lock
lea
es
mov
sbb
es
scas
or
mov
lock
arpl
out
scas
sbb
inc
mov
jo
add
ret
add
cmp
pop
(bad)
push
adc
pop
je
sub
icebp
(bad)
(bad)
cs
es
cmp
mov
cmp
add
dec
adc
int3
aaa
aas
add
push
push
jmp
add
xor
pop
lea
rol
add
push
inc
sahf
into
lods
test
aas
pop
shl
ret
loope
out
repnz
add
fldenv
out
adc
mov
out
outs
les
adc
xchg
mov
mov
dec
shl
lods
(bad)
xor
and
pusha
call
out
add
ins
es
lahf
(bad)
popa
into
into
inc
pop
sub
add
jmp
jp
adc
es
cmp
jg
add
xor
or
or
inc
movs
add
push
add
pop
inc
add
adc
scas
jne
out
mov
rol
inc
and
inc
in
add
jb
sbb
scas
xor
pusha
pusha
shl
out
inc
les
fsubp
aam
mov
in
dec
push
push
idiv
add
out
sahf
cli
movs
adc
add
test
adc
repnz
jmp
hlt
sub
sub
inc
mov
es
test
mov
loopne
pop
fwait
out
or
xchg
es
or
inc
iret
loopne
enter
add
pop
or
inc
jle
out
imul
pusha
pusha
pop
out
out
shl
mov
push
dec
add
in
dec
cmp
data16
test
out
xchg
out
movs
movs
pop
pop
test
fdiv
cdq
xor
add
and
ret
ret
paddusb
out
add
(bad)
or
jge
ja
or
pop
out
scas
xchg
add
jb
sbb
sbb
es
cmp
jg
aaa
es
das
movs
mov
popf
xchg
fild
mov
imul
sub
or
lock
out
add
and
and
add
jecxz
shl
pushf
push
mov
div
mov
pop
daa
push
push
push
jl
cmp
mov
xor
mov
sbb
dec
fwait
or
out
sti
jno
es
jae
push
add
js
inc
es
cmps
pop
pop
test
push
out
inc
or
cli
out
jno
add
out
pop
fs
punpcklbw
es
sbb
add
es
es
mov
ret
add
or
out
ret
stc
stc
lock
out
jle
dec
es
rcl
scas
scas
pop
das
adc
mov
int3
xadd
cmp
dec
call
xchg
sbb
hlt
adc
out
add
jbe
lock
mov
mov
mov
jae
cli
out
add
push
add
push
push
adc
out
call
add
sbb
or
retf
cmp
dec
aaa
mov
mov
dec
mov
out
repz
movs
movs
mov
add
xor
lea
and
pushf
add
scas
mov
jbe
popa
xchg
add
push
test
push
push
mov
fisubr
loopne
stos
stos
mov
push
dec
add
out
call
test
add
jmp
inc
es
shl
mov
cmp
int3
es
popa
sbb
call
rol
adc
add
test
(bad)
popf
add
lock
pusha
fs
add
ds
push
pop
add
mov
push
inc
shl
dec
mov
es
add
test
lahf
add
out
retf
cmp
mov
cwde
out
pop
(bad)
or
out
pushf
add
pop
ins
xlat
es
lods
ja
add
int3
or
out
add
and
sub
inc
mov
(bad)
loopne
data16
adc
mov
cmp
ins
test
or
jno
add
mov
sub
add
sub
in
jmp
bound
mov
fiadd
add
rcr
jnp
add
xchg
mov
call
add
lock
out
fdivrp
pop
add
dec
add
mov
out
cwde
lods
mov
std
out
hlt
or
repz
cmp
scas
scas
xor
(bad)
jae
push
push
adc
addr16
jae
add
clc
es
out
cmp
xor
jae
xchg
add
out
mov
cmp
aam
push
fucom
sbb
adc
out
dec
fcmovnu
add
stc
out
mov
or
test
stos
add
adc
sar
out
cmp
xor
inc
outs
fistp
(bad)
add
jb
(bad)
inc
cs
out
fs
add
push
out
test
add
add
dec
out
sub
mov
scas
icebp
or
push
pop
jmp
out
or
or
add
mov
adc
xchg
cmp
push
mov
fs
ins
je
es
push
mov
pop
pop
push
xchg
mov
jnp
xchg
xor
xchg
fwait
fwait
add
test
add
(bad)
lds
sbb
jle
push
inc
in
out
into
xor
adc
cmps
push
iret
add
loope
ss
leave
es
cs
(bad)
pop
add
out
add
jl
adc
cli
out
add
dec
adc
xor
or
xchg
add
out
add
es
add
sub
es
in
ins
add
aaa
stos
cmps
es
cmp
mov
outs
es
lar
mov
xchg
sbb
xchg
out
mov
scas
vpaddsb
sbb
sbb
adc
pop
push
test
out
retf
call
out
cwde
mov
jo
push
push
pop
sub
es
push
sbb
scas
arpl
add
pop
not
add
leave
add
cwde
ja
jae
sub
add
mov
mov
or
scas
rcl
sti
shl
ss
adc
mov
nop
sbb
mov
jae
xor
std
loopne
inc
xchg
xchg
pop
dec
shl
and
fiadd
in
pop
xor
out
jg
sub
pusha
pop
adc
repnz
retf
aad
mov
cs
cmps
xor
cmp
test
lods
mov
xchg
add
xchg
std
es
push
sbb
mov
clc
add
ret
(bad)
in
enter
sub
mov
mov
ret
pop
pslld
out
stos
pusha
lods
sbb
xchg
ret
pop
out
sbb
and
mov
iret
add
adc
icebp
mov
out
ss
jg
fld
scas
pop
out
sub
movs
inc
inc
fadd
cdq
out
fwait
mov
popa
popa
js
mov
pop
add
mov
shl
sbb
pop
inc
pop
mov
mov
dec
int3
es
lods
add
mov
nop
into
es
ret
mov
push
add
and
inc
mov
add
inc
xchg
sahf
stc
(bad)
or
add
out
xchg
out
add
pop
push
jle
es
es
retf
sbb
lods
push
int3
cdq
xor
mov
sbb
sbb
push
sub
cmp
sbb
das
es
adc
pop
pop
pushw
out
out
add
jecxz
push
or
rol
add
sub
es
dec
in
stc
stc
inc
mov
add
xchg
es
adc
(bad)
(bad)
add
add
inc
add
out
inc
sti
xor
add
(bad)
xchg
and
stos
int
add
push
mov
push
push
push
dec
outs
(bad)
xor
iret
add
sub
pop
dec
pushw
out
stos
jno
je
push
(bad)
out
out
lods
add
lods
aad
out
sub
es
add
div
inc
push
jecxz
xlat
pop
cmp
std
add
pop
es
sbb
mov
mov
inc
fadd
adc
ret
pavgb
std
and
add
and
jp
mov
xor
sbb
imul
xor
out
mov
out
xlat
shl
jmp
jge
add
sar
ret
jo
jb
inc
inc
add
jns
xchg
push
push
es
add
add
mov
sbb
out
and
shl
ds
and
pusha
inc
cmc
jmp
es
sar
inc
nop
cs
jae
xor
sbb
addr16
inc
adc
add
clc
cmp
adc
add
xor
and
ret
es
add
popf
jl
test
dec
popa
popa
call
add
es
and
xlat
or
adc
out
loopne
out
shr
mov
jmp
out
or
scas
(bad)
mov
pop
pop
cmps
xor
jge
push
popa
(bad)
les
adc
mov
add
sahf
and
fadd
data16
stos
add
inc
rol
add
icebp
call
out
sbb
fild
out
jo
push
stc
stc
pop
call
clc
or
leave
lods
add
mov
pop
into
(bad)
pop
add
es
sbb
cmps
push
add
adc
sub
push
and
jb
inc
out
mov
dec
add
es
inc
arpl
in
int
or
call
sbb
jnp
xchg
xchg
retf
add
push
sub
push
int
fisubr
mov
pop
sub
nop
adc
sbb
mov
outs
mov
out
pop
ins
cwde
xchg
xchg
stos
push
sbb
addr16
adc
push
add
dec
les
repz
or
xchg
(bad)
out
fucom
push
push
add
adc
jg
add
xchg
out
sub
add
adc
mov
add
inc
lock
stos
stos
shl
inc
mov
lea
out
xchg
pop
inc
es
jle
or
popa
add
push
out
cmc
ja
xchg
xchg
push
dec
cmp
push
pop
div
sbb
out
inc
mov
movs
add
sub
push
dec
inc
mov
add
xor
jl
adc
out
add
xchg
pop
pop
xor
cmp
int3
add
es
(bad)
and
jo
and
cmp
movs
xlat
xlat
add
mov
retf
inc
in
add
sub
jg
pop
pop
inc
(bad)
mov
outs
and
mov
sti
stos
inc
out
adc
xchg
add
xor
ret
ror
nop
fsubp
dec
out
inc
inc
push
push
push
mov
out
adc
test
pop
pop
add
cmp
popa
std
shl
rcl
scas
add
inc
inc
mov
or
mov
dec
push
es
mov
add
xchg
add
out
cmp
and
(bad)
push
push
jnp
add
stos
test
mov
jle
push
mov
sub
retf
imul
add
sub
rol
add
(bad)
jbe
out
add
es
lock
sbb
out
sbb
clc
es
sahf
mov
test
jbe
push
push
clc
sbb
fisub
xor
lock
jp
sub
es
out
shr
pop
out
inc
cld
mov
loopne
mov
push
dec
xor
dec
dec
add
fst
ds
add
fcomp
pop
lahf
cdq
cdq
popa
fild
out
jns
add
sbb
dec
sub
mov
and
out
add
bound
xchg
mov
jbe
mov
xchg
out
aad
add
push
int3
pop
pop
out
jns
xor
ret
pop
out
iret
imul
mov
inc
mov
fisub
fwait
inc
pop
push
inc
inc
mov
add
pop
mov
(bad)
(bad)
sub
push
pop
pop
jle
ins
es
or
xchg
inc
lds
xlat
jl
pop
add
popf
imul
inc
inc
addr16
pop
hlt
xchg
cmp
and
ficomp
add
es
fdiv
xchg
mov
iret
xor
xchg
cmps
adc
fs
das
(bad)
les
add
lds
push
call
add
or
add
lahf
mov
movs
mov
add
mov
mov
xor
pop
push
mov
adc
add
pop
jmp
sbb
mov
cmp
adc
add
shl
retf
push
scas
scas
outs
add
push
leave
leave
adc
add
sbb
push
repz
bound
inc
jnp
out
inc
movs
ret
lar
out
pop
and
pop
aam
stc
add
ss
mov
and
add
test
cmps
jb
addr16
add
lods
fcomp
dec
jl
data16
sbb
loope
iret
out
add
(bad)
es
mov
mov
(bad)
int3
mov
cmp
rol
popa
push
or
rcl
push
jg
pop
pop
mov
gs
icebp
out
push
add
pop
pop
test
and
pop
add
pop
pop
adc
or
add
call
movups
cmp
inc
cwde
jne
ins
sbb
rcr
mov
test
sub
out
cli
cmp
cmp
jp
add
cmc
sti
cmp
jo
jmp
push
push
gs
sahf
out
add
cmp
out
pop
dec
sub
adc
push
inc
int3
(bad)
les
fisub
(bad)
sub
out
ja
xor
aam
and
push
push
dec
loopne
out
xchg
xchg
(bad)
es
mov
shr
sub
sub
fld
mov
jmp
add
cmp
out
mov
sbb
mov
lock
add
cli
fcmovu
jp
add
imul
gs
out
mov
mov
fs
dec
fsub
sahf
add
fstp
xchg
out
jns
(bad)
cmp
add
pop
cdq
es
mov
add
pusha
pusha
mov
xchg
jl
dec
mov
add
pop
loope
dec
or
add
mov
xchg
dec
pop
and
push
add
xchg
or
ror
pop
add
fcomp
mov
scas
out
jmp
mov
cmps
es
add
inc
lock
pop
or
jmp
push
cmc
(bad)
xor
in
es
sub
(bad)
rol
ja
rol
cs
mov
sahf
xlat
inc
out
add
retf
push
clc
add
loopne
sub
(bad)
inc
fmul
call
mov
pop
add
dec
nop
nop
and
sti
add
call
add
loope
test
and
es
push
add
ret
adc
icebp
test
xor
ror
add
es
dec
rcl
es
out
ins
lods
lods
cmovs
cmp
inc
jg
ret
rcl
test
mov
cmp
popa
in
add
test
retf
mov
add
mov
aad
into
mov
pusha
out
inc
stos
fbld
push
icebp
add
xor
fadd
jo
ja
sub
out
iret
sub
mov
pop
lds
xor
rcr
add
movs
pop
sahf
sahf
(bad)
icebp
cld
out
add
and
mov
into
add
es
cmps
push
pop
es
add
jmp
inc
add
adc
and
fsub
out
jle
sbb
leave
mov
add
rcl
inc
es
adc
mov
pop
xchg
xchg
hlt
sub
lds
repnz
cld
cld
jo
loopne
cwde
(bad)
fisub
add
out
jge
pop
es
test
aas
add
add
popa
and
pusha
jno
add
fcmovnbe
lods
push
push
add
es
fwait
out
ja
test
sbb
out
das
bound
es
loope
std
std
xchg
pop
cld
add
inc
fist
aam
sub
mov
add
repz
pop
out
loope
ret
add
sti
lea
mov
retf
es
pop
jns
jno
ret
ja
loope
cmp
mov
aad
add
sahf
int
dec
aas
mov
add
push
cwde
sbb
data16
xlat
pop
sub
out
add
daa
out
jge
mov
sbb
add
aad
dec
outs
mov
and
mov
daa
es
mov
rol
imul
cmp
ss
mov
and
pop
retf
jb
or
add
out
adc
xor
mov
out
ror
adc
loopne
bound
shr
jo
mov
add
ret
inc
lods
add
fimul
test
pop
retf
out
test
inc
add
xor
pop
retf
mov
out
mov
pop
rcr
in
add
push
out
es
mov
adc
push
push
fist
pop
test
gs
icebp
pushf
sub
stc
sbb
pusha
mov
es
add
push
or
rol
int3
int3
std
jge
es
test
push
shl
or
movs
out
in
es
arpl
or
push
push
adc
mov
add
ja
cdq
and
test
sub
pop
jae
or
arpl
nop
iret
iret
or
es
mov
dec
(bad)
xchg
movs
mov
loope
test
and
xor
int
aas
imul
push
movs
movs
mov
jb
add
xor
inc
loope
jnp
sbb
ins
out
(bad)
jae
adc
sub
xor
std
mov
add
add
mov
(bad)
imul
mov
loope
xchg
dec
out
jecxz
jae
xchg
(bad)
out
sub
add
(bad)
cmp
daa
dec
and
sti
jle
cli
cli
and
add
sbb
sbb
add
adc
stos
es
xchg
inc
add
xor
daa
push
iret
out
add
mov
rcl
mov
jno
imul
aas
xchg
cmp
(bad)
xlat
add
ret
setb
jno
xor
out
stos
stos
add
mov
sub
sbb
repnz
and
outs
jbe
ja
es
xchg
or
iret
mov
sbb
ret
jnp
push
mov
out
sub
jecxz
out
mov
add
mov
in
aas
adc
out
inc
add
dec
push
sub
out
cmp
int
addr16
mov
dec
adc
jmp
inc
add
cmp
mov
add
out
fidiv
int3
pop
add
add
in
sub
xor
lea
pop
push
hlt
jge
jnp
add
mov
dec
gs
add
xor
mov
push
jp
adc
add
arpl
call
enter
out
jnp
ins
lea
pop
and
(bad)
(bad)
dec
dec
and
inc
sbb
dec
movs
movs
fldenv
fcmovnu
jb
add
ds
out
lods
out
add
pushf
es
outs
or
fsub
(bad)
or
inc
add
std
jmp
stos
stos
pop
ds
pop
ins
cmp
sub
es
add
imul
cs
retf
add
xchg
xchg
sbb
mov
es
std
pusha
jmp
imul
xor
mov
ret
or
jp
ficomp
fiadd
ss
call
nop
push
inc
and
dec
repnz
pop
pop
cwde
adc
cdq
cmp
out
fcmovnu
mov
pop
cli
cli
add
sub
cwde
mov
out
add
mov
pop
or
jp
dec
adc
icebp
in
mov
or
idiv
out
xchg
in
es
js
xchg
shufps
int
inc
add
loopne
push
dec
sub
pop
repz
hlt
hlt
leave
dec
or
inc
xchg
in
in
idiv
repz
inc
add
jo
shl
es
xchg
jmp
dec
dec
addr16
fwait
fwait
jl
jns
add
ds
es
jge
and
shl
pop
popf
inc
push
push
cmp
or
mov
mov
jmp
jae
out
loop
adc
outs
sbb
mov
and
outs
lahf
ret
pop
pusha
or
dec
push
add
mov
loop
add
mov
xchg
xchg
mov
test
or
out
mov
aaa
cld
cld
add
pop
es
test
(bad)
cmp
and
xor
add
test
and
add
mov
out
fld
es
add
inc
jo
outs
call
out
pusha
int3
sbb
icebp
mov
lods
out
add
jge
addr16
dec
adc
out
push
pop
xor
adc
cmc
inc
in
in
in
or
out
sbb
inc
es
pop
lock
xchg
jmp
loopne
iret
add
adc
dec
data16
add
test
mov
test
xchg
dec
dec
pushf
adc
out
push
xchg
add
push
and
and
add
pop
in
mov
cmps
fcom
aam
ss
pusha
(bad)
fs
es
push
fwait
sub
sbb
push
push
mov
retf
out
xor
add
clc
xor
jmp
pushf
es
add
enter
cmp
lods
adc
ficomp
in
shl
mov
inc
dec
loope
push
push
sbb
aad
cmp
push
ret
out
enter
sar
(bad)
aam
add
in
out
sbb
mov
or
cli
es
adc
out
(bad)
clc
add
xor
out
mov
and
cmps
nop
fiadd
mov
jl
cwde
sbb
loop
mov
ja
push
push
mov
repz
into
(bad)
leave
push
out
sti
mov
je
cmp
push
rcl
mov
sbb
jb
out
jo
mov
jmp
mov
jmp
dec
loope
jne
ja
repz
push
out
addr16
xor
fucom
aam
dec
add
je
jecxz
jge
add
out
sbb
jns
(bad)
or
cmp
adc
sub
push
cmps
cmc
sahf
pusha
out
pop
inc
or
or
jmp
pop
xor
sbb
inc
bnd
out
icebp
inc
add
or
(bad)
ja
jbe
shl
sbb
cmp
addr16
js
out
add
repz
mov
mov
jle
add
or
sub
pop
cmp
add
je
popf
out
enter
ja
pop
pop
out
loop
pop
es
mov
and
(bad)
shld
jp
push
out
aaa
pop
fidiv
dec
dec
dec
sbb
bound
add
test
pop
in
in
add
xchg
out
push
fnclex
stos
stos
fadd
aam
aaa
dec
mov
call
fistp
jnp
mov
mov
(bad)
lock
movs
and
pop
in
es
and
add
sbb
pusha
movntq
out
aad
jns
out
push
ins
out
cmps
test
mov
mov
or
mov
jp
adc
es
jnp
rcl
sub
dec
sbb
out
ins
add
push
add
(bad)
push
cmps
sub
mov
out
test
and
ins
fwait
jae
and
mov
cs
pop
sbb
fcmovnbe
mov
cmp
rcr
cdq
push
out
push
mov
out
addr16
adc
lds
out
cmp
clc
fiadd
(bad)
stos
stos
out
xchg
idiv
out
pop
mov
mov
add
jo
sahf
xchg
and
enter
adc
add
movs
mov
cmp
or
mov
jno
xchg
data16
sub
add
sbb
(bad)
adc
mov
jp
cwde
push
mov
push
xchg
loope
(bad)
out
dec
add
fs
in
mov
lea
ret
adc
ss
into
and
and
out
gs
or
rcr
adc
pop
and
pop
out
mov
xchg
xlat
out
cmp
rcr
sub
cmp
inc
add
sbb
jnp
add
jge
jg
inc
retf
retf
pop
mov
out
mov
mov
shl
(bad)
out
test
xor
aad
ret
pop
enter
outs
test
in
add
mov
out
add
sbb
aas
aas
mov
add
adc
jp
out
mov
fadd
mov
cmp
retf
add
rcl
inc
ret
out
pop
add
out
jl
pop
es
mov
add
mov
rol
ror
add
mov
sub
cwde
mov
loope
cmc
rol
es
or
stos
push
cmp
out
xchg
scas
pop
add
add
cmc
mov
mov
jno
cmp
sbb
jle
adc
add
sub
mov
add
dec
dec
cmps
dec
call
add
and
jmp
jno
add
jb
bound
cmps
adc
sbb
jo
cmp
add
leave
nop
nop
rol
out
(bad)
(bad)
dec
clc
add
xchg
imul
add
mov
mov
mov
inc
add
inc
movs
movs
cmps
pop
fwait
es
sti
jne
xchg
push
mov
test
es
cwde
mov
and
aam
and
mov
(bad)
addr16
int
cmp
adc
gs
out
mov
mov
add
inc
mov
cmp
out
xchg
repnz
ja
mov
aas
pop
mov
cld
add
xor
inc
inc
xchg
push
push
scas
xchg
in
lock
add
dec
xor
adc
stos
mov
add
outs
and
jnp
push
add
jmp
popf
popf
and
and
leave
fwait
cs
imul
into
into
jle
and
xor
jo
in
in
std
sbb
ja
fs
mov
and
std
addr16
cmp
jmp
push
jmp
add
pop
(bad)
cmp
mov
int3
cmps
stos
aas
es
ds
or
es
pop
add
je
fcomip
call
in
inc
test
es
mov
(bad)
ja
add
ret
out
cmp
pop
lock
hlt
iret
add
out
mov
cmp
adc
cmp
mov
add
push
cmp
cmps
add
xor
push
jo
and
add
jmp
jb
cmc
hlt
es
lds
retf
add
sub
outs
outs
pop
mov
es
pop
mov
inc
mov
in
cmp
out
mov
retf
out
jl
and
mov
neg
jp
inc
inc
iret
cli
cmp
imul
sub
rcl
add
sub
movntq
pop
mov
jmp
xor
outs
add
sbb
adc
push
push
cld
call
and
mov
push
icebp
xchg
ins
out
add
cmp
mov
mov
mov
gs
add
fisubr
imul
sbb
mov
jmp
fs
jge
out
mov
xchg
adc
sbb
add
cmc
in
mov
dec
div
sahf
add
jmp
add
ror
jl
and
lock
test
xchg
xchg
sub
stc
jne
add
xlat
mov
or
add
cmps
cmps
ss
out
mov
jl
mov
popf
xchg
xchg
xchg
and
fdiv
out
dec
jo
adc
mov
xor
inc
and
gs
out
push
jp
ins
loopne
inc
mov
sub
out
adc
add
cwde
out
ja
in
test
inc
push
mov
jno
out
cmp
hlt
and
ins
sub
arpl
lods
sbb
add
dec
outs
test
bound
popf
test
dec
add
xchg
adc
mov
mov
add
or
repz
pop
mov
sahf
out
add
push
test
into
add
icebp
jle
push
dec
pop
mov
pop
js
dec
push
out
add
add
push
hlt
sub
mov
es
add
mov
es
add
push
push
xor
adc
or
leave
push
pop
pop
fsubr
ja
js
add
stc
cwde
cwde
imul
inc
ret
pop
add
sub
cmps
add
or
sub
adc
jae
shl
sti
pusha
sub
subps
pop
add
in
aaa
dec
dec
jbe
jmp
add
inc
rcl
outs
es
push
lahf
shl
xor
mov
ins
sahf
sahf
mov
mov
aaa
add
add
jmp
push
aam
out
out
add
jp
xchg
hlt
es
lock
add
divps
les
sbb
std
lahf
repnz
imul
adc
inc
add
cmc
es
pop
mov
mov
aam
repnz
and
mov
pop
push
out
cmp
es
add
in
pushf
pushf
mov
out
pop
mov
pusha
dec
scas
adc
mov
call
hlt
hlt
inc
jmp
out
mov
mov
mov
add
pop
push
xchg
xchg
xchg
push
push
out
add
(bad)
(bad)
mov
repz
jmp
inc
out
mov
cmp
loop
rol
push
pop
out
mov
mov
cmp
sar
out
add
fidivr
push
mov
imul
add
push
jl
cmp
lea
add
add
mov
add
imul
add
xchg
sti
inc
mov
or
add
ins
pop
dec
ss
jno
out
mov
cmp
mov
and
in
mov
aaa
aaa
add
pop
shl
call
push
mov
nop
fcom
test
push
out
mov
pop
sbb
das
in
and
add
pop
mov
test
repnz
add
daa
daa
add
rol
xor
stc
add
jmp
ror
mov
out
in
cmp
jbe
add
bound
xor
add
hlt
pop
(bad)
push
ficomp
icebp
icebp
retf
add
repnz
or
mov
jecxz
add
loopne
xchg
data16
aad
pop
imul
jmp
call
(bad)
push
add
enter
inc
pop
cmp
es
mov
sbb
pop
test
xchg
loope
out
out
call
dec
push
movs
movs
aas
loopne
shl
add
sahf
es
data16
jmp
push
add
dec
sti
es
add
es
push
xor
jae
ins
add
es
xor
mov
cmp
add
pop
out
out
or
pop
out
retf
repz
or
shl
add
addr16
xor
jo
mov
rol
add
out
es
std
add
in
out
cli
mov
inc
aaa
add
aad
test
sar
enter
sar
jns
mov
aaa
es
es
mov
add
pop
out
cmp
(bad)
mov
sbb
pusha
pusha
retf
test
jbe
inc
nop
pop
movs
cmp
repnz
out
les
es
xor
outs
fucomip
push
add
jne
shl
sub
aas
data16
out
mov
add
daa
shl
es
(bad)
pop
add
push
xor
xor
inc
out
repz
or
and
call
and
mov
jge
add
adc
pop
es
(bad)
out
out
mov
into
inc
dec
mov
sbb
inc
es
nop
xchg
stos
int3
int3
pop
inc
pop
es
cwde
loopne
sti
sti
add
es
jle
in
mov
pop
(bad)
aam
out
in
jno
enter
xchg
pop
es
mov
add
mov
clc
out
add
std
es
loope
add
sub
and
jo
(bad)
pop
in
cmc
out
mov
js
ins
out
int
sbb
sub
xor
add
imul
mov
inc
js
mov
out
int
pop
out
out
lock
push
mov
aad
fisttp
jbe
inc
pop
cmp
out
mov
ins
add
test
stos
es
or
jmp
mov
retf
test
out
es
fnstcw
mov
out
in
add
lahf
lahf
jae
jp
aad
mov
fs
les
sbb
xor
jg
sub
cmc
cmc
sti
mov
or
mov
xchg
ds
add
loope
outs
mov
xchg
std
mov
push
push
pcmpgtb
loop
add
pop
in
adc
cmp
push
xor
adc
imul
ja
add
test
pop
leave
push
mov
push
push
test
out
aam
les
add
(bad)
call
shl
arpl
ss
adc
push
jle
adc
adc
ret
xor
cmp
add
jb
leave
leave
fild
iret
es
push
mov
xchg
and
dec
push
xchg
xchg
ja
scas
add
jnp
cld
ins
ins
ret
out
xchg
xor
push
bound
mov
int3
jo
add
xor
call
jo
mov
out
pop
xchg
aaa
mov
out
add
es
pop
jl
mov
sbb
fsub
adc
cmc
and
xor
(bad)
jp
push
pop
inc
inc
popa
popa
ins
push
clc
rcl
sbb
and
and
jno
shl
cmp
idiv
xchg
xchg
lea
xor
out
adc
out
and
call
mov
es
inc
push
dec
(bad)
cwde
pop
cmps
fadd
in
dec
dec
jge
xor
sbb
add
and
or
out
cmp
pop
add
pushf
jae
push
xor
add
test
aas
and
mov
test
and
cmp
or
rcl
es
ins
push
add
sbb
pop
mov
arpl
or
(bad)
mov
mov
aam
aad
movs
add
es
clc
je
(bad)
and
add
mov
repnz
jp
or
xchg
mov
scas
lods
test
call
cmp
hlt
loopne
add
es
cmp
ins
test
es
xor
inc
mov
add
mov
int
xor
out
pop
movs
loop
pop
push
xor
out
jg
stc
add
push
dec
inc
out
cmp
pop
rcl
js
call
add
stc
pop
cdq
es
leave
(bad)
iret
iret
clc
popa
mov
mov
(bad)
(bad)
aas
add
pusha
out
nop
cmp
es
popf
push
mov
mov
jp
fs
out
add
scas
or
(bad)
xlat
and
sbb
jo
sub
add
cmps
inc
pop
aaa
push
push
dec
out
add
cmc
or
push
and
pop
fiadd
push
les
retf
mov
je
ret
inc
push
pop
(bad)
out
fild
mov
mov
(bad)
mov
push
sar
add
addr16
icebp
jbe
pusha
xor
call
pop
push
lock
mov
add
out
pop
inc
pop
es
pop
sub
(bad)
wbinvd
(bad)
popf
es
pop
pop
or
mov
push
add
hlt
hlt
std
push
and
sub
(bad)
lock
out
fdivr
mov
scas
add
mov
clc
es
xor
mov
add
and
loopne
or
ja
mov
push
fucom
retf
pop
mov
mov
sbb
sub
es
clc
add
add
jnp
or
sar
pop
or
gs
pop
out
out
test
adc
adc
fadd
int
es
fst
sbb
mov
add
xor
out
dec
sub
cli
cli
push
add
es
xor
ret
mov
mov
adc
or
call
push
push
xor
lods
add
pop
es
mov
ins
jl
add
lock
and
mov
out
jns
pop
fcomp
xchg
add
out
test
cs
retf
add
jae
out
fstp
xchg
js
out
lds
cmp
push
outs
or
in
test
out
inc
cld
and
jo
mov
add
cmp
test
scas
xchg
aam
cld
cld
ror
add
xor
stc
jno
ins
repz
and
call
push
or
std
dec
xchg
(bad)
(bad)
or
mov
push
push
ret
add
and
adc
test
jb
ins
ins
dec
dec
cmp
add
mov
es
cmp
mov
fs
sub
inc
hlt
xchg
add
ins
inc
dec
movs
pop
mov
mov
es
pusha
push
and
dec
add
mov
in
sahf
sahf
test
out
cdq
mov
pop
pop
pop
cmp
out
aad
or
je
das
jno
add
xor
jp
out
outs
mov
cmp
push
aad
out
in
jmp
out
mov
test
sub
pop
retf
add
pop
pop
pop
sub
ret
xchg
mov
xchg
mov
inc
sub
pop
add
out
inc
inc
jge
dec
out
add
inc
clc
clc
addr16
add
into
into
dec
jg
nop
nop
(bad)
jmp
out
in
sbb
js
iret
push
add
dec
push
bound
pop
enter
pop
jmp
nop
out
jg
push
add
out
loopne
lods
mov
enter
cmp
adc
lock
(bad)
pusha
movs
pushf
add
xor
test
adc
push
outs
out
add
pop
pop
xor
inc
out
mov
jb
call
cmps
cmps
imul
out
xor
daa
mul
add
ficomp
push
int
dec
adc
out
cmp
and
rol
clc
inc
jne
es
cmovnp
adc
push
fld
shl
shl
mov
push
in
fsub
popf
add
sbb
out
adc
cmp
int
mov
xor
cmp
jecxz
cdq
jl
out
(bad)
rcl
inc
push
push
rcr
add
popa
inc
shr
ins
out
(bad)
repz
movs
add
es
scas
pusha
pop
jb
mov
ds
jns
add
adc
xor
repz
add
dec
add
gs
push
lock
les
mov
es
dec
out
add
push
adc
add
test
std
and
dec
pop
in
in
cmp
jb
add
push
pushf
cli
cmp
add
in
mov
shl
sbb
std
std
mov
int
test
int3
aaa
push
push
loop
add
out
fnstenv
adc
jle
pusha
cmp
push
and
rol
xlat
xlat
stc
xor
cs
sub
add
fbld
sbb
jp
inc
mov
loop
int3
jne
push
add
out
cmp
mov
and
rol
mov
xor
in
fcom
lahf
jb
sbb
xchg
jmp
dec
dec
ret
add
and
out
push
mov
es
sbb
add
out
push
(bad)
mov
cmp
add
mov
lds
add
cld
jmp
daa
(bad)
cmps
(bad)
shr
jnp
mov
mov
je
add
mov
retf
add
sub
loope
out
cmp
add
daa
xlat
in
push
sub
xchg
jl
es
pop
xchg
jnp
aad
add
es
push
add
xor
out
jb
in
adc
loopne
(bad)
out
add
push
push
fdiv
jle
in
add
loope
out
fadd
(bad)
aad
xor
sub
jnp
test
inc
push
out
retf
aaa
mov
adc
mov
or
jo
add
jno
pop
cmp
clc
sub
add
push
in
inc
out
push
pop
in
fcomp
dec
test
out
fwait
inc
lock
scas
ror
es
rcl
dec
out
dec
sbb
add
or
shr
out
and
mov
jg
push
inc
out
test
add
mov
lock
mov
jg
dec
mov
loopne
sar
inc
in
cmp
mov
cmps
(bad)
es
add
rcr
sbb
arpl
out
rcl
mov
and
jp
add
stos
stos
mov
(bad)
out
add
xchg
xchg
pop
mov
add
bound
(bad)
lock
ja
xor
mov
pop
fucomip
ins
ins
loopne
add
call
mov
scas
mov
out
jmp
xchg
es
jg
mov
add
jp
cmp
cmp
out
add
push
sub
jge
add
out
and
xchg
out
pop
jl
call
out
push
imul
hlt
arpl
stos
out
loopne
gs
pop
fwait
add
mov
and
out
add
and
sub
jmp
mov
inc
add
div
push
ss
jnp
stc
add
stos
mov
ret
es
and
rol
jae
es
jle
add
cmps
out
xor
xchg
outs
iret
out
cmp
frstor
add
mov
add
mov
aam
inc
and
lock
push
xchg
cmp
out
jo
pop
mov
out
nop
out
cmc
outs
outs
push
mul
or
fimul
mov
ss
add
dec
out
mov
mov
sti
test
add
mov
cmps
into
mov
add
stc
lods
loope
(bad)
jne
pop
(bad)
(bad)
fdivr
xchg
push
fnstcw
xlat
add
xchg
add
ja
std
out
sub
dec
dec
dec
pop
test
loopne
push
call
jle
loope
push
or
dec
mov
cmp
dec
(bad)
(bad)
movaps
add
mov
mov
stos
je
cmps
push
sbb
jb
push
(bad)
fwait
out
outs
inc
and
mov
adc
es
cmp
add
popf
push
push
sub
cmp
jge
jbe
add
pop
jae
movs
jne
es
cmp
mov
aaa
rol
shr
pop
push
add
adc
push
mov
out
cmp
add
add
sar
rol
(bad)
jmp
fldenv
push
dec
dec
add
es
imul
movs
ret
rcr
out
add
mov
sbb
stos
jae
js
mov
mov
loope
mov
fiadd
or
sbb
fs
cmps
es
mov
pop
pop
call
das
ror
aas
cmp
outs
das
adc
hlt
movs
fdivrp
es
ret
je
sti
es
add
pop
cmp
es
fimul
in
nop
nop
xor
out
pushf
and
add
cmp
push
out
sub
add
sub
clc
sbb
cmp
or
or
dec
out
aaa
leave
test
add
xlat
cld
xchg
lods
lods
outs
push
out
in
sub
inc
add
in
(bad)
es
add
push
jecxz
gs
add
(bad)
(bad)
dec
nop
jno
rol
inc
xchg
out
imul
sbb
stc
xchg
or
outs
inc
inc
inc
add
daa
hlt
sahf
cmp
pop
sti
jl
dec
ins
add
es
sub
or
sbb
add
sti
sti
mov
es
sar
push
jns
pop
jb
out
xor
jle
add
sub
xchg
xchg
outs
pop
sub
mov
cmp
or
mov
out
es
outs
es
pop
add
out
(bad)
xor
rol
add
push
mov
scas
out
add
loope
mov
add
fs
mov
cmc
cmc
std
icebp
das
out
push
cld
clc
clc
pop
add
out
fnstsw
repnz
out
jle
pop
inc
inc
fcom
inc
out
push
sub
and
jo
mov
nop
js
mov
jmp
push
pop
add
jg
pop
push
mov
gs
push
sbb
clc
add
mov
jbe
dec
in
call
sub
jecxz
es
add
out
(bad)
sti
shl
add
mov
cld
data16
add
dec
push
push
or
jns
add
out
cdq
dec
(bad)
fld
add
call
and
pop
adc
inc
add
add
and
pop
dec
stos
out
add
and
cld
leave
leave
xor
mov
add
aaa
jae
xor
in
outs
lahf
lahf
jge
(bad)
xchg
cdq
out
push
sbb
push
out
fcom
nop
jb
mov
dec
enter
lahf
inc
out
es
add
loopne
idiv
push
add
sbb
sub
or
(bad)
loope
mov
cmp
add
add
and
shl
sti
in
jno
add
push
and
adc
or
inc
inc
mov
mov
out
leave
loopne
push
out
lahf
popf
lods
stos
stos
sbb
cmp
pop
pop
fs
shl
adc
dec
dec
aas
push
cmp
xchg
xchg
push
(bad)
pop
addr16
sahf
sahf
add
xchg
out
xchg
aaa
sub
jmp
push
out
iret
and
add
out
mov
mov
sbb
jbe
add
mov
adc
lahf
xchg
xchg
add
sub
(bad)
or
or
sub
cli
cmp
mov
jae
idiv
mov
shl
out
mov
cmps
fnstenv
add
jbe
movups
stos
clc
mov
divps
cmps
mov
jle
rol
sti
mov
sub
add
jg
cmp
and
add
popf
leave
aas
out
lea
pop
add
ficom
loope
or
out
scas
scas
add
dec
out
aad
and
aas
sub
es
cmps
test
push
add
xor
ds
and
sub
mov
ja
sbb
rol
mov
(bad)
(bad)
loop
out
add
(bad)
pop
add
out
add
add
xchg
push
mov
inc
xor
aas
sub
int3
fadd
add
inc
ret
dec
sbb
inc
add
fisub
(bad)
out
lods
mov
add
sub
jno
in
out
ss
es
repz
cmps
cmps
lds
push
es
push
add
cld
arpl
sbb
hlt
out
cmps
mov
and
out
fcmovbe
std
es
int
add
mov
sub
inc
(bad)
out
mov
and
stc
xchg
rcl
imul
das
pop
or
push
sub
clc
clc
add
fs
sahf
scas
jo
add
adc
loopne
adc
mov
ins
add
dec
xchg
add
inc
scas
mov
jb
inc
lea
bound
movs
or
dec
sub
add
xlat
xlat
xchg
fld
out
pop
sub
ins
ins
add
pop
out
sub
dec
nop
nop
imul
add
and
pop
bound
out
arpl
adc
in
iret
daa
cmp
out
jp
adc
xor
popa
and
add
sbb
es
add
jecxz
sub
movs
test
sub
or
xor
das
out
sbb
inc
es
or
mov
inc
add
out
push
sar
add
icebp
sub
aam
dec
iret
add
leave
leave
xlat
push
push
out
js
add
dec
fcomp
test
add
inc
iret
mov
mov
add
xlat
out
adc
dec
es
push
dec
aaa
aaa
adc
(bad)
mov
push
fcom
out
adc
dec
fstp
and
inc
ins
pop
cmp
and
jmp
cmp
and
jbe
(bad)
dec
inc
outs
es
std
jns
jge
mov
fadd
aas
adc
sbb
jne
dec
out
clc
add
ret
retf
stos
pop
pop
es
push
lds
mov
pushf
pop
push
out
lock
xchg
repz
sub
aaa
jns
jl
adc
out
movs
loopne
push
push
jnp
add
enter
lods
lods
inc
popf
pop
out
call
repnz
out
je
sbb
lds
add
add
and
loop
cmp
add
cmps
std
popa
cmp
test
lods
xchg
push
xchg
out
cld
pop
add
cmp
sbb
jp
add
outs
loop
(bad)
(bad)
mov
add
cli
popf
push
inc
div
add
in
cmps
es
sbb
xchg
add
mov
out
pop
mul
(bad)
fcmovnu
add
cli
gs
sbb
cld
add
xor
add
and
hlt
out
cli
push
and
sbb
aas
mov
dec
dec
jo
cmp
add
push
push
cmps
out
add
dec
es
push
movs
add
fwait
fwait
sahf
xchg
mov
xchg
add
out
xchg
ret
sbb
out
jns
pop
es
test
add
sbb
sbb
out
pop
mov
js
cmp
adc
es
out
in
inc
inc
mov
push
jp
push
out
xchg
out
(bad)
dec
(bad)
sbb
lahf
jo
add
mov
pop
dec
sbb
jne
add
je
ror
add
xor
pop
out
dec
inc
sub
stos
add
ret
adc
and
nop
es
ret
cmp
daa
out
or
jnp
movs
test
clc
add
into
scas
scas
dec
mov
es
shl
push
push
jns
pop
cmps
loop
shl
mov
cmp
or
retf
enter
retf
shl
sub
xlat
out
call
loop
cmp
sub
sub
adc
aad
sbb
movs
sub
int
mov
mov
xchg
xchg
mov
iret
sub
cdq
cdq
jecxz
or
add
nop
lods
and
mov
mov
imul
add
jbe
lea
cli
mov
hlt
out
call
jne
and
lods
or
lea
adc
gs
stos
pop
pop
pusha
popf
cld
out
xadd
aas
inc
xchg
cli
inc
loope
es
inc
push
sub
add
cdq
rcl
out
add
and
jg
sbb
out
loope
xchg
es
cmp
add
cs
(bad)
aam
in
add
xchg
sub
popw
out
dec
push
imul
call
push
xchg
add
psubsw
jle
out
out
add
retf
in
pop
es
mov
mov
jbe
sub
lock
add
jp
fwait
and
(bad)
sahf
add
add
push
add
sbb
cmp
loopne
sbb
(bad)
es
push
add
mov
es
stc
dec
jp
push
xchg
cmp
rol
jno
add
repnz
pop
pop
stos
pop
aam
push
retf
xor
es
inc
mov
dec
popa
popa
and
sub
sub
les
add
retf
fdiv
mov
pop
jp
ds
add
dec
ret
pop
pop
pop
or
mov
mov
xor
out
imul
inc
inc
inc
test
shl
js
add
gs
ja
cli
fwait
fwait
cmps
fadd
out
jecxz
jne
stos
add
jae
xchg
xchg
pusha
sbb
sbb
mov
and
aad
scas
push
es
fiadd
stc
stc
cli
and
std
out
push
and
sub
inc
xchg
es
pushf
lahf
pusha
or
shr
sub
daa
sahf
push
add
out
sub
add
pop
jns
out
test
je
xchg
add
leave
int3
int3
mov
inc
es
mov
mov
scas
es
clc
add
push
mov
pop
add
fistp
and
or
jge
sbb
movs
or
out
add
in
out
add
pop
and
cmp
add
or
push
hlt
aaa
sbb
add
out
xor
inc
pop
stos
stos
lods
pop
call
add
mov
sbb
popa
add
and
mov
add
mov
stos
pop
rol
add
pop
or
mov
or
or
xlat
mov
aaa
add
ins
or
mov
fwait
aas
sbb
repnz
jp
xchg
cld
mov
cmp
mov
ss
(bad)
dec
int3
int3
les
out
das
adc
aas
out
push
xchg
mov
out
bnd
mov
pop
mov
add
es
sti
dec
nop
push
push
push
out
sahf
es
out
inc
rcl
jne
push
out
out
dec
add
out
clc
mov
pop
push
add
sbb
dec
or
test
mov
sub
dec
xchg
xchg
cmp
xchg
adc
lock
test
ja
push
adc
arpl
inc
jo
adc
call
out
jmp
sti
add
aam
loope
add
push
jmp
cld
cli
call
add
dec
in
mul
out
lods
lods
add
mov
push
sbb
pop
xchg
loopne
cli
pop
add
mov
lods
xchg
aam
add
scas
clc
adc
mov
shr
in
es
fld
cmp
jle
int
add
sub
sbb
leave
xchg
xchg
cld
popa
add
shr
out
cmp
repz
add
out
std
mov
xchg
out
imul
es
cmc
or
inc
add
adc
pop
dec
add
aas
adc
pop
movs
jecxz
push
dec
add
mov
adc
push
(bad)
fimul
imul
sub
mov
mov
xchg
cwde
and
mov
adc
pop
hlt
inc
out
push
sbb
cmp
mov
(bad)
fwait
fwait
cmp
cld
out
pop
aad
add
pop
adc
out
ins
or
es
add
dec
jns
sub
es
add
mov
add
call
cmp
cwde
mov
inc
aad
push
cld
(bad)
out
clc
pushf
add
fidiv
mov
shl
jno
add
and
loop
push
inc
add
cmp
and
lea
sbb
adc
(bad)
mov
cmp
out
pop
push
test
data16
aad
dec
out
pusha
xchg
xor
out
(bad)
cmp
push
sbb
add
out
dec
loope
mov
lock
out
outs
cli
cli
lods
add
retf
inc
(bad)
xchg
test
or
push
push
add
jo
sbb
arpl
add
ficomp
test
popa
je
mov
pushf
imul
cmp
mov
sbb
retf
inc
add
mov
xbegin
add
mov
lods
arpl
je
ds
cld
es
xchg
mov
push
es
sub
outs
outs
test
test
out
rcl
inc
add
arpl
stos
es
jmp
xchg
xchg
iret
and
es
add
push
push
mov
mov
add
es
push
stc
cmp
data16
add
js
retf
out
jecxz
mov
fsubr
cs
and
shr
dec
inc
inc
stc
or
push
out
or
fsub
ja
pop
inc
sbb
(bad)
ins
inc
mov
add
jg
cmps
jge
push
add
xchg
jmp
xchg
stos
pusha
ret
std
sub
jmp
daa
pop
jle
out
add
ret
es
xchg
adc
bound
xchg
and
movs
out
inc
inc
sub
sub
out
out
ror
(bad)
nop
cld
out
rol
mov
xchg
mov
jge
inc
mov
sahf
cmc
cmp
or
add
mov
add
mov
out
enter
push
add
sub
jns
push
xchg
add
jp
es
mov
jbe
(bad)
retf
add
ret
shr
cmp
mov
clc
in
es
mov
push
nop
in
jae
mov
pop
out
xor
push
stos
stos
loopne
jmp
dec
lea
fcomp
sbb
pop
out
pop
test
es
or
add
inc
mov
daa
daa
call
add
ja
ds
mov
add
call
adc
pop
cmp
out
out
adc
in
mov
jae
scas
add
inc
inc
test
inc
push
test
js
out
lods
and
inc
inc
adc
shl
cmp
fsub
pushf
loop
(bad)
psubw
lods
out
mov
xlat
jg
out
jmp
push
data16
out
xchg
les
outs
pusha
out
mov
test
or
or
add
cmp
add
sbb
pop
and
mov
jne
mov
dec
xor
add
xchg
stc
rcr
cmps
add
lea
ror
out
scas
cmp
fstp
sub
stc
jbe
aas
sbb
dec
dec
cdq
xor
adc
(bad)
mov
cmp
or
or
js
add
shr
pop
and
arpl
leave
add
hlt
mov
out
je
xchg
das
adc
add
clc
out
mov
cmp
addr16
xlat
jmp
div
lock
jmp
xchg
sub
mov
fadd
pop
pop
stos
aad
out
test
xor
mov
add
jo
cmp
fs
(bad)
out
hlt
add
es
mov
sbb
loopne
mov
jl
add
mov
sub
add
daa
dec
xchg
out
rol
aad
dec
add
enter
push
dec
fsubr
jge
cmp
xor
or
cli
pop
add
lahf
add
xor
push
mov
mov
inc
jle
es
jl
movs
movs
add
mov
cwde
iret
xchg
test
fsub
pop
add
out
inc
call
daa
add
pop
pop
sahf
jne
mov
add
push
push
int3
or
mov
mov
shl
adc
jmp
xchg
or
xchg
cmps
dec
add
int3
mov
mov
stc
es
mov
adc
xor
jns
nop
dec
jge
xlat
sub
jbe
add
retf
arpl
out
mov
test
push
mov
es
gs
add
fst
xchg
dec
dec
outs
sbb
out
add
mov
stos
pop
aad
dec
aam
or
sbb
add
rol
(bad)
cmc
xchg
xchg
jl
mov
jns
lods
mov
jg
mov
or
arpl
pop
mov
inc
inc
jge
shl
out
xor
lods
out
test
es
xchg
add
add
pop
cdq
addr16
es
cmp
(bad)
cmp
pop
bound
xchg
cmps
adc
push
xchg
xchg
iret
or
push
out
addr16
cmp
pop
xor
and
bound
add
dec
pop
pop
lods
inc
add
or
mov
lahf
dec
add
sub
data16
add
pop
pop
sti
sbb
and
jno
xor
daa
repnz
out
or
inc
mov
loope
bswap
jnp
es
and
dec
setp
add
mov
cld
lock
pushf
movs
mov
add
cld
pop
int
jg
inc
or
add
mov
ret
out
add
adc
out
mov
add
bnd
push
add
mov
add
pop
adc
inc
jle
icebp
jb
add
sbb
cmp
ss
iret
fisttp
psrlq
mov
arpl
test
push
push
pop
stos
in
out
mov
mov
pop
scas
scas
ins
std
add
je
sbb
sub
ficomp
out
add
loopne
sub
pop
pop
push
xchg
mov
stos
cwde
inc
xchg
mov
(bad)
pop
shl
repnz
xlat
or
test
leave
out
test
pusha
loope
es
imul
fstp
fiadd
add
lea
cs
add
push
push
ins
xchg
cld
out
dec
and
popf
hlt
cmp
(bad)
ja
daa
mov
or
push
jo
or
sub
add
sub
out
rcr
out
mov
pop
out
mov
mov
add
add
nop
jge
pop
es
push
test
js
mov
mov
add
data16
mov
pop
fisubr
es
pop
add
ss
rol
gs
adc
xchg
js
or
add
xchg
xchg
add
out
shl
es
sbb
popa
bound
lods
cmp
fsub
stc
js
dec
sbb
mov
ja
mov
mov
sbb
mov
and
push
add
push
out
jne
xor
or
jnp
mov
cmp
sbb
jns
clc
clc
push
push
aam
pop
arpl
lahf
out
push
sti
add
adc
inc
adc
retf
nop
out
cmp
pop
cli
sbb
push
push
sbb
bound
cmps
jmp
cmp
fsubr
call
add
ss
dec
out
aaa
lea
mov
(bad)
mov
int
dec
push
push
push
imul
sbb
cs
sub
test
sbb
sub
jbe
repnz
adc
push
ins
stc
cmp
out
xchg
jno
mov
out
ss
in
mov
popf
lock
cmp
push
test
jl
dec
out
test
ja
dec
xchg
inc
out
retf
es
jg
idiv
ja
loopne
jb
cmp
movs
sub
(bad)
or
push
mov
add
out
scas
cmp
es
outs
pop
sub
add
adc
sbb
add
es
push
jmp
loopne
pop
add
outs
outs
add
int
or
dec
loop
add
pop
or
es
rol
fisubr
push
push
arpl
out
fdecstp
inc
add
mov
add
cs
xor
sbb
add
push
jl
daa
daa
jl
ja
xor
jnp
mov
sar
out
pop
add
push
cmps
pop
into
bound
fmul
(bad)
(bad)
sub
sbb
inc
mov
scas
(bad)
cld
sub
fsub
add
push
out
test
add
out
aam
repz
and
sbb
out
or
mov
out
sbb
loopne
dec
gs
out
mov
fadd
iret
iret
sub
mov
inc
add
scas
or
xlat
xlat
ja
cli
out
add
inc
pop
out
repnz
mov
mov
out
cwde
jae
adc
test
add
hlt
shr
retf
enter
and
aas
mov
and
push
cmps
out
mov
leave
inc
arpl
iret
iret
addr16
pusha
mov
push
push
es
add
fisttp
xchg
cmp
punpcklwd
inc
inc
mov
scas
add
add
inc
fisubr
out
sbb
loopne
hlt
(bad)
stos
add
cmp
les
out
or
cld
add
call
add
cmps
push
jae
sbb
and
jle
mov
sbb
push
add
in
out
loopne
pop
es
cmp
(bad)
jge
outs
pop
pop
add
and
mov
rol
xchg
nop
out
cmp
std
add
hlt
out
ds
sbb
mov
add
mov
aas
mov
fucom
add
or
cmp
es
sub
adc
dec
es
lods
js
ja
test
je
add
pop
fmul
hlt
out
push
and
and
out
jl
add
out
mov
out
loopne
mov
ds
adc
jge
jb
mov
add
add
leave
shl
lds
pop
jne
mov
sub
xchg
add
inc
add
xlat
adc
cmps
cmps
cmps
push
dec
out
aas
(bad)
mov
retf
nop
pop
aam
mov
and
imul
add
sysret
ror
int
push
into
out
and
add
out
xor
add
in
jnp
jp
lds
es
pop
clc
inc
inc
push
add
es
add
test
(bad)
out
pop
push
add
add
std
xchg
cmp
cld
mov
add
push
cs
out
inc
and
add
inc
(bad)
es
mov
repnz
jp
inc
xlat
cmp
(bad)
sti
lods
and
mov
pop
(bad)
in
add
in
repz
out
in
add
inc
ins
pop
out
loopne
pop
add
not
sbb
xor
sub
icebp
add
dec
hlt
hlt
aam
adc
sub
pop
add
xchg
and
js
popa
add
out
data16
jno
mov
cmp
lods
lods
or
lds
lock
sub
mov
jmp
fstp
add
js
sbb
hlt
add
(bad)
sbb
out
mov
int
(bad)
nop
xchg
inc
out
cmp
add
jecxz
cmp
add
cmp
cli
cli
loope
leave
arpl
fild
clc
jne
pop
es
xlat
(bad)
out
add
aas
mov
dec
rcr
gs
and
ds
jae
mov
push
out
(bad)
inc
lods
lods
into
sub
out
add
push
push
pop
loopne
out
add
sbb
dec
es
add
cwde
aam
and
add
push
push
loop
nop
sub
xlat
push
out
setne
jnp
int
push
out
out
lock
(bad)
lahf
(bad)
sbb
ins
gs
int3
add
push
add
addr16
add
es
mov
bound
es
xor
jle
(bad)
(bad)
push
xor
jecxz
push
push
out
push
out
ins
xchg
add
scas
pop
inc
int
fdivr
cmp
cmps
rcl
out
lods
xchg
test
out
xchg
mov
es
mov
add
mov
sbb
adc
sbb
inc
es
ins
inc
pusha
je
mov
retf
gs
inc
sahf
out
sub
es
pop
in
std
push
inc
inc
rcr
cdq
out
mov
pop
jmp
jae
stc
sbb
push
rol
outs
es
js
add
jmp
fstp
inc
inc
mov
and
sbb
daa
out
movups
cld
add
cmps
dec
dec
pop
xor
cmps
repnz
add
or
out
push
push
inc
add
mov
imul
add
push
test
add
iret
or
xor
jne
out
fld
mov
stc
mov
in
jo
out
sbb
es
cmp
add
xor
mov
dec
(bad)
lock
aaa
pop
add
pop
lahf
ja
inc
inc
shl
mov
call
sub
out
std
jo
es
ins
xor
add
cdq
push
es
lock
in
add
ins
cmp
mov
in
add
ss
out
out
inc
test
out
clc
out
sbb
inc
push
inc
lods
add
(bad)
sbb
mov
xchg
int
lea
mov
daa
es
xor
movs
sub
out
add
mov
or
add
es
jno
std
std
dec
cld
in
cmp
dec
pop
rol
ror
out
std
or
addr16
out
aas
mov
xchg
xchg
scas
lds
mov
mov
mov
sub
add
mov
add
int
paddd
pusha
pusha
jb
push
out
pop
push
shl
sti
mov
xchg
xchg
cmps
xchg
test
push
mov
add
int3
stos
pop
out
mov
mov
jecxz
xor
jl
cmp
push
fcmovnu
mov
push
imul
add
scas
or
lods
test
add
pop
inc
es
push
mov
(bad)
add
dec
fnstsw
add
adc
mov
lock
imul
movs
add
outs
mov
lods
std
std
add
pop
xchg
xchg
sar
shl
loop
out
add
ins
clc
out
pushf
loopne
and
cwde
pop
add
add
mov
int
mov
jge
mov
out
shl
and
mov
adc
add
cmp
dec
(bad)
out
inc
xchg
cmc
mov
(bad)
in
or
cld
cld
push
imul
outs
add
mov
adc
lea
shl
nop
shl
(bad)
push
sbb
or
es
sbb
xchg
pushf
jne
es
je
call
outs
loope
aad
fimul
call
inc
out
pop
cld
jae
push
out
imul
repnz
mov
psubb
stos
mov
(bad)
jmp
inc
cmps
cmps
add
push
int3
int3
ret
rol
nop
nop
sub
inc
add
mov
(bad)
push
dec
mov
add
jg
lods
arpl
out
repz
es
hlt
pop
xor
ret
test
or
test
add
aaa
aaa
pop
sbb
setns
add
(bad)
leave
leave
out
add
es
rol
das
es
jmp
fcmovu
scas
ja
loopne
sbb
gs
std
shr
es
jno
xchg
xchg
mov
jne
add
cld
inc
pop
add
call
pushf
mov
jns
(bad)
out
add
push
out
sbb
pop
es
or
and
shl
adc
add
out
dec
dec
mov
cdq
es
pop
cmp
es
enter
pop
pop
ror
and
dec
es
adc
sbb
les
rol
fdivr
es
add
or
shl
mov
push
mov
sub
sti
lahf
push
cwde
out
paddsw
sar
out
xor
and
xor
or
call
ret
addr16
xor
cld
adc
(bad)
sbb
cmp
and
mov
pop
add
jo
cwde
sbb
sar
sbb
jecxz
xchg
inc
out
std
loope
fcomp
in
scas
out
mov
mov
cmp
jns
add
xor
stc
fwait
pop
pop
mov
(bad)
sar
push
cs
push
scas
add
mov
push
inc
sub
add
gs
pop
es
pop
std
mov
cmp
aaa
push
cmps
cmp
adc
mov
add
inc
add
scas
xchg
dec
xor
mov
(bad)
hlt
loope
in
add
mov
mov
cmp
int
out
fldcw
pusha
pusha
aam
stos
out
inc
iret
cmps
mov
retf
out
aad
dec
cmp
pop
jp
out
push
loope
xchg
xchg
pop
xlat
iret
out
add
es
mov
not
sbb
out
out
and
sahf
test
pop
add
push
mov
adc
push
es
ds
jmp
adc
mov
les
and
lea
mov
adc
es
push
test
daa
iret
es
ret
outs
sbb
push
mov
out
sti
sub
xor
stos
test
mov
scas
frstor
dec
lds
jecxz
add
mov
add
cs
adc
ins
sub
push
add
add
mov
jmp
rol
es
jmp
jb
sbb
out
push
add
mov
push
or
jb
and
mov
ins
sbb
xor
pop
test
imul
in
in
adc
mov
into
dec
dec
jmp
int3
out
mov
inc
mov
test
mov
lds
shl
nop
nop
nop
shl
or
idiv
clc
pop
mov
jmp
mov
pop
popa
popa
push
in
sub
imul
aaa
aaa
sbb
das
es
jae
popf
popf
test
mov
fs
add
scas
ror
cmp
push
in
out
push
mov
cmp
movs
add
jbe
mov
xchg
add
inc
out
shr
and
movntps
iret
in
es
loop
leave
leave
push
jl
mov
cmp
sbb
iret
out
ins
mov
mov
psrlw
push
jmp
packuswb
jecxz
add
je
nop
test
out
and
in
out
test
xor
clc
cs
loopne
mov
pop
inc
add
sbb
or
inc
mov
ins
xchg
pop
pop
mov
out
aad
jle
dec
imul
jo
dec
imul
add
scas
adc
lds
out
pop
push
call
sub
loop
sbb
ja
cmp
xchg
(bad)
shl
and
(bad)
(bad)
mov
out
adc
fld
dec
dec
xchg
test
es
int3
repnz
push
push
and
popf
jns
pusha
scas
out
adc
adc
pop
out
sub
add
out
loopne
aam
hlt
mov
pop
out
push
inc
inc
es
jo
div
sets
add
mov
in
ds
fs
or
dec
es
loop
add
jecxz
pop
call
cwde
push
cmp
(bad)
cmps
clc
xlat
and
fsubr
cmp
out
pop
dec
mov
shl
push
out
popf
fiadd
es
jns
jb
cmps
(bad)
gs
jbe
add
and
inc
sub
mov
aam
add
movs
icebp
inc
pop
es
jne
pop
add
push
mov
les
jp
mov
add
or
and
or
inc
mov
xor
add
call
jge
sbb
ja
iret
out
out
stc
retf
retf
xor
inc
out
add
lds
xor
cdq
fadd
es
xchg
push
int
popa
or
dec
ins
add
pushf
cmp
retf
(bad)
mov
pop
pop
push
push
es
out
mov
xor
add
mov
lock
in
add
fstp
ss
(bad)
mov
out
adc
sub
lock
aas
aas
add
jg
inc
fbstp
add
add
loopne
xor
add
pop
dec
outs
sub
(bad)
sti
adc
and
out
mov
ja
pop
push
mov
lea
mov
pushf
lock
shr
es
out
(bad)
jmp
js
movs
jge
gs
nop
xchg
es
aas
mov
cmp
add
xchg
es
xor
jne
mov
es
mov
add
imul
popf
out
fisttp
out
and
das
push
out
add
jecxz
out
jb
icebp
es
mov
ins
mov
and
add
std
popa
popa
ret
out
outs
shl
add
cmps
jbe
out
mov
add
mov
loopne
in
out
and
mov
push
repnz
and
(bad)
add
fld
pop
mov
pushf
add
in
dec
adc
pop
shr
imul
in
cld
add
and
out
add
out
addr16
add
mov
mov
add
aas
xchg
mov
out
cwde
inc
add
mov
push
out
pop
scas
inc
mov
mov
lock
es
xchg
lds
sbb
repz
sub
dec
jb
cmps
clc
add
mov
addr16
(bad)
and
sahf
and
out
jecxz
shr
enter
es
adc
and
aad
add
stos
out
cmp
add
scas
scas
in
adc
jo
adc
and
mov
jle
ins
sub
lds
add
xchg
mov
es
mov
movs
sub
es
mov
in
call
sbb
pusha
or
mov
rcl
cli
xor
hlt
inc
cmps
es
adc
push
pop
add
lds
sbb
out
dec
verr
push
into
js
mov
push
or
pop
inc
mov
fistp
out
in
mov
add
pop
push
loop
es
out
add
leave
mov
add
add
cmp
scas
data16
mov
jno
shl
out
loop
enter
arpl
sahf
sahf
bnd
cwde
cwde
mov
sub
xor
mov
ror
js
xchg
in
add
les
cmp
add
(bad)
adc
xchg
or
or
adc
inc
cmp
lahf
xor
dec
loop
(bad)
fstp
call
in
nop
es
stos
clc
jne
rol
mov
push
in
mov
out
int3
inc
xchg
std
std
ret
add
mov
push
cmp
add
xchg
dec
movs
(bad)
aam
sbb
int3
out
cmp
es
mov
rol
loope
and
das
fcomp
mov
outs
ds
out
ja
pop
es
adc
lds
retf
es
add
jmp
pusha
std
xor
out
add
es
int3
inc
and
adc
dec
sub
scas
js
adc
pop
jle
out
or
fdiv
add
je
mov
jb
add
mov
adc
sbb
rcl
cmp
es
mov
sbb
add
xchg
es
stos
pop
pop
add
cmc
int3
out
and
pop
fsub
add
xchg
stos
xor
jmp
cmc
or
or
add
out
add
push
xchg
xchg
dec
add
push
xchg
jle
mov
call
xor
es
add
sub
jmp
cli
mov
int
and
inc
add
push
add
or
jne
and
es
add
clc
es
sbb
cwde
aas
aas
push
xchg
pop
dec
dec
add
mov
les
pop
jbe
imul
lahf
lahf
sbb
pop
pop
es
and
arpl
ja
inc
movs
les
invd
or
mov
sub
adc
and
add
sbb
add
push
dec
cs
rcl
loopne
rol
mov
mov
xor
es
enter
add
xchg
ins
out
je
xor
(bad)
cmp
imul
add
out
outs
add
pop
pop
xor
shl
jnp
xchg
cmp
xchg
into
mov
call
rcr
out
mov
mov
jnp
in
lods
mov
pop
rcr
shl
movs
jo
add
es
ds
add
dec
jecxz
es
and
sub
inc
mov
into
pop
pop
jg
std
out
(bad)
fs
dec
addr16
data16
call
add
dec
stc
scas
add
adc
mov
cvttps2pi
es
push
mov
loopne
xor
push
mov
ds
cld
out
cmp
aas
dec
sub
fcmovnu
jae
mov
ds
outs
pusha
cmc
out
arpl
xchg
retf
dec
dec
lock
sub
out
fild
jg
pop
adc
out
push
push
ret
fiadd
rcl
pop
and
adc
out
xchg
dec
pop
inc
inc
and
in
es
adc
add
fidivr
mov
dec
mov
out
dec
mov
es
retf
add
xor
push
jne
pop
pop
outs
jg
sbb
add
rol
cwde
(bad)
out
dec
lods
add
xchg
xchg
inc
fcom
xlat
imul
out
adc
jae
xor
test
out
adc
movups
inc
pop
mov
add
mov
xchg
out
(bad)
xor
es
xchg
stc
sub
add
ins
or
out
cmp
xchg
cmp
jmp
dec
dec
dec
pop
movntq
(bad)
push
test
pop
icebp
and
in
pop
mov
and
in
es
lds
mov
xchg
xchg
jmp
das
fbld
pushf
sub
ss
loopne
out
add
or
cmps
xchg
push
ins
test
dec
mov
add
dec
cmp
inc
test
cwde
pminsw
es
mov
cmp
and
inc
out
inc
jge
es
test
and
dec
dec
ins
cmp
lahf
sbb
mov
push
add
movs
inc
add
mov
mov
push
es
fnstcw
les
enter
jp
es
jl
adc
into
test
int
aaa
int3
out
lea
jbe
pop
add
or
shr
xchg
xchg
inc
add
das
pushf
scas
dec
es
inc
aaa
push
mov
inc
inc
adc
out
and
pop
cmp
test
test
imul
es
jmp
mov
add
inc
add
test
cmp
and
add
movs
xor
and
sbb
dec
cmps
and
es
pusha
sub
int
test
je
ret
jge
mov
jns
jl
out
sahf
push
xor
pop
add
aas
and
es
retf
push
add
cs
es
mov
sbb
dec
rol
fucomp
inc
out
lods
inc
(bad)
in
push
sti
jecxz
out
xchg
push
repnz
cs
mov
mov
mov
add
out
in
test
out
sub
bound
dec
scas
movs
pop
pop
add
xchg
leave
out
mov
xchg
pusha
pusha
push
add
shl
add
sbb
adc
mov
and
sti
pop
pop
jg
sbb
add
sbb
outs
out
pop
imul
add
(bad)
jns
addr16
es
push
cmp
retf
mov
shr
xchg
xor
repnz
xor
push
inc
or
cmp
sub
jne
add
push
mov
cwde
cwde
pop
loop
out
pop
retf
cmp
adc
add
fcom
cdq
aaa
aaa
push
pop
iret
out
lahf
add
es
inc
aas
aas
dec
push
(bad)
es
xsavec
loopne
test
xchg
jno
jnp
add
dec
clc
cmp
lods
mov
or
mov
es
pushf
adc
and
mov
jg
imul
out
xchg
add
or
out
add
sub
enter
out
pop
add
out
ja
add
es
fucomi
push
push
cmp
hlt
es
arpl
add
add
cld
cs
mov
dec
cwde
ret
add
add
add
xchg
daa
out
(bad)
retf
dec
add
cmp
inc
or
shl
pop
xor
mov
out
loop
xchg
es
inc
in
(bad)
dec
ins
ins
mov
and
test
inc
add
lock
sti
jmp
in
es
out
pop
add
sbb
and
pop
inc
out
add
mov
and
hlt
das
push
cmp
pop
ins
fistp
push
adc
out
add
cmp
inc
mov
les
dec
cmc
push
xchg
gs
mov
(bad)
jnp
add
(bad)
out
mov
and
icebp
inc
leave
call
jge
push
inc
mov
add
sbb
pop
mov
sub
out
out
aas
cwde
cmp
ror
or
add
push
imul
jno
mov
mov
outs
jmp
(bad)
xor
cwde
mov
and
xlat
push
jno
out
sbb
add
cmp
fstp
and
add
out
or
es
pmulhuw
push
loope
add
out
add
jno
mov
sub
inc
sub
nop
dec
dec
outs
enter
fst
add
dec
jbe
(bad)
xlat
xlat
clc
fwait
scas
add
out
popa
and
adc
scas
cld
cld
jecxz
sub
(bad)
adc
add
lods
out
sbb
jo
add
lea
inc
out
xlat
es
add
mov
adc
call
fstp
es
jae
imul
mov
out
and
add
out
add
imul
add
jp
shr
lea
or
cmp
popa
out
add
imul
adc
dec
hlt
xor
push
mov
push
mov
out
pop
(bad)
in
(bad)
ja
and
xor
fstp
es
fstp
add
cmps
(bad)
loope
mov
adc
movs
mov
cmp
sbb
fs
jbe
out
test
retf
arpl
mov
xchg
mov
es
cmps
movs
stc
stc
xchg
add
and
xor
shl
jmp
add
adc
inc
pop
xor
push
push
repnz
xor
push
jno
add
jno
mov
push
enter
push
or
fnstenv
cmc
xor
inc
stc
pop
mov
push
dec
dec
cmp
mov
mov
lods
add
fadd
add
sbb
adc
xchg
add
mov
cmps
shl
add
out
inc
in
in
add
cli
dec
out
scas
xlat
inc
or
shl
mov
mov
ret
out
pop
stc
scas
es
xchg
add
mov
mov
(bad)
arpl
pop
cmps
rcl
(bad)
repnz
push
or
add
push
inc
mov
inc
inc
add
inc
clc
clc
sub
out
add
inc
sub
or
add
pop
pop
lock
adc
int3
or
pop
adc
mov
imul
jle
fsub
lods
add
push
or
test
mov
push
in
add
ins
add
pusha
push
push
test
popa
out
jl
mov
or
xchg
mov
clc
shl
ret
rcl
out
mov
sbb
pop
xlat
add
cmp
aad
mov
pop
add
das
jo
xor
jle
loop
inc
cmc
jmp
jge
out
add
sbb
inc
ret
out
push
sub
sbb
out
mov
es
cmp
pop
add
or
xor
mov
or
xchg
jp
add
jmp
inc
adc
sub
fadd
jnp
jo
push
or
std
push
mov
sbb
out
xor
add
sub
loope
jne
add
adc
sbb
je
add
lahf
cmp
outs
outs
cmp
mov
xchg
and
iret
iret
pushf
push
fadd
cwde
cmps
inc
out
and
mov
adc
xchg
out
pop
push
rcr
scas
add
test
aaa
imul
cmp
pop
clc
clc
add
jnp
dec
dec
and
add
pop
and
(bad)
mov
jp
imul
repnz
out
nop
add
es
call
fsub
sti
jecxz
push
xor
loopne
add
cwde
push
mov
or
pop
out
mov
mov
jmp
and
es
cwde
mov
mov
daa
out
and
sub
add
push
popf
(bad)
xchg
es
mov
pop
pop
call
add
hlt
icebp
icebp
cmp
xchg
out
enter
push
mov
or
cmc
es
retf
(bad)
or
pop
add
adc
xchg
dec
dec
sub
loopne
les
add
mov
pop
arpl
inc
inc
lods
and
fstp
movs
add
mov
pop
shl
leave
jecxz
hlt
inc
inc
cmp
cmp
mov
ds
in
out
enter
das
xor
out
pop
add
inc
add
dec
dec
ficomp
push
add
inc
and
pop
rcl
mov
or
jp
mov
mov
test
xchg
mov
sbb
lock
(bad)
cmp
lods
add
sbb
es
test
test
retf
fld
fld
iret
inc
inc
mov
add
es
fldcw
das
xor
mov
in
mov
fwait
jmp
pop
or
out
pop
add
rol
and
out
not
add
sub
out
push
mov
cdq
sahf
mov
cmp
add
es
outs
loope
mov
hlt
test
cmp
push
jmp
in
pop
cmp
jo
test
fcmovu
cmp
mov
push
pusha
mov
cli
pop
jp
add
rcr
es
and
adc
add
push
sub
xchg
xchg
mov
add
xor
loop
sub
(bad)
mov
jmp
test
inc
es
add
cwde
inc
jge
and
rcr
cmp
outs
add
es
xchg
(bad)
xchg
xchg
mov
jl
cmps
fwait
jne
adc
rsm
pop
mov
cmp
out
push
dec
push
ss
js
jo
xor
ins
push
es
xchg
int
jbe
dec
es
retf
mov
es
popa
push
add
in
and
fadd
add
daa
cdq
cdq
pop
mov
add
es
push
sbb
push
es
dec
pop
jp
and
add
add
(bad)
cmc
cmc
cld
mov
out
and
es
add
jl
xor
add
jns
jge
mov
loop
mov
push
imul
lock
out
outs
add
or
popa
out
aas
icebp
add
shr
fadd
or
out
add
xchg
int3
add
ret
cmp
hlt
inc
inc
fwait
mov
and
and
out
int
add
out
mov
in
jg
out
add
or
mov
pop
fcomp
loop
arpl
add
mov
inc
add
mov
(bad)
mov
mov
fldenv
inc
add
pop
jg
out
xchg
mov
jb
add
add
xor
jo
in
mov
cmp
mov
mov
adc
shld
jecxz
loopne
out
lds
add
cmps
es
movups
(bad)
les
int3
xor
call
nop
xor
es
pop
push
out
mov
je
add
(bad)
inc
pop
xchg
es
ret
iret
addr16
inc
push
lahf
(bad)
(bad)
dec
rol
out
and
dec
cmc
add
es
jo
add
test
leave
add
mov
or
sub
out
pop
vcmpltss
out
add
add
aam
fwait
add
enter
jbe
sbb
or
es
lea
in
in
in
cld
out
cs
mov
add
test
shl
sbb
out
ins
push
xor
cmp
cdq
sub
adc
pop
jns
mov
js
mov
inc
mov
fstp
addr16
das
sub
cmps
es
(bad)
dec
mov
add
mov
adc
loope
inc
mov
pop
xchg
cwde
cwde
and
les
add
push
sar
xchg
stc
push
shl
stos
test
(bad)
(bad)
imul
and
jmp
pop
xor
iret
jns
out
xchg
jno
adc
jmp
stos
stos
mov
and
lock
ret
add
push
cdq
js
mov
out
mov
dec
adc
popa
push
mov
out
or
outs
inc
(bad)
mov
retf
std
std
pop
push
mov
add
in
mov
nop
nop
aad
loope
add
test
mov
cmp
or
dec
jno
sub
addr16
es
sub
add
add
lds
push
fisttp
push
pop
out
cmps
cmp
sbb
out
xor
jge
adc
add
js
stos
into
inc
or
leave
jae
add
ret
xchg
lock
gs
and
add
clc
jb
es
xor
add
ins
ins
ror
mov
inc
data16
scas
fadd
es
repnz
inc
inc
inc
jo
in
es
adc
pop
mov
push
add
es
push
out
pop
pop
and
into
es
sbb
loopne
arpl
dec
es
and
xchg
shr
out
pop
jg
enter
out
test
mov
xlat
add
xchg
out
in
inc
popf
jae
push
add
out
mov
cli
in
out
add
or
add
add
outs
jmp
leave
cmps
sahf
cmp
adc
pop
out
adc
sub
and
jp
add
mov
mov
js
add
mov
cmp
push
(bad)
inc
aaa
out
add
(bad)
clc
pop
pop
lea
mov
pusha
out
and
gs
sbb
cmp
aaa
aaa
mov
jae
cli
cmp
into
rcl
cmp
icebp
sbb
sahf
jbe
xor
enter
es
xchg
sub
add
add
stc
loopne
xlat
or
cmp
loop
arpl
xor
jne
adc
sub
pop
push
es
push
jb
jle
outs
adc
es
pop
pop
cmp
out
imul
add
push
dec
out
popa
or
push
push
add
out
sbb
es
aad
int
call
out
enter
xlat
jae
dec
out
adc
icebp
outs
mov
mov
add
ret
stos
out
mov
mov
and
stc
stc
cwde
cmp
out
call
mov
jmp
add
inc
sbb
add
pop
sbb
(bad)
mov
in
out
aam
clc
sbb
adc
jo
push
push
sti
inc
xchg
out
add
popf
cmp
and
je
lds
xchg
sub
xor
and
arpl
sti
pop
fsubp
add
adc
es
out
std
std
or
xor
xor
dec
fcomp
add
inc
out
cmp
push
sbb
xor
or
adc
sbb
inc
or
mov
fnstcw
ret
jbe
push
pop
sub
jmp
and
scas
popf
ja
es
adc
mov
cwde
or
xchg
addr16
pusha
movs
lahf
lahf
sub
es
jbe
xor
ror
iret
push
push
pop
sti
retf
fwait
fwait
add
mov
lahf
lahf
out
xchg
out
jcxz
stos
stos
aam
aas
out
push
sub
out
retf
add
es
retf
push
push
(bad)
popa
pop
push
push
leave
mov
out
add
jmp
pop
push
pusha
xor
ret
and
(bad)
sbb
movs
sub
jg
and
es
adc
mov
push
push
cs
jmp
neg
or
and
push
or
push
xchg
cmps
cmps
pop
cs
ffreep
hlt
sahf
stos
stos
enter
add
add
jae
add
ds
pushf
sbb
cs
cli
es
cdq
xor
call
mov
xchg
popf
es
add
jecxz
lea
add
push
adc
aam
adc
add
jns
out
and
adc
prefetcht2
rol
out
popf
mov
add
out
rcr
ins
or
lea
aad
out
popf
jp
add
push
dec
adc
dec
ins
pop
pop
test
rcl
es
jp
cmp
lahf
sub
es
into
repz
inc
loope
fs
jbe
pop
xor
xchg
add
(bad)
out
ds
(bad)
es
mov
mov
cmp
mov
popa
rcl
pop
rcl
push
xor
aam
add
lods
mov
mov
les
inc
test
mov
out
cmp
pop
mov
out
out
lds
addr16
cld
sti
out
add
jmp
adc
xor
xchg
call
ret
dec
dec
fild
cli
es
movs
aas
adc
xchg
push
sbb
shl
psubsb
add
cmp
mov
shl
inc
cmp
jne
jg
xchg
imul
fbld
xchg
dec
add
out
jle
jno
cmp
jnp
rcr
add
xor
(bad)
sbb
push
dec
call
inc
es
xor
push
add
xor
xchg
hlt
or
call
sbb
add
xchg
pop
pushf
movs
(bad)
cmovno
push
out
add
dec
in
dec
add
retf
push
fisttp
out
test
es
inc
mov
fs
pop
inc
add
add
sbb
add
xor
cmp
scas
fstp
rcl
out
aaa
add
jge
pop
xchg
xchg
jbe
mov
dec
mov
add
jle
and
ret
xchg
add
push
(bad)
pop
nop
nop
sbb
(bad)
out
add
outs
push
sub
mov
das
jge
scas
sbb
cmp
add
or
sub
out
mov
test
add
mov
daa
popf
mov
out
sar
sub
(bad)
verw
stc
stc
jbe
inc
out
cli
add
cmp
sub
jecxz
push
push
pop
ss
add
ja
and
not
pop
(bad)
jmp
jmp
xor
fcom
aam
pop
cmps
rol
mov
out
push
prefetch
and
retf
lods
add
push
dec
dec
rcl
test
inc
inc
mov
pop
fs
cmp
add
push
fcomp
lds
pop
stos
pop
jl
cs
xor
xchg
dec
rcr
push
inc
ins
ins
(bad)
pusha
scas
adc
out
sub
sub
pop
mov
add
and
popf
sbb
out
call
lahf
add
out
mov
push
inc
add
std
mov
dec
xchg
lock
lods
push
push
push
cmp
cwde
add
cmp
sti
aad
add
out
not
in
es
unpckhps
mov
pop
pop
out
out
add
stc
stc
(bad)
add
push
dec
adc
out
dec
pop
repz
fnstenv
es
cmc
std
std
ror
dec
shl
sub
xor
dec
pop
out
out
jge
inc
add
inc
mov
mov
push
cwde
shl
test
xchg
xor
repz
add
imul
cmps
rcl
add
dec
mov
(bad)
sub
shl
sub
mov
add
cmp
jle
(bad)
sbb
out
add
es
jns
rcl
push
push
lods
es
xor
ins
or
xchg
rol
pop
mov
adc
xor
push
and
xchg
xchg
shl
mov
inc
pusha
pusha
or
jmp
jl
add
out
xor
ret
cmp
ds
cmps
sbb
xor
and
sub
mov
add
out
jmp
mov
add
lds
jmp
cmp
(bad)
fsubr
out
mov
es
push
fisttp
add
ins
cmc
imul
cli
js
pop
(bad)
cmovl
sbb
inc
data16
out
mov
xchg
add
push
xor
or
fiadd
retf
retf
ror
daa
out
sti
clc
icebp
es
ins
dec
push
int
js
add
out
out
add
xchg
push
std
dec
xor
add
or
out
fcomp
add
xchg
hlt
dec
stos
out
inc
jmp
out
add
imul
es
mov
dec
inc
inc
cmp
bound
sbb
add
mov
mov
xchg
sbb
push
out
add
sbb
mov
hlt
inc
movlps
jnp
aaa
shl
std
inc
mov
out
fbld
bound
add
xor
cmp
into
into
add
cwde
(bad)
paddb
pop
out
repz
sbb
imul
and
jmp
add
mov
pop
mov
es
cmps
mov
jns
hlt
scas
es
add
aaa
ret
ret
dec
inc
lods
es
pop
sub
add
push
aaa
test
cmp
aad
sub
sbb
out
and
mov
push
out
je
add
mov
mov
cwde
cli
add
xor
add
int3
push
retf
retf
xchg
iret
in
add
add
shl
pop
add
add
add
nop
nop
pusha
jl
out
cwde
pop
add
add
(bad)
jp
out
cmp
inc
es
push
cmp
add
xor
aas
xchg
fldenv
add
inc
push
es
sti
push
and
add
xor
mov
mov
sub
mov
inc
sub
cmp
clc
(bad)
pop
mov
ret
ret
mov
ins
out
ja
add
lds
lock
xor
imul
mov
out
or
out
adc
add
mov
shl
mov
mov
mov
shl
add
in
xchg
(bad)
out
mov
(bad)
mov
add
out
add
or
cmp
mov
test
add
sub
ins
and
add
fldcw
add
aaa
add
dec
out
sbb
retf
retf
or
and
mov
add
es
sti
out
stos
inc
add
lods
call
mov
push
cmp
popa
add
jns
out
mov
pop
adc
fstp
(bad)
(bad)
stc
add
retf
fcom
add
xor
or
xor
daa
and
jb
add
jbe
pop
pop
jne
pusha
out
and
xlat
cmp
xchg
repz
out
push
mov
(bad)
shl
stos
lea
jge
out
jecxz
or
ror
(bad)
outs
outs
cli
imul
out
cmps
jg
fmul
mov
pop
pop
aaa
pop
inc
es
mov
cmp
jae
jno
xchg
out
push
xor
add
mov
out
push
sti
dec
es
add
add
bound
popf
sbb
nop
sbb
add
sbb
push
cs
out
cmp
rcr
push
and
out
jg
pop
or
jge
jbe
add
add
pop
imul
xchg
cmp
data16
add
mov
movs
es
add
call
pop
ret
fcomp
aaa
addr16
shl
jnp
push
sbb
and
add
popf
xchg
ins
ins
inc
add
or
cmp
sbb
jg
jno
test
mov
call
and
jge
shr
out
add
sar
lods
lods
popf
add
cwde
mov
xor
mov
loopne
inc
push
push
push
(bad)
push
pop
ud1
inc
and
fwait
rcl
add
add
aam
mov
fsub
jmp
mov
leave
call
repz
xchg
add
jbe
pop
fmul
clc
lods
add
push
mov
fnsave
or
add
xor
ret
push
repnz
fucom
push
push
icebp
xchg
xchg
iret
verr
xchg
sub
(bad)
add
in
in
retf
push
add
lods
lods
inc
push
and
cmps
add
push
cli
cli
pusha
xor
cmps
cmp
inc
pop
pop
and
jg
push
out
in
push
es
(bad)
imul
pop
mov
not
fsub
out
add
ds
sub
pop
jnp
mov
je
jb
xor
fdivr
(bad)
inc
add
inc
jne
or
sbb
leave
out
in
xchg
add
lods
push
shr
adc
inc
and
inc
mov
sahf
xor
xor
mov
add
lock
(bad)
das
sbb
hlt
cmp
sub
aad
gs
out
add
pop
sbb
ins
fs
add
sub
inc
sahf
mov
add
inc
retf
xlat
xlat
in
push
mov
mov
out
(bad)
aaa
and
push
aad
add
pop
sub
inc
outs
outs
inc
add
imul
push
add
cmp
push
scas
push
add
fs
pop
mov
inc
push
loopne
add
mov
loope
scas
xchg
xor
mov
aad
mov
add
es
mov
aad
sbb
out
add
push
es
sbb
xor
je
mov
add
lock
jb
adc
xchg
rol
push
push
call
ret
aas
aas
in
dec
add
(bad)
fnstcw
add
es
ss
mul
out
cmps
add
dec
or
out
pop
add
sbb
jbe
adc
xchg
and
fst
loopne
fwait
add
lea
bound
cmp
pop
sbb
add
mov
jo
sub
push
out
add
data16
mov
push
push
repnz
in
in
ja
jg
mov
sbb
stos
out
inc
or
add
add
dec
dec
outs
xchg
fiadd
lock
loop
adc
and
out
xchg
rcr
push
popa
icebp
and
fneni(8087
shr
aam
add
cdq
out
sub
adc
inc
inc
inc
out
add
jmp
out
fstp
es
cdq
ret
cmp
jecxz
cmp
(bad)
and
mov
add
aad
lods
lods
pop
aas
shl
add
(bad)
jbe
push
or
retf
push
sti
xchg
jmp
pop
in
mov
bound
es
mov
xor
sub
stos
out
add
into
into
mov
scas
out
xchg
lock
es
sbb
jg
add
sbb
adc
xor
pop
jl
in
and
add
xchg
add
xchg
mov
loop
es
pop
add
imul
lock
mov
cld
push
out
mov
out
or
mov
jmp
test
add
mov
in
jb
jl
add
push
(bad)
aam
outs
outs
cmp
add
and
or
cli
add
pushf
sbb
out
lock
xchg
es
xor
push
dec
lds
in
in
pop
out
int
dec
add
out
mov
movs
es
add
mov
add
lahf
icebp
mov
loope
pop
pop
mov
and
adc
add
add
sbb
push
cmp
add
xchg
std
out
push
dec
inc
es
psraw
xor
fnsave
movs
pop
pop
push
std
outs
es
xor
and
movs
adc
loopne
push
out
jg
add
jns
stos
cs
sbb
(bad)
cmova
out
cld
add
mul
mov
loop
pop
retf
out
mov
stos
mov
out
(bad)
add
repz
mov
sub
push
out
call
adc
and
std
std
cmp
shl
mov
nop
es
jmp
out
(bad)
sbb
movs
out
mov
shl
leave
xchg
add
cmp
out
mov
(bad)
and
(bad)
js
xor
stc
out
inc
add
nop
and
call
aas
cmp
out
movs
shr
push
push
pop
add
std
cmps
or
add
(bad)
prefetchw
or
mov
dec
int
out
mov
pop
push
mov
shl
add
mov
add
mov
cmps
daa
daa
ins
add
stos
fcmovu
fsubr
out
jge
je
sldt
mov
dec
mov
out
test
es
mov
mov
mov
out
sub
xor
add
outs
dec
int3
add
loop
adc
out
or
ins
out
iret
pop
int3
les
lea
es
ins
out
data16
add
shl
pop
mov
add
es
jb
jle
mov
dec
dec
add
out
(bad)
push
(bad)
out
popa
add
(bad)
(bad)
push
pop
sbb
push
je
push
or
xor
jnp
pop
pop
enter
rcl
dec
add
mov
stos
mov
cli
dec
add
mov
arpl
pop
es
add
fs
cwde
sub
loopne
and
add
cli
es
je
repz
and
pop
add
pop
xor
or
cmp
inc
cwde
ss
adc
xchg
add
mov
test
out
sub
or
xor
ja
arpl
mov
mov
cmp
add
inc
leave
cmp
add
lea
xor
rol
sub
dec
xchg
es
mov
and
sbb
xor
push
fs
es
enter
sbb
leave
leave
add
xchg
out
and
es
cli
cmp
mul
xor
mov
(bad)
es
adc
rcl
loop
(bad)
scas
pop
pop
adc
xchg
adc
add
fild
popa
sbb
stc
add
clc
jge
sahf
add
es
jmp
push
sub
jns
pusha
sub
add
inc
fsubr
mov
add
es
nop
std
out
test
pushf
or
inc
inc
pop
(bad)
dec
es
fld
mov
adc
ror
es
loop
xlat
data16
add
sbb
stos
sbb
add
cmp
push
int3
in
add
xchg
pop
push
out
popf
mov
add
stos
or
pop
xor
jns
add
mov
mov
add
push
push
outs
inc
ret
out
and
rcr
xor
hlt
test
inc
lahf
es
fidiv
and
jmp
test
pop
mov
nop
popf
popf
cmps
add
add
sbb
xor
outs
adc
cmp
fcmovnu
dec
push
jge
es
pop
inc
mul
in
add
js
add
out
out
sub
es
sub
inc
rol
add
es
call
mov
cmp
iret
lock
out
lods
add
aam
popf
rol
test
out
retf
retf
out
icebp
pushf
out
lock
add
out
jg
adc
xchg
enter
add
scas
out
or
es
add
sub
es
outs
repnz
test
cld
add
test
stc
not
std
(bad)
out
out
aad
cmp
xor
imul
mov
pop
inc
lahf
lahf
mov
cmc
loopne
pop
aas
sahf
out
add
shl
sub
cmp
scas
add
xor
cdq
mov
addr16
ss
cwde
clc
sub
add
jne
mov
add
mov
push
test
ret
out
inc
jle
mov
out
jg
xchg
jnp
xchg
out
add
es
dec
xchg
scas
in
in
push
cld
inc
xor
add
mov
jp
shr
mov
mov
xor
add
test
es
or
add
add
ins
or
cmp
sub
push
adc
mov
aam
sar
sub
add
nop
pop
pop
sbb
inc
inc
fcom
xor
bound
xor
(bad)
es
add
aaa
bts
jo
push
out
es
loopne
push
xchg
add
es
shl
mov
repz
cmc
adc
pusha
add
cmps
dec
ror
xor
inc
jl
mov
add
je
test
dec
add
xchg
push
xor
push
out
add
data16
out
bswap
fsub
jp
out
fistp
sbb
mov
mov
add
mov
daa
daa
push
(bad)
out
or
es
into
xor
ret
es
push
add
fwait
fwait
pop
jb
cmc
cmc
fdivr
js
call
cmp
arpl
mov
mov
fdiv
jo
mov
movs
add
int
es
mov
fiadd
add
mov
and
xor
xchg
ror
hlt
lsl
pushf
xchg
ret
shl
jns
push
push
inc
sar
and
or
xchg
xchg
mov
lea
out
imul
std
mov
pop
push
sub
and
mov
jb
cmp
add
mov
out
out
xchg
inc
sub
js
loope
xchg
aaa
aas
aas
inc
add
push
mov
jne
fstp
add
push
push
dec
mov
test
add
or
es
stos
std
or
xchg
cmp
pop
out
cmc
and
idiv
add
pop
out
out
sti
aad
es
mov
and
mov
xchg
fldenv
add
mov
in
pop
in
xchg
test
loopne
adc
call
add
ins
dec
inc
out
dec
or
add
add
and
and
das
dec
rol
fisubr
or
xor
dec
dec
cmp
sbb
jbe
gs
inc
sub
inc
jae
enter
add
sti
(bad)
out
out
sbb
mov
inc
cdq
adc
es
cld
add
inc
test
es
inc
fistp
and
push
push
sub
clc
add
or
add
not
sbb
out
xchg
pop
jecxz
dec
cmp
shl
and
jnp
test
call
adc
fwait
xchg
outs
add
rcl
into
mov
mov
hlt
stos
sbb
popa
add
out
sbb
jmp
mov
rcr
push
adc
int
ret
or
(bad)
repz
out
shl
retf
jecxz
out
mov
icebp
add
repnz
xor
xlat
pop
mov
frstor
adc
add
cmp
push
pop
pop
cmp
les
pop
mov
add
or
adc
stos
icebp
lock
addr16
xor
std
dec
lock
add
push
fsubr
dec
es
(bad)
std
mov
push
in
dec
out
xchg
dec
es
xor
sbb
cmps
hlt
ins
add
push
mov
arpl
cmp
cmp
cmp
jge
and
ret
add
adc
mov
jo
loopne
add
jno
ds
mov
fbld
cwde
mov
and
add
inc
loopne
xor
pop
outs
add
in
out
cld
addr16
mul
or
push
push
push
add
scas
out
arpl
imul
jecxz
and
mov
adc
popf
sbb
(bad)
shl
add
sub
es
ds
inc
aaa
aaa
loop
add
out
mov
stc
adc
xor
pop
push
xchg
pop
sbb
add
or
add
cmc
adc
es
pop
jg
es
cmp
mov
call
add
fadd
es
prefetcht0
jo
mov
cs
arpl
cmp
ins
mov
push
sub
and
dec
loop
mov
jns
jmp
es
push
add
es
mov
sub
xorps
pop
movs
movs
add
out
push
cmps
hlt
dec
dec
ja
push
out
leave
ret
inc
aad
shl
fimul
pop
sub
xchg
mov
push
and
push
call
xor
fimul
out
cmp
scas
cmp
outs
outs
xchg
xor
add
sbb
push
test
pop
sti
push
es
jecxz
add
mov
sbb
out
add
mov
(bad)
xchg
adc
inc
es
rol
sbb
jns
shl
sbb
(bad)
es
mul
(bad)
sub
or
into
sub
out
pop
bound
push
pop
push
pop
ror
retf
ds
dec
add
push
add
lock
inc
dec
out
mov
xchg
in
jb
repz
pop
jo
add
cmp
or
mov
cwde
lock
add
test
sbb
out
shr
mov
add
les
cs
sub
out
rcl
push
push
jo
push
out
mov
shl
push
add
jmp
loop
aas
add
loope
push
push
xor
and
jb
pop
into
mov
jo
out
(bad)
pusha
jb
mov
fbld
mov
mov
mov
add
add
mov
mov
add
es
push
int3
add
pop
stc
enter
and
or
aaa
mov
icebp
dec
out
and
or
rol
test
mov
pminub
and
outs
mov
add
iret
sbb
mov
add
test
popa
and
pop
mov
xchg
loopne
pusha
out
add
aas
mov
rcr
cli
mov
out
xchg
xchg
push
movs
ds
add
shl
jecxz
inc
out
pop
or
repz
loopne
mov
dec
pop
mov
jmp
outs
sbb
inc
mov
add
pusha
pop
gs
shl
(bad)
cld
out
push
jns
fld
shl
mov
out
cmp
push
repnz
or
add
mov
std
std
clc
aaa
cmp
mov
add
shl
xor
enter
ror
mov
add
add
sub
or
jo
cdq
add
xchg
and
pop
and
pusha
mov
inc
(bad)
es
jl
or
xchg
lods
mov
aad
cmp
out
jecxz
jg
loope
add
enter
xchg
dec
call
je
or
or
les
in
pop
add
test
inc
arpl
and
ds
add
push
cmp
push
add
and
movs
push
dec
dec
or
pushf
sbb
movs
test
dec
add
push
ja
add
lahf
and
sbb
dec
add
xchg
out
mov
(bad)
pushf
adc
cmc
jae
cli
add
add
ret
out
sets
ja
cmp
data16
out
vmwrite
xchg
cld
pushf
pop
push
je
cmp
pop
cmps
es
mov
add
int
pop
mov
pusha
std
or
add
imul
(bad)
shr
aas
jo
add
mov
mov
lock
xchg
push
dec
mov
out
scas
stos
push
add
sub
add
bound
jmp
es
jle
add
sub
mov
pusha
(bad)
std
cld
es
mov
not
in
retf
ret
hlt
mov
fisttp
sub
inc
add
stos
clc
clc
mov
cmp
pop
fcomp
pop
push
aaa
out
lock
js
mov
cmp
mov
out
mov
lock
shr
lods
out
int3
push
fwait
push
push
xchg
ins
out
loopne
inc
fst
aam
adc
mov
add
push
icebp
ror
rol
and
mov
push
push
jns
sbb
cmp
mov
fcomp
lods
lods
pop
es
out
fcmovnbe
jecxz
push
iret
xchg
aam
stos
and
pop
es
jmp
adc
mov
add
sahf
popf
dec
xchg
and
pop
inc
add
or
(bad)
out
sbb
push
pop
and
push
xchg
cmps
stos
stos
and
int
ret
out
and
dec
div
rsqrtps
out
fstp
fld
into
arpl
sbb
cmc
scas
xchg
icebp
loope
ins
test
out
cmp
adc
push
lock
jecxz
in
out
cs
es
or
bound
sbb
call
fucom
aad
lock
add
popa
(bad)
cli
test
cmc
xchg
inc
mov
out
jae
(bad)
es
loope
push
ja
sbb
out
pop
add
jge
ds
clc
(bad)
or
add
mov
cmp
jmp
sbb
mov
push
or
lods
in
in
mov
out
mov
js
out
pop
std
xchg
add
lods
pop
cli
out
mov
add
(bad)
outs
outs
iret
dec
cmp
out
mov
xlat
jno
std
mov
add
test
shl
xor
add
and
iret
ja
or
dec
in
cld
fidivr
add
cdq
retf
or
les
mov
jno
out
adc
add
pop
vpunpckhwd
pop
pop
(bad)
scas
add
add
iret
fadd
lds
add
xor
repnz
(bad)
lea
xchg
aas
ds
ror
or
out
fs
es
(bad)
add
movs
and
es
mov
mov
shl
scas
movs
jns
es
mov
mov
retf
out
mov
pop
xchg
add
out
cmp
fild
cmp
push
test
repnz
out
nop
adc
push
out
mov
shl
jmp
push
jno
and
cmp
test
call
out
inc
cmps
inc
sub
push
outs
xchg
jl
cmp
pop
div
loopne
sub
ja
aaa
scas
jne
cmp
es
inc
pop
mov
arpl
jno
add
sub
xor
sub
jnp
or
out
data16
add
inc
sbb
out
cmp
imul
add
sub
(bad)
mov
add
call
sub
out
push
inc
loope
add
into
inc
add
ja
pop
in
in
or
fcomip
adc
push
inc
out
stos
js
push
push
add
mov
rcr
adc
ret
xchg
pop
mov
shl
add
inc
and
es
jle
adc
icebp
jp
add
and
data16
out
inc
add
das
push
push
dec
push
add
rcr
pop
test
rcl
sub
jg
jae
jno
and
out
and
es
jle
add
xchg
push
ss
pop
out
pop
mov
repnz
sbb
dec
out
sbb
pop
dec
and
add
fs
xchg
xor
jg
push
mov
pop
jnp
or
cmp
out
mov
pop
add
and
lea
sti
dec
std
pop
add
inc
mov
loopne
ss
add
and
std
or
dec
dec
out
adc
cmp
inc
test
add
xor
aam
ficom
(bad)
es
(bad)
call
inc
inc
es
adc
fstp
inc
xchg
rol
adc
mov
add
mov
mov
dec
cmp
out
call
cmp
pop
out
(bad)
mov
add
or
cmc
pop
into
inc
es
add
mov
add
test
add
push
push
hlt
jo
out
pop
mov
es
pop
sub
jmp
lods
push
out
rcr
gs
test
es
pop
adc
inc
jp
sbb
cmp
retf
data16
jge
dec
xchg
loopne
pop
push
ds
add
js
icebp
mov
xor
mov
ficomp
add
add
add
adc
fsubr
cmc
mov
imul
(bad)
popf
jmp
cmps
es
nop
popa
push
(bad)
add
cwde
out
outs
add
imul
loop
mov
rcl
jb
push
out
sbb
aas
retf
stos
leave
add
push
pop
pop
mov
xor
add
daa
fisttp
pop
mov
cmp
sbb
call
sub
mov
add
cli
(bad)
cmps
xchg
cmp
adc
dec
out
cmp
xor
jns
ja
xchg
lods
fwait
mov
pop
sahf
add
add
and
or
add
enter
jmp
add
dec
sub
popf
cmp
push
dec
stc
stc
push
pop
out
dec
add
arpl
ins
sub
cld
add
in
out
cmp
call
into
into
add
cs
addr16
es
cld
push
add
mov
mov
cld
imul
pop
push
(bad)
out
loopne
mov
scas
out
xor
xor
xchg
sub
out
or
sbb
out
inc
lods
mov
jno
and
push
shl
push
add
pop
sub
add
add
and
retf
dec
add
ds
shr
pop
out
lock
sub
out
out
push
push
add
xor
es
inc
imul
cmp
nop
mov
jnp
mov
aam
add
int3
lahf
fisub
(bad)
pop
sti
jno
rol
mov
or
sbb
ret
mov
out
sub
add
xlat
mov
pop
inc
es
out
dec
dec
movs
(bad)
lds
sbb
into
cld
out
cmp
sbb
inc
cmp
cdq
cdq
cvtps2pi
out
add
popf
repnz
out
out
scas
call
jno
out
push
sbb
dec
bound
out
or
jp
mov
mov
aad
je
sbb
xor
pop
add
out
jae
es
cmp
sbb
add
add
and
dec
(bad)
cmp
mov
push
push
neg
out
add
jmp
mov
loopne
sbb
add
mul
dec
int
mov
dec
add
out
fwait
in
es
call
in
pop
pop
adc
test
dec
cdq
cmps
sub
add
mul
imul
cli
cli
mov
mov
das
add
jo
xchg
lahf
movs
and
sar
cdq
pop
out
and
sub
arpl
cmp
js
leave
leave
sbb
sbb
aaa
popf
es
fadd
add
jp
and
or
xchg
add
adc
push
out
es
add
out
push
adc
dec
dec
arpl
jp
test
ret
mov
movs
imul
xor
mov
out
adc
jnp
mov
and
or
adc
add
frstor
and
cmp
inc
xor
imul
or
test
xchg
mov
fwait
add
paddd
out
pushf
(bad)
popf
fs
sub
cmp
cmp
sti
add
add
addr16
mov
fadd
es
bnd
out
push
ds
ins
mov
out
cmp
or
sub
dec
les
cmp
dec
pop
pop
push
xchg
and
out
scas
add
ins
jmp
mov
pop
(bad)
(bad)
adc
add
sar
jbe
out
pop
add
scas
clc
loop
rcl
cmp
add
call
and
push
sti
(bad)
(bad)
add
push
clc
es
jae
cmp
mov
sbb
das
dec
out
inc
int3
add
(bad)
cmc
or
scas
aam
cmp
add
ret
pop
in
movs
es
retf
test
xor
les
push
add
dec
(bad)
adc
add
daa
fwait
dec
mov
push
add
xchg
outs
xor
jns
mov
mov
pop
xlat
mov
pusha
mov
add
dec
repnz
pushf
clc
fwait
pop
pop
pop
das
adc
lea
ds
jns
push
aad
out
test
es
outs
nop
nop
mov
sar
add
dec
lahf
mov
div
fwait
pusha
movs
es
cmps
mov
dec
mov
mov
mov
add
call
or
xchg
sbb
out
jne
mov
xchg
xor
cmovo
(bad)
(bad)
sti
ror
pop
mov
pop
pop
pop
stos
jno
out
loop
sbb
mov
adc
int3
dec
popf
popf
aas
lods
mov
and
test
test
aam
ret
jecxz
in
sbb
add
or
sahf
sahf
push
push
out
add
mov
out
pop
add
fwait
fwait
pop
call
xor
and
cli
add
es
jmp
rol
sahf
stos
out
movnti
les
adc
xor
push
inc
inc
mov
ret
lds
pop
es
cdq
push
jg
std
push
dec
and
sbb
dec
aaa
aaa
add
bound
iret
adc
mov
and
out
nop
sbb
movs
out
adc
push
add
fild
mov
sbb
es
cld
int3
pop
add
jae
sub
mov
cmps
addr16
pop
mov
dec
dec
mov
lock
pusha
les
add
jb
loopne
movs
sbb
ds
jg
out
jbe
adc
int
mov
out
mov
xor
mov
popa
mov
out
xor
out
jecxz
dec
mov
cwde
push
add
rol
es
cmp
nop
push
push
add
and
std
add
arpl
hlt
out
pop
xor
jp
cmp
jmp
push
and
iret
xor
add
test
call
pop
aam
(bad)
inc
daa
out
hlt
cs
xchg
mov
dec
dec
add
or
add
inc
mov
mov
add
xchg
out
das
pop
pop
cmps
or
jno
es
dec
mov
xor
cmp
add
enter
xor
fs
out
xlat
imul
cmp
es
adc
cmp
repnz
sub
mov
pop
out
add
push
call
sbb
repz
aaa
adc
iret
ror
mov
xchg
jle
sbb
mov
rol
add
dec
ret
es
add
mov
js
add
sub
push
push
es
add
fbld
xchg
shr
sub
jmp
xchg
mov
rol
xor
outs
gs
adc
(bad)
in
mov
cli
out
or
lea
mov
pusha
inc
add
loopne
out
ret
in
inc
es
mov
mov
clc
cdq
ins
out
xchg
clc
jbe
push
data16
pop
push
xchg
pusha
mov
push
es
push
repz
call
jns
mov
popf
into
adc
sub
test
shl
xor
mov
cmp
mov
cmp
ja
jmp
cmp
(bad)
out
push
add
xchg
push
push
xchg
mov
ret
inc
out
test
fisttp
out
mov
hlt
cmp
jo
mov
enter
es
add
xor
dec
jno
int3
out
sahf
add
es
xor
xchg
xchg
jbe
add
loop
int
cmp
mov
movs
scas
mov
loopne
inc
into
into
or
aas
out
ins
add
or
sbb
out
enter
add
stc
and
inc
pop
pop
sbb
daa
jns
icebp
out
inc
popa
xchg
mov
test
add
dec
mov
cmps
fwait
movs
out
nop
jl
lock
out
pusha
jmp
sbb
inc
inc
bnd
es
pop
add
jnp
add
dec
dec
pushf
div
es
pop
ins
ins
aad
lods
js
jl
push
out
and
fisttp
cli
out
push
out
pop
es
pop
push
stos
call
or
repnz
xor
hlt
sbb
xchg
sbb
mov
arpl
es
dec
add
add
mov
add
cmp
sub
add
dec
out
push
pop
lods
push
push
dec
add
out
jb
xchg
mov
sahf
test
out
pcmpeqw
or
add
fwait
sbb
pusha
out
pop
ins
mov
pop
out
mov
cmp
fsub
test
jl
movs
movs
out
in
sbb
ins
in
out
in
mov
retf
inc
pop
(bad)
push
push
add
popf
es
loope
enter
add
mov
popa
push
add
test
mov
push
sub
es
aaa
xchg
adc
push
pop
push
add
push
(bad)
push
push
xchg
cmp
out
sbb
sbb
add
push
cmp
into
into
in
lods
mov
adc
sbb
aad
nop
add
mov
sub
mov
cwde
mov
push
es
jmp
hlt
repz
xchg
push
push
es
int3
mul
js
jo
sbb
stc
xchg
out
cdq
and
push
test
clc
clc
push
mov
add
dec
dec
data16
adc
sbb
mov
enter
add
icebp
inc
xor
adc
out
mov
ret
pushf
sub
fwait
into
add
shl
aas
stos
retf
add
outs
ins
pop
out
sub
pop
mov
pop
add
add
push
xor
test
test
retf
push
xchg
xchg
mov
inc
outs
outs
loopne
add
mov
stos
jl
enter
add
xchg
add
or
and
add
rol
clc
push
add
add
imul
jl
popa
add
adc
out
cld
mov
push
pushf
add
xchg
jno
out
add
fisub
cmp
cmp
es
daa
cmc
push
push
sub
lds
scas
(bad)
mov
jge
add
std
std
cld
mov
in
push
push
sbb
inc
repnz
das
sbb
mov
addr16
xlat
sbb
shl
jmp
sbb
adc
push
push
enter
outs
dec
add
fld
jg
jge
jno
(bad)
add
dec
jne
pop
mov
add
cs
bnd
ret
pop
jb
add
fwait
inc
sbb
(bad)
dec
icebp
icebp
add
out
into
mov
pop
and
ins
loopne
mov
add
pop
ret
cmp
inc
repnz
lods
mov
daa
add
or
and
es
xor
out
xor
mov
out
cmp
in
pop
jae
out
cmp
das
das
aas
mul
dec
or
movs
mov
sbb
sbb
and
shr
test
inc
mov
cwde
push
push
call
ret
mov
out
pop
jnp
add
(bad)
pop
pop
jecxz
adc
xor
jns
adc
cmps
pusha
retf
out
mov
pause
mov
dec
cmp
xchg
adc
div
outs
dec
es
out
movs
add
ret
and
pushf
mov
dec
add
js
out
jp
ja
xor
fs
retf
retf
add
lea
adc
leave
push
cmps
es
imul
arpl
sahf
add
mov
sbb
daa
jno
push
popa
loopne
out
xchg
jnp
es
int3
xchg
adc
aad
mov
out
adc
imul
pop
push
mov
xchg
addr16
fmul
xchg
out
mov
add
xor
xchg
sub
mov
xchg
mov
out
es
pop
add
call
mov
and
mov
out
dec
and
out
mov
dec
push
jg
add
es
hlt
hlt
push
xor
gs
stc
jge
out
out
mov
cmp
inc
sub
pushf
pushf
xlat
sbb
out
add
rcl
out
out
aad
pop
add
leave
loopne
call
or
jo
add
xchg
out
push
dec
inc
rcl
cli
push
add
mov
(bad)
push
mov
outs
push
enter
adc
sub
jae
fisubr
aam
sbb
es
pop
mov
out
pop
bound
pop
add
sub
(bad)
jp
add
pop
or
lods
rol
cmc
mov
cmp
addr16
xor
es
fwait
daa
jp
jns
sbb
fidiv
and
mov
add
mov
ins
mov
repz
aad
mov
out
add
test
cdq
dec
dec
xor
add
es
or
and
add
clc
cmp
jl
pop
stos
add
out
leave
shl
cli
xlat
add
sub
adc
xor
pusha
mov
call
xchg
add
push
jmp
and
dec
sub
mov
jnp
add
cwde
cwde
aaa
mov
out
and
push
fidivr
add
inc
inc
es
rcl
mov
aas
add
es
sbb
jno
repz
retf
and
je
xor
call
add
sub
shl
out
sub
add
out
push
sbb
xchg
inc
inc
stc
test
add
out
cbw
adc
pop
add
push
xlat
mov
add
jp
es
loop
cdq
out
out
add
xor
out
or
icebp
es
and
arpl
fisubr
mov
es
sti
push
or
add
es
xor
in
in
mov
and
inc
stos
xchg
es
sub
inc
out
popa
popa
add
es
dec
lods
lods
in
fiadd
add
ins
cmps
dec
dec
add
mov
add
lock
out
push
inc
fbld
pop
int
jbe
add
jecxz
xor
mov
out
add
es
pop
cmps
inc
inc
add
or
addr16
push
push
fs
out
add
repz
out
das
cmp
rol
jae
mov
clc
add
pop
out
stos
or
icebp
xchg
xchg
pop
int3
std
sub
out
dec
enter
dec
mov
(bad)
jp
inc
mov
out
add
movs
pop
js
out
jg
jne
push
imul
add
add
jo
fsubrp
pusha
inc
sub
dec
jmp
es
adc
dec
mov
es
or
adc
jnp
sar
pop
push
jl
out
push
cmp
sbb
and
retf
imul
push
add
sbb
es
dec
jb
pop
je
imul
dec
test
cwde
mov
add
sub
push
repz
jno
es
xchg
fs
pop
add
ret
out
(bad)
pop
jmp
inc
out
lock
(bad)
mov
inc
push
imul
les
dec
jnp
out
(bad)
nop
mov
cli
pushf
ins
add
and
std
jae
mov
inc
fsub
add
fisub
push
les
pop
int3
inc
inc
inc
pop
dec
out
out
nop
add
mov
shr
aad
mov
ss
add
retf
ja
sub
or
out
add
xchg
adc
mov
lock
pop
mov
shr
mov
out
inc
add
es
shl
add
jne
pop
daa
repz
cmc
xchg
add
mov
xlat
or
xchg
add
push
cdq
out
jmp
push
jmp
rcl
out
es
loope
add
call
add
int
(bad)
out
sar
sub
add
and
popa
popa
je
(bad)
out
jb
cmp
cli
push
add
push
es
add
dec
dec
pop
imul
not
repnz
js
es
and
dec
stc
add
adc
push
mov
aaa
dec
sbb
loop
add
dec
dec
inc
out
push
out
dec
inc
add
mov
std
or
es
fild
jbe
lods
push
pop
stos
es
fistp
fldenv
add
mov
add
adc
or
xchg
pop
or
add
jnp
int3
xchg
add
mov
(bad)
jae
inc
inc
mov
pop
dec
out
adc
movs
xchg
jl
pop
cmp
cmps
inc
push
push
ja
jp
dec
repnz
loop
(bad)
icebp
icebp
cmp
retf
add
(bad)
out
out
jl
test
add
fild
sbb
pop
loopne
sahf
jl
stc
pop
adc
sub
add
data16
pop
aas
push
ins
out
xor
mov
inc
add
pop
pop
add
push
out
aaa
xchg
(bad)
(bad)
test
out
push
mov
adc
jl
and
add
in
push
icebp
push
outs
mov
out
(bad)
jne
lods
lods
inc
mov
mov
mov
pmulhuw
push
iret
out
xor
add
cmp
mov
add
or
out
nop
or
call
dec
jp
sbb
aas
out
mov
lods
jmp
mov
add
sub
sub
sbb
cmps
retf
aaa
add
push
xor
mov
add
pop
jbe
sbb
jg
into
sub
enter
cmp
sahf
bound
xchg
(bad)
div
dec
rcr
jmp
fnstcw
xor
leave
test
xchg
dec
dec
add
add
rol
add
jnp
sbb
aam
es
adc
(bad)
lock
pushf
pushf
pop
dec
lods
es
out
push
cmp
fs
loop
add
inc
and
out
fcmovnbe
sub
out
mov
add
and
je
and
in
lahf
add
(bad)
pusha
xchg
jg
add
jb
stc
cmp
pushf
pushf
lahf
(bad)
fsub
sub
jae
mov
mov
or
shl
out
rol
loop
jno
add
xor
push
push
out
test
(bad)
cld
dec
dec
or
outs
imul
dec
mov
call
jecxz
and
jne
sub
xchg
mov
or
smsw
xchg
jb
fs
clc
xchg
and
pushf
push
leave
out
add
mov
sub
(bad)
add
xchg
jecxz
dec
adc
mov
mov
out
lock
add
pop
repz
lock
popa
add
adc
es
push
cld
jmp
adc
test
pushf
es
les
add
das
arpl
addr16
out
inc
jae
pop
pop
adc
cmp
ret
shl
out
loope
mov
add
push
push
mov
gs
stos
push
inc
out
cmp
retf
mov
out
add
daa
call
out
adc
imul
push
dec
mov
add
out
sub
lods
out
movs
out
xor
fs
xchg
out
add
es
sti
sub
es
repz
and
rol
leave
inc
mov
inc
mov
lods
or
mov
daa
inc
ret
scas
repnz
jge
lock
ins
sub
inc
sub
out
cmc
enter
rol
or
outs
outs
cmp
mov
mov
imul
test
xor
out
mov
jmp
add
jge
repz
loope
mov
out
adc
adc
sub
add
sbb
jge
add
mov
or
mov
sar
enter
fld
fisub
data16
jo
movs
movs
out
jmp
es
xchg
lods
mov
es
add
ss
scas
push
push
cmps
sahf
add
stos
sbb
pop
mov
pop
(bad)
out
mov
sbb
shl
out
cwde
and
mov
mov
scas
jl
add
mov
mov
add
dec
dec
xor
fs
add
cmp
das
das
adc
fidivr
dec
dec
push
loop
out
inc
jns
add
and
aaa
test
mov
call
push
lods
adc
out
mov
shl
int3
mov
adc
es
fbstp
out
add
mov
sbb
pop
push
jmp
popf
lahf
add
add
cmps
and
out
add
lods
cmc
cmc
add
mov
test
jne
add
dec
imul
int
add
jmp
jge
pop
jne
ss
sbb
out
jns
lahf
fstp
add
dec
push
pop
loopne
push
(bad)
(bad)
sub
push
push
pop
nop
push
out
add
es
mov
dec
and
add
push
cld
cld
pop
retf
shl
in
test
add
sub
cmp
rcl
and
add
pushf
push
push
retf
out
pop
ret
int
xchg
add
mov
jecxz
add
es
sbb
fadd
mov
retf
fstp
push
int3
pop
cdq
es
cs
mov
test
out
add
add
lea
jns
scas
fild
retf
es
mov
adc
dec
dec
dec
sub
out
es
mov
sub
psubsw
out
out
movs
adc
cmp
out
mov
add
cmp
or
sbb
lods
lods
cmp
mov
es
test
icebp
arpl
stos
in
jnp
popa
push
cmp
ror
adc
out
cmc
(bad)
push
dec
dec
add
out
cs
es
dec
inc
pop
pop
xchg
sub
sub
add
fisttp
inc
ins
ins
or
push
jp
retf
out
or
add
add
cmps
cmps
pop
movs
gs
(bad)
sub
add
mov
cs
fadd
cli
cli
xchg
in
out
push
xchg
movs
es
cmp
adc
add
or
add
fiadd
clc
hlt
push
add
inc
jo
mov
adc
fnstsw
pop
out
cmp
sti
and
loopne
fwait
add
inc
push
(bad)
jae
or
dec
add
push
aad
push
ja
out
je
ss
in
fcmovb
les
jo
and
add
popf
out
aaa
es
dec
add
push
loope
sbb
packuswb
sahf
inc
inc
add
lods
cmp
jno
jo
add
nop
stos
jae
out
and
outs
xlat
addr16
shr
add
mov
push
mov
mov
push
push
sub
es
shl
push
push
call
pop
out
stos
out
cs
mov
out
and
adc
das
hlt
or
out
mov
cdq
frstor
test
arpl
sub
cmc
inc
pushf
pushf
pop
add
outs
cmp
fs
add
loope
xor
mov
js
add
hlt
hlt
jge
pop
adc
fld
stos
stos
in
ins
std
std
mov
cmc
jg
es
mov
sbb
ret
retf
xlat
xlat
inc
adc
ss
pusha
add
int
scas
lea
ds
jmp
es
cld
ror
mov
add
lods
es
sahf
inc
push
push
adc
int3
es
shl
jo
out
aas
nop
add
fcom
test
xchg
sahf
cmp
add
in
inc
fisubr
sub
inc
out
add
aad
sub
add
mov
and
aaa
adc
mov
xchg
leave
or
push
sub
cwde
out
pop
icebp
jecxz
and
test
and
enter
mov
inc
mov
add
into
out
push
sbb
es
jmp
add
cwde
mov
retf
(bad)
and
mov
cmp
xor
xchg
cmc
inc
inc
mov
add
ins
mov
cs
pop
cmp
xchg
add
out
dec
inc
add
in
sbb
push
out
in
leave
es
shr
add
push
add
sub
out
(bad)
mov
add
out
out
outs
int
add
fnstcw
lods
lods
mov
add
push
and
out
and
es
cmp
mov
nop
es
xchg
aam
out
jb
xchg
sub
jns
add
out
mov
mov
hlt
cmp
es
xchg
add
pusha
shl
es
test
or
es
mov
loope
cwde
inc
out
mov
dec
mov
pop
imul
sbb
jl
push
push
jge
add
nop
retf
push
jmp
and
int
out
add
popf
popf
and
jg
add
movs
idiv
jp
mov
xor
je
ds
dec
adc
cmps
es
nop
or
test
je
es
add
(bad)
divps
outs
es
mov
scas
jae
out
dec
xchg
enter
mov
out
add
or
lea
inc
xchg
add
mov
or
sbb
mov
mov
nop
mov
leave
es
pop
pop
adc
pop
lds
jnp
sub
add
push
cli
jno
in
add
cmp
es
iret
in
push
mov
push
add
inc
inc
pop
jp
out
ss
push
es
xchg
sar
add
mov
es
lea
repz
add
clc
out
out
movs
mov
add
es
add
jge
fldenv
popf
dec
enter
jg
fsub
mov
mov
add
pop
fiadd
(bad)
(bad)
xor
movs
jge
sbb
and
mov
inc
inc
cs
shl
sub
es
mov
maskmovq
test
add
lods
leave
(bad)
push
cli
cli
inc
(bad)
xchg
add
sub
out
outs
shl
add
rcr
es
loop
mov
add
out
sbb
retf
fs
(bad)
ficom
ret
dec
or
call
xor
push
push
dec
rcr
and
adc
stos
push
push
rcl
imul
add
cmp
mov
mov
std
out
es
and
bound
fcom
shl
sub
sub
aas
jge
sbb
sub
adc
out
rcr
sbb
xchg
inc
mov
ret
add
out
mov
jmp
push
imul
jl
xchg
or
mov
not
push
jb
in
add
es
dec
push
xchg
jo
mov
adc
loope
inc
stc
call
and
bound
out
stos
movs
add
push
mov
xchg
xor
dec
cmp
add
pop
scas
out
retf
jbe
or
jne
pop
out
addr16
stos
and
retf
and
(bad)
mov
and
mov
cmp
in
sbb
repnz
mov
push
outs
mov
add
xchg
xchg
idiv
add
test
pop
pop
lods
add
out
cs
or
loope
jae
in
and
mov
out
ins
in
inc
out
cmps
add
jg
in
sbb
sti
add
jns
mov
add
stc
stc
cmp
sbb
add
jb
(bad)
adc
icebp
push
add
jl
and
ret
ret
hlt
ins
push
out
add
dec
dec
jno
sbb
mov
add
dec
jns
es
push
and
sub
add
out
pop
or
es
jmp
das
jge
ja
test
in
dec
mov
sti
push
sub
es
pop
inc
es
dec
xchg
add
xlat
adc
mov
jg
ficom
add
xchg
loop
lock
in
out
inc
xchg
adc
cmc
sbb
aam
dec
add
xor
sbb
(bad)
mov
es
mov
sub
push
cmp
push
jp
add
sub
xlat
clc
aas
aas
fnstcw
add
call
and
out
and
mov
out
add
outs
out
dec
mov
(bad)
(bad)
and
jb
and
add
lds
lahf
lahf
mov
call
cld
fadd
scas
in
in
inc
loope
out
ret
jmp
es
call
add
aaa
cmp
out
xor
int3
add
jno
mov
jge
in
stos
out
setg
jg
add
rol
jb
inc
xchg
call
and
jp
jbe
es
movs
je
cs
push
mov
out
add
cli
add
or
loop
dec
xchg
out
sbb
xchg
fcmovu
xor
ss
psllw
daa
daa
mov
and
aam
inc
add
out
loopne
into
mov
add
cmp
pop
call
add
test
outs
mov
add
adc
mov
aam
pop
pop
add
dec
out
xor
sbb
movntq
adc
shr
test
mov
jge
add
mov
js
aas
fisub
add
xchg
(bad)
cmc
cmc
fsubr
push
mov
es
jne
jmp
sbb
dec
dec
cs
add
out
maxps
es
add
xchg
xchg
pop
xor
gs
inc
std
sbb
and
add
jbe
adc
test
inc
cdq
mov
leave
adc
icebp
cld
mov
aas
push
call
add
pop
inc
adc
sub
es
push
popa
add
adc
nop
mov
xchg
pop
pushf
(bad)
add
and
push
jle
mov
add
out
out
test
add
pop
pop
pop
inc
outs
cwde
cwde
rol
out
adc
fmul
and
pop
les
adc
xor
cs
xchg
fwait
xor
add
mov
out
(bad)
(bad)
clc
loopne
add
movntq
and
and
push
out
fwait
add
es
xor
(bad)
hlt
outs
add
es
les
pop
pop
inc
dec
stos
es
add
(bad)
movlhps
adc
scas
out
cwde
mov
es
fbld
and
pop
or
add
out
adc
lahf
addr16
jne
inc
add
fchs
shl
loope
rcl
out
push
pop
mov
pop
xchg
pop
cdq
add
(bad)
sbb
cmp
mov
jge
sub
add
ins
push
xchg
mov
cmps
jb
jno
and
and
cmps
leave
int3
es
adc
xchg
shr
es
out
(bad)
pop
xchg
hlt
repnz
push
push
mov
mov
das
call
retf
retf
pop
add
out
sbb
adc
iret
sub
ret
add
pop
xchg
ins
(bad)
popf
scas
loop
es
cs
pop
stos
xlat
xlat
loopne
jl
loopne
in
add
add
xchg
gs
aam
dec
add
fmul
push
popa
es
jne
add
push
xchg
test
jbe
movs
add
retf
ins
out
dec
pop
mov
loopne
lods
dec
xor
fld
ficom
pop
push
push
fbstp
out
jae
push
cvtpi2ps
adc
inc
test
cli
dec
out
mov
add
retf
lds
shl
test
jge
cmp
repz
ins
leave
leave
push
es
ja
cmp
cdq
js
es
inc
pop
je
pop
cmc
test
and
xchg
mov
fcom
xchg
add
pop
pop
adc
xor
add
pop
mov
mov
sub
add
pop
xor
fwait
xchg
out
xor
dec
xchg
xchg
mov
jbe
mov
shl
push
out
fsub
sub
add
jecxz
adc
jno
es
add
aad
stos
rcl
mov
sbb
sub
jge
cld
jle
add
and
movs
movs
add
mov
adc
mov
cmps
pop
out
into
cmp
les
out
inc
loop
scas
cmps
and
retf
adc
test
aas
xchg
mov
add
xchg
inc
or
in
sbb
add
aaa
fs
xor
adc
pop
out
dec
js
es
lods
pop
inc
(bad)
pop
outs
(bad)
aam
xchg
out
loope
jg
shl
ds
outs
out
cmp
stos
es
(bad)
jge
inc
inc
push
add
or
shl
adc
fwait
out
mov
mov
cmp
inc
or
lahf
cmp
xchg
es
sbb
adc
xchg
lods
test
pop
popa
call
out
mov
lahf
or
fnsave
jmp
es
inc
mov
dec
pop
pop
and
sti
out
mov
pop
add
inc
jae
mov
fs
push
into
ret
lds
(bad)
out
shl
jl
cmps
add
test
xchg
dec
dec
pop
xchg
cmc
lea
mov
dec
es
ficomp
push
push
ja
movs
pop
pop
add
std
out
mov
add
cmp
es
add
imul
or
pop
cmp
(bad)
outs
cmp
pop
add
out
out
xchg
cmp
repz
pop
out
mov
mov
test
xor
out
jmp
iret
test
es
pop
cwde
mov
sub
sahf
inc
push
out
cmp
outs
nop
add
sbb
add
es
jnp
dec
adc
fadd
pop
es
mov
cld
xor
jo
hlt
pop
(bad)
sub
add
dec
out
cmp
mov
data16
out
ffree
and
retf
jmp
cdq
push
push
dec
popf
add
xor
push
push
jns
fsub
xchg
pop
add
es
dec
mov
cmp
lsl
dec
or
and
popf
push
ret
out
test
es
jle
mov
add
loope
arpl
jmp
mov
outs
loopne
inc
inc
jno
jne
sbb
push
dec
dec
sub
xchg
out
pop
out
mov
test
inc
(bad)
cmp
out
pusha
pop
sbb
dec
jns
add
int3
pop
pop
out
stos
mov
retf
add
push
in
or
out
aaa
scas
push
xchg
xchg
cmp
scas
scas
shl
pop
adc
mov
jle
pop
add
adc
add
es
enter
sbb
fnstenv
add
fucom
or
xor
push
xor
cmp
call
add
lahf
test
jno
(bad)
jmp
scas
inc
int3
vcvtps2dq
cmps
out
add
mov
push
icebp
icebp
cmp
stc
and
inc
test
aaa
add
jg
cwde
out
add
jle
adc
add
push
lock
out
push
into
pop
cdq
cdq
cld
movs
xor
ins
jae
stos
add
out
jne
aam
and
add
mov
bound
shl
mov
rol
or
pop
int3
es
add
outs
outs
xor
xor
rcl
jnp
dec
out
aaa
xchg
sbb
in
pop
nop
jp
fcmovu
push
or
add
es
fsub
lods
push
push
jecxz
stos
xor
add
in
cmps
adc
push
add
sahf
xchg
mov
dec
test
add
add
pushf
pop
out
add
jmp
aas
out
dec
pusha
ins
call
sbb
(bad)
push
push
movs
movs
jae
daa
es
mov
pusha
pop
pop
xchg
add
push
cmp
add
mov
pop
sub
mov
popa
movs
in
retf
retf
push
add
inc
jbe
addr16
(bad)
(bad)
es
sub
add
mov
ds
in
out
out
add
(bad)
or
cwde
inc
jmp
gs
test
in
add
adc
in
dec
jne
fld
stos
sub
das
ror
js
sbb
nop
and
push
enter
add
loop
out
(bad)
xor
(bad)
add
lods
jmp
cwde
cdq
jae
push
ins
dec
sub
add
cli
sti
add
add
(bad)
xor
push
es
jmp
es
mov
popa
sub
(bad)
(bad)
lods
loop
out
pop
mov
mov
ret
lds
mov
xor
out
dec
shr
pop
fldcw
out
pushf
sar
rcl
add
es
loopne
gs
push
out
jp
inc
and
call
add
js
xchg
jo
sahf
and
jnp
ja
and
es
fcomip
cmp
out
add
imul
(bad)
out
xchg
adc
out
test
es
ins
jae
rol
(bad)
outs
out
xchg
mov
fdiv
es
fdiv
add
mov
pop
add
call
add
outs
out
add
std
es
xchg
movs
push
es
int3
add
add
addr16
pop
pop
in
in
daa
sbb
es
cs
out
ficom
fstp
add
add
sar
icebp
xchg
mov
mov
es
sub
es
add
aam
cmc
push
aad
fadd
movs
out
test
es
jmp
out
mov
push
pop
pop
frstor
and
dec
out
inc
shl
jl
add
mov
std
add
test
jecxz
out
ins
ror
sbb
sub
aam
mov
fcmovu
add
mov
outs
aaa
fist
or
lods
ret
and
jl
add
rcr
mov
or
add
in
arpl
sahf
sahf
xchg
sbb
out
ja
xchg
daa
daa
icebp
outs
push
out
and
mov
out
add
mov
add
mov
push
sbb
add
out
popf
(bad)
pushf
es
jo
mov
es
clc
aad
into
add
dec
es
dec
data16
je
pushf
es
aad
es
test
xor
mov
loopne
and
cdq
cdq
jmp
add
cmp
mov
mov
fimul
pusha
out
or
scas
push
push
add
sbb
xor
mov
add
jmp
add
std
sub
inc
sub
loope
add
test
inc
inc
test
out
(bad)
scas
lock
(bad)
out
adc
es
inc
and
or
push
rol
jb
es
es
inc
sahf
into
sbb
sub
inc
inc
add
mov
fcmovbe
shl
aaa
test
jge
mov
stc
stc
or
es
add
mov
add
cmp
jne
cwde
cwde
push
push
out
inc
inc
jmp
jae
mov
jp
std
std
mov
adc
adc
xchg
xchg
xor
sti
js
xchg
xchg
push
add
test
xor
(bad)
setle
mov
sbb
stos
or
out
test
dec
call
add
adc
jns
pop
je
out
xchg
fdiv
or
push
push
mov
or
push
fs
stc
sub
pop
retf
ret
addr16
mov
out
popa
xor
xor
lock
pop
or
test
outs
push
add
xchg
out
out
push
es
jb
fucom
in
adc
stc
inc
repz
sbb
rcl
in
repnz
ins
ins
pop
mov
loopne
pop
test
hlt
push
push
lods
fiadd
out
outs
pop
fsub
cdq
sbb
out
cmp
mov
loopne
jo
loop
es
(bad)
inc
dec
dec
and
rol
cdq
ins
int3
out
inc
(bad)
(bad)
pop
inc
test
inc
inc
push
sub
out
and
aas
add
lods
xchg
jno
sbb
jne
sub
outs
outs
pop
pusha
mov
mov
cmp
xchg
jb
out
mov
add
imul
bound
push
xor
js
add
xor
aaa
into
pop
out
ja
mov
add
and
jbe
cmp
les
es
fcomp
add
sub
imul
sar
es
iret
iret
inc
inc
rcl
test
out
stos
les
sub
scas
fiadd
es
add
add
mov
xchg
in
js
scas
cmp
and
arpl
mov
es
xor
and
sbb
es
jg
fcomp
sub
push
es
rol
inc
push
push
mov
and
inc
sub
pop
pop
popa
add
out
push
arpl
add
test
and
imul
mov
jmp
sub
or
hlt
ror
xchg
pop
push
mov
cmp
pop
push
push
push
ja
pop
es
neg
out
cli
push
pushf
cs
aas
bound
out
cmp
es
sar
pop
sbb
jmp
loop
adc
out
fidivr
out
add
pop
sbb
out
scas
sbb
(bad)
ltr
out
adc
push
push
push
jl
mov
mov
aam
sysenter
lahf
lahf
add
push
es
adc
or
es
push
mov
popf
cmp
mov
sahf
add
pop
pop
clc
cmp
xchg
xchg
dec
jmp
int3
int3
or
sbb
(bad)
lock
shl
add
push
call
out
add
repnz
fsub
test
jecxz
push
jb
add
in
jne
mov
push
adc
fwait
mov
aaa
es
adc
add
retf
jmp
out
mov
add
pop
cmp
pop
es
add
int3
inc
loop
es
pop
or
and
sbb
mov
cmp
mov
add
lods
aam
div
xor
and
int
out
or
hlt
hlt
jnp
pop
out
cmc
into
fbld
ja
rcr
ja
in
push
pop
pop
pop
or
outs
out
cwde
and
mov
pop
fcmovnu
xor
xchg
fistp
es
push
fsubr
clc
clc
dec
mov
out
rol
push
out
(bad)
and
add
mov
movs
cmp
xor
dec
leave
iret
xor
mov
pop
dec
add
push
push
inc
xor
out
push
add
shl
dec
dec
cmp
jno
aad
push
dec
dec
push
addr16
mov
jg
adc
test
es
scas
push
movs
es
lods
gs
xchg
popf
add
inc
pop
fsub
int
or
fld
jae
daa
daa
push
cmp
or
hlt
out
data16
es
fdivr
sub
test
add
jb
pop
lahf
popa
add
loope
jle
test
shl
sbb
pop
push
push
push
data16
adc
jb
xchg
add
inc
xchg
js
aad
mov
jb
ins
call
scas
aam
cld
es
jl
iret
iret
pop
inc
test
add
jns
out
push
out
pop
add
pop
xchg
ds
jno
and
inc
into
loope
aad
push
out
call
fwait
dec
jo
jnp
ins
test
sar
jae
out
mov
hlt
es
mov
adc
(bad)
les
cs
ror
sub
dec
out
pop
je
cmps
ja
pop
rcl
pop
dec
mov
pop
jle
jo
push
push
leave
shl
add
stos
ins
(bad)
(bad)
aad
pop
and
add
mov
loop
out
cli
jmp
mov
add
xchg
jge
inc
xchg
scas
fs
out
ja
cld
xor
sbb
test
push
je
cmp
int3
or
jge
mov
mov
inc
add
sbb
mov
imul
pop
popf
mov
nop
rol
je
mov
test
cmps
std
cwde
cwde
pop
add
out
mov
out
jno
dec
ds
out
cmp
jns
add
dec
repnz
cwde
imul
sub
xchg
sub
cdq
cmc
es
xchg
mov
jae
adc
mov
es
mov
(bad)
(bad)
adc
sub
xchg
xchg
xor
pop
jl
out
repz
es
adc
inc
out
rol
xor
test
xor
add
dec
pop
sub
loope
fcmovne
es
loop
pop
add
dec
and
mov
clc
out
adc
(bad)
test
out
mov
sbb
inc
cmps
pusha
dec
add
or
push
out
popf
mov
and
lods
jae
retf
adc
es
jp
mov
sbb
lock
ror
push
and
sub
push
inc
mov
repnz
jecxz
jns
hlt
test
test
add
push
or
es
push
mov
mov
jns
arpl
and
inc
inc
in
add
jmp
mov
nop
xchg
add
es
(bad)
loopne
int
pushf
int3
pop
cs
inc
out
loopne
or
lds
ins
add
jmp
es
cmp
ret
test
sbb
mov
push
mov
lahf
aas
add
je
ins
add
clc
adc
imul
out
lahf
push
xor
out
cmc
xor
jg
out
js
out
push
push
xchg
sub
add
adc
xor
dec
out
add
lock
jg
inc
cs
sbb
es
xchg
xor
loopne
inc
inc
inc
push
ja
pop
das
add
icebp
icebp
push
aaa
es
cmps
call
fdiv
movs
mov
xchg
add
loop
ss
aad
clc
test
and
mov
out
lods
lods
lods
cmp
add
jae
xchg
out
pushf
sub
push
add
scas
sbb
dec
xchg
xchg
sbb
push
dec
sub
add
push
pop
out
add
call
xor
add
fisubr
loope
cmp
add
xchg
aad
mov
xchg
xor
cli
fs
cmp
pop
out
and
push
lods
clc
aam
dec
dec
jge
add
out
push
jb
ins
ret
mov
pop
repz
add
fwait
es
dec
les
pmaddwd
add
add
sar
pop
(bad)
mov
mov
pop
add
out
sbb
in
xchg
xchg
adc
inc
out
aaa
push
ret
cwde
repnz
or
jle
cs
hlt
add
cmp
dec
es
add
or
shl
es
pusha
stc
add
pop
and
es
mov
test
dec
xchg
imul
xor
pop
push
push
adc
and
fadd
test
xchg
sar
rcr
sbb
add
jbe
vandpd
sbb
fadd
mov
test
add
loope
aas
adc
inc
mov
test
mov
sbb
push
mov
popa
es
call
ss
out
xchg
or
and
idiv
mov
mov
xor
xchg
stc
stc
je
cmp
test
push
cmps
pop
pop
push
inc
and
push
add
xchg
dec
push
xchg
xchg
add
fwait
es
cwde
cdq
div
jp
pop
dec
dec
cmp
aas
out
es
out
rcl
sub
add
fsub
push
push
add
lahf
lahf
mov
pop
out
add
adc
or
adc
cmp
call
add
fld
jmp
pop
lds
call
out
(bad)
out
sar
es
add
es
in
mov
pop
out
mov
add
loope
lahf
add
push
and
add
je
gs
int3
(bad)
pop
es
jb
pusha
std
std
sub
mov
and
es
jp
pop
pop
stos
ffree
mov
aas
mov
cmp
mov
add
pushf
xchg
fdiv
push
rol
mov
sub
mov
pusha
add
(bad)
lea
cdq
arpl
cmp
in
les
push
jne
jno
inc
shl
rol
jo
cmp
mov
stos
andnps
cmp
sbb
sbb
xchg
in
out
add
imul
repz
clc
es
push
dec
ja
rol
add
jnp
cmps
sti
inc
inc
xor
push
(bad)
in
out
xchg
sub
es
out
and
pop
inc
adc
das
add
dec
fisttp
jmp
arpl
pop
pop
call
clc
and
add
push
adc
push
out
rcr
std
es
loopne
sub
repnz
sbb
push
sbb
add
out
aam
xchg
adc
mov
leave
jae
(bad)
pop
fs
mov
mov
lahf
add
ret
mov
mov
aaa
pop
mov
out
test
add
out
jl
and
in
sti
stos
push
daa
daa
pop
pop
and
add
ja
jae
sar
lock
aad
movs
pop
ret
push
push
or
out
xor
or
mov
cmp
add
imul
add
mov
lock
push
es
cmps
pop
out
inc
ss
add
push
xchg
xchg
xchg
and
add
sbb
fcmovu
bound
mov
inc
push
ins
repz
mov
aam
es
sbb
in
push
add
xor
lea
jmp
jg
push
fcom
mov
add
jge
retf
out
add
lahf
mov
aad
pop
xor
sahf
sub
into
mov
push
(bad)
jns
inc
inc
add
adc
sub
fcomp
xchg
(bad)
gs
mov
mul
jmp
jbe
sub
xor
mov
xchg
mov
pop
ss
dec
inc
and
mov
xor
and
or
es
add
repnz
popf
es
dec
mov
imul
add
ds
push
sub
out
push
out
xchg
dec
mov
retf
add
pop
pop
out
push
xchg
add
scas
xchg
xlat
(bad)
mov
add
outs
sbb
pop
add
das
or
mov
out
add
out
retf
retf
xchg
cs
out
imul
jb
out
push
sub
es
adc
nop
add
jmp
xchg
mov
add
inc
scas
scas
mov
cmp
in
cmp
out
or
mov
nop
nop
cmp
ds
syscall
out
int
cmp
or
xchg
sbb
les
out
icebp
cmp
aad
adc
out
jl
cli
cli
add
out
jecxz
shl
inc
xlat
add
cmp
add
mov
sti
test
mov
inc
add
arpl
les
add
rol
pop
push
mov
imul
push
jae
mov
adc
push
mov
out
adc
fcom
das
sub
sub
add
out
pusha
mov
cmc
fisttp
out
inc
sar
aas
out
jecxz
add
cwde
ficomp
dec
dec
repz
add
jno
stos
stc
(bad)
or
add
imul
inc
add
gs
mov
or
mov
jl
pushf
ds
lahf
sub
test
pop
loope
mov
pop
addr16
scas
rol
xchg
pop
out
xchg
ins
add
(bad)
jl
call
add
shl
xchg
xlat
xlat
ds
out
mov
out
fwait
out
dec
xchg
sub
jp
stc
lock
mov
out
inc
jbe
jmp
test
out
les
stos
es
(bad)
rcr
(bad)
add
dec
inc
(bad)
inc
jmp
mov
pop
out
add
push
push
pop
cmp
aad
in
es
mov
test
ins
ins
jne
cmp
xchg
rol
repnz
add
jno
inc
data16
xor
jnp
push
je
mov
pop
std
std
mov
add
inc
push
out
es
repnz
add
jg
fwait
sbb
test
aad
pop
mov
in
add
out
or
ins
ds
inc
add
pop
movs
es
shl
add
idiv
arpl
out
cmp
adc
stos
stos
mov
add
(bad)
(bad)
inc
aad
push
push
and
out
dec
jecxz
es
ret
xor
sub
repnz
mov
adc
fst
mov
gs
mov
xchg
add
mov
daa
rcr
cmp
xchg
out
sbb
and
jo
add
or
cmp
adc
stos
jmp
add
ficomp
nop
out
call
push
movs
movs
push
ficom
es
punpcklbw
out
mov
pushf
es
fdivr
add
add
aas
es
adc
sbb
pop
out
sahf
jb
es
lds
(bad)
jle
mov
ds
pop
pop
mov
es
mul
pop
in
add
(bad)
xchg
es
or
(bad)
es
call
sub
es
fsub
mov
es
lds
cmp
scas
lahf
lahf
jo
add
movs
js
popa
lods
lods
std
in
out
fldlg2
clc
ins
ins
push
push
call
scas
adc
mov
call
loope
jbe
sti
sub
sahf
add
jae
adc
mov
add
mov
mov
mov
enter
popa
es
xchg
mov
dec
es
mov
xor
sbb
add
into
adc
xchg
fstp
lds
xchg
retf
loopne
imul
jl
sahf
mov
dec
cmp
pop
push
push
loopne
mov
adc
call
pop
stos
pop
pop
mov
xor
mov
xlat
add
test
out
xchg
bswap
es
inc
pushf
mov
mov
sub
ins
call
je
add
pop
es
cmp
aam
mov
out
dec
inc
inc
xor
adc
shl
enter
add
xchg
outs
int
outs
dec
imul
(bad)
es
loop
adc
addr16
aad
and
(bad)
xor
repnz
rcl
in
add
inc
out
ror
or
or
out
push
add
mov
aaa
cmp
jge
(bad)
in
test
leave
test
shl
out
jo
out
add
stos
out
out
add
push
or
pushf
sub
add
jo
hlt
sbb
paddq
cwde
and
je
jle
out
and
adc
out
add
bound
out
mov
jne
lods
lods
or
add
pop
mov
cld
clc
pushf
cmp
xor
retf
push
cmp
dec
mov
add
in
sbb
cmp
shl
retf
and
adc
loopne
dec
jb
add
mov
mov
add
pop
sub
jno
fnstenv
clc
out
int3
jb
stos
stos
xor
cdq
out
and
push
mov
jne
cs
retf
in
call
and
shr
add
jne
dec
dec
cli
loop
out
pop
xchg
and
dec
push
ret
rcl
xor
add
dec
ja
loopne
or
rol
int3
rcl
add
scas
fwait
fwait
xor
(bad)
fimul
jnp
mov
out
inc
pop
inc
es
cwde
push
sbb
adc
xchg
test
fnsave
lea
sub
rcl
popa
pop
pop
test
nop
add
out
jo
jae
push
add
push
call
jns
and
cmp
and
out
mov
cdq
push
jbe
xor
xor
fwait
cmp
rcl
mov
je
(bad)
sar
test
sbb
es
mov
ffreep
das
das
mov
adc
dec
jl
mov
add
sub
test
sbb
out
xchg
add
es
test
push
(bad)
add
mov
sbb
adc
xchg
into
bound
ror
mov
es
inc
shl
add
icebp
daa
daa
inc
push
push
in
imul
fwait
cmc
es
cld
adc
jle
jp
cmp
xchg
inc
inc
(bad)
pop
pop
fs
push
cmps
arpl
xchg
(bad)
(bad)
sbb
cs
jmp
inc
dec
dec
sub
loop
mov
imul
test
ficom
adc
or
out
lds
ror
jns
sub
pop
push
push
ret
loope
out
shr
adc
xor
and
push
ror
sbb
(bad)
out
ror
nop
out
data16
es
pop
popa
add
mov
cmps
and
out
test
add
out
rcr
lea
add
dec
sbb
jno
inc
inc
mov
ins
in
ins
fsubp
add
mov
es
sub
sub
jg
pop
inc
add
push
out
cmc
jo
es
test
cmp
mov
sahf
rep
mov
jle
ret
add
fisubr
out
adc
dec
add
dec
icebp
mov
cmp
jnp
jo
rcr
in
pop
jo
mov
imul
mov
jbe
or
add
xor
loope
out
add
rcl
xor
cs
pop
mov
dec
or
rcr
sub
add
ds
pop
inc
repz
out
fisub
es
add
jbe
push
cmp
push
imul
add
shl
test
lea
jns
out
out
icebp
add
and
mov
cmp
aas
or
das
out
pushf
xchg
inc
rcl
push
inc
(bad)
out
add
add
shl
sbb
je
add
jge
xor
std
sbb
and
data16
add
or
jle
xchg
xchg
in
out
loopne
rol
add
or
mov
add
aad
lods
cmps
daa
daa
repnz
mov
inc
es
xchg
pop
xchg
push
es
fwait
cli
add
and
cmp
push
push
cld
dec
loopne
mov
inc
jmp
addr16
lahf
call
cwde
add
mov
dec
xor
ret
es
ds
push
sbb
xchg
cli
cmp
lahf
add
in
fidivr
shl
aam
es
push
or
dec
outs
cli
es
inc
add
or
iret
and
fcomp
pop
add
sbb
arpl
jecxz
shl
loopne
bound
cdq
ins
out
lds
inc
inc
(bad)
mov
out
inc
and
xor
push
add
jg
or
pop
je
out
add
gs
fst
cmps
push
dec
ds
out
dec
cmp
out
mov
pop
sahf
je
mov
mov
movntq
loopne
adc
hlt
jge
push
and
add
bound
loop
movs
mov
out
cli
sti
add
out
adc
push
push
sub
pushf
out
aaa
(bad)
pop
xchg
xchg
loop
ja
jo
dec
or
out
std
add
ins
out
aad
cld
dec
dec
add
stos
out
popa
jnp
es
ins
push
mov
sbb
in
lods
lods
dec
out
out
js
lea
xchg
add
out
mov
popf
popf
xchg
mov
outs
hlt
es
add
adc
jb
sbb
add
push
lods
es
sub
nop
sbb
aas
sbb
out
clc
test
xchg
xchg
add
stc
out
movs
loopne
outs
add
faddp
rcl
mov
add
es
div
and
(bad)
aaa
add
push
push
sub
mov
mov
jle
es
pop
add
int
fcom
jns
dec
or
lea
xor
cmps
std
sub
add
mov
out
inc
push
xor
add
add
mov
stos
in
dec
test
sub
in
in
jp
mov
out
(bad)
ja
out
out
repnz
push
xchg
adc
out
shl
mov
out
enter
sub
mov
cmp
inc
loope
xchg
add
add
inc
inc
and
imul
in
cmp
pop
jns
or
jl
add
inc
scas
fdiv
ins
ins
add
repz
out
mov
cmp
out
sub
xchg
dec
dec
out
cld
mov
aam
(bad)
xor
idiv
in
sbb
add
mov
sub
test
es
xor
repz
mov
adc
(bad)
jge
out
add
out
add
inc
scas
push
push
into
xchg
call
xchg
cmp
or
add
ret
leave
es
add
sbb
gs
adc
jp
cmp
mov
sub
or
pusha
pushf
(bad)
xor
adc
out
inc
jns
movs
movs
popa
add
or
and
cmps
jae
add
and
pop
call
jl
pusha
iret
iret
sbb
sbb
push
push
xchg
out
sbb
arpl
cli
out
mov
test
push
out
lock
lods
cmp
add
adc
(bad)
pop
pop
cmps
dec
and
and
or
out
cmp
ins
(bad)
(bad)
xchg
mov
xchg
pop
es
add
data16
js
or
mov
mov
cmc
cmc
dec
add
imul
in
add
retf
adc
test
out
loop
pop
mov
jne
cmp
mov
call
and
pop
mov
jp
xor
or
mov
sub
(bad)
nop
and
push
sub
mov
stos
stos
dec
push
add
lea
(bad)
push
mov
add
retf
out
das
add
inc
push
push
cmp
add
mov
pop
ja
es
pop
lock
ins
xor
pand
or
lea
jge
add
aaa
sti
repnz
daa
loopne
xor
sar
adc
adc
out
fnstenv
push
push
add
enter
dec
xchg
nop
nop
add
stos
out
call
add
cli
mov
popf
xchg
nop
nop
adc
mov
cwde
aaa
pushf
shr
rcl
js
push
es
xor
cmp
pop
(bad)
lea
add
bound
mov
cmp
sahf
pop
out
mov
fsub
push
int
add
mov
loopne
add
cmps
pusha
lock
jmp
and
xchg
es
jecxz
lods
lods
jl
sar
add
mov
cmp
out
or
mov
add
sub
pop
dec
stc
out
jns
adc
adc
idiv
xor
es
jno
fcom
test
and
sbb
es
pop
jo
pop
xchg
out
es
mov
push
int3
adc
mov
pusha
jbe
test
xchg
out
dec
or
add
xor
je
call
add
and
(bad)
and
pop
psadbw
xor
inc
dec
dec
es
mov
mov
inc
jb
es
xchg
repnz
add
adc
inc
pop
es
fprem
out
mov
sub
dec
or
ds
add
ret
push
push
inc
push
sti
and
scas
sahf
movs
movs
lods
fdivr
es
test
cmps
rol
or
or
mov
pusha
ss
push
out
pop
add
(bad)
imul
sub
inc
add
(bad)
in
sbb
pop
daa
mov
jne
(bad)
es
stos
and
and
cli
call
sbb
and
fxam
adc
inc
es
mov
fwait
add
dec
jne
cwde
aam
or
push
mov
in
xor
out
iret
js
(bad)
push
pop
mov
pop
cmp
retf
ins
data16
and
inc
lds
aas
js
sub
loopne
nop
out
add
push
lock
jnp
out
sbb
inc
ss
xor
lea
hlt
mov
add
cmps
sub
cmc
std
push
mul
out
ret
es
add
add
ror
(bad)
cmp
jle
shl
mov
pop
push
in
rcr
rcr
int3
add
dec
out
xchg
mov
mov
out
lea
add
or
cld
shl
sub
jo
test
inc
out
and
into
es
sub
ds
pop
jns
adc
adc
pop
inc
push
aaa
add
push
clc
mov
cmp
lods
ret
or
jecxz
test
sbb
out
xor
jmp
dec
dec
rcl
adc
add
and
or
xor
or
and
popa
add
jbe
adc
cld
xchg
pusha
ret
ret
pop
fwait
sbb
xor
out
sub
fsub
out
shl
js
mov
mov
mov
or
mov
xor
repz
adc
jp
lahf
mov
movs
out
mov
or
add
add
mov
mov
es
add
sub
or
pop
pop
gs
out
mov
xchg
mov
xlat
xchg
es
add
outs
mov
into
dec
rcr
fnsetpm(287
cld
int
push
pop
sar
test
dec
std
mov
das
xor
push
mov
(bad)
es
in
nop
nop
cmp
dec
dec
retf
clc
out
out
mov
jle
test
or
adc
out
pop
cmc
add
test
lods
jmp
aas
and
in
ins
or
out
nop
retf
adc
movs
add
mov
out
sbb
sub
ret
mov
retf
in
leave
es
mov
cmps
cmps
pop
cmp
es
in
xchg
add
sahf
rol
shl
nop
jle
push
pop
push
fucom
jge
dec
stos
and
add
or
xor
push
add
stos
xchg
xor
out
xchg
add
out
test
add
out
mov
cmp
mov
out
je
push
fcomp
add
aam
mov
pop
mov
shl
push
fmul
es
pop
scas
cmp
xchg
lock
lea
pop
imul
jle
neg
out
mov
pusha
push
mov
sar
add
fiadd
xchg
fsub
aas
outs
retf
jmp
pop
add
inc
es
daa
xchg
add
enter
fidiv
loope
jp
add
adc
mov
add
arpl
fadd
pop
add
es
mov
mov
es
jo
add
test
loop
cli
rol
out
cwde
cmp
out
xor
popf
xor
aam
jo
add
xor
cs
add
push
push
(bad)
js
jmp
mov
pop
mov
lahf
xchg
adc
adc
dec
(bad)
repnz
mov
push
add
mov
cmp
icebp
mov
lods
sub
sub
lock
xchg
sahf
test
js
in
es
add
inc
add
mov
ret
cwde
out
test
fcomp
cmp
add
stc
jmp
inc
cmps
add
out
lods
aad
add
pop
pop
shl
push
scas
mov
jb
add
sahf
out
in
shl
(bad)
pop
cmp
mov
pop
pop
es
xchg
and
jne
add
sub
clc
nop
out
and
ret
(bad)
xlat
shl
imul
es
or
adc
out
or
hlt
mov
out
add
xchg
sub
jg
pop
out
sahf
add
mov
add
in
lock
xor
in
add
out
ss
jle
mov
pop
add
movs
movs
cmp
out
mov
les
push
aas
mov
inc
in
push
push
cs
out
push
outs
fsub
mov
dec
jns
add
mov
pop
(bad)
xor
outs
sahf
xor
add
loopne
test
div
(bad)
cmp
sbb
adc
pop
sub
xchg
aaa
movs
es
sub
add
and
retf
and
aas
jae
out
shr
out
add
cli
jns
loope
inc
es
push
sbb
push
loopne
push
sub
or
sub
mov
repz
push
or
out
sub
pop
add
mov
je
jecxz
mov
test
fwait
scas
scas
add
out
and
cdq
es
or
mov
dec
dec
jo
ins
out
stc
jp
es
shr
(bad)
rol
iret
jbe
bound
adc
out
lea
jge
cmp
pfacc
pop
out
loopne
sbb
out
add
jns
test
cmp
out
sti
pop
(bad)
mov
sbb
mov
fs
mov
les
cmp
dec
out
xchg
nop
lock
sahf
pop
jb
out
mov
jle
inc
and
jge
add
push
rol
int
mov
stos
xor
inc
daa
daa
sub
into
out
repnz
push
es
xchg
pop
add
add
inc
call
popa
movs
and
ja
xchg
out
add
stos
(bad)
out
and
std
es
shl
pop
pop
push
nop
aas
ret
add
out
addr16
xchg
bound
sbb
xchg
(bad)
(bad)
and
add
and
test
es
cmps
pop
sbb
sub
inc
out
add
in
jl
int3
loopne
test
sahf
xchg
push
out
cmp
aad
clc
movs
div
shr
out
mov
sbb
sbb
jo
lods
repz
(bad)
xchg
js
dec
es
mov
add
out
mov
lods
(bad)
dec
mov
in
or
es
adc
cld
mov
jmp
out
out
loop
es
jae
push
iret
xor
out
sbb
add
mov
add
jae
pusha
cmp
push
into
into
pop
pop
pop
es
inc
mov
rol
push
xchg
es
ins
push
out
adc
test
rol
mov
xlat
sub
aam
add
sti
and
inc
mov
sub
test
jae
out
xchg
div
jmp
dec
cmp
adc
fcmovu
lods
fadd
out
shl
es
shr
mov
test
sub
push
add
out
mov
jne
movs
out
hlt
das
fisub
dec
add
repz
mov
xchg
pop
pop
mov
add
lock
mov
jg
je
add
out
aaa
mov
stc
dec
cwde
cwde
loop
add
(bad)
jp
pop
out
sahf
add
xchg
icebp
out
push
add
stos
out
jno
loope
push
movs
add
fstp
inc
outs
dec
cmp
cmps
clc
xchg
lahf
inc
mov
pushf
sti
add
scas
mov
fdiv
inc
add
sub
es
add
aas
aas
jns
sbb
cmps
or
add
or
repz
aad
ret
dec
out
call
jne
push
in
mov
cmp
add
lock
lods
add
add
add
jb
stos
out
add
add
and
jbe
mov
in
call
out
or
rol
add
sub
jo
jmp
call
mov
xchg
add
xchg
test
aam
cmps
or
sbb
in
add
repnz
(bad)
mov
and
add
jns
pop
popa
nop
nop
add
outs
add
and
(bad)
out
or
add
out
mov
add
jmp
cwde
mov
stos
es
sub
sbb
fsub
es
push
pop
mov
movs
es
pushf
in
ins
add
es
jbe
cmp
js
mov
aas
or
add
aam
mov
ins
test
dec
push
push
out
xor
jecxz
mov
es
dec
cmp
push
jg
mov
dec
and
xor
mov
mov
out
pop
jne
es
mov
push
add
es
adc
out
sub
into
in
fdiv
jnp
es
add
sub
in
xor
add
sub
cmp
xchg
lds
sbb
(bad)
sub
es
mov
push
cmp
es
pop
inc
fwait
pusha
pusha
sahf
mov
mov
out
(bad)
mov
dec
retf
sub
and
add
scas
mov
in
ins
out
test
mov
mov
cmp
cwde
cwde
mov
sbb
in
es
outs
jle
das
das
add
pop
aam
mov
shl
es
shl
test
aam
push
add
mov
sub
mov
add
mov
(bad)
add
inc
jbe
shr
cmp
add
sub
xor
neg
repnz
add
inc
inc
push
mov
add
add
mov
pop
push
out
cmp
cld
jg
mov
xlat
out
push
cmps
mov
fsubr
add
out
ret
in
sahf
es
(bad)
mov
mov
cmp
pusha
sti
out
or
int3
int3
lods
add
out
ret
es
and
icebp
sbb
les
push
add
out
retf
nop
push
add
mov
mov
xor
test
xor
mov
inc
xchg
pop
add
inc
clc
add
cmps
cmps
ret
add
inc
add
mov
aam
pushf
pushf
xor
ret
jne
jmp
and
out
mov
push
dec
dec
sub
out
pop
xchg
xchg
pop
movs
shr
cld
mov
push
add
xor
mov
xchg
mov
jp
out
or
cmp
ss
sub
rol
add
xchg
ins
ins
mov
dec
add
(bad)
dec
dec
daa
out
loop
jae
test
inc
add
scas
es
cmp
sub
dec
retf
imul
xchg
sbb
inc
cmp
lahf
jge
xchg
inc
inc
aaa
add
out
mov
cmps
nop
int3
out
sub
in
pusha
out
aam
jp
hlt
dec
inc
add
dec
lea
retf
pop
and
cmp
ds
adc
cli
add
pusha
gs
out
sti
sar
sub
push
es
add
mov
div
push
es
sbb
adc
mov
into
out
add
es
mov
add
bound
pop
cmps
mov
pop
mov
push
push
(bad)
(bad)
pop
out
loopne
and
or
leave
test
push
aas
adc
sbb
loopne
repnz
hlt
aam
loopne
push
or
mov
(bad)
out
add
xchg
cli
out
add
push
push
cmp
cmp
pop
(bad)
shld
out
sub
aaa
icebp
out
sar
add
out
mov
cmp
cld
mov
mov
aad
push
int3
js
outs
add
cs
hlt
adc
es
sub
pop
mov
mov
mov
data16
test
stos
add
gs
dec
pop
or
mov
cld
test
and
add
in
and
jbe
out
xor
mov
(bad)
add
test
in
adc
gs
mov
outs
bound
inc
ror
or
sbb
add
mov
pop
cmp
push
dec
jnp
out
push
add
mov
pop
mov
repnz
out
icebp
das
add
mov
or
adc
xchg
es
and
or
pop
sbb
data16
std
addr16
add
es
adc
into
or
ja
push
pop
sbb
cdq
inc
push
cmp
fild
out
movs
nop
(bad)
jo
sar
cs
es
xchg
push
push
inc
shr
loopne
call
cmp
int3
jg
sub
cmp
inc
mov
std
out
cmovno
xchg
inc
inc
cdq
sbb
and
fwait
pop
inc
out
fistp
add
add
and
(bad)
out
add
in
pop
pop
lds
stc
pushf
pushf
push
into
lock
rol
cmp
out
or
pop
ins
or
es
dec
xor
add
je
iret
jae
add
mov
ret
es
rcr
enter
lock
push
mov
pop
movs
in
or
add
xor
lods
repz
aam
ja
xor
shl
cmps
dec
popf
div
add
es
pushf
push
jno
stc
sbb
fsub
retf
mov
rcl
lods
add
mov
adc
and
add
xor
ss
add
js
out
or
mov
sbb
rol
outs
outs
loope
out
jmp
jno
into
cwde
cwde
push
push
out
mov
retf
fs
inc
mov
out
rcr
mov
cmps
add
add
data16
sub
add
es
jae
std
inc
inc
movs
in
call
out
jbe
out
mov
or
out
xchg
push
adc
shl
out
xchg
imul
ins
cmp
fild
lods
iret
add
jle
(bad)
shl
jbe
jl
sbb
scas
jp
push
sbb
add
gs
nop
add
xchg
sbb
lods
in
out
pusha
add
pop
mov
mov
out
add
sti
es
cwde
lock
xchg
es
frstpm(287
xchg
xchg
pop
push
mov
(bad)
adc
mov
sahf
dec
jp
out
fadd
cli
add
movs
movs
aas
lock
out
cld
test
es
mov
cmc
add
cmps
fsubr
add
mov
sti
mov
sbb
shl
jecxz
push
leave
leave
and
(bad)
(bad)
stc
add
out
test
add
cmps
cmps
or
sub
shl
repz
enter
add
jl
out
clc
adc
pop
rcl
ss
pop
xchg
xchg
mov
out
rcr
mov
aam
jno
add
iret
iret
xor
popa
adc
not
add
xchg
dec
aaa
push
es
sub
cmp
push
xchg
xor
add
adc
(bad)
into
es
fucomip
jae
add
es
push
cld
rcl
pop
add
in
dec
xor
idiv
mov
xchg
push
add
(bad)
xor
prefetch
mov
inc
add
and
cmovno
or
sbb
es
mov
jecxz
ficomp
cmp
xor
hlt
out
repz
pushf
adc
mov
add
aaa
jmp
or
add
scas
out
jp
mov
push
mov
es
pop
in
sub
nop
pop
cs
cwde
aam
adc
add
stos
jnp
add
cmp
dec
mov
je
out
pusha
jno
push
push
sbb
sub
add
icebp
sub
inc
loope
push
inc
inc
add
xor
push
mov
xchg
ret
add
pop
jo
pop
mov
out
mov
es
pusha
(bad)
repnz
sbb
adc
add
add
pop
or
add
aam
in
mov
adc
add
xchg
cmp
dec
and
jne
ret
out
add
rol
mov
jmp
jo
sbb
rol
xor
out
mov
jge
jno
add
arpl
out
dec
cdq
frstor
ins
clc
or
ret
sub
sub
jmp
lahf
aam
push
out
gs
mov
xchg
lea
arpl
mov
sbb
add
cmp
mov
add
stos
stos
push
push
add
out
(bad)
mov
push
out
movs
retf
sub
cmp
add
shl
call
adc
cmp
mov
mov
pop
jmp
es
sub
out
push
jg
sub
gs
test
je
xchg
rcl
out
or
add
mov
clc
test
cmps
add
jl
shl
jnp
cmp
cmp
cmps
jns
or
stc
or
add
je
xor
outs
outs
dec
pop
mov
add
sbb
or
mov
call
rcl
adc
sbb
mov
fadd
xor
xor
inc
mov
cmp
add
xor
ja
mov
add
popf
sbb
add
out
add
int
push
add
cli
out
and
jb
inc
mov
xchg
add
xor
push
movs
add
mov
jge
push
es
ins
in
fs
sar
(bad)
not
das
out
jle
xor
hlt
out
add
mov
out
test
mov
sbb
mov
pop
inc
cwde
dec
add
mov
clc
out
mov
es
mov
mov
add
jb
mov
dec
dec
inc
sbb
mov
mov
pop
jno
out
iret
addr16
add
sbb
pop
sub
mov
xchg
and
out
test
es
mov
and
stc
mov
aaa
mov
pop
push
jo
add
xchg
cmp
push
push
hlt
mov
push
push
cmc
ja
out
add
nop
gs
out
jl
pop
(bad)
pavgb
aad
data16
(bad)
sbb
ss
pop
pop
cmc
dec
repnz
fadd
lods
seto
or
pusha
adc
and
mov
jnp
movs
movs
add
pusha
out
stos
mov
cmp
das
das
cmp
es
fwait
ret
sub
or
cmp
mov
push
sbb
ret
mov
movs
into
into
xchg
es
aam
adc
jbe
add
mov
dec
xor
dec
icebp
jmp
pop
cwde
out
in
and
push
jo
inc
inc
pop
mov
add
xor
imul
out
mov
add
xor
aam
dec
ror
mov
inc
sub
es
mov
loope
es
nop
push
sahf
and
jmp
mov
adc
xchg
add
hlt
mov
out
jae
addr16
jmp
(bad)
movaps
nop
enter
add
xchg
test
cmp
adc
clc
clc
sbb
es
add
mov
mov
les
ret
out
cmp
daa
es
add
add
and
inc
mov
test
lock
loopne
cmp
add
out
aad
mov
add
rol
xor
add
ds
xor
outs
add
(bad)
pop
push
dec
or
cmps
lea
pop
adc
sbb
sbb
fsubr
xor
cli
out
add
dec
aad
shl
int
add
sub
dec
and
add
mov
cli
aad
mov
cmps
dec
outs
(bad)
out
stc
jbe
add
daa
repz
pop
scas
fstp
lea
retf
and
add
outs
jne
and
(bad)
add
inc
es
jnp
add
sub
xchg
jae
or
out
adc
sbb
add
jb
add
shl
das
fisubr
repnz
or
push
in
dec
clc
adc
sar
in
xchg
imul
mov
mov
mov
fld
imul
mov
data16
retf
out
std
sub
stos
stos
hlt
test
push
es
call
(bad)
sti
in
es
fucomip
and
dec
xchg
add
and
inc
mov
fnstsw
jo
and
sahf
jns
inc
inc
cld
pop
lock
add
xchg
out
out
or
test
adc
movs
out
(bad)
iret
mov
cmp
pop
sbb
xchg
call
clc
mov
mov
or
das
das
pshufw
push
sbb
sub
out
cdq
add
or
pop
es
mov
pop
xor
xchg
out
and
pop
sbb
imul
mov
cmp
add
mov
gs
(bad)
(bad)
les
lods
lods
xchg
fs
cdq
cdq
jmp
jg
add
push
fmul
retf
add
adc
(bad)
in
xor
and
cmp
add
xor
repnz
popa
xchg
add
mov
cmp
pop
mov
sbb
add
xor
rcl
xor
xchg
add
pop
call
pusha
call
xchg
es
jae
add
fdivr
push
mov
and
out
pusha
jmp
out
ret
xor
adc
sbb
inc
popa
and
fdivr
mov
push
mov
out
cmp
test
sbb
add
add
xchg
xor
repnz
imul
fnstsw
cmc
cmc
push
add
test
rcr
add
mov
aad
mov
xor
cdq
cdq
xchg
jo
out
add
es
js
push
jmp
push
mov
lods
add
outs
pusha
clc
out
sub
cmp
sbb
adc
aaa
aaa
inc
dec
pop
out
neg
xchg
mov
cmps
ret
dec
dec
sbb
add
or
push
out
and
ret
loop
xchg
es
jae
mov
enter
es
inc
mov
jbe
lods
push
mov
retf
push
mov
or
and
mov
jle
movs
add
es
retf
push
jns
pop
pop
in
push
out
aas
cmp
jmp
ret
add
cwde
ds
mov
or
es
fild
push
push
test
xchg
nop
add
out
out
mov
test
scas
add
mov
es
and
add
popa
jecxz
cmp
les
push
out
add
push
pop
lahf
lahf
fsub
mov
jnp
add
dec
and
cmps
out
stos
sbb
inc
push
inc
inc
xchg
sub
cs
mov
lea
inc
or
mov
mov
mov
mov
sub
movs
jnp
ja
inc
cmp
ror
and
in
popa
add
dec
mov
fcmovu
cwde
jne
xchg
add
jl
int
aas
and
mov
and
mul
adc
in
out
add
mov
mov
mov
xor
push
ret
pop
out
ss
sub
aaa
pop
xchg
xchg
mov
mov
push
nop
out
idiv
mov
out
pop
enter
fmul
pop
push
add
sbb
lods
sbb
add
fistp
lahf
ss
out
aas
lock
mov
add
or
fs
pop
std
(bad)
popf
add
inc
int
es
push
pushf
add
ss
es
mov
adc
jne
add
or
sub
aam
adc
cli
ret
retf
mov
out
shl
mov
fnsave
sub
js
push
loope
pop
xchg
xchg
es
sbb
mov
out
out
and
add
(bad)
les
mov
mov
mov
pop
or
jle
inc
out
jmp
push
add
push
inc
rcl
loop
add
arpl
jl
retf
int3
or
add
mov
es
cmps
dec
repz
jl
jnp
xchg
add
push
push
dec
cwde
dec
out
out
mov
sub
out
inc
cmc
nop
es
stos
(bad)
sub
cmp
int
push
mov
dec
les
or
nop
dec
fdiv
es
mov
jb
js
shl
add
es
dec
ret
add
popf
jge
stos
or
out
add
(bad)
call
std
or
sub
mov
dec
push
cmp
ret
stos
mov
sub
or
mov
pop
call
jge
mov
push
sbb
add
or
adc
(bad)
out
pop
push
outs
das
das
mov
out
(bad)
loopne
es
or
in
es
sbb
add
shr
es
adc
cmp
out
jnp
and
add
call
fisubr
add
mov
and
push
and
movs
push
sti
xor
xchg
add
call
or
xor
add
push
add
aad
mov
push
(bad)
cmp
xor
jmp
mov
leave
std
jg
in
sbb
sar
jp
cmp
add
rcr
jae
retf
add
push
ss
mov
cli
out
add
pop
mul
xor
add
inc
fsubr
xor
test
lock
or
inc
inc
sbb
add
and
push
loope
jns
jmp
out
sub
retf
pop
ins
add
es
loope
xchg
xchg
inc
jno
es
xchg
push
add
xchg
cld
inc
es
sbb
dec
fldenv
mov
(bad)
stc
or
call
add
mov
push
adc
add
jmp
mov
lock
movs
movs
xchg
dec
add
shl
adc
dec
add
or
adc
add
inc
inc
jbe
(bad)
cli
sbb
lock
inc
imul
mov
stc
stc
retf
outs
es
xchg
xchg
add
lahf
jne
xor
add
call
cmps
fcomp
and
mov
movntq
(bad)
lock
sahf
sahf
cmc
gs
and
add
mov
out
mov
icebp
and
cmp
adc
push
push
add
sbb
scas
leave
out
repz
mov
outs
out
daa
es
div
add
out
cmc
aam
es
add
(bad)
out
jbe
es
mov
(bad)
fwait
jb
jl
sbb
cmc
add
retf
es
icebp
mov
add
scas
sbb
jecxz
pop
lods
lods
cmp
or
xlat
jecxz
call
les
xor
in
mov
out
inc
daa
das
out
mov
mov
nop
sbb
sti
sti
add
xchg
ja
sar
pop
out
sub
scas
arpl
(bad)
out
or
mov
test
stc
push
cmp
adc
add
dec
(bad)
mov
rcl
nop
in
out
jl
movs
and
mov
mov
inc
out
push
daa
push
xlat
out
mov
retf
repnz
sub
es
add
test
add
inc
leave
cmps
xchg
inc
inc
mov
mov
shrd
mov
frstor
jecxz
rcl
cmp
sbb
or
iret
add
call
pusha
(bad)
es
mov
cld
sbb
mov
out
push
(bad)
das
es
mov
xchg
mov
fstp
into
scas
(bad)
out
rcr
out
mov
ja
jmp
les
out
repz
xchg
es
mov
or
jo
xor
adc
jbe
cmp
gs
add
stos
adc
sbb
out
add
fadd
out
xchg
add
(bad)
(bad)
adc
out
sub
aad
out
add
test
jbe
push
es
or
mov
iret
iret
xor
and
(bad)
mov
in
add
(bad)
inc
icebp
out
pop
pop
push
es
xchg
adc
fldcw
pop
(bad)
out
(bad)
sbb
and
out
sub
add
xchg
add
xor
and
call
jbe
ret
pop
mov
add
mov
imul
out
sbb
add
pop
inc
outs
out
inc
xor
inc
add
push
push
cmps
or
sub
clc
and
add
or
mov
out
out
push
enter
test
jg
fmul
clts
sub
jns
inc
jbe
mov
in
out
les
sub
or
movs
pop
add
add
bound
or
add
adc
dec
xchg
ins
mov
add
in
cmc
out
xlat
push
call
cmp
jmp
lds
jecxz
pop
cmps
movs
jge
cs
jmp
xor
test
out
aaa
dec
mov
lods
inc
inc
add
jg
mov
pop
out
inc
out
mov
sbb
jecxz
xor
jo
out
cmp
cmc
es
add
inc
cwde
cwde
out
mul
lods
lods
ins
cmp
rol
xor
fucom
repz
es
jp
xchg
jns
sbb
hlt
es
xlat
jmp
add
sbb
sahf
pop
(bad)
inc
(bad)
nop
hlt
hlt
pop
cmp
out
xchg
jo
and
jns
dec
mov
mov
add
in
loope
out
adc
add
adc
fist
cdq
invd
dec
dec
(bad)
es
mov
loop
xchg
js
cs
(bad)
add
div
cli
dec
dec
pop
sbb
add
pop
sub
nop
sbb
push
outs
add
enter
out
xchg
push
daa
(bad)
out
iret
scas
movs
push
push
add
out
xlat
stos
and
test
test
in
es
ins
ja
fwait
add
les
out
add
out
gs
pop
push
out
nop
inc
aaa
xchg
mov
adc
out
add
sub
xor
out
iret
add
out
(bad)
clc
or
out
sbb
push
cmp
daa
xlat
enter
add
fimul
xchg
cmp
rol
add
rol
mov
pop
inc
test
call
out
cmp
add
xchg
es
add
out
out
dec
cwde
xor
mov
add
jg
inc
clc
dec
fisubr
es
(bad)
idiv
sahf
test
btc
push
scas
scas
and
xor
xchg
adc
out
mul
(bad)
fcmovnu
push
movs
out
cmc
fadd
cmps
cmps
xchg
imul
rcl
jnp
and
xor
out
lods
sbb
xchg
mov
and
sub
add
push
jge
test
add
jnp
mov
stos
out
add
clc
mov
jns
out
jle
push
add
jmp
sbb
cmp
xor
pop
dec
lock
add
xor
ins
les
mov
mov
add
pop
es
cmc
xor
or
(bad)
dec
xchg
loop
les
verr
out
mov
push
push
or
movntq
scas
les
rol
add
and
and
add
out
and
dec
pavgw
movs
jae
and
out
and
add
adc
out
push
add
es
xor
enter
ror
jns
daa
pop
out
mov
loopne
xchg
in
in
add
or
mov
and
ja
(bad)
out
add
retf
mov
sbb
arpl
fwait
popa
push
loopne
jne
add
mov
cmp
jno
xchg
mul
shl
add
pusha
repz
rol
inc
push
jmp
or
and
out
inc
xchg
es
push
cmp
or
lahf
mov
ins
test
sub
jmp
xchg
in
pushf
pushf
sbb
add
sti
sahf
pop
(bad)
cli
imul
out
mov
cld
jns
inc
out
mov
mov
pop
push
xchg
add
test
mov
rcr
add
cld
push
aad
test
push
xor
shl
push
adc
xor
mov
ins
je
hlt
add
jb
dec
gs
jno
mov
pop
pop
xor
cmp
es
rcl
hlt
fcom
add
mov
sahf
sub
add
fist
es
imul
mov
clc
(bad)
add
mov
data16
xchg
out
sar
lds
and
fdiv
mov
pop
pushf
(bad)
pop
push
out
push
leave
arpl
out
cmp
and
sub
out
es
sbb
cmp
mov
vfrczsd
adc
jg
cmps
dec
xchg
add
sbb
out
popf
out
and
lds
or
pop
icebp
pop
add
xchg
out
repz
imul
jbe
or
rol
fwait
out
mov
(bad)
mov
dec
xchg
rcl
push
jl
adc
push
icebp
cmps
out
pop
in
(bad)
jmp
popf
inc
mov
add
(bad)
aas
nop
stc
mov
jnp
mov
mov
mov
sbb
add
lock
ins
xor
add
or
pop
pop
out
sahf
arpl
sar
and
es
cdq
xchg
(bad)
scas
mov
loopne
sbb
add
and
out
retf
push
push
mov
or
xor
imul
js
int3
out
rcl
ret
xor
add
cli
fdivr
int
out
iret
jle
add
outs
mov
out
jmp
movs
ds
out
out
pop
call
add
out
and
cmps
retf
cmp
nop
inc
movs
rcl
jns
in
add
cmp
mul
push
add
jmp
mov
xchg
out
(bad)
popf
popf
add
xor
imul
fs
out
inc
leave
fsub
push
test
ret
add
and
jno
daa
out
les
enter
and
mov
inc
stos
add
fcomp
xchg
movs
add
adc
mov
inc
popf
pop
mov
jmp
mov
xor
push
jmp
sbb
stc
push
pop
out
add
in
mov
es
mov
or
add
loop
add
xchg
retf
dec
dec
or
add
cmp
test
or
adc
adc
or
ds
dec
mov
outs
sbb
ja
ret
es
pusha
inc
mov
add
nop
adc
shl
push
into
sub
iret
cwde
mov
push
pusha
add
mov
adc
pop
in
es
ror
mov
hlt
out
push
daa
push
es
cwde
mov
addr16
out
retf
dec
add
out
mov
push
add
jge
xor
pop
leave
leave
add
out
mov
rol
xor
mov
sub
cwde
out
add
icebp
outs
scas
adc
(bad)
pop
add
out
out
mov
cli
push
sbb
jmp
jne
out
(bad)
mov
inc
jmp
xchg
add
xchg
call
mov
out
sbb
es
(bad)
mov
es
loopne
dec
sub
add
jbe
gs
and
les
out
push
pushf
out
mov
add
ss
in
out
pop
lahf
cld
je
cmp
or
xchg
es
lds
sti
enter
lock
aaa
loope
es
fs
mov
push
es
int3
mov
add
dec
out
sbb
mov
mov
icebp
adc
mov
mov
jo
add
not
sti
xchg
adc
mov
clc
clc
dec
jl
mov
lods
scas
xor
iret
iret
sub
add
inc
xchg
fdiv
xchg
in
add
jle
push
mov
mov
push
add
mov
cld
out
cmp
and
add
retf
jge
adc
fs
inc
xchg
out
pop
loope
jecxz
cwde
dec
scas
out
add
and
fnstenv
add
mov
std
xchg
pop
and
lds
retf
retf
inc
add
out
out
outs
rcl
iret
test
inc
pop
rol
xor
arpl
adc
fld
sbb
movs
movs
jl
shl
or
fistp
pusha
in
or
add
(bad)
into
mov
mov
jnp
add
add
ficomp
push
mov
sub
add
mov
pop
movs
fstp
test
and
xor
nop
cmp
pop
mov
dec
xchg
arpl
out
out
cmp
adc
add
or
mov
add
mov
add
or
movaps
stos
or
es
call
shl
push
out
xchg
pop
mov
mov
or
jmp
mov
int
cmc
cmc
mov
inc
or
adc
stos
dec
mov
pop
pop
add
mov
fwait
iret
mov
loopne
arpl
aas
add
mov
mov
xchg
out
mov
pop
out
in
xor
ret
aas
out
loopne
jne
mov
rcl
mov
cmps
mov
repz
add
xchg
pop
sahf
out
cld
js
movs
movs
js
add
or
sti
xchg
add
xchg
fstp
repz
add
iret
cmp
enter
add
out
or
xchg
es
imul
dec
pop
xchg
repz
fucom
xchg
add
mov
jmp
add
push
push
shr
ret
mov
in
stc
(bad)
add
adc
out
mov
add
movs
movs
mov
scas
out
out
rcl
out
jb
sub
sar
mov
sbb
mov
call
add
lahf
out
jne
jmp
mov
sbb
out
pop
lea
push
push
mov
sub
sub
call
mov
mov
xlat
cmc
add
mov
out
mov
retf
out
cmps
jecxz
out
sbb
cmp
out
xor
adc
out
add
sbb
push
out
cwde
shr
xchg
pop
(bad)
pop
pop
mov
shl
pop
bound
jne
inc
sbb
out
mov
mov
repnz
adc
imul
sub
ret
inc
xor
mov
outs
xor
add
lahf
es
push
(bad)
jmp
add
out
fidivr
or
out
jecxz
add
cmp
push
push
sub
add
push
mov
add
data16
jnp
into
retf
add
xchg
ins
mov
(bad)
fcom
xor
in
add
clc
jecxz
jns
add
stc
cmp
jo
out
add
bound
iret
push
sub
push
out
paddb
sbb
enter
es
adc
pop
pop
add
sahf
es
push
ss
cmp
es
add
or
mov
out
mov
xor
cmc
movs
movs
xchg
add
add
and
out
cwde
mov
or
ss
je
inc
add
aaa
fstp
cld
adc
push
xchg
push
push
inc
push
push
dec
dec
inc
int
out
push
sub
es
ins
mov
adc
outs
outs
mov
aaa
out
hlt
test
add
imul
xor
out
xor
dec
xor
push
pop
add
xchg
dec
add
int
in
mov
add
daa
push
push
enter
or
idiv
es
sbb
dec
xlat
xlat
cmp
inc
out
add
(bad)
cmp
addr16
jo
mov
sub
add
(bad)
jnp
es
add
cmp
push
push
mov
scas
out
dec
test
pop
pop
cli
movs
sahf
stc
stc
fadd
outs
fcomp
mov
or
fld
adc
add
ds
in
add
out
jge
and
mov
daa
out
lock
and
add
mov
add
dec
mov
cmc
jae
add
loop
jno
(bad)
or
out
in
in
add
mov
dec
out
call
lods
adc
out
jb
add
js
and
push
loopne
es
mov
add
jnp
clc
mov
out
mov
cli
push
int
add
or
stc
stc
test
fs
leave
pop
jmp
jle
push
sub
out
scas
add
push
mov
and
sbb
and
mov
daa
ret
mov
out
jne
add
mov
popa
shl
xchg
sub
add
retf
mov
push
push
fwait
fwait
mov
hlt
lock
add
aad
jl
xchg
hlt
adc
stc
push
out
mov
and
in
add
lds
pop
xchg
xchg
sbb
xor
pop
sbb
ud2
lahf
leave
mov
lods
mov
std
xor
ret
daa
add
leave
and
setge
or
xchg
cmps
add
out
es
mov
xor
lock
imul
mov
jbe
pop
pop
push
push
jg
add
fld
repnz
stmxcsr
mov
adc
popf
call
shl
daa
leave
xor
push
add
je
call
jae
out
mov
jl
adc
pop
ret
data16
mov
ja
add
inc
inc
inc
dec
scas
add
js
in
xchg
lds
and
mov
pavgw
jmp
sub
pop
out
jle
pop
add
icebp
add
mov
pop
ja
or
dec
jb
xor
add
jns
shl
movs
mov
mov
lock
in
or
add
(bad)
jp
out
jg
mov
out
pop
sbb
into
xor
push
es
jne
add
gs
adc
push
xlat
xlat
mov
push
add
sub
add
repnz
fwait
ror
sar
out
es
sbb
jmp
add
xchg
xchg
and
inc
out
mov
pusha
icebp
add
xchg
int3
aas
es
dec
inc
clc
add
fchs
mov
js
xor
lea
test
adc
xchg
add
test
out
lahf
mov
es
cmp
sti
cmp
and
xor
and
xchg
mov
add
push
movs
movs
rol
mov
dec
call
sub
xor
aaa
cwde
imul
add
mov
es
add
clc
daa
add
js
inc
add
cmc
dec
and
mov
out
test
lods
pop
fidiv
adc
sbb
lahf
aaa
shl
inc
push
fldenv
test
pop
out
(bad)
mov
inc
jbe
out
pop
mov
xor
in
arpl
fs
adc
(bad)
or
xlat
repnz
add
mov
add
div
xor
es
jne
inc
and
loop
nop
pop
es
push
cmps
fs
out
lods
push
es
inc
jbe
aam
mov
es
push
inc
cmp
fsub
sbb
jb
mov
out
arpl
mov
out
call
xor
jbe
add
xor
xchg
and
add
push
int
fwait
xlat
add
mov
pop
bound
cdq
mov
les
add
adc
out
mov
add
stos
add
stc
adc
add
sbb
out
cmp
sub
mov
(bad)
pop
pop
xchg
xchg
ins
add
es
push
sub
xor
jnp
sub
es
call
cwde
mov
out
add
xor
(bad)
es
addr16
pop
es
lea
xchg
jns
loope
add
bound
add
(bad)
daa
daa
dec
lock
out
xor
push
add
aad
mov
dec
add
and
