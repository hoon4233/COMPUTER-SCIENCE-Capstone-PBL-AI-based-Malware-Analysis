sbb
add
pop
movs
inc
add
sub
in
int3
mov
add
push
out
mov
ret
test
mov
cmp
pop
(bad)
sbb
ins
stos
lods
mov
and
das
dec
add
pushf
xchg
int3
mov
adc
xchg
loopne
adc
jmp
sbb
fnstcw
sbb
outs
adc
mov
mov
dec
fcom
jb
mov
pop
jle
ins
jno
scas
xor
aad
out
les
pop
push
push
add
inc
imul
lods
sti
xchg
loope
dec
dec
xchg
repz
pop
into
int3
inc
aaa
loopne
xor
cmc
or
ss
neg
test
xlat
push
xchg
cmp
xchg
movs
sar
loop
or
outs
mov
mov
push
pop
in
push
lea
dec
jmp
fsubr
clc
jg
lock
push
mov
jl
mov
jg
jno
dec
iret
cmp
mov
sbb
fistp
mov
dec
lds
and
int3
lods
jae
sub
test
dec
inc
xchg
scas
ja
ficom
fidivr
in
sub
mov
jge
setne
inc
push
hlt
pusha
stc
inc
push
cmps
mov
dec
mov
retf
cmc
mov
fdiv
mov
mov
mov
sub
mov
add
stos
sub
lock
mov
sbb
adc
mov
mov
mov
add
stos
cs
outs
lods
leave
xor
inc
mov
movs
lea
stos
push
mov
lahf
fnstsw
pop
add
lds
leave
push
nop
xor
xor
mov
adc
push
and
push
sar
and
scas
inc
push
jmp
mov
data16
pop
push
ret
sar
mov
mov
and
fldz
add
int
dec
pop
scas
mov
mov
in
push
jae
push
out
sbb
fild
addr16
xor
inc
rcl
inc
mov
scas
xchg
jno
mov
fwait
das
dec
mov
stos
add
test
xor
inc
mov
shl
jmp
sbb
ret
push
pushf
pop
sub
xchg
push
xchg
in
stos
xor
retf
xchg
pop
sbb
dec
mov
adc
lds
retf
sub
pop
cmp
cmp
pop
xchg
xchg
xor
stos
stc
lods
mov
sbb
xlat
repnz
dec
cmp
add
jo
in
mov
push
stos
push
fcmovbe
cmc
(bad)
pop
sti
test
mov
cld
or
jge
call
sub
push
retf
sbb
arpl
cmc
or
(bad)
sbb
sar
jae
pop
pop
push
jmp
icebp
cs
ficom
repnz
push
daa
mov
push
jo
cmps
(bad)
test
ret
std
mov
stc
mov
aad
lea
xor
sbb
lock
jl
or
cli
cs
in
fadd
jae
xlat
inc
cmp
jge
nop
ins
jnp
fwait
inc
ror
cdq
inc
retf
pushf
or
xchg
pop
dec
push
cmp
fsubr
jnp
cmp
sti
daa
in
loopne
icebp
sbb
xor
ins
outs
shl
fistp
in
push
scas
ss
sub
and
movs
aam
enter
jmp
sbb
dec
scas
mov
push
dec
inc
in
rcl
mov
test
out
xchg
push
ret
in
or
cmps
cvtdq2ps
mov
jmp
push
int3
pop
bound
loope
xchg
push
add
stc
sbb
sbb
xchg
fcomp
push
add
xor
fucomi
mov
imul
mov
dec
jb
scas
pop
jg
(bad)
jae
cmc
cmc
addr16
push
mov
and
jle
and
mov
adc
mov
sbb
mov
jb
es
retf
inc
cmps
mov
or
pop
add
jmp
pop
pop
call
cmp
push
lds
fwait
add
aam
and
ret
mov
mov
(bad)
jle
xor
test
and
mov
popf
inc
cld
repz
cwde
push
bound
test
outs
push
dec
test
pop
inc
mov
jns
popf
dec
ret
or
ins
fidivr
mov
f2xm1
xor
dec
add
(bad)
jne
call
xchg
cmp
movs
xor
xchg
ds
cmp
or
sar
sbb
sbb
add
xchg
or
cmps
or
add
pop
mov
addr16
push
shl
or
fistp
bound
dec
stos
sbb
xchg
push
mov
pop
sbb
jne
add
stos
dec
jecxz
xchg
arpl
push
in
popf
xor
popf
nop
add
jp
mov
mov
jmp
pop
jnp
add
jnp
repnz
inc
cmp
dec
adc
fistp
sahf
xor
rcl
xchg
sbb
loopne
sub
push
mov
(bad)
daa
and
pop
sub
push
pop
imul
xor
fnsave
test
jae
or
mov
adc
dec
jbe
jmp
or
xor
imul
dec
enter
jnp
jg
cmp
or
(bad)
xor
out
sbb
pop
popa
sub
cmps
add
(bad)
cwde
adc
leave
mov
(bad)
fbstp
xor
add
push
(bad)
xor
pop
sub
pop
jle
jbe
je
neg
addr16
sub
(bad)
xchg
sub
mov
out
adc
dec
inc
dec
mov
mov
push
cld
add
and
out
es
mov
pushf
pop
dec
mov
jb
cmps
inc
pop
pop
jns
dec
xchg
pop
xchg
(bad)
shr
sub
fmul
sub
mov
shl
test
inc
adc
movs
sti
sbb
retf
shl
call
jle
and
mov
xor
ficom
dec
movs
sub
mov
mov
sbb
arpl
pusha
data16
xchg
stos
cmc
mov
ret
jns
jns
xchg
or
xchg
std
retf
or
addr16
fadd
xchg
and
xchg
add
cmp
xor
inc
push
jl
daa
scas
pop
cwde
int3
add
pop
movs
push
test
and
jmp
in
dec
xor
aaa
adc
(bad)
push
ja
cmp
mov
arpl
mov
sub
or
add
sbb
ds
mov
retf
inc
adc
mov
fs
ins
mov
add
test
mov
add
repnz
pop
fist
pop
xor
push
push
mov
cmps
adc
iret
out
cmp
enter
add
and
xor
loopne
cs
(bad)
xlat
cmp
pop
(bad)
nop
loopne
lods
call
fs
adc
call
xor
jns
call
ret
xor
leave
enter
sbb
lods
in
out
or
dec
adc
inc
and
outs
dec
clc
cmps
test
jns
push
rcl
(bad)
xor
das
xchg
sub
mov
inc
ret
push
cdq
cmp
push
inc
test
ss
aaa
cmp
xor
test
sbb
sbb
pop
push
retf
fstp
mul
ins
retf
rcl
mov
fbld
hlt
test
adc
(bad)
ror
imul
loop
aam
pop
arpl
jmp
shl
jmp
and
ins
pushf
arpl
pop
iret
cmp
add
std
inc
sbb
stos
adc
hlt
adc
inc
mov
shr
add
mov
pop
fsubrp
pop
push
push
shl
js
xor
adc
pop
out
sub
pop
xor
aas
adc
jb
cmp
dec
xchg
xchg
pop
dec
lea
jmp
imul
dec
sub
fcmovu
je
cmps
repnz
mov
cwde
rcr
xchg
lods
sbb
(bad)
push
or
movs
sub
and
and
sub
pop
repnz
mov
fbstp
mov
push
dec
imul
xchg
or
adc
fist
mov
cmp
gs
std
add
js
mov
es
fisttp
and
jo
ret
dec
adc
jae
and
jmp
cmp
sub
xlat
sub
stc
sub
clc
adc
push
(bad)
fistp
jbe
or
adc
cmp
jge
jbe
add
loope
mov
into
je
test
pop
push
xlat
js
lock
push
and
dec
xor
mov
adc
pop
enter
adc
mov
jnp
xchg
xor
ret
loope
ret
jb
xor
jo
iret
mov
into
add
and
or
loop
test
mov
xchg
out
push
je
std
push
fist
xor
fstp
mul
or
push
adc
retf
test
xor
add
pop
and
dec
imul
frstor
xchg
jmp
test
mov
out
adc
mov
cmp
cmp
lock
retf
push
push
mov
push
cmp
add
fild
js
jb
div
(bad)
adc
(bad)
push
push
out
imul
rcr
stc
lahf
fcom
fsubr
xchg
das
sbb
ret
xor
jbe
fsub
xchg
mov
mov
imul
inc
in
sbb
je
in
lods
mov
lods
aaa
retf
cmp
cmp
lock
movs
jp
pop
xlat
call
mov
clc
and
pushf
call
in
retf
sbb
xor
fs
jb
in
pop
int
mov
xor
outs
cmp
dec
or
mov
or
push
and
jl
hlt
jbe
gs
test
out
rcr
jo
gs
mov
cs
out
xchg
call
test
mov
in
jo
adc
xchg
das
sub
mov
cwde
(bad)
arpl
(bad)
xrelease
jle
inc
(bad)
or
xor
cmp
xchg
push
in
dec
ret
cmp
mov
mov
loop
cmps
push
xchg
ins
pushf
aaa
mov
jbe
daa
inc
push
stos
xchg
bound
and
xchg
in
inc
jmp
jg
or
test
aaa
fldcw
(bad)
cmps
xor
fsubp
pop
or
pop
xor
or
cs
jle
mov
in
mov
mov
lods
in
jg
jle
cmp
int
les
push
pop
sub
nop
mov
cmc
fbstp
adc
sbb
stos
(bad)
cmps
mov
add
xchg
ds
xor
pop
mov
xchg
mul
ja
adc
push
adc
or
shl
pusha
add
fninit
cdq
jge
push
push
mov
dec
inc
add
sub
call
lock
outs
aad
xor
dec
ret
xor
adc
cli
je
(bad)
mov
setnp
imul
or
scas
xor
mov
jae
popf
pop
pusha
or
push
jno
test
push
pop
pop
ret
inc
mov
(bad)
aam
cs
lods
pushf
or
adc
xchg
ret
jmp
or
push
jo
adc
fsub
mov
dec
outs
xchg
adc
dec
fs
xchg
adc
mov
mov
dec
mov
and
int
jmp
test
test
xchg
sub
retf
push
call
pop
push
aas
dec
cmps
jmp
sbb
xchg
rol
pop
loope
aas
shl
adc
xchg
daa
mov
push
nop
sub
add
adc
test
xchg
inc
popa
iret
mov
and
fidiv
stos
dec
je
push
sbb
xchg
sahf
fld
pop
jecxz
out
pop
mov
jmp
push
and
sar
out
aam
xchg
mov
xchg
lock
ror
and
push
test
xor
dec
dec
jmp
sub
loope
addr16
aaa
out
fsub
cmp
pop
cmp
gs
cmp
data16
pop
ja
shl
sysenter
and
hlt
mov
jl
shr
loope
jno
inc
mov
imul
test
cmp
std
push
mov
cmp
movs
push
pop
aam
push
stos
fmul
out
jb
dec
test
fmulp
mov
push
sbb
(bad)
sti
(bad)
cmp
adc
pop
(bad)
repnz
push
outs
push
idiv
test
or
adc
mov
jl
cmp
retf
dec
call
cli
sub
les
outs
dec
fcmovnu
ins
push
arpl
push
and
sub
leave
cmps
ss
pusha
mov
fwait
lea
inc
dec
fs
(bad)
cli
push
in
push
sbb
mov
add
push
xorps
retf
mov
mov
retf
jecxz
push
jmp
mov
lea
ja
test
sub
xlat
add
stc
fsubr
xchg
pop
pop
call
mov
jle
addr16
mov
mov
xor
loop
mov
pop
and
out
push
mov
mov
xchg
aas
push
cmp
jg
pop
jbe
push
mov
add
mov
mov
inc
push
outs
loopne
cmc
adc
push
test
sub
fcomp
aaa
out
cmp
ds
fst
imul
and
mov
outs
xlat
or
mov
inc
jo
aam
or
fdivr
ins
inc
arpl
pop
scas
jmp
or
(bad)
loop
pop
cmp
and
dec
cwde
addr16
icebp
jb
sub
adc
movs
pop
(bad)
mov
mov
adc
jnp
retf
jg
test
arpl
mov
sbb
add
scas
test
and
cmp
or
fmul
retf
jmp
nop
pusha
mov
or
test
push
jae
mov
leave
pusha
push
xlat
movs
outs
cmp
inc
pop
add
cwde
cwde
mov
movs
in
mov
fnsave
lahf
mov
or
in
je
or
add
jno
or
call
lahf
push
push
shl
outs
or
dec
mov
mov
cdq
dec
or
pop
adc
call
or
sub
cmp
and
movs
and
in
ret
cmp
pop
repnz
and
popf
adc
sbb
add
shr
inc
aam
test
sar
nop
out
sbb
(bad)
in
fnstsw
cmp
ins
jne
adc
rcl
mov
(bad)
cli
xchg
dec
retf
inc
mov
out
pop
cdq
and
xchg
xchg
sub
cmp
mov
and
jbe
popf
enter
popa
stos
mov
cdq
loope
xchg
mov
retf
dec
jae
xchg
and
jno
out
push
pusha
mov
lods
(bad)
test
fsubr
loop
ins
sti
jge
jnp
cli
xor
xchg
adc
rol
js
mov
xor
(bad)
mov
in
into
movs
and
imul
dec
cwde
add
push
push
in
pusha
cmp
xor
retf
push
aad
movs
movs
dec
pop
paddsb
xor
mov
or
lods
clc
xchg
std
lock
mov
mov
inc
pop
loop
lock
jmp
lds
out
stos
sub
push
push
xchg
add
rcl
int3
jo
les
cmps
push
or
repnz
out
retf
out
leave
aas
mov
ret
enter
aas
ds
loop
test
rol
cmc
das
cmc
mov
mov
mov
xchg
dec
mov
lods
adc
inc
aad
ins
ret
sub
push
sub
sbb
das
mov
std
mov
mov
aas
cmp
fdiv
sbb
inc
push
loope
retf
inc
repz
dec
add
mov
cmp
pop
dec
adc
and
xor
jmp
test
jmp
ja
ds
retf
mov
std
(bad)
jmp
xchg
inc
xchg
aam
sub
ins
loop
inc
pop
and
jbe
pop
pop
in
sub
xchg
clc
dec
pop
sub
push
or
cmc
push
pop
or
sbb
imul
dec
sub
dec
idiv
cmp
mov
dec
xor
das
xchg
pop
leave
inc
repnz
cmc
cdq
cmc
add
adc
cwde
aaa
or
inc
fist
mov
push
xchg
in
mov
jl
aam
(bad)
fld
addr16
mov
and
scas
fiadd
add
mov
addr16
xchg
aad
sub
dec
mov
adc
add
stc
lods
jb
gs
dec
pop
adc
jns
sbb
pop
xchg
in
out
mov
xor
xor
stc
pusha
inc
pop
data16
mov
inc
pop
pop
aas
sub
sub
or
dec
cmps
push
pop
in
adc
jle
gs
test
gs
fcomp
mov
int
iret
(bad)
repz
aaa
sub
xor
and
adc
jp
mov
mov
cmp
pop
mov
xchg
in
jl
out
mov
mov
cdq
mov
mov
mov
ror
sbb
sbb
xchg
loopne
mov
into
sar
pusha
sub
adc
fldenv
(bad)
into
rcl
and
ret
push
ficom
sar
jo
fbld
movs
pop
sbb
popf
out
xchg
lods
pop
push
mul
push
inc
pushf
ror
xor
aam
clc
mov
bound
jg
ror
icebp
test
adc
clc
fiadd
jl
aaa
loope
mov
ds
aam
adc
shr
xlat
cmp
test
xchg
mov
dec
or
mov
cmc
daa
mov
jnp
in
jl
inc
pop
mov
cmps
mov
mov
jb
mov
xchg
stc
or
sbb
push
or
adc
je
mov
lods
sub
inc
mov
shl
sub
jl
nop
inc
sub
fwait
or
adc
outs
pop
(bad)
pop
push
test
nop
push
cmc
dec
mov
sub
sbb
or
or
mov
bound
loope
pop
push
push
or
fwait
mov
cmc
mov
jp
xchg
pushf
cdq
push
loop
mov
cmps
mov
repz
push
and
mov
inc
sar
cmp
sbb
cmc
and
dec
cli
pop
ret
lods
clc
mov
stos
mov
mov
pop
dec
add
fisub
out
rcr
ss
fnstsw
sbb
dec
(bad)
lock
jo
imul
mov
pop
sti
test
cdq
popf
jmp
cmps
xchg
cmp
xor
mov
jg
sbb
cmp
inc
mov
xchg
daa
add
sbb
or
push
push
test
mov
sub
mov
(bad)
jmp
jns
ds
enter
out
test
inc
or
xchg
int
in
or
lea
jp
or
dec
neg
adc
adc
dec
sbb
dec
rcr
push
mov
add
ret
hlt
pusha
add
xor
das
cdq
arpl
jecxz
sub
rol
lahf
into
push
sahf
adc
push
inc
add
inc
adc
push
outs
mov
sahf
adc
pop
jge
and
xchg
lods
push
in
cmp
cmp
sub
in
jmp
es
nop
inc
add
mov
call
add
daa
fwait
pop
pop
mov
sbb
sbb
loop
movs
popa
push
dec
cmp
sbb
icebp
sbb
fiadd
xor
std
jns
(bad)
jae
sbb
retf
cli
test
lds
xor
es
xor
outs
rcl
pop
push
fcomp
dec
jmp
mov
push
bswap
sub
dec
pusha
hlt
push
leave
call
out
imul
sub
retf
mov
sbb
or
retf
cmp
xlat
jne
mov
push
mov
out
rep
add
or
dec
dec
push
mov
and
push
sub
into
aaa
xchg
stc
test
lea
mov
ret
cwde
pop
pop
sbb
(bad)
int
(bad)
xlat
push
and
push
fwait
jp
mov
mov
stos
add
test
int
lahf
pop
add
xsaveopt
call
lods
adc
fninit
pop
adc
mov
jp
data16
push
adc
mov
jecxz
(bad)
in
imul
not
mov
out
cmp
std
mov
les
js
lea
call
lods
and
daa
fsub
jmp
mov
jno
sub
jg
xlat
pop
std
mov
jp
lahf
pop
push
inc
jb
jle
adc
mov
and
pop
mov
lahf
cmp
lods
adc
xor
retf
das
fsubr
lahf
push
out
test
adc
push
lea
inc
test
or
jns
jl
popf
aam
in
cmc
push
push
data16
or
lea
std
movs
pop
sub
imul
pop
jmp
mov
bound
repz
sbb
xlat
fstp
pop
ret
and
out
jns
jns
test
xchg
lock
push
or
shl
fld
iret
xor
xchg
lahf
xchg
sti
ss
aad
push
lds
cli
(bad)
jo
cmp
push
movs
add
repz
jmp
mov
xchg
sbb
out
jmp
and
lsl
jp
ror
(bad)
jnp
jecxz
jle
push
mov
pop
sub
stc
mov
push
xchg
outs
popf
mov
cmp
add
aad
out
lahf
stos
leave
push
sub
call
pop
mov
xchg
bound
sbb
push
pop
add
or
cmc
lds
loopne
mov
outs
into
es
pop
pop
fs
cwde
push
iret
test
mov
sbb
pop
xor
or
arpl
inc
(bad)
push
iret
push
mov
or
push
add
add
pop
or
mov
push
das
mov
jg
xchg
lock
mov
xchg
mov
mov
inc
adc
xchg
push
jp
les
jb
ror
dec
inc
inc
hlt
xor
mov
xchg
aas
inc
jmp
add
or
and
jmp
mov
jmp
mov
sbb
mov
push
mov
pop
adc
jmp
dec
cmp
xchg
inc
xor
gs
movs
or
mov
xchg
inc
or
mov
add
xchg
or
ins
(bad)
inc
cmps
into
movq
add
mov
mov
jbe
xchg
push
outs
cmp
int
fstp
mov
xchg
outs
mov
cmp
cmp
(bad)
xchg
mov
gs
icebp
xor
mov
lods
xor
cld
and
add
pop
mov
shl
stc
or
hlt
sar
mov
and
daa
jb
mov
sub
xchg
icebp
jne
sar
scas
lds
add
mov
push
pop
mov
xor
inc
mov
dec
adc
push
loop
cmc
push
jg
dec
sti
jb
lahf
push
int3
stos
add
xor
pop
sub
test
int3
adc
cmp
jmp
(bad)
(bad)
jmp
or
test
cmp
jl
or
jmp
fist
pop
in
loope
cld
call
(bad)
or
scas
push
fisubr
cs
sub
(bad)
lods
adc
and
sub
ret
sbb
fsubr
sub
cmps
enter
add
add
inc
enter
ds
in
imul
mov
xor
jae
sub
xchg
ins
mov
mov
mov
icebp
dec
xor
inc
or
retf
mov
pushf
movs
cwde
das
push
mov
mov
adc
pop
or
mov
into
jnp
jns
jge
outs
inc
sbb
das
pop
pop
or
sahf
and
cdq
inc
dec
mov
add
push
loope
jp
rol
es
mov
jp
xor
mov
push
retf
iret
je
adc
test
cmp
cwde
fdivp
dec
cs
sub
outs
mov
test
pop
sub
mov
mov
sti
xchg
jle
(bad)
dec
movs
sub
cmp
jno
sti
rcr
xchg
push
movs
sub
adc
xchg
xchg
pop
sar
push
rsm
rcl
ins
mov
sbb
into
adc
je
hlt
pop
cmp
inc
leave
sub
dec
sbb
inc
(bad)
xlat
mov
mov
push
ss
dec
sbb
dec
mov
xor
and
fsub
xchg
(bad)
fsub
jo
inc
mov
pop
cdq
cs
(bad)
adc
pop
pop
vphaddwq
(bad)
lds
inc
cmp
inc
jmp
cmps
inc
mov
cs
sub
mov
scas
xchg
mov
push
lea
int
aaa
xchg
mov
out
shr
pop
and
fimul
das
aas
ds
push
ja
add
scas
adc
add
ss
inc
cmps
mov
mov
adc
icebp
pop
jge
mov
(bad)
dec
test
shr
dec
or
mov
iret
ret
inc
call
pop
bound
js
mov
push
in
sbb
jo
sbb
and
adc
ds
leave
out
scas
and
mov
pop
mov
pop
mov
mov
loop
les
mov
cmp
push
mov
mov
xchg
xchg
ret
push
mov
xor
retf
stos
outs
and
movs
in
arpl
movs
(bad)
ficomp
add
sbb
pop
or
fdivr
adc
les
jno
sub
xchg
mov
pusha
jae
jns
in
lahf
adc
scas
inc
sub
pop
and
jnp
add
inc
imul
sub
pusha
imul
cli
pop
cld
push
retf
sub
fisubr
sti
ins
or
gs
lahf
push
jae
push
sub
add
loope
mov
aam
xchg
add
xchg
(bad)
jnp
jnp
mov
xor
push
aas
xchg
xchg
imul
cmp
dec
xor
jns
cwde
dec
test
div
test
cld
xchg
sub
sbb
aas
jp
xor
pop
xor
test
or
int3
test
fidivr
mov
stos
and
jae
xlat
jmp
pop
jle
shr
push
imul
jne
jns
pop
ins
push
loopne
rcl
in
loop
das
cmp
or
push
xchg
imul
jae
sbb
test
mov
lods
cmp
xor
mov
xor
jno
jmp
pop
add
imul
mov
cmc
mov
cmp
pop
cmps
mov
xor
bound
ja
outs
aaa
xchg
cmc
sub
pusha
iret
enter
lds
data16
out
test
pop
retf
push
jo
retf
scas
mov
(bad)
psraw
stc
test
pop
sub
jnp
not
loope
push
out
stos
shl
(bad)
and
bound
repz
and
sbb
inc
pop
add
les
xor
pop
fmul
repnz
xor
icebp
outs
sti
inc
sbb
push
(bad)
jbe
sbb
outs
jb
in
cld
pusha
daa
add
jmp
sti
jg
outs
add
ins
(bad)
jmp
xchg
or
ret
jb
pcmpgtw
add
push
std
mov
aas
or
repnz
dec
aam
mov
xchg
xchg
jl
push
dec
xor
add
inc
push
push
dec
inc
ds
xchg
mov
ret
addr16
mov
add
mov
cmps
pop
xchg
leave
inc
cmps
mov
lods
test
mov
jae
push
clc
inc
cmps
jmp
test
adc
outs
pop
cmp
fld
fld
test
or
int3
in
xchg
gs
outs
adc
push
push
mov
pop
cmp
cmp
xlat
in
ss
ds
push
xor
ss
sbb
out
rcl
cdq
push
shl
pop
xor
ds
pop
jns
icebp
int3
enter
lock
daa
sub
call
bound
into
shl
mov
loop
cmp
icebp
mov
lock
or
(bad)
and
mov
pop
cli
jnp
lods
pop
jp
xchg
fmul
sbb
push
adc
int
inc
test
add
mov
iret
xor
adc
mov
mov
jmp
movs
dec
shl
fisub
mov
or
enter
in
inc
push
cmc
mov
lods
mov
push
or
(bad)
imul
push
call
ror
inc
imul
je
lock
xchg
dec
lods
aam
dec
int
push
xchg
mov
push
(bad)
or
mov
xor
cmp
out
js
sbb
fs
mov
adc
push
popf
leave
sbb
loope
xchg
sub
jmp
leave
jl
xchg
out
test
lods
loopne
dec
sbb
je
add
aam
mov
cli
inc
xchg
in
ret
aam
cmp
pusha
inc
pop
and
mov
push
mov
cmp
iret
xor
jae
ret
outs
xchg
nop
xchg
mov
add
imul
js
dec
loope
js
mov
mov
xchg
ret
fld
jecxz
popf
mov
in
aas
rcr
fsub
mov
lahf
sbb
std
retf
dec
cmp
das
push
(bad)
hlt
mov
mov
cs
repnz
pop
xor
pop
xor
outs
mov
mov
fild
push
add
push
adc
repz
cmp
or
mov
push
fisttp
jno
add
outs
int3
mov
jb
pop
push
repnz
push
ja
in
call
imul
jl
inc
aam
ss
and
push
jns
fs
inc
sub
aam
sub
or
xchg
jmp
pop
daa
pushf
leave
sahf
mov
mov
pop
(bad)
fdiv
ja
xor
mov
iret
push
pop
test
sub
in
pop
cdq
cmps
inc
retf
in
test
push
cdq
mov
pop
movs
je
fsubr
test
fld
es
dec
fild
icebp
and
jecxz
dec
imul
jle
(bad)
int3
inc
test
cmc
fcom
aaa
jns
push
xchg
cdq
xchg
mov
test
mov
cdq
popa
call
ret
(bad)
push
arpl
sub
stos
jmp
je
jbe
xlat
rcl
xchg
mov
jmp
adc
arpl
and
(bad)
repnz
xchg
popf
pop
sub
jg
jns
test
test
xor
(bad)
imul
fdiv
jg
add
xchg
lock
mov
xor
jbe
ss
retf
mov
out
lds
repz
in
test
inc
in
aaa
pop
dec
fisubr
push
cmc
nop
mov
scas
pop
add
or
fbld
div
daa
(bad)
out
xchg
jecxz
pop
mov
lds
inc
lods
push
test
dec
jns
fdiv
jne
hlt
test
ins
push
mov
dec
scas
xor
pop
jmp
add
cdq
push
das
xchg
mov
pop
scas
fsubr
movs
(bad)
and
add
and
cmp
push
and
and
cmps
fs
cmp
repnz
cmp
outs
fnstcw
scas
popf
push
lahf
xchg
scas
fisub
int
imul
aas
ret
mov
ror
mov
push
push
outs
cmc
mov
mov
mov
push
xchg
std
mov
mov
and
inc
xchg
xor
jae
cdq
mov
mov
sti
ret
int
cmp
in
cmc
retf
inc
push
jl
dec
or
jg
inc
cmp
mov
sti
mov
mov
retf
and
dec
repnz
pop
arpl
sbb
cmp
cmp
inc
mov
or
nop
push
jl
fmul
test
push
adc
cdq
(bad)
xlat
inc
dec
test
(bad)
cmps
inc
jbe
and
jl
ss
cmp
out
xchg
mov
(bad)
xchg
data16
test
pushf
adc
stos
in
ins
movs
frstor
inc
pop
cmp
cmp
movs
jae
cmp
fbld
rcl
mov
icebp
and
inc
push
mov
repnz
mov
xchg
test
clc
inc
and
or
xor
popf
cdq
shr
cmp
pop
or
inc
inc
fstp
jmp
jne
and
xor
aam
aad
push
mov
aam
or
jecxz
test
inc
test
rol
(bad)
cmp
and
xor
mov
call
imul
ds
jbe
adc
ffree
outs
dec
xchg
in
rcr
xchg
pop
test
jle
push
add
pushf
repz
out
inc
bound
sbb
xor
rol
mov
cld
ja
sbb
push
inc
clc
(bad)
out
pop
in
outs
rcr
movs
or
popa
inc
repz
mov
jle
push
loopne
dec
test
sbb
fsub
mov
push
push
das
test
or
pop
mov
nop
out
inc
xchg
jb
pop
cmp
push
mov
dec
cmp
call
jp
pop
cmc
jo
inc
pop
popa
ins
mul
jecxz
cmps
ins
push
js
outs
jns
mov
jns
sbb
xchg
dec
jecxz
aam
hlt
lods
lahf
add
mov
adc
pop
pop
inc
xor
fild
cmp
shl
int3
mov
dec
jae
cli
and
jmp
jl
mov
adc
inc
rcr
inc
jb
lds
fimul
mov
leave
or
xchg
jno
cs
(bad)
retf
or
sbb
test
push
lock
movs
inc
rol
call
push
jg
ret
outs
cmp
sub
push
rol
mov
bound
cmp
pop
imul
sar
imul
lds
lahf
std
int
aam
cmp
popf
fs
loope
mov
push
cmp
and
and
sbb
in
mov
cmps
xchg
hlt
sbb
inc
(bad)
push
jmp
jg
in
ret
call
pop
test
loope
je
call
xor
daa
push
xchg
cmps
bound
inc
push
xchg
mov
and
aad
int
cmp
push
inc
fstp
mov
push
push
xchg
mov
lods
in
push
das
mov
(bad)
in
imul
lea
dec
loope
addr16
cdq
cmps
and
idiv
mov
out
xchg
cmps
sub
mov
sbb
repz
cmps
ss
dec
daa
mov
iret
pop
inc
mov
loope
lock
inc
lods
js
mov
sbb
push
pop
push
loopne
push
cdq
cmp
outs
sbb
aam
jecxz
shl
xor
hlt
dec
push
aam
jle
lds
imul
stc
jge
cwde
mov
push
cmp
fs
ss
mul
pop
fisubr
and
or
repnz
xchg
xlat
jbe
pushw
inc
ja
bound
fs
(bad)
je
lock
repnz
icebp
mov
mov
or
icebp
test
pop
lahf
jb
mov
cmp
fcmovbe
push
or
sub
shr
sar
or
push
and
mul
retf
stos
retf
jge
ret
jle
push
xchg
in
pushf
pusha
inc
sub
cmp
ins
movs
shl
pushf
sub
push
mov
pop
inc
jmp
add
nop
or
dec
jl
mov
hlt
jo
dec
iret
jp
leave
mov
dec
mov
cmp
dec
mov
jge
and
pusha
dec
add
mov
dec
jmp
add
add
jecxz
stos
xchg
rcl
lea
mov
push
and
fst
and
sti
cld
jnp
call
and
cmp
les
cs
(bad)
mov
out
cmp
push
add
movsx
div
dec
cmps
jnp
loop
mov
inc
daa
xchg
bound
lds
(bad)
jmp
and
ror
dec
xor
mul
in
pop
retf
jo
cmc
enter
jmp
imul
lahf
lock
jnp
push
aad
or
inc
mov
mov
mov
and
sub
sbb
adc
push
data16
rcl
into
scas
(bad)
and
ins
scas
inc
imul
jmp
cmp
or
inc
lods
scas
hlt
xor
leave
dec
mov
pop
sub
enter
ficomp
adc
int
mov
out
lods
les
push
push
xor
push
xchg
icebp
ffree
or
shr
xor
(bad)
ror
movs
dec
jecxz
push
inc
xor
xchg
and
cmp
xor
add
lods
push
or
shl
ret
loope
add
rcr
retf
ss
push
or
add
jp
add
(bad)
jmp
loope
popf
nop
xor
pushf
cli
or
popa
arpl
fiadd
add
lea
mov
pop
cmp
test
xchg
(bad)
fs
into
shl
or
mov
arpl
int
(bad)
out
ss
sbb
loopne
ret
jmp
sub
ror
(bad)
cmp
aad
sbb
fimul
jmp
daa
mov
mov
xchg
and
ficom
mov
shr
push
(bad)
fs
sub
mov
frndint
mov
xor
add
movs
mov
shl
pop
pop
loop
jo
or
cmp
clc
lahf
cli
cmp
movs
inc
sub
jbe
fldz
stc
sub
inc
xor
enter
fidivr
enter
fwait
jne
or
int3
cdq
iret
mov
in
sub
inc
or
jmp
aas
sbb
lock
sti
das
cs
repz
pop
fcmovne
jns
mov
adc
loope
fidiv
clc
rcl
clc
mov
push
add
adc
dec
dec
pop
int
hlt
icebp
jg
push
add
xchg
xchg
cwde
dec
xrelease
cmps
mov
repz
ja
push
in
fld
jmp
in
les
mov
bound
fs
and
sub
sub
cmp
in
add
or
inc
pop
sub
aam
fwait
inc
jmp
sub
jno
inc
jle
fwait
sbb
icebp
jo
icebp
cdq
in
cmps
repnz
hlt
mov
outs
add
mov
loop
jmp
test
mov
sbb
cdq
sbb
adc
mov
sbb
jmp
shl
jl
leave
in
pop
add
push
call
push
mov
out
push
scas
inc
jle
add
je
mov
xchg
mov
lods
cmps
cmp
lock
jl
dec
jb
cmp
xor
scas
xor
out
scas
test
inc
lock
add
popa
sub
add
aas
adc
xchg
push
or
push
out
ja
(bad)
cmp
xor
cmc
mov
shr
push
mov
lea
test
and
dec
push
pusha
ret
xchg
pop
in
cmp
ss
xchg
push
js
out
jae
cli
fisub
jp
mov
fadd
dec
push
adc
js
add
cmp
movs
jmp
fs
aam
mov
(bad)
in
add
cmps
jns
mov
cmp
adc
mov
jl
repnz
mov
retf
xchg
rcl
dec
sti
xchg
xchg
jmp
out
clc
and
stc
mov
ret
mov
test
adc
sub
cmc
ja
jecxz
or
cmp
push
ds
pop
clc
lea
adc
sub
mov
mov
mov
sub
mov
mov
mov
push
loope
ret
jge
js
pop
pushf
lea
mov
clc
push
out
xor
loop
mov
pop
addr16
jge
or
fcmovbe
std
int
cmp
push
sub
cli
dec
cwde
shl
aaa
cld
cmc
jp
lods
push
sbb
cs
lea
(bad)
out
add
cwde
fidivr
int3
push
inc
or
into
ins
jns
mov
jecxz
iret
ret
fdivr
in
mov
inc
and
mov
xchg
(bad)
icebp
fnstsw
dec
push
jp
xchg
arpl
inc
jl
lahf
or
ret
rcr
jmp
add
loope
dec
push
ja
push
mov
retf
daa
or
pop
les
repnz
repz
repz
pop
mov
cmps
push
jle
jb
repnz
outs
scas
pop
push
scas
xchg
add
jns
xchg
leave
pop
mov
cli
sar
aad
int3
or
ret
xchg
aas
cmovo
stos
mov
jae
loopne
add
pop
pop
pushf
pop
pop
add
sub
in
lahf
sti
rcl
imul
mov
xor
(bad)
outs
cmp
in
scas
mov
push
xchg
and
xchg
inc
adc
shl
xchg
push
pop
(bad)
loope
das
ret
jecxz
xor
fidiv
add
dec
in
fiadd
dec
das
or
push
xlat
cli
hlt
xor
out
sub
fwait
sub
in
adc
fist
cmc
lock
or
in
popf
out
sbb
add
stos
fisttp
popf
shl
and
mov
adc
lods
sub
or
sub
scas
stos
sbb
add
fcomi
push
aam
enter
(bad)
push
sub
push
inc
push
and
punpcklwd
and
or
xchg
mov
pop
lea
sub
outs
std
into
aam
mov
cld
outs
xlat
out
call
xor
pop
mov
adc
jo
fsubr
sbb
test
std
add
in
jle
adc
add
fstp
cmps
sbb
jp
arpl
je
mov
sbb
sbb
jmp
mov
and
xchg
stos
bound
test
jno
sbb
jp
lods
mov
test
shl
mov
lods
inc
stos
adc
and
js
pop
ficomp
icebp
xchg
mov
push
test
mov
js
add
adc
mov
sti
xchg
dec
or
jae
cmp
mov
push
(bad)
ins
lds
leave
push
pop
xor
or
cmc
das
popf
lods
mov
cmp
adc
push
cdq
mov
pusha
jmp
mov
cmp
sbb
(bad)
mov
dec
mov
test
xchg
call
addr16
xchg
jae
jo
fbstp
push
jnp
movs
mov
mov
push
add
mov
jne
lock
xlat
scas
xlat
mov
in
inc
out
inc
inc
push
test
(bad)
cmp
xchg
pop
or
inc
scas
jp
cli
imul
imul
(bad)
test
dec
in
hlt
xchg
(bad)
mov
cmps
cwde
fcomp
or
mov
cmp
jae
les
sar
pop
jl
(bad)
jbe
sar
test
hlt
push
or
call
inc
dec
es
xchg
or
(bad)
sar
in
dec
fwait
mov
xchg
cmp
je
jg
sbb
sbb
fild
xchg
mov
or
enter
xor
xchg
jne
xchg
aad
adc
add
cmp
pop
in
pop
cmc
data16
push
xor
fwait
inc
ss
test
xchg
(bad)
pop
jbe
(bad)
mov
jno
mov
movs
jbe
lods
dec
adc
mov
sbb
adc
fisttp
or
and
jp
jae
loopne
std
sub
cmp
add
or
add
lods
cmp
pusha
adc
gs
icebp
jns
movs
jg
imul
xchg
push
inc
adc
push
mov
aas
in
and
mov
test
out
mov
outs
jecxz
test
mov
cmps
and
jmp
pop
jp
mov
imul
movs
mov
out
fnstsw
push
call
movq
xchg
das
pop
fisubr
nop
gs
or
push
jo
cmc
dec
repz
inc
pop
popa
cmc
adc
mov
mov
movs
cmc
aam
add
mov
jmp
sbb
stos
aad
xchg
cs
mov
jg
loope
jp
inc
dec
xor
dec
inc
xor
jge
(bad)
aas
mov
mov
mov
jecxz
in
shr
stos
sub
and
jae
sahf
mov
inc
mov
mov
outs
pop
jp
jmp
cwde
ins
ret
mov
jmp
test
sbb
(bad)
mov
push
imul
mov
ins
sub
ins
and
jnp
jns
shl
dec
cdq
stos
nop
jp
sub
loopne
and
sub
fiadd
mov
(bad)
je
lahf
xchg
xchg
outs
xchg
popa
jae
es
mov
jp
pop
(bad)
or
mov
out
retf
and
mov
lock
push
xor
ds
popa
cwde
mov
sub
iret
sub
push
mov
mov
sbb
(bad)
repz
cmp
in
push
gs
loope
xor
fs
inc
fmul
jns
jl
mov
ficomp
ret
sbb
mov
mov
mov
mov
bound
int
xchg
dec
sbb
idiv
cmp
add
stos
ins
push
xor
ins
dec
loop
icebp
adc
aas
outs
add
lods
ins
inc
shl
test
lea
add
mov
cmp
pop
push
leave
sti
cmps
(bad)
fnstcw
and
cdq
push
fisub
sub
popa
fwait
ror
mov
cmp
xor
xor
sub
call
pusha
mov
xor
sbb
movs
cdq
dec
jns
out
push
movs
jle
sbb
push
mov
scas
xor
aad
movs
push
jp
push
pop
sub
pop
lahf
bound
hlt
sub
push
mov
test
(bad)
loopne
mov
lock
leave
adc
add
push
sbb
ja
push
dec
sbb
xchg
mov
mov
push
shl
lahf
fdivr
iret
cs
pop
push
inc
(bad)
and
jmp
add
shr
pop
xor
inc
lahf
call
pop
es
push
push
sbb
aas
cmps
jmp
adc
dec
dec
jmp
stos
out
retf
mov
repnz
and
pop
out
push
arpl
rcr
pop
outs
pop
sahf
or
lock
shr
xchg
mov
jns
out
(bad)
and
or
sti
sar
std
sbb
mov
out
movs
sbb
add
movs
cmc
cdq
icebp
loope
sbb
out
xor
je
iret
jmp
and
mov
mov
mov
retf
sbb
push
popf
push
std
push
dec
mov
adc
and
ins
sar
add
ins
(bad)
repz
arpl
jno
push
or
mov
mov
pop
jmp
jg
lods
(bad)
jbe
mov
arpl
xor
pop
push
and
jp
sbb
loope
xor
sti
cmp
jp
push
ss
mov
lds
dec
mov
push
jmp
inc
test
dec
in
pop
pop
shr
shl
mov
sub
aas
jb
cwde
adc
cmc
jp
xchg
xor
mov
loop
test
icebp
push
test
das
shl
out
dec
ds
xor
pop
cdq
jbe
in
in
or
out
int3
popa
dec
fadd
out
sub
xchg
lock
outs
icebp
rol
fld
sub
test
loop
in
out
add
inc
or
and
jge
cmps
lahf
xlat
pop
loop
aad
loopne
adc
cmp
call
add
cmc
push
arpl
inc
rol
dec
push
pop
(bad)
cmp
sub
dec
and
leave
xor
jae
pop
gs
xor
call
and
sbb
fwait
(bad)
sub
cdq
psubusb
xchg
repz
leave
xlat
test
(bad)
popf
dec
retf
ret
mov
mov
push
xor
repnz
stos
jl
sub
or
xor
jns
repnz
clc
xor
je
in
mov
xchg
mov
neg
jmp
mov
cmp
out
sbb
xchg
pusha
dec
lods
outs
out
sbb
test
retf
pusha
loop
call
cdq
fwait
scas
or
mov
pushf
loope
mov
je
loopne
xor
pop
adc
or
xor
push
sub
ret
cli
in
add
repnz
dec
mov
and
mov
int
sti
daa
jecxz
and
inc
scas
(bad)
jns
jne
jp
retf
lds
loope
(bad)
in
in
pop
mov
jae
popf
inc
adc
das
push
and
mov
dec
in
inc
mov
mov
cmp
adc
xchg
dec
mov
lock
mov
push
scas
mov
div
push
idiv
repnz
xchg
(bad)
pop
push
sub
push
(bad)
mov
les
xor
imul
inc
stos
jmp
mov
mov
pop
loope
pop
add
das
and
jp
enter
inc
idiv
test
pop
ds
lea
in
fcom
cmp
outs
mov
and
test
sahf
in
xchg
cmp
ret
xchg
fidiv
sub
sbb
retf
fst
push
ins
sbb
inc
(bad)
gs
mov
mov
push
pusha
sbb
mov
icebp
cmp
outs
push
xor
jge
xchg
jge
xchg
aas
cmps
mov
cdq
repnz
shr
ss
sbb
inc
add
sub
jbe
fld
mov
stos
sub
pop
mov
jl
cmp
not
loope
sub
xlat
loop
push
(bad)
mov
xor
mov
push
sahf
push
ins
retf
stos
dec
(bad)
ror
pop
and
add
sbb
jns
pop
lea
scas
push
inc
daa
js
(bad)
fwait
sbb
sbb
outs
pop
mov
outs
scas
inc
push
(bad)
repz
adc
clc
(bad)
fbld
mov
sub
xchg
cld
(bad)
cli
repz
in
mov
cmp
push
sbb
pop
or
inc
dec
xchg
cli
adc
xor
das
out
push
cmc
mov
fcmovu
mov
or
xchg
int
sbb
jl
arpl
retf
push
adc
stos
mov
(bad)
rcl
jg
push
cdq
push
ffreep
mov
xchg
das
arpl
test
adc
pop
js
xor
cmp
aad
mov
aad
daa
cmc
mov
outs
mov
sbb
icebp
out
retf
and
pop
mov
ins
(bad)
(bad)
and
(bad)
dec
nop
mov
inc
or
push
push
into
push
(bad)
not
xchg
pop
adc
test
movs
into
div
push
sahf
fistp
or
xchg
xchg
dec
mov
add
mov
nop
xchg
daa
dec
inc
ja
sub
arpl
jae
pop
or
pop
or
jle
add
dec
and
enter
cld
mov
das
mov
xor
and
sbb
push
jno
pop
les
iret
push
(bad)
mov
mov
pop
sbb
mov
fmul
cwde
pop
xor
jb
dec
sbb
outs
iret
and
dec
(bad)
shl
or
or
sbb
sbb
dec
imul
mov
ins
push
fsubr
outs
(bad)
vhaddpd
pushf
adc
sub
(bad)
mov
bnd
dec
and
sar
js
repnz
inc
dec
out
dec
enter
xor
push
mov
cmps
aas
sbb
iret
pushf
push
pop
sti
fisttp
mov
cmc
pop
ret
jmp
stos
or
shr
or
gs
mov
inc
movs
lods
lahf
pop
popa
stos
es
loop
xlat
mov
ret
mov
sbb
retf
das
cmp
mov
add
add
add
data16
push
adc
fistp
push
(bad)
hlt
std
push
push
pop
push
mov
lds
fidivr
dec
and
and
aas
pop
aas
xor
std
and
pop
pop
dec
xchg
jmp
push
fdivp
and
scas
cmp
jmp
cwde
add
jbe
xor
jge
cld
pop
add
sbb
pop
and
adc
add
cmp
loope
(bad)
fist
loop
pop
dec
adc
lock
add
out
jecxz
aad
pop
or
call
fwait
out
pop
pop
in
fdivr
js
fcos
stc
push
and
mov
movs
xchg
jle
inc
and
jae
adc
cmp
icebp
xor
in
into
inc
lock
enter
cmps
mov
ss
bound
push
je
pop
adc
mov
sahf
and
pop
xor
xchg
jb
mov
imul
ret
mov
out
(bad)
mov
sub
in
imul
sbb
push
and
cmp
jecxz
xchg
loop
dec
data16
push
sbb
mov
adc
pop
ficomp
cmp
add
xchg
push
dec
ret
daa
popa
jns
repnz
sbb
popf
pushf
test
je
sub
xchg
stos
cli
mov
imul
add
cmp
int3
sahf
inc
sahf
sub
cmp
mov
mov
and
add
mov
lock
lds
ficomp
test
fld
jle
data16
add
fisubr
sub
inc
popf
mov
ror
pop
cmp
xchg
pop
push
mov
jae
jae
jle
add
ss
fist
repz
sahf
inc
inc
pop
add
pop
outs
in
nop
inc
or
mov
sub
(bad)
pop
vmovq
ins
fwait
jns
sub
xor
sub
xchg
jle
iret
dec
adc
mov
sar
cmp
jo
(bad)
leave
pushf
cmc
lods
inc
mov
(bad)
mov
ds
fisttp
stos
test
xchg
ss
mov
xchg
int3
(bad)
jmp
xchg
ret
mov
test
dec
jns
pop
pop
(bad)
fcom
mov
add
xor
push
cmps
pop
je
pop
pop
dec
pop
mov
sbb
into
fwait
aam
cmp
add
in
jle
shl
and
jnp
push
je
test
in
imul
jmp
or
and
xchg
jno
sti
inc
fwait
inc
or
sbb
test
in
retf
lods
cmc
sbb
adc
aas
inc
cld
rol
popa
fnsave
test
scas
mov
stos
pop
outs
test
hlt
pop
pop
cdq
add
sub
push
dec
jle
mov
out
mov
sub
(bad)
les
cli
pop
and
rcl
xor
dec
push
push
stos
cmp
leave
repnz
cld
dec
bound
sub
iret
or
idiv
adc
xchg
inc
xor
sbb
in
adc
add
div
xor
call
call
mov
(bad)
mov
jbe
movs
icebp
int
test
mov
and
fnstenv
pop
loopne
pop
hlt
popf
(bad)
add
ficom
mov
sub
xor
adc
push
mov
movs
into
or
push
jl
pop
pop
and
or
shl
pop
xchg
sbb
addr16
jbe
aad
dec
push
jmp
cmp
into
mov
fisttp
xor
callw
sbb
sbb
xor
mov
inc
dec
dec
imul
inc
in
pop
(bad)
add
adc
dec
xor
mov
xor
daa
sti
xor
loopne
pop
pusha
popa
lods
ret
ret
xor
sbb
pop
inc
jb
sub
cmp
adc
xor
daa
rol
aaa
je
cli
test
sub
mov
dec
xor
sub
repz
imul
cmp
or
jnp
js
sub
cmc
mov
dec
cwde
jecxz
inc
or
aaa
push
ins
cmc
xlat
cmp
and
neg
sbb
adc
pushf
sbb
not
adc
es
inc
mov
push
pop
add
sub
call
(bad)
mov
cmp
iret
fmul
dec
push
or
mov
fisttp
jno
(bad)
mov
mov
mov
cld
mov
(bad)
(bad)
test
cmp
mov
bound
dec
loopne
jne
or
lock
ins
lods
les
push
std
dec
cmp
and
mov
data16
(bad)
aad
dec
push
out
adc
neg
rcr
pop
jmp
mov
mov
add
clc
lock
jnp
xlat
push
les
inc
pusha
jae
mov
mov
addr16
scas
or
pop
sub
test
(bad)
mov
test
ror
xor
inc
fimul
movs
stos
jnp
and
out
out
(bad)
jnp
xchg
xchg
hlt
sti
add
(bad)
xor
lods
push
fidiv
je
retf
pop
sub
(bad)
out
xor
mov
popa
push
xor
push
mov
test
xchg
and
ds
mov
sub
inc
repnz
fwait
movs
fadd
aam
ficom
iret
or
cmps
out
test
add
lods
sbb
and
lods
inc
xor
gs
in
jle
icebp
sbb
or
add
test
imul
mov
sub
jns
addr16
mov
xchg
jecxz
sbb
sub
fdivr
sbb
je
cmps
lock
or
push
pusha
pusha
das
xchg
inc
and
outs
nop
jbe
lock
ins
inc
(bad)
(bad)
or
cs
jb
xlat
leave
adc
mov
lods
ficomp
in
(bad)
stc
(bad)
jp
mov
and
inc
repz
dec
icebp
xchg
dec
and
fnstenv
(bad)
add
jle
jmp
lods
sar
test
mov
sbb
ja
jecxz
jmp
rol
int
sub
push
jno
int
jg
push
mov
adc
add
or
push
shl
jl
or
push
sub
xchg
mov
mov
jns
jo
loopne
bound
iret
pop
inc
jae
pop
stos
movs
jg
out
bound
add
sbb
das
int
test
call
fcom
les
shr
shr
test
or
and
cmp
cld
push
scas
dec
sub
jp
jno
ins
push
in
enter
fldcw
mov
das
aad
add
data16
mov
test
pop
je
mov
sbb
(bad)
cmp
loope
popf
inc
shr
fsub
sub
xor
lods
xchg
shr
jle
mov
(bad)
rcl
cli
loopne
sbb
or
lods
or
adc
call
int3
mov
imul
xor
shr
mov
add
hlt
mov
div
retf
jp
ret
je
push
mov
push
test
inc
push
ficomp
cmp
movs
aas
push
jmp
gs
mov
xchg
mov
sub
mov
in
pop
push
popa
mov
out
add
and
push
outs
int3
sti
push
iret
scas
sbb
jmp
je
div
je
dec
int
std
rol
and
mov
adc
gs
addr16
lock
popf
out
push
cmps
sbb
xchg
ds
je
dec
and
cmp
shr
cld
or
adc
or
cmp
inc
mov
lahf
and
xor
mov
pop
pop
add
in
dec
pop
lods
jmp
sar
or
call
sbb
inc
jecxz
and
arpl
sub
aaa
(bad)
xchg
stos
(bad)
enter
cld
ins
mov
sahf
sub
sahf
mov
(bad)
mov
paddusb
pop
test
or
mov
jmp
xchg
pushf
ret
push
ins
xor
shl
jg
hlt
add
lds
cmps
inc
mov
push
cli
shr
fcomp
test
inc
mov
jecxz
xchg
pushf
push
pop
ror
ins
push
cs
sub
and
jp
pushf
jl
jne
sbb
jno
cli
movs
cmp
add
dec
movs
mov
loopne
in
fidiv
ja
push
imul
push
repnz
jbe
clc
pop
or
xchg
loopne
and
jmp
test
out
int
inc
pop
pop
pop
and
pop
adc
adc
xor
pop
or
pop
cmc
mov
rol
(bad)
mov
mov
rcl
test
mov
repnz
jecxz
ret
sbb
and
jno
mov
stos
cmp
movs
push
push
outs
pop
inc
test
or
mov
mov
xor
(bad)
in
sub
jnp
gs
pop
cli
gs
push
dec
cmp
xor
ins
or
in
xchg
mov
jmp
push
mov
pop
icebp
ja
mov
push
xchg
mov
pop
scas
stos
(bad)
pop
sbb
lock
add
rcl
enter
popa
out
jns
cmps
aaa
ss
fnclex
pop
ins
(bad)
mov
pusha
not
sbb
shr
sub
int
xchg
cmp
add
cs
cdq
push
sti
dec
movs
cmp
stos
and
pop
adc
xchg
out
inc
stos
in
(bad)
(bad)
mov
or
out
jg
xlat
rcr
mov
out
pop
mov
mov
sti
mov
jns
out
adc
rol
call
inc
stos
push
push
jge
cmp
jmp
shr
mov
int
sbb
(bad)
sbb
sub
and
inc
iret
stc
dec
adc
adc
lds
inc
adc
and
out
cld
lahf
adc
mov
in
inc
inc
scas
mov
or
sahf
mov
and
test
xchg
dec
neg
jb
fsubr
test
push
mov
dec
in
jmp
xchg
ja
aaa
adc
imul
mov
dec
scas
stos
lods
xchg
adc
cmp
mov
ss
das
dec
int3
mov
shl
mov
dec
aaa
ficomp
(bad)
bnd
(bad)
mov
sbb
mov
mov
call
and
add
cmp
sbb
or
or
push
jmp
data16
les
xor
pusha
or
push
std
imul
call
(bad)
fld
repnz
addr16
ins
popf
jo
mov
xchg
sbb
add
ins
outs
and
mov
xor
movs
pusha
(bad)
sahf
mov
pop
sbb
sub
xor
inc
jb
xchg
and
adc
xchg
fnstenv
dec
xor
push
data16
sbb
xchg
jp
and
push
sub
int3
std
cmp
add
mov
mov
fwait
inc
popf
push
or
and
xchg
mov
aam
adc
ds
and
or
in
and
adc
inc
push
xor
(bad)
shr
(bad)
pop
and
imul
mov
push
pop
loope
lods
sbb
mov
add
mov
int
mov
adc
xor
jmp
inc
into
sbb
sub
not
sub
ds
mov
mov
data16
sub
cmp
out
jmp
lock
cmp
in
or
cmp
jecxz
jl
push
dec
hlt
mov
and
scas
jmp
and
push
stos
fld
mov
test
inc
mov
mov
mov
mov
leave
and
jecxz
jl
mov
adc
inc
stos
push
loopne
inc
popf
push
stos
adc
cmp
pop
sub
loop
and
jnp
fs
nop
loope
and
push
shr
mov
xchg
loop
ins
imul
sti
daa
mov
ficomp
mov
cmp
inc
lods
mov
(bad)
imul
ret
lahf
ja
mov
jg
(bad)
ret
and
int3
or
adc
addr16
dec
mov
cmp
clc
ins
mov
and
push
lods
sar
and
xor
lds
adc
add
jmp
jmp
xor
and
test
aaa
mov
test
pop
adc
sub
mul
jg
mov
adc
cmp
(bad)
mov
dec
and
pop
call
nop
loopne
pop
sar
and
ja
adc
clc
data16
jnp
loope
mov
movs
add
dec
push
pusha
repnz
and
push
xchg
dec
dec
xor
xchg
adc
inc
int3
pop
pop
adc
sbb
loope
push
loop
out
(bad)
in
adc
hlt
(bad)
push
rcl
xor
es
aaa
inc
or
scas
sbb
leave
inc
dec
int
js
or
fdiv
icebp
in
cmp
mov
sti
ins
cdq
xchg
xchg
push
pop
sub
mov
nop
dec
xor
mov
lods
add
outs
xchg
outs
ret
xchg
lods
push
ror
sbb
adc
xlat
jle
cmc
or
jns
xchg
push
xor
ret
xor
mov
(bad)
mov
push
sbb
add
cmc
in
outs
mov
sub
jmp
icebp
loop
pop
std
pop
cwde
aaa
fidivr
mov
(bad)
sahf
pop
ja
jae
outs
sahf
add
jle
repz
jecxz
les
xchg
push
ds
mov
mov
hlt
ds
push
jns
call
(bad)
(bad)
sbb
outs
ins
inc
imul
stos
add
xor
or
out
mov
xor
adc
scas
loope
loop
xchg
dec
js
push
dec
mov
ffree
ret
clc
dec
or
pop
pushf
mov
xlat
nop
adc
pop
jns
jmp
rol
out
test
aam
push
jb
fwait
loopne
stos
xchg
sbb
inc
fstp
scas
sub
cmp
lods
dec
mov
das
dec
test
mov
fs
add
sbb
inc
add
xor
sbb
(bad)
pop
xor
mov
and
inc
stos
lea
fcom
inc
mov
jl
packsswb
mov
mov
retf
std
push
loopne
outs
add
stc
ficomp
ss
add
inc
sbb
pop
xchg
cmp
es
jnp
mov
sbb
in
fs
add
repnz
fwait
mov
pop
repnz
popf
les
cs
mov
mov
push
xchg
pushw
mov
cwde
pop
retf
imul
inc
imul
mov
add
sbb
xor
cmp
or
cmps
lods
out
ret
pushf
dec
or
fadd
ds
jb
test
adc
push
sbb
cmc
idiv
pop
aad
jne
popa
and
xor
sub
subps
(bad)
loop
div
iret
fisttp
sahf
push
popa
(bad)
call
cli
arpl
enter
xor
xchg
inc
xchg
ror
popa
int3
pop
adc
(bad)
cdq
cmc
in
inc
and
(bad)
cmps
hlt
xor
jp
je
xchg
les
(bad)
add
or
jmp
and
fisub
sbb
(bad)
aad
pop
pop
jnp
icebp
jne
jmp
aas
push
ret
adc
jecxz
fsub
mov
leave
sbb
mov
inc
clc
mov
inc
and
dec
les
(bad)
rcr
cmp
dec
test
outs
or
mov
call
cmc
sbb
out
push
arpl
jmp
mov
or
dec
or
or
mov
lods
(bad)
sbb
in
cli
push
std
popa
push
out
and
jge
dec
mov
cmp
mov
lods
ss
xchg
xchg
scas
fsubr
rcl
mov
iret
and
cdq
call
js
push
pusha
fsubr
repz
sbb
add
into
stos
add
xchg
arpl
das
ja
ffree
scas
jmp
mov
xchg
data16
nop
les
lahf
xlat
add
xlat
pop
pusha
in
jmp
repz
inc
iret
sub
nop
retf
xchg
mov
adc
sbb
hlt
sub
int3
test
dec
and
mov
fs
dec
rol
hlt
pop
adc
shr
xchg
adc
pop
push
jno
hlt
jmp
std
push
pop
les
add
mov
cmp
pop
call
mov
cmps
retf
xchg
loope
lds
and
xor
aaa
sar
cmps
(bad)
dec
std
lds
in
push
pop
push
adc
xor
repz
outs
adc
shl
cli
xor
adc
cmp
and
rcl
xchg
out
ret
lea
and
and
pop
dec
xor
jnp
or
jno
or
sbb
popf
in
movs
outs
out
or
bound
mov
xchg
xchg
cmps
inc
sbb
push
add
push
add
cdq
mov
jecxz
push
push
retf
ret
repnz
sar
mov
push
sbb
adc
inc
or
(bad)
addr16
cmp
out
(bad)
fucomp
mov
or
pop
fwait
in
sub
out
enter
out
mov
daa
pop
das
dec
test
sub
out
push
pop
movs
adc
mov
outs
jno
push
jg
push
jne
enter
outs
(bad)
sub
mov
pop
fs
fistp
inc
ins
dec
into
jnp
dec
shl
inc
hlt
movs
in
adc
daa
jb
jbe
dec
rcr
test
iret
jle
inc
jg
aam
mov
fisubr
mov
xor
add
dec
stos
je
imul
mov
jp
sbb
cmps
and
sub
call
jne
ret
sbb
mov
mov
mov
enter
add
fwait
jno
frstor
mov
dec
pop
xor
mov
cs
mov
pop
sub
cmps
pop
jo
fcom
sub
mov
xor
pop
icebp
adc
mov
ds
leave
inc
cmp
cmc
sbb
cmp
push
push
or
repz
sub
test
cmp
sub
add
jp
xor
xor
mov
(bad)
mov
lahf
scas
cmp
es
mov
ins
dec
cmp
mov
cmc
js
mov
jns
retf
adc
xor
aam
std
jmp
xor
jmp
jecxz
push
add
cdq
sub
shl
frstor
pop
loopne
sahf
shl
add
inc
jns
in
xor
(bad)
mov
in
sbb
mov
idiv
adc
add
sbb
or
pop
push
dec
add
push
jns
cmp
fwait
push
xchg
mov
or
ficomp
push
mov
xchg
movs
cmps
push
and
jmp
test
sti
adc
jecxz
dec
ins
mov
ret
shl
aam
jb
inc
and
ret
mov
dec
xor
cs
and
fsubr
fmul
cdq
jl
and
inc
ins
add
dec
jmp
ror
or
movs
cmc
ror
adc
mov
and
ds
inc
(bad)
mov
fwait
ins
jp
or
mov
adc
ret
movs
jo
ja
sub
jmp
mov
push
loopne
add
pop
(bad)
jns
shl
fmul
jl
cdq
lds
in
js
add
sbb
ja
(bad)
push
adc
pop
hlt
xchg
cmp
or
pop
xor
jnp
push
int3
jmp
lea
jbe
sbb
mov
in
push
jge
(bad)
xchg
mov
(bad)
pushf
sbb
js
pop
push
push
lds
push
pop
cs
test
gs
inc
ds
cmp
mov
sar
loop
neg
and
jmp
es
shr
(bad)
jecxz
mov
mov
stc
push
(bad)
cmp
sub
outs
mov
xor
cdq
into
push
pop
aaa
nop
sar
jo
arpl
mov
mul
jae
shl
in
sbb
fcmovbe
pop
push
aas
fld
jle
jnp
lea
shl
dec
sbb
xor
sti
aad
cwde
fidivr
bnd
daa
mov
mov
mov
int3
dec
adc
push
jmp
aaa
pop
jg
mov
adc
gs
stos
shr
das
mov
test
(bad)
xlat
mov
dec
jbe
add
or
and
retf
add
jb
push
jo
ror
leave
mov
xor
popa
test
sahf
cmp
jle
push
repz
cmp
jno
leave
push
sbb
mov
mov
xlat
push
xor
out
mov
push
out
mov
mov
xor
mov
inc
jecxz
enter
push
fcmovnbe
repz
bnd
cs
pusha
push
(bad)
fiadd
push
cmps
mov
jmp
mov
iret
pop
mov
cmp
adc
hlt
add
idiv
pop
jnp
test
xor
dec
inc
cmp
xor
pop
mov
es
mov
xor
lods
repnz
pop
mov
cmps
icebp
pop
dec
aad
test
arpl
cs
xor
std
call
sar
jbe
jecxz
jae
in
sub
ss
aas
lods
mov
loop
cs
sbb
jg
lahf
mov
cmc
aad
xchg
hlt
or
iret
(bad)
ss
pop
push
xor
ss
adc
push
into
sti
jecxz
stc
(bad)
xor
mov
push
iret
aaa
and
xor
bound
js
dec
retf
sbb
push
shr
xlat
or
mov
xor
out
jo
in
mov
cmp
inc
push
push
cmps
std
fidivr
xchg
cmp
pop
pop
outs
outs
out
cmps
jo
adc
pushf
xor
push
add
xchg
(bad)
sbb
les
test
retf
push
test
cmc
out
movs
call
jle
stc
in
repnz
je
or
xchg
jns
or
mov
mov
movs
push
popf
inc
or
loopne
mov
loopne
imul
jmp
sbb
inc
not
cmp
inc
jns
imul
push
sbb
jno
sbb
mov
adc
cld
pusha
scas
neg
dec
xlat
ja
leave
xchg
mov
mov
xchg
add
pusha
addr16
add
sub
cmp
pop
out
ds
fsub
inc
ror
retf
push
iret
xchg
jno
mov
push
and
cmp
int3
scas
movs
sub
stc
je
jecxz
xchg
ficom
mov
mov
or
test
loop
mov
(bad)
cmps
add
add
push
out
lock
push
addr16
ss
shl
adc
pop
add
adc
pusha
xor
mov
outs
int3
jne
jp
movs
add
xor
imul
mov
mov
push
stos
inc
xchg
adc
in
test
xor
int3
sbb
lahf
push
dec
cmc
pushf
dec
sub
sbb
add
imul
fidiv
mov
sub
int
jbe
mov
push
loop
leave
adc
sub
leave
xchg
mov
lea
jnp
xchg
dec
clc
ins
ins
cwde
loope
and
cmp
or
hlt
in
loop
jg
test
daa
enter
loopne
add
loop
mov
idiv
nop
test
sub
ffree
inc
enter
xchg
push
ret
stos
mov
mov
in
fwait
adc
sbb
aam
dec
inc
mov
dec
imul
mov
mov
mov
imul
xchg
lahf
fwait
xor
out
or
dec
sub
ret
push
les
adc
imul
pop
pop
sbb
dec
xchg
push
jb
in
ds
pop
ret
fs
fcomp
movs
test
icebp
mov
inc
jp
jns
adc
and
out
in
aam
inc
cmp
cmp
cdq
push
inc
sub
xor
push
fbld
xor
das
jge
movs
test
call
retf
and
add
bound
or
sti
mov
adc
adc
mov
data16
mov
fist
adc
call
lock
push
sub
dec
pop
repnz
lods
jle
xchg
aaa
neg
sub
mov
stos
into
or
adc
stos
jmp
ret
test
xor
jnp
lods
xchg
call
cmp
in
and
adc
and
cmps
cld
movs
xchg
sti
mov
gs
xor
xor
lahf
sti
or
fisttp
mov
jmp
push
test
inc
mov
outs
xor
mov
retf
icebp
and
sbb
ins
push
rcl
pop
repnz
aaa
dec
inc
jbe
xchg
xor
mov
push
mov
mov
out
push
dec
mov
xor
pop
outs
add
inc
jo
cmps
push
ror
pop
lock
fcmove
rol
inc
fnstcw
jmp
mov
sbb
ss
sub
inc
std
ror
js
sub
test
cmps
cmp
push
push
scas
push
mov
push
jbe
and
out
sub
push
push
pop
inc
cld
data16
sbb
in
iret
mov
add
sbb
jae
lea
add
stos
aas
inc
aam
add
mov
aam
mov
pop
int3
adc
mov
jge
sbb
int3
ins
fs
ins
out
imul
(bad)
loopne
jl
pop
xor
ins
sub
jns
jns
jg
daa
gs
stc
imul
test
add
or
adc
mov
and
ins
test
stc
call
js
cs
inc
sub
inc
imul
(bad)
retf
stos
jle
lock
ins
jg
xor
xlat
inc
sahf
out
cmps
icebp
mov
lods
inc
push
sub
(bad)
rcr
mov
jle
jbe
mov
pushf
enter
(bad)
out
or
(bad)
pop
jg
lea
cmp
adc
adc
lahf
repz
or
cmp
push
icebp
pop
jle
(bad)
imul
loop
icebp
out
ins
sar
add
(bad)
sub
icebp
push
out
xor
ins
xchg
xor
mov
das
pushf
and
retf
aas
sbb
push
fidiv
or
sbb
aad
stos
push
mov
dec
xchg
mov
mov
pushf
test
mov
jno
jge
jbe
es
in
xchg
int
or
je
ins
lock
pusha
ret
inc
movs
mul
mov
scas
stos
add
fild
ss
scas
cld
ret
out
pop
stos
mov
xor
sbb
push
mov
or
cld
push
repnz
pop
jb
adc
jbe
lods
jmp
and
cs
dec
sbb
cmp
inc
ins
xor
add
pushf
sti
out
neg
es
test
dec
loope
inc
adc
in
xor
jnp
(bad)
fcmovu
lahf
fnstsw
in
pop
add
std
jne
jl
inc
cs
out
add
icebp
loopne
xlat
push
dec
arpl
outs
mov
test
out
setns
ret
mov
xor
xor
add
test
mov
or
or
shl
iret
adc
js
xchg
(bad)
ds
push
push
call
sbb
mov
mov
stos
xchg
adc
dec
add
jns
or
pop
rcr
rep
or
mov
not
sbb
push
xor
shl
jecxz
data16
jge
gs
(bad)
sub
addr16
push
pop
inc
inc
add
or
mov
pop
enter
jno
mov
movs
sbb
mov
dec
pop
pop
lock
adc
inc
adc
leave
jge
sti
add
mov
and
loopne
add
xchg
cwde
cmp
adc
cs
sub
fs
jae
mov
inc
in
xor
jge
push
out
out
cmp
ja
jne
jle
or
aas
xor
sbb
pop
mov
ret
mov
or
or
cdq
je
loop
mov
push
jle
or
ja
sar
test
int
pop
xchg
cmp
push
int
in
jecxz
xchg
sub
mov
inc
in
ret
cli
push
xchg
xchg
xchg
mov
addr16
fisttp
cmp
mov
pop
js
mov
pop
loopne
pop
movs
(bad)
jl
repz
addr16
xor
pop
mov
jno
addr16
jle
jo
into
xchg
sbb
retf
cmp
jae
rcr
push
fwait
mov
sub
lea
(bad)
jb
imul
xchg
push
mov
inc
sub
cmp
lods
inc
cmp
rol
nop
jmp
sub
es
or
mov
retf
sbb
test
call
mov
call
push
sar
inc
pop
call
test
mov
and
out
bound
ror
loopne
rol
mov
pop
imul
movs
or
sti
sub
mov
sahf
pop
ret
rcl
pop
and
mov
std
es
or
das
pop
rcr
outs
ret
stos
jae
inc
pop
les
pop
je
stos
sub
outs
push
ret
ror
cwde
cmp
pop
js
xor
xor
retf
fsub
sbb
sub
enter
mov
fwait
adc
mov
ret
jecxz
dec
orps
std
fwait
xchg
test
fst
sti
ror
call
dec
pop
mov
test
inc
xchg
xlat
dec
cmc
das
idiv
retf
lock
jnp
sub
pop
dec
mov
cmp
rcr
stc
xchg
push
(bad)
fstp
push
adc
add
fs
and
ret
jno
shl
stc
sti
mov
ja
sub
test
push
in
sub
outs
mov
lods
sar
cmps
xor
stc
or
inc
ds
in
mov
inc
sti
sti
das
jle
rcl
mov
mov
jle
ds
ins
fld
sti
adc
outs
sbb
adc
dec
pop
ds
sbb
add
stc
cld
cmp
mov
lahf
mov
mov
cmps
in
addr16
jge
push
pop
add
sar
shl
pushf
push
and
jge
sar
add
shl
jle
out
outs
movs
pop
imul
xchg
sbb
data16
adc
cmp
push
or
mov
mov
fidiv
fidiv
xchg
aas
test
test
adc
add
add
cmp
xchg
xchg
xor
jbe
enter
sar
mov
cli
jmp
(bad)
mov
cmps
and
dec
mov
xlat
xor
or
add
mov
xor
mov
inc
in
cmp
push
stc
aas
aaa
sub
mov
pusha
xchg
or
or
jl
ror
sbb
fild
outs
pop
in
cmp
fdivr
nop
pop
xlat
push
in
push
inc
add
xor
pop
int3
mov
in
cmps
cmps
pop
fistp
scas
xor
sbb
cmp
mov
aad
jns
daa
ss
pop
inc
jle
test
xchg
and
or
clc
retf
rcl
lahf
dec
mov
pop
addr16
add
add
cmp
mov
into
(bad)
jb
ins
xor
repnz
xor
sub
loopne
xchg
test
adc
test
mov
mov
scas
xchg
jl
mov
jbe
es
sbb
push
sbb
and
stos
jns
mov
shr
movs
xlat
aam
mov
in
loopne
pop
jg
mov
ret
xchg
lock
sbb
push
lods
xchg
xchg
loop
les
retf
sub
xor
mov
adc
or
mov
retf
stos
stc
pop
(bad)
clc
popf
aam
clc
sub
(bad)
nop
pop
sbb
cmp
fidiv
xor
or
sub
or
leave
imul
loop
cmp
daa
jnp
dec
cmp
jnp
icebp
mov
leave
mov
add
pushf
les
loop
mov
shr
jecxz
ret
add
mov
inc
cmp
icebp
je
imul
cdq
mov
xor
fwait
pop
sub
(bad)
jg
sub
enter
jmp
int
jno
js
faddp
lock
jmp
dec
aaa
xchg
test
ins
clc
cmp
jp
cmp
adc
jmp
fcmovnu
pop
xor
test
(bad)
jle
stc
mov
icebp
fs
or
icebp
mov
add
push
movs
cld
call
aad
jecxz
arpl
pop
(bad)
(bad)
mov
dec
cld
cwde
inc
bound
repz
mov
ins
xchg
fwait
inc
sbb
test
scas
push
fld
fsubr
jge
mov
mov
mov
clc
shr
pop
psllw
int
call
cmp
pop
and
imul
loopne
push
das
dec
cmps
mov
inc
addr16
jl
mov
dec
outs
mov
les
stos
sub
xor
xor
jns
or
jnp
out
imul
je
mov
push
in
jnp
mov
pop
mov
imul
xchg
data16
jle
and
or
cmp
into
aas
inc
popa
into
les
aam
nop
pop
test
jae
stos
pop
(bad)
cmp
loop
in
xchg
lea
pop
xor
adc
daa
pop
sub
(bad)
and
leave
sbb
jb
mov
cmp
sbb
jne
mov
pusha
mov
mov
jae
jp
or
sbb
jmp
out
out
ja
not
jle
jo
bound
outs
inc
xor
add
xor
push
dec
mov
adc
inc
aad
fucomi
outs
xlat
xor
mov
and
and
jno
movs
mov
sub
outs
and
enter
lock
jmp
adc
pop
sbb
mov
jns
aad
pop
or
fidivr
add
xchg
movs
jle
push
mov
mov
jmp
xor
stc
jno
mov
pop
test
mov
jb
aam
ds
int
test
cmp
retf
jno
sbb
sti
into
ja
or
mov
jo
ins
outs
nop
out
or
jne
mov
or
push
cmps
mov
add
cli
ror
std
jb
ds
adc
or
js
mov
adc
mov
or
jnp
xchg
xor
aas
add
jmp
adc
xchg
add
add
jmp
and
icebp
shl
push
out
and
mov
aad
jp
pusha
in
jbe
rcr
jle
xor
sub
mov
jne
push
popa
shl
or
rcr
scas
out
rcl
popf
sub
enter
xor
test
dec
cli
aas
pop
jmp
es
cs
xchg
not
retf
xchg
dec
xchg
pop
out
inc
lock
push
jbe
inc
std
jmp
push
repnz
test
sahf
ins
ret
fwait
jne
xchg
cdq
add
jecxz
(bad)
ins
adc
out
adc
in
sub
adc
cmp
mov
mov
ja
jne
mov
xor
imul
jnp
add
adc
push
mov
mov
xor
(bad)
inc
movs
out
ja
xchg
jno
push
sti
pop
out
cmps
in
ins
add
movs
ds
mov
adc
rcr
cwde
xchg
mov
icebp
aam
xor
dec
and
mov
push
mov
in
cmp
arpl
sti
lds
dec
fild
inc
dec
jmp
mov
xchg
sub
jmp
mov
fwait
pusha
cs
stos
std
inc
jecxz
mov
nop
cmp
inc
dec
jle
ficom
push
stos
popa
inc
pushf
or
sbb
mov
mov
pop
out
aaa
popf
cmc
push
fcomp
test
mov
out
and
out
inc
pop
clc
ror
pop
cmp
xor
push
out
(bad)
or
loope
inc
jmp
aaa
lods
movs
cmc
inc
push
push
mov
jne
lock
add
dec
call
mov
mov
sbb
xchg
inc
mov
bound
dec
and
mov
aaa
dec
arpl
jbe
jno
push
shl
adc
aas
(bad)
div
or
cdq
out
stc
mov
ins
jns
mov
inc
adc
test
dec
cdq
xor
jp
add
outs
out
inc
xor
xor
sbb
push
dec
pop
pop
inc
mov
nop
pushf
clc
xchg
ja
or
inc
out
jl
xchg
shl
out
jo
js
xchg
push
dec
iret
out
nop
dec
push
in
xor
mov
pop
rcr
lods
stos
es
sti
cld
jae
push
iret
int3
cmp
mov
leave
inc
fwait
xor
pop
push
push
sbb
xchg
shl
pop
rcr
jns
push
or
add
das
loopne
repnz
mov
movs
ins
and
and
push
into
cli
jae
scas
arpl
sbb
dec
js
xor
mov
leave
es
retf
and
inc
pop
add
mov
cmp
inc
mov
fstp
mov
clc
int
jle
outs
ss
mov
xchg
push
push
jae
push
test
lea
test
fisttp
sub
sti
pushf
xchg
jl
push
cli
push
mov
push
push
sub
scas
push
jmp
push
scas
pop
inc
imul
out
in
add
push
sbb
push
inc
xchg
shl
movs
psraw
sub
mov
cmp
add
repz
xor
jns
mul
scas
fidiv
(bad)
out
daa
ja
test
(bad)
call
and
push
and
cld
in
push
xchg
or
sbb
pop
xchg
or
inc
xchg
mov
lea
sahf
mov
xor
add
(bad)
das
mov
nop
or
enter
cmc
daa
or
jbe
fdiv
lods
sbb
push
inc
dec
ins
mov
stc
ret
pop
push
pop
or
pop
loop
in
dec
out
call
dec
sbb
dec
mov
mov
outs
dec
nop
mov
mov
and
mov
push
shl
mov
push
test
mov
sbb
gs
sub
push
jo
and
add
cmc
lds
mov
inc
xchg
and
dec
fucomp
adc
cmp
cmps
push
adc
cmp
sub
fnstsw
clc
aam
mov
int3
mov
cmp
movs
sbb
push
mov
add
push
imul
dec
jle
pop
sub
jmp
mov
and
mov
cmc
enter
pop
cmp
cmps
les
mov
xchg
and
loopne
cmps
pop
fwait
pslld
mov
arpl
xchg
push
sub
add
cmps
popf
sub
in
jo
imul
pusha
shl
out
arpl
fdiv
fisttp
and
fdivr
retf
call
ins
jns
mov
mov
jecxz
pop
test
push
rol
enter
push
and
iret
into
mov
dec
or
aaa
imul
mov
pop
jmp
loopne
les
sahf
in
pop
xchg
dec
push
dec
(bad)
ins
fsub
cli
mov
popf
push
mov
rcr
(bad)
in
icebp
cwde
jmp
ret
in
int3
repnz
icebp
(bad)
xchg
loope
inc
mov
ja
fst
add
dec
or
xor
add
adc
mov
dec
mov
ins
int
fwait
aam
jle
dec
daa
js
adc
ins
lods
cld
data16
out
iret
bound
cli
out
in
pop
es
mov
sbb
and
push
adc
in
and
shl
push
cmps
mov
loopne
sub
out
xor
aam
ret
lock
pop
jmp
push
fwait
(bad)
idiv
(bad)
or
cwde
mov
sub
xlat
std
sti
aam
push
test
cli
or
jmp
rcl
push
mov
in
dec
cmp
cwde
cmps
dec
imul
fstp
jno
imul
jo
dec
aaa
xchg
xchg
jmp
mov
adc
and
out
inc
adc
inc
jp
sub
aam
scas
idiv
(bad)
in
out
push
inc
jecxz
shr
adc
cmp
cmc
pop
adc
mov
or
ret
mov
cmp
push
xor
mov
outs
mov
(bad)
jl
(bad)
retf
mov
push
ret
out
jno
mov
push
xor
adc
ds
inc
repnz
mov
xchg
cmp
xchg
cmps
push
sar
add
sbb
add
hlt
ret
dec
add
loopne
inc
loop
cmp
adc
mov
pusha
out
ret
cld
push
xchg
fnstcw
lahf
popa
retf
sbb
xchg
fnstcw
sbb
jl
push
idiv
push
lahf
fxch
dec
ds
ror
mov
add
xchg
ret
lds
pop
jae
adc
ret
inc
sbb
pop
shl
fld
bnd
shr
int3
inc
adc
sahf
retf
adc
hlt
add
mov
mov
sub
test
mov
bswap
mov
jmp
and
sbb
test
mov
or
sahf
or
sti
sbb
mov
and
cmp
or
daa
pop
jmp
push
xor
imul
cs
and
jmp
ins
sub
inc
test
mov
push
xor
popf
mov
scas
ja
loope
lods
add
cmps
mov
dec
aad
add
(bad)
xchg
add
sub
push
jg
ja
ficom
mov
cmp
mov
xor
std
adc
push
xor
test
cvtps2pi
sbb
xchg
iret
sub
aas
add
repnz
inc
or
aam
add
mov
les
out
cmps
add
aam
popf
push
in
sbb
mov
pop
icebp
inc
pop
add
cdq
xchg
mov
cmp
ins
js
and
imul
shl
push
xchg
xor
cmp
test
in
jp
mov
cs
mov
cdq
push
xchg
xlat
add
sbb
xor
pop
fidivr
dec
pop
adc
retf
int3
enter
lock
enter
(bad)
into
pmaxsw
call
xchg
dec
(bad)
es
adc
aad
adc
mov
or
out
mov
sub
ret
lods
and
push
adc
shr
sbb
repz
scas
das
cli
clc
sub
mov
or
out
inc
push
jae
xchg
jnp
loope
test
mov
dec
push
lds
sub
nop
inc
fs
add
and
aaa
dec
cli
bound
fld
data16
lahf
pop
popa
gs
stc
mov
mov
mov
add
movmskps
test
pusha
xor
push
mov
pop
xor
dec
enter
pusha
sub
stos
xchg
arpl
adc
scas
sti
inc
loopne
enter
movs
pop
push
ss
jno
shl
imul
xor
dec
ss
mov
mov
mov
fwait
push
es
xor
mov
cld
add
xchg
fisub
cli
pop
add
inc
movs
shl
fsub
(bad)
leave
xchg
xchg
xchg
xlat
push
adc
sbb
not
xlat
js
cmp
mov
int
mov
cmp
clc
mov
xchg
test
rcr
and
leave
dec
xor
pop
sbb
(bad)
ins
data16
pop
sbb
adc
sbb
fprem1
adc
je
xchg
icebp
cmp
ins
cwde
aas
(bad)
fnstsw
sbb
push
movs
fwait
inc
dec
fist
or
das
retf
dec
retf
xor
xbegin
sub
je
in
jbe
sbb
std
mov
(bad)
mov
outs
daa
test
jnp
pop
pop
shr
mov
mov
mov
mov
clc
(bad)
loop
data16
bound
mov
push
add
mov
in
cmps
popf
jmp
push
das
push
adc
xchg
adc
push
sbb
dec
(bad)
lds
movs
jmp
dec
xor
mov
mov
out
jmp
cmp
xchg
int3
push
pop
inc
loop
xchg
outs
enter
outs
js
test
mov
or
daa
in
aam
push
sub
or
ss
clc
fstp
sti
inc
stos
xor
fistp
sbb
frstor
add
cmp
popa
pop
adc
add
dec
(bad)
inc
sub
mov
inc
scas
or
enter
mov
mov
retf
xchg
jb
imul
shl
mov
das
repz
cs
push
retf
cmc
jne
push
xchg
sti
cmp
hlt
into
sbb
mov
jb
pop
xor
push
mov
push
mov
push
add
sbb
dec
(bad)
xchg
fld
test
test
daa
xchg
cmp
jp
mov
pop
ja
fs
outs
xchg
pop
or
mov
mov
pushf
test
fwait
xchg
(bad)
dec
mov
and
sbb
xor
pop
and
popf
jle
dec
sbb
add
mov
lea
or
rcr
dec
sti
dec
cld
imul
xchg
inc
sbb
imul
add
pop
cmp
sbb
cld
movs
popa
sub
pop
addr16
or
inc
mov
loope
int3
xchg
mov
and
cld
(bad)
mov
sub
in
ins
lock
dec
in
mov
or
inc
cmp
xchg
mov
pusha
not
fnstenv
xchg
jl
int
bound
mov
in
jae
mov
mov
shl
inc
sar
cmc
out
add
cli
aas
mov
xchg
or
sbb
scas
sub
sbb
dec
jnp
sub
and
idiv
xchg
inc
sub
sub
xchg
xchg
mov
mov
scas
movs
inc
pop
hlt
add
pop
(bad)
xor
sbb
pop
or
ss
out
enter
repz
pusha
out
sar
idiv
aas
ret
or
mov
adc
loop
push
pop
ds
movs
pop
fld
dec
adc
xchg
(bad)
mov
inc
fdivr
pop
jmp
lds
imul
and
mov
imul
stos
call
ins
adc
rcr
and
aam
daa
mov
pop
mov
add
sub
repz
gs
cmp
leave
sub
pop
scas
imul
sub
sbb
mov
add
mov
and
in
lds
int
cmp
inc
dec
ret
cmp
ja
stos
mov
mov
(bad)
es
jecxz
xor
mov
stc
or
aad
mov
repz
call
adc
movs
adc
mov
movs
sub
mov
sbb
cs
arpl
sub
sbb
jecxz
mov
aad
cs
out
push
push
enter
lea
dec
add
xchg
pop
xchg
mov
hlt
pusha
mov
je
out
(bad)
icebp
sbb
mov
in
idiv
mov
rcl
xor
lods
enter
adc
fimul
enter
fild
leave
fucomi
jnp
adc
aam
mov
xchg
gs
push
and
xor
xchg
or
pusha
stc
cdq
jo
inc
push
lock
mov
sbb
lds
loopne
mov
and
push
fstp
leave
sahf
pop
sar
cwde
out
rcr
xchg
push
cmp
fisubr
jns
inc
popa
push
and
mov
push
sbb
cli
test
mov
or
dec
xchg
dec
sub
xor
xchg
sub
enter
or
jbe
daa
mov
jae
mov
push
dec
ja
pop
jmp
test
nop
ret
call
clc
mov
ss
xchg
dec
lods
call
lods
xchg
sub
jmp
mov
sbb
jg
les
add
cmp
xchg
xor
pop
ret
nop
push
sbb
push
mov
xor
loopne
out
mov
mov
aaa
in
outs
push
and
jo
jo
fidivr
outs
packssdw
or
call
cmp
stc
mov
push
xor
add
jns
test
dec
aas
int3
ret
cli
jb
sbb
cs
(bad)
hlt
mov
add
dec
fdiv
pushw
fadd
inc
popf
pushf
rcl
xor
ja
push
imul
int3
movs
popf
and
dec
lock
jmp
mov
(bad)
gs
adc
mov
stos
or
mov
in
push
inc
stc
push
push
dec
dec
test
cmp
arpl
push
mov
dec
xchg
xor
xor
test
retf
dec
(bad)
sbb
jmp
movs
sbb
test
mov
mov
int3
xchg
add
mov
std
mov
push
jns
lods
xchg
inc
jmp
ins
adc
mov
sbb
loopne
scas
data16
mov
movs
loop
inc
mov
sbb
rcr
scas
imul
adc
mov
mov
mov
loope
into
dec
loope
push
ins
lock
xor
push
and
push
jno
xor
add
pop
neg
jbe
in
ins
cwde
adc
mov
iret
and
ja
mov
ror
and
icebp
add
jg
lods
dec
shl
out
push
jo
sahf
pop
gs
fdivrp
cwde
dec
pop
int
pushf
je
stc
jbe
push
mov
ror
dec
shl
ror
fild
mov
enter
lea
es
dec
jp
enterw
int
(bad)
inc
push
in
push
ss
outs
movs
sub
push
push
sub
dec
cmp
pushf
pushf
je
dec
sar
add
mov
je
sub
mov
je
and
jo
cmp
push
popa
xchg
jge
inc
fcmove
fadd
or
shl
inc
(bad)
outs
(bad)
sub
sar
out
shl
(bad)
dec
cmp
cdq
dec
lea
cmp
fisttp
mov
nop
inc
xor
jnp
mov
loopne
add
inc
iret
push
jg
push
out
fs
fucomp
sbb
jle
sbb
add
cli
mov
adc
ins
mov
mov
add
mov
and
mov
loope
hlt
dec
ret
ins
push
retf
lahf
sti
mov
(bad)
idiv
dec
and
adc
xchg
test
lock
stc
pop
mov
in
jmp
inc
(bad)
ficom
stc
sbb
into
sysret
jo
aaa
add
xchg
cdq
xchg
adc
dec
and
or
movs
push
shl
add
mov
lods
div
rcr
sub
sti
sub
es
shl
je
fdiv
es
hlt
rcl
ds
bndldx
or
test
xlat
loop
scas
xchg
sub
pop
aaa
push
and
(bad)
cld
fs
dec
sbb
or
mov
adc
scas
jmp
inc
out
wbinvd
mov
inc
jmp
add
sbb
ficomp
cld
cmp
mov
cmp
pop
cmp
and
xchg
mov
mov
pop
inc
sbb
call
(bad)
jmp
pop
and
mov
jns
push
call
imul
test
ds
shl
fsubp
ja
out
inc
push
mov
add
mov
inc
sahf
cmc
shr
aaa
and
add
scas
mov
or
aaa
mov
jmp
test
jmp
mov
dec
lds
add
iret
pop
ss
adc
jp
jns
and
hlt
jno
iret
faddp
mov
push
fwait
aas
mov
es
sahf
lds
push
mov
pop
and
(bad)
ficom
sbb
pop
popf
das
mov
sub
mov
dec
enter
lea
add
loope
(bad)
push
or
fcom
add
in
jmp
xchg
leave
push
rcl
mov
(bad)
(bad)
and
lahf
shl
cmovo
mov
push
and
xchg
add
xchg
arpl
cdq
adc
inc
mov
adc
cmps
nop
outs
xchg
popa
adc
(bad)
jmp
pop
push
sbb
push
jno
cmp
inc
hlt
and
cmp
cmp
enter
hlt
sbb
stos
fstp
fimul
(bad)
sti
jae
ror
leave
aas
nop
cmp
scas
stc
push
and
cmc
fwait
push
xor
stc
maskmovq
test
fiadd
or
jb
out
test
lock
jo
lock
adc
hlt
push
call
xor
fwait
jmp
daa
inc
adc
fldcw
add
outs
push
sub
jb
test
scas
sti
ror
sub
xor
push
fmul
ret
cmp
mov
ss
rol
sub
out
cli
shl
in
mov
jae
sahf
adc
push
shl
les
dec
and
xor
jecxz
jle
push
mov
jns
test
lea
fs
sahf
outs
loopne
inc
mov
fidiv
mov
xchg
or
add
cmp
or
cmps
mov
int3
outs
push
out
stc
mov
sbb
pushf
mov
adc
or
nop
mov
int
outs
mov
pop
push
cmp
repnz
dec
cwde
call
adc
sub
sbb
arpl
push
and
iret
sbb
lds
jmp
sub
les
cmp
je
pop
cs
pop
(bad)
jmp
ins
(bad)
imul
dec
packssdw
xchg
cmp
fistp
jmp
in
js
jl
in
out
data16
jns
ret
mov
ins
dec
push
inc
(bad)
je
fidivr
and
out
sub
xchg
repz
add
imul
xlat
imul
(bad)
daa
es
and
fnsave
and
cmp
(bad)
dec
mov
pop
daa
add
inc
mov
jne
push
inc
ins
mov
pop
jecxz
int3
adc
out
(bad)
xor
mov
imul
test
adc
mov
test
mov
cs
fisttp
mov
mov
mov
jnp
pop
jno
jecxz
rol
shl
in
call
cmp
pop
nop
retf
jae
mov
in
addr16
daa
ror
call
cdq
fstp
add
aas
aaa
or
adc
mov
(bad)
lock
jb
fadd
arpl
adc
call
out
int3
into
push
adc
das
cli
jmp
pop
lods
test
retf
outs
das
mov
and
pusha
jl
scas
cs
sub
mov
ds
jb
xor
jns
retf
loopne
pop
sbb
rcr
retf
adc
pop
inc
adc
test
push
and
mov
mov
dec
adc
jmp
fnstsw
lods
sbb
and
ret
jbe
inc
adc
movntq
adc
and
neg
push
adc
sub
rol
lods
jmp
mov
mov
push
dec
jmp
jnp
mov
outs
pushf
jne
fdivp
leave
inc
cdq
mov
jmp
xor
push
lahf
enter
ins
sub
cmc
jmp
mov
out
sub
stc
(bad)
outs
imul
icebp
and
cmp
shl
ss
mov
xchg
cmc
push
enter
jo
dec
retf
fadd
mov
ficomp
adc
add
lock
mov
jle
popa
int3
ds
pop
in
cmp
ins
pop
mov
icebp
pop
out
fidiv
adc
push
adc
aad
enter
cmp
sub
xor
movs
movups
dec
call
pop
ins
mov
mov
iret
push
jae
sub
xchg
bound
fistp
mov
or
mov
push
into
xor
and
pop
cmp
call
nop
push
mov
outs
jg
xor
lock
cmp
push
mov
movs
fcomp
mov
pusha
fist
lods
and
cwde
in
outs
mov
popa
cwde
std
cs
mov
jns
push
lahf
mov
cmps
das
add
aaa
sbb
inc
or
(bad)
icebp
data16
mov
push
leave
dec
jecxz
arpl
xchg
or
or
das
call
repz
ja
lds
aam
sbb
out
pop
ins
jo
fdiv
sbb
leave
sub
and
xchg
mov
cmp
push
stc
xor
add
loopne
mov
inc
in
retf
add
push
stc
and
leave
scas
xlat
popa
mov
pushf
dec
lods
add
fistp
xor
lds
sbb
icebp
rcl
dec
lods
cmp
pop
fdivr
inc
pop
inc
pop
in
push
adc
aas
out
fld
popf
xlat
dec
jecxz
data16
out
xchg
cli
pop
lods
pop
test
arpl
sub
(bad)
mov
cdq
mov
stos
jnp
repnz
xchg
push
and
das
pop
ss
push
push
pop
pop
and
or
dec
les
jnp
sbb
xchg
cdq
cmp
(bad)
mov
(bad)
sbb
int
push
inc
sbb
xchg
fs
mov
cmp
imul
dec
ror
pop
outs
cmc
ret
in
nop
outs
aas
mov
push
mov
xor
repnz
push
xchg
pop
pop
sbb
fidiv
int3
xor
repz
dec
jecxz
imul
xor
pop
xor
xchg
retf
push
pop
inc
xlat
outs
pop
mov
push
popf
mov
je
push
(bad)
es
jg
std
ins
mov
pop
sbb
push
(bad)
xchg
cld
push
(bad)
into
sbb
jbe
fadd
sbb
sub
rcl
jl
push
call
xor
je
xchg
mov
inc
loope
rcr
sub
xchg
pop
pop
add
daa
cdq
test
call
or
inc
cmp
dec
nop
push
mov
cmps
out
sub
popa
aam
cmp
jbe
jo
fidivr
dec
in
lods
sahf
dec
shl
or
out
out
push
jnp
push
cmps
mov
icebp
sub
ins
rcl
(bad)
and
pop
mov
push
imul
test
mov
and
push
mov
(bad)
in
cmp
pop
cli
pop
dec
rcr
pop
je
nop
or
test
hlt
adc
push
imul
sub
loope
mov
mov
loope
stc
jge
clc
sub
mov
cs
inc
dec
lea
ins
mov
imul
mov
leave
cmp
xor
cwde
xchg
retf
call
loop
cmp
mov
adc
test
mov
inc
outs
in
popa
mov
pop
pop
push
cmp
and
enter
mov
lahf
pop
mov
mov
push
mov
push
lea
push
popf
or
into
pop
clc
mov
ficomp
loopne
leave
mov
in
push
div
fdiv
imul
mov
scas
rcr
cwde
rcr
dec
stc
outs
jo
scas
mov
sub
(bad)
xor
or
scas
cmp
dec
add
sti
dec
lods
pop
sub
call
adc
xchg
jle
xor
xchg
movs
rol
test
mov
ffree
pop
cld
jno
add
mov
push
test
sbb
aas
xor
sahf
inc
add
pushf
test
push
out
jb
push
pop
or
in
je
arpl
mov
sub
lds
enter
sub
(bad)
xchg
mov
and
adc
movs
lods
mov
into
jmp
jecxz
(bad)
sub
outs
jno
aaa
test
addr16
pop
cmp
(bad)
mov
pop
mov
and
and
pop
mov
inc
icebp
and
out
mov
(bad)
jno
in
or
jl
push
dec
enter
aam
xchg
mov
jb
or
and
adc
in
mov
je
mov
xchg
pop
jb
inc
sub
inc
movs
xchg
jo
call
mov
sub
or
das
js
pop
jno
test
imul
pop
cmp
iret
add
dec
in
popa
cli
add
jo
cli
jmp
daa
aaa
addr16
jle
mov
xor
adc
ss
inc
(bad)
ss
add
mov
adc
push
add
inc
inc
add
or
xchg
cmc
add
fxsave
push
add
push
mov
dec
shl
lock
arpl
push
push
lds
and
stos
jne
mov
ss
test
dec
ret
loope
fistp
ret
inc
jnp
adc
or
ja
mov
mov
lock
rcr
fild
repz
test
movs
sbb
adc
cmp
mov
mov
push
test
push
mov
dec
mov
pop
les
cmp
cmp
pop
xor
pop
push
js
and
inc
(bad)
aam
xor
ins
in
(bad)
push
das
xor
xchg
adc
cmp
pop
add
pop
rcl
icebp
and
fdivr
call
mov
cmps
and
jmp
scas
inc
icebp
jns
les
ror
mov
repz
icebp
mov
inc
xor
cwde
cs
inc
xor
xchg
dec
cmp
test
outs
les
ds
mov
pop
std
pusha
fisubr
movs
call
(bad)
sbb
inc
xor
adc
push
dec
jmp
int
adc
sub
adc
mov
mov
push
fisub
mov
rol
and
icebp
dec
mov
movs
xchg
sbb
scas
popa
int
mov
mov
inc
mov
test
jmp
mov
mov
lahf
fwait
sub
xor
ror
mov
jo
mov
mov
loop
push
mov
cmp
scas
add
repz
push
fiadd
and
fstp
jbe
lods
adc
cmp
retf
jmp
mov
adc
ja
mov
ret
cmc
lds
mov
ror
fwait
jmp
sub
jp
fadd
gs
(bad)
fcmovu
or
mov
in
icebp
or
mov
xor
pop
fsubr
(bad)
push
addr16
and
call
movs
les
fs
push
in
scas
or
cmp
push
add
xchg
mov
mov
test
addr16
push
and
in
pop
and
xchg
jp
sub
ud2
and
(bad)
jmp
cmp
xchg
jecxz
push
jmp
mov
je
sbb
fisttp
jmp
jmp
sahf
and
pop
int3
xor
or
sub
push
stc
ja
aaa
cmp
mov
cmp
stos
adc
(bad)
cdq
call
(bad)
xchg
pushf
addr16
xor
fisub
mov
(bad)
ret
mov
daa
pushf
call
aad
add
cmp
adc
mov
push
mov
lods
iret
xor
fdivr
and
rcl
cmp
add
mov
jo
add
aas
and
or
sub
fcomi
jne
outs
mov
jns
ja
pop
mov
mov
xor
inc
xchg
out
imul
push
mov
pop
aas
fwait
jae
pop
add
movs
and
ret
cmc
lock
or
ds
ss
sub
dec
shl
in
gs
cmc
mov
inc
jp
stos
idiv
add
ins
dec
sub
mov
jl
and
stos
xor
jmp
push
fadd
or
lea
jae
les
jmp
(bad)
fist
gs
loopne
sbb
mov
mov
adc
dec
pop
loope
lock
retf
std
outs
fndisi(8087
jb
dec
add
mov
jns
rcl
cmc
loopne
mov
shl
xchg
rcr
jge
mul
xchg
fstp
repz
sub
inc
(bad)
cmps
test
js
inc
or
fld
bound
cmc
aas
ror
mov
dec
(bad)
add
mov
cs
and
or
mov
pop
pop
mov
cmp
stos
sub
push
daa
aam
(bad)
sub
inc
imul
mov
xor
test
ret
imul
loope
mov
fucomip
sbb
xchg
mov
and
in
sub
movs
or
stos
mov
paddusb
mov
xor
mov
jmp
rcl
pop
ins
pop
mov
outs
adc
mov
jne
jbe
xchg
pop
inc
or
call
push
inc
push
imul
test
xchg
fisttp
push
mov
and
jecxz
jmp
(bad)
xor
lahf
lods
sahf
ja
je
xchg
sub
sbb
mov
xchg
ret
mov
stos
jne
and
and
jns
jns
cmp
or
js
inc
mov
add
sub
push
push
sub
mov
xchg
lea
push
ret
cmp
movs
out
outs
inc
outs
mov
add
or
sbb
outs
rol
push
push
jmp
xor
pop
or
repz
(bad)
jp
xchg
pop
(bad)
repnz
inc
sti
outs
je
js
nop
(bad)
jno
pop
test
push
sbb
cmps
jle
int3
sub
cli
loopne
lds
mov
jae
das
sahf
fidivr
push
dec
lock
xchg
add
push
xchg
xor
call
movntq
out
ins
pusha
ds
imul
ss
xor
and
fwait
addr16
rcr
and
add
test
aad
sbb
push
movs
push
shr
jns
inc
pop
pop
jne
push
mov
in
stos
sbb
iret
sub
push
(bad)
cmp
out
test
adc
and
scas
xlat
(bad)
jecxz
adc
sbb
xor
cmp
push
mov
dec
stos
lahf
sbb
fisttp
jns
adc
pop
lock
in
hlt
loop
pop
sbb
jns
xchg
inc
(bad)
cli
sub
mov
cmp
lfs
aaa
aas
cmp
nop
arpl
cmp
mov
xor
sahf
pop
mov
push
and
sbb
retf
and
scas
shl
xchg
cmp
mov
stc
push
cmp
mov
icebp
push
inc
jne
out
jno
in
mov
and
retf
dec
mul
and
sbb
jg
pop
sub
loopne
(bad)
outs
movs
pop
xchg
push
mov
fs
icebp
add
neg
fwait
not
mov
aas
push
xor
mov
cmps
fcmovnb
mov
xchg
adc
xchg
sub
push
addr16
jb
icebp
inc
sar
sub
add
add
repnz
leave
jb
cmp
sbb
pusha
aad
rol
push
ror
stos
mov
ss
jle
push
int
seta
add
mov
xchg
fs
jnp
pop
adc
xor
adc
push
out
mov
ja
jge
mov
outs
adc
call
adc
not
inc
mov
jmp
(bad)
mov
inc
test
jbe
sahf
call
cwde
xchg
xchg
sub
adc
(bad)
push
cmp
xchg
ds
mov
mov
and
fisub
daa
jno
call
push
gs
aad
lock
arpl
dec
xor
cmp
pushf
ss
loope
test
sub
sti
outs
cdq
sub
js
add
sbb
jb
shl
inc
pop
outs
mov
aad
(bad)
push
hlt
imul
mov
mov
sub
(bad)
rol
invlpg
sub
out
and
neg
and
movs
or
cmps
sbb
sub
mov
shr
(bad)
rcr
jmp
push
cmp
jle
shr
sahf
inc
fwait
sbb
in
xor
inc
js
dec
pop
cdq
jno
cmp
repnz
xor
cwde
pushf
inc
jmp
push
test
xor
(bad)
shl
mov
xor
cmp
push
inc
xchg
aad
or
mov
sub
pop
dec
shr
icebp
test
xchg
ins
bound
adc
(bad)
ins
ins
xor
push
out
ins
movs
(bad)
shr
jne
test
in
in
jp
xor
xchg
adc
fidivr
fwait
nop
int3
cmc
push
cmps
test
sbb
mov
ins
test
out
test
sbb
scas
fcmovu
push
ss
mov
adc
push
nop
push
add
and
add
xlat
adc
sar
icebp
lods
dec
rol
mov
or
push
pop
aam
and
dec
pop
loope
adc
cdq
pop
hlt
cmp
sahf
cmps
daa
cmc
xor
xchg
loop
sbb
cmp
mov
push
ja
int3
dec
mov
mov
push
nop
test
mov
mov
sbb
adc
mov
into
and
push
shl
sbb
jecxz
dec
outs
sub
sbb
xor
add
adc
inc
outs
or
inc
mov
repnz
cmp
dec
dec
inc
ja
loope
mov
in
les
mov
lock
pop
adc
data16
(bad)
pop
(bad)
in
call
out
fdivr
xchg
or
std
push
imul
ja
push
aaa
and
cld
movs
pop
cmp
ret
push
sub
xchg
push
add
cmp
jge
xchg
add
add
pop
mov
cld
mov
and
popa
mov
cli
ins
jmp
arpl
mov
xchg
pop
cmp
xchg
mov
rcl
repz
jle
data16
retf
xchg
hlt
repz
into
jo
fs
push
not
shr
add
xchg
nop
aad
mov
mov
and
bound
ret
cdq
ds
cmps
and
mov
xor
and
cld
fwait
loop
and
test
retf
pusha
jo
push
test
sub
and
jno
stos
and
cmp
ins
cmc
das
add
fstp
cmp
imul
mov
loop
cli
movs
gs
ds
adc
adc
bound
aas
xchg
dec
mov
push
inc
inc
shl
fdiv
xor
and
mov
retf
and
push
hlt
shr
shl
jns
(bad)
jne
in
arpl
in
(bad)
add
sahf
lahf
mov
les
fidiv
mov
adc
xor
mov
hlt
sub
and
mov
jmp
and
adc
cmp
xor
(bad)
jge
mov
or
push
sar
stos
out
movs
lock
and
out
push
test
jno
jg
dec
and
repnz
ins
pop
pop
(bad)
(bad)
addr16
mov
jne
pop
das
gs
and
icebp
aaa
rol
add
and
push
sahf
mov
or
xchg
clc
and
imul
sub
or
je
mov
(bad)
int3
shl
daa
pop
test
lods
pop
push
stc
clc
push
imul
sub
and
bound
leave
mov
(bad)
sti
mov
xlat
call
inc
jnp
add
and
fcom
pop
add
dec
cli
and
je
mov
pop
(bad)
mov
out
pusha
adc
fwait
mov
xlat
ret
adc
mov
int3
adc
loopne
hlt
cld
inc
cmps
push
pop
test
adc
pop
pop
into
sti
cs
cmp
pop
in
stos
not
out
int
pop
(bad)
mov
mov
sub
pop
sub
mov
inc
nop
add
bound
fwait
push
jmp
mov
adc
and
jne
add
sahf
push
sub
inc
ret
cmp
out
out
bound
not
clc
sub
les
sti
push
cli
ffreep
add
jmp
sbb
lods
add
pusha
ss
xchg
addr16
mov
aam
jp
add
xchg
mov
inc
and
mov
lahf
push
movs
and
mov
dec
adc
out
xchg
pop
push
shl
(bad)
push
loop
rol
jnp
pop
fistp
inc
mov
sub
mov
mov
sub
pop
mov
pop
clc
mov
(bad)
xchg
mov
jmp
clc
fidivr
mov
pop
mov
push
aaa
dec
sub
shl
sub
lock
or
xor
stos
int3
sub
mov
outs
adc
fstp
or
pushf
test
bound
int3
jne
leave
pop
ret
pop
and
pop
jecxz
shl
lea
in
xor
jnp
xchg
cmp
xchg
pop
push
ja
lock
push
popa
mov
fcmovnbe
mov
mov
popa
mov
adc
das
dec
or
mov
jo
movs
shl
fidiv
add
push
mov
or
xchg
add
ret
xor
mov
scas
clc
add
call
test
mov
pop
xor
es
push
int3
mov
sbb
jne
das
fistp
pusha
test
ins
xchg
mov
lahf
cmp
sub
push
lea
sbb
push
cli
(bad)
cmps
std
popf
inc
dec
jno
popa
sub
shl
add
imul
push
lods
movs
add
(bad)
pop
or
pop
inc
cmp
cmovne
stos
add
sbb
stos
out
jmp
dec
or
aas
imul
sar
cmp
in
retf
jbe
movs
xchg
inc
mov
adc
icebp
pop
push
mov
int3
or
add
mov
pop
fdiv
nop
aad
push
add
push
dec
sub
or
retf
rcr
and
bound
jmp
sub
outs
fisttp
mov
mov
mov
sbb
jae
xchg
pop
mov
mov
cmp
pop
mov
stos
inc
ins
add
ret
mov
mov
add
movs
ror
pop
outs
lahf
push
pop
sub
call
pop
sbb
(bad)
push
sub
adc
mov
jbe
cmp
repnz
sbb
xlat
sub
and
(bad)
retf
ins
jo
pop
mov
in
fnstenv
dec
mov
and
mov
movs
shl
cmp
bnd
and
cwde
jp
lea
aas
call
imul
cmp
fsubr
xor
push
add
dec
add
ins
push
xchg
pop
inc
push
jmp
fs
fdiv
or
fldcw
lods
sbb
cmp
mov
ds
mov
adc
fsub
loopne
push
inc
popf
xchg
sub
mov
pop
dec
sbb
mov
jae
xchg
fld
(bad)
pop
jae
fldenvw
pop
and
xchg
lds
imul
xchg
int
cmp
add
mov
and
(bad)
cdq
cs
sub
sub
fld
outs
mov
js
push
mov
xchg
ins
push
add
mul
fistp
sub
or
and
fist
jbe
outs
in
push
gs
or
mov
dec
test
xor
retf
add
and
enter
push
push
sub
inc
or
nop
cmp
mov
repz
std
retf
adc
and
xchg
xchg
adc
sti
or
inc
pop
adc
mov
or
or
pop
nop
test
cmp
fwait
cmc
sub
scas
in
fcom
inc
and
xchg
mov
inc
out
and
sub
or
data16
(bad)
(bad)
and
lods
mov
shr
cli
push
lods
jns
aad
sbb
push
jle
shl
pop
sub
int3
sub
cmps
lea
loop
pop
int
cdq
dec
ficom
xor
dec
fs
xchg
fs
sub
push
xor
scas
and
inc
popa
pop
and
cdq
shl
fstp
jb
sbb
push
repz
stc
(bad)
std
inc
mov
sub
mov
call
mov
je
fadd
mov
sub
(bad)
cmp
sar
adc
sar
sub
inc
cli
or
mov
int3
inc
sbb
xor
mov
adc
xchg
jae
xchg
or
js
shr
out
(bad)
jne
nop
pop
mov
jg
mov
cmp
sbb
inc
arpl
fwait
sbb
repz
push
fld
push
ret
shr
out
xchg
or
xchg
inc
or
cmp
mov
pusha
push
jne
mov
mov
shl
retf
dec
mov
push
and
sbb
xlat
dec
add
jmp
gs
cmp
aas
and
sbb
pop
add
shl
mov
adc
lahf
push
aam
or
fadd
add
jo
es
les
int3
mov
sbb
test
jge
dec
push
push
in
fist
xchg
push
stc
fisttp
test
mov
and
cmps
nop
xchg
daa
das
jo
sub
rcl
shl
(bad)
ins
adc
sbb
mov
stos
mov
mov
pop
arpl
pusha
xor
daa
and
cmp
cwde
and
or
dec
ror
mov
cmp
data16
(bad)
mov
scas
dec
loop
mov
pop
das
xchg
call
sbb
in
mov
ins
div
push
jecxz
sar
sbb
clc
test
sub
sbb
scas
mov
sbb
jecxz
std
inc
adc
(bad)
js
cld
outs
or
mov
jl
mov
inc
mov
push
loopne
les
xor
(bad)
aam
leave
xor
xchg
xor
push
cmc
cmps
sub
or
outs
and
mov
inc
fild
shl
mov
jl
add
arpl
fwait
cmps
enter
aad
add
movs
fbstp
xlat
into
and
cli
arpl
mov
outs
mov
ds
ins
mov
add
sub
mov
rcr
inc
add
lods
inc
std
dec
push
push
aas
mov
sbb
out
mov
dec
jp
int
lock
out
pop
test
int
mov
adc
fisubr
mov
xchg
cmp
imul
sbb
test
aam
clc
fs
cmp
outs
sbb
pop
and
adc
cmps
cmp
aas
mov
push
adc
pop
and
call
or
shr
hlt
push
hlt
nop
add
xchg
cmp
cmp
xchg
sub
out
jae
mov
ja
mov
loop
sbb
cmc
xchg
fadd
movs
pop
loop
mov
cmp
pop
mov
xor
cmp
loop
cmp
sub
js
mov
jb
jne
jge
imul
es
out
xor
lahf
in
out
aaa
out
imul
mov
cmp
push
jae
test
sbb
push
jmp
jno
fistp
xor
sahf
xchg
xchg
cwde
add
not
mov
dec
cmp
aad
dec
add
scas
or
sub
xor
sub
xchg
xor
push
jg
popf
mov
popf
out
inc
(bad)
jmp
add
fst
jb
add
pop
(bad)
sub
mov
add
sbb
data16
lds
add
mov
movs
adc
push
adc
xor
mov
cmp
enter
adc
sbb
jnp
push
mov
mov
sub
lods
or
daa
dec
push
fwait
and
(bad)
lahf
nop
in
jmp
jge
jecxz
mov
cmp
(bad)
rcr
add
leave
sub
daa
rol
cmp
push
sahf
int3
sub
mov
jae
loopne
rcr
adc
push
adc
ret
mov
cmc
jp
leave
movs
sub
(bad)
cld
or
mov
mov
into
jae
stc
sbb
sub
sub
jno
pop
cmps
mov
pop
fdivr
adc
inc
mov
mov
inc
sbb
xor
repnz
(bad)
or
push
mov
adc
in
addr16
mov
add
inc
(bad)
out
pusha
sub
bound
dec
out
clc
ds
dec
(bad)
pop
pusha
in
test
fs
stos
pop
sbb
xchg
rol
mov
test
mov
loope
aas
jmp
and
or
sbb
lea
sub
mov
outs
xor
stos
mul
cmc
mov
pop
mov
test
mov
pop
add
outs
ret
test
arpl
cs
int
test
loope
cmp
xchg
push
xor
push
imul
fld
xchg
std
push
push
pop
call
push
xchg
lahf
pop
cmp
xor
clc
inc
sahf
mov
sub
popf
rcr
mov
sub
data16
(bad)
xchg
cmps
enter
add
lea
fs
or
daa
or
pop
pop
or
dec
or
pushf
stos
and
scas
add
fidiv
add
fbld
cdq
shl
ins
dec
fimul
push
mov
jl
push
inc
jg
cmp
add
inc
adc
adc
cwde
jbe
xor
or
lahf
out
call
outs
inc
imul
les
mov
lea
xchg
imul
mov
mov
mov
mov
popa
mov
pop
pop
ss
adc
jmp
dec
mov
mov
mov
pop
xchg
dec
pop
jae
ror
jno
nop
shl
pop
imul
cmp
jne
xor
sbb
psubb
add
xor
pop
daa
push
mov
ins
enter
jmp
js
adc
cmp
add
cmp
int3
shl
mov
xor
mov
fcomp
lods
add
push
fidiv
int
es
adc
cmp
cwde
sub
jge
shl
add
jmp
stc
dec
pushf
mov
cmp
inc
inc
sahf
mov
and
jno
cmp
adc
imul
mov
nop
jmp
xlat
add
jbe
mov
imul
mov
call
push
sub
mov
(bad)
loope
(bad)
bound
jl
mov
test
xchg
lods
test
adc
mov
lds
test
lea
jg
add
or
movs
loope
pop
and
cdq
cmp
mov
(bad)
fwait
cli
pop
sub
jge
ret
mov
inc
repnz
stos
les
js
rol
or
pushf
push
fsin
jl
addr16
sbb
sbb
shl
leave
mov
sbb
out
gs
push
ins
push
xchg
mov
pop
jmp
inc
aas
adc
mul
bnd
dec
arpl
sbb
inc
pop
add
jnp
push
dec
stos
shl
xor
adc
repz
inc
lds
mov
jl
push
cmp
or
jmp
mov
ficom
imul
sar
div
rcr
or
leave
inc
mul
push
enter
pop
inc
shl
or
adc
inc
or
ds
adc
imul
jp
jne
xchg
and
into
rol
mov
(bad)
das
movs
aas
sub
mov
mov
xor
jb
sub
pushf
pop
or
add
sbb
imul
int3
pop
sbb
xchg
out
sub
ficomp
push
cwde
pop
push
call
out
aaa
test
cmps
pop
pop
sbb
xchg
jp
test
test
add
pusha
in
sahf
mov
inc
cmps
xor
cmp
ret
clc
push
(bad)
aam
lods
int
xor
dec
add
push
inc
daa
xor
test
mov
adc
mov
lds
inc
cmp
cdq
out
dec
dec
lds
xor
mov
push
(bad)
mov
sbb
das
(bad)
xlat
xchg
pop
in
adc
jmp
cmp
pop
aaa
or
js
cmc
dec
bound
pop
js
ins
ins
setns
push
sbb
sbb
mov
dec
mov
shl
xor
mov
sti
gs
mov
jmp
push
sbb
pop
test
aad
jns
outs
sbb
(bad)
jmp
jbe
iret
sti
loope
lea
movs
mov
or
stos
mov
lock
sub
loope
movs
and
jle
adc
mov
outs
pushf
inc
lock
push
sbb
or
mov
jb
mov
arpl
outs
dec
das
xor
popa
add
push
outs
push
adc
sub
mov
clts
cmc
push
fwait
pop
mov
xchg
(bad)
sub
xchg
inc
xlat
pusha
in
fwait
inc
mov
addr16
mov
adc
fcomp
sub
sub
dec
fiadd
retf
pop
ins
cmp
and
mov
mov
jl
cs
xchg
jle
sbb
outs
push
mov
add
adc
out
(bad)
xor
les
xlat
cmp
jp
inc
xor
movs
int
xchg
fild
push
mov
jge
cli
xor
hlt
jmp
leave
dec
and
retf
mov
inc
add
sar
inc
js
nop
cmc
pop
jmp
inc
add
sti
xchg
push
dec
mov
sahf
call
int3
hlt
jb
sbb
(bad)
scas
rcl
shl
ds
sub
sbb
loop
popf
push
pop
sub
cdq
ja
adc
adc
and
add
call
or
xchg
neg
sti
mov
mov
sbb
stos
sbb
aas
cdq
pop
and
mov
aas
imul
sbb
dec
test
cmp
pop
lds
cmp
xor
mov
je
inc
stos
fistp
mov
xor
xchg
pop
lahf
or
fist
mov
inc
sub
sar
scas
pop
pop
jmp
pop
inc
sbb
mov
fs
jp
gs
xor
and
call
dec
jbe
loopne
test
lock
sbb
mov
retf
pop
fimul
dec
lds
icebp
jns
inc
out
xchg
xor
and
sahf
ret
int
int
xlat
mov
xchg
pop
paddusw
in
ret
test
lahf
cmps
idiv
int3
sub
mov
iret
xchg
sbb
inc
test
dec
aas
mov
nop
icebp
popf
inc
push
xchg
mov
mov
popa
xor
cmps
jmp
jecxz
pop
repnz
cmp
mov
or
aas
xchg
or
push
jecxz
fcomp
lock
and
mov
stos
inc
pop
mov
inc
mov
fs
mov
ins
xor
in
inc
in
ja
or
fmul
ret
inc
lds
and
lea
push
(bad)
sbb
sub
shr
mov
xchg
fiadd
mov
(bad)
js
mov
mov
dec
cmp
inc
popw
mov
test
adc
jns
(bad)
cmp
call
in
scas
loope
mov
ja
xor
xchg
jae
cmp
dec
sbb
adc
loop
mov
fsubr
pop
xor
out
out
pushf
das
add
and
pop
and
adc
enter
mov
add
ds
sbb
sub
test
add
mov
nop
out
xchg
(bad)
fistp
mov
or
pusha
dec
or
mov
hlt
pop
cmp
jmp
pop
xor
pop
add
sub
dec
int
sub
sub
in
lock
mov
ret
adc
(bad)
mov
outs
out
jmp
or
stc
and
xchg
inc
jb
ss
pop
mov
mov
in
pop
(bad)
div
in
pushf
repnz
mov
shl
enter
jnp
add
add
repnz
out
mov
pop
loope
inc
dec
dec
pop
cmc
out
add
add
xchg
nop
int
jbe
sub
mov
inc
add
inc
test
sub
rcl
jne
cld
jge
mov
push
test
and
mov
mov
test
enter
arpl
fdivr
mov
xor
loop
cmp
sbb
push
cwde
cdq
xchg
in
mov
mov
vmread
mov
mov
test
outs
test
lahf
cmp
push
stos
sbb
cs
add
repz
jecxz
leave
cld
cmp
mov
fs
lock
or
dec
push
adc
call
dec
leave
mov
xor
imul
js
and
movs
sti
sbb
jnp
lahf
dec
gs
mov
aam
shl
mov
or
test
xchg
jbe
es
gs
adc
or
xor
pop
push
pop
leave
mov
daa
pop
mov
es
inc
cmp
sbb
ja
and
mov
xchg
pop
stos
push
cmp
scas
test
cmp
loop
inc
xchg
mov
push
jp
fadd
in
dec
push
data16
pop
pop
inc
cmp
xchg
fwait
mov
push
fbld
pop
ret
inc
fimul
stos
adc
xchg
inc
and
xlat
push
jmp
les
cmp
repz
xchg
adc
cdq
cmp
outs
ror
mov
sbb
xlat
mov
pop
adc
xor
(bad)
aas
in
in
sbb
mov
push
gs
fwait
xor
cmp
dec
test
int
addr16
jp
mov
xor
test
cwde
movs
sahf
inc
xchg
jmp
or
adc
sub
rcr
pushf
fild
lock
test
js
push
jg
cmp
sbb
js
xchg
and
leave
dec
adc
jp
int
mov
or
addr16
add
or
push
dec
scas
jp
mov
cmp
dec
pop
ret
ins
ret
cld
cmp
(bad)
sub
stos
push
xlat
mov
mov
jb
lahf
push
push
push
je
push
mov
push
sbb
mov
mov
js
fisub
ret
inc
add
cmp
lods
(bad)
push
rcl
mov
dec
sub
jmp
push
(bad)
fldcw
mov
into
jo
inc
adc
mov
ja
enter
scas
jnp
fcmovu
sub
xor
ins
test
push
ins
call
ror
mov
push
out
jmp
push
std
push
out
into
mov
shl
xchg
aam
sub
push
sub
mov
ja
push
pop
pop
fneni(8087
fistp
jns
movs
add
fldenv
jnp
stos
add
mov
call
jo
xor
pop
xor
pop
(bad)
in
xchg
fsubp
das
xchg
mov
inc
xlat
call
in
shl
push
sub
sbb
dec
ins
call
mov
pop
fisttp
mov
ja
mov
mov
test
jmp
cli
int3
icebp
ret
xchg
add
shr
movs
dec
fucom
popa
shr
es
gs
inc
xchg
push
add
ret
stos
mov
ror
xchg
shr
retf
int
shl
add
pop
inc
pusha
mov
add
xchg
stc
inc
add
jmp
xchg
ins
inc
sbb
push
cmp
xor
adc
cmps
pop
out
cmp
test
xor
fsubr
rcl
lods
and
scas
movs
test
jbe
mov
shl
dec
mov
jl
mov
mov
imul
test
fidiv
add
out
scas
and
dec
mov
sbb
cmp
mov
sbb
add
in
dec
imul
rcl
fsubp
(bad)
retf
out
mov
clc
rol
(bad)
push
jmp
xor
ja
rcr
ja
out
or
cld
hlt
dec
rol
mov
icebp
ins
xchg
mov
pop
xchg
or
xor
fidivr
or
push
inc
mov
aas
mov
add
sub
ror
mov
out
push
push
jno
mov
sbb
jo
jno
sub
cs
push
(bad)
push
inc
sti
dec
rcr
sti
add
int3
pop
cwde
and
loopne
cli
adc
ss
mov
retf
dec
ins
(bad)
enter
ret
pop
stos
test
pusha
mov
inc
dec
dec
add
xchg
nop
mov
cwde
push
mov
push
jno
cmp
or
xor
jmp
and
jmp
push
cmps
xor
bound
addr16
push
call
inc
sbb
inc
mov
aam
pop
ds
and
mov
jo
pop
ja
stc
and
test
xchg
mov
mov
into
push
jmp
and
pop
sub
adc
inc
iret
lds
aam
clc
add
jg
push
add
pop
lea
push
pushf
clc
push
ja
jg
or
mov
retf
jns
bound
out
in
call
sub
add
inc
(bad)
xchg
cmps
ss
loop
int
xchg
inc
es
adc
ss
in
sub
pop
inc
sbb
jmp
push
call
int
or
mov
rcr
rcr
jbe
int3
jecxz
ss
into
sub
and
das
ror
fistp
ins
aad
repnz
loopne
adc
push
loop
cdq
popa
xchg
(bad)
sbb
sub
popa
mov
mov
shr
jnp
and
add
xor
out
je
xchg
pop
mov
inc
lock
mov
lods
cmps
aam
jecxz
popf
cwde
jmp
cmp
xor
cmp
(bad)
push
out
call
cmc
fsubr
rcl
xor
ficom
fisubr
call
push
fldenv
fs
aam
fcmove
movs
jb
sbb
push
das
dec
mov
mov
and
adc
xor
clc
call
jmp
push
aad
or
loope
aad
imul
outs
vcvtsi2sd
retf
das
jge
sub
mov
cmp
je
sub
pop
dec
adc
xor
adc
mov
add
sbb
retf
or
es
mov
je
sbb
mov
xor
loopne
inc
dec
sbb
push
sbb
push
or
retf
push
sar
(bad)
mov
cmp
jl
hlt
add
mov
cmp
xlat
mov
sbb
sub
(bad)
cmp
fwait
xchg
aam
sbb
jae
fcom
mov
inc
add
or
dec
repnz
or
adc
scas
scas
nop
arpl
adc
je
call
inc
jg
push
pop
mov
jae
rcl
lock
and
and
movs
pop
(bad)
sbb
in
sub
and
test
into
leave
loop
fs
and
cmp
loopne
cmps
lea
cmp
sbb
aad
xor
xchg
(bad)
mov
inc
ds
jmp
enter
add
ja
aad
or
es
jmp
aad
fld
dec
in
and
das
pop
inc
mov
and
sbb
sbb
adc
sub
sbb
lock
in
xchg
cmp
adc
mov
lds
repnz
aas
and
(bad)
loopne
arpl
loope
lahf
sbb
cmp
adc
fdivr
(bad)
out
jns
xchg
sbb
dec
sbb
mov
or
mov
ret
jecxz
std
cmp
jg
cdq
cmps
popf
adc
push
inc
mov
sahf
inc
ss
js
adc
imul
loop
dec
sub
sbb
aas
pop
sar
and
pop
sbb
bound
jnp
xor
out
pop
jmp
inc
cmp
(bad)
rep
inc
mov
pop
mov
xchg
sbb
mov
stc
ficom
jb
pop
or
push
std
mov
stos
js
dec
jl
mov
test
pop
add
jne
nop
jmp
mov
push
cmps
sbb
inc
pop
push
repz
icebp
xchg
sub
sbb
adc
push
test
pop
ret
xor
mov
xchg
fwait
loopne
xchg
pop
sub
pop
cs
bound
jle
inc
fistp
dec
mov
inc
fwait
dec
out
mov
push
idiv
int3
add
sahf
inc
enter
fldenv
xor
jns
adc
arpl
int3
repz
pop
pop
cmps
xchg
fcom
pop
sub
xchg
shrd
inc
ins
pusha
push
cmp
stos
mov
inc
or
scas
fbld
cld
pop
adc
in
xchg
enter
xchg
jl
imul
sub
inc
push
sub
aad
pop
outs
out
mov
pop
(bad)
push
fild
dec
lods
mov
xchg
icebp
lahf
retf
ins
lds
cwde
aam
imul
or
pop
pusha
mov
std
popf
cs
pop
xchg
mov
fdivr
(bad)
rcl
mov
dec
in
add
(bad)
in
in
mov
sub
(bad)
cmps
imul
inc
aad
test
jp
pop
jmp
daa
cli
xchg
popa
jmp
das
mov
dec
jge
adc
and
add
pop
outs
sub
ret
mov
cmp
rol
ss
add
stos
(bad)
scas
iret
aad
imul
mov
(bad)
mov
retf
out
int3
bound
sub
in
fneni(8087
lds
add
test
fild
sub
sub
(bad)
(bad)
dec
push
xor
repz
lea
cdq
xchg
mov
pop
psubusw
sbb
push
push
mov
rcl
and
push
ret
nop
push
cmc
fisttp
(bad)
mov
je
push
xor
push
mov
xchg
xchg
mov
ja
dec
jmp
mov
stos
or
xchg
xor
hlt
in
(bad)
mov
daa
sbb
cmp
(bad)
rcl
out
add
jae
iret
call
in
pop
xor
jmp
mov
adc
mov
adc
mov
sbb
ret
mov
jmp
int3
cmp
pop
adc
rcr
jge
in
test
fcmove
sub
icebp
mov
add
cmp
(bad)
not
xor
fidivr
das
shl
jl
fst
imul
retf
adc
mov
ds
jecxz
(bad)
mov
gs
ret
imul
std
push
xor
sbb
and
add
xor
lock
inc
sti
pop
enter
and
pop
stc
scas
mov
mov
and
test
call
mov
mov
mov
or
push
and
clc
pop
cmp
(bad)
leave
push
dec
addr16
push
stos
or
test
out
mov
lock
inc
adc
fisttp
in
push
clc
loope
test
jns
pop
xor
out
xor
mov
push
(bad)
jmp
in
retf
xor
jns
ret
pop
mov
xchg
and
loope
inc
repnz
lahf
mov
mul
and
je
or
jmp
stc
fnstcw
adc
cmp
mov
adc
retf
fistp
adc
jbe
stos
imul
lods
ret
add
imul
jmp
pop
adc
rcr
ss
js
dec
int
inc
ja
add
push
loop
push
mov
bound
pop
fild
popa
jmp
data16
mov
or
sub
mov
jp
cs
retf
push
inc
jae
and
xor
in
xor
add
ins
push
cmp
mov
(bad)
movs
dec
stos
push
stc
iret
mov
or
outs
push
jecxz
sbb
xlat
sbb
sbb
je
add
xor
push
inc
sbb
jle
cmp
sub
lods
popf
push
sbb
fdiv
daa
daa
mov
cmp
aas
mov
xchg
xchg
or
mov
push
inc
iret
push
int3
xchg
xchg
sub
and
movs
iret
fs
stos
cld
push
and
jmp
push
adc
cmp
add
lahf
mov
and
jno
mov
mov
xchg
outs
sqrtps
jge
bound
rcr
test
jmp
mov
je
shl
sub
add
and
aad
test
fisub
sub
sbb
lods
rol
adc
int3
or
cmp
pop
div
popa
js
aaa
sbb
in
xor
push
dec
neg
neg
sub
jl
cmp
and
mov
addr16
mov
loopne
jo
push
inc
mov
out
(bad)
imul
dec
adc
inc
imul
and
sub
mov
add
shr
daa
ret
mov
push
loope
xor
cmp
cmp
xchg
xor
cmp
or
in
fimul
xchg
movs
ins
je
adc
mov
ror
pop
cmp
push
movs
cmp
dec
imul
aas
rol
mov
inc
push
xchg
lods
mov
aad
jne
das
dec
or
test
test
inc
pop
add
mov
(bad)
cmp
ja
add
mov
or
aas
push
aad
push
ja
inc
jnp
jno
mov
mov
add
xchg
mov
add
cmp
movs
cmp
jg
loop
add
mov
dec
sub
ins
das
pop
cmc
(bad)
mov
inc
aad
js
retf
repz
or
xchg
or
rol
and
inc
psubusb
inc
popf
loop
jp
pop
hlt
add
dec
rcr
sbb
cmc
movs
sub
hlt
mov
ds
mov
aaa
pop
ja
loop
inc
ins
fdivr
pop
adc
cld
mov
cmp
xor
jb
cmps
xchg
jle
cmp
xchg
sbb
or
xor
test
sahf
call
push
xchg
mov
xlat
retf
pop
xchg
push
jbe
jbe
daa
push
call
jno
jg
sbb
adc
sbb
xlat
xchg
mov
inc
push
fistp
jecxz
xchg
ret
xchg
xchg
pop
in
int3
adc
jno
xor
lea
jle
sahf
retf
dec
jp
shr
sahf
jecxz
and
add
(bad)
je
into
jne
in
je
push
sbb
or
scas
jmp
cmp
jb
sahf
ins
or
sbb
fcomp
push
jne
(bad)
mov
push
and
int3
dec
and
sub
xlat
cwde
jmp
sti
out
mov
fwait
add
jecxz
jmpw
and
mov
sbb
lods
cwde
cmp
mov
mov
leave
lock
iret
mov
sub
cmp
lock
scas
mov
cli
test
sahf
mov
mov
add
daa
ins
hlt
mov
push
in
jnp
repnz
dec
out
dec
pop
iret
mov
xchg
jno
scas
jge
mov
retf
dec
aad
cmp
pop
jne
push
mov
push
jg
xor
imul
stos
stos
add
and
js
rol
rcl
cmp
nop
mov
or
test
xor
into
pop
fist
cs
bnd
or
ins
stos
outs
fwait
test
jbe
mov
push
pop
repnz
test
dec
sub
ja
(bad)
mov
add
lock
and
enter
fadd
pop
enter
adc
mul
retf
inc
aam
xor
xchg
pop
inc
pop
test
call
mov
iret
fld
pop
aas
test
or
imul
jae
mov
popa
xor
adc
or
arpl
imul
sub
push
cmp
jmp
imul
push
aam
push
ret
or
dec
dec
repnz
add
les
clc
or
in
or
movs
push
das
sbb
jge
loop
rcl
arpl
push
mov
xor
inc
(bad)
in
jmp
or
fdivrp
int3
inc
xor
call
pop
and
mov
movs
and
inc
push
in
gs
xchg
push
es
dec
jb
pushf
and
addr16
jle
push
xchg
movs
cmp
inc
cmp
jmp
out
out
inc
push
pop
out
pop
outs
out
mov
(bad)
cwde
jne
cs
call
sub
retf
into
mov
popa
sbb
test
xor
xchg
jb
idiv
push
and
sub
add
sub
jnp
cdq
test
cs
lods
dec
pusha
mov
fild
or
rcl
add
mov
ret
icebp
rol
adc
outs
mov
(bad)
pop
adc
sub
repz
pop
imul
aam
jecxz
jle
sub
pop
hlt
push
(bad)
jecxz
pop
push
push
jmp
sub
xchg
cld
and
sub
push
inc
(bad)
pop
xlat
fstp
vpshufd
(bad)
mov
ds
mov
(bad)
push
(bad)
lods
sub
jbe
adc
cmp
pop
push
stc
xchg
mov
cmps
push
movs
or
stc
in
repnz
sbb
loopne
add
data16
enter
mov
and
sbb
push
pop
icebp
pushf
in
pop
push
jae
adc
scas
adc
daa
rcl
add
loope
cmp
retf
add
pop
mov
adc
mov
movs
push
inc
mov
push
push
retf
stc
clc
(bad)
test
mov
popf
adc
sbb
and
enter
pop
js
push
mov
retf
xor
mov
cmps
push
push
mov
cmp
out
adc
push
pop
aas
add
push
mov
xor
rol
mov
js
fiadd
lock
loopne
xchg
aas
push
test
fnstsw
push
xor
add
(bad)
neg
jns
mov
lods
(bad)
jns
in
sbb
adc
or
test
push
imul
xchg
idiv
psubusb
aaa
fmul
cli
sbb
xor
inc
mov
xor
popa
mov
test
rsqrtps
out
push
mov
mov
pusha
inc
and
fiadd
or
dec
cmp
pop
mov
mov
jne
jnp
call
and
pusha
in
jl
in
daa
lds
xchg
into
inc
xor
add
test
fdivrp
stc
shl
add
fsub
cmp
mov
inc
push
sahf
movs
jg
sar
add
inc
pushf
fs
retf
or
and
(bad)
in
sub
ficom
xchg
pop
push
lds
icebp
sahf
cmp
ins
call
sub
fcom
mov
gs
sub
sbb
popf
bswap
mov
loope
xor
std
xlat
jp
test
xchg
stos
xor
mov
cmp
pop
mov
in
mov
or
rol
cdq
mov
das
ss
push
inc
mov
adc
push
dec
enter
push
pop
cmps
or
out
cmp
inc
xchg
xor
aaa
popa
int
push
pop
popf
test
xchg
adc
inc
push
xor
sahf
fwait
aaa
jmp
into
mov
mov
mov
and
cmp
fcmovnbe
imul
push
mov
or
popa
sbb
or
fwait
test
push
cmp
push
and
push
and
les
(bad)
add
add
in
into
dec
fdivp
aam
call
in
int3
int
mov
xchg
sub
pop
cmp
test
fisubr
ret
sti
out
mov
add
les
fcom
pop
push
ror
push
push
xor
adc
(bad)
fldz
in
cmp
cmp
jbe
xor
mov
dec
dec
mov
test
jns
inc
dec
aam
mov
loope
outs
sbb
xchg
retf
js
fwait
jecxz
js
adc
dec
push
cmp
sub
and
outs
arpl
int
movs
add
mov
jne
inc
lock
xor
push
es
mov
adc
jp
stos
aaa
lock
mov
mov
jmp
popa
push
mov
cmp
push
(bad)
out
(bad)
in
xchg
(bad)
std
test
icebp
xchg
pop
cdq
test
ret
jl
xchg
cmp
or
cmp
mov
stc
add
dec
sbb
mov
(bad)
daa
or
dec
inc
push
inc
paddd
test
arpl
adc
mov
or
js
movs
mov
shl
sbb
idiv
push
adc
(bad)
or
test
add
ins
shl
xor
pop
add
add
push
push
mov
xor
js
push
(bad)
std
push
cdq
xchg
sar
pop
aam
cmp
sbb
xlat
repz
(bad)
ror
add
pop
push
adc
dec
inc
cmps
mov
jecxz
pop
cs
mov
add
sub
or
out
in
ret
or
xchg
gs
mov
icebp
xchg
fldcw
test
or
jne
jge
mov
std
repz
rcl
(bad)
jg
mov
jle
jbe
push
ret
sbb
inc
clc
pop
loop
rol
push
adc
gs
mov
jp
xchg
nop
push
fisub
xchg
push
out
in
mov
or
sub
div
pop
jp
mov
fwait
mov
mov
sbb
push
xor
dec
pop
sbb
push
pop
mov
test
push
data16
pop
aaa
push
mov
inc
sub
cmp
push
ja
div
xor
fbstp
jle
xor
and
mov
inc
mov
push
fst
inc
gs
jmp
ficom
sub
jl
pop
aaa
mov
lock
xchg
fsub
mov
test
mov
mov
ins
mov
jge
repnz
or
jp
popf
xor
repz
and
dec
xor
dec
aaa
fisubr
ret
lea
aam
pop
ret
ins
icebp
cmp
int
push
stc
das
pusha
xchg
call
arpl
pop
pop
xchg
fstp
adc
repz
dec
dec
in
xchg
add
loop
cmps
jne
gs
inc
ins
fisttp
repnz
loopne
lock
pop
mov
inc
icebp
or
jmp
xor
dec
call
mov
add
arpl
movs
movs
xor
sbb
std
ds
cmps
ror
sahf
add
daa
mov
outs
in
ins
(bad)
mov
test
movs
fucomi
dec
pop
cmps
adc
push
adc
cmps
xlat
adc
not
jp
push
fiadd
cmp
pop
sbb
and
cmps
mov
data16
mov
jecxz
mov
jo
jbe
jbe
jg
ffreep
rol
mov
cs
iret
(bad)
jbe
imul
sub
rol
inc
mov
stc
(bad)
mov
jl
dec
pop
push
data16
call
cmp
adc
sub
cwde
xchg
mov
push
sbb
inc
pop
xchg
scas
les
sub
popf
cmps
or
xor
test
in
movs
sbb
adc
sub
cmp
ror
mov
cdq
xchg
add
push
(bad)
push
and
lds
push
mov
push
dec
jecxz
out
fld
fadd
in
mov
fist
sub
push
(bad)
es
adc
sahf
mov
aaa
aad
ror
jne
sub
cdq
inc
mov
idiv
push
cmp
std
adc
lahf
dec
hlt
mov
sbb
xor
jnp
call
sub
jo
adc
call
movs
and
cs
movs
inc
dec
jecxz
js
or
add
sbb
cdq
pop
add
cli
fwait
dec
aad
(bad)
stc
pop
mov
sbb
adc
cmps
ror
imul
lds
rcl
and
fadd
push
xchg
add
cmc
fwait
pop
in
je
push
xor
xlat
push
in
into
xor
retf
cmc
sub
dec
or
in
sub
and
jns
ja
dec
retf
fsub
int
sbb
das
ins
dec
lea
aaa
xor
(bad)
aam
test
dec
mov
inc
into
xchg
pop
or
adc
aaa
ret
dec
ins
add
add
pusha
fdiv
leave
shl
mov
enter
lods
div
jp
jnp
mov
mov
cdq
popf
das
aam
adc
ins
sbb
adc
xor
dec
scas
das
xchg
or
outs
add
cmp
(bad)
jle
scas
xor
inc
sub
(bad)
mov
movs
mov
shr
xor
call
iret
jecxz
inc
xor
(bad)
jmp
movs
mov
into
(bad)
call
pop
sub
ja
mov
jl
push
xchg
cs
or
jl
mov
push
sub
fnsave
cmp
push
in
jecxz
xchg
loopne
cmps
xor
push
mov
pop
cdq
push
in
or
iret
jo
xchg
lods
stc
cmp
in
loope
out
push
cmp
xchg
sub
fistp
mov
out
out
mov
mov
and
mov
sbb
hlt
sti
pop
movs
out
inc
sbb
fcomp
jae
sbb
mov
push
movaps
pushf
imul
lea
movs
xchg
mov
mov
popf
jmp
sub
pop
pop
outs
jno
pushf
xchg
xor
(bad)
in
mov
repz
arpl
push
mov
imul
enter
popf
in
mov
ins
jnp
add
neg
lock
adc
retf
push
and
test
sbb
and
cmc
outs
das
clc
aaa
into
jae
repz
(bad)
add
pop
jbe
pop
sbb
int3
cld
(bad)
neg
adc
ins
(bad)
out
xchg
dec
ret
loope
inc
push
push
outs
sbb
and
sub
and
das
daa
inc
sar
aas
pop
data16
and
loope
shr
cmp
jmp
je
in
and
inc
sar
adc
shl
(bad)
das
xor
pushf
adc
and
and
push
pop
pop
mov
mov
adc
(bad)
dec
sbb
in
dec
jb
iret
cli
into
mov
pop
push
adc
hlt
and
add
mov
inc
ret
jl
leave
mov
cmp
mov
pushf
in
imul
js
push
or
jne
and
div
inc
pop
inc
add
ins
repz
sti
jnp
retf
sub
clc
ja
test
xchg
xor
add
pop
add
sahf
call
inc
pop
(bad)
jmp
mov
mov
jmp
fsub
out
xor
fsubrp
inc
sub
sub
dec
add
xchg
mov
pop
mov
pop
stc
fadd
ret
and
call
pushf
outs
sbb
mov
dec
fisttp
mov
in
jns
jp
imul
cmp
shl
ret
mov
add
xor
xchg
push
sahf
mov
iret
mov
(bad)
lock
sbb
mov
lea
adc
pop
in
repz
xor
mov
push
nop
mov
or
fild
leave
pop
xor
xchg
sar
out
jne
aad
out
jnp
movs
sbb
jmp
and
xor
jbe
dec
in
sub
(bad)
and
mov
xchg
push
xchg
lahf
call
ins
push
xor
imul
push
push
pop
jnp
sbb
xchg
stos
xchg
ins
and
xchg
add
mov
fild
pop
sub
push
xchg
pop
lahf
mov
sub
fist
fld
mov
mov
cmps
repz
pop
cdq
ins
aaa
xchg
(bad)
jno
mov
addr16
dec
adc
data16
cmovo
dec
test
int3
and
rcl
in
jge
xchg
add
adc
aas
push
jo
xor
fld
adc
fisubr
inc
inc
lea
fstp
lods
cmp
push
push
cmc
test
(bad)
xor
adc
cmps
xchg
mov
push
pop
and
mov
pushf
fsub
retf
cmp
cdq
mov
pop
outs
into
mov
in
inc
imul
and
mov
les
xchg
jno
lods
sar
mov
mov
adc
lahf
xor
jge
add
imul
xchg
jns
cmp
pop
pop
ss
ins
mov
addr16
xchg
movs
outs
mov
loop
add
fwait
dec
out
rcl
loope
les
call
cmps
add
stc
jnp
mov
call
call
xor
test
jle
sbb
sbb
pop
mov
or
xor
mov
mov
sbb
leave
mov
inc
sbb
movs
in
das
pop
ja
mov
jnp
iret
ins
ins
fdivr
ret
idiv
jmp
sbb
xor
cmp
lahf
mov
jle
call
movs
test
movs
cmp
pop
and
out
mov
gs
mov
leave
dec
push
xchg
aas
push
outs
xor
and
gs
fwait
ss
dec
mov
xor
setns
and
xchg
mov
fbld
pop
out
inc
fldcw
xor
adc
sbb
and
cld
dec
sahf
sub
pushf
test
dec
test
enter
xchg
and
xchg
mov
mov
enter
lock
jl
and
push
and
xor
or
pop
jo
or
ss
cwde
pop
fucomp
stc
inc
jae
stos
(bad)
xchg
out
jo
cdq
lock
addr16
xlat
adc
pop
push
xor
or
sar
fistp
aas
sbb
int
out
dec
ins
pmulhw
xor
clc
and
inc
xchg
inc
push
imul
dec
jns
dec
xor
or
and
jp
lods
fcom
cdq
ja
sub
fsubp
stos
stos
outs
out
cmc
test
mov
aad
pushf
mov
sub
(bad)
repnz
mov
sub
in
out
out
cld
sub
jmp
mov
pop
hlt
xor
outs
sti
or
movs
test
nop
jmp
into
loope
mov
daa
mov
sbb
jae
call
xor
pop
je
inc
xor
in
xlat
xor
int3
and
push
ins
mov
mov
adc
pop
push
stos
jmp
inc
pop
cmp
xchg
repnz
jb
(bad)
push
mov
dec
or
pop
loope
add
icebp
inc
jle
mov
clc
clc
sbb
xchg
iret
enter
inc
leave
cmp
adc
test
mov
jae
xchg
mov
jle
gs
leave
cmps
loopne
add
gs
fild
mov
ficom
mov
(bad)
inc
push
(bad)
sbb
mov
ret
test
sub
xchg
sub
push
xchg
mov
or
das
cmp
inc
xor
dec
(bad)
(bad)
lds
xchg
sbb
and
jae
test
repnz
sub
das
adc
mov
push
mov
dec
fs
jmp
push
xor
mov
and
push
in
cli
and
enter
fisub
adc
adc
add
adc
outs
test
push
push
(bad)
sbb
adc
and
jl
cmp
neg
jmp
jo
(bad)
in
and
pop
shl
inc
clc
dec
pop
dec
fwait
and
movs
mov
repz
mov
push
push
jb
cmps
xor
repz
cmc
test
inc
add
dec
rcr
scas
dec
call
xchg
ss
push
jl
mov
add
ja
dec
mov
add
xchg
leave
sub
inc
ret
popa
mov
into
mov
ss
mov
xor
push
pop
fs
xchg
jnp
and
test
mov
xor
mov
pop
xor
fcmovu
and
xchg
neg
mov
push
out
loop
(bad)
scas
mov
pop
mov
inc
mov
aam
adc
dec
mov
dec
jp
or
sbb
dec
or
int
jo
jbe
hlt
popa
not
rcl
jnp
fcmove
stc
test
jmp
push
frstor
cmp
mov
ds
dec
jp
js
lods
jmp
push
adc
les
sub
inc
popf
push
pop
mov
repz
push
ret
lahf
jmp
rcl
push
mov
cmp
inc
mov
dec
cmp
pop
mov
pusha
xchg
xor
sbb
push
int3
outs
jle
inc
cmps
sbb
(bad)
inc
hlt
sbb
jmp
pop
aaa
jge
xchg
stos
sti
sbb
scas
loopne
data16
jae
inc
jno
ficomp
in
dec
cwde
je
int3
and
test
sub
outs
out
call
sbb
loop
xchg
jp
shl
jb
sti
fwait
sub
add
adc
pop
shl
lods
jbe
leave
sub
stos
int
cmp
push
and
outs
shl
fldcw
arpl
in
jo
out
jno
push
add
cld
xchg
push
adc
mov
mov
push
cmp
inc
sub
lock
sahf
cmp
sbb
dec
ss
out
fdivrp
adc
(bad)
pandn
or
stos
call
pop
jno
hlt
sbb
das
hlt
enterw
cld
fidiv
xchg
ret
test
mov
add
mov
inc
inc
push
xchg
movsx
ret
js
(bad)
xchg
mov
mov
shl
repz
and
or
add
retf
fnstcw
xchg
or
pushf
xchg
out
dec
inc
bound
loopne
sub
inc
nop
push
loopne
sub
mov
aas
push
inc
adc
mov
pop
movs
lods
push
mov
jge
sbb
xor
shl
xlat
(bad)
push
or
ins
pop
(bad)
scas
xchg
ins
cmp
xchg
adc
add
retf
sub
gs
out
ret
jb
lea
int
out
push
js
test
test
stos
int
pop
pusha
adc
loope
mov
stos
or
pop
pop
jbe
jae
lods
xor
push
lahf
retf
mov
jmp
fldcw
dec
popf
pushf
outs
mov
call
sbb
test
pop
mov
cmc
jno
rcr
and
fstp
retf
lds
jae
ins
imul
dec
sbb
fidiv
push
sbb
xchg
jmp
sub
push
jbe
mov
jb
jp
add
mov
je
and
xor
pop
retf
jmp
mov
in
cld
mov
push
mov
sub
xor
add
sbb
inc
sti
mov
add
test
push
xor
scas
adc
scas
ins
cwde
int3
test
pop
jl
lods
sbb
or
jmp
xchg
in
out
xchg
add
hlt
(bad)
or
jnp
clc
mov
sbb
call
hlt
arpl
jecxz
adc
xchg
mov
sub
pusha
push
dec
mov
sbb
mov
loopne
cmps
xchg
cmp
das
imul
cmc
leave
cmps
mov
and
leave
xchg
or
push
stos
rol
push
mov
cmp
hlt
out
dec
and
repz
mov
std
sub
iret
pop
add
ss
push
(bad)
imul
or
push
in
jp
std
mov
cmp
cmp
mov
push
fcmovb
shl
sub
sub
imul
lods
cmp
sar
mov
cmc
cmp
pop
xchg
call
out
xor
into
inc
pop
add
nop
cmp
inc
dec
arpl
xchg
and
add
adc
and
or
xlat
mov
jmp
and
in
idiv
inc
jbe
jecxz
or
test
enter
imul
data16
test
aaa
stos
adc
out
sti
mov
sti
idiv
and
scas
inc
push
ins
xchg
rcr
xchg
jge
lahf
rcl
popa
popf
out
(bad)
iret
stos
sbb
loopne
pop
mov
and
lds
sbb
in
add
out
test
xor
(bad)
sub
out
vmaxpd
shl
or
aam
xor
sub
cmp
shr
jmp
lea
xchg
cdq
mov
pop
inc
cmp
inc
xchg
inc
rcl
fmul
or
lds
clc
adc
jne
jae
lods
int
jo
mov
mov
sub
sbb
inc
push
and
mov
mov
clc
push
ins
outs
and
xlat
pop
sub
sbb
xor
pop
pop
or
arpl
xchg
xchg
mov
mov
jp
paddusw
pop
into
in
stos
xor
or
test
mov
add
or
lock
pop
xchg
mov
mov
test
sbb
mov
xchg
mov
and
leave
retf
test
aas
add
pushf
jbe
sbb
cmp
in
popa
test
cwd
and
(bad)
fist
sbb
dec
adc
inc
repz
fidiv
fwait
xchg
xchg
pop
mov
inc
xchg
pusha
es
jp
cld
mov
inc
cmp
out
std
fcomp
pop
pop
leave
sub
stc
mov
jae
stos
in
sbb
adc
and
mov
neg
push
mov
mov
bound
fimul
cwde
sub
fist
cmp
cmps
add
push
ins
cmp
push
(bad)
mov
addr16
xor
stc
mov
inc
mov
add
xchg
outs
fucom
cmp
sbb
inc
cmp
repnz
gs
mov
and
xchg
mov
push
in
popa
loope
cmps
mov
retf
add
xchg
movs
push
das
pushf
adc
xor
in
in
test
rcr
scas
out
xor
jb
jnp
or
pushf
dec
push
mov
lock
push
les
scas
sbb
inc
or
add
jle
pop
push
rcl
and
scas
xor
mov
adc
pop
dec
xchg
and
test
jl
add
ins
adc
das
pop
ss
jbe
data16
(bad)
fldenv
cwde
inc
cmps
stos
sahf
retf
dec
cld
mov
mov
iret
push
jmp
mov
cmc
mov
push
inc
cmp
dec
pop
pop
push
xchg
ror
rcl
xor
and
(bad)
cmp
aas
loope
or
push
int3
arpl
mov
unpcklps
(bad)
(bad)
cmp
sbb
sbb
xor
jg
addr16
cmps
sbb
xor
adc
js
movs
call
push
cld
cmp
jg
test
mov
rcr
push
push
fwait
or
loop
xchg
dec
out
in
cmps
rol
add
call
cmp
pop
aas
push
lea
(bad)
cli
stc
jae
jmp
sub
das
aaa
jecxz
test
or
mov
inc
jge
xchg
aas
nop
(bad)
std
adc
sbb
mov
or
mov
mov
mov
dec
aad
jbe
mov
push
mov
and
mov
cwde
mov
repz
xor
jmp
push
dec
mov
fnsave
mov
out
mov
cmp
div
(bad)
sahf
in
mov
fld
hlt
adc
jle
add
pusha
inc
jge
push
inc
jp
into
pushf
sbb
data16
lods
mov
or
mov
dec
pop
scas
popf
jno
adc
ret
jp
mov
mov
mov
or
mov
es
jmp
test
push
fnstsw
jge
sti
lds
pop
dec
cmp
sub
pop
or
fstp
call
imul
fsubr
push
popf
data16
xchg
xchg
sub
mov
xor
push
adc
ins
and
sub
push
jae
push
repnz
and
outs
xor
or
cmp
outs
xchg
test
xchg
out
(bad)
enter
sbb
xchg
int3
ror
(bad)
mov
mov
fisubr
pop
xchg
cmp
fcmovnb
test
pop
push
call
push
dec
mov
test
adc
dec
shl
xor
xchg
stc
and
in
pop
imul
jo
xchg
add
xchg
mov
pushf
hlt
or
pop
xchg
in
or
jmp
cdq
ret
mov
cwde
(bad)
in
xor
push
cwde
sub
or
(bad)
or
iret
xchg
lds
aad
mov
sbb
mov
xchg
sub
jno
iret
mov
cmp
stos
mov
pop
mov
js
jnp
jg
xor
sar
cmovge
fdiv
jnp
cmc
xchg
cmp
and
pop
stos
loopne
xor
fmulp
pop
dec
add
fidivr
loopne
jnp
nop
stos
scas
push
sbb
pop
push
sub
xchg
xchg
sbb
ror
adc
shl
or
adc
test
pop
lods
dec
inc
ds
sbb
or
cmp
mov
scas
add
mov
sub
in
rol
cmp
and
cmp
mov
sub
aad
test
movs
push
cmps
xor
addr16
push
fs
loopne
loop
(bad)
lock
jmp
cmp
sbb
mov
fild
int
inc
inc
cli
push
xor
mov
test
xor
inc
lock
sub
ja
std
mov
je
in
rcr
fnsave
cmps
leave
imul
mov
das
jecxz
mov
and
mov
add
push
inc
setbe
out
sbb
pop
dec
cli
test
fdivr
xor
ins
dec
lea
loop
cmp
imul
into
aaa
jbe
bnd
xor
pop
movs
mov
pop
scas
iret
pop
test
pop
ins
rol
gs
inc
into
popa
out
sbb
pop
jb
xchg
cmp
inc
inc
mov
mov
lods
jp
or
(bad)
sbb
xor
pop
pushf
rcl
test
ret
in
jmp
cmp
xor
add
push
and
pushf
jns
out
lods
je
data16
inc
inc
add
sahf
jl
xchg
mov
jb
sbb
inc
jmp
nop
or
lds
fucomi
jb
sbb
mov
push
and
jae
and
dec
pop
retf
mov
fs
mov
adc
mov
sub
out
sub
cmps
jmp
jo
nop
call
hlt
inc
dec
clc
jp
pop
mov
jno
popa
mov
mov
mov
sub
or
dec
outs
xchg
shr
sbb
mov
jo
sbb
sub
jmp
add
loop
lock
push
and
in
jb
adc
loop
and
xor
fst
mov
mul
in
sbb
push
repnz
loopne
in
add
xor
arpl
stos
fild
div
sahf
push
mov
pop
je
jbe
inc
lahf
add
mov
cmp
sub
inc
mov
stos
in
mov
push
gs
xchg
xor
adc
aad
dec
outs
les
call
call
mov
(bad)
lds
and
dec
inc
sbb
into
jmp
pop
loopne
shr
(bad)
stc
push
jmp
(bad)
clc
mov
mov
jmp
or
inc
jb
mov
xchg
or
jmp
daa
mov
inc
repnz
xchg
sbb
adc
(bad)
loop
test
movs
movs
out
loopne
scas
mov
cmp
cdq
fisubr
or
repnz
pop
(bad)
and
mov
(bad)
lahf
lods
cwde
push
dec
xchg
lock
stc
lahf
lea
js
nop
sub
mov
jns
mov
push
sahf
mov
xor
jmp
cmp
cmps
pop
adc
dec
adc
jmp
(bad)
adc
movntq
fwait
or
push
push
jne
(bad)
jo
xor
and
ins
dec
movs
cmps
sbb
fmul
cmp
sti
xchg
shl
and
shr
pop
je
pop
cmp
test
xor
or
xor
fidiv
mov
dec
inc
add
dec
mov
cld
adc
adc
sub
xor
data16
ror
pop
pop
inc
out
sbb
retf
ds
jb
sub
mov
arpl
out
push
add
xlat
inc
(bad)
and
xchg
repz
cwde
cli
mov
and
call
or
(bad)
and
ds
jae
ret
mov
not
inc
xor
mov
(bad)
mov
sbb
leave
test
mov
sbb
jb
test
cwde
sbb
cmp
xchg
xchg
(bad)
mov
js
sahf
add
leave
cs
scas
jae
mov
movs
or
fld
sbb
ins
cs
es
dec
push
pushf
mov
push
pop
in
push
mov
mov
fbld
push
inc
jnp
out
and
and
mov
inc
pusha
adc
enter
or
leave
push
xor
and
(bad)
lods
js
inc
retf
gs
mov
retfw
test
movs
dec
mov
leave
mov
repz
mov
cvtpi2ps
rol
add
fld
gs
pop
repnz
sbb
or
leave
(bad)
fild
add
push
mov
push
sub
retf
call
(bad)
jmp
lea
int
cs
in
retf
cli
loopne
add
lahf
arpl
adc
add
jns
cvttps2pi
or
stos
cmps
popa
shr
xor
movs
pop
nop
mov
or
(bad)
fs
xchg
sahf
mul
imul
outs
mov
sub
and
sar
out
rcr
jle
dec
inc
inc
nop
rcl
jbe
cmp
mov
nop
dec
sbb
dec
adc
jg
lahf
call
jb
imul
ins
in
inc
sbb
inc
jno
es
add
mov
inc
test
jne
xchg
add
jne
jb
mov
nop
pop
cmc
pop
leave
retf
sub
out
(bad)
call
push
retf
push
jg
jp
ss
mov
or
loope
clc
mov
mov
pop
shl
mov
movs
and
sbb
leave
add
nop
mov
mov
leave
pop
repnz
inc
imul
pop
dec
xor
clc
or
sub
push
lods
push
dec
stc
pop
clc
mov
inc
arpl
sbb
sahf
xor
(bad)
mov
cli
sub
add
pop
mov
mov
inc
repnz
mov
add
xchg
dec
adc
mov
jp
mov
add
(bad)
in
lods
jmp
inc
pop
or
mov
dec
pop
cs
fst
xchg
mov
and
xor
cmp
and
popf
popf
(bad)
lea
mov
ror
adc
or
into
inc
mov
cwde
push
loopne
jae
mov
push
arpl
dec
add
sbb
mov
adc
or
sub
das
or
ss
dec
ja
mov
lock
ret
mov
fldenv
sti
fimul
sar
sbb
(bad)
into
or
mov
loop
(bad)
cli
popa
mov
add
arpl
jge
jnp
mov
ror
movs
xchg
lods
aad
vmwrite
pop
mov
aam
mov
jb
nop
ins
xchg
icebp
push
rol
aas
std
(bad)
in
adc
sbb
mov
stos
fmulp
or
pop
(bad)
aas
jmp
in
and
add
dec
pop
and
mov
loopne
xor
mov
inc
in
dec
and
jg
sub
loopne
pop
sub
dec
call
sbb
cwde
mov
inc
xchg
std
add
or
jb
ja
mov
add
sti
call
sub
push
retf
and
shr
cmp
retf
out
imul
jno
sahf
jo
or
(bad)
outs
xchg
movs
stos
jl
add
xor
mov
lahf
xchg
mov
ror
hlt
pop
sub
add
in
inc
jge
pushf
jle
push
push
retf
sti
dec
aam
jg
adc
mov
je
call
cmp
daa
mov
pushf
and
xor
mov
dec
imul
loopne
repz
int3
mov
in
mov
pop
inc
scas
aad
pusha
jmp
push
in
cmp
test
test
leave
push
popf
cli
mov
fstp
push
out
and
dec
sub
add
movs
mov
mov
daa
adc
push
ror
cmp
mov
repnz
movs
ins
nop
xchg
ret
sbb
loopne
push
inc
jns
shl
pop
cmp
sbb
xchg
daa
adc
movs
arpl
fwait
adc
xor
xor
std
stc
ja
xchg
bound
stc
clc
cmc
pop
xor
and
push
push
xor
stc
inc
add
(bad)
pop
and
fucomp
loop
int3
test
or
xchg
mov
push
out
cmp
push
pop
movs
xchg
loope
pop
xor
stc
dec
movs
cld
push
add
or
mov
adc
inc
pop
(bad)
iret
fwait
mov
ja
mov
cdq
push
in
dec
mov
lock
mov
dec
scas
lds
pop
add
retf
add
mov
pushf
cmp
push
add
outs
cmp
sub
int3
xchg
inc
out
cdq
jmp
mov
push
popa
push
addr16
xor
cwde
xor
mov
or
xor
jne
dec
clc
and
adc
push
push
jb
mov
js
outs
fdivrp
gs
jecxz
stos
adc
or
jmp
push
dec
push
call
add
jge
popa
dec
mov
cwde
scas
adc
push
add
fldcw
mov
adc
je
(bad)
pusha
cmp
lock
(bad)
dec
(bad)
in
gs
test
xchg
sbb
xor
and
cmp
adc
and
xchg
test
mov
test
sti
loopne
mov
sub
fimul
inc
hlt
cli
xor
arpl
or
aaa
aas
xchg
pop
adc
scas
shl
inc
mov
test
and
mov
jae
mov
dec
mov
pop
aad
inc
mov
fst
sahf
into
mov
into
xor
inc
test
fsubr
es
mov
sbb
leave
pop
ss
jecxz
sub
ror
mov
outs
push
retf
or
outs
cmps
fist
(bad)
dec
mov
loope
out
xchg
jae
in
outs
cmps
inc
xor
repnz
lahf
and
cmp
clc
ja
inc
fdiv
stc
test
sub
sbb
xor
fdiv
jle
das
pushf
push
pop
aaa
out
test
xor
call
ja
iret
data16
out
or
inc
or
jmp
lahf
or
ja
push
outs
inc
mov
pop
stos
and
fsubr
inc
mov
xlat
sti
in
(bad)
(bad)
int
sahf
in
jns
std
mov
mov
int3
or
push
dec
aad
fs
jb
ds
das
fstp
mov
mov
sti
xchg
sbb
adc
scas
add
ficomp
(bad)
mov
mov
adc
idiv
mov
cmp
call
push
aas
pop
mov
xor
idiv
fisttp
xchg
test
cld
icebp
mov
push
jge
jmp
sbb
or
lock
cmp
addr16
xchg
inc
(bad)
xchg
mov
in
pop
aaa
xor
and
leave
ret
mov
xchg
sbb
jle
neg
ret
xchg
fnstcw
xchg
xor
es
push
in
int3
(bad)
mov
jne
ret
cmps
in
div
cmp
push
sub
mov
loope
outs
xchg
jmp
and
fadd
imul
jae
int
push
cli
retf
enter
inc
mov
or
loope
push
sub
mov
into
jns
lock
xchg
retf
push
(bad)
and
sar
dec
pop
loope
mov
jne
sbb
out
jb
lock
outs
sti
not
stos
push
outs
test
not
or
out
test
mov
or
xchg
inc
rcl
loope
dec
mov
imul
xor
les
cwde
icebp
jno
xor
aaa
sub
call
jecxz
pop
xor
arpl
push
mov
dec
fdivr
xchg
mov
dec
jnp
pusha
xchg
sub
das
pop
pop
aam
jnp
test
outs
je
mov
test
cmp
fist
cmp
xchg
cs
push
aas
mov
add
out
and
addr16
jnp
loope
push
out
sub
pusha
fincstp
arpl
cmp
movs
jmp
dec
and
mov
es
mov
pcmpgtb
ficomp
movs
jae
cwde
mov
std
shl
ja
test
jb
movs
dec
cmp
jmp
add
and
sbb
sub
inc
jg
call
outs
adc
les
out
xor
add
mov
push
dec
mov
aad
aad
jbe
outs
das
fsubr
fidiv
mov
out
add
pushf
je
stos
mov
mov
inc
push
xor
jp
cs
sar
mov
jg
enter
es
jmp
adc
sub
jle
push
dec
mov
or
ins
jno
mov
sub
or
jg
sub
cli
leave
mov
adc
test
jne
jle
push
xor
lods
out
ins
xor
cwde
sub
pop
xchg
retf
push
fist
xchg
ja
cmp
pusha
cmc
dec
cld
ret
jl
mov
jns
mov
inc
sub
push
int
mov
iret
pusha
dec
cmp
jmp
dec
mov
mov
and
xchg
stos
jecxz
and
inc
ret
mov
bnd
push
movs
test
call
add
and
movs
int
xchg
jge
fcmove
dec
out
mov
cmp
mov
arpl
inc
iret
aaa
iret
sub
adc
and
enter
dec
push
(bad)
add
xor
sub
xor
es
(bad)
cmp
pop
(bad)
scas
adc
cli
dec
retf
(bad)
movs
mov
popf
lock
jg
xor
mov
int3
jbe
ja
xchg
sbb
xchg
lods
cs
jle
push
jb
nop
(bad)
sub
mov
sbb
call
cdq
gs
les
mov
mov
mov
das
lahf
lods
mov
push
sahf
jl
mov
ret
adc
movs
ins
cwde
mov
sbb
jecxz
outs
mov
call
retf
(bad)
rcr
int3
xchg
xchg
jle
mov
movs
xor
mov
pmuludq
stos
mov
sub
dec
mov
jnp
or
pop
mov
push
fisubr
mov
aaa
pop
xchg
push
cdq
pop
fcomp
shl
in
rcl
push
and
dec
and
gs
and
jmp
loopne
test
lock
shr
ror
lea
imul
jg
je
mov
fs
mov
cwde
(bad)
fstp
sub
and
jp
dec
adc
xor
cs
sahf
adc
pop
hlt
or
fld
lock
or
fiadd
sbb
ret
dec
stos
lahf
push
outs
shl
dec
scas
lahf
je
push
pusha
dec
jb
dec
ret
sbb
pop
aam
sbb
ins
retf
ficom
push
cmp
repnz
shl
mov
sub
shr
xchg
aad
inc
cmp
addr16
inc
ins
pop
rol
movs
add
pusha
cli
mov
inc
and
mov
aas
stos
mov
push
arpl
mov
jp
xor
inc
sahf
call
xor
add
xchg
aam
lock
cld
rcl
pop
mov
repz
push
pusha
nop
add
clc
pushf
xor
cli
dec
js
sbb
mov
sbb
sbb
jmp
stc
and
xor
mov
xchg
mov
jae
add
sbb
and
dec
mov
sahf
pop
fs
mov
and
sbb
push
adc
inc
test
pop
xor
sbb
sbb
int
jb
sahf
mov
pop
(bad)
mov
scas
jmp
dec
jmp
push
xchg
gs
inc
mov
sahf
lods
cmp
out
mov
cmps
dec
push
cmps
stc
sbb
xor
retf
stc
loopne
jae
adc
dec
ret
sar
jno
and
fidivr
lds
mov
pop
jno
call
je
or
ins
mov
shr
shr
adc
ror
iret
and
sbb
cmps
or
sbb
jp
push
jnp
mov
sub
or
adc
dec
cmp
sub
cmc
out
es
shl
pop
lods
adc
jno
imul
popf
sbb
ss
(bad)
mov
stos
ret
idiv
pop
neg
cmp
mov
stos
inc
call
test
cmp
(bad)
cmp
mov
pop
in
pop
stos
cmp
jbe
cmp
ret
scas
scas
stos
fcomp
add
add
lds
popf
jp
call
add
mov
fcom
ret
imul
repnz
(bad)
push
mov
xchg
je
or
fwait
add
rcr
outs
out
in
call
adc
into
add
adc
movq
clc
dec
sbb
dec
not
in
push
stos
imul
jbe
xchg
popa
clc
out
shl
or
out
loopne
pop
sahf
mov
or
push
mov
inc
sti
in
sbb
lods
or
dec
add
and
and
and
test
ja
icebp
fst
js
movs
jns
pop
(bad)
loopne
add
into
jmp
push
pop
mov
sbb
pushf
mov
lock
(bad)
jae
mov
fs
adc
or
mov
push
int3
popa
fwait
sub
jns
icebp
push
pop
jo
fmul
jnp
test
fneni(8087
test
imul
es
pop
(bad)
out
mov
add
adc
(bad)
cmp
fs
add
jae
out
cmc
fild
popf
or
cmps
jge
mov
or
push
dec
jbe
pop
repnz
ss
adc
mov
push
mov
push
repz
popa
shl
sub
(bad)
div
xlat
out
jne
lods
mov
jg
movs
out
dec
pushf
xchg
sub
inc
cmp
ds
xchg
stc
mov
hlt
fnstsw
dec
xor
ret
pop
push
fadd
idiv
mov
sub
mov
pusha
or
dec
loope
adc
vrcpps
je
inc
enter
pop
cdq
sub
lods
mov
xchg
mov
mov
cmp
inc
add
or
mov
adc
cwde
aad
ret
cmp
fs
imul
mov
mov
xchg
out
add
imul
cmp
shr
pop
ret
dec
jbe
xchg
out
sub
inc
test
xlat
inc
imul
mov
pop
out
pop
js
jnp
cmp
test
loope
xchg
adc
mov
or
sbb
dec
cmp
fs
xlat
jl
shr
inc
test
mov
mov
call
add
mov
lea
or
sar
pop
or
call
add
in
rcl
push
sub
cdq
retf
and
pop
loope
pop
inc
jno
dec
jne
clc
cmp
xchg
jne
jle
dec
and
iret
sub
outs
(bad)
xor
popf
pop
lea
cmps
int
xor
pop
jmp
and
retf
cdq
shl
pop
cmp
(bad)
fdiv
es
sahf
push
and
int3
int3
and
add
and
in
mov
push
and
sbb
mov
sub
jns
std
pusha
jle
sub
(bad)
jo
stc
mov
xchg
mov
pushf
xlat
mov
scas
int
push
int
push
pop
mov
xchg
in
fs
mov
push
pop
fwait
mov
push
cmp
sub
and
fs
ja
cdq
popa
lds
sbb
jge
test
push
je
imul
outs
fldcw
ffreep
pop
pop
jmp
jl
cmp
pop
lea
cmp
sbb
xchg
cs
clc
pop
ins
mov
popa
jmp
dec
cli
xor
test
mov
stos
adc
daa
xchg
dec
je
ins
push
je
mov
int
mov
je
aad
movs
cdq
scas
xchg
cmp
les
xchg
push
mov
jge
and
rol
add
hlt
and
adc
dec
jmp
push
imul
sbb
cmps
inc
push
movs
xlat
(bad)
das
push
mov
cmp
test
loope
xlat
femms
and
push
add
in
inc
outs
mov
mov
iret
xchg
cmps
ss
mov
dec
stc
push
loope
jmp
fld
add
nop
int
mov
mov
mov
popf
ins
aas
aas
popa
adc
mov
lock
sbb
jnp
cmp
add
inc
push
sahf
add
cld
(bad)
inc
adc
mov
fmul
fist
icebp
mov
mov
cmp
xchg
imul
mov
pop
adc
jp
sti
fcomi
call
aas
or
cmc
inc
cmp
repz
push
add
popf
mov
mov
mov
push
jmp
mov
stos
and
push
aas
cmps
cmps
adc
call
out
test
or
mov
in
fst
out
jno
loopne
(bad)
sub
mov
sbb
and
adc
pop
dec
mov
sbb
pop
mov
push
add
pop
mov
test
push
push
rol
cld
mov
xchg
out
adc
mov
sbb
outs
jecxz
sub
cli
cmp
shr
push
xchg
imul
or
bound
rol
out
push
lods
lahf
fnstcw
push
loope
fimul
cmp
mov
(bad)
repz
xchg
mov
dec
sbb
jo
or
inc
add
dec
repnz
add
(bad)
sar
jl
retf
test
and
and
mov
pop
(bad)
sti
cmps
cs
pop
fimul
ds
in
add
push
fstp
mov
and
add
mov
gs
int
adc
push
ret
push
fdivrp
inc
mov
stos
pop
xor
jns
mov
mov
test
dec
test
add
mov
ret
mov
xchg
inc
(bad)
je
sti
xchg
sbb
and
mov
retf
mov
mov
sub
ja
mov
cs
jmp
inc
in
(bad)
xor
scas
inc
mov
repnz
daa
mov
push
xchg
jns
add
out
adc
int
mov
cmp
and
call
xlat
clc
(bad)
aas
jmp
inc
jo
xor
pushf
fsubp
adc
push
les
mov
dec
mov
push
jns
bound
in
xchg
push
pop
push
jns
sub
fwait
xchg
xor
add
adc
in
cwde
sbb
in
mov
xor
xor
add
call
aaa
rcr
push
or
(bad)
stc
add
add
out
jecxz
int3
xchg
xor
push
xor
add
aaa
cs
xchg
test
jb
test
loop
clc
adc
pop
mov
les
xor
(bad)
ficom
and
jbe
sub
sbb
jno
shl
icebp
dec
add
icebp
jge
push
xor
nop
rol
push
(bad)
cmp
pop
mov
int3
xlat
push
ror
sar
xchg
dec
add
nop
mov
xchg
sbb
into
bound
adc
aam
out
loope
dec
in
loope
push
imul
sub
pop
xchg
add
enter
(bad)
aas
mov
fadd
cmp
mov
inc
or
inc
movs
jmp
mov
sub
outs
sar
or
imul
cmp
repz
sbb
bound
test
arpl
jnp
dec
xchg
jmp
scas
sub
jno
fdivr
dec
push
xor
sti
inc
out
sub
adc
sub
pop
(bad)
pop
lods
outs
fsubr
add
test
fadd
xchg
dec
test
cmp
cld
mov
xor
inc
mov
jae
in
cwde
push
int
cs
push
call
pop
jl
mov
aas
scas
shl
sbb
push
mov
or
mov
mov
shl
add
and
retf
movs
scas
xor
and
and
leave
pop
outs
add
arpl
ficomp
sbb
sub
cmp
sbb
mov
mov
std
js
in
div
add
test
in
mov
xlat
and
pop
add
imul
mov
push
jmp
xchg
repz
pop
or
fidivr
xchg
xchg
aas
pop
jl
popa
push
sbb
mov
mov
fist
(bad)
sbb
push
movs
dec
add
lods
fst
inc
xchg
dec
pop
lahf
sbb
fisubr
rcr
xchg
and
repnz
mov
adc
jp
(bad)
adc
inc
mov
imul
ss
mov
inc
adc
xchg
add
push
mov
xor
mov
mov
mov
push
ins
retf
fstp
mov
lfence
xchg
push
mov
icebp
adc
in
xor
xchg
push
jb
lds
scas
and
out
(bad)
(bad)
ret
(bad)
mov
jo
mov
call
loope
int
inc
xor
fild
cmp
or
push
(bad)
mov
popa
adc
xor
pop
or
cs
pop
or
or
lods
mov
cmps
bound
(bad)
das
push
sub
aam
mov
jno
or
sbb
add
fdivrp
xchg
xchg
sbb
aad
xchg
retf
jmp
in
and
scas
addr16
xor
test
push
addr16
repz
cli
pop
sbb
jg
xchg
mov
std
jge
mov
repz
inc
hlt
push
xchg
mov
push
cs
out
sar
mov
pop
nop
std
fwait
mov
ins
pop
add
inc
inc
jo
rcr
dec
(bad)
sbb
pop
push
mov
aaa
mov
loop
push
pop
lods
imul
mov
loopne
inc
xchg
popf
jae
adc
pop
mov
outs
xchg
pop
pop
push
cmp
inc
add
mov
mov
loope
loopne
shl
sbb
xor
cmp
retf
sbb
jl
inc
scas
add
adc
retf
arpl
fisub
dec
mov
es
or
sub
dec
xor
retf
and
fdivr
call
shr
leave
jmp
les
fnstcw
xor
int3
lahf
add
popa
or
(bad)
scas
mov
(bad)
mov
loop
sbb
lea
jge
lahf
in
inc
inc
xor
xchg
push
cld
rcr
inc
dec
pop
jmp
je
icebp
leave
mov
sub
sub
dec
shr
int3
imul
or
inc
(bad)
outs
xor
repz
es
iret
pop
or
sub
stos
xchg
repnz
pushf
cmps
adc
lahf
gs
mov
sbb
movs
pop
shr
aam
xor
mov
push
cmp
dec
and
fild
adc
and
mov
dec
lods
push
mov
and
add
and
pop
xlat
ret
push
std
shl
mov
adc
inc
push
jg
fldenv
jno
test
leave
and
inc
retf
les
add
js
lahf
call
xor
test
or
xor
xor
cli
int
(bad)
lods
and
in
mov
out
and
stos
inc
rcl
adc
push
lods
lods
and
inc
mov
xor
sahf
lea
ins
retf
out
push
inc
inc
xor
add
mov
push
or
shl
sub
call
in
movs
push
daa
mov
cmp
dec
repz
in
out
call
mov
mov
dec
push
retf
hlt
xor
shl
sbb
bound
cwde
mov
pop
mov
ret
retf
fucomip
mov
lods
pop
inc
add
and
ret
pop
mov
jo
sub
mov
inc
fwait
in
fisubr
rcl
inc
shl
xlat
xchg
cmp
pusha
adc
test
aas
mov
imul
sbb
mov
es
loop
add
pop
cs
xor
and
mov
lds
mov
sub
sahf
fs
push
pop
in
repnz
jae
mov
cmc
aad
gs
cmp
mov
cmp
dec
out
mov
fdivrp
sahf
inc
shl
push
int3
in
pop
inc
mov
dec
jge
cmps
ins
jecxz
and
sub
adc
push
and
or
mov
inc
and
movs
xchg
sbb
push
je
pop
inc
idiv
xchg
lahf
stos
jp
mov
jl
mov
add
fs
push
xor
push
fsub
xor
dec
cmp
add
fldcw
sbb
mov
mov
xchg
movs
jns
fadd
mov
inc
and
adc
loopne
push
addr16
lock
push
and
adc
movs
hlt
mov
mov
or
scas
add
mov
fisubr
shl
outs
mov
imul
xor
jb
inc
mov
sub
aad
(bad)
sbb
clc
dec
inc
dec
scas
fwait
sbb
and
or
push
mov
packssdw
xor
daa
cmps
pop
pop
sub
ja
add
ret
push
mov
int3
fistp
gs
or
(bad)
(bad)
in
xor
mov
mov
or
loop
imul
jp
push
sub
mov
stc
in
adc
lahf
pop
jmp
scas
mov
ror
shr
xlat
mov
push
cmp
(bad)
popf
push
xor
retf
cli
xor
mov
xchg
cmp
into
sbb
push
adc
shr
in
add
ins
adc
outs
adc
xchg
lahf
in
fidiv
loope
xor
rcl
in
(bad)
pop
adc
cmc
sbb
xchg
jne
inc
inc
xchg
loopne
xor
pop
add
lea
add
bound
cmp
cmp
iret
mov
addr16
add
dec
fiadd
loope
mov
outs
sub
jno
xor
fstp
sbb
adc
out
jmp
test
sub
in
out
xchg
imul
xchg
rcr
clc
fwait
das
pop
stc
mov
sbb
or
push
cli
test
arpl
and
mov
lea
mov
popf
jl
jns
adc
test
fmulp
xor
retf
or
add
xchg
fisttp
pop
repnz
xor
mov
adc
jno
mov
pop
aas
mov
pop
dec
test
test
cmps
pushf
add
inc
xor
sub
xchg
cmp
xor
test
and
inc
retf
inc
pop
dec
mov
mov
fs
out
mov
scas
fnclex
or
mov
sub
lods
push
inc
fmul
imul
lods
dec
mov
aaa
inc
ins
sub
jl
dec
call
jo
scas
pop
sbb
add
mov
movs
repz
mov
lock
aad
adc
add
loop
or
les
and
ficomp
cmp
dec
gs
mov
out
imul
movs
call
shr
arpl
nop
std
mov
imul
push
popf
push
mov
in
mov
aam
jmp
cwde
or
popa
cli
scas
jge
mov
ins
(bad)
or
mov
jg
sti
inc
sti
fsubr
or
inc
sbb
fisubr
push
nop
test
mov
and
(bad)
fs
fdiv
int3
gs
inc
jns
mov
arpl
inc
dec
scas
pop
xchg
pop
mov
add
mov
pop
xor
aam
cld
int3
in
xchg
les
or
cwde
xor
sbb
and
xlat
cmp
dec
mov
stos
mov
cdq
fist
call
mov
sbb
test
fimul
lock
or
aad
aam
iret
jp
inc
cmps
scas
xchg
pop
xchg
in
add
inc
icebp
push
xchg
mov
int3
cdq
cmps
fs
push
jno
and
repz
pushf
pop
dec
(bad)
(bad)
dec
mov
outs
loopne
mov
stc
adc
adc
lods
out
enter
pop
dec
jl
sbb
pop
jl
jb
push
pop
mov
les
adc
imul
sbb
jne
pusha
pop
cmp
sub
or
mov
pusha
push
aas
push
add
xchg
je
mov
gs
or
aaa
cdq
inc
iret
inc
lea
nop
js
test
shr
and
movs
mov
gs
popa
enter
pop
call
sahf
inc
es
das
fwait
(bad)
mov
jne
add
cwde
add
xchg
js
sbb
and
jno
lock
pushf
out
cmc
push
hlt
or
jp
jp
mov
(bad)
xchg
jne
xor
loope
add
int3
lock
loope
loopne
retf
and
or
sti
adc
add
fisttp
js
jle
call
push
cmp
clc
xor
add
pop
jb
or
lahf
jno
and
imul
lds
mov
jmp
shl
cmp
xchg
and
push
jns
push
dec
push
pop
mov
dec
add
rcl
outs
and
and
cdq
xor
lock
dec
push
std
and
jbe
rol
push
and
fwait
xlat
leave
push
dec
jmp
imul
stos
inc
clc
push
shl
jne
cmp
jo
sbb
test
adc
and
out
ds
call
sub
mov
ss
in
adc
movs
les
sbb
out
shl
in
mov
mov
jnp
mov
xchg
or
mov
sub
mov
xlat
inc
or
sbb
xor
out
out
mov
addr16
or
push
add
call
push
jp
lds
arpl
sar
cwde
mov
in
push
out
nop
cmps
jg
cld
mov
(bad)
pop
and
imul
lds
jge
ror
stos
addr16
cmp
movs
lods
xchg
ds
stos
in
cmp
jne
or
mov
and
fld
icebp
adc
shr
ds
bound
xchg
sub
sbb
and
sub
and
xchg
or
mov
and
xor
xor
mov
inc
mov
je
jae
fsubr
aaa
icebp
out
jmp
icebp
ins
dec
inc
add
jmp
sahf
push
jmp
pop
das
dec
push
aad
dec
add
hlt
imul
scas
or
loope
sub
inc
mov
jle
std
inc
xchg
pop
mov
out
rcl
(bad)
jmp
sbb
sbb
inc
retf
rol
jl
cmp
mov
sub
sub
jae
(bad)
mov
push
adc
int
xchg
mov
jle
arpl
pushf
fdiv
cli
ss
inc
cld
icebp
(bad)
jbe
movs
test
inc
push
cmp
cmps
fwait
add
fisubr
arpl
cli
lods
fcom
pop
jnp
fstp
mov
xchg
cwde
iret
fnstsw
(bad)
jo
stos
adc
or
pop
pop
jmp
mov
dec
inc
mov
and
scas
add
add
outs
hlt
push
pusha
mov
cmp
push
sahf
fcom
pop
pushf
int
dec
pop
xor
scas
out
and
lods
pop
ret
aaa
pop
xor
loope
mul
popa
xchg
push
movzx
mov
inc
add
(bad)
cs
mov
ficom
ds
les
pop
(bad)
loopne
pop
lea
pop
sbb
das
pop
xor
fstp
in
dec
jo
(bad)
jb
xchg
jmp
out
aaa
ret
mov
arpl
adc
dec
std
xor
xor
jbe
out
push
cmps
es
dec
daa
pop
repnz
iret
sub
cmp
mov
loopne
(bad)
pushf
call
xchg
xor
push
jmp
jmp
mov
add
nop
test
popf
cmc
adc
jno
int3
inc
and
repz
jo
stos
push
or
sub
das
sahf
jmp
sbb
dec
outs
jne
loop
dec
lds
push
jle
sbb
stos
dec
xor
fs
push
and
cmp
sub
inc
js
mov
sbb
les
nop
in
ins
(bad)
sbb
add
jns
add
(bad)
dec
mov
push
neg
add
das
call
xchg
sub
in
test
pop
jmp
pop
xlat
in
in
mov
pop
cld
cwde
or
adc
mov
pop
rol
mov
mov
icebp
mov
cwde
lahf
cmp
cmp
push
not
lea
mov
cmc
outs
test
jecxz
scas
cmp
bound
dec
mov
add
inc
fsubr
sub
nop
into
jo
pop
jo
(bad)
mov
sbb
lods
(bad)
mov
(bad)
jle
in
fisub
mov
push
sti
push
and
scas
ins
pop
sbb
xor
adc
rol
mov
(bad)
into
rcr
jmp
lods
mov
xchg
dec
in
fnstcw
fdivp
dec
mov
jge
gs
push
or
mov
outs
shl
movs
mul
movs
cdq
jp
ss
outs
fidiv
test
mov
aas
ins
mov
xor
loop
(bad)
js
pop
les
push
xor
sub
(bad)
in
pop
sub
pop
les
cmps
inc
retf
push
and
adc
jbe
cwde
xchg
aam
xchg
add
fcmove
sbb
mov
lods
test
adc
jae
xor
cmp
aam
add
inc
dec
iret
scas
scas
jg
cmp
iret
pop
lock
lahf
mov
rcl
ins
or
xchg
mov
and
mov
jb
xchg
shr
inc
cmp
popa
(bad)
pusha
daa
push
in
test
jl
aad
stc
adc
pop
stos
sti
arpl
lock
push
fistp
cmps
imul
(bad)
(bad)
scas
mov
cmp
loop
mov
jge
mov
adc
and
push
(bad)
jmp
jmp
popa
retf
xor
ins
arpl
and
add
mov
pop
push
out
jno
mov
cmc
mov
add
sub
cs
dec
adc
sub
fldcw
xchg
addr16
xchg
ficom
xor
ins
inc
mov
ja
rol
inc
(bad)
lock
fwait
aaa
mov
retf
mov
adc
push
dec
js
pop
add
mov
gs
mov
sbb
mov
fs
adc
cmp
xchg
mov
and
movs
dec
mov
jle
mov
xchg
ret
mov
jl
pop
es
inc
lahf
shr
and
loopne
cmp
push
cmp
push
inc
popf
or
call
sub
dec
push
cmp
repz
or
fwait
mov
jecxz
cld
imul
inc
adc
inc
fisttp
push
repz
pop
mov
int3
mov
enter
cdq
ins
retf
pop
sbb
jae
xchg
cmp
xor
call
mov
push
mov
ja
or
push
inc
pop
pop
push
jecxz
dec
mov
mov
mov
adc
or
mov
into
out
test
xor
jmp
or
xchg
xchg
mov
jae
jmp
mov
pusha
cdq
sub
and
loop
into
add
(bad)
push
es
mov
sbb
adc
sar
sar
dec
cs
aad
jb
in
and
sbb
dec
inc
xor
cmp
inc
ins
test
in
mov
push
mov
mov
ficom
sbb
and
xchg
loop
(bad)
addr16
retf
jl
addr16
pop
or
(bad)
xchg
aas
jle
pop
dec
jmp
and
inc
cmp
fs
movs
jns
into
dec
rcr
inc
inc
movs
add
add
movs
pop
inc
xor
out
out
pop
rol
push
retf
and
push
add
lds
inc
in
sbb
push
push
out
shl
add
in
cmp
adc
ins
pushf
sub
jle
sar
adc
adc
xor
mov
sub
dec
jns
xor
xor
mov
dec
das
scas
stc
leave
xchg
movs
cs
and
xchg
xchg
push
je
mov
(bad)
and
push
mov
mov
stos
inc
xchg
popf
lods
rcr
loop
out
cmp
stos
or
mov
cmp
or
scas
out
sahf
out
lods
inc
push
xchg
xor
mov
ret
adc
shl
cmps
xchg
push
mov
scas
ins
push
(bad)
in
cmp
add
and
xchg
fild
add
sub
push
daa
push
cmp
mov
sbb
retf
jmp
call
sub
ja
cmp
dec
push
out
leave
mov
cmp
arpl
inc
push
add
mov
test
jg
sbb
clc
jae
cmp
add
arpl
cmp
jg
mov
pop
lock
xor
aad
mov
sbb
sub
xchg
sbb
mov
neg
xor
test
fs
pusha
fmul
and
aas
shl
inc
lock
shl
sahf
ret
pop
xor
sbb
pop
xchg
aad
stos
xor
xor
add
jmp
add
loope
dec
imul
test
add
dec
int
xor
in
dec
xchg
sahf
movs
dec
fld
or
rep
push
push
dec
push
addr16
mov
xchg
aas
sub
pop
test
mov
sub
jne
pop
call
sub
clts
mov
pop
(bad)
pop
push
inc
jle
(bad)
jo
loope
and
dec
repz
pushf
out
icebp
lahf
out
js
adc
jbe
rcr
inc
(bad)
test
pop
in
seta
in
or
adc
mov
fidiv
outs
shl
mul
mov
jge
dec
sub
movs
xor
ror
jecxz
sub
inc
push
fs
xor
jp
and
add
inc
push
fst
outs
std
gs
dec
sub
mov
mov
mov
popf
sub
cs
inc
mov
cmp
aas
xor
sbb
and
inc
jbe
inc
imul
nop
gs
mov
mov
or
daa
enter
leave
or
imul
fdiv
mov
push
mov
pop
(bad)
sti
add
rol
mov
jne
mov
jne
xchg
mov
neg
scas
gs
mov
fisub
sbb
pop
stc
push
push
inc
dec
and
sub
mov
leave
fistp
xor
test
xlat
gs
sbb
out
pop
sbb
lods
lds
jo
imul
aaa
ins
cmp
dec
loop
popa
pusha
hlt
push
mov
pop
arpl
addr16
cmp
xchg
push
dec
lods
xchg
mov
cmp
xor
sbb
data16
repz
movs
fldcw
sbb
std
pop
mov
cmp
cli
mov
cld
jg
ror
movs
(bad)
sub
bound
cmova
mov
sahf
mov
aas
scas
push
mov
sub
fidivr
adc
cmp
fwait
sti
and
cs
mov
add
out
mov
jmp
push
push
shr
stc
push
jle
movs
push
dec
add
dec
and
push
and
or
sahf
jne
lea
xor
xor
aam
xchg
lahf
ret
dec
std
loopne
test
or
fs
pop
ins
and
jno
xchg
sar
xor
inc
out
or
sbb
dec
pop
call
dec
mov
test
daa
aaa
data16
xchg
dec
sbb
ss
push
adc
sbb
pop
fdivrp
xchg
sbb
test
ret
mov
fld
push
add
push
cmp
and
mov
fst
jo
(bad)
mov
sbb
inc
push
adc
jb
out
mov
push
jecxz
add
jno
adc
popf
pop
inc
movs
gs
popa
cld
pop
ds
int3
sbb
inc
adc
xor
clc
imul
adc
pop
into
mov
popf
enter
dec
es
xchg
adc
in
(bad)
pop
pop
dec
dec
mov
repz
xchg
push
cs
xchg
mov
add
in
fild
out
fimul
ret
cmc
mov
std
add
bound
gs
arpl
jge
scas
ins
cmc
das
retf
popf
sub
sahf
ins
in
(bad)
(bad)
jmp
cs
pusha
sub
mov
(bad)
dec
lods
jmp
inc
jp
inc
push
repz
xchg
cmp
cmp
xor
and
mov
push
rcr
iret
mov
push
dec
cmp
mov
dec
xchg
test
pop
fucomi
mov
cdq
pop
out
popa
adc
in
inc
pop
loope
mov
into
call
shl
mov
sbb
inc
movs
gs
in
jge
jb
xor
jg
and
inc
pop
xor
and
(bad)
stc
popa
push
out
vrcpss
xchg
stos
sbb
shl
cmp
cli
mov
(bad)
push
inc
ret
imul
jl
(bad)
add
jo
xchg
and
mov
mov
sbb
add
addr16
mov
lods
div
stc
imul
pushf
shl
aas
bound
mov
shl
jbe
int
stos
pop
push
pop
push
sbb
mov
pop
movs
push
ja
mov
add
jmp
out
xchg
test
retf
mov
sub
jae
pop
xchg
push
sbb
dec
sub
and
cmp
mov
cmps
sbb
test
sub
into
pop
rol
sbb
and
test
ss
jmp
aas
ins
push
push
fadd
ror
jnp
je
adc
rcr
int3
jnp
(bad)
mov
xchg
in
mov
xchg
pop
lea
out
stos
mov
inc
repz
jecxz
test
push
cmp
cmc
jecxz
jo
(bad)
bound
daa
in
div
pop
cdq
dec
inc
cmp
and
mov
out
mov
inc
or
pop
test
out
dec
int3
lahf
add
fadd
cmps
dec
adc
in
cdq
add
into
inc
jb
add
push
adc
(bad)
(bad)
clc
cs
sub
jns
icebp
cmp
fdivrp
push
xchg
add
xchg
lds
sub
int
mov
ja
scas
dec
xor
int3
pusha
leave
add
mov
ss
xchg
sub
cmp
and
inc
in
jne
add
push
mov
std
mov
scas
les
push
sbb
xchg
sub
push
cmp
test
xchg
jns
call
push
movs
popf
xor
jg
sub
rcl
sahf
mov
sti
jle
inc
sub
inc
mov
push
shr
scas
(bad)
sub
xor
jecxz
dec
mov
clc
jns
shl
xchg
jmp
add
fld
push
fisubr
dec
cdq
push
loope
repnz
(bad)
xchg
sub
mov
ins
in
mul
pop
cmp
adc
cmp
mov
shr
jbe
cmp
inc
aas
pop
xor
stc
pop
xchg
adc
sbb
xor
xor
(bad)
jp
rol
shl
cwde
sub
inc
jns
into
jnp
sbb
jmp
sub
sub
xchg
pop
jmp
movs
fist
es
mov
lock
push
dec
retf
xor
mov
out
and
jg
jp
out
xchg
std
or
js
out
push
dec
mov
out
cdq
pop
shl
js
repz
lock
rcr
(bad)
push
rcr
aas
(bad)
out
imul
and
daa
repnz
xchg
stc
daa
test
mov
push
lods
sub
fwait
or
pop
add
xchg
cli
scas
stc
addr16
sbb
xor
shl
pop
jmp
fcmove
pop
cmp
data16
mov
add
add
or
rol
pop
scas
sub
mov
scas
xor
loope
cdq
mov
cmp
pop
push
jns
rcr
stc
std
mov
add
or
outs
loope
cmp
dec
ficom
inc
jne
mov
fisub
stc
adc
cld
mov
inc
out
imul
lock
jg
aam
popa
xor
jns
adc
push
fild
out
pop
scas
scas
hlt
inc
mov
mov
in
and
xlat
add
sub
inc
enter
xchg
cmp
into
push
retf
dec
enter
inc
add
aaa
test
pop
dec
adc
stc
mov
sub
out
cmc
fs
jg
push
push
mov
dec
in
fstp
add
cmp
inc
cmc
dec
sbb
jmp
(bad)
mov
xchg
lock
cmp
popf
dec
add
mul
pop
adc
imul
in
add
mov
xor
stos
jge
jp
jbe
das
nop
add
jo
or
cmp
mov
pop
jb
scas
repz
out
pop
xor
cmp
ret
and
mov
jb
mov
add
ja
cmp
pop
mov
gs
inc
imul
call
icebp
sbb
das
jo
dec
adc
int
jmp
iret
in
mov
cdq
push
arpl
sti
out
sti
pop
test
enter
sar
iret
(bad)
icebp
mov
adc
jno
movs
mov
or
mov
aas
(bad)
(bad)
dec
inc
loope
inc
retf
das
cmp
adc
loope
and
adc
repnz
ds
or
xchg
bound
cdq
stos
(bad)
mov
retf
mov
xchg
loope
sahf
popa
dec
test
clc
fisttp
and
jecxz
xchg
mov
arpl
cmp
pop
arpl
mov
sub
enter
ficomp
mov
push
ja
pop
popa
jb
jb
mov
je
push
addr16
dec
adc
pushf
pop
lods
pop
pop
aam
outs
add
es
mov
mov
adc
jp
(bad)
jo
mov
scas
out
xchg
scas
out
lods
retf
mov
fldlg2
mov
fs
mov
out
push
pushf
test
scas
mov
sub
ss
xor
cs
mov
(bad)
cmp
jo
jnp
shl
lods
test
inc
adc
mov
sahf
pop
lods
sub
pop
xchg
adc
xor
adc
mov
lds
in
fisub
mov
test
xor
(bad)
cmp
gs
jmp
mov
pop
jnp
mov
push
mov
nop
adc
bound
or
mov
dec
or
adc
or
in
out
cmp
sbb
add
imul
mov
aam
jp
pop
imul
and
outs
test
mov
test
mov
int3
adc
daa
fiadd
data16
imul
out
int3
fcomp
adc
cs
pop
or
jp
les
pop
sub
int3
ss
popa
repnz
int
xor
cmp
sub
pop
shl
lock
mov
scas
data16
xor
dec
xlat
push
cmps
call
sbb
push
les
inc
or
jg
pop
mov
xchg
ins
cmp
jp
scas
retf
xchg
xchg
sbb
push
pop
addr16
outs
pushf
jmp
sbb
mov
inc
int
push
shl
xor
adc
call
mov
and
jne
jmp
mov
xchg
fstp
mov
push
dec
sub
mov
sbb
push
movs
sbb
dec
xor
lods
xor
push
fisub
aaa
push
mov
xor
push
inc
cld
pushf
out
and
sbb
scas
cmp
cmps
pop
mov
addr16
cmp
xor
sti
cmp
scas
or
cmp
call
icebp
in
aas
in
mov
(bad)
fld
aad
cmps
sub
mov
mov
outs
in
popa
and
add
and
inc
push
ficom
test
int
das
fisttp
sbb
mov
mov
into
push
and
cmp
je
cli
push
dec
mov
fcomp
xchg
dec
sar
jmp
and
ret
addr16
push
mov
(bad)
test
push
mov
out
pop
out
or
dec
mov
mov
adc
cmp
adc
jne
push
cmc
mov
sub
or
fisubr
call
add
(bad)
jno
pop
pop
cmp
mov
xchg
ins
shl
sub
push
push
icebp
(bad)
adc
jge
mov
pop
xchg
arpl
push
sbb
pop
pop
imul
or
mov
das
in
sbb
mov
push
ins
mov
pop
stc
add
(bad)
inc
mov
jno
inc
or
scas
jae
add
push
and
loope
lock
int3
cmp
lahf
rol
ficomp
inc
ret
dec
or
mov
sbb
stos
hlt
cmps
sbb
fbld
pop
pop
rcr
cwde
mov
push
push
gs
push
pushf
cmp
inc
lea
hlt
add
mov
fisubr
mov
scas
cmp
inc
ins
mov
push
fcomi
fs
and
adc
or
lahf
adc
mov
addr16
nop
bound
push
adc
cmp
push
cmp
ins
push
dec
mov
(bad)
mov
into
or
dec
jne
cdq
bound
mov
pop
push
hlt
sub
fst
sub
adc
add
rcl
rol
xchg
pop
or
int
mov
nop
jnp
jle
jl
xchg
clc
nop
rol
push
std
jge
push
cli
out
fwait
mov
adc
out
push
fimul
cmp
and
and
or
jns
push
lahf
sub
rcl
xchg
mov
shr
pmaxub
dec
mov
cli
dec
sub
sahf
cli
cdq
push
lea
enter
inc
add
loope
jo
mov
test
inc
push
aad
and
xor
push
mov
or
frstor
cmp
sub
ficom
xchg
sub
sbb
repz
call
jmp
or
daa
icebp
in
xor
push
pop
push
inc
sbb
push
mov
stos
xor
xor
adc
repnz
fisub
xchg
push
adc
adc
fmul
neg
lods
fst
sub
sbb
dec
dec
dec
retf
or
pop
iret
repz
repnz
sahf
stos
and
lds
pop
adc
mov
mov
cwde
add
push
sub
aaa
call
test
imul
pop
shr
mov
(bad)
frstor
jl
sbb
retf
fimul
loope
dec
pop
add
pushf
pop
shr
jl
and
cs
stos
cld
mov
popa
dec
in
test
add
lds
lds
sub
aaa
add
mov
sub
jmp
adc
pusha
aad
adc
xor
lods
or
mov
movs
lods
cmp
and
div
sbb
sti
push
ja
jae
adc
outs
push
xor
aas
stos
xchg
sti
push
pop
cwde
pop
pop
xor
jae
jge
cwde
adc
adc
dec
lea
mov
mov
daa
cmp
push
mov
mov
dec
jmp
pop
stos
mov
mov
jo
xor
xor
pop
pop
jl
lock
pop
sbb
mov
popf
loopne
pop
mov
dec
in
jno
jae
push
mov
jmp
pop
std
push
js
dec
neg
mov
pop
iret
shr
adc
inc
cmps
out
pop
mov
mov
or
out
dec
inc
xchg
jg
scas
imul
push
adc
dec
add
cmc
pop
sti
les
(bad)
js
inc
fsub
in
retf
jmp
es
push
test
test
mov
ins
std
xlat
sub
mov
dec
retf
test
je
cdq
push
dec
cmp
push
js
rcl
loope
sbb
out
imul
mov
cmc
mov
test
aas
(bad)
mov
mov
loop
int
mov
and
dec
cs
xor
lea
in
and
add
rol
sub
mov
cmp
jae
scas
(bad)
sbb
enter
es
mov
sub
adc
jnp
aas
inc
sti
ficomp
sbb
sbb
bound
pop
fmul
bswap
add
scas
rol
jns
les
in
push
test
lahf
sbb
xchg
lahf
or
out
es
shl
int3
push
ficomp
adc
out
add
jmp
bound
add
push
outs
pop
and
cmp
push
shl
sar
arpl
or
dec
pop
or
push
(bad)
inc
ins
das
add
mov
dec
and
xchg
call
jle
retf
inc
loopne
xor
test
lock
mov
adc
scas
das
inc
push
int3
inc
shr
xchg
loopne
sub
inc
mov
cmp
in
jnp
out
lods
nop
rol
and
fdivrp
xchg
mov
loop
and
pop
push
cdq
pop
mov
out
or
out
pop
sub
or
js
cs
xchg
pop
les
push
in
adc
xor
sub
sbb
push
push
call
add
imul
push
push
pop
cmp
add
in
nop
xchg
iret
pop
and
sub
inc
ss
fstp
sar
mov
clc
addr16
and
cs
and
icebp
mov
and
or
add
pop
add
les
je
loopne
nop
xlat
adc
imul
jae
adc
out
cmps
or
in
aam
push
or
sub
push
into
pop
mov
inc
stc
pop
or
push
popf
enter
and
addr16
mov
pushf
push
repnz
popf
mov
xchg
fdiv
ja
xchg
add
(bad)
mov
fwait
push
xchg
or
sar
or
(bad)
mov
rol
ficomp
fiadd
test
(bad)
cdq
aad
les
jno
add
outs
jg
das
xor
sahf
cmp
cmp
ja
mov
inc
adc
ficom
inc
repz
imul
or
and
(bad)
and
sbb
leave
mov
retf
xor
pop
dec
fsubr
mov
cld
(bad)
(bad)
fisttp
sbb
les
ficom
ret
int3
dec
dec
jmp
in
push
imul
mov
sbb
test
stos
xchg
stc
out
cmp
dec
aaa
(bad)
jmp
mov
repz
jo
push
repnz
loop
movs
in
adc
outs
and
xor
enter
xor
out
cs
fstp
sahf
test
je
pushf
lock
ret
mov
sbb
xor
dec
cmp
or
out
fcomip
mov
push
cmp
out
out
pop
xchg
xchg
js
mov
xchg
xchg
(bad)
ret
scas
pop
jge
xlat
ret
jns
mov
fdiv
cmp
lahf
add
pop
push
jmp
mov
pop
shl
mov
or
push
into
inc
aad
and
(bad)
and
and
dec
push
push
xchg
xchg
pop
dec
and
sbb
mov
add
lock
xor
cwde
sub
shr
add
sub
pop
or
or
sub
ins
aas
rcl
xchg
movs
or
xor
aas
adc
je
jmp
pop
add
xor
test
pop
inc
push
sti
cmps
cmps
ds
loop
mov
fisub
cli
jg
lods
sub
mov
les
jb
add
loop
xchg
mov
cld
jbe
and
shl
sbb
addr16
nop
xchg
fistp
adc
test
pop
in
xchg
mov
hlt
cmp
xchg
adc
(bad)
sub
in
xchg
adc
jae
push
xchg
inc
and
cmps
add
and
pop
ja
sahf
cmp
test
inc
cs
or
inc
das
fidivr
pusha
das
xchg
test
and
(bad)
mov
mov
add
sti
(bad)
and
inc
stos
mov
add
or
stos
(bad)
popa
mov
inc
cmp
popa
in
xor
not
enter
jno
test
nop
pop
inc
xchg
cmp
fs
(bad)
push
js
xchg
push
js
loope
int
dec
jmp
(bad)
mov
pop
int3
cwde
mov
add
mov
outs
fidiv
enter
add
sbb
imul
xchg
push
pop
jle
fwait
popa
call
ds
sub
shr
add
bound
mov
inc
in
popf
or
aam
test
xchg
gs
push
xchg
xor
pop
rcl
mov
mov
rol
mov
test
inc
jecxz
inc
test
iret
fistp
xlat
mov
(bad)
loopne
jecxz
xor
mov
arpl
lods
fdiv
dec
pop
xor
int3
pop
jmp
pop
rcr
mov
gs
iret
stos
aaa
lahf
inc
mov
sbb
aad
vcvttss2si
lahf
mov
or
push
mov
inc
cmps
push
sti
sbb
sbb
rcr
dec
pop
adc
repnz
shl
mov
lahf
pop
out
pusha
xor
pop
jle
and
outs
mov
pop
inc
jmp
fs
jne
call
bound
mov
stos
and
out
(bad)
hlt
adc
rcl
sti
push
scas
hlt
stos
movs
and
push
mov
push
push
or
loop
loopne
add
mov
fdivr
mov
jbe
inc
adc
ins
add
dec
xlat
retf
addr16
cmp
cmp
jle
push
cmp
adc
cli
mov
rcl
xlat
test
inc
(bad)
or
mov
dec
jno
ins
out
dec
arpl
jge
jne
jne
push
sbb
push
inc
inc
pusha
xchg
shr
cmp
mov
into
jge
scas
fdivp
lock
es
and
enter
call
or
(bad)
les
mov
adc
int3
(bad)
jmp
push
jg
cmp
jno
cmp
xchg
jmp
test
xor
inc
add
ss
ret
cmp
inc
sub
or
(bad)
jmp
and
sub
cdq
cs
mov
lods
mov
mov
test
mov
adc
xchg
cmp
sub
movs
xchg
nop
cmp
dec
in
inc
mov
jecxz
xchg
pop
jge
sub
fisub
iret
loopne
push
stos
ficomp
mov
fiadd
push
pop
inc
loopne
call
jge
(bad)
gs
pop
paddq
jmp
adc
mov
add
(bad)
jp
jg
pop
add
jmp
push
pop
pop
add
or
adc
mov
inc
pop
gs
and
aas
(bad)
(bad)
mov
add
mov
popa
pop
adc
loopne
jg
pop
imul
or
jae
jb
cli
imul
mov
les
daa
or
jae
jecxz
repz
mov
adc
mov
adc
add
cmp
clc
push
mov
pop
(bad)
pushf
les
xchg
sub
call
aam
aaa
stos
jmp
jo
idiv
xchg
retf
lods
jmp
add
jo
cdq
pop
mov
fsub
into
or
pop
xor
mov
nop
dec
jb
sub
retf
mov
xor
dec
jnp
push
and
movs
cmps
mov
or
pop
ds
clc
stos
xchg
dec
lahf
mov
neg
icebp
mov
xor
xor
imul
sub
or
adc
mov
into
popf
adc
or
stc
div
cmp
lock
xor
or
rcr
pop
(bad)
(bad)
sub
push
aas
jae
adc
scas
xchg
(bad)
(bad)
fidiv
vmwrite
(bad)
frstor
js
mov
dec
adc
rcl
mov
mov
scas
xchg
push
mov
rcr
stos
cmp
ins
repz
fwait
mov
sbb
push
mov
stos
jl
xor
lds
aaa
stos
pushf
gs
and
ins
(bad)
neg
scas
jecxz
arpl
lods
mov
std
sub
rcl
loop
sub
xchg
cmp
mov
lds
mov
xchg
icebp
pusha
icebp
dec
xlat
mov
mov
loope
jmp
adc
inc
(bad)
loopne
jl
gs
ret
loopne
ja
xor
mov
pop
fisub
daa
push
xchg
jge
push
call
xchg
cmp
test
or
xor
nop
sbb
jno
jo
stos
and
adc
int
pop
xchg
mov
cmp
test
push
repnz
add
push
push
push
cs
jmp
loopne
mov
sti
mov
jb
cmc
inc
aad
sub
mov
lea
mov
push
or
enter
cmp
das
cmp
or
xchg
popf
mov
and
sub
arpl
xor
aam
push
leave
pop
xchg
cdq
xchg
xor
jbe
jbe
ss
xor
jns
pop
mov
and
xchg
add
cli
cmp
pusha
pop
jns
and
rol
sbb
push
jo
test
adc
mov
jle
sub
pop
inc
sbb
lock
mov
int
pop
fnstcw
add
push
gs
cld
mov
or
pop
or
lahf
sbb
mov
inc
xchg
pop
ja
dec
push
add
imul
neg
loopne
sar
loopne
test
daa
fidivr
(bad)
fdiv
sub
(bad)
rcl
inc
das
call
cmc
repz
adc
addr16
lock
cli
mov
into
ret
cmp
or
mov
scas
arpl
cmp
adc
mov
jnp
sbb
mov
int
out
stos
xchg
pop
sbb
and
(bad)
lods
ja
jmp
test
xchg
repnz
jb
mov
(bad)
dec
sbb
loopne
enter
out
inc
pop
add
jnp
test
std
mov
jmp
mov
lds
fsub
(bad)
and
xchg
jl
lea
imul
push
pop
or
mov
in
dec
in
mov
popa
xor
sub
pop
sub
std
test
dec
mov
cmp
les
retf
inc
stos
cmp
cmp
fstp
out
or
pop
fldenv
loope
jp
mov
ret
int3
lds
mov
mov
adc
pusha
loopne
pop
and
repz
add
xchg
sub
sbb
mov
stos
jp
test
xchg
mov
jb
xchg
call
sub
sbb
pop
and
ja
imul
or
test
adc
fwait
xchg
int
movs
sub
jecxz
ins
clc
push
jmp
adc
sub
and
out
or
pop
dec
imul
shr
fidiv
pop
inc
fsub
and
bound
mov
xor
pushf
or
cmp
xor
sub
sti
(bad)
fisub
sub
pop
pop
xchg
pop
jno
rol
test
fwait
test
(bad)
and
mov
pusha
xor
fisubr
xor
mul
rcl
pop
mov
call
adc
xor
jmp
scas
cwde
mov
dec
push
add
movs
in
in
daa
xchg
push
test
push
dec
cmp
sub
xor
fcomip
jne
mov
mov
js
mov
and
(bad)
adc
xlat
xor
in
adc
and
leave
data16
ins
and
std
das
jecxz
xchg
imul
xchg
pop
ficom
lods
out
xchg
and
add
mov
inc
cmps
push
test
jns
mov
xchg
(bad)
pushf
gs
pop
iret
loopne
loope
mov
dec
pop
or
lock
stc
mov
nop
push
xchg
sbb
xchg
gs
je
push
jge
mov
addr16
mov
pop
(bad)
aaa
sub
imul
cmp
jae
out
push
dec
int3
dec
cbw
xchg
ret
pop
outs
cli
push
retf
adc
stos
or
add
jg
cmps
push
aad
shr
push
mov
sbb
pop
fistp
push
add
jb
call
gs
movs
inc
ds
stos
fcomp
and
push
popf
pop
loopne
(bad)
jp
pop
jmp
je
xor
dec
jmp
ret
sub
add
sar
les
shl
popf
push
(bad)
mov
in
xor
inc
mov
jb
cs
(bad)
rep
adc
push
xor
pushf
js
cli
shr
jno
jecxz
popa
mov
mov
sbb
sti
rcr
jg
mov
pusha
xchg
add
jns
jnp
dec
(bad)
int
jo
add
test
mov
fdivr
popa
retf
into
test
and
cmc
push
(bad)
push
cmp
into
pushf
or
outs
sub
(bad)
inc
mov
mov
mov
add
sbb
aam
lea
sub
adc
or
inc
repz
inc
and
mov
pop
dec
sub
jp
cli
loope
or
out
repz
inc
sub
inc
(bad)
aad
cmp
push
retf
mov
(bad)
cwde
sti
out
dec
ins
les
repz
dec
xor
push
pop
xor
dec
int3
iret
movs
add
rcr
push
call
and
and
call
fnstcw
jmp
mov
das
popa
das
add
mov
mov
jg
rcl
pop
nop
dec
aam
mov
sbb
push
sbb
pop
jnp
mov
pushf
xlat
call
outs
mov
cmp
cmps
movs
scas
pop
xchg
push
ins
fisub
in
pop
pop
(bad)
enter
mov
jp
xchg
sub
das
hlt
dec
fild
and
(bad)
iret
cld
scas
cmp
les
int3
sbb
aam
ror
pop
lods
enter
lds
(bad)
imul
loop
fnstcw
mov
fistp
mov
sbb
pop
inc
sub
je
cld
pop
pop
xchg
jmp
jl
xchg
inc
call
adc
call
add
push
or
dec
xchg
sahf
(bad)
loopne
(bad)
in
jae
adc
sub
inc
inc
sub
mov
mov
shl
or
idiv
dec
mov
jg
mov
out
popf
and
clc
(bad)
dec
(bad)
mov
imul
mov
leave
xchg
ret
dec
xor
xchg
(bad)
jmp
rcl
out
mov
in
imul
(bad)
xchg
rcr
jecxz
ins
loop
mov
sar
into
scas
and
jmp
std
xlat
add
stos
aas
mov
push
cli
push
loopne
mov
push
cmc
retf
adc
adc
cs
xor
and
cmp
jbe
mov
xor
pop
dec
jnp
cmps
and
mov
mov
ja
jp
dec
or
jnp
or
add
xor
in
loopne
fmul
sub
fdivr
xchg
inc
sar
test
and
int3
cmp
sbb
retf
pushf
push
mov
cs
lahf
inc
jp
gs
dec
dec
jp
xor
pop
js
mov
jp
sahf
jne
mov
ins
inc
outs
fbstp
adc
call
inc
pop
stos
mov
mov
mov
jbe
dec
in
call
arpl
sub
pop
pop
inc
out
adc
in
test
stc
xchg
mov
or
mov
push
xchg
xchg
push
pusha
or
xor
scas
lods
add
push
es
inc
outs
mov
xchg
ror
(bad)
and
cld
test
je
cmp
add
push
push
mov
aas
loope
add
xor
sahf
fld
mov
mov
and
sbb
pop
dec
pop
jno
fcom
jg
dec
popa
std
sbb
pop
fwait
jg
loope
xlat
push
inc
loopne
xchg
xor
pop
mov
test
lods
in
cdq
adc
sub
and
mov
push
xor
inc
push
pop
and
movs
xchg
bound
movs
cwde
inc
push
test
test
(bad)
fidivr
xlat
sbb
jae
fs
ret
add
cmp
loope
pop
jg
xchg
aas
mov
jae
sub
scas
fwait
sbb
inc
or
and
fwait
jmp
or
fmul
inc
(bad)
lahf
xor
cmc
dec
mov
jp
xchg
pop
repnz
push
fstp
movs
retf
pop
xchg
pop
js
or
data16
mov
fst
movs
mov
int3
in
popf
fldcw
xchg
jmp
xchg
rol
adc
movq
aam
std
je
pushf
sub
cmp
fidivr
(bad)
pushf
fidivr
int3
ja
in
ins
pop
mov
mov
mov
push
cmps
push
(bad)
mov
outs
push
out
sub
inc
mov
imul
leave
stos
dec
dec
outs
ror
ins
lods
and
mov
jg
dec
in
inc
xchg
xchg
jmp
mov
das
in
(bad)
xchg
pop
lods
push
imul
adc
push
(bad)
arpl
xor
push
adc
popf
leave
arpl
shl
es
sti
push
add
push
cmp
icebp
mov
rol
dec
add
cli
js
mov
or
outs
dec
sbb
add
sub
mov
and
hlt
sbb
adc
in
xchg
cwde
cdq
sub
retf
fnstcw
mov
ja
inc
(bad)
push
fld
jae
xor
xchg
pusha
inc
cmc
push
rep
popa
lahf
int
sbb
mov
popa
push
xor
repnz
pusha
cs
sub
jno
xchg
and
push
jecxz
push
stos
mov
cmp
or
xchg
gs
sub
mov
adc
mov
retf
xor
std
xor
inc
and
addr16
repnz
imul
push
mov
cmc
movs
loope
jecxz
mov
pavgw
cmp
int3
adc
ret
mov
in
call
or
in
mov
add
push
aam
(bad)
mov
gs
mov
hlt
jecxz
add
mov
cmp
pop
mov
(bad)
fwait
loopne
adc
sub
pop
out
mov
aad
pop
xor
mov
fwait
lods
clc
xchg
retf
mov
popa
mov
cmp
mov
sub
adc
dec
push
out
mov
daa
dec
jnp
or
dec
aam
test
jp
adc
sub
sti
popf
aam
out
sub
add
ins
jnp
mov
fadd
inc
out
jle
xchg
add
push
(bad)
xchg
fwait
pop
jno
dec
push
sbb
out
cdq
xor
sub
and
adc
xor
mov
jp
or
out
sub
cmp
fcmovbe
sub
vxorps
jecxz
(bad)
xor
hlt
sub
cdq
cmp
jecxz
sbb
inc
mov
jb
mov
or
xor
or
fnstsw
fdivr
outs
movs
jae
mov
nop
jmp
pop
mov
and
pop
mov
in
pop
mov
loop
fwait
out
sbb
fbld
rol
or
jo
inc
and
cmp
xlat
test
adc
ds
mov
push
xor
adc
sub
loop
jb
ret
inc
mov
mov
push
in
mov
and
add
repnz
cmp
fadd
inc
dec
es
mov
sti
mov
sub
inc
in
lock
mov
loope
mov
and
not
xchg
inc
add
in
lock
cmc
jl
lea
lock
push
cs
or
movs
or
fiadd
inc
lock
imul
xchg
cmc
mov
jb
retf
test
and
inc
xchg
repnz
std
movs
or
mov
mul
data16
or
sbb
dec
dec
ja
(bad)
sti
inc
stos
sbb
cmp
test
push
imul
test
(bad)
daa
in
cmp
(bad)
xlat
movs
xchg
test
movs
mov
cli
mov
pusha
xor
mov
ffreep
jmp
outs
leave
push
lods
push
push
or
adc
xlat
dec
bound
jle
or
jae
fsub
movs
pop
xor
xchg
sbb
dec
clc
movs
mov
inc
mov
push
and
stos
push
rol
hlt
out
dec
sbb
(bad)
xchg
rcl
adc
xor
sbb
mov
push
add
or
cdq
xchg
test
sbb
sahf
mov
lods
je
pop
xchg
jno
imul
dec
inc
adc
xor
cmp
mov
pop
pop
call
ins
xlat
std
gs
xor
mov
dec
idiv
mov
push
cmp
lds
fs
aad
(bad)
sbb
pusha
movs
add
jnp
mov
add
push
mov
adc
cmp
adc
stos
in
mov
cmp
pop
daa
jno
xor
loope
dec
into
push
scas
fmul
pop
mov
outs
psubsb
hlt
push
and
sub
iret
jb
in
cwde
mov
loope
shl
pop
fxch
mov
push
hlt
dec
cmp
mov
arpl
xor
mov
popa
jl
pop
mov
bound
adc
mov
ret
and
pop
out
cwde
xchg
pusha
sbb
mov
repnz
or
or
sbb
cwde
stos
pop
test
xchg
sar
mov
enter
and
and
jmp
cmp
mov
fadd
clc
das
fwait
ja
div
shr
adc
inc
into
test
popf
sbb
scas
push
or
pop
pop
adc
dec
inc
adc
out
mov
and
nop
fsubr
push
cdq
sbb
lock
in
sub
ret
imul
mov
lock
jnp
test
pop
push
call
push
cmps
sbb
(bad)
pop
cmovns
cld
es
mov
addr16
mov
sti
mov
or
xor
fcmovnb
ror
fisub
mov
pop
push
ret
push
add
fldenv
imul
xchg
shl
add
into
retf
imul
ficomp
push
xor
add
xchg
jns
aas
fimul
imul
out
jbe
inc
movs
clc
repz
xchg
cli
jg
jp
pop
fdivrp
pop
push
pop
bound
cmc
shr
or
push
neg
lods
btr
xchg
sbb
mov
aas
xchg
aas
in
cwde
dec
xor
adc
in
daa
pop
mov
shld
pushf
jne
pop
cmp
push
mov
mov
jge
mov
xor
btc
sub
fwait
enter
or
push
xchg
mov
jg
rep
and
call
shl
xchg
pop
jl
repz
mov
sbb
mov
adc
sub
and
xor
inc
scas
or
ins
xchg
mov
cmp
ror
add
mov
sbb
and
test
mov
push
ja
loopne
push
aaa
dec
in
scas
in
js
hlt
xor
mov
xor
mov
nop
adc
fwait
cmp
(bad)
or
jecxz
ja
cmps
shl
mov
outs
mov
mov
push
es
shr
sbb
xor
aaa
(bad)
pushf
dec
jle
and
pop
fbld
adc
push
cmp
jle
icebp
mov
push
imul
xchg
push
pop
jnp
add
dec
shr
in
aaa
imul
ins
(bad)
cmps
sbb
je
mov
cdq
jmp
outs
rcr
in
in
xor
imul
scas
mov
xchg
inc
out
push
add
jle
push
in
or
or
aas
pop
jl
test
dec
ret
call
into
cmp
push
dec
(bad)
loope
pusha
xor
sbb
out
cmps
cld
xchg
(bad)
(bad)
xor
(bad)
shr
jo
pop
int3
xchg
push
mov
les
inc
jb
mov
lahf
mov
pop
sbb
cmp
data16
sub
das
out
dec
jno
scas
mov
loope
pusha
(bad)
dec
jno
sbb
mov
mov
aam
fild
cmps
mov
call
sar
or
and
movs
loope
leave
jecxz
ins
xor
mov
pop
icebp
lds
jnp
imul
dec
xchg
push
push
imul
(bad)
push
ds
xchg
xor
and
cmp
clc
xlat
stc
or
xchg
imul
and
inc
nop
xchg
mov
jg
xchg
xchg
ret
(bad)
int
std
push
push
pop
imul
mov
sub
test
push
lods
sbb
mov
or
(bad)
sbb
jne
mov
inc
aaa
pop
imul
mov
test
sbb
(bad)
je
jno
mov
int3
pusha
mov
jne
mov
cli
or
aas
pop
popa
adc
mov
aaa
dec
repz
test
into
push
jg
iret
cmps
cmp
out
cmps
mov
scas
sub
pop
jns
pop
sub
dec
and
dec
je
jbe
pop
dec
repz
add
and
imul
pop
add
adc
mov
xor
jge
into
mov
rol
pop
push
cwde
push
xor
fcmovu
jmp
mov
mov
test
sub
jle
scas
cdq
xor
mov
lea
add
pop
or
aam
sbb
scas
das
aas
add
cwde
or
sbb
dec
mov
loope
test
push
xor
xchg
cld
pop
(bad)
out
sbb
xchg
dec
sbb
ds
test
adc
push
dec
sub
rcr
std
pshufw
test
sbb
xchg
movs
mov
(bad)
and
out
cmp
ja
div
lds
mov
sar
sahf
ja
ins
cmps
push
test
rol
mov
loopne
jbe
xor
mov
dec
loopne
xchg
leave
inc
dec
and
in
not
jnp
adc
movs
pushf
or
movs
movs
or
sub
mov
loop
inc
sbb
push
or
xchg
stos
pop
adc
dec
dec
pop
mov
push
mov
fdivr
xchg
push
jbe
inc
or
cld
ds
pushf
push
inc
lahf
cmp
out
int
(bad)
adc
lds
xor
inc
daa
mov
loop
mov
(bad)
iret
jb
push
lds
rcl
neg
das
push
cmps
adc
mul
jno
mov
test
clc
mov
retf
es
retf
mov
(bad)
jae
adc
xor
push
pushf
xor
jmp
sbb
sub
xor
lock
add
adc
loope
test
sahf
jmp
ss
loopne
add
test
push
pop
cdq
in
movs
call
movs
lods
and
sub
jge
out
hlt
jp
dec
and
pop
call
push
arpl
leave
cli
hlt
or
ja
leave
ds
call
aad
(bad)
popa
aas
aaa
test
pop
mov
fldcw
sbb
or
cli
mov
inc
mov
mov
jbe
das
sbb
test
arpl
xor
pop
int3
mov
mov
sbb
jns
mov
adc
lods
pop
mov
push
pop
jle
mov
sbb
add
mov
retf
mov
jo
out
pop
inc
outs
pop
jmp
dec
push
xor
aaa
dec
hlt
mov
inc
je
pop
push
retf
sar
pusha
movs
inc
es
sbb
les
mov
xchg
lods
std
push
scas
pushf
mov
hlt
inc
or
or
shl
mov
xor
jbe
shl
inc
iret
pop
push
in
mov
mov
out
out
push
daa
inc
int3
xchg
loopne
stc
imul
adc
stc
xor
mov
sbb
xor
cmp
pop
mov
cmp
ins
cs
ja
inc
fldcw
mov
jmp
inc
in
cmp
es
xchg
int
dec
int3
sub
(bad)
mov
fcom
inc
lods
enter
dec
and
call
test
pop
adc
fsubp
lods
inc
add
fimul
and
cs
or
stos
add
or
loope
movs
div
pop
pop
push
shr
dec
fisubr
pushf
(bad)
adc
mov
bound
out
and
jg
dec
mov
and
cld
pop
xchg
push
xor
jmp
cs
icebp
hlt
lahf
and
cmp
movs
sti
ret
ret
loopne
xor
jae
and
inc
repnz
cdq
mov
jmp
pushf
jecxz
mov
jns
scas
inc
js
movs
outs
xchg
ror
daa
xchg
call
jmp
cld
mov
fcom
cli
out
aas
out
mov
pop
or
sub
shr
inc
mov
jno
cmps
jne
adc
xor
adc
mov
fwait
out
arpl
sbb
dec
add
aad
popf
cld
push
or
aaa
shl
shr
jge
dec
repz
in
inc
push
int
data16
mov
push
xchg
jo
jb
and
pop
cmp
mov
leave
movs
stc
retf
and
or
cmp
pop
lods
mov
mov
repz
sub
mov
xor
mov
stos
ret
xor
mov
pusha
test
call
shl
or
push
ret
or
cli
xchg
adc
xchg
aad
jb
jae
xor
adc
dec
jo
inc
pop
ins
fidivr
dec
or
xchg
and
shr
or
inc
rol
retf
push
push
popf
out
loop
sbb
movs
ins
ss
out
mov
sub
inc
movs
pcmpgtd
aad
iret
stc
add
outs
shl
or
push
ret
push
dec
outs
jmp
sbb
pop
arpl
sahf
cld
push
xor
and
mov
pop
loop
dec
add
mov
add
test
mov
call
add
ja
cmp
sbb
pusha
push
dec
jmp
mov
test
xor
call
inc
add
dec
out
popa
push
call
loopne
lds
fucom
outs
aaa
sub
popa
push
js
daa
(bad)
repz
dec
push
sbb
and
sub
ror
inc
jae
adc
repz
and
test
push
es
pop
push
inc
mov
test
bound
out
push
push
cmps
aaa
push
repz
mov
scas
dec
call
mov
cmp
xchg
and
mov
mov
(bad)
dec
outs
push
adc
test
xor
stc
cld
aaa
sahf
pop
outs
and
fidiv
xor
cmp
dec
xor
pop
mov
push
test
xchg
outs
sahf
jmp
jno
adc
test
outs
repnz
pop
rol
dec
or
push
sti
cmp
lods
aad
and
ret
inc
jmp
mov
and
and
inc
cmc
cwde
xor
out
mov
push
daa
inc
mov
ret
aaa
inc
sbb
cmp
out
or
pop
sbb
aaa
or
inc
jle
jnp
xchg
sahf
std
jecxz
loope
push
xor
loopne
addr16
aad
inc
mov
aaa
pop
clc
sbb
mov
or
jbe
jo
gs
stos
inc
fidiv
mov
out
xor
cmps
jnp
repnz
or
inc
test
or
adc
sub
add
leave
data16
adc
or
pop
mov
or
in
pop
ret
bound
mov
and
push
cmps
xchg
inc
pop
int3
mov
sti
out
push
mov
push
xor
xlat
inc
fwait
adc
retf
xchg
mov
(bad)
outs
neg
out
sti
push
inc
neg
push
xor
(bad)
or
fsub
jecxz
cmp
pop
and
xchg
jmp
pop
fcom
xchg
neg
xchg
cmps
jnp
cmps
ins
stos
push
mov
add
sbb
dec
rcr
mov
les
sub
mov
mov
inc
cmps
aas
pop
jle
stc
mov
dec
les
and
dec
movs
xchg
pop
pop
mov
push
mov
cmps
sub
mov
mov
dec
mov
jge
loope
jmp
or
vpcmpeqw
movs
scas
aas
pop
ss
mov
push
pop
not
push
fmulp
mov
xchg
mov
mov
outs
int
adc
fwait
mov
pop
clc
mov
lea
inc
mov
adc
sub
mov
cli
jmp
test
aas
xchg
test
js
cmps
retf
dec
out
ss
(bad)
xor
xor
inc
dec
lea
adc
and
or
add
and
sbb
ret
mov
(bad)
js
idiv
das
inc
inc
adc
cmp
call
sbb
sub
pop
jbe
mov
inc
fadd
sar
mov
xor
pop
cmc
push
jg
push
js
aad
sbb
push
jbe
inc
es
pop
pop
test
ds
cdq
cmps
jo
in
jecxz
mov
add
mov
sar
push
or
call
repnz
xchg
iret
lods
inc
jp
jne
fwait
test
mov
jp
inc
pop
leave
xchg
fldcw
inc
adc
add
pop
data16
push
imul
cmp
fwait
mov
std
mov
cmp
loopne
gs
xchg
ins
inc
xor
xor
int
mov
test
aas
sub
and
js
push
and
mov
icebp
and
retf
inc
inc
movs
mov
fstp
add
sbb
aaa
adc
neg
xor
dec
cli
movs
out
aad
loop
xor
repnz
(bad)
ds
cdq
mov
icebp
cmps
xor
rcr
mov
mov
mov
(bad)
mov
aam
data16
xor
xor
movs
mov
pop
xchg
and
cli
stos
fldenv
iret
inc
push
sub
pop
cmp
push
rcl
pushf
popf
xchg
fist
stos
into
cmp
mov
inc
xchg
ja
adc
pop
fs
das
and
fdiv
pop
xor
test
rcr
cmp
or
std
jbe
mov
mov
fidiv
add
and
xlat
cmps
and
push
inc
mov
aad
inc
cmps
ja
jbe
movs
(bad)
inc
rcr
test
push
jae
rol
xchg
jle
cmp
cld
cmp
pop
je
scas
mov
mov
stc
push
jo
jmp
popa
cwde
cmp
mov
test
push
cmp
sub
mov
cld
adc
imul
xchg
loopne
sub
mov
jmp
popa
add
cld
or
pop
add
je
xchg
jbe
arpl
pusha
xchg
mov
enter
mov
outs
or
dec
adc
sbb
cmps
inc
cmp
cmc
sbb
add
test
push
cld
call
retf
xor
ds
fs
dec
imul
cwde
fstp
addr16
ins
pop
loop
rcl
rol
xor
xor
mov
fcmovnb
push
movs
mov
push
mov
icebp
dec
push
or
push
jg
xor
mov
cmc
mov
push
add
sti
dec
popf
add
ror
cld
cmc
and
mov
sti
cmps
or
cmp
ins
xchg
adc
or
sar
and
mov
or
cmc
int
push
sub
inc
push
xchg
jle
pop
cli
dec
shl
jns
in
mov
dec
push
adc
add
rcl
arpl
imul
pop
fild
and
jmp
mov
push
mov
loope
out
nop
pop
push
inc
dec
push
in
sbb
adc
and
shl
outs
test
jge
and
inc
leave
mov
mov
push
cmps
fadd
cs
mov
je
enter
dec
cmp
(bad)
sbb
mov
pusha
in
cli
sub
std
push
or
lods
inc
xchg
data16
popf
pop
popf
push
adc
xchg
push
cmp
aaa
es
test
mov
jbe
jmp
fucomip
mov
out
jmp
mov
jne
outs
jg
push
lea
aad
cmp
pop
lods
icebp
cmc
fisubr
test
mov
pop
push
sbb
cdq
mov
mov
jbe
lods
jns
fwait
shr
(bad)
sbb
scas
cmp
loope
or
sbb
jo
jo
inc
(bad)
das
jns
aam
inc
and
cmp
loope
adc
in
out
int
fcomp
call
lock
adc
mov
(bad)
xor
push
fistp
cmp
ret
stos
(bad)
xor
(bad)
(bad)
pop
mov
and
in
pop
or
dec
in
jo
xchg
sub
retf
mov
add
pop
inc
movs
mov
sbb
and
mov
outs
push
push
sub
inc
call
enter
shl
cmp
fbld
clc
xchg
adc
stos
pop
inc
ss
cmp
not
mov
rep
(bad)
clc
xchg
clc
enter
out
stc
out
imul
nop
movs
xor
in
sbb
xor
pop
aaa
pop
dec
cmp
lds
movs
push
aaa
dec
jno
aaa
xor
aam
loop
sub
retf
dec
xlat
scas
cmp
jge
aaa
es
fwait
mov
enter
cmps
sbb
imul
dec
imul
in
dec
and
shl
xor
retf
sub
xor
imul
mov
popa
pop
lods
push
(bad)
push
pop
ins
rcr
leave
sbb
and
(bad)
in
mov
sti
sub
cmp
add
xor
int3
xchg
popa
xor
mov
mov
in
les
data16
addr16
mov
lods
cmps
mov
das
dec
dec
fadd
fadd
aam
aas
sub
or
mov
(bad)
std
dec
scas
cdq
sti
or
jmp
div
xchg
arpl
add
sub
aas
jbe
xchg
mov
jne
daa
mov
xor
rol
push
jp
es
gs
rcr
and
jl
jg
inc
shr
neg
pop
sbb
shr
sub
sbb
popa
inc
aad
movs
push
shr
pop
pop
ins
lods
pushf
pop
retf
rcr
pop
(bad)
sub
xchg
and
pop
int3
sub
cmc
mov
cdq
or
cmp
je
and
(bad)
je
lahf
adc
push
push
stc
xchg
sub
add
add
repnz
push
push
inc
or
stos
lahf
xchg
push
sub
mov
movs
(bad)
xor
xchg
test
shl
mov
retf
inc
ja
stc
or
or
jb
fadd
mov
jbe
cwde
inc
aaa
data16
sbb
test
cmps
loope
sbb
dec
add
pusha
addr16
icebp
jo
jecxz
jnp
js
into
sbb
std
cmps
out
mov
hlt
adc
jb
sahf
xchg
repz
jmp
mov
sub
sbb
hlt
xchg
pushf
fstp
shl
xchg
xor
push
imul
in
in
jge
jb
icebp
xor
rol
jmp
mov
std
mov
add
hlt
and
xchg
adc
loopne
pop
and
call
mov
retf
cld
sbb
scas
ror
push
add
stc
and
mov
movq
pop
pop
scas
dec
dec
push
adc
out
shl
mov
sbb
inc
in
outs
pop
inc
pop
ins
(bad)
jo
and
jnp
cmp
dec
push
adc
mov
cld
cmps
or
ins
mov
movs
sub
call
mov
push
stos
imul
out
push
mov
out
cmps
sti
fist
dec
sbb
in
mov
jg
ins
push
(bad)
out
inc
mov
mov
rcr
retf
inc
in
mov
iret
and
push
addr16
cwde
stos
xchg
(bad)
call
mov
jge
dec
out
mov
jge
mov
jp
das
xchg
(bad)
neg
or
fwait
inc
dec
jb
clc
push
or
xchg
pop
stc
pop
outs
mov
sub
movs
movs
imul
call
add
mov
retf
stc
imul
dec
mov
mov
cmpxchg
cmps
add
mov
or
jne
cdq
movs
out
fld
and
inc
adc
dec
xor
inc
cmp
xchg
retf
dec
vmovdqa
sbb
xchg
arpl
out
xor
mov
jne
ja
mov
and
inc
jle
mov
dec
mov
xchg
xor
and
mov
adc
adc
das
nop
mov
pop
jg
push
cmp
imul
jns
leave
ror
xor
jp
mov
add
clc
sbb
stc
leave
xchg
and
test
loop
sub
or
neg
inc
or
adc
dec
loope
test
aam
in
sbb
(bad)
fldenv
in
dec
inc
xor
xchg
dec
aas
push
adc
jo
push
fs
in
add
and
jle
xor
or
xchg
jmp
adc
mov
push
addr16
mov
sbb
sub
cmp
jns
addr16
mov
add
push
(bad)
jmp
xor
push
iret
cmp
test
and
dec
iret
mov
inc
push
pop
and
pop
mov
in
xchg
ret
jecxz
das
sbb
outs
gs
and
mov
mov
dec
lods
in
bound
fisttp
fadd
jecxz
xchg
inc
inc
xor
test
mov
xor
cmc
clc
mov
hlt
pop
push
(bad)
js
sbb
out
adc
inc
mov
jae
imul
cdq
sub
pop
test
jnp
pop
out
repz
mov
mov
dec
sbb
sub
dec
ins
pop
push
fdivr
mov
mov
stos
push
cdq
xor
add
sbb
xlat
mov
test
xchg
push
lods
retf
add
and
rcr
daa
or
fwait
jecxz
outs
jmp
sub
jno
(bad)
pop
inc
ss
mov
fsubr
dec
fistp
loopne
ret
dec
loopne
bnd
dec
ss
sbb
jmp
hlt
push
sub
inc
fs
retf
icebp
fadd
ins
(bad)
xchg
push
rcr
sub
adc
adc
jmp
popa
int
das
fld
js
lea
pop
jl
add
call
gs
test
pop
and
out
loop
sub
pop
inc
outs
push
cmp
(bad)
jae
mov
xchg
not
in
outs
pslld
jbe
jg
xchg
jp
xchg
loope
xor
xor
cs
and
mov
dec
cli
gs
mov
mov
test
dec
jle
jp
movs
mov
arpl
adc
test
add
jnp
pop
ins
mov
and
inc
mov
push
push
jbe
pusha
cli
inc
movs
xor
mov
fnsave
nop
out
daa
cmps
mov
gs
cmc
xchg
xor
iret
les
in
cmp
push
stos
repz
dec
lock
(bad)
in
ret
in
jae
mov
mov
mov
(bad)
imul
xor
inc
add
mov
shl
arpl
inc
mov
and
inc
mov
daa
pushf
hlt
in
in
loope
(bad)
repnz
rcl
sbb
fsubp
out
stos
mov
mov
jbe
or
into
stos
sub
out
es
ins
ror
call
inc
repnz
mov
jge
mov
xchg
sub
mov
xchg
not
lods
enter
retf
iret
and
cmp
retf
fiadd
lds
addr16
leave
jmp
leave
ss
push
xor
sub
out
push
pop
push
cmp
outs
cmps
bound
cli
repnz
adc
js
dec
sbb
mov
cmp
pop
xchg
jbe
out
or
mov
adc
ins
aaa
pcmpeqw
gs
rcl
cmps
movs
sbb
bound
mov
pusha
xor
xchg
lahf
mov
pop
dec
popf
mov
sub
jne
or
add
mov
(bad)
jns
(bad)
aaa
lea
push
fld
sub
mov
(bad)
aam
sbb
jg
jp
jae
ror
sub
loope
inc
in
std
or
xchg
int
jo
and
(bad)
es
clc
dec
mov
jno
aad
(bad)
cmp
ja
fstp
ds
outs
and
jg
jg
push
push
cwde
pusha
test
stc
push
sahf
pop
enter
mov
stos
push
xor
sub
inc
pop
xor
jo
sub
jge
mov
pushf
sub
icebp
mov
ins
fbstp
inc
xchg
and
scas
cmp
ds
rol
jo
or
enter
xchg
dec
inc
adc
int3
fwait
clc
lds
mov
sbb
mov
xlat
mov
cdq
sub
mov
add
mov
ins
mov
inc
pop
or
pop
xchg
iret
sbb
and
add
ins
std
push
sub
jge
jne
mov
imul
mov
lds
mov
not
and
sub
fcmovnbe
inc
outs
xchg
add
(bad)
or
cli
sbb
adc
mov
lahf
loope
repz
hlt
idiv
ror
push
or
sbb
fs
out
jns
in
mov
mov
test
imul
hlt
test
mov
popa
enter
imul
mov
mov
mov
test
dec
(bad)
cld
call
jmp
xchg
sbb
push
xor
xchg
ss
ror
sub
inc
aam
jp
fs
xor
mov
or
retf
je
push
adc
sti
retf
(bad)
dec
xor
std
inc
mov
ret
inc
lea
popa
pop
xor
adc
stos
sbb
adc
xchg
pop
push
push
inc
(bad)
adc
cld
xchg
fsubr
mov
in
cs
stc
popa
ret
fcomp
pop
jb
sbb
mov
jnp
in
lods
bound
sti
or
sar
sbb
repz
sbb
mov
jge
xchg
sub
xchg
mov
push
fdivrp
les
stos
and
inc
xor
dec
jns
mov
fwait
xchg
xchg
lahf
imul
pop
bnd
mov
mov
rol
push
mov
and
jmp
pushf
pop
lahf
fsub
fdivrp
imul
aaa
jge
ficom
rcr
cld
mov
fisubr
jl
jno
mov
std
(bad)
push
repz
mov
ror
push
loope
jb
sbb
popf
stos
sbb
pop
xor
ins
adc
out
popa
popa
jmp
aaa
sub
fmul
ja
xchg
dec
pop
jecxz
and
pop
aad
or
inc
ss
mov
mov
(bad)
fwait
sti
js
xchg
(bad)
xchg
test
push
adc
loopne
push
psllq
xchg
mov
inc
push
pushf
cmp
cdq
sbb
stc
les
push
mov
jb
imul
xlat
nop
loopne
(bad)
and
push
or
aam
ja
ret
ret
and
ret
test
push
dec
cmp
sar
aaa
fcom
inc
pop
or
sahf
sti
lock
ins
outs
or
ret
das
std
pop
xchg
jno
and
stc
add
scas
gs
jo
add
push
xor
add
idiv
les
jecxz
mov
sub
outs
mov
outs
imul
ror
jno
xor
and
test
retf
pop
hlt
mov
int
ficomp
fcomp
mov
jecxz
iret
push
or
pop
enter
idiv
jp
or
in
jo
call
inc
xor
push
in
test
lock
ret
sti
adc
mov
or
push
and
or
mov
inc
inc
dec
add
dec
sub
xor
shl
mov
or
sbb
enter
(bad)
push
and
jne
mov
mov
sub
mov
mov
cmc
inc
or
movs
(bad)
mov
and
pop
call
xchg
adc
loope
iret
in
sar
or
add
int
push
sti
int
(bad)
push
sbb
mov
loop
or
es
test
dec
sar
mov
and
bsf
jne
jl
(bad)
(bad)
pop
adc
xchg
(bad)
push
mov
movs
sbb
cmps
adc
aam
movs
inc
stos
cmp
fucom
nop
mov
dec
aad
stc
mov
mov
cmp
in
test
xlat
or
sbb
xor
push
int3
ret
sub
push
push
iret
dec
lods
call
mov
in
jmp
lds
cli
cmp
imul
call
cmps
push
vmovupd
push
mov
push
or
push
loopne
call
adc
jnp
cmp
fwait
loop
cmp
adc
hlt
xchg
mov
jge
mov
test
mov
mov
adc
xor
add
xchg
div
cmps
pusha
push
cld
loope
nop
mov
xchg
push
jmp
jno
je
jecxz
ficom
loope
xchg
test
cmp
aad
xchg
sar
mov
dec
fild
rcr
add
pusha
fnsave
bound
jb
lea
jecxz
int3
mov
out
arpl
jg
das
jmp
cmps
aad
xchg
(bad)
xchg
ret
in
sahf
cwde
xor
popf
fidiv
or
pop
add
repz
dec
mov
lods
mov
and
sbb
cdq
pop
cs
sub
pop
cmp
test
adc
xchg
xor
sahf
xchg
pop
ins
mov
mov
movzx
nop
rcr
into
cli
push
or
jg
jb
in
jmp
xlat
mov
or
and
push
outs
cmps
dec
lahf
and
mov
addr16
lds
jbe
pusha
fld
add
and
xchg
mov
leave
ret
mov
mov
mov
(bad)
(bad)
xchg
in
retf
sbb
adc
nop
imul
in
icebp
pop
arpl
shr
sbb
mov
mov
movs
rcr
clc
push
popf
jg
cdq
dec
and
mov
rol
popa
or
popa
adc
ret
jl
in
pop
xchg
jo
jnp
cs
inc
setnp
mov
add
aaa
cdq
frstor
or
das
or
sub
(bad)
pop
and
movs
push
sti
jp
xor
xchg
imul
xor
mov
pop
jg
neg
mov
pop
rcl
sahf
inc
xor
xor
adc
adc
cmps
in
fldenv
cmps
push
inc
xlat
sbb
mov
mov
and
nop
aas
jle
dec
fist
popa
sbb
xor
sub
or
int
loopne
mov
pop
jmp
movs
iret
dec
xor
das
add
push
in
cmp
inc
test
or
sub
mov
xlat
mov
iret
sbb
and
out
movs
sub
je
mov
shr
xchg
mov
ss
div
mov
push
enter
pop
nop
sub
xchg
mov
ins
in
(bad)
out
mov
mov
jecxz
jecxz
cmps
mov
and
ret
sub
add
aas
not
jg
push
int3
stos
sub
dec
retf
clc
cmps
rcl
out
inc
ret
fild
mov
arpl
adc
xchg
fstp
(bad)
in
sub
xchg
push
jbe
scas
ds
ds
jmp
in
mov
or
jmp
inc
add
sbb
mov
stos
jbe
in
push
(bad)
pop
je
xchg
iret
and
daa
pop
mov
in
and
cli
sbb
and
in
pop
cli
mov
mov
aas
sbb
jg
mov
and
or
push
push
pop
push
das
mov
fs
daa
xlat
push
shr
mov
inc
cmp
or
rcl
data16
mov
push
mov
jne
lahf
leave
lock
ret
fwait
inc
xchg
imul
retf
push
movs
mov
lods
push
mov
aaa
push
popf
aad
fidivr
mov
mov
inc
imul
sbb
and
imul
mov
stos
aaa
mov
push
pop
adc
out
pop
sbb
mov
(bad)
pop
adc
in
mov
or
xchg
pop
rcr
in
xor
stos
lahf
xchg
sbb
and
sbb
inc
(bad)
maskmovq
test
cwde
add
loop
adc
inc
jmp
scas
lods
aas
pop
imul
xor
mov
jae
mov
loope
jne
movs
fnstsw
call
aam
mov
xchg
inc
jmp
(bad)
movs
sbb
xchg
xor
dec
lock
jb
mov
pop
outs
std
adc
in
inc
leave
jp
sbb
sbb
push
or
scas
cdq
cld
adc
(bad)
shl
test
iret
int
inc
jp
call
loopne
movs
clc
gs
lods
jmp
mov
imul
push
repnz
adc
mov
pop
mov
mov
loop
std
xchg
mov
nop
fcomi
in
xor
lods
or
neg
out
loopne
xor
pop
xchg
call
pop
aad
call
int
mov
cdq
or
or
pushf
neg
jmp
mov
xchg
repnz
push
push
pop
xor
jb
outs
jl
loop
bound
dec
sbb
xlat
out
mov
test
add
jno
jmp
dec
adc
lds
retf
jmp
inc
mov
pop
nop
cdq
nop
jns
ja
xchg
sub
jg
push
push
xor
pop
sti
pop
cs
cmp
jb
shr
xor
test
test
popf
adc
enter
sbb
mov
in
cwde
test
jp
mov
sbb
out
mov
fldcw
xor
xor
pop
in
jge
mov
fadd
rcr
hlt
dec
test
dec
mov
ins
mov
ja
(bad)
xor
jns
and
xchg
lahf
int
pop
jnp
call
xchg
cmps
jbe
call
jae
dec
inc
push
adc
in
inc
mov
mov
(bad)
std
sbb
fcmovnbe
push
fimul
int
adc
sti
lahf
adc
sub
nop
push
xor
div
and
pop
cmp
sub
sar
cmp
mov
aam
pop
xor
and
retf
nop
loope
pop
test
mov
in
repnz
xor
stos
cmp
jecxz
aam
mov
pop
retf
mov
push
adc
outs
add
das
fldenv
add
xor
fdivr
out
rol
imul
pop
ret
sti
pop
jae
sbb
dec
sub
sbb
sub
cmc
data16
(bad)
mov
in
aam
adc
movs
mov
mov
sti
xchg
in
and
(bad)
mov
sahf
stc
idiv
xor
(bad)
stc
xlat
jg
add
jae
xor
and
stos
bound
cwde
inc
sub
loopne
ret
xor
cmp
inc
imul
sbb
sbb
outs
out
jecxz
nop
scas
add
sub
ror
dec
or
ret
loope
mov
xor
dec
fwait
xor
mov
mov
popf
cmps
and
div
sub
sub
in
retf
shr
sahf
(bad)
lods
fdivr
push
(bad)
in
pop
call
lea
cmc
xchg
inc
leave
cmps
sub
mov
and
loope
mov
xchg
sbb
ds
add
fwait
xlat
mov
js
jns
cmp
(bad)
and
je
mov
jg
aaa
ds
and
mov
daa
lea
mov
popf
ja
pop
stc
push
push
push
jae
punpckhdq
aaa
jae
xor
mov
inc
arpl
or
enter
mov
icebp
jbe
call
mov
mov
(bad)
enter
enter
xchg
iret
and
mov
ret
loopne
loopne
xchg
sahf
sbb
lods
mov
cs
je
ret
inc
xchg
(bad)
fidiv
div
mov
inc
bound
inc
lahf
mov
sbb
fs
and
loop
mov
sub
mov
mov
mov
data16
sub
cld
rcr
push
ja
dec
mov
in
ret
pop
test
enter
pop
test
fstp
aas
cld
cld
in
mov
retf
lea
ss
push
and
fadd
aad
mov
movs
cmp
jecxz
call
addr16
arpl
mov
mov
sub
jg
rcl
dec
mov
out
adc
cmp
inc
scas
dec
mov
jbe
cmp
sbb
je
(bad)
mov
pop
es
pop
scas
jb
sahf
loop
inc
pop
lea
scas
call
movs
inc
or
cmp
dec
shl
stos
call
sbb
adc
sub
fcom
pop
scas
sub
mov
stos
daa
jl
stos
and
fidivr
jge
retf
bound
cmp
loopne
int
imul
jmp
cmp
or
jns
leave
imul
call
(bad)
mov
mov
inc
mov
and
mov
mov
loope
or
xor
fcmovnu
retf
inc
or
jmp
or
xor
ins
mov
mov
arpl
std
sbb
leave
loop
fisub
test
popf
adc
sbb
lds
cmp
sbb
(bad)
cmc
xor
mov
mov
inc
daa
sahf
neg
imul
fbld
cmc
in
shl
movs
add
test
movs
or
adc
int3
jae
xchg
pop
das
jmp
xchg
imul
icebp
sbb
std
mov
xor
cdq
xor
jne
dec
je
dec
push
push
aas
stos
inc
cs
dec
cmp
inc
bound
pop
xchg
out
mov
out
pusha
enter
aaa
popa
or
jae
in
(bad)
mov
sub
and
inc
adc
shr
fadd
inc
int
adc
cdq
xor
cdq
add
jb
mov
mov
out
mov
cs
push
cmp
jmp
dec
pop
fwait
mov
xlat
iret
enter
adc
fisttp
push
push
cmc
sub
add
rol
outs
cmp
pop
loope
cmp
adc
repnz
push
loopne
sti
ds
jmp
iret
cmp
repz
out
push
add
out
adc
push
and
sub
out
inc
jmp
pop
sub
dec
ret
mov
and
stc
push
and
xor
xor
mov
cmp
xor
mov
outs
pop
add
jbe
ins
adc
xor
not
out
jbe
in
jns
ja
repnz
inc
test
pop
pop
in
inc
(bad)
leave
push
mov
push
cdq
or
fwait
cmps
sub
cmps
inc
cmp
std
or
repnz
(bad)
xor
and
mov
inc
ret
mov
das
leave
in
pop
test
sbb
or
push
xchg
ss
cmps
jg
cmps
add
xor
and
mov
sbb
mov
ds
hlt
ror
ds
movs
xchg
jns
pushf
push
daa
fdivr
inc
cs
out
hlt
mov
scas
sub
mov
xchg
lods
(bad)
aad
sub
mov
add
jb
fstp
or
mov
call
ss
push
mov
outs
mov
aam
adc
add
fcomp
mov
scas
sbb
std
push
cmp
imul
ins
cmp
outs
je
imul
nop
call
cmp
addr16
push
(bad)
xchg
xchg
sub
outs
test
clc
aad
lock
fimul
mov
sbb
int
sub
ins
push
add
mov
mov
mov
fistp
push
fs
cmp
inc
rcr
pop
fadd
dec
pop
ins
dec
cmps
jae
bound
cmps
xor
adc
sti
lods
xchg
test
add
fdivr
into
aas
stos
cmp
lahf
xchg
push
or
dec
test
js
(bad)
js
xor
cmp
lea
dec
mov
data16
or
movs
mov
rol
addr16
(bad)
cmp
stos
push
aaa
pushf
dec
arpl
and
dec
sbb
mov
hlt
add
and
xor
or
add
enter
sub
mov
lea
call
mov
inc
cmp
call
repz
mov
mov
adc
pop
out
and
pusha
aad
cs
pop
pop
sahf
push
xor
dec
and
or
cli
sub
cmc
sti
in
mov
das
repz
cmp
ret
rcr
dec
mov
pop
cdq
xchg
push
sbb
sub
fld
loope
sar
aad
jo
wbinvd
xrelease
es
mov
cmps
and
imul
loopne
add
rol
cmps
sub
and
jo
mov
and
mul
pop
test
push
inc
dec
mov
push
daa
leave
push
xor
mov
(bad)
push
add
lea
mov
addr16
lahf
xor
enter
sbb
or
arpl
push
xchg
movs
dec
sbb
lea
pop
xchg
sahf
cmp
or
in
movs
sbb
inc
dec
imul
mov
inc
outs
cli
mov
sub
mov
pop
dec
ror
xchg
popf
xchg
sbb
out
das
and
pop
pop
retf
iret
fisubr
xor
inc
je
xchg
test
call
jno
inc
sbb
jmp
call
jge
push
jns
and
(bad)
das
sbb
or
or
fs
sbb
stos
jbe
adc
mov
test
add
jnp
jp
rcl
pop
scas
push
inc
rcr
mov
inc
arpl
push
xor
and
(bad)
arpl
mov
ss
xchg
dec
push
cdq
stos
daa
(bad)
pop
call
mov
sbb
cmps
retf
test
sub
mov
add
mov
bound
inc
xor
and
popf
mov
into
jg
xor
pop
and
stc
mov
gs
jg
shl
dec
mov
cmp
gs
push
adc
shl
cmc
pop
sub
(bad)
fs
leave
loopne
mov
cdq
inc
adc
sbb
xchg
pop
shl
xor
cmps
push
repnz
repz
fs
pop
sbb
push
je
inc
mov
sbb
pop
mov
shl
xor
stos
call
sbb
test
das
aaa
jp
cwde
imul
cmp
fimul
or
test
fadd
jp
dec
push
sbb
inc
enter
push
and
rcr
lahf
pushf
jb
add
repnz
push
std
add
inc
mov
aas
jmp
test
xlat
sbb
pusha
repnz
daa
xchg
push
mov
int
ins
daa
nop
and
pop
(bad)
cld
mov
lea
repnz
ret
adc
pop
pop
mov
pop
push
jae
xlat
movs
jmp
lea
mov
outs
cdq
(bad)
hlt
sbb
pop
xor
cmp
fstp
xlat
out
mov
mov
aas
xor
shr
ficom
ror
pop
cmp
jns
jg
ins
je
enter
ins
jb
mov
shl
push
int3
jbe
pop
pop
(bad)
fld
pop
mov
sub
cmps
jg
adc
xchg
bound
mov
not
shr
jmp
xchg
mov
in
es
pushf
sub
push
test
shr
xor
sbb
jg
add
inc
ds
adc
pop
jmp
sub
lahf
pop
cmc
popa
hlt
data16
jp
fdivr
cli
or
sub
iret
sub
ret
in
aas
push
add
fst
jbe
sbb
clc
rcl
je
pop
(bad)
es
xor
adc
fstp
push
sub
dec
mov
fwait
les
lds
fsub
out
xchg
int
stos
dec
or
inc
aad
das
jno
les
jno
fcmovbe
xchg
and
movs
in
(bad)
std
sub
fisttp
and
mov
push
push
jmp
inc
pop
or
jbe
aas
mov
je
jbe
xor
mov
push
push
aaa
cmp
ins
xchg
jl
jmp
jb
add
ud2
retf
or
mov
dec
sbb
push
data16
shr
xchg
mov
pop
dec
xor
lahf
(bad)
das
(bad)
(bad)
add
(bad)
arpl
add
mov
sar
scas
je
mov
imul
mov
or
xchg
dec
stc
adc
xor
out
sub
out
shr
call
out
sub
dec
dec
or
iret
xor
aam
push
mov
popf
pop
ins
aaa
sti
dec
push
mov
(bad)
sbb
inc
push
mov
pop
daa
in
loop
add
mov
xchg
aad
mov
(bad)
cmp
hlt
inc
lea
cmp
(bad)
fcomp
xor
adc
pushf
loopne
sbb
in
fldenv
outs
addr16
(bad)
or
push
cs
xor
aaa
mov
cli
mov
add
cs
enter
fidivr
out
xor
or
aas
mov
loopne
(bad)
mov
jecxz
xchg
fwait
clc
aaa
shl
xchg
in
movs
in
das
cli
imul
pop
shld
adc
mov
mov
popf
push
mov
cmp
into
push
pop
xor
sbb
lods
fisttp
sbb
and
hlt
xor
in
outs
sbb
inc
mov
and
aas
cmp
popf
cmp
pop
in
(bad)
mov
enter
call
cld
push
lock
(bad)
inc
ror
mov
dec
cmp
or
lea
ins
sub
ret
imul
fisttp
es
push
push
mov
test
jl
call
inc
cmp
mov
sti
lds
shl
bound
jle
pop
jmp
fld
cmp
inc
fild
lock
sbb
hlt
pop
push
shl
add
stos
pop
push
jb
adc
inc
cmp
sub
cmc
ret
jmp
(bad)
dec
cmp
pop
arpl
pmullw
sbb
xor
mov
adc
rcl
inc
repnz
mov
mov
retf
jmp
data16
jmp
repz
mov
ins
inc
push
ds
aaa
xchg
mov
shl
imul
jae
pop
scas
repnz
test
adc
jo
(bad)
xchg
pop
sbb
cmps
repnz
fisub
movs
aad
fwait
jmp
iret
imul
out
(bad)
in
shl
rol
fistp
(bad)
xor
loope
sub
sub
or
mov
cmps
pop
sbb
gs
or
mov
or
inc
(bad)
in
mov
scas
sti
add
aam
rcl
in
push
lock
dec
pop
mov
out
cmp
retf
dec
in
add
sbb
sbb
ret
or
xor
mov
call
pop
fst
dec
jns
mov
xor
pushf
out
xchg
mov
mov
lods
and
sbb
ror
aam
mov
or
or
xlat
retf
jecxz
daa
ins
hlt
ins
aad
sbb
mov
fsub
ds
sbb
xor
fcomp
push
cmps
dec
fmul
mov
je
pop
fs
retf
pop
xchg
test
adc
xchg
fsubp
iret
shr
sbb
jae
pushf
and
out
jnp
rcr
xor
dec
pop
xor
xchg
nop
jg
or
jns
sti
das
gs
and
(bad)
cmp
std
paddd
(bad)
lea
push
xchg
das
push
dec
push
sbb
sub
add
in
fstp
sahf
jnp
add
movs
xchg
xlat
push
sub
shl
ds
mov
stos
cli
mov
pop
xor
and
pusha
cdq
rcl
jae
xchg
stos
popa
mov
or
es
retf
sub
cmp
in
mov
inc
lods
and
lods
int3
add
or
(bad)
lds
cmp
ja
cmp
inc
add
pusha
sbb
(bad)
mov
mov
in
test
xlat
jecxz
in
mov
fldenv
jge
mov
ins
xchg
call
xor
and
stos
fild
cmps
add
loop
js
mov
xchg
cs
push
loop
scas
cmps
mov
in
dec
daa
push
daa
out
xchg
dec
xchg
int
fdivr
int
jo
ja
ss
sbb
sub
dec
push
mov
shl
comiss
cli
cdq
add
xchg
mov
fcomp
in
call
addr16
push
aam
mov
push
add
imul
repz
in
cmp
push
stos
cli
cld
out
fcom
add
or
aaa
shl
xchg
mov
mov
fsubr
int
adc
and
std
add
pop
out
les
mov
into
ins
scas
xor
hlt
inc
jbe
mov
sbb
(bad)
arpl
sti
cs
xchg
lahf
mov
int3
or
push
sbb
mov
and
(bad)
jmp
loope
imul
inc
cmp
cmp
(bad)
daa
shl
jno
push
push
sub
mov
js
fidivr
cmps
or
mov
ret
xchg
loope
fwait
call
push
push
daa
fstp
mov
and
push
lods
rcr
mov
ret
push
dec
ins
pop
imul
inc
push
dec
iret
mov
add
dec
push
mov
push
fwait
loope
ror
enter
push
daa
fdiv
lea
sbb
rol
pop
xchg
movs
xor
xor
jg
jne
shr
sbb
pop
dec
or
stos
jmp
cdq
neg
popf
xor
je
cmp
bnd
push
adc
mov
cmp
add
out
jns
arpl
std
push
mov
jecxz
in
xor
rcl
int
mov
dec
mov
cmp
fstp
mov
cmp
(bad)
mov
lahf
test
pop
cmp
cmp
dec
fsub
shl
scas
push
dec
mov
jae
fist
ins
jae
nop
adc
sbb
and
dec
cmp
inc
inc
push
or
jp
std
lods
fstp
in
in
fbstp
sbb
cs
push
jg
inc
test
mov
into
fld
pop
mov
scas
push
jp
sbb
jb
xchg
test
fld
mov
inc
dec
mov
jne
fidivr
(bad)
mov
xlat
jl
lahf
or
push
add
cdq
lods
mov
arpl
add
mov
dec
jb
stos
inc
into
inc
and
pushf
stc
push
out
adc
xchg
xlat
sub
xchg
pop
pusha
daa
cmp
xchg
out
mov
adc
and
sub
fnstenv
test
jne
ins
push
xchg
aaa
aas
test
clc
outs
ror
fist
(bad)
out
in
hlt
adc
jno
aad
cmp
fcomp
or
addr16
jne
idiv
sbb
or
shl
(bad)
lods
sbb
mov
test
fs
les
pop
je
mov
dec
pop
(bad)
jns
jmp
fdiv
mov
cli
shr
pop
lock
pop
arpl
lods
aas
lock
jne
in
push
outs
shl
jmp
test
rcr
jmp
mov
and
ret
retf
into
pusha
test
scas
sbb
mov
inc
scas
icebp
add
mov
movs
or
jnp
sub
mov
hlt
clc
imul
pop
inc
retf
dec
fdivr
lods
and
xlat
rcl
call
fwait
mov
xchg
pop
jmp
cmp
ins
movs
and
fs
pusha
mov
(bad)
push
inc
test
push
cmp
imul
inc
leave
xchg
cld
mul
jge
pop
das
fnsave
mov
xor
sbb
push
xlat
sar
pop
fnstenv
scas
(bad)
mov
add
(bad)
or
mov
xlat
(bad)
push
ret
into
movs
rcr
mov
call
jae
call
inc
aam
jge
mov
std
jb
add
aaa
and
int3
call
xchg
loop
dec
pop
mov
mov
mov
sbb
jne
mov
xor
(bad)
pusha
mov
xor
nop
adc
test
or
cmps
jno
retf
jb
mov
mov
jmp
or
mov
sti
fs
xor
pop
aam
and
cmp
iret
mov
lods
xor
jno
xchg
push
bound
aas
or
jne
push
pop
hlt
out
jno
push
mov
dec
sub
pusha
adc
xchg
adc
sub
cwde
xor
popf
xlat
inc
pop
xchg
aas
imul
dec
clc
mov
iret
sub
call
scas
repnz
add
fwait
sar
push
mov
push
out
retf
and
iret
push
cmp
ficomp
and
cmp
out
das
adc
inc
fidiv
(bad)
out
pop
jmp
or
jle
jge
arpl
pop
adc
jle
aaa
cli
sti
push
xchg
dec
inc
sub
mov
dec
loope
and
call
lods
and
mov
test
or
mov
loope
popf
xchg
or
daa
leave
adc
in
push
(bad)
cwde
cwde
gs
repz
adc
sahf
sar
mov
sbb
xchg
add
cmp
xor
inc
xor
dec
scas
jl
ins
bound
xor
mov
inc
leave
out
adc
mov
inc
loopne
mov
or
ret
lar
mov
xor
pop
(bad)
adc
test
push
mov
mov
dec
jnp
mov
inc
xor
scas
shl
cmp
sti
push
loop
pop
jge
movntq
in
(bad)
mov
dec
push
les
cmp
aad
inc
fnstsw
in
inc
xchg
xor
js
cmp
rcr
int3
frstor
sar
loop
test
pop
push
mov
cmp
inc
xor
and
enter
retf
lahf
mov
jnp
out
dec
mov
sbb
pop
jp
push
push
out
(bad)
scas
push
sahf
das
ss
mov
mov
aaa
das
into
mov
lea
lods
fimul
jge
add
sbb
daa
sbb
mov
mov
retf
jo
fimul
loope
sub
dec
cwde
xchg
push
dec
sahf
push
and
fidiv
push
sbb
icebp
add
mov
fstp
in
stos
pop
cld
pop
into
pop
into
jge
out
fwait
stc
jno
xor
rcl
nop
retf
xor
push
dec
xchg
push
mov
int
xor
xor
pop
in
in
pop
mov
inc
pop
out
adc
into
mov
test
clc
sahf
imul
repz
mov
and
push
neg
cmp
cmc
popa
push
jmp
dec
in
xchg
imul
sub
(bad)
mov
leave
loope
and
sbb
jns
(bad)
fstp
cmps
jnp
cli
movs
inc
sbb
jns
lds
lea
and
ss
not
or
aas
fidiv
loop
je
xchg
or
mov
sbb
sbb
clc
xor
cmp
push
cmps
repnz
push
cmp
lods
push
das
call
sbb
sbb
in
mov
retf
mov
jns
nop
fwait
lods
mov
push
in
pop
dec
add
movs
mov
into
inc
jge
cmp
add
out
gs
mov
gs
jno
cmps
and
enter
push
jo
cmp
mov
cmp
(bad)
pop
lock
mov
mov
adc
mov
and
mov
add
inc
jns
(bad)
aad
cmp
adc
scas
add
or
push
out
outs
mov
mov
mov
retf
int3
lahf
xlat
retf
inc
adc
fidivr
div
movs
fcmovnb
call
jne
pop
repnz
cli
and
xor
(bad)
fst
xor
and
inc
repnz
xchg
push
mov
shl
ret
call
inc
adc
aam
dec
adc
pop
test
stos
mov
push
dec
pusha
add
stos
outs
(bad)
mov
cwde
add
mov
push
out
jae
dec
push
popa
mov
ss
push
stos
ins
xor
jbe
sti
setle
and
push
and
shl
mov
adc
mov
stos
xchg
mov
inc
sub
lds
jge
std
aad
shl
scas
pop
into
mov
or
call
mov
test
push
(bad)
xchg
mov
icebp
and
xchg
retf
xchg
(bad)
js
adc
cmp
push
mov
mov
cmc
dec
dec
imul
icebp
pop
add
xchg
into
fnstcw
scas
xchg
add
shl
and
inc
sahf
clc
lods
jbe
add
arpl
xor
enter
ss
dec
sub
dec
add
jns
sahf
imul
les
test
jns
cs
ds
lods
nop
cwde
jecxz
add
out
mov
push
mov
inc
add
adc
(bad)
test
rcr
je
aas
cld
jae
inc
push
cmc
imul
push
sbb
fwait
pop
mov
lds
pop
fcmovnb
lahf
out
xor
cmc
xchg
dec
sub
sar
sbb
ror
stos
sbb
mov
jl
mov
pop
shl
jb
in
mov
push
xchg
push
pop
xlat
fs
lea
xchg
cld
cmps
fmul
sbb
ss
arpl
push
mov
and
sbb
enter
iret
cmps
or
push
pop
cmp
push
retf
push
push
adc
aad
xor
addr16
test
add
imul
push
xor
ffreep
cdq
cmps
aaa
div
or
sub
mov
cwde
stos
pushf
or
fistp
cmp
sub
cmps
or
pop
and
jl
pop
push
retf
into
gs
mov
inc
sar
sub
aaa
xchg
and
jge
push
ins
mov
sti
mov
sbb
mov
fst
jno
lods
int3
ds
jns
adc
mov
pop
inc
sti
pop
jnp
cld
shl
loopne
std
sub
mov
(bad)
out
jo
mov
pop
sbb
xor
mov
inc
sbb
std
or
dec
add
xchg
lea
mov
jb
adc
inc
jnp
ja
pusha
daa
cmp
mov
mov
and
idiv
cmp
mov
push
out
xchg
add
retf
adc
mov
loopne
and
movs
movs
sar
mov
dec
int3
mov
mov
inc
ret
call
aad
lock
add
imul
shr
popf
mov
and
pusha
movs
push
add
pop
ret
fwait
inc
mov
cwde
add
inc
stos
pop
mov
out
mov
pop
mov
fwait
xchg
lds
(bad)
mov
(bad)
stc
dec
sbb
stc
mov
mov
add
dec
ret
mov
shl
cdq
mov
inc
lahf
sub
adc
inc
dec
or
adc
ret
xchg
push
daa
movs
push
pop
xor
(bad)
xchg
pop
mov
test
mov
inc
(bad)
retf
movs
push
sbb
outs
(bad)
cmc
imul
sti
cwde
repz
jbe
scas
inc
mov
stos
nop
jno
pop
in
jo
fs
lods
loope
push
mov
xchg
mov
push
fwait
mov
repnz
in
repnz
pavgw
iret
adc
retf
pop
mov
sub
(bad)
jae
in
mov
shl
inc
cmc
and
aaa
sbb
adc
sub
ret
mov
cmp
push
or
add
mov
jb
jo
in
mov
sub
inc
fstp
mov
shl
push
and
daa
aas
outs
gs
or
sahf
lock
movs
int3
push
mov
mov
fisub
mov
and
add
ins
inc
in
arpl
outs
sbb
popf
(bad)
jae
dec
popf
or
je
cwde
std
test
pop
(bad)
jo
add
push
cmp
fild
jo
xlat
jmp
aas
cwde
scas
add
rol
test
mov
push
fwait
je
leave
sub
mov
cld
test
push
add
test
xchg
and
mov
cwde
ins
jb
and
test
add
and
xor
repnz
cmps
daa
cld
ja
xor
jle
rol
ret
xchg
push
ja
fxch
retf
pop
repnz
loopne
mov
sub
mov
popa
leave
add
pop
add
hlt
out
je
mov
mov
cld
cmc
mov
imul
out
jmp
add
popa
iret
neg
clc
pop
pop
xchg
add
popa
xchg
repnz
cmps
xor
out
aaa
xchg
and
xor
dec
jo
out
mov
scas
retf
sbb
ins
call
jne
or
sub
mov
jp
inc
gs
xchg
scas
jle
inc
and
lea
repnz
scas
les
push
push
rol
aaa
inc
jbe
aad
arpl
aas
and
lahf
pushf
pop
adc
daa
mov
dec
mov
in
dec
addr16
outs
mov
sub
imul
fmul
inc
sub
rcr
call
pop
dec
push
add
dec
mov
mov
es
loope
and
stos
push
push
mov
hlt
mov
(bad)
gs
fstp
iret
icebp
fmul
push
mov
fild
repnz
call
jmp
scas
outs
repz
and
mov
sub
sub
movd
outs
in
inc
add
add
(bad)
gs
xchg
sbb
or
repz
stc
jg
lock
pop
sub
xchg
and
mov
imul
sbb
and
inc
xor
adc
jae
sbb
push
ja
mov
jbe
or
mov
inc
jnp
lock
out
out
adc
mov
dec
dec
push
test
adc
cmps
push
or
ror
lahf
ins
and
xor
pop
pop
add
add
jg
inc
push
imul
leave
outs
(bad)
cmp
mov
inc
cdq
jb
and
or
out
push
xchg
sbb
add
adc
(bad)
mov
cwde
jae
adc
jmp
stc
(bad)
or
sub
mov
frstor
mov
ins
inc
fidiv
inc
xor
icebp
jp
pop
js
sbb
jle
sub
mov
aaa
in
adc
add
sub
adc
pop
aaa
adc
dec
jae
stc
into
pop
div
arpl
mov
std
pop
dec
xlat
pop
mov
sbb
out
fwait
xchg
jle
pop
push
push
pop
popf
push
retf
test
stos
ins
and
adc
xchg
cmp
cmp
scas
scas
push
movs
int
mov
jg
push
pop
out
add
cmp
push
int3
pop
push
(bad)
sub
sbb
sub
jmp
adc
push
nop
loop
ficomp
ret
push
dec
jp
adc
mov
out
pop
pop
js
sbb
mov
(bad)
fsub
jecxz
or
pop
arpl
pushf
xchg
pop
mov
jecxz
push
xchg
push
add
or
aam
xchg
xchg
fistp
mov
mov
push
jo
sbb
pusha
pop
pop
lods
jnp
das
cmp
lock
ret
xchg
jno
and
mov
xchg
mov
in
cs
mov
fwait
xchg
cli
or
adc
inc
arpl
jbe
sahf
fst
aas
dec
ins
retf
jne
loope
sbb
and
mov
rcl
loop
mul
adc
add
inc
jo
sbb
inc
mov
(bad)
push
fs
dec
mov
jge
sbb
sub
fimul
scas
and
add
fwait
cmp
and
jne
imul
ret
push
mov
push
jp
and
cmp
stos
pop
fiadd
mov
mov
popa
popa
jae
adc
icebp
mov
cmc
lock
push
xchg
pop
add
rol
push
jecxz
sbb
sahf
(bad)
pop
je
mov
dec
stos
jmp
dec
ficomp
pop
or
push
cmp
iret
fst
and
cmp
data16
ret
aas
xor
pop
inc
mov
xchg
das
xor
stos
sub
mov
(bad)
xchg
add
push
fs
int
mov
mov
mov
sub
ds
and
leave
rol
fnstcw
mov
adc
and
arpl
sbb
sahf
in
call
xchg
gs
std
jmp
pop
sub
int3
mov
bound
leave
xchg
(bad)
push
jmp
adc
cmp
test
lods
pop
ror
repnz
bound
fistp
daa
shl
test
dec
jge
out
inc
jbe
movs
sub
cmps
test
call
fnstenv
jmp
enter
sub
mov
jne
push
jb
or
add
in
lods
jge
sub
rcl
leave
adc
push
or
mov
shr
adc
test
test
sub
iret
jp
daa
ja
dec
aas
leave
aaa
cmp
mov
test
or
push
xor
jnp
cmps
aad
push
ret
cli
pop
nop
aam
out
adc
and
sbb
lds
mov
inc
out
xchg
imul
mov
jmp
inc
jae
sub
mov
fwait
dec
sub
mov
imul
mov
dec
push
sbb
rcr
inc
aaa
(bad)
aam
cmp
adc
mov
jno
sbb
adc
pop
mov
adc
sbb
mov
mov
sub
cmp
mov
mov
push
add
sub
xchg
aam
and
clc
mov
pop
mov
jo
push
jo
jp
lock
xor
int
inc
and
mov
adc
mov
add
xchg
pop
cwde
rcr
hlt
pusha
or
not
sar
iret
cmp
pop
enter
push
sbb
inc
add
mov
pop
call
ins
test
mov
cmp
mov
loope
inc
(bad)
pop
adc
jmp
xor
inc
clc
aam
push
mov
cmp
enter
(bad)
add
gs
mov
and
xchg
push
sbb
into
mov
adc
inc
mov
jg
jp
push
fcomp
das
mov
sub
xchg
add
mov
mov
les
jle
fist
hlt
(bad)
imul
mov
sub
pop
adc
push
ins
or
inc
imul
pop
mov
sub
xchg
pusha
in
jp
mov
adc
int
(bad)
out
mov
push
mov
jo
pop
dec
sub
fstp
nop
in
jno
dec
aaa
inc
xlat
xor
mul
mov
retf
sub
es
aaa
nop
jle
(bad)
and
jnp
xor
test
dec
inc
cs
xor
es
xchg
ret
mov
inc
jmp
loop
out
pop
sbb
sbb
or
fldl2e
pop
push
push
sbb
leave
sbb
inc
push
or
mov
inc
ins
addr16
and
adc
sar
cs
aaa
ins
xlat
push
scas
in
outs
shl
call
sahf
inc
call
sti
add
pop
ds
pop
push
add
push
call
jno
pop
push
inc
sti
and
stc
mov
cdq
scas
inc
mov
mov
sub
cmp
adc
sbb
jnp
or
dec
out
je
dec
leave
mov
add
jmp
adc
(bad)
fst
lahf
jmp
sbb
and
hlt
mov
sbb
cmp
or
jle
jbe
xor
dec
push
cmps
sbb
rol
push
dec
dec
mov
adc
xor
ficomp
mov
js
push
inc
mov
imul
test
test
retf
repz
stos
push
and
(bad)
mov
lods
cmp
xchg
aad
lds
je
out
pop
cwde
sub
add
mov
adc
and
adc
or
cdq
adc
in
push
es
sar
and
es
add
dec
mov
out
cmp
das
aas
popf
jge
nop
div
pop
imul
out
sar
jmp
inc
cld
test
nop
add
jg
sbb
and
inc
aad
or
and
into
jp
sbb
cdq
rol
xchg
jae
sub
jae
mov
adc
out
(bad)
or
cmp
xor
pushf
add
pop
mov
pop
aaa
mov
das
imul
int3
sbb
loope
xchg
add
lock
jb
aam
cmp
shr
in
cs
cdq
mov
in
and
ror
adc
dec
mov
pop
test
ja
and
mov
out
dec
(bad)
cwde
adc
jp
movs
seto
in
retf
jmp
popa
imul
adc
jbe
test
js
jl
rol
hlt
push
push
or
xchg
cmc
mov
fdiv
rcr
arpl
cmp
hlt
leave
sbb
mul
sub
lock
test
(bad)
int3
icebp
or
stos
mov
cmp
hlt
xlat
xor
add
dec
xchg
dec
dec
and
push
xchg
dec
stos
aam
mul
add
mov
neg
dec
mov
ffree
inc
xlat
jecxz
sub
rol
in
xchg
(bad)
sbb
dec
and
ss
xchg
dec
int3
popf
js
and
mov
jae
add
jns
jg
jl
outs
mov
loope
mov
sbb
mov
fcomp
das
pop
ret
retf
dec
or
push
mov
(bad)
cli
retf
adc
adc
outs
in
add
or
dec
ror
push
jmp
push
pop
cmp
push
mov
add
hlt
sub
(bad)
xlat
and
ins
(bad)
mov
fstp
cmp
out
cmp
in
xchg
imul
cld
cmp
mov
mov
adc
xor
xchg
loope
xor
repnz
and
stos
push
out
and
(bad)
call
add
cs
in
and
fbstp
ds
test
imul
pop
lds
mov
add
retf
mov
ss
cwde
pop
jne
pop
jmp
movsx
push
call
and
aaa
inc
and
add
or
jl
mov
int3
fcmovnu
fild
dec
pop
ins
out
cmp
fnsave
(bad)
enter
rol
jb
enter
mov
sub
xchg
sar
(bad)
jnp
out
int
adc
stc
xor
pushw
push
adc
ret
imul
push
adc
std
push
push
mov
(bad)
in
sbb
xchg
add
cs
(bad)
enter
outs
lock
test
js
inc
mov
push
cmp
out
push
push
mov
iret
mov
xchg
sbb
jns
pop
jnp
pop
das
div
ss
popf
in
les
and
adc
mov
je
pop
dec
int
adc
fsubp
pop
(bad)
in
ins
in
add
xchg
cdq
mov
pop
add
mov
push
adc
mov
aaa
sti
adc
outs
jle
call
dec
and
sar
div
nop
cmps
rcl
dec
bound
and
jg
in
pop
in
xor
mov
sbb
leave
cmp
loope
mov
call
aam
pusha
test
(bad)
call
or
jle
repz
repnz
pop
(bad)
mov
test
fidivr
push
mov
iret
test
retf
lahf
pop
sti
xor
enter
in
(bad)
xchg
call
xor
(bad)
jns
and
pop
imul
shl
mov
cli
icebp
pop
push
in
inc
ins
scas
outs
xor
mov
push
sar
out
sub
sahf
mov
cld
ins
pop
mov
loop
adc
ror
dec
retf
push
cmp
jmp
in
pop
fnclex
out
test
or
dec
and
sbb
push
test
or
mov
fbstp
jno
stos
or
mov
mov
pop
inc
dec
test
push
xor
mov
cdq
lods
and
retf
jae
repz
test
cs
adc
sbb
pushf
jae
cmp
daa
and
in
mov
pop
and
fimul
inc
or
and
ret
pop
in
shl
add
inc
jne
add
jbe
lahf
pop
jl
xor
mov
add
scas
ror
add
pop
lahf
fsub
int
iret
and
add
jp
mov
stos
mov
(bad)
gs
lea
mov
scas
mov
mov
xor
neg
rcl
dec
xor
mov
pushf
gs
mov
cmp
add
arpl
lock
and
jae
xor
xchg
xchg
mov
stc
push
and
adc
enter
adc
aaa
push
or
std
ret
fnstsw
or
cwde
fcomp
dec
sbb
inc
cmc
test
arpl
popa
push
mov
iret
add
stos
outs
cmp
mov
cld
retf
int
ins
jmp
push
or
stc
and
and
imul
ret
enter
outs
adc
cmp
jmpw
bound
and
int
jo
mov
cmp
mov
mov
popf
ss
test
mov
sub
jno
xchg
cdq
mov
pop
call
jl
adc
jmp
sbb
inc
in
(bad)
out
adc
mov
inc
dec
and
and
sbb
int
jnp
ret
js
xchg
push
lahf
bswap
outs
jae
pop
mov
icebp
inc
add
inc
mov
mov
sub
jne
es
sbb
lahf
stos
arpl
cmp
int3
sub
les
fninit
push
and
mov
sbb
lds
jb
lahf
fst
and
jle
out
sub
push
mov
xor
outs
repz
inc
cmp
cmp
bound
mov
pop
scas
pop
mov
nop
aaa
std
inc
pushf
push
ror
shl
xchg
dec
leave
and
sbb
inc
jno
popa
jmp
adc
outs
iret
pop
pushf
mov
movs
pop
add
sub
sbb
cmp
add
hlt
popa
test
mov
test
lods
dec
or
dec
inc
cmp
ds
or
or
sub
xchg
out
mov
mov
push
jbe
jmp
call
shl
and
xchg
sbb
call
inc
ja
mov
push
add
dec
in
das
or
add
dec
dec
lds
daa
or
inc
daa
ja
std
repz
push
sbb
mov
mul
and
jo
pop
pop
clc
test
gs
clc
cmp
fisub
and
das
mov
mov
jecxz
inc
pop
out
inc
loop
inc
outs
retf
sub
add
mov
les
cdq
mov
repz
jo
pop
int
jae
ins
or
add
in
lods
movs
sahf
outs
dec
in
add
sub
or
cld
xor
jecxz
dec
aam
ucomiss
jmp
pop
stc
fcomp
xchg
ror
es
shl
xor
retf
shl
arpl
bound
test
and
jl
xor
mov
jge
jp
adc
push
dec
cwde
push
xor
ror
jl
std
dec
push
into
or
popa
mov
iret
cmps
jb
jno
stos
xchg
mov
and
xchg
mov
adc
push
mov
sub
fistp
pop
scas
jne
(bad)
in
add
test
mov
stc
pop
push
cmp
es
push
test
add
inc
mov
addr16
jmp
sub
cmp
mov
mov
push
adc
inc
and
sub
in
adc
das
push
cmp
aas
jns
mov
jl
pop
mov
sub
adc
sbb
jns
lds
popa
rcl
cmp
cli
or
ds
add
stc
inc
cwde
mov
push
mov
push
mov
sti
pusha
repz
mov
lods
mov
mov
sub
mov
xor
or
mov
mov
cmp
add
mov
(bad)
out
shl
pop
cli
or
fwait
xchg
or
xchg
xor
rep
mov
shl
jmp
sbb
int3
pop
jle
aad
rcr
out
psubsb
dec
mov
rcr
scas
and
xor
imul
jno
aaa
dec
repnz
fdiv
shr
cmp
retf
add
and
movs
pop
pop
scas
fisttp
mov
stos
jns
cmps
fwait
loopne
daa
mov
js
push
dec
push
ds
adc
pusha
jl
pop
loopne
ds
push
and
and
sbb
pause
mov
dec
sub
iret
pop
dec
(bad)
hlt
mov
icebp
cmp
fsubr
jg
mov
fstp
adc
cdq
rcr
sub
mov
loop
mov
jle
ret
cli
xor
add
add
push
add
fild
push
aas
stos
ret
xor
mov
leave
jae
dec
sub
adc
retf
adc
int3
cmps
or
into
out
adc
or
mov
scas
dec
pop
push
sar
jle
leave
sbb
cmps
cmp
lea
cmp
mov
push
js
int
mov
test
loopne
adc
pushf
retf
sub
div
inc
adc
cwde
sbb
loope
mov
or
add
fs
idiv
pop
xchg
js
aas
or
xchg
mov
sub
in
shr
in
stc
xor
addr16
inc
mul
(bad)
sbb
aad
jmp
adc
je
mov
mov
mov
sbb
nop
xchg
(bad)
test
jno
mov
adc
mov
sbb
gs
sub
les
(bad)
mov
js
jp
andnps
pop
cmp
fucom
cdq
dec
or
inc
adc
add
dec
daa
in
mov
out
dec
ret
lea
sbb
and
mov
lock
pop
jae
push
pop
mov
pop
push
dec
xchg
lods
sub
add
(bad)
xchg
add
cdq
and
push
sbb
(bad)
jb
rol
fwait
jne
jg
test
xor
adc
cdq
scas
sub
pop
je
sub
repnz
cs
loopne
mov
mov
sub
jg
cld
mov
sub
mov
mov
mov
sub
lock
jle
ins
fist
mov
inc
fwait
out
repnz
push
inc
pop
test
pop
dec
out
xchg
sbb
scas
loope
fild
lock
cwde
cs
add
stos
or
xor
pop
ret
add
or
cld
mov
sbb
and
fs
jmp
in
gs
jp
das
inc
push
out
adc
sti
xor
add
outs
cs
in
out
adc
cli
cmp
sbb
xchg
xchg
out
aaa
sub
lahf
call
and
pop
ss
push
push
or
scas
push
pushf
(bad)
int3
mov
jmp
mov
aaa
pop
rol
adc
push
pop
or
sub
scas
mov
(bad)
push
hlt
mov
mov
out
and
xchg
add
mov
or
xchg
cmp
test
xchg
lock
cmp
call
imul
push
ins
push
cmp
jns
ja
shl
jmp
jo
arpl
nop
ins
neg
fldcw
test
jne
movs
xchg
mov
sbb
enter
ret
lahf
adc
mov
dec
popa
cdq
and
xor
mov
mov
cli
lods
dec
dec
sbb
retf
lock
or
inc
xor
ds
pop
out
lahf
pop
stos
out
jp
cmps
popf
loope
sti
icebp
pop
ss
fld
pop
aam
jl
and
je
js
dec
sbb
fist
jge
js
out
retf
mov
test
ss
mov
push
rcr
stos
gs
adc
ror
rcr
xchg
pop
pop
push
into
jns
cmp
xor
mov
lock
je
int3
xlat
es
mov
mov
loop
setge
scas
add
stc
push
jns
jb
stos
xchg
adc
ja
adc
jl
out
push
pop
ret
enter
clc
(bad)
sub
sub
popa
dec
ins
xor
xor
sub
test
push
call
cs
xor
mov
pop
mov
(bad)
pop
push
push
mov
ror
cmc
or
jl
js
adc
int
addr16
ret
and
sahf
sub
call
mov
sbb
cmp
iret
std
jbe
test
and
leave
loopne
dec
sbb
rol
es
push
xchg
inc
mov
or
and
das
and
in
stc
dec
cli
js
sub
add
fisub
rcr
push
test
call
sti
xchg
pop
xchg
stc
xor
jge
and
popa
ror
xchg
jb
jle
dec
ja
lds
outs
adc
and
imul
out
jle
and
stc
add
stos
push
out
(bad)
popa
clc
xchg
push
xchg
ja
loopne
jae
addr16
cs
cmp
push
mov
mov
stos
sub
adc
(bad)
inc
out
outs
std
and
or
aam
inc
aaa
cmp
jmp
jle
fstp
xchg
xchg
in
cmps
lods
test
add
lods
into
dec
rcr
mov
sub
cld
xchg
add
mov
(bad)
xchg
es
clc
pop
(bad)
pop
sub
rcr
gs
aaa
xlat
aam
or
ds
sbb
cmc
aaa
mov
cwde
outs
adc
js
lds
popa
je
add
inc
xchg
push
hlt
inc
add
pop
pushf
rol
xchg
aad
sbb
test
cmp
retf
dec
sbb
mov
dec
mov
mov
in
or
shr
adc
retf
cmc
aaa
cmps
lock
jmp
inc
jle
loop
mov
aad
dec
sub
xor
ficomp
mov
mov
dec
(bad)
mov
jno
xchg
scas
scas
ins
fbld
mov
cli
out
(bad)
stc
pop
push
push
xchg
pop
pushf
mov
aaa
imul
xor
sbb
loop
mov
cmc
xor
out
test
fadd
jge
sub
popf
xchg
mov
pop
jb
sbb
cmp
and
imul
inc
outs
sub
jmp
or
shl
add
loop
dec
adc
bound
xlat
sbb
sbb
ja
leave
aam
lods
or
inc
dec
mov
jge
call
(bad)
dec
adc
(bad)
sub
gs
loop
pop
mov
cmp
mov
cmps
or
or
xchg
pop
adc
ds
mov
cmp
cmp
sbb
xchg
imul
and
ds
mov
inc
xchg
pop
not
retf
icebp
into
mov
xchg
push
mov
xor
stos
fimul
das
into
push
sub
mul
pusha
or
int3
add
je
jmp
sbb
jo
ins
call
in
jecxz
loope
jbe
push
xor
enter
jae
pop
stc
push
jg
jno
pop
stc
mov
add
dec
adc
mov
in
pop
mov
mov
xor
movs
jae
shl
mov
lea
jo
adc
xadd
pop
lods
push
dec
call
mov
sub
sar
retw
push
adc
fucomp
ds
mov
mov
mov
clc
push
sbb
jne
sub
xor
push
jp
std
mov
xlat
jle
rol
or
push
mov
adc
repz
fild
mov
inc
mov
sbb
sub
idiv
push
fcom
and
repz
stos
aad
lahf
inc
icebp
imul
jge
xor
cld
iret
clc
mov
test
jnp
sub
mov
cmps
test
test
ret
(bad)
hlt
test
xor
pop
(bad)
pop
hlt
retf
out
push
push
sub
fcomp
mov
rol
popf
add
adc
push
and
cmp
adc
adc
lea
dec
(bad)
sahf
repz
fdivr
cmp
jno
sub
(bad)
mov
sub
es
movs
aam
jmp
inc
or
test
ds
retf
cwde
xor
ret
mov
sub
repnz
test
pop
cmps
cmp
add
xchg
pop
xchg
xlat
jge
paddsw
xchg
lahf
xchg
push
in
jmp
mov
ins
int
jo
cwde
fnsave
leave
xor
es
addr16
xor
inc
pop
and
mov
pushf
outs
clc
ret
aaa
dec
cmp
outs
sbb
push
out
dec
adc
or
add
sbb
jg
sbb
or
add
add
and
iret
out
push
fidiv
or
iret
outs
sti
int
xchg
retf
jp
pop
xor
pop
add
jge
xchg
inc
clc
and
pop
inc
test
inc
jno
das
icebp
fcmovne
dec
inc
mov
xor
mov
lock
les
mov
std
pop
fisub
ins
retf
dec
xor
loop
out
jmp
sbb
aaa
inc
push
mov
push
jno
movs
outs
mov
test
sbb
add
adc
lods
pushf
jb
mov
lods
mov
xor
ss
repz
cmp
cmp
jle
ds
mov
shl
prefetch
loop
cmps
mov
or
les
repz
jl
sub
mov
(bad)
into
add
retf
xchg
xchg
inc
jb
(bad)
mov
sbb
jle
pushf
stos
enter
test
adc
mov
sub
xor
shr
iret
test
pop
dec
and
add
mov
sar
mov
pop
ret
sar
call
das
dec
jmp
cmp
mov
pop
cdq
mov
clc
sub
mov
xchg
scas
and
sub
shl
iret
js
dec
and
ror
call
inc
xchg
pop
jb
inc
mov
and
xor
icebp
push
shl
je
dec
add
icebp
adc
pop
nop
loope
aad
inc
sub
(bad)
sar
and
fs
jge
add
mov
iret
sub
dec
loopne
sub
cmp
or
adc
push
sbb
push
std
dec
xor
adc
je
cmp
pop
bound
or
and
or
(bad)
sbb
ror
mov
push
(bad)
cmp
cwde
mov
mov
mov
cmc
adc
mov
movs
cmp
mov
mov
stc
js
inc
pop
push
mov
fbld
jno
cmp
shl
sbb
mov
push
xor
(bad)
jne
and
shl
inc
xchg
add
outs
jp
aam
or
adc
and
push
mov
and
retf
sti
bound
out
sbb
outs
dec
mov
push
int3
jg
shl
ss
fwait
mov
stos
mov
xchg
xor
not
adc
sbb
sbb
stos
sbb
mov
rcl
retf
jl
or
xchg
(bad)
fbld
ret
mov
mov
sbb
push
and
mov
pinsrw
std
push
pop
fiadd
iret
retf
fsubr
sbb
dec
and
xchg
mov
jnp
int3
add
inc
push
xlat
lahf
into
popa
jo
hlt
nop
(bad)
sti
aam
bnd
outs
xchg
fadd
in
sti
pop
dec
je
dec
shr
pop
rcl
mov
cmp
pop
xchg
adc
cld
lea
ja
dec
mov
aaa
mov
es
stos
pushf
mov
scas
clc
or
ja
dec
jb
rol
xchg
stos
push
adc
std
xor
fucomi
jo
gs
fdiv
push
mov
mov
lds
xchg
xor
(bad)
pusha
ds
mov
out
lods
loopne
ja
popa
cmp
mov
iret
(bad)
(bad)
in
in
scas
int3
cdq
mov
mov
inc
xchg
add
(bad)
mov
pop
xchg
ror
sbb
dec
xchg
popf
aas
inc
xor
test
je
inc
cld
pop
fisttp
ficomp
stos
aaa
adc
pop
and
ret
aas
or
xchg
jge
sbb
ret
cmps
mov
into
pop
fisttp
out
adc
out
mov
imul
aaa
xor
inc
push
push
adc
sub
mov
inc
jp
mov
or
fmul
repnz
mov
jmp
mov
and
sub
jmp
or
cs
push
jae
sbb
push
cmc
shr
loope
xor
bound
dec
sbb
adc
sub
add
out
rol
and
mov
adc
lods
test
mov
push
and
out
std
int3
ret
sbb
pop
ja
cmp
stos
push
test
in
in
adc
shl
sti
inc
mov
jg
dec
cmc
in
or
div
ret
and
push
out
(bad)
test
sbb
rol
gs
push
mov
mov
(bad)
call
in
pop
stc
retf
and
dec
lea
dec
pop
outs
mov
fdiv
cmps
sub
jmp
js
movs
xor
fisubr
pop
into
pop
dec
mov
cmp
cdq
mov
in
sub
sbb
mov
push
xchg
xor
rcr
(bad)
stos
adc
fist
xchg
mov
cmp
mov
pop
mov
cmp
mov
adc
lea
sbb
pop
jl
loop
fldcw
mov
push
or
dec
inc
cmp
jae
popf
(bad)
mov
mov
(bad)
lahf
jge
push
xchg
test
jo
out
mov
mov
pusha
inc
xchg
jecxz
aas
add
sbb
pop
adc
ins
movlps
and
and
jne
scas
cmp
mov
movs
push
mov
mov
or
fimul
scas
mov
cmp
(bad)
dec
fild
les
in
cmp
pusha
pop
outs
enter
xlat
es
(bad)
sti
dec
aam
pop
ins
push
int3
xor
repnz
or
jecxz
mov
lds
dec
mov
rcr
mov
and
std
cmp
xor
push
pop
dec
mov
cmps
push
data16
sub
dec
jp
enter
push
(bad)
stos
popa
imul
aaa
mov
aad
mov
sub
ss
and
sub
adc
mov
shl
mov
in
(bad)
lahf
push
mov
retf
aam
lock
icebp
iret
sahf
aaa
mov
lds
or
mov
and
mov
jmp
mov
cmp
stc
fs
cmp
data16
in
retf
jg
or
out
dec
(bad)
fild
sub
pop
(bad)
jmp
jmp
mov
sub
pop
jmp
inc
addr16
call
jle
popa
ret
push
pop
add
mov
jecxz
cwde
outs
int3
mov
push
mov
mov
and
rcl
in
aaa
das
pop
xor
and
inc
inc
adc
scas
inc
dec
bts
push
add
cmp
mul
sar
iret
mov
sbb
or
(bad)
icebp
inc
or
mov
mov
mov
mov
mov
or
add
cmp
adc
imul
cmp
neg
iret
inc
sub
pop
fstp
into
das
mov
pop
add
push
scas
imul
shr
adc
out
add
fwait
mov
call
xchg
int
mov
inc
dec
test
daa
cmc
xor
test
pop
outs
(bad)
dec
lea
pop
cwde
and
popf
or
gs
sub
sbb
aaa
out
idiv
cmp
xor
xor
sub
(bad)
jecxz
aam
sbb
movs
call
cld
shl
fs
fldcw
add
arpl
fbstp
pusha
retf
inc
push
inc
mov
jae
sub
sub
jl
dec
add
ins
(bad)
sti
push
aam
adc
mov
enter
lods
pop
mov
imul
lea
(bad)
jp
and
inc
hlt
sbb
icebp
ins
call
mov
test
iret
jmp
dec
out
mov
xchg
inc
pop
gs
push
push
lds
xlat
lea
outs
mov
test
loopne
xor
jp
or
sub
mov
push
pushf
cli
add
mov
(bad)
and
jns
push
pop
or
and
xchg
out
adc
lods
in
or
push
push
arpl
mov
je
(bad)
addr16
cdq
push
push
xor
add
mov
outs
imul
or
jno
xor
sbb
sub
mov
dec
fwait
sbb
das
and
cmp
sbb
mov
pop
jns
(bad)
hlt
pushf
les
mov
lea
mov
shr
mov
xchg
sbb
dec
xor
ret
dec
inc
sti
sar
arpl
cmp
lods
mov
dec
jnp
or
dec
gs
fisub
mov
push
inc
mov
scas
call
jbe
int3
rcr
js
add
xchg
mov
mov
inc
pusha
and
gs
xchg
loope
push
test
mov
outs
xchg
in
xlat
outs
jnp
push
into
xchg
mov
pop
(bad)
xlat
fs
jmp
sub
dec
sahf
scas
fwait
inc
(bad)
jge
loopne
fwait
mov
adc
test
retf
addr16
mov
das
out
cmps
add
push
aas
pop
(bad)
mov
jo
adc
dec
aas
add
movs
add
stos
add
sar
ins
xor
clc
xor
sbb
cmp
push
stos
mov
popf
pop
cmp
out
retf
pusha
pop
or
pop
push
out
ss
pop
(bad)
fadd
mov
retf
push
fadd
jo
pop
(bad)
shr
cmp
test
dec
sar
push
loop
adc
cli
inc
sbb
and
mov
cwde
xchg
mov
rcr
in
mov
(bad)
xor
mov
mov
xchg
rcr
dec
inc
and
mov
out
mov
sbb
xchg
ins
mov
jns
xlat
pop
pop
hlt
jmp
clc
mov
xor
push
enter
fisttp
sbb
dec
test
adc
or
fwait
mov
les
inc
dec
imul
jb
sub
jae
retf
mov
add
rcr
fld
pop
or
sub
push
xchg
push
mov
sub
add
aas
lds
or
and
mov
xchg
out
cmp
leave
cmps
or
mov
inc
in
loope
mov
mov
ss
mov
call
dec
(bad)
cmp
sub
int3
jnp
inc
in
in
sbb
mov
dec
mov
in
push
push
push
rcl
pop
out
std
cmps
inc
scas
out
add
mov
dec
push
les
aam
sti
mov
test
ret
clc
js
daa
sbb
mov
jge
fwait
aas
or
stos
pop
addr16
cmps
inc
stc
xchg
mov
push
push
mov
pop
shl
pop
cmps
ficomp
xchg
jmp
jmp
gs
push
push
fiadd
in
xchg
or
mov
out
lods
ds
pxor
movs
dec
or
cmp
hlt
xchg
outs
jns
cmp
cs
ret
bound
add
pop
ja
xor
loopne
mov
mov
jge
pop
sbb
sbb
mov
adc
test
inc
jp
inc
mov
leave
mov
bound
push
inc
pusha
add
call
cld
pop
stos
loopne
popf
xor
push
fidiv
icebp
mov
and
push
xchg
imul
icebp
mov
pop
sbb
pop
inc
jl
xchg
gs
mov
xchg
push
fld
loop
ins
and
dec
pop
aad
jp
jmp
shl
xlat
(bad)
cwde
sub
jl
scas
xlat
movs
inc
inc
(bad)
jns
sub
xlat
loope
in
retf
sbb
xchg
js
popf
or
outs
das
mov
add
daa
fild
idiv
mov
rcr
(bad)
retf
adc
cs
or
ror
jmp
add
xchg
(bad)
loop
lds
pop
adc
scas
cmps
cwde
xchg
xchg
repz
push
outs
fstp
and
jecxz
pop
lds
or
jnp
aas
nop
jo
repnz
jle
push
std
or
mov
xor
and
cdq
xchg
push
cmps
(bad)
stc
mov
pop
add
lock
cmp
mov
test
mov
pop
out
pop
cmp
mov
add
test
fldcw
je
scas
pop
ficomp
inc
jae
or
mov
sbb
std
push
pop
fsubr
push
das
dec
ror
ja
js
jb
out
(bad)
(bad)
jg
xchg
sti
xor
push
call
xchg
add
adc
in
jnp
push
xchg
sub
dec
sub
fistp
ret
adc
je
test
data16
mov
jecxz
test
push
cmc
sbb
pop
in
push
xchg
fwait
inc
fcmovnu
fwait
ja
and
sti
xlat
(bad)
or
mov
out
pop
adc
mov
hlt
test
add
jp
test
inc
jmp
ret
adc
mov
mov
pop
jns
and
xor
jl
outs
xor
add
jne
scas
cmp
call
xchg
stos
out
cmps
inc
jo
xor
cmp
sub
into
cmp
sbb
sete
push
daa
sbb
daa
scas
mov
dec
sbb
and
mov
cwde
adc
mov
das
or
jmp
pusha
push
pusha
leave
xor
xor
imul
lds
retf
imul
ficom
lods
in
loop
jp
adc
aam
aam
fnsave
add
cmp
les
adc
addr16
inc
pop
es
jge
neg
and
popf
bound
retf
push
ret
lods
ss
pop
(bad)
xchg
inc
push
dec
pop
cmc
sahf
ud0
cld
(bad)
pusha
and
popa
cmp
aam
js
hlt
adc
lock
(bad)
int
jle
imul
fild
pop
scas
pop
jns
xor
push
shl
out
add
pop
fisttp
dec
add
(bad)
fsubr
add
ins
add
stc
xchg
lds
or
cs
das
xchg
adc
in
mov
imul
and
dec
cmps
out
lods
push
pop
cs
loope
sub
cmc
aas
movs
xor
outs
jp
sbb
hlt
xor
out
mov
fstp
sub
sbb
lds
jg
cmp
cld
lods
push
fcom
sbb
mov
mov
out
xor
loopne
push
pop
push
das
stos
test
xor
mov
or
out
mov
(bad)
call
xor
icebp
add
je
and
jne
lods
arpl
pop
cwde
jns
outs
jmp
retf
adc
repnz
retf
mov
rcl
outs
ss
pushf
xchg
sbb
das
cli
pushf
inc
cmp
sub
xchg
mov
adc
adc
push
cmp
cs
mov
movs
mov
in
shl
mov
scas
es
pop
mov
mov
adc
std
ret
mov
outs
je
ins
inc
cli
sub
jp
and
ja
mov
inc
add
mov
out
or
sub
and
cmp
adc
mov
push
fwait
sti
jmp
pop
xchg
cmp
jmp
lds
jb
je
xchg
xor
push
adc
fsubp
xchg
xchg
mov
(bad)
or
inc
stos
push
ss
ins
adc
ret
push
cmp
cmp
clc
test
imul
or
or
pop
dec
cmp
sub
sbb
mov
and
ds
xchg
jne
pop
mov
shr
shl
data16
loop
imul
mov
in
cmp
and
cmps
bound
cmp
les
lea
inc
fstp
cmp
cmp
add
je
test
and
adc
adc
dec
test
retf
shr
xchg
sub
sbb
dec
sub
pop
ror
or
mov
(bad)
in
xor
push
push
cs
push
adc
sti
push
mov
jmp
jl
cli
sbb
lods
stc
cli
mov
cmp
jp
push
adc
or
push
adc
sbb
cli
mov
push
retf
inc
push
loop
push
mov
in
daa
or
enter
mov
arpl
fmul
retf
je
jae
push
jecxz
test
addr16
mov
in
repz
in
(bad)
pop
in
mov
cmp
add
sahf
xchg
out
out
rol
jl
call
je
jecxz
repnz
jge
stos
pop
loope
push
or
fdivr
dec
mov
dec
cmp
cmps
jb
jmp
push
add
pop
xchg
addr16
hlt
lock
mov
test
in
mov
push
iret
sub
retf
xor
aad
jge
ins
rcr
sub
sub
push
ds
enter
std
loopne
jnp
mov
into
ror
into
xor
or
scas
movs
std
mov
les
pop
shr
movs
(bad)
and
ins
ret
cwde
or
sbb
in
or
sub
cmp
lods
out
fisubr
jnp
lea
jge
loop
hlt
and
sub
icebp
ins
arpl
jg
mov
cmp
adc
add
ins
aas
div
inc
pop
shl
jno
lds
fcom
arpl
out
jp
les
(bad)
retf
icebp
and
int
and
enter
scas
mov
mov
iret
(bad)
fmul
inc
mov
popa
jno
retf
sub
retf
sar
jg
sbb
xor
jo
add
xor
ror
test
outs
fistp
sbb
pop
aas
fdecstp
and
in
retf
rcl
mov
xchg
retf
mov
mov
in
pop
es
inc
xchg
es
cs
sub
cdq
test
neg
pop
push
or
adc
sbb
rcl
fist
fwait
pop
js
xor
xor
test
and
cmp
mov
aaa
mov
lods
retf
ret
and
push
jne
(bad)
jmp
dec
popaw
sub
jnp
movs
push
inc
jle
(bad)
mov
(bad)
mov
push
mov
xchg
push
sub
mov
fld
sub
addr16
pop
ret
and
das
and
mov
cld
push
addr16
xchg
adc
or
cmp
inc
in
in
ret
aaa
ds
mov
movs
ret
add
mov
jae
inc
jmp
popa
mov
xor
stos
xor
repz
xchg
movs
dec
jb
(bad)
push
push
loope
push
shl
movs
fiadd
repz
push
std
mov
nop
pop
push
lds
imul
ret
jp
dec
fwait
cmp
dec
inc
sbb
fmul
test
aaa
ja
sub
data16
aad
mov
out
aam
push
test
or
cmp
mov
inc
rcr
movs
(bad)
xor
fcmovb
std
sbb
add
test
cmp
push
(bad)
retf
inc
icebp
jl
ds
mov
mov
in
rcr
jmp
pop
stos
daa
in
jae
test
or
data16
lods
jmp
cmp
retf
ins
xchg
mov
or
les
sub
movs
pop
lods
retf
dec
js
mov
mov
fwait
iret
mov
push
jmp
push
sbb
movs
in
xchg
stc
and
mov
mov
fadd
mov
shr
movs
repz
jmp
ror
retf
mov
in
sbb
xchg
out
enter
jge
fisub
push
test
dec
add
and
adc
mov
call
rol
push
fisubr
(bad)
stc
pop
fnsave
(bad)
inc
inc
mov
mov
jg
inc
push
retf
adc
jle
addr16
mov
mov
lods
xchg
call
dec
add
add
loopne
in
inc
sub
data16
fwait
pop
test
pop
cli
sbb
pop
adc
and
(bad)
les
ins
in
clc
cmps
or
adc
jae
ror
xchg
adc
xchg
xchg
les
adc
and
hlt
mov
push
in
mov
cwde
ret
je
push
jno
and
rcl
shl
mov
cmp
ds
and
sub
pop
in
nop
sub
mov
and
lds
lods
lods
adc
jmp
inc
repz
shl
push
mov
scas
sbb
shl
test
test
inc
push
adc
std
or
sub
int3
xchg
cmp
push
sti
icebp
cli
xor
adc
int
cmp
pushf
and
scas
retf
inc
mov
mov
adc
scas
jb
jbe
jb
lds
mov
add
test
in
cmp
fdiv
sub
and
mov
mov
retf
fs
sbb
adc
and
dec
mov
dec
xchg
dec
dec
test
clc
test
stc
dec
or
and
(bad)
scas
push
stc
js
hlt
push
push
sbb
sub
push
inc
xor
js
not
inc
and
or
in
enter
test
ret
or
sbb
in
mov
fidivr
leave
retf
and
in
mov
jmp
jecxz
ret
xor
ror
push
or
push
dec
mov
mov
or
jp
pop
jl
pop
shl
mov
repz
xchg
inc
addr16
cmovnp
cmp
jb
sar
popa
aad
mov
lahf
adc
push
js
jbe
dec
aas
mov
adc
shr
xlat
loope
xchg
lahf
jno
or
mov
ins
jns
xor
ins
js
fsubr
popf
mov
cmp
lods
cmp
xchg
mov
mov
aas
out
imul
add
mov
add
popf
adc
test
fist
pop
cmp
lock
and
cdq
loopne
mov
add
jle
mov
ror
dec
daa
test
stc
or
push
into
sti
xor
mov
inc
fisubr
fwait
jbe
in
xor
push
xor
xchg
and
push
push
or
loopne
(bad)
inc
add
lods
jecxz
(bad)
mov
mov
pop
mov
dec
cmc
sbb
call
mov
mov
or
pop
lds
imul
es
scas
xchg
div
aas
push
xchg
(bad)
retf
(bad)
jno
and
aam
pop
and
mov
cmps
mov
jnp
out
cmp
jb
jge
jnp
cmps
hlt
dec
mov
adc
pop
add
lea
js
scas
add
lock
int
(bad)
movs
mov
popf
add
ficomp
outs
xor
adc
sbb
dec
dec
inc
pop
sbb
push
sbb
jnp
movs
sbb
(bad)
or
mov
fist
jmp
stos
(bad)
fisub
xchg
dec
add
int
repz
cwde
and
push
sbb
push
je
pop
push
inc
jnp
adc
adc
inc
sub
or
mov
mov
xchg
pop
js
push
inc
cmp
mov
xchg
xor
adc
das
shl
outs
xchg
cmps
sbb
sbb
xor
or
mov
xor
cmp
dec
mov
iret
sub
fs
push
and
js
xchg
cmp
mov
add
cmc
cwde
ror
arpl
cmp
and
rcr
or
jb
int
pop
fwait
mov
mov
pusha
xchg
push
sti
push
popa
xchg
(bad)
in
js
repz
or
jno
loopne
cdq
or
inc
(bad)
or
mov
push
add
scas
sbb
inc
lds
mov
int
push
lahf
adc
dec
push
call
mov
ficomp
sub
sub
dec
call
test
movs
mov
jmp
movs
mov
movd
dec
jnp
and
stos
inc
mov
arpl
das
repz
mov
sbb
adc
jmp
dec
pop
out
inc
int3
rcl
aaa
xlat
aam
mov
sub
sub
inc
mov
pop
call
popa
mov
mov
and
imul
cmp
cmp
aad
fwait
cmp
jne
add
(bad)
mov
in
fidiv
pop
sub
inc
adc
cmp
add
popa
(bad)
or
cli
addr16
adc
(bad)
popa
jne
xor
mov
jb
pop
sub
ds
repz
outs
sbb
aaa
push
xor
push
div
iret
aad
sub
(bad)
xchg
shl
xchg
mov
test
push
inc
es
stos
pop
cmp
mov
mov
shr
enter
dec
cmp
dec
rcl
add
jle
call
xor
mov
inc
xchg
mov
ds
(bad)
(bad)
out
loope
cmp
icebp
xor
shl
xchg
cmp
shl
mov
pop
mov
fdiv
(bad)
cmps
pop
adc
xor
imul
cmps
add
jl
dec
dec
adc
and
dec
cmp
ret
adc
shr
push
aam
fdiv
jbe
add
ins
rcl
xlat
in
(bad)
adc
ror
les
pop
xchg
push
adc
les
xchg
or
pusha
shr
test
dec
jl
adc
lock
sub
int3
out
iret
pop
pop
call
inc
add
das
addr16
xor
stc
jno
(bad)
scas
(bad)
rcr
arpl
inc
sub
ret
lea
pop
pminub
sub
xor
and
push
es
cmp
rcr
stos
sahf
pushf
and
pop
lock
sub
in
cmc
pop
or
mov
jge
popa
push
(bad)
jmp
adc
test
push
pop
aam
mov
mov
in
in
addr16
mov
inc
iret
es
add
aam
in
jmp
cmp
push
dec
lds
lods
sub
inc
lea
call
or
cmp
xor
mov
xchg
(bad)
inc
inc
xor
mov
cmps
lahf
jl
leave
pop
mov
pop
out
icebp
cmc
mov
daa
jns
bnd
bound
ja
mov
sub
lods
lods
sub
lock
sbb
push
nop
mov
cwde
pop
pop
fisub
imul
sbb
adc
and
sti
arpl
in
pop
mov
sub
popa
jne
xor
das
movs
cmp
jo
mov
stos
sub
xor
add
mov
pop
pop
fnstsw
jo
stos
push
cmp
retf
mov
or
ret
sahf
xchg
adc
ret
lods
pop
ss
xchg
cmps
cmp
or
fisttp
jle
ja
enter
xchg
pop
int3
aas
mov
iret
add
and
movs
cmc
push
jl
xor
popf
ret
xchg
push
push
jbe
sahf
lods
dec
mov
pop
in
sbb
inc
loop
mov
jns
addr16
out
push
xor
xchg
mov
cmp
jb
dec
xlat
sub
sub
(bad)
fst
adc
sti
dec
xchg
adc
cdq
ins
xchg
dec
push
push
lea
retf
add
xchg
or
xchg
or
call
inc
push
pop
cmp
push
sahf
adc
xchg
and
push
push
(bad)
adc
emms
pop
or
mov
outs
adc
sub
pop
pop
aaa
fadd
(bad)
fdivr
pop
sbb
or
pop
dec
int3
mov
gs
push
pop
and
inc
ret
xor
div
push
lea
test
sahf
in
push
enter
test
jmp
xchg
clc
mov
push
jecxz
out
lea
push
jg
test
sti
popf
popf
fild
jbe
call
push
mov
and
iret
mov
jb
and
test
inc
sbb
test
cmp
addr16
push
es
movs
jmp
xchg
pushf
repnz
push
jae
push
inc
nop
adc
add
inc
mov
data16
sub
(bad)
mov
sahf
xor
jmp
sbb
xor
push
xor
dec
xchg
add
in
fucomip
sbb
or
push
mov
inc
outs
lahf
mov
xor
adc
xchg
enter
mov
loopne
jb
pop
mov
mov
mov
ins
fild
sub
jg
(bad)
mov
push
and
xchg
jns
mov
pop
aad
fistp
add
scas
pusha
in
cwde
or
jmp
outs
xor
les
and
inc
call
movs
pushf
mov
neg
or
repz
cmp
int
test
sub
and
shl
das
out
leave
mov
mov
jg
fnsave
push
mov
or
and
pop
mov
sub
test
dec
xor
xor
inc
shl
mov
pushf
add
scas
or
pop
push
and
jge
sub
aas
fwait
ror
pop
(bad)
mov
rcl
mov
out
push
loop
leave
div
sub
inc
mov
inc
jp
and
cmc
and
into
mov
ja
push
inc
cmc
add
ins
in
sbb
jecxz
hlt
xor
pop
jbe
sbb
inc
lahf
jae
lock
std
pushf
stos
retf
loope
gs
shl
push
fstp
movs
mov
add
aas
ins
and
ja
jmp
sbb
enter
jmp
and
dec
popf
movs
inc
sbb
mov
in
retf
jnp
loopne
adc
(bad)
mov
add
loopne
test
mov
es
or
sbb
jno
adc
sub
adc
cmp
fidiv
fmul
mov
pop
(bad)
mov
mov
retf
push
lods
imul
push
jle
inc
add
test
les
xor
inc
pop
fistp
sbb
push
das
outs
mov
loop
xchg
es
fwait
xchg
in
and
mov
and
or
sub
popf
in
imul
add
xchg
xchg
push
xlat
or
cmp
leave
pcmpeqb
cmp
pop
fmul
lods
imul
std
or
lods
aad
inc
jmp
mov
das
daa
stos
aas
or
lahf
lods
pop
pop
enter
int3
(bad)
lock
mov
cli
test
data16
(bad)
mov
push
adc
adc
cmps
mov
pop
inc
inc
stos
jmp
inc
or
(bad)
loopne
out
and
jecxz
imul
daa
out
movs
retf
cmp
sub
lock
sub
fisubr
stos
xchg
fwait
stos
(bad)
and
xor
or
rol
xchg
dec
mov
xor
scas
paddusw
rcr
push
mov
and
idiv
aas
cmp
or
jg
in
pop
mov
jge
and
pop
mov
cwde
push
loopne
mov
clc
cmp
ja
jnp
test
add
stc
xor
and
xchg
ret
(bad)
cmp
es
scas
popf
std
movs
xchg
and
out
adc
cmp
inc
add
das
stc
push
sti
inc
stos
jnp
iret
aas
jp
xor
xchg
aas
ja
inc
mov
test
call
leave
xchg
sar
adc
je
call
jmp
sbb
mov
rcr
cmp
adc
iret
popa
cmps
loop
int3
cmp
push
xor
mov
shl
ss
rol
mov
js
(bad)
mov
rol
inc
or
or
dec
sbb
push
(bad)
push
(bad)
jp
mov
lds
movs
loopne
fnsave
pop
cmc
inc
loope
jne
mov
js
in
mov
gs
(bad)
pop
daa
aaa
sbb
adc
(bad)
fist
mov
push
sbb
into
sbb
cwde
add
test
add
add
mov
mov
int3
call
jae
dec
cdq
inc
dec
xchg
dec
xlat
rcl
inc
scas
or
aad
jp
mov
fadd
jo
(bad)
jmp
iret
pop
sbb
push
int3
das
lods
xchg
mov
sbb
fisub
adc
jae
mov
movups
dec
fdivr
movs
push
test
mov
jg
rol
mov
dec
mov
xor
dec
jno
jns
adc
and
inc
stos
cli
cmps
or
push
iret
out
stos
mov
sub
xchg
loope
cmp
mov
es
lods
pop
stos
int
push
sub
iret
shl
lea
jae
ffree
dec
sbb
cmp
(bad)
divps
jmp
(bad)
ss
mov
rol
cmps
sti
test
pop
jmp
out
cwde
push
aaa
xchg
mov
mov
inc
stos
gs
sahf
mov
xchg
mov
dec
cmc
cmps
jmp
ins
sub
sbb
data16
pop
jp
nop
or
sbb
mov
add
iret
and
mov
hlt
pop
mov
xor
sbb
(bad)
sub
repz
outs
fisub
pop
fnsave
push
push
int
icebp
sbb
cwde
fmul
mov
xor
bound
(bad)
sbb
sti
lock
test
fisttp
adc
bound
mov
jnp
test
and
fstp
out
les
mov
or
cmc
xchg
neg
adc
xchg
fldcw
rcr
add
hlt
sbb
daa
icebp
jo
sar
adc
rcl
call
pop
mov
or
mov
mov
std
sahf
rcl
imul
stc
test
mov
pop
add
jg
mov
push
test
mov
sbb
sbb
sbb
jmp
inc
ja
cmp
int
dec
data16
std
jmp
sbb
stos
xchg
add
bound
jecxz
(bad)
jo
sbb
(bad)
call
sub
rcr
dec
leave
xor
daa
aad
das
sub
and
imul
pop
sub
inc
fstp
dec
sar
sub
sbb
push
pop
test
add
mov
inc
push
push
scas
jbe
mov
mov
mov
pop
bound
repnz
pop
or
test
jae
jle
cmp
sub
mov
stc
xchg
outs
xor
xor
mov
xchg
cli
or
pop
je
mov
dec
scas
out
jae
scas
push
cmp
mov
mov
jmp
sub
nop
add
mov
movs
addr16
cmc
sub
pop
(bad)
in
lea
jmp
(bad)
scas
push
addr16
les
jg
lea
push
imul
pop
pushf
cmp
lahf
push
fmul
pop
out
jmp
push
xchg
daa
aas
repz
xchg
mov
sub
movs
dec
repz
out
pop
or
loop
mov
mov
mov
sbb
ror
mov
or
cmps
(bad)
out
inc
jg
into
jp
jae
cmp
hlt
arpl
dec
stos
jge
in
cmc
pusha
fisttp
dec
mov
fnsave
pop
mov
cmp
and
pop
nop
mov
pop
adc
sbb
mov
push
ins
or
cld
test
psllw
out
mov
pop
or
sub
jae
adc
adc
pop
into
aam
mov
add
mov
in
dec
jmp
jno
popa
jns
dec
fcomp
inc
int3
inc
ss
addr16
repz
mov
sub
sub
(bad)
cmp
je
imul
sbb
or
ss
push
pop
outs
hlt
xchg
retf
gs
inc
pop
xor
cmp
cmp
lods
dec
sbb
out
mov
sub
xor
mov
dec
xchg
xor
mov
ret
add
loope
or
add
mul
ss
dec
lds
inc
mov
add
mov
nop
cli
push
ficomp
mov
adc
loop
out
xor
out
clc
pop
sub
mov
ins
push
lock
inc
jp
loop
mov
sar
push
mov
idiv
outs
mov
lea
cmp
fsub
push
cli
stc
push
fs
xor
clc
icebp
xchg
into
jmp
clc
dec
and
dec
add
xor
sbb
jle
pop
daa
dec
fdiv
inc
mov
and
stc
(bad)
cmp
arpl
mov
cmc
mov
and
add
push
test
sbb
pop
neg
mov
jns
pop
lds
dec
dec
sbb
sub
cmp
add
or
fnstenv
xor
or
arpl
sub
aaa
repz
aam
mov
jo
(bad)
(bad)
fsub
mov
push
pop
mov
jnp
shr
mov
sti
fxch
inc
fistp
pop
data16
mov
iret
dec
sbb
or
stos
in
gs
sbb
retf
stos
or
enter
scas
daa
adc
(bad)
mov
pop
inc
inc
pop
sahf
rcr
jnp
or
mov
jge
mov
push
std
xor
cmps
inc
mov
in
pop
cmp
icebp
xlat
imul
dec
jmp
lea
adc
sub
ficom
push
fcom
stc
and
imul
dec
std
stos
pop
mov
(bad)
mov
mov
sub
movs
and
pop
(bad)
push
xchg
mov
test
pop
jno
aaa
push
sub
push
and
xchg
sbb
pop
bound
hlt
mov
mov
xchg
mov
lock
test
push
push
sbb
clc
mov
pop
pop
cmp
inc
mov
aas
shr
out
fiadd
mov
popf
outs
retf
mov
call
cs
stos
inc
mov
shl
adc
inc
icebp
leave
mov
sbb
cmp
mov
ins
imul
mov
add
inc
clc
stos
dec
push
shr
mov
push
jnp
jp
push
or
jae
pop
je
mov
push
and
out
mov
xchg
das
cmp
xchg
call
fwait
mov
add
mov
xchg
call
and
ja
scas
or
sar
cmps
daa
xor
(bad)
dec
retf
cmp
(bad)
jecxz
pop
jns
pop
adc
stos
dec
lods
inc
aas
ss
aad
bound
sti
jmp
mov
push
mov
hlt
outs
dec
cmp
cmp
sub
stc
push
cld
adc
mov
repnz
fisubr
jg
xchg
lahf
and
cld
push
xor
call
out
mov
fsubrp
repnz
dec
jg
add
scas
jp
outs
sbb
cmp
jmp
mov
inc
ror
jae
ret
imul
clc
or
lea
cmp
pop
add
lods
pop
cmp
in
clc
sbb
push
sub
jae
mov
ins
ins
ins
stos
add
jge
fmul
and
xchg
aam
call
dec
retf
or
xchg
retf
pop
hlt
and
ss
or
mov
and
sub
div
shl
fistp
sub
lock
pop
jnp
inc
lds
mov
int
dec
dec
les
inc
mov
retf
dec
xor
imul
mov
push
cmp
or
sti
mov
jno
inc
je
call
loop
pop
push
xchg
mov
add
or
fwait
sti
addr16
mov
fmul
inc
pusha
sbb
dec
sub
push
jno
sub
ret
pop
in
jno
push
ficom
push
and
sar
cmp
push
sbb
ins
test
add
outs
inc
test
popf
pop
cmp
lds
aas
cmp
fcmovnu
push
lahf
loope
mov
push
gs
mov
pop
cmc
lods
mov
push
mov
ins
sbb
pop
retf
jle
jle
rcl
lods
mov
inc
stos
popa
adc
sahf
(bad)
xlat
scas
fwait
mov
aad
(bad)
scas
push
xchg
sub
cmps
int3
jno
cmp
push
fs
(bad)
xchg
clc
fmul
retf
or
cmp
push
ret
and
xchg
aas
clc
pop
jmp
or
rol
adc
imul
mov
jl
sub
(bad)
stos
sub
imul
test
outs
or
test
sbb
lods
cmp
sub
and
cdq
arpl
jg
stos
inc
inc
ja
aaa
sbb
push
daa
mov
stos
cmp
retf
iret
and
ins
xor
aad
retf
xchg
scas
test
push
sbb
ds
mov
rcl
mov
pop
inc
dec
jle
into
movs
inc
push
call
daa
test
mov
dec
xor
(bad)
jmp
sbb
cmp
sahf
lock
xchg
mov
xlat
movs
xlat
nop
in
inc
test
sbb
stc
stos
pop
cmp
cmovle
sub
cmp
repz
cmps
fisttp
(bad)
clc
popf
shl
add
int
test
aad
jne
lock
dec
out
push
aaa
adc
mov
ror
add
js
pop
stc
nop
repz
or
inc
push
lock
xor
ss
xchg
push
out
dec
cmp
mov
lea
scas
mov
es
fimul
or
mov
xor
loopne
push
or
repz
jnp
xchg
adc
cmp
add
cmps
ds
pop
push
dec
pop
leave
loop
imul
push
jl
loop
sbb
adc
xlat
mov
adc
sar
pop
cmp
sbb
cmp
jl
lods
fs
shr
lods
(bad)
stc
rcl
rcl
cmps
jns
jno
dec
sub
ins
and
ficomp
aad
xlat
sub
fs
stos
inc
xor
sbb
das
add
out
movs
sub
(bad)
and
out
cli
jbe
mov
add
aaa
in
popf
cmc
js
lods
xor
data16
mov
iret
xor
loop
mov
mov
movs
daa
int3
xor
imul
retf
mov
(bad)
mov
cvttps2pi
pusha
adc
or
mov
test
arpl
xchg
cmps
movs
jecxz
movs
jge
pop
and
(bad)
cmp
repnz
jmp
sbb
mov
push
dec
sar
fiadd
fld
out
xchg
sub
cmp
sbb
or
fs
jnp
das
aad
push
aaa
lods
retf
fistp
cs
icebp
dec
push
repnz
mov
iret
std
das
mov
add
push
adc
pop
and
cmp
dec
rcl
dec
call
pushf
add
xor
xor
mov
fs
sbb
xchg
test
clc
iret
data16
aad
mov
or
stos
mov
dec
inc
mov
push
push
xor
icebp
adc
xchg
fld
adc
push
sar
pop
adc
fisub
adc
vpmulhw
or
xchg
shl
addr16
adc
or
and
sbb
ret
mov
repnz
or
mov
mov
push
dec
cmps
jle
and
or
sbb
inc
xchg
or
scas
dec
lods
call
daa
sar
cld
ret
adc
jns
mov
inc
loopne
and
cmp
add
push
in
dec
hlt
dec
out
and
mov
lods
inc
out
fild
rcl
cli
inc
xchg
xor
(bad)
sbb
inc
jns
pusha
hlt
paddsw
and
call
xchg
std
(bad)
shr
addr16
dec
xor
addr16
movs
pop
lods
rcl
(bad)
jmp
xchg
ret
and
pop
mov
cmp
sub
retf
adc
xchg
sbb
ins
or
cli
and
shl
add
pop
outs
push
inc
movs
fnstcw
push
(bad)
jge
(bad)
icebp
rcr
rcl
aam
push
repz
test
xchg
pusha
fsubr
inc
scas
in
out
outs
inc
dec
movs
mov
jle
push
jge
lea
jecxz
rcl
and
add
adc
fbstp
mov
ret
xchg
cmp
test
inc
in
dec
(bad)
bound
xor
mov
cmc
call
or
jmp
in
dec
mov
sahf
mov
test
out
rol
cmc
cmp
mov
or
xchg
cmp
ss
or
stos
push
pop
cld
inc
arpl
push
pop
mov
movs
cmp
pop
inc
push
arpl
fstp
inc
push
test
pop
dec
add
sahf
enter
jg
inc
add
lock
dec
pushf
mov
jmp
adc
movs
ret
add
or
hlt
ja
fs
xchg
jmp
mov
pop
or
aaa
or
cmp
jecxz
jns
scas
inc
mov
test
ins
sub
sub
adc
or
and
lock
jo
pop
mov
pop
dec
fnsave
out
pop
mov
dec
test
cli
loope
lods
imul
mov
(bad)
std
adc
xor
movs
mov
shl
mov
ret
fstp
xchg
(bad)
frstor
(bad)
das
jg
xor
pop
lods
sub
(bad)
(bad)
pop
and
add
lods
out
mov
adc
and
cmps
cmps
sub
xchg
lods
clc
pusha
imul
mov
mov
cld
cmps
scas
adc
out
mov
cmp
sbb
into
jb
mov
in
push
(bad)
mov
pop
sti
inc
retf
sub
add
cmp
fstp
jbe
xchg
outs
mov
aam
ja
test
das
data16
arpl
xchg
sahf
sub
jmp
into
fst
stos
inc
call
mov
sub
outs
out
(bad)
test
ss
shl
and
shl
fcom
mov
jo
and
sbb
shr
pop
adc
int
test
add
lock
sub
pop
xchg
pop
pop
mov
push
je
inc
sub
mov
aaa
sub
push
dec
test
call
mov
add
push
push
and
add
xor
ss
cmp
and
lahf
add
inc
hlt
cwde
dec
call
(bad)
pop
or
sbb
dec
mov
cmp
push
pop
enter
dec
retf
push
movs
mov
or
mov
fsub
pop
movs
dec
jne
sub
shl
loopne
cmps
mov
outs
inc
leave
test
or
test
shl
adc
movs
dec
xchg
mov
sbb
mov
cwde
popa
test
(bad)
and
(bad)
mov
dec
xchg
loope
lock
adc
and
pusha
pop
sahf
ss
out
in
jo
mov
inc
daa
(bad)
pop
push
ja
or
cwde
mov
jae
hlt
or
inc
mov
out
inc
das
push
(bad)
sbb
fisttp
add
xchg
jl
scas
ja
sbb
xchg
dec
mov
jae
call
sbb
mov
push
sbb
cmps
mov
retf
ins
jg
cmp
push
lea
dec
mov
sub
adc
retf
std
iret
mov
and
paddw
mov
mov
pusha
pop
mov
xchg
dec
ret
xchg
das
inc
stos
xchg
icebp
(bad)
outs
jp
mov
xlat
popa
inc
jge
mov
dec
push
xchg
aam
repnz
hlt
xchg
test
test
and
sar
inc
mov
xor
fwait
aam
sbb
pop
int3
fwait
adc
fsubr
jns
cld
into
retf
cs
xchg
test
cmp
jmp
leave
lahf
add
lods
cmp
cmp
neg
mov
in
std
mov
mov
and
ss
dec
je
dec
cwde
mov
ja
cmp
inc
mov
test
jno
(bad)
mov
push
in
add
fwait
pop
dec
fsub
push
xor
sbb
or
nop
adc
hlt
inc
in
jmp
es
jge
test
ins
add
add
pop
shl
cmps
push
xor
inc
imul
mov
icebp
fist
movs
jo
sbb
xor
imul
ss
mov
mov
pop
adc
push
popf
push
xor
das
and
sti
mov
loop
lods
outs
xor
mov
cmp
adc
nop
stos
cmove
mov
das
popa
fisttp
adc
stos
in
jmp
sub
mov
mov
enter
aaa
cmp
inc
iret
popf
scas
shl
mov
push
mov
dec
in
popf
call
jle
loope
pop
out
jnp
fs
mov
movs
inc
push
mov
adc
push
aad
movs
xchg
and
xchg
das
call
mov
outs
aaa
and
pop
add
arpl
mov
push
adc
mov
sub
dec
sti
add
and
mov
lods
aas
push
push
(bad)
pop
dec
mov
pop
mov
sub
mov
fimul
pop
inc
stos
in
and
fld
movs
or
xor
cmp
and
mov
inc
fcmovnb
push
and
stos
mov
sub
iret
jns
mov
and
mul
into
mov
jge
inc
inc
pop
pop
push
dec
xor
(bad)
fwait
hlt
dec
mov
shr
loope
adc
std
mov
push
repnz
mov
ficomp
adc
pandn
sbb
in
rol
das
and
sbb
mov
add
aaa
cmp
(bad)
push
mov
aam
addr16
ins
mov
in
push
pop
mov
and
push
stos
in
out
mov
retf
movs
popf
sbb
mov
mov
(bad)
jno
cmp
cld
mov
int
fld
idiv
cmps
sub
movs
adc
shr
inc
sbb
sbb
dec
pop
push
dec
xchg
repnz
cs
lods
xor
pop
xchg
outs
and
in
les
xchg
xchg
push
xchg
push
mov
mov
(bad)
adc
and
jl
xor
xor
mov
cmp
dec
mov
push
aam
leave
and
ss
jp
xor
or
sub
add
popf
retf
ins
shl
daa
jge
mov
or
mov
or
rcr
outs
or
loopne
jno
add
ret
push
mov
and
or
pushf
jbe
jl
inc
clc
mov
add
pushw
add
outs
push
sbb
xor
push
out
and
(bad)
fist
xchg
mov
xor
vmovhps
pop
jmp
ds
lock
mov
imul
or
jp
stos
(bad)
outs
mov
adc
jg
pushf
mov
jp
inc
mov
sub
mov
jmp
mov
cld
and
out
je
movs
cmp
cmps
arpl
jnp
in
outs
stc
xor
aad
adc
ficom
in
xor
and
outs
mov
repz
sub
repnz
arpl
jns
mov
add
out
cmp
push
pop
mov
mov
fisub
mov
dec
cmp
retf
cwde
adc
mov
movs
outs
int3
jns
xchg
or
jno
jp
mov
jle
leave
mov
pusha
mov
mov
xor
mov
mov
xchg
mov
mov
xchg
les
in
into
aas
das
and
outs
ret
pop
dec
push
sub
fisub
or
pop
cmp
int
and
push
sbb
sbb
shl
in
pop
jmp
pop
mov
mov
xor
add
jp
scas
adc
cmps
cld
pop
jecxz
jp
mov
push
bswap
stos
sbb
lea
or
mov
adc
dec
ins
dec
rol
cmc
iret
mov
xchg
loope
jne
imul
and
iret
sub
xor
mov
mov
out
mov
inc
call
or
ins
mov
or
(bad)
xchg
push
pop
pop
orps
inc
aad
pop
not
push
loop
dec
cwde
or
outs
xor
and
add
(bad)
add
cdq
pop
mov
xchg
mov
loope
xor
ins
sti
repz
sbb
mov
mov
inc
loope
mov
or
sub
out
mov
or
repz
fucomi
cmp
imul
add
push
pop
jnp
fs
lock
dec
fistp
mov
xchg
or
xor
je
in
and
jl
sub
cmp
fst
sub
jmp
(bad)
push
and
add
sahf
and
inc
xchg
cwde
out
xchg
lds
or
arpl
sbb
ins
or
arpl
jbe
mov
push
(bad)
cwde
jae
sub
mov
mov
inc
xor
mov
cdq
xchg
enter
jns
or
jbe
ret
xlat
mov
enter
pop
ss
adc
inc
inc
push
(bad)
inc
mov
out
mov
sub
push
fnstcw
cmp
jl
lods
fist
cmps
mov
mov
xchg
pushf
sar
clc
jle
hlt
rol
cmp
rol
repnz
xchg
inc
cmc
aam
hlt
jmp
les
xchg
gs
loop
add
js
(bad)
arpl
retf
cs
mov
add
iret
mov
xchg
(bad)
xor
sar
fistp
adc
cmp
mov
and
cmp
inc
sar
bound
shl
pushf
aad
cs
(bad)
retf
cmps
shl
jge
xor
mov
adc
imul
add
jecxz
jns
mov
lahf
movs
adc
retf
or
push
ss
add
sbb
outs
sub
add
ja
inc
push
and
out
add
ins
stc
lock
or
push
test
add
inc
pop
xchg
mov
repz
add
repz
jnp
iret
lods
pminsw
push
fimul
inc
icebp
xchg
jecxz
pop
mov
sub
movs
dec
call
add
scas
xor
ror
test
xchg
adc
pop
(bad)
xlat
dec
cwde
ror
cmp
xchg
out
ja
retf
mov
add
js
jmp
add
mov
fld
outs
pusha
out
mov
xchg
sub
jbe
in
mov
push
inc
mov
or
ja
rol
in
push
movs
mov
inc
mov
or
lea
xor
xor
daa
in
mov
sub
imul
jmp
vorpd
sbb
(bad)
sbb
test
stos
mov
mov
push
dec
(bad)
popa
push
pop
test
jl
arpl
lock
dec
or
or
outs
pop
pop
dec
or
pop
jp
clc
(bad)
adc
in
movs
jbe
xchg
cmc
mov
inc
dec
pop
cmps
sbb
into
(bad)
cmp
sti
ret
cmp
add
dec
jl
sub
push
not
or
sahf
jo
and
inc
sbb
imul
ror
xor
loope
loope
add
test
mov
sbb
call
pop
fs
xchg
cwde
mov
adc
stos
dec
fs
fst
idiv
clc
mov
adc
xchg
mov
jl
mov
(bad)
neg
dec
mov
dec
loopne
popf
test
call
loopne
or
mov
nop
push
ss
dec
push
and
mov
xchg
jge
jae
pop
retf
les
mov
jae
add
xor
mov
jmp
mov
cmp
mov
out
cmp
cmps
icebp
arpl
xchg
outs
add
ins
(bad)
cmp
call
adc
cmps
jae
xor
popa
push
out
fidiv
mov
cmp
xor
mov
and
lahf
mov
outs
xchg
inc
dec
pop
pop
lock
dec
cli
mov
mov
cmps
lahf
xlat
pop
jmp
shl
data16
sub
xchg
stc
sbb
xlat
repnz
inc
lahf
sub
sbb
inc
add
fwait
xchg
sbb
stos
dec
dec
mov
push
sbb
lock
xor
ds
pop
aad
pop
ds
call
fucomp
push
jmp
popa
mov
pusha
adc
arpl
jmp
add
sbb
fldenv
mov
in
ins
rol
leave
mov
sub
sbb
out
adc
xchg
lahf
mov
fdiv
add
bound
test
fisttp
aam
sbb
stc
and
mov
ins
fidiv
jo
xchg
mov
sub
in
mov
nop
adc
js
retf
inc
and
in
xchg
into
pop
fisttp
add
push
pop
je
inc
adc
ins
sub
cli
xor
mov
push
mov
push
dec
jb
retf
mov
in
xor
call
sbb
ret
std
out
lds
rcl
xchg
sbb
inc
icebp
xchg
add
and
mov
in
inc
das
cmps
xor
or
mov
mov
cmp
mov
mov
mov
call
adc
inc
xchg
out
sbb
repz
ret
mov
ds
ror
into
cwde
or
jnp
test
mov
fsubp
fwait
xor
shl
(bad)
and
retf
les
pop
loope
loope
mov
cld
sbb
cmc
cmp
inc
mov
mov
in
cs
loope
stos
je
jge
retf
sub
and
xchg
and
inc
ret
cmp
cmp
mov
push
into
inc
sbb
jo
ficomp
xor
and
mov
scas
push
inc
mov
mov
xor
movs
test
in
or
inc
jmp
dec
xchg
ffreep
fimul
sbb
sbb
mov
or
cdq
and
pop
outs
mov
sbb
js
mov
loop
jo
inc
iret
(bad)
shl
into
test
enter
fistp
pop
das
cmp
cmp
dec
mov
push
les
push
and
sub
(bad)
rol
pop
popf
ret
push
ja
push
daa
in
movs
mov
cmp
inc
imul
sub
jb
dec
popa
ins
push
adc
pop
pop
mov
outs
(bad)
jno
jb
in
xlat
fsubr
das
arpl
pop
scas
inc
or
ins
dec
imul
popf
cmps
test
push
sbb
mov
ror
ret
(bad)
mov
dec
cmp
dec
(bad)
fadd
pop
fcmovnu
in
add
jmp
and
ss
mov
(bad)
sbb
xchg
adc
xlat
adc
pop
pop
gs
xchg
(bad)
scas
mov
pop
and
sub
dec
mov
test
or
sub
cdq
es
ja
nop
fwait
xor
jbe
sahf
or
imul
out
pop
clc
mov
push
pop
out
mov
clc
jne
cs
(bad)
mov
(bad)
sbb
arpl
mov
outs
(bad)
nop
retf
add
mov
cmp
pop
test
push
add
mov
out
add
mul
pop
popa
dec
fisubr
sub
pushf
sub
mov
jno
lahf
jp
and
jle
cmp
mov
popf
outs
or
cmps
int
pop
xchg
fld
xchg
cmp
scas
mov
rcl
jecxz
pop
fsubp
inc
fadd
fsubr
sbb
and
lock
repz
fbstp
dec
out
mov
shl
mov
aad
inc
push
push
movs
xchg
xchg
frstor
mov
mov
jb
mov
jne
jmp
jnp
jge
jbe
arpl
pop
mov
cmp
retf
lahf
in
or
or
out
rcr
das
fst
cdq
pop
in
push
loope
or
repnz
or
jo
les
shl
mov
xchg
not
xor
pop
xchg
mov
sub
ja
or
add
in
and
daa
sti
shr
inc
mov
push
adc
or
mov
shl
push
setno
cmps
push
int
jae
(bad)
retf
or
push
sbb
dec
clc
cmps
add
scas
push
and
clc
pop
aam
pop
or
mov
mov
xchg
int3
fcomi
adc
cs
mov
or
lahf
popa
mov
jge
scas
fisub
pop
sbb
push
test
dec
xor
icebp
out
xchg
jecxz
xor
idiv
out
xor
(bad)
sahf
pop
cmp
or
and
sub
jmp
dec
sbb
mov
mov
fadd
out
fucom
cwde
mov
adc
adc
jecxz
jns
inc
jmp
sti
add
ja
jle
sub
cmc
jmp
sub
nop
or
push
sbb
repnz
inc
mov
mov
xchg
xchg
lds
popa
push
movs
adc
pop
or
mov
inc
dec
mov
add
push
jnp
sbb
call
dec
push
lock
mov
pop
mov
test
or
sti
out
fimul
mov
movs
in
and
xor
rcl
cmp
(bad)
(bad)
cdq
dec
rcl
push
pop
pop
mov
xor
es
test
pop
mov
test
mov
pop
mov
and
iret
inc
lock
es
sahf
cmp
call
push
push
idiv
pop
cmps
pop
lods
psadbw
stos
mov
inc
mov
mov
and
jno
jns
pop
inc
inc
inc
sub
mov
or
mov
mov
pop
leave
(bad)
and
jmp
inc
pushf
jb
xchg
push
bnd
push
jg
ss
or
mov
cwde
retf
inc
into
ret
xchg
pop
out
adc
out
and
xchg
je
sahf
jle
pusha
jle
in
sbb
add
mov
leave
les
loop
or
xor
shr
test
or
mov
adc
lahf
add
push
pop
stos
mov
popa
fsub
mov
clc
mov
jecxz
or
outs
or
mov
aaa
fisttp
out
pushf
les
jmp
repz
sub
adc
mov
cmp
in
mov
sbb
pop
and
iret
sub
pop
add
jnp
jmp
inc
shld
cmp
push
or
jne
lock
sub
inc
shl
push
mov
or
mov
aad
sub
pop
and
push
cmp
ins
enter
inc
ss
and
aam
pop
icebp
out
stos
mov
test
pop
into
pop
jae
jno
popf
frstor
and
xor
or
jge
or
into
dec
fwait
scas
outs
cli
jns
and
dec
mov
mov
fisub
xchg
mov
dec
xor
mov
es
pop
pushf
inc
cmp
mov
jle
loope
jecxz
lods
xchg
lahf
sti
daa
(bad)
pusha
test
pushf
mov
push
mov
int
es
into
pop
push
data16
adc
xor
cmps
add
mov
pop
jg
shld
add
mov
shl
addr16
xor
sahf
adc
scas
pop
push
adc
(bad)
push
push
add
push
sbb
jp
popf
pop
xor
loop
fdivr
rep
jne
jne
daa
out
jecxz
jno
loopne
sbb
pop
push
push
scas
add
xchg
mov
stos
mul
xor
dec
pop
rcr
(bad)
and
std
mov
pop
jl
jo
or
loope
out
leave
mov
cwde
jle
xchg
dec
int3
pop
out
jne
scas
add
jg
pushf
pop
sbb
popa
xor
push
jecxz
sbb
ds
xor
adc
jp
xchg
inc
pop
xor
retf
mov
lods
repz
sahf
vpshaw
jp
fild
gs
dec
arpl
loope
shr
jno
mov
sub
imul
std
test
out
gs
push
sti
(bad)
jp
dec
pop
iret
aas
mov
outs
aas
cmp
inc
inc
sbb
mov
mov
push
repz
(bad)
cli
push
push
in
xor
test
je
cs
rcr
mov
dec
cmc
adc
and
call
out
outs
inc
mov
adc
adc
push
sbb
jmp
mov
mov
cs
outs
pop
les
inc
ret
sub
sbb
mov
fisubr
stos
or
inc
rcl
retf
jne
fild
enter
les
pop
pop
iret
or
in
dec
iret
sbb
mov
and
enter
sahf
xor
jbe
mov
push
and
call
jne
lahf
je
jge
add
icebp
in
movs
mov
int3
stos
in
sahf
enter
rcr
xchg
std
jb
hlt
cld
or
mov
fld
lods
cmp
pop
loop
adc
jl
das
push
mov
cmp
xor
adc
and
daa
dec
stos
fwait
adc
xor
pop
(bad)
xor
pop
xor
dec
mov
mov
pop
(bad)
mov
or
xor
xor
mov
movs
or
out
invd
inc
movs
aad
xor
push
cld
add
xchg
div
dec
xlat
push
push
xchg
mov
and
getsec
pushf
and
mov
pop
out
lds
xor
adc
call
adc
int
cs
mov
xchg
int
mov
lods
clc
fidiv
nop
cmc
mov
xor
out
call
rcr
mov
jge
jbe
jne
test
xchg
les
cmp
push
jge
movs
jno
icebp
leave
inc
bound
sbb
mov
fs
lods
icebp
(bad)
mov
push
jl
mov
dec
add
pop
xchg
les
imul
out
sub
and
xchg
mov
jo
out
stc
jmp
mov
cmps
sbb
(bad)
mov
test
in
cmc
jecxz
pminsw
pusha
and
push
or
loopne
push
ins
jmp
nop
xor
sahf
dec
push
dec
xor
rcl
repnz
mov
mov
and
xor
fstp
pop
sbb
into
pop
and
sbb
and
jmp
idiv
or
pusha
pop
loop
das
cli
xchg
xchg
pop
mov
ins
inc
aas
pop
mov
inc
jp
and
ret
enter
sbb
adc
push
retf
and
cmp
jle
std
jmp
lds
int3
mov
pushf
in
inc
lock
cmp
cmc
clc
js
or
xor
add
(bad)
sub
retf
lock
push
adc
push
lods
mov
sub
and
push
jne
ins
jmp
push
in
jmp
mov
repz
(bad)
call
sbb
iret
cli
ss
and
mov
and
ret
xchg
cmp
pusha
pop
add
push
call
inc
mov
jo
ds
orps
jae
adc
sub
add
test
mov
pop
push
jmp
daa
or
mov
cmp
out
in
jmp
mov
mov
xor
shl
movs
push
mov
sub
jns
cmp
xor
in
movs
cmp
pop
add
repz
or
je
and
fs
cmp
cmps
imul
loop
add
push
or
(bad)
push
dec
xchg
jb
add
add
leave
add
pop
dec
or
(bad)
movs
cmps
add
pop
shl
aad
in
fs
daa
push
add
pop
addr16
sub
mov
mov
(bad)
data16
arpl
and
mov
jg
test
popa
inc
das
xchg
mov
shld
mov
jae
in
cmp
leave
xor
mov
sbb
inc
jp
push
or
mov
out
daa
cmps
pop
pop
iret
jbe
(bad)
mov
pop
dec
test
cdq
mov
pushf
pop
pop
in
push
cmp
mov
adc
inc
aam
popf
jne
jp
rcl
inc
mov
jg
sbb
fwait
jl
inc
cmp
call
jo
aaa
and
out
outs
lods
jmp
adc
fs
sub
int3
retf
sub
icebp
pop
(bad)
mov
retf
pop
mov
adc
in
jae
rcr
fnstenv
pop
dec
add
jns
push
push
cld
mov
loopne
out
mov
ins
or
pop
je
aam
lock
add
aaa
pop
leave
or
outs
int3
and
fcomi
cmp
sbb
xchg
mov
leave
out
loope
or
sar
jo
xor
jl
sub
pop
lods
dec
dec
mov
inc
mov
xchg
retf
dec
rcl
or
mov
ins
add
cmp
ret
pop
aam
pop
sbb
rcl
arpl
dec
mov
mov
pop
dec
mov
int3
loop
scas
cmp
rcl
jnp
aad
mov
pop
add
mov
add
sbb
or
pop
mov
ret
push
pusha
jae
aad
dec
call
imul
xchg
(bad)
fsubr
add
adc
jmp
mov
std
mov
pop
call
scas
mov
lock
sbb
mov
lods
scas
out
in
add
mov
loopne
push
or
lods
imul
or
mov
retf
add
push
popa
inc
xor
pop
xor
mov
lahf
and
ss
push
xor
(bad)
fs
aaa
dec
in
out
cmp
cmps
es
ret
push
xchg
out
mov
or
push
or
or
sub
rcr
sbb
scas
dec
push
outs
push
rcl
mov
sbb
call
pushf
data16
add
fisttp
jle
test
mov
jae
fist
pusha
mov
mov
mov
push
or
das
or
inc
cmp
pop
push
call
pusha
xchg
ja
mov
ret
mov
rcr
jnp
pop
push
outs
add
js
aaa
dec
iret
add
inc
sub
or
push
popa
cli
sub
(bad)
scas
mov
cmps
mov
mov
(bad)
ficom
mov
jle
xor
(bad)
in
fcmovne
inc
inc
inc
jmp
pop
aas
mov
stos
and
mov
push
test
ja
es
adc
pop
neg
aaa
or
mov
cmp
cmps
sub
xchg
adc
mov
dec
dec
test
and
adc
xor
and
inc
pop
fidivr
or
retf
std
orps
lods
xchg
leave
shl
sbb
scas
(bad)
mov
lock
dec
mov
cs
inc
addr16
cmp
xlat
mov
movs
sub
aaa
xchg
in
mov
pop
test
pushf
cli
inc
mov
shl
or
and
test
add
push
fild
jns
in
xor
icebp
cmc
push
push
rcr
push
call
adc
pop
hlt
call
sbb
ins
and
aam
call
mov
(bad)
adc
xchg
and
mov
outs
out
repz
add
ja
bound
scas
test
jbe
mov
and
popf
cmp
fdivr
sbb
ror
cmp
mov
(bad)
cmps
push
sar
cmp
and
fcomp
out
push
frstor
stc
and
inc
div
jg
dec
mov
shl
iret
and
scas
fbstp
and
jmp
ss
xchg
xor
sbb
out
pop
adc
jecxz
sub
(bad)
cwde
ins
ds
div
sub
cmp
clc
xchg
fdiv
lahf
ja
xchg
ror
cmp
dec
add
cmp
movs
pop
clc
adc
push
xor
xlat
mov
rcl
test
retf
inc
out
inc
daa
jae
push
lods
pop
and
mov
sahf
adc
xor
leave
xor
and
push
jae
arpl
retf
mov
ret
mov
cdq
cmps
push
mov
jo
xor
sbb
cmp
inc
movs
mov
fcomp
sub
mov
loope
fscale
ins
sub
in
mov
xchg
fwait
test
aas
shl
lahf
repz
mov
pushf
inc
xchg
push
rcr
dec
mov
fst
cs
add
cmp
mov
pop
jne
mov
and
or
shl
ja
js
xor
push
fimul
xchg
adc
mov
iret
test
imul
add
shl
(bad)
ins
inc
jecxz
adc
and
xor
mov
fs
fwait
outs
scas
les
cwde
pop
std
xor
sbb
test
or
test
xor
mov
mov
push
int
and
sar
adc
cdq
add
pop
and
cwde
push
pop
mov
into
ins
jp
scas
pusha
imul
int
add
je
lds
test
in
clts
imul
int
mov
dec
inc
fidivr
xor
out
pop
xor
outs
das
ret
idiv
adc
mov
pop
nop
xchg
in
jae
cwde
xchg
out
mov
sub
sbb
xchg
bound
mov
xor
or
dec
outs
cdq
xlat
ds
inc
mov
and
addr16
dec
adc
cmp
rol
add
and
mov
fcomip
shl
repz
pop
mov
pop
out
push
cli
cli
fisubr
fucomp
in
push
cmp
mov
xor
movs
hlt
ss
out
push
mov
sub
mov
mov
dec
jg
popf
push
lods
call
(bad)
call
cs
mov
icebp
loope
popa
sub
pop
int3
mov
(bad)
or
jg
and
retf
jecxz
sbb
sub
enter
sub
sti
enter
in
loop
pushf
pop
clc
ss
repz
cmp
pop
ins
jo
pop
cdq
cwde
add
inc
movs
or
das
adc
mov
jle
inc
(bad)
imul
ds
fstp
push
jge
or
push
outs
std
xchg
push
mov
cmc
dec
adc
pop
das
daa
call
mov
and
int3
jle
xor
enter
cli
mov
inc
xchg
pop
cmc
xor
jmp
cwde
cmp
cmp
retf
gs
push
bound
popf
jb
pop
adc
outs
lods
jae
enter
aas
push
or
xchg
leave
sbb
pop
js
add
inc
mov
inc
addr16
retf
dec
adc
cmc
jo
sub
rcl
popa
push
aas
xor
or
or
fmul
(bad)
push
inc
pop
call
mov
aam
sahf
in
push
xor
push
in
imul
das
mov
xor
xor
jmp
cmps
cmp
rol
repnz
dec
outs
ds
ins
lods
sbb
mov
popf
int
dec
aam
fisubr
xor
sub
or
xchg
bound
test
xchg
and
xlat
adc
or
dec
sbb
push
lock
sbb
jge
in
aam
lds
outs
inc
mov
bound
xchg
cwde
cmp
cmps
jmp
mov
jae
xchg
mov
or
push
xor
and
xchg
push
(bad)
inc
not
xor
pop
mov
lea
jmp
jne
or
in
aad
jae
dec
(bad)
lods
mov
je
jno
adc
in
jb
adc
test
mov
sahf
popf
loop
pop
(bad)
xlat
inc
outs
xchg
add
aad
inc
push
(bad)
or
pop
xchg
das
mov
xchg
sub
(bad)
fcmovnu
and
mov
sbb
jne
xchg
mov
bound
fst
xchg
fadd
dec
sub
push
das
pushf
out
ret
jbe
mov
loope
inc
adc
pop
fcmovnu
test
jne
dec
hlt
loop
mov
pop
outs
sti
mov
jge
(bad)
and
push
out
ror
inc
inc
movs
push
inc
inc
jno
adc
mov
inc
dec
fwait
mov
cdq
call
stos
adc
sbb
add
jo
dec
mov
and
xchg
xchg
cmp
mov
outs
push
adc
mov
jmp
inc
add
sbb
jb
test
xlat
xchg
add
sbb
add
clc
inc
fisub
js
jl
inc
loopne
(bad)
je
(bad)
add
and
scas
cmp
inc
push
shr
jne
(bad)
pop
pop
xor
in
mov
movs
mov
cwde
adc
scas
xchg
or
outs
loope
repnz
ins
int
shl
mov
push
loop
cdq
cmps
sub
mov
xor
push
std
data16
es
popa
iret
mov
ins
arpl
mov
lahf
jmp
fbstp
dec
inc
pusha
jmp
xchg
mov
cmpxchg
mov
mov
jl
in
mov
scas
imul
sahf
popf
cmp
jge
sub
popf
out
inc
sahf
cmp
jb
leave
xor
pop
cmps
fadd
mov
adc
int3
inc
push
mov
xor
test
mov
pop
dec
shl
(bad)
idiv
add
mov
xor
mov
cmc
jmp
aas
mov
(bad)
sbb
es
add
cli
int
test
and
cmps
add
pusha
fdivr
mov
add
int3
pop
into
in
aaa
mov
pop
add
cmp
fwait
or
test
call
lock
shl
test
and
pop
xchg
adc
je
and
into
pop
das
fs
div
pop
xlat
or
xchg
jge
cmp
test
fdivr
pop
xchg
out
pop
add
sub
into
push
xor
jp
cwde
dec
rcl
fmul
push
jmp
mov
and
mov
in
mov
add
sti
(bad)
sbb
jbe
icebp
mov
sub
loopne
call
pop
test
fucomi
pushf
js
pop
icebp
call
fs
and
inc
(bad)
or
dec
ficom
pop
push
ss
adc
fidivr
pop
xchg
hlt
xchg
js
xor
adc
cmp
dec
xor
clc
xor
pop
test
out
jmp
lahf
cmp
mov
push
or
pop
mov
dec
movs
and
in
nop
(bad)
adc
in
shr
out
sub
(bad)
mov
add
sbb
jl
adc
aas
dec
test
or
and
lods
arpl
add
or
mov
or
jle
and
xchg
jnp
jmp
mov
inc
inc
adc
sbb
mov
fwait
mov
iret
movs
adc
dec
sbb
sub
xor
in
pusha
push
fs
xchg
xor
xor
repz
sub
xchg
jb
cmp
adc
push
sti
mov
ins
push
push
push
adc
mov
sbb
or
iret
sbb
int3
stos
out
adc
repz
ficomp
push
pop
add
ret
cmc
xchg
aas
mov
push
cmp
mov
mov
cli
mov
jecxz
mov
sub
ds
sbb
pop
lods
and
push
jo
popa
ins
adc
and
xor
and
and
leave
das
xchg
lea
mov
int3
cmps
out
adc
add
cmps
sbb
push
mov
(bad)
cmc
push
adc
sub
push
pop
push
pop
arpl
xor
push
retf
jg
mov
cli
xor
scas
mov
cmps
jo
nop
push
call
push
jmp
jmp
adc
scas
es
push
cmc
call
push
aad
jmp
mov
repz
pop
mov
add
inc
ret
lahf
or
jmp
aad
mov
or
scas
stc
pushf
sub
in
int3
xchg
retf
jmp
xchg
nop
pop
ret
mov
ja
icebp
pop
xor
pop
add
push
cwde
cmps
std
mov
mov
push
ss
sbb
loop
mov
mov
int3
push
es
mov
xchg
outs
pop
mov
test
sub
or
movs
mov
adc
test
xchg
push
mov
mov
dec
cmc
jno
and
pop
sub
xlat
pop
(bad)
mov
cmps
je
bound
mov
pop
pushf
(bad)
jb
dec
aam
mov
inc
push
mov
mov
jmp
mov
(bad)
cmc
retf
inc
cmp
and
xor
cmp
add
add
mov
push
cs
int3
addr16
in
inc
fsubr
xchg
(bad)
(bad)
cs
ror
pop
xchg
mov
sub
jno
(bad)
adc
xchg
mov
inc
js
pop
and
mov
push
mov
retf
mov
cmp
sti
or
(bad)
fcmovnu
push
retf
mov
pushf
adc
shl
pop
mov
mov
loop
push
sbb
xchg
movsx
pop
push
jb
and
or
add
jb
test
xchg
or
mov
std
sbb
lods
loop
cmc
pop
cmp
mov
mov
ss
stos
xor
(bad)
mov
mov
movs
mov
add
push
mov
jmp
jmp
pop
ds
test
jecxz
aam
les
popa
in
xor
xchg
mov
fcmovb
adc
pusha
and
mov
mov
pop
leave
xor
jle
xchg
xchg
sub
into
push
and
dec
jnp
shr
ins
mov
ins
std
test
mov
jle
cmp
into
pop
add
rcr
adc
not
movs
xor
jb
lock
adc
lahf
or
test
aad
sti
inc
pop
call
xchg
xor
ficomp
pop
sahf
inc
cmp
inc
js
dec
push
push
in
cmp
jns
add
pop
mov
jle
sbb
icebp
inc
jl
cmp
cs
mov
ficom
add
popf
push
or
mov
jb
push
pop
or
push
lahf
or
mov
dec
push
call
mov
retf
adc
and
sub
scas
rcl
aad
lds
aad
adc
sbb
push
repnz
imul
xor
std
jmp
ds
scas
ins
sbb
jno
nop
adc
repz
jmp
adc
xchg
cwde
jb
mov
mov
ds
out
icebp
sub
popa
jns
scas
rcr
pop
fwait
cmp
idiv
push
imul
std
sub
pop
mov
cmps
dec
pop
stos
or
add
push
fwait
xchg
call
cmp
enter
jnp
add
inc
ss
out
js
jbe
std
test
out
xor
mov
and
not
push
fbld
pop
or
mov
stos
call
das
addr16
(bad)
popf
imul
std
jp
call
pushf
push
xor
sub
cmp
ins
jne
mov
push
enter
add
and
aam
cmp
cmp
xlat
dec
cs
test
sub
repz
js
mov
(bad)
jecxz
sbb
icebp
jmp
(bad)
mov
call
push
mov
xchg
cmp
mov
sub
sti
and
xchg
ss
mov
jmp
mov
sub
and
es
xchg
sti
adc
mov
or
and
push
ret
add
xor
mov
inc
add
pop
fnstsw
mov
and
aaa
pop
pop
xor
adc
das
pop
add
inc
shl
mov
xchg
(bad)
dec
mov
or
mov
leave
sub
enter
dec
adc
loopne
sahf
inc
aaa
xor
(bad)
dec
call
xchg
inc
and
push
(bad)
jnp
aas
aad
pop
dec
push
add
rcl
out
sub
ins
(bad)
lods
in
out
mov
inc
sbb
sbb
push
ficom
je
add
dec
mul
cmps
xchg
pop
and
test
mov
(bad)
mov
test
mov
fmul
or
push
adc
xchg
int
xor
lahf
inc
(bad)
adc
stc
aaa
out
dec
int
enter
push
cdq
stc
and
out
(bad)
mov
cmp
and
xor
push
xchg
leave
sbb
mov
enter
popa
stos
inc
mov
je
pusha
ja
test
hlt
mov
mov
push
into
es
mov
lods
repnz
xchg
push
call
cmp
bound
mov
int
shl
les
push
xor
xchg
push
or
retf
adc
push
jge
mov
or
jl
imul
sub
or
call
fstp
inc
imul
fmul
pop
and
std
fist
mov
in
xchg
arpl
push
pop
push
pushf
shl
addr16
and
pop
add
das
push
or
push
xor
pop
sub
push
mov
xchg
stc
sub
xchg
push
cmp
in
mov
mov
mov
jns
ins
cdq
int
popa
call
jnp
mov
push
aas
add
or
pop
scas
test
je
mov
push
fldcw
or
add
(bad)
add
and
into
mov
lds
or
loop
rcl
in
aas
pop
cmp
sub
xchg
lods
fsubp
int
out
arpl
xlat
add
push
std
mov
js
jp
mov
dec
and
outs
(bad)
jge
in
push
inc
jae
jmp
fs
mov
inc
lods
push
mov
loopne
cs
outs
inc
jmp
push
xor
ret
xchg
cmp
cmp
push
shl
push
test
cmps
es
dec
sub
in
pop
or
jb
in
mov
mov
push
inc
mov
sar
adc
jecxz
call
mov
lock
jecxz
xor
daa
fiadd
jb
push
cmp
les
in
push
fwait
dec
or
jnp
aad
jb
(bad)
das
sub
mov
mov
adc
ss
sbb
(bad)
dec
inc
fs
stos
bound
ret
and
cmps
je
scas
adc
int3
sbb
adc
loop
(bad)
xor
and
nop
or
pushf
mov
mov
add
mov
sbb
add
adc
gs
jmp
adc
ret
std
mov
add
adc
enter
shl
leave
in
movs
mov
stos
call
stc
(bad)
les
inc
inc
cmp
gs
fadd
add
(bad)
pop
repz
push
xchg
mov
and
sbb
fsub
xchg
(bad)
mov
xor
cmp
dec
sbb
leave
int
xor
mov
sub
xchg
shr
fldenvw
(bad)
in
mov
jp
dec
(bad)
jp
pushf
adc
mov
jl
std
sub
jae
and
sub
push
clc
shr
scas
repnz
aas
fdivr
add
imul
push
not
pop
jnp
jns
push
mov
xor
push
jg
shl
nop
scas
fsubr
sbb
fisubr
mov
stos
mov
xor
mov
je
stc
push
lods
and
popf
jmp
jbe
std
pop
int
out
jmp
das
shl
dec
dec
inc
cwde
push
pop
scas
pop
movs
test
jno
cmp
(bad)
sub
(bad)
cwde
mov
aas
mov
dec
cmc
push
add
enter
jo
fmul
test
jo
imul
cmp
push
xor
jno
jo
sti
fidivr
fld
and
call
mov
mov
mov
daa
bswap
adc
imul
jmp
sbb
arpl
je
hlt
mov
imul
retf
adc
jns
xor
rcl
aad
jmp
neg
test
inc
mov
call
mov
cli
(bad)
cmc
jae
(bad)
cmp
aaa
xchg
fst
pop
xchg
cld
push
popf
ds
fdivr
sub
fwait
dec
sbb
mov
adc
ror
mov
call
out
push
sbb
imul
add
adc
fisttp
inc
or
mul
setnp
js
ror
int
cmp
mov
jns
ror
sub
fwait
mov
sub
test
fs
mov
imul
out
add
add
mov
and
pop
out
xor
in
int
test
xchg
jo
stos
jge
cs
jmp
out
scas
xor
xor
jmp
lock
sub
cld
or
movs
punpcklwd
popa
mov
pop
adc
xchg
or
inc
adc
loop
out
or
lahf
mov
push
mov
movs
mov
stos
fdiv
mov
add
inc
mov
ds
jo
xchg
adc
sub
in
je
lock
mov
hlt
pand
mov
push
push
push
mov
ret
hlt
and
cmc
sub
jae
mov
stos
push
mov
mov
jnp
and
aas
and
jmp
nop
mov
call
xchg
mov
rcr
sti
aaa
add
cmp
xor
sti
fisub
pop
repnz
sahf
enter
fadd
ror
loope
test
push
jns
mov
xchg
int
inc
and
inc
and
out
lds
dec
ds
retf
mov
pop
ins
repnz
leave
jnp
add
xor
adc
test
iret
cs
sub
xor
sbb
xor
call
mov
stos
sar
jecxz
(bad)
cmps
mov
mov
pop
or
fiadd
xor
mov
fldcw
push
pop
outs
inc
cmp
add
xchg
and
out
jge
inc
jb
mov
or
mov
xchg
dec
loope
dec
cmp
test
push
stos
hlt
dec
hlt
cmps
(bad)
call
xor
into
adc
xor
fimul
xchg
mov
not
stc
lods
arpl
mov
(bad)
push
push
ds
cmc
adc
je
and
call
xor
out
mov
je
sub
sub
pop
shr
dec
jo
and
ins
mov
sbb
mov
pop
addr16
jb
pop
jne
push
xchg
inc
stos
mov
inc
inc
jl
fild
(bad)
mov
push
in
and
cld
dec
mov
movs
or
xchg
dec
(bad)
sbb
sbb
mov
inc
jecxz
cli
push
or
addr16
xchg
icebp
sbb
sub
in
add
mov
(bad)
(bad)
jmp
jl
repnz
dec
sti
inc
mov
xchg
and
je
push
out
and
pop
mov
ror
jl
ss
repnz
inc
mov
push
cmp
xor
adc
cmc
mov
mov
pushf
and
enter
mov
and
adc
fisttp
in
cs
bound
stc
and
jb
mov
and
mov
push
fstp
ja
js
cmp
and
push
push
int
retf
pop
lock
sbb
je
out
jnp
ror
sbb
dec
into
iret
sub
mov
jl
cmp
xor
loop
not
shr
sub
(bad)
mov
mov
dec
ins
or
inc
stos
in
or
fisubr
ja
(bad)
fdivrp
pop
xchg
pop
mov
xchg
mov
(bad)
adc
jne
inc
cmp
sub
mov
call
pop
fldcw
int3
dec
xchg
or
sbb
xor
out
icebp
push
fldcw
xchg
loop
int3
gs
and
lahf
sbb
sbb
dec
mov
dec
rcr
hlt
sub
push
mov
fld
fisttp
sbb
or
and
mul
adc
push
pop
imul
retf
test
jae
push
pop
xchg
inc
nop
or
ins
sar
jno
lods
stc
cmp
nop
iret
mov
dec
xlat
push
test
mov
mov
stc
imul
mov
sub
sbb
adc
xor
pop
les
(bad)
retf
and
sbb
stos
sbb
lds
sub
ret
(bad)
fsubr
cmp
xchg
jmp
outs
adc
pop
push
pop
sub
push
dec
xchg
in
popf
push
ins
jmp
jbe
das
aad
mov
popf
dec
push
dec
mov
mov
adc
push
cmp
retf
ret
(bad)
or
fs
out
push
dec
push
cwde
cmps
xchg
mov
nop
mov
and
popa
sub
movs
push
or
push
rcl
fild
loope
popf
gs
ds
dec
test
push
pop
test
add
xor
sar
or
jns
std
pop
sub
(bad)
loope
dec
imul
mov
jns
loope
jbe
out
gs
std
lds
dec
jb
nop
sbb
dec
mov
pop
sbb
cdq
adc
mov
dec
mov
mov
mov
or
sbb
fsub
add
mov
jl
lock
loopne
(bad)
mov
jmp
mov
call
sub
adc
dec
ficomp
lods
pop
jne
push
cld
push
mov
push
out
xor
push
out
pop
iret
stc
mov
stos
es
or
sub
xor
shl
jg
add
fwait
push
sbb
sub
or
push
fcomp
and
push
dec
mov
push
sub
add
push
adc
cld
add
adc
and
fidivr
inc
(bad)
fisub
lods
stc
inc
retf
fwait
js
fimul
cs
push
sub
mov
cmp
push
jle
add
mov
sahf
bound
ss
cmp
add
cmp
mov
test
or
dec
cld
aaa
and
cli
xchg
adc
(bad)
xchg
xchg
mov
adc
mov
xor
out
out
movs
cdq
xchg
ins
jmp
jb
mov
mov
mov
ror
or
in
leave
fisub
mov
lea
out
xor
in
div
movd
mov
outs
imul
jne
xor
(bad)
dec
mov
ror
mov
adc
lahf
lahf
cs
mov
not
in
cld
jmp
jle
push
xchg
stc
movs
je
jne
fs
inc
jmp
push
xor
jno
data16
adc
test
jle
fmulp
push
popa
ins
cmp
lods
cmp
nop
sub
aaa
imul
sti
push
fwait
sbb
leave
pop
xor
mov
dec
sar
mov
test
arpl
jmp
in
xchg
outs
xor
mov
mov
push
rol
scas
and
sahf
mov
jle
imul
dec
push
popf
fadd
mov
jl
push
xor
and
dec
push
stos
call
fisttp
adc
add
sbb
mov
lea
pop
xor
cmp
jbe
pop
push
(bad)
les
adc
hlt
lea
shl
xchg
inc
and
sbb
mov
mov
(bad)
sti
push
rol
jbe
test
neg
xchg
daa
(bad)
sbb
stos
shl
inc
rcl
aam
call
dec
icebp
fwait
nop
test
sbb
in
inc
and
neg
test
pop
stos
(bad)
sahf
adc
adc
jge
push
fwait
shl
test
test
push
shl
mov
lea
lock
xor
movs
in
ss
ins
mov
imul
mov
mov
mov
cmp
or
(bad)
fs
or
cmp
sbb
gs
jl
cmp
shl
loop
fidivr
mov
adc
stc
pop
dec
repnz
fist
out
addr16
mov
and
cmp
xchg
fild
aad
jg
adc
jp
arpl
sub
clc
imul
ret
(bad)
adc
aam
cwde
dec
mov
adc
xor
xchg
leave
ficomp
aaa
push
xchg
scas
sub
dec
out
stos
inc
sub
xchg
nop
repz
inc
cwde
inc
das
ret
adc
data16
out
dec
and
in
cmp
cmps
hlt
out
cs
push
arpl
sbb
call
sbb
outs
leave
push
and
call
pop
mov
icebp
cdq
push
scas
shl
mov
popa
mov
mov
ror
out
dec
cmp
sbb
(bad)
addr16
jns
cmps
cmps
adc
dec
fwait
loop
cmp
(bad)
imul
add
ins
test
retf
test
or
push
fmul
in
out
rcr
xchg
fdivr
inc
(bad)
xchg
add
xor
imul
add
mov
xchg
pushf
mov
(bad)
mov
icebp
add
or
out
pop
test
inc
dec
call
adc
or
xchg
js
inc
inc
sub
stos
ret
push
sub
leave
sub
movs
aaa
out
sbb
clc
sub
pop
push
jmp
mov
mov
jb
jbe
xchg
sti
jbe
and
pop
cdq
xchg
xlat
mov
sub
sub
cmc
jo
pop
push
jge
xor
imul
pop
js
mov
(bad)
icebp
bound
jmp
pop
push
mov
cs
push
sbb
mov
add
push
fcmovbe
pop
dec
add
push
lods
les
mov
and
cli
icebp
adc
adc
jg
cmp
mov
je
out
jp
pop
cmp
(bad)
leave
lods
cmps
aad
lea
push
jecxz
xor
loope
push
add
jle
cmp
(bad)
lock
das
imul
jb
hlt
mov
stos
pop
push
pop
add
xchg
das
xchg
mov
dec
pushf
call
or
adc
out
xchg
push
mov
test
jl
cmp
sar
xor
(bad)
xchg
sub
in
mov
jmp
popa
leave
out
mov
aaa
cmps
shl
dec
add
cmp
ficom
jae
push
aad
xlat
cmps
dec
loopne
pop
inc
(bad)
loop
lods
jmp
stos
ja
mov
sub
mov
aaa
fbstp
dec
jecxz
or
cli
add
lods
and
push
mov
(bad)
mov
out
out
test
inc
es
pop
mov
sub
popf
adc
stc
div
js
mov
inc
in
push
mov
cmp
movs
dec
nop
imul
test
outs
sbb
mov
push
mov
xchg
dec
push
pusha
out
mov
pop
dec
in
fisub
call
jg
push
cmc
lahf
rol
fidiv
or
je
addr16
xor
(bad)
inc
leave
adc
ss
fild
in
(bad)
pop
sub
movs
mov
repz
add
pop
mov
xor
hlt
inc
xor
fst
jmp
mov
shl
popf
int
xor
fisub
sub
daa
into
pop
and
shr
mov
adc
cmps
add
shl
test
dec
jmp
xor
(bad)
aad
add
xchg
(bad)
jle
inc
pusha
mov
dec
sub
cmp
leave
mov
mov
and
jne
cld
stc
cmp
loopne
cmp
dec
adc
out
push
jo
inc
mov
hlt
retf
(bad)
cmp
add
sahf
cmp
mov
ror
inc
or
and
sti
push
mov
xor
loopne
add
aam
and
cmp
dec
mov
cli
jecxz
popa
fmul
cs
sbb
jns
popf
(bad)
jmp
sub
sbb
ja
and
mul
iret
mov
hlt
fld
sub
out
js
sub
or
stos
xor
test
or
mov
push
jbe
pusha
dec
and
movs
ins
mov
iret
loop
push
jo
ins
jle
das
mov
lea
mov
inc
inc
fcmovnbe
mov
aas
out
lahf
in
hlt
dec
jnp
pop
es
adc
inc
sbb
in
jo
xor
push
xor
(bad)
mov
adc
or
xchg
ror
cli
fstp
cmp
xchg
aas
rcr
mov
or
push
inc
ret
(bad)
fsubr
jne
mov
cmp
mov
jge
cdq
add
sub
outs
and
cmp
jbe
jmp
xor
dec
adc
xchg
into
and
mov
mov
call
mov
jae
dec
mov
jbe
xchg
xor
pop
sbb
test
shr
fadd
movs
test
cmp
stos
daa
mov
mov
add
iret
adc
jae
fs
and
shl
mov
ins
mov
add
push
lods
addr16
cmps
fwait
int
arpl
fwait
into
stos
frstor
pop
pop
dec
xchg
cmp
sahf
or
stos
jno
fistp
push
xchg
es
push
sbb
addr16
ins
cmp
jmp
pop
pop
adc
mov
hlt
dec
push
pusha
fld
jl
sar
mov
lods
sub
pop
adc
sub
jne
daa
imul
inc
pop
mov
jne
push
inc
cmc
into
mov
enter
repnz
push
out
add
loop
pop
lahf
pop
inc
fld
das
jge
xchg
std
sub
lahf
neg
or
pop
fs
sub
sbb
repnz
out
bound
outs
pop
lods
nop
xor
pop
shl
dec
cmp
loopne
mov
std
mov
pop
lds
dec
sti
push
jae
sub
cmp
cmp
xor
xchg
outs
mov
dec
adc
cwde
mov
adc
and
in
add
daa
pop
cmp
popf
sub
std
xchg
aas
and
fadd
adc
push
mov
cld
ret
sbb
mov
bound
mov
fnstsw
test
fidivr
rol
into
mov
retf
hlt
int
out
sbb
jmp
xor
clc
movs
pusha
pushf
ficom
stos
(bad)
dec
push
fnsave
shr
outs
ds
add
cmp
mov
(bad)
xchg
rcl
mov
xchg
imul
sbb
inc
fdivr
mov
test
pop
icebp
ins
mov
mov
mov
pop
pop
sahf
or
cmovp
mov
adc
test
push
xlat
imul
cmps
aad
mov
mov
iret
cld
push
mov
rcl
inc
test
or
les
test
popa
(bad)
sbb
movs
daa
sub
push
mov
push
popf
mov
push
lock
scas
sar
enter
adc
(bad)
jp
push
jg
in
cmp
jmp
ret
mov
pushf
jmp
sbb
imul
ret
dec
pusha
xor
push
leave
rol
sbb
movs
int3
outs
leave
gs
ret
xor
mov
ins
iret
sub
pop
dec
jns
jnp
sahf
lds
add
sbb
retf
ins
mov
push
fisub
ja
daa
pop
inc
push
loop
add
fcomi
jne
xor
and
repnz
adc
dec
inc
sbb
(bad)
jmp
mov
cld
push
cli
pop
pop
xor
sahf
cmp
add
add
pusha
sub
jge
(bad)
sub
daa
xor
jl
not
push
nop
push
lock
sub
imul
cmps
push
mul
mov
mov
retf
add
stc
xchg
(bad)
xor
and
mov
cmp
mov
mov
sub
pop
or
mov
cmp
scas
cmp
fwait
jae
pop
mov
jbe
jb
cwde
inc
jne
inc
loopne
xchg
jnp
mov
dec
lock
ins
jne
push
jbe
pop
cwde
ret
cwde
js
pop
sub
fs
sub
xchg
std
out
aaa
dec
retf
xchg
rol
les
xor
mov
(bad)
add
clc
push
jno
jbe
push
ins
push
fwait
int
add
js
cmps
dec
mov
mov
mov
sti
mov
sub
xchg
add
or
ds
push
cld
in
mov
(bad)
adc
jle
sar
hlt
adc
stos
ror
xor
mov
shl
and
int
and
jl
test
or
call
shl
lahf
icebp
jge
out
add
push
fisubr
pusha
add
jl
jnp
adc
movs
scas
je
stos
fwait
mov
mov
and
stc
sub
int
sub
lock
lock
in
cmp
enter
sahf
nop
add
mov
fst
sbb
loop
push
mov
fs
cmp
xchg
pushf
(bad)
lock
jge
retf
fs
dec
jnp
jp
inc
inc
ss
xchg
pusha
pop
ret
and
ror
inc
push
mov
sub
push
push
mov
pop
xchg
(bad)
pop
cmp
sbb
sbb
js
adc
jge
mov
mov
add
inc
das
push
mov
xchg
mov
retf
aas
imul
imul
ja
sbb
push
inc
mov
pop
dec
aaa
or
dec
cld
and
aad
je
jo
inc
sub
(bad)
mov
inc
neg
xor
lahf
or
test
push
test
mov
test
in
jge
or
lahf
add
adc
mov
inc
icebp
outs
pop
in
cld
mov
sbb
pop
push
mov
mov
push
xor
sti
movs
shl
jnp
inc
mov
call
adc
and
mov
inc
loope
dec
in
mov
sub
leave
ror
or
push
call
push
xchg
enter
jg
cwde
push
xchg
sub
out
push
xchg
cmps
(bad)
mov
mov
iret
(bad)
std
xchg
es
rol
jle
cli
pusha
call
dec
push
adc
fdiv
into
imul
imul
mov
ja
call
call
cmp
leave
lods
dec
and
cmp
jmp
out
pop
lds
pusha
mov
int3
aad
aaa
out
sub
sbb
scas
xlat
and
lds
(bad)
lods
pushf
sbb
or
or
jmp
mov
mov
jmp
shl
adc
xchg
or
aam
call
mov
pop
jge
adc
mov
push
push
and
movs
retf
push
dec
inc
lock
jecxz
or
add
pop
pop
jae
cmps
aam
sub
data16
ja
sbb
cld
push
add
out
fsubrp
mov
or
cmps
shr
jmp
bound
ja
dec
jecxz
je
or
movs
pop
test
data16
cli
sub
in
test
jnp
ins
jne
jg
bnd
add
push
rcr
mov
inc
rcr
iret
ficom
pop
js
adc
nop
leave
mov
mov
js
mov
ss
sub
sub
retf
cli
ds
xor
add
test
add
in
lar
(bad)
js
je
out
je
aaa
push
cli
jb
push
adc
push
sub
movhps
repz
add
pop
call
sbb
jbe
aas
nop
push
sbb
adc
sub
ffree
mov
dec
sti
push
out
int
mov
lahf
pop
xchg
lahf
mov
push
loop
add
iret
xor
shl
adc
adc
(bad)
in
neg
add
popf
cmp
js
arpl
jns
in
xchg
fld
in
(bad)
xchg
das
(bad)
nop
or
cmp
scas
test
mov
scas
adc
pop
mov
dec
retf
outs
xchg
xchg
shl
ins
cmc
adc
mov
aaa
pusha
or
(bad)
sbb
popa
test
xchg
cmc
mov
jmp
sub
jmp
pop
push
in
call
mov
sbb
jbe
cli
es
jp
cmp
fsubr
xor
shl
loope
movs
adc
push
jnp
cmp
lahf
test
or
pop
aam
in
adc
pusha
iret
push
and
(bad)
sub
push
loope
jmp
iret
mov
jmp
adc
jbe
aam
popf
(bad)
cmp
cmp
cli
xchg
push
lods
xchg
pop
or
push
sub
arpl
icebp
inc
mov
or
pop
dec
paddb
test
jle
jl
aas
jl
std
jge
retf
repz
rol
jge
inc
cmp
adc
out
mov
or
inc
clc
jge
retf
daa
mov
out
push
mov
push
ror
scas
xchg
fwait
inc
in
mov
cld
sbb
arpl
add
test
ret
cwde
in
adc
lea
jno
push
jp
(bad)
es
addr16
pop
adc
add
and
push
iret
int3
ja
sub
mov
or
add
pop
ins
mov
into
inc
lods
cs
adc
mov
stos
adc
popf
adc
dec
jbe
mov
jb
mov
and
mov
xor
jle
in
cmp
pushf
mov
mov
mov
push
xor
sar
xor
jge
das
das
in
cmc
in
in
int
xor
bound
sub
push
jmp
cwde
inc
js
jg
inc
arpl
sub
popf
fld
sub
fsub
ds
jb
scas
mov
mov
scas
mov
aas
xor
xor
mov
jmp
jb
xor
sbb
push
(bad)
pop
scas
(bad)
sub
push
nop
add
cmps
xlat
and
jmp
mov
pop
fsubr
ror
sbb
aam
retf
lods
pop
pop
pop
or
daa
pop
sbb
lods
xor
and
adc
movs
jbe
mov
or
lods
in
mov
cwde
ds
fild
ins
(bad)
je
or
sbb
mov
dec
in
fwait
xor
cmp
or
movs
les
(bad)
les
popf
push
cmps
cmp
cs
push
push
ja
sub
mov
push
loop
repnz
sub
(bad)
jg
test
popf
int3
pop
pop
cmp
mov
push
adc
add
mov
mov
call
jbe
push
enter
(bad)
repz
test
lahf
test
rol
push
pushf
sub
sub
mov
aad
popa
addr16
ret
jb
cmps
xchg
arpl
mov
push
rcr
rcl
and
xor
mov
aad
push
xor
dec
xchg
jle
in
inc
inc
mov
addr16
mov
inc
and
mov
cmp
or
add
mov
aaa
pop
out
fstp
push
fsubr
loop
push
ret
popa
out
cmc
aas
xchg
frstor
mov
lahf
xor
push
mov
sbb
jmp
inc
frstor
out
ds
push
cmp
cmp
sbb
jp
dec
mov
xchg
sti
or
popf
mov
int3
mov
pop
gs
add
out
test
inc
das
call
push
push
loopne
idiv
sbb
jecxz
or
rcl
jmp
(bad)
scas
sub
fist
scas
or
imul
adc
rcl
mov
js
push
dec
in
sub
in
(bad)
test
repnz
cmp
sbb
cmp
in
retf
fstp
and
or
xor
call
mov
add
ror
mov
pop
and
test
mov
gs
cld
adc
and
into
and
mov
call
lods
jl
and
cwde
jle
sbb
cmp
jne
mov
sti
outs
mov
xchg
push
or
test
popa
and
mov
je
push
inc
repnz
push
das
sub
dec
shl
mov
les
xor
pop
iret
repnz
mov
mov
cmp
add
mov
and
int3
cwde
enter
scas
cmps
xchg
ins
jno
mov
hlt
stos
pop
nop
push
icebp
xchg
out
mov
add
mov
mov
sbb
and
test
sbb
mov
fs
dec
pop
xchg
cmps
jmp
mov
jne
dec
jge
cs
mov
dec
mov
fs
pop
out
cmp
rcr
pop
fadd
repnz
ret
or
pop
inc
retf
icebp
push
cmc
mov
es
cmp
retf
loop
test
loop
out
jno
mov
fst
push
adc
scas
bound
push
sbb
shl
push
popa
clc
xchg
push
push
pop
scas
std
inc
sti
add
xchg
fcompp
mov
dec
fwait
outs
add
push
push
aam
aaa
cmp
js
jbe
cmp
push
jg
les
sahf
int3
das
aas
push
mov
aad
leave
and
pop
xchg
push
cmp
cmp
repnz
aad
shr
ret
lods
mov
xor
add
jg
mov
mov
add
dec
mov
cmc
mov
push
jl
fwait
and
xchg
nop
xchg
push
jno
mov
push
aad
ret
push
in
inc
das
(bad)
in
mov
call
jns
pop
sub
cli
sub
or
mov
popa
inc
aad
lds
dec
pop
les
fisttp
mov
mov
call
imul
es
js
pop
inc
fistp
clc
in
jae
in
xor
clc
imul
push
inc
xchg
stos
sub
aam
add
mov
push
lea
mov
shr
mov
fldenv
push
adc
xchg
bound
popf
arpl
popa
fwait
inc
push
jb
shl
xlat
clc
dec
mov
call
cmc
push
pop
jmp
imul
mov
or
sub
push
retf
cmp
rol
sbb
scas
arpl
scas
pusha
add
aas
inc
popa
cmps
xor
or
sub
push
pop
aaa
aaa
mov
ss
sub
push
sub
add
(bad)
jle
mov
addr16
jno
inc
stos
sub
xlat
or
rol
into
mov
mov
dec
cld
dec
retf
arpl
cmps
(bad)
scas
or
out
add
outs
pop
fisub
cmp
add
pop
mov
and
daa
adc
repz
sub
jo
shl
rcr
inc
or
pop
fwait
jge
and
mov
pop
(bad)
aas
sbb
sub
mov
cmp
je
or
arpl
xlat
push
jmp
retf
or
pop
pop
scas
and
sahf
(bad)
sub
add
neg
cmps
fnstsw
std
(bad)
cmps
or
and
aam
aam
push
clc
xor
push
mov
push
jne
push
lea
out
ret
xchg
push
mov
(bad)
cs
outs
test
neg
push
sub
iret
pop
or
push
lahf
fsub
mov
lahf
fidivr
adc
outs
popa
cmp
ficom
mov
or
fsubr
les
pop
mov
out
out
out
mov
test
adc
mov
xchg
out
jmp
(bad)
push
jge
pop
out
xchg
xchg
dec
pusha
(bad)
jo
into
shl
mov
popa
ror
repz
std
loopne
mov
(bad)
(bad)
in
push
xor
jae
cmp
pop
dec
shl
inc
add
pop
jge
je
push
es
fstp
jns
mov
jns
jnp
addr16
movs
leave
and
stc
in
loopne
rcl
add
outs
(bad)
sub
cmp
dec
rcl
pushf
add
scas
xor
shl
and
jae
int3
xchg
cmp
out
xlat
cmp
xor
js
mov
fdivr
mov
into
mov
jmp
xchg
out
rcr
pop
addr16
out
and
mov
fwait
jg
xchg
outs
loop
pusha
movs
mov
sbb
add
gs
inc
adc
mov
shufps
jns
ins
outs
mov
inc
repz
fbstp
dec
sar
(bad)
sbb
addr16
push
or
xor
dec
mov
pop
mov
dec
outs
mov
jle
int
call
dec
sti
inc
cmp
inc
jne
mov
pop
and
cmp
push
dec
adc
scas
pusha
push
push
jecxz
pop
jmp
popf
fcomp
push
bound
bound
jecxz
enter
std
add
sbb
pop
ror
sar
and
scas
cmp
mov
sbb
leave
dec
mov
push
cmp
in
or
(bad)
pop
push
push
adc
aad
and
sbb
inc
ror
mov
mov
int
rcl
lea
jne
push
mov
sar
mov
cmp
hlt
push
pop
mov
mov
xchg
fcomp
in
push
pop
cmp
pmulhw
fcomp
mov
leave
out
mov
xchg
xor
out
jbe
inc
xlat
repz
or
xchg
aam
add
test
and
rol
xor
xchg
cmp
cs
mov
nop
int3
stos
push
ja
test
jo
test
push
ins
cmp
jge
inc
pop
into
addr16
data16
mov
imul
push
scas
jo
call
aad
sub
out
pop
cmp
mov
push
push
std
jg
add
sub
loop
lock
cmp
les
mov
fmul
(bad)
fimul
mov
pop
sub
lahf
add
cmps
adc
add
inc
push
ret
push
pop
ret
cmp
pop
mov
sti
frstor
push
jnp
out
arpl
out
cmp
xchg
pusha
adc
nop
pop
xor
ror
add
add
dec
mov
jns
test
inc
cmc
ss
movs
js
mov
mov
sbb
stos
cdq
aas
outs
jmp
shl
or
pop
mov
pop
sbb
(bad)
les
or
jbe
(bad)
jmp
out
pushf
cmc
mov
out
adc
scas
test
aam
and
inc
lea
mov
pushf
sahf
je
jo
fldcw
push
jno
rcl
out
inc
mov
adc
xchg
popa
retf
jne
mov
jl
call
inc
(bad)
and
(bad)
cwde
xchg
pop
mov
ret
add
pushf
cmps
sbb
sti
pushf
push
gs
add
sbb
cmp
inc
cmp
cmc
jns
xchg
pop
cwde
mov
dec
shr
sbb
int3
add
sub
xor
jb
sbb
pop
dec
pop
add
bnd
shr
dec
mov
mov
xor
pop
inc
mov
mov
sbb
push
cld
cmps
sub
cmp
add
xchg
out
mov
xor
dec
mov
mov
or
sub
xchg
xchg
xchg
ret
sbb
lods
arpl
pop
cmp
(bad)
mov
outs
in
sbb
push
mov
icebp
sub
ret
nop
in
dec
call
lods
or
mov
fcom
stc
fistp
jns
loopne
(bad)
cdq
adc
out
pop
push
and
out
aad
cmp
loopne
fdivr
stos
das
jmp
dec
push
cmps
dec
or
push
push
cli
in
jnp
(bad)
ficomp
inc
mov
jmp
jno
shr
push
jno
scas
cmp
rcl
lods
lock
out
shl
jecxz
sbb
xchg
cmp
ja
out
sbb
mov
mov
clc
ret
add
xor
test
adc
adc
outs
pop
pop
xchg
jae
add
mov
cwde
and
call
xchg
mov
inc
sbb
fst
cld
iret
lock
jle
ret
inc
es
cld
and
sub
push
div
cmc
add
sbb
xchg
and
xor
std
cmp
fwait
mov
cli
or
shl
scas
call
aad
mov
pusha
and
sbb
inc
and
(bad)
push
mov
mov
xchg
(bad)
xchg
lods
ror
sbb
sub
aad
ret
dec
mov
and
inc
adc
call
out
mov
dec
lods
pusha
xor
test
dec
push
push
jmp
(bad)
cmp
nop
lods
sub
cwde
rol
mov
sbb
sbb
jecxz
jge
add
xchg
sub
(bad)
ins
jne
jge
int
inc
std
and
loop
inc
xchg
popf
sti
adc
jecxz
fisub
shr
jge
xchg
jbe
cmp
lock
ss
sar
jns
test
(bad)
lods
fs
call
inc
repnz
dec
hlt
ror
call
and
pop
xchg
inc
jmp
add
aaa
push
gs
jno
pop
arpl
inc
stc
sub
xchg
add
stos
xlat
xor
push
dec
jo
jecxz
and
fcmove
pop
or
sti
in
pushf
(bad)
push
push
nop
nop
(bad)
mov
jmp
adc
neg
xlat
shl
mov
xlat
jbe
std
lds
jp
mov
enter
out
jmp
dec
push
aad
shl
adc
out
scas
clc
xor
dec
ret
mov
mov
xchg
pop
das
stos
inc
adc
add
pop
xor
outs
xchg
add
shl
neg
les
into
rcr
ja
ret
mov
sbb
call
outs
dec
push
sub
cmp
aaa
cmps
sub
in
gs
mov
arpl
cmp
sar
arpl
jg
adc
jp
push
(bad)
sbb
and
fisttp
pop
call
pop
inc
mov
xor
loop
into
dec
(bad)
pop
cmps
rcl
sub
mov
dec
jmp
jns
aam
fdiv
mov
retf
xor
xor
mov
pop
addr16
outs
movs
fwait
pop
stos
nop
mov
pop
enter
mov
pushf
dec
jmp
and
rcl
push
out
sbb
xchg
(bad)
inc
test
push
dec
xchg
mov
ret
and
xor
jmp
lods
loop
fbstp
mov
pop
aam
xchg
jmp
(bad)
xor
lods
mov
jge
mov
mov
mov
arpl
test
push
mov
sub
mov
out
xchg
lods
stos
sar
(bad)
aaa
ins
fwait
xchg
test
or
stc
scas
xor
sbb
aam
jmp
and
(bad)
or
sub
daa
ins
pusha
jo
pop
es
arpl
out
xlat
push
push
jle
cwde
add
pop
inc
in
mov
mov
lods
pushf
fwait
cmp
retf
test
lahf
push
ficomp
mov
or
sub
lock
or
push
inc
xchg
inc
add
or
and
les
pop
mov
les
pop
cmp
inc
bound
xchg
jo
adc
dec
fimul
shl
xor
push
mov
inc
ins
outs
shl
mov
jb
sbb
or
(bad)
std
int3
add
mov
cmp
xchg
in
addr16
cmp
cmp
add
out
aaa
xchg
push
or
push
addr16
xchg
aad
xor
xor
ror
mov
push
mov
aam
adc
repnz
xchg
push
xor
mov
jle
stos
adc
out
sub
sub
icebp
mov
movs
ret
cmps
imul
dec
(bad)
mov
mov
mov
daa
inc
adc
aam
and
out
adc
stos
xchg
inc
mov
(bad)
jmp
jb
add
call
add
std
(bad)
rcr
jg
hlt
pop
pusha
or
stc
inc
rcl
jp
das
movhps
or
imul
fisub
(bad)
push
and
mov
add
sub
dec
xchg
movs
sbb
mov
mov
ret
shl
mov
mov
js
js
(bad)
pop
push
push
fxch
mov
pusha
pop
xor
sbb
push
push
dec
sar
mov
xchg
ror
mov
sub
mov
dec
(bad)
mov
push
xchg
lahf
or
and
rcl
xchg
jle
inc
or
or
and
mov
xchg
jp
mov
rol
jp
mov
dec
enter
adc
aas
mov
out
in
pop
outs
pop
test
xor
mov
mov
in
popa
jge
out
jno
jl
icebp
clc
mov
adc
mov
xchg
and
mov
or
popf
mov
sub
lods
movs
mov
push
pop
sti
out
push
inc
jae
cmp
stc
lock
pop
inc
movs
mov
stc
iret
cdq
test
in
stos
push
xor
mov
out
inc
jecxz
sub
push
adc
cmp
push
mov
push
and
loope
sub
xlat
cmp
(bad)
fmulp
(bad)
aad
aas
(bad)
hlt
aam
and
and
dec
mov
scas
shl
data16
fwait
push
repz
adc
sub
ds
mov
adc
leave
in
cmp
mov
push
cmp
push
xor
cld
xor
cmps
ret
fwait
in
push
xor
or
jg
mov
xlat
in
movs
fcmovbe
fs
(bad)
fist
loope
shl
fucom
inc
jb
mov
mov
aam
outs
in
or
ficomp
dec
sub
push
dec
ficomp
or
test
into
cmp
xlat
push
test
in
fisttp
push
(bad)
mov
pop
push
test
cmps
in
mov
stos
aas
mov
(bad)
cld
ror
in
jae
loope
add
sub
mov
xor
pushf
int
push
dec
out
add
pusha
sahf
cli
dec
call
inc
into
arpl
mov
xor
cmp
nop
cmp
sbb
push
nop
jmp
push
adc
xlat
sub
push
cwde
int3
cmp
out
mov
popa
inc
ds
add
sub
push
sub
and
setnp
enter
int3
sbb
pop
sub
jg
cs
mov
jne
add
dec
push
push
pushf
movs
cmp
imul
push
mov
cdq
outs
or
fwait
(bad)
movs
aas
mov
loopne
push
ds
mov
mov
push
jno
jnp
inc
lds
pop
dec
rol
sti
jg
lods
popa
xor
lods
aad
mov
mov
iret
sub
fdivr
and
pop
out
mov
mov
stos
jecxz
repz
mov
pop
jmp
sbb
stos
dec
scas
in
sar
inc
xor
push
mov
lods
mov
jb
push
and
and
mov
push
(bad)
nop
mov
and
mov
out
hlt
(bad)
pop
bound
daa
cmp
ins
pusha
imul
mov
pop
repz
jbe
shr
push
sbb
(bad)
mov
dec
pop
(bad)
repz
jmp
pop
xchg
aad
push
pop
outs
adc
xchg
inc
sti
lahf
cmp
test
cmps
jne
or
out
push
fidivr
dec
cmp
sub
dec
cwde
aad
jmp
fsub
jnp
rcr
cmp
mov
fnsave
add
jge
xor
pop
nop
lahf
call
push
sub
cld
loopne
xor
in
pop
hlt
xchg
pop
loopne
popf
mov
ins
sub
dec
test
mov
add
jb
cmps
jno
fld
retf
inc
pop
mov
dec
dec
pop
mov
mov
jle
jp
dec
xor
test
sub
repnz
and
call
jne
add
sub
mov
(bad)
(bad)
pusha
sub
push
ja
mov
in
add
push
xchg
dec
call
pop
das
in
imul
xchg
xchg
ss
cs
jno
xor
add
ror
pop
or
pop
adc
daa
cli
jp
inc
xor
xchg
xlat
data16
es
cmp
(bad)
sbb
sub
enter
pop
test
pusha
(bad)
xchg
fcom
xchg
sbb
xor
mov
or
mov
aaa
sbb
stc
mov
hlt
test
(bad)
lods
cmps
out
mov
out
jno
push
mov
mov
lds
mov
inc
repz
adc
jmp
jb
shl
jbe
lahf
mov
loop
(bad)
or
add
cmp
rol
dec
sbb
je
push
inc
pop
pop
mov
and
aad
int3
fnstcw
jns
xchg
mov
jmp
mov
push
mov
add
movs
loope
xor
push
mov
mov
fbld
lods
iret
movs
stos
push
xchg
(bad)
jb
fidivr
mov
out
mov
sahf
sti
pop
inc
inc
inc
rcr
imul
rcr
dec
ins
mov
cmp
retf
popf
jne
div
pop
daa
neg
out
stc
dec
stos
jae
cmp
sbb
shl
jno
cli
mov
lds
xor
mov
sbb
mov
cmp
dec
(bad)
xchg
inc
jmp
push
jmp
xchg
xor
xor
inc
dec
out
out
es
jl
sub
pop
into
stc
enter
xchg
xchg
or
adc
or
jae
xor
cmp
mov
dec
leave
ret
int3
loop
cmp
or
adc
xchg
inc
jl
xchg
sbb
mov
cdq
add
imul
mov
xchg
xchg
(bad)
fdivr
inc
cmp
ret
das
inc
jmp
popf
xchg
mov
pop
jnp
xor
sub
sub
dec
add
xchg
xor
in
jl
loopne
xchg
and
rcr
dec
inc
inc
jb
xchg
outs
js
aam
push
fld
frstor
or
and
jno
inc
jae
mov
and
xor
pusha
or
mov
enter
or
int3
dec
adc
call
push
bound
and
inc
xchg
mov
sar
cwde
push
retf
lods
jg
jmp
push
es
xchg
xor
cwde
inc
in
(bad)
hlt
jne
hlt
(bad)
out
loopne
pop
dec
lock
shl
mov
mov
jb
inc
int
in
mov
sar
sbb
mov
pop
push
pusha
cmp
dec
shl
aas
add
mov
jg
jmp
lods
pop
inc
jno
call
dec
adc
js
mov
add
ins
(bad)
cmp
in
nop
push
and
mov
hlt
ins
jo
xor
les
retf
dec
cwde
loop
cmp
xor
jae
imul
mov
or
repnz
mov
rcr
ror
ins
fmul
cmp
aas
into
fcom
sbb
or
add
xor
mov
fdivr
sbb
ss
mov
lock
sbb
cld
enter
nop
aaa
fistp
aaa
call
pop
or
shl
and
and
push
cmp
in
ficomp
pop
fidivr
jo
bnd
dec
icebp
adc
mov
xor
sar
push
dec
out
push
mov
sub
mov
xor
lods
jae
or
data16
xlat
sti
inc
stos
std
adc
jno
cmps
pushf
mov
enter
sub
mov
(bad)
cld
leave
cli
sub
retf
inc
add
pop
les
pop
mov
pop
mov
or
test
into
push
inc
sub
mov
inc
jp
outs
sub
js
mov
movs
pushw
push
push
inc
call
lea
push
push
lods
or
sub
mov
pop
jo
mov
mov
pop
mov
pop
push
out
mov
repz
mov
fld
jmp
mov
pop
jmp
in
mov
mov
clc
push
pop
xchg
sbb
mov
fwait
call
fcomp
inc
inc
outs
fwait
inc
(bad)
in
jmp
pop
test
pop
xor
mov
nop
mov
aaa
sti
je
mov
ret
mov
pop
mov
lea
mov
int3
fcmovu
mov
int3
xor
std
inc
or
cmp
or
mov
int
cmp
out
mov
(bad)
jp
sbb
arpl
test
xchg
and
jl
xchg
push
inc
cmp
imul
call
sbb
nop
repnz
not
pop
jmp
xchg
inc
fwait
jns
pusha
lahf
xor
cmp
add
cmps
mov
xlat
stc
pop
or
jb
xchg
inc
out
cmps
(bad)
mov
jp
pop
cmp
inc
jb
ja
sbb
outs
es
mov
pusha
fsub
pop
mov
mov
movs
cmp
je
int3
mov
mov
test
outs
nop
addr16
mov
dec
mov
in
push
push
sub
cmps
cmp
mov
(bad)
mov
rcr
dec
jle
adc
push
xor
jmp
and
pop
jp
mov
lea
fdivp
mov
cs
ins
outs
loopne
mov
cmps
(bad)
movs
mov
pop
pop
in
sbb
imul
dec
jae
mov
movs
sahf
retf
enter
lock
mov
enter
in
xchg
push
lds
lods
int
sub
movs
or
push
shr
inc
arpl
jb
and
icebp
cmp
push
shr
or
fwait
mov
aad
sbb
cmp
mov
xor
push
int
ror
test
jno
and
cmp
js
jb
inc
je
sbb
dec
neg
shl
pop
test
or
sbb
clc
jne
sub
fiadd
push
mov
fnstsw
sub
pusha
and
lahf
xchg
les
push
push
dec
das
mov
idiv
popf
lock
push
scas
sub
bnd
cdq
push
rcl
enter
leave
xor
daa
jnp
in
out
outs
loopne
int3
loope
scas
pop
stc
shl
sub
movs
dec
clc
jo
sbb
mov
sahf
mov
(bad)
mov
push
jmp
loope
or
nop
xor
sbb
shr
xor
add
add
loope
hlt
or
mov
xchg
psubb
dec
mov
or
movs
js
pop
push
je
fisubr
pushf
dec
xchg
push
into
dec
sub
inc
jb
fild
bound
mov
push
stc
aam
cmp
dec
or
pop
jmp
dec
mov
lahf
and
xchg
stc
pop
imul
or
mov
inc
scas
inc
or
out
cmp
adc
call
pop
fwait
jge
xlat
sub
test
jnp
hlt
and
mov
ror
outs
mov
mov
cli
(bad)
pop
or
pop
mov
rol
jbe
and
(bad)
adc
xchg
and
cmp
int3
jo
add
add
mov
scas
jno
add
sub
ds
mov
daa
fdiv
stos
push
fidivr
or
call
mov
fcom
jbe
mov
jnp
sbb
fnstsw
or
enter
in
cmp
or
ja
adc
mov
or
rcr
ins
jp
ins
cmp
push
inc
xlat
sub
rol
jae
ret
in
scas
scas
nop
aam
mov
out
out
sbb
adc
movs
mov
rol
ja
shr
pop
outs
or
les
jl
rol
and
outs
adc
movs
push
jle
cdq
cmp
xchg
mov
sub
(bad)
push
xor
nop
pop
jo
mov
lds
push
sbb
sub
scas
shr
mov
xor
jne
or
mov
sub
sar
jl
cmp
test
and
mov
cmp
xchg
rcl
cmp
loopne
jbe
repz
div
movs
sub
jle
mov
and
scas
adc
push
jbe
adc
jb
mov
sbb
(bad)
sbb
mov
aam
cs
enter
sbb
test
std
cmp
adc
movs
(bad)
loop
sbb
cmp
cmp
bound
test
pop
sahf
movs
test
mov
adc
ror
ins
lahf
push
push
xchg
sbb
xchg
repz
je
mov
ficom
mov
jbe
add
inc
js
fwait
pusha
xchg
pop
jne
shr
pusha
lds
test
sbb
daa
sub
push
pop
xor
lods
orps
add
dec
pushf
mov
in
mov
adc
stc
add
xor
nop
sub
jno
test
cmp
adc
fs
adc
imul
add
aam
stc
add
loope
retf
mov
test
leave
nop
sub
int3
mov
and
test
mov
dec
out
into
arpl
(bad)
pop
pop
test
cli
push
add
mov
stc
ds
ja
xchg
iretw
mov
movs
loop
cmps
(bad)
push
push
loope
dec
loope
mov
pop
js
je
xchg
and
inc
test
dec
movs
add
cli
lds
jns
mov
add
test
outs
lahf
mov
out
jae
clc
add
push
add
pop
outs
in
dec
sub
dec
cmc
adc
fld
aaa
dec
cld
jg
ror
jge
push
into
xchg
add
mov
into
mov
mov
xor
iret
mov
push
or
aaa
push
(bad)
repz
mov
fcom
xchg
jno
xchg
inc
or
repz
cld
pushf
dec
mov
js
fistp
les
mov
xor
ror
push
es
inc
and
xchg
arpl
je
das
scas
dec
rcr
xor
retf
add
pop
jne
push
(bad)
in
mov
cdq
jnp
fcmovnb
jb
sbb
pop
dec
xchg
test
jb
or
mov
add
cmp
pop
mov
cs
sbb
mov
mov
xchg
gs
int
xchg
dec
shr
jnp
out
inc
sbb
cmp
mov
sbb
movs
icebp
std
cdq
ins
(bad)
int
or
lock
push
ffree
or
das
jmp
xor
stos
ins
(bad)
mov
cmp
fbstp
sub
(bad)
xor
scas
mov
mov
jmp
nop
mov
les
push
int
xor
sbb
xchg
dec
(bad)
fcmovbe
aad
(bad)
cmp
jns
cdq
in
adc
into
sbb
addr16
add
mov
repz
inc
xor
pop
out
pop
push
mov
gs
jae
enter
jl
(bad)
nop
sahf
js
cld
lahf
add
add
pop
push
retf
cmps
out
ja
gs
cmp
inc
add
dec
pop
hlt
jns
into
dec
jl
fldcw
mov
loop
inc
clc
mov
inc
mov
sub
(bad)
dec
adc
mov
add
cmp
inc
push
cmp
adc
mov
jmp
in
cmp
mov
xchg
es
test
test
dec
stos
lock
outs
out
mov
dec
fnstsw
or
je
cmp
xlat
jo
out
aad
mov
xchg
popf
adc
mov
fsub
or
cmp
jecxz
mov
or
mov
lahf
pop
stos
repnz
push
in
mov
xor
popa
pop
xor
mov
pop
loope
jno
pop
cmp
mov
in
aaa
jp
xchg
test
js
bound
rol
sbb
sub
push
outs
mov
ja
jb
into
push
test
ret
mov
sar
push
das
adc
outs
mov
xor
setb
sub
movs
xchg
test
push
push
clc
ds
cdq
out
mov
xor
jmp
dec
out
shr
out
stos
popfw
int
pop
mov
cmp
jecxz
addr16
aam
add
cmps
in
hlt
dec
dec
jmp
popa
jae
dec
cmp
push
add
loope
inc
push
dec
mov
js
aad
call
aad
cmc
call
or
mov
cmp
test
mul
(bad)
push
outs
stc
push
(bad)
nop
movs
mov
mov
cmps
add
aas
mov
pop
pop
add
fmul
sub
jbe
cmp
add
adc
xor
mov
push
add
pop
int3
or
imul
ret
jno
loop
inc
aas
jo
outs
xchg
pusha
jae
xchg
xchg
sub
sub
sbb
cmp
mov
mov
(bad)
js
mov
jg
leave
ds
(bad)
jge
xchg
mov
cs
frstor
adc
xlat
mov
in
sub
retf
adc
scas
xchg
xor
jnp
leave
test
ret
pop
repnz
pop
(bad)
xlat
sti
pop
or
xlat
and
mov
or
sbb
fist
loopne
and
add
retf
cwde
inc
aad
nop
sbb
mov
mov
xor
or
pop
es
and
sbb
(bad)
cmp
add
ret
dec
cmp
inc
jo
or
push
js
ror
and
add
push
fstp
int3
inc
cmp
fsubr
(bad)
cld
inc
mov
jecxz
push
hlt
mov
enter
inc
imul
dec
fldcw
outs
push
aad
aaa
push
dec
in
dec
pop
xchg
imul
nop
dec
cld
and
sti
and
cmp
mov
test
jbe
stc
je
leave
(bad)
or
dec
mov
push
fimul
jecxz
sbb
xchg
xchg
push
dec
inc
int
push
aam
sbb
push
adc
das
cwde
jne
sub
xchg
ret
shl
test
fsubr
jno
jmp
jmp
mov
das
xor
fsubr
push
(bad)
sbb
adc
xchg
xlat
add
(bad)
cmp
scas
bt
xchg
cmp
data16
pop
imul
lahf
xchg
add
cmp
jp
or
pop
sti
adc
dec
push
pop
aas
adc
xchg
mov
push
scas
fcmovu
cmp
mov
retf
aas
and
xor
repz
cmp
pmaxub
mov
retf
out
mov
push
aad
(bad)
pop
pushf
adc
lods
scas
push
fnstcw
dec
dec
fcomp
pop
sbb
xor
mov
mov
jecxz
xchg
sbb
jo
sub
sbb
or
add
movs
sub
inc
mov
xor
pop
mov
mov
sub
sbb
xlat
inc
or
mov
lahf
stc
jl
xchg
pop
xor
daa
mov
int3
xchg
mov
cmp
dec
and
std
fdivp
inc
or
inc
cmps
jo
stc
sbb
xlat
stc
ins
mov
imul
xchg
lods
jge
and
sar
fdiv
stc
dec
and
push
pusha
mov
retf
sbb
cmp
les
(bad)
adc
or
ror
stos
(bad)
cmps
ja
mov
cwde
outs
pop
cmp
jbe
mov
sub
inc
sub
push
dec
mov
sti
cmps
not
mov
(bad)
idiv
cwde
stc
sub
sti
clc
add
xor
sti
pop
inc
jmp
int3
icebp
iret
js
aad
lock
mov
sub
fwait
xor
cwde
es
xacquire
packuswb
cmp
sub
mov
sub
mov
add
mov
add
scas
in
add
daa
sub
push
mov
test
enter
add
or
jb
push
push
jle
popa
adc
test
push
out
outs
push
jo
in
retf
xchg
setnp
mov
stos
or
pop
loopne
test
adc
push
sbb
fs
jmp
in
mov
aad
mov
jmp
ds
aaa
cli
das
rcr
leave
repz
inc
fs
nop
mov
mov
call
jae
mov
jne
mov
popa
mov
and
sahf
sub
pop
push
sub
mov
dec
mov
out
imul
fcom
and
out
(bad)
dec
call
pop
dec
nop
or
push
in
jl
loopne
inc
aaa
xchg
loop
mov
fistp
mul
push
push
xor
cwde
test
test
sbb
or
sub
pop
cmps
inc
push
and
adc
push
and
fwait
adc
shl
mov
push
jge
lahf
xor
jnp
and
push
push
mov
push
or
lods
dec
sahf
push
add
cwde
ja
add
jp
std
pop
sbb
or
shl
and
int3
shl
nop
or
add
test
das
push
xchg
mov
mov
mov
loop
inc
xchg
jmp
js
dec
pop
cmp
lds
mov
test
jmp
xor
cmp
(bad)
jp
div
jbe
fcomp
repnz
aaa
cmps
sub
fimul
mov
dec
mov
popf
dec
jl
dec
jmp
cdq
int
call
imul
or
push
xchg
xor
fs
int3
jne
adc
clc
and
jb
sbb
fsub
cmp
mov
mov
push
mov
dec
xor
add
cli
push
dec
xchg
push
popf
push
xchg
dec
sti
arpl
lock
in
aad
xchg
ss
ret
inc
jge
jmp
je
call
ja
mov
loopne
cmp
ror
fidiv
scas
clc
pop
call
pop
cmp
push
(bad)
cld
stc
sar
loope
js
mov
mov
inc
sbb
(bad)
ficom
(bad)
aam
add
popa
cmps
fdiv
mov
aas
ret
inc
call
mov
shl
xchg
push
xchg
adc
sti
xchg
xchg
es
sub
bound
sbb
aas
mov
lahf
xchg
cmp
push
jl
jbe
dec
and
adc
xor
cli
or
mov
xor
arpl
ins
dec
dec
jno
push
pop
mov
fstp
and
pusha
mov
aas
scas
shl
jle
mov
mov
out
xor
pop
pop
add
jl
(bad)
jne
adc
xchg
pop
jge
push
mov
into
and
mov
mov
pusha
pop
retf
scas
arpl
fwait
loopne
jl
mov
shr
lods
repnz
les
in
pop
xchg
out
shl
dec
stc
into
leave
dec
inc
in
movs
and
pop
cdq
jle
cmp
dec
aas
sbb
jmp
xchg
mov
jp
and
xchg
lea
push
and
leave
jmp
test
add
repnz
sbb
sub
aad
repz
fdivr
cmps
add
sbb
sub
or
fdivr
xchg
ror
dec
jno
sub
mov
mov
or
jecxz
cwde
dec
pop
cmp
stos
jmp
mov
mov
fwait
fs
mov
pop
aas
out
dec
dec
addr16
jmp
push
xchg
pop
ss
jne
mov
sbb
(bad)
inc
repnz
in
adc
(bad)
sbb
out
out
xchg
xlat
(bad)
movs
or
add
mov
mov
or
cmp
jno
xchg
(bad)
popf
sub
(bad)
scas
xor
pop
(bad)
in
sti
adc
std
movs
dec
jbe
js
out
cdq
cmps
mov
jmp
xor
cmps
out
inc
jbe
loop
mov
push
call
cmp
cmovo
push
inc
push
jne
adc
xor
sbb
mov
add
jp
mov
out
adc
cmp
push
popa
jg
ds
xor
jle
cwde
inc
xchg
push
xor
loopne
es
jbe
dec
(bad)
pop
rcr
mov
ficom
mov
pop
ror
lea
mov
sti
fdiv
js
mov
push
dec
adc
dec
jmp
rol
add
call
inc
fnsave
call
mov
imul
and
jae
in
inc
ss
add
in
xor
not
xchg
add
addr16
mov
inc
xor
cs
in
push
or
jae
mov
shr
mov
sti
xor
mov
cmps
into
xor
pusha
and
inc
test
stos
repnz
jo
fwait
xchg
dec
sub
mov
(bad)
call
bound
mov
outs
mov
pop
in
add
std
mov
ret
add
mov
jp
stc
loop
sbb
mov
push
jmp
lods
icebp
mov
mov
loopne
out
and
fidivr
iret
inc
push
sub
out
sbb
cmp
sti
outs
gs
ja
pop
jl
mov
xor
in
pop
sub
and
xor
mov
imul
adc
icebp
xlat
and
and
adc
ja
and
ds
xor
(bad)
push
fistp
repz
and
bound
jg
fistp
xchg
jnp
and
rol
dec
enter
sahf
(bad)
inc
(bad)
mov
push
leave
loope
or
mov
fst
jge
stc
mov
jg
pop
std
loopne
xchg
push
jbe
adc
xchg
xor
sar
pop
xor
pop
xchg
clc
call
js
sbb
adc
(bad)
fild
and
int3
push
jg
jmp
das
adc
cmp
sbb
ret
test
push
mov
xchg
xchg
pop
mov
mov
sub
adc
clc
ins
sbb
cwde
(bad)
fstp
mov
lea
push
cmps
xchg
std
adc
aaa
push
sub
rcr
sbb
pop
mul
aad
mov
lods
xchg
inc
jno
xor
jecxz
inc
jo
aas
aam
mov
dec
movs
test
scas
ret
jmp
jb
adc
cmp
clc
out
jecxz
stc
cmp
aam
rcl
gs
adc
adc
push
mov
in
pop
lds
js
ficom
inc
push
mov
dec
out
das
inc
mov
pop
pop
(bad)
push
sub
sti
ja
sbb
inc
inc
mov
hlt
js
cmp
rcl
enter
aas
xchg
push
data16
pop
pop
jmp
je
push
out
ret
add
fs
hlt
(bad)
(bad)
xchg
inc
fnstsw
(bad)
inc
dec
jp
ins
test
xor
add
loopne
aas
mov
fwait
sub
call
jb
sub
or
ins
dec
xchg
rcr
mov
not
jbe
add
push
or
and
mov
jg
cmps
xchg
out
xchg
mov
adc
push
and
xor
imul
mov
icebp
jge
mov
mov
icebp
enter
add
sub
inc
(bad)
in
rol
xchg
adc
fld
pop
cmc
mov
ss
mov
test
sti
(bad)
loopne
cmps
xchg
push
pop
push
mov
push
cmc
popa
pop
in
mov
push
inc
loopne
(bad)
(bad)
jnp
(bad)
rep
mov
shr
xchg
cmp
lea
mov
out
pop
jmp
sar
add
xchg
into
mov
or
rep
ss
mov
add
xchg
xchg
dec
(bad)
std
dec
add
jecxz
jns
fwait
and
and
push
inc
stos
fisubr
mov
mov
dec
test
push
test
dec
xor
es
jg
jns
mov
nop
stos
adc
mov
cs
pusha
(bad)
cmp
jmp
dec
pop
inc
sub
hlt
jmp
in
pop
js
fimul
shr
sbb
addr16
xor
push
jno
fcomp
outs
jle
sbb
out
ja
test
aam
push
stos
push
test
pusha
aam
sbb
sbb
sub
int
ds
fdivr
test
inc
mov
sub
sub
das
adc
inc
sbb
and
mov
xor
sub
daa
rcl
jno
sub
sahf
cmp
mov
and
outs
mov
in
push
dec
dec
push
loopne
push
js
shl
into
jmp
mov
cmp
dec
push
inc
aas
inc
loope
cs
sbb
pop
cmp
addr16
data16
jmp
add
nop
mov
stos
xchg
mov
loopne
stos
sbb
jbe
mov
lods
fdivr
bound
(bad)
ja
ficomp
add
retf
pop
jmp
adc
sti
mov
aad
sbb
pusha
test
ins
pop
inc
ins
(bad)
out
mov
sub
movs
dec
pusha
mov
icebp
mov
and
jge
xchg
addr16
sbb
adc
push
je
imul
or
inc
cmp
adc
movs
mov
cmp
jle
dec
pop
ficomp
xchg
push
inc
das
mov
imul
inc
aad
fst
das
sub
arpl
mov
dec
jge
sbb
(bad)
dec
jmp
sub
out
sbb
loopne
cmps
dec
jmp
(bad)
scas
or
xor
ss
dec
push
ss
sub
adc
(bad)
pop
int
push
(bad)
push
jmp
shl
xor
ror
jno
cdq
pop
or
adc
xor
jecxz
mov
inc
call
jl
mov
repnz
mov
lds
sahf
jb
xlat
fs
pop
out
loope
sbb
aad
mov
in
add
adc
out
nop
cli
adc
pop
ret
clc
xchg
(bad)
std
ds
push
aas
sbb
sahf
lods
ja
in
or
push
mov
or
or
lods
aad
cmc
inc
sub
cmp
push
cmps
xor
push
arpl
into
mov
mov
call
mov
icebp
js
bound
sti
pushf
loope
je
and
stos
fwait
rcr
xchg
lods
clc
pop
das
xchg
js
mov
inc
lds
mov
or
inc
or
fstp
inc
(bad)
shr
rcr
or
stos
fcom
push
std
xor
xchg
hlt
ror
int
dec
stos
mov
sbb
sbb
sub
mov
lea
add
add
add
enter
cld
(bad)
cs
adc
mov
popf
cmp
xchg
lahf
add
bound
sbb
mov
cmps
popf
jnp
stos
xor
(bad)
xchg
je
jge
adc
lods
call
call
jmp
movs
xchg
ins
mov
dec
add
cmp
dec
sbb
in
sub
pop
(bad)
int3
in
inc
jle
cmc
cmps
adc
imul
sbb
int
dec
push
hlt
(bad)
(bad)
retf
mov
cmp
sbb
xchg
ss
(bad)
js
rcr
inc
xchg
fwait
mov
mov
or
nop
iret
in
inc
jae
shl
movs
cmp
mov
cwde
js
add
adc
and
and
add
xchg
shr
mov
sbb
mov
cld
jle
xlat
mov
cmp
mov
xlat
adc
cmp
xchg
ret
mov
aas
jg
jp
jge
xchg
dec
retf
int3
cdq
mov
push
mov
cli
mov
loope
inc
std
jle
mov
fcom
add
jno
dec
mov
cwde
add
mov
push
test
setge
inc
push
and
sar
mov
sbb
fist
xor
gs
stc
leave
addr16
lahf
or
movs
cdq
lock
add
jl
into
bound
scas
test
out
and
dec
loopne
pop
add
and
lea
cdq
cdq
into
(bad)
(bad)
sbb
and
mov
(bad)
sti
out
mov
jne
mov
aaa
add
xchg
(bad)
pop
fstp
mov
not
inc
shr
mov
adc
or
mov
(bad)
popa
push
adc
test
outs
or
push
repz
sbb
xlat
and
clc
lea
fcmovu
daa
pop
sbb
xchg
ss
lea
adc
unpcklps
xchg
out
je
xchg
hlt
dec
sub
xchg
daa
imul
scas
loop
sub
sub
pop
cli
mov
mov
inc
pop
ret
cmp
(bad)
add
pop
jp
ins
push
out
jge
push
paddsb
xchg
xchg
mov
push
mov
dec
cmp
inc
or
jge
jl
mov
jae
inc
mov
fidivr
sub
mov
xor
pop
in
mov
in
in
mov
inc
sbb
into
ret
xchg
dec
stos
push
cdq
add
call
add
ja
scas
push
xchg
push
loop
(bad)
idiv
or
cmp
mov
sub
pop
sub
movs
(bad)
dec
push
sahf
fnsave
ss
sub
or
gs
mov
xchg
pop
jl
mov
add
xchg
dec
rol
adc
xor
das
mov
jae
gs
push
test
adc
(bad)
shl
mov
pusha
pop
adc
retf
sbb
pop
in
jl
call
add
out
jmp
push
or
outs
mov
stos
push
push
into
mov
push
and
leave
clc
cmps
mov
push
mov
or
scas
jl
inc
dec
cmps
jp
xchg
jl
call
mov
lahf
(bad)
fdivr
mov
inc
jns
popw
ror
je
cmp
mov
cwde
dec
jmp
inc
or
leave
mov
xor
sub
inc
iret
jnp
test
adc
retf
jo
aad
inc
and
jae
sar
sub
fstp
mov
div
xchg
jbe
fsub
out
scas
out
ds
sbb
cwde
daa
ss
call
fyl2x
mov
sti
iret
in
cmps
sar
sbb
mov
sub
mov
imul
inc
jnp
(bad)
push
leave
inc
cmp
daa
ins
or
mov
(bad)
mov
rcr
mov
clc
sub
jnp
addr16
mov
rep
rcl
pop
ss
jae
mov
sbb
dec
dec
es
adc
add
add
xchg
mov
cmps
xlat
outs
xor
stos
cmps
cmp
leave
mov
add
pop
cdq
xor
xchg
dec
ss
push
adc
jns
aam
loop
ret
mov
or
aam
cdq
cs
(bad)
push
mov
popa
mov
add
(bad)
ss
nop
rol
adc
dec
fcmovnbe
(bad)
cmp
(bad)
mov
xor
sub
push
ret
rcl
add
and
fsubr
dec
and
sbb
inc
retf
mov
loopne
dec
ds
shr
out
adc
push
fild
and
ja
adc
xor
mov
mov
sbb
mov
mov
das
jmp
push
ret
sbb
jns
xor
xor
(bad)
scas
dec
adc
inc
shr
mov
mov
mov
ds
mul
xor
aas
sbb
iret
(bad)
mov
(bad)
mov
push
pop
cs
adc
sub
mov
rol
in
repz
inc
pop
stos
out
ins
push
call
jns
outs
scas
add
ins
outs
xor
sbb
mov
xchg
xchg
jg
movs
rcr
add
in
pop
dec
call
push
push
ds
add
mov
pop
cld
es
rcl
add
outs
ds
inc
and
dec
sub
cld
out
push
and
ja
add
cmp
xchg
or
lods
xchg
test
dec
or
(bad)
jmp
movs
or
out
in
sbb
mov
xchg
(bad)
mov
mov
and
cwde
jns
jnp
and
popf
pushf
fs
int3
cmps
stc
pop
mov
xor
push
(bad)
imul
dec
jo
pop
ror
add
jl
mov
xor
scas
jmp
jns
dec
loop
daa
pop
sub
scas
out
adc
dec
dec
or
test
mov
and
(bad)
lods
pushf
sub
inc
jns
push
pop
(bad)
lds
mov
inc
add
in
iret
add
retf
fld
test
fs
mov
cmp
loop
dec
xacquire
ss
bound
pop
mov
out
sbb
pushf
and
ins
mov
repz
out
xor
sub
hlt
(bad)
mov
inc
call
lock
cmps
(bad)
js
mov
mov
gs
ror
jmp
imul
jae
cmps
test
ror
jmp
aam
call
xchg
scas
sti
int3
out
(bad)
int3
aad
fist
and
fldcw
xlat
out
dec
cmps
aaa
std
jns
sbb
jno
(bad)
dec
dec
and
lods
loope
into
sbb
mov
push
fist
and
outs
in
jge
mov
js
xchg
adc
outs
adc
mov
hlt
cwde
add
add
push
sub
mov
fbstp
jl
inc
mov
and
push
sub
pop
fucomp
mov
sbb
fisttp
rep
icebp
int
stc
mov
jae
cli
in
adc
and
cmp
retf
mov
adc
mov
mov
mov
mov
out
outs
leave
push
xchg
fild
loop
cli
stos
adc
xlat
jmp
or
enter
dec
sbb
in
ss
(bad)
mov
dec
adc
adc
xor
sbb
aam
fmul
cmps
addr16
cld
lea
xchg
mov
mov
cmps
ret
shr
mov
in
xor
xchg
js
xor
jno
ret
(bad)
cwde
pop
call
push
mov
imul
out
stos
push
push
adc
stos
cmc
pusha
or
aad
rcr
cdq
out
cmc
inc
and
cmps
fiadd
call
call
inc
inc
xchg
push
mov
pusha
popf
mov
enter
cmp
pushf
sar
mov
jnp
shl
iret
fwait
js
or
sbb
sub
aaa
and
xor
cmp
int
stos
cmp
popa
sbb
add
mov
xor
mov
leave
dec
pop
shl
dec
or
mov
fnstcw
vpsubb
inc
xchg
dec
imul
jnp
neg
scas
(bad)
pop
cmps
push
pop
pop
mov
jmp
stos
ins
lods
ss
lds
xchg
push
das
xchg
test
jae
and
xor
fwait
cmps
or
mov
lock
or
add
cmp
xchg
dec
clc
jecxz
dec
push
mov
push
std
or
jae
aaa
out
xchg
aam
inc
hlt
push
ret
push
mov
jge
ror
mov
clc
data16
aas
(bad)
shl
mov
mov
push
in
add
or
outs
outs
jno
xchg
call
(bad)
mov
inc
mov
ins
popf
add
or
mov
push
(bad)
jle
and
cmps
or
fimul
pop
dec
and
sub
aad
cmp
cmp
test
dec
stos
sub
out
dec
cmp
mov
sbb
into
sbb
sub
pushf
sar
dec
sub
jmp
add
iret
jae
cmps
test
cmp
sub
xchg
inc
cmps
mov
cwde
stos
mov
es
aaa
adc
aam
mov
cmps
mov
cwde
rcl
cld
in
push
in
inc
xchg
loope
inc
mov
or
dec
mov
jmp
push
xor
jae
es
les
mov
lock
aaa
add
(bad)
push
sub
add
cli
shl
lods
in
jecxz
lds
pop
cmp
ss
add
stos
das
or
jnp
popa
jns
mov
jo
(bad)
outs
cmp
sbb
jae
xor
in
inc
ja
pop
retf
mov
aam
cld
cmp
xor
add
fnstcw
sbb
jbe
outs
sar
jo
call
sbb
mov
or
dec
pusha
out
and
xchg
sbb
pop
mov
pop
push
int3
int3
lahf
in
fild
sub
ja
fisub
adc
cmp
mov
sahf
in
add
stos
sbb
jne
dec
imul
cld
arpl
or
lods
xchg
inc
call
cmp
jp
jl
lds
in
cmp
sti
scas
xchg
dec
enter
sbb
dec
stos
dec
mov
fstp
test
out
xlat
ds
jp
daa
jne
mov
call
xchg
dec
xor
add
icebp
hlt
and
xor
cdq
cmps
cmp
fdiv
mov
adc
adc
push
mov
push
mov
dec
pop
das
jb
jb
or
xchg
retf
push
push
fimul
xor
pushf
sub
jecxz
jmp
adc
inc
or
xchg
enter
jne
shl
sub
mov
jae
jmp
call
xchg
mov
sbb
push
mov
imul
and
ret
and
jge
into
(bad)
icebp
pop
pop
ins
mov
imul
test
jmp
jecxz
fld
les
cmps
cmps
xor
out
call
mov
push
repnz
jecxz
retf
fdivr
or
iret
and
mov
out
fisttp
and
adc
icebp
mov
mov
ds
or
and
aas
sub
iret
sar
sahf
enter
sar
cmc
(bad)
fcomp
lock
sbb
fld
mov
xchg
les
push
cwde
xchg
out
shl
ret
jge
cmp
jb
das
sub
xchg
out
loope
sti
shl
adc
push
retf
in
into
pop
mov
sbb
fsub
and
ins
push
in
cmp
sahf
leave
xchg
xchg
pop
lahf
push
popf
cs
inc
iret
movs
rcl
push
inc
mov
call
push
js
push
sbb
mov
cmp
imul
adc
xchg
aas
mov
pop
(bad)
inc
inc
mov
and
inc
or
loopne
iret
jmp
fisubr
jb
xor
movs
sbb
iret
xchg
(bad)
inc
mov
ret
outs
push
sub
icebp
imul
xchg
outs
inc
cmp
std
pop
push
push
xor
in
adc
imul
cdq
adc
jp
dec
cmps
jmp
mov
jb
or
mov
xchg
jmp
mov
pop
mov
pop
ins
bound
test
repnz
shl
mov
xchg
push
sub
or
hlt
push
stc
mov
xchg
dec
inc
mov
out
xchg
cmp
jno
mov
in
test
cmp
jnp
sbb
mov
fs
mov
add
in
xchg
or
nop
pop
imul
push
add
adc
out
repnz
outs
inc
imul
inc
inc
dec
push
cli
or
aam
mov
rcl
push
rcr
fst
int3
test
iret
dec
dec
scas
inc
fiadd
loopne
in
mov
cmp
mov
mov
cli
xchg
mov
fimul
sub
and
xor
sub
das
add
sbb
clc
popf
xchg
int3
sub
retf
xor
(bad)
lods
sbb
push
sbb
fdivr
pop
stos
outs
sub
lea
neg
popf
xor
push
jmp
mov
cmp
int
pushf
mov
pop
or
jo
ja
adc
push
js
test
clc
adc
xchg
pop
call
and
sar
aad
push
(bad)
cmp
or
cmp
push
rol
cdq
out
or
jb
ds
loop
sbb
sub
retf
mov
jmp
stos
mov
test
movs
lahf
mov
add
xchg
repz
pop
out
fld
inc
stos
(bad)
mov
mov
std
cmp
pop
pop
loopne
dec
pop
addr16
push
push
mov
mov
sar
aas
jp
test
pusha
imul
das
clc
sbb
dec
mov
adc
cmp
push
fistp
out
fsubr
stos
jmp
or
mov
or
adc
daa
or
mov
sub
das
retf
in
mov
push
imul
dec
sub
neg
jb
call
pop
movs
mov
lea
retf
fistp
lock
pop
pop
mov
icebp
and
gs
lods
aaa
pop
sti
add
or
out
je
not
mov
stc
fldenv
loopne
(bad)
retf
call
sbb
sbb
sbb
add
je
jl
pop
lods
test
lea
cdq
sub
imul
(bad)
sub
nop
fld
in
pushf
shl
inc
aam
adc
cdq
inc
adc
or
xlat
pop
push
dec
lds
iret
lods
pop
or
in
shr
aam
sbb
jb
inc
jno
addr16
lock
rcr
cmp
push
xor
push
cli
in
je
rcr
xchg
out
cmp
sar
rcr
aaa
cwde
sub
cmps
xlat
jmp
lahf
sub
xchg
inc
jmp
mov
sbb
je
pop
aad
jle
adc
out
shl
jne
pop
aaa
shl
aam
xor
xor
lea
outs
ficomp
and
aas
jle
mov
es
popf
dec
movs
lods
ret
or
adc
mov
sbb
push
in
(bad)
int
xchg
mov
jl
jge
dec
mul
jnp
inc
pop
sahf
pop
mov
jae
pop
sbb
fstp
mov
cmp
rol
mov
inc
inc
pop
aaa
sub
xchg
dec
inc
js
push
xor
jecxz
push
adc
xchg
cmps
push
inc
aas
push
push
fsin
mov
mov
jecxz
inc
jno
jno
ins
nop
ret
in
adc
retf
mov
dec
dec
cmp
(bad)
(bad)
lock
push
mov
bsr
xor
dec
ss
push
jno
ds
jmp
mov
jecxz
ins
iret
fcomp
(bad)
lea
mov
pop
push
sbb
iret
and
rcl
call
or
adc
add
mov
ds
test
pop
push
xchg
ficomp
or
into
std
adc
push
push
mov
adc
lahf
jl
lods
adc
mov
inc
sti
movs
neg
not
sub
xchg
es
adc
inc
xchg
sub
aas
inc
lods
mov
inc
outs
cmp
adc
xor
mov
ins
xchg
imul
jns
xor
ins
pop
fs
arpl
xlat
mov
sahf
xchg
lods
pop
mov
jnp
cs
pop
enter
fild
pop
jb
pop
xchg
mov
ror
mov
or
(bad)
xor
pop
leave
ins
ins
or
xchg
call
cdq
inc
ret
or
pushf
and
push
xchg
push
and
push
jle
(bad)
std
shl
xor
scas
pop
add
out
gs
mov
mov
add
arpl
imul
push
add
pop
xlat
cwde
sub
or
out
scas
je
popa
jnp
iret
aaa
stc
xchg
popw
jae
out
test
pushf
cwde
cmp
cdq
test
xchg
jnp
fdiv
cmp
arpl
sbb
outs
mov
ret
mov
popa
rol
arpl
jo
call
adc
or
mov
je
pop
xchg
mov
pop
jmp
mov
pop
das
pop
mov
push
cmp
rcl
mov
pop
xlat
sub
inc
addr16
and
dec
pop
push
mov
addr16
jnp
jmp
push
or
aam
add
pop
in
xchg
or
loop
pop
or
jmp
aam
retf
test
fdivr
lock
aas
aas
xchg
jecxz
jmp
adc
xor
cld
adc
popf
adc
sub
xor
cmp
sub
fwait
(bad)
sti
ret
mov
dec
mov
ins
lods
dec
loopne
out
pop
jno
mov
xchg
call
into
dec
and
je
into
shl
in
cs
sub
xlat
pop
or
jne
jns
mov
jmp
rol
stos
jns
rol
add
adc
js
ds
or
mov
call
sub
mov
mov
fadd
xor
and
js
jne
int3
fld
xchg
jbe
cmps
add
mov
lea
sub
popa
mov
or
lds
lock
mov
push
mov
xlat
sbb
dec
dec
shl
push
pop
ins
nop
mov
dec
push
mov
pop
rol
or
sti
loope
test
test
push
cdq
loopne
std
mov
cmp
push
xlat
pop
jmp
inc
aaa
xchg
push
mov
sub
push
sub
mov
retf
jmp
int3
cs
jmp
xchg
je
call
dec
add
scas
push
pop
xor
or
fsubr
cmp
push
sbb
iret
sbb
cmps
test
jo
je
xchg
jge
dec
fdivr
mov
jno
sbb
movs
xchg
or
mov
(bad)
pop
mov
movs
mov
rcr
lahf
pushf
push
(bad)
std
iret
pop
std
int3
mov
jns
ds
retf
xchg
and
into
movs
jo
fild
mov
rcl
scas
dec
or
and
mov
inc
pop
scas
inc
addr16
pop
dec
dec
mov
mov
and
sbb
or
or
inc
aas
mov
cmp
pop
fisub
sbb
call
sbb
xor
xchg
cld
jmp
daa
lock
cmp
adc
hlt
cs
mov
mov
mov
cmp
push
jnp
mov
out
mov
push
retf
loop
(bad)
repz
rcl
cld
mov
or
movs
scas
outs
mov
push
outs
and
cmp
mov
pop
sbb
clc
fild
mov
loope
mov
mov
rol
inc
adc
inc
enter
retf
stc
cmps
xchg
pop
sbb
xor
int3
cs
pop
jae
push
dec
call
pop
dec
push
retf
push
jmp
aaa
adc
mov
dec
or
inc
mov
loope
jg
nop
ds
sbb
cmp
dec
pop
cmp
jle
mov
jb
mov
dec
sbb
fldenv
lds
int3
mul
hlt
adc
mov
sbb
xchg
add
mov
fild
push
pop
dec
add
mov
out
sub
cld
dec
jo
imul
sub
sbb
pop
shr
xchg
push
shl
push
dec
sub
outs
dec
mov
push
dec
ror
pop
or
(bad)
pop
fld
xchg
retf
jle
out
push
fsub
xor
pop
mov
mov
mov
fdiv
mov
movs
xchg
dec
(bad)
js
push
or
sbb
inc
push
mov
adc
out
fcom
popa
mov
cmp
add
dec
sahf
movs
and
cwde
push
sub
out
jmp
sub
aaa
xchg
xchg
aam
cwde
mov
mov
les
sbb
sub
je
aad
xlat
push
push
ss
add
es
cmp
test
dec
mov
sub
push
xlat
push
mov
call
leave
jbe
push
mov
stos
or
ficomp
inc
add
cmp
cld
sbb
xor
sbb
xchg
ins
adc
dec
jb
stc
cmp
xor
or
cmp
icebp
or
jle
jge
cmps
sub
and
jg
jnp
in
adc
push
pop
and
push
shr
gs
xor
fsubr
movhps
xlat
ret
aaa
out
popf
in
push
mov
pop
repz
dec
popf
pop
sar
lods
mov
sahf
hlt
sub
xchg
or
mov
mov
sbb
ret
imul
mov
pop
mov
stc
add
pop
jmp
clc
add
fcom
xor
(bad)
push
push
ror
test
cmps
stc
call
sub
retf
or
cmp
jne
(bad)
in
repnz
shl
(bad)
cmovle
jecxz
pop
jb
jno
add
mov
jbe
cmp
push
rcl
add
fcmovnb
outs
call
neg
icebp
xchg
(bad)
movs
cmp
inc
push
pop
stos
iret
push
push
xchg
test
mov
push
mov
adc
sub
sahf
jne
mov
and
stos
into
sub
ss
xor
addr16
sub
cdq
cmps
dec
clc
dec
dec
adc
mov
mov
sub
out
into
sbb
push
arpl
add
push
out
aaa
ss
inc
dec
or
rol
cs
dec
es
sub
cdq
sar
sbb
outs
outs
ja
cmp
dec
adc
jmp
push
cmp
push
(bad)
std
mov
in
jl
jg
and
lock
push
push
ins
and
retf
xlat
adc
loop
pop
daa
inc
mov
(bad)
fimul
jae
mov
lahf
in
push
leave
sub
lock
sub
shr
cmp
push
dec
cli
and
dec
imul
popa
or
jl
lock
add
inc
(bad)
in
ror
adc
lea
push
xchg
leave
add
mov
out
jle
stos
jecxz
mov
test
fs
aaa
stos
fsub
mov
cld
inc
xor
adc
xchg
mov
push
(bad)
scas
lds
hlt
in
push
int3
push
dec
cmp
pop
cmps
push
mov
adc
mov
jecxz
xchg
dec
adc
cld
sar
jns
aaa
xor
div
pop
xor
cmp
pusha
repnz
xchg
xchg
mov
dec
push
rcr
movs
add
inc
fidivr
add
mov
(bad)
(bad)
xchg
cld
add
enter
push
jo
pop
nop
inc
xchg
inc
mov
sbb
shr
cmp
xor
add
add
inc
outs
adc
sbb
and
repnz
lds
cmc
fwait
mov
sub
dec
ror
stos
pop
sub
add
cmp
push
ja
pop
cmc
pop
aaa
shl
in
and
or
jle
mov
mov
shl
push
fld
mov
sar
cld
repnz
dec
sbb
xor
call
daa
out
popf
xor
fs
pop
mov
leave
sbb
or
pop
inc
aam
std
mov
cmp
push
gs
sbb
xor
sbb
adc
xchg
xchg
push
sub
jb
aam
out
pop
pop
pop
ret
in
inc
sbb
scas
xor
shl
adc
rcr
ret
daa
jecxz
mov
xor
in
bound
push
push
outs
lods
imul
popf
iret
icebp
push
mov
inc
mov
stos
pop
out
jge
dec
jbe
dec
jle
mov
rol
dec
and
movs
shl
dec
test
adc
mov
fdiv
mov
fisub
mov
mov
ret
fsubp
adc
shl
push
in
mov
(bad)
(bad)
pop
in
fwait
push
and
mov
adc
addr16
inc
pop
mov
mov
(bad)
cmp
xlat
fist
inc
jmp
sub
xlat
xor
pop
in
retf
add
adc
push
dec
adc
out
pop
sub
xor
call
push
call
popa
push
xor
jle
add
cmp
shl
gs
pop
xchg
cwde
enter
iret
cs
xchg
or
jns
jne
out
out
and
mov
adc
jnp
sub
test
gs
out
xchg
addr16
mov
popf
add
add
out
mov
fdiv
dec
inc
daa
xchg
xor
pop
test
jns
cdq
jbe
push
mov
mov
out
std
out
xor
inc
add
adc
sub
jnp
adc
shr
jae
add
add
iret
fldenv
test
retf
inc
loop
push
jl
and
xchg
rol
movs
ret
and
stc
pusha
inc
sub
mov
aad
mov
dec
(bad)
shl
out
out
in
add
das
mov
push
jnp
lock
icebp
push
or
rol
or
or
inc
jecxz
mov
in
xor
(bad)
aam
push
cmp
or
pop
or
clc
push
jae
in
aas
jmp
lea
sub
stc
jmp
jp
xchg
arpl
xchg
cmp
cmps
jae
fs
imul
sub
das
jb
(bad)
jge
push
rol
retf
repnz
dec
add
enter
sub
mov
xchg
movs
fxch
pop
mov
jmp
ret
pop
in
xor
xlat
shr
mov
inc
imul
movs
scas
cmp
mov
add
gs
xchg
dec
lods
add
dec
lods
mov
or
sbb
sbb
arpl
imul
pop
cs
fstp
(bad)
mov
jmp
(bad)
and
aaa
int
add
(bad)
std
or
ror
jecxz
stos
mov
imul
push
pop
je
or
inc
test
pop
test
dec
hlt
mov
or
mov
mov
and
shl
xchg
dec
cmp
clc
mov
test
push
repnz
add
es
pop
js
xchg
pop
jmp
dec
adc
int3
cwde
mov
test
pop
in
cmp
xor
nop
dec
dec
ins
mov
cmp
mov
enter
xchg
jne
sti
fist
mov
fld1
clc
cmps
push
aad
push
test
cmp
movs
sub
sub
retf
popf
subps
mov
scas
cmps
sar
add
mov
movs
in
das
stc
sbb
add
cmp
jle
cmp
sub
push
std
inc
lock
xor
iret
adc
es
repnz
and
js
into
push
ins
movs
jp
dec
sub
lea
ret
add
sbb
gs
push
retf
test
int3
test
daa
cmps
test
cmp
and
(bad)
or
das
inc
pop
push
lods
mov
rcr
jp
call
inc
push
cmp
xor
mov
retf
mov
ins
pop
stos
in
rcl
jno
jbe
vmread
repz
fprem
adc
(bad)
lahf
retf
mov
test
sti
or
test
sahf
jne
out
fs
ret
js
in
dec
imul
cmp
inc
sub
inc
outs
pushf
hlt
cmp
push
shl
push
sti
sbb
in
push
pop
sbb
lea
in
ins
ror
jl
mov
pop
aam
dec
pop
add
sbb
mov
pop
xor
and
loopne
cli
pcmpeqd
xchg
pop
(bad)
stos
jns
mov
(bad)
shl
test
and
sub
(bad)
shl
mov
ret
push
mov
retf
jnp
inc
adc
mov
add
mov
xchg
mov
lods
push
inc
popa
pop
mov
xchg
mov
xchg
inc
mov
pop
call
je
gs
enter
xchg
push
stos
adc
ret
sahf
les
iret
fimul
jg
ror
mov
cmps
push
les
adc
adc
mov
daa
ret
outs
xchg
jo
inc
cmp
icebp
sub
scas
xlat
fwait
inc
pop
gs
dec
mov
cs
(bad)
and
ins
adc
jl
loop
mov
enter
movs
cli
mov
out
sub
or
adc
sbb
dec
xchg
push
adc
test
cmps
adc
test
inc
mov
rcl
inc
stc
scas
jl
xchg
mov
xlat
dec
mov
fmul
sub
movs
and
outs
inc
sub
(bad)
jg
jb
arpl
outs
cld
mov
dec
sti
aaa
push
xlat
mov
mov
fs
add
sub
mov
jbe
xor
xchg
or
out
push
sbb
adc
(bad)
jmp
push
nop
xchg
mov
pop
cmps
je
mov
std
or
or
inc
(bad)
in
clc
ins
adc
sbb
ins
jb
(bad)
std
ror
pop
call
sub
data16
enter
inc
test
lea
pop
fistp
cmp
aam
clc
sti
mov
cmp
pop
dec
jmp
sub
or
fs
sbb
pop
sub
outs
mov
jae
mov
pop
sub
or
psubd
std
inc
sbb
mov
sbb
rcr
adc
adc
icebp
std
(bad)
push
les
dec
aad
(bad)
enter
cmp
push
cmp
mov
add
mov
or
enter
fild
push
push
push
(bad)
imul
and
push
adc
mov
mov
in
cmc
mov
and
fsubr
add
hlt
les
mov
cmp
adc
and
cmp
xchg
push
sbb
sti
not
in
dec
jae
xor
sbb
iret
arpl
lahf
loop
jb
jae
inc
cmp
movs
(bad)
out
push
gs
cmp
mov
sub
jo
in
popa
fwait
bound
mov
test
adc
rcl
sub
jmp
das
(bad)
sti
lods
push
push
out
jmp
mov
aaa
js
inc
xchg
mov
xchg
call
or
addr16
pop
lea
mov
rcr
cmp
push
jle
retf
jnp
and
dec
add
sbb
sbb
jge
mov
jno
fadd
mov
push
pop
pop
mov
or
pop
xchg
in
jp
cmp
les
call
out
jp
lock
scas
inc
hlt
or
popf
das
out
and
shl
hlt
dec
out
cld
neg
mov
dec
lea
retf
popa
adc
adc
sub
inc
xchg
out
stos
std
xchg
add
cli
pop
test
mov
movs
pop
push
xchg
sar
sbb
shl
in
arpl
dec
xor
cmp
add
test
pop
xor
pop
lock
xchg
mov
out
or
shl
mov
cmp
movs
inc
dec
dec
(bad)
(bad)
xor
stos
cmp
out
ret
dec
stc
or
sub
pop
jge
mov
push
arpl
out
fld
adc
or
jle
xor
cmp
sbb
clc
dec
hlt
pop
leave
adc
das
mov
or
(bad)
rol
xor
lods
out
inc
pop
iret
mov
imul
xchg
sub
mov
cmc
loop
dec
test
push
jns
dec
stc
sub
ins
inc
sbb
inc
pop
lahf
jnp
aaa
and
es
test
xchg
pop
pop
and
xor
push
mov
adc
or
xor
not
icebp
cmps
shr
out
and
les
test
cmp
loop
rol
scas
cmps
add
cmps
sbb
adc
push
inc
or
dec
push
fwait
and
outs
mov
jns
rcl
xor
or
mov
js
test
les
adc
mov
mov
in
sbb
push
and
lock
(bad)
cmp
push
(bad)
fsubrp
rcr
mov
loop
xor
std
loope
mov
cmp
sbb
sub
test
jg
es
outs
push
js
aas
xchg
mov
jg
adc
push
stos
addr16
pop
pop
call
repz
pop
xor
cmp
jle
xor
loope
imul
out
cld
mov
fsubr
pop
or
and
shl
mov
dec
xchg
std
loope
arpl
push
das
push
jmp
or
mov
mov
dec
or
mov
inc
sbb
mov
sti
xor
mov
enter
inc
mov
jo
jnp
sub
lods
scas
jg
xchg
mov
dec
idiv
lods
lods
push
(bad)
pop
ror
xchg
cmp
movs
repnz
rcl
add
and
sub
inc
adc
in
mov
pusha
mov
cmp
inc
xchg
out
lods
push
std
aaa
sub
mov
(bad)
aam
xchg
std
in
movs
sub
mov
(bad)
jnp
xor
xor
and
cmp
das
ror
adc
sub
lods
fwait
dec
or
jb
ins
push
mov
hlt
lds
(bad)
stc
push
retf
jbe
les
sbb
dec
cmps
(bad)
lods
(bad)
mov
xchg
daa
sbb
jmp
std
mov
push
dec
pushf
div
sbb
cmc
xchg
lds
mov
hlt
xor
xchg
lea
cdq
dec
imul
dec
and
sub
push
js
or
jno
push
pushf
jmp
mov
(bad)
mov
lock
sbb
sbb
leave
mov
mov
test
mov
cmps
push
not
pop
push
push
push
cwde
dec
xchg
nop
mov
in
pushf
mov
in
jno
stos
sbb
push
jl
ret
shr
xor
xchg
mov
aam
std
cwde
ja
and
ret
push
mov
arpl
sti
(bad)
std
inc
xor
clc
shl
inc
pushf
pop
xchg
jmp
test
call
cld
mov
gs
movs
lds
pop
mov
push
test
mov
movs
dec
cmc
pop
lock
jp
inc
stos
inc
dec
push
test
sub
(bad)
aas
stos
popa
aaa
fild
mov
jne
clc
xchg
mov
cmp
jae
outs
pop
and
and
call
and
aad
(bad)
shr
or
mov
push
dec
mov
shl
test
arpl
sahf
add
mov
pslld
mov
cmp
pop
clc
ins
retf
xchg
cmp
idiv
imul
mov
xbegin
scas
stos
mov
inc
and
mov
xchg
stos
adc
pop
push
xchg
loop
aas
cld
outs
loopne
dec
cmp
js
inc
iret
les
pop
pop
mov
sbb
jns
movs
xchg
pop
push
gs
mov
addr16
add
fidiv
add
fwait
lods
and
xor
mov
adc
int
in
outs
jnp
xor
outs
xor
adc
mov
mov
mov
xchg
(bad)
movs
loope
xlat
adc
(bad)
cmc
dec
mov
or
in
push
cmp
je
std
lods
in
adc
sbb
(bad)
dec
fdiv
ins
retf
mov
mov
xchg
cmp
inc
test
loop
push
mov
or
ror
mov
hlt
(bad)
cli
rcl
inc
jmp
fdiv
in
add
fsub
sbb
test
mov
cmps
jge
ret
(bad)
ror
rol
je
retf
mov
push
add
and
daa
in
outs
popa
test
dec
hlt
xchg
jle
rcl
mov
jmp
push
div
call
jmp
add
and
out
inc
or
hlt
ret
push
lock
movs
pusha
es
cmp
inc
into
mov
int
daa
out
lods
mov
mov
sti
cmps
icebp
fidivr
aas
jecxz
icebp
out
call
xor
add
mov
iret
dec
xchg
and
lahf
stc
les
dec
jp
fsub
cmp
nop
addr16
jmp
mov
sbb
movs
popa
jp
push
inc
cmp
les
into
ins
movs
mov
push
psllw
mov
xchg
inc
mov
xor
imul
mul
jecxz
test
daa
and
inc
pop
dec
push
fld
push
and
sbb
mov
add
and
adc
pop
imul
sbb
push
mov
or
cmp
sbb
cdq
jno
pushf
fcmovne
pop
mov
inc
(bad)
popw
out
cwde
icebp
push
push
jnp
adc
xor
sbb
(bad)
mov
dec
scas
test
(bad)
mov
mov
and
call
ficom
pop
lds
gs
or
adc
push
cs
fadd
push
stc
movs
ror
adc
push
cmp
cmp
mov
and
shl
cmp
add
mov
test
in
jmp
pushf
mov
sub
data16
cmp
inc
js
ds
cmc
jmp
cvtpi2ps
outs
fiadd
or
ds
outs
loopne
pop
mov
sub
sbb
gs
push
imul
add
pop
push
call
push
jge
push
and
sbb
and
push
jecxz
push
fucomp
xor
push
loope
sar
xlat
xor
pop
out
dec
xor
lods
icebp
addr16
jmp
adc
movs
or
pop
imul
or
(bad)
sub
dec
mov
cmp
xor
test
cld
repnz
mov
xor
sub
ffree
stos
(bad)
jno
mov
xlat
jns
xlat
push
lahf
cmp
pop
fsubr
call
cdq
inc
or
jge
sbb
and
pusha
icebp
inc
pop
mov
in
xchg
dec
daa
fadd
stc
(bad)
sbb
jecxz
and
lahf
lea
icebp
mov
push
push
fidiv
mov
xor
cmp
cmp
dec
add
inc
xchg
cdq
int3
xor
std
ror
xor
dec
sub
cmp
fidiv
stos
mov
xchg
je
test
xlat
outs
xor
mov
pushf
adc
stos
cmovle
jp
xchg
mov
test
icebp
je
jp
cmps
mov
push
sub
test
stos
pop
mov
pushf
jmp
leave
jmp
fucom
mov
sub
add
arpl
push
jmp
and
or
(bad)
sti
inc
mov
mov
add
adc
mov
jb
or
cli
inc
jg
ret
pop
mov
repnz
jns
jg
imul
retf
jmp
loop
adc
cld
jo
add
rcl
sbb
adc
ret
(bad)
cmp
cmps
add
inc
ret
mov
dec
test
test
sbb
and
cmp
jmp
pop
adc
xor
psubb
rcr
or
xchg
adc
jae
push
inc
ins
pop
out
push
dec
cli
add
jb
hlt
daa
iret
push
das
sub
jmp
(bad)
and
test
cmp
(bad)
fcomip
jmp
cld
fwait
jg
(bad)
jnp
retf
retf
iret
dec
(bad)
mov
or
add
jle
(bad)
mov
ror
mov
mov
(bad)
test
je
gs
sub
fbld
loope
scas
or
out
imul
adc
gs
jmp
or
xchg
xchg
shl
mov
sar
push
cmovb
cli
or
loope
imul
loopne
fsub
mov
popa
mov
daa
fnstsw
push
add
adc
fisttp
push
cmc
jmp
rcr
outs
bound
xchg
or
icebp
pop
pop
mov
call
inc
adc
aaa
cmp
xchg
fwait
or
je
lds
dec
cmp
sbb
and
adc
out
cmc
jg
pushf
sbb
cwde
mov
popa
jne
inc
pop
cmp
mov
xor
lds
lods
xor
adc
out
jmp
jo
mov
iret
mov
add
lea
mov
jo
push
mov
xchg
push
and
jmp
jmp
retf
iret
lahf
mov
les
jb
inc
(bad)
xor
dec
inc
push
jns
mov
sbb
mov
adc
outs
aas
mov
adc
js
scas
hlt
dec
imul
cli
cmp
int
cmp
adc
mov
cmp
sbb
shr
sbb
in
mov
jb
push
std
inc
dec
pop
dec
js
sub
loop
daa
and
enter
ins
pop
call
dec
les
mov
test
daa
cmc
fst
and
adc
push
test
mov
js
xor
int
xor
out
xchg
mov
mov
out
mov
mov
mov
xor
and
rol
fstp
cmps
adc
jle
fdiv
repnz
pop
push
pop
mov
cld
xchg
push
sahf
dec
cmp
daa
icebp
(bad)
lods
mov
nop
pop
xor
addr16
jmp
cmp
fist
xor
(bad)
rcl
jge
or
ss
jp
adc
mov
mov
(bad)
std
xchg
adc
repnz
xchg
out
in
int3
ss
in
sbb
cld
js
pop
ror
sbb
cmp
jb
shr
(bad)
frstor
(bad)
adc
sub
addr16
arpl
(bad)
imul
jp
add
sar
push
js
push
icebp
cmps
xchg
stos
jg
call
aam
in
scas
pop
xor
retf
addr16
out
or
ins
adc
add
outs
mov
mov
inc
fcomi
jg
push
mov
in
test
adc
lods
int3
mov
or
clc
gs
(bad)
mov
sub
pop
jecxz
pop
and
dec
mov
sbb
pop
pop
or
mov
jo
bound
jne
idiv
xor
imul
cwde
ret
cmp
xchg
push
leave
mov
shr
fst
popa
rol
int
adc
xlat
sbb
or
pop
mov
mov
fnsave
push
and
cmp
inc
cmp
ins
leave
test
dec
aam
test
or
(bad)
xor
xchg
xor
fbstp
imul
test
rol
fild
mov
int3
ds
inc
push
adc
sbb
das
imul
stos
mov
ds
cmps
retf
int3
xlat
jne
sbb
mov
push
movs
xor
inc
ins
mov
rol
imul
xor
fimul
inc
test
adc
(bad)
shr
(bad)
stc
jg
cs
sub
outs
xor
xlat
inc
repz
cdq
push
push
repz
add
dec
sub
cmp
test
push
ret
movs
(bad)
mov
cmp
pop
dec
ret
inc
movs
fsub
jbe
add
fst
adc
adc
mov
mov
jno
adc
ret
and
push
and
arpl
push
cmps
add
sbb
fmul
mov
stc
inc
(bad)
adc
add
mov
push
xchg
jmp
ret
movs
cmps
jmp
push
rcr
sbb
aam
inc
inc
push
fwait
test
mov
push
xlat
(bad)
sbb
imul
add
fwait
add
mov
aaa
shl
dec
popf
mov
test
pop
xor
mov
out
in
add
movs
adc
das
dec
jmp
sahf
and
in
cmp
or
das
push
enter
adc
aas
xchg
aas
cmp
enter
add
and
jne
fisttp
mov
je
xchg
inc
aas
cs
popa
stc
and
cdq
mov
dec
pop
add
inc
mov
in
stc
js
jo
inc
lods
clc
test
arpl
add
jecxz
mov
or
repnz
and
out
cmc
cmp
adc
js
int3
sbb
out
push
inc
add
call
mov
jecxz
add
aas
imul
iret
jmp
dec
jmp
repnz
and
outs
iret
jmp
loop
pop
mov
aaa
jo
jnp
addr16
adc
sub
push
retf
mov
sub
aas
xchg
arpl
jmp
iret
fs
ret
add
test
cmp
inc
pop
add
or
cmp
mov
push
ror
xor
test
out
sar
inc
outs
mov
xor
jno
push
sar
mov
enter
xor
push
adc
dec
lea
repz
(bad)
ins
icebp
jmp
or
xchg
sbb
fisttp
inc
sbb
mov
in
lock
dec
aad
movs
mov
(bad)
pop
mov
mov
cdq
ret
sub
xor
and
jge
xchg
adc
jg
fmul
stc
push
mov
xchg
cmps
push
lds
stos
jno
sahf
fcom
popa
popf
cmp
sub
dec
es
xchg
fisubr
(bad)
loopne
sub
mov
clc
sti
repz
dec
add
out
sbb
xchg
and
popa
and
enter
push
jmp
movs
pop
jno
sbb
inc
pushf
imul
cmp
lea
pushf
xchg
sub
inc
dec
shl
arpl
pop
sub
aas
pop
loope
mov
or
in
dec
sahf
mov
xchg
test
pop
imul
jnp
arpl
pop
pusha
pop
out
push
fbstp
cmc
pop
mov
loopne
frstor
cld
push
or
xchg
cmps
out
ins
daa
sbb
ret
xor
pop
(bad)
push
dec
popa
ds
dec
jmp
int3
jmp
movs
sbb
aas
mov
icebp
neg
sbb
sar
cmps
mov
or
add
mov
push
ret
add
sub
push
sar
mov
aas
(bad)
test
dec
ret
mov
push
cmps
popa
stos
ss
nop
daa
aam
cmp
mov
ror
xor
adc
mov
jmp
das
add
or
fst
ret
ficom
pusha
cli
sub
lahf
test
mov
lods
jmp
repz
sub
ss
add
aas
dec
mov
xchg
dec
push
in
adc
mov
inc
push
inc
sbb
xchg
retf
inc
clc
cmp
loopne
or
mov
dec
and
dec
out
fild
cmp
loop
(bad)
imul
bound
stos
jbe
and
xchg
lea
jmp
das
repnz
rcr
das
cmp
fild
jae
push
jmp
mov
ins
and
jbe
cmp
mov
in
outs
xchg
out
not
xchg
push
shl
test
push
movs
int
mov
test
fdivr
iret
aam
ror
inc
mov
adc
int3
cdq
push
cmps
lods
push
adc
sahf
xor
jno
ret
jno
xor
shr
push
loop
mov
mov
xor
inc
xchg
adc
push
xchg
rcl
add
inc
and
adc
in
ja
loopne
cwde
arpl
test
ror
adc
aad
and
xchg
xchg
cmp
retf
cmp
or
jns
cs
xchg
outs
sti
xchg
inc
dec
sub
or
stc
mov
aas
inc
jecxz
aaa
or
xor
test
(bad)
cmps
xchg
in
jnp
ret
jp
lods
jmp
fidivr
sub
add
or
jb
fld
lods
pop
push
add
sub
mov
jg
not
enter
jb
(bad)
(bad)
cmc
inc
xlat
dec
aaa
xor
mov
mov
pop
dec
and
pop
stc
sub
and
ja
sub
(bad)
push
and
retf
xlat
and
mov
pop
xor
xchg
cli
sub
inc
and
scas
je
fwait
jge
cld
jne
aad
mov
lea
jne
or
test
pop
ret
cwde
test
les
mov
cmps
leave
lea
xor
cmp
jne
call
mov
pop
fwait
aad
mov
popf
rcl
in
dec
dec
mov
stc
mov
and
and
inc
clc
rcl
mov
jle
dec
aas
dec
xchg
push
push
xor
xchg
leave
outs
add
mov
cli
pop
cmp
xchg
rcl
inc
dec
and
shr
inc
cmc
sti
and
lea
jno
shl
int
in
sbb
inc
dec
cmp
or
dec
and
scas
pushf
mov
or
mov
outs
sbb
daa
mov
or
or
sar
sub
mov
dec
cdq
leave
jge
ror
lahf
inc
push
mov
ss
lds
adc
jecxz
(bad)
inc
movs
mov
xchg
jmp
and
lahf
mov
jg
pop
pop
mov
pop
jmp
stos
or
dec
(bad)
jmp
dec
mov
inc
mov
jg
in
sbb
cld
mov
mov
mov
pop
push
and
xchg
mov
jb
fdiv
nop
stos
test
sti
pop
dec
bound
les
pop
jmp
xchg
push
sub
jle
pop
out
or
cmp
cmp
sub
push
imul
jbe
arpl
inc
sbb
clc
dec
stos
sub
pop
pop
ds
aaa
xor
ins
adc
outs
inc
rcr
dec
mov
pop
sub
test
cld
add
sbb
xor
and
cmc
jge
add
sbb
stos
aaa
cmp
nop
movs
mov
fsubr
mov
jae
mov
add
repz
sub
jnp
xor
xlat
loope
jae
jbe
scas
inc
daa
popf
cs
jmp
int3
and
nop
outs
and
and
enter
lock
bound
sub
sbb
ds
pusha
pop
pop
and
pop
jb
mov
outs
adc
ret
mov
cmc
mov
in
scas
xchg
mov
(bad)
cld
fwait
nop
cmp
jecxz
loope
(bad)
dec
pop
mov
loope
ins
out
test
and
xlat
mov
scas
daa
movs
retf
mov
dec
or
fs
imul
popa
push
add
sti
dec
daa
inc
mov
aad
scas
(bad)
jg
in
ret
add
jge
add
popa
mov
push
xchg
loop
inc
jae
lock
mov
jo
js
sbb
inc
inc
aas
xchg
fnsetpm(287
pop
bound
mov
aam
lea
je
jecxz
sub
into
jmp
sub
(bad)
mov
stos
lods
in
repnz
enter
loope
pop
cmps
xchg
dec
in
or
inc
cld
push
ret
ss
ins
add
addr16
lds
jmp
adc
or
cmp
outs
sar
inc
xchg
sub
stc
(bad)
and
int
mov
frstorw
lods
adc
xor
pop
jo
sbb
cs
lea
jl
in
jl
inc
inc
xor
movs
ror
jnp
sub
mov
mov
jae
movs
hlt
ins
xor
xlat
jns
xor
retf
or
outs
or
xchg
shr
and
push
inc
mov
jecxz
data16
ffreep
retf
bound
adc
enter
sbb
dec
inc
sub
jne
test
aam
and
in
ja
sub
bound
hlt
or
jo
xor
sub
retf
neg
inc
jne
dec
mov
xor
retf
push
pop
jmp
in
outs
xor
inc
enter
add
fnstsw
jmp
out
out
repz
sbb
mov
loope
dec
sbb
sbb
cmp
pop
fst
and
inc
cmps
fucomip
or
mov
loop
(bad)
xor
xchg
xor
pusha
nop
sbb
dec
jo
adc
and
jg
sub
ret
mov
sub
(bad)
movs
xchg
mov
push
xchg
iret
ror
test
mov
mov
push
retf
mov
add
xor
outs
inc
sub
lock
(bad)
adc
imul
cmp
push
mov
and
loopne
ret
jp
adc
xor
div
sub
inc
mov
std
inc
stos
cwde
sahf
inc
test
inc
push
add
sbb
cmps
outs
sub
hlt
outs
xchg
retf
(bad)
out
into
out
ds
jnp
mov
mov
pusha
cmp
sbb
sar
fild
bound
bnd
jecxz
xchg
in
mov
mov
push
or
call
(bad)
inc
imul
inc
retf
jne
and
or
dec
fdiv
jge
shl
cmps
sbb
pop
rcr
imul
cmp
pop
or
sbb
leave
call
fstp
aas
mov
nop
pop
movs
cdq
idiv
fimul
xor
xor
mov
mov
std
push
dec
loope
ss
push
ins
repnz
mov
mov
jle
sbb
dec
call
call
xlat
fwait
dec
pop
shr
fld
add
outs
sub
pop
loope
xchg
mov
ins
(bad)
push
add
lds
movs
cmc
push
ins
and
mov
or
mov
jns
jns
lods
pop
addr16
sub
or
sbb
rcl
jle
sub
pop
sbb
and
fs
addr16
jecxz
adc
gs
mov
dec
jmp
fild
sub
scas
ds
sbb
cmp
test
xchg
popf
movs
add
dec
shl
in
outs
inc
neg
hlt
pop
fisttp
int
or
call
das
cwde
or
hlt
mov
popf
or
aaa
push
fs
movaps
pop
push
jmp
jne
mov
xor
or
icebp
xlat
sub
clc
loop
in
dec
and
xchg
fidivr
or
xchg
cli
(bad)
js
mov
(bad)
scas
add
rol
repnz
xchg
icebp
je
xor
ds
cli
in
rcl
aas
push
aad
sar
cmp
inc
and
(bad)
and
retf
clc
movs
add
lds
xchg
pusha
jo
xchg
inc
loop
xchg
mov
cmp
inc
pop
out
cmps
addr16
or
and
mov
xchg
pop
xor
call
sbb
ss
pop
aad
pop
jbe
pusha
mov
vaddss
add
or
and
sbb
mov
cwde
jnp
popa
pop
fwait
cmps
push
and
ins
ja
cmp
movs
push
(bad)
mov
ss
(bad)
cmp
out
adc
mov
inc
(bad)
push
scas
cmp
jge
cdq
rol
ds
int
xchg
ret
pop
(bad)
mov
mov
mov
jecxz
push
push
int3
push
dec
xchg
sbb
(bad)
push
cmp
adc
jnp
scas
lock
jg
sbb
ins
push
add
movs
in
clc
xchg
test
xor
and
xchg
xchg
cmps
mov
pop
lods
js
mov
repnz
test
xchg
scas
mov
shr
jne
mov
cmp
loop
mov
dec
retf
shl
push
jmp
sbb
cdq
je
outs
out
stos
dec
fidiv
jle
inc
(bad)
cmps
jl
jnp
cdq
bound
test
jle
cs
lea
shr
xchg
mov
cmps
pusha
imul
cld
icebp
add
fldenv
mov
xor
cmc
repz
inc
mov
xchg
cs
inc
or
fild
mov
mov
mov
mov
retf
mov
lds
mov
add
jp
xor
shr
cdq
mov
sbb
mov
icebp
retf
jecxz
sub
nop
jo
es
pop
push
jbe
adc
gs
(bad)
icebp
and
sub
aaa
dec
dec
xchg
mov
clc
inc
rcr
test
xchg
dec
fstp
push
enter
addr16
adc
lods
and
jmp
ret
push
fwait
xchg
push
mov
data16
popf
scas
sbb
hlt
push
sar
into
sti
ror
(bad)
and
add
leave
jnp
mov
xor
nop
popa
aam
jecxz
push
std
out
xlat
jb
ficom
out
cmp
push
mov
mov
adc
stos
jmp
or
xchg
lods
pop
or
push
or
fs
cmps
sbb
jno
sahf
popf
push
push
lods
inc
xchg
xchg
or
cmps
test
movs
push
jcxz
xlat
push
adc
mov
jecxz
and
stos
mov
out
jmp
jmp
mov
sbb
ins
dec
push
push
push
out
push
lea
dec
mov
fs
sbb
jbe
mov
mov
mov
pop
call
in
xor
xor
add
push
test
daa
cmp
dec
pusha
inc
dec
sub
ret
xor
xchg
stos
sbb
push
xor
xor
js
cmp
ret
aam
clc
adc
outs
sub
jecxz
in
pusha
test
in
lods
sub
sbb
mov
loope
mov
inc
jl
add
arpl
mov
movs
enter
mov
stos
adc
sbb
pop
outs
sub
sub
call
jnp
bound
mov
push
iret
fwait
cmp
add
mov
add
push
not
or
jbe
jle
enter
lock
(bad)
pop
sub
lea
dec
push
daa
or
xor
jns
cmp
mov
loopne
jbe
mov
imul
les
dec
das
popf
pop
push
movs
mov
mov
mov
mov
int3
out
int
cld
add
adc
std
fmul
clc
or
pop
push
inc
sti
fucomip
sbb
aaa
push
retf
lock
je
pop
popf
pop
rol
dec
push
or
jno
outs
cli
neg
xchg
jp
sub
out
push
rdtsc
inc
nop
adc
mov
repnz
retf
inc
jns
jmp
out
lods
call
jmp
inc
mov
xor
jbe
daa
out
xchg
int
ds
pop
xor
rep
jae
fs
cmc
fdivr
xchg
ins
or
arpl
adc
xchg
mov
jb
inc
clc
mov
dec
popf
jno
jg
push
repz
cdq
fwait
sbb
xchg
ja
call
add
sub
ins
jne
jnp
push
xchg
jmp
mov
mov
or
cmp
out
jae
mov
lahf
dec
cwde
fbstp
jle
and
icebp
jmp
and
mov
xor
sbb
and
inc
(bad)
call
mov
sub
and
test
repnz
cmp
pop
rcl
test
or
sbb
sub
xchg
push
pusha
dec
jo
cld
out
push
cmps
test
or
repnz
mov
adc
ror
dec
(bad)
idiv
dec
sub
loope
mov
aad
sub
or
adc
fld
fdivr
sub
pop
mov
inc
test
les
push
cdq
pop
lods
add
loop
mov
scas
cs
xor
lods
outs
aaa
add
inc
in
in
inc
iret
iret
xchg
sub
adc
jge
mov
test
int
std
aas
cli
xor
mov
fidiv
inc
scas
sti
inc
fimul
test
jns
dec
pop
mov
cmp
jl
cld
jns
sub
mov
call
add
mov
mov
psllw
cmp
imul
mov
(bad)
std
push
data16
nop
pop
cmp
addr16
xchg
xchg
xor
(bad)
leave
outs
xchg
xor
clc
sbb
into
mov
(bad)
cs
adc
sub
xchg
xchg
mov
mov
mul
push
or
lods
sbb
out
jl
xor
sub
xor
dec
es
or
mov
sub
rol
jno
sub
mov
pop
fisub
jp
lods
nop
sbb
xor
mov
call
jmp
out
sub
or
xor
mov
in
inc
jecxz
adc
xor
enter
xchg
mov
dec
sbb
popa
mov
dec
fwait
arpl
stc
xor
pop
cmp
fdivr
or
mov
mov
aam
out
(bad)
or
xchg
shr
(bad)
and
scas
mov
cdq
adc
in
leave
pushf
movs
adc
(bad)
pushf
inc
pop
hlt
mov
mov
or
mov
fs
jns
dec
pop
pop
xchg
mov
push
mov
add
ror
fs
adc
pop
aas
sti
adc
stos
loop
xchg
dec
jb
jg
xchg
pop
bound
mov
and
cmps
sub
mov
pop
inc
push
push
loope
js
ins
iret
or
int3
mov
lods
mov
dec
mov
mov
jmp
addr16
sub
pop
inc
xor
mov
jg
cmp
das
xlat
retf
dec
adc
sti
adc
push
neg
push
or
xor
sub
retf
jl
in
push
(bad)
aam
mov
in
xlat
push
stc
jne
(bad)
stos
ins
add
dec
cwde
cmp
pop
lds
pop
sub
mov
dec
jg
sub
push
aad
mov
cmp
cmps
push
or
fimul
stos
cdq
inc
xor
mov
pop
xchg
imul
(bad)
inc
xor
cmp
add
push
add
jge
popa
add
popa
scas
(bad)
cmp
mov
push
xor
xchg
retf
cmp
sub
loop
dec
lahf
and
gs
xchg
push
in
mov
sbb
test
mov
test
pop
sti
push
inc
and
xchg
jecxz
or
retf
fidiv
aad
or
fidiv
add
jmp
push
sub
call
jmp
fstp
inc
push
fmul
sbb
dec
sbb
push
inc
(bad)
rcr
js
inc
out
popf
mov
sub
jl
dec
mov
adc
and
and
mov
or
sbb
jmp
hlt
adc
add
dec
repz
pop
or
xor
inc
lea
ret
mov
mov
iret
div
pushf
sub
out
dec
mov
inc
jae
inc
xchg
icebp
fistp
jns
test
pop
xor
shl
stos
call
sub
ficom
test
push
out
scas
sti
icebp
inc
push
ds
and
add
or
call
jle
lea
sbb
ins
retf
nop
push
dec
fldenv
xchg
dec
mov
icebp
loope
aas
fwait
stos
leave
adc
push
mov
cmps
imul
popa
push
push
xchg
mov
mov
fbstp
adc
push
push
leave
es
(bad)
sahf
shl
not
cld
shl
sbb
xchg
popa
jecxz
neg
pop
jbe
inc
push
mov
xor
and
dec
jl
js
(bad)
fmulp
sti
jle
mov
mov
and
ficom
dec
fs
pop
push
shl
add
cwde
cdq
cdq
xor
cli
mov
sbb
retf
and
pop
jnp
fimul
hlt
mov
push
or
mov
xor
outs
dec
cwde
pop
jmp
addr16
rcl
fs
repz
lea
pop
imul
sahf
arpl
fnstenv
fmul
xor
add
or
gs
xor
jne
xor
jmp
jo
jo
ins
sar
pop
retf
mov
jo
sbb
adc
js
adc
pop
dec
mov
es
enter
movs
push
add
outs
mov
xchg
push
fistp
xor
sub
xchg
add
pop
mov
add
je
lahf
icebp
xchg
fcom
mov
add
jbe
mov
or
popf
ins
mov
xchg
dec
(bad)
or
in
mov
fldcw
push
sbb
xchg
push
jge
xor
stos
repz
cmc
pop
in
or
sahf
lock
int3
xchg
dec
sbb
addr16
mov
(bad)
mov
push
fdiv
cmp
mov
pop
cmp
mov
sbb
in
pushf
inc
shr
cmp
sub
xor
mov
dec
cmp
xchg
ins
dec
shl
ds
and
pop
and
ds
loop
mov
push
popf
sahf
xchg
retf
enter
xchg
dec
fcmove
call
dec
mov
loop
push
xor
dec
in
lods
push
ret
dec
pop
mov
adc
add
fiadd
adc
hlt
sbb
sbb
clc
or
dec
sbb
fwait
pop
bound
addr16
xchg
push
lds
out
cmp
inc
cdq
push
push
sti
push
stos
add
aas
cmp
xchg
fwait
sbb
sbb
pop
test
and
int
mov
pop
pop
popa
cs
(bad)
imul
enter
sub
ins
mov
push
outs
mov
mov
xor
aam
fwait
ds
push
ins
xchg
call
add
add
jp
cmp
cld
mov
sub
test
inc
mov
fdivr
retf
std
retf
lahf
mov
xchg
imul
jne
loop
mov
inc
xor
fnstenv
sub
call
popa
xor
jbe
int
lea
xor
sbb
and
(bad)
aas
icebp
xor
test
or
mov
outs
loope
dec
jnp
stc
ret
mov
jo
mov
ror
mov
inc
nop
lds
test
or
sbb
scas
mov
into
mov
jno
sti
out
sub
leave
hlt
and
xchg
cmp
jl
out
nop
jg
in
(bad)
xor
xor
call
dec
cld
push
cmps
enter
mov
cmps
or
addr16
stos
jl
inc
push
imul
aad
cmps
mov
test
pop
imul
rcr
gs
jb
or
pop
xchg
inc
dec
movs
pop
ss
adc
pop
cdq
in
gs
mov
pushf
cmps
xchg
addr16
jae
adc
mov
cmc
or
fdivr
pop
aas
fadd
pop
jb
jmp
sub
sub
dec
lods
and
pop
add
or
mov
lods
or
mov
jge
jmp
dec
xchg
push
rol
out
sar
sahf
fldenv
inc
mov
push
add
mov
and
aam
stos
pop
repz
pop
test
retf
ret
sbb
(bad)
stc
cwde
mov
xor
imul
rol
push
cmp
cmps
(bad)
rcr
and
push
adc
mov
xchg
push
dec
jge
movs
mov
and
adc
adc
inc
sub
(bad)
clc
xchg
aad
rcr
mov
push
jecxz
call
dec
push
dec
loop
ja
jmp
push
hlt
dec
jmp
pop
test
pop
out
cld
hlt
int3
aas
push
mov
push
sub
adc
nop
inc
pop
xchg
leave
xor
mov
fs
shl
mov
cwde
mov
mov
add
in
jns
in
(bad)
mov
or
or
js
mov
add
nop
jne
out
jle
adc
mov
call
cwde
ret
jl
sbb
stc
adc
fimul
xor
pop
jb
(bad)
pusha
sbb
xor
sub
push
rsm
cmp
push
jge
arpl
aad
mov
mov
or
pop
cwde
not
push
ret
jl
(bad)
sbb
mov
inc
sahf
in
jne
sar
test
ja
mov
cmps
jno
cdq
ds
in
push
dec
push
push
dec
ret
mov
pushf
das
in
xchg
mov
stos
push
cmp
xor
idiv
dec
jmp
cmps
sar
inc
mov
mov
sbb
jle
fwait
cmp
mov
loop
into
inc
or
sahf
aaa
jl
call
ret
lea
shr
add
adc
inc
pop
push
or
cmps
pop
adc
scas
dec
and
sub
ret
jne
stos
sub
loop
mov
rol
xor
xchg
test
movs
loopne
mov
mov
lods
push
das
icebp
jno
jge
(bad)
sbb
push
into
lods
(bad)
jge
imul
inc
int3
adc
fild
dec
adc
jne
imul
push
inc
out
lea
or
dec
into
mov
push
pop
dec
pop
in
aam
(bad)
int3
loope
lods
xchg
test
mov
mov
adc
movs
and
call
fbstp
or
mov
xor
outs
pop
mov
into
pusha
xor
test
adc
push
xchg
jge
cmp
mov
jecxz
clc
push
cmp
aad
push
adc
xchg
adc
jge
out
stc
inc
pushf
enter
jg
out
fidiv
cmc
enter
push
mov
jno
loope
mov
inc
js
cli
(bad)
(bad)
lahf
arpl
cmp
movs
mov
out
cmc
fidiv
jecxz
cld
push
loopne
push
call
xchg
xor
scas
ins
rol
jnp
xchg
aaa
retf
out
dec
and
cdq
or
cmp
cmp
or
cmc
dec
sub
stos
adc
add
mov
pop
push
mov
jp
fwait
inc
mov
xor
sub
test
mov
inc
sbb
pop
mov
pop
jne
into
and
popa
push
test
cmp
xchg
sti
inc
cwde
push
cmp
dec
outs
inc
imul
add
xchg
adc
cli
out
shl
and
sub
movs
add
cld
dec
dec
mov
fwait
mov
adc
jnp
lods
dec
mov
fisttp
mov
cwde
or
jns
mov
and
sub
pop
js
or
loopne
imul
mov
je
ins
adc
pushw
inc
iret
and
pushf
outs
int3
lock
jno
push
fisubr
retf
repnz
xor
data16
mov
mov
mov
mov
pushf
pushf
jmp
les
loop
stc
imul
or
fistp
lods
fwait
retf
mov
(bad)
test
jg
fild
inc
xchg
popa
or
cwde
add
enter
in
pop
xchg
icebp
pop
dec
pop
(bad)
xchg
popa
mov
inc
jnp
ret
jb
sti
or
add
cmp
int
arpl
(bad)
inc
pop
or
jnp
xchg
or
mov
xor
pop
pusha
les
imul
mov
dec
push
xor
sbb
ja
mov
and
push
cs
jp
fiadd
cwde
int
pop
idiv
dec
clc
aam
mov
mov
outs
dec
stc
cmp
outs
leave
xchg
mov
or
add
(bad)
fdiv
repz
dec
loop
cmc
pop
in
sahf
test
lods
mov
fisub
cmp
inc
mov
shr
shr
std
or
mov
stos
mov
loope
(bad)
mov
scas
xchg
push
cmps
xchg
add
out
sbb
aaa
jbe
in
imul
push
stc
mov
adc
mov
add
pop
popf
inc
stos
sub
fs
les
sbb
mov
out
scas
cmp
rol
loope
xor
sub
fcomip
shr
loope
dec
in
sub
mov
cmp
add
(bad)
test
icebp
movs
inc
outs
out
imul
jnp
lods
jmp
sahf
cmp
enter
pop
int
mov
dec
scas
add
icebp
mov
cmp
mov
mov
jle
int
mov
jle
adc
dec
push
ja
(bad)
xor
lods
lock
pmaddwd
ficom
test
ss
dec
dec
push
addr16
aas
test
hlt
mov
xchg
jmp
pop
jl
add
pop
test
xchg
dec
bound
sbb
mov
dec
pop
gs
cmp
hlt
nop
int
fs
sbb
punpckhdq
aas
push
int
sub
mov
shl
ins
jae
inc
ss
(bad)
jae
mov
and
push
inc
cld
repnz
popa
pop
pop
inc
inc
mov
ins
out
jb
dec
hlt
mov
cmp
lock
ret
(bad)
data16
mov
mov
ins
popa
cmp
pop
call
push
dec
inc
repz
rol
adc
jbe
or
inc
xchg
sub
push
dec
data16
mov
arpl
add
test
cmp
xor
das
stc
mov
xchg
sbb
call
push
call
int3
imul
jecxz
mov
fdivr
cwde
push
icebp
punpckhbw
imul
inc
add
jge
cmp
and
fsubr
clc
(bad)
push
pop
push
adc
daa
and
pop
jge
ret
push
jnp
xor
push
es
shl
adc
int
sbb
push
daa
pop
xchg
push
adc
addr16
(bad)
arpl
(bad)
jne
sub
pop
(bad)
mov
mov
adc
inc
(bad)
loop
clc
ss
adc
jp
pop
xlat
dec
jns
adc
sbb
jbe
shl
pop
int
mov
ins
xchg
or
lods
jg
adc
clc
jp
or
cld
pop
aad
sub
lds
iret
gs
xchg
ja
(bad)
inc
dec
add
(bad)
in
sub
dec
nop
test
pop
xchg
mov
xor
outs
sbb
addr16
xchg
jecxz
cmps
(bad)
and
add
test
repz
or
(bad)
jns
ret
out
jno
enter
dec
out
dec
rcl
or
in
push
repz
jmp
sbb
lahf
and
jo
sbb
xor
ret
lahf
cmp
in
pusha
jne
clc
push
xchg
mov
sbb
test
aad
mov
cli
push
fsub
(bad)
mov
xlat
rcl
stos
pop
fcmove
jmp
jmp
mov
ds
movs
push
fnstcw
mov
jmp
cld
and
das
jbe
loope
sub
dec
add
sbb
fadd
mov
mov
test
and
inc
fdiv
xchg
sbb
inc
mov
cmp
pop
in
and
lahf
adc
and
lds
push
outs
sbb
xor
dec
jecxz
xor
jmp
mov
or
or
in
add
ficomp
pop
shl
adc
cmps
sbb
pusha
pop
or
sbb
nop
int
sub
push
int3
lods
je
ret
ficomp
imul
cwde
int3
jo
aas
js
cmc
js
in
cmp
or
imul
scas
lea
jne
mov
std
lds
jecxz
retf
push
dec
call
call
mov
enter
cmp
jl
sub
(bad)
sub
cmp
mov
xchg
enter
pushf
clc
adc
pop
pop
scas
push
push
sbb
fwait
mov
push
cs
mul
xchg
push
jle
jmp
out
lods
daa
adc
rol
test
pop
or
mov
repz
aas
add
out
and
push
cdq
stos
mov
cmp
or
sub
pop
and
dec
mov
sub
jae
dec
adc
dec
ja
sbb
cli
sbb
or
fadd
pushf
pop
movs
test
cmc
in
daa
lods
inc
cwde
cmps
cmp
jecxz
retf
imul
ins
mov
jmp
mov
clc
and
xchg
push
add
cmp
and
push
inc
mov
in
aam
cmc
cmps
ja
dec
jg
retf
mov
cli
mov
mov
mov
mov
pusha
imul
mov
lods
push
push
dec
inc
(bad)
and
(bad)
retf
adc
scas
push
inc
movs
xor
sbb
mov
jno
inc
mov
repz
cmp
inc
dec
xchg
cmp
ss
mov
fs
outs
push
or
xchg
pop
push
popa
and
pop
push
fs
cmp
xor
mov
jo
sti
jmp
inc
fs
jp
jp
ds
test
sub
xchg
cmps
(bad)
sbb
sbb
xchg
and
repz
fsubr
lea
fwait
mov
lahf
aad
js
mov
retf
xor
(bad)
cmps
cs
xchg
xchg
push
mov
xchg
sbb
xchg
mov
sub
es
test
xchg
imul
call
jmp
pusha
mov
sahf
jmp
and
fneni(8087
mov
inc
adc
ins
mov
in
fnstcw
rcr
pop
aam
fstp
jbe
mov
imul
das
sahf
mov
pusha
gs
gs
movs
push
or
out
lock
or
popa
loop
adc
and
cmp
(bad)
lods
mov
and
scas
outs
mov
push
shl
jnp
mov
and
cld
repz
add
and
test
sub
and
push
xchg
lods
mov
and
jbe
stos
mov
xor
pop
jmp
sbb
ds
jbe
push
inc
lahf
ins
push
ins
data16
mov
call
jmp
dec
je
loop
(bad)
(bad)
dec
(bad)
fs
(bad)
mov
push
push
addr16
mov
xor
aam
jns
mov
mov
mov
mov
lods
bound
sub
shl
inc
sbb
pop
xchg
cmp
inc
stos
(bad)
test
sub
movs
mul
jns
mov
arpl
xchg
rol
pop
int3
inc
loop
daa
and
fs
in
stc
(bad)
int
stos
pushf
loope
stos
adc
movs
cmp
mov
adc
jb
jo
mov
xchg
add
arpl
sbb
outs
cmp
xchg
popa
jae
hlt
pop
sbb
sbb
call
es
jno
lds
jmp
std
xchg
and
(bad)
mov
ds
fwait
test
cmp
(bad)
cmp
jne
clc
in
sbb
dec
sahf
fsubr
mov
push
js
aaa
lods
cs
lock
dec
loop
lods
or
jl
popf
pop
fmul
pop
xchg
into
test
mov
push
pusha
push
xor
je
sbb
dec
sub
sahf
pop
add
movs
xlat
shr
gs
jmp
int3
ror
add
in
sub
sbb
add
and
sar
and
or
mov
pop
mov
or
mov
dec
dec
repz
and
loop
push
jae
mov
push
add
cdq
mov
inc
data16
inc
or
or
xor
out
or
inc
popa
mov
jb
inc
ffree
(bad)
mov
mov
lds
adc
aad
in
xchg
outs
lds
mov
icebp
stos
clc
sbb
sbb
mov
leave
sbb
sbb
aas
fcomi
pushf
lock
lds
ss
pop
push
movs
jg
cwde
xchg
test
js
imul
es
mov
arpl
push
adc
popa
xlat
pop
push
stos
cdq
mov
clc
mov
inc
jmp
cld
hlt
mov
inc
cmps
pop
or
mov
or
sti
mov
lods
mov
xchg
fld
inc
xor
in
in
loopne
imul
loop
pushf
cmps
pop
push
sbb
lock
xchg
cmp
jecxz
cmps
push
cmp
and
mov
stos
repnz
lahf
or
push
mov
mov
xchg
or
ret
or
xchg
ins
pop
mov
mov
push
cmp
hlt
in
xor
lock
add
xchg
(bad)
je
jle
or
int
stc
fcmovnbe
clc
push
sbb
sbb
aam
xlat
inc
inc
add
call
xchg
gs
add
jp
loopne
ss
lds
jne
out
mov
or
jo
lahf
bnd
maskmovq
idiv
mov
adc
pop
cmps
push
out
xor
pop
sbb
retf
icebp
cmp
movs
push
dec
frstor
(bad)
je
xchg
clc
cmc
cmp
dec
lods
sbb
out
sbb
adc
in
out
(bad)
inc
shl
(bad)
xor
test
sub
movs
inc
dec
(bad)
mov
and
sub
mov
(bad)
retf
jp
aas
mov
iret
xchg
aaa
push
jge
stc
mov
je
and
lods
and
cmc
sahf
pop
(bad)
cmp
xor
jge
dec
dec
fdivr
mov
mov
in
out
xor
push
jl
test
ja
dec
sbb
cwde
push
rcr
out
mov
mov
jl
jo
mov
inc
mov
stos
adc
push
ret
test
pop
push
cld
xor
cmp
jnp
mov
fstp
xor
jnp
shr
push
xchg
dec
sub
sbb
mov
mov
lahf
adc
popf
mov
mov
jb
ficomp
sub
lock
and
inc
push
or
pop
xchg
fist
hlt
hlt
aam
mov
scas
fild
repz
vucomiss
mov
fldcw
mov
push
inc
movs
repz
xchg
adc
daa
sahf
fstp
repz
cwde
sbb
or
jmp
in
sar
jmp
ss
leave
test
jmp
ret
push
test
xor
dec
mov
push
sbb
mov
out
xchg
movs
ret
sbb
(bad)
std
sub
pop
arpl
div
sub
mov
add
jg
mov
jne
push
outs
adc
lds
dec
mov
fisubr
inc
mov
inc
xchg
repnz
div
push
sub
cmp
jmp
push
leave
adc
or
rcr
and
jmp
cli
enter
mov
pusha
mov
or
mov
loopne
into
cmps
mov
cdq
xor
sbb
retf
inc
mul
xchg
add
aas
inc
and
jle
sub
int
xchg
push
and
or
std
jno
dec
icebp
xor
repz
xor
pop
stc
das
ins
lea
into
jo
mov
enter
sub
ret
xchg
lods
(bad)
icebp
add
aam
mov
or
inc
aas
jo
out
add
dec
mov
cmp
jbe
dec
pushf
iret
push
popa
(bad)
add
sub
sbb
leave
mov
cmp
sub
clc
and
jmp
test
mov
xor
sbb
aam
push
xor
(bad)
adc
out
jp
mov
aam
pop
dec
out
retf
(bad)
mov
fst
mov
mov
dec
add
mov
lds
sub
scas
call
pop
bound
das
mov
xor
lods
push
cdq
mov
popa
arpl
or
push
pushf
outs
(bad)
xor
pop
dec
jp
xor
ds
gs
and
(bad)
out
inc
rol
cmc
and
(bad)
xchg
xchg
pop
cmp
mov
dec
mov
and
pop
inc
push
leave
daa
retf
loope
cmp
mov
mov
es
clc
adc
icebp
mov
int3
mov
test
sub
or
xor
int3
mov
icebp
ja
ins
push
sbb
sub
inc
ins
push
and
test
mov
je
fwait
dec
add
push
mov
icebp
xlat
ins
dec
cmp
pop
mov
and
mov
imul
jnp
mov
sub
daa
mov
or
sahf
sbb
imul
sub
je
loop
mov
dec
inc
fiadd
jb
outs
rol
stos
add
and
mov
dec
sub
sub
vmovntpd
xchg
pop
and
jp
jl
lods
rol
sub
lods
xor
sbb
(bad)
xchg
push
jmp
and
mov
addr16
jo
sbb
dec
test
in
push
repz
push
mov
outs
mov
(bad)
stos
mov
jmp
cmp
stos
(bad)
cli
or
fidiv
call
xchg
jmp
data16
mov
xor
sub
(bad)
and
fwait
mov
repnz
add
ins
(bad)
js
push
movs
add
es
xchg
and
cmc
push
rcr
test
mov
mov
out
xor
sub
mov
repnz
fisttp
rcr
sbb
(bad)
pushf
jns
xor
jecxz
or
retf
in
pushf
inc
retf
std
adc
pop
sub
(bad)
icebp
sbb
mov
add
(bad)
sub
jp
cmp
sub
or
mov
pushf
jmp
fxch
sub
xchg
outs
adc
cld
push
test
push
loopne
mov
sar
test
enter
pop
xor
pop
sar
nop
daa
retf
outs
icebp
or
in
(bad)
inc
in
and
mov
mov
jg
dec
mov
jmp
rcr
fdivr
bound
jle
dec
data16
xchg
cdq
icebp
lahf
mov
or
dec
lds
cmp
lods
push
jae
fdiv
adc
sbb
dec
into
and
mov
out
xlat
icebp
jge
jge
adc
movs
inc
mov
or
cmp
pop
xchg
in
icebp
retf
je
cmp
int
dec
mov
pop
nop
lock
imul
jmp
cs
dec
or
xchg
(bad)
clc
push
mov
adc
xor
xor
jae
mov
test
inc
jp
xchg
popf
test
ret
fistp
fldenv
pop
jbe
inc
nop
lods
icebp
outs
sub
cmp
pop
sbb
jo
addr16
dec
or
mov
ror
(bad)
movs
out
cdq
dec
xor
scas
enter
into
sub
inc
(bad)
dec
pop
out
inc
inc
repnz
stos
dec
frstor
cmp
dec
scas
fistp
lods
pop
pop
addr16
lds
jnp
add
or
sub
mov
out
(bad)
faddp
xlat
not
pop
mov
out
pushf
enter
mov
push
push
out
lea
test
fwait
sub
xchg
loopne
in
lods
xchg
push
adc
or
call
sar
stc
mov
mov
mov
push
dec
xchg
fisubr
rol
repz
dec
fs
sbb
and
imul
stos
mov
int
jo
pop
pop
adc
loopne
xor
shr
pop
sub
scas
cmps
jge
mov
(bad)
or
mov
int
push
jae
cmp
hlt
loopne
sub
daa
mov
or
mov
pop
(bad)
jp
es
fisub
out
pusha
pop
add
cmp
sub
rol
xchg
pop
sbb
mov
or
jnp
hlt
push
fwait
rcr
adc
test
popf
mov
mov
add
cmp
addr16
dec
out
(bad)
(bad)
cmp
and
cs
sub
push
jbe
sbb
call
dec
jge
icebp
pop
jmp
jmp
or
jle
adc
push
psrld
int3
ins
shl
cmp
and
xor
add
cmp
test
cmps
pop
lock
add
or
rol
sbb
sbb
or
test
cli
cmps
adc
and
out
sbb
jle
int
test
mov
xchg
mov
mov
jnp
or
and
push
mov
mov
repz
std
outs
(bad)
mov
out
xor
es
out
xchg
cmps
ror
movs
mov
push
loope
push
push
jmp
push
repnz
call
int3
dec
repnz
popa
mov
mov
rcl
sar
rcr
ss
mov
out
sbb
xchg
enter
and
jno
or
dec
sub
pop
add
ret
shr
(bad)
test
sar
or
dec
jmp
inc
loop
jns
and
push
fwait
ret
movs
fcmovu
dec
jne
in
daa
lea
aad
ret
out
pop
mov
xchg
mov
inc
ret
push
mov
fs
ja
seto
sbb
outs
xor
je
mov
shr
sbb
int3
inc
mov
sbb
mov
jl
jno
mov
enter
cld
jo
push
cmp
add
repnz
call
push
sub
out
xor
and
cwde
push
lahf
lods
in
cmps
push
xchg
mov
es
imul
cwde
mul
retf
and
outs
or
scas
mov
inc
out
cmp
push
nop
outs
inc
in
push
nop
xchg
dec
call
and
jae
loope
mov
(bad)
in
mov
shr
in
arpl
daa
clc
loop
frstor
sbb
xchg
(bad)
mov
mov
and
call
fld
cmove
mov
inc
push
outs
mov
sub
sbb
std
std
xor
repnz
imul
mov
jmp
pop
jg
call
pop
push
leave
hlt
and
sahf
mov
cmp
inc
je
pop
movq
arpl
dec
and
push
sub
movs
mov
jne
push
sbb
aas
lock
mov
jns
data16
xchg
enter
test
push
mul
cmp
xchg
inc
lods
lods
rcl
ds
pop
dec
sub
in
inc
fnstcw
sahf
cmp
push
add
ja
(bad)
xor
cld
sub
push
call
call
sub
out
jo
xchg
loopne
or
shr
and
ja
pushf
loopne
sar
out
sar
adc
mov
xlat
test
leave
int3
fwait
jb
cmp
aaa
cmps
lds
mov
dec
add
jle
cli
in
fistp
(bad)
dec
ret
fcomip
inc
shl
call
(bad)
sbb
cmp
in
mul
test
iret
pop
fdivp
sub
inc
xchg
fst
push
push
jbe
mov
xor
popf
scas
lds
push
jg
mov
das
repz
dec
les
xchg
popa
push
xchg
sub
jo
xor
lds
int3
bnd
pop
ds
neg
push
ud0
dec
sub
xchg
sbb
inc
mov
push
fld
xchg
jnp
jns
cmp
mov
dec
and
mov
mov
iret
retf
jmp
adc
xor
loop
(bad)
sub
aaa
pop
call
jmp
mov
mov
pop
shl
dec
sub
and
xor
mov
repz
mov
fsub
pop
inc
push
mov
icebp
jb
test
mov
pop
popf
pop
push
inc
mov
and
xchg
rcr
ficomp
repnz
xchg
jae
mov
loope
jge
mov
inc
sub
ins
mov
jmp
jmp
imul
or
imul
jns
pop
retf
sbb
sbb
jg
int3
jp
jne
movs
das
repnz
fild
repz
sahf
ret
jns
sbb
test
pop
sahf
les
mov
inc
push
push
pushf
sbb
leave
sbb
neg
sbb
aas
call
pop
cmp
inc
scas
aad
scas
push
mov
sbb
xchg
out
stc
cmp
xchg
cwde
xchg
retf
outs
test
sbb
lods
push
inc
adc
jp
adc
(bad)
jg
mov
add
push
adc
and
push
call
aaa
mov
sbb
push
mov
movs
fisttp
push
(bad)
jno
cwde
add
adc
and
das
add
cmc
(bad)
jle
cmp
and
cmp
outs
fdiv
inc
jg
loop
mov
sub
iret
add
push
push
mov
int3
jg
(bad)
cli
mov
test
(bad)
pop
pop
mov
push
loopne
aad
out
inc
rcl
das
les
mov
loop
inc
pushf
jmp
sbb
std
xchg
mov
aas
test
cli
sbb
sbb
jno
mov
(bad)
fwait
idiv
sbb
adc
adc
mov
repnz
popf
loope
enter
or
into
sub
xchg
ret
adc
data16
ja
das
mov
int
push
stos
std
lea
movs
ss
jno
pop
out
lods
inc
push
jno
test
popa
int
mov
(bad)
pop
and
adc
pop
sbb
les
xor
scas
or
mov
sar
clc
loop
mov
sbb
fmul
lahf
mov
jns
sbb
gs
or
push
in
mov
test
imul
jp
sar
es
dec
add
pushf
shl
dec
or
and
lock
jmp
ins
mov
or
fisttp
test
sub
mov
js
js
pop
retf
scas
hlt
xlat
push
xor
jae
sub
inc
movs
or
lods
push
and
inc
scas
xchg
ret
in
fucom
in
adc
pusha
test
fld
cmps
popf
stos
popa
adc
(bad)
xchg
mov
sbb
push
adc
int3
sbb
adc
and
dec
inc
stos
jg
js
mov
xchg
jo
inc
out
sbb
mov
icebp
adc
repz
popa
xor
xchg
pop
out
inc
stc
cld
mov
ficomp
inc
popf
(bad)
pop
jo
or
sbb
adc
or
aaa
adc
test
jge
mov
xchg
sub
inc
jl
ret
out
fsub
hlt
xchg
mov
dec
ss
dec
arpl
call
ret
xchg
mov
ds
loop
movs
xchg
daa
mov
push
out
adc
je
scas
and
fidiv
or
cmp
mov
mov
mov
fstp
pop
xchg
popf
pop
and
das
lods
aad
lea
push
xchg
inc
dec
jp
sar
pop
push
outs
shl
mov
cmc
sbb
cmp
iret
pop
mov
push
xlat
(bad)
out
sbb
lahf
ja
jmp
dec
loopne
xchg
cmp
retf
sbb
xor
test
in
(bad)
ds
in
in
(bad)
test
stos
or
jb
or
aas
(bad)
out
lock
lea
fcomp
scas
jl
jne
adc
lods
adc
push
mov
xchg
cmp
imul
pop
imul
pop
push
pop
cwd
daa
and
js
enter
neg
push
rol
jo
in
icebp
push
push
cs
mov
push
call
or
pop
fst
sti
push
enter
stc
jne
pop
mov
shr
sub
sub
das
sti
pusha
ror
ins
mov
cmp
call
in
mov
pop
int
jg
jmp
rol
imul
jmp
push
mov
lds
xchg
mov
aam
or
sub
andnps
add
mov
cs
mov
and
push
pop
stos
push
idiv
(bad)
and
xlat
imul
sub
inc
pop
movs
push
push
sbb
aaa
shr
(bad)
cmp
lock
xchg
sub
retf
sbb
repz
adc
push
cmc
or
pop
(bad)
dec
jne
iret
pop
or
push
les
icebp
or
pop
shl
cli
push
ss
cmp
mov
adc
fs
mov
jbe
(bad)
inc
mov
inc
pop
mov
xchg
repnz
jl
in
inc
dec
mov
mov
inc
sub
addr16
stos
sub
sar
ficomp
leave
lea
outs
jne
adc
mov
xor
(bad)
adc
leave
sub
sub
dec
xchg
jmp
or
rol
or
ins
xor
jmp
cmps
cmc
mov
mov
imul
or
jno
adc
dec
lods
scas
jg
loope
gs
mov
adc
mov
sahf
adc
clc
mov
jp
retf
mov
mov
ins
mov
lods
push
pop
mov
cmp
or
jle
arpl
mov
and
jle
and
cmps
push
jp
fwait
xor
clc
xor
sbb
jmp
fldcw
fcomp
pop
hlt
jecxz
and
mov
in
inc
cmps
sub
xchg
lds
sub
sbb
test
cwde
xchg
fist
cmps
stos
leave
xchg
imul
add
les
mov
cmp
xchg
int3
fist
adc
pop
and
push
ret
into
loope
std
retf
loopne
out
lods
adc
clc
rcl
neg
inc
mov
xchg
rcr
adc
mov
or
retf
test
movs
data16
or
out
mov
rol
mov
inc
es
scas
je
in
xchg
and
push
jnp
sbb
cmc
push
inc
cwde
mov
pop
ja
cs
shl
mov
mov
pop
sti
lods
scas
inc
hlt
push
add
xchg
(bad)
shr
mov
xor
cmp
sbb
pushw
adc
pop
pop
int
xor
bound
(bad)
pop
ins
jl
dec
sub
mov
add
mov
bound
cmp
cmp
in
loop
pop
mov
retf
cmp
xchg
adc
in
pusha
(bad)
loope
push
xor
in
aas
pop
push
cmp
and
pop
lea
fwait
outs
xor
inc
mov
cmp
sub
test
in
stos
icebp
clc
fs
push
(bad)
push
fwait
imul
mov
ds
mov
dec
add
sub
movs
out
dec
ror
dec
adc
pop
sub
mov
inc
push
jbe
mov
inc
sbb
ret
sbb
fwait
jb
xor
xor
int3
jle
test
sbb
or
inc
inc
xchg
dec
call
jmp
bound
dec
add
daa
movs
inc
xor
vmovss
dec
dec
ins
adc
inc
and
leave
jo
stos
push
rol
sbb
push
adc
inc
js
imul
jnp
xchg
xor
mov
aad
adc
and
pushf
sbb
stc
push
loope
xchg
mov
push
mov
sahf
push
fisubr
fs
jp
or
jecxz
or
enter
cld
sub
xor
fild
inc
add
jle
push
loope
cmp
xchg
jmp
xchg
xor
sbb
mov
std
xchg
pushf
out
in
repz
shl
call
test
jecxz
nop
cmp
mov
inc
xor
dec
pushaw
push
pop
jno
dec
clc
test
out
movs
in
dec
pop
fwait
mov
lods
retf
xor
inc
lods
mov
jl
cmp
loope
int
dec
and
retf
push
mov
es
test
les
and
xchg
xlat
and
mov
std
(bad)
sbb
jp
sub
mov
sti
or
push
rcr
mov
push
out
jbe
aaa
cdq
jl
add
out
jecxz
sub
jo
aaa
xlat
and
mov
ss
arpl
sbb
mov
out
fmul
push
pop
ins
fbstp
cmc
and
(bad)
cdq
and
movs
repz
add
xchg
push
mov
pop
fcomp
cmps
add
xchg
mov
ret
jle
rcr
add
pop
ret
(bad)
out
ja
imul
adc
fisttp
fdivr
push
fwait
dec
test
sbb
xor
ins
fiadd
mov
mov
imul
addr16
sbb
cmps
outs
push
add
les
ins
sbb
daa
dec
lds
cmps
ret
pop
in
ss
das
mov
rol
jle
lahf
and
nop
ret
and
or
daa
cmp
stos
gs
adc
cmp
std
loope
les
(bad)
pop
neg
lods
sti
dec
sbb
dec
cld
and
or
aas
(bad)
rcl
xchg
fld
(bad)
icebp
lahf
push
pop
or
lahf
dec
inc
mov
add
jno
ror
test
into
test
adc
jmp
lds
fdivr
mov
mov
sbb
icebp
pop
(bad)
mov
xchg
or
lea
dec
sub
aad
aad
das
dec
push
inc
pop
inc
xchg
fld
and
adc
stos
(bad)
jnp
movs
neg
jno
loope
sub
xchg
call
out
rcr
jbe
sbb
add
mov
mov
cmp
xchg
fucomip
jno
dec
add
and
mov
jp
fcmovbe
jp
scas
add
cli
aam
and
shr
js
not
mov
out
repnz
dec
mov
(bad)
repz
psrad
inc
xchg
or
xchg
(bad)
outs
ins
scas
xor
fdiv
inc
sub
test
xchg
xor
retf
loope
sub
outs
mov
mov
stos
pop
and
inc
inc
nop
(bad)
(bad)
adc
out
cmp
iret
mov
ds
sub
sub
lahf
std
mov
cmc
jecxz
or
sbb
push
loop
in
pop
pop
into
cmc
out
inc
retf
and
and
sub
jl
adc
popa
push
mul
cmp
stc
bound
push
cmp
loopne
pop
xor
xchg
ret
dec
push
test
cmp
call
add
and
dec
push
push
(bad)
sbb
xlat
xchg
push
scas
cmc
sub
jno
jle
das
fs
test
mov
pusha
mov
retf
sbb
mov
imul
repnz
adc
pmulhw
cmp
push
pop
cmp
xchg
mul
or
in
and
xchg
mov
xchg
pop
out
cmp
pop
xor
mov
inc
sub
out
jbe
mov
mov
jg
xchg
and
dec
fs
lahf
inc
mov
and
mov
out
aas
cs
std
stc
jmp
push
cmps
imul
xor
push
xor
xor
ret
repnz
mov
ins
xchg
xor
call
push
mov
out
mov
sub
push
sub
into
xchg
in
scas
inc
jnp
fsubr
inc
inc
dec
jmp
jmp
cmp
and
inc
bound
leave
pavgb
add
retf
mov
mov
xor
cmps
les
sub
xor
jns
in
or
pop
push
sub
dec
xchg
mov
das
enter
cmp
call
repz
jnp
frstor
fwait
push
cdq
sub
cmp
adc
mov
xlat
idiv
xor
cmps
dec
cdq
dec
fisttp
cld
test
stos
pop
rol
cld
adc
ja
sub
mov
xchg
shr
mov
mov
popa
fwait
push
das
cmp
add
mov
jp
xor
add
mov
dec
push
cwde
pop
inc
retf
add
fadd
cmp
pop
and
stc
movs
dec
add
lods
ret
cld
aad
mov
icebp
cli
inc
idiv
aas
jb
inc
dec
loopne
jmp
gs
inc
jnp
adc
sub
or
inc
dec
lods
stc
outs
data16
ins
mov
movs
pop
(bad)
std
imul
pop
fsub
mov
ins
lock
call
or
gs
mov
in
add
and
add
mov
push
xchg
stos
mov
(bad)
clc
add
out
rol
ja
lds
pop
shr
test
add
dec
test
add
fild
ror
pop
xchg
xor
cdq
stos
mov
stos
dec
jge
xor
xchg
arpl
adc
lock
iret
int3
iret
xor
add
(bad)
jbe
and
mov
je
push
loopne
mov
or
arpl
add
mov
(bad)
jmp
inc
shl
je
(bad)
scas
pop
test
pop
dec
mov
inc
fcmove
and
dec
ffree
out
push
inc
int
call
push
dec
xor
inc
inc
cmps
(bad)
sbb
mov
stc
test
test
or
dec
jnp
mov
cmp
xor
sub
cmc
in
push
popa
add
mov
pop
sbb
cmp
imul
mov
push
push
adc
cmp
xchg
aad
mov
pop
mov
adc
pusha
cld
ins
mov
scas
cmp
lods
loopne
loopne
dec
xor
or
imul
jmp
xchg
and
and
xor
inc
inc
mov
data16
test
xchg
push
dec
dec
test
mov
gs
aad
cmp
daa
pop
xor
das
dec
pushf
cmc
scas
and
hlt
pop
cmps
add
std
outs
inc
jmp
pop
js
cmp
fadd
pusha
xchg
addr16
push
repnz
sub
lods
stos
adc
push
and
xor
aad
pusha
mov
xchg
sbb
inc
add
push
jg
adc
add
jmp
fdiv
das
fneni(8087
xor
sahf
into
jnp
push
lods
into
(bad)
leave
sahf
inc
pop
sar
scas
stos
sub
lods
xor
adc
(bad)
add
mov
ins
jne
jns
clc
hlt
mov
mov
xchg
jo
clc
jmp
sub
xchg
sub
jmp
out
cmp
stc
retf
xchg
dec
xchg
push
mov
out
icebp
mov
fsubr
loopne
rol
lea
xchg
jle
sub
xchg
fidivr
cmc
out
cld
test
int
pop
idiv
cdq
cli
mov
cmp
test
test
dec
sbb
jb
in
fucom
ficomp
int
inc
cmp
push
in
xlat
mov
cdq
popf
data16
lods
not
mov
jl
sar
stc
or
in
inc
ret
test
jbe
aas
xchg
js
add
fs
mov
xchg
jl
(bad)
xor
data16
push
sbb
push
loope
cmc
outs
pop
in
in
sbb
cwde
(bad)
std
aam
cmp
not
call
xor
mov
pop
(bad)
pop
or
mov
js
shl
shl
inc
cmp
mov
sbb
jg
jns
push
push
xchg
fwait
test
inc
mov
xor
push
add
and
adc
in
xchg
adc
and
shr
nop
outs
out
jno
fucomp
xor
(bad)
ins
pop
retf
push
ss
sbb
dec
cmp
out
or
and
mov
and
mov
pop
in
mov
mov
in
jae
addr16
and
aas
mov
in
cmp
sahf
sbb
push
push
(bad)
xor
cwde
xchg
adc
mov
movs
jge
lods
es
mov
pop
call
adc
in
cmc
xlat
dec
xchg
adc
sub
setae
pop
xchg
mov
outs
aaa
clc
test
bound
ror
pop
pop
rol
inc
sbb
int3
pop
out
pop
in
cmps
pop
jmp
movs
add
dec
and
scas
test
xchg
int
imul
test
xor
es
jmp
xor
and
mov
(bad)
movs
lods
xchg
sub
inc
xchg
inc
push
mov
mov
repz
mov
scas
dec
adc
dec
sub
scas
les
push
inc
mov
pop
jnp
or
hlt
mov
sub
sahf
adc
loopne
shl
sub
outs
fisttp
jae
call
iret
jp
stos
repnz
sub
mov
sub
lds
(bad)
xchg
pop
std
repz
in
dec
fstp
mov
fstp
enter
xchg
adc
or
call
pop
jecxz
cli
loop
jo
dec
loop
add
sahf
mov
imul
icebp
mov
cld
xchg
dec
lock
cmp
jge
ja
fdivr
aam
pop
adc
sub
ds
dec
fidiv
xchg
rcr
daa
mov
cmc
adc
dec
and
mov
ins
in
dec
or
adc
cwde
ss
cmp
jns
inc
pop
or
dec
aad
sub
fld
dec
cmp
(bad)
icebp
fistp
push
loope
inc
mov
daa
sets
movs
outs
cmp
sub
dec
push
movs
xchg
mov
cmovnp
mov
or
sbb
mov
cs
mov
ja
js
fbstp
aad
enter
xchg
in
bswap
push
and
popa
pop
lea
adc
loopne
mov
mov
ror
movs
fsub
jle
js
test
arpl
jl
sahf
jns
enter
adc
sub
outs
push
mov
and
jg
jo
mov
sub
call
or
in
push
or
mov
ins
pop
xor
dec
rol
sub
retf
cmp
push
inc
mov
mov
xor
and
adc
xor
or
cmp
or
sbb
aaa
pop
retf
mov
sub
jge
mov
lahf
sub
xchg
es
and
add
mov
inc
lods
lea
cmp
sbb
in
sub
pop
mov
or
dec
xchg
fwait
push
mul
push
or
adc
ja
mov
sbb
sub
jle
sub
aad
xchg
jl
inc
aam
jb
mov
in
and
jno
mov
test
stc
fsub
push
mov
xchg
bound
push
(bad)
push
jnp
std
int3
movs
sbb
out
scas
or
retf
or
dec
xor
nop
cmp
inc
xor
dec
mov
not
mov
fwait
cli
sbb
in
mov
or
fcomp
add
mov
xchg
mov
ror
leave
fnstsw
fistp
sub
arpl
int3
sub
int3
add
mov
in
fwait
lds
mov
cmp
mov
arpl
pop
push
les
inc
js
hlt
rol
pop
in
sbb
mov
xlat
in
aaa
sub
retf
mov
ss
jne
push
in
ror
jmp
ficom
mov
xor
lods
ja
mov
jmp
dec
push
out
scas
fisubr
mov
mov
or
and
cmp
adc
mov
mov
pushfw
cld
pop
das
mov
xchg
jl
mov
mov
out
sub
mov
xchg
xor
and
pop
adc
sti
aaa
sub
fsub
cs
add
and
fisttp
pusha
mov
sub
dec
(bad)
add
adc
and
(bad)
add
and
mov
lock
aam
(bad)
xchg
call
mov
jnp
dec
(bad)
jmp
rol
mov
movs
sbb
out
lock
jb
(bad)
retf
and
dec
fwait
out
cdq
retf
cs
adc
xor
or
nop
imul
fnstsw
sub
fstp
xchg
fisttp
mov
push
mov
pop
mov
and
jmp
inc
jge
ror
std
call
add
jge
ins
mov
int3
mov
mov
daa
loope
and
mov
out
push
mov
out
cld
mov
cwde
gs
lods
jbe
mov
sbb
inc
scas
fld
ret
xor
test
push
retf
in
and
pop
sbb
out
pop
fsubr
lahf
inc
jbe
xchg
es
sub
dec
and
jmp
pop
add
out
pusha
(bad)
fistp
dec
mov
and
push
mov
lods
imul
(bad)
mov
cwde
or
dec
or
loopne
inc
push
daa
and
in
or
sti
repz
loope
inc
sbb
push
jns
mov
in
es
mov
les
xchg
scas
ds
jp
jno
jge
stos
inc
jle
in
push
out
sbb
pop
push
sbb
outs
mov
adc
xchg
shr
and
movs
stos
pop
add
mov
fs
jge
(bad)
mov
clc
movs
xor
sub
push
sub
pop
push
inc
in
out
stc
aad
push
and
(bad)
shl
enter
xor
int3
movs
jg
push
adc
add
neg
dec
jnp
xchg
adc
adc
cmp
adc
fld
cmps
imul
xor
imul
hlt
mov
jp
mov
adc
fs
cmp
test
and
jbe
mov
push
stos
lea
ret
(bad)
js
adc
push
fsubrp
adc
(bad)
imul
hlt
lock
aad
and
xchg
push
ds
int3
mov
mov
add
xchg
push
hlt
cmp
cmp
dec
push
xor
dec
add
sbb
xchg
dec
pop
idiv
mov
jge
add
and
xchg
popf
outs
jb
retf
push
push
xor
daa
mov
jecxz
div
jo
dec
push
push
retf
mov
inc
inc
inc
hlt
push
stos
xchg
movs
mov
jnp
push
inc
daa
call
in
scas
push
sub
adc
loop
or
mov
sbb
mov
sbb
mov
inc
mov
xor
movs
call
(bad)
jne
loope
pushf
mov
mov
test
shl
mov
imul
and
jmp
mov
mov
mov
xchg
mov
push
cmps
(bad)
cmps
sub
stc
mov
pop
hlt
mov
mov
cmp
mov
mov
sub
push
lods
movs
jo
call
cmps
(bad)
push
int
push
sbb
pop
pop
jmp
(bad)
mov
cmc
imul
pop
aaa
shl
enter
stc
jno
jl
mov
mov
and
push
imul
in
dec
test
xor
or
dec
aaa
loop
push
and
cs
aaa
mov
xor
mov
inc
jno
in
sbb
sti
aad
xchg
mov
jno
sbb
cmp
ror
inc
pop
mov
pop
lds
xor
loopne
into
or
fucomi
mov
pop
fs
(bad)
push
test
add
cmp
into
popf
cld
scas
ds
jle
out
repz
cmc
sub
inc
ret
mov
shr
dec
jae
jmp
lods
stc
adc
sar
sub
jnp
outs
pop
sub
mov
xchg
loop
mov
loop
jmp
retf
sub
jle
inc
not
not
cwde
xlat
jge
pop
cs
iret
(bad)
aaa
mov
jmp
and
dec
adc
loop
dec
out
cmps
push
mov
cli
pushf
and
(bad)
lods
xlat
and
lahf
ins
pop
cld
xor
sub
push
imul
mov
sub
push
add
mov
xchg
movzx
or
out
test
outs
imul
cmp
sbb
mov
rcr
sub
sub
xchg
or
add
pop
test
cmp
inc
mov
mov
mov
std
mov
int
cmp
sub
into
repz
lds
jecxz
cmp
in
pand
icebp
jae
mov
and
shl
jo
sub
jecxz
mov
ss
dec
pop
mov
push
and
adc
popa
daa
stc
neg
cld
add
and
sti
fldcw
lds
add
lods
int3
sub
lods
test
dec
and
pop
das
call
dec
pop
mov
jmp
jb
pop
out
lods
jg
repnz
not
(bad)
call
pushf
inc
xchg
dec
jle
inc
(bad)
push
lds
outs
xor
jmp
pop
cmp
ins
lock
ins
dec
jb
bound
mov
in
(bad)
dec
mov
imul
xor
sbb
push
push
or
mov
daa
pop
cli
xor
sbb
mov
sub
addr16
mov
push
out
xchg
cmp
out
popa
movs
or
inc
call
xor
ja
add
and
add
addr16
ret
out
inc
pop
pop
fadd
jecxz
ror
jp
in
sbb
mov
test
mov
hlt
aad
and
mov
lods
sub
pusha
ret
pop
ss
xor
pop
jno
and
xor
mov
cwde
inc
or
xchg
mov
jle
leave
ss
and
fild
xlat
pushf
in
mov
ds
mov
cli
xchg
pop
dec
inc
sub
mov
pop
pusha
inc
aad
(bad)
jmp
sbb
fist
pop
sbb
test
icebp
mov
cli
aad
and
cmp
lods
hlt
dec
lds
inc
inc
ins
or
shl
out
scas
loope
cmps
mov
sbb
lods
pop
dec
imul
push
lock
fistp
fmul
mov
add
mov
jo
mul
push
mov
cmp
popa
adc
mov
adc
and
cmp
call
push
jge
fsubr
pusha
movs
mov
mov
scas
cmp
mov
pushf
adc
xor
leave
call
mov
mov
or
jge
cli
pop
xchg
cmp
lahf
mov
lea
adc
mov
les
leave
jmp
and
outs
inc
mov
inc
(bad)
mov
pop
cli
or
hlt
cld
push
out
je
retf
lock
aam
mov
pop
xchg
pop
(bad)
xlat
or
sbb
ss
out
int
push
sbb
push
inc
nop
add
movs
daa
mov
push
dec
lds
and
and
in
out
cmp
cmp
sbb
cld
mov
aad
lods
mov
inc
adc
scas
xchg
pushf
sar
dec
je
movs
nop
pop
mov
aaa
xchg
repnz
or
mov
mov
cmp
push
pop
fidivr
scas
xchg
mov
cmp
mov
out
daa
out
popf
shr
out
pop
inc
daa
sub
xor
push
sbb
jb
pop
inc
(bad)
dec
xchg
cmps
pusha
add
or
and
pushw
(bad)
icebp
sub
data16
add
outs
fsubr
or
push
jo
jnp
xchg
mov
lahf
mov
cwde
popf
xchg
out
jg
sahf
push
sbb
popa
pop
lock
sub
out
idiv
push
xor
or
push
cmp
leave
mov
(bad)
cmp
add
int3
cdq
cmps
push
fstp
lds
ins
inc
pop
in
mov
fcom
fisubr
push
sub
movs
mov
or
jae
inc
pop
cmp
inc
scas
jns
cld
add
adc
in
or
sub
inc
movs
pop
mov
fs
js
int
cmp
test
imul
push
sbb
ins
das
test
enter
cdq
push
in
rol
sub
push
xor
das
pop
push
jmp
fs
fstp
cmps
lock
ins
xchg
je
cmp
inc
arpl
aas
dec
jns
pop
into
stos
jmp
xchg
pop
int3
push
loopne
(bad)
ror
fs
shl
xchg
jl
arpl
sub
fiadd
pop
test
pop
rcr
aas
cmps
retf
mov
idiv
lahf
aam
imul
sahf
mov
loop
cmp
pop
(bad)
sub
mov
pusha
pop
dec
xchg
pop
fcom
clc
fisttp
lahf
inc
aas
xchg
jmp
add
ficom
mov
adc
mov
je
jnp
(bad)
mov
pop
pop
sbb
in
pop
(bad)
jle
xchg
int3
jno
jb
add
cmp
lds
xchg
enter
cmp
xor
data16
(bad)
fmul
pop
cli
push
sbb
jmp
test
xlat
push
sub
ret
inc
ss
mov
mov
popf
das
sub
mov
ret
xor
shr
stos
push
sahf
xchg
dec
mul
repz
fbld
sbb
mov
stos
js
ja
enter
aam
popf
cdq
and
rcr
pop
sub
xor
or
outs
jno
pop
ins
push
dec
push
add
inc
fwait
pop
cmps
(bad)
jns
rcpps
lahf
les
stos
stc
mov
xchg
stos
in
out
loopne
jl
xor
mov
mov
mov
sub
pop
jl
mov
outs
mov
retf
leave
(bad)
repz
aam
jp
(bad)
out
fmul
or
mov
pop
clc
pop
inc
push
or
dec
mov
jo
mov
sub
lods
mov
mov
retf
or
(bad)
mov
lea
xchg
dec
lds
lds
stc
push
sbb
fs
sub
inc
dec
add
xlat
mov
lods
daa
xor
sahf
test
fs
cli
push
stos
cmp
movs
ja
out
sbb
and
adc
ficomp
idiv
cmc
jecxz
jge
xchg
repnz
ins
cmp
popf
mov
jo
xchg
shr
mov
lods
stos
repz
adc
sbb
or
test
rol
adc
add
sbb
outs
adc
sub
jno
sbb
add
gs
cmp
mov
mov
dec
dec
push
(bad)
sar
mov
dec
test
dec
sbb
cmp
xchg
cld
push
(bad)
movs
pop
jecxz
out
mov
pusha
sub
loopne
ja
cli
and
push
out
sbb
repz
in
movs
mov
shl
test
ja
sbb
and
adc
xchg
push
jo
arpl
std
in
shr
ret
repnz
pushf
es
mov
dec
sbb
lds
ins
in
imul
inc
aaa
test
out
jns
jp
stc
add
jg
stos
out
retf
xchg
inc
dec
adc
push
dec
enter
out
movs
dec
(bad)
je
aam
adc
xchg
jmp
js
ret
lahf
xchg
push
jge
shl
and
xchg
aaa
xor
arpl
cmps
dec
jle
std
dec
jg
push
cmp
es
mov
ffree
stc
ds
inc
mov
xchg
and
push
sub
xchg
movs
js
sahf
call
nop
and
push
mov
dec
push
sbb
popf
fdivr
jbe
mov
cld
push
mov
fisub
je
js
mov
(bad)
mov
adc
push
in
arpl
test
inc
pop
test
sub
iret
sbb
jge
push
sbb
pop
xor
dec
mov
add
sar
sbb
stc
lods
add
cs
jbe
fst
int
clc
and
clc
sub
cmps
cwde
mov
xlat
retf
ins
cmps
adc
mov
mov
ret
mov
cwde
dec
sub
dec
mov
inc
or
xchg
or
stos
ins
fwait
or
ins
test
bnd
inc
ror
or
or
add
scas
inc
and
inc
push
movs
inc
add
int
(bad)
aam
dec
ret
(bad)
ins
add
mov
js
jbe
lahf
push
cmp
dec
xor
clc
cmp
lahf
xchg
push
pop
pop
inc
dec
and
xchg
mov
add
pop
test
add
inc
push
jb
in
nop
cli
rcl
mov
dec
or
test
inc
aas
and
pop
repz
pop
(bad)
pop
in
add
je
ss
ror
xor
sti
push
out
push
jae
xor
add
xor
push
or
xor
and
lds
jae
sub
ret
mov
or
cmp
(bad)
mov
cdq
repnz
jno
pop
jp
xchg
out
(bad)
jmp
call
cmp
repnz
into
cmc
ret
lea
pushf
add
xchg
neg
jbe
fsubp
int3
loopne
mov
jge
or
lds
loopne
xor
adc
(bad)
stos
adc
inc
test
mov
push
inc
idiv
ins
iret
mov
and
test
add
dec
xchg
adc
xchg
fimul
and
add
mov
jle
jno
fwait
mov
in
daa
xchg
les
push
add
daa
in
ins
add
arpl
aad
in
ja
rcr
repz
mov
popf
xchg
aad
sar
popf
dec
lods
cmp
cmp
scas
sub
and
dec
add
in
push
inc
add
xchg
jae
dec
pop
mov
cmc
pop
mov
loop
in
mov
out
jo
ret
ret
jmp
ror
and
cmps
loope
jmp
jmp
push
fidiv
cwde
mov
sbb
(bad)
jmp
ins
lock
lods
js
xor
and
cwde
dec
scas
jo
outs
jno
adc
shl
adc
outs
cld
daa
icebp
lahf
add
push
xor
sahf
mov
cmc
into
add
cmp
mov
fmul
sub
sbb
xlat
sbb
add
jae
movs
loope
lock
and
pop
stos
sbb
or
outs
addr16
jne
outs
adc
pop
sbb
mov
xchg
mov
test
mov
push
and
mov
movs
xchg
mov
dec
(bad)
cmp
ret
sub
mov
push
push
lods
jne
mov
jle
xchg
fs
mov
or
push
pop
cli
or
fwait
out
les
mov
inc
dec
shl
mov
push
add
les
imul
daa
cmps
jo
lea
stos
cwde
aam
sbb
hlt
sti
mov
ins
call
(bad)
aaa
sbb
mov
jno
mov
push
sub
aad
push
test
dec
sub
fisubr
(bad)
jl
mov
cmp
sahf
or
mov
fwait
adc
adc
mov
sbb
xchg
adc
fwait
and
ds
and
push
sub
push
lea
mov
cmp
mov
jmp
jnp
loopne
bound
lods
dec
cdq
je
les
sbb
test
mov
mov
lods
dec
cmp
aad
mov
mov
(bad)
cmp
pop
mov
xlat
mov
jg
push
jbe
xchg
dec
xlat
mov
iret
cmps
popa
mov
imul
xchg
pop
mov
adc
cld
clc
pop
dec
int
daa
retf
cmps
pop
cmc
pop
add
gs
scas
jecxz
sub
les
test
pop
mov
repz
push
(bad)
inc
xchg
fs
add
jne
lea
lods
and
push
clc
mov
xor
xadd
mov
out
je
or
dec
xchg
and
push
dec
loope
xor
or
mov
leave
(bad)
sbb
and
or
lods
je
inc
jno
retf
cs
test
into
push
fs
push
and
clc
xor
imul
(bad)
mov
sti
stc
cmp
jle
fimul
mov
sbb
sbb
cli
cli
mov
outs
in
inc
dec
xchg
sahf
jbe
test
gs
cmp
test
push
mov
sbb
jmp
stc
cwde
ins
in
xchg
adc
push
retf
pop
arpl
js
jge
pushf
sub
mov
sub
xchg
pop
les
ins
fisubr
sahf
fstp
fdivrp
mov
sub
xor
test
fstp
and
scas
adc
sub
ss
test
std
xchg
repnz
mov
repnz
enter
icebp
call
fistp
imul
pop
mov
imul
pop
jge
lods
call
clc
jnp
push
jae
mov
xor
es
inc
or
or
dec
jns
je
loopne
jo
out
xchg
mov
mov
push
sahf
fild
xlat
sub
scas
div
sub
sbb
rcr
(bad)
leave
push
test
jb
(bad)
adc
sbb
sub
repz
add
jl
out
inc
repz
imul
and
cmp
stos
push
push
and
pusha
mul
ja
daa
jl
out
or
add
jge
push
shr
xor
mov
call
fcomp
pop
retf
imul
adc
outs
in
(bad)
popf
inc
loopne
fwait
xchg
cdq
adc
into
aam
dec
stc
mov
lods
imul
sub
ins
and
cmp
pushf
mov
push
mov
mov
mov
daa
fcomp
cmp
sub
dec
fwait
sub
push
or
cwde
fwait
addr16
dec
inc
mov
mov
mov
(bad)
cmps
fwait
cmps
outs
adc
stc
leave
and
lds
or
fcom
push
jp
mov
sub
out
add
xor
jae
test
sbb
sub
jp
sti
add
mov
mov
je
pop
cmp
lock
or
sbb
xor
dec
add
hlt
sbb
cmps
hlt
popa
hlt
call
lds
add
sbb
jmp
nop
bound
dec
dec
sub
in
mov
dec
daa
call
mov
pop
pop
jg
xor
(bad)
dec
push
lds
ins
mov
cmp
sbb
fld
fbld
sar
mov
inc
lods
lock
add
sbb
sbb
mov
in
jbe
pop
fmulp
clc
or
inc
push
inc
add
sub
fldcw
bound
test
xchg
js
and
xchg
push
pop
xchg
cmp
ins
nop
scas
(bad)
jecxz
pop
push
and
out
ins
xor
inc
clc
std
sub
push
mov
xchg
test
dec
loop
shl
pop
into
cmp
mov
lahf
sbb
pop
mov
(bad)
mov
pop
and
pop
add
(bad)
stc
rol
std
(bad)
pop
cmp
push
int3
or
cli
pop
mov
cwde
jl
(bad)
mov
adc
test
cmp
jns
mov
push
pop
scas
cmp
fsub
hlt
addr16
call
sbb
mov
cmp
mov
fist
fistp
shl
cmp
lahf
nop
add
fdivrp
pop
mov
mov
jmp
cmp
xor
enter
xlat
dec
xchg
movs
pushf
pop
cmp
shl
mov
(bad)
int
scas
inc
xor
add
pop
fist
out
inc
xchg
pop
mov
ror
cld
pop
imul
outs
mov
sub
pop
leave
mov
dec
call
mov
mov
or
imul
sbb
xchg
mov
cmps
sbb
aas
out
and
mov
fist
push
mov
cmps
inc
inc
push
and
into
cmps
pop
xor
jb
jae
loop
dec
jo
and
dec
hlt
jo
cmp
inc
movs
ror
stos
jae
sub
pop
dec
cmp
pop
jne
cwde
cmp
adc
lods
jb
pop
and
pushf
and
xlat
pop
jmp
xlat
mov
push
inc
(bad)
imul
ins
or
pop
sbb
fsub
out
or
(bad)
out
pop
enter
pop
dec
add
es
mov
iret
int3
push
xbegin
ffree
jecxz
pushf
outs
cmp
in
jmp
sbb
pop
push
sti
or
cdq
repz
hlt
popa
xchg
test
add
stos
movs
inc
jmp
imul
xchg
inc
(bad)
out
movs
or
or
sahf
in
aaa
jo
sbb
loope
repnz
push
mov
jecxz
push
iret
and
and
xchg
adc
add
cmp
mov
ss
arpl
mov
dec
dec
push
mov
je
mov
jp
xchg
adc
aam
push
rcr
mov
in
sbb
adc
sar
sub
dec
inc
loope
sti
pop
mov
push
cli
xchg
test
xor
sub
cld
sub
jecxz
lock
mov
adc
les
mov
xchg
jb
jbe
xchg
(bad)
loope
sbb
jnp
mov
outs
mov
ja
sbb
sub
in
xor
jecxz
fsubr
in
sbb
jmp
jge
and
es
clc
mov
add
imul
outs
test
xchg
repz
inc
out
out
mov
mov
dec
jl
mov
stos
cmp
mov
inc
hlt
aas
mov
push
mov
mov
xor
mov
pop
test
ins
das
pop
dec
retf
mov
xlat
sbb
cmp
xor
mov
fistp
les
test
xlat
sbb
jmp
mov
mov
call
mov
jb
ins
call
jmp
and
adc
mov
inc
sub
out
cli
lods
mov
and
(bad)
push
mov
mov
xchg
adc
mov
push
repnz
inc
mov
ins
repz
test
mov
dec
pop
mov
adc
stos
push
sar
lock
jae
stc
out
sub
adc
add
hlt
leave
enter
pop
push
fild
push
inc
lds
push
aaa
inc
cmps
pusha
mov
ds
adc
lods
push
xor
add
and
jmp
xchg
adc
fmul
ins
in
inc
mov
xchg
fmul
retf
and
mov
jge
retf
jb
lods
lods
adc
mov
xchg
xchg
int
shr
xchg
dec
out
push
add
add
mov
out
cmc
dec
pop
outs
jbe
push
jnp
inc
js
ficom
cmps
test
cmp
pop
(bad)
push
cdq
sahf
mov
popf
sub
cmp
adc
inc
or
mov
mov
push
jae
push
push
jne
or
pop
mov
div
idiv
stos
xor
js
hlt
div
jp
int
and
dec
cpuid
scas
mov
sbb
pop
ins
movs
loop
pop
lds
pop
mov
sbb
loopne
cmps
dec
jb
imul
mul
repz
cmp
fisub
inc
sub
mov
aam
not
inc
retf
scas
mov
arpl
fnstsw
lahf
and
fdivrp
fistp
stos
pop
mov
nop
(bad)
xlat
add
xchg
xchg
loop
and
loop
lea
xor
push
repz
jo
mov
dec
movs
jge
dec
mov
and
sub
and
add
outs
push
scas
(bad)
scas
mov
adc
les
shl
sbb
ins
xchg
ja
stc
cmp
(bad)
fstp
bswap
xchg
cmp
and
mov
lahf
stc
repz
sbb
push
mov
dec
sbb
jmp
jl
add
arpl
dec
sbb
in
aaa
loopne
shl
cmp
or
mov
and
cmp
mov
retf
ret
dec
and
out
sar
and
jbe
out
mov
and
inc
sahf
test
lods
dec
out
test
fsubr
data16
stos
add
push
pop
fcmovnbe
mov
push
mul
shl
sub
ins
movs
les
add
pop
(bad)
shl
dec
retf
je
mov
cmps
cs
ror
cld
fnstcw
mov
or
xor
jecxz
addr16
pop
adc
mov
fwait
jno
inc
push
jl
pop
mov
jge
imul
jl
inc
mov
sbb
jecxz
cmp
movs
xchg
aad
pop
jo
das
pushf
call
inc
leave
push
sbb
inc
jbe
push
outs
into
bound
clc
into
mov
or
pop
mov
in
sub
fwait
adc
stos
jae
out
(bad)
js
mov
call
fcom
sbb
ficom
mov
sbb
ins
mov
rcr
push
xchg
adc
xor
ret
adc
xchg
lock
dec
xchg
push
or
or
aad
shr
pop
in
and
inc
or
push
lock
imul
mov
mov
call
cmps
aaa
shl
sub
outs
sbb
mov
push
mov
mov
mov
push
adc
pop
and
push
enter
jmp
outs
aas
adc
popf
xchg
jne
sub
call
mov
pushf
fld
pop
sub
test
jge
pop
jecxz
cmp
mov
aad
movs
ins
daa
xor
push
ds
sbb
mov
cwde
xchg
adc
dec
outs
outs
int3
push
pop
push
sbb
out
sub
daa
mov
jno
aaa
lock
scas
mov
daa
pop
cli
push
adc
enter
in
inc
inc
sub
mov
aaa
xor
(bad)
mov
clc
inc
adc
mov
or
push
mov
clc
arpl
test
retf
(bad)
je
out
jmp
adc
cld
mov
pop
jmp
neg
adc
cmp
jno
ja
loope
scas
bound
fs
cmc
sahf
pop
jmp
lods
nop
mov
and
fadd
inc
pop
data16
sbb
mov
pusha
xchg
stos
(bad)
stos
jp
xor
bound
push
pop
enter
add
push
pop
dec
call
push
or
(bad)
std
aaa
out
mov
mov
mov
jg
shl
jae
sub
lock
aad
add
mov
dec
xlat
aam
sbb
pushf
sbb
sub
jb
leave
fld
nop
cmc
scas
clc
cmps
bnd
or
repz
repnz
jg
fmul
shl
rcr
bound
idiv
mov
pop
addr16
xor
ret
cmp
sbb
dec
push
or
mov
sbb
mov
xchg
(bad)
(bad)
inc
pop
aad
scas
loop
jge
lock
mov
lock
movs
jo
sub
rcr
test
sub
xor
push
repnz
cmp
mov
pusha
scas
cld
lods
jl
pop
clc
push
loopne
dec
jmp
lods
inc
outs
jp
dec
xchg
icebp
int3
fnsave
test
mov
xchg
pushf
scas
dec
or
rol
stos
cmp
push
xchg
addr16
test
rol
idiv
or
lods
xlat
shl
or
push
xchg
outs
ins
jo
mov
mov
ret
pop
aad
icebp
and
data16
in
shr
js
retf
not
pop
arpl
das
aad
movs
mov
pop
add
push
xchg
or
cdq
and
data16
inc
aas
aaa
out
not
adc
xor
or
retf
fild
inc
gs
pop
data16
ds
shl
add
jnp
dec
mov
idiv
imul
mov
inc
or
js
xchg
outs
daa
mov
iret
dec
cmp
out
loope
inc
mov
push
push
dec
stos
sub
jecxz
sub
mov
sahf
mov
mov
fidiv
adc
jg
xchg
pop
sar
xor
inc
cwde
add
cs
push
outs
pop
add
nop
iret
sub
loop
aaa
adc
fiadd
mov
fidiv
xchg
loop
int
jecxz
(bad)
ins
int3
adc
inc
push
loopne
gs
fld
or
sti
add
test
loopne
jb
jmp
bound
cli
inc
xor
push
shr
push
and
nop
adc
xchg
ss
(bad)
and
adc
sub
scas
add
movs
push
add
stos
stc
jo
jl
and
sti
scas
aas
call
sbb
push
push
adc
mov
repz
shl
loope
jae
adc
mov
jns
(bad)
jnp
loope
jmp
jg
nop
push
lods
xor
pushf
call
xchg
aam
lods
jg
call
push
or
sub
xchg
rcr
sub
lds
push
mov
jnp
scas
mov
mov
xchg
imul
xchg
add
sahf
rcr
mov
sub
xchg
jnp
leave
inc
mov
mov
movs
push
mov
add
gs
fmul
mov
div
jns
aas
adc
jno
lea
daa
xchg
jg
stc
fisttp
imul
mov
sub
push
sub
jne
push
loop
mov
sbb
push
(bad)
cli
or
sbb
inc
inc
dec
push
retf
in
jbe
adc
push
xchg
test
rcr
mov
push
cmp
arpl
sub
test
imul
cmps
jae
or
loopne
and
jg
lds
fimul
das
add
or
xor
mov
jb
and
cmp
sub
mov
gs
or
xchg
sub
pop
add
sbb
or
leave
add
lods
stos
gs
fadd
into
cmp
neg
pop
imul
gs
sbb
dec
(bad)
addr16
(bad)
call
adc
sahf
push
mov
add
mov
lea
cli
addr16
test
test
jns
movs
repnz
fidivr
outs
inc
es
jmp
test
leave
repnz
sub
rol
pop
adc
sub
dec
popf
pop
std
xor
xor
cmp
jo
jno
dec
add
push
jmp
fild
fdivr
xchg
daa
inc
xchg
sbb
xor
pushf
or
mov
adc
repnz
das
arpl
jno
sbb
add
(bad)
mov
out
push
lds
mov
movs
je
mov
mov
cmps
adc
sbb
jle
cmp
jne
pusha
cmc
or
aas
popa
push
sub
sbb
mov
mov
in
jo
mov
xchg
rcl
pop
idiv
iret
andps
push
push
daa
pop
out
sbb
mov
or
mov
pushf
xor
push
jne
adc
adc
fisubr
call
xor
jb
sub
aam
inc
iret
ja
(bad)
hlt
dec
pop
movs
das
push
jmp
push
mov
sbb
scas
cmp
xchg
dec
out
jmp
add
mov
in
cmp
mov
and
inc
mov
stos
pop
or
jecxz
repz
push
mov
loop
or
stos
retf
add
mov
mov
pushf
lods
push
scas
sub
sub
call
dec
sub
add
icebp
pop
ret
popf
sub
or
stos
in
sti
stos
test
fisttp
ins
sti
in
xchg
and
fadd
fwait
and
bound
jne
aaa
lahf
das
cmc
pop
(bad)
sub
mov
outs
pop
jnp
mov
xor
or
dec
adc
shr
jg
stos
lahf
icebp
xor
jne
cmp
out
push
stos
dec
popf
ret
mov
xlat
cmp
xor
cdq
sub
(bad)
jle
mov
xchg
adc
xchg
jo
adc
push
arpl
mov
inc
(bad)
rol
ds
pushf
mov
(bad)
in
pop
jae
and
dec
and
cmps
dec
pop
xor
mov
imul
mov
rcl
or
dec
or
jnp
adc
cmp
hlt
mov
out
or
out
sbb
or
jge
mov
pop
push
ds
push
mov
xchg
cmp
data16
scas
pusha
cli
adc
pushf
xor
cmp
push
dec
arpl
mov
or
int
jo
mov
adc
xchg
xor
and
xor
loop
(bad)
ds
inc
test
fistp
movs
int
lods
sub
or
inc
inc
mov
pusha
aas
ins
inc
sbb
dec
test
sar
inc
fwait
ja
sbb
jne
(bad)
repz
jmp
mov
ror
stos
inc
jnp
sbb
aas
punpckhbw
fiadd
lahf
lea
jns
inc
or
in
mov
ror
dec
pop
test
shl
mov
cwde
pop
mov
xor
add
shl
or
mov
cwde
dec
outs
movs
dec
nop
lock
cwde
cld
mov
push
and
sbb
test
dec
shl
inc
cmovge
sar
mov
push
or
test
mov
adc
push
fwait
movs
aad
pushf
dec
ja
push
pop
fld
ins
xor
aaa
arpl
push
xor
mov
popa
dec
inc
adc
push
lds
hlt
mov
ja
out
loopne
retf
xchg
jmp
sbb
loop
out
movs
call
mov
shl
sub
add
dec
sbb
lods
mov
int3
sbb
sbb
pop
dec
cld
dec
mov
add
pusha
pop
cmp
shl
or
in
in
xor
fld
add
outs
cmp
popf
mov
jmp
cmp
xchg
retf
in
dec
(bad)
aad
loop
repnz
ret
or
test
shl
sbb
xor
sub
mov
xchg
shl
pushf
imul
scas
pop
mov
push
and
mov
xchg
pop
fadd
inc
shr
pop
jecxz
xor
lea
ins
push
push
cwde
stos
cmp
inc
dec
pushf
cmp
je
or
cs
inc
dec
pop
out
jb
popf
lods
or
popf
dec
sub
inc
and
mov
mov
fdivr
loope
add
in
or
cli
out
xor
pop
pop
in
mov
sbb
(bad)
mov
fst
add
call
bnd
mov
mov
jle
push
mov
push
cmp
add
pop
mov
frstor
or
fbld
retf
mov
xor
cmp
das
stos
ds
push
cmp
ds
jnp
jo
push
dec
fmul
cmp
loop
dec
pop
jmp
sub
mov
inc
mov
aaa
xchg
fnstenv
daa
sbb
leave
icebp
ins
es
leave
cmp
(bad)
jnp
out
dec
mov
aad
and
adc
mov
pushf
pop
add
and
(bad)
sti
adc
dec
sub
cmp
cmp
leave
mov
stos
push
dec
or
jnp
jecxz
(bad)
cmp
or
jbe
jmp
mov
cmp
int3
je
repz
mov
pop
mov
mov
movs
adc
vandnps
push
xlat
jnp
or
jmp
das
add
popa
sub
lods
callw
int
ins
dec
jns
inc
leave
pop
fild
xchg
mov
dec
mov
rcr
push
aaa
ins
in
adc
in
fidivr
shl
push
pop
mov
dec
pusha
loop
add
jo
or
and
cli
adc
seta
xchg
and
fdiv
idiv
pop
adc
and
inc
add
pusha
neg
scas
pop
daa
std
sbb
cmp
sbb
imul
push
mov
adc
push
jmp
xchg
cmp
jmp
jbe
jo
in
popf
sahf
jmp
push
out
in
icebp
adc
sahf
repnz
sahf
xchg
mov
mov
out
xchg
sub
out
adc
into
or
fstp
ret
add
dec
int3
sbb
loopne
cmps
lock
ret
js
jno
psubusb
xlat
mov
xor
mov
pop
add
pop
stos
clc
enter
arpl
inc
sbb
sbb
imul
rol
stc
fwait
dec
or
cld
and
mov
add
jmp
push
cmp
mov
xchg
movs
inc
fadd
cmc
xchg
sar
or
xor
pop
je
test
dec
inc
xor
jo
jl
frstor
loope
mov
repnz
or
stos
dec
dec
xor
pop
add
mov
xor
cdq
mov
(bad)
adc
lds
repnz
call
sti
jge
sub
in
pop
clc
jg
in
stos
xor
push
pop
aam
xlat
outs
sbb
je
and
lea
lods
jnp
fs
jns
lea
push
jmp
xchg
dec
inc
test
pop
jae
sub
sahf
icebp
jmp
push
mov
adc
sbb
jle
push
in
les
out
nop
clc
mov
popa
dec
scas
or
cmp
(bad)
xchg
leave
push
cmps
xlat
repz
sub
push
cmp
imul
sbb
push
or
push
push
sub
push
mov
sbb
jle
adc
sahf
or
fist
xchg
icebp
mov
xchg
das
movs
dec
outs
xchg
stc
sub
push
fwait
sbb
cli
das
add
xor
(bad)
pop
pop
je
jg
scas
xor
fcom
cmp
fldenv
xchg
scas
pop
sub
fisub
ins
xchg
cmps
fnsave
add
jb
push
(bad)
sbb
outs
mov
js
fs
cmp
test
lea
(bad)
mov
pushf
adc
xchg
mov
inc
add
ficom
inc
and
mov
and
gs
test
pop
xchg
fbstp
out
push
mov
ss
mov
rcl
ss
mov
adc
addr16
adc
jmp
inc
sub
nop
dec
adc
enter
xchg
gs
movs
loope
js
push
jbe
(bad)
fptan
nop
cld
xor
fdivrp
cmp
ja
cmp
mov
and
(bad)
rcl
mov
cmp
dec
and
ja
xor
pop
cmps
mov
inc
out
or
dec
mov
cs
cmp
mov
jle
mov
stc
(bad)
ror
pusha
outs
dec
nop
fmul
cld
mov
mov
test
sbb
out
ror
shl
xchg
je
sbb
mov
(bad)
sahf
lahf
test
jmp
lahf
shr
and
jle
or
scas
jmp
pop
fst
mov
cmc
in
cmp
mov
xor
cwde
shr
jmp
mov
dec
ins
aas
stos
xchg
sub
neg
cs
and
pop
inc
adc
into
fs
fild
imul
sbb
mov
lods
scas
pop
xor
mov
out
pop
cwde
pusha
ins
xor
inc
mov
jle
push
push
dec
xchg
in
es
cmc
(bad)
std
sbb
pop
leave
or
scas
cdq
movs
pop
inc
inc
test
cdq
add
pop
(bad)
add
test
bound
xor
sub
xchg
popf
div
test
jns
fwait
push
push
shl
add
cld
ins
pop
add
mov
lock
stos
popa
add
cmp
dec
data16
sbb
mov
test
lds
xchg
loop
test
sub
push
inc
out
shl
mov
inc
sti
ja
int
inc
add
mov
in
daa
mov
push
sub
sbb
mov
pop
fwait
adc
jmp
inc
mov
sbb
add
loopne
jp
les
xchg
sbb
adc
xor
jmp
ror
add
add
daa
sub
mov
dec
mov
fs
aad
xchg
inc
das
(bad)
jno
dec
leave
idiv
popf
push
sub
ret
and
cld
push
imul
adc
xchg
push
xchg
xchg
shrd
adc
and
iret
es
ja
scas
pop
cdq
lahf
popa
dec
push
dec
repnz
inc
sub
mov
xor
pop
scas
mov
ror
mov
add
pop
and
bnd
xchg
je
sub
stc
aas
fwait
iret
mov
dec
pop
jne
cmp
inc
into
pop
sbb
aaa
movs
js
pushf
out
ins
xlat
sbb
xchg
shl
cmc
sbb
imul
sar
adc
pusha
inc
cmc
lea
std
cmps
loop
std
jl
cmp
mov
and
rcl
aas
outs
arpl
xchg
mov
out
test
xchg
rcl
cmp
inc
adc
hlt
jmp
mov
push
and
jmp
dec
call
or
clc
ins
adc
movs
push
xor
lods
outs
sbb
test
or
in
das
(bad)
lock
inc
mov
inc
push
mov
iret
(bad)
enter
push
ficomp
lods
call
cmps
sbb
sbb
clc
loop
inc
xchg
movs
pop
in
rcr
bound
bound
fs
outs
mov
inc
inc
add
(bad)
sub
pop
lods
xor
aaa
mov
inc
inc
inc
adc
pop
sub
je
in
push
xchg
and
jbe
adc
ins
inc
sar
sub
sub
mov
add
sbb
sbb
fnstenv
jg
loopne
mov
xchg
push
pop
inc
mov
mov
add
sbb
aam
test
pop
inc
in
int
mov
xor
test
or
neg
jbe
iret
in
jae
popa
jns
retf
mov
or
xchg
retf
test
dec
xchg
ret
in
cmps
pop
xlat
add
dec
rol
cmp
cmp
cs
push
mov
and
clc
pop
cmp
inc
cmp
inc
pop
cs
daa
loope
jb
hlt
mov
add
pop
leave
imul
xor
cmp
pop
cmp
(bad)
sbb
pushf
and
adc
fs
mov
adc
fwait
inc
popf
mov
xor
and
je
fbstp
shr
cdq
fidiv
into
jmp
ret
pop
mov
mov
pop
es
mov
and
sub
push
aaa
add
push
enter
fadd
sar
mov
setg
add
scas
in
jl
iret
and
mov
xchg
xor
sub
aaa
retf
xlat
mov
mov
enter
jecxz
sahf
shr
cli
cdq
ffreep
xor
xchg
pop
lods
push
in
push
mov
lock
push
dec
adc
jmp
sti
inc
and
jno
(bad)
or
jbe
les
add
jns
mov
jb
jae
jnp
rcr
aam
enter
stc
into
mov
stc
mov
sub
imul
in
add
mov
and
inc
shl
sbb
jne
or
adc
push
dec
mov
sbb
jmp
lahf
out
movs
xchg
call
xor
int3
push
fs
xlat
sar
add
xor
scas
lds
jnp
lock
jle
in
ja
or
push
pop
xor
into
aas
and
xor
es
inc
(bad)
dec
or
mov
retf
iret
sub
(bad)
lock
cmp
nop
sbb
mov
addr16
rol
pop
inc
jb
iret
lahf
pop
imul
pop
ins
lds
pop
jl
sub
mov
jne
jp
(bad)
icebp
sbb
and
push
push
adc
cs
and
mov
mul
or
enter
mov
pop
dec
scas
jmp
pushf
jns
(bad)
jnp
sbb
xlat
cmp
aaa
dec
fdivr
sub
mov
cmp
xchg
mov
leave
xchg
mov
loop
pop
mov
retf
pop
out
mov
jge
or
push
or
jae
add
icebp
pop
jae
dec
push
fcom
ds
popf
lods
outs
push
adc
mov
hlt
xchg
jge
inc
pop
test
fisttp
pop
in
and
cmps
ds
scas
sub
lahf
sub
jecxz
icebp
(bad)
cmp
jno
in
call
sub
nop
sahf
sub
cmps
xchg
ss
xor
shr
cmps
test
xchg
(bad)
fsub
push
not
push
pop
jmp
mov
sahf
pop
xor
push
mov
sub
adc
jg
jno
dec
mov
enter
cmp
shl
push
cmc
dec
ins
push
(bad)
in
lods
pop
adc
xchg
scas
sub
adc
pop
lods
ret
aaa
nop
lods
mov
push
adc
cmp
jnp
pop
mov
mov
xlat
into
xor
or
int3
add
inc
or
stos
xor
jns
xor
jno
out
sahf
(bad)
xchg
xor
out
rcr
int3
sbb
ja
xchg
in
pop
dec
mov
add
push
mul
lds
stos
pushf
clc
xor
cli
(bad)
aam
adc
push
rcl
test
idiv
dec
adc
or
fcos
jle
mov
ret
call
jne
call
fsubr
or
mov
push
popa
mov
imul
xchg
inc
and
mov
pop
add
sti
das
imul
xchg
sbb
out
sbb
pop
jmp
outs
scas
mov
cli
jge
mov
std
inc
icebp
sub
fild
mov
xchg
mov
adc
mov
popa
lock
sti
iret
out
inc
cpuid
retf
bswap
mov
dec
mov
push
mov
arpl
mov
jno
mov
arpl
dec
test
sub
cs
les
enter
cwde
enter
xchg
push
sub
sub
imul
inc
mov
and
dec
xor
popf
loope
ror
lods
(bad)
fistp
sbb
and
fidivr
(bad)
mov
pop
call
test
push
lods
in
adc
push
sbb
gs
sbb
(bad)
jo
fidiv
(bad)
sbb
in
sti
pop
hlt
dec
push
data16
sub
je
sub
iret
ja
cli
dec
mov
frstor
pop
outs
sbb
sbb
cwde
retf
loopne
aas
ds
inc
xchg
and
mov
adc
dec
ds
sbb
rol
jle
mov
pop
(bad)
xlat
out
retf
out
std
ins
pop
cmp
addr16
leave
sub
jg
sti
imul
jle
test
jo
mov
sar
dec
xor
ja
outs
outs
jb
adc
inc
or
enter
(bad)
fsub
xchg
add
call
sub
lds
push
pop
in
outs
add
mov
call
ja
icebp
inc
push
jno
mov
pop
aas
sub
push
mov
sbb
mov
adc
jecxz
dec
lds
pop
(bad)
in
loopne
xor
arpl
mov
mov
lods
sar
pop
xchg
dec
jns
shr
movq
js
mov
pushf
cmps
cmc
xchg
jns
sub
sbb
stos
ins
data16
mov
cli
fisub
in
mov
fcom
pusha
pop
pop
dec
es
retf
jl
shl
mov
xchg
lods
push
mov
arpl
jg
test
fstp
loopne
mov
loope
(bad)
out
scas
retf
sbb
sbb
push
add
(bad)
sbb
pushf
dec
mov
hlt
pop
or
scas
sar
(bad)
fnstcw
xor
mov
sahf
mov
fst
dec
lea
dec
ja
sub
jne
push
mov
js
outs
or
movs
gs
pop
nop
test
(bad)
outs
xor
cmp
int
(bad)
pop
cmps
jmp
pop
jge
retf
fisttp
pop
pushf
mov
sbb
sub
adc
inc
add
jbe
stos
std
or
scas
sbb
mov
jge
cld
test
cmps
popa
jle
arpl
and
jp
hlt
add
adc
pop
les
mov
jne
mov
retf
int
jns
mov
pop
push
rcr
xor
mov
or
dec
pushf
es
aaa
inc
mov
sar
adc
lods
dec
(bad)
ror
pop
aad
test
adc
stc
retf
mov
or
addr16
push
test
inc
cmp
fucomp
(bad)
cli
xor
pusha
sub
enter
mov
pop
xchg
rcl
or
xor
mov
push
or
test
sbb
sub
inc
shl
sbb
adc
mov
add
sub
imul
add
call
pushaw
(bad)
rcl
fldenv
clc
gs
add
cmc
xlat
jecxz
in
jo
cs
add
xchg
adc
dec
(bad)
scas
shl
test
(bad)
aam
jae
fisub
or
mov
call
push
sbb
jmp
xor
mov
xchg
lods
jbe
jb
and
icebp
jg
mov
jne
jnp
xor
push
lods
dec
jb
cmps
xor
dec
(bad)
ficom
xchg
push
movs
loop
jns
dec
ds
push
aam
rol
lods
in
in
jge
pop
sbb
inc
and
(bad)
sub
nop
(bad)
(bad)
push
out
mov
mov
hlt
in
xor
lods
pop
in
push
stos
dec
pop
ficom
sbb
out
inc
cmp
jnp
test
aas
push
adc
loope
mov
mov
pop
cmps
inc
nop
gs
inc
jbe
lock
nop
mov
xchg
fisubr
adc
push
jmp
lds
neg
into
outs
mov
dec
ins
loop
loop
call
jle
push
adc
and
push
jo
pop
jp
dec
cmc
adc
scas
out
mov
icebp
pop
(bad)
adc
icebp
add
call
add
popa
call
imul
je
ror
gs
frstor
add
push
xchg
cmps
fbstp
push
mov
js
xchg
into
(bad)
push
fcomp
adc
(bad)
(bad)
and
cmp
rol
lock
cs
loop
repz
test
pop
jecxz
inc
mov
push
loopne
jb
dec
outs
leave
dec
adc
je
cli
or
sub
inc
lahf
movs
jmp
je
mov
pop
pop
setne
(bad)
in
outs
fdivr
pop
popf
xor
add
popf
loop
test
sbb
ret
idiv
cs
fisub
shl
(bad)
scas
pop
mov
movs
cmp
div
scas
fcom
cmc
and
aas
and
inc
push
adc
pop
sub
rol
aas
in
add
add
cmp
add
jp
and
pop
jg
iret
pop
js
pop
movs
and
(bad)
xchg
xlat
mov
and
das
dec
lds
lea
cmc
mov
stos
sbb
scas
shr
into
xchg
or
popa
inc
inc
clc
inc
ja
sbb
daa
sub
inc
fbld
in
fwait
pushf
enter
mov
loop
mov
or
jnp
push
into
daa
adc
(bad)
pop
fnstenv
xor
sub
push
int3
rcl
xchg
jnp
sti
push
rcr
add
mov
pop
test
adc
mov
pusha
(bad)
cmp
popa
(bad)
loope
movs
clc
scas
leave
push
pusha
inc
mov
jmp
sub
pop
adc
in
adc
ins
fs
pop
and
call
popf
sbb
or
mov
jb
cli
test
mov
sahf
xchg
out
or
jnp
imul
push
jle
xchg
cld
jbe
loope
sti
mov
xchg
stos
sub
data16
and
xchg
out
(bad)
inc
in
ins
dec
pusha
or
fisttp
fidiv
fwait
sahf
call
mov
dec
sbb
mov
or
cmp
vpshuflw
push
jb
imul
sahf
mov
inc
stos
pop
je
cdq
mov
jo
in
jge
into
mov
jle
in
les
push
pop
std
or
jmp
loopne
pop
(bad)
push
mov
into
(bad)
mov
loope
loope
stos
pop
sbb
test
xchg
dec
jmp
dec
cmp
xor
adc
lds
fimul
fmul
sbb
imul
jl
pop
pop
sbb
test
aad
xchg
imul
inc
xor
xchg
mov
sbb
sbb
or
and
cmps
fistp
in
xchg
xchg
mov
daa
sbb
push
ins
(bad)
hlt
scas
adc
jb
xor
mov
push
jecxz
sbb
ja
jg
push
cwde
xor
mov
mov
lods
dec
sbb
xchg
xor
(bad)
push
aad
mov
push
dec
(bad)
mov
cmp
lock
inc
lds
add
movs
xchg
push
shl
je
cld
xor
pusha
mov
out
gs
xchg
pop
imul
lods
int
loopne
pop
pop
pop
ror
xor
sahf
test
fsub
lock
ins
mov
mov
fiadd
shr
add
mov
loope
retf
test
push
push
adc
sub
hlt
icebp
les
sub
pop
pop
movs
out
push
xchg
pop
jae
inc
iret
xor
sbb
xor
outs
ss
sbb
fwait
pusha
dec
pop
push
stos
add
pop
dec
push
ja
and
adc
pop
outs
sub
xchg
fimul
and
sbb
adc
push
aas
cdq
les
mov
jno
jno
and
cmp
repnz
inc
xor
pop
mov
les
test
adc
dec
fucomi
in
aas
mov
call
aas
sub
in
xor
shl
dec
cs
cmc
xchg
xor
rcr
pop
cdq
pop
(bad)
lds
and
js
sub
retf
xchg
loope
mov
xor
adc
test
jecxz
push
inc
ss
add
aaa
test
pop
aam
clc
cli
(bad)
inc
ins
cld
mov
(bad)
stos
call
lahf
dec
adc
inc
add
rcr
call
xor
adc
push
mov
add
ds
mov
rcl
out
adc
inc
push
int
and
fmul
or
in
mov
dec
dec
jge
xor
or
(bad)
pop
pusha
push
dec
mov
xchg
jle
mov
adc
cmp
xchg
sub
fsub
in
inc
adc
fiadd
jp
push
inc
inc
sub
mov
sahf
xchg
loopne
jmp
out
mov
retf
sbb
daa
and
pop
test
(bad)
mov
pop
sbb
loopne
(bad)
cld
lock
push
loop
cdq
adc
pop
xchg
xor
push
ins
test
mov
xor
push
lds
sbb
inc
xchg
xor
pop
aam
pusha
popf
in
pusha
(bad)
jnp
and
fdivr
or
xchg
jp
pop
push
ja
leave
loop
pop
cmps
inc
pop
cmps
cmp
fimul
pop
mov
jno
ret
push
or
(bad)
inc
pop
pop
jmp
add
push
mov
imul
loope
mov
out
cmp
and
add
int3
mul
setp
cli
es
cmp
aam
or
mov
xchg
nop
jl
rcl
ret
fs
enter
movs
mul
sub
push
ret
jo
lods
cmp
push
aaa
xchg
pop
xchg
or
add
stc
cmp
xor
retf
lds
int3
ror
call
inc
sub
push
ins
(bad)
pop
cld
test
shr
push
add
pop
int3
cwde
outs
dec
rol
sbb
inc
pop
and
inc
adc
pop
dec
sbb
and
adc
xchg
out
add
jnp
dec
call
push
out
xor
addr16
mov
in
mov
pop
pop
push
push
inc
test
cmps
and
xchg
dec
adc
je
shl
add
enter
or
aad
bound
add
mov
pop
pop
mov
pop
mov
mov
popa
(bad)
icebp
and
jmp
inc
fiadd
adc
push
pop
mov
das
(bad)
cli
mov
loopne
sti
cld
out
shl
inc
(bad)
adc
dec
push
or
inc
and
fwait
xor
cli
cdq
or
mov
repnz
mul
mov
fisub
mov
mov
push
mov
iret
ds
fst
fsub
pop
add
mov
sbb
push
and
pop
mov
xchg
pop
push
stc
xchg
dec
shr
ins
dec
daa
lock
loope
shl
mov
mov
or
jno
cmp
dec
xchg
ficom
ss
aaa
push
push
push
and
or
rcr
dec
or
push
pop
xor
outs
mov
mov
das
inc
sahf
dec
movs
retf
xchg
lock
pop
movs
les
cwde
scas
cmp
repz
pop
mov
fstp
call
mov
lock
sub
loop
jbe
js
cmps
push
or
push
jecxz
cmps
inc
pop
enter
xor
xor
dec
jecxz
stos
cmc
dec
ins
ficomp
call
fldenv
in
outs
jo
lahf
stos
mov
ins
movs
dec
cmps
leave
pop
jl
xor
mov
mov
jp
xor
mov
(bad)
out
dec
jae
add
movs
les
in
push
std
or
stos
ins
jg
xor
inc
or
arpl
inc
sub
lock
push
ret
sub
jle
mov
mov
add
(bad)
sub
jmp
mov
cs
ffreep
scas
out
aas
bound
push
std
cmp
fist
test
sbb
xchg
mov
out
push
sbb
ffreep
mov
into
loope
out
jno
out
(bad)
test
or
jns
into
scas
cdq
idiv
push
xchg
push
push
fs
and
enter
cmp
mov
sub
enter
mov
jnp
xchg
lods
mov
add
add
xchg
cmps
mov
push
add
push
dec
clc
and
rep
fstp
push
outs
xor
out
or
jp
mov
inc
push
xchg
cmps
call
push
mov
icebp
pop
leave
imul
or
push
and
xchg
jp
sub
pop
push
xchg
inc
jns
(bad)
(bad)
imul
xlat
sbb
mov
mov
inc
inc
lea
popf
push
pushfw
mov
mov
dec
jp
fcmove
imul
clc
inc
std
inc
iret
push
scas
cmp
sti
dec
jge
push
mov
mov
leave
sbb
sbb
fst
sti
inc
test
int3
repnz
nop
mov
pop
test
add
loop
cmp
addr16
adc
inc
cmp
push
and
push
dec
push
add
aas
inc
lds
xor
(bad)
(bad)
std
jbe
(bad)
ss
pushf
cld
mov
repz
call
mov
jle
stos
and
adc
xor
clc
cmp
xchg
mov
(bad)
mov
cmp
inc
lods
xchg
dec
or
das
and
scas
shl
lahf
mov
lahf
fidiv
cmp
mov
in
in
das
xor
add
(bad)
pcmpeqd
shr
mov
es
std
out
(bad)
fisubr
jmp
inc
adc
ss
push
xchg
push
xor
inc
mov
dec
jno
daa
cmps
pop
push
sub
pop
push
sub
rol
xchg
jge
hlt
mov
(bad)
push
daa
push
fwait
inc
pusha
mov
dec
inc
test
cmp
sub
lds
shl
mov
jp
add
cdq
add
pop
or
adc
aaa
dec
xchg
sbb
sub
leave
iret
add
dec
mov
loope
mov
ja
inc
push
mov
cmps
adc
cmps
retf
mov
test
call
ins
nop
push
or
mov
push
pop
dec
sbb
mov
(bad)
leave
icebp
mov
dec
cli
popf
add
cmp
sbb
xchg
sub
or
popa
xchg
adc
jmp
lea
adc
nop
dec
push
imul
jo
into
dec
jno
js
aam
adc
ror
in
dec
(bad)
mov
in
sti
movs
aaa
and
fisttp
and
cmc
cld
iret
repz
imul
loopne
xor
add
in
div
jnp
dec
sbb
xor
jo
cmp
sbb
movs
cli
dec
fild
or
xchg
je
popf
xor
retf
popa
mov
inc
pushf
gs
pop
retf
push
inc
adc
loop
pusha
sbb
push
mov
mov
jp
pop
or
and
out
mov
lods
xchg
sbb
xchg
add
push
jnp
js
cmp
pop
push
mov
jl
shl
sbb
in
mov
xor
stos
add
ss
push
ins
into
stc
dec
sub
adc
mov
stc
pop
bound
sub
(bad)
out
sub
mov
out
pop
int
jl
add
fs
push
mov
inc
mov
loope
lods
fist
clc
sbb
push
(bad)
int3
fidivr
aad
sar
pop
sti
push
push
cmc
lods
adc
xchg
call
jnp
imul
pusha
(bad)
cmc
or
arpl
in
jg
push
add
nop
out
mov
js
or
icebp
dec
push
and
imul
pop
test
in
mov
dec
mov
jg
mov
pop
mov
call
ja
cmp
pop
dec
mov
(bad)
push
inc
icebp
sub
push
jmp
pop
stc
outs
push
and
sub
cmc
jle
dec
xor
mov
cwde
xor
cdq
leave
data16
add
jmp
loopne
mov
popa
adc
mov
(bad)
adc
popf
(bad)
pusha
pusha
dec
push
cmps
cmps
ja
xor
mov
scas
repz
sbb
arpl
add
cdq
js
(bad)
and
jnp
pop
or
push
xchg
int
popf
lea
mov
cs
fidivr
jp
cmps
inc
or
push
dec
sub
out
pop
(bad)
popf
jmp
xchg
gs
loope
lea
mov
mov
cmp
clc
xchg
dec
cdq
retf
(bad)
fsub
or
pop
(bad)
sbb
push
or
(bad)
and
sbb
out
leave
or
push
push
out
loop
data16
and
mov
mov
xchg
dec
icebp
cmp
stc
adc
shl
pop
jge
loope
inc
retf
add
arpl
nop
mov
std
leave
xor
fisttp
inc
add
pop
add
dec
sub
ret
mov
fst
sub
xchg
arpl
dec
mov
jo
call
(bad)
in
xor
push
ss
sbb
fbstp
fmul
jbe
sbb
and
xor
add
add
aad
(bad)
icebp
dec
mov
mov
lods
stos
dec
xor
push
mov
ror
out
loop
imul
or
inc
xchg
or
pusha
repz
sub
(bad)
sbb
cmp
js
cmp
fwait
push
es
adc
adc
test
hlt
push
dec
ds
xchg
push
push
out
add
pop
push
call
jmp
dec
in
nop
and
(bad)
arpl
pop
mov
or
pusha
and
add
fist
cld
fld
data16
mov
and
gs
arpl
fs
in
adc
cdq
push
test
or
iret
shl
dec
aam
pop
pop
push
cmp
(bad)
mov
or
add
fistp
sahf
repz
bound
dec
add
ins
mov
fwait
or
lds
fs
idiv
cwde
mov
mov
ds
jo
add
je
cld
push
mov
jg
mov
xor
js
dec
clc
adc
pop
jns
outs
repz
lods
mov
xor
push
(bad)
cmc
jle
lahf
and
in
ret
sbb
mov
inc
inc
cdq
(bad)
or
sub
movs
js
out
sbb
or
cmps
scas
icebp
cmps
and
dec
in
sbb
push
xchg
dec
enter
lock
neg
push
sbb
xchg
mov
jecxz
add
pop
mov
and
add
and
and
sub
jg
mov
ja
dec
sbb
mov
or
test
xchg
aam
sub
inc
ins
popa
dec
jle
sbb
jne
test
mov
imul
ror
jo
jl
(bad)
or
cs
test
mov
ins
dec
jmp
mov
and
push
sbb
out
dec
and
jmp
mov
mov
rol
push
and
xchg
fist
xor
mov
xor
sahf
pop
shl
xchg
sub
add
mov
pop
sbb
xchg
movs
imul
aad
fidiv
rcl
and
mov
sub
xchg
(bad)
out
mov
mov
imul
aaa
inc
sar
dec
add
stc
pop
xchg
pusha
push
hlt
and
fsub
retf
mov
ins
mov
hlt
hlt
cmp
sahf
fwait
test
push
pop
push
dec
and
cmps
and
js
test
fsubp
or
in
pop
mov
ret
dec
xchg
inc
call
jbe
aaa
(bad)
cmp
(bad)
gs
shr
adc
sub
lahf
or
popf
in
xchg
fs
lock
mov
mov
mov
movs
lds
mov
cmp
jne
dec
rcr
and
dec
out
out
xchg
or
inc
mov
add
clc
into
lea
scas
pop
xchg
lea
mov
xor
outs
sub
sahf
cmp
xchg
scas
repz
retf
push
les
mov
jle
imul
jle
pop
xchg
dec
shr
gs
outs
icebp
sbb
pop
adc
and
cmp
push
adc
repz
aas
call
stc
sbb
push
xor
mov
xor
cmp
in
call
mov
imul
repz
pop
retf
mov
xor
repz
mov
adc
int3
test
imul
xchg
sub
push
sahf
in
test
sbb
lock
adc
les
mov
loope
jbe
cmps
and
(bad)
sti
fsub
(bad)
add
mov
xchg
adc
daa
dec
das
call
je
add
inc
in
(bad)
popw
push
adc
or
adc
push
pop
fdiv
and
mov
or
adc
cli
jge
add
lods
mov
sbb
mov
ins
outs
add
cli
clc
(bad)
ja
cmps
and
test
mov
sti
dec
cmp
sbb
mov
dec
aas
leave
cmp
mov
mov
push
retf
ja
mov
mov
or
jg
jg
fcmovnbe
bound
inc
movs
inc
or
pusha
in
test
les
imul
(bad)
dec
adc
add
and
imul
mov
imul
and
lods
mov
lock
push
popa
mov
leave
lahf
xor
ss
add
dec
sbb
nop
(bad)
sub
fcmove
les
push
mov
mov
arpl
xchg
in
out
ds
or
outs
inc
into
je
movs
adc
jl
sub
rcr
icebp
jnp
fs
cmps
jp
mov
dec
mov
fld
outs
std
push
mov
test
xchg
arpl
or
sbb
or
sub
pop
or
and
popa
sub
and
(bad)
push
xor
psrld
daa
movs
jns
cmp
sahf
inc
mov
int
fs
in
xchg
mov
sub
ret
xor
xchg
in
jmp
mov
dec
xor
pop
ret
push
cdq
scas
jl
addr16
ss
sub
fwait
popa
aas
adc
(bad)
jecxz
cmps
call
daa
mov
in
je
mov
jnp
mov
je
sar
mov
add
stc
das
loopne
fdiv
jne
jmp
loopne
mov
sub
(bad)
jge
clc
cmps
test
adc
js
popf
jp
push
loopne
lods
sbb
(bad)
out
out
pop
jne
mov
and
jmp
cmp
adc
imul
ja
jnp
dec
ret
add
in
je
ror
xchg
scas
mov
pop
test
int
cmp
scas
popa
repnz
sub
push
inc
adc
cmp
and
add
ret
popf
cmp
xchg
sub
push
mov
cmps
xor
adc
ss
es
jl
adc
mov
and
ret
pop
cmp
add
or
std
retf
push
adc
jb
cmp
loope
mov
cmp
dec
stc
pmuludq
mov
(bad)
or
sub
mov
inc
push
neg
push
dec
mov
aad
clc
adc
jl
fcmovnu
push
xchg
cwde
sar
xchg
sbb
fwait
test
jnp
loop
jecxz
and
push
shr
ja
jle
dec
daa
arpl
mov
ror
(bad)
cmc
sub
xchg
pop
div
icebp
in
ffreep
xchg
push
adc
pusha
xor
cmp
mov
das
sahf
aaa
fstp
ja
pop
cmp
push
in
xor
daa
jge
pop
lods
dec
cmps
cmp
inc
mov
jl
out
stos
jp
push
int
cdq
push
loopne
cmp
movs
add
cmp
stos
data16
inc
mov
mov
out
mov
sbb
dec
hlt
adc
jb
mov
je
enter
jmp
cmp
(bad)
int3
mov
mov
or
or
jg
xchg
pop
jge
loopne
daa
mov
mov
das
retf
outs
ret
bnd
rcl
and
or
mov
retf
jo
shl
cwde
ins
jnp
idiv
adc
daa
shl
and
jle
mov
je
mov
mov
pop
or
inc
inc
sbb
js
xor
sbb
xor
scas
pop
adc
lods
cld
(bad)
(bad)
jmp
sbb
ja
pop
jl
or
aas
les
pop
scas
xchg
adc
cvtps2pi
jmp
mov
inc
imul
push
and
inc
mov
je
test
push
xor
push
cdq
cmc
or
inc
adc
int
retf
xchg
push
fistp
movs
mov
cmps
stc
pop
push
xor
or
xchg
nop
xor
pop
(bad)
adc
popf
movs
xchg
cwde
xchg
jns
movs
xor
call
mov
cmps
imul
(bad)
sti
out
pop
push
femms
sbb
jno
mov
jnp
outs
popa
cmc
mov
adc
ins
pop
mov
pop
test
mov
fidiv
fild
xchg
push
imul
test
(bad)
imul
aas
sbb
push
call
aad
sahf
dec
lods
xchg
leave
jne
mov
test
ficomp
jbe
push
mov
fist
pop
ins
push
mov
pop
out
cmp
mov
push
xor
pop
out
mov
mov
sahf
imul
xchg
adc
inc
popf
(bad)
lock
xchg
fidiv
push
dec
add
sub
repz
sbb
inc
or
jp
mov
stos
std
cmps
retf
clc
xchg
scas
sbb
jl
mov
or
inc
icebp
push
jge
mov
dec
sub
mov
adc
iret
mov
dec
sahf
xchg
iret
or
dec
adc
sub
cmp
adc
cmc
jno
mov
or
push
daa
jp
dec
retf
push
sub
jg
xchg
jecxz
fisub
out
fstp
cmp
ror
or
xchg
pop
hlt
js
shl
aas
adc
xor
inc
or
push
sub
mov
push
mov
mov
mov
or
dec
mov
sbb
sbb
xchg
or
icebp
pop
sub
push
push
loope
lock
and
loopne
xchg
jl
out
aas
ja
imul
cmp
pushf
ins
jle
stos
sahf
or
lea
jmp
jmp
adc
jne
ficom
dec
sbb
das
dec
bound
inc
ror
retf
pop
mov
stc
repnz
(bad)
pop
inc
(bad)
dec
push
cli
push
xchg
pop
mov
je
pop
fucomi
adc
int
retf
adc
xchg
retf
in
outs
retf
or
test
jnp
test
nop
inc
jno
inc
in
mov
retf
mov
jmp
or
push
fstp
fwait
mov
push
aas
iret
sbb
mov
xor
xchg
mov
push
shl
adc
arpl
rol
mov
jge
and
xlat
mov
sbb
mov
lock
pop
and
movs
leave
out
cmp
into
and
retf
adc
mov
ds
mov
enter
xchg
push
mov
add
pop
dec
js
adc
jbe
vmovapd
scas
shr
ds
pop
adc
add
(bad)
jecxz
imul
jecxz
pop
fadd
xchg
mov
imul
mov
arpl
fsub
sub
cmps
pop
dec
xor
mov
(bad)
push
repz
int
jg
mov
lods
fistp
adc
call
cmp
mov
call
std
inc
inc
inc
sbb
xor
inc
jbe
sub
mov
ror
clc
cmovb
das
mov
into
js
mov
cwde
and
test
lahf
inc
repz
push
add
imul
and
jb
pushf
pop
or
push
stos
xor
(bad)
jg
fstp
ins
(bad)
push
daa
pop
(bad)
push
cmp
stos
pop
gs
test
xchg
lods
jne
push
jbe
jmp
inc
(bad)
mov
mov
pop
pop
dec
xchg
mov
sbb
add
inc
hlt
jae
push
pop
scas
mov
xor
mov
cmp
int3
stc
inc
xor
int3
dec
in
mov
rcl
adc
stos
inc
movs
imul
sbb
or
push
inc
rcr
sbb
add
clc
pop
arpl
scas
outs
js
mov
(bad)
cmps
repnz
pop
push
sub
adc
cmp
retf
scas
cs
mov
sub
cmp
(bad)
cmp
sbb
icebp
jns
test
xor
jno
dec
pop
inc
out
les
psubd
enter
out
cmp
or
pop
mov
mov
jnp
or
sub
cmc
push
cli
mov
push
or
add
ja
popa
out
adc
and
enter
outs
call
std
out
adc
lock
cs
cmp
loopne
xchg
push
mov
pushf
pop
pop
(bad)
pmulhuw
pop
mov
mov
dec
out
sub
int3
ret
(bad)
pop
retf
cmc
and
add
test
icebp
mov
cmp
mov
sub
retf
xchg
test
jl
lock
pop
ret
mov
call
loopne
add
xor
add
mov
lds
xor
xor
out
dec
xor
mov
cli
lods
scas
sub
add
int3
in
dec
mov
fidivr
cld
push
rcl
jmp
push
fild
inc
shl
cmps
dec
jecxz
jge
cmp
push
out
out
outs
and
xor
sbb
cmc
fwait
pop
(bad)
jmp
mov
pop
xor
es
test
movs
daa
movs
sti
dec
jmp
cmp
sbb
jmp
fwait
jb
lods
adc
mov
out
in
xchg
xchg
hlt
push
sti
out
sbb
push
jns
inc
inc
jmp
xchg
push
sbb
and
test
call
mov
xor
rol
jne
or
pop
lock
push
jne
mov
jp
ret
mov
jg
xchg
jb
call
js
gs
ins
dec
cmp
fwait
xor
gs
jmp
cmp
std
loopne
clc
mov
pop
push
lea
fdiv
cmp
in
imul
test
adc
sahf
jg
mov
xor
inc
sbb
jb
inc
repz
lods
xchg
or
mov
add
jae
jbe
sub
loop
pop
pop
rol
sbb
js
loope
mov
jnp
mov
sbb
ss
inc
pop
add
(bad)
dec
lea
xor
jns
adc
jae
mov
aas
imul
outs
push
aad
inc
adc
shl
and
mov
adc
xor
adc
mov
mov
mov
jle
dec
into
movs
pop
or
jg
mov
les
mov
or
aaa
adc
push
fld
repz
dec
inc
cmp
in
sbb
sub
mov
xlat
aaa
fist
push
jl
sahf
je
ins
mov
mov
cdq
sub
and
mov
fldcw
sahf
mov
mov
retf
retf
ins
call
mov
xchg
ret
popa
hlt
popa
ret
xchg
lea
xor
jns
pusha
mov
inc
dec
mov
ins
mov
in
mov
into
call
mov
int
push
repz
pushf
add
cmp
sub
sub
std
sbb
push
ret
jmp
test
sub
inc
retf
xor
jns
dec
jl
dec
in
lock
jp
mov
(bad)
fsubr
jge
ss
mov
and
mov
mov
fisub
out
push
sub
call
or
imul
add
mov
cwde
lods
jecxz
xchg
push
cmp
ja
(bad)
jl
xor
push
das
cmp
inc
fcom
popf
fmul
mov
fmul
dec
rdpmc
aas
adc
repz
icebp
xor
or
mov
lods
or
sbb
pop
cld
cmp
dec
and
sub
jecxz
push
popa
clc
(bad)
nop
and
sbb
mov
test
adc
(bad)
mov
jp
xor
xchg
pushf
test
loope
lods
addr16
fwait
retf
popf
xchg
jg
jns
cwde
fldenv
mov
outs
pop
cmp
pop
in
lods
jl
hlt
pop
popa
shl
pop
dec
jns
sbb
pop
aad
jmp
(bad)
jl
sbb
cs
sub
jle
fstp
aas
or
push
std
dec
cld
jp
scas
add
mov
cmp
inc
sti
test
ss
xor
loopne
jle
pop
cs
adc
sti
adc
inc
fwait
icebp
or
fldcw
test
mov
cmp
xchg
sub
(bad)
or
adc
xchg
mov
xor
into
sbb
xor
cmp
xor
xchg
push
scas
xor
cmp
stos
out
scas
sub
inc
mov
or
mov
icebp
(bad)
xor
enter
adc
repnz
clc
cdq
aaa
sub
pop
aam
xchg
ds
adc
repnz
xor
je
std
sub
(bad)
dec
fdiv
out
mov
imul
inc
leave
xchg
mov
push
dec
push
xor
stos
mov
data16
mov
lahf
nop
sub
pushf
sar
shr
xor
sbb
loop
jbe
sahf
hlt
add
add
shl
lahf
pop
and
or
mov
ds
and
outs
push
mov
shr
mov
lods
dec
iret
out
cdq
test
cmp
xor
cmp
arpl
and
push
js
push
or
add
cdq
rol
out
mov
ins
jp
cmc
cmp
xchg
stos
nop
mul
mov
mov
(bad)
ds
shl
push
rol
inc
cmp
mov
jbe
rcl
adc
xchg
xor
in
fimul
and
inc
cmp
movs
xchg
sub
push
data16
out
dec
sbb
in
xchg
movs
lods
and
adc
stc
sar
xchg
cwde
cmp
test
inc
dec
jno
mov
cmp
dec
mov
and
pop
push
call
xor
adc
dec
fsubr
dec
and
jbe
iret
mov
jns
pop
loop
rol
mov
repz
std
push
or
(bad)
not
mov
call
into
push
(bad)
fwait
jg
cmps
jno
repnz
leave
sub
xchg
push
std
mov
xchg
test
sar
aam
add
stos
lods
xchg
jne
je
jno
xor
pushf
pusha
fcomp
push
out
dec
dec
lahf
das
jne
mov
xchg
sbb
cmp
mov
imul
sub
push
and
mov
mov
and
add
movs
nop
cmp
shl
xchg
das
jge
not
mov
mov
je
pop
add
and
mov
int
jnp
fimul
inc
scas
mov
pushf
mov
push
leave
fdivr
push
jmp
jmp
and
(bad)
sub
fild
call
daa
cmp
cmp
adc
scas
lods
push
push
jmp
scas
mov
(bad)
loop
jno
std
xchg
stos
inc
mov
icebp
jmp
js
sub
xadd
jle
push
adc
or
inc
sbb
in
in
inc
xchg
(bad)
jmp
mov
pop
retf
jo
and
mov
jecxz
cmps
nop
(bad)
mov
mov
mov
call
mov
int
xchg
in
jo
inc
outs
xchg
imul
cmp
sbb
cmp
les
test
int
or
cmp
das
pop
mov
cmc
xlat
inc
idiv
fnstcw
js
pop
hlt
push
jb
sub
jbe
xor
cld
adc
enter
adc
fiadd
in
xor
iret
jns
in
mov
js
stos
inc
dec
mov
bound
ins
mov
xchg
cli
lock
(bad)
jo
scas
adc
adc
lahf
or
and
(bad)
bound
fisttp
sbb
int
mov
jecxz
mov
mov
jbe
fbstp
imul
(bad)
mov
inc
cmp
outs
mov
xchg
fsubr
and
pop
xlat
test
inc
outs
sub
dec
daa
inc
xchg
cld
cdq
lahf
paddusb
stc
loope
sar
or
fmul
clc
scas
call
fnstcw
jp
pop
cmps
mov
repz
ss
rcr
pop
aas
push
ds
dec
clc
sub
ins
xchg
adc
inc
xor
loope
adc
inc
dec
std
add
pushf
lea
out
adc
int3
sbb
xchg
dec
pop
pop
scas
or
and
add
rol
push
pop
outs
sar
fild
mov
movs
enter
js
lods
push
test
push
xor
fsub
outs
mov
test
dec
rol
adc
ja
ds
sub
add
sbb
fld
sbb
arpl
jns
jno
int
adc
loop
jae
and
dec
adc
sbb
cmp
dec
(bad)
dec
call
cmps
push
iret
or
xlat
push
inc
inc
xor
test
push
jmp
aad
retf
dec
popa
xor
int
(bad)
repnz
xchg
fimul
mov
push
push
dec
ret
dec
inc
fidivr
addr16
push
outs
cmps
rcl
mov
pop
mov
ret
ja
mov
test
bound
ret
je
ret
inc
rcl
hlt
mov
add
pop
mov
cmps
xor
dec
jl
sbb
inc
jno
push
(bad)
fldenv
mov
stos
inc
je
cli
pop
imul
mov
jecxz
adc
cdq
inc
outs
dec
push
inc
add
cmp
mov
jne
ins
das
push
or
mov
jg
or
cli
test
test
fucomp
cmp
into
jne
mov
sar
ss
fs
mov
jne
les
xor
dec
sti
popa
out
mov
mov
adc
ror
sysenter
test
jmp
push
mov
adc
mov
xor
fdiv
push
xchg
leave
adc
mov
pop
dec
iret
mov
ja
ffreep
mov
int3
in
cmc
jno
or
pop
or
fild
pushf
jmp
cdq
pop
test
lods
mov
push
dec
dec
dec
stos
mov
push
je
scas
inc
or
aad
adc
adc
aam
stos
hlt
mov
jno
ins
arpl
invd
out
cmp
scas
mov
retf
test
pop
jmp
jmp
outs
add
sbb
push
jp
xlat
ffreep
mov
sub
and
mov
push
and
jb
mov
cdq
mov
inc
retf
ror
or
fcomp
add
mov
movs
mov
mov
xor
mov
mov
mov
loope
sbb
(bad)
jmp
xor
imul
mov
adc
add
jns
xchg
push
jae
addr16
ret
xlat
ficomp
jp
push
xor
add
add
fiadd
pusha
nop
xor
push
cwde
out
and
dec
sbb
movs
(bad)
mov
push
repz
jbe
xchg
lock
add
int
cdq
mov
les
cmp
ror
in
leave
pop
pop
fnsave
push
out
cdq
and
sub
sbb
dec
pop
test
and
in
mov
sti
inc
add
das
xor
xchg
in
dec
scas
xchg
or
loopne
or
sub
adc
in
repz
mov
jno
addr16
jbe
das
icebp
lea
cmp
xchg
xor
push
out
in
cmp
test
arpl
jb
xchg
sub
mov
jecxz
mov
adc
mov
push
ss
push
stos
fistp
cmps
jmp
js
out
stos
mov
cld
push
add
out
mov
jl
xor
sub
and
(bad)
jecxz
pop
cmp
xchg
into
mov
mov
test
sbb
jno
xor
inc
cmc
mov
pop
jns
dec
mov
and
scas
jp
push
addr16
push
aaa
cmc
pop
aaa
shl
test
call
xchg
inc
shr
(bad)
out
fimul
sub
daa
jnp
dec
cwde
xchg
sub
test
cmp
loop
test
xor
jb
sbb
cld
popa
dec
retf
push
out
nop
pop
bound
xchg
fbld
rcr
ja
pop
retf
xor
mov
hlt
mov
mov
jecxz
cdq
jg
mov
mov
out
add
(bad)
fistp
ins
jne
mov
in
push
in
call
cmps
mov
test
push
call
push
inc
adc
fwait
pusha
cmp
xchg
repnz
or
daa
mov
jbe
fs
out
ins
repz
mov
shl
sub
inc
jle
retf
pushf
std
sahf
jnp
jae
inc
mov
xchg
mov
inc
xor
mov
sbb
adc
ret
leave
int
mov
pop
inc
stos
scas
push
pop
jl
fistp
mov
push
nop
cld
iret
fwait
mov
jno
dec
xlat
lods
shl
add
call
mov
cmp
push
cld
adc
sub
push
outs
fst
(bad)
clc
add
fnsave
ret
mov
es
in
lds
ret
cmp
adc
jp
pop
popf
xchg
jae
sar
enter
sbb
cmp
mov
mov
and
ret
clc
cmp
xor
es
movs
mov
and
pop
jge
daa
cdq
es
jge
mov
pusha
data16
inc
or
xchg
lahf
fistp
je
mov
jb
adc
inc
in
cmp
or
dec
faddp
pop
jle
jge
cmp
bsr
pop
mov
cmp
add
dec
inc
stos
ds
(bad)
dec
cmps
xchg
leave
and
out
out
aaa
xor
lods
retf
push
je
cli
add
or
movs
and
inc
mov
pop
in
xabort
sbb
std
iret
mov
std
enter
or
adc
js
xchg
inc
add
jg
cvtpi2ps
in
daa
jl
mov
into
adc
int3
mov
arpl
xchg
push
icebp
and
cmps
xor
dec
ret
cs
adc
out
jmp
or
stc
outs
jne
xor
jmp
push
ds
mul
mov
gs
lods
cwde
pop
xchg
in
jmp
xor
sti
mov
jmp
adc
call
dec
pop
mov
adc
xlat
add
push
into
xlat
mov
das
push
js
mov
rcl
dec
mov
push
inc
aas
cmc
stc
movs
loope
int
shl
nop
jb
ficomp
loope
cmp
(bad)
pushf
aam
jns
dec
and
or
pushf
dec
pusha
fwait
and
sbb
ret
std
mov
aad
xchg
pop
dec
mov
jmp
rcl
jo
fnstenv
addr16
mov
aas
mov
xchg
push
or
(bad)
sub
outs
add
mov
xchg
lock
lds
or
dec
push
fdiv
neg
fs
dec
mov
(bad)
push
cmp
div
sbb
in
dec
sub
inc
mov
cmps
pop
sar
popa
sbb
mov
retf
dec
mov
loop
jmp
das
cmp
adc
inc
mov
jp
aad
stos
mov
add
cli
repz
adc
jb
jae
(bad)
mov
adc
scas
mov
aam
push
test
sub
cmp
inc
cld
cli
loope
aad
push
jecxz
mov
cld
or
mov
les
jo
cmp
hlt
call
aam
push
stos
ds
das
mov
cli
shr
icebp
cdq
movs
dec
in
popf
mov
mov
cmp
or
loopne
pop
in
call
fimul
inc
mov
push
ds
sbb
out
pop
xor
sar
add
or
stos
inc
repnz
xchg
retf
xchg
mov
shr
stc
ds
xor
xlat
sahf
icebp
jmp
repz
out
sub
add
xchg
fcomi
push
adc
jnp
or
sti
lods
and
xor
push
sub
clc
or
mov
mov
aaa
adc
adc
push
ficom
or
xchg
xor
test
xor
stos
xor
push
pop
mov
mov
daa
or
adc
in
xlat
stc
dec
ss
pushw
cmps
dec
ins
jnp
pop
mov
ins
push
adc
movs
test
pop
neg
mov
xor
call
mov
xor
and
inc
(bad)
lahf
shr
xchg
inc
xlat
cmp
sub
jae
pop
iret
sub
shl
cld
div
lock
out
das
sti
scas
movs
in
mov
or
jmp
sar
jo
adc
xor
xchg
xchg
mov
pop
fwait
(bad)
fnstsw
dec
adc
outs
pop
inc
inc
sub
shl
fs
jns
sbb
mov
arpl
cmp
jno
icebp
jmp
mov
sbb
jb
xor
dec
jl
es
push
sbb
jp
sti
adc
popa
cwde
repz
jge
add
xchg
and
pusha
fucom
push
call
sbb
js
test
lods
jl
cmp
xchg
pop
iretw
sbb
dec
inc
mov
mov
cmp
or
and
or
cmp
out
inc
sbb
aas
fisttp
mov
pop
push
lods
push
iret
out
iret
sub
xchg
push
pop
dec
and
or
in
dec
cwde
sbb
test
xor
lahf
fimul
shr
test
sub
add
hlt
dec
jge
dec
(bad)
or
pop
pusha
or
(bad)
or
das
cld
xchg
cdq
dec
(bad)
jmp
mov
jmp
adc
(bad)
cmp
pop
sub
xor
push
mov
sbb
repnz
pop
cmp
ins
push
pop
sbb
xor
push
xchg
pop
inc
jmp
out
sti
test
nop
pop
shl
mov
lahf
repz
mov
xchg
or
inc
jmp
ret
mov
stos
ror
ins
rcl
pop
sub
popa
adc
push
rol
xor
inc
movs
mov
pop
and
adc
fstp
sbb
cmc
xlat
ror
in
je
mov
and
mov
mov
mov
jl
cdq
dec
cmp
cmp
ret
scas
push
dec
jg
lahf
out
push
fwait
imul
add
jecxz
lahf
cmps
jecxz
mov
add
and
or
ficom
mov
sub
leave
(bad)
cmp
outs
loop
(bad)
push
sub
xchg
inc
adc
jno
test
gs
cmp
xchg
jp
pop
enter
xchg
mov
pusha
loope
(bad)
sahf
addr16
js
aas
add
sbb
push
cli
psrlq
leave
cmc
xchg
dec
mov
cmp
in
sar
loopne
or
and
or
into
jl
ds
cmc
cmc
into
ds
call
jecxz
or
inc
shl
sub
jns
imul
and
fild
fwait
pop
rcl
scas
sti
jle
dec
aas
sti
inc
jmp
sar
pop
and
das
dec
dec
inc
jmp
xchg
inc
jp
pop
mov
adc
shl
sti
loopne
dec
sbb
jnp
rol
xchg
out
mov
mov
cmp
mov
push
pop
mov
fsubr
out
push
ja
pop
sub
pop
scas
add
inc
jle
sbb
sbb
xor
repz
dec
out
dec
test
mov
pop
ret
push
sub
repz
mov
std
cmp
xchg
or
in
or
cmps
rol
ins
or
stc
outs
xchg
in
mov
xor
loope
mov
sbb
xchg
lods
cli
cmps
cmps
sbb
pop
retf
mov
xchg
enter
inc
ja
dec
jle
push
mov
sbb
cmp
sbb
dec
mov
mov
pop
movs
js
pop
jns
ss
inc
out
adc
inc
loope
cmp
popf
aam
loop
loopne
mov
push
rcl
sbb
sbb
test
jnp
popa
pop
jae
loop
jo
mov
add
pop
jmp
cmp
fisttp
loopne
inc
(bad)
daa
jp
sub
hlt
sbb
fldenv
in
movs
mov
mov
in
jo
and
sbb
pushf
je
les
jg
mov
addr16
sahf
test
jg
mov
dec
dec
lods
xor
mov
jecxz
pop
sub
push
fisubr
loope
sbb
mov
dec
sti
lds
sub
pop
jl
(bad)
xchg
leave
dec
inc
mov
jge
icebp
and
mov
movs
les
inc
mov
pop
jns
retf
repz
mov
or
nop
in
ja
out
and
jecxz
lds
dec
int
(bad)
and
mov
movs
mov
es
xchg
clc
xor
push
sbb
into
(bad)
mov
mov
jle
push
mov
xor
ins
fist
shl
xor
shl
jns
(bad)
(bad)
bound
rcr
sub
sbb
fisubr
gs
or
xor
out
int3
cld
cs
inc
pop
cmp
loopne
pop
jecxz
repz
sub
and
mov
jb
cmp
cdq
loop
clc
pop
rcr
scas
mov
sbb
aaa
xchg
cmp
cmp
jl
or
mov
inc
ss
cmp
or
shl
inc
xor
ja
inc
add
das
stos
pop
or
mov
cmp
icebp
cmp
cmp
push
jmp
fmul
add
aam
aam
(bad)
and
dec
es
(bad)
pop
popf
stc
xor
pop
outs
test
push
enter
shl
out
jge
(bad)
fisttp
adc
xchg
xchg
fcom
add
add
pop
loopne
in
adc
cmc
jae
(bad)
(bad)
sbb
in
mov
jecxz
aaa
sub
leave
sub
and
stos
cmps
push
or
jecxz
mov
pop
movs
fist
fcomip
pop
add
retf
cdq
repz
xchg
repz
test
xchg
mov
push
pop
in
fsub
push
xchg
sbb
adc
retf
lea
push
cmp
jns
std
inc
and
xor
les
lahf
cwde
repnz
push
sbb
mov
outs
stc
pop
mov
jp
jmp
xor
sub
jb
push
shl
(bad)
jge
mov
(bad)
pop
aaa
fimul
stos
jp
push
rcl
js
outs
in
dec
adc
inc
(bad)
(bad)
sbb
mov
loop
add
mov
test
xor
lds
(bad)
pushf
jns
xor
int3
xchg
adc
(bad)
dec
add
push
rol
pop
xor
not
push
lock
push
jg
xchg
push
inc
out
repnz
mov
into
pop
inc
mov
or
ret
push
dec
or
pop
test
outs
popa
sub
mov
fwait
xchg
stos
lds
jno
xor
adc
xor
jae
cld
add
dec
mov
ds
and
add
in
pop
push
cmps
sbb
jmp
stc
lea
sub
das
cli
jns
aaa
ds
outs
aam
mov
cmp
imul
add
jb
sub
mov
inc
mov
sbb
cmc
and
dec
cmp
jp
iret
stos
nop
mov
mov
cmp
jecxz
daa
push
popf
and
bswap
add
stos
call
leave
leave
mov
stc
add
ds
in
add
xor
jns
sti
xchg
or
data16
sti
xchg
movs
mov
lods
mov
lods
mov
add
in
aas
add
push
stc
jge
jmp
dec
mov
js
jg
icebp
jmp
arpl
sqrtps
lds
dec
mov
xlat
mov
fadd
retf
jg
test
mov
cmps
jbe
ret
sti
int3
mov
call
imul
mov
sbb
add
retf
sbb
ja
jl
xor
or
mov
xchg
pop
loop
mov
retf
push
cli
push
ja
xchg
retf
and
cmps
lods
movs
cmp
daa
(bad)
out
fdivp
dec
lahf
movs
mov
jge
cmps
out
dec
cmp
cmps
retf
mov
dec
mov
jmp
jo
adc
in
(bad)
adc
inc
pop
xchg
and
sub
push
or
sub
and
mov
hlt
daa
sub
mov
adc
daa
lods
dec
mov
mov
sub
ret
and
es
xchg
(bad)
leave
cmp
loopne
add
ds
sbb
mov
xor
icebp
mov
add
dec
or
adc
mov
mov
sbb
jo
jg
and
cmp
sbb
cmp
xor
dec
iret
cmps
(bad)
fld
or
or
dec
mov
call
call
and
dec
and
loop
aas
enter
xchg
std
cli
xor
xchg
stos
test
adc
test
jp
mov
ins
ins
mov
push
jae
adc
mov
in
mov
repnz
jp
into
jo
adc
cmc
popa
mov
pop
jmp
(bad)
fcom
push
(bad)
pop
mov
xchg
lods
push
xor
mov
mov
mov
ror
mov
jae
dec
leave
loope
jp
enter
das
repnz
pusha
or
push
pop
movs
(bad)
bound
push
jg
dec
cmp
xchg
cmp
lock
aam
dec
pop
loopne
push
scas
lods
retf
pop
xchg
sub
ins
out
sbb
retf
mov
in
in
adc
add
dec
add
mov
or
cmp
retf
dec
int3
xchg
mov
mov
xor
icebp
push
inc
push
jb
shl
pop
and
xchg
push
mov
pop
xchg
movs
ja
adc
jle
mov
iret
popa
pop
lea
inc
add
into
jmp
and
pop
ja
sbb
mov
mov
int
scas
xchg
pop
lahf
add
movs
(bad)
xchg
lea
pop
shl
sub
gs
sub
push
cmps
inc
mov
sub
loope
ret
jmp
(bad)
sub
outs
fdiv
pop
repz
pop
ins
adc
xor
ins
mov
bound
(bad)
xchg
js
sub
pop
xlat
jmp
mov
inc
mov
dec
mov
sub
lods
test
inc
addr16
jno
cmps
push
push
jmp
inc
in
mov
pusha
pop
sbb
mov
push
fistp
or
push
push
and
ins
aaa
jbe
adc
xor
and
cwde
addr16
cmc
jmp
or
sti
push
push
stos
jecxz
inc
inc
sar
lahf
popa
dec
push
add
je
adc
test
sub
xchg
sbb
fimul
mov
push
cmc
cs
div
pop
sbb
test
cmp
loope
iret
add
add
push
mov
adc
pop
dec
xchg
xchg
add
pop
xchg
sub
ret
mov
lahf
pop
dec
pop
inc
push
in
mov
out
inc
mov
push
out
mov
add
outs
ins
mov
pop
push
arpl
sbb
gs
xchg
add
loop
(bad)
ja
mov
mov
xlat
push
ja
js
imul
adc
bound
dec
mov
cmp
addr16
shl
leave
dec
adc
push
out
sbb
fsubr
fs
sbb
cmp
fcmovu
sub
test
clc
sahf
or
lods
pop
dec
int3
add
stos
mov
lea
sub
ds
xor
in
adc
add
mov
adc
inc
pop
es
(bad)
sub
pop
cmc
push
pop
pusha
sub
rcr
mov
dec
mov
push
inc
cs
jg
mov
xchg
jp
mov
fild
dec
stos
sbb
jecxz
pop
test
mov
mov
jle
jnp
adc
xchg
pop
push
add
scas
add
push
(bad)
jecxz
in
jl
popf
pop
xor
inc
gs
dec
stc
fild
xchg
push
fwait
fs
inc
or
mov
stos
les
sbb
jne
in
test
(bad)
test
pop
mov
inc
ins
jae
stc
sbb
rcr
sbb
add
lea
xor
jp
movs
push
imul
ins
sbb
push
pop
mov
bound
cmp
in
icebp
dec
cmps
sbb
dec
(bad)
adc
mov
cmp
retf
imul
jb
shl
push
call
leave
int
pop
mov
xchg
xor
jmp
adc
shl
hlt
repz
inc
xchg
inc
lods
jge
ds
mov
mov
rcl
push
xchg
xchg
xlat
jl
pop
push
jg
xchg
pop
dec
loop
enter
xchg
add
in
rol
movs
xchg
popf
retf
retf
int
mov
stos
pop
in
imul
jp
dec
mov
dec
pop
or
hlt
ficomp
(bad)
daa
xor
dec
and
or
and
scas
test
ss
mov
xchg
and
ds
in
cs
repnz
or
pop
shr
mov
out
and
sahf
dec
repz
sub
mov
pop
add
ror
adc
in
retf
ss
(bad)
cmp
mov
addr16
or
stos
call
sbb
jbe
mov
and
cdq
push
call
adc
pop
fnsave
and
push
lahf
cmp
das
cli
sbb
sub
or
(bad)
retf
out
pop
sar
push
adc
or
adc
pop
xchg
dec
mov
cld
or
(bad)
sbb
xchg
lods
or
and
push
xor
imul
mov
sbb
ret
mov
mov
inc
cmc
jb
xor
cld
adc
or
mov
call
movs
xchg
mov
pop
cwde
sbb
int
sub
cs
jnp
pop
dec
int3
pop
retf
push
pushf
inc
sub
repnz
mul
or
pop
outs
xor
jmp
in
inc
inc
pop
xchg
ret
push
cmps
adc
cmp
pop
sbb
xor
movs
pop
add
or
lea
mov
mov
mov
inc
fmul
cs
push
or
test
and
cwde
popf
cmps
inc
jmp
cs
dec
ss
fidiv
sub
sbb
xor
add
inc
add
xor
mov
iret
sub
push
xor
mov
arpl
enter
mov
or
es
sub
and
ror
mov
adc
das
test
cmp
(bad)
fmul
arpl
fcmovnb
pop
mov
xor
fist
pop
ins
cwde
jno
(bad)
jg
inc
mov
jmp
and
lods
adc
scas
xlat
in
fwait
cmps
pop
jmp
mul
aas
(bad)
shr
jg
fdiv
dec
mov
js
cmps
cmps
dec
fucom
xchg
popa
mov
in
jmp
fld
mov
stos
push
and
das
nop
mov
xor
(bad)
cli
lea
push
and
inc
push
in
jmp
xchg
lds
int3
rcr
sbb
aam
mov
mov
mov
jbe
push
cmp
pop
int3
sub
fstp
call
and
xchg
fs
inc
push
cli
push
(bad)
push
xor
mov
cmp
jecxz
inc
(bad)
mov
push
inc
addr16
jo
add
xchg
movs
imul
call
mov
shl
(bad)
mov
addr16
cmp
and
test
push
or
fst
xchg
adc
adc
inc
jl
int3
outs
int3
dec
mov
icebp
outs
shr
inc
jnp
mov
jbe
xchg
sub
or
xchg
pop
pop
lock
retf
and
(bad)
in
cmp
jmp
and
test
shl
xchg
xor
jl
int
inc
jmp
test
arpl
ds
dec
(bad)
aas
xor
dec
ds
stos
push
and
cmp
mov
data16
aas
dec
add
dec
add
icebp
add
popf
sbb
shl
sub
out
mov
dec
iret
sbb
jg
adc
cmp
hlt
test
sbb
les
retf
and
sbb
push
push
xchg
lods
mov
xlat
jmp
or
inc
xor
add
cmc
mov
sbb
and
int3
cmp
data16
mov
push
lods
inc
leave
dec
pop
mov
pop
pop
mov
fistp
inc
gs
xchg
dec
into
jge
sti
push
xchg
mov
jecxz
fstp
jno
xlat
ins
mov
inc
popf
dec
sti
adc
jmp
rcr
inc
iret
mov
lds
cmp
movs
aas
jbe
sbb
in
icebp
sti
cmp
leave
mov
scas
outs
addr16
std
fsubr
add
add
dec
mov
lods
jae
test
pop
int3
(bad)
loopne
and
jp
dec
loope
and
jbe
pop
stc
jge
push
xor
add
jno
test
add
hlt
sbb
imul
aaa
aam
test
push
and
mov
call
jle
sbb
shr
fdivr
mov
xlat
call
sub
call
jp
ins
dec
mov
scas
or
loope
leave
fiadd
pop
hlt
test
push
mov
(bad)
xor
fist
push
int
outs
fwait
dec
ror
xchg
outs
cmp
int
iret
imul
out
dec
mov
mov
lds
test
repz
mov
sub
sbb
shl
je
mov
movs
pop
fist
and
mov
pop
mov
test
loop
movs
dec
(bad)
sbb
and
movs
pop
adc
rcr
cmp
nop
adc
dec
aam
mul
(bad)
fwait
je
retf
sub
or
cmp
adc
jnp
call
mov
cmp
and
cwde
das
aam
cld
mov
cld
cmc
push
push
adc
adc
cwde
std
das
inc
cdq
jne
test
dec
or
das
pop
jae
rcr
mov
inc
lds
loop
xchg
retf
ins
aaa
scas
inc
montmul
cmps
lds
sbb
lods
jg
pop
(bad)
popa
mov
enter
aam
les
mov
ss
push
hlt
mov
mov
pop
(bad)
test
int
nop
pop
fcom
jmp
popf
mov
out
popf
or
mov
in
xor
xor
inc
es
dec
mov
lods
cmp
into
cld
sbb
pop
adc
cmp
scas
or
sti
ror
lock
sub
mov
mov
daa
in
xchg
pop
jno
pop
fnstsw
(bad)
mov
fucomp
and
aaa
pop
pop
xlat
sbb
shr
push
jge
xchg
push
adc
fild
pop
dec
es
mov
aam
push
movs
cli
mov
ins
inc
cmp
ins
loope
push
lahf
mov
cwde
pop
imul
mov
mov
in
call
add
popf
ret
imul
ret
addr16
mov
adc
aaa
inc
jge
add
jb
dec
and
push
dec
stc
xchg
movs
mov
nop
hlt
add
add
pop
mov
jne
jnp
popa
pop
pop
stos
push
mov
nop
xor
loope
sets
cmp
pop
dec
rcr
lods
or
repnz
sbb
out
(bad)
add
dec
push
pop
retf
in
jno
imul
nop
out
ins
mov
or
add
push
push
push
(bad)
stc
adc
inc
mov
mov
push
bound
or
adc
sbb
int
je
push
add
mov
dec
xor
jle
jo
stc
stc
sub
bound
push
and
xchg
xchg
mov
hlt
pop
aaa
movs
jne
aas
push
jb
out
in
or
or
xor
push
ret
fstp
sub
mov
aas
or
mov
xlat
pop
add
jbe
movs
mov
xchg
mov
jb
and
jb
adc
das
mov
mov
pop
out
adc
shl
stc
jnp
outs
sbb
mov
int
sub
pop
or
add
mov
inc
sbb
mov
imul
loope
add
rol
inc
lods
xlat
pop
pop
mov
add
push
dec
mov
packssdw
push
call
(bad)
pop
iret
ficomp
frstor
xchg
popf
sub
dec
inc
adc
dec
jle
jecxz
and
xchg
mov
iret
inc
std
sbb
xchg
pop
retf
mov
es
jmp
jo
sbb
pop
sub
xchg
sbb
sub
enter
xor
cmp
jne
mov
rcr
outs
imul
xor
mov
int
out
dec
cmp
out
jmp
psrad
jb
daa
mov
and
sbb
cmp
cwde
shr
outs
mov
dec
daa
sub
mov
ret
jle
cmp
adc
jg
mov
cmc
inc
cs
xchg
adc
imul
ja
in
arpl
or
lds
xor
rol
push
push
sub
out
loopne
or
xchg
xor
scas
fwait
ins
hlt
mov
dec
xchg
loop
push
add
aaa
test
and
fucom
iret
outs
(bad)
dec
mov
pop
frndint
pusha
mov
mov
mov
mov
jnp
int
mov
ret
(bad)
(bad)
not
std
lea
fidiv
jae
sub
mov
add
(bad)
fwait
pop
sub
loopne
mov
jnp
add
jbe
lahf
cmp
push
ss
shl
adc
sub
(bad)
sti
add
int
jecxz
add
mov
and
add
xchg
pop
aas
ins
add
dec
push
hlt
mov
out
add
(bad)
rcr
pop
retf
jle
iret
mov
mov
lock
and
cmps
cwde
xchg
call
pop
je
bound
and
add
retf
stos
retf
mov
shr
mov
jne
add
mov
stc
mov
cdq
int3
mov
(bad)
xchg
mov
cmps
and
cdq
ficomp
mov
dec
ins
leave
add
cld
pop
jl
push
mov
xor
inc
in
add
cwde
icebp
pop
stc
jg
or
add
repz
adc
inc
out
in
test
push
jl
mov
push
mov
add
cmp
shl
in
nop
clc
or
dec
sti
clc
mov
fsubr
addr16
mov
adc
cmp
dec
cmps
cmp
xlat
inc
mov
lods
mov
mov
lds
cmp
hlt
mov
adc
jmp
mov
mov
fiadd
cdq
in
test
cmps
cmc
or
jmp
outs
xor
lds
pop
fst
and
clc
sbb
fdivr
cmp
inc
xchg
sbb
dec
cmp
mov
xchg
xor
aam
fnstcw
mov
int
lea
xchg
mov
adc
xor
in
mov
les
cmp
pop
add
push
mov
mov
cmc
call
xchg
sub
movs
enter
jle
imul
jnp
inc
jle
(bad)
adc
sbb
sti
fld
ror
int3
(bad)
(bad)
in
xchg
dec
ins
push
dec
ja
movs
cwde
rcr
in
jg
scas
jle
pop
sbb
test
and
xor
adc
mov
push
mov
(bad)
mov
sbb
pop
inc
cld
scas
jl
cmp
mov
ins
push
xlat
mov
mov
cmp
jno
jb
fwait
(bad)
rcl
cld
mov
inc
jmp
cli
in
lea
sbb
add
neg
imul
aam
sbb
call
fsubr
mov
dec
ins
adc
test
push
scas
std
and
mov
fld
xchg
nop
or
cld
(bad)
sbb
stos
adc
es
sub
sub
xchg
in
jnp
xchg
or
jecxz
jae
iret
or
cmps
add
jb
icebp
dec
jl
ror
add
adc
ret
mov
mov
cli
call
pop
aaa
push
in
ror
stos
js
retf
xchg
jne
retf
cmps
and
loop
icebp
leave
push
xor
shr
and
ret
icebp
fscale
retf
movs
sti
sub
repz
fldcw
dec
pusha
jb
or
test
unpcklps
retf
(bad)
inc
jne
mov
stos
dec
arpl
or
and
add
sbb
jne
movs
or
xchg
in
das
pop
div
ret
in
add
out
sbb
dec
jmp
cwde
fiadd
jle
add
pop
dec
(bad)
ds
and
pushf
arpl
and
out
mov
loope
fidivr
(bad)
out
inc
cwde
jmp
ror
ret
fst
cmp
mov
and
clc
mov
mov
mov
test
push
stc
and
(bad)
iret
(bad)
retf
mov
sbb
jmp
push
les
fsub
pop
fistp
inc
(bad)
jb
jge
push
sub
fistp
inc
pop
shl
mov
into
mov
icebp
sbb
test
or
xchg
jb
add
push
push
adc
mov
sbb
(bad)
retf
aad
sbb
pop
jo
push
dec
sbb
pushf
xchg
xlat
push
adc
stos
cmovp
push
addr16
rcl
dec
iret
and
mov
mov
gs
fist
aam
mov
mov
ret
sahf
add
jo
or
btr
xor
lds
inc
dec
inc
mov
inc
jne
(bad)
adc
cs
push
mov
stos
les
(bad)
aas
je
cmp
cli
pop
test
inc
add
or
mov
out
ror
call
sub
xchg
inc
lea
adc
fwait
addr16
cmp
xor
inc
xor
xlat
jl
pusha
mov
shl
test
data16
push
stos
jno
loop
lahf
push
mov
aam
jns
add
sub
popa
popa
dec
(bad)
test
sub
sbb
push
out
icebp
mov
push
inc
xchg
adc
mov
(bad)
rcr
mov
mov
mov
ror
es
xor
sub
loopne
dec
push
in
neg
dec
mov
js
pop
xchg
pop
xchg
cmp
ret
fucom
adc
add
div
jns
jg
loop
bound
imul
adc
dec
int3
pushf
lods
sti
dec
retf
arpl
fld
xor
push
into
stc
aas
cmp
push
loop
bound
shr
xchg
and
stos
icebp
lahf
ret
cmp
jnp
(bad)
(bad)
test
enter
out
and
ja
orps
popf
sub
xor
xchg
jo
cli
pushf
loope
(bad)
(bad)
pop
xchg
cmp
into
jne
je
xor
loop
push
push
arpl
sub
push
jo
mov
shr
cmps
loop
dec
addr16
inc
inc
pop
iret
arpl
sub
xor
push
cld
ja
fstp
add
jbe
xlat
xchg
mov
adc
in
jle
mov
mov
mov
add
push
dec
std
imul
cmp
stc
scas
js
(bad)
(bad)
pop
xlat
test
xor
push
mov
fwait
in
aam
out
in
dec
ror
xchg
push
and
pop
adc
sub
jmp
push
xor
fcomp
sub
dec
mov
dec
fcomip
sti
adc
sub
cmp
adc
sub
inc
push
push
imul
sub
dec
rcr
test
cmp
sahf
mov
(bad)
enter
(bad)
jne
dec
push
jle
adc
cli
pop
pusha
scas
cmp
fucom
or
mov
lods
inc
iret
out
push
imul
mov
cs
push
imul
fst
cmp
ss
fisttp
idiv
cwde
mov
or
in
dec
mov
jno
out
jne
xor
mov
inc
sbb
push
aaa
fadd
cmp
dec
lahf
movs
inc
aad
add
movzx
mov
in
jo
fwait
and
jno
or
lods
mov
add
add
call
push
ror
movs
inc
mov
test
cmps
mov
rcr
dec
mov
mov
inc
retf
push
cmp
in
xchg
lods
dec
scas
icebp
xchg
(bad)
scas
mov
add
or
mov
iret
jmp
add
emms
sub
xor
jb
jecxz
nop
cdq
ins
popa
sbb
arpl
in
ret
mov
cld
scas
popf
ffree
mov
mov
jle
xchg
iret
std
retf
(bad)
and
ins
mov
les
(bad)
dec
adc
(bad)
lock
pop
cmps
shr
mov
sbb
and
xchg
push
lds
bound
int
push
mov
enter
mov
je
xor
add
xor
or
sbb
test
inc
out
and
cmp
adc
loopne
jge
test
ret
mov
inc
out
out
outs
repnz
scas
lods
inc
pop
or
add
pusha
sbb
cmps
xor
out
test
gs
add
mov
mov
fwait
mov
dec
xchg
or
or
xchg
das
inc
bound
out
push
add
push
lods
rcr
rol
xor
in
dec
adc
rcr
mov
or
(bad)
sbb
mov
mov
inc
test
sahf
fwait
push
xor
ins
movs
enter
rcl
movs
jo
stos
and
pop
add
test
jg
and
popf
fldenv
dec
xor
mov
(bad)
adc
sbb
xchg
cdq
scas
fstp
or
add
out
xchg
push
and
out
fcomp
fmul
sbb
gs
out
cmps
cdq
cmp
mov
fcmovne
or
lods
dec
cdq
pop
call
cdq
mov
call
or
sub
dec
sub
inc
and
cmp
sbb
sbb
xor
push
xchg
jbe
add
xchg
dec
mov
in
mov
mov
ret
push
pop
adc
dec
fld
pop
add
rol
aad
adc
jmp
lds
cmps
cmps
data16
jg
retf
xchg
inc
cmp
dec
ja
pop
mov
adc
mov
in
fstp
hlt
mov
dec
inc
idiv
and
test
inc
stc
push
daa
xchg
jecxz
pop
(bad)
cmp
inc
jmp
aas
mov
mov
cmp
xchg
xor
pop
sar
scas
rol
xlat
jl
nop
movs
es
jmp
dec
xchg
mov
retf
dec
push
or
mov
mov
mov
not
sahf
cdq
sub
mov
out
bound
inc
cmp
call
jge
test
pop
mov
jg
arpl
xchg
loopne
ret
in
es
dec
sub
icebp
nop
test
jmp
jmp
jmp
cmp
pop
dec
(bad)
pop
pop
dec
mov
jl
adc
or
sub
sub
and
ds
mov
inc
jb
dec
jnp
ja
jl
xor
retf
shl
push
dec
push
inc
retf
std
aam
jb
shl
cmp
cmp
je
pop
inc
mov
dec
(bad)
mov
mov
push
adc
xlat
add
mov
push
punpcklwd
jmp
xchg
loop
repnz
(bad)
daa
xchg
push
jb
jb
lods
jns
or
inc
imul
retf
push
add
loope
xor
mov
es
(bad)
repz
ins
mov
or
into
fwait
push
(bad)
adc
icebp
test
and
mov
popf
or
mov
lahf
mov
adc
or
les
cdq
jnp
fisub
push
je
add
addr16
add
out
sub
dec
push
sub
dec
cld
mov
xchg
push
mov
jge
in
and
xchg
fidivr
xacquire
fs
leave
adc
xchg
mov
(bad)
loopne
(bad)
out
xor
push
sbb
inc
fistp
push
cli
mov
fwait
ds
int
sub
vmovaps
xchg
or
ins
mov
sqrtps
or
jp
adc
retf
arpl
jno
pop
or
pop
pop
or
xor
sbb
inc
inc
xlat
push
mov
outs
push
inc
popa
fisubr
push
adc
cwde
in
jl
dec
xchg
sbb
dec
out
dec
out
mov
ds
shl
xchg
or
fs
pop
enter
add
sbb
lock
jo
pop
add
mov
stc
push
xchg
adc
bound
outs
cdq
fsub
push
pop
or
pop
jg
sbb
add
and
inc
xchg
xor
imul
movs
aas
mov
lea
mov
and
shl
(bad)
cli
mov
mov
inc
mov
add
mov
mov
inc
push
iret
cs
(bad)
ins
pop
retf
lahf
sub
fisubr
repnz
repz
movs
jle
pop
push
cmc
test
cli
lods
pop
sub
add
xchg
push
(bad)
add
into
push
xchg
(bad)
popa
adc
jae
data16
add
cwde
shl
test
ret
cmp
pop
fist
add
add
stc
clc
pop
call
mov
pop
lods
dec
cmp
cs
test
xchg
dec
inc
jecxz
and
mov
pop
ins
inc
sahf
loop
mov
scas
sub
cld
(bad)
or
and
jmp
iret
fistp
ja
imul
jns
cmps
jecxz
mov
cld
jbe
xrelease
jb
mov
sar
sub
rcl
jb
pop
(bad)
cld
dec
jge
add
and
ffree
dec
std
mov
inc
jo
jns
es
sub
mov
pop
push
pop
rol
adc
sub
into
mov
loope
cli
mov
adc
or
jge
mov
pop
(bad)
div
mov
into
cmp
mul
jb
mov
push
(bad)
popf
xchg
retf
cmp
mov
xchg
sbb
daa
leave
fdivr
jle
repz
xor
or
test
push
add
xor
cmps
inc
cmps
gs
cmp
scas
cmp
sub
sbb
pop
pusha
add
fdivr
fnstcw
fsub
cmp
add
clc
push
cmp
cmps
dec
jp
xchg
pop
push
push
push
xor
xor
lea
(bad)
jge
iret
cmc
sub
xor
push
ins
jo
imul
dec
jecxz
dec
inc
pop
sub
movs
mov
out
push
sbb
sbb
pop
xchg
dec
xchg
std
fdiv
pop
(bad)
mov
add
lds
adc
int3
loope
scas
sub
sub
cld
xor
mov
xor
aas
add
and
sub
leave
iret
cmps
add
cmc
loop
mov
out
mov
fwait
cmp
imul
and
or
not
iret
leave
dec
scas
jle
sub
mov
dec
stc
fadd
pop
fst
dec
add
arpl
and
push
iret
sahf
sbb
cmp
push
xchg
(bad)
jmp
pop
sub
imul
mov
movaps
inc
mov
jecxz
add
dec
pop
mov
mov
adc
push
sti
cpuid
xchg
cmp
pop
lods
push
or
xchg
inc
xchg
iret
add
dec
(bad)
cli
popf
adc
jns
leave
pop
mov
sbb
dec
fcomp
inc
cmc
cmps
inc
pop
je
mov
push
inc
xor
sbb
shl
pop
mov
cdq
dec
iret
in
pop
loope
ja
test
daa
(bad)
jno
aaa
sbb
cli
push
nop
fstp
add
popf
xor
sbb
jbe
call
sahf
xchg
mov
div
rcr
or
jl
aam
in
xor
jne
adc
and
xchg
cmp
(bad)
scas
pushf
test
ds
lock
mov
aad
adc
stos
arpl
cmp
add
cmc
pop
cwde
pop
cmps
fwait
cmp
dec
push
mov
or
mov
test
pop
dec
int3
inc
mov
inc
(bad)
jmp
push
cmp
xchg
pushf
sar
dec
jmp
xor
ss
cmp
add
les
xchg
cmp
or
les
inc
data16
stos
jmp
iret
mov
mov
push
loope
jg
lea
shl
js
lods
jmp
pop
movs
add
sbb
push
into
lds
sbb
repz
dec
lahf
push
jle
imul
ins
jge
lods
fisttp
cmps
or
inc
cwde
ret
imul
jnp
cmp
rcl
mov
mov
rep
mov
pop
cwde
xor
not
mov
mov
jl
(bad)
stos
sub
test
lds
ret
mov
in
xchg
sub
push
mov
mov
jbe
adc
loope
sbb
movs
xor
mov
cmp
mov
inc
sub
call
adc
or
push
mov
add
mov
loope
sub
push
test
add
add
jp
push
out
cmp
mov
push
mov
cli
leave
mov
out
cmp
xor
mov
mov
aas
push
mov
xchg
loope
test
ss
call
shl
call
adc
add
sub
pop
jb
push
or
addr16
or
es
pop
and
call
cmp
cld
inc
loopne
les
and
xlat
je
pop
imul
enter
loop
xchg
rcr
je
jbe
or
mov
neg
mov
shl
or
inc
jmp
icebp
mov
cmps
out
xchg
pop
pusha
cmp
sub
and
out
cmp
test
jg
movs
mov
sbb
sbb
movs
push
addr16
ds
xlat
into
mov
ja
mov
jns
mov
retf
hlt
lods
xchg
nop
mov
cmps
(bad)
out
fmul
xor
pop
arpl
mov
xlat
xor
mov
ds
jb
adc
(bad)
out
mov
cmp
push
cli
jmp
push
stos
push
add
nop
push
jb
movs
shl
push
fdivr
leave
sbb
pop
in
dec
xchg
aas
cdq
mov
inc
dec
mov
mov
ds
mov
inc
sub
shl
(bad)
loopne
fs
bound
pop
inc
add
jmp
adc
and
xor
(bad)
and
jae
(bad)
mov
xor
jns
imul
add
call
repz
je
and
dec
fild
jnp
mov
stos
test
mov
inc
mov
push
data16
rep
ins
cmp
hlt
pop
sub
dec
push
dec
cmps
pushf
popf
pop
movs
sub
push
cmp
cmp
xor
clc
jp
movs
pop
aad
fs
dec
add
jle
cmc
push
inc
ret
jne
out
xchg
out
add
xchg
test
and
cmp
mov
xchg
(bad)
lods
ins
dec
dec
std
pop
leave
stos
loop
fcom
ja
pop
xor
xchg
pop
or
push
mov
aaa
(bad)
sar
jmp
pop
les
ficomp
push
fld
pop
cwde
cmps
mov
dec
ud2
pusha
stos
jmp
jp
(bad)
dec
jecxz
jp
imul
cmp
xchg
mov
xchg
xor
xchg
push
sbb
ss
std
clc
xor
and
popa
fcmovu
cs
xor
in
mov
mov
call
mov
iret
cmc
stc
add
gs
jmp
loope
shl
(bad)
stc
mov
idiv
fiadd
push
mov
scas
test
in
in
out
push
xchg
add
out
and
fwait
rcr
fnstsw
out
int
push
fwait
scas
ins
imul
xchg
cmp
sar
leave
mov
or
test
jb
mov
int3
pop
inc
or
dec
retf
stos
cmp
pop
mov
jecxz
mov
call
aam
push
adc
xchg
mov
push
mov
cmp
ds
xchg
je
sub
add
dec
je
sbb
je
mov
sub
xor
pop
loop
inc
lock
pop
sub
sti
or
jmp
sub
(bad)
cs
ja
call
cwde
adc
jmp
lods
mov
rcr
lods
sub
ins
iret
pop
jge
int3
(bad)
sbb
retf
dec
mov
mov
arpl
dec
cmp
pop
jge
test
push
dec
dec
imul
cli
ficom
inc
jecxz
pusha
addr16
lods
cmp
stos
lods
cmp
jecxz
(bad)
inc
stos
cmc
addr16
test
and
adc
jae
lods
mov
mov
cmp
ret
xchg
test
(bad)
out
shr
movs
jno
xchg
push
jo
fisub
int3
push
(bad)
fdivr
xchg
ret
mov
lods
inc
xlat
rcr
add
xchg
jle
(bad)
fucomp
jbe
cwde
xchg
xchg
movs
pop
push
icebp
or
and
push
aas
jmp
cs
jle
adc
lock
icebp
mov
dec
in
pop
dec
aas
lods
pop
push
and
mov
inc
pop
das
sub
sbb
test
mov
and
mov
xchg
(bad)
cmc
pop
mov
fst
into
sbb
add
scas
lods
xchg
mov
(bad)
out
pop
xchg
and
mov
enter
dec
stos
aas
adc
push
retf
add
test
shl
mov
aaa
jp
jle
repnz
ror
cmp
lods
and
inc
pop
sbb
gs
sub
push
and
cmps
in
mul
pop
adc
mov
outs
jmp
jle
inc
enter
mov
in
shr
call
daa
cld
not
lahf
add
dec
test
or
inc
cmp
ds
(bad)
ror
aad
stc
mov
les
(bad)
xor
sub
sub
dec
push
sub
cmp
mov
repz
pusha
mov
lods
cld
movs
shl
cmp
mov
out
xor
(bad)
sub
imul
cmp
aad
and
ja
push
cmp
mov
pop
cmc
xchg
push
les
dec
and
mov
test
adc
add
stos
dec
lahf
adc
jb
ret
mov
xor
shl
inc
fst
cmp
or
xor
xchg
iret
cmp
repnz
xor
imul
popa
test
cmp
(bad)
mov
add
push
test
int
mov
pushf
sub
inc
pop
stc
mov
inc
sbb
mov
dec
enter
retf
jnp
pop
sub
cmps
jne
inc
clc
pop
aaa
movs
xor
iret
aaa
rol
dec
pusha
les
fistp
xchg
fild
mov
imul
jmp
jl
add
ja
fnstsw
retf
add
es
push
xchg
jmp
pop
or
pushf
(bad)
mov
ret
push
aad
mov
add
stos
push
mov
sahf
ds
cmps
sub
mov
ja
(bad)
mov
mov
jns
jmp
add
lods
xchg
mov
xchg
xlat
pushf
xchg
inc
and
pop
outs
icebp
add
icebp
fwait
jmp
cmp
fst
mov
loopne
mov
into
test
popf
rcl
mov
test
pop
xor
xchg
ins
xor
xor
cmps
adc
adc
(bad)
pop
push
and
nop
adc
mov
mov
fwait
aas
ja
retf
add
mov
cmc
cmp
call
aam
test
mov
or
retf
gs
cwde
je
daa
adc
sub
xchg
test
jge
cmp
test
mov
xchg
jmp
outs
div
in
dec
xlat
not
cmp
in
test
enter
test
mov
lods
ss
jne
mov
dec
shr
push
(bad)
push
sbb
sbb
dec
les
sub
add
or
xchg
jp
sbb
mov
dec
rol
aas
stos
inc
(bad)
sar
mov
mov
je
call
loope
pop
(bad)
ins
sahf
or
test
ret
adc
cs
js
inc
sbb
enter
adc
xor
shl
dec
repnz
xchg
inc
(bad)
bound
jae
jmp
sti
or
(bad)
div
clc
lods
leave
scas
out
push
adc
lods
scas
outs
pop
cmps
jp
test
mov
test
push
dec
arpl
cmp
stc
push
lahf
or
mov
ins
loope
ss
sbb
fwait
sti
inc
cdq
arpl
mov
std
dec
jne
mov
(bad)
jae
test
inc
fnstenv
sahf
sub
lds
pop
xchg
xor
jae
dec
xlat
shl
sbb
mov
and
sbb
adc
out
and
inc
jl
pop
push
icebp
push
stos
xchg
inc
pop
(bad)
dec
ins
cmp
push
aam
and
inc
jl
and
mov
(bad)
in
in
mov
mov
mov
fwait
inc
outs
rcr
test
mov
loopne
push
into
ins
mov
mov
sub
sub
adc
xchg
xor
dec
sti
bound
sub
jle
xchg
fisub
mov
or
outs
dec
sub
push
push
arpl
ds
fild
test
dec
mov
shl
jae
lea
in
mov
scas
sbb
jns
(bad)
js
in
sub
ficomp
wbinvd
sub
loope
rol
fs
pushf
test
cmp
shl
mov
rol
mov
in
enter
(bad)
icebp
int
aad
adc
jb
loope
je
mov
int
sbb
mov
pop
dec
lea
shl
icebp
mov
popa
sbb
lock
loop
adc
mov
jb
sbb
je
les
lods
xor
mov
jmp
jae
(bad)
sub
das
sub
sub
pop
adc
cmp
ss
xchg
cmp
jmp
mov
jo
mov
pop
push
xor
sbb
mov
jg
call
setb
mov
pop
out
aaa
mul
es
mov
(bad)
mov
dec
arpl
in
neg
sbb
cld
scas
int
or
loopne
push
pop
mov
(bad)
dec
pop
loope
data16
cmps
hlt
popf
jle
es
mov
popa
rcl
add
and
rol
cwde
inc
dec
jae
jmp
mov
dec
mov
scas
pop
jmp
mov
mov
fbstp
cmp
jp
jno
ins
pop
push
or
stos
inc
nop
mov
cmp
mov
cdq
mov
ret
xchg
stc
and
jae
call
sub
jo
sbb
(bad)
dec
je
ret
jo
xor
lods
mov
lock
adc
sbb
pop
push
cmp
into
push
das
sahf
jp
jb
in
fsubr
mov
aad
jnp
xlat
push
xor
jmp
dec
lods
push
dec
cwde
(bad)
pop
out
mov
je
mov
leave
jg
mov
out
inc
jecxz
push
out
jp
cld
push
scas
cmc
pusha
sub
xchg
ret
fistp
xchg
or
xchg
in
push
sub
cmps
leave
mov
sbb
sbb
call
fistp
xor
jne
mov
push
movhps
ret
test
or
mov
mov
aas
out
push
adc
leave
neg
sub
fstp
pop
scas
push
scas
cdq
xor
imul
popf
cmp
sahf
xchg
inc
or
pusha
dec
sbb
or
pop
cdq
mov
mov
dec
call
cld
dec
xor
scas
adc
ret
cdq
xor
push
js
add
sbb
jbe
xor
jb
mov
test
dec
inc
sub
dec
lods
loopne
pop
mov
mov
or
mov
imul
(bad)
mov
test
adc
xchg
xor
jno
pop
call
sub
fiadd
pop
and
aam
sub
add
fstp
xchg
pop
leave
mov
fdivr
popa
cdq
sub
xor
push
imul
xor
dec
iret
add
aas
xchg
enter
das
cld
sub
out
(bad)
shl
test
ret
mov
out
cmps
sub
cmps
lods
jmp
cmp
or
sbb
sti
jns
pop
sbb
scas
test
daa
out
push
shr
xor
sbb
(bad)
xchg
out
out
cmps
in
xchg
enter
mov
add
or
mov
mov
sbb
stc
rcr
das
push
sub
pushf
sbb
sbb
fdivrp
popf
loop
aad
mov
push
sub
pop
into
adc
(bad)
out
mov
sub
cwde
xchg
ficom
jns
jno
push
push
xchg
test
mov
xlat
ror
mov
les
pop
add
push
call
in
or
daa
jle
popa
pusha
pop
iret
mov
inc
pop
ret
jp
fwait
push
in
mov
push
mov
repnz
add
pop
ret
mov
adc
test
cwde
sub
je
(bad)
out
daa
mov
lods
int3
add
xor
adc
int
mov
cmp
(bad)
fld
les
cmp
adc
dec
and
xchg
and
mov
add
sub
mov
mov
jmp
jb
jl
lds
repz
repz
daa
xor
fmulp
jmp
dec
jbe
aad
adc
ret
mov
mov
mov
scas
fstp
jle
and
mov
adc
xchg
push
mov
out
(bad)
test
lds
ja
js
mov
xor
jge
hlt
pusha
fadd
push
cmp
lods
xchg
and
mov
sahf
mov
sub
sub
lea
add
add
sub
or
shr
dec
cmp
xchg
push
xor
retf
jno
jnp
inc
fs
or
inc
xchg
inc
jmp
imul
loop
push
lds
mov
imul
push
or
pushf
stc
aaa
jne
(bad)
lods
sbb
pop
jle
cmc
mov
ins
ds
(bad)
sbb
test
lds
inc
les
loope
gs
xchg
inc
cmp
and
dec
sbb
fnstenv
jb
je
outs
les
xor
ja
sbb
pop
cmp
nop
or
movs
mov
pop
jmp
(bad)
pop
pop
dec
aam
push
adc
cmps
cmp
shl
cs
inc
pushf
clc
in
add
(bad)
loope
(bad)
(bad)
and
iret
inc
inc
jnp
xor
daa
icebp
repnz
add
xor
stos
int
loop
mov
aad
mov
rol
sahf
data16
cmp
rcl
mov
push
jb
dec
aaa
xor
stc
fs
push
mov
or
push
jbe
lods
pop
sbb
xchg
add
adc
call
lock
int
xor
xchg
or
scas
and
imul
mov
sti
hlt
(bad)
cmp
repz
bound
fdiv
fcmovu
imul
push
xchg
mov
or
scas
adc
(bad)
int
mov
lods
adc
ror
fistp
(bad)
out
cmp
pop
out
or
push
jbe
mov
jbe
ins
cld
out
adc
push
push
int
lds
aam
mov
(bad)
fldenv
cld
inc
jae
adc
dec
mul
(bad)
outs
aas
out
xchg
out
shr
add
sub
mov
push
and
mov
mov
jnp
dec
inc
into
mov
out
into
pushf
dec
adc
outs
push
cdq
mov
add
sti
xchg
call
xchg
cs
xlat
inc
in
into
out
fild
mov
and
out
pop
popa
sub
in
push
dec
sub
mov
adc
stos
xor
gs
repnz
jns
cmp
shl
sub
outs
jb
xor
jl
jp
popf
aas
push
sub
and
imul
sar
xchg
xor
rol
dec
test
pop
adc
loope
dec
int
imul
add
mov
test
lock
bound
pop
dec
imul
mov
fadd
jns
or
in
jle
push
ret
call
enter
push
push
int
test
mov
push
das
adc
and
mov
data16
and
adc
inc
and
fs
push
mov
cmp
repnz
mov
fldcw
std
adc
clc
dec
fistp
mov
pop
jmp
rol
out
aas
shl
sub
mov
test
push
mov
push
add
mov
fdiv
push
in
pop
push
ror
adc
mov
or
add
or
nop
(bad)
jmp
arpl
xchg
push
leave
xlat
test
aad
(bad)
lds
mov
jo
xchg
jne
push
pop
push
int3
push
fiadd
test
je
outs
mov
(bad)
add
in
(bad)
fst
and
into
stos
fldenv
pop
shl
(bad)
test
test
lods
out
xchg
pop
push
ja
in
adc
ss
add
cli
add
call
sbb
fist
fbstp
fdiv
test
cmp
add
fmul
push
jecxz
pop
xchg
pop
mov
stos
ja
mov
sub
or
rcr
mov
and
les
neg
lods
jmp
das
inc
dec
sub
inc
push
push
je
adc
add
sub
(bad)
or
jnp
jne
cmp
add
outs
and
inc
popa
fimul
loopne
call
or
and
sbb
push
cdq
repz
ins
sbb
and
dec
and
lahf
or
scas
out
xchg
sbb
idiv
dec
fs
push
in
jnp
jmp
pop
jg
ret
jnp
fstp
xlat
fs
jecxz
dec
xor
sbb
sub
rcl
mov
mov
push
push
jbe
dec
daa
cmp
add
fistp
mov
adc
push
cli
in
sub
sbb
jne
xchg
or
rcl
xor
lahf
nop
mov
gs
mov
movs
cmc
test
push
inc
add
daa
xchg
das
enter
push
loope
jbe
inc
loope
sub
xor
retf
pop
sub
hlt
mul
or
mov
std
mov
dec
inc
sbb
retf
push
stc
jb
outs
js
push
jle
mov
sti
mov
add
pop
stos
popf
jb
std
adc
sbb
out
outs
jno
fucom
aam
xlat
lods
jae
pop
in
cmps
sti
sub
outs
setne
jnp
xlat
ins
rcr
je
cdq
xlat
test
add
fstp
sub
cwde
xor
dec
fsubr
jl
and
xchg
mov
inc
loopne
xchg
shl
mov
mov
adc
adc
int3
call
mov
fbstp
cld
push
push
mov
pusha
pop
or
scas
arpl
xor
adc
adc
aad
sbb
repnz
jns
and
xchg
push
mov
adc
iret
ja
mov
xchg
ret
ret
pop
test
pop
lods
hlt
or
dec
mov
cmp
dec
jae
xor
dec
add
(bad)
xchg
or
or
pop
cmp
xchg
inc
mov
lods
mov
scas
shr
hlt
mov
mov
sbb
and
retf
cwde
mov
je
scas
call
add
mov
xchg
mov
(bad)
mov
lahf
cmp
xchg
mov
pop
push
fs
mov
jmp
arpl
pushf
dec
or
mov
fistp
aaa
pushf
pop
sbb
call
jmp
push
test
inc
int3
jle
add
xchg
xchg
push
aad
adc
aad
cmp
jmp
(bad)
cmps
and
arpl
or
shl
dec
sbb
div
dec
pop
into
hlt
mov
jg
mov
inc
imul
dec
out
pop
xchg
xchg
adc
std
cmp
in
test
rol
inc
add
add
cwde
mov
aaa
jp
jl
mov
or
xor
sub
dec
or
pop
jno
xor
out
and
and
js
inc
das
or
ss
cmp
and
rol
ins
fimul
mov
sub
shl
pushf
pop
in
pop
inc
adc
mov
xor
or
pop
push
fld
cmp
shl
mov
out
and
sub
icebp
or
dec
fst
sub
std
cs
dec
pusha
jne
sar
imul
scas
cmps
iret
sbb
and
fcmovb
xor
lds
dec
jns
not
sbb
adc
nop
in
push
mul
sub
push
cmp
jno
mov
call
mov
loope
in
adc
jecxz
jo
mov
inc
pusha
adc
fs
add
lods
pop
mov
les
jno
scas
or
lods
test
sbb
mov
and
imul
adc
stc
je
mov
and
imul
jnp
and
pushf
add
fdivr
sub
stos
fwait
pop
mov
cmp
dec
ror
sub
jo
repnz
(bad)
xchg
jbe
sbb
cld
mov
jnp
mov
repnz
pop
and
int3
imul
xchg
in
xchg
jmp
in
push
add
in
xchg
(bad)
mov
loope
stc
mov
fwait
jmp
jge
pop
ja
and
sub
cld
inc
push
adc
clc
xchg
inc
xor
jmp
cld
sub
int
in
sub
in
xor
cmp
jl
loopne
lods
imul
jnp
mov
repz
push
into
scas
jbe
or
pop
pop
mov
cmp
push
push
sar
stos
ds
add
clc
xchg
jp
scas
jno
mov
add
xchg
(bad)
jns
add
in
inc
shr
test
stc
add
es
cmps
jnp
imul
inc
ss
icebp
sbb
and
fs
adc
fild
ret
adc
xor
loope
lock
fwait
sahf
inc
xor
mov
mov
ficomp
ffree
sti
cmp
ss
cmps
sti
idiv
nop
mov
rol
outs
(bad)
inc
push
pushf
xor
mov
jnp
dec
sub
repz
jnp
cmps
mov
mov
pushf
sbb
add
mov
and
mov
fnstsw
cmc
lahf
(bad)
rol
icebp
mov
sar
jno
cmp
inc
imul
jne
ror
sub
mov
pop
outs
movs
jp
adc
push
hlt
dec
shl
sbb
rcr
ins
or
pop
dec
mov
cdq
or
loope
pop
cmp
ds
(bad)
mov
(bad)
inc
cli
mov
call
mov
add
pop
in
ins
ins
cmp
int3
(bad)
push
mov
sub
inc
arpl
jb
ds
and
pushf
outs
rep
jg
sbb
sub
sbb
adc
idiv
mov
jb
stos
mov
(bad)
mov
mov
mov
movs
adc
xor
outs
js
add
adc
cmc
rcr
dec
in
jno
iret
dec
repz
or
adc
mov
cs
xchg
adc
mov
xor
pusha
or
inc
das
pop
nop
imul
mov
jae
stc
retf
adc
inc
mov
in
aaa
or
add
xchg
in
adc
mov
sbb
sub
mov
fdivr
call
mov
repnz
and
enter
ret
imul
cmp
sbb
push
ja
xor
mov
add
push
add
pusha
pop
mov
adc
into
jge
push
adc
mov
mov
jg
mov
mov
int
fild
pop
xchg
test
fsub
dec
add
push
cmps
sub
or
cmps
repz
sbb
(bad)
hlt
dec
mov
stos
in
xchg
into
jne
or
pop
adc
test
enter
(bad)
pop
data16
add
aad
mov
es
pop
popa
inc
add
sub
pop
inc
outs
cmps
sbb
enter
push
add
jo
inc
(bad)
jecxz
and
push
xor
inc
xor
sub
push
jmp
dec
popf
addr16
retf
sub
push
shl
pusha
fnop
test
dec
push
inc
sahf
xchg
shl
mov
mov
repz
or
sub
push
push
fidivr
fbld
xlat
jmp
mov
fdivrp
mov
jmp
add
sub
pop
ret
inc
aad
jb
cs
(bad)
adc
call
int
xchg
and
ja
adc
inc
not
jmp
jecxz
adc
stos
dec
hlt
(bad)
fcmovbe
daa
cmp
loopne
mov
arpl
je
into
push
lods
jg
test
movs
test
stos
pop
xor
fs
ret
(bad)
or
mov
popa
jge
ja
jmp
scas
in
jecxz
push
outs
loop
xchg
ss
push
dec
sub
out
fs
jne
adc
dec
dec
aam
nop
in
inc
das
push
pushf
push
fiadd
inc
ja
std
and
jae
jge
pop
jg
daa
and
scas
leave
lods
inc
mov
sbb
mov
jb
repz
xor
stc
shl
ds
xacquire
mov
ret
in
mov
or
add
bound
push
mov
mov
sub
sub
mov
test
stc
and
test
shl
dec
mov
lahf
cmp
jge
sbb
ret
jmp
ins
or
daa
rol
mov
or
mov
mov
fs
rcr
and
or
and
xor
out
jl
je
push
mov
ins
jnp
jo
repnz
mov
xor
mov
ss
push
jp
fistp
fisubr
scas
cwde
xchg
sbb
push
jle
xlat
adc
mov
stos
fiadd
fnstcw
hlt
push
add
ret
dec
arpl
outs
stos
aad
ins
mov
ss
sbb
inc
(bad)
mov
mov
jne
ins
xchg
ins
push
mov
add
sub
ficom
dec
shl
inc
xchg
jmp
cmp
cmps
mov
popa
in
retf
lods
mov
xchg
(bad)
jb
mov
mov
(bad)
jbe
add
sbb
retf
into
sti
repnz
cwde
ss
gs
gs
pusha
push
mov
fsub
adc
push
dec
es
mov
mov
push
or
xchg
and
mov
sbb
inc
imul
shr
mov
and
or
or
inc
xor
and
jg
jnp
mov
out
out
adc
test
repnz
lock
or
cmp
sbb
push
scas
lods
cmp
ins
mov
and
push
cs
dec
daa
scas
outs
cmp
dec
pop
push
adc
scas
and
xor
lock
or
jge
xor
xchg
xor
mov
add
or
jl
xchg
addr16
adc
jns
ret
xchg
dec
mov
add
icebp
aam
add
jnp
push
mov
push
jns
xor
add
cwde
mov
push
push
mov
sub
ins
xchg
lods
jle
ret
xchg
pop
push
mov
hlt
inc
dec
sub
xchg
dec
dec
jnp
xor
pusha
leave
adc
data16
cmp
sub
lods
xchg
pop
mov
repnz
les
xor
cmp
ins
jecxz
aam
adc
jmp
xor
aad
sbb
ss
cmps
lahf
dec
enter
push
mov
adc
into
stos
rol
jmp
and
pushf
xchg
cld
lea
leave
rcr
scas
xor
fwait
shl
icebp
movs
xor
or
cdq
or
sar
push
dec
out
(bad)
push
sub
cmp
sbb
icebp
inc
pop
movs
sub
pop
mov
imul
ror
in
scas
test
out
push
mov
push
xor
movs
xchg
mov
lods
loope
mov
adc
psrld
aam
in
push
adc
cmps
out
push
loop
stc
and
sub
and
arpl
jp
add
(bad)
mov
push
sti
mov
push
clc
xchg
xchg
mov
pop
mov
jns
scas
sbb
pop
jp
xchg
or
dec
adc
push
aad
add
jnp
aam
out
iret
fwait
repnz
jg
add
call
ja
push
fcom
rcl
cmp
(bad)
sbb
ror
jge
popf
shr
out
mov
(bad)
fld
sub
add
sub
xchg
mov
inc
add
sti
int
adc
pop
pop
int3
aad
shl
cmp
sahf
lock
sub
cli
jne
cld
xlat
jecxz
ficomp
cli
inc
xchg
jb
pop
std
addr16
retf
mov
enter
pop
bnd
mov
popf
fs
sbb
cmp
les
in
or
movs
retf
jns
jae
int
mov
ins
inc
out
pop
jae
and
stc
xchg
cmp
sub
scas
inc
adc
sub
fptan
cmp
outs
retf
adc
xor
(bad)
aad
leave
out
push
xor
nop
(bad)
hlt
mov
mov
xchg
jno
sub
gs
jbe
cli
outs
mov
aad
rep
aam
fcom
adc
mov
cmps
adc
jnp
sar
jne
loop
imul
popf
and
dec
cmp
mov
pop
pop
xor
xor
pusha
push
mov
retf
mov
pushf
jbe
inc
enter
bswap
aam
mov
inc
push
add
scas
cmc
mov
fiadd
daa
add
loop
push
cmps
(bad)
iret
aas
stc
jmp
in
sbb
jl
fild
inc
xchg
mov
mov
ja
jno
gs
pop
jle
jbe
sub
daa
sbb
pusha
pusha
call
jmp
inc
or
push
cmp
and
cmc
pop
leave
aad
push
push
push
push
je
xchg
(bad)
(bad)
out
(bad)
(bad)
test
mov
push
dec
fild
test
xor
xor
mov
mov
xchg
fidivr
out
data16
sbb
push
sbb
pmaddwd
pop
xor
jmp
push
pop
je
jp
sub
mov
and
movs
xor
hlt
fcmovnbe
fwait
pusha
rol
stos
jae
in
and
cmc
aad
ss
inc
bound
push
into
jb
cmp
sub
cmp
aaa
stos
mov
push
pop
xor
mov
stos
pop
dec
gs
mov
push
pusha
push
daa
inc
jmp
mov
div
mov
or
(bad)
mov
jno
(bad)
lods
test
or
jg
push
sub
mov
push
jge
inc
ja
add
push
add
(bad)
ins
jecxz
adc
cwde
std
push
repnz
(bad)
xchg
in
std
inc
dec
repz
add
sbb
in
daa
mov
dec
out
mov
lds
dec
ins
push
scas
shr
adc
ror
and
aas
xor
push
jae
lods
aaa
pop
mov
xchg
jns
pop
fidivr
movs
mov
pop
push
(bad)
xchg
aas
mov
cmp
(bad)
ins
clc
cmps
push
mov
lods
rcr
mov
neg
dec
pop
retf
test
movs
xchg
jbe
xchg
lds
and
cwde
inc
sub
inc
fucomi
inc
cli
xchg
xchg
stos
sub
adc
cmp
xlat
push
pop
lods
or
or
dec
push
outs
sbb
(bad)
in
xlat
lods
sbb
icebp
adc
jbe
adc
pop
inc
retf
mov
sbb
mov
xchg
aad
daa
add
lds
mov
jns
mov
movs
and
mov
sub
retf
(bad)
xlat
stc
cmp
add
les
mov
or
adc
scas
mov
dec
jle
dec
push
fisubr
or
es
in
mov
xchg
xchg
or
adc
push
cmp
xlat
sbb
push
retf
mov
xchg
stos
hlt
(bad)
or
(bad)
popf
cmpps
xchg
xchg
or
sub
sahf
push
add
push
pop
xor
or
enter
xchg
fwait
jmp
call
pop
out
and
inc
inc
jp
dec
enter
or
push
add
(bad)
sub
(bad)
fucomip
sbb
test
movs
push
shl
iret
(bad)
lods
inc
fwait
jae
mov
iret
xchg
jae
mov
and
(bad)
jb
das
les
or
out
sar
test
jns
add
fisub
mov
mov
dec
push
add
push
shr
pop
sbb
fisttp
mov
or
dec
addr16
movs
loopne
loopne
dec
dec
jmp
sbb
dec
xchg
and
(bad)
jns
or
adc
(bad)
mov
add
add
es
fstp
lds
pushf
inc
dec
pushf
xor
inc
sub
lods
cmp
stc
adc
jno
ins
(bad)
fbld
add
test
mov
mov
jle
mov
in
jbe
adc
dec
cli
rcr
js
jns
fwait
mov
xor
mov
pop
rcr
pop
and
inc
lods
push
cmp
aad
lahf
adc
mov
out
(bad)
test
data16
inc
pop
dec
ss
push
repnz
pusha
push
icebp
loopne
sub
dec
stos
stos
dec
push
mov
jmp
dec
sbb
fistp
cmc
loopne
xchg
sub
or
loope
mov
pop
add
jb
xchg
dec
jb
adc
not
cmc
mov
sbb
add
int
mov
enter
xor
pushf
outs
cli
icebp
xchg
not
cld
xchg
das
movs
(bad)
ja
and
cli
es
jo
adc
xchg
and
push
pop
pop
in
mov
mov
in
adc
dec
(bad)
xor
sbb
dec
call
and
push
sbb
push
imul
xor
xchg
test
inc
cmps
(bad)
fbstp
jmp
push
fadd
push
and
xchg
inc
movs
pop
sbb
sbb
adc
jae
outs
stos
xor
dec
lods
jno
lods
jp
aaa
jo
xchg
fmul
xchg
repz
sub
xor
inc
or
mov
xchg
popf
sbb
or
call
mov
test
xlat
out
fwait
xor
adc
frstor
int
push
fisttp
or
jae
repz
mov
mov
cmp
setns
(bad)
mov
mov
sti
xlat
aaa
mov
mov
int3
jmp
not
popa
mov
clc
sub
cmc
sbb
fpatan
add
int
mov
xchg
pop
repnz
push
or
lock
fwait
js
ret
or
test
aas
jb
xor
and
aaa
cmps
scas
xor
and
dec
pusha
fsin
pusha
iret
jg
push
or
inc
push
(bad)
adc
(bad)
into
jne
inc
stc
movs
dec
cmps
sbb
mov
cmp
or
imul
daa
sahf
jmp
scas
lahf
hlt
adc
sub
fstp
xor
mov
outs
out
xchg
sbb
mov
movups
xchg
sub
xor
and
ret
iret
movs
mov
aad
jns
cmp
rol
sbb
movs
push
pushf
lods
add
sbb
dec
mov
rol
enter
adc
call
add
mov
test
mov
push
jmp
mov
mov
in
(bad)
(bad)
enter
xor
cld
test
pop
mov
shr
adc
repnz
mov
fs
jno
fmul
sub
mov
add
cmc
xchg
ds
das
pop
adc
sbb
dec
push
(bad)
or
ret
rol
mov
cmc
sbb
pop
mov
and
xor
or
and
add
add
xchg
out
pop
pop
xchg
leave
and
cmp
mov
test
lahf
cld
or
inc
mov
test
ins
pushf
leave
enter
(bad)
retf
push
leave
push
pop
push
repnz
not
and
fidivr
rcr
test
sub
inc
jnp
movs
pop
pop
sti
loope
cli
and
cmp
inc
ds
add
movs
xchg
sub
dec
push
sub
rcl
sbb
fsub
push
push
and
mov
cmp
cwde
popf
xchg
ins
shl
ficomp
ins
mov
or
xchg
ret
shl
pop
dec
fwait
std
jae
adc
lods
xlat
ss
mov
mov
xchg
aas
loopne
push
inc
mov
and
cmp
mov
xchg
adc
sub
dec
cwde
mov
mov
or
sbb
ja
cmp
sar
inc
nop
sar
sar
test
loopne
pop
ret
lods
ret
inc
movs
push
fsub
sub
push
sub
mov
mov
xchg
repz
inc
jecxz
mov
push
and
mov
xlat
loopne
gs
cld
xor
enter
lds
cdq
or
aaa
mov
aaa
pop
mov
bound
mov
loop
push
in
daa
shl
xor
inc
cld
dec
test
push
sub
pop
test
or
shr
repnz
pop
mov
fadd
pop
aas
xchg
add
sbb
mov
jp
adc
(bad)
fcmovnu
xchg
jae
nop
mov
std
mov
mov
jno
jmp
dec
jbe
fstp
xchg
and
pop
fidiv
push
push
fwait
add
mov
or
jp
mov
les
push
push
outs
mov
mov
jns
or
xlat
das
test
push
shl
je
cmps
mov
pop
pop
ins
fs
loop
xor
iret
mov
clc
adc
xlat
outs
cdq
stos
inc
jb
pop
xor
jecxz
pop
cdq
mov
std
stc
mov
int
cmps
stos
test
push
jno
aam
inc
push
lahf
cmps
sub
mov
rcl
shr
je
pop
div
pop
ds
les
rol
mov
lock
call
push
and
sub
jge
ja
stos
popf
pop
xor
sbb
mov
xchg
cmps
mov
test
xor
xchg
aam
cmp
mov
or
mov
mov
in
push
or
lea
mov
or
mov
je
xor
or
cmp
dec
fmul
test
push
sub
add
mov
cwde
cwde
sar
movs
in
dec
sub
jb
inc
shl
pop
movs
and
out
sahf
sbb
push
out
sar
imul
pop
fidivr
test
dec
test
jmp
imul
out
pushf
and
es
ret
push
std
call
fnstsw
imul
push
sbb
sub
mov
sub
fadd
mov
aas
mov
mov
xlat
push
adc
sti
and
xor
mov
push
sahf
mov
movs
cmp
out
mov
mov
mov
sub
pop
mov
mov
popf
sub
repnz
test
loope
int
idiv
adc
pop
cdq
dec
or
cli
lock
idiv
push
mov
jp
outs
gs
int3
fsubp
fdivr
lock
and
fmul
pop
inc
xchg
sbb
loopne
sub
mov
outs
mov
arpl
sbb
sub
sbb
pop
es
cli
mov
or
adc
sbb
imul
fisttp
sbb
mov
cmps
out
cmp
xor
inc
pop
pop
clc
gs
or
retf
sar
inc
mov
repnz
push
aad
retf
lods
(bad)
mov
aad
and
push
adc
cmc
enter
and
sahf
mov
gs
adc
bound
push
call
mov
mov
pop
pop
jl
scas
std
stc
iret
cmps
enter
mov
mov
daa
adc
(bad)
fld
out
xor
mov
loope
retf
xchg
cmp
sub
or
cdq
das
in
xor
jmp
rol
add
or
enter
out
cmps
pop
cli
icebp
xchg
pop
arpl
sub
std
mov
add
cmp
or
je
fldenv
dec
(bad)
pop
inc
adc
(bad)
cli
cdq
add
jno
shl
mov
lock
hlt
cmp
jb
adc
jmp
fimul
xor
mov
pop
js
xor
stc
fcmovb
cmp
pop
mov
jmp
inc
test
lahf
int3
shr
loope
aam
sub
je
(bad)
adc
adc
ss
gs
fbld
je
call
in
ret
stos
sbb
cmp
mov
push
pop
or
or
lods
jp
xchg
out
xor
mov
mov
out
adc
mov
dec
jmp
push
cmp
jl
cmp
add
pop
dec
xchg
or
xor
or
sbb
rcr
ins
sar
inc
xor
fistp
scas
xlat
adc
frstor
pop
adc
mov
pop
ins
inc
cmp
loope
data16
and
gs
popa
xchg
sub
sub
popf
mov
dec
loope
test
xor
aaa
lock
adc
pusha
adc
sbb
mov
fmul
jge
xchg
icebp
ds
xor
xchg
mov
data16
adc
and
fiadd
sbb
or
les
or
jbe
lock
mov
push
leave
inc
sar
cmc
daa
adc
in
and
mov
repz
pop
pusha
repz
xchg
and
xchg
jmp
and
inc
jae
jmp
(bad)
out
sub
sub
and
pop
shr
add
andnps
ss
jg
sbb
mov
inc
adc
stos
cmp
outs
outs
push
pusha
pop
or
dec
pop
lea
repz
jmp
push
gs
outs
mov
into
dec
jno
pop
jnp
shl
sbb
mov
test
mov
pop
cmc
jno
mov
call
cmp
sar
das
mov
mov
xchg
jmp
mov
mov
in
xor
clc
adc
pop
aas
mov
fstp
push
cld
cmp
dec
imul
dec
and
jecxz
stos
in
and
out
pop
adc
mov
arpl
jmp
clc
push
push
xor
aaa
sub
movs
cmp
mov
ds
loope
sub
or
inc
cmp
(bad)
out
loop
daa
jecxz
clc
inc
loopne
xchg
mov
repz
sti
jns
(bad)
jmp
int
shl
pop
and
mov
ja
fsub
(bad)
inc
ror
jno
xchg
xchg
sbb
push
mov
fwait
add
loop
sub
loopne
jl
test
or
scas
xchg
adc
sub
pop
xchg
cmp
sub
pop
inc
data16
repz
clc
xor
inc
loope
enter
pop
ror
inc
fcomp
mov
push
mov
div
or
jo
push
xlat
or
imul
xchg
fst
cld
clc
scas
pushf
outs
add
jge
adc
push
sbb
(bad)
dec
pop
sub
in
inc
push
dec
stos
push
test
jp
cdq
pop
rol
or
call
and
jae
out
(bad)
rol
cmp
inc
inc
xor
inc
or
xlat
jno
jecxz
mov
into
add
mov
dec
fsubr
pop
js
cwde
and
call
fst
(bad)
cli
cli
lds
push
rcr
or
repz
and
rcr
mov
cs
ret
jne
out
ss
jg
arpl
inc
add
pop
gs
dec
lahf
fwait
pop
mov
ret
movs
addr16
in
inc
fs
or
fstp
push
jl
es
inc
xchg
data16
xchg
xchg
fmul
cdq
ror
into
cmp
and
and
sbb
(bad)
mov
pop
or
mov
add
popf
lods
mov
int3
retf
sub
nop
js
out
(bad)
cmps
aaa
sub
cmp
add
(bad)
cmps
push
ud2
dec
cmp
mov
add
stc
xchg
repz
fdivr
repnz
js
dec
(bad)
lds
adc
cmp
cmp
lock
pop
xchg
mov
dec
cmp
neg
sub
mov
sbb
fisub
lahf
jmp
xchg
mov
mov
ret
test
ss
sbb
or
adc
adc
rcr
mov
mov
sbb
mov
pop
(bad)
cwde
inc
fcom
xchg
int3
mov
xor
jnp
inc
cmp
cmc
add
sbb
fnstenv
imul
ret
xchg
ins
push
mov
jp
ins
scas
or
test
pop
clc
mov
xchg
fs
out
or
sub
stc
fist
imul
mov
jne
mov
inc
mov
fadd
add
out
ret
sbb
rcl
xor
mov
std
call
cmp
mov
and
add
inc
xor
and
outs
sub
aad
mov
ja
idiv
dec
pop
in
bound
pop
adc
jnp
xchg
push
aas
(bad)
dec
sub
mov
xchg
mov
cmps
xchg
stc
push
and
popf
or
jmp
push
pusha
pop
xchg
and
lods
inc
push
push
retf
icebp
sub
pop
pop
lahf
les
jns
in
int3
cmp
mov
mov
xor
sub
inc
ret
ret
mov
popf
mov
clc
jb
pop
or
fist
lods
xor
sub
arpl
dec
mov
add
or
leave
nop
xor
mov
and
add
sbb
fs
sub
sub
and
stos
push
jbe
das
mov
rcr
jnp
imul
lahf
retf
inc
popf
jbe
stos
outs
cs
push
cld
push
dec
inc
jl
cmp
test
or
mov
call
jnp
inc
lods
or
mov
adc
xor
aas
imul
mov
jae
sub
push
sbb
loop
jg
(bad)
retf
sar
sbb
jle
retf
nop
ror
mov
mov
sbb
push
in
ret
lea
xchg
in
imul
dec
inc
add
movs
add
pop
inc
outs
fs
imul
inc
jp
jle
dec
test
cmps
adc
aaa
or
mov
outs
pushf
call
ret
mov
stos
ret
fld
inc
lea
shl
call
mov
int3
imul
jp
nop
imul
aaa
pop
loop
fs
into
clc
cli
xor
cmp
fucomip
sbb
jo
xchg
fcomp
ins
pop
repz
push
jae
dec
adc
mov
jge
push
or
pop
adc
pop
sub
add
mov
sti
cwde
inc
sbb
sub
icebp
cmp
jge
lea
pop
cmp
pusha
test
push
fucomip
movs
sbb
jmp
mov
jo
adc
imul
pushf
pushf
(bad)
(bad)
mov
ss
add
or
pop
pusha
daa
jno
fimul
mov
add
in
push
ror
lods
push
ret
rcr
adc
jbe
dec
jg
xchg
icebp
ret
inc
mov
int
sub
jg
jg
and
adc
inc
iret
idiv
(bad)
xchg
shl
inc
jnp
push
mov
retf
cmp
jl
jmp
xor
cmp
mov
stos
sbb
and
fldcw
js
cmc
add
mov
cmc
push
out
mov
(bad)
and
pusha
cmp
dec
gs
push
xchg
sar
pop
data16
push
push
xor
inc
adc
mov
retf
pop
adc
dec
jmp
mov
cdq
dec
scas
xor
mov
test
repz
xchg
inc
loop
(bad)
xchg
cmp
xchg
pusha
mov
data16
xchg
mov
pushf
mov
loopne
inc
shr
arpl
jnp
in
sbb
test
jo
leave
call
jae
jmp
nop
jnp
mov
push
test
push
jb
sbb
call
aad
outs
pop
scas
mov
(bad)
std
cmps
jmp
pop
cmp
mov
jns
ret
cmp
lea
mov
fnsave
fwait
or
xlat
(bad)
mov
movs
jnp
add
mov
gs
inc
pop
xor
inc
fdivr
in
pusha
popf
bound
retf
cs
mov
or
jns
ins
arpl
push
aam
sub
sub
push
sbb
sub
jbe
cmp
inc
daa
sbb
jmp
inc
lock
xchg
mov
jmp
(bad)
shr
ss
jl
dec
loop
mov
mov
push
aad
sub
add
cmp
push
scas
push
xchg
inc
(bad)
dec
xor
out
jle
loope
pop
ja
pop
add
std
jo
sbb
mov
mov
dec
xchg
es
push
sbb
adc
fimul
sbb
push
push
adc
loopne
add
call
push
fbld
(bad)
mov
adc
mov
(bad)
shl
jmp
cwde
je
stos
ins
lods
xchg
dec
sbb
mov
jmp
jmp
sar
lock
jmp
jg
mov
fiadd
inc
shr
xor
loopne
shl
add
rcl
inc
lods
mov
int3
call
outs
push
scas
jo
pop
jb
icebp
sub
xchg
int
fdiv
cld
and
in
cmp
dec
inc
mov
push
fwait
cmps
pop
inc
push
fwait
pop
dec
pop
bound
test
jb
inc
cdq
xor
cmp
xchg
push
push
cmp
pop
les
mov
std
xchg
shl
repz
in
lods
cli
sar
ins
popf
sub
adc
les
sub
cli
inc
add
jecxz
pusha
sti
jae
cmc
push
cmp
pop
cmps
cmp
add
into
or
fst
lock
cmp
vaddps
fldcw
into
test
xor
push
mov
imul
jb
pop
aam
jmp
(bad)
out
add
inc
sub
into
cmp
xor
repz
inc
idiv
push
xchg
fcom
or
aaa
dec
int
stos
ds
(bad)
(bad)
adc
sidtd
scas
push
sbb
mov
cmp
jl
sub
mov
cmp
fisubr
sub
cmp
jg
jg
stos
or
ins
cmc
sub
pop
ret
test
xchg
and
jnp
inc
pop
cwde
cs
xchg
mov
mov
push
xchg
pop
call
rcr
test
idiv
sbb
xor
xchg
push
rol
retf
cmc
loope
sbb
inc
iret
sahf
lahf
and
(bad)
sbb
mov
clc
clc
fistp
push
inc
adc
xchg
xor
(bad)
int3
popa
popa
shl
jo
add
mov
add
ror
or
jne
scas
pop
adc
mov
ror
pop
and
jns
push
cmp
sbb
xchg
test
xchg
inc
lods
fld
retf
jmp
outs
test
mov
add
dec
jbe
pop
shl
xlat
mov
mov
add
mov
xor
dec
(bad)
adc
jmp
sub
mov
jl
mov
jmp
div
mov
mov
jae
add
sahf
cdq
fucomip
dec
sbb
jl
ret
sub
(bad)
jnp
xor
jne
sub
add
retf
in
push
adc
pop
mov
in
data16
(bad)
jle
add
push
or
sti
das
and
cmps
je
xchg
aaa
mov
pop
xlat
(bad)
pop
data16
jnp
cvtps2pi
not
pop
out
xlat
sub
ret
push
push
dec
fstp
push
inc
sub
arpl
sub
in
mov
jne
sub
out
(bad)
xlat
out
sbb
push
sbb
adc
mov
mov
into
mov
pushf
pop
inc
fcomp
jns
jno
sbb
fst
jecxz
push
sbb
jnp
xchg
push
dec
cwde
push
into
cmp
(bad)
lock
xor
inc
sub
test
cmp
fsubr
sar
add
mov
loopne
out
adc
shr
sti
sbb
outs
jmp
pop
repz
jbe
out
rcr
inc
push
ss
popa
neg
jge
adc
adc
int3
shr
sbb
jnp
lahf
call
fwait
sub
sahf
scas
xor
push
xor
jp
lea
jg
jle
cmp
imul
pop
jbe
pop
xor
enter
arpl
sbb
std
jl
icebp
push
scas
ins
cmp
(bad)
and
jl
push
mov
test
or
cld
mov
add
imul
arpl
outs
shr
pop
push
retf
inc
sbb
push
imul
push
(bad)
mov
pusha
cli
out
call
inc
faddp
add
sbb
or
test
jbe
cmp
sub
jnp
cmp
jb
push
cmp
mov
sbb
retf
js
jl
gs
jo
lahf
pop
fsub
dec
cmp
jb
xchg
in
popf
jp
push
dec
or
inc
adc
sub
ror
and
inc
or
mov
push
outs
popf
mov
out
test
pusha
mov
and
stc
add
vpunpckldq
(bad)
or
or
dec
add
cwde
imul
or
movs
push
(bad)
outs
fbld
outs
adc
adc
cmp
fst
lahf
add
mov
push
mov
cmps
cdq
in
pushf
mov
jle
(bad)
fimul
inc
add
and
inc
movs
jmp
and
ins
pop
pop
outs
lods
cmp
mov
xor
pop
cwde
scas
dec
test
mov
and
call
inc
popf
push
inc
mov
cwde
cmp
mov
retf
mov
or
inc
cs
lea
stos
inc
loopne
sbb
xlat
and
pusha
jo
dec
sub
jl
ret
jge
leave
and
pop
xor
and
mov
inc
scas
sbb
sub
mov
es
push
add
and
add
es
cmp
mov
mov
arpl
jnp
ds
shl
mov
xor
cmp
repz
out
loop
fs
stc
mov
cwde
rol
pop
mov
jg
stos
jl
pop
sub
arpl
ret
push
adc
or
or
xchg
sti
sbb
sbb
out
pushf
mov
les
add
rcr
inc
and
mov
inc
cmp
popa
lea
jne
adc
mov
sub
jmp
jmp
add
mov
push
stc
rol
xchg
lods
jns
dec
(bad)
mov
lods
mov
out
pusha
push
call
call
hlt
sar
adc
call
add
or
out
add
fadd
iret
cmp
push
push
xchg
pop
pop
push
mov
adc
add
and
mov
lahf
lods
std
pop
popa
nop
sbb
pop
mov
repz
imul
mov
mov
scas
(bad)
stos
mov
cs
and
out
and
and
scas
mov
int3
xchg
lods
cmp
aad
(bad)
leave
icebp
mov
mov
cmp
sbb
adc
pop
fsub
dec
movs
adc
aaa
jb
cli
cs
xchg
out
jle
lock
rcr
mov
inc
xchg
in
mov
test
aaa
or
push
push
mov
mov
and
sbb
nop
cmps
jmp
ret
mov
xchg
ja
sub
call
or
movs
shr
hlt
inc
cmps
sahf
sub
idiv
int
xchg
jge
mov
pop
pop
loopne
xchg
loop
mov
mov
imul
jecxz
xor
push
and
fild
out
xchg
lods
shl
and
push
xchg
out
fstp
dec
jmp
out
push
mov
movs
popf
out
or
scas
fiadd
mov
outs
inc
jecxz
pop
or
mov
sbb
and
fld
(bad)
jo
arpl
cmp
cmp
outs
es
mov
ret
inc
pop
jg
int3
test
pusha
sub
xchg
sbb
mov
in
cmp
jmp
adc
pop
enter
cmp
xor
sbb
mov
ins
jmp
outs
mov
xchg
ret
cli
repnz
push
idiv
(bad)
(bad)
shl
call
popa
rol
inc
jnp
ficomp
js
push
add
stos
cmp
cld
test
or
retf
ficomp
setnp
add
cmc
sub
sbb
adc
repz
lods
cmps
and
sub
mov
jl
xchg
push
push
cwde
(bad)
push
inc
add
ret
call
push
test
and
int
mov
dec
pop
pop
leave
es
sub
imul
aaa
push
and
aam
fld
and
pushf
xchg
movs
ret
add
xchg
mov
push
repnz
cs
test
retf
mov
xchg
jecxz
pop
adc
fmul
es
cmc
cmp
test
das
(bad)
mov
push
push
(bad)
into
push
test
cdq
nop
adc
in
fwait
mov
imul
inc
mov
loope
dec
jns
pop
rcl
mov
pusha
jnp
sbb
and
sub
call
sbb
mov
or
fiadd
mov
or
xchg
fs
dec
cld
and
bound
jmp
jbe
sbb
inc
(bad)
sbb
push
int3
xlat
jecxz
add
lock
push
mov
jmp
sub
rcr
data16
adc
int3
jmp
mov
pop
in
dec
push
push
xor
not
shl
aad
or
lods
jnp
jge
inc
(bad)
pop
aas
loope
and
in
push
(bad)
xor
jle
mov
aas
pushf
jle
shr
pop
cmps
xor
cmp
mov
lahf
and
adc
xor
jno
mov
adc
push
pop
outs
push
push
jmp
imul
sub
or
jo
popa
or
sti
in
jnp
jl
push
dec
cld
push
leave
xchg
sbb
ficom
xchg
jge
(bad)
and
fmul
lods
retf
inc
and
shl
adc
push
jmp
fsubr
and
mov
sbb
stc
test
pop
je
popf
push
mul
stos
xchg
or
mov
fiadd
push
shl
mov
mov
push
fistp
jne
std
scas
add
lock
stc
enter
data16
lds
sub
into
add
mov
out
dec
ins
mov
stos
nop
jle
sahf
test
dec
mov
sbb
daa
gs
mov
cmp
dec
sbb
jl
fsub
addr16
push
stos
into
ret
or
fstp
movs
pop
sbb
xchg
pop
cmp
movs
icebp
cmps
not
or
inc
push
les
cdq
data16
rol
sub
mov
ss
add
xchg
cmps
ja
jmp
jp
xor
cdq
xadd
mov
mov
repz
fs
into
cmp
test
or
push
jno
cli
lea
jae
mov
outs
jno
rol
or
(bad)
std
in
jg
sbb
jns
cdq
movs
xor
fdivrp
mov
outs
pusha
push
int3
mov
aad
jmp
xor
jns
es
je
aad
jo
push
pop
jmp
push
inc
xor
mov
and
in
sub
pushw
rol
imul
pusha
or
imul
popa
loope
shl
aaa
in
movs
fisttp
jo
and
xchg
popa
test
mov
cmp
mov
sbb
cmp
gs
arpl
cli
inc
push
stos
icebp
ja
fld
fs
mov
in
cli
jne
dec
xchg
ss
out
dec
out
mov
or
sub
and
in
addr16
mov
fisubr
jnp
pusha
xor
mov
mov
push
movs
enter
push
shr
lds
jecxz
jl
dec
les
jl
icebp
jl
sbb
push
loope
lods
add
mov
dec
aam
pop
inc
repz
test
test
push
es
jmp
jmp
shl
aad
ja
pop
gs
ret
add
and
loopne
mov
push
shl
mov
mov
push
sub
cmps
addr16
mov
pop
nop
lock
test
inc
push
in
mov
or
mov
loopne
cmps
stos
out
rol
test
scas
push
inc
mov
xchg
stos
shr
jg
or
fstp
adc
call
leave
call
sbb
xor
push
call
into
out
(bad)
xchg
xchg
push
sub
lock
mov
mul
push
cmp
enter
inc
std
jmp
or
sub
stos
cwde
aaa
addr16
push
cmps
push
push
mov
das
fwait
mov
cdq
ins
push
aaa
sbb
aam
jbe
add
jne
sbb
jbe
test
push
or
push
mov
rcr
xor
mov
les
jp
adc
stos
lahf
or
mov
mov
loopne
lea
push
fincstp
jge
xchg
nop
mov
daa
mov
and
xchg
sub
pop
mov
sti
popa
and
js
out
sub
scas
(bad)
sti
arpl
jp
xchg
out
test
mov
adc
and
retf
test
hlt
push
or
scas
(bad)
add
mov
sub
outs
push
jb
pop
mov
jle
xor
and
lds
cwde
mov
jle
call
fs
jns
ret
rcl
pop
push
add
daa
or
pop
lods
retf
xchg
mov
scas
popa
or
mov
inc
push
retf
cmps
repz
out
dec
or
xchg
cmps
pop
cmp
sub
xor
ret
xor
bnd
pusha
dec
add
and
(bad)
mov
jecxz
mov
loopne
jae
mov
cmps
ss
fadd
sub
sub
cmp
call
or
dec
scas
popa
loop
ret
int
adc
jbe
mov
mov
cmc
shl
test
and
pusha
repz
into
imul
xchg
in
jmp
fcomp
in
sbb
(bad)
shl
and
fild
pop
sbb
pop
faddp
xchg
push
add
stc
fnstenv
adc
ins
mov
bound
dec
imul
stos
add
stos
xchg
aad
sub
nop
mov
cwde
adc
imul
push
(bad)
jmp
jnp
push
out
add
mov
mov
jmp
cld
jb
cmp
cwde
inc
mov
clc
nop
inc
cld
sbb
aaa
cmovns
(bad)
sti
dec
inc
push
dec
dec
movs
ss
les
repnz
xchg
xor
stc
fsubr
mov
loope
mov
pushf
(bad)
and
jmp
pop
out
imul
gs
cmp
sti
retf
shl
mov
stos
push
in
inc
sbb
jo
pop
in
pop
cmc
push
adc
or
pushf
sbb
(bad)
sar
mov
push
retf
fdivr
sbb
js
xchg
inc
outs
xor
add
dec
sub
push
icebp
jge
pop
bound
fisubr
xor
dec
lahf
call
(bad)
jnp
scas
popa
sub
adc
lods
(bad)
push
ret
shr
cmp
sub
fwait
daa
jmp
cli
lods
dec
jne
jp
in
loop
sub
clflush
mov
jl
scas
imul
mov
stc
jbe
or
les
push
pop
in
adc
add
mov
mov
or
mov
scas
cld
in
or
sbb
mov
adc
pop
cld
mov
push
in
lods
adc
into
adc
jne
daa
lahf
clc
xor
xor
xchg
push
scas
xchg
lock
adc
jbe
icebp
(bad)
std
les
stc
or
dec
pop
mov
push
push
or
sub
and
cs
es
xor
ss
mov
xchg
lds
mov
cmp
or
push
(bad)
pop
sti
in
or
mov
gs
js
aas
sbb
icebp
aad
sbb
inc
sbb
mov
pop
es
fdivr
ins
lea
mov
push
loop
jnp
int
mov
pop
xor
mov
adc
sub
sub
mov
sbb
fimul
pop
pop
ss
aas
inc
cmp
sahf
dec
inc
mov
(bad)
cmc
je
sub
and
sbb
dec
aam
and
mov
xor
xchg
mov
dec
add
les
inc
das
add
dec
or
aaa
jae
sub
push
movs
dec
fwait
xchg
xchg
hlt
jns
ficom
mov
push
inc
loopne
pop
pop
mov
mov
cmc
push
ja
xchg
xor
or
sub
pop
and
jb
dec
sar
test
add
dec
mov
leave
mov
sub
ja
popf
repnz
pop
cmp
scas
movs
imul
fs
ins
hlt
iret
or
and
pop
sub
fisttp
movs
mov
mov
scas
stos
and
test
inc
mov
rcr
xchg
int
outs
jmp
xor
jae
mov
stos
mov
mov
(bad)
not
sub
in
loop
xor
sub
xlat
xor
sub
pusha
dec
rcl
inc
sbb
mov
jmp
in
push
add
(bad)
loopne
and
fld
dec
and
lds
out
mov
sub
lea
lds
into
jae
pop
je
mov
in
dec
xor
xchg
ret
(bad)
fidivr
xchg
test
adc
ss
repz
add
jne
mov
je
and
leave
cmp
cmp
shl
mov
inc
sbb
dec
cmps
xchg
xchg
mov
cmp
mov
mov
out
cld
retf
loope
xchg
rcr
test
sub
int3
mov
call
cs
push
cmp
xchg
cmp
pop
cwde
inc
jge
mov
imul
loop
or
add
sahf
repz
pushf
jo
cmps
mov
sub
jle
lahf
daa
sbb
mov
or
push
inc
repz
adc
sbb
xlat
and
and
ins
dec
add
push
dec
pop
pop
mov
pushf
dec
cdq
ja
sbb
sbb
cmp
xchg
out
mov
cmp
shr
mov
pusha
jo
cmp
mov
sbb
sub
dec
sub
dec
arpl
cli
out
sbb
in
pop
addr16
add
add
push
cs
adc
out
aad
lds
xchg
popa
stos
or
test
sbb
add
daa
imul
jle
pushf
lods
jb
jae
lea
inc
push
in
dec
lahf
(bad)
adc
xor
xchg
or
adc
outs
and
outs
mov
push
xchg
sbb
fnstsw
retf
xchg
inc
jb
je
nop
pop
and
(bad)
ins
inc
adc
inc
push
inc
stos
(bad)
ficom
imul
push
and
test
push
jl
xchg
inc
jno
adc
dec
inc
xchg
(bad)
stc
and
fbld
adc
xor
aam
xor
fisub
lahf
jmp
cwde
test
ficomp
scas
fsubr
pop
bound
or
es
mov
jne
mov
dec
mov
fbld
pop
stos
or
cvtps2pd
loope
aas
inc
scas
fnstcw
cli
jmp
inc
mov
add
test
add
repz
xor
add
push
xchg
dec
add
rcl
inc
sbb
dec
mov
mov
scas
inc
hlt
fs
push
mov
mov
xchg
and
push
ror
cdq
cmp
test
test
dec
mov
xor
fwait
add
jo
or
jnp
mov
leave
mov
push
pop
dec
push
aam
out
iret
sbb
jno
shl
loopne
xchg
popf
sbb
inc
and
xchg
icebp
sar
jne
cmc
jb
pushf
jge
iret
icebp
sub
inc
les
dec
mov
test
sbb
arpl
mov
sbb
enter
mov
cld
les
mov
jns
jae
shr
push
jae
jns
xor
icebp
mov
and
and
xchg
sub
dec
push
mov
jb
data16
push
data16
inc
fsubr
xlat
imul
add
xchg
mov
add
mov
pop
mov
in
out
int
jecxz
daa
inc
or
or
mov
fs
repnz
cmp
imul
pop
(bad)
jns
ret
adc
imul
movs
scas
lahf
fwait
or
(bad)
test
cmps
inc
inc
and
outs
jmp
popa
stos
cli
aad
push
adc
outs
and
xchg
outs
and
xchg
xor
pop
in
mov
adc
lods
mov
aaa
cmp
shl
sub
xchg
and
jne
mov
fst
aaa
push
test
loopne
xor
enter
in
sub
lds
jno
bswap
int3
daa
adc
push
jns
(bad)
and
loope
push
ror
mov
fsub
movs
dec
mov
ror
pop
jg
push
mov
jae
add
lods
sub
out
leave
(bad)
sar
dec
call
sbb
mov
mov
inc
sbb
or
add
dec
iret
out
popf
aas
mov
(bad)
xchg
popf
bound
loop
push
(bad)
and
mov
mov
(bad)
sub
pop
addr16
fmul
mov
xor
cwde
and
test
sbb
aaa
sbb
and
jg
push
mov
stos
jp
xor
int
sets
sub
hlt
xchg
ins
popa
sub
pop
sub
iret
xor
lods
xchg
(bad)
stos
mov
fidiv
adc
push
inc
cmps
in
pop
in
ficom
add
clc
repnz
ror
sbb
test
js
dec
xchg
mov
out
sbb
call
add
lods
sub
cmps
into
cmp
xchg
or
sub
aad
sub
xchg
cdq
adc
push
push
sbb
sar
sbb
cmps
jne
push
mov
xchg
test
lds
cmp
(bad)
repz
push
or
aad
stos
mov
loop
lea
test
pop
pop
jmp
cmp
cmp
sub
push
mov
out
lds
lock
dec
lods
es
mov
das
jns
add
mov
inc
(bad)
mov
or
pusha
in
pusha
jno
sbb
sub
xchg
popf
leave
add
push
std
lahf
pop
(bad)
xor
ror
mov
jge
push
dec
mov
and
mov
push
sahf
jl
data16
dec
pop
push
pop
push
movs
jmp
mov
ds
and
sbb
out
mov
addr16
int3
ins
xchg
adc
cmc
das
rcr
cld
test
xchg
pop
dec
push
cmp
ja
out
stos
call
adc
(bad)
sti
jbe
adc
or
jg
or
push
sub
mov
hlt
test
out
ins
jg
xor
ja
pop
push
jp
and
adc
or
neg
and
test
or
into
xchg
sub
out
pop
push
sahf
es
push
add
xor
adc
sbb
shl
push
dec
repz
jb
into
icebp
je
sti
mov
(bad)
bnd
jae
mov
xor
mov
fimul
push
pop
fidiv
shl
sub
retf
imul
jae
sbb
in
stos
out
ss
cld
cmp
xor
mov
jae
fmul
movs
(bad)
movs
push
into
jbe
jne
xor
out
sbb
ror
mov
test
(bad)
dec
nop
ss
or
(bad)
pop
mov
adc
push
(bad)
rol
retf
mov
pop
jbe
jmp
cmp
push
inc
imul
mov
clc
(bad)
sbb
fisttp
jnp
call
mov
dec
out
mov
in
push
lds
hlt
xlat
pop
imul
xor
icebp
sahf
and
add
and
loope
mov
pop
dec
pop
push
retf
sbb
sub
mov
outs
iret
jae
loope
mov
retf
neg
xlat
sub
rcl
pop
dec
sub
pop
cmp
test
gs
(bad)
push
test
or
sbb
fcmovnu
cdq
add
(bad)
mov
imul
xchg
push
or
fst
mov
sub
sbb
xchg
enter
xlat
jge
loope
push
hlt
loopne
stos
sbb
mov
lea
repz
dec
ss
or
pmuludq
mov
call
mov
xchg
popa
mov
nop
cmp
mov
shr
lock
sar
push
dec
inc
popa
jp
and
(bad)
dec
push
imul
imul
mov
xor
sbb
add
rol
stos
jae
test
sahf
mov
repz
aaa
lahf
fstp
loope
mov
push
mov
push
jne
out
repnz
jbe
jge
mov
loopne
(bad)
mov
dec
(bad)
daa
cbw
and
icebp
mov
pushf
inc
xchg
jle
push
or
scas
inc
pop
outs
mov
pushf
jp
push
mov
les
loope
ror
stc
call
adc
repz
fs
push
cld
lds
xchg
enter
ret
fwait
(bad)
jb
or
pop
push
repz
xchg
iret
enter
inc
les
out
movs
sbb
pop
inc
mov
push
and
add
in
jle
rol
mul
jle
ror
out
sub
and
adc
cmp
sbb
adc
int
sahf
data16
jns
pop
js
test
or
retf
xor
fdivp
in
mov
mov
je
call
out
(bad)
out
mov
adc
adc
fst
pusha
retf
and
data16
push
pop
add
das
out
dec
dec
call
in
pop
out
pop
jge
(bad)
daa
jmp
outs
bound
or
loope
fwait
dec
mov
clc
mov
retf
and
les
xchg
imul
fcom
and
test
les
push
aam
sub
std
and
cld
pusha
stos
push
jb
lock
imul
enter
inc
movs
adc
imul
call
loope
call
stc
xlat
int3
iret
pop
in
mov
fadd
aaa
out
pop
sub
out
dec
fiadd
pushf
jnp
fwait
xchg
pop
pop
lds
test
inc
sbb
pop
fild
pop
daa
icebp
dec
adc
pop
adc
scas
mov
nop
popa
or
test
and
cmp
ret
not
jmp
es
data16
mov
push
xchg
push
cmp
in
adc
dec
(bad)
inc
das
je
(bad)
in
in
jle
arpl
(bad)
mov
pop
jne
movs
scas
dec
loope
stos
xor
popa
shr
xor
mov
cld
mov
loope
or
cmp
mov
and
hlt
shl
repz
outs
dec
in
push
push
mov
clc
dec
push
out
cmp
xor
ficom
arpl
mov
sahf
loopne
cmp
fcomp
mov
pop
jecxz
jae
inc
mov
xchg
dec
xchg
scas
out
loope
clc
pop
lods
(bad)
dec
cmps
sub
mov
xchg
out
jmp
repnz
das
xchg
(bad)
enter
icebp
pop
mov
fdivr
pop
je
out
sbb
add
sub
enter
test
push
xchg
repnz
nop
pop
adc
dec
out
popf
jmp
popa
push
sbb
outs
popa
pop
mov
popa
cmps
lea
loop
push
or
out
sub
sub
ins
hlt
stc
push
ret
int
scas
lock
in
je
fcmovu
cmp
mov
pop
mov
test
add
cs
icebp
repnz
and
dec
jp
dec
outs
jno
ret
sbb
inc
mov
hlt
inc
cs
jnp
bound
or
int3
pop
mov
jl
pop
mov
(bad)
out
push
push
push
xchg
fdivr
sbb
mov
std
imul
jle
les
sbb
jnp
dec
and
cmc
sub
mov
inc
aad
das
adc
sub
and
mov
and
das
mov
stc
ins
stc
lock
jg
push
or
push
jns
cs
cmp
sub
and
jno
dec
mov
in
push
inc
fisttp
ins
bound
jo
in
lods
addr16
nop
and
pop
rcl
lods
jns
pop
sbb
adc
les
call
mov
imul
sbb
rep
addr16
rcl
je
clc
sbb
xchg
fcom
scas
ficomp
push
hlt
out
sub
push
jmp
(bad)
iret
sbb
adc
mov
out
mov
dec
cmp
sub
xlat
mov
cmp
clc
sbb
mov
jge
in
sub
xchg
in
scas
dec
out
je
rol
lods
js
or
test
icebp
mov
and
into
(bad)
cs
sub
js
mov
scas
sub
int3
repz
add
mov
(bad)
dec
or
stos
ins
or
xor
push
push
in
in
pop
dec
mov
mov
push
dec
fnstenv
sbb
out
mov
push
add
clc
sbb
mov
movs
and
push
cmc
push
(bad)
int3
fs
xor
dec
stc
call
pop
and
loopne
mov
xor
xor
push
fcom
add
mul
jle
or
lods
imul
sub
jbe
aas
lock
aam
push
mov
ret
mov
cmp
nop
mov
cdq
mov
test
scas
mov
les
cmc
cdq
test
dec
outs
cmps
cli
fwait
ret
dec
(bad)
das
and
hlt
addr16
push
mov
icebp
push
xchg
mov
xor
adc
test
lea
lahf
or
test
jbe
repz
mov
aas
(bad)
retf
lock
ds
nop
mov
fstp
jge
pushf
jae
cmp
arpl
add
fiadd
push
(bad)
in
cli
adc
pop
xchg
adc
push
out
cmc
sbb
test
inc
jecxz
pop
test
mov
mov
rol
ins
xchg
or
movs
retf
shr
(bad)
pop
and
mov
cmps
shr
movs
inc
xor
je
aam
ds
adc
xor
scas
fxsave
jb
aad
pop
rol
fwait
stc
int3
mov
inc
out
xor
cmc
icebp
fs
scas
mov
cmp
clc
outs
in
sub
mov
sub
test
xlat
pop
and
add
add
into
mov
xor
jmp
mov
xchg
jge
sbb
or
dec
stc
cmp
dec
jbe
xchg
popa
xor
mov
push
mov
repz
je
lods
add
pop
xor
les
lods
xlat
int3
aaa
xchg
rcl
mov
xor
cmp
popf
mov
cmc
mov
xchg
mov
dec
cmps
cmp
jo
out
add
inc
icebp
mov
jle
and
jmp
jle
data16
mov
mov
mov
or
je
xchg
inc
ins
adc
cmp
icebp
mov
jns
adc
add
inc
ja
cdq
sub
xor
int3
or
sti
sti
fst
mov
or
ret
mov
xor
sbb
inc
arpl
(bad)
pop
fldcw
push
loop
push
dec
xchg
outs
and
push
popf
jecxz
shl
push
mov
loopne
(bad)
out
push
movs
les
out
mov
retf
pop
adc
jmp
call
gs
inc
and
stc
outs
or
(bad)
cmp
sbb
add
and
mov
xchg
test
aas
inc
adc
loope
pop
out
xor
pop
xor
xchg
dec
cmp
sub
sub
mov
(bad)
cmps
test
add
loope
retf
mov
jecxz
data16
sub
fs
ret
mov
ret
xlat
mov
pop
mov
adc
ror
lds
dec
sub
bound
push
cli
int3
ja
es
push
sbb
js
cmp
bound
add
and
icebp
loope
cmps
jnp
push
sbb
(bad)
jecxz
aaa
xor
sar
mov
push
push
repz
pusha
push
push
jmp
loopne
int3
int3
add
pop
cmp
retf
mov
bound
xor
loopne
cmps
or
xchg
shl
or
cmp
jmp
jmp
fs
inc
rcl
cmp
mov
dec
lock
sbb
lds
pop
das
ins
and
cmp
out
call
test
mov
data16
cmps
mov
cmp
gs
pop
call
lds
retf
xchg
outs
cmp
mov
ja
out
and
push
ds
popa
jle
call
call
cdq
jl
push
or
pop
mov
push
and
mov
pop
mov
and
lods
daa
adc
repz
loopne
push
mov
test
push
pop
push
add
pop
out
loop
not
xchg
dec
js
(bad)
stos
lock
dec
pop
sbb
mov
sub
cwde
dec
daa
mov
lahf
xlat
and
sahf
adc
(bad)
in
push
or
fwait
ret
hlt
jge
sbb
pop
push
out
repz
ins
out
adc
loope
lock
inc
ins
xchg
adc
adc
mov
jae
xchg
push
xor
sbb
test
add
xchg
mov
jle
push
sbb
fwait
imul
hlt
xchg
xor
cmps
call
retf
fild
arpl
jg
xchg
dec
jmp
in
push
cmp
push
shl
sbb
inc
iret
mov
pop
mov
push
xor
stos
push
xchg
icebp
mov
mov
int3
call
getsec
fst
aad
ret
cmp
mov
out
and
dec
push
popa
neg
add
int3
sbb
mov
and
stos
adc
xor
div
add
dec
and
arpl
mov
push
aas
mov
mov
or
movs
or
mov
int3
rcl
test
ret
vcvtdq2ps
sub
dec
ds
call
push
sar
jnp
in
(bad)
out
adc
into
xchg
xchg
push
mov
mov
iret
ja
xor
dec
retf
cmps
les
popf
ja
(bad)
push
xor
xchg
push
fsubr
pop
mov
and
jno
call
sub
push
xchg
scas
jbe
push
push
push
dec
mov
mov
sub
cmp
xchg
je
sub
clc
jle
push
ret
sar
jmp
jbe
retf
cmc
dec
jmp
(bad)
in
lods
lods
or
or
aaa
ficomp
mov
in
imul
push
retf
js
jmp
mov
sbb
xor
leavew
in
scas
add
ja
bound
push
or
ds
retf
fist
sub
in
mul
es
xchg
add
outs
pop
lahf
lock
pop
mov
add
popf
pop
xor
xchg
outs
dec
ja
pop
sub
ret
mov
out
and
cmp
and
loop
cmp
into
fidivr
(bad)
cld
gs
mov
jb
mov
jnp
push
jns
outs
fisubr
mov
jo
mov
ja
stos
mov
mov
leave
xchg
fcom
or
(bad)
rcl
adc
or
rcl
or
fwait
fs
mov
cmp
adc
adc
mov
addr16
add
loope
inc
imul
or
cmp
fcomp
add
xchg
sub
jnp
test
je
pop
and
pop
ja
inc
pop
jp
jmp
add
xchg
cwde
test
fstp
shl
jae
inc
and
cmp
xor
repz
xchg
stos
xchg
jecxz
or
pop
add
fisubr
or
popf
jg
lahf
mov
or
add
mov
pop
mov
pop
inc
stos
push
loop
inc
mov
(bad)
add
mov
xchg
arpl
addr16
or
leave
mov
mov
dec
sbb
imul
gs
fbld
stos
jle
loopne
dec
(bad)
mov
mov
clc
or
pushf
jmp
and
lahf
lods
ins
call
push
out
mov
ficomp
mov
cwde
mov
xadd
test
sub
neg
lds
sbb
mov
movs
push
mov
sub
adc
(bad)
shl
mov
sub
add
mov
arpl
aaa
je
in
xchg
fnstsw
aas
cmp
mov
lea
rcr
les
push
dec
and
mov
add
movs
pop
(bad)
test
jmp
jmp
leave
pand
push
in
data16
jmp
(bad)
in
mov
pop
inc
fs
iret
push
or
mov
(bad)
mov
sbb
and
lods
(bad)
sar
mov
dec
jb
sar
fwait
es
int3
out
fs
sbb
mov
pop
daa
sbb
les
lds
shl
shl
jecxz
cli
das
cmp
mov
es
dec
push
jo
fcomp
nop
inc
cli
test
addr16
call
test
in
xlat
scas
xchg
rcl
jb
xor
lea
aam
and
daa
jecxz
retf
sahf
mov
dec
cmp
pop
jmp
jnp
pushf
xor
mov
and
and
sbb
add
inc
iret
cmp
inc
sbb
adc
adc
test
loopne
fcomp
nop
add
test
mov
ret
mov
call
lds
pop
test
pop
mov
jecxz
fld
cmp
xchg
push
jl
mov
sbb
sti
mov
xchg
push
inc
and
mov
push
bound
dec
adc
idiv
sar
enter
sbb
add
sbb
inc
inc
repnz
push
das
js
and
rol
jmp
call
vmptrld
mov
pop
pop
mov
and
rcr
fiadd
or
adc
cmps
push
daa
xchg
test
sti
mov
push
or
pop
je
movs
mov
push
test
dec
add
sub
out
les
stos
mov
fstp
out
sbb
push
lock
sub
icebp
les
hlt
push
(bad)
repz
sbb
fldcw
stos
fiadd
sub
xchg
pusha
ret
hlt
xor
xchg
xor
jp
mov
lods
hlt
pop
jg
xchg
mov
outs
jl
inc
xchg
es
ja
adc
es
fidiv
mov
pop
nop
jbe
push
inc
pop
push
add
ficomp
sub
mov
stos
and
mov
rcr
movs
pop
xor
in
aam
push
adc
lods
and
pop
xor
pop
mov
fs
pop
dec
push
dec
and
add
pusha
vpshab
stc
ds
xchg
pop
stos
pop
cs
(bad)
xor
lods
in
push
xor
mov
xor
imul
aas
out
icebp
sbb
iret
loopne
loopne
sbb
xor
add
push
mov
dec
sub
jb
or
ror
in
inc
fdiv
daa
xchg
dec
xchg
or
mov
popa
fnstsw
mov
sub
rcr
outs
push
inc
push
adc
sub
pop
popa
mov
xchg
int3
les
mov
pusha
mov
or
das
add
rcr
sahf
xchg
fld
cli
sbb
xor
mov
popf
ja
jle
xchg
shl
add
(bad)
iret
xchg
lods
jns
jp
out
cmps
jno
shl
cmp
out
mov
fst
sti
cmp
mov
jle
loope
mov
push
cld
(bad)
out
into
push
or
xor
das
fadd
ins
in
inc
mov
rol
xchg
je
sub
xchg
not
pop
add
add
mov
inc
repnz
xchg
call
movntps
fild
std
mov
inc
and
sti
jecxz
sbb
movs
stos
pop
fs
adc
in
push
inc
movs
scas
push
pop
and
lods
mov
test
inc
aam
loopne
inc
in
aad
retf
(bad)
js
fidiv
fidivr
jns
call
sub
xor
mov
dec
pushf
adc
dec
loop
cmp
xor
outs
cmps
movs
sbb
fdiv
push
xor
call
add
adc
rcl
jge
jbe
or
pop
call
fbld
imul
outs
dec
clc
mov
cmc
push
shl
sub
retf
inc
pop
lea
into
xor
jp
mov
jg
xor
mov
add
xchg
test
push
call
into
repz
pop
sti
ret
pop
ror
add
out
out
in
inc
jg
jo
loope
or
repnz
mov
cmps
stos
adc
aas
and
dec
clc
adc
sub
nop
mov
pop
and
mov
push
ja
pop
inc
mov
ds
fcmovne
cmp
arpl
cmps
dec
xchg
icebp
fdiv
in
push
ss
dec
es
and
adc
enter
jmp
sbb
dec
pop
sti
ror
call
in
and
inc
test
iret
imul
lea
push
adc
call
push
ins
daa
cs
pop
fist
cmp
add
mov
out
jge
fist
icebp
ds
or
sub
test
ja
fwait
daa
or
sbb
loopne
inc
cmp
push
fild
sub
lea
sub
add
(bad)
mov
mov
sahf
push
or
rcl
mov
dec
hlt
jnp
sub
dec
jo
out
shr
mov
aas
clc
gs
or
adc
push
movs
aas
or
jne
pop
xor
cmp
mov
les
jge
adc
cmp
ret
pop
add
xor
mov
pop
adc
pusha
jns
bound
jbe
or
sbb
mov
int3
fucomip
sbb
pop
jmp
or
or
jp
xchg
ficom
pop
lods
ss
ins
(bad)
sti
xlat
scas
mov
xchg
out
jp
out
xchg
dec
push
repnz
call
sbb
jge
bound
dec
and
retf
shl
popa
loop
lock
jno
sti
xchg
mov
sub
cli
sbb
mov
fadd
pushf
loop
and
and
dec
sub
xlat
xor
or
into
jno
and
pop
dec
or
dec
mov
dec
jecxz
cmps
or
out
test
(bad)
(bad)
fldcw
mov
jg
push
rcr
js
pop
cmp
mov
int3
or
pop
mov
push
adc
leave
fisttp
cmp
rcr
ds
mov
scas
jge
arpl
loopne
xchg
vaddsubps
fwait
add
xor
mov
js
push
jle
inc
pcmpgtd
fmul
adc
dec
(bad)
scas
inc
test
xor
(bad)
fcomp
push
adc
sbb
call
inc
push
in
push
hlt
and
jns
cld
or
aaa
(bad)
cld
push
rcr
sbb
es
xchg
pop
sub
jp
dec
and
add
loope
xchg
mov
dec
cmp
adc
push
jl
pop
xlat
cmp
stos
pop
(bad)
ror
ds
mov
mov
aas
cli
push
sub
pop
outs
push
arpl
mov
cmc
jmp
jmp
inc
int3
push
dec
dec
mov
pop
imul
not
sub
arpl
es
mov
push
in
aas
ins
dec
push
pop
mov
and
xor
fsubrp
out
cmp
push
lods
add
inc
dec
or
stos
stos
ss
cmps
inc
mov
in
inc
push
mov
jns
fldenv
inc
jmp
std
pop
ror
cmp
cmps
les
push
mov
jnp
sar
mov
mul
or
jmp
pop
xor
and
out
push
(bad)
out
and
pop
mov
mov
or
int
mov
shr
inc
outs
mov
arpl
mov
lahf
lods
add
jnp
jbe
repnz
sahf
ret
fmul
or
retf
test
test
cmp
inc
sar
lods
xor
jb
mov
sahf
mov
adc
imul
(bad)
mov
ficom
sbb
xchg
mov
push
inc
cmp
cmps
maxps
cmp
or
jmp
cmp
or
xchg
mov
sbb
shr
fld
in
inc
mov
out
mov
and
xlat
sbb
mov
dec
xlat
cs
xchg
mov
leave
mov
lds
xchg
xchg
push
jne
mov
sub
arpl
fs
inc
dec
xchg
inc
sub
xlat
pop
adc
imul
or
add
dec
inc
xchg
out
cmp
jle
(bad)
jl
jb
mov
mov
arpl
fldcw
or
js
movs
fisub
pop
pop
dec
adc
sub
int3
lfs
ins
pop
stos
jae
mov
sub
ss
mov
add
add
sbb
pop
pop
aam
stos
or
out
ins
cmp
xchg
jmp
lahf
inc
push
cmp
pop
add
iret
pop
jbe
in
cdq
jnp
push
adc
daa
ret
mov
and
retf
pop
add
cmp
std
cmp
ret
or
cld
fs
add
es
push
mov
shl
mov
call
dec
inc
add
dec
dec
shr
xor
(bad)
jmp
rol
clc
int3
adc
dec
mov
cmps
les
jmp
lea
xchg
ficomp
(bad)
lahf
push
aam
xor
repz
idiv
dec
xor
rcl
stos
push
pop
jp
arpl
inc
cmp
repz
push
adc
inc
mov
into
mov
rcl
rcr
lock
test
fbld
xor
sbb
sub
mov
add
push
(bad)
jb
(bad)
out
faddp
aam
jbe
(bad)
outs
mov
mov
aam
addr16
pop
mov
cmp
jg
(bad)
arpl
push
mov
xchg
(bad)
cwde
das
mov
mov
jbe
fimul
cmp
sbb
test
retf
jnp
mov
sbb
imul
mov
dec
sub
(bad)
push
dec
out
icebp
fisttp
ror
cmp
mov
fisttp
sti
xchg
loop
pop
pop
pop
call
fistp
lahf
xchg
inc
ja
cwde
cmp
(bad)
pusha
(bad)
cmc
and
jle
mov
inc
and
jle
mov
rol
int3
call
(bad)
pop
addr16
cmp
cmp
push
dec
pop
dec
fadd
int
call
ror
pop
retf
push
dec
out
add
push
(bad)
mov
in
mov
mov
add
jmp
out
jbe
dec
ficom
arpl
jne
dec
es
jmp
pop
add
push
enter
loop
push
mov
int
push
pop
xchg
inc
and
xor
mov
(bad)
mov
lds
mov
inc
push
cmp
add
pusha
mov
addr16
jge
arpl
mov
xchg
ins
jge
push
cs
mov
rcr
ds
adc
lods
mov
mov
stc
mov
int3
iret
mov
lea
mov
dec
(bad)
pop
fild
int
jmp
ja
mov
cli
pop
pop
push
fisttp
fisttp
xchg
jne
(bad)
aas
js
cmp
mov
outs
push
mov
pop
xchg
mov
retf
fwait
mov
jmp
cmc
push
ja
pop
in
movs
enter
inc
les
rcr
fs
movs
ret
cmc
bound
or
push
xchg
xchg
push
retf
add
and
inc
(bad)
mov
jmp
sbb
int
in
movs
pop
jae
xchg
adc
fldcw
cmp
mov
adc
mov
std
adc
outs
mov
pop
icebp
add
xchg
loope
mov
popa
push
or
pop
fstp
push
adc
ins
cmp
inc
fidiv
sub
int
xor
mov
jnp
les
xchg
out
jg
ss
stc
ret
add
(bad)
cld
loope
sbb
xchg
in
adc
daa
jmp
cmps
sbb
xor
adc
pop
(bad)
xchg
cmp
xor
cmove
movs
and
cs
inc
mov
sbb
sub
shl
pop
mov
jmp
je
push
cmovbe
inc
dec
jno
or
sar
add
aaa
mov
leave
rcr
dec
es
adc
jmp
cmc
push
loope
clc
inc
stos
arpl
out
jge
setnp
and
ss
clc
ins
in
movs
js
lea
adc
mov
push
stc
mov
cmp
scas
pop
dec
xor
cwde
or
stos
pop
inc
xchg
jmp
or
mov
mov
and
pop
mov
dec
aas
pop
jmp
cdq
ror
fimul
ss
std
dec
scas
cmc
enter
xchg
out
test
jo
fs
aas
xchg
stos
in
mov
call
cld
aas
div
jecxz
push
dec
in
in
cs
or
movs
outs
adc
mov
cmp
das
out
xor
popf
in
dec
pop
cli
out
push
jae
loopne
call
jl
imul
(bad)
inc
sbb
pop
push
jno
lahf
scas
add
cmp
sub
and
add
push
pop
mov
xor
cdq
call
jl
ds
pop
push
sbb
ror
hlt
mov
mov
std
sub
ret
jo
adc
movs
xchg
sub
outs
adc
dec
xor
mov
out
fcom
pop
mov
xchg
push
retf
push
daa
sub
jo
(bad)
cli
in
stos
cs
dec
jg
push
add
pop
in
and
inc
fucomi
in
mov
(bad)
jns
push
repnz
nop
fist
aaa
addr16
adc
jmp
push
rcl
cmp
aam
jo
push
or
or
or
mov
add
sbb
ja
push
dec
jae
add
mov
sbb
pop
into
out
push
lock
inc
data16
push
jnp
add
pop
bound
rol
call
mov
retf
lea
cmps
sbb
and
out
jno
mov
and
inc
xchg
scas
aaa
xchg
pop
adc
add
mov
enter
mov
gs
in
add
push
mov
sub
sub
ds
fistp
inc
mov
jae
adc
cmc
cs
addr16
popf
sar
mov
test
test
cmp
aaa
pop
mov
mov
mov
cld
mov
lods
clc
mov
push
mov
mov
jg
dec
imul
bound
jbe
push
or
movs
jnp
mov
sub
mov
jb
sti
cwde
scas
retf
stc
xlat
or
xor
jne
push
inc
aam
pop
enter
fimul
ss
mov
ss
stos
mov
xchg
mov
imul
pop
int
sbb
and
and
sub
(bad)
pop
cdq
rol
cmp
fidiv
mov
jbe
stc
sbb
bswap
and
sbb
mov
pop
pop
push
sti
lods
jo
sub
pop
pop
pop
or
pushf
popf
pushf
arpl
jbe
gs
int
outs
mov
les
mov
gs
mul
in
dec
fild
inc
cmps
and
leave
in
xor
in
xor
jmp
fs
add
xor
adc
dec
xlat
pop
inc
clc
dec
in
cmp
mov
fisubr
test
mov
inc
shl
fs
sub
rcl
pop
test
xor
dec
lods
xchg
inc
dec
inc
adc
(bad)
out
(bad)
and
dec
or
dec
inc
pop
cmc
xor
outs
stos
les
adc
adc
lock
or
aaa
add
xor
pop
jp
xchg
lods
jg
stc
dec
aad
out
loopne
pop
stc
std
push
sub
or
ret
bound
outs
inc
add
jno
xor
pusha
int
jle
xchg
xchg
or
adc
popa
scas
mov
inc
mov
jb
dec
jb
rcr
mov
cmp
fild
test
je
(bad)
aaa
push
imul
xchg
xchg
popa
mov
mov
jb
xlat
stos
repnz
push
xchg
mov
ins
lods
dec
inc
inc
in
sbb
push
jg
xchg
cmp
jl
mov
fadd
dec
test
xor
ins
and
popf
sub
fdiv
fiadd
sub
xlat
pop
jmp
add
mov
xor
xchg
add
or
sti
ss
pop
pop
fnsave
test
lock
out
jno
scas
mov
pop
ss
inc
cmc
and
jg
mov
pop
sbb
adc
xchg
xor
movs
and
repz
mov
push
mov
stc
jl
mov
mov
or
gs
scas
inc
data16
rcl
loopne
jmp
ins
cwde
add
add
fadd
lods
jns
push
fnstenv
mov
fucomi
into
fcomp
and
aaa
sbb
sub
and
pop
neg
push
dec
or
ds
and
es
xor
mov
ror
adc
jb
(bad)
enter
aad
ret
in
jmp
call
add
dec
cld
sbb
cdq
in
cdq
sti
inc
repz
fcmovnb
loop
es
mov
jo
or
and
xor
and
div
push
xchg
sbb
ret
pop
xor
push
popa
mov
jg
dec
push
cmc
outs
sbb
ins
repnz
addr16
sbb
test
not
lods
xchg
sub
jbe
xlat
sbb
add
sar
mov
jns
mov
dec
jp
inc
cld
(bad)
aad
cmp
dec
add
xchg
sbb
scas
push
mul
enter
loope
rol
xchg
(bad)
xchg
cwde
mov
loope
aaa
sub
mov
pop
ficom
xchg
(bad)
jo
test
out
sbb
inc
retf
iret
imul
pop
push
(bad)
mov
or
push
aas
jp
pop
(bad)
test
adc
enter
shl
mov
rol
xor
dec
rcr
pop
lods
jns
cwde
les
inc
adc
xor
test
jg
push
stos
mov
out
je
jnp
int
mov
ja
fist
stc
add
xor
outs
xor
jb
add
mov
push
(bad)
lods
repnz
jg
movs
add
fwait
xor
jbe
add
in
pop
rcr
adc
inc
sub
dec
rcl
jns
xlat
(bad)
stc
cmp
adc
jne
pop
mov
test
or
xchg
imul
je
(bad)
sbb
test
or
jne
les
xor
std
fs
pop
(bad)
daa
fsub
jae
push
fiadd
or
dec
dec
into
mov
popf
add
fstp
mov
adc
cmc
fcmovb
jg
test
in
sub
iret
cmp
test
cmps
lods
mov
jae
into
pushf
xor
inc
lods
push
stos
mov
dec
sub
adc
rcr
mov
retf
cwde
mov
test
dec
pop
push
dec
mov
mov
adc
mov
sbb
(bad)
lock
push
retf
push
add
test
pop
inc
xchg
loop
jbe
cld
sbb
add
out
rcr
xchg
inc
inc
arpl
adc
ja
std
movs
lahf
jp
out
jecxz
ins
mov
fadd
out
cmc
jo
xor
loop
int3
lods
test
and
addr16
sub
pusha
ja
adc
mov
lods
retf
ins
test
aad
pushf
mov
inc
inc
dec
xor
inc
sub
push
and
add
arpl
jb
es
xor
sbb
movs
push
(bad)
lods
pop
les
stc
mov
scas
inc
and
xchg
aam
add
xchg
push
xchg
sub
add
int3
or
mov
or
or
test
movs
cwde
cwde
retf
inc
mov
mov
out
sub
ds
call
pop
jnp
sub
add
fistp
and
sub
or
je
mov
jae
test
lea
and
test
icebp
or
mov
mov
imul
add
popf
push
xor
retf
or
jbe
mov
fs
aaa
inc
lods
clc
add
imul
jmp
stos
inc
pop
and
inc
xchg
ds
pushf
pop
call
and
cmp
pop
sub
in
dec
cmps
or
jb
jne
retf
mov
enter
adc
pop
jle
ret
xchg
pop
cmp
push
stc
and
test
xchg
ins
jne
aas
mov
cs
dec
pop
xlat
repz
in
pop
jle
cmps
mov
lahf
lods
jb
into
inc
adc
(bad)
xchg
mov
add
jge
adc
js
(bad)
dec
mov
inc
xor
imul
std
mov
mov
and
inc
push
mov
sbb
bound
imul
shl
retf
enter
pop
lahf
call
addr16
mov
outs
mov
cmc
xchg
lock
jg
xlat
xchg
push
or
dec
inc
adc
shl
cmp
gs
push
rcr
aas
clc
cmp
xchg
stos
add
mov
adc
call
mov
ds
push
push
je
pop
inc
stos
mov
fs
pop
in
mov
ret
fadd
ficom
je
jg
adc
dec
in
outs
in
mov
mov
sti
sub
imul
dec
fmul
lods
retf
add
test
fdivr
mov
mov
push
punpckhdq
jl
test
neg
inc
add
imul
mov
sub
push
mov
xor
stos
cld
or
sub
lock
or
sub
push
popf
mov
jl
dec
pop
add
jae
loop
xor
jl
enter
xor
lods
sahf
out
and
scas
pop
retf
mov
xor
push
in
xchg
scas
cmp
pop
inc
movs
aam
push
aaa
movs
shl
ja
pop
mov
xor
xor
enter
mov
imul
mov
outs
push
shl
cdq
imul
iret
sbb
sti
xchg
or
cwde
xor
push
retf
mov
jmp
xchg
and
add
adc
mov
ret
scas
push
jno
inc
push
in
popa
popf
lods
movzx
stc
dec
rcr
icebp
xor
jp
aaa
nop
adc
mov
add
sub
mov
push
mov
add
cmp
call
inc
jle
aam
push
push
cmps
jne
sub
fdivr
aad
clc
adc
mov
and
loopne
mov
add
mov
mov
sub
mov
rcr
push
dec
clc
rol
test
(bad)
std
idiv
mov
xchg
adc
sar
ins
mov
xchg
jbe
ds
mov
fs
xchg
sbb
test
scas
in
adc
lahf
sub
mov
(bad)
test
jae
or
fidiv
mov
mov
pop
test
rcl
push
mov
mov
lahf
stc
mov
shl
nop
les
push
inc
lods
mov
int
out
shl
sbb
lods
sbb
sbb
rcr
mov
mov
lods
pop
icebp
jg
aaa
sbb
ds
es
push
mov
mov
(bad)
ins
(bad)
(bad)
shl
ins
lds
ror
imul
hlt
xor
push
aam
sahf
stos
mov
ins
mov
and
or
or
repz
imul
pop
test
dec
sub
gs
les
in
add
mov
mov
ficom
push
inc
xlat
cmc
addr16
and
jb
mov
mov
inc
or
inc
shr
cmove
adc
aaa
in
mov
aad
jns
mov
adc
jno
mov
icebp
retf
or
and
dec
aaa
inc
or
test
jl
daa
dec
adc
mov
lahf
je
leave
cli
and
mov
fldenv
mov
ror
mov
enter
and
fld
mov
pop
cwde
fisttp
sbb
inc
adc
or
or
out
cmp
les
in
push
test
fnclex
xor
mov
and
mov
or
test
inc
icebp
pop
loopne
in
and
cmps
js
push
cld
pushf
repz
add
sbb
push
sbb
aaa
xor
pushf
retf
aad
cmc
shr
add
xor
push
lock
(bad)
sti
in
mov
jns
mov
pop
sbb
mov
xor
shl
shl
push
(bad)
int
ins
repnz
mov
jl
pop
into
jle
or
push
cmc
inc
fsubr
mov
jmp
test
dec
les
jmp
movs
lods
dec
gs
adc
repnz
int
mov
jbe
push
pop
mov
push
add
lods
mov
mov
aaa
lods
push
jle
fstp
jno
pop
fistp
pop
adc
sub
xchg
sub
fidivr
xchg
imul
fwait
cdq
jmp
repnz
test
sbb
sbb
pop
std
or
mov
ins
dec
cmp
jecxz
jmp
cli
xor
xor
push
test
push
mov
sahf
mov
das
mov
pop
(bad)
push
xchg
ret
sbb
gs
sbb
mov
mov
ror
retf
ds
inc
outs
cmp
cmps
mov
movs
ror
pushf
cld
and
fwait
sbb
call
xchg
dec
mov
into
push
popf
aaa
sub
jmp
loopne
mul
outs
gs
stc
mov
push
or
retf
pusha
jle
inc
fxam
leave
jae
sahf
adc
push
push
test
pop
and
pop
hlt
addr16
fnstsw
mov
jne
sub
test
ins
lahf
out
jge
jmp
pushf
pushf
or
inc
iret
retf
adc
adc
mov
jecxz
cmp
xor
lds
mov
xchg
sbb
inc
sub
pop
mov
jmp
sahf
je
jl
pop
or
in
(bad)
inc
xor
mov
xor
push
arpl
xchg
xchg
pop
pop
sbb
rcr
je
mov
mov
mov
and
dec
or
dec
mov
jno
fldenv
repnz
sahf
xor
(bad)
push
xlat
push
pop
mov
pop
and
bound
xor
ins
xor
dec
xor
pop
xchg
bound
pop
sbb
xchg
mov
mov
fist
lahf
xchg
adc
xchg
adc
sub
shr
xor
out
or
add
mov
dec
call
and
addr16
outs
scas
xchg
push
aam
lods
fidiv
pop
sub
adc
cli
mov
ja
and
pop
mov
add
fisttp
stos
aad
cmp
shl
add
xor
push
hlt
jp
mov
fldenv
mov
dec
pop
div
mov
cmp
les
push
stos
push
in
pop
xlat
loope
stos
test
mov
test
mov
pop
mov
gs
dec
sub
add
add
(bad)
and
adc
lods
adc
or
jmp
mov
pop
int
or
jnp
imul
fcomi
fstp
test
jle
ins
xchg
xchg
cwde
mov
adc
jb
push
xor
pop
mov
mov
stos
adc
rol
stos
stos
test
shl
bound
leave
test
popa
inc
lods
inc
mov
pop
movs
loope
xor
mov
call
lods
fisubr
scas
test
shr
mov
add
xchg
outs
and
call
fnstcw
and
movs
dec
mov
dec
(bad)
in
mov
and
out
inc
int3
mov
pop
xchg
adc
into
ror
loopne
stos
adc
scas
mov
adc
sub
push
pop
xchg
fild
xchg
xor
sbb
cmp
mov
mov
(bad)
mov
sbb
mov
pusha
fcmovnb
push
push
pop
mov
js
pop
add
mov
ja
and
popf
outs
fsub
mov
test
cdq
adc
shl
or
in
stos
pop
cli
push
sub
adc
retf
cmp
dec
push
mov
das
int
dec
out
data16
lds
(bad)
(bad)
dec
mov
loope
cmp
mov
cdq
pop
call
adc
pushf
fstp
vpshad
pop
sti
in
shl
inc
cmp
or
add
sub
jae
or
xchg
dec
ret
call
pusha
pop
stos
cmc
sbb
out
cmp
movs
sub
mov
into
pop
or
pop
mov
dec
xchg
adc
(bad)
sbb
pushf
(bad)
mov
leave
push
mov
test
sahf
shr
pop
jmp
addr16
mov
cld
xchg
sbb
jb
cmp
sub
leave
rcr
ror
mov
xchg
lods
push
add
xor
das
add
push
and
or
jp
fs
mov
inc
div
daa
and
(bad)
jle
mov
icebp
les
popf
out
les
mov
sub
cld
(bad)
pop
inc
fnsave
bound
inc
pop
pop
xchg
mov
stc
pop
mov
xor
sar
data16
not
jge
mov
fsub
push
arpl
xchg
mov
bound
xor
inc
das
mov
test
xchg
daa
dec
int3
add
movs
adc
add
jne
jg
sub
setae
popa
jmp
mov
cmp
inc
xchg
sbb
ror
and
ret
test
xchg
in
fdiv
jmp
pop
push
pop
rcl
js
xchg
fidivr
pop
rol
inc
fimul
mov
push
stos
jns
adc
dec
sbb
sbb
push
jae
xchg
mov
test
jmp
retf
sub
int3
adc
js
add
add
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
nop
pop
dec
add
inc
add
