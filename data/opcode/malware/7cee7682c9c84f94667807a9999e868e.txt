(bad)
fdivrp
sti
call
or
nop
add
mov
test
mov
add
add
shl
icebp
mov
mov
add
sbb
(bad)
push
push
ret
add
add
add
cld
dec
es
je
and
jmp
or
je
jmp
lea
sub
ret
or
(bad)
call
mov
mov
inc
shl
sub
lea
push
mov
add
or
push
sub
or
add
(bad)
jmp
dec
dec
jne
push
push
stos
sbb
pop
lea
push
lea
rcr
push
or
ret
movs
dec
cmp
pop
add
in
(bad)
out
pop
mov
leave
je
mov
adc
je
imul
jmp
ret
pop
repnz
mov
mov
pusha
jo
enter
and
sbb
or
clc
hlt
push
add
inc
inc
aaa
movd
pop
mov
sub
mov
sbb
lock
mov
retf
push
pop
pop
pop
in
xchg
cs
or
aas
sbb
inc
out
dec
fimul
and
add
push
(bad)
mov
popa
fbld
pop
cmp
shl
sub
and
es
dec
in
xor
sbb
in
dec
test
add
xor
dec
mov
or
fwait
pop
ds
jb
mov
mov
call
xchg
adc
and
cmp
out
mov
retf
add
sar
push
mov
in
ins
out
sti
int
xor
adc
and
mov
pop
adc
call
test
sbb
in
mov
jmp
ds
mov
inc
push
push
mov
push
cmp
jg
movq
push
push
xchg
hlt
dec
jns
dec
call
cmp
jl
add
xor
jb
inc
pop
pop
pop
jmp
add
pusha
push
push
stos
pusha
push
or
or
inc
and
jle
cmp
cwde
sahf
jp
lock
inc
inc
xchg
dec
call
push
call
xlat
shl
hlt
mov
movs
add
cs
push
add
push
or
lods
dec
mov
pushf
stos
(bad)
sub
retf
sub
xchg
inc
sub
push
cmp
movs
popa
dec
add
rcl
push
cmc
adc
and
in
imul
mov
mov
push
jmp
xor
fwait
push
lea
jb
shl
pop
jge
inc
cmps
call
and
adc
mov
and
fcomip
mov
outs
cmp
pop
fld
call
out
sub
test
sbb
test
pop
push
clc
jmp
cmp
or
gs
add
pushf
clc
cmps
sub
test
xchg
adc
add
sub
fisub
cld
je
test
clc
lods
mov
or
out
pop
pop
mov
rep
xor
cmp
or
nop
push
add
adc
jbe
clc
ins
mov
inc
hlt
je
cmp
jge
in
fucomi
js
nop
inc
call
inc
push
jge
pop
lock
xor
loope
in
pop
stos
pop
mov
stc
pusha
shl
sahf
or
cmp
scas
js
push
and
dec
and
test
jne
xchg
push
add
mov
cmp
je
dec
ret
adc
or
cmp
inc
ret
test
xor
mov
cmp
jne
or
cmp
and
in
sbb
lods
jns
shr
cmp
jne
sub
add
or
jne
jl
sbb
shl
imul
adc
add
jmp
push
jecxz
add
data16
pop
lods
aam
retf
sbb
jmp
push
pop
in
les
fdiv
aas
mov
dec
rep
add
push
push
lahf
inc
pop
mov
cmp
jg
lods
stos
add
pop
popa
jns
inc
outs
pop
or
mov
lods
and
call
jno
sbb
cld
test
(bad)
es
(bad)
push
pusha
add
out
push
scas
mov
pop
push
inc
call
sbb
adc
add
mov
pop
xor
test
xor
in
xor
jo
call
mov
add
les
and
aas
mov
ss
jecxz
inc
dec
inc
pop
cmp
jnp
add
loope
pushf
mov
test
cld
adc
repnz
hlt
dec
add
loope
dec
mov
dec
pop
mov
jp
xor
pop
add
adc
mov
mov
loopne
or
cmp
imul
mov
mov
in
push
sbb
or
scas
or
cmps
aaa
vfmsubadd231pd
in
sbb
add
loope
pop
sub
sti
je
mov
ror
add
sbb
fnsave
xchg
or
dec
or
sbb
add
pop
mov
fild
fimul
xor
cdq
jecxz
std
mov
xchg
fs
push
lds
adc
je
xor
nop
call
pop
and
or
pop
getsec
bound
js
pop
call
cs
push
cs
adc
inc
pop
outs
pop
adc
cmp
add
push
or
test
pop
adc
sub
test
adc
adc
add
inc
push
and
mov
add
xor
cmps
push
inc
xor
inc
(bad)
adc
and
or
add
aas
nop
mov
or
lods
xchg
mov
inc
cwde
adc
and
stos
es
or
test
dec
mov
push
std
jmp
call
xchg
xor
and
adc
sub
pop
movs
popf
and
and
xor
push
push
xor
hlt
or
hlt
rcl
leave
lds
hlt
fiadd
pop
dec
loope
adc
sub
sbb
shr
xor
int
push
xchg
jmp
ror
and
je
sbb
jg
and
in
sahf
in
cwde
stos
or
inc
ja
and
cmp
mov
cmp
leave
adc
into
sbb
loopne
cmp
add
or
mov
ja
mov
inc
clc
ret
inc
xchg
cld
cmp
ins
jae
xchg
das
clc
push
sahf
or
hlt
mov
hlt
xor
add
call
pushf
push
add
xor
imul
ret
mov
pop
push
cmp
pop
add
mov
data16
or
jmp
dec
add
test
adc
in
or
and
add
push
repz
push
add
cmp
adc
push
nop
sub
mov
and
xchg
sahf
jbe
hlt
mov
nop
test
dec
and
add
inc
xor
clc
inc
clc
ret
or
hlt
rcl
retf
lock
and
leave
lea
loope
add
cmp
pusha
test
jne
pop
and
inc
mov
cmps
pop
clc
dec
clc
and
shl
add
fs
xor
mov
or
add
daa
cld
hlt
xchg
cmps
sbb
pop
lods
lock
fisttp
cdq
nop
clc
lock
or
(bad)
adc
and
add
or
or
push
add
xor
xor
pusha
add
add
hlt
sbb
push
scas
daa
add
cli
jmp
jnp
xlat
into
shr
ss
add
inc
outs
out
push
jne
jl
mov
imul
fnstcw
data16
inc
push
ins
cld
fild
dec
sbb
sbb
sbb
or
mov
inc
add
fcomip
mov
mov
in
fstp
jp
ins
jno
or
in
es
or
out
push
add
pop
and
or
clc
imul
popa
mov
nop
xchg
jo
inc
adc
jecxz
dec
sbb
sub
push
out
push
ds
jmp
jg
movs
jecxz
inc
push
cmps
in
xchg
data16
inc
xor
sub
bound
(bad)
hlt
out
jne
xor
imul
mov
pop
leave
in
in
mov
sub
or
mov
movs
xor
xor
int3
push
jb
lock
xor
add
adc
inc
sub
in
loop
stos
sub
sbb
sbb
pop
sahf
cmp
mov
std
clc
inc
es
hlt
lea
hlt
pop
xchg
bound
xchg
add
les
sbb
jo
dec
pop
std
cld
sbb
xchg
pop
clc
mov
das
aas
add
push
and
xor
mov
sbb
inc
add
xchg
cmps
dec
popf
(bad)
mov
push
add
retf
xlat
pop
add
push
retf
aad
and
out
test
push
add
add
data16
xor
jl
jmp
sti
xor
inc
mov
ds
call
fld
lea
push
nop
add
call
std
jo
jg
xchg
ja
xor
mov
pop
inc
mov
xchg
and
sub
repnz
aas
loope
popf
cwde
jmp
inc
repz
bound
fimul
pop
mov
and
jnp
mov
xlat
dec
mov
adc
pop
dec
cmp
call
push
jns
loopne
(bad)
popa
jp
jns
fcom
cmp
aam
sbb
rcl
inc
xchg
pop
in
inc
sub
fcomp
fcom
test
test
int
les
push
neg
sub
add
adc
push
mov
mov
push
repnz
mov
or
and
stos
and
sub
fcomp
das
adc
sbb
lahf
push
or
mov
inc
das
mov
mov
push
shr
mov
jnp
pushf
or
jnp
aad
aam
or
xchg
xchg
xchg
pop
dec
popa
jnp
adc
pop
mov
sbb
jae
add
xchg
sub
dec
(bad)
(bad)
arpl
inc
pop
or
shr
scas
push
mov
jne
adc
jl
or
add
dec
cmps
xchg
push
mov
aad
mov
test
pusha
lock
mov
in
ret
dec
xchg
nop
mov
inc
ror
gs
inc
or
lock
sbb
inc
(bad)
sbb
push
cdq
push
ret
dec
add
stos
imul
xor
fs
sbb
cwde
mov
sub
adc
or
inc
sbb
lahf
or
mov
inc
leave
xchg
dec
mov
adc
cmps
cmps
xor
ret
push
jecxz
stos
sbb
test
sbb
inc
mov
and
push
mov
mov
cmc
nop
xchg
xchg
or
or
aas
lahf
mov
jnp
lods
push
mov
rol
into
mov
mov
jb
pop
stos
mov
scas
jnp
mov
cld
nop
dec
fldcw
sar
xchg
cmp
and
ret
sub
loopne
fnsave
cmp
ret
or
cmp
push
add
bound
jae
(bad)
mov
push
hlt
ret
scas
or
mul
xchg
add
or
inc
push
retf
jl
pusha
add
xchg
ret
jns
movs
xchg
add
sbb
sbb
pushf
push
or
and
push
mov
shl
or
ror
push
fstp
in
(bad)
(bad)
dec
adc
inc
sub
xchg
push
xchg
fs
popf
adc
ds
dec
push
add
das
pop
in
and
xor
and
sbb
and
leave
and
rcl
stos
add
bound
fwait
inc
cs
add
dec
lahf
popa
shr
or
imul
ret
aas
mov
push
pop
aam
rcl
sub
pusha
stos
test
adc
mov
nop
sbb
sbb
pusha
in
call
mov
js
add
imul
jl
lock
in
cmp
ins
xor
test
test
add
add
leave
loop
aam
sbb
and
pushf
sub
fild
aaa
js
ins
xchg
pop
fld
lods
mov
mov
(bad)
pop
jecxz
movs
fist
inc
adc
ins
fild
jns
sub
add
inc
jb
sbb
and
xchg
(bad)
inc
and
jmp
pop
jmp
mov
(bad)
jnp
dec
xlat
and
je
test
cmp
jne
inc
inc
dec
neg
(bad)
(bad)
mov
cmp
jne
mov
mov
adc
add
add
sti
(bad)
mov
jecxz
pop
cwde
enter
shr
je
repz
je
mov
mov
dec
or
mov
jne
sub
shr
sbb
sti
jg
sbb
rcr
jmp
les
shl
(bad)
test
adc
or
jo
cmp
int
mov
lea
adc
jae
shr
add
out
mov
out
xor
sbb
loope
or
mov
jmp
pop
imul
je
fadd
(bad)
or
movs
dec
xchg
test
cmp
loopne
push
add
fcom
xchg
dec
push
push
mov
sbb
outs
sub
je
dec
adc
jbe
mov
jo
aam
daa
and
cmp
inc
inc
sub
add
add
ror
jge
dec
sbb
rcl
int3
imul
adc
pop
fiadd
les
pop
out
shl
mov
rol
or
lds
cmp
mov
aad
nop
shl
or
cld
clc
push
sub
mov
nop
data16
sub
bound
sbb
mov
pop
ret
and
mov
daa
adc
cld
shl
lock
int3
mov
cmp
test
std
js
xor
or
mov
int3
daa
(bad)
jge
dec
aad
dec
pop
add
inc
loopne
cs
jecxz
add
dec
das
sub
inc
mov
sar
and
movs
imul
stos
pop
inc
adc
inc
dec
test
sub
ins
push
adc
rcl
xor
inc
mov
dec
stos
dec
add
in
push
ins
jo
mov
mov
mov
sahf
cmps
mov
lock
xor
inc
lock
out
adc
std
adc
in
in
or
add
loopne
xor
adc
and
cmp
ret
inc
leave
shr
push
add
add
sub
push
xor
push
scas
push
(bad)
dec
mov
enter
mov
enter
xchg
sbb
cld
dec
repz
popf
sub
retf
xor
add
inc
enter
xlat
inc
les
fsubr
psraw
jmp
out
inc
mov
jns
and
fs
call
push
call
push
std
add
sub
test
fsub
xor
jo
int3
and
loopne
sti
(bad)
int3
sbb
std
add
mov
add
(bad)
push
push
dec
cmps
aaa
ss
inc
xor
adc
add
add
inc
jb
pop
nop
sbb
dec
ja
fs
out
push
sbb
push
and
sbb
mov
ins
rcl
test
jae
repnz
xor
sbb
pop
mov
shr
pop
push
(bad)
int3
xor
out
test
add
ret
fiadd
and
xchg
les
fldcw
movs
ror
add
dec
inc
int3
inc
dec
push
adc
addr16
outs
sbb
adc
fistp
fs
xchg
inc
push
xchg
cmp
mov
test
xor
fwait
cmp
lea
dec
ds
mov
add
loopne
xchg
cmps
mov
sbb
sti
jmp
cli
in
out
inc
or
xchg
mov
icebp
popf
inc
and
(bad)
jl
into
and
fcomp
in
push
lods
(bad)
nop
aaa
inc
cmp
adc
push
push
pop
mov
mov
loope
sub
sub
pusha
push
rol
pop
sbb
xor
sbb
not
add
adc
push
sbb
xchg
hlt
or
daa
pop
dec
jne
fisttp
mov
and
and
int3
xchg
xchg
mov
xchg
mov
and
xor
ror
mov
enter
pop
add
pop
pop
shl
or
aam
xor
inc
jb
in
adc
sub
out
xor
mov
fst
rol
dec
dec
xchg
mov
movs
dec
mov
or
mov
cs
inc
mov
push
test
imul
jmp
mov
and
fild
xor
fsub
rcl
in
fild
cwde
das
mov
push
cli
fiadd
sbb
imul
dec
or
xor
adc
mov
mov
push
jb
sub
sub
shl
add
rol
mov
add
push
sbb
and
jno
inc
jo
and
xor
pusha
push
push
or
movs
push
test
xor
xchg
sbb
or
movs
(bad)
cmp
jmp
adc
push
push
add
xchg
add
aam
mov
call
sti
jmp
inc
jo
stos
push
mov
or
fbstp
fcom
dec
out
fs
dec
or
leave
sbb
js
or
jmp
or
gs
adc
pop
jne
icebp
hlt
aad
push
int3
(bad)
adc
push
rcl
or
rol
sbb
in
fld
push
add
cmps
adc
(bad)
into
sbb
enter
aam
dec
hlt
xor
inc
jb
lock
adc
out
mov
lock
ins
fs
add
aas
cmp
pop
pop
sbb
and
call
std
loopne
gs
fcomp
pop
adc
cmp
in
in
and
cmp
aam
add
push
xchg
sbb
les
push
sub
stos
push
cmovae
sbb
sub
add
inc
shl
cld
in
mov
xchg
hlt
push
pop
fwait
lahf
aad
dec
rol
ins
fsub
or
aad
pop
or
add
add
cs
and
clc
jno
inc
hlt
stos
xchg
loopne
add
jmp
mov
inc
xchg
xor
adc
mov
or
mov
sub
jns
pop
mov
loope
ss
mov
dec
shr
push
mov
(bad)
cli
xor
(bad)
fisttp
xchg
je
xor
cld
or
loopne
test
ret
in
adc
sbb
xchg
add
in
out
shl
sbb
add
mov
ins
std
pop
pop
add
mov
test
aam
repnz
stos
cwde
add
loopne
movs
jns
dec
mov
sub
loope
and
addr16
pop
jg
sub
adc
fistp
adc
adc
movs
loopne
loopne
push
popf
add
push
cs
dec
fcom
sbb
push
ins
mov
stc
out
jmp
adc
inc
clc
ret
and
xchg
arpl
sbb
or
fnstcw
fisttp
mov
or
add
and
leave
(bad)
mov
jp
add
add
adc
ins
mov
mov
xor
dec
inc
test
add
pop
push
arpl
add
inc
push
cdq
pop
sub
pop
ins
lods
ss
inc
adc
jg
leave
lds
stos
call
add
push
xchg
or
test
xor
imul
mov
push
mov
pop
push
and
cld
std
js
shl
cs
xchg
sbb
or
or
add
or
adc
aas
xchg
xor
enter
rol
cmps
or
add
cld
leave
push
cmp
inc
loopne
add
jo
add
je
lds
movs
push
ret
add
xor
or
add
je
mov
shl
(bad)
and
cmps
mov
and
clc
and
fldcw
rol
pcmpeqw
in
push
pop
lea
jae
dec
add
xchg
push
or
pop
add
xchg
cmp
ins
dec
push
or
loopne
sub
dec
or
nop
fdivr
fadd
aaa
jb
test
ret
add
mov
adc
ror
repnz
pop
lock
or
aad
lods
xchg
dec
les
rcl
mov
xor
inc
adc
aaa
sub
in
nop
inc
xor
and
xchg
cmp
js
pop
hlt
pop
xor
test
sbb
jne
out
jb
cmp
cmp
sub
sbb
cmps
outs
inc
shl
inc
hlt
lock
inc
test
test
add
clc
or
lods
add
xor
cdq
clc
mov
xor
clc
je
jmp
push
es
data16
mov
call
add
hlt
inc
in
cwde
xor
in
loopne
aam
popa
in
inc
es
hlt
add
call
adc
lock
pop
cs
lock
sbb
bnd
push
lock
leave
jo
leave
or
(bad)
jnp
add
fsub
lock
mov
add
cmp
hlt
test
lock
or
ret
sub
repz
or
mov
(bad)
aam
xlat
and
dec
ins
and
imul
sbb
pop
rcl
inc
daa
add
mov
adc
add
mov
or
nop
xor
mov
pop
or
sub
pushf
sbb
sub
and
ror
loop
pop
pusha
xchg
or
es
or
lock
sbb
cmp
sub
pop
loop
inc
push
xor
cmp
mov
nop
dec
sub
xchg
ror
retf
cmp
push
pop
mov
pop
ret
xchg
pusha
push
test
push
in
imul
push
outs
lea
pop
fcom
fdiv
fcom
aam
xor
rcl
or
shr
or
xor
int3
int3
in
int3
dec
aam
mov
jg
push
adc
in
adc
mov
ss
xlat
dec
jle
sbb
add
mov
mov
or
popa
pop
sbb
cmp
sub
and
mov
push
push
test
adc
lock
test
cmp
push
cmp
mov
push
or
dec
push
shl
daa
shr
add
rol
mov
aas
sbb
jo
dec
pop
sub
jnp
inc
fisubr
cs
adc
in
lock
jnp
and
and
icebp
icebp
cmp
pop
cwde
xor
pop
mov
daa
movs
nop
pop
mov
sub
cli
pop
clc
jecxz
retf
pop
push
adc
retf
jmp
outs
push
lds
nop
psrlq
dec
lock
scas
ja
aad
int3
rcr
enter
pusha
dec
in
jae
pusha
jne
cmp
add
shl
and
dec
pop
in
or
sbb
(bad)
fld
in
out
imul
in
pop
retf
xor
pop
sub
les
xor
mov
cmps
and
aam
imul
mov
int3
repnz
mov
push
sub
inc
jge
push
and
mov
push
das
(bad)
bound
push
lea
cwde
add
and
dec
add
mov
add
mov
sub
sub
sub
rol
push
ror
shl
sbb
push
push
adc
sbb
pusha
daa
aam
(bad)
sbb
in
add
aam
dec
les
mov
inc
mov
lods
adc
xor
add
dec
or
push
imul
add
into
leave
mov
jnp
int3
lods
adc
outs
(bad)
(bad)
mov
das
add
inc
jl
mov
mov
iret
xchg
push
add
jge
push
adc
call
pushf
cmp
inc
xor
fisttp
loope
xor
gs
rcl
outs
ins
imul
aam
clc
pop
and
clc
jo
or
test
or
xor
cmp
push
pop
or
cmps
nop
movq
and
jecxz
popa
adc
push
adc
jno
cld
out
or
dec
ss
outs
adc
mov
es
add
add
sbb
pop
and
add
and
mov
mov
jnp
and
lods
test
mov
inc
mov
xchg
cmp
inc
jo
mov
and
loopne
add
cs
gs
push
and
std
xor
test
mov
mov
jle
and
cmp
push
sub
lods
shr
out
xor
(bad)
les
pop
out
aam
inc
dec
add
inc
add
test
and
adc
out
loopne
in
dec
cmp
test
push
xor
adc
mov
mov
mov
mov
or
jnp
js
push
push
jb
pop
or
sub
sbb
inc
add
cli
adc
xchg
test
test
jno
mov
dec
pusha
mov
or
jns
fadd
jmp
mov
or
hlt
xlat
hlt
xor
in
in
xchg
add
xor
push
(bad)
fcomp
stos
add
fdiv
mov
pop
or
add
idiv
xor
mov
adc
bound
adc
fcmovne
cld
and
add
cld
pop
mov
hlt
mov
dec
and
inc
fwait
popa
xor
cmp
lahf
mov
dec
jmp
sbb
add
sbb
cmp
add
xor
add
adc
sbb
setbe
fstp
jmp
fisub
push
loope
and
sbb
ret
cmp
xchg
loope
test
bound
stos
fs
mov
push
mov
sti
or
jmp
or
retf
mov
xor
or
add
pop
sbb
dec
mov
out
int
or
mov
hlt
and
imul
push
add
mov
mov
popf
xor
imul
mov
retf
cmp
shl
cmps
jle
int3
sbb
add
sahf
in
mov
dec
push
or
add
add
mov
inc
and
add
dec
mov
mov
add
out
dec
scas
nop
cmc
and
cmps
das
mov
add
adc
adc
push
movs
mov
mov
sbb
stc
and
dec
sbb
add
js
sub
dec
adc
jnp
xor
sbb
out
clc
dec
xchg
in
push
push
lea
xor
cld
cld
xchg
outs
test
aam
xchg
pop
adc
and
shr
inc
mov
mov
movs
or
fistp
push
or
and
call
xchg
cmp
push
and
xor
or
rcl
outs
rcl
mov
jnp
nop
or
sub
cmp
push
pop
fdivr
inc
xor
rcl
js
pop
test
int
(bad)
pop
loopne
inc
clc
arpl
push
add
call
fsub
popf
out
bswap
xchg
out
outs
xor
pop
fstp
pop
mov
push
xor
ror
repnz
xchg
int3
enter
repnz
or
rol
add
push
or
mov
push
or
mov
push
int3
xor
mov
aad
cmp
adc
mov
xchg
adc
int
fsubr
in
push
and
lds
mov
dec
or
cmp
adc
mov
(bad)
mov
add
call
cmp
mov
inc
and
in
ins
add
bound
std
shl
sub
add
adc
std
dec
inc
inc
pusha
add
cmp
lock
mov
js
mov
sub
or
(bad)
shl
sbb
jmp
mov
or
xchg
or
jmp
rol
dec
in
xor
nop
dec
dec
js
pop
inc
rcr
fadd
out
xchg
add
dec
and
pop
bnd
cmovs
sbb
in
ret
fucom
jmp
test
je
fchs
fcomp
je
cmp
push
and
mov
inc
es
test
mov
xor
shl
sbb
iret
clc
fsub
scas
dec
inc
add
aam
add
test
shr
inc
in
xor
push
dec
sub
adc
or
push
push
and
xchg
lods
in
mov
in
leave
rep
add
stos
dec
scas
xchg
test
xor
movs
sbb
enter
cwde
or
ins
and
mov
pop
in
xor
pop
cwde
enter
pushf
mov
pop
test
mov
pop
or
(bad)
enter
cwde
cmp
and
movs
mov
xor
sub
jecxz
leave
and
add
ficom
stos
or
pop
add
push
enter
int
push
pusha
add
fldenv
fadd
sbb
pusha
imul
or
add
xchg
mov
or
mov
fcom
dec
popf
cdq
add
scas
stos
nop
retf
add
push
mov
enter
scas
mov
inc
cmps
dec
adc
fld
xchg
push
push
add
call
add
daa
add
leave
daa
mov
and
js
nop
sub
lods
fmul
add
fisubr
fld
enter
or
aam
add
sub
xor
addr16
push
or
test
rol
xchg
xchg
adc
xchg
mov
inc
add
push
ja
and
adc
test
xor
mov
mov
and
cmps
nop
xor
test
je
jmp
and
lds
jmp
in
jo
les
(bad)
and
mov
pop
push
or
inc
inc
adc
rol
or
retf
jmp
ror
jo
xor
pusha
mov
call
aad
loopne
popf
ret
inc
push
push
sub
push
xchg
popa
loopne
adc
and
mov
add
(bad)
adc
(bad)
mov
or
mov
push
inc
stos
lahf
xor
pop
mov
scas
ror
lea
test
sbb
lds
and
in
xchg
aam
fadd
inc
or
pop
stos
adc
sar
data16
(bad)
std
hlt
push
adc
rol
test
call
jbe
in
pop
and
cmp
or
xchg
inc
shr
test
enter
mov
add
sub
call
ret
call
inc
dec
aam
push
dec
pop
pop
enter
pusha
jnp
hlt
sbb
jmp
jg
stc
outs
pop
pop
test
stc
jmp
sbb
sar
or
rcl
rcl
sahf
int
mov
clc
mov
mov
movs
nop
dec
adc
aas
cmp
js
call
cs
lods
retf
jo
and
call
es
cs
test
jae
add
adc
and
or
jo
nop
push
test
imul
and
ins
add
dec
jge
aam
leave
xchg
test
pushf
popf
inc
pop
xchg
and
add
rcr
pop
xor
scas
mov
xchg
popa
not
lea
xchg
xchg
push
jle
or
out
out
test
add
or
mov
loope
lods
in
(bad)
fxtract
hlt
cmp
sbb
ins
dec
sub
mov
es
or
mov
cmp
cdq
lahf
mov
sbb
mov
test
leave
add
xchg
adc
ret
add
jnp
mov
mov
shl
add
xor
dec
mov
and
popa
adc
(bad)
dec
popa
mov
lahf
xchg
inc
and
or
hlt
push
cmp
in
aaa
pusha
sub
push
pop
cdq
pusha
push
icebp
push
and
or
ja
pushf
or
ret
dec
and
out
fs
mov
cmp
cmp
jl
jmp
daa
dec
xchg
sbb
pop
or
or
ret
adc
sbb
fstp
(bad)
push
and
(bad)
ret
jle
xchg
push
jb
fcmovnb
dec
pop
leave
adc
popa
iret
lds
lds
xchg
nop
mov
(bad)
shr
les
fwait
movs
sbb
cld
and
jns
inc
call
jle
cmps
mov
lock
sub
sbb
sbb
add
push
dec
repz
ins
and
imul
(bad)
pushf
not
push
adc
pushf
cmp
mov
ror
push
aaa
add
pop
mov
jge
cmps
cmp
movs
inc
repz
push
movs
and
movs
cmp
movs
or
es
and
and
addr16
mov
sti
cmp
jae
push
addr16
sbb
nop
sti
inc
mov
ret
pop
fdivr
add
mov
adc
out
cmps
add
cmp
dec
xchg
and
and
inc
(bad)
jmp
add
scas
call
in
add
and
or
xor
inc
push
jmp
inc
pop
sbb
repnz
pop
and
sbb
inc
pop
stc
jmp
sbb
jns
pop
test
inc
cmps
or
in
inc
loop
push
ror
mov
sahf
in
or
add
push
nop
sbb
or
and
and
(bad)
cmovae
xchg
jns
jmp
pop
xor
out
sub
js
jno
push
inc
push
test
out
shl
mov
jmp
(bad)
ins
xchg
cmp
jno
sti
xor
adc
inc
xor
mov
in
adc
leave
iret
mov
jecxz
and
fdiv
mov
inc
mov
adc
addr16
adc
pop
ja
dec
inc
jb
call
sub
inc
and
add
inc
inc
sbb
inc
add
sub
frstor
mov
test
cs
sbb
test
add
adc
push
pusha
pop
adc
sbb
shr
or
push
test
in
fisttp
imul
adc
ret
sub
sub
movs
adc
add
sbb
(bad)
sbb
in
dec
push
and
adc
and
push
jno
lock
call
dec
adc
or
ja
ret
shl
cmp
and
pop
loop
jbe
adc
mov
lock
arpl
adc
pop
and
lods
adc
xchg
dec
hlt
aad
cmp
jae
mov
leave
pop
out
mov
jmp
sbb
sahf
or
pop
jne
cmp
stc
leave
add
xor
sbb
xchg
xchg
mov
push
frstor
xor
inc
push
inc
imul
xlat
mov
xor
popa
(bad)
sbb
inc
xlat
xchg
add
mov
mov
sbb
dec
arpl
xor
sub
push
add
xchg
ins
xchg
add
add
enter
add
mov
or
retf
gs
mov
div
out
mov
push
sbb
call
add
popa
shl
dec
inc
adc
popa
mov
or
fmul
cmp
add
sbb
pop
fld
ss
add
inc
enter
dec
or
jmp
in
hlt
pop
push
leave
or
sbb
mov
retf
test
add
stos
aas
xor
xor
adc
mov
adc
push
enter
add
les
inc
xor
aam
mov
and
aad
jmp
sub
lods
xlat
in
ja
or
nop
or
rcr
and
ins
xchg
movs
repnz
in
jno
lock
or
cmp
ja
enter
or
cld
lds
int3
enter
push
adc
in
push
js
imul
ret
mov
(bad)
sbb
mov
arpl
cmps
int3
and
and
shr
movs
jnp
arpl
adc
inc
lds
and
call
jbe
adc
clc
lock
jo
xor
gs
pop
or
inc
sar
fwait
pop
add
jne
dec
inc
loopne
out
or
hlt
mov
or
jbe
or
mov
add
cmps
cdq
(bad)
or
retf
pop
cmp
icebp
mov
icebp
or
inc
adc
in
inc
push
fmul
xchg
mov
and
test
bound
jo
movs
cmc
(bad)
push
repnz
dec
int
sub
popa
jg
and
jle
mov
or
call
cmp
mov
fucomp
push
lock
dec
xchg
repnz
mov
adc
adc
dec
rol
mov
test
add
cmp
pop
clc
jo
add
je
and
inc
fnstcw
shl
(bad)
repz
daa
icebp
jl
(bad)
adc
mov
hlt
(bad)
jmp
and
pusha
int
lods
and
adc
lods
in
out
aad
pusha
mov
call
xchg
add
add
cmc
add
or
or
and
das
and
adc
stos
mov
scas
in
jns
mov
adc
sub
push
add
cmp
leave
jne
xchg
rol
pop
add
outs
jmp
xor
hlt
jno
mov
popa
arpl
push
(bad)
mul
sbb
push
aad
push
(bad)
add
push
mov
cld
nop
inc
add
sub
mov
xlat
rol
gs
adc
add
daa
or
movs
adc
or
cmp
ret
jmp
dec
in
jp
popf
push
add
mov
shl
ret
or
xor
xor
mov
or
adc
inc
out
or
sbb
rcr
adc
fld
inc
stc
jp
sar
fwait
or
xchg
cli
and
xor
cs
popa
mov
(bad)
sar
pop
or
lea
xor
and
adc
nop
add
or
inc
aas
cli
cmp
pop
push
cdq
xchg
inc
pop
jns
rcl
nop
call
adc
xor
pop
fidivr
dec
ret
jo
cdq
outs
xlat
mov
sub
add
sti
jle
push
out
sub
(bad)
or
xor
inc
add
adc
and
mov
mov
test
jmp
rol
lods
and
lds
jl
sub
jbe
jns
or
cld
jecxz
jb
and
cdq
retf
inc
data16
test
or
or
lahf
pop
pop
in
pop
sub
push
push
push
shl
add
add
rcr
lock
jne
movs
pop
mov
push
lods
push
push
push
xchg
adc
and
pop
stos
dec
mov
pop
test
cmp
or
push
int
(bad)
xor
or
push
xchg
cmps
dec
mov
cmp
cmp
sbb
mov
movs
std
adc
add
cmp
pop
and
enter
or
inc
shl
jp
(bad)
push
mov
arpl
test
inc
dec
or
adc
inc
ret
and
push
stos
sbb
stos
test
mov
mov
mov
dec
femms
lds
test
or
or
dec
cmps
adc
xor
movs
and
and
mov
add
push
and
mov
xor
add
repnz
adc
movs
mov
inc
ins
xchg
inc
mov
add
or
sbb
inc
sbb
adc
cmp
push
(bad)
pop
sub
rol
shl
add
sbb
add
cmp
pop
xor
sbb
nop
adc
sbb
xchg
pop
or
add
xchg
stos
inc
retf
and
pop
aad
aas
fsubr
dec
jno
movs
ds
or
mov
xchg
dec
(bad)
xor
sbb
test
or
inc
pop
xchg
or
in
pop
add
push
cmp
shl
pop
mov
sub
inc
cmps
inc
pusha
(bad)
push
dec
cmp
mov
inc
les
push
jns
add
add
sbb
sbb
add
leave
pop
inc
aaa
fiadd
into
or
out
nop
or
mov
or
adc
mov
inc
daa
xchg
inc
test
clc
or
dec
in
lea
ja
jae
cmp
lods
movs
mov
add
xchg
or
or
ins
inc
dec
or
test
sub
pop
mov
ja
and
push
cmp
mov
mov
pop
adc
dec
pop
dec
cmps
mov
add
into
xchg
or
outs
push
movs
lea
pop
repnz
daa
xchg
or
mov
xor
loop
sub
pop
or
mov
adc
xchg
and
test
cmps
bound
pop
(bad)
stc
pop
pop
jnp
dec
daa
in
shr
and
mov
dec
das
mov
test
das
jge
adc
in
movs
xlat
in
fadd
inc
xchg
or
test
in
mov
push
cdq
and
or
nop
sub
add
push
adc
add
pushf
test
(bad)
out
inc
fimul
or
cmp
cdq
fmul
les
sbb
sbb
inc
inc
and
rol
dec
frstor
jle
rcl
lods
test
cld
adc
movs
cmp
adc
cmp
call
xchg
out
in
loopne
fsub
sub
dec
call
cmp
movs
cmp
cmp
inc
imul
dec
mov
inc
mov
mov
popa
add
adc
hlt
lock
dec
ja
and
push
sbb
loopne
(bad)
push
sbb
ror
enter
inc
(bad)
sar
mov
mov
gs
dec
es
es
fs
je
cdq
push
xchg
jl
or
in
sbb
test
mov
daa
xchg
xchg
fmul
pop
dec
xchg
int3
cwde
enter
cmp
xchg
frstpm(287
mov
test
jno
cs
lods
jo
nop
pop
and
adc
sbb
leave
add
cld
sbb
push
shl
clc
iret
daa
fs
add
ins
stos
fisubr
xchg
sbb
sbb
pop
mov
stos
sbb
add
sub
dec
repnz
dec
xor
fs
ja
dec
adc
add
or
pop
mov
stc
(bad)
sub
test
repz
push
addr16
into
ja
xchg
jnp
push
xor
push
xor
ins
dec
cmps
xchg
xchg
dec
fwait
test
mov
xchg
cmps
stos
scas
cmps
sub
mov
das
mov
mov
dec
leave
(bad)
retf
iret
dec
leave
xchg
dec
rcl
fist
jecxz
ins
dec
cmps
ss
jmp
xchg
pushf
xchg
test
add
pop
or
xchg
and
jo
and
movs
shr
leave
aam
aas
and
mov
sbb
sub
push
stc
pushf
stc
and
add
loopne
jle
add
or
sbb
pop
inc
pop
xlat
push
mov
arpl
in
lods
bound
or
and
test
test
inc
enter
imul
or
pop
cmps
shl
mov
and
psubusb
sbb
jbe
sbb
out
or
inc
mov
pop
inc
and
or
sbb
movs
fwait
or
scas
or
ins
and
int
dec
mov
jne
sbb
lahf
hlt
ror
or
ja
jecxz
sub
push
movs
sub
mov
and
xchg
mov
or
dec
pop
and
outs
ret
stos
and
imul
inc
loope
add
cmps
mov
ror
test
es
add
mov
pop
mov
mov
adc
(bad)
and
mov
xchg
adc
imul
adc
pop
inc
sub
xor
daa
mov
and
xchg
nop
sub
rcl
pop
xor
lods
xchg
fwait
mov
aad
test
sub
mov
adc
inc
mov
loopne
ret
and
or
xor
test
mov
pusha
jecxz
push
xchg
adc
and
ins
cdq
dec
loopne
inc
fadd
inc
xor
bound
add
push
pop
xor
test
cdq
and
mov
in
push
mov
test
icebp
xchg
sbb
push
jmp
mov
push
lahf
xor
dec
fcomp
dec
fs
loop
(bad)
nop
and
nop
sub
push
(bad)
in
sbb
fnstsw
or
xchg
or
repnz
sub
or
pusha
pop
or
pop
push
or
xlat
daa
cwde
mov
sub
or
dec
push
stos
popa
(bad)
in
adc
movs
jmp
nop
sub
stos
xor
in
retf
and
sub
test
dec
lods
std
hlt
mov
lock
test
add
movs
mov
jb
inc
iret
and
push
xchg
sahf
hlt
lock
add
not
cmp
jle
sti
push
xchg
ja
xchg
pop
sub
adc
or
out
adc
scas
pop
push
add
(bad)
mov
lea
leave
in
and
jnp
arpl
cmp
xchg
xchg
mov
push
adc
hlt
lock
int
leave
popf
add
push
sbb
add
and
and
pusha
adc
adc
or
or
sti
push
xchg
adc
adc
inc
xor
bound
dec
mov
push
cmc
jae
pop
imul
push
leave
add
enter
jge
adc
shl
inc
lods
sub
jo
pop
xlat
inc
jecxz
push
mov
cld
fmul
adc
scas
les
test
add
and
stos
shl
cld
sbb
outs
lds
nop
sbb
movs
inc
adc
mov
in
stos
and
pop
mov
inc
mov
add
pop
xchg
pushf
and
xlat
das
xchg
push
and
sbb
in
or
mov
or
push
and
ins
adc
inc
(bad)
pop
cwde
fsub
adc
dec
xor
mov
lahf
jp
mov
mov
and
mov
pop
xlat
adc
xchg
push
mov
test
adc
adc
mov
jl
adc
xor
inc
jmp
stos
shl
and
xor
adc
sbb
xchg
lock
(bad)
cmc
xor
adc
mov
sbb
adc
push
xor
jmp
sub
cmp
mov
or
xor
lahf
mov
mov
xor
sbb
lea
pop
add
addr16
lar
call
loope
in
nop
inc
call
dec
es
pusha
ret
rcl
fdivr
cld
xchg
aam
dec
jmp
aam
mov
mov
mov
or
in
mov
shl
xchg
cmp
or
out
xor
cwde
enter
and
repz
std
sub
jmp
add
aaa
in
loopne
xor
pusha
add
xchg
nop
pop
or
or
rcr
fs
cmp
aad
add
mov
xchg
push
fwait
nop
push
xor
or
push
sub
jecxz
add
push
loope
ss
sub
retf
daa
xor
pop
push
adc
dec
xor
xlat
mov
cmps
loope
xchg
xchg
xor
push
popa
or
ret
rcl
sbb
jecxz
in
dec
mov
xchg
pop
leave
dec
in
in
pop
loopne
test
xchg
mov
push
into
mov
push
pop
pop
cmp
xchg
mov
pop
jp
cmp
and
fist
push
mov
ja
outs
dec
jne
mov
je
sub
in
inc
loopne
es
in
scas
mov
in
xor
adc
test
in
and
in
leave
push
add
and
or
add
test
jl
sbb
xchg
fucom
shl
xor
sub
xor
cmps
adc
sub
sub
push
and
mov
aam
hlt
fmul
(bad)
loopne
add
(bad)
and
push
fwait
add
arpl
hlt
dec
aam
cmovnp
mov
xor
mov
xchg
and
cmp
inc
adc
scas
push
sbb
pop
aam
mov
xor
loopne
(bad)
(bad)
retf
rcl
aam
stos
pusha
sbb
and
add
pushf
or
inc
dec
adc
pop
movs
jge
js
fild
or
test
js
fmul
jmp
test
cs
xchg
shl
and
xor
dec
fld
add
jns
push
and
inc
call
nop
dec
out
imul
sbb
adc
adc
xor
and
enter
jecxz
xchg
out
or
scas
dec
mov
dec
mov
adc
pusha
mov
xor
sub
ins
mov
repnz
add
sbb
dec
jle
dec
fwait
rol
fld
leave
adc
push
shr
cmp
push
add
xchg
mov
sbb
inc
and
push
xchg
dec
jg
int
inc
jb
inc
cmps
in
push
or
sbb
or
and
adc
cmp
psubusw
lea
aad
adc
mov
repz
jne
mov
mov
or
in
push
add
or
add
dec
in
in
or
sbb
adc
pop
fadd
inc
or
cmp
call
or
jno
add
rcr
gs
or
push
push
dec
inc
or
mov
popf
imul
pop
leave
in
ret
add
xlat
pop
add
adc
xchg
mov
and
lds
es
loopne
inc
call
and
es
(bad)
add
add
aam
aam
out
fs
enter
cmps
imul
call
fdiv
adc
xor
jnp
out
sbb
push
add
sbb
add
xor
enter
in
pop
add
fcomp
cmp
and
xchg
je
inc
and
mov
pop
pop
imul
hlt
in
sub
hlt
js
nop
or
aam
call
jmp
sub
or
mov
bound
enter
jecxz
add
sar
jmp
push
mov
dec
test
jmp
push
js
int3
xchg
pop
dec
(bad)
lock
das
sub
or
add
hlt
add
call
push
or
popa
adc
adc
add
and
repnz
nop
xlat
push
dec
cld
sbb
dec
add
pop
in
sub
or
xor
dec
loopne
jg
bound
sub
and
cmps
adc
or
jns
in
call
imul
and
xor
imul
lods
add
and
add
sbb
cmp
xor
in
fmul
and
push
adc
or
jne
adc
push
jno
pop
fwait
xor
cmp
xor
mov
xchg
or
xchg
or
hlt
inc
ror
pop
ror
add
cli
int
inc
pushf
xor
es
lods
pop
mov
test
lea
test
arpl
and
in
and
cs
xor
dec
xor
shl
xor
mov
retf
lods
lods
mov
stos
popa
mov
or
scas
pop
mov
fwait
test
pop
int
mov
dec
mov
fsubr
test
mov
inc
pusha
cwde
cmp
data16
adc
fild
movs
lods
mov
xchg
fnstsw
xor
add
add
enter
fiadd
pop
adc
ret
pop
inc
enter
xchg
push
xor
cmp
jg
jb
dec
cmp
or
(bad)
fadd
xor
int
inc
mov
mov
mov
sbb
jp
popa
aas
adc
adc
inc
lds
xchg
mov
xchg
sbb
push
or
mov
imul
inc
fnsave
test
push
jo
cmp
or
lods
mov
push
dec
test
clc
mov
cmp
push
lds
pop
sub
push
and
pop
sbb
mov
aaa
add
add
push
dec
mov
lock
es
lds
mov
pop
rcr
scas
pop
push
mov
sbb
sar
in
xchg
xchg
inc
jb
imul
add
and
mov
mov
nop
add
nop
mov
mov
inc
enter
pop
enter
jne
push
push
leave
add
mov
jb
gs
cmp
push
adc
sub
add
pusha
xchg
cmp
xchg
(bad)
xor
movntps
pushf
pop
outs
iret
sub
and
imul
shr
das
cmp
add
dec
ds
test
add
data16
add
lock
test
xchg
lea
popa
and
popa
xor
jno
pushf
push
and
add
jmp
lds
nop
sub
inc
inc
fwait
outs
adc
clc
mov
inc
enter
push
gs
push
sub
lock
mov
test
cdq
pusha
pushf
push
mov
adc
xchg
adc
sbb
jb
ror
mov
(bad)
push
inc
ja
adc
nop
mov
loope
adc
mov
sub
cmp
add
cmp
adc
cmp
add
or
pusha
inc
js
push
lock
push
outs
mov
xchg
mov
popa
fidiv
add
popf
lock
sbb
mov
inc
xchg
jmp
or
and
sub
fsubr
test
mov
inc
xchg
hlt
clc
shr
test
adc
inc
dec
loopne
inc
fdiv
dec
push
add
jno
loopne
adc
cwde
imul
sub
jo
nop
push
push
cmc
pusha
rol
sub
imul
mov
or
in
sub
frstor
fild
sbb
imul
inc
jae
or
inc
push
mov
or
xor
aad
cmc
or
hlt
jns
fmul
sbb
(bad)
lea
shl
add
mov
add
adc
xchg
pusha
std
push
jp
sbb
test
xchg
push
out
(bad)
stos
in
jge
or
cmp
sub
sbb
pop
or
mov
dec
test
push
xchg
in
aad
repnz
call
retf
lock
or
in
dec
add
pusha
aad
fwait
push
nop
out
fcom
ror
in
xchg
sbb
call
xchg
in
je
push
nop
inc
adc
jge
or
add
enter
jg
(bad)
xchg
jmp
ds
mov
adc
add
retf
sbb
add
jg
push
arpl
jns
les
xor
sbb
nop
inc
ror
adc
in
jp
xchg
inc
adc
lods
sub
xor
jne
dec
lock
push
addr16
dec
mov
and
add
sub
aam
adc
or
add
imul
inc
add
add
rol
push
daa
cmps
sbb
jnp
pop
or
jg
ss
add
outs
clc
adc
or
pop
mov
std
mov
in
inc
adc
gs
and
sbb
push
and
push
or
(bad)
not
cmps
inc
and
jnp
xlat
or
pop
sbb
fs
jecxz
fucomp
mov
mul
xchg
int
push
inc
and
mov
ins
stc
mov
lods
xchg
or
xchg
xchg
outs
enter
inc
or
enter
std
cmp
cmp
mov
jl
push
or
add
push
ds
mov
js
xchg
adc
fist
js
sub
(bad)
xor
icebp
xchg
mov
mov
add
sbb
lahf
push
jmp
retf
std
out
mov
inc
xor
adc
shl
mov
push
jecxz
mov
xchg
adc
popa
inc
call
sbb
or
xor
cmps
arpl
cmp
inc
jg
test
inc
or
fstp
in
dec
or
inc
aas
jecxz
test
and
fimul
js
cdq
pop
xchg
and
sbb
imul
mov
adc
lock
test
popf
mov
ret
and
fcom
enter
sbb
inc
and
test
in
out
dec
and
pop
pop
dec
dec
mov
sub
xchg
push
adc
jbe
push
nop
out
retf
test
clc
fcom
pop
add
dec
and
push
mov
pop
fdivr
push
inc
test
push
push
xor
and
and
or
fcom
das
add
sub
fisub
mov
rol
mov
in
jae
lock
inc
popa
xor
addr16
mov
cmp
test
push
cmps
adc
outs
push
mov
push
pop
sbb
fchs
push
out
and
add
inc
mov
mov
mov
mov
mov
scas
ret
inc
cs
jl
jp
fisttp
pop
cmp
ret
and
retf
jge
pushf
pushf
out
cwde
fcomp
sub
dec
mov
dec
push
mov
mov
ins
stos
jbe
aaa
jno
dec
mov
retf
(bad)
dec
xchg
in
call
mov
jae
loope
aam
call
dec
push
jnp
sub
add
and
lock
call
inc
jbe
or
popa
scas
(bad)
xchg
in
iret
sbb
add
stos
stos
je
cmp
xor
or
jo
je
ret
add
jl
sbb
xchg
je
mov
mov
fmulp
cmp
daa
pop
enter
or
popa
add
jge
movs
mov
push
or
ins
repnz
jecxz
jg
call
push
mov
aad
stos
aas
mov
and
pop
mov
push
ins
push
xor
dec
fwait
mov
cmp
push
add
add
cmp
in
aaa
je
pop
adc
fmul
dec
fwait
sub
inc
aam
clc
aam
add
add
fcmovb
shr
and
sub
fsub
cdq
cmps
rol
shl
mov
test
add
adc
push
add
xor
pop
or
add
or
and
add
adc
push
enter
xor
sbb
mov
mov
lods
add
jae
fst
(bad)
and
sub
or
mov
int
add
add
push
daa
imul
xchg
mov
ror
xor
xchg
fs
fwait
adc
pop
pop
outs
sbb
add
push
adc
cmp
stos
cmp
add
popf
fistp
and
sub
add
call
fist
es
arpl
or
add
and
out
push
pop
pop
pop
dec
inc
pop
xchg
pop
and
adc
inc
xchg
imul
and
adc
add
unpcklps
or
mov
push
dec
es
xor
ret
cmp
mov
in
inc
ds
push
push
xlat
add
rol
and
stos
push
inc
sub
shl
or
inc
adc
xchg
sbb
in
xlat
push
ins
pusha
inc
dec
jmp
in
dec
jmp
outs
or
inc
ds
lock
cmp
xchg
mov
or
add
xor
mov
add
add
mov
mov
add
outs
cmp
cmp
sub
call
outs
adc
and
cld
call
loopne
in
xchg
bound
(bad)
or
and
mov
push
pop
xchg
mov
xchg
neg
add
sbb
aas
or
push
add
inc
popf
adc
cmps
push
inc
gs
sbb
and
lods
sub
test
and
add
mov
and
movs
sbb
test
push
es
and
fst
je
jne
leave
jmp
inc
mov
cmp
mov
dec
and
repnz
pop
cmps
outs
adc
test
or
cmp
jno
jb
inc
(bad)
adc
cmps
mov
dec
inc
pop
and
or
adc
call
sbb
or
or
or
adc
cmps
push
in
loopne
adc
and
sub
pop
sub
xchg
mov
inc
ret
test
adc
add
test
xchg
daa
das
int3
mov
inc
cmp
xchg
repz
dec
xor
outs
test
test
test
dec
test
push
xor
(bad)
in
cmp
mov
sub
adc
or
add
hlt
inc
dec
scas
jmp
stos
or
data16
loopne
or
jne
xchg
inc
jmp
call
add
movs
jb
push
xchg
add
add
leave
test
pop
stos
les
add
loopne
inc
mov
and
enter
test
lods
xchg
inc
push
and
cmps
dec
xor
inc
adc
inc
lods
ds
mov
pop
fwait
ror
and
sbb
icebp
pop
and
(bad)
and
inc
pop
movs
adc
pop
sub
scas
sti
in
add
movs
pop
scas
push
jb
in
mov
add
cmps
xchg
das
inc
and
dec
mov
mov
lgdtd
adc
jb
mov
adc
adc
mov
test
inc
test
pop
das
movq
mov
jno
bound
adc
ds
pusha
sbb
cmps
fldenv
jns
call
adc
adc
xor
aaa
mov
mov
adc
sti
(bad)
mov
xor
add
in
ret
add
lods
pusha
xchg
call
inc
and
or
lock
inc
cmp
sbb
or
lock
inc
lock
xor
sub
daa
rcl
cmps
cmps
jmp
push
add
iret
mov
aas
mov
pop
and
repnz
and
adc
xor
jb
adc
and
and
aas
adc
adc
and
cmp
push
sub
pop
(bad)
xchg
das
pushf
mov
jns
test
and
dec
and
push
add
mov
in
mov
mov
push
stos
loopne
add
pop
push
mov
push
pop
adc
pop
clc
mov
pop
cmp
loopne
mov
in
adc
mov
mov
jb
btc
dec
mov
pop
add
or
cmc
arpl
call
lds
imul
mov
cmp
push
shr
sbb
xchg
pop
jb
and
adc
xor
in
in
adc
rcr
lock
in
iret
mov
inc
mov
nop
dec
push
mov
push
jb
mov
add
xor
mov
enter
and
rol
xor
and
add
test
mov
stos
cmp
nop
retf
sub
jnp
adc
xchg
xchg
loop
adc
ret
test
and
mov
(bad)
push
cmp
inc
enter
inc
(bad)
xlat
cmp
jns
test
inc
lds
sbb
test
xor
or
adc
xchg
sbb
ror
adc
(bad)
cmp
mov
dec
or
push
push
jne
xchg
xchg
(bad)
xchg
sub
sub
(bad)
not
and
jmp
test
jecxz
add
inc
enter
ret
sbb
mov
cmps
das
xchg
inc
test
mov
or
push
and
jl
push
jb
nop
stos
retf
jecxz
and
fsub
outs
add
add
scas
in
inc
icebp
int3
mov
int
and
int
pushf
sub
push
int
pop
into
push
in
and
inc
leave
mov
nop
dec
push
inc
iret
cmp
jmp
adc
mov
push
test
sbb
push
xchg
ins
jmp
aaa
int
cmp
cmp
ins
xor
push
adc
dec
ret
jns
push
mov
sbb
xchg
cmp
sub
in
xchg
shl
data16
add
dec
push
adc
rcl
cmp
push
adc
(bad)
(bad)
inc
sbb
add
mov
das
xchg
inc
test
push
xlat
jo
cmp
and
out
pop
leave
and
dec
fsub
or
and
inc
fimul
xchg
mov
lea
adc
adc
in
imul
cmps
mov
or
mov
dec
mov
jb
xor
or
and
and
push
clc
arpl
mov
or
push
xor
in
lds
sub
jo
fild
mov
adc
mov
inc
xor
sbb
jo
stos
cmp
(bad)
add
inc
fsub
cld
sbb
in
test
xchg
out
and
and
adc
jbe
adc
sbb
les
add
inc
enter
inc
mov
test
test
xor
mov
push
fldenv
push
repnz
cdq
sub
loope
sti
inc
cmp
mov
xchg
and
mov
bswap
test
adc
mov
add
or
in
sbb
pop
xchg
push
push
sbb
in
jb
cmp
adc
in
(bad)
in
out
dec
adc
sbb
adc
or
out
push
sub
and
cmc
and
stos
sbb
leave
fwait
or
adc
adc
popa
push
or
or
frstor
in
and
in
push
and
and
call
lahf
aas
jecxz
xchg
test
pusha
lock
add
loopne
ret
inc
push
inc
sub
add
(bad)
nop
or
xchg
clc
hlt
lock
push
or
imul
jno
loopne
enter
adc
test
cmps
mov
push
xlat
shl
adc
mov
and
nop
or
xor
in
or
mov
add
and
mov
pop
mov
push
das
sbb
setae
int3
lea
add
xchg
or
test
sbb
mov
and
movs
leave
rcl
add
push
jle
mov
imul
adc
std
or
push
dec
or
cmp
movs
inc
pop
loopne
sub
jae
test
call
bound
retf
sbb
and
scas
dec
repz
leave
adc
aad
and
sub
and
add
mov
cmp
or
add
mov
inc
test
fbld
pop
out
ret
xchg
mov
and
dec
retf
aad
in
mov
repz
push
sbb
mov
mov
pushf
test
mov
std
lock
and
adc
mov
and
stos
mov
(bad)
sbb
lahf
and
icebp
sub
rcl
adc
mov
push
adc
jbe
leave
inc
outs
in
shl
hlt
loopne
add
nop
sbb
hlt
lock
hlt
repz
adc
in
std
push
xor
adc
sbb
movs
inc
es
adc
nop
arpl
call
mov
cmps
add
hlt
std
add
mov
xor
imul
cmp
and
jne
(bad)
dec
adc
xchg
push
and
inc
jb
aaa
inc
sub
bound
imul
xor
inc
inc
cdq
xchg
test
sub
out
fdiv
dec
and
push
jb
sbb
and
not
mov
or
sub
mov
dec
sub
cmp
rol
inc
(bad)
fld
xor
enter
aas
lods
push
cmp
jnp
inc
rol
and
add
movs
add
mov
pop
jecxz
add
jbe
sbb
adc
hlt
adc
es
test
cwde
add
cmp
sbb
mov
or
sub
mov
nop
and
jo
jmp
push
sub
push
ficom
in
add
pop
pop
mov
adc
ss
add
sbb
es
lds
mov
add
gs
test
mov
fld
repnz
cmc
dec
adc
mov
movs
std
scas
add
and
add
inc
repnz
xor
add
adc
sub
add
push
pop
xchg
mov
push
adc
add
sub
sub
push
mov
xor
mov
inc
mov
pop
xor
sbb
inc
gs
xchg
push
dec
add
and
dec
and
add
cmp
rol
and
or
call
xor
inc
or
sbb
enter
add
shl
inc
pop
and
add
add
test
jge
or
xchg
in
ss
xchg
test
adc
ret
js
jb
arpl
add
inc
xor
and
and
adc
mov
lock
add
mov
xlat
imul
and
or
and
sub
sub
inc
enter
and
les
daa
jae
inc
or
push
popf
inc
enter
push
and
sub
inc
add
pop
jnp
test
sub
cmps
inc
and
inc
jmp
and
add
cmp
inc
push
sti
pminub
mov
stos
mov
adc
dec
adc
xchg
(bad)
sbb
push
mov
push
adc
(bad)
xor
inc
adc
test
fsubr
mov
fistp
mov
inc
jmp
and
adc
adc
xchg
inc
sbb
pop
xor
inc
cmps
jno
sub
inc
and
adc
push
enter
stos
in
add
mov
push
and
enter
repnz
sbb
adc
hlt
jp
mov
mov
test
pop
cmp
inc
adc
add
sbb
cmps
or
adc
dec
sbb
pop
adc
mov
bound
mov
cs
sbb
inc
stos
inc
dec
ror
xlat
dec
or
push
aad
nop
or
fild
nop
mov
leave
jecxz
sbb
mov
out
rol
in
sbb
arpl
jns
cs
mov
out
inc
or
inc
sbb
add
rep
xchg
add
in
sbb
mov
pusha
add
xchg
adc
sbb
js
jb
or
lods
mov
jmp
sub
or
inc
sbb
mov
retf
add
and
dec
add
movs
jo
sbb
push
and
popf
pop
push
mov
or
sub
cld
jo
xor
sti
adc
and
and
xchg
popa
xchg
add
add
mov
or
leave
stos
(bad)
xchg
sbb
add
pop
setne
sbb
adc
pop
and
out
mov
inc
setb
or
jge
call
sbb
push
adc
mov
sub
dec
test
mov
lsl
inc
sub
jnp
cdq
mov
adc
sub
ret
lds
lods
mov
out
mov
test
test
jae
sti
mov
pop
lds
mov
cmp
in
pusha
lods
mov
xor
xchg
sbb
aaa
xchg
rol
xor
push
sbb
test
xchg
loopne
cwde
add
in
mov
dec
sbb
xor
imul
shl
clc
imul
imul
add
or
add
mov
inc
adc
pop
mov
lea
mov
and
jnp
xor
sub
inc
dec
cmp
repz
add
popa
xor
shl
and
adc
mov
and
mov
and
and
cmp
inc
fst
cmp
mov
xchg
adc
clc
outs
ret
inc
mov
cmps
mov
add
and
(bad)
adc
inc
dec
dec
jae
mov
jmp
adc
sub
dec
dec
pop
inc
repnz
adc
shl
int3
jb
xchg
inc
es
dec
xor
pop
cwde
sbb
std
jb
in
pop
sbb
push
push
test
push
xor
xchg
mov
push
lea
jp
ret
mov
or
cmp
jb
pop
jmp
mov
xchg
cmp
xor
add
(bad)
(bad)
push
(bad)
sub
cmp
add
in
(bad)
in
or
sub
sti
mov
out
cmps
pop
bound
mov
std
cld
mov
or
fucomp
rcl
sub
test
and
dec
pop
dec
push
int
sub
adc
sbb
sub
pop
dec
push
and
jmp
cmps
cdq
xchg
pop
cmp
cmp
add
or
dec
punpcklbw
aaa
into
sub
mov
add
sub
adc
add
xchg
add
add
and
jmp
jp
add
cld
sub
int
xchg
adc
xor
and
daa
scas
xchg
movs
xchg
loopne
lods
pop
add
mov
jne
and
out
adc
dec
add
and
hlt
hlt
mov
lock
(bad)
push
adc
mov
mov
(bad)
mov
imul
das
aad
add
inc
mov
sbb
nop
xor
sub
movhps
loope
(bad)
sub
mov
lods
push
adc
inc
mov
call
jne
push
xor
adc
add
or
sbb
jno
in
fmul
sbb
jg
add
aam
shr
stc
push
pop
mov
add
jnp
jle
ds
jl
add
mov
dec
inc
lods
jbe
mov
ss
cmp
xchg
jbe
mov
mov
sub
enter
ror
and
adc
inc
movs
jae
or
enter
retf
dec
lds
jle
add
and
adc
in
or
mov
dec
adc
xlat
mov
xor
xchg
add
inc
and
dec
xor
lock
mov
xor
dec
movs
loope
sub
cmp
out
les
mov
hlt
movs
mov
push
test
(bad)
cs
sub
sbb
sbb
inc
sbb
sbb
sub
test
dec
icebp
add
test
push
xor
add
pop
or
xchg
pop
xor
retf
es
add
mov
adc
jae
mov
mov
enter
xchg
dec
sub
lods
sub
call
and
xor
mov
push
test
jns
push
pop
jo
mov
add
cwde
xor
or
rcl
xor
pop
inc
mov
push
push
popa
and
fs
loopne
test
inc
jecxz
xor
les
mov
add
add
xchg
data16
and
and
test
pop
or
enter
int
pop
or
or
je
cmp
mov
xchg
rol
test
xchg
mov
and
out
mov
or
rol
ja
push
adc
adc
adc
jns
dec
add
add
push
fwait
push
loop
add
push
push
and
add
loopne
adc
lahf
cmp
mov
cmp
sbb
call
adc
or
adc
out
hlt
sbb
or
dec
jg
das
xor
fsub
mov
fld
jmp
jge
and
dec
ds
jae
add
pop
push
adc
lods
sub
pop
sub
mov
imul
mov
cmp
in
push
pushf
inc
fstp
push
or
or
les
inc
and
adc
adc
mov
and
and
leave
or
push
aam
int
leave
enter
sbb
or
mov
pop
push
dec
rcl
repz
div
inc
sub
cmp
add
or
and
pop
push
and
or
lods
jmp
add
or
jb
daa
add
adc
int3
jge
cmp
mov
lock
push
add
sbb
aaa
popf
and
sub
lea
mov
xor
mov
pop
mov
mov
push
nop
jmp
pop
ja
mov
inc
mov
xchg
out
dec
cmp
push
add
mov
sbb
sub
xlat
add
push
sub
int
add
leave
test
push
sub
and
or
xor
pop
xor
adc
mov
fsubp
mov
or
or
add
or
mov
add
xor
loop
rcr
clc
adc
dec
imul
and
nop
inc
dec
add
add
leave
retf
in
(bad)
fild
nop
sub
add
xor
pushf
adc
pop
test
adc
inc
and
mov
push
ret
dec
scas
sub
jmp
add
xchg
jae
inc
dec
leave
mov
or
or
and
pop
push
or
iret
(bad)
xchg
adc
aad
or
xchg
cdq
adc
adc
mov
adc
jnp
rcl
add
lods
add
dec
cmps
xor
or
adc
adc
or
add
int
xor
in
inc
xlat
add
mov
(bad)
jne
push
push
fmul
xchg
and
push
adc
cmp
fisub
mov
hlt
fild
ret
adc
mov
dec
or
dec
jae
aam
aam
enter
imul
mov
popf
mov
adc
sar
out
icebp
push
rol
loopne
xchg
mov
adc
and
sar
(bad)
dec
cmps
iret
lods
rcr
popf
fild
dec
jg
les
sbb
nop
cwde
fwait
scas
pop
mov
mov
jle
dec
and
bound
mov
sbb
inc
push
mov
or
add
fst
popa
jbe
jl
sub
add
mov
leave
dec
sub
xchg
dec
dec
lds
mov
cmp
xor
mov
shl
pop
cmp
add
leave
pop
in
add
test
call
sub
xor
dec
stos
jb
pop
mov
test
xor
xchg
and
add
push
and
mov
add
mov
nop
push
nop
xchg
push
and
and
dec
mov
xor
pop
add
add
and
sbb
push
je
sbb
lods
pop
sbb
jns
dec
loop
push
sbb
jns
inc
and
push
push
aam
add
in
add
pop
add
sbb
add
dec
push
in
push
add
sbb
add
add
in
leave
or
xor
in
add
or
rol
pop
(bad)
mov
add
inc
in
call
sbb
add
loop
sub
stos
xchg
mov
data16
add
test
push
icebp
push
xor
add
xchg
adc
push
popf
xchg
int
and
inc
xor
test
cmps
jno
add
(bad)
push
in
addr16
pop
imul
push
fist
mov
adc
out
leave
mov
add
push
dec
sub
sbb
push
mov
push
cmp
cmp
jns
in
clc
loope
jb
jo
add
xchg
sbb
jb
or
add
sbb
(bad)
repz
xor
mov
dec
std
adc
push
push
or
mov
dec
movs
sub
add
loopne
ret
pop
and
inc
jnp
xchg
enter
or
add
cmp
adc
mov
mov
and
jns
inc
ret
pop
es
mov
sbb
cmp
sub
jns
stc
sub
call
sub
add
jmp
mov
inc
shr
cmps
sahf
add
cmp
ret
pop
and
fild
rol
shl
cld
cmp
cmp
aaa
sbb
(bad)
xchg
or
jmp
pop
dec
inc
push
mov
in
inc
mov
mov
push
add
add
outs
add
push
das
cmp
pusha
and
or
cmp
push
fwait
cmp
(bad)
rol
inc
add
fs
iret
dec
mov
into
add
test
pop
mov
xlat
movs
rcl
and
dec
pop
xor
nop
pop
pop
and
xor
inc
bound
movs
fwait
add
or
jg
pusha
sbb
cmp
aam
add
repz
pop
pop
inc
ins
push
cwde
xor
loope
mov
lidtd
push
or
xor
or
jb
dec
adc
jmp
pop
pop
pop
outs
adc
mov
test
and
adc
sub
mov
stos
add
pop
lock
inc
leave
in
jp
adc
add
mov
and
leave
mov
sub
or
push
push
cld
sbb
mov
sub
sub
xor
push
xor
inc
mov
popa
sbb
fcomp
test
retf
aam
jge
xchg
jo
popa
ins
mov
stc
push
or
adc
adc
adc
les
sub
add
rol
sbb
pop
rcr
bound
bound
sub
sub
jns
in
add
add
adc
mov
retf
imul
and
loope
fimul
push
dec
jo
jb
mov
xor
das
add
adc
pusha
fwait
in
mov
mov
jo
adc
pop
sub
add
dec
stos
xchg
cmp
leave
push
dec
cmp
aam
sbb
add
mov
push
mov
das
add
nop
mov
push
sbb
test
xchg
imul
daa
add
push
lods
or
shl
pop
add
std
sub
sub
add
xchg
mov
or
push
enter
push
xor
stos
in
mov
sub
sbb
pop
inc
push
addr16
mov
in
dec
or
mov
adc
xor
add
mov
xlat
jbe
mov
iret
ss
aad
mov
add
xchg
or
cdq
sbb
jp
loopne
jl
sbb
aam
xor
push
hlt
mov
lods
and
pop
xchg
mov
rcl
push
popa
push
and
push
cmp
and
cs
mov
xor
adc
sbb
adc
pop
aad
pop
rol
pop
fs
push
inc
and
sbb
adc
rol
push
loope
pop
add
sbb
dec
push
fadd
sub
cmp
sbb
xchg
cmp
scas
std
jg
add
ret
sbb
and
sbb
sub
adc
add
or
imul
or
push
(bad)
push
inc
jne
aas
inc
sbb
or
xchg
jo
fist
and
add
in
inc
shl
ret
je
adc
enter
mov
push
stos
push
push
sti
inc
loop
xor
dec
and
outs
in
adc
jb
(bad)
cdq
pushf
ins
and
add
mov
adc
imul
mov
adc
sbb
outs
cmc
data16
rcr
jmp
jle
sbb
aam
push
adc
addr16
or
xchg
into
or
inc
adc
ret
lods
and
cmp
add
add
or
push
stos
adc
int3
add
stc
stc
mov
sti
mov
push
push
sbb
and
inc
mov
jge
or
mov
xchg
out
in
xchg
sar
jns
add
push
dec
arpl
add
add
scas
add
outs
test
sub
mov
sbb
hlt
call
mov
shl
sub
mov
stc
and
and
push
add
(bad)
add
xor
lock
and
aad
and
or
sbb
mov
scas
mov
xchg
and
sbb
and
xlat
adc
fnstcw
xlat
aam
clc
and
xor
xor
je
lea
aam
sbb
dec
bound
sbb
rcr
mov
jae
xchg
ficomp
in
ret
fstp
rcl
popa
cmps
pop
adc
sub
(bad)
imul
xchg
adc
and
nop
xchg
mov
dec
movs
dec
je
mov
or
adc
or
and
jne
movs
adc
imul
retf
or
add
add
cmp
clc
mov
sbb
or
cmp
call
cld
clc
cld
clc
mov
adc
jnp
add
or
ja
stos
adc
mov
sub
and
sbb
mov
adc
cmps
cs
xchg
add
aaa
inc
scas
in
or
xor
cmps
mov
pusha
nop
sbb
cmc
add
and
(bad)
mov
loop
sub
dec
lods
ins
add
jmp
loopne
int3
adc
mov
adc
xor
add
ret
leave
enter
pop
js
sub
sbb
inc
xor
jg
sub
imul
inc
mov
push
cmp
sbb
and
add
fidivr
or
mov
inc
in
scas
in
mov
adc
sub
jo
xchg
sbb
dec
shl
push
rol
mov
push
push
lods
(bad)
xchg
out
mov
push
pop
stos
and
jo
nop
lods
pop
and
adc
sbb
sti
xor
or
push
and
adc
push
shl
sub
inc
cmp
push
sbb
cmp
dec
fiadd
in
dec
push
retf
jo
call
leave
call
jmp
jno
push
pop
int3
or
dec
pop
enter
dec
xor
lds
and
shl
or
stos
pop
sbb
sbb
xor
int
daa
test
mov
and
mov
in
jg
sbb
clc
add
add
aam
dec
rol
test
scas
aam
push
jecxz
test
das
and
adc
adc
inc
test
cmp
cmp
in
sbb
inc
or
adc
add
and
nop
adc
sbb
inc
or
push
adc
jge
(bad)
mov
or
scas
xor
sbb
das
add
in
sbb
sub
int
sbb
xor
or
and
dec
xchg
xchg
or
add
mov
jne
ret
add
add
lock
daa
sub
clc
pusha
xor
push
push
ret
lds
lahf
xchg
shr
xchg
and
nop
and
stos
fisub
mov
push
movs
in
mov
ret
push
call
cmps
or
repnz
loopne
xchg
ja
nop
mov
stos
popf
push
add
rcr
mov
inc
dec
cmps
adc
or
nop
add
pop
scas
inc
and
push
add
in
lea
ror
add
push
fsub
rcr
inc
push
add
mov
or
mov
pop
aam
jl
sub
add
and
pop
sar
mov
inc
les
mov
sbb
pop
in
push
mov
gs
sub
sub
push
inc
and
f2xm1
or
or
xor
outs
nop
add
(bad)
mov
or
and
sub
nop
das
xchg
cwde
or
add
pop
fisttp
mov
mov
pop
xor
inc
nop
inc
rcl
ror
push
ficom
jns
adc
mov
or
adc
sbb
adc
xor
add
add
sbb
adc
mov
adc
pop
sbb
xchg
xchg
add
movs
adc
adc
or
xchg
shl
add
push
(bad)
xchg
add
adc
mov
sub
movs
jne
inc
and
inc
inc
or
pop
aad
dec
clc
sbb
mov
test
or
mov
add
mov
adc
xchg
mov
adc
or
movups
and
test
sbb
or
add
sub
dec
mov
int3
enter
pop
shr
sbb
je
xor
pop
add
sub
inc
jb
mov
push
xchg
in
dec
push
test
cmp
sub
ret
repnz
xchg
inc
mov
ret
inc
(bad)
je
sbb
add
(bad)
data16
aad
mov
cmp
enter
or
push
stc
jb
test
mov
adc
ja
push
sub
or
adc
add
sbb
sub
add
sub
and
add
xchg
add
mov
(bad)
or
out
xchg
or
cmp
xor
int
sub
scas
call
repz
test
call
test
or
mov
ins
call
add
sbb
add
adc
mov
inc
test
loopne
movs
in
and
cmp
xchg
fsub
add
lods
cmps
fs
or
sub
add
aaa
sbb
push
inc
retf
mov
push
addr16
outs
or
jge
ret
jmp
aaa
jecxz
movs
mov
lods
sub
push
jecxz
shr
imul
cmp
mov
inc
pushf
add
fnsave
enter
jl
fld
ja
add
dec
mov
and
(bad)
and
inc
push
cs
dec
imul
stos
cli
nop
jmp
xor
mov
mov
add
mov
jecxz
adc
stos
mov
mov
or
sub
ss
movs
or
cwde
cwde
rcr
mov
out
sbb
lock
je
shl
and
je
inc
pushf
shl
mov
retf
mov
cmps
mov
adc
sbb
mov
inc
jae
mov
lods
mov
push
fimul
cwde
inc
or
cld
mov
js
push
nop
loopne
mov
add
mov
mov
or
lods
mov
pcmpeqw
push
sub
pusha
add
pushf
mov
or
pushf
push
nop
inc
lock
mov
mov
enter
mov
cwde
inc
cmp
mov
fcom
mov
xor
cmp
add
add
add
xor
loopne
enter
aad
lea
repnz
xor
pop
push
push
outs
or
adc
rcl
aas
cmp
cdq
movs
pop
stos
fcmovb
int3
daa
add
sti
les
jae
call
push
retf
jbe
xor
in
or
je
les
add
jo
stos
lods
inc
cs
inc
fstp
jp
sub
dec
fmul
sbb
mov
call
sbb
lds
push
sbb
aas
add
dec
ret
dec
add
test
push
fs
rcr
test
jno
sbb
adc
jne
bound
fs
sbb
adc
jl
fsub
pop
and
adc
enter
sub
mov
dec
mov
and
inc
sbb
inc
fdivrp
movs
mov
mov
cmp
in
outs
push
enter
pop
mov
rcl
sub
add
mov
leave
or
push
sub
lock
mov
movs
xchg
movs
out
add
or
or
add
cwde
test
xor
imul
adc
loope
(bad)
push
sbb
int
pushf
mov
and
sar
stc
and
or
sbb
fadd
add
xchg
test
(bad)
sub
jbe
and
jno
add
fdiv
ja
mov
mov
dec
add
or
push
cmp
pop
inc
or
add
sbb
add
and
add
sub
add
xor
add
cmp
add
add
push
adc
add
leave
test
fs
and
push
pop
inc
mov
lea
scas
pop
movs
call
inc
mov
add
or
mov
sub
and
test
ins
mov
add
cmp
in
push
push
test
xchg
call
or
cs
cld
pop
les
sbb
dec
jmp
loope
adc
test
shr
push
int3
xor
add
enter
imul
in
adc
in
inc
call
enter
push
sub
mov
hlt
cmp
cli
adc
ins
or
add
(bad)
push
pop
sbb
sub
adc
sbb
sbb
adc
std
or
and
dec
outs
loop
cmps
mov
rol
push
sub
sub
sub
stc
add
adc
scas
xchg
ficomp
imul
fs
test
xchg
sub
xor
inc
cmp
sbb
or
sub
fbld
arpl
add
test
int
and
sub
lahf
push
add
and
aaa
push
dec
or
cmc
dec
jb
mov
or
pop
sub
or
cmp
bound
xor
pop
push
(bad)
jns
mov
out
and
mov
or
inc
jo
and
shl
in
mov
jno
fs
dec
add
and
sbb
and
cwde
or
movs
je
sbb
movs
xlat
mov
enter
in
hlt
xchg
adc
adc
ror
dec
mov
daa
jb
xor
and
call
gs
fsub
sub
pop
(bad)
(bad)
clc
add
xor
mov
jne
add
sub
mov
es
or
jns
cs
add
dec
sbb
lock
or
or
inc
sub
fisttp
push
mov
(bad)
repz
dec
add
enter
xchg
loopne
pop
jo
rcr
rol
fnsave
cmp
pop
sub
or
xor
rcl
test
lods
mov
dec
test
cwde
nop
call
adc
mov
dec
cs
rol
jb
add
add
dec
aaa
mov
jne
jecxz
push
dec
in
inc
mov
rol
jns
mov
in
test
int
xchg
add
add
test
xchg
in
sbb
(bad)
sbb
rcl
jno
dec
pop
mov
pop
cwde
ror
jae
pusha
repnz
js
sub
cmp
mov
nop
imul
iret
inc
add
mov
and
cld
pop
loopne
or
sbb
push
add
arpl
inc
sub
data16
dec
out
adc
les
out
es
imul
pop
or
and
mov
inc
sub
mov
push
cld
and
jmp
xchg
cmp
je
sub
sub
dec
scas
or
push
ins
dec
add
sub
pop
add
call
nop
cmps
ret
sub
add
jo
ins
sbb
outs
hlt
push
or
mov
dec
pop
loope
sbb
pop
adc
xor
push
mov
clc
mov
adc
or
push
int
pop
int3
xchg
inc
xchg
test
mov
ret
mov
add
or
inc
mov
mov
jo
xor
adc
mov
add
adc
sub
push
xor
or
or
push
test
inc
push
mov
nop
mov
inc
push
jmp
and
popf
mov
and
inc
push
pop
add
lahf
fcom
push
adc
imul
inc
pop
ins
and
sbb
inc
mov
xchg
test
daa
cwde
xchg
(bad)
aaa
clc
adc
cmp
es
mov
(bad)
sub
fs
or
add
or
xor
sub
mov
push
xchg
stc
sbb
mul
mov
lods
ja
inc
xor
add
js
stos
stos
jne
pop
cs
imul
test
dec
mov
inc
xchg
addr16
(bad)
adc
dec
mov
add
fiadd
or
add
iret
leave
daa
fisub
adc
cmps
xchg
fadd
ffreep
aas
sbb
cs
xchg
cmc
sbb
or
adc
or
push
add
sub
in
cmps
call
sti
mov
mov
jl
popf
in
or
lock
or
pushf
in
add
adc
js
add
add
and
mov
lahf
push
test
inc
and
mov
inc
and
xchg
and
and
lods
popa
xor
dec
mov
mov
adc
xor
cmp
loopne
jmp
add
push
jns
call
lock
xchg
test
fs
into
les
in
mov
imul
fild
or
imul
add
cwde
cmp
rcr
scas
jg
daa
xor
aaa
and
sbb
jne
bound
cmp
imul
add
rol
mov
shl
iret
add
jo
in
dec
mov
in
cmps
ror
xchg
(bad)
popa
(bad)
sub
je
pop
rcr
lock
cmps
sub
sub
fs
inc
inc
ja
or
or
push
mov
xor
pop
lods
loopne
and
adc
jb
or
push
adc
fs
test
popf
adc
scas
mov
push
scas
loopne
into
mov
push
mov
xchg
pop
sbb
jecxz
mov
je
dec
test
enter
add
sbb
push
ss
shl
in
in
mov
mov
movs
daa
inc
or
mov
cmp
dec
xchg
hlt
call
and
test
stos
add
fchs
test
pop
adc
(bad)
mov
and
inc
shl
jo
sub
fiadd
in
inc
inc
test
je
add
or
fcomp
aad
clc
inc
sbb
enter
and
pop
dec
add
in
and
nop
dec
inc
mov
mov
je
dec
sub
enter
push
aaa
in
test
jmp
and
bound
or
bound
or
mov
jne
adc
(bad)
or
das
cmp
repnz
adc
in
and
sbb
test
xor
sbb
fmul
lahf
clc
jno
ins
aam
adc
push
imul
add
adc
fwait
push
or
add
push
pop
add
sbb
pop
leave
movs
lock
leave
add
hlt
push
and
xor
in
add
mov
adc
push
movs
add
pop
or
out
dec
jb
push
aad
xlat
dec
push
and
inc
cmp
xor
push
adc
add
mov
add
add
mov
loop
mov
pop
cld
and
in
sub
ins
loopne
or
sbb
and
inc
inc
mov
sbb
dec
daa
nop
mov
jo
add
jle
xor
jge
dec
pop
outs
ret
xchg
gs
out
(bad)
in
dec
push
push
out
fdivr
les
mov
dec
lods
mov
xor
push
or
in
imul
inc
dec
sub
and
nop
push
xchg
cmp
test
shr
aad
in
icebp
add
or
(bad)
add
jl
add
jns
and
mov
mov
inc
test
sbb
les
out
in
sub
hlt
mov
adc
lock
inc
mov
pusha
sub
cmps
jo
cwde
pop
add
push
ror
add
or
jmp
dec
in
adc
push
pop
pop
xor
inc
mov
and
mov
or
daa
inc
adc
out
fist
adc
(bad)
xor
inc
sub
xor
xchg
and
jne
mov
hlt
xchg
les
lea
dec
add
stos
sar
(bad)
sub
or
sub
retf
inc
mov
sbb
jo
add
push
sub
pop
xor
arpl
add
enter
pop
add
clc
clc
mov
jae
and
popa
sti
add
dec
jl
mov
sub
jle
add
or
imul
fs
jge
dec
in
sub
mov
clc
jbe
add
jo
fist
std
mov
test
(bad)
pop
mov
mov
add
fcmovb
jmp
add
les
push
inc
loopne
dec
dec
lock
les
sbb
call
(bad)
adc
jmp
jb
add
add
xlat
adc
ret
sbb
xchg
loopne
push
daa
or
sbb
xlat
sbb
inc
push
inc
jno
push
dec
adc
sbb
push
xor
ret
rcr
int
call
mov
xor
cmp
push
cwde
push
sbb
sbb
xchg
into
retf
mov
jl
icebp
mov
mov
ret
add
out
pushf
dec
jno
bound
rcl
lods
in
test
fadd
add
cmp
mov
rol
outs
push
or
fcomip
outs
test
sub
retf
or
hlt
inc
or
inc
jbe
sub
push
add
push
jno
add
cdq
sub
in
ror
push
sbb
or
adc
fsubr
fs
test
xchg
and
aaa
popf
fbld
iret
ret
(bad)
or
and
or
cld
int3
mov
inc
mov
adc
adc
in
dec
jg
pusha
pop
xchg
in
mov
pop
add
shl
mov
mov
add
xchg
imul
xlat
adc
mov
out
clc
xor
test
(bad)
sbb
(bad)
add
sbb
pusha
repz
stos
inc
inc
add
push
scas
and
rcr
add
push
pop
sbb
xor
xor
add
or
jns
sti
stos
loopne
clc
push
hlt
push
mov
push
sub
sbb
dec
cmp
aad
out
call
mov
pop
hlt
xchg
das
push
push
adc
stos
fidivr
adc
pop
aad
push
jb
jecxz
sbb
sti
jmp
xor
bound
pop
mov
mov
mov
inc
sbb
or
hlt
mov
shl
hlt
add
push
mov
lds
and
inc
or
call
in
and
add
add
bound
enter
nop
or
pop
fld
sub
inc
(bad)
pop
in
jo
jmp
add
cld
add
clc
pop
dec
sub
pop
(bad)
popa
hlt
add
push
mov
or
leave
add
hlt
lock
push
stos
mov
pop
dec
inc
mov
add
and
(bad)
ror
add
movs
pop
icebp
add
pushf
xchg
add
or
fcomi
out
arpl
add
rcl
mov
call
or
add
add
push
dec
dec
xor
out
imul
imul
or
jne
lds
xchg
mov
scas
(bad)
lds
adc
sbb
mov
mov
sub
add
add
xor
test
sbb
jmp
mov
jmp
or
mov
adc
mov
adc
cs
addr16
aas
sbb
inc
inc
jecxz
xor
and
dec
jmp
sbb
fcomp
pop
add
aad
mov
iret
test
rcr
call
and
rol
xchg
repnz
mov
test
jecxz
push
in
or
adc
loopne
loope
add
enter
daa
lock
xor
adc
test
push
mov
in
add
sbb
sbb
jne
(bad)
xchg
sub
dec
test
icebp
sbb
fdivr
lock
inc
pop
cmp
adc
clc
or
cdq
in
adc
or
cs
fldcw
mov
adc
inc
or
inc
add
sbb
loop
mov
pmuludq
add
and
popf
out
mov
pushf
add
or
cmp
or
xchg
cld
rcl
push
jmp
add
mov
pusha
jno
clc
and
cmp
hlt
imul
lds
dec
mov
aaa
movs
add
adc
add
mov
sbb
repz
dec
xor
call
mov
dec
cmc
in
repnz
fwait
sub
push
loopne
adc
and
add
out
fsub
inc
clc
mov
push
ds
mov
cmp
mov
lea
test
jl
mov
lea
push
xchg
adc
inc
push
sub
mov
fisttp
out
or
lea
lods
add
mov
inc
loope
jp
aaa
daa
mov
leave
out
mov
or
daa
outs
repz
jp
in
rol
push
inc
xor
(bad)
dec
inc
sub
push
xor
inc
or
pop
jg
lahf
xchg
aaa
sbb
and
div
or
sub
mov
xor
ret
enter
rol
jb
or
xchg
cmp
and
xor
dec
movs
movs
inc
dec
retf
sbb
mov
shr
sub
stos
add
add
jns
or
aaa
rol
xor
daa
cmp
movs
adc
adc
adc
sub
enter
not
test
mov
or
mov
push
and
add
test
test
or
fld
leave
push
leave
clc
add
or
clc
mov
mov
and
push
adc
adc
add
cmp
dec
and
test
or
push
pop
mov
aas
ret
cmp
xchg
cmovns
xchg
or
jge
or
cli
pop
cmp
or
add
inc
inc
inc
dec
sub
jl
outs
cmc
loopne
adc
mov
ins
test
scas
or
scas
adc
dec
loop
jne
xchg
les
ret
cld
jge
mov
adc
inc
and
shl
jl
cld
ss
push
inc
push
lock
ret
dec
mov
out
(bad)
push
mov
hlt
sbb
xchg
fcomp
ror
sub
call
pop
add
mov
pop
pop
inc
inc
sti
data16
je
imul
std
or
movs
es
and
sub
and
cmp
push
mov
pushf
pushf
ret
push
adc
add
imul
xchg
daa
outs
add
push
sub
ja
mov
in
mov
jecxz
mov
bound
cmp
adc
pusha
daa
or
xor
or
pop
fnsave
fisubr
fmul
xchg
fsub
les
shl
inc
js
mov
adc
pop
dec
outs
daa
bound
mov
pop
xchg
nop
and
jmp
test
movs
mov
fcomp
adc
xchg
das
pop
imul
and
cmc
sbb
movs
lods
ret
cli
gs
lock
dec
clc
add
mov
popa
add
push
add
add
dec
mov
mov
or
stos
add
call
dec
inc
or
or
add
in
lods
imul
in
xchg
loopne
xchg
fmul
push
jno
pop
rcr
nop
add
outs
or
push
add
sbb
xor
add
in
add
dec
movs
sub
das
push
mov
add
stc
aad
fmul
cwde
add
cwde
inc
pushf
(bad)
sbb
inc
inc
xor
push
xor
add
xchg
xor
xchg
cmps
loope
ds
aam
les
cwde
or
mov
cmp
mov
or
cwde
and
cld
pushf
nop
or
xchg
data16
cwde
add
loopne
shl
mov
das
clc
sar
mov
nop
push
jmp
inc
in
fcom
or
es
cmps
pop
pop
rcl
int3
enter
imul
pop
movs
sub
aam
fcomp
arpl
add
xor
mov
inc
retf
ror
sahf
enter
pop
lods
xchg
fsub
dec
push
enter
and
sbb
xchg
add
adc
clc
adc
retf
hlt
and
mov
add
add
push
and
adc
and
movs
xchg
movs
lods
cmp
cmp
retf
add
xchg
pop
and
or
mov
mov
loope
inc
call
mov
add
jmp
push
cmc
jmp
nop
pand
inc
cs
int3
mov
retf
inc
pop
fmul
xchg
sub
pop
sbb
jo
shl
aam
xor
jo
iret
mov
dec
push
or
or
xchg
or
or
mov
jnp
in
retf
push
pop
jmp
push
outs
jnp
push
add
push
cld
or
pop
and
and
icebp
add
sub
sub
add
int3
add
jnp
push
(bad)
or
jo
xchg
shl
clc
mov
xchg
cmp
sub
imul
xchg
add
push
stos
sub
adc
test
test
daa
inc
pusha
xor
call
out
pop
mov
mov
je
add
xchg
add
xchg
xor
add
adc
and
push
jp
cmps
or
sub
mov
xchg
es
jl
mov
add
sub
inc
jl
adc
iret
adc
or
inc
jae
push
movs
sbb
pop
xlat
mov
adc
push
ins
ins
nop
arpl
jno
and
push
cmp
jo
push
fst
cli
popf
loope
xchg
push
js
adc
out
fbstp
dec
xor
adc
xor
jne
inc
call
pop
or
scas
outs
jmp
jns
adc
mov
dec
add
push
pop
cwde
cs
repz
sbb
gs
inc
mov
wbinvd
cmp
xchg
ja
inc
add
jae
std
sar
and
and
xor
push
into
cmc
xor
or
iret
push
add
ja
push
adc
adc
push
or
stos
mov
xchg
fisttp
add
push
jg
push
in
adc
lods
pop
push
push
shr
add
push
dec
cmp
(bad)
(bad)
mov
or
mov
adc
sbb
sub
sbb
inc
mov
fadd
dec
test
daa
pusha
fwait
adc
lock
add
rcr
add
test
jecxz
adc
cmps
imul
push
retf
inc
hlt
jne
les
xlat
call
pop
sbb
sbb
xchg
mov
fld
pop
sbb
xchg
clc
fsub
rcl
adc
test
pop
or
and
ror
adc
jo
sbb
or
add
xchg
test
cmps
or
sbb
adc
rcr
bound
mov
mov
scas
fcom
sbb
mov
es
mov
sub
outs
enter
retf
adc
pop
nop
stos
or
adc
lods
push
scas
mov
cmp
dec
adc
and
adc
inc
and
mov
dec
rcl
cmp
add
popa
mov
gs
add
dec
mov
pop
(bad)
pusha
sub
bound
nop
xor
nop
cmps
add
js
or
mov
and
cmp
or
cld
add
mov
cmps
xor
and
jns
aas
jb
add
xor
lock
sar
jg
add
lock
movs
cmp
and
cmp
pop
inc
and
push
push
adc
jno
jge
sbb
(bad)
pusha
or
(bad)
sbb
push
push
add
dec
rol
cld
sbb
xchg
dec
movs
repz
cmps
dec
sbb
add
pop
adc
pop
jns
imul
xchg
inc
mov
mov
(bad)
fisub
test
mov
fisttp
mov
xchg
lds
or
and
or
adc
test
sub
dec
pop
imul
sub
or
dec
add
or
mov
or
out
fisttp
mov
push
cmp
push
xor
fbld
cmp
or
stos
add
mov
push
cld
add
daa
cmp
sbb
sub
sub
test
lods
pushw
pop
jmp
leave
test
inc
gs
add
mov
(bad)
loopne
mov
(bad)
movs
lock
je
fdivr
pushf
add
adc
aaa
adc
or
cmc
jmp
xlat
and
popf
cmp
jne
and
xchg
xor
inc
xchg
fnstcw
cmp
mov
and
add
or
xor
loope
inc
enter
add
mov
push
test
sbb
xor
sub
lea
push
pop
sbb
xor
rol
test
mov
and
je
lahf
sub
push
and
pop
add
movs
pop
inc
mul
xor
js
adc
sub
push
in
rcl
and
sub
in
add
pop
adc
pop
add
mov
add
sub
dec
sbb
adc
shl
adc
pop
dec
mov
pop
sub
inc
cmp
and
int3
adc
and
xchg
les
or
les
test
shl
and
adc
inc
movs
cwde
pop
and
imul
dec
arpl
mov
pop
nop
pop
xchg
and
xor
pop
dec
adc
push
xor
and
add
hlt
xchg
lods
or
inc
adc
ret
pop
xchg
or
xor
rol
mov
mov
inc
adc
gs
imul
outs
dec
enter
shr
dec
and
sbb
(bad)
sbb
xchg
stos
pushf
pop
imul
mov
xor
test
fsubr
loopne
xor
retf
and
mov
add
leave
add
or
mov
(bad)
fst
xchg
sbb
adc
mov
cmp
mov
mov
fdivr
(bad)
rcr
es
aad
call
mov
mov
rcl
pushf
pop
and
dec
sub
(bad)
or
cmp
sbb
mov
jg
jp
leave
vhaddpd
xor
test
movs
(bad)
dec
add
stos
add
in
and
or
shr
cmp
or
test
outs
fcmovb
jae
ja
mov
cmp
sub
xchg
inc
sub
fdiv
dec
and
dec
inc
or
fisttp
out
add
and
lea
add
sub
xor
das
add
push
xor
jno
xor
and
mov
sar
xor
shl
sub
xchg
cmps
test
jg
mov
mov
or
xchg
adc
nop
mov
leave
xchg
or
or
sbb
mov
imul
mov
mov
jl
nop
mov
les
cmp
and
xlat
mov
and
mov
shl
leave
add
dec
pop
inc
adc
sbb
shr
data16
repz
xor
jmp
ror
(bad)
scas
xor
dec
add
outs
adc
add
sbb
lea
mov
dec
and
pop
sbb
daa
push
push
dec
cs
push
adc
xor
int
or
push
xor
adc
movs
xor
or
dec
hlt
xchg
clc
sub
sbb
(bad)
cmp
lds
adc
imul
fs
sub
das
mov
pop
dec
stos
or
mov
pop
je
push
sub
ins
cmp
dec
cmp
arpl
mov
mov
add
and
mov
cld
push
iret
or
inc
movs
mov
and
or
cdq
cmp
jns
aam
xor
aas
fnsetpm(287
add
jb
or
ds
add
and
xor
push
add
leave
add
int
adc
repz
cwde
adc
push
xor
stos
imul
xor
mov
in
mov
push
push
leave
stos
lods
das
mov
sub
mov
pop
sbb
pop
mov
mov
inc
add
mov
add
fwait
dec
sub
js
fcmovu
adc
pop
dec
inc
or
inc
aad
(bad)
push
xor
mov
or
xchg
lods
rcl
or
sub
fs
cmps
inc
fprem
cld
and
fs
dec
cmp
popa
lods
sub
ins
jno
shl
mov
dec
lock
adc
pushf
rcl
out
add
add
inc
mov
sbb
popa
in
inc
add
(bad)
pushf
cs
push
jmp
adc
test
inc
pop
and
fldenv
push
and
or
jmp
mov
xchg
arpl
dec
cmp
xchg
dec
push
cs
xchg
cdq
jmp
shl
dec
ds
inc
les
and
adc
mov
pop
xchg
fwait
ret
push
pop
and
xchg
dec
cmps
push
les
inc
and
ror
inc
jno
push
dec
add
cmp
jl
inc
ret
test
push
or
push
adc
push
inc
cld
and
adc
call
popf
in
inc
or
add
out
push
mov
cmps
mov
nop
test
xchg
pop
cwde
or
sub
cmps
push
adc
pop
rol
test
adc
adc
and
dec
xchg
jne
in
sub
dec
jae
jp
bound
pop
dec
ja
bound
hlt
cwde
add
bound
xchg
imul
add
mov
jp
push
or
imul
adc
hlt
mov
xor
xor
xor
mov
sbb
or
and
pusha
push
bound
dec
add
cli
xor
shl
push
cmp
dec
arpl
sub
dec
stos
push
adc
or
jo
or
test
xchg
mov
test
or
inc
jg
push
pop
push
shl
xor
or
and
push
cmp
stos
dec
sbb
out
add
mov
sub
lea
stos
mov
adc
dec
pop
lea
repz
sub
sub
pop
pusha
and
jb
dec
leave
pusha
xchg
in
dec
pop
push
cmp
mov
mov
jns
loope
(bad)
ins
or
imul
inc
sbb
cs
mov
add
in
test
xor
add
xchg
dec
cs
add
push
xor
call
jno
cmps
dec
dec
jne
cmps
pusha
test
push
adc
add
push
push
or
push
mov
sub
mov
sub
dec
cmp
mov
push
arpl
sub
ja
sbb
dec
sbb
outs
mov
cdq
dec
(bad)
imul
into
sbb
ret
add
in
(bad)
shr
pop
div
pop
lds
push
push
inc
lods
int
rcl
aam
mov
sbb
jns
imul
or
xchg
add
dec
cld
push
mov
test
lahf
xchg
xchg
or
push
or
sub
test
adc
or
cmp
push
mov
push
and
out
lods
inc
dec
or
aaa
jo
pop
sbb
fnstenv
retf
mov
xor
xchg
in
xor
adc
or
add
cld
in
inc
add
jb
in
test
xor
iret
mov
inc
mov
xchg
mov
inc
pop
mov
push
jmp
xor
mov
pop
daa
adc
test
and
icebp
mov
cld
sub
call
jno
movs
sbb
fadd
mov
inc
bnd
xor
mov
xor
ss
add
inc
loop
imul
push
cmp
xor
loope
test
call
in
hlt
push
push
push
fs
hlt
jecxz
lock
dec
sbb
jne
xchg
sub
imul
fcmove
loopne
retf
int3
shr
bound
outs
adc
not
adc
sbb
or
cmp
stos
les
adc
dec
sub
pop
mov
sub
push
add
icebp
pop
lds
clc
mov
sbb
imul
adc
or
push
ret
push
ror
fimul
push
mov
or
push
push
mov
or
ret
sbb
nop
inc
adc
mov
sbb
adc
fistp
sub
sbb
or
inc
cld
inc
push
mov
clc
sub
test
cmps
push
dec
pop
xchg
and
cmp
stos
cmp
pop
rcr
das
add
pusha
imul
rcl
adc
jp
test
movs
test
enter
dec
cdq
and
add
jno
xor
sbb
fwait
ins
push
adc
sub
les
(bad)
mov
inc
and
or
mov
rol
xchg
int3
(bad)
les
sar
pop
outs
mov
(bad)
cmp
dec
add
dec
push
xor
pop
push
or
cdq
or
aad
pop
or
pop
sub
cmp
pop
and
cmp
sub
mov
loopne
(bad)
jl
sbb
rol
pop
sub
mov
cli
add
stos
push
retf
mov
and
adc
(bad)
jmp
adc
mov
push
test
dec
mov
test
jmp
cmp
mov
movs
or
and
add
jg
lea
and
push
mov
adc
test
gs
and
inc
gs
sub
adc
fsub
xchg
pusha
push
movs
call
push
pop
test
dec
imul
lds
lods
sub
stc
mov
int
mov
int
xchg
dec
movs
push
push
retf
mov
xor
pushf
xor
rcl
add
rol
or
loopne
inc
ror
or
push
(bad)
aad
sub
sti
mov
shl
clc
mov
clc
gs
and
movs
sbb
or
jne
popa
cmps
and
bound
sti
call
push
add
out
jo
sbb
lock
cs
adc
jge
adc
sub
inc
adc
push
ds
add
addr16
fbld
pop
and
push
mov
pop
mov
pop
jae
sub
int
inc
mov
mov
pushf
pushf
push
push
clc
hlt
lock
xor
adc
push
jb
add
xlat
hlt
imul
jns
enter
ins
loop
and
and
fcomp
adc
add
dec
and
pop
mov
pop
aad
dec
adc
inc
movs
xchg
or
add
xchg
pop
icebp
adc
adc
adc
add
dec
jne
adc
jg
dec
jns
rcpps
jmp
popf
adc
rol
and
sbb
inc
mov
aad
and
jno
movs
rcl
in
out
adc
leave
es
jne
push
and
adc
mov
or
es
getsec
gs
dec
pop
adc
pop
dec
ins
nop
xchg
pusha
aas
xchg
inc
xor
cmps
add
aas
popa
pop
loopne
int3
lods
add
(bad)
jge
push
adc
ins
dec
enter
test
inc
dec
fild
push
add
pop
adc
xor
mov
or
push
or
cwde
mov
add
sub
pop
fistp
add
jl
or
mov
push
icebp
inc
pop
mov
sbb
in
push
adc
pop
in
(bad)
and
nop
sbb
add
dec
and
test
mov
cld
aas
or
rol
xchg
clc
cld
aaa
movs
push
mov
mov
dec
push
test
and
sti
inc
mov
push
adc
add
dec
xor
and
inc
mov
push
or
or
dec
inc
loope
pop
cld
stos
add
pusha
stos
and
xor
push
and
mov
xchg
jp
aaa
fidivr
adc
cmp
jnp
sar
sub
sub
push
nop
sar
jne
or
mov
popf
mov
repnz
xchg
add
and
jb
test
in
loope
and
jne
and
jae
or
hlt
in
inc
or
shl
inc
push
in
jbe
std
jbe
push
call
sti
dec
pop
dec
les
fimul
icebp
sbb
repnz
jbe
jbe
repnz
adc
and
sub
sub
add
adc
pop
inc
adc
add
add
push
adc
fs
repnz
daa
adc
(bad)
js
push
lea
sub
nop
retf
jno
or
jp
enter
inc
or
sbb
add
hlt
or
inc
dec
jp
inc
shl
add
or
adc
or
push
std
imul
imul
pop
and
jl
imul
inc
push
add
add
and
add
add
stc
xchg
retf
jnp
jo
xchg
mov
dec
add
jbe
xchg
cmp
and
pushf
jle
xchg
add
(bad)
mov
mov
cmp
inc
(bad)
xchg
nop
mov
aad
inc
and
inc
xchg
or
sub
sub
fistp
hlt
mov
xchg
adc
add
inc
pop
fwait
adc
add
repz
call
mov
push
sbb
push
imul
inc
inc
jmp
and
xor
dec
test
push
inc
cmps
push
dec
mov
or
adc
inc
push
dec
mov
lods
xchg
dec
rcr
inc
test
retf
lock
sub
in
test
or
or
fs
inc
dec
fcomp
inc
paddsb
in
sbb
shl
mov
call
aam
and
test
mov
enter
pusha
repnz
stos
or
daa
or
loopne
cmp
add
mov
sub
dec
test
fwait
add
xor
fwait
add
shl
sar
push
or
xchg
pop
cld
adc
dec
dec
pusha
push
mov
test
jo
pop
test
add
es
add
cmp
add
cmp
mov
cmp
or
cmp
mov
out
sbb
enter
inc
add
add
and
pop
sub
sbb
std
dec
stos
push
daa
adc
inc
or
cdq
leave
nop
cmp
stc
lea
adc
in
lea
rcl
dec
jmp
imul
mov
xchg
and
cmp
or
stos
or
or
ins
inc
cmps
push
add
out
test
dec
mov
adc
loop
cs
aaa
mov
aaa
leave
inc
adc
stos
pop
repnz
push
xor
and
mov
mov
ret
xlat
lea
adc
and
sub
adc
dec
rcl
mov
sub
enter
and
and
les
cmp
or
push
and
xor
ret
inc
and
imul
lea
and
pop
sbb
sti
in
xor
adc
sbb
add
push
aam
jg
push
call
ins
xor
ins
ss
push
mov
pop
add
sbb
push
test
test
fsub
xor
push
mov
shl
jne
daa
adc
scas
mov
inc
inc
and
add
jne
mov
cmp
inc
ins
mov
enter
pop
cmp
add
sbb
xlat
dec
scas
xchg
or
mov
adc
cmp
sbb
imul
xchg
sub
es
ror
mov
cmc
sub
push
movs
mov
mov
cld
and
les
xchg
pop
das
inc
enter
add
dec
sbb
sub
bound
jge
adc
inc
sbb
push
push
leave
add
ret
or
jne
(bad)
cwde
jle
ret
adc
push
add
pop
pop
inc
or
clc
pop
sub
adc
xor
push
dec
adc
lds
push
cmps
inc
fdivp
push
and
jmp
mov
ror
stos
sti
test
sbb
dec
call
mov
shl
call
adc
hlt
sbb
push
les
inc
out
pop
fsubr
jo
mov
pusha
xor
fwait
xor
ins
sub
mov
movs
sbb
cmp
add
sbb
ror
jne
outs
adc
rcl
jge
adc
(bad)
mov
loope
lods
add
(bad)
pushf
mov
and
and
or
leave
xchg
cmp
adc
or
push
adc
je
stc
jecxz
inc
mov
sbb
sbb
xor
or
xchg
cmp
mov
cmp
pop
fwait
mov
sahf
loop
mov
jne
imul
mov
pop
adc
push
lahf
imul
lds
inc
inc
and
lahf
jmp
pop
push
shl
add
add
stos
ret
sub
lods
rol
inc
pop
bound
and
adc
ret
inc
add
mov
mov
or
add
mov
mov
mov
mov
cmps
inc
sahf
clc
int3
mov
adc
jmp
and
adc
mov
cmc
mov
aam
add
or
jns
and
and
ins
adc
movs
lds
jno
xor
and
adc
aad
cmp
mov
movs
aas
mov
lds
sbb
fisubr
dec
dec
stos
pushf
add
sub
nop
add
aas
sbb
and
mov
xlat
cmps
mov
inc
pop
inc
cmp
or
sub
cs
xchg
sbb
and
cmp
sub
jmp
pop
add
or
loop
nop
imul
aaa
inc
mov
cmps
fs
imul
push
ret
cmps
jbe
xchg
dec
inc
sbb
inc
adc
fistp
popf
ret
cld
fninit
adc
pushf
iret
mov
les
arpl
xchg
cmps
jmp
adc
stc
inc
sti
xchg
pop
loope
and
adc
or
or
cmp
rol
fcom
in
sti
push
les
ins
cld
sbb
aas
lea
mov
pop
in
inc
or
addr16
sub
jnp
retf
push
pusha
jg
dec
repnz
sbb
xchg
mov
pop
cdq
movs
xor
dec
sub
xor
gs
push
lahf
jno
and
and
xchg
xchg
retf
mov
jb
sub
sbb
mov
cmp
ret
ret
addr16
(bad)
push
(bad)
xor
iret
nop
push
xchg
enter
repnz
xor
nop
push
xchg
xchg
retf
inc
jecxz
inc
jbe
mov
out
repz
sbb
sti
cmp
sub
pop
add
and
sahf
movs
xor
retf
xchg
xlat
pop
or
xchg
jmp
xchg
pop
sub
cmp
nop
push
xchg
push
sub
sbb
dec
gs
sub
test
cmc
pop
mov
and
or
inc
dec
gs
sub
test
pop
xchg
xchg
retf
mov
sub
sbb
addr16
dec
gs
imul
xchg
retf
add
inc
push
sbb
jnp
or
gs
jg
and
push
xchg
sbb
xchg
and
inc
push
repnz
add
jb
sbb
fld
cmps
and
and
cwde
movs
xor
retf
xchg
sbb
mov
and
dec
or
aaa
adc
iret
sub
xchg
retf
xor
xlat
inc
jmp
cmp
pop
nop
push
es
xor
aaa
and
out
imul
and
cs
mov
repz
test
int3
and
mov
push
sub
repnz
(bad)
stc
pop
push
or
gs
or
and
and
xchg
sbb
and
daa
and
xor
cmp
dec
sbb
aaa
dec
sub
cmp
test
mov
int
and
and
dec
nop
push
xchg
enter
sti
push
sbb
and
and
pop
nop
push
xchg
xchg
retf
imul
sub
jg
and
pushf
movs
xor
retf
xchg
sbb
movs
jb
sub
cld
xchg
sub
xchg
inc
fwait
inc
push
sbb
dec
gs
sub
jnp
and
pushf
xchg
xchg
retf
mov
(bad)
sub
sbb
dec
gs
(bad)
hlt
retf
xchg
retf
add
iret
sbb
inc
push
sbb
sub
gs
fistp
ror
jecxz
jnp
nop
je
out
mov
inc
push
sbb
dec
gs
sub
not
xchg
and
not
repnz
adc
inc
dec
gs
sub
or
rdtsc
adc
movs
xor
pop
sbb
pop
mov
inc
push
sbb
cwde
daa
stos
or
gs
sub
test
xchg
dec
in
aas
and
xchg
and
xchg
sbb
push
dec
sub
movs
pop
mov
pop
aam
in
dec
enter
or
dec
imul
push
xchg
sbb
jg
sub
rol
xchg
add
nop
(bad)
imul
xchg
movs
test
mov
lds
and
and
xchg
enter
add
and
xchg
xchg
retf
(bad)
jne
dec
sub
(bad)
iret
and
mov
xor
retf
xchg
out
jecxz
test
out
movs
xor
retf
xchg
dec
test
jae
sahf
xchg
push
sub
add
xchg
dec
sub
in
dec
gs
pop
pmulhuw
mov
sub
push
es
into
push
sbb
push
cs
add
test
retf
dec
and
sbb
inc
das
dec
aaa
and
xor
and
rol
loope
xchg
retf
mov
(bad)
out
inc
sbb
daa
or
inc
push
sbb
aaa
sbb
push
jmp
and
jp
xor
retf
xchg
outs
inc
push
sbb
dec
gs
sub
jnp
retf
or
adc
sbb
dec
gs
sub
outs
xchg
and
xchg
xchg
xchg
retf
shl
cmps
call
gs
scas
or
mov
retf
and
sbb
dec
gs
ret
jle
and
and
movs
xor
ret
int
adc
adc
dec
sbb
jnp
add
nop
add
mov
shl
(bad)
sbb
jo
add
(bad)
aas
movs
mov
mov
mov
mov
neg
sub
or
push
clc
sbb
dec
add
mov
int
sub
pop
ret
push
mov
jge
mov
call
add
xor
ror
lea
rol
xchg
cld
xchg
push
fisubr
dec
lea
aam
ins
dec
lock
loopne
push
enter
ret
loopne
ret
dec
adc
xor
and
push
or
lock
jne
xchg
push
adc
push
xchg
(bad)
pop
dec
lahf
and
sar
xchg
or
jge
and
cs
add
push
mov
jb
jbe
ret
fucomp
cmp
lods
cmp
xor
popf
jbe
jb
nop
clc
inc
push
push
push
not
pushf
into
repz
sbb
and
mov
add
fcomi
ret
lds
mov
xchg
aad
pop
and
mov
add
ja
jecxz
inc
mov
lea
rcl
xchg
retf
jle
xchg
cli
mov
test
scas
lds
cmc
pop
or
jmp
push
push
inc
ins
mov
mov
mov
cmp
mov
add
fcmovb
loope
add
ret
in
in
test
pop
or
mov
pcmpeqb
mov
add
sbb
dec
ror
jmp
lahf
pop
adc
push
imul
loopne
push
out
mov
loopne
push
out
or
addr16
or
xor
je
add
es
pop
ja
adc
inc
add
mov
add
cmp
repnz
mov
(bad)
sub
pop
not
mov
add
add
or
mov
nop
cld
dec
cld
mov
ret
arpl
imul
add
add
fsub
jne
mov
popa
add
or
rcr
(bad)
or
add
push
or
leave
popf
out
cmp
push
sbb
pop
pop
adc
or
and
xchg
es
xor
or
adc
cmps
push
into
jo
pop
(bad)
repz
pop
pop
fistp
rcl
daa
mov
je
addr16
inc
lods
repz
xchg
add
or
cld
adc
cli
sub
shr
ror
lea
not
lds
xchg
pop
lock
ins
push
call
pop
jl
and
je
iret
mov
mov
je
test
je
cmp
jg
xchg
cmp
(bad)
jg
mov
dec
add
sar
ds
outs
pop
push
cmp
sbb
je
cmp
ja
outs
and
push
sub
cmps
push
inc
cmp
jge
pop
add
add
jbe
iret
repz
jmp
pop
hlt
mov
stos
push
enter
pop
out
sub
sub
mov
push
inc
xchg
pop
mov
mov
cld
push
jo
sub
xor
dec
ds
je
in
sub
stos
push
or
mov
mov
pop
je
cwde
fcmovb
jbe
mov
dec
and
(bad)
fsub
div
mov
pop
push
rcl
and
bound
sub
mov
push
mov
enter
add
sbb
push
xchg
push
or
js
mov
xchg
inc
and
in
clc
cmps
sahf
pop
push
push
add
mov
sub
fmul
sahf
mov
loop
mov
gs
or
mov
xchg
pop
add
hlt
fs
push
test
ficomp
mov
push
es
je
aaa
test
jle
sub
jns
hlt
fdiv
data16
dec
ret
stos
push
stos
pop
pop
mov
push
lahf
test
(bad)
cld
fstp
ss
ficom
retf
push
bound
adc
push
mov
push
push
test
push
neg
push
push
cmp
or
mov
outs
aad
jne
(bad)
push
and
sub
je
pop
jns
popf
cdq
fcom
mov
xor
push
ja
add
call
out
sti
mov
mov
pop
inc
retf
push
ret
pop
jne
das
or
js
imul
push
push
loopne
iret
pop
xchg
test
cmps
push
jl
or
jle
enter
push
std
sbb
sub
outs
dec
or
in
jne
mov
dec
jmp
sub
pop
add
jns
int
add
inc
test
add
cmp
out
pop
add
sbb
imul
retf
mov
shl
and
fisttp
cmp
in
(bad)
ror
lock
int3
(bad)
pusha
lss
xchg
(bad)
sbb
iret
mov
pop
inc
adc
mov
je
(bad)
mov
out
nop
int3
cmp
add
pushf
push
dec
imul
fistp
stc
std
or
ja
fnstcw
dec
je
cmp
jge
mov
hlt
movs
retf
lea
ror
cdq
mov
xor
push
(bad)
leave
or
cld
test
mov
jns
pop
inc
scas
shl
or
mov
pop
jle
pop
ss
ror
add
inc
add
pop
mov
inc
jmp
cwde
aam
adc
(bad)
je
mov
popa
xor
imul
stos
loop
repnz
lea
push
or
adc
push
fldenv
aad
cmp
mov
stos
pop
mov
pop
adc
pop
fsubr
or
ror
std
jecxz
add
sahf
inc
inc
shl
ror
(bad)
pop
cmp
jle
das
shr
cmps
lea
cmp
and
jb
push
push
sub
add
jae
push
adc
ds
mov
and
ret
sar
jmp
jg
jae
fnstenv
and
ret
jge
and
push
or
or
retf
cld
sbb
fstp
xor
ss
cmp
sub
cwde
adc
ret
lods
mov
aad
outs
jbe
cmp
add
add
fnsave
add
aad
add
pop
in
jmp
and
mov
push
and
aad
out
inc
adc
imul
je
cmp
test
cmc
dec
aaa
xor
or
push
test
adc
or
mov
adc
stc
test
int3
in
fsubr
jmp
jb
jo
pop
cmps
inc
shl
adc
inc
test
test
or
fbld
sbb
iret
sub
test
and
adc
jo
fwait
dec
mov
clc
jb
nop
sub
mov
pop
and
loope
push
xor
push
add
inc
stc
dec
mov
sbb
adc
(bad)
and
xchg
sub
fdivr
jns
je
sub
je
dec
loopne
mov
push
jae
movsx
push
rol
and
push
ins
lock
adc
and
jmp
cs
ja
sbb
imul
inc
xor
repnz
jmp
(bad)
loop
test
push
(bad)
sub
or
sbb
add
inc
arpl
cpuid
data16
mov
jns
cmp
adc
push
push
leave
push
popf
out
(bad)
aas
push
fistp
add
xor
add
loope
daa
fimul
inc
in
test
push
test
fst
movsx
mov
in
mov
jb
cs
mov
gs
and
inc
and
sahf
add
mov
mov
push
jbe
adc
xor
ficom
push
dec
add
mov
rol
call
hlt
inc
lds
ret
pop
and
xor
call
rcl
in
mov
stos
mov
sub
adc
pop
mov
ret
cmp
mov
stos
cmp
movq
jle
(bad)
mov
sahf
cmp
or
(bad)
clc
fidiv
push
cmps
mov
mov
dec
push
or
and
pop
je
or
sub
cmp
jg
jbe
mov
mov
sub
div
dec
mov
dec
sbb
mov
in
fdiv
retf
lods
sub
fsubr
add
sahf
loopne
sub
xchg
js
retf
or
out
jmp
adc
lock
push
push
mov
or
(bad)
sbb
clc
je
or
or
div
jmp
jne
add
into
push
cmp
push
test
jns
fisubr
dec
mov
(bad)
xor
inc
jecxz
xor
pop
shl
ins
cmp
lods
inc
mov
jge
push
push
test
xchg
inc
mov
sub
push
inc
call
fadd
(bad)
push
je
xor
(bad)
jb
pop
aaa
sub
xrelease
repnz
mov
loopne
jle
pop
mov
nop
push
mov
jnp
dec
xor
add
cld
cmp
sub
jle
cs
int
pop
aas
mov
add
add
aas
(bad)
mov
cmps
test
loop
adc
inc
ror
movs
push
or
sub
sbb
push
lea
add
pop
mov
test
pop
mov
lock
jecxz
test
aad
(bad)
shl
mov
sbb
adc
push
imul
clc
js
call
and
push
call
xchg
adc
or
mov
iret
sbb
fucomp
ret
mov
adc
dec
xchg
add
dec
or
dec
jne
cmp
dec
push
xor
les
or
and
ss
or
cli
fmul
(bad)
and
shl
mov
jg
or
adc
jb
mov
cmp
je
or
jne
cmp
test
mov
cwde
pop
ret
cmp
loope
add
or
or
xor
js
ror
cmp
cmp
jne
or
push
int
sbb
mov
sbb
ret
sti
inc
mov
in
ret
pop
lea
push
mov
mov
xor
cmp
fisttp
ret
ret
cmp
cmps
jnp
pop
rol
dec
add
sbb
xor
lock
or
setl
dec
and
scas
add
sub
mov
adc
aaa
cmp
mov
ins
mov
or
adc
and
fst
push
mov
pop
sub
sub
inc
pop
mov
jmp
mov
in
ds
iret
in
repz
cmps
jne
push
sub
aad
inc
sbb
cmp
push
mov
adc
mov
cld
es
loopne
pop
xor
test
loopne
mov
dec
stc
dec
or
stos
scas
shl
jmp
cmp
adc
and
sbb
mov
mov
adc
cmp
jge
sbb
ror
xchg
je
pop
test
xor
jno
or
clc
jg
jo
and
add
out
lea
out
mov
imul
add
fild
cwde
neg
sbb
lea
and
mov
sbb
call
aas
push
ret
pop
icebp
mov
(bad)
idiv
add
(bad)
out
mov
mov
repnz
fdivr
mov
jne
pop
aas
and
sbb
test
jle
jbe
push
jle
cmp
jg
lea
ret
add
sub
inc
mov
lea
out
mov
push
adc
cs
(bad)
inc
aam
cmp
xor
jl
adc
push
lea
emms
pop
cmp
add
adc
popf
xchg
dec
test
iret
iret
int3
adc
ins
mov
push
ret
sub
je
fcomi
add
add
iret
push
jno
int3
ret
fmul
and
jo
and
js
loopne
push
aas
add
mov
fucomip
pop
cmp
fnstenv
dec
iret
mov
fmul
(bad)
rol
bound
std
jmp
jne
pop
test
jg
les
in
(bad)
sar
fiadd
push
cmp
push
or
adc
push
test
jmp
pop
or
pusha
fiadd
jmp
mov
mov
cli
sub
imul
sub
jne
xor
std
xor
pop
cmp
sub
out
mov
pop
je
cmp
cmp
xor
pop
pop
jne
pop
add
pop
mov
xchg
(bad)
out
retf
adc
ins
mov
imul
mov
cmp
stos
sar
je
ret
lea
lea
fld
movs
adc
hlt
sbb
or
inc
or
jne
clc
inc
loop
data16
test
xor
add
inc
dec
sub
int3
sbb
sbb
xchg
repnz
inc
sbb
push
pop
pop
mov
leave
push
mov
pop
sbb
loopne
push
push
dec
in
push
sbb
bound
mov
loopne
je
mov
or
push
mov
call
pusha
xor
add
and
(bad)
lock
clc
jg
push
popa
jno
cli
add
or
jo
cld
sbb
cmp
ja
test
(bad)
xor
repz
je
inc
sub
jmp
pop
je
sub
sub
movs
adc
push
test
dec
adc
lock
cmp
bound
or
add
push
push
inc
add
xor
imul
popa
push
js
push
mov
jle
sub
lea
mov
or
push
push
push
fstp
or
bound
fdivr
ds
jo
jbe
dec
js
add
sub
inc
loopne
or
add
and
push
inc
sahf
jo
mov
stos
add
icebp
sbb
stos
ss
sbb
rol
dec
and
pushf
xor
xchg
cmp
jl
dec
enter
sub
jne
push
sub
mov
jbe
(bad)
jg
clc
in
cdq
xor
call
mov
or
mov
mov
jno
sub
and
push
push
sbb
pop
mov
fdivr
sahf
adc
jle
mov
fist
jl
and
inc
mov
sub
pop
xchg
cmp
shr
inc
imul
(bad)
jb
push
shl
add
jmp
leave
inc
loope
gs
xor
and
adc
clc
outs
movs
aam
add
out
xor
pop
mov
loope
shl
or
push
inc
enterw
cmps
(bad)
das
jne
sub
das
outs
jne
cli
out
inc
pop
aaa
cld
test
pushf
mov
sub
pop
mov
adc
pop
mov
ret
xor
inc
rcl
mov
xor
add
jns
in
and
xor
retf
loop
xor
cmp
jae
push
aas
fmul
adc
popf
bound
add
loope
inc
movs
and
or
jne
cmp
xor
adc
movs
call
and
push
add
lods
je
mov
add
push
scas
int3
(bad)
sub
pusha
inc
das
fsub
je
push
push
mov
jnp
and
add
loopne
call
nop
nop
sub
aad
fadd
aad
sbb
jle
jmp
and
call
rcr
or
jno
pop
fld
mov
dec
pop
push
xchg
push
jl
sub
mov
adc
push
push
xor
or
adc
inc
and
inc
(bad)
call
cdq
les
outs
test
mov
pop
mov
shl
inc
and
dec
sbb
ins
jnp
shl
xor
push
dec
xor
cmp
into
repnz
cmp
ret
mov
in
mov
mov
sbb
shr
test
inc
cmp
push
or
ss
adc
stos
add
push
sar
cmp
call
xor
or
inc
and
xor
mov
xchg
rcr
(bad)
out
jmp
pushf
or
cmps
in
test
mov
cmp
jl
sar
(bad)
pop
movsx
pop
or
movs
bnd
jle
test
ds
or
or
cmp
and
dec
cmp
(bad)
ficomp
mov
adc
pop
mov
push
mov
cs
rol
imul
jae
push
add
sbb
pop
inc
lea
loopne
inc
cs
jl
jmp
shl
js
adc
or
add
add
lds
jmp
or
pop
jl
cli
aas
sbb
je
lock
push
mov
pop
lock
add
cmp
jo
or
and
add
add
and
retf
fwait
add
rcl
pusha
push
xor
add
cld
fisttp
or
shl
push
pop
sti
or
cmp
(bad)
inc
add
sbb
xor
sbb
mov
push
add
or
jns
(bad)
sub
xlat
jne
fimul
xor
cmp
retf
pop
add
push
ficomp
lahf
push
push
add
adc
push
repnz
jne
je
mov
bound
lahf
test
fsubr
jl
sub
sub
shl
int3
add
or
in
mov
mov
sbb
sahf
imul
fst
js
inc
add
xchg
clc
lock
cmp
adc
enter
sbb
or
add
fist
or
xor
mov
push
mov
cmp
sbb
push
mov
pop
repnz
add
(bad)
(bad)
mov
mov
dec
es
dec
mov
and
or
inc
jo
add
add
or
neg
sbb
data16
xor
add
mov
push
and
inc
ds
(bad)
pop
sub
lods
xchg
je
in
xchg
or
and
and
add
inc
add
sub
adc
repnz
ins
cmp
and
lods
(bad)
mov
imul
or
scas
ret
pop
(bad)
pusha
fwait
lea
mov
mov
outs
or
add
mov
fmul
sbb
adc
jmp
(bad)
arpl
mov
or
jb
enter
add
push
cmp
add
sqrtps
adc
jo
cmp
cs
pop
cmps
xor
jae
ss
jae
fwait
sbb
and
pop
push
outs
push
outs
rcr
out
adc
jl
lock
fist
arpl
loop
cmp
pop
mov
cwde
sub
inc
dec
push
sbb
ins
push
inc
pop
pop
shl
push
push
enter
inc
das
or
mov
mov
xor
loopne
iret
std
mov
lea
jle
stos
mov
pop
(bad)
fcomip
cwde
xor
sub
cmp
je
cmp
pop
loopne
cmp
jg
jle
mov
xor
pop
sbb
push
rcl
inc
sbb
mov
jmp
mov
sbb
inc
and
add
aad
in
dec
jne
jo
xor
dec
adc
push
test
ret
jmp
cmps
(bad)
loope
push
dec
ins
sbb
push
pop
and
push
xor
inc
movs
push
cmp
imul
out
or
xchg
pushf
push
sbb
cmp
sub
or
push
dec
nop
add
sbb
fwait
or
loopne
lds
add
nop
push
je
dec
xchg
pop
or
inc
in
jle
pusha
jbe
loope
inc
dec
dec
and
mov
or
lea
push
mov
rol
and
out
mov
push
sbb
push
pushf
pop
adc
pop
sub
add
sbb
ins
add
outs
add
or
fmul
shl
mov
pop
cmp
fisttp
jne
adc
jmp
mov
jb
test
cmp
(bad)
inc
retf
add
or
dec
sahf
add
retf
and
shl
or
mov
and
and
push
sahf
cmps
repnz
or
adc
or
repz
and
or
or
fsubr
sub
je
or
aad
pushf
pop
or
cmp
inc
cmps
dec
fisubr
push
pop
sub
and
jle
mov
inc
je
jmp
cmp
popa
xchg
rcr
(bad)
aas
or
xchg
or
mov
pop
dec
adc
and
jecxz
xor
push
and
add
in
jo
rcl
cmps
push
push
mov
mov
stos
mov
sbb
cmp
fs
mov
sbb
cmps
dec
add
test
sbb
inc
push
mov
pop
mov
jle
movs
call
xor
dec
mov
or
push
les
test
dec
movs
add
lahf
adc
or
adc
rcl
jae
inc
sbb
lea
dec
and
push
mov
pop
push
push
fdivr
cld
or
xchg
adc
test
loopne
aam
add
inc
cmps
ret
inc
aam
add
xlat
hlt
inc
mov
mov
and
mov
xchg
(bad)
aam
outs
ret
fdiv
pop
movsx
pusha
and
fldenv
sbb
popa
mov
out
adc
dec
call
inc
xchg
push
xor
call
mov
jo
(bad)
mov
pusha
sub
jmp
cmp
xlat
jmp
data16
fstp
dec
inc
lock
push
push
xchg
mov
push
sti
call
or
pop
adc
and
jne
out
sahf
out
push
xchg
popf
mov
in
add
pop
int
and
jns
pop
push
fdiv
pop
or
or
xor
(bad)
fsub
mov
pop
je
jmp
push
cdq
or
add
inc
adc
mov
jg
cmp
sar
push
mov
adc
and
cli
and
push
fisttp
or
add
lods
push
cmp
cmp
push
repnz
xor
push
fs
imul
sbb
shl
xchg
jno
push
retf
push
mov
push
or
pop
mov
add
inc
mov
(bad)
aaa
or
dec
aas
and
lea
repnz
fldcw
jmp
clc
sbb
jns
push
pushf
mov
sub
pop
stos
mov
xchg
pushf
cmp
xchg
add
add
add
(bad)
cmp
mov
jecxz
or
icebp
inc
test
pop
mov
sub
and
mov
mov
les
enter
or
adc
pop
mov
mov
add
adc
sar
leave
pusha
mov
xchg
sar
fbstp
and
faddp
or
add
pop
mov
rol
js
pop
adc
imul
jle
mov
imul
dec
jne
mov
cld
stos
adc
xlat
mov
rol
lea
mov
or
adc
add
mov
test
aad
mov
push
les
push
push
inc
in
pushf
ds
adc
add
push
pop
hlt
test
cmp
pop
clc
push
mov
ror
or
push
dec
add
inc
pusha
jge
add
xor
icebp
xchg
data16
adc
mov
adc
push
push
or
std
mov
mov
sbb
fbld
(bad)
shl
lea
xchg
push
sar
jg
pop
jne
add
inc
cmps
add
pop
or
fbstp
rol
ins
push
test
mov
jne
addr16
test
add
jo
lods
cli
int3
xlat
ds
sub
mov
dec
fcom
sub
and
shl
add
jae
mov
cmp
jl
sbb
xor
int
or
sar
dec
imul
pop
lea
addr16
inc
movs
jb
dec
adc
jmp
int3
int
jae
clc
cmp
pop
ins
add
mov
sub
data16
pop
loope
js
sbb
mov
lea
fstp
fistp
push
jl
pop
ret
push
cmps
xor
jne
cmp
cld
mov
inc
inc
jno
das
(bad)
jb
lea
sub
popa
aaa
sub
cdq
scas
clc
pusha
clc
sbb
sar
mov
add
dec
or
das
rcr
mov
mov
jnp
test
sbb
clc
aam
add
lods
into
add
jl
or
les
mov
cmp
pop
adc
xor
add
pop
cmp
ja
xchg
or
cmp
mov
je
jg
fimul
adc
and
xor
and
rcl
adc
fdivr
mov
mov
and
jne
cmc
daa
add
popa
imul
add
cld
jg
add
xor
add
mov
or
mov
imul
retf
cmp
call
sbb
push
aam
jo
cmp
lods
sbb
(bad)
jle
jle
add
cmp
jne
scas
pop
mov
pop
jp
push
and
lock
shr
jge
cld
repnz
pop
mov
mov
dec
pop
pop
or
dec
mov
lahf
aas
inc
inc
loopne
push
push
sbb
ror
js
popa
jae
xor
add
dec
je
into
mov
lock
clc
(bad)
repz
sub
dec
jo
test
ins
lods
pop
shr
rcr
or
imul
dec
push
cmp
je
or
jne
cmp
adc
cs
pop
adc
xor
clc
pusha
and
push
or
xor
adc
cmp
or
sub
lock
data16
ret
cmp
js
push
sbb
std
lods
and
cmp
dec
dec
pop
jl
cld
sub
les
shl
mov
pop
leave
push
push
xchg
mov
dec
add
cli
cmp
(bad)
out
adc
jmp
sub
add
mov
add
jne
fcmovnb
lods
cwde
dec
cmp
jnp
sbb
inc
jl
mov
int
retf
xchg
push
or
sub
sbb
xor
adc
data16
int3
test
ds
xchg
pop
pop
push
or
movs
sub
std
enter
push
mov
and
or
aas
mov
push
rcr
loopne
or
add
and
xchg
ffreep
cli
jmp
sub
fcom
fsubr
push
adc
jle
call
mov
lock
and
pop
pop
cld
push
push
add
cmp
ss
je
sbb
in
xor
arpl
sti
mov
push
mov
cmp
ins
je
or
pop
cdq
pop
ret
push
fstp
adc
push
cmps
lods
pop
inc
mov
out
int
and
sub
and
sub
or
and
jl
shr
jne
cld
or
jmp
fabs
sub
retf
push
nop
pop
aaa
jo
xor
idiv
mov
and
add
out
sbb
dec
or
inc
clc
sar
jne
mov
jle
sub
add
jmp
repnz
cmp
pop
sub
add
inc
sub
(bad)
mov
and
idiv
repz
sub
cmp
cmp
xor
mov
mov
idiv
loopne
imul
pop
and
or
or
pop
xor
or
inc
add
cmp
jbe
ret
sbb
clc
or
out
addr16
push
xchg
xor
or
inc
(bad)
sti
inc
mov
mov
and
fadd
and
add
mov
and
pop
pop
mov
push
call
fmul
or
mov
mov
mov
rol
cli
or
shr
add
in
mov
cdq
mov
mov
retf
xchg
int3
dec
add
shr
repz
adc
adc
popa
cmc
mov
(bad)
leave
jne
pop
mov
cli
push
ins
inc
fwait
adc
sub
mov
add
cdq
js
ins
bound
hlt
push
push
les
les
push
mov
pop
sti
jbe
test
lahf
jne
cmp
call
add
mov
(bad)
cmp
imul
add
or
fisttp
inc
mov
jecxz
icebp
clc
pop
ret
cmp
add
cmp
or
mov
ror
xchg
xchg
mov
out
xchg
loope
push
js
and
mov
cmps
in
xlat
in
mov
sub
sbb
ret
repnz
xlat
rcr
pop
int3
inc
adc
jmp
emms
add
xor
xchg
adc
rcr
neg
add
inc
je
sub
push
sbb
add
push
mov
and
sub
jmp
data16
cmp
retf
in
mov
mov
pop
pop
pusha
fs
jb
ins
jo
add
inc
pop
jb
in
cld
mov
inc
add
dec
ds
lock
jnp
addr16
pop
sbb
inc
add
in
inc
jecxz
adc
adc
(bad)
jmp
mov
popa
arpl
mov
int3
shl
rcl
mov
push
loopne
fdivr
jns
jno
ins
add
jno
popa
je
imul
sti
stc
push
cs
inc
jo
adc
outs
je
arpl
idiv
jnp
ins
jno
jbe
push
out
in
mov
and
pop
dec
or
(bad)
xlat
ficom
test
adc
outs
jo
outs
fwait
pop
and
ror
shl
jbe
jb
idiv
dec
ja
addr16
add
jns
jo
imul
inc
outs
inc
outs
inc
push
jg
inc
inc
dec
jne
and
pshufw
imul
xor
bound
dec
outs
dec
popa
push
das
das
imul
(bad)
jmp
je
imul
outs
ins
das
cmp
aaa
xor
xor
aaa
xor
cs
addr16
mov
mov
aad
mov
mov
inc
rol
retf
into
int3
in
push
inc
pop
cld
ss
addr16
jae
ins
fcmovnb
xor
xchg
std
push
adc
jmp
add
dec
inc
dec
inc
and
dec
(bad)
fdivrp
jbe
es
dec
inc
js
data16
add
push
or
pop
add
imul
jo
sbb
test
sbb
push
sub
mov
or
pop
jb
xor
adc
jg
call
xchg
add
push
rol
or
and
fild
outs
bound
push
push
jo
inc
xor
outs
sub
xor
xor
xor
cmp
adc
mov
cmp
xor
cmp
out
add
cdq
lea
mov
add
mov
loopne
add
pop
add
fisttp
add
add
es
add
add
jbe
nop
add
(bad)
cmp
xchg
add
add
pop
mov
mov
out
add
sbb
and
test
or
(bad)
(bad)
mov
or
or
or
or
adc
adc
adc
sbb
or
lahf
pusha
fisttp
or
push
adc
data16
push
adc
adc
inc
add
or
add
add
adc
paddd
fst
pop
inc
add
dec
add
sbb
add
pop
add
inc
push
adc
fidivr
add
push
add
add
cmp
cmp
adc
add
call
adc
jno
xor
adc
mov
adc
xor
adc
pop
and
icebp
(bad)
call
arpl
push
mov
fs
ret
ss
rcl
gs
ret
sar
(bad)
(bad)
push
repz
daa
xchg
movs
test
movs
mov
aad
cmc
push
data16
xchg
cmps
mov
(bad)
out
aaa
rol
inc
push
addr16
xchg
cmps
mov
xlat
out
adc
add
daa
paddd
or
adc
jno
push
lock
cld
adc
rcl
xor
loope
xchg
sub
loop
cli
xor
and
xor
mov
or
ss
loop
loop
dec
adc
daa
add
add
mov
hlt
fwait
jb
jge
sbb
(bad)
call
ret
and
sub
push
fldenv
ins
ja
mov
scas
add
arpl
pop
mov
popa
and
mov
int
outs
test
(bad)
ins
mov
loop
fisubr
cmp
add
out
cli
jmp
(bad)
jnp
stos
mov
jmp
mov
dec
popa
in
pusha
jle
ret
(bad)
(bad)
(bad)
call
mov
cmps
iret
push
mov
fisttp
lahf
jmp
aam
call
das
jnp
(bad)
(bad)
call
push
cmp
mov
dec
lods
dec
pop
mov
push
mov
jmp
push
mov
lock
mov
(bad)
cld
sar
fsubr
(bad)
(bad)
(bad)
jmp
lods
in
jne
mov
ins
(bad)
scas
ja
mov
cmps
in
enter
fistp
(bad)
(bad)
(bad)
call
and
leave
or
mov
mov
ficomp
push
sbb
pop
(bad)
(bad)
(bad)
push
mov
outs
iret
shl
jge
jl
mov
mov
cmc
cmp
ficomp
ins
add
(bad)
(bad)
push
push
out
imul
mov
mov
xlat
mov
cmp
cmc
jb
movs
push
pop
jbe
fs
inc
mov
(bad)
cmp
ja
ins
push
ret
shl
or
cmp
out
arpl
out
(bad)
pop
mov
cmp
dec
sub
cli
push
pop
arpl
mov
leave
cwde
lea
(bad)
(bad)
(bad)
jmp
jb
mov
jg
repnz
jmp
cli
sbb
out
xor
scas
aam
(bad)
(bad)
inc
jge
pushf
mov
imul
(bad)
ja
jae
hlt
jo
mov
call
(bad)
jno
arpl
jae
clc
jns
pop
mov
pop
pop
mov
xchg
(bad)
(bad)
(bad)
mov
cs
pop
add
add
outs
(bad)
shr
idiv
adc
dec
jg
(bad)
jmp
movs
mov
imul
outs
out
push
mov
in
cmp
sub
jno
adc
mov
mov
jg
rol
push
dec
idiv
dec
mov
fld
aam
(bad)
mov
sbb
dec
inc
aad
ins
xchg
ins
outs
fstp
(bad)
(bad)
fcomip
xchg
xchg
jmp
push
int3
jae
jo
jae
(bad)
cmp
(bad)
mov
push
aad
pop
movs
hlt
call
scas
jne
rcr
jno
jnp
imul
mov
call
in
sbb
ins
fnstsw
or
lods
pop
dec
and
adc
mov
inc
outs
mov
push
out
jae
lahf
into
sub
call
pop
es
icebp
(bad)
push
mov
leave
fidiv
out
(bad)
mul
ss
lods
fcomi
fnstcw
arpl
pop
cli
jp
das
lgs
out
in
iret
out
xchg
in
pushf
(bad)
inc
lock
in
hlt
out
mov
cmp
lock
pop
movs
fcos
pop
or
or
fwait
xor
xor
cmp
dec
add
stc
push
ror
int
aaa
das
das
imul
sbb
dec
rol
push
call
add
fcomp
push
clc
adc
push
ins
ins
jne
stos
mov
mov
dec
mov
xchg
push
jo
jecxz
push
pop
aas
and
add
pop
sbb
sbb
add
or
imul
mov
xchg
fistp
daa
adc
adc
jnp
cmp
cmc
jg
data16
imul
repnz
and
pop
dec
jb
mov
xor
shl
jo
add
sbb
call
mov
push
add
push
mov
pop
sbb
lea
adc
lea
push
idiv
(bad)
lods
movs
idiv
xchg
push
cmp
xor
das
arpl
or
outs
jne
sbb
bound
lock
push
arpl
push
sar
inc
je
outs
outs
lea
data16
sbb
cmp
inc
je
ins
adc
push
cwde
repnz
gs
ins
dec
jae
add
ficom
adc
pop
dec
inc
mov
repz
jne
pushf
outs
jb
imul
divps
or
push
imul
inc
in
sbb
gs
je
fs
jo
pop
or
out
pop
and
dec
ins
addr16
bound
jb
push
inc
pop
push
stc
and
cmp
ins
je
popa
outs
mov
(bad)
stc
push
arpl
js
dec
jae
push
dec
dec
ins
outs
ins
xor
cmp
or
jp
ins
sbb
fsub
cmovs
xchg
pop
fs
rcr
mov
jb
push
sub
or
shr
addr16
cli
xchg
mov
mov
ins
xor
dec
outs
mov
mov
jae
je
or
rcl
or
je
ins
jge
in
loop
les
lahf
sub
xchg
ins
nop
outs
cmc
aas
lock
out
adc
pop
stc
push
add
or
xor
sbb
cmps
imul
clc
shl
xchg
xchg
test
(bad)
add
inc
inc
inc
add
bound
gs
push
add
in
out
push
je
jae
jo
adc
(bad)
mov
inc
add
xor
push
pop
loopne
pop
add
(bad)
xchg
jp
push
in
outs
jae
popa
push
fmul
cli
(bad)
js
jo
xor
xor
add
js
push
gs
xor
mov
sub
cmp
and
imul
jo
gs
(bad)
(bad)
jp
gs
jp
push
arpl
arpl
and
and
cmp
jo
push
and
ins
mov
pop
mov
dec
iret
xchg
imul
pop
dec
push
and
jb
jg
outs
adc
xor
ss
ss
xor
sub
dec
outs
outs
and
ins
stos
aam
bound
and
aaa
or
cmp
cmp
cmp
in
mov
fld
and
jb
data16
inc
loope
mov
mov
or
xor
mov
cmp
xor
mov
call
jae
outs
je
js
and
inc
gs
jb
cs
mov
ins
je
and
in
mov
push
arpl
call
das
gs
gs
out
fadd
sbb
jne
jl
lea
dec
or
dec
adc
ins
ins
pop
sahf
data16
xchg
pusha
pop
xor
test
les
inc
pop
cli
inc
push
pop
push
pushf
cld
iret
push
xor
sub
cmp
lods
and
fs
push
push
lods
jge
cmp
pop
cmps
test
or
pop
mov
pop
idiv
adc
(bad)
push
ins
pop
dec
imul
jo
sub
mov
push
mov
lahf
dec
sub
das
dec
inc
inc
shl
mov
cld
mov
inc
inc
and
inc
ss
ss
js
push
dec
imul
push
mov
jb
mov
or
es
fs
xor
or
inc
xor
mov
push
xor
aaa
mov
cmp
cmp
inc
jno
outs
arpl
jno
sub
cmp
(bad)
mov
jo
sub
gs
ins
pushf
loop
xchg
jne
add
fdivr
pop
cmp
lds
dec
into
jbe
imul
sub
cmp
ss
outs
out
ins
aaa
xor
cmp
xor
push
addr16
cmp
cmp
xor
xor
daa
mov
xor
xor
mov
xor
xor
cmp
xor
inc
mov
loopne
mov
inc
inc
cmp
cld
cmp
xor
pushf
sbb
push
ss
inc
ss
xor
push
push
int3
das
xor
imul
lods
xchg
xchg
or
xor
ss
adc
push
aam
sub
xchg
mov
div
nop
in
sub
mov
js
xor
dec
je
aaa
xor
or
and
mov
imul
cmp
pop
outs
xor
xor
jbe
in
mov
aaa
or
cmp
xor
retf
xor
xor
ja
ds
xor
push
cs
retf
xor
aaa
cmp
xor
mov
xor
cmp
in
mov
xor
cmp
sub
xor
cmp
jb
xor
cmp
mov
mov
or
sub
adc
xor
add
xor
xchg
cmps
xor
ss
jb
call
xor
lods
call
cmp
cli
inc
in
inc
in
sbb
dec
lock
sbb
inc
and
inc
xor
js
add
gs
fs
ror
or
and
xor
mov
jne
les
das
sub
or
xchg
push
test
pop
jecxz
sub
outs
lock
jmp
or
(bad)
push
cli
ja
pop
push
push
dec
inc
dec
dec
inc
pop
or
dec
imul
add
ins
outs
je
push
pop
pop
pop
and
into
inc
or
or
mov
outs
and
mov
dec
push
inc
push
add
mov
mov
and
aas
aas
not
add
shr
or
fnstcw
arpl
je
add
fs
pop
in
push
test
ins
ja
jo
push
adc
imul
repnz
xchg
add
inc
push
sbb
push
outs
sub
pop
inc
fs
outs
fs
out
movs
jns
les
iret
repz
add
imul
ins
imul
ja
gs
jae
add
int
iret
imul
or
push
push
inc
cmp
pusha
pop
jb
or
bound
je
mov
outs
jo
and
arpl
add
loop
idiv
cmp
dec
fisubr
sub
fs
ins
outs
jns
out
pop
sub
add
push
sub
pop
add
addr16
add
int3
daa
dec
int
fld
es
add
loop
fwait
test
fisub
outs
cmovb
shl
pusha
ja
nop
loop
mov
stos
test
fild
js
cmp
cmp
and
push
jne
arpl
js
push
cli
pop
and
dec
adc
sub
and
bound
mov
stos
ret
and
sbb
ins
add
int3
movs
(bad)
call
mov
mov
adc
push
pop
sahf
jmp
cmps
pop
test
or
repz
pop
out
adc
jo
inc
add
mov
push
push
xor
jbe
pop
mov
aaa
sub
jg
hlt
rcr
add
add
add
add
add
jg
inc
rol
lods
ror
dec
add
push
pop
fdivr
add
arpl
push
jl
add
dec
nop
add
and
sbb
scas
add
rol
add
or
outs
add
add
add
add
add
add
test
(bad)
(bad)
push
cwde
pop
add
add
add
add
add
add
dec
add
pop
(bad)
(bad)
(bad)
inc
pusha
add
outs
add
jl
add
add
add
add
add
add
cmc
(bad)
(bad)
inc
fld
loope
jmp
add
add
adc
sbb
add
add
dec
(bad)
(bad)
(bad)
fist
pop
add
jno
jp
test
mov
cwde
add
add
add
add
add
add
(bad)
jg
jmp
cmc
add
add
add
add
add
pop
add
jb
jle
mov
lock
inc
xchg
add
add
add
add
add
add
add
aam
and
(bad)
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
call
dec
add
ja
xchg
mov
lds
test
(bad)
(bad)
mov
push
aaa
push
dec
push
pop
push
push
jnp
mov
popf
push
scas
push
rol
push
jecxz
cmc
pop
(bad)
(bad)
(bad)
fistp
pop
sub
cmp
pop
je
xchg
cdq
pop
lods
pop
mov
pop
clc
or
or
(bad)
(bad)
(bad)
dec
xor
inc
or
outs
or
or
or
or
or
or
(bad)
dec
jns
(bad)
mov
or
or
or
or
or
or
(bad)
(bad)
mov
repz
or
or
imul
mov
enter
stc
or
or
int
jmp
or
or
or
or
or
or
or
or
or
pop
or
(bad)
(bad)
dec
fimul
cs
dec
push
fs
jg
fwait
push
mov
ror
out
wbinvd
(bad)
cmovno
pop
lock
pop
(bad)
setbe
mov
iret
paddsb
adc
popa
adc
fwait
adc
call
adc
adc
adc
adc
ins
adc
call
adc
adc
cli
inc
adc
adc
adc
adc
arpl
cmp
adc
adc
adc
push
cld
(bad)
call
adc
adc
adc
adc
push
adc
mov
es
(bad)
(bad)
mov
(bad)
push
mov
(bad)
push
cli
pop
sbb
pop
mov
scas
pop
rcl
neg
sbb
(bad)
(bad)
call
inc
sbb
mov
scas
sbb
sbb
sbb
sbb
imul
sbb
sbb
sbb
ja
(bad)
(bad)
call
sahf
sbb
sbb
sbb
cmp
arpl
mov
mov
ficomp
sbb
sbb
sbb
sbb
sbb
sbb
(bad)
(bad)
(bad)
call
jo
cdq
sbb
push
push
inc
push
push
xchg
push
mov
pop
ds
imul
call
mov
and
ins
and
and
dec
and
mov
and
and
(bad)
(bad)
jmp
and
and
and
and
and
xchg
and
and
and
and
and
and
and
(bad)
(bad)
call
and
xchg
and
daa
es
xchg
mov
call
daa
jp
stos
daa
(bad)
(bad)
(bad)
(bad)
fsubr
or
sub
sub
sub
popf
sub
sub
sub
sub
sub
pop
jmp
sub
jle
sub
sub
sub
jbe
(bad)
(bad)
jmp
push
cs
sub
cs
das
and
pop
das
xchg
das
(bad)
das
(bad)
xor
xor
(bad)
(bad)
(bad)
push
adc
dec
xor
xor
xor
fwait
xor
xor
xor
xor
fisttp
push
xor
xor
xchg
jb
scas
ss
aaa
and
pusha
aaa
pushf
aaa
xlat
cmp
push
cmp
inc
cmp
mov
cmp
(bad)
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
mov
ds
and
popa
aas
mov
inc
fs
cmps
inc
out
sub
inc
lods
inc
out
inc
xor
inc
mov
sbb
inc
cmp
inc
rol
inc
mov
inc
push
inc
call
out
and
stos
inc
lock
xor
dec
add
dec
xlat
dec
sbb
jmp
test
dec
jge
les
dec
push
dec
call
(bad)
mov
dec
dec
dec
xchg
dec
fmul
dec
outs
dec
mov
dec
dec
dec
xchg
dec
(bad)
(bad)
(bad)
(bad)
fst
push
jno
mov
push
fwait
push
out
xor
push
(bad)
push
adc
push
stos
push
not
(bad)
(bad)
(bad)
dec
push
jne
ret
push
pop
push
test
push
xchg
push
loopne
das
pop
jge
retf
pop
sbb
(bad)
(bad)
jmp
mov
pop
cmps
pop
cmc
pop
inc
pop
xchg
pop
in
xor
pop
daa
pop
js
leave
pop
sbb
(bad)
(bad)
jmp
pop
maxps
mov
add
pusha
cld
popa
dec
popa
mov
bound
(bad)
(bad)
mov
call
gs
cmp
callw
addr16
addr16
push
in
imul
dec
push
push
imul
imul
push
ins
scas
ins
or
(bad)
(bad)
(bad)
jmp
outs
adc
outs
les
outs
js
shl
jo
jo
jno
jno
jno
jb
jb
jae
(bad)
inc
jae
jae
je
cwde
int3
jne
jne
jne
jbe
jbe
jbe
ja
ja
(bad)
(bad)
push
js
jns
jns
jns
jp
jp
jnp
jnp
jnp
jl
jl
jl
jge
jge
scas
(bad)
jmp
jle
jg
jg
jg
add
xor
imul
(bad)
(bad)
(bad)
inc
mov
test
test
stos
xchg
xchg
xlat
xchg
xchg
mov
(bad)
(bad)
(bad)
dec
dec
xor
arpl
(bad)
dec
ss
(bad)
dec
outs
nop
(bad)
xchg
aas
xchg
test
adc
xchg
mov
and
push
xchg
pop
xchg
leave
xchg
xor
lahf
xchg
or
dec
cwde
mov
cdq
cld
call
(bad)
(bad)
(bad)
jmp
pushf
neg
inc
sahf
scas
lahf
sbb
mov
inc
mov
(bad)
(bad)
(bad)
call
mov
(bad)
movs
cmp
mov
loopne
push
test
test
(bad)
jmp
stos
add
pop
lods
shr
sub
scas
mov
(bad)
(bad)
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rcl
mov
cmp
cmps
mov
mov
(bad)
mov
(bad)
mov
jo
in
shl
ret
fcmovnb
pop
ret
aam
push
(bad)
into
(bad)
(bad)
dec
enter
ret
mov
mov
retf
mov
ss
mov
xor
(bad)
(bad)
push
into
mov
aaa
iret
mov
sar
mov
rol
aam
aam
aad
(bad)
(bad)
dec
rcl
push
(bad)
fcom
pop
xlat
loopne
fs
fldcw
fidiv
sti
(bad)
(bad)
fild
adc
xchg
ficomp
mov
loopne
loopne
loope
loope
(bad)
(bad)
dec
loop
loop
jecxz
jecxz
in
in
in
out
out
out
out
call
inc
jmp
(bad)
call
in
jo
sti
in
xchg
adc
pushf
out
sub
mov
inc
out
int3
lock
lock
jb
push
mov
(bad)
(bad)
(bad)
call
repz
hlt
xor
ret
cmc
fdivp
ins
idiv
test
cli
push
cli
out
ja
test
cld
cwde
std
sub
mov
jmp
(bad)
jnp
push
add
add
add
push
or
push
or
push
push
in
mov
or
or
or
add
adc
push
leave
inc
or
sbb
adc
fiadd
leave
adc
stos
es
cs
jl
cmp
jnp
add
add
add
or
les
adc
dec
jl
push
push
adc
xor
pop
cmc
addr16
xor
les
xor
inc
xor
xchg
mov
(bad)
inc
xor
mov
pop
push
fs
shl
or
sub
inc
movs
mov
shr
sbb
jecxz
jle
pop
mov
xchg
cmp
push
mov
cmp
(bad)
mov
test
stc
sub
dec
pop
push
mov
jmp
add
ins
js
in
es
add
loopne
fs
xor
pop
and
push
bound
xor
(bad)
cmps
push
adc
push
and
jae
xor
xchg
or
cs
push
push
es
sbb
jbe
aaa
repnz
sub
add
shr
pop
js
adc
aaa
mov
sbb
stos
(bad)
call
popf
(bad)
stos
test
lds
into
and
cwde
ret
(bad)
(bad)
dec
cmp
add
daa
(bad)
xlat
adc
sub
pop
and
loop
mov
aaa
sub
les
or
xchg
mov
mov
mov
icebp
daa
es
in
jno
(bad)
(bad)
jmp
mov
cmc
das
xchg
push
mov
repz
fistp
mov
cmps
dec
out
lods
lods
sahf
xchg
jmp
hlt
add
stos
es
dec
scas
mov
int
dec
repz
(bad)
(bad)
jmp
pop
mov
pop
mov
xchg
fsubrp
into
out
fs
adc
outs
outs
mov
mov
dec
add
sub
dec
iret
xor
pop
mov
pop
xor
std
cmp
dec
(bad)
cmp
bound
jecxz
gs
xor
sar
out
mov
adc
(bad)
(bad)
(bad)
(bad)
imul
jmp
mov
in
xchg
jns
aad
loope
dec
pop
call
(bad)
call
dec
mov
sub
xor
(bad)
mov
ins
punpckhdq
movs
cli
jg
(bad)
(bad)
dec
dec
aas
les
xchg
xchg
fist
bnd
xor
jge
dec
and
cmp
or
add
cs
(bad)
mov
(bad)
jg
inc
mul
pop
out
mov
cmp
and
call
(bad)
(bad)
(bad)
mov
int3
pop
and
cmp
(bad)
cmc
in
sbb
sbb
cli
(bad)
(bad)
(bad)
jmp
cmc
(bad)
aas
stos
jmp
or
js
out
fs
out
push
test
(bad)
jmp
cmp
add
mov
aam
cli
xor
pop
jno
movs
and
cmp
ja
mul
(bad)
(bad)
(bad)
(bad)
cmp
jle
pop
sbb
sbb
(bad)
xchg
xlat
sti
into
sub
jecxz
adc
jecxz
jg
dec
jg
xchg
mov
dec
ret
(bad)
out
mov
aas
xor
sub
fcomip
dec
add
cmp
push
retf
sub
(bad)
retf
jmp
repz
sbb
outs
fucomi
or
fist
push
loop
popa
lds
dec
leave
mov
jecxz
push
dec
neg
xchg
mov
(bad)
js
sub
jbe
outs
sub
inc
sbb
call
(bad)
jmp
lahf
add
jecxz
cld
and
retf
lock
(bad)
(bad)
jg
jmp
iret
sti
pop
(bad)
paddb
jg
scas
std
aas
out
mov
(bad)
(bad)
inc
ds
lahf
(bad)
icebp
in
std
div
out
or
loope
ins
inc
jmp
pop
cmp
cld
jp
call
hlt
outs
lods
popa
lods
ret
pop
inc
ret
or
(bad)
(bad)
jmp
and
xor
rcr
das
fprem
mov
in
mov
shr
cli
jmp
mov
mov
xchg
or
outs
(bad)
call
mov
xchg
popa
dec
inc
dec
fst
xchg
sahf
sub
push
xchg
pop
(bad)
neg
mov
jg
jmp
mov
mov
jmp
ror
adc
(bad)
(bad)
call
nop
sbb
cmp
xchg
aad
mov
int3
cmp
pop
repnz
imul
jmp
ss
jns
jl
dec
mov
test
inc
xchg
fsub
and
jno
test
(bad)
jg
push
out
adc
into
(bad)
retf
mov
imul
(bad)
jne
daa
and
pop
xchg
mov
dec
dec
in
xchg
cld
inc
inc
repnz
aas
not
sbb
sbb
(bad)
(bad)
(bad)
mov
xchg
dec
mov
adc
sbb
imul
cmp
retf
nop
(bad)
call
ss
mov
(bad)
std
cld
mov
mov
sub
(bad)
dec
mov
push
pop
mov
mov
push
cmps
jg
scas
icebp
xlat
push
icebp
call
xchg
push
xchg
jno
and
jge
adc
cwde
cld
jg
adc
(bad)
(bad)
jmp
(bad)
and
mov
or
repz
cmp
retf
das
sbb
mov
repnz
mov
pop
mov
outs
(bad)
stc
fisttp
mov
fisttp
pop
shl
mov
pop
fcom
xor
inc
(bad)
push
call
test
xor
iret
jmp
les
in
cld
inc
pop
sti
sbb
dec
outs
stos
(bad)
cmp
movs
ins
int3
maskmovq
div
sub
cmp
push
retf
and
or
das
sar
sub
xchg
cmp
dec
fs
fsubr
jo
(bad)
xchg
add
inc
inc
nop
outs
clc
scas
std
xchg
arpl
adc
jmp
push
mov
shr
repnz
pop
(bad)
es
push
cmp
or
retf
adc
daa
and
mov
push
dec
inc
sbb
std
xchg
dec
pop
(bad)
daa
mov
add
pushf
dec
cld
aas
cli
inc
sub
ror
retf
(bad)
push
sub
das
iret
idiv
pop
div
(bad)
cli
pop
cs
inc
jge
push
push
cld
daa
test
cld
jno
inc
std
test
or
jle
mov
out
mov
xchg
std
repnz
pop
into
repnz
sub
or
add
push
adc
aaa
xor
in
lar
test
ltr
call
inc
enter
xchg
push
mov
cmp
gs
mov
pop
cmp
pop
movs
std
xor
(bad)
lahf
(bad)
(bad)
(bad)
mov
stc
mov
jnp
jae
xor
outs
hlt
fcmove
mov
xchg
(bad)
idiv
jmp
push
dec
pop
add
adc
pusha
jnp
(bad)
loop
mov
ds
mov
(bad)
(bad)
(bad)
jmp
mov
jno
mov
arpl
iret
mov
mov
movs
scas
imul
mov
rcl
(bad)
(bad)
(bad)
push
(bad)
nop
jp
fsub
(bad)
push
jp
mov
mov
mov
mov
mov
sti
in
(bad)
push
cli
cmp
pop
inc
neg
fldenv
mov
cs
mov
xchg
jnp
(bad)
(bad)
(bad)
fisttp
mov
jg
jg
mov
mov
lea
adc
mov
arpl
and
add
xchg
and
inc
or
fwait
icebp
(bad)
lea
jmp
push
nop
or
ja
sbb
push
mov
sbb
popa
bndstx
xchg
nop
cmp
add
imul
loop
push
inc
in
jne
push
mov
sub
sub
add
push
lea
dec
mov
or
mov
pop
sbb
scas
xor
sub
xor
inc
xor
inc
xor
inc
inc
inc
xor
ss
jno
mov
loopne
xor
repnz
and
aaa
repnz
(bad)
add
inc
inc
and
inc
inc
in
xor
inc
pop
adc
sub
aaa
jnp
and
xor
mov
lods
xor
mov
inc
or
sbb
inc
jb
sar
inc
inc
mov
inc
inc
xor
adc
mov
push
ltr
add
inc
out
jle
(bad)
cmc
jmp
cdq
lods
mov
icebp
mov
dec
dec
(bad)
stos
dec
sub
add
jns
xchg
jp
add
fistp
fidiv
sbb
(bad)
out
arpl
das
(bad)
cmc
movs
sbb
(bad)
sti
(bad)
(bad)
(bad)
dec
mov
inc
arpl
test
push
into
mov
mov
mov
adc
pop
inc
and
fisttp
loopne
lock
lahf
into
mov
clc
hlt
(bad)
mov
and
test
sub
(bad)
lahf
hlt
aas
int
out
mov
(bad)
gs
(bad)
call
es
or
inc
sub
out
mov
mov
mov
idiv
jmp
and
scas
xor
data16
pop
mov
jg
idiv
jg
icebp
jle
ficomp
lahf
std
dec
repnz
mov
(bad)
(bad)
jae
(bad)
(bad)
(bad)
call
out
mov
scas
scas
std
dec
dec
dec
mov
cwde
inc
fcmovu
les
xchg
(bad)
(bad)
jmp
mov
loopne
out
mov
push
stos
cli
leave
xchg
sti
ficomp
clc
repnz
(bad)
call
imul
shl
(bad)
jmp
fsub
adc
cwde
repnz
out
push
out
jle
jg
xchg
icebp
xchg
mov
adc
xchg
sub
cmp
pop
pop
(bad)
fdivr
mov
aaa
stos
es
pop
pop
jmp
std
fcmovnu
lods
dec
push
(bad)
fs
js
clc
das
repz
and
cmp
js
lods
outs
(bad)
mov
ja
mov
cmc
cmp
in
aas
fisubr
inc
mov
mov
sti
cmp
mov
push
out
jecxz
mov
cmp
iret
nop
and
or
add
mov
xor
xor
mov
mov
or
(bad)
call
fstp
or
movs
mov
lods
cli
jecxz
(bad)
jmp
out
jmp
inc
(bad)
cwde
jmp
mov
fidiv
data16
jmp
jmp
(bad)
icebp
stos
data16
cli
scas
mov
aam
loopne
(bad)
push
push
jp
sar
sub
into
lods
rcl
pop
ret
(bad)
push
add
cld
aad
aad
xchg
mov
shl
sub
int3
int3
out
and
jg
ret
cli
push
xor
pop
jb
pop
std
dec
jecxz
cld
clc
das
xchg
out
shl
xchg
dec
and
das
adc
cmc
sub
mov
ror
in
xchg
jmp
ror
in
add
sub
inc
repnz
ins
add
jo
nop
mov
int3
(bad)
dec
cmp
add
push
arpl
outs
jae
das
fs
in
aas
pop
adc
push
sub
imul
push
dec
pop
push
xor
inc
xchg
dec
enter
nop
dec
enter
je
jb
add
imul
mov
imul
inc
dec
or
push
pusha
sub
xor
mov
mov
jg
jg
ss
xor
inc
aaa
cmp
inc
inc
xor
rol
ss
jo
xor
cmp
aam
inc
cmp
jmp
adc
push
cmp
push
nop
or
jecxz
cmp
xor
stos
sbb
sbb
xchg
add
jb
push
adc
loopne
cmp
sbb
and
repnz
add
add
call
inc
jmp
jmp
jge
xor
cmp
(bad)
(bad)
jle
inc
loop
stos
or
cmps
mov
mov
cmp
rcr
mov
mov
(bad)
(bad)
(bad)
inc
xchg
jl
out
lea
jmp
sbb
push
sbb
in
(bad)
(bad)
lock
pop
clc
stos
cld
cmp
xor
jb
inc
(bad)
push
sbb
cli
mov
(bad)
fcomip
pop
cmp
mov
popf
xor
pop
repz
(bad)
(bad)
mov
mov
cmp
fidiv
push
cmp
lds
pop
out
loopne
das
(bad)
(bad)
(bad)
(bad)
(bad)
scas
repnz
retf
fstp
mov
(bad)
jecxz
out
repz
mov
push
jae
and
(bad)
(bad)
(bad)
jmp
out
sub
xchg
push
repz
into
mov
(bad)
push
mov
pop
sbb
and
(bad)
(bad)
(bad)
jmp
mov
jae
dec
inc
mov
nop
jo
pop
out
aas
inc
and
out
js
dec
jae
icebp
(bad)
(bad)
call
(bad)
cmp
shl
and
inc
pop
jns
fdivr
loope
and
retf
sbb
nop
and
aaa
mov
mov
cmp
xor
inc
sub
test
call
xor
out
cmp
stos
mov
xlat
pop
div
sub
mov
lahf
mov
ficomp
(bad)
push
mov
jno
std
(bad)
aaa
outs
cli
ds
arpl
pushf
push
icebp
cmp
cmps
pop
sbb
cmp
das
mov
push
push
mov
dec
push
cli
jmp
push
jmp
pushf
jp
add
ins
data16
stos
imul
mov
(bad)
dec
lahf
adc
loopne
jecxz
or
das
dec
std
push
push
lahf
fld
dec
das
sar
mov
push
addr16
add
(bad)
push
arpl
push
mov
mov
dec
push
dec
ds
or
fsubr
arpl
ror
jg
push
bound
push
adc
sbb
sbb
or
outs
bound
dec
and
jnp
mov
ja
lds
pop
ja
mov
cmp
inc
xor
cmp
aas
push
jne
ja
inc
inc
xor
xor
xor
outs
inc
or
push
cmp
cmp
inc
jmp
and
add
(bad)
inc
push
call
je
cmp
fcmove
fnstenv
loop
sbb
mov
sub
xor
int
sti
bound
adc
(bad)
(bad)
(bad)
dec
xor
or
shl
jbe
jno
xchg
stos
scas
imul
mov
(bad)
(bad)
push
dec
gs
push
inc
xchg
mov
and
mov
sub
icebp
jle
xchg
aaa
jno
sub
cld
(bad)
pushf
jae
(bad)
mov
out
mov
and
add
cmp
lahf
call
popf
jmp
mov
cdq
cmps
imul
jge
int
outs
sbb
cmp
adc
and
inc
hlt
loop
mul
(bad)
(bad)
(bad)
mov
aaa
stos
in
in
cwde
fs
mov
jmp
lahf
lds
cmp
(bad)
jmp
loope
cld
mov
fisub
pop
(bad)
loopne
ss
pop
sub
js
sti
dec
inc
xchg
(bad)
and
enter
repz
(bad)
jg
jmp
jl
cmps
cmp
dec
push
or
pushf
dec
jne
(bad)
cwde
push
icebp
(bad)
mov
sbb
add
test
push
retf
sbb
sbb
cs
push
xor
xor
inc
test
retf
sub
(bad)
out
mov
mov
test
sar
sbb
(bad)
(bad)
(bad)
call
in
cli
inc
xor
jmp
scas
add
into
(bad)
pop
fnsave
mov
out
shl
cmp
(bad)
(bad)
stc
cmps
mov
fs
(bad)
sti
jmp
(bad)
inc
fstp
mov
pop
dec
ds
sbb
cmp
mov
lock
pop
pushfw
mov
aaa
jle
call
les
xchg
js
or
add
iret
lods
jmp
(bad)
jmp
jg
pusha
int
jnp
loope
or
(bad)
mov
cmp
mov
movs
mov
fsincos
mov
aas
xor
xor
xchg
push
cmp
xor
push
mov
repz
pop
xchg
or
js
mov
sbb
sbb
xor
std
adc
sbb
sbb
add
mov
sub
sbb
test
pop
sub
inc
adc
sub
xor
inc
cmp
xor
or
jl
inc
cmp
cmp
inc
inc
cmp
or
shr
inc
sbb
xor
add
jle
shr
(bad)
(bad)
(bad)
mov
pop
mov
and
arpl
call
icebp
jp
xor
mov
cmp
(bad)
(bad)
call
jns
cld
sub
inc
inc
add
outs
jg
mov
cld
jecxz
jg
inc
test
jmp
(bad)
jmp
test
js
jmp
and
cmp
xlat
pop
dec
repz
mov
cmps
(bad)
rol
(bad)
(bad)
jmp
clc
xchg
sti
(bad)
pop
movs
sti
fstp
inc
xor
in
pop
ror
cli
setns
mov
outs
mov
inc
ins
in
dec
in
mov
fst
push
fst
jmp
leave
outs
mov
mov
or
cmp
pop
or
(bad)
(bad)
(bad)
mov
mov
cld
sub
fnstsw
(bad)
shr
pop
(bad)
(bad)
(bad)
call
imul
jle
aas
imul
ret
or
push
and
sub
(bad)
jg
into
jg
das
out
movs
jo
cmp
mov
sbb
jno
sti
cld
push
jbe
fcos
shl
xlat
(bad)
(bad)
jmp
jecxz
test
int3
inc
lahf
icebp
and
lods
xor
das
jno
sbb
push
outs
push
(bad)
not
inc
push
push
jae
jb
inc
scas
cmp
or
inc
dec
outs
jp
ins
ins
popa
das
xor
xor
xor
cmp
dec
push
dec
inc
and
sub
sti
neg
or
and
xor
xor
xor
jle
ins
cs
call
dec
cs
daa
xor
xor
ss
das
pop
sub
xor
xor
sub
cmp
inc
clc
add
push
push
add
or
cmp
and
inc
arpl
in
loopne
gs
adc
sub
sub
sub
pop
in
sbb
jp
add
mov
cvtpd2dq
ret
dec
pop
and
push
fadd
jo
mov
das
js
lock
enter
xlat
and
fiadd
nop
fs
mov
imul
imul
push
sub
cmp
xor
dec
add
and
iret
xor
and
and
std
js
retf
into
rcl
(bad)
adc
cs
(bad)
repnz
stos
jp
mov
add
iret
sub
cmps
stc
xor
and
sahf
out
jl
les
das
nop
jmp
mov
xor
sahf
out
jl
xor
data16
jl
xor
test
cmps
jge
int
cmp
out
push
ror
add
scas
in
jnp
pushf
jl
mov
cmp
ss
ds
aas
mov
(bad)
aaa
push
out
sar
jp
jnp
shl
jl
jl
out
push
shr
jge
aad
jle
fwait
in
rcr
movs
and
js
jnp
out
ins
dec
mov
leave
mov
fnstcw
push
(bad)
nop
inc
xchg
jns
int
fidiv
or
repz
xchg
add
ins
lahf
out
shl
xchg
(bad)
cmp
ins
ss
dec
mov
inc
scas
inc
mov
mov
ds
ror
xchg
adc
fwait
in
pushf
cmp
mov
xor
jmp
xchg
mov
mov
lahf
cmp
out
xor
sti
push
mov
out
xor
mov
shl
iret
sar
jg
dec
ret
ins
ss
out
ret
jne
lds
(bad)
xor
iret
mov
ds
test
inc
repz
or
inc
int
cmps
mov
xchg
push
xchg
or
idiv
adc
jbe
push
imul
push
aad
cmps
fldcw
add
ja
imul
in
fstp
fdivr
fst
fild
jbe
mov
fwait
int
mov
jecxz
in
out
out
call
cwde
jmp
ss
int
in
aad
add
jl
dec
repz
popf
sbb
xchg
ret
hlt
lahf
data16
div
and
push
clc
rcr
stc
mov
cli
xchg
mov
add
xor
lods
add
jecxz
jns
shr
or
ds
cdq
or
test
and
stc
xor
mov
or
repz
adc
adc
sbb
sbb
fstp
pop
sbb
addr16
ds
pop
push
popf
and
and
lahf
out
mov
push
js
dec
and
push
and
ss
shr
es
imul
xor
int3
sub
imul
mov
pop
sub
imul
je
cmp
out
jl
mov
xor
push
imul
pop
aaa
retf
cmp
jg
dec
repz
cmp
inc
inc
inc
inc
jmp
dec
dec
dec
dec
dec
dec
jo
fiadd
push
in
add
xor
xor
ss
cmp
popa
(bad)
call
addr16
ins
outs
outs
jo
jb
je
jbe
pop
jns
loop
jns
frstor
inc
add
mov
sbb
mov
stos
cmp
jb
xor
cmp
iret
add
cld
jp
cs
sbb
jae
in
xor
shl
cs
ins
and
inc
ja
in
jle
xor
inc
sub
das
jo
add
sbb
ja
mov
jo
je
popa
arpl
je
and
or
es
(bad)
jmp
inc
addr16
jo
outs
dec
jae
jbe
ins
inc
push
cmp
dec
imul
push
into
dec
imul
dec
je
cmp
dec
ins
dec
push
in
jg
add
out
arpl
popa
ins
and
and
cmp
outs
dec
scas
mov
ds
dec
xchg
jne
jo
inc
dec
jbe
shr
dec
jno
dec
push
pop
jne
ins
imul
(bad)
stos
or
popa
dec
outs
dec
addr16
xor
es
gs
ins
cmp
or
push
outs
dec
gs
xor
xor
inc
inc
xor
xor
pop
int
pop
push
add
inc
sbb
and
and
popa
mov
aas
push
push
mov
out
cwde
cmp
push
popa
jae
cmp
loope
or
jo
inc
arpl
inc
fs
mov
jbe
es
push
jbe
outs
fs
in
sbb
cmp
cmp
add
jno
in
repnz
cs
mov
xor
ret
jmp
(bad)
ins
(bad)
loop
(bad)
(bad)
call
(bad)
xlat
pop
jmp
aam
aad
jg
mov
dec
jmp
pop
xchg
es
sbb
test
inc
cmps
pop
fnstsw
cmps
mov
jne
loope
jl
xchg
add
push
mov
xchg
mov
rol
inc
(bad)
(bad)
(bad)
(bad)
fidiv
popa
call
mov
cmp
mov
cs
adc
jge
or
(bad)
call
sar
mov
lds
push
sbb
(bad)
daa
jno
xchg
pop
outs
pop
add
leave
inc
add
mov
cmp
dec
push
bound
push
daa
add
icebp
mov
mov
adc
adc
adc
and
jl
cmp
or
inc
pop
pop
push
xor
inc
inc
cmp
inc
jno
push
push
add
ins
inc
aaa
and
push
xor
ror
push
inc
inc
inc
aaa
xor
inc
loop
cld
add
sub
jmp
stc
cdq
lods
es
push
xchg
jecxz
(bad)
(bad)
(bad)
push
mov
lods
mov
inc
lock
ins
icebp
addr16
jno
loope
clc
js
das
div
jp
jbe
add
push
icebp
(bad)
adc
retf
jle
mov
mov
adc
in
and
add
mov
pop
test
xchg
leave
sbb
pop
daa
cli
push
imul
push
sar
sub
rcl
add
(bad)
push
pop
fisubr
icebp
pop
fst
retf
and
cmc
mov
(bad)
jmp
js
lds
hlt
mov
js
pop
int
outs
or
aas
daa
jmp
test
xchg
aad
(bad)
outs
clc
gs
add
and
fist
push
or
in
int3
jbe
sub
jb
push
rcl
shl
ret
mov
xchg
mov
xchg
jg
enter
sub
or
cmp
xor
sub
in
jmp
sar
jmp
mov
mov
ins
hlt
ret
enter
ins
jle
int3
(bad)
(bad)
(bad)
mov
jne
outs
int3
jle
inc
sub
or
pop
and
outs
outs
sar
xlat
stos
sbb
daa
(bad)
(bad)
(bad)
jmp
imul
stos
mov
xor
pop
lahf
out
(bad)
fidivr
jb
push
arpl
(bad)
(bad)
dec
ins
jp
inc
cmps
fnstsw
out
movs
stc
out
pop
sbb
loopne
inc
cmp
lea
out
ret
mov
(bad)
call
and
cmp
loop
jb
mov
inc
pop
push
pop
js
mov
xlat
sbb
xchg
mov
pop
call
inc
push
pop
mov
and
bound
pop
sti
inc
enter
outs
bound
imul
pop
pop
out
test
sub
inc
inc
aaa
xor
dec
lods
jno
mov
inc
mov
inc
inc
inc
push
out
es
xor
mov
adc
push
xor
inc
adc
das
out
mov
(bad)
(bad)
(bad)
push
fldcw
scas
lds
xor
add
retf
cmp
sbb
(bad)
(bad)
inc
jl
jae
sti
fdivr
in
aaa
les
xor
(bad)
mov
movs
pop
jmp
(bad)
(bad)
(bad)
call
in
sub
jp
mov
gs
cmp
mov
dec
jno
push
and
mov
movs
std
imul
loope
push
das
cli
data16
pop
rol
sar
(bad)
out
es
call
popf
and
inc
dec
test
call
add
int3
jb
mov
sar
ds
mov
mov
xchg
mov
pusha
(bad)
(bad)
(bad)
jg
dec
push
jecxz
inc
repz
iret
sub
pop
dec
dec
push
mov
and
xor
repnz
sub
(bad)
(bad)
(bad)
in
pop
pop
imul
mov
xor
retf
sbb
sbb
js
jg
movs
iret
pop
scas
add
adc
push
lock
jp
jns
cmp
(bad)
in
in
fisub
in
fwait
cwde
arpl
inc
leave
cmps
or
cmp
aaa
aas
inc
add
jno
xlat
dec
mov
mov
fbstp
pop
mov
xor
xchg
out
out
push
lock
aas
fsubr
push
mov
shr
sbb
push
std
call
mov
xlat
mov
fstp
hlt
test
data16
pop
cmp
or
(bad)
(bad)
call
ds
popf
push
ins
jae
ds
fild
test
lods
xchg
xor
dec
jmp
xlat
mov
mov
out
mov
stos
sbb
lock
jb
sub
push
(bad)
xchg
sub
sub
idiv
loopne
pop
arpl
xor
mov
add
and
and
ffreep
fbld
dec
or
sub
out
sub
les
inc
adc
outs
bound
jecxz
jecxz
add
pop
adc
xor
xor
test
js
mov
inc
xor
xor
cmp
adc
xor
sbb
jno
push
adc
add
jmp
in
jne
pop
(bad)
(bad)
(bad)
inc
ficomp
mov
and
imul
xchg
int
out
aas
imul
push
sub
(bad)
(bad)
(bad)
(bad)
call
imul
add
dec
repz
xchg
cmps
(bad)
push
(bad)
jge
pop
inc
jae
pop
mov
push
add
(bad)
(bad)
dec
adc
neg
stc
mov
and
xchg
test
xor
cli
xchg
dec
sub
in
popf
dec
mov
add
pop
(bad)
and
jp
movs
fs
fmul
imul
loope
dec
sub
jl
jle
push
pop
mov
jg
out
fistp
mov
(bad)
cmp
scas
(bad)
(bad)
(bad)
push
outs
inc
(bad)
loope
arpl
dec
repz
push
xor
daa
int3
cmp
outs
imul
(bad)
cmp
mov
fcmovne
ds
inc
jae
inc
add
cmc
dec
stc
xchg
jbe
popf
dec
jno
xchg
push
pop
in
pop
jne
pop
jg
push
sahf
mov
(bad)
cld
adc
mov
out
inc
cs
xor
xor
mov
out
jp
push
leave
int3
ret
aas
inc
test
lock
jmp
lea
call
movq
add
lahf
mov
(bad)
(bad)
(bad)
push
call
ss
popf
gs
das
mov
adc
pop
add
jae
fbld
(bad)
call
bound
jnp
das
xchg
pop
stos
sbb
cmp
lahf
ror
and
shl
pop
(bad)
inc
push
xchg
pop
pop
and
dec
and
lods
outs
mov
add
xchg
push
add
and
add
sub
jns
pop
add
sub
inc
inc
lods
popa
sbb
dec
movs
sub
sub
fisubr
push
icebp
push
ffree
imul
aaa
xor
xor
cmp
imul
imul
loope
test
add
adc
shr
sub
cmp
cmp
xor
inc
xor
add
(bad)
(bad)
jg
jle
rep
mov
into
cmp
mov
lea
adc
mov
(bad)
(bad)
jmp
cld
fld
rcr
pushf
lods
jle
xchg
mov
enter
push
mov
sub
(bad)
(bad)
(bad)
(bad)
stc
mov
mov
adc
xor
repnz
ud0
in
pop
inc
shl
jge
inc
mov
sbb
in
xor
addr16
(bad)
lock
(bad)
retf
ds
sub
clc
xchg
(bad)
(bad)
push
cld
sub
nop
into
test
pusha
mov
jae
mov
ins
xor
sbb
mov
dec
mov
mov
pushf
stos
jno
pop
xchg
bound
dec
dec
jno
enter
adc
xor
xor
call
in
mov
(bad)
(bad)
cdq
xor
(bad)
fs
(bad)
(bad)
(bad)
call
cmp
ins
(bad)
fsubrp
fdivp
jg
cwde
cmc
cmp
popf
mov
jle
(bad)
(bad)
(bad)
call
imul
cli
xor
jmp
sub
stos
mov
pusha
and
mov
ins
cld
lds
pop
aaa
mov
movs
cmp
xor
(bad)
(bad)
out
outs
mov
ret
push
out
push
adc
stc
outs
inc
cwde
sti
ret
(bad)
jae
push
pop
fst
(bad)
iretw
aas
mov
loop
test
pop
aad
inc
push
adc
adc
or
loopne
mov
fild
adc
ins
enter
xor
xor
(bad)
xor
xor
xor
cmp
xor
xchg
test
mov
test
outs
add
inc
inc
xor
inc
xor
and
xor
cli
or
inc
adc
int
xchg
add
(bad)
dec
mov
cmp
adc
mov
xchg
jmp
xchg
(bad)
(bad)
(bad)
jmp
adc
(bad)
enter
cmps
dec
xchg
(bad)
(bad)
and
nop
fldcw
inc
call
(bad)
(bad)
inc
ins
out
cdq
test
and
mov
rcl
ret
not
xor
imul
aas
in
outs
clc
aaa
(bad)
mov
xchg
(bad)
pop
test
outs
(bad)
(bad)
jmp
mov
fsubp
popa
add
ret
cld
gs
daa
pop
and
pop
xchg
or
pushf
rcr
cdq
cmp
mov
pop
mov
rcl
fwait
(bad)
cwde
(bad)
and
dec
leave
jne
into
fcom
pop
(bad)
fwait
dec
imul
dec
mov
xor
mov
mov
xor
call
mov
stc
mov
pop
xchg
sbb
(bad)
(bad)
inc
imul
stc
int3
gs
movs
xchg
jnp
stos
ret
dec
mov
push
xchg
pusha
add
xchg
xchg
sbb
(bad)
mov
xchg
jg
ficomp
icebp
repnz
outs
mov
push
lahf
pop
int
mov
lods
lods
test
stos
pop
cmc
pop
popa
test
(bad)
hlt
ret
mov
mov
push
sub
and
push
not
ds
data16
aas
ja
sub
lods
jg
rol
mov
mov
aaa
icebp
xchg
adc
and
adc
jns
inc
adc
add
and
nop
das
add
or
xor
sbb
push
pop
add
inc
xor
repnz
adc
inc
inc
xor
cmp
inc
and
(bad)
call
sub
dec
mov
fidivr
xor
imul
xor
(bad)
(bad)
dec
js
inc
and
add
lahf
fxch
xor
jl
bound
mov
mov
sub
xchg
ins
sbb
les
stos
xchg
cmp
loop
push
nop
jl
push
mov
mov
dec
cmp
repnz
icebp
and
cld
cld
mov
div
jbe
jmp
(bad)
(bad)
jg
mov
cmps
test
fscale
outs
inc
add
inc
add
xchg
(bad)
in
icebp
clc
mov
adc
and
sahf
jl
and
cmp
not
out
jge
mov
out
call
out
and
mov
and
inc
pop
cld
ss
dec
dec
lsl
scas
aas
fistp
imul
xor
cmp
repnz
ret
push
or
pop
push
sub
(bad)
(bad)
(bad)
dec
div
fwait
pop
fsubr
xchg
pop
daa
push
test
lods
jge
mov
ret
(bad)
(bad)
(bad)
(bad)
call
sub
into
mov
test
xchg
mov
mov
dec
jmp
(bad)
(bad)
call
jns
fs
and
sbb
scas
out
outs
sbb
sti
call
lds
or
sbb
lods
jmp
and
(bad)
inc
sub
loopne
imul
(bad)
cmps
or
movs
xchg
jb
test
mov
and
dec
and
in
push
leave
call
js
lods
or
jae
push
add
dec
lods
add
xchg
add
push
add
pop
pop
dec
push
cmp
xor
xor
xor
inc
inc
xor
inc
or
inc
xor
add
out
inc
shr
xor
sahf
inc
ss
add
xor
and
or
inc
inc
test
xor
inc
inc
inc
inc
jmp
fstp
es
push
xchg
jmp
inc
loop
arpl
cmp
dec
fcom
mov
fwait
adc
pop
stos
inc
aam
sbb
pop
or
gs
push
mov
sbb
cmp
aas
retf
repz
pop
pushf
sbb
ins
and
das
stc
inc
imul
(bad)
push
(bad)
dec
ins
sub
adc
clc
jns
pop
sbb
loop
arpl
sbb
sahf
add
in
and
push
inc
xor
cmp
cs
cdq
inc
in
ds
(bad)
(bad)
call
cmps
mov
jmp
ffree
popa
jb
mov
xor
push
mov
sbb
lahf
retf
call
(bad)
(bad)
(bad)
inc
adc
mov
sbb
mov
mov
mov
movs
in
cmp
mov
(bad)
(bad)
(bad)
(bad)
mov
push
xor
adc
stos
sub
xor
pushf
mov
retf
into
adc
(bad)
inc
jmp
clc
mov
sbb
fst
sti
cs
cmps
data16
lahf
jno
push
fsubr
inc
push
add
cmp
ss
push
pop
or
dec
push
sbb
mov
ins
fcos
mov
jbe
pop
jmp
sbb
sar
dec
iret
enter
popf
(bad)
(bad)
(bad)
call
lods
outs
dec
sub
jbe
repz
jae
stos
test
lods
mov
pop
test
fwait
aaa
fld
mov
push
dec
pop
and
mov
xchg
(bad)
xor
push
mov
(bad)
(bad)
inc
mov
or
xchg
int
cmc
pop
daa
sub
mov
xchg
and
jl
(bad)
(bad)
cmp
iret
stc
jg
cli
mov
ja
addr16
out
dec
pop
jb
mov
mov
leave
add
lds
pop
fadd
pop
add
jle
shr
mov
xor
dec
xchg
sub
inc
mov
dec
test
imul
jne
imul
pop
pop
arpl
xor
mov
add
xor
xlat
push
push
sub
cmp
ss
push
xor
inc
cmp
inc
adc
xchg
stc
mov
lahf
dec
shl
in
pop
dec
dec
int
jmp
jg
cmc
popa
jae
pop
xor
fdivr
ja
cdq
stc
jge
(bad)
(bad)
push
cmp
jo
push
(bad)
adc
(bad)
(bad)
(bad)
fstp
iret
xor
mov
fldenv
cmp
scas
jmp
je
loop
inc
cwde
in
outs
(bad)
(bad)
(bad)
jmp
pop
addr16
mov
sub
sub
sahf
jl
dec
jae
mov
fs
std
(bad)
sbb
(bad)
hlt
movs
pop
jmp
(bad)
shl
pop
stc
push
into
mov
cli
jbe
(bad)
(bad)
(bad)
mov
push
push
leave
jo
sbb
add
or
dec
test
imul
inc
mov
push
cmp
jecxz
aas
(bad)
(bad)
(bad)
(bad)
jmp
push
repz
lods
fisubr
popa
jnp
mov
pop
xlat
(bad)
jmp
in
lods
sbb
(bad)
sbb
(bad)
(bad)
call
and
gs
out
in
or
inc
pop
pop
push
inc
ret
sti
mov
(bad)
iret
out
mul
in
or
and
add
cmp
lmsw
leave
xor
fnstenv
jmp
push
hlt
mov
lds
cmps
jge
les
jecxz
xchg
(bad)
(bad)
(bad)
call
shl
outs
push
pop
adc
(bad)
sbb
scas
mov
mov
fcmove
enter
mov
stc
dec
dec
stos
cli
fistp
(bad)
(bad)
mov
push
push
imul
imul
pop
out
mov
xlat
cmp
enter
sub
jne
(bad)
(bad)
push
cld
mov
(bad)
fistp
inc
xor
jecxz
aad
paddw
das
ficom
cmps
push
clc
add
jg
push
pop
fwait
in
test
movs
lods
mov
adc
scas
dec
push
add
cs
adc
add
dec
adc
sbb
cmc
sub
add
aaa
add
add
cmp
leave
adc
xor
push
add
add
sar
aaa
add
inc
call
or
pop
in
adc
push
out
cmp
cmp
and
push
adc
push
push
and
jmp
sub
mov
inc
sbb
sbb
dec
sbb
sbb
(bad)
(bad)
jmp
fcmovnb
and
jnp
in
ja
(bad)
pop
loop
retf
mov
pop
(bad)
(bad)
(bad)
(bad)
jmp
and
cmps
xchg
ss
int
in
xchg
(bad)
sub
(bad)
pop
test
add
(bad)
(bad)
push
xor
dec
xor
sbb
loop
out
stc
outs
xchg
out
ins
fnstcw
mov
mov
xor
jmp
inc
pop
push
mov
retf
adc
ror
(bad)
iret
dec
jno
popa
dec
dec
cld
cld
das
dec
fstp
dec
icebp
inc
clc
jg
loop
(bad)
(bad)
(bad)
call
sti
into
fidiv
or
ret
imul
les
pop
popf
adc
or
inc
in
mov
in
(bad)
dec
xchg
shl
in
mov
shr
addr16
ds
pop
stos
push
loop
dec
pop
jg
test
or
adc
push
imul
cmp
(bad)
inc
pop
cmc
xchg
test
dec
lods
adc
pushf
sbb
dec
ins
outs
hlt
mov
(bad)
(bad)
call
cdq
aam
out
cmps
lods
fistp
cmps
sub
arpl
ss
mov
mov
(bad)
dec
pop
repnz
(bad)
cmp
leave
movs
adc
jbe
mov
stc
(bad)
in
jle
test
pop
sbb
loopne
call
outs
aas
dec
mov
inc
or
pop
ins
xchg
aas
into
sub
std
ja
(bad)
call
and
addr16
pop
jmp
or
loope
jmp
loop
(bad)
movs
xchg
in
leave
cmp
leave
and
mov
aas
jns
jb
push
mov
add
bound
add
add
push
pop
ja
add
imul
push
mov
fwait
js
pop
mov
and
and
xor
test
mov
dec
jno
add
push
sahf
xor
inc
add
mov
and
es
inc
ss
es
aaa
inc
mov
(bad)
aas
sub
(bad)
gs
out
ins
loop
test
cmps
lods
(bad)
cmc
(bad)
(bad)
(bad)
inc
stos
dec
mov
rcl
arpl
daa
movs
xchg
mov
(bad)
(bad)
inc
mov
pmuludq
movs
fcompp
pop
jmp
sti
stos
cmp
pop
(bad)
(bad)
(bad)
call
and
fsubr
cdq
icebp
pushf
mov
das
loop
xor
icebp
test
jp
(bad)
(bad)
jmp
cld
pop
shl
mov
into
je
call
jmp
pop
int
fucomp
lods
test
(bad)
jmp
add
rcl
mov
(bad)
mov
add
jmp
jp
hlt
mov
(bad)
(bad)
(bad)
call
and
cwde
in
mov
ret
std
outs
loope
push
stos
inc
sbb
mov
ds
mov
pop
(bad)
(bad)
(bad)
push
div
loope
push
(bad)
mov
loope
stos
mov
mov
xchg
inc
push
das
push
jbe
xchg
(bad)
(bad)
call
sbb
test
(bad)
cli
and
dec
div
outs
sub
add
lea
scas
lahf
sub
xor
inc
call
sub
mov
xchg
xor
mov
test
inc
xchg
push
pop
ficomp
xor
call
jb
push
pop
inc
enter
addr16
outs
(bad)
(bad)
call
mov
or
pop
repnz
outs
dec
dec
xor
add
(bad)
(bad)
call
xor
retf
lods
lods
scas
fdivr
(bad)
outs
fisubr
scas
and
mov
shr
cmps
mov
retf
mov
mov
es
test
outs
mov
icebp
dec
push
and
(bad)
(bad)
jg
inc
and
jl
stc
daa
pop
aas
in
mov
cmps
jg
into
dec
push
fwait
cmp
in
xchg
cmp
sub
(bad)
pop
push
and
add
sub
and
mov
sbb
and
inc
add
aaa
xor
mov
push
xchg
(bad)
pop
xchg
inc
xor
push
test
xor
cmp
cmp
or
pop
jo
cmp
out
inc
xor
cmp
add
inc
xchg
sbb
pop
inc
push
sbb
inc
cs
inc
inc
mov
inc
int
dec
movs
jmp
(bad)
(bad)
dec
cmp
mov
jb
xor
aas
int3
ja
fdiv
add
push
cmp
(bad)
(bad)
(bad)
jg
mov
xor
xchg
(bad)
jns
aad
pop
push
sub
icebp
cmp
movs
enter
sub
mov
rol
push
jg
sub
jmp
lods
lods
mov
gs
(bad)
(bad)
(bad)
inc
mov
pushf
mov
clc
pushf
ins
call
push
dec
pop
iret
adc
pop
mov
mov
jmp
(bad)
call
push
xchg
movs
fucomi
xchg
imul
test
(bad)
cmp
jmp
mov
xor
xor
test
xlat
test
inc
add
(bad)
(bad)
gs
pop
cmp
bound
sub
mov
je
imul
outs
dec
inc
xor
dec
lds
push
lahf
shl
aad
mov
(bad)
adc
out
lods
xchg
stos
aad
xchg
cmovp
or
mov
mov
inc
leave
cmps
or
cmp
xor
inc
add
test
js
hlt
scas
(bad)
(bad)
(bad)
fimul
mov
call
retf
out
jbe
cmp
sub
(bad)
dec
add
cdq
cmp
xchg
mov
call
ja
inc
stos
sbb
xlat
(bad)
(bad)
(bad)
jl
test
xor
push
pop
pop
aaa
push
retf
sub
in
cld
out
ss
cwde
xchg
xchg
je
(bad)
(bad)
jg
mov
(bad)
fwait
jnp
out
int
sti
cmp
pop
addr16
push
add
cmc
jge
add
dec
test
popa
xchg
inc
or
or
jns
inc
cli
pop
scas
bnd
sahf
sbb
cld
cli
adc
lods
mov
dec
inc
nop
das
add
sub
shl
sbb
inc
xchg
add
adc
sbb
stos
and
mov
cmp
js
nop
das
cmp
xor
inc
adc
jecxz
add
jb
ss
mov
xor
aaa
inc
cmp
xor
xor
inc
or
and
ror
(bad)
(bad)
(bad)
jg
jbe
loopne
aad
lahf
dec
mov
(bad)
pop
sub
and
(bad)
fidivr
mov
(bad)
jmp
xor
mov
xor
pop
rol
in
ins
cli
dec
(bad)
ds
jle
cmp
fimul
iret
or
dec
jno
pop
loop
sbb
in
sbb
cmc
dec
xchg
loope
jmp
push
les
fcompp
call
jmp
je
cmp
sbb
fild
pop
jmp
sahf
mov
ds
mov
dec
adc
shl
push
sub
or
out
jle
(bad)
jno
(bad)
mov
dec
vunpcklpd
(bad)
imul
or
pop
repnz
dec
in
dec
and
jg
call
and
dec
and
mov
loop
outs
mov
jg
cmp
jg
(bad)
cmp
iret
add
idiv
sahf
sbb
arpl
cmp
jge
(bad)
neg
loopne
push
(bad)
dec
xor
in
daa
cmc
add
xor
xor
xor
in
icebp
cmp
jbe
xor
gs
push
(bad)
(bad)
(bad)
(bad)
jnp
pop
and
mov
daa
push
leave
push
ss
mov
in
jae
pop
stc
pop
xchg
sub
movs
(bad)
mov
dec
xor
jmp
int
dec
dec
(bad)
retf
leave
mov
xchg
sbb
mov
outs
jnp
push
dec
dec
ss
dec
push
test
call
and
inc
neg
inc
and
cs
(bad)
je
dec
and
mov
mov
inc
aaa
xlat
adc
cmp
xchg
nop
mov
mov
adc
cdq
(bad)
pop
sbb
sub
inc
jno
outs
(bad)
push
fld
es
cld
aas
mov
cmp
inc
cmp
inc
bound
test
mov
test
jg
cmp
or
cmp
pushf
inc
adc
or
call
add
push
sbb
xchg
mov
push
sahf
xor
inc
mov
cld
(bad)
(bad)
dec
retf
lods
mov
leave
sbb
sbb
jae
lahf
outs
fs
or
in
sbb
jg
sub
hlt
pop
leave
js
xor
sub
(bad)
mov
(bad)
call
sti
(bad)
xlat
dec
repz
js
pop
mov
cmps
rol
cld
jmp
cmps
pop
push
xor
arpl
adc
xchg
and
or
(bad)
call
xchg
ds
jg
test
mov
pop
mov
push
sar
nop
sbb
out
inc
lea
xor
fdivr
inc
enter
(bad)
(bad)
(bad)
jg
pushf
cmps
jle
leave
movs
and
mov
loope
repz
mov
pop
jb
out
jg
(bad)
(bad)
dec
(bad)
(bad)
xor
std
aaa
push
aam
loopne
mov
and
xor
xor
(bad)
(bad)
cld
mov
jl
sahf
dec
pushf
jno
js
inc
daa
stos
(bad)
push
dec
jg
pop
push
loop
mov
jecxz
or
not
jecxz
inc
popf
jnp
mov
sub
cmp
push
sbb
xor
xchg
retf
inc
icebp
repnz
fwait
int
jge
pop
sbb
mov
pop
jg
fsubr
fstp
fidiv
mov
or
pop
iret
rcl
das
push
scas
cmps
jecxz
xor
push
imul
cmc
dec
push
(bad)
dec
repz
arpl
nop
pop
sbb
dec
or
(bad)
cli
(bad)
(bad)
push
mov
push
pop
xor
or
mov
idiv
push
std
pusha
test
lock
mov
jecxz
movs
loopne
mov
hlt
iret
adc
leave
sub
addr16
fdivr
xlat
jae
aaa
out
inc
adc
sbb
or
xchg
sbb
xor
or
xor
or
or
mov
or
xor
xor
dec
ins
add
aaa
jo
mov
push
sbb
sahf
inc
inc
xor
inc
add
(bad)
in
adc
xor
adc
or
cmp
mov
(bad)
dec
and
fidiv
cs
ds
in
or
aad
jecxz
(bad)
dec
ret
jecxz
es
pop
xchg
scas
in
call
ret
sbb
mov
push
(bad)
call
dec
nop
pop
adc
inc
pop
cmps
data16
jmp
es
(bad)
(bad)
(bad)
cmp
iret
push
mov
xchg
outs
dec
dec
out
ins
fst
sub
in
jecxz
in
dec
mov
jmp
(bad)
pop
daa
shr
dec
adc
jg
ret
call
loop
(bad)
enter
or
xor
fild
ficom
into
movs
rcl
(bad)
push
push
push
sar
pop
xchg
mov
inc
and
cmp
jbe
call
int3
jne
je
(bad)
(bad)
jmp
fcomip
mov
or
call
sub
xor
loop
sbb
stos
fistp
ja
inc
(bad)
(bad)
(bad)
call
mov
fs
sub
adc
xor
mov
iret
and
cmp
cmp
mov
xchg
aad
sub
out
mov
add
sub
cld
pop
hlt
out
xor
push
leave
(bad)
xchg
fsubr
sbb
jno
outs
add
sub
push
xor
xor
into
fild
sub
dec
xor
(bad)
(bad)
(bad)
dec
mov
loop
gs
mov
cmp
sahf
lods
push
gs
mov
repz
sub
mov
(bad)
inc
hlt
or
cwde
aaa
push
shl
repz
jle
cli
imul
mov
xchg
(bad)
(bad)
jmp
sub
fistp
test
shr
jge
rol
rcl
imul
jle
cmp
cmp
dec
cld
(bad)
inc
cmc
pop
lock
fwait
loop
ds
pop
add
adc
inc
and
jecxz
cmps
inc
lahf
inc
push
or
mov
and
xchg
stos
test
or
xchg
mov
mov
sub
adc
sti
fisubr
push
icebp
push
ffree
sti
pop
xchg
inc
adc
sti
inc
xor
add
test
les
aaa
add
adc
lock
inc
aaa
inc
xor
scas
add
and
add
aam
xor
mov
sub
(bad)
(bad)
push
das
fidivr
dec
aaa
fcmovb
inc
adc
inc
xchg
mov
mov
daa
popf
jae
fwait
mov
jno
(bad)
(bad)
inc
xchg
es
cmp
out
lock
adc
repnz
mov
(bad)
(bad)
dec
push
fcmovnbe
or
sar
fistp
test
cmp
jl
xchg
mov
mov
std
sbb
or
(bad)
and
adc
jmp
sar
fcomp
shr
in
mov
outs
adc
cmp
(bad)
(bad)
jmp
push
lea
inc
dec
pop
outs
xor
dec
fxch
pop
mov
pop
adc
(bad)
or
lahf
hlt
fdivrp
(bad)
(bad)
(bad)
mov
jnp
(bad)
or
push
daa
sbb
jg
dec
mov
fcmovnu
cwde
push
sbb
(bad)
(bad)
(bad)
cmp
add
adc
sbb
lahf
clc
jl
jecxz
jne
adc
out
rcr
stc
daa
xchg
outs
(bad)
call
sti
scas
repz
leave
int3
pusha
push
push
xchg
push
ficomp
icebp
out
pop
jecxz
idiv
sbb
push
mov
lds
sub
mov
fdivr
jb
push
adc
mov
jae
iret
mov
jo
push
shr
gs
and
push
xor
add
add
jg
inc
je
inc
js
add
fwait
mov
wbinvd
inc
adc
xor
jge
iret
fbstp
inc
sub
pop
add
dec
and
add
(bad)
cdq
ins
mov
dec
add
cs
not
lods
into
ins
arpl
xor
arpl
(bad)
jb
cs
jb
dec
pop
outs
adc
add
push
dec
inc
dec
inc
sbb
fild
arpl
add
and
jmp
or
inc
pop
and
outs
outs
arpl
in
push
in
js
sub
scas
je
jb
or
outs
and
ins
jae
daa
cmp
shl
and
or
sub
cmp
fs
sbb
fild
and
outs
mov
mov
sub
div
inc
pop
outs
pop
packssdw
push
outs
dec
imul
sahf
imul
pop
xor
cmp
xor
mov
(bad)
jge
mov
dec
outs
(bad)
nop
stos
adc
mov
jns
adc
ins
ins
adc
mov
in
xor
cmp
jo
popa
(bad)
mov
and
fs
and
xor
dec
sbb
das
ret
cmp
and
and
mov
imul
imul
je
addr16
inc
jne
out
jge
jns
dec
test
and
pop
xor
les
mov
xor
ins
mov
mov
add
inc
push
jae
mov
test
mul
sub
xlat
mov
xchg
sub
add
or
ret
push
imul
jae
arpl
sbb
jno
sbb
adc
and
outs
ins
pop
or
scas
repnz
outs
and
mov
and
cmp
loopne
imul
jb
inc
inc
mov
fsubp
jo
dec
enter
fs
fimul
xor
mov
cwde
sbb
je
das
je
cmp
icebp
ds
xor
pusha
sub
pop
and
leave
stc
adc
push
xor
jecxz
dec
xor
test
pop
and
pop
xchg
push
in
jb
or
xchg
aad
aad
and
pop
inc
push
xor
jno
repnz
bound
pop
aad
lods
(bad)
loopne
ja
stos
jmp
cmp
push
pop
jne
mov
adc
xor
mov
pop
pop
mov
sub
add
and
xchg
mov
imul
mov
pop
in
pop
xor
pop
das
aaa
sbb
test
adc
fiadd
add
adc
cmp
sub
jl
xchg
add
mov
sbb
in
sbb
sub
out
pusha
add
sbb
fs
inc
xchg
addr16
and
mov
adc
xor
dec
jbe
add
pop
mov
add
arpl
cwde
xchg
or
out
sub
push
lods
sub
dec
mov
push
xchg
idiv
sbb
lods
xchg
xchg
out
push
sbb
lods
lods
inc
fstp
repz
ret
adc
out
arpl
adc
stos
imul
enter
bound
test
sbb
jno
adc
imul
pop
or
imul
fsubr
je
adc
fs
adc
xor
js
and
sbb
fidiv
dec
pop
or
pop
mov
retf
popa
pop
xor
pop
neg
mov
and
rcl
addr16
mov
adc
add
popa
das
fist
dec
sbb
sbb
push
adc
inc
mov
mov
and
jo
loop
sbb
das
arpl
shl
sub
sub
cwde
div
or
sub
adc
xor
sub
push
daa
push
int
adc
jae
enter
addr16
or
mov
inc
pop
xchg
push
stos
retf
je
repz
add
into
mov
add
add
ret
sub
inc
arpl
outs
sbb
call
add
add
cwde
ins
stos
cmp
repz
sub
dec
bound
int
stc
outs
js
jo
test
jns
out
pop
push
pop
jb
movs
scas
lahf
out
sahf
rcl
lock
add
fldcw
jbe
jns
or
call
adc
iret
stos
push
test
test
xor
data16
xchg
ins
ss
out
mov
mov
data16
call
xchg
add
repz
xchg
dec
lea
adc
pop
scas
cwde
sbb
into
dec
repz
mov
lahf
js
dec
repz
mov
ins
mov
mul
push
mov
cmp
jl
mov
push
out
fld
sub
sar
mov
cmp
fnstcw
iret
arpl
pop
push
mov
iret
data16
push
inc
shl
rol
mov
push
mov
call
retf
outs
lock
repz
rcl
push
call
call
stos
iret
sar
(bad)
sub
push
jl
lahf
out
cmp
cli
pop
loop
xchg
sar
mov
imul
ins
ss
int
jmp
movs
hlt
ins
ss
add
add
sbb
call
sahf
or
mov
push
or
mov
inc
popa
ds
and
and
and
xor
inc
imul
ss
out
icebp
push
es
sub
push
popa
mov
(bad)
ds
push
jl
in
sub
cs
xor
lahf
test
pop
jne
jp
inc
add
mov
inc
add
inc
cmp
mov
cmp
cmp
jg
out
repz
aad
dec
xchg
fnstenv
push
dec
call
dec
(bad)
sbb
cmp
repz
or
mov
repz
(bad)
adc
push
shl
(bad)
sub
mov
cmp
push
jl
ins
jae
push
ficom
push
mov
push
lods
arpl
inc
dec
xchg
mov
dec
fistp
push
stos
adc
sar
sbb
in
sbb
repz
popa
xchg
ficomp
popa
dec
popf
mov
bound
imul
shl
fs
ds
gs
imul
data16
xor
jne
jbe
add
imul
jp
xchg
xchg
dec
jle
jl
int
push
xor
pop
test
mov
aas
(bad)
fadd
cmps
jnp
cmp
inc
mov
inc
inc
inc
sub
imul
xchg
inc
xor
add
xor
xor
inc
jge
in
xor
inc
sysexit
cmp
xor
inc
inc
pop
inc
push
sti
and
and
mov
dec
mov
and
push
sub
inc
enter
pushf
xor
nop
das
xchg
mov
mov
iret
push
push
mov
in
mov
mov
jl
dec
mov
mov
pop
mov
or
out
xor
out
(bad)
mov
xchg
dec
repz
push
pop
xchg
retf
fnstcw
fisubr
sbb
retf
into
enter
xchg
push
cdq
adc
add
lock
or
in
leave
inc
gs
jo
daa
arpl
add
sbb
jp
jle
or
cmps
imul
mov
sbb
ss
shr
sub
popf
test
int
call
mov
int
in
(bad)
mov
mov
push
movs
lock
sahf
call
cmps
stc
mov
data16
dec
stos
push
lods
mov
int
pop
push
add
dec
mov
ins
mov
mov
mov
mov
ja
dec
int3
cwde
mov
imul
cmp
bound
popa
sub
sub
push
xor
pop
xor
std
dec
(bad)
push
inc
jne
jns
dec
push
inc
xchg
rol
sub
or
dec
xor
int
jnp
inc
jns
mov
xor
js
pop
ins
adc
ret
xchg
outs
add
pop
xor
gs
inc
and
stos
mov
outs
push
and
dec
sub
and
add
loopne
cli
in
jg
inc
push
call
rcr
outs
add
mov
(bad)
test
cdq
and
inc
mov
xlat
fld
push
jns
inc
fsub
push
add
mov
xor
fmul
loopne
sub
rcr
call
cmp
jbe
fcomp
inc
push
and
add
inc
inc
push
inc
push
lahf
jnp
pop
fwait
and
ins
jae
cmp
fwait
add
cmc
stc
push
push
nop
std
aaa
sub
imul
or
inc
sbb
call
idiv
and
(bad)
jb
add
and
mov
mov
sbb
push
xor
imul
jae
dec
cmp
inc
inc
mov
stos
adc
jbe
mov
fldenv
inc
sbb
add
(bad)
dec
jo
jg
push
mov
in
ins
and
scas
inc
and
inc
div
bound
jae
push
or
sahf
and
popa
imul
iret
test
and
inc
adc
mov
imul
inc
xchg
jle
ins
pop
dec
sbb
pop
jo
pop
inc
sbb
imul
mov
aam
movs
dec
lods
pop
mov
jmp
jae
or
and
push
or
sbb
xor
fdivr
ins
inc
add
pop
mov
retf
sahf
jbe
sbb
add
mov
ret
repz
outs
imul
or
dec
sbb
dec
aaa
fmul
sub
xor
dec
dec
gs
adc
jo
mov
inc
inc
or
dec
cmp
add
inc
lods
loop
pusha
jbe
gs
xor
pop
mov
cmc
loopne
xor
xchg
test
fmul
xor
adc
cmp
movs
xchg
sub
or
rol
nop
jecxz
pop
cmp
mov
inc
out
jne
mov
mov
jp
cmp
loope
push
jb
outs
jae
sbb
sbb
sar
and
cmp
pop
gs
cdq
retf
add
push
sub
ret
fiadd
inc
into
test
or
jp
xor
pop
push
dec
xchg
sub
xor
xchg
xchg
mov
ins
mov
jge
or
ins
jae
sub
cmps
arpl
imul
add
adc
mov
inc
mov
xor
xchg
jmp
sub
scas
loopne
cmp
inc
fsubr
fwait
push
push
aas
jo
inc
das
dec
outs
aam
inc
js
ror
and
mov
loop
in
cmp
jl
ins
inc
pusha
mov
bound
jo
mov
fs
inc
sbb
lds
fadd
int3
ss
mov
popa
sbb
push
pop
lds
(bad)
out
in
sbb
add
dec
aaa
jbe
push
ins
xor
sbb
dec
pop
popa
jbe
xor
add
cdq
cwde
lea
icebp
mov
dec
sbb
dec
jb
adc
add
add
inc
push
fs
or
or
pop
dec
imul
fucomp
sahf
dec
stos
out
aas
daa
bound
ja
adc
arpl
pop
imul
xor
sub
popa
mov
cmp
jg
daa
popa
xor
or
loop
ds
pop
mov
xchg
sub
inc
ins
or
add
or
bound
imul
sbb
xor
nop
iret
jae
mov
jo
cdq
aas
push
imul
adc
jbe
ret
sahf
jns
mov
das
pushf
push
repnz
daa
push
test
push
dec
jno
cmp
cmps
cmp
and
outs
sbb
push
xor
push
push
lods
cmps
mov
outs
push
outs
xor
jne
xor
push
(bad)
pusha
or
call
dec
inc
dec
push
dec
inc
push
aaa
jl
dec
xor
jbe
add
jnp
cdq
fist
xor
mov
test
or
adc
fimul
imul
call
xor
sub
(bad)
and
data16
pusha
sbb
jbe
mov
mov
fdiv
es
aaa
push
sahf
push
cld
xor
dec
inc
jb
jae
icebp
adc
fidiv
popa
inc
sub
imul
sti
gs
jecxz
push
outs
aad
sahf
inc
ins
fs
or
sub
ja
fcom
lods
mov
dec
xor
lea
add
add
mov
mov
mov
mov
adc
mov
cmp
ret
cmp
sbb
mov
and
push
mov
mov
ret
inc
dec
add
outs
addr16
mov
pop
jl
div
pop
cmps
fisubr
xchg
pop
sub
mov
jne
test
pop
int
xor
mov
movs
mov
push
fs
ja
dec
or
fcmovb
xor
add
test
shr
jnp
pop
mov
add
dec
lea
push
call
inc
aas
scas
jb
push
fild
inc
jo
pop
pop
pop
add
lock
push
outs
bound
aad
(bad)
mov
imul
cwde
push
pop
int
add
and
sbb
mov
movs
cmp
arpl
xor
sub
inc
gs
pop
sbb
ins
jae
inc
std
push
mov
jae
call
adc
sub
push
not
xor
int
popa
dec
jns
ficomp
inc
mov
sbb
jbe
test
sbb
xor
xor
daa
ss
out
stos
sbb
push
and
cdq
mov
or
cmps
jbe
and
ins
inc
push
pop
inc
adc
pop
shr
mov
ins
mov
mov
test
add
or
add
and
lods
test
stos
adc
jne
pop
popa
arpl
inc
push
push
dec
addps
push
jb
sub
push
in
aaa
jb
daa
sar
jmp
push
mov
inc
xor
fadd
sub
aad
push
lods
sub
scas
pop
jae
adc
loopne
dec
retf
movs
xchg
out
test
ficomp
dec
dec
cmp
ins
jae
cmp
jns
jb
fsubr
dec
cdq
aad
mov
jae
popf
test
dec
add
push
pop
mov
jbe
daa
das
pop
mov
mov
pop
and
outs
mov
and
fisub
and
and
pop
pop
push
and
add
jae
push
call
gs
jae
inc
push
fild
adc
dec
daa
mov
and
push
jmp
or
pop
daa
add
inc
les
scas
push
test
jb
dec
daa
dec
and
lds
in
fs
(bad)
sbb
add
dec
inc
and
push
add
push
cmp
pop
icebp
inc
dec
inc
push
pop
rol
fsubr
inc
mov
(bad)
rol
ins
ds
inc
jnp
lds
fs
jo
dec
inc
sbb
add
(bad)
nop
imul
adc
jl
addr16
xor
sbb
adc
arpl
lock
or
mov
fsubr
mov
aad
lods
pop
mov
jmp
fdiv
mov
outs
inc
pop
dec
js
scas
push
jb
in
pop
dec
mov
std
adc
(bad)
arpl
jmp
in
adc
or
or
cmp
sahf
pop
in
xchg
shr
xor
outs
addr16
test
pop
xchg
js
dec
and
push
pop
or
ror
cmc
jbe
std
nop
lods
cmp
push
arpl
add
clc
clc
outs
push
outs
inc
pop
jbe
mov
stos
je
mov
jo
ins
daa
pusha
sub
or
test
and
push
xor
mov
sub
sbb
inc
loopne
mov
stos
sub
sbb
sti
inc
arpl
aas
adc
cmp
lds
push
addr16
loope
add
pushf
jg
int
mov
bound
pop
das
or
(bad)
sar
push
and
and
sbb
sbb
fcom
xor
pop
jmp
loop
test
js
rol
and
in
rcl
outs
sbb
stos
add
lock
loopne
mov
jne
pavgb
popf
mov
inc
adc
mov
popf
dec
mov
dec
mov
jb
jp
aam
arpl
adc
push
(bad)
sahf
sbb
stc
ja
aad
stos
jbe
jb
inc
rcl
into
inc
(bad)
adc
adc
rol
sub
or
pop
add
pop
push
cmp
sbb
and
call
xchg
jge
fsub
arpl
cmc
icebp
and
jmp
inc
sub
sub
fs
or
loopne
mov
sub
add
pop
shl
sbb
stos
sub
fisubr
sub
jg
inc
and
sbb
xor
ret
and
adc
sub
aam
imul
es
or
fisub
dec
sub
xor
sub
dec
(bad)
push
pushf
jo
adc
test
and
inc
jno
inc
mov
mov
cmc
daa
push
adc
adc
lods
mov
shr
lods
mov
push
imul
movs
and
jne
jmp
jne
pop
xor
push
rcr
adc
aam
loope
sub
or
dec
mov
stos
(bad)
cli
add
add
cmp
imul
fdiv
dec
inc
add
pop
inc
push
(bad)
inc
sbb
scas
jno
inc
popa
pop
adc
xchg
sbb
ja
fild
xchg
pop
adc
pop
inc
das
pop
mov
pop
outs
icebp
std
jno
sar
pop
imul
test
call
inc
mov
ins
repz
repz
call
dec
sahf
out
sahf
pop
jne
mov
out
jecxz
bsf
repz
addr16
test
mov
pop
sahf
out
sahf
sub
fwait
jl
out
mov
(bad)
or
pop
xor
repz
lea
sahf
out
adc
jns
out
jg
stos
rcl
cmp
out
add
sbb
inc
iret
repz
pop
jno
popf
mov
sahf
out
cmp
cmc
or
and
jns
out
dec
arpl
movs
repz
out
shl
std
adc
iret
repz
sub
push
imul
lods
ret
(bad)
add
imul
out
sahf
out
lahf
mov
loope
repz
test
cmp
xchg
cmps
mov
repz
inc
out
sahf
out
ins
sbb
(bad)
pop
(bad)
sbb
cmp
pop
jne
mov
mov
jecxz
(bad)
out
sahf
cmps
and
lahf
out
sahf
xchg
test
enter
xor
sub
cmp
repz
jns
iret
repz
pop
xor
sahf
popa
ja
mov
out
in
adc
daa
cmp
push
imul
iret
rcl
add
sbb
inc
pop
jno
popf
jl
out
mov
fcomip
or
repz
shl
aaa
dec
arpl
repz
(bad)
movs
mov
out
ds
sub
push
imul
jns
xchg
lods
ret
fpatan
cmp
out
add
iret
repz
pop
jae
lahf
mov
sahf
out
cmp
test
gs
cmps
repz
out
shr
call
dec
sub
ins
sbb
(bad)
pop
sar
out
sbb
out
sahf
out
mov
repz
stc
psrld
movs
les
fs
addr16
(bad)
ret
and
popa
ins
and
jmp
test
add
adc
jae
and
xor
pop
push
sub
(bad)
fidiv
pop
and
sti
fcomp
fs
or
out
cs
es
into
fidiv
mov
inc
dec
dec
into
les
and
les
mov
add
jns
(bad)
(bad)
and
push
dec
push
outs
int
les
aad
mov
and
inc
cs
jmp
jmp
not
ffreep
stos
iret
mov
push
add
mov
movhps
fstp
ret
jmp
jmp
add
push
pop
imul
xor
sub
mov
inc
add
test
pop
add
add
adc
and
adc
push
push
inc
mov
add
add
rcl
inc
imul
dec
pop
lds
add
sbb
or
icebp
rcl
sbb
sub
fimul
or
mov
rcl
ins
push
and
mov
and
ss
push
cmps
mov
dec
inc
adc
adc
and
add
call
ins
jo
dec
mov
stc
or
jnp
mov
add
rcl
inc
push
sti
ja
xor
jbe
pop
outs
fiadd
sahf
imul
adc
add
inc
ins
leave
add
sbb
xchg
rcr
in
inc
js
jmp
lods
dec
inc
arpl
or
add
xor
adc
sti
cmp
stos
in
test
jmp
add
sub
sub
or
inc
push
add
es
inc
add
and
inc
add
add
adc
pop
adc
lock
popa
pop
test
adc
jg
call
xor
add
rcl
add
sbb
sbb
dec
add
jno
sbb
add
xor
fiadd
add
movs
mov
add
add
call
xchg
adc
mov
inc
inc
and
mov
mov
dec
mov
rcl
add
je
imul
and
pusha
sar
mov
or
xor
popa
call
dec
lds
and
cdq
add
mov
or
dec
scas
sub
cmp
outs
jbe
jb
adc
xchg
xor
sti
aaa
aas
aas
xor
inc
pop
push
add
pop
sbb
imul
pop
dec
or
push
sub
dec
ins
(bad)
ja
mov
or
ins
sub
sar
push
add
mov
add
pusha
fsub
dec
and
pop
jmp
arpl
mov
enter
push
leave
add
aam
add
fs
or
pop
mov
cmp
sbb
cmps
popa
int3
pop
xor
js
add
out
add
add
adc
call
wbinvd
xchg
and
imul
pop
add
add
push
sub
mov
xor
scas
fnsave
pusha
add
pop
push
sahf
xchg
sub
shl
fld
xor
lods
getsec
das
or
sub
mov
pop
test
jne
cmp
sbb
dec
dec
pop
adc
add
mov
jae
aad
adc
mov
pop
inc
inc
pop
movs
mov
ins
add
inc
adc
shr
cmc
add
mov
sub
push
adc
add
dec
jg
cmps
mov
add
sbb
call
push
xor
out
adc
xchg
add
push
inc
adc
sbb
sbb
and
add
bound
add
or
call
shl
sbb
add
jmp
leave
mov
ror
push
and
or
push
and
mov
jmp
adc
inc
call
inc
add
and
sub
add
jae
inc
or
sbb
xchg
nop
test
dec
leave
mov
inc
stos
pop
add
or
sub
push
xor
aaa
push
pop
add
daa
dec
lds
mov
sub
or
sub
sub
scas
inc
mov
cmp
loop
jno
pop
pop
test
popf
dec
scas
pop
ror
rcl
adc
lods
jbe
int
xchg
movs
and
ins
cmp
adc
pop
cmp
inc
cmp
mov
sub
ret
lahf
test
xchg
dec
aad
or
adc
add
es
inc
das
fwait
mov
test
or
adc
add
push
pusha
call
xor
dec
sbb
icebp
add
add
mov
jge
fprem1
sbb
add
aas
repnz
mov
fsub
enter
add
add
data16
push
aam
push
adc
mov
and
inc
add
fdiv
or
add
ins
pop
mov
cmp
ss
and
in
bound
int
inc
cli
xchg
push
add
ins
sub
lds
jb
cmps
js
(bad)
iret
xchg
sbb
sbb
push
inc
add
in
mov
sbb
and
mov
ror
sub
cs
fisttp
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
