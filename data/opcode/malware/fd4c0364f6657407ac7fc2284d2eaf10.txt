jl
dec
iret
add
mov
add
inc
dec
add
mov
push
sub
mov
dec
add
xchg
push
pop
iret
or
adc
(bad)
addr16
pop
inc
mov
xor
imul
add
inc
dec
mov
ins
mov
(bad)
jo
(bad)
mov
jnp
jbe
sub
sbb
test
dec
add
xor
lock
or
xchg
sub
cmpxchg8b
ret
pop
int
push
pop
adc
push
cs
push
lock
dec
cmp
push
sbb
pop
xchg
(bad)
in
test
push
pop
adc
mov
mov
rol
inc
les
clc
add
push
cmove
mov
dec
add
int
clc
test
pop
mov
out
nop
iret
push
dec
lea
les
iret
ds
aas
inc
xor
inc
test
dec
cmp
jnp
sbb
das
pop
mov
mov
inc
out
xor
push
dec
mov
mov
jo
inc
bswap
(bad)
lods
jl
inc
movlps
push
mov
dec
add
leave
jo
iret
push
dec
mov
jo
inc
movzx
lea
js
inc
bswap
jo
iret
push
dec
pop
push
sbb
pop
test
inc
or
xor
cmp
or
push
mov
adc
movs
ret
icebp
mov
ror
dec
pop
inc
mov
or
iret
jns
out
mov
lock
jmp
adc
imul
mov
out
mov
lock
mov
test
add
dec
add
movs
pop
jo
dec
or
inc
sar
add
inc
pop
ror
add
inc
daa
or
add
mov
push
test
pop
mov
dec
add
scas
push
idiv
js
iret
push
dec
call
mov
lea
lods
mov
cmove
les
cld
dec
add
inc
adc
pop
(bad)
in
push
xchg
cmp
rdtsc
dec
mov
in
in
sub
push
dec
push
mov
dec
add
scas
call
adc
in
mov
dec
push
pop
and
and
mov
les
adc
cmp
and
or
inc
dec
fldenv
pusha
into
les
cs
push
sub
ror
and
push
dec
push
out
xor
btc
iret
push
dec
(bad)
cmp
inc
btc
iret
push
dec
mov
push
lea
lods
add
les
jne
mov
sbb
add
xchg
mov
int3
inc
sbb
push
inc
movs
xchg
dec
push
pop
adc
(bad)
pop
and
cs
push
cs
push
cs
push
addr16
inc
shrd
xchg
sti
lock
iret
scas
cmp
hlt
mov
dec
add
bswap
enter
mov
pop
lods
popf
jp
inc
int3
neg
lods
mov
mul
and
lea
mov
dec
add
dec
add
jl
dec
scas
imul
xor
mov
int3
test
add
mov
mov
int
pop
push
pop
test
pop
int
and
sbb
mov
loop
int
imul
int
hlt
xchg
rol
rol
daa
add
dec
(bad)
ucomiss
ucomiss
jp
mov
pop
lods
fnstcw
(bad)
mov
cmp
test
(bad)
jp
mov
adc
dec
(bad)
jp
mov
rep
jmp
(bad)
lock
add
mov
add
test
add
cmc
add
inc
dec
jmp
int
imul
int
lock
adc
int3
adc
in
adc
mov
xchg
inc
repz
sbb
inc
dec
push
mov
inc
call
xchg
jl
in
mov
pop
mov
push
push
mov
mov
sub
xor
cmove
inc
jl
in
jl
dec
scas
dec
or
sbb
leave
int3
adc
in
test
push
pop
adc
jne
or
shl
add
dec
cmp
inc
xsaves
hlt
xsaves
cld
imul
xor
iret
or
xchg
mov
or
inc
pcmpeqw
cld
push
mov
repz
dec
repz
jge
jne
pop
(bad)
icebp
mov
add
je
jp
mov
sti
iret
or
add
cld
in
cmc
or
dec
imul
les
int
clc
dec
int
add
or
jne
jge
jb
mov
inc
mov
mov
cmp
inc
xor
mov
mov
imul
dec
mov
les
sbb
pop
mov
add
inc
movs
pop
js
dec
push
pop
adc
jne
(bad)
jp
test
pushf
(bad)
xor
fmul
pushf
(bad)
inc
mov
mov
cmp
xor
inc
dec
push
inc
cmps
xchg
lock
inc
mov
jle
xchg
or
push
add
pop
cmp
int3
iret
or
es
test
inc
dec
push
inc
rol
inc
(bad)
fsub
pushf
(bad)
push
leave
int3
adc
in
pop
sbb
sbb
dec
mov
mov
(bad)
sbb
ds
es
add
iret
xor
mov
add
adc
mov
or
(bad)
rcl
pop
cmp
je
jae
mov
(bad)
xor
int
cld
test
inc
(bad)
or
push
pop
test
pop
int
push
pop
adc
mov
mov
in
and
sbb
or
jecxz
dec
add
mov
es
aaa
add
iret
xor
mov
add
adc
mov
or
(bad)
rcl
pop
cmp
je
jae
mov
ja
sldt
dec
cmp
adc
lea
push
pop
adc
jne
iret
adc
add
or
mov
ja
sldt
add
mov
jne
cmc
ins
mov
mov
jnp
jl
dec
scas
pop
inc
ss
xor
test
mov
int
(bad)
jl
push
sbb
leave
int3
adc
in
adc
push
pop
iret
cmp
mov
jae
and
mov
test
mov
mov
mov
jbe
mov
(bad)
pop
add
push
push
pop
lods
cs
lock
push
push
pop
lods
push
(bad)
lock
inc
mov
clc
mov
mov
pop
test
pop
int
push
pop
adc
pop
add
bndcu
clc
es
inc
call
xchg
and
push
pop
mov
daa
add
mov
mov
(bad)
or
mov
sbb
pop
push
xchg
mov
pop
sbb
xor
aad
fs
mov
into
cmp
wrmsr
inc
mov
pop
iret
push
call
inc
or
mov
pop
int
xor
int
mov
mov
push
or
mov
adc
xchg
mov
(bad)
mov
mov
repnz
xor
clc
xor
add
(bad)
imul
mov
into
or
out
add
leave
or
pop
sub
repz
inc
movs
cmps
jl
dec
mov
lds
xor
dec
xchg
setae
jne
adc
push
cs
lea
sbb
add
lahf
inc
pushf
iret
int
call
xchg
enter
mov
mov
pop
adc
xchg
dec
add
test
fmul
sar
ror
mov
jne
mov
adc
pop
test
pop
push
lea
xor
inc
dec
call
pop
adc
mov
xchg
cmp
lock
into
and
pmulhw
les
je
add
fimul
inc
dec
mov
out
jl
push
dec
mov
inc
xchg
mov
(bad)
jo
mov
pop
in
pushf
mov
je
push
pop
(bad)
push
add
rcl
mov
and
lea
adc
jne
lods
std
jne
inc
daa
add
mov
loope
mov
mov
lock
mov
mov
inc
sub
inc
inc
movs
bound
inc
dec
mov
jne
mov
leave
or
pop
iret
or
test
push
test
adc
or
mov
mov
add
inc
into
jge
inc
inc
test
inc
dec
add
int
dec
inc
mov
cmove
sub
pushf
jl
xchg
sldt
mov
xor
sub
mov
inc
in
or
dec
mov
(bad)
fdivr
pushf
(bad)
pop
xor
inc
daa
add
push
cmp
nop
pusha
pop
inc
dec
imul
int
fdiv
mov
mov
inc
dec
mov
les
out
les
rol
shl
mov
add
inc
dec
rep
iret
xor
test
dec
push
test
push
das
int
cld
mov
inc
sar
pushf
mov
mov
add
mov
xor
bswap
or
xchg
push
mov
mov
jp
rol
in
mov
inc
sbb
xchg
cmove
dec
mov
dec
add
test
adc
dec
inc
mov
cmove
inc
add
fdiv
mov
cmps
cdq
push
inc
dec
xor
inc
inc
cmp
scas
fdivr
inc
unpcklps
xor
adc
dec
mov
les
xchg
or
add
inc
push
mov
str
sbb
pop
mov
sbb
mov
xchg
test
gs
inc
mov
mov
iret
or
(bad)
js
add
rcr
cmove
push
mov
inc
dec
add
int
mov
clc
mov
mov
je
mov
clc
pop
xor
mov
mov
jno
jnp
into
gs
mov
or
push
adc
nop
mov
xor
mov
mov
enter
mov
fnstcw
je
(bad)
sub
bswap
mov
call
or
repz
cmp
std
inc
movntq
dec
xchg
gs
jl
in
int3
(bad)
aaa
pop
dec
add
lahf
cmp
mov
add
push
mov
dec
xor
jge
add
je
add
and
and
inc
or
aas
inc
inc
test
mov
mov
mov
mov
jnp
mov
pop
sub
test
jg
dec
jmp
xchg
mov
cs
push
cs
push
cs
push
addr16
jecxz
shrd
inc
les
cs
push
cs
push
out
aas
add
iret
or
xchg
int
push
inc
cmp
xchg
mov
or
xor
add
mov
mov
mov
mov
leave
or
pop
cs
push
lock
add
xor
add
push
leave
int3
adc
in
fmul
shrd
inc
push
push
pop
(bad)
mov
ret
adc
dec
add
xchg
dec
sub
repz
inc
movs
arpl
dec
mov
leave
enter
mov
out
mov
lock
push
or
inc
cmc
mov
in
int
mov
mov
cmps
pop
dec
inc
dec
push
lods
ins
je
inc
movs
pop
jge
dec
mov
adc
test
mov
test
lock
jo
mov
mov
ret
out
xor
xchg
push
mov
lods
push
mov
ltr
jne
pop
or
inc
repz
lea
lds
lea
adc
mov
push
dec
mov
adc
cmp
push
jo
cmove
dec
mov
out
cmove
repz
adc
(bad)
push
mov
ltr
jne
pop
cmp
inc
repz
lea
mov
inc
add
sub
mov
inc
mov
iret
mov
mov
lock
mov
xchg
mov
lock
xor
int
mov
out
mov
inc
int3
rep
pop
dec
add
mov
ltr
jne
pop
cmp
inc
repz
lea
mov
add
and
mov
cmovnp
hlt
or
mov
inc
test
inc
and
lea
adc
mov
retf
dec
(bad)
(bad)
imul
mov
in
pop
add
dec
cli
test
mov
leave
cwde
or
shl
icebp
mov
mov
icebp
mov
or
out
aas
add
(bad)
mov
repz
mov
or
mov
inc
dec
sub
cmc
xlat
pop
inc
dec
imul
int
movs
lock
jo
retf
push
dec
add
rcr
inc
daa
add
mov
mov
inc
movs
ss
mov
jo
lock
dec
je
cs
push
cmp
push
mov
mov
mov
dec
add
mov
push
inc
dec
add
xchg
add
mov
mov
inc
movs
out
cli
mov
jo
lock
dec
je
cs
push
cmp
push
mov
mov
mov
dec
add
mov
push
inc
dec
add
and
push
out
mov
or
mov
push
push
sub
repnz
inc
sar
lods
ret
mov
mov
cmove
or
shl
icebp
mov
daa
add
mov
mov
inc
movs
push
mov
jo
lock
dec
je
cs
push
cmp
push
mov
mov
mov
dec
add
mov
push
inc
dec
add
inc
daa
add
mov
mov
inc
movs
and
mov
jo
lock
dec
je
or
lock
dec
push
sub
repnz
inc
and
call
mov
dec
add
mov
push
inc
dec
add
and
push
out
mov
or
mov
or
sub
repnz
inc
sar
lods
div
lock
mov
cmove
sbb
std
push
dec
lea
adc
or
jo
lock
dec
je
or
lock
dec
mov
clc
cmps
les
xchg
mov
ucomiss
mov
add
std
inc
shrd
lock
mov
cmove
and
std
push
dec
push
out
mov
or
mov
inc
(bad)
mov
mov
lock
dec
add
lds
xor
cmp
leave
inc
cmp
dec
inc
dec
lea
adc
aaa
cmc
mov
mov
push
in
mov
inc
out
push
in
dec
add
or
lock
dec
add
int
xor
int
mov
inc
xchg
mov
leave
enter
mov
test
xchg
push
mov
sbb
mov
iret
dec
enter
dec
lea
adc
test
mov
jne
pop
les
lds
or
dec
enter
dec
sub
(bad)
fsub
pushf
(bad)
popf
push
mov
mov
lock
inc
mov
repnz
btr
(bad)
lock
enterw
icebp
mov
in
icebp
mov
rol
leave
enter
mov
test
xchg
push
mov
sbb
pushf
jl
xchg
mov
pop
sub
repz
inc
mov
iret
jne
sbb
add
inc
les
dec
lea
mov
dec
add
leave
enter
mov
test
cdq
push
mov
fcmovbe
cmove
dec
mov
les
xchg
inc
test
inc
dec
add
mov
mov
lock
cmp
adc
dec
mov
test
cmove
ret
sahf
adc
in
rol
iret
enter
mov
test
aaa
int
cld
xchg
jge
inc
inc
test
inc
dec
add
inc
rol
iret
enter
mov
test
sub
or
push
test
gs
dec
add
inc
into
movs
(bad)
mov
clc
clc
lock
or
add
push
mov
dec
add
mov
lock
movs
(bad)
inc
dec
push
lods
leave
outs
cmove
fsub
pushf
(bad)
mov
test
mov
sub
dec
inc
rol
lods
xchg
outs
cmove
les
int
add
int
enterw
icebp
mov
mov
test
shr
icebp
mov
mov
lock
mov
add
inc
dec
rep
leave
clc
nop
lock
(bad)
out
inc
dec
add
mov
mov
adc
aas
lock
dec
mov
(bad)
mov
add
cmp
cmove
movs
cmps
mov
xchg
add
int
lea
adc
test
push
dec
mov
adc
cmp
push
jo
cmove
dec
mov
jnp
cmove
jmp
inc
dec
add
mov
mov
lock
cmp
adc
mov
inc
rol
mov
cmove
movs
mov
lods
xchg
add
inc
daa
add
leave
and
nop
fsub
pushf
(bad)
(bad)
enter
mov
bswap
enter
mov
mov
mov
lock
enter
mov
xor
push
mov
stos
mov
cld
loope
mov
mov
pop
mov
std
dec
add
inc
mov
push
mov
sbb
mov
xlat
jne
mov
(bad)
xor
cmovnp
gs
inc
dec
sub
rol
sub
repz
inc
mov
iret
jne
sbb
add
inc
les
lds
or
dec
enter
dec
xor
inc
test
inc
dec
add
mov
clc
hlt
lock
mov
lock
cmp
adc
dec
mov
(bad)
mov
add
xchg
add
inc
sub
lock
inc
test
inc
dec
add
dec
jnp
leave
enter
mov
lock
cmp
std
std
mov
(bad)
(bad)
dec
int
fs
xchg
mov
(bad)
lock
rol
cmove
dec
inc
dec
add
xchg
add
icebp
loope
icebp
mov
mov
pop
sub
repnz
inc
rol
lods
std
ins
cmove
les
leave
sar
mov
or
jne
int
clc
lock
mov
lock
enter
mov
test
mov
icebp
mov
mov
lock
das
arpl
retf
dec
(bad)
fsub
pushf
vdpps
repnz
adc
test
mov
sbb
into
les
int
xor
int
xor
cmp
test
(bad)
mov
sbb
lock
icebp
mov
mov
ss
icebp
mov
mov
test
in
icebp
mov
sbb
xchg
push
mov
in
push
mov
sbb
lock
jmp
mov
shl
sar
mov
jne
or
lock
jo
cmove
test
mov
jge
pop
dec
into
mov
wrmsr
inc
mov
adc
xor
adc
int3
in
and
rdrand
aam
mov
mov
iret
jge
pop
dec
mov
iret
jge
pop
dec
mov
iret
jge
pop
dec
(bad)
fsub
pushf
(bad)
lods
push
mov
sbb
out
mov
pop
mov
push
ficomp
mov
add
inc
dec
push
imul
add
inc
dec
and
push
push
pop
int
call
adc
jb
(bad)
(bad)
ds
or
cmove
test
test
mov
and
call
mov
mov
mov
les
dec
jne
scas
pop
mov
(bad)
dec
mov
add
mov
cmps
xor
cmove
dec
movs
mov
rcr
jl
and
xor
xchg
mov
les
scas
rol
cmove
push
sbb
pop
sahf
iret
or
imul
add
inc
fmul
int
dec
push
pop
sti
sti
cmp
ds
mov
cs
push
sub
and
gs
movs
jecxz
inc
dec
mov
adc
mov
jne
mov
sbb
ret
pop
int
and
push
push
test
inc
mov
xchg
mov
mov
dec
mov
(bad)
push
add
add
mov
lods
jl
inc
movntq
dec
inc
(bad)
enter
ror
mov
add
inc
mov
or
xchg
test
or
inc
cmovge
add
jns
add
inc
inc
pop
pusha
enter
dec
add
loop
(bad)
movs
jne
inc
dec
dec
cmp
inc
pcmpeqw
xchg
iret
or
loopne
add
inc
inc
cmp
inc
dec
add
inc
or
test
dec
add
inc
or
je
in
lods
dec
inc
dec
add
in
mov
aaa
jmp
add
mov
mov
(bad)
dec
add
mov
dec
jmp
lock
xor
add
pop
xor
iret
lods
pop
add
inc
cmc
ror
inc
dec
imul
int
call
pop
jmp
add
in
test
scas
add
jmp
stc
inc
push
scas
dec
inc
dec
je
jne
jmp
mov
int
pop
jmp
add
lods
dec
push
mov
or
pop
xor
iret
lods
mov
cmove
jmp
(bad)
dec
inc
inc
mov
lods
add
inc
shrd
add
push
xor
iret
lods
lahf
add
inc
int3
jmp
(bad)
dec
inc
dec
(bad)
or
dec
add
int
add
int
jmp
stc
inc
push
scas
dec
inc
dec
je
jne
jmp
(bad)
dec
inc
dec
mov
jne
mov
or
add
dec
jmp
lock
xor
add
mov
int
pop
jmp
add
inc
add
inc
in
in
mov
jl
inc
paddb
xor
inc
mov
mov
les
mov
mov
mov
ror
dec
jmp
scas
add
inc
cmovne
scas
add
jmp
scas
test
inc
cmovne
mov
inc
dec
add
inc
xor
add
or
inc
int3
icebp
hlt
push
dec
add
dec
jmp
test
add
pcmpgtb
enter
rol
sbb
mov
adc
inc
cmovge
or
mov
mov
test
jns
add
inc
xor
mov
(bad)
ja
sub
mov
dec
inc
int
pop
jmp
add
jo
or
inc
imul
jecxz
or
push
inc
jne
dec
inc
cmps
sub
inc
jne
dec
inc
(bad)
enter
ror
or
jmp
mov
push
add
mov
mov
(bad)
xor
add
dec
dec
leave
retf
dec
mov
add
add
int
add
int
ud1
mov
inc
push
mov
inc
mov
xor
inc
xsaves
ud1
mov
add
rol
cmove
jge
add
push
lock
inc
mov
das
je
add
repnz
xor
dec
add
xor
dec
in
or
push
inc
inc
mov
dec
in
or
or
mov
jne
les
repnz
pop
or
in
inc
cmovbe
add
outs
int
pop
jmp
add
inc
mov
mov
int
inc
test
mov
inc
test
loopne
int3
or
(bad)
cmp
jge
inc
cmp
mov
mov
out
dec
add
(bad)
push
add
pop
(bad)
lock
iret
pop
or
add
mov
int3
dec
adc
lock
inc
mov
scas
add
cmp
dec
in
inc
(bad)
xchg
mov
mov
mov
(bad)
inc
mov
pop
int
inc
test
mov
xchg
test
push
dec
dec
dec
in
inc
pmulhw
dec
inc
je
add
or
add
xchg
inc
pcmpeqw
enter
rcl
ret
pop
adc
ja
pop
add
mov
mov
dec
push
out
sub
bswap
mov
mov
add
and
push
dec
mov
ins
mov
enter
dec
inc
sbb
mov
push
loop
cvttps2pi
dec
inc
sbb
test
mov
inc
cvttps2pi
retf
sbb
cdq
and
loop
bswap
mov
test
ltr
int
cmove
pop
mov
xchg
mov
(bad)
mov
mov
xchg
add
addr16
xchg
leave
or
mov
lods
push
add
inc
int3
jmp
jno
add
in
dec
mov
inc
sti
add
add
(bad)
sub
bswap
xchg
add
int
sub
dec
cmp
inc
xsaves
ror
cld
test
cmove
mov
(bad)
sub
jae
dec
add
mov
mov
(bad)
xchg
add
inc
dec
lea
cmp
inc
bswap
or
lock
xor
inc
mov
lds
(bad)
dec
lock
add
inc
into
gs
(bad)
fdivr
pushf
(bad)
icebp
lea
hlt
add
stos
leave
or
pop
sub
add
inc
rol
mov
sti
jmp
sbb
btr
ret
add
push
gs
rol
daa
add
daa
add
inc
mov
jmp
xchg
arpl
inc
rol
mov
stos
leave
or
in
daa
dec
add
inc
xor
add
xor
push
cs
push
cs
(bad)
jp
movs
mov
xlat
ins
xchg
mov
mov
sub
js
push
dec
lea
sbb
inc
jmp
mov
sti
jmp
test
imul
int
mov
lea
in
daa
or
add
mov
dec
mov
sub
xchg
xchg
mov
mov
or
test
pop
mov
into
gs
inc
jl
xchg
mov
add
inc
daa
add
add
push
leave
or
pop
cs
jp
mov
aas
jmp
add
xchg
inc
mov
fadd
adc
in
sti
jbe
inc
jg
clc
push
mov
xor
jne
cs
sbb
pextrw
mov
push
inc
dec
pop
push
xchg
mov
(bad)
mov
mov
(bad)
pop
add
dec
xor
dec
sti
add
jns
add
inc
cmp
repnz
push
jns
add
inc
cmp
add
or
or
inc
cmp
repnz
or
mov
cmove
adc
repnz
or
add
inc
inc
test
add
dec
inc
dec
mov
jp
adc
or
cmovnp
inc
lock
sti
add
and
adc
jge
jp
int
dec
add
pop
push
xchg
xchg
xchg
sti
adc
jge
jne
int
and
inc
mov
push
je
jp
(bad)
clc
mov
cmp
jp
inc
mov
mov
dec
add
pop
lods
rcr
inc
inc
mov
mov
pop
adc
pop
adc
lahf
push
inc
dec
mov
into
enter
adc
mov
popf
add
into
call
test
pop
lea
dec
add
(bad)
movs
add
adc
add
inc
cmps
and
repnz
test
xor
int3
dec
inc
dec
je
les
dec
lods
jp
lock
str
adc
clc
inc
les
or
push
mov
(bad)
movs
add
add
clc
mov
jne
int
and
inc
mov
inc
jno
jnp
jo
cmove
add
mov
out
int
or
push
xchg
cmp
(bad)
cmps
add
test
or
add
inc
int
xor
xchg
jne
int
and
int
or
push
xchg
push
or
(bad)
movs
add
repnz
push
xor
cmp
jp
into
enter
adc
mov
popf
add
(bad)
movs
add
add
inc
or
dec
clc
mov
adc
inc
dec
add
les
push
xor
mov
or
cmp
inc
cmp
mov
jno
push
xor
test
dec
add
(bad)
clc
mov
cmp
xor
icebp
inc
dec
add
jo
cmove
pop
lods
mov
push
pop
leave
sbb
or
and
les
inc
dec
add
add
dec
inc
dec
add
(bad)
cli
std
lock
mov
mov
sbb
inc
xor
jne
scas
push
xor
scas
dec
xor
dec
jne
add
jmp
inc
dec
add
int3
jmp
inc
dec
add
mov
pusha
call
leave
xor
add
mov
dec
sti
push
pop
test
and
int
add
adc
pop
stc
mov
xor
mov
pop
jo
cmove
sub
add
inc
cmp
mov
mov
in
(bad)
fmul
mov
sbb
adc
mov
in
inc
(bad)
or
jge
cmps
daa
test
mov
pop
rol
add
inc
xchg
sub
int
add
inc
popf
mov
rol
push
sti
int
add
inc
in
inc
vmptrld
enter
add
ins
popf
mov
inc
xchg
add
(bad)
movs
add
add
lea
dec
mov
les
lock
xor
enter
lea
dec
add
(bad)
movs
add
add
add
inc
dec
add
pop
sbb
mov
inc
mov
sbb
add
mov
adc
xchg
mov
cld
adc
push
inc
dec
push
pop
adc
(bad)
mov
movs
sti
push
inc
dec
cmp
jl
mov
push
or
loopne
mov
mov
les
dec
xor
cmp
add
enter
mov
xor
int3
dec
inc
dec
je
(bad)
lock
mov
inc
mov
mov
push
les
imul
jmp
dec
sti
xchg
cld
stos
mov
xchg
in
lock
inc
or
pop
lods
mov
xchg
cmps
call
cmps
add
mov
retf
inc
or
pop
test
fdivp
mov
in
shrd
inc
(bad)
xchg
stos
call
scas
add
or
inc
mov
mov
push
das
lea
(bad)
js
loop
push
dec
add
rol
lock
mov
cmovnp
xchg
cld
stos
mov
into
cmps
dec
xor
ins
mov
mov
dec
add
dec
sti
xchg
cld
stos
mov
into
cmps
dec
mov
push
sbb
xchg
fistp
xor
mov
cmovnp
xchg
push
inc
dec
call
xchg
xchg
fcomip
mov
sldt
(bad)
ror
scas
pop
shr
(bad)
fmul
inc
dec
inc
bswap
enter
mov
lock
ins
push
pop
lods
mov
(bad)
mov
les
add
ret
andps
xor
mov
xlat
add
fdivp
mov
dec
add
inc
xor
movs
jecxz
mov
shrd
add
inc
and
(bad)
mov
mov
mov
add
inc
mov
inc
sar
movs
(bad)
call
sar
mov
aad
cmps
add
cmps
dec
add
(bad)
xor
(bad)
stos
add
lock
loopne
mov
push
add
dec
inc
dec
add
int3
push
inc
dec
add
(bad)
fmul
inc
pop
add
int
adc
mov
inc
lds
xor
xor
(bad)
jp
movs
adc
mov
mov
add
inc
mov
mov
enter
mov
mov
mov
lock
dec
(bad)
mov
lods
xor
inc
movs
inc
or
dec
ud1
mov
loop
iret
pop
adc
xchg
mov
movs
sti
stos
mov
bswap
fdiv
loopne
mov
in
inc
(bad)
fxch
lods
dec
shr
dec
dec
repz
inc
adc
mov
mov
add
test
(bad)
add
sar
sti
stos
mov
cmovo
jge
mov
ja
str
mov
das
int
inc
movs
jmp
inc
dec
mov
int
add
inc
jno
cmove
xchg
xchg
call
or
mov
xchg
push
iret
fcomp
int
dec
add
mov
mov
test
(bad)
lock
fstp
lock
mov
test
cdq
fcomip
mov
mov
gs
rol
mov
mov
test
rcr
mov
mov
jp
mov
sar
lock
mov
(bad)
stc
scas
fcomip
mov
dec
add
fs
add
mov
add
(bad)
xchg
mov
mov
into
scas
inc
push
addr16
dec
add
mov
mov
xchg
mov
dec
ud1
mov
loop
iret
rcr
mov
xchg
push
int
adc
add
fdiv
loopne
mov
in
inc
(bad)
adc
fs
inc
bswap
fdiv
loopne
mov
andps
pop
lods
int
cmove
test
test
outs
inc
dec
add
shl
inc
mov
repnz
cmp
jnp
int
pop
inc
inc
test
inc
dec
add
pop
dec
add
iret
enter
mov
sbb
add
inc
into
jmp
enter
mov
mov
xchg
push
inc
into
lods
jmp
mov
or
clc
in
mov
int
rdtsc
gs
(bad)
movs
add
int
and
int
rdtsc
pop
mov
(bad)
movs
add
jl
jne
int
and
int
wrmsr
inc
dec
in
mov
ja
sldt
repnz
in
inc
les
(bad)
enter
mov
add
dec
cmp
jp
mov
dec
add
(bad)
movs
inc
shr
xchg
mov
clc
es
pop
xchg
mov
xchg
push
movs
and
inc
mov
out
push
test
movs
aad
mov
or
xor
add
inc
cmp
(bad)
js
add
inc
dec
add
int
xor
add
inc
cmp
js
add
inc
dec
add
int
xor
add
inc
cmp
dec
scas
test
mov
mov
int
pop
inc
cmp
repnz
mov
lock
xchg
fcomip
mov
mov
out
mov
lock
mov
stc
scas
fcomip
mov
call
add
mov
or
inc
mov
or
rcr
mov
mov
sti
stos
mov
mov
mov
add
inc
aas
shl
inc
xor
cs
mov
mov
mov
push
das
lea
(bad)
js
loop
push
dec
add
shl
mov
mov
mov
sbb
sbb
dec
mov
int3
inc
repz
add
or
push
leave
xor
xor
dec
inc
hlt
adc
inc
dec
rep
iret
or
xchg
mov
jb
shl
dec
dec
add
mov
lea
shl
inc
dec
add
mov
mov
(bad)
les
les
jp
push
or
and
mov
inc
cmps
push
test
mov
mov
cmp
pop
mov
in
int
cmc
inc
int
cmc
push
aas
in
add
(bad)
dec
mov
dec
add
mov
inc
test
sub
or
ud1
dec
cmp
jb
inc
mov
inc
push
xor
cmp
add
mov
jne
mov
inc
mov
inc
(bad)
dec
xor
cmp
mov
mov
jb
int
hlt
inc
inc
mov
inc
mov
or
movs
dec
xor
cmp
add
mov
jne
mov
inc
mov
inc
push
cmp
jp
int
hlt
inc
int3
ins
repz
sub
cmovnp
add
mov
add
xor
dec
inc
jne
or
or
or
or
push
les
stc
add
inc
lock
dec
jmp
into
dec
ud1
mov
dec
push
pushf
jne
les
sti
push
scas
inc
or
xor
jb
iret
or
xchg
or
xchg
mov
mov
inc
dec
jne
les
sti
push
dec
sti
inc
hlt
sbb
pop
mov
push
pop
adc
jne
push
fdivr
cmps
les
int
push
pop
cs
call
xchg
int
push
inc
cmp
xchg
jae
jp
mov
dec
jmp
or
dec
cmp
add
cmps
les
int
pop
push
pop
test
pop
int
mov
out
push
add
adc
mov
xchg
fcomip
mov
sub
jne
adc
add
mov
adc
add
mov
dec
add
(bad)
mov
xchg
test
adc
xchg
mov
adc
loopne
add
and
cs
push
mov
movs
mov
inc
dec
pop
push
xchg
mov
(bad)
mov
mov
xchg
add
dec
add
cs
push
cs
push
lock
cmp
or
lock
jb
dec
je
iret
or
fs
and
jne
jmp
cs
push
out
push
add
int
mov
clc
mov
mov
pop
cs
add
inc
mov
enter
jb
dec
je
iret
or
add
clc
xchg
mov
(bad)
jp
sbb
fst
dec
add
mov
inc
repz
inc
mov
mov
mov
(bad)
(bad)
push
sbb
leave
int3
adc
in
pop
sbb
repz
pop
sub
cvttps2pi
add
inc
daa
add
inc
daa
add
dec
add
mov
push
add
int
mov
jne
mov
(bad)
mov
jp
jl
in
daa
add
daa
add
lds
inc
int3
(bad)
push
sub
test
inc
mov
mov
mov
cs
lea
pop
push
lock
out
push
add
cs
lea
sbb
repz
inc
sbb
mov
dec
add
adc
out
jge
dec
add
sbb
pop
mov
push
pop
sti
ficom
ds
and
btr
(bad)
gs
and
push
cs
push
sub
add
test
push
cmove
(bad)
mov
(bad)
jmp
cs
push
cs
push
out
pop
add
int
xor
int
push
leave
or
pop
mov
inc
push
out
push
add
adc
mov
ins
mov
enter
push
sbb
pop
adc
mov
mov
dec
sub
jns
dec
add
lahf
mov
pop
int
sbb
ds
dec
ds
xchg
cmp
xor
pop
mov
mov
push
cmove
call
mov
pop
ud1
push
addr16
inc
shrd
pop
pop
jbe
add
movs
mov
(bad)
les
jne
jmp
les
rdtsc
dec
(bad)
or
inc
xor
inc
jl
adc
call
mov
test
pop
int
push
pop
pop
sbb
sbb
jp
mov
xor
jge
cld
fadd
inc
mov
clc
xchg
mov
xor
verr
lods
sbb
nop
push
inc
mov
jg
push
out
sbb
cmpxchg8b
jb
lds
cld
xchg
ds
add
mov
push
cmove
push
pop
test
pop
int
and
push
push
pop
inc
pop
cli
and
jb
inc
dec
imul
int
fadd
cmps
dec
add
movs
add
mov
inc
paddw
cmove
ja
inc
int
pop
inc
cmp
imul
cli
inc
or
ins
int3
repz
dec
dec
add
repnz
add
or
push
add
jne
(bad)
and
or
int
and
xor
jne
iret
or
repz
jmp
int
add
int
ud1
mov
mov
test
dec
lods
int
icebp
inc
cmp
sub
add
mov
mov
(bad)
mov
(bad)
cmp
in
inc
dec
imul
int
fadd
dec
cli
add
shl
and
cmove
pop
cmps
inc
scas
int
or
test
movs
mov
outs
or
add
add
clc
movs
les
inc
or
test
inc
(bad)
add
mov
inc
mov
inc
rol
repz
add
pop
dec
mov
dec
imul
int
rol
dec
cli
inc
pop
iret
sbb
add
pop
or
xchg
dec
inc
jmp
or
in
(bad)
fdivr
pushf
(bad)
push
leave
int3
and
nop
lahf
aam
mov
lahf
call
xchg
dec
inc
fnstsw
lahf
ror
and
fst
lahf
aam
inc
lahf
aam
nop
lahf
add
nop
lahf
aam
inc
lahf
aam
nop
lahf
add
nop
lahf
aam
cmp
aam
nop
lahf
xor
mov
lahf
push
mov
lahf
ror
adc
fst
lahf
aam
or
fst
lahf
aam
jne
aam
nop
lahf
and
frstor
int
std
lock
nop
push
inc
adc
nop
or
jae
paddq
xor
nop
lahf
aam
dec
or
fst
lahf
aam
adc
xchg
lahf
aam
retf
lahf
aam
nop
jae
fst
add
fst
lahf
aam
enter
nop
outs
aam
nop
lahf
aam
jmp
andps
add
ret
test
add
mov
add
add
ins
int3
and
nop
lahf
aam
mov
lahf
cs
nop
lahf
aam
pop
lahf
aam
nop
lahf
(bad)
mov
lahf
aam
je
aam
nop
lahf
call
xchg
dec
inc
fisttp
lahf
ins
mov
fst
fst
lahf
aam
mov
aam
nop
lahf
mov
nop
lahf
aam
xchg
lahf
aam
nop
lahf
sbb
nop
lahf
aam
mov
lahf
jne
nop
lahf
aam
add
aam
nop
lahf
cmps
mov
mov
lahf
(bad)
mov
lahf
aam
je
aam
nop
lahf
push
mov
aam
nop
lahf
ins
mov
fst
fst
lahf
aam
mov
aam
nop
lahf
mov
nop
lahf
aam
xchg
lahf
aam
nop
lahf
sbb
nop
lahf
aam
mov
lahf
jne
nop
lahf
aam
add
aam
nop
lahf
cmps
mov
popa
lahf
aam
nop
lahf
and
int3
adc
in
test
push
pop
adc
inc
add
les
(bad)
jg
jbe
(bad)
fmul
pushf
(bad)
(bad)
fsub
pushf
(bad)
or
cmove
in
and
bswap
or
push
mov
call
push
int
mov
int
lock
cmp
leave
add
aaa
pop
inc
dec
mov
cmc
push
dec
mov
add
sbb
xchg
mov
into
iret
or
xchg
mov
mov
int3
sbb
test
inc
mov
inc
jno
jge
jno
js
mov
mov
ud1
mov
vminps
or
loop
inc
dec
jne
iret
or
push
mov
ud1
inc
mov
int3
ret
push
xor
and
lea
sbb
add
repnz
pop
iret
or
push
mov
lea
inc
mov
mov
cmp
inc
(bad)
fsub
pushf
vmpsadbw
stc
adc
inc
pop
inc
mov
add
(bad)
mov
pushf
mov
mov
(bad)
mov
imul
mov
lea
push
sbb
pop
mov
sub
adc
mov
mov
movs
dec
pop
inc
dec
mov
pop
int
mul
inc
xchg
cmc
dec
mov
adc
mov
sbb
mov
mov
(bad)
jo
ret
add
jl
out
dec
add
int
xor
int
lea
sbb
jnp
mov
(bad)
inc
test
dec
add
repnz
into
mov
std
int
inc
data16
call
call
repnz
into
mov
loope
dec
inc
(bad)
fisttp
test
dec
inc
sbb
cdq
or
gs
daa
add
mov
add
movs
push
out
add
cmpxchg8b
inc
bswap
or
in
int3
out
(bad)
inc
repz
pop
aam
push
dec
xor
(bad)
or
or
or
fisttp
mov
(bad)
in
int
inc
les
scas
pop
mov
inc
or
test
int
inc
jl
xchg
inc
test
add
cwde
add
or
jge
movs
inc
inc
inc
dec
mov
movs
aas
inc
inc
dec
mov
inc
mov
int
(bad)
xchg
mov
pop
dec
call
lds
call
xchg
xchg
call
test
xchg
(bad)
mov
lahf
shr
inc
xlat
xchg
int
inc
daa
inc
addr16
add
xchg
add
add
inc
inc
dec
or
in
int3
ret
mov
cmps
sbb
add
add
(bad)
adc
ds
into
inc
sti
inc
in
int3
ret
add
xchg
add
or
jge
in
fadd
push
dec
mov
cmps
adc
iret
pop
loopne
push
dec
xor
(bad)
or
or
xchg
int
inc
dec
add
add
add
mov
push
loopne
scas
mov
shr
or
xchg
cmp
int
add
mov
push
loopne
scas
mov
shl
or
xchg
xor
jne
(bad)
and
pop
dec
cli
inc
out
(bad)
fmul
test
dec
inc
sbb
dec
dec
push
cs
push
sub
add
add
jne
lods
lods
dec
cmove
inc
jmp
mov
push
leave
or
pop
mov
cmp
out
push
add
mov
add
movhps
mov
mov
mov
(bad)
(bad)
test
ret
pop
int
and
pop
sbb
jmp
arpl
ror
inc
mov
std
lock
xor
add
inc
rcr
stos
int
cmove
mov
pop
int
mul
test
sub
int
pop
xchg
mov
call
add
int
(bad)
dec
mov
and
mov
mov
pop
push
xchg
dec
shl
fs
adc
int
(bad)
popa
xchg
jo
icebp
mov
dec
mov
jno
jns
mov
shrd
inc
(bad)
dec
jne
or
lock
dec
push
mov
mov
push
mov
cld
inc
cvttps2pi
test
mov
inc
dec
cmove
add
daa
add
daa
add
dec
add
enter
mov
out
add
bswap
enter
mov
jp
cmc
mov
push
dec
push
out
add
pextrw
mov
inc
dec
push
leave
enter
mov
addr16
push
add
sub
int
inc
mov
sti
mov
pop
add
mov
mov
xchg
or
add
inc
xor
push
add
(bad)
lock
dec
add
inc
rol
sub
icebp
dec
inc
rol
sub
add
les
dec
cmp
inc
cvttps2pi
int
push
dec
lea
adc
add
inc
int
and
mov
cmp
mov
int
push
sub
sub
icebp
dec
inc
and
call
mov
test
pop
int
and
push
push
pop
iret
cmp
mov
mov
dec
cmp
inc
bswap
mov
call
or
repz
rol
rol
daa
add
dec
(bad)
ucomiss
ucomiss
jp
mov
pop
lods
mov
cmove
std
add
call
add
mov
add
les
mov
dec
push
mov
mov
cmc
push
dec
add
xor
add
inc
adc
lea
mov
mov
mov
sbb
add
cmp
xor
jp
mov
pop
lods
je
cmove
les
sbb
ret
pop
int
push
mov
ds
lds
push
cs
lea
sbb
jne
mov
dec
add
(bad)
mov
in
int3
(bad)
adc
dec
add
mov
mov
repnz
sbb
clc
mov
mov
bswap
or
pop
leave
or
pop
cs
push
gs
daa
add
mov
add
pop
add
dec
lea
(bad)
jmp
mov
pop
(bad)
jp
daa
add
xor
jp
movs
daa
inc
inc
dec
or
xor
jp
movs
test
pop
(bad)
jp
movs
jmp
inc
dec
mov
clc
mov
mov
iret
add
leave
int3
adc
in
test
push
pop
iret
cmp
add
xchg
push
mov
xchg
add
call
or
pop
sub
add
xor
jp
movs
mov
iret
xor
iret
scas
jnp
dec
pop
sbb
add
xor
jp
movs
xchg
inc
inc
dec
or
xor
jp
movs
outs
inc
inc
dec
xor
scas
pop
mov
inc
mov
enter
out
add
cmovnp
inc
pop
sbb
leave
int3
adc
in
test
push
pop
sti
sbb
xlat
add
clc
ds
dec
call
lods
icebp
inc
cmove
add
and
add
mov
mov
add
inc
in
daa
add
dec
add
cs
push
cs
push
out
add
call
push
mov
cmp
test
clc
xchg
verr
mov
add
int
cld
push
sbb
mov
push
in
inc
int
imul
int
cld
xchg
pop
popa
inc
dec
mov
int3
icebp
jns
dec
add
xchg
mov
(bad)
mov
mov
(bad)
pop
add
aas
sbb
add
mov
scas
jne
xor
jne
int
sub
adc
lock
pushf
sbb
inc
dec
or
(bad)
clc
es
(bad)
push
pop
or
lds
cld
cdq
and
xchg
add
inc
or
int
xchg
je
les
rdtsc
outs
mov
or
cmp
dec
cmp
test
pop
(bad)
cmove
inc
and
dec
imul
les
int
cld
xchg
add
adc
aas
dec
inc
dec
mov
iret
or
xchg
mov
lock
inc
push
lock
sbb
dec
add
(bad)
(bad)
fmul
mov
cmps
adc
les
mov
clc
xchg
mov
pop
push
lea
in
and
sbb
sbb
dec
mov
sub
jne
inc
dec
or
xchg
movs
imul
les
int
lock
lods
add
int
shr
(bad)
mov
pop
cs
add
mov
jns
inc
jl
in
inc
mov
ja
lock
lea
sti
add
(bad)
mov
inc
xor
mov
jmp
jmp
dec
cli
jge
dec
sti
cmp
int
mov
xchg
mov
mov
(bad)
mov
int
mov
mov
mov
shl
les
int
or
sbb
push
mov
add
mov
les
and
inc
icebp
jg
clc
jge
mov
or
xchg
xchg
imul
les
int
lock
mov
ret
pop
int
mov
out
str
pop
sbb
lock
jne
dec
sub
into
movs
jecxz
mov
bswap
mov
lea
adc
jne
lods
test
les
int
or
xor
iret
lods
aas
or
inc
into
mov
rdtsc
pop
push
out
or
pcmpeqw
add
xor
cmove
test
mov
dec
add
mov
clc
lock
mov
lock
lock
mov
mov
lock
xchg
fstp
ja
or
gs
mov
inc
dec
mov
lds
(bad)
jp
and
call
test
inc
mov
int
add
or
jne
int
push
iret
fcom
lock
movs
leave
les
int3
(bad)
xchg
xor
mov
or
test
mov
or
mov
mov
mov
add
add
mov
dec
add
fnstsw
jge
sub
repz
inc
mov
repz
or
cmpxchg8b
add
std
inc
add
inc
aam
test
add
dec
inc
dec
mov
xchg
mov
push
test
mov
icebp
mov
ltr
adc
inc
into
les
lds
call
mov
dec
add
fnstsw
jge
sub
repz
inc
mov
repz
or
cmpxchg8b
inc
btc
cld
lock
dec
add
dec
add
fnstsw
jge
sub
repz
inc
mov
repz
or
cmpxchg8b
dec
cmove
mov
xchg
mov
xor
xor
out
or
paddw
add
inc
aam
not
(bad)
mov
pop
sub
icebp
dec
inc
sbb
mov
dec
add
and
mov
adc
and
push
dec
push
out
or
cmpxchg8b
pusha
cmove
mov
xchg
mov
xor
xor
addr16
mov
cld
lock
dec
add
(bad)
lock
mov
icebp
mov
dec
or
movs
inc
dec
inc
dec
mov
xchg
mov
xor
xor
addr16
mov
cld
lock
dec
add
add
icebp
dec
inc
mov
repz
or
cmpxchg8b
add
std
inc
add
inc
aam
test
add
dec
inc
dec
mov
xchg
mov
push
test
mov
icebp
mov
ltr
mov
les
int
xor
int
call
mov
dec
add
fnstsw
lock
inc
sar
lods
test
rol
mov
mov
icebp
mov
ltr
loope
cmove
les
lods
rol
or
inc
dec
cdq
clc
mov
outs
call
mov
dec
add
fnstsw
cld
lock
mov
ja
inc
dec
or
int3
(bad)
scas
pop
dec
add
adc
inc
add
inc
aam
test
add
cld
push
dec
(bad)
mov
lods
cmp
les
lods
popa
inc
cmove
or
inc
dec
cdq
clc
mov
pop
push
lock
mov
icebp
mov
dec
or
movs
pop
dec
inc
dec
mov
xchg
mov
xor
xor
addr16
mov
cld
lock
dec
add
outs
add
sub
lock
inc
mov
sbb
enter
mov
fidivr
adc
fisttp
or
movs
mov
add
mov
xor
xor
addr16
mov
cld
lock
dec
add
stos
mov
int
call
mov
dec
add
fnstsw
jge
sub
repz
inc
mov
repz
push
add
(bad)
mov
out
push
add
std
inc
add
inc
aam
test
add
dec
inc
dec
mov
xchg
mov
push
test
mov
icebp
mov
ltr
sbb
inc
into
les
(bad)
xor
cmovnp
xchg
inc
dec
sub
movs
pop
push
inc
dec
(bad)
mov
lock
(bad)
lock
(bad)
mov
mov
repnz
enter
mov
mov
enter
mov
je
sub
cmove
push
mov
test
repnz
mov
add
jno
xchg
cdq
clc
mov
(bad)
clc
mov
dec
add
inc
in
retf
or
mov
int
or
sbb
lock
lea
adc
or
mov
retf
mov
mov
repnz
inc
cmp
push
icebp
mov
jne
leave
enter
mov
test
mov
icebp
mov
ltr
cmp
inc
into
les
cld
pop
xor
inc
mov
push
mov
str
std
inc
add
inc
aam
test
add
inc
dec
(bad)
mov
lods
sub
inc
into
les
lods
ins
inc
cmove
or
inc
dec
cdq
clc
mov
pop
push
lock
mov
icebp
mov
dec
or
movs
sti
dec
inc
dec
mov
xchg
mov
xor
xor
addr16
mov
cld
lock
dec
add
mov
lock
btc
hlt
lock
mov
lock
enter
jge
int
in
lock
mov
add
inc
mov
enter
mov
pop
inc
dec
add
mov
dec
add
lds
mov
dec
add
inc
dec
cmp
dec
into
push
push
inc
dec
mov
int
in
lock
and
lea
adc
imul
or
ror
mov
add
(bad)
(bad)
imul
mov
push
mov
lock
enter
mov
leave
leave
enter
mov
add
enter
mov
mov
push
mov
dec
add
mov
mov
mov
mov
lock
mov
jp
mov
(bad)
mov
mov
icebp
mov
ltr
mov
les
int
xor
int
call
mov
dec
add
fnstsw
jge
sub
lock
inc
mov
repz
or
or
in
add
std
inc
add
inc
aam
test
add
inc
dec
(bad)
mov
lods
lea
inc
into
les
lods
xor
inc
hlt
or
inc
dec
cdq
clc
mov
pop
push
lock
mov
icebp
mov
dec
or
(bad)
lock
(bad)
lock
mov
add
inc
dec
dec
leave
enter
mov
lock
mov
icebp
mov
mov
mov
mov
lock
lea
mov
mov
lock
lock
inc
mov
repz
or
or
dec
or
add
inc
aam
test
add
inc
dec
(bad)
mov
lods
gs
cmove
les
int
add
int
call
mov
dec
add
fnstsw
jge
sub
lock
inc
mov
repz
jb
cmpxchg8b
add
std
inc
add
inc
aam
test
add
cld
push
dec
(bad)
mov
lods
xchg
aas
cmove
les
sub
lock
inc
mov
repz
jb
cmpxchg8b
add
mov
mov
int
call
mov
dec
add
fnstsw
jge
lods
sub
arpl
inc
dec
cdq
clc
mov
mov
lock
push
out
jb
cmpxchg8b
add
std
inc
add
inc
aam
test
add
inc
dec
(bad)
mov
lods
adc
cmove
les
lods
push
aas
cmove
or
inc
dec
cdq
clc
mov
pop
push
lock
mov
icebp
mov
dec
or
(bad)
lock
mov
mov
xchg
dec
mov
xchg
mov
xor
xor
addr16
mov
cld
lock
dec
add
dec
add
fnstsw
jge
lods
std
ds
arpl
inc
dec
cdq
clc
mov
mov
lock
push
out
jae
cmpxchg8b
inc
btc
cld
lock
dec
add
mov
ds
or
inc
dec
cdq
clc
mov
pop
push
lock
mov
icebp
mov
dec
or
and
(bad)
mov
lods
int
cmove
les
lods
jno
cmove
or
inc
dec
cdq
clc
mov
pop
push
lock
mov
icebp
mov
dec
or
and
(bad)
mov
lods
add
les
cld
pop
cmp
inc
mov
push
mov
jo
paddw
cmove
div
(bad)
mov
jb
and
(bad)
mov
lods
pop
ds
les
leave
enter
mov
test
mov
icebp
mov
ltr
cdq
cmp
pop
lods
stc
cmp
cmove
clc
mov
pop
push
lock
mov
icebp
mov
dec
or
(bad)
lock
mov
(bad)
addr16
mov
cld
lock
dec
add
dec
add
fnstsw
jge
sub
repz
inc
mov
repz
jo
cmpxchg8b
add
std
movs
add
inc
aam
test
or
adc
mov
pop
sub
out
dec
inc
sbb
dec
jns
add
mov
cmp
cmove
clc
mov
pop
push
lock
mov
icebp
mov
dec
or
and
(bad)
mov
lods
popa
cmp
pop
lods
movs
cmp
inc
hlt
or
inc
dec
cdq
clc
mov
pop
push
lock
mov
icebp
mov
dec
or
int3
out
pop
push
dec
add
stc
jno
paddw
cmove
div
(bad)
mov
jb
movs
stos
xor
ins
inc
dec
add
stc
mov
icebp
mov
ltr
in
cmove
les
sub
out
dec
inc
mov
repz
jno
cmpxchg8b
add
daa
add
and
(bad)
jp
movs
xor
inc
dec
mov
int
add
int
(bad)
mov
lods
cmc
cmp
inc
daa
add
mov
mov
icebp
mov
mov
out
je
btc
call
and
icebp
mov
icebp
mov
dec
mov
clc
mov
mov
xchg
dec
add
cmps
or
mov
out
shl
repnz
push
leave
int3
adc
in
test
add
inc
sbb
xchg
(bad)
lock
mov
in
(bad)
clc
es
or
pop
sub
out
dec
inc
rol
lods
test
cmove
add
mov
push
mov
dec
add
mov
or
push
into
or
xor
mov
loopne
dec
push
addr16
dec
add
mov
dec
push
scas
mov
add
les
or
(bad)
clc
ds
mov
mov
dec
add
mov
mov
cmp
btr
push
int
sub
mov
jne
add
lea
lahf
mov
inc
mov
inc
dec
add
inc
les
mov
jl
xchg
movs
pop
aaa
inc
dec
mov
rcl
mov
int
xor
int
push
out
jne
bswap
enter
mov
mov
lods
jns
cmove
push
pop
iret
sar
mov
pop
dec
dec
lea
dec
inc
xchg
aad
lock
dec
add
mov
mov
out
jne
bswap
enter
mov
mov
lods
mov
push
pop
iret
shl
lea
dec
mov
leave
sbb
push
leave
sbb
push
push
les
mov
inc
add
mov
mov
int
push
out
jnp
bswap
enter
mov
imul
mov
cs
push
leave
enter
mov
out
ja
shrd
inc
jle
add
dec
add
leave
enter
mov
addr16
inc
cvttps2pi
out
dec
inc
and
call
mov
pop
push
out
jnp
pcmpeqw
add
inc
movs
cli
repnz
mov
enter
cmove
test
mov
enter
mov
out
js
btc
xchg
repnz
mov
lock
mov
mov
mov
mov
mov
adc
test
lods
stos
icebp
lock
enter
mov
iret
xor
out
jnp
bswap
mov
test
dec
add
inc
and
lea
adc
mov
imul
mov
leave
enter
mov
add
(bad)
lock
dec
add
jo
push
int
test
mov
mov
enter
bswap
enter
mov
out
je
cmpxchg8b
clc
xchg
mov
dec
inc
dec
add
shr
cmove
(bad)
mov
mov
mov
mov
int
xor
cmp
or
icebp
mov
mov
test
mov
lock
dec
loopne
mov
add
std
lock
mov
lock
add
daa
and
daa
add
rol
cs
call
push
test
rol
lock
in
lock
dec
and
mov
mov
sbb
cmp
cld
icebp
mov
jne
cmpxchg8b
std
lock
mov
lea
adc
jne
push
dec
call
xchg
and
call
pop
sub
lock
mov
lock
jb
dec
xchg
je
sub
js
inc
movs
xor
inc
dec
or
(bad)
lock
repnz
and
call
addr16
dec
add
leave
enter
mov
pop
lods
aad
cmove
add
mov
cld
icebp
mov
idiv
lock
mov
mov
push
push
inc
cmps
sbb
loope
std
lock
push
add
scas
inc
sub
int3
(bad)
lock
dec
add
mov
dec
add
shr
lock
sbb
inc
daa
add
icebp
jmp
cmps
cmp
test
movs
repnz
dec
add
adc
lea
in
test
push
pop
adc
pop
sbb
in
push
mov
mov
clc
mov
mov
jp
movs
scas
cmp
int
les
mov
jns
bswap
(bad)
data16
mov
div
(bad)
(bad)
lock
test
add
mov
call
xchg
int3
out
aas
je
add
repz
add
sbb
push
xchg
inc
mov
mov
rol
repz
add
sub
dec
call
xchg
dec
add
test
jge
inc
inc
xchg
iret
int
in
inc
daa
add
add
xchg
add
(bad)
mov
xor
inc
lea
cmove
clc
push
mov
inc
(bad)
add
inc
pop
lods
mov
cmove
inc
icebp
leave
or
or
push
repz
or
or
inc
dec
push
add
or
add
add
push
xchg
inc
mov
mov
inc
pop
inc
sbb
add
inc
sbb
adc
add
xchg
jle
bswap
mov
enter
out
jle
bswap
or
pop
adc
push
out
jg
bswap
mov
test
adc
lea
dec
adc
pop
jne
add
mov
bnd
push
and
clc
mov
mov
xchg
mov
dec
pop
dec
add
mov
lods
push
adc
data16
dec
call
xchg
fild
cmove
clc
es
clc
(bad)
out
mov
dec
add
push
(bad)
mov
mov
jl
bswap
mov
test
cmps
pusha
enter
lock
int3
(bad)
cli
dec
dec
add
mov
lods
push
adc
call
push
test
cs
mov
mov
add
add
push
(bad)
mov
mov
jge
bswap
mov
test
cmps
or
out
jl
in
int3
out
ficom
add
push
leave
int3
adc
in
fs
add
lods
sub
cmove
push
pop
iret
adc
mov
jne
xor
mov
mov
clc
mov
mov
xchg
dec
add
gs
bswap
mov
mov
mov
mov
cs
mov
inc
mov
out
hlt
push
(bad)
mov
adc
pop
movs
pop
cmp
retf
dec
(bad)
lock
mov
mov
test
mov
(bad)
or
leave
enter
mov
out
jns
cmpxchg8b
add
std
inc
add
inc
aam
test
add
cld
push
dec
lea
adc
mov
retf
dec
cmc
mov
inc
dec
imul
int
in
sar
and
or
inc
dec
cdq
clc
mov
fs
mov
dec
add
fnstsw
add
mov
mov
add
mov
jns
cmpxchg8b
add
std
inc
add
inc
aam
test
add
cld
push
dec
lea
adc
dec
cmp
retf
dec
and
lea
adc
aaa
cmp
retf
dec
(bad)
lock
(bad)
out
jle
paddw
cmove
div
(bad)
mov
jb
and
lea
adc
or
inc
dec
or
movs
(bad)
cmp
dec
mov
xchg
mov
xor
xor
out
jle
paddw
add
inc
aam
not
sar
sub
out
dec
inc
sar
lods
loope
cmove
les
mov
mov
add
mov
mov
add
mov
jle
cmpxchg8b
popa
cmove
mov
xchg
mov
xor
xor
pop
mov
add
mov
jle
cmpxchg8b
inc
bswap
enter
mov
out
jle
cmpxchg8b
sub
inc
movs
and
dec
mov
xchg
mov
xor
xor
pop
mov
add
mov
jle
cmpxchg8b
inc
bswap
enter
mov
out
jle
cmpxchg8b
add
std
inc
add
inc
aam
test
add
cmp
inc
dec
add
stc
dec
loopne
mov
sldt
mov
dec
add
sldt
mov
dec
add
dec
add
mov
mov
xchg
dec
mov
xchg
mov
xor
xor
pop
mov
add
mov
jg
cmpxchg8b
inc
bswap
enter
mov
out
jg
cmpxchg8b
add
std
inc
add
inc
aam
test
add
cld
push
dec
lea
adc
outs
cmp
dec
and
lea
adc
pop
cmp
dec
(bad)
lock
(bad)
out
jg
paddw
cmove
div
(bad)
mov
jb
and
lea
adc
das
cmp
dec
mov
add
enter
mov
addr16
inc
bswap
enter
mov
out
jl
cmpxchg8b
add
std
inc
add
inc
aam
test
add
cld
push
dec
lea
adc
jmp
inc
dec
or
and
lea
adc
xlat
ds
dec
or
(bad)
lock
(bad)
out
jl
paddw
cmove
div
(bad)
mov
jb
and
lea
adc
stos
ds
dec
or
movs
addr16
dec
mov
xchg
mov
mov
lds
push
cmp
loopne
mov
sldt
mov
dec
add
dec
add
fnstsw
jge
sub
repz
inc
rol
lods
sbb
cmove
les
int
imul
int
in
mov
xchg
out
dec
inc
rol
lods
jns
cmove
les
lods
mov
or
inc
dec
cdq
clc
mov
pop
push
add
loopne
mov
dec
add
dec
add
fnstsw
jge
lods
cmc
xor
inc
hlt
arpl
inc
dec
cdq
clc
mov
lods
push
adc
lea
adc
or
and
lea
adc
mov
retf
dec
daa
add
daa
add
daa
add
dec
add
movs
cmp
inc
dec
mov
lds
lea
adc
mov
bswap
lock
sar
lock
mov
mov
lock
dec
(bad)
mov
lods
jge
cmove
ror
dec
imul
int
loopne
mov
lea
inc
(bad)
lock
mov
(bad)
push
sbb
leave
int3
adc
in
test
add
inc
push
push
pop
sti
jge
in
sbb
sub
inc
dec
imul
int
test
mov
call
add
cmp
inc
push
out
pusha
add
iret
sbb
adc
add
mov
dec
add
ror
lock
data16
adc
iret
and
mov
mov
xchg
add
push
dec
call
xchg
in
std
lock
rol
lods
adc
cmove
lea
adc
scas
loope
dec
push
addr16
dec
add
mov
lea
mov
dec
add
sub
add
inc
rol
leave
enter
mov
out
add
int
add
int
(bad)
mov
pop
rol
lods
mov
les
dec
lea
mov
dec
add
sub
out
dec
inc
rol
lods
or
cmove
test
leave
enter
mov
out
bound
shrd
xchg
mov
dec
clc
xchg
rol
lods
std
cs
les
int
add
int
(bad)
mov
mov
lock
jae
mov
cmove
mov
mov
lock
cmp
or
icebp
mov
mov
lea
adc
add
add
std
lock
mov
lock
add
daa
and
daa
add
rol
cs
call
push
test
add
std
lock
dec
cmp
mov
mov
sbb
cmp
cld
icebp
mov
arpl
cmpxchg8b
sti
lock
mov
lea
adc
jne
push
dec
call
xchg
and
call
pop
xor
lock
mov
lock
jb
dec
mov
add
sub
lock
mov
inc
mov
enter
cmove
test
adc
push
sub
out
dec
inc
rol
lods
inc
mov
mov
mov
cmove
fld
add
sti
lock
mov
or
test
mov
dec
add
mov
fwait
mov
sar
mov
dec
add
inc
rol
mov
mov
fst
int3
out
repz
dec
add
icebp
fscale
lock
dec
push
out
add
adc
or
push
dec
push
out
pusha
add
(bad)
mov
test
sub
mov
sub
inc
(bad)
popf
xchg
mov
ja
xchg
clc
xchg
repnz
mov
mov
enter
mov
out
sbb
std
lock
mov
retf
dec
int3
mov
shr
cmove
dec
inc
dec
add
inc
rol
lods
adc
clc
push
mov
mov
stos
mov
add
mov
mov
mov
rcl
lock
dec
clc
xchg
pop
adc
in
test
push
pop
adc
pop
pop
sti
dec
outs
cld
imul
dec
xor
pop
lods
test
inc
idiv
add
iret
sbb
adc
adc
or
add
inc
dec
add
scas
sub
out
add
mov
dec
add
shl
cmove
call
add
push
gs
sbb
and
add
daa
add
loope
add
int
mov
clc
mov
mov
adc
lea
sbb
add
adc
mov
jne
mov
iret
or
push
sbb
leave
int3
adc
in
inc
pop
add
lods
ins
daa
cmove
push
mov
push
or
lds
push
mov
add
int
or
xor
iret
scas
add
div
mov
sub
(bad)
cmove
test
mov
call
movs
jae
inc
dec
push
mov
dec
lock
mov
mov
dec
add
(bad)
lock
(bad)
clc
es
sbb
xor
and
pop
int
and
sbb
xchg
mov
and
jmp
int
xor
int
(bad)
add
inc
bswap
or
pop
lods
sbb
cmove
inc
loope
daa
add
dec
add
mov
dec
call
add
or
mov
inc
bswap
or
pop
lods
sub
inc
into
les
leave
or
pop
cs
push
lock
scas
dec
inc
movs
and
dec
or
and
inc
icebp
(bad)
mov
jae
adc
int3
adc
in
adc
push
mov
cmp
add
int
push
cs
push
cs
push
cs
push
cs
push
sub
add
inc
daa
add
daa
push
gs
movs
(bad)
es
dec
mov
lds
push
adc
xor
jno
mov
inc
movs
pop
es
dec
push
adc
xor
jno
lods
dec
inc
movs
(bad)
inc
dec
mov
jne
mov
cs
push
gs
xor
out
add
cs
push
gs
xor
out
add
cs
push
gs
xor
out
add
int
add
int
push
adc
xor
jno
scas
dec
inc
movs
ret
daa
inc
dec
push
adc
xor
jno
scas
dec
inc
movs
mov
inc
dec
push
adc
xor
jno
mov
inc
movs
mov
push
adc
xor
jno
mov
inc
movs
xchg
daa
inc
dec
and
cs
push
gs
xor
out
add
cs
push
gs
xor
out
add
int
imul
int
cld
xchg
jge
cmp
inc
lods
sbb
cmove
add
jge
cmp
inc
lods
or
cmove
mov
call
adc
mov
mov
xchg
cld
lock
lods
dec
inc
movs
ret
sub
das
loope
add
les
cs
cmp
daa
cmove
cld
lock
mov
inc
movs
lahf
sub
xor
or
addr16
les
cs
cmp
cld
inc
shrd
cmove
clc
clc
mov
mov
mov
dec
call
lods
pusha
loop
cvttps2pi
cld
lock
scas
dec
inc
movs
sub
push
mov
dec
call
lods
inc
in
inc
cvttps2pi
cld
lock
movs
dec
inc
movs
inc
sub
repz
dec
call
lods
cmp
inc
cvttps2pi
cld
lock
scas
dec
inc
movs
pop
sub
loopne
inc
add
cs
cmp
shrd
inc
out
sub
add
push
gs
or
out
imul
cs
cmp
cld
inc
shrd
mov
int
add
mov
mov
verr
xchg
imul
int
xor
int
pop
mov
sbb
adc
cs
and
enter
dec
inc
mov
pop
lods
cmp
lock
mov
push
mov
out
or
outs
push
add
cs
push
out
imul
lds
lea
sbb
add
cs
(bad)
cmp
inc
ucomiss
test
mov
dec
mov
mov
inc
call
add
and
push
lods
mov
add
inc
movs
stos
sub
dec
hlt
or
gs
mov
cmp
or
gs
sbb
clc
and
mov
push
cs
push
mov
sub
in
dec
inc
daa
add
xor
movntq
dec
inc
(bad)
clc
clc
mov
mov
mov
dec
push
mov
dec
push
test
mov
dec
mov
call
gs
and
push
cmps
mov
call
lods
and
inc
ucomiss
or
cs
push
cs
push
cs
push
gs
daa
add
daa
adc
xor
mov
adc
xor
jno
scas
dec
inc
movs
iret
sub
btc
mov
mov
dec
push
sub
add
inc
daa
fs
and
push
cmps
mov
call
lods
cmp
inc
pextrw
mov
push
mov
dec
push
mov
dec
push
sub
add
inc
daa
js
ins
and
push
cmps
mov
call
lods
in
inc
ucomiss
cmp
inc
ucomiss
cmp
std
inc
ucomiss
fiadd
add
dec
add
cs
addr16
mov
in
dec
inc
daa
add
or
movntq
dec
inc
daa
add
jno
scas
dec
inc
daa
add
jno
mov
inc
daa
adc
dec
add
sub
add
inc
daa
sub
dec
add
fucomi
dec
inc
and
push
lods
pop
and
mov
mov
dec
push
mov
dec
push
sub
inc
dec
add
and
push
addr16
mov
call
lods
lods
loopne
pextrw
mov
push
dec
push
gs
and
push
out
imul
dec
inc
daa
add
dec
add
mov
dec
call
gs
mov
cmp
or
gs
mov
outs
hlt
verr
dec
add
cs
movs
inc
dec
add
and
push
addr16
mov
call
lods
(bad)
cld
inc
ucomiss
cmp
inc
ucomiss
cmp
add
inc
daa
cmp
out
dec
add
sub
add
inc
and
push
addr16
mov
call
lods
push
pop
aaa
cmove
mov
lods
dec
cli
lock
jns
dec
inc
daa
add
jno
mov
inc
daa
adc
and
push
addr16
dec
add
ds
dec
inc
and
push
lods
mov
nop
mov
fmul
ucomiss
cmp
inc
ucomiss
cmp
std
inc
ucomiss
mov
addr16
pop
add
inc
and
push
cmps
mov
call
lods
xor
inc
ucomiss
cmp
inc
ucomiss
cmp
std
inc
ucomiss
push
inc
and
push
addr16
mov
in
dec
inc
daa
add
xor
movntq
dec
inc
daa
add
jno
scas
dec
inc
daa
add
jno
mov
inc
daa
adc
dec
add
sub
add
inc
daa
fs
dec
add
push
in
dec
inc
and
push
lods
jno
cmove
lock
jne
mov
cs
(bad)
cmp
inc
ucomiss
cmp
std
inc
ucomiss
pop
sub
add
inc
and
push
addr16
mov
in
dec
inc
daa
add
mov
fnstenv
lock
scas
dec
inc
daa
add
jno
mov
inc
daa
sbb
dec
add
sub
add
inc
daa
adc
inc
dec
sbb
icebp
dec
inc
and
push
out
outs
add
out
mov
inc
daa
add
jno
scas
dec
inc
daa
add
jno
mov
inc
daa
sbb
dec
add
sub
add
inc
daa
adc
inc
dec
sbb
mov
inc
and
push
out
outs
add
out
movs
dec
inc
(bad)
clc
es
mov
cmp
or
gs
mov
outs
hlt
verr
daa
sub
dec
add
cs
push
addr16
mov
in
dec
inc
and
call
lods
ins
loop
ucomiss
cmp
inc
ucomiss
cmp
push
sub
add
inc
daa
adc
inc
dec
sbb
icebp
dec
inc
and
push
out
outs
add
out
scas
dec
inc
daa
add
jno
scas
dec
inc
daa
add
jno
mov
inc
daa
pop
fisttp
cvttps2pi
add
inc
daa
push
addr16
dec
sbb
jmp
inc
and
push
lods
cdq
and
inc
out
cwde
mov
mov
popa
add
mov
mov
(bad)
(bad)
out
mov
lock
leave
int3
adc
in
test
push
pop
sti
fwait
adc
scas
jl
add
mov
or
mov
mov
test
cmps
div
mov
inc
scas
dec
inc
(bad)
clc
es
mov
pop
jmp
add
and
mov
call
add
call
call
gs
mov
cmp
or
gs
sbb
sti
adc
inc
imul
lock
cs
push
sub
add
push
dec
push
addr16
dec
add
lods
imul
mov
mov
dec
push
adc
cmp
add
call
gs
and
push
cmps
mov
call
lods
inc
loop
bswap
mov
test
js
mov
mov
dec
push
test
mov
dec
mov
call
gs
and
push
cmps
mov
call
lods
and
inc
ucomiss
or
cs
push
cs
push
cs
push
gs
daa
add
daa
adc
test
mov
adc
xor
jno
scas
dec
inc
movs
dec
das
inc
dec
push
mov
dec
push
mov
dec
push
sub
cs
push
addr16
mov
in
dec
inc
daa
add
add
movs
lods
dec
inc
(bad)
clc
push
mov
mov
push
lock
lods
dec
inc
movs
sti
adc
jb
verr
and
(bad)
cmp
pop
cmove
cmp
cmp
pop
push
cs
push
lock
lods
dec
inc
movs
(bad)
adc
sbb
dec
push
sub
add
inc
mov
out
or
out
push
add
cs
(bad)
cmp
inc
ucomiss
cmp
add
inc
daa
xor
daa
jp
inc
dec
sbb
icebp
dec
inc
and
push
lods
jmp
cmp
dec
add
mov
mov
mov
dec
push
mov
dec
push
gs
adc
jmp
(bad)
adc
fdivr
push
dec
push
gs
movs
pop
adc
and
or
out
mov
(bad)
cmp
inc
ucomiss
cmp
std
inc
ucomiss
mov
sub
push
addr16
mov
in
dec
inc
daa
add
gs
add
out
mov
inc
int3
div
cmp
gs
mov
cmp
or
gs
mov
dec
hlt
or
gs
daa
addr16
dec
add
sub
add
inc
and
push
cmps
mov
call
lods
je
inc
ucomiss
cmp
inc
ucomiss
cmp
std
inc
ucomiss
repnz
dec
add
dec
add
sub
inc
dec
push
addr16
mov
in
dec
inc
daa
add
in
push
add
out
lods
dec
inc
int3
(bad)
mov
add
mov
cmp
or
gs
mov
dec
hlt
or
gs
daa
push
addr16
dec
add
sub
add
inc
and
push
cmps
mov
call
lods
sar
inc
ucomiss
cmp
inc
ucomiss
cmp
std
inc
ucomiss
jmp
dec
add
dec
add
cs
push
addr16
cvttps2pi
add
jne
add
out
mov
inc
daa
add
jno
scas
dec
inc
daa
add
jno
mov
inc
daa
adc
dec
add
sub
add
inc
daa
push
addr16
dec
add
adc
dec
inc
and
push
lods
mov
cmove
mov
btc
mov
mov
dec
push
sub
add
inc
daa
sub
pinsrw
addr16
mov
add
inc
movs
mov
adc
or
clc
xchg
jns
dec
inc
daa
add
jno
mov
inc
daa
sbb
daa
inc
gs
and
push
addr16
mov
add
inc
movs
adc
dec
mov
gs
mov
cmp
or
gs
mov
outs
hlt
verr
daa
fs
adc
inc
dec
sbb
icebp
dec
inc
and
push
out
push
add
out
scas
dec
inc
daa
add
jno
scas
dec
inc
daa
add
jno
mov
inc
daa
pop
fisttp
cvttps2pi
push
addr16
dec
sbb
jmp
inc
and
push
lods
pop
sbb
mov
mov
inc
and
push
lea
in
pop
pop
sbb
adc
inc
and
mov
push
sub
add
inc
daa
add
daa
add
dec
add
test
mov
fwait
inc
dec
add
sbb
in
dec
add
jbe
add
dec
sbb
inc
into
gs
mov
inc
dec
add
lds
lea
sbb
lea
sbb
aas
retf
push
dec
push
out
in
push
(bad)
mov
sbb
(bad)
jp
and
push
lock
jp
movs
cmp
mov
les
dec
lea
dec
push
leave
or
pop
mov
mov
sub
add
les
or
(bad)
clc
ds
push
leave
int3
adc
in
test
add
inc
push
push
mov
pop
into
pop
cld
(bad)
push
cmove
(bad)
lock
add
call
mov
lock
mov
xor
add
fnstsw
pop
lock
dec
xor
test
add
mov
dec
add
push
and
lea
adc
arpl
inc
dec
mov
inc
mov
dec
pop
push
add
push
mov
dec
add
push
and
lea
adc
das
pop
inc
dec
xor
jne
sub
ret
rol
lods
push
sbb
inc
int3
(bad)
xchg
or
(bad)
cmp
pop
int
dec
lea
adc
sti
sbb
jb
dec
jne
sub
ror
test
mov
test
jge
dec
cmp
addr16
enter
mov
out
pop
add
les
inc
xor
test
add
mov
dec
add
inc
int
lock
cmp
addr16
inc
bswap
enter
mov
out
pop
add
les
inc
pop
push
add
push
mov
dec
add
push
and
lea
adc
imul
dec
cmp
les
inc
xor
test
add
mov
dec
add
push
and
lea
adc
aaa
sbb
ucomiss
inc
scas
verr
cmps
inc
bswap
enter
mov
addr16
jecxz
shrd
lock
dec
push
addr16
inc
shrd
dec
dec
call
mov
mov
(bad)
lock
dec
add
test
pop
pop
sbb
xor
xor
inc
mov
sub
mov
(bad)
mov
lods
test
cmove
push
or
push
repz
pop
call
mov
inc
push
pop
movs
xchg
pop
inc
dec
or
sbb
pop
mov
and
pop
sbb
fstp
popa
int
imul
int
in
mov
mov
push
add
div
mov
dec
add
mov
inc
add
inc
aam
test
repz
mov
lock
cmp
arpl
leave
enter
mov
out
pop
add
int
xor
int
xor
cmp
addr16
enter
mov
out
pop
add
(bad)
lock
and
lea
adc
neg
inc
dec
xor
cmp
cmp
leave
enter
mov
out
pop
add
cld
and
xchg
lods
div
mov
mov
jne
sub
ret
dec
inc
rol
lods
stc
adc
cld
mov
pop
push
add
div
mov
dec
add
mov
xchg
dec
inc
rol
lods
int
cmove
lock
(bad)
(bad)
stc
mov
jne
sub
ret
rol
lods
sub
mov
push
xor
xchg
add
mov
dec
add
mov
cld
ret
rol
lods
popa
adc
push
mov
(bad)
(bad)
stc
mov
jne
sub
ret
dec
inc
rol
lods
inc
adc
cld
mov
pop
push
add
div
mov
dec
add
mov
outs
les
rol
lods
xchg
adc
inc
int
cld
mov
pop
push
add
div
mov
dec
add
std
inc
bswap
enter
mov
out
mov
pop
pop
inc
dec
push
addr16
mov
lods
out
in
lock
enter
mov
mov
mov
lock
adc
stc
movs
div
mov
push
cmove
div
dec
add
inc
int3
(bad)
and
dec
add
cmp
and
call
mov
mov
lock
lea
mov
cmps
add
inc
int
repz
leave
mov
inc
dec
xor
inc
test
inc
dec
add
mov
dec
add
or
repz
jl
xchg
mov
pop
sub
jmp
inc
rol
lods
lea
cmove
les
(bad)
lock
idiv
movs
jg
inc
dec
mov
pop
int
mul
test
sub
int
pop
xchg
mov
lock
retf
inc
dec
xor
loopne
cmovbe
aaa
addr16
inc
cvttps2pi
dec
inc
rol
lods
sbb
cmove
out
push
inc
dec
add
cld
inc
cvttps2pi
dec
inc
rol
lods
jne
cmove
les
scas
push
push
add
clc
lock
dec
add
inc
rol
sub
jmp
inc
rol
lods
dec
sbb
inc
and
lea
adc
pop
pop
inc
dec
or
rol
lods
adc
repz
dec
push
add
clc
lock
sldt
mov
dec
add
enter
mov
out
pop
add
int
imul
int
fdivr
mov
dec
push
add
cld
lock
mov
mov
enter
dec
lea
(bad)
lea
cmove
mov
add
test
add
icebp
mov
lock
dec
push
add
clc
lock
dec
add
sldt
mov
dec
add
mov
dec
add
mov
xchg
div
mov
mov
lock
test
xchg
div
mov
mov
lock
cmps
(bad)
leave
xchg
div
mov
mov
or
pushf
mov
ins
mov
clc
idiv
mov
lock
fsubp
push
dec
lea
adc
retf
sbb
retf
push
rol
lods
pop
adc
inc
les
cmp
(bad)
lock
dec
add
sar
push
lods
popa
adc
inc
les
add
clc
lock
mov
lock
test
cmove
lock
mov
sbb
add
mov
mov
lock
xor
push
adc
lea
adc
add
icebp
mov
push
add
push
cs
call
pop
lods
ins
adc
inc
rol
pop
mov
jecxz
mov
out
cmp
xchg
ins
std
lock
mov
out
pop
add
int
sub
int
push
out
pop
add
sbb
mov
push
pop
test
or
jmp
pop
push
inc
dec
push
pop
adc
fnstsw
mov
ins
xchg
mov
lds
push
gs
and
call
xchg
jmp
sar
call
gs
movs
dec
sbb
mov
mov
jns
dec
inc
mov
fwait
inc
dec
add
xchg
call
addr16
fnsave
push
inc
dec
call
pop
lods
and
push
pushf
(bad)
dec
add
leave
enter
mov
lock
adc
inc
and
lea
adc
jb
mov
jo
lock
dec
jp
(bad)
dec
js
push
dec
or
popa
xor
add
mov
adc
btr
push
int
call
mov
add
adc
mov
or
(bad)
rcl
mov
xchg
jmp
test
jnp
mov
repnz
mov
das
adc
mov
in
mov
into
mov
popf
pop
xchg
mov
in
lock
mov
push
into
enter
mov
pop
xor
push
inc
movs
outs
sbb
int
pop
jp
mov
cmp
enter
mov
mov
rol
sub
mov
inc
and
lea
adc
dec
sbb
bswap
enter
mov
add
out
lock
dec
add
mov
mov
add
in
lock
mov
mov
str
cs
lea
adc
inc
push
inc
dec
mov
ins
xchg
mov
cs
call
xchg
(bad)
in
dec
push
mov
sub
scas
dec
inc
movs
fistp
dec
lea
leave
js
out
dec
mov
cld
and
and
sub
jmp
dec
push
addr16
inc
shrd
cmove
mov
xor
dec
inc
hlt
sbb
imul
dec
imul
int
mov
mov
std
jmp
dec
push
addr16
inc
shrd
in
test
leave
call
cmove
imul
dec
add
cmps
inc
cvttps2pi
mov
inc
and
push
out
pop
add
(bad)
mov
stc
repz
lock
(bad)
mov
dec
add
mov
mov
clc
cmps
les
xchg
daa
add
inc
daa
add
dec
add
dec
scas
dec
inc
movs
mov
inc
dec
mov
int3
ret
aam
dec
add
daa
add
sbb
add
add
inc
inc
dec
lea
sbb
push
adc
imul
dec
lea
mov
push
leave
cmp
mov
mov
inc
add
cs
lea
sbb
repz
inc
mov
mov
inc
int3
repz
dec
add
add
inc
inc
dec
lea
sbb
push
adc
mov
inc
dec
lea
mov
push
leave
cmp
mov
mov
inc
add
cs
lea
sbb
repz
inc
mov
mov
inc
mov
mov
inc
cmc
pop
and
int
lods
loop
mov
mov
mov
lea
lods
mov
loopne
jo
inc
bswap
or
add
dec
inc
les
int
xor
int
push
gs
movs
iret
add
dec
nop
and
push
lods
or
fild
dec
add
xchg
add
loope
add
int
fmul
add
add
inc
dec
(bad)
dec
or
inc
int3
ret
sbb
dec
add
add
lea
sbb
add
mov
cmp
or
gs
daa
add
daa
add
daa
add
dec
retf
movs
in
dec
inc
and
push
lods
push
adc
inc
out
add
test
add
daa
add
adc
ucomiss
jge
mov
mov
dec
add
inc
dec
add
scas
verr
imul
dec
inc
sbb
add
mov
(bad)
inc
add
cs
push
lock
in
lock
mov
or
mov
rol
leave
enter
mov
addr16
inc
cvttps2pi
jmp
dec
push
out
fdivrp
lock
mov
push
test
pop
mov
les
dec
call
xchg
test
cs
push
sub
jae
inc
daa
add
movs
sub
inc
dec
push
out
inc
add
leave
enter
mov
gs
daa
add
cmp
cs
push
lods
inc
push
cmove
add
and
push
mov
dec
call
in
rol
movs
xlat
add
int3
jle
add
leave
or
pop
lods
cdq
push
cmove
add
daa
add
xor
lea
sbb
pop
mov
and
pop
sbb
jge
repz
lds
mov
into
clc
pop
dec
leave
cdq
push
inc
dec
jg
(bad)
mov
add
and
cmove
push
inc
dec
add
shl
cmove
push
inc
dec
je
jns
add
inc
inc
mov
jl
add
dec
leave
mov
inc
dec
jmp
mov
les
dec
jnp
sub
in
dec
inc
mov
arpl
scas
push
int
in
repnz
sub
cvttps2pi
call
mov
mov
lock
add
int
lea
adc
mov
mov
inc
add
dec
lea
mov
dec
add
leave
enter
mov
lock
mov
inc
movs
adc
inc
dec
or
xor
mov
outs
enter
mov
out
(bad)
xchg
fistp
test
lock
mov
rcl
or
fcom
repnz
mov
lock
je
cs
mov
outs
enter
mov
test
lods
std
lock
mov
pop
cs
push
mov
dec
call
xchg
std
lock
and
jnp
in
les
out
ins
retf
push
dec
and
(bad)
push
add
inc
dec
jne
adc
mov
(bad)
jns
les
dec
jne
mov
dec
call
push
int
sub
int
jmp
xchg
add
dec
inc
test
dec
add
movs
sbb
inc
dec
jmp
mov
and
btr
push
int
mov
add
mov
add
mov
inc
add
lods
jg
cmove
clc
clc
mov
mov
xchg
enter
mov
or
inc
xor
cmp
xor
inc
wrmsr
jno
or
wrmsr
jns
or
cmp
sar
inc
wrmsr
imul
wrmsr
push
cmp
in
inc
wrmsr
pop
cmp
dec
loop
wrmsr
inc
cmp
push
loop
cmovnp
ror
inc
dec
push
mov
inc
add
iret
enter
mov
or
cld
inc
wrmsr
pop
cmp
in
inc
wrmsr
inc
cmp
jo
inc
rdtsc
inc
push
lock
int
dec
add
mov
btc
adc
in
inc
add
lds
sub
into
movs
sar
mov
test
mov
lock
fwait
add
mov
adc
cmove
mov
mov
enter
mov
lock
lods
dec
inc
movs
inc
inc
mov
lock
cmp
gs
daa
add
cmps
inc
ucomiss
gs
dec
add
jno
lods
dec
inc
movs
pop
add
dec
jmp
mov
mov
lock
mov
pinsrw
push
dec
add
rcl
cmove
lea
adc
xor
out
inc
add
leave
rol
mov
or
jne
(bad)
mov
jge
daa
add
mov
add
mov
(bad)
lock
mov
mov
ins
push
cs
push
gs
movs
fild
sar
shrd
cmove
clc
cmovge
clc
mov
mov
xchg
mov
pop
leave
enter
mov
addr16
inc
bswap
enter
mov
out
inc
add
(bad)
mov
addr16
enter
mov
lock
movs
dec
inc
movs
inc
inc
dec
xor
cmp
gs
daa
add
cmps
inc
ucomiss
gs
dec
add
jno
movs
dec
inc
movs
pop
add
inc
dec
add
mov
int
push
inc
cmp
mov
push
sub
jmp
out
inc
add
mov
dec
call
out
dec
add
or
lock
inc
mov
inc
mov
lock
leave
add
xor
xor
and
daa
add
movs
inc
ucomiss
stc
dec
dec
add
jno
movs
dec
inc
movs
mov
mov
add
mov
mov
lock
jb
int
add
int
lea
adc
test
mov
jl
dec
inc
rol
lods
in
cmove
les
sub
add
inc
rol
mov
dec
call
(bad)
stc
dec
push
mov
dec
push
sub
jmp
out
inc
add
mov
dec
call
out
dec
add
int
imul
int
in
mov
enter
mov
add
std
lock
sldt
mov
dec
add
dec
add
mov
loop
shrd
cmove
mov
rdtsc
ins
push
cs
push
gs
movs
clts
inc
dec
(bad)
cmp
inc
shrd
cmove
imul
mov
leave
enter
mov
add
std
lock
sldt
mov
dec
add
dec
add
mov
loop
shrd
inc
int
push
mov
ins
push
cs
push
gs
movs
cmps
pop
inc
dec
(bad)
cmp
shrd
cmove
add
lock
xor
cmp
gs
daa
add
movs
inc
ucomiss
jge
dec
add
jno
scas
dec
inc
movs
pop
pop
inc
dec
jmp
leave
shl
xor
test
mov
dec
add
mov
dec
cmp
cmp
ucomiss
aas
lods
verr
movs
xor
inc
dec
(bad)
cmp
shrd
or
mov
mov
xchg
test
mov
enter
mov
addr16
inc
bswap
enter
mov
out
inc
add
(bad)
mov
addr16
enter
mov
lock
scas
dec
inc
movs
dec
or
mov
mov
lock
cmp
gs
daa
add
movs
inc
ucomiss
mov
dec
add
jno
scas
dec
inc
movs
or
jmp
leave
shl
xor
test
mov
dec
add
mov
dec
cmp
cmp
ucomiss
std
lods
verr
movs
jnp
inc
dec
(bad)
cmp
shrd
inc
movs
or
mov
ror
mov
add
inc
mov
mov
(bad)
jb
lds
lea
adc
test
mov
jl
dec
inc
rol
lods
push
or
inc
into
les
cs
push
cs
push
cs
push
addr16
inc
shrd
cmove
test
mov
mov
std
lock
mov
xchg
daa
add
icebp
mov
mov
inc
dec
xor
mov
inc
cmp
dec
jge
dec
inc
into
enter
cmp
inc
cmp
xchg
mov
push
addr16
inc
btc
hlt
icebp
mov
dec
add
rol
cs
push
lock
mov
iret
or
xor
dec
jno
rdtsc
mov
bswap
fdiv
repnz
shl
repnz
mov
mov
bswap
enter
mov
gs
and
(bad)
mov
lods
lds
call
icebp
mov
sbb
inc
dec
(bad)
cmp
std
inc
shrd
gs
daa
add
inc
daa
add
dec
add
ins
mov
or
mov
mov
push
cs
push
mov
mov
lds
add
inc
into
enter
cmp
inc
cmp
xchg
mov
push
addr16
inc
btc
hlt
icebp
mov
dec
add
rol
cs
push
lock
mov
out
or
test
hlt
icebp
mov
dec
add
inc
cmp
add
inc
int3
(bad)
push
jbe
add
daa
add
xor
inc
cvttps2pi
jmp
dec
push
out
(bad)
push
(bad)
mov
gs
mov
pop
jmp
add
mov
mov
call
mov
pop
(bad)
jp
mov
pop
mov
inc
call
push
sbb
leave
int
dec
push
xchg
sbb
xor
repz
or
add
or
inc
dec
add
dec
enter
dec
mov
jne
mov
(bad)
xor
push
dec
enter
dec
cmp
sar
rdtsc
inc
(bad)
cmp
add
inc
(bad)
clc
es
movs
lods
dec
inc
cmp
lock
mov
inc
movs
(bad)
or
cmp
cld
inc
rdtsc
inc
(bad)
cmp
inc
shrd
cmove
and
or
jp
mov
adc
or
add
int
sub
int
cmp
pop
call
(bad)
cmp
shrd
daa
jmp
add
mov
das
jmp
add
jns
add
cld
lock
xchg
mov
and
les
retf
push
dec
add
mov
out
or
out
dec
add
jg
and
les
retf
push
dec
add
mov
mov
verr
mov
dec
mov
ins
mov
enter
cmp
mov
fs
add
int
cmp
(bad)
cld
inc
rdtsc
dec
mov
js
inc
movq
mov
iret
push
and
add
mov
enter
stos
add
jne
iret
push
add
ins
loop
rdtsc
dec
mov
cmp
inc
movq
mov
iret
push
sub
add
cmp
sar
rdtsc
dec
mov
pop
loop
cmovge
adc
xor
jp
sbb
xor
imul
imul
mov
sbb
pop
mov
and
lahf
aam
add
inc
mov
add
add
inc
mov
pop
inc
push
add
inc
mov
sbb
add
inc
mov
das
inc
push
add
inc
mov
and
add
inc
mov
aas
inc
push
add
inc
mov
cmp
add
inc
sbb
mov
dec
add
xor
sub
lods
sbb
les
int
cld
push
test
sub
add
aas
das
xor
mov
or
mov
jp
cmps
add
repz
push
test
add
cld
cs
call
gs
sbb
adc
out
loope
mov
mov
add
imul
sub
adc
inc
ds
or
sub
(bad)
push
sub
mov
mov
lock
mov
mov
mov
fisttp
stos
ror
xlat
test
imul
inc
push
add
inc
mov
dec
inc
push
add
inc
mov
inc
inc
push
add
inc
mov
inc
inc
push
add
inc
mov
pop
inc
push
add
inc
mov
pop
inc
push
add
inc
mov
push
inc
push
add
inc
mov
push
inc
push
add
inc
mov
outs
inc
push
add
inc
mov
imul
lahf
aam
add
inc
mov
addr16
push
add
inc
mov
arpl
add
inc
mov
jg
push
add
inc
mov
jnp
push
add
inc
mov
ja
push
add
inc
mov
jae
push
add
inc
mov
pop
add
inc
mov
mov
add
inc
mov
xchg
add
inc
mov
add
lahf
aam
add
inc
mov
lahf
inc
push
add
inc
mov
fwait
inc
push
add
inc
mov
xchg
inc
push
add
inc
mov
xchg
inc
push
add
inc
mov
scas
inc
push
add
inc
mov
stos
inc
push
add
inc
mov
cmps
inc
push
add
inc
mov
mov
aam
add
inc
mov
mov
aam
add
inc
mov
mov
aam
add
inc
mov
mov
push
add
inc
mov
mov
push
add
inc
mov
iret
inc
push
add
inc
mov
retf
inc
push
add
inc
mov
mov
add
inc
mov
ret
inc
push
add
inc
mov
fild
add
inc
mov
fild
add
inc
mov
xlat
inc
push
add
inc
mov
rol
add
inc
mov
out
inc
push
add
inc
mov
jmp
push
add
inc
mov
out
push
add
inc
mov
jecxz
push
add
inc
mov
test
add
inc
mov
repz
push
add
inc
mov
cmovo
add
inc
mov
or
add
inc
mov
pop
inc
push
add
inc
mov
add
add
inc
mov
pop
inc
push
add
inc
mov
sbb
add
inc
mov
pop
inc
push
add
inc
mov
adc
add
inc
mov
das
inc
push
add
inc
mov
sub
add
inc
mov
daa
inc
push
add
inc
mov
and
add
inc
mov
aas
inc
push
add
inc
mov
cmp
add
inc
mov
aaa
inc
push
add
inc
mov
xor
add
inc
mov
dec
inc
push
add
inc
mov
dec
inc
push
add
inc
mov
inc
inc
push
add
inc
mov
inc
inc
push
add
inc
mov
pop
inc
push
add
inc
mov
pop
inc
push
add
inc
mov
push
inc
push
add
inc
mov
push
inc
push
add
inc
mov
outs
inc
push
add
inc
mov
imul
lahf
aam
add
inc
mov
jg
push
add
inc
mov
jnp
push
add
inc
mov
ja
push
add
inc
mov
jae
push
add
inc
mov
pop
add
inc
mov
add
lahf
aam
add
inc
mov
lahf
inc
push
add
inc
mov
fwait
inc
push
add
inc
mov
xchg
inc
push
add
inc
mov
xchg
inc
push
add
inc
mov
scas
inc
push
add
inc
mov
stos
inc
push
add
inc
mov
cmps
inc
push
add
inc
mov
mov
aam
add
inc
mov
mov
push
add
inc
mov
mov
push
add
inc
mov
iret
inc
push
add
inc
mov
retf
inc
push
add
inc
mov
mov
add
inc
mov
ret
inc
push
add
inc
mov
fild
add
inc
mov
fild
add
inc
mov
xlat
inc
push
add
inc
mov
rol
add
inc
mov
out
inc
push
add
inc
mov
jmp
push
add
inc
mov
out
push
add
inc
mov
jecxz
push
add
inc
mov
inc
add
inc
mov
sti
inc
push
add
inc
mov
test
add
inc
mov
repz
push
add
inc
