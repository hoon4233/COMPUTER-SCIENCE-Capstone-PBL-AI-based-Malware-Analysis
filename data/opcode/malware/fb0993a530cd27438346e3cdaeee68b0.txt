call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
call
cmp
jne
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
ret
jmp
sbb
add
inc
and
inc
lock
add
das
(bad)
loopne
push
ret
nop
aaa
sub
call
cmp
fild
(bad)
dec
add
dec
cli
shr
lea
or
test
stc
dec
pop
repnz
data16
outs
ds
push
int3
mov
rcr
pop
repnz
and
ins
in
daa
add
cmp
pop
sub
rol
push
aas
in
mov
rol
jno
lds
(bad)
enter
popa
add
pop
mov
inc
mov
push
push
ja
push
aad
repnz
gs
mov
pop
or
add
rcr
daa
adc
gs
xor
sar
add
cmp
rol
(bad)
xor
iret
inc
mul
aas
hlt
out
xchg
pop
leave
jne
sbb
lds
sbb
push
mov
pop
retf
xor
dec
clc
imul
sub
sub
shr
inc
cmp
scas
push
retf
jecxz
xor
dec
cmp
mov
mov
jmp
movs
push
inc
or
mov
lods
push
inc
repnz
jmp
mov
jb
(bad)
jo
or
cli
outs
frstor
stos
ja
cld
ret
xor
mov
pop
or
push
mov
push
adc
out
xchg
fadd
movs
jb
or
sbb
xchg
add
ins
xor
out
or
xor
out
add
inc
icebp
out
xchg
add
movs
imul
sti
in
pusha
int3
sub
call
inc
das
fidivr
sbb
ja
mov
or
jmp
push
fstp
ds
(bad)
cdq
mov
rol
mov
mov
iret
push
jbe
stos
lock
(bad)
cli
sahf
pop
(bad)
ffree
mov
bound
dec
mov
xchg
or
gs
cmc
sbb
cmp
or
out
sbb
xchg
iret
stc
fld
mov
shl
fild
sbb
inc
sbb
(bad)
mov
xchg
xchg
cmc
sbb
std
mov
lea
pop
int3
jge
sbb
les
xor
or
out
sub
dec
cwde
jmp
mov
(bad)
icebp
cmc
sbb
jg
add
mov
div
es
repz
(bad)
dec
in
cmp
icebp
jge
jbe
aaa
mov
icebp
add
sbb
mov
pop
leave
inc
or
dec
repnz
test
jle
out
les
pushf
sbb
icebp
out
inc
xor
mov
ror
das
and
xor
sub
(bad)
dec
and
in
fnsave
add
ror
jbe
stos
lock
les
repz
cmp
in
cdq
sub
hlt
repz
(bad)
or
leave
jle
push
push
cmp
test
push
loopne
ret
leave
push
mov
sub
pop
sub
pop
aaa
aad
xchg
cli
call
lods
mov
jnp
pop
sub
pop
sub
pop
jge
setne
call
jg
sub
pop
jge
or
cli
call
jg
sub
mov
xor
call
in
pop
sub
pop
sub
pop
sub
fs
in
mov
jnp
pop
sub
pop
sub
mov
icebp
lods
mov
icebp
lods
mov
jnp
pop
sub
pop
mov
call
lods
mov
call
lods
mov
das
in
cmps
jecxz
int3
mov
jnp
pop
sub
xchg
cli
call
jg
sub
pop
xor
or
sub
pop
sub
xchg
push
icebp
lods
mov
jnp
pop
sub
pop
push
cmp
mov
jnp
pop
sub
fs
loopne
mov
jnp
pop
sub
pop
cmp
pop
xchg
cli
call
sar
test
mov
sti
dec
xchg
mov
jnp
pop
sub
mov
mov
call
jg
aaa
aad
movs
cli
call
lods
mov
jnp
pop
sub
pop
sub
outs
mov
jnp
pop
sub
add
mov
jnp
pop
sub
pop
sub
addr16
pop
sub
pop
sub
pop
sub
fs
in
mov
jnp
pop
sub
pop
sub
mov
mov
mov
cld
lods
mov
call
lods
mov
adc
dec
xchg
out
or
les
icebp
push
hlt
mov
xor
adc
mov
or
in
adc
pop
test
leave
aas
arpl
pop
and
adc
ss
icebp
jle
scas
cmc
fwait
les
lods
cdq
jbe
dec
std
rol
repnz
mov
xchg
dec
retf
inc
pop
jmp
or
mov
mov
mov
mov
hlt
sbb
sub
dec
xchg
cs
mov
fnstsw
inc
mov
cmp
inc
cmc
sub
jbe
xor
dec
popf
cmp
xor
jecxz
sbb
mov
mov
mov
iret
jl
in
cmp
sti
imul
push
dec
ror
xor
push
icebp
std
inc
or
inc
mov
mov
fstp
(bad)
sbb
lea
leave
das
dec
cdq
iret
lds
pop
leave
das
cmc
mov
cmc
das
rcr
lea
aas
mov
frstor
(bad)
jnp
push
sub
inc
xor
lea
test
leave
cmp
mov
jg
push
cmp
push
or
shl
rol
sbb
mov
fstp
mov
fstp
movs
ss
cmc
mov
mov
icebp
mov
(bad)
or
leave
das
fisub
(bad)
cmps
cmc
sbb
jg
push
xor
mov
les
sbb
mov
jp
and
je
and
pop
loope
aaa
movs
dec
xchg
out
(bad)
xor
mov
push
jb
xor
mov
dec
fdiv
stc
addr16
and
(bad)
mov
dec
fdiv
sub
lahf
mov
dec
fdiv
mov
dec
fdiv
ss
push
sub
mov
dec
fdiv
xor
dec
fsub
mov
dec
fdiv
mov
add
fdiv
mov
dec
int3
loop
fwait
je
pop
add
and
pop
and
and
jle
pop
les
and
fldcw
cmp
fdivr
inc
les
and
push
xor
cmps
pop
jb
or
mov
sbb
mov
cdq
or
pop
les
pop
ss
mov
adc
pop
ss
mov
inc
xor
icebp
sub
ss
cmc
mov
sub
into
xor
mov
cmc
(bad)
fadd
(bad)
cmc
mov
xor
pop
mov
cmc
sbb
(bad)
(bad)
sar
or
adc
clc
inc
add
inc
sub
mov
sbb
mov
dec
leave
rcl
mov
push
mov
jb
sbb
(bad)
cmc
scas
iret
ret
pop
test
out
pop
in
cmp
cmc
sbb
(bad)
cmc
jl
ret
cmc
push
ss
cmc
and
(bad)
cmc
in
sub
pop
movs
and
rcr
inc
rcr
add
inc
sub
iret
rol
or
popa
sbb
dec
out
xchg
es
xchg
or
sbb
jmp
aas
das
and
sbb
cdq
jmp
ret
cmc
adc
cmc
cdq
sbb
loopne
push
mov
xor
adc
cmp
cmc
imul
out
loope
lock
cmp
add
in
imul
dec
xchg
out
jmp
pop
out
xchg
adc
adc
cs
mov
pop
adc
cmp
jecxz
out
call
ds
into
int
sbb
fs
sub
hlt
lock
and
sahf
int3
neg
cld
jp
into
(bad)
adc
add
adc
call
push
nop
cmp
ret
imul
mov
fst
cwde
mov
sbb
ret
ret
sbb
lods
call
movs
addr16
sub
ret
hlt
sbb
lock
sahf
lahf
into
imul
sahf
retf
sbb
xchg
or
loope
xor
neg
out
imul
in
sub
jmp
in
and
popf
jp
fs
out
and
outs
out
or
pop
loope
loope
gs
adc
lahf
and
fmul
pop
rol
push
ror
or
(bad)
pushf
retf
push
out
or
loope
add
nop
in
daa
adc
data16
adc
out
and
inc
jae
jne
jp
dec
jmp
imul
je
lds
add
pop
push
dec
jmp
imul
int
inc
dec
jmp
imul
je
inc
xor
int
dec
dec
jmp
imul
int
jae
jmp
imul
je
in
fild
pop
je
jmp
imul
fild
pop
je
jmp
test
ins
push
dec
(bad)
rcl
dec
pop
dec
dec
push
pop
mov
inc
fstp
push
sar
dec
cmp
dec
retf
retf
test
vminss
pop
je
faddp
jne
jmp
sbb
je
jmp
in
pop
je
jmp
lds
xor
jmp
imul
je
jmp
imul
mov
ret
repnz
sub
into
test
mov
ins
push
cmps
aad
jmp
pop
je
jmp
add
pop
je
jmp
imul
das
ret
(bad)
cmps
adc
mov
mov
ins
push
cmps
aad
jmp
imul
pop
je
mov
jne
popa
nop
cdq
movs
xor
dec
sub
mov
xchg
(bad)
jl
cmps
int
sub
xor
jmp
imul
je
jmp
push
jmp
imul
push
mov
retf
add
dec
pop
cmp
mov
jp
add
pop
push
dec
jmp
imul
jmp
imul
sub
dec
xlat
inc
test
hlt
stos
cli
inc
mov
test
mov
ins
push
cmps
fstp
jmp
imul
dec
daa
dec
dec
test
in
pop
je
jmp
gs
nop
sbb
dec
pop
jmp
imul
je
jmp
imul
je
stos
cli
je
add
adc
dec
retf
loop
push
stos
int3
sbb
inc
std
int
push
dec
pop
ins
xchg
dec
push
xor
xor
jnp
daa
pop
dec
dec
jmp
inc
push
jmp
ror
je
jmp
adc
nop
sbb
ja
int
data16
jmp
imul
je
aad
stos
add
popa
mov
js
pop
je
jmp
lds
dec
push
push
xor
mov
pop
retf
pop
je
jmp
imul
dec
push
jmp
imul
inc
dec
fld
inc
ror
cmp
inc
scas
jo
dec
dec
jp
jns
dec
xor
icebp
ror
stos
mov
jp
js
in
dec
test
xchg
or
dec
das
hlt
xchg
(bad)
pop
sbb
jmp
fldcw
loope
neg
adc
xchg
sub
in
adc
xchg
or
or
jmp
jmp
ins
in
retf
adc
addr16
jns
std
and
inc
hlt
punpckldq
into
sbb
in
in
std
push
xchg
adc
cmp
imul
sbb
push
sbb
and
outs
jno
outs
in
or
in
xchg
sbb
lods
neg
fs
gs
adc
mov
adc
out
cs
loop
sub
mov
jmp
out
(bad)
ss
jbe
jle
dec
push
adc
icebp
gs
sti
test
adc
popf
or
out
daa
mov
sbb
shr
outs
and
sub
(bad)
rol
out
add
push
out
or
adc
int
adc
and
fstp
push
or
iret
mov
in
outs
mov
test
leave
cdq
into
add
pop
dec
das
js
(bad)
iret
cmp
jmp
adc
adc
push
shl
mov
call
addr16
adc
and
jmp
addr16
ja
iret
pusha
fisubr
cmc
movd
ja
out
adc
in
loopne
(bad)
(bad)
cmp
std
shl
jle
hlt
(bad)
cmp
std
hlt
(bad)
sbb
push
rcr
hlt
(bad)
sbb
hlt
(bad)
sbb
hlt
(bad)
sbb
mov
(bad)
sbb
hlt
(bad)
sbb
hlt
sti
sbb
xchg
pusha
ss
push
cmc
(bad)
mov
std
hlt
(bad)
sbb
push
outs
sbb
cmps
loopne
fdivp
(bad)
sbb
hlt
(bad)
sbb
push
call
test
hlt
(bad)
sbb
add
sbb
push
out
jle
clc
dec
scas
and
lock
out
xor
sub
pop
ror
cmp
shr
pop
jg
scas
jo
(bad)
sbb
push
loope
or
cmp
push
shl
cmp
hlt
(bad)
sbb
pop
imul
shl
(bad)
cmp
std
hlt
(bad)
sub
(bad)
sbb
hlt
(bad)
sbb
mov
sbb
cmc
(bad)
sub
hlt
(bad)
sbb
hlt
(bad)
sbb
ret
std
hlt
(bad)
sbb
hlt
(bad)
sbb
hlt
(bad)
sbb
(bad)
cmp
out
fcom
(bad)
or
(bad)
sbb
hlt
(bad)
sbb
hlt
neg
std
hlt
(bad)
xchg
std
hlt
out
std
lds
shl
(bad)
sbb
hlt
(bad)
sbb
push
loopne
std
pop
loopne
fidiv
call
push
hlt
mov
std
hlt
(bad)
sbb
hlt
(bad)
sub
(bad)
sbb
(bad)
cmp
(bad)
or
hlt
xchg
std
rcr
xchg
push
loopne
out
hlt
(bad)
sbb
hlt
(bad)
sbb
hlt
(bad)
sbb
ret
push
shl
in
cli
loope
test
(bad)
cmp
std
hlt
(bad)
sbb
les
std
hlt
(bad)
sbb
pop
in
std
hlt
(bad)
cmp
std
pop
jmp
je
hlt
(bad)
cmp
std
out
jle
hlt
(bad)
cmp
std
jb
sbb
hlt
neg
std
fcmovnb
mov
hlt
(bad)
sbb
(bad)
sbb
retf
(bad)
mov
hlt
(bad)
sbb
(bad)
sbb
hlt
(bad)
mov
hlt
out
std
mov
mov
sahf
push
loopne
out
in
aam
loopne
retf
push
loopne
out
in
aam
rcl
mov
fist
jmp
loopne
ficomp
cmp
push
loopne
out
loope
mov
push
loopne
in
ficomp
mov
mov
out
pop
in
mov
ffree
popf
add
(bad)
xor
pop
sbb
outs
cdq
adc
aad
pop
sbb
call
call
adc
cmc
or
jmp
sbb
add
jmp
adc
(bad)
fcom
lahf
outs
test
jecxz
sbb
popf
xchg
rol
push
mov
cmp
std
(bad)
int3
or
sbb
lock
xchg
scas
ds
add
retf
add
imul
jns
jns
ins
mov
out
mov
pop
out
(bad)
cmp
sahf
js
fs
and
stos
test
sti
pushf
push
lahf
mov
ds
sar
adc
and
out
popa
jne
adc
adc
adc
push
sbb
mov
lahf
lds
fxch
sbb
out
adc
lock
lahf
pushf
aas
inc
jae
sbb
into
lea
pop
sbb
test
sbb
mov
iret
aaa
and
adc
cmp
in
and
cmp
loope
pop
adc
hlt
mul
or
cmps
out
fstp
fsubr
jmp
addr16
mov
movs
sub
cmp
imul
mov
push
loop
pop
gs
aad
int3
mov
push
loop
pop
gs
call
int3
call
iret
ja
lock
repnz
jg
xchg
lds
retf
mov
rcr
ja
in
sbb
into
cmp
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
sub
pop
mov
cmp
arpl
cmp
add
(bad)
loop
push
hlt
(bad)
aad
je
sbb
jmp
xlat
adc
mov
test
xor
(bad)
pop
and
por
call
xchg
xlat
adc
mov
test
xor
setnp
outs
sbb
cmp
sbb
xor
(bad)
cli
test
xchg
xlat
adc
mov
test
xor
(bad)
pop
adc
nop
call
jmp
xlat
adc
mov
test
xor
outs
sbb
cmp
sbb
xor
inc
push
or
test
xchg
xchg
push
sbb
xor
(bad)
pop
add
por
(bad)
cli
test
xchg
xlat
adc
mov
test
xor
outs
sbb
cmp
sbb
xor
sub
ret
mov
cld
cmp
mov
test
pop
jno
in
mov
sub
cmp
test
xor
cmovp
clc
les
mov
push
cmps
inc
cmp
xor
mov
adc
ficomp
xchg
xchg
sbb
call
cmps
sbb
cmp
cli
test
xor
nop
cmp
cdq
sub
xor
inc
mov
cmp
push
sbb
call
dec
sbb
mov
xor
sbb
clc
call
xor
sbb
xchg
call
(bad)
cmp
cmp
xchg
sub
xor
(bad)
pop
sbb
xor
(bad)
sbb
(bad)
pop
sbb
outs
mov
cmp
cmc
test
dec
pop
movs
sbb
xor
nop
mov
nop
call
xor
nop
call
xor
(bad)
pop
ins
sub
ret
mov
cld
cmp
cmps
inc
xchg
jmp
xchg
mov
xor
jecxz
fwait
das
jb
scas
and
xor
dec
sbb
mov
sbb
push
cmps
inc
cmp
xor
mov
xlat
mov
sub
ret
cmc
test
jmp
xchg
sbb
call
pop
mov
sub
loope
pop
cmp
(bad)
sbb
jb
ins
pop
ss
mov
pusha
adc
cli
test
xor
(bad)
jge
mov
pop
inc
inc
jmp
test
push
inc
add
cmp
sbb
xor
pinsrw
sbb
xor
pslld
clc
jmp
test
ret
mov
cld
cmp
mov
pusha
jb
ins
push
adc
mov
test
xor
movd
mov
ss
mov
xor
stc
test
xchg
mov
(bad)
loope
clc
jge
inc
xlat
cmp
clc
test
in
add
leave
sbb
xor
adc
loopne
sbb
call
fs
sar
push
add
loope
(bad)
pusha
mov
in
sub
sbb
sbb
imul
jno
lods
neg
cmc
fucomp
sub
mov
adc
adc
out
cmp
std
retf
out
dec
cmp
aas
jnp
or
in
lds
add
lahf
mov
xchg
sbb
adc
sahf
adc
xlat
outs
adc
ds
add
sbb
and
outs
sti
mul
jl
pop
loope
jmp
(bad)
das
push
les
(bad)
sahf
into
fucom
sbb
fs
sbb
cmps
push
retf
and
lds
fs
xor
movs
add
adc
into
mov
xchg
stos
add
lahf
jle
sub
jmp
cmp
or
pop
pop
jne
sahf
into
gs
sbb
sbb
in
std
sub
out
lds
fmul
mov
test
outs
or
cdq
adc
mov
out
or
sbb
test
and
neg
adc
and
loopne
cmp
jecxz
xchg
sbb
sbb
aas
out
int3
sbb
and
xchg
div
or
loopne
ins
xchg
lods
and
jge
xchg
push
fidivr
popa
jne
mov
and
lods
and
lods
and
fs
jge
pop
jbe
lods
and
and
or
xlat
popa
cmps
jmp
xchg
lock
xchg
gs
pop
jmp
or
jg
test
sbb
pop
je
mov
repnz
xor
test
jb
sbb
imul
sbb
imul
sbb
into
cld
pop
push
enter
push
test
push
rcl
addr16
sahf
jb
movs
outs
rol
push
shl
sbb
mov
sub
in
mov
(bad)
pop
fdivr
cmp
rol
inc
mov
pop
pop
push
or
movs
mov
je
xor
add
and
adc
cmps
jmp
out
ds
jmp
pusha
jl
rcl
(bad)
int
or
outs
or
jno
pop
add
sub
push
ret
mov
jmp
int
add
imul
push
jne
fld
mov
inc
ja
sub
pop
xlat
aas
pop
push
pop
cs
das
cmps
fsub
aam
xchg
lds
inc
mov
outs
and
mov
ja
mov
outs
loopne
dec
int
pusha
inc
repz
jb
movs
repnz
outs
adc
rcr
stos
sbb
cmp
shr
sub
mov
mov
pop
daa
inc
xlat
(bad)
jmp
cdq
pop
daa
inc
mov
dec
in
stos
pop
fild
push
mov
adc
cmp
jo
adc
adc
adc
dec
pop
and
inc
pop
push
dec
mov
add
test
enter
enter
leave
lea
dec
loop
add
xchg
dec
push
enter
retf
cmp
dec
xchg
adc
xchg
add
test
sbb
dec
dec
push
enter
enter
leave
fisttp
enter
enter
enter
or
dec
push
enter
retf
push
test
cs
retf
dec
scas
push
dec
push
enter
enter
enter
pushf
mov
enter
retf
fucom
ror
pop
add
(bad)
dec
push
enter
retf
fld
or
xchg
ds
xchg
dec
push
pushf
xchg
dec
push
enter
js
dec
push
enter
enter
retf
fld
add
(bad)
dec
push
enter
enter
out
push
dec
push
enter
retf
dec
xchg
lea
dec
push
test
dec
push
enter
leave
fisttp
push
xchg
dec
push
test
dec
push
leave
frstor
xchg
out
add
xchg
dec
push
test
dec
push
leave
frstor
cmp
test
xchg
jmp
mov
push
add
mov
test
(bad)
mov
add
and
mov
fnstsw
pushf
sbb
in
call
(bad)
sbb
sbb
in
call
(bad)
(bad)
sbb
in
call
movs
in
mov
push
std
outs
lock
sar
inc
(bad)
in
or
or
or
paddsb
loopne
lock
add
aam
dec
icebp
sahf
int3
push
push
sub
movs
push
cs
inc
rol
push
pushf
test
dec
mov
(bad)
or
sub
rcpps
shr
dec
inc
retf
push
sub
or
push
ror
shr
test
jb
sahf
popf
int
or
ins
movs
int3
mov
out
test
ret
rcl
push
ins
mov
xor
dec
mov
and
sub
rcr
inc
sub
mov
pop
addr16
ja
sar
test
sti
sbb
outs
loopne
je
adc
(bad)
daa
inc
push
ror
push
ret
icebp
sub
add
std
and
pop
push
adc
jnp
pop
cs
icebp
cmp
mov
outs
js
in
jb
pop
mov
outs
adc
and
jle
mov
add
cmp
(bad)
push
mov
inc
fist
in
movs
dec
shr
iret
lods
adc
retf
adc
cmp
mov
xchg
cmps
lods
cmp
addr16
cmc
cli
xor
adc
xchg
sub
xchg
int
mov
daa
inc
cmps
fild
push
pop
int
dec
mov
(bad)
cdq
mov
fild
adc
push
mov
scas
fstp
mov
scas
fstp
icebp
hlt
stos
push
in
loope
sbb
scas
fstp
mov
lods
lea
ins
(bad)
push
mov
scas
fstp
mov
scas
fstp
icebp
hlt
retf
push
in
loope
sbb
scas
(bad)
movs
lods
xor
mov
scas
fstp
mov
lods
fst
push
push
jmp
loope
dec
in
pop
jo
mov
scas
fstp
mov
dec
rcl
xchg
push
in
loope
push
in
loope
jo
loope
push
in
and
and
std
test
xchg
jo
loope
push
in
inc
sub
push
lds
push
in
xor
push
in
loope
bound
push
jl
xchg
push
in
sbb
xchg
push
in
jne
sub
xchg
inc
in
inc
daa
sbb
scas
fucomp
cli
inc
clc
ret
icebp
loop
sahf
in
hlt
jecxz
in
loope
(bad)
jl
mov
push
in
loope
inc
imul
test
loope
clc
(bad)
loope
inc
in
jno
push
loope
xchg
js
icebp
add
sub
push
int
pop
sbb
xchg
push
in
xor
and
inc
push
in
add
in
inc
test
mov
scas
fisttp
fstp
mov
scas
fst
out
jmp
xchg
sbb
scas
fstp
out
pop
push
in
loope
add
outs
push
mov
scas
fstp
imul
cmp
fbstp
sbb
scas
fstp
mov
in
gs
cmp
xchg
(bad)
pusha
shl
sbb
scas
fstp
mov
inc
mov
mov
scas
fstp
mov
scas
xor
mov
scas
fisttp
inc
je
mov
scas
frstor
mov
scas
fstp
mov
inc
dec
mov
jmp
xor
test
mov
scas
fstp
dec
scas
fld
sub
sbb
scas
fst
xchg
sbb
scas
fstp
dec
scas
fst
or
fstp
mov
inc
les
mov
scas
fst
lea
mov
scas
fstp
mov
inc
fsub
in
test
push
mov
scas
fstp
dec
scas
fst
loope
sbb
lods
fst
test
mov
scas
fstp
inc
scas
frstor
loope
xchg
hlt
bound
push
mov
scas
fucom
xchg
scas
xor
mov
scas
(bad)
push
lods
fstp
cmp
xchg
inc
in
(bad)
push
aad
xchg
push
mov
scas
fstp
mov
scas
jno
pop
not
ret
imul
lods
jno
mov
scas
(bad)
in
int
sbb
scas
fnsave
std
test
push
loop
push
pop
and
xchg
push
in
sbb
xchg
shl
xchg
stos
bound
ins
push
in
shl
cmp
mov
iret
adc
push
shl
push
shl
push
shl
push
shl
push
shl
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
in
in
movs
pop
rcr
jg
in
lock
in
in
movs
outs
shr
push
shl
xchg
mov
sub
inc
adc
push
dec
push
(bad)
pop
mov
leave
jmp
sub
adc
pop
mov
outs
mov
cs
pop
retf
(bad)
cmp
adc
ins
aad
pop
lods
ds
cmp
mov
outs
call
dec
cmc
and
sub
movs
adc
test
pop
(bad)
mov
push
push
mov
adc
ror
aam
in
dec
std
bound
inc
js
ins
dec
std
sahf
sub
mov
add
inc
pop
addr16
movs
sar
call
fimul
dec
xchg
fnstcw
pop
addr16
jnp
int
or
push
add
int
or
xor
mov
push
popa
shl
ds
pop
daa
inc
fbld
(bad)
cwde
lods
into
adc
test
or
ja
push
std
jb
stos
mov
fs
lods
ds
aam
add
dec
int
arpl
outs
cmp
shr
test
cli
add
xor
or
push
rcr
scas
ds
pop
pushf
outs
adc
jns
and
pushf
sbb
stos
push
pop
dec
icebp
stos
jbe
icebp
stos
(bad)
sub
stos
(bad)
sub
stos
(bad)
sub
xor
sti
sub
jecxz
dec
imul
and
push
pop
pop
scas
pop
aaa
push
mov
es
mov
mov
ret
aaa
out
sbb
js
jae
jne
aas
sti
xor
pop
xchg
ins
dec
sbb
cmp
jmp
imul
jp
(bad)
sub
sbb
or
mov
sub
stos
xor
mov
in
gs
mov
icebp
stos
add
ret
jl
sub
stos
add
ret
jge
sub
stos
add
mov
stos
es
jnp
std
std
jmp
icebp
stos
add
std
jnp
cmp
icebp
stos
loop
fnstsw
cmp
shl
std
mov
mov
gs
(bad)
mov
mov
test
es
sub
mov
in
gs
stos
mov
mov
in
gs
movs
push
test
out
sub
in
arpl
cld
sub
in
dec
gs
cld
jmp
stos
jnp
mov
in
gs
das
mov
icebp
stos
add
mov
in
gs
sub
mov
mov
mov
ret
bnd
rol
sub
pop
lock
cs
out
add
in
sbb
sub
mov
in
shl
mov
mov
in
sbb
sar
cmps
add
std
mov
and
dec
cmc
das
in
mov
aam
stos
jmp
lea
out
xor
stos
jmp
in
(bad)
out
lock
xor
cmp
pop
std
mov
add
lock
cmp
lods
out
aaa
iret
movs
push
rol
adc
das
lods
pop
(bad)
shl
shl
inc
dec
add
loopne
add
iret
push
dec
mov
sar
add
xchg
dec
push
sub
pop
lea
jmp
mov
cli
sbb
push
outs
aad
push
lods
lods
sub
sbb
push
sub
xor
mov
es
out
push
shl
inc
ins
loopne
mov
outs
xor
sbb
mov
and
pop
push
ror
ret
out
inc
mov
sub
or
push
retf
dec
es
dec
std
ret
inc
ins
loopne
hlt
shr
test
xor
aaa
or
sub
or
xor
xchg
leave
in
movs
inc
stos
movs
lods
ds
jecxz
das
adc
xchg
cmp
xchg
adc
loopne
pop
daa
sub
sub
push
test
add
adc
rol
jmp
push
pop
dec
mov
dec
std
push
leave
inc
push
adc
(bad)
loop
inc
fisubr
dec
std
add
jp
stos
push
into
pushf
mov
rol
xlat
push
jp
push
sbb
sub
mov
add
adc
xor
sti
cmc
xchg
push
dec
mov
movs
(bad)
or
xor
sbb
stos
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
(bad)
cmps
sbb
pop
cmps
fdivr
mov
fdivr
(bad)
test
inc
cmps
test
pop
adc
fmul
adc
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
sbb
sbb
das
adc
(bad)
aam
aaa
adc
or
mov
sbb
sbb
sbb
das
adc
(bad)
aam
pop
adc
or
mov
ror
aas
adc
inc
adc
or
inc
adc
or
sbb
sbb
das
adc
(bad)
aam
aaa
adc
mov
sbb
aaa
adc
adc
or
inc
adc
inc
adc
or
ret
adc
aas
adc
or
pop
adc
aaa
adc
or
inc
adc
inc
adc
or
pop
adc
or
mov
sbb
pop
adc
cmp
mov
or
pop
adc
or
or
enter
adc
pop
adc
or
or
pushf
or
adc
(bad)
int3
or
mov
mov
das
adc
or
(bad)
ror
inc
adc
or
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
(bad)
adc
ret
adc
or
scas
adc
or
pop
adc
or
aaa
adc
ret
adc
pop
adc
mov
sbb
mov
sbb
mov
sbb
inc
adc
or
sub
sbb
(bad)
fmul
aaa
adc
or
pop
adc
or
adc
dec
adc
or
xor
enter
lods
or
pop
adc
or
push
adc
lods
sub
or
lds
lds
pushf
inc
push
adc
pop
ret
pop
push
inc
lds
inc
push
adc
ins
push
adc
inc
lds
lds
inc
push
adc
mov
pop
push
inc
lds
inc
push
adc
mov
lds
lds
popf
inc
push
cmp
int
sbb
mov
sbb
pop
push
inc
lds
lds
imul
and
sub
sbb
or
adc
lock
(bad)
pop
push
or
lds
test
push
inc
fwait
sub
xor
adc
in
push
mov
lock
adc
pop
push
inc
lds
lds
inc
mov
dec
mov
mov
ins
mov
cmp
(bad)
pop
icebp
mov
adc
pop
push
inc
lds
jmp
pop
push
or
pop
push
inc
add
pop
test
push
inc
lds
pushf
in
cs
lods
and
sbb
xchg
loopne
(bad)
pop
push
or
lds
pushf
mov
lds
lds
mov
push
scas
and
sbb
cmps
enter
pop
push
or
lds
arpl
xchg
scas
lds
lds
vrcpps
adc
mov
lds
lds
inc
lds
lds
vrsqrtps
adc
or
pop
push
inc
inc
adc
cmp
sbb
(bad)
pop
push
or
lds
mov
cld
out
pop
push
inc
lds
push
adc
pop
test
push
scas
and
sbb
cmps
enter
pop
push
or
add
pop
cli
or
pop
push
inc
lds
sbb
ja
mov
xchg
adc
(bad)
lds
add
pop
cli
or
pop
push
inc
lds
sbb
ja
mov
xchg
adc
(bad)
lds
lds
lds
arpl
xchg
push
lds
lds
lds
mov
push
scas
and
sbb
cmps
enter
pop
push
or
lds
add
pop
dec
pop
push
inc
lds
sbb
ja
mov
xchg
adc
(bad)
lds
lds
add
pop
dec
pop
push
inc
lds
sbb
ja
mov
xchg
adc
(bad)
lds
add
pop
dec
or
mov
cld
or
pop
push
or
pop
push
inc
lds
lds
inc
imul
sbb
lds
lds
lds
inc
imul
push
dec
mov
dec
adc
add
lock
ja
sbb
mov
hlt
in
inc
repz
and
sbb
push
lock
(bad)
pop
push
or
lds
xchg
lock
mov
sbb
(bad)
pop
push
or
pop
push
inc
lds
xchg
add
xor
mov
sbb
lds
lds
mov
sub
retf
mov
or
xor
fld
or
or
push
leave
hlt
pop
retf
mov
push
lock
adc
pop
push
inc
lds
sbb
mov
or
lds
ja
mov
xchg
adc
lds
lds
lds
mov
adc
out
pop
movs
push
leave
hlt
mov
pop
movs
outs
or
lds
vrcpps
adc
in
dec
push
lock
adc
pop
push
inc
vrcpps
adc
hlt
fmul
lock
adc
pop
push
inc
vrcpps
adc
(bad)
fsubr
lock
adc
pop
push
inc
vrcpps
adc
aam
outs
sbb
mov
adc
pop
push
inc
lds
lds
sbb
ja
mov
xchg
adc
(bad)
lds
lds
add
pop
dec
jp
cmp
pop
out
lds
lds
inc
mov
out
mov
loopne
and
pushf
push
sbb
sub
retf
daa
push
or
and
pop
dec
sti
cmc
sub
retf
mov
adc
daa
mul
pop
(bad)
pop
push
or
lds
cmc
pop
push
inc
mov
dec
mov
jo
or
adc
mov
sbb
mov
or
pop
bound
and
pop
push
inc
lds
scas
xchg
push
ret
inc
jne
lock
mov
sbb
(bad)
pop
push
or
pop
push
inc
mov
add
lds
mov
adc
mov
lds
imul
push
lock
dec
out
(bad)
movs
imul
push
inc
lds
lds
push
mov
clc
outs
lds
lds
inc
imul
push
inc
lds
mov
push
repnz
pop
push
or
lds
icebp
outs
rcl
mov
push
out
xlat
mov
sbb
mov
adc
pop
push
inc
lds
and
push
jbe
adc
lock
leave
mov
push
pop
lock
adc
pop
push
inc
lds
lods
ja
sbb
inc
lock
(bad)
pop
push
or
lds
pop
cmc
xor
(bad)
pop
push
or
(bad)
cmps
sbb
pop
sub
mov
dec
(bad)
test
or
mov
sbb
or
test
jnp
retf
adc
inc
lds
lds
jge
push
and
pop
push
inc
vrsqrtps
adc
lds
lds
lds
jne
rcr
test
push
or
lds
or
imul
fisub
pop
push
inc
lds
lds
mov
adc
and
mov
imul
sbb
or
lds
lds
or
call
push
inc
lds
mov
adc
xchg
sbb
add
mov
(bad)
inc
ins
adc
mov
xchg
in
sti
cmc
loopne
ja
sbb
xchg
adc
inc
lds
or
adc
lds
lds
lds
inc
pop
xor
or
mov
push
je
mov
xor
(bad)
sbb
xchg
adc
lds
lds
jne
push
inc
mov
push
out
xlat
enter
pop
push
or
jne
push
inc
xchg
adc
inc
lds
sub
stc
or
iret
loopne
(bad)
pop
push
or
sub
push
inc
mov
lods
jmp
adc
xchg
adc
call
lds
cmp
xor
(bad)
pop
push
or
lds
inc
ss
inc
(bad)
pop
xor
lds
lds
mov
call
fsubr
lods
out
xchg
sbb
or
mov
adc
pop
push
inc
lds
lds
push
dec
cmc
lock
pop
or
ja
sbb
xchg
adc
inc
lds
lds
arpl
cdq
push
lds
lds
and
push
add
push
or
lds
xchg
add
movs
in
adc
or
pop
push
inc
jns
push
inc
mov
(bad)
in
pop
push
inc
lds
lds
mov
xor
(bad)
pop
push
or
mov
clc
lds
vrcpps
les
lds
lds
movs
in
inc
mov
sbb
lds
test
inc
mov
xor
(bad)
pop
push
or
pop
push
inc
lds
mov
cli
mov
mov
pop
lock
sbb
mov
adc
pop
push
inc
lds
fcmove
push
scas
ja
sbb
mov
sbb
adc
push
inc
lds
lds
inc
arpl
mov
lods
sub
pop
or
arpl
leave
or
out
pop
movs
outs
or
lds
lds
lds
inc
mov
adc
imul
push
or
add
pop
ret
pop
push
inc
pushf
jb
adc
pop
ret
pop
push
inc
pushf
xchg
push
adc
pop
push
or
pop
push
inc
pushf
mov
ror
push
or
pop
push
inc
lds
inc
push
or
sbb
mov
dec
ror
outs
sbb
mov
adc
pop
push
inc
lds
xchg
adc
stos
sub
sbb
mov
(bad)
ins
adc
cld
(bad)
sbb
adc
pop
push
inc
lds
vrcpps
cmc
xor
(bad)
pop
push
or
movs
in
inc
mov
in
jmp
pop
push
inc
lds
fwait
adc
push
lds
vrcpps
in
dec
pop
push
inc
lds
or
repnz
clc
shl
pop
push
or
ins
mov
mov
or
pop
push
inc
sbb
jmp
pop
push
inc
lds
lds
push
adc
inc
lds
lds
jns
push
mov
pop
push
or
lds
imul
outs
lds
lds
pushf
repnz
adc
pop
test
push
inc
imul
or
adc
lds
lds
pushf
and
mov
cld
or
pop
push
or
pop
push
inc
lds
lds
inc
push
or
sbb
mov
int3
rol
outs
sbb
mov
adc
pop
push
inc
pushf
stos
push
adc
pop
push
or
pop
push
inc
lds
lds
or
bound
mov
lods
ja
sbb
mov
cld
jmp
inc
mov
xchg
adc
lds
lds
xchg
add
aam
je
jecxz
lds
lds
arpl
mov
lods
sub
pop
or
ins
adc
in
mov
pop
movs
outs
or
lds
lds
lds
pop
loop
cmp
pop
out
lds
jno
push
add
mov
sbb
out
inc
movs
outs
or
lds
lds
push
lds
lds
inc
pop
pop
in
cmp
adc
cs
ins
lahf
mov
enter
or
adc
adc
out
enter
or
in
pop
enter
fimul
adc
jg
loopne
popa
vmovhpd
mov
mov
out
cwde
push
ins
call
clc
cwde
push
out
mov
add
jno
dec
icebp
(bad)
outs
dec
push
(bad)
bound
mov
push
lds
xor
cmps
cwde
ret
lea
ret
int3
clc
dec
hlt
jbe
(bad)
shl
mov
loope
mov
stos
inc
push
sbb
xlat
repnz
test
movs
dec
or
(bad)
out
dec
cmc
mov
in
movs
cmps
inc
or
push
sub
xchg
lahf
mov
add
hlt
test
sub
dec
mov
sbb
inc
sub
add
sub
inc
ret
xchg
out
or
jns
push
bound
lods
movs
pop
imul
jp
iret
xor
cmps
loopne
mov
ds
dec
(bad)
mov
and
jnp
dec
xchg
fcos
push
push
xlat
add
ins
int
or
sub
push
(bad)
dec
std
dec
pop
addr16
pushf
das
cld
dec
cmc
bound
pop
push
rol
lods
adc
and
pop
cs
outs
mov
and
scas
ds
fidivr
fs
aam
icebp
pop
add
ror
movs
inc
dec
and
push
psubb
sbb
jmp
neg
cmps
pop
jle
jne
icebp
sbb
clc
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
mov
loop
int3
popa
jbe
hlt
cmp
xor
dec
xor
xor
xor
inc
cmp
clc
lea
popf
cmp
jl
sub
shl
xor
cmp
cmp
test
mov
test
mov
cmp
ja
mov
int
out
xor
xor
lock
mov
mov
hlt
cmp
adc
repz
dec
test
xor
xor
cmp
adc
xchg
cmp
cmp
xchg
cmp
lods
popa
mov
pop
lock
jecxz
int3
cmc
cli
ins
cld
dec
jmp
int3
popa
ja
cmp
jge
cmc
ss
cmp
clc
mov
xor
dec
xor
xor
cmp
jge
cmc
ss
cmp
cmp
fs
test
retf
pop
pushf
xor
or
mov
sub
ins
dec
dec
ret
dec
les
ret
clc
test
clc
test
sti
ins
mov
cmp
push
iret
stc
fnstcw
mov
cmp
mov
dec
clc
jge
inc
hlt
cmc
out
jge
and
ja
lods
dec
fistp
hlt
scas
sbb
adc
gs
jo
jne
inc
ror
jo
jge
cmp
stc
loope
stos
inc
in
popa
iret
xor
jecxz
lea
mov
xor
mov
fcomp
stc
test
ins
and
inc
dec
inc
repz
push
repz
lea
sub
sub
sti
pusha
pushf
popa
ja
hlt
jns
sub
and
fdiv
jo
cmp
cmps
pop
hlt
cmc
cmps
xor
aam
sar
and
xor
and
sti
sub
int3
pop
ja
lock
mov
in
cmp
add
(bad)
cmc
(bad)
sbb
sub
lds
xor
push
repz
int
jecxz
fmul
dec
in
sub
clc
jns
stc
stc
inc
jecxz
dec
dec
scas
xor
dec
push
sti
xor
dec
dec
(bad)
and
cmc
mov
dec
xor
inc
in
gs
int
(bad)
ins
test
and
and
inc
test
fidivr
push
mov
stc
test
xor
mov
stc
xchg
popa
mov
stc
fnstenv
dec
int3
jno
sbb
cmp
fmul
cmp
cmp
test
mov
call
inc
jecxz
xchg
sub
clc
jmp
popa
(bad)
dec
int3
cmc
bnd
dec
out
lock
mov
ins
cld
push
cmps
pusha
and
hlt
popa
jecxz
hlt
inc
ja
cwde
inc
mov
test
sbb
hlt
dec
sar
cdq
inc
jecxz
fcom
stc
aad
mov
pop
fdivr
cmps
pop
int3
cmp
ret
sub
dec
inc
jecxz
nop
jns
sub
popa
cmps
jge
cmc
cmps
xor
retf
jne
ins
mov
sub
and
clc
std
xor
dec
int3
dec
ja
fsub
ja
xor
jmp
jns
stc
std
cmp
sub
jno
je
dec
ja
fsub
cmp
jno
pop
les
ja
cmp
in
gs
lock
sbb
gs
xchg
inc
(bad)
pop
aam
(bad)
gs
fs
imul
imul
je
adc
lods
sub
jge
cmc
cli
inc
dec
jo
sub
jno
sbb
add
rcl
jne
jno
pop
clc
dec
ja
lods
dec
scas
stc
ror
fdiv
fs
adc
adc
(bad)
cmc
fiadd
pop
mov
ins
dec
xor
inc
hlt
cmp
xor
jecxz
fdiv
sar
jno
stc
cdq
jno
ins
adc
hlt
cmp
lock
mov
fdivr
sti
pop
(bad)
cmc
ret
pop
jecxz
fadd
jne
cmp
cli
ins
dec
pop
shl
loope
mov
cmp
dec
ja
test
mov
sub
mov
pop
hlt
adc
dec
cmp
dec
int3
cmp
pop
int3
dec
cmps
jge
cmc
mov
test
mov
push
hlt
cmp
call
cmc
mov
inc
cld
jge
stc
xchg
popa
mov
xor
jecxz
cld
push
sti
stc
test
push
fadd
fs
adc
int3
and
ja
int3
pop
retf
inc
xchg
cmc
cli
sbb
aam
loop
dec
inc
jecxz
les
inc
dec
pop
jecxz
in
ror
cmc
(bad)
stc
mov
adc
ja
fsub
inc
fdiv
bnd
cmp
xor
jo
pop
aam
iret
stc
jmp
jno
ins
dec
dec
mov
jge
cmp
stc
shl
hlt
dec
retf
je
dec
ja
fsubr
pop
cwde
cmc
(bad)
stc
loope
xlat
inc
lock
xlat
jo
adc
hlt
inc
(bad)
sbb
adc
fdivrp
mov
sbb
les
mov
in
xor
fcomp
mov
jge
jns
xor
in
pop
mov
ins
or
dec
dec
jecxz
fdivr
push
dec
push
sti
push
fadd
xor
cmc
(bad)
sbb
lock
mov
stc
ror
lock
dec
hlt
jno
sub
dec
mov
xor
mov
dec
clc
inc
sar
and
ins
lock
jecxz
les
ins
test
xor
cmc
inc
dec
out
fdiv
mov
inc
fsubr
stc
loope
mov
dec
int3
adc
stc
fst
jno
push
repz
dec
ja
dec
cmp
xor
cdq
dec
iret
ins
adc
xor
ins
dec
push
iret
inc
aam
repz
les
inc
dec
jo
inc
fsubr
popa
dec
jo
inc
cwde
sub
stc
shl
in
push
jmp
shl
ins
fcom
ja
fsubr
repz
cmc
mov
inc
xor
jo
dec
ja
lods
gs
cmp
cmc
mov
inc
xchg
jge
stc
rol
int3
push
jmp
dec
fs
lock
retf
inc
dec
cmp
ins
test
xor
jecxz
fadd
stc
std
dec
iret
inc
in
push
out
dec
push
shl
push
iret
sub
mov
mov
dec
xor
inc
lock
repz
test
sbb
lea
cmp
xor
pop
fdiv
xor
inc
ja
test
mov
sbb
retf
sbb
mov
jge
cmc
mov
and
inc
add
test
ja
lock
inc
clc
inc
ja
adc
test
bnd
popa
iret
inc
cwde
cmc
ret
push
jecxz
cwde
sub
mov
and
sub
stc
loope
(bad)
cmp
jno
push
dec
sub
inc
lock
stc
lds
xor
aad
(bad)
imul
dec
ja
fsub
out
lock
fistp
ja
pushf
jno
jge
cmc
fidiv
pop
ja
hlt
jno
dec
pushf
dec
ja
lods
cmp
repnz
lock
jecxz
xor
aad
iret
dec
test
jge
cmc
ret
push
mov
inc
dec
cmp
xor
jns
stc
jmp
dec
retf
stc
xchg
cmp
(bad)
xor
popa
ja
xor
lds
sub
jno
stc
std
push
iret
imul
imul
pushf
popa
ja
and
xor
jecxz
fdiv
stc
aad
repz
dec
dec
(bad)
sub
and
sub
and
out
sub
adc
lock
ret
ins
lock
out
dec
dec
shl
fadd
inc
hlt
cmp
out
xor
jecxz
fsubr
xor
jecxz
fsubr
push
int3
dec
ja
fdivr
sub
dec
ins
shl
cwde
and
jecxz
in
dec
mov
int3
popa
ja
clc
dec
sar
add
xor
hlt
and
repz
lock
pop
fdiv
mov
inc
test
rol
and
jno
gs
aad
jecxz
cwde
push
repz
cmp
cmp
fdivr
ja
sub
push
fcomp
dec
lods
cmp
cli
xor
jecxz
sar
lea
xor
cmp
inc
nop
cmc
(bad)
xor
fdivr
repz
popf
cmp
ror
ja
int3
and
stc
lds
cmp
dec
retf
push
adc
(bad)
cmc
cmps
xor
jecxz
mov
stc
rol
push
in
and
stc
mov
push
in
dec
retf
dec
pushf
popa
ja
dec
js
sbb
(bad)
and
adc
sbb
cmp
sub
dec
pop
shr
hlt
imul
cmp
mov
popa
dec
dec
out
xor
cmp
shr
pusha
repz
pop
repz
std
jno
pop
les
pusha
xor
jmp
dec
cmps
pop
int3
imul
test
jmp
inc
retf
je
cmp
repz
hlt
stos
and
sub
sbb
cmc
into
inc
dec
push
repz
sub
mov
stc
test
adc
sbb
xchg
jne
dec
sar
dec
mov
popa
jmp
cmc
ret
jno
sub
dec
mov
inc
cmp
cld
cmc
cmps
sub
repz
cmp
sub
xchg
push
out
in
jno
stc
mov
jne
popa
repz
shl
pop
dec
push
mov
stc
lea
xor
adc
jo
jns
sbb
lock
retf
dec
mov
inc
test
sub
dec
dec
jecxz
xchg
adc
imul
adc
test
xor
cmc
(bad)
xor
in
retf
cmp
hlt
mov
clc
lds
mov
jge
dec
(bad)
and
adc
mov
stc
cdq
push
iret
sub
popa
mov
imul
popa
ret
je
cmp
scas
inc
hlt
cmc
scas
inc
dec
fs
and
sub
inc
dec
cmp
ins
test
(bad)
pop
xor
jl
popa
ja
hlt
dec
(bad)
ins
test
cmps
xor
jecxz
cwde
sub
stc
shl
in
popa
repz
cmp
fcom
repz
cmp
jecxz
lock
ja
fmul
sub
lea
les
mov
stc
int
mov
inc
lock
ficomp
jno
xor
dec
ja
lods
push
mov
fdiv
mov
inc
cwde
cmp
xor
and
mov
xchg
cmc
mov
cdq
popa
mov
fs
cmp
lock
mov
ins
xor
(bad)
cmc
fidiv
lods
cmc
out
xor
sar
mov
sbb
mov
ins
nop
cmp
cmp
dec
mov
ins
les
stc
fnstcw
gs
dec
jmp
fsub
inc
fsubr
sub
lods
xor
jo
popa
ja
xor
clc
cmc
(bad)
xor
iret
pop
cwde
cmc
(bad)
ins
test
pop
xor
ins
dec
shr
and
sub
cmp
jmp
int3
cmc
(bad)
inc
dec
sub
imul
jno
pop
mov
scas
stc
int
mov
xor
cmp
jmp
cdq
adc
int
cmps
pop
pushf
cmp
ja
mov
and
cmp
jecxz
in
dec
out
dec
inc
mov
inc
out
in
push
(bad)
xor
fadd
jne
push
repz
int3
cmc
mov
cld
dec
cmps
jge
cmc
out
hlt
popa
ja
int
fld
int3
and
ret
inc
clc
jns
xor
cmc
(bad)
stc
mov
sub
inc
repz
dec
dec
mov
xor
cmc
inc
dec
sti
jge
ins
mov
stc
std
and
push
dec
jo
push
int3
push
jecxz
dec
sub
cmp
popa
mov
sub
cwde
cmp
jge
cmc
jmp
gs
xchg
inc
(bad)
sub
in
and
cmps
jge
cmc
cli
xor
jecxz
cwde
cmp
dec
shl
sub
mov
and
cmc
fiadd
and
xor
pop
retf
xor
cmc
mov
dec
fdiv
jl
xor
les
xor
jno
jno
popa
(bad)
cmp
hlt
mov
loope
mov
in
popa
mov
ins
dec
and
xor
cmp
jo
adc
call
push
cmps
inc
fmul
and
adc
dec
push
cmps
inc
lock
xor
sar
mov
xor
lods
dec
ja
lods
adc
xor
jge
xor
popa
ja
lock
loop
lock
ja
lock
mov
inc
lock
repnz
xor
push
fsub
sar
cmc
loop
fadd
and
cmp
fild
cmc
mov
dec
push
sti
xor
jns
pop
lock
jno
popa
ret
jo
cmp
(bad)
xchg
push
iret
popa
dec
dec
(bad)
ins
fdivr
stos
sub
and
mov
stc
cmc
dec
jmp
lock
(bad)
jo
popa
ja
clc
dec
retf
stc
fst
iret
push
call
pusha
repz
and
repz
cmp
cmps
xor
push
repz
dec
ja
aam
shr
cmc
out
dec
and
ins
aam
mov
inc
in
xor
ja
dec
pusha
iret
ins
int3
gs
and
dec
dec
jmp
mov
ins
lock
(bad)
pop
dec
and
jne
inc
sar
push
jmp
aam
ret
dec
mov
gs
push
iret
and
and
xor
cmc
cmps
sub
out
dec
pop
jecxz
in
ror
and
xor
inc
rep
clc
cmp
xor
cmp
inc
fcom
stc
lea
mov
xor
jns
imul
repz
cwde
cmc
(bad)
mov
ret
ins
int3
dec
ja
dec
push
jecxz
in
adc
fmul
stc
icebp
push
iret
xor
in
dec
ja
lock
ja
add
clc
popa
ja
hlt
jno
sbb
adc
ret
stc
stc
push
iret
pop
test
sub
popa
ja
cmp
jbe
int3
dec
stos
stc
aad
(bad)
dec
dec
push
mov
stc
test
push
fsub
sti
pusha
hlt
cmp
out
hlt
push
push
dec
ja
fdiv
pusha
int3
cmp
test
je
adc
les
jge
cmc
cli
ins
dec
cmp
xor
inc
repz
lds
mov
inc
int3
adc
call
jo
sbb
cmc
mov
jge
jns
stc
jmp
dec
cmps
fsub
xor
clc
cmp
lock
xchg
stc
and
je
imul
fsub
ins
cmp
dec
in
cmc
mov
jne
push
jmp
lds
dec
fdiv
dec
int3
dec
ja
aam
scas
stc
test
cmp
inc
shr
dec
dec
retf
jge
gs
test
in
mov
sbb
xchg
xor
pop
mov
stc
fnstcw
jecxz
cld
cmp
mov
xor
inc
ja
fdiv
pop
hlt
adc
dec
inc
jecxz
cwde
inc
retf
jge
jo
jge
jno
sub
loope
sti
dec
lods
push
ret
cmp
cmc
mov
jge
cmc
cli
pop
lock
(bad)
je
jno
sub
popa
repz
jmp
popa
(bad)
je
xor
int3
inc
retf
stc
shl
imul
adc
les
stc
sbb
inc
hlt
cmc
jmp
cmp
stc
int
xchg
imul
ins
ja
fdivr
pusha
clc
cmp
lods
and
jge
cmc
(bad)
pop
dec
jo
ins
mov
cmps
inc
dec
push
jecxz
test
stc
std
popa
mov
xor
dec
push
jecxz
in
repz
popf
hlt
mov
cmp
and
jo
cmp
(bad)
jl
cmp
call
pop
fld
jno
jo
jno
pop
int3
gs
lock
scas
xor
pushf
cmc
into
sub
mov
inc
lock
(bad)
stc
fldenv
gs
dec
mov
xor
adc
std
sub
cmps
inc
cmp
stc
std
and
iret
dec
hlt
xor
fsubr
(bad)
stc
mov
pop
ror
dec
pusha
repz
mov
sar
cdq
inc
jecxz
dec
cmp
clc
shl
push
lock
xor
xor
stc
xchg
jno
pop
lock
(bad)
stc
imul
inc
in
inc
repz
popa
ja
lock
jl
jno
jge
cmp
pop
lock
into
inc
fsub
ja
fsubr
repz
cmc
stos
stc
aad
mov
dec
fsub
mov
dec
xor
ins
add
cwde
cmc
retf
dec
call
test
xchg
stc
stc
adc
repz
shl
int3
jno
stc
lea
cmp
xor
iret
sub
pusha
ret
xor
push
repz
lock
scas
inc
cwde
jns
sub
dec
cmp
dec
dec
jo
jne
inc
repz
hlt
cmc
mov
jge
jno
xor
mov
stc
rcr
fdiv
cmp
cmp
repz
std
cmp
sbb
dec
jo
inc
mov
cli
stc
xchg
sbb
out
test
mov
jge
cmc
scas
jge
push
iret
adc
inc
retf
stc
test
shr
push
mov
stc
int
iret
ins
or
dec
cmp
pop
les
inc
pushf
cmc
cli
xor
rep
cmp
fmul
inc
lock
(bad)
jo
imul
xor
jge
cmc
out
sbb
test
jo
popa
ja
clc
jno
inc
in
cmc
loop
dec
push
mov
cmp
mov
cmp
repz
fcomp
sub
cmp
dec
and
dec
hlt
cmc
(bad)
ins
dec
dec
out
rcr
jne
cmc
mov
and
inc
retf
stc
std
inc
xchg
xor
dec
jo
popa
rcr
sbb
mov
cmp
cli
pop
lock
(bad)
pusha
and
clc
jno
stc
rcl
lods
dec
retf
inc
in
cmc
mov
dec
fdivr
ja
fdivr
mov
inc
xchg
cmp
push
mov
lds
xor
dec
jecxz
test
stc
and
jge
cmc
out
xchg
gs
sub
out
pushf
cmp
inc
fadd
cmp
inc
ja
hlt
cmp
ins
add
fdiv
(bad)
xor
call
jo
jge
ins
mov
gs
jecxz
fst
pop
test
dec
mov
repnz
test
cmp
iret
push
cld
and
cmp
popa
ja
les
repz
and
sub
sub
dec
inc
ret
xor
xor
jecxz
fsub
pop
dec
cmp
ins
fsubr
ins
and
ins
fdiv
mov
cmp
pop
mov
sub
dec
rep
dec
inc
rcr
cmp
jge
and
cmp
push
ja
dec
cmp
inc
in
repz
shl
aam
dec
push
mov
stc
xchg
dec
mov
hlt
push
iret
stc
test
mov
cmp
and
cmps
pop
hlt
jno
sub
and
sub
cwde
cmc
mov
test
inc
lock
ret
fs
hlt
cmp
stc
shl
mov
dec
dec
pusha
repz
aam
jecxz
dec
and
xor
inc
repz
and
pusha
clc
xor
dec
jo
sbb
inc
repz
sar
in
adc
fdiv
(bad)
ins
lods
gs
pop
test
scas
inc
dec
push
retf
push
fdiv
retf
xor
ins
rol
inc
repz
jns
inc
lock
mov
cmp
inc
ja
fdivr
inc
fdiv
rol
push
repz
lds
xor
dec
dec
cmc
cli
inc
lock
cmps
inc
hlt
cmc
(bad)
ins
dec
push
iret
dec
pushf
adc
mov
dec
int3
cmc
cli
ins
dec
push
mov
jge
ror
and
xlat
xor
inc
repz
pushf
cmp
sub
out
fldenv
iret
and
cmp
out
mov
ret
xor
push
repz
xchg
dec
iret
inc
lock
mov
jne
ins
mov
imul
jmp
pusha
out
inc
lock
mov
ins
fsubr
xor
fdiv
jmp
dec
mov
cmp
push
int3
cmc
out
pop
test
sub
fsub
(bad)
xor
in
cmp
xor
push
jmp
fsub
pop
cwde
cmp
mov
int3
cmp
ja
or
xor
xor
xchg
push
hlt
inc
shl
hlt
cmc
(bad)
ins
dec
dec
fld
cld
push
sar
xor
pusha
add
fcom
pop
cld
cmc
mov
sbb
cwde
inc
shl
shl
jno
jl
push
fmul
cmp
gs
shl
ror
in
and
sub
xlat
sub
int3
cmp
test
dec
fdiv
loop
in
jns
xor
jns
gs
jno
stc
shl
stc
shr
cwde
cmp
iret
dec
rcr
dec
cld
sub
gs
push
iret
push
fsub
pop
aam
inc
inc
rep
xor
cmp
cwde
cmp
inc
fadd
jge
cmc
(bad)
stc
fldenv
inc
fcom
xor
adc
fmul
jo
cmp
iret
inc
hlt
cmc
ret
pop
rol
jns
pop
pushf
adc
lock
cmps
xor
imul
fst
jne
and
inc
clc
dec
ja
int3
push
scas
dec
in
cmc
(bad)
cmp
test
adc
ret
stc
int
jmp
in
inc
shl
jno
jge
jl
pop
xor
inc
in
imul
ins
dec
dec
mov
dec
dec
cmp
xor
cwde
xor
bnd
jno
ins
xor
les
pop
shl
sub
repnz
int3
sbb
fdivrp
int
mov
and
dec
dec
mov
xor
jecxz
in
jns
stc
cmp
(bad)
ins
dec
push
out
clc
jge
pop
int3
cmp
mov
jge
cmc
jmp
cmp
clc
xchg
cmp
ret
and
and
mov
xor
jecxz
clc
jge
test
dec
int3
cmc
cli
pop
les
mov
inc
dec
xor
jne
jno
stc
cdq
cmp
mov
inc
xor
sbb
fdiv
jo
cmp
iret
sub
and
shl
fadd
inc
hlt
cmp
ja
dec
and
clc
fnstenv
jecxz
shl
ins
lock
mov
stc
lds
xor
jno
cmp
sti
ins
cld
cmc
into
pop
test
jge
cmc
jmp
cmc
inc
and
ins
nop
jns
dec
fsub
inc
lock
mov
les
cli
xor
retf
sub
popa
repz
in
popa
ja
fdivr
inc
clc
cmc
mov
dec
cld
jns
gs
push
iret
sub
inc
ror
push
jecxz
lock
(bad)
dec
lock
xor
cmc
repnz
mov
pop
fdivr
mov
int3
popa
mov
inc
cwde
cmp
ja
fdivr
ins
nop
cmc
out
dec
push
(bad)
fsub
stc
fisttp
pop
add
int3
popa
ja
lock
(bad)
and
fdiv
repnz
shr
gs
retf
xor
adc
lods
jno
and
hlt
cmp
shr
test
mov
pop
cwde
push
jmp
hlt
cmc
mov
dec
xor
cmp
xor
ja
int3
sub
stc
lds
cmp
popa
mov
pop
hlt
cmp
jecxz
in
retf
stc
xchg
popa
mov
dec
fsub
dec
dec
ja
int
repz
dec
repz
popa
mov
ins
fdiv
cmps
inc
les
and
js
stc
lea
out
mov
mov
in
xor
int3
cmp
jecxz
lock
xchg
dec
hlt
sub
ja
dec
dec
out
xchg
cmp
jno
cmp
gs
cmp
jne
inc
out
int3
and
jecxz
cmp
jne
ins
repz
in
cmc
loop
fcomp
ja
cdq
cmp
xor
add
fsub
inc
clc
cmc
stos
jge
ins
mov
fcomp
ins
cmp
ins
int3
xlat
jl
gs
les
stc
xor
stc
ror
int3
jno
jl
inc
ja
int3
adc
cmp
xchg
cmp
inc
dec
inc
repz
les
stc
xchg
pop
mov
inc
nop
cmc
ret
push
jecxz
fcom
xor
gs
xor
pusha
adc
jne
jno
sub
cmc
mov
xor
adc
fmul
dec
int3
cmp
ret
sub
cmc
mov
sub
sub
mov
sub
fdivrp
aad
xchg
jne
jno
xor
jno
xor
stc
dec
mov
stc
or
xor
jns
jne
dec
shl
inc
sar
jmp
popa
iret
stc
jmp
jno
cmp
jno
jge
jns
jl
gs
lock
mov
jne
ins
jecxz
in
cmc
mov
pop
lock
ja
nop
push
iret
stc
test
and
popa
mov
sub
and
xor
repz
cwde
jge
xor
jecxz
in
pop
repz
popa
ja
lock
iret
pop
lock
mov
jne
cmp
jne
inc
repz
sub
dec
push
retf
stc
cdq
adc
sub
jno
cmp
dec
ja
dec
cmp
sbb
and
ja
cwde
inc
(bad)
jge
cmc
mov
sub
xchg
and
cmp
cmp
fmul
stc
mov
mov
inc
xchg
ins
(bad)
xor
in
jns
clc
test
mov
in
mov
inc
dec
xor
and
inc
retf
inc
lods
cmp
inc
inc
rcr
cmp
pop
lock
xor
mov
ins
clc
push
jecxz
in
cmp
cmp
inc
lock
cli
ins
dec
dec
shl
cwde
and
cli
xor
cmc
stos
jge
ins
jmp
int3
imul
test
dec
ja
fdivr
clc
loope
mov
fsub
rcr
cmc
into
xor
jecxz
fsubr
retf
cmp
dec
ja
test
stos
dec
mov
repnz
hlt
and
jecxz
fcom
jge
cmc
(bad)
sbb
fdiv
out
sbb
in
xor
cmps
inc
fdiv
out
test
sbb
fdiv
jge
cmc
ret
push
shr
cmc
scas
jge
pusha
cmps
inc
in
sar
lds
inc
cwde
dec
xchg
dec
hlt
popa
ja
dec
dec
mov
stc
jmp
popa
mov
sub
inc
jecxz
mov
ins
mov
mov
lds
shr
or
ror
dec
jo
xor
lea
popf
cmp
sbb
xor
sub
sub
and
xor
dec
fmul
and
mov
clc
cdq
cmp
mov
xor
loopne
jmp
rcr
ins
lock
mov
sub
shr
cmc
cmps
xor
cmps
jge
cmp
cmp
cmp
jge
cmc
repnz
fnsave
pop
mov
pusha
iret
jge
cmc
mov
mov
mov
and
and
pop
test
dec
inc
sar
jmp
popa
(bad)
xor
xor
clc
lods
cmp
cmp
hlt
mov
fsub
ja
xchg
cmp
imul
cmp
sub
sub
imul
xor
jge
cmp
and
xor
xor
cmc
fiadd
cmp
inc
hlt
cmc
jmp
inc
retf
clc
fnstcw
jecxz
pushf
cmp
iret
cmp
cmc
mov
stc
xchg
jno
dec
fcom
inc
dec
ins
retf
xor
xor
sub
cmp
clc
lea
adc
cmp
xor
sub
xor
xor
jl
ins
ja
popf
cmp
jl
sub
xchg
stc
lea
cmp
xor
je
xor
clc
dec
sti
ins
dec
jo
adc
xchg
je
jns
dec
hlt
ins
jecxz
xchg
inc
ja
and
and
inc
retf
cmp
and
test
stos
stc
int
xchg
cmp
cwde
cmp
dec
and
sub
popa
mov
cmp
in
cmp
pop
int3
popa
mov
cmp
clc
cmp
lock
xchg
xor
jecxz
les
inc
lock
(bad)
jo
jno
ins
cwde
cmp
dec
clc
jge
inc
(bad)
cmc
mov
cmp
cmp
sub
cmp
dec
clc
and
sti
xor
xor
jo
cmp
dec
jl
sbb
sub
clc
cdq
cmp
shr
dec
push
ret
jge
push
mov
stc
icebp
cmp
sub
int3
dec
ja
fdivr
mov
mov
sub
sub
mov
and
xor
jne
popa
(bad)
cmp
les
jbe
fsub
stc
lea
jge
sub
xor
gs
cld
push
mov
popa
aam
jecxz
fcom
dec
mov
stc
stc
and
jmp
dec
pusha
sti
inc
les
xor
lea
cmp
xor
sub
xor
stc
loope
mov
imul
cmc
out
inc
lock
sar
cmc
(bad)
jge
jo
cmp
popa
ret
cmp
cmp
sub
adc
dec
int3
push
(bad)
cmp
push
ja
fdivr
mov
dec
jo
imul
jo
sbb
sub
xor
xor
xor
and
dec
hlt
xor
clc
inc
(bad)
sbb
dec
dec
scas
xor
and
clc
in
xchg
cmp
jecxz
pushf
jge
popa
pushf
and
ja
test
clc
mov
repz
dec
push
(bad)
ins
xor
cmp
mov
mov
stc
std
jno
jge
and
imul
mov
test
xchg
clc
lds
mov
ins
clc
cmc
stos
dec
fdivr
cmp
xor
fsub
jne
sbb
cmp
xor
xor
and
ja
lods
popa
jecxz
lock
(bad)
sub
shl
xor
jl
adc
popf
cmp
ins
test
fidivr
mov
mov
inc
nop
cmc
mov
(bad)
cmp
xor
clc
xchg
xor
sbb
cmp
inc
nop
cmc
mov
xchg
pop
lock
cmps
xor
pop
jecxz
dec
pusha
(bad)
dec
in
jno
xor
cmc
out
dec
push
repz
jo
push
(bad)
cmc
ret
cmp
cmps
jno
jno
stc
mov
sub
jno
imul
repz
xor
cmp
and
inc
in
(bad)
sub
(bad)
jge
and
inc
aam
loop
fcom
and
cmp
cmps
cmp
pop
mov
jno
popa
mov
xor
jecxz
xchg
hlt
mov
dec
cmp
pop
fsubr
xor
test
pop
in
jno
sub
dec
ja
in
xor
and
xor
jge
cmc
ret
popa
mov
ins
cwde
sub
jne
jo
sub
sub
mov
jge
push
lahf
pop
dec
pusha
cmps
pop
in
jno
ins
in
xlat
sbb
hlt
xchg
sbb
adc
pop
lock
mov
cmp
adc
fsub
ins
dec
xor
push
int3
jno
sub
clc
and
rep
lock
dec
in
jns
xor
ins
retf
stc
lea
cmp
fsub
jge
cmp
(bad)
ins
test
cmp
cmp
cdq
cmp
jne
jo
sub
cmc
mov
cmp
clc
aad
mov
push
dec
and
cmp
xor
clc
test
(bad)
jge
and
mov
pushf
jns
cmp
cmp
xchg
cmp
cmp
cmc
mov
stc
std
dec
call
dec
iret
jo
jno
push
mov
clc
test
iret
ins
or
in
(bad)
dec
in
cmp
jge
cmc
mov
cmp
xor
mov
clc
inc
retf
inc
mov
sub
lods
inc
shl
xor
inc
xor
cwde
pusha
ja
lds
out
int3
gs
int3
pop
mov
imul
hlt
mov
dec
sub
stc
shl
jno
inc
repz
jno
pop
lock
cmps
pop
test
ret
push
jecxz
hlt
inc
retf
dec
int3
cmp
mov
sbb
rcl
int3
popa
(bad)
jl
hlt
mov
cwde
jl
adc
gs
test
stos
jge
cmc
mov
lock
stc
std
push
sti
jne
jno
pop
in
dec
ja
mov
mov
cmp
and
test
clc
fldenv
mov
dec
and
stc
lds
xor
push
repz
dec
cmps
ins
test
fidiv
and
inc
cld
cmc
(bad)
xor
and
sub
sub
xor
cmp
sub
and
jne
inc
sar
lds
xor
push
repz
clc
jns
imul
hlt
repnz
cmp
xor
mov
fs
adc
call
cmc
fisubr
dec
sti
je
jno
pop
fmul
xor
cmp
in
dec
mov
int
jmp
lods
shl
jno
sbb
int3
inc
xchg
and
sar
stc
aad
out
lock
repz
fsubr
mov
(bad)
cmc
ret
push
jecxz
int3
inc
retf
ins
fadd
inc
cld
cmc
mov
stc
cdq
dec
jmp
test
adc
in
cmps
jge
cmc
ret
dec
iret
imul
dec
cmps
stc
xchg
dec
stos
jne
jno
sub
out
cmp
mov
sub
jecxz
in
cmp
mov
xor
adc
jne
push
repz
xchg
popa
mov
xor
test
repz
lea
stos
sub
and
push
pushf
sub
stos
stc
xchg
jno
and
dec
mov
cmc
rcr
in
and
hlt
dec
jmp
mov
jge
push
(bad)
stc
push
mov
stc
lea
jmp
lea
mov
mov
mov
mov
mov
cmp
imul
iret
cmp
fs
xor
out
inc
pushf
pop
xchg
cmp
cmp
cmps
jge
cmc
cli
xor
push
jecxz
test
cmp
sub
pop
shl
dec
cmp
inc
hlt
cmp
xor
gs
call
cmc
(bad)
inc
cld
gs
dec
in
pop
repz
cmc
mov
cmp
mov
jge
sbb
jo
jo
clc
aad
mov
pop
dec
push
mov
dec
dec
pop
fild
inc
retf
cmp
fdiv
retf
xor
cmc
out
sub
out
and
inc
retf
stc
add
xor
mov
jge
cmp
mov
jge
jge
push
lods
cmc
mov
sub
hlt
cmps
xor
xor
and
adc
pop
fsubr
(bad)
sub
mov
inc
nop
cmp
cmp
pusha
ja
test
mov
fdiv
jmp
pusha
repz
dec
retf
and
lea
jecxz
dec
cmp
popa
in
push
iret
sub
cmps
inc
dec
and
pop
call
jno
stc
jmp
jno
xor
xor
imul
popa
ret
cmp
fcomp
jecxz
int
xchg
ins
clc
dec
jmp
dec
push
iret
and
cmp
jge
dec
iret
xor
cmc
out
inc
cld
popa
out
xchg
xor
xchg
cmp
jge
cmc
ret
adc
je
inc
ja
mov
jecxz
adc
lea
and
dec
xor
sub
lock
mov
cmp
adc
jge
jno
stc
test
gs
push
iret
xor
xor
mov
xchg
and
cmp
adc
jge
cmc
shr
and
mov
sbb
cld
cmc
loop
fdiv
add
fdiv
ins
fdiv
out
dec
xor
and
fadd
jge
cmc
mov
cmp
cmp
fs
in
xor
jecxz
hlt
jns
stc
test
sub
inc
jecxz
test
jge
push
sti
and
pushf
cmp
mov
hlt
push
(bad)
dec
hlt
dec
ja
in
dec
repz
test
jl
clc
sub
dec
hlt
xor
jecxz
lea
jbe
test
xor
jge
push
jecxz
aam
ja
test
jge
sbb
and
xor
clc
icebp
and
sti
stc
std
jno
dec
hlt
dec
retf
inc
lock
ja
nop
popa
(bad)
dec
lods
popa
ja
fmul
inc
shl
mov
sub
pusha
ja
popf
and
jge
dec
mov
int3
cmp
fsub
mov
aam
retf
ins
cwde
jge
sub
cmc
mov
stc
test
xor
and
repz
hlt
stos
and
sub
sbb
adc
and
inc
retf
xor
test
ja
lods
and
xor
cmc
scas
xor
mov
xor
popa
mov
int3
cmp
retf
stc
mov
ins
int3
push
iret
dec
fdiv
repnz
fcom
rep
aam
xlat
sub
int3
dec
repz
inc
shl
in
repz
lock
cmps
push
or
test
stos
cmp
adc
and
and
pop
fsub
xor
cmc
jmp
adc
pop
test
(bad)
stc
mov
ins
clc
popa
iret
jge
dec
mov
xor
cmp
int
cmps
sub
and
stc
xchg
dec
iret
ins
lock
inc
fsub
bnd
sbb
jno
inc
iret
adc
xchg
jge
jno
stc
lds
pop
test
inc
fsub
xchg
xor
sub
pop
les
stc
mov
inc
les
mov
dec
int3
popa
mov
dec
hlt
push
repz
in
jns
inc
mov
cmps
xor
jecxz
call
push
repz
clc
popa
jmp
mov
xor
dec
xor
xor
gs
push
iret
imul
xor
ins
dec
push
out
ins
fdivr
stos
ins
int3
and
rcr
sub
rcr
jno
stc
mov
xlat
dec
in
push
sar
xor
ja
in
sti
ins
clc
popa
ja
lock
ret
cmp
and
retf
cmp
xor
repz
dec
push
ja
lock
xchg
stc
stc
dec
jecxz
clc
dec
scas
ins
dec
push
out
pop
les
stc
mov
cdq
xor
sub
and
xor
and
xor
xor
clc
stc
sub
cmp
sbb
sub
cmp
ins
test
mov
sub
cmp
adc
dec
cmp
dec
clc
push
retf
inc
hlt
adc
ins
mov
clc
lea
adc
repz
cmp
nop
and
clc
shr
sti
cmp
test
and
ins
or
xchg
hlt
cmps
and
mov
stc
int
mov
inc
pushf
xor
add
fdiv
jbe
mov
iret
and
dec
shr
cmp
sub
adc
and
fmul
pop
int3
cmc
cli
ins
dec
dec
jmp
aam
repnz
test
ins
test
mov
inc
or
in
jno
pop
fmul
inc
pushf
cmc
(bad)
sub
lock
stc
test
push
int3
jno
xor
hlt
scas
sub
sub
cmps
jo
dec
ja
lods
jno
inc
call
dec
mov
jge
push
cmps
sub
int3
jno
sub
cmc
shr
jns
xor
cmp
lock
cmp
and
sub
cmp
cmp
hlt
mov
dec
cmp
inc
aam
rcr
cmc
cli
sub
push
mov
sub
inc
mov
xor
cmc
mov
call
cmc
bnd
push
iret
inc
xor
dec
hlt
jno
xor
dec
ja
lock
ret
and
cmp
int3
popa
cmps
dec
fadd
dec
int3
imul
ins
aam
scas
stc
lods
dec
out
lods
dec
xchg
adc
dec
ja
xchg
xor
xor
jno
xor
jns
push
int3
cmc
mov
jge
gs
imul
cmp
ja
hlt
and
stc
mov
push
retf
xor
pop
ja
int3
inc
mov
xor
stc
gs
int3
popa
retf
inc
dec
cmp
imul
push
jecxz
aam
mov
cmp
inc
shl
xor
cmps
stc
shl
fsub
cmps
sub
fdiv
jmp
popa
mov
stc
adc
sub
dec
ja
int3
and
jecxz
hlt
jno
ins
xor
inc
int3
cmp
xor
inc
ja
in
xor
jecxz
fsubr
pusha
or
in
popa
jecxz
cld
popa
ja
cld
inc
ret
pop
test
fisubr
cmp
jge
imul
pop
int3
jno
xor
retf
jge
xor
ja
mov
mov
pop
test
jge
and
mov
jge
cmp
jl
xor
lock
cmp
jno
dec
fdivr
sbb
cmp
cdq
sub
xor
cmc
mov
dec
and
jne
ins
repz
in
retf
xor
cmc
out
shr
mov
cmc
mov
clc
in
mov
int3
dec
sti
ins
dec
dec
shr
popa
cmps
sub
repnz
fdivr
repz
jno
pop
lock
ja
pushf
jge
xor
cmc
inc
dec
out
xor
cmps
jne
jo
sub
sub
ins
clc
cmp
iret
dec
hlt
popa
cmps
sbb
nop
push
mov
cmp
fld
cmp
sub
cmp
iret
ins
fdiv
mov
pop
(bad)
cmc
mov
dec
pop
mov
jo
clc
lods
xor
sbb
adc
je
adc
test
sbb
cwde
cmp
pop
dec
dec
mov
inc
hlt
cmc
mov
inc
hlt
cmc
mov
xor
cmp
cwde
xlat
xor
dec
cli
and
cmc
mov
xor
jns
dec
fmul
inc
hlt
cmc
cmps
cmp
cmp
xor
cmp
cmp
xor
fdivr
mov
dec
jo
xor
int3
dec
ja
cmp
xor
xor
clc
cdq
sub
ret
dec
dec
cmp
cmp
adc
sub
cmp
inc
cwde
cmp
ret
jno
xor
and
cmp
hlt
cmp
hlt
dec
shl
cmp
sbb
cmc
out
jge
popa
stos
cmp
inc
ja
popf
cmp
cmp
sub
mov
dec
jo
inc
aam
repz
hlt
cmc
mov
jne
jo
sub
cmp
ret
xor
cmc
repnz
cmc
cmp
jne
cmp
ja
cmp
ins
cld
cmp
sub
dec
retf
sub
retf
dec
in
jno
clc
or
xor
dec
dec
mov
je
and
cmp
inc
ja
xor
cmps
clc
int
ficomp
gs
dec
in
jno
jl
dec
ja
test
cld
fsub
sar
mov
je
jl
ins
pushf
cmps
cmp
cmc
mov
test
ja
mov
sti
clc
int
mov
sub
out
jno
xor
sti
cmp
dec
cmp
mov
mov
inc
cwde
cmp
ja
mov
jl
cmp
jbe
int3
dec
cmps
stc
lea
mov
clc
cmc
popa
cmps
inc
pushf
xor
xor
dec
dec
mov
stc
mov
clc
int
mov
clc
int
repnz
call
jno
cmp
cmp
mov
pushf
cmp
stos
jge
cmc
jp
and
mov
cwde
cmp
xor
cmp
adc
jno
cld
fsub
inc
mov
sub
sub
iret
xor
xor
and
popa
mov
sub
sub
cmp
gs
rcl
ins
xor
inc
test
push
and
mov
in
movs
arpl
gs
cmp
jns
xor
cmp
clc
fldcw
out
stc
test
push
repz
cmc
sahf
xor
or
icebp
pop
stc
std
jno
sbb
cld
and
xor
jno
cmp
push
mov
and
dec
dec
retf
cmp
fdivr
stos
popa
and
test
cmp
fs
in
jbe
in
mov
and
stos
inc
lds
xchg
stc
int
ret
xchg
dec
mov
cdq
dec
test
cmp
mov
sub
scas
xor
cmp
and
cmc
fidiv
jo
popa
dec
pusha
push
dec
in
jno
xor
and
push
int3
hlt
sahf
push
or
mov
push
int
out
pop
lock
mov
mov
mov
je
jns
inc
clc
cmc
mov
mov
(bad)
repz
mov
cmp
mov
test
repz
pusha
out
in
jno
clc
les
shl
int3
cmc
mov
adc
pop
cld
shl
xor
cmc
xor
test
adc
and
iret
inc
pushf
inc
sar
ja
mov
sub
cmp
jge
sbb
mov
hlt
cmc
cli
dec
int3
dec
sar
mov
sub
dec
and
xor
fsubr
mov
hlt
cmp
or
sbb
sub
xor
hlt
cmp
ja
lock
jge
adc
test
cwde
cmp
mov
xor
popa
ins
fld
xor
xor
ins
jbe
mov
clc
cmp
(bad)
jl
cmp
jbe
mov
sub
sub
shr
cmc
repnz
xor
test
lds
stos
inc
hlt
cmc
mov
xor
xor
sbb
inc
lahf
inc
cld
sub
jbe
dec
pusha
push
jne
jno
xor
cmc
repnz
hlt
cmp
dec
dec
cmps
clc
mov
jno
imul
cmc
repnz
js
xor
jno
stc
mov
jecxz
xchg
jno
imul
retf
xor
xor
ins
cld
dec
jmp
test
and
pusha
push
xor
xor
jge
dec
mov
push
loopne
iret
jne
jo
popa
dec
pusha
push
jne
icebp
push
xor
xor
test
mov
fnstenv
imul
push
iret
clc
imul
ja
nop
cmp
in
dec
iret
stc
dec
dec
jecxz
fmul
mov
fldenv
int3
ins
cli
test
icebp
gs
stc
dec
gs
lock
xor
xor
xor
test
mov
dec
and
xor
fsubr
mov
fdiv
jbe
mov
sub
sub
imul
hlt
sti
clc
int
out
sub
cmp
clc
xchg
sub
retf
je
push
ja
fdiv
stc
mov
clc
std
cmp
iret
adc
loop
(bad)
hlt
repnz
loop
dec
pop
(bad)
dec
in
jno
xor
and
push
dec
sub
xor
fsubr
retf
cmp
cmp
jl
adc
cdq
xor
stc
fdiv
imul
ins
jbe
or
clc
xchg
sub
ins
xor
dec
int3
ins
jbe
cmp
sbb
mov
mov
int
mov
xor
xor
cmp
xchg
xor
lock
imul
push
iret
push
int3
ins
jbe
hlt
cmp
inc
hlt
cmc
mov
and
cmc
fisubr
imul
cmp
xchg
cmp
xor
mov
clc
mov
mov
clc
(bad)
hlt
sti
sub
sub
out
sub
icebp
sub
xor
fsubr
retf
xor
xor
pop
fmul
clc
les
adc
loop
test
mov
cmp
stc
ja
lods
popa
mov
ins
fdiv
mov
cmp
clc
ja
popf
cmp
cmp
hlt
mov
jl
sub
out
in
jbe
in
fstp
mov
mov
imul
xor
stc
int
fistp
gs
jne
jo
clc
xchg
cmp
mov
jo
popa
loope
push
cmp
push
jbe
test
stos
clc
cdq
xor
stc
lods
dec
ret
and
jno
ins
dec
js
dec
in
jno
xor
fs
xchg
jno
imul
ins
jbe
popf
cmp
mov
mov
mov
adc
jns
ins
dec
xor
stc
aad
call
inc
fild
lods
cmc
adc
(bad)
hlt
mov
lea
cmp
and
clc
les
jbe
shl
shl
retf
push
sti
adc
mov
stc
int
mov
sub
cmp
ins
mov
cmps
clc
fnstsw
jecxz
mov
ja
test
mov
clc
lea
scas
adc
out
dec
and
imul
push
iret
cmp
hlt
sti
je
cmp
cld
dec
iret
cmp
jno
jge
jno
stc
int
pop
pop
lock
sbb
xchg
xor
fsubr
retf
cmp
cmc
repnz
add
ja
pop
xchg
sti
inc
in
stc
ja
cld
push
repz
int3
jno
fmul
xor
hlt
mov
ins
lock
mov
scas
xor
xor
xor
xor
pop
in
cmc
cli
cmp
fdivr
jbe
mov
sub
sub
inc
lock
cli
jne
and
mov
rcr
ja
mov
xor
ins
retf
inc
lock
mov
(bad)
sti
clc
int
out
cmp
dec
cmp
xor
sub
xor
cmc
mov
mov
adc
cdq
xor
pop
lock
jne
jo
xor
inc
repz
dec
ja
in
mov
lea
mov
popf
cmp
push
jmp
push
jbe
lea
and
test
cld
cmc
jb
adc
xor
mov
clc
std
xor
cmp
sub
test
imul
popa
iret
mov
hlt
cmp
xor
jno
ins
xor
sub
jecxz
test
repz
cmp
sub
jge
dec
loopne
xchg
jl
and
cmp
ins
clc
cmc
sub
jns
sub
mov
jecxz
lea
cmp
cmp
and
mov
adc
ret
xor
mov
sub
sub
inc
hlt
cmc
mov
jge
cmc
sahf
and
cdq
fs
test
cmp
popf
cmp
stc
mov
jo
clc
les
repnz
xor
jne
dec
jecxz
(bad)
hlt
mov
lea
jl
xor
fdivr
imul
jbe
loope
push
jge
cmc
mov
mov
mov
je
pop
out
ins
dec
js
dec
cld
jns
imul
ficomp
pushf
hlt
cmp
gs
pushf
dec
cmps
sbb
inc
ja
pushf
dec
repz
cmc
sahf
xor
xor
xor
jno
dec
fcom
adc
inc
mov
xor
xor
xor
xor
cmc
cli
ins
dec
jo
sbb
and
xor
jo
jge
xor
imul
cmc
(bad)
pop
mov
jecxz
in
cmp
sti
clc
lea
mov
xchg
cmp
repz
lea
out
popf
cmp
inc
lds
ret
xor
jo
cmp
pusha
jbe
xchg
cmp
clc
in
jns
stc
mov
xor
sub
xor
xor
jge
jo
clc
test
adc
and
mov
mov
test
mov
cwde
sub
sub
adc
mov
sub
aas
jge
cmc
ss
cmp
jne
fs
lock
pop
dec
push
repz
xor
xor
test
cmp
pop
ja
popf
cmp
cmp
sub
jl
cmp
stc
in
popa
mov
stc
aad
(bad)
pop
fmul
stc
mov
xor
mov
sub
sub
mov
ins
xchg
js
sbb
sub
sbb
cmp
ins
cwde
jno
inc
cld
dec
cli
clc
(bad)
hlt
repnz
pop
cmp
ja
hlt
cmp
sub
cmp
cmp
sub
mov
xor
and
dec
dec
js
xor
fsubr
retf
sbb
xchg
cmp
cmp
cmp
adc
hlt
cmp
sub
cmp
xor
sub
xor
cmc
retf
js
clc
lea
cmp
cmp
cmp
adc
and
adc
push
mov
mov
lea
and
xor
push
lock
stc
lea
cmp
xor
cmp
lea
repnz
test
and
mov
xor
cmc
mov
xor
and
ja
cwde
popa
mov
ror
xlat
jl
adc
xchg
jno
stc
lea
xchg
and
xor
sbb
and
pop
dec
and
xor
xor
xor
and
inc
in
inc
shl
int3
cmp
cmc
pop
icebp
jg
int
outs
pop
lock
inc
cwde
cmp
repnz
dec
xor
clc
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
hlt
jbe
dec
call
jbe
pop
mov
cmp
test
ja
fst
jne
mov
addr16
lock
(bad)
mov
adc
mov
fldl2t
or
fnstenv
mov
cmp
push
sti
fs
dec
add
cmc
push
xchg
movq
sar
mov
jbe
dec
bound
add
ja
adc
inc
stc
loope
fist
std
(bad)
pop
fdiv
ja
mov
ja
push
and
dec
dec
xchg
mov
mov
cmp
stos
mov
mov
clc
sub
mov
dec
push
cmp
mov
mov
pop
mov
mov
cmp
popf
cmc
mov
dec
cwde
jp
xchg
and
mov
mov
cmp
dec
lock
pop
mov
cmp
popf
stc
cwde
and
dec
repnz
mov
cmp
sar
jge
pop
mov
cmp
and
inc
stc
loope
fild
js
mov
dec
push
jecxz
push
or
mov
out
ja
pop
mov
cmp
popf
stc
xchg
jmp
cmp
jge
jae
dec
dec
jae
mov
bound
ins
or
mov
mov
cmp
dec
cmp
mov
mov
cmp
add
mov
cmp
inc
(bad)
jge
cwde
call
cli
dec
cmp
mov
xlat
mov
div
pop
mov
cmp
add
mov
cmp
dec
cmp
mov
mov
cmp
dec
(bad)
jge
in
sbb
adc
mov
leave
jmp
pusha
ins
fnstenv
mov
cmp
dec
mov
arpl
or
jae
jne
jbe
mov
dec
out
test
imul
pop
mov
cmp
pop
jmp
ja
(bad)
fdiv
xor
pop
hlt
ja
dec
cld
outs
dec
pop
xor
mov
repnz
dec
or
dec
cmp
leave
adc
adc
sbb
(bad)
mov
jmp
mov
push
push
rcl
pusha
(bad)
shl
ret
xchg
in
xor
dec
push
push
pop
xchg
sbb
jmp
mov
popa
add
push
rcl
pushf
(bad)
push
mov
add
es
push
ins
aad
lods
ds
mov
and
scas
cmps
pop
daa
inc
das
adc
jo
mov
repz
std
lahf
add
xor
cmp
cvttps2pi
add
xor
pop
add
ficomp
fmul
out
in
int3
in
or
into
test
cmps
dec
or
loope
std
or
sub
or
es
std
mov
push
(bad)
pop
loope
dec
std
jle
inc
inc
int
mov
mov
jl
lock
pop
(bad)
push
out
movs
push
ror
mov
dec
std
jp
dec
push
leave
add
and
add
int
movs
mov
outs
sub
pop
push
mov
jns
push
(bad)
xor
std
mov
mov
sub
pop
lods
and
or
jecxz
scas
fsubr
cmc
xor
jp
and
pop
lods
adc
xchg
pop
mov
pop
adc
sub
mov
and
outs
add
jecxz
das
sub
and
test
push
das
test
js
out
call
mov
fs
lods
sub
lods
(bad)
pusha
mov
scas
call
lods
(bad)
pusha
out
(bad)
pusha
in
mov
out
(bad)
pusha
cdq
lods
mov
pusha
mov
loop
cmp
lods
(bad)
pusha
out
(bad)
pusha
out
(bad)
pusha
mov
lods
call
(bad)
(bad)
pusha
out
mov
lods
(bad)
pusha
xchg
aad
out
stos
(bad)
out
(bad)
pusha
out
(bad)
pusha
out
mov
lods
(bad)
pusha
out
(bad)
pusha
jmp
lods
(bad)
pusha
out
(bad)
pusha
out
(bad)
pusha
out
mov
lods
(bad)
pusha
out
(bad)
pusha
sub
test
test
call
lods
(bad)
pusha
out
(bad)
pusha
jmp
(bad)
aas
dec
cli
int
out
call
in
(bad)
pusha
jl
js
pop
int
cs
js
out
call
loopne
push
call
es
adc
xor
sub
loopne
ret
fwait
mov
mov
shr
ds
jl
lods
out
rcr
retf
movs
outs
shl
push
shr
mov
adc
into
sub
push
adc
jp
push
(bad)
xchg
pop
and
nop
outs
adc
(bad)
push
mov
or
jnp
xor
cmp
or
push
ror
ret
mul
in
movs
push
int
movs
mov
into
jmp
mov
into
inc
mov
cmps
stc
cwde
push
ins
in
movs
sbb
adc
outs
hlt
call
in
movs
push
int
movs
dec
ins
inc
mov
mov
sub
mov
nop
fld
mov
inc
pop
push
sub
js
ja
inc
cmp
push
xor
jns
mov
outs
add
mov
imul
outs
and
jge
xor
lock
clc
push
inc
ins
loopne
inc
mov
mov
push
ins
cld
das
movs
cmps
std
dec
cmc
outs
push
pop
lods
cmp
pop
push
shl
mov
sbb
(bad)
adc
retf
dec
sub
mov
mov
mov
add
es
add
mov
retf
push
enter
enter
sbb
pushf
xchg
shl
pop
pop
(bad)
test
xor
cmp
mov
es
nop
xchg
fwait
push
enter
enter
mov
lahf
enter
test
xor
ror
inc
mov
add
push
pusha
outs
loopne
sbb
pop
mov
cmp
enter
enter
mov
fdiv
fstp
(bad)
jne
push
inc
fwait
push
sub
ja
push
enter
sub
cmp
stos
loop
pop
retf
push
enter
mov
cmp
pop
jns
test
ja
sbb
ja
push
enter
xchg
cmp
pop
and
jl
ja
sbb
ja
push
enter
pushf
cmp
std
les
inc
std
ja
call
xchg
xchg
imul
bound
or
mov
lods
ds
xchg
scas
out
jae
push
push
rcr
push
xchg
in
movs
outs
shl
movs
push
ror
and
mov
(bad)
cmp
mov
jbe
mov
ins
xor
mov
push
ret
mov
sub
inc
jnp
inc
movs
mov
push
test
add
adc
pop
mov
movs
push
shr
stos
iret
inc
mov
std
sar
sub
adc
pop
daa
dec
mov
sub
push
(bad)
xor
pop
cmc
jp
out
push
sub
pushf
or
inc
xchg
mov
out
pop
(bad)
sahf
out
movs
mov
jecxz
mov
ins
mov
or
inc
pop
push
into
std
or
or
mov
outs
add
inc
icebp
adc
push
sub
or
push
ror
cmp
dec
std
dec
lds
and
(bad)
fidivr
std
adc
push
xor
push
or
ret
ja
dec
sub
jle
mov
imul
mov
into
cmp
mov
data16
lods
cmp
fild
(bad)
sbb
push
mov
jl
xor
dec
xor
or
dec
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
pop
dec
test
mov
and
xor
fcmovnb
xor
(bad)
bound
xlat
mov
(bad)
xor
(bad)
dec
add
jne
pop
xlat
mov
sub
nop
jge
(bad)
(bad)
xor
(bad)
xor
mov
mov
sub
nop
jge
cld
(bad)
xor
(bad)
xor
sub
imul
pop
adc
xchg
cmps
mov
les
push
and
xor
(bad)
xor
xchg
imul
xor
(bad)
xor
(bad)
jb
imul
push
cs
push
sub
xor
(bad)
xor
(bad)
xor
sahf
dec
adc
mov
daa
sub
loope
ja
nop
fcmovb
xor
(bad)
xor
(bad)
push
add
sub
aad
sub
adc
popa
push
push
or
(bad)
xor
(bad)
xor
(bad)
xor
mov
(bad)
xor
(bad)
xor
(bad)
mov
imul
pop
mov
sub
cld
(bad)
xor
(bad)
xor
xchg
imul
sbb
mov
(bad)
xor
(bad)
xor
(bad)
xor
cwde
jl
and
or
fs
or
xor
(bad)
xor
(bad)
xor
sahf
sahf
pop
add
mov
(bad)
xor
jle
pop
or
mov
(bad)
xor
(bad)
out
imul
push
cmp
xor
(bad)
xor
(bad)
xor
or
mov
push
dec
mov
(bad)
xor
adc
imul
xor
(bad)
xor
(bad)
xor
xchg
ja
sub
test
(bad)
xchg
arpl
mov
(bad)
xor
(bad)
xor
fwait
in
cmp
push
cmp
xor
(bad)
mov
ja
xor
(bad)
xor
add
ret
les
dec
and
inc
out
add
sub
mov
je
pop
mov
jge
data16
mov
and
fisubr
cmc
loop
mov
arpl
mov
adc
jle
(bad)
fild
test
(bad)
xor
(bad)
bound
adc
dec
mov
pop
sbb
mov
pop
cmp
pop
data16
mov
ins
daa
lods
ds
lods
out
rcr
push
rcr
aad
mov
push
std
xchg
fwait
push
sar
inc
jmp
cmp
sar
cwde
sub
jmp
mov
popa
mov
push
shl
movs
dec
jmp
mov
(bad)
adc
dec
movs
mov
push
dec
cmp
xor
mov
adc
idiv
out
movs
push
sub
movs
call
xchg
mov
data16
lahf
cmps
ret
fimul
or
jecxz
ins
loopne
xor
in
movs
test
pop
(bad)
xor
inc
iret
stos
es
mov
hlt
rol
stos
mov
cmp
call
inc
pop
inc
xor
push
dec
std
xchg
stos
dec
inc
sub
in
inc
xor
xchg
dec
std
jp
pop
push
adc
push
dec
std
(bad)
mov
and
test
dec
inc
(bad)
jmp
mov
add
adc
sar
test
sub
xchg
cs
inc
(bad)
adc
mov
test
inc
cli
icebp
mov
mov
shl
lods
ds
pop
out
push
adc
cmp
adc
es
movs
xchg
out
pop
(bad)
sar
add
adc
ds
pop
(bad)
xchg
sub
or
sahf
in
dec
push
sets
xor
(bad)
popa
add
shl
dec
sbb
stos
jp
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
jg
mov
pop
retf
stos
stos
movs
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
jle
mov
stos
(bad)
je
stos
jle
push
stos
out
jne
stos
fidiv
stos
fidiv
stos
scas
jne
stos
cli
jne
stos
ret
stos
mov
mov
stos
out
jne
stos
fidiv
stos
fidiv
stos
scas
jne
stos
cli
jne
stos
jmp
stos
jle
sub
retf
stos
(bad)
jne
stos
mov
ds
mov
push
stos
out
jne
stos
mov
mov
stos
jle
push
stos
out
jne
stos
fidiv
stos
fidiv
stos
scas
jne
stos
cli
jne
stos
ret
stos
mov
cli
stos
jle
data16
ret
stos
jmp
stos
mov
jbe
mov
mov
stos
jle
sti
test
jl
sbb
jle
inc
in
mov
in
cmp
mov
cmp
imul
hlt
in
cmp
or
dec
and
in
jne
in
cmp
in
cmp
jle
hlt
in
cmp
in
cmp
dec
clc
mul
jl
hlt
in
cmp
push
aaa
cmc
in
mov
in
cmp
jg
sbb
aas
jbe
stos
jb
out
and
in
jne
in
cmp
xor
xchg
push
gs
in
cmp
in
cmp
in
cmp
mov
shl
or
jbe
stos
pop
ss
dec
and
in
jne
in
cmp
in
cmp
push
jge
pusha
mov
pop
hlt
in
cmp
and
cmps
ss
in
cmp
in
cmp
push
jge
pusha
mov
pop
hlt
in
cmp
and
xchg
ss
in
cmp
in
cmp
in
cmp
push
jge
pusha
mov
pop
hlt
in
cmp
and
stos
xor
hlt
in
cmp
push
jge
pusha
mov
pop
hlt
in
cmp
in
cmp
jmp
jl
hlt
in
cmp
push
jge
pusha
mov
pop
hlt
in
cmp
in
cmp
jmp
jl
hlt
in
cmp
in
cmp
stos
xor
mov
xchg
out
ins
hlt
in
cmp
in
cmp
jmp
jl
hlt
in
cmp
jmp
jle
mul
jl
hlt
in
cmp
in
cmp
jmp
jle
mul
jl
hlt
in
cmp
jmp
jg
mov
jmp
jl
mov
test
jl
mov
ja
mov
in
cmp
in
cmp
test
jle
mov
pushf
cmp
sti
test
jle
shr
and
dec
and
in
jne
in
cmp
in
cmp
jp
hlt
in
cmp
in
cmp
in
cmp
stos
push
dec
scas
jl
mov
scas
inc
fs
jge
je
stos
mov
hlt
in
cmp
cmp
stos
ds
out
je
in
cmp
in
cmp
mov
cmp
test
jle
hlt
in
cmp
in
cmp
in
cmp
aas
jbe
test
jl
mov
stos
div
add
and
cld
(bad)
jne
stos
mov
cmp
xor
clc
test
jge
pop
mov
mov
hlt
in
cmp
test
cmp
test
jl
hlt
in
cmp
lods
xor
movq
mov
outs
scas
mov
scas
pop
jle
mov
inc
test
jp
jp
stos
mov
jge
test
in
cmp
in
cmp
push
xor
jl
hlt
in
cmp
in
cmp
in
cmp
xor
ins
arpl
mov
mov
or
in
cmp
sub
jae
mov
mov
pop
mov
push
mov
hlt
in
cmp
out
sbb
inc
pusha
and
xchg
stos
push
mov
jg
xchg
xor
mov
jns
mov
dec
mov
xlat
jae
dec
lods
inc
pusha
dec
movs
jl
xchg
pop
pop
mov
in
cmp
cmp
in
cmp
pop
xor
mul
jl
hlt
in
cmp
push
xor
jl
hlt
in
cmp
cmp
in
cmp
in
cmp
test
mov
hlt
in
cmp
xor
cmp
bound
in
cmp
mov
cmp
bound
in
cmp
in
cmp
in
cmp
in
jne
in
cmp
mov
cmp
bound
in
cmp
in
cmp
test
jl
hlt
in
cmp
cli
mul
jl
hlt
in
cmp
in
cmp
push
xor
mov
stos
call
inc
jl
mov
(bad)
jle
mov
in
cmp
in
cmp
repnz
jl
hlt
in
cmp
in
cmp
xor
mov
in
cmp
in
cmp
xor
sbb
aas
jbe
inc
jl
mov
(bad)
jle
mov
in
cmp
in
cmp
xor
mul
jl
hlt
in
cmp
xor
mov
in
cmp
or
cmp
test
jge
clc
test
jge
pop
mov
sbb
in
cmp
in
cmp
mov
cmp
test
jle
hlt
in
cmp
or
cmp
test
jle
inc
jl
je
stos
xchg
ss
cld
(bad)
jne
stos
adc
movs
mov
push
aaa
inc
push
or
clc
test
jl
sbb
jne
push
jno
clc
test
jge
pop
mov
sbb
in
cmp
mov
cmp
int
pop
jle
jle
test
jge
mov
test
jge
xor
mov
scas
ds
jl
lods
out
rcr
push
shr
push
shr
push
shr
jg
in
lock
loope
push
ret
sbb
daa
fsubrp
pusha
inc
pop
out
cwde
push
ins
call
int3
cwde
(bad)
out
mov
add
xor
std
adc
adc
bound
push
rcr
cmp
outs
push
or
push
call
pop
pushf
jb
mov
sub
das
sbb
and
inc
pop
imul
add
dec
ins
adc
hlt
rcr
cmp
(bad)
sbb
jge
jecxz
mov
fsubrp
pop
push
ret
cli
sbb
fsubrp
pusha
jmp
repz
movs
mov
cld
jns
ret
pop
inc
mov
sub
dec
or
pop
ja
inc
pop
jmp
daa
inc
inc
out
cld
push
pop
sub
ss
ficom
or
std
repnz
push
inc
sub
add
sub
or
dec
inc
xlat
inc
cmp
add
xchg
lds
mov
add
pop
daa
adc
sub
sub
mov
into
pop
pop
xchg
or
test
or
lods
cs
mov
hlt
dec
std
mov
lods
ds
inc
std
ret
pop
(bad)
mov
sbb
xchg
xchg
lock
dec
push
setl
cmp
loope
adc
out
dec
add
dec
mov
inc
test
push
or
add
or
add
inc
xor
push
push
in
cmc
add
xchg
dec
inc
out
mov
mov
or
push
or
add
or
add
sbb
les
mov
add
inc
adc
out
dec
add
dec
mov
inc
test
into
or
add
or
dec
push
or
add
or
add
jno
add
inc
ins
inc
les
mov
push
or
add
pop
test
or
add
or
add
push
cmc
add
jae
jecxz
push
lods
mov
or
xchg
xchg
push
or
add
(bad)
test
mov
add
shl
pop
fs
cmps
push
mov
inc
add
or
test
mov
cmp
xchg
sbb
test
dec
inc
inc
mov
leave
repnz
loopne
mov
pop
les
loopne
inc
vmovhpd
sbb
inc
retf
out
cwde
push
ins
call
test
mov
dec
push
or
push
fsubr
push
out
dec
inc
mov
dec
pop
push
shl
in
call
push
mov
cmp
jae
pop
jmp
inc
test
jmp
lods
cmp
mov
ss
dec
cmc
fiadd
push
shl
mov
ficom
xor
cli
test
dec
in
fs
shr
mov
outs
cmp
call
push
movs
dec
sub
mov
loope
sub
sub
(bad)
mov
dec
pop
push
int3
in
or
push
dec
mov
mov
xchg
ror
adc
(bad)
mov
mov
xchg
test
(bad)
out
test
fwait
sbb
hlt
sar
pop
mov
pop
stos
mov
outs
aam
mov
sub
cmp
cmp
jp
ror
sub
out
dec
std
pop
inc
inc
xor
ds
inc
mov
outs
sbb
pop
outs
cmp
mov
rcl
cmps
cs
in
ret
pop
fild
mov
mov
dec
pop
fwait
pop
sbb
or
lods
ds
inc
fiadd
pop
cmovnp
push
dec
push
hlt
scas
es
pop
push
ror
sbb
pop
cdq
sbb
pop
xlat
cmps
out
(bad)
sbb
pop
xlat
sbb
shl
out
xlat
sbb
pop
xlat
jae
pop
push
imul
call
sub
sbb
out
sbb
outs
mov
out
xlat
js
mov
aad
inc
pop
xlat
dec
loop
cmps
push
test
cdq
sbb
pmullw
jmp
sbb
pop
aad
jmp
sbb
pop
aad
out
xlat
sbb
pop
xlat
push
test
mov
sbb
pop
xlat
sbb
pop
xlat
sub
out
xlat
sbb
pop
xlat
sbb
pop
xlat
sub
out
xlat
sbb
pop
xlat
sbb
pop
xlat
push
in
ret
sbb
pop
xlat
not
pop
cdq
sbb
pop
xlat
sbb
pop
xlat
sbb
pop
xlat
push
jl
jnp
test
mov
cwde
stos
jae
into
sbb
sets
out
xlat
sbb
pop
xlat
dec
retf
xchg
xchg
mov
adc
push
add
out
jmp
cdq
dec
test
pop
xlat
sbb
pop
xlat
sbb
pop
xlat
lods
push
mov
inc
movs
jmp
push
movs
jno
push
xchg
dec
and
rcr
ins
jno
xor
adc
push
or
test
pop
pusha
xor
adc
pop
and
in
std
movs
inc
in
pop
push
(bad)
in
movs
sbb
mov
jmp
cmp
sbb
mov
jmp
mov
jmp
cmp
push
sar
sbb
in
call
sbb
mov
test
(bad)
in
movs
sbb
mov
jmp
in
call
dec
and
sbb
mov
jmp
mov
call
sbb
mov
mov
sbb
mov
jmp
cmc
xbegin
inc
out
jo
ror
(bad)
in
call
sbb
mov
sar
in
lock
dec
mov
(bad)
in
call
jle
shl
in
movs
sbb
mov
jmp
int
sbb
mov
jmp
div
sbb
mov
jmp
iret
movs
sbb
in
call
dec
lock
movs
sbb
mov
jmp
out
movs
sbb
mov
jmp
lods
mov
aam
cmp
push
sar
(bad)
mov
jmp
fwait
lods
loopne
mov
mov
sbb
mov
mov
mov
sbb
mov
jmp
mov
jmp
outs
cmps
repz
in
movs
push
sar
ja
out
xor
shr
inc
vdivsd
pusha
cmp
push
shr
jle
inc
movs
sbb
int
sbb
mov
repz
(bad)
cmc
movs
sbb
mov
jmp
jecxz
sub
jo
(bad)
sar
(bad)
mov
out
rol
sbb
mov
jmp
loop
jae
sar
and
sbb
in
call
jle
inc
jecxz
cld
jge
push
sar
inc
shr
test
push
push
push
rcl
pop
shr
movs
dec
sar
push
shr
sbb
mov
jmp
iret
movs
sbb
in
call
sbb
mov
mov
sbb
mov
jmp
in
movs
sbb
mov
mov
outs
aad
movs
lods
ds
pop
stc
fisubr
push
(bad)
in
movs
sbb
mov
lods
loopne
mov
mov
sbb
mov
jmp
xchg
cmps
push
rcl
ret
movs
push
sar
loopne
pop
cli
les
pop
sbb
cmc
movs
sbb
mov
jmp
out
in
shl
sbb
mov
jmp
ret
ss
sar
int
movs
(bad)
ins
cld
mov
xlat
(bad)
xor
shr
rol
dec
ror
(bad)
in
call
sbb
mov
mov
jae
push
repz
push
push
outs
cmps
push
rcl
ret
movs
push
sar
lods
out
pop
push
lea
mov
sbb
mov
jmp
mov
jmp
mov
jmp
mov
jmp
adc
(bad)
mov
jmp
clc
push
sbb
mov
jmp
adc
(bad)
mov
jmp
mov
jmp
mov
sbb
mov
jmp
shl
sbb
sbb
jmp
cmc
call
sbb
mov
inc
sbb
mov
jmp
mov
jmp
in
movs
sbb
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
sbb
mov
jmp
mov
mov
sbb
mov
test
push
mov
scas
ds
(bad)
imul
in
movs
sbb
mov
jmp
jge
push
sar
inc
shr
test
push
push
push
rcl
pop
shr
movs
les
out
pop
aaa
ret
ror
movs
popa
rcr
sbb
in
call
sbb
mov
repz
(bad)
cmc
movs
sbb
mov
jb
(bad)
in
movs
sbb
mov
jmp
in
jo
(bad)
cmc
call
push
(bad)
stc
xchg
sbb
mov
jmp
std
call
inc
loopne
mov
mov
jmp
leave
mov
sbb
mov
in
(bad)
mov
mov
sbb
mov
test
ret
push
adc
fwait
and
std
movs
sbb
mov
sar
in
lock
ror
(bad)
in
call
sbb
mov
repz
(bad)
cmc
movs
sbb
mov
jmp
int
sbb
mov
call
sbb
mov
inc
sub
out
dec
fidivr
push
push
sar
sbb
in
call
sbb
mov
mov
sbb
mov
jmp
in
movs
sbb
mov
mov
sbb
mov
or
cmc
out
lds
cmps
jmp
out
jo
ror
(bad)
in
call
sbb
mov
sar
in
lock
ror
(bad)
in
call
ds
repz
(bad)
cmc
movs
sbb
mov
jb
(bad)
in
movs
sbb
mov
jmp
mov
sbb
mov
jmp
stc
test
mov
jmp
std
call
sbb
mov
mov
mov
jmp
int
sbb
mov
in
(bad)
mov
mov
popa
int
or
cmc
out
lds
cmps
aaa
inc
out
jo
ror
(bad)
in
call
sbb
mov
sar
in
lock
loopne
push
rcl
sbb
mov
jmp
outs
pop
push
lea
mov
sbb
mov
jmp
mov
jmp
ret
clc
sbb
mov
jmp
out
cmps
inc
adc
or
sbb
mov
jmp
mov
jmp
mov
jmp
mov
jmp
in
movs
sbb
mov
jmp
in
movs
sbb
mov
jmp
out
movs
sbb
mov
jmp
repz
sbb
mov
jmp
loop
push
shr
outs
aad
movs
lods
ds
pop
pop
leave
imul
(bad)
mov
mov
(bad)
mov
jmp
mov
jmp
fwait
lods
loopne
mov
xchg
cmp
mov
jmp
mov
jmp
std
movs
sbb
mov
jmp
mov
jmp
pop
mov
sbb
mov
jmp
in
call
inc
xor
mov
mov
jmp
or
jmp
mov
jmp
int
sbb
mov
test
mov
xchg
push
daa
mov
aad
cmp
sbb
mov
jmp
std
movs
loopne
pop
stos
test
ins
xchg
push
or
retf
dec
shr
cmp
sbb
cmc
call
sbb
mov
mov
(bad)
mov
in
rcl
sbb
mov
jmp
mov
movs
sbb
mov
jmp
inc
jmp
rcr
sbb
in
call
sbb
mov
and
loop
inc
adc
sahf
and
sbb
jmp
out
gs
ret
push
push
shl
mov
inc
into
jo
pop
mov
sbb
mov
pop
push
lea
mov
sbb
mov
sbb
mov
push
cmp
mov
call
mov
dec
pop
sbb
adc
sbb
mov
xlat
sbb
adc
sbb
mov
jecxz
(bad)
adc
sbb
mov
jmp
xor
jmp
mov
mov
push
(bad)
in
movs
sbb
mov
jmp
cmp
test
outs
xchg
push
and
movs
sbb
mov
jmp
lock
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
in
in
movs
loopne
pop
stos
mov
rol
(bad)
dec
test
out
or
cmp
xor
jmp
mov
xor
mov
jmp
loop
inc
std
xchg
mov
sbb
mov
jmp
mov
jmp
js
(bad)
pushf
push
(bad)
in
movs
sbb
mov
jmp
adc
push
(bad)
cmc
movs
sbb
mov
mov
sbb
mov
jmp
adc
xchg
out
movs
dec
shl
sbb
mov
jmp
in
movs
sbb
mov
jae
xchg
out
movs
dec
rcl
sbb
mov
jmp
adc
fnstcw
call
sbb
mov
mov
jae
push
inc
dec
std
mov
push
(bad)
in
movs
sbb
mov
jmp
bound
movs
loopne
test
fucom
jo
ret
cli
or
shr
sbb
in
call
inc
imul
movs
sbb
mov
jmp
(bad)
mov
ret
bound
adc
in
or
ret
cli
sbb
shr
sbb
in
call
fimul
stc
in
in
jns
ficomp
stc
cmc
push
in
jns
fisubr
stc
lds
jns
(bad)
scas
push
out
in
rcl
push
(bad)
cmc
movs
sbb
mov
jmp
in
movs
sbb
mov
jmp
jnp
jg
in
lock
loopne
push
sar
push
(bad)
in
movs
sbb
mov
jmp
int
sbb
mov
stos
mov
cmp
in
movs
icebp
loopne
push
push
imul
or
ds
sbb
mov
jmp
dec
jg
(bad)
adc
sbb
mov
rcr
and
movs
jnp
in
(bad)
cwde
cmp
push
in
push
push
adc
aaa
add
(bad)
out
movs
cli
rol
and
lods
mov
jmp
mov
pop
sbb
mov
jmp
pop
mov
mov
arpl
push
rcl
push
shr
(bad)
pushf
xchg
out
movs
pop
ror
imul
or
cmp
add
(bad)
adc
(bad)
mov
jmp
mov
jmp
in
movs
sbb
mov
jmp
cld
jo
(bad)
ret
test
push
cmp
cli
rol
rol
bound
jae
ds
pop
sbb
mov
jmp
mov
hlt
sbb
jae
xchg
out
movs
dec
rol
sbb
mov
jmp
xchg
xor
imul
or
loopne
pop
repnz
sbb
(bad)
mov
jmp
out
movs
adc
jae
xchg
out
movs
dec
rol
sbb
mov
jmp
mov
xchg
jno
mov
xchg
out
in
rol
fdivr
jns
sbb
mov
jmp
adc
push
(bad)
cmc
movs
sbb
mov
jmp
mov
jmp
mov
lods
sbb
dec
test
out
or
imul
add
(bad)
adc
(bad)
mov
jmp
inc
mov
push
(bad)
cmc
movs
sbb
mov
jmp
in
call
sbb
mov
stos
scas
xchg
cmp
sbb
mov
jmp
mov
jmp
shl
pusha
int3
movs
push
imul
or
popa
in
or
ds
sbb
mov
jmp
dec
test
out
or
imul
add
(bad)
adc
(bad)
mov
jmp
adc
sbb
mov
pop
sbb
mov
jmp
xchg
pop
push
lea
mov
repz
out
mov
jmp
out
push
imul
or
xor
add
(bad)
adc
(bad)
mov
pop
push
sar
push
(bad)
cmc
movs
sbb
mov
jmp
adc
jmp
mov
sar
in
lock
leave
shl
and
in
addr16
in
je
(bad)
cdq
test
mov
jmp
mov
jmp
jmp
rcr
jbe
shl
(bad)
sbb
jmp
mov
cmps
fnsave
cmp
lea
sbb
mov
call
sti
movs
sbb
mov
jmp
xor
mov
mov
mov
jmp
adc
sbb
mov
jmp
in
movs
and
imul
push
shr
push
(bad)
in
movs
sbb
mov
repz
std
jecxz
inc
xor
sbb
jmp
mov
jb
(bad)
mov
jmp
cmp
(bad)
mov
jmp
and
push
(bad)
in
movs
sbb
mov
jmp
in
sbb
mov
jmp
mov
jmp
stc
push
sbb
mov
jmp
cmp
loopne
mov
test
mov
cmps
push
(bad)
in
movs
sbb
mov
lods
loopne
mov
test
mov
jmp
out
movs
sbb
mov
jmp
pop
stos
mov
repz
(bad)
in
movs
sbb
mov
call
mov
jmp
mov
jmp
jmp
cmp
push
adc
and
jmp
mov
imul
movs
sbb
mov
jmp
xor
(bad)
int
sbb
mov
jmp
ror
cmp
mov
(bad)
mov
jmp
out
inc
push
(bad)
in
movs
sbb
mov
jmp
cld
movs
push
cmp
mov
call
pop
aaa
cli
inc
outs
aad
sub
(bad)
sbb
in
call
pop
sar
push
shr
inc
shr
jg
in
lock
cmp
mov
call
inc
xor
jmp
mov
nop
mov
jmp
mov
jmp
aas
cmps
sbb
in
call
inc
rcl
sbb
mov
jmp
sti
xchg
push
ror
sbb
in
call
sbb
mov
mov
in
push
(bad)
cmp
sbb
mov
jmp
in
call
sbb
mov
mov
daa
add
push
shr
pop
aaa
cmp
push
ror
dec
out
pop
push
lea
jmp
es
push
lea
jmp
xor
out
adc
sbb
mov
jmp
mov
jmp
enter
lods
jo
(bad)
cmp
sbb
mov
jmp
mov
inc
scas
ds
and
inc
push
(bad)
in
movs
sbb
mov
jmp
fwait
lods
loopne
mov
xchg
cmp
mov
jmp
leave
mov
(bad)
mov
jmp
mov
jmp
or
mov
(bad)
cmp
push
ror
sbb
in
call
sbb
mov
mov
jg
in
lock
jecxz
inc
xor
sbb
jmp
mov
jmp
(bad)
mov
jmp
mov
jmp
sub
jae
adc
rol
sbb
mov
jmp
loop
test
mov
jae
rcl
(bad)
mov
jmp
pop
pop
jae
adc
shl
pop
and
jo
push
cmp
push
ror
push
(bad)
in
movs
sbb
mov
jmp
cmp
icebp
ror
push
(bad)
in
movs
sbb
mov
jmp
out
cwde
lods
and
pop
push
shr
sbb
mov
jmp
lods
movs
movs
lock
stos
pop
and
jo
shr
sbb
mov
jmp
fwait
lods
jae
shl
mov
mov
mov
jmp
mov
jmp
add
sbb
mov
mov
mov
jmp
call
jb
(bad)
mov
jmp
mov
jmp
in
movs
sbb
mov
jmp
cmp
sbb
mov
jmp
mov
jmp
(bad)
sbb
in
call
push
xchg
out
jge
ret
(bad)
int
sbb
mov
mov
sbb
mov
jmp
rcl
add
das
cmps
push
std
and
jmp
inc
mov
or
lods
mov
and
mov
and
xchg
into
mov
movs
mov
and
movs
sub
pushf
mov
add
sub
movs
xor
arpl
icebp
cmp
cli
or
sub
movs
sbb
mov
rol
add
in
movs
ins
pop
std
pop
(bad)
mov
add
dec
int
arpl
cmp
mov
push
add
mov
adc
mov
shl
mov
outs
dec
popf
dec
ins
cld
fs
or
test
jecxz
icebp
push
xchg
push
push
sub
movs
test
fcomp
addr16
pop
jo
std
dec
pop
daa
jo
imul
stc
push
fnstsw
xor
push
inc
pop
cmps
outs
push
pushf
lods
add
adc
push
and
(bad)
test
xchg
push
push
ror
jnp
dec
mov
cmova
in
movs
add
lahf
pop
sub
cmp
mov
cmp
popa
cmp
push
cmps
test
sar
and
mov
pop
adc
cmp
scas
ds
pop
xchg
inc
adc
(bad)
repz
push
shr
mov
imul
dec
add
cmp
add
adc
jmp
cwde
lods
sub
pop
rol
sbb
pusha
push
adc
or
repnz
push
bound
add
add
sbb
pop
or
add
xchg
pusha
or
pop
mov
xchg
add
add
sbb
add
sbb
pop
or
dec
dec
and
pop
lock
push
xchg
pusha
or
add
xchg
add
sbb
add
sbb
inc
or
ficomp
mov
inc
mov
fisttp
push
xchg
add
sbb
add
sbb
dec
pop
dec
fld
inc
push
xchg
add
sbb
add
sbb
push
or
add
add
sbb
inc
dec
dec
fldcw
xchg
pop
xchg
setae
fs
xchg
or
mov
add
sbb
dec
or
jp
stc
cmp
xchg
add
xchg
pusha
or
add
xchg
add
sbb
add
sbb
cmp
sbb
add
lock
enter
push
xchg
add
sbb
aam
sbb
add
xchg
add
sbb
add
sbb
aam
sbb
add
xchg
add
sbb
aam
sbb
add
xchg
add
sbb
add
sbb
int3
or
push
mov
test
push
push
xchg
add
sbb
add
sbb
inc
dec
dec
lock
xchg
add
sbb
add
sbb
cdq
stos
mov
add
sbb
add
sbb
dec
or
add
sbb
add
sbb
test
sbb
ja
mov
add
xchg
add
sbb
add
sbb
pop
or
or
add
sbb
arpl
sbb
add
sbb
add
sbb
outs
fidiv
add
sbb
arpl
sbb
add
sbb
fidiv
add
sbb
add
sbb
add
sbb
push
jmp
pop
push
dec
inc
mov
pop
inc
push
and
dec
mov
stc
popa
inc
sahf
cmp
adc
inc
or
push
pop
inc
and
pop
lock
xchg
call
add
sbb
add
sbb
add
je
add
sbb
scas
or
or
add
sbb
add
sbb
add
xchg
add
sbb
add
sbb
cwde
or
xchg
add
xchg
aam
sbb
add
xchg
add
sbb
aam
sbb
add
xchg
add
sbb
aam
sbb
add
xchg
add
sbb
add
sbb
loopne
sbb
jge
pop
out
dec
dec
push
fimul
xchg
aam
inc
xchg
inc
dec
push
fldcw
xchg
mov
inc
ret
lods
fisttp
xchg
aam
ficomp
pop
jp
fisttp
xchg
push
mov
push
fisttp
xchg
cs
in
(bad)
mov
push
lods
sub
les
out
push
xchg
out
movs
push
jae
push
push
rcr
cli
les
cmps
adc
mov
pusha
in
movs
lods
mov
jmp
mov
inc
lods
mov
sbb
mov
jmp
sbb
inc
iret
out
cwde
push
ins
call
enter
dec
push
setl
cmp
(bad)
jmp
inc
sbb
push
dec
push
ror
or
mov
enter
dec
sbb
dec
mov
(bad)
test
cmps
push
in
push
outs
aad
repnz
ds
ss
fidiv
fild
lods
in
cmp
sub
movs
push
ret
pop
daa
inc
cmps
outs
jmp
movs
mov
shr
rcl
add
push
add
mov
out
inc
(bad)
cmps
out
movs
inc
sub
mov
inc
sub
test
pop
daa
inc
cmps
adc
stc
push
push
cmp
mov
push
cmps
mov
adc
test
inc
dec
int3
loope
cmps
pop
or
fldcw
or
fstp
out
movs
mov
(bad)
jnp
mov
outs
sbb
(bad)
imul
movs
inc
sub
inc
out
inc
ins
loopne
lods
ds
inc
mov
outs
jl
ins
int
or
(bad)
dec
mov
ds
sar
cmp
add
add
ss
data16
lods
ds
inc
enter
pop
sbb
in
sub
call
inc
cmps
sbb
jmp
sbb
mov
mov
ins
adc
jmp
push
rcl
sbb
jmp
jae
push
jmp
jae
jmp
sbb
mov
pop
sbb
or
jmp
hlt
cmp
mov
test
(bad)
mov
jmp
push
icebp
push
lock
(bad)
sbb
mov
push
push
push
fsub
sbb
mov
mov
fwait
jge
pop
push
push
std
mov
dec
loop
pop
jae
mov
push
sbb
jb
jmp
sbb
mov
pop
pop
mov
jmp
fs
pop
push
lea
jmp
sbb
mov
pop
push
lea
jmp
sbb
mov
pop
push
lea
jmp
sbb
mov
pop
test
(bad)
icebp
jmp
sbb
mov
push
push
cmp
repnz
sbb
or
jmp
dec
ds
call
sbb
mov
xchg
inc
cmp
call
shr
sbb
jmp
push
shr
jmp
mov
cld
mov
(bad)
int
(bad)
pusha
repnz
stos
jb
add
movs
adc
xlat
or
jmp
push
shl
test
(bad)
mov
jmp
aam
les
mov
lock
jmp
sbb
mov
pop
xor
imul
repz
sbb
mov
pop
test
jmp
bnd
stos
inc
in
and
call
aas
mov
pop
test
lea
jmp
sbb
mov
pop
adc
inc
in
push
mov
mov
sbb
mov
and
push
(bad)
or
pop
add
xlat
jmp
sbb
mov
scas
sbb
in
xor
or
loopne
jne
xor
cmps
push
popa
lock
ja
retf
push
mov
(bad)
cmps
div
cmps
push
pop
xor
test
(bad)
mov
push
push
fsub
sbb
mov
xchg
sbb
jmp
sbb
test
mov
repnz
push
cdq
hlt
jmp
sbb
mov
cmps
push
pop
xor
test
(bad)
mov
jmp
inc
aas
pushf
pop
test
push
nop
jae
cdq
cmc
jno
sbb
sbb
mov
xchg
mov
repnz
jno
jmp
sbb
mov
pop
test
and
jmp
sbb
mov
pop
test
cmp
test
mov
cmps
sbb
jmp
sbb
mov
pop
test
movs
out
(bad)
js
mov
jo
pop
adc
shl
pop
adc
shr
sbb
jmp
push
cmp
repz
stos
inc
in
test
in
mov
jmp
arpl
mov
push
pop
(bad)
mov
pop
test
mov
cmps
sbb
jmp
adc
cld
pop
test
cmps
out
(bad)
je
icebp
je
(bad)
pop
sbb
inc
movs
mov
jmp
jmp
je
fcomp
(bad)
or
jmp
je
cld
pop
test
cmps
out
push
ja
pop
test
lea
mov
jb
cmps
push
pop
hlt
in
inc
movs
in
dec
pop
test
cmps
loopne
mov
lds
cmp
sbb
jmp
mov
xor
mov
mov
cmps
(bad)
lock
mov
test
(bad)
mov
test
mov
cmps
sbb
mov
jmp
inc
fcomi
pop
test
xor
pop
test
cmps
loopne
sbb
bnd
mov
inc
btr
repnz
push
pop
xor
test
(bad)
mov
mov
cmp
pop
sbb
mov
jmp
xor
jmp
sbb
mov
jmp
addr16
sbb
mov
jmp
(bad)
jmp
sbb
mov
or
xlat
jmp
js
mov
jmp
sbb
mov
movs
jne
cld
add
or
jmp
inc
aas
mov
jmp
sbb
mov
addr16
push
out
xor
bnd
mov
xor
test
adc
ja
jmp
sbb
mov
iret
lea
mov
mov
cmps
sbb
jmp
sbb
mov
mov
jae
pop
sbb
or
jmp
pusha
aas
mov
cmps
push
aad
jmp
pop
aas
mov
inc
xchg
inc
mul
test
lea
jmp
jae
jmp
and
pop
pusha
mov
loope
cmps
pop
jae
and
jne
jmp
jge
mov
cmps
pop
jae
xchg
pusha
popa
popa
movs
push
imul
sbb
mov
mov
ds
mov
ds
jmp
stos
jle
movs
mov
xorps
mov
mov
mov
sbb
mov
inc
cmc
mov
jmp
sbb
mov
mov
mov
pop
sbb
or
jmp
dec
ds
retf
inc
jo
arpl
fs
jb
cmps
xchg
movs
lock
fs
inc
mov
scas
xor
ds
mov
adc
sbb
mov
jmp
mul
(bad)
mov
mov
cmp
movs
mov
mov
call
lods
ds
xor
jmp
rcl
sub
shl
rcr
add
or
inc
adc
pusha
sti
test
icebp
(bad)
js
push
sub
movs
xchg
sub
pusha
jno
jmp
jp
xor
sbb
stc
push
sahf
stos
lods
xor
aad
jae
ds
aad
ror
mov
or
sahf
dec
xchg
fpatan
inc
ins
pop
test
inc
inc
inc
cmp
add
jecxz
pop
addr16
pop
add
adc
mov
(bad)
lock
push
dec
popf
(bad)
pop
push
ror
xchg
out
test
sub
out
and
jbe
mov
pop
(bad)
jnp
test
mov
outs
clc
sbb
outs
mov
mov
xchg
scas
outs
sbb
mov
into
gs
pop
cmc
mov
xor
aam
std
imul
retf
mov
or
movs
mov
popa
fs
push
shl
ss
cmps
push
ror
mov
dec
sub
int
add
or
push
mov
pop
sub
adc
jnp
ror
jns
in
add
ins
lock
(bad)
mov
mov
out
pop
mov
ds
push
pop
jo
dec
cmc
add
pop
mov
outs
in
mov
mov
and
jmp
(bad)
mov
test
mov
sbb
repz
in
outs
pop
call
pop
xchg
inc
shr
outs
pop
call
pop
cmp
pop
outs
pop
call
pop
aas
call
jno
jbe
jno
jbe
xor
je
aas
cmp
outs
es
mov
cmp
push
jno
cmp
jno
jbe
jno
jbe
fsubr
adc
jbe
jno
jbe
xor
dec
cmp
je
pop
jno
jbe
aas
cmp
pop
jno
cmp
jno
jbe
jno
jbe
sar
push
xor
xor
or
push
cld
cmp
jmp
cmp
cmp
pop
jno
cmp
jno
ja
cmp
jl
jae
cmp
je
adc
jbe
xor
ja
stos
mov
pushf
movs
jno
jbe
jno
jbe
ror
je
aas
jbe
pop
jno
jbe
mov
ja
sub
push
mov
int3
cmp
js
jno
jbe
jno
jbe
xor
adc
mov
push
jg
je
adc
test
push
stos
jae
cs
jno
jbe
xor
adc
mov
push
inc
jno
jbe
jno
jbe
sub
cwde
mov
je
adc
ja
int
sub
lods
sti
(bad)
cmp
cmp
cdq
ds
pop
leave
cmp
std
mov
(bad)
mov
lods
ds
pop
outs
lods
out
rcr
push
shr
push
shr
push
shr
push
shr
push
shr
movs
test
mov
push
std
push
or
call
inc
(bad)
in
or
adc
xor
jg
pop
pushf
or
mov
push
ror
in
jmp
inc
daa
ret
ja
mov
push
adc
punpckhbw
and
call
inc
aaa
cmp
dec
sub
inc
jle
ror
shr
dec
(bad)
fistp
stos
pop
inc
ret
push
dec
push
push
add
or
imul
sub
xor
cmps
hlt
or
adc
aas
in
movs
lods
adc
sub
jne
inc
ret
hlt
shl
sbb
add
test
ret
sbb
mov
sub
add
adc
push
ror
xor
popa
hlt
or
inc
inc
pop
and
dec
sub
or
movs
inc
sub
sub
cld
es
dec
std
mov
ror
xor
fmul
mov
mov
or
hlt
mov
into
std
or
or
nop
mov
dec
cmc
or
pop
cmp
pop
pop
daa
clc
loope
mov
cmp
aaa
push
dec
push
or
push
lods
xor
push
ins
js
pop
push
(bad)
fs
or
fs
or
and
or
mov
cmp
pop
cmp
fs
or
les
push
sbb
xchg
out
push
xchg
add
inc
push
pop
inc
mov
shl
in
or
outs
jmp
push
shl
lea
add
sub
test
aad
mov
jno
cmp
and
iret
adc
loopne
mov
(bad)
push
rcr
push
(bad)
in
movs
sbb
mov
jmp
out
movs
sbb
mov
jmp
repz
push
(bad)
in
movs
sbb
mov
mov
sbb
mov
jmp
fbld
(bad)
mov
jmp
adc
(bad)
mov
jmp
inc
movs
scas
xchg
inc
lods
dec
rol
sbb
mov
jmp
jecxz
push
sar
inc
xor
sbb
jmp
shl
add
jmp
mov
jae
fnstcw
call
sbb
mov
mov
(bad)
mov
ds
lea
sbb
mov
jmp
clc
adc
dec
shl
sbb
mov
jmp
stc
push
sbb
mov
jmp
mov
call
sbb
mov
add
mov
fnstcw
call
sbb
mov
stos
(bad)
push
aas
lods
mov
push
ds
pop
fcomp
pop
push
(bad)
in
movs
sbb
mov
jmp
lods
call
lods
ds
sbb
adc
sbb
mov
jmp
out
push
jae
push
push
sar
sbb
mov
jmp
adc
sbb
mov
jmp
mov
jmp
adc
(bad)
mov
jmp
adc
xlat
out
movs
sbb
int
sbb
mov
jmp
mov
jmp
in
mov
shr
scas
ds
movs
inc
xor
pop
lods
ficom
test
rcl
sbb
in
call
test
rcl
sbb
in
call
inc
adc
pop
cli
rol
cmp
mov
push
in
pop
push
lea
jmp
mov
mov
(bad)
out
movs
push
(bad)
in
mov
(bad)
mov
or
std
stc
in
shr
cmp
mov
rcl
push
(bad)
in
movs
sbb
mov
jmp
pop
pop
scas
pop
scas
add
sbb
int
sbb
mov
mov
mov
jmp
adc
push
(bad)
cmc
movs
sbb
mov
push
push
adc
mov
movs
dec
shl
(bad)
mov
jmp
pop
pop
push
out
cwde
lods
out
adc
(bad)
stc
xchg
sbb
mov
jmp
adc
(bad)
mov
jmp
mov
jmp
shl
fbld
pop
sbb
adc
sbb
mov
mov
out
push
jae
push
push
sar
sbb
mov
mov
sbb
mov
jmp
mov
jmp
adc
(bad)
mov
jmp
out
movs
jae
shl
(bad)
mov
mov
mov
jmp
in
mov
shr
scas
ds
movs
inc
xor
pop
lods
ficom
test
rcl
sbb
in
call
sbb
mov
inc
push
rcl
sbb
in
call
sbb
mov
xchg
lods
adc
cli
rol
cmp
mov
push
in
pop
push
lea
jmp
mov
pop
push
rcr
test
dec
pop
sbb
in
call
inc
add
pop
outs
std
stc
in
shr
cmp
mov
rcl
push
(bad)
in
movs
sbb
mov
jmp
pop
pop
scas
pop
scas
add
sbb
int
sbb
mov
mov
mov
jmp
cmc
movs
sbb
mov
jmp
adc
(bad)
stos
add
xchg
out
movs
dec
shl
(bad)
mov
jmp
cld
cwde
lods
push
pop
inc
cmp
cmp
sbb
mov
call
scas
xchg
mov
inc
sbb
mov
jmp
adc
lock
(bad)
mov
cmps
sbb
(bad)
mov
jmp
frstor
fucomp
movs
test
rcl
sbb
in
call
sbb
mov
push
push
(bad)
std
movs
sbb
mov
jmp
mov
jmp
sbb
adc
mov
mov
(bad)
mov
jmp
dec
pop
sbb
in
call
inc
xor
mov
rcl
inc
and
mov
push
in
in
movs
push
(bad)
stc
test
mov
jmp
mov
jmp
or
pop
in
and
(bad)
adc
ds
nop
cmp
mov
rcl
push
(bad)
in
movs
sbb
mov
jmp
adc
(bad)
in
movs
sbb
mov
mov
push
in
or
ds
inc
sti
rcl
fisub
adc
push
(bad)
cmc
movs
sbb
mov
jmp
call
inc
arpl
mov
push
(bad)
in
movs
sbb
mov
jmp
adc
push
in
jne
push
(bad)
stc
test
mov
jmp
mov
jmp
or
jmp
mov
movs
sbb
mov
jmp
in
jl
ds
push
sbb
adc
sbb
mov
push
and
adc
sbb
mov
jmp
ss
sbb
mov
jmp
adc
arpl
mov
stos
lods
adc
jae
shl
out
mov
call
sahf
and
repz
(bad)
cmc
movs
sbb
mov
jmp
adc
ds
push
repz
daa
push
cmp
mov
call
loopne
rcl
(bad)
mov
nop
stos
ds
inc
mov
mov
jmp
in
movs
sbb
mov
rcr
(bad)
call
push
cmp
adc
(bad)
mov
jmp
jnp
jg
in
lock
push
inc
movs
test
scas
pop
jae
shl
(bad)
mov
mov
mov
jmp
cmc
movs
sbb
mov
jmp
or
ret
push
shr
sbb
mov
jmp
shl
(bad)
mov
jmp
adc
sbb
mov
jmp
in
lock
push
inc
lods
add
lea
jmp
cmp
sbb
mov
jmp
fwait
lods
loopne
mov
mul
sbb
sahf
sbb
repz
(bad)
cmc
movs
sbb
mov
jmp
pop
out
(bad)
in
call
inc
xor
xchg
test
scas
pop
dec
and
cmc
movs
sbb
mov
jmp
mov
mov
mov
jmp
mov
xor
in
int
loopne
pop
stos
jl
dec
inc
add
lea
jmp
mov
pop
sbb
mov
jmp
inc
push
or
shl
ret
(bad)
pop
lea
and
cmp
in
lods
mov
pop
pop
mov
cs
test
rol
inc
mov
(bad)
pop
mov
cld
shl
push
ror
(bad)
imul
movs
push
fldz
movs
xchg
add
pop
daa
in
movs
ret
sub
push
iret
cmp
jnp
sbb
dec
pop
daa
cld
dec
popw
stc
cwde
push
sub
retf
fist
dec
lahf
fs
dec
dec
(bad)
jecxz
push
rol
test
inc
pop
push
ins
les
xchg
es
mov
mov
les
mov
ins
inc
cmps
lods
ds
mov
push
xlat
xchg
test
div
add
push
shr
inc
ins
loopne
std
push
loopne
jns
push
sbb
jmp
or
outs
mov
and
ds
mov
pop
inc
push
sub
movs
fbstp
call
push
pop
das
in
or
sbb
pop
fild
loopne
dec
mov
cmp
dec
cmps
inc
lods
into
adc
push
sub
outs
div
out
pusha
fnstenv
jo
rcr
cs
(bad)
test
or
xchg
aas
or
sahf
pop
or
sahf
pop
or
sahf
pop
push
ins
(bad)
jae
ins
sahf
pop
or
sahf
pop
fs
popf
pop
or
mov
pop
or
sahf
pop
and
pushf
aas
or
sahf
pop
or
sahf
pop
or
sahf
pop
and
addr16
sahf
pop
or
sahf
pop
inc
mov
mov
or
rcr
add
pop
or
ins
sahf
pop
ins
je
pop
or
repnz
or
sahf
pop
dec
add
or
sahf
pop
or
sahf
pop
xor
das
(bad)
mov
ins
rcr
ins
sahf
pop
addr16
mov
push
or
popf
pop
adc
outs
xor
or
sahf
pop
push
jecxz
aaa
or
sahf
pop
or
sahf
pop
fdivr
lahf
pop
dec
and
mov
or
sahf
pop
call
popa
in
jecxz
das
(bad)
mov
ins
rcr
mov
in
mov
ins
retf
ins
sahf
pop
or
sahf
pop
mov
int3
push
inc
outs
rcl
or
sahf
pop
or
sahf
pop
or
lahf
pop
fs
jns
into
shl
out
sub
push
jb
aad
out
adc
lds
fcmovnbe
mov
sbb
out
inc
xor
lods
ds
pop
lock
out
mov
jmp
mov
or
xchg
cmp
sbb
mov
jmp
leave
mov
(bad)
mov
jmp
cmp
push
rcr
sbb
in
call
sub
mov
movs
scas
push
scas
jmp
xor
(bad)
adc
(bad)
mov
jmp
lods
cmps
jmp
jb
inc
in
into
and
repz
(bad)
cmc
movs
sbb
mov
jmp
ins
pop
push
lea
jmp
out
movs
xchg
ror
imul
pop
push
lea
jmp
mov
cmc
sbb
mov
jmp
adc
push
(bad)
cmc
movs
sbb
mov
jmp
cdq
and
push
(bad)
(bad)
mov
jmp
int
sbb
mov
jmp
mov
jmp
(bad)
scas
push
inc
movs
test
inc
movs
scas
sbb
repz
(bad)
cmc
movs
sbb
mov
push
xor
shl
repz
fnstcw
call
sbb
mov
pop
(bad)
and
repz
(bad)
cmc
movs
sbb
mov
jmp
out
movs
loopne
mov
add
retf
lods
mov
jmp
push
cmps
dec
not
jae
shr
scas
xchg
inc
mov
push
adc
inc
push
or
repz
(bad)
mul
push
shr
sbb
mov
jmp
mov
jmp
mov
jmp
fwait
lods
jb
call
movs
outs
rcr
push
ror
cmp
push
or
cmps
jns
xor
and
add
push
push
(bad)
(bad)
movs
daa
sub
arpl
push
aas
cmp
inc
mov
sbb
mov
cmp
mov
outs
dec
mov
into
add
push
inc
(bad)
push
ins
in
movs
dec
shl
test
mov
outs
mov
add
dec
in
movs
inc
cmp
add
push
cwde
inc
retf
push
pop
popf
cmp
or
out
lahf
lods
ds
in
sub
cld
and
inc
mov
std
pop
mov
in
loopne
mov
fs
push
sub
pusha
into
icebp
jle
scas
lods
sub
pop
out
pusha
fstp
inc
div
ret
das
jbe
les
mov
imul
loop
in
push
je
cmc
sub
lods
into
adc
int
add
jecxz
ret
mov
repz
push
dec
cmc
call
mov
ins
sub
pop
daa
in
adc
in
dec
std
out
inc
push
rol
jns
(bad)
movs
retf
imul
or
jnp
mov
jnp
mov
es
hlt
jns
ds
jnp
add
push
mov
jns
scas
dec
jnp
mov
mov
aaa
sbb
xor
ja
cmc
pop
push
fs
lea
cs
aaa
jnp
mov
cmp
ficomp
jnp
mov
jnp
mov
mov
in
or
push
jnp
mov
jnp
mov
scas
adc
mov
xor
scas
aad
xor
jns
out
cmp
mov
jnp
mov
scas
and
cli
jg
jbe
xor
and
push
jnp
mov
jnp
mov
jnp
mov
les
jnp
push
xor
jbe
xor
xor
ret
js
add
xchg
cmp
mov
(bad)
in
mov
xor
ret
js
mov
popf
fsubp
sti
fist
adc
fs
mov
adc
(bad)
mov
jmp
pop
jmp
(bad)
shl
out
mov
xchg
sbb
mov
jmp
ja
sbb
in
call
push
shr
fimul
popf
sbb
pop
call
dec
(bad)
(bad)
stos
popa
repnz
sbb
mov
jmp
mov
jmp
push
mov
mov
jp
retf
inc
stos
sbb
mov
jmp
cmps
stos
pop
add
ficomp
mov
mov
push
ins
hlt
mov
push
pop
mov
sbb
mov
cmp
mov
mov
sbb
mov
ds
mov
jmp
jmp
rcr
push
out
mov
push
(bad)
cmp
sbb
mov
sbb
lds
sbb
mov
jmp
cmc
call
sbb
mov
jp
add
jbe
fst
sbb
mov
jmp
cld
loopne
enter
in
std
movs
movs
adc
test
mov
sar
inc
imul
push
fsubr
xor
arpl
sbb
sub
je
in
dec
mov
(bad)
icebp
inc
xchg
and
xchg
sub
push
ins
aad
or
ds
mov
push
gs
in
push
sar
jne
std
pop
repnz
aam
push
ror
(bad)
out
test
jecxz
pop
cmps
into
dec
push
std
inc
mov
fistp
mov
outs
jl
(bad)
ret
lahf
add
sub
les
push
ror
mov
in
dec
std
cli
enter
loopne
inc
adc
test
mov
and
push
ror
outs
in
or
call
push
rol
xlat
inc
arpl
shl
ins
mov
pop
mov
in
movs
lods
outs
adc
lahf
sub
inc
jg
add
or
dec
mov
sub
xor
das
std
or
inc
les
outs
and
dec
sub
add
std
inc
ins
loopne
mov
cmps
stos
mov
pushfw
(bad)
lods
ds
pop
or
adc
or
and
popf
out
scas
cmc
xchg
test
inc
mov
xchg
test
or
das
inc
arpl
add
and
sbb
inc
arpl
mov
and
cmp
adc
push
(bad)
push
ret
xor
mov
aas
out
cwde
push
ins
call
test
mov
cmps
push
cmp
xor
push
or
dec
sbb
ror
call
dec
into
and
cmp
or
std
jmp
cmp
dec
sbb
fdecstp
or
in
or
(bad)
pop
stos
cmc
neg
add
in
movs
(bad)
mov
add
sub
or
in
cmc
push
ror
pop
ret
(bad)
bound
pop
addr16
movs
cld
sar
dec
pop
daa
mov
sub
push
fdivr
cwde
leave
mov
fmulp
inc
push
ret
xor
mov
shr
(bad)
jb
movs
inc
xor
cmc
or
addr16
lahf
xor
dec
bound
cmp
adc
push
ror
add
in
or
push
shr
push
ins
in
or
movs
push
test
push
aas
add
or
fnstcw
into
pop
pop
dec
cmc
mov
ja
dec
mov
inc
aas
lods
ds
pop
div
inc
aaa
lods
adc
sar
mov
hlt
ror
stos
push
cmovo
pop
and
inc
add
leave
sub
test
push
(bad)
out
lock
mov
xlat
cmp
pop
jmp
mov
lea
push
(bad)
ins
aas
cmp
fld
cmps
inc
dec
dec
ss
and
push
dec
jp
and
rcr
pop
xor
aad
dec
jmp
adc
ins
es
jbe
or
jp
sub
rol
dec
add
int
int
in
out
out
ins
rcl
push
push
adc
push
push
adc
test
enter
pop
pop
jne
hlt
rcr
daa
sbb
inc
(bad)
and
sbb
cmp
jne
dec
push
lds
cmp
ins
jnp
cmps
mov
lahf
adc
inc
and
not
cmp
lock
pop
inc
adc
add
add
int
int
in
out
out
ins
rcl
push
push
adc
push
push
adc
in
test
leave
jmp
push
retf
fcomp
(bad)
hlt
rcr
daa
sbb
inc
(bad)
and
sbb
cmp
jne
dec
push
xchg
daa
cmp
pop
daa
xor
mov
xlat
pusha
out
ins
push
xor
inc
add
inc
pop
or
push
stos
shr
adc
adc
jb
rcl
ror
add
jo
sub
mov
data16
sahf
add
aam
iret
fnstenv
test
leave
xchg
sahf
cwde
leave
and
aam
outs
jo
das
ins
shl
shl
sahf
add
test
push
adc
test
sahf
pop
xchg
stos
les
enter
xchg
iret
ret
cwde
test
sar
ds
adc
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
aaa
out
movs
push
shl
xchg
(bad)
shl
rcl
mov
stc
push
dec
mov
(bad)
cmp
daa
pushf
(bad)
sbb
or
or
push
or
gs
pop
sbb
iret
jmp
sub
leave
rcl
inc
inc
pop
push
fwait
lods
outs
in
mov
lahf
test
mov
cld
mov
shr
test
jge
out
add
shr
movs
push
sub
int3
arpl
inc
or
sbb
mov
shr
or
sbb
mov
into
loope
mov
outs
jl
dec
ret
mov
outs
cmp
inc
mov
cmps
push
sub
sbb
cmp
jle
ins
sub
outs
cmp
mov
outs
xor
fcom
mov
push
pop
(bad)
dec
ins
sbb
inc
popf
dec
xchg
fstp
sub
pop
stos
pop
ret
mov
adc
pop
daa
adc
sub
push
test
fs
cmovb
loop
cmp
or
add
lahf
push
add
xor
or
pop
mov
ds
pop
push
adc
push
stos
lea
lods
mov
mov
outs
adc
jmp
mov
lods
ds
xor
push
mov
mov
outs
aam
pushf
call
fidiv
cmp
cwde
cs
mov
stos
and
aas
and
mov
and
stos
and
and
and
stos
and
and
and
mov
and
mov
and
and
and
and
(bad)
jge
push
mov
mov
push
mov
mov
and
mov
and
mov
and
and
and
and
out
mov
mov
call
xor
cld
and
mov
ins
aas
(bad)
pushf
xor
and
and
and
fsubr
ins
jle
in
xor
std
shl
xchg
inc
(bad)
xchg
stos
outs
data16
in
xor
in
xor
pop
shl
mov
or
test
push
ins
xchg
dec
in
xor
in
xor
cld
push
jg
stos
outs
cmps
test
ins
xor
add
xor
stos
and
and
sti
and
ins
data16
ins
xor
in
xor
and
outs
push
mov
ins
xor
in
xor
stos
loop
adc
and
stos
mov
cld
push
jge
stos
outs
cmps
test
ins
xor
in
xor
xchg
inc
xor
out
jle
in
xor
in
xor
or
aam
stos
cmp
push
jne
mov
and
in
xor
in
xor
in
xor
leave
and
cli
in
jle
in
xor
in
xor
stos
loop
adc
and
stos
mov
cld
push
jge
stos
outs
cmps
test
ins
xor
in
xor
in
xor
test
and
in
xor
in
xor
or
aam
stos
cmp
push
jne
mov
and
in
xor
and
outs
es
ins
xor
in
xor
stos
and
and
call
xor
push
jne
repnz
mov
in
xor
in
xor
in
xor
jge
lea
int3
and
mov
out
jle
in
xor
inc
inc
push
xchg
ins
jle
in
xor
in
xor
test
mov
test
push
shl
ins
xor
in
xor
in
xor
test
js
dec
and
stos
outs
jle
in
xor
in
xor
in
xor
jnp
or
push
jno
test
addr16
xor
in
xor
stos
and
cld
in
xor
fnstsw
xor
pop
lds
cmc
stos
and
in
xor
in
xor
in
push
jb
ins
xor
test
xor
in
xor
gs
sbb
popf
and
xchg
stos
outs
push
mov
ins
xor
in
xor
repz
stos
and
ins
jle
in
xor
in
xor
cwde
xor
scas
iret
jo
retf
and
cmp
mov
and
call
out
push
in
xor
or
push
mov
ins
xor
in
xor
in
xor
and
out
push
in
xor
in
xor
test
xor
test
cld
call
in
xor
in
xor
mov
ins
jle
in
xor
cmp
jle
and
cld
in
xor
in
xor
repz
sub
ins
push
mov
ins
xor
popf
hlt
xor
test
inc
call
jae
pop
(bad)
mov
out
in
xor
in
xor
in
xor
mov
div
mov
in
sub
ins
(bad)
mov
ins
xor
in
xor
mov
in
out
div
xor
xor
das
and
in
xor
xor
xor
jnp
pusha
test
in
xor
mov
pusha
scas
stos
outs
jle
in
xor
in
xor
stos
xor
stos
and
xor
mov
cmps
cmp
sub
inc
out
jle
in
xor
in
xor
cld
and
outs
cmps
test
ins
xor
in
xor
add
xor
retf
and
and
ds
test
ins
xor
in
xor
jb
sub
sub
(bad)
repz
mov
and
out
data16
ins
xor
test
xor
test
inc
shl
ins
xor
in
xor
jecxz
push
inc
out
jle
in
xor
in
xor
mov
in
in
jle
in
xor
mov
xor
xor
stos
cmp
shr
fld
cmp
mov
stos
and
in
jle
in
xor
in
xor
mov
xor
in
xor
in
xor
in
xor
and
pusha
stos
in
xor
in
xor
in
xor
xor
shl
jnp
pushf
cmp
outs
out
in
xor
in
xor
mov
in
xor
xor
xor
in
push
cld
in
xor
in
xor
mov
xor
xor
jle
jg
pushf
mov
stos
in
in
jle
in
xor
mov
xor
rcr
movs
add
or
fdiv
stos
xor
pushf
add
jl
stos
and
mov
push
lahf
stos
outs
push
mov
ins
xor
in
xor
cmps
sti
and
ins
data16
ins
xor
in
xor
retf
xor
ins
jle
in
xor
in
xor
stos
xor
test
in
rcl
and
jl
mov
in
pop
inc
jo
cmps
cmp
jg
pop
mov
cld
ds
test
ins
xor
in
xor
in
xor
retf
xor
push
jge
stos
outs
cmps
test
ins
xor
in
xor
pop
daa
xor
pop
or
test
cld
in
xor
leave
and
cld
in
xor
in
xor
stos
and
ins
xor
gs
(bad)
xchg
inc
push
inc
out
jle
in
xor
in
xor
movs
(bad)
xor
test
push
call
in
jle
in
xor
mov
xor
mov
in
pop
inc
jo
cmps
cmp
popf
into
pop
pushf
stos
outs
sbb
in
xor
cmp
stos
cmp
stos
and
xor
mov
cmps
cmp
xchg
inc
push
inc
out
jle
in
xor
in
xor
cld
and
outs
cmps
test
ins
xor
in
xor
in
xor
test
cld
shl
ins
xor
add
xor
retf
and
dec
stos
push
sbb
jg
jg
stos
sbb
stos
and
icebp
mov
pusha
imul
ins
xor
in
xor
sub
addr16
jne
mov
and
in
xor
in
xor
pop
into
sti
mov
sub
pusha
scas
in
xor
movs
cmp
(bad)
push
jne
in
mov
mov
in
xor
in
xor
aad
xor
in
mov
(bad)
in
xor
inc
and
mov
in
es
in
xor
in
xor
mov
in
xor
in
xor
movs
cmp
(bad)
cmps
fdiv
cs
fs
nop
mov
ins
push
retf
xor
movs
cmp
(bad)
cmps
fdiv
movs
jle
test
and
in
xor
in
xor
in
xor
stos
sub
push
jne
mov
and
ins
in
xor
in
xor
or
and
call
in
jle
in
xor
in
xor
add
xor
stos
and
mov
push
pop
sbb
xor
lock
inc
aas
xor
in
xor
sub
xor
in
xor
cld
cs
dec
stos
outs
cmps
test
ins
xor
in
xor
in
xor
cld
scas
mov
stos
outs
cmps
test
ins
xor
in
xor
in
xor
repz
dec
stos
outs
mov
(bad)
in
xor
in
xor
icebp
and
fcomip
jl
outs
out
mov
and
mov
out
mov
and
movs
(bad)
jg
and
or
daa
mov
cmp
rol
sbb
inc
pop
out
cwde
push
ins
call
sbb
(bad)
adc
sub
dec
sbb
cmovo
xor
lds
pop
pop
mov
cs
xchg
fld
adc
sti
pop
push
mov
dec
fisttp
and
mov
out
pop
mov
les
in
jnp
push
xor
push
sub
cdq
dec
xor
mov
push
jmp
and
hlt
dec
pop
(bad)
xchg
(bad)
movs
mov
int3
xor
inc
ror
dec
cmp
dec
std
scas
pop
jp
ret
in
gs
or
lahf
cmps
pop
cs
jg
aas
lods
mov
pop
add
int
or
cmp
dec
push
rcl
pop
daa
inc
cmps
and
mov
push
lods
outs
adc
aas
mov
std
into
adc
xor
imul
cmp
add
adc
outs
call
stos
out
mov
jp
add
xor
cmc
or
lods
arpl
xchg
cmc
push
push
stos
lods
into
adc
pop
dec
mov
jmp
div
movs
lods
adc
cmp
sbb
rcl
adc
mov
jmp
dec
jnp
xchg
add
sub
cwde
fmul
pop
leave
out
xchg
pop
fisttp
fcomp
dec
mov
push
jmp
jns
mov
mov
mov
fxch
jle
std
pusha
shr
lds
sbb
jmp
sbb
pop
lods
jmp
ins
fiadd
fs
xchg
popa
push
lods
jmp
ins
ficomp
lock
cli
mov
(bad)
retf
pop
fbld
int
div
sbb
dec
xor
dec
fisttp
dec
fisttp
in
dec
xor
fucomp
xchg
dec
fisttp
in
dec
bound
mov
add
push
jnp
xchg
add
ss
dec
adc
xchg
add
xchg
dec
jne
xor
dec
fstp
sbb
sub
add
add
jnp
xchg
add
xor
dec
jge
xor
fsubp
in
push
mov
add
pop
jnp
xchg
add
ss
test
add
stc
inc
loop
imul
dec
xchg
ja
or
add
mov
jnp
xchg
add
ss
dec
adc
xchg
add
cmp
add
pop
jnp
xchg
add
ins
dec
sub
jnp
fild
jnp
xchg
add
xor
test
dec
rcl
add
imul
dec
adc
xchg
add
pop
jnp
nop
add
push
cwde
shr
jns
addr16
jnp
xchg
add
mov
add
add
mov
rcr
xchg
add
scas
push
xchg
add
jnp
xchg
add
adc
rcl
dec
jnp
xchg
add
xor
fucomp
popf
inc
fisttp
dec
jmp
jne
enter
fucomp
sbb
dec
adc
xchg
add
jnp
xchg
add
xor
pop
push
jnp
xchg
add
push
retf
xchg
lds
fisttp
add
add
xor
mov
jmp
mov
sbb
add
dec
jnp
xchg
add
retf
fwait
xchg
add
sbb
(bad)
dec
jnp
xchg
add
mov
repnz
jnp
xchg
add
sub
inc
push
jnp
fild
jnp
xchg
add
lods
push
ret
add
ret
jnp
xchg
add
sbb
dec
adc
xchg
add
jnp
mov
adc
sar
xchg
add
ds
rcl
inc
mov
les
jnp
fild
jnp
xchg
add
sub
inc
sub
inc
push
jnp
fild
jnp
xchg
add
xor
and
push
mov
jnp
fild
jnp
xchg
add
xor
xchg
jmp
ss
test
mov
add
push
jnp
xchg
add
ss
test
add
mov
enter
fisttp
add
pop
jnp
xchg
add
cmp
push
lahf
mov
enter
fisttp
add
pop
jnp
xchg
add
loope
fisttp
les
jnp
fild
jnp
xchg
add
xchg
retf
ret
dec
fisttp
add
dec
jnp
xchg
add
jnp
xchg
add
jnp
mov
jns
sti
push
jnp
xchg
add
das
inc
aad
iret
hlt
inc
inc
sub
adc
dec
jns
xor
add
add
xchg
retf
sar
cmp
pop
lahf
cmp
fistp
loope
fisttp
les
jnp
fild
jnp
xchg
add
xor
add
add
sub
inc
xor
add
add
xor
test
dec
cmp
dec
jnp
fild
jnp
xchg
add
xchg
dec
jne
adc
pusha
fdivr
or
pop
sbb
pop
jne
retf
dec
ss
pop
int3
jnp
xchg
add
ja
xchg
add
jnp
xchg
add
jnp
xchg
add
xor
pop
push
jnp
xchg
add
jnp
nop
add
xor
pop
push
jnp
xchg
add
xor
pop
dec
aaa
jo
pop
and
sbb
mov
enter
fmul
retf
cmps
mov
push
push
dec
sbb
aaa
adc
jecxz
push
or
push
std
aaa
enter
pop
inc
inc
out
or
inc
aad
mul
dec
push
seto
aaa
sub
jmp
add
cmp
dec
icebp
inc
add
movs
jo
daa
inc
pushf
mov
mov
xor
mov
addr16
dec
dec
es
push
xor
adc
ja
cdq
lods
data16
push
rol
ror
shr
test
movs
pop
inc
mov
pop
add
in
movs
sub
push
in
cmp
cs
addr16
cmp
nop
test
in
movs
lods
ds
mov
push
mov
or
into
xchg
xor
jmp
std
out
bts
loop
xchg
ficomp
test
leave
or
cmp
dec
(bad)
mov
push
loop
(bad)
out
dec
std
repnz
push
ror
in
loopne
dec
std
dec
cmp
inc
cmps
mov
jnp
popa
push
test
push
cmp
push
push
ror
pop
pop
out
dec
pop
addr16
std
or
scas
cmp
rcr
retf
lock
in
add
sub
pop
push
gs
lods
ds
pop
inc
int
add
or
scas
ds
mov
mov
jne
fdiv
pushf
mov
mov
xchg
or
fnstsw
nop
pop
fnstsw
nop
pop
xchg
js
mov
fcom
ds
pop
or
pop
inc
jns
push
lahf
push
dec
sbb
ds
fnstsw
fcomp
fnstsw
nop
pop
xchg
call
or
ds
pop
lea
pop
nop
jno
leave
loop
pop
cld
push
fs
nop
jno
int
in
sbb
ficom
jno
retf
jge
int
and
xor
ficom
and
xchg
shl
cmp
adc
jae
push
push
imul
nop
push
xor
sbb
adc
sbb
mov
jmp
jl
sbb
mov
jmp
call
movs
outs
shl
movs
push
rcr
outs
inc
mov
xchg
mov
sbb
aad
add
jmp
repz
movs
stos
(bad)
test
or
or
shl
jmp
aad
cmp
adc
push
shr
jb
add
pop
ret
mov
out
movs
push
int
movs
mov
outs
jo
test
in
movs
mov
popa
lock
int3
in
movs
mov
(bad)
loopne
lods
movs
pop
and
pop
mov
xor
les
inc
aas
xlat
sub
jo
add
sbb
loop
std
pop
xor
jecxz
pop
fcmovnu
dec
inc
cmp
or
mov
ins
and
or
ret
dec
ins
adc
mov
sub
outs
in
mov
sbb
lods
ds
repz
xchg
inc
out
dec
std
(bad)
xor
push
xor
icebp
or
xchg
lods
inc
add
sbb
in
add
sub
(bad)
mov
mov
adc
sbb
xor
movs
inc
int
mov
mov
imul
and
ins
into
mov
cmp
sahf
sbb
cld
cld
js
lea
adc
fcomp
xor
scas
adc
or
aam
mov
popa
aad
adc
fldenv
xor
mov
sub
sahf
adc
clc
mov
popa
aad
jns
fnstcw
cmp
sahf
adc
call
and
std
and
std
and
popa
or
jecxz
sub
mov
les
jmp
ins
jecxz
sub
mov
test
std
fs
jecxz
sub
mov
ins
mov
sub
lods
std
fs
jecxz
sub
mov
xor
mov
and
jmp
mov
ins
mov
sub
lods
jmp
fs
jecxz
sub
mov
ins
jecxz
jb
jecxz
sub
jecxz
sub
mov
adc
lods
sbb
and
ins
jecxz
sub
lods
sbb
cdq
and
fptan
aas
mov
test
fs
jecxz
sub
mov
ins
jecxz
sub
xchg
(bad)
cwde
and
pop
jl
jecxz
sub
scas
mov
aas
mov
test
fs
jecxz
sub
mov
test
rep
jecxz
push
ins
jecxz
sub
jecxz
sub
mov
outs
jecxz
ins
jecxz
sub
mov
cmp
push
push
fwait
ins
jecxz
sub
mov
ins
jecxz
sub
mov
popa
lods
mov
outs
jecxz
fs
jecxz
sub
mov
ins
in
mov
jnp
pop
mov
ins
jecxz
sub
mov
and
repnz
cmc
push
pop
pop
ins
jecxz
sub
mov
aad
mov
jle
add
and
jmp
ins
jecxz
sub
cmps
mov
aas
mov
test
fs
jecxz
sub
lock
cmc
and
addr16
sub
ins
jecxz
sub
adc
pop
and
add
ins
jecxz
sub
mov
test
jmp
ins
mov
sub
lods
jmp
fs
jecxz
sub
loope
jbe
jecxz
sub
mov
aaa
sbb
addr16
cdq
pop
pop
and
retf
or
xor
add
ins
jecxz
sub
mov
ins
mov
or
aad
ret
add
ins
leave
and
add
outs
jecxz
gs
jecxz
sub
mov
fnstsw
das
imul
pop
addr16
lods
cmp
and
std
aaa
aas
mov
cmp
and
std
aaa
ins
jecxz
sub
mov
ins
jecxz
sub
or
std
(bad)
(bad)
push
cmp
sub
mov
ret
jb
jecxz
sub
mov
ins
pop
mov
es
dec
sub
call
mov
hlt
imul
fdivr
test
fwait
and
pop
jl
jecxz
sub
mov
xor
mov
and
jmp
mov
ins
arpl
dec
ins
jecxz
sub
push
mov
aaa
jae
pop
and
adc
sub
mov
ins
jecxz
sub
mov
and
lock
lods
mov
fs
jecxz
sub
mov
iret
or
xchg
(bad)
out
sub
mov
lods
test
fs
jecxz
sub
lods
fld
das
inc
push
xchg
repz
lods
leave
fs
jecxz
sub
mov
adc
lods
mov
das
inc
push
pop
jle
out
mov
lods
leave
fs
jecxz
sub
mov
ins
jecxz
sub
pusha
(bad)
gs
js
push
jne
ja
and
pop
ins
jecxz
sub
mov
test
std
pusha
ins
jecxz
sub
mov
or
icebp
mov
push
jmp
lods
sbb
inc
mov
mov
imul
ins
jecxz
sub
mov
xchg
daa
jns
gs
lahf
js
popf
pop
addr16
jmp
mov
ins
jecxz
sub
mov
aad
dec
imul
mov
sub
and
mov
(bad)
out
sub
or
xchg
das
jns
gs
scas
js
gs
addr16
jmp
mov
ins
add
push
aas
mov
sub
and
mov
ins
jecxz
sub
or
jae
scas
std
outs
jecxz
fs
jecxz
sub
mov
lea
push
xor
loop
fwait
ins
jecxz
sub
mov
and
mov
ins
jecxz
sub
aas
push
pop
mov
outs
inc
and
std
push
outs
jecxz
fs
jecxz
sub
lods
jmp
push
addr16
fst
mov
jecxz
sub
mov
ins
jecxz
sub
(bad)
ins
jecxz
sub
jmp
mov
fsub
(bad)
ins
jecxz
fwait
ins
jecxz
sub
mov
sub
hlt
sbb
and
int3
fdivr
sub
ins
jecxz
sub
jp
sub
pop
(bad)
ins
jecxz
fwait
ins
jecxz
sub
mov
sub
lods
sub
jmp
cmps
not
xchg
ins
jecxz
sub
mov
and
mov
outs
jecxz
fs
jecxz
sub
lods
mov
sub
mov
add
lods
mov
sub
mov
test
jmp
ins
jecxz
sub
mov
and
loope
ins
jecxz
sub
mov
ins
cmpxchg
and
jmp
add
ins
jecxz
sub
mov
xor
mov
and
pop
and
aaa
inc
cmp
sub
pop
fcom
add
cld
adc
adc
repnz
movs
lods
mov
jmp
mov
or
sbb
adc
sbb
mov
jmp
in
movs
mov
mov
call
pop
and
pop
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
lods
ds
pop
push
rcl
push
shr
push
shr
push
shr
push
shr
push
shr
lods
ds
pop
push
rcl
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
rol
and
inc
outs
and
inc
outs
and
shr
shr
push
shr
push
shr
push
shr
push
shr
push
shr
stc
push
or
shl
push
shr
push
shr
push
(bad)
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
xchg
out
movs
pop
jae
push
movs
lds
cmps
push
std
sti
push
push
sar
inc
popa
out
or
pop
(bad)
push
mov
dec
pop
mov
les
adc
push
loop
push
push
sub
movs
sub
adc
push
fild
rcr
cs
pop
sub
mov
inc
mul
pop
mov
outs
xor
clc
aas
dec
xchg
fst
mov
add
jmp
mov
cmps
retf
add
popf
ret
out
add
fild
out
push
int3
sbb
push
add
jmp
jbe
push
mov
xor
sahf
ret
lods
ds
inc
mov
outs
loopne
lods
aaa
stc
dec
dec
(bad)
lahf
inc
push
shr
lock
popf
int3
in
or
xchg
inc
sub
mov
repz
and
in
dec
cmc
sub
dec
lods
into
adc
mov
mov
xchg
inc
retf
push
sub
cmps
inc
cmp
enter
mov
outs
push
mov
shl
mov
rcl
stos
adc
nop
cmc
inc
adc
into
adc
push
dec
mov
outs
pop
xchg
dec
shl
stos
cld
or
mov
add
push
sub
mov
aam
in
dec
cmc
out
push
lods
adc
das
pop
pusha
push
loopne
push
cmove
add
gs
(bad)
xchg
out
sbb
bound
cli
mov
adc
mov
jae
mov
cli
popf
stc
out
movs
dec
cmp
adc
mov
adc
mov
mov
dec
cli
mov
adc
mov
inc
adc
adc
mov
inc
xor
adc
mov
clc
sub
out
movs
std
inc
sub
dec
mov
adc
mov
adc
mov
cli
mov
out
movs
dec
stos
adc
mov
dec
push
mov
pop
mov
dec
lea
cmp
pop
(bad)
xor
xchg
add
bound
cli
sub
aaa
in
movs
std
pop
adc
xor
dec
adc
shl
in
std
movs
movs
xchg
pop
mov
push
std
dec
push
push
sar
inc
shr
push
lds
loopne
and
mov
(bad)
sub
(bad)
and
cdq
rcr
push
paddsb
mov
push
das
sub
jmp
in
imul
int
add
push
inc
arpl
rol
sar
jnp
sub
movs
pop
lods
ficom
lock
and
aam
dec
repnz
test
lods
outs
adc
xor
dec
std
and
mul
rsqrtps
(bad)
rcl
or
in
in
or
sub
mov
into
xor
test
add
dec
int
(bad)
(bad)
sahf
div
loopne
add
or
retf
jae
in
push
push
int3
add
pop
daa
dec
mov
cs
push
lahf
ret
retf
clc
mov
data16
ds
lods
ds
or
adc
pop
xor
inc
fs
out
dec
std
bound
push
adc
stos
or
loop
ins
sub
or
cmp
mov
xor
test
ins
jmp
push
or
inc
xchg
fadd
popa
bnd
dec
test
xor
xchg
ja
shl
ins
and
shr
ins
and
rcl
ins
and
rol
shr
or
cmp
ins
and
inc
cmp
ins
and
ins
and
iret
sbb
shr
outs
and
ror
shr
ins
and
(bad)
sbb
ds
mov
(bad)
and
sbb
cmp
sar
cmp
ins
and
shr
or
cmp
ins
and
ins
dec
cmp
ins
and
shr
outs
and
ror
cmp
ins
and
mov
fsub
cmp
ins
and
mov
sbb
shr
ins
and
mov
and
bound
ret
cmp
ins
and
ret
cmp
ins
and
fild
cmp
ins
and
outs
and
shr
outs
and
sar
cmp
ins
and
outs
and
jbe
test
call
push
pop
in
mov
and
(bad)
jno
push
ins
pop
fucom
(bad)
popa
and
adc
sub
jno
loop
push
sbb
out
movs
outs
rcr
cmps
push
sar
cmp
cmps
mov
add
pushf
ss
mov
pop
sub
sbb
jmp
sub
movs
mov
aam
jmp
into
xor
mov
xor
xchg
arpl
push
outs
aad
push
scas
ds
sub
fld
inc
gs
push
sar
mov
dec
mov
gs
push
rol
inc
loop
mov
push
inc
push
sub
add
addr16
pop
mov
jmp
push
int
or
or
jle
add
out
or
inc
push
jl
sahf
std
iret
adc
push
adc
dec
or
mov
pop
mov
xchg
popf
fldenv
dec
inc
ins
loopne
lods
cmp
jbe
pop
adc
add
push
cdq
xor
or
addr16
sub
std
dec
test
ins
or
js
inc
pop
mov
outs
call
stos
inc
std
jecxz
scas
fdiv
std
dec
mov
fld
stc
cmp
add
bound
pop
clc
mov
out
inc
mov
outs
lock
sub
and
retf
jmp
and
and
xor
xor
jge
nop
push
pop
dec
pusha
xchg
ins
and
lock
push
jns
xor
aas
dec
xor
cmp
xor
or
adc
adc
mov
jb
jg
sbb
adc
jae
sub
stc
jg
jb
aaa
cmp
cmp
inc
adc
mov
(bad)
mov
jmp
mov
jmp
shl
in
std
movs
loopne
pop
stos
ret
push
(bad)
sub
movs
outs
ror
mov
mov
cs
inc
xor
mov
lds
(bad)
and
shr
mov
lds
ja
daa
arpl
push
dec
movs
and
inc
cmps
jmp
sar
adc
mov
data16
push
shr
mov
test
dec
std
mov
inc
jl
pop
es
sub
and
cmps
jge
cmc
or
outs
mov
add
ins
in
movs
enter
std
xchg
push
mov
sub
movs
repnz
movs
push
ins
in
movs
clc
and
pop
mov
in
movs
lods
sub
pop
out
js
mov
inc
out
push
sub
movs
mov
mov
je
inc
jae
das
leave
or
cmp
xchg
pop
daa
inc
sti
pop
sub
push
or
ds
outs
dec
rcl
stos
inc
sub
add
daa
inc
sbb
jmp
and
loope
cmps
loopne
mov
dec
add
stos
mov
into
sub
mov
outs
add
mov
ret
test
cmp
adc
ins
loopne
xor
cmps
dec
mov
lds
call
xor
inc
movs
addr16
lods
mov
ja
dec
pop
lock
dec
sbb
pop
dec
test
mov
stc
lock
pusha
push
push
jno
std
loope
cmp
mov
lds
pop
mov
dec
cwde
mov
dec
lock
push
lock
sbb
sub
adc
sub
dec
pop
fs
dec
call
or
repz
mov
loopne
clc
stc
add
fadd
pushf
sub
push
add
or
dec
pop
sbb
test
cmp
test
mov
push
ror
cmp
push
icebp
gs
xor
imul
inc
push
and
and
mov
inc
je
and
mov
cmp
xor
jecxz
adc
fisubr
stos
test
adc
adc
sbb
(bad)
mov
xor
iret
movs
fwait
cmp
test
push
add
or
rcr
push
in
in
movs
loopne
pop
stos
loop
call
movs
outs
shl
push
shr
push
or
add
das
cmc
pop
lea
mov
and
dec
and
out
dec
mov
add
xchg
mov
sbb
push
push
fmul
sub
adc
and
movs
lods
adc
adc
push
sub
or
inc
and
ret
mov
lods
sub
ror
push
sub
fist
dec
pop
fdiv
in
pop
(bad)
ds
movs
push
ror
hlt
shr
test
fild
jbe
cs
dec
fs
xchg
fstp
movs
retf
adc
outs
jo
dec
shr
xchg
in
int
or
sub
sub
xor
lods
or
das
add
adc
cwde
lods
into
adc
sub
daa
cmp
mov
addr16
xor
ins
cld
dec
dec
movs
pusha
pusha
add
inc
jno
mov
push
popa
or
lods
ds
pop
scas
ds
test
push
push
hlt
rcl
stos
push
push
add
and
add
mov
push
pop
mov
sub
fdivrp
xchg
sub
jb
mov
(bad)
sub
mov
mov
adc
std
(bad)
cmp
mov
mov
xor
mov
push
int
mov
in
or
call
mov
sbb
ss
fsubr
xchg
rcr
scas
inc
mov
push
fnstenv
mov
mov
xor
js
aaa
(bad)
ins
xchg
stos
jp
jmp
movs
(bad)
mov
ins
jbe
mov
or
xor
mov
lods
mov
mov
shl
aaa
fnstenv
mov
mov
xor
enter
mov
xor
mov
xor
mov
xor
js
mov
add
scas
sbb
xor
rol
fdiv
daa
xor
shl
bound
aaa
(bad)
adc
std
(bad)
mul
sub
xchg
std
(bad)
xchg
jp
cmp
mov
sub
xchg
lods
and
and
in
std
movs
movs
adc
sbb
push
sar
inc
ins
in
or
pop
xchg
scas
xor
call
pop
mov
xchg
mov
mov
or
or
pop
push
sub
enter
jmp
mov
sub
sbb
leave
(bad)
jmp
movs
cmp
push
(bad)
mov
cmp
clc
call
or
mov
es
(bad)
push
shl
ror
ds
inc
std
bound
pop
lods
ds
xor
scas
adc
ret
push
sub
inc
fst
dec
out
cmp
pop
(bad)
cmps
in
movs
mov
pop
xchg
or
dec
shr
test
popa
sub
js
push
adc
popa
or
dec
mov
ins
cld
push
lods
es
dec
dec
(bad)
mov
ret
or
push
cs
(bad)
out
xchg
add
add
dec
ins
or
dec
int
bound
outs
pop
dec
cmc
pop
imul
mov
cbw
push
inc
cmp
add
sub
in
xchg
xchg
jbe
xchg
(bad)
iret
xor
scas
ds
jnp
ret
adc
pop
out
movs
lods
into
adc
xchg
jmp
pop
sbb
adc
ins
pop
dec
mov
xchg
mov
jnp
push
push
lahf
inc
sbb
sbb
clc
std
leave
sbb
je
leave
sbb
or
jp
lds
pusha
adc
cld
lahf
fimul
dec
sub
gs
cmp
inc
push
cmp
jg
int
xchg
xchg
cs
push
cmp
lods
lds
xchg
test
dec
or
aad
xchg
loop
rcr
out
sar
in
lock
loopne
push
sar
push
(bad)
in
movs
sbb
mov
jmp
sub
lods
ds
xor
mov
jmp
out
movs
outs
shl
movs
push
rol
inc
xor
push
paddq
xchg
mov
cld
push
adc
sbb
push
sub
movs
mov
push
push
mov
push
xchg
inc
mov
out
daa
aaa
les
dec
cmps
dec
call
cmp
adc
(bad)
stos
out
movs
inc
sub
add
inc
xor
scas
add
in
movs
les
js
push
ror
int
pusha
mov
ins
test
shl
dec
popf
(bad)
pop
cs
lahf
retw
cdq
test
cmps
sbb
add
jg
movs
mov
and
mov
push
sub
call
pop
cld
or
adc
lea
cmp
ror
inc
xor
or
push
ror
dec
in
dec
std
out
push
inc
ins
loopne
jmp
bound
pop
loope
loopne
pop
adc
fs
dec
test
sub
push
push
dec
(bad)
inc
xchg
push
ror
mov
xchg
ret
push
inc
cwde
sbb
dec
std
outs
sub
add
cmp
or
jmp
lods
add
adc
pop
push
gs
lods
ds
inc
scas
ds
add
das
and
cs
add
sbb
mov
adc
fimul
popf
and
adc
dec
pop
adc
hlt
or
std
add
adc
push
mov
rol
(bad)
aam
gs
pop
dec
pop
dec
xor
popf
dec
pop
adc
add
aam
pop
adc
dec
pop
adc
dec
pop
adc
dec
inc
adc
repz
inc
les
add
adc
cs
pop
shl
pop
pop
ror
popf
or
adc
add
pop
pop
ror
popf
dec
pop
adc
dec
pop
mov
popf
dec
pop
adc
add
jnp
pop
xchg
dec
pop
pop
lahf
dec
pop
adc
hlt
mov
pop
pop
push
cmps
and
dec
pop
dec
xor
popf
inc
add
adc
dec
out
popf
adc
stc
dec
popf
dec
pop
adc
cmc
dec
repnz
xchg
test
dec
push
ror
popf
dec
pop
adc
dec
pop
mov
popf
dec
adc
and
add
push
shl
inc
inc
les
add
adc
dec
pop
dec
and
popf
xor
adc
dec
push
adc
repz
mov
dec
dec
mov
jmp
mov
sbb
mov
mov
shr
lods
out
popa
sub
lods
ds
cs
mov
jmp
shl
(bad)
mov
mov
jecxz
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
jg
in
lock
ret
jmp
cli
shr
data16
inc
mov
gs
add
sbb
mov
jmp
das
adc
inc
leave
add
(bad)
adc
(bad)
mov
jmp
sbb
jmp
cmp
aas
dec
mov
adc
sbb
mov
jmp
adc
(bad)
mov
jmp
add
(bad)
mov
jmp
cld
movs
out
popa
out
jo
ror
aas
dec
ja
(bad)
adc
sbb
mov
jmp
scas
pop
push
lea
jmp
mov
pop
push
popa
sub
lods
movs
and
mov
jmp
dec
add
jp
movs
lods
mov
sbb
mov
mov
cmp
movs
mov
mov
call
xchg
cmp
adc
shl
fs
shl
shl
test
call
jns
xor
push
pop
sbb
pop
cmps
xchg
push
mov
ror
add
push
or
push
mov
sbb
into
repz
(bad)
jb
movs
sbb
repz
mov
movs
inc
leave
dec
std
xor
inc
inc
sub
add
xchg
fld
cmc
push
test
std
(bad)
aam
lods
ds
cmc
int3
adc
pop
daa
dec
mov
fs
push
push
shl
loopne
out
dec
std
sahf
or
inc
xor
movs
or
outs
mov
pop
mov
outs
mov
inc
ja
mov
mov
push
xchg
add
dec
std
dec
jno
jb
add
mov
gs
les
xor
enter
add
pop
add
imul
loopne
call
daa
cld
push
inc
dec
jmp
sub
inc
adc
dec
push
cli
movs
lods
outs
adc
iret
inc
or
or
mov
dec
jl
cmp
xlat
std
inc
stos
cs
iret
cmp
js
sub
add
mov
xor
sbb
pushf
adc
cmp
adc
into
rol
and
pop
mov
nop
mov
mov
fidiv
mov
nop
retf
je
sar
daa
fld
ror
xchg
push
out
fidivr
jecxz
xor
pop
sbb
not
mov
xchg
mov
retf
or
cmps
fistp
and
cli
pop
cmp
pop
jne
cli
pop
sbb
mov
mov
sub
outs
sahf
mov
xchg
retf
out
adc
cmp
adc
faddp
inc
inc
fbld
pop
mov
nop
cmp
and
nop
jae
mov
nop
aas
adc
fisubr
scas
and
xor
nop
jae
mov
nop
hlt
adc
mov
jae
mov
nop
aas
adc
fidiv
mov
nop
mov
add
or
push
jmp
pop
mov
nop
xor
jl
cmp
sar
lock
in
lock
adc
and
in
fidiv
mov
nop
push
adc
jae
in
xchg
jae
mov
daa
fst
fmul
gs
int
cmp
pop
mov
nop
jae
mov
mov
pop
mov
nop
jae
mov
es
sbb
cmp
fnstsw
inc
jmp
adc
jae
mov
nop
cld
adc
cmp
in
jbe
or
xchg
jae
mov
nop
in
push
paddusw
in
lock
cmp
adc
jno
in
fidiv
mov
leave
loope
jmp
fild
add
retf
jmp
cmp
xchg
iret
cdq
add
retf
jmp
and
adc
shl
pushf
mov
scas
sbb
adc
lea
add
(bad)
adc
(bad)
mov
jmp
adc
push
(bad)
cmc
movs
sbb
mov
dec
movs
in
mov
push
std
fwait
int
sar
inc
and
or
popf
pop
(bad)
fcomp
das
sbb
mov
(bad)
cld
dec
push
ror
jl
add
dec
push
dec
push
(bad)
push
and
clc
ja
ret
movs
lea
dec
xlat
(bad)
mov
mov
xchg
(bad)
movs
lds
cmps
or
sbb
pop
addr16
movs
or
dec
xchg
movs
dec
push
int
movs
cmps
dec
or
inc
ins
adc
sbb
out
pop
mov
and
pop
pop
addr16
lahf
cmp
call
jmp
(bad)
jle
mov
lods
iret
cld
or
iret
xor
xchg
mov
loope
or
dec
rol
cs
movs
mov
movs
dec
pop
sar
xor
cld
dec
pop
daa
mov
push
inc
in
mov
push
sub
js
lods
ds
dec
adc
ds
dec
mov
les
inc
xor
mov
mov
outs
jo
enter
mov
sub
xor
movs
or
mov
movs
or
mov
fdiv
mov
scas
in
mov
mov
out
mov
sti
inc
pusha
test
aam
imul
inc
test
mov
imul
inc
lock
sub
inc
mov
mov
movs
or
mov
adc
or
mov
jmp
fsub
push
xchg
je
jmp
movs
pop
mov
movs
or
mov
adc
or
mov
movs
(bad)
out
mov
movs
or
mov
hlt
push
in
mov
jmp
mov
retf
js
and
mov
jmp
mov
retf
movs
or
mov
cmps
or
mov
sti
or
mov
movs
out
mov
xchg
push
add
movs
jb
mov
ss
mov
jecxz
int
div
dec
pushf
sub
sub
mov
sti
enter
inc
adc
or
mov
out
psubusb
mov
repz
popf
out
in
clc
jmp
sbb
fist
push
leave
push
inc
and
mov
movs
or
mov
movs
or
mov
into
dec
out
cmp
pop
cmps
cld
out
test
cmp
mov
out
(bad)
call
movs
or
mov
loope
scas
in
aad
pop
int3
aas
bound
aaa
movs
or
mov
sub
aaa
scas
repz
aaa
lock
push
clc
sub
xchg
add
xlat
mov
mov
stos
ins
and
repz
mov
repz
not
inc
mov
sti
jg
and
sub
popa
add
sub
sti
out
test
out
test
out
lods
out
push
mov
cli
push
mov
neg
ret
mov
or
ret
rol
loopne
mov
scas
or
mov
adc
mov
mov
cmps
mov
inc
int3
hlt
cli
push
lods
out
push
mov
mov
adc
ret
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
jmp
inc
xor
add
sti
scas
inc
mov
mov
inc
mov
jmp
repz
div
mov
out
inc
lods
or
inc
shl
out
inc
movs
jecxz
inc
mov
imul
inc
mov
out
mov
enter
movs
imul
inc
lods
mov
cmp
jl
shl
xchg
mov
xor
jmp
fwait
mov
outs
lahf
mov
cli
and
pop
in
add
(bad)
mov
sbb
popa
into
jmp
ja
movs
inc
pop
popf
int
jle
mov
mov
icebp
jo
cmp
pop
mov
loop
mov
jae
cmp
pop
inc
call
repz
cdq
call
div
mov
mov
jnp
jmp
or
dec
dec
rcl
fidivr
stos
inc
add
cdq
(bad)
out
jle
mov
pop
jmp
add
daa
neg
js
pusha
shl
xor
cdq
sub
push
lods
pusha
sub
or
xor
test
pop
mov
and
sub
pop
(bad)
ror
sub
dec
mov
and
add
push
sar
cld
shl
scas
outs
ret
cmp
or
or
inc
cmp
xchg
inc
xchg
xlat
sub
push
cmps
and
xor
sbb
push
sub
push
push
adc
cli
sar
pop
lods
aas
(bad)
mov
stos
dec
xchg
pusha
iret
rcl
xor
push
popf
and
dec
pop
imul
and
fsub
scas
enter
jbe
sbb
fsub
adc
clc
xor
leave
pop
push
xchg
stos
les
adc
cmp
ins
inc
out
xchg
dec
sub
mov
add
adc
(bad)
jl
bound
mov
inc
lahf
daa
add
retf
rcl
and
adc
aad
ss
add
imul
xor
mov
sub
iret
arpl
sti
xchg
fdivr
pop
mov
gs
cli
mov
test
es
or
mov
push
jl
mov
xor
sub
icebp
dec
add
fld
loopne
es
ds
rcl
xchg
or
test
xchg
xlat
sbb
adc
(bad)
stc
dec
mov
and
add
shr
test
clc
out
das
aad
pop
loopne
pop
ret
and
mov
sbb
sub
mov
cmp
jnp
mov
mov
pop
jmp
add
push
push
mov
rep
sbb
ins
std
test
or
fimul
repz
push
and
leave
inc
(bad)
add
test
push
(bad)
xchg
pushf
imul
addr16
scas
xor
rcl
adc
cmp
cmp
inc
ins
out
(bad)
into
lock
push
scas
mov
popf
xchg
jnp
xchg
mov
cmp
jmp
dec
and
ret
inc
or
xor
sub
pop
arpl
push
mov
fdivr
and
pusha
in
or
inc
pop
lahf
xlat
sar
mov
cmp
cmps
xor
xchg
xchg
mov
jae
jnp
pop
add
rcl
pop
scas
(bad)
retf
or
inc
xchg
rol
shl
cwde
sub
xchg
mov
repz
retf
test
clc
xchg
retf
and
adc
cdq
int3
push
mov
push
jns
push
sbb
test
mov
jnp
adc
adc
jb
adc
(bad)
cld
adc
push
shl
or
mov
sahf
lea
push
push
mov
sti
mov
cmp
fstp
mov
test
push
mov
or
xchg
jb
loopne
les
sbb
iret
jmp
lds
mov
not
popa
add
fwait
outs
add
inc
je
ror
sbb
cmp
movs
adc
mov
fs
and
ret
inc
sub
dec
loope
popf
jns
ss
dec
mov
mov
retf
retf
and
add
hlt
sbb
push
stos
or
pop
pop
out
jmp
mov
inc
js
add
dec
sbb
pusha
xchg
pushf
cmc
cmps
jne
hlt
xor
push
fadd
adc
inc
xor
and
adc
mov
int
add
mov
cmp
cmps
inc
and
dec
call
inc
mov
lods
mov
loope
(bad)
(bad)
sbb
push
push
cmp
inc
mov
jmp
inc
mov
jmp
imul
dec
lods
jecxz
pop
mov
daa
xor
in
es
cmc
outs
add
repz
cmps
jecxz
mov
mov
pop
fild
test
fwait
mov
cmc
sub
or
sub
jo
push
inc
pop
sbb
pop
scas
pop
cmp
neg
sbb
mov
fadd
int
sbb
mov
(bad)
jl
in
shl
mov
sub
adc
and
cmp
imul
inc
pushw
dec
out
sub
int3
mov
inc
std
fistp
iret
(bad)
out
cdq
cmc
mov
inc
inc
mov
jmp
into
cmp
push
jge
ret
mov
push
adc
mov
mov
sbb
mov
inc
inc
add
xor
imul
ins
(bad)
pusha
mov
add
sbb
fs
dec
pushf
xor
inc
clc
into
je
iret
adc
mov
pop
xchg
or
sub
out
repz
jns
mov
bound
mov
add
pop
(bad)
dec
daa
es
imul
jl
scas
dec
sbb
sbb
cmp
pop
cmc
(bad)
or
fcomp
or
imul
pusha
mov
ds
stos
loope
movs
jnp
inc
jno
xor
fwait
clc
dec
fnstcw
cs
xchg
sbb
ins
js
jnp
and
fcom
xchg
mov
xor
call
cmp
movs
push
out
mov
ret
sbb
fisub
sar
cmp
sub
sar
push
(bad)
test
frstor
sar
xlat
mov
adc
xchg
add
push
loope
sbb
xchg
xchg
dec
mov
mov
jno
(bad)
fstp
mov
mov
int3
push
jno
in
and
or
mov
fninit
mov
lea
dec
retf
jns
popa
not
test
adc
into
sti
nop
test
xchg
jae
jge
mov
inc
pop
or
inc
push
mov
fs
cli
pop
and
inc
mov
idiv
push
lods
imul
mov
mov
bound
mov
add
jae
dec
sub
ds
hlt
out
mov
cmps
mov
sbb
cmp
(bad)
je
cld
jmp
fidivr
cmp
lods
loopne
adc
popa
sub
sub
mov
das
fwait
nop
popa
jb
imul
pop
cmp
push
fwait
mov
ficomp
mov
xor
jno
shl
sbb
push
inc
adc
outs
mov
out
push
call
jb
dec
pop
scas
inc
or
pop
xchg
and
jne
outs
addr16
xchg
pop
inc
mov
mov
repnz
jns
dec
icebp
out
je
add
and
xchg
push
push
in
inc
fld
inc
data16
mov
scas
xor
in
and
xor
ja
xchg
test
pop
and
ja
jo
push
dec
dec
add
out
sahf
add
cmc
mov
xchg
pop
mov
jge
and
adc
adc
push
mov
std
lds
cmps
hlt
or
cli
push
add
addr16
popf
adc
call
ret
pop
push
jne
(bad)
sub
dec
or
imul
xor
push
imul
mov
xchg
ja
(bad)
shr
dec
loope
xor
add
pop
pop
mov
retf
lock
call
and
outs
mov
and
cmps
jmp
test
pop
inc
mov
fstp
push
cs
pop
adc
bound
dec
popa
fldl2t
push
hlt
jle
retf
or
mov
sub
test
xchg
mov
(bad)
outs
call
(bad)
ror
inc
loope
jl
outs
and
add
stc
mov
adc
and
adc
push
(bad)
push
into
pop
mov
mov
dec
xchg
xchg
mov
mov
push
or
or
fnsave
sub
sub
out
push
or
cmp
jmp
stc
fisub
push
rcl
clc
inc
cmp
sub
cdq
or
adc
mov
inc
test
out
ins
cmp
jbe
push
popa
jmp
pushf
pushf
hlt
test
xchg
push
cmp
mov
cmc
sbb
(bad)
fimul
pushf
push
fimul
jle
sbb
xchg
mov
ins
sub
mov
iret
inc
jle
mov
mov
pop
div
jp
not
push
mov
test
scas
xor
ins
add
icebp
push
pop
ror
scas
dec
dec
out
mov
push
dec
repnz
push
pop
les
ret
retf
aaa
(bad)
xor
pop
push
cmp
jg
add
xlat
cmps
or
into
jmp
or
pop
pop
adc
aad
call
add
dec
jae
(bad)
pop
or
cwde
mov
push
jle
adc
dec
mov
cmp
mov
mov
rcl
mov
stos
lea
ins
jge
outs
pushf
adc
lea
dec
mov
lods
ret
fadd
jl
addr16
pop
lahf
push
sub
in
jg
or
pop
jl
dec
jg
stc
xor
push
push
jg
scas
inc
mov
(bad)
out
inc
test
jmp
imul
push
test
stos
or
aaa
and
in
jae
mov
enter
test
ror
movs
scas
xor
or
add
push
stos
pop
adc
or
or
test
push
stos
je
adc
pusha
jae
ret
dec
js
push
xor
cdq
ds
adc
fild
aad
mov
mov
fisttp
or
call
ror
jmp
(bad)
jp
rcl
out
sbb
jl
sbb
(bad)
fcmovb
out
push
push
sti
clc
outs
imul
dec
loope
adc
(bad)
mov
shl
mov
fisubr
aas
and
js
xchg
mov
hlt
mov
mov
ds
mov
cmc
mov
jb
inc
shr
dec
mov
test
jg
cmp
push
jo
out
dec
ret
push
mov
(bad)
cld
cmp
sub
retf
cmps
cmc
stos
cmps
repnz
cmp
adc
mov
neg
shr
(bad)
push
push
in
inc
out
mov
out
dec
mov
sub
sbb
push
mov
add
sub
push
ins
dec
inc
repnz
outs
dec
jo
inc
lea
add
pop
retf
sub
int
push
pusha
cmp
dec
or
cmps
cmps
stc
outs
pop
retf
xchg
and
ret
inc
pop
mov
push
xor
push
push
cmp
jbe
cmp
cld
mov
mul
test
pop
fadd
push
push
ret
sbb
dec
dec
or
stc
sbb
or
pop
mov
std
mov
xchg
push
sbb
imul
cmps
cmp
cmp
adc
les
inc
or
fsub
repz
dec
inc
repnz
xchg
stc
xchg
sub
xor
or
push
movs
push
ins
mov
jmp
imul
push
movs
sti
outs
test
mov
and
lods
xor
inc
daa
xor
shl
std
adc
jo
or
out
jle
mov
enter
movs
div
jno
dec
xchg
imul
sbb
cmp
ins
aaa
sub
push
mov
icebp
add
and
push
xor
jp
push
fmul
jle
and
out
out
(bad)
sahf
adc
mov
unpckhps
out
pop
cwde
(bad)
enter
ins
mov
stc
(bad)
inc
dec
xchg
inc
dec
stc
arpl
loope
mov
and
arpl
jo
aam
pop
sub
inc
imul
push
leave
in
jge
pop
retf
and
mov
fiadd
movs
retf
sbb
lea
sahf
cld
ins
popf
push
jo
(bad)
ss
aad
stos
cli
xchg
fld
or
fcomip
xor
ret
icebp
enter
call
push
out
cli
push
pop
jg
sbb
cli
xchg
mov
ret
xor
adc
mov
mov
fwait
adc
sti
imul
and
pop
push
outs
into
cmp
hlt
or
test
sub
inc
or
jmp
pop
lods
or
mov
and
add
dec
ret
bound
xor
test
pop
in
and
sub
loop
(bad)
in
or
sub
ror
mov
call
gs
mov
mov
sbb
sub
or
inc
mov
ss
and
mov
jecxz
push
iret
or
mov
jmp
cmp
mul
addr16
sub
jge
sub
hlt
push
ins
inc
lock
std
ficom
cmp
xchg
fistp
xchg
aas
fisttp
and
int3
(bad)
ins
ss
js
lods
es
mov
jb
lds
jle
sub
into
add
aaa
xlat
jge
shl
bound
push
and
test
out
and
or
jmp
xchg
jae
pop
daa
in
push
push
xor
dec
xchg
test
sub
inc
mov
adc
out
lds
cdq
rcl
adc
ss
nop
mov
dec
cmp
sbb
in
pusha
hlt
dec
add
shl
push
mov
pop
jns
inc
es
adc
(bad)
movs
nop
(bad)
cld
pop
cmp
add
(bad)
jg
cli
outs
imul
jge
js
sub
sub
adc
test
in
lahf
xchg
movs
imul
mov
es
push
fcmove
mov
mov
lea
es
movs
std
hlt
mov
push
mov
sbb
dec
mov
mov
xchg
stos
repz
fidiv
adc
aaa
mov
push
std
int3
call
push
sbb
adc
push
jmp
jge
imul
out
clc
pop
jbe
push
pop
xchg
fidivr
mov
imul
push
fisub
pushf
std
add
inc
mov
sahf
or
nop
cli
call
loop
push
jmp
and
xchg
pop
xchg
inc
daa
fidivr
mov
cwde
(bad)
outs
xor
mov
push
mov
and
adc
dec
jl
aad
mov
or
dec
jo
and
lahf
sbb
adc
stos
cdq
mov
or
inc
sbb
inc
mov
repz
repz
imul
and
mov
ret
mov
or
inc
xor
clc
cmps
or
inc
and
xchg
xor
not
sti
mov
add
scas
paddq
(bad)
in
push
inc
in
xor
out
cwde
je
cli
in
push
lahf
inc
adc
in
repz
ret
xchg
rol
fistp
rcl
std
xchg
sbb
cli
jo
pop
or
push
mov
sbb
and
lea
fcomip
sbb
ins
cmp
and
fldcw
push
lods
dec
push
xor
cmp
push
dec
and
adc
cld
outs
mov
jnp
xchg
push
push
mov
imul
cmp
dec
jmp
fld
sbb
stos
push
pusha
add
out
adc
or
shl
push
mov
jle
repz
xor
fnsave
stc
(bad)
out
cmps
lahf
popf
shl
clc
test
adc
or
sub
or
and
jo
aad
jmp
sbb
push
fwait
jmp
or
mov
imul
inc
cmp
ins
rol
push
(bad)
ror
scas
lahf
sbb
jne
clc
and
xchg
(bad)
fmul
ins
adc
inc
or
dec
jne
(bad)
push
mov
dec
(bad)
gs
scas
ret
jno
push
in
mov
push
mov
sub
pop
fmul
scas
sub
lahf
xchg
add
vmread
cbw
inc
or
mul
loopne
(bad)
fnstcw
adc
fld
jle
pop
mov
lods
mov
in
cmp
xlat
ins
ficomp
inc
adc
retf
icebp
pusha
sbb
mov
xor
xlat
xchg
sub
push
xor
adc
xchg
inc
cmps
aas
sahf
(bad)
fimul
cmps
sub
mov
cmp
mov
int3
and
and
leave
add
mov
(bad)
lahf
into
sar
sub
stos
push
rol
das
jnp
das
jnp
push
aaa
(bad)
xchg
jns
inc
inc
pop
cs
(bad)
mov
shl
add
pop
and
rol
inc
pop
in
mov
imul
or
repz
inc
out
dec
adc
adc
scas
sub
frstor
enter
mov
ret
jle
out
mov
xor
sub
test
sar
pop
cmp
or
sar
imul
lahf
out
stos
test
cmp
sub
inc
add
or
xchg
sahf
inc
mov
sahf
and
rol
retf
and
sbb
cmp
enter
das
sbb
adc
out
mov
(bad)
jmp
push
jmp
not
pop
jmp
cmc
xchg
cmps
adc
jmp
push
mov
leave
inc
cmp
mov
(bad)
mov
fdiv
call
pop
jmp
jp
mov
cs
mov
push
push
call
xchg
ds
xor
popaw
sar
cmp
xor
xor
neg
push
movs
je
(bad)
cdq
mov
push
fadd
stos
fucomp
dec
jno
pop
lds
nop
retf
jno
push
mov
shl
or
jmp
sub
fadd
das
js
or
or
test
cmp
out
call
fidivr
jne
inc
push
out
or
test
arpl
adc
pop
xor
sbb
pusha
imul
dec
add
iret
xchg
ss
jmp
inc
je
inc
mov
jg
inc
int
retf
mul
pop
mov
(bad)
inc
sub
call
sub
push
inc
cmp
sbb
or
inc
add
out
lods
imul
inc
mov
imul
inc
mov
jb
xchg
lods
inc
loope
ins
mov
enter
lods
repz
das
pop
loope
cmps
outs
retf
mul
xchg
mov
fistp
push
sbb
add
shr
jne
loope
sbb
leave
test
mov
inc
pop
sahf
ret
or
xchg
mov
dec
add
(bad)
js
cmp
add
push
movs
test
mov
xchg
jp
popf
or
cmp
cdq
mov
jmp
pop
cmc
xor
sbb
add
xor
outs
mov
(bad)
jmp
dec
mov
fcmovu
mov
cs
scas
cs
inc
add
pop
call
xchg
sub
inc
loope
adc
test
retf
sar
loopne
outs
pushw
ret
nop
xchg
rcr
popa
add
arpl
and
mov
mov
arpl
push
movs
test
in
xor
push
cdq
adc
and
mov
jle
mov
add
inc
mov
ret
pop
enter
dec
fsub
sub
mov
mov
mov
cmp
icebp
sub
and
and
mov
and
push
stos
jbe
or
pop
cmps
push
mov
xchg
add
xchg
leave
and
jb
sbb
dec
pop
pop
sub
xchg
fild
call
repnz
sbb
fimul
pop
gs
cmp
sar
pop
in
fstp
fild
stos
div
aas
clc
add
cli
hlt
and
das
mov
out
mov
jmp
jle
sub
or
or
sub
xor
or
ins
mov
shr
test
int
sbb
xor
pop
pop
cmp
daa
add
dec
add
mov
dec
iret
dec
fimul
sbb
in
fs
mov
(bad)
shl
adc
push
add
mov
lds
call
fisub
test
jae
sbb
ja
cmp
sbb
dec
or
aaa
sub
rcr
das
and
in
jo
addr16
call
les
repz
xor
sbb
adc
sbb
xor
cvttps2pi
pop
xor
mov
cwde
or
mov
sbb
mov
or
int
sub
inc
je
and
shl
add
out
jp
and
std
xlat
add
mov
lds
and
sbb
mov
iret
ja
jp
test
push
test
cli
sbb
jns
leave
xchg
retf
(bad)
pop
push
neg
push
in
cmp
icebp
ja
and
push
fmul
sahf
lea
jne
nop
add
pop
inc
(bad)
or
call
fcom
xchg
ret
add
inc
ins
add
mov
mov
out
dec
movs
mul
dec
mov
jmp
imul
and
out
add
ja
add
repnz
ret
adc
dec
mov
repz
cmp
adc
test
pop
jmp
shr
mov
cmp
pusha
std
or
push
jp
test
cmp
shr
cmovo
sub
mov
jno
jne
or
aaa
pop
xchg
xchg
or
not
enter
add
jmp
sub
or
cmps
xor
rcr
in
cmp
lahf
push
sti
div
mov
inc
mov
fidiv
rcr
or
xchg
out
fwait
mov
push
dec
cmps
test
inc
jg
in
jnp
sbb
fsub
xor
push
jg
movs
movs
adc
jae
pushf
inc
scas
cmp
ins
leave
enter
jl
jle
xlat
rcr
jg
data16
sbb
fmul
and
push
fs
xor
or
fmul
lods
inc
daa
pop
retf
inc
xor
lahf
adc
sbb
mov
mov
sub
adc
mov
addr16
pop
dec
or
out
retf
loopne
mov
adc
fs
inc
fwait
repnz
adc
movs
add
push
gs
imul
clc
movs
cmp
xchg
addr16
and
je
cmp
(bad)
cmps
neg
lods
add
lahf
mov
pop
imul
pmulhw
fs
(bad)
or
mov
push
lods
cmp
ins
rcl
and
add
and
(bad)
jno
scas
jne
mov
fcmovb
sbb
push
repnz
aas
sti
sub
les
popa
cmp
xor
(bad)
jmp
test
xchg
or
movs
fnstsw
xor
and
fwait
lock
retf
test
or
jae
and
pop
in
dec
loopne
loop
movs
out
inc
test
jmp
repz
and
jbe
inc
popa
xor
inc
out
jmp
inc
movs
rep
push
pop
mov
popf
and
std
dec
sbb
out
fs
(bad)
cmp
mov
mov
ins
adc
push
mov
and
mov
ins
or
mov
jae
sbb
sub
mov
outs
dec
dec
add
lods
test
inc
(bad)
inc
and
out
call
mov
test
mov
xor
out
movs
aam
jle
mov
push
xchg
in
sub
test
pop
rol
in
push
icebp
pop
xchg
and
mov
std
mov
push
cmp
or
mov
das
mov
mov
cs
mov
(bad)
rcr
ins
fs
adc
pop
and
ins
inc
adc
fcmove
xchg
loope
arpl
adc
and
mov
loopne
add
jb
jp
adc
lahf
std
(bad)
fcomp
jmp
clc
test
dec
mov
cs
mov
rcl
and
fcomp
push
mov
enter
mov
inc
sbb
add
mov
(bad)
(bad)
jg
dec
mov
xor
pop
sbb
loope
cmp
int
xchg
(bad)
push
xchg
cmc
in
cli
add
(bad)
stos
push
data16
or
xor
sbb
in
ret
(bad)
rcr
inc
outs
sub
scas
mov
push
bound
push
out
cmp
mov
inc
mov
jge
scas
mov
sub
out
jo
cmps
mov
jno
xchg
adc
xchg
xor
add
xchg
or
dec
jb
adc
jl
push
test
cmps
fdiv
daa
sub
xchg
retf
stos
mov
mov
pop
sbb
lahf
inc
adc
xchg
pop
mov
sub
xor
mov
fadd
cmps
leave
or
sahf
js
ja
jo
int3
jecxz
cli
ret
in
add
adc
mov
not
xor
repnz
jns
xor
and
cmp
out
enter
and
push
loop
hlt
jle
sbb
aaa
pop
pop
pusha
aaa
addr16
inc
mov
dec
out
mov
adc
mov
dec
mov
loop
and
push
or
jae
add
pop
sbb
aam
es
out
mov
mov
cmp
sbb
lock
push
cmps
daa
sbb
mov
inc
jmp
mov
inc
(bad)
jmp
and
retf
lds
lods
ret
jge
add
pop
mov
cli
ret
pop
retf
push
movs
out
pop
jb
adc
aaa
pushf
mov
push
pop
xor
rcr
mov
movs
dec
jecxz
push
lds
cmp
xor
xchg
push
imul
push
stos
mov
popf
pop
xchg
adc
pusha
jae
xchg
js
es
inc
xchg
push
and
ret
test
aam
cmp
xor
jge
stc
dec
xor
(bad)
mov
inc
lods
test
sub
xchg
in
and
cmps
lods
pop
jae
(bad)
mov
in
add
(bad)
stos
add
mov
push
mov
bound
jmp
sub
and
jge
jmp
mov
pusha
xor
push
es
shr
jbe
test
sti
and
popf
cmp
out
push
(bad)
fld
push
jno
sahf
movs
jae
aas
cmps
xchg
pop
xor
(bad)
add
jge
xor
or
scas
mov
xor
mov
call
jns
or
neg
aaa
aaa
mov
test
sub
cmp
clc
aad
cmp
iret
daa
ret
stos
sbb
mov
sub
pop
adc
mov
loop
pop
hlt
cs
test
stos
fsub
sysenter
test
mov
mov
mov
add
xlat
pcmpeqb
int3
push
dec
sbb
das
loopne
test
outs
lahf
cmp
or
mov
(bad)
loope
xlat
(bad)
int
mov
mov
sub
and
rcl
sub
xchg
cmp
jnp
adc
pop
mov
out
jmp
xlat
jmp
dec
mov
jmp
push
lods
sti
cli
push
lods
sti
(bad)
push
and
pop
mov
retf
out
fisubr
mov
jo
mov
mov
mov
fidivr
mov
mov
inc
lock
push
lods
repnz
push
mov
(bad)
pusha
test
(bad)
jo
ret
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
push
dec
repz
retf
mov
dec
or
jmp
repz
inc
movs
or
dec
shl
out
inc
test
jmp
div
pop
mov
out
mov
mov
out
mov
repz
mul
push
mov
repz
dec
lods
rep
inc
loopne
inc
jg
repz
idiv
sbb
sub
jl
sub
shl
cmp
push
xchg
inc
mov
stos
xchg
mov
add
mov
adc
cmp
xchg
imul
test
xor
push
xchg
and
and
adc
jno
mov
bound
mov
push
and
and
mov
sti
(bad)
pop
scas
jmp
stos
les
aam
jecxz
sahf
and
add
inc
pop
pop
shr
jno
mov
pop
push
pop
les
inc
jae
stc
test
push
jle
mov
pusha
sub
cld
stc
scas
fs
call
dec
das
hlt
(bad)
neg
popa
sub
mov
pop
movs
retf
mov
cdq
test
xor
or
aam
sbb
dec
mov
int
push
dec
push
test
adc
pop
shrd
mov
cmp
popa
push
mov
push
out
mov
mov
and
rcr
mov
lods
xor
add
mov
pop
xchg
cmp
jle
jecxz
js
and
xchg
adc
xchg
adc
jae
jne
or
jle
js
fmul
and
jge
inc
jae
cmp
mov
addr16
(bad)
cdq
ficom
pop
hlt
adc
ds
lods
cld
lods
jg
mov
movs
jmp
jmp
cmp
jns
pop
adc
popf
cmp
inc
or
loope
dec
jno
pop
ror
mov
dec
popf
out
inc
pusha
rcr
and
jle
into
leave
inc
in
sbb
and
int3
icebp
call
popf
out
dec
jg
mov
mov
int
xchg
push
sub
jb
and
jne
fiadd
shl
mov
jb
sub
rcr
retf
fcomp
jge
xchg
cs
nop
fs
cmp
loope
jno
adc
add
push
out
mov
jg
stos
aas
add
push
inc
popf
jnp
sbb
les
cld
jp
jl
push
push
jmp
shr
fisubr
cs
das
dec
dec
out
aaa
cdq
pushf
stc
sbb
cmps
sti
sub
pop
retf
inc
mov
add
mov
mov
shr
inc
(bad)
push
sbb
stc
pop
mov
(bad)
aas
xchg
inc
jge
rcl
mov
es
cmp
into
test
inc
xor
mov
cld
icebp
xchg
mov
jmp
repnz
inc
xlat
mov
sub
outs
mov
jnp
(bad)
setne
mov
(bad)
aad
(bad)
iret
rcl
dec
dec
pop
repnz
jo
push
mov
movs
(bad)
mov
test
mov
mov
mov
sti
bnd
or
outs
ret
inc
shl
pop
mov
pusha
adc
sbb
dec
cmps
jbe
call
mov
ret
fldcw
not
mov
mov
add
push
lock
pushf
jle
dec
mov
or
jne
mov
cmp
out
jge
das
out
(bad)
leave
mov
mov
inc
pop
cmp
jmp
shl
leave
sbb
push
xor
pop
add
sti
pop
xor
(bad)
retf
loop
outs
outs
xor
push
jge
adc
test
in
mov
cmps
movq
loope
dec
test
loope
jge
xor
sub
aaa
test
mov
mov
pop
cmps
(bad)
cmp
pushf
repz
push
out
inc
and
test
lea
jnp
sbb
xlat
push
add
mov
xchg
sub
mov
and
dec
loopne
jmp
sbb
push
sbb
xor
push
mov
xchg
cwde
dec
cmps
mov
adc
(bad)
enter
out
dec
and
(bad)
push
mov
mov
mov
call
add
push
call
push
push
mov
mov
movs
std
push
xchg
jecxz
push
jns
mov
pop
cmc
pusha
mov
(bad)
mov
push
xor
out
test
out
inc
lods
repz
sti
repnz
mov
mov
pop
in
mov
add
repz
cmps
jecxz
mov
mov
les
stc
sbb
lds
aaa
iret
fsubr
sbb
jle
xor
out
iret
pop
mov
test
inc
xchg
mov
int3
push
dec
xor
push
out
sbb
icebp
cli
pop
aad
sub
push
xchg
inc
sbb
mov
xchg
retf
jmp
mov
mov
div
push
loop
retf
sbb
push
sub
addr16
push
xchg
cmp
enter
retf
imul
push
cli
loopne
mov
hlt
jno
jb
sbb
nop
out
cdq
pop
mov
jecxz
and
xchg
mov
ret
jmp
pop
(bad)
mov
sti
dec
pop
int
xor
outs
out
mov
mov
popa
push
cwde
sub
and
dec
cmp
mov
mov
retf
clc
mov
loope
retf
aad
or
gs
ret
push
sbb
rcr
cmps
xchg
sub
inc
loop
inc
add
cld
sub
addr16
dec
jae
cmp
out
sub
mov
(bad)
nop
ret
sbb
dec
aad
rol
test
mov
jne
dec
fisttp
mov
rcr
fst
cmp
add
xchg
xchg
or
push
jno
popa
js
neg
call
stc
outs
adc
adc
sbb
sub
pop
mov
retf
jb
dec
ds
rcr
push
xor
xchg
int3
mov
inc
or
jle
nop
push
call
(bad)
fsubr
jns
or
mov
(bad)
mov
lods
dec
test
dec
mov
aaa
jmp
std
dec
or
pushf
push
ret
ja
xchg
mov
dec
and
mov
shr
sub
arpl
icebp
and
sub
sub
mov
les
stc
stos
aaa
repnz
jge
jmp
test
retf
dec
mov
aas
fldcw
pushf
pop
cdq
nop
mov
repz
xchg
cwde
mov
jp
sub
icebp
std
nop
and
enter
jg
xchg
fs
or
inc
mov
jns
jae
into
pop
adc
sub
and
mov
push
or
cld
add
or
data16
cmp
push
enter
je
push
jmp
pop
jnp
push
in
das
or
cmp
cmp
and
cli
inc
stos
or
mov
add
lods
sbb
or
sub
or
adc
ds
pop
and
cwde
sub
outs
mov
test
and
xor
pop
sahf
invd
pop
mov
jo
ins
or
sub
mov
lahf
mov
je
test
rcr
lahf
cwde
icebp
ret
add
dec
je
push
ja
mov
dec
inc
std
movs
icebp
inc
pop
jne
sub
cmovnp
mov
outs
rcl
pop
and
sar
ins
add
and
ins
cmp
inc
push
jno
js
les
push
imul
or
mov
test
cmps
jb
aas
inc
sub
lods
dec
push
or
aas
pop
scas
rol
shr
mov
jg
test
dec
fidiv
mov
add
mov
xor
pop
inc
mov
les
mov
aam
mov
movaps
movs
mov
shl
in
movs
jmp
cld
push
addr16
cld
mov
mov
gs
clc
in
icebp
movs
test
shr
out
cmp
inc
mov
leave
jmp
sub
push
sbb
push
test
cs
cld
mov
dec
mov
loope
mov
pop
cmp
mov
(bad)
pop
and
jno
ins
push
mov
pop
sub
mov
xor
pop
mov
enter
mov
gs
pusha
xor
leave
into
adc
jp
int3
push
mov
test
push
(bad)
es
lods
es
aam
push
mov
adc
ins
xchg
fdivr
xchg
and
loopne
ds
sub
je
xchg
add
rdtsc
push
pop
or
lods
hlt
mov
int
mov
bswap
sbb
(bad)
addr16
lods
jno
stos
jns
rcl
(bad)
push
add
clc
pop
mov
sahf
clc
sbb
aaa
leave
cmp
add
adc
sbb
xchg
xor
movs
adc
pop
adc
inc
sub
(bad)
xor
cmp
sti
fimul
mov
jnp
push
jge
pop
shr
inc
repz
in
jmp
into
shl
jo
dec
fisubr
je
inc
lea
scas
mov
xor
add
jp
pop
cmp
xchg
adc
pop
lahf
movs
push
cmp
mov
push
int3
pop
mov
jne
inc
or
shr
arpl
ret
push
fisttp
xor
xchg
jmp
mov
pop
pop
aad
pushf
and
pop
and
ds
and
mov
ins
cmp
push
pop
maskmovq
sbb
in
loop
movs
sti
out
push
mov
jmp
repz
or
mov
push
and
out
adc
and
es
sub
in
scas
mov
enter
lods
repz
mul
repnz
pusha
in
outs
pushf
cmp
adc
jb
jbe
sub
fcomp
and
into
or
sbb
xchg
cli
mov
jmp
push
std
xchg
btc
shl
lods
aaa
stos
outs
pop
nop
add
sub
ds
cwde
outs
and
sbb
mov
lds
sbb
sbb
retf
mov
ins
repnz
hlt
add
out
mov
adc
lock
xchg
int
jl
pop
xchg
inc
cli
add
imul
mov
popf
pop
mov
je
add
push
xor
shl
(bad)
push
cmc
(bad)
mov
add
je
ss
outs
inc
dec
popf
push
jae
jg
push
pop
pop
sub
mov
inc
sbb
push
fwait
cmp
jno
inc
lods
sbb
cmps
sbb
pusha
inc
sub
push
and
jo
out
shl
fwait
clc
mov
jmp
sahf
sbb
stc
jmp
sub
pop
dec
(bad)
retf
inc
test
and
or
out
push
js
dec
push
cmp
or
mov
add
xor
retf
lds
jb
push
fs
push
sbb
inc
inc
aam
inc
sub
pop
sub
inc
fs
and
sbb
jbe
jbe
loopne
xor
movs
daa
icebp
xor
sbb
out
ss
sbb
sar
cli
xchg
pop
adc
jno
jge
sbb
add
addr16
xchg
ror
jae
mov
sbb
dec
rcr
add
add
sti
add
ja
inc
fist
mov
mov
fs
icebp
(bad)
aam
xlat
adc
movs
sbb
cmp
stos
add
popf
push
sub
pop
xor
ins
adc
sbb
es
idiv
pop
popf
aas
(bad)
xlat
cmp
mov
mov
int3
les
rcl
push
cli
ja
dec
stos
adc
cmp
or
xchg
scas
dec
mov
gs
xlat
or
mov
push
or
xchg
mov
aaa
push
inc
test
push
push
push
test
sti
fcomp
shr
fisttp
xchg
mov
out
out
push
repz
add
lods
repz
jnp
or
push
or
clc
iret
rol
mov
add
add
out
sub
push
std
(bad)
mov
inc
nop
mov
rol
mov
or
jne
aad
jp
nop
ror
sbb
mov
jge
and
outs
pop
hlt
adc
cwde
(bad)
rol
hlt
das
or
push
jmp
sar
test
mov
pop
dec
lock
xchg
pop
fucomi
jmp
mov
fidiv
pop
in
xchg
jae
inc
cmps
dec
jmp
push
push
push
mov
std
loope
bound
jns
xor
sub
xor
add
outs
test
mov
lock
push
or
xchg
aad
mov
fucom
push
push
sub
push
push
mov
rol
push
lahf
es
add
sub
stos
stos
mov
jecxz
inc
push
ret
mov
sub
hlt
jnp
(bad)
jmp
div
cld
iret
mov
aam
hlt
retf
out
xchg
call
cwde
(bad)
popf
jmp
es
stos
jmp
call
pop
cmp
mov
leave
out
adc
pop
inc
(bad)
lock
pop
mov
int3
jno
or
xor
dec
jbe
mov
mov
in
mov
loopne
pop
fistp
mov
pop
(bad)
call
aas
pushf
mov
addr16
lock
out
dec
mov
jp
sar
sub
lahf
fstp
jne
adc
sbb
sti
mov
and
push
imul
fmul
push
add
sub
in
add
adc
jbe
shl
cmps
add
shr
jo
aas
call
xchg
shl
cli
add
aas
xchg
lds
mov
dec
or
inc
es
xchg
xor
and
mov
or
or
mov
enter
aas
mov
jno
and
shl
xor
dec
retf
inc
xchg
push
jp
mov
add
test
(bad)
and
jecxz
inc
ja
mov
(bad)
imul
xchg
dec
sbb
frstor
je
adc
and
cmp
cmp
ja
cli
dec
xchg
cmp
jnp
mov
sub
movs
inc
fdiv
add
je
inc
ss
ficom
sbb
sahf
pop
ss
call
pushf
in
fcom
mov
cmp
fdiv
es
popf
push
mov
mov
jbe
faddp
xor
nop
jbe
fs
add
mov
or
stos
test
pop
mov
mov
mov
dec
mov
dec
out
inc
mov
out
inc
mov
sti
outs
or
push
movs
cmps
data16
mov
inc
lods
cmp
mov
inc
enter
test
popf
mov
shl
aaa
sub
hlt
cmp
pop
dec
shl
(bad)
cmp
fst
pop
and
std
xchg
mov
mov
shl
and
mov
lods
(bad)
fcomp
xor
icebp
mov
add
ins
fs
dec
lea
repnz
mov
and
sahf
inc
aaa
xchg
aam
call
lds
mov
je
aam
mov
js
fnstenv
mov
adc
sbb
adc
popf
xlat
xchg
loope
jno
cmp
ret
add
pop
arpl
xchg
std
mov
dec
and
add
pop
hlt
out
and
jge
sub
mov
cwde
xor
out
movs
push
addr16
pop
xor
add
(bad)
mov
fisttp
hlt
add
jmp
xchg
push
sub
sbb
in
(bad)
in
stos
lock
cld
cmp
cwde
mov
and
mov
das
jle
int3
jg
out
repnz
mov
push
pop
out
mov
mov
sub
cwde
adc
mov
pop
add
fucom
(bad)
retf
iret
es
mov
out
call
cli
popf
stos
nop
lock
adc
push
mov
cli
and
add
cmp
fwait
mov
jne
and
ins
scas
sbb
shl
mov
and
loope
lock
mov
cmc
jmp
sti
xchg
sub
fmul
jmp
dec
cs
fcomi
call
mov
mov
dec
movs
jl
cmp
cmp
jg
test
popf
push
fs
xlat
or
mov
in
iret
hlt
(bad)
xchg
dec
cmp
(bad)
fmul
jecxz
cmp
jge
add
xor
sar
les
mov
push
jns
fxrstor
(bad)
mov
mov
push
jae
inc
inc
rol
lds
iret
call
addr16
in
mov
mov
data16
in
bound
pop
mov
ja
popa
lock
ret
mov
sub
inc
xchg
pop
xchg
jb
clc
fistp
dec
shl
pop
scas
push
mov
dec
xchg
push
jle
ins
enter
gs
ds
sar
xchg
lock
jmp
cmc
(bad)
ficomp
jno
ror
mov
dec
pop
imul
mov
movs
sub
fs
pop
icebp
lods
nop
sbb
aas
addr16
cs
jmp
jno
mov
js
push
sub
or
cmp
ins
pusha
mov
push
pop
retf
cdq
into
jg
les
mov
ret
lea
lock
cs
sub
(bad)
pop
xchg
loop
xor
fcmovu
mov
enter
mov
push
enter
nop
arpl
xor
cmp
mov
ss
adc
xor
(bad)
loope
rcr
xor
add
shl
xlat
ret
test
addr16
xor
test
xchg
cli
sub
retf
adc
adc
scas
xacquire
mov
dec
ins
jmp
pop
add
(bad)
in
icebp
dec
(bad)
enter
sar
cmc
call
add
call
je
(bad)
je
in
cmp
aaa
cwde
or
adc
movs
add
and
aam
dec
fiadd
pop
push
push
sbb
stos
in
movs
ror
dec
sbb
jbe
pop
mov
xchg
mov
xor
push
mov
pop
inc
mov
xchg
loop
and
mov
call
push
and
clc
add
in
mov
cmp
dec
push
jbe
pop
jl
add
adc
(bad)
cmp
popf
jl
arpl
xchg
stos
sar
xor
adc
outs
std
retf
retf
nop
push
sahf
icebp
loop
icebp
xlat
rcr
ja
into
mov
adc
mov
and
adc
loop
inc
push
(bad)
add
push
jbe
cmps
dec
(bad)
jae
ss
cmp
(bad)
jbe
jne
fidiv
and
add
or
push
add
popf
sbb
mov
adc
test
inc
xchg
aas
cmp
mov
bound
add
sbb
mov
int
repnz
pop
mov
lods
mov
pop
push
rol
jbe
push
or
call
xor
adc
movs
push
xor
push
push
repz
sti
pop
shl
cdq
test
mov
lea
xor
(bad)
xor
pop
hlt
lods
pop
and
fcomip
ins
popf
and
mov
ss
mov
retf
jb
inc
sar
push
sti
pmaddwd
data16
pop
inc
dec
lods
sbb
pop
addr16
shl
movs
xor
push
rcr
icebp
xchg
cli
dec
fwait
scas
retf
rcr
mov
out
or
pop
retf
dec
xchg
lods
das
pop
ret
ja
sbb
mov
in
repz
ja
in
jno
and
lods
int
inc
dec
(bad)
enter
pusha
inc
imul
imul
xor
dec
call
and
mov
sub
push
cdq
xor
xor
and
aas
into
jle
xchg
(bad)
sbb
sub
cmp
cli
fld
cmp
push
mov
inc
sub
nop
sbb
add
sar
push
cwde
jb
jnp
adc
fmul
test
jae
cmp
xchg
jbe
jg
int
pop
out
or
adc
rcl
mov
sub
pusha
cmps
or
mov
add
xchg
push
sub
rol
mov
jnp
cld
mov
and
cmp
jnp
es
sahf
stos
scas
das
imul
test
aas
inc
lock
jns
out
cmp
loope
bound
les
xlat
out
push
shr
repz
cmp
cmp
dec
nop
fwait
mov
xchg
cmp
mov
daa
pop
shld
aam
pushf
mov
sbb
mov
lds
mov
inc
add
xchg
add
xchg
dec
pop
xchg
push
mov
outs
loope
push
mov
inc
ret
jae
fdivr
scas
or
dec
mov
and
fdivr
scas
rcr
mov
mov
popf
pop
pop
gs
std
in
cwde
scas
mov
test
scas
xchg
or
mov
xor
call
nop
mov
ja
xchg
inc
add
aam
pop
arpl
or
ficomp
(bad)
in
and
ins
sbb
mov
les
jae
pushf
cmp
xchg
mov
jno
jecxz
mov
fnstcw
and
cmp
mov
dec
push
add
xchg
sar
jecxz
xor
pop
lds
ja
and
fild
inc
mov
repz
mov
out
push
mov
imul
push
test
dec
in
mov
shr
and
mov
inc
jmp
jp
in
and
out
jp
aam
in
ins
mov
enter
movs
not
test
iret
gs
add
cmc
dec
into
sub
ja
and
xchg
cwde
mov
or
push
xchg
pop
ror
vpsrlw
retf
rol
sub
imul
ins
cmp
or
add
out
mov
add
pushf
adc
dec
or
dec
lea
mov
add
frstor
mov
jae
(bad)
nop
sbb
sbb
push
mov
mov
(bad)
test
popf
ja
dec
lods
in
add
cmp
inc
call
hlt
add
mov
in
fist
xchg
(bad)
pmuludq
addr16
mov
add
or
xchg
push
mov
mov
cmp
std
mov
test
pop
mov
scas
popa
pop
pop
inc
ret
and
jo
add
jb
add
into
mov
(bad)
pusha
lock
lods
push
or
movs
call
fwait
mov
loop
lahf
cmps
ret
dec
(bad)
jmp
popf
outs
mov
out
add
mov
xlat
in
xchg
cmp
push
pop
aad
aam
xchg
scas
mov
mov
mov
dec
lods
mov
scas
cmps
dec
mov
mov
outs
or
inc
xor
mov
sbb
sti
fyl2xp1
fcmovnu
jl
cli
dec
int3
outs
mul
add
dec
sub
out
test
outs
xchg
sbb
cmp
cmp
dec
cmps
scas
dec
lods
cwde
sub
sub
jae
mov
into
mov
push
sub
adc
in
xor
or
sbb
cmp
(bad)
aam
dec
sahf
fwait
add
ficomp
and
sahf
sbb
shr
xchg
dec
mov
mov
daa
popa
and
fcom
sub
in
sbb
pop
jnp
mov
inc
call
dec
in
push
(bad)
pop
inc
mov
repnz
pop
(bad)
lods
mov
int
int
cmp
fimul
push
movs
pop
sbb
aam
cmp
jb
in
iret
je
xor
stos
outs
sub
xchg
je
mov
cmp
js
and
dec
or
in
aas
cmp
loop
jne
stos
ja
mov
pcmpeqw
mov
fst
xchg
pop
(bad)
jmp
jbe
jno
jnp
stos
retf
pop
stos
into
(bad)
imul
addr16
pop
icebp
mov
cmps
jnp
push
push
jge
leave
test
pop
call
mov
mov
xor
cs
movs
cmp
ja
add
stos
adc
jnp
icebp
and
cwde
fcomp
xchg
xor
icebp
jge
pop
fist
sub
out
bound
cmp
jae
or
jl
ror
into
cmps
cmp
sbb
mov
jmp
shr
mov
shr
adc
sbb
inc
cmp
xchg
pop
add
cwde
pop
cmovo
xchg
bound
inc
mov
sbb
inc
pusha
pop
mov
imul
outs
popf
adc
and
jno
or
retf
in
sbb
inc
cmp
and
xchg
dec
jae
daa
dec
sub
arpl
(bad)
scas
inc
enter
pop
mov
mov
mov
inc
push
retf
push
add
push
and
adc
ror
aam
je
cwde
shr
fs
inc
push
or
call
fmulp
addr16
fld
mov
xor
scas
xchg
and
mov
cmp
add
adc
fidivr
(bad)
fmulp
test
lods
xor
fisubr
adc
int3
pop
stos
dec
mov
adc
adc
fimul
addr16
ret
arpl
popf
retf
jge
in
ret
je
xor
ja
push
enter
inc
push
xchg
test
sub
rcr
arpl
icebp
out
mov
push
enter
jp
push
scas
jbe
xor
mov
sti
or
mov
and
(bad)
sbb
mov
pop
sbb
pop
aad
or
add
cmp
or
callw
in
js
xor
ins
in
xchg
mov
mov
mov
mov
adc
dec
rcl
jp
sbb
pop
(bad)
mov
xchg
push
inc
pop
psubsb
mov
inc
popa
loop
repz
inc
or
or
mov
pop
or
outs
jnp
lock
lds
ins
fcomp
std
retf
adc
jp
stc
inc
fstp
fistp
scas
sub
shl
inc
rcr
pop
push
es
cmp
sbb
and
loope
aaa
cdq
daa
xchg
push
dec
call
jp
lahf
mov
aam
add
add
fist
dec
cdq
jae
xchg
mov
or
mov
mov
movs
sbb
out
cmp
out
push
push
retf
and
into
add
sub
xor
or
iret
mov
(bad)
ja
pop
(bad)
mov
daa
in
lods
outs
aaa
in
hlt
xchg
fist
fdiv
leave
inc
or
aad
enter
mov
push
in
fwait
dec
fcom
xor
scas
and
clc
in
push
arpl
stc
cld
push
gs
(bad)
cmp
repz
ja
in
ds
push
sub
or
iret
mov
in
(bad)
mov
and
mov
mov
xchg
les
outs
gs
dec
stos
cmps
jbe
test
sahf
pusha
push
scas
xor
jae
xor
xchg
js
pop
xor
jnp
popf
inc
in
cmp
iret
(bad)
neg
inc
mov
mov
xchg
outs
mov
mov
pop
outs
pushf
pusha
fs
std
pop
cmp
dec
lock
jnp
inc
mov
xchg
pop
xchg
int3
faddp
pop
bound
imul
sbb
mov
cmp
add
push
push
cdq
in
pop
aad
xchg
inc
mov
add
sub
push
lods
push
sbb
enter
retf
pop
mov
jmp
sub
inc
test
jmp
mov
xor
push
dec
retf
lahf
test
stos
popf
aas
pop
movs
dec
jbe
cli
(bad)
cmp
adc
jl
pop
sti
cmp
stos
(bad)
iret
or
jp
lods
sub
jge
xchg
in
inc
jb
fmulp
mov
inc
xor
test
dec
gs
clc
pop
jge
mov
pop
cwde
xchg
lea
mov
add
mov
into
rcl
sub
adc
inc
stos
pop
or
jg
dec
sub
add
outs
call
call
fsubr
js
(bad)
inc
xchg
dec
lea
sahf
sub
mov
ins
cwde
ins
push
rol
aam
sbb
xchg
mov
cmc
mov
clc
mov
mov
hlt
sbb
shl
push
mov
cmp
shl
mov
mov
shr
dec
mov
add
jmp
pop
sahf
enter
or
hlt
cmp
rcr
push
sub
shr
cmc
(bad)
fist
push
test
dec
dec
aaa
mov
pop
push
shr
mov
imul
out
sub
rcl
out
xchg
adc
adc
jno
push
out
or
mov
push
mov
sbb
xor
cmc
stc
jp
push
jne
xlat
jno
rcl
xchg
(bad)
and
stos
sbb
xchg
ds
xor
cmp
jmp
movs
adc
ja
sbb
shl
push
ins
pop
dec
movs
inc
in
dec
sub
jns
xor
hlt
cmc
int
jb
push
xchg
push
enter
pop
gs
xor
movs
xor
repnz
in
push
xor
xchg
push
or
push
aad
adc
push
and
mov
inc
mov
adc
xor
pop
test
and
icebp
ret
mov
imul
and
sub
mov
fisub
out
xchg
pop
rol
adc
mov
mov
int
inc
mov
je
(bad)
pushf
aaa
rol
jp
test
push
mov
sbb
out
aad
adc
sbb
call
sti
mov
mov
sbb
addr16
shr
in
cmc
dec
sti
jne
gs
out
adc
fist
cmps
pop
cs
mov
outs
test
cmp
xchg
mov
add
push
outs
dec
mov
dec
lods
push
outs
inc
mov
pop
and
adc
dec
sbb
sbb
test
into
(bad)
dec
jno
or
fmul
push
lods
mov
lahf
retf
int3
mov
jbe
inc
retf
mov
test
aaa
dec
jnp
outs
ins
sbb
hlt
xchg
sbb
dec
dec
jnp
pop
shl
cdq
cdq
test
shr
lods
mov
out
call
aad
pop
pop
add
in
out
sbb
in
cdq
jl
stc
and
cwde
push
add
pop
aad
push
pop
pop
hlt
mov
hlt
pop
(bad)
aas
jnp
dec
shr
mov
in
inc
je
cli
sub
inc
dec
pop
jmp
add
or
popf
mov
pop
jae
sahf
mov
int
in
ss
ds
cmp
rol
arpl
fwait
aaa
jg
sbb
int
mov
pop
and
es
repnz
adc
scas
(bad)
xor
jmp
cmps
fld
int3
jbe
pop
inc
mov
lds
outs
xchg
test
mov
outs
inc
dec
cld
push
xchg
sbb
test
mov
ja
or
dec
fsubr
add
cmp
sbb
sbb
nop
imul
das
jns
lods
push
adc
mov
cmp
adc
adc
jmp
retf
mov
add
arpl
cmp
ret
mov
dec
or
rcl
pop
mov
push
aas
test
jmp
xlat
adc
jmp
mov
sub
sbb
sbb
(bad)
cmova
push
stc
jae
jmp
or
xor
fldcw
adc
enter
xchg
sar
fisubr
xor
call
stos
in
sub
mov
loopne
jle
inc
cli
mov
cmps
mov
lahf
push
jnp
cld
add
mov
or
sbb
pop
(bad)
jmp
pop
or
jg
jae
imul
ret
and
mov
mov
mov
rcr
stos
pop
or
jns
push
push
out
mov
in
xchg
and
retf
call
sub
fisubr
lahf
xor
and
sbb
popa
mov
push
ins
iret
shr
(bad)
jecxz
(bad)
cwde
pop
mov
mov
test
dec
imul
enter
jae
iret
add
jbe
adc
mov
sbb
jecxz
mov
ret
and
out
or
test
mov
cwde
loopne
dec
mov
enter
imul
inc
stos
add
inc
mov
aad
arpl
call
xor
mov
jb
push
jmp
push
or
dec
ret
mov
xor
js
mov
sub
retf
cmps
cmp
sahf
ss
jmp
inc
push
imul
clc
addr16
jmp
jnp
les
adc
cs
test
in
(bad)
rcl
inc
mov
adc
retf
and
pop
sbb
and
pop
mov
cld
add
call
repz
or
jbe
jno
xor
cmc
dec
mov
push
lods
addr16
sub
push
fnsave
jmp
test
repz
jmp
and
pushf
push
lock
je
dec
je
push
adc
or
jns
jl
pop
dec
mov
dec
mov
add
addr16
mul
jb
cmp
pop
mov
aam
adc
jge
and
not
dec
shl
jp
stos
cmp
push
test
push
or
push
ret
push
pushf
cmps
push
imul
les
lods
inc
pop
mov
jo
stc
adc
jmp
xor
call
arpl
adc
fcmovne
sub
popf
fsubr
or
adc
or
sbb
mov
and
mov
test
and
jae
sahf
cmc
mov
dec
pop
sbb
or
ins
and
push
js
inc
ss
jae
repz
mov
sbb
loopne
inc
jl
adc
pushf
scas
mov
aas
rcr
xchg
adc
and
pop
inc
or
repnz
arpl
xchg
rcr
ss
jle
ins
pop
jb
dec
fdivr
cmp
cmp
pop
xchg
retf
sbb
jge
shl
adc
mov
loopne
cs
cmp
loop
ins
mov
(bad)
mov
out
adc
xchg
iret
loope
adc
xchg
or
push
pop
iret
mov
dec
stos
mov
mov
xchg
push
bnd
xchg
and
popf
push
jecxz
mov
shl
lock
mov
mov
daa
loope
xchg
dec
mul
into
mov
inc
in
enter
mov
pop
xchg
fild
ds
and
dec
ds
jo
xor
and
imul
jnp
and
lea
sub
ins
sbb
leave
sub
dec
cmp
movs
pushf
int
mov
loopne
and
inc
dec
inc
pop
imul
mov
push
sbb
or
scas
jp
jmp
(bad)
enter
imul
adc
jo
lods
dec
add
pop
or
mov
jbe
in
in
shl
sub
inc
in
into
jp
mov
mov
out
xchg
std
sub
out
inc
sbb
clc
inc
ins
aam
fcom
xchg
inc
jp
sbb
icebp
jmp
inc
loopne
out
mov
out
inc
mov
jmp
repz
add
xor
out
lods
ret
cmps
xor
das
addr16
inc
mov
repz
dec
ins
xlat
sbb
cmp
or
jmp
mov
sbb
xchg
jecxz
shl
pop
hlt
arpl
mov
jge
pavgb
or
push
xchg
or
mov
adc
or
xchg
ret
jge
add
sbb
jno
in
mov
sub
sbb
iret
fild
and
mov
dec
xchg
test
outs
sbb
inc
outs
bound
sar
jl
fwait
fs
fild
(bad)
mov
iret
std
stc
arpl
shr
mov
mov
and
dec
sbb
mov
jp
dec
xchg
xchg
stc
and
addr16
loope
pop
lds
aam
push
dec
out
outs
lock
or
mov
xor
call
sub
idiv
jb
out
fldenv
xor
cs
xchg
sub
mov
inc
push
jb
inc
jb
repnz
sar
call
push
iret
xchg
and
dec
imul
push
cmps
xor
in
jge
mov
mov
leave
mov
cmp
mov
in
data16
out
dec
fmul
pop
jl
inc
jl
dec
arpl
imul
lods
lods
sbb
mov
sub
pop
into
int3
jge
push
retf
fisubr
sahf
imul
icebp
dec
adc
in
int
fild
lock
clc
and
ret
test
mov
jae
mov
push
adc
dec
cmp
mov
clc
outs
retf
test
push
out
jae
ins
and
mul
sbb
and
xchg
mov
stc
add
loop
dec
mov
xchg
lds
jle
aad
pop
scas
cs
mov
add
cld
call
sahf
pop
xchg
pusha
add
add
dec
pop
mov
dec
les
cmp
push
pushf
outs
ja
outs
push
xlat
push
pop
je
rcr
std
jns
(bad)
xor
push
sar
in
iret
xor
pop
jnp
repz
and
add
inc
jg
nop
mov
(bad)
jnp
push
retf
push
pop
(bad)
xchg
sub
fsubr
imul
and
mov
int
xor
es
sbb
pop
test
xor
js
jmp
jge
sbb
and
lods
lds
push
mov
sub
(bad)
dec
mov
add
xchg
ss
in
xchg
adc
loope
mov
lea
retf
outs
aam
and
dec
test
outs
retf
cld
dec
rol
retf
inc
cmp
push
cmp
imul
push
lds
or
push
or
in
call
mov
in
lds
inc
push
cmp
inc
cmps
pop
retf
cld
push
data16
shl
rcl
adc
retf
mov
sub
lock
add
shl
mov
xlat
(bad)
cmp
mov
push
call
pusha
fs
loop
aaa
mov
cmc
fidivr
adc
mov
scas
icebp
fadd
pop
push
or
mov
jnp
add
in
mov
mov
cmp
fnsave
stos
loope
aam
pop
xor
push
ret
fs
(bad)
loop
fdiv
inc
sub
xor
loope
out
out
cs
push
xor
jg
iret
ja
push
dec
jle
sbb
adc
jns
mov
jno
add
daa
aas
mov
or
sti
push
into
aam
aaa
lock
test
sub
sbb
addr16
aad
push
mov
push
mov
mov
push
xchg
jns
jns
addr16
test
jne
dec
daa
mov
mov
fdivp
aaa
ins
retf
call
ds
test
mov
(bad)
retf
or
imul
aaa
mov
in
lahf
add
std
ins
jle
jle
mov
push
push
add
cmp
int3
pushf
jmp
cs
shl
in
cmp
shr
push
sbb
pop
(bad)
or
push
je
pop
xchg
call
xchg
ins
out
(bad)
jmp
mov
mov
cmp
push
add
pop
loopne
retf
sahf
xor
data16
pop
fild
loop
lock
jp
aam
xor
mov
mov
and
pop
stc
adc
push
mov
lods
repz
rol
dec
xchg
cmp
adc
sub
sub
call
cmp
jecxz
das
cmc
and
loopne
sar
push
push
sti
js
dec
out
jae
dec
push
and
pushf
loopne
sbb
dec
mov
sbb
clc
and
mov
xor
jecxz
(bad)
push
jo
pop
adc
sub
sub
xchg
sub
xor
dec
mov
jle
xlat
cli
outs
stos
nop
dec
sbb
or
cdq
pop
(bad)
or
inc
push
push
xor
push
ret
and
jg
dec
fnstsw
sub
test
retf
lods
sub
mov
add
mov
xchg
addr16
xchg
test
jge
lock
popf
or
ins
cmp
jg
repnz
jg
xchg
inc
fcomp
mov
mov
gs
ret
dec
cmp
(bad)
jmp
xchg
ffreep
sub
fs
not
repnz
fnstenv
test
iret
push
jae
lock
mov
jo
xchg
imul
push
data16
fsubr
inc
ins
and
push
xor
cmp
stos
push
inc
mov
push
fild
icebp
sub
iret
add
(bad)
bound
stc
rcl
mov
mov
inc
mov
sub
imul
mov
mov
fbld
je
test
lods
cmp
cmp
outs
mov
pop
stos
push
pusha
and
add
push
les
movs
es
cmc
sub
das
push
fistp
inc
cmc
push
or
inc
push
sahf
outs
cdq
in
pusha
pop
cmp
jecxz
inc
dec
adc
mov
jge
cmps
aad
cmp
adc
cmc
test
js
adc
rcr
fmul
std
xchg
ret
or
or
dec
out
inc
add
pop
stos
mov
inc
jg
pop
mov
and
add
mov
fs
xchg
das
push
push
mov
xlat
sar
loope
dec
cmps
fs
lods
stc
int
daa
ffree
mov
pop
outs
push
adc
cmc
ds
lods
inc
ds
rol
mov
sub
stos
enter
mov
pop
pop
ret
retf
(bad)
popf
mov
jb
fldenv
cli
cmp
add
fmul
add
jbe
add
mov
sub
mov
push
in
sub
lea
in
popf
test
adc
mov
cdq
push
jl
mov
push
in
cli
fld
sbb
xor
imul
test
and
lods
scas
jno
cwde
cmp
and
xor
(bad)
xchg
mov
(bad)
stc
pop
ret
inc
mov
push
and
bound
jle
sub
repz
shr
sub
inc
push
push
(bad)
mov
pop
gs
and
mov
jae
push
arpl
fild
cmp
je
retf
adc
je
enter
icebp
(bad)
sar
mov
jnp
fcmovne
mov
pop
enter
sahf
adc
movs
enter
jno
jmp
sahf
jne
or
out
mov
addr16
sub
sbb
aam
retf
jbe
push
xchg
lahf
mov
jo
push
adc
push
test
ret
cli
and
dec
dec
fneni(8087
mov
imul
ror
add
jmp
fild
sbb
scas
mul
lds
dec
retf
inc
daa
ror
sbb
push
inc
mov
bound
dec
push
jne
cmc
hlt
xor
shl
mov
(bad)
mov
outs
inc
inc
ins
test
mov
xor
aas
mov
dec
fdiv
push
mov
(bad)
jl
adc
movs
sahf
jecxz
sbb
movs
push
cdq
cmp
pop
inc
jl
leave
pop
sahf
scas
lods
sub
nop
sub
mov
cmp
sti
pusha
push
push
adc
push
xlat
jge
cmp
aaa
push
or
lahf
mov
mov
pop
dec
push
xchg
imul
lock
rol
mov
or
popa
pushf
push
push
aam
lds
sbb
call
jmp
out
mov
pop
jne
movs
ins
bound
ja
cmp
sbb
imul
pop
adc
sbb
int
fistp
aam
outs
(bad)
test
test
call
ret
test
inc
or
call
lock
imul
push
xchg
cmp
dec
xor
sbb
pop
add
(bad)
mov
jmp
test
loop
cmc
dec
frstor
adc
dec
les
pop
jg
xor
pop
xor
jns
adc
test
add
xchg
adc
pcmpeqd
loop
icebp
sahf
or
jo
sti
pop
xchg
sbb
inc
mov
or
push
pop
add
int
loop
dec
lock
xor
stos
in
clc
sbb
dec
popa
adc
mov
xor
inc
in
loope
mov
push
inc
repz
retf
lods
dec
outs
in
xchg
dec
push
rcl
pop
das
inc
or
inc
mov
(bad)
jmp
shl
jns
fadd
popf
xor
push
add
shl
mov
nop
fisttp
ss
jmp
inc
pusha
push
sub
iret
cmp
outs
aas
mov
sbb
in
add
scas
xchg
sti
push
cwde
mov
xchg
outs
mov
xor
in
mov
cmp
mov
inc
sub
push
ss
es
je
inc
stos
sahf
pop
push
ret
add
cmps
push
out
mov
pop
call
cmp
mov
test
sub
push
xchg
or
xor
mov
xchg
xor
push
mov
mov
loop
movs
idiv
dec
movs
sti
jmp
imul
add
sub
cmps
mov
and
fs
pushf
out
inc
movs
sti
cmp
jb
sub
fcom
pop
jecxz
ja
arpl
mov
out
add
retf
and
cmp
outs
jno
pop
mov
mov
shl
jae
sub
stos
ins
jecxz
jmp
mov
mov
jmp
int3
adc
fadd
xor
sbb
sbb
std
mov
ss
jne
mov
mov
hlt
ja
jno
mov
sti
shr
jbe
fild
sahf
retf
je
fs
jb
mov
aas
ja
push
bound
cli
add
inc
(bad)
push
push
std
addr16
mov
jg
jb
adc
addr16
mov
pusha
out
fucomip
lods
adc
inc
add
and
push
push
push
ficomp
push
push
test
pop
mov
mov
and
lock
jae
cwde
mov
fsubr
xchg
mov
and
out
pop
inc
jg
xchg
outs
aas
add
movs
inc
das
cmp
cmps
mov
or
iret
cmp
lahf
adc
push
cmc
fcom
push
arpl
push
jo
fwait
out
nop
and
push
sub
imul
out
dec
adc
jmp
and
push
xchg
lahf
(bad)
test
shr
hlt
retf
mov
cmp
mov
mov
(bad)
pop
sbb
fistp
div
lds
dec
mov
mov
xor
jmp
mov
sub
ficomp
movs
mov
fidivr
cmp
pop
sahf
dec
inc
push
fs
shr
pop
pop
mov
mov
mov
pop
push
je
in
fldcw
inc
push
(bad)
out
mov
mov
sub
rcl
sbb
lods
xchg
cmp
xor
(bad)
out
xchg
jge
pop
adc
iret
add
mul
sbb
push
arpl
inc
xchg
inc
push
dec
jno
test
ret
sbb
mov
sti
inc
dec
test
add
gs
xchg
into
test
punpckhbw
xor
iret
cli
cmp
cmp
mov
inc
mov
jg
retf
fcmovnu
cmp
ins
or
mov
cmps
mov
mov
mov
jne
adc
sahf
imul
in
dec
mov
(bad)
aad
ss
jne
out
lods
pop
cwde
xor
inc
loopne
jae
fwait
mov
xchg
je
mov
sub
adc
out
push
fidivr
movs
add
lods
mov
push
loope
shl
xor
out
out
icebp
add
jns
repz
pop
xor
data16
lea
clc
movs
xchg
scas
stos
push
xchg
jns
push
arpl
mov
movs
or
sbb
mov
shl
into
out
shl
aam
jo
sub
sbb
lods
inc
es
daa
in
inc
jecxz
sub
ret
sar
mov
lods
sbb
inc
mov
xchg
jg
adc
fsubr
mov
cmc
outs
cli
xchg
sbb
mov
xor
jae
mov
repnz
ins
xchg
frstor
adc
pop
repz
sbb
and
pushf
int
fs
aaa
mov
popa
(bad)
cs
or
fimul
push
cmc
push
sbb
and
ins
sub
cmc
pop
aad
jge
imul
out
push
mov
cmps
sub
jno
pop
cld
cli
push
les
in
rcl
xchg
test
sbb
data16
mov
push
jmp
dec
in
out
test
out
inc
mov
imul
add
xor
ret
sub
addr16
adc
dec
mov
repz
inc
cmp
mov
icebp
ss
add
retf
pop
ret
data16
enter
ja
mov
push
dec
or
pop
jbe
out
mov
inc
or
jg
mov
int
xor
retf
mov
push
(bad)
es
adc
or
mov
out
xchg
paddusw
repnz
frstor
xchg
sbb
in
xor
mov
adc
mov
sub
xlat
jmp
mov
mov
adc
inc
(bad)
cmp
gs
fdiv
jmp
lds
jno
push
addr16
int3
mov
mov
scas
pop
mov
jbe
mov
movs
aad
push
mov
das
es
adc
out
arpl
pop
jmp
sbb
pop
test
mov
sbb
int3
pusha
jmp
mov
cmps
cs
jnp
in
mov
stos
push
test
push
shl
or
mov
ins
into
inc
in
dec
sub
fsubr
inc
or
sbb
cmp
cmp
push
push
iret
push
(bad)
mov
mov
and
inc
sbb
retf
inc
outs
dec
xchg
xor
pop
gs
mov
fs
in
xchg
loop
enter
or
imul
adc
add
mov
xchg
xchg
adc
or
mov
std
jle
(bad)
out
sub
jmp
mov
stos
xchg
call
cmp
in
stos
push
pop
and
push
and
add
pop
adc
jae
rcr
pop
pop
outs
cmp
imul
rcr
sub
pop
xchg
mov
scas
inc
into
imul
cld
cmp
dec
xchg
jbe
pop
push
js
mov
or
aam
test
xchg
aam
mov
mov
cli
xchg
jno
stos
test
add
xor
adc
ret
cmp
shl
xor
lahf
cmps
call
jmp
jb
icebp
ret
(bad)
and
retf
mov
inc
jmp
jno
jecxz
xchg
inc
pop
add
add
xor
cmc
push
sub
fdivr
loope
in
and
jne
and
pop
mov
arpl
shr
mov
popf
inc
or
ficom
pop
inc
mov
push
cmp
pop
inc
push
popa
ds
push
push
mov
rcl
mov
fs
lock
in
pushf
and
dec
call
adc
int3
(bad)
and
mov
inc
cmps
cmp
sbb
pop
jg
fdiv
xchg
in
(bad)
mov
add
retf
mov
adc
and
popa
push
and
jmp
idiv
pop
retf
loopne
movs
jg
push
adc
and
pop
sub
(bad)
or
dec
jo
arpl
sub
stos
dec
bound
cmp
push
outs
jl
jo
sbb
dec
ins
or
stc
test
adc
popa
or
adc
or
add
stos
mov
outs
test
pop
push
scas
out
call
movs
sbb
hlt
xchg
xchg
int3
jge
pop
jmp
bound
jecxz
sahf
hlt
not
mov
dec
dec
je
hlt
sbb
retf
mov
ss
fst
into
lods
fcom
outs
dec
add
jp
mov
in
mov
popf
inc
jecxz
jb
mov
push
adc
jmp
fild
popa
sub
dec
add
push
add
lock
jno
fist
fnstsw
mov
test
and
dec
lods
pop
loop
xchg
sbb
lea
sub
pop
xchg
sbb
inc
loop
ds
xor
add
mov
jmp
sub
mov
mov
push
outs
push
cmps
xchg
int
sub
add
mov
or
cmps
sbb
mul
pop
(bad)
mov
arpl
fstp
ss
jecxz
xchg
mov
add
xchg
es
aad
sbb
hlt
xchg
mul
div
and
lock
cmp
idiv
cmp
xlat
aaa
mov
mov
popa
add
and
add
sbb
lock
cmp
cmp
mov
add
push
jno
popa
in
ds
add
outs
inc
loope
lods
lods
pusha
lahf
das
add
mov
add
jp
clc
(bad)
fimul
push
pop
mov
fwait
jg
sbb
repz
inc
iret
mov
push
fisttp
adc
pop
in
xor
cld
jae
xor
ds
mov
icebp
movs
xchg
add
lock
inc
mov
mov
or
inc
sbb
inc
mov
hlt
push
push
push
or
inc
movs
mul
inc
mov
(bad)
jmp
imul
movs
mov
add
xor
fs
pushf
jmp
mov
ror
mov
fnstsw
mov
in
retf
jle
or
or
add
lds
inc
out
jecxz
into
and
push
xor
test
movs
sbb
clc
div
es
cli
repnz
cmp
cwde
xor
push
xchg
inc
adc
test
cmp
sub
sbb
in
inc
inc
ret
jmp
or
addr16
xchg
fisubr
out
add
mov
bound
loopne
dec
test
inc
lahf
sub
cmps
add
sub
or
nop
arpl
scas
scas
gs
inc
popa
lods
dec
inc
aad
mov
adc
mov
inc
mov
push
mov
stos
xor
imul
les
push
xor
in
daa
lock
add
loopne
test
or
or
add
sti
lock
and
ret
sub
mov
test
jp
fs
pop
pusha
ret
daa
aas
test
inc
dec
cdq
or
ret
mov
in
add
js
popf
or
dec
scas
test
ficom
gs
mov
or
xor
add
(bad)
out
loopne
mov
sub
lahf
out
add
mov
adc
xlat
mov
out
xchg
fwait
push
into
fbld
(bad)
jle
and
add
pop
lods
dec
fsubr
pop
jne
jne
dec
xlat
mov
inc
(bad)
neg
(bad)
imul
sti
inc
call
ja
mov
jmp
dec
xchg
(bad)
pushf
hlt
out
jne
push
(bad)
dec
dec
leave
cli
sti
mov
cmps
lods
mov
and
pop
jmp
cmp
xchg
test
adc
jmp
xor
cs
(bad)
loopne
jecxz
sbb
add
or
ja
dec
jg
or
jp
add
mov
aas
and
mov
mov
cmp
or
cwde
fdivr
in
xchg
and
in
lds
mov
sbb
xchg
push
inc
push
push
test
loopne
loopne
mov
mov
aas
lahf
jecxz
loope
jg
add
outs
mov
imul
das
cwde
faddp
fnsave
outs
xchg
mov
test
loopne
stos
and
cmp
jbe
je
fs
xor
and
mov
loopne
loopne
xchg
neg
in
push
ins
out
push
fimul
push
lahf
mov
(bad)
call
xchg
mov
fistp
xor
sbb
ins
sti
cmp
cmps
fdivr
aad
cwde
in
and
pop
pop
stos
cmp
add
cmps
popa
xchg
daa
sbb
cs
mov
retf
jbe
imul
adc
dec
sbb
push
lods
push
sub
dec
mov
xchg
jge
adc
mov
add
push
stc
mov
bound
das
out
adc
jg
test
push
adc
xor
pshufw
mov
lods
sbb
mov
lock
cli
lahf
in
movs
pushf
inc
je
adc
fs
in
inc
and
mov
lds
(bad)
xor
and
jo
push
mov
dec
cmps
jmp
mov
mov
inc
cwde
outs
das
or
sahf
in
push
imul
mov
cdq
cld
or
dec
cmps
loope
inc
and
pop
or
sub
imul
jmp
pop
rcr
pop
mov
sbb
pop
inc
adc
shl
adc
shr
dec
sti
xchg
stc
lods
sub
cld
push
sbb
sti
imul
add
inc
sbb
add
jg
inc
ret
je
lock
test
aaa
pusha
jmp
mov
pushf
(bad)
icebp
mov
sub
stos
fcmove
pop
hlt
mov
test
sub
mov
idiv
aas
jl
cmp
scas
clc
mov
mov
add
(bad)
in
mov
add
stc
push
(bad)
movs
jno
pop
push
movs
jb
mov
jae
adc
xchg
test
push
xchg
ret
dec
int
gs
cmps
pop
sbb
push
inc
pushf
inc
add
std
sub
and
out
rcr
rol
add
cmp
jno
ss
movs
cmp
fild
jg
xlat
add
push
mov
cmps
and
and
add
sbb
pop
mov
scas
jg
retf
sub
jno
xchg
cmp
lods
jo
addr16
lods
sbb
retf
retf
aam
fadd
xor
je
or
enter
cwde
pop
addr16
mov
inc
jp
jle
fadd
mov
pop
xchg
sbb
mov
(bad)
cmp
push
inc
xchg
cwde
mov
pop
out
sub
fdivp
aam
outs
jp
movs
out
cmc
sub
add
into
sub
cmps
sbb
clc
fadd
or
jmp
retf
shl
hlt
mov
hlt
mov
lods
in
loopne
stos
iret
add
sbb
add
test
inc
sar
fcmove
loopne
mov
inc
jae
and
imul
sbb
stos
or
push
mov
retf
push
and
jnp
shl
(bad)
fidiv
das
dec
fwait
xor
stos
inc
inc
push
push
cmp
jne
sub
dec
and
or
das
mov
ret
mov
xor
mov
std
xchg
mov
inc
sbb
mov
aas
adc
gs
xor
iret
adc
jmp
push
mov
outs
clc
jae
cmc
or
pop
sub
and
int3
xor
lock
mov
push
xor
pop
hlt
(bad)
fisub
mov
sub
lock
dec
fiadd
cmp
push
dec
retf
xchg
cwde
loope
or
inc
stc
jp
sti
sbb
cld
pop
jbe
add
call
movs
test
cmp
mov
and
adc
adc
leave
iret
dec
adc
xor
xchg
push
ds
push
jl
xchg
sub
test
adc
pushf
add
xor
push
jo
lea
data16
test
jbe
or
jb
pop
push
cmps
hlt
cmps
clc
mov
lods
xchg
test
push
sub
jbe
mov
dec
pop
sub
add
sahf
pop
std
call
push
cmc
or
xchg
or
fcmovnu
repnz
dec
cmp
pop
sbb
xchg
cs
cmp
sbb
hlt
mov
fld
cmps
push
outs
sub
dec
push
mov
jne
mov
add
sbb
aaa
stos
fidivr
out
icebp
sbb
pushf
in
xchg
inc
pop
add
call
push
mov
mov
xor
int
in
or
arpl
aad
mov
jbe
jo
xchg
mov
xor
mov
aad
adc
outs
dec
lods
fimul
into
xchg
push
sti
leave
mov
lea
js
test
call
adc
mov
repz
mov
push
into
ret
mov
ret
adc
je
in
adc
jmp
pop
in
inc
sbb
and
or
shl
mov
out
inc
sub
ds
mov
mov
in
mov
jg
sub
dec
retf
cmp
sar
outs
push
bound
dec
pslld
sub
addr16
in
mov
arpl
mov
adc
ror
jne
loopne
call
lock
outs
mov
fldenv
sar
(bad)
jbe
jbe
jg
dec
mov
inc
add
rcl
(bad)
jns
sbb
and
fisub
dec
clc
dec
mov
daa
and
or
jp
add
stos
sub
popa
jecxz
adc
ja
ds
out
repnz
dec
fdivr
xchg
xchg
push
cmc
fldcw
dec
call
xor
ror
(bad)
xchg
sti
hlt
fidiv
fistp
add
pusha
push
push
mov
gs
inc
add
add
xor
jp
or
pop
mov
dec
mov
test
mov
add
inc
bound
sub
jne
add
adc
push
sbb
dec
cwde
jb
and
mov
pop
ficomp
mov
shl
jo
(bad)
jae
sbb
test
pop
(bad)
data16
fimul
mov
dec
mul
ror
mov
fst
es
sub
dec
cld
or
adc
(bad)
dec
loop
dec
clc
in
inc
scas
adc
iret
cmp
stos
stc
push
jne
in
mov
cmp
icebp
out
sbb
inc
push
and
cmps
aas
and
cld
push
add
xlat
imul
jmp
sti
gs
mov
add
lods
jge
mov
pop
hlt
push
mov
mov
mov
loop
mov
shl
rcr
(bad)
jmp
mov
adc
add
jp
inc
popf
or
jmp
aaa
in
shr
sub
mov
in
in
inc
gs
nop
int3
cs
pusha
ret
pop
pop
out
movs
popa
dec
enter
add
cmp
or
pop
push
js
jecxz
bnd
xor
pop
cld
mov
push
fcom
ss
hlt
mov
inc
jmp
cmp
cmp
test
fld
inc
data16
outs
add
les
cmp
push
mov
icebp
adc
and
push
ins
cli
xchg
sbb
sbb
cmp
aam
scas
imul
cli
jae
scas
mov
mov
jnp
sar
jno
jb
inc
inc
mov
mov
xor
(bad)
(bad)
or
test
loopne
les
sbb
pop
jb
cmp
sub
mov
fsubr
adc
pop
inc
pop
or
cs
push
or
imul
pop
arpl
xchg
mov
call
mov
jecxz
(bad)
std
std
dec
stos
je
cmp
test
aam
adc
xchg
mov
daa
ret
enter
imul
dec
inc
int3
inc
dec
or
inc
cdq
xor
xchg
xor
mov
popf
sub
add
in
aaa
lahf
and
mov
shr
shl
pop
repnz
sub
mov
push
aaa
jns
jecxz
sbb
add
and
pop
sar
dec
test
jmp
mov
jmp
inc
adc
jecxz
pop
push
shr
test
mov
imul
pop
in
sub
dec
in
jb
inc
addr16
xor
cs
es
cld
jnp
jmp
jg
push
jnp
jbe
push
add
iret
std
daa
ror
test
scas
jmp
loop
mov
ins
jecxz
inc
adc
fadd
ins
popf
nop
or
aaa
sub
int
sub
test
mov
mov
mov
mov
jmp
mov
jecxz
jmp
dec
and
icebp
cmp
dec
les
(bad)
fdiv
xlat
lods
add
sti
pop
cmps
xor
ret
fdivr
inc
iret
imul
push
sbb
dec
jp
fstp
stc
jp
jmp
jg
add
mov
mov
push
mov
inc
out
mov
clc
neg
push
push
adc
rcr
daa
xchg
inc
(bad)
sbb
push
jnp
fsincos
xchg
xor
retf
and
bound
inc
and
jmp
xlat
inc
(bad)
into
mov
xlat
adc
cmp
adc
movs
adc
lods
test
xchg
addr16
inc
inc
xor
jmp
icebp
xchg
js
adc
or
dec
inc
les
sbb
loope
in
mov
in
and
cmp
and
sbb
xor
push
mov
xor
clc
or
jns
cmc
pop
in
sub
cmp
and
cmps
cmc
add
xor
dec
jmp
push
jge
adc
js
mov
mov
and
cmps
inc
inc
adc
and
out
inc
jp
xchg
and
sub
sub
pop
mov
lahf
push
jmp
inc
add
inc
rcl
ror
cld
cdq
les
add
ss
and
and
or
cwde
inc
adc
test
jno
add
test
dec
sub
adc
jne
adc
retf
(bad)
lahf
mov
mov
cld
or
out
sub
jnp
mov
mov
test
fcomi
test
sub
mov
or
leave
add
mov
pop
jae
(bad)
pop
xchg
ret
mov
inc
test
jmp
xlat
jmp
dec
mov
jmp
push
lods
sti
cli
push
lods
sti
(bad)
push
and
pop
mov
retf
out
fisubr
mov
jo
mov
mov
mov
fidivr
mov
mov
inc
lock
push
lods
repnz
push
mov
(bad)
pusha
test
(bad)
jo
ret
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
push
dec
repz
retf
mov
dec
or
jmp
repz
inc
movs
or
inc
aam
out
inc
mov
jmp
div
inc
mov
jecxz
pusha
lods
(bad)
jmp
dec
movs
imul
inc
movs
repz
mul
inc
mov
out
inc
mov
sti
out
test
out
adc
mov
sub
ins
mov
jno
dec
lahf
bound
popf
and
push
sub
add
out
pop
outs
inc
xchg
adc
pop
jo
or
scas
stos
sbb
dec
push
xor
dec
cmc
(bad)
stos
lahf
jle
xor
add
add
in
int
xor
test
mov
mul
adc
data16
jle
jmp
sbb
and
stos
fs
push
xor
std
push
dec
cmps
cmps
in
inc
and
mov
sahf
outs
pop
xor
int3
jmp
inc
mov
je
rol
push
outs
scas
pop
sub
ins
jae
in
(bad)
pop
retf
sub
inc
lock
stc
icebp
(bad)
imul
das
movs
mov
fcmovu
fldcw
sahf
pop
adc
test
shl
ins
jne
jmp
adc
push
mov
mov
daa
mov
jmp
(bad)
jbe
push
mov
sbb
(bad)
es
mov
lahf
push
jp
fcom
push
retf
jecxz
mov
cmc
mov
(bad)
adc
dec
pop
jo
jo
fisub
or
cdq
dec
jbe
cmp
out
lea
push
es
(bad)
sbb
sbb
pop
adc
es
popf
xor
mov
fwait
out
out
xchg
xor
jne
call
adc
sti
stos
mov
sbb
mov
mov
repz
fwait
and
lahf
call
aas
xor
icebp
pushf
sub
dec
stos
or
push
mov
stos
lahf
push
pop
test
es
add
pop
xor
adc
repnz
ja
fwait
inc
rcr
inc
xor
test
sub
arpl
jno
out
or
mov
mov
lock
mov
cmp
cli
mov
fdivr
sub
les
pop
xlat
dec
mov
inc
sub
xchg
stos
cmps
mov
popa
sbb
pusha
sbb
mov
sbb
into
mov
jg
icebp
jbe
cmp
add
stos
xor
xchg
addr16
aas
mov
(bad)
jmp
inc
xchg
xor
fmul
mov
mov
inc
adc
sti
adc
push
xlat
or
jae
mov
mov
jns
mov
js
fldenv
nop
push
leave
test
ss
sub
(bad)
pop
imul
rcl
rcr
mov
mul
add
mov
or
cwde
adc
scas
cmp
inc
sar
add
(bad)
jb
pop
add
xor
dec
fld
adc
or
cmp
inc
loopne
adc
jns
inc
cs
data16
js
xlat
ret
fwait
or
sti
callw
push
jmp
pop
cs
mov
and
mov
jnp
xchg
xchg
nop
sbb
sub
jns
imul
xlat
push
pushf
out
mov
sbb
scas
add
sbb
iret
arpl
cmp
sbb
jmp
(bad)
stc
push
push
jmp
test
dec
add
ins
adc
idiv
(bad)
(bad)
dec
jp
cmp
cwde
rol
dec
ss
ins
popf
mov
call
fnsave
push
je
scas
ret
shl
gs
(bad)
xchg
int3
xor
sbb
scas
mov
lods
in
sbb
loopne
inc
sbb
mov
and
enter
sbb
test
mov
xchg
std
cmp
dec
shl
add
out
mov
ret
clc
popa
psrlw
and
xchg
aas
int
pop
sub
(bad)
xchg
in
and
dec
and
stos
mov
xlat
jno
mov
dec
mov
pop
jb
mov
jb
or
sti
sub
xor
adc
add
out
dec
and
adc
clc
(bad)
and
cld
sbb
enter
and
push
push
mov
stos
inc
mov
jmp
dec
mov
jmp
idiv
inc
mov
test
mul
sbb
aaa
cmp
enter
movs
test
leave
cmps
fdivr
repnz
and
add
jp
or
push
jmp
xchg
xchg
inc
rcl
(bad)
cmp
test
inc
jp
(bad)
repnz
or
xor
push
jp
fisub
push
dec
stos
or
cmps
cli
scas
pop
sbb
lods
xor
dec
mov
mov
mov
pop
ror
scas
sbb
mov
jns
mov
(bad)
les
xchg
ds
imul
scas
xor
pop
loope
arpl
sbb
pop
push
sbb
push
dec
pop
mov
jg
jo
cli
ins
(bad)
jb
out
pop
dec
push
mov
loop
cmp
xchg
and
fimul
pop
inc
and
mov
js
push
je
xor
lock
inc
sub
call
mov
sbb
lahf
xor
(bad)
mov
lahf
push
ins
mov
sti
fbstp
jmp
les
loop
push
ficom
int3
ja
fs
inc
sub
jmp
arpl
sub
fwait
inc
gs
cmp
mov
mov
in
cmp
xor
sub
mov
fcomip
repz
jmp
mov
adc
mov
mov
xchg
rol
in
pop
mov
ror
repnz
jbe
mov
cwde
arpl
xor
lea
sub
test
sbb
call
ret
ror
pop
mov
stc
pop
adc
push
fisub
sbb
xchg
and
iret
lods
add
pop
cmps
jl
sti
xchg
pop
adc
cmp
dec
and
clc
dec
imul
ror
jmp
test
shl
lods
and
ret
cmp
mov
rol
add
jle
push
jge
mov
test
inc
(bad)
enter
mul
stos
std
lds
mov
iret
adc
bound
jge
add
pop
or
ror
push
mov
xor
into
fisttp
cmc
(bad)
push
sub
sti
test
cmp
and
mov
movs
mov
mov
repz
mov
and
dec
add
fdiv
les
mov
push
add
pop
mov
(bad)
lea
mov
pop
mov
mov
enter
or
mov
stc
aaa
cmp
cs
or
loopne
(bad)
ror
sub
xchg
into
daa
daa
push
push
adc
add
xchg
mov
mov
fisub
sbb
iret
mov
and
push
aas
mov
and
xor
mov
mov
lahf
inc
ins
arpl
mov
iret
pop
iret
push
dec
and
retf
mov
xchg
jns
xor
lods
cmp
sub
es
call
cmc
jae
repnz
rcr
stc
inc
mov
ins
daa
push
test
mov
stos
pop
lahf
mov
inc
addr16
int3
xchg
aaa
int
movs
cmps
outs
add
mov
(bad)
jmp
in
call
jl
js
mov
ds
out
mov
out
jecxz
mov
out
xchg
or
fstp
xor
xor
cmp
ret
daa
cmps
cmp
and
jne
jnp
xor
cmp
jae
sub
aas
imul
xchg
enter
xchg
les
mov
add
or
data16
es
and
jmp
cmps
jne
aas
xchg
mov
dec
sbb
cwde
scas
push
xchg
nop
and
inc
adc
nop
xchg
pop
jl
xlat
inc
add
mov
rcr
inc
push
or
sub
in
neg
lahf
xchg
lahf
mov
retf
or
jl
jg
dec
aad
xchg
fsubr
or
push
add
xor
xchg
hlt
test
xchg
and
or
or
dec
mov
repz
ss
mov
xlat
pop
sub
cli
mov
lahf
mov
pop
sbb
mov
test
pop
repnz
push
fnstenv
or
ret
call
mov
scas
out
and
popf
or
sub
(bad)
jno
mov
fwait
mov
outs
mov
neg
stc
xchg
dec
loope
inc
cmps
mov
inc
sahf
(bad)
xchg
sub
xor
cmps
sub
xor
sub
sar
xor
int
std
jo
pop
sub
xchg
mov
jo
mov
int
clc
rcr
std
dec
mov
jb
ds
(bad)
lock
xor
xlat
test
out
push
pop
lods
mov
push
jmp
mov
mov
movs
dec
data16
sub
ror
lea
mov
mov
inc
or
loop
and
add
movhps
mov
mov
mov
mov
dec
sub
bound
pop
ret
jb
adc
xor
gs
sub
aas
cmps
xstore-rng
cmps
ret
push
push
inc
xchg
sbb
dec
dec
mov
xchg
sub
mov
pop
dec
jle
leave
ret
cmps
retf
pop
jo
mov
inc
lea
loopne
das
jecxz
dec
cmp
mov
sub
xor
mov
loope
and
adc
test
inc
in
loop
lods
sti
loop
test
jmp
rep
push
lods
mov
inc
jmp
mov
mov
inc
mov
out
dec
mov
repz
jne
sbb
scas
mov
or
sbb
sbb
xlat
out
movs
stc
int3
mov
mov
and
aad
xchg
xchg
or
scas
xchg
xchg
fistp
push
movs
loop
test
ret
push
add
push
outs
sahf
aaa
jae
push
push
mov
js
fs
mov
pop
xor
jbe
pop
and
ret
lea
sbb
jecxz
inc
lahf
ds
scas
out
call
cmp
dec
mov
jbe
jmp
ss
aas
sub
out
sub
pop
fcomp
cmp
jne
call
and
(bad)
adc
cmp
fld
fsub
push
add
push
out
popa
pop
jns
xor
js
call
aad
pushf
mov
imul
jo
sbb
ficom
rcr
add
lock
mov
sub
pop
mov
sub
sub
sbb
in
stos
and
jb
mov
sub
adc
and
shl
sar
fistp
or
sub
xchg
call
dec
loop
mov
mov
enter
enter
and
sub
jmp
mov
xchg
inc
xchg
addr16
cmps
sbb
add
sub
out
cmps
loop
inc
mov
add
jbe
(bad)
scas
jb
es
aaa
cmp
fs
pushf
test
leave
(bad)
lock
sub
outs
ror
xor
inc
leave
rol
dec
std
ins
outs
jge
jns
push
xchg
std
scas
outs
int
dec
imul
mov
cmp
mov
mov
mov
movs
or
pop
(bad)
cmc
jo
(bad)
mov
lods
lds
mov
jo
pop
ror
loop
fmul
mov
push
adc
popf
sbb
push
jge
jp
call
pop
loop
push
jne
push
sbb
(bad)
lock
mov
scas
jne
in
push
call
or
sbb
mov
pop
jmp
mov
cld
aad
xor
fdiv
mov
aam
cmp
push
mov
in
loop
and
mov
lahf
pop
jns
sbb
rcr
cmp
pop
sbb
jl
adc
stos
xor
inc
sbb
mov
leave
add
in
je
imul
jg
jnp
mov
rcl
jmp
jb
cli
pop
adc
push
sub
in
sub
mov
xchg
and
(bad)
lods
push
cld
in
mov
mov
scas
xchg
xor
dec
scas
in
mov
sbb
pop
repz
cmp
out
in
mov
xchg
je
dec
mov
sub
enter
jno
call
lods
cmp
mov
sahf
xchg
out
out
outs
call
pop
inc
ins
(bad)
dec
test
test
ror
cmp
outs
movs
adc
daa
es
add
std
add
sbb
fldcw
and
movs
add
int
cmp
mov
xchg
shr
lahf
in
or
pop
inc
pop
lods
and
fstp
add
adc
jo
inc
test
push
das
jae
mov
and
xchg
into
jo
pop
add
ret
fild
mov
add
ds
sbb
les
mul
xor
mov
retf
pop
cmp
add
inc
call
sti
xor
jnp
inc
jmp
cld
push
mov
leave
push
call
cs
ss
and
cdq
xchg
push
cmp
ja
mov
push
mov
js
cmps
mov
mov
lea
stos
pop
dec
lock
xor
xchg
cmp
out
bound
dec
mov
fwait
dec
jne
inc
inc
in
mov
stos
jns
mov
outs
cmp
dec
loop
scas
adc
xor
test
ffreep
ret
(bad)
mov
call
int3
popa
fcom
xor
mov
bswap
mov
mov
sub
mov
loop
mov
(bad)
out
inc
mov
jmp
jmp
in
stos
or
repz
jb
mov
ins
xchg
repnz
repz
nop
cmps
or
ins
pop
arpl
ins
add
ja
ret
test
xor
add
inc
push
xor
adc
into
daa
sub
mov
fucom
neg
sub
xchg
xor
call
ret
adc
push
test
jbe
cmp
fimul
sar
test
movs
ins
sub
mov
pop
xor
inc
pop
enter
std
add
leave
bnd
loope
lahf
pop
stc
fsub
cwde
jb
rol
adc
cmp
mov
and
and
push
loopne
fdivr
(bad)
sub
es
fld
sar
adc
xor
xor
push
push
cmp
sar
stos
mov
repnz
nop
ficomp
aam
stos
xchg
imul
int
sbb
retf
div
inc
adc
adc
cli
cmps
cmp
sahf
cmps
jl
fsub
out
cwde
push
push
xchg
push
fwait
fs
xor
mov
cmp
mov
scas
dec
in
pop
leave
mov
mov
lea
cdq
js
sbb
sbb
dec
or
aaa
aam
mul
sbb
sbb
xchg
aas
mov
mov
out
add
pop
mov
mov
push
or
cmp
lods
cli
lods
and
(bad)
loopne
dec
sbb
adc
jmp
popf
cmps
mov
mov
mov
mov
xor
(bad)
js
sub
push
leave
das
jl
ja
outs
in
les
sub
or
mov
shr
add
jg
xchg
add
fidiv
xor
mov
adc
sub
jb
cmc
jmp
leave
imul
inc
inc
xchg
inc
lods
fs
call
aam
fstp
sub
ret
adc
sub
dec
mov
imul
int3
push
pop
nop
mov
cmps
rcl
mov
sub
and
jae
add
scas
dec
das
pop
stos
pop
lahf
das
enter
icebp
aad
lods
jmp
adc
jge
dec
inc
sub
bound
outs
stos
pop
scas
movs
fdiv
xor
popa
popa
xchg
jne
sub
aas
sti
pop
add
push
dec
inc
lock
shr
jmp
xor
or
pop
pop
leave
and
pusha
jp
dec
popa
int3
jp
fcom
pop
call
ins
xor
(bad)
cwde
mov
sub
stos
mov
bound
xchg
and
mov
add
add
push
push
loope
push
out
mov
test
pop
mov
aad
fwait
das
inc
mov
inc
ds
in
jl
and
adc
lods
call
imul
sbb
or
nop
jmp
jg
shl
lahf
gs
ja
popf
loope
outs
fisttp
dec
enter
mov
mov
les
int
cmp
push
cli
mov
dec
loop
test
mov
push
sub
cwde
call
dec
adc
(bad)
in
and
sub
sahf
mov
mov
addr16
aad
cmp
adc
mov
clc
call
les
ds
mov
(bad)
stc
or
out
out
add
and
mov
pop
jmp
fisttp
je
inc
aam
sti
dec
cmps
inc
rol
mov
ins
or
rcl
adc
jne
mov
pop
inc
ss
jle
inc
xchg
cmp
into
shl
popa
push
xchg
xor
loopne
inc
cld
and
push
repnz
hlt
lock
mov
push
jecxz
rcl
and
inc
adc
out
jl
jne
or
pop
inc
push
adc
push
jge
ror
jno
push
jb
outs
cmp
inc
lods
push
in
aad
cmp
fwait
(bad)
add
mov
or
add
outs
push
cmps
push
jl
cmp
push
ins
sub
mov
xchg
mov
nop
push
ret
pushf
mov
xchg
popf
jmp
cwde
fcmovb
mov
(bad)
cmp
cdq
mov
push
dec
cs
retf
mov
ja
cmp
stos
dec
inc
xchg
neg
das
ret
sti
dec
movs
loopne
in
cmps
sbb
dec
dec
aas
xchg
push
pop
xchg
aam
sub
sub
adc
dec
ja
and
inc
stc
dec
or
sbb
adc
push
js
ins
mov
xor
or
inc
ret
repz
popf
mov
push
test
nop
cs
jmp
inc
loopne
repnz
lods
repz
push
mov
jmp
repz
or
out
int3
mov
scas
shl
mov
dec
movs
mov
(bad)
call
aaa
in
add
xor
or
jl
and
dec
inc
enter
movs
neg
stos
pop
add
mov
pop
(bad)
sti
jno
jl
mov
jecxz
sbb
inc
loopne
shl
xchg
or
or
mov
sub
mov
daa
fsub
pop
call
mov
add
(bad)
hlt
sub
jno
mov
cmp
mov
fwait
lods
jno
pop
fmul
(bad)
out
(bad)
enter
adc
pop
test
sbb
push
push
hlt
mov
jle
pop
mov
inc
cmps
mov
pop
inc
mov
lahf
lods
cmc
ins
jae
ja
mov
mov
test
mov
sub
adc
mov
sub
inc
std
scas
jno
push
dec
jbe
call
movs
push
or
mov
jge
xchg
xor
hlt
push
push
imul
(bad)
retf
(bad)
push
fcomp
int3
int
add
jb
push
les
pusha
push
cmp
inc
xchg
adc
(bad)
movs
imul
adc
xor
test
cmp
int
sbb
dec
outs
data16
(bad)
mov
jno
cmp
inc
nop
cdq
sbb
mov
mov
mov
jecxz
adc
in
mov
add
jne
ins
cld
aaa
pop
dec
stos
je
std
pop
addr16
jmp
push
aad
sub
repnz
adc
les
int
repnz
and
add
mov
push
lods
xchg
xor
js
xchg
cmp
push
pop
xor
jge
add
jns
adc
mov
mov
repnz
mov
lea
mov
inc
int
or
(bad)
fwait
test
repz
fistp
sbb
push
push
into
adc
jo
lds
dec
mov
pop
iret
inc
mov
xor
xchg
mov
test
aaa
jnp
psrlw
sub
sahf
bound
clc
clc
push
into
jne
cmc
aaa
scas
jbe
mov
pop
aam
pushf
lods
mov
gs
sbb
mov
pop
push
dec
fist
pop
mov
xchg
cdq
pop
test
xchg
fldcw
xor
xor
loopne
out
pop
cmp
test
adc
mov
mov
jbe
ret
sahf
retf
and
add
addr16
pop
jmp
xor
arpl
mov
js
add
dec
push
mov
dec
add
mov
mov
les
fmulp
cdq
push
popa
pop
cmp
daa
xchg
cmp
fcomp
stos
mul
mov
mov
sub
add
push
dec
rcr
(bad)
mov
jge
sbb
pop
(bad)
rep
sar
mov
mov
mov
adc
in
sub
rcl
and
mov
mov
nop
jge
xor
pushf
mov
lock
jge
std
test
push
test
mov
push
retf
mov
add
sub
aas
jle
mov
dec
and
and
enter
adc
scas
push
outs
jb
ficom
cmp
pushf
imul
or
xor
adc
rcr
push
cmp
mov
mov
int
sbb
out
popa
pop
cmp
aaa
dec
imul
dec
xor
push
pop
push
add
cld
jno
pop
add
dec
adc
push
inc
inc
repz
sub
sahf
mov
jmp
rol
push
pop
xchg
in
enter
xor
loopne
ins
outs
leave
call
pop
cmp
addr16
retf
jl
mov
rol
psraw
push
ficom
push
inc
(bad)
and
fiadd
xchg
aas
mov
mov
mov
popf
push
iret
pop
xor
es
mov
aam
cmp
ror
and
aas
aad
into
push
mov
fdecstp
ds
es
rcl
inc
scas
and
xor
xor
dec
stc
or
or
ficom
xor
ror
test
and
add
push
pop
lods
lahf
retf
xor
lahf
mov
push
ss
add
fcomp
js
mov
jmp
inc
pusha
fld
in
or
shl
stc
gs
or
scas
icebp
call
xchg
fs
and
pop
popf
mov
jmp
popf
sub
mov
and
ret
xor
dec
pop
int3
ret
dec
push
add
sbb
push
pushf
cmp
or
(bad)
sbb
mov
sbb
mov
mov
mov
mov
retf
xor
imul
ins
sub
out
scas
inc
pop
cwde
xchg
mov
(bad)
retf
push
or
pop
out
dec
ds
pop
(bad)
xchg
outs
or
xchg
cmp
xchg
out
popf
stos
cmp
adc
adc
or
xchg
mov
std
adc
mov
loope
cdq
mov
les
dec
sub
ja
jnp
sub
outs
push
div
mov
aaa
popf
lods
pushf
(bad)
ins
mov
mov
pushf
sar
outs
cli
movs
add
call
xor
outs
movs
sub
adc
xor
ja
popf
adc
loopne
fucomp
popa
fidiv
daa
pop
cli
mov
ret
mov
bound
mov
pop
mov
push
pop
inc
(bad)
and
and
mov
fdiv
sbb
stc
sub
(bad)
retf
xlat
ins
or
ja
dec
mov
dec
(bad)
fidiv
pop
test
adc
movs
pop
out
inc
dec
ds
and
repz
leave
hlt
inc
xor
xor
xchg
fnstsw
mov
in
shl
pop
jg
xchg
ud0
jns
mov
push
lock
(bad)
aaa
retf
mov
test
enter
add
mov
or
xlat
push
jno
jmp
gs
aas
xchg
gs
(bad)
fsub
int
fldcw
mov
imul
call
push
push
xchg
popa
bound
jne
pop
or
jno
xor
mov
add
sbb
lods
xchg
push
stc
dec
or
cmp
mov
inc
push
fmul
mov
arpl
cdq
push
cli
pop
add
sbb
and
fidivr
adc
and
stos
int3
jb
aas
gs
loop
pop
or
push
cmp
int
mov
scas
jg
push
xor
cs
imul
add
cmp
cwde
je
test
data16
sbb
push
fisub
adc
xor
int
div
mov
hlt
int3
adc
das
nop
and
pop
(bad)
xchg
mov
add
xchg
sti
sub
fs
cmps
sub
imul
inc
and
dec
mov
imul
daa
(bad)
and
aas
and
int
movs
(bad)
(bad)
pop
stos
sub
sub
mov
inc
mov
xor
or
nop
aaa
ja
sub
and
sub
fdiv
mov
aaa
or
fcom
test
adc
xchg
xor
retf
imul
push
scas
(bad)
ror
retf
es
fcomip
arpl
mov
sub
or
stos
inc
jle
arpl
ins
jmp
aam
popf
mov
inc
test
lds
into
in
out
pop
pop
or
mov
mov
imul
mov
inc
dec
shl
js
dec
(bad)
lods
pop
in
jg
jns
push
popa
cmp
push
sub
sub
xor
push
jno
lds
sub
mov
pop
fsubp
jl
push
sbb
adc
adc
cli
cs
mov
(bad)
xor
cwde
jmp
imul
sar
fsubr
xlat
xor
sar
mov
add
imul
push
js
adc
xchg
or
loope
pop
mov
test
cli
add
add
add
pop
pop
in
lods
inc
das
cmps
push
pop
jmp
dec
movs
rcl
jmp
xor
(bad)
call
cmp
push
(bad)
xchg
in
call
dec
pushf
nop
cmps
je
test
xor
sbb
cmp
jne
cdq
sub
mov
adc
sub
xchg
mov
inc
sbb
in
xlat
shr
mov
addr16
cmc
xor
imul
ret
es
jo
and
jo
inc
pop
out
rcr
out
sub
sar
enter
mov
loop
xor
in
and
inc
inc
and
sahf
repnz
cld
js
fs
aad
movs
in
fnstsw
popa
mov
jp
fild
mov
add
jno
popf
cmc
mov
cs
mov
dec
xchg
xchg
fwait
(bad)
rcr
xor
xor
jb
fstp
inc
(bad)
pop
mov
icebp
mov
scas
sub
push
popf
outs
sar
test
(bad)
cmp
inc
psubw
loop
sub
retf
cmp
and
pop
cld
adc
add
loop
push
cmp
shl
mov
sti
pushf
je
es
sahf
pop
inc
sahf
out
retf
out
out
mov
or
push
int3
repnz
pop
mov
or
jge
jnp
sbb
mov
ds
push
iret
cmc
out
mov
adc
xchg
nop
mov
enter
cmp
gs
cmp
shr
sar
xor
loopne
xchg
dec
push
stc
jp
fstp
fmulp
les
outs
aad
ror
setb
mov
inc
jge
leave
sti
mov
retf
jnp
jnp
jl
aaa
mov
or
int
xchg
mov
cmc
or
sub
aaa
pop
jmp
xchg
stos
sahf
xchg
jno
and
pop
imul
push
stos
ror
inc
mov
out
imul
(bad)
adc
pop
mov
mov
jb
adc
jge
int
push
sahf
or
push
lods
fstp
push
adc
cld
xchg
dec
push
daa
mov
aad
push
(bad)
rcr
(bad)
jle
hlt
mov
cmps
nop
push
jnp
pop
fwait
data16
pop
jmp
iret
adc
(bad)
das
push
outs
call
cwde
or
jmp
paddd
pop
movs
add
jle
mov
movs
icebp
lds
or
jp
fisttp
jne
fdiv
push
pop
and
call
xchg
mov
add
fidiv
sbb
xor
movs
jmp
(bad)
adc
(bad)
mov
aas
mov
sbb
sub
cmp
xchg
rcr
mov
popf
ret
mov
popa
xchg
and
stos
loopne
cmp
jae
aam
mov
add
cld
cmp
loopne
xor
js
int3
jmp
pop
test
sub
sahf
mov
mov
popf
or
loop
in
push
push
add
adc
push
pop
cmp
pop
bnd
dec
adc
and
pop
nop
sbb
popf
fild
push
repnz
dec
dec
xchg
or
mov
shl
or
repnz
lds
cmc
or
cmp
and
adc
es
jae
pop
jl
pop
jbe
jb
push
mov
les
mov
add
jns
loop
dec
cmp
inc
stc
adc
ja
data16
mov
cmps
mov
sar
pop
rcl
popa
aad
add
pop
repz
push
cmp
fwait
in
dec
adc
mov
hlt
or
into
fwait
dec
push
repnz
cmp
xchg
daa
in
and
outs
mov
stos
sub
in
scas
into
mov
scas
cmovnp
movs
pop
mov
adc
fdiv
stc
lock
sti
daa
lods
and
add
xchg
clc
mov
loopne
cwde
(bad)
dec
jno
mov
pushf
push
pop
push
mov
mov
(bad)
cli
mov
dec
push
xchg
jno
cmp
in
push
ins
lea
push
sti
out
fldl2e
clc
pop
pusha
push
je
xor
sbb
loope
push
mov
fdiv
dec
xor
xchg
loop
cmp
mov
call
shl
jp
jl
mov
inc
sbb
dec
xchg
xor
cmc
shl
aam
dec
push
sahf
xor
mov
sub
mov
push
or
jnp
push
lods
ss
mov
xchg
sahf
jmp
enter
dec
js
sbb
(bad)
sub
lea
adc
dec
fidiv
mov
sbb
js
xchg
fsub
movs
inc
sub
sub
out
lods
adc
jo
retf
test
xchg
jp
repnz
cmp
lea
pop
retf
sbb
jp
push
pop
cdq
push
das
in
(bad)
inc
jge
inc
call
hlt
pop
lahf
pop
ror
aas
std
hlt
cld
pop
lds
inc
jae
jae
jne
mov
mov
icebp
call
jge
aad
test
outs
xchg
push
jge
pop
sbb
shr
popf
outs
or
sub
fild
xor
cmps
fisubr
in
add
pusha
ja
into
mov
gs
mov
mov
pop
popf
xor
adc
lods
mov
and
jns
inc
jb
add
lods
mov
pop
fs
adc
pop
mov
xchg
adc
shl
ja
imul
jo
fwait
fs
clc
popa
jo
loope
cmp
add
add
adc
add
retf
push
push
ds
cmp
xor
push
pop
jmp
mov
adc
(bad)
hlt
jle
mov
xchg
mov
aaa
addr16
and
mov
cmc
daa
stos
repnz
pop
jno
sti
adc
cs
mov
lods
inc
retf
xchg
pop
fisub
fs
ins
pop
hlt
push
cmp
rcr
das
das
jecxz
add
adc
repnz
std
cwde
mov
ins
sbb
loop
fistp
std
aad
push
call
cwde
in
test
jmp
inc
sub
jbe
call
add
fwait
cmps
popa
cmp
into
push
aas
adc
adc
mov
pop
fiadd
mov
pop
int3
test
push
(bad)
rcl
or
push
cmp
lods
scas
cmp
aam
adc
outs
mov
inc
fild
inc
xchg
fild
inc
mov
cmp
cmp
push
and
jnp
mov
popf
mov
dec
rcl
out
add
jne
xor
mov
sub
sahf
adc
and
jne
xor
pusha
ror
mov
repnz
ja
dec
(bad)
leave
or
mov
sub
(bad)
sbb
pushf
adc
or
stos
inc
mov
repz
dec
mov
jmp
imul
in
outs
and
rep
and
jmp
inc
movs
repz
jae
cmp
dec
or
pop
pop
fs
gs
or
jmp
fisub
xchg
pop
cld
cmp
out
in
movs
outs
dec
(bad)
jno
xchg
dec
(bad)
fprem1
(bad)
cs
cwde
mov
jne
aam
push
add
or
and
mov
sub
xchg
jmp
lods
and
mov
mov
pusha
gs
jmp
cs
pusha
sub
inc
lock
pop
xchg
xchg
aad
dec
outs
adc
adc
or
(bad)
cmp
adc
mov
xchg
cmps
jmp
lea
xchg
and
and
jecxz
mov
inc
test
jnp
jle
or
jns
movs
mov
(bad)
lds
mov
enter
push
out
jmp
mov
les
and
call
mov
fst
test
out
and
out
inc
sbb
pop
nop
test
xchg
mov
outs
out
add
dec
adc
xor
not
jle
call
loopne
repnz
xchg
stos
adc
cmp
loop
mov
into
loope
sti
jbe
fnstcw
icebp
popa
fadd
push
scas
fidiv
xchg
mov
ror
xchg
fst
pop
out
or
lds
mov
(bad)
jae
mov
ins
in
sbb
xor
mov
cmps
cmp
jmp
dec
sbb
adc
sub
in
jmp
inc
sar
or
push
and
pop
hlt
fidivr
mov
mov
push
cmp
jle
and
scas
inc
jmp
sar
cmp
inc
sar
and
cmps
dec
sub
inc
out
in
lock
fsubr
sbb
fistp
sub
push
sahf
ret
xor
stc
(bad)
jmp
cmps
mov
and
ret
not
push
mov
xor
xor
loop
ret
dec
call
sbb
dec
push
pop
shl
dec
scas
inc
(bad)
jns
aam
mul
push
jb
hlt
pop
fldenv
repnz
cmps
jns
inc
sbb
repz
outs
jmp
adc
call
adc
cwde
es
fsubr
inc
out
shl
fisub
outs
push
sti
mov
pop
or
adc
fs
test
mov
push
mov
xchg
pop
inc
add
xchg
stos
xchg
aas
dec
fnstenv
inc
dec
and
mov
cld
ss
push
or
xor
dec
cmc
or
nop
loop
nop
jae
(bad)
(bad)
popf
loopne
in
in
adc
cmp
mov
(bad)
std
cmp
dec
cwde
cmps
mov
jo
sbb
push
movs
int
ins
sahf
or
bound
push
add
mov
das
mov
daa
mov
sub
or
xchg
imul
popa
jno
bound
jb
jb
dec
int
data16
or
dec
or
cmc
fsubr
push
data16
lds
push
jle
pop
in
mov
mov
stc
fcomp
fwait
lock
sub
xchg
shr
cmp
mov
mul
lahf
ins
sub
push
xchg
fs
dec
jmp
stc
jnp
in
dec
adc
call
mov
outs
dec
je
jno
call
ss
popf
xchg
pop
mov
mov
or
iret
inc
scas
fbld
mov
jns
mov
push
inc
push
pushf
das
in
mov
std
inc
dec
imul
xchg
test
loopne
pop
out
jo
test
push
or
je
mov
and
outs
lahf
data16
mov
jl
(bad)
out
out
xchg
xchg
mov
xor
xchg
inc
bound
xchg
aaa
rol
aam
jecxz
arpl
ds
enter
adc
sti
movs
call
in
ja
push
and
xchg
dec
push
inc
repz
out
in
test
mov
ins
mov
xchg
cld
(bad)
cmps
out
adc
imul
loope
mov
psraw
int3
cmps
pop
mov
imul
push
xchg
sbb
loop
fisubr
add
loop
popa
inc
inc
outs
sti
xor
fisttp
add
mul
inc
or
shl
xchg
jbe
dec
(bad)
jae
aad
mov
std
dec
xor
mov
ins
into
sbb
inc
daa
xchg
xchg
out
sub
inc
aas
and
inc
cmp
mov
jmp
(bad)
call
add
mov
add
push
jo
movs
adc
int
loope
push
or
sub
or
mov
and
push
mov
mov
sub
pop
xor
clc
push
inc
inc
mov
mov
mov
in
xor
jecxz
pop
ss
iret
cmps
popf
inc
sub
mov
test
xchg
out
dec
mov
mov
sti
or
test
pusha
sbb
and
cli
and
imul
inc
pushf
out
sbb
inc
dec
add
or
pop
pushf
add
inc
vpcomq
out
in
push
mov
ins
sar
xchg
outs
cmc
xor
add
push
sub
lds
(bad)
shl
adc
jae
gs
mov
imul
mov
inc
sbb
pusha
fldcw
rcl
jmp
cmp
mov
pop
js
mov
ror
sti
and
push
mov
mov
mov
iret
lods
out
xor
and
repnz
cmp
sbb
jmp
lods
ins
idiv
ins
cmp
and
mov
push
mov
pop
outs
mov
cmp
js
jnp
retf
loopne
inc
jae
ret
or
adc
push
dec
sub
fisub
push
call
jmp
jne
dec
xlat
(bad)
xchg
rcl
push
mov
xor
ret
dec
das
dec
icebp
inc
xor
jno
stos
daa
lahf
lods
mov
(bad)
aad
std
call
pusha
retf
out
or
push
jo
or
mov
nop
pop
pop
jmp
push
pusha
mov
jb
retf
in
mov
lahf
(bad)
in
nop
inc
lahf
lahf
and
movs
push
sbb
cmps
fdivp
add
add
push
sub
sub
fadd
and
and
stc
sti
aas
cmc
jne
jns
jp
mov
jmp
lods
push
or
nop
adc
pop
sub
lock
inc
outs
out
sti
lods
push
mov
gs
and
rcr
inc
adc
in
cmps
push
mov
aam
sbb
sbb
hlt
push
mov
rcr
or
push
icebp
fwait
jbe
xchg
addr16
xchg
mov
(bad)
cs
mov
mov
add
sub
fldcw
ins
cmc
adc
or
les
push
xchg
(bad)
xlat
sti
imul
mov
and
adc
xchg
sbb
jb
xchg
ins
mov
mov
pop
xchg
jnp
std
mov
xchg
sub
fwait
ret
je
jnp
pop
stos
push
add
pop
stos
imul
fimul
cmp
dec
cdq
sahf
cmp
or
adc
xor
test
pop
push
adc
nop
(bad)
dec
xchg
je
in
pop
ss
sar
fs
(bad)
pop
loope
sub
push
mov
rcl
pushf
and
add
mov
sbb
cdq
ds
je
call
pop
rcr
in
inc
adc
push
jae
movs
rcr
sub
mov
je
and
movs
push
jmp
fdiv
idiv
mov
into
mov
lahf
std
aad
scas
pop
or
jmp
lea
mul
xchg
das
test
jae
out
in
mov
bound
pop
inc
add
or
cwde
cld
clc
jmp
inc
mov
inc
xor
inc
ficom
pop
push
es
sbb
pushf
jbe
pop
ins
mov
mov
inc
clc
cmp
adc
or
cmc
xor
cmp
pop
sahf
dec
and
push
and
mov
repz
and
sahf
inc
cmps
pop
sbb
test
mov
out
ja
dec
call
push
sub
xlat
sub
aad
xor
fld
jbe
pop
and
xor
lea
das
sti
mov
movs
inc
ja
xchg
adc
push
jne
loop
add
sahf
retf
pop
ds
mov
in
cmc
sbb
adc
cli
and
push
ds
mov
ror
cwde
mov
lahf
cmp
or
mov
xor
jle
pop
push
push
ss
in
xchg
movs
pop
rcl
pusha
jl
rcl
xchg
sub
adc
std
or
mov
cmp
inc
rcr
or
iret
mov
or
dec
dec
(bad)
jae
lods
jle
loopne
sbb
and
lea
es
push
pop
cdq
push
and
mov
push
sti
(bad)
mov
sub
inc
inc
xlat
mov
leave
mov
clc
cmp
push
fisub
jmp
or
xchg
or
dec
mov
pop
jl
and
loop
bound
std
ret
add
rcr
fwait
lods
(bad)
std
push
retf
inc
movs
cld
fcom
inc
mov
shl
xchg
jecxz
out
(bad)
push
sub
in
cwde
pop
mov
xchg
push
fcmovnb
repz
out
cmps
repnz
dec
call
enter
jmp
shl
xor
retf
jo
mov
push
cwde
jmp
data16
and
ins
push
addr16
sub
les
jb
xchg
call
addr16
inc
cmc
int
dec
adc
inc
xchg
sbb
inc
js
clc
out
mov
dec
enter
movs
imul
inc
lods
idiv
loop
pusha
pusha
mov
les
xor
mov
and
arpl
and
xchg
xor
lods
pop
dec
out
cli
sbb
push
pop
aad
adc
inc
lock
mov
stos
arpl
push
daa
mov
mov
xchg
in
or
push
push
(bad)
lods
mov
rcl
sbb
sbb
lahf
aad
cdq
mov
sbb
push
mov
pop
fmul
xor
jae
pop
test
or
push
push
(bad)
mov
mov
and
mov
mov
sub
daa
mov
xor
aad
mov
mov
xchg
ss
push
mov
mov
loop
movs
div
dec
movs
(bad)
jmp
imul
shl
inc
loop
sub
es
retf
hlt
out
mov
loope
xor
ret
jg
shl
lods
pop
mov
es
xchg
int
bound
push
push
add
pushw
dec
pop
out
jne
data16
xchg
mov
and
aad
arpl
data16
dec
mov
add
sub
cmp
sub
inc
dec
loope
push
sbb
inc
(bad)
mov
push
in
pop
imul
mov
mov
mov
out
and
jmp
or
into
(bad)
mov
mov
ds
cmp
lods
xchg
jmp
dec
ja
add
dec
fistp
rcl
inc
leave
lods
mov
jne
jmp
inc
inc
es
es
mov
xchg
xchg
mov
jno
iret
sub
clc
(bad)
jnp
gs
leave
call
out
int
int3
or
xor
repnz
jecxz
jp
lods
iret
add
dec
repz
aam
sub
jae
enter
retw
std
in
jbe
adc
retf
inc
add
rcr
pop
lock
sbb
push
mov
xchg
mov
retf
dec
pop
sbb
in
jns
stc
icebp
or
sub
in
and
and
call
shl
fxch
push
sub
pop
std
dec
(bad)
call
or
jmp
mov
lods
hlt
ror
cs
ret
or
sahf
scas
fs
jge
ror
add
mov
push
daa
add
adc
mov
or
adc
sub
in
pop
fisubr
xchg
push
pushf
ret
push
std
jmp
movs
sub
shl
idiv
js
(bad)
ins
ret
aad
mov
lods
pop
cmp
dec
dec
jb
in
int3
or
adc
dec
adc
push
sbb
clc
inc
int
cdq
xor
or
out
stc
pushf
push
pop
mov
adc
push
mov
mov
mov
pop
add
add
jle
fdivr
push
push
(bad)
sbb
dec
popa
imul
push
test
push
fsub
iret
pop
in
cli
inc
mov
fld
mov
cmp
push
outs
or
adc
mov
fmul
xchg
and
sbb
sub
jl
les
scas
imul
xchg
mov
pushf
aaa
pop
mov
jbe
add
or
les
jo
rol
xchg
arpl
rcr
leave
xchg
mov
inc
popf
imul
pop
sub
je
not
jne
xchg
inc
cmp
xchg
mov
in
lds
push
stos
test
retf
xor
adc
fdivr
popa
and
and
je
pop
push
lods
and
xor
or
in
outs
aas
imul
dec
retf
push
dec
icebp
push
cmps
stos
xchg
sub
cmp
sar
sbb
inc
loope
retf
sub
or
rcr
ret
pop
inc
sub
lea
fsub
push
pop
and
aam
jmp
xor
data16
xchg
fbstp
mov
xor
out
pop
loopne
mov
sub
ret
cmc
add
mov
jo
test
les
(bad)
mov
stos
cwde
xchg
adc
in
xor
(bad)
sbb
and
push
add
imul
mov
adc
cmp
ins
out
addr16
dec
pop
sbb
cli
jae
push
aad
lea
jbe
rcl
in
jns
mul
(bad)
fist
inc
or
mov
xchg
pop
repz
cmp
push
fdiv
lock
cs
ror
push
sub
or
dec
mov
(bad)
jmp
imul
mov
mov
inc
data16
add
xor
cmps
xor
fs
pushf
out
inc
movs
dec
push
pop
mov
popf
mov
fs
mov
xor
loop
or
dec
cli
cmc
ss
mov
imul
xchg
or
ss
push
sbb
dec
push
jnp
pop
inc
movs
movs
pushf
jno
fimul
push
pop
ds
jmp
outs
mov
mov
or
inc
dec
xchg
loop
hlt
cmc
push
sbb
ja
inc
es
pop
sub
inc
enter
lods
adc
jae
add
scas
adc
sbb
xchg
xor
xchg
pop
mov
std
mov
add
test
push
(bad)
rol
fidiv
shr
jne
cmps
outs
int3
adc
push
mov
ret
adc
pop
mov
in
sub
popa
add
xlat
cmc
aam
and
out
fistp
adc
shl
aas
leave
out
mov
sar
arpl
fsubr
stos
clc
xchg
dec
das
pop
retf
xchg
mov
cli
jns
cmps
dec
cli
push
xlat
fstp
jge
push
aam
add
add
gs
ins
mov
jge
push
jne
inc
sbb
mov
mov
cmps
into
int3
mov
cdq
jo
repz
cmp
lds
sbb
sub
push
sbb
or
sbb
(bad)
fstp
mov
cdq
jge
push
fs
or
das
cmp
cli
cli
add
push
stos
outs
mov
popa
nop
out
loope
stos
stos
out
aad
gs
daa
add
mov
mov
aad
pop
inc
repnz
movs
test
adc
in
call
mov
call
push
adc
mov
adc
popa
call
mov
retf
inc
stos
call
xchg
inc
pop
adc
mov
pop
add
fdivrp
push
lods
jmp
xchg
pusha
mov
ret
pop
push
push
lea
in
outs
and
xor
pushf
clc
cwde
mov
sbb
sbb
sbb
lock
pop
jne
pop
and
and
push
in
daa
cwde
mov
outs
dec
das
test
lds
ins
mov
inc
mov
mov
xchg
xor
repz
mov
push
daa
sahf
aas
fsub
outs
sub
jns
mul
mov
mov
repnz
xchg
es
scas
xor
and
xchg
loope
popf
mov
cli
int3
dec
jbe
add
js
loop
mov
mov
inc
enter
test
or
push
jns
dec
adc
adc
xchg
sub
dec
shl
dec
repz
cmp
add
mov
lock
jecxz
pushf
cld
mov
mov
scas
mov
ret
sub
and
ja
mov
sbb
cli
cmp
mov
test
xlat
adc
(bad)
sar
int
shl
(bad)
sbb
ds
mov
fist
std
scas
dec
push
push
(bad)
dec
call
out
xchg
loopne
xor
in
in
pop
pusha
sbb
pop
push
or
inc
mov
sbb
cmp
repz
mov
imul
or
nop
pushf
sbb
pop
mov
xchg
inc
ja
sahf
outs
jae
ficom
aam
dec
stc
sbb
xor
push
repz
pop
mov
pop
ret
sub
sub
shr
sbb
(bad)
pop
or
mov
sub
pop
jae
pusha
cmp
arpl
adc
xchg
sti
xchg
pusha
mov
in
inc
xlat
or
loopne
les
dec
in
leave
adc
jge
sub
mov
pop
imul
lods
mov
das
sub
in
out
push
cmps
dec
pop
jb
add
pop
mov
xchg
imul
mov
les
pop
xchg
add
or
xchg
push
outs
arpl
loopne
push
sti
mov
sub
ins
sub
mov
xor
mov
fild
daa
in
ds
xor
pop
cdq
add
jg
mov
mov
jmp
jmp
inc
movs
out
inc
mov
mov
shl
push
fs
adc
inc
mov
repz
adc
jmp
push
or
in
js
xor
(bad)
(bad)
out
js
sahf
pop
push
jmp
in
inc
push
mov
pop
fwait
cmps
push
inc
inc
xchg
jne
mov
mov
and
sbb
imul
push
sbb
mov
push
cs
data16
pop
inc
push
cmp
sti
ret
es
movs
jle
jno
js
les
push
sbb
jmp
std
mov
das
mov
add
movs
icebp
retf
and
xchg
repz
in
jnp
mov
jbe
jecxz
add
popf
push
in
mov
jle
add
mov
xor
movs
sub
clc
(bad)
add
and
cli
ficom
adc
movs
call
es
cmp
pop
hlt
jne
es
test
sbb
push
or
in
inc
add
push
test
lock
int
aad
xchg
ss
xor
push
mov
inc
xchg
sub
adc
dec
lods
mov
pop
sub
mov
jmp
cmp
int3
popf
mov
inc
das
js
popa
cmp
inc
hlt
inc
outs
js
pushfw
and
pop
adc
dec
loope
push
inc
jno
aaa
sbb
out
repz
jmp
jne
xchg
adc
push
bound
(bad)
in
test
mov
idiv
jmp
fild
pop
xor
mov
das
sbb
mov
jnp
fldenv
pushf
add
jno
repnz
js
aas
or
inc
lea
push
scas
pop
mov
cmp
cdq
mul
cs
xlat
mov
fisub
xchg
imul
or
pop
adc
lea
pop
sbb
out
in
inc
mov
pop
sahf
rcl
push
mov
adc
cwde
mov
cmp
mov
stos
pop
out
push
(bad)
push
jae
pushf
adc
aaa
xchg
ss
test
inc
out
dec
sbb
repz
loopne
sbb
xchg
mov
jmp
or
imul
cmp
sar
into
ror
mov
outs
dec
jno
fisub
dec
ret
mov
xor
enter
mov
pop
shl
mul
mov
sub
xor
rcr
dec
cwde
out
cmp
rcr
mov
jae
mov
mov
adc
in
mov
xlat
dec
jle
inc
data16
arpl
aam
popa
sub
sub
mov
stc
xchg
add
add
inc
jge
out
rol
scas
outs
push
jns
loop
ja
icebp
ror
popf
mov
jns
dec
jle
cmp
out
popf
out
into
test
es
sahf
outs
mov
sub
arpl
mov
add
shr
mov
xchg
xchg
ficomp
xchg
mov
fs
sub
or
inc
loope
mov
cwde
leave
repnz
add
fstp
push
dec
loop
pop
mov
or
(bad)
push
ret
add
push
sar
rol
pop
xor
jo
ss
les
mov
mov
mov
test
mov
loop
xchg
inc
pop
hlt
scas
jmp
popf
jle
sub
pop
adc
in
std
sbb
inc
dec
pop
rol
fnstcw
push
push
push
ror
mov
movs
jl
xchg
dec
inc
shl
repnz
es
cmps
xchg
stc
dec
and
mov
loope
lock
in
xlat
xrelease
cmp
ret
xchg
gs
dec
mov
pop
hlt
pop
sbb
pop
cmp
pop
loop
scas
test
out
cld
adc
stos
dec
cmc
scas
xor
lds
sbb
or
neg
fcom
(bad)
sub
imul
sbb
leave
jb
push
loope
mov
(bad)
imul
add
jmp
lods
mov
mov
loope
jno
imul
call
out
std
cmp
loope
pop
dec
inc
sbb
fidivr
push
stc
and
int
cmp
fcmovnu
aaa
scas
add
data16
xlat
in
test
inc
or
push
mov
in
call
repnz
sub
jp
adc
inc
cmps
enter
xchg
inc
icebp
mov
mov
pop
dec
inc
leave
push
push
out
cmp
dec
xlat
inc
sbb
int3
cmps
and
stos
pop
and
pop
pop
inc
out
pop
pusha
mov
xor
cmp
js
mov
mov
mov
push
in
pop
xor
adc
les
push
imul
out
pop
pushf
jb
sbb
or
dec
cwde
and
ins
jns
leave
clc
xchg
enter
sbb
mov
push
ins
adc
loopne
sbb
mov
adc
call
ficomp
in
outs
xor
dec
aas
jo
mov
es
xor
jo
xor
xchg
outs
lock
jmp
lods
xor
in
mov
xchg
cdq
pusha
cmp
and
push
cdq
xchg
gs
lea
inc
in
xchg
(bad)
dec
mov
lea
in
call
sbb
add
adc
add
mov
and
sub
cdq
test
and
xor
loope
xor
push
inc
ja
pusha
pop
xchg
icebp
ror
push
in
outs
ret
sub
addr16
sar
push
cmc
mov
mov
repz
jmp
rep
cdq
or
sbb
xchg
xor
inc
jl
dec
ret
jg
ret
xor
out
add
in
mov
(bad)
gs
mov
in
inc
mov
pop
js
call
mov
out
outs
push
ins
shr
sbb
jge
xchg
and
sbb
out
dec
xlat
fwait
int
lods
sub
cli
dec
ins
cs
rcl
shl
stc
cmp
pop
and
scas
mov
xor
dec
xor
stos
jno
adc
add
aad
cli
add
xchg
leave
(bad)
clc
dec
and
adc
inc
daa
fist
mov
cmp
jb
mov
sub
imul
leave
dec
in
push
add
and
ficomp
sahf
sti
xchg
test
imul
movs
shl
sub
jbe
out
mov
and
push
and
rol
dec
pop
ss
add
fdivr
retf
adc
loope
pop
(bad)
loop
or
nop
bnd
adc
inc
add
pop
int3
lahf
stos
rcr
mov
mov
inc
mov
popa
mov
or
sub
sub
rcl
imul
ja
or
push
add
pop
or
not
jmp
jmp
cmp
mov
aaa
mov
stos
dec
pop
inc
fsubr
nop
pop
mov
push
ss
push
outs
push
xchg
dec
je
sbb
dec
sub
sar
in
cdq
outs
mov
(bad)
cmc
add
dec
daa
sub
test
jg
scas
jae
std
and
cmc
(bad)
adc
or
out
cmp
sti
mov
xor
int3
adc
xor
stc
icebp
neg
xor
in
es
out
jmp
mov
xchg
into
add
dec
jle
mov
lahf
(bad)
call
push
loop
stc
sbb
sub
lods
aas
retf
push
mov
clc
cdq
or
test
adc
push
pop
sti
pushf
cmps
dec
aaa
add
loop
cmp
mov
in
mov
cmp
rol
data16
lds
ffreep
fisttp
mov
xchg
(bad)
mov
mov
fiadd
mov
inc
cdq
rcr
std
adc
ins
push
jb
add
mov
fstp
push
pop
mov
mov
inc
mov
or
movs
sahf
or
aaa
push
cmp
mov
arpl
adc
cs
inc
push
jle
jae
cwde
xor
outs
pop
sbb
popa
inc
or
xor
test
jb
mov
dec
dec
jmp
sub
pop
pusha
cld
add
xchg
fisttp
test
mov
fchs
or
bound
dec
and
cwde
or
daa
and
sub
rcr
push
ror
aaa
ja
push
cmps
jns
pop
cmps
ins
mov
sar
sar
xor
adc
xor
adc
sbb
clc
xchg
adc
(bad)
mov
jl
adc
daa
jle
cmps
mov
pop
aaa
inc
nop
xchg
xor
cs
stos
aad
adc
call
pushf
sahf
in
mov
aad
repnz
imul
and
push
cmp
hlt
xchg
cmc
xor
xor
js
jnp
stc
and
xchg
dec
into
cmp
jb
jmp
(bad)
ja
sub
in
movs
push
dec
(bad)
retf
lock
aas
ins
fidivr
test
retf
je
into
fs
dec
int3
xor
mov
cli
push
and
jmp
or
pop
inc
cld
test
jb
imul
mov
or
add
cmps
pop
lock
inc
fs
fstp
mov
mov
sahf
cli
cwde
fsubr
out
mov
ds
add
loop
out
push
stos
mov
pushf
ss
inc
ud1
mov
jle
(bad)
in
repz
push
mov
mov
jge
pop
pop
scas
sub
pop
lock
scas
sub
pop
xchg
sahf
gs
cmp
xor
std
and
xchg
retf
jl
fisttp
cmp
out
not
imul
inc
ins
and
sub
xor
mov
push
nop
nop
test
jno
sub
addr16
add
out
sbb
push
arpl
leave
les
jae
(bad)
or
cmc
pop
ds
popf
cld
or
add
nop
push
add
addr16
and
push
jecxz
xchg
jae
add
addr16
shr
inc
mov
ret
popf
ret
add
push
mov
push
in
test
icebp
in
loopne
pop
jno
ficom
gs
pop
retf
(bad)
xor
mov
push
xchg
and
sbb
mov
in
xchg
je
jmp
mov
test
dec
repz
in
out
push
jno
sub
adc
or
inc
or
inc
out
pop
lods
lock
dec
adc
outs
add
adc
(bad)
mov
add
ror
std
dec
jbe
mov
int
push
lods
add
pop
jle
jns
push
in
pop
mov
xor
jae
mov
or
jge
xor
lock
cli
mov
mov
out
in
fdivr
adc
inc
das
in
sbb
inc
ss
pusha
jo
or
imul
movs
repz
jl
outs
(bad)
retf
shl
(bad)
mov
int
int3
rcl
repz
fwait
outs
or
icebp
shr
out
xchg
std
adc
call
movs
hlt
xchg
(bad)
adc
shl
or
leave
arpl
aad
sbb
cmc
(bad)
in
(bad)
in
jo
loope
cmp
jbe
sar
lahf
stos
retf
xchg
cmps
movs
push
in
mov
jle
xchg
pop
jmp
pop
add
inc
inc
shl
xchg
in
inc
push
sub
out
movs
cmovns
xchg
gs
fcom
or
cs
mov
push
jmp
xor
mov
sub
sub
xor
xor
movaps
scas
popa
sbb
sbb
fdiv
movs
cli
xor
dec
jns
ja
add
xchg
jg
je
jne
xchg
fcomp
and
pop
nop
loope
dec
pop
pop
dec
adc
inc
jbe
daa
aam
mov
mov
mov
mov
daa
jg
mov
leave
sbb
mov
inc
mov
or
loop
addr16
dec
in
xchg
in
cld
cmp
adc
mov
icebp
cmps
jno
rcr
mov
cmc
add
fwait
out
aaa
jmp
inc
repnz
jbe
out
cmp
ror
cmp
lods
dec
addr16
jo
cmp
movs
mov
enter
lods
jge
cwde
push
ds
call
push
sub
xlat
jne
out
jmp
mov
int3
pusha
and
out
ret
cmc
in
sbb
sbb
jmp
mov
inc
push
sub
lods
(bad)
push
jno
adc
repnz
jo
jle
repnz
imul
lea
sti
int
jge
jb
shl
shr
cli
jae
or
xchg
mov
call
pop
sub
pusha
or
push
in
mov
mov
movs
and
iret
int3
ret
push
mov
stc
sub
retf
jnp
popf
cmp
mov
fld
push
jae
shr
dec
call
push
lock
jb
sub
inc
fcom
add
mov
shl
xchg
in
jg
or
clc
enter
mov
nop
pusha
xor
retf
popf
dec
jns
jne
call
sbb
movs
mov
pusha
in
cmp
dec
adc
add
je
pop
mov
out
inc
mov
xlat
push
sub
sti
out
test
out
test
out
lods
out
push
mov
cli
push
mov
neg
ret
mov
or
ret
rol
loopne
mov
scas
or
mov
adc
mov
mov
cmps
mov
inc
int3
hlt
cli
push
lods
out
push
mov
mov
adc
ret
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
jmp
inc
xor
add
inc
mov
mov
inc
mov
inc
repz
imul
inc
mov
mul
inc
mov
stc
inc
or
dec
enter
lods
repz
imul
push
mov
sti
add
sti
out
test
out
lods
mov
mov
ficomp
dec
and
xchg
jbe
popa
cmp
repnz
stc
fs
jl
cmp
xchg
imul
in
push
xchg
jp
xor
inc
xchg
pop
add
push
cdq
je
sub
xchg
lahf
pop
out
(bad)
pop
sbb
les
mov
dec
addr16
lods
dec
jnp
sbb
out
dec
je
neg
sub
inc
cld
mov
xchg
imul
imul
fst
stos
daa
sbb
repz
in
dec
pop
fbld
lea
outs
push
xor
test
push
xor
icebp
ins
cmc
shr
jo
mov
or
mov
mov
dec
sub
xor
ss
je
jl
sbb
scas
(bad)
mov
mov
dec
adc
jle
data16
jg
add
push
jae
call
push
cmp
ret
xlat
and
test
aad
xchg
fidivr
cmps
xchg
mov
loope
out
xor
xchg
retf
xlat
stos
xchg
sbb
cdq
jge
dec
(bad)
jg
mov
mov
and
dec
retf
mov
jg
cmc
adc
psubd
mov
iret
mov
movs
push
cdq
cmp
push
sub
push
cmp
xchg
pop
sub
pop
adc
xor
pop
add
cwde
bound
mov
daa
lock
fist
mul
mov
or
call
sbb
(bad)
les
pop
dec
xor
jno
jo
jp
mov
mov
adc
retf
dec
pop
push
stos
cli
pop
pop
mov
adc
dec
jge
int3
ret
shr
fcomp
or
iret
mov
(bad)
(bad)
dec
xor
loopne
nop
das
adc
push
iret
cmp
and
nop
dec
pop
call
mov
(bad)
scas
movs
mov
and
push
sub
jbe
call
dec
scas
jge
(bad)
aad
arpl
enter
movs
push
mov
inc
ja
mov
ret
sbb
fwait
rol
mov
fld
popf
shl
fwait
or
xchg
add
fcmovb
cmp
sbb
lahf
mov
rcl
jnp
sbb
out
mov
gs
scas
jno
or
lahf
dec
cvttps2pi
xchg
jmp
outs
stc
push
fucomi
pop
inc
retf
into
pop
add
or
cld
sub
test
xchg
mov
lock
inc
test
mov
and
push
push
push
stos
lods
or
and
inc
jle
xor
jns
movs
aam
cli
movs
std
out
sbb
ja
das
cld
(bad)
mov
les
repnz
xor
stos
inc
mov
sti
out
test
jmp
idiv
push
lods
repz
sbb
mov
adc
bound
daa
add
repz
cmps
jecxz
test
mov
loopne
jns
or
pushf
cmc
daa
jp
cmpps
mov
mov
push
mov
jne
shr
ror
in
hlt
ins
ret
mov
dec
test
(bad)
in
fwait
pop
adc
repz
(bad)
imul
je
retf
jnp
jo
jmp
popa
fcomp
icebp
adc
push
xor
xor
xor
push
push
js
add
dec
push
out
cli
mov
(bad)
ficomp
mov
retf
mov
imul
cli
push
xor
(bad)
fnstsw
(bad)
jmp
push
cmp
mov
mov
dec
fist
xor
data16
fbstp
imul
test
stos
enter
retf
push
lock
test
xchg
xchg
cmp
mov
loope
and
retf
lods
mov
inc
inc
lahf
gs
sbb
push
and
into
adc
out
and
jmp
pop
icebp
inc
leave
and
ret
(bad)
cmp
inc
or
xor
or
jae
jp
adc
jle
cmps
and
and
aam
adc
adc
mov
mov
mov
jmp
sbb
push
add
call
in
xor
or
fcmovbe
mov
mov
in
int
jecxz
pushw
les
lods
and
dec
jecxz
(bad)
fcmovnu
xchg
push
sub
pop
mov
aam
xchg
dec
or
fsub
xor
jno
lods
jo
and
add
sub
sahf
jmp
adc
cmps
stos
in
cmp
mov
hlt
fcmove
fucomp
mov
in
stos
xchg
sub
call
cmp
adc
enter
gs
xor
dec
cmp
inc
mov
dec
xor
and
xchg
call
jg
sbb
inc
pop
xchg
pusha
lahf
xchg
int
sub
neg
cmc
pushf
cmps
stc
pushf
rol
sub
or
adc
pop
add
int3
push
push
in
sub
and
lds
jmp
push
xchg
in
push
fstp
sbb
add
dec
sti
mov
test
psrlw
lods
pop
scas
jo
test
push
mov
xor
jge
es
dec
sahf
inc
mov
sub
popf
cdq
shr
xchg
mov
dec
mov
lea
push
sbb
adc
sbb
and
add
fcomp
push
dec
xchg
pop
jbe
dec
lds
xor
repz
je
jmp
adc
push
frstor
pop
fisubr
fnstenv
cmps
or
rol
inc
(bad)
jo
stos
cld
adc
jno
push
sbb
ficomp
ror
mov
int3
scas
inc
xchg
mov
push
or
adc
sbb
mov
fidivr
mov
and
(bad)
stc
in
push
cli
xor
in
mov
xchg
jno
sbb
inc
mov
btc
xchg
test
sbb
outs
imul
inc
push
and
sbb
dec
jg
std
push
lods
adc
test
bound
mov
push
inc
pop
inc
and
cmp
daa
xchg
imul
mov
mov
inc
iret
jl
mov
mov
xchg
pop
mov
mov
pop
hlt
inc
add
(bad)
cli
dec
lods
sti
jmp
imul
dec
movs
(bad)
cli
shl
cmps
inc
gs
add
ja
or
aas
das
mov
enter
lods
repz
leave
cmps
loop
test
mov
push
test
dec
in
icebp
sbb
inc
and
cmp
repnz
add
std
jae
adc
and
loopne
(bad)
call
mov
mov
lock
mov
stos
fnstenv
fs
lods
in
retf
mov
adc
and
(bad)
fdiv
add
in
jecxz
ror
(bad)
pop
aaa
or
sbb
and
mov
imul
sbb
into
dec
push
push
movs
add
jecxz
js
pop
int3
in
fist
fwait
mov
cmp
enter
xchg
mov
in
inc
cli
(bad)
pop
mov
in
sbb
adc
enter
mov
push
lods
xor
mov
mov
cld
sub
jmp
ss
nop
push
sub
stos
loope
jp
and
mov
mov
enter
mov
out
mov
ret
mov
sbb
icebp
in
cmp
retf
hlt
mov
xchg
pop
mov
movs
add
push
sar
mov
in
sbb
shl
jb
mov
mov
sbb
xchg
test
jne
mov
mov
ffreep
out
add
add
movs
sub
push
daa
jnp
iret
call
das
addr16
stos
loop
dec
xor
jge
imul
loop
ja
cs
jle
aam
cmps
mov
daa
sbb
sub
sbb
(bad)
mov
or
mov
bound
retf
push
mov
or
retf
xor
xlat
push
lds
sbb
and
pushf
inc
sub
xchg
pop
das
mov
aam
js
pushf
ss
or
ds
je
jmp
sub
inc
out
ret
push
mov
xor
leave
rcr
js
push
fwait
dec
or
jb
fadd
push
call
test
int
cmp
bound
push
mov
icebp
fs
icebp
sbb
mov
and
jb
fsub
jbe
pop
xlat
mov
hlt
sbb
in
mov
cmc
mov
(bad)
out
cmp
bound
dec
shr
or
inc
fcom
xchg
or
data16
aad
test
jmp
dec
xchg
dec
sti
and
push
(bad)
and
add
or
daa
add
mov
jbe
mov
add
fbld
in
xchg
jmp
sbb
aad
hlt
jge
and
mov
adc
test
dec
in
out
push
movs
out
dec
movs
sti
jmp
repz
or
out
push
and
out
adc
hlt
aas
test
or
daa
xor
dec
mov
repz
jge
mov
push
push
not
popa
(bad)
ins
add
mov
jns
xchg
call
mov
add
out
movs
jnp
sub
(bad)
retf
add
data16
(bad)
in
cs
push
in
test
push
push
mov
xor
pop
pop
push
mov
inc
lods
iret
pusha
fiadd
ror
jge
xor
cmp
repnz
popa
popf
sub
aaa
pop
imul
inc
icebp
sbb
dec
outs
(bad)
push
and
xor
cdq
je
mov
mov
and
mov
mov
nop
(bad)
jmp
sub
shr
jmp
sbb
dec
ret
jb
sbb
repnz
xchg
push
ja
imul
pop
sbb
sub
mov
xlat
sbb
xor
xor
mov
movs
inc
xor
xlat
adc
int
lahf
scas
fld
rol
cmp
inc
enter
dec
adc
xor
call
ror
pop
inc
aaa
ss
cmc
push
imul
mov
jl
aaa
or
mul
das
mov
retf
and
pop
test
sbb
in
(bad)
push
or
(bad)
and
ins
out
add
mov
imul
xchg
ja
fiadd
inc
lods
das
pop
leave
adc
cmp
call
loope
loop
pop
hlt
cmp
dec
test
cmp
stos
stos
push
sub
pop
aaa
cmp
pop
adc
add
mov
inc
jge
mov
dec
test
outs
dec
xchg
xor
les
and
lods
lods
mov
or
mov
xchg
mov
pop
ret
xor
int
dec
xor
pop
pop
outs
cmp
mov
dec
sti
mov
gs
push
enter
inc
cs
jl
and
or
or
mov
fcmovne
scas
sbb
cmp
mov
cmp
lds
mov
out
mov
in
ret
retf
jnp
in
jno
mov
aaa
gs
push
push
and
mov
mov
cmp
aam
leave
nop
retf
loopne
inc
test
mov
xchg
loop
fsub
ror
xchg
add
xchg
ds
push
cmp
popf
int3
dec
inc
pop
hlt
add
or
jecxz
pop
add
jle
clc
jb
movs
(bad)
push
or
popa
pop
fld
jbe
shl
sar
sub
and
jle
jb
sbb
out
shl
push
out
in
hlt
push
fild
repz
mov
stos
cmp
jo
int
sbb
sbb
xor
cwde
add
and
(bad)
sbb
xchg
ror
mov
xchg
mov
movs
repnz
int
enter
xchg
push
mov
xchg
clc
movs
aad
xlat
and
jbe
lock
ror
add
or
inc
leave
cmp
jbe
je
js
jle
mov
in
inc
cld
mov
xlat
(bad)
push
clc
je
dec
mov
out
inc
pusha
retf
aas
loop
mov
fnstcw
popf
xor
mov
add
inc
add
repz
ja
cmp
out
pop
push
aaa
(bad)
fistp
jl
sub
cdq
or
rcl
test
sahf
push
int
test
mov
fadd
call
ret
dec
adc
xchg
jge
js
fcmove
jno
pushf
iret
rol
xchg
movs
stos
sbb
jmp
stos
mov
hlt
pop
mov
mov
sbb
jmp
movs
fsub
mov
jge
call
mov
add
imul
popf
xchg
lahf
mov
mov
cli
jmp
inc
loopne
cli
push
test
cli
pusha
mov
jmp
repz
or
mov
and
and
jmp
lea
imul
xor
mov
sub
test
cli
jmp
pop
movs
repz
pop
dec
jle
adc
mov
or
add
loop
int3
jmp
aas
sub
mov
sbb
add
cmp
frstor
xor
xchg
or
mov
fistp
sub
lock
inc
adc
sbb
leave
cdq
(bad)
or
mov
pop
fst
in
adc
leave
enter
pop
dec
jmp
lock
adc
sbb
sti
xchg
pop
icebp
xor
xchg
xor
cmp
pop
imul
imul
ins
push
and
call
xlat
fsubr
cmp
xchg
cmc
push
ins
(bad)
ins
inc
or
scas
jne
inc
add
inc
cmp
sub
inc
nop
sbb
mov
mov
mov
lahf
adc
test
push
adc
scas
paddsb
cdq
sbb
sub
aaa
jne
dec
xchg
out
stc
pusha
cmc
push
pop
cmc
aas
aam
jo
adc
mov
xchg
movs
ret
dec
stos
and
jno
xchg
call
test
cmp
add
sub
rcl
sahf
push
stos
mov
rcl
dec
fst
fistp
icebp
xor
mov
mov
bound
sbb
sub
push
pop
fcomp
aas
dec
sub
sbb
xlat
outs
(bad)
je
or
xchg
mov
and
leave
(bad)
imul
retf
mov
cvtdq2ps
loope
inc
jne
dec
out
aad
adc
jle
mov
xchg
push
xlat
and
mov
sbb
push
iret
mov
adc
cmp
fstp
push
jmp
xchg
sbb
adc
jbe
loopne
stos
add
mov
scas
cwde
or
xor
fst
adc
mov
mov
lea
xchg
sub
loopne
pop
inc
adc
test
out
mov
dec
in
pop
cwde
int3
mov
sub
cli
test
mov
stos
scas
cmps
cmp
mov
into
sub
jbe
jecxz
add
sahf
popa
push
fwait
pop
imul
cmp
cmp
mov
add
cmps
push
push
dec
or
mov
xor
jle
frstor
cdq
out
sbb
leave
sbb
jo
bound
daa
xlat
or
inc
pop
sub
(bad)
push
mov
mov
rcr
pop
lods
dec
mov
in
retf
xor
push
and
pusha
sbb
jns
mov
(bad)
aaa
inc
add
xor
xchg
dec
inc
mov
or
or
jb
imul
in
imul
cmps
cld
pop
shl
or
fild
jl
or
call
or
fadd
dec
popa
xchg
shr
adc
pop
mov
arpl
ss
sbb
push
ss
je
sub
aaa
int3
jp
ficom
imul
adc
sub
adc
pop
test
or
sub
shl
pop
pop
test
rcl
sbb
mov
(bad)
pop
scas
and
out
scas
xchg
and
jo
inc
dec
cs
add
jge
dec
loopne
mov
test
addr16
stc
adc
dec
sub
xor
inc
mov
jae
call
inc
sbb
jns
bound
jo
pop
mov
pop
out
sbb
or
aaa
jo
dec
cld
(bad)
in
stos
outs
xlat
dec
imul
pop
jmp
movs
xor
sub
jg
out
sub
mov
add
adc
lods
mov
add
loopne
ret
mov
(bad)
icebp
or
popf
lds
mov
iret
scas
fcom
fs
xor
movs
mov
lea
xor
loope
fs
shr
loop
aad
jp
lods
fwait
xchg
jmp
add
out
dec
adc
shl
sub
mov
cwde
mov
xor
arpl
sub
nop
cmp
lds
mov
sub
mov
push
call
retf
sar
sbb
stc
aad
pop
and
pop
shr
sub
rcl
scas
ret
jno
jo
cmp
call
inc
test
lock
lods
out
inc
daa
pop
loop
movs
sub
lock
pop
sbb
or
push
js
scas
push
push
mov
icebp
push
bound
out
aad
aas
jne
loopne
push
(bad)
xchg
js
mov
dec
pop
and
mov
(bad)
dec
mov
fcomip
ja
pop
jmp
xchg
mov
(bad)
ret
movs
fnstenv
mov
loope
repz
push
sub
ret
jmp
enter
cs
sbb
pop
popf
pop
xchg
nop
retf
shl
int3
push
adc
out
dec
(bad)
cli
(bad)
jne
rcr
fcomp
dec
xchg
cmp
sub
pop
mov
sbb
cmps
mov
call
popf
mov
xchg
cmp
lods
dec
and
out
bound
ins
dec
ins
inc
push
dec
mov
or
cli
sub
fwait
add
das
aaa
lods
jns
and
inc
mov
xchg
pop
sbb
call
icebp
push
cmps
mov
mov
jge
add
out
push
neg
rol
dec
inc
xlat
xchg
inc
adc
jp
(bad)
jmp
mov
push
jecxz
xchg
retf
mov
mov
nop
cmc
push
dec
imul
fsubr
outs
jno
bound
sbb
lahf
pop
pop
push
test
push
sub
dec
repz
je
dec
loop
out
push
shl
das
pop
push
mov
cmp
push
sar
xchg
push
xor
adc
out
pop
push
int
pop
cld
js
jecxz
ror
or
and
rcr
cmc
daa
push
dec
mov
dec
cwde
int
add
inc
push
icebp
mov
adc
fsub
mov
dec
adc
xchg
(bad)
xchg
mov
fnsave
cs
mov
cmp
xor
dec
adc
leave
add
jle
hlt
icebp
imul
or
xchg
push
pop
pushf
(bad)
mov
xchg
idiv
lds
cmp
nop
ja
aam
movs
mov
shl
push
sbb
adc
fwait
iret
mov
add
mov
repnz
jp
les
dec
ret
push
call
cs
jmp
les
or
(bad)
in
add
inc
mov
int3
inc
and
mov
mov
sub
mov
xchg
push
add
sar
cli
xchg
jp
pop
sti
pop
inc
add
add
cmp
pop
fnstsw
loopne
jns
xlat
xchg
lds
and
fidiv
xchg
push
push
test
js
add
or
stos
push
jmp
inc
sub
movs
inc
mov
cmp
lds
retf
jmp
ss
call
dec
dec
cmp
sbb
movs
xor
sub
loope
mov
add
sbb
dec
inc
out
add
mov
je
out
out
out
and
stos
movs
imul
ficom
xchg
lea
mov
adc
pop
mov
adc
mov
ds
mov
fmulp
xor
div
xchg
or
gs
pushf
icebp
sbb
nop
ins
or
call
std
sbb
std
sbb
dec
push
(bad)
enter
pusha
test
cmp
inc
sub
sub
xchg
out
popf
sbb
leave
ror
imul
pop
ins
loop
dec
sti
push
jp
jb
js
loope
xchg
rol
sti
xchg
mov
mov
push
mov
retf
fimul
pusha
aam
cmp
dec
retf
and
cmps
aaa
pop
ins
(bad)
ds
cmp
mov
fbld
repz
or
out
inc
sub
dec
in
pop
mov
jge
adc
or
(bad)
stc
pushf
jge
je
sti
(bad)
jno
push
dec
pop
test
mov
je
lods
add
test
and
popf
es
mov
rol
jl
push
xor
pop
sub
mov
js
jmp
outs
int
sbb
xlat
push
xchg
aaa
pop
fbld
popf
cmp
cmp
inc
pop
hlt
xchg
lea
into
idiv
js
int3
cmp
cwde
mov
mov
mov
out
push
movs
idiv
dec
movs
sti
out
inc
lods
repz
mov
shl
ret
test
and
pop
das
arpl
out
inc
mov
repz
push
and
dec
mov
jle
rol
shl
aad
ret
pop
mov
call
or
push
push
leave
jl
cmp
jnp
mov
pop
retfw
xchg
mov
mov
rcr
jbe
(bad)
stos
inc
push
xchg
adc
loop
ins
adc
imul
adc
mov
movs
shl
dec
stos
jno
(bad)
jb
in
push
js
add
jne
ss
inc
fwait
xchg
loopne
jp
aaa
mov
ss
popf
inc
mov
push
dec
mov
and
mov
fdivr
sbb
xlat
mov
movs
std
imul
jnp
mov
out
movs
pushf
in
in
and
fadd
or
das
test
push
jge
jl
xor
sbb
cmps
shl
hlt
int
mov
jae
push
or
lea
ret
jg
xchg
aaa
inc
out
xor
sbb
popf
or
in
les
add
xchg
repnz
mov
or
adc
cmp
ins
test
dec
lods
daa
fild
xchg
dec
mov
aas
add
aas
adc
fisub
jnp
leave
int3
fs
call
jle
popf
jnp
cld
pop
dec
fbld
mov
mov
mov
rol
push
inc
(bad)
push
and
js
mov
outs
jmp
repnz
jmp
xor
or
adc
cmp
scas
nop
add
div
(bad)
xor
mov
jne
mov
xor
xchg
sbb
and
shl
iret
fwait
and
mov
pop
(bad)
rcr
mov
jmp
and
fdivr
sbb
jo
push
shl
das
rol
out
pop
call
pop
and
push
mov
xchg
int3
lea
push
inc
xchg
xchg
or
or
lock
mov
dec
into
push
mov
pop
loopne
loope
sti
test
outs
mov
test
gs
xchg
inc
xchg
mov
cmp
in
xchg
pop
cmps
xor
mov
add
xlat
fadd
cld
imul
leave
xchg
xor
adc
(bad)
hlt
ret
imul
xchg
xor
jle
add
adc
mov
mov
out
ret
daa
mov
jb
pop
mov
mov
(bad)
and
aaa
shr
add
and
movs
pop
mov
stos
jns
leave
out
hlt
bound
mov
movs
retf
and
cmp
jb
cli
lea
adc
adc
ffree
mov
inc
das
repnz
mov
pushf
inc
movs
pop
ds
sar
aas
jbe
in
ficom
ficomp
cmp
or
movs
dec
pusha
adc
sar
rcr
cmp
cmp
xchg
je
push
fwait
mov
lahf
jno
mul
(bad)
call
or
dec
lea
fadd
inc
dec
scas
lods
jo
imul
cmps
add
and
add
loope
ds
repz
(bad)
(bad)
xor
std
dec
stos
in
push
xchg
out
rol
pop
iret
xor
es
mov
or
add
out
cmps
xor
js
cmp
cdq
cmps
rcr
xchg
push
fisub
xchg
fidiv
xchg
mov
jns
jg
(bad)
fcom
dec
test
aas
sub
fbstp
inc
add
sbb
loopne
push
cli
std
test
(bad)
dec
fs
stc
cmp
xlat
out
mov
pop
sub
nop
je
lock
movntq
dec
mov
mul
pushf
lods
rcr
lea
mov
sbb
popa
adc
dec
out
jl
call
pop
cld
daa
mov
arpl
dec
mov
mov
sbb
mov
lock
fisubr
dec
mov
in
rcr
in
inc
aas
mov
jo
ret
mov
clc
iret
jno
pushf
outs
sar
adc
dec
mov
rol
xor
call
mul
xor
mov
ror
test
dec
fdiv
sub
in
sahf
jmp
and
adc
push
mov
aas
fmul
movs
iret
mov
ss
(bad)
or
pcmpeqb
outs
mov
xchg
cmp
sub
xor
das
dec
imul
inc
mov
sar
imul
pop
movs
inc
retf
lds
(bad)
jmp
clc
adc
and
lock
push
sbb
push
sub
mov
in
adc
pop
nop
leave
xor
outs
out
push
fisubr
and
inc
aas
jmp
movs
mov
inc
fwait
push
in
sti
ret
into
aam
and
mov
push
xchg
ins
mov
adc
shl
jb
pushf
out
or
nop
mov
push
rcl
mov
pop
and
add
add
push
stos
rol
or
repz
sub
repz
pop
ins
jno
fnstcw
mov
ficom
xor
(bad)
mov
dec
pop
xor
mov
cmp
jae
xor
inc
push
popa
retf
stos
mov
pop
mov
jg
jp
cs
pop
xchg
push
xchg
pop
push
mov
ins
bound
jg
push
mov
hlt
jnp
inc
cmc
ins
jne
lods
out
mov
mov
outs
cs
scas
(bad)
mov
and
out
xor
push
push
in
and
out
adc
rol
cmps
mov
out
ror
pop
enter
test
in
pop
xchg
cmp
mov
adc
ficomp
cli
pusha
jmp
or
pusha
dec
inc
lods
out
lods
add
add
cmp
popf
or
mov
pop
das
add
push
or
mov
xchg
pop
jno
shr
xchg
in
sub
push
jnp
adc
out
ret
shr
nop
pop
test
dec
xor
dec
arpl
pusha
mov
rol
inc
jecxz
loope
mov
and
sub
rol
xor
retf
(bad)
adc
icebp
mov
mov
shl
in
data16
cld
es
leave
(bad)
test
retf
xchg
push
adc
aam
xor
clc
push
cmp
sub
and
(bad)
aaa
xchg
outs
xchg
movs
fwait
adc
add
and
ins
loop
stos
xor
out
mov
pop
in
inc
pop
in
or
int3
sar
pop
das
sbb
sar
xchg
std
add
loopne
jg
dec
pop
cs
imul
jns
fidiv
cmp
fnclex
and
popf
repz
stos
test
jge
jecxz
jnp
or
mov
jnp
jne
in
inc
push
mov
out
push
popa
sub
pop
cs
dec
in
or
mov
jl
cmp
xchg
sti
xchg
or
adc
mov
(bad)
or
fmul
call
outs
mov
(bad)
fcom
mov
(bad)
jmp
neg
and
cmc
test
push
add
ret
mov
xchg
inc
int
mov
aas
cs
mov
jmp
jb
cmp
pop
gs
sbb
or
ins
(bad)
lds
jge
jmp
pop
jns
sub
xor
pop
in
inc
aam
inc
(bad)
push
imul
inc
mov
imul
aam
in
dec
in
loop
test
out
inc
test
jmp
repz
add
jae
inc
in
adc
dec
mov
repz
dec
ins
push
popa
cdq
vpor
and
jmp
(bad)
ret
int3
adc
les
add
inc
iret
stos
xchg
dec
fdivr
int3
inc
push
(bad)
shl
or
mov
cli
push
jle
or
hlt
cmp
xor
sbb
inc
bound
mov
pushf
(bad)
movs
push
shl
push
and
jl
vaddsubps
jo
dec
adc
cmps
ins
mov
call
arpl
bound
lds
dec
test
xor
inc
hlt
add
loopne
adc
call
jne
jmp
(bad)
mov
cs
push
test
std
mov
dec
mov
cmp
mov
fldcw
add
fmul
stos
sub
push
mov
xlat
inc
or
pop
lds
ret
lods
and
ret
jno
aas
push
inc
or
mov
hlt
mov
mov
push
jmp
(bad)
dec
out
out
push
ret
push
stos
jmp
stos
lock
pmuludq
and
int3
movs
xchg
dec
test
adc
dec
rcl
loopne
lods
ins
xor
jle
inc
adc
pusha
sub
retf
sub
pop
xlat
outs
jmp
inc
stos
test
sbb
mov
arpl
push
pop
leave
mov
sub
mov
out
sub
fwait
aaa
or
pop
scas
pusha
push
push
loope
jg
movs
push
imul
xchg
and
xchg
and
mov
mov
adc
sbb
pop
inc
lock
pop
daa
xchg
inc
sub
mov
sbb
shr
xchg
imul
fstp
bound
or
neg
push
stc
xchg
sbb
scas
sub
mov
repz
test
or
cdq
mov
add
cmps
hlt
and
aaa
xchg
loop
jge
push
sahf
test
add
test
inc
push
and
repz
or
fidiv
ror
ret
loope
fisubr
scas
pop
jmp
push
xchg
cmc
adc
mov
jmp
fisttp
or
lea
ds
jmp
enter
mov
xor
xlat
mov
shl
retf
into
fwait
adc
sub
or
aas
push
nop
stos
stc
inc
pop
or
inc
add
out
dec
test
cli
dec
mov
jmp
imul
inc
in
das
add
cmps
mov
add
xor
arpl
jmp
inc
movs
(bad)
ds
mov
movs
jl
jnp
out
data16
mov
sbb
or
add
ficomp
or
out
jmp
pop
push
scas
jae
inc
mov
ror
bound
push
jo
(bad)
jmp
gs
jecxz
xchg
push
mov
xchg
push
loop
imul
add
mov
in
ficomp
out
outs
(bad)
mov
call
jb
adc
add
mov
pop
fwait
mov
ror
repnz
in
mov
mov
cmp
fld
xchg
pop
pop
inc
and
cwde
mov
(bad)
int
xlat
sbb
aam
repnz
mov
stos
imul
inc
retf
fdivp
fcomp
call
mov
fwait
daa
and
mov
push
push
cli
mov
add
xchg
ja
stos
push
or
mov
repz
pop
hlt
inc
mov
adc
cwde
fs
cli
push
adc
xlat
mov
sahf
cmp
adc
out
imul
mov
mov
ret
cmp
inc
iret
imul
add
and
or
adc
sbb
xchg
cmp
or
mov
shl
push
gs
daa
pop
(bad)
cwde
fcmovnu
or
scas
ds
adc
jbe
xchg
mov
test
popa
sbb
or
rcr
es
xchg
adc
adc
pop
dec
xor
jae
add
mov
call
or
ror
icebp
mov
inc
in
inc
dec
push
in
shr
aas
outs
xor
ins
add
pop
push
imul
enter
cs
cmp
mov
mov
or
imul
xor
sub
call
pushf
jbe
mov
mov
mov
adc
cmc
out
or
xchg
mov
fbstp
add
cmp
popf
jne
es
rol
cdq
aas
dec
and
test
cmps
adc
dec
inc
cs
(bad)
mov
in
and
stos
mov
mov
add
stc
dec
push
push
push
dec
fstp
cmp
mov
in
fsub
jb
jnp
lahf
xor
xchg
push
jo
dec
test
sbb
inc
iret
lock
adc
loope
in
(bad)
dec
in
cdq
mov
scas
or
push
xor
sub
mov
add
pop
mov
push
xchg
call
sub
jge
imul
sub
jle
jle
adc
xchg
jne
gs
fmul
sub
mov
mov
enter
(bad)
cmp
pop
push
in
ins
sub
lahf
sub
stc
and
ror
(bad)
lods
mov
loopne
fisub
(bad)
fidiv
(bad)
(bad)
cwde
imul
fsubr
call
fadd
add
add
jle
je
cmp
cmp
pop
aam
idiv
stc
inc
pop
or
inc
cmp
loop
mov
repz
imul
inc
mov
jb
and
outs
xchg
imul
inc
mov
repz
push
call
arpl
dec
jmp
sub
test
mov
ret
mov
in
bound
iret
es
jbe
mov
mov
cmc
inc
jp
lock
inc
addr16
movs
outs
xlat
push
pusha
mov
xor
dec
pop
fst
or
out
aas
stos
xchg
adc
jp
and
push
pop
movs
test
adc
jbe
jnp
test
outs
push
aam
dec
sub
(bad)
out
imul
stos
aas
cmps
mov
loopne
call
mov
jg
adc
call
sub
rol
xor
data16
add
cmps
daa
fs
push
sub
jne
arpl
mov
or
sbb
mov
sbb
test
cwde
and
and
dec
jp
add
scas
fld
sub
push
retf
jecxz
sub
adc
cmp
dec
mov
test
imul
jg
cwde
push
inc
jge
dec
(bad)
imul
or
mov
push
outs
xor
rol
jnp
fxch
add
retf
out
in
dec
xchg
inc
cmp
sbb
fwait
adc
shl
pop
xchg
in
sub
into
jmp
fwait
cli
or
jnp
cmp
push
mov
enter
xor
push
xchg
sbb
cmp
js
data16
out
ins
les
dec
lods
std
mov
stc
fistp
into
lds
loope
mov
call
inc
add
sti
lods
mov
int3
cmps
add
inc
mov
xor
loopne
jg
imul
mov
dec
mov
movs
push
or
and
mov
sbb
push
lods
pop
dec
xchg
(bad)
inc
inc
(bad)
ret
dec
dec
jle
sahf
out
dec
jl
ja
jl
cmp
and
shrd
inc
loopne
(bad)
in
xor
ror
repz
enter
add
push
shl
aaa
xchg
mov
retf
push
inc
fwait
inc
(bad)
hlt
mov
aaa
pop
mov
jg
pop
in
data16
mov
shr
les
sbb
sbb
bound
call
clc
adc
cli
mov
cs
fidiv
movs
cmc
shr
pop
xor
fs
out
sbb
movs
into
psllw
call
ds
and
cmps
pop
aad
repnz
andps
inc
pop
daa
dec
dec
xchg
push
mov
inc
lds
clc
popa
jge
cmp
pop
out
mov
push
call
bound
jle
push
jae
push
daa
adc
bound
push
add
in
ins
mov
xor
push
loop
push
xchg
xor
mov
adc
aaa
out
imul
xor
scas
and
and
pop
int
shr
call
cmp
push
jmp
push
mov
(bad)
(bad)
jmp
mov
jbe
xchg
xor
jae
stos
pop
fbld
mov
fldenv
outs
mov
mov
add
(bad)
pop
retf
ret
fcom
into
push
inc
in
cmp
mov
movs
cmp
sub
je
mov
dec
icebp
clc
dec
adc
(bad)
sbb
xchg
add
push
mov
aad
jge
sbb
outs
mov
stc
fcmovnb
hlt
cmps
(bad)
sbb
imul
inc
cmp
stos
repnz
pusha
push
iret
sub
xor
sub
hlt
fstp
mov
adc
test
push
fcmovb
mov
jp
leave
dec
(bad)
pop
test
sbb
in
pop
jae
repnz
mov
or
sbb
cdq
daa
mov
sbb
in
(bad)
lds
xchg
push
outs
adc
pop
mov
xor
dec
sub
add
xor
fdiv
retfw
js
aas
add
jmp
mov
retf
and
loop
stc
mov
jg
mov
push
fist
retf
cdq
test
or
fsubr
mov
leave
out
pusha
shl
pop
inc
add
in
xchg
aam
adc
and
xor
pop
arpl
(bad)
(bad)
aas
leave
shr
inc
mov
in
sbb
into
ret
sar
or
xchg
mov
adc
mov
add
sbb
imul
xchg
dec
test
add
repz
xchg
int
mov
mov
leave
lahf
jecxz
xor
ret
sbb
popa
daa
fs
leave
and
out
xor
jecxz
mov
rcr
das
(bad)
scas
cmp
sbb
inc
xchg
mov
popf
dec
test
fst
jp
test
or
sbb
pop
jns
or
sbb
sbb
jle
mov
sbb
repnz
inc
push
jp
sbb
pushf
sbb
cmps
dec
in
pop
jp
call
iret
popf
in
popa
shl
push
les
sti
inc
mov
mov
test
mov
adc
fisub
push
cmp
mov
mov
in
cli
mov
adc
add
push
xchg
sub
mov
outs
fs
outs
dec
xchg
mov
cmp
mov
cli
dec
xchg
mov
fucomp
out
jae
sbb
and
ins
xchg
sub
xlat
movs
xchg
leave
iret
aaa
lea
xchg
(bad)
sub
rcr
(bad)
(bad)
cmps
ss
dec
je
lds
inc
sub
pop
xchg
pop
xor
das
enter
dec
push
add
out
mov
xchg
stos
por
xor
ins
xor
in
mov
xchg
jmp
xor
lods
mov
xor
sar
addr16
test
dec
sub
jmp
test
pusha
sbb
ja
test
push
push
fist
push
cmps
jno
pusha
jmp
popa
mov
mov
cmp
jmp
mov
and
inc
or
xchg
mov
lahf
lods
inc
sbb
into
retf
cmp
or
sub
add
outs
loop
shl
lahf
fs
iret
sar
xchg
jg
xor
sub
jae
pop
mov
xchg
mov
fstp
dec
push
jecxz
sti
mov
repz
jo
dec
adc
repz
pop
iret
mov
pop
or
mov
jle
ins
mov
imul
cmp
mov
aaa
es
(bad)
mov
sub
ins
jecxz
pop
jne
mov
xchg
mov
fild
mov
lock
adc
(bad)
sti
fistp
adc
cld
push
mov
mov
xor
loopne
shl
pop
hlt
das
jl
shl
sbb
sub
nop
dec
aad
mov
pop
push
ffree
jmp
mov
add
xor
or
and
lahf
pop
fadd
fcmovu
(bad)
outs
pop
ret
mov
cdq
call
inc
loop
repz
mov
in
mov
jb
and
jle
pop
sbb
push
in
out
mov
lds
mov
gs
fwait
dec
jmp
or
sub
cmp
imul
dec
hlt
sbb
call
addr16
not
push
jecxz
jne
sbb
xor
mov
imul
dec
dec
or
call
dec
and
mul
in
xor
add
(bad)
out
movs
js
cdq
fnsave
and
xor
icebp
dec
call
xchg
cmp
mov
enter
push
aas
loopne
ds
mov
leave
and
fld
mov
jge
mov
xor
inc
jne
jo
mov
ja
jno
inc
leave
push
jecxz
mov
dec
out
neg
(bad)
sub
cmps
mov
jle
pusha
(bad)
retf
mov
rol
mov
and
mov
sbb
jns
mov
jmp
test
mov
xor
inc
add
cdq
pop
adc
mov
retf
pop
jae
inc
call
jl
dec
movs
test
inc
add
loop
jno
cmp
add
hlt
sti
int
push
jbe
pop
dec
fcomp
mov
mov
repnz
(bad)
or
lea
jge
fimul
fisubr
and
mov
mov
adc
inc
adc
retf
mul
jg
cmp
sub
jns
jge
cwde
push
nop
outs
pop
(bad)
jmp
xchg
jecxz
mov
mov
js
in
sbb
xchg
and
mov
cmc
and
aaa
add
rsm
inc
dec
rol
hlt
sub
hlt
xchg
dec
mov
or
xchg
addr16
into
sbb
mov
xchg
cli
mov
add
mov
push
icebp
dec
lock
int
push
test
inc
sbb
sub
cmp
std
inc
jg
or
add
xchg
mov
mov
rol
mov
test
cld
ret
inc
adc
cmc
mov
add
je
pop
mov
out
inc
mov
xlat
push
sub
sti
out
test
out
test
out
lods
out
push
mov
cli
push
mov
neg
ret
mov
or
ret
rol
loopne
mov
scas
or
mov
adc
mov
mov
cmps
mov
inc
int3
hlt
cli
push
lods
out
push
mov
mov
adc
ret
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
jmp
inc
xor
add
out
mov
mov
out
mov
repz
imul
push
mov
out
inc
test
out
inc
int3
repz
inc
mov
imul
inc
mov
div
dec
mov
push
das
stos
repz
mov
(bad)
jmp
into
sahf
pop
adc
aas
jno
sub
es
mov
lods
pushf
cmp
mov
jnp
inc
xor
dec
imul
inc
stos
mov
aam
stos
es
and
call
add
sbb
push
not
pop
cmp
xchg
ret
and
xchg
stc
inc
push
inc
aas
aam
mov
add
mov
test
mov
mov
arpl
xchg
jns
mov
imul
dec
sub
sbb
dec
inc
icebp
xor
cmps
pop
gs
nop
xor
fstp
std
cli
iret
(bad)
std
jmp
xlat
out
or
dec
fyl2xp1
sti
push
aam
jbe
sbb
jp
or
jecxz
out
repz
ja
mov
xor
or
jle
out
scas
or
dec
pop
ret
mov
call
(bad)
into
js
jge
push
scas
mov
mov
mov
jns
mov
popf
cmp
adc
enter
(bad)
int3
jmp
aas
cmp
mov
push
jmp
sahf
mov
fdiv
out
(bad)
jne
pop
sub
stos
les
test
mov
je
and
stos
ror
cmp
scas
adc
enter
add
scas
push
sbb
xchg
xchg
pop
inc
cdq
aam
sbb
mov
add
loop
or
xor
cmc
dec
push
inc
bound
test
inc
ins
(bad)
xlat
iret
icebp
adc
xor
ja
dec
scas
pushf
out
movs
sub
popf
sbb
(bad)
out
sbb
sub
pop
dec
cmp
push
ins
fnstcw
test
pop
dec
inc
pop
ret
push
in
loop
and
fbld
mov
(bad)
inc
dec
fimul
movs
push
sub
mov
ins
dec
nop
rcr
mov
xlat
stos
lods
leave
test
jo
lods
dec
adc
jae
pushf
pop
icebp
retf
and
out
fnstcw
bound
std
mov
shr
(bad)
mov
jg
xor
push
xchg
xchg
data16
lds
sbb
out
fwait
push
jle
add
js
ds
cli
ss
scas
(bad)
in
repnz
xor
out
out
js
les
inc
cld
popf
aaa
test
pushf
xchg
xchg
push
push
cmps
lds
dec
movs
out
dec
movs
out
inc
movs
imul
push
mov
sti
not
repz
(bad)
hlt
scas
cmp
enter
movs
test
scas
clc
(bad)
pop
fdivr
adc
xchg
in
iret
inc
mov
out
int
mov
xchg
cmps
jg
imul
iret
sar
or
push
popa
mov
test
aas
fwait
adc
jae
mov
pushf
(bad)
jmp
jge
xchg
jne
and
ins
pop
mov
jb
call
outs
mov
pop
push
xchg
cs
cmp
sbb
inc
xor
mov
mov
jns
je
add
mov
stos
mov
(bad)
sub
jecxz
loop
into
clc
cmp
push
sbb
adc
fadd
ja
adc
retf
push
mov
cmp
jo
lea
call
rol
(bad)
shl
xchg
cmps
dec
inc
inc
mov
xchg
mov
sahf
inc
and
xchg
jl
xlat
shr
sbb
sbb
push
les
out
xchg
and
push
ss
or
out
sbb
push
adc
adc
shr
xchg
mov
jb
cmp
(bad)
(bad)
push
push
in
or
clc
lods
call
in
jne
and
inc
sbb
rol
dec
or
(bad)
xchg
or
in
jge
jecxz
out
sub
mov
sub
and
push
sahf
sbb
inc
fs
mov
ficom
jg
dec
int
xor
sub
push
scas
push
sub
movs
xchg
addps
inc
pminsw
inc
inc
fadd
push
mov
imul
xor
clc
rcr
jo
sub
fucomip
bound
data16
outs
das
imul
dec
(bad)
ds
and
mov
add
inc
jmp
lock
fdivr
mov
adc
or
cs
aad
jns
dec
mov
jns
dec
xlat
pop
xor
and
mov
jno
push
mov
push
jge
jnp
dec
push
adc
rcl
mov
xchg
mov
push
jmp
shl
push
push
dec
rsm
dec
jp
fnstcw
xor
sub
xchg
ror
inc
aam
and
xchg
xchg
xchg
jno
dec
mov
mov
repz
cmc
push
in
mov
xor
mov
sahf
cli
or
out
les
gs
mov
rcl
push
test
fstp
stc
out
pop
add
sub
cmp
imul
adc
das
aaa
(bad)
es
stos
inc
push
icebp
gs
jp
les
jp
(bad)
movs
sub
pop
cmp
push
sub
lahf
retf
jne
imul
rcr
test
ins
pushf
sbb
push
out
sbb
adc
sub
leave
mov
cmc
mov
jmp
jp
cmp
mul
out
cdq
pop
movs
test
pop
(bad)
scas
in
sub
inc
xor
sbb
fs
inc
cmp
scas
pop
or
xchg
jae
mov
jecxz
xor
(bad)
jno
ret
and
in
addr16
in
push
gs
mov
mov
mov
cs
xchg
jbe
pop
(bad)
sub
mov
in
arpl
(bad)
push
imul
mov
pop
outs
xchg
iret
test
mov
sti
pop
shr
ror
push
ins
(bad)
into
jp
fwait
mov
jmp
inc
loopne
lahf
aas
sar
mov
jecxz
rcr
cmps
and
jmp
mov
rol
test
add
dec
jge
(bad)
je
in
push
and
inc
popa
and
test
pop
lods
gs
mov
or
sub
xchg
add
jns
fisttp
mov
pop
in
dec
in
cli
push
test
jmp
mul
dec
mov
imul
or
mov
scas
dec
sub
mov
shr
mov
enter
lods
repz
outs
mov
add
sbb
lods
test
cmps
sub
out
jne
jle
gs
sbb
add
and
neg
sbb
iret
jmp
scas
mov
pop
sti
stc
fld
addr16
xchg
push
xor
sti
aam
fcom
std
mov
dec
jmp
pop
or
inc
sub
jmp
mov
xchg
ret
adc
(bad)
push
or
cmp
xor
dec
(bad)
enter
sbb
xlat
lods
mov
test
xchg
ins
xor
sbb
fldenv
ror
popa
xchg
in
neg
cmc
ret
sti
adc
and
pop
lods
adc
repnz
inc
dec
enter
je
sbb
mov
setle
xchg
push
add
mov
xor
jns
jle
sti
and
in
test
jns
(bad)
mov
inc
jnp
into
adc
mov
movs
(bad)
nop
std
xchg
mov
outs
pop
fld
xchg
cmp
scas
ins
xor
pop
fadd
or
scas
pop
inc
fmul
mov
jne
lea
xor
jne
xchg
jmp
pop
ds
ins
lods
icebp
js
pop
in
sar
cs
scas
inc
mov
sti
cli
pop
mov
imul
inc
mov
sti
mov
inc
loope
repz
mov
sub
xor
lea
adc
dec
mov
repz
lods
cmp
test
iret
pushf
mov
leave
fadd
test
popf
in
add
xchg
ins
inc
xor
popf
arpl
aam
aad
adc
das
jae
and
inc
xchg
ja
les
std
mov
mov
xor
popf
iret
cmps
rcl
and
std
sub
je
retf
dec
div
sbb
sub
pop
scas
dec
xchg
mov
out
pusha
inc
sub
pop
not
add
addr16
js
daa
sub
mov
and
aas
out
out
jl
sub
mov
xchg
dec
inc
ret
adc
or
pop
imul
push
(bad)
or
mov
imul
aas
jecxz
xor
inc
cwde
jo
xchg
retf
and
pop
pop
mov
push
add
rcl
popf
or
scas
loope
push
movs
fisubr
leave
jl
daa
gs
mov
mov
cmp
jae
addr16
sbb
mov
enter
into
and
test
dec
push
jp
mov
(bad)
retf
daa
add
or
(bad)
xchg
dec
cmp
adc
icebp
dec
mov
xlat
inc
mov
pop
loopne
clc
dec
jne
clc
cmps
and
ins
pushf
ss
repnz
dec
sbb
inc
aas
inc
inc
imul
ret
cmp
xlat
push
or
repz
mul
mov
mov
sti
dec
lods
(bad)
fidivr
fwait
mov
ret
pop
in
inc
loopne
out
lods
repz
sti
jmp
repz
or
out
or
jae
shr
in
pop
in
mov
or
loope
dec
scas
jle
adc
cmp
cs
daa
test
jmp
pop
movs
repz
mov
arpl
pusha
mov
(bad)
adc
and
int
jae
mov
add
cs
arpl
push
dec
or
pop
and
adc
pop
(bad)
jle
rcl
bound
mov
xor
sbb
retf
hlt
adc
pop
data16
inc
jmp
dec
push
pop
lods
jmp
jp
sbb
cld
in
outs
adc
outs
sbb
mov
fisub
pop
cmps
or
mov
adc
dec
dec
popa
js
pop
sbb
icebp
mov
sahf
in
cmp
les
sbb
cli
fwait
push
(bad)
push
test
adc
jle
or
push
retf
sub
sti
stos
fld
cli
cld
mov
repnz
sbb
adc
out
test
stos
mov
fidivr
mov
adc
bound
jo
out
cmp
leave
pop
add
sub
cwde
rcl
fbstp
pop
imul
clc
rcl
xchg
push
cmp
push
call
pop
mov
adc
jbe
ins
xor
dec
sub
fwait
in
scas
mov
and
and
xchg
sub
movs
xor
out
jns
pushf
pop
jns
test
mov
sti
icebp
xor
sbb
int3
movs
outs
cmp
lahf
or
ret
mov
jge
jle
sub
sbb
adc
aaa
adc
inc
pop
fbld
jns
(bad)
fidiv
mov
ret
icebp
retf
xchg
movs
pop
stos
add
sub
jl
cmp
push
jno
out
pop
cli
cmp
add
scas
sbb
xchg
(bad)
lock
push
and
test
push
pop
mov
adc
cwde
jp
and
inc
mov
pop
fild
inc
test
xchg
mov
es
dec
jl
int
xor
mov
jecxz
adc
mov
pop
cld
dec
lods
sahf
lahf
scas
or
ror
fld
cmp
xchg
loop
inc
cwde
sbb
adc
dec
imul
pop
sbb
push
xor
psubusb
jb
xor
rol
icebp
fbstp
aam
cwde
sti
xor
add
cmp
retf
cmps
stos
xor
sti
dec
lods
les
addr16
jge
sub
das
outs
adc
push
ret
adc
pusha
sbb
adc
jge
into
leave
mov
mov
lds
inc
push
mov
inc
adc
xchg
enter
and
xchg
pop
aaa
loop
push
(bad)
mov
shr
ins
js
cmp
in
sbb
std
cmc
sbb
je
sbb
sub
mov
inc
sar
aaa
push
jg
out
cwde
int3
cmp
imul
mov
xor
jmp
jmp
sbb
cmp
int
add
mov
(bad)
call
scas
mov
fadd
add
push
inc
sbb
add
daa
adc
xor
xor
es
inc
xor
into
push
cmp
das
push
jmp
push
inc
les
rol
mov
mov
push
pop
hlt
sub
jg
lock
aad
fidivr
inc
adc
retf
mov
or
xor
jp
ret
mov
cmp
cmc
sbb
sub
sbb
jmp
fimul
sahf
jns
mov
stc
mov
dec
sub
loop
aad
sub
dec
pop
or
movs
adc
js
jns
stc
rol
arpl
xor
xchg
adc
lods
stos
push
xchg
sub
dec
push
int
(bad)
neg
dec
retfw
out
int
fcomp
outs
push
imul
sbb
fistp
push
es
fdiv
fsub
add
lahf
ds
aas
or
or
xchg
mov
push
scas
sub
and
adc
call
pop
js
sub
xor
out
jmp
pop
adc
or
mov
xchg
cmp
fucomp
pop
push
leave
lods
adc
push
push
adc
cld
test
sar
es
gs
inc
(bad)
xlat
push
xor
inc
jge
mov
(bad)
scas
into
mov
mov
stos
(bad)
xchg
mov
xchg
call
cmp
xchg
jne
pop
cmc
mov
popf
push
gs
pop
hlt
mov
sub
(bad)
mov
repz
cmps
(bad)
(bad)
stos
stc
xlat
bswap
push
add
es
outs
jp
loope
mov
dec
popa
push
aas
add
aam
adc
les
cli
mov
adc
pop
mov
sub
push
cdq
scas
sbb
stc
cs
daa
(bad)
push
cmps
(bad)
pop
hlt
mov
lods
test
sbb
sbb
cmps
rcl
cmp
dec
dec
xor
hlt
fninit
jl
mov
lods
mov
push
test
data16
fist
cmc
push
push
mov
push
inc
push
mov
mov
mov
xchg
repnz
or
xor
xchg
push
sbb
push
or
cmp
mov
sub
ss
push
mov
push
(bad)
sbb
mov
mov
stos
mov
dec
cwde
hlt
jge
in
and
fistp
xchg
out
adc
mov
and
add
scas
and
mov
mov
sahf
loope
ds
and
mov
pop
xor
ss
adc
nop
sbb
or
in
mov
ficomp
inc
jge
stc
ins
dec
mov
push
pop
neg
jbe
int3
xchg
fistp
sub
jmp
outs
adc
sub
mov
sbb
cs
arpl
loop
stos
(bad)
jb
mov
mov
and
clc
nop
mov
jns
les
dec
pop
push
inc
mov
mov
dec
jmp
cmp
pop
xor
(bad)
and
rcr
pop
leave
jmp
push
fimul
call
test
aaa
dec
rcr
cmp
and
int3
pusha
cmp
and
ins
fs
jl
ret
aaa
and
test
dec
cmp
lock
push
pop
cs
(bad)
pop
push
out
and
mov
xchg
stos
jnp
clc
xchg
dec
xchg
add
pop
out
inc
jp
(bad)
aaa
mov
jmp
dec
loop
pop
pushf
scas
adc
pop
jb
sub
into
jne
das
and
sub
bound
mov
xor
fcompp
push
std
cwde
ja
mov
jnp
stos
dec
shr
mov
(bad)
mov
call
mov
or
dec
pop
mov
adc
mov
xor
div
jmp
test
lds
inc
push
and
test
or
push
les
mov
clc
jae
scas
sub
push
fsub
repz
xchg
enter
sbb
mov
jl
or
into
enter
inc
daa
inc
ja
call
xchg
retf
rcr
movs
fcomip
enter
popa
out
inc
movs
push
mov
sub
stos
repnz
push
inc
push
adc
pop
(bad)
scas
loop
or
xor
addr16
push
dec
jns
xchg
jge
in
lods
sbb
xchg
xor
dec
and
jb
dec
ins
test
movs
sbb
adc
fsub
xchg
in
dec
jnp
mov
or
push
xor
out
fs
push
jnp
stos
inc
mov
repz
mov
jmp
imul
in
scas
inc
repz
ret
imul
popa
jo
inc
fs
inc
xor
aam
or
stos
ss
stc
cs
mov
or
push
bound
sbb
cs
ds
sbb
xor
loopne
fcomp
or
xchg
add
push
outs
mov
int3
mov
add
add
mov
daa
add
jp
sbb
add
jmp
test
fucomp
cmp
add
jae
dec
mov
lods
mov
call
outs
mov
jbe
cdq
pop
aaa
cmps
adc
dec
gs
add
les
jb
js
aaa
retf
and
dec
pop
mov
scas
lods
push
push
fwait
(bad)
ds
mov
sub
and
sub
je
or
in
add
inc
test
sbb
mov
and
jg
loopne
xchg
ja
outs
xor
test
pop
mov
mov
adc
jno
pop
add
cmp
mov
xor
sbb
push
mov
mov
adc
or
rol
stc
fisub
(bad)
and
add
adc
adc
rcl
sbb
pop
push
cs
sub
or
aam
stos
loop
iretw
cmp
stc
int3
leave
mov
(bad)
xor
in
jo
xchg
push
push
inc
aaa
xchg
(bad)
out
and
jmp
xchg
ins
stos
xchg
jp
cmps
out
movs
dec
clc
mov
movs
aas
sti
jp
jmp
icebp
in
mov
hlt
shl
test
xor
movs
cwde
push
pop
(bad)
rcl
(bad)
pop
clc
mov
adc
loope
adc
out
call
jecxz
mov
xor
std
mov
data16
mov
and
imul
cli
aam
xor
lods
fs
mov
retf
and
je
sub
aaa
mov
in
out
dec
inc
jl
gs
mov
shl
mov
dec
out
xchg
xchg
xor
retf
push
push
daa
jbe
xchg
jle
xor
xor
dec
inc
adc
popf
aas
pusha
sbb
shl
and
inc
mov
test
push
test
into
mov
in
stc
mov
inc
gs
outs
dec
inc
cwde
jae
mov
loop
or
xchg
inc
int3
stos
dec
(bad)
sbb
sub
push
xor
cmp
in
(bad)
ins
push
xor
pop
xor
ins
dec
movs
lods
push
repz
(bad)
mov
fcmove
mov
out
sbb
adc
mov
jno
loop
mov
mov
xchg
inc
xor
mov
movs
mov
out
adc
jmp
xchg
and
and
sub
push
sbb
test
(bad)
mov
repnz
lods
add
mov
dec
mov
push
les
fld
mov
clc
cmc
mov
pop
pop
aaa
mov
and
mov
dec
std
mov
in
sub
mul
xor
pop
bound
dec
cld
and
loop
call
shl
fsubp
add
mov
out
fwait
cdq
loope
and
and
iret
test
es
div
pushf
icebp
in
cmp
aaa
icebp
add
mov
xor
xchg
sbb
dec
pop
(bad)
mov
push
loopne
or
cdq
jo
movs
pushf
cmp
cmp
push
ss
ret
repz
loopne
mov
scas
outs
or
inc
add
fmul
call
push
scas
(bad)
sub
xchg
scas
shl
(bad)
inc
mov
ror
loopne
test
or
arpl
mov
mov
mov
mov
dec
sbb
icebp
enter
and
pushf
je
je
mov
jecxz
mov
aas
sub
dec
push
xchg
push
add
inc
dec
lahf
ja
je
jmp
into
stos
das
push
mov
xchg
mov
jns
or
push
mov
cmp
rcl
mov
mov
sbb
fistp
xchg
add
inc
hlt
or
fisubr
jmp
mov
nop
jge
jmp
loopne
pop
jo
ds
cmp
pop
shr
jmp
scas
add
lods
(bad)
clc
and
mov
and
and
pusha
push
sub
mov
mov
cs
mov
mov
jmp
dec
fsqrt
mov
jae
jp
pop
mul
adc
mov
jmp
mul
ss
jg
push
(bad)
icebp
arpl
fadd
xor
shl
push
mov
stc
jno
and
dec
sub
cmc
dec
xor
dec
js
mov
inc
adc
pop
sti
cmp
mov
in
mov
sbb
sti
push
adc
xchg
dec
in
push
enter
push
scas
jmp
dec
arpl
cmp
pusha
cmp
mov
mov
pop
pop
es
aam
xor
push
add
test
call
xchg
push
xlat
inc
clc
sar
or
or
lods
ror
lock
xchg
gs
ja
retf
in
mov
jg
inc
mov
jmp
nop
inc
push
xor
or
xchg
outs
cmps
pop
xchg
aam
inc
jo
mul
fidivr
and
push
js
inc
sbb
cdq
jle
pop
hlt
and
loop
pop
ins
inc
jge
and
das
test
dec
push
push
mov
(bad)
(bad)
in
pop
mov
ds
shr
fmul
clc
retf
es
lea
or
mov
and
cmp
cmp
ins
stos
popf
les
repz
cmp
data16
stos
into
sbb
repnz
repnz
add
aas
jne
rcl
das
push
xor
inc
mov
(bad)
jmp
sbb
int3
aad
mov
loop
aad
call
or
shl
aad
mov
stos
pusha
test
int3
jl
jmp
inc
(bad)
cwde
jmp
mov
and
aad
bound
mov
inc
stos
icebp
out
loopne
imul
push
or
jnp
mov
out
mov
mov
dec
jl
mov
inc
xor
jmp
mov
dec
mov
out
aam
idiv
inc
call
ja
push
xor
loop
mov
sti
jmp
imul
inc
in
outs
add
loop
in
xchg
xor
out
jmp
inc
movs
sti
out
cmp
ins
inc
mov
es
inc
add
out
(bad)
and
xlat
out
mov
adc
jno
int3
pop
lods
cmp
(bad)
pop
jl
pop
inc
jmp
inc
pcmpgtw
mov
xlat
cmp
enter
cld
inc
add
in
shr
(bad)
je
lea
jb
loop
mov
pop
mov
mov
repnz
push
hlt
into
cmc
sti
ja
inc
push
pushf
xor
push
xor
(bad)
adc
cwde
cdq
aad
sbb
and
push
sbb
sbb
int
jns
cmp
mov
sbb
sbb
mov
inc
mov
les
and
popa
out
cmp
jl
lds
xor
mov
dec
xor
lock
daa
pop
retf
mov
mov
inc
mov
mov
mov
adc
out
xchg
scas
or
nop
imul
mov
or
or
les
iret
lds
mov
jae
pop
clc
pop
jp
imul
ins
add
jecxz
pushf
movs
push
cmp
(bad)
hlt
xor
mov
mov
dec
imul
ja
es
sbb
jns
fisub
sub
es
xchg
fild
mov
jl
sub
mov
jne
adc
add
imul
dec
mov
jmp
imul
movs
mov
shl
sub
out
imul
test
imul
hlt
or
int3
push
daa
mov
dec
and
leave
jmp
ins
xor
repz
cs
inc
fs
cmp
push
hlt
jmp
jb
mov
cmp
retf
add
leave
js
sub
aad
or
add
sub
sbb
(bad)
jle
dec
inc
iret
jne
ror
pop
xchg
or
mov
retf
pop
cwde
lea
xchg
clc
in
repnz
cmp
jno
jle
jp
xchg
scas
fsubr
mov
in
or
dec
(bad)
movs
rcl
jne
aaa
mov
loope
add
add
mov
pop
push
sub
popa
mov
dec
mov
icebp
mov
stc
in
lock
fimul
and
sbb
test
outs
adc
ins
mov
rcl
clc
xchg
fcomp
cmp
mov
(bad)
and
pop
fimul
sbb
sub
xor
out
call
outs
dec
imul
pusha
sub
inc
mov
fcomp
cmp
(bad)
scas
pop
sbb
imul
pop
and
push
pop
dec
cld
imul
xor
sbb
nop
or
fs
adc
pop
loop
and
xchg
and
xchg
and
or
jl
xor
jp
push
mov
scas
and
adc
stc
dec
jmp
inc
loopne
cli
dec
test
loop
test
jmp
repz
add
repnz
inc
movs
xor
das
out
out
inc
mov
repz
test
cs
pop
xchg
aam
push
dec
test
xor
push
mov
mov
mov
mov
cmp
jo
xor
test
xchg
cmp
sbb
push
ins
sti
stc
mov
lds
in
dec
adc
push
test
push
or
inc
stos
pop
push
inc
mov
or
inc
je
data16
sbb
adc
int
dec
inc
in
pop
push
shl
cld
and
mov
rcl
jle
in
cld
push
pusha
loope
imul
lods
rol
sahf
dec
mov
mov
bound
sub
lea
lock
rol
leave
cmp
daa
imul
mov
out
pop
jmp
add
stc
das
in
test
outs
fsubr
ins
in
pushf
xchg
push
pop
cs
sbb
es
cmp
xchg
in
mov
add
ja
xor
outs
out
rcl
out
mov
jnp
nop
ss
push
into
xor
cli
inc
mov
loopne
adc
xchg
xlat
xchg
ret
das
push
dec
sub
jecxz
jle
shl
xchg
movs
pminsw
fist
and
mov
ret
mov
movs
wrmsr
mov
sbb
fld
sub
imul
clc
or
jmp
adc
popf
mov
das
hlt
xchg
adc
out
and
loope
mov
and
dec
out
in
mov
push
sbb
scas
pop
mov
sbb
pop
jp
pushaw
lods
lods
dec
aas
retf
xlat
cmp
loop
mov
xor
lahf
pop
sub
dec
call
scas
or
jge
(bad)
mov
ss
js
hlt
jmp
pop
inc
xor
pop
scas
or
hlt
xchg
mov
test
mov
imul
test
sar
mov
mov
cmp
arpl
jbe
retf
loop
into
xchg
xlat
in
jecxz
cmp
jo
mov
mov
xor
sbb
in
and
cdq
lea
sub
cmp
shl
push
jle
xchg
(bad)
out
xlat
and
adc
call
xchg
out
cs
adc
dec
inc
aad
add
or
jle
jmp
and
es
fadd
lock
jns
stos
in
iret
jmp
jo
aaa
rol
ss
shr
sbb
dec
mov
adc
das
jbe
jnp
jns
or
inc
jge
pop
mov
mov
cmp
jns
and
mov
addr16
mov
bound
sbb
inc
fwait
test
cmp
pop
xchg
or
call
lahf
jnp
cmp
mov
stos
adc
pop
(bad)
mov
fiadd
mov
mov
add
or
pop
scas
cs
je
or
mov
ret
ins
fwait
aam
mov
cli
ret
xchg
pop
inc
stc
bound
xor
pop
inc
mov
mov
push
mov
mov
pushf
aad
sbb
jns
into
xor
jp
repz
or
dec
sub
sbb
scas
push
ds
popa
int
jecxz
xchg
mov
jp
icebp
clc
push
loope
or
push
xchg
inc
test
addr16
loopne
adc
mov
ret
pop
aaa
or
rcr
sbb
pop
dec
mov
aaa
imul
or
xor
sub
dec
clc
jg
dec
out
sbb
clc
mov
jle
inc
mov
mov
mov
fldcw
cmps
loope
xchg
sti
push
rol
mov
ficomp
sar
dec
sub
loop
mov
cmp
arpl
lods
leave
xlat
adc
mov
pop
cli
dec
xchg
retf
jmp
adc
prefetch
or
jl
aaa
add
jecxz
ds
clc
pop
cmp
dec
adc
xor
repz
mov
test
and
inc
aaa
hlt
mov
int3
pop
cmps
push
addr16
cmps
push
xchg
sub
jo
cmp
cwde
lds
aad
push
push
retw
jns
fdiv
fisttp
jns
inc
and
retf
in
(bad)
pop
dec
push
cmc
sub
xor
cdq
cmp
lea
out
push
leave
jg
sub
dec
rcl
ss
xchg
pop
dec
in
xor
adc
mov
mov
sub
xor
out
mov
sbb
mov
xor
dec
aam
and
cmps
fistp
mov
arpl
ss
mov
hlt
test
sbb
cld
shr
fidivr
mov
test
ffreep
jne
in
jns
in
pop
pop
je
jns
pushf
addr16
cmp
popf
jo
add
inc
jecxz
adc
mov
daa
stos
ds
fndisi(8087
test
fistp
dec
ins
cld
or
in
push
int
rcr
mov
lahf
add
push
sti
sar
xchg
xchg
shl
xchg
gs
ins
int
nop
aaa
pop
sbb
hlt
in
shl
test
daa
pop
pusha
push
cld
jns
rol
addr16
fcomi
mov
retf
pop
jmp
test
ret
inc
mov
mov
jge
fmulp
or
call
fsub
dec
inc
xchg
jmp
mov
mov
inc
in
mul
in
dec
push
imul
xchg
ins
mov
cli
xchg
xor
ja
pop
xor
in
call
sti
dec
mov
dec
mov
dec
xlat
push
out
enter
mov
mov
sbb
jb
adc
xchg
bound
dec
xor
push
inc
jnp
cmp
es
hlt
nop
jns
movs
pop
in
cmp
push
jno
(bad)
neg
jno
mov
ja
jecxz
(bad)
cmps
daa
aam
bound
mov
inc
xchg
or
xchg
adc
lock
adc
xlat
mov
pusha
jnp
dec
mov
hlt
add
inc
out
xchg
jge
(bad)
daa
inc
cmp
int3
dec
repnz
cmp
cli
sub
into
jae
inc
cmp
jp
pop
xor
mov
loope
lea
xchg
push
mov
mov
stos
and
aad
adc
adc
fistp
dec
inc
repnz
mov
outs
out
cdq
jl
les
shl
loopne
adc
movs
dec
or
sub
mov
sub
xor
push
ret
inc
neg
ret
in
call
lds
stos
imul
sahf
pop
and
(bad)
hlt
jg
push
or
fmul
jmp
cdq
fcom
inc
cmps
xchg
icebp
lock
in
iretw
jl
sbb
ret
inc
jno
fimul
aaa
jge
push
add
test
pop
adc
adc
sbb
fnstsw
cmps
sub
inc
mov
mov
int3
loop
and
inc
and
das
pushf
adc
sbb
in
inc
dec
int3
xlat
mov
dec
push
and
xchg
sub
mov
test
pop
mov
stos
jg
mov
in
out
imul
mov
sbb
cmp
gs
cmp
push
pop
add
aam
pop
ror
idiv
or
push
xchg
in
jae
enter
sbb
pop
xor
in
(bad)
sbb
mov
clc
gs
loop
push
test
inc
leave
pop
je
(bad)
stos
test
jne
(bad)
fist
cld
add
mov
sbb
sbb
ss
mov
jmp
fcomp
(bad)
jns
iret
dec
mov
popa
push
cmp
jl
mov
cmp
shr
mov
gs
dec
lea
pop
call
ret
mov
inc
test
jmp
xlat
jmp
dec
mov
jmp
push
lods
sti
cli
push
lods
sti
(bad)
push
and
pop
mov
retf
out
fisubr
mov
jo
mov
mov
mov
fidivr
mov
mov
inc
lock
push
lods
repnz
push
mov
(bad)
pusha
test
(bad)
jo
ret
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
push
dec
repz
retf
mov
dec
fdivr
jmp
repz
inc
movs
or
inc
clc
imul
inc
movs
imul
inc
mov
imul
push
mov
or
inc
cld
repz
imul
inc
mov
not
das
stos
out
inc
mov
(bad)
jmp
sbb
inc
int3
imul
inc
mov
imul
inc
mov
imul
inc
mov
test
inc
mov
imul
inc
mov
imul
inc
mov
test
js
jmp
imul
inc
mov
imul
inc
mov
test
and
jmp
imul
inc
mov
imul
inc
mov
not
inc
mov
repz
imul
push
mov
mov
jmp
inc
movs
repz
sub
push
sub
call
and
push
sub
call
and
push
sub
call
and
push
sub
call
and
push
sub
call
and
push
sub
call
and
push
sub
call
and
push
ret
jo
adc
out
mov
cwde
pop
hlt
push
fld
sub
inc
push
cmp
loopne
aad
sub
cdq
pop
or
xchg
pop
dec
pop
sub
xlat
(bad)
je
dec
daa
mov
dec
icebp
icebp
xor
jns
and
(bad)
sub
xchg
int
stos
repnz
dec
add
shl
jg
imul
xor
in
cdq
xchg
pop
dec
pop
sub
xlat
(bad)
je
dec
daa
mov
dec
icebp
icebp
xor
jns
and
(bad)
sub
xchg
int
stos
repnz
dec
add
shl
jg
imul
xor
in
lea
or
inc
aam
jmp
repz
imul
dec
mov
cmps
and
lods
jae
fs
pushf
out
inc
movs
sti
cli
and
outs
mov
fs
call
icebp
loop
and
retf
test
jecxz
cmps
lds
push
add
xlat
or
jbe
push
pusha
(bad)
cli
sbb
dec
in
test
pop
std
dec
stos
jno
fs
call
icebp
loop
and
retf
test
jecxz
cmps
lds
push
add
xlat
or
jbe
push
pusha
(bad)
cli
sbb
dec
in
test
pop
std
dec
stos
jno
fs
call
icebp
out
add
loopne
mov
mov
mov
push
movs
out
dec
mov
ja
mov
loopne
loope
and
fidiv
mul
(bad)
ins
add
jecxz
ret
push
repnz
outs
imul
xchg
sub
cli
movs
dec
shl
mov
loopne
loope
and
fidiv
mul
(bad)
ins
add
jecxz
ret
push
repnz
outs
imul
xchg
sub
cli
movs
dec
shl
mov
loopne
loope
and
fcmovu
(bad)
(bad)
sbb
pop
in
dec
in
jmp
imul
inc
mov
repz
or
test
or
inc
xor
call
rcl
and
push
and
out
repz
call
cmc
cli
and
add
fsub
cmp
and
push
pop
out
bound
fsubr
shl
sahf
mov
jne
mov
dec
aas
dec
imul
mov
(bad)
mov
pop
sub
into
inc
lods
aam
cmp
imul
repz
call
cmc
cli
and
add
fsub
cmp
and
push
pop
out
bound
fsubr
shl
sahf
mov
jne
mov
dec
aas
dec
imul
mov
(bad)
mov
pop
sub
into
inc
lods
aam
cmp
imul
repz
call
sub
stos
enter
sbb
sti
ins
leave
xor
mov
aas
or
fxch
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jb
mov
(bad)
pushf
js
xor
cmp
jbe
mov
adc
leave
pop
push
sub
inc
mov
repz
repz
mul
nop
mov
mov
or
mov
and
jmp
pop
movs
repz
jno
inc
pop
test
aad
mov
cdq
push
add
cmp
popa
jp
jge
addr16
or
adc
call
lods
inc
aam
sub
adc
retf
imul
push
and
mov
xor
jo
rdmsr
xor
jecxz
inc
mov
lds
pop
lea
(bad)
int3
mov
fistp
push
addr16
ins
xlat
jp
sbb
fidivr
add
cmp
popa
jp
jge
addr16
or
adc
call
lods
inc
aam
sub
adc
retf
imul
push
and
mov
xor
jo
rdmsr
xor
jecxz
inc
mov
lds
pop
lea
(bad)
int3
mov
fistp
push
addr16
ins
xlat
jp
sbb
fidivr
add
cmp
popa
jp
jge
addr16
or
adc
push
call
cli
in
inc
xor
mov
(bad)
and
mov
pop
fist
sti
outs
push
sbb
mul
adc
jns
jl
push
mov
mov
pop
pop
repz
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
lock
les
jnp
lock
mov
test
mov
jmp
xor
in
inc
loopne
out
inc
movs
repz
imul
xchg
mov
das
and
out
inc
mov
repz
jmp
sub
(bad)
add
jle
lea
mov
and
fidiv
imul
(bad)
int
gs
mov
js
adc
mov
sar
in
(bad)
in
mov
sub
xor
mov
jmp
popa
(bad)
int
gs
mov
js
adc
mov
sar
in
(bad)
in
mov
sub
adc
paddusw
mov
pop
hlt
fbstp
mov
push
xor
xchg
cwde
jo
(bad)
cmp
iret
sub
(bad)
mov
test
adc
jo
(bad)
cmp
iret
sub
(bad)
mov
test
adc
adc
mov
push
inc
pop
or
inc
nop
sti
out
test
stos
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
aad
mov
mov
aad
mov
mov
mov
mov
mov
aad
mov
mov
aad
mov
int3
aad
mov
mov
aad
mov
mov
jns
mov
loop
in
loop
movs
imul
inc
movs
imul
inc
mov
imul
gs
inc
pusha
or
inc
xor
shl
or
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
int3
push
jg
aam
jae
call
(bad)
jl
cmp
adc
fwait
sub
push
or
jge
sahf
retf
xor
fwait
sub
push
or
jge
sahf
retf
xor
fwait
sub
push
or
jge
sahf
retf
xor
fwait
sub
push
or
jge
sahf
retf
xor
fwait
sub
push
or
jge
sahf
retf
xor
fwait
sub
push
or
jge
sahf
retf
xor
fwait
sub
push
or
jge
sahf
retf
xor
fwait
sub
push
or
jge
sahf
retf
xor
fwait
sub
push
or
jge
sahf
retf
xor
mov
adc
inc
pop
or
dec
fdiv
jmp
imul
inc
mov
mov
and
add
rep
les
mov
jg
mov
bound
pop
mov
bound
pop
mov
bound
pop
mov
bound
pop
mov
bound
pop
mov
bound
pop
mov
bound
pop
mov
bound
pop
mov
bound
dec
xor
xchg
mov
add
mov
pop
gs
jnp
out
ins
fcomp
in
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
sbb
push
pop
iretw
push
cmps
in
pop
cmp
inc
pop
or
inc
enter
mov
imul
inc
mov
imul
and
add
rep
cwde
movs
or
imul
mov
push
ds
sbb
inc
sbb
pop
scas
sbb
pop
add
or
sbb
inc
sbb
pop
scas
sbb
pop
add
or
mov
xor
mov
inc
cmp
mov
jmp
(bad)
xor
and
rcl
push
xor
test
imul
mov
push
jle
xor
and
rcl
push
xor
test
imul
mov
push
jle
xor
mov
sbb
(bad)
daa
mov
and
repz
mov
repz
test
lods
mul
dec
test
out
lods
sti
out
mov
(bad)
push
mov
(bad)
ins
mov
repnz
ffreep
push
xchg
iret
scas
jl
iret
stos
sbb
(bad)
je
mov
mov
sub
cmps
out
dec
mov
out
push
mov
fisubr
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
fs
call
inc
lods
repz
dec
test
push
push
out
jmp
repz
imul
inc
mov
repz
mov
in
dec
movs
repz
imul
inc
mov
idiv
mov
enter
movs
imul
inc
lods
mov
inc
movs
pop
jmp
imul
inc
mov
test
sub
outs
or
aas
outs
xchg
jmp
cmps
cmps
loop
iret
ror
mov
xchg
sbb
bnd
jmp
jmp
mov
cmp
repz
and
dec
test
cmp
hlt
push
inc
cmc
push
fs
test
aam
mov
ss
test
or
js
xor
jl
push
xor
out
mov
in
aas
mov
iret
push
imul
sub
pop
add
ss
jp
or
mov
hlt
sub
jmp
mov
in
push
add
mov
mov
inc
or
fwait
adc
stc
mov
test
fsubr
cmp
inc
int
push
pop
mov
cmp
sbb
pusha
sbb
fild
(bad)
push
mov
mov
in
popf
mov
push
or
ins
or
add
pop
cmp
fsubr
addr16
add
cs
fmul
jle
mov
mov
mov
fstp
call
ret
cmc
jg
icebp
call
leave
cmp
outs
dec
xor
xchg
loop
jmp
mov
int3
lods
adc
fidivr
aad
pop
fucompp
mov
pop
sbb
sub
mov
(bad)
callw
das
pushf
push
push
movs
xor
imul
popa
jns
sub
sbb
inc
jo
(bad)
jnp
xchg
xor
fstp
jbe
std
push
test
(bad)
push
or
pushf
jmp
lahf
xor
pop
push
mov
push
push
inc
(bad)
mov
push
sub
jmp
not
xor
jl
fstp
or
inc
jmp
inc
mov
lods
test
xor
jmp
repz
push
adc
inc
cmp
jmp
imul
inc
mov
imul
inc
mov
or
inc
pusha
mov
dec
mov
loop
mov
jmp
idiv
inc
test
mov
adc
jg
adc
aaa
out
dec
ins
mul
mov
mov
inc
enter
movs
imul
lock
xor
add
out
hlt
or
test
call
mov
outs
ja
adc
scas
bound
jp
ss
pusha
jnp
les
je
adc
push
jnp
div
mov
leave
inc
mov
lods
and
imul
mov
mov
retf
ret
js
xlat
xchg
xchg
push
cmp
int
lahf
ror
mov
dec
outs
push
xchg
call
imul
test
jno
lock
xlat
push
aad
push
fwait
add
iret
dec
mov
inc
jg
icebp
das
and
xchg
retf
cmp
enter
call
fdivr
jns
or
mov
mov
add
std
nop
push
pushf
scas
xor
fist
pop
mov
jge
dec
cmp
xor
dec
hlt
cmp
jecxz
push
dec
xor
call
in
in
js
clc
clc
(bad)
(bad)
xchg
push
int3
(bad)
leave
gs
add
loopne
cli
push
ss
push
pop
jle
clc
jmp
es
cwde
sub
ror
jnp
movs
mov
add
movs
ds
fs
cli
mov
mov
mov
dec
in
xor
mov
imul
popf
dec
fwait
jmp
mov
repz
and
js
push
jns
das
sub
outs
jecxz
movs
call
push
xchg
out
leave
dec
push
jns
and
jne
pop
cli
fiadd
call
mov
out
lods
mov
push
push
popf
adc
lock
arpl
int3
retf
dec
pop
xchg
dec
pop
jmp
(bad)
mul
test
stos
xchg
leave
imul
xchg
push
es
ins
out
lahf
xchg
inc
jp
clc
or
jmp
mov
fwait
sbb
pop
fnstenv
fsubr
test
inc
leave
cdq
jo
sub
je
mov
push
addr16
pop
repnz
xchg
sbb
std
fadd
jmp
pushf
add
sub
adc
sbb
ins
loop
mov
push
aas
pop
outs
(bad)
or
cmp
fsub
mov
xor
mov
push
cs
jmp
add
xor
adc
(bad)
fs
std
cwde
mov
ds
(bad)
xlat
fsub
imul
int
mov
cmp
xlat
push
mov
movs
inc
xor
inc
cs
mov
pop
add
repz
push
test
jmp
mul
add
sub
out
add
jle
inc
in
out
xor
lods
cmps
or
pusha
push
mov
mov
mov
add
pop
outs
test
mov
cdq
stos
mov
out
mov
push
jns
aam
outs
sub
sbb
lock
dec
out
adc
(bad)
out
inc
iret
pushf
adc
ja
jmp
fsub
mov
xor
cdq
std
(bad)
add
sbb
loop
mov
lods
xor
adc
adc
loop
xchg
add
pop
stos
sbb
je
hlt
xchg
aas
fldenv
adc
loop
in
xor
outs
xor
or
outs
adc
js
retf
mov
outs
shl
xchg
mov
mov
scas
and
jae
test
jmp
(bad)
rcr
or
jg
sbb
or
cdq
fisttp
movs
mov
and
neg
jl
sbb
test
or
sbb
aas
add
or
in
xor
clc
jg
or
inc
das
push
jns
test
push
fdivr
jo
push
jmp
lea
icebp
repnz
add
xor
cdq
sub
aam
or
cmps
out
inc
leave
imul
shl
inc
hlt
dec
push
aaa
ja
in
(bad)
push
mov
xor
or
xchg
leave
jl
pop
std
ja
fwait
out
fdivp
cmps
pop
scas
push
loop
push
push
adc
jmp
pop
popf
and
call
mov
rcl
sub
jb
pop
scas
pop
ins
jmp
inc
mov
dec
or
lock
clc
push
sbb
leave
(bad)
adc
mov
stos
adc
push
inc
sub
push
test
out
mov
jmp
mul
add
bound
mul
push
lock
cs
and
out
dec
mov
repz
clc
pop
hlt
and
or
or
shl
push
out
mov
dec
dec
loopne
out
out
mov
push
mov
test
cmp
leave
jp
and
enter
sub
push
adc
repnz
cmp
outs
out
add
xor
cs
xchg
popa
mov
push
mov
xor
pop
out
shr
xchg
sbb
and
imul
ins
xchg
jae
shr
push
add
add
add
fisttp
cmp
cmp
cld
mov
mov
xor
jnp
popf
and
xchg
jns
push
add
xchg
push
and
and
mov
sar
ret
shr
xchg
pop
ret
(bad)
fisub
xor
mov
sub
mov
(bad)
leave
addr16
adc
lods
(bad)
xrelease
push
pop
out
pop
mov
sbb
outs
retf
jb
cmp
sub
fild
pusha
lahf
sub
or
and
xchg
fdivrp
shl
neg
pop
jg
sub
dec
xor
push
leave
push
pushf
mov
sahf
outs
test
xchg
loope
pop
cmp
outs
iret
sbb
add
xchg
sbb
out
cdq
mov
jae
cmp
stos
push
push
mov
mov
sub
cmp
add
hlt
out
dec
mov
jecxz
inc
mov
mul
inc
movs
jmp
in
bound
(bad)
push
movs
movs
scas
ret
jmp
xor
push
imul
jmp
dec
aas
jp
mov
sub
jmp
push
pop
sbb
or
les
pop
movs
sti
jns
retf
add
loope
jg
test
pop
mov
fcomp
dec
(bad)
retf
retf
jl
jmp
or
mov
(bad)
lods
cmp
out
sub
int
mov
nop
push
adc
out
jae
sub
shl
ss
jl
ror
imul
xor
jns
in
add
mov
pop
sub
shl
out
jle
pop
enter
fldenv
popf
push
cmp
xor
jmp
ins
and
adc
nop
pop
sahf
jp
test
lea
jp
test
(bad)
cs
cmp
sar
in
push
push
mov
call
or
test
pop
cs
and
mov
jge
push
or
mul
(bad)
dec
add
sbb
or
mov
mov
mov
dec
push
mov
dec
mov
and
pop
(bad)
outs
sbb
cmp
push
lahf
cmp
pop
pop
xor
inc
push
jecxz
and
call
jmp
imul
xchg
add
or
std
add
iret
lds
and
sahf
retf
xchg
pop
push
xchg
push
xchg
fadd
inc
cmp
or
add
jns
adc
std
lahf
cmp
and
mov
add
mov
fbld
sub
fisttp
xchg
dec
sbb
mov
cmc
sub
xlat
jne
movs
jae
mov
leave
add
gs
fisub
xchg
ds
js
ins
sbb
stos
pop
push
sbb
push
jb
jae
adc
aad
mov
cmp
xadd
arpl
jmp
sbb
adc
inc
sbb
lahf
sub
int3
imul
rol
idiv
(bad)
push
sar
inc
inc
stos
test
and
mov
mov
sub
and
imul
xchg
fcomip
sub
std
std
or
stos
xor
mov
xchg
movs
sbb
push
dec
scas
dec
retf
xor
fsubp
mov
adc
xchg
or
xchg
jmp
jb
rcl
sahf
scas
stos
repnz
mov
ret
pop
movs
mov
shl
dec
popf
mov
sahf
stos
pop
fs
loop
and
test
mov
shl
or
xor
(bad)
jge
(bad)
xlat
or
or
add
jo
clc
int3
test
outs
pop
cmp
ss
nop
or
pop
ret
aaa
or
or
cmp
lock
pop
into
loopne
dec
sbb
mov
arpl
pop
lods
int3
or
rcr
(bad)
leave
rcr
sti
test
xchg
sub
jns
mov
dec
aad
add
xchg
aas
inc
sub
outs
jg
inc
iret
sbb
shl
push
movs
xchg
pop
adc
push
adc
push
fwait
leave
push
pop
mov
(bad)
cli
dec
aas
outs
out
xchg
sbb
ja
cmp
iret
data16
mov
fisttp
shl
shl
cmps
sbb
inc
pop
kaddw
iret
fsubr
jne
adc
jbe
mov
outs
bnd
inc
dec
xchg
push
cli
or
jg
push
xchg
pop
movs
icebp
movs
fwait
pop
pop
pop
ret
lods
xchg
loopne
jae
mov
adc
ror
xchg
push
test
test
dec
movs
lahf
or
dec
push
and
scas
and
in
fisub
pushf
sub
xlat
arpl
and
call
push
pop
jo
cli
dec
rcr
retf
adc
retf
xchg
dec
(bad)
inc
fadd
cmp
nop
xor
xor
icebp
sbb
lods
adc
cs
ins
cmp
sbb
mov
das
cwde
mov
pop
sbb
push
xchg
inc
inc
ret
add
div
mov
jnp
adc
pop
(bad)
test
ja
out
jmp
adc
jmp
jp
jae
lea
stc
sub
test
std
repz
sub
ret
movs
clc
xchg
cmc
mov
loop
xchg
mov
test
add
jo
push
or
shr
stos
test
hlt
pop
hlt
jl
js
mov
cdq
or
xor
mov
adc
les
stc
inc
fmul
jmp
repz
mov
jmp
imul
inc
mov
jb
and
jmp
jbe
inc
mov
repz
(bad)
pop
hlt
push
icebp
les
dec
in
data16
enter
dec
fidiv
(bad)
jecxz
call
mov
ret
in
mov
mov
jmp
mov
in
or
jmp
retf
sbb
or
mov
add
pop
mov
test
jecxz
gs
mov
and
push
ja
mov
jb
pop
pop
pop
sbb
shl
inc
ss
das
gs
out
sbb
mov
mov
jmp
pushf
mov
in
cwde
sbb
or
pop
adc
rcr
adc
xor
pushf
dec
cmp
movs
add
cmp
dec
fadd
xor
cmps
pusha
dec
idiv
sar
cli
cwde
inc
cli
nop
pop
(bad)
sti
bound
xlat
cs
push
jne
mov
pop
mov
jb
cmps
pop
add
push
lds
inc
stc
adc
and
call
sahf
inc
sub
jmp
mov
(bad)
xor
pop
fs
aam
adc
xchg
mov
stos
jno
call
sub
jb
call
jmp
hlt
adc
pop
push
dec
shl
ja
cmps
push
add
stc
ja
pop
repz
xor
jo
jmp
add
stos
repnz
ret
xor
ja
dec
sbb
out
ficom
xchg
aaa
push
mov
mov
in
ins
mov
push
lock
dec
dec
jb
fcmovnb
cld
test
dec
sub
lahf
int
mov
cmp
lea
push
cli
lods
add
push
retf
sub
inc
or
pop
push
(bad)
icebp
cwde
xor
ror
fild
mov
push
iret
loop
aam
push
and
sub
icebp
clc
cmp
adc
loope
fwait
outs
push
pusha
sar
(bad)
dec
push
lds
dec
push
dec
loope
adc
or
sub
out
inc
mov
sub
leave
sub
(bad)
out
cmp
daa
hlt
popf
je
sbb
mov
in
data16
pop
push
jno
cdq
jns
cmp
push
push
inc
mov
push
jbe
cmp
stos
hlt
or
adc
mov
arpl
jb
xlat
push
test
xor
inc
cli
jl
fisubr
sub
scas
repnz
mov
xor
inc
fs
inc
out
xor
mov
mov
rol
loope
ret
inc
cmp
cmc
ja
pop
outs
or
and
xchg
outs
cmp
aaa
xchg
aaa
fisubr
cli
xchg
mov
push
mov
popa
mov
aad
push
sbb
xlat
mov
ret
sahf
jo
sub
movs
push
in
cmps
jb
(bad)
scas
xor
js
jb
test
(bad)
mov
push
inc
dec
rcl
mov
jo
movs
ss
adc
xchg
push
shr
ins
repnz
inc
imul
call
push
sbb
sub
cmp
fld
cmp
in
or
shl
jns
loop
sub
and
stos
arpl
daa
push
scas
xchg
mov
int
mov
rcr
push
(bad)
retf
fsub
mov
and
xchg
jge
add
mov
je
push
pop
xor
lods
call
repz
repz
and
repz
out
movs
push
and
cmp
hlt
fdivp
arpl
push
dec
lds
inc
jne
add
cmp
mov
jge
iret
inc
jg
push
jp
xor
sahf
fidivr
mov
mov
lahf
retf
scas
pop
lahf
mov
pop
or
mov
pop
clc
ret
or
hlt
fstp
cdq
add
adc
addr16
retf
retf
in
push
clc
mov
fild
dec
test
mov
inc
loope
mov
adc
lds
xor
aad
jle
sub
test
aaa
cs
mov
pop
push
int3
movs
cs
push
jecxz
dec
outs
push
test
mov
xchg
lods
sub
push
dec
pop
mov
test
lods
enter
xor
rol
repz
fcom
fs
push
in
cmps
(bad)
jo
xchg
movs
cmp
jmp
call
xor
icebp
retf
aas
sbb
frstor
fs
cmc
lods
mov
push
sub
jno
inc
mov
sar
mov
ret
inc
loop
(bad)
lds
popa
outs
or
lods
jnp
dec
nop
sub
pop
hlt
jmp
dec
lods
repz
mov
inc
mov
imul
inc
mov
mul
cli
mov
imul
test
repz
mov
scas
xchg
test
dec
sub
jmp
dec
mov
ds
fs
mov
(bad)
outs
mov
xchg
jmp
fldl2e
push
xor
xor
hlt
cmc
std
ins
inc
scas
jmp
pop
jmp
iret
jmp
imul
inc
xchg
imul
jl
imul
inc
les
mov
mov
inc
mov
imul
inc
mov
imul
inc
mov
imul
loopne
in
dec
in
out
movs
sti
out
mov
jmp
repz
shl
test
movs
mov
ret
scas
mov
enter
lods
repz
push
xor
push
xor
pusha
mov
sbb
fiadd
not
jo
or
mov
aas
lea
test
xor
cli
loop
and
push
out
sub
rol
mov
imul
jns
xor
lds
and
add
fdivr
int3
(bad)
adc
test
retf
xor
stos
xor
pop
mov
jno
daa
dec
hlt
dec
sti
int3
aam
push
jns
mov
das
xor
stos
push
packsswb
call
dec
mov
pop
pusha
and
jb
shl
ds
push
dec
xor
or
hlt
or
(bad)
and
sub
xchg
jo
ret
shr
arpl
(bad)
(bad)
into
scas
popf
adc
test
aam
mov
test
fwait
not
push
mov
stc
sub
in
inc
lds
sub
fbstp
ja
sbb
pop
jae
push
pop
ds
xor
sub
sub
enter
test
push
mov
sti
pop
ror
push
ja
stos
sub
adc
and
cmp
stos
mov
sbb
fs
dec
add
mov
(bad)
and
fist
mov
sbb
xchg
adc
rcl
cmp
push
jae
or
lahf
mov
outs
pop
ror
jle
adc
jg
data16
mov
stc
sub
pop
outs
pop
dec
(bad)
pusha
ds
(bad)
pop
aas
mov
mov
xor
add
jmp
stc
scas
stos
ret
ds
pop
xchg
xor
add
add
jne
xchg
add
ffreep
sahf
mov
sbb
add
add
iret
fstp
mov
adc
out
scas
inc
mov
jmp
push
mov
jmp
imul
mov
repz
xchg
xor
loop
lods
pop
gs
adc
dec
mov
repz
push
cmp
lods
loopne
push
pop
nop
fwait
mov
xor
(bad)
cmp
cwde
push
xchg
mov
nop
mov
mov
push
aad
xchg
pop
ror
leave
sbb
das
fs
cdq
(bad)
xchg
(bad)
(bad)
cmp
cmp
cdq
cmps
sub
call
lea
inc
cmp
retf
add
jmp
or
daa
dec
pop
add
scas
sub
test
inc
hlt
aas
or
push
dec
fs
out
enter
push
stc
ins
xor
add
push
in
jmp
ins
mov
pop
jns
nop
nop
movs
jne
cmp
push
(bad)
mov
lods
arpl
xchg
and
sahf
gs
mov
hlt
push
dec
shl
sbb
mov
dec
scas
cmp
inc
and
nop
xor
add
xchg
mov
and
repz
jmp
mov
iret
or
fwait
pop
cmp
mov
cmp
add
cmp
in
fdiv
lods
mov
cmc
out
dec
out
outs
xchg
popf
dec
out
fsub
or
movs
dec
test
fnstsw
lock
(bad)
fdivr
inc
mov
nop/reserved
(bad)
mov
jae
jmp
and
adc
cmps
lods
add
dec
xchg
ins
iret
ins
dec
sub
sbb
add
cwde
(bad)
cmps
mov
repz
mov
cmp
dec
fst
adc
inc
cli
sbb
sub
mov
imul
jmp
mov
int3
out
sbb
in
xchg
clc
adc
jl
mov
mov
mov
mov
mov
or
adc
outs
push
je
scas
sub
push
mov
mov
(bad)
clc
cmps
scas
mov
xchg
or
inc
or
loop
test
repnz
lods
(bad)
jmp
imul
inc
and
jb
(bad)
in
in
add
jmp
jbe
inc
mov
repz
stos
lahf
jecxz
or
cmc
adc
cwde
frstor
neg
outs
mov
(bad)
stos
push
cmp
jp
jp
sar
stos
test
jmp
lock
repnz
(bad)
bnd
push
push
add
mov
mov
xor
fs
jmp
retf
xor
xchg
sti
ret
jl
lods
push
enter
and
jl
mov
ret
mov
jno
iret
jmp
shr
mov
movs
(bad)
mov
mov
mov
or
cmp
loop
and
mov
movs
cmp
jg
sub
in
add
mov
mov
sub
lsl
repnz
cmp
jmp
lock
cmps
call
(bad)
cmc
push
jmp
inc
dec
adc
inc
(bad)
cmc
in
dec
or
ret
retf
lods
xlat
xchg
lock
cs
cmp
push
pop
ds
jle
xchg
dec
add
test
mov
fimul
dec
adc
mov
ds
outs
sub
sbb
pop
jo
(bad)
shr
in
xchg
repnz
dec
imul
std
adc
mov
mov
mov
or
bound
xchg
ds
xor
mov
dec
mov
test
aad
inc
mov
daa
dec
mov
dec
test
mov
push
add
pop
sbb
xchg
mov
daa
inc
shr
imul
xor
inc
mov
mov
pop
mov
jge
jmp
inc
sbb
cs
pop
aaa
inc
push
repnz
mov
mov
ds
test
xchg
out
xchg
dec
in
cwde
repnz
cmp
loop
fld
mov
jle
mov
mov
pop
(bad)
xchg
fsub
(bad)
shl
scas
push
xor
or
push
stos
cmp
test
es
add
add
jp
cli
dec
cmp
out
dec
inc
mov
or
addr16
xchg
pop
repnz
sbb
cmp
call
cmp
or
shl
jle
push
cmp
cdq
jb
popa
sbb
fisubr
xchg
retf
idiv
cmc
rol
dec
in
xchg
push
xor
adc
dec
push
jno
js
sbb
les
and
inc
push
aad
jecxz
(bad)
dec
mov
(bad)
movs
xchg
push
ins
leave
mov
sbb
(bad)
std
popa
cwde
not
mov
mov
punpcklbw
xchg
adc
nop
int3
in
pop
xchg
pop
and
mov
fmulp
enter
into
call
pop
push
cmps
push
fiadd
test
pop
pop
push
and
ja
rcr
mov
mov
fidiv
pusha
push
out
faddp
rcr
aad
inc
mov
ret
mov
mov
lahf
test
xchg
aas
push
ja
mov
(bad)
leave
les
and
xor
or
pop
ror
test
stos
jg
push
or
loop
mov
jnp
mov
jmp
cmc
mov
mov
push
fsub
push
xchg
inc
pushf
xor
mov
addr16
js
or
movs
dec
rep
dec
cmps
call
ja
add
add
cmp
xor
xor
bound
aad
movs
les
rcr
out
ror
out
daa
inc
stos
sbb
inc
out
push
into
mov
and
out
mov
mov
cmps
inc
xchg
in
push
jo
jle
xchg
gs
xor
push
mov
dec
aam
jmp
pop
hlt
add
out
cmp
cmp
dec
mov
outs
jno
inc
dec
mov
push
sub
clc
(bad)
sub
cmp
jmp
mov
jno
adc
je
sub
and
shl
jg
in
jmp
daa
adc
pop
xchg
es
rcl
call
inc
test
mov
mov
lock
mov
loop
gs
mov
les
mov
xchg
mov
jmp
fcmovnb
xchg
pop
fidivr
mov
mov
jae
mov
ror
or
xchg
push
jo
push
xor
movs
lock
inc
add
test
mov
outs
ret
xor
mov
mov
jae
cmp
cs
imul
std
dec
inc
sub
pop
xlat
test
imul
mov
mov
adc
pop
icebp
stos
je
fcmove
mov
mov
or
cmp
pop
shl
push
dec
xchg
cmp
inc
xlat
mov
stos
mov
lods
fmul
sub
mov
js
and
or
push
jmp
aad
adc
cdq
fadd
dec
cmp
fisttp
dec
out
xchg
test
fwait
aaa
es
mov
sub
xor
mov
outs
xchg
push
add
jne
adc
or
iret
pop
xchg
mov
jg
push
mov
jmp
fimul
aad
in
push
pusha
mov
paddusw
out
imul
sbb
imul
in
into
mov
(bad)
(bad)
xor
call
adc
nop
(bad)
in
xchg
ror
jno
pop
or
or
inc
pop
mov
jecxz
xor
adc
dec
out
mov
outs
test
daa
jae
jno
stc
xchg
mov
leave
lock
push
mov
mov
push
add
cmp
loop
fstp
sbb
rcr
push
lahf
stc
lods
xchg
xor
jns
mov
cmps
(bad)
cmps
jmp
jl
mov
lea
ss
jns
mov
and
aas
pusha
dec
jg
aad
ins
dec
mov
and
stc
mov
inc
mov
inc
stos
aam
jns
xchg
push
fld
sti
sbb
xor
stos
test
and
js
xchg
pmulhw
sbb
sti
enter
sbb
inc
call
dec
in
aad
mov
push
out
xor
jmp
xor
in
shr
mov
bound
cs
jne
mov
rcr
pop
enter
jae
or
adc
(bad)
lock
fimul
xor
jno
mov
daa
push
fnsave
xor
pop
fmul
adc
xchg
das
in
push
push
jg
pop
icebp
and
(bad)
repz
mov
(bad)
cdq
pushf
or
xor
arpl
mov
outs
add
sbb
push
sub
add
pop
dec
pop
nop
or
sbb
push
jbe
scas
addr16
mov
fdecstp
outs
mov
ja
std
call
jno
mov
add
cwde
inc
pop
inc
pushf
mov
loopne
mov
and
stos
add
test
jmp
mov
or
(bad)
jmp
push
jo
jle
adc
add
jne
mov
out
(bad)
leave
pop
leave
xor
test
shr
jb
(bad)
jbe
xchg
or
jmp
adc
push
pop
mov
hlt
mov
and
repz
mov
repz
test
lods
mul
dec
test
out
lods
sti
out
mov
(bad)
push
mov
(bad)
ins
mov
repnz
ffreep
push
xchg
iret
scas
jl
iret
stos
sbb
(bad)
je
mov
mov
sub
cmps
out
dec
mov
out
push
mov
fisubr
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
fs
jmp
repz
dec
test
push
push
out
jmp
sti
jmp
imul
push
mov
sti
push
push
stos
xlat
out
inc
mov
repz
imul
dec
mov
jecxz
das
stos
jmp
inc
mov
(bad)
jmp
and
loope
and
cmp
nop
xchg
mov
sub
dec
idiv
aam
lods
retf
lea
xchg
sbb
iret
lods
cmp
dec
test
ror
call
mov
and
loop
mov
sti
jmp
mul
push
lods
out
or
idiv
fs
pushf
jmp
inc
or
cmp
into
xchg
push
push
or
add
adc
movs
or
cmp
nop
pop
popa
(bad)
nop
sub
cmps
push
call
jns
cmp
or
cdq
arpl
mov
scas
repz
pop
add
lods
dec
cdq
sub
into
lock
js
test
outs
adc
stc
inc
je
jmp
(bad)
jmp
imul
dec
mov
imul
shr
mov
shr
ins
and
jmp
inc
movs
sti
out
pop
rep
ss
or
push
lahf
icebp
jns
and
add
push
mov
in
push
push
iret
mov
scas
dec
js
addr16
out
dec
xor
mov
push
mov
daa
aas
xchg
sub
pop
cmps
sahf
in
(bad)
js
movs
push
mov
out
inc
retf
mov
aam
sbb
ins
cmp
inc
hlt
sbb
dec
popa
push
add
je
js
nop
inc
ret
and
inc
jno
mov
pop
and
adc
int3
sub
dec
sar
mov
jo
js
push
sahf
fsubr
(bad)
or
add
repz
push
mov
jmp
mul
add
cmps
inc
and
xor
adc
scas
ret
jmp
inc
movs
(bad)
cli
jae
repz
call
push
loop
jbe
mov
cmp
jo
pop
push
mov
xor
fidivr
call
mov
dec
pop
scas
stos
popa
adc
and
xchg
repz
ss
fild
jmp
xchg
push
clc
sbb
pop
pushf
in
or
jo
pop
or
xor
dec
mov
xor
jecxz
adc
jo
mov
sbb
or
mov
adc
mov
push
retf
push
mov
add
mov
add
or
hlt
inc
mov
out
add
hlt
leave
outs
or
test
ins
nop
movs
retf
test
and
pop
stc
cmps
jmp
mov
adc
pop
dec
aad
dec
xchg
add
pop
or
add
push
mov
pop
xchg
ins
mul
ins
fnstcw
push
cmp
push
and
sub
adc
iret
in
(bad)
mov
cmp
enter
xor
lea
lea
xchg
into
stos
inc
rol
jmp
iret
enter
lahf
jns
loopne
jl
icebp
dec
test
daa
sub
mov
pop
int
inc
push
add
js
add
fnstsw
int3
call
pop
pop
stc
outs
ficom
push
jno
cmovae
into
out
shr
push
imul
mov
repz
jecxz
inc
mov
imul
push
test
dec
in
scas
int
jae
inc
data16
test
out
ret
daa
jle
fs
pushf
jmp
(bad)
jnp
xor
or
neg
addr16
xchg
shl
pop
fisub
sub
mov
scas
jg
popa
pushf
inc
lds
or
cmp
retf
jge
frstor
pop
or
lods
mov
hlt
enter
call
xchg
div
test
test
cdq
xor
movs
xchg
mov
jle
lods
or
sub
ins
sahf
std
lods
arpl
arpl
loope
inc
movs
jns
ror
and
and
dec
add
adc
mov
sti
sub
mov
cmp
add
push
mov
add
mov
mov
adc
in
mov
pusha
push
mov
xchg
iret
jo
cmp
xor
fild
sub
daa
outs
(bad)
rcr
stc
pop
fxch
dec
(bad)
fnsave
mov
std
mov
push
in
inc
mov
adc
push
aam
dec
add
xlat
sbb
bound
jp
retf
xchg
xlat
ret
sub
mov
push
dec
fcom
das
xchg
fs
rol
adc
fwait
lea
mov
jmp
repz
imul
shl
ret
adc
inc
mov
repz
sub
cs
sbb
fdivr
js
jecxz
mov
cmp
or
mov
sub
cmc
(bad)
jl
cmp
xchg
sbb
leave
xchg
mov
sti
cmp
cmps
popf
retf
dec
loop
leave
js
lods
push
std
sbb
cvtps2pi
mov
fbstp
mov
xchg
dec
pop
dec
adc
pop
cmps
pop
repz
mov
mov
fsub
int3
xchg
jno
test
loopne
lods
nop
inc
mov
mov
call
popf
fidivr
int3
(bad)
mov
dec
inc
jge
cli
idiv
push
sub
retf
adc
js
(bad)
inc
arpl
aam
fsubr
push
(bad)
xlat
xchg
pop
dec
mov
mov
adc
in
gs
in
pop
das
pop
retf
mov
(bad)
jmp
sub
scas
cwde
dec
add
pop
in
dec
in
loop
test
jmp
imul
add
xor
mov
enter
lods
rep
add
xlat
lods
out
mov
mov
inc
dec
adc
cmp
or
pop
pop
fcmovbe
addr16
call
mov
mov
lar
fnstcw
mov
movs
ficom
xchg
fld
outs
movs
mov
ret
mov
popa
jnp
fs
scas
push
xchg
ins
dec
push
xor
nop
dec
cld
cmp
data16
aad
mov
pusha
enter
mov
jbe
xor
in
imul
or
cmps
mov
shl
jecxz
jno
(bad)
outs
mov
add
cld
pop
fst
push
test
scas
dec
das
push
ss
outs
daa
stc
inc
pushf
or
inc
and
out
mov
jecxz
inc
mov
imul
inc
mov
xor
ret
cmps
jno
fs
pushf
out
inc
movs
call
jno
stos
cmps
in
movs
pop
inc
(bad)
test
xor
dec
call
rcr
dec
mov
jnp
adc
js
dec
adc
dec
fnstenv
add
sar
clc
push
add
pop
or
cmp
loop
xor
stc
sbb
inc
fwait
add
mov
fst
ficom
xchg
call
std
ficom
mov
outs
jmp
in
icebp
movs
pop
jns
or
movs
mov
call
jne
jg
ins
loop
pop
mov
fwait
push
xchg
repz
test
cld
xor
xchg
cwde
xchg
mov
cs
out
aad
lock
cmp
ja
or
mov
push
mov
adc
adc
mov
movs
mov
cmp
xor
out
mov
imul
repz
jo
xchg
mov
mov
out
inc
movs
repz
repz
mov
shl
ret
add
rep
add
or
icebp
dec
cmp
ins
fwait
cvttss2si
rol
pushf
push
into
cmps
add
xchg
xor
adc
ds
add
mov
mov
mov
shl
pop
sub
or
popa
dec
push
sub
out
in
outs
mov
mov
(bad)
jle
sbb
mov
inc
xor
sbb
or
mov
lods
fcomp
gs
test
dec
cmp
or
out
arpl
mov
test
test
jbe
mov
xchg
mov
fnstcw
lahf
add
jne
inc
jmp
mov
dec
(bad)
xchg
jb
mov
fist
lods
jp
(bad)
cdq
std
daa
ds
xchg
sub
stos
mov
repz
es
(bad)
gs
jmp
mov
mov
adc
mov
and
repz
mov
repz
test
lods
mul
dec
test
out
lods
sti
out
mov
(bad)
push
mov
(bad)
ins
mov
repnz
ffreep
push
xchg
iret
scas
jl
iret
stos
sbb
(bad)
je
mov
mov
sub
cmps
out
dec
mov
out
push
mov
fisubr
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
fs
in
adc
mov
inc
lods
repz
dec
test
push
push
out
jmp
sti
jmp
imul
inc
mov
jecxz
mov
mov
out
movs
imul
inc
movs
repz
mul
dec
mov
jecxz
je
pushf
jmp
sti
push
fwait
mov
scas
add
push
aas
sbb
scas
fimul
sub
test
or
push
sub
jmp
inc
mov
idiv
push
pop
adc
xor
inc
mov
ror
mov
in
pop
mov
cli
fwait
mov
inc
shr
jmp
test
jle
inc
(bad)
out
add
addr16
xchg
ret
jge
push
push
call
xchg
sbb
inc
mov
div
xchg
call
out
push
cmp
jno
mov
outs
int
popf
retf
fnstcw
ins
cli
rcl
daa
push
call
inc
mov
(bad)
and
xor
aas
and
out
xchg
out
pop
stos
push
xor
es
pop
mov
inc
loopne
jmp
retf
(bad)
mov
inc
sbb
les
lahf
and
repnz
(bad)
adc
cmp
xchg
mov
fsub
out
adc
pop
(bad)
data16
inc
cmp
mov
fdiv
add
aaa
adc
cld
xor
jmp
inc
mov
repz
inc
int3
or
ret
js
push
das
stc
jle
fiadd
sbb
repnz
adc
inc
mov
jmp
pop
fcmovnbe
(bad)
js
xor
lea
lea
inc
ins
movs
sbb
loop
mov
push
test
inc
mov
div
(bad)
cmc
mov
mov
mov
or
call
jmp
div
pop
or
inc
mov
imul
inc
mov
or
inc
je
jmp
not
pusha
mov
in
jmp
div
xor
imul
pop
stos
jmp
imul
pop
mov
adc
inc
mov
imul
inc
mov
arpl
inc
sbb
jmp
idiv
push
mov
hlt
jmp
neg
mov
jg
inc
mov
imul
inc
mov
imul
inc
mov
imul
fcomp
dec
loopne
out
inc
lods
repz
push
movs
imul
inc
lods
idiv
dec
mov
out
cmps
inc
test
inc
jmp
ds
inc
movs
repz
push
mov
sbb
cmp
arpl
mov
dec
xchg
xor
pushf
hlt
pop
pop
loopne
push
das
mov
pop
sbb
sbb
mov
pushf
or
push
xchg
sub
ja
sbb
pushf
xor
frstor
mov
jo
xor
js
adc
mov
jno
sbb
pop
fwait
push
add
pop
push
jno
inc
jns
xor
sbb
adc
mov
xchg
test
xor
into
fistp
xlat
adc
mov
xchg
test
aaa
inc
ret
aam
or
mov
stc
inc
mov
ret
sbb
test
and
aam
in
fs
sbb
ds
inc
data16
cmp
mov
and
mov
sbb
cmp
xor
fs
(bad)
ss
test
dec
push
inc
mov
xor
jg
imul
repnz
pop
ins
sbb
jle
add
test
shl
int
push
pushf
jecxz
and
xchg
sar
in
push
mov
movs
loope
jg
std
xchg
mov
rol
rcr
or
call
fbstp
lock
lods
adc
ins
jno
cmp
xchg
mov
hlt
adc
retf
adc
rol
(bad)
xchg
mov
movs
or
ins
xchg
and
je
mov
pop
adc
pop
test
cmp
mov
add
mov
dec
xchg
lods
pop
push
(bad)
jbe
sub
or
cmp
or
dec
add
repnz
inc
in
(bad)
mov
fld
mov
and
sbb
pop
mov
lahf
lahf
call
enter
xor
ja
push
cld
ret
pop
dec
cmc
mov
adc
arpl
sbb
movs
push
jge
outs
scas
adc
or
bound
sbb
cmp
mov
jmp
sbb
cmp
mov
jmp
sbb
movs
icebp
xchg
cmp
lock
push
pop
cmp
mov
pop
out
pusha
mov
imul
cmp
or
out
fs
xchg
stc
or
je
xchg
mov
pop
mov
dec
pop
shr
js
or
pop
stos
clc
push
pusha
push
fs
lahf
(bad)
jns
loopne
loop
test
sbb
pusha
mov
dec
pop
shr
push
xor
popf
jmp
(bad)
adc
mov
pop
jmp
adc
and
add
outs
inc
pop
imul
in
fnstcw
ficomp
scas
jmp
sbb
pop
cwde
fld
push
xchg
div
test
cmc
inc
xchg
ins
cmps
lods
adc
adc
push
dec
push
and
cmp
jmp
mov
cmpxchg
push
loopne
repnz
mov
cmp
neg
outs
jae
xor
cmp
mov
out
repz
jmp
xor
cmp
mov
out
repz
jmp
xor
mov
sar
int
popf
cmp
jnp
ror
add
jb
mov
enter
test
and
jecxz
(bad)
pop
daa
int3
jns
push
out
sahf
xchg
cdq
cs
ror
into
or
test
(bad)
aas
ins
or
test
loope
fisttp
fwait
ret
adc
cmp
dec
jge
ds
mov
push
test
dec
leave
cwde
pop
icebp
sub
ret
xor
mov
mov
fwait
pop
jno
inc
sub
xchg
jno
pop
jnp
sub
int
fbstp
inc
cmp
jnp
test
rcr
push
ret
fs
xchg
cwde
daa
popa
leave
lds
jo
push
jp
cmp
jo
jb
gs
xchg
cmp
fild
hlt
xchg
inc
movs
shr
jmp
xchg
jno
fs
cmp
jmp
fmul
test
push
aam
ins
mov
mov
test
popa
leave
lds
pushf
fwait
push
sbb
or
jmp
test
icebp
fild
jp
add
sbb
jne
pop
lahf
inc
cmp
sbb
push
cmp
lahf
push
and
aaa
leave
push
push
mov
inc
xor
jnp
cdq
test
or
dec
or
lahf
sub
(bad)
or
or
mov
mov
pop
inc
mov
push
aas
and
or
push
mov
pop
inc
mov
push
aas
and
or
push
mov
pop
inc
mov
push
aas
and
or
push
mov
pop
inc
mov
push
aas
and
or
push
mov
pop
inc
cwde
sub
sub
mov
xchg
(bad)
sub
ret
ss
push
ins
mov
mov
fwait
push
popa
inc
(bad)
sub
pop
cmp
nop
or
movs
int
iret
jo
dec
sbb
and
lock
movs
sub
lea
jne
js
ret
jo
fs
sub
mov
push
test
mov
scas
inc
mov
out
dec
mov
jmp
idiv
dec
call
mov
shr
inc
in
cmp
jbe
mov
enter
lods
repz
cmps
lahf
shl
retf
mov
outs
enter
jnp
and
mov
adc
mov
out
mov
shl
adc
arpl
cmc
ror
mov
rcr
cmps
dec
adc
or
add
mov
ret
jg
inc
in
outs
lods
ds
push
call
and
xor
mov
repz
loope
or
iret
fidiv
adc
(bad)
shl
ins
fwait
xchg
cmp
jle
clc
inc
icebp
push
mov
popa
ins
repz
jl
and
mov
sar
(bad)
(bad)
mov
cmp
in
mov
das
ror
xchg
fistp
adc
loop
ret
mov
fimul
jns
inc
cmps
sti
push
aas
jge
add
leave
bound
jg
(bad)
loope
ins
adc
xchg
and
inc
mov
and
imul
mov
pop
out
mov
mov
(bad)
mov
adc
(bad)
push
xor
nop
and
pop
popf
dec
and
pop
stos
dec
stos
lock
hlt
adc
jno
call
add
in
scas
into
mov
shl
mov
sbb
les
sbb
aaa
or
inc
(bad)
repz
loop
cmp
scas
int
mov
or
lods
ror
rcl
pop
cs
(bad)
mov
xchg
sar
fnstenv
xchg
frstor
mov
jnp
jne
popf
test
jle
test
jae
jne
sbb
(bad)
push
cmps
repz
ds
mov
xor
rcr
sub
jg
cdq
xchg
dec
jae
pop
scas
adc
enter
aaa
sbb
push
scas
aam
cmp
add
(bad)
dec
cdq
test
cwde
adc
adc
lds
xchg
push
cmp
fsubr
dec
bound
fs
int
daa
pusha
jle
sub
ret
mov
icebp
out
cmp
cdq
pop
adc
popf
cmps
xor
cmps
(bad)
popa
xchg
sub
iret
rol
inc
xchg
adc
mov
xor
cmps
shl
aam
test
jbe
add
sub
sar
jno
hlt
jmp
inc
int3
cmp
test
jp
shr
pushf
(bad)
adc
int
loop
mov
xchg
daa
gs
mov
fild
push
cmc
aam
repz
xchg
sub
sub
aad
bound
sbb
push
mov
retf
xchg
inc
mov
xor
scas
aas
jp
push
jmp
cmp
addr16
xchg
pop
dec
jg
mov
sub
outs
sahf
cmc
out
and
adc
das
pop
mov
push
cmps
and
inc
int3
popf
add
imul
(bad)
pop
js
loop
outs
pushf
and
mov
pop
push
jo
and
and
mov
loope
ss
mov
ins
mov
(bad)
dec
loopne
adc
sar
icebp
test
jg
mov
jge
cmps
je
push
fsubrp
xchg
ins
les
mov
pop
push
jo
and
and
mov
loope
ss
mov
ins
mov
(bad)
dec
loopne
adc
sar
icebp
test
jg
mov
jge
cmps
je
push
fsubrp
xchg
ins
les
mov
pop
push
jo
and
dec
scas
pop
out
push
movs
sbb
lock
mov
mov
movs
sbb
lock
mov
mov
movs
sbb
lock
mov
mov
movs
sbb
lock
mov
mov
movs
sbb
lock
mov
mov
movs
sbb
lock
mov
mov
movs
sbb
lock
mov
mov
movs
sbb
lock
mov
mov
movs
inc
or
in
sub
nop
cs
pop
data16
mov
jne
inc
jl
js
mov
xor
fistp
addr16
hlt
jmp
movs
lahf
hlt
jmp
push
aaa
xor
lock
das
rcl
lahf
mov
jne
inc
jl
js
mov
xor
fistp
addr16
hlt
jmp
movs
lahf
hlt
jmp
push
aaa
xor
lock
das
rcl
daa
ds
jmp
imul
mov
xchg
add
add
mov
cmp
cli
mov
cmps
inc
test
jns
sbb
scas
jno
pop
pop
pushf
pop
out
ja
pop
sbb
sub
xchg
adc
and
nop
dec
mov
dec
xor
(bad)
jbe
in
sbb
aas
push
pop
xlat
in
cmc
sbb
ds
jmp
aaa
(bad)
aam
test
aas
xchg
mov
outs
inc
lds
xchg
pop
mov
jmp
and
and
(bad)
icebp
loopne
pop
push
cmp
imul
inc
shr
ds
sar
lahf
(bad)
sbb
ror
int
and
sbb
gs
(bad)
ds
xor
test
xor
sub
mov
inc
js
adc
push
pop
or
cwde
dec
jbe
push
inc
dec
shl
(bad)
aam
test
aas
xchg
(bad)
mov
mov
loop
mov
imul
dec
mov
imul
or
mov
jmp
jnp
das
and
dec
mov
repz
stc
push
test
mov
mov
cmp
ja
or
pop
mov
lea
adc
js
or
jnp
push
mov
daa
cmp
mov
push
sar
nop
nop
mov
push
mov
push
pop
hlt
nop
and
cli
push
nop
test
repz
ror
addr16
shr
ja
movs
fst
cmps
(bad)
out
ja
cmps
fst
cmps
(bad)
out
ja
cmps
fst
movs
les
cmp
pop
(bad)
pmaxsw
pop
push
xchg
in
cmp
jno
sub
cmps
xor
or
in
push
sub
addr16
mov
inc
cs
imul
test
push
jmp
xchg
mov
mov
adc
dec
iret
jmp
xor
push
imul
lahf
dec
sub
aam
sbb
outs
sbb
mov
mov
fild
paddd
pop
cmp
add
into
pushf
inc
mov
sbb
mov
pusha
cmp
pop
rol
dec
sub
iret
sub
add
sbb
outs
sub
(bad)
or
test
cmp
repnz
stos
outs
iret
scas
loopne
in
mov
sub
push
ret
std
ror
cmp
push
ficomp
enter
mov
xchg
cmps
pop
ins
dec
fimul
and
ins
sti
or
xchg
jne
push
xlat
(bad)
repnz
jbe
jge
dec
and
jmp
xchg
sbb
in
xchg
jno
cmp
cld
repz
movs
es
xchg
jno
cmp
cld
repz
movs
es
xchg
jno
cmp
cld
repz
movs
cmp
sub
std
cmp
cmp
into
ds
in
ja
cs
shl
dec
test
pusha
or
mov
mov
mov
jl
jb
ja
ds
add
inc
jo
jae
adc
mov
add
leave
movs
add
lods
lods
pusha
cli
ret
retf
ins
mov
repnz
shr
enter
jmp
mov
popf
mov
(bad)
cmp
adc
das
sbb
imul
out
fld
(bad)
fnstsw
dec
jae
sbb
int3
sub
fnstsw
dec
jae
sbb
int3
sub
fnstsw
dec
jae
sbb
and
mov
xchg
aas
pop
jne
rcl
jnp
mov
dec
and
js
scas
arpl
push
dec
xchg
add
enter
jmp
sbb
test
pop
adc
std
repnz
or
popa
inc
push
adc
pop
xchg
fnsave
ficom
inc
loope
mov
xor
sub
sub
xor
sbb
jb
call
jns
push
xor
sbb
call
dec
stos
out
sub
(bad)
jno
push
sub
sub
loope
mov
dec
cmp
add
fyl2x
leave
mov
fild
les
loopne
mov
and
aas
(bad)
fst
cmp
jg
mov
ja
nop
add
jno
xchg
push
push
push
ja
sahf
fmul
scas
xchg
es
dec
out
add
es
add
dec
scas
xchg
out
ret
add
dec
scas
xchg
out
ret
add
dec
scas
xchg
out
ret
add
dec
scas
xchg
(bad)
cmps
ret
add
adc
push
fisttp
cmps
rcl
fisttp
cmps
rcl
fisttp
cmps
rcl
fisttp
cmps
rcl
pop
dec
out
or
mov
push
pop
dec
out
or
mov
push
pop
dec
out
or
mov
push
pop
dec
out
or
mov
push
pop
jmp
push
pop
hlt
stos
inc
mov
out
push
mov
inc
jmp
jmp
or
mov
out
icebp
repz
dec
test
call
xor
mov
enter
movs
neg
stos
fucomi
fstp
mov
mov
mov
pop
jmp
shr
movs
cmp
repz
repnz
inc
xchg
jae
jp
mov
enter
lock
xchg
push
xchg
push
sti
(bad)
push
mov
in
ja
into
rol
(bad)
or
(bad)
outs
loop
inc
les
aas
clc
fild
adc
mov
cmp
mov
fild
sti
jmp
mov
loop
sbb
or
or
rcl
sbb
inc
shl
inc
mov
int
aad
mov
fwait
or
shr
sub
push
mov
jno
mov
test
in
sub
test
mov
movs
lds
pop
hlt
pusha
adc
stos
lock
call
push
cs
dec
or
jmp
fist
push
scas
(bad)
jmp
mov
mov
aad
repz
sar
(bad)
(bad)
mov
cmp
fadd
int3
push
adc
dec
fisttp
out
jbe
fs
imul
mov
movs
lds
rcr
push
and
ss
fisttp
out
jbe
fs
imul
mov
movs
lds
rcr
push
and
ss
fisttp
out
jbe
fs
imul
mov
movs
sub
aad
shr
jno
hlt
shr
mov
mov
aas
jbe
icebp
dec
(bad)
fucom
enter
add
js
test
mov
pop
sub
push
repz
ds
push
cmp
cdq
icebp
imul
sub
stos
xlat
adc
test
mov
mov
cli
adc
jo
jle
adc
out
mov
mov
mov
stos
bound
sub
pop
sbb
mov
and
sbb
gs
push
dec
and
push
repz
leave
add
test
lahf
inc
mov
or
jmp
xor
ss
nop
(bad)
scas
mov
fcomp
rol
mov
test
xchg
adc
jp
pop
xor
nop
stos
jmp
xor
ss
nop
(bad)
scas
mov
mov
lock
fst
int3
daa
retf
pusha
fwait
int
cmp
mov
pop
add
ins
lock
jmp
mov
out
sub
or
push
pop
mov
jg
lock
sbb
fdiv
or
movs
add
dec
ins
mov
xor
or
add
js
iret
fcom
xchg
pop
loopne
xchg
pop
jle
xchg
or
mov
fadd
gs
push
out
shrd
cmp
cmc
add
push
mov
int3
dec
mov
xor
rcl
mov
add
cmp
(bad)
jmp
dec
movs
add
fwait
xchg
push
mov
pop
popf
test
xor
mov
outs
sbb
enter
leave
and
mov
jnp
pop
cmp
sub
push
mov
cmp
cdq
jbe
jns
sbb
outs
xchg
std
lahf
push
jle
aad
push
and
rep
arpl
icebp
arpl
in
int
int3
push
mov
mov
jle
test
mov
sub
adc
call
sub
pop
dec
xchg
sub
(bad)
jmp
test
ret
pop
fcmovb
arpl
push
dec
movs
idiv
dec
movs
test
test
push
lock
test
inc
mov
into
out
shl
sub
out
and
cmp
les
sar
rol
jno
stc
sbb
cmp
(bad)
fstp
or
jmp
adc
data16
jl
or
repz
repz
aas
xchg
xor
test
call
sbb
test
sbb
cmp
movs
xchg
xchg
cmp
pop
(bad)
adc
inc
push
mov
xor
fiadd
aad
xchg
jae
ror
fucomi
sbb
xor
xchg
or
cmps
pushf
push
mov
inc
aam
adc
lods
mov
imul
(bad)
pop
pusha
cmp
loopne
cs
retf
js
shl
test
add
xor
js
fs
loopne
or
icebp
retf
leave
or
push
ror
popf
addr16
add
mov
rcl
mov
cdq
pop
aas
pop
loope
lea
add
xchg
int
mov
pusha
xlat
dec
cmp
jno
in
fcmovnbe
in
xor
repnz
inc
cmp
add
push
(bad)
adc
fisub
test
push
xchg
test
xchg
inc
add
fdivr
fcom
sbb
pop
push
pop
arpl
mov
inc
sub
jp
push
enter
lahf
fisttp
shl
and
pop
pop
sbb
cmp
push
aam
popa
sahf
or
jne
sbb
add
push
cli
cli
mov
inc
cwde
nop
retf
inc
and
jmp
pop
or
scas
shr
test
pop
jl
div
mov
movs
fcomi
lock
inc
or
out
gs
pusha
ja
pushf
and
xchg
leave
data16
popf
das
(bad)
jp
add
lock
jg
das
(bad)
fnsave
leave
and
pop
push
fwait
jmp
inc
mov
cmps
rol
out
loop
sbb
adc
jnp
xchg
imul
jae
jnp
(bad)
icebp
add
sub
lea
(bad)
and
mov
inc
cs
inc
sbb
out
adc
xchg
sub
mov
mov
pusha
(bad)
add
pop
pop
push
ror
rcl
lods
xor
dec
adc
cmp
or
mov
mov
clc
hlt
sub
jns
pop
mov
lods
or
je
call
inc
ins
and
adc
xor
xor
jo
imul
aaa
je
push
inc
aam
add
push
or
dec
jmp
(bad)
fstp
(bad)
stos
cmp
jne
jecxz
push
xchg
sbb
push
call
shl
outs
xchg
jle
in
cdq
mov
cmp
sub
jmp
mov
pop
jg
fsubr
sbb
push
imul
mov
jns
nop
jns
call
mov
and
dec
(bad)
inc
mov
scas
cs
fst
cdq
lds
mov
not
or
lods
cmp
(bad)
in
xchg
dec
push
adc
xlat
add
push
jp
jbe
popf
inc
mov
bound
jns
xor
les
cs
je
inc
mov
scas
cs
fst
cdq
lds
mov
not
fisubr
add
jle
(bad)
mov
aad
jb
loope
fnstenv
fisttp
es
out
sub
or
ficom
nop
sbb
sub
cmps
and
fisubr
pop
hlt
test
xchg
jns
rcl
add
mov
jo
mov
popa
pushf
(bad)
dec
push
jne
test
xor
jns
popa
pop
jg
outs
test
sbb
add
(bad)
push
add
push
add
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fist
fucomip
mov
or
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
jne
out
sbb
sub
loop
stos
sbb
sub
loop
stos
sbb
sub
loop
stos
sbb
sub
sub
dec
imul
dec
push
cli
sbb
dec
imul
dec
push
cli
sbb
dec
imul
dec
push
cli
sbb
dec
imul
dec
push
cli
sbb
dec
imul
dec
push
cli
sbb
imul
mov
inc
(bad)
pushf
dec
retf
mov
in
into
int3
fwait
pushf
fstp
fwait
outs
mov
mov
jmp
push
mov
fwait
sbb
dec
ins
call
jnp
hlt
mov
test
sti
cmp
iret
xchg
cmp
pop
shr
cwde
pop
sub
push
pop
ins
js
push
and
ds
clc
xor
loop
sbb
mov
inc
xchg
mov
arpl
push
test
cmp
sbb
aad
ins
sbb
pop
aaa
xchg
mov
arpl
push
test
cmp
sbb
aad
ins
sbb
pop
aaa
xchg
mov
arpl
push
test
cmp
sbb
aad
ins
sbb
pop
aaa
xchg
mov
arpl
push
test
cmp
sbb
aad
ins
sbb
pop
aaa
xchg
mov
arpl
push
test
or
add
test
mov
mov
js
push
cld
add
inc
imul
pop
lahf
mov
mov
sbb
dec
jmp
jnp
xchg
movs
cmps
(bad)
fiadd
pop
scas
xchg
pop
loope
mov
leave
and
stos
adc
sub
inc
inc
sub
add
or
cmp
mov
adc
pop
test
mov
mov
enter
adc
push
and
ins
mov
xchg
or
add
test
or
add
hlt
out
dec
mov
out
inc
movs
repz
mov
add
out
add
stos
inc
popa
xor
repnz
rep
je
or
xor
mov
inc
scas
sub
stc
cbw
inc
int3
pop
and
mov
xchg
inc
jmp
mov
into
dec
mov
push
mov
mov
mov
int
in
mov
pop
add
push
sub
enter
test
push
jnp
or
jmp
mov
lahf
sbb
jb
jae
jecxz
mov
push
dec
mul
call
mov
not
fisubr
movs
inc
imul
hlt
icebp
push
sbb
inc
in
inc
test
jl
in
lea
outs
adc
cmps
(bad)
in
and
jb
sub
fist
inc
test
sbb
sbb
jmp
rcr
idiv
adc
add
loopne
jecxz
dec
add
scas
dec
pop
and
data16
or
mov
(bad)
hlt
in
and
inc
mov
std
fimul
xchg
in
inc
rol
data16
sahf
test
in
xchg
out
pop
pop
test
push
std
and
(bad)
shr
inc
xchg
shl
int
repz
add
cld
mov
sub
mov
cmc
enter
rcl
mov
pop
outs
pop
movs
fmul
push
push
int
jns
nop
fild
into
out
adc
sub
fiadd
dec
xchg
retf
push
loop
sbb
sbb
inc
das
jnp
dec
std
dec
dec
add
fnstcw
mov
push
xor
ds
sbb
jmp
push
(bad)
mov
sbb
dec
aad
sub
std
adc
xor
pop
pusha
int3
sub
xchg
xor
sar
adc
lds
mov
pop
js
add
stos
fucom
fdiv
cmp
stc
mov
loopne
push
add
mov
cwde
xor
push
mov
lods
rcr
in
sub
addr16
out
xchg
test
inc
cmp
mov
pop
mov
or
retf
mov
push
add
inc
pop
mov
push
stc
pop
loopne
scas
test
(bad)
xchg
in
stos
add
and
aas
add
pop
pushf
jmp
lock
loop
xchg
adc
mov
or
xchg
hlt
jecxz
enter
call
ret
inc
push
pop
push
sub
sub
pop
xchg
jns
dec
data16
repz
shl
data16
xor
mov
push
test
inc
jle
pop
xchg
mov
cmc
xchg
mov
popa
push
lods
pusha
stos
je
adc
jle
xchg
ja
xlat
sahf
adc
add
mov
loop
fisttp
je
ja
or
in
mul
or
inc
cmp
jo
std
dec
push
in
fistp
pusha
push
cmp
repnz
jb
or
push
mov
mov
add
sbb
dec
xchg
mov
xlat
adc
sbb
adc
mov
xchg
push
stos
mov
mov
mov
add
pop
test
xchg
ror
mov
inc
mov
add
jo
test
shl
repz
push
sbb
sub
stc
test
mov
data16
(bad)
sbb
mov
shr
test
or
fmul
mov
popa
and
or
mov
jle
inc
ds
call
inc
mov
mov
stos
cmp
es
jle
and
fld
ror
inc
xlat
and
sub
fwait
cmp
retf
adc
out
xchg
xchg
cmps
xor
movs
mov
es
in
(bad)
xor
cmps
shr
test
int3
push
leave
out
cmps
inc
out
xor
ret
cs
imul
outs
sti
and
imul
je
sub
jns
adc
cmp
pop
jl
in
out
mov
pop
loop
addr16
hlt
lods
jge
xchg
clc
shr
pop
jmp
push
div
cld
ret
popa
mov
cmp
hlt
and
adc
out
jmp
daa
stos
jmp
int
sub
icebp
hlt
addr16
(bad)
cmc
mov
loope
push
xor
pop
adc
jbe
adc
aaa
dec
loopne
push
mov
lock
xchg
add
out
mov
inc
dec
push
arpl
outs
js
ds
cmps
jo
fcom
inc
xchg
rol
leave
shl
call
call
jb
add
jo
cmp
aam
loope
xor
xchg
sar
aas
sbb
cmp
and
inc
sub
push
cmps
neg
in
jg
(bad)
sub
retf
sti
or
std
das
loopne
add
movs
mov
and
scas
ja
xor
test
outs
pop
cmp
rcr
bound
or
and
rcl
xor
test
pop
add
out
push
xor
stos
inc
movs
out
push
mov
sti
add
rep
inc
movs
out
loope
mov
and
ror
mov
mov
cmp
(bad)
adc
fcom
cmp
jge
frstor
cmp
outs
or
outs
cmp
lds
mov
popf
nop
jae
cdq
mov
fcom
shr
mov
(bad)
outs
inc
retf
movs
fst
and
push
je
inc
test
xor
(bad)
and
adc
add
les
jmp
stos
aad
data16
and
push
stos
aad
data16
and
sub
pop
cmp
fmul
les
(bad)
ja
ins
xchg
int
repz
inc
and
je
jns
sub
xchg
jo
fs
pop
and
xchg
cmp
fild
les
hlt
int
mov
inc
xor
ins
xchg
jno
jnp
sub
out
ds
js
add
daa
fild
sub
scas
retf
jb
adc
cmp
xchg
popf
adc
out
out
mov
(bad)
jmp
outs
xor
push
inc
test
adc
jge
push
jp
mov
in
mov
pop
popf
jp
xor
iret
inc
cmp
aad
pop
popf
jp
and
out
call
pop
or
les
mov
xor
iret
inc
test
adc
stc
jns
into
shl
pop
xor
xor
stos
fild
js
cli
inc
test
jmp
idiv
jmp
aad
mov
mov
aad
mov
mov
aad
mov
jnp
jmp
fnsave
mov
test
adc
cdq
mov
aad
mov
pop
popf
xchg
sub
inc
test
adc
cdq
test
adc
cdq
xor
iret
inc
test
adc
cdq
xor
iret
inc
adc
pop
or
dec
test
out
push
mov
imul
inc
mov
jae
add
outs
inc
and
repz
mov
enter
lods
repz
mov
or
xchg
pop
out
sbb
cmp
sbb
ror
adc
test
popf
fiadd
mov
sti
arpl
cmc
mov
imul
mov
rol
in
fsub
jp
sub
bound
scas
add
js
test
ret
cmc
push
xor
into
arpl
or
mov
jo
sbb
add
jnp
(bad)
pop
and
cmp
bound
fisub
popf
dec
ins
pop
and
xchg
mov
imul
test
mov
lea
(bad)
cmp
xchg
mov
dec
pop
test
mov
xchg
adc
lods
fstp
mov
outs
push
or
hlt
dec
adc
test
repnz
retf
das
out
rcr
daa
jnp
push
int
sub
mov
jae
rol
dec
push
(bad)
clc
in
xchg
dec
jg
inc
imul
test
loop
ins
daa
sar
retf
lds
mov
xchg
and
cmp
icebp
(bad)
loope
mov
jae
sbb
hlt
pusha
in
mov
lods
push
mov
fstp
sbb
push
sub
retf
loop
mov
xchg
push
shl
push
sub
jl
cmc
fisubr
hlt
inc
push
pop
shl
mov
rcl
push
push
xor
data16
aad
fwait
call
nop
jp
sub
arpl
out
inc
inc
xchg
aaa
outs
fwait
shr
dec
xchg
pop
sub
sbb
in
and
inc
repz
dec
adc
add
xlat
dec
pop
push
stos
aad
data16
and
push
stos
aad
shl
jae
xchg
frstor
shl
jae
xchg
frstor
shl
jae
xchg
frstor
shl
jae
xchg
frstor
shl
sbb
jl
bound
sbb
call
push
sub
push
scas
(bad)
mov
mov
iret
out
stc
jmp
sbb
add
call
es
add
inc
(bad)
(bad)
in
or
add
jae
scas
out
hlt
and
mov
xchg
lock
and
push
inc
and
in
outs
add
in
pop
sbb
dec
fimul
xchg
lock
and
push
inc
and
in
outs
add
in
pop
sbb
sub
or
jae
lds
add
add
xchg
lea
cmp
xchg
and
jl
jmp
cmp
lds
mov
ficom
(bad)
sbb
mov
cmp
and
jl
jmp
dec
(bad)
sbb
outs
xlat
test
push
push
addr16
xor
xlat
pusha
inc
sar
and
clc
push
xor
nop
or
mov
into
rol
xchg
lea
popa
test
sar
xor
sub
mov
out
fstp
jmp
in
in
dec
in
cli
dec
movs
sti
out
inc
test
jmp
imul
add
jb
add
ins
inc
movs
mov
inc
addr16
das
and
dec
mov
repz
ficom
mov
mov
push
in
sub
sub
mov
dec
push
fs
mov
xchg
adc
mov
pop
xchg
pop
jp
or
xchg
scas
test
sbb
inc
inc
mov
and
(bad)
pop
mov
arpl
aas
std
cmp
sbb
push
add
jge
cmps
pushf
ficomp
out
aaa
or
or
imul
jp
dec
dec
or
mov
movs
ret
sbb
mov
jbe
fimul
push
mov
lds
mov
mov
dec
and
sub
inc
int
in
cmp
jg
push
and
leave
push
sahf
sti
int
mov
xchg
fsubr
inc
mov
push
stc
mov
push
mov
cmp
inc
lods
pop
dec
shl
mov
xor
inc
(bad)
pop
je
aas
int
(bad)
fst
mov
sub
inc
test
adc
gs
out
and
push
data16
xor
ror
das
rcl
in
lods
cmp
sbb
mov
(bad)
imul
aam
test
scas
add
mov
add
mov
add
mov
add
mov
add
mov
pushf
push
rcl
dec
cli
jae
mov
inc
xor
or
inc
dec
cmp
js
push
mov
iret
mov
cmp
fld
cmp
lds
add
stc
and
and
out
jns
loopne
repnz
(bad)
mov
xor
pushf
xor
xchg
mov
add
mov
xchg
mov
and
sar
adc
jnp
dec
jbe
push
shl
out
pcmpgtw
cli
cmps
jmp
pop
shr
add
or
cmp
sti
movs
sub
push
nop
and
fs
(bad)
lods
les
fadd
dec
(bad)
mov
add
push
bound
lods
dec
loope
retf
rol
cli
push
icebp
jg
pop
mov
rcl
js
sub
xchg
addr16
scas
jnp
lods
dec
push
out
jp
xor
cs
jmp
add
mov
cdq
cmc
xchg
movs
ret
shl
out
jno
cmp
pop
ins
repnz
mov
cmc
xchg
movs
ret
shl
imul
mov
pop
sbb
xchg
loop
(bad)
jecxz
cmc
and
dec
sub
movs
je
push
adc
mov
aad
mov
mov
clc
scas
mov
clc
scas
mov
clc
scas
mov
clc
scas
mov
clc
scas
mov
clc
scas
mov
clc
scas
mov
clc
scas
push
popa
stc
scas
sbb
sub
mov
out
bnd
sbb
sub
mov
out
bnd
adc
jl
ss
jl
ss
jl
ss
jl
ss
jl
ss
jl
ss
jl
ss
jl
ss
adc
aaa
popa
push
push
pop
hlt
stos
inc
mov
mul
dec
mov
sti
jmp
imul
add
xor
and
icebp
out
inc
mov
repz
movs
jg
sbb
pop
xchg
fsub
fdiv
inc
sahf
and
pop
mov
xor
mov
rcr
inc
out
leave
(bad)
aas
dec
stc
mov
jnp
sub
loop
imul
sbb
xor
jns
jo
mov
clc
xchg
mov
mov
imul
push
sub
inc
loopne
mov
loope
pop
cs
in
dec
inc
inc
(bad)
enter
sub
outs
shl
and
push
ret
loop
push
xor
pusha
imul
push
pop
cmp
int
cmp
int3
pop
movs
mov
out
xchg
test
fucompp
pop
out
inc
push
rcr
ret
addr16
loop
in
ja
loopne
mov
jae
dec
sub
mov
pop
pusha
not
sahf
(bad)
pop
idiv
(bad)
pavgb
int
adc
iret
inc
jg
test
icebp
adc
iret
fisub
je
adc
ret
mov
in
pop
add
mov
mov
int
pop
bound
sbb
imul
popa
mov
inc
xor
jecxz
cmps
(bad)
xor
cs
xor
jne
push
stc
popf
sbb
adc
icebp
cli
and
hlt
es
jnp
xchg
test
std
out
inc
sub
inc
js
mov
daa
sbb
(bad)
xchg
aad
lock
sub
xor
sbb
(bad)
clc
out
pop
fcomi
into
jo
cmps
push
mov
dec
fistp
repz
data16
push
add
jmp
js
mov
addr16
lods
xor
xor
icebp
mov
mov
shl
push
inc
adc
mov
xchg
(bad)
rol
xor
clc
outs
inc
out
call
lods
loop
cdq
sbb
jae
retf
in
cmp
lea
inc
jbe
add
mov
sub
movs
fsub
sub
outs
lock
loopne
xchg
sub
mov
add
stos
ss
rcl
mov
jb
jno
lods
cdq
fnstenv
inc
aaa
aaa
out
sub
jno
pop
push
stos
mov
(bad)
int3
in
mov
xchg
cmp
lods
out
stos
mov
add
mov
push
mov
dec
add
push
mov
mov
stc
adc
xlat
jmp
xor
inc
jne
xchg
fdiv
mov
push
fisttp
xchg
out
pop
data16
and
imul
call
aam
jb
neg
int
out
inc
jns
and
mov
call
sub
das
mov
into
pop
dec
mov
mov
pusha
lock
sbb
test
cs
inc
(bad)
sbb
lods
dec
mov
outs
sub
mov
and
xor
cmp
cli
push
add
jnp
ja
lahf
ret
or
dec
sahf
pop
push
pop
or
mov
enter
dec
mov
xchg
mov
sbb
push
jae
add
add
mov
pop
out
jno
mov
lods
xor
(bad)
cmps
sub
add
inc
call
cmp
push
and
cmc
(bad)
movs
nop
mov
lahf
in
bound
inc
(bad)
mov
mov
mov
mov
mov
pop
icebp
xor
sub
shl
xor
mov
jne
sahf
jl
jo
stos
lock
inc
sbb
gs
adc
xchg
popf
lock
js
add
daa
fild
sub
ins
jb
out
stc
dec
adc
dec
push
addr16
call
dec
add
popf
jne
add
ror
xchg
nop
fs
in
(bad)
mov
xchg
and
jge
or
lea
repnz
xchg
std
inc
push
lods
ffreep
cmp
in
push
mov
movs
rol
pop
test
inc
jnp
mov
cmp
mov
stos
pusha
push
and
std
into
scas
mov
cmps
or
cld
add
ficom
add
or
loop
shr
mov
out
jbe
push
mul
or
sbb
mov
adc
fcom
cmp
add
or
scas
cmp
xor
jnp
mov
fmul
(bad)
into
mov
arpl
loopne
inc
mov
int3
xor
mov
and
mov
inc
and
mov
popf
adc
shr
ret
fucomip
push
jns
sub
push
push
cmps
pushf
sti
cmc
in
sbb
aad
mov
fwait
pop
and
add
(bad)
cli
retf
jl
sti
rcl
cwde
neg
add
(bad)
jg
scas
(bad)
fisub
ret
xchg
pop
jecxz
ins
das
mov
jmp
cmp
adc
jecxz
mov
daa
jbe
out
push
leave
pusha
mov
js
and
jl
sub
sti
fild
xor
cli
xchg
cmc
out
sar
shl
inc
repnz
xchg
sbb
xor
xchg
and
call
ror
out
sbb
sbb
scas
sbb
sbb
push
pop
lock
mov
pusha
jmp
jb
imul
cmps
call
or
mov
adc
mov
imul
push
fisub
adc
pop
mov
(bad)
(bad)
sub
(bad)
shl
mov
and
stos
mov
shl
fdiv
or
cwde
sub
mov
push
sub
fiadd
out
xor
clc
dec
and
xchg
jp
shl
lahf
inc
lods
div
sbb
int3
mov
repnz
xchg
xchg
lock
clc
sbb
xlat
imul
aas
dec
into
and
jle
je
jle
jbe
sbb
sbb
mov
sbb
ficom
sbb
js
dec
add
cmp
outs
add
mov
add
stos
cmp
xchg
stos
popf
adc
call
cmp
push
jl
jno
js
add
daa
(bad)
sub
scas
retf
push
push
adc
cmp
xchg
popf
or
cmp
retf
and
mov
mov
xor
add
mov
fist
xchg
mov
cmp
fcom
dec
add
jge
(bad)
xor
xor
push
mov
test
cmp
xchg
mov
cdq
cmp
mov
cmp
fst
or
push
push
jo
and
lods
jmp
jge
cmp
loop
into
adc
pusha
push
ret
xor
pop
inc
xor
movs
popf
(bad)
cmc
jnp
js
sbb
call
nop
mov
pop
nop
jmp
pop
mov
out
inc
mov
xlat
push
sub
sti
out
test
out
test
out
lods
out
push
mov
cli
push
mov
neg
ret
mov
or
ret
rol
loopne
mov
scas
or
mov
adc
mov
mov
cmps
mov
inc
int3
hlt
cli
push
lods
out
push
mov
mov
adc
ret
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
jmp
inc
xor
add
sti
scas
inc
mov
mov
inc
mov
loop
movs
imul
inc
movs
repz
div
push
movs
idiv
dec
mov
or
inc
shl
out
inc
test
jmp
imul
inc
mov
sti
retf
jmp
dec
enter
movs
imul
inc
lods
mov
mov
sub
dec
imul
repnz
or
jl
pop
loope
imul
push
pop
mov
push
adc
add
xchg
add
sub
sbb
push
fcom
jmp
sub
jnp
ins
pop
mov
sbb
scas
push
sub
mov
mov
ud0
mov
inc
lea
int3
pop
test
push
pop
ins
inc
cmp
test
div
mov
jmp
push
test
jbe
xchg
mov
daa
sub
pop
mov
mov
xor
jnp
add
xor
hlt
int3
add
fldcw
and
sbb
jo
call
cld
mov
sbb
push
in
hlt
adc
je
shr
fnsave
stos
push
ret
xor
fwait
sbb
mov
in
dec
push
xchg
and
idiv
ror
ret
stos
push
cmp
and
mov
jmp
test
jno
lods
mov
push
addr16
loopne
daa
jge
xor
mov
pop
mov
or
sub
add
ds
adc
lock
std
jae
xchg
lea
pop
gs
shl
inc
ins
les
leave
push
jb
out
xchg
dec
imul
add
rcr
scas
pop
mov
sbb
pushf
adc
pop
cmps
jmp
mov
jecxz
pop
mov
xchg
inc
inc
xchg
mov
sub
cmp
add
lahf
mov
cld
(bad)
adc
mov
adc
jbe
popf
mov
mov
pusha
and
cmp
(bad)
adc
cmp
cmc
mov
es
ss
pop
xchg
pop
push
(bad)
(bad)
xchg
ret
sbb
xchg
xchg
dec
mov
pop
jb
jmp
ins
jle
fiadd
repz
mov
fisttp
inc
add
mov
mov
fisttp
imul
xor
imul
or
or
rcr
sbb
add
fidivr
ret
sub
xor
(bad)
and
test
jo
out
add
inc
(bad)
jg
cmps
dec
cmp
mov
cmc
mov
inc
mov
ja
repz
mov
xchg
inc
pop
or
push
mov
adc
int3
mov
iret
add
imul
inc
cmp
lds
jmp
ins
jns
inc
sub
pop
fld
add
sub
dec
push
jle
inc
nop
out
les
xchg
stos
mov
scas
mov
imul
aam
jo
inc
mov
jmp
imul
inc
aam
cmp
loopne
mov
cmp
sub
jmp
add
shl
(bad)
out
je
imul
push
adc
mov
out
fistp
add
and
jmp
imul
jg
rcr
xchg
in
js
inc
and
jmp
mov
cmp
ins
dec
add
(bad)
sub
add
cmp
mov
xlat
sub
xchg
sub
push
push
xchg
inc
mov
xchg
mov
les
sti
gs
retf
mul
and
jmp
test
jecxz
test
scas
inc
adc
inc
mov
jmp
inc
mov
sti
cli
dec
mov
jmp
div
inc
lods
out
sbb
mov
in
mov
mov
mov
out
inc
xor
push
movs
jecxz
inc
out
fadd
cmp
es
inc
aam
sbb
xor
retf
xor
dec
push
and
jbe
xchg
pushf
push
movs
sbb
or
jb
dec
fwait
jl
loopne
push
into
int
icebp
add
movs
xchg
les
fs
les
lock
(bad)
mov
pop
lods
call
or
leave
or
int3
out
in
int
stos
mov
test
outs
push
dec
xlat
movs
cmp
add
pop
(bad)
or
dec
(bad)
xlat
adc
popa
add
in
add
xchg
push
(bad)
mov
sub
jns
lahf
cwde
out
das
jge
dec
or
test
popf
push
fadd
mov
dec
(bad)
jnp
sub
in
bound
into
(bad)
nop
fldenv
xor
test
inc
lds
shr
mov
xchg
dec
cs
int
fwait
or
xchg
ror
gs
lock
into
xchg
inc
ret
jno
enter
into
mov
iret
test
adc
movlps
jmp
push
sbb
sub
push
mov
sti
xor
pop
jle
dec
test
jns
fwait
add
pushf
movs
pop
inc
shl
fldcw
scas
xor
arpl
ss
mov
cmp
rcl
cli
call
repnz
lock
xor
das
inc
ins
into
jge
xchg
mov
push
test
fcomi
sahf
xchg
ds
xor
adc
clc
retw
sub
sahf
dec
test
inc
out
jno
jbe
shr
std
sub
stc
mov
outs
inc
push
popf
ds
pop
clc
imul
jbe
sbb
mov
popa
pusha
or
mov
cwde
pop
and
dec
loopne
push
pusha
jmp
sar
in
ss
pop
jno
cld
shl
repz
enter
clc
rol
inc
das
cld
in
push
cmp
scas
dec
pop
pop
cmp
push
in
mov
jbe
(bad)
outs
xchg
das
idiv
lahf
out
test
mov
mov
retf
loop
retf
movs
xor
jae
inc
mov
mov
mov
sub
xor
shl
lods
add
dec
jno
int3
jecxz
aad
call
xor
pop
mov
mov
or
mov
cmp
sub
jmp
cmp
or
arpl
enter
cmp
sub
mov
inc
push
imul
loopne
or
adc
adc
mov
and
fs
mov
fadd
in
add
bound
adc
pop
mov
sbb
xchg
rol
sbb
call
lods
xor
cdq
or
jne
add
mov
pop
stos
cwde
xchg
jb
inc
or
mov
in
dec
in
retf
jmp
inc
cmp
inc
mov
jmp
sbb
out
das
add
jae
test
mov
mov
mov
mov
das
imul
dec
mov
repz
fwait
push
(bad)
mov
jecxz
jecxz
and
in
mov
dec
dec
out
mov
dec
mov
mov
cmp
int3
sub
jg
and
lahf
out
mov
lea
jnp
xor
fld
jmp
pop
test
or
dec
cmp
push
mov
or
ret
aam
pop
outs
xor
mov
inc
push
jle
inc
jae
icebp
sub
jecxz
jecxz
and
ins
mov
dec
dec
out
mov
dec
mov
mov
cmp
int3
sub
jg
and
lahf
out
mov
lea
jnp
xor
fld
jmp
je
lahf
or
mov
sbb
mov
sub
sub
adc
fnsave
js
fsubr
out
sahf
cld
out
or
enter
cli
xor
xchg
xchg
mov
pop
cs
dec
loopne
or
pop
jo
pop
adc
xchg
mov
dec
sahf
aas
adc
mov
(bad)
jp
ror
scas
sbb
cmp
jle
push
aas
dec
dec
adc
xor
pushf
loop
or
cmc
fimul
movs
mov
(bad)
mov
jp
std
xlat
outs
retf
xlat
sub
jb
cs
enter
movs
ja
push
push
xchg
adc
mov
mov
cmc
mov
inc
jmp
mov
jp
inc
popw
enter
inc
xor
nop
fcom
test
lds
lahf
mov
or
sahf
(bad)
sbb
sbb
(bad)
pop
(bad)
jge
outs
mul
and
pop
out
jbe
or
cmp
mov
pushf
or
out
rcl
sbb
and
call
pushf
inc
cmc
cmp
ret
or
test
jno
aas
xchg
loopne
data16
jl
pushf
icebp
push
xor
sbb
push
dec
(bad)
add
imul
outs
add
push
sahf
dec
sub
mov
add
daa
pop
add
dec
std
into
jo
pop
sahf
setnp
inc
or
daa
fisttp
cmp
inc
pop
mov
lea
adc
cdq
in
mov
inc
or
dec
retf
jge
push
aas
scas
dec
ficom
adc
in
sub
push
loope
pop
sub
out
inc
jo
xor
push
jmp
mov
or
aaa
push
shl
jle
mov
fstp
or
pop
xor
pop
fcomp
adc
div
xchg
cmps
repz
mov
push
in
jnp
xor
xchg
xchg
fwait
cli
xor
sub
mov
xchg
jbe
test
pop
cdq
xchg
out
sub
jmp
fwait
test
popf
pusha
mov
jmp
xor
xor
aas
xor
pusha
and
outs
in
test
addr16
ret
fwait
sbb
mov
call
sti
push
jne
jo
or
in
daa
dec
movs
jb
loopne
jno
inc
fsub
mov
pop
ja
ins
imul
mov
add
mul
mov
mov
loopne
addr16
jnp
mov
imul
sbb
mov
rcl
sti
mov
push
enter
jg
mov
or
jns
xor
xchg
sub
pop
pusha
xor
pop
mov
imul
cmps
adc
loopne
std
xor
dec
cwde
xchg
cmp
nop
push
adc
sti
sbb
push
mov
fwait
(bad)
jmp
fdiv
shl
dec
mov
int3
ins
lea
and
icebp
test
mov
or
or
adc
popa
pop
push
xchg
iret
adc
and
jle
out
xor
and
xor
pusha
lock
cld
inc
fprem1
scas
out
push
fwait
scas
mov
jae
and
pop
or
out
add
cmp
int
std
lods
jne
jno
pop
push
movs
pop
sub
mov
(bad)
hlt
or
xchg
inc
jg
repz
jb
scas
sub
xor
pop
mov
cmp
mov
pop
movs
and
mov
out
mov
sti
jmp
mul
dec
movs
imul
mov
xor
shr
das
retf
jecxz
ins
mov
mov
enter
test
jno
movs
(bad)
test
outs
mov
jno
retf
mov
int
popf
les
aad
mov
lds
jne
sub
jno
ret
in
(bad)
cld
and
xor
dec
lock
inc
push
lea
cld
jge
aad
mov
lds
and
mov
stos
dec
mov
mov
stc
neg
mov
dec
ret
pusha
ret
lahf
fsubr
sub
dec
repz
push
(bad)
mov
sub
cmp
cmp
pop
jl
pop
inc
inc
je
iret
icebp
loopne
outs
rcl
je
mov
sbb
sahf
push
xlat
rcl
mov
jecxz
jae
pop
add
cmps
mov
and
call
push
or
outs
or
popf
mov
fisttp
jle
mov
sub
push
mov
jne
das
dec
and
inc
adc
scas
sbb
arpl
mov
test
jnp
ds
retf
push
scas
xor
stc
mov
(bad)
rol
mov
or
mov
ds
sar
or
pusha
outs
inc
pop
movs
adc
or
idiv
mov
mov
and
mov
xor
and
xor
inc
and
pop
pusha
punpckhwd
in
push
inc
movq
and
mov
inc
cs
or
pop
int
sbb
xchg
cmp
inc
sub
jnp
lds
div
push
dec
mov
fidivr
outs
(bad)
aam
stos
mov
cs
add
mov
je
(bad)
cmp
bound
add
sbb
outs
mov
adc
mov
cmps
xchg
sub
in
or
xlat
jbe
jb
cmps
jo
cmps
adc
push
push
out
in
ins
jae
fdivrp
push
xchg
cs
call
popf
jmp
and
arpl
jb
mov
aam
dec
leave
mov
inc
xchg
cmp
push
test
cmp
into
cs
or
inc
sbb
aaa
iret
or
xchg
ret
adc
div
xor
inc
pop
xchg
push
ret
sub
icebp
ds
push
pop
nop
daa
and
sub
cwde
int
xor
fwait
adc
out
div
mov
jmp
aaa
inc
fdecstp
ret
imul
lea
cmc
jmp
aaa
xchg
in
fwait
push
adc
loope
imul
and
ins
add
and
add
das
dec
test
out
ficom
inc
xchg
shl
sub
pop
or
add
xor
icebp
test
add
sbb
pop
push
jae
ret
add
mov
data16
push
imul
xor
mov
hlt
out
mov
jmp
dec
mov
jmp
jmp
sub
arpl
sti
sub
cmps
jno
test
ja
or
jp
jmp
out
xchg
icebp
cmps
int
mov
dec
aaa
ja
inc
fs
inc
xor
je
or
jnp
dec
enter
sbb
in
aad
xchg
dec
sub
je
cmp
add
dec
in
push
xchg
add
clc
dec
out
sbb
pop
mov
nop
jle
dec
in
add
mov
out
push
jp
iret
push
shr
push
jge
fldenv
mov
cmp
push
cmps
push
repnz
cmp
mov
inc
bound
adc
mov
and
sahf
dec
jae
cmp
les
jns
pop
jns
test
adc
or
clc
loope
cmp
sub
cmp
and
jle
xchg
cmp
add
dec
in
push
xchg
add
js
out
sbb
pop
mov
nop
jle
dec
in
add
adc
out
sbb
mov
add
dec
jne
lods
sbb
scas
outs
sbb
addr16
repz
fst
mov
adc
int3
fucompp
mov
outs
pop
jle
ja
jmp
mov
fistp
std
fsub
adc
sbb
xor
push
std
outs
add
ss
test
jge
mov
out
int
js
scas
sbb
jbe
jne
call
sbb
out
xchg
lea
jp
ficomp
mov
out
imul
mov
jge
mov
xor
popf
test
inc
call
sti
ins
(bad)
mov
test
sub
mov
cmp
fmul
shl
rcr
xchg
out
clc
xor
sahf
fild
ror
call
pushf
lds
out
aam
fiadd
stos
xchg
pop
imul
jnp
pop
dec
cs
pushf
cdq
fld
enter
jl
adc
enter
data16
sbb
shr
inc
inc
add
and
shr
dec
push
xchg
popa
dec
inc
push
inc
pop
jl
adc
enter
data16
sbb
shr
inc
inc
add
and
jecxz
aad
xchg
addr16
movs
fist
cmp
rcr
mov
cmp
mov
inc
jle
das
mov
scas
and
jne
lock
popa
or
call
adc
jmp
retf
push
das
xor
pop
push
lods
xor
push
mov
add
fwait
pop
xor
xchg
jne
loop
push
and
xchg
pop
and
out
mov
pop
lock
inc
fucomp
lods
add
mov
int
or
sbb
call
mov
jne
cld
mov
xchg
or
and
add
clc
xlat
test
push
into
jnp
sbb
jmp
push
push
jbe
inc
sti
mov
(bad)
add
cs
shl
xor
das
cmc
pop
loopne
xor
test
imul
xchg
call
and
pop
adc
jnp
imul
fwait
xor
cs
in
aaa
inc
ins
call
xchg
adc
xchg
shr
or
xor
rep
mov
ja
mov
lock
sub
xchg
inc
dec
pop
inc
jecxz
mov
sbb
in
out
mov
(bad)
xchg
jb
gs
add
ss
movs
cmp
jnp
jp
sahf
adc
jnp
ret
jecxz
jmp
or
out
jbe
cmp
retf
mov
cmp
inc
repnz
(bad)
(bad)
or
lahf
xchg
out
rol
cmp
ss
xor
jns
outs
cmps
fcmovb
adc
push
test
push
in
adc
pop
push
adc
inc
jne
cmc
fwait
sub
push
adc
xor
sbb
leave
std
popf
push
mov
inc
cwde
lahf
and
dec
push
lea
add
or
imul
ds
sbb
mov
scas
xor
pop
das
add
and
fdivr
stos
mov
mov
arpl
dec
xor
mov
(bad)
cmps
pop
xchg
test
outs
jo
add
jmp
cdq
jp
jge
jns
inc
or
adc
push
xchg
hlt
xchg
aad
fild
retf
test
bound
mov
inc
sbb
inc
mov
ins
es
sbb
(bad)
test
loopne
imul
jae
fidiv
fdiv
push
hlt
(bad)
shr
pop
xor
cmps
lods
aas
jecxz
and
push
scas
cs
ja
xchg
xchg
movs
jnp
in
mov
cmc
mov
add
mov
inc
je
cmove
out
in
push
mov
pop
fisttp
add
dec
cmp
(bad)
mov
jnp
mov
push
adc
xchg
jne
popf
inc
jge
mov
dec
add
div
mov
(bad)
sub
in
cmps
jl
mov
cdq
dec
std
leave
clc
outs
xchg
dec
sub
add
mov
pushf
dec
ret
add
test
mov
sbb
cmp
mov
jbe
mov
(bad)
call
push
ret
pop
data16
shr
test
loopne
mov
xor
mov
add
lds
xor
sub
lods
lahf
cs
jnp
nop
loope
cs
fisubr
arpl
lods
inc
mov
mov
sar
inc
(bad)
pop
popa
jo
push
mov
iret
or
push
push
fbstp
(bad)
push
dec
test
adc
pop
jmp
jp
push
js
stos
ins
pop
dec
not
push
sbb
push
cld
pop
sbb
xchg
shr
scas
mov
pop
loop
mov
and
xchg
enter
popf
fs
(bad)
aas
cmp
sahf
jecxz
mov
xlat
mov
out
cmp
call
jmp
into
inc
test
push
mov
ror
cdq
xor
xchg
stos
push
rcl
daa
fnsave
or
icebp
cmp
sti
xor
pop
adc
jmp
mov
imul
popa
mov
ins
xchg
mov
mov
pop
jbe
js
arpl
das
shl
idiv
or
sbb
sbb
or
iret
push
pop
ss
sub
xlat
ret
inc
jmp
mov
sub
cmp
pop
add
cmp
rol
push
jl
dec
mov
pop
xor
add
lds
adc
fs
cmp
sbb
lock
push
cli
call
mov
out
shr
aam
sar
aas
mov
mov
loop
jae
fldenv
out
sbb
push
int3
inc
pusha
repz
test
mov
mul
das
shr
sub
adc
jo
stc
inc
in
out
inc
or
out
movs
sti
loop
mov
imul
add
jae
test
jb
inc
loop
ins
and
test
das
addr16
inc
mov
repz
jb
fstp
jb
loopne
bound
div
sub
jge
xchg
jno
push
scas
adc
adc
test
mov
enter
fnstenv
rcl
fwait
mov
fwait
or
cwde
dec
pop
adc
push
push
jbe
dec
or
jmp
frstor
or
mov
lods
es
inc
xor
cmc
movs
pop
push
fucomip
loope
sbb
ds
push
inc
sbb
cmp
xor
mov
push
sbb
data16
and
or
popf
xchg
jmp
sbb
int3
fucomp
sub
jp
outs
fcom
aaa
outs
or
mov
dec
mov
in
call
cdq
fld
xchg
inc
jmp
or
pop
cmp
xlat
jmp
in
div
in
pop
push
push
add
sub
cwde
or
outs
pop
retf
stc
push
(bad)
ja
push
adc
mov
dec
stos
ret
sub
cmp
aas
cmp
inc
inc
xchg
out
and
jle
sub
fcom
add
or
out
fdivr
add
sub
xor
dec
add
inc
scas
out
xor
push
inc
arpl
mov
jno
lahf
fidivr
inc
xchg
into
in
fwait
add
jnp
lea
(bad)
push
push
sub
and
repnz
mov
xchg
or
pop
add
dec
test
xor
fld
mov
popf
push
jns
repnz
jne
in
cmp
mov
adc
popa
fidiv
clc
jp
push
adc
or
xor
inc
test
sbb
dec
push
imul
add
fdiv
mov
cmp
outs
outs
jecxz
js
add
mov
cmp
mov
(bad)
cmp
(bad)
pop
outs
test
int
inc
ins
shr
arpl
cmp
cli
inc
repz
pop
mov
fst
shl
pushw
es
mov
push
xchg
(bad)
addr16
out
mov
push
shr
sbb
cmc
add
std
xchg
and
hlt
mov
scas
(bad)
dec
xchg
mov
or
pop
(bad)
pop
jb
cmps
or
test
add
pop
fwait
loop
sub
jle
mov
(bad)
push
fcom
loopne
sbb
xchg
fist
inc
jmpw
shr
mov
jle
push
outs
xchg
pop
add
stos
popf
inc
mov
test
fst
loopne
inc
lds
adc
pop
test
jb
adc
sub
js
adc
xor
sbb
adc
(bad)
jp
and
mov
hlt
mov
arpl
xlat
dec
cmp
and
sti
scas
sbb
mov
mov
sahf
out
cmovge
sub
cdq
xchg
outs
test
out
outs
neg
movs
adc
sub
hlt
loop
cmp
ins
add
movs
div
shr
mov
pop
push
outs
outs
or
mov
inc
sbb
inc
icebp
imul
dec
dec
cmp
push
in
mov
(bad)
clc
mov
enter
inc
dec
jge
xchg
mov
lods
cwde
not
outs
leave
push
xor
add
xchg
or
cs
jbe
scas
mov
out
aad
cwde
(bad)
cmp
popf
call
mov
or
out
mov
cmp
ret
dec
sub
pop
icebp
fisubr
xchg
mov
sub
(bad)
mov
push
push
inc
cmp
pop
dec
jp
test
loop
cwde
push
repz
add
or
cmp
ins
mov
mov
mov
mov
inc
ret
(bad)
test
inc
xor
sub
lea
out
out
movs
ror
pop
mov
adc
xchg
inc
mov
mov
in
mov
cmps
mov
xor
ss
sbb
xchg
cmp
call
(bad)
mov
add
dec
lods
mov
out
and
mov
sub
not
dec
out
add
fwait
xchg
hlt
aam
xchg
xchg
cld
(bad)
(bad)
jns
mov
cdq
fmul
or
mov
dec
sub
enter
add
sbb
cmc
cmp
adc
or
push
pop
dec
pop
and
adc
test
jo
push
or
repnz
in
push
rol
sbb
data16
jl
adc
dec
enter
movs
imul
inc
lods
div
sbb
xchg
fiadd
ins
pop
daa
push
ds
out
adc
mov
hlt
sub
fistp
popf
jnp
call
push
test
aad
mov
rcr
adc
sub
add
xchg
mov
adc
js
jmp
add
mov
rcr
dec
movs
mov
pop
inc
adc
mov
push
push
inc
mov
dec
movs
out
push
pop
jo
sub
cmp
movs
shr
lock
scas
lea
js
arpl
cmp
or
pop
pop
hlt
push
fwait
add
mov
(bad)
jle
and
adc
lahf
into
add
fwait
mov
inc
pop
in
fstp
dec
mul
std
pushf
xchg
cmp
dec
test
and
mov
mov
hlt
push
mov
into
add
or
inc
push
fwait
add
mov
pop
hlt
scas
inc
mov
repz
mov
imul
inc
mov
imul
xchg
out
add
aaa
jmp
mov
enter
lods
repz
popf
jecxz
int
out
mov
jle
retf
add
(bad)
adc
and
cmp
sub
xchg
aas
fbld
and
div
adc
jle
inc
pop
stc
mov
fsub
xor
adc
retf
xchg
cmp
(bad)
dec
dec
sub
sub
mov
stos
push
sub
ins
arpl
mov
add
iret
adc
retf
cdq
mov
pop
pop
mov
jmp
pop
and
mov
hlt
or
and
push
xchg
ret
xchg
mov
(bad)
sbb
mov
xchg
aam
mov
mov
cmp
or
rol
imul
mov
push
stc
xor
loopne
sub
push
nop
sub
adc
inc
lea
cmp
add
test
std
aas
(bad)
div
lods
cmp
aam
mov
mov
in
sub
mov
jae
(bad)
jecxz
xor
add
imul
ret
jnp
arpl
std
xchg
cmp
jmp
push
outs
sub
inc
lods
sbb
iret
add
in
loope
lock
stos
sbb
scas
sbb
dec
dec
pop
mov
or
dec
and
movs
dec
(bad)
outs
lea
jmp
add
adc
pop
adc
and
fsub
arpl
adc
dec
pusha
in
outs
cmp
dec
loop
jae
dec
add
fsub
push
into
pop
frstor
cli
add
sub
movs
mov
cmp
shl
inc
bound
or
popf
and
sbb
fnstsw
aad
xor
and
test
adc
js
cmps
push
fistp
mov
inc
mov
push
adc
lahf
sub
scas
push
retf
test
push
in
dec
(bad)
mov
aas
and
rol
mov
outs
loop
add
leave
cmp
mov
ss
fisttp
push
push
xchg
out
retf
mov
sub
dec
push
xchg
cmp
jne
xor
(bad)
shr
xor
xchg
imul
and
faddp
std
ss
or
in
aad
mov
inc
rcr
in
xor
gs
sbb
in
mov
cli
repz
jl
or
adc
into
push
addr16
mov
push
das
jecxz
push
and
cli
aam
and
das
ss
mov
lahf
jecxz
hlt
cmp
scas
cmps
cmps
xchg
fdivr
es
repnz
dec
ret
sti
sub
push
push
leave
sub
cmc
loopne
fisubr
sub
sbb
sbb
sub
into
movs
sbb
popf
mov
div
mov
test
(bad)
cwde
add
fimul
mov
sub
adc
mov
dec
out
sub
xchg
nop
push
(bad)
mov
jmp
ficom
inc
xchg
pop
dec
loopne
add
push
outs
and
pop
sbb
(bad)
adc
mov
mov
(bad)
icebp
mov
mov
xor
not
gs
jge
jl
dec
push
hlt
sub
mov
fld
out
jmp
add
repz
mov
repz
imul
add
lods
ret
add
je
and
jmp
jge
mov
xor
adc
pop
or
sbb
daa
cmp
push
popf
vcvttss2si
enter
and
cmp
(bad)
jb
add
mov
fnstenv
movs
test
jge
mov
xor
adc
pop
or
sbb
cmp
mov
mov
scas
std
jp
aad
xor
and
loopne
mov
add
adc
fadd
in
pop
outs
add
push
bound
jmp
out
mov
js
es
dec
loop
leave
out
lahf
(bad)
dec
mov
mov
xchg
and
into
adc
div
pusha
xchg
jp
ret
and
(bad)
cmc
cs
into
imul
inc
icebp
in
push
lock
and
rol
aas
inc
inc
out
add
icebp
mov
dec
out
xchg
out
out
jmp
xchg
fbld
pusha
pop
pop
fadd
xlat
xlat
fnstenv
mov
nop
mov
scas
enter
cdq
sub
jle
xchg
mov
sbb
cmp
call
test
xor
fisub
aas
or
xchg
loope
adc
scas
repnz
mov
mov
in
test
movs
addr16
rcl
dec
in
push
outs
gs
jp
xor
clc
div
fsub
push
jbe
push
or
(bad)
call
sub
cmp
das
adc
jnp
cld
in
outs
inc
pop
mov
into
ins
scas
xor
pop
cmp
cmp
aas
jbe
cwde
bswap
ja
sub
add
lea
je
push
data16
add
jle
ror
retf
ins
outs
mov
fst
pop
fmul
adc
retf
sbb
cmp
mov
fs
mov
inc
add
xchg
sub
dec
fcmovu
ret
(bad)
ror
xchg
jl
cmps
adc
retf
idiv
loop
xchg
sar
stos
mov
call
mov
jle
rcr
into
pop
into
cld
movs
imul
lods
clc
and
cli
psllq
in
in
test
cmps
(bad)
aam
adc
rcl
inc
jl
jbe
out
mov
sub
sbb
fisttp
ins
out
movs
push
(bad)
out
loope
xor
jnp
xchg
ds
fistp
mov
(bad)
cs
ret
imul
stc
fs
xor
xchg
push
sub
push
jae
fwait
retf
das
push
fistp
cmps
scas
adc
dec
pushf
pop
push
ds
sub
ss
rol
mov
stos
retf
xchg
sbb
lahf
jmp
pop
jmp
les
or
fld
movs
enter
and
aad
idiv
je
leave
mov
nop
push
and
sbb
into
inc
mov
mov
in
mov
out
pop
ret
repnz
hlt
fs
pop
mov
(bad)
inc
test
ret
cmp
adc
sbb
cmp
mov
mov
add
daa
sbb
mov
xor
loop
inc
pop
cli
xlat
fld
rol
jae
pusha
sub
fs
ins
adc
inc
pop
or
inc
sub
loop
lods
imul
dec
lods
repz
imul
test
jo
das
out
out
inc
mov
repz
mov
aam
(bad)
sbb
mov
(bad)
inc
xor
mov
mov
xchg
cmp
xchg
dec
in
mov
xor
or
add
pop
jl
idiv
shl
sub
not
pop
aam
rcl
push
jle
mov
inc
sar
ret
je
cwde
arpl
nop
push
mov
mov
icebp
mov
jmp
leave
gs
and
(bad)
pop
movnti
add
mov
pop
lea
sub
mov
adc
mov
iret
mov
mov
clc
cmp
inc
and
repz
inc
and
enter
push
push
push
call
mov
fld
movaps
mov
xchg
mov
xor
lods
inc
fild
lea
call
xor
mov
xor
sbb
push
scas
and
xchg
sub
int3
sub
mov
mov
(bad)
fwait
push
hlt
(bad)
repz
jnp
shr
mov
inc
vxorpd
pushf
inc
push
(bad)
dec
fstp
xchg
loopne
les
mov
jnp
cld
push
sub
cmc
inc
sub
mov
add
adc
inc
xor
mul
lahf
jne
ins
jp
mov
mov
in
jmp
inc
xchg
dec
sub
call
ds
sub
stos
push
push
enter
mov
je
out
pop
dec
ret
repnz
xchg
mov
lods
and
push
pushf
dec
xor
bound
push
and
sub
fmul
and
push
movs
mov
sbb
pop
shl
mov
jle
pop
hlt
fcomip
nop
cwde
and
mov
sbb
pop
shl
mov
repz
push
pop
xchg
ins
pusha
pop
ret
mov
or
iret
call
sbb
and
add
mov
(bad)
cld
inc
and
imul
mov
xchg
and
jns
js
or
test
loopne
outs
jl
add
sahf
push
je
pop
lock
arpl
gs
out
push
aaa
inc
(bad)
push
in
std
push
xor
cwde
mov
pop
imul
lahf
mov
stos
lds
sub
lahf
ins
out
nop
jns
add
mov
je
mov
inc
mov
jle
les
or
xchg
cmp
and
push
pop
mov
pop
hlt
and
(bad)
cli
enter
mov
cmps
mov
scas
inc
inc
cmp
jmp
sub
sub
movs
and
push
cmps
inc
clc
adc
icebp
xchg
sub
xor
in
mov
stos
test
in
jmp
adc
or
mov
outs
pop
or
fist
cwde
mov
cwde
cs
and
stc
pusha
inc
aad
gs
and
push
xchg
outs
sub
inc
jne
gs
(bad)
fmul
sbb
std
mov
dec
cs
fwait
mov
movs
push
inc
inc
push
cmc
outs
out
not
movs
(bad)
cli
jmp
call
sbb
xchg
hlt
dec
in
push
mov
jge
inc
outs
sub
ror
fadd
or
xor
cmp
mov
inc
enter
xor
jns
ins
jmp
lods
xor
jp
enter
retf
or
sbb
lods
add
xor
and
xchg
icebp
cmp
mov
jmp
mov
aaa
jnp
lods
(bad)
push
cmp
(bad)
xor
scas
test
cli
daa
retf
call
call
repz
arpl
jl
inc
and
pop
das
xchg
jmp
inc
cmp
movs
push
(bad)
dec
jns
lahf
(bad)
sub
jg
or
push
scas
repz
lea
movs
and
stos
and
(bad)
fidivr
icebp
mov
mov
fadd
loop
out
push
xchg
scas
dec
stos
mov
jle
mov
jb
xchg
or
mov
ret
fistp
dec
cld
out
sub
lea
add
test
or
outs
jge
sub
xchg
fcom
cmps
test
cwde
push
mov
hlt
and
push
cmp
pop
jg
or
gs
in
lods
clc
push
cmp
fidiv
mov
jge
cld
dec
cmps
pop
sbb
retf
jb
mov
mov
jno
cwde
stos
scas
xchg
and
mov
pop
mov
push
inc
inc
inc
dec
(bad)
data16
xchg
cmp
cli
popa
inc
ret
inc
adc
loop
or
xchg
adc
xor
inc
push
adc
call
jo
pusha
std
cmps
fwait
mov
add
cs
sbb
into
out
out
push
das
jne
imul
dec
daa
les
pop
das
cli
int3
adc
fadd
fsub
lods
outs
mov
jno
imul
push
gs
out
mov
repnz
xchg
or
adc
js
enter
pop
stos
adc
cmp
call
ds
shl
mov
cdq
push
push
rol
mov
bound
mov
inc
das
adc
jo
cmc
pop
cmps
jmp
mov
test
data16
and
mov
enter
dec
mov
jae
test
and
les
mov
inc
pop
jmp
les
aam
or
jbe
mov
lds
sub
fs
mov
scas
call
sub
adc
adc
sub
xchg
inc
pop
data16
mov
jmp
jecxz
xor
stos
dec
movs
icebp
lods
je
movs
ret
add
pushf
mov
xor
adc
or
and
xchg
dec
loopne
arpl
scas
mov
fsubr
in
bound
adc
xchg
(bad)
bound
out
imul
addr16
fs
mov
out
fs
mov
clc
sub
cmps
cs
or
cmp
mov
in
lea
ror
popa
loope
out
inc
mov
imul
mov
int3
hlt
loop
lods
jmp
dec
test
cli
dec
lods
sti
(bad)
lods
out
push
mov
neg
(bad)
ins
mov
(bad)
fidivr
fidivr
(bad)
push
loopne
mov
sbb
(bad)
mov
adc
cmps
jmp
push
movs
sti
(bad)
pusha
mov
into
adc
jecxz
adc
fstp
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
loope
lock
js
xlat
out
movs
(bad)
loop
in
scas
inc
movs
sti
jmp
dec
mov
repz
div
pop
mov
jecxz
push
cmps
(bad)
out
inc
mov
sti
jmp
imul
inc
mov
jecxz
lods
jmp
je
pushf
jmp
sti
mov
mov
inc
or
ja
mov
jns
and
dec
fist
lds
sub
cmp
mov
jmp
(bad)
clc
xchg
retf
test
inc
mov
aaa
add
xchg
mov
aaa
cmc
mov
push
cmp
mov
call
lods
jmp
fcom
out
out
js
bound
icebp
push
gs
sbb
sbb
clc
jb
dec
jmp
div
jp
ror
xor
jg
add
call
arpl
das
stos
adc
add
jp
cwde
fst
sbb
inc
mov
aam
xchg
mov
inc
pushf
hlt
sub
popa
idiv
and
enter
out
jmp
push
inc
inc
add
pushf
mov
push
cwde
xor
hlt
retf
outs
inc
call
fsubr
jmp
test
inc
cmp
dec
cmp
sbb
sub
inc
adc
or
hlt
cmp
(bad)
cmp
inc
lahf
mov
gs
pop
mov
jge
outs
test
fld
add
pop
inc
call
test
cs
mov
jnp
mov
pop
sub
das
pop
repz
mov
push
mov
test
sbb
or
fwait
out
inc
cmps
in
push
mov
inc
imul
je
hlt
dec
add
mov
stc
ds
mov
mov
hlt
cmc
mov
pop
dec
push
das
dec
cmp
hlt
xor
mov
or
pop
jo
pop
div
scas
add
jae
(bad)
jecxz
mov
mov
mov
fidivr
ret
hlt
cwde
adc
cli
adc
dec
mov
push
jmp
cwde
pop
into
int
imul
jge
inc
mov
push
aaa
xchg
pop
pop
push
mov
in
adc
push
xchg
mov
fsub
fwait
xchg
adc
xor
add
popa
sbb
add
jp
(bad)
push
mov
mov
(bad)
fcmovne
adc
dec
push
mov
mov
mov
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
div
jmp
jmp
not
sub
push
(bad)
or
ja
push
mov
inc
xor
inc
mov
neg
jge
cdq
dec
sbb
cmp
inc
adc
jmp
mul
fsub
ror
inc
shl
inc
mov
imul
inc
mov
imul
inc
mov
imul
mov
mov
cli
inc
mov
repz
mul
push
mov
out
pop
mov
ja
xchg
in
scas
ds
jns
es
inc
pusha
or
inc
xor
aam
jecxz
inc
xchg
add
jmp
or
dec
pop
push
xor
xchg
out
push
into
ja
movs
mov
mov
or
shl
(bad)
(bad)
mov
xor
ja
dec
pushf
mov
inc
adc
pop
mov
mov
loopne
dec
and
or
mov
sti
enter
xor
jl
jae
fisubr
inc
adc
rcr
inc
pop
vmovshdup
pusha
lock
sbb
rcr
in
scas
in
int3
adc
inc
int3
ror
jmp
test
das
jno
push
je
out
adc
and
movs
popf
push
stc
push
and
mov
or
addr16
push
mov
int3
cmc
xor
jbe
call
push
or
adc
or
es
mov
mov
arpl
add
cmp
in
out
cmp
mov
ror
adc
push
call
addr16
xor
dec
mov
clc
add
(bad)
aas
leave
add
xchg
jg
sbb
test
dec
xchg
call
jbe
test
inc
retf
int3
in
cli
(bad)
push
icebp
jge
pop
loope
movs
jg
pop
pop
loope
hlt
mov
cwde
aam
mov
inc
stc
js
xlat
sbb
mov
sti
xchg
or
xchg
inc
cmp
xchg
xor
in
mov
inc
mov
mov
loopne
lea
icebp
bound
cld
xor
pushf
inc
nop
push
lea
mov
shl
punpckhwd
arpl
pop
mov
mov
or
lods
(bad)
or
and
cmp
jb
sbb
mov
popf
pop
mov
add
lea
data16
cmp
jle
xchg
dec
sbb
and
ja
popf
stos
or
(bad)
push
ror
push
retf
push
nop
imul
add
mov
xchg
pop
mov
cli
pushf
jno
sbb
jle
and
ret
outs
inc
adc
pushf
retf
out
adc
cmp
call
rcl
pushf
fwait
movs
test
fwait
icebp
jp
and
out
dec
add
jnp
cmp
or
imul
js
out
call
je
push
imul
dec
mov
out
jmp
idiv
inc
test
outs
add
mov
movs
les
xchg
aaa
sub
jae
jmp
mov
retf
hlt
out
mov
movs
sbb
and
aas
xchg
or
cmp
test
je
ret
lds
dec
clc
clc
cmp
cld
xor
cmp
push
iret
mov
cs
loope
fwait
sbb
inc
nop
dec
test
and
and
cmp
inc
pop
in
sub
lods
iret
mov
movs
adc
dec
xchg
popf
repz
cdq
cmp
dec
push
repz
dec
out
mov
xor
sbb
ret
add
mov
push
lock
mov
pusha
mov
sahf
(bad)
in
dec
das
push
jae
cld
pusha
cmp
cmc
add
xchg
test
test
sub
push
inc
jecxz
fnstenv
hlt
push
xchg
cmp
mov
stos
int3
mov
loop
icebp
mov
fs
fs
popf
aas
jecxz
fnstenv
repnz
outs
pop
loopne
jmp
inc
rol
std
outs
and
cld
jne
(bad)
cmp
cmc
pop
dec
sub
in
mov
and
imul
or
cmp
adc
xor
adc
ss
out
dec
mov
rcl
imul
xor
data16
aas
mov
pop
lods
(bad)
mov
cdq
push
out
addr16
arpl
adc
shl
test
mov
jnp
mov
cli
out
data16
fdivr
xchg
dec
mov
cmp
mov
ins
cmp
pop
add
nop
fwait
inc
inc
loope
test
sbb
inc
sub
dec
cmp
ffreep
retf
pop
(bad)
jmp
aas
or
test
adc
pop
call
push
or
mov
dec
repz
cmp
dec
repz
mov
pop
cmp
ins
repz
mov
mov
cli
mov
xor
mov
ds
pop
jg
outs
jmp
add
sbb
pop
rol
(bad)
loopne
imul
jno
jne
xlat
add
add
dec
xchg
sbb
cdq
add
add
or
rol
ss
push
mov
bound
cmps
jmp
mov
mov
outs
and
arpl
jno
sbb
js
cmp
call
mov
je
jo
imul
xchg
add
push
ret
cmps
loope
cmp
push
cld
daa
mov
jmp
push
mov
mov
push
inc
out
pop
xchg
sahf
repz
cdq
dec
les
fisttp
movs
mov
fstp
shl
imul
call
das
(bad)
sahf
outs
mov
retf
mov
call
imul
call
lahf
dec
add
or
ins
fs
and
es
jecxz
clc
push
pushf
add
movs
(bad)
cli
xor
add
mov
(bad)
fild
and
cmps
cld
scas
neg
sub
popf
div
push
sub
add
outs
out
es
fsub
and
imul
out
or
adc
and
mov
mov
out
xchg
pop
mov
pop
retf
xchg
cmps
addr16
fucomip
cwde
mov
sbb
sub
or
inc
sar
rol
add
fdiv
sub
jg
pop
pushf
dec
mov
jg
and
call
inc
fsub
imul
loop
mov
repnz
sbb
sub
adc
mov
out
cmp
lea
ret
aam
sar
sbb
sbb
in
cwde
cmp
in
mov
es
and
aad
inc
test
sub
push
or
mov
movups
xor
icebp
in
and
into
cmps
sbb
enter
cmp
push
movs
sti
test
jmp
mul
push
mov
jecxz
mov
and
sub
movs
(bad)
cmp
loope
out
mov
enter
test
imul
or
(bad)
cld
or
mov
push
ret
(bad)
movs
loopne
jne
mov
xor
icebp
jge
lock
mov
stos
sbb
mov
movs
jno
inc
push
sbb
sub
hlt
jb
(bad)
sub
std
je
pop
ret
pop
mov
fst
mov
dec
daa
and
adc
in
xchg
ret
rcl
movs
int3
push
push
movnti
(bad)
jmp
xchg
sub
imul
mov
int
fs
loope
loopne
dec
pop
pop
das
push
out
sahf
inc
mov
cld
and
pop
movs
inc
jne
repnz
cmp
jp
xor
test
hlt
jle
mov
out
fcmovu
out
jnp
fld
fidivr
std
mov
popf
xchg
enter
enter
pop
int3
sbb
cli
jge
into
sub
pusha
mov
scas
sbb
cli
jge
into
sub
lods
mov
les
hlt
adc
pop
xchg
jbe
cmp
hlt
adc
pop
jecxz
mov
cdq
call
or
cmp
add
mov
mov
jmp
(bad)
nop
push
shr
sub
lods
rcl
jbe
js
xchg
(bad)
shl
(bad)
or
inc
pop
(bad)
sbb
jecxz
mov
rol
jb
iret
jecxz
mov
and
imul
popa
xor
arpl
les
mov
shl
jg
cmc
sub
cmp
pusha
fdivr
(bad)
rol
xchg
xchg
xchg
ja
adc
loop
outs
out
jmp
sti
adc
arpl
mov
neg
pop
rol
mov
mov
aas
xor
and
mov
ss
mov
and
push
call
mov
(bad)
outs
jnp
call
cmp
mov
nop
cwde
inc
sar
or
cmp
jmp
push
mov
(bad)
and
sar
imul
mov
movs
imul
xchg
in
xchg
clc
fadd
xchg
neg
inc
test
xor
in
loope
lods
push
test
loop
add
ja
adc
(bad)
fbld
ins
mov
sub
inc
aas
in
pop
stos
shr
fwait
lock
hlt
add
cmps
sti
mov
ss
call
jae
into
into
mov
xchg
sahf
jbe
jmp
push
sbb
call
call
sbb
add
retf
or
fsubr
jle
xchg
and
loop
mov
push
(bad)
adc
inc
inc
aad
es
bound
pop
arpl
cs
jp
push
cdq
aad
les
jo
fdivr
popf
aad
pop
sub
loop
mov
(bad)
inc
nop
(bad)
jmp
jmp
mov
cmps
adc
mov
push
inc
out
sub
stos
jb
ret
out
xor
loopne
stos
or
out
mov
add
repz
mov
jo
mov
or
mov
scas
pop
lahf
in
cs
stos
test
jo
retf
mov
repz
gs
shl
jo
scas
int3
or
js
aam
mov
imul
push
push
adc
sub
int
cmp
add
aad
adc
mov
jo
in
cld
test
dec
outs
add
ds
cmp
push
sti
dec
jne
aam
cmp
sahf
test
popf
add
fst
shl
add
mov
shl
int
push
nop
imul
inc
mov
div
rcr
in
mov
jg
les
out
pop
movs
fsubr
addr16
pop
add
sub
aad
push
jecxz
fnstenv
movs
mov
xchg
adc
daa
mov
adc
nop
in
pusha
cmp
movs
cmp
mov
push
iret
mov
cmp
jae
add
outs
js
loop
dec
lahf
arpl
lds
das
jnp
or
sub
fisttp
sub
pop
pop
adc
dec
retf
(bad)
jmp
movs
loope
adc
inc
xchg
xchg
fcom
lea
daa
push
cmp
das
arpl
jmp
in
mov
sub
adc
dec
push
mov
pop
xchg
mov
movs
repnz
mov
loop
arpl
aam
arpl
dec
lea
lea
jnp
jbe
jo
and
sub
int3
std
call
add
jns
or
add
and
ins
sub
out
xchg
jae
test
jg
jg
bound
nop
hlt
or
loope
jp
dec
or
retf
fnsave
sub
mov
das
mov
lahf
das
hlt
mov
adc
xor
mov
xor
or
lods
leave
add
cld
add
mov
sbb
inc
cmp
dec
and
jmp
pop
jns
xchg
sbb
scas
out
int
mov
dec
rcl
jno
clc
outs
or
ds
push
mov
movs
aam
pop
cdq
ficom
not
xchg
mov
cmp
repz
mov
loop
sub
repnz
shl
out
out
jg
or
inc
aad
xchg
xchg
lods
push
or
daa
inc
out
mov
cmps
fs
sub
inc
ss
adc
xlat
repz
and
test
cmps
jne
jmp
(bad)
fsubr
pop
hlt
into
jp
and
jmp
mov
xor
mov
test
mov
push
stos
mov
and
ins
test
or
mov
movs
and
push
cdq
xchg
ins
sub
and
cmc
push
jae
nop
mov
sub
cmc
mov
jae
ds
add
push
pop
loopne
les
fwait
out
gs
dec
xor
fs
or
leave
rol
je
dec
sbb
dec
imul
push
inc
dec
mov
add
push
push
adc
scas
int
mov
add
int3
jle
retf
sub
pushf
sub
fcmove
or
ret
rcl
loopne
cmp
adc
xchg
test
mov
scas
jmp
lods
pop
mov
jp
daa
bound
lock
inc
xor
xchg
fld
or
pop
loope
rcr
xor
jp
pushf
xor
stos
jae
xor
fnstsw
mov
dec
ins
add
xchg
push
sar
es
xchg
mov
add
fidivr
aad
xor
pop
add
outs
mov
cmp
cli
mov
mov
dec
cmp
das
push
fist
popf
loop
sub
add
xor
sbb
add
in
and
arpl
dec
(bad)
aam
xchg
ficom
lods
cli
mov
inc
fmul
outs
ds
inc
shr
mov
push
mov
sbb
jg
clc
imul
hlt
out
jo
mov
ficom
mov
and
ret
js
arpl
mov
xchg
aam
mov
cld
test
sbb
sbb
fist
and
mov
jge
popf
mov
mov
pop
clc
shl
cmp
inc
outs
movs
pop
pop
sbb
lods
xchg
stos
mov
ret
xchg
adc
mov
mov
push
and
xlat
ffree
sbb
or
jg
imul
in
test
pop
ins
push
leave
repz
retf
fidivr
and
add
out
mov
sub
cmps
jno
(bad)
or
sti
ins
and
dec
pop
imul
push
cdq
int
pop
mov
pop
pop
xchg
ja
orps
dec
dec
ins
adc
inc
pop
leave
mul
mov
js
les
lods
repnz
pop
lds
pushf
jo
xor
mov
adc
and
jno
jp
pop
dec
xchg
pop
or
jle
ja
retf
mov
push
out
xchg
mov
xchg
sub
push
movs
out
sub
jbe
adc
movs
lahf
and
push
mov
nop
mov
loop
and
mov
inc
loopne
jbe
in
ror
es
cdq
ret
and
in
(bad)
fnstcw
shl
call
dec
loope
or
adc
js
xor
retf
push
adc
mov
fs
in
or
and
and
(bad)
pop
sub
xor
shl
dec
loop
jp
mov
movs
sti
addr16
mov
ret
cli
mov
inc
cmp
push
mov
repnz
jmp
mov
loope
aam
xor
pop
push
and
call
fisubr
push
push
jns
jbe
cmp
lds
push
movs
xlat
jnp
inc
mov
mov
pop
out
movs
sti
loop
mov
repz
jae
and
xor
and
retf
hlt
out
mov
and
nop
pop
ins
add
xchg
sub
sbb
shl
xor
add
and
imul
xor
jmp
ja
fsubr
mov
das
jge
outs
xchg
dec
xchg
pop
pop
popf
add
int
jnp
loope
or
cdq
push
adc
jno
inc
jecxz
sahf
ror
mov
sub
lds
sub
sbb
rcr
xor
sub
push
retf
loopne
mov
dec
pop
mov
inc
sub
(bad)
cdq
sub
jl
add
sbb
cmp
inc
repz
xchg
aas
add
in
jnp
out
mov
cli
dec
add
or
jae
scas
enter
in
shl
mov
stos
outs
mov
cwde
lock
adc
add
fwait
mov
movs
push
push
push
mov
add
pop
out
jmp
push
pop
cmp
cld
mov
pushw
iret
test
mov
leave
stos
call
jnp
(bad)
mov
push
fwait
mov
sub
sbb
fsub
xor
stos
jnp
push
(bad)
out
xor
popf
stos
fldcw
push
mov
std
add
inc
fldenv
in
mov
bound
jmp
sub
fnstcw
adc
cwde
add
jmp
js
cwde
nop
(bad)
fldenv
loopne
clc
cdq
xchg
cmp
cs
push
push
jmp
or
fwait
bound
inc
js
or
outs
in
and
(bad)
repnz
add
fnstsw
mov
inc
ret
sbb
xlat
mov
(bad)
mov
inc
mov
mov
repz
mov
mov
pop
pop
aaa
jp
jmp
test
inc
jmp
mov
cmp
loope
add
jecxz
inc
mov
mov
je
mov
xor
lods
ds
sub
jne
jne
repnz
repnz
sub
inc
xchg
cmp
es
mov
or
xlat
scas
dec
mov
into
(bad)
fisttp
popa
push
dec
or
les
(bad)
xor
fucom
mov
push
cmps
das
lods
cmp
shr
ins
xor
dec
repz
movs
inc
test
xchg
je
dec
sub
push
sub
lahf
stos
ss
xor
nop
xchg
mov
ret
sbb
(bad)
repz
push
jne
out
jno
popa
sub
stos
add
leave
ja
inc
outs
sub
xchg
sub
out
adc
cmp
fsub
jae
retf
popa
scas
push
scas
fstp
movs
add
cwde
sbb
sahf
retf
push
int
push
mov
stc
pop
and
push
pop
cmps
add
sti
add
ret
aam
add
(bad)
in
fadd
jb
push
movs
cld
jo
aad
es
jl
jbe
adc
dec
sbb
stc
adc
out
cmp
and
scas
je
xchg
repnz
and
push
and
push
dec
data16
inc
es
jae
xchg
jecxz
add
add
mov
fwait
jecxz
out
mov
aas
dec
jl
cld
ja
std
xchg
and
mul
or
stos
and
cmp
or
sahf
pop
mov
dec
or
ja
ret
lock
mov
jmp
call
jmp
jno
fisttp
cmp
js
hlt
add
fs
pop
bound
into
inc
mul
call
push
pop
not
aad
pusha
data16
fst
mov
in
in
add
or
push
(bad)
stos
jne
and
fs
leave
popa
outs
jmp
dec
popa
push
int
pop
test
sub
int
and
mov
stos
mov
imul
adc
loop
lahf
test
call
jg
les
jle
push
fist
gs
jg
inc
pop
or
inc
nop
sti
out
test
stos
ins
mov
int
bound
int3
aad
mov
aad
and
aad
mov
fisttp
and
aad
mov
mov
adc
int
js
sti
or
sbb
iret
inc
das
mov
rol
std
xchg
cmp
mov
xchg
frstor
cmps
cmps
fs
scas
jmp
jo
arpl
jg
psubsb
mov
aad
mov
mov
aad
mov
mov
aad
mov
mov
aad
mov
mov
aad
mov
mov
aad
mov
mov
aad
mov
loop
test
int3
aad
mov
cmps
test
aad
mov
mov
aad
mov
mov
aad
mov
scas
inc
mov
repz
jecxz
inc
movs
repz
imul
movs
mov
add
xor
inc
arpl
retf
hlt
out
mov
jecxz
icebp
push
dec
neg
pusha
dec
fucomp
cmp
adc
mov
mov
test
test
icebp
mov
call
mov
(bad)
sti
(bad)
jbe
dec
xor
inc
jb
adc
scas
push
mov
mov
pop
sbb
ss
push
vmovaps
cmp
(bad)
icebp
mov
lock
pop
push
xlat
or
mov
ss
xor
fs
adc
in
sub
mov
sar
rol
push
sub
test
or
cmps
or
dec
test
dec
xor
std
in
push
fisttp
push
clc
mov
push
inc
xor
ins
cld
push
ss
pusha
sti
rcr
lahf
cmp
mov
jecxz
xchg
lods
imul
call
dec
ds
inc
add
aas
xor
xor
sub
jae
xchg
rcr
int
adc
div
mov
div
pop
mov
push
dec
or
push
dec
or
push
dec
or
push
dec
or
push
dec
or
push
dec
or
push
dec
or
push
dec
or
aam
xchg
lds
aaa
mov
mov
rcr
fcom
outs
mov
shr
or
add
je
dec
sub
mov
jae
mov
ror
push
mov
aam
sti
add
or
push
stos
adc
pop
jmp
jmp
mov
fimul
or
pop
sub
sahf
push
mov
cmp
iret
push
pop
fidiv
xchg
xor
sbb
cmps
scas
sbb
or
inc
out
imul
xor
adc
mov
repz
arpl
shl
dec
loop
addr16
(bad)
mov
rdpmc
dec
mov
sub
xor
and
leave
push
mov
push
fidiv
(bad)
and
push
fstp
ror
pop
sub
adc
sar
jnp
mov
add
or
shl
enter
pusha
inc
sub
jno
popa
xor
aas
jg
mov
dec
(bad)
fisttp
inc
cli
xchg
clc
jl
pop
ja
inc
xchg
xlat
and
mov
or
and
mov
rcl
in
jnp
das
cwde
adc
ror
mov
sub
aam
scas
or
xor
in
ins
mov
mov
sbb
and
mov
movs
cmp
ins
addr16
cmp
in
mov
ret
xor
xchg
push
and
mov
mov
pop
aad
and
jno
mov
jecxz
out
lock
rol
imul
in
cmp
xlat
sub
push
xchg
(bad)
cmp
or
xor
pop
jecxz
(bad)
jae
outs
rcl
pop
mov
aam
add
(bad)
xor
rcr
test
out
arpl
mov
or
xchg
add
xor
cvtdq2ps
popa
or
bound
cmp
movs
mov
xchg
xchg
rcr
push
out
fsubr
push
pop
sbb
(bad)
dec
jmp
movs
sti
cmp
jmp
mov
add
mov
xor
aad
(bad)
stc
inc
pop
or
inc
adc
jmp
imul
inc
mov
jae
inc
cmps
mov
(bad)
and
sub
and
ss
hlt
out
mov
loopne
push
push
imul
pop
arpl
xchg
adc
add
(bad)
ins
int3
pop
int3
imul
sub
call
imul
sub
jae
jo
push
sbb
mov
cs
in
sar
gs
jg
adc
rcr
sbb
stc
xor
or
fsub
cmp
int
icebp
inc
out
repz
imul
adc
cmp
pop
push
js
scas
shr
adc
aam
push
scas
or
clc
mov
add
outs
push
ffreep
mov
and
dec
fs
fwait
out
das
cmps
das
int3
mov
adc
mov
xchg
mov
mov
push
aad
pop
mov
hlt
inc
retf
leave
gs
and
mov
in
imul
lea
int
pop
and
pushf
(bad)
sub
(bad)
daa
stc
pop
push
pusha
or
repnz
adc
jg
in
mov
out
mov
loop
jl
scas
mov
mov
and
mov
inc
loopne
adc
xchg
sub
push
adc
jo
sub
repnz
sbb
aam
add
xor
dec
daa
and
fst
mov
sub
xchg
jl
dec
test
js
imul
setl
test
fwait
jnp
jp
lods
daa
mov
fild
arpl
mov
or
inc
jbe
push
jecxz
out
mov
sahf
sbb
cs
scas
sub
xor
or
pop
dec
stos
mov
out
mov
stos
inc
xchg
loope
pop
scas
fild
fdivr
out
add
xlat
inc
add
imul
xlat
jne
inc
and
les
push
jnp
inc
(bad)
cmp
in
mov
and
jecxz
jp
retf
movs
xchg
mov
xor
sub
mov
adc
pusha
xor
inc
(bad)
pop
leave
adc
jge
test
fst
js
(bad)
fsub
data16
sub
pop
xchg
movaps
imul
or
cmps
xor
scas
xchg
and
cmp
fist
mov
mov
add
xchg
(bad)
fsubr
pop
test
mov
imul
ret
jecxz
(bad)
xor
sub
in
push
fmul
das
outs
pusha
retf
or
inc
movs
dec
pop
and
rol
icebp
sub
in
sti
loope
dec
sub
and
push
scas
sbb
cmps
xchg
jp
mov
lods
and
and
(bad)
xchg
mov
mov
shr
cdq
leave
dec
dec
test
jp
jecxz
leave
addr16
clc
xchg
inc
aaa
dec
retf
pop
rcr
cmps
or
int3
mov
dec
popa
xchg
push
push
pop
js
inc
mov
idiv
dec
movs
sti
jmp
imul
in
imul
mov
and
inc
out
pop
das
and
out
inc
mov
repz
test
jg
mov
test
int
xor
sbb
bound
dec
push
scas
cmp
cmp
jne
pop
inc
arpl
add
xor
xchg
mov
sub
cld
xchg
pop
pop
call
add
clc
in
push
pop
shl
jo
or
popa
jg
pusha
push
push
inc
shl
scas
ja
push
arpl
and
(bad)
lods
mov
dec
cmp
xor
pop
cs
in
int3
adc
out
or
mov
daa
jle
push
pop
inc
lahf
mov
xchg
ret
push
in
lds
add
sbb
sub
xchg
fcomi
cmp
imul
aas
or
adc
repz
dec
test
stos
ins
cmp
jmp
push
xor
jbe
push
mov
shr
and
jno
sub
or
jle
add
sub
in
cmps
sub
lods
xchg
cmp
shr
(bad)
mov
cmp
sti
ret
jmp
wrmsr
mov
sub
outs
cli
jns
(bad)
nop
adc
pop
cli
pop
mov
lock
cmp
stc
loope
aad
xchg
fdivr
mov
cmp
outs
js
icebp
jns
cmp
or
push
cwde
mov
and
jle
mov
aaa
fwait
mov
xchg
lock
dec
faddp
jo
xchg
jp
adc
iret
pop
inc
mov
push
cmp
mov
cmp
nop
shr
push
and
or
mov
pop
fisttp
mov
adc
mov
int3
push
das
ficom
test
dec
scas
sbb
es
add
fstp
or
add
mov
ret
and
pop
sub
and
xchg
in
out
sub
xlat
mov
push
gs
rol
call
popa
mov
add
sub
fcomp
popf
jne
test
scas
and
push
mov
xchg
add
mov
pop
mov
mov
fsubr
out
dec
je
call
gs
fsub
pop
or
and
stos
mov
retf
push
sbb
sub
jb
xor
popa
pop
pop
mov
inc
mov
jne
call
pop
in
loope
jb
in
mov
(bad)
mov
sub
inc
sub
out
or
scas
sbb
sbb
dec
sub
jb
mov
neg
sahf
frstor
push
jae
sti
push
add
les
pop
jb
not
pop
fisub
cmp
add
cmp
lds
mov
aaa
mov
push
mov
dec
cmp
fbld
mov
mov
mov
push
jge
inc
mov
sti
xchg
fiadd
push
sub
adc
ret
mov
outs
inc
xchg
inc
fcomp
loop
sub
jle
push
icebp
jnp
mov
mov
mov
pop
std
aam
sub
xchg
pop
or
cdq
es
push
sti
dec
adc
outs
rcr
push
jae
mov
add
xor
fist
in
xchg
sbb
adc
cmc
imul
xor
std
fsub
hlt
(bad)
loopne
dec
or
sub
or
mov
out
and
cli
loop
and
je
dec
dec
mov
sub
dec
xor
cmc
cmc
lods
test
call
ss
xchg
call
mov
in
inc
add
jge
icebp
pushf
stc
ds
(bad)
(bad)
or
sbb
inc
mov
jecxz
jmp
push
emms
ss
jb
dec
inc
es
mov
lea
or
neg
scas
cmp
lods
imul
out
cmp
fild
mov
call
test
(bad)
add
pop
popa
aas
outs
or
ss
out
pusha
sti
and
icebp
lahf
loop
push
jmp
rol
lods
loopne
cmp
fidiv
cli
rcl
push
sar
jp
outs
push
test
cli
repz
pop
fucom
or
push
sbb
mov
loopne
mov
mov
pusha
test
jno
clc
out
and
add
jl
push
movs
cmp
mov
lds
rcr
dec
jmp
ret
ret
pusha
int3
inc
rcr
call
(bad)
arpl
into
add
pop
shl
sbb
inc
shr
xor
shr
outs
ds
cmc
loopne
mov
(bad)
or
inc
mov
repz
test
lods
mul
dec
test
out
lods
sti
out
mov
(bad)
push
mov
(bad)
ins
mov
repnz
ffreep
push
xchg
iret
scas
jl
iret
stos
sbb
(bad)
je
mov
mov
sub
cmps
out
dec
mov
out
push
mov
fisubr
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
fs
in
inc
mov
repz
dec
test
push
push
out
jmp
(bad)
jmp
imul
inc
mov
jmp
inc
test
jmp
inc
movs
repz
inc
mov
jmp
imul
dec
mov
jecxz
das
scas
xlat
out
mov
(bad)
jmp
sbb
jmp
imul
inc
xor
mov
add
inc
mov
out
jo
idiv
jg
fcom
test
rcr
stos
(bad)
dec
mov
inc
mov
idiv
cld
mov
pop
mov
int
dec
cmps
call
add
push
xor
xor
shl
adc
leave
je
jmp
outs
cli
inc
mov
neg
mov
mov
shr
add
fwait
aaa
xchg
cmps
cli
inc
stos
push
jge
dec
or
ret
mov
adc
pop
cmp
inc
shl
mov
fwait
pop
pop
pop
dec
xchg
mov
mov
sub
mov
or
pop
cmp
jo
jmp
loopne
xchg
cmp
push
push
adc
sbb
mov
cdq
or
out
mov
push
mov
sti
mov
push
push
jno
push
stc
jmp
cmp
mov
into
test
dec
mov
imul
inc
loopne
es
imul
xor
call
mov
cdq
or
cmp
inc
xor
loop
mov
mov
mov
dec
fsub
repz
imul
xor
cwde
lods
xchg
pop
mov
jmp
(bad)
mov
cld
add
inc
mov
jmp
or
outs
adc
push
dec
inc
shl
adc
mul
mov
push
loopne
mov
or
div
inc
dec
cmc
and
mov
cmp
inc
test
jmp
xor
outs
adc
shl
inc
sub
xchg
mov
pop
loopne
(bad)
sub
xor
movs
inc
mov
out
les
mov
pushf
imul
pop
mov
ja
jmp
mov
movs
cmp
mov
cmps
(bad)
into
inc
dec
outs
dec
cs
mov
mul
xor
push
stc
inc
mov
stos
inc
mov
div
inc
hlt
sub
cmp
sub
fist
outs
sbb
xchg
ins
jbe
sahf
add
sbb
cli
aas
xchg
pop
pop
mov
inc
je
call
jnp
out
mov
outs
mov
les
outs
adc
in
add
add
das
sbb
(bad)
adc
imul
inc
xor
or
push
pop
pop
xlat
mov
xor
add
inc
xor
jmp
add
inc
mov
out
inc
mov
mul
arpl
hlt
jmp
test
dec
loopne
out
dec
test
out
mov
jmp
out
inc
lods
repz
(bad)
hlt
mov
and
das
jecxz
out
inc
mov
repz
gs
hlt
pop
jg
mov
xchg
push
jecxz
pop
out
aaa
bound
pop
mov
mov
adc
add
mov
cwde
xor
xor
or
lods
adc
sti
test
pop
gs
xchg
cmp
mov
mov
cmc
shl
or
cwde
daa
sbb
(bad)
jo
adc
and
enter
inc
ss
lock
(bad)
lock
or
out
nop
jns
sub
inc
loope
(bad)
mov
je
movups
sub
stos
dec
mov
and
loope
nop
add
mov
or
rol
xor
xor
fstp
xor
cmp
sahf
dec
adc
retf
jo
(bad)
ficomp
and
adc
xchg
mov
int
fs
add
xor
les
jne
pop
enter
adc
or
test
cmps
inc
shl
fdivrp
push
jle
push
sbb
out
int
icebp
bound
outs
dec
iret
loopne
jecxz
sbb
pop
shr
push
cmp
xor
mov
sbb
dec
or
adc
std
xor
xor
jmp
cs
push
fwait
aam
(bad)
in
jmp
sub
adc
inc
cmps
mov
repnz
xlat
push
stos
jecxz
jns
fst
xor
cmc
add
repnz
scas
cmp
mov
clc
movs
jmp
sbb
std
pushf
test
dec
lahf
jo
addr16
dec
mov
add
outs
popf
mov
push
add
repz
mov
jmp
mul
push
movs
(bad)
dec
mov
shr
stos
adc
repz
xor
scas
bnd
inc
movs
sti
push
mov
repz
dec
pop
hlt
and
bnd
mov
lods
cmp
loopne
out
pop
sbb
mov
clc
add
outs
adc
adc
mov
sbb
push
inc
jecxz
adc
push
or
sub
inc
sahf
call
jle
icebp
or
dec
sbb
adc
xlat
sti
mov
or
sahf
jo
clc
mov
call
stos
mov
arpl
ret
xor
aad
or
aad
jbe
cmp
mov
push
sar
(bad)
aas
or
mov
mov
mov
scas
in
and
iret
push
and
addr16
and
push
sbb
sbb
fstp
mov
jle
xchg
push
frstor
xor
repz
add
jecxz
dec
int3
xor
push
mov
xor
or
inc
push
lds
add
dec
mov
dec
adc
inc
and
pop
shl
js
mov
retf
(bad)
xchg
push
dec
inc
aam
movs
pop
jg
scas
outs
shr
rcr
mov
inc
outs
shl
shr
pop
sahf
add
and
call
icebp
out
adc
inc
mov
adc
or
mov
jg
in
adc
fisub
ins
(bad)
xchg
xlat
popf
pop
(bad)
xlat
sub
fsubp
mov
movs
sub
out
jmp
pop
cmp
push
aas
sar
cli
mov
mov
adc
jmp
and
pusha
test
test
push
and
in
mov
inc
dec
sbb
add
cs
ins
jg
ins
sub
out
mov
iret
mov
mov
int
shr
(bad)
out
cmc
and
cmp
out
dec
sub
adc
pop
add
jecxz
jmp
push
aad
add
xchg
adc
cmps
jecxz
or
sbb
pop
fidivr
pop
movs
addr16
mov
adc
ja
mov
mov
jge
dec
inc
sbb
es
mov
mov
les
mov
sbb
test
hlt
inc
mov
cld
xor
push
cmp
fbld
int3
mov
in
out
fbld
outs
ror
bsr
stos
mov
lock
iret
push
arpl
jg
adc
or
mov
arpl
cmp
push
jecxz
sub
xor
jp
shr
in
and
(bad)
popf
cmc
in
sub
js
daa
xor
adc
stc
inc
fmul
jmp
sti
out
mov
imul
dec
mov
out
shl
bound
ins
push
and
out
and
pop
call
jnp
inc
jecxz
mov
mov
enter
test
xchg
(bad)
mov
outs
in
jl
fistp
leave
(bad)
rcl
and
lahf
mov
dec
dec
push
test
aas
and
int
frstor
shl
cmp
push
jnp
push
call
stc
dec
ins
mov
push
adc
mov
lock
nop
nop
fs
fsubp
mov
pop
je
and
add
push
jmp
retf
adc
int3
sti
jmp
cmps
imul
(bad)
mov
sbb
push
cmps
mov
add
xchg
ss
dec
fisubr
mov
sub
shr
adc
mov
pop
mov
inc
bswap
adc
imul
adc
arpl
adc
sbb
jecxz
sub
loopne
call
movs
mov
inc
mov
repz
add
mov
dec
aas
mov
mov
dec
(bad)
sbb
test
push
call
out
(bad)
dec
jmp
sar
dec
sub
(bad)
xor
dec
sbb
adc
es
sub
sbb
xchg
mov
dec
mov
sub
xchg
mov
mov
push
pop
fiadd
or
cmps
mov
pusha
movs
loopne
sahf
dec
add
shl
mov
bound
movs
pop
aad
or
pop
adc
out
stos
fidivr
dec
pop
and
sbb
inc
pop
dec
xor
das
jno
not
sub
test
cli
das
in
popa
clc
test
or
pop
pshufw
mov
add
popa
cmp
addr16
loop
jge
pop
push
outs
arpl
adc
sar
cli
dec
or
inc
iret
in
in
out
sbb
jno
into
enter
push
popf
and
mov
aam
dec
mov
call
ffreep
jb
test
mov
lods
inc
dec
icebp
sar
enter
xchg
je
jmp
inc
mov
stos
into
(bad)
fldcw
xor
das
sub
jecxz
or
std
xor
pop
cvttps2pi
mov
jecxz
stos
int3
aaa
add
pop
jmp
sbb
add
ds
lods
push
jl
test
mov
cwde
fistp
adc
sub
popa
add
inc
or
shl
push
pop
scas
mov
mov
ja
leave
sbb
jecxz
mov
ret
inc
or
pop
mov
mov
inc
fimul
fild
aas
push
and
(bad)
pop
lds
in
sbb
add
outs
xor
js
pop
mov
pop
pop
dec
add
push
mov
imul
js
pushf
xor
mov
mov
adc
fcmovne
adc
jge
mov
test
enter
xchg
fwait
out
nop
(bad)
das
icebp
into
adc
test
mov
mov
jno
push
push
es
xlat
mov
cmp
sar
add
or
rcr
sbb
add
xchg
and
out
sub
push
add
push
jbe
inc
stc
jge
mov
jb
and
add
movs
arpl
sbb
fdiv
pop
in
addr16
xchg
dec
sub
mov
int
inc
pop
sub
mov
jae
inc
push
dec
push
ins
movs
into
mov
xchg
sbb
out
in
dec
sahf
fmulp
mov
movs
adc
scas
into
lods
xor
or
xchg
adc
jmp
xor
or
xchg
mov
xchg
cmp
into
jmp
(bad)
mov
push
inc
push
repnz
push
cld
fcom
loope
xchg
test
in
sub
sub
mov
imul
sar
sbb
aad
sahf
xor
or
and
adc
xor
push
cmps
jo
inc
fwait
imul
xchg
fnsave
adc
cld
cmp
add
jp
jmp
and
push
sbb
and
mov
daa
add
shl
lds
mov
in
cmp
sub
clc
or
sbb
sub
ret
call
ret
mov
sub
xchg
cmc
ja
jmp
xor
cmc
mov
sbb
stc
bound
cmp
xor
add
mov
xor
xchg
xlat
xor
inc
xor
into
ror
jmp
push
or
dec
pop
mov
shl
mov
aas
mov
or
mov
mov
mov
je
push
push
arpl
loopne
gs
xchg
adc
sar
or
or
xchg
push
jns
xlat
xlat
and
add
mov
dec
jmp
stc
mov
or
call
inc
loopne
imul
and
add
imul
push
xchg
ins
fstp
inc
jne
fild
ins
ret
xchg
inc
mov
mov
cmp
cmp
xor
push
retf
leave
daa
fwait
imul
mov
jle
mov
mov
icebp
jg
xor
jp
mov
xor
cld
jle
dec
cmps
fsubr
add
int3
jecxz
outs
ins
mov
lahf
jp
das
dec
push
icebp
inc
sub
dec
jns
pop
pop
push
dec
jg
mov
push
call
test
into
and
pop
inc
jmp
mov
mov
mov
pop
(bad)
xchg
dec
out
xchg
(bad)
cmp
popa
cs
sar
mov
mov
enter
repz
stc
inc
adc
jmp
push
dec
mov
imul
dec
mov
out
sub
inc
mov
dec
icebp
jg
shl
enter
add
sti
scas
and
lea
add
repz
mov
dec
sbb
loop
clc
out
ror
cmp
sahf
mov
into
idiv
ret
mov
clc
mov
adc
mov
shl
sbb
add
(bad)
sub
pop
inc
inc
push
(bad)
jmp
ja
push
xchg
mov
addr16
int
je
mov
idiv
pop
ins
sbb
jg
push
or
and
jno
ret
dec
nop
imul
jno
inc
ins
rcl
bound
sub
fidivr
cmps
mov
xchg
push
jb
sbb
mov
outs
outs
fwait
inc
pop
stos
jp
jg
mov
mov
mov
ds
pop
out
cmp
cmp
scas
pop
jle
les
jae
scas
sub
dec
ins
jge
in
imul
jmp
nop
fisub
retf
in
push
push
mov
stc
iret
rcr
iret
pop
scas
inc
sbb
retf
push
dec
fsub
mov
loope
mov
and
fiadd
in
mov
adc
pop
add
arpl
jmp
sbb
popa
add
xchg
aad
fisttp
das
push
daa
fmul
or
and
aam
stc
shr
dec
int
xor
sub
cwde
mov
mov
aas
pop
inc
xor
pop
or
loop
mov
and
loop
add
add
and
jns
inc
fwait
jp
arpl
out
pop
jle
out
jle
pop
add
int
xchg
aad
push
call
arpl
mov
xchg
mov
inc
sbb
ror
hlt
mov
add
cmp
mov
in
mov
dec
(bad)
jno
int3
mov
jae
mov
sar
pop
push
loopne
pop
fbstp
loopne
sbb
sbb
call
(bad)
fbld
retf
xchg
sub
fucom
pop
gs
add
jmp
pop
cdq
lea
mov
xor
push
outs
push
mov
das
push
fs
jbe
leave
cmc
stos
int3
xchg
daa
jmp
test
int
popa
inc
loope
sub
lahf
lock
pop
cdq
sbb
or
aam
xor
mov
(bad)
sub
cmp
sbb
dec
pushf
test
push
stos
adc
outs
arpl
retf
ss
adc
jbe
dec
inc
in
(bad)
push
xchg
aaa
lock
data16
pop
out
push
pop
aas
jo
outs
dec
pop
cli
scas
movs
in
jb
ins
rcl
add
pop
in
xor
mov
lds
dec
das
push
add
sub
cmp
mov
pop
into
sub
aam
sahf
pop
fwait
and
adc
pop
mov
pop
xchg
cmc
mov
inc
add
jle
sub
iret
adc
shl
ret
mov
sub
sbb
div
push
or
adc
xor
stos
sub
out
or
int3
call
mov
push
repz
sub
movs
and
sahf
in
sti
retf
cmc
enter
test
(bad)
xor
or
test
xchg
cwde
inc
or
loop
adc
mov
loope
xchg
mov
pop
jmp
xor
dec
xlat
inc
mov
call
mov
dec
fisub
inc
popa
cmp
add
xor
movs
adc
push
fsub
mov
jns
leave
lahf
scas
add
or
mov
push
or
lds
repz
sbb
mov
adc
mov
sar
pop
in
inc
loopne
out
lods
sti
out
mov
imul
add
imul
pop
gs
mov
enter
movs
idiv
imul
inc
daa
aam
inc
scas
imul
fcom
fsubr
cmp
mov
xchg
push
push
arpl
sti
fst
in
je
mov
clc
int3
xor
sbb
lock
dec
mov
inc
jae
ss
ja
ins
mov
jae
jb
or
out
pop
loop
cwde
out
xor
or
mov
cmp
mov
mov
stos
loope
xchg
bound
ins
mov
rcr
nop
mov
fld
mov
cmp
es
adc
(bad)
or
xchg
stos
cmp
mov
shl
mov
cs
push
in
jle
fdiv
sbb
jmp
mov
xor
repz
pop
rcr
xor
or
add
ss
jle
iret
test
add
outs
cmp
inc
inc
movs
pop
stc
stc
jecxz
mov
cdq
mov
jp
mov
adc
xchg
test
sub
(bad)
into
xchg
dec
cmp
in
inc
cwde
jmp
push
ret
mov
mov
sbb
int3
stos
loopne
fidivr
sbb
retf
(bad)
sub
cmp
out
retf
jecxz
push
stc
pop
xchg
pop
jnp
adc
pop
leave
aad
fcmovnbe
inc
mov
ret
in
pop
xlat
and
xor
mov
dec
es
cmp
xchg
(bad)
ret
pop
retf
out
into
mov
push
adc
test
dec
in
cmp
gs
xchg
jge
pop
mov
jbe
sub
ja
cmps
int3
fst
sar
loope
mov
mov
out
sub
test
add
inc
mov
ret
xchg
push
rcl
ds
hlt
mov
mov
popa
sub
mov
push
call
out
jmp
sbb
inc
or
repnz
sbb
and
cwde
jle
mov
mov
cs
lods
xchg
sti
xor
pop
inc
loop
xchg
lea
aad
scas
sub
repz
push
ja
sti
shr
icebp
test
pop
imul
(bad)
retf
int3
enter
mov
sar
xchg
cmp
ror
pop
add
pop
ins
add
sbb
popf
cmp
gs
push
mov
out
movs
xchg
pusha
sub
sete
xchg
pop
fist
pop
adc
and
jle
xchg
jns
imul
outs
cmp
(bad)
repz
jp
mov
and
scas
sbb
mov
or
out
add
mov
movs
in
xchg
dec
jne
push
(bad)
and
iret
ins
xchg
mov
pop
gs
rcr
mov
sbb
jg
jle
xchg
retf
shr
cmp
cs
mov
cmps
xchg
mov
pop
rep
mov
pop
rep
mov
pop
rep
mov
psllq
inc
fmul
out
inc
nop
sti
out
test
stos
sbb
div
sub
inc
test
adc
cdq
xor
iret
inc
test
add
dec
sbb
into
inc
test
test
sbb
int3
inc
into
lock
mov
xor
iret
inc
repnz
ins
scas
dec
sbb
int3
inc
mov
sbb
iret
inc
pushf
jg
cs
sbb
int
xchg
pop
adc
dec
sbb
iret
inc
pushf
add
dec
sbb
iret
dec
test
sti
cwde
jmp
int
test
cs
sbb
iret
dec
or
dec
sbb
iret
dec
test
cs
sbb
int
mov
pop
cs
sbb
int
lods
adc
push
sbb
into
inc
fcom
js
xor
sbb
cdq
xor
inc
pop
repnz
sbb
iret
inc
movs
lock
push
dec
sbb
iret
inc
xchg
xor
xor
iret
inc
test
adc
cdq
jmp
div
mov
mov
loop
movs
idiv
push
mov
out
inc
lods
repz
imul
add
das
inc
and
and
scas
xchg
xor
dec
mov
repz
daa
jno
push
inc
nop
call
pusha
das
cmp
popa
fld
add
inc
add
scas
inc
hlt
retf
ss
mov
pop
jnp
xchg
mov
mov
jp
pop
hlt
adc
fisttp
add
test
xchg
outs
mov
jp
xchg
bound
fisttp
add
je
cli
and
push
mov
xchg
int
in
or
sbb
cs
or
pop
xchg
sar
pop
dec
nop
add
xlat
lea
(bad)
mov
das
cmps
fadd
mov
(bad)
mov
mov
or
mov
ss
movs
inc
stos
shl
ds
adc
pop
xchg
mov
push
sbb
cdq
retf
ins
(bad)
cmc
xchg
or
xor
inc
fwait
xlat
sbb
cdq
clc
scas
aad
out
jno
add
xchg
in
cmp
adc
(bad)
lock
jb
and
sub
jmp
or
jp
out
iret
or
stos
out
inc
xchg
shr
jl
push
rcr
inc
imul
(bad)
add
inc
xchg
jnp
fnstenv
cmp
or
or
push
adc
sbb
sub
(bad)
jnp
and
pop
mov
xor
xchg
in
(bad)
cwde
lea
mov
inc
cmc
mov
retf
cmp
cdq
jne
pusha
dec
xor
das
iret
sub
and
fnstenv
aas
push
fnsave
scas
cmp
jg
mov
and
pop
jmp
cli
outs
mul
or
outs
loope
xor
jb
(bad)
fdivr
pop
mov
xlat
jae
les
test
jl
push
add
add
mov
dec
out
lock
push
sub
sub
cmp
sbb
mov
push
jno
mov
xchg
movs
mov
adc
mov
fnstsw
out
mov
ret
xor
mov
ret
xchg
dec
fcomip
retf
rcl
xor
dec
fbstp
pop
test
and
adc
aaa
jg
cmp
loopne
inc
mov
sbb
scas
xchg
scas
cmp
add
add
fist
pop
iret
mov
stc
push
je
dec
loop
sbb
pop
push
inc
cwde
test
cmp
inc
les
(bad)
in
add
mov
loopne
sbb
inc
xchg
xchg
xchg
jbe
into
sub
div
xor
scas
cmp
add
inc
sbb
add
cmps
clc
int
sar
push
xor
mov
pusha
mov
in
jle
or
fstp
and
daa
mov
dec
movs
idiv
dec
movs
sti
jmp
imul
in
sub
movs
mov
add
push
and
xor
out
mov
loop
nop
dec
stos
jbe
mov
fst
neg
repnz
int
or
push
in
xchg
add
(bad)
movs
(bad)
lock
jg
fwait
push
cmps
and
(bad)
iret
adc
popf
enter
pusha
jmp
dec
pop
cmp
mov
xor
jmp
dec
xchg
movs
(bad)
fimul
xchg
les
addr16
sti
sbb
cs
imul
loop
out
adc
repnz
cmp
mov
(bad)
aad
mov
aaa
shl
push
gs
xchg
sar
cmps
fstp
dec
add
dec
sub
xor
pop
jmp
pop
cmp
inc
and
repnz
imul
out
lds
movs
or
lods
in
inc
xchg
lods
imul
scas
in
cmc
stos
or
mov
inc
mov
ds
mov
adc
sahf
dec
movlps
sbb
fbstp
das
add
adc
call
jl
ds
outs
repnz
mov
mov
test
repz
fsub
adc
stc
dec
ret
xlat
scas
or
mov
bound
mov
rcr
out
dec
pushf
pop
jbe
sbb
(bad)
jecxz
xchg
add
jnp
icebp
gs
(bad)
je
inc
and
mov
xchg
pop
cmp
rep
mov
fild
ret
and
cdq
retf
test
push
stos
inc
imul
jmp
pop
inc
push
test
outs
dec
sub
sbb
jno
push
jmp
mov
imul
push
jns
sub
sub
mov
sar
popa
pop
add
or
call
and
daa
rcl
sub
sub
xchg
cmps
push
shr
(bad)
(bad)
(bad)
push
jnp
push
xor
das
fcomp
jae
fst
mov
out
call
xchg
and
cmp
fdivr
fisubr
mov
jae
sbb
outs
pop
outs
test
gs
ficomp
imul
pop
xor
fwait
add
cmp
ins
cld
inc
inc
pop
lock
(bad)
into
clc
sub
(bad)
cmp
mov
push
xchg
pop
or
cdq
mov
pop
arpl
(bad)
lods
mov
add
ins
dec
dec
rol
lods
pop
repnz
mov
push
or
mov
lods
jb
or
adc
inc
popf
add
outs
mov
in
add
push
inc
fdivr
lea
out
retf
xchg
in
idiv
adc
pop
lea
out
test
js
in
std
(bad)
pop
retf
and
out
lods
dec
and
lea
or
jmp
mov
shl
cmp
dec
cs
imul
ds
sbb
push
sahf
cmc
mov
dec
fidiv
push
test
and
mov
mov
int
adc
fimul
into
sub
std
lahf
cmp
retf
sub
(bad)
mov
mov
or
rcl
repnz
das
cs
adc
test
mov
xor
mov
lods
pop
push
xchg
pop
push
adc
test
stos
bswap
push
cs
jge
mov
cmp
int3
scas
inc
cmp
data16
imul
pop
mov
cld
jmp
movs
sub
pop
mov
ss
lea
sbb
adc
push
dec
into
scas
mov
cmp
(bad)
je
xchg
js
call
pcmpgtb
or
sti
cld
mov
dec
jnp
adc
xor
fwait
sti
test
adc
push
xchg
aad
lock
sub
neg
mov
push
mov
add
sbb
loope
xor
idiv
mov
inc
pop
push
pop
xor
mov
out
adc
mul
inc
call
xchg
arpl
test
mov
sub
cld
shr
adc
test
enter
and
xchg
adc
ja
mov
xor
outs
add
stc
and
and
out
jns
loopne
repnz
(bad)
xlat
and
xchg
stos
push
scas
jb
cmp
xlat
xchg
stos
inc
mov
jmp
inc
test
jmp
imul
and
sub
cmps
mov
les
outs
and
out
inc
xor
mov
mov
enter
call
pop
pushf
sub
(bad)
cmp
push
and
mov
jmp
cmp
mov
jmp
mov
or
les
(bad)
mov
sub
sbb
push
retf
stos
in
xchg
ins
arpl
das
pop
cs
pop
jle
outs
imul
out
out
jae
ds
imul
sbb
add
loopne
cmc
pushf
push
mov
call
mov
and
aaa
mov
xlat
pop
inc
sar
or
jne
std
in
mov
jb
xor
xchg
mov
jbe
jb
sub
fst
test
dec
scas
sbb
in
jl
jno
retf
mov
sahf
mov
sti
imul
jbe
inc
inc
lds
mov
dec
add
nop
fmul
(bad)
mov
cmp
(bad)
xor
xor
aam
jnp
retf
add
xchg
repz
(bad)
loopne
mov
jle
sbb
test
mov
push
mov
out
mov
jmp
push
in
hlt
inc
pop
cmp
inc
mov
jecxz
add
fmul
scas
nop
sub
scas
mov
xor
js
sub
and
std
mov
mov
adc
das
xchg
popa
pushf
mov
(bad)
cmp
cwde
or
popa
xor
jmp
(bad)
out
stos
sub
pop
nop
(bad)
je
adc
jmp
pop
stos
sbb
dec
jle
pop
fcomp
xor
ds
mov
call
and
(bad)
call
adc
stos
ss
hlt
fs
call
dec
jo
xor
cld
movs
mov
push
test
test
aaa
(bad)
push
or
mov
pop
jmp
cmp
sub
xchg
xor
and
retf
mov
dec
cmp
adc
dec
pop
inc
jl
cmp
fisubr
mov
into
sar
cmc
(bad)
cmps
(bad)
rcr
push
xchg
fucompp
in
mov
push
dec
pop
sbb
mov
cmp
pop
inc
scas
jecxz
into
dec
lahf
aam
(bad)
mov
inc
mov
mov
icebp
fistp
cld
mov
call
add
fcomi
cmp
cmp
clc
mov
sub
jno
test
mov
xlat
mov
xor
xor
or
sar
push
pop
sahf
push
xor
test
out
cmp
push
xchg
pop
dec
aad
push
push
test
mov
and
hlt
push
and
push
inc
neg
mov
add
pop
idiv
jmp
mov
fsub
in
fs
ret
popa
popa
pop
imul
pop
cmp
test
sbb
leave
(bad)
xchg
xor
inc
xor
in
enter
push
cli
cmp
lss
pop
out
push
push
loop
sbb
mov
(bad)
jns
(bad)
ins
es
and
mov
(bad)
iret
mov
pusha
aas
scas
add
outs
cmps
jae
cmp
out
jle
push
and
lds
lock
in
mov
mov
pop
pop
(bad)
icebp
arpl
cmp
xchg
or
inc
cmps
dec
mov
hlt
pusha
mov
movs
cdq
adc
ret
fimul
xchg
xor
xor
mov
test
retf
add
sub
bound
movs
inc
les
lods
xor
hlt
sub
ficom
js
mov
fcomi
jl
pop
jbe
call
mov
mov
fiadd
pop
hlt
stos
push
mov
mov
test
xor
int
cmp
dec
mov
push
pop
or
icebp
mov
xchg
and
cs
repnz
in
inc
mov
call
pusha
dec
fsub
push
or
xlat
mov
push
mov
jmp
cmp
push
dec
mov
mov
sbb
or
mov
imul
pop
movs
jnp
mov
dec
push
pusha
jnp
and
gs
mov
test
mov
icebp
sbb
push
inc
xchg
repnz
cmp
int
push
push
inc
repz
sub
push
inc
cld
or
xchg
rcr
rcr
xor
xor
mov
sub
pop
hlt
lea
sbb
nop
imul
jnp
imul
int
sbb
mov
mov
test
aaa
rcr
fdivr
xor
push
test
push
mov
sbb
sub
arpl
das
and
aad
imul
add
shr
aaa
loop
fmul
jl
scas
lea
ror
popa
loope
out
inc
mov
imul
mov
int3
hlt
loop
lods
jmp
dec
test
cli
dec
lods
sti
(bad)
lods
out
push
mov
neg
(bad)
ins
mov
(bad)
fidivr
fidivr
(bad)
push
loopne
mov
sbb
(bad)
mov
adc
cmps
jmp
push
movs
sti
(bad)
pusha
mov
into
adc
jecxz
adc
fstp
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
loope
lock
lods
in
in
mov
imul
xor
in
inc
mov
repz
div
push
mov
xlat
push
push
cmps
shr
inc
mov
sti
jmp
imul
inc
mov
jecxz
mov
enter
movs
imul
inc
lods
mov
xchg
cmps
aaa
cwde
jg
inc
in
jle
aad
sbb
data16
adc
fsubr
or
xchg
mov
mov
jno
mov
mov
xor
jmp
enter
lods
out
push
mov
repnz
aas
sub
data16
push
dec
(bad)
lods
leave
dec
in
fwait
pop
jo
push
pusha
push
sbb
leave
dec
mov
xor
lahf
shl
sbb
imul
cmc
pop
mov
xchg
in
push
adc
pushf
jo
hlt
cmp
call
mov
sub
inc
jo
fcomp
or
dec
dec
movs
imul
adc
imul
mov
mov
fstp
xlat
fmul
xor
pop
retf
rol
sbb
lea
or
ficomp
(bad)
outs
cmp
lea
cmc
retf
ins
xchg
imul
or
cmp
dec
dec
add
shr
jo
shl
cmp
loopne
jnp
sub
dec
push
xchg
adc
dec
(bad)
mov
fst
movzx
jl
movs
das
sar
or
aam
mov
lods
xchg
stc
cli
add
pop
cdq
ret
add
jge
jne
or
jecxz
pop
jmp
test
shl
cmp
xor
clc
in
xor
sub
push
and
or
inc
push
inc
lds
stc
loope
cld
cdq
jl
inc
push
xor
dec
xchg
pop
rep
gs
sub
pop
adc
jp
mov
aaa
push
cli
popf
mov
je
outs
je
in
or
jae
pop
xchg
sbb
xor
fdiv
mov
push
aad
pop
and
sbb
imul
inc
add
jmp
adc
imul
inc
lds
inc
mov
push
jmp
imul
inc
mov
imul
inc
mov
repz
test
stc
add
js
push
jmp
repz
stos
pusha
sbb
pop
push
jae
or
call
mov
xor
pop
lahf
adc
xchg
mov
jnp
into
cmp
mov
dec
push
xor
push
jle
cmp
ja
pop
inc
jnp
out
jmp
pop
dec
mov
aad
lea
rcr
call
fidivr
iret
lods
mov
repnz
shl
xlat
gs
dec
adc
adc
and
test
test
cmp
rcl
sahf
pop
adc
stos
repz
ins
iret
mov
mov
test
xchg
sahf
xor
mov
test
stc
sub
fmul
sbb
(bad)
push
aam
aad
(bad)
cmp
pop
pop
sbb
inc
sar
ins
push
and
cmps
mov
retf
in
jl
inc
pop
fwait
stc
imul
stc
mov
ins
push
(bad)
aas
mov
mov
add
in
out
pop
jne
vpmacssdqh
jns
gs
(bad)
and
lds
in
cdq
std
daa
sbb
test
cmp
dec
std
jl
movs
das
sar
or
xor
mul
ins
rcr
stos
jnp
mul
aaa
and
(bad)
mov
add
inc
jp
add
jl
pop
inc
xor
and
jae
out
push
pop
dec
dec
add
sbb
xor
dec
push
jmp
add
xor
repz
adc
test
popf
mov
cmp
cmp
fwait
pop
add
popf
sbb
imul
aas
addr16
mov
sub
lds
jnp
push
in
pusha
(bad)
mov
jl
hlt
outs
jnp
out
sub
scas
xor
stos
inc
mov
out
inc
movs
repz
idiv
pop
mov
rep
(bad)
clc
das
cs
aaa
pop
das
daa
mov
inc
mov
repz
aas
aam
mov
push
pusha
sbb
xor
jmp
sbb
ins
scas
popf
add
mov
and
mov
cmp
xchg
retf
outs
jno
pop
xchg
outs
inc
inc
daa
sub
sbb
stos
call
cmp
imul
mov
fcomp
adc
or
mov
mov
add
dec
push
sti
push
jnp
or
push
pop
sar
cmp
mov
pop
pop
jp
and
test
xor
aas
stc
jnp
mov
mov
jns
jmp
(bad)
retf
icebp
xlat
push
mov
std
sbb
xor
push
fcomp
xor
or
mov
sub
add
repz
inc
jmp
or
inc
push
cmp
mov
cmc
pop
pop
jmp
sahf
int
jl
(bad)
ins
inc
enter
and
stos
ret
in
fs
or
lahf
mov
lods
int
inc
mov
mov
jns
jle
inc
in
jle
mov
jb
mov
add
cld
push
jnp
push
int
test
pusha
stc
jmp
pop
add
jae
mov
jmp
les
or
enter
shl
cmp
rol
ss
out
dec
cmps
fs
push
push
cmp
or
sbb
sub
cmp
(bad)
stos
jae
aad
push
sbb
aam
adc
xor
mov
outs
daa
loop
push
or
adc
pop
fist
inc
lds
(bad)
mov
in
xor
or
cmp
adc
and
lock
push
mov
inc
in
fsub
xor
sub
nop
call
jp
sbb
sub
mov
out
and
stos
mov
ins
data16
movs
cmp
aad
repz
mov
aas
and
stos
mov
ins
data16
movs
cmp
and
pusha
cwde
ja
test
mov
stos
mov
ins
data16
movs
cmp
aad
repz
mov
aas
and
stos
mov
ins
data16
movs
cmp
jle
push
movs
(bad)
loopne
imul
loope
jmp
cld
xor
ds
inc
push
rcr
dec
push
data16
jbe
fcomp
sbb
or
mov
vpcmpeqd
sub
or
pop
push
movs
(bad)
loopne
imul
icebp
sbb
inc
push
sbb
ffree
xor
mov
in
loop
jecxz
lock
in
(bad)
fsubr
push
cld
inc
push
in
jne
clc
(bad)
in
xchg
fist
sub
fldcw
cmps
mov
jb
inc
movs
jmp
add
outs
mov
lods
icebp
cdq
(bad)
movs
jle
icebp
sbb
inc
push
sbb
add
push
(bad)
movs
clc
fwait
pop
and
pushf
mov
or
or
test
mov
pop
daa
mov
mov
pop
adc
clc
and
cmp
inc
adc
(bad)
pop
or
pop
xor
js
nop
ror
int3
xchg
inc
jmp
(bad)
shl
in
adc
in
ds
ins
repz
jmp
jne
xchg
xor
enter
lds
bound
cmps
push
stc
mov
popa
pop
mov
jo
mov
enter
(bad)
pop
mov
xor
mov
sbb
jg
retf
adc
icebp
es
fld
mov
cmp
repz
iret
js
rcr
js
mov
jae
add
cld
jns
les
bound
inc
in
inc
daa
xchg
mov
sbb
cmps
syscall
inc
sbb
int3
xchg
push
xor
loope
pop
test
data16
mov
popf
pop
jbe
jne
fild
fwait
sbb
sbb
push
mov
and
or
mov
test
enter
jl
lods
mov
call
xchg
into
mov
jmp
mov
fild
jge
add
fcmovne
cmp
lods
jo
mov
in
into
movs
jmp
inc
test
jmp
idiv
pop
mov
cs
jg
adc
mov
inc
div
(bad)
in
out
shr
add
loop
sub
mov
inc
enter
lods
repz
inc
sahf
pop
outs
(bad)
or
adc
(bad)
rol
jno
push
mov
mov
push
cmp
or
and
aam
cld
out
shr
stc
stos
cs
cmp
lods
jbe
jns
push
inc
fsub
in
add
scas
sbb
mov
mov
mov
mov
adc
imul
daa
pop
inc
ror
addr16
fsubr
xor
imul
mov
pop
inc
int
ss
push
jno
jmp
adc
cdq
rcl
pop
out
ror
out
xchg
in
push
inc
push
fcomi
mov
fldz
xchg
leave
xchg
scas
xchg
mov
add
xchg
push
mov
jecxz
les
ins
mov
stos
dec
jmp
std
and
je
cmp
pop
dec
sbb
stos
pop
mov
in
mov
xor
into
fldcw
pushf
test
cmp
ss
daa
das
mov
mov
fidiv
das
adc
mov
sub
jl
daa
push
pushf
and
nop
or
xchg
bound
sub
mov
cmp
mov
and
xor
or
pushf
push
add
inc
imul
sub
pusha
xchg
xor
jo
adc
inc
aas
in
inc
nop
sbb
sub
jp
dec
enter
pop
leave
xlat
cmp
call
push
sti
push
dec
int3
sbb
cwde
dec
fmul
add
cmps
(bad)
mov
rol
ficomp
mov
inc
mov
fstp
outs
cmp
mov
stc
dec
adc
dec
xchg
xchg
push
mov
imul
push
je
dec
push
bswap
add
sbb
cmp
sbb
mov
or
mul
popf
inc
push
sahf
retf
mov
rol
lods
cld
sar
push
daa
mov
mov
(bad)
push
int3
sbb
push
lahf
xor
(bad)
jg
int3
jmp
in
retf
and
xor
(bad)
mov
jne
in
and
cmp
xor
push
push
mov
sbb
je
xor
dec
arpl
ficom
jp
rcl
mov
retf
cdq
ror
mov
cmp
adc
jmp
inc
imul
or
push
sub
jle
or
cmp
sar
stos
loopne
stos
mov
std
int
or
(bad)
sub
jae
and
adc
fbld
rol
sbb
jecxz
jmp
lea
out
xchg
push
ds
aam
ror
bound
outs
xchg
add
iret
jno
enter
dec
fild
in
mov
call
mov
pop
mov
xor
test
dec
ins
mov
or
xor
push
xor
jne
retf
arpl
addr16
ret
inc
shl
jnp
and
cld
xchg
retf
in
pop
cmps
push
xchg
ss
push
scas
inc
pop
shl
fneni(8087
pushf
clc
sbb
in
jp
test
int3
loope
pop
cmp
daa
jae
pusha
pushf
rol
imul
hlt
mov
push
out
push
(bad)
jnp
xchg
fcomp
mov
cmps
cmp
das
hlt
cmp
fidivr
and
jno
inc
(bad)
sbb
add
jmp
mov
imul
jbe
xor
sbb
adc
pop
mov
inc
and
push
outs
out
push
jne
scas
xchg
push
(bad)
jnp
xchg
fcomp
mov
cmps
cmp
das
hlt
cmp
fidivr
and
jno
inc
(bad)
sbb
add
jmp
mov
imul
jbe
xor
sbb
adc
lea
mov
xor
push
add
sbb
push
add
or
js
dec
mov
loop
ret
stos
out
push
xchg
test
sti
fsubr
iret
add
dec
push
mov
inc
pop
hlt
sbb
fsubp
repnz
loope
call
adc
push
lods
fs
test
sahf
daa
mov
and
(bad)
sbb
xor
jmp
mov
sti
cmp
int3
inc
inc
repz
sbb
outs
sub
mov
addr16
jbe
cmp
mov
and
les
arpl
(bad)
pop
loop
ret
stos
out
push
xchg
test
or
into
popa
and
cmp
iret
pop
clc
adc
ins
jnp
sbb
inc
cmp
data16
bound
mov
lods
xor
mov
mov
loope
or
sahf
adc
dec
pop
mov
scas
adc
inc
stc
cmp
fcomp
and
dec
inc
not
add
mov
clc
call
inc
je
test
jae
iret
mov
inc
test
scas
mov
mov
inc
dec
push
sub
mov
mov
adc
inc
cmp
fwait
lds
jg
and
add
aad
(bad)
leave
test
xchg
mov
shr
dec
xor
(bad)
xchg
jae
jp
popa
push
adc
xor
add
pop
mov
cmps
mov
dec
adc
ds
cdq
retf
mov
clc
pusha
lods
jb
outs
xchg
pop
jmp
push
shr
pop
xchg
inc
test
stos
cmps
jecxz
adc
add
adc
ja
lea
sbb
jmp
dec
mov
in
pop
xchg
ret
cmp
pop
out
mov
sub
clc
sbb
mov
mov
push
lods
jge
je
test
jnp
iret
mov
inc
test
scas
mov
mov
inc
dec
push
or
push
out
push
inc
or
enter
in
mov
sub
inc
add
in
jge
mov
lods
push
push
popa
pop
es
popa
push
sti
cmc
mov
inc
jle
hlt
inc
push
sub
inc
inc
xor
mov
iret
imul
add
pop
aad
jle
dec
or
call
or
or
(bad)
in
dec
out
out
gs
mov
out
mov
(bad)
out
inc
test
jmp
imul
sub
mov
inc
and
sub
cmps
std
add
repz
pusha
movs
or
rol
mov
test
daa
mov
cmp
inc
inc
pop
gs
pop
mov
aaa
retf
sbb
jbe
inc
push
jae
cli
push
retf
jl
js
rcr
test
cmp
and
dec
cmp
(bad)
scas
inc
cmp
jge
mov
push
pop
(bad)
xchg
ss
cmp
fdivr
test
out
mov
idiv
std
dec
mov
dec
xchg
push
pop
inc
mov
mov
daa
add
cwde
popf
adc
push
lea
stos
movs
push
sbb
out
xor
pusha
lahf
(bad)
sbb
int3
ret
add
loop
outs
push
jne
sub
xor
lea
mov
cli
repz
mov
fcmovnbe
push
jecxz
outs
int3
retf
not
js
ret
fld
mov
imul
or
scas
iret
mov
jno
lea
pop
jne
push
pop
daa
xchg
repnz
in
xor
jno
call
jmp
shl
sub
das
mov
cli
repz
mov
cli
retf
ds
xchg
sub
stc
adc
hlt
add
aad
cmps
and
xchg
ror
movs
scas
dec
in
jns
cmp
jae
mov
pop
xchg
xor
(bad)
scas
dec
cmp
jno
mov
push
push
movs
xchg
data16
mov
addr16
nop
mov
(bad)
(bad)
icebp
into
(bad)
sub
test
scas
jl
dec
ins
lea
loopne
cdq
outs
cmp
(bad)
mov
cmp
iret
sbb
or
fwait
test
mov
cmp
push
push
cmp
lods
mov
pop
enter
add
sub
(bad)
cs
mov
cmp
loop
cmp
add
rcr
fwait
aas
nop
mov
dec
iret
jle
stc
cmp
rcr
scas
mov
sub
push
sbb
js
std
push
ds
sbb
push
cld
aaa
adc
imul
and
std
pop
inc
and
jmp
and
std
pop
adc
addr16
sub
rol
hlt
xor
outs
dec
inc
xchg
mov
(bad)
int3
in
bound
pop
test
test
push
pusha
cmps
adc
mov
arpl
push
push
std
push
push
sub
rol
hlt
xor
outs
dec
inc
xchg
mov
(bad)
int3
in
bound
pop
test
test
push
pusha
mov
lock
lock
lock
lock
lock
leave
push
dec
fimul
mov
pop
cmp
retf
icebp
(bad)
jmp
add
jnp
out
pop
adc
mov
repz
pop
mov
push
dec
rcr
jmp
jnp
gs
xchg
test
fsubr
mov
pop
sub
into
pop
sub
into
pop
sub
into
pop
sub
ja
cs
scas
mov
int
add
and
shr
jg
int3
cld
lods
stos
int
sub
pop
jge
popf
xor
add
adc
mov
add
or
pop
mov
push
add
ror
push
or
in
ds
pop
int3
(bad)
scas
mov
shl
mov
test
add
stos
outs
xor
cmp
ret
sbb
add
test
cmp
push
inc
inc
add
mov
test
sub
pcmpgtb
adc
je
fcmove
push
js
xchg
mov
and
jp
xor
dec
rol
mov
(bad)
(bad)
fstp
sbb
cmc
stc
sbb
mov
push
jg
aaa
popf
ss
mov
call
imul
adc
sub
sub
call
push
adc
aaa
inc
adc
and
push
test
mov
(bad)
xor
jae
out
xchg
sbb
sahf
pop
or
rcl
jae
add
sbb
mov
(bad)
(bad)
repz
fwait
scas
fistp
adc
or
nop
popa
inc
mov
rol
mov
iret
sub
dec
push
adc
cmp
pop
lods
add
dec
test
mov
jge
mov
pop
in
dec
loopne
into
pusha
test
out
mov
imul
dec
mov
out
add
mov
lods
iret
movs
repnz
(bad)
in
and
xor
mov
(bad)
jns
jo
arpl
push
jnp
dec
loop
jmp
pop
movs
rep
push
jmp
mov
into
mov
jl
fwait
cmp
xchg
fiadd
inc
aad
rcl
sbb
iret
in
es
mov
rcr
in
mov
int3
cmps
xchg
int
mov
dec
pinsrw
jno
or
xor
cmp
lea
adc
ins
mov
sahf
in
loope
mov
mov
(bad)
call
add
div
mov
hlt
xor
test
fcom
mov
cmps
push
popa
inc
daa
sbb
cmp
and
xor
bound
sbb
sub
std
fisubr
jl
daa
jp
cmp
sar
retf
arpl
cmc
xlat
jne
es
push
jl
rcr
int
push
(bad)
jp
pop
xchg
lock
xchg
ss
jg
adc
jno
jno
nop
adc
ss
int3
sbb
pusha
int
fwait
ins
jmp
das
add
dec
xor
icebp
jmp
rcl
ins
out
arpl
sbb
xor
out
pop
and
xor
mul
ja
mov
aas
js
xor
dec
xchg
push
pop
ret
into
sbb
xor
mov
(bad)
ins
daa
aaa
loop
test
test
arpl
dec
xor
cmp
and
call
imul
sub
jno
test
xchg
retf
sub
lds
pop
mov
aas
and
fcmovb
or
mov
(bad)
into
sbb
dec
pop
mov
or
jecxz
add
gs
or
jbe
jmp
or
sub
jnp
out
call
dec
add
mov
and
nop
inc
les
and
push
dec
sub
jae
lahf
mov
add
mov
mov
pushf
xor
inc
dec
xor
mov
cmps
adc
loopne
cdq
bound
mov
gs
stos
outs
xor
popa
mov
dec
pop
cmps
cmc
sbb
and
jno
jg
jae
ja
sahf
pop
movs
push
cmp
ja
sbb
push
inc
inc
sub
mov
js
xchg
cmp
jne
xchg
pop
in
or
and
pop
pop
in
adc
mov
or
outs
xor
ficomp
push
adc
movs
cwde
and
js
mov
iret
dec
and
or
mov
dec
out
jmp
stos
ret
jns
stc
push
into
das
push
xchg
xor
and
ins
push
sub
addr16
sahf
fidiv
jmp
(bad)
mov
test
fdiv
adc
popf
push
cmps
push
cmp
dec
imul
adc
push
dec
loop
add
jbe
loope
jae
pop
jb
ins
push
into
out
repnz
mov
dec
daa
fidivr
inc
and
je
nop
push
inc
sbb
adc
jge
fcom
loop
frstor
fmul
jmp
imul
xor
inc
lea
jge
std
cmp
aad
fmul
test
sub
pop
push
inc
pop
mov
mov
in
sub
mov
jmp
cmc
jmp
xchg
xor
iret
xlat
dec
adc
int3
xchg
pop
and
or
lds
fist
jmp
scas
ss
loop
rol
xlat
pop
mov
int3
mov
jns
data16
xor
scas
push
cwde
jnp
pop
scas
adc
loopne
fistp
addr16
cmp
cld
xchg
fldcw
sbb
sub
mov
sar
xor
lods
(bad)
dec
inc
xor
push
sbb
adc
sub
mov
dec
ss
mov
lea
js
sbb
jns
jb
inc
jmp
cwde
adc
gs
dec
cmp
push
mov
std
ins
call
push
or
xchg
sbb
ret
ret
daa
or
(bad)
icebp
repz
and
xchg
pushf
mov
gs
ret
push
adc
int
unpcklps
loopne
xor
pop
cmp
sub
aad
fadd
test
test
and
cmp
mov
les
jg
sti
inc
dec
mov
outs
and
xchg
xchg
pop
shr
scas
or
xor
sti
pop
xchg
repnz
push
mov
xchg
lock
xchg
mov
jae
aaa
mov
(bad)
rol
mov
std
jns
sub
aad
fadd
test
test
and
cmp
mov
les
jg
sti
inc
dec
mov
outs
and
xchg
xchg
jp
das
scas
dec
xchg
sub
inc
jno
xor
aam
(bad)
sub
jl
imul
push
cmps
mov
test
pop
or
(bad)
add
jge
cmp
pop
test
jne
iret
pop
(bad)
shl
(bad)
inc
add
mov
jo
xchg
sar
inc
adc
add
mov
scas
stc
pop
and
pop
out
bound
rcl
inc
lock
push
xor
arpl
jno
out
xchg
mov
loop
in
xor
shl
fdiv
ja
adc
mov
add
nop
ror
aad
sub
pushf
repz
(bad)
stos
cli
sbb
mov
push
dec
push
dec
ret
out
(bad)
adc
sub
jno
mov
iret
jmp
pushf
push
push
je
inc
push
pop
rol
(bad)
mov
push
pop
xchg
fcom
dec
mov
popf
jo
push
or
ins
dec
or
push
lods
ud1
scas
retf
cmp
and
add
movs
es
jae
cmp
loope
pop
sub
jecxz
mul
and
pop
jb
stc
xchg
aas
dec
mov
mov
sub
leave
xchg
push
push
in
push
ins
fadd
and
inc
cmp
jns
ffree
mov
pushf
sub
or
bound
lahf
lods
or
mov
test
fcom
jnp
cwde
and
lods
aaa
in
test
loop
bnd
adc
sar
mov
jo
push
mov
pop
xchg
fcom
dec
mov
jge
sub
adc
xor
(bad)
test
cmp
fdivr
loop
dec
sti
je
leave
iret
sbb
rcr
mov
cmp
pop
hlt
iret
test
jl
std
and
ins
stos
mov
cmp
and
call
imul
js
repnz
xchg
daa
outs
fs
imul
adc
cmp
xchg
fstp
fiadd
mov
mov
push
aad
sti
and
ja
aad
xor
xor
(bad)
es
(bad)
cld
mov
push
int
push
out
sub
mov
(bad)
xor
(bad)
outs
push
xchg
or
rcl
cmp
pusha
pop
or
nop
pop
push
jne
push
cmps
icebp
pop
mov
inc
enter
jo
mov
sub
(bad)
stc
out
retf
pop
sub
adc
test
mov
test
mov
xor
cmc
jge
adc
call
pop
hlt
outs
cmp
add
clc
icebp
add
sbb
int
mov
or
add
pop
sub
push
daa
jecxz
and
cld
out
(bad)
pop
pusha
gs
and
push
mov
(bad)
fdiv
adc
aas
clc
out
pop
jne
pop
int3
shl
imul
pop
ret
jmp
dec
or
sahf
and
imul
mov
clc
xor
pop
or
retf
pop
aaa
adc
sub
push
jge
lahf
sbb
sub
or
adc
aas
and
sar
das
into
pop
pop
pop
setge
cli
mov
sbb
dec
xchg
sbb
xchg
dec
inc
iret
pop
xchg
sub
daa
sub
dec
imul
iret
popf
test
xchg
cdq
xchg
mov
ss
adc
test
mov
test
mov
xor
cmps
ffreep
add
mov
or
xor
sub
jo
(bad)
stc
inc
fmul
jmp
out
inc
lods
repz
imul
add
jae
and
sub
out
retf
hlt
out
mov
daa
arpl
pop
adc
and
pop
scas
aaa
sbb
call
add
xchg
rcl
into
and
test
(bad)
shl
in
inc
mov
or
pop
or
popa
cwde
pop
fisubr
inc
push
int3
mov
cdq
sub
xor
xor
mov
(bad)
idiv
sti
test
adc
test
rcr
jle
scas
stos
dec
inc
fstp
pop
mov
rol
fistp
inc
mov
or
mov
mov
mov
ds
js
adc
jp
loope
cs
scas
jns
inc
and
dec
jl
cmp
mov
jo
fidivr
fiadd
movs
jae
(bad)
out
je
shl
and
jmp
scas
scas
mov
lock
add
mov
fldcw
mov
test
push
inc
ror
test
fsubr
cmp
loopne
mov
fst
and
cmp
les
inc
xchg
out
jmp
lods
jnp
sub
lock
dec
call
int3
mov
mov
std
and
not
inc
enter
scas
cmp
(bad)
cmp
jb
aad
adc
in
sub
enter
fs
jmp
lea
shr
loop
push
test
rcr
addr16
jmp
jbe
pop
mov
xlat
dec
popa
or
daa
jns
(bad)
int
jne
movs
jmp
(bad)
mov
jmp
xchg
outs
push
cmps
pop
mov
mul
pushf
outs
mov
mov
pop
lods
aam
pop
ja
mov
cmp
shr
mov
cwde
add
(bad)
jmp
dec
and
out
xchg
clc
leave
xchg
jle
xchg
out
adc
jge
push
cmc
lahf
leave
or
ins
in
test
mov
retf
scas
retf
sub
retf
dec
lock
and
das
fisub
fcmove
mov
and
push
fwait
or
jmp
sub
lea
inc
(bad)
ror
add
push
popa
shr
dec
mov
retf
inc
xchg
js
dec
mov
xchg
aas
jecxz
in
leave
fcomp
stc
xor
push
adc
or
or
dec
xor
lea
sti
pop
repz
cmps
hlt
ror
sub
adc
mov
sub
lahf
call
lods
bound
sbb
and
jecxz
fld
leave
cmp
ss
loopne
cdq
cmps
or
mov
add
push
rcl
jb
cmp
sti
jmp
lods
bound
sbb
and
jmp
(bad)
aad
mov
icebp
loop
inc
mov
pop
fs
xor
xor
neg
das
loop
or
inc
sub
xor
xor
xchg
xor
jl
stc
ds
pop
dec
jbe
mov
mov
aad
jg
push
push
(bad)
dec
xlat
jmp
ja
or
mov
mov
push
test
test
mov
add
inc
inc
adc
inc
mov
push
lods
mov
movs
dec
out
mov
mov
cli
stos
(bad)
test
sub
sub
js
call
jo
call
add
jmp
stos
jge
in
fidivr
push
cmps
retf
dec
call
popa
les
mov
cmp
ror
mov
inc
dec
adc
add
aas
fsub
xchg
sub
enter
cmps
adc
lahf
es
and
pop
dec
cmc
xor
(bad)
mov
mov
xchg
mov
adc
jo
fldcw
push
stos
into
loope
push
sub
inc
xchg
xchg
mov
cmp
fnstsw
in
pop
dec
or
dec
aaa
sub
push
loope
sbb
loop
jmp
les
sub
jne
sbb
loop
jle
ret
test
(bad)
(bad)
pop
mov
movzx
adc
push
cmc
(bad)
jae
(bad)
cld
ins
and
xor
ds
adc
leave
data16
fisttp
fisttp
inc
imul
popa
jns
jp
ins
xchg
test
cmp
xor
mov
int3
pop
data16
sub
and
in
sub
in
test
lods
push
inc
bnd
and
jnp
inc
pop
pop
or
mov
cld
mov
popf
dec
cmc
sbb
mov
in
adc
sub
into
xchg
adc
inc
dec
pop
retf
inc
cli
fimul
imul
lock
sti
mov
adc
cwde
movaps
int
nop
iret
fdiv
mov
lock
lods
push
add
ja
mov
mov
fwait
cdq
icebp
mov
sbb
mov
mov
dec
das
into
mov
xor
icebp
sub
cmp
ficomp
lock
retf
xchg
push
call
loop
in
loope
mov
pop
pushf
jmp
sti
xchg
clc
mov
data16
jne
mov
cmps
addr16
or
mov
(bad)
inc
mov
fbstp
jmp
ss
adc
inc
push
push
out
add
xor
iret
aam
sub
mov
mov
adc
call
jmpw
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
data16
aad
mov
(bad)
push
mov
adc
outs
mov
(bad)
rcl
pop
mov
sub
jnp
ja
mov
(bad)
sub
adc
js
sbb
loope
rol
jmp
mov
mov
mov
mov
loop
mov
sti
out
inc
movs
repz
imul
inc
gs
inc
out
outs
and
pop
and
add
rep
pushf
movs
or
push
mov
shl
adc
jge
enter
stc
in
mov
mov
fsubrp
lock
and
pop
outs
and
mov
cli
add
xor
out
mov
aam
lods
rcl
dec
sub
mov
out
add
cdq
lods
dec
sub
ja
ins
(bad)
ja
ja
xor
aam
dec
iret
adc
hlt
repnz
pop
jno
or
xor
xchg
or
fadd
aaa
dec
ins
out
or
into
and
js
xor
ins
pop
in
mul
jle
inc
loop
inc
xor
mov
mov
cld
mov
mov
icebp
loopne
lods
fcom
or
mov
push
repnz
aas
push
xor
lahf
test
and
cmp
fiadd
add
popf
xchg
jbe
mov
inc
push
push
cli
inc
popa
std
daa
daa
icebp
cmp
and
jmp
sbb
push
in
dec
movs
xlat
call
pusha
cmps
sbb
and
rcr
icebp
xor
imul
add
aaa
lods
(bad)
int
dec
fild
push
call
repz
imul
nop
test
loop
enter
inc
stos
pop
jo
loope
pusha
mov
dec
cmp
jmp
xor
xor
mov
movs
aad
jno
dec
mov
call
adc
sbb
push
ret
adc
push
mov
sbb
mov
cmps
adc
aas
xor
pusha
pop
xor
ins
sub
sub
jecxz
lds
cmp
ins
pusha
mov
std
add
inc
mov
xor
pop
jle
fwait
push
inc
lock
jo
pop
(bad)
jecxz
or
lds
aam
dec
sub
push
xor
test
(bad)
xchg
mov
sub
push
test
adc
push
imul
sub
mov
fiadd
icebp
call
fist
xor
loopne
cmp
sub
push
inc
sbb
mov
call
inc
pusha
(bad)
popf
pop
(bad)
mov
xlat
sub
push
inc
sbb
mov
xchg
cmps
jge
std
cmp
sub
push
inc
sbb
mov
movs
mov
xlat
sbb
adc
pushf
test
cmc
mov
mov
adc
clc
stc
out
adc
jae
and
mov
scas
pop
lods
xor
xchg
inc
jecxz
sbb
mov
aaa
xlat
ffree
jecxz
sbb
mov
adc
pop
sbb
dec
pop
mov
out
cs
mov
sub
movs
and
jo
mov
xchg
or
inc
and
adc
hlt
sbb
pop
std
fs
scas
sbb
push
xchg
cmp
jmp
in
sbb
outs
aaa
cli
push
cwde
iret
and
lods
mov
sub
mov
xchg
in
push
mov
sub
pop
movs
out
div
xor
sahf
add
cmp
inc
ds
int3
jecxz
(bad)
outs
xchg
mov
(bad)
(bad)
lahf
mov
rcr
shr
pushf
retf
test
pop
dec
adc
xor
cmp
fsub
loop
jae
movs
pop
cmc
popa
sti
adc
sbb
outs
add
rcl
int3
sub
push
lods
xor
pop
repz
loopne
xchg
cmp
and
push
in
jnp
daa
cmps
mov
mul
push
imul
pusha
sbb
sbb
popa
mov
push
stos
ret
arpl
fdivr
jg
in
dec
(bad)
xor
dec
aas
and
(bad)
and
push
mov
jbe
ins
adc
mov
jle
xchg
jbe
movs
inc
mov
inc
push
in
stc
adc
fidiv
aas
push
xor
lahf
test
stos
fcmovnb
loop
dec
jge
mov
xor
add
xor
arpl
sub
mov
loopne
repnz
loopne
enter
lods
dec
xchg
repz
push
adc
fdivr
xchg
clc
xchg
or
pop
mov
icebp
xor
mov
mov
mov
ror
push
(bad)
fstp
dec
xlat
(bad)
ins
pop
mov
jecxz
mov
sub
mov
call
lods
in
mov
in
push
fs
sbb
xor
jae
enter
mov
and
jns
into
(bad)
mov
test
inc
pop
or
inc
add
not
out
inc
lods
repz
imul
out
scas
inc
loop
sub
and
jmp
inc
movs
jmp
stos
pop
mov
popf
mov
cmps
xchg
pop
push
leave
in
pop
int3
stos
test
xor
jmp
inc
or
cmps
mov
fdivr
pop
jmp
shl
push
out
xchg
addr16
ret
pop
mov
repz
sbb
and
(bad)
enter
test
sahf
(bad)
daa
sub
xchg
xor
adc
sahf
push
loop
ss
mov
push
mov
xchg
inc
pop
shl
add
mov
xchg
xchg
loope
sti
or
inc
jno
hlt
pop
fisubr
ret
adc
outs
mov
push
cmp
and
ds
lods
shr
cwde
(bad)
scas
add
je
push
mov
jne
mov
mov
test
dec
loop
push
jo
aaa
popf
mov
call
test
cmps
and
ret
and
dec
sbb
mov
imul
dec
pop
sub
ror
sbb
mov
jno
cmp
inc
stc
or
js
xlat
fdiv
loopne
popa
mov
mov
pusha
mov
fstp
(bad)
cli
rcr
daa
sbb
je
rcl
cdq
jno
and
pop
cmps
sbb
movs
xchg
pop
addr16
loope
and
add
jnp
test
cmp
xchg
pop
jge
push
or
(bad)
call
inc
cli
lock
mov
push
mov
lods
mov
sub
in
mov
inc
das
cmp
dec
std
dec
dec
add
inc
jns
stos
cwde
pop
enter
out
ins
ss
(bad)
jge
mov
les
sub
imul
adc
std
daa
and
sbb
fwait
add
not
jbe
shr
mov
mov
push
jmp
fmul
in
mov
aas
or
bound
or
pop
dec
out
xchg
cmps
mov
outs
or
ja
or
sub
pushf
dec
sub
lahf
dec
sub
lahf
dec
sub
lahf
dec
sub
lahf
dec
sub
lahf
jbe
pop
lahf
jmp
cmps
sbb
or
mov
cmp
mov
cmp
mov
cmp
mov
imul
imul
mov
loope
stos
adc
icebp
dec
dec
xlat
sub
enter
nop
adc
mov
push
aas
jle
cmp
bnd
add
mov
and
loopne
xor
inc
(bad)
not
cmps
rcl
mov
std
dec
mov
rcr
(bad)
sti
jl
xchg
bound
or
lods
call
mov
xchg
arpl
lahf
dec
jno
ucomiss
inc
add
and
stos
or
push
imul
int
xor
call
clc
mov
dec
into
(bad)
or
ins
inc
clc
mov
imul
dec
(bad)
mov
bound
pop
xchg
mov
adc
lods
movs
sbb
push
mov
push
and
(bad)
mul
ss
ret
inc
out
dec
xchg
add
mov
ins
jmp
in
(bad)
je
sub
movs
pop
xchg
mov
adc
and
nop
call
xchg
cmc
add
xor
jge
hlt
arpl
cs
movs
daa
loope
jne
or
aam
mov
mov
outs
xchg
gs
(bad)
std
loope
fbstp
ins
sahf
movs
push
adc
mov
jg
add
xor
fs
cmp
inc
mov
aad
das
jl
pop
jge
push
inc
cmps
lss
gs
inc
aam
stc
inc
pop
or
inc
add
out
inc
lods
jecxz
inc
movs
repz
add
imul
add
movs
mov
inc
and
xor
inc
enter
movs
mul
pop
jecxz
pushf
imul
xchg
cmp
loopne
lock
push
rol
and
rcl
pop
xchg
xor
mov
xlat
jmp
dec
inc
inc
sbb
test
outs
dec
push
cmc
mov
jl
pop
jge
mov
dec
pop
daa
retf
mov
xchg
sub
jp
ds
add
outs
dec
enter
mov
mov
retf
fsub
int
jnp
inc
jo
movs
pop
in
xor
(bad)
pop
jle
mov
add
lods
mov
call
ins
mov
jle
dec
and
jle
jl
mov
gs
les
pop
adc
gs
in
and
mov
ja
cs
ins
data16
(bad)
and
ins
fcmovne
sub
sbb
sub
sub
sub
movs
rol
retf
loope
inc
or
adc
add
mov
cld
adc
push
retf
or
cmp
and
lods
add
or
shr
leave
js
inc
mov
and
add
jmp
jnp
cwde
xchg
jb
loop
adc
mov
inc
js
and
adc
lods
test
cld
in
mov
jno
repz
test
mov
xchg
js
ja
adc
jg
mov
cmc
(bad)
pushf
fist
mov
fbstp
jae
icebp
fmul
jne
fmul
pop
in
lods
dec
sub
outs
or
sbb
jp
pop
(bad)
pop
cmp
bound
mov
int
cmp
out
add
retf
lock
cmc
mov
xor
or
mov
jl
loope
xor
fimul
mov
nop
sbb
cwde
stos
out
lds
neg
pop
(bad)
into
pusha
push
lahf
test
push
xlat
fwait
mov
jns
push
nop
int
mov
jns
loop
das
xor
jmp
movs
jmp
es
xchg
imul
xor
inc
adc
outs
aam
push
mov
or
mov
aam
dec
fcomp
dec
fwait
test
jmp
rcl
sbb
jno
mov
sub
xchg
stos
push
cmp
inc
sbb
pop
pushf
mov
call
fbstp
cmc
xor
bound
in
movs
test
(bad)
(bad)
outs
stc
mov
push
push
int3
test
cmp
fsubr
test
inc
push
pop
add
(bad)
jecxz
push
or
fs
mov
sbb
dec
jl
(bad)
shr
push
inc
test
mov
daa
cmp
out
into
sub
add
jne
in
cmp
scas
test
sar
in
rcr
adc
outs
push
cmp
push
test
(bad)
lock
mov
out
outs
xchg
ja
inc
jp
(bad)
cmp
inc
cmp
int3
mov
dec
arpl
and
cmp
aam
xchg
jo
test
adc
mov
sub
hlt
pop
pop
aad
into
(bad)
xor
hlt
cli
out
mov
neg
adc
and
or
test
pop
jnp
mov
mov
push
or
add
dec
imul
mov
retf
repnz
cmps
push
retf
scas
adc
nop
xchg
pop
jecxz
pop
mov
sub
adc
pop
sub
add
xchg
inc
out
movs
fiadd
(bad)
int3
xor
lahf
push
bnd
pop
test
(bad)
cmc
aas
push
fwait
xchg
mov
add
xor
scas
and
clc
loop
sbb
aam
mov
add
jl
fnstcw
data16
lea
inc
mov
mov
mov
test
dec
test
mov
mov
movs
or
data16
inc
mov
pop
dec
call
cli
hlt
pop
jl
fnstenv
jne
or
or
push
mov
sub
mov
cmps
cwde
ins
inc
mov
sbb
jb
shl
mov
idiv
hlt
xor
sbb
xchg
imul
cmp
js
(bad)
push
fwait
sbb
push
popf
and
mov
daa
jns
xchg
push
jno
add
mov
test
in
add
sub
sahf
ret
test
jg
mov
jmp
mov
call
sahf
add
jmp
imul
or
test
cmp
inc
pop
scas
dec
jnp
loop
adc
jg
adc
fst
(bad)
mov
test
add
(bad)
cmp
fstp
popa
jecxz
sahf
dec
inc
adc
cli
fdivr
std
mov
into
test
dec
call
aas
cmps
mov
call
dec
pusha
mov
cmp
ss
xchg
adc
jmp
inc
and
arpl
rcr
out
ja
aad
jmp
ret
xchg
inc
mov
mov
inc
ret
mov
cmp
out
mov
loope
sub
inc
dec
push
inc
cmp
jmp
and
pushf
mov
add
(bad)
les
xchg
in
sbb
test
jno
(bad)
enter
loope
pop
pop
popa
fld1
mov
dec
leave
mov
push
arpl
fimul
jns
jns
push
dec
fwait
cmps
cdq
adc
mov
bound
and
push
sbb
sub
push
xor
sub
(bad)
sar
sub
pop
sub
or
not
and
adc
cmc
int
jmp
fild
retf
xor
pusha
repz
outs
imul
and
fstp
in
stos
or
jnp
mov
or
cmps
hlt
mov
xor
fdivr
xchg
and
add
out
test
out
movs
mov
or
mov
ins
fstp
nop
push
aad
jg
xor
mov
in
out
adc
imul
or
in
cmp
ror
gs
pusha
pop
fs
ss
pop
cmps
nop
dec
in
xchg
out
int3
pusha
inc
push
xchg
mov
cmp
stos
adc
add
je
pop
mov
out
inc
mov
xlat
push
sub
sti
out
test
out
test
out
lods
out
push
mov
cli
push
mov
neg
ret
mov
or
ret
rol
loopne
mov
scas
or
mov
adc
mov
mov
cmps
mov
inc
int3
hlt
cli
push
lods
out
push
mov
mov
adc
ret
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
jmp
inc
xor
add
stc
scas
inc
mov
mov
inc
mov
out
mov
repz
idiv
push
mov
xlat
stc
inc
movs
or
dec
int3
repz
inc
lods
repz
imul
push
mov
out
das
cmps
jmp
inc
mov
(bad)
jmp
mov
add
idiv
mov
(bad)
add
mov
idiv
popa
adc
jmp
add
call
inc
mov
out
jb
lods
push
int
add
push
xchg
fidivr
pusha
sub
jnp
jmp
div
repnz
aam
aaa
jmp
or
repnz
mov
inc
fadd
rcl
or
and
push
imul
xor
lock
das
sti
test
shl
inc
mov
(bad)
cdq
and
(bad)
xchg
push
loop
inc
dec
sbb
push
hlt
jmp
jecxz
jae
mov
push
sar
cmp
js
aad
stc
pop
jmp
push
mov
lods
dec
mov
fisub
test
ja
out
mov
scas
push
pop
int3
fild
inc
cmp
mov
pop
scas
outs
in
ins
in
pop
sub
mov
pop
mov
lods
fldcw
test
(bad)
into
cmps
mov
or
mov
int3
mov
xchg
jnp
pop
mov
sti
inc
push
gs
mov
sar
xor
pop
or
shl
or
mov
adc
mov
mov
or
pop
xchg
out
xor
and
cs
jmp
aam
sahf
std
mov
repnz
ror
inc
ds
mov
aas
add
mov
inc
(bad)
ins
les
cdq
cmc
addr16
jmp
repnz
lods
rcl
sub
mov
ret
fsub
push
xor
mov
pop
lock
pop
push
sub
jb
pop
add
xchg
sub
fimul
call
std
xchg
add
dec
jno
jp
in
pop
cmp
add
mov
loopne
pop
lahf
out
jge
not
mov
gs
fwait
cmps
(bad)
xchg
push
cdq
in
inc
adc
sbb
mov
add
cmps
mov
add
jns
jmp
cmp
push
push
push
adc
jp
sar
aaa
retf
aaa
mov
outs
imul
out
les
add
xchg
rol
or
sub
or
inc
lods
iret
jg
add
pop
shl
push
cs
loop
cmp
pop
leave
jmp
aad
or
or
or
(bad)
out
(bad)
cdq
fwait
xchg
or
lahf
call
scas
mov
sub
and
xchg
fdivr
dec
enter
(bad)
fs
cmp
out
pop
test
nop
out
ror
retf
sbb
(bad)
pop
lea
repz
out
adc
push
add
(bad)
jmp
xchg
sub
jmp
xchg
mov
push
mov
(bad)
jg
lods
xchg
leave
push
(bad)
repz
fld
mov
mov
dec
cmps
(bad)
adc
nop
stos
in
outs
adc
mov
scas
mov
imul
inc
mov
pop
push
jne
jmp
cmp
mov
jno
ror
add
clc
pop
mov
pop
stos
outs
out
sub
repnz
rcl
(bad)
aaa
mov
outs
push
aaa
add
push
call
pop
stos
inc
pop
(bad)
imul
xchg
pop
sbb
sar
mov
dec
pop
cld
and
add
retf
jmp
jo
cs
mov
push
in
shr
push
mov
mov
out
mov
repz
lods
imul
inc
mov
out
adc
mul
(bad)
hlt
aaa
jp
sub
fs
pushf
jmp
(bad)
jmp
mov
push
or
xor
popf
test
movs
xchg
add
mov
or
sbb
pushf
mov
daa
iret
sbb
xor
xchg
add
or
fnstenv
mov
jmp
aas
pop
mul
xor
(bad)
cli
sub
mov
push
cli
sub
adc
push
adc
ins
in
pop
sub
call
xor
sbb
lds
test
adc
js
xchg
ds
xchg
pop
ins
clc
jo
adc
cmp
or
and
mov
dec
cli
add
ret
pop
lods
fwait
dec
xor
fcmovnb
lods
mov
stos
sbb
or
mov
or
fst
sbb
ds
pop
push
push
push
mov
inc
add
sub
or
xchg
jb
out
(bad)
gs
and
and
addr16
sub
dec
sub
(bad)
sbb
stos
(bad)
cli
mov
loope
lahf
push
hlt
imul
add
xchg
mov
test
scas
or
mov
mov
pusha
in
cmp
adc
ss
nop
out
das
ins
retf
das
and
fldcw
push
aas
mov
jecxz
or
movhps
push
mov
popf
dec
es
xor
stos
sbb
cmps
sub
mov
xor
ins
add
je
mov
push
mov
and
in
xchg
pop
lods
retf
jle
dec
adc
pop
lods
mov
push
jle
lods
adc
push
mov
jb
adc
jmp
xlat
nop
loopne
(bad)
bound
test
sbb
aas
test
cmp
cld
cwde
cmp
xor
push
pop
pop
xchg
inc
xchg
add
jae
jecxz
enter
add
mov
jnp
adc
imul
xor
jmp
xor
neg
adc
(bad)
pop
adc
dec
mov
jl
inc
push
xchg
es
inc
sti
push
out
lods
loopne
push
xchg
pop
sti
and
std
and
sbb
push
sub
out
dec
in
repz
mov
fld
dec
leave
icebp
jbe
cld
lods
jno
das
cmp
fnstsw
mov
ss
and
mov
(bad)
push
mov
or
leave
cs
ror
pop
dec
adc
imul
test
jae
xchg
or
adc
dec
dec
push
push
std
adc
cli
jne
lods
push
xchg
xor
adc
fldcw
ret
in
xor
dec
(bad)
icebp
ret
cwde
push
cwde
lahf
je
mov
or
cmc
push
fucomip
jmp
test
xor
fst
cmp
and
stc
das
aaa
nop
cs
or
add
sbb
sti
(bad)
pop
es
int
(bad)
cmp
ds
ret
jmp
sub
fcmovnu
adc
jo
and
add
jnp
imul
mov
or
pop
imul
das
(bad)
popf
inc
cmc
cmp
or
mov
adc
fisttp
adc
jl
scas
leave
jo
and
mov
add
rcl
inc
les
scas
in
cmp
pop
jge
test
mov
and
pop
xlat
sar
mov
xor
pop
mov
jne
mov
mov
jle
or
xor
push
cli
jecxz
popa
(bad)
mov
out
inc
xchg
data16
stos
in
call
loope
jl
cmp
push
xlat
push
icebp
das
(bad)
pusha
rcl
dec
pop
or
leave
nop
std
and
and
test
cmp
xchg
shl
fiadd
push
mov
cmps
cmp
sub
xchg
jnp
add
push
push
xor
mov
(bad)
jecxz
lds
daa
cs
gs
out
outs
sub
enter
std
mov
lods
pop
hlt
push
mov
push
loop
dec
pushf
pop
fisub
inc
lods
mov
fdivrp
inc
fmul
jmp
(bad)
cli
pop
mov
jmp
imul
or
jae
add
xor
inc
cs
lods
xchg
icebp
outs
ret
es
cmc
addr16
test
or
inc
xor
mov
or
popf
mov
out
add
jns
in
sbb
jne
les
push
lock
out
adc
jecxz
cmp
sub
stos
bound
stc
dec
sbb
das
leave
mov
icebp
and
(bad)
inc
jns
xor
jno
les
jmp
xor
jmp
sub
inc
cmp
ret
pusha
push
daa
xchg
jp
lahf
adc
jmp
lock
sub
in
jb
dec
pop
rep
add
fcomip
xor
loopne
loopne
loop
sub
fadd
inc
xor
repnz
ins
loop
or
mov
(bad)
icebp
fbstp
sub
ja
pop
jle
fdivp
inc
push
sbb
scas
jl
test
sbb
mov
fist
inc
and
rcr
ss
movs
outs
pop
movsx
lds
ror
and
jmp
sub
sub
sbb
sbb
xor
leave
pop
mov
movs
adc
or
mov
dec
or
jmp
dec
push
loop
cmp
icebp
dec
xchg
xor
or
fxch
and
stos
outs
jo
mov
fidivr
scas
clc
in
mov
or
sbb
ja
xlat
ret
fst
jnp
xor
mov
jp
add
iret
and
mov
sub
pop
out
inc
js
enter
inc
jge
imul
shr
pop
push
loop
inc
out
shr
inc
jge
sbb
jmp
jns
fnsave
pop
gs
cli
popf
fcmovb
sub
addr16
mov
mov
arpl
ss
or
xchg
pushf
xor
xor
or
jecxz
mov
lea
fistp
cdq
mov
xchg
mov
scas
xor
dec
inc
dec
push
das
ret
cmps
xchg
push
jns
rcr
outs
xchg
mov
sti
test
pop
inc
jle
dec
sbb
dec
xor
jb
popf
ret
mov
pop
jns
movs
jp
cld
pop
test
pop
pop
gs
push
jae
ret
jl
in
in
lea
arpl
les
sahf
add
mov
pop
cmp
push
and
ret
mov
inc
shr
aas
add
sahf
pusha
fs
xchg
or
mov
in
mov
fisubr
leave
stos
retf
dec
add
sbb
arpl
sub
push
popa
lea
mov
mov
iret
cmp
lea
jbe
outs
fsub
sub
mov
(bad)
sub
cmp
jecxz
push
or
push
mov
(bad)
not
mov
add
or
cs
in
push
sbb
test
nop
sub
int
call
aas
scas
mov
dec
popa
cmps
pop
test
ins
cmp
fiadd
pop
or
fcomp
add
aam
ret
mov
push
(bad)
cli
mov
push
xchg
ins
test
les
mov
aaa
and
jne
rcr
fnsave
push
lods
lahf
pop
and
mov
mov
fisttp
adc
loope
aad
sbb
jb
dec
test
mov
mov
in
push
scas
(bad)
adc
movs
dec
pop
push
outs
pop
stos
pop
fimul
pop
in
retf
mov
and
retf
cmc
jns
and
test
scas
(bad)
or
mov
arpl
jp
jns
(bad)
lods
test
add
and
fbld
jbe
inc
jnp
pop
adc
scas
fadd
cmc
int
push
pop
inc
or
clc
jnp
aad
mov
cmps
xchg
xchg
into
pop
repnz
(bad)
ret
sbb
jb
imul
dec
movs
xlat
aam
ror
adc
popa
leave
retf
fcom
pop
pop
and
mov
in
ret
stos
stos
cwde
int
nop
mov
jnp
or
mov
adc
mov
jno
inc
xor
imul
stos
jmp
mov
sahf
scas
ja
xchg
icebp
and
hlt
retf
mov
mov
cmp
cmps
adc
mov
ds
or
dec
jb
hlt
fmul
dec
mov
popa
or
pop
pop
push
sbb
cmp
dec
rcl
or
dec
scas
dec
movs
mov
loopne
push
inc
push
pop
jl
(bad)
sub
pop
enter
ss
ret
in
imul
xor
repz
cs
(bad)
sub
scas
xor
mov
shr
sbb
popf
cmp
movs
sub
pop
xor
icebp
aam
test
cmp
rcl
aam
stc
jp
cli
clc
inc
mov
call
das
push
cmp
ret
loop
stc
mov
int3
inc
lock
pop
pop
outs
sbb
cmp
mov
int3
inc
xchg
fiadd
jle
jle
ds
mov
add
jbe
fist
fimul
mov
iret
jp
int3
jns
jo
ds
sbb
xor
iret
and
dec
push
mov
fs
out
sar
xchg
cmp
jge
dec
sbb
test
popa
push
cdq
push
hlt
or
mov
dec
ret
gs
std
cdq
sub
rcl
xchg
mov
enter
cmp
test
in
mov
xlat
test
pushf
cmps
fwait
add
xchg
cmp
xchg
mov
mov
fwait
add
and
ficom
push
or
jp
ror
mov
mov
cmc
(bad)
xchg
push
out
sbb
aad
push
enter
sar
fwait
xchg
ret
clc
xor
pop
sbb
loope
dec
or
imul
bound
scas
inc
pop
pusha
push
scas
cmp
clc
(bad)
movs
push
rcr
or
in
jae
fwait
outs
mov
aad
pop
sar
scas
mov
adc
cli
dec
dec
cdq
leave
xchg
push
sub
jnp
push
mov
dec
retf
es
cmp
lds
mov
add
mov
retf
sti
sti
das
(bad)
stc
inc
xor
jmp
(bad)
dec
xlat
jmp
imul
push
lods
mov
push
call
repz
loop
lods
xchg
icebp
mov
shl
sar
cli
sub
inc
enter
test
lds
clc
mov
repnz
into
fsubr
mul
inc
cmp
mov
pop
sbb
mov
push
iret
aad
jbe
idiv
mov
(bad)
and
stc
imul
or
mov
mov
out
call
clc
fcmove
pop
repz
cmp
nop
gs
dec
std
sbb
scas
mov
call
mov
pop
mov
clc
shr
ret
lahf
stc
or
scas
into
mov
in
popf
jns
aas
xor
xchg
jmp
inc
dec
adc
(bad)
mov
push
jae
sbb
int3
xor
mov
scas
shr
rol
adc
out
int3
test
ret
inc
xchg
sbb
shl
and
(bad)
and
pop
pop
sbb
xchg
int
cmp
add
xchg
or
jmp
jnp
sar
aad
mov
enter
mov
sub
mov
xchg
mov
stos
xchg
icebp
ficom
inc
sbb
adc
mov
sub
pop
dec
lea
mov
enter
mov
push
cld
inc
mov
cmps
cli
jne
popa
shr
fistp
cmps
jp
addr16
daa
aaa
or
xlat
clc
mov
test
jne
pop
pop
std
xor
cli
and
sub
push
xchg
xchg
in
mov
or
push
iret
pop
and
lods
ror
sar
sbb
loop
dec
cmp
stc
lock
sub
in
stos
daa
pop
sar
outs
push
es
sub
in
lock
ret
and
cmp
imul
cmp
add
pop
fs
cmc
pop
and
push
pop
lods
pop
mov
jns
fisttp
sbb
and
imul
cli
dec
jl
jmp
movs
int
sbb
rol
sub
movs
mov
push
retf
pusha
lahf
sbb
loope
push
lods
jne
and
xchg
jbe
clc
jmp
repz
push
call
cmp
adc
mov
sahf
adc
pop
dec
mov
add
cmps
push
mov
test
test
cli
dec
out
cmp
pop
pop
out
inc
repz
inc
sbb
aad
dec
stos
adc
cmp
adc
push
in
cld
outs
out
and
ficomp
xor
cmp
add
dec
cmps
mov
push
int3
fldcw
cwde
mov
int3
pusha
dec
and
mov
popf
in
stos
sbb
test
push
scas
ror
inc
push
in
popa
inc
pop
enter
jg
mov
repz
fwait
je
pop
loopne
xchg
inc
or
pushf
sub
cdq
and
int
cld
jp
das
jbe
pop
sub
or
fwait
lahf
dec
es
aad
pop
inc
xor
call
and
mov
cli
and
push
dec
fisttp
and
je
lods
add
pop
push
stos
sbb
mov
sbb
rol
fidivr
fisttp
adc
sar
gs
mov
mov
and
push
outs
xchg
cmp
popa
mov
cmp
xchg
clc
xor
hlt
mov
das
jo
iret
retf
pushf
sar
xor
cs
xor
inc
out
jp
fsub
adc
test
sbb
inc
fsubr
jns
and
jl
cmp
cmp
push
inc
(bad)
lea
add
repz
fsubr
push
add
pop
mov
cmp
cmps
add
dec
inc
inc
sbb
mov
shr
push
push
cs
test
add
test
push
repz
push
neg
fst
mov
imul
aaa
cmp
aad
rcl
push
dec
and
int3
cs
jmp
shl
xchg
movs
(bad)
mov
int
adc
lds
push
outs
pusha
cmp
add
gs
int
jae
cmp
jmp
shr
xor
push
lock
ds
ret
jo
ja
mov
cdq
loope
jo
in
js
or
sub
idiv
addr16
xchg
icebp
xchg
div
fistp
sti
nop
push
enter
pushf
push
add
push
cmps
inc
mov
ror
inc
sahf
xor
or
mov
div
dec
int3
dec
jmp
ins
and
xchg
pop
repz
not
xor
sbb
movs
shl
aas
sahf
out
clc
pusha
movs
sti
test
xchg
mov
xchg
sbb
jge
xor
imul
sub
pop
pop
xchg
test
popf
adc
mov
jg
or
fwait
pop
cs
jns
repnz
cmp
popa
and
in
mov
add
cmps
xchg
jge
mov
xchg
cmp
xor
push
daa
sbb
and
sub
xchg
push
or
mov
mov
cwde
clc
jb
loop
inc
rcr
add
loope
test
cs
popa
div
ret
fcmovbe
icebp
add
out
out
push
repz
push
mov
repz
ret
dec
mov
jg
ret
mov
mov
pusha
out
call
and
imul
(bad)
xchg
mov
stos
ja
xor
jo
mov
int3
xchg
cdq
loop
ins
imul
aam
and
jecxz
loope
dec
pop
and
pop
jecxz
pop
icebp
or
enter
repz
push
mov
and
inc
stos
pop
retf
arpl
xlat
ret
push
push
add
sub
xchg
aaa
dec
jge
dec
dec
xchg
aad
imul
mov
sti
and
loope
sbb
inc
add
add
inc
test
dec
dec
jns
repnz
bound
push
fucom
jae
addr16
mov
add
mov
sbb
loop
sub
add
or
repnz
inc
xchg
loop
iret
xor
jge
sti
cwde
dec
jo
push
push
dec
mov
mov
gs
repnz
jge
aad
das
mov
in
cmp
dec
mov
bound
mov
adc
setp
loop
xor
cmp
pushf
dec
cmc
or
(bad)
lods
push
(bad)
(bad)
cli
jae
pop
pop
push
xchg
jno
xchg
int3
or
pop
rcr
adc
out
aas
mov
jmp
ror
and
or
add
mov
in
add
sbb
xchg
das
call
loop
add
rcl
ds
jle
jl
scas
mov
cmp
or
loopne
push
xchg
add
sub
dec
cmc
shl
daa
xchg
mov
dec
stos
rol
and
iret
push
xlat
sbb
imul
les
popf
xor
jo
(bad)
scas
adc
in
sub
test
pop
push
gs
into
xchg
outs
mov
sub
sbb
(bad)
or
cwde
lea
or
ficom
xchg
mov
xchg
sub
pop
jne
retf
dec
cmp
push
xchg
dec
iret
mov
push
pop
in
popf
add
adc
mov
ss
dec
gs
jno
sbb
push
and
mov
dec
out
fs
adc
aad
dec
jns
(bad)
(bad)
les
pushf
cmp
bound
or
jns
(bad)
sub
repz
pusha
pop
stos
or
mov
jbe
push
pop
loope
arpl
xchg
cs
sub
push
imul
adc
mov
aas
xchg
xchg
rcr
lahf
xor
mov
sti
pop
push
push
scas
hlt
mov
enter
cmp
je
std
mov
jle
popa
xor
jno
rol
and
call
dec
imul
fst
lea
lock
push
in
dec
mov
pushf
int
push
push
aad
js
stc
fiadd
es
add
das
gs
pop
int
push
sbb
fadd
fnsave
pusha
inc
dec
adc
leave
lods
addr16
push
inc
dec
sbb
in
jns
inc
push
xchg
jmp
jg
cmp
jmp
xor
pop
mov
aad
add
test
in
cmp
cli
jp
sub
mov
and
xchg
mov
fisub
repnz
call
mov
lods
or
mov
out
dec
js
add
mov
inc
not
jae
movs
cli
mov
scas
xlat
les
cld
cmp
lahf
push
push
arpl
dec
inc
add
test
fnstsw
dec
mov
into
xchg
sahf
push
jmp
pop
sahf
(bad)
pusha
lds
shl
pop
sbb
push
sbb
loop
mov
push
fbld
jno
dec
retf
mov
int3
mov
sar
cwde
xchg
inc
pop
dec
clc
das
pop
adc
pop
loope
and
mov
inc
push
cmp
ror
jmp
iret
mov
sub
push
call
push
mov
or
jne
push
popf
jne
inc
enter
add
inc
inc
or
into
pop
loop
hlt
dec
jo
out
aam
mov
sub
cs
push
push
inc
pop
or
dec
test
out
pop
movs
sti
(bad)
push
test
inc
out
dec
mov
mul
shl
inc
data16
out
data16
cmps
out
popa
xor
adc
jo
dec
and
mov
lea
or
inc
xor
mov
or
(bad)
imul
ds
fs
mov
push
pop
inc
(bad)
adc
or
imul
sbb
xor
int
les
mov
and
cmp
jle
sub
fldenv
cmp
fsub
push
and
inc
test
mov
popf
lds
sub
daa
jl
jnp
test
dec
icebp
sbb
sub
mov
mov
cmps
ror
imul
mov
call
cmp
cmp
pop
loop
add
xchg
push
sbb
and
mov
mov
push
fisub
mov
pushf
push
inc
je
in
dec
dec
mov
out
mov
mov
cld
mov
lods
out
shl
std
inc
cmp
lea
push
leave
out
mov
push
mov
imul
mov
popf
mov
sbb
push
push
mov
mov
cmp
bound
arpl
mov
jle
dec
fild
xchg
mov
test
test
adc
mov
dec
scas
test
icebp
test
nop
sbb
aas
aam
inc
push
sub
jo
sahf
loope
aam
mov
mov
cmp
xlat
mov
xchg
cmc
leave
sahf
inc
cmps
retf
mov
cmps
lds
(bad)
repz
arpl
adc
add
imul
dec
jp
add
ins
xchg
rcr
loope
call
pop
mov
or
mov
sar
add
jb
mov
push
pop
xchg
arpl
xchg
adc
or
and
stos
and
stc
call
aad
sub
fdiv
test
lods
dec
test
hlt
pop
lahf
xlat
jmp
imul
mov
sbb
push
jb
std
cmps
into
jp
mov
shl
ja
sahf
mov
pushf
mov
fs
xchg
les
cmp
mov
pushf
xchg
mov
cmp
jns
dec
(bad)
pop
and
or
repnz
push
ret
icebp
sbb
xlat
dec
shl
fnstcw
push
lea
stc
push
in
in
push
(bad)
mov
push
fs
pop
mov
xor
aaa
in
ret
movs
inc
lods
sub
bnd
inc
cld
or
out
adc
int3
sbb
test
aaa
jnp
fidivr
adc
fwait
jmp
xchg
push
lea
and
sub
into
pop
push
mov
sub
inc
xchg
por
push
pusha
std
retf
int
icebp
and
fisub
pop
and
stc
leave
cmps
push
pop
out
or
sti
sub
sbb
sti
iret
shl
inc
dec
sahf
cmc
scas
call
addr16
and
mov
clc
adc
inc
lea
inc
enter
fwait
scas
xchg
xchg
sub
push
push
pusha
dec
and
cmp
jp
jge
and
mov
ret
fadd
in
sub
mov
xor
sbb
mov
mov
mov
mov
push
or
out
push
sbb
test
jns
xor
push
std
jmp
imul
pop
scas
es
cmc
dec
arpl
mov
jmp
pop
sahf
fbld
in
cmps
popf
arpl
cld
aam
das
and
out
int3
or
(bad)
jbe
jmp
lds
jnp
nop
iret
jle
cmp
adc
and
sub
ss
cmp
cld
jle
push
push
pop
(bad)
enter
cmp
ret
repz
sub
pop
sub
jnp
int
sub
adc
jo
rcr
bound
ds
push
data16
cmp
xor
push
loope
in
bound
pop
cli
(bad)
or
mov
mov
pop
xor
jge
mov
xchg
adc
xchg
rcr
fwait
sbb
push
inc
daa
sub
fcom
movs
or
pop
test
xchg
xchg
or
adc
fadd
cmps
and
dec
int3
add
sbb
cdq
imul
push
mov
mov
xchg
movs
enter
fidivr
xchg
cdq
mov
dec
lods
pop
imul
or
inc
(bad)
xchg
pushf
and
push
and
mov
and
stos
rcr
add
mov
adc
enter
adc
sub
mov
out
(bad)
iret
inc
movs
mov
and
xchg
mov
jns
xchg
sub
icebp
aam
sti
and
cwde
sbb
jmp
iret
popf
cmp
pop
sub
(bad)
add
ror
neg
mov
mov
rol
nop
cmp
mov
cmp
inc
icebp
test
ins
and
inc
jo
stos
int3
jo
shr
(bad)
adc
(bad)
xor
jne
fimul
mov
and
cdq
movs
xchg
adc
aam
(bad)
sbb
push
popf
pop
mov
adc
cwde
arpl
retf
bound
jne
xchg
test
inc
cmc
fcomp
out
popf
inc
or
mov
pop
xchg
push
scas
xchg
or
out
pop
int
xor
(bad)
adc
dec
das
loope
out
xchg
imul
inc
ret
jnp
popa
int3
loop
mov
sub
bound
arpl
push
mov
shr
mov
adc
stos
adc
in
push
lea
cdq
sbb
push
arpl
sub
movs
pop
push
adc
sub
xchg
loopne
sub
jge
fbstp
das
popf
cli
adc
rcr
adc
mov
adc
jns
sbb
inc
adc
push
hlt
in
test
test
mov
int
ss
mov
ja
lods
(bad)
mov
div
pop
into
mov
retf
cmp
ficom
repnz
push
iret
scas
jo
pop
and
outs
mov
(bad)
out
add
fcomi
movs
cli
sti
ins
push
in
adc
and
fs
mov
and
pop
in
pop
adc
xor
or
lds
sbb
(bad)
pop
mov
pop
sbb
xor
aas
idiv
dec
mov
(bad)
ret
outs
popa
(bad)
lock
hlt
add
xchg
inc
pop
xchg
jl
add
test
jo
or
icebp
sub
mov
xchg
and
fwait
ror
or
and
pop
mov
push
mov
fsubr
jmp
ja
mov
mov
ds
add
add
sahf
dec
push
gs
hlt
int
call
xchg
in
and
adc
jne
push
adc
mov
pop
or
or
jmp
and
inc
lds
pop
cmc
inc
int3
mov
mov
inc
adc
sub
dec
mov
mov
xchg
sub
mov
ins
sbb
stos
(bad)
cld
jns
mov
mov
pop
addr16
repz
lss
adc
push
or
sbb
test
dec
jne
into
jbe
pop
sahf
jne
ss
shr
push
call
(bad)
lds
xlat
jmp
jl
mov
sbb
mov
jnp
sar
sub
cmp
pop
sbb
cli
inc
aam
test
adc
ins
dec
xchg
mov
fist
push
or
dec
push
mov
jmp
push
sbb
sahf
and
xor
imul
ins
jnp
jp
xor
ret
jb
addr16
pop
push
mov
jbe
cmp
mov
sbb
enter
loop
xor
or
jmp
jmp
pop
les
mov
or
jnp
sub
sbb
ins
xlat
icebp
push
jle
jns
int
pop
pop
xor
adc
bound
call
add
mov
jg
aas
push
push
(bad)
xor
sub
mul
pop
and
lahf
in
cmps
mov
and
dec
or
lods
scas
add
aad
loope
pushf
mov
cmc
mov
mov
(bad)
mov
dec
xchg
inc
mov
ins
out
jae
(bad)
push
mov
cmp
cmps
cmp
lds
iret
jno
sub
pop
xor
outs
or
dec
call
icebp
das
enter
pop
lahf
cld
mov
gs
push
mov
jo
loopne
adc
out
cmp
jns
loop
retf
fisubr
xchg
sahf
in
popa
call
addr16
test
xchg
(bad)
jns
stc
inc
or
arpl
pop
pop
jnp
(bad)
xchg
cmp
jge
cdq
les
leave
in
inc
stos
push
dec
data16
jne
fs
xor
je
dec
push
adc
gs
dec
and
les
adc
into
jge
aaa
(bad)
inc
inc
test
push
sub
pop
call
das
xlat
sub
popf
out
sahf
in
daa
push
jns
lock
mov
cmp
add
push
and
mov
dec
(bad)
repz
in
xchg
jmp
mov
movs
fst
mov
jg
retf
push
sbb
dec
push
aad
iret
push
push
dec
mov
test
xlat
inc
mov
lock
cmp
mov
test
mov
stos
xchg
mov
xor
cs
sbb
jp
and
pop
jp
jns
aaa
test
call
add
xchg
xor
lea
scas
jp
movs
fst
mov
mov
adc
sub
inc
repnz
xchg
dec
lods
push
pop
mov
out
cmp
jns
shl
add
push
retf
mov
(bad)
fstp
jp
inc
aaa
mov
leave
cmc
shl
sub
popf
addr16
clc
sti
shl
sub
pop
xor
int3
bound
pop
and
xor
fild
cmps
adc
and
retf
dec
ins
popa
inc
sbb
es
xchg
bound
inc
push
leave
xchg
cmp
push
cmp
leave
mov
and
ficomp
fucomp
lods
rol
retf
push
pop
xor
ret
out
pusha
call
sub
cld
and
adc
call
test
cwde
ds
add
outs
retf
or
add
fst
dec
lahf
xchg
dec
fdiv
xchg
pop
push
xchg
int
inc
icebp
loop
cmp
ds
ds
xor
popf
add
inc
pop
adc
cmp
shr
ja
fild
mov
fpatan
mov
imul
shl
fldcw
mov
or
inc
push
popf
cmp
and
sbb
and
adc
retf
ror
ret
mov
xchg
outs
adc
mov
shr
dec
add
sub
fs
rcr
pop
repz
mov
sahf
adc
inc
mov
(bad)
cli
dec
test
jmp
imul
and
outs
inc
cmps
mov
ret
outs
(bad)
fs
retf
hlt
out
mov
and
call
pop
out
and
push
pop
lahf
aaa
js
sub
iret
out
adc
mov
fidivr
jns
jg
pop
fst
jg
mov
push
rcr
mov
inc
ins
jno
add
mov
leave
or
outs
clc
push
jmp
xor
cwde
in
push
or
fxch
rcl
jae
mov
fcomp
hlt
retf
loopne
cmp
loope
add
out
test
add
popf
inc
or
sub
jge
adc
out
lods
mov
inc
cmp
push
adc
pop
add
aam
ret
in
test
xor
outs
add
xchg
pusha
jmp
scas
inc
call
test
xchg
inc
jle
mov
stc
int3
mov
pop
inc
outs
push
loope
shl
repz
add
adc
call
jmp
inc
xor
pop
(bad)
jns
rcl
imul
cdq
and
dec
sbb
mov
rep
in
aaa
daa
mov
mov
ss
pop
in
shr
mov
sar
stos
fcmovu
or
cmp
cmp
popf
fwait
mov
mov
repz
pop
mov
sub
mov
iret
sbb
cmp
outs
outs
in
xchg
test
outs
jl
stc
adc
popa
inc
or
adc
shr
add
stc
dec
or
jb
and
fdivr
mov
inc
adc
push
ja
clc
in
enter
adc
xchg
pop
mov
mov
or
imul
pushf
(bad)
dec
in
outs
aas
out
out
xlat
cmp
sbb
pop
stos
dec
in
imul
push
mov
xor
pop
xor
cmps
xor
ss
jb
cdq
mov
aad
call
int
jb
int
xor
add
out
rcl
mov
jp
shr
out
dec
pop
fcom
(bad)
(bad)
repz
(bad)
ja
outs
out
xchg
test
cmps
ror
jae
pop
add
xchg
mov
mov
sbb
aad
movs
ret
stc
jmp
movs
inc
push
push
sbb
jge
pop
call
daa
xor
int
mov
data16
idiv
arpl
cmp
repz
shl
or
mov
mov
es
inc
push
fsubr
pop
leave
adc
js
cli
mov
xlat
pop
adc
push
xor
dec
mov
mov
and
aad
inc
out
push
das
mov
mov
(bad)
icebp
jo
sbb
mov
pop
stos
push
cmp
mov
jne
jmp
inc
bsr
les
adc
push
push
adc
repz
fldcw
data16
xchg
mov
cmp
repz
mov
inc
fcmovbe
xchg
out
adc
pop
(bad)
mov
out
pop
sbb
aas
movs
aas
aaa
rcr
push
jle
add
or
call
sub
out
call
pop
mov
gs
call
movs
or
mov
(bad)
cmp
shl
lods
cmp
xchg
mov
repnz
stos
call
pop
push
xor
and
gs
cld
xchg
jmp
iret
push
cli
dec
dec
mov
sbb
nop
xchg
pop
sub
xchg
data16
cmps
pop
std
push
pop
(bad)
and
push
push
sbb
dec
inc
data16
xor
fld
or
xor
int
popa
(bad)
cmps
fsub
sbb
mov
inc
sub
data16
mov
mov
bound
mov
fstp
mov
xor
pusha
xchg
mov
fwait
fs
mov
push
ret
clc
div
xlat
ss
(bad)
mov
adc
popf
dec
inc
out
xchg
(bad)
jae
inc
sti
mov
cmp
aam
fucom
jne
mov
jp
mov
ror
imul
fadd
cmp
ja
mov
xlat
or
mov
jne
ds
outs
adc
xchg
in
sub
and
clc
hlt
inc
jnp
mov
retf
push
mov
cmp
sub
fld
jp
and
gs
sar
icebp
pop
outs
icebp
clc
xor
test
jle
dec
pushw
adc
pop
sbb
call
xchg
adc
in
pop
xor
(bad)
sti
mov
mov
pop
(bad)
xlat
pop
dec
adc
int
mov
or
lahf
inc
lock
sar
enter
idiv
pop
sti
pop
sahf
js
xor
mov
dec
or
rol
push
arpl
jnp
or
call
cmp
mov
enter
out
lahf
mov
xor
shl
push
sub
mov
push
stos
xchg
es
sub
or
inc
push
cvtpi2ps
fbld
adc
mov
int3
push
lds
push
test
sub
sub
in
xchg
and
mov
sub
and
cwde
in
dec
sti
int3
mov
shr
push
rol
ins
jmp
imul
test
dec
ss
inc
xor
lods
add
pushf
cmp
ds
sbb
mov
mov
xchg
bnd
cmp
repz
nop
in
xchg
gs
jmp
scas
push
or
dec
push
add
pop
xchg
and
jne
lahf
nop
pop
pop
jmp
sub
neg
dec
xchg
retf
jp
popa
jne
shl
cmp
sub
mov
mov
out
(bad)
jbe
adc
mov
sub
push
push
xor
xor
(bad)
in
rcl
int
sti
dec
loopne
ds
mov
pop
call
jle
inc
or
push
std
scas
out
push
jns
mov
push
shl
ins
movs
sbb
rcr
inc
dec
test
xor
pop
adc
popf
mov
and
push
call
pop
call
mov
out
retf
and
in
setae
mov
pop
sbb
xlat
sbb
nop
dec
out
les
sbb
test
push
xchg
mov
mov
cli
or
cmp
lea
jg
cmp
iret
sbb
leave
and
or
pop
(bad)
fdiv
fld
icebp
add
int3
lea
ins
inc
fcmovnb
outs
inc
xchg
clc
lock
push
lea
shl
nop
je
out
and
mov
aaa
jae
test
bound
cmps
pop
dec
inc
mov
xchg
cmp
fistp
add
mov
bound
sub
push
stos
push
cmp
xchg
mov
adc
adc
or
mov
movs
or
stos
mov
popa
in
std
adc
dec
and
call
aam
mov
and
ss
and
aas
ror
leave
std
dec
in
loop
add
bound
mov
aas
mov
into
mov
aad
push
xchg
mov
push
and
jnp
stc
inc
scas
addr16
lea
mov
and
(bad)
scas
sub
pop
mov
dec
sbb
sbb
cdq
stos
xchg
add
add
loopne
outs
mov
retf
push
sbb
adc
(bad)
iret
push
mov
jno
dec
call
pop
jge
call
mov
movs
out
(bad)
lds
int
xor
cmc
pop
mov
and
arpl
pmulhw
fcom
lock
mov
sub
sbb
into
shr
nop
mov
into
cs
mov
dec
sbb
icebp
mov
jl
inc
cli
aaa
addr16
and
push
push
mov
xor
fiadd
lods
enter
(bad)
sub
adc
arpl
test
imul
outs
aas
xchg
outs
adc
adc
mov
mov
sbb
retf
mov
cmp
or
std
mov
dec
xchg
mov
or
jo
push
and
push
pop
addr16
xchg
dec
leave
sbb
push
fwait
cld
push
pop
cdq
ror
div
and
mov
sub
scas
(bad)
test
inc
and
sar
jle
loope
pop
push
addr16
ins
cmp
push
inc
imul
mov
fs
xchg
xor
rcl
pop
add
mov
jb
xor
mov
jmp
outs
inc
add
push
and
rol
add
pop
sbb
adc
enter
dec
or
je
mov
sub
and
lock
ds
ror
aam
pusha
lods
dec
vcvtsd2si
cmps
jmp
addr16
add
push
jmp
outs
aas
aam
test
mov
(bad)
pop
test
mov
int
inc
inc
adc
scas
sub
push
push
jbe
movs
clc
into
test
cmp
retf
mov
hlt
add
out
inc
push
add
or
inc
nop
sti
out
test
stos
or
test
or
push
mov
xlat
push
shl
stc
xor
xor
test
int3
dec
xor
ret
data16
dec
dec
xor
out
mov
shl
arpl
adc
movs
test
mov
sub
aam
aad
adc
scas
add
jne
mov
cli
cs
cmp
cmc
jo
lock
jecxz
jle
jg
push
stc
pop
jns
test
fnstcw
in
jb
lds
sub
xor
out
mov
fldl2t
loopne
in
inc
in
out
lods
sti
out
inc
mov
jmp
repz
add
xor
pop
and
ins
xchg
jmp
inc
enter
lods
repz
ret
scas
mov
repnz
into
jmp
sar
jp
xrelease
xchg
fsub
cmp
mov
dec
mov
jbe
push
rcl
jae
xchg
repz
fistp
pop
das
adc
and
retf
je
fs
pop
ficom
popa
xchg
lods
shr
lods
in
add
rcl
add
and
pusha
mov
sbb
inc
in
push
mov
daa
ja
sub
test
sbb
imul
pop
and
stc
xor
mov
adc
mov
mov
mov
bound
sub
xlat
fcomp
push
jb
mov
cld
pop
inc
mov
add
(bad)
jg
iret
aad
lock
fidivr
mov
(bad)
sub
mov
jg
ins
jb
push
cmp
and
mov
xchg
xor
adc
gs
call
cmp
push
bound
scas
lock
loopne
ds
sub
aad
das
mov
scas
fcomip
jl
(bad)
out
fsubr
mov
mov
or
push
imul
mov
pop
hlt
mov
loop
mov
sub
dec
jecxz
nop
and
addr16
mov
sub
loopne
js
and
mov
aam
dec
movs
clc
cmps
fsubr
pop
push
xor
dec
or
xchg
pop
fistp
jbe
iret
dec
cmp
jb
lods
inc
lds
cmps
idiv
in
add
test
aam
lds
lea
out
les
push
loopne
mov
pop
mov
outs
jmp
cmps
jmp
mov
(bad)
rol
add
cmp
sub
icebp
jmp
cmp
xchg
jl
jecxz
cmp
push
fisttp
push
ror
int
lock
xchg
aas
addr16
test
and
xor
ins
or
xor
out
and
add
xchg
xchg
add
mov
fidivr
mov
popf
xor
(bad)
jp
aad
adc
pop
inc
std
cmp
pusha
push
aam
repnz
into
stc
push
dec
cmps
sbb
dec
xor
int
je
pop
test
(bad)
lds
xor
hlt
ins
sub
sub
mov
cmps
lods
(bad)
xor
jmp
mov
into
mov
outs
jns
jmp
inc
jmp
and
nop
mov
xlat
xor
dec
outs
push
push
retf
loopne
sbb
imul
adc
adc
sub
add
dec
in
push
cmp
popa
adc
test
dec
cmp
mov
rcl
maxps
loope
adc
xor
or
and
out
retf
pop
pop
pop
mov
lods
push
xchg
jl
jne
fst
stc
imul
sti
sbb
push
daa
pushf
sbb
add
lods
jo
popf
push
xchg
jl
jl
mov
mov
aad
xlat
loop
xor
jmp
rcl
add
pusha
and
push
stc
(bad)
xor
pop
or
(bad)
mov
cs
pop
hlt
xchg
sbb
out
adc
xor
fwait
out
mov
xchg
xchg
pop
sub
call
mov
xchg
add
es
mov
fdivr
or
add
cmps
sub
cwde
xchg
push
into
dec
cdq
pop
sub
mov
cdq
imul
xchg
sub
stc
scas
cmp
mov
cli
or
(bad)
push
test
cmps
aaa
rcr
(bad)
jp
(bad)
icebp
(bad)
cmp
dec
lahf
div
dec
mov
inc
scas
sub
outs
sbb
fld
sbb
arpl
ss
enter
xlat
or
push
push
test
(bad)
std
dec
xlat
in
dec
ret
(bad)
and
inc
xchg
(bad)
cmp
fild
(bad)
mov
pop
pop
and
sub
lock
fsub
and
push
out
out
cmp
mov
mov
ins
adc
jne
stc
icebp
in
test
or
ds
add
aam
adc
ret
int
retf
mov
shl
jg
call
loope
repz
scas
(bad)
push
push
pop
fbld
fadd
aad
pop
mov
and
and
cld
cmp
xor
cmp
add
jp
mov
ins
mov
repnz
ss
aad
mov
addr16
movs
inc
mov
and
das
stos
ins
mov
(bad)
jg
sbb
loope
xchg
adc
scas
mov
(bad)
cli
ror
adc
or
mov
xchg
xchg
aam
xchg
shl
lods
mov
xchg
jg
inc
fmul
nop
mov
jns
out
cmp
fist
jbe
rcl
and
sub
das
fmul
stc
dec
mov
inc
dec
imul
xchg
adc
sbb
in
mov
cmp
je
fnsave
push
scas
loopne
dec
pusha
adc
pushf
fld
add
xchg
push
call
mov
pop
or
popf
add
fwait
cmp
scas
inc
stos
lods
int
std
ja
out
in
test
jo
mov
scas
xchg
mov
pop
imul
mov
xor
mov
(bad)
(bad)
cmp
rcr
stc
or
mov
mov
scas
xchg
push
inc
shr
fwait
sub
mov
cmp
sub
js
movs
lock
mov
sub
sar
ret
cmp
jle
or
push
or
test
int
call
mov
(bad)
xlat
sahf
les
dec
mov
mov
popa
rcr
test
scas
jl
mov
xor
cli
pop
es
mov
and
aaa
push
fldenv
jne
loope
lea
lea
xor
push
pop
jae
and
retf
push
stos
aaa
stos
dec
(bad)
ficomp
inc
(bad)
les
repz
cs
mov
xchg
test
mov
add
and
sub
jecxz
add
push
test
jmp
lds
sti
xor
leave
and
pop
out
cmps
test
or
call
xchg
jl
jbe
out
pop
sub
pop
jp
sahf
dec
rol
add
push
loopne
fbstp
push
add
jno
sub
in
add
xor
pusha
mov
sbb
pop
lock
fwait
outs
jo
fucomip
mov
cmp
and
jns
sub
outs
lds
sahf
or
(bad)
repnz
mov
stos
cli
mov
ins
(bad)
jecxz
push
imul
aam
xchg
dec
out
lea
(bad)
mov
xchg
bound
lds
(bad)
leave
in
cs
xor
jg
loopne
adc
jno
popf
dec
add
jbe
fwait
pop
rcl
dec
or
inc
mov
sti
out
inc
movs
repz
jae
and
icebp
sub
inc
mov
rep
mov
test
sbb
mov
mov
sub
pusha
or
dec
dec
loopne
push
div
retf
xchg
mov
or
mov
repz
in
jl
sahf
fisttp
retf
(bad)
sbb
and
sbb
test
and
mov
into
or
cmp
sub
mov
and
push
mov
adc
std
jmp
cmps
das
test
shr
pop
cmp
popa
jmp
retf
call
iret
sbb
jnp
stos
sti
call
icebp
sub
(bad)
les
and
je
sti
out
out
mov
and
pushf
lods
dec
inc
fidiv
ret
jnp
cmps
out
jmp
idiv
stos
fsubr
xchg
mov
push
xchg
shl
fs
mov
mov
inc
jo
dec
push
xchg
cmp
arpl
leave
sbb
lods
jmp
and
or
xor
cwde
xchg
jnp
mov
popf
mov
pop
xchg
(bad)
xchg
push
push
adc
jg
cmp
outs
mov
ficom
test
(bad)
jp
(bad)
std
test
or
or
test
dec
xor
mov
pop
ja
inc
pop
pop
repnz
or
jne
test
xor
(bad)
movs
sub
pop
xchg
pop
xchg
xor
repz
mov
in
cdq
jecxz
jmp
inc
push
clc
xor
loopne
not
xor
adc
cmp
rcr
scas
rcr
out
mov
or
or
outs
xor
gs
add
out
mov
adc
jne
xchg
add
cmp
xor
repnz
jae
mov
add
push
xor
pop
jo
test
(bad)
out
pusha
loop
cmp
push
int
xchg
adc
push
xchg
movs
repz
repnz
xchg
in
sbb
loope
and
inc
movs
fadd
mov
pop
scas
or
push
inc
xchg
cmp
adc
test
sbb
enter
inc
fdiv
lahf
lds
xchg
hlt
or
mov
inc
adc
push
pop
neg
fcomp
and
pop
xor
rol
sub
out
xor
hlt
ret
scas
jno
icebp
cmc
call
cmp
mov
jnp
dec
mov
(bad)
mov
jp
xor
dec
fwait
lock
jp
enter
loopne
retf
mov
inc
sbb
jg
xchg
mov
aas
jne
pop
mov
inc
sub
fldcw
fdiv
or
lods
aam
sub
pusha
dec
cwde
imul
scas
repz
inc
dec
jo
jno
inc
push
adc
(bad)
sub
jnp
cmps
jl
lahf
dec
sub
push
pop
jb
bound
jo
inc
mov
aam
sub
xor
pop
push
pop
loope
inc
fucomp
shl
jecxz
mov
arpl
test
and
aad
ja
pop
ins
sbb
jmp
sti
push
movs
gs
mov
adc
jno
sub
ja
adc
in
fwait
xor
xchg
xchg
or
inc
dec
xchg
or
stos
popa
push
aad
add
push
push
add
jnp
scas
aad
outs
ins
mov
cs
nop
mov
in
rol
fwait
mov
addr16
or
inc
jnp
aaa
mov
mov
cmp
popf
(bad)
inc
adc
and
jne
(bad)
sub
shl
add
inc
add
mov
mul
mov
popa
in
or
repnz
mov
push
icebp
cmove
pop
loopne
loopne
sub
or
push
sub
xchg
sub
sbb
cmp
dec
sub
cmps
(bad)
or
scas
dec
stos
push
pusha
in
jbe
sbb
push
jae
cmp
inc
dec
xor
mov
push
repnz
stc
loopne
jnp
xor
jge
lods
jmp
loopne
inc
iret
movs
inc
leave
mov
and
fcom
dec
ffree
jb
ds
fs
test
(bad)
xor
loope
cmps
mov
and
ja
aas
adc
sub
mov
mov
pop
dec
in
out
and
mov
leave
or
xchg
test
mov
cmp
pop
pushf
lds
fwait
add
xlat
rcl
dec
ins
js
cmps
push
cmps
pop
xchg
out
cmp
cmps
fs
movs
pop
jp
clc
xchg
lods
stc
pop
mov
gs
xchg
ficomp
pop
xchg
mov
inc
sub
and
arpl
fdivr
test
push
pop
retf
and
ins
lds
into
cmps
jmp
out
cmp
ss
push
ja
add
sti
and
dec
inc
cmp
rcl
push
test
gs
mov
leave
test
mov
loope
and
mov
sub
aam
or
retf
sbb
push
xlat
mov
loop
popa
adc
in
repz
sub
push
fcmovnbe
pop
sti
retf
scas
mov
(bad)
mov
cli
scas
jb
cdq
and
mov
iret
jp
and
icebp
xchg
xchg
adc
sub
fcomp
mov
cmp
cmps
mov
mov
sbb
jmp
call
clc
or
call
sbb
mov
sbb
out
and
(bad)
(bad)
jmp
and
cs
add
sub
pop
adc
idiv
ret
aas
adc
dec
push
cmovbe
push
outs
pop
ins
daa
repnz
(bad)
iret
std
push
aam
outs
mov
mov
mov
pushf
int3
sub
xor
scas
dec
or
movs
sub
and
js
out
or
(bad)
mov
pop
xchg
mov
add
add
mov
loope
into
jo
cmc
and
pushf
jge
xor
jb
pop
cld
xor
or
cwde
sbb
sti
adc
pop
or
xor
lods
sti
fidiv
xchg
mov
pusha
das
hlt
mov
loopne
sti
test
mov
sub
(bad)
dec
dec
xchg
sbb
dec
and
add
ret
gs
in
shr
pushf
iret
loopne
and
outs
add
push
aaa
cmp
mov
pop
or
pusha
lahf
xor
sbb
addr16
enter
bound
fs
sub
jnp
mov
(bad)
cmp
pop
mov
push
mov
and
int
data16
sahf
cmp
jg
loope
and
fimul
sub
mov
push
in
scas
test
inc
cwde
ds
scas
sbb
lods
push
inc
mov
(bad)
mov
cwde
xchg
pop
out
out
inc
bound
out
mov
cmps
mov
test
bound
ret
in
xor
cmps
jl
aad
dec
call
lahf
rcl
xor
dec
outs
cs
leave
lds
push
add
push
call
repz
scas
sahf
dec
push
(bad)
test
call
lods
ror
out
sbb
mov
das
(bad)
rol
sub
jmp
xor
out
in
mov
into
push
shr
inc
mov
jmp
pop
nop
enter
inc
inc
stos
sahf
xor
jecxz
sbb
(bad)
xor
imul
jge
mov
push
mov
fisub
mov
xchg
loope
pop
sub
ret
lahf
xchg
inc
mov
mov
cli
gs
push
xchg
pop
fisubr
pop
enter
sub
mov
inc
inc
rcl
outs
and
aas
pop
das
add
scas
jle
in
pop
fprem1
clc
and
jle
add
mov
cld
mov
lahf
les
retf
sbb
sub
popa
pusha
in
in
pop
add
inc
mov
pop
les
push
mov
je
pop
inc
pop
mov
rcr
xchg
ins
daa
stos
retf
inc
pop
repz
adc
sbb
add
or
out
rcl
mov
add
adc
add
hlt
out
inc
movs
repz
inc
lods
repz
inc
lods
repz
mov
shl
inc
loop
ins
mov
enter
movs
idiv
push
loopne
in
out
(bad)
jo
jecxz
inc
out
mov
mul
inc
mov
pmaxsw
xor
sahf
pop
cmp
inc
or
xchg
cmp
(bad)
loop
mov
xor
stc
push
mov
xor
out
data16
sbb
and
inc
sbb
adc
mov
mov
and
cmps
pop
test
call
jecxz
dec
cmp
(bad)
xchg
mov
mov
jmp
pop
pop
jmp
fwait
test
push
mov
jle
jmp
dec
cmps
mov
push
xor
dec
mov
lds
pop
sub
retf
mov
mov
add
adc
sahf
jg
loope
sbb
mov
test
lahf
fucomip
pusha
sbb
ret
cdq
outs
dec
je
(bad)
inc
and
pop
in
aaa
lods
cdq
aad
push
cwde
call
xlat
shr
pop
pop
mov
rol
cmp
mov
xor
cmp
inc
jb
ficomp
jg
movs
arpl
jl
mov
cmp
(bad)
scas
clc
jmp
shl
or
add
mov
cmps
arpl
test
push
mov
mov
jmp
inc
xor
ja
stos
arpl
sub
rcl
sub
or
cmps
(bad)
cmp
test
xor
push
je
in
push
inc
jge
sub
div
je
xrelease
aad
adc
xor
ja
inc
sar
pop
pop
jns
dec
push
loope
call
inc
mov
mov
and
push
adc
cwde
jl
mov
fdivr
dec
out
stos
iret
in
xchg
les
test
sub
into
and
imul
(bad)
jno
sub
xlat
retf
sub
jnp
je
push
pop
ss
je
add
jo
(bad)
pop
(bad)
jle
mov
cs
lods
mov
(bad)
pop
hlt
jg
mov
mov
xchg
stos
ror
add
mov
mov
mov
in
push
adc
out
data16
dec
add
mov
or
inc
mul
xor
xor
push
xchg
pop
movs
retf
nop
sbb
jle
sub
out
jne
call
xchg
aad
idiv
jae
mov
movs
test
lods
and
dec
retf
js
dec
or
mov
lea
and
into
sbb
cmp
mov
jae
rcr
mov
sub
mov
sub
aam
xor
jmp
or
dec
es
test
and
shl
push
jmp
ficomp
cmps
mov
into
(bad)
movs
mov
scas
pop
ss
push
sub
and
xchg
jle
ds
push
pop
jecxz
scas
xchg
imul
jno
and
jmp
jae
movs
pop
ins
packsswb
mov
sbb
or
scas
pop
(bad)
jbe
dec
cmp
in
xor
movs
ror
dec
(bad)
adc
and
pop
cmps
push
pop
cmc
dec
in
shl
cmp
sub
mov
ret
pop
push
inc
add
cs
int
or
(bad)
jno
call
in
ins
pop
adc
mov
jp
or
stos
das
out
mul
loope
popa
mov
lods
mov
js
mov
cmc
sub
sub
jns
cld
mov
mov
scas
dec
xor
int3
and
out
xor
shr
bound
mov
clc
(bad)
xchg
and
bound
repnz
repz
unpcklps
dec
(bad)
mov
popa
xchg
ins
cmps
and
rol
ins
movs
cs
(bad)
xlat
div
test
stos
sub
pop
in
xor
xchg
in
mov
lock
test
xchg
movs
cmp
(bad)
jne
repz
pop
cmps
out
mov
int3
scas
test
out
in
adc
inc
inc
scas
or
pop
mov
mov
jmp
pop
sub
xor
xchg
in
std
mov
mov
lea
sbb
es
jmp
rcl
xlat
inc
leave
mov
mov
jecxz
mov
inc
retf
mov
mov
inc
movs
nop
retf
nop
cmps
inc
mov
mov
test
sahf
je
cmp
(bad)
add
in
in
jge
bound
fcomi
mov
inc
or
outs
inc
int
mov
mov
stos
(bad)
mov
adc
or
or
xor
js
loope
jmp
push
fldcw
repnz
repz
mov
arpl
test
scas
sub
pop
mov
xor
cmp
and
enter
xor
cmps
aad
cdq
loopne
cmp
in
popa
lods
xchg
mov
popa
call
adc
fsubr
clc
dec
fs
cmp
jb
xor
into
inc
and
push
pop
sahf
stc
cmc
aam
mov
sub
inc
cmp
ds
shr
jae
push
sub
dec
dec
push
push
fdivr
dec
pop
pusha
push
push
dec
addr16
bound
lods
xchg
loopne
push
(bad)
je
test
aas
cld
sub
clc
dec
shl
mov
sahf
inc
mov
jns
ficom
(bad)
imul
retf
pop
shl
(bad)
shr
jae
xor
xchg
jmp
movs
loop
shl
scas
jmp
mov
repz
mov
cmp
scas
mov
fs
test
std
stc
iret
mov
loopne
xor
nop
daa
stos
adc
das
cmps
xchg
hlt
popf
jmp
add
or
aam
xor
dec
imul
mov
mov
add
inc
mov
cmps
sbb
aad
scas
inc
ins
or
pusha
movs
add
xor
jo
mov
enter
leave
mov
cmps
mov
cmps
imul
(bad)
mov
mov
adc
movs
fidiv
sbb
ss
movs
jns
pop
mov
dec
cwde
in
jmp
in
int
repnz
add
push
add
sti
fstp
es
in
in
dec
dec
sub
aam
gs
out
sbb
rol
jg
cmp
ins
mov
mul
packuswb
ins
arpl
inc
and
add
jnp
push
cdq
popf
repz
out
hlt
jle
dec
adc
adc
inc
int
or
add
das
pop
inc
mov
push
adc
jmp
jge
lahf
gs
xchg
out
jmp
mov
mov
and
call
jno
movs
adc
mov
add
pop
pop
dec
pmaxsw
lods
das
sbb
in
add
ds
mov
adc
rcl
int3
and
xchg
jg
add
sub
lahf
mov
jnp
fidivr
in
mov
inc
sub
rol
xchg
call
mov
inc
jle
movs
loop
mov
mov
add
jmp
adc
ret
mov
jge
and
inc
add
movs
inc
sub
dec
add
cli
jno
adc
fisubr
adc
sbb
sbb
push
inc
cld
pop
mov
not
mov
mov
imul
mov
dec
test
push
into
mov
jo
test
test
mov
mov
inc
sub
fisubr
push
xchg
xchg
pop
mov
or
pop
cmp
jmp
push
pusha
ins
adc
mov
jo
into
(bad)
js
clc
jp
dec
cmp
pop
enter
adc
fs
pop
stos
in
xchg
je
sbb
movs
call
inc
or
xor
popf
inc
sbb
movs
cmc
xor
int3
jl
(bad)
dec
xchg
xchg
sub
das
popf
in
stc
lods
imul
ret
int3
out
and
and
mov
(bad)
or
outs
inc
mov
std
jmp
test
add
add
shr
in
in
dec
cld
imul
aaa
fadd
xlat
sbb
jb
into
addr16
aas
sbb
sub
inc
(bad)
mov
(bad)
mov
adc
xchg
inc
pop
sub
imul
es
push
in
and
scas
inc
mov
xlat
jne
xchg
sbb
xor
add
dec
lods
jbe
lar
ins
mov
mov
xchg
hlt
dec
fdivr
inc
in
out
int3
(bad)
das
mov
add
push
or
jno
jno
jg
add
aam
xlat
jg
xor
call
jle
std
repz
push
and
push
sti
push
enter
test
scas
mov
ret
in
inc
in
out
pop
test
std
ret
iret
dec
das
and
lock
lds
bound
adc
jg
loope
mov
dec
mov
inc
push
and
movs
xchg
into
xor
scas
push
cmps
sub
sub
mov
jl
inc
jnp
jle
sti
(bad)
rcl
data16
stos
mov
and
scas
arpl
push
xor
mov
mov
sub
xor
fnstsw
pushf
loopne
cli
mov
stos
jg
xor
(bad)
adc
mov
lods
aas
in
or
sbb
mov
div
outs
cwde
imul
cmp
shr
dec
mov
and
neg
ret
test
dec
mov
dec
add
bound
mov
sbb
fsub
inc
sub
call
retf
imul
sub
in
shl
sub
mov
sbb
pop
cdq
add
test
pop
and
mov
push
rcl
xchg
dec
mov
shl
(bad)
mov
xor
test
ror
jnp
and
pop
popa
xor
xor
mov
xchg
mov
inc
push
xlat
adc
pop
(bad)
aad
pop
push
sbb
xchg
retf
fiadd
call
pop
pop
and
bound
iret
inc
mov
scas
jnp
add
dec
test
stos
pop
push
aad
dec
neg
retf
retf
inc
(bad)
bound
sub
push
xor
dec
out
xchg
lds
loopne
js
mov
pop
mov
xor
stc
jbe
jmp
sbb
lds
inc
xchg
(bad)
jae
cdq
scas
bound
js
jnp
repz
sub
jg
or
fwait
std
inc
fist
ror
int3
sbb
in
jnp
repz
inc
loopne
mov
sub
mov
dec
mov
jg
mov
mov
mul
cmp
out
retf
pop
jmp
pop
hlt
aaa
inc
mov
test
sub
popa
inc
je
daa
cmps
dec
repnz
mov
enter
push
imul
pop
nop
jmp
pop
mov
out
inc
mov
xlat
push
sub
sti
out
test
out
test
out
lods
out
push
mov
cli
push
mov
neg
ret
mov
or
ret
rol
loopne
mov
scas
or
mov
adc
mov
mov
cmps
mov
inc
int3
hlt
cli
push
lods
out
push
mov
mov
adc
ret
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
jmp
inc
xor
add
out
mov
mov
loop
mov
repz
idiv
pop
mov
out
inc
test
out
inc
enter
lods
repz
imul
dec
mov
jecxz
inc
mov
sti
out
test
out
in
mov
cmc
and
inc
mov
neg
jb
jmp
div
inc
aas
stos
inc
test
jmp
push
cmp
ins
cdq
xor
jle
push
mov
jmp
sti
push
sbb
test
test
mov
call
jo
neg
sub
data16
jge
jmp
repz
pop
retf
xor
nop
in
inc
xchg
mov
daa
xchg
adc
xchg
cwde
data16
pop
rol
pop
test
xchg
xor
pop
hlt
and
aas
sbb
dec
pop
hlt
cmp
add
call
test
out
mov
adc
xchg
loopne
into
sbb
icebp
inc
fdivr
xor
popf
mov
and
in
fidivr
repz
xor
outs
inc
dec
mov
xchg
xor
add
cmp
sbb
mov
ss
or
dec
cmp
(bad)
out
enter
into
xchg
xlat
jne
popa
ins
cli
enter
sbb
fdivr
push
movs
ja
push
mov
(bad)
xlat
xchg
mov
pop
cdq
mov
xlat
imul
fs
cmp
mov
adc
inc
dec
jno
daa
or
pop
shrd
mov
les
fcmovnu
pop
xor
rcl
jae
or
stc
pusha
inc
pop
repnz
sahf
(bad)
adc
and
push
pop
mov
dec
sbb
jns
imul
inc
dec
or
and
sti
es
lahf
stos
(bad)
cmps
xchg
(bad)
in
pop
sbb
jmp
(bad)
mov
nop
add
stos
jo
and
mov
out
and
hlt
shr
mov
enter
add
jb
fisub
add
add
inc
mov
mov
lea
rcr
xor
scas
add
cmp
adc
outs
xchg
add
in
mov
loop
add
and
das
out
mov
lock
add
repnz
test
inc
mov
idiv
inc
fmul
jmp
mul
push
mov
jmp
idiv
pop
movs
jmp
pop
call
ja
aam
jle
das
aaa
xor
inc
mov
repz
sbb
ds
pop
cmps
rcl
mov
cli
and
jmp
stos
bound
retf
retf
push
das
lahf
xor
push
mov
test
test
push
and
push
xor
xchg
fadd
in
cmps
push
push
aaa
cmps
mov
in
gs
aaa
pop
or
mov
cmp
retf
mov
scas
sub
fs
mov
mov
call
sbb
push
push
mov
add
outs
dec
jge
(bad)
xor
inc
xchg
mov
push
movs
or
popf
ins
push
(bad)
mov
pop
imul
mov
repnz
and
pop
jbe
enter
push
fwait
mov
sub
mov
(bad)
mov
add
rcl
call
ret
xchg
das
cdq
or
cmp
adc
out
mov
mov
sub
sub
fidiv
or
xchg
imul
push
add
les
pop
iret
in
leave
fld
add
pop
outs
pop
add
sub
sbb
stc
dec
jae
push
or
sbb
retf
jbe
(bad)
std
jmp
out
ffreep
ret
sub
(bad)
aam
popa
mov
push
dec
retf
jne
movs
shl
mov
mov
and
and
in
sub
add
and
dec
mov
adc
fidiv
or
int
jl
call
iret
stos
sub
jne
outs
repz
and
and
test
hlt
sti
or
xchg
sub
ss
jl
into
stos
clc
int3
call
fs
xor
out
rcl
shl
(bad)
mov
add
mov
imul
lods
out
std
jmp
pop
cmc
lahf
cli
sub
dec
movs
popf
dec
movs
ret
retf
stos
push
cmp
adc
mov
dec
mov
sbb
jo
cmp
mov
jp
stos
fs
ja
add
add
sub
movs
add
fild
adc
sub
dec
xchg
jge
das
inc
inc
push
rol
and
stos
ficomp
add
outs
jne
out
cmc
fisub
aas
stos
xor
div
es
mov
nop
fidivr
shl
imul
cmp
fdivp
stos
jecxz
out
retf
popf
aaa
mov
inc
sbb
pusha
loopne
cdq
lods
arpl
cmp
ret
or
push
mov
xor
fnstsw
adc
mov
daa
mov
lods
push
je
push
rol
mov
sub
movs
or
iret
sbb
imul
mov
cdq
stos
xlat
dec
jp
push
jmp
xchg
ins
pop
scas
mov
rcl
xchg
sbb
ret
sti
mov
jge
or
pop
jmp
sti
mov
xchg
fnstcw
jge
mov
hlt
sahf
popa
fnstenv
mov
fist
sbb
aad
das
arpl
enter
stos
push
dec
jecxz
loop
mov
inc
in
or
inc
jo
cli
dec
lods
push
dec
mov
jmp
imul
inc
mov
sub
jg
add
cmps
das
inc
stos
jb
enter
add
jbe
inc
enter
lods
repz
mov
cmp
je
mov
mov
sbb
shr
pop
pop
jnp
cli
mov
out
lods
jge
xor
ins
jg
loope
(bad)
imul
sub
aam
mov
neg
in
cli
mov
dec
test
cmp
push
popa
xchg
in
dec
jl
test
cld
loop
push
mov
sbb
cli
lock
addr16
pop
fild
cmps
movs
jge
mov
lds
or
cld
aam
xchg
push
push
xchg
jge
xor
lods
sbb
call
xchg
es
adc
inc
jnp
adc
xchg
mov
nop
and
jbe
and
and
ds
pop
sahf
mov
mov
(bad)
jne
dec
add
loop
sub
rcl
add
jb
(bad)
out
cmp
inc
in
js
xchg
ror
jbe
sbb
mov
push
sub
adc
repz
push
cmp
sub
cs
retf
mov
bound
and
cmp
inc
mov
movs
lods
mov
jmp
movs
pop
pushf
iret
movs
mov
push
mov
fsub
adc
shl
jnp
into
jle
inc
cld
mov
hlt
sub
fcom
in
fcmovu
cmc
jns
xchg
std
push
mov
cdq
jnp
add
inc
icebp
mov
loop
push
mov
pop
js
retf
xor
push
popf
sbb
pusha
(bad)
jecxz
jnp
ds
test
mov
loop
(bad)
mov
push
in
mov
push
nop
sahf
jmp
clc
pop
test
mov
jecxz
sahf
sbb
scas
sbb
loope
test
ins
out
(bad)
mov
fmul
sti
mov
cld
sub
jmp
not
push
mov
daa
out
test
neg
(bad)
jmp
imul
add
out
int
xor
xchg
mov
(bad)
in
outs
ret
jmp
inc
movs
inc
mov
loop
out
shr
cmps
jecxz
xor
inc
jne
movs
ret
nop
adc
aaa
and
add
cmp
dec
mov
inc
mov
mov
retf
and
push
cmp
mov
dec
movs
jb
loop
cmp
adc
cmp
pop
xchg
dec
cmp
push
inc
(bad)
lods
pushf
sbb
push
adc
and
xor
inc
add
cmp
sti
cmps
inc
inc
into
xchg
mov
jp
enter
push
jbe
dec
loope
inc
sbb
xchg
lahf
jl
jb
xchg
jbe
jmp
jp
jae
xchg
xlat
push
bound
xchg
jge
pop
lock
jp
in
out
xchg
xor
lods
cmp
xor
inc
xchg
loop
jmp
sbb
adc
gs
mov
inc
rcr
xor
(bad)
adc
xor
popf
fidivr
xchg
xchg
mov
mov
pop
push
push
cs
pop
jns
(bad)
retf
sub
mov
mov
je
and
xor
inc
or
loop
scas
xchg
mov
or
test
(bad)
mov
sub
je
hlt
test
push
jmp
push
sbb
sbb
jge
adc
lods
test
xchg
xchg
fmul
scas
pop
cs
add
pushf
rcr
das
cmp
pop
sar
rol
test
and
sbb
add
(bad)
cmp
ins
out
cmp
cwde
adc
or
fs
jb
sbb
(bad)
out
les
imul
mov
mov
jnp
xor
std
es
pop
adc
or
adc
sbb
add
aam
inc
push
movs
inc
xor
inc
sti
and
loopne
out
or
and
cmps
xchg
bound
and
ins
rcl
mov
(bad)
sahf
jno
mov
mov
out
loop
test
mul
loop
mov
idiv
add
mov
outs
dec
mov
lods
ret
test
or
aaa
icebp
adc
jmp
jle
dec
test
jl
inc
mov
out
cmp
dec
loopne
shl
xchg
ja
cmp
lock
xchg
out
out
ret
(bad)
pop
xor
sbb
or
mov
inc
inc
lock
or
xor
push
rcr
mov
and
fs
mov
fnstcw
fwait
and
pop
pop
clc
aas
inc
cmps
mov
cmp
stos
xor
jb
ret
push
imul
push
mov
cmp
ror
jns
call
arpl
and
adc
stos
mov
jbe
cwde
mov
xchg
inc
jge
pop
jp
push
das
ins
add
cmp
mov
push
dec
push
aad
sub
mov
int
mov
push
pop
leave
inc
jp
xchg
mov
out
fild
xor
xchg
xchg
js
push
(bad)
xchg
neg
in
inc
je
lea
popf
mov
out
push
inc
aas
cmc
out
adc
inc
mov
mov
fwait
idiv
mov
popa
in
test
aam
loopne
cdq
and
xchg
push
(bad)
mov
int
data16
adc
jge
enter
sar
cmc
xchg
fisttp
jo
arpl
(bad)
mov
jge
add
ds
(bad)
mov
mov
jmp
xchg
jbe
push
mov
mov
ds
adc
sbb
inc
ins
addr16
lds
dec
loope
xchg
jp
and
mov
outs
jnp
lods
vpmacsdqh
outs
xchg
push
xchg
js
sbb
daa
daa
push
test
fsubr
lods
ret
out
jmp
sub
pop
xchg
dec
inc
stos
inc
out
xchg
call
call
outs
ins
pushf
mov
sub
xchg
(bad)
imul
push
dec
bound
rcl
or
adc
mov
sbb
adc
into
call
mov
gs
ss
pop
and
xor
das
ja
lods
push
iret
retf
sbb
xchg
xlat
fwait
sbb
rol
sbb
push
push
ins
test
outs
xchg
or
sub
sahf
lods
mov
lds
mov
and
add
jge
scas
addr16
sbb
mov
cmp
inc
leave
push
xchg
and
adc
sub
cld
std
push
lds
and
cld
adc
loop
sub
fstp
mov
xchg
leave
mov
sbb
cmps
popa
in
out
retf
(bad)
sbb
ins
jmp
add
in
seta
xchg
mov
push
add
cmp
xchg
(bad)
(bad)
test
out
cmps
add
(bad)
adc
jg
test
rcl
jae
fsubr
xor
or
loop
jno
ret
shl
adc
pop
dec
jge
and
xor
jno
movs
pop
sbb
loop
retf
(bad)
push
dec
in
sub
ret
mov
arpl
test
jp
xor
enter
ss
sar
ficomp
shl
inc
outs
cmp
into
js
jmp
sub
call
jle
jmp
dec
sub
fs
loop
push
mov
xor
idiv
icebp
imul
xor
add
test
cmp
mov
pop
adc
pop
jg
xchg
inc
lock
int3
sub
push
inc
scas
mov
mov
(bad)
mov
dec
mov
and
mov
mov
adc
fstp
nop
call
push
xchg
mov
and
cmp
or
les
mov
or
jle
movs
mov
fwait
lods
shr
repnz
push
(bad)
sub
jg
ss
mov
adc
movs
fcomp
and
ins
test
ret
mov
pop
add
or
pushf
stos
in
stc
je
repz
movs
(bad)
hlt
cdq
call
sbb
icebp
mov
adc
jl
fwait
sbb
idiv
scas
int3
and
jns
popf
sub
adc
dec
jmp
std
push
mov
(bad)
pusha
icebp
rcl
mov
push
push
or
sahf
sar
jns
icebp
dec
or
mov
(bad)
fdiv
shl
pushf
xchg
(bad)
leavew
inc
pusha
inc
movs
div
adc
mov
popa
mov
adc
add
pusha
mov
(bad)
sub
jecxz
mov
mov
mov
cmp
cmps
and
dec
in
or
mov
inc
jmp
stc
test
outs
sbb
imul
fist
imul
sbb
pusha
dec
int
inc
and
mov
or
stc
pop
inc
adc
cs
je
add
fidivr
push
js
mov
std
ja
jle
ins
jg
lods
cs
hlt
into
daa
mov
cmp
push
add
jns
pop
(bad)
(bad)
xchg
jmp
sbb
pop
cdq
push
add
js
push
lahf
aas
(bad)
xor
fimul
retf
leave
pop
xchg
fsubr
dec
scas
dec
mov
ficom
les
(bad)
sar
xor
sti
shl
test
inc
cmc
xor
mov
cld
pop
pop
pusha
jecxz
loopne
xor
adc
ror
cs
es
fdiv
out
ret
pop
adc
push
cmp
sub
dec
xor
mov
add
adc
pop
fsubr
call
fdivr
int
pop
out
sub
mov
pop
sbb
loopne
cmp
pop
jo
inc
jns
jb
sbb
mov
sub
fld
test
jns
adc
cld
dec
jnp
std
mov
ss
cmp
cmp
mov
jae
(bad)
cwde
pop
pushf
jns
daa
mov
add
leave
mov
and
pop
xor
hlt
into
int3
aad
push
add
(bad)
jae
lea
clc
icebp
push
sub
pop
mov
lea
fimul
pop
add
fwait
and
jns
dec
or
inc
fcom
sub
push
xor
dec
xor
int3
int
sbb
into
jns
out
add
pop
lahf
sbb
(bad)
movs
popa
mov
test
sub
dec
sub
pushf
pusha
jne
adc
pop
mov
call
(bad)
adc
dec
dec
dec
repz
sbb
call
and
out
ret
aad
outs
sub
test
mov
mov
mov
and
jno
add
pop
cmps
sbb
das
jbe
xchg
sbb
jg
jmp
leave
cmps
or
fwait
xor
test
retf
pop
test
push
push
dec
addr16
call
js
pop
lods
jl
mov
aas
imul
adc
out
or
add
jnp
inc
ins
pusha
jne
or
adc
mov
aaa
adc
cdq
clc
mov
xor
cmp
inc
pop
jno
inc
mov
dec
arpl
mov
jns
adc
push
adc
das
popf
push
rol
fidivr
hlt
mov
jae
xor
add
add
aad
xor
es
sbb
dec
push
dec
push
xor
mov
sbb
ficom
push
setb
jns
stos
clc
aad
cwde
aas
or
add
dec
xor
int
sbb
xor
pop
dec
push
jmp
add
xor
lods
mov
popf
push
movs
iret
lock
dec
jp
test
and
not
add
fidivr
sub
jl
xchg
out
xor
add
repz
test
pushf
mov
test
pop
xchg
es
sub
or
adc
mov
cmc
push
xor
enter
ret
cld
inc
xchg
mov
mov
dec
pop
push
imul
std
retf
sub
test
nop
xlat
add
xor
popf
dec
mov
addr16
mov
pushf
cmp
int
and
and
ins
adc
jmp
inc
les
fdiv
sti
cwde
xchg
clc
ins
cs
sbb
clc
or
cmp
lods
test
inc
imul
mov
and
pop
mov
or
cli
data16
dec
push
pop
out
xor
cmp
mov
(bad)
(bad)
aam
(bad)
mov
adc
hlt
aaa
jp
ins
outs
pop
aad
push
xor
rcl
pop
mov
ja
lahf
scas
loop
pop
inc
inc
shr
scas
adc
(bad)
lods
ror
sbb
std
mov
xor
cmps
and
and
jno
add
sub
fild
es
inc
or
jmp
jns
jmp
jno
inc
cmp
retf
jge
mov
gs
mov
xchg
pop
hlt
shr
xchg
xor
pop
inc
dec
mov
dec
fmul
adc
je
leave
aas
out
lods
ja
fdivr
push
cdq
aad
mov
adc
xchg
hlt
adc
out
xor
movs
inc
jmp
jo
sub
inc
cmp
movs
shld
lea
mov
call
pop
in
mov
adc
sbb
mov
fiadd
mov
xlat
ins
dec
sbb
pop
inc
fisttp
add
dec
ficomp
loopne
mov
or
addr16
adc
xchg
cld
cmps
jmp
lods
sbb
shl
jnp
call
or
das
mov
mov
loope
push
cmp
fcom
cld
cmp
rcl
adc
aas
push
jnp
add
imul
jne
lods
gs
shr
outs
push
push
adc
sbb
lods
jbe
(bad)
xor
pop
mov
push
add
into
data16
mov
shl
stc
retf
sub
push
ja
in
jae
jb
(bad)
mov
xor
push
sub
cmps
dec
xor
fs
dec
into
xlat
enter
(bad)
inc
add
and
out
(bad)
repnz
stc
jno
mov
call
push
jno
cwde
jmp
inc
xchg
das
pop
bnd
rcr
jno
jle
mul
cmp
pop
xor
call
sub
int3
scas
popf
lods
lds
jae
xchg
stos
loope
mov
sbb
inc
stos
ja
(bad)
dec
pop
ins
push
add
add
lods
sub
dec
bound
js
jne
inc
imul
mov
nop
lds
fdiv
or
cmp
or
add
mov
lea
add
push
adc
add
hlt
jmp
jmp
inc
mov
imul
shl
les
and
add
xor
inc
mov
repz
imul
and
fsubrp
inc
dec
or
fbld
jae
sbb
mov
jns
mov
pusha
(bad)
mov
xor
adc
pop
out
xor
xchg
mov
push
int3
test
outs
push
sbb
mov
or
rcr
fisubr
jmp
xchg
add
push
clc
js
test
push
aad
daa
jns
test
dec
and
movs
adc
call
cmc
pop
stos
or
adc
in
imul
mov
stc
xchg
jg
xsha256
cmps
xchg
fisttp
ret
dec
pop
loop
jnp
loopne
mov
push
in
enter
dec
call
mov
fnstcw
retf
cwde
sub
mov
mov
(bad)
daa
(bad)
xlat
retf
sbb
xchg
dec
add
push
out
ja
add
dec
aad
mov
inc
push
cs
lea
add
jl
pop
hlt
addr16
sub
and
cmps
and
aaa
int3
sbb
lods
ret
aam
cmp
imul
scas
neg
push
jge
push
lods
fdivp
mov
pop
xor
rcl
or
out
cmp
push
es
call
rcr
movs
stos
gs
ja
sub
mov
call
mov
pop
mov
xor
pop
pop
push
sub
or
shr
pop
sub
mov
jmp
or
push
dec
aaa
mov
xchg
retf
pop
mov
add
in
hlt
inc
js
jo
loop
sbb
dec
dec
aam
add
iret
cmps
daa
movs
cdq
test
adc
push
xor
jg
and
xchg
mov
cmp
imul
daa
add
inc
fucomp
and
pop
(bad)
sub
mov
ficomp
jle
popf
cli
std
xor
jbe
and
jae
xor
and
lods
int3
mov
inc
jg
sub
pop
cmp
sub
jge
xchg
dec
mov
mov
xchg
push
mov
shl
push
ret
sti
mov
inc
or
out
push
dec
xchg
mov
mov
(bad)
push
hlt
jge
pop
or
ja
xor
lock
mov
repnz
add
leave
in
test
mov
cmps
pop
aaa
xchg
cs
aam
fcom
sbb
pop
addr16
mov
pusha
jnp
jo
popf
sbb
push
pop
stos
jns
addr16
and
in
mov
and
and
clc
xchg
scas
dec
repz
cmp
lods
jnp
add
cmp
and
loope
mov
jle
push
shl
xchg
xchg
pusha
pushf
push
aaa
cwde
fiadd
enter
scas
jle
int3
aam
pushf
add
and
inc
jo
add
sub
jge
cmp
shl
jb
or
arpl
wrmsr
push
hlt
(bad)
rol
int3
inc
dec
cmp
mov
dec
jmp
sbb
push
adc
push
ds
les
movs
adc
iret
mov
repz
icebp
sub
inc
cmc
clc
jecxz
sar
mov
cli
push
outs
out
cmp
fstp
into
dec
fadd
sbb
rcr
push
adc
xchg
sub
and
rcl
pop
xchg
imul
sahf
jmp
jge
call
dec
(bad)
sti
mov
mov
xchg
cmp
push
test
inc
mov
es
jecxz
add
or
mov
mov
add
jp
or
and
mov
neg
add
push
jo
xchg
lods
rcr
adc
xor
jno
stc
rcr
mov
xchg
push
inc
leave
xor
loope
aaa
out
and
cmp
jmp
push
push
int
ja
cmp
imul
pop
fild
pop
xchg
aaa
pop
jmp
push
in
dec
std
mov
pop
and
ss
je
xor
push
ds
push
xchg
inc
pop
and
push
sti
aam
or
mov
push
xor
popf
into
push
inc
mov
movs
mov
fistp
xchg
(bad)
pop
out
dec
fldenv
scas
stos
sbb
mov
shl
sbb
pop
pop
ins
lahf
dec
jg
icebp
sti
jnp
retf
jb
adc
fwait
push
es
cmp
cs
and
(bad)
(bad)
xchg
dec
in
xor
jge
add
movs
pushf
cmp
sbb
adc
(bad)
lock
inc
mov
retf
fdiv
imul
push
push
push
dec
inc
ffreep
and
adc
xor
pushf
js
ret
cmp
stos
inc
dec
pop
arpl
fldenv
jl
pop
loopne
jecxz
xchg
xor
dec
ins
and
push
add
pop
in
pop
sti
mov
ja
fdiv
adc
mov
sub
mov
js
outs
push
scas
xchg
mov
mov
fadd
dec
retf
dec
test
mov
mov
inc
and
(bad)
in
inc
addr16
into
inc
mov
aas
or
jl
sub
jmp
sub
jmp
pop
push
ja
cs
aam
lds
or
or
mov
gs
fmul
mov
add
test
sub
test
mov
and
push
or
mov
inc
or
or
repz
mov
imul
enter
std
lods
sub
in
pop
int3
push
rep
pop
jmp
or
popa
add
movs
sbb
(bad)
es
or
div
mov
call
mov
adc
pop
mov
sub
pop
inc
call
mov
cmp
adc
fs
repnz
pop
int
int3
push
and
arpl
int
and
ja
dec
pop
in
fidivr
dec
xor
and
ja
test
fld
xor
cmp
pop
mov
lea
retf
jns
add
rcl
idiv
xor
in
fdiv
push
sub
retf
mov
psllw
inc
sub
xor
retf
outs
dec
mov
dec
fwait
dec
and
jmp
jno
aas
ret
xchg
mov
jecxz
push
xchg
dec
in
pop
pop
iret
lods
mov
and
sbb
fstp
fidiv
adc
out
test
shr
and
and
lea
iret
aad
push
and
jmp
inc
call
in
stos
out
test
fxch
test
inc
pusha
pop
xchg
ror
and
sti
frstor
dec
push
jp
scas
aad
sbb
sbb
sbb
aaa
in
loop
ja
pop
sbb
iret
pusha
push
mov
add
push
cmp
vmovsd
adc
sub
dec
push
sbb
mov
loope
adc
scas
push
fldcw
xor
imul
push
movs
stos
ja
call
xor
push
add
call
shufps
ins
ds
(bad)
leave
(bad)
mov
push
xlat
loope
fdiv
push
sub
pop
cmp
jecxz
cmc
push
dec
mov
hlt
dec
(bad)
mov
int
lea
jae
sub
(bad)
(bad)
mov
fcomp
gs
fnstcw
idiv
jae
in
pop
sbb
mov
rcl
cs
aas
call
add
sti
out
test
stos
or
mul
pusha
test
aad
mov
scas
dec
test
aad
mov
mov
aam
repz
jmp
jne
(bad)
jp
stos
rcr
imul
mov
mov
jecxz
popf
sti
scas
retf
push
jbe
push
or
in
mov
adc
jge
retf
icebp
aam
mov
xor
or
movs
pop
pusha
cmps
call
or
xchg
aad
out
imul
into
aad
idiv
jmp
loopne
in
inc
in
dec
(bad)
out
inc
mov
jmp
repz
shl
sub
jno
mov
enter
lods
repz
call
jbe
ficomp
dec
sub
(bad)
jns
mov
ss
inc
push
inc
push
in
push
push
push
clc
inc
imul
shl
int3
cs
inc
inc
cmps
cmp
xor
shr
fnsave
push
out
pusha
xor
inc
inc
sub
lods
movs
lods
xor
daa
cmp
mov
lock
xor
mov
lock
lahf
lahf
pop
sbb
fidiv
outs
sbb
fisub
popa
xlat
and
mov
(bad)
adc
mov
jae
mov
cwde
fiadd
je
out
(bad)
cmp
pop
sbb
bound
fimul
dec
add
adc
dec
adc
push
mov
pop
push
repnz
dec
push
cli
imul
sub
jnp
mov
int
int3
imul
jg
loopne
push
jmp
push
stos
mov
(bad)
js
mov
cmc
test
dec
(bad)
int
(bad)
cmovae
daa
lods
cmp
cmp
pop
or
or
inc
jbe
sahf
pop
sub
inc
mov
div
iret
es
sub
push
dec
push
or
sub
test
jp
psubsb
dec
mov
mov
and
ficomp
iret
mov
es
je
xor
or
xchg
mov
aam
icebp
scas
out
es
push
xchg
les
movs
(bad)
cmp
mov
sti
inc
push
mov
cmp
sbb
mov
add
sub
jns
cmp
cli
adc
in
add
xchg
jb
sahf
inc
hlt
mov
jge
test
inc
fisub
xchg
idiv
sub
ins
cmp
jae
and
cmp
or
cs
jne
mulps
jmp
idiv
and
push
test
adc
bound
adc
mov
cmp
jb
ds
add
scas
in
sub
push
pop
js
adc
inc
and
xchg
add
dec
cmp
dec
xchg
in
lods
dec
sar
outs
dec
js
or
add
pop
fwait
and
mov
and
in
mov
inc
dec
dec
(bad)
test
and
call
inc
loopne
loopne
jmp
jns
sbb
jnp
mov
hlt
jmp
and
(bad)
pushf
retf
mov
or
inc
stc
pop
iret
fwait
jle
scas
nop
ffreep
outs
xlat
mov
fmul
out
inc
or
out
inc
mov
imul
add
jae
and
xor
ins
pop
movs
xor
inc
xor
mov
mov
movs
pop
or
mov
sahf
pop
clc
jp
xlat
sar
ret
or
mov
pushf
inc
dec
cs
add
popf
data16
in
call
pop
stos
sbb
cmps
adc
sub
outs
bound
mov
(bad)
mov
sub
mov
pop
sub
mov
fs
mov
cmps
mov
push
bound
addr16
enter
outs
xchg
es
jmp
dec
loop
sub
xor
mov
bound
in
xor
sbb
push
and
mov
ret
mov
sbb
dec
rol
(bad)
aad
sbb
les
adc
fs
jae
dec
call
jl
mov
mov
inc
inc
or
fdiv
scas
cwde
test
mov
sub
jns
sbb
push
cmp
pop
(bad)
aaa
fadd
xchg
outs
aaa
pushf
retf
mov
mov
popf
fistp
clc
mov
int3
cwde
movs
mov
adc
mov
cwde
ja
paddusb
adc
or
popf
stos
cwde
test
push
xchg
int
push
xchg
fidiv
popa
push
cmp
mov
add
in
mov
or
std
pop
aam
pop
aas
mov
es
aas
mov
popa
add
loopne
js
gs
add
out
cmp
and
(bad)
lea
xchg
mov
mov
aas
nop
rol
into
pusha
add
hlt
(bad)
out
(bad)
sbb
mov
mov
cwde
adc
xchg
sub
repnz
or
push
call
out
mov
inc
adc
inc
cmp
sub
lds
or
pop
fstp
popa
test
es
cmp
jg
sti
mov
in
popa
inc
jmp
enter
mov
scas
daa
pop
fiadd
ret
cmp
mov
push
jecxz
sub
enter
inc
pop
adc
adc
sar
stos
out
mov
push
jl
sbb
dec
mov
add
push
call
lock
call
dec
pop
mov
arpl
sbb
mov
jp
mov
aas
pop
aad
or
inc
jno
imul
sahf
mov
in
popf
lahf
xchg
inc
mov
inc
(bad)
aam
fmul
int3
dec
add
mov
mov
popf
push
jb
inc
jg
mov
call
imul
push
cmp
jbe
loopne
cmp
cmp
xor
sbb
fwait
lock
loop
dec
jae
mov
mov
or
xchg
movs
cs
mov
arpl
inc
movs
repz
push
mov
sti
jmp
jae
add
and
ins
and
out
inc
xor
mov
mov
cmp
lds
xor
out
mov
pop
repz
(bad)
cs
loopne
fcom
pcmpeqb
or
dec
sub
jp
mov
xor
loope
xchg
add
scas
add
loop
popa
mov
dec
retf
ret
jmp
sahf
xor
mov
add
repz
mov
mov
push
adc
pop
mov
sti
mov
add
ins
or
mov
ds
cs
jmp
mov
cmp
es
xor
data16
xchg
mov
ins
push
out
inc
movs
loop
mov
xchg
or
push
or
fdiv
sub
mov
push
push
xchg
dec
mov
in
sbb
mov
pop
std
loopne
add
test
rcl
repnz
sar
jno
and
xchg
out
out
pop
and
inc
inc
fild
imul
call
aad
pop
add
arpl
mov
and
push
mov
aas
(bad)
push
enter
jmp
dec
movs
movs
jnp
outs
scas
xor
out
pop
int
push
mov
cmp
inc
daa
(bad)
jp
add
stos
adc
xor
movs
into
gs
ror
jle
out
test
xchg
xor
jne
loope
std
lods
mov
cmps
out
hlt
test
inc
cmp
jne
mov
mov
dec
mov
ins
mov
fnstenv
xrstor
mov
jg
icebp
xchg
cmp
test
dec
fdiv
call
and
mov
jmp
ja
repz
scas
mov
sub
or
call
mov
pusha
xor
sti
std
pop
jge
fldcw
shl
shl
popa
or
mov
and
jb
(bad)
iret
push
mov
pop
into
out
xlat
adc
std
mov
sub
jb
xor
js
mov
cwde
in
mov
inc
ss
add
xchg
imul
into
mov
stos
test
movs
cmc
jnp
mov
lods
and
pop
dec
je
mov
int3
stc
js
shl
ins
sub
test
jae
test
adc
(bad)
in
fnstcw
xchg
xor
in
popa
sbb
in
mov
addr16
push
jo
mov
inc
imul
and
mov
jb
and
adc
pop
jmp
push
data16
push
mov
(bad)
sbb
fucomi
xchg
test
xchg
mov
fisub
cmp
inc
xor
popa
int3
imul
cld
int
push
cli
in
mov
stc
mov
mov
movs
sbb
adc
jp
cli
push
pop
addr16
xor
jl
pusha
xchg
push
or
pop
sahf
xor
cmps
inc
daa
outs
xchg
je
mov
fisttp
jmp
(bad)
(bad)
mov
in
inc
xchg
jecxz
jb
sub
mov
das
sahf
retf
unpckhps
push
lahf
neg
clc
(bad)
mov
ror
push
inc
jmp
jle
fsub
aaa
sub
jle
push
sub
icebp
lea
shr
imul
mov
outs
cdq
shr
mov
ds
stos
mov
mov
(bad)
mov
adc
pop
fstp
daa
inc
fwait
movs
fnsave
pop
xor
push
sbb
jne
(bad)
rcl
jnp
fdivr
mov
jl
movs
add
jmp
push
pop
je
and
push
ins
jge
retf
fs
not
jmp
mov
push
and
push
sub
pop
mov
cmc
xchg
hlt
std
shl
jle
adc
mov
add
mov
(bad)
repnz
dec
sbb
and
cwde
gs
(bad)
adc
mov
sub
test
xor
mov
add
mov
pop
fcmovb
xchg
xor
shl
out
vrcpps
les
sub
jbe
dec
imul
cmps
imul
loopne
loopne
jmp
mov
repnz
dec
mov
and
push
pop
(bad)
cli
sub
stos
fwait
jl
into
repz
mov
mov
mov
shl
clc
mov
mov
sub
jbe
push
js
in
js
cmp
aas
inc
movs
call
pop
out
ins
ror
stos
lods
dec
fdivr
lock
push
mov
popf
pop
pop
xor
arpl
in
dec
jmp
imul
sbb
scas
mov
push
jge
outs
pop
lock
test
cmp
pop
push
jg
stc
inc
in
sti
dec
xchg
outs
sub
push
stc
and
in
jb
xchg
xchg
mov
dec
cmp
mov
or
push
(bad)
fcomip
(bad)
sbb
cld
push
mov
dec
aaa
inc
lods
jmp
call
xchg
pop
dec
outs
out
aam
or
jae
mov
call
push
mov
mov
xor
dec
push
jns
js
enter
dec
push
sub
mov
adc
iretw
sub
adc
sub
xchg
jb
add
das
xor
lds
and
mov
lock
leave
push
les
shr
lds
jmp
sbb
ss
xor
jge
mov
(bad)
pop
(bad)
mov
jns
aad
add
aad
fs
fistp
into
(bad)
shr
out
mov
loope
loopne
fsubr
mov
push
test
neg
dec
dec
jmp
test
shl
imul
cmc
test
sbb
pop
adc
jno
cmps
sbb
add
shr
adc
jge
jbe
aad
inc
xor
sbb
inc
scas
xor
mov
lock
jmp
mov
(bad)
push
test
pop
mov
mov
imul
icebp
adc
mov
aad
stos
mov
jmp
xchg
(bad)
xor
mov
stos
sub
jmp
inc
scas
loope
add
push
inc
or
inc
int3
in
pop
bound
ret
repz
sahf
push
mov
pusha
xor
adc
mov
loopne
std
or
or
jmp
gs
pop
jle
cli
push
mov
in
mov
push
movs
push
hlt
adc
sub
inc
mov
mov
jg
mov
outs
stc
pop
sbb
sbb
or
lods
out
outs
ins
sub
cld
fwait
jne
(bad)
or
clc
sbb
loop
and
mov
enter
xchg
es
mov
cmps
jbe
movs
loop
adc
push
xchg
inc
inc
(bad)
aaa
js
mov
pop
adc
jne
in
sbb
mov
push
aam
loope
mov
or
fs
(bad)
mov
fisub
pop
movs
out
or
mov
dec
cmp
cmps
bound
std
dec
lock
dec
retf
setle
ja
sar
pop
mov
and
xchg
jbe
mov
xor
sub
pop
push
or
popf
mov
dec
mov
sub
xchg
les
xor
fs
ror
out
push
ds
shl
ja
out
add
fs
retf
mov
ins
ret
adc
and
pmaddwd
aad
ds
lock
add
dec
lods
aaa
or
inc
adc
push
sbb
das
enter
jmp
repz
xchg
mov
lds
or
mov
mov
pop
lock
jle
push
pop
fmul
xor
mov
aam
push
js
in
bound
fild
mov
lea
mov
fadd
mov
cli
gs
xchg
sbb
jns
push
pop
adc
call
and
loopne
jmp
test
(bad)
pop
xchg
ret
mov
inc
test
jmp
xlat
jmp
dec
mov
jmp
push
lods
sti
cli
push
lods
sti
(bad)
push
and
pop
mov
retf
out
fisubr
mov
jo
mov
mov
mov
fidivr
mov
mov
inc
lock
push
lods
repnz
push
mov
(bad)
pusha
test
(bad)
jo
ret
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
push
dec
repz
retf
mov
dec
or
jmp
repz
inc
movs
or
inc
shl
out
inc
mov
jmp
div
inc
mov
out
loop
scas
out
inc
mov
out
mov
repz
mul
push
mov
repz
dec
lods
rep
inc
loopne
cmp
mov
cmc
sub
mov
out
push
xor
push
cmps
std
push
nop
ret
jae
in
sbb
pop
and
stos
pop
pusha
xlat
in
add
aaa
push
rcr
test
xlat
pop
lods
sbb
push
xchg
inc
repz
mov
test
fstp
xchg
or
add
cmps
idiv
js
leave
xor
adc
push
adc
pop
movs
in
stos
ret
push
inc
cld
push
ret
cmc
and
cwde
or
ret
mov
loopne
shr
not
adc
xor
ret
dec
mov
sbb
sbb
sti
fcomp
add
sub
add
sti
jmp
inc
xor
pop
inc
xchg
repnz
nop
cmp
mov
(bad)
lods
cs
or
and
add
data16
push
pop
and
int
cmp
xor
fucomip
xchg
shl
fisttp
mov
call
ins
jb
test
push
jnp
cmp
xchg
mov
dec
xor
jle
and
jl
jg
outs
call
lea
inc
and
jns
or
xor
gs
jp
jo
int
clc
retf
dec
lock
add
out
std
div
push
inc
or
pop
lods
int
mov
int
jle
sub
cli
sub
iret
mov
mov
jl
dec
mov
sar
pop
xor
dec
test
test
pop
xchg
lea
dec
arpl
inc
ret
and
in
inc
jbe
out
(bad)
xor
push
out
bound
and
mov
ror
lea
mov
jb
cmp
inc
fdivr
mov
ins
mov
sahf
xchg
pop
mul
sar
mov
call
popf
nop
xor
mov
pop
push
enter
mov
iret
add
push
outs
outs
and
ret
cs
jo
xor
retf
fs
mov
cmp
mov
add
out
sbb
pop
dec
push
pop
das
jle
inc
dec
mov
out
lods
inc
jne
add
mov
in
jae
fist
push
int3
out
sbb
cmc
sar
lahf
fstp
cmps
sub
sar
(bad)
aad
jmp
xchg
cmp
pop
push
pop
test
push
add
lock
sub
mov
bound
rol
dec
sar
and
cwde
rol
mov
dec
loope
add
inc
pop
ficomp
xchg
out
dec
loopne
xchg
xchg
push
ins
mov
push
(bad)
retf
stos
inc
mov
(bad)
out
dec
lods
out
inc
mov
jmp
sti
test
cmps
adc
mov
shl
and
jg
out
inc
mov
repz
popf
mov
sbb
inc
adc
test
int
adc
out
dec
aas
jg
jmp
sahf
inc
lods
or
push
ss
fidivr
mov
mov
in
xchg
xor
jp
cli
jle
push
je
pop
div
mov
mov
test
pop
inc
xchg
ret
jg
out
sbb
jl
pop
xor
jo
stos
cmps
adc
jae
inc
xchg
call
jne
ds
dec
sub
in
jmp
adc
add
jle
dec
cld
cli
scas
aad
ds
xchg
iret
sar
jo
and
xor
mov
xchg
pop
adc
nop
sbb
sbb
call
mov
inc
aas
call
add
pop
int
mov
scas
inc
or
icebp
test
mov
dec
mov
or
jl
push
fldcw
adc
mov
xor
aad
and
add
in
jae
adc
cli
mov
xchg
loop
or
jg
mov
adc
lods
clc
and
mov
ror
and
outs
cmps
pop
clc
jno
dec
mov
sub
arpl
and
pop
push
xchg
movs
cmps
mov
jp
jb
fsub
test
retf
mov
popf
lahf
mov
mov
pmulhuw
push
(bad)
out
mov
dec
xlat
mov
aad
lock
lock
sbb
push
ret
cmc
enter
shl
mov
sahf
add
fs
jmp
(bad)
xlat
dec
mov
dec
pushf
mov
push
js
fld
cli
cmc
ja
mov
imul
add
push
mov
mov
enter
lods
popf
or
repz
and
mov
addr16
in
jge
lea
jmp
jg
je
pop
fsub
ret
or
inc
push
daa
fs
daa
mov
adc
push
or
adc
stos
or
mov
xchg
rcl
inc
in
pop
mov
push
dec
retf
mov
xor
and
cmps
stc
or
aaa
mov
sub
pop
arpl
popa
mov
adc
inc
and
(bad)
mov
mov
lods
icebp
cmp
mov
xor
jge
mov
inc
push
pop
leave
sub
(bad)
adc
or
jmp
in
gs
std
pop
sub
mov
(bad)
or
push
jg
jmp
xchg
push
xor
xchg
in
and
mov
pushf
mov
cwde
data16
pop
dec
lods
ret
inc
pushf
in
das
push
lea
in
mov
inc
ins
mov
cmps
cs
fsubr
fisubr
imul
push
or
sbb
lods
dec
int3
pop
ja
jo
mov
imul
test
daa
jecxz
xchg
retf
push
inc
shl
and
call
js
loop
dec
sti
adc
test
fiadd
lahf
imul
adc
cmp
loopne
imul
sub
cdq
ret
cdq
int3
jg
xchg
mov
into
mov
div
or
pop
inc
enter
sbb
pop
push
inc
jmp
rcl
sti
repnz
mov
outs
sbb
ds
sub
push
fs
mov
pop
in
dec
in
repnz
test
inc
jmp
rep
push
in
inc
xor
add
aas
sub
in
cmps
dec
gs
sub
out
inc
arpl
out
dec
mov
repz
fdivr
inc
scas
leave
cmp
jo
and
and
retf
inc
inc
push
add
sbb
mov
inc
rcr
daa
enter
clc
ret
dec
dec
adc
fistp
mov
mov
ds
cs
dec
and
or
daa
xlat
mov
in
imul
add
bound
ins
js
jne
mov
or
or
and
sbb
mov
pop
fisubr
jp
jle
sub
jnp
jno
sub
stc
movs
add
dec
addr16
fcomp
sar
sahf
mov
ret
cmp
mov
pushf
ret
cmc
push
dec
(bad)
(bad)
in
pop
fisttp
mov
call
jmp
or
sbb
stc
les
cmp
or
sub
aaa
xor
pop
pop
push
sbb
inc
mov
aam
je
sub
ds
ins
mov
arpl
into
fldl2t
int
outs
mov
mov
ins
mov
sbb
mov
cdq
adc
xor
jb
es
or
mov
fwait
cmc
das
or
arpl
dec
cmp
int
les
mov
hlt
pop
push
mov
add
test
dec
sub
cmp
hlt
jns
xor
push
fsub
dec
cdq
cmps
retf
jbe
cmp
jbe
push
xchg
fadd
cwde
or
mov
inc
xchg
outs
sbb
push
mov
out
into
iret
xor
push
aas
pop
inc
push
in
nop
xchg
xchg
sub
popa
or
dec
inc
cmps
or
sti
in
xchg
shr
fldenv
stos
in
cli
in
inc
ds
pusha
lods
imul
(bad)
sbb
jb
sub
sub
scas
push
out
test
fld
mov
or
daa
push
or
scas
jge
arpl
cmp
fisttp
adc
fs
jmp
push
les
clc
aam
jnp
nop
shl
test
cmp
fs
cmps
out
inc
xor
sub
cmp
inc
cmps
(bad)
shl
xor
mov
push
(bad)
pusha
dec
adc
mov
in
pushf
add
push
imul
retf
rol
or
fdivr
shl
jmp
test
into
popa
repnz
inc
outs
pusha
jo
sti
fistp
pop
mov
jmp
sub
dec
arpl
scas
dec
pop
je
add
mov
xchg
dec
pop
lea
leave
ja
fsub
or
or
pop
mov
or
dec
je
loop
movs
sti
(bad)
push
mov
jmp
imul
int3
mov
data16
adc
mov
xchg
repnz
and
scas
inc
cmp
jmp
inc
movs
call
outs
pop
repz
and
adc
pop
mov
ss
mov
lods
inc
xchg
push
xor
daa
mov
mov
cmp
(bad)
js
add
aaa
mov
mov
xor
lods
inc
jno
jne
pop
lahf
cwde
shl
pop
(bad)
ror
cdq
je
inc
jmp
sbb
ficomp
xchg
pop
loop
hlt
xor
sahf
loope
out
push
adc
outs
xor
(bad)
adc
aaa
xor
(bad)
and
adc
scas
pop
add
jmp
xor
movs
or
mov
es
sub
test
pop
mov
add
push
push
mov
mov
sbb
mov
dec
mov
enter
lods
pop
sbb
cmp
jb
xchg
cmps
xor
test
sahf
dec
std
jmp
cmp
inc
out
loopne
xor
mov
xor
xor
xchg
push
push
inc
cdq
sar
sahf
xor
inc
inc
mov
sub
sti
nop
test
mov
inc
neg
inc
aam
inc
fisub
push
pop
icebp
jns
aas
mov
mov
push
dec
iret
adc
(bad)
jmp
mov
or
test
lock
ins
das
das
add
js
test
or
sbb
adc
mov
sub
popf
add
arpl
dec
test
jbe
imul
mov
or
pop
jge
call
inc
int3
and
(bad)
outs
(bad)
cmp
fcmovb
jle
mov
lock
dec
jge
int3
enter
sbb
cmps
je
aaa
int3
xor
call
sar
push
cld
(bad)
cmc
fs
cmp
mov
cmp
push
fnstcw
les
cmp
jo
mov
push
fisttp
iret
iret
mov
fwait
inc
inc
ret
scas
jmp
jns
mov
push
sbb
les
les
push
aas
dec
push
stos
cs
cmc
inc
mov
add
ret
js
bound
jnp
xor
sub
mov
loopne
out
popa
icebp
adc
popa
movs
les
inc
and
sbb
or
add
inc
push
pop
add
dec
jae
or
sub
xchg
adc
hlt
test
jne
xor
cwde
pop
xor
hlt
adc
dec
dec
pop
push
fs
sbb
xchg
data16
dec
ins
fisubr
(bad)
push
pop
xlat
dec
jmp
xchg
cmp
xor
int
js
jb
icebp
mov
loop
shl
in
fcmovbe
push
jns
pop
shl
pop
scas
jle
mov
jns
cwde
int
pop
jg
push
push
nop
cmp
pop
sahf
inc
xchg
jns
jl
jmp
pushf
mov
out
cli
mov
push
mov
dec
mov
or
sub
cmp
out
cmp
fs
mov
test
adc
cmp
fisubr
leave
rol
inc
(bad)
xchg
iret
(bad)
jl
cmc
pop
jmp
test
sbb
test
aas
mov
xchg
jmp
and
inc
mov
outs
push
retf
cs
(bad)
inc
pop
pop
hlt
xchg
add
sbb
inc
enter
retf
fiadd
jno
lock
xlat
jecxz
jns
call
mov
rcpps
push
(bad)
xchg
in
jmp
imul
add
daa
cmp
add
pop
fadd
aad
inc
cmc
mov
fcom
stc
cmp
stos
mov
cmps
jnp
pop
in
(bad)
rcl
repnz
std
sbb
cmps
mov
jg
jmp
ins
pop
gs
scas
jmp
pop
push
adc
in
mov
fiadd
add
mov
ficom
mov
fld
jne
pusha
sbb
js
and
pop
clc
in
and
cmps
sti
ja
push
enter
mov
jb
dec
inc
xchg
adc
popa
mov
lods
loope
ins
mov
mov
arpl
movzx
mov
leave
aaa
int
outs
sbb
xlat
retf
and
ss
movs
xor
gs
outs
jecxz
in
cmc
jge
pop
dec
mov
mov
mov
and
cld
pop
hlt
add
dec
xchg
hlt
in
arpl
loopne
mov
jl
mov
ficom
fidiv
popa
cdq
in
xchg
bnd
pop
fmul
xor
in
xchg
cmp
int
clc
movs
adc
inc
mov
sti
retf
sti
out
sub
inc
mov
sti
mov
inc
in
jg
and
jnp
inc
cmps
mov
cmp
aaa
in
imul
retf
hlt
repnz
test
loop
out
ins
xchg
out
or
hlt
cs
xor
mov
cmp
pop
pop
pop
push
sbb
push
xchg
mov
retf
or
sbb
icebp
push
repnz
inc
jmp
sti
clc
pop
jno
or
pop
mov
sti
fcomp
mov
imul
aam
iret
jo
mov
rcl
inc
mov
cmc
je
mov
scas
retf
rol
xor
mov
xchg
cmp
(bad)
inc
test
push
xor
push
add
test
hlt
stos
pop
in
push
aaa
cmp
lods
jg
adc
adc
or
call
popa
jge
repz
lock
lock
push
mov
aad
sbb
dec
add
(bad)
lock
(bad)
fdiv
cdq
add
mov
push
jnp
mov
js
sub
jb
test
sbb
das
rcl
jle
dec
adc
call
icebp
dec
scas
dec
xor
cmp
cld
add
addr16
pop
pop
hlt
xchg
xor
scas
jecxz
or
pop
adc
mov
mov
int
mov
shr
test
retf
ret
xor
pop
jno
sahf
pop
loopne
stos
mov
jo
sub
inc
add
sbb
test
out
loop
mov
dec
ffreep
push
lock
pop
mov
add
std
pop
fs
imul
jno
ins
loopne
add
pop
cdq
aad
cmp
mov
scas
add
(bad)
pop
pop
hlt
pop
add
add
cs
mov
retf
js
push
gs
in
or
inc
outs
mov
jnp
dec
jle
add
push
pop
call
cmc
xchg
arpl
add
inc
repz
mov
mov
retf
dec
adc
push
clc
xor
mov
clc
sti
inc
cs
xchg
(bad)
icebp
jp
out
adc
hlt
xor
fst
dec
iret
mov
fwait
or
add
jnp
sti
pop
je
adc
es
mov
xchg
repz
ins
jae
out
xor
outs
cmps
or
dec
fild
mov
xchg
rol
fcomp
pop
jg
outs
and
(bad)
mov
jle
inc
cmp
(bad)
in
icebp
sub
aad
dec
lahf
clc
add
sub
sub
stos
cmps
adc
push
push
outs
imul
pop
dec
push
std
jg
inc
enter
add
lea
aad
and
cmps
sbb
xor
xchg
push
inc
pusha
xchg
push
push
sbb
repz
sbb
mov
sahf
dec
sub
aam
cmp
xchg
inc
jae
movups
fist
daa
inc
push
clc
test
ds
repnz
ins
xchg
mov
std
repnz
cmp
int3
inc
dec
out
sbb
out
lahf
xchg
jns
fucomp
enter
arpl
dec
jno
mov
lahf
dec
psrlw
(bad)
xlat
push
es
cmc
sub
retf
shl
es
retf
or
dec
js
xchg
test
sbb
arpl
out
jnp
jg
add
das
aas
inc
jns
sbb
push
mov
sub
les
mov
mov
jo
popf
sahf
and
repnz
bound
cwde
cwde
aam
mov
inc
mov
mov
xor
push
pop
enter
inc
mov
cmp
push
int
dec
popa
push
lahf
pop
int
fwait
cli
ffree
xchg
lock
xchg
or
inc
pop
pop
adc
lea
jecxz
jle
pusha
push
pop
scas
mov
cdq
mov
fstp
inc
(bad)
stos
test
jp
mov
arpl
lods
inc
sbb
je
scas
stos
repnz
push
adc
pop
add
push
add
std
jmp
sbb
ds
push
scas
popf
mov
pop
leave
push
dec
inc
jl
inc
or
pop
cwde
sar
sub
cmc
xchg
cld
mov
lea
scas
stos
lock
test
sbb
movs
xchg
sub
pop
xchg
ss
push
pushf
std
jb
call
pop
stc
inc
ja
mov
fimul
test
outs
xchg
push
mov
add
mov
push
xor
push
push
cmp
leave
or
dec
mov
(bad)
adc
in
push
mov
out
iret
stos
rcl
cwde
pop
add
fnstenv
call
aad
stos
lahf
ror
xchg
pop
adc
sti
mov
and
ins
lock
int
mov
mov
mov
add
inc
and
xor
jb
cmp
cli
rcl
imul
add
sbb
dec
imul
loopne
test
pop
cdq
cmps
pop
push
push
adc
movs
jnp
out
xchg
push
js
sar
mov
fidivr
xchg
xchg
adc
fild
sbb
xchg
inc
mov
pop
rcl
hlt
fstp
aad
imul
inc
mov
dec
fwait
retf
mov
adc
(bad)
adc
mov
aas
je
scas
push
mov
das
ret
fild
aaa
je
retf
or
adc
xchg
pop
popf
lods
mov
loope
(bad)
loop
pop
jge
add
adc
sti
mov
div
push
jg
push
push
fadd
(bad)
js
ins
or
add
invd
out
stos
sti
mov
cdq
fcmovnu
and
cmp
inc
ins
mov
sbb
jns
test
xchg
ins
arpl
jecxz
shl
push
jp
xchg
jmp
rcl
(bad)
jl
pop
test
aaa
pop
pop
icebp
ins
fs
xor
jae
test
xchg
and
inc
call
int3
out
(bad)
rol
mov
sub
pop
fnstsw
ins
jl
mov
jg
aam
loope
xchg
xchg
fnstenv
leave
sbb
cmp
idiv
lods
xchg
pop
sub
inc
mov
pop
xchg
lods
ins
jmp
pushf
fstp
and
xlat
jmp
fs
iret
imul
aaa
add
cld
mov
mov
pushf
lods
sub
ret
imul
sbb
add
int
xchg
mov
jge
movs
sbb
aaa
pop
add
sub
jl
outs
jg
shr
and
push
adc
pop
cs
fwait
mov
jno
add
mov
cmps
aad
xor
imul
shl
dec
mov
aad
add
inc
test
and
sub
jle
pop
xchg
xchg
(bad)
pop
in
pop
retf
icebp
std
imul
xchg
or
xchg
mov
mov
pop
es
jp
inc
inc
mov
mov
mov
int
aad
pusha
xor
pop
sub
lds
fcom
dec
ds
xchg
call
call
jo
cmc
pop
mov
je
retf
ins
dec
lods
cmps
neg
jmp
aas
sbb
push
out
mov
enter
xor
dec
stc
mov
push
outs
sbb
outs
stos
jmp
pop
sbb
mov
pop
sar
xchg
or
sbb
pop
inc
push
sbb
pusha
and
and
sbb
xchg
xrelease
test
mov
hlt
mov
or
nop
jecxz
mov
push
adc
add
jecxz
dec
aam
mov
xchg
pop
and
jmp
dec
xchg
outs
shr
xor
xchg
int
add
fnstenv
clc
push
adc
mov
pushf
adc
cmp
or
imul
iret
xlat
and
jp
loopne
lds
mov
and
dec
push
and
pop
mov
(bad)
sub
pop
xor
into
xor
cmp
sbb
mov
not
inc
je
lods
push
daa
call
mov
jmp
gs
xchg
mov
or
mov
inc
xlat
test
pop
sti
mov
cmp
call
inc
mov
sbb
je
jmp
gs
dec
ret
aad
push
mov
jecxz
sub
mov
rol
xchg
and
pop
mov
sysret
adc
lods
movs
pop
jl
and
movs
es
lahf
push
jae
out
iret
sub
aas
in
lock
shl
(bad)
jnp
arpl
out
cmp
or
mov
jno
cmp
jp
and
inc
jno
adc
hlt
imul
mov
xchg
out
into
shr
jl
mov
rcr
pop
or
punpcklbw
and
(bad)
xchg
jns
pop
clc
xchg
jl
mov
mov
ret
push
ins
call
fsub
ss
in
push
sub
jp
or
das
loop
push
gs
(bad)
jmp
xor
add
cmps
add
daa
test
mov
push
imul
inc
retf
push
jecxz
mov
sub
sbb
or
dec
mov
cmp
or
dec
push
ret
inc
pop
jae
retf
jmp
ins
aas
mov
das
jmp
inc
iret
push
pushf
cmp
test
jbe
cld
mov
enter
dec
shr
leave
jmp
scas
(bad)
hlt
jle
pushf
aad
imul
outs
jmp
add
sbb
jmp
call
test
push
cmp
mov
scas
fisub
xchg
xor
add
fmul
or
call
dec
gs
in
inc
test
sub
stc
jns
xchg
ins
enter
push
push
xchg
sub
jle
test
int3
lds
call
ss
sbb
or
dec
add
leave
adc
pop
outs
inc
xor
test
mov
sub
cmp
jo
sub
mov
xchg
ins
xchg
retf
stos
push
(bad)
sbb
and
pop
mov
in
fsub
push
data16
and
dec
cmps
shr
popf
or
xchg
addr16
adc
nop
jne
cmp
mov
cmp
xchg
mov
mov
push
loope
cwde
test
push
cdq
in
xlat
sub
cdq
mov
(bad)
ja
mov
sahf
dec
(bad)
out
push
jno
sahf
xchg
cmp
push
pop
mov
dec
mov
(bad)
out
inc
lods
repz
jae
and
xor
inc
mov
repz
repz
enter
xchg
fwait
call
shl
push
dec
dec
xchg
add
add
mov
add
cmps
mov
dec
adc
test
call
xor
xor
jb
or
in
push
sbb
fcmovu
sbb
sbb
and
or
lock
shl
repnz
pop
mov
or
mov
outs
add
cs
mov
dec
es
ror
push
popf
(bad)
sub
add
aad
sub
xor
sub
mov
adc
fdivr
in
mov
aas
es
out
call
dec
cwde
mov
dec
out
push
in
ins
push
ret
mov
push
pusha
dec
sbb
aas
faddp
pop
xchg
mov
xchg
mov
push
(bad)
jle
inc
hlt
and
push
in
push
stos
clc
hlt
lods
sar
adc
add
leave
sbb
into
lock
sbb
movs
inc
add
pop
mov
fimul
clc
shl
jmp
dec
gs
call
daa
sub
jg
in
shl
mov
repz
jl
mov
pusha
fsub
mov
scas
dec
aas
repnz
rcl
jge
sbb
in
js
xchg
pop
adc
mov
sbb
in
out
aas
and
xchg
fidivr
neg
out
out
ror
es
adc
shl
aad
pop
mov
mov
inc
push
or
hlt
leave
scas
push
mov
mov
int
mov
mov
or
ret
xor
xlat
dec
pop
and
or
pop
cmp
jne
addr16
jecxz
movs
pushf
(bad)
daa
(bad)
sub
stos
stos
aas
lods
popa
repnz
mov
or
dec
and
(bad)
cmps
(bad)
sbb
pushf
mov
bound
shl
sub
out
push
rol
mov
jecxz
pop
movs
out
dec
mov
lahf
ja
fimul
es
pop
mov
and
daa
out
add
hlt
repz
jle
aas
inc
sub
clc
scas
fsub
ds
cmp
xor
jbe
div
imul
adc
jns
fbstp
(bad)
jnp
mov
outs
arpl
inc
(bad)
cmp
ja
mov
lods
repnz
cmovs
mov
fwait
sub
pop
repz
sti
stc
inc
cmp
pusha
mov
jg
mov
sbb
into
sbb
jae
idiv
shr
push
ds
out
mov
in
pusha
adc
jge
xchg
or
push
jo
(bad)
cmp
sub
and
(bad)
fist
iret
loop
sub
fcomp
mov
fidivr
cmp
shl
xchg
pop
test
sbb
pop
pop
cs
ror
das
jmp
push
mov
(bad)
pop
int
out
push
pop
pop
idiv
in
cmps
jmp
xor
push
sahf
sub
es
stc
pop
rol
add
out
push
and
mov
jo
jmp
jo
ins
cmp
mov
inc
pop
in
arpl
ds
add
pushf
lods
push
pusha
aad
add
cmps
mov
stos
jmp
sub
call
pushf
mov
cwde
jecxz
dec
cmp
sbb
arpl
push
pop
push
cwde
outs
adc
lea
js
(bad)
mov
ret
add
int3
mov
dec
mov
mov
mov
fbld
cmp
mov
mov
gs
xchg
mov
sti
lock
mov
add
neg
and
mov
push
inc
inc
xchg
int3
fadd
mov
pop
repnz
mov
in
pop
aam
or
adc
int
add
dec
scas
xor
add
mov
out
jae
push
push
cmp
scas
and
loop
test
or
add
pop
jecxz
shl
and
das
call
dec
pop
data16
push
mov
mov
or
xchg
(bad)
fdivr
pop
lods
xor
mov
in
fdivrp
js
movs
cmp
inc
pop
rol
pop
stos
or
inc
shl
in
push
repnz
and
stc
shr
aad
xor
inc
mov
das
push
and
mov
inc
(bad)
sub
pusha
cwde
adc
ret
(bad)
(bad)
jmp
lods
int3
loopne
adc
dec
push
cmp
add
lahf
add
lods
imul
enter
stos
mov
xchg
hlt
or
mov
ror
ins
pop
ins
or
(bad)
std
xchg
add
retf
mov
or
aaa
xchg
gs
push
mov
fild
in
push
sbb
push
iret
ins
ins
mov
loop
and
jmp
or
mov
adc
rcr
sbb
test
jmp
jmp
pop
inc
mov
sub
pop
pop
shl
leave
adc
lods
loopne
aam
or
xor
push
and
jae
sar
out
add
in
dec
or
scas
jg
mov
mov
outs
ficom
sub
lds
ret
iret
nop
fs
mov
rcl
js
retf
cld
jge
adc
aam
and
fmul
pop
pop
enter
leave
xchg
mov
mov
ins
(bad)
loope
sub
jb
enter
addr16
jae
sub
hlt
pop
aad
mov
data16
enter
push
pop
jo
lods
popa
je
nop
push
es
je
sub
xor
xchg
lods
fcom
fwait
mov
xchg
xchg
out
cmp
xchg
ds
rol
push
xchg
retf
push
jmp
mov
(bad)
mov
sbb
mov
adc
xchg
shr
push
in
jbe
in
or
adc
sahf
ja
mov
jle
push
push
xchg
pusha
mov
fs
adc
cmp
cmp
aas
xor
and
test
jg
hlt
(bad)
mov
shl
xchg
inc
xor
jmp
dec
retf
pop
imul
sti
push
jbe
addr16
repz
mov
sbb
int3
pop
ret
dec
clc
sbb
xor
xor
ins
daa
test
sbb
jge
popf
jge
sub
sub
pop
push
dec
lahf
test
push
cdq
pop
cmp
inc
inc
jp
cmp
sub
mov
push
loope
adc
jbe
fwait
or
dec
enter
movs
imul
inc
lods
test
or
rcl
test
mov
je
shl
je
fucomip
add
shl
pop
jno
outs
out
in
dec
in
gs
mov
addr16
cld
enter
data16
jo
or
scas
ror
into
mov
xchg
(bad)
js
int3
arpl
inc
pop
inc
sbb
inc
dec
arpl
xchg
pusha
jbe
xchg
jg
and
add
xor
arpl
sub
aam
mov
inc
in
or
inc
cmp
out
dec
test
out
inc
lods
jecxz
inc
movs
imul
inc
mov
jae
and
mov
xchg
xor
dec
mov
repz
dec
mov
test
repz
je
sbb
stc
aad
and
je
xchg
scas
mov
jle
xchg
scas
imul
dec
xchg
sbb
cdq
out
retf
push
ja
aaa
inc
push
mov
rol
xor
stos
push
add
hlt
aad
enter
mov
ret
es
dec
lds
pop
(bad)
(bad)
repz
inc
cld
cwde
xor
mov
dec
js
in
out
jbe
jne
or
push
mov
mov
fsqrt
xor
inc
jmp
retf
add
push
inc
gs
js
mov
and
fisttp
push
shl
adc
jmp
sub
add
pop
xor
fist
pop
mov
sbb
mov
stos
add
sbb
push
mov
adc
push
pop
inc
adc
out
aaa
ins
pop
xor
ins
leave
idiv
sbb
pop
xor
jnp
mov
sub
mov
mov
int3
movs
in
mov
and
(bad)
dec
sub
dec
daa
leave
push
daa
div
push
and
rcr
in
cld
cmp
mov
jbe
test
into
ret
xor
push
or
sar
mov
cmc
stc
iret
test
outs
add
fwait
test
mov
aas
mov
and
push
test
mov
and
xlat
push
je
and
daa
mov
and
sbb
rcr
fnstsw
xlat
xchg
mov
dec
jmp
cmc
aad
stos
das
jl
inc
shr
dec
in
cmp
sar
inc
das
adc
xchg
mov
fs
scas
mov
cmp
aaa
pop
in
adc
ja
movs
loop
dec
fs
mov
in
fisub
(bad)
cmp
scas
pop
mov
lods
cmp
loopne
rcl
pop
fcmovnu
fmul
or
pop
adc
in
imul
stc
rol
ja
push
enter
fadd
cmp
xchg
in
cmp
add
dec
dec
scas
outs
push
xor
fidivr
fbld
ret
cmc
out
fst
jg
ja
dec
and
iret
ss
(bad)
and
sbb
pop
add
arpl
fcmovne
mov
and
xor
inc
out
mov
xor
lea
cmp
add
test
push
mov
jb
in
mul
(bad)
inc
aad
mov
inc
lea
mov
sar
sub
rcl
fs
jmp
pop
ret
call
add
leave
sub
sub
inc
push
ret
sub
mov
adc
shl
mov
fisub
sbb
loopne
addr16
adc
retf
les
pop
push
add
mov
mov
dec
movs
sti
out
mov
jmp
imul
inc
mov
jb
inc
daa
mov
(bad)
in
sub
inc
enter
test
icebp
or
mov
cwde
jmp
lahf
mov
movs
mov
mov
(bad)
(bad)
fxch
sbb
push
or
fwait
dec
jbe
pop
out
and
cmp
adc
pop
sbb
mul
jno
aas
retf
gs
fstp
loop
dec
push
xor
cmp
xor
cs
leave
dec
mov
jmp
cmp
ficom
cs
mov
jl
mov
push
loopne
in
pop
test
mov
cwde
mov
(bad)
ds
icebp
fidivr
jnp
fisubr
cmp
xchg
pop
push
sbb
fist
pop
(bad)
or
dec
xor
mov
jae
xchg
sbb
inc
mov
stc
jmp
(bad)
cmc
and
sbb
sbb
jge
rcl
mov
xor
les
add
adc
add
scas
cmps
sbb
mov
mov
out
call
push
inc
js
addr16
(bad)
xor
sbb
push
test
cli
cmp
test
pop
add
neg
jge
dec
push
cs
mov
xchg
jl
xchg
in
fmul
pushf
repz
cs
cmp
mov
inc
fs
cmc
jge
xor
bound
pop
inc
int3
push
enter
test
jp
mov
in
xchg
shl
add
mov
(bad)
mov
in
xchg
fmul
test
test
call
bound
das
cmp
movs
sbb
loopne
adc
dec
fistp
mov
fwait
shl
inc
pop
hlt
dec
jns
push
sub
or
and
dec
stos
div
loope
pop
fld
push
dec
jmp
cld
dec
xlat
add
fwait
fwait
push
xor
(bad)
cmp
jle
pop
or
in
scas
movs
movs
sub
dec
cdq
aam
add
cmp
lock
jno
(bad)
jle
enter
daa
(bad)
lahf
mov
sub
push
ret
aas
pop
popa
sub
xchg
repnz
dec
std
pop
or
mov
in
xchg
push
icebp
shl
and
nop
sub
rol
sbb
mov
mov
mov
test
jbe
sbb
retf
dec
sub
dec
mov
add
int
js
and
or
add
jno
inc
adc
(bad)
mov
push
pop
les
inc
sub
fidivr
pop
or
pushf
lods
enter
xchg
std
jae
scas
das
mov
bound
call
push
jae
cli
sbb
push
sub
xchg
mov
mov
jb
and
repnz
jno
es
cs
ins
push
mov
dec
push
(bad)
lock
dec
adc
jge
cmp
rcr
cmp
repz
fst
inc
aas
in
loopne
inc
leave
xchg
push
pop
(bad)
sub
dec
mov
sub
int3
sbb
sub
lods
jns
sbb
add
iret
das
call
mov
mov
je
cmps
push
mov
neg
xchg
leave
nop
loopne
dec
jl
cmp
add
scas
ficom
mov
inc
push
mov
sub
mov
in
les
shl
and
mov
jmp
repnz
sub
mov
and
mov
std
rcr
nop
mov
push
fld
call
ffreep
or
adc
scas
into
pusha
cwde
stos
mov
comiss
mov
inc
imul
jb
adc
cmp
and
add
mov
mov
cs
mov
cmp
repnz
std
imul
retf
popa
sbb
jnp
(bad)
out
fmul
push
(bad)
add
mov
mov
das
jecxz
test
outs
ja
sub
mov
gs
jne
stos
mov
ins
dec
fistp
enter
data16
xchg
iret
sti
sbb
mov
stos
call
mov
cmp
sub
outs
xchg
fimul
fstp
test
lea
xor
icebp
xchg
push
std
cmps
jle
arpl
jmp
mov
mov
push
sub
stos
not
sub
jge
or
mov
repnz
mov
dec
(bad)
mov
aas
and
xchg
mov
scas
int3
int
dec
fbld
push
pop
mov
sbb
xlat
mov
push
jbe
imul
mov
aad
xchg
push
outs
jne
sub
stos
adc
jl
in
aam
jle
hlt
xor
mov
pop
mov
sbb
adc
xor
push
ret
jns
sahf
mov
ret
test
pop
xor
jmp
push
dec
cwde
mov
mov
jae
fsubr
popf
pop
mov
fimul
mov
adc
cli
sbb
inc
push
add
stos
mov
daa
mov
arpl
push
pop
jo
scas
mov
jb
and
and
push
out
or
cmp
jae
repnz
push
dec
das
dec
mov
scas
fdiv
ficomp
aam
iret
inc
ret
js
lods
(bad)
iret
mov
ficom
mov
call
mul
mov
dec
pop
xchg
arpl
aad
xor
clc
inc
push
sub
loop
add
rcl
cmp
pop
inc
cld
hlt
jl
jno
pop
push
mov
xor
pop
ja
pop
jg
jno
scas
es
or
imul
sbb
mov
ret
cmp
retf
mov
jmp
(bad)
out
inc
test
jmp
mov
shl
inc
loop
sub
out
adc
inc
mov
rep
fiadd
shl
in
xchg
add
dec
daa
pop
sbb
(bad)
cmc
jmp
nop
adc
and
cwde
cmps
and
sbb
pushf
push
mov
push
inc
mov
and
mov
push
sahf
push
jb
stos
mov
inc
fs
inc
adc
(bad)
mov
mov
xor
push
test
test
dec
stos
lahf
aas
bound
xor
ds
daa
call
xor
cmps
push
sub
mov
cmp
scas
into
and
mov
push
sbb
loop
outs
adc
sub
je
fs
jns
pop
xchg
rol
sub
adc
movs
mov
xchg
ret
int3
pop
jae
sbb
js
xchg
test
js
imul
imul
pop
mov
mov
adc
dec
fisubr
sub
test
push
push
imul
sahf
dec
xchg
push
cld
jecxz
jnp
out
add
xchg
pusha
(bad)
imul
lods
inc
lock
lock
mov
outs
mov
jae
add
test
mov
mov
xchg
dec
in
jne
and
int
(bad)
aas
test
sub
mov
dec
jmp
mov
aaa
inc
loopne
push
add
jno
xor
jl
mov
sbb
call
retf
mov
jle
inc
or
push
(bad)
pop
fwait
jmp
pop
xlat
loop
movs
sti
repnz
out
loope
dec
out
outs
test
iret
dec
pop
ror
pop
push
jo
ss
(bad)
adc
cli
xchg
ret
xor
in
repz
idiv
add
cdq
inc
aaa
pop
ins
or
mov
push
imul
sbb
jecxz
mov
dec
arpl
mov
adc
add
xchg
int3
cld
or
sub
push
arpl
cmp
ja
xchg
and
cli
jl
out
cmp
cmps
(bad)
test
and
shld
mov
popf
or
mov
imul
test
inc
test
rcr
cmp
add
cmp
std
scas
call
sub
bound
cmp
mov
fldl2t
leave
inc
aam
mov
or
(bad)
(bad)
mov
adc
push
call
ret
cmc
scas
push
sahf
cmc
(bad)
(bad)
popf
xchg
push
mov
das
lods
ins
dec
add
jle
test
xor
js
mov
adc
loope
frstor
clc
sbb
js
in
cmps
jo
xchg
jl
movs
push
or
cmp
(bad)
mov
ret
inc
lds
push
icebp
pop
mov
aad
mov
cmps
out
jmp
bound
and
jmp
xchg
xchg
adc
call
mov
fwait
es
ss
cmp
sub
push
cwde
(bad)
jg
repz
adc
xchg
dec
jmp
cmps
cmp
push
out
ins
add
xchg
addr16
fmul
mov
aad
xor
inc
add
stos
jecxz
imul
fwait
ins
test
push
enter
stos
sub
ret
out
outs
mov
mov
push
mov
jb
ret
mov
jae
mov
jmp
out
fdivrp
out
fmul
mov
push
add
jle
adc
push
or
sti
jp
sti
xor
pushf
jl
pop
retf
sub
sub
or
push
loopne
(bad)
lahf
mov
stos
mov
retf
jb
add
pop
cmps
xchg
loop
jo
cmps
pop
jae
arpl
out
fdiv
retfw
arpl
mov
cmps
cmps
xor
cwde
lods
mov
mul
add
push
push
out
das
add
iret
jp
mov
call
jae
mov
push
pop
(bad)
pop
ss
ins
in
and
jae
jl
inc
and
loope
bswap
jmp
xchg
dec
xchg
retf
or
xchg
ds
mov
pop
jbe
call
add
ret
retf
pop
and
mov
(bad)
lods
xchg
cmp
add
cli
call
mov
pop
xchg
or
cwde
popa
mov
jbe
in
jge
inc
push
adc
add
stos
and
ror
stos
push
and
cmps
jp
fistp
les
movs
(bad)
loopne
push
fsub
sub
xor
add
inc
xchg
mov
push
(bad)
jne
add
xlat
retf
fdivrp
fs
call
pop
xchg
cmp
std
xchg
(bad)
sbb
(bad)
test
stos
jae
xchg
fsubr
xchg
(bad)
imul
mov
test
loope
mov
out
adc
enter
call
out
push
stos
stc
xchg
ss
int3
gs
inc
push
adc
into
dec
stc
inc
jmp
mov
dec
clc
push
dec
cmc
ins
jne
pusha
cmc
adc
sbb
leave
pusha
int3
sub
adc
push
(bad)
fist
mov
hlt
fs
std
dec
sub
sub
(bad)
fisttp
int
xchg
mov
mov
mov
sahf
scas
inc
repnz
cdq
lea
ret
adc
cmc
add
or
mov
mov
and
stos
icebp
in
mov
enter
ret
xlat
dec
test
push
addr16
mov
push
inc
push
(bad)
mov
push
mov
xchg
mov
mov
dec
cld
sub
out
int
sbb
out
cmp
scas
mov
dec
inc
sti
aam
dec
xchg
outs
mov
mov
repz
aaa
das
and
(bad)
clc
add
dec
sbb
mov
xor
clc
xor
pusha
dec
into
inc
mov
imul
dec
fscale
lahf
lea
xor
popa
mov
mov
xor
xchg
push
xor
rcl
mov
out
cmp
lods
inc
mov
cmps
aam
jnp
mov
test
dec
sbb
and
gs
data16
sti
pop
in
cdq
test
ja
inc
xchg
mov
or
push
add
test
lods
popa
cmps
data16
inc
jo
stos
mov
push
inc
xor
push
lock
adc
in
adc
and
(bad)
cmp
mov
fwait
cmp
inc
cmp
icebp
mov
shl
mov
and
and
dec
add
cmp
call
add
and
jno
sbb
fwait
(bad)
dec
imul
mov
(bad)
mov
push
xor
aad
push
in
icebp
neg
cdq
outs
push
js
mov
mov
fidivr
push
and
bound
in
sbb
loop
mov
sbb
cmp
scas
sbb
xchg
pop
mov
inc
ins
cmc
mov
fadd
cs
mov
inc
sbb
jae
mov
sub
jno
icebp
pop
add
jae
push
push
stc
fcmovu
or
adc
jae
xchg
leave
outs
popa
ja
movs
movs
mov
pusha
lods
xor
das
mov
pop
push
cmp
push
or
pop
dec
jbe
fisub
lods
es
dec
jge
pop
imul
in
loopne
pop
mov
imul
push
iret
add
popa
push
test
pop
(bad)
cdq
xor
outs
loope
inc
cmp
mov
jmp
xor
mov
out
dec
mov
add
loope
mov
sti
mov
cmp
in
xchg
sti
sub
rcl
mov
loop
int3
xor
jo
inc
push
js
adc
(bad)
mov
cmc
test
ss
movs
jp
in
adc
jns
cmp
jecxz
test
push
add
adc
imul
in
sub
cdq
stos
mov
sbb
push
pusha
inc
out
and
(bad)
jo
daa
jmp
hlt
test
push
aad
js
jb
pop
push
sub
stos
add
jecxz
bound
mov
sub
pop
sub
outs
nop
stc
cs
mov
dec
gs
mov
dec
dec
jae
push
call
pop
add
pop
cmps
push
leave
jbe
imul
test
or
(bad)
lea
ror
popa
loope
out
inc
mov
imul
mov
int3
hlt
loop
lods
jmp
dec
test
cli
dec
lods
sti
(bad)
lods
out
push
mov
neg
(bad)
ins
mov
(bad)
fidivr
fidivr
(bad)
push
loopne
mov
sbb
(bad)
mov
adc
cmps
jmp
push
movs
sti
(bad)
pusha
mov
into
adc
jecxz
adc
fstp
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
loope
lock
in
out
in
mov
imul
xor
in
dec
mov
repz
div
push
mov
repz
push
stos
sti
out
inc
mov
sti
jmp
imul
inc
mov
sti
idiv
enter
movs
imul
inc
lods
mov
or
test
sbb
pop
repz
es
ss
cmps
push
sbb
dec
jne
cmp
pop
push
inc
mov
cli
ss
jns
je
and
hlt
xor
es
xchg
cmps
ins
inc
sbb
and
fldenv
pop
xchg
xchg
jge
pop
xlat
mov
mov
ror
xchg
push
int
cmp
and
test
aam
sub
and
icebp
jmp
idiv
mov
push
push
mov
shl
loope
jl
loope
sbb
lods
shl
pop
xchg
pop
ins
clc
sahf
add
jmp
bnd
xchg
mov
jnp
xchg
pop
nop
movs
ja
sbb
and
dec
(bad)
gs
mov
adc
jl
sub
adc
adc
jb
xor
push
jecxz
cs
sub
jns
nop
dec
adc
cmc
jmp
cmc
jmp
repz
pop
xor
or
aas
inc
gs
mov
mov
inc
les
mov
retf
pop
cmp
test
adc
pop
sub
push
xlat
and
cmp
mov
dec
retf
outs
mov
sbb
fild
ins
loop
inc
lock
dec
sbb
dec
cmps
and
ins
and
mov
push
and
add
jbe
(bad)
push
adc
sbb
push
jns
dec
leave
xchg
test
dec
mov
leave
fidiv
sub
popa
mov
popf
test
push
cmc
sbb
or
icebp
mov
gs
mov
jb
push
push
mov
push
xchg
clc
adc
sub
fcom
pop
scas
mov
sub
fwait
xor
xor
jnp
ins
dec
out
lods
test
scas
cld
dec
(bad)
xor
ds
pop
dec
or
pop
jne
test
sti
jl
or
add
sub
mov
xor
inc
xchg
sbb
pop
jb
leave
xchg
imul
or
jae
pop
icebp
mov
test
hlt
ficom
test
gs
push
out
test
shl
mov
xlat
ja
fld
xor
inc
fcmovb
mul
in
xchg
aaa
aad
ror
test
test
push
out
xor
imul
mov
xor
sub
inc
sahf
js
test
add
sbb
ins
lock
pop
ds
jnp
cmp
dec
push
(bad)
mov
push
inc
inc
lock
stc
xchg
inc
xchg
push
cmps
push
inc
pop
js
or
jl
aas
(bad)
addr16
(bad)
jmp
push
cmps
ds
into
pop
enter
mov
cwde
push
or
add
(bad)
or
stc
adc
jmp
(bad)
scas
mov
and
hlt
cld
sahf
cvttps2pi
dec
stos
xchg
cmps
imul
mov
mov
rsm
jge
iret
mov
cdq
xor
push
jo
ror
inc
imul
imul
jb
dec
test
pop
jmp
mov
jmp
(bad)
cdq
xchg
jg
jmp
or
inc
adc
jmp
idiv
inc
mov
sti
es
jmp
(bad)
in
mov
and
mov
enter
movs
div
mov
sub
push
inc
sub
lods
push
mov
and
jle
dec
in
mov
retf
shr
cli
sbb
dec
dec
iret
int
xchg
sub
aas
repnz
cmc
push
stos
adc
dec
lea
mov
mov
fcom
ror
push
or
pop
popw
jns
popa
(bad)
dec
dec
push
dec
mov
add
xchg
popf
sbb
es
xchg
jne
inc
(bad)
lock
fwait
cmp
xor
sub
popf
pusha
push
icebp
das
cli
add
pop
cmc
sub
scas
popa
lds
es
mov
fdivr
cwde
aaa
in
addr16
imul
adc
fiadd
clc
xor
xchg
rcl
cmps
vmwrite
and
fldenv
aaa
or
lods
cs
clc
mov
inc
adc
xchg
and
xor
xor
ins
and
(bad)
mov
adc
xchg
jae
or
or
xor
dec
jno
sbb
mov
mul
sub
(bad)
mov
fs
sbb
mov
push
test
dec
add
pop
jnp
inc
adc
test
call
test
mov
mov
call
cmp
js
(bad)
pop
in
(bad)
(bad)
fisttp
jmp
mov
enter
and
sahf
test
lods
pop
cwde
imul
dec
into
repnz
mov
xchg
dec
mov
mov
or
jnp
xor
add
cmp
inc
lods
call
stos
push
and
lods
dec
sbb
lds
mov
cmp
int3
in
mov
outs
sbb
cli
stos
xchg
push
test
sub
xchg
mov
xor
jp
xadd
sub
aad
push
sub
or
cwde
dec
movs
jnp
inc
pop
movs
ret
movs
xchg
cmp
dec
leave
(bad)
push
les
pop
pop
sbb
push
call
scas
fs
adc
movs
int
mov
sti
xor
outs
jle
mov
and
(bad)
mov
mov
jae
jp
out
retf
(bad)
and
pusha
rcr
xor
or
mov
(bad)
ja
adc
xlat
int
cmps
loop
push
adc
cmps
pop
mov
adc
out
int3
scas
pushf
pop
and
cmp
jl
dec
mov
push
ds
mov
mov
(bad)
int3
aam
lods
pop
dec
sub
rcl
add
shl
xor
jno
jle
jb
cmp
sar
es
mov
cmps
pop
sbb
xchg
mov
mov
in
dec
in
out
movs
jmp
inc
movs
imul
inc
mov
imul
or
mov
out
add
jmp
pushf
out
inc
movs
sti
dec
pop
repz
hlt
addr16
or
adc
mov
lahf
cli
mov
pushf
cmp
loope
cs
jmp
rcr
into
xchg
add
jp
dec
test
jae
pop
inc
in
inc
pop
cmc
loope
(bad)
mov
in
dec
mov
adc
jmp
int
(bad)
cmp
in
jecxz
push
jl
in
mov
mov
fimul
imul
retf
push
xchg
sbb
dec
iret
leave
fcmovu
mov
sub
pop
jns
pop
(bad)
icebp
and
xor
mov
jns
add
ins
adc
outs
jg
adc
mov
or
out
cmc
sub
ds
push
push
cdq
jg
ficom
dec
fld
mov
mov
sbb
leave
adc
jg
outs
daa
mov
pop
push
mov
clc
add
xchg
dec
popa
dec
mov
lds
sti
sub
cmps
jmp
hlt
xor
sahf
add
popa
xchg
mov
push
test
fiadd
xor
adc
sbb
lahf
adc
pushf
jmp
dec
int3
sahf
fld
repz
jo
xor
push
pop
lea
and
gs
push
shr
shl
out
sbb
mov
jge
push
aaa
dec
xchg
xchg
fcom
aam
stc
pusha
js
push
js
push
xor
test
adc
int3
icebp
sbb
into
stos
pop
xchg
shl
ret
enter
movs
lahf
loopne
add
cmps
je
sub
cmps
fdivr
push
(bad)
cld
call
stc
mov
xlat
test
hlt
jb
movs
xor
xor
pop
sbb
jmp
mov
enter
jmp
mov
push
loopne
pop
movs
or
and
and
in
scas
fild
cld
enter
xlat
cdq
js
rcl
loopne
out
inc
mov
sti
mov
and
xchg
imul
push
xchg
ret
mov
popa
shr
sub
pusha
or
sub
mov
push
aas
cdq
sahf
lea
xchg
hlt
and
loop
add
or
push
add
sub
aaa
ins
jge
cmp
jbe
sar
rol
inc
mov
sti
dec
out
jmp
mul
push
mov
mov
adc
repz
sub
mov
sub
or
inc
xor
sbb
or
dec
frstor
xchg
idiv
loop
jne
mov
adc
mov
mov
lock
and
cmps
add
xor
ja
std
stos
mov
cmp
jge
sub
mov
in
lods
cli
push
inc
adc
push
pop
dec
jg
fisub
test
adc
mov
sub
je
cmp
out
pop
adc
movq
inc
add
jns
pop
in
xor
xor
adc
mov
aaa
mov
pop
sbb
inc
imul
js
pop
sub
imul
jns
ds
add
ss
cwde
bound
pop
or
and
fld
sahf
cmp
jbe
aad
movs
mov
ins
add
dec
push
mov
les
adc
dec
jns
xchg
mov
fwait
into
add
rcr
fdivr
xchg
shr
leave
ds
push
sub
jmp
mov
les
pop
push
sti
loopne
inc
pushf
add
test
and
or
pop
xchg
and
mov
cli
xor
lock
pop
xor
ins
mov
(bad)
jmp
cmp
jnp
mov
sbb
mov
out
fistp
es
inc
scas
sub
mov
scas
cwde
test
sbb
iret
pop
or
jne
dec
pushf
iret
push
icebp
ret
xor
ss
fsubr
adc
xor
mov
push
sub
jnp
in
les
mov
call
loop
push
or
xor
outs
xchg
pop
outs
retf
dec
das
icebp
arpl
mov
scas
pop
xchg
push
xor
and
bound
ror
icebp
cwde
and
ret
fsubr
and
xchg
and
mov
ins
mov
leave
retf
into
jno
jb
js
xchg
aaa
push
pop
daa
aas
lahf
sub
cwde
out
fsubp
and
jg
call
inc
push
out
xchg
pop
hlt
std
and
mov
push
jb
pop
in
add
(bad)
jg
adc
jge
mov
mov
mov
fidiv
(bad)
sar
out
inc
popf
call
or
pusha
xchg
vpmacsww
push
aam
outs
mov
mov
mov
imul
dec
and
fdivr
push
push
xor
xchg
inc
pop
sub
push
sub
mov
inc
push
repnz
aas
inc
dec
loop
sbb
inc
xor
int3
in
pop
scas
ret
pop
xchg
inc
in
pop
inc
loope
pop
push
adc
shl
int3
daa
neg
mov
adc
dec
fiadd
pop
loope
lock
mov
sbb
loope
fdiv
cmp
inc
retf
jmp
adc
retf
cdq
mov
fst
repz
sub
loope
mov
sub
push
test
cld
in
add
push
enter
fwait
xor
popa
ins
xchg
sub
mov
xchg
mov
fsubr
(bad)
iret
push
out
xchg
scas
popa
pop
dec
dec
js
sub
or
mov
adc
(bad)
iret
idiv
fwait
sti
and
retf
jle
xchg
sbb
in
fs
enter
enter
aaa
enter
mov
inc
mov
mov
pusha
test
repnz
mov
imul
dec
mov
idiv
add
jae
mov
jg
lds
mov
add
lods
mov
out
push
jbe
addr16
movs
ins
adc
mov
push
dec
mov
jge
mov
ror
cli
mov
stos
push
je
pop
loope
rcr
mov
in
jle
pop
sub
mov
mov
push
pop
stos
push
dec
push
xor
pop
hlt
push
lods
loop
cs
or
xchg
mov
lahf
(bad)
shl
push
sub
dec
pop
ins
xor
dec
sub
pop
mov
sahf
sbb
xor
jns
aas
enter
mov
sub
and
jmp
sub
adc
nop
cli
fidiv
push
in
xlat
sub
mov
movs
fldcw
fnstenv
mov
mov
loopne
rcl
outs
dec
fist
popa
fwait
ds
aas
out
fimul
inc
js
xor
mov
cmp
shl
add
leave
int3
enter
test
cmps
and
loop
mov
mov
mov
inc
pop
les
ror
jo
shl
add
out
adc
mov
popa
scas
mov
dec
cmc
(bad)
mov
add
xchg
jl
mov
mov
add
bound
xchg
inc
xchg
push
js
scas
sar
cli
xchg
and
loopne
fmul
push
sbb
cmp
mov
xor
add
mov
dec
cmp
loope
adc
jecxz
aad
jae
test
mov
dec
lea
jmp
cmc
dec
xchg
nop
std
(bad)
dec
ficom
add
mov
push
or
in
pop
mul
lock
cmp
das
iret
and
test
dec
ret
inc
cs
inc
(bad)
fsubr
sbb
(bad)
ins
das
popf
out
inc
jge
mov
dec
push
adc
les
xchg
or
mov
cmp
(bad)
les
movs
in
cmp
jecxz
add
idiv
xor
hlt
fwait
push
(bad)
jmp
xchg
mov
(bad)
mov
shr
jge
inc
inc
cdq
adc
nop
push
out
nop
call
cdq
arpl
test
cmps
sbb
mov
mov
xchg
lock
mov
popa
(bad)
fldcw
popa
pop
fucomi
add
mov
div
fcomi
inc
dec
dec
int
mov
je
movs
jae
call
or
pop
adc
or
scas
cli
jg
clc
mov
ror
xlat
cdq
jbe
sub
sti
xchg
mov
enter
es
jb
mov
mov
int3
push
jo
adc
push
leave
std
or
mov
xor
addr16
mov
das
cmp
xchg
add
sahf
or
lods
pop
pop
jb
dec
popa
rol
jnp
sbb
jecxz
push
adc
mov
out
push
xchg
popa
(bad)
mov
xor
popf
push
mov
(bad)
out
ret
stc
adc
add
mov
outs
inc
scas
fld
ror
outs
push
bound
(bad)
(bad)
cli
fldenv
jns
mov
retf
sub
int3
mov
ret
movs
sbb
mov
jmp
dec
mov
jnp
mov
(bad)
std
mov
pop
dec
lds
xlat
sti
addr16
push
(bad)
fadd
addr16
xchg
mov
sub
into
dec
push
xor
jnp
ror
imul
repz
mov
mov
icebp
adc
stos
pop
hlt
jae
data16
pushf
sbb
or
mov
aam
aas
and
jbe
cmp
jno
pop
add
scas
into
lods
jmp
push
cmps
jnp
daa
cmpxchg
repnz
mov
jb
jbe
mov
test
xchg
mov
int
icebp
cmp
div
xchg
bound
pop
mov
in
and
lds
pop
xor
cdq
daa
fild
repz
mov
popf
outs
shl
xor
xchg
hlt
(bad)
sbb
pop
call
scas
aaa
fadd
jbe
mov
ja
mov
arpl
mov
les
gs
sub
sub
shl
mov
sub
cmp
mov
shl
imul
clc
movs
sub
pop
iret
in
outs
fisttp
jge
sbb
popf
(bad)
mov
outs
scas
int
mov
lods
and
add
loopne
jecxz
push
sbb
mov
and
sar
repnz
es
push
xor
pop
add
je
cmc
xor
aaa
sbb
fwait
fwait
mov
xor
ret
jne
dec
mov
push
pop
push
outs
in
and
pusha
add
fidiv
pop
(bad)
stos
pop
push
cmp
jo
mov
pushf
sti
xchg
sbb
add
fwait
jmp
jmp
out
inc
movs
imul
inc
mov
mov
shl
in
(bad)
in
ins
and
fs
pushf
jmp
jae
outs
int3
push
stos
test
xchg
and
dec
dec
adc
push
pushw
cmc
mov
adc
in
inc
sahf
pushf
cmp
mov
inc
jbe
mov
fs
xchg
lock
cmp
xor
das
daa
xchg
add
cmp
cmp
fst
or
imul
jb
ins
repnz
ins
pop
add
jmp
jp
int
adc
fwait
int
and
push
add
pop
add
outs
dec
cmps
mov
mov
shl
lods
xchg
ror
inc
jns
ror
pop
into
mov
cs
mov
mov
hlt
pop
(bad)
out
rol
fwait
adc
hlt
or
cmp
scas
push
jmp
data16
jns
push
jno
adc
add
inc
mov
push
or
aad
call
je
stc
icebp
icebp
and
pusha
jbe
enter
add
add
jp
lds
sbb
fnstenv
jp
pop
es
sti
outs
rol
mov
sbb
ins
ret
xchg
outs
(bad)
fnsave
push
mov
pop
ret
enter
(bad)
fidiv
and
mov
inc
push
inc
mov
sti
shl
cld
es
push
jecxz
cmp
das
(bad)
cmps
addr16
movs
push
push
out
fs
fwait
ins
cmp
mov
aaa
gs
adc
ja
rcr
pop
fist
js
ins
mov
out
push
jnp
push
ret
inc
stc
xor
mov
sar
inc
and
leave
inc
in
leave
inc
dec
mul
dec
mov
pop
lock
data16
movs
push
call
sub
xchg
or
dec
das
inc
cmp
sbb
iret
js
sub
arpl
or
fsubp
mov
adc
jbe
je
pop
outs
in
jge
scas
adc
cmc
and
stc
mov
cmp
setne
(bad)
scas
push
call
dec
pop
inc
lds
mov
xchg
cs
mov
arpl
gs
sbb
mov
xchg
mov
lea
in
adc
ds
enter
or
mov
icebp
push
imul
sbb
jmp
les
xor
movs
or
xor
(bad)
pusha
inc
xor
jne
rol
push
inc
or
xchg
fisttp
jp
mov
je
inc
sub
pop
add
xchg
or
into
jne
fnclex
jbe
pop
hlt
int3
and
pop
dec
jmp
mov
cmp
adc
dec
repz
jp
inc
dec
jmp
mov
xchg
xchg
add
sub
add
sbb
outs
mov
cmp
sbb
cmps
sbb
dec
outs
add
sar
mov
out
call
and
in
scas
aad
dec
adc
je
loop
cld
sub
dec
fs
mov
add
int3
cmp
jg
add
xchg
mov
movs
loopne
sbb
rcr
xchg
and
jl
mov
jl
icebp
imul
stc
push
push
inc
in
das
mov
or
retf
add
gs
mov
retf
xchg
pop
pop
call
fst
and
push
mov
mov
ins
mov
pop
je
push
and
pop
xlat
push
jge
xlat
push
pop
sub
push
xlat
mov
les
int3
sub
jnp
inc
stos
ins
jae
dec
(bad)
dec
repz
and
jg
push
adc
mov
(bad)
loope
sbb
push
cmp
jmp
xor
sub
push
push
int
push
fcom
fdiv
xor
adc
and
rcl
jl
fs
movs
gs
sbb
in
mov
jmp
sti
mov
mov
cld
pop
into
sahf
sbb
scas
push
je
mov
inc
or
out
jecxz
cmp
nop
dec
jg
inc
movs
mov
inc
(bad)
fiadd
xor
test
inc
mov
bnd
dec
dec
mov
scas
xchg
in
cmps
xor
xor
(bad)
xchg
mov
jb
shl
iret
in
bound
sbb
adc
mov
xchg
sub
ret
arpl
mov
jmp
inc
in
loop
mov
repz
rep
inc
and
aaa
add
rep
cmp
retf
mov
pop
icebp
fsubp
sbb
js
out
bound
adc
cld
add
sub
push
push
sahf
dec
or
inc
outs
and
xor
pop
sbb
movs
addr16
ja
jle
add
into
rol
xchg
push
lea
xchg
out
xchg
imul
sbb
add
shl
or
adc
into
cmp
ds
mov
pop
mov
fwait
(bad)
jecxz
or
xor
icebp
pop
call
test
mov
repz
mov
divps
add
adc
movs
mov
mov
jnp
mov
inc
xor
aad
pop
ja
pcmpgtd
pop
retf
fisttp
add
cmp
gs
jecxz
or
mov
mov
scas
test
mov
cs
xchg
call
lea
cs
popa
mov
sub
inc
pop
movs
fwait
adc
mov
loopne
fmul
jl
pop
and
lahf
xor
test
dec
push
sti
loope
jne
and
mov
sbb
and
ss
popf
jnp
mov
in
fbld
(bad)
rcl
mov
hlt
xchg
mov
out
imul
aaa
inc
push
mov
mov
fisub
add
daa
lods
push
sbb
or
and
mov
les
jge
and
addr16
shl
lods
fld
scas
(bad)
int3
test
icebp
iret
and
dec
and
push
mov
out
inc
movs
repz
movs
imul
inc
movs
repz
imul
test
inc
out
add
rep
add
call
gs
or
add
push
push
(bad)
aam
fs
int
hlt
out
pusha
ins
mov
test
xchg
int
movups
mov
aad
(bad)
adc
xor
jmp
inc
push
aad
mov
pop
pop
xchg
mov
pop
inc
mov
pop
das
jge
scas
pusha
sbb
jg
xchg
ret
jl
push
popf
cmp
xor
and
scas
cmp
int
hlt
jo
mov
call
fld
inc
xor
sub
sub
pop
or
out
inc
push
in
xor
cli
add
iret
aad
fnstsw
aaa
cmps
xchg
mov
es
xchg
loopne
fcmove
lods
out
lods
lock
mov
test
bound
dec
jb
test
pusha
(bad)
sub
cli
dec
cmc
pop
addr16
mov
out
dec
ja
cmp
and
lods
fnstcw
dec
retf
jp
adc
adc
(bad)
mov
xchg
xchg
or
and
int
push
popf
pop
pop
inc
movmskps
mov
jmp
jp
fwait
pop
pop
cmp
xchg
dec
sub
fnstenv
ret
ja
std
sbb
mov
repz
xchg
xchg
xor
movs
sbb
cmp
or
xor
dec
sar
ror
adc
loop
shl
sbb
mov
sub
inc
mov
pushf
cmps
gs
jmp
fistp
add
sub
sbb
and
test
cmp
ja
lock
fimul
ror
or
adc
push
js
outs
or
daa
js
ret
xchg
jbe
retf
lahf
sub
inc
adc
outs
hlt
sbb
jae
(bad)
addr16
inc
hlt
rcr
adc
dec
sub
inc
xor
mov
jl
xchg
cmp
je
ds
push
and
(bad)
fmul
aaa
xchg
add
sbb
mov
loopne
prefetch
and
and
add
mov
in
dec
loopne
out
test
out
inc
test
jmp
repz
add
xor
ret
and
adc
inc
mov
repz
cmps
in
js
or
scas
and
pop
inc
addr16
and
iret
lods
sub
and
jae
jns
cmc
dec
mov
push
dec
cmp
das
lea
mov
sbb
les
mov
mov
icebp
or
adc
test
mov
push
mov
jl
ret
and
test
ror
mov
add
jo
mov
pop
push
pop
dec
mov
jmp
out
pop
addr16
xor
mov
mov
out
mov
xor
mov
sbb
jmp
pop
test
mov
and
cmp
and
push
bound
cmp
stos
out
mov
mov
stos
fist
jecxz
ja
jbe
xor
push
add
cwde
ror
rcl
aad
jbe
mov
sub
fdiv
popa
hlt
popf
push
arpl
and
(bad)
out
in
mov
mov
js
mov
adc
pop
cmp
add
mov
mov
or
xchg
mov
les
iret
sub
push
mov
jmp
ss
inc
imul
mov
add
cli
jns
lahf
mov
pop
mov
push
lock
sbb
fwait
cmp
adc
mov
sbb
iret
(bad)
retf
cli
sub
pusha
jge
addr16
leave
jo
enter
(bad)
test
cmp
push
imul
xor
pop
push
add
or
sbb
mov
jns
sbb
dec
push
xor
retf
mov
stos
push
pop
add
xchg
jmp
imul
and
xchg
and
nop
test
inc
jmp
push
out
sbb
cmp
mov
sbb
jmp
pop
jge
bound
pop
sub
dec
dec
mov
ret
fst
daa
push
adc
push
mov
dec
add
mov
push
and
scas
dec
cmp
nop
add
fcom
xor
std
xchg
and
pop
loop
out
and
cli
sbb
test
out
fisub
int
test
ficom
ss
ja
retf
loopne
push
retf
aam
fsubr
or
cwde
mov
scas
mov
jmp
push
aam
push
in
out
retf
mov
mov
push
mov
xchg
scas
ror
cmp
lods
shl
dec
test
sbb
pop
test
cdq
sbb
sbb
pushf
or
mov
ss
jmp
pushf
ins
ret
push
inc
add
fsubr
and
movs
pusha
mov
popa
out
mov
(bad)
out
mov
popa
sbb
push
ins
mov
and
ret
rcl
popa
jg
cmp
jbe
or
into
xor
xchg
movs
fsubr
shr
icebp
xor
sub
(bad)
out
xor
xor
movs
jge
add
inc
aas
packuswb
pop
mov
sti
cmp
jbe
fdiv
std
into
jmp
push
mov
push
in
inc
push
mov
pop
scas
retf
test
(bad)
ret
inc
int
mov
ret
mov
jp
sbb
push
outs
(bad)
movs
push
lea
fsubr
mov
popa
or
repz
pop
call
int
push
sub
jmp
les
cmps
jbe
outs
je
mov
cmp
jne
mov
dec
shr
mov
inc
(bad)
in
adc
push
xchg
mov
(bad)
shl
inc
inc
dec
cmps
stos
outs
jnp
repnz
dec
lds
cmp
lock
push
sub
shl
pop
sti
enter
rcl
cmp
cmp
cmp
inc
stc
retf
cld
ja
jne
retf
shr
jl
add
fdiv
jle
mov
pop
call
jle
xchg
add
sbb
dec
mov
cmp
inc
pop
push
inc
cmp
ins
mov
shr
adc
dec
scas
sub
xchg
mov
xchg
lock
and
rcr
pushw
or
inc
mov
ds
mov
mov
lock
push
mov
cmps
enter
xlat
add
scas
clc
out
adc
cmp
pop
jnp
stos
imul
int3
cmps
sbb
mov
aaa
sti
mov
lock
js
mov
add
test
imul
push
pop
es
mov
stc
ins
les
pop
push
loopne
dec
cli
dec
xchg
les
sti
repz
retf
arpl
in
mov
lods
icebp
and
mov
dec
xor
imul
loope
not
lods
imul
out
or
inc
adc
mov
adc
hlt
sbb
push
fiadd
(bad)
push
dec
push
xchg
movs
xchg
add
mov
inc
mov
call
sub
icebp
jbe
jbe
pop
adc
mov
sbb
mov
sub
or
push
mov
cdq
xchg
mov
inc
dec
xchg
outs
xor
sub
lahf
daa
cmp
arpl
mov
enter
mov
pop
mov
arpl
sbb
retfw
inc
jbe
int3
scas
add
fcom
enter
daa
push
xor
push
ins
mov
inc
mov
stc
push
lds
fbld
inc
or
jno
jmp
sbb
mov
jmp
jnp
mov
jbe
fnstenv
and
retf
mov
cmps
sbb
cmps
ret
inc
lea
jae
push
and
adc
pop
mov
out
jmp
xlat
jmp
dec
mov
jmp
push
lods
sti
cli
push
lods
sti
(bad)
push
and
pop
mov
retf
out
fisubr
mov
jo
mov
mov
mov
fidivr
mov
mov
inc
lock
push
lods
repnz
push
mov
(bad)
pusha
test
(bad)
jo
ret
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
push
dec
repz
retf
mov
dec
or
jmp
repz
inc
movs
or
inc
shl
out
inc
lods
repz
imul
push
mov
jmp
mov
mov
out
movs
imul
inc
movs
repz
mul
push
mov
jecxz
dec
enter
movs
imul
inc
lods
mov
inc
movs
and
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
div
cmp
hlt
out
mov
movs
out
arpl
in
mov
imul
mov
(bad)
mov
outs
sub
push
inc
ins
mov
(bad)
loop
les
out
aad
jl
(bad)
sbb
out
or
sub
mov
dec
dec
imul
sti
xchg
push
pop
adc
pop
dec
shr
fnstenv
mov
daa
mov
sbb
jbe
sbb
sti
mov
rcr
out
or
adc
ins
arpl
push
xor
pop
imul
cmp
leave
aad
mov
jnp
xor
or
push
jp
push
jno
fldcw
xor
retf
das
scas
add
mov
mov
ja
sbb
mov
xor
or
inc
mov
mov
dec
inc
dec
bound
addr16
sbb
aaa
mov
out
(bad)
dec
outs
pushf
and
lods
jnp
push
mov
mov
adc
test
pop
imul
addr16
push
xor
or
mov
adc
and
mov
xchg
fdivr
mov
ss
and
stc
ret
neg
xchg
xchg
ds
cld
popa
mov
add
cmc
fistp
jmp
rcl
test
fidivr
fld
inc
loopne
jmp
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
div
mov
out
mov
imul
inc
mov
mul
dec
mov
not
repz
mov
mov
retf
hlt
out
push
movs
imul
sub
xchg
inc
lods
push
(bad)
repz
xor
gs
cmc
inc
adc
xchg
xor
neg
jb
adc
cmp
das
pusha
push
jns
retf
pop
in
bound
lea
mov
pop
ins
mov
mov
stos
inc
push
and
test
sbb
pop
imul
bound
xor
lahf
call
dec
mov
mov
mov
xlat
(bad)
in
xchg
(bad)
sub
sar
enter
stc
in
mov
xor
je
nop
imul
mov
sbb
mov
mov
fadd
push
add
push
or
xchg
sub
imul
dec
sub
inc
jp
lock
aad
xchg
cmc
cmp
cwde
push
cmp
loopne
and
inc
fcom
arpl
xchg
xlat
cmp
fiadd
cwde
xor
pop
iret
fmul
jnp
xchg
jmp
fsub
das
in
mov
cwde
ss
jns
loopne
cmp
(bad)
jl
cwde
adc
dec
jmp
stos
in
lahf
dec
push
xlat
int
ror
cmp
push
cmp
(bad)
pop
fisub
and
mul
jp
scas
mov
test
sbb
xchg
xor
jecxz
arpl
iret
xchg
pop
dec
mov
jmp
adc
and
mov
pop
cwde
loopne
sub
cmp
aas
aad
cmp
push
je
(bad)
cmp
div
jg
and
mov
shr
pop
imul
mov
pushf
js
xchg
inc
(bad)
jl
dec
jbe
sub
or
or
jecxz
cmp
and
enter
das
fld
(bad)
jmp
pop
rcl
cmp
mov
jge
movs
mov
mov
test
inc
jecxz
fld
xchg
rcr
add
pop
pop
hlt
gs
ins
xor
ins
sbb
cmovle
lods
neg
sub
fdivr
jb
sahf
dec
in
scas
inc
clc
inc
push
repnz
movs
mov
ss
or
es
pop
loope
sub
loopne
and
aaa
dec
inc
xor
sbb
std
pusha
shl
sti
add
and
mov
mov
hlt
rcl
dec
pusha
clc
rcl
ins
dec
xchg
outs
adc
fcomp
cmp
out
push
sub
loop
bound
out
jle
mov
(bad)
hlt
sbb
xchg
xchg
(bad)
mov
dec
stos
icebp
push
pop
in
jo
mov
loope
into
or
jo
mov
pop
push
xchg
or
dec
movs
sti
out
lods
sti
jmp
idiv
inc
movs
jmp
mov
adc
cmp
mov
jb
fs
pushf
out
inc
movs
sti
push
inc
pop
repz
pop
mov
xlat
push
or
aad
retf
push
cmp
dec
add
mov
rcr
cmp
movs
sti
jp
mov
hlt
and
out
xor
outs
outs
out
neg
addr16
inc
leave
mov
(bad)
fbstp
sbb
inc
push
retf
cmp
aam
ins
push
pushf
sub
repz
cwde
pop
ss
bound
lods
mov
fcmovnbe
add
jb
repnz
pop
fwait
jmp
ret
add
adc
daa
shl
xor
push
mov
outs
(bad)
cmp
add
sbb
rol
jmp
retf
fsubrp
lahf
xor
mov
(bad)
adc
dec
les
xchg
dec
mov
test
lods
icebp
rol
adc
(bad)
jecxz
jnp
lock
es
xor
fs
pop
dec
cld
cwde
retf
pusha
popa
idiv
and
imul
cmps
out
sub
xor
test
xchg
test
fwait
(bad)
xlat
add
mov
mov
push
cmp
cld
jmp
dec
in
pop
mov
sbb
fst
mov
push
out
out
stc
pop
je
mov
cs
mov
nop
xchg
mov
xor
out
cmp
dec
sbb
lds
add
imul
pop
repnz
out
inc
sub
mov
mov
movs
cli
bound
in
pop
stos
jmp
clc
enter
call
push
or
mov
mov
lea
inc
and
(bad)
(bad)
aaa
jmp
sub
fnstenv
cmp
out
pop
mov
pop
sub
mov
into
sub
dec
call
add
or
dec
movs
mov
fwait
stc
inc
mov
jmp
repz
inc
test
jmp
imul
sub
mov
leave
sub
inc
mov
repz
mov
xor
adc
mov
popf
xor
fwait
mov
mov
pop
mov
inc
fadd
or
push
pop
sbb
inc
mov
cmp
mov
add
mov
leave
enter
lods
out
repnz
cmc
sar
xor
xor
push
cmps
mov
fcom
nop
lods
(bad)
jnp
lahf
out
sub
lea
fst
lahf
aam
and
stc
addr16
and
aaa
or
xchg
loope
outs
std
ficom
movs
popf
push
and
in
pop
pop
jmp
or
mov
mov
aam
adc
jnp
sbb
inc
stos
push
ds
push
sbb
outs
pop
out
push
xchg
push
sbb
mov
shl
sahf
aam
push
push
dec
outs
adc
movs
cmp
sub
data16
pusha
stos
pop
push
sbb
in
ret
and
inc
loop
mov
xchg
xchg
lea
add
jae
sub
dec
adc
push
fst
and
sbb
xchg
repz
jbe
xchg
aam
cmp
pop
icebp
sbb
mov
mov
mov
out
dec
mov
sti
(bad)
pusha
lods
shr
inc
mov
jmp
adc
jae
add
aas
outs
xor
jns
mov
addr16
add
scas
dec
arpl
arpl
lods
jbe
mov
enter
movs
imul
xor
or
mov
or
xor
push
adc
outs
push
cmps
je
out
adc
std
ins
cld
cmps
cld
std
aas
mov
adc
mov
adc
mov
cdq
xchg
loope
sar
jp
data16
mov
push
jo
or
push
xor
inc
jmp
imul
push
ror
stc
ja
jbe
into
ficomp
sbb
rcr
mov
sub
int
jle
les
mov
add
cmc
ins
push
xchg
cwde
repz
daa
iret
popf
shr
cmp
(bad)
sub
xchg
test
(bad)
pop
xchg
sbb
fistp
addr16
sub
imul
dec
and
or
inc
jnp
mov
push
mov
jb
lahf
cli
sbb
mov
cmp
loope
aam
(bad)
aaa
jb
dec
push
enter
pop
ins
mov
cmp
push
sahf
test
call
inc
inc
xchg
inc
sbb
push
and
pop
hlt
sbb
push
pop
les
loope
ror
mov
in
cmps
dec
pop
inc
scas
pop
clc
ret
push
adc
in
push
repz
mov
fs
jnp
inc
pushf
and
mov
in
mov
arpl
push
and
dec
mov
icebp
icebp
ja
sbb
dec
push
sub
mov
mov
or
push
scas
inc
repnz
cmp
cmp
cdq
pop
movs
mov
imul
add
stos
pop
or
sar
pop
fucom
rcl
and
or
test
stc
shl
(bad)
mov
and
mov
mov
mov
dec
and
mov
lahf
movs
rol
int
push
arpl
xor
repz
jns
jmp
loop
js
add
pop
aas
jns
stc
idiv
hlt
gs
in
div
sub
aam
sahf
sbb
sub
push
sub
shl
addr16
mov
and
xor
mov
or
sbb
fadd
ins
pop
dec
das
inc
aaa
push
sbb
mov
movs
popf
mov
mov
shr
xchg
xchg
jno
pop
sbb
xor
(bad)
jg
ja
adc
inc
xchg
loop
gs
aad
fwait
or
ds
jecxz
sub
mov
lods
enter
add
cli
inc
int3
and
dec
inc
and
fs
(bad)
adc
push
rcl
sub
ss
sbb
adc
sbb
cmp
nop
cmp
jo
frstor
and
jbe
repz
adc
ja
gs
stos
push
inc
test
data16
pop
jnp
jge
shl
pop
cwde
push
sbb
mov
enter
or
out
jl
sti
mov
stos
mov
sbb
cmp
shl
lock
xchg
dec
mov
adc
das
rcl
neg
test
jle
mov
jl
dec
jbe
pop
call
mov
cmp
scas
(bad)
mov
mov
call
ror
mov
dec
or
mov
adc
jbe
iret
fimul
push
or
adc
cmps
cmp
lods
pop
mov
movs
pop
xchg
inc
jnp
in
xor
div
jne
cmp
aad
sub
loop
aas
mov
adc
leave
or
popf
cmp
cdq
jge
mov
(bad)
jg
fidiv
mov
xchg
aam
js
lods
dec
retf
mov
dec
xor
add
rol
ins
mov
lea
hlt
and
ds
xchg
mov
lock
outs
xchg
push
(bad)
pop
fisubr
and
adc
sub
call
adc
sub
xlat
popa
aaa
push
pushf
pop
sub
push
xchg
push
ficom
mov
sar
nop
mov
imul
add
and
push
movs
shr
add
dec
dec
loopne
das
or
and
mov
ret
pop
hlt
push
out
pop
hlt
or
or
outs
mov
sub
mov
inc
push
add
(bad)
sbb
adc
ret
jg
push
push
adc
jg
pushf
call
test
in
or
xchg
mov
push
adc
dec
dec
cmp
mov
sub
(bad)
sbb
jge
(bad)
pop
sti
mov
sbb
mov
mov
rcr
fs
jmp
mov
inc
and
(bad)
fistp
pop
(bad)
popa
idiv
push
pop
into
test
aaa
daa
push
mov
idiv
bound
out
sub
pop
cmp
popa
mov
and
es
outs
call
adc
or
loopne
fldenv
xchg
ret
push
std
sbb
aad
inc
test
xchg
sub
inc
adc
lds
or
mov
(bad)
adc
test
push
push
scas
retf
jmp
repnz
adc
pusha
cmp
adc
and
or
les
cmps
mov
outs
retf
cdq
inc
dec
call
stos
test
movs
sahf
popf
sub
out
sub
jno
push
adc
dec
ins
or
ss
sbb
aas
and
mov
cmps
push
sar
sub
jecxz
retf
pop
test
ret
jp
in
jns
imul
pop
jl
sub
shl
cld
bound
xor
sbb
pop
out
mov
inc
mov
cmp
jmp
shl
dec
mov
ficomp
xchg
je
out
jmp
iret
jo
(bad)
push
dec
cmp
ret
xchg
movs
xchg
ret
das
and
cmp
sub
xchg
sub
xchg
std
or
xchg
xor
jmp
(bad)
cmp
jb
jnp
hlt
push
mov
or
mov
dec
mov
jbe
jl
mov
pop
dec
or
paddusb
popa
sub
fsubr
ja
dec
mov
ja
jl
loop
add
int
hlt
out
nop
xchg
out
sub
repz
push
xor
hlt
adc
mov
sub
sbb
fisttp
pop
out
mov
test
mov
pop
test
jns
movs
outs
mov
jbe
cwde
sub
gs
jp
xor
daa
jo
dec
icebp
pop
add
push
push
cmps
cmp
jecxz
push
push
inc
addr16
push
inc
mov
fcmovne
push
push
or
mov
xor
sahf
add
pushf
jmp
enter
fst
stos
jecxz
int
out
(bad)
cmp
pop
popa
movs
out
mov
sub
mov
test
(bad)
fwait
xlat
pop
and
add
mov
jge
jbe
pop
dec
jge
dec
pop
add
inc
pop
cmp
mov
aaa
cs
leave
add
inc
sti
jge
mov
in
rol
out
cld
add
sub
cmp
pusha
std
ds
xchg
stos
xor
fisub
pusha
add
mov
(bad)
sub
push
jmp
call
and
(bad)
fnstsw
jp
xchg
xor
jle
xchg
push
mov
ins
or
and
rcr
int3
(bad)
and
test
sbb
mov
jne
mov
in
mov
out
jmp
adc
jne
popf
cmp
inc
loop
inc
rol
pop
xchg
repz
rcr
out
sbb
pop
push
mov
push
loop
mov
(bad)
out
inc
mov
jmp
jae
and
mov
test
hlt
add
rep
mov
mov
lods
push
mov
mov
sbb
enter
add
mov
shr
push
dec
dec
pop
push
dec
out
jb
xor
jmp
xchg
pop
adc
cmp
or
loopne
outs
bound
adc
sub
mov
stc
ss
pop
std
add
jnp
ror
push
xchg
add
jecxz
xchg
into
iret
shl
dec
xchg
pushf
es
sub
jne
lahf
jae
movs
xchg
cmp
add
jnp
pop
dec
xor
sub
test
loopne
mov
pop
retf
std
mov
inc
cmc
outs
icebp
jns
mov
jb
sti
and
jne
adc
adc
inc
ret
and
ins
daa
cs
dec
retf
stc
jb
aaa
inc
jl
mov
or
call
jno
(bad)
pop
ins
mov
inc
and
bound
lea
iret
adc
jne
fimul
xchg
mov
(bad)
sub
aas
ins
and
inc
push
or
aad
ror
sub
xchg
fild
dec
cmps
bound
cmps
addr16
outs
rol
ret
leave
xchg
fwait
mov
jmp
xor
lds
xchg
dec
nop
inc
and
xchg
xlat
cmp
adc
es
(bad)
pand
inc
movaps
(bad)
aad
dec
xchg
icebp
pop
dec
xlat
cwde
enter
dec
cmps
arpl
stos
xchg
mov
add
lods
and
push
lods
jl
inc
fdivr
pop
mov
test
xchg
add
or
jl
mov
out
cmp
sbb
cmps
das
cli
cmp
or
mov
jmp
or
sub
jb
mov
add
push
sub
cmp
cmp
mov
xchg
inc
push
aam
in
sub
test
jg
std
mov
mov
movs
mov
int
or
pop
repz
cs
arpl
loopne
pop
sub
scas
aam
ss
sbb
jge
adc
dec
bound
(bad)
call
sub
fidiv
icebp
mov
mov
jle
(bad)
imul
push
jmp
or
leave
fwait
mov
dec
adc
in
lock
xchg
mov
fld1
ror
add
or
ret
cwde
repnz
bound
adc
inc
fild
cli
and
xchg
(bad)
mov
cmc
daa
and
ret
cmps
xchg
into
retf
lock
bnd
xor
xor
in
les
jg
test
test
lds
sbb
(bad)
cmp
dec
xor
sti
add
mov
cmps
(bad)
test
pop
pop
push
fisttp
imul
int3
cli
sbb
stc
(bad)
dec
lods
mov
xchg
data16
dec
mov
and
repz
xchg
aas
cdq
mov
jmp
xchg
mov
popa
pop
xchg
sub
js
repz
mov
(bad)
cmp
dec
in
xchg
(bad)
daa
mov
int
ss
lods
in
call
lahf
cs
sub
lds
out
nop
ss
mov
call
rcr
mov
xchg
xor
sbb
call
sub
and
dec
sti
jg
or
cmp
cmp
dec
inc
lock
shr
xchg
jbe
fimul
sbb
stos
(bad)
push
nop
push
dec
xor
and
xchg
mov
cmp
pop
cmps
jl
adc
jmp
movs
xrelease
iret
call
xchg
mov
out
sbb
cwde
and
mov
and
fstp
ror
rol
or
repnz
jo
add
jge
or
xchg
adc
push
arpl
cmps
xor
mov
imul
(bad)
js
or
xchg
aam
pop
jecxz
jbe
jl
lods
arpl
dec
xchg
cmp
cmp
imul
outs
daa
nop
mov
cmps
jl
ret
stc
in
mov
xor
fsub
jp
inc
stc
mov
and
outs
dec
mov
imul
repz
pop
pop
push
jae
stos
loop
add
and
mov
call
not
repz
pop
mov
xor
mov
inc
sbb
xchg
(bad)
(bad)
mov
iret
sbb
push
inc
push
jg
mov
loopne
test
leave
jle
in
push
sbb
pop
das
pop
pusha
out
mov
(bad)
jmp
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
xlat
stos
pusha
mov
mov
mov
mov
dec
int3
mov
gs
push
and
in
test
cli
shl
in
sti
mov
jle
retf
sub
xchg
(bad)
dec
push
or
cmp
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
imul
inc
mov
not
push
mov
addr16
mov
sti
jmp
imul
mov
mov
inc
data16
ret
out
jmp
inc
movs
sti
add
xor
mov
mov
push
mov
dec
pushf
xlat
mov
movs
jge
popa
shl
sar
pop
out
in
into
neg
imul
jp
xchg
mov
data16
and
int3
(bad)
jns
aaa
out
jl
retf
aad
jg
pusha
in
stos
pusha
nop
or
sbb
push
lds
dec
loope
or
mov
push
data16
jno
sti
pop
cwde
adc
iret
mov
pop
clc
push
retf
mov
popa
dec
jle
fistp
and
lea
ret
stc
iret
jnp
in
shl
mov
fdivr
mov
inc
imul
jl
add
dec
pop
inc
adc
icebp
jae
push
or
das
push
adc
pop
call
jae
fwait
jmp
jne
ret
repz
out
and
add
jo
xor
add
nop
push
clc
mov
add
stc
pop
mov
mov
daa
mov
lahf
inc
icebp
ja
repz
inc
je
pop
push
int
aas
push
xchg
les
(bad)
push
ficom
sbb
repnz
scas
inc
mov
imul
dec
lods
repz
imul
movs
mov
add
ja
and
rep
mov
or
arpl
retf
test
inc
adc
or
es
or
lea
or
pop
jo
add
xchg
jne
call
mov
iret
mov
mov
mov
xchg
test
mov
dec
xchg
push
push
pop
in
arpl
pop
call
jno
or
dec
hlt
cmp
and
cmp
test
or
in
aam
add
int3
leave
pop
xor
cmp
lahf
or
xlat
add
jg
mov
cmc
xchg
fld
imul
iret
jns
jge
repz
arpl
test
in
test
fisub
rol
dec
cld
(bad)
push
xor
arpl
int3
jo
aas
and
and
cmps
jg
setne
cs
push
xor
les
mov
pusha
stos
inc
mov
mul
inc
lods
imul
inc
mov
jmp
imul
movs
mov
add
xor
mov
enter
movs
imul
and
or
int3
and
call
mov
push
jno
add
lods
cmp
inc
(bad)
pop
addr16
repz
icebp
fistp
mov
mov
lds
sub
mov
fxch
push
lock
fmul
pop
mov
bound
jmp
mov
sbb
ror
ja
call
mov
aam
and
mov
out
push
xchg
cmps
fidivr
jmp
mov
fld
push
cli
push
jmp
mov
xchg
mov
mov
dec
dec
les
cmps
xlat
bound
jle
mov
jl
stc
sub
xchg
and
aad
inc
aaa
test
add
mov
(bad)
push
out
cmp
sub
movs
cmps
jb
sti
out
push
(bad)
out
mov
ror
xchg
test
mov
inc
pop
out
sbb
push
mov
push
mul
out
cli
outs
dec
bound
adc
mov
in
cmps
mov
addr16
pop
or
ss
xchg
sbb
sbb
fst
(bad)
lahf
leave
mov
call
pop
div
in
jno
or
xchg
add
xor
popf
mov
add
stc
sub
inc
pop
lea
sbb
adc
and
jno
mov
xor
jnp
inc
add
cmc
loope
dec
sbb
retf
mov
stos
sti
add
and
sti
jmp
sub
add
data16
push
out
push
test
jg
movs
ja
inc
xor
dec
or
and
lods
jno
(bad)
in
inc
mov
ins
outs
jne
shl
test
movs
je
outs
ja
icebp
sahf
jb
xor
xor
push
push
pop
push
add
jmp
push
jae
lods
imul
daa
movs
cmp
and
jp
aaa
xchg
outs
cmps
mov
nop
and
pop
ds
out
xchg
test
sub
(bad)
and
xchg
ins
sti
adc
retf
iret
mov
enter
xor
push
mov
mov
fist
daa
or
xchg
mov
and
loopne
das
scas
lock
xor
movs
dec
sbb
out
stos
and
out
shl
not
push
lea
adc
mov
call
dec
adc
ins
cdq
or
test
mov
popf
sub
repz
int3
push
adc
(bad)
(bad)
dec
dec
popa
bound
fidiv
pop
push
cmp
and
push
in
lahf
add
dec
add
add
sar
call
push
addr16
addr16
adc
dec
clc
jmp
ins
add
gs
hlt
mov
(bad)
jl
retf
dec
mov
aam
ror
and
mov
pop
mov
sti
jae
scas
jb
iret
mov
inc
sub
pop
icebp
push
call
push
arpl
(bad)
cli
adc
pop
or
add
ja
push
adc
imul
out
cmps
mov
or
xlat
call
xchg
clc
popf
ins
push
pop
cmp
test
and
jbe
int3
push
or
sbb
mov
xchg
push
mov
fcomp
sbb
sub
jne
adc
pop
repz
sbb
mov
cmp
jno
nop
jne
mov
iret
aam
nop
sbb
fcom
pop
sbb
xor
mov
inc
lock
cmps
adc
ja
ror
sar
inc
fcmove
sub
mov
jne
gs
pop
jmp
or
xlat
scas
inc
add
adc
(bad)
xchg
popf
popa
leave
add
out
jb
ja
mov
mov
mov
pop
leave
imul
retf
daa
pushf
xchg
xchg
int3
mov
test
fwait
loopne
pop
dec
int3
les
rcr
(bad)
in
xchg
add
ins
pop
jle
mov
mov
inc
repz
and
in
inc
das
xchg
jbe
cmps
dec
sbb
pop
xor
retf
sbb
outs
out
ins
mov
shr
adc
mov
call
xor
es
loope
(bad)
push
rcl
mov
mov
mov
stos
xchg
mov
pop
jecxz
mov
test
cmp
adc
(bad)
mov
in
lds
ins
out
int3
(bad)
repnz
dec
shr
cmp
in
fstp
dec
or
enter
mov
and
cmp
int
xchg
icebp
dec
xchg
add
and
movs
es
das
test
dec
mov
pusha
out
fadd
dec
or
jo
sbb
popa
mov
jae
cmps
adc
inc
sub
and
out
popf
sub
xor
imul
add
iret
jle
iret
(bad)
mov
or
mov
retf
out
push
xor
mov
addr16
int3
inc
scas
or
sbb
scas
cmps
test
stc
repnz
sub
loopne
mov
cmps
ins
mov
jmp
sbb
jmp
pop
sub
add
aad
mov
xchg
stos
in
mov
mov
mov
imul
movs
cmp
gs
sbb
mov
mov
ror
fwait
xlat
dec
jle
xchg
repz
outs
hlt
aam
aad
movs
cli
dec
jle
xor
mov
xchg
mov
(bad)
or
inc
mov
repz
test
lods
mul
dec
test
out
lods
sti
out
mov
(bad)
push
mov
(bad)
ins
mov
repnz
ffreep
push
xchg
iret
scas
jl
iret
stos
sbb
(bad)
je
mov
mov
sub
cmps
out
dec
mov
out
push
mov
fisubr
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
adc
cmps
mov
fs
call
inc
lods
repz
dec
test
push
push
out
jmp
out
inc
mov
imul
inc
mov
jecxz
movs
sti
jmp
dec
movs
repz
inc
movs
repz
imul
dec
mov
sti
add
sti
out
test
out
aam
not
dec
les
jmp
ja
inc
adc
leave
mov
call
fsubr
jns
jmp
mov
push
mov
pusha
jne
popf
imul
jmp
ins
ja
and
mov
inc
adc
sbb
mov
mov
mov
xor
dec
mov
push
dec
and
arpl
sub
pop
inc
mov
sub
mov
cli
(bad)
pop
push
adc
cmp
adc
pop
add
add
jl
sbb
mov
and
or
clc
call
mov
pop
hlt
call
cwde
(bad)
repz
mov
dec
push
mov
popa
les
push
pop
mov
add
and
mul
ror
nop
idiv
mov
int
mov
cmp
sbb
xor
fwait
popf
movs
out
mov
pop
sub
in
adc
and
fninit
pop
cli
xchg
mov
mov
movs
sbb
js
jno
rcl
fucomp
mov
addr16
data16
gs
lods
sbb
sub
pop
sub
cmp
add
inc
inc
inc
mov
mov
sbb
fsub
inc
gs
cmp
test
xor
sub
sar
scas
inc
xor
and
or
sar
and
jmp
jne
sbb
dec
sbb
(bad)
sbb
clc
bound
push
fistp
add
xchg
rcr
leave
ja
mov
sub
lods
mov
shl
adc
adc
xchg
sbb
movs
lock
jb
fcmovnbe
aad
gs
inc
ficomp
dec
jo
xchg
xchg
cmps
mov
out
adc
mov
(bad)
nop
pop
sub
mov
inc
dec
inc
xchg
jb
arpl
push
lock
mov
call
push
add
mov
jb
mov
xchg
mov
push
xchg
push
in
pushf
into
mul
jmp
add
add
cmc
push
into
fisubr
jmp
scas
dec
add
hlt
loop
mov
out
inc
lods
repz
jecxz
or
(bad)
jmp
mov
pop
das
jnp
out
inc
mov
repz
repnz
fidiv
inc
sbb
mov
pop
push
dec
xchg
adc
add
adc
xchg
sub
ds
jg
push
bound
dec
cwde
push
pop
mov
pop
mov
das
mov
cmc
mov
imul
mov
loop
xchg
test
lods
xchg
jno
call
push
add
xor
shl
inc
gs
push
cdq
dec
push
cld
push
jp
jno
xlat
aad
jecxz
stos
iret
push
arpl
push
es
stos
add
pop
xchg
cli
jae
popa
mov
retf
mov
repnz
cdq
or
(bad)
stos
add
(bad)
mov
fbld
ror
arpl
bound
ja
jns
sahf
or
iret
rcr
push
dec
movsx
push
ret
sub
pop
sub
scas
mov
in
cdq
(bad)
jns
sbb
inc
jns
stc
cmp
nop
adc
inc
or
fdiv
lods
shr
jecxz
push
mov
in
fwait
aam
sbb
and
push
out
mov
mov
push
add
mov
bound
call
and
xor
lock
mov
loopne
xchg
xor
push
mov
outs
lea
cs
test
icebp
cli
mov
sub
xchg
xor
into
icebp
js
mov
je
adc
xor
das
dec
push
in
icebp
mov
retf
retf
cmp
push
jecxz
aaa
cdq
cld
or
mov
pushf
pop
retf
cwde
push
jo
adc
mov
push
dec
leave
rcl
xchg
dec
mov
popa
jns
call
popf
or
daa
dec
ins
scas
push
jno
sbb
mov
sbb
rcr
jns
rcr
inc
cmp
cli
mov
inc
lods
and
xchg
xchg
sbb
scas
inc
bswap
mov
inc
mov
xor
loop
pop
mov
out
(bad)
(bad)
mov
or
pusha
aas
xchg
loope
and
cmp
jns
aaa
dec
out
or
test
stos
sbb
(bad)
jns
pop
jp
or
sub
adc
mov
int
dec
cmp
dec
sbb
or
ins
(bad)
repnz
inc
pushf
daa
sub
mov
push
imul
dec
and
jb
leave
mov
int
test
xlat
xchg
dec
pop
xchg
sub
jmp
out
inc
test
jmp
mul
push
in
mov
or
out
sbb
gs
fs
pushf
out
inc
movs
sti
sub
ins
or
mov
mov
stos
inc
(bad)
cmps
das
or
in
(bad)
cmp
jmp
xor
or
sub
sbb
(bad)
movs
fisttp
sbb
mov
jae
jl
or
and
bound
(bad)
paddd
push
test
sahf
sub
mov
or
fidiv
add
aas
jne
stc
inc
or
jmp
jmp
push
movs
sti
jmp
imul
push
fs
stos
test
outs
mov
enter
test
inc
adc
idiv
iret
add
mov
cmp
imul
inc
dec
(bad)
sbb
and
aad
sbb
or
pop
adc
push
jg
xor
inc
sub
push
push
test
xor
cli
scas
retf
loop
hlt
sub
xor
jo
imul
out
in
into
lahf
push
or
rcl
lahf
shl
mov
mov
xchg
aam
lds
sbb
xchg
out
dec
jge
inc
fdiv
or
stos
leave
pushf
mov
in
imul
in
inc
xchg
push
sub
jne
pop
inc
aaa
or
stos
lahf
sbb
jge
fist
add
or
gs
(bad)
in
cmc
leave
addr16
xchg
add
pop
mov
test
sar
or
test
or
clc
mov
mov
cmp
mov
jmp
aaa
cmp
dec
pop
call
imul
sub
push
(bad)
fnstenv
xchg
mov
pop
dec
test
out
sub
retf
aad
add
cmp
nop
jmp
xor
aaa
mov
fstp
rcl
mov
sbb
mov
mov
popa
inc
popf
ficom
cwde
xor
(bad)
jmp
je
call
movsx
jb
(bad)
out
call
xor
shl
adc
(bad)
or
and
lea
cmps
scas
bswap
push
test
cmps
mov
adc
dec
push
or
and
das
jne
popf
loopne
into
add
lahf
xor
jno
add
std
and
pop
arpl
cmps
ret
lods
imul
sbb
xchg
out
add
aam
ins
ds
mov
stos
enter
push
adc
sub
call
cmp
or
mov
es
out
div
cmp
jmp
xchg
push
fisub
sub
leave
popa
and
mov
mov
int3
sbb
push
or
jnp
mov
mov
add
sub
pop
bound
mov
pop
mov
jge
ret
sub
mov
dec
rol
dec
test
call
dec
pop
ds
mov
pusha
mov
js
and
push
enter
mov
gs
movs
mov
repnz
fs
jecxz
xchg
lea
call
jp
sbb
sub
xchg
dec
or
pop
push
pop
or
push
movs
sti
(bad)
je
jecxz
inc
mov
idiv
inc
test
mov
int3
and
outs
and
in
cmp
outs
inc
stos
mov
lods
ret
stos
xor
mov
or
inc
xor
lods
mov
inc
pop
shl
aad
cdq
mov
adc
sbb
fdiv
add
ja
(bad)
rol
add
ficom
in
pop
lods
scas
ror
mov
out
adc
neg
jb
pop
(bad)
je
jmp
mov
rcl
loopne
xor
sub
lods
pop
mov
es
jl
push
jmp
int
cmc
mov
xchg
mov
test
loopne
test
nop
jmp
jl
jmp
cmp
in
inc
or
dec
xor
pop
repnz
popf
sub
add
fs
sbb
lods
fsubr
js
aam
das
add
xor
push
int
rcr
cmps
adc
push
sbb
xor
jbe
push
or
adc
mov
iret
xor
mov
imul
cmp
xchg
leave
imul
ja
out
dec
call
inc
pop
jl
imul
or
addr16
sbb
push
dec
sub
push
fisub
fdivr
fwait
enter
sub
xchg
(bad)
push
jl
imul
adc
jmp
add
push
pop
mov
ins
jg
push
sub
repz
mov
stos
pop
mov
sub
xor
jle
push
dec
ror
mov
(bad)
push
mov
push
sti
xor
push
in
xor
xchg
icebp
mov
and
div
pop
das
aaa
ror
pop
les
outs
and
inc
retf
dec
mov
repz
cwde
adc
add
sub
cmp
sbb
mov
pop
cmp
mov
jecxz
add
clc
mov
cwde
ror
push
xor
push
mov
adc
retf
gs
lds
push
cmp
xchg
clc
mov
movs
out
movs
mov
cmc
dec
push
imul
jns
inc
cmps
ret
hlt
pop
xchg
test
mov
mov
mov
call
sbb
loopne
sbb
pop
gs
fsubrp
push
pop
aas
pop
inc
call
cmp
add
mov
inc
cmp
pop
mov
pop
pop
add
pop
ficomp
mov
shr
es
popf
into
push
adc
jmp
inc
jmp
push
mov
aaa
leave
push
or
inc
shl
je
jge
(bad)
scas
int
hlt
inc
movs
in
das
adc
pop
dec
rol
push
push
lock
fild
les
adc
pop
ret
fwait
imul
jp
sub
push
push
or
or
rol
cld
bnd
mov
popa
gs
je
push
add
inc
xor
aad
jmp
pop
and
inc
mov
xchg
jg
jmp
fstp
popf
icebp
cld
retf
adc
add
jp
sbb
mov
lahf
out
fisubr
jmp
sti
add
cwde
jno
scas
cld
inc
adc
dec
outs
call
jbe
sub
add
and
call
jl
aas
mov
ficom
cmp
lock
loop
inc
cmp
addr16
fst
dec
xlat
add
push
stos
out
push
sbb
scas
mov
test
ret
or
dec
ret
cdq
or
shl
call
mov
cwde
loope
(bad)
into
repnz
popa
test
(bad)
cdq
arpl
cld
add
imul
sbb
sub
push
add
pop
push
mov
mov
pop
jbe
pop
stc
xchg
or
mov
mov
adc
mov
test
int3
and
shl
mov
and
cmc
les
retf
or
mov
sub
fisub
cld
or
sub
push
push
xor
sbb
test
cmp
jno
mov
sti
and
je
xchg
sub
cmp
pop
not
lods
in
adc
sub
fist
or
rol
nop
icebp
cmp
cmp
dec
xor
lods
or
mov
(bad)
dec
push
mov
fsubr
jp
pop
or
sub
or
stos
cld
cmc
pop
adc
xor
ja
and
cdq
push
fcomp
int
jnp
gs
je
test
lods
xchg
xchg
aad
in
loop
inc
adc
mov
cmps
and
(bad)
mov
mov
mov
adc
int3
jmp
xlat
int
ror
sub
cmps
inc
std
mov
adc
inc
ror
scas
sti
lods
lea
sbb
or
and
jae
jbe
mov
in
inc
pusha
or
(bad)
sbb
xchg
cmp
inc
and
pop
adc
push
inc
sub
pusha
movups
mov
mov
xor
adc
xchg
xchg
or
pcmpeqb
inc
or
mov
mov
repz
lds
adc
ins
inc
dec
sub
adc
loop
pop
cmp
add
mov
pop
cs
js
sbb
push
ins
inc
ficomp
xor
movs
outs
add
loop
in
lock
fisub
lock
hlt
aam
jbe
out
inc
cmp
or
dec
sahf
arpl
aas
popa
clc
call
xor
sub
mov
sar
inc
xchg
mov
lods
clc
clc
imul
xor
gs
mov
sub
cli
arpl
and
repnz
sbb
mov
fdiv
hlt
idiv
xor
nop
or
mov
mov
rcr
mov
stc
pop
aam
jge
bound
rol
jo
in
adc
mov
mov
cdq
ret
inc
cvttps2pi
sub
(bad)
enter
cli
leave
and
jno
fild
addr16
inc
or
jp
inc
and
inc
test
sub
push
or
push
mov
xchg
ins
xor
sbb
clc
dec
add
or
clc
lods
inc
xor
lea
push
push
mov
in
(bad)
out
ins
cmps
pop
stos
repnz
sub
addr16
arpl
repnz
mov
and
or
cmp
sbb
fild
popa
ins
shl
mov
adc
adc
cdq
cmovbe
mov
adc
xor
push
push
mov
repnz
pop
inc
or
adc
inc
pop
or
inc
add
loop
lods
out
inc
movs
imul
inc
mov
jae
inc
out
sub
out
out
inc
popa
mov
mov
enter
movs
imul
imul
mov
sahf
fiadd
jns
add
and
popa
and
stc
xchg
adc
sbb
pop
push
hlt
fbstp
sbb
sbb
pop
xor
and
mov
fild
fild
add
cmc
xchg
jmp
shr
outs
or
or
xlat
retf
test
inc
test
xlat
mov
dec
mov
jae
xor
xor
xlat
scas
cld
mov
mov
push
js
and
out
daa
add
and
test
jl
jnp
dec
gs
fcmovu
rcl
pop
mul
stos
imul
aad
pushf
dec
or
mov
arpl
aam
inc
sbb
dec
sbb
out
push
add
aam
cmp
leave
push
xor
jecxz
inc
and
(bad)
jp
cwde
sub
movs
jae
xchg
lahf
mov
ror
adc
fdivr
jne
add
(bad)
stc
sbb
lods
rol
ins
addr16
out
movs
and
fnstenv
cmp
or
xor
cmp
or
cmps
jge
pop
jg
ins
xchg
mul
push
cmp
push
fcomi
ret
adc
mov
add
mov
xchg
out
test
dec
and
mov
push
fdiv
sbb
es
pop
aam
pop
push
mov
stos
push
mov
js
in
enter
or
aam
and
movs
ror
loope
cli
mov
imul
stos
cmp
push
jnp
out
dec
jge
mov
js
mov
rol
xor
inc
mov
jg
xchg
dec
mov
scas
lods
mov
test
lock
imul
xor
dec
cld
lods
ja
pop
pop
mov
jmp
push
sti
and
sbb
into
push
push
xchg
test
std
shr
loopne
xchg
das
and
std
mov
popa
out
mov
and
stc
les
xor
jecxz
int3
iret
pop
adc
mov
jae
pop
xor
and
test
inc
(bad)
and
enter
fs
in
cld
mov
pop
std
pop
(bad)
and
cs
mov
ror
add
xchg
push
retf
xchg
push
jp
sub
popf
push
sub
jmp
sahf
adc
push
jae
std
lods
aad
sub
dec
out
mov
mov
fnstsw
cmps
sub
pop
dec
cmp
mov
and
push
movs
int
int
sub
xlat
pop
mov
push
or
mov
(bad)
int
hlt
pop
push
std
cmp
add
jp
lock
out
xchg
rcr
out
xchg
jmp
mov
adc
fs
(bad)
mov
(bad)
mov
mov
xchg
inc
push
out
sub
sbb
call
fucomi
out
rcl
xchg
mov
push
push
mov
sub
nop
outs
pop
outs
in
inc
xor
ins
jge
adc
pop
bound
and
shl
push
pop
xchg
hlt
or
add
imul
idiv
or
loop
out
stos
jmp
sub
aas
and
xchg
xlat
sahf
push
inc
stc
scas
inc
pop
push
in
jno
fdiv
stos
fs
push
and
xor
hlt
hlt
adc
data16
mov
movs
mov
aam
mov
icebp
in
adc
(bad)
fst
mov
sbb
xchg
es
ror
popf
jns
popa
pop
shl
cmp
mov
popf
lock
dec
jmp
mov
vmwrite
mov
imul
or
and
fucomp
mov
rol
ins
jmp
(bad)
test
(bad)
mov
fisub
dec
mov
cmps
adc
(bad)
(bad)
or
sub
xor
adc
mov
fstp
cmp
(bad)
mov
ins
pop
adc
aad
sbb
add
sub
(bad)
push
jo
mul
ins
imul
aaa
jbe
mov
push
ror
inc
es
les
pusha
pop
adc
inc
adc
ret
das
or
out
mov
(bad)
jmp
xchg
push
aad
jle
or
jmp
(bad)
aad
cmp
or
shl
aad
mov
and
dec
aad
or
jo
shl
xlat
and
jmp
inc
fcom
inc
push
dec
call
ja
clc
inc
jo
mov
mov
jb
inc
aam
inc
push
xlat
or
and
movs
fmul
(bad)
imul
out
or
hlt
cmp
repz
shr
outs
mov
pop
in
inc
in
out
test
jmp
imul
add
xor
das
addr16
dec
mov
repz
mov
push
ds
fdivr
fcom
mov
loopne
rcl
cdq
pushf
jae
ret
scas
inc
push
pop
(bad)
adc
pop
loop
inc
mov
std
pop
sbb
loop
push
cmp
out
pop
stos
jmp
push
ret
push
mov
jmp
aaa
dec
inc
cmp
rcr
jnp
pusha
out
test
(bad)
cli
hlt
leave
movs
retf
(bad)
inc
or
mov
std
inc
scas
test
xchg
mov
pop
xchg
sub
sub
dec
aas
ds
pop
aad
shr
stos
xor
jmp
mov
push
xor
lahf
fsub
ss
dec
sbb
cmps
daa
or
push
ss
mov
fld
mov
add
mov
shr
adc
mov
fsub
mov
sub
jl
and
mov
mov
arpl
or
sbb
mov
xchg
mov
mov
out
movs
mul
inc
mov
repz
imul
add
in
adc
dec
mov
repz
xor
int3
daa
adc
mov
mov
or
and
retf
mov
pop
inc
enter
mov
leave
and
movs
mov
pop
mov
inc
sbb
xchg
sbb
call
lds
fisub
or
fnstsw
rcr
mov
jp
(bad)
mul
fistp
pop
add
dec
rcl
sbb
lock
pop
push
stos
or
push
outs
lods
push
addr16
mul
xchg
jae
aaa
mov
(bad)
ins
pop
adc
arpl
jne
test
lock
imul
inc
loopne
mov
push
(bad)
ins
daa
in
or
int3
mov
mov
fcmovne
pop
mov
(bad)
push
pushf
dec
push
cmp
stos
and
xor
sub
push
neg
dec
jb
mov
scas
jp
mov
in
aaa
xchg
or
(bad)
xchg
mov
fsub
xchg
or
jg
mov
mov
mov
mov
cmp
vpsadbw
fild
jle
imul
mov
(bad)
bound
(bad)
je
rol
and
call
push
lea
retf
jecxz
fsubr
or
bound
in
sub
mov
inc
sub
rcr
aam
add
sbb
xor
loope
inc
mov
add
mov
inc
fs
push
mov
xchg
inc
pop
nop
(bad)
mov
sbb
repnz
lock
mov
xor
jmp
push
sti
aam
out
xor
cmps
daa
xor
enter
ins
add
dec
repz
push
movs
test
push
xor
gs
sbb
pop
and
popa
mov
mov
xlat
dec
push
push
cmps
pushf
inc
and
mov
fisttp
adc
std
and
fstp
or
inc
xor
out
inc
lods
repz
inc
lods
repz
add
jae
inc
out
test
data16
mov
enter
movs
div
sti
jbe
xchg
mov
outs
ins
xchg
ja
cli
mov
pop
hlt
je
xchg
adc
icebp
ins
scas
inc
jns
fwait
jmp
pop
mov
int3
jg
jne
adc
and
xchg
scas
push
aaa
fiadd
add
aaa
pusha
jb
loopne
add
pop
mov
ret
addr16
or
mov
add
jne
inc
loopne
cmps
jo
add
clc
xlat
jp
cld
jl
inc
stc
xor
lock
ja
add
popf
sar
inc
xor
test
ret
adc
ins
psubsw
out
adc
xor
jo
in
cmps
mov
jo
lods
mov
add
aas
rcr
push
dec
dec
aas
aad
inc
mov
jne
xchg
leave
es
push
movs
repz
and
cmc
inc
xchg
or
cmp
pusha
hlt
imul
fsubr
iret
popf
imul
and
sbb
cli
jmp
(bad)
rcr
imul
data16
icebp
dec
or
(bad)
and
sbb
jns
dec
jle
sub
hlt
mov
cmp
sbb
inc
popa
add
and
lock
clc
xor
into
test
mov
lahf
mov
dec
jmp
sahf
shl
cmp
je
das
stc
mov
xchg
mov
sub
loop
fadd
lea
inc
adc
and
cmp
dec
sbb
(bad)
mov
sbb
ja
rsqrtps
retf
add
dec
or
call
cmc
dec
out
mov
adc
jmp
movs
jmp
sahf
imul
je
leave
or
into
les
div
in
repnz
fs
pop
(bad)
test
add
jbe
cli
iret
pop
(bad)
(bad)
aad
mov
sbb
inc
int3
mov
inc
adc
and
mov
adc
cwde
xchg
shl
cmp
jg
push
sub
lock
pop
aam
popa
mov
mov
stos
sub
or
(bad)
and
inc
mov
sub
xor
and
or
push
stc
rol
in
xchg
dec
adc
(bad)
pop
pop
test
dec
and
fstp
iret
push
sub
bound
enter
outs
fidivr
mov
xor
inc
outs
sti
test
in
shr
and
outs
and
enter
cmp
xchg
jo
sub
loopne
jb
pop
jmp
xchg
int
ret
mov
lods
mov
loope
mov
das
popa
mov
cmps
mov
addr16
lods
loop
dec
sub
push
ret
mov
pop
push
cmp
repnz
sub
out
sbb
xlat
loope
hlt
hlt
push
dec
hlt
mov
retf
bound
ret
call
aad
gs
std
dec
or
and
aaa
mov
jnp
fs
sub
inc
loopne
mov
pushf
lods
xor
mov
or
popf
dec
mov
mov
into
cld
repz
aaa
jbe
xor
jg
sbb
xchg
cmp
add
in
repnz
ret
or
lock
sub
cld
jae
inc
inc
ret
out
test
cwde
pop
mov
mov
scas
xchg
repnz
pop
ds
inc
lds
jnp
adc
xor
xchg
cmp
retf
int
out
dec
mov
xor
das
scas
cwde
div
cmp
jmp
daa
cmp
mov
loop
inc
es
ret
jmp
arpl
xchg
inc
loopne
imul
dec
ja
arpl
jae
xor
in
lods
mov
ror
mov
mov
vcomisd
test
xor
inc
in
jecxz
xchg
cmp
std
loopne
cmp
popa
out
push
das
xchg
push
mov
fnstcw
push
sbb
xchg
in
or
out
loop
jno
sub
add
outs
fcomp
lods
ins
add
fisub
or
adc
inc
inc
push
cmps
stos
mov
pop
cmps
xchg
jp
xor
sbb
pop
inc
iret
gs
and
mov
mov
std
les
cld
adc
pusha
sub
sti
jl
jmp
pop
popa
sbb
das
sbb
mov
repz
xchg
repnz
sbb
mov
pop
mov
fs
pusha
dec
add
(bad)
dec
jo
push
mov
push
adc
push
inc
imul
adc
inc
cmc
dec
sbb
cmovg
inc
dec
push
loop
sbb
gs
call
add
ja
push
push
push
jle
inc
jp
push
sbb
push
jb
push
cmp
mov
pop
push
scas
jnp
(bad)
push
aaa
xor
or
xor
cmp
pushf
lahf
cwde
pop
and
sbb
test
test
push
pop
mov
sub
xor
xchg
in
out
lock
gs
lds
jg
mov
cmp
fmulp
cmp
dec
jno
test
clc
mov
out
xchg
push
sub
xor
jle
sbb
xchg
(bad)
pop
dec
or
cmp
push
pop
outs
movs
dec
ss
repz
mov
lods
cld
dec
imul
pop
bound
cmps
and
bound
or
dec
mov
pusha
test
inc
(bad)
mov
xchg
aad
aas
inc
inc
xchg
fst
push
inc
inc
in
cmp
xchg
cmps
inc
mov
out
nop
cmps
fsub
scas
cmp
sahf
shl
or
push
or
mov
or
sbb
and
fdiv
repnz
cld
mov
cdq
xor
xor
dec
and
test
jnp
dec
add
fcom
aad
pop
mov
mov
dec
ret
aad
cmp
xchg
jmp
mov
popa
add
add
sub
fsubr
xchg
jae
nop
mov
push
mov
mov
pop
sti
mov
mov
fidivr
pop
lods
call
mov
fs
addr16
xor
or
mov
inc
mov
inc
in
imul
inc
sub
jmp
pop
jmp
mov
out
inc
enter
call
push
jmp
aaa
jmp
lods
jmp
(bad)
jmp
jmp
inc
mov
mov
inc
je
loopne
push
loope
inc
je
loopne
fs
jmp
xchg
jmp
or
out
jo
jmp
and
in
lock
jmp
cmp
inc
ins
das
in
inc
push
jmp
(bad)
jmp
inc
jmp
imul
inc
mov
idiv
inc
je
inc
ins
imul
inc
add
jmp
loope
inc
lock
jmp
not
inc
or
adc
inc
mov
imul
inc
jl
loopne
fs
in
mov
imul
inc
mov
adc
inc
jo
adc
inc
mov
imul
inc
push
or
jmp
not
inc
and
adc
inc
mov
imul
inc
jo
jecxz
mov
imul
inc
mov
not
inc
mov
imul
inc
mov
imul
inc
cmp
out
inc
sub
out
jo
jecxz
mov
not
inc
pop
sti
adc
inc
int3
(bad)
jmp
mul
inc
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
cwde
mul
inc
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
hlt
mul
inc
sbb
loop
sub
jmp
not
inc
or
adc
inc
mov
imul
inc
(bad)
mul
inc
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
dec
mul
inc
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
push
mul
inc
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
mov
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
mov
xchg
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
xchg
mul
inc
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
lock
inc
sbb
cli
inc
sub
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
fdiv
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
sub
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
adc
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
sbb
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
js
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
nop
cmc
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
xchg
cmc
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
pushf
cmc
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
fdiv
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
sub
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
pusha
cmc
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
fs
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
pop
cmc
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
xor
inc
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
lock
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
(bad)
hlt
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
aam
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
imul
inc
fdiv
loope
sbb
in
inc
push
jmp
not
inc
pop
sti
adc
inc
mov
div
sub
std
js
jmp
inc
fs
jmp
mov
movs
dec
out
mov
cmp
mov
add
inc
mov
div
sub
sbb
ret
repz
addr16
jmp
repz
data16
jmp
jmp
inc
fs
jmp
mov
out
inc
mov
or
mov
jmp
data16
movs
or
mov
jmp
push
mul
in
push
cmps
or
mov
repnz
jl
movs
or
mov
fs
mov
movs
or
mov
movs
(bad)
out
mov
movs
or
mov
push
adc
repnz
jl
movs
or
mov
and
jno
or
mov
movs
or
mov
fisttp
mov
movs
or
mov
jmp
push
jmp
push
movs
or
mov
movs
or
mov
pop
add
mov
inc
mov
js
or
mov
add
div
cmp
loopne
inc
mov
mul
out
mov
jmp
inc
push
and
pop
jmp
pop
mov
pop
jmp
or
mov
inc
cmp
add
jmp
mov
stos
movs
or
mov
(bad)
push
mov
repnz
outs
jmp
adc
cld
adc
test
imul
(bad)
dec
loope
inc
(bad)
dec
inc
or
jmp
out
adc
div
inc
pushf
movs
or
mov
movs
or
mov
movs
or
mov
sti
inc
add
scas
lea
mul
out
mov
movs
or
mov
outs
add
hlt
movs
or
mov
xor
loope
push
adc
sub
out
mov
sbb
push
fsubr
or
movs
or
mov
jmp
shr
cli
out
inc
test
movs
or
mov
inc
inc
ins
sub
jmp
mov
not
popf
pop
mov
movs
or
mov
movs
or
mov
push
xchg
mov
ds
add
mov
or
movs
or
mov
movs
mov
mov
cmps
or
mov
hlt
inc
out
mov
outs
push
xchg
and
data16
jmp
mov
std
test
jmp
jmp
mov
std
cwde
out
jmp
jmp
mov
xchg
push
push
jnp
mov
pop
and
adc
pop
movs
or
mov
jmp
inc
add
mov
or
movs
or
mov
sub
pop
test
pop
cmc
cmp
out
mov
cmps
or
mov
jmp
mov
std
and
js
movs
or
mov
hlt
push
in
mov
movs
or
mov
cmps
or
mov
adc
in
mov
jnp
pushf
loope
inc
mov
aam
inc
arpl
(bad)
jae
adc
and
xchg
pop
cmp
clc
icebp
sub
jb
cmp
cmps
je
add
aaa
out
pop
mov
movs
or
mov
jmp
fsubp
movs
or
mov
movs
or
mov
hlt
push
in
mov
movs
or
mov
or
mul
out
mov
jmp
mov
mov
movs
or
mov
cld
in
shl
out
mov
jmp
mov
jmp
in
push
inc
inc
mov
mov
movs
or
mov
pop
or
mov
movs
mov
cmc
mov
out
mov
cmp
inc
or
retf
mov
je
dec
inc
or
jmp
repz
mov
inc
inc
aaa
jmp
jecxz
xor
cmc
jnp
or
mov
cmps
or
mov
cld
add
retf
jmp
dec
hlt
cs
push
mov
jmp
and
mov
jmp
data16
movs
or
mov
movs
mov
mov
(bad)
fidivr
mul
or
mov
xchg
dec
test
movs
or
mov
movs
or
mov
movs
(bad)
out
mov
movs
or
mov
movs
or
mov
int3
adc
mov
movs
or
mov
stos
or
mov
jmp
stos
rep
or
mov
cmps
or
cmps
movs
or
mov
out
inc
sbb
movs
or
mov
movs
or
mov
mov
or
mov
cmps
or
xchg
out
mov
cmps
or
mov
movs
or
mov
movs
(bad)
out
mov
movs
or
mov
movs
or
mov
cmps
or
mov
out
bswap
adc
lock
mov
pop
clc
jmp
test
push
jae
jecxz
jne
xchg
and
adc
or
mov
movs
ret
dec
lods
add
xchg
movs
not
xchg
shl
sub
das
inc
add
movs
or
movs
or
mov
jmp
test
push
jae
jecxz
jne
aaa
and
adc
or
mov
movs
ret
inc
inc
add
dec
(bad)
add
movs
out
mov
das
inc
add
test
or
movs
or
mov
jmp
pop
icebp
jmp
mov
adc
in
mov
das
inc
add
ret
movs
or
movs
or
mov
mov
add
pop
and
add
movs
or
mov
cs
mov
jmp
mov
sbb
out
stc
jmp
sbb
ficom
push
jmp
mov
jne
cld
fsub
out
inc
or
push
lahf
pop
mov
movs
or
mov
hlt
push
in
mov
jmp
mov
push
cmp
cmps
or
mov
jmp
inc
mov
mov
movs
or
mov
jmp
fwait
pop
mov
movs
or
mov
jmp
inc
add
or
mov
jmp
addr16
xor
cmc
imul
mov
jmp
mov
(bad)
(bad)
or
xlat
jmp
sti
in
inc
and
cmps
or
mov
jmp
sti
sub
xchg
shr
inc
loope
or
mov
movs
or
mov
movs
or
mov
movs
or
mov
out
inc
test
dec
inc
inc
test
push
pushf
xor
inc
fsubr
dec
pop
fs
push
movs
imul
inc
inc
jmp
pop
js
pop
cmps
imul
xor
pop
repz
in
push
popa
sub
mov
(bad)
mov
jmp
inc
movs
lods
mov
push
sbb
mov
jmp
xor
sbb
mov
jmp
cmc
movs
sbb
mov
jmp
fwait
lods
cs
jmp
sbb
mov
jmp
mov
(bad)
sbb
mov
jmp
(bad)
movs
popf
shr
pop
sbb
mov
add
push
sar
ja
out
xor
shr
repnz
inc
(bad)
(bad)
mov
jmp
sbb
mov
mov
data16
inc
movs
push
rol
ins
lods
pop
push
lea
mov
sbb
mov
sub
nop
push
sub
repz
(bad)
cmc
movs
sbb
mov
jmp
in
movs
mov
mov
call
sbb
mov
or
out
movs
sbb
mov
jmp
jge
push
sar
inc
shr
test
shr
(bad)
in
movs
sbb
mov
(bad)
push
sar
inc
push
out
test
mov
cld
movs
mov
(bad)
mov
jmp
rol
(bad)
mov
sub
mov
jmp
jmp
xor
(bad)
adc
sbb
mov
jmp
mov
sbb
mov
jmp
adc
sbb
mov
jmp
xor
jmp
in
push
shl
sbb
mov
jmp
adc
repnz
movs
lods
mov
push
sbb
mov
jmp
out
add
(bad)
sbb
jmp
mov
push
sbb
mov
jmp
mov
call
sbb
mov
rcl
out
movs
push
shr
jg
in
lock
loope
das
rcr
pop
add
nop
inc
pxor
cwde
adc
in
dec
push
pinsrw
fs
pop
lds
pop
push
or
movs
shl
jmp
les
inc
out
push
outs
aad
leave
mov
add
push
ins
ins
mov
inc
sub
std
movs
lea
adc
adc
jecxz
and
enter
dec
inc
(bad)
mov
inc
hlt
dec
dec
sub
or
dec
inc
inc
gs
jecxz
pop
fucomi
movs
hlt
sar
test
inc
pop
repnz
ret
add
mov
into
and
add
add
popf
fild
das
sar
pop
add
nop
popa
in
or
or
hlt
or
adc
ins
cld
and
mov
cli
dec
into
or
test
lods
sub
pop
inc
sub
sub
(bad)
outs
stos
nop
cmp
nop
mov
ins
cld
dec
dec
cmp
add
adc
shr
jmp
data16
lods
movs
pop
inc
xor
addr16
dec
cmps
push
ror
or
in
or
add
jmp
dec
loope
pop
inc
inc
ss
add
addr16
rol
jb
cld
neg
or
addr16
cdq
neg
or
out
sub
jnp
add
addr16
(bad)
arpl
xchg
sub
das
or
cmps
jae
pop
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
inc
out
leave
fidiv
xlat
sbb
leave
bound
pop
inc
out
leave
out
out
sbb
cmp
enter
xchg
idiv
or
inc
inc
inc
cmp
inc
stos
mov
or
std
inc
cmp
jg
dec
push
mov
out
adc
test
xchg
test
xchg
test
xchg
imul
test
leave
or
inc
or
inc
outs
outs
test
jae
mov
dec
xchg
xchg
packssdw
or
inc
jmp
outs
test
pop
sbb
icebp
adc
xor
or
inc
packssdw
mov
out
inc
out
jecxz
enter
sahf
or
inc
mov
out
adc
test
xchg
aas
dec
sahf
or
inc
retf
icebp
adc
mov
inc
stos
imul
test
xchg
test
xchg
inc
cld
xchg
sub
sahf
or
inc
(bad)
not
pushf
adc
mov
inc
stos
outs
ror
test
xchg
dec
inc
jp
xchg
pop
inc
out
leave
push
bound
inc
out
leave
push
jne
lds
sub
enter
retf
inc
addr16
xor
enter
mov
data16
out
mov
ss
out
mov
ds
adc
adc
pop
xchg
jp
pop
jae
push
movs
cmc
das
mov
push
std
jg
push
sar
inc
(bad)
out
or
loope
loop
and
xchg
cdq
sbb
jo
enter
cmp
adc
mov
(bad)
dec
inc
pop
jle
arpl
push
dec
mov
cs
sbb
add
aaa
xor
lods
outs
and
fcmovu
inc
mov
outs
push
dec
dec
(bad)
adc
rcr
rol
aaa
lods
ds
daa
lods
int
or
dec
push
sahf
jno
xor
mov
sub
xchg
fld
fcmove
add
or
div
std
push
add
lahf
sub
push
inc
pop
(bad)
mov
jecxz
std
and
js
iret
add
ins
ret
(bad)
ds
movs
push
xor
call
push
hlt
sar
stos
add
bts
sahf
sbb
inc
rcl
sub
out
and
inc
out
pop
addr16
aas
mov
jmp
pop
fild
jl
dec
push
inc
lods
ds
mov
fst
add
add
(bad)
sbb
aas
xchg
cmps
add
or
pop
mov
lods
cmc
pop
test
push
jge
pop
repnz
sbb
arpl
sbb
fwait
push
in
push
mov
xchg
add
mov
push
add
ins
sbb
in
push
dec
repz
push
add
scas
mov
std
cli
mov
push
add
ins
push
arpl
mov
push
add
in
push
mov
mov
leave
add
mov
push
add
out
sbb
cmp
inc
loope
in
in
sbb
imul
sbb
cld
or
jb
and
mov
adc
bound
cmp
jb
and
mov
in
sbb
in
fisttp
cmp
or
lock
sbb
mov
push
add
sub
pop
jg
ss
(bad)
in
ss
or
mov
push
dec
mov
jmp
sbb
add
cli
mov
mul
push
add
mov
add
mov
out
sbb
mov
push
add
dec
adc
push
jmp
sbb
in
sbb
mov
push
iret
mov
mov
or
frstor
push
add
out
sbb
xor
sbb
mov
in
push
inc
repz
mov
cmp
dec
daa
scas
adc
mov
push
add
mov
add
mov
out
sbb
mov
mov
icebp
sti
icebp
fld
(bad)
dec
repnz
mov
cmps
mov
push
add
mov
push
add
sub
pop
pop
out
sbb
mov
push
add
in
sbb
hlt
icebp
fisttp
xor
dec
repnz
dec
repz
push
in
push
daa
retf
add
mov
push
add
out
sbb
xor
sbb
mov
mov
sbb
dec
sbb
dec
(bad)
in
and
jecxz
in
dec
repz
sbb
std
lock
in
push
dec
repz
mov
jg
sbb
div
fld
pop
daa
dec
bnd
push
dec
(bad)
in
test
loope
dec
repz
sbb
std
add
in
push
dec
repz
mov
pop
in
sbb
add
out
sbb
sbb
dec
(bad)
in
cs
xchg
sbb
loope
dec
repz
sbb
std
push
push
into
in
push
dec
repz
mov
mov
sbb
icebp
fld
gs
dec
repnz
sbb
sbb
dec
(bad)
in
scas
mov
inc
sbb
loope
dec
repz
sbb
std
pusha
pop
into
in
push
dec
repz
mov
sub
sbb
icebp
icebp
fisttp
fstp
dec
repnz
dec
repz
sbb
icebp
fisttp
fstp
dec
repnz
fisttp
mov
mov
dec
add
cmp
fisttp
sub
pop
dec
repz
fld
jns
dec
repnz
outs
imul
push
mov
in
retf
sbb
mov
lock
retf
sbb
mov
in
es
in
retf
sbb
fdivp
in
dec
mov
in
retf
sbb
cs
jle
lock
retf
sbb
jle
in
outs
mov
in
into
dec
repz
mov
cmps
mov
push
add
mov
push
add
in
repnz
in
push
dec
repz
mov
mov
mov
push
add
mov
add
mov
out
sbb
mov
push
add
(bad)
rcl
dec
in
mov
sbb
mov
mov
or
jb
int
mov
sbb
xor
jmp
push
mov
pushf
add
out
loopne
xlat
nop
sbb
pop
mov
push
add
iret
add
mov
mov
loopne
in
in
dec
daa
popa
fnstsw
fxch
dec
repnz
test
mov
not
fldenv
push
add
mov
cmp
mov
mov
pop
add
or
imul
lock
ins
jmp
into
inc
adc
std
nop
dec
iret
in
test
sbb
out
std
inc
dec
iret
in
push
dec
repz
cmps
out
in
out
lock
sbb
mov
push
add
sub
cwde
dec
lock
mov
push
add
mov
push
add
jecxz
add
out
sbb
xor
push
add
add
inc
repz
les
mov
and
cmp
sbb
mov
and
in
in
out
lock
sbb
mov
pushf
add
out
sbb
cmp
ret
mov
mov
push
add
sbb
mov
ins
mov
adc
sahf
mov
mov
push
add
out
sbb
cmp
rol
pop
xchg
or
cmc
sbb
mov
loope
loop
nop
push
dec
cmp
jae
aam
push
push
lock
push
add
mov
push
add
jl
out
les
pushf
add
mov
push
add
or
add
mov
aam
mov
in
push
mov
and
push
loopne
retf
lock
push
idiv
retf
stos
nop
push
push
push
in
mov
push
add
xchg
sar
repnz
cmp
mov
mov
push
add
and
mov
div
mov
loope
dec
repnz
pop
cmp
xchg
pop
adc
dec
repz
xchg
shl
arpl
or
or
mov
or
push
xchg
cmp
or
repz
cs
xor
sbb
paddsb
jmp
push
add
stos
add
mov
(bad)
in
sbb
loope
dec
repz
xor
sti
sbb
into
in
push
dec
repz
or
jns
mov
add
sub
jno
cld
sbb
xor
repnz
sbb
push
in
fdiv
(bad)
mov
dec
popa
pop
repnz
or
jg
loopne
inc
int
push
xchg
dec
in
xlat
in
add
pop
pop
sbb
mov
jmp
jmp
shr
push
shl
stos
mov
mov
aam
shl
rol
dec
mov
bound
push
rcr
xchg
jmp
mov
sub
or
lods
add
push
push
push
outs
aad
inc
mov
daa
inc
cmp
sub
jo
ds
pop
addr16
lahf
xchg
loop
dec
test
sub
push
pop
pop
aaa
pop
daa
inc
xor
call
mov
push
popa
and
push
add
popf
cmp
or
mov
test
add
sub
xor
ror
in
cmp
dec
std
or
inc
sbb
dec
or
or
adc
fld
mov
push
retf
les
dec
pop
(bad)
dec
adc
in
hlt
dec
std
ret
inc
int
mov
mov
dec
in
(bad)
scas
lea
sub
xchg
(bad)
and
cld
cmp
fwait
push
add
or
dec
add
mov
ds
push
ror
shr
push
inc
ins
loopne
cmp
dec
mov
(bad)
pop
mov
mov
aad
clc
pop
inc
imul
sub
inc
push
push
(bad)
cli
dec
pop
inc
push
push
inc
push
push
inc
jns
xchg
sbb
or
and
push
sbb
mov
pop
inc
pop
mov
jl
dec
pop
inc
sbb
mov
and
push
cld
imul
sbb
inc
sbb
push
test
adc
sahf
sbb
push
sbb
push
js
adc
sbb
nop/reserved
push
out
jnp
stos
sbb
or
and
push
sbb
push
add
pop
mov
sbb
push
stos
cmp
xchg
fwait
sbb
push
sbb
push
sbb
push
out
jnp
call
pop
push
sbb
push
mov
adc
sbb
inc
sbb
push
pop
jle
push
push
push
pop
sbb
push
sbb
push
sbb
push
or
sbb
push
sbb
push
js
adc
stc
sbb
push
sbb
push
cmps
and
pop
push
sbb
push
lds
cwde
add
sbb
pop
push
sbb
cwde
push
xchg
pop
call
sbb
or
and
push
add
xchg
and
push
sbb
push
sbb
push
push
(bad)
sti
sbb
rcl
pop
inc
inc
out
push
push
(bad)
push
imul
push
inc
inc
stc
pop
dec
xchg
fiadd
ins
dec
inc
push
inc
inc
retf
push
xchg
jle
inc
inc
imul
push
rcr
test
imul
movs
ds
jnp
out
adc
pop
sar
push
shr
jg
in
lock
push
push
shl
xor
(bad)
adc
sbb
mov
mov
push
std
sub
push
sar
inc
cmp
cdq
jne
xor
pop
push
out
outs
mov
sub
cwde
loop
xchg
pop
fnstcw
jmp
jnp
(bad)
dec
xor
out
pushf
ss
jl
xor
ss
add
mov
xchg
jo
(bad)
mov
add
inc
sub
fstp
std
jecxz
push
rcr
imul
inc
arpl
ins
add
in
cmp
push
ror
ret
(bad)
jmp
sub
arpl
movs
lods
es
cmp
pop
cmps
mov
into
sub
inc
adc
push
ins
sub
mov
es
cmps
fs
cs
mov
lods
into
xor
cmps
test
mov
push
add
and
sbb
(bad)
jmp
aam
pusha
dec
xchg
fnstcw
inc
jp
add
dec
rcl
stos
out
mov
popa
cmp
data16
lods
sub
pop
pop
cmp
pop
scas
ds
lods
adc
jnp
pop
scas
push
iret
inc
or
dec
std
ret
inc
sub
mov
scas
ds
sub
dec
or
lds
adc
es
call
in
mov
pop
and
jmp
adc
and
jnp
fsubp
jnp
sti
je
push
fsubp
stos
enter
lods
arpl
stos
adc
addr16
out
mov
fsub
into
test
ja
pop
pop
(bad)
lods
push
outs
(bad)
movs
push
sub
aam
pop
not
pop
pop
mul
dec
arpl
test
push
test
xor
cwde
outs
arpl
cdq
push
addr16
je
jp
sbb
cmps
or
(bad)
cmp
xchg
dec
pop
test
jnp
jecxz
ja
fsub
(bad)
ds
ins
adc
fucom
addr16
jno
adc
and
add
es
and
repz
idiv
adc
and
aam
ins
fisttp
cmp
push
repnz
and
jmp
mov
rcl
out
movs
push
xchg
out
movs
push
aaa
ret
push
inc
shl
call
(bad)
(bad)
shr
movs
sub
repz
jns
push
pop
push
cmps
mov
cmp
in
add
rcr
push
paddsb
shr
outs
mov
sub
ja
mov
pushf
inc
cmps
imul
inc
xor
ror
es
mov
repnz
pop
std
movs
(bad)
call
xor
in
dec
mov
mov
lods
sub
pop
aad
pusha
adc
and
push
sub
movs
les
dec
pop
pop
in
in
dec
std
ret
push
ror
js
in
dec
std
loop
pop
cmp
add
dec
sub
xchg
jmp
sub
clc
lods
pushf
fld
in
out
add
or
inc
aaa
xchg
xor
sbb
mov
test
ins
and
dec
imul
sub
pop
shr
in
ins
or
sub
push
shl
pop
into
adc
mov
outs
pushf
push
dec
ins
cld
fs
rol
inc
xor
mov
pop
pusha
and
dec
push
pmuludq
and
jmp
push
mov
test
fprem
stc
retf
push
call
dec
sub
dec
and
mov
sbb
cwde
out
dec
pop
jmp
loop
adc
cmp
sbb
rcl
sub
jmp
jecxz
pop
push
push
cli
xlat
pop
sub
ds
out
in
std
movs
loopne
pop
stos
repnz
inc
cmps
push
popa
sub
mov
(bad)
mov
jmp
std
movs
outs
ror
cmps
push
shl
push
or
push
in
ss
stos
adc
push
shl
not
push
dec
push
(bad)
push
ins
and
mov
call
ret
arpl
push
shl
inc
xor
jne
cld
inc
je
dec
dec
xchg
(bad)
mov
cmp
jbe
push
add
gs
xor
pop
daa
in
movs
mov
stc
push
enter
pop
daa
inc
out
cs
rcr
inc
xchg
sub
cld
dec
std
jp
pop
repnz
mov
adc
movs
mov
bound
push
ror
cmc
out
dec
xchg
fldcw
pop
jge
add
xchg
sbb
pop
test
inc
jmp
sub
mov
pop
daa
inc
fistp
call
xor
sbb
dec
mov
jmp
movs
mov
inc
xlat
pop
xlat
add
dec
ror
stos
jmp
or
fild
hlt
sar
test
or
add
cmp
add
shr
mov
xor
int
or
dec
mov
sub
push
or
inc
aas
ss
xor
ds
pop
jnp
add
push
pcmpgtb
das
lods
lock
mov
dec
movs
push
dec
ror
inc
xchg
cs
imul
push
add
outs
cmp
test
xchg
or
pusha
je
jbe
xchg
test
das
test
je
or
ins
jb
jmp
xchg
xchg
jmp
xchg
xchg
jmp
xchg
xchg
ret
leave
les
das
cs
mov
pusha
and
or
mov
test
inc
cs
push
cmp
mov
or
xchg
push
mov
test
mov
push
inc
jmp
push
cli
cmp
mov
test
mov
add
cmp
adc
xchg
ror
jnp
add
(bad)
sbb
jmp
mov
test
push
popa
(bad)
movs
push
shl
xor
(bad)
adc
sbb
mov
es
push
or
ret
movs
push
sar
cmc
in
mov
push
std
or
sar
inc
in
out
or
sub
xchg
push
pusha
btc
add
xchg
movs
push
(bad)
push
mov
rcr
sub
fstp
(bad)
call
push
pop
inc
fsubr
clc
mov
jbe
in
movs
push
shr
xor
pop
or
mov
stos
test
ror
mov
add
add
cmc
or
lahf
jnp
aaa
inc
mov
jne
dec
pop
(bad)
jp
test
dec
std
ret
inc
ins
loopne
sub
and
inc
(bad)
movs
mov
pop
fdiv
or
dec
std
jbe
pop
push
adc
out
std
cli
repz
xchg
push
add
bound
xor
pop
outs
inc
out
popf
fstp
scas
ds
jae
adc
inc
adc
sub
mov
loope
sti
aas
inc
jne
ds
aas
mov
adc
mov
or
popf
sub
cmp
xchg
dec
mov
xor
sub
fdivr
gs
lods
ds
pop
sbb
mov
lods
cld
movs
mov
bound
pop
(bad)
pop
inc
cmps
push
ror
std
cmp
add
adc
cmp
push
xor
dec
mov
imul
xchg
push
call
push
pop
jg
pop
sbb
movs
das
(bad)
jmp
mov
mov
push
repnz
ret
movs
sub
ret
movs
sub
fwait
sbb
mov
movs
sub
or
in
inc
fs
jecxz
or
inc
ins
stos
mov
add
push
xchg
or
stos
ret
movs
sub
ret
movs
sub
jl
call
movs
sub
ret
movs
sub
mov
rol
adc
cdq
jmp
ret
movs
sub
ret
movs
sub
mov
adc
and
mov
sub
ret
fsubr
in
adc
fwait
jmp
mov
add
add
fs
mov
test
mov
sub
ret
movs
sub
sub
sub
jno
gs
xchg
jmp
jae
movs
sub
ret
movs
sub
daa
jmp
in
sti
(bad)
ror
push
mov
sub
ret
movs
sub
ret
int3
sub
ret
pop
ret
movs
sub
sub
dec
ins
stos
(bad)
jmp
jno
int3
stos
(bad)
xchg
push
mov
sub
pop
sbb
push
push
movs
fwait
in
hlt
sub
push
sti
jo
dec
movs
data16
gs
push
sti
jo
cdq
pop
outs
mov
mov
adc
add
push
mov
xor
cld
xchg
ss
sar
int
movs
(bad)
ins
cld
mov
xlat
(bad)
xor
shr
shl
push
shl
xor
(bad)
adc
sbb
mov
jmp
jecxz
jg
in
lock
shr
push
repnz
in
movs
push
popa
sub
mov
(bad)
mov
jmp
jmp
push
rol
mov
mov
out
sti
in
and
dec
mov
sub
call
push
ror
push
out
mov
pop
lods
and
sar
movs
jne
jns
(bad)
jae
das
das
clc
fcmovbe
sub
or
ror
mov
pop
dec
adc
paddsb
fdiv
or
in
sub
leave
in
dec
test
push
int
movs
pusha
mov
dec
std
cs
pop
inc
int
mov
mov
mov
mov
outs
test
hlt
rcr
test
aaa
add
mov
adc
inc
sub
mov
cmc
rol
push
ins
in
movs
sbb
sbb
mov
fldcw
sbb
inc
xor
sub
lods
std
jle
test
rcl
loop
sub
mov
test
lods
outs
adc
cmp
dec
scas
ds
xor
ret
mov
outs
inc
ss
gs
lods
ds
inc
xor
aas
stos
lods
ficom
pop
scas
ds
fcmovnb
cmp
adc
outs
cmp
mov
fimul
sub
xchg
repnz
pushf
sahf
add
ret
clc
addr16
lock
jno
fwait
jbe
jno
fidiv
or
test
or
jo
or
jo
or
jo
or
jo
or
mov
cmc
loope
ja
push
fnsave
push
lds
push
cdq
ja
push
lea
push
in
ja
push
mov
ja
push
lds
push
test
ja
push
mov
ja
push
mov
in
in
ja
push
or
(bad)
jo
or
jo
or
jno
or
jo
or
jo
or
jno
movs
ja
push
loope
sar
pop
jp
test
cmp
sbb
aas
sbb
xchg
jb
cmp
sbb
aas
sbb
cmps
jl
fiadd
rcr
inc
cmp
sbb
sbb
jbe
push
sbb
stos
shr
push
inc
cmp
sbb
test
repnz
shr
or
stos
dec
inc
cmp
sbb
inc
aas
call
(bad)
iret
xor
jae
add
pop
jmp
jns
or
mov
stc
mov
inc
cmp
sbb
aas
sbb
cmp
inc
cmp
sbb
ds
inc
jecxz
loop
push
lock
lea
aas
sbb
aas
sbb
cdq
outs
inc
(bad)
jbe
stos
inc
cmp
inc
cmp
sbb
aas
sbb
popa
aas
sbb
mov
or
cmp
sbb
aas
sbb
popa
aas
sbb
mov
or
cmp
sbb
aas
sbb
cdq
outs
inc
push
jbe
stos
inc
cmp
inc
cmp
sbb
aas
sbb
cdq
inc
inc
sub
stos
repnz
mov
cmp
sbb
std
mov
inc
cmp
sbb
aas
sbb
outs
inc
or
stos
inc
cmp
inc
cmp
sbb
cdq
inc
inc
dec
mov
fadd
jae
inc
cmp
sbb
aas
sbb
jno
adc
cmp
sbb
sar
or
jo
pop
jp
test
cmp
sbb
aas
sbb
aas
sbb
movs
inc
cmp
sbb
aas
sbb
jbe
xor
movs
ja
push
movs
ja
push
cld
mov
dec
inc
cmp
inc
cmp
sbb
sbb
cmp
sbb
aas
sbb
sbb
pusha
push
les
bnd
popf
dec
fistp
jbe
push
pop
in
pop
int
ins
inc
aad
bound
mov
push
jge
mov
leave
bound
sbb
inc
mov
lods
jge
push
repnz
xchg
adc
arpl
out
shl
xor
(bad)
adc
sbb
mov
jmp
jecxz
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
jg
in
lock
jmp
scas
push
out
movs
inc
jae
cwde
lods
bound
pop
push
rcl
(bad)
mov
jmp
bound
sbb
mov
jmp
out
movs
pop
ror
dec
out
pop
push
lea
jmp
mov
mov
push
std
pop
or
(bad)
cli
inc
mov
or
rcr
out
xchg
bound
push
sar
cmc
sub
dec
sbb
ss
dec
lea
jo
mov
sbb
outs
test
aas
jbe
mov
sub
push
push
ror
shr
test
ja
mov
sub
or
push
xor
jecxz
push
sar
mov
out
dec
cmc
jmp
push
rcr
hlt
shr
test
aas
inc
dec
lods
push
adc
fdiv
dec
std
push
push
push
adc
or
std
push
xor
les
stos
sar
nop
jecxz
in
or
xchg
in
dec
icebp
dec
or
movs
hlt
rol
stos
inc
xor
sub
std
mov
inc
xor
push
dec
pop
test
mov
es
sbb
sar
pop
add
sbb
add
sti
sub
dec
sub
mov
pop
fild
movs
(bad)
dec
pop
addr16
push
push
cmp
dec
std
xor
xchg
in
movs
mov
xor
stos
pop
inc
cmps
push
sub
hlt
inc
scas
ds
jecxz
sub
ja
scas
ds
idiv
outs
adc
mov
adc
push
(bad)
enter
in
fs
push
cmc
inc
adc
xor
jge
(bad)
adc
out
add
stc
push
adc
out
pop
movs
in
pop
movs
test
imul
stos
or
cmps
hlt
inc
pop
movs
test
pop
(bad)
js
jmp
pop
pop
movs
test
pop
movs
test
adc
or
in
loope
dec
out
lods
ss
xlat
xor
sub
fst
rcl
push
pop
xchg
jmp
mov
addr16
dec
dec
jae
lods
ss
xlat
inc
outs
sub
xchg
fild
jmp
jbe
call
mov
xor
test
mov
fstp
mov
out
ins
mov
das
ret
adc
pop
xlat
sbb
mov
xchg
lods
es
addr16
push
aaa
inc
test
das
jmp
jle
inc
fnstenv
inc
(bad)
fsubr
cmp
lods
or
frstor
repnz
cmp
rcl
push
ja
adc
xchg
rcr
shl
sub
fnstcw
fcmovnu
and
mov
jle
dec
popf
and
cdq
push
repz
ret
adc
pop
sti
dec
dec
arpl
adc
das
sti
xchg
fbld
xchg
jbe
call
mov
jae
ins
mov
jae
adc
inc
xchg
fst
dec
push
shr
es
shr
movs
jbe
jmp
or
call
pop
dec
jmp
repz
(bad)
xor
addr16
xchg
es
lea
dec
repz
jle
rol
data16
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
out
adc
inc
in
pop
movs
in
pop
movs
test
add
test
push
enter
adc
inc
or
pop
gs
add
fidiv
pop
movs
test
pop
movs
test
mov
jmp
(bad)
xlat
out
adc
and
repz
pop
movs
in
pop
movs
test
pop
movs
test
inc
jmp
in
movs
loopne
pop
movs
test
push
sbb
mov
xchg
add
mov
or
test
mov
stos
or
out
inc
out
adc
sub
in
adc
inc
sbb
push
sbb
cmc
inc
or
loope
out
repz
jmp
inc
pop
movs
in
pop
movs
test
pop
movs
test
adc
in
adc
out
adc
inc
inc
adc
in
leave
repz
pop
movs
in
pop
gs
add
mov
pop
movs
test
pop
movs
test
out
imul
movs
in
pop
dec
stos
or
jmp
inc
jl
sbb
or
sub
mov
mov
call
movs
test
sahf
and
push
pop
movs
test
pop
cmc
test
outs
adc
out
pop
movs
in
pop
(bad)
outs
in
cmp
push
add
cs
pushf
xor
adc
inc
pop
movs
test
push
sbb
push
adc
out
and
jmp
pop
movs
hlt
inc
pop
movs
test
pop
movs
test
fmulp
test
pop
pop
movs
test
pop
movs
les
movs
test
adc
inc
inc
adc
out
push
xchg
imul
sbb
push
and
test
into
dec
(bad)
and
push
retf
ficomp
in
pop
movs
test
pop
in
or
rol
in
mov
retf
movs
test
pop
movs
test
push
sbb
stos
mov
xor
jp
inc
jecxz
sbb
in
retf
cmp
in
pop
gs
add
cs
pop
movs
test
pop
movs
test
cmp
clc
push
mov
test
in
pop
movs
test
pop
movs
test
es
stos
or
jmp
adc
jmp
retf
in
pop
movs
test
pop
imul
mov
movs
test
pop
movs
test
pop
movs
test
ins
sbb
nop
pop
movs
hlt
inc
pop
movs
test
(bad)
in
sub
adc
test
(bad)
push
stos
jo
(bad)
in
push
out
adc
pop
movs
in
pop
movs
test
xor
test
pop
movs
cld
or
stos
or
jmp
inc
pop
movs
test
pop
movs
test
or
dec
jno
call
ss
jno
in
shr
push
adc
test
(bad)
hlt
inc
test
shl
add
in
adc
in
test
sbb
add
and
adc
in
test
sbb
in
jnp
out
in
lods
cmp
(bad)
std
out
jo
lods
cmp
jle
out
jo
add
out
movs
xchg
sub
out
lock
mov
out
sub
pop
dec
stos
xchg
adc
push
inc
pushf
xor
adc
inc
pop
movs
test
pop
movs
test
pop
loop
xchg
mov
mov
call
movs
test
pop
movs
test
adc
sbb
pop
movs
cld
inc
pop
movs
test
pop
movs
test
in
mov
retf
movs
test
xchg
fisubr
outs
in
cmp
push
add
cs
mov
sbb
pop
movs
cld
inc
pop
movs
test
adc
jmp
and
mov
leave
repz
pop
movs
in
pop
movs
test
pop
movs
test
out
test
push
push
call
out
add
cli
mov
pop
loope
fsubr
xor
add
dec
push
stos
or
and
xchg
adc
out
pop
jmp
repnz
mov
jp
and
xchg
adc
out
in
adc
push
mov
sbb
push
jmp
mov
call
add
cli
mov
push
in
xchg
fsubr
xor
add
inc
adc
mov
push
fsubr
xor
add
inc
adc
dec
jno
fst
call
out
adc
cs
inc
adc
push
fsubr
xor
add
inc
adc
sahf
inc
popa
inc
fist
stos
in
(bad)
xlat
cmps
mov
into
repz
pop
movs
in
pop
movs
test
pop
movs
test
pop
imul
push
adc
test
pop
movs
test
pop
sbb
inc
pop
movs
test
mov
jmp
or
in
adc
inc
adc
jp
pop
movs
test
pop
movs
test
sahf
add
push
pop
movs
test
pop
cmc
test
pop
pop
movs
in
pop
movs
test
out
cmp
or
jmp
adc
repnz
pop
movs
in
pop
movs
test
pop
movs
test
out
cmp
or
jmp
push
stos
in
(bad)
xlat
cmps
mov
into
repz
pop
movs
in
pop
movs
test
pop
movs
test
pop
jmp
pop
adc
pop
inc
adc
test
pop
movs
test
adc
test
call
test
pop
gs
adc
xchg
(bad)
pop
movs
test
pop
movs
test
pop
movs
test
adc
repz
pop
movs
in
pop
movs
test
xchg
and
inc
pop
movs
test
mov
or
test
pop
movs
test
mov
xchg
push
dec
in
push
in
loop
push
inc
in
sti
call
out
adc
or
movs
test
push
and
or
jmp
inc
cld
add
imul
in
pop
movs
test
add
stos
test
aas
das
inc
out
call
lahf
ss
adc
dec
mov
dec
mov
jmp
inc
fsubr
imul
movs
in
pop
movs
test
pop
movs
test
inc
stos
pusha
adc
test
pop
movs
test
pop
cmc
test
pop
pop
movs
in
pop
movs
test
pop
movs
test
and
xchg
sub
out
pop
mov
out
pop
movs
test
pop
movs
test
out
cmp
or
jmp
push
stos
loope
(bad)
xlat
cmps
mov
into
repz
pop
movs
in
pop
movs
test
(bad)
ja
mov
cld
aam
(bad)
out
cmp
pop
adc
jp
sbb
adc
call
daa
adc
dec
mov
aam
mov
adc
dec
mov
xlat
loopne
mov
test
push
sub
sbb
or
cmp
mov
stos
or
movs
xor
pop
movs
test
pop
int
or
adc
inc
pop
movs
sbb
pop
movs
test
pop
movs
test
out
test
mov
adc
ret
jmp
inc
pop
movs
test
push
cld
stos
or
jmp
pop
movs
test
pop
movs
test
pop
movs
test
inc
adc
adc
pop
movs
test
adc
test
cli
pop
movs
in
pop
movs
test
dec
imul
bound
jmp
inc
pop
movs
in
pop
movs
test
pop
movs
test
dec
sub
rcr
pop
movs
test
(bad)
jmp
fldln2
cmp
fist
jmp
in
cmp
inc
adc
jp
add
push
push
adc
push
fsubr
xor
add
inc
adc
push
dec
jno
fst
call
out
out
adc
mov
fsubr
xor
add
inc
adc
ss
popa
inc
fist
stos
in
(bad)
pop
movs
mov
into
repz
pop
movs
in
pop
movs
test
pop
movs
test
out
test
adc
and
cld
xor
adc
out
pop
movs
test
push
cld
stos
or
jmp
pop
movs
test
mov
das
sbb
or
cli
cdq
pop
movs
test
pop
movs
test
mov
stos
or
inc
out
inc
xlat
in
adc
test
pop
movs
test
pop
in
or
xchg
push
inc
jl
jmp
inc
adc
out
push
stos
jecxz
cmp
sbb
pop
movs
cld
inc
pop
movs
test
mov
test
push
inc
xlat
in
adc
test
bnd
ss
adc
mov
adc
mov
retf
movs
test
mov
stc
inc
adc
in
adc
test
bnd
ss
adc
mov
adc
mov
retf
movs
test
pop
movs
test
mov
dec
inc
adc
in
into
repz
pop
movs
in
pop
movs
test
pop
movs
test
bnd
ss
adc
mov
adc
(bad)
or
cld
inc
pop
movs
test
pop
movs
test
mov
stos
dec
inc
inc
(bad)
movs
mov
pop
movs
test
pop
movs
test
out
test
inc
cs
ficom
jmp
or
call
and
push
pop
movs
test
pop
ret
stos
pop
adc
push
adc
test
pop
(bad)
outs
in
cmp
push
add
cs
pushf
xor
adc
inc
pop
movs
test
pop
movs
test
enter
adc
test
in
pop
movs
test
pop
movs
test
loop
test
adc
retf
movs
test
pop
movs
test
pop
movs
test
test
rcl
add
push
inc
(bad)
mov
clc
push
adc
test
in
pop
movs
test
mov
loop
push
push
push
cmc
inc
sbb
ja
mov
pop
movs
test
bnd
xor
add
ds
adc
xchg
pop
loop
xchg
mov
mov
call
movs
test
push
inc
stos
or
mov
push
pop
movs
test
pop
movs
test
pop
movs
test
in
mov
retf
movs
test
xchg
push
test
mov
out
adc
test
mov
test
mov
xor
cld
inc
pop
movs
test
pop
movs
test
adc
jmp
out
popf
dec
adc
and
jmp
inc
(bad)
movs
mov
pop
movs
test
pop
dec
stos
or
jmp
or
ficomp
push
or
xchg
xlat
call
out
mov
push
dec
pop
iret
repz
pop
movs
in
pop
movs
test
pop
movs
test
cmc
jmp
in
and
inc
adc
in
into
repz
pop
movs
in
pop
movs
test
pop
in
or
pop
push
inc
jl
jmp
inc
add
xor
adc
inc
pop
movs
test
pop
movs
test
mov
mul
pop
pop
movs
test
adc
in
add
sbb
jmp
pop
movs
cld
inc
pop
movs
test
pop
movs
test
push
or
xchg
xlat
call
out
push
push
dec
push
iret
repz
pop
movs
in
pop
movs
test
pop
movs
test
jnp
test
xlat
call
out
push
push
dec
inc
iret
repz
pop
movs
in
pop
movs
test
adc
in
add
rol
jmp
pop
movs
cld
inc
pop
movs
test
pop
movs
test
adc
jmp
out
cmp
inc
mov
mul
pop
pop
movs
test
pop
inc
test
dec
adc
and
jmp
adc
test
pop
in
or
call
in
adc
out
sub
sbb
pop
movs
cld
inc
pop
movs
test
pop
movs
test
push
or
jp
iret
loopne
call
push
pop
movs
sbb
pop
inc
stos
or
in
mov
out
mov
pop
movs
test
pop
movs
test
pop
in
or
add
adc
ss
mov
dec
inc
adc
push
in
mov
jmp
or
jp
inc
jecxz
fldl2e
in
mov
out
mov
pop
movs
test
bnd
ficom
std
in
out
adc
test
mov
stc
inc
mov
sbb
sbb
pop
movs
cld
inc
pop
movs
test
pop
movs
test
adc
jmp
adc
out
add
mov
inc
iret
repz
pop
movs
in
pop
in
or
add
adc
push
inc
mov
dec
inc
adc
push
in
mov
jmp
movs
test
push
or
jp
inc
out
vpmulhuw
mov
out
mov
pop
movs
test
pop
movs
test
bnd
ficom
std
in
out
adc
test
es
fldcw
mov
add
xchg
out
mov
retf
movs
test
pop
movs
test
fmulp
test
adc
add
mov
nop
cmp
inc
adc
sub
inc
neg
mov
pop
movs
test
pop
dec
stos
or
jmp
or
ficomp
pop
movs
test
adc
jmp
adc
out
dec
stos
jecxz
cmp
sbb
pop
movs
cld
inc
pop
movs
test
lods
and
push
adc
out
pop
movs
in
pop
movs
test
pop
movs
test
adc
dec
ins
adc
loop
les
inc
or
pop
inc
stos
or
aam
dec
mov
aas
jnp
movs
mov
pop
movs
test
pop
movs
test
push
(bad)
test
xor
xlat
adc
ficom
stc
in
mov
jmp
jnp
out
inc
or
not
add
sar
aam
fiadd
jl
and
push
inc
add
jb
test
adc
leave
mov
test
push
pop
or
scas
push
scas
xchg
out
movs
dec
shl
(bad)
mov
jmp
in
pop
push
lea
jmp
out
push
xchg
out
movs
pop
jae
push
movs
sub
push
aaa
out
movs
inc
rol
xor
shl
rol
adc
mov
mov
dec
mov
(bad)
xor
sbb
push
push
push
sub
js
icebp
test
outs
push
pmuludq
(bad)
mov
in
mov
mov
(bad)
mov
rol
pop
push
int
movs
mov
into
adc
pop
daa
inc
xchg
retf
sub
jo
xor
inc
aaa
push
sub
add
push
ror
mov
ret
sbb
push
adc
mov
pop
outs
inc
dec
mov
into
aad
cmps
je
mov
hlt
shr
test
leave
add
or
add
loopne
or
data16
movs
fwait
(bad)
add
sub
fcom
inc
mov
push
lea
stos
mov
outs
fdiv
mov
cmp
lods
adc
ret
dec
and
fldlg2
dec
mov
outs
mov
hlt
rol
stos
inc
xor
and
(bad)
ds
lods
ficom
pop
pop
sar
int3
or
or
fwait
out
dec
icebp
cli
dec
inc
lods
sub
pop
mov
ds
push
jmp
xor
mov
rcr
stos
add
cwde
or
mov
push
das
and
dec
ror
jmp
adc
sbb
aad
sbb
cwde
mov
sbb
xor
or
sub
pop
pop
outs
fadd
jnp
aam
test
jno
push
clc
mov
push
cli
or
push
mov
mov
xchg
sbb
inc
mov
sbb
inc
icebp
loope
iret
call
scas
movs
sar
adc
fwait
lods
push
shr
push
shr
loopne
mov
pop
push
sar
sbb
mov
add
shl
aaa
scas
movs
push
rcr
inc
xor
cwde
push
(bad)
pop
rcr
or
jae
cwde
push
ins
call
add
sbb
dec
mov
sub
add
ret
ins
jae
outs
push
or
push
pushf
jbe
ror
fsubrp
dec
mov
sub
movs
mov
mov
aad
xchg
mov
addr16
imul
fadd
sub
je
div
inc
add
jmp
rcl
dec
mov
mov
and
pop
push
ror
(bad)
mov
(bad)
aas
lock
data16
push
rol
xlat
loope
pop
sub
inc
test
sar
sub
mov
mov
mov
outs
cwde
mov
dec
(bad)
jmp
inc
rol
ret
scas
rcr
add
ds
add
adc
mov
iret
jmp
mov
sub
mov
addr16
sub
movs
cwde
and
cli
std
cmp
add
add
dec
cmc
jp
dec
lods
into
adc
push
add
or
or
or
dec
mov
into
pop
jne
cmc
or
dec
je
shl
or
mov
outs
clc
cli
dec
xchg
and
pop
ds
movups
pop
test
jecxz
add
dec
mov
sbb
dec
push
add
sub
jb
sbb
xchg
sub
jo
fst
cmp
add
data16
add
add
out
(bad)
pop
push
addr16
div
sbb
call
div
fstp
cmp
dec
out
addr16
div
mov
sub
cmp
dec
jmp
div
hlt
sub
fs
dec
fbld
mov
cmp
xor
dec
pop
sub
jo
sbb
xchg
sub
jo
dec
adc
sub
es
jo
dec
adc
add
dec
xchg
fstp
gs
data16
add
add
in
lods
add
out
(bad)
pop
push
addr16
div
sbb
call
div
fstp
cmp
dec
out
addr16
div
mov
sub
cmp
dec
jmp
div
hlt
sub
fs
dec
fbld
mov
cmp
xor
dec
pop
sub
jo
dec
adc
jae
adc
sub
jb
dec
adc
sub
push
es
jo
dec
adc
not
jo
add
add
lods
add
(bad)
add
test
pop
sub
aas
lods
add
fs
pop
add
popf
dec
ret
nop
cmp
pop
pop
pop
ds
jmp
or
pop
pop
pop
ds
mov
gs
dec
scas
pop
pop
pop
ds
call
add
scas
pop
pop
pop
ds
cmp
fisttp
cmp
sub
sub
jo
push
pop
jo
dec
hlt
cmp
dec
adc
sub
jo
push
test
add
jb
cmps
adc
cmp
leave
pop
enter
aas
add
xchg
aad
ds
mov
add
ror
adc
mov
aas
lods
add
cmp
cmp
jmp
lods
add
cmp
ss
sub
pop
cmp
cmp
add
cmp
cmp
add
ficomp
jae
pop
and
sub
jo
push
pop
jo
dec
hlt
cmp
dec
adc
jl
test
add
jb
dec
adc
xchg
lods
adc
jo
pop
add
ds
aad
outs
mov
push
ret
gs
dec
scas
pop
pop
pop
ds
jmp
cmovp
mov
mov
gs
dec
scas
pop
pop
pop
ds
call
add
scas
pop
pop
pop
ds
mov
mov
add
sub
pop
cmp
ss
sub
pop
cmp
cmp
add
cmp
cmp
mov
or
std
popf
cmp
sub
jb
scas
adc
and
pop
sub
cmp
sahf
cli
lds
sub
adc
jo
pop
cli
mov
jno
sub
xlat
lods
mov
adc
and
shr
push
shr
push
shr
push
in
in
movs
loopne
pop
stos
push
ror
shr
push
xchg
out
lods
push
push
out
add
push
out
ins
push
inc
out
and
push
out
ins
push
adc
and
jge
js
sbb
out
and
out
push
push
add
and
and
out
and
pop
out
and
jns
add
out
xor
out
movs
push
aad
fcom
out
push
push
adc
sub
sub
and
push
out
js
inc
out
add
in
nop
push
jno
cmp
out
add
out
add
gs
xor
out
je
jno
sbb
push
out
and
jns
add
out
xor
out
call
push
push
out
cmp
sub
and
popa
out
and
out
adc
jns
sbb
adc
test
shr
dec
(bad)
cmp
jno
in
or
dec
sbb
xlat
call
in
lea
pop
(bad)
and
push
ja
leave
and
jne
pop
div
adc
in
test
xor
dec
fidiv
jb
adc
into
or
jae
xchg
out
movs
add
mov
push
in
and
lds
and
scas
push
mov
gs
adc
jle
hlt
movs
xor
fwait
lods
push
shr
loopne
mov
cmps
or
out
call
lods
mov
jmp
xor
(bad)
mov
sub
mov
jmp
sub
sbb
mov
jmp
loopne
push
adc
sub
(bad)
fnstcw
call
dec
out
add
(bad)
sbb
jmp
mov
push
sbb
mov
jmp
mov
push
mov
or
(bad)
stc
xchg
sbb
mov
jmp
or
sti
sar
out
push
adc
push
(bad)
cmc
movs
sbb
mov
jmp
jmp
sbb
mov
jmp
std
pop
sbb
mov
jmp
sbb
jmp
mov
push
sbb
mov
jmp
mov
call
aas
in
mov
rcl
(bad)
pop
and
movs
xor
lods
jo
ret
xchg
out
mov
and
shr
movs
xchg
loopne
push
adc
shr
mov
mov
in
push
shl
rcr
daa
and
jo
shr
sbb
mov
jmp
or
shl
pop
rcr
fbld
in
jo
shr
sbb
mov
jmp
dec
mov
in
in
fcomp
jnp
xor
and
movs
pop
or
out
or
mov
mov
in
push
shl
adc
aam
aas
in
(bad)
fstp
jnp
xchg
int3
in
or
(bad)
and
rcr
and
jo
jge
pop
push
lea
mov
sbb
mov
fistp
jnp
mov
shr
cmps
sar
push
adc
movs
push
lds
sbb
adc
inc
test
adc
push
cmp
push
lea
mov
sbb
mov
mov
in
push
(bad)
stc
xchg
sbb
mov
jmp
in
sub
mov
jmp
pop
mov
rcl
ret
movs
push
sar
xchg
add
(bad)
in
movs
sbb
mov
jmp
in
call
mov
(bad)
shl
lea
jmp
pushf
mov
std
dec
jo
sar
inc
lods
in
or
in
daa
sub
cli
sub
xor
push
shl
popa
add
cwde
shl
mov
shl
mov
daa
call
push
xchg
std
not
mov
ret
adc
pop
daa
in
movs
inc
jnp
cwde
push
ins
in
movs
ins
mov
pop
mov
outs
push
inc
popf
fst
pop
add
or
or
xlat
adc
cmps
jno
sbb
mov
out
movs
push
sub
push
sbb
shl
mov
push
ror
shr
test
mov
pop
in
sub
mov
push
dec
sub
arpl
cmp
popf
pop
sub
inc
cmp
sub
hlt
sar
test
out
inc
mov
push
shr
pop
addr16
stos
loopne
dec
daa
inc
cmps
ja
clc
push
ja
cld
mov
dec
(bad)
aaa
dec
inc
sar
xchg
pop
pop
icebp
sbb
cli
test
mov
or
sub
retf
inc
sti
inc
std
jecxz
scas
ds
nop
cld
adc
cs
jnp
cmp
ror
lea
dec
cmc
scas
daa
jp
cmp
pop
inc
shr
scas
ds
cmovno
pop
std
ficom
pop
out
pop
add
pushf
mov
mov
jp
les
pop
pusha
movs
(bad)
xchg
push
arpl
jg
das
(bad)
fldcw
pcmpgtb
adc
or
hlt
adc
cmp
jnp
fucomp
dec
pop
leave
loopne
or
fcom
fsubr
jnp
popf
test
dec
leave
lods
jle
int
loop
or
jg
loope
arpl
bound
mov
push
fld1
jnp
in
dec
or
hlt
jnp
fdiv
pop
dec
stc
fcom
xchg
fdivr
fucom
(bad)
fnsave
jg
stc
fmul
pop
loopne
push
dec
rcr
inc
adc
rcl
jmp
arpl
shl
jg
leave
lock
pop
in
push
pop
mov
push
dec
rcr
or
lds
jl
hlt
push
dec
(bad)
or
test
xchg
loopne
or
mov
ja
clc
rol
aad
jnp
in
push
pusha
lock
adc
fcom
int3
les
pop
in
pop
dec
leave
fcom
js
loopne
fs
loopne
mov
loopne
pop
dec
stc
fcom
xchg
fdivr
fucomp
dec
or
hlt
jg
clc
fadd
stc
lods
jg
leave
les
fucomp
push
dec
ror
jnp
fstp
(bad)
in
pop
pop
fucom
inc
jge
fadd
in
jae
jmp
mov
sbb
in
jnp
lea
fs
loopne
or
mov
ja
clc
rol
aad
jnp
in
push
pop
lock
sbb
fmul
imul
call
lock
inc
push
in
shl
leave
cld
inc
adc
in
fs
lods
pop
jl
in
sbb
fmul
xchg
fadd
xchg
lods
inc
pop
in
jae
jmp
mov
ins
loope
inc
push
fld
pop
lock
addps
fdivr
rcr
jae
stc
test
pusha
(bad)
les
in
jae
rcr
pop
dec
in
hlt
push
adc
test
jnp
(bad)
les
frstor
inc
adc
in
fs
call
push
sbb
test
xchg
js
fcom
enter
fsubr
and
in
pop
fdiv
pop
jl
loopne
mov
hlt
or
les
rcr
push
adc
mov
inc
or
aam
push
in
test
in
fdivr
enter
adc
fmul
pop
sbb
hlt
pop
or
in
adc
rcl
jmp
dec
or
lock
les
rcr
push
adc
in
arpl
in
jl
loopne
dec
xchg
in
fs
sbb
inc
pop
xchg
hlt
inc
jns
lock
push
fldcw
push
aad
push
pop
lock
inc
std
aad
jae
push
je
push
fcomp
dec
or
hlt
pop
cmp
les
fld
jl
lods
pop
jl
in
pusha
loopne
adc
cmp
jnp
fucomp
pop
dec
popf
mov
adc
loopne
add
fnstenv
fucomp
push
dec
ror
or
gs
jl
loopne
ins
xchg
lods
jae
(bad)
les
fstp
push
dec
leave
fsub
fs
loopne
adc
loopne
adc
lock
mov
loopne
cmp
mov
push
pop
clc
fadd
loope
push
pop
fsubr
dec
fs
loopne
pusha
in
inc
add
clc
rol
aad
jae
leave
test
or
hlt
inc
adc
test
leave
aam
inc
leave
lock
xchg
fsub
(bad)
sar
in
pop
dec
popf
mov
inc
xchg
loopne
dec
fnsave
bound
loopne
or
fld
frstor
das
pop
mov
cmovs
(bad)
(bad)
inc
push
test
pop
dec
loope
or
mov
or
(bad)
je
fsub
(bad)
inc
gs
lods
push
js
loopne
push
stc
lods
pop
or
aam
pop
mov
pop
dec
std
in
dec
fucomp
push
pusha
in
and
shr
inc
adc
inc
push
adc
loopne
pop
clc
mov
pop
adc
fsub
fnstsw
jg
ffree
push
adc
in
dec
push
leave
loopne
pop
mov
push
pop
mov
jg
(bad)
pop
fadd
arpl
in
or
popa
jae
(bad)
hlt
push
fs
loopne
ins
(bad)
arpl
aad
dec
xchg
in
push
in
loopne
or
lds
dec
stc
test
adc
hlt
ja
stc
call
push
pop
fdivr
inc
cmp
loopne
ja
(bad)
jns
rcl
fldcw
push
pop
fcomp
jg
add
or
mov
ja
fnop
jnp
(bad)
les
xchg
leave
loopne
pop
push
loopne
add
loopne
pop
loope
inc
or
loopne
pop
mov
les
mov
inc
push
loope
inc
sbb
fadd
fld
pop
clc
fdiv
loope
inc
or
hlt
jnp
std
test
rol
ror
stc
mov
pop
clc
fcom
aam
les
loopne
inc
pop
stc
lods
arpl
in
dec
fld1
inc
or
fnstcw
stc
fcom
clc
lock
push
js
loopne
pop
leave
loopne
push
aad
jnp
leave
sar
fdiv
addr16
fnsave
or
xchg
hlt
push
pusha
fnstsw
jnp
fld
adc
jmp
test
pop
clc
rol
aad
jnp
in
push
pop
lock
pop
dec
fprem
and
jb
mov
inc
cmp
loopne
and
pop
pusha
enter
xchg
fnstenv
(bad)
in
hlt
arpl
inc
mov
loope
inc
push
(bad)
push
pop
loopne
inc
cmp
loopne
dec
pop
in
fmul
in
loopne
js
test
dec
loope
jg
fucom
inc
cmp
mov
arpl
stc
inc
or
loopne
dec
fnsave
arpl
pop
pop
xchg
lods
jg
add
addps
mov
sbb
fcom
mov
dec
dec
in
loopne
push
loope
sbb
arpl
shl
mov
adc
mov
inc
cmp
icebp
cli
pusha
xchg
fdivr
in
les
(bad)
push
pop
leave
loopne
pusha
mov
lods
pop
adc
in
push
pop
nop
hlt
inc
xchg
aad
inc
push
(bad)
inc
icebp
loopne
pusha
(bad)
pusha
fdiv
pcmpgtb
mov
inc
push
leave
lock
loopne
pop
fsubr
dec
leave
fdivr
rol
push
js
loopne
jl
loopne
jge
hlt
jle
xchg
loopne
pop
(bad)
loopne
add
stc
mov
js
loopne
pop
xchg
hlt
and
loope
adc
fdiv
add
or
lods
inc
inc
leave
lock
cmp
loopne
cmovl
test
pop
nop
mov
push
add
inc
push
in
rcr
leave
loopne
adc
hlt
inc
cmp
loopne
dec
pop
in
fadd
in
loopne
adc
mov
mov
loope
ja
clc
rol
aad
cmove
in
pop
enter
(bad)
push
int
pop
jl
fcom
shl
pop
pop
fdiv
push
pop
fld
jg
xchg
in
pop
(bad)
hlt
das
fnstsw
adc
fmul
mov
and
jmp
les
les
js
les
(bad)
loopne
pusha
lds
inc
jge
mov
pop
nop
loopne
dec
vzeroall
pop
xchg
in
ins
shr
inc
push
fnstenv
inc
sbb
lods
inc
push
(bad)
les
(bad)
inc
or
loopne
cmp
leave
in
fcomp
lds
vzeroall
pop
xchg
in
adc
test
pop
loopne
push
adc
loopne
sbb
mov
jnp
(bad)
arpl
vrcpps
test
pop
fcomp
or
xchg
hlt
adc
stc
mov
pop
clc
fcomp
pop
cld
movs
mov
fmul
pusha
push
loopne
imul
fmul
pusha
push
loopne
cmp
stc
popa
push
adc
rol
ffree
dec
dec
leave
loopne
or
fadd
fs
aam
jl
in
push
in
test
in
fadd
leave
lock
inc
push
mov
punpcklbw
(bad)
(bad)
inc
push
test
pop
dec
loope
or
mov
or
(bad)
je
fsub
(bad)
inc
jns
lods
push
pop
fdivr
jg
(bad)
pop
or
lock
dec
in
inc
push
stc
lods
push
pusha
in
hlt
arpl
push
pusha
and
push
pop
mov
ja
(bad)
jl
pusha
jnp
lea
in
jnp
in
jnp
xchg
inc
jnp
fdiv
jg
fsub
or
stc
fcom
pop
fcomp
ja
loope
inc
sbb
hlt
jae
fld
dec
loope
arpl
in
push
fucom
or
lods
sbb
fadd
lea
arpl
(bad)
pusha
push
fcom
fs
loopne
dec
fnsave
sbb
inc
pop
in
cmovl
lock
jns
lods
arpl
push
fs
loopne
sbb
in
cs
mov
popa
(bad)
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
dec
pop
clc
push
js
loopne
pop
leave
loopne
pusha
mov
loopne
pusha
(bad)
arpl
fnop
inc
dec
leave
lock
adc
mov
pop
fnsave
pop
dec
in
loop
xchg
loopne
push
loope
retf
fs
mov
std
stc
fdivr
in
pop
jl
in
push
loope
pop
pop
loopne
pop
aam
les
loope
retf
fs
mov
jge
fadd
nop
loopne
or
in
adc
jmp
arpl
rol
pop
leave
loopne
pusha
mov
loopne
ins
xchg
mov
or
inc
jg
leave
test
fs
loopne
push
in
jnp
(bad)
les
pop
fadd
inc
add
les
aam
ja
(bad)
loope
int3
sbb
inc
aad
int3
jg
loope
arpl
inc
pop
in
inc
push
in
jg
loope
inc
or
mov
js
loopne
pusha
leave
loopne
pusha
(bad)
hlt
mov
push
mov
or
in
pusha
aad
push
push
(bad)
inc
(bad)
fsub
and
(bad)
test
dec
pop
(bad)
pusha
(bad)
les
pusha
mov
lods
inc
sbb
fcom
xchg
lods
jnp
fst
pop
int3
in
ror
push
cmp
in
jae
pop
push
push
sbb
inc
rcr
mov
pop
popa
(bad)
fstp
fstp
fstp
fstp
fstp
fstp
inc
push
pop
popa
(bad)
fstp
fstp
fstp
fstp
fstp
test
fstp
fstp
fstp
fstp
fstp
fstp
fstp
inc
push
pop
popa
(bad)
fstp
fstp
fstp
fstp
fstp
popf
pop
popa
(bad)
fstp
fstp
fstp
fstp
fstp
fstp
lds
cmove
fadd
stc
in
fsub
rol
fstp
fstp
fstp
fstp
xchg
pop
popa
(bad)
fstp
fstp
fstp
fstp
fstp
fstp
aad
popa
(bad)
loope
(bad)
fxch
test
fstp
fstp
fstp
fstp
fstp
xchg
pop
popa
(bad)
fstp
fstp
fstp
fstp
fstp
fstp
mov
push
adc
aam
fstp
fstp
fstp
fstp
fstp
fstp
xchg
pop
popa
(bad)
fstp
fstp
fstp
fstp
fstp
fstp
(bad)
mov
push
adc
aam
fstp
fstp
fstp
fstp
fstp
fstp
lea
fstp
fstp
fstp
fstp
fstp
fstp
mov
push
adc
aam
fstp
fstp
fstp
fstp
fstp
fstp
xchg
pop
popa
(bad)
fstp
fstp
fstp
fstp
fstp
fstp
mov
push
adc
aam
fstp
fstp
fstp
fstp
fstp
fstp
in
popa
(bad)
fstp
fstp
fstp
fstp
fstp
fstp
fstp
inc
push
(bad)
fxch
pusha
(bad)
fstp
fstp
fstp
fstp
in
popa
(bad)
fstp
fstp
fstp
fstp
fstp
fstp
mov
jnp
fld
(bad)
(bad)
pusha
(bad)
fstp
fstp
fstp
fstp
fstp
in
popa
(bad)
fstp
fstp
fstp
fstp
fstp
fstp
(bad)
mov
jnp
fld
(bad)
(bad)
pusha
(bad)
fstp
fstp
fstp
fstp
fstp
test
fstp
fstp
fstp
fstp
fstp
fstp
fstp
inc
push
(bad)
fxch
pusha
(bad)
fstp
fstp
fstp
fstp
in
popa
(bad)
fstp
fstp
fstp
fstp
fstp
fstp
(bad)
fstp
inc
push
(bad)
fxch
pusha
(bad)
fstp
fstp
fstp
fstp
mov
fstp
fstp
fstp
fstp
fstp
fstp
fstp
inc
push
(bad)
fxch
pusha
(bad)
fstp
fstp
fstp
fstp
lds
jl
jns
jl
ins
sar
in
inc
pusha
rol
or
shl
fs
mov
(bad)
fsub
pusha
or
hlt
inc
ror
mov
adc
fdivr
fs
test
pop
(bad)
hlt
push
or
pop
pcmpeqb
ins
dec
or
hlt
jg
stc
fadd
or
mov
push
pop
pushf
in
or
fcom
adc
fdiv
fucomp
inc
rcl
push
ins
clc
rol
movs
sub
pop
jl
loopne
add
clc
rol
aad
push
dec
fnstcw
adc
fdivr
shl
dec
dec
fldlg2
inc
jge
lods
jbe
(bad)
loopne
pusha
mov
repz
xor
mov
outs
adc
inc
jmp
loope
push
pop
fcom
cmovl
mov
xchg
leave
mov
dec
mov
loopne
or
call
push
sbb
aad
dec
aad
jg
rol
jg
loope
jb
mov
add
fsub
stc
test
push
xchg
pusha
push
push
fnstenv
inc
or
fsubr
imul
ins
clc
mov
pop
fsubr
pop
pop
enter
adc
pop
js
mov
jl
imul
enter
aam
pop
pusha
aam
inc
ins
rcr
adc
(bad)
arpl
pop
call
jnp
in
xchg
inc
xchg
lea
inc
test
rcl
inc
leave
lods
ja
stc
hlt
inc
or
aad
lds
fmul
or
loopne
dec
(bad)
dec
fs
mov
add
rol
leave
rcl
loopne
adc
rcr
jp
(bad)
loopne
or
and
push
in
push
arpl
pop
pop
push
les
push
test
dec
aad
into
jl
loopne
jl
in
ret
loopne
pop
push
mov
adc
jnp
(bad)
mov
addr16
mov
jg
aad
das
jl
cmc
pop
pusha
aam
jae
rcr
repz
fdiv
xchg
ror
addps
inc
inc
xchg
test
(bad)
pop
enter
mov
lods
jg
mov
inc
fucom
cld
jg
test
jb
enter
adc
hlt
mov
dec
jg
xchg
les
fld1
into
jl
loopne
jl
in
ret
loopne
adc
loopne
ja
push
mov
xchg
leave
fcom
lea
dec
jl
aam
jno
push
or
mov
inc
xchg
icebp
hlt
inc
in
(bad)
ror
leave
sar
mov
arpl
fcom
in
dec
jnp
popf
mov
ja
push
hlt
arpl
retf
loopne
pop
(bad)
hlt
inc
shr
pop
loopne
adc
push
fadd
(bad)
sar
mov
loopne
jl
mov
push
(bad)
or
and
push
in
loopne
pop
int
push
or
sub
outs
in
dec
jnp
popf
mov
outs
jl
mov
dec
in
loope
pop
test
inc
int
sar
jmp
mov
push
imul
inc
aad
shl
icebp
push
jo
add
push
inc
adc
sar
fnstsw
fs
pop
push
(bad)
xchg
int
shl
loopne
push
(bad)
adc
hlt
retf
loopne
dec
in
outs
(bad)
inc
mov
addr16
leave
in
jnp
loope
xchg
mov
loopne
mov
shr
fcomp
cmovl
mov
jmp
fsubr
push
add
push
inc
sbb
in
loope
pop
call
test
xchg
shl
dec
lea
jg
mov
shl
icebp
adc
in
pop
gs
sbb
loopne
jl
loopne
jl
in
ret
loopne
pop
push
lods
jnp
adc
arpl
leave
lock
stc
rol
addr16
clc
cld
cmovl
mov
icebp
enter
or
pop
dec
add
push
arpl
(bad)
pusha
rcr
xchg
in
frstor
pop
fadd
dec
pop
in
fcom
mov
inc
adc
fadd
xchg
test
pop
push
int
out
std
loopne
xchg
rol
dec
lea
retf
dec
xchg
adc
fcom
f2xm1
inc
adc
aad
xchg
xchg
test
pop
push
int
out
std
loopne
xchg
rol
dec
lea
jnp
in
add
jne
in
test
sbb
in
subps
mov
pusha
int3
hlt
pop
fs
arpl
fadd
lea
repz
enter
imul
or
imul
frstor
adc
aad
fs
push
push
in
loopne
or
inc
punpcklbw
fdiv
fs
loope
pusha
in
data16
das
mov
ja
aad
dec
fs
mov
or
fmul
jmp
push
addr16
jne
ja
fstp
(bad)
addr16
mov
inc
or
mov
pop
clc
fdivr
ins
fadd
loope
dec
fs
mov
(bad)
fadd
or
inc
cmc
jne
pop
adc
fdivr
in
in
push
fst
pop
int3
fadd
dec
test
pop
dec
arpl
or
inc
cmc
leave
lock
dec
stc
fadd
fucom
aam
xor
jnp
fst
adc
mov
dec
xchg
ins
jg
jmp
fmul
ror
jae
imul
add
sar
push
push
pop
lea
sahf
pop
stc
ins
jnp
in
addps
pop
pop
popa
mov
jns
in
popf
xchg
lds
mov
adc
mov
ins
sbb
inc
cdq
loope
imul
(bad)
aad
movs
arpl
rcl
rol
jge
shl
cmp
or
loopne
push
aad
sbb
mov
inc
or
fsub
cld
test
jg
mov
(bad)
aad
movs
invd
gs
pop
std
loopne
sbb
stc
ins
jg
xchg
fsub
loopne
sahf
jl
ins
jnp
shl
retf
lds
fnop
inc
jns
or
cwde
lds
push
fcom
dec
(bad)
inc
push
fldcw
subps
in
in
rcr
arpl
jne
arpl
fcom
or
jmp
jae
fdiv
jnp
jne
push
adc
jo
fs
loopne
dec
stc
fdivr
xchg
int3
jnp
loope
dec
fs
mov
pop
stc
fdiv
(bad)
aam
in
fsub
arpl
fcom
sbb
push
arpl
fucomp
arpl
fdiv
fnstenv
repz
loopne
dec
fs
fdivr
loope
bound
fdiv
icebp
push
push
or
lods
arpl
(bad)
pusha
rcr
xchg
in
frstor
pop
fadd
push
adc
ror
fdivr
fld
pop
call
fadd
or
aam
cmp
movs
push
pop
cwde
movs
jg
adc
sbb
mov
adc
loope
jg
stc
fadd
in
jg
jne
dec
or
pusha
jnp
shr
push
in
loop
fadd
jne
pop
pop
enter
dec
lock
in
inc
push
in
loopne
jl
in
ret
loopne
xchg
imul
jg
loopne
cmp
add
popf
loope
push
fnsave
fs
inc
fucom
rol
push
rol
(bad)
out
add
cmp
push
fnop
repz
loopne
pop
fs
fsub
pop
call
inc
push
in
add
push
mov
inc
(bad)
test
xchg
test
push
dec
leave
aam
fs
clc
(bad)
ror
loopne
or
fadd
loope
dec
fs
mov
(bad)
fdiv
icebp
or
push
add
mov
mov
push
pop
in
jae
dec
lock
in
ja
frstor
pop
leave
test
or
das
mov
pop
push
aad
jg
loopne
jae
rcr
push
adc
mov
pusha
frstor
repnz
int
ja
in
ror
or
dec
in
fst
pop
mov
retf
fs
mov
(bad)
fdiv
icebp
or
pop
dec
sbb
loopne
in
in
ja
fcom
add
fld
pop
int3
les
dec
adc
pop
pop
loopne
repz
in
inc
cmp
test
shr
loope
pusha
(bad)
pop
fdiv
out
or
paddsw
inc
dec
fs
in
sar
fmul
stc
mov
(bad)
fadd
or
jnp
fst
pop
lea
jg
fld
push
fs
in
in
stc
push
dec
js
test
or
loopne
or
loopne
pop
shl
pop
adc
jnp
loope
inc
jl
mov
fs
addr16
mov
data16
mov
or
fadd
mov
jbe
nop
lods
dec
or
hlt
jg
clc
fcom
inc
adc
les
pop
xchg
mov
push
in
jnp
lea
jg
fadd
pop
pop
dec
lods
arpl
in
dec
(bad)
aam
adc
fadd
int
out
push
loopne
mov
and
data16
das
mov
dec
fs
in
or
fmul
jmp
push
jg
jne
dec
fs
in
sar
fmul
stc
mov
(bad)
fadd
or
subps
cmp
fisub
jae
mov
add
mov
inc
adc
mov
inc
jl
push
jg
xchg
fcomp
dec
leave
mov
dec
fstp
in
xchg
mov
adc
fdiv
enter
fsub
pop
pop
cwde
pop
sbb
dec
bound
fadd
xchg
mov
pop
loope
jg
(bad)
aam
icebp
loopne
pop
fs
fdivr
pop
les
(bad)
in
or
fmul
jmp
push
jg
jne
dec
fs
in
jmp
fldlg2
arpl
inc
rcr
aad
ror
mov
jmp
fldlg2
arpl
push
or
mov
inc
dec
leave
hlt
inc
cdq
leave
lods
jg
stc
fmul
adc
hlt
push
adc
xor
xchg
hlt
push
push
fsub
mulps
dec
das
mov
dec
fs
in
or
fmul
jmp
fadd
or
dec
dec
fs
fadd
stc
fmul
jl
loopne
jl
in
ret
loopne
pop
push
mov
push
push
les
loopne
jg
imul
adc
push
lods
jae
std
hlt
push
dec
in
inc
pop
(bad)
pop
dec
push
fcom
jmp
pop
or
hlt
jnp
fst
pop
lea
dec
dec
mov
out
shl
mov
add
dec
inc
or
fmul
(bad)
fadd
stc
fmul
leave
fsubr
in
call
imul
fnsave
cmp
lods
repnz
loope
dec
in
inc
rcr
ror
stc
mov
(bad)
fadd
or
jnp
fst
pop
lea
push
push
leave
call
inc
push
mov
mov
dec
test
pop
pusha
fsubr
jg
xchg
hlt
out
jns
push
pop
xor
jnp
(bad)
in
jae
in
or
lods
inc
in
in
jg
jne
dec
jl
pusha
jnp
(bad)
in
jae
in
or
lods
inc
in
in
out
xor
repz
push
inc
jg
imul
daa
or
cmp
fnsave
jnp
std
fsub
loope
out
adc
mov
mov
in
inc
or
push
jg
xchg
hlt
or
push
mov
dec
loope
cmovs
sub
cmovl
mov
pop
in
jg
imul
adc
loope
mov
fsubr
inc
cmp
lock
loope
dec
loope
repnz
push
hlt
imul
hlt
pop
or
jp
pushf
mov
pusha
cmp
mov
pop
fs
push
sbb
mov
ja
mov
mov
pop
adc
fdiv
enter
fsub
inc
in
fdiv
inc
add
inc
aad
lods
pop
dec
loope
out
push
enter
cwde
mov
out
popf
loope
xchg
xor
jg
add
mov
rcl
ins
inc
jns
movs
sbb
mov
push
add
mov
pop
xor
dec
jl
fdivr
(bad)
in
inc
push
in
dec
fs
fdiv
icebp
call
dec
(bad)
f2xm1
inc
aad
in
pop
cmp
in
addps
jg
loopne
repz
pop
xor
jne
das
pop
in
push
sbb
aad
add
mov
pop
dec
and
push
or
loope
or
in
punpckhbw
pop
or
jp
pushf
mov
pusha
cmp
xchg
les
rol
jg
rcr
pop
fcomp
in
inc
dec
cdq
mov
pop
xchg
les
rol
xchg
js
dec
inc
sbb
hlt
push
adc
aam
or
loopne
pusha
stc
lods
jb
enter
push
les
loopne
repz
pop
xor
add
adc
cmp
push
add
in
pop
fadd
dec
loope
into
aam
loopne
or
dec
jnp
popf
mov
ja
jmp
fxch
push
loope
push
adc
mov
xchg
loopne
pop
aam
pop
push
push
les
loopne
repz
pop
xor
jne
ja
stc
rol
in
out
jns
push
pop
xor
push
dec
sbb
pop
adc
fmul
cdq
fldz
cmp
push
retf
loope
pusha
fldcw
cli
or
in
loopne
loope
loope
dec
repnz
push
ror
push
mov
or
loopne
pop
aam
pop
dec
dec
in
icebp
xchg
test
pop
mov
push
pop
in
lock
loopne
or
pop
inc
push
fcomp
pop
jo
pop
in
cwde
cmp
jne
ja
stc
rol
in
out
jns
push
pop
xor
push
dec
sbb
pop
adc
fmul
cdq
fldz
std
jmp
lods
arpl
fsub
(bad)
pusha
rcr
xchg
in
frstor
in
fst
pop
adc
fdiv
enter
std
sub
jg
leave
fsub
xchg
lock
adc
push
pop
rol
daa
pop
fdiv
dec
xchg
loopne
sbb
sar
fadd
adc
das
pop
cld
hlt
arpl
adc
or
in
loope
shl
push
jl
cld
push
or
mov
jg
mov
pop
adc
jnp
loope
inc
jl
mov
adc
loopne
pop
(bad)
loopne
ins
clc
fdivr
ins
hlt
push
push
fsub
sbb
add
push
in
icebp
int3
in
sbb
mov
jge
fst
pop
in
arpl
fdiv
fdiv
out
std
jne
pop
pop
in
arpl
fadd
fst
pop
std
hlt
inc
ins
clc
hlt
adc
imul
fst
pop
std
hlt
repz
clc
hlt
adc
mov
dec
imul
arpl
inc
mov
test
pusha
aad
inc
popf
leave
shr
add
add
xchg
push
pop
xor
inc
push
xchg
mov
pop
loope
jg
(bad)
aam
in
loopne
out
popf
jne
dec
dec
mov
dec
jl
loopne
lds
fadd
pop
clc
lods
repz
pop
xor
adc
js
loope
pusha
leave
aam
pop
fdiv
inc
aad
in
adc
fcom
int
inc
popf
leave
ror
mov
inc
popf
rcl
ficomp
loopne
int
loopne
or
fcom
dec
(bad)
xchg
inc
pop
xchg
int3
arpl
in
dec
fld1
push
fsubr
push
pop
pushf
movs
rcl
add
fnsave
pop
add
rcl
add
frstor
inc
fnsave
out
jns
push
pop
xor
jnp
shr
push
in
out
jge
push
jnp
in
dec
adc
mov
or
sar
stc
fadd
in
push
adc
cmp
pop
pop
fsubr
jl
loopne
jl
in
ret
loopne
add
call
loope
pop
in
xchg
loopne
push
fnstsw
into
aam
loopne
fsubr
ret
pop
fs
cld
ins
xor
cld
pop
loopne
in
xor
inc
xchg
jne
inc
in
or
sub
pop
pop
jo
xchg
imul
mov
ja
leave
shr
jns
push
pop
adc
mov
add
cmp
in
in
push
or
add
call
push
rcl
loopne
pop
dec
je
mov
repz
dec
sub
pop
pusha
xor
fsubr
sti
loopne
inc
out
adc
push
jb
pushf
mov
add
nop
lods
out
int
push
jecxz
dec
jo
int3
(bad)
fisttp
mov
jns
repz
inc
xor
pop
add
icebp
adc
sti
call
pop
shr
adc
adc
adc
xchg
movs
out
test
(bad)
in
or
adc
je
ret
cld
fst
mov
ror
push
aad
cmp
mov
add
fsub
repz
fs
add
fmul
jl
test
lea
or
hlt
out
xchg
fst
fldcw
rol
lods
dec
fs
mov
(bad)
fadd
or
loopne
jl
fadd
leave
lods
adc
leave
lods
pop
in
fcomp
push
sbb
(bad)
pop
f2xm1
ret
loopne
add
cmp
pusha
loopne
repz
shl
pop
fs
fcom
push
pop
call
jnp
(bad)
les
xchg
fmul
or
fsubr
pop
fsubr
or
cwde
imul
pusha
leave
cld
into
jl
loopne
jl
in
repnz
in
arpl
shr
enter
cwde
mov
inc
ror
test
pop
in
mov
inc
xchg
in
retf
loopne
pop
in
sbb
dec
push
dec
sbb
pop
push
aad
jg
loopne
repz
shl
dec
pop
dec
mov
lea
jns
push
pop
xor
push
or
fcom
inc
shl
sbb
fdiv
rcr
push
add
mov
fadd
(bad)
ror
loope
ja
loopne
inc
int
push
or
jne
pusha
(bad)
in
fdiv
addr16
jne
jnp
fnstsw
dec
lds
in
int3
ror
cmp
ins
jnp
pushf
mov
adc
(bad)
repnz
lock
sbb
mov
add
cmp
pusha
loopne
jnp
shl
add
je
pop
dec
(bad)
pop
dec
frstor
fs
loope
pop
xchg
mov
in
push
in
or
arpl
fcom
fnsave
adc
fdiv
icebp
fcom
inc
xchg
test
inc
fucom
in
imul
data16
das
mov
push
push
in
pop
adc
fdivr
fnop
out
in
fcom
jne
jnp
mov
lock
leave
test
pop
in
inc
or
jge
cmp
mov
inc
pusha
xchg
mov
in
int3
lods
add
je
inc
cmp
imul
adc
pop
fs
cli
loopne
loope
vandnpd
add
movs
retf
loope
pop
in
retf
dec
ja
fucomp
arpl
shl
loopne
or
test
or
imul
frstor
sbb
popf
test
push
pusha
in
mov
(bad)
loopne
or
loope
adc
mov
pop
clc
in
pop
push
ins
jg
push
in
icebp
int3
in
pusha
cmp
xchg
fsub
xchg
lods
dec
fs
repnz
call
fsub
pop
call
or
jg
in
repz
loopne
ja
jge
daa
pop
(bad)
in
pop
fmul
(bad)
arpl
jne
arpl
fcom
push
fst
dec
fnstenv
invd
dec
mov
dec
mov
shl
adc
lods
dec
in
sbb
addr16
jne
inc
ins
fst
or
lods
arpl
(bad)
pusha
rcr
xchg
in
frstor
pop
fadd
jp
fchs
push
jl
loopne
or
fadd
mov
loopne
pop
imul
clc
fcom
pop
mov
fmul
mov
pop
push
push
les
loopne
inc
or
in
inc
ins
fucom
adc
stc
fdiv
icebp
enter
dec
mov
dec
mov
shl
adc
lods
dec
pop
sbb
push
sbb
gs
pop
mov
mov
inc
fnop
ja
fadd
inc
adc
pusha
arpl
fnstcw
daa
in
mov
pop
or
das
gs
lods
sbb
mov
pop
dec
stc
test
fs
fdiv
icebp
call
add
adc
test
arpl
jne
arpl
fmul
stc
in
jl
dec
jnp
(bad)
in
inc
push
in
dec
fs
fsubr
test
push
push
adc
mov
push
push
fsubr
jb
pushf
loope
pop
mov
fcom
pusha
fsubr
jnp
in
paddsb
scas
pop
add
pop
pop
xchg
push
jg
push
in
icebp
int3
in
cmp
mov
push
sbb
dec
inc
push
in
dec
jl
pusha
jnp
(bad)
in
inc
push
in
dec
fs
fsubr
in
call
and
cmps
in
fsubr
jne
arpl
daa
pusha
fsubr
jae
rcr
addr16
das
pop
in
push
sbb
aad
add
mov
inc
push
in
mov
pop
loope
(bad)
sbb
mov
adc
cld
dec
fs
push
adc
iret
mov
int3
add
dec
imul
dec
fs
fmul
jmp
push
es
adc
add
mov
mov
icebp
push
gs
shl
fmul
pop
mov
dec
fst
pop
imul
inc
mov
in
rcr
inc
pusha
jne
inc
pop
fdiv
push
dec
add
jle
fsub
jle
mov
push
ins
jne
pop
fs
sbb
in
push
adc
repnz
mov
mov
xor
mov
inc
xchg
f2xm1
(bad)
std
hlt
push
pop
loopne
pcmpeqb
dec
adc
in
inc
(bad)
loopne
or
sub
push
pop
imul
or
lods
addr16
lods
jnp
in
cmp
bound
mov
ins
mov
or
bound
test
ins
xor
or
out
popf
loope
pop
in
cmovl
mov
pop
enter
or
add
fsubr
into
adc
pop
inc
(bad)
push
push
fstp
fldcw
push
pop
in
(bad)
adc
loope
adc
push
jnp
jne
retf
loopne
js
mov
imul
js
mov
ins
in
shr
ja
fadd
adc
(bad)
jnp
pop
in
ja
in
addr16
mov
jae
rcr
jnp
jne
ficom
in
aam
pop
enter
cwde
aad
sbb
repnz
cwde
test
push
push
f2xm1
dec
fs
mov
push
stc
fdiv
icebp
loopne
(bad)
jmp
loope
arpl
(bad)
pusha
push
fsubr
imul
les
loope
jnp
in
repnz
push
test
or
push
push
adc
push
push
f2xm1
dec
fs
mov
push
stc
fdiv
icebp
loopne
out
imul
jl
dec
pop
push
(bad)
call
repnz
push
fadd
or
in
in
clc
fdivr
jne
subps
lods
jnp
(bad)
les
in
repnz
push
fadd
or
test
pusha
cmp
lea
repz
enter
imul
icebp
call
mov
jae
(bad)
in
or
fptan
icebp
push
in
or
inc
retf
loopne
in
clc
fadd
jne
jg
std
les
loope
jg
in
repz
loopne
(bad)
jmp
fxch
repz
or
sbb
mov
dec
pusha
aam
jae
rcr
out
shl
or
imul
in
arpl
jne
arpl
dec
fs
fdiv
icebp
push
fmul
add
mov
jg
in
jnp
in
repnz
push
or
leave
lods
jg
loopne
daa
sbb
or
fdivr
in
repnz
push
fcomp
push
in
imul
push
(bad)
icebp
loopne
retf
dec
iret
pop
stc
fdiv
icebp
nop
hlt
arpl
fmul
dec
aad
jnp
in
repnz
push
ins
inc
adc
push
jg
loope
push
pusha
fsubr
aad
push
jg
loope
push
in
fdivr
jnp
jne
inc
inc
in
dec
fs
fsubr
aad
push
jg
loopne
pop
dec
push
in
pusha
in
loope
icebp
rcr
inc
loope
lods
or
ret
loopne
pop
enter
xchg
fnstcw
inc
shr
rcl
fdivr
in
test
adc
push
jg
std
fsub
mov
bound
mov
push
add
jnp
popf
mov
dec
pop
stc
fdivr
(bad)
icebp
loopne
retf
dec
(bad)
pusha
stc
fmul
adc
push
jg
cmp
icebp
loopne
pop
sbb
test
pusha
rcr
punpcklbw
repnz
push
in
in
push
xor
add
mov
pop
push
leave
call
repnz
push
jne
adc
hlt
arpl
fcom
imul
jl
in
dec
fs
out
adc
mov
cmovl
lods
jg
stc
fdiv
icebp
loopne
retf
dec
repz
fsubr
push
lea
loope
jg
icebp
mov
icebp
loopne
into
jl
dec
adc
repz
ror
pop
sbb
les
mov
jnp
in
pop
or
jnp
mov
dec
and
mov
push
loope
adc
repnz
push
push
jg
xor
pop
rcl
pop
pop
fldcw
pop
push
aad
pop
pop
fldcw
adc
repnz
push
les
mov
fmul
imul
fs
in
jg
mov
or
dec
imul
in
retf
fs
mov
icebp
clc
fsub
cdq
mov
or
call
jnp
in
repz
mov
pop
sbb
test
push
cdq
mov
or
call
jnp
in
repz
mov
xchg
js
dec
sahf
pop
leave
loopne
jmp
fsubr
push
pop
xchg
lods
jnp
adc
arpl
leave
lock
stc
rol
addr16
clc
cld
cmovl
mov
icebp
enter
cmp
(bad)
fs
fsubr
in
out
cmc
jne
imul
add
cmp
fs
loopne
cmp
imul
rcr
out
stc
xchg
push
xchg
fs
and
push
mov
fs
mov
pusha
clc
fcomp
stc
fsubr
pusha
loopne
jae
cld
mov
shl
push
in
shr
ja
fadd
jnp
fucomp
dec
or
call
repz
loopne
jnp
sbb
mov
test
es
push
fdivr
leave
lock
loope
into
or
dec
arpl
mov
fdivr
in
repz
in
jg
rcr
pop
fcomp
in
and
mov
fs
mov
push
stc
fdivr
loope
repnz
push
ins
jnp
in
out
add
cmp
pusha
rcr
repz
fdiv
dec
xchg
in
adc
gs
push
clc
in
pop
aad
inc
or
hlt
subps
les
rcr
jae
jne
das
pop
clc
shl
std
hlt
or
pop
adc
push
pop
f2xm1
pop
adc
sar
in
xchg
dec
push
xor
fcomp
sbb
fsubr
push
or
jnp
(bad)
sbb
xchg
test
add
test
dec
jne
and
hlt
mov
dec
pop
rol
retf
fs
mov
icebp
clc
fcom
push
push
les
loopne
and
mov
in
ins
mov
add
inc
sbb
cwde
rol
mov
inc
xchg
in
push
dec
lea
dec
fs
sar
mov
push
sbb
lods
ret
loope
pop
xchg
mov
in
in
les
jne
pop
push
aad
jg
loopne
jae
rcr
repz
fdiv
pop
stc
fadd
or
fdiv
imul
inc
(bad)
rcl
adc
ror
imul
fs
fsubr
in
call
jmp
or
enter
jne
pcmpeqb
in
pusha
enter
in
out
shl
sbb
test
in
loopne
jnp
jne
jnp
leave
mov
inc
or
fdiv
icebp
push
in
push
push
shr
jns
push
push
push
fldcw
push
or
fptan
icebp
push
fcomp
ins
fmul
imul
push
lds
out
in
mov
jne
dec
jl
sar
(bad)
in
repz
in
dec
pop
in
fsub
in
call
dec
fs
fsubr
in
call
popa
das
pop
enter
push
in
pusha
int
daa
push
fnsave
inc
std
in
xchg
leave
lods
daa
push
fnsave
inc
std
in
hlt
leave
lods
daa
push
fnsave
inc
std
in
or
lods
subps
les
push
fnsave
inc
std
in
dec
leave
lods
scas
dec
and
sar
int
inc
pusha
rol
or
shl
adc
mov
jl
in
push
fnsave
inc
std
in
push
leave
lods
pop
pop
loopne
pop
aam
les
loope
retf
fs
mov
jge
fadd
nop
loopne
or
in
adc
jmp
adc
leave
in
push
pop
leave
loopne
pusha
mov
loopne
ins
xchg
mov
sbb
in
dec
xchg
fmul
int
jg
ffree
jg
leave
test
pusha
(bad)
les
fnop
inc
dec
fnstcw
dec
shl
inc
pop
in
jg
shl
pusha
clc
hlt
repnz
push
in
pop
in
arpl
stc
push
js
loopne
inc
xchg
fmul
jl
loopne
jl
ins
repnz
in
xchg
fldenv
xchg
in
inc
rcl
mov
inc
stc
fdiv
xchg
fadd
(bad)
addr16
mov
cld
inc
pop
loope
ret
loopne
icebp
push
(bad)
inc
(bad)
inc
or
test
js
loopne
dec
leave
loopne
adc
test
push
xchg
loopne
je
les
fdiv
repnz
clc
mov
or
in
push
js
loopne
dec
leave
loopne
adc
test
cmp
rol
hlt
inc
pusha
xchg
loopne
in
frstor
dec
fstp
push
js
loopne
fs
loopne
adc
test
dec
popf
fcomp
clc
fmul
mov
ja
aad
repnz
sbb
dec
imul
pusha
leave
test
pop
shl
pop
in
pop
aam
les
loopne
ja
and
pop
dec
jne
loop
in
punpcklbw
mov
adc
fdivr
enter
inc
fcom
js
loopne
dec
leave
loopne
adc
test
push
xchg
mov
in
fadd
rol
bound
fdivr
vzeroall
dec
fnop
inc
pusha
(bad)
loopne
push
clc
in
pop
pop
shr
add
pop
inc
push
in
hlt
jg
in
inc
cmp
loopne
jb
leave
aam
pop
stc
ror
dec
int
addr16
lods
arpl
ja
in
jg
fucom
inc
adc
mov
inc
in
int
push
pop
fmul
cmovl
test
pop
xchg
loopne
fs
lods
inc
jge
lock
cmovl
mov
pop
in
inc
cmp
loopne
or
fadd
(bad)
cmovl
mov
and
rcr
loope
push
js
fsub
rcl
(bad)
fs
loopne
pop
(bad)
hlt
jle
int3
les
inc
fadd
loope
inc
adc
(bad)
hlt
pcmpgtb
mov
jp
int
addr16
fnsave
pop
dec
xchg
les
fucom
inc
cmp
mov
inc
pop
xchg
hlt
push
pusha
lea
jnp
fdiv
dec
or
hlt
pop
cmp
les
(bad)
inc
or
lock
stc
fdiv
icebp
in
imul
shl
cld
retf
fs
mov
sbb
fdiv
fld
jl
ins
inc
inc
ror
jg
adc
jnp
fst
pop
enter
loope
inc
ins
std
hlt
adc
fdivr
(bad)
inc
or
test
push
std
hlt
dec
fs
mov
pop
stc
fmul
dec
int
ja
nop
lods
arpl
pop
xchg
icebp
loopne
pop
enter
sbb
fsubr
(bad)
in
jg
xchg
les
fucom
push
adc
mov
pop
xor
hlt
mul
jg
rol
cmp
loopne
pop
push
push
les
loopne
ja
and
dec
je
fadd
rol
bound
fdivr
vzeroall
dec
fnop
jbe
(bad)
fdivr
rol
push
push
sar
icebp
loopne
sbb
inc
pop
pop
loopne
sar
loope
invd
popf
(bad)
pusha
in
addps
pop
dec
popf
in
pop
xchg
loopne
or
rol
shr
jne
hlt
inc
push
leave
test
cmp
loopne
inc
popf
les
pop
fadd
jg
jmp
ror
ffree
inc
adc
leave
fcomp
dec
(bad)
les
stc
loope
push
clc
in
inc
inc
loopne
push
pop
pop
lock
sbb
mov
inc
jo
retf
loope
pop
clc
in
sbb
inc
cmc
leave
mov
inc
je
push
or
loopne
cmp
loopne
pop
push
push
les
loopne
ja
aad
push
pop
in
pop
push
leave
in
addr16
fnsave
push
sbb
icebp
arpl
loope
out
in
in
arpl
jne
arpl
fcom
(bad)
das
in
enter
jne
dec
or
fsub
mov
fsub
xchg
fadd
(bad)
fadd
fsub
inc
pop
fsub
inc
pop
fsub
inc
pop
fsub
pop
push
aad
jg
loopne
pop
in
loopne
jg
je
pop
push
aad
jg
loopne
jnp
stc
mov
fs
int3
pop
adc
adc
jnp
(bad)
les
fsub
inc
pop
fsub
jg
leave
fmul
stc
mov
jge
fcomp
jl
fdivr
icebp
les
jl
mov
adc
cld
invd
(bad)
in
icebp
enter
leave
fmul
stc
mov
jge
fcomp
jl
fdivr
icebp
les
mov
jl
in
inc
pop
in
jg
leave
fmul
stc
mov
jge
fcomp
jl
fdivr
icebp
les
fld
pop
dec
sbb
popa
(bad)
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
inc
pop
xchg
(bad)
or
push
shl
pusha
(bad)
xchg
ss
adc
rol
jnp
fisub
mov
pop
xchg
(bad)
or
xor
push
imul
iret
pop
popa
mov
adc
mov
adc
xchg
adc
mov
adc
test
into
mov
xor
cwde
(bad)
rcr
jne
das
pop
popa
(bad)
cmps
ror
pop
pop
(bad)
std
pop
popa
cmp
dec
jecxz
xchg
mov
das
mov
adc
cmp
sub
mov
adc
cmp
adc
mov
adc
add
dec
jge
fstp
xchg
pop
popa
mov
adc
mov
adc
rcl
inc
retf
(bad)
xchg
imul
(bad)
pop
popa
mov
adc
mov
fild
mov
adc
mov
jb
mov
adc
pop
adc
in
xchg
pop
pusha
mov
adc
mov
je
(bad)
xchg
xchg
bound
xchg
adc
mov
adc
(bad)
fst
lock
dec
(bad)
xchg
xchg
bound
not
outs
push
fimul
int
xchg
pop
sub
call
jecxz
cmp
stos
cmp
sub
mov
imul
cmp
stos
cmp
or
sti
fsub
push
adc
popa
out
xor
aad
in
mov
adc
mov
inc
jbe
(bad)
xchg
pop
popa
mov
adc
push
fstp
(bad)
or
sbb
fisub
mov
adc
pop
and
ror
int
fld
(bad)
or
ret
xor
popa
(bad)
fldenv
pop
(bad)
xchg
pop
popa
mov
adc
(bad)
cmp
sar
pop
pop
cmp
cmps
sahf
ret
push
cli
int
popa
(bad)
fld
mov
adc
mov
adc
xchg
adc
shl
xchg
stc
cmps
aam
cli
js
test
popa
pop
adc
ret
pusha
(bad)
(bad)
ret
pusha
(bad)
fld
outs
push
jae
ret
pusha
(bad)
fstp
ret
pusha
(bad)
fst
or
imul
pop
push
xchg
(bad)
or
and
mov
adc
fmul
adc
xlat
fadd
(bad)
fstp
mov
adc
pop
adc
ret
pusha
(bad)
fnstcw
pop
adc
ret
pusha
(bad)
fldenv
push
jae
ret
pusha
(bad)
fld
push
jae
ret
pusha
(bad)
fnstenv
or
sbb
imul
sbb
(bad)
or
imul
loopne
fcmovne
mov
(bad)
mov
mov
adc
xlat
fadd
(bad)
fstp
mov
adc
aam
call
jnp
xchg
adc
push
fsubr
fimul
xchg
adc
enter
cmp
scas
gs
or
xor
adc
pop
popf
(bad)
and
or
mov
adc
push
fisubr
sar
popa
push
fimul
std
int3
mov
push
popa
push
fimul
gs
cmc
pop
popa
push
fisubr
gs
xor
pop
stos
cmps
xor
mov
xchg
and
adc
pop
gs
xchg
(bad)
or
ror
movs
jge
fstp
mov
adc
xor
dec
jge
fstp
xchg
pop
sub
(bad)
jno
retf
adc
pop
popf
(bad)
and
or
mov
adc
push
fisubr
rcr
(bad)
cmc
push
popa
push
fimul
std
int3
add
(bad)
cmc
push
popa
push
fimul
gs
cmc
pop
popa
push
fisubr
gs
xor
pop
pop
(bad)
xor
push
pop
(bad)
xor
and
popa
ficomp
pop
popa
push
fisubr
popa
(bad)
fst
sub
push
xchg
(bad)
in
pusha
ret
mov
(bad)
fstp
xor
fcomp
(bad)
fstp
xchg
adc
pusha
sbb
das
(bad)
aad
popa
add
test
popf
ret
jbe
fstp
xchg
pop
popa
mov
adc
vpsubb
test
(bad)
fstp
jne
das
pop
popa
(bad)
mov
pminub
(bad)
fstp
xchg
pop
sub
inc
fist
mov
fdivr
(bad)
rcr
(bad)
aad
popa
add
cmp
popa
adc
sahf
bound
test
test
xchg
adc
mov
nop
repnz
mov
ret
inc
mov
adc
mov
push
xchg
(bad)
or
pusha
rcr
test
leave
xchg
(bad)
(bad)
xchg
pop
popa
mov
adc
cdq
loope
cmp
hlt
pusha
(bad)
movs
bound
imul
pop
pusha
(bad)
and
or
mov
das
rcr
adc
(bad)
(bad)
xchg
pop
popa
mov
adc
push
fimul
(bad)
fstp
xchg
pop
sub
rol
adc
(bad)
popa
mov
adc
mov
adc
push
fisubr
shl
gs
cmc
pop
popa
push
fimul
std
int3
sbb
cmc
push
popa
push
fimul
gs
cmc
pop
popa
push
fisubr
gs
xor
pop
stos
iret
xor
mov
das
aad
mov
adc
sub
push
xchg
(bad)
or
cld
jge
fst
mov
adc
rol
adc
(bad)
popa
mov
adc
lock
adc
aad
(bad)
jmp
test
push
fimul
gs
cmc
pop
popa
push
fisubr
gs
xor
pop
stos
sysexit
push
mov
outs
lds
mov
(bad)
fstp
xchg
pop
sub
mov
adc
xor
dec
jge
fstp
xchg
pop
sub
mov
adc
aad
(bad)
jmp
pop
repnz
test
jmp
test
jmp
test
sub
pop
popa
sub
xchg
shr
mov
xchg
lock
and
fdiv
popa
mov
adc
xlat
fadd
(bad)
fstp
mov
adc
(bad)
test
jmp
test
jmp
test
jmp
test
sub
pop
popa
sub
xchg
sub
xor
into
adc
fdiv
popa
mov
adc
mov
inc
jbe
(bad)
xchg
pop
popa
mov
adc
call
fadd
test
jmp
test
jmp
test
jmp
test
sub
pop
popa
sub
xchg
mov
sub
or
fdiv
popa
mov
adc
mov
inc
jbe
(bad)
xchg
pop
popa
mov
adc
pop
adc
ret
pusha
(bad)
fnstenv
ret
pusha
(bad)
fld
push
adc
ret
pusha
(bad)
fstp
push
jae
ret
pusha
(bad)
fldlg2
addr16
test
sbb
in
sbb
mov
adc
mov
adc
push
fisubr
rol
popa
push
fimul
std
int3
inc
pop
gs
cmc
push
popa
push
fimul
gs
cmc
pop
popa
push
fisubr
gs
xor
pop
stos
mov
and
jmp
and
mov
adc
(bad)
cmps
sti
hlt
pop
mov
fisubr
rol
(bad)
cmc
push
popa
push
fimul
std
int3
jp
gs
cmc
push
popa
push
fimul
gs
cmc
pop
popa
push
fisubr
gs
xor
pop
stos
fwait
xor
and
sti
jns
mov
mov
adc
call
fadd
test
push
fimul
std
int3
jp
gs
cmc
push
popa
push
fimul
gs
cmc
pop
popa
push
fisubr
gs
xor
pop
stos
ja
push
mov
push
aad
mov
adc
xchg
(bad)
or
push
shl
pusha
cmp
adc
mov
adc
push
fisubr
shr
(bad)
cmc
pop
popa
push
fimul
std
int3
jp
gs
cmc
push
popa
push
fimul
ins
push
jae
retf
pusha
ret
mov
push
ror
push
and
(bad)
fstp
sub
jns
jae
es
sub
mov
push
xchg
ret
pusha
(bad)
(bad)
lock
pop
dec
(bad)
fst
pop
nop
inc
pop
dec
(bad)
fst
mov
jne
dec
(bad)
aad
(bad)
jmp
test
sysexit
pop
stos
jg
push
mov
pop
lds
mov
(bad)
fstp
xchg
pop
sub
xor
dec
jge
fstp
xchg
pop
sub
mov
adc
aad
(bad)
jmp
pop
jp
fadd
test
jmp
test
push
fisubr
ins
or
pusha
mov
or
inc
mov
jmp
pusha
mov
adc
mov
adc
xlat
fadd
(bad)
fstp
mov
adc
into
fldcw
fwait
pop
pop
(bad)
cmc
inc
popa
mov
adc
mov
jb
mov
adc
fld
and
out
les
(bad)
test
jmp
test
jmp
test
jmp
test
sub
pop
popa
sub
xchg
mov
mov
xchg
test
das
sbb
fdivr
mov
fisubr
popa
pop
and
rcl
das
mov
adc
push
fimul
mov
adc
pop
adc
ret
pusha
(bad)
fnstcw
pop
adc
ret
pusha
(bad)
fldenv
push
jae
ret
pusha
(bad)
fld
push
jae
ret
pusha
(bad)
fnstenv
or
sbb
or
dec
mov
push
sbb
(bad)
or
das
ins
(bad)
fchs
(bad)
fmulp
mov
es
fwait
mov
adc
mov
adc
fst
add
fst
sbb
jne
dec
(bad)
fst
push
xor
dec
(bad)
fst
faddp
adc
into
push
jmp
lea
or
ins
(bad)
fstp
(bad)
fdivrp
rcr
es
dec
xchg
adc
enter
rcr
cld
fbstp
fisubr
ror
gs
cmc
push
popa
push
fimul
std
int3
inc
pop
gs
cmc
push
popa
push
fimul
gs
cmc
pop
popa
push
fisubr
gs
xor
pop
stos
push
xor
and
mov
and
adc
jbe
xchg
mov
das
mov
adc
push
fisubr
shl
ins
pop
adc
retf
pusha
adc
dec
(bad)
fst
and
jne
dec
(bad)
fst
rol
adc
into
push
std
lea
push
fisttp
(bad)
fst
cmp
ret
fwait
mov
adc
mov
adc
aad
(bad)
jmp
pop
repnz
test
jmp
test
jmp
test
sub
pop
popa
sub
xchg
clc
sub
xchg
sbb
das
or
fdivr
mov
es
dec
xchg
adc
mov
jae
ret
pusha
(bad)
fnstenv
gs
adc
ret
pusha
(bad)
fst
adc
ret
pusha
(bad)
fstp
push
jae
ret
pusha
(bad)
fldlg2
addr16
push
mov
or
mov
sbb
(bad)
or
sbb
fisub
mov
adc
(bad)
test
jmp
test
jmp
test
jmp
test
sub
pop
popa
sub
xchg
shr
xor
movs
xchg
loopne
das
adc
fdivr
mov
es
dec
xchg
adc
mov
adc
(bad)
test
jmp
test
jmp
test
jmp
test
sub
pop
popa
sub
xchg
shr
xor
movs
xchg
loopne
das
adc
fdivr
mov
es
dec
xchg
adc
mov
adc
(bad)
test
jmp
test
jmp
test
jmp
test
sub
pop
popa
sub
xchg
shr
xor
movs
xchg
loopne
das
adc
fdivr
mov
es
dec
xchg
adc
mov
adc
(bad)
cmps
mov
pop
mov
fisubr
rol
(bad)
cmc
push
popa
push
fimul
std
int3
jp
gs
cmc
push
popa
push
fimul
gs
cmc
pop
popa
push
fisubr
gs
xor
pop
stos
push
xor
and
mov
and
adc
jbe
xchg
mov
das
mov
adc
push
fisubr
ror
aaa
ret
pusha
(bad)
frndint
fs
jae
retf
pusha
xor
dec
(bad)
aad
bound
fld
sub
xchg
sbb
mov
xchg
cmp
das
sub
fdivr
mov
fisubr
popa
pop
adc
ret
pusha
(bad)
fld
pop
adc
ret
pusha
(bad)
ftst
push
adc
ret
pusha
(bad)
fldlg2
gs
jae
ret
pusha
(bad)
fnstenv
je
sbb
or
movs
mov
and
push
xchg
(bad)
or
push
ins
(bad)
fstp
push
cmp
ret
fwait
mov
adc
push
fisubr
shl
gs
cmc
pop
popa
push
fimul
std
int3
sbb
cmc
push
popa
push
fimul
gs
cmc
pop
popa
push
fisubr
gs
xor
pop
stos
(bad)
xor
mov
daa
aad
mov
adc
sub
push
xchg
(bad)
or
(bad)
jns
fisub
mov
adc
adc
ret
pusha
mov
adc
mov
adc
push
fisubr
ror
aaa
ret
pusha
(bad)
frndint
outs
push
jae
ret
pusha
(bad)
fld
bound
jae
ret
pusha
(bad)
fnstenv
sbb
or
movs
mov
sub
push
xchg
(bad)
or
add
(bad)
fst
cmp
ret
fwait
mov
adc
push
fisubr
shr
(bad)
cmc
pop
popa
push
fimul
std
int3
jp
gs
cmc
push
popa
push
fimul
ins
push
jae
retf
pusha
ret
mov
push
aad
mov
push
xor
ins
(bad)
fstp
push
cmp
ret
fwait
mov
adc
add
test
gs
fnstenv
push
ret
pusha
(bad)
fldenv
adc
ret
pusha
(bad)
(bad)
retf
pusha
xor
dec
(bad)
aad
bound
fld
sub
xchg
movs
sub
xchg
(bad)
retf
hlt
(bad)
cmps
mov
push
mov
fisubr
popa
pop
and
rcl
das
mov
adc
push
fisubr
rol
ins
pop
adc
ret
pusha
(bad)
fldlg2
gs
jae
retf
pusha
xor
dec
(bad)
aad
bound
fld
sub
xchg
movs
sub
xchg
(bad)
retf
hlt
(bad)
cmps
mov
push
mov
fisubr
gs
and
rcl
das
mov
adc
cmp
stos
call
int3
mov
xchg
into
or
pusha
jns
aad
bound
xchg
adc
adc
into
or
adc
aad
bound
xchg
adc
mov
inc
jbe
xchg
mov
das
mov
adc
fisub
(bad)
jno
pusha
xchg
mov
popf
(bad)
xchg
cmp
adc
mov
adc
xor
popa
cmp
movs
sahf
data16
mov
jno
pusha
xchg
mov
popf
(bad)
xchg
cmp
adc
mov
das
xor
popa
cmp
movs
sahf
data16
pusha
xchg
mov
popf
(bad)
xchg
cmp
adc
outs
or
and
and
or
xchg
pop
sub
mov
adc
(bad)
(bad)
popa
and
test
sahf
sbb
or
mov
adc
(bad)
(bad)
popa
(bad)
fstp
mov
adc
adc
popa
push
xchg
fcmove
mov
fstp
mov
adc
mov
adc
aam
test
add
and
xchg
adc
enter
int3
pop
(bad)
pop
pushf
(bad)
xchg
cmp
adc
mov
adc
(bad)
or
nop
cwde
and
mov
adc
enter
int3
sbb
ins
xchg
adc
mov
adc
ret
and
cwde
je
xlat
aad
mov
xor
sahf
test
xor
fisubr
rol
ja
(bad)
shr
popa
mov
adc
rol
pushf
bound
cwde
pop
dec
mov
adc
mov
jle
mov
adc
(bad)
fnstenv
sub
fst
adc
out
test
ins
(bad)
out
push
or
(bad)
ins
(bad)
fstp
(bad)
mov
into
(bad)
xchg
pop
popa
mov
adc
sub
adc
(bad)
xchg
pop
popa
mov
adc
sub
adc
into
mov
pop
sbb
out
pop
pusha
out
ror
fadd
mov
mov
adc
pop
sbb
(bad)
fstp
xchg
pop
popa
mov
adc
not
adc
and
adc
sti
popa
jne
iret
pop
popa
cmp
pop
and
xchg
cmp
adc
mov
adc
mov
adc
mov
push
xchg
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
cld
add
ret
adc
lahf
bound
ror
(bad)
or
inc
cli
mov
jg
pushf
(bad)
and
or
(bad)
aad
bound
mov
mov
pusha
leave
fxch
aad
push
pop
or
push
cmc
pop
jae
mov
mov
pusha
rcr
lods
and
pop
or
jl
sbb
mov
test
into
sub
fcomp
fstp
xchg
adc
push
inc
jbe
fstp
xchg
pop
popa
mov
adc
xchg
xor
mov
adc
(bad)
pusha
and
ja
sbb
pusha
(bad)
nop
adc
cdq
xchg
mov
cmp
adc
in
pop
loop
call
cmp
add
ror
shr
push
(bad)
cdq
std
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
ret
scas
or
jle
cmp
nop
and
fcom
mov
mov
pusha
rcr
cmp
jle
cmp
mov
mov
cmp
inc
pusha
(bad)
test
adc
pushf
(bad)
aad
bound
out
icebp
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
cmp
mov
mov
push
cmp
cmp
mov
add
(bad)
arpl
sbb
cmc
ret
mov
adc
cmp
adc
(bad)
test
ja
arpl
fimul
ins
ror
pop
pop
push
mov
pusha
cmp
iret
dec
rcr
mov
mov
retf
pop
pusha
rcr
lods
sar
pop
pop
adc
or
pushf
jnp
mov
mov
adc
pop
adc
pusha
stc
iret
int
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
or
mov
adc
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
stc
iret
mov
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
or
mov
adc
adc
lahf
(bad)
aad
(bad)
(bad)
in
icebp
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
cmp
mov
mov
push
cdq
pop
jae
in
popa
or
dec
add
(bad)
lahf
cmp
jle
and
xchg
pop
popa
mov
adc
cmp
adc
(bad)
test
ja
arpl
fimul
gs
fld1
outs
pop
daa
arpl
fimul
gs
fldcw
ja
fimul
gs
(bad)
(bad)
fstp
push
fcmovnu
inc
data16
pushf
arpl
xchg
dec
pusha
mov
adc
mov
adc
cmp
mov
and
xchg
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
xchg
gs
fisttp
(bad)
and
or
inc
cli
inc
addr16
pop
lea
(bad)
and
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
or
(bad)
and
or
(bad)
or
popa
adc
popf
(bad)
aad
(bad)
out
mov
mov
pusha
cmp
iret
cmp
inc
retf
std
movs
xchg
sub
xchg
lds
(bad)
jne
jns
inc
in
(bad)
aad
(bad)
out
mov
mov
pusha
cmp
iret
cmp
mov
and
sub
xchg
lds
(bad)
and
mov
(bad)
mov
loop
push
xchg
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
fisttp
(bad)
and
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
fistp
sbb
inc
or
test
pop
clc
fdivr
inc
rol
fnop
inc
jge
inc
inc
pop
nop
loopne
adc
fdivr
int
push
pop
mov
pop
fs
clc
inc
push
xchg
mov
pusha
mov
fdivr
push
in
pusha
int
ror
fdiv
fcomp
or
pop
mov
jl
in
pop
fcomp
sbb
hlt
inc
push
(bad)
inc
gs
push
adc
sar
(bad)
dec
dec
loope
jg
jmp
in
dec
in
inc
push
xchg
loopne
adc
fsub
fnsave
inc
or
hlt
pop
dec
fldcw
jnp
fucomp
pop
dec
popf
mov
add
clc
mov
pop
popf
les
mov
jg
rcr
pop
pusha
enter
pusha
pusha
push
fmul
pusha
push
fcomp
pusha
jp
clc
pusha
inc
ftst
pusha
jbe
inc
pusha
dec
fsub
pusha
jbe
fsub
fcomp
popa
loop
js
(bad)
fcomp
popa
inc
fst
pusha
jp
shl
fsub
pusha
(bad)
fmul
pusha
inc
fsub
pusha
push
fmul
pop
fmul
pusha
jp
les
fcom
inc
fnstcw
pusha
jle
adc
fldlg2
popa
inc
fcom
inc
fsub
pusha
(bad)
fmul
pusha
jle
fsub
fldlg2
popa
adc
dec
pusha
jp
xchg
pusha
push
fcomp
inc
fldlg2
popa
adc
pop
pusha
push
fcom
pusha
(bad)
fsubr
pusha
jle
fsub
fldlg2
popa
push
fsub
fld
pusha
jbe
fsub
fcomp
pusha
rcr
int3
pusha
pop
fsub
pusha
(bad)
fsubr
pusha
data16
popa
pop
adc
pusha
cmps
and
jne
fimul
gs
fld
inc
js
enter
(bad)
cmp
adc
vunpcklps
cmp
inc
pusha
(bad)
test
adc
pushf
(bad)
fst
icebp
stos
jo
popa
adc
ror
mov
pusha
(bad)
inc
and
xchg
(bad)
in
pusha
into
(bad)
or
fstp
aam
dec
retf
sbb
jns
and
rol
mov
xchg
adc
mov
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
adc
pop
mov
(bad)
fild
and
aas
pop
fimul
popf
(bad)
jne
jns
std
push
(bad)
cdq
cmc
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
ret
arpl
sbb
cmp
pop
and
fcom
mov
mov
pusha
rcr
cmp
jle
cmp
mov
mov
cmp
inc
pusha
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
(bad)
in
popa
cmp
dec
mov
push
mov
jae
in
popa
or
dec
add
(bad)
arpl
sbb
pop
in
pop
leave
pushf
and
rol
fimul
sar
pop
pusha
vunpcklps
mov
adc
addr16
mov
lea
or
fstp
aam
dec
retf
sbb
jns
and
rol
mov
xchg
adc
mov
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
adc
pop
mov
(bad)
fild
and
aas
pop
fimul
popf
(bad)
jne
jns
std
push
(bad)
cdq
cmc
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
ret
arpl
sbb
cmp
pop
and
fcom
mov
mov
pusha
rcr
cmp
jle
cmp
mov
mov
cmp
inc
pusha
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
(bad)
in
popa
cmp
dec
mov
push
gs
jae
in
popa
or
dec
add
(bad)
arpl
sbb
pop
in
pop
leave
pushf
jo
rcl
push
dec
pusha
vunpcklps
mov
adc
addr16
mov
lea
js
popf
sub
mov
pusha
ret
push
(bad)
fldenv
mov
adc
push
shl
mov
adc
cmp
adc
(bad)
test
jp
push
xchg
(bad)
or
imul
xchg
adc
jmp
push
mov
adc
(bad)
test
(bad)
jmp
pop
leave
adc
cdq
(bad)
(bad)
fldlg2
gs
rol
fimul
popf
(bad)
xchg
mov
das
mov
adc
iret
(bad)
popa
retf
fwait
mov
adc
adc
push
mov
adc
cmps
aam
icebp
iret
(bad)
popa
cmp
cmps
xchg
mov
adc
cmc
cmc
adc
iret
fisttp
sub
push
fimul
gs
fnstenv
shr
bound
push
hlt
pusha
(bad)
movs
ret
shl
pop
ror
mov
pusha
(bad)
and
cmp
adc
(bad)
test
(bad)
mov
mov
pusha
cmp
iret
imul
pop
push
(bad)
and
mov
ja
pop
shl
popa
(bad)
xchg
pop
popa
adc
lahf
bound
ror
mov
adc
push
fimul
gs
fxch
adc
pushf
(bad)
fst
icebp
test
fcmovu
popa
outs
fdiv
pusha
retf
mov
push
pop
popa
(bad)
fldlg2
cmp
adc
vunpcklps
mov
adc
cmp
adc
(bad)
test
(bad)
mov
mov
pusha
cmp
iret
imul
pop
push
(bad)
and
mov
fstp
push
pop
popa
adc
lahf
bound
ror
mov
adc
mov
adc
add
test
popa
(bad)
(bad)
xor
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
add
(bad)
fst
mov
adc
(bad)
test
(bad)
mov
mov
pusha
ret
shl
pop
or
(bad)
and
mov
(bad)
fnstcw
cmp
adc
vunpcklps
mov
adc
mov
adc
aam
pop
int
in
pushf
(bad)
std
mov
rol
mov
xchg
adc
mov
mov
daa
fild
and
lahf
pop
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
test
mov
xchg
test
(bad)
and
mov
aam
pop
ins
shr
pop
pop
adc
pusha
leave
fxch
rcl
pop
pop
push
mov
pusha
stc
iret
int
adc
lahf
(bad)
aad
bound
(bad)
ret
arpl
sbb
xchg
pop
leave
pushf
jo
ror
dec
mov
pusha
vunpcklps
mov
adc
cmp
adc
(bad)
test
ja
arpl
fimul
gs
frndint
outs
pop
daa
arpl
fimul
ins
rcr
push
pop
push
mov
pusha
cli
iret
int
(bad)
or
gs
fisttp
outs
and
cmp
std
call
(bad)
and
or
mov
adc
repnz
inc
pusha
aam
sub
xchg
in
pushf
(bad)
std
mov
rol
mov
xchg
adc
mov
mov
daa
fild
and
lahf
pop
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
and
mov
(bad)
mov
bnd
ja
and
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
fisttp
(bad)
and
or
(bad)
aad
bound
push
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
(bad)
in
popa
cmp
dec
mov
push
sbb
(bad)
in
popa
or
dec
add
(bad)
arpl
sbb
xchg
pop
leave
pushf
jo
rol
push
dec
pusha
vunpcklps
mov
adc
cmp
adc
(bad)
test
adc
pushf
(bad)
fst
icebp
stos
jo
popa
inc
pop
xchg
ror
mov
pusha
(bad)
inc
and
mov
ror
ror
push
(bad)
cdq
std
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
rcr
cmp
jle
cmp
mov
mov
or
inc
pusha
ret
arpl
sbb
cmp
pop
and
fcom
call
pusha
(bad)
test
adc
pushf
(bad)
aad
(bad)
fidiv
xor
xchg
int
adc
lahf
bound
ror
adc
popf
(bad)
aad
bound
adc
pusha
stos
jo
or
dec
repnz
mov
pusha
(bad)
inc
and
mov
iret
dec
pusha
aad
add
js
fld
mov
adc
xchg
test
popa
(bad)
(bad)
imul
xchg
adc
mov
adc
(bad)
(bad)
cwde
pop
loope
retf
xchg
adc
xchg
xchg
adc
mov
das
(bad)
fcmovnu
shl
popa
(bad)
and
or
mov
das
xchg
fnstcw
mov
adc
mov
das
aad
and
jne
pop
ror
adc
mov
fnstcw
mov
adc
aad
xor
mov
adc
mov
imul
fsub
and
xchg
adc
mov
adc
fadd
adc
(bad)
or
rcl
fnstcw
sub
push
xor
scas
(bad)
fstp
mov
adc
push
fnstenv
mov
push
xchg
(bad)
in
pusha
ret
add
js
popf
sub
mov
pusha
aam
test
xchg
in
pushf
(bad)
std
mov
rol
mov
xchg
adc
mov
mov
daa
fild
and
lahf
pop
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
and
mov
aam
pop
gs
(bad)
push
fimul
gs
fld
outs
pop
daa
arpl
fimul
gs
fstp
push
fimul
gs
fst
pop
pusha
ja
fstp
push
fcmovnu
inc
outs
cwde
pushf
arpl
imul
pop
fimul
popf
(bad)
xchg
cmp
adc
mov
adc
cmp
mov
mov
push
xchg
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
fisttp
(bad)
and
or
pop
pop
mov
enter
fstp
xchg
pop
sub
adc
lahf
sub
mov
pusha
(bad)
cmps
rol
pop
popa
add
test
popa
(bad)
(bad)
jo
ja
and
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
stos
(bad)
arpl
xchg
sbb
bound
ror
adc
popf
(bad)
aad
bound
mov
mov
pusha
ret
fxch
dec
outs
mov
std
sbb
and
sub
xchg
lds
(bad)
and
mov
(bad)
mov
(bad)
fprem
jb
in
pop
push
(bad)
cdq
cmc
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
rcr
cmp
jle
cmp
mov
mov
or
inc
pusha
ret
arpl
pusha
and
fcom
call
pusha
(bad)
test
adc
pushf
(bad)
fst
icebp
stos
jo
popa
daa
inc
jmp
sbb
pusha
(bad)
inc
and
mov
ror
ror
push
(bad)
cdq
std
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
rcr
cmp
jle
cmp
mov
mov
or
inc
pusha
ret
arpl
sbb
cmp
pop
and
fcom
call
pusha
(bad)
test
ja
arpl
fimul
ins
ror
into
pop
push
mov
pusha
cli
iret
int
adc
lahf
(bad)
aad
(bad)
jmp
add
(bad)
arpl
sbb
(bad)
leave
pop
shl
pop
popa
outs
fsubr
cmp
lods
adc
lahf
bound
ror
mov
adc
(bad)
in
adc
pushf
jo
ror
pop
pop
sar
dec
pusha
vunpcklps
mov
adc
call
xchg
mov
mov
adc
rol
iret
(bad)
aad
(bad)
jmp
das
mov
push
outs
push
fimul
gs
arpl
fimul
gs
daa
arpl
fimul
ins
rcr
xchg
pop
push
mov
pusha
sti
iret
int
(bad)
or
gs
fisttp
adc
push
idiv
enter
test
cmp
and
mov
cmc
pusha
outs
call
std
dec
adc
lahf
bound
ror
mov
adc
ror
adc
xchg
adc
push
fadd
test
push
fimul
adc
pushf
(bad)
aad
bound
mov
icebp
data16
fs
xchg
fnsave
xchg
sbb
bound
ror
adc
popf
(bad)
aad
bound
adc
pusha
stos
jo
fnstenv
cmps
fcmovb
mov
mov
pusha
(bad)
inc
sbb
mov
retf
pop
pusha
cmps
and
xor
fimul
gs
fst
js
enter
call
vunpcklps
cmp
inc
pusha
(bad)
test
adc
pushf
(bad)
fst
icebp
stos
jo
popa
fist
ror
mov
pusha
(bad)
inc
sbb
mov
retf
pop
pusha
cmps
and
xor
fimul
gs
fxtract
arpl
xor
aam
xchg
in
cmp
adc
vunpcklps
cmp
inc
pusha
(bad)
test
adc
pushf
(bad)
fst
icebp
stos
jo
popa
xchg
push
add
cwde
dec
pusha
mov
mov
pusha
(bad)
inc
sbb
mov
retf
pop
pusha
cmps
and
xor
fimul
gs
fst
cmp
aam
dec
sti
cmp
adc
vunpcklps
cmp
inc
pusha
(bad)
test
ja
arpl
fimul
gs
frndint
outs
pop
daa
arpl
fimul
gs
fld
bound
daa
arpl
fimul
gs
fnstenv
(bad)
fstp
push
fcmovnu
inc
outs
cwde
pushf
arpl
imul
pop
fimul
popf
(bad)
xchg
cmp
adc
mov
adc
add
test
std
pop
adc
pusha
int3
fxch
dec
cmp
pop
add
fdiv
test
(bad)
mov
popa
callw
(bad)
xchg
shl
xchg
sbb
bound
ror
adc
popf
(bad)
fst
icebp
cmps
and
popa
push
fimul
gs
fldenv
enter
out
cmp
adc
vunpcklps
cmp
inc
pusha
(bad)
test
(bad)
mov
mov
pusha
ret
sub
push
retf
std
js
and
sub
xchg
lds
(bad)
and
mov
aam
pop
ins
cmp
or
(bad)
test
(bad)
mov
popa
data16
(bad)
xchg
shl
sbb
bound
ror
adc
popf
(bad)
fst
icebp
cmps
and
popa
push
fimul
gs
fst
idiv
enter
repnz
adc
vunpcklps
cmp
inc
pusha
(bad)
test
adc
pushf
(bad)
fst
icebp
stos
jo
popa
add
ror
mov
pusha
(bad)
inc
sbb
mov
retf
pop
pusha
cli
iret
int
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
fisttp
outs
and
cmp
(bad)
fcom
xchg
pop
popf
(bad)
and
or
mov
adc
repnz
inc
pusha
aam
fadd
xchg
in
pushf
(bad)
std
mov
rol
mov
xchg
adc
mov
mov
daa
fild
and
lahf
pop
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
push
fcmovu
mov
vunpcklps
or
inc
pusha
rcr
cmp
jle
cmp
mov
mov
cmp
inc
pusha
(bad)
test
(bad)
mov
mov
pusha
ret
test
addr16
std
hlt
xchg
sub
xchg
lds
(bad)
and
mov
(bad)
mov
push
jp
ja
and
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
fisttp
(bad)
and
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
fisttp
(bad)
and
or
(bad)
aad
bound
xchg
pop
test
mov
adc
mov
adc
add
xchg
pop
sub
mov
adc
pop
adc
pusha
(bad)
fxch
and
(bad)
test
(bad)
mov
popa
fwait
sbb
ror
mov
pusha
(bad)
inc
adc
pop
loop
call
cmp
add
ror
retf
das
pop
in
fdiv
pop
(bad)
aad
popa
iret
(bad)
popa
(bad)
fst
arpl
rcl
(bad)
or
adc
push
mov
adc
mov
das
test
push
popa
mov
adc
(bad)
test
cmp
push
xchg
(bad)
or
adc
push
mov
adc
(bad)
fstp
mov
adc
(bad)
test
(bad)
jmp
pop
leave
adc
cdq
(bad)
(bad)
fldlg2
gs
rol
fimul
popf
(bad)
xchg
mov
das
mov
adc
push
fisubr
gs
fldcw
pop
adc
pusha
ret
jmp
pop
adc
pusha
int
int3
inc
ror
pop
pop
push
mov
pusha
(bad)
fxch
rcl
pop
pop
push
mov
pusha
ret
fxch
mov
adc
or
fdivr
mov
mov
adc
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
(bad)
in
popa
cmp
dec
mov
push
gs
jae
in
popa
or
dec
add
(bad)
lahf
cmp
jle
test
ret
pop
popa
mov
mov
pusha
ret
jmp
pop
adc
pusha
int
int3
inc
ror
pop
pop
push
mov
pusha
(bad)
sub
sbb
push
mov
pusha
(bad)
sub
adc
or
fdivr
mov
mov
adc
mov
mov
pusha
rcr
test
push
mov
pusha
into
fxch
movs
ror
pop
pop
push
mov
pusha
ret
fxch
popa
rcr
pop
pop
push
mov
pusha
ret
fxch
sbb
cmp
adc
or
hlt
jns
mov
mov
adc
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
(bad)
in
popa
cmp
dec
mov
push
lods
pop
jae
in
popa
or
dec
adc
ja
ret
pusha
push
or
pop
xchg
(bad)
kmovw
mov
adc
ror
stc
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
rcr
cmp
jle
cmp
mov
mov
or
inc
pusha
ret
arpl
sbb
cmp
pop
and
fcom
call
pusha
vaddps
pminub
imul
or
nop
popf
(bad)
fst
icebp
cmps
and
popa
push
fimul
gs
(bad)
aam
adc
cmp
adc
vunpcklps
push
inc
pusha
ret
xchg
ret
pusha
adc
popf
(bad)
fst
icebp
cmps
and
popa
push
fimul
gs
(bad)
aam
add
cmp
adc
vunpcklps
push
inc
pusha
ret
xchg
(bad)
or
cwde
popf
(bad)
fst
icebp
cmps
and
popa
push
fimul
gs
(bad)
aam
add
cmp
adc
vunpcklps
cmp
inc
pusha
xchg
xor
mov
push
cmp
pusha
and
ja
sbb
pusha
(bad)
nop
adc
call
cmp
adc
in
pop
loop
cdq
pop
mov
cmp
add
(bad)
in
pusha
(bad)
(bad)
adc
popf
(bad)
fst
icebp
cmps
and
popa
push
fimul
gs
fldcw
dec
jns
enter
push
cmp
adc
vunpcklps
cmp
inc
pusha
(bad)
test
(bad)
mov
mov
pusha
(bad)
mov
mov
and
sub
xchg
lds
(bad)
and
mov
aam
pop
gs
fldlg2
adc
pushf
(bad)
fst
icebp
stos
jo
popa
dec
mov
dec
pusha
mov
mov
pusha
(bad)
inc
or
clc
div
fstp
(bad)
fst
cmp
pop
popa
(bad)
test
(bad)
mov
mov
pusha
(bad)
adc
pop
or
xchg
sub
xchg
lds
(bad)
and
mov
aam
pop
gs
fldlg2
adc
pushf
(bad)
fst
icebp
stos
jo
popa
push
mov
dec
pusha
mov
mov
pusha
(bad)
inc
sbb
mov
retf
pop
pusha
ret
sar
push
pop
add
fdiv
test
(bad)
mov
popa
data16
sbb
xchg
and
pushf
(bad)
and
or
fistp
das
pop
popa
vaddps
push
fimul
gs
fldlg2
adc
pushf
(bad)
fst
icebp
stos
jo
popa
mov
cwde
dec
pusha
mov
mov
pusha
(bad)
inc
add
clc
data16
pop
ins
(bad)
aad
bound
push
mov
(bad)
test
(bad)
mov
mov
pusha
(bad)
adc
pop
or
xchg
sub
xchg
lds
(bad)
and
mov
aam
pop
gs
fldlg2
adc
pushf
(bad)
fst
icebp
stos
jo
popa
pop
mov
dec
pusha
mov
mov
pusha
(bad)
inc
add
clc
es
pop
ins
(bad)
leave
xchg
(bad)
aam
pusha
jne
push
pop
popa
(bad)
test
(bad)
mov
mov
pusha
(bad)
adc
pop
or
xchg
sub
xchg
lds
(bad)
and
mov
aam
pop
gs
fldlg2
adc
pushf
(bad)
fst
icebp
stos
jo
popa
pop
movs
mov
pusha
mov
mov
pusha
(bad)
inc
sbb
mov
retf
pop
pusha
ret
sar
push
pop
add
fdiv
test
(bad)
mov
popa
dec
cmc
call
adc
lahf
bound
ror
adc
popf
(bad)
fst
icebp
cmps
and
popa
push
fimul
gs
fnstcw
aam
inc
pop
cmp
adc
vunpcklps
cmp
inc
pusha
xchg
xor
mov
and
(bad)
pusha
and
ja
sbb
pusha
(bad)
nop
sub
fmul
loop
fcmove
mov
adc
xchg
pusha
pop
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
and
mov
aam
pop
gs
fnstenv
adc
pushf
(bad)
fst
icebp
stos
jo
popa
xor
dec
pusha
mov
mov
pusha
(bad)
inc
and
mov
ror
lds
(bad)
pop
popa
(bad)
cmps
ror
pop
(bad)
and
mov
aam
pop
gs
fnstenv
jne
pushf
(bad)
fst
icebp
stos
js
popa
neg
fsub
fdiv
pusha
pop
sbb
mov
cwde
pop
pusha
(bad)
jns
popa
(bad)
fstp
cmp
adc
vunpcklps
mov
adc
mov
adc
aam
sub
xchg
in
pushf
(bad)
std
mov
rol
mov
xchg
adc
mov
mov
daa
fild
and
lahf
pop
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
and
mov
aam
pop
ins
cmp
je
(bad)
test
repz
enter
dec
cmp
adc
vunpcklps
cmp
inc
pusha
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
pop
daa
arpl
fimul
ins
sar
xchg
nop
popa
in
pop
loop
jno
mov
cmp
enter
cli
mov
mov
pusha
(bad)
and
mov
mov
pusha
cli
iret
int
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
aad
bound
push
dec
mov
push
cdq
pop
jae
in
popa
or
dec
add
(bad)
arpl
sbb
xchg
pop
leave
pushf
js
rol
fstp
jne
retf
adc
lahf
bound
ror
mov
adc
adc
lahf
sub
mov
pusha
(bad)
aad
popa
add
test
imul
push
push
xchg
(bad)
in
pusha
rcr
dec
sti
shr
stc
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
rcr
cmp
jle
cmp
mov
mov
or
inc
pusha
ret
arpl
sbb
cmp
pop
and
fcom
call
pusha
(bad)
cmps
shl
pop
popa
push
fimul
ins
shr
pop
pop
adc
pusha
ret
fxch
popa
ror
pop
pop
push
mov
pusha
cli
iret
int
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
fisttp
addr16
in
cmp
jns
popa
aad
call
mov
mov
fsub
mov
mov
mov
pusha
ret
fxch
dec
shr
pop
pop
adc
pusha
int3
fxch
popa
ror
pop
pop
push
mov
pusha
cli
iret
int
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
fisttp
addr16
cmp
jns
popa
aad
mov
mov
mov
fsub
mov
mov
clc
(bad)
xor
pop
gs
or
popa
(bad)
aas
adc
popf
(bad)
aad
(bad)
out
in
icebp
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
pop
daa
arpl
fimul
gs
fstp
daa
pop
pusha
ja
fstp
push
fcmovnu
inc
outs
cwde
pushf
arpl
imul
cmp
dec
pusha
vunpcklps
mov
adc
cmp
adc
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
pop
daa
arpl
fimul
gs
fstp
daa
pop
pusha
ja
fstp
push
fcmovnu
inc
outs
cwde
pushf
arpl
imul
pop
fimul
popf
(bad)
xchg
cmp
adc
mov
das
(bad)
fst
push
pop
xchg
sbb
pop
pusha
adc
popa
pop
adc
pusha
cli
iret
int
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
aad
bound
in
icebp
cmp
dec
mov
push
cdq
pop
jae
in
popa
or
dec
add
(bad)
arpl
sbb
xchg
pop
leave
pushf
js
rol
ftst
arpl
retf
adc
lahf
bound
ror
mov
adc
in
adc
ret
popa
(bad)
cmps
(bad)
(bad)
cmp
pop
popa
(bad)
test
ja
arpl
fimul
gs
fstp
daa
arpl
fimul
ins
rcr
xchg
pop
push
mov
pusha
rcr
and
cmp
adc
or
les
mov
or
add
data16
popa
(bad)
and
mov
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
adc
push
fimul
gs
fnstenv
daa
arpl
fimul
gs
fstp
daa
arpl
fimul
ins
rcr
xchg
pop
push
mov
pusha
rcr
and
cmp
adc
or
les
mov
pop
js
enter
js
sbb
pusha
(bad)
and
mov
clc
out
lds
(bad)
jmp
pusha
jne
push
pop
popa
(bad)
test
ja
arpl
fimul
gs
fstp
daa
arpl
fimul
ins
rcr
xchg
pop
push
mov
pusha
rcr
and
cmp
adc
or
les
mov
mov
add
data16
(bad)
and
mov
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
adc
push
fimul
gs
fnstenv
daa
arpl
fimul
gs
fstp
daa
arpl
fimul
ins
rcr
xchg
pop
push
mov
pusha
rcr
and
cmp
adc
or
les
mov
sti
fiadd
data16
(bad)
and
mov
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
das
(bad)
fnstenv
push
ficomp
int
popa
(bad)
(bad)
pop
adc
pusha
cli
iret
int
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
aad
bound
in
icebp
cmp
dec
mov
push
cdq
pop
jae
in
popa
or
dec
add
(bad)
arpl
sbb
xchg
pop
leave
pushf
jo
sar
push
dec
pusha
vunpcklps
mov
adc
cmp
adc
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
pop
daa
arpl
fimul
gs
fstp
daa
pop
pusha
ja
fstp
push
fcmovnu
inc
outs
cwde
pushf
arpl
imul
cmp
dec
pusha
vunpcklps
mov
adc
push
push
inc
jbe
fstp
xchg
pop
popa
mov
adc
cmp
adc
xchg
xor
mov
dec
cli
int
gs
f2xm1
gs
push
xchg
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
fisttp
(bad)
and
or
(bad)
aad
(bad)
out
in
icebp
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
pop
daa
arpl
fimul
gs
fstp
daa
pop
pusha
ja
fstp
push
fcmovnu
inc
outs
cwde
pushf
arpl
imul
cmp
dec
pusha
vunpcklps
mov
adc
cmp
adc
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
pop
daa
arpl
fimul
gs
fstp
daa
pop
pusha
ja
fstp
push
fcmovnu
inc
outs
cwde
pushf
arpl
imul
cmp
dec
pusha
vunpcklps
mov
adc
cmp
adc
xchg
xor
mov
adc
(bad)
pusha
and
ja
sbb
pusha
(bad)
nop
adc
call
cmp
adc
in
pop
loop
cdq
pop
mov
cmp
add
retf
pusha
cmps
and
dec
push
fimul
ins
outs
shl
std
jo
and
sub
xchg
lds
(bad)
and
mov
(bad)
mov
jmp
pusha
shr
stc
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
rcr
cmp
jle
cmp
mov
mov
or
inc
pusha
ret
arpl
sbb
cmp
pop
and
fcom
call
pusha
mov
and
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
fisttp
(bad)
and
or
(bad)
aad
(bad)
fsubp
dec
icebp
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
pop
daa
arpl
fimul
ins
sar
xchg
pop
adc
or
(bad)
aad
mov
adc
std
repnz
and
in
cmp
retf
adc
lahf
bound
ror
mov
adc
sub
das
pop
popa
(bad)
cmps
(bad)
(bad)
ja
imul
pop
fimul
popf
(bad)
xchg
cmp
adc
mov
das
(bad)
fnstcw
push
pop
xchg
sbb
pop
pusha
adc
repnz
and
in
cmp
retf
adc
lahf
bound
ror
mov
adc
mov
fisubr
push
repnz
and
in
cmp
retf
adc
lahf
bound
ror
mov
adc
jno
adc
add
test
test
adc
push
idiv
enter
dec
mov
mov
pusha
(bad)
and
mov
mov
lea
cmc
pop
ins
(bad)
fstp
pop
aam
sub
xchg
in
pushf
(bad)
std
mov
rol
mov
xchg
adc
mov
mov
daa
fild
and
lahf
pop
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
jne
jns
mov
stc
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
rcr
cmp
jle
cmp
mov
mov
or
inc
pusha
ret
arpl
sbb
cmp
pop
and
fcom
call
pusha
vmovups
push
fimul
gs
fldenv
daa
arpl
fimul
gs
(bad)
push
fimul
ins
rcr
jbe
push
mov
pusha
cli
iret
int
(bad)
or
gs
fisttp
(bad)
test
ja
arpl
fimul
gs
(bad)
push
fimul
ins
rcr
jbe
push
mov
pusha
cli
iret
int
(bad)
or
gs
fisttp
outs
test
cmp
retf
adc
lahf
bound
ror
mov
adc
adc
lahf
sub
mov
pusha
(bad)
aad
popa
add
test
ins
(bad)
fld
sub
and
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
fisttp
(bad)
and
or
sub
mov
pusha
(bad)
cmps
sar
ret
pop
(bad)
in
jbe
add
dec
jge
fstp
xchg
pop
popa
mov
adc
or
adc
mov
adc
call
xchg
adc
mov
adc
(bad)
aaa
pop
ins
and
mov
fnsave
pusha
mov
push
xchg
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
fisttp
(bad)
and
or
pusha
retf
dec
add
(bad)
pusha
and
ja
sbb
pusha
(bad)
nop
adc
call
cmp
adc
in
pop
loop
cdq
pop
mov
cmp
add
mov
adc
mov
jb
mov
adc
enter
adc
popf
(bad)
aad
(bad)
out
in
icebp
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
cmp
dec
mov
push
in
xchg
or
dec
add
(bad)
arpl
sbb
xchg
pop
leave
pushf
pushf
mov
adc
lahf
bound
ror
mov
adc
adc
lahf
sub
mov
pusha
retf
xor
or
ret
xor
popa
(bad)
fldenv
push
(bad)
xchg
pop
popa
mov
adc
(bad)
in
cmp
aaa
shr
stc
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
rcr
cmp
jle
cmp
mov
mov
or
inc
pusha
ret
arpl
sbb
cmp
pop
and
fcom
call
pusha
aad
in
add
mov
fimul
gs
fnstcw
daa
arpl
fimul
gs
frndint
outs
pop
daa
arpl
fimul
ins
rcr
jbe
push
mov
pusha
rcr
and
cmp
adc
or
les
mov
mov
add
data16
popa
(bad)
and
mov
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
das
(bad)
fld
inc
jbe
pop
xchg
(bad)
in
pusha
(bad)
or
inc
pop
popf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
aad
(bad)
out
in
icebp
cmp
dec
mov
push
cdq
pop
jae
in
popa
or
dec
add
(bad)
arpl
sbb
xchg
pop
leave
pushf
js
rol
fld1
bound
std
jl
xchg
pop
popf
(bad)
and
or
mov
adc
pop
ror
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
aad
(bad)
out
in
icebp
cmp
dec
mov
push
cdq
pop
jae
in
popa
or
dec
add
(bad)
arpl
sbb
xchg
pop
leave
pushf
jo
rcl
adc
sar
dec
pusha
vunpcklps
mov
adc
pusha
adc
(bad)
fld
ret
rcl
pusha
pop
gs
adc
pusha
(bad)
inc
shr
pop
pop
adc
pusha
rcr
mov
or
push
mov
pusha
cli
iret
int
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
fisttp
outs
adc
cmp
retf
std
les
xchg
pop
popf
(bad)
and
or
mov
adc
(bad)
das
pop
popa
aad
in
shr
pop
popa
push
fimul
gs
fnstcw
daa
arpl
fimul
gs
(bad)
push
fimul
ins
rcr
jbe
push
mov
pusha
rcr
and
cmp
adc
or
les
mov
mov
add
data16
popa
(bad)
and
mov
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
adc
push
fimul
gs
fld
imul
mov
aam
pop
gs
fst
pop
daa
arpl
fimul
ins
rcr
inc
pop
push
mov
pusha
rcr
and
cmp
adc
or
les
mov
stos
fiadd
data16
and
mov
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
das
(bad)
fldenv
jbe
pop
xchg
retf
pusha
adc
pushf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
aad
(bad)
out
in
icebp
cmp
dec
mov
push
cdq
pop
jae
in
popa
or
dec
add
(bad)
arpl
sbb
xchg
pop
leave
pushf
js
rol
fstp
fs
std
sub
xchg
pop
popf
(bad)
and
or
mov
adc
(bad)
das
pop
popa
aad
in
add
mov
fimul
gs
fnstcw
daa
arpl
fimul
gs
(bad)
push
fimul
ins
rcr
jbe
push
mov
pusha
rcr
and
cmp
adc
or
les
mov
xchg
fiadd
dec
pop
popa
(bad)
and
mov
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
das
(bad)
fxtract
jne
fstp
ror
cwde
pushf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
aad
(bad)
out
in
icebp
cmp
dec
mov
push
cdq
pop
jae
in
popa
or
dec
add
(bad)
arpl
sbb
xchg
pop
leave
pushf
js
rol
fst
cs
std
test
xchg
pop
popf
(bad)
and
or
mov
adc
(bad)
das
pop
popa
aad
in
add
mov
fimul
gs
fnstcw
daa
arpl
fimul
gs
(bad)
push
fimul
ins
rcr
jbe
push
mov
pusha
rcr
and
cmp
adc
or
les
mov
(bad)
fild
data16
pop
popa
(bad)
and
mov
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
das
(bad)
fld
fimul
in
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
aad
(bad)
out
in
icebp
cmp
dec
mov
push
cdq
pop
jae
in
popa
or
dec
add
(bad)
arpl
sbb
xchg
pop
leave
pushf
jo
shr
sub
cmp
dec
pusha
vunpcklps
mov
adc
pusha
adc
(bad)
fst
ret
rcl
sbb
inc
pop
adc
pusha
(bad)
inc
shr
pop
pop
adc
pusha
rcr
mov
or
push
mov
pusha
cli
iret
int
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
fisttp
addr16
cmp
jns
popa
aam
ins
xchg
mov
mov
pusha
(bad)
and
mov
clc
jbe
imul
push
mov
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
pop
daa
arpl
fimul
gs
fstp
daa
pop
pusha
ja
fstp
push
fcmovnu
inc
outs
cwde
pushf
arpl
imul
pop
fimul
popf
(bad)
xchg
cmp
adc
mov
das
(bad)
fldenv
fstp
out
or
cwde
pushf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
aad
(bad)
out
in
icebp
cmp
dec
mov
push
cdq
pop
jae
in
popa
or
dec
add
(bad)
arpl
sbb
xchg
pop
leave
pushf
js
rol
(bad)
bound
retf
std
aam
xchg
pop
popf
(bad)
and
or
mov
adc
(bad)
das
pop
popa
aad
in
gs
jae
push
fimul
gs
fnstcw
daa
arpl
fimul
gs
(bad)
push
fimul
ins
rcr
jbe
push
mov
pusha
rcr
and
cmp
adc
or
les
mov
cmp
aam
push
fwait
mov
mov
pusha
(bad)
and
mov
clc
push
xor
popa
(bad)
jmp
mov
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
pop
daa
arpl
fimul
gs
fstp
daa
pop
pusha
ja
fstp
push
fcmovnu
inc
outs
cwde
pushf
arpl
imul
pop
fimul
popf
(bad)
xchg
cmp
adc
mov
das
(bad)
fld
fs
pop
xchg
repnz
cwde
pushf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
aad
(bad)
out
in
icebp
cmp
dec
mov
push
cdq
pop
jae
in
popa
or
dec
add
(bad)
arpl
sbb
xchg
pop
leave
pushf
js
rol
fnstcw
arpl
retf
std
int3
adc
lahf
bound
ror
mov
adc
jne
adc
(bad)
das
pop
popa
aad
in
gs
addr16
fimul
gs
fnstcw
daa
arpl
fimul
gs
(bad)
push
fimul
ins
rcr
jbe
push
mov
pusha
rcr
and
cmp
adc
or
les
mov
iret
fild
enterw
and
mov
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
das
xor
pusha
(bad)
in
jb
push
mov
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
pop
daa
arpl
fimul
gs
fstp
daa
pop
pusha
ja
fstp
push
fcmovnu
inc
outs
cwde
pushf
arpl
imul
cmp
dec
pusha
vunpcklps
mov
adc
cmp
adc
xchg
xor
mov
jp
push
pop
xchg
push
ficomp
int
popa
(bad)
fnstcw
jl
ja
and
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
fisttp
(bad)
and
or
(bad)
aad
(bad)
out
in
icebp
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
pop
daa
arpl
fimul
ins
sar
es
adc
or
(bad)
in
pop
mov
xchg
pop
leave
pushf
jo
sar
push
ins
cmp
mov
xchg
inc
pusha
mov
adc
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
pop
daa
arpl
fimul
gs
fstp
daa
pop
pusha
ja
fstp
push
fcmovnu
inc
outs
cwde
pushf
arpl
imul
cmp
dec
pusha
vunpcklps
mov
adc
cmp
adc
(bad)
test
ja
arpl
fimul
gs
fldlg2
gs
daa
arpl
fimul
gs
fnstcw
daa
arpl
fimul
gs
fld
bound
pop
pusha
ja
fstp
push
fcmovnu
inc
repnz
pushf
arpl
fcom
and
in
cmp
xchg
add
ror
mov
adc
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
fisttp
outs
cwde
dec
pusha
ja
imul
vunpcklps
mov
adc
cmp
adc
xchg
xor
mov
jb
push
push
xchg
mul
pop
pusha
into
(bad)
shr
stc
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
rcr
cmp
jle
cmp
mov
mov
or
inc
pusha
ret
arpl
sbb
cmp
pop
and
fcom
call
pusha
(bad)
test
ja
arpl
fimul
gs
fldlg2
gs
daa
arpl
fimul
ins
rcr
jbe
push
mov
pusha
cli
iret
int
(bad)
or
gs
fisttp
outs
cwde
dec
pusha
ja
imul
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
adc
push
fimul
gs
fnstcw
daa
arpl
fimul
gs
frndint
outs
pop
daa
arpl
fimul
ins
rcr
jbe
push
mov
pusha
rcr
and
cmp
adc
or
les
mov
mov
add
data16
popa
(bad)
and
mov
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
adc
push
fimul
ins
shr
pop
pop
adc
pusha
ret
rcl
or
push
mov
pusha
(bad)
fxch
cmp
sbb
push
mov
pusha
(bad)
fxch
mov
cmp
adc
or
(bad)
in
pop
mov
xchg
pop
leave
pushf
jo
sar
push
dec
cmp
mov
xchg
inc
pusha
mov
adc
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
(bad)
in
popa
cmp
dec
mov
push
cdq
pop
jae
in
popa
or
dec
add
(bad)
arpl
sbb
xor
push
(bad)
jno
jae
push
add
call
sub
xchg
cmp
adc
mov
adc
cmp
mov
int3
fprem
xchg
lds
mov
dec
rcl
lods
pop
push
(bad)
cdq
stc
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
rcr
cmp
jle
cmp
mov
mov
or
inc
pusha
ret
arpl
sbb
cmp
pop
and
fcom
call
pusha
(bad)
test
ja
arpl
fimul
gs
fldlg2
gs
daa
arpl
fimul
ins
rcr
jbe
push
mov
pusha
cli
iret
int
(bad)
or
gs
fisttp
outs
cwde
dec
pusha
ja
imul
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
adc
push
fimul
gs
fnstcw
daa
arpl
fimul
gs
frndint
outs
pop
daa
arpl
fimul
ins
rcr
jbe
push
mov
pusha
rcr
and
cmp
adc
or
les
mov
mov
add
data16
popa
(bad)
and
mov
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
adc
cmp
mov
ret
fprem
xchg
shr
stc
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
rcr
cmp
jle
cmp
mov
mov
or
inc
pusha
ret
arpl
sbb
cmp
pop
and
fcom
call
pusha
(bad)
test
ja
arpl
fimul
gs
fldlg2
gs
daa
arpl
fimul
ins
rcr
jbe
push
mov
pusha
cli
iret
int
(bad)
or
gs
fisttp
outs
cwde
dec
pusha
ja
imul
xchg
movs
pop
popf
(bad)
xchg
cmp
adc
mov
adc
cmp
mov
mov
push
xchg
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
fisttp
(bad)
and
or
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
aad
(bad)
out
in
icebp
cmp
dec
mov
push
cdq
pop
jae
in
popa
or
dec
add
(bad)
arpl
sbb
xchg
pop
leave
pushf
js
rol
fldcw
add
std
enter
popf
(bad)
and
or
mov
adc
bound
inc
pusha
(bad)
aad
popa
add
test
jno
fld
data16
push
xchg
pusha
daa
ror
sar
inc
adc
lahf
bound
ror
(bad)
or
inc
cli
mov
lahf
adc
lahf
bound
ror
(bad)
or
inc
cli
pop
gs
fisttp
(bad)
and
or
(bad)
aad
(bad)
out
in
icebp
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
pop
daa
arpl
fimul
ins
sar
xchg
pop
adc
or
les
mov
outs
jns
enter
into
mov
mov
pusha
(bad)
and
mov
mov
pusha
cli
iret
int
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
aad
bound
push
dec
mov
push
adc
daa
pop
pusha
ja
fstp
push
fcmovnu
inc
outs
cwde
pushf
arpl
imul
pop
fimul
popf
(bad)
xchg
cmp
adc
mov
adc
push
fimul
gs
fnstenv
push
fimul
gs
frndint
outs
pop
daa
arpl
fimul
ins
rcr
es
push
mov
pusha
cli
iret
int
(bad)
or
gs
fisttp
outs
and
cmp
push
pop
pusha
vunpcklps
mov
adc
cmp
adc
(bad)
test
ja
arpl
fimul
gs
frndint
outs
pop
daa
arpl
fimul
ins
rcr
xchg
pop
push
mov
pusha
sti
iret
int
(bad)
or
gs
fisttp
outs
mov
std
push
(bad)
and
or
mov
adc
cmp
inc
pusha
(bad)
test
ja
arpl
fimul
gs
frndint
outs
pop
daa
arpl
fimul
gs
fstp
pop
daa
arpl
fimul
gs
fldlg2
addr16
pop
pusha
ja
ficomp
push
retf
fild
xchg
popa
mov
adc
cdq
stc
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
rcr
aam
jle
cmp
dec
and
fcom
mov
mov
pusha
ret
pop
(bad)
sti
pop
sbb
cmp
les
vunpcklps
cmp
inc
pusha
(bad)
test
ja
arpl
fimul
ins
ror
into
pop
push
mov
pusha
rcr
and
sbb
push
mov
pusha
rcr
rcl
cmp
adc
or
les
mov
fstp
enter
repnz
mov
pusha
(bad)
and
mov
mov
pusha
sti
iret
int
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
fisttp
outs
xchg
in
cmp
std
push
adc
lahf
bound
ror
mov
adc
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
fisttp
outs
pushf
in
cmp
std
adc
pop
popf
(bad)
and
or
mov
adc
into
fimul
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
fisttp
outs
hlt
in
cmp
std
inc
adc
lahf
bound
ror
mov
adc
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
fisttp
outs
cwde
in
cmp
std
xor
xchg
pop
popf
(bad)
and
or
mov
adc
call
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
adc
lahf
(bad)
fst
icebp
cli
iret
pop
popa
(bad)
or
gs
fisttp
outs
(bad)
in
cmp
std
lock
lahf
bound
ror
mov
adc
xor
cwde
bound
push
mov
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
(bad)
in
popa
cmp
dec
mov
push
imul
or
dec
add
(bad)
arpl
sbb
push
in
pop
leave
pushf
jo
shr
adc
cmp
dec
pusha
vunpcklps
mov
adc
cmp
adc
xchg
xor
mov
(bad)
cli
int
popa
(bad)
fst
pop
adc
pusha
cli
iret
int
adc
lahf
(bad)
aad
bound
dec
icebp
cmp
dec
mov
fdiv
test
(bad)
in
popa
cmp
dec
mov
push
imul
or
dec
add
(bad)
lahf
cmp
jle
add
xchg
pop
popa
mov
adc
lock
adc
aam
cmp
xchg
in
pushf
(bad)
std
mov
rol
mov
xchg
adc
mov
mov
daa
fild
and
lahf
pop
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
jno
jns
push
add
repnz
mov
pusha
(bad)
and
mov
mov
(bad)
jmp
das
pop
popa
(bad)
cmps
shl
pop
pop
(bad)
and
mov
aam
pop
ins
shr
pop
pop
adc
pusha
ret
add
or
push
mov
pusha
rcr
and
sbb
push
mov
pusha
rcr
rcl
cmp
adc
or
cmp
mov
mov
adc
aam
cmp
xchg
in
pushf
(bad)
std
mov
rol
mov
xchg
adc
mov
mov
daa
fild
and
lahf
pop
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
jno
jns
push
add
cld
mov
mov
pusha
(bad)
and
mov
mov
lea
pop
(bad)
pop
popa
(bad)
cmps
rol
pop
popa
push
fimul
gs
fnstenv
gs
arpl
fimul
gs
fst
daa
arpl
fimul
gs
fstp
pop
daa
arpl
fimul
gs
fldlg2
addr16
pop
pusha
ja
ficomp
push
daa
fild
popfw
lahf
(bad)
xchg
push
popa
mov
adc
sar
stc
jae
cmp
pusha
cmp
cld
and
fcom
or
mov
pusha
rcr
cmp
jle
cmp
mov
mov
or
inc
pusha
ret
arpl
sbb
cmp
pop
and
fcom
call
pusha
ja
imul
pop
fimul
popf
(bad)
xchg
cmp
adc
mov
adc
cmp
mov
rcr
push
xor
cwde
bound
pop
popa
(bad)
test
(bad)
in
popa
cmp
dec
rol
fadd
test
(bad)
in
popa
cmp
dec
mov
fdiv
test
(bad)
in
popa
cmp
dec
mov
push
imul
or
dec
add
(bad)
lahf
cmp
jle
cmc
fbld
popa
mov
adc
lock
adc
aam
cmp
xchg
in
pushf
(bad)
std
mov
rol
mov
xchg
adc
mov
mov
daa
fild
and
lahf
pop
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
jno
jns
push
add
into
mov
mov
pusha
(bad)
and
mov
mov
lea
pop
(bad)
pop
popa
(bad)
cmps
shl
pop
popa
push
fimul
gs
fld
push
daa
arpl
fimul
gs
fld
ins
pop
daa
arpl
fimul
gs
fstp
pop
daa
arpl
fimul
gs
fldlg2
addr16
pop
pusha
ja
ficomp
push
daa
fild
inc
sahf
lahf
(bad)
xchg
pop
popa
mov
adc
adc
lahf
sub
mov
pusha
aam
cmp
xchg
in
pushf
(bad)
std
mov
rol
mov
xchg
adc
mov
mov
daa
fild
and
lahf
pop
fimul
popf
(bad)
adc
pop
mov
fcmovnu
inc
xchg
arpl
fimul
popf
(bad)
jno
jns
push
add
into
mov
mov
pusha
(bad)
and
mov
mov
(bad)
rcr
pop
push
adc
sbb
or
mov
pusha
mov
adc
or
adc
xchg
dec
daa
ror
mov
adc
shr
adc
xchg
adc
mov
adc
shr
push
adc
lahf
bound
ror
mov
adc
cmp
mov
mov
adc
mov
push
ret
pop
popa
mov
adc
enter
jmp
pop
mov
fnstenv
mov
adc
adc
dec
pusha
cli
sbb
call
fsub
adc
stos
call
push
sahf
pushf
aam
enter
cld
mov
arpl
out
ror
(bad)
mov
jmp
jmp
jmp
mov
xor
pop
shr
movs
(bad)
jmp
push
int
movs
sahf
sar
add
cmp
test
fistp
push
adc
push
(bad)
cmc
movs
sbb
mov
jmp
scas
movs
push
(bad)
in
movs
sbb
mov
jmp
cli
add
ret
pop
and
xor
sbb
mov
jmp
icebp
mov
and
movs
push
shr
sbb
mov
jmp
cld
movs
repz
in
jo
ror
sbb
in
call
xor
cli
xor
scas
in
test
mov
pop
sbb
mov
jmp
in
sbb
mov
jmp
pop
movs
inc
shl
jle
cmp
ds
pop
sbb
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xlat
test
(bad)
push
ror
xchg
arpl
jo
ds
sbb
mov
jmp
adc
(bad)
mov
jmp
ret
jb
(bad)
(bad)
mov
jmp
shl
(bad)
mov
jmp
in
pop
sbb
mov
jmp
or
rcl
sbb
mov
mov
sbb
mov
jmp
loope
push
daa
call
cmps
lock
cmp
sbb
mov
jmp
adc
jmp
mov
mov
in
sbb
mov
push
ds
mov
(bad)
adc
sbb
mov
cmps
sbb
adc
sbb
mov
jmp
ds
sbb
fcom
dec
push
(bad)
in
movs
sbb
mov
jmp
iret
test
ret
jmp
xchg
stos
ds
jg
(bad)
adc
sbb
mov
stos
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
bnd
sub
mov
(bad)
mov
jmp
sti
movs
outs
shl
mov
mov
(bad)
popf
pop
ret
fistp
lds
popf
pusha
and
cwde
out
mov
push
rcr
cwde
jp
mov
xchg
dec
and
mov
aad
or
dec
inc
push
aad
mov
pop
cs
test
repz
sub
movs
inc
mov
pop
jno
in
or
hlt
mov
ret
inc
test
movs
push
gs
movs
push
shr
push
xor
mov
std
fimul
cmps
outs
test
mov
outs
adc
dec
sar
ret
in
xor
or
mov
sbb
pop
aam
add
gs
add
pop
daa
dec
mov
sub
push
inc
ret
scas
ds
arpl
adc
mov
push
inc
stos
in
ret
adc
lds
pop
addr16
movs
dec
js
dec
std
ret
xchg
aad
sub
dec
out
dec
std
xchg
pop
push
ror
cmp
add
adc
daa
(bad)
cwde
lods
sub
pop
bound
or
int3
arpl
dec
std
(bad)
enter
add
dec
gs
lods
cmp
retf
push
cli
pushf
call
test
fwait
(bad)
dec
pop
jnp
inc
cmps
inc
aaa
inc
push
sbb
inc
push
sbb
or
push
inc
push
sbb
push
mov
jnp
dec
mov
xor
inc
push
sbb
dec
aaa
inc
push
sbb
mov
sbb
shr
aaa
inc
push
sbb
or
aaa
inc
push
sbb
inc
push
sbb
lods
push
sbb
inc
inc
push
sbb
inc
push
sbb
sub
sbb
inc
push
sbb
sbb
in
inc
inc
sbb
sub
sbb
pop
xor
inc
inc
sbb
mov
sbb
sub
inc
push
sbb
inc
push
sbb
or
inc
inc
push
aaa
inc
push
sbb
inc
push
sbb
fmul
sbb
inc
inc
push
sbb
inc
push
sbb
sub
sbb
pop
aam
inc
inc
sbb
inc
push
sbb
inc
push
sbb
inc
push
push
aaa
inc
push
sbb
inc
push
sbb
or
inc
inc
push
aaa
inc
push
sbb
mov
inc
lods
addr16
push
inc
retf
jge
test
sbb
(bad)
xchg
lods
iret
test
stc
push
push
xchg
xor
adc
out
rol
cwde
sub
das
sbb
adc
sbb
mov
jmp
sub
mov
(bad)
mov
jmp
clc
movs
outs
rcl
mov
push
or
movs
fldcw
jmp
(bad)
jmp
inc
in
adc
cmps
push
sub
adc
inc
adc
in
mov
inc
sub
outs
cmp
push
ins
aad
xchg
mov
ror
ds
inc
mov
push
das
inc
push
push
retf
jp
enter
ret
xor
mov
imul
cmp
jb
sub
or
sub
and
hlt
rcr
test
inc
into
or
cmp
mov
shl
mov
jecxz
gs
jmp
jg
sbb
push
xor
repz
std
jmp
mov
dec
inc
iret
lahf
aad
dec
in
cmp
add
adc
add
cwde
lods
adc
and
cli
pop
daa
inc
out
pop
into
call
ja
stos
std
dec
std
xchg
xchg
(bad)
loopne
mov
cmp
ins
call
mov
push
sub
fisttp
cmp
lods
ds
xor
mov
adc
ret
xor
seto
and
enter
les
retf
mov
retf
ins
xchg
out
shufps
ins
or
aaa
mov
xchg
and
loop
mov
(bad)
mov
retf
mov
retf
js
ins
pushf
not
(bad)
mov
stos
cmp
sub
lods
les
retf
icebp
test
les
retf
inc
retf
mov
retf
fmul
ins
(bad)
neg
outs
(bad)
mov
enter
xchg
and
mov
retf
test
mov
retf
and
ins
mov
retf
mov
retf
neg
outs
(bad)
mov
retf
mul
mov
retf
loope
ins
pushf
test
loop
out
neg
dec
loop
and
daa
in
cmp
lods
sub
xchg
and
add
movs
lods
mov
jmp
mov
mov
in
or
aad
mov
repnz
in
mov
sbb
mov
jmp
sbb
in
movs
bnd
movs
lods
mov
sbb
mov
jmp
sbb
lods
data16
mov
push
ins
call
sub
cmp
dec
push
or
push
mov
inc
add
icebp
(bad)
jmp
jns
cmp
xor
hlt
dec
sbb
inc
aaa
mov
dec
push
ror
cmp
mov
push
pop
jb
ret
test
push
sub
rep
push
inc
aas
push
ror
lock
dec
mov
es
movs
pop
lock
ret
out
add
in
movs
jns
mov
pop
fild
hlt
sar
test
fadd
ficom
add
cmps
add
mov
ins
inc
push
test
mov
pop
lds
sbb
mov
dec
stos
std
sahf
sbb
inc
xor
retf
dec
std
cmp
xchg
fmul
add
xchg
fnstcw
dec
push
stos
add
das
add
xchg
sub
loop
enter
std
call
pop
sub
into
scas
ds
ror
adc
pop
cmp
jg
sar
xor
iret
push
inc
add
adc
(bad)
mov
jo
shr
dec
cmp
outs
add
out
pop
cmps
data16
mov
aad
sbb
call
pop
mov
mov
neg
cs
mov
xchg
xchg
xor
xchg
inc
nop
mov
xchg
fcomp
dec
xchg
xchg
test
daa
rcl
xchg
fcomp
dec
xchg
fcomp
dec
js
fmul
cmps
add
fisttp
fild
and
nop
or
cdq
add
ds
into
push
and
jg
xchg
fcomp
dec
xchg
fcomp
dec
pop
xor
dec
fcmovnu
das
push
xchg
fcomp
dec
xchg
xor
dec
in
xchg
adc
push
dec
ins
push
xchg
fmul
dec
xchg
fcomp
dec
aam
xor
cs
fcomp
dec
xchg
mov
jecxz
xchg
fcomp
dec
xchg
mov
movs
and
jnp
popa
xchg
fsubr
xchg
adc
dec
xor
xchg
xchg
ficom
add
fidiv
xchg
add
fcomp
dec
xchg
fcomp
dec
xchg
fcomp
dec
call
fcom
dec
xchg
cmp
dec
add
sahf
sub
xor
pop
inc
or
jp
xchg
add
ss
add
imul
dec
xchg
fcomp
dec
fldcw
cmp
mov
xchg
add
fisttp
fisttp
and
fcomp
dec
xchg
fcomp
dec
xchg
fcomp
dec
sbb
lea
xchg
fcom
dec
les
inc
mov
xchg
fcomp
dec
js
fisttp
mov
dec
pop
sub
mov
fcomp
dec
mov
ins
push
xchg
fmul
dec
inc
add
mov
xchg
fcomp
dec
xchg
fcomp
dec
mov
xchg
test
xchg
fcom
dec
xchg
fcomp
dec
les
mov
add
fisttp
lea
xchg
fcom
dec
les
sar
fisttp
fisttp
fisttp
icebp
clc
ficom
fisttp
fisttp
fisttp
mov
xchg
fcom
dec
stos
sub
add
fcomp
dec
sub
xchg
dec
xchg
xor
dec
ficom
fisttp
fisttp
fisttp
popf
hlt
fiadd
add
fwait
mov
add
cmp
and
fcomp
dec
xchg
fcomp
dec
xchg
cwde
fisttp
xor
(bad)
xchg
add
popf
hlt
rol
add
mov
add
cmp
and
fcomp
dec
xchg
fcomp
dec
xchg
cwde
fisttp
fs
out
xchg
add
xchg
mov
sub
lea
xchg
fcom
dec
xchg
fcomp
dec
push
popf
hlt
rol
add
retfw
push
fist
xchg
add
fisttp
fmul
nop
mov
xchg
fcomp
dec
xchg
fcomp
dec
les
and
fcomp
dec
xchg
fcomp
dec
les
aad
ficom
fisttp
fisttp
fisttp
xor
int
xchg
mov
xchg
fcomp
dec
xchg
fcomp
dec
jo
fisttp
xor
xchg
fcomp
dec
xchg
fcomp
dec
int
fistp
sahf
sub
add
fimul
or
dec
xchg
fcomp
dec
xchg
fcomp
dec
sbb
fcom
dec
and
fcomp
dec
xchg
fcomp
dec
js
fisttp
add
dec
xchg
cmp
dec
inc
xor
std
xchg
fcomp
dec
xchg
fcomp
dec
js
fisttp
out
pop
add
xchg
dec
xchg
fcomp
dec
xchg
fcomp
dec
xchg
push
frstor
and
fcomp
dec
xchg
fcomp
dec
xchg
jl
dec
ficom
fisttp
fisttp
cmp
dec
stos
add
ficom
xchg
push
fcom
xchg
add
aas
sub
xchg
test
enter
cli
jg
xor
aaa
xchg
aaa
imul
dec
xchg
fcomp
dec
xchg
fcomp
dec
xchg
fdivr
dec
xchg
fdivr
dec
jo
fisttp
xor
xchg
fcomp
dec
xchg
fcomp
dec
sti
fcomp
mov
and
fcomp
dec
xchg
fcomp
dec
xchg
sbb
ficom
sar
fcmovnu
dec
sbb
fisttp
fstp
push
inc
push
fldcw
push
(bad)
fist
push
add
nop
(bad)
(bad)
dec
push
and
sbb
push
xchg
jp
adc
mov
dec
cmp
adc
movs
mov
push
mov
sar
xchg
ror
shr
add
shr
outs
sbb
repz
(bad)
cmc
movs
sbb
mov
(bad)
sbb
in
call
sbb
mov
push
test
push
mov
shl
sbb
mov
jmp
cli
movs
push
pusha
out
push
shr
push
inc
dec
movs
push
cmp
mov
call
pusha
jg
sub
(bad)
stc
movs
sbb
mov
jmp
adc
sar
movs
lods
mov
sbb
mov
jmp
out
movs
repz
popa
movs
pop
shr
scas
xchg
inc
movs
dec
rcl
sbb
mov
jmp
push
mov
(bad)
mov
push
test
push
mov
add
sbb
mov
jmp
cli
movs
push
pusha
out
push
shr
push
leave
dec
movs
push
cmp
mov
call
sbb
mov
sbb
mov
jmp
adc
add
movs
lods
mov
sbb
mov
jmp
stc
movs
outs
ror
cmps
push
shl
push
or
cmps
mov
mov
outs
push
lldt
lock
dec
fwait
pushf
ds
mov
inc
sub
loope
call
dec
mov
mov
iret
dec
inc
add
aad
clc
mov
ror
gs
push
inc
std
jecxz
push
rcr
cmp
in
dec
std
(bad)
xor
int
add
or
fimul
fmul
mov
sub
ror
sub
push
rcr
(bad)
jmp
dec
std
outs
ins
dec
push
xor
ja
mov
outs
pop
dec
xchg
ret
cmps
add
(bad)
in
movs
push
cmp
movs
inc
shr
add
cmc
int3
sbb
mov
outs
xor
pop
cdq
add
inc
das
in
or
xor
mov
push
movs
mov
bound
xchg
push
ror
pop
cs
dec
dec
ret
push
ror
inc
into
in
or
loopne
lods
ds
cmps
aad
repnz
retf
out
dec
mov
push
dec
lods
sub
pop
pop
and
aas
scas
ds
ja
aaa
adc
lods
ds
pop
fld
mov
std
xchg
ror
or
mov
outs
mov
lock
dec
push
setl
xor
add
mov
jbe
aas
wrmsr
sbb
(bad)
imul
sbb
add
push
fsubr
clc
test
xchg
psubusb
mov
fmul
pushf
bswap
push
cmps
fldcw
xor
xchg
retf
jo
inc
xchg
and
inc
xchg
and
sub
mov
and
pshufw
fldcw
aad
jecxz
adc
rol
and
push
fmul
pushf
fldcw
aad
xlat
sar
inc
xchg
push
rol
and
cmp
outs
sbb
out
jle
inc
imul
pushf
inc
xchg
and
inc
xchg
and
call
xchg
push
rol
and
aaa
fldcw
aad
push
fmul
stc
inc
xchg
and
inc
xchg
and
adc
rcr
fstp
cs
imul
push
pop
sbb
xor
sub
mov
int3
jle
sbb
call
sub
pushf
lods
or
push
in
in
movs
loopne
pop
stos
cmp
push
cmp
movs
outs
sar
mov
mov
cs
sub
das
jl
xor
or
mov
xchg
add
add
paddsb
xchg
mov
sbb
pushf
ficom
push
dec
fisttp
push
ins
aad
mov
lods
int
ror
ds
inc
mov
cmp
inc
sub
mov
pop
daa
inc
das
retfw
call
movs
repz
mov
and
adc
pop
hlt
add
fucomi
std
imul
test
aad
outs
xchg
cmp
stc
dec
push
std
jecxz
push
sar
fmul
sub
ja
dec
std
xor
inc
mov
addr16
push
sar
lods
add
rol
inc
(bad)
shr
movs
inc
ins
loopne
mov
out
test
mov
or
adc
mov
in
scas
shl
sub
lods
mov
hlt
sar
test
mov
sub
add
push
sub
test
ds
mov
mov
jge
mov
outs
pushf
mov
rcr
(bad)
cli
clc
movs
enter
dec
sub
movs
sub
adc
dec
xchg
fst
stos
imul
dec
jmp
or
mov
add
mov
ret
shl
jp
rcl
ret
adc
enter
sahf
repnz
mov
mov
lea
pop
mov
arpl
in
cmp
jb
lea
mov
or
xor
xchg
in
lods
(bad)
shl
mov
lea
mov
lods
ret
pushf
repnz
lea
mov
call
in
fcmovnbe
cmp
lea
mov
hlt
mov
shl
mov
sbb
movs
(bad)
lea
mov
hlt
inc
adc
cmp
cld
pop
(bad)
shl
adc
mov
xchg
ret
scas
lea
mov
and
xchg
icebp
xchg
push
cmc
mov
aas
pop
lock
wbinvd
or
(bad)
sahf
jmp
sahf
mov
hlt
xor
pushf
or
lea
mov
mov
or
sub
dec
(bad)
sahf
out
lea
mov
hlt
imul
mov
lea
push
pop
(bad)
lock
sbb
inc
ret
mov
lea
hlt
and
cld
dec
out
(bad)
and
cmc
(bad)
(bad)
mov
jp
sahf
repnz
mov
mov
aam
scas
das
fsub
mov
xor
ror
fsub
mov
push
pop
sub
xlat
rcl
lea
mov
pop
ret
shl
mov
lea
mov
pop
(bad)
sahf
repnz
lea
mov
add
shl
mov
lea
mov
lods
lea
mov
xchg
sub
scas
inc
fucom
dec
(bad)
div
iret
retf
into
sub
and
repnz
(bad)
div
iret
retf
into
sub
and
repz
das
addr16
adc
in
lods
das
dec
in
call
mov
pop
(bad)
in
xlat
sar
inc
repz
xor
arpl
in
cmp
push
inc
xlat
shl
inc
mov
out
adc
pop
ret
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
cmp
cmps
movs
push
int
movs
push
mov
dec
push
shr
push
shr
push
shr
push
xchg
out
movs
pop
jae
push
mov
ds
daa
sbb
mov
jmp
loop
push
std
sti
movs
push
sar
push
aaa
out
and
rcl
jg
xlat
repnz
shl
ror
ins
call
push
mov
xor
mov
sbb
out
inc
push
sub
test
out
add
xor
in
dec
push
or
test
sub
repz
dec
fdivr
and
add
int3
adc
pop
addr16
mov
add
dec
std
inc
inc
dec
push
ror
mov
out
dec
pop
addr16
test
std
dec
mul
popa
cmps
push
and
movs
lods
adc
adc
dec
ins
adc
ja
aad
in
adc
xchg
fld
pop
fild
hlt
sar
test
mov
in
or
cli
pushf
add
out
pushf
sub
in
dec
bnd
movs
lods
outs
adc
cmp
frstor
mov
aaa
stos
mov
into
js
pop
daa
inc
out
outs
ins
call
dec
std
or
dec
pop
jecxz
mov
ins
int3
push
int
or
xchg
inc
pminub
cmovae
push
in
movs
inc
aam
mov
out
cmps
xchg
cmp
dec
pop
daa
ins
dec
psubd
jecxz
test
mov
add
add
adc
cmp
call
adc
jge
mov
or
jbe
test
out
in
push
dec
sub
imul
adc
pop
jns
and
add
jg
add
cdq
push
bound
pop
cmp
(bad)
sub
push
fstp
fcmovb
xchg
cs
(bad)
mov
jg
pop
cmp
pop
imul
jg
ds
aam
scas
out
cmp
cmp
sbb
(bad)
mov
jmp
in
loopne
lahf
out
cwde
push
ins
call
lods
les
in
dec
push
or
or
ret
or
mov
(bad)
or
inc
pushf
mov
std
das
int3
test
add
mov
push
ror
or
test
inc
hlt
sub
es
movs
push
ror
(bad)
out
test
dec
cmp
push
ror
shr
test
sub
inc
xchg
pop
daa
inc
daa
addr16
push
mov
dec
push
sahf
adc
or
pop
daa
in
movs
imul
push
and
daa
inc
(bad)
outs
cld
push
dec
ins
pop
bound
adc
outs
xchg
lock
mov
scas
sub
adc
rcl
fsubr
push
push
mov
data16
xchg
sub
mov
sbb
push
sub
inc
jbe
xor
scas
ds
shr
shr
fild
lock
dec
(bad)
scas
mov
or
in
or
xchg
stos
imul
sub
mov
cmp
mov
lods
into
adc
aaa
dec
mov
outs
pushf
pop
xor
mov
dec
xor
or
push
or
sub
call
push
jb
cmp
sbb
mov
mov
cld
cmp
not
pop
idiv
imul
mov
call
movs
pusha
mov
popf
fwait
jl
mov
lods
movs
pusha
mov
xchg
mov
mov
aam
scas
out
cmp
cmp
mov
jmp
cli
adc
shr
sbb
in
call
sbb
mov
mov
sbb
mov
jmp
in
call
sbb
mov
es
shl
mov
shl
shr
adc
add
nop
cmp
dec
fistp
dec
mov
movs
repz
sbb
xlat
loop
lods
data16
dec
push
rcr
ror
xor
fucomi
movs
hlt
sar
test
daa
inc
push
dec
sub
fs
mov
aaa
mov
aas
cmps
movs
sub
dec
dec
sub
push
and
inc
cmps
cmps
pop
or
std
ret
xor
pop
sub
movs
in
jl
mov
push
pop
test
cmc
or
div
cmp
adc
mov
inc
(bad)
push
pop
cmp
std
stos
icebp
pop
push
ror
xor
dec
cmc
ret
push
sub
lock
scas
ds
jnp
rcl
stos
pop
daa
inc
mov
cld
push
hlt
rcr
mov
(bad)
pop
stos
mov
data16
(bad)
mov
mov
movs
mov
outs
mov
and
add
adc
aaa
sbb
jl
add
mov
outs
pop
mov
neg
movs
lods
cmp
pop
inc
rol
scas
ds
or
adc
mov
jmp
dec
mov
jne
mov
enter
dec
jl
adc
mov
dec
call
mov
sub
fist
dec
call
push
push
clc
movs
push
sbb
adc
mov
dec
call
fcom
dec
call
mov
add
loop
fwait
adc
loope
sbb
fwait
adc
loopne
sti
add
jno
arpl
pop
jg
scas
and
jge
sbb
mov
stos
xor
shl
jo
sbb
stos
(bad)
out
add
out
cwde
push
ins
call
cmp
leave
clc
sub
mov
es
xchg
adc
push
sar
push
add
stos
add
pop
push
and
bound
push
ins
aad
lahf
mov
ror
shr
test
repz
adc
or
rcr
test
movs
jo
in
dec
repz
push
sub
movs
jns
pop
imul
in
or
add
and
fucomi
movs
mov
addr16
cld
or
dec
std
mov
push
xchg
in
int3
or
mov
scas
stc
cwde
push
ins
in
movs
lods
cmp
inc
sar
ins
int
or
cmp
and
scas
mov
push
outs
arpl
test
or
xor
dec
mov
outs
mov
dec
mov
mov
movs
and
and
std
jmp
movs
(bad)
dec
pop
sub
or
inc
retf
inc
lahf
jmp
inc
pop
imul
or
ret
addr16
and
pop
adc
fiadd
aam
cmp
cmp
adc
push
xlat
adc
jp
pop
lods
sub
and
jmp
ss
outs
cmp
mov
fcomp
xchg
loopne
fidiv
(bad)
inc
sub
sahf
inc
sub
rol
ins
shr
je
rol
mov
inc
sub
rol
ins
shr
ja
add
and
int
and
sbb
cmps
pop
mov
ja
bound
xchg
fsub
cmp
mov
in
lods
out
(bad)
stc
xor
sbb
mov
jmp
shl
pop
mov
sbb
mov
jmp
mov
mov
mov
jmp
bound
sbb
mov
stos
inc
sbb
cwde
push
rol
pop
aam
inc
ins
shr
pop
push
rol
movs
gs
mov
push
std
pop
lock
sar
inc
cmc
out
or
rol
adc
xchg
adc
push
shl
inc
imul
mov
(bad)
lods
jo
and
addr16
jg
dec
mov
fistp
jns
enter
cmc
jb
pop
push
int
movs
mov
data16
push
std
jecxz
push
sar
sbb
in
dec
pop
sub
stos
push
ror
sub
or
push
aam
push
ror
inc
sub
dec
std
dec
sti
push
arpl
push
(bad)
cmp
jnp
ins
in
movs
icebp
mov
adc
xor
fild
or
dec
mov
ret
test
aaa
int
push
mov
add
inc
ror
lods
ds
std
ret
(bad)
add
dec
ins
adc
xor
retf
add
cs
mov
clc
add
dec
cmc
sub
lods
sub
pop
push
pop
js
imul
repnz
cmp
movs
(bad)
cli
mov
mov
test
dec
xchg
fldcw
inc
pop
dec
add
adc
inc
dec
mov
outs
test
dec
sub
jg
scas
ds
iret
hlt
rcl
stos
inc
stos
add
push
int
or
mov
push
imul
pop
sbb
loop
mov
or
push
movups
cmp
push
in
jmp
les
cmp
or
out
inc
or
lds
jmp
fmul
lods
lods
jp
jmp
nop
jmp
es
jmp
neg
jecxz
lds
into
and
div
xor
push
loope
dec
cwde
push
retf
(bad)
and
fsubr
pop
(bad)
in
mov
mov
jmp
mov
jb
(bad)
movs
push
shr
sbb
mov
jmp
jmp
(bad)
mov
jmp
in
movs
sbb
mov
jmp
in
movs
sbb
mov
jmp
mul
push
(bad)
in
movs
sbb
mov
jmp
in
movs
sbb
mov
mov
sbb
mov
jmp
lahf
movs
sbb
in
call
shl
mov
mov
(bad)
mov
jmp
pop
scas
sbb
mov
jmp
fwait
scas
push
shr
sbb
mov
jmp
cli
movs
push
(bad)
stc
movs
sbb
mov
jmp
mov
jmp
mov
jmp
repnz
sar
push
(bad)
in
movs
sbb
mov
jmp
xlat
xchg
lahf
ret
fadd
shl
ret
xchg
cwde
lods
call
pop
inc
mov
mov
out
ret
pop
pop
push
paddsb
mov
xor
mov
jp
pop
jo
or
inc
icebp
(bad)
sti
outs
jle
clc
pop
in
ret
adc
(bad)
jle
movs
push
adc
pop
dec
pop
cs
ficom
addr16
adc
std
or
ins
inc
fisttp
push
test
xor
(bad)
hlt
ror
stos
mov
inc
jmp
int
movs
mov
outs
call
gs
fwait
stos
pop
outs
sbb
pop
xor
std
jbe
dec
mov
retf
test
lods
ds
xchg
mov
dec
popf
(bad)
dec
loop
add
(bad)
or
add
sub
or
pop
leave
push
ror
xor
out
mov
outs
push
jg
cli
retf
arpl
movs
mov
ds
jge
add
pop
mov
ins
sub
inc
stc
push
mov
push
sub
stos
and
arpl
mov
movs
dec
xchg
jmp
push
pop
int3
inc
mov
jge
mov
arpl
mov
pop
div
inc
jp
outs
(bad)
sub
call
sub
std
(bad)
sub
std
mov
adc
(bad)
sub
std
xchg
std
lea
test
pusha
ja
arpl
pop
cdq
cmps
pop
jbe
mov
arpl
popf
(bad)
in
mov
cmp
ins
dec
mov
adc
inc
inc
lods
mov
mov
jmp
sti
pop
push
aaa
out
and
rcl
ret
mov
mov
shr
movs
cwde
ret
mov
mov
mov
(bad)
cmc
mov
sub
jnp
or
dec
icebp
neg
pop
push
(bad)
dec
shl
arpl
dec
mov
cs
das
xor
(bad)
add
ins
aad
fidivr
cs
out
sub
mov
add
push
add
movs
inc
dec
hlt
dec
dec
sub
push
cmp
ror
sub
pusha
add
pushf
dec
inc
gs
push
shl
ds
sbb
adc
fxch
push
stos
fild
push
sub
call
sti
movs
fidivr
aam
sbb
pop
in
hlt
fld
out
add
es
movs
cmp
sub
sub
and
cmp
lods
cld
dec
std
scas
retf
ror
mov
les
iret
std
or
ds
das
in
adc
pop
shl
sbb
add
scas
out
movs
int3
push
dec
std
ret
push
std
jecxz
scas
ds
aad
adc
add
jle
cmp
or
iret
in
or
sbb
pop
adc
iret
std
or
or
mov
loop
std
xchg
loope
gs
push
psubusb
xor
pop
mov
push
inc
inc
mov
and
xchg
loop
(bad)
ss
das
inc
ds
mov
aaa
scas
pusha
cmc
jnp
sbb
adc
mov
sbb
pusha
cmc
jnp
pusha
cmc
jnp
enter
div
jecxz
cmc
jnp
pusha
cmc
jnp
mov
scas
and
jno
scas
jmp
(bad)
cmp
xor
das
jg
imul
and
mov
sbb
imul
in
lods
out
aam
nop
sbb
in
call
inc
ror
sbb
mov
jmp
int
sbb
mov
jmp
mov
jmp
shr
mov
shr
(bad)
cli
cmp
push
adc
sti
add
(bad)
in
movs
adc
sbb
repnz
in
sbb
out
cwde
push
ins
call
xor
mov
cmc
int
daa
loopne
jge
jmp
mov
sub
push
aaa
and
push
ror
and
mov
push
nop
and
dec
push
psubusb
cwde
icebp
xor
fwait
lods
lock
push
shl
inc
sub
mov
inc
ins
loopne
mov
sub
adc
sbb
jno
in
or
aaa
or
stos
mov
mov
pop
xor
fst
dec
jmp
test
dec
popf
fnstcw
pop
movs
outs
or
mov
mov
(bad)
fidivr
sub
pop
int3
jl
pop
addr16
xor
or
leave
iret
adc
(bad)
sub
sbb
sub
push
mov
in
or
loop
and
(bad)
daa
xlat
inc
push
sub
pushf
scas
pop
inc
adc
aam
ss
cmc
out
dec
mov
nop
cmps
lods
sub
pop
ffree
mov
dec
(bad)
inc
stos
inc
shl
ret
je
add
gs
pop
std
adc
fiadd
push
dec
int
arpl
retf
aad
jmp
and
in
mov
call
inc
mov
jb
mov
stos
jno
sti
cmp
clc
stc
cmp
mov
cmp
mov
shl
jno
xor
cmp
push
cmp
jae
cdq
clc
mov
lea
jp
xor
call
push
fmul
aam
nop
pop
shr
add
(bad)
in
movs
sbb
mov
jmp
push
mov
(bad)
in
movs
sbb
mov
pop
push
std
in
in
aad
fs
and
mov
push
(bad)
in
movs
sbb
mov
jmp
cli
je
shr
sbb
in
call
sbb
mov
pop
push
inc
out
ror
cli
movs
outs
ror
movs
push
sar
mov
(bad)
jmp
add
test
push
rol
sub
sub
sbb
push
leave
jns
outs
push
or
jbe
or
lods
sub
movs
lds
dec
jmp
ret
jmp
adc
sbb
cli
and
and
inc
push
shr
mov
outs
js
mov
push
test
ret
rcl
cmps
sub
jle
pop
jle
ror
inc
out
and
outs
stos
sahf
fld
cmc
mov
jnp
gs
movs
push
sar
shr
in
or
mov
mov
sub
or
xor
inc
ret
mov
hlt
cli
hlt
ror
pop
fild
lock
cld
dec
pop
and
int
or
retf
push
cmp
hlt
adc
repnz
movs
inc
xor
push
std
cs
jbe
int
or
pop
add
mov
outs
in
push
xchg
fnstenv
addr16
gs
pop
inc
sub
dec
and
jmp
mov
pop
inc
sar
adc
cmps
lods
ds
mov
data16
lods
ds
cmp
add
mov
add
cmp
mov
mov
test
pushf
shl
push
ss
(bad)
or
movs
scas
push
movs
(bad)
push
movs
mov
jns
(bad)
popf
jns
lahf
fsubr
or
(bad)
mov
ins
dec
loope
dec
cs
push
push
mov
adc
inc
ror
sbb
adc
sbb
mov
or
and
dec
int
je
enter
(bad)
inc
jmp
ror
mov
out
push
ds
sti
movs
mov
clc
bound
adc
sbb
mov
jmp
mov
jmp
outs
test
sbb
(bad)
mov
jmp
adc
(bad)
mov
jmp
adc
sbb
mov
jmp
sbb
pop
add
mov
and
out
cwde
push
ins
call
js
pop
in
mov
adc
jg
(bad)
out
dec
icebp
push
aam
push
(bad)
retf
sub
sub
ins
cmp
mov
pushf
push
or
lea
mov
sbb
int
mov
mov
loope
add
push
sti
push
aam
cmp
ret
out
add
(bad)
in
movs
push
sub
mov
out
ret
out
add
in
xchg
pop
daa
inc
inc
movaps
jo
cmp
loopne
loop
std
jmp
sbb
push
add
add
push
gs
dec
dec
add
inc
or
mov
sar
sti
inc
aaa
push
ins
mov
pop
fistp
test
fild
hlt
sar
test
movs
add
cmps
cwde
or
std
ret
push
cmp
sahf
je
add
cmps
out
movs
lods
into
adc
mov
inc
mov
in
clc
repz
sub
ret
xor
fwait
out
movs
mov
das
pushf
dec
mov
inc
xlat
lods
data16
les
ds
xchg
cwde
adc
and
mov
sbb
sub
loope
movs
cmp
inc
movs
imul
mov
dec
mov
cs
ss
mov
into
jmp
in
pop
mov
mov
stos
fisttp
jmp
out
pop
lods
ds
jl
lods
out
rcr
pop
rcr
push
in
mov
push
(bad)
in
movs
sbb
mov
jmp
add
(bad)
mov
jmp
int
sbb
mov
push
adc
pop
dec
retf
pop
(bad)
jb
or
movs
fadd
sbb
adc
sbb
mov
sub
out
add
out
out
cwde
push
ins
call
or
wrmsr
inc
(bad)
cs
or
or
cmps
mov
ror
push
out
dec
mov
(bad)
aad
inc
dec
and
xchg
je
push
outs
aad
sti
mov
sub
pop
xor
inc
sub
rol
inc
sub
sar
fld
(bad)
lds
push
mov
outs
sub
(bad)
mov
adc
sbb
xor
dec
dec
std
neg
dec
push
int
or
add
pop
daa
les
push
ror
ficomp
cli
movs
repnz
sub
pop
adc
inc
mov
sub
fsubr
jmp
ss
aam
push
adc
and
push
ror
jo
out
dec
std
mov
mov
push
pop
push
mov
fstp
js
cmp
add
cli
adc
daa
inc
repz
cld
push
sbb
cmp
adc
push
or
mov
into
lea
outs
clc
(bad)
mov
cs
lahf
lea
cld
ins
scas
ds
and
adc
or
jo
pushf
outs
mov
xor
data16
mov
outs
and
and
cmp
mov
cmp
mov
arpl
mov
jne
movs
lds
leave
push
pusha
push
aas
xchg
cdq
dec
push
test
cli
xchg
cwde
outs
mov
rol
adc
je
iret
js
lods
adc
mov
ds
mov
mov
jmp
jmp
rcl
push
shr
jle
inc
mov
or
movs
es
call
jns
sub
(bad)
mov
rol
push
paddsb
add
dec
in
mov
mov
add
push
outs
aad
sub
pop
daa
inc
ja
out
cwde
push
sub
movs
popf
fdiv
outs
aad
mov
or
addr16
movs
sbb
dec
not
inc
call
in
movs
push
rcl
xor
(bad)
fisub
aam
aam
jnp
dec
hlt
inc
out
dec
icebp
cli
mov
sub
movs
bound
or
test
ins
test
mov
into
jmp
mov
outs
push
stos
push
ins
test
dec
retf
or
xchg
dec
pop
fisttp
dec
(bad)
cli
mov
mov
mov
outs
test
(bad)
repz
(bad)
sbb
cmp
int3
stos
scas
ds
or
lods
ds
lods
ds
gs
adc
jge
and
clc
movs
pop
dec
push
subps
test
push
or
cmp
xlat
movs
mov
outs
jae
mov
mov
pop
mov
pop
out
push
(bad)
xor
xchg
sar
ret
ffree
and
(bad)
js
ffree
js
fadd
and
data16
mov
outs
jae
dec
out
push
js
ffree
js
ffree
adc
ret
adc
push
ffree
js
ffree
sub
ret
jecxz
xor
push
repnz
scas
dec
and
in
and
repnz
xchg
int
xor
xchg
jecxz
lea
inc
lods
mov
(bad)
mov
jmp
or
mov
push
sar
inc
and
mov
push
(bad)
in
movs
sbb
mov
jmp
adc
in
aad
adc
dec
out
mov
push
sbb
movs
inc
push
test
sbb
mov
xchg
aas
sbb
jp
mov
into
sbb
adc
fstp
(bad)
sbb
aad
je
mov
nop
lods
pop
sbb
std
jecxz
movs
ds
xchg
pop
and
aas
inc
retf
in
cwde
lods
sbb
cmp
test
adc
aaa
fcom
sbb
shl
sbb
mov
jmp
mov
jmp
out
movs
nop
aaa
fcom
sbb
rol
(bad)
mov
jmp
call
test
out
add
sbb
mov
inc
lods
ds
xor
(bad)
in
movs
sbb
mov
inc
test
shl
ret
mov
pop
mov
(bad)
adc
sbb
mov
jmp
shl
in
frstor
mov
push
(bad)
cld
stc
movs
outs
sar
push
shr
call
movs
mov
jno
and
and
push
sbb
stos
(bad)
int3
push
push
shl
dec
add
mov
mov
sub
in
dec
movs
jno
pop
dec
std
lahf
adc
popf
and
or
(bad)
cmps
sar
push
(bad)
ret
adc
pop
addr16
movs
mov
dec
daa
rcr
stc
push
aaa
ret
shr
mov
inc
and
jmp
mov
outs
add
mov
outs
and
mov
dec
test
mov
sub
shl
inc
das
push
sub
cmp
push
sub
push
mov
add
or
(bad)
inc
xlat
inc
sar
rol
cdq
pop
push
xor
jg
xor
push
adc
stos
or
push
addr16
shl
test
ds
adc
jae
mov
lods
jns
and
test
sub
mov
or
cmc
or
cmp
add
adc
sar
test
fld
je
add
icebp
sub
mov
and
xor
or
cmp
inc
ret
jecxz
pop
aam
nop
adc
lods
jo
call
retf
data16
fistp
cmp
pop
pop
ins
pop
push
xchg
aad
iretw
dec
xor
lahf
adc
push
pop
pop
ins
pop
push
aam
data16
dec
jle
lahf
ins
inc
inc
out
imul
pop
push
sahf
aad
data16
sbb
(bad)
inc
cs
out
outs
pop
pop
ins
pop
push
mov
loop
retf
popa
add
lahf
dec
es
out
and
pop
ins
pop
add
aad
data16
jle
not
jecxz
rcl
nop
or
lods
nop
adc
adc
inc
ret
jecxz
pop
aam
nop
adc
lods
call
push
gs
cmps
(bad)
lods
nop
pop
cwde
lods
inc
adc
and
adc
out
fcomp
cmp
dec
ret
add
fidivr
add
into
movs
xlat
jecxz
sub
xor
push
aam
nop
pop
cwde
lods
nop
adc
jecxz
inc
lds
nop
adc
stc
xchg
(bad)
nop
adc
cli
cs
sbb
std
xchg
(bad)
lods
nop
adc
call
rol
xor
cmps
aam
or
xor
jmp
lods
nop
adc
loop
pop
fld
pop
pop
add
scas
sbb
das
push
aam
nop
adc
in
stos
and
lods
nop
adc
lods
les
call
pop
retf
loop
das
shl
pop
and
loop
sub
xchg
retf
dec
cld
div
pop
adc
jle
rcr
and
test
adc
mov
(bad)
mov
jmp
out
pop
jae
push
movs
xchg
int3
mov
push
std
sub
push
sar
inc
popf
out
or
(bad)
repz
imul
add
xchg
dec
pop
and
icebp
ret
xor
mov
lds
inc
push
or
sbb
or
pusha
push
push
outs
movs
icebp
push
push
lock
imul
sub
push
ret
adc
mov
es
mov
mov
add
hlt
ror
stos
icebp
popf
pop
ss
ds
lahf
sti
pop
push
sbb
sbb
daa
lods
ds
lds
or
test
(bad)
aam
push
add
dec
mov
ins
inc
pop
hlt
shr
inc
push
inc
into
dec
std
scas
cmp
or
sub
imul
inc
movsx
in
mov
pop
stos
mov
outs
test
or
outs
out
movs
push
ins
in
movs
dec
sub
sub
inc
aas
fld
jmp
ds
add
jge
dec
xchg
fld
inc
inc
sub
mov
mov
(bad)
in
aam
lock
cmps
in
adc
dec
out
dec
cmc
mov
adc
or
pop
sub
push
xor
ret
inc
sub
dec
inc
inc
sub
add
or
jne
inc
and
cmp
push
xor
(bad)
dec
std
call
sbb
and
cmps
(bad)
xchg
aaa
das
push
and
mov
std
inc
sub
and
xor
mov
jmp
pop
xchg
fwait
mov
xchg
xlat
xlat
dec
xchg
(bad)
xor
aaa
dec
pop
(bad)
inc
dec
dec
xlat
mov
jae
xchg
xchg
inc
mov
xchg
or
adc
(bad)
(bad)
dec
(bad)
or
xlat
mov
pop
mov
xchg
push
mov
xchg
xlat
dec
dec
xchg
(bad)
aaa
dec
pop
(bad)
inc
dec
or
aas
dec
adc
mov
xchg
pop
xchg
xlat
mov
inc
(bad)
dec
dec
and
mov
inc
mov
xchg
xlat
cmps
dec
xchg
fwait
lds
mov
lds
fldenv
mov
xlat
(bad)
dec
xchg
cdq
lds
fstp
scas
inc
fadd
dec
pushf
pop
stos
lods
xchg
aam
dec
jno
cmp
les
cdq
lds
fstp
cmp
mov
mov
sahf
mov
jae
lds
cdq
lds
fstp
mov
sbb
jge
inc
mov
xlat
mov
fistp
sub
pop
xchg
fcomp
jge
jecxz
mov
xlat
mov
cdq
lds
fnstenv
add
xlat
xchg
add
movs
cwde
jnp
js
xor
pop
xchg
xlat
(bad)
dec
xchg
cdq
lds
fstp
sub
ins
xchg
les
jge
jae
mov
xlat
mov
fstp
cmp
fld
pop
inc
jge
iret
sbb
xlat
mov
fstp
popa
loop
mov
push
inc
push
sahf
mov
jae
lds
cdq
lds
fstp
pop
add
enter
and
add
xlat
mov
cdq
lds
fnstcw
add
hlt
pop
inc
jge
arpl
mov
xlat
mov
cdq
lds
fstp
lds
fnstenv
push
mov
addr16
lds
fstp
fiadd
adc
dec
xchg
cdq
lds
fstp
and
data16
ret
movs
push
sub
ret
mov
dec
retf
adc
stos
push
sahf
pop
mov
jmp
push
(bad)
dec
int
push
sahf
pop
imul
aaa
pop
int
push
lods
ds
push
jl
scas
out
(bad)
sbb
jmp
out
push
aaa
ret
push
inc
shl
fs
shl
rol
and
add
sub
mov
lea
fisttp
inc
push
(bad)
jne
daa
mov
rol
inc
and
cmp
add
jmp
jns
ss
sbb
clc
cwde
adc
mov
mov
loop
inc
and
ds
cmps
push
int
movs
cmps
ins
or
cmc
into
adc
movs
(bad)
cli
in
into
push
in
and
shr
mov
data16
push
rcl
cmps
das
mov
mov
int3
sbb
add
add
dec
ror
stos
mov
out
hlt
shl
stos
in
pop
add
xchg
iret
sbb
mov
int
daa
(bad)
xchg
dec
mov
push
add
dec
ins
add
lods
ds
inc
mov
cs
jecxz
sbb
pop
and
ret
mov
outs
xchg
and
and
mov
mov
es
cmps
push
add
hlt
rcl
stos
stos
aaa
inc
add
pusha
mov
daa
or
popw
jmp
ret
pop
daa
inc
mov
jmp
and
jp
cmp
or
fwait
aaa
cld
sahf
inc
mov
sub
or
jge
and
mov
ret
cdq
mov
std
mov
cdq
mov
std
mov
xlat
iret
repz
mov
std
mov
and
adc
mov
std
mov
fwait
mov
std
mov
and
jle
iret
in
jecxz
ja
jmp
xor
xchg
jmp
cmp
test
sbb
fwait
mov
std
mov
sbb
hlt
mov
std
mov
fwait
sar
fwait
mov
std
mov
aad
mov
mov
mov
std
mov
and
mov
lahf
fwait
mov
(bad)
jne
mov
std
mov
pop
cli
cmps
cmps
ja
mov
adc
mov
inc
cli
cmps
fcmovnb
repz
aam
and
inc
cli
cmps
sub
movs
dec
adc
dec
cmp
lods
ds
out
in
frstor
(bad)
(bad)
js
mov
out
cwde
push
ins
call
aam
xchg
in
dec
push
or
dec
pop
xor
adc
js
mov
icebp
xchg
movs
scas
shl
xor
in
dec
mov
sub
sbb
push
pop
push
xor
jl
push
rcl
lods
ds
inc
mov
outs
jo
cmp
stc
dec
std
xchg
or
add
aaa
push
lahf
mov
into
sbb
(bad)
xor
mov
jmp
dec
std
dec
outs
dec
dec
(bad)
inc
ret
inc
shl
sub
adc
ret
adc
cmps
enter
mov
scas
xlat
xchg
retf
test
add
movs
ret
add
(bad)
out
movs
inc
sub
xchg
int
xor
fisttp
and
mov
pop
outs
inc
aaa
div
adc
les
mov
scas
lds
jmp
stos
pop
addr16
das
xor
dec
fcmovnb
add
sbb
adc
inc
ror
scas
ds
push
dec
adc
ds
pop
inc
push
mov
lock
dec
std
inc
dec
stos
pop
push
(bad)
cwde
adc
mov
adc
add
int
jmp
fimul
(bad)
ss
and
mov
push
leave
jne
mov
cmp
dec
js
jg
and
jge
leave
jne
mov
cmp
dec
js
jg
js
jg
js
jl
lea
fbstp
js
jg
mov
jl
and
(bad)
loope
mov
dec
ss
fist
inc
xor
mov
stos
retf
and
or
ja
nop
js
jg
js
jg
js
jg
add
sbb
and
nop
js
jg
sub
pop
ss
dec
js
xor
js
jg
and
mov
cmp
dec
js
jg
repnz
jg
ret
stos
lahf
addr16
fldcw
xor
cmp
pop
cmp
pop
js
jg
js
jg
js
jg
add
sar
jp
pop
sub
jg
dec
cmp
pop
js
jg
sub
jge
cmp
cmps
cmp
xor
inc
xor
cmp
dec
(bad)
xor
into
sahf
ss
push
js
jg
js
jg
(bad)
mov
mov
or
add
jbe
call
cmp
js
jg
xchg
ins
push
lahf
mov
sub
cmp
sub
cmp
pop
mov
cmp
js
jle
mov
sub
cmp
and
jle
and
jb
loope
jno
mov
xchg
mov
xor
shl
inc
and
dec
aaa
je
jmp
sahf
jae
dec
ss
dec
loope
xor
jp
sub
cmp
cmp
jne
jp
dec
or
mov
jbe
inc
mov
pop
pop
js
jg
js
jg
aaa
mov
leave
and
enter
nop
js
jg
js
jg
xor
jbe
add
mov
inc
adc
jno
pusha
xor
cmp
js
jl
mov
xor
enter
and
nop
js
jg
js
jg
enter
and
not
maxps
cmp
jg
js
jg
push
cmp
aas
js
jg
imul
dec
or
xor
cmp
js
jg
sbb
js
jg
js
jg
mov
jle
xor
cmp
dec
js
jg
js
jg
pushf
ja
pop
addr16
je
popa
sub
push
js
jg
js
jg
cmp
jle
cmp
xchg
leave
and
enter
nop
js
jg
js
jg
mov
sub
dec
js
jg
js
jg
and
addr16
jg
js
jg
stc
scas
(bad)
ins
aam
test
inc
aam
test
sbb
jg
js
jg
js
jg
cmp
nop
ss
ss
inc
cdq
jb
adc
jns
out
pusha
xchg
inc
js
jae
js
jg
js
jg
jns
pop
js
cmp
js
jg
add
rcl
cmp
dec
js
jg
js
jg
sub
jbe
dec
js
jg
js
jg
js
jg
pop
jbe
push
cmp
dec
js
jg
js
jle
ss
js
cmp
dec
js
jg
js
jg
sub
pop
ss
dec
js
xor
js
jg
bnd
jbe
call
cmp
js
jg
xlat
pop
pop
pop
js
push
add
ss
dec
js
xor
js
jg
push
cmp
js
jg
cmp
dec
aas
cmp
sub
jg
js
jg
cmp
dec
daa
cmp
sub
jg
js
jg
cmp
dec
das
cmp
sub
jg
js
jg
xor
cmp
pop
js
jle
mov
cmp
xor
cmp
add
cmp
js
jg
xor
cmp
pop
leave
mov
inc
mov
(bad)
sahf
lahf
jae
or
jb
push
js
xor
ret
fwait
ss
dec
js
xor
js
jg
je
es
jbe
sti
js
jg
js
jg
add
pop
add
or
cmp
dec
js
jg
js
jg
aaa
jle
jmp
pusha
xor
mov
mov
aaa
cmp
push
js
jg
js
jg
js
jg
jp
out
js
jg
js
jg
aam
push
pop
stc
push
into
mov
cmp
pop
adc
pop
js
jg
cmp
sub
cmp
out
cmp
mov
pop
dec
mov
xchg
in
aaa
loop
stos
repz
cdq
ss
icebp
js
xor
js
jle
(bad)
ja
pop
jp
cmps
dec
js
jg
js
jg
xor
cmp
dec
js
jg
js
jg
xchg
enter
popa
daa
dec
leave
mov
mov
js
jg
js
jg
shl
aaa
jbe
dec
sahf
ja
xor
add
jne
iret
mov
mov
test
outs
lds
xor
js
jg
xor
repnz
popf
aad
sar
es
xor
inc
dec
gs
jg
js
jg
je
jle
jmp
add
js
jg
ret
mov
(bad)
iret
dec
ss
dec
in
mov
js
xor
js
jg
or
dec
ss
dec
leave
dec
cmp
pop
cmp
xor
ss
xor
(bad)
in
js
xor
js
jge
sub
adc
dec
cmps
cmp
shl
dec
mov
and
mov
jae
into
push
mov
imul
ja
nop
js
jg
push
aaa
jl
pop
cmp
lahf
js
jg
js
jg
adc
xchg
jo
inc
cmp
cdq
es
dec
xchg
popf
sahf
ja
pop
test
int3
mov
cmp
aas
js
jg
js
jg
jp
cmp
sub
sub
cmp
js
jg
sbb
add
js
jge
sub
adc
dec
cmps
cmp
shl
dec
mov
and
mov
jae
into
push
jbe
out
out
outs
fs
js
xor
ja
jl
inc
les
jge
cmp
mov
imul
sub
sub
cmp
jno
push
in
out
fdiv
jbe
pop
cmp
fwait
pop
and
and
je
jp
dec
mov
and
and
repz
mov
dec
ss
fistp
xor
loop
mov
pop
mov
cmp
dec
js
jg
in
ds
and
jno
aaa
cmp
push
js
jg
js
jg
xor
idiv
sbb
sub
cmp
js
jg
xchg
mov
out
js
jg
js
jg
js
jg
ret
jmp
cmp
dec
aam
push
pop
jne
into
mov
outs
lds
xor
movs
out
or
fnstenv
jbe
dec
and
dec
lahf
bound
jbe
dec
and
xor
loope
pop
inc
inc
daa
dec
or
hlt
pop
repnz
shl
hlt
pop
xchg
and
dec
leave
stc
out
mov
ja
rol
clc
add
pop
loop
sar
in
lock
in
loope
push
(bad)
stc
xchg
sbb
mov
jmp
adc
(bad)
mov
jmp
aaa
(bad)
xor
shl
ret
fwait
pop
mov
jmp
push
bsf
sbb
shl
dec
ret
pop
pop
push
paddsb
add
outs
push
cmovo
rcl
pop
xor
dec
movs
add
fwait
iret
cmc
sub
sbb
ret
pop
cs
movs
or
int3
sbb
ror
(bad)
add
sub
loop
ror
shr
test
stos
sbb
gs
push
sar
push
xor
mov
mov
aaa
xchg
test
mov
stc
push
xor
pusha
cmps
div
inc
jmp
sub
movs
and
dec
gs
ror
mov
outs
pusha
fistp
dec
test
sub
addr16
addr16
div
dec
cmps
pop
cmps
inc
sub
mov
mov
inc
pop
lods
sub
pop
gs
outs
shr
arpl
mov
bound
sbb
or
mov
lods
adc
cmp
jne
push
pop
mov
in
pusha
push
ret
scas
ds
jmp
adc
mov
mov
push
mov
popa
mov
lods
mov
ds
shl
rcl
stos
scas
ds
cmp
push
movs
or
dec
dec
mov
xchg
daa
jno
cmp
inc
rcr
iret
sub
or
mov
push
dec
out
cmps
push
xor
xor
dec
xlat
or
cdq
int
sti
data16
add
dec
fwait
xor
xlat
xor
pop
lea
repnz
fwait
iret
lock
xlat
sbb
scas
cwde
iret
mov
pop
xchg
outs
inc
rcr
xor
dec
xlat
xor
or
add
dec
mov
xor
sti
(bad)
gs
push
dec
cmps
push
in
lock
xlat
xor
dec
xlat
sub
xlat
xor
or
add
cmp
sub
mov
adc
lock
stos
xor
(bad)
add
addr16
(bad)
cmp
dec
fwait
iret
lock
xlat
xor
movs
aam
add
sbb
(bad)
into
cmps
push
push
push
lock
xlat
add
test
fyl2x
dec
iret
push
lock
xlat
cmp
xlat
xor
add
retf
cwde
(bad)
mov
dec
fcmovne
lock
xlat
adc
dec
mov
lock
xlat
cmp
lea
dec
fwait
iret
lock
xlat
xor
push
aad
cmove
jmp
dec
inc
xlat
lock
xlat
xor
or
jle
ss
lock
xlat
xor
clc
xchg
icebp
dec
addr16
dec
xlat
xor
cmp
cmp
xchg
f2xm1
dec
xlat
xor
sti
(bad)
rol
addr16
dec
xlat
xor
pop
or
cmp
pop
xchg
sbb
lock
xlat
xor
dec
xlat
and
xor
dec
mov
dec
xlat
xor
mov
xor
mov
lock
xlat
xor
sbb
lock
xlat
xor
dec
xlat
sub
mov
lock
xlat
xor
dec
out
lock
xlat
xor
pop
aam
lock
stos
xor
xlat
and
jecxz
sbb
sar
dec
mov
lock
xlat
xor
sbb
add
addr16
xlat
xor
add
imul
(bad)
scas
shl
fwait
iret
icebp
dec
(bad)
push
lock
xlat
xor
xor
retf
repz
data16
sti
test
(bad)
mov
push
dec
out
cmps
push
in
lock
xlat
xor
icebp
aam
push
jmp
cmp
dec
stos
xor
xlat
xor
sti
(bad)
rol
addr16
dec
xlat
xor
test
dec
bound
jbe
xor
dec
or
dec
xlat
xor
add
cmp
dec
sub
sti
xor
dec
xlat
xor
ss
lock
xlat
xor
add
cmp
dec
xlat
xor
jo
mov
dec
mov
lock
xlat
xor
sbb
cmp
test
fwait
arpl
pop
movs
fnstenv
sub
dec
test
or
mov
cmps
mov
lods
push
imul
cwde
iret
mov
icebp
cwde
iret
data16
pop
clc
data16
int3
jecxz
dec
fwait
xor
(bad)
add
mov
xlat
lock
xlat
cmp
xchg
or
pop
movs
fnstenv
sub
dec
test
or
mov
adc
jae
add
movs
or
mov
(bad)
into
stos
push
gs
clc
cmp
call
push
mov
lods
add
les
out
push
xchg
out
movs
pop
jae
push
movs
and
cmp
push
std
sti
add
inc
jge
or
sbb
pushf
or
mov
push
xchg
push
nop
cmc
or
dec
cmps
bound
or
inc
push
mov
mov
push
mov
lahf
and
clc
inc
out
cwde
lods
outs
jl
xor
stos
dec
mov
aam
push
sub
movs
jecxz
jl
mov
fmulp
inc
adc
inc
inc
pusha
in
cld
in
in
dec
icebp
xchg
fwait
dec
push
ins
in
movs
dec
shl
add
cmp
dec
push
ror
and
jnp
pop
aad
data16
rcl
stos
push
xor
and
add
mov
outs
test
adc
clc
movs
lea
or
fld
(bad)
fiadd
mov
std
ficomp
imul
inc
pop
lods
sub
pop
pop
and
adc
sbb
mov
ins
cld
push
pop
outs
cmp
dec
test
xor
cmp
jae
stos
inc
cmps
movs
sub
ins
mov
outs
jl
mov
(bad)
stos
mov
into
mov
or
cmp
add
adc
xor
std
pop
jmp
inc
cwde
shl
sbb
ret
cmps
mov
adc
mov
imul
adc
mov
imul
adc
mov
imul
mov
imul
sbb
fs
repnz
sbb
dec
imul
mov
repnz
mov
repnz
dec
imul
sbb
div
stos
sub
mov
xchg
sub
pop
gs
jmp
mov
mov
daa
mov
repnz
repnz
push
mov
pusha
pop
(bad)
adc
ds
inc
push
mov
repnz
popf
(bad)
repnz
push
(bad)
dec
je
ret
add
daa
mov
lock
mov
repnz
mov
repnz
std
fisubr
popa
test
daa
mov
repnz
inc
(bad)
sbb
push
mov
repnz
mov
bnd
(bad)
fidivr
outs
jl
cmovs
(bad)
xlat
push
lods
jmp
mov
sahf
add
pop
xchg
xor
dec
cmps
mov
les
jecxz
push
push
xor
push
sar
inc
push
out
or
mov
mov
dec
pushf
xchg
pop
mov
out
push
es
shl
icebp
inc
push
sub
movs
xlat
sub
jmp
push
dec
movs
sbb
cld
mov
ins
ret
adc
test
movs
dec
sbb
jnp
addr16
outs
sbb
dec
retf
push
int
movs
sti
add
shr
test
xor
out
cwde
adc
stc
inc
push
int
movs
stos
iret
inc
inc
push
sub
adc
push
ror
(bad)
out
test
push
sbb
or
pop
dec
sub
arpl
sub
mov
lock
push
sub
movs
push
and
mov
inc
out
ins
in
movs
mov
dec
(bad)
out
movs
push
ror
aam
in
dec
mov
outs
inc
jnp
add
xor
mov
retf
stos
mov
outs
inc
aas
mov
scas
stos
mov
data16
lods
ds
pop
pop
outs
inc
dec
fldenv
inc
fbld
adc
pop
dec
retf
adc
fist
pop
test
dec
sub
lods
out
pop
dec
sub
pop
std
sbb
mov
addr16
jae
and
pop
(bad)
xor
movs
or
out
dec
or
sbb
mov
push
daa
or
out
push
jbe
lds
and
outs
push
mov
and
adc
and
outs
push
mov
std
or
lds
fadd
stc
dec
lds
and
sbb
dec
(bad)
gs
mov
cmp
mov
sbb
pop
(bad)
scas
out
xchg
out
movs
jge
ret
(bad)
int
sbb
mov
jmp
mov
jmp
in
call
sbb
mov
mov
push
shr
loopne
mov
xlat
push
popa
sub
mov
(bad)
mov
jmp
clc
movs
push
sar
ja
out
xor
shr
xor
push
idiv
clc
movs
outs
rol
mov
mov
vpunpckhdq
add
mov
and
retf
add
or
push
cmp
(bad)
dec
pushf
and
pushf
or
pop
jg
and
cwde
jmp
imul
int
mov
fild
push
sub
fcom
dec
repz
mov
or
push
rcr
pop
daa
or
fdivr
dec
push
hlt
shr
test
jne
xor
leave
mov
mov
dec
pop
daa
test
dec
sub
jo
xor
aaa
inc
pop
mov
xor
dec
dec
sub
xor
clc
sub
outs
cmp
aad
inc
mov
into
sub
mov
data16
lods
ds
loopne
add
ins
lds
inc
mov
outs
inc
outs
dec
sub
pusha
mov
in
and
loopne
dec
rcr
stos
sub
adc
out
std
push
ds
movs
and
dec
(bad)
jbe
cmps
lods
mov
add
mov
push
dec
lods
sub
pop
mov
ins
pop
(bad)
push
inc
scas
js
add
dec
ins
or
inc
ror
pop
sub
pop
or
mov
ds
ja
ins
adc
nop
into
repz
push
andps
xor
or
jmp
mov
lds
push
rcl
and
pop
xor
cmp
scas
dec
xor
adc
cmp
cmp
out
jmp
(bad)
out
xchg
lds
cmp
cmps
gs
cmp
js
out
push
push
(bad)
cmp
call
cmps
mov
cmp
cmps
cdq
test
call
(bad)
out
mov
daa
cmp
call
lds
jb
mov
(bad)
jno
test
pop
jp
stos
mov
mov
cmp
(bad)
movs
test
call
scas
mov
cmp
push
(bad)
push
mov
jbe
mov
pop
cmp
call
(bad)
out
call
(bad)
out
mov
out
call
(bad)
out
call
(bad)
out
mov
data16
cmps
test
cmps
pop
sub
push
mov
and
cmp
call
(bad)
out
mov
xchg
cmp
call
(bad)
out
ja
mov
call
(bad)
out
jmp
(bad)
out
call
(bad)
out
mov
jns
push
push
mov
pop
xchg
pop
cmp
mov
out
cmps
cmp
cmp
mov
out
call
(bad)
out
call
(bad)
call
(bad)
out
jmp
(bad)
out
call
(bad)
cmps
jbe
mov
jmp
(bad)
out
call
mov
nop
(bad)
out
call
(bad)
out
push
sbb
add
(bad)
pop
cmp
call
(bad)
out
inc
pop
xchg
jb
sub
cmp
call
(bad)
push
nop
mov
fidivr
call
(bad)
out
pop
(bad)
dec
jge
pop
in
outs
jmp
test
mov
pop
jns
cmps
in
cmp
call
sub
mov
pop
imul
(bad)
out
call
(bad)
out
mov
cdq
cmp
mov
out
call
(bad)
out
add
cmp
lahf
or
sti
lods
xor
cmps
mov
jno
mov
jo
vunpckhps
ret
xchg
and
cmps
pop
cmp
call
(bad)
dec
lods
outs
stos
jecxz
mov
pop
and
jnp
mov
fs
movs
inc
adc
cmp
call
cmps
(bad)
cmp
mov
jbe
cmp
fadd
out
call
(bad)
out
sub
call
test
jne
scas
mov
cmps
mov
cmp
mov
out
call
(bad)
out
mov
or
(bad)
out
stos
adc
mov
add
pop
out
call
(bad)
out
call
(bad)
out
call
cmps
mov
push
inc
push
dec
mov
test
cmps
popa
stos
aas
call
(bad)
out
call
cmps
mov
jnp
(bad)
cmps
cmp
call
lds
pop
rol
out
call
(bad)
jmp
pop
loope
bound
mov
cld
(bad)
out
cmp
call
(bad)
out
jmp
cmp
test
cmps
cmp
call
lds
cmp
call
cmps
sahf
cmp
call
(bad)
jmp
cmp
mov
test
mov
cmp
cdq
lds
pop
sahf
xchg
movs
jne
pop
cld
mov
pop
mov
out
call
(bad)
jmp
cmp
mov
out
call
(bad)
out
jmp
sbb
out
cmp
ins
(bad)
ins
(bad)
out
je
in
out
aas
call
(bad)
out
jmp
cmp
test
cmps
cmp
call
lds
cmp
jmp
cmp
test
out
jmp
cmp
stos
xchg
cmp
call
(bad)
out
cdq
lds
pop
sahf
out
test
jne
mov
call
(bad)
out
call
adc
imul
mov
cmp
mov
and
cmps
jmp
sahf
mov
mov
cmps
inc
inc
xchg
mov
cmps
jns
call
daa
rcr
add
or
jle
push
rcl
pop
shr
movs
(bad)
jmp
push
int
movs
repnz
popa
sub
mov
(bad)
mov
jmp
shl
ror
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
movs
jne
mov
push
std
xlat
sahf
push
sar
inc
test
sbb
sbb
and
mov
test
cmps
sbb
pop
dec
push
or
es
ds
ror
cs
mov
xlat
fisub
mov
sbb
push
aam
fwait
pop
pop
add
aad
dec
data16
xlat
adc
sub
jmp
out
movs
mov
int
or
pmaxsw
aas
jns
sub
mov
pop
addr16
cmps
mov
jmp
mov
push
push
rol
mov
outs
les
int3
mov
mov
sar
mov
outs
push
inc
jno
push
or
add
add
adc
mov
push
sub
movs
outs
and
add
mov
data16
push
shl
inc
int
mov
inc
xor
add
mov
outs
jl
fs
ins
pop
mov
clc
movs
lods
data16
ds
push
sub
sbb
xchg
add
mov
pop
stos
cwde
cmp
nop
mov
outs
sub
mov
sub
popf
cs
movs
out
icebp
mov
cli
stc
movs
mov
(bad)
aam
push
rol
jae
add
add
es
xor
shr
pop
outs
inc
repz
shr
cmc
(bad)
sahf
pop
lods
sub
pop
ins
sub
push
cmovo
sub
neg
(bad)
jge
scas
iret
daa
jg
fild
sbb
fisttp
cmp
(bad)
and
jbe
ds
cmp
mov
cmp
inc
jb
(bad)
push
pop
out
and
cmp
(bad)
out
daa
out
cmp
mov
cmp
inc
jbe
inc
jb
mov
popa
pop
out
and
cmp
(bad)
not
shl
cmp
(bad)
push
fldenv
and
jbe
ds
cmp
mov
cmp
cmps
pop
ja
mov
cmp
mov
cmp
(bad)
jge
xchg
mov
ja
mov
cmp
inc
jbe
(bad)
stos
ja
mov
jg
adc
jbe
mov
scas
daa
out
cmp
mov
cmp
(bad)
push
fldenv
and
(bad)
xchg
sbb
(bad)
mov
mov
mov
sbb
cmp
cld
and
cmp
ds
cmp
mov
cmp
(bad)
stos
ja
mov
ja
adc
jbe
mov
scas
daa
out
cmp
mov
cmp
(bad)
in
xchg
(bad)
push
fldenv
and
(bad)
xchg
sbb
(bad)
aaa
jnp
push
fcomp
mov
mov
cmp
(bad)
jge
xlat
mov
cmp
(bad)
stos
ja
mov
jg
adc
jbe
mov
scas
daa
out
cmp
mov
cmp
(bad)
imul
and
aad
(bad)
imul
cmps
ja
addr16
(bad)
iret
mov
mov
cmps
mov
mov
frndint
and
cmp
ss
cmp
mov
cmp
(bad)
cmp
imul
xchg
mov
dec
and
cmp
(bad)
push
into
add
push
fcmovu
scas
mov
mov
into
mov
fnstenv
fbld
and
and
cmps
lods
ds
pop
ret
push
in
in
movs
sbb
adc
sbb
mov
repnz
mov
jmp
movntq
jae
sbb
mov
jmp
mov
jmp
mov
jmp
clc
movs
push
fwait
inc
add
xchg
repz
sbb
mov
jmp
std
xor
sbb
mov
mov
xrelease
mov
jmp
std
xor
sbb
mov
mov
mov
jmp
mov
jmp
mov
jmp
sti
cmps
sbb
(bad)
mov
(bad)
sbb
mov
jmp
jge
sbb
mov
jmp
jge
sbb
mov
add
adc
cmp
imul
jmp
mov
les
mov
jmp
ret
mov
(bad)
mov
jmp
add
call
mov
or
mov
sbb
mov
fiadd
in
lds
ret
sbb
mov
jmp
jmp
movs
outs
rcl
mov
mov
sub
mov
xchg
xchg
call
inc
test
popa
and
ret
mov
(bad)
mov
stos
pushf
ret
mov
jno
jg
pop
(bad)
sbb
dec
inc
addr16
dec
mov
iret
sahf
pop
push
sub
cld
fwait
push
ror
(bad)
in
pop
mov
outs
clc
mov
add
imul
jns
xor
mov
into
xor
mov
push
ss
rol
stos
or
or
or
rcl
icebp
mov
jmp
mov
ds
scas
cmp
sbb
lock
inc
pop
(bad)
sub
or
dec
out
ds
inc
mov
outs
aam
mov
fild
lods
outs
or
mov
mov
sub
pop
lds
sub
outs
inc
xchg
mov
pop
test
dec
sbb
stos
into
push
scas
ds
xchg
dec
rcl
stos
aad
add
cmp
add
mov
add
lods
xor
scas
jl
push
sub
and
daa
inc
dec
pop
ins
call
addr16
xor
les
dec
test
gs
mov
ds
inc
sub
add
dec
lds
(bad)
adc
lods
sub
pop
add
add
pusha
mov
mov
xor
jns
mov
jnp
cld
test
cmp
sbb
repz
sbb
stos
jns
imul
aaa
mov
icebp
out
push
repz
sbb
out
sbb
aaa
mov
xchg
push
xor
repz
sbb
out
sbb
out
sbb
in
xor
jns
dec
jmp
xor
daa
cdq
add
repz
sbb
out
sbb
out
sbb
out
sbb
mov
sbb
pushf
xor
pop
push
or
push
adc
xor
cdq
and
repz
repz
sbb
out
sbb
out
sbb
pushf
cs
cmp
push
or
push
fsubr
ret
sahf
jle
repz
sbb
out
sbb
data16
fisubr
ret
fnstcw
mov
sbb
sbb
out
sbb
push
js
dec
jmp
xor
mov
ds
mov
or
mov
mov
cmp
or
dec
mov
and
test
xchg
xchg
sar
and
xor
les
out
pop
jae
push
push
aaa
jmp
rol
ret
fwait
data16
shl
ret
mov
or
and
pop
out
dec
icebp
jp
inc
push
(bad)
rcl
call
(bad)
sub
adc
sub
in
xor
callw
inc
mov
cdq
lods
outs
lods
dec
mov
cs
xchg
add
pusha
or
or
pop
mov
dec
inc
adc
stc
sub
inc
out
add
dec
pop
addr16
add
sub
mov
es
nop
push
ror
ins
in
mov
mov
mov
movs
sub
dec
xchg
fld
pop
xchg
mov
adc
in
sub
arpl
loope
mov
add
movs
mov
bound
mov
inc
inc
lods
sub
pop
repnz
ins
pop
addr16
(bad)
shr
inc
push
cmps
gs
push
lods
ds
pop
inc
ins
loopne
mov
dec
stos
cld
push
sbb
push
adc
dec
dec
pop
outs
fcomp
outs
ins
or
retf
dec
std
out
push
jno
push
loop
mov
dec
std
or
stos
inc
icebp
push
add
sub
rcr
inc
dec
stos
push
ja
clc
movs
hlt
dec
cmc
push
pop
pop
lods
adc
daa
xor
push
(bad)
add
xor
sub
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
cmc
(bad)
or
lods
(bad)
or
mov
or
mov
mov
fisttp
inc
lds
mov
(bad)
mov
mov
cmc
bound
or
fsub
es
nop
icebp
push
mov
mov
mov
mov
mov
mov
mov
ret
or
cmc
stos
or
adc
lds
mov
mov
mov
cmp
and
mov
mov
mov
cli
rol
mov
mov
mov
mov
cmc
cmp
movs
xchg
add
mov
mov
mov
mov
fwait
and
call
sbb
mov
nop
mov
shr
cli
lds
mov
loop
inc
popf
hlt
outs
sub
loope
iret
popf
hlt
mov
(bad)
add
dec
loope
or
or
adc
fcmovbe
or
xlat
scas
and
sbb
jmp
out
movs
push
shr
movs
lods
in
test
rcl
pop
(bad)
cmp
pop
or
out
cwde
push
ins
call
jl
ss
mov
das
sub
imul
push
push
sub
mov
xchg
push
push
stos
dec
lea
dec
push
or
xor
sbb
lods
outs
les
shl
test
dec
ins
shr
addr16
pop
daa
mov
ins
call
dec
std
cmps
adc
(bad)
sub
mov
shl
pop
outs
inc
lgs
scas
test
ins
in
movs
mov
outs
jl
mov
(bad)
or
add
jmp
mov
or
pop
dec
pop
sub
test
dec
pop
repnz
ins
in
movs
dec
fidivr
push
cmps
in
cmp
cs
or
ror
call
sahf
jns
push
xor
cmp
in
in
pop
mov
clc
movs
lods
data16
ds
mov
mov
(bad)
out
test
cmp
nop
mov
data16
lods
ds
pop
pop
int3
jmp
mov
(bad)
movs
fld
sbb
lds
daa
push
cmp
pop
pop
ja
mov
and
mov
push
rol
add
pop
mov
bound
pop
cdq
or
add
aas
mov
repz
adc
cli
fwait
popa
daa
mov
iret
add
lahf
adc
mov
jns
mov
loope
cmps
cmps
pusha
sub
mov
mov
scas
push
movs
mov
jmp
jmp
pushf
scas
movs
jmp
mov
jmp
jmp
js
call
scas
aas
push
out
mov
adc
xchg
mov
sub
mov
cmp
pushf
repnz
xchg
mov
adc
pushf
repnz
mov
add
stos
jnp
call
bnd
xchg
lods
jnp
aam
cmp
bnd
xchg
mov
jnp
aad
cmp
repnz
xchg
aad
push
dec
pop
and
call
(bad)
repnz
xchg
or
push
xchg
mov
adc
cmp
aam
xor
or
or
sbb
add
mov
adc
fcomip
pop
pop
outs
lea
push
xchg
mov
js
and
push
cmp
xor
xor
out
mov
cli
mov
cdq
fmul
cli
mov
inc
jae
cmps
pop
ss
fs
mov
push
das
mov
or
and
cmp
sub
push
jmp
push
xchg
ret
sub
cmp
sub
cmp
sub
adc
sub
cmp
sub
jo
(bad)
icebp
cmp
leave
repz
fdiv
mov
xchg
cdq
aaa
xor
xchg
push
fld
sub
int3
bnd
xchg
mov
or
fdiv
cmp
mov
add
stos
sub
int3
repnz
sbb
cmp
mov
and
bnd
xchg
mov
xor
cli
jnp
lods
cmp
sub
inc
push
xchg
mov
mov
imul
stos
cmp
pushf
repnz
mov
adc
pop
add
or
pop
repnz
mov
adc
fld
jp
or
and
call
mov
and
fcomip
js
xchg
or
jne
xor
jp
sbb
sbb
sbb
xor
ja
jnp
sub
adc
jg
dec
push
aam
xchg
push
xchg
mov
adc
bnd
xchg
adc
xor
fsubr
sub
loopne
jge
xchg
hlt
jge
xchg
hlt
or
push
aam
push
fdivp
jge
xchg
hlt
xor
nop
sbb
fistp
jge
fdivp
jge
xchg
hlt
jge
xchg
hlt
lds
xchg
xor
lods
jge
xchg
hlt
jge
xchg
hlt
or
or
pop
icebp
fidiv
push
inc
mov
jge
xchg
hlt
jge
xchg
hlt
xor
jl
jge
fdivp
jge
xchg
hlt
xor
sbb
mov
mov
xor
mov
dec
and
xor
push
retf
push
xchg
hlt
sub
jl
into
dec
fdivr
sub
adc
push
xchg
hlt
sbb
pop
mov
hlt
add
pop
lock
fdiv
sahf
xor
mov
jge
xchg
hlt
jge
xchg
hlt
xor
xor
jge
xchg
hlt
jge
xchg
hlt
sub
pop
and
test
mov
scas
test
xor
fsub
jg
lea
retf
add
rol
lods
stos
sbb
sbb
inc
(bad)
out
cwde
push
ins
call
mov
push
cmovs
xor
or
pop
mov
push
shl
clc
push
adc
dec
mov
aaa
dec
xor
push
outs
push
lea
push
outs
aad
icebp
mov
ror
mov
in
movs
mov
cmp
neg
inc
mov
push
sub
add
hlt
shr
test
js
push
mov
adc
dec
movs
push
ror
ret
dec
movs
push
xor
mov
sub
or
nop
mov
out
inc
jnp
into
jno
xchg
or
mov
loope
push
shr
push
cmp
div
pop
mov
mov
outs
clc
call
add
jmp
add
add
push
idiv
push
or
push
dec
ins
xor
fisttp
mov
sub
(bad)
in
ds
sbb
outs
fdivr
sub
dec
xchg
fldcw
push
shr
test
fld
add
adc
rcl
scas
ds
lahf
cwde
pop
adc
imul
dec
or
cmp
ret
div
dec
ret
loop
dec
ret
loop
sbb
ret
scas
mov
dec
ret
loop
add
out
stos
or
mov
dec
ret
loop
out
xchg
loope
pop
movs
stos
pop
dec
ret
mov
dec
ret
loop
sbb
loop
dec
ret
loop
dec
ret
loop
pop
mov
out
rol
inc
fst
xchg
cs
pop
xchg
loope
add
lds
pop
dec
cld
out
fwait
mov
xor
stc
jb
or
and
popa
push
adc
shr
in
in
movs
movs
lds
push
popa
mov
mov
inc
popa
out
or
mov
cmps
xchg
fwait
xor
pop
dec
push
psubb
xor
jmp
icebp
push
pop
dec
push
(bad)
jg
and
cwde
adc
mov
aam
and
pushf
mov
push
aaa
xchg
sbb
adc
dec
push
ror
push
ror
xor
dec
mov
es
push
rcl
mov
es
push
ror
leave
scas
push
xchg
lsl
pop
in
movs
lods
outs
adc
(bad)
shr
mov
rcr
inc
int
mov
push
ins
nop
je
fwait
or
movs
mov
(bad)
sti
test
(bad)
sub
movs
int
push
push
dec
ins
or
hlt
rol
test
jl
sbb
push
hlt
mov
xchg
inc
fwait
push
ins
mov
mov
xchg
stos
mov
int
jno
or
mov
dec
in
pop
mov
inc
dec
lods
adc
sub
dec
mov
outs
pop
add
outs
hlt
jp
lds
mov
sub
mov
scas
ds
shl
or
dec
pop
daa
adc
sbb
cld
xchg
mov
into
pop
int3
mov
ins
sbb
hlt
rcr
fadd
adc
dec
clc
pop
sbb
sbb
lods
mov
push
add
or
call
or
push
fist
inc
(bad)
inc
push
outs
out
push
outs
out
push
outs
xchg
sbb
and
lods
or
jbe
push
lods
in
dec
and
inc
push
outs
add
clc
and
and
shr
out
push
outs
or
xlat
lods
fadd
test
or
jg
push
(bad)
adc
(bad)
inc
push
outs
out
pop
outs
test
or
jg
push
(bad)
adc
(bad)
inc
push
outs
out
push
outs
out
sbb
adc
out
int
not
and
shr
out
push
outs
add
sbb
ins
adc
int3
jg
push
(bad)
adc
(bad)
adc
ins
out
push
outs
out
sbb
or
hlt
pop
and
test
aam
(bad)
adc
ins
out
push
outs
jg
sbb
cmp
add
ins
out
push
outs
out
push
outs
mov
test
aaa
stos
xor
(bad)
mov
int3
or
call
inc
jno
ins
push
in
test
aaa
push
test
(bad)
ss
adc
rcr
cli
adc
movs
outs
sar
mov
push
sete
pop
jmp
push
or
daa
and
push
ror
gs
dec
mov
sub
mov
add
shl
jnp
ss
adc
ret
shl
push
cmp
movs
inc
sar
icebp
push
add
in
or
loop
jmp
aaa
add
or
pop
cmps
lds
mov
inc
out
movs
ror
push
cmp
xor
lods
outs
pushf
mov
dec
pop
(bad)
dec
popf
fld
mov
push
jae
movs
xchg
dec
pop
fstp
paddd
(bad)
outs
inc
inc
ins
loopne
hlt
rol
test
xor
cdq
or
into
cmp
cmps
call
add
or
xchg
push
and
pop
icebp
ss
sar
iret
in
or
mov
adc
xlat
cli
xor
xchg
out
or
shr
test
lods
into
adc
imul
(bad)
sahf
in
movs
mov
cmovo
xor
in
(bad)
mov
mov
xchg
aas
test
inc
pop
pop
(bad)
adc
aad
movs
addr16
aad
xlat
pop
pop
stos
pop
pop
pop
(bad)
adc
int3
aad
dec
cld
add
pop
pop
pop
(bad)
adc
lahf
sahf
inc
pop
pop
(bad)
adc
xchg
(bad)
cld
adc
pop
pop
(bad)
adc
pop
pop
mov
pop
pop
(bad)
adc
(bad)
mov
pop
or
or
(bad)
or
pop
pop
pop
(bad)
adc
sahf
xlat
std
fstp
pop
pop
pop
(bad)
adc
(bad)
adc
adc
pop
pop
(bad)
adc
cli
adc
int3
imul
cmp
pop
pop
pop
(bad)
adc
push
adc
adc
or
fcomp
pop
(bad)
adc
(bad)
or
pop
pop
pop
(bad)
adc
pop
pop
mov
pop
pop
(bad)
adc
ficomp
adc
adc
iret
outs
aam
pop
jbe
pop
pop
(bad)
adc
or
cmp
pop
pop
(bad)
adc
ds
adc
pop
pop
(bad)
adc
aaa
addr16
or
pop
popf
pop
pop
(bad)
adc
adc
inc
pop
pop
(bad)
adc
pop
lahf
(bad)
adc
pop
pop
(bad)
adc
adc
inc
pop
pop
(bad)
adc
(bad)
or
xlat
pop
pop
stos
pop
pop
pop
(bad)
adc
sahf
out
(bad)
adc
pop
pop
(bad)
adc
jle
std
fstp
pop
pop
pop
(bad)
adc
xlat
or
pop
pop
pop
(bad)
adc
or
mov
adc
pop
pop
(bad)
adc
pop
pop
mov
pop
pop
(bad)
adc
data16
jne
pop
jbe
pop
pop
(bad)
adc
lahf
pop
outs
aam
pop
jbe
pop
pop
(bad)
adc
or
fcomp
pop
(bad)
adc
ins
xlat
mov
pop
or
cld
pushf
xlat
or
pop
pop
pop
(bad)
adc
adc
in
pushf
pop
pop
(bad)
adc
pop
pop
(bad)
adc
sbb
cmps
pop
sub
enter
jbe
aam
movs
pop
push
adc
cmp
jbe
mov
cmps
pop
out
sahf
inc
movs
push
adc
cmp
iret
adc
xchg
scas
jmp
movs
outs
shl
mov
mov
cs
lds
add
pushf
sbb
adc
dec
and
(bad)
adc
sub
add
cmps
stc
(bad)
mov
fcmove
ret
adc
mov
out
movs
push
sub
movs
jno
inc
js
ror
mov
pop
mov
outs
lods
xor
sti
movs
mov
loopne
push
shl
mov
out
dec
pop
movs
dec
fxch
std
or
hlt
mov
out
std
dec
std
and
mov
mov
add
lods
ds
dec
sub
imul
les
inc
ret
aas
ins
clc
push
dec
rcl
push
hlt
ror
stos
xchg
fld
jo
add
cmp
xor
mov
test
mov
cmp
add
adc
aas
inc
pop
std
or
pop
scas
ds
ret
inc
add
mov
push
ins
add
mov
fnstcw
xor
fld
mov
(bad)
jmp
arpl
mov
dec
jle
cmp
cmp
loop
aas
fnstenv
inc
aas
cmp
cmps
sti
jge
jo
or
inc
aas
fnstcw
aas
cdq
jnp
pop
shr
push
fnstcw
aas
fnstcw
aas
fnstcw
jae
adc
fnstenv
inc
pop
sar
xchg
jnp
aas
fnstcw
aas
fnstcw
arpl
xor
inc
aas
fnstcw
jge
sbb
fldcw
inc
aas
fnstcw
push
int
inc
jno
push
or
fnstcw
aas
fnstcw
pop
sar
xchg
dec
leave
aas
fnstcw
push
int
inc
jno
inc
or
fnstcw
aas
fnstcw
aas
fnstcw
push
scas
adc
fnstcw
test
push
aas
fnstcw
aas
mov
inc
cmp
fnstcw
idiv
js
jo
icebp
push
aas
fnstcw
aas
mov
inc
cmp
fnstcw
aas
fnstcw
rcl
(bad)
fnstcw
aas
fnstcw
das
push
jp
cmp
fnstcw
fild
pop
enter
or
aas
pop
jnp
mov
xchg
fisttp
sbb
leave
aas
fnstcw
aas
fnstcw
addr16
jnp
jno
ja
mov
and
jno
aaa
sbb
ss
fnstenv
aas
fnstcw
aas
fnstcw
scas
push
jp
cmp
fnstcw
push
lea
aas
fld
aas
fnstcw
aas
xchg
jns
jb
das
in
scas
push
mov
fnstcw
xor
adc
mov
fldcw
inc
push
fist
adc
imul
mov
mov
aas
fnstenv
inc
mov
and
lahf
aaa
jecxz
fnstenv
inc
aas
fnstcw
scas
pop
clc
inc
jb
cmp
lods
sbb
movzx
xor
inc
cmp
fnstcw
aas
fnstcw
mov
mov
aas
fnstenv
inc
imul
inc
aas
fnstcw
xor
xor
inc
aas
cdq
jnp
mov
and
imul
inc
aas
fnstcw
aas
fnstcw
rol
cmp
jne
and
jae
jae
cmp
fnstcw
aas
fnstcw
xchg
xchg
fwait
cmp
and
inc
aas
cdq
jnp
mov
and
imul
sub
fnstcw
jg
js
jae
xchg
out
cmp
fnstcw
aas
fnstcw
mov
sub
push
fist
adc
aas
cdq
jns
and
ret
shl
or
xlat
or
aas
fnstcw
aas
cmp
jae
jae
cmp
fnstcw
aas
fnstcw
jg
jnp
push
push
cmp
push
lea
push
aas
fldenv
aas
fnstcw
aas
fnstcw
imul
and
fnstcw
aas
fnstcw
mov
xchg
fisttp
aas
pop
jnp
mov
xchg
aas
or
mov
sub
fnstcw
pop
popa
jnp
push
fnstcw
aas
fnstcw
aas
fnstcw
repnz
sti
sub
repz
jae
jg
cmp
fnstcw
scas
pop
js
cmp
fnstcw
aas
fnstcw
je
mov
sub
sbb
push
and
cmp
and
retf
jo
inc
sbb
and
scas
inc
retf
lock
inc
sbb
(bad)
lods
out
xlat
sbb
mov
out
cwde
push
ins
call
xor
ja
push
mov
lods
and
cmp
xor
push
sub
bound
rcl
cwde
sub
mov
push
cmp
cmp
inc
push
out
push
pop
push
ins
aad
fnstcw
ror
(bad)
out
test
mov
push
mov
adc
std
int
or
aas
inc
sub
cmc
dec
std
adc
(bad)
add
or
into
mov
cmps
dec
or
lods
lds
(bad)
cmps
das
mov
xor
cs
mov
lock
or
outs
in
or
out
lods
xchg
fld
inc
sub
mov
mov
inc
jmp
sub
dec
cmp
ins
push
test
xor
mov
lods
add
pop
inc
mov
outs
in
mov
mov
mov
sub
push
mov
shl
scas
ds
ret
inc
sub
outs
mov
ins
int3
(bad)
dec
push
je
sti
shl
(bad)
mov
enter
sbb
dec
neg
jge
popa
dec
sub
popa
dec
data16
jg
mov
aas
out
push
jmp
jg
dec
cs
push
das
push
dec
jmp
std
xor
outs
sub
pop
out
push
jmp
cmp
dec
clc
jg
mov
aas
out
push
jmp
jg
mov
aas
out
push
jmp
jg
dec
cs
push
das
dec
dec
jmp
std
xor
jmp
jo
(bad)
out
push
jmp
std
xor
cvtpi2ps
pop
out
push
jmp
cmp
dec
clc
jg
mov
aas
out
push
jmp
cmp
mov
aas
out
push
jmp
cmp
dec
cs
push
das
push
dec
jmp
std
xor
movaps
(bad)
out
push
jmp
std
xor
pop
sub
pop
out
push
jmp
cmp
dec
clc
jg
mov
aas
out
push
jmp
cmp
dec
cs
push
das
xchg
dec
ss
mov
data16
data16
in
popa
dec
(bad)
add
data16
gs
add
das
xlat
cmp
mov
jmp
dec
cs
push
das
jmp
inc
jmp
std
xor
mov
out
push
jmp
std
xor
iret
sub
pop
out
push
jmp
cmp
dec
cmp
sub
xchg
stos
pop
sub
xchg
mov
(bad)
lods
pop
stos
adc
sub
sar
jecxz
lods
adc
sub
adc
jecxz
push
movs
popa
mov
std
imul
push
sar
inc
adc
or
mov
je
test
xchg
adc
inc
movs
push
out
or
shr
aam
mov
ins
aad
push
mov
sahf
inc
addr16
sub
add
ror
(bad)
out
test
scas
sbb
pop
mov
dec
dec
sub
inc
and
adc
out
add
sub
and
fild
hlt
sar
test
push
add
imul
or
push
and
dec
mov
xor
cld
xor
outs
repnz
inc
push
push
sub
cld
sub
dec
inc
ror
ror
inc
mov
add
push
cmp
or
sub
inc
pop
fild
stc
push
xchg
pop
pusha
cmps
mov
inc
add
loope
jmp
pop
loope
aas
sub
push
(bad)
scas
inc
neg
aas
adc
push
adc
cmp
add
sub
xor
push
or
and
icebp
pop
into
cwde
mov
fld
(bad)
cmp
imul
cmc
dec
jl
and
ins
dec
jl
ins
int3
push
mov
sub
dec
jl
ins
pop
pop
mov
sub
mov
dec
jl
ins
dec
jl
ins
es
mov
clc
xor
jb
pop
push
jle
jl
ins
dec
jl
ins
dec
jl
ins
sbb
mov
das
in
mov
dec
jl
ins
dec
jl
ins
dec
jl
ins
dec
hlt
leave
imul
xor
cmp
dec
jl
ins
dec
jl
ins
sbb
add
dec
jl
ins
lds
inc
or
dec
jl
ins
dec
jl
ins
sbb
add
jnp
mov
dec
jl
outs
dec
jl
ins
dec
jl
ins
es
fisubr
jl
ins
dec
jl
ins
push
sbb
aaa
sbb
and
outs
dec
sbb
ins
dec
jl
xor
ins
dec
jl
ins
lds
inc
jge
jl
outs
dec
sbb
ins
lds
icebp
aas
dec
jl
outs
dec
jl
ins
ss
sub
lds
icebp
dec
add
mov
jl
ins
dec
jl
ins
dec
sbb
ins
lds
icebp
cmovl
dec
cmp
ins
les
icebp
outs
ss
(bad)
pop
push
add
dec
jl
outs
dec
jl
ins
dec
jl
ins
adc
mov
cs
leave
xor
sbb
cwde
in
jl
ins
dec
jl
ins
or
mov
xor
aaa
cs
and
outs
dec
jl
ins
dec
test
ins
dec
jl
add
ins
dec
jl
ins
or
mov
outs
iret
das
add
add
sub
jl
ins
dec
jl
ins
or
mov
outs
xchg
add
cmp
ins
dec
jl
ins
dec
cmp
ins
les
xor
pop
(bad)
pop
push
add
aas
ss
pop
into
mov
inc
push
add
cmp
ins
dec
sbb
ins
les
xchg
das
dec
jl
outs
dec
jl
ins
dec
jl
ins
push
into
mov
dec
jl
outs
dec
jl
ins
dec
sub
ins
lds
rcr
xor
and
outs
dec
jl
ins
dec
cld
mov
and
or
jl
ins
in
mov
xor
aaa
cmp
and
sub
pop
(bad)
inc
and
sub
dec
jl
outs
dec
jl
ins
add
mov
dec
jl
ins
dec
jl
ins
pop
cmps
fsub
dec
jl
ins
sub
mov
xor
in
jl
ins
dec
jl
ins
add
mov
xor
and
push
retf
jl
sub
ins
into
test
and
xor
out
jl
ins
dec
jl
ins
dec
jl
ins
lds
dec
pop
dec
jl
outs
dec
jl
ins
sbb
mov
dec
mov
(bad)
sbb
mov
ins
lods
sub
sub
jl
ins
dec
jl
ins
dec
jl
ins
repz
sub
dec
jl
ins
movaps
das
cmp
int
fisttp
cmp
dec
(bad)
xchg
sbb
push
aaa
gs
cmp
iret
push
inc
jle
loop
fld
lahf
xlat
aas
das
in
pop
sbb
clc
in
jl
ins
dec
jl
ins
or
mov
xor
test
jl
ins
dec
jl
ins
dec
adc
ins
dec
jl
adc
ins
lock
sbb
mov
sbb
ins
lds
xor
jl
outs
dec
cmp
ins
les
xor
pop
(bad)
pop
add
pop
cmc
rcl
mov
leave
xor
lds
ror
push
and
xor
xor
in
sub
daa
sbb
sbb
call
and
pusha
scas
mov
es
out
xor
lods
pop
mov
shl
adc
dec
lods
in
int
add
mov
shl
lods
add
push
aaa
scas
stos
inc
shl
shl
(bad)
shr
movs
repnz
aas
jmp
(bad)
test
jae
arpl
dec
mov
popa
and
push
shr
call
loop
mov
inc
cmp
ja
pop
jmp
jmp
sbb
int3
adc
cmps
aam
mov
dec
ins
in
fs
rcr
adc
add
hlt
ror
stos
imul
xchg
push
sub
movs
clc
xor
cmp
inc
cmp
std
cwde
push
sub
movs
pop
xor
sbb
jecxz
dec
in
movs
mov
into
add
mov
rcr
add
repnz
cli
cmp
jecxz
call
icebp
dec
pop
push
ins
in
movs
movs
sub
dec
(bad)
mov
movs
add
sub
pusha
mov
in
push
pop
daa
inc
xchg
out
stc
push
mov
pop
inc
inc
push
ins
dec
mov
ret
xchg
inc
mov
outs
mov
pop
mov
outs
xchg
(bad)
hlt
ror
test
xchg
add
jge
add
dec
out
add
iret
or
mov
outs
rcr
into
sbb
ror
add
int3
leave
add
jnp
movs
mov
loopne
lods
test
pop
adc
push
push
retf
aam
test
adc
je
ja
ret
push
sub
sbb
pop
int3
sbb
mov
mov
js
enter
fnstsw
xchg
xlat
lea
xor
or
xor
lea
ficomp
je
xor
or
adc
jle
rcl
xor
push
shl
xchg
or
jns
pushf
sahf
jle
popa
not
sahf
js
or
xor
push
shl
shl
(bad)
mov
xor
or
xor
push
shl
xchg
or
bound
pop
sbb
xchg
or
xor
pop
shl
xchg
or
fs
or
xor
inc
shl
xchg
or
xor
dec
pushf
cmp
fwait
and
test
test
loop
jb
adc
popf
xor
inc
shl
xchg
or
xor
pushf
push
pop
(bad)
add
cdq
or
xor
push
shl
xchg
or
adc
or
push
mov
fild
xor
or
gs
or
xor
or
shl
xchg
or
bound
pop
js
pop
pop
shl
fisttp
shl
xchg
or
bound
pop
pop
or
xor
push
shl
xchg
or
(bad)
xchg
shl
xchg
or
xor
sub
xor
or
jg
xchg
mov
lds
xchg
jno
mov
(bad)
fldenv
mov
js
pop
pop
shl
fisttp
shl
shl
(bad)
shl
xchg
or
fwait
rcl
mov
or
repnz
push
sbb
data16
shl
fisttp
shl
xchg
or
rcl
(bad)
xor
mov
pop
jb
sbb
xchg
or
xor
or
mov
mov
xchg
lods
shl
fild
xor
or
xor
sbb
xor
or
sbb
enterw
fsubr
pushf
jmp
mov
xchg
enter
fld
bound
push
(bad)
into
rcr
loop
adc
movs
add
inc
mov
std
adc
inc
imul
sub
pushf
xchg
adc
dec
cmp
mov
pop
xor
push
ror
hlt
out
dec
mov
sub
inc
push
shl
push
add
sub
push
ins
aad
test
ror
ins
in
fs
shr
mov
rcr
dec
sub
add
jl
inc
sub
dec
std
ret
push
xor
mov
mov
push
push
imul
add
push
sub
int3
gs
ror
inc
(bad)
in
dec
pop
lods
dec
push
cli
inc
push
jae
add
fldcw
in
or
arpl
mov
mov
ins
sub
fadd
mov
add
movs
test
fsubr
mov
cs
movs
mov
ins
sub
jae
pop
mov
and
pop
test
inc
inc
push
sub
je
cmp
dec
(bad)
inc
repz
shr
jg
daa
pop
scas
ds
xchg
adc
hlt
rcr
stos
pop
addr16
out
push
inc
std
dec
pop
daa
cmp
addr16
push
lods
ds
inc
xor
jb
mov
ins
fs
(bad)
out
test
cmp
adc
data16
jecxz
ds
pop
inc
mov
outs
mov
(bad)
mov
fs
daa
out
(bad)
push
jg
stos
int3
ficomp
dec
nop
pushf
stos
int3
xchg
pushf
sub
xor
stos
adc
test
adc
loop
sar
and
mov
stos
adc
stos
int3
xchg
pushf
stos
adc
stos
aam
pushf
stos
adc
lods
adc
pushf
stos
adc
jmp
retf
in
sbb
adc
test
adc
jmp
nop
pop
cld
fnclex
jl
iret
push
sahf
stos
aam
pushf
stos
adc
repnz
in
ficomp
adc
sbb
(bad)
pop
cld
sbb
shr
adc
cli
adc
shl
into
ficomp
adc
(bad)
into
fidiv
xor
jle
(bad)
fbld
xor
out
repz
(bad)
in
sbb
in
fstp
adc
and
fistp
adc
and
test
stos
aam
pushf
stos
adc
stos
adc
shr
adc
adc
leave
shl
(bad)
fistp
stos
adc
repnz
in
ficomp
adc
and
sub
xor
fild
add
jmp
mov
xor
test
adc
test
pushf
stos
adc
sub
les
mov
dec
mov
pushf
or
ficomp
adc
in
sbb
pop
stos
mov
push
retf
loop
add
ficom
cld
fwait
mov
ret
iret
loop
stc
leave
(bad)
in
ficomp
adc
hlt
xchg
bnd
mov
pushf
stos
adc
loop
shr
repnz
dec
and
jmp
shl
fmulp
in
sbb
adc
stos
call
nop
pushf
stos
adc
stos
fcom
pushf
jg
nop
repz
fstp
adc
stos
in
neg
jecxz
sahf
stos
aam
pushf
stos
adc
test
adc
stos
xor
stos
adc
stos
lods
jecxz
stos
adc
pop
dec
das
pushf
stos
adc
stos
adc
stos
loopne
pushf
stos
adc
repz
pop
retf
in
sbb
(bad)
repz
adc
sub
cmp
hlt
div
pushf
stos
adc
in
jb
fdiv
and
jmp
sar
shl
into
into
cmc
fbstp
mov
stos
adc
inc
ficomp
adc
cmp
(bad)
shl
retf
stos
adc
in
fcomp
adc
cld
(bad)
shl
into
ficomp
adc
loop
rcr
sbb
mov
dec
and
sub
xor
fild
data16
fcmovbe
fld
lds
sbb
cld
loope
xor
(bad)
aaa
jge
bswap
loop
bound
and
xor
cs
(bad)
in
sbb
ret
sub
xor
fbld
movs
repnz
adc
(bad)
(bad)
es
xor
cld
cmp
stos
int3
xchg
pushf
or
loop
arpl
loop
sbb
and
cld
fild
jns
rcl
in
or
rcl
retf
xor
retf
in
sbb
adc
fwait
add
pushf
stos
adc
and
or
stos
adc
les
and
into
or
gs
or
aas
icebp
shr
adc
stos
int3
ficomp
adc
in
sbb
std
pop
(bad)
in
call
adc
push
aam
sub
repnz
repnz
(bad)
in
jo
in
ss
icebp
repnz
in
outs
push
push
or
push
icebp
fcmovu
(bad)
in
ins
cmp
ins
sub
mov
fild
in
lods
stos
loopne
pop
stos
movs
xchg
ins
mov
push
std
(bad)
cmp
sar
inc
movs
in
or
push
cmp
adc
jo
in
dec
push
or
dec
xor
sub
xchg
cwde
inc
adc
push
ror
cmp
and
cmp
call
outs
push
or
pop
mov
or
push
out
push
outs
aad
cwde
mov
retf
inc
stos
mov
jno
push
shr
hlt
shr
test
ror
shr
test
int3
inc
imul
mov
xor
push
cs
sub
or
xor
push
sub
pusha
scas
push
ror
push
out
dec
dec
(bad)
or
sar
not
xlat
push
sub
and
inc
retf
mov
jnp
movs
test
xchg
out
mov
dec
pop
into
push
push
mov
gs
std
(bad)
retf
adc
sbb
ins
popf
inc
add
inc
mov
outs
int3
cwde
mov
(bad)
sbb
hlt
shl
mov
outs
adc
int
push
scas
div
dec
(bad)
fs
pop
mov
pop
adc
sar
test
ret
nop
push
loope
cmc
scas
xchg
push
adc
cmp
adc
(bad)
lods
jmp
cwde
into
pop
mov
ins
push
outs
and
sbb
and
xor
xlat
outs
sbb
and
xor
mov
outs
adc
sbb
and
xor
mov
sbb
and
pop
shl
xor
mov
cmps
dec
outs
pop
mov
outs
sbb
fldenv
sbb
mov
sbb
push
xchg
push
pop
ret
and
call
dec
adc
add
popf
jbe
out
and
xor
mov
sbb
in
sbb
mov
push
(bad)
ins
and
push
cmp
sbb
mov
out
cmp
outs
push
fcmovnb
jge
jnp
outs
push
retf
sar
fsubr
mov
fsubr
stos
sar
in
les
shr
in
and
xor
mov
mov
sbb
add
sbb
xchg
and
xor
mov
sbb
retf
xor
jae
mov
mov
push
call
xor
mov
test
and
push
mov
sbb
xchg
and
xor
mov
sbb
xchg
and
xor
mov
sbb
nop
inc
sti
in
and
test
mov
sbb
and
sbb
mov
mov
sbb
xor
sbb
xchg
and
xor
mov
aaa
mov
sbb
mov
xchg
ja
jmp
pop
xchg
and
xor
mov
cmc
xchg
jmp
push
xchg
and
xor
mov
sbb
mov
ss
sbb
add
mov
inc
pop
jp
mov
lds
jp
sub
mov
popa
and
test
and
xor
mov
push
xlat
outs
sbb
and
xor
out
sbb
mov
sbb
mov
shl
mov
inc
stos
icebp
jle
jmp
inc
lods
leave
jns
cmp
outs
xor
jp
mov
(bad)
cmps
inc
outs
cmp
jns
outs
cmc
mov
xchg
stos
or
inc
mul
adc
push
jmp
mov
jb
(bad)
mov
jmp
mov
jmp
int
test
sbb
jns
rol
out
cwde
push
ins
call
push
mov
(bad)
pop
mov
mov
call
hlt
xchg
push
sar
stc
daa
jmp
mov
sub
mov
xor
mov
ret
test
pop
sub
or
cmc
push
pop
push
and
movs
lods
adc
stos
inc
cmps
mov
shl
test
scas
inc
imul
cmc
dec
inc
mov
fsub
aam
mov
int
movs
push
ror
daa
in
sub
push
pushf
pop
pop
dec
std
fimul
dec
push
ror
fucomp
dec
mov
out
push
sub
movs
arpl
outs
and
inc
jmp
cli
cld
dec
pop
daa
and
jmp
stc
push
outs
sub
sub
xor
es
mov
sub
mov
xlat
inc
pop
push
ins
xor
xchg
fld
mov
add
cmp
or
mov
push
int
movs
mov
outs
enter
mov
dec
inc
shl
jmp
rcr
lds
xlat
push
cmp
in
dec
div
movs
lods
adc
rcr
pop
daa
inc
inc
dec
call
mov
in
(bad)
adc
sbb
jmp
jl
or
sub
dec
xor
outs
mov
ds
(bad)
int
sbb
stc
(bad)
test
aam
scas
cdq
fadd
das
add
add
inc
push
push
fist
fadd
inc
or
push
push
not
fadd
ret
push
ss
inc
in
aad
pop
push
not
lods
adc
pop
xchg
scas
and
(bad)
xlat
sbb
push
addr16
mov
out
cwde
push
ins
call
xor
xchg
mov
fsub
pop
cwde
or
mov
push
sar
sub
or
in
sub
icebp
adc
push
sbb
mov
push
jne
push
ins
aad
lods
mov
ror
sub
mov
mov
outs
shl
ss
xchg
fld
inc
fldenv
rol
in
mov
pop
fucomi
movs
mov
dec
adc
std
or
or
dec
jne
cmp
xor
inc
sub
mov
pop
fild
xchg
and
or
in
add
mov
(bad)
cmc
jbe
cmps
push
sub
movs
jge
xor
adc
push
int
movs
(bad)
push
dec
mov
xlat
loope
std
jp
pop
ja
add
enter
(bad)
cmps
out
movs
pop
and
adc
mov
dec
add
xchg
or
sar
dec
(bad)
adc
rcl
jb
add
aas
adc
mov
outs
jo
mov
mov
std
and
pop
dec
cmps
add
dec
sub
fsubr
and
adc
inc
cli
movs
lods
cmp
pop
inc
shl
sbb
mov
mov
jns
adc
and
jmp
pop
in
cmp
aam
aas
and
cwde
int3
adc
or
data16
not
jb
mov
pop
xchg
and
jo
not
jb
mov
pop
loop
mov
data16
not
jb
mov
pop
repnz
mov
in
jb
into
pop
jb
mov
repnz
cmp
pop
cmp
enter
xchg
pop
jb
dec
pop
jb
mov
or
pop
in
add
enter
xchg
pop
jb
mov
mov
test
pop
jb
mov
add
mov
pop
pop
les
sbb
(bad)
in
xor
cli
icebp
sbb
cmp
mov
push
cmp
cmc
cld
in
sub
aam
or
stc
aam
xchg
in
aam
imul
jmp
in
add
adc
pop
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
aaa
out
movs
inc
rol
jb
ror
(bad)
(bad)
shr
movs
mov
mov
outs
mov
sub
push
jge
dec
fwait
sub
jb
pop
push
(bad)
test
jmp
movs
(bad)
and
in
xor
ret
scas
movs
push
xor
inc
cmc
into
add
push
and
push
movs
mov
int
or
outs
cmp
mov
shl
daa
out
push
cli
push
ins
adc
xor
pop
mov
and
dec
lods
adc
sub
mov
ss
pop
daa
inc
jae
ins
call
add
jle
movs
inc
sub
mov
inc
adc
xchg
cmps
into
jmp
mov
cld
add
int3
or
mov
push
sar
dec
sub
iret
scas
ds
dec
add
sbb
xchg
rcl
in
mov
into
jno
inc
mov
loope
(bad)
mov
clc
push
ficomp
sbb
dec
(bad)
inc
inc
inc
rol
jb
ror
mov
pop
cmc
jp
pop
lods
sub
pop
adc
inc
xor
cli
or
out
sub
push
inc
and
into
xchg
stos
xchg
jmp
loopne
xchg
loopne
xchg
loopne
xchg
sar
xchg
iret
rcl
mov
aaa
rol
sahf
mov
loope
xchg
mov
inc
pop
scas
in
pop
scas
mov
pushf
shl
xchg
pop
scas
mov
pop
scas
mov
pop
dec
mov
adc
(bad)
es
inc
inc
(bad)
jnp
lods
and
pop
scas
mov
pop
scas
mov
pusha
push
mov
pop
scas
call
leave
pop
scas
mov
push
loope
xchg
xchg
std
jnp
aad
xchg
cld
imul
cmps
out
mov
(bad)
or
adc
scas
mov
pop
scas
mov
bound
rcl
scas
call
leave
mov
xor
sbb
lock
push
pop
stc
mov
loope
(bad)
mov
sub
adc
mov
pop
scas
mov
or
mov
ins
mov
xchg
leave
pop
scas
mov
les
mov
push
inc
push
xchg
adc
cmp
pop
scas
mov
or
xchg
pop
scas
cld
retf
pop
scas
mov
pop
scas
mov
psubd
push
pop
scas
mov
psubd
addr16
scas
mov
pop
scas
mov
pop
jnp
leave
or
jecxz
pop
scas
cld
retf
pop
scas
mov
adc
sub
push
loope
xchg
sbb
stos
mov
pop
outs
mov
add
jle
pop
scas
mov
pop
scas
mov
pop
scas
mov
stos
pop
jecxz
pop
scas
sub
pop
scas
mov
pop
scas
mov
or
mov
xchg
jo
inc
pop
scas
inc
retf
pop
push
cmps
pop
scas
push
leave
and
test
leave
pop
scas
mov
pop
scas
mov
push
loope
xchg
scas
call
leave
pop
scas
mov
sbb
mov
daa
test
imul
and
pop
iret
mov
cmc
imul
pop
pop
scas
cld
retf
pop
scas
mov
pop
das
mov
call
in
scas
adc
std
xchg
in
pop
scas
mov
dec
fs
adc
sub
scas
mov
pop
scas
mov
pop
les
xlat
mov
gs
xchg
leave
or
xchg
pop
scas
mov
pop
scas
mov
or
mov
pop
scas
sub
pop
scas
mov
pop
scas
mov
or
mov
pop
scas
sbb
pop
sti
mov
ret
mov
leave
pop
sti
mov
call
leave
pop
scas
mov
adc
inc
xor
enter
jmp
imul
pop
scas
mov
pop
dec
mov
adc
(bad)
es
inc
inc
(bad)
jnp
lods
and
pop
scas
mov
pop
outs
mov
add
mov
leave
pop
scas
mov
pop
scas
mov
jp
jnp
pop
scas
cld
retf
pop
scas
mov
pop
aaa
mov
pop
aam
into
xor
test
scas
outs
push
inc
push
cmps
adc
mov
pop
scas
mov
pop
scas
mov
jp
jnp
pop
scas
cld
retf
pop
scas
mov
pop
aaa
mov
pop
aam
into
push
inc
sti
test
mov
inc
push
cmps
adc
cmp
pop
scas
mov
pop
scas
mov
jp
jnp
pop
scas
cld
retf
pop
scas
mov
sub
mov
mov
pushf
daa
mov
popa
mov
xchg
leave
and
mov
add
outs
pop
loope
pushf
pop
scas
mov
pop
scas
mov
sbb
mov
pop
sbb
pop
mov
cld
push
cli
imul
mov
scas
cld
retf
pop
out
mov
mov
in
(bad)
cmp
xchg
sbb
inc
jns
push
(bad)
loopne
pushf
pop
scas
mov
pop
scas
mov
pop
scas
mov
sbb
lock
pop
scas
add
pop
scas
mov
pop
scas
mov
les
push
xchg
retf
mov
pop
scas
mov
pop
scas
mov
pop
push
or
push
test
lods
adc
pop
scas
mov
in
mov
adc
mov
pop
scas
mov
pop
pop
mov
adc
inc
pop
scas
mov
pop
scas
mov
fdiv
leave
paddd
pop
scas
mov
pop
scas
mov
sbb
mov
les
push
xchg
retf
mov
pop
scas
mov
pop
push
cmp
loop
pop
scas
mov
pop
scas
mov
mov
mov
xchg
loop
pop
scas
mov
pop
scas
mov
mov
mov
repnz
xchg
pop
scas
mov
pop
scas
mov
pop
scas
mov
or
scas
push
leave
pop
scas
mov
or
mov
add
(bad)
outs
cld
jecxz
in
(bad)
cmc
ret
loopne
push
or
xchg
(bad)
cmc
jmp
push
pop
pushf
or
add
mov
jmp
pop
shl
stos
inc
ror
test
jg
push
push
out
movs
push
ror
push
aaa
out
movs
inc
shl
and
(bad)
shl
ret
iret
dec
out
mov
stos
inc
es
out
add
xchg
xor
stc
push
ror
aam
dec
mov
cs
aas
cdq
and
(bad)
and
pushf
inc
div
lods
data16
rcr
sub
add
ror
cmp
push
sub
movs
shl
call
dec
mov
mov
sti
pop
push
sub
movs
sar
pop
cs
repz
and
jg
add
inc
inc
in
movs
push
(bad)
push
fiadd
fstp
int
movs
mov
into
sbb
mov
rol
ds
adc
mov
mov
fmul
mov
mov
or
mov
add
cmp
or
daa
mov
fdiv
adc
int
mov
mov
ds
cdq
mov
adc
imul
shrd
adc
hlt
add
or
sub
and
xchg
add
push
pushf
jp
push
dec
jb
dec
lods
push
adc
ins
hlt
dec
std
bound
pop
shl
sbb
clc
movs
repnz
movs
lods
outs
adc
iret
push
dec
mov
(bad)
push
pop
push
pop
and
add
dec
push
pcmpgtb
sub
mov
jp
mov
(bad)
xor
pop
(bad)
xor
pop
(bad)
xor
pop
(bad)
xor
mov
xor
test
call
int3
xor
adc
shl
push
xlat
es
out
or
xor
adc
jle
adc
sub
test
call
int3
xor
adc
jle
mov
out
or
xor
adc
jle
mov
sub
mov
jbe
xor
xor
adc
jle
imul
out
not
cwde
mov
xlat
cwde
outs
(bad)
int3
mov
aas
es
les
std
adc
jle
inc
call
or
xor
adc
jle
mov
out
or
xor
adc
jle
cli
sub
mov
es
pop
leave
daa
mov
ret
adc
xor
adc
jle
bound
mov
xlat
cwde
in
xlat
int3
mov
xor
std
adc
jle
rcr
ss
adc
jle
(bad)
fcmovbe
mov
(bad)
out
movs
into
aam
mov
shl
mov
aam
std
adc
jle
pop
sub
pop
dec
ja
fs
int3
mov
shl
push
inc
sub
cwde
jle
adc
sbb
ins
sbb
xor
pop
jle
xor
xor
pop
jle
mov
jbe
sub
ret
mov
add
mov
xor
std
adc
jle
pop
sub
pop
dec
ja
fs
int3
mov
shl
push
inc
sub
cwde
jle
pop
cdq
mov
std
adc
jle
mov
rcl
pop
cdq
xchg
dec
mov
xor
sub
adc
xor
adc
jle
mov
aam
movs
pop
data16
adc
jle
mov
shl
into
aam
mov
shl
push
inc
sbb
cwde
jle
push
cwde
jle
pop
xor
pop
fld
mov
ret
xor
int3
mov
shl
push
inc
or
cwde
jle
push
cwde
jle
dec
and
xor
out
or
xor
adc
jle
dec
call
pop
imul
dec
jmp
pop
adc
dec
ret
pop
xchg
mov
sub
lods
sbb
jb
jle
push
rcl
pop
shr
movs
(bad)
jmp
push
int
movs
pop
(bad)
std
aaa
inc
(bad)
sbb
ja
adc
(bad)
out
cwde
push
ins
call
enter
mov
movs
xor
jmp
xor
push
add
ds
dec
push
sub
adc
pop
pop
add
mov
outs
imul
mov
push
pop
sub
inc
imul
in
movs
push
sub
adc
push
adc
mov
std
jle
pop
pop
(bad)
mov
mov
fiadd
js
ja
adc
pop
in
dec
cmc
scas
jge
push
int
movs
mov
outs
les
fsincos
pop
stos
rol
push
sub
and
mov
inc
or
in
movs
adc
inc
sub
push
adc
mov
sbb
dec
sar
lds
or
pop
push
mov
adc
or
xor
sar
ins
inc
sti
mov
outs
test
cmp
nop
mov
into
push
ins
scas
ds
mov
adc
outs
adc
daa
mov
imul
push
hlt
sar
pop
addr16
xchg
cld
dec
std
out
inc
mov
loope
icebp
mov
dec
lods
adc
test
mov
ds
pop
or
in
mov
lods
and
xchg
jmp
loope
ror
ror
cdq
ror
cdq
ror
cdq
ror
cdq
ror
cdq
ror
cdq
ror
cdq
ror
cdq
ror
cdq
ror
cdq
ror
cdq
ror
cdq
ror
cdq
ror
cdq
ror
dec
ror
xor
shl
jbe
arpl
outs
adc
mov
inc
lods
fwait
xor
(bad)
and
retf
(bad)
(bad)
and
or
rcl
sbb
ror
shl
inc
test
rcr
inc
test
sar
(bad)
rol
aad
inc
inc
rcl
dec
inc
adc
sub
rcr
inc
cdq
shr
or
ror
xlat
pushf
inc
or
pushf
inc
jo
sahf
inc
push
cwde
neg
ret
out
push
inc
aad
or
xlat
pushf
inc
or
pushf
inc
or
lahf
inc
pop
aam
dec
(bad)
dec
rol
dec
test
xor
es
jb
or
rol
jecxz
inc
pop
mov
aam
xchg
xor
inc
aad
or
xlat
pushf
inc
or
pushf
inc
or
sahf
fiadd
mov
sub
lods
out
mov
xchg
lods
or
ror
xlat
pushf
inc
or
pushf
inc
sub
lods
out
cwde
(bad)
or
push
lds
or
rol
xlat
pushf
inc
or
pushf
inc
sbb
or
les
rcr
inc
cwde
scas
fs
pushf
inc
or
pushf
inc
jbe
pop
mov
fcmovu
or
(bad)
movs
sbb
rol
xlat
pushf
inc
out
popf
mov
sbb
push
mov
cmp
rcr
push
cs
or
enter
pushf
inc
enter
inc
aad
sbb
xlat
pushf
inc
or
lahf
inc
out
jp
inc
cmp
or
cdq
rcr
into
jp
pop
cwde
out
aad
xlat
pushf
inc
or
pushf
inc
mov
xlat
rol
xlat
pushf
inc
or
lahf
inc
push
cdq
jb
xchg
(bad)
lock
gs
ror
rol
xlat
pushf
inc
or
pushf
inc
imul
outs
inc
cwde
scas
fs
pushf
inc
or
pushf
inc
or
pushf
inc
inc
push
in
and
popf
aam
inc
loopne
(bad)
dec
fisub
or
xlat
hlt
outs
or
pushf
inc
in
cwde
lahf
inc
xchg
shr
inc
cs
or
enter
pushf
inc
mov
xlat
rol
xlat
pushf
inc
or
pushf
inc
inc
mov
or
add
inc
inc
cmp
int3
push
cdq
jb
inc
shl
xlat
rol
xlat
pushf
inc
push
jno
or
les
in
cwde
lahf
inc
xchg
shr
inc
cs
or
enter
pushf
inc
scas
(bad)
pop
cs
rol
xor
lods
out
ror
xor
lock
aad
adc
xlat
pushf
inc
aam
pushf
or
les
in
cwde
lahf
inc
xchg
shr
inc
cs
or
enter
pushf
inc
mov
xlat
rol
xlat
pushf
inc
or
lahf
inc
inc
pop
shr
inc
xor
lock
aad
adc
xlat
pushf
inc
or
pushf
inc
push
cwde
(bad)
jmp
xlat
pushf
inc
in
cwde
lahf
inc
xchg
shr
inc
cs
or
enter
pushf
inc
or
pushf
inc
enter
inc
aad
sbb
xlat
pushf
inc
or
pushf
inc
or
lahf
inc
inc
cdq
ror
sub
jb
(bad)
or
adc
icebp
inc
aad
adc
xlat
pushf
inc
or
pushf
inc
inc
fstp
or
cwde
repnz
and
push
lds
or
rol
xlat
pushf
inc
or
lahf
inc
push
cwde
ss
mov
or
or
push
cwde
call
mov
or
or
pushf
inc
or
pushf
inc
sbb
scas
out
(bad)
or
or
pushf
inc
or
pushf
inc
or
daa
call
retf
(bad)
xor
or
or
pushf
inc
or
pushf
inc
mov
add
or
push
cwde
push
sbb
jae
xlat
mov
lods
mov
cwde
repnz
cdq
jb
or
rol
cmp
(bad)
jmp
xlat
rol
xlat
pushf
inc
mov
popf
add
(bad)
sbb
cwde
dec
mov
or
rol
xlat
pushf
inc
inc
test
lock
cdq
ror
or
rol
xlat
pushf
inc
bound
pop
sbb
xlat
rol
mov
inc
mov
xlat
rol
mov
inc
mov
xlat
rol
xlat
pushf
inc
or
lahf
inc
or
cld
push
or
pushf
inc
or
pushf
inc
fdivr
inc
or
pushf
inc
or
lahf
inc
or
hlt
push
or
pushf
inc
mov
xchg
add
xchg
fiadd
dec
xchg
fcom
inc
jg
pop
inc
cdq
ror
push
or
cwde
push
or
pushf
inc
or
pushf
inc
or
pushf
inc
push
and
adc
rcl
xchg
mov
xlat
rol
xlat
pushf
inc
or
pushf
inc
dec
mov
or
mov
cld
fimul
xlat
les
out
cld
cli
or
les
or
pushf
inc
push
cwde
adc
or
pushf
inc
or
pushf
inc
or
pushf
inc
pop
aad
and
xlat
pushf
inc
arpl
pushf
inc
or
pushf
inc
dec
aad
sub
xlat
pushf
inc
or
pushf
inc
or
lahf
inc
inc
dec
fcomip
dec
xchg
add
xchg
fcom
dec
lahf
int
mov
dec
xchg
or
and
adc
shr
pop
mov
or
or
pushf
inc
or
pushf
inc
(bad)
cdq
into
pop
or
inc
or
push
jns
pop
inc
aad
cwde
or
pushf
inc
inc
cmp
int3
out
cwde
jp
jp
cs
or
enter
pushf
inc
or
pushf
inc
mov
xlat
rol
xlat
pushf
inc
or
lahf
inc
inc
pop
shr
mov
cwde
out
aad
xlat
pushf
inc
or
pushf
inc
enter
inc
aad
sbb
xlat
pushf
inc
or
pushf
inc
or
inc
bound
(bad)
or
or
pushf
inc
or
pushf
inc
or
pushf
inc
inc
cdq
ss
rol
xlat
pushf
inc
or
inc
mov
inc
and
xor
or
pushf
inc
or
pushf
inc
pop
mov
iret
adc
xlat
xor
nop
cmc
and
inc
mov
sbb
xlat
rol
xlat
pushf
inc
fs
sahf
jmp
pushf
inc
or
pushf
inc
mov
pushf
inc
inc
jno
cli
or
les
dec
xchg
adc
aam
in
or
pushf
inc
inc
cmp
int3
push
cdq
jb
inc
shl
xlat
rol
xlat
pushf
inc
or
pushf
inc
xchg
jle
or
les
out
jp
inc
cmp
or
cdq
rcr
into
jp
pop
cwde
out
aad
xlat
pushf
inc
or
pushf
inc
mov
xlat
rol
xlat
pushf
inc
jno
sahf
(bad)
push
cwde
(bad)
adc
jle
cli
or
les
inc
cdq
ss
rol
xlat
pushf
inc
or
inc
push
xor
retf
aad
or
xlat
pushf
inc
or
pushf
inc
or
(bad)
mov
inc
aad
sbb
xlat
pushf
inc
or
pushf
inc
or
shl
add
inc
mov
xlat
rol
xlat
pushf
inc
or
shl
mov
cmp
mov
jo
cdq
shr
or
ror
xlat
pushf
inc
or
pushf
inc
mov
pushf
inc
pop
mov
mov
push
cwde
neg
inc
cdq
ss
rol
xlat
pushf
inc
or
pushf
inc
aad
lahf
ret
fst
sar
mov
xlat
inc
inc
or
pushf
inc
jno
sahf
(bad)
push
cwde
(bad)
adc
jle
cli
or
les
inc
cdq
ss
rol
push
popf
inc
push
xor
retf
aad
or
xlat
pushf
inc
or
(bad)
mov
inc
aad
sbb
xlat
pushf
inc
or
shl
add
inc
mov
xlat
rol
xlat
pushf
inc
or
pushf
inc
inc
addr16
adc
in
cmp
enter
test
pushf
inc
or
pushf
inc
cmp
sub
mov
fisub
aad
or
xlat
pushf
inc
or
pushf
inc
aad
lahf
ret
fst
sar
mov
xlat
inc
inc
or
pushf
inc
or
(bad)
shr
pop
shl
push
mov
cwde
push
dec
ror
inc
pop
ret
mov
je
inc
shr
jne
sbb
ret
push
shr
push
(bad)
imul
dec
fdiv
out
dec
inc
sbb
cwde
push
ins
call
push
pushf
fsubrp
mov
jg
and
(bad)
sbb
push
shr
or
push
jg
dec
push
(bad)
inc
and
clc
hlt
mov
push
(bad)
mov
aad
pop
mov
ror
(bad)
out
test
mov
xchg
repz
fwait
add
(bad)
enterw
mov
mov
jmp
mov
outs
mov
dec
shr
out
dec
shr
test
fild
or
cmc
or
lahf
aad
pop
xchg
sub
or
sbb
pop
loop
add
dec
ins
add
lods
ds
std
add
pop
mov
ins
test
and
cli
movs
push
ins
shl
(bad)
jbe
movs
adc
loope
mov
mov
movs
hlt
shr
test
(bad)
push
sbb
sbb
sub
cld
scas
dec
dec
(bad)
pop
inc
inc
rol
pusha
rol
scas
ds
out
(bad)
adc
mov
into
sbb
mov
data16
ds
pop
test
pop
aam
add
dec
jle
push
inc
push
push
mov
cmps
daa
ret
addr16
push
jecxz
outs
adc
push
(bad)
(bad)
adc
cmp
pop
inc
adc
xchg
push
mov
inc
dec
or
pop
add
popf
pop
add
fld
adc
arpl
imul
jno
pop
push
jo
cli
std
addr16
pop
mov
bswap
push
cmp
pop
add
in
pop
add
or
pop
add
pop
add
out
jne
push
out
push
inc
jnp
push
adc
arpl
or
push
out
mov
enter
pop
add
jne
add
pop
mov
inc
ds
dec
ret
lahf
fld
js
inc
out
xchg
cmp
pop
add
or
and
dec
jne
adc
cmps
push
pop
fld
js
inc
out
xchg
cmp
pop
add
pop
add
out
jne
push
out
push
inc
jnp
push
adc
ja
jbe
jne
push
out
mov
enter
pop
add
or
pop
jns
add
pop
inc
adc
xor
pop
jp
add
dec
fadd
dec
mov
or
or
pop
add
jmp
jne
outs
pop
js
es
xor
pop
dec
jne
adc
scas
pop
inc
mov
or
pop
add
jmp
adc
cmp
pop
add
or
sbb
arpl
or
pop
add
pop
push
jne
sub
jg
sub
rcl
mov
cs
dec
push
pop
jnp
repz
mov
std
fcmovnu
adc
adc
jecxz
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
jg
in
lock
jecxz
push
adc
call
movs
(bad)
push
cmp
unpckhps
dec
inc
in
or
or
sbb
xor
inc
inc
lods
(bad)
aam
push
rol
rcl
mov
(bad)
push
les
inc
cwde
sahf
xor
in
or
cmp
shl
push
int
movs
inc
sub
add
(bad)
push
dec
pop
push
in
dec
std
cmp
jecxz
push
sar
cmc
sahf
in
test
or
hlt
dec
dec
add
dec
int
arpl
outs
mov
or
ins
fdiv
ds
inc
std
mov
pop
sbb
push
mov
std
jbe
push
lock
jg
sub
movs
rcl
dec
mov
push
sar
pop
addr16
iret
mov
jmp
push
mov
push
inc
lds
mov
push
sub
neg
inc
xchg
cld
dec
pop
daa
push
inc
ja
stc
push
jb
mov
es
outs
push
rcr
adc
add
mov
sbb
xor
sub
xor
mov
mov
and
es
pop
scas
ds
iret
cld
sbb
dec
mov
sub
cmc
jmp
or
test
xchg
call
in
or
hlt
in
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
or
cmp
mov
cmp
or
inc
ja
sbb
ja
or
dec
shr
jp
movs
dec
cs
xchg
sub
inc
and
mov
inc
inc
ja
mov
in
or
inc
ja
inc
inc
ja
inc
inc
ja
cmp
(bad)
stos
sbb
xchg
les
or
inc
inc
ja
inc
inc
ja
nop
inc
(bad)
in
inc
aad
mov
scas
inc
ja
or
dec
(bad)
in
inc
aad
mov
inc
inc
ja
rol
in
add
mov
sbb
cmc
scas
loope
cdq
mov
inc
inc
ja
inc
inc
ja
dec
cmp
loopne
sbb
adc
sub
or
test
mov
inc
inc
ja
inc
inc
ja
dec
inc
fwait
inc
or
cmp
cmp
adc
adc
mov
dec
inc
mov
inc
sbb
ja
inc
inc
ja
sbb
xchg
in
sbb
adc
hlt
or
inc
ja
inc
inc
ja
inc
dec
mov
add
loopne
or
in
or
or
sti
or
stos
in
lods
or
stos
sbb
cdq
mov
inc
inc
ja
fadd
shr
lock
xchg
aaa
adc
aad
inc
or
jp
ja
xor
sub
add
xor
add
cmps
out
in
inc
sbb
mov
rol
vmptrst
in
sub
cmp
inc
or
xor
in
int
cmp
cmps
out
in
inc
or
ja
ret
and
inc
out
or
cmp
inc
dec
mov
inc
inc
ja
push
inc
(bad)
in
lock
cs
inc
or
adc
sbb
test
or
cmp
inc
inc
ja
in
inc
aaa
in
or
cmp
fcmovnu
sbb
or
cmps
and
or
mov
out
inc
inc
ja
inc
inc
ja
inc
inc
ja
fadd
fucomi
movs
inc
xchg
lods
dec
push
xchg
rcl
outs
mov
inc
inc
ja
sbb
xchg
xor
add
mov
add
cmp
jmp
inc
or
js
adc
adc
mov
repz
sbb
sti
or
push
(bad)
mov
cmc
(bad)
mov
inc
inc
ja
mov
ja
inc
dec
mov
test
cmc
(bad)
mov
inc
inc
ja
fild
sti
or
imul
inc
adc
mov
fild
sti
or
pop
iret
call
dec
cmp
in
mov
and
in
lods
dec
cs
or
push
mov
inc
inc
ja
out
ja
mov
cmp
adc
cmp
sti
lods
or
xchg
or
mov
add
and
sub
cmc
out
inc
pop
pop
cmp
cmc
out
adc
cmp
or
inc
ja
push
inc
ja
xor
cmp
or
push
dec
movs
or
in
or
out
jl
or
in
or
cmp
movs
or
in
add
xchg
and
sub
cmc
out
inc
pop
pop
cmp
cmc
out
inc
or
stos
push
mov
inc
inc
ja
add
and
sub
cmc
out
inc
pop
pop
cmp
cmc
out
adc
cmp
or
inc
ja
inc
inc
ja
adc
cmp
or
mov
cmp
cmp
or
cmp
das
cmp
adc
in
lock
das
aaa
adc
xor
mov
or
nop
pusha
aad
outs
mov
inc
inc
ja
dec
inc
ja
sub
stos
cli
or
add
add
cmp
sbb
rcr
and
jg
add
in
or
cmp
push
cwde
jl
sbb
in
or
cmp
call
inc
add
imul
inc
adc
mov
inc
inc
ja
cli
inc
ja
inc
pop
mov
adc
sbb
ins
call
inc
or
cmp
mov
fisttp
jns
or
imul
inc
adc
mov
or
fisub
inc
inc
ja
fiadd
sti
or
pop
iret
call
sub
or
sbb
or
adc
inc
hlt
out
inc
or
mov
in
inc
inc
ja
movs
inc
ja
pop
or
or
inc
ja
inc
inc
ja
pop
imul
daa
loopne
inc
inc
ja
inc
inc
ja
inc
inc
ja
pop
(bad)
or
dec
inc
sbb
adc
cmp
or
inc
ja
inc
inc
ja
xor
fist
repz
cmp
test
xor
inc
or
scas
inc
ja
or
stos
js
movs
or
in
movs
or
and
sub
cmc
out
inc
pop
pop
cmp
cmc
out
adc
cmp
or
inc
ja
inc
inc
ja
lea
in
lock
mov
inc
or
inc
inc
ja
inc
inc
ja
and
int3
pushf
call
push
or
inc
daa
sbb
in
add
cmp
sbb
sti
or
es
mov
xor
repnz
adc
std
in
enter
sbb
popa
clc
movs
or
in
lods
inc
cs
and
stos
sbb
loope
adc
scas
xchg
inc
movs
dec
rol
sbb
mov
jmp
pop
stos
shr
cli
movs
outs
rcl
mov
mov
sub
popf
imul
ss
add
pushf
adc
push
ror
fcmovbe
push
sbb
sbb
cmp
jmp
pop
cmps
inc
test
int3
adc
outs
aad
mov
pop
ins
add
inc
sub
sbb
inc
cmps
push
sub
xor
sub
mov
hlt
shl
add
sbb
mov
adc
dec
std
sub
shr
cli
movs
(bad)
push
xchg
cmps
sbb
add
test
xor
cmp
movs
inc
xor
inc
dec
pop
sub
or
int
fist
dec
arpl
es
repnz
jp
and
or
and
xor
push
ins
test
xchg
fld
aas
mov
inc
rcl
pop
mov
imul
pop
call
mov
dec
ror
test
ins
loopne
mov
into
inc
aad
mov
inc
xchg
imul
fs
add
in
dec
sub
dec
dec
dec
xchg
add
xor
push
aas
sub
cmps
or
sahf
pop
jbe
scas
aaa
inc
stos
cmps
pop
es
retf
out
mov
jecxz
mov
pop
outs
sti
retf
mov
aaa
mov
sti
xor
xchg
cli
inc
sbb
pop
stc
sbb
mov
push
fdivr
inc
push
test
and
xchg
mov
jmp
fdiv
add
cli
mov
out
imul
xchg
sti
xor
outs
cli
into
cld
test
sub
mov
sbb
mov
push
fdivr
xor
not
sbb
cli
call
sub
sbb
call
mov
sbb
pop
in
mov
xor
jne
call
add
mov
push
fadd
in
xchg
in
xor
jne
xor
fidiv
jl
fsubr
push
ins
ja
out
mov
add
mov
push
(bad)
mov
mov
jmp
mov
daa
test
and
xchg
aam
mov
in
out
in
xor
nop
aas
es
push
in
xor
xchg
es
xor
clc
add
mov
sbb
lods
and
les
out
pop
jae
push
movs
and
lahf
mov
std
xchg
xlat
push
sar
inc
xor
movs
bswap
xor
jns
out
sub
mov
add
sbb
push
ror
push
out
mov
outs
test
pop
inc
jge
dec
movs
cdq
lds
cld
xlat
sbb
jno
adc
not
in
movs
push
sub
movs
xchg
cmp
or
int3
in
or
dec
mov
ins
cld
push
dec
dec
mov
std
call
sbb
or
addr16
movs
js
std
dec
std
mov
or
aam
adc
fldenv
mov
sub
jo
pop
fild
or
or
cdq
int3
sbb
mov
sub
lea
loop
push
sub
je
pop
mul
dec
dec
(bad)
mov
inc
ror
and
(bad)
fsub
add
or
sub
add
cmps
outs
or
sub
fmul
ds
daa
hlt
rcl
stos
test
inc
add
cwde
mov
ds
mov
into
and
fwait
div
mov
ins
ror
fmul
jnp
pop
mov
adc
pop
pushf
jle
mov
dec
or
fwait
push
cli
(bad)
fwait
push
cli
(bad)
fwait
push
inc
xlat
repz
(bad)
fwait
push
cli
xor
mov
cwde
cdq
jecxz
hlt
xor
sbb
cwde
fnstcw
mov
xor
leave
push
mov
lea
mov
mov
mov
syscall
cli
(bad)
fwait
push
mov
(bad)
fwait
push
mov
xchg
sub
pusha
xor
adc
jg
mov
aam
mov
fcom
or
jge
mov
xlat
sbb
pusha
mov
sub
sbb
sub
dec
iret
rcr
fld
cli
(bad)
fwait
push
cli
(bad)
fwait
push
push
xlat
repz
(bad)
fwait
push
lods
xchg
fwait
mov
cwde
and
pusha
mov
sub
sbb
sub
dec
iret
rcr
sbb
cli
(bad)
fwait
push
mov
xor
adc
mov
mov
dec
push
addr16
ins
add
cli
call
cld
lods
cdq
stc
(bad)
cli
(bad)
fwait
push
cli
(bad)
fwait
push
mov
adc
loope
aam
add
ret
arpl
loop
cdq
xor
call
mov
in
adc
jo
rcr
sub
xor
jmp
xchg
adc
ret
add
mov
mov
out
push
xchg
out
movs
pop
jae
push
xchg
or
in
push
shr
sbb
mov
jmp
leave
repnz
mov
jmp
sti
inc
cli
int3
out
movs
icebp
(bad)
dec
cmp
sbb
(bad)
mov
jmp
sbb
push
(bad)
in
movs
sbb
mov
jmp
adc
push
(bad)
cmc
movs
sbb
mov
jmp
dec
cmp
sbb
(bad)
mov
jmp
repz
sub
(bad)
adc
sbb
mov
ror
push
out
add
(bad)
in
movs
sbb
mov
jmp
mov
jmp
pop
scas
repnz
call
movs
outs
shr
mov
mov
(bad)
and
lock
mov
(bad)
enter
pop
movs
or
rcl
jl
inc
test
push
mov
cmps
and
not
ins
aad
sbb
ds
inc
mov
data16
inc
push
shl
call
mov
es
cmps
mov
add
mov
in
or
(bad)
pop
stos
(bad)
jmp
dec
mov
(bad)
loopne
mov
and
mov
xor
in
or
and
mov
inc
mov
outs
ins
sub
popa
pop
mov
push
ins
push
loope
sar
test
hlt
rol
stos
fdivr
add
int
or
retf
jge
adc
mov
outs
adc
iret
lds
outs
cmc
or
pop
into
inc
out
mov
cmp
and
into
inc
jmp
sub
inc
movs
data16
lods
ds
lea
loop
sub
pusha
jmp
sti
xchg
iret
call
fld
adc
(bad)
push
pop
mov
pop
fcom
xchg
and
cli
bt
cmp
data16
jmp
jb
mov
jmp
std
and
add
data16
pop
stos
jnp
jmp
cld
outs
jno
scas
std
call
jmp
nop
jnp
jns
jmp
loop
data16
push
jecxz
movs
out
outs
jae
jg
jb
cwde
(bad)
movs
sub
movs
sub
cmp
xor
movs
sub
movs
sub
movs
push
bound
jp
mov
movs
sub
movs
inc
xor
cmps
sub
movs
sub
movs
sub
in
aaa
cmp
ja
jbe
cwde
fnstcw
movs
sub
cmp
xor
movs
sub
movs
sub
lock
jl
mov
mov
bound
outs
jmp
cmp
sub
movs
inc
xor
cmps
sub
movs
sub
movs
sub
retf
outs
jbe
dec
inc
lods
jae
sub
mov
xor
or
sub
movs
sub
lock
jl
mov
mov
outs
cmp
sub
movs
sub
movs
sub
lock
push
movs
sub
movs
sub
in
aaa
cmp
mov
fcmovb
ret
lods
jns
dec
pop
ins
jae
(bad)
mov
jmp
cmp
sub
les
cmp
sub
movs
inc
xor
movs
sub
movs
sub
sbb
ss
(bad)
imul
data16
sub
movs
sub
movs
sub
sbb
ss
call
jmp
cmp
inc
ss
xchg
popa
cmps
fld
push
movs
movs
sub
movs
dec
xor
or
sub
movs
push
gs
call
sub
movs
sub
movs
sub
dec
aad
loope
sub
mov
xor
sbb
xor
movs
sub
hlt
jne
jl
inc
je
movs
sub
sub
movs
sub
std
jp
ins
jmp
sahf
fs
cmp
push
(bad)
push
jge
in
movs
sub
les
cmp
in
xor
jle
sub
sub
retf
inc
jbe
inc
bound
dec
mov
jb
sub
mov
xor
cmp
sub
stos
adc
sub
movs
sub
stos
outs
jbe
dec
push
lods
addr16
arpl
data16
test
inc
jp
cli
aam
dec
jmp
and
xor
mov
push
dec
movs
sub
movs
sub
adc
ss
jl
dec
jmp
jno
sub
sub
movs
sub
movs
enter
mov
test
pop
xor
outs
ins
jmp
cmp
push
xchg
jno
sub
sub
out
ss
addr16
idiv
inc
jmp
movs
push
xchg
jno
sub
sub
movs
inc
xor
cmps
sub
sub
movs
sub
stos
data16
idiv
aas
jmp
movs
sub
movs
sub
fnstsw
fsubr
data16
sub
fld
push
and
sub
movs
sub
movs
dec
xor
cmps
sub
sub
movs
sub
int3
ins
ss
sub
movs
sub
movs
sub
retf
inc
jbe
(bad)
nop
scas
retf
cld
cmp
xor
movs
sub
fld
push
ins
movs
sub
movs
sub
mov
sub
int3
ins
ss
sub
movs
sub
retf
dec
jbe
(bad)
nop
scas
(bad)
cmp
xor
movs
sub
fld
push
movs
sub
movs
sub
movs
inc
xor
cmps
sub
sub
movs
sub
retf
dec
jbe
pusha
gs
dec
adc
add
sub
movs
dec
xor
or
sub
movs
sub
movs
enter
out
push
jmp
jle
jp
stos
loop
data16
sub
movs
sub
xchg
cwde
fstp
movs
sub
or
sub
movs
sub
xchg
inc
ss
movs
sub
movs
sub
lds
xlat
jle
sub
movs
sub
movs
js
cmp
data16
movs
sub
movs
sub
movs
push
xchg
ja
jle
xchg
jle
jmp
cmp
data16
movs
sub
movs
sub
movs
sub
out
xlat
add
cmp
jb
jp
stos
jmp
movs
sub
movs
push
(bad)
sbb
daa
jp
jmp
jb
sub
movs
sub
retf
push
jbe
dec
mov
sti
adc
sub
movs
sub
movs
dec
xor
or
sub
movs
sub
movs
enter
bound
xor
jp
fld
push
and
sub
movs
sub
loope
ss
jmp
cmp
enter
push
push
pop
movs
sub
movs
sub
jmp
jb
sub
movs
sub
retf
pop
jbe
(bad)
nop
scas
(bad)
cmp
xor
movs
sub
les
cmp
sub
movs
sub
movs
inc
xor
cmps
sub
sub
movs
sub
retf
pop
jbe
(bad)
nop
scas
mov
cmp
xor
les
cmp
sub
movs
sub
pushf
push
ss
movs
sub
movs
sub
cmps
sub
sub
movs
sub
in
aaa
cmp
out
pop
xor
sub
movs
sub
(bad)
jp
fsubr
dec
pushf
cmps
sub
movs
sub
movs
sub
sbb
xor
jmp
outs
jmp
cmp
jp
fcom
sub
sbb
ss
data16
jo
imul
cmp
sub
in
aaa
cmp
outs
pop
cmp
sub
or
sub
movs
sub
movs
inc
xor
in
data16
xor
cmps
sub
sub
int3
js
cmp
data16
sub
movs
sub
in
aaa
cmp
sbb
cwde
fldcw
movs
sub
movs
dec
xor
or
sub
movs
dec
xor
cmps
sub
movs
sub
lds
xlat
jle
sub
movs
js
cmp
data16
movs
sub
movs
push
xchg
ja
jle
xchg
jle
jmp
inc
jmp
cmp
adc
cmp
outs
jbe
push
data16
das
jmp
outs
jmp
cmp
sub
cmp
sub
movs
sub
div
in
or
jle
jnp
push
loopne
jmp
jb
jnp
popa
outs
jno
mov
data16
shl
fsubrp
inc
fs
jns
pop
stos
jmp
jmp
cld
outs
jno
scas
sbb
jnp
jmp
(bad)
gs
sub
add
xor
movs
sub
data16
movs
sub
movs
sub
std
(bad)
ss
jmp
sti
gs
push
jmp
jmp
(bad)
outs
jno
xchg
(bad)
jb
mov
(bad)
stc
gs
jno
loopne
sbb
adc
(bad)
dec
cmp
sbb
(bad)
mov
jmp
fwait
lods
push
shr
loopne
mov
addr16
(bad)
adc
sbb
mov
mov
push
std
push
jmp
out
or
fldl2t
mov
or
lock
add
cli
xchg
push
push
sub
movs
xchg
sub
mov
mov
jge
sub
hlt
scas
sbb
inc
xlat
pop
fwait
lods
outs
sub
lods
ds
std
adc
xchg
mov
push
popa
push
jmp
add
push
gs
push
shl
xchg
add
mov
dec
mov
xor
ins
call
mov
(bad)
scas
add
jne
out
or
xor
dec
std
sbb
dec
push
xor
dec
dec
(bad)
scas
shld
or
mov
dec
pop
mov
(bad)
std
jb
inc
fsubr
add
int
or
sub
mov
imul
xchg
adc
dec
dec
std
push
mov
ret
out
dec
mov
outs
shl
pop
dec
dec
test
sub
dec
dec
scas
ds
cmps
std
adc
stos
inc
int
add
mov
cmps
and
das
inc
mov
pushf
ins
test
mov
or
into
jge
outs
cmc
or
push
sbb
ret
adc
movs
sbb
dec
gs
call
movs
mov
pusha
mov
and
test
inc
pop
test
js
mov
and
test
and
test
pop
test
mov
xor
test
pop
test
and
test
pop
test
test
dec
retf
xor
inc
and
out
dec
retf
loopne
or
retf
test
pop
test
cmp
test
pop
test
pop
test
arpl
gs
test
and
xor
retf
loop
test
xchg
and
jmp
outs
shr
pop
test
add
xor
jecxz
retf
in
mov
sbb
xor
popf
test
pop
test
and
in
test
pop
test
and
jmp
add
test
and
test
pop
pop
retf
add
fbld
jp
retf
aad
sub
mov
inc
test
sbb
mov
outs
add
loopne
adc
out
rol
mov
dec
lahf
sbb
adc
sbb
mov
jmp
out
movs
push
shr
push
shr
jg
in
lock
inc
fst
inc
mov
ds
mov
sbb
mov
push
fidivr
clc
movs
outs
sar
movs
push
rol
bound
jecxz
lea
in
jle
and
jmp
shr
and
sbb
dec
imul
xor
sbb
sahf
mov
aad
jnp
ds
push
ror
shr
test
(bad)
add
dec
in
or
dec
push
shr
test
or
adc
movs
outs
hlt
ss
outs
in
adc
fcomp
sub
movs
scas
and
in
adc
cmp
mov
iret
hlt
or
ret
add
(bad)
out
movs
cmps
mov
inc
(bad)
pop
out
movs
out
push
loop
int3
in
or
ins
push
jbe
popa
add
lods
lods
pop
(bad)
fiadd
inc
sub
add
ss
jle
push
inc
iret
repz
push
mov
bts
xchg
popa
inc
int
mov
xchg
out
ds
into
inc
xor
std
fiadd
mov
pop
pop
and
(bad)
cli
les
add
or
ret
lods
push
adc
cmps
hlt
dec
inc
mov
sub
adc
sbb
into
shl
fild
or
pop
lea
xor
cmp
call
es
and
mov
das
adc
mov
jmp
jbe
ret
popa
inc
aaa
ret
popa
sub
xor
call
cdq
ret
popa
sub
xor
ret
popa
sub
mov
cmp
fbld
arpl
jmp
inc
cmp
cdq
xchg
bound
cmp
jbe
push
aam
fild
sbb
shr
xor
push
popa
inc
mov
ds
sbb
mov
jmp
jmp
loop
stos
mov
(bad)
in
movs
sbb
mov
mov
sbb
mov
jmp
shl
dec
and
push
(bad)
std
movs
sbb
mov
jmp
and
sbb
mov
jmp
push
pop
sbb
(bad)
mov
jmp
in
call
lods
ds
mov
jmp
in
call
test
mov
repz
(bad)
cmc
movs
sbb
mov
lahf
inc
rcr
repnz
push
popa
push
mov
or
(bad)
mov
jmp
stos
add
pop
out
movs
lods
mov
dec
sbb
mov
stos
inc
shl
mov
shl
ret
dec
gs
or
ret
adc
xchg
dec
mov
ror
inc
out
add
cwde
sahf
add
outs
daa
js
mov
add
dec
movs
xchg
jne
std
(bad)
sti
sbb
sub
jp
ret
adc
pop
daa
in
movs
mov
rcl
ror
adc
imul
movs
push
cmp
movs
inc
shr
pop
sub
mov
lock
push
ror
retf
in
test
into
icebp
mov
dec
mov
ins
loopne
lods
ds
mov
or
cmc
dec
(bad)
jle
cmps
cmc
adc
bound
rcr
mov
outs
sub
mov
pop
stos
dec
fld
dec
mov
fst
fbld
jns
add
mov
cmp
add
adc
sub
jo
and
icebp
mov
fisub
call
imul
or
inc
inc
pop
lods
out
dec
pop
daa
xor
or
sar
scas
ds
pop
dec
sub
shl
cmp
adc
cmp
add
pop
mov
push
paddb
sub
add
adc
xor
mov
and
cld
mov
imul
push
js
sti
stos
jge
out
stos
add
push
jns
push
sti
mov
pop
movs
adc
xor
push
adc
dec
in
mov
in
add
pop
jmp
call
movs
outs
shl
mov
push
(bad)
movs
aaa
and
call
dec
(bad)
bound
cmps
mov
call
pop
stos
lods
pop
ds
les
cmp
sbb
inc
enter
dec
dec
mov
jae
push
ret
mov
outs
fs
inc
xor
cmc
dec
cmc
(bad)
push
push
int
movs
mov
ins
fs
imul
movs
push
int
movs
inc
sub
jecxz
dec
sub
pop
(bad)
sub
leave
dec
mul
imul
mov
inc
retf
lods
adc
sub
and
and
mov
push
ins
in
sti
pop
or
fwait
aam
push
sub
fsubr
ins
sub
std
ret
jnp
add
fs
shr
(bad)
in
movs
pop
es
xchg
push
sar
mov
outs
fcomp
sbb
push
scas
dec
cmp
add
push
fisttp
dec
shl
test
ds
fucomi
into
adc
cmps
and
mov
push
sub
jl
mov
(bad)
cmc
fst
and
dec
push
or
jns
shr
cmp
loope
cmp
dec
retf
dec
retf
dec
retf
dec
retf
mov
fnstsw
in
retf
pop
push
dec
retf
popf
pand
push
daa
repz
retf
sub
dec
or
in
retf
into
xor
pop
retf
cmp
mov
stos
ror
in
retf
dec
out
adc
fnstsw
arpl
stos
pop
retf
jne
add
adc
test
stos
add
hlt
inc
cs
dec
retf
add
in
retf
push
in
mov
hlt
dec
push
xor
sub
sbb
in
stos
mov
jne
add
add
ja
pop
retf
jne
add
stos
outs
xchg
add
out
push
stc
cmp
add
clc
fisub
pop
mov
test
repnz
pop
cmp
dec
retf
inc
fdivr
and
aas
in
retf
xchg
iret
dec
retf
(bad)
cmp
dec
retf
pop
pop
sub
popf
pand
bound
pop
retf
sub
dec
or
inc
dec
push
cmp
movs
push
cmp
mov
cmp
pop
das
mov
(bad)
(bad)
repz
xchg
das
inc
dec
push
cmp
les
push
xor
repz
cmps
adc
fwait
lods
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
in
in
movs
loopne
pop
stos
repnz
inc
mov
popa
and
mov
(bad)
mov
jmp
iret
jno
sub
(bad)
adc
sbb
mov
dec
push
(bad)
in
movs
sbb
mov
jmp
call
movs
outs
shl
mov
mov
cs
sub
int3
popa
gs
jmp
push
or
cmp
jmp
push
push
(bad)
add
daa
pop
or
push
dec
push
or
inc
fcmovnb
fwait
jp
mov
outs
movs
pop
std
jnp
cld
test
sub
or
shr
mov
push
sar
test
mov
int
movs
cmp
pop
lock
pop
mov
outs
rcr
dec
sub
pop
gs
daa
inc
iret
ja
jmp
and
dec
pop
push
inc
dec
inc
push
int
movs
mov
ins
xor
mov
iret
stos
cld
sbb
inc
sub
fsub
fs
std
retf
mov
xlat
clc
movs
mov
bound
lods
sbb
xchg
push
jbe
sub
or
xor
mov
or
ret
imul
mov
movs
mov
rcl
add
inc
rol
and
adc
pop
adc
xchg
sub
std
jecxz
scas
ds
sbb
adc
cs
pop
pushf
cmp
dec
daa
ja
adc
scas
ds
pop
mov
gs
inc
lods
ds
pop
fild
mov
xchg
dec
dec
lods
(bad)
adc
pusha
and
cwde
fimul
mov
cwde
sub
jge
call
push
iret
fild
cmc
iret
fild
cmc
pop
or
and
int3
adc
iret
fidiv
iret
fild
inc
jmp
adc
fcomp
mov
loop
fist
hlt
dec
and
cmc
fcomp
sub
xor
cmc
pop
fist
cmc
sbb
sub
jmp
adc
dec
mov
adc
dec
mov
sbb
inc
or
xchg
fucomi
adc
or
ror
cmc
repnz
xchg
jmp
iret
test
fs
fstp
jecxz
leave
push
cmc
ror
adc
daa
iret
fild
cmc
pop
out
fmulp
fist
cmc
fisttp
stc
or
inc
jecxz
adc
fcomp
mov
add
movups
and
sub
outs
les
sbb
addr16
add
leave
pop
int3
adc
(bad)
add
loop
int3
adc
and
push
inc
cmp
retf
ds
lods
out
popa
and
mov
(bad)
mov
jmp
mov
sar
in
lock
xchg
movs
outs
shl
movs
push
rcr
and
or
or
push
movs
or
ror
sub
mov
dec
and
xchg
dec
mov
(bad)
leave
test
(bad)
call
push
mov
fild
test
mov
pop
icebp
cmc
dec
dec
(bad)
inc
push
inc
rcr
dec
shl
hlt
cmp
dec
std
push
das
push
mov
dec
pop
addr16
push
mov
sti
movs
mov
shl
jbe
add
or
or
imul
stc
cmp
or
repz
in
ficomp
ror
in
ret
mov
ins
jo
adc
test
pop
daa
add
call
test
xor
or
xor
jge
std
bnd
xor
ja
xchg
clc
add
dec
sub
pusha
cwde
xor
and
ins
aam
mov
sub
ror
inc
sbb
aas
mov
movs
iret
leave
or
data16
mov
sub
push
lods
ret
neg
out
movs
lods
adc
cmp
outs
cdq
push
jmp
mov
cs
push
and
imul
sti
imul
fistp
and
mov
imul
in
push
jle
mov
xor
jl
mov
sti
imul
mov
imul
imul
sti
imul
cli
inc
sti
mov
and
imul
and
imul
and
push
mov
mov
cmc
mov
aas
mov
push
push
mov
sti
imul
push
or
in
imul
jg
ss
jl
mov
imul
sti
imul
idiv
mov
cli
inc
sti
mov
jl
push
or
outs
stc
mov
call
adc
mov
xor
mov
(bad)
xor
xchg
xor
in
push
jp
cmp
adc
mov
out
xchg
out
push
aaa
ret
push
inc
rcl
mov
rcl
(bad)
shr
movs
sbb
xlat
lods
(bad)
add
movs
enter
mov
pop
mov
jne
mov
mov
icebp
(bad)
popa
pop
push
sub
movs
outs
and
outs
push
or
and
fs
(bad)
in
cwde
lods
data16
dec
push
rcr
ror
test
out
dec
pop
or
std
or
and
pop
mov
outs
cwde
mov
mov
and
rep
adc
daa
inc
fstp
int
push
push
pop
pop
ss
fimul
or
xor
xchg
mov
outs
xor
fsub
les
fst
mov
add
stc
sbb
push
shl
mov
rcr
mov
outs
pusha
call
mov
outs
push
lds
cmp
mov
add
hlt
shl
stos
pop
ins
pop
jbe
iret
or
mov
into
cdq
jb
push
dec
mov
mov
inc
inc
stc
add
push
popa
pop
jl
ds
pop
mov
inc
add
std
jecxz
scas
fsubr
rcl
dec
(bad)
push
dec
movs
cmp
or
sti
mov
pop
push
add
mov
push
add
push
add
xchg
cmps
stos
call
mov
push
and
aam
inc
sub
movs
stos
push
add
sar
in
add
sub
add
dec
out
push
push
push
mov
push
dec
pslld
dec
pslld
or
mov
push
dec
pslld
sbb
push
int3
push
add
ret
nop
ins
pop
popa
sub
add
inc
test
out
stos
push
add
cld
sub
inc
add
adc
push
das
inc
add
sub
mov
jns
inc
push
mov
loop
inc
cmp
push
cmp
test
lds
pusha
inc
add
cmps
stos
scas
(bad)
adc
push
int3
mov
cmp
adc
fwait
lods
loopne
mov
xchg
(bad)
dec
daa
ret
lods
(bad)
(bad)
shr
movs
adc
or
mov
(bad)
cmp
lahf
and
adc
jbe
pop
push
sub
movs
xchg
xor
push
inc
add
push
or
jp
push
add
dec
mov
push
ins
aad
bound
cs
mov
jp
lock
xchg
movs
mov
bound
push
test
cmp
in
movs
mov
jmp
movs
fs
push
shr
outs
add
dec
int
imul
hlt
mov
lea
sub
adc
mov
sub
(bad)
sub
(bad)
push
(bad)
lods
ds
inc
std
adc
inc
sub
mov
mov
inc
fwait
push
sub
pushf
pop
inc
ins
loopne
hlt
rcl
fwait
dec
push
pop
cmp
add
call
test
push
add
int
or
dec
sub
dec
std
xchg
test
xlat
mov
les
test
sub
or
or
and
aam
push
xor
cmp
push
movups
and
out
imul
dec
push
pcmpeqb
cmp
jge
lods
add
test
add
and
fsubr
mov
sub
loope
sub
jmp
loope
mul
lods
addr16
imul
popa
daa
jecxz
mov
imul
icebp
cmp
lods
addr16
add
fs
imul
icebp
imul
icebp
imul
addr16
and
lods
sub
imul
icebp
das
out
addr16
enter
(bad)
push
imul
icebp
jb
gs
and
mul
imul
icebp
push
pop
dec
imul
icebp
mov
data16
or
fstp
pop
sub
sti
jl
imul
icebp
imul
xchg
imul
icebp
and
leave
xchg
add
xlat
inc
imul
xor
mov
imul
icebp
mov
add
and
cmp
jecxz
mov
iret
hlt
cmp
push
movs
sub
daa
sub
xor
jnp
daa
shr
sbb
pop
stos
icebp
(bad)
inc
and
ret
ds
jl
lods
out
rcr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
loopne
mov
out
shl
ret
adc
test
shl
ror
mov
sub
mov
push
ror
into
in
dec
mov
sub
push
mov
imul
inc
daa
lods
fwait
lods
outs
or
sub
and
pop
daa
inc
mov
gs
cmps
mov
ror
movs
dec
ror
test
ins
loopne
hlt
shl
test
push
add
dec
dec
sub
jl
mov
push
sub
mov
sub
pop
fild
js
dec
dec
dec
or
pop
rcr
xor
mov
jb
movs
mov
outs
in
es
sub
ins
movs
retf
add
les
cli
movs
lods
into
adc
dec
or
lods
adc
cmp
inc
(bad)
(bad)
and
and
dec
cmc
data16
sub
pop
and
inc
ret
mov
rcr
push
sub
dec
cmc
push
loop
lods
into
adc
ds
sub
dec
std
mov
inc
(bad)
cmps
xor
scas
ds
sbb
mov
fistp
(bad)
jne
xchg
dec
adc
dec
adc
dec
adc
dec
(bad)
sbb
outs
adc
pop
(bad)
cmp
data16
cmps
cmp
outs
adc
pop
jmp
inc
es
jmp
adc
aad
adc
sub
adc
data16
lock
adc
dec
ins
pushf
sti
pushf
mov
into
movs
jecxz
popf
shr
mov
data16
mov
or
sub
pop
int3
cdq
add
call
push
data16
mov
or
sub
pop
push
call
mov
or
div
pop
sub
add
call
or
nop
pop
sub
add
sub
jmp
cmp
dec
adc
sbb
sbb
sub
add
shl
pop
adc
(bad)
dec
pop
sub
add
cwde
fwait
add
xor
imul
js
pop
sub
add
data16
or
aam
add
in
mov
iret
jg
adc
sub
jmp
imul
pop
sub
mov
sub
add
addr16
add
mov
imul
loop
data16
xor
sub
pop
sub
add
addr16
add
data16
sbb
(bad)
loop
jo
mov
or
data16
mov
sbb
sub
dec
pop
sub
add
mov
test
(bad)
mov
adc
dec
and
addr16
dec
sbb
xchg
jecxz
data16
dec
xor
add
sub
inc
xchg
iret
add
mov
mov
into
dec
pop
sub
add
cmps
push
push
adc
dec
pop
sub
add
sub
pop
pop
sub
add
cdq
fwait
inc
or
cdq
pop
mov
sub
add
adc
dec
mov
jl
adc
lds
into
aad
(bad)
xchg
xlat
mov
mov
into
dec
pop
sub
add
sub
cmp
sub
ins
pop
sub
add
xchg
add
sub
test
cmps
xchg
push
out
cdq
sub
pop
sub
sar
je
mov
sbb
pop
sub
add
sub
cmp
sub
add
inc
call
sub
add
mov
ins
pop
sub
add
sub
test
cmps
fwait
push
out
cdq
sub
pop
sub
add
sub
pop
pop
sub
add
sub
add
sub
sub
call
lods
enter
aam
cmp
pop
inc
push
data16
aam
push
jmp
adc
xlat
dec
sub
cld
ficom
data16
or
jmp
popa
push
xchg
(bad)
data16
pop
jmp
and
lds
je
xchg
movs
aam
pop
sub
mov
sub
pop
pop
sub
movs
pop
sub
mov
sub
add
add
add
sub
add
xchg
retf
pop
jne
ror
fmul
xchg
adc
jb
dec
push
addr16
lahf
adc
imul
mov
addr16
mov
adc
adc
pop
mov
out
movs
jg
in
lock
loopne
lods
adc
je
mov
jmp
(bad)
mov
cwde
mov
out
cwde
push
ins
call
inc
adc
dec
mov
cs
inc
xor
aaa
push
ror
mov
test
sub
mov
mov
ss
clc
sahf
mov
push
dec
call
push
std
jecxz
push
rcr
leave
ret
pop
fucomi
movs
hlt
sar
test
aad
push
cmp
pop
scas
cmp
sbb
mov
fst
into
jo
out
dec
std
ret
sar
adc
fld
push
pop
into
sbb
mov
outs
cmp
lods
ds
std
mov
dec
sbb
out
dec
mov
xchg
inc
push
ins
in
movs
lods
sub
dec
std
pop
and
fild
out
std
push
mov
push
sub
aam
xor
cli
push
ror
into
in
or
mov
in
push
or
rcl
stos
mov
outs
jo
dec
outs
xor
out
mov
into
shr
mov
mov
push
adc
iret
test
outs
xor
shl
dec
xchg
fld
push
outs
xor
push
call
add
mov
and
gs
pop
and
dec
mov
mov
lock
pushf
sub
mov
ds
pop
sahf
mov
dec
sahf
mov
push
sahf
mov
push
sahf
mov
push
mov
mov
add
jge
sbb
add
xchg
push
cwde
and
add
cmps
div
(bad)
outs
setle
je
sahf
mov
push
dec
daa
je
lahf
stos
jns
popa
dec
popa
call
stc
mov
sar
cmp
stc
cmp
adc
add
mov
sar
cmp
stc
cmp
push
cmp
pop
cmp
popa
(bad)
and
sar
cmp
stc
cmp
inc
cmp
cmps
pop
mov
leave
cmp
repz
sti
lods
push
sar
cmp
inc
cmp
inc
sbb
adc
fwait
je
mov
mov
sbb
mov
(bad)
add
mov
and
mov
add
mov
outs
jbe
mov
outs
setg
scas
ds
push
popa
test
out
scas
arpl
sub
jne
pop
jae
xor
(bad)
jbe
lahf
jae
push
xchg
scas
arpl
adc
icebp
lahf
pop
jge
scas
ds
jl
lods
out
rcr
push
popa
or
sbb
mov
jmp
pop
sub
(bad)
adc
sbb
mov
jmp
in
movs
loopne
pop
stos
repnz
popa
cld
mov
sbb
mov
jmp
mov
push
out
movs
lods
mov
sbb
mov
jmp
out
mov
push
std
jnp
push
sar
inc
mov
or
xor
not
jmp
dec
mov
ds
push
ror
loop
dec
push
pshufw
aam
stc
mov
adc
ss
or
add
mov
inc
add
push
int
movs
mov
outs
rol
fild
mov
out
movs
push
ins
in
movs
hlt
rol
test
lods
ds
inc
popf
fst
pop
fldz
add
mov
cmp
dec
shl
mov
daa
inc
xchg
das
sub
push
stos
xor
outs
jbe
inc
das
cdq
shr
mov
outs
jl
and
pop
or
ins
mov
dec
(bad)
jbe
cmps
(bad)
add
mov
sub
sub
fld
mov
dec
ror
and
in
or
ds
push
mov
ins
mov
call
jae
inc
mov
and
dec
std
fisub
dec
inc
sub
shl
pop
daa
inc
out
scas
(bad)
cwde
lods
sub
pop
aad
nop
mov
repz
stc
push
imul
push
cmp
fsqrt
add
out
or
cmp
add
sub
push
inc
xor
mov
(bad)
push
call
sbb
retf
pop
retf
pop
retf
pop
out
sub
jle
mov
out
pop
out
sub
sahf
enter
pop
(bad)
xor
inc
sar
outs
pop
retf
cmps
add
jp
xchg
sbb
mov
mov
cli
pop
retf
jb
das
cli
inc
retf
stos
loopne
leave
xor
pop
xchg
mov
test
adc
popa
mov
retf
adc
mov
int
les
addr16
xchg
int3
sub
lds
cmp
test
inc
frstor
pop
retf
adc
mov
test
test
pusha
hlt
jg
sub
(bad)
fdivr
fild
cld
push
(bad)
fdivr
retf
test
cld
cmc
dec
pushf
sub
pop
push
cli
pop
retf
xchg
fisttp
pop
(bad)
and
add
mov
mov
test
mov
test
adc
aam
test
adc
imul
test
adc
popa
mov
neg
cmp
aas
in
or
test
mov
cmp
mov
(bad)
std
pop
retf
pop
push
and
push
ds
pop
adc
mov
retf
adc
mov
les
pop
neg
cmp
aas
in
mov
sub
adc
mov
imul
pop
adc
mov
test
(bad)
mov
test
adc
mov
fisttp
pop
adc
mov
vpaddsw
fistp
mov
(bad)
pop
repnz
cli
pop
retf
pop
retf
pop
retf
pop
retf
jbe
or
fnsave
sti
pop
retf
pop
xor
das
cli
push
jmp
dec
jp
aaa
sti
inc
retf
aaa
(bad)
xor
pop
retf
fidiv
sub
(bad)
mov
retf
enter
pop
out
cli
jg
cli
ror
xchg
in
adc
mov
shl
push
sub
cmp
adc
mov
aam
mov
sar
std
ins
int
test
test
mov
(bad)
pusha
mov
aam
jnp
retf
adc
mov
retf
sbb
or
adc
mov
(bad)
popa
mov
retf
mov
lods
mov
adc
mov
shl
pop
retf
adc
mov
retf
and
(bad)
pop
xchg
cli
adc
mov
leave
arpl
push
sub
mov
out
sub
pop
adc
mov
leave
arpl
mov
cld
mov
pop
retf
adc
mov
mov
jmp
test
mov
test
push
adc
inc
fcmovne
fist
test
jo
arpl
test
jg
add
adc
mov
int
loopne
aam
cli
pop
retf
adc
mov
test
sub
add
jp
sub
std
adc
mov
shl
pop
retf
fmul
or
adc
mov
shl
pop
retf
int3
int
in
test
mov
test
fsub
popa
mov
mov
retf
adc
mov
and
mov
out
and
adc
mov
test
pop
out
loopne
test
adc
mov
aam
(bad)
adc
mov
test
inc
fwait
arpl
jbe
popa
mov
adc
inc
fwait
adc
adc
mov
test
aas
out
loopne
test
adc
mov
aam
iret
adc
mov
in
mov
mov
mov
test
adc
mov
out
and
adc
mov
test
(bad)
add
adc
mov
test
pop
sbb
sbb
cmp
ffree
and
mov
xchg
mov
add
mov
(bad)
mov
jns
xor
popa
mov
test
adc
jnp
retf
sbb
shr
cli
adc
mov
mov
mov
test
mov
pusha
mov
sub
(bad)
adc
mov
pop
popa
mov
(bad)
test
xchg
retf
pop
retf
int3
pop
das
(bad)
arpl
punpckhdq
das
cli
dec
dec
and
data16
in
pop
retf
repnz
cli
dec
retf
pop
(bad)
sub
imul
add
aaa
sti
inc
retf
pop
fcmovnu
push
cs
retf
ret
or
adc
pusha
mov
retf
adc
mov
test
sbb
retf
pop
retf
pop
retf
pop
out
sub
out
dec
mov
out
pop
out
sub
push
enter
pop
(bad)
add
jo
cmp
pop
retf
cmps
nop
das
jp
xchg
push
loop
retf
pop
pop
cs
pop
retf
jb
das
cli
inc
retf
cmp
inc
stc
fcomip
push
sub
cmp
adc
mov
shl
xchg
mov
pusha
bound
bound
push
and
das
sti
pop
ss
mov
jle
pop
adc
mov
pop
arpl
retf
jb
cs
into
idiv
cli
dec
fldcw
test
out
into
add
pop
data16
arpl
pop
push
retf
int
and
jae
call
mov
jo
fcmovu
mov
dec
push
das
pop
adc
mov
test
inc
frstor
pop
retf
adc
mov
test
icebp
mov
pop
retf
pop
retf
pop
retf
pop
retf
data16
or
fnsave
sti
pop
retf
pop
xor
das
cli
inc
clc
or
aaa
sti
inc
retf
pop
enter
in
pop
retf
fidiv
sub
into
mov
retf
enter
pop
out
cli
ins
sar
ret
sub
pop
xchg
in
adc
mov
mov
popa
mov
mov
(bad)
adc
mov
retf
inc
fld
xor
sub
iret
jmp
pop
(bad)
sub
jmp
pop
retf
jne
cs
pop
retf
push
fsubr
call
out
loop
sar
neg
pop
loop
ret
cli
ja
push
sti
mov
add
adc
mov
int
in
pop
xchg
mov
test
icebp
pop
arpl
add
in
pop
retf
jb
cs
into
idiv
cli
dec
fldcw
test
out
into
aaa
loop
data16
arpl
pop
push
retf
int
and
inc
rcr
(bad)
pop
(bad)
xor
outs
mov
dec
pop
das
pop
adc
mov
int
in
pop
xchg
mov
test
test
pusha
hlt
aaa
push
mov
test
cld
stc
bound
test
adc
in
cmp
pop
div
xor
call
loop
sar
inc
dec
sub
pop
push
loop
xor
mov
pop
adc
dec
push
fnstcw
add
jmp
shl
ror
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
shr
push
in
in
movs
loopne
pop
stos
loop
jmp
jb
hlt
movs
outs
rol
mov
mov
(bad)
shr
pushf
add
out
and
pop
push
paddsb
dec
push
mov
push
out
dec
movs
movs
add
cld
addr16
jnp
clc
cmp
adc
fwait
and
lods
loop
repz
cmp
push
movs
(bad)
fadd
stos
mov
outs
ins
push
hlt
shl
dec
lock
cmp
fwait
push
and
int3
or
mov
sub
movs
rol
sar
sub
mov
pop
sar
adc
fldcw
inc
inc
ins
add
add
or
pop
push
hlt
cli
cmps
pop
(bad)
mov
movs
pop
ror
cmp
xor
and
jmp
repnz
inc
jmp
shr
test
add
popa
outs
add
dec
rcl
inc
mov
adc
xor
pop
leave
pop
add
in
or
out
add
mov
and
in
ror
icebp
iret
in
or
dec
mov
inc
cli
cwde
lods
data16
ds
pop
mov
loopne
mov
(bad)
jns
fcmovnu
and
cwde
or
iret
stos
and
and
aaa
dec
mov
aaa
dec
mov
aaa
dec
mov
aaa
dec
mov
aaa
dec
mov
aaa
dec
mov
aaa
dec
mov
aaa
dec
mov
aaa
dec
mov
aaa
dec
push
in
push
mov
jns
jmp
outs
int
cmps
aaa
dec
int
jns
jmp
jns
jmp
cld
enter
inc
fs
sahf
imul
jecxz
push
jmp
jb
xchg
out
pushf
mov
cwde
mov
jecxz
loopne
jecxz
je
pop
ss
sti
jns
jmp
and
jmp
popf
dec
std
lods
or
stos
loop
push
jmp
xchg
dec
std
lods
aaa
mov
jecxz
mov
adc
push
in
jns
mov
jns
jmp
jns
jmp
sbb
jge
das
dec
pop
fdivr
jmp
jns
jmp
jnp
stos
loop
push
jmp
push
xor
jns
jmp
sbb
imul
shr
cld
lods
xchg
lods
mov
ret
push
and
or
mov
mov
jecxz
pop
adc
dec
jge
jns
jmp
jns
jmp
das
dec
in
cmp
jmp
aaa
mov
jecxz
mov
adc
push
in
jns
mov
jns
jmp
loopne
mov
sub
xor
mov
jns
jmp
aaa
dec
sub
xchg
jnp
stos
loop
push
jmp
das
dec
cmc
mov
jns
jmp
daa
or
loop
push
jmp
das
dec
xchg
mov
jns
jmp
and
mov
jecxz
pop
repz
xchg
loope
je
and
or
gs
aaa
dec
mov
aaa
dec
mov
jns
jmp
aaa
dec
push
sub
dec
mov
jns
jmp
xchg
dec
std
lods
aaa
mov
jecxz
pop
adc
dec
jge
jns
jmp
jns
jmp
das
dec
in
cmp
jmp
ja
adc
loopne
mov
pusha
push
repnz
ss
sti
jns
jmp
xor
adc
add
jecxz
push
jmp
xor
jecxz
dec
push
loopne
out
(bad)
jmp
sbb
dec
mov
retf
lahf
sbb
pusha
and
sbb
add
sti
jns
jmp
or
es
repz
dec
and
mov
mov
sub
mov
mov
add
sti
lods
ds
jl
lods
out
in
cdq
test
push
(bad)
sbb
sbb
inc
push
out
cwde
push
ins
call
mov
push
(bad)
inc
add
add
dec
mov
(bad)
call
cmps
stos
aaa
add
add
or
and
stos
sbb
xchg
mov
push
pop
pop
push
ror
inc
in
dec
std
push
mov
lods
out
pop
jmp
daa
cmps
inc
sub
hlt
and
dec
adc
in
push
lea
ret
jae
dec
(bad)
out
dec
dec
shl
ds
test
pop
mov
mov
aas
hlt
movs
lods
sub
pop
(bad)
cmp
aas
inc
mov
test
fs
push
rcr
out
stc
push
je
or
pop
outs
inc
sub
ret
mov
outs
pop
rcr
xchg
adc
mov
sbb
push
ins
cld
movs
mov
data16
fild
movs
add
sub
(bad)
pop
addr16
fwait
enter
mov
outs
mov
stos
inc
sub
xchg
adc
hlt
cmp
dec
pop
daa
inc
retf
data16
cwde
lods
outs
adc
(bad)
fwait
stos
enter
mov
outs
hlt
jle
xlat
dec
cmp
or
outs
sbb
add
mov
lds
shl
and
(bad)
sub
ret
addr16
push
xchg
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
(bad)
adc
xchg
adc
xchg
adc
(bad)
adc
xchg
adc
mov
adc
mov
adc
xchg
adc
(bad)
adc
xchg
adc
mov
adc
enter
enter
sub
or
enter
enter
add
push
retf
sbb
rcr
pop
and
fimul
sub
xlat
xchg
sbb
lea
sbb
rcr
pop
sub
test
dec
sbb
pop
pop
daa
and
push
xchg
xor
sbb
rcr
ja
fild
hlt
xor
sahf
imul
(bad)
adc
into
adc
mov
push
or
enter
or
pop
dec
xchg
pop
sbb
rcr
pop
pop
xchg
adc
jp
or
enter
and
pop
push
xchg
lds
xchg
adc
iret
inc
add
out
push
retf
sbb
rcr
pop
pop
sahf
call
leave
jns
sbb
rcr
pop
pop
sahf
call
leave
jns
sbb
rcr
pop
cmp
ret
mov
enter
enter
rcr
mov
fmul
push
xchg
sbb
rcr
pop
pop
xchg
adc
jp
or
enter
enter
enter
mov
stos
push
(bad)
adc
mov
add
jnp
adc
enter
enter
mov
pop
pop
sahf
call
leave
jns
sbb
rcr
pop
sbb
call
leave
jns
sbb
rcr
pop
push
xchg
pop
sbb
rcr
pop
push
push
xor
jp
mov
cmp
lea
sbb
rcr
pop
cmc
xchg
pop
push
mov
xor
or
enter
and
pop
push
xchg
dec
jae
sbb
xchg
adc
enter
enter
nop
rcr
in
enter
enter
jo
add
sbb
lea
sbb
rcr
pop
xchg
jo
add
jnp
in
mov
or
push
retf
sbb
rcr
pop
mov
ret
loopne
retf
sbb
rcr
pop
sbb
pop
inc
mov
leave
jns
sbb
rcr
pop
dec
dec
pop
les
nop
lea
test
dec
in
xor
out
test
js
lea
lea
enter
test
sbb
mov
or
sbb
lea
enter
sbb
pop
push
push
xor
mov
sbb
push
into
adc
daa
mov
enter
enter
stos
adc
sbb
jno
sbb
rcr
fmul
enter
sbb
pop
sbb
test
pop
pop
test
pop
push
mov
xor
xchg
xchg
sbb
cdq
adc
enter
jnp
pop
push
sahf
pop
and
sub
or
enter
enter
jp
mov
add
out
push
retf
sbb
rcr
jo
retf
sbb
rcr
pop
push
(bad)
ret
sbb
jo
les
enter
enter
into
inc
ss
movs
dec
sbb
rcr
aaa
sbb
rcr
pop
sbb
mov
je
xor
ds
or
enter
enter
adc
pop
sbb
rcr
adc
enter
enter
adc
pop
sbb
rcr
pop
push
jp
adc
sahf
pop
and
dec
(bad)
out
push
retf
sbb
rcr
pop
push
mov
xor
or
fisttp
adc
enter
enter
mov
add
jnp
adc
enter
enter
enter
mov
mov
stos
ror
retf
sbb
rcr
pop
std
fwait
ret
pop
xlat
jae
stos
rcl
enter
pop
cmc
xchg
pop
push
es
dec
xchg
sub
xchg
adc
xchg
adc
xchg
adc
xchg
inc
sbb
xchg
adc
enter
enter
xchg
sbb
lea
enter
enter
xchg
ret
sbb
xchg
dec
xchg
xchg
mov
dec
xchg
jnp
dec
push
xchg
xchg
xchg
adc
iret
pop
mov
int
popf
idiv
adc
mov
mov
loopne
xchg
movs
jmp
out
mul
push
rcr
add
mov
(bad)
jne
push
pop
daa
fwait
xor
adc
fiadd
push
sub
or
cwde
add
test
xor
sbb
inc
push
movs
fwait
lods
data16
ror
int
add
daa
inc
sub
sub
jo
and
push
sub
shr
inc
rol
inc
out
movs
push
ror
loopne
dec
dec
cmps
inc
sub
sbb
fild
movs
cmp
or
or
stos
add
and
iret
mov
hlt
rcl
stos
pop
sub
ja
mov
mov
cmp
shl
mov
ins
pushf
fwait
mov
xchg
stos
mov
outs
or
lods
ds
mov
outs
in
in
add
xchg
or
add
pop
add
mov
xor
movs
test
cmps
lods
sub
pop
out
sub
and
data16
cmp
retf
jbe
dec
adc
push
add
dec
mov
cs
sbb
jmp
ret
add
in
adc
repnz
lods
adc
movs
shl
mov
imul
lods
jne
(bad)
fsubr
lods
(bad)
bnd
movs
cmp
movs
pop
aaa
sub
jne
inc
jmp
fwait
adc
jae
aaa
sub
jne
sub
jne
sub
jne
gs
push
and
aaa
sub
jne
sub
jne
or
jg
lods
aaa
jp
mov
cmp
jb
int3
xchg
cmp
nop
sub
inc
gs
cmp
or
popa
rcl
gs
xchg
movs
cmp
or
aaa
sub
jne
sub
jne
jae
cwde
popa
mov
gs
shl
or
les
cmp
test
xor
sub
jne
or
jne
sub
jne
sub
jne
push
xor
popa
mov
sub
pop
in
js
mov
in
test
mov
fidiv
sub
jne
sub
jne
addps
test
mov
fidiv
sub
jne
jb
jne
fs
out
sbb
mov
fs
push
add
mov
mov
fadd
add
ins
sub
mov
loop
shl
cmp
jmp
sbb
mov
jmp
xchg
add
icebp
scas
pushf
pop
push
(bad)
or
out
dec
push
or
xor
hlt
sbb
inc
inc
ret
data16
shl
push
xor
into
dec
cmc
dec
lea
in
movs
pop
addr16
pop
mov
jmp
mov
mov
ror
pop
xor
dec
dec
lods
ds
and
cmp
dec
sub
mov
outs
xchg
inc
dec
ins
jl
mov
and
mov
pop
addr16
(bad)
jo
dec
daa
push
push
xlat
ins
cld
push
dec
sub
hlt
leave
inc
sub
cwde
xor
ret
xor
cld
jecxz
std
dec
add
(bad)
mov
std
fcmovu
push
push
adc
pop
dec
cmc
es
push
lods
ficom
pop
scas
ds
fild
adc
(bad)
out
mov
xchg
test
and
push
shl
mov
(bad)
(bad)
cmp
cli
inc
push
int
and
mov
pop
mov
(bad)
xor
arpl
dec
mov
cs
in
loop
xchg
mov
sub
stc
push
or
mov
les
mul
fsub
mov
mul
mov
dec
fld
lods
ds
out
fstp
js
mov
fadd
out
cwde
push
ins
call
enter
mov
pushf
xor
mov
ret
mov
sub
cli
xlat
and
jge
jmp
movs
pop
xor
(bad)
stos
bound
ret
adc
jbe
in
movs
push
shl
popa
aas
(bad)
out
inc
xor
cmp
xchg
sbb
into
dec
push
ins
in
movs
in
sub
mul
mov
mov
sbb
scas
mov
test
call
inc
sub
mov
pop
addr16
pop
enter
std
(bad)
pop
pop
inc
ins
loopne
loopne
fisttp
fst
dec
inc
sub
adc
mov
mov
dec
dec
sub
addr16
xor
cmp
add
into
pop
add
cld
mov
inc
cmp
xor
and
xchg
cmp
cwde
adc
pop
add
push
out
ds
inc
mov
outs
mov
nop
sub
mov
scas
inc
push
sub
sub
pop
daa
inc
mov
cmp
mov
add
in
mov
pusha
movs
and
lock
jb
push
jg
dec
mov
pop
das
mov
bound
in
bound
pusha
adc
sub
imul
mov
push
sub
cmp
fnstsw
bound
cmp
outs
cmps
sub
inc
mov
cmps
sub
mov
es
cmp
pop
jg
loopne
jae
shl
bt
push
into
leave
jmp
mov
ja
(bad)
shl
(bad)
mov
jmp
add
(bad)
in
call
sbb
mov
jp
int3
pop
ret
dec
int
scas
ror
(bad)
mov
jmp
jecxz
sbb
mov
jmp
jg
jg
in
lock
cmp
cmp
inc
loopne
mov
mov
jmp
and
inc
loopne
mov
mov
jmp
cmps
dec
push
(bad)
in
movs
sbb
mov
jmp
mov
in
sbb
shl
(bad)
mov
jmp
stc
push
sbb
in
sbb
mov
dec
jl
cmp
inc
mov
hlt
movs
outs
shl
push
rcr
mov
(bad)
icebp
or
popw
mov
cmp
add
sub
or
movs
aas
and
jne
sub
adc
dec
mov
mov
xor
add
push
outs
aad
imul
data16
push
rcr
inc
sub
mov
inc
ins
loopne
in
inc
ror
(bad)
mov
fcmovnu
ret
not
lods
ds
inc
mov
dec
dec
push
shr
inc
int
add
or
out
pop
add
jne
adc
add
dec
std
adc
push
and
jecxz
std
push
push
pop
mov
retf
test
inc
xor
or
fwait
cmps
(bad)
nop
add
mov
xchg
dec
push
sub
inc
dec
stos
pop
inc
xlat
push
ins
ins
mov
(bad)
push
cmc
movs
jo
loope
pop
sub
jp
jmp
mov
into
jge
xchg
mov
int
add
push
ror
loope
lds
mov
data16
lods
ds
pop
dec
ins
sub
inc
cdq
ror
adc
movs
mov
fbstp
dec
scas
inc
ins
loopne
dec
sub
jl
push
or
fistp
lock
cmps
imul
dec
push
pavgb
push
aam
pop
iret
add
cmps
and
(bad)
jmp
inc
adc
and
fwait
xchg
xor
and
pop
xchg
xchg
add
and
nop
retf
adc
mov
pop
test
pop
xor
int3
sub
out
leave
nop
repnz
mov
xchg
xchg
and
and
add
jmp
sub
xchg
add
repz
fsubrp
leave
nop
xchg
xchg
mov
(bad)
repz
pop
test
xchg
dec
and
xchg
dec
and
and
and
inc
(bad)
movs
popf
xchg
add
mov
and
cmp
push
xchg
add
xchg
adc
mov
add
mov
pop
lahf
jnp
and
test
xchg
mov
lahf
and
fstp
movs
xor
arpl
fild
and
cmp
push
aam
fstp
enter
sbb
js
outs
movs
and
and
jle
rol
lahf
test
xchg
add
cmp
sbb
cmps
enter
movs
pop
cmp
xor
repz
fcomi
mov
fucomi
mov
pop
(bad)
or
add
xchg
xchg
dec
call
jae
xchg
xor
mov
add
xchg
test
xchg
xor
mov
add
sbb
nop
add
mov
pop
ret
lahf
aam
inc
mov
xor
mov
add
ja
fcomp
repz
inc
xchg
mov
sub
aas
mov
jmp
mov
fcomp
repz
inc
xchg
mov
add
aaa
mov
add
mov
pop
ret
lahf
aam
push
mov
sbb
xchg
mov
(bad)
(bad)
xor
xchg
xchg
mov
inc
(bad)
mov
(bad)
out
leave
pop
out
cmps
rcl
jmp
pop
xchg
int3
pop
cmp
rol
lahf
mov
out
int3
inc
dec
mov
add
das
enter
xchg
sbb
jmp
je
lahf
enter
or
add
xchg
pop
stos
repz
xor
repz
mov
sbb
repz
add
and
fstp
movs
inc
xchg
rol
mov
aas
xchg
xor
fsub
lahf
mov
adc
jmp
int3
dec
xchg
xchg
add
das
enter
xchg
add
lahf
mov
lahf
jmp
pop
repz
pop
sub
sub
repz
push
div
add
cmps
mov
jmp
adc
pop
sub
add
xchg
xchg
and
fwait
nop
(bad)
(bad)
add
repz
push
div
add
cmps
mov
lahf
and
mov
xchg
xchg
and
fwait
nop
(bad)
fstp
sub
repz
xchg
xchg
mov
test
fwait
nop
mov
ret
ror
dec
xchg
xchg
push
stos
das
mov
popf
repz
mov
jecxz
xchg
dec
xchg
xchg
inc
push
aas
xchg
add
xchg
inc
fld
pop
les
mov
or
sub
aas
mov
repz
mov
push
scas
lods
sbb
xchg
mov
cmp
sahf
mov
aaa
loopne
(bad)
nop
inc
cmps
nop
adc
jmp
xor
mov
add
pop
rcr
mov
and
mov
inc
fistp
mov
adc
jmp
inc
lahf
mov
xchg
dec
mov
xor
jg
pop
add
mov
sbb
mov
inc
dec
mov
and
imul
not
xor
and
and
mov
nop
jle
xchg
adc
lahf
mov
repz
mov
repz
add
push
scas
test
jmp
jmp
xchg
int3
dec
xchg
xchg
inc
add
xchg
inc
fcmovnb
int3
xor
xchg
push
pop
push
mov
add
xchg
inc
pop
aas
xchg
cmp
xchg
lahf
and
inc
pop
mov
add
xchg
pop
stos
repz
sub
repz
fist
movs
int
jg
jo
fwait
adc
fld
or
fist
movs
sbb
xchg
xchg
and
cmp
fucomi
aam
(bad)
nop
add
int3
shr
nop
adc
jmp
pop
(bad)
or
sub
daa
add
repz
push
fwait
shl
xchg
rcr
jmp
xchg
mov
adc
jmp
xchg
dec
xchg
xchg
inc
inc
aas
xchg
pop
fcomi
enter
rcl
jmp
nop
jb
nop
sub
jecxz
sbb
jmp
nop
push
out
int3
and
mov
inc
fistp
enter
int3
inc
inc
aas
xchg
pop
fcomi
enter
rol
lahf
mov
dec
out
and
ret
arpl
pop
imul
pop
jmp
int3
mov
lahf
mov
int
stos
add
mov
int3
dec
div
sti
aaa
mov
sbb
test
xchg
fbstp
or
lahf
fwait
xchg
sub
jg
pushf
retf
mov
add
fwait
mov
imul
mov
pop
adc
lea
dec
repnz
xor
sub
pop
mov
and
sub
repz
mov
and
or
pop
mov
xor
mov
dec
dec
mov
sub
and
sbb
mov
nop
add
rcr
xchg
xchg
adc
adc
dec
sahf
enter
xchg
add
out
rcl
das
mov
dec
out
adc
(bad)
or
add
xchg
push
fbld
push
add
cmps
rol
xrelease
add
repz
fucomi
test
xchg
add
mov
pop
retf
mov
nop
pop
mov
int3
xor
mov
int3
xchg
dec
mov
mov
fcomp
repz
nop
jb
shr
inc
jecxz
push
(bad)
xchg
movs
pop
fistp
adc
sbb
xchg
add
enter
movs
sub
jg
test
daa
add
jmp
fsubr
fwait
nop
add
and
xor
(bad)
(bad)
add
repz
mov
add
idiv
(bad)
(bad)
add
repz
xchg
dec
nop
push
repz
mov
retf
(bad)
dec
nop
inc
repz
xor
mov
xor
arpl
(bad)
rcl
xor
jo
jae
mov
jg
fcomp
xchg
mov
pop
scas
ror
jmp
cwde
sub
fwait
nop
sub
arpl
shl
daa
add
fwait
out
shl
out
int3
test
mov
adc
mov
nop
push
fwait
rcr
stos
mov
add
out
rol
pop
xchg
pop
dec
xchg
(bad)
xchg
movs
pop
fistp
test
repz
sbb
xchg
add
enter
xchg
pop
adc
fstp
daa
add
repz
dec
btr
neg
xor
fucomi
test
and
sub
repz
movs
nop
sbb
enter
int3
and
jmp
xchg
dec
out
int3
xor
scas
mov
lahf
and
pop
repz
int3
adc
scas
movs
mov
mov
xchg
dec
sahf
mov
inc
dec
cmps
mov
out
int3
inc
fild
and
pop
fwait
pop
pop
retf
ret
shl
lahf
mov
and
mov
fwait
ret
xchg
test
jg
nop
pop
xchg
pushf
dec
mov
add
das
enter
xchg
adc
xchg
shl
xchg
nop
inc
cmps
rcl
xchg
sub
mov
inc
jmp
test
stos
mov
fld
add
xchg
xchg
cmp
pop
mov
imul
add
and
add
mov
add
stos
test
fcomi
add
out
cmp
dec
mov
pop
(bad)
or
xor
lahf
mov
sub
rcr
add
repz
jae
loopne
dec
not
add
das
enter
xchg
mov
fwait
rcr
mov
xchg
dec
scas
rol
outs
xchg
sub
(bad)
or
add
rcr
xchg
mov
sub
add
sub
rep
xor
and
inc
dec
sub
sub
and
add
xchg
inc
xchg
rcr
mov
inc
repz
fstp
jmp
add
repz
xor
test
xor
scas
enter
mov
or
imul
mov
(bad)
daa
add
mov
test
mov
add
and
sub
add
mov
add
and
and
sbb
fcomi
push
adc
jmp
nop
jb
pop
sub
jecxz
adc
das
xor
xchg
add
mov
pop
xchg
outs
xchg
add
xchg
xchg
movs
fstp
cmps
enter
enter
xchg
sub
das
mov
xchg
movs
sub
add
lahf
repz
outs
xchg
add
xchg
retf
xchg
xor
repz
(bad)
fadd
mov
pop
dec
repnz
jmp
xchg
add
out
rcr
outs
xchg
add
xchg
jmp
enter
mov
fld
mov
xor
cmps
mov
fbstp
or
sub
xchg
sbb
mov
xor
jmp
mov
mov
aad
mov
je
mov
dec
jmp
enter
xchg
inc
and
les
mov
sub
mov
shl
nop
pop
jmp
rcr
jmp
pushf
nop
jle
add
fwait
lahf
mov
sub
outs
movs
sub
and
pop
jmp
rcr
jmp
pushf
sub
mov
xchg
dec
xchg
rol
lahf
mov
out
pop
sub
xor
dec
sahf
mov
sub
jecxz
xor
lahf
mov
add
add
cmps
add
repz
mov
idiv
sbb
add
or
xor
je
xrelease
cmps
mov
test
mov
and
lahf
mov
repz
ret
mov
pop
out
repz
repz
nop
ret
pop
fist
mov
fcomp
cmps
enter
add
push
mov
and
mov
add
out
rcr
and
inc
(bad)
mov
xchg
add
cmps
mov
cmp
add
cmps
mov
(bad)
scas
mov
(bad)
or
add
repz
cmp
(bad)
aas
mov
ret
sbb
movs
add
pop
mov
setg
ret
sbb
movs
inc
jg
xchg
adc
lahf
mov
aas
enter
add
(bad)
pop
xchg
pop
dec
mov
inc
sbb
xchg
pop
add
xchg
mov
mov
nop
jbe
mov
xchg
fbstp
add
repz
xlat
sub
mov
mov
mov
push
scas
test
mov
sbb
mov
nop
jbe
int3
mov
push
scas
test
mov
sbb
mov
nop
ret
sbb
movs
fcom
push
add
jmp
sub
mov
int
mov
or
lahf
cwde
pop
jmp
int3
nop
adc
dec
add
div
jmp
int3
pop
dec
lahf
mov
mov
(bad)
mov
and
fild
ins
dec
lahf
push
ins
dec
xchg
test
add
jb
hlt
mov
fild
ins
dec
dec
xchg
outs
(bad)
fld
cmp
fild
ins
dec
fild
ins
dec
dec
push
scas
out
fild
and
add
add
dec
outs
jecxz
add
add
add
push
scas
lahf
fild
and
add
add
out
ins
scas
xchg
dec
mov
fild
ins
dec
fild
ins
dec
or
fild
and
add
in
ins
dec
xchg
dec
outs
or
add
add
mov
into
fldenv
push
aaa
adc
dec
and
adc
mov
nop
mov
or
push
pop
fdivrp
nop
out
mov
imul
test
fwait
in
movs
inc
pop
out
cwde
push
ins
call
rcr
(bad)
adc
xor
(bad)
movs
mov
mov
adc
mov
inc
push
(bad)
mov
and
pushf
push
add
aam
xor
inc
out
fwait
lods
outs
inc
inc
call
(bad)
dec
ss
shl
or
out
mov
mov
and
lock
fs
push
sar
fcmovnb
xchg
jnp
daa
inc
sti
ret
outs
call
test
ret
rcl
cmps
outs
or
int3
jp
pop
mov
outs
fadd
imul
out
movs
ins
xlat
loopne
std
push
sub
inc
(bad)
or
hlt
mov
int
or
mov
fnstsw
in
or
repz
ds
push
sub
int3
jno
sahf
and
outs
or
hlt
shl
pop
sub
xor
dec
nop
jns
add
xor
pop
inc
test
movs
lods
into
adc
inc
hlt
mov
sbb
fld
ror
fcom
dec
std
jle
pop
dec
ins
loopne
les
add
mov
nop
daa
sahf
out
add
xchg
imul
repnz
push
and
xchg
inc
sbb
fcmovnu
daa
sbb
stc
fsub
push
stc
pusha
add
(bad)
scas
ss
retf
sahf
xchg
int
scas
xchg
imul
inc
sahf
mov
add
cmp
adc
mov
add
cmp
push
mov
mov
inc
xchg
add
cmp
push
mov
mov
inc
cmp
pop
cmp
mov
mov
inc
mov
add
cmp
adc
mov
add
cmp
pop
mov
mov
inc
mov
push
mov
in
add
cmp
pop
mov
mov
inc
mov
push
mov
in
add
cmp
mov
mov
inc
mov
out
or
push
pop
mov
push
push
stc
fsub
push
stc
fsub
push
stc
dec
jno
sbb
daa
sbb
stc
and
mov
push
lods
pop
mov
jno
xchg
xor
scas
sub
or
fst
loopne
xchg
leave
test
lods
lods
pop
pop
(bad)
lods
out
fstp
call
inc
jnp
cwde
push
ins
call
sbb
sub
push
cwde
div
mov
push
sar
int
outs
push
or
mov
add
mov
pop
xchg
mul
test
shl
mov
into
fstp
push
mov
outs
dec
clc
mov
jmp
mov
and
pop
dec
and
push
xor
out
mov
into
jno
mov
outs
movs
push
cmc
sahf
jne
push
gs
movs
push
ror
jbe
push
mov
std
or
ret
cmp
inc
pop
mov
jmp
dec
sub
out
(bad)
inc
sti
dec
shl
pop
pop
add
and
fild
out
in
movs
jns
add
adc
push
dec
mov
int
push
ins
in
movs
mov
pop
stos
std
inc
cmp
mov
into
jne
cmps
inc
or
fxch
xor
stos
aas
dec
mov
ins
sub
outs
cmp
pop
daa
nop
xor
call
dec
xchg
fldcw
outs
mov
push
adc
ret
adc
ins
in
movs
cwde
push
(bad)
mov
lea
inc
aaa
outs
mov
out
rol
iret
ror
rcr
icebp
pop
xchg
repz
enter
imul
pop
xchg
repz
dec
div
bswap
adc
repz
xchg
repz
xchg
repz
xchg
repz
cmc
repz
xchg
repz
xchg
repz
xchg
repz
test
inc
push
test
mov
pop
xchg
repz
xchg
cmc
xchg
push
test
pop
xchg
repz
xchg
repz
out
div
pop
xchg
repz
movs
into
ror
sar
mov
fbld
jge
enter
fadd
jle
or
rcr
mov
jg
aaa
sbb
or
ja
mov
push
aaa
scas
stos
dec
shl
pushf
(bad)
(bad)
shr
movs
scas
shr
mov
(bad)
and
(bad)
or
in
mov
lds
xchg
push
ror
das
out
dec
mov
cs
xchg
add
or
cmp
adc
fwait
lods
outs
je
add
div
in
movs
push
ror
inc
ins
loopne
xchg
clc
pusha
dec
dec
(bad)
out
push
dec
shl
lods
ds
das
test
dec
dec
scas
in
gs
push
shl
lahf
fst
stos
in
in
or
scas
cmps
sbb
pop
inc
push
cmp
dec
shl
mov
ds
mov
outs
sbb
mov
into
cmp
mov
std
not
inc
xor
ror
outs
in
mov
(bad)
stos
(bad)
cmps
sbb
std
mov
jp
int
imul
push
xchg
hlt
shr
test
mov
xor
out
or
scas
idiv
int
arpl
push
div
cmps
jo
mov
cld
add
or
jnp
cmp
and
adc
dec
inc
sbb
pop
mov
adc
pusha
jecxz
cmps
mov
mov
in
fcomp
jns
sbb
mov
jmp
ds
scas
xchg
xchg
or
sbb
cmp
movs
adc
mov
or
dec
fwait
push
scas
lods
xchg
aaa
push
test
mov
sti
aad
repnz
aad
fs
ins
pop
repnz
call
sti
aad
jmp
pop
repnz
aad
retf
or
sti
aad
repnz
aad
stos
stc
aad
mov
icebp
cli
aam
mov
mov
jno
aam
lods
call
push
and
dec
adc
cmp
call
scas
stos
dec
rcl
inc
ret
pop
aaa
xor
shl
rcr
cmp
or
cwde
call
pop
cwde
pop
adc
push
rcl
cwde
call
stos
xor
jmp
movs
sbb
shl
dec
ins
ret
adc
stos
push
out
movs
push
ins
cmp
fst
cmp
adc
data16
int
mov
inc
ins
loopne
mov
out
test
jmp
dec
mov
ss
dec
mov
mov
push
int
movs
(bad)
sub
or
retf
mov
movs
cmps
lock
aad
or
popa
mov
outs
pop
pop
std
sahf
and
push
es
dec
mov
es
movs
dec
dec
add
add
lea
inc
inc
stc
xor
push
sub
add
not
dec
cld
shl
adc
push
dec
int
imul
push
inc
lods
ds
pop
push
adc
in
ja
adc
(bad)
fisub
sbb
push
push
scas
ds
cmp
sbb
stos
outs
sub
cwde
mov
mov
ss
call
dec
pop
xor
xchg
icebp
pop
call
push
inc
push
retf
xchg
or
(bad)
or
arpl
or
and
dec
sub
mov
cmp
jnp
or
leave
push
int
pop
jo
les
pop
das
les
dec
sub
fmul
fistp
or
les
dec
sub
mov
aam
mov
xchg
sahf
mov
cmps
mov
adc
mov
(bad)
jnp
mov
mov
loopne
ret
adc
jecxz
push
and
movs
push
xor
cmp
push
popa
xor
push
cmc
cmp
push
dec
xor
push
sbb
ds
fldz
test
shr
test
out
sbb
out
movs
push
shr
push
test
movs
push
shl
push
shr
push
shr
push
shr
sbb
sub
xor
xor
xor
test
sub
xor
jne
xor
sub
xor
push
sub
mov
xor
xor
shl
adc
mov
xor
shl
jne
sub
vucomisd
aad
xor
fnstcw
xor
jo
xor
push
xor
loope
xor
aas
sub
xor
sub
xor
mov
sub
xor
sub
xor
add
sbb
xor
xor
sub
xor
xor
cmp
xor
add
xor
sub
xor
arpl
or
sub
xor
inc
sub
lods
or
xor
das
xor
sub
xor
sbb
sub
int
and
xor
add
mov
sub
sbb
sub
xor
pushf
sub
xor
xor
xor
adc
sub
xor
dec
and
cdq
cmp
or
ins
jne
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
sbb
cmp
mov
cmp
cmp
cmp
push
cmp
cmp
cmp
sbb
jecxz
cmp
pop
cmp
cmp
lds
cmp
sar
and
pop
cmp
cmp
imul
stc
push
cmp
cmp
popf
stos
cmp
cmp
and
cmp
imul
push
sub
aaa
imul
add
jne
add
rol
mov
inc
pop
aaa
cmc
outs
add
stc
in
aaa
sub
push
aaa
aad
push
aaa
push
sbb
lds
add
adc
pop
aaa
mov
dec
fs
push
fs
jbe
cmp
dec
fs
shr
pop
cmp
bound
xor
jnp
cmp
mov
aad
arpl
xor
cmp
push
cmp
push
cmp
push
bound
add
ins
cmp
outs
imul
add
cmp
jae
shr
xor
cmc
xor
nop
cmc
xor
hlt
hlt
xor
mov
xor
mov
hlt
xor
inc
hlt
xor
lock
xor
hlt
xor
mov
xor
es
std
or
test
das
cmp
aam
cmp
aas
sbb
cmp
push
sbb
sub
aas
mov
push
shr
push
shr
push
shr
jg
in
lock
vmovhpd
jno
cmp
out
cwde
push
ins
call
add
(bad)
icebp
popa
xor
dec
or
inc
xor
bound
push
sar
(bad)
mov
jb
ss
mov
jb
js
dec
mov
outs
movs
add
push
test
clc
cmp
mov
popa
add
dec
sub
pusha
fdivr
ret
outs
inc
add
dec
ins
in
fs
adc
pop
push
sub
sub
mov
out
test
ret
mov
outs
mov
or
or
pop
mov
shl
push
ror
cwde
ins
out
dec
std
ret
inc
ins
loopne
hlt
shr
test
iret
add
mov
sbb
aam
test
xor
retf
mov
fimul
aaa
mov
cli
cmp
cmp
addr16
mov
push
std
dec
std
xchg
std
pop
mov
push
into
pop
fs
loop
cmc
push
dec
lods
into
adc
sbb
in
or
or
lock
add
push
int
or
cmp
adc
push
add
pop
adc
sub
pop
mov
data16
lods
rcr
jecxz
scas
ds
mov
xor
pop
cmp
adc
fincstp
push
scas
ds
dec
pushf
and
mov
mov
rol
das
leave
or
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loopne
pusha
call
loope
pusha
shl
pusha
call
call
jns
in
jge
call
mov
jge
call
mov
jge
call
mov
push
loopne
add
loopne
push
loopne
icebp
pusha
inc
loopne
js
inc
jno
push
loopne
push
ins
loopne
pusha
call
sub
pusha
cmp
jge
call
add
pusha
add
jge
call
sbb
push
loopne
ins
popa
hlt
loope
fs
arpl
call
and
call
int3
jge
jp
bound
loopne
pusha
call
add
call
int3
jge
jp
bound
loopne
pusha
call
loopne
adc
hlt
jns
call
int
ins
in
adc
dec
push
xchg
jne
loopne
push
push
in
adc
sbb
inc
call
jb
dec
call
adc
xchg
jne
jp
pop
adc
sar
adc
call
jb
dec
call
jb
ins
call
cld
jne
jp
pop
adc
cld
jge
jp
push
adc
cld
jge
jp
jp
call
adc
call
jb
dec
call
cld
jne
jp
jb
call
xor
call
and
pusha
jp
jb
call
jb
dec
call
cld
jne
jp
jb
call
loopne
imul
in
arpl
push
jno
aam
jg
call
or
or
in
repnz
call
bnd
jmp
in
nop
hlt
int3
jg
sbb
or
pusha
in
adc
in
or
jg
jmp
in
mov
jmp
jp
push
adc
call
mov
repnz
sbb
int
enter
jp
push
adc
call
push
push
or
or
pusha
sbb
or
pusha
cmp
or
pusha
sub
or
pusha
call
mov
push
jp
jp
call
adc
call
in
push
push
or
or
pusha
out
loopne
jecxz
iret
jle
call
out
rol
cld
jle
sub
ins
bnd
cld
jle
cmp
ins
bnd
cld
jle
or
ins
bnd
cld
jle
sbb
ins
bnd
les
call
add
pusha
call
(bad)
jno
out
shl
into
in
jne
fucomi
jno
loopne
push
inc
(bad)
(bad)
pop
push
into
cld
jne
jp
pop
push
call
add
call
call
push
inc
sbb
dec
repnz
sbb
ins
repnz
jge
jp
push
push
call
adc
call
les
sbb
dec
repnz
int3
jg
or
dec
repnz
in
pusha
sbb
dec
repnz
sbb
ins
repnz
adc
call
in
push
inc
or
dec
repnz
les
cmp
dec
repnz
sbb
pusha
sub
ins
repnz
cmp
ins
repnz
cld
jge
jp
push
push
call
in
push
inc
or
dec
repnz
movs
jl
call
in
fs
in
inc
push
loopne
pusha
cld
loop
pop
call
lock
loopne
pusha
aam
jg
call
jb
ins
call
shr
jmp
in
nop
(bad)
(bad)
jge
fdiv
ins
call
jb
inc
call
loopne
xor
jg
sub
dec
repnz
jle
int3
repnz
jg
loopne
mov
jmp
in
nop
hlt
int3
jg
sbb
dec
repnz
jg
in
pop
jl
loopne
or
jg
jmp
in
nop
(bad)
sar
jmp
in
mov
sar
jmp
in
mov
call
call
mov
repnz
int3
jg
sbb
dec
repnz
jg
in
pop
jl
loopne
sub
jle
call
out
ins
lock
pusha
out
loopne
jecxz
repz
jmp
in
mov
hlt
repz
jmp
in
mov
loopne
pusha
hlt
repz
jmp
in
sub
jge
hlt
repz
jmp
in
nop
call
mov
jl
loopne
pusha
add
jge
call
in
in
dec
fucomi
jno
in
push
sub
int3
ja
les
jne
mov
jno
hlt
les
or
sub
pusha
or
sub
pusha
loopne
ja
int3
mov
jl
loopne
nop
in
jg
jmp
in
nop
cmc
int3
jg
or
sub
pusha
sbb
sub
pusha
int3
mov
jl
loopne
nop
les
in
sub
jg
jmp
in
nop
in
jg
jmp
in
nop
hlt
int3
jg
sbb
sub
pusha
in
aaa
jl
loopne
or
jg
jmp
in
mov
repz
jmp
in
mov
jmp
in
mov
int3
jg
cmp
sub
pusha
in
aaa
jl
loopne
and
mov
in
jecxz
ins
loopne
pop
fs
loopne
je
mov
jb
mov
loopne
fs
loop
pop
call
adc
call
jb
dec
call
cld
jne
jp
jb
call
xor
call
loopne
push
mov
jl
loopne
mov
cli
jb
inc
call
jb
ins
call
mov
jl
loopne
nop
les
popa
ins
call
jb
inc
call
jb
dec
call
jb
ins
call
loopne
and
jge
loopne
mov
jg
loopne
nop
les
in
nop
les
popa
ins
call
arpl
call
loopne
dec
in
push
jle
call
jb
jl
loopne
arpl
loopne
pusha
sti
jb
jl
loopne
arpl
loopne
pusha
sti
jb
jl
loopne
arpl
loopne
pusha
sti
jb
jl
loopne
arpl
loopne
pusha
cmp
inc
call
loopne
cwde
in
jl
in
push
mov
in
cmps
ins
les
dec
push
in
push
mov
int3
xor
add
jg
jmp
in
and
jle
les
lea
jb
inc
call
jb
ins
call
xor
and
jg
jmp
in
nop
les
jge
cmp
inc
call
jb
dec
call
jb
fs
jb
ins
call
xor
jl
loopne
nop
les
jge
cmp
ins
call
jb
inc
call
jb
pushf
call
jb
ins
call
xor
jmp
in
mov
cmp
cmp
ins
call
sub
cmp
clc
jge
jmp
jno
in
jnp
lock
bound
loopne
jo
clc
jns
jmp
pusha
sbb
ins
repnz
cld
jge
jp
push
mov
call
push
mov
hlt
les
cmp
lods
repnz
add
call
jb
dec
call
push
jp
pop
jb
sar
adc
call
jb
dec
call
cld
jne
jp
jb
call
adc
call
xor
call
and
call
loopne
jb
cmp
ins
xor
cmps
push
call
jb
dec
call
cld
jne
jp
jb
call
out
jb
in
jle
call
arpl
call
and
call
int3
jge
jp
bound
loopne
pusha
call
add
call
int3
jge
jp
bound
loopne
pusha
call
loopne
xchg
call
loopne
mov
in
sub
push
push
call
push
sahf
in
sub
push
call
jb
dec
call
adc
push
cld
jne
jp
pop
xchg
call
adc
call
jb
dec
call
jb
ins
call
cld
jne
jp
pop
xchg
call
add
call
adc
call
adc
call
jb
dec
call
cld
jne
jp
jb
call
xor
call
and
pusha
jp
jb
call
jb
dec
call
cld
jne
jp
jb
call
loopne
imul
in
arpl
push
popa
ins
aam
jg
call
or
sbb
in
repnz
call
bnd
jmp
in
nop
hlt
int3
jg
sbb
(bad)
repnz
jg
in
cmp
or
jg
jmp
in
mov
jmp
jp
push
xchg
call
les
repnz
sbb
int
enter
jp
push
xchg
call
in
push
sahf
or
(bad)
repnz
les
sbb
(bad)
repnz
int3
jg
cmp
(bad)
repnz
in
jge
sub
(bad)
repnz
add
call
push
jno
ja
jne
jp
jp
call
adc
call
in
push
sahf
or
(bad)
repnz
pusha
out
loopne
jecxz
iret
jl
dec
int3
sub
dec
lock
push
adc
inc
lods
shl
pushf
and
jge
jmp
sub
lods
inc
pusha
cmc
std
mov
cld
jns
cld
popa
in
jne
jns
int3
fld
adc
lods
and
cmp
cld
ror
push
aam
loop
popa
dec
mov
and
sbb
js
clc
sub
scas
xor
aas
mov
sahf
mov
xchg
gs
lock
lea
xor
cmps
scas
xor
call
scas
jg
cmps
xor
jmp
aaa
cmp
mov
xor
cmps
scas
xor
dec
loope
cs
mov
and
loope
mov
cmps
scas
xor
mov
mul
lock
mov
loopne
popa
adc
jne
lock
mov
mul
lock
mov
loopne
pusha
mov
mul
lock
mov
mul
lock
mov
lock
adc
jge
lock
mov
aaa
gs
lock
mov
mul
lock
mov
loopne
jo
or
popa
lock
mov
lock
adc
jge
lock
mov
mul
lock
mov
mov
popf
jmp
clc
push
fs
sbb
pusha
add
test
inc
pop
jmp
clc
test
(bad)
push
jge
jmp
clc
push
pusha
aas
mov
pushf
jmp
clc
push
fs
sbb
fs
test
test
clc
push
enter
pop
cmps
scas
xor
cmps
scas
xor
or
scas
jg
cmps
scas
xor
push
xor
movs
scas
addr16
cmps
scas
xor
cmps
scas
xor
dec
scas
arpl
cmps
scas
xor
(bad)
cld
xor
hlt
cdq
js
add
gs
lock
mov
loopne
popa
movs
scas
jg
cmps
scas
xor
cmps
scas
xor
adc
popa
ja
loopne
popa
movs
scas
jg
cmps
scas
xor
cmps
scas
xor
mov
gs
cmps
scas
xor
cmps
scas
xor
push
scas
addr16
cmps
scas
xor
into
xchg
xor
lock
mov
scas
xor
(bad)
and
cs
test
push
cmps
scas
jg
cmps
scas
xor
daa
jmp
mov
movs
scas
addr16
cmps
scas
xor
mov
popaw
out
outs
dec
cmps
scas
xor
out
xor
out
add
lods
jg
cmps
scas
xor
cmps
scas
xor
shl
mov
lods
aas
dec
cmps
scas
xor
out
xor
dec
jb
out
iret
dec
cmps
scas
xor
cmps
scas
xor
out
xor
cmps
scas
xor
push
adc
dec
jmp
scas
xor
cmps
scas
xor
cmps
into
xor
cmps
scas
pop
das
cmps
xor
aas
adc
sahf
jmp
clc
push
push
jmp
out
jno
cmps
scas
xor
cmps
scas
xor
cmps
scas
xor
sti
sub
outs
shr
and
loopne
cs
inc
je
fnstsw
int3
mov
cs
mov
fnsave
cs
mov
(bad)
movs
scas
jg
cmps
scas
xor
(bad)
jmp
cmps
scas
xor
call
scas
jg
cmps
scas
xor
cmps
scas
xor
addr16
mov
aad
jg
mov
loopne
push
cmps
scas
xor
cmps
scas
xor
mov
inc
mov
lock
mov
mov
(bad)
das
cmps
scas
xor
out
xor
pusha
jo
call
scas
addr16
cmps
scas
xor
cmps
scas
xor
les
cs
bound
scas
sbb
scas
xor
out
xor
out
rep
ins
jmp
jns
cmp
jle
add
clc
jb
scas
jg
cmps
scas
xor
cmps
push
xor
call
scas
xor
cmps
scas
xor
aaa
das
mov
add
lock
cmps
scas
jg
cmps
scas
xor
dec
jg
out
adc
add
js
cmps
test
mov
cmps
scas
jg
cmps
scas
xor
xor
ins
add
sub
scas
jg
cmps
(bad)
xor
cmps
scas
daa
xchg
cmps
scas
xor
out
xor
out
out
jne
out
loopne
(bad)
loopne
jge
in
loopne
push
aad
jg
dec
xor
call
scas
xor
cmps
scas
xor
xor
ins
cmp
xchg
dec
retf
dec
jb
add
dec
ins
in
stos
jne
in
imul
mov
and
mov
scas
xor
cmp
cs
cdq
cmp
loopne
data16
scas
jg
cmps
scas
xor
cmps
scas
xor
xchg
xor
in
bound
jecxz
fs
loopne
mov
xor
out
xor
lds
push
cmp
mov
xor
(bad)
xchg
mov
lock
mov
scas
xor
ss
xor
push
loopne
dec
jmp
scas
xor
cmps
scas
xor
cmps
xor
call
lods
sbb
scas
xor
cmps
scas
xor
call
cli
bound
jecxz
fs
loopne
mov
xor
add
add
scas
xor
enter
nop
lds
cmps
scas
daa
sub
out
xor
in
jb
retf
loop
les
in
jge
sbb
lods
jno
int
lea
mov
cmps
scas
jg
cmps
scas
xor
imul
lds
xor
scas
xor
into
xor
cmps
scas
xor
cmps
scas
xor
out
xor
out
imul
mov
jbe
dec
popaw
cld
xor
lock
nop
lds
mov
sub
cs
cmps
scas
xor
cmps
scas
xor
cmps
scas
xor
lds
popa
stc
cmps
scas
xor
cmps
scas
xor
lods
out
cmps
scas
xor
out
xor
in
jae
add
push
ins
cld
mov
pop
pop
mov
(bad)
and
jmp
clc
dec
mov
mov
loopne
pusha
cmps
scas
xor
cmps
scas
xor
out
mov
jl
loopne
js
lods
jg
cmps
scas
xor
cmps
scas
xor
int3
arpl
scas
(bad)
loopne
fbld
scas
xor
repz
jp
scas
xor
cmps
scas
xor
cmps
scas
xor
in
mov
fstp
scas
jg
cmps
scas
xor
cmps
scas
xor
repz
jp
scas
xor
cmps
scas
xor
in
in
data16
xor
popf
jmp
sub
xor
and
push
cmps
scas
jg
cmps
scas
xor
cmps
scas
xor
mov
loopne
pusha
cmps
scas
xor
cmps
scas
xor
cmps
scas
xor
iret
mov
scas
lock
lea
scas
xor
inc
scas
xor
pop
mov
sub
lods
jg
cmps
scas
xor
cmps
scas
xor
daa
pop
xor
jge
jg
add
scas
jg
cmps
scas
xor
cmps
(bad)
xor
add
loopne
pusha
cmps
scas
jg
cmps
scas
xor
cmps
fidiv
cs
mov
(bad)
movs
scas
jg
cmps
scas
xor
ss
xor
jmp
push
and
jecxz
test
push
cmps
scas
jg
cmps
scas
xor
cmps
scas
xor
daa
jmp
mov
movs
scas
addr16
cmps
scas
xor
cmps
scas
xor
scas
fnsave
lods
dec
jnp
imul
scas
xor
in
or
dec
push
fistp
loopne
mov
(bad)
movs
scas
jg
cmps
scas
xor
cmps
scas
xor
fbstp
mov
jae
xor
mov
loopne
dec
jmp
scas
xor
cmps
scas
xor
cmps
dec
xor
push
lock
dec
jmp
scas
xor
cmps
into
xor
cmps
scas
outs
cwde
cmps
scas
xor
stos
dec
xor
pop
mov
jg
cmps
scas
xor
inc
in
popa
mov
frstor
cmps
scas
xor
jmp
mov
jg
cmps
scas
xor
les
cs
in
aad
mov
fst
scas
jg
cmps
scas
xor
cmps
scas
xor
add
loope
lea
test
xlat
hlt
xchg
dec
pop
pop
dec
pushf
enter
call
loopne
jle
lods
jge
movs
scas
mov
cmps
scas
xor
cmps
scas
xor
stos
dec
xor
div
jg
cmps
scas
xor
inc
loope
cs
cmp
gs
scas
xor
cmps
dec
xor
stc
inc
jle
call
scas
xor
cmps
scas
xor
cmps
scas
xor
inc
icebp
aad
mov
scas
jg
cmps
scas
xor
cmps
dec
xor
loope
jle
call
scas
xor
cmps
scas
xor
push
aaa
xor
loope
dec
enter
xor
cmps
scas
xor
test
pushf
bound
scas
xor
cmps
out
xor
sub
push
and
scas
jg
cmps
dec
xor
icebp
inc
jle
call
scas
xor
inc
loope
cs
jnp
ins
call
scas
xor
cmps
inc
xor
call
or
gs
loope
imul
mov
loopne
pusha
cmps
scas
xor
ss
xor
repz
jae
add
scas
jg
cmps
scas
xor
cmps
scas
xor
int3
cmps
xor
cmps
scas
push
das
cmps
scas
xor
mov
loopne
pusha
cmps
scas
xor
ss
xor
movs
scas
pop
cmp
xor
mov
in
inc
cmps
scas
xor
cmps
scas
xor
aam
rcr
cmps
scas
push
dec
cmps
scas
xor
cmps
scas
xor
cmps
jecxz
cs
sahf
mov
call
scas
xor
cmps
scas
xor
daa
jmp
mov
cmps
scas
xor
(bad)
in
xor
in
gs
loope
lea
mov
inc
cmps
scas
pop
sub
scas
xor
cmps
xor
lds
jge
lock
lea
scas
xor
test
push
mov
scas
addr16
cmps
scas
xor
cmps
scas
xor
out
jb
push
imul
movs
scas
push
jp
scas
xor
cmps
scas
xor
(bad)
call
cmps
scas
xor
cmps
adc
cs
and
mov
enter
scas
push
das
cmps
scas
xor
push
jecxz
ins
outs
in
stos
inc
in
jbe
cld
shr
or
lea
cmps
scas
xor
cmps
out
xor
sub
push
and
scas
jg
cmps
scas
xor
cmps
scas
xor
jmp
scas
popa
shl
cmps
scas
xor
push
aaa
xor
lock
mov
ss
lock
lea
scas
xor
cmps
scas
xor
movs
scas
push
jp
scas
xor
in
lods
push
sbb
scas
xor
sbb
xor
movs
dec
test
pop
lods
pop
shl
cmps
scas
xor
movs
dec
shl
inc
lods
inc
shl
outs
in
xor
in
data16
mov
mov
xor
js
dec
mov
(bad)
lods
push
shl
cs
int
jno
loopne
xchg
cmps
scas
jg
cmps
scas
xor
cmps
inc
xor
call
scas
xor
push
aaa
xor
fld
enter
sub
scas
xor
cmps
scas
xor
cmps
scas
xor
dec
sbb
sub
cmps
scas
xor
jmp
stos
dec
shl
cs
xor
jmp
scas
xor
cmps
out
xor
sub
push
and
scas
jg
cmps
scas
xor
cmps
scas
xor
jmp
stos
shl
cmps
scas
xor
adc
shl
loope
(bad)
enter
in
gs
push
pop
push
ret
xchg
add
cmps
scas
xor
repnz
xor
cmps
scas
jnp
cmps
scas
xor
cmps
cli
xor
in
addr16
mov
push
xor
lock
mov
outs
mov
mov
scas
xor
cmps
scas
xor
push
xor
popa
jmp
pusha
cmps
scas
xor
cmps
scas
xor
inc
lahf
xor
add
clc
adc
xor
sahf
pusha
ss
jmp
scas
xor
cmps
scas
xor
daa
xor
sbb
cmps
scas
xor
daa
mov
add
or
mov
push
cmp
cld
xchg
js
loopne
cmps
scas
jg
cmps
xor
cs
dec
ins
add
loope
mov
stos
pop
jmp
scas
xor
cmps
scas
xor
int3
rdtsc
scas
add
dec
shl
dec
jle
xor
jl
(bad)
ss
lock
mov
push
xor
lock
test
scas
xor
movs
scas
pop
call
xor
add
push
pushf
jmp
or
movs
scas
addr16
cmps
scas
xor
cmps
scas
xor
hlt
add
addr16
cmps
scas
xor
cmps
scas
xor
(bad)
cmp
cs
pop
inc
jmp
scas
xor
and
cld
sbb
fs
js
loope
mov
les
fmul
mov
scas
addr16
cmps
scas
xor
cmps
scas
xor
jmp
mov
rol
inc
push
test
jp
in
xchg
jle
dec
aaa
aam
call
scas
xor
cmps
scas
xor
cmps
dec
xor
arpl
jge
movs
scas
jg
cmps
scas
xor
or
scas
jg
cmps
scas
xor
jmp
xor
scas
xor
cmps
scas
xor
out
xor
lock
test
int3
push
js
or
movs
scas
addr16
cmps
scas
xor
cmps
scas
xor
(bad)
push
xor
lock
test
cli
xor
adc
cmps
push
xor
add
dec
loopne
pusha
jle
jmp
rep
jne
inc
sub
jge
cmps
scas
jg
cmps
scas
xor
cmps
scas
xor
call
xor
loopne
js
lods
jg
cmps
scas
xor
cmps
scas
xor
cmps
xor
lock
mov
scas
xor
les
cmps
scas
push
add
scas
xor
retf
int3
jae
cmps
scas
adc
scas
xor
cmps
scas
xor
push
add
outs
jmp
imul
mov
loopne
pusha
cmps
scas
xor
cmps
scas
xor
add
rcr
lock
mov
mov
lock
mov
mov
sbb
ja
mul
lock
mov
loopne
pusha
cmps
scas
xor
cmps
scas
xor
cmps
scas
xor
cwde
or
push
cmp
gs
mov
xor
cmps
scas
xor
cmps
into
xor
cmps
scas
adc
scas
xor
cmps
scas
xor
push
xor
movs
scas
addr16
cmps
scas
xor
jmp
outs
movs
scas
pop
add
lods
sti
dec
cmps
scas
xor
cmps
scas
xor
cmps
out
xor
in
ds
out
outs
int3
int3
mov
jae
scas
xor
cmps
scas
xor
cmps
scas
xor
retf
in
bound
xchg
push
aam
addr16
pop
pop
(bad)
pushf
test
push
mov
scas
addr16
cmps
scas
xor
cmps
scas
xor
les
cs
jl
adc
pop
pusha
mul
inc
je
cmp
pusha
sar
cmps
scas
xor
cmps
scas
xor
(bad)
out
xor
cmps
scas
xor
cmps
scas
xor
push
ret
call
scas
xor
cmps
scas
xor
addr16
xor
stos
lods
jg
cmps
scas
xor
add
xor
call
shr
cmp
sub
out
push
ins
cmps
scas
xor
cmps
scas
xor
call
scas
jg
cmps
scas
xor
cmps
xor
cld
xor
jmp
scas
pop
sub
scas
xor
cmps
mov
cs
ror
sub
repnz
outs
push
sar
call
pop
push
fdivrp
or
fwait
js
scas
xor
cmps
scas
xor
cmps
dec
xor
or
adc
cmps
scas
xor
cmps
scas
xor
cmps
scas
xor
je
popa
ja
mul
aam
xchg
bound
je
hlt
gs
lock
xchg
or
popa
pop
outs
jmp
lock
xchg
cmp
ret
adc
adc
sbb
(bad)
mov
jmp
fwait
lods
loopne
mov
mov
fcomp
cwde
mov
cwde
push
ins
call
movs
pushf
cmps
out
mov
add
and
and
mov
push
rcr
leave
mov
clc
pop
in
and
call
aad
ds
mov
ror
shr
test
rol
mov
ror
movs
fs
or
lahf
cmps
call
shr
mov
outs
lock
push
ret
sti
add
cmp
dec
ror
sub
retf
push
and
jge
retf
add
in
movs
test
dec
pop
daa
jl
out
clc
push
lods
ds
pop
mov
sub
or
inc
sub
push
ins
xor
mov
outs
pusha
fnsave
sbb
test
loopne
scas
ds
inc
pop
cdq
adc
add
movs
inc
sub
add
(bad)
inc
sbb
shl
pop
ret
scas
ds
ret
lds
add
adc
das
jmp
mov
cs
jnp
sbb
sub
ret
inc
ins
loopne
mov
dec
stos
cld
dec
sbb
mov
cs
inc
push
imul
push
or
fnstenv
adc
add
mov
(bad)
push
mov
cmp
add
scas
aas
push
(bad)
mov
scas
(bad)
push
inc
loopne
je
loop
(bad)
jecxz
sub
cdq
loopne
jb
mov
xor
loopne
jno
push
dec
inc
cmps
mov
stos
scas
js
and
pop
test
push
jmp
fwait
lods
loopne
mov
push
stos
jle
movs
outs
shl
mov
mov
sub
addr16
xor
mov
push
shl
and
cmp
shl
retf
(bad)
cld
xor
aad
inc
mov
mov
or
shr
test
dec
add
mov
out
test
ret
test
push
int
movs
outs
cmc
or
jmp
add
outs
aam
push
lds
(bad)
out
out
movs
push
ror
je
out
dec
std
push
dec
mov
sub
loop
ins
loopne
clc
lahf
push
pop
mov
and
pop
(bad)
mov
ss
pop
add
in
movs
fsubr
clc
loopne
inc
retf
dec
std
scas
or
jbe
sub
or
ins
mov
ror
je
in
dec
std
(bad)
mov
inc
hlt
lahf
lock
std
out
pop
and
add
sub
push
aaa
pop
addr16
cmps
xor
cld
pop
sub
outs
inc
lods
into
adc
jecxz
mov
into
icebp
out
cmc
or
(bad)
retf
popa
cmp
add
adc
cs
sub
adc
stos
push
push
add
inc
rcr
push
cmp
lods
ds
mov
cmp
adc
push
xlat
dec
dec
shl
test
ds
pop
call
push
dec
je
cld
fsubr
jmp
inc
jmp
aad
outs
fnstsw
inc
dec
dec
out
pop
dec
cs
scas
and
pushf
movs
sar
test
mov
inc
sub
out
out
mov
inc
lods
mov
or
or
dec
jle
loop
mov
arpl
inc
dec
mov
mov
std
ins
sbb
mov
mov
jae
mov
test
xor
adc
out
rcr
sahf
jecxz
movs
outs
shl
movs
push
rcl
push
fild
mov
(bad)
or
push
sbb
or
lfs
xor
sub
sahf
and
movs
mov
sbb
or
dec
mov
or
or
jno
ret
shl
inc
int
add
sub
sbb
mov
cmp
stos
dec
sar
ds
xor
stos
arpl
movs
push
sub
push
sub
dec
lds
and
lock
dec
std
xchg
push
dec
fld
jecxz
mov
outs
test
lods
ds
inc
mov
outs
lock
sar
jmp
inc
das
push
ins
in
movs
lock
inc
movs
aaa
test
rcr
adc
xor
leave
dec
std
push
mov
push
adc
inc
dec
pop
cs
sub
sub
push
inc
daa
push
sub
movs
or
pushf
mov
ds
out
cmc
dec
adc
push
xor
in
lods
ds
pop
mov
outs
js
loopne
mov
inc
lods
push
push
loope
cmp
add
cs
mov
jg
dec
mov
pop
xor
in
daa
pop
hlt
jecxz
push
xchg
xchg
and
rol
push
cmp
mul
daa
push
hlt
jecxz
push
aad
and
rol
adc
xor
in
jbe
jecxz
push
mov
les
jmp
pop
xor
clc
and
hlt
jecxz
push
cmp
and
rol
cmc
sub
in
pop
xor
cld
and
hlt
jecxz
push
sbb
and
rol
shr
sti
in
daa
pop
hlt
jecxz
ss
nop
and
repz
cmp
mul
daa
push
hlt
jecxz
xlat
shl
sub
in
xor
in
daa
xor
in
jbe
jecxz
ss
in
xor
out
clc
and
hlt
jecxz
cmp
and
repz
sub
in
daa
xor
cld
and
hlt
jecxz
sbb
and
repz
sub
sti
in
daa
pop
hlt
jecxz
mov
nop
and
jae
push
cmp
mul
daa
push
hlt
jecxz
mov
shl
sub
pop
xor
in
cmps
xor
in
jbe
jecxz
mov
mov
sub
ja
jmp
cmps
xor
clc
and
hlt
jecxz
mov
and
ss
imul
jmp
cmps
xor
cld
and
hlt
jecxz
mov
add
ss
shr
sti
in
daa
pop
hlt
jecxz
push
xchg
nop
and
rol
push
cmp
mul
daa
push
hlt
jecxz
push
xlat
shl
sub
les
xor
in
pop
xor
in
jbe
jecxz
push
mov
les
jmp
pop
xor
clc
and
hlt
jecxz
push
cmp
and
rol
imul
jmp
pop
xor
cld
and
hlt
jecxz
push
sbb
and
rol
shr
sti
in
daa
pop
hlt
jecxz
xchg
xchg
nop
and
push
inc
push
cmp
mul
daa
push
hlt
jecxz
xchg
xlat
shl
sub
pop
xor
in
xchg
repz
jbe
jecxz
xchg
mov
inc
ja
jmp
xchg
out
clc
and
hlt
jecxz
xchg
cmp
and
push
inc
imul
jmp
xchg
jmp
and
hlt
jecxz
xchg
sbb
and
push
inc
shr
sti
in
daa
pop
hlt
jecxz
not
and
cmp
mul
daa
push
hlt
jecxz
not
shl
sub
and
xor
in
out
repz
jbe
jecxz
idiv
and
xor
out
clc
and
hlt
jecxz
idiv
and
xor
sub
in
out
jmp
and
hlt
jecxz
neg
add
xor
sub
sti
in
daa
pop
hlt
jecxz
es
xchg
and
jecxz
push
cmp
mul
daa
push
hlt
jecxz
es
and
jecxz
adc
xor
in
jbe
jecxz
es
hlt
jne
jmp
aaa
xor
clc
and
hlt
jecxz
cmp
and
jecxz
cmc
sub
in
aaa
xor
cld
and
hlt
jecxz
sbb
and
jecxz
shr
sti
test
int3
sub
test
shr
int
cmp
test
aam
jmp
int
cmp
sub
call
(bad)
jmp
jp
loop
(bad)
clc
push
xor
mov
test
sub
jmp
push
call
(bad)
jmp
jp
outs
cmp
clc
push
xor
mov
test
sub
out
sub
call
(bad)
jmp
jp
(bad)
cmp
clc
push
xor
mov
test
sub
repz
call
(bad)
jmp
jp
(bad)
cmp
clc
push
xor
mov
test
sub
imul
push
call
(bad)
jmp
jp
push
cmp
clc
push
xor
mov
test
sub
sti
sub
call
(bad)
jmp
jp
and
clc
push
xor
mov
test
sub
jmp
push
call
imul
jo
lods
xor
in
mov
je
mov
pop
cld
sar
pusha
out
test
repz
pop
out
xor
imul
inc
out
xchg
sub
repz
lock
sub
pop
in
mov
hlt
out
xor
pop
cld
sar
loopne
add
pop
loopne
mov
fsubr
add
repz
(bad)
out
adc
pop
in
fistp
cli
in
cmp
cli
cld
fbld
cli
in
fbld
cli
in
sbb
cli
cld
fild
cli
in
fild
mov
and
and
pusha
xor
out
cld
fbld
jecxz
out
xchg
into
and
dec
xor
sbb
xor
clc
fist
jecxz
out
xchg
and
and
pop
cmp
mul
fistp
xlat
shl
into
rcl
sub
cmovs
call
aam
es
dec
(bad)
jmp
aas
and
icebp
sub
jmp
je
(bad)
pop
movs
rol
icebp
sub
jp
iret
adc
movs
jne
mov
push
std
dec
mov
push
pop
out
or
popa
enter
add
or
push
ror
data16
mov
es
xchg
or
shr
mov
push
ins
aad
jge
ds
push
ror
shr
test
xor
sbb
pop
push
mov
adc
test
push
ror
hlt
shr
test
ror
xor
test
(bad)
int3
jnp
ds
pop
pop
ret
add
sbb
mov
(bad)
add
cmp
data16
push
shr
mov
pop
inc
mov
outs
jl
cmp
inc
int
mov
lods
ds
dec
ins
adc
rcl
leave
dec
add
hlt
rcr
stos
dec
(bad)
inc
xlat
dec
rcr
shr
xchg
fld
mov
push
inc
sub
add
stc
das
xor
pop
daa
inc
jmp
push
sub
xchg
pop
mov
outs
push
mov
dec
xor
jmp
cwde
cmc
dec
cmc
xor
pop
lods
adc
aaa
push
fist
loop
lock
jle
std
ret
je
loopne
std
xchg
cmp
into
jmp
jns
xor
push
js
add
out
sub
mov
push
js
push
js
fsubr
cmp
and
das
sbb
into
ss
push
js
call
mov
retf
cmp
cmp
fs
inc
into
xor
push
js
push
js
jle
jns
push
ror
or
cs
push
js
push
js
mov
jae
cmp
xor
and
sbb
sbb
cld
xlat
dec
daa
fmul
ds
lock
ss
lds
fidivr
sub
in
push
cmp
cmp
jmp
sub
cmp
cmp
and
into
sbb
or
xlat
jmp
stc
adc
xor
push
jns
or
cli
adc
sub
push
js
push
js
push
js
and
cmp
cmp
cmp
imul
push
cmp
jp
cmp
int
xchg
loopne
or
cmp
mov
push
loopne
sbb
xor
xchg
dec
pop
sub
pop
pop
xchg
scas
and
rcl
aaa
jmp
shl
je
shl
ret
(bad)
hlt
push
fiadd
adc
and
and
push
or
dec
xchg
xor
ror
sub
mov
jmp
mov
cmp
mov
jnp
ror
sub
inc
jmp
mov
outs
adc
retf
push
int
movs
mov
mov
loop
push
(bad)
pop
inc
int
mov
lods
outs
je
mov
jae
cld
mov
add
pop
(bad)
cmp
movs
dec
add
dec
sub
jmp
mov
add
dec
std
movs
pop
inc
sub
pop
test
(bad)
call
ret
adc
cmps
mov
add
mov
sub
outs
pop
add
cmps
sbb
mov
and
adc
imul
stos
outs
push
push
mov
outs
aam
je
es
(bad)
fidiv
es
cdq
add
push
ins
ins
loope
cmp
jle
cli
adc
stos
(bad)
xchg
aad
mov
and
xchg
mov
or
sub
aas
jne
add
jns
add
pushf
div
out
jg
bnd
(bad)
sbb
jno
ds
xor
jmp
fbld
movs
sbb
ret
ja
jl
add
mov
aad
or
and
xor
out
(bad)
pop
fnstcw
ds
xchg
mov
ds
xchg
mov
imul
mov
aaa
imul
push
out
push
ret
repnz
js
and
shl
add
jg
scas
and
sbb
jmp
in
lock
xchg
outs
mov
push
std
das
pop
push
sar
inc
or
in
push
inc
and
outs
push
sets
xor
retf
jmp
icebp
pop
loope
push
(bad)
cs
es
pop
push
sbb
cmpxchg
and
sbb
aaa
and
push
rcr
dec
sub
mov
addr16
jae
cs
dec
(bad)
out
movs
push
xor
mov
test
movs
mov
data16
and
shr
enter
sub
addr16
pop
sar
cmc
or
outs
dec
pushf
jmp
call
repnz
xor
dec
mov
outs
dec
div
sbb
lods
outs
fsubr
mov
cs
add
cmp
bound
and
lods
adc
dec
inc
xchg
push
sub
movs
retf
and
nop
mov
push
fstp
cmp
add
scas
adc
sub
movs
cli
xor
cmp
inc
repz
adc
jecxz
std
push
push
push
push
hlt
loopne
mov
jl
push
sub
mov
sub
add
cmp
dec
mov
adc
sub
push
dec
(bad)
pop
dec
dec
sar
push
cmovo
das
in
mov
and
jnp
data16
pop
fwait
mov
lock
and
add
popf
add
push
pusha
shl
add
and
(bad)
xchg
shl
add
icebp
add
shl
add
shl
add
or
xchg
mov
and
add
and
add
jae
mov
and
add
and
add
push
push
jae
(bad)
mov
and
add
lds
sbb
and
add
popf
pusha
mov
jae
pop
ja
(bad)
mov
and
and
jae
pusha
dec
pop
int3
pushf
call
ret
add
pop
jp
mov
hlt
xchg
shl
add
inc
add
and
add
daa
jmp
int
ret
ins
sahf
mov
jo
in
and
add
outs
adc
int
ret
in
sahf
mov
jo
ins
shl
add
and
adc
and
and
and
add
daa
jmp
jp
sub
jg
sbb
(bad)
xchg
shl
add
jo
mov
shl
pusha
ja
jae
pop
sti
es
mov
and
add
data16
jae
pusha
dec
push
int3
sbb
add
and
pusha
dec
xchg
push
out
(bad)
mov
and
add
lds
sbb
sbb
shl
add
addr16
mov
mov
shl
add
jo
ret
retf
and
add
addr16
push
cmp
test
xchg
call
ret
add
push
push
shl
test
and
and
jae
pusha
dec
pop
int3
test
and
add
xchg
mov
hlt
xchg
shl
add
and
jae
pusha
dec
sub
pushf
xchg
xor
xchg
shl
add
xor
ret
sar
aad
test
xchg
shl
add
int
ret
cld
cmp
sbb
shl
add
daa
(bad)
mov
and
adc
popf
int
mov
imul
daa
(bad)
xchg
shl
add
jno
ret
(bad)
mov
and
add
gs
jae
pusha
dec
pop
int3
mov
and
add
xchg
mov
cld
xchg
shl
add
xchg
sbb
and
add
and
pusha
inc
xchg
push
inc
daa
(bad)
test
and
add
lds
sbb
sbb
shl
add
daa
loop
shl
add
data16
dec
int3
or
iret
mov
and
add
and
(bad)
xchg
shl
add
outs
adc
and
add
xchg
xchg
xchg
mov
and
add
call
sar
aad
test
xchg
shl
add
lds
sbb
and
add
and
pusha
aaa
xchg
push
xchg
test
and
add
lds
sbb
sbb
shl
loop
shl
sub
dec
int3
cmp
cld
cdq
shl
add
daa
(bad)
xchg
shl
add
outs
adc
and
adc
and
add
pop
and
and
out
xchg
lahf
imul
sar
sbb
shl
add
daa
(bad)
mov
and
add
and
add
and
jmp
lahf
imul
pop
sar
sbb
and
add
and
adc
and
add
bound
ret
add
data16
imul
dec
int3
or
iret
mov
and
add
and
add
jno
ret
(bad)
mov
and
add
gs
jae
pusha
dec
pop
int3
mov
and
add
xchg
mov
hlt
xchg
shl
add
data16
jae
pusha
dec
and
adc
add
and
add
popf
pusha
aaa
xchg
push
xchg
(bad)
test
and
and
jae
pusha
dec
sub
cwde
xchg
ja
xchg
shl
add
and
loop
shl
sub
push
lea
sti
or
xchg
add
in
cwde
aas
movs
(bad)
lea
sub
push
add
cmp
adc
jno
fwait
lods
movs
cmc
outs
mov
push
std
addr16
push
sar
inc
imul
lds
cmp
dec
push
psubusb
cmp
jle
bound
(bad)
in
push
shl
cwde
jle
mov
out
ret
in
jmp
mov
xor
jecxz
mov
mov
test
pop
daa
inc
scas
cmps
ins
call
xor
sahf
cmc
movs
push
int
movs
mov
cmp
ss
sar
pop
daa
inc
fld
std
push
arpl
inc
pop
push
xor
lock
std
jbe
dec
mov
outs
sbb
jp
push
imul
jge
or
pop
cs
(bad)
sbb
ror
xchg
daa
in
or
fwait
cmps
dec
sub
fistp
outs
inc
fwait
hlt
shl
stos
xor
add
mov
adc
test
xor
sub
xchg
mov
mov
mov
pop
add
inc
dec
outs
mov
aas
add
lods
outs
adc
ror
fidivr
addr16
mov
cmp
add
adc
sub
pop
in
dec
push
outs
cwde
outs
sbb
popw
sub
xchg
or
adc
inc
addr16
adc
loop
adc
loop
jo
loopne
inc
addr16
xchg
adc
loop
inc
jns
xor
sub
xor
sub
xor
inc
loop
adc
shl
adc
loop
dec
ss
pop
push
addr16
mov
imul
int3
jle
int
imul
adc
jbe
imul
jmp
xchg
aad
ds
adc
out
jae
rep
in
mov
push
std
arpl
push
sar
inc
jne
or
movs
jg
and
mov
mov
bound
push
rcr
test
add
sub
pushf
pop
inc
sub
push
mov
sub
pop
adc
aad
leave
mov
fcom
stos
mov
daa
push
sub
mov
(bad)
jmp
lods
ds
cdq
ret
adc
mov
ficom
fbstp
push
dec
sub
movs
pushf
sub
sbb
dec
std
loop
pop
xor
stos
push
push
xor
ror
jecxz
jp
data16
adc
cmps
dec
loope
das
sub
inc
sti
mov
sar
retf
inc
fistp
mov
mov
mov
in
or
push
and
jnp
cmps
test
or
dec
std
jmp
je
cmovae
into
rol
stos
dec
mov
data16
pop
lods
ds
pop
lods
ds
fisttp
ror
inc
jo
lock
std
dec
xchg
pop
jb
add
mov
repz
mov
outs
les
or
dec
cmc
sahf
addr16
lods
into
adc
loop
pop
aad
adc
inc
cmp
inc
mov
jmp
push
stos
(bad)
mov
or
xor
sub
test
or
push
pop
(bad)
and
or
xor
es
push
adc
pop
(bad)
push
adc
or
sbb
pusha
xlat
push
adc
or
push
adc
or
pop
dec
stos
sar
jmp
fisubr
lahf
sahf
retf
mov
sbb
dec
pop
enter
jge
jmp
pop
enter
ss
pop
cmps
jns
ds
adc
out
rcr
rol
pop
mov
fcomp
test
adc
call
push
ins
call
pushf
pushf
imul
mov
cmps
xchg
daa
mov
icebp
pop
mov
movs
test
adc
inc
or
or
mov
xchg
sbb
outs
inc
inc
hlt
sar
push
ret
pop
add
inc
in
movs
push
ins
in
movs
inc
int
mov
push
ins
js
pop
ret
or
pop
daa
in
movs
fwait
int
jo
addr16
xor
pop
dec
pop
cmp
cs
or
mov
pop
into
in
or
into
push
cmp
ins
mov
data16
dec
xchg
fldenv
cmp
push
mov
mov
data16
movs
cld
shl
dec
mov
es
push
sar
repz
aaa
(bad)
outs
add
enter
popf
fldcw
lock
adc
repz
mov
idiv
div
inc
xor
sub
cmc
push
push
inc
lods
outs
adc
xor
and
ins
in
movs
mov
or
mov
adc
ins
js
pop
mov
hlt
movs
lods
outs
adc
or
mov
cmp
add
push
mov
cmp
mov
test
mov
test
sti
hlt
mov
cmp
call
cmp
mov
repnz
mov
cmc
lods
lds
add
add
ret
cmc
lods
cmc
mov
push
inc
cmp
add
lods
lods
jno
in
lods
out
(bad)
cmp
(bad)
mov
jmp
in
movs
loopne
pop
stos
repz
push
popa
push
mov
sbb
mov
jmp
sbb
sar
(bad)
shr
movs
and
cmp
leave
imul
push
dec
mov
lods
(bad)
xchg
mov
push
sbb
push
or
movs
fnstenv
mov
push
outs
push
lfs
sbb
or
call
dec
loope
push
mov
daa
clc
sbb
and
or
jle
sub
rol
jno
push
or
outs
dec
call
scas
inc
dec
shl
sar
rcl
std
sbb
mov
mov
mov
outs
lock
mov
es
lods
push
shl
inc
add
or
imul
xor
adc
js
add
mov
pop
stos
std
xchg
sbb
push
out
or
int
out
mov
or
mov
sub
mov
ror
int3
push
out
dec
std
xchg
jo
inc
sub
add
ds
iret
mov
adc
mov
sub
adc
mov
adc
add
cwde
sahf
pop
fild
mov
cld
dec
pop
or
dec
rcr
add
sbb
dec
push
or
dec
jns
dec
mov
jo
pop
jg
add
jg
add
ja
add
outs
jb
sbb
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jmp
mov
ret
retf
mov
mov
xchg
ror
ret
mov
cmps
(bad)
loop
sar
mov
add
retf
mov
into
mov
retf
mov
stos
mov
iret
sar
mov
into
ret
ror
out
stos
add
out
ret
retf
mov
jg
add
jg
add
jnp
add
jg
add
ja
add
jg
add
jae
add
jg
add
outs
jb
sbb
add
imul
jg
add
addr16
sbb
add
arpl
sbb
add
jg
add
cmp
dec
jp
sbb
xor
jb
out
inc
sbb
inc
xor
jno
xchg
test
sbb
(bad)
mov
das
add
push
push
outs
sti
das
add
gs
pop
pop
add
sbb
stos
cli
ja
add
pop
jb
jne
adc
sbb
sub
push
add
sbb
mov
repz
push
jb
lock
add
dec
jb
arpl
add
dec
jb
push
push
into
add
inc
jb
jmp
rol
sbb
sub
pop
add
cmp
mov
sbb
jb
sub
add
xor
jbe
jmp
add
xor
lea
jb
mov
adc
sbb
jb
pop
scas
pop
add
and
ds
out
add
and
fisub
jb
or
sbb
jae
jg
sbb
loope
sbb
jb
mov
push
jb
lock
dec
add
or
mov
add
mov
test
add
mov
cld
jb
jmp
pushf
add
sti
jb
pop
cmp
add
div
sbb
and
dec
fcos
mov
(bad)
mov
jb
sub
in
push
out
rol
loopne
bound
add
fbstp
cmps
xchg
arpl
sbb
jb
adc
add
aam
sahf
js
rol
sbb
jb
add
loopne
sbb
jb
jmp
leave
jb
mov
add
sbb
jb
sbb
shl
cmp
sbb
aad
sbb
xchg
sbb
push
add
mov
jp
fwait
cdq
add
lods
jb
dec
retf
test
sbb
les
sbb
adc
sbb
jge
sbb
inc
add
fwait
jb
repz
and
xor
sbb
dec
add
lea
and
jb
dec
iret
cmp
sbb
out
add
xor
fcmovnbe
add
jge
mov
sbb
xchg
pop
jg
add
jne
(bad)
lea
jae
(bad)
imul
outs
jae
mov
push
clc
add
addr16
push
push
aas
add
bound
xor
jmp
pop
adc
sbb
scas
jne
jecxz
sbb
jge
add
push
jae
scas
fist
sbb
ret
xchg
sbb
xchg
dec
inc
mov
push
xchg
daa
push
add
inc
jae
mov
cmp
imul
jae
in
dec
add
xor
int3
addr16
das
jl
sbb
jae
lea
jae
pop
adc
sbb
jae
leave
aas
retf
add
push
jae
or
jae
sbb
test
sbb
adc
imul
adc
sbb
push
add
(bad)
retf
rol
sbb
jae
cwde
retf
out
add
pop
jae
loop
loop
sbb
jae
pop
cmovae
sbb
jae
sub
add
cli
jae
mov
add
hlt
jae
push
call
add
icebp
jae
adc
push
add
in
jae
add
jmp
push
(bad)
ja
add
out
retf
add
loope
bound
fbstp
mov
add
fnstenv
pop
pop
or
sbb
jae
mov
mov
sbb
jae
clc
mov
add
int3
jae
jp
iret
add
enter
inc
sbb
sbb
jae
int
leave
add
shl
aaa
pushf
add
mov
pop
add
mov
adc
sbb
jmp
jecxz
add
scas
jae
push
mov
add
stos
jae
sar
in
add
movs
jae
xchg
sub
sbb
sbb
sub
cwde
jae
ret
add
xchg
jae
adc
enter
jae
cmps
retf
sbb
sbb
mov
xchg
call
ret
into
add
xor
aas
add
adc
push
add
jns
scas
cmps
fild
(bad)
jne
rol
sbb
inc
movs
repz
add
outs
jo
or
inc
add
push
jb
sbb
dec
aaa
out
cmps
add
popa
jo
in
sub
sbb
xchg
and
pop
jo
not
loopne
sbb
cs
xor
jle
xchg
add
dec
jo
xor
sub
sbb
sbb
mov
add
inc
jo
mov
mov
sbb
jbe
jmp
add
cmp
or
add
cmp
xchg
add
sbb
jo
inc
push
lahf
add
xor
ret
pop
dec
add
sub
test
sbb
jo
cmps
out
add
and
retf
add
and
shl
add
sbb
xor
push
shr
add
push
jo
add
adc
(bad)
sti
stc
add
or
nop
add
or
or
mov
sbb
jo
jae
add
sbb
jo
mov
clc
jo
or
inc
add
hlt
jo
or
push
jb
daa
outs
add
out
jo
mov
jmp
sbb
jo
je
jg
sbb
jo
cmps
pop
inc
add
fidiv
dec
das
cwde
add
fdiv
je
dec
add
xlat
jo
cmps
outs
je
sbb
jo
sub
iret
jo
mov
test
sbb
jo
jnp
adc
ds
push
mov
sahf
cwde
adc
mov
and
scas
cmp
les
sbb
adc
sbb
lock
scas
jo
out
xrelease
sbb
or
mov
sbb
pop
add
pushf
jo
popw
dec
add
cdq
jo
imul
sahf
iret
sbb
add
xchg
jo
sbb
jl
sbb
add
mov
fs
jo
mov
test
push
add
jno
jecxz
iret
add
jns
jbe
out
add
jbe
es
or
sbb
push
xor
cmp
sbb
mov
fstp
add
imul
sbb
mov
sbb
div
xchg
dec
add
pop
jno
mov
pop
jno
inc
adc
repnz
push
push
add
push
jno
pop
jnp
add
dec
jno
and
mov
repnz
sub
lahf
add
inc
jno
mov
aas
jno
imul
sbb
jno
jb
dec
add
ss
test
jno
pop
addr16
sbb
jno
add
add
sub
xchg
outs
mov
sbb
fiadd
int
sbb
jno
retf
add
pop
jno
sbb
push
add
sbb
mov
fild
sbb
mov
sub
sbb
jno
test
xchg
sbb
jno
dec
cmps
push
add
or
pushf
mov
sbb
mov
add
ins
fistp
sbb
jno
or
add
clc
jno
out
and
sbb
jno
sub
test
sbb
jno
mov
in
jno
int
into
add
jmp
sbb
jno
scas
stos
out
add
fdiv
jl
popa
add
aad
push
icebp
push
jns
sbb
jno
jecxz
lods
add
int
pop
xor
mov
sbb
jno
and
retf
add
les
xlat
fadd
sbb
jno
mov
jno
outs
sub
sbb
in
add
mov
push
ins
push
ja
sbb
ret
scas
jno
mov
mov
(bad)
inc
sbb
sbb
inc
sbb
sub
sbb
or
inc
clc
mov
jno
sub
repz
(bad)
jno
pop
sbb
add
mov
in
popa
add
test
add
xor
push
jg
sbb
push
not
stos
add
push
add
sbb
into
xchg
scas
aad
sbb
sahf
inc
push
sub
sbb
cmp
pop
add
pop
jbe
(bad)
out
add
push
jbe
inc
mov
jbe
xchg
retf
adc
sbb
pop
outs
fiadd
sbb
stos
mov
inc
jbe
jb
out
add
inc
jbe
sar
sbb
jbe
adc
cwde
add
cmp
iret
stos
dec
add
xor
call
jbe
movs
sbb
add
sub
dec
jbe
cmp
sub
add
es
jl
add
sbb
jbe
fcmovu
push
add
push
jbe
push
lahf
add
or
sbb
ror
lahf
icebp
add
adc
cld
jmp
add
or
adc
sbb
jbe
ss
xchg
sbb
jbe
in
mov
xchg
push
(bad)
jbe
call
ret
jns
sbb
jbe
xchg
shr
inc
dec
(bad)
test
pop
add
call
add
in
(bad)
mov
jbe
test
xchg
sbb
jbe
jne
inc
add
(bad)
jbe
fisttp
jbe
push
(bad)
jmp
sbb
jbe
dec
mov
jbe
cwde
push
jmp
jb
mov
jbe
popa
out
add
mov
rol
sbb
lods
add
mov
(bad)
cmp
jbe
jmp
sbb
(bad)
out
sbb
xor
sbb
xor
sbb
xor
sbb
add
fwait
jbe
mov
add
xchg
jbe
in
bound
sbb
push
add
mov
mov
aad
sbb
(bad)
add
xor
repz
sbb
push
iret
fwait
xchg
add
jbe
mov
fild
sbb
out
xchg
lds
sbb
mov
aaa
add
imul
xchg
sbb
dec
fidivr
add
bound
xchg
add
pop
ja
stc
sti
mov
(bad)
(bad)
mov
ja
adc
mov
stos
setb
sbb
push
dec
inc
add
dec
ja
xchg
ja
in
out
scas
add
inc
ja
test
ja
push
ja
add
cmp
dec
xor
sahf
cwde
or
sbb
add
sub
into
sbb
sub
pop
iret
loopne
sbb
ja
mov
sbb
pop
add
sbb
test
mov
sbb
cmp
sbb
ja
(bad)
sbb
xchg
call
ja
mov
add
add
mov
ja
sbb
int
sbb
ja
enter
sbb
ja
push
aaa
test
sahf
add
(bad)
lsl
xchg
pop
pop
add
jmp
data16
in
sahf
jnp
mov
sbb
ja
test
pop
add
fnsave
lods
outs
mov
sbb
ja
jg
push
add
aam
jbe
arpl
mov
outs
iret
add
into
ja
int
sbb
sbb
ja
push
daa
pusha
add
(bad)
ja
nop
pop
xlat
add
mov
ret
add
sbb
lds
sbb
adc
sbb
or
adc
popa
add
mov
mov
sbb
les
sbb
pop
add
xchg
ja
jmp
xchg
ja
out
jne
sbb
add
mov
fisubr
push
add
xchg
or
adc
sbb
mov
sbb
loop
daa
fadd
sbb
pop
rcr
add
je
es
sbb
add
jae
jbe
jnp
add
ins
je
(bad)
aas
inc
sbb
mov
data16
mov
add
bound
mov
sbb
cli
cld
xor
sbb
(bad)
sub
add
push
je
sbb
dec
je
mov
dec
je
jbe
mov
pop
add
add
inc
je
rol
add
ds
pop
xchg
loope
sbb
stos
add
and
push
adc
sbb
je
mov
mov
out
push
outs
add
sbb
xchg
add
adc
cmp
sbb
je
push
imul
sbb
shr
or
out
sub
sbb
je
loope
inc
sbb
je
xor
je
in
ins
add
sti
je
aaa
outs
or
sbb
je
stos
jecxz
add
icebp
je
lods
cmps
fwait
add
out
je
jg
mov
repnz
pop
add
in
push
mov
loopne
inc
jae
ret
add
fnsave
imul
sbb
je
jno
add
aad
mov
sbb
je
pop
or
add
into
je
xchg
xchg
mov
sbb
je
xlat
add
(bad)
je
std
pop
rol
sbb
je
sbb
arpl
sbb
sub
sbb
aas
add
mov
mov
inc
add
mov
into
lds
je
jge
movs
add
stos
je
test
movs
je
pop
xchg
adc
(bad)
jmp
sbb
mov
cdq
je
push
ja
add
xchg
je
fs
add
xchg
je
jo
out
sbb
pop
add
mov
pop
iret
add
xchg
fisttp
sbb
clc
add
jl
inc
(bad)
fcmovnbe
add
jns
fcmovu
ret
mov
pop
repnz
sbb
adc
jne
jns
scas
add
push
xchg
push
inc
add
addr16
xor
jne
dec
ror
add
pop
jne
call
pop
jne
fidivr
jne
std
mov
jne
or
cmp
sbb
xchg
adc
add
dec
jne
arpl
inc
jne
mov
rol
sbb
xor
test
sahf
inc
lahf
jg
sbb
jne
cmc
(bad)
fadd
sbb
add
xor
gs
add
sub
xchg
jge
push
add
sub
xor
sbb
pop
add
and
mov
sbb
push
add
sbb
pop
scas
push
add
adc
push
popf
jmp
add
adc
dec
(bad)
scas
add
push
jne
or
or
mov
pop
jne
dec
sub
or
rol
std
jne
imul
jne
jmp
xchg
sbb
jne
pop
(bad)
jb
sbb
jne
push
inc
add
out
jne
(bad)
mov
jne
into
push
mov
inc
mov
loope
sbb
fidiv
inc
iret
hlt
add
fdiv
mov
xlat
jne
in
retf
shl
ja
pop
add
into
jne
movs
sqrtps
sbb
jne
aaa
jae
add
(bad)
jne
out
ret
rol
sbb
jne
push
pop
clc
add
mov
rol
mov
xor
sbb
lods
add
mov
mov
scas
jne
jecxz
sbb
sbb
mov
leave
xchg
fild
sbb
mov
sbb
cmp
sbb
pop
add
xchg
jne
jecxz
push
add
xchg
jne
xor
lea
push
jae
add
mov
cmp
test
movs
sti
scas
add
xor
sbb
outs
mov
jns
pop
mov
ja
(bad)
xchg
pop
add
jno
jp
cmp
jle
repnz
imul
sbb
sahf
fnstsw
add
arpl
mov
test
adc
jl
sbb
inc
mov
push
jp
sti
fwait
or
sbb
(bad)
shl
jp
push
jecxz
add
inc
jp
sub
xchg
xor
add
cmp
data16
shrd
sbb
jp
mov
ss
loope
xor
sbb
jp
xor
loop
sbb
dec
fisttp
add
sub
push
push
aaa
add
and
sahf
addr16
into
add
and
xchg
xlat
sbb
sbb
imul
cli
or
push
jp
push
(bad)
lahf
add
adc
(bad)
add
(bad)
cs
mov
jle
fistp
add
add
out
add
add
xchg
push
jmp
jb
fild
mov
mov
add
idiv
loop
jae
sbb
jp
sbb
in
jp
jmp
or
mov
jp
arpl
jp
cmp
add
fnstsw
lahf
push
inc
add
fnstcw
hlt
sti
xchg
sbb
jp
lods
mov
jp
jg
or
sbb
jp
fcomp
add
enter
ja
add
lds
scas
inc
leave
add
ret
jp
in
pop
add
mov
cld
add
mov
jb
sbb
mov
sbb
aas
add
lods
jp
fs
add
stos
jp
mov
js
sbb
cmps
add
mov
nop
add
popf
jp
neg
add
call
sbb
add
xchg
jp
test
ja
sbb
jge
sbb
inc
add
test
xor
add
cmp
ja
add
jl
push
les
jnp
(bad)
dec
out
add
jne
xacquire
add
jno
add
imul
test
jnp
jo
add
addr16
aam
mov
sbb
mov
cmp
sbb
into
dec
cmps
in
add
pop
jnp
lahf
push
test
ret
leave
add
push
jnp
fist
add
dec
jnp
or
mov
xchg
xchg
(bad)
icebp
add
inc
jnp
mov
jnp
addr16
sbb
jnp
outs
cmps
popf
add
cmp
add
jnp
cli
(bad)
sbb
sbb
jnp
aas
or
sbb
cmp
sbb
jnp
adc
out
add
or
outs
shr
add
or
ja
outs
add
pop
jnp
movs
(bad)
in
sbb
jnp
dec
out
push
sbb
jnp
fisttp
add
clc
jnp
sahf
or
add
hlt
jnp
icebp
pop
add
icebp
jnp
mov
in
jnp
cmp
push
add
jmp
sbb
jnp
movs
xchg
loop
push
jmp
retf
xchg
add
fdivr
adc
sti
add
xlat
jnp
scas
das
fadd
sbb
jnp
mov
fld
sbb
jnp
xor
jb
sbb
jnp
adc
add
(bad)
jnp
nop
das
pop
add
sar
jnp
add
mov
sbb
sbb
add
mov
xchg
mov
(bad)
imul
pop
mov
stos
jnp
xchg
add
sbb
mov
sbb
pop
add
lahf
jnp
div
mov
sbb
adc
sbb
mov
mov
(bad)
jnp
(bad)
and
cmps
mov
test
jb
xchg
add
cmp
sbb
xor
cmp
sbb
xchg
div
xor
sbb
test
jae
scas
dec
xor
add
ins
js
popf
scas
fild
sbb
push
movs
not
sbb
push
jge
ret
bound
cmp
pop
js
out
jae
add
pop
js
popf
arpl
inc
retf
(bad)
push
js
int
pushf
add
dec
js
push
and
sbb
jmp
js
dec
xchg
sbb
out
scas
repnz
cmp
out
ins
cmps
and
sbb
js
dec
jecxz
add
aaa
js
call
stos
dec
pop
mov
sbb
js
and
add
sub
bnd
add
es
adc
rol
sbb
js
inc
or
add
push
js
jle
sub
sbb
js
xor
jg
sbb
js
enter
sbb
js
test
js
mov
mov
adc
lsl
add
push
dec
inc
add
adc
push
add
std
js
sbb
js
xchg
jmp
add
idiv
outs
pop
pop
add
icebp
js
mov
in
js
push
pop
pop
add
jmp
sbb
js
ja
pushf
add
loop
jp
out
das
add
fnstsw
scas
dec
add
fidivr
ins
aaa
or
sbb
js
std
inc
inc
add
sar
mov
inc
sbb
js
push
das
sbb
sbb
js
xor
lds
pusha
jmp
add
ret
js
adc
js
ret
add
mov
test
sbb
add
mov
mov
sbb
mov
sbb
call
ffreep
add
mov
stos
add
lahf
js
mov
ret
cdq
js
out
jnp
add
xchg
js
ss
add
xchg
js
sbb
js
clc
out
add
mov
test
js
or
mov
sbb
sbb
sbb
mov
sbb
cs
arpl
iretw
jecxz
add
jae
jp
inc
stos
add
outs
jns
add
std
add
push
add
sbb
push
mov
popa
jns
sbb
add
pop
jns
push
pop
jns
fisub
mov
pop
call
add
push
jns
xchg
ret
mov
sbb
dec
push
(bad)
pop
add
dec
jns
in
add
xchg
ret
test
sbb
push
scas
popf
add
cmp
iret
add
cmp
loop
xchg
add
xor
mov
jae
add
xor
aad
push
and
jns
pop
daa
lar
and
les
add
sbb
mov
sbb
jns
cmp
jnp
sbb
mov
sbb
jns
repz
push
jns
mov
into
add
or
add
into
add
pop
jns
pop
xor
sbb
jns
outs
scas
ret
(bad)
jns
cmp
imul
sti
jns
je
cli
add
idiv
call
repz
icebp
sbb
dec
pop
sti
jl
sbb
jns
inc
outs
and
sbb
jns
std
sbb
add
loop
pop
imul
call
rcl
(bad)
jns
adc
xor
sbb
jns
ret
pop
in
sbb
jns
jno
test
retf
cmp
jns
imul
jns
xchg
add
mov
mov
sbb
adc
sbb
add
mov
adc
xchg
add
lods
jns
xchg
mov
jns
stc
jecxz
add
movs
jns
mov
mov
adc
sbb
lar
cwde
jns
ds
enter
jns
(bad)
arpl
mov
sbb
lods
add
mov
push
cmps
xchg
add
xchg
dec
jecxz
add
cmp
sbb
bound
iret
pop
add
jns
mov
sbb
jmp
jle
dec
rcr
ins
jle
cdq
pop
jl
sbb
jp
add
outs
mov
bound
push
imul
pop
jle
inc
pop
lea
sbb
xchg
nop
jae
add
push
jle
sub
mov
out
stos
pop
add
dec
jle
dec
cmps
or
sbb
cs
inc
jle
sub
rol
sbb
add
add
cmp
jbe
mov
add
cmp
mov
test
fs
jg
sbb
jle
inc
stos
stos
add
das
jle
xchg
and
add
sub
mov
es
jo
test
retf
add
sbb
ret
fiadd
sbb
jle
mov
pop
jle
ins
jnp
add
fstp
sbb
aaa
add
jl
cs
sub
sbb
inc
dec
outs
jp
sbb
into
push
jecxz
add
jo
cmp
add
outs
jb
adc
jb
repnz
add
addr16
inc
div
sbb
xchg
sub
add
pop
jb
dec
add
add
pop
jb
int
loop
sbb
loop
mov
jb
repz
dec
jb
sub
inc
add
dec
jb
push
mov
jb
dec
imul
sbb
push
sbb
pop
add
cmp
cmp
sbb
jb
lahf
dec
outs
add
xor
xchg
push
btc
sbb
jb
xor
add
sub
dec
add
sub
add
jb
shl
popa
add
and
cld
push
xchg
add
sbb
mov
sbb
and
or
sbb
jb
popf
iret
outs
add
adc
add
jb
rol
jb
dec
(bad)
jb
sbb
ss
retf
cmps
add
add
les
outs
add
cld
jb
pop
repz
push
mov
add
div
test
add
repz
(bad)
(bad)
in
jb
push
and
sbb
jb
ror
sbb
sbb
jb
sbb
jb
add
jb
mov
fidiv
push
adc
sbb
jb
add
jb
adc
int3
jb
mov
add
retf
jb
sar
rol
lds
xor
jb
(bad)
push
add
mov
adc
sbb
fild
sbb
sbb
sbb
cli
add
lods
jb
jmp
pop
add
test
or
sbb
add
mov
push
sbb
jge
sbb
cmp
sbb
pop
add
xchg
jb
sub
jb
mov
xor
sbb
and
sbb
add
xor
retf
mov
sbb
xor
jnp
sbb
mov
jae
shr
sbb
push
add
loopne
sbb
repz
xor
data16
jae
jp
lock
bound
mov
add
pop
jae
fwait
pop
jne
sbb
jbe
out
cmp
sbb
sub
push
jae
outs
out
out
sbb
into
stos
xor
sbb
mov
adc
outs
jnp
movs
add
inc
jae
fidiv
adc
sbb
jae
inc
mov
add
cmp
(bad)
xlat
cmps
add
aaa
jae
out
jae
sbb
jae
xor
fild
sbb
sub
imul
add
sub
inc
sub
add
daa
jae
shr
add
and
add
inc
sbb
sub
sbb
jae
das
(bad)
pop
add
or
inc
sbb
jae
leave
daa
xor
sbb
(bad)
push
fld
sbb
jae
dec
ja
add
std
jae
and
add
clc
jae
ss
mov
inc
inc
call
add
icebp
jae
gs
add
in
jae
dec
div
add
jmp
out
lahf
imul
dec
inc
out
sbb
jae
fs
repnz
fdiv
cmp
fidiv
(bad)
add
(bad)
jae
ret
push
hlt
add
shl
dec
pop
arpl
sbb
jae
clc
dec
mov
sbb
jae
inc
in
sbb
jae
xor
jae
loop
xchg
add
mov
jg
sbb
js
sbb
add
mov
test
jae
and
stos
jae
cs
sbb
sbb
jbe
sbb
ret
add
lahf
jae
pushf
mov
jae
and
and
sbb
sti
add
xchg
jae
sub
pop
add
(bad)
jae
dec
dec
retf
mov
cwde
imul
add
xchg
test
xor
sbb
pop
sbb
add
js
push
retf
sti
add
je
inc
adc
jo
out
jecxz
sbb
or
sti
add
imul
sbb
ficomp
mov
sbb
scas
inc
fwait
push
add
pop
jo
push
cmps
dec
add
pop
jo
nop
aas
cmps
add
push
jo
add
push
jo
cmp
dec
jo
pop
jae
add
dec
jo
aas
movntps
sbb
shl
dec
inc
sbb
and
dec
add
ds
test
cmp
jp
or
sbb
jo
pop
inc
jmp
sbb
jo
popf
add
add
cs
dec
imul
sbb
jo
sub
mov
push
inc
imul
and
xchg
das
adc
sbb
jo
sti
ja
add
sbb
push
xor
add
adc
mov
xchg
or
ins
add
pshufw
mov
jo
and
add
add
jbe
repz
sbb
jo
xor
add
std
jo
rcr
add
clc
jo
daa
sti
leave
add
hlt
jo
shr
jo
adc
jo
xchg
jmp
add
call
pop
sbb
jo
ja
jge
sbb
jo
mov
rol
sbb
jo
pop
cmps
pop
add
(bad)
mov
add
(bad)
jo
pushf
cmp
sbb
jo
fwait
jg
add
int3
jo
dec
and
sbb
jo
dec
daa
and
sbb
jo
pusha
mov
jo
inc
fist
mov
cmps
jne
sbb
stos
add
mov
push
loop
xchg
add
mov
out
dec
(bad)
mov
outs
cmc
cmps
mov
sbb
cmps
add
cmps
jo
imul
sbb
adc
sbb
add
cwde
jo
inc
xor
add
xchg
jo
jb
mov
sbb
popa
add
lea
mov
repz
mov
pop
ja
add
xchg
mov
jo
dec
dec
pop
add
jge
retf
xchg
add
jnp
mov
sbb
les
ret
jb
call
jno
jmp
imul
sbb
mov
sbb
jb
scas
inc
sbb
push
retf
add
sbb
sbb
push
jno
push
push
repnz
push
jno
push
scas
xchg
add
dec
jno
push
aas
push
add
dec
jno
(bad)
push
lar
inc
jno
fwait
xchg
pop
add
inc
jno
sbb
cmp
cmps
push
fisttp
push
pop
fadd
sbb
jno
(bad)
jmp
add
xor
int
sbb
sbb
jno
shl
fiadd
sbb
jno
mov
adc
sbb
jno
ja
inc
add
and
mov
sbb
mov
adc
fisubr
xchg
add
adc
jle
add
or
xchg
add
add
(bad)
add
std
jno
push
ret
xor
cs
add
hlt
jno
and
dec
add
bnd
xchg
push
add
out
jno
mov
jno
pop
(bad)
mov
sbb
jno
daa
and
loop
cli
hlt
iret
fadd
sbb
jno
ins
add
add
fdiv
call
push
mov
shl
ins
repz
iret
jno
jbe
add
enter
fwait
repz
mov
jp
sbb
rol
sbb
leave
add
stos
jno
cmp
mov
inc
in
arpl
sbb
dec
add
xchg
jno
ja
call
fwait
adc
sbb
mov
mov
jmp
js
(bad)
fistp
add
jne
loop
imul
sbb
call
jbe
(bad)
push
inc
sbb
mov
sbb
inc
mov
inc
add
push
jbe
lahf
sti
out
add
push
jbe
push
and
add
dec
jbe
mov
add
dec
jbe
pop
xchg
out
add
inc
jbe
dec
fbstp
sbb
outs
cmps
xchg
jb
mov
add
cmp
lds
jbe
cld
(bad)
jae
sbb
jbe
stc
pop
imul
enter
sbb
jbe
adc
mov
push
mov
in
add
sbb
mov
mov
add
sbb
stos
pop
cmp
sbb
jbe
pop
push
add
out
arpl
sbb
xchg
aam
mov
sbb
jbe
pop
repz
sbb
jbe
movs
ret
ret
add
rcr
jbe
int3
fbstp
sbb
jbe
pop
outs
cmp
sbb
jbe
sbb
out
add
out
or
aas
add
loope
xchg
dec
jae
add
fidiv
fwait
jae
add
fdiv
or
add
(bad)
jbe
jae
push
push
pop
or
add
retf
inc
sub
cmps
dec
add
icebp
fwait
push
add
mov
retf
add
mov
data16
vmwrite
sbb
inc
add
lods
jbe
inc
pop
add
sbb
fild
sbb
add
mov
mov
sbb
xor
sbb
or
sbb
and
ss
(bad)
jbe
imul
sbb
leave
add
xor
ret
retf
jle
mov
sbb
call
ja
sbb
dec
add
jae
sbb
int
sbb
out
clc
xlat
sbb
sbb
mov
sbb
mov
pusha
ja
mov
add
pop
ja
inc
pop
nop
add
pop
ja
pop
mov
ja
and
sbb
out
daa
pushf
add
dec
ja
retf
add
dec
ja
mov
jb
cmp
add
inc
ja
and
int3
add
ds
js
sbb
sbb
ja
jns
pop
add
xor
rol
sbb
ja
into
pop
dec
add
sub
call
cmp
mov
pop
pop
add
and
mov
add
push
ja
rcr
stos
add
sbb
add
mov
sbb
ret
nop
add
adc
cld
cmovne
sbb
ja
das
pop
pop
add
or
xlat
iret
jno
sbb
mov
sbb
ja
pop
(bad)
fld
sbb
ja
fadd
ja
or
ja
cmps
rcpps
sbb
ja
xlat
fwait
jge
sbb
ja
jmp
call
push
add
in
mov
xlat
rol
sbb
ja
loope
sahf
add
fnsave
cmps
stos
dec
add
fidiv
je
inc
add
aam
repnz
iret
mov
mov
push
add
int
xor
arpl
add
retf
cmc
pop
add
(bad)
ja
and
add
shl
pop
bound
sbb
push
add
mov
cmp
sbb
fadd
sbb
bound
sbb
stc
add
test
out
repz
sbb
add
mov
popa
add
sahf
ja
xor
ja
loope
jmp
cs
xor
add
xchg
ja
adc
mov
(bad)
xlat
lahf
add
mov
jnp
dec
add
xchg
test
add
sbb
mov
sbb
mov
sbb
jmp
je
push
(bad)
lods
add
jb
sahf
cmps
dec
std
add
outs
je
mov
loope
sbb
(bad)
xchg
xor
idiv
fcmovnu
add
pusha
je
jne
aas
add
pop
je
jno
std
add
pop
je
mov
push
je
aam
inc
add
push
je
sbb
dec
je
adc
or
sbb
pop
mov
js
sbb
bound
and
add
inc
je
mov
push
cmps
jecxz
mov
div
shl
add
xor
add
add
xor
xchg
lods
add
das
je
push
jnp
add
sub
aas
and
sbb
push
push
xlat
jns
sbb
je
lds
add
sbb
mov
sbb
je
jp
js
sbb
je
jl
lods
add
adc
or
nop
dec
jno
sbb
je
inc
sti
add
push
dec
cmp
add
add
jg
add
push
mov
je
call
jb
sbb
and
xor
sbb
je
pop
(bad)
add
call
pop
add
in
loop
out
rol
sbb
je
stos
iret
sahf
add
fdiv
repz
sbb
je
mov
rol
(bad)
je
push
out
jp
sbb
je
pop
stos
scas
add
iret
je
aam
adc
sbb
je
aad
add
(bad)
je
inc
xor
add
ret
je
add
and
inc
add
sbb
scas
add
mov
ficomp
jp
sbb
into
add
lods
je
fdiv
je
cmovg
sbb
leave
add
mov
rol
sbb
cmps
add
cwde
je
popf
aas
jb
sbb
adc
sbb
inc
sbb
add
mov
inc
inc
add
test
dec
jmp
inc
in
mov
pop
pop
ret
push
add
jns
and
ja
add
jbe
dec
jecxz
jge
sbb
jle
sub
retf
bound
sbb
call
jne
in
mov
xor
add
pop
jne
retf
add
pop
jne
repnz
xchg
add
push
jne
and
jne
xchg
not
sahf
cmp
jb
aas
enter
jne
repnz
fst
jne
imul
push
sbb
mov
sbb
add
xor
mul
and
sbb
jne
and
popa
add
sub
sar
add
daa
jne
es
jne
cmc
shl
add
sbb
frstor
jne
cli
jecxz
add
pop
jne
sub
jne
pop
mov
add
push
jne
inc
dec
ret
or
ror
pop
add
add
add
loop
sbb
jne
or
add
push
mov
adc
sbb
jne
call
jne
sub
pushf
add
lock
pop
sti
rol
sbb
jne
out
push
add
jmp
sbb
jne
pop
sti
cmp
sbb
jne
mov
sbb
sbb
jne
fist
add
fdiv
(bad)
xchg
add
(bad)
jne
jecxz
add
sbb
jne
stc
sti
xlat
add
int
sub
cdq
add
leave
jne
loopne
aam
sbb
jne
popa
pop
int
sbb
jne
and
sub
sbb
inc
sbb
cmp
sbb
test
sbb
mov
sbb
xor
sbb
fild
sbb
pop
add
mov
mov
cmps
js
ja
sbb
fiadd
sbb
lidtd
xchg
jne
jns
sub
jmp
jne
pop
aaa
mov
sbb
arpl
sbb
stos
add
jle
mov
aaa
jg
sbb
out
xchg
sub
push
mov
add
jo
(bad)
cmps
das
in
add
outs
jp
jne
add
push
dec
add
data16
inc
xchg
jmp
out
xlat
popa
add
pop
jp
pop
xchg
mov
sbb
mov
sbb
and
inc
sbb
jbe
mov
jp
adc
test
sbb
scas
pusha
imul
add
add
cmp
aam
sbb
jp
out
jnp
add
xor
sti
add
xor
add
add
cs
rol
add
sub
(bad)
add
and
int
sbb
jp
xchg
add
sbb
xchg
sbb
aas
aas
inc
add
adc
push
add
adc
xchg
mov
cli
or
or
push
xchg
cld
add
pop
jp
rcr
add
add
repz
lods
add
cld
jp
sbb
js
sbb
jp
iret
inc
stos
add
idiv
push
pop
add
sbb
jp
push
jmp
push
aaa
push
add
call
stos
add
in
mov
loop
repnz
fwait
xor
sbb
jp
inc
cmp
push
daa
fild
sbb
jp
cmps
arpl
sbb
jp
cmp
add
iret
jp
push
stos
mov
pop
dec
push
push
out
sbb
jp
in
lea
sbb
pop
add
mov
jne
sbb
inc
sbb
sub
sbb
repnz
test
out
mov
movs
jp
mov
call
pop
retf
pushf
jp
loope
pop
add
fwait
jp
xor
add
xchg
jp
add
jp
dec
pop
dec
add
mov
out
xchg
sbb
xchg
add
xchg
sub
add
cmp
sbb
int3
jecxz
add
jns
sub
cmps
sbb
sbb
jp
pop
rol
sbb
call
jnp
push
(bad)
add
imul
pop
iret
add
data16
mov
add
sbb
repnz
scas
add
pop
jnp
xor
pop
jnp
fnsave
lsl
push
jnp
fstp
jmp
mov
jnp
adc
xchg
add
dec
jnp
dec
jmp
add
inc
jnp
mov
jnp
pop
cmp
sbb
mov
jg
add
cmp
xor
jnp
mov
xor
outs
stos
les
sbb
jnp
lea
mov
sbb
jnp
xchg
jnp
add
es
pop
pop
push
add
and
imul
(bad)
push
cmp
sbb
jnp
movs
adc
xor
add
es
inc
jge
sbb
mov
mov
das
dec
add
push
jnp
ins
fild
inc
jo
and
sbb
jnp
or
jp
sbb
jnp
imul
add
hlt
jnp
test
lock
or
out
jnp
fwait
repz
add
call
xchg
add
out
cs
jecxz
mov
(bad)
adc
sbb
jnp
imul
add
fidivr
adc
add
(bad)
jnp
jecxz
cmps
add
sar
push
repz
sbb
jnp
sub
jnp
xchg
xchg
add
les
scas
lahf
outs
add
ret
mov
mov
gs
retf
add
mov
pop
add
mov
xchg
mov
mov
push
cmps
jns
sbb
add
test
push
cmovnp
add
cmps
jnp
stc
jecxz
add
mov
adc
pop
mov
cwde
jnp
leave
stos
jns
sbb
add
xchg
jnp
pusha
or
sbb
nop
add
mov
dec
daa
inc
add
xchg
fwait
mov
sbb
pushf
add
jg
ret
jb
sbb
xchg
add
jle
add
or
sbb
push
sbb
add
jne
sar
imul
std
pop
mov
push
jecxz
add
push
dec
pop
jecxz
add
addr16
cmp
popa
jb
popa
push
aam
sbb
dec
das
or
sbb
bound
cmps
add
push
jb
sti
or
sbb
mov
ret
je
sbb
push
pusha
jae
add
dec
jb
lahf
sub
xor
add
inc
jb
sub
lsl
ds
mov
call
cmp
add
xor
sahf
stc
sub
add
xor
jl
ret
sub
pop
add
sub
stos
scas
pop
add
and
pop
xchg
sti
add
and
test
out
sbb
jb
jno
clc
add
sbb
mov
adc
push
cmp
call
jb
mov
or
sub
movs
add
pop
jb
pop
stos
mov
jle
iret
bound
sbb
jb
mov
add
sbb
jb
adc
div
ret
add
repz
repz
xchg
jmp
cs
in
dec
cli
adc
add
loope
ss
pop
cmp
sbb
jb
push
pop
lds
sbb
jb
lock
loopne
sbb
jb
inc
scas
sub
sbb
jb
in
iret
or
cmps
cmps
das
add
dec
xor
fadd
sbb
jb
cwde
xchg
xchg
add
shl
repz
sbb
add
mov
add
sbb
inc
add
lods
jb
(bad)
xchg
inc
add
stos
jb
iret
or
add
cmps
jb
je
push
add
mov
pusha
add
popf
jb
xor
bound
sbb
jns
sbb
add
xchg
jb
xchg
(bad)
jns
sbb
lods
add
mov
inc
fistp
add
xchg
test
add
xor
sbb
mov
js
jmp
jae
stos
pop
dec
add
jo
push
xchg
sbb
stos
ret
add
push
jmp
jae
mov
cmp
sbb
xchg
push
add
pop
jae
(bad)
rcl
sbb
inc
das
pop
add
push
jae
setae
bound
mov
and
dec
jae
mov
mov
sbb
xor
jnp
sbb
push
psrad
sbb
pop
call
idiv
outs
add
aaa
jae
ret
xchg
sbb
jae
out
mov
sbb
jae
mov
sub
cdq
mov
add
es
jge
out
sbb
jae
fild
fwait
add
pop
jae
xchg
dec
fld
sbb
jae
sbb
add
pop
jae
mov
sti
add
adc
add
(bad)
out
jmp
add
or
iret
xchg
daa
add
add
push
add
add
dec
dec
jns
sbb
jae
(bad)
fistp
adc
out
icebp
add
cmc
jae
adc
icebp
jae
cs
mov
jbe
aas
test
sub
jae
adc
std
add
jecxz
sub
add
fdiv
mov
lock
call
sbb
inc
sbb
rol
mov
cmps
inc
aam
sbb
rol
sbb
mov
add
jp
mov
pop
nop
add
jne
push
mov
add
jo
jp
xor
add
outs
jo
jae
cmp
sbb
dec
jg
sub
sbb
ds
jbe
sbb
cmp
pop
jo
test
pop
jo
rol
add
push
jo
enter
sbb
xchg
cwde
pop
pushf
add
dec
jo
imul
add
dec
jo
adc
pop
add
inc
jo
pop
inc
cmps
add
inc
jo
xchg
(bad)
dec
add
aas
jo
clc
addr16
add
cmp
retf
add
xor
stos
pop
das
inc
add
xor
sbb
aam
sbb
inc
add
sub
or
jo
(bad)
inc
sbb
jo
mov
sbb
and
sbb
jo
repz
mov
sbb
jo
mov
adc
pop
add
sbb
mov
or
mov
call
(bad)
add
and
push
xchg
pop
pop
add
sti
jo
into
push
push
add
cmc
jo
inc
pop
mov
sbb
jo
mov
in
jo
sub
jmp
out
push
pop
add
in
mov
sbb
jo
mov
add
fidiv
xor
add
fnstenv
popa
addr16
add
aam
retf
dec
add
shl
inc
outs
test
into
jo
or
add
enter
imul
sbb
jo
inc
scas
adc
sbb
jo
mov
add
mov
add
mov
mov
sbb
aaa
add
mov
mov
lods
jo
xor
add
test
ss
inc
add
movs
jo
cwde
inc
popf
add
mov
inc
add
pushf
jo
ror
or
sbb
add
xchg
jo
stc
jae
add
xchg
jo
jg
pushf
add
mov
or
pop
add
mov
xchg
das
hlt
add
xchg
pop
fwait
pop
add
xor
das
in
sbb
movs
adc
add
js
bound
sub
sbb
ds
iret
aaa
add
jo
data16
pop
es
mov
fisubr
gs
mov
push
jno
mov
jno
stc
not
add
dec
jno
scas
xchg
push
shr
jno
mov
cmp
xor
sbb
jno
or
jno
in
out
pusha
add
xor
scas
xchg
jne
sbb
sbb
sbb
jno
jl
add
ret
push
add
and
mov
lock
push
jno
jns
test
sbb
jno
ins
out
cmp
sbb
jno
mov
pop
add
adc
sbb
jno
cs
push
add
or
or
add
lds
sbb
jno
rcr
mov
sbb
pop
rol
sbb
jno
push
or
hlt
jno
push
fist
fdiv
push
add
out
jno
fldenv
jno
add
iret
add
in
add
loop
jb
(bad)
mov
xor
jno
inc
call
add
aam
dec
xchg
jno
cdq
mov
add
iret
jno
xchg
icebp
add
enter
add
sbb
jno
jg
push
add
ret
nop
iret
in
add
mov
push
add
mov
jno
sbb
add
mov
loop
push
add
sbb
add
test
(bad)
add
cmps
jno
call
repnz
add
popf
jno
lea
lods
add
call
sbb
cmps
add
xchg
jno
out
mov
add
mov
fs
cli
add
mov
mov
cmps
add
test
and
push
add
xor
(bad)
cmp
sbb
scas
inc
inc
add
jns
cmps
daa
sbb
jbe
(bad)
add
jno
xor
inc
out
add
ins
jbe
dec
arpl
add
imul
adc
add
gs
pop
mov
jbe
adc
jbe
pushf
sti
cmp
sbb
(bad)
imul
jbe
or
sbb
sbb
cmps
popf
fwait
lock
dec
jbe
or
jbe
xchg
imul
inc
jbe
cmp
add
inc
jbe
icebp
pop
xchg
sbb
jbe
mov
cmp
pshufb
aaa
jbe
in
movs
add
xor
test
cs
sub
add
sub
lods
add
sbb
jbe
(bad)
cmp
add
and
add
mov
sbb
jae
sbb
jbe
jg
les
sbb
dec
jmp
jle
retf
pop
add
or
fisub
add
or
mov
pop
jbe
cmp
daa
add
add
cmp
fld
sbb
jbe
sub
add
cli
jbe
shl
mov
sbb
jbe
mov
repz
(bad)
add
in
jbe
dec
and
xor
sti
lea
sbb
jbe
add
enter
jbe
fimul
jbe
adc
adc
dec
aas
outs
lahf
add
(bad)
jbe
mov
shl
or
jbe
and
jbe
mov
out
sbb
jbe
inc
mov
add
ret
jbe
mov
lods
add
mov
outs
add
mov
out
add
mov
inc
xor
dec
add
mov
cli
in
mov
call
jbe
retf
add
movs
jbe
or
jecxz
sbb
sub
sbb
mov
push
lsl
add
xchg
jbe
sbb
fild
sbb
inc
add
mov
jecxz
cdq
add
mov
xor
push
(bad)
lahf
cli
add
xor
sub
outs
jmp
ins
add
jp
adc
out
sbb
inc
xchg
sbb
sbb
bound
ins
ja
cmp
add
imul
sbb
xchg
mov
sbb
stos
mov
add
scas
jae
sbb
add
jge
inc
out
das
bound
sbb
cli
pop
cmp
mov
xor
jb
pop
fadd
jb
or
lahf
add
push
fiadd
sbb
jle
jecxz
add
bound
je
clc
add
pop
jb
test
dec
add
pop
jb
mov
das
add
push
jb
mov
push
jb
xor
int3
add
dec
jb
repnz
add
dec
jb
test
push
add
inc
jb
js
jecxz
sbb
neg
aas
jb
push
(bad)
adc
sbb
jb
and
jl
sbb
jb
jp
daa
add
xor
fnstcw
dec
add
cs
pop
(bad)
sub
(bad)
mov
add
cmp
push
dec
jg
add
push
jb
call
loop
cmp
add
push
jb
pop
jg
add
adc
mov
add
or
jbe
or
pop
out
add
add
or
sbb
jb
cs
push
add
cld
jb
sbb
sti
jb
into
ret
cwde
add
hlt
jb
push
xchg
sbb
jb
cmp
add
in
jb
push
jmp
jle
pop
mov
jp
pop
jne
sbb
jb
pusha
jg
add
fnsave
gs
pop
add
(bad)
daa
daa
sub
sbb
jb
mov
cmp
sbb
jb
mov
into
jb
ins
mov
add
leave
jb
ja
push
add
(bad)
jb
inc
xor
rcl
mov
or
sbb
cmp
sbb
add
mov
ds
fcomip
add
scas
jb
sub
jb
sbb
xchg
sbb
test
sbb
jl
sbb
add
cdq
jb
ror
xor
sbb
add
xchg
jb
or
add
sbb
pop
add
mov
daa
(bad)
rol
sbb
cmp
sbb
jmp
push
mov
add
js
push
aaa
xor
sbb
add
xor
(bad)
cwde
shl
add
ins
jae
jbe
aaa
add
imul
jae
add
addr16
shl
add
arpl
stc
sbb
sbb
inc
add
mov
loop
xchg
or
jp
scas
or
sbb
jbe
rol
add
dec
jae
repz
jbe
sbb
outs
cld
cmps
in
sbb
cs
jae
ins
pop
push
add
aas
jae
fwait
jg
add
cmp
inc
cmovg
sbb
mov
xor
xlat
xor
xor
mov
jae
mov
xchg
add
es
enter
sbb
jae
nop
jnp
add
pop
jae
pop
cmp
add
sbb
hlt
mul
pop
jae
(bad)
ja
add
adc
cmp
xor
sbb
jae
cmps
scas
add
or
jle
rol
sbb
jae
jnp
or
adc
jae
add
add
sti
jae
cmc
mov
jae
cmp
call
push
pop
or
add
out
jae
(bad)
fild
add
call
rol
sbb
jae
push
dec
jg
sbb
jae
fcmovnb
pop
add
fdiv
dec
mov
add
fdiv
adc
jae
mov
shl
xchg
retf
cmp
sbb
jae
jl
add
retf
jae
sar
add
(bad)
jae
xor
cdq
add
shl
data16
mov
outs
add
mov
or
sbb
rol
sbb
jb
sbb
add
cmps
jl
sbb
ds
pop
add
ins
jb
add
add
push
jmp
jb
retf
add
pusha
jb
ins
das
jmp
das
add
pop
jb
loop
adc
sbb
jp
out
add
push
jb
pop
or
add
dec
jb
sub
jb
adc
push
sbb
inc
ret
add
inc
jb
jecxz
xchg
add
ds
mov
cmp
xlat
fwait
add
aaa
jb
outs
and
xor
add
adc
sbb
jb
xor
rol
sbb
jb
dec
mov
add
es
ins
pop
pushf
add
and
icebp
seto
sbb
inc
add
sbb
cdq
sbb
sbb
xchg
and
sbb
(bad)
or
mov
push
cmp
or
out
scas
enter
jb
fucomip
jg
sbb
jb
aaa
stos
stos
add
out
jb
in
ins
add
jmp
mov
push
mov
je
sbb
jb
mov
fdiv
fs
add
fdiv
jb
pop
add
xlat
jb
inc
imul
imul
jp
sbb
jb
and
imul
retf
sub
(bad)
jb
iret
jmp
add
shl
add
sbb
mov
sbb
mov
sahf
data16
add
mov
(bad)
jg
lods
add
stos
jb
jb
mov
stos
or
jb
mov
mov
push
pop
pop
loop
sbb
aaa
add
xchg
jb
leave
aas
fld
sbb
sub
sbb
add
mov
push
fld
add
test
mov
jns
sbb
xor
sbb
leave
pop
pop
add
js
push
xlat
inc
pop
sbb
push
add
stc
add
jb
repnz
push
push
add
gs
(bad)
movq
sbb
sbb
jg
add
pop
jae
mov
fld
sbb
xchg
jecxz
mov
fiadd
inc
mov
sbb
(bad)
aam
pop
sbb
and
sbb
add
dec
jae
inc
cmovs
sbb
(bad)
jecxz
add
inc
jae
scas
mov
jae
push
out
add
cmp
aad
fiadd
sbb
jae
jl
or
sbb
jae
lods
stos
add
das
jae
sbb
rol
sbb
jae
add
cmp
sbb
jae
xor
add
and
ja
rol
sbb
jae
daa
pop
xchg
sbb
jae
je
cmps
add
push
jae
(bad)
cmps
dec
add
adc
pop
jecxz
add
or
cmc
add
or
or
add
add
(bad)
push
jg
add
add
and
jae
loope
or
sbb
jae
out
pop
ins
add
cmc
jae
clc
stos
fld
sbb
jae
call
out
jae
adc
ret
add
jmp
dec
add
in
fisub
jecxz
mov
jae
add
fidiv
push
mov
jae
xor
inc
sbb
jae
sub
add
shl
jl
mov
(bad)
cli
fcmovnb
add
leave
jae
mov
lds
mov
shl
daa
adc
sbb
mov
mov
pop
add
mov
mov
sti
xor
sbb
add
lods
jae
clc
outs
push
add
stos
jae
sub
xor
sbb
cwde
add
mov
or
sbb
fiadd
sbb
retf
xchg
jae
test
xchg
jae
xchg
inc
icebp
add
mov
out
fild
sbb
add
xor
sbb
cmps
jo
sahf
add
jp
inc
add
je
sbb
pop
mov
dec
sub
fild
sbb
jmp
jo
sbb
jo
pushf
pop
fiadd
sbb
xchg
jmp
(bad)
aas
add
pop
jo
dec
jmp
add
push
jo
and
or
sbb
(bad)
aad
mov
xor
jo
outs
sbb
sbb
push
mov
jo
push
sti
std
add
cmp
add
sbb
jo
xchg
and
sbb
jo
mov
xor
stos
and
adc
jo
jg
ins
add
and
mov
xchg
fs
add
sbb
movs
add
pop
jo
jb
xor
sbb
jo
pop
push
add
sbb
jo
in
jnp
sbb
scas
add
add
ror
push
add
cld
jo
(bad)
pop
out
add
clc
jo
jns
aam
sbb
jo
(bad)
rol
sbb
jo
bound
add
sbb
jo
mov
cli
add
jmp
adc
cmps
add
in
retf
mov
sbb
jo
imul
rcl
shl
cli
arpl
add
int
out
pop
push
add
leave
jo
arpl
mov
jmp
push
inc
sbb
daa
add
mov
repnz
mov
jp
push
lea
sbb
mov
sbb
mov
sbb
xor
sbb
out
sbb
add
ficomp
add
add
mov
push
rol
lea
ins
outs
mov
sbb
jecxz
sbb
retf
add
xor
cmovae
sbb
mov
lods
add
jnp
out
xor
ret
je
push
xor
jae
pop
out
mov
sbb
mov
imul
adc
add
fs
mov
and
adc
or
sbb
repnz
(bad)
adc
sbb
jno
mov
jno
ds
aaa
add
pop
jno
in
pop
and
sbb
jno
mov
and
sbb
jno
ds
icebp
add
adc
in
sbb
add
(bad)
mov
sbb
jno
out
mov
sbb
jno
cs
popa
add
add
std
pop
out
add
std
jno
mov
loop
sbb
jno
sub
sub
sbb
jno
mov
mov
sbb
jno
pop
mov
jno
mov
jno
xchg
iret
push
add
in
or
jecxz
push
dec
(bad)
sahf
add
fdiv
leave
imul
addr16
sbb
scas
add
jge
bound
add
jp
push
sub
cmp
sbb
fisubr
jb
jmp
jb
retf
xlat
loopne
sbb
out
inc
jae
add
gs
push
jg
add
pop
jb
(bad)
or
cli
das
(bad)
jg
sbb
or
push
jb
mov
add
dec
jb
jae
add
sbb
and
inc
jb
rol
add
inc
jb
ss
add
aas
jb
enter
sbb
jb
jb
outs
add
xor
out
pmaxsw
sbb
jb
fwait
das
mov
sbb
jb
je
cli
add
daa
jb
ret
xchg
loop
sbb
jb
add
jb
inc
jg
add
sbb
out
push
pop
add
adc
into
jno
fwait
add
adc
movs
fcmovne
add
push
jb
call
retf
add
pop
mov
add
add
mov
(bad)
jb
pop
xchg
jo
sbb
jb
mov
rol
sbb
jb
mov
lock
mov
add
in
jb
or
add
call
mov
sbb
jb
fisub
jb
(bad)
jmp
add
fidiv
pand
sbb
jb
sub
mov
push
data16
add
shl
std
not
iret
jb
jns
add
retf
jb
inc
outs
pusha
add
(bad)
jb
shr
dec
add
ret
adc
jb
(bad)
out
rol
mov
stc
add
mov
jb
fisttp
sbb
lods
add
lods
jb
call
cli
mov
add
movs
jb
hlt
inc
inc
add
mov
lahf
add
lahf
jb
cdq
lahf
xlat
add
call
sbb
loop
sbb
jecxz
sbb
add
mov
or
mov
sbb
mov
mov
imul
push
sbb
add
jp
xchg
neg
mov
mov
add
jb
jbe
outs
jns
sbb
ds
pop
jbe
sbb
bound
(bad)
icebp
add
addr16
mov
cmp
sbb
push
test
xchg
add
pop
jae
adc
sbb
push
mov
xor
sbb
xchg
out
ja
add
push
jae
dec
or
add
dec
jae
call
add
dec
jae
ds
jae
pop
xor
sbb
and
loop
sbb
pop
bswap
test
sbb
jae
jp
xor
push
adc
add
das
jae
jle
pop
add
sub
sbb
add
daa
jae
pop
jae
sbb
sbb
mov
fwait
jp
sbb
jae
out
loope
sbb
jo
sbb
jae
dec
fcmovnb
add
push
jae
test
movs
add
or
add
add
push
jae
cmp
and
sbb
jae
ins
out
add
cld
jae
pop
push
mov
sbb
jae
xchg
add
div
dec
mov
jae
pushf
cmps
xor
sbb
jae
retf
add
call
adc
sbb
jae
mov
mov
sbb
jae
push
sbb
sbb
jae
lds
jae
loop
xchg
add
aam
pop
cmp
add
shl
in
inc
add
int
repnz
xor
leave
jae
addr16
push
sub
jmp
add
ret
jae
ret
inc
mov
sbb
sbb
sbb
pop
add
mov
shl
jecxz
add
mov
pop
or
sbb
mov
out
adc
xchg
data16
mov
inc
sbb
popa
add
fwait
jae
cs
sub
sbb
add
xchg
jae
pushf
aas
jp
sbb
cmp
sbb
test
sbb
add
xor
imul
xchg
(bad)
mov
sbb
loop
xchg
bound
sbb
cs
jnp
add
jo
or
scas
mov
sbb
xchg
add
imul
fwait
icebp
add
data16
inc
iret
fld
sbb
out
call
pop
jo
cmc
fcmovne
add
pop
jo
mov
push
jo
cmp
or
(bad)
sbb
sbb
dec
xor
jo
adc
into
add
inc
jo
in
mov
jo
inc
jnp
add
cmp
std
add
cmp
sub
mov
scas
dec
sti
das
add
xor
jmp
cli
int3
xchg
add
sbb
jo
dec
aas
xor
sbb
jo
push
and
les
add
pop
jo
ret
add
sbb
cmps
inc
or
dec
add
cmp
xchg
and
push
jo
push
ret
xchg
sbb
jo
rep
xor
sbb
jo
inc
pop
add
sbb
jo
fs
push
add
push
mov
jo
mov
div
aaa
idiv
inc
xchg
pop
sbb
scas
dec
(bad)
movs
add
jmp
sbb
jo
fdivr
cdq
add
loope
push
inc
pop
fild
sbb
jo
and
dec
add
fdiv
xchg
add
aam
jle
stos
add
shl
and
push
add
into
jo
add
retf
pop
add
add
les
pop
jmp
add
ret
cmp
add
mov
push
add
mov
cmp
sbb
add
mov
outs
fist
add
lods
jo
adc
push
add
stos
jo
inc
aas
mov
(bad)
pusha
fistp
add
mov
bound
sbb
xchg
sbb
lea
sbb
add
nop
jo
popf
jecxz
add
(bad)
jo
add
jo
mov
or
sbb
dec
add
xor
mov
add
jg
and
jmp
sbb
cli
jno
cmc
add
jne
cli
repz
add
jno
and
aaa
mov
sbb
jp
scas
sbb
sbb
mov
sbb
sahf
push
retf
add
popa
jno
iret
aas
sti
add
pop
jno
jmp
pop
jno
out
sbb
sbb
(bad)
adc
add
push
jno
outs
pop
jp
sbb
and
jno
(bad)
pop
pop
add
inc
jno
leave
cmps
into
add
inc
jno
(bad)
mov
jno
pop
sbb
sbb
jno
mov
xor
add
xor
xchg
lahf
sub
sbb
scas
push
xor
ret
test
sbb
jno
push
ror
add
and
fnstcw
out
sbb
or
sbb
jno
and
adc
jp
and
xchg
xchg
ja
add
or
mov
sbb
jno
jb
add
push
jno
push
retf
sahf
add
add
(bad)
scas
add
cld
jno
lock
add
sbb
jno
jns
nop
add
div
jg
(bad)
add
lock
sbb
add
out
jno
mov
jmp
retf
std
add
out
loop
dec
mov
sbb
jno
jg
cli
add
fdiv
ret
sub
add
fidiv
ret
aaa
je
sbb
jno
jno
or
sbb
jno
je
fiadd
sbb
jno
mov
jmp
mov
jno
adc
les
sbb
jno
aaa
ja
add
mov
pop
sbb
leave
add
mov
mov
sbb
ins
add
lods
jno
mov
stos
jno
repz
jno
lock
sbb
sbb
loope
sbb
xchg
add
cdq
jno
mov
xchg
jno
sti
jmp
add
nop
jno
lahf
xchg
add
(bad)
jno
sbb
and
sbb
adc
sbb
cmp
sbb
test
cmp
add
jns
push
cmp
jnp
sbb
xchg
popf
arpl
sbb
dec
mov
ins
jbe
imul
sbb
(bad)
pop
rol
sbb
es
or
test
add
pop
jbe
and
pop
jbe
in
xor
sbb
pop
add
mov
shl
dec
jbe
add
cld
add
inc
jbe
add
mov
mov
sbb
jbe
ret
pop
push
add
cmp
in
add
sbb
jbe
(bad)
xchg
retf
xor
fdivrp
xchg
add
sub
mov
sbb
es
pop
xchg
add
and
cmp
jns
sbb
jbe
call
cmps
out
or
sbb
jbe
push
outs
jecxz
sbb
jbe
shr
jbe
stos
lahf
jecxz
sbb
jbe
out
jne
sbb
jbe
and
add
add
mov
xchg
repz
add
mov
add
cld
jbe
ja
hlt
add
cli
jbe
jb
xchg
add
cmc
jbe
pusha
arpl
sbb
jbe
shl
add
out
jbe
jl
das
add
call
mov
push
mov
jecxz
into
fwait
shld
sbb
jbe
aas
fisttp
sbb
jbe
loopne
fild
sbb
jbe
out
popf
add
shl
cmp
sbb
jbe
daa
sar
add
retf
add
aas
add
(bad)
jbe
push
xchg
ret
jbe
imul
push
jmp
adc
xor
and
rol
mov
ds
iret
xchg
sbb
adc
sbb
and
sbb
add
mov
push
add
pushf
jbe
mov
call
sbb
add
xchg
jbe
jns
ins
add
(bad)
jbe
pop
cmp
shl
xchg
test
xor
dec
hlt
add
jge
(bad)
pop
mov
ja
or
retf
add
jne
bound
jmp
sbb
mov
ja
add
outs
ja
cdq
add
add
push
inc
add
data16
sub
add
pusha
ja
adc
ja
jbe
mov
adc
lea
sbb
pop
cmc
setae
sbb
pop
ja
mov
adc
add
dec
ja
out
loopne
sbb
test
je
sbb
mov
sbb
ja
pop
ret
cmp
sbb
ja
or
sub
arpl
add
xor
jg
icebp
add
cs
pop
xor
push
int
add
mov
mov
mov
xlat
add
sbb
out
sbb
ja
xor
add
pop
ja
mov
leave
add
adc
xchg
shr
add
push
ja
fmul
add
or
fidiv
add
add
pop
add
add
cmp
cld
ja
dec
addr16
add
sti
ja
push
dec
fld
sbb
ja
mov
xlat
add
icebp
ja
inc
sbb
sbb
ja
add
rol
sbb
ja
pop
das
xchg
add
out
out
ds
add
sbb
ja
fwait
push
xor
sbb
ja
mov
fidiv
aas
aas
sbb
bound
iret
lidtd
shl
lds
add
iret
ja
ret
mov
ja
cmps
(bad)
jge
sbb
ja
and
adc
sbb
ja
xlat
mov
add
mov
adc
xchg
sub
ja
sbb
add
mov
scas
cdq
pop
js
sbb
add
test
outs
and
ja
mov
mov
mov
sbb
pop
add
cwde
ja
fwait
imul
sbb
mov
sbb
sbb
sbb
pushf
add
mov
test
sti
add
xchg
in
loope
sbb
push
add
jle
repnz
fiadd
sbb
outs
push
scas
inc
sbb
jb
aaa
test
sbb
out
out
add
outs
je
pop
out
cli
add
imul
data16
mov
je
gs
add
pop
je
test
jb
sbb
arpl
sbb
add
jl
fisub
jns
xor
push
ret
ja
sub
add
jo
mov
sbb
mov
sbb
xchg
pusha
xchg
add
addr16
sbb
jb
inc
mov
add
pop
jb
fwait
pop
mov
sbb
mov
xchg
add
inc
jb
pop
mov
jb
stos
ret
add
cmp
bound
add
sbb
jb
ror
add
aaa
jb
cld
jmp
add
xor
scas
ret
push
push
popa
pop
lahf
add
sub
cld
xchg
ret
and
hlt
add
and
movs
cmps
cmps
add
sbb
mov
sbb
jb
ins
arpl
sbb
push
pop
xchg
xor
sbb
jb
mov
push
jb
cdq
xchg
inc
add
or
in
mov
sar
or
sbb
jb
and
push
pop
mov
jb
je
push
add
hlt
jb
js
mov
mov
sbb
jb
sbb
inc
add
jmp
not
xlat
push
add
in
out
addr16
sbb
jb
xchg
aaa
call
fist
sbb
jb
xor
add
(bad)
jb
pushf
mov
add
shl
arpl
add
mov
inc
sbb
add
mov
adc
mov
push
dec
ja
add
stos
jb
jecxz
in
add
cmps
jb
cwde
add
sbb
imul
lahf
jb
fwait
(bad)
cmp
xor
out
add
xchg
jb
pop
retf
pop
add
xchg
jb
and
mov
call
mov
(bad)
jb
jnp
lods
add
xor
sbb
test
add
js
push
das
out
add
jne
ficomp
jno
into
(bad)
jae
add
ins
jae
push
mov
add
push
imul
or
addr16
arpl
jae
adc
add
pop
jae
loopne
out
sbb
cs
cdq
add
push
jae
outs
sub
add
push
jae
jns
add
push
mov
jae
bt
add
inc
jae
mov
pop
add
inc
jae
dec
mov
jae
mov
loope
sbb
jae
(bad)
or
add
ss
stos
xchg
jno
sbb
jae
cwde
shr
sbb
inc
push
sub
sbb
jae
aaa
outs
loop
sbb
jae
mov
adc
sbb
jae
xor
dec
add
sbb
and
jae
add
cli
add
adc
mov
rol
sbb
jae
dec
pop
xchg
add
or
mov
sbb
jae
in
scas
add
pop
jae
mov
add
call
jmp
jae
fist
jae
cmps
xchg
add
sbb
jae
(bad)
(bad)
jmp
dec
sbb
add
in
cs
outs
add
jecxz
es
mov
jae
and
sbb
jae
jbe
pop
add
(bad)
jae
dec
jmp
add
shl
or
jae
mov
enter
bndstx
sbb
jae
pop
stos
retf
shl
mov
add
mov
sub
mov
mov
fiadd
daa
inc
add
mov
call
jae
fcomp
jae
inc
or
add
cmps
jae
cmp
add
mov
jne
sbb
sbb
sbb
test
sbb
add
xchg
jae
dec
mov
fimul
mov
fcomp
jae
int
in
add
xor
call
add
jg
sub
jg
add
jns
mov
sbb
adc
das
jg
sbb
mov
ins
jo
xor
add
push
add
fs
sbb
and
sbb
jbe
aaa
sub
mov
inc
sahf
add
pop
jo
int
jmp
lahf
sti
add
push
jo
int
and
sbb
adc
and
cmp
ret
ins
add
inc
jo
in
add
inc
jo
push
add
sbb
jo
push
mov
add
cmp
fmul
in
sbb
jo
imul
jo
lods
ja
add
sub
out
push
mov
jo
xchg
adc
sbb
jo
shl
or
sbb
jo
jne
repnz
sbb
aam
sbb
jo
scas
(bad)
dec
add
push
jo
add
imul
adc
mov
or
inc
sbb
inc
add
or
mov
int3
add
add
inc
add
add
hlt
(bad)
jb
sbb
jo
pusha
jecxz
add
clc
jo
xor
mov
sbb
jo
mov
dec
add
lock
mov
out
jo
sub
call
fld
sbb
jo
in
mov
jo
cdq
stos
push
add
fnstenv
push
iret
loopne
sbb
jo
pop
ret
rol
sbb
jo
hlt
test
stos
test
sbb
jo
xchg
daa
hlt
add
(bad)
jo
xchg
retf
sub
sbb
jo
mov
mov
call
sti
sahf
add
mov
add
(bad)
add
mov
push
inc
pop
sbb
sbb
mov
jb
xchg
add
cmps
jo
dec
mov
add
mov
mov
(bad)
ficomp
xor
sbb
xchg
add
xchg
jo
aam
pop
add
xchg
jo
pop
(bad)
lea
mov
jo
adc
jmp
sbb
inc
add
xor
jecxz
add
jge
mov
pop
mov
sbb
mov
sbb
jbe
cmp
add
jo
ficom
sti
add
sbb
(bad)
popf
sbb
push
push
(bad)
sbb
jle
daa
das
add
popa
jno
sbb
jno
or
jno
(bad)
xor
test
jno
je
push
add
dec
jno
add
jno
jge
std
add
inc
jno
fstp
add
inc
jno
sub
cmp
mov
(bad)
add
xor
add
xchg
add
xor
pop
push
mov
sbb
jno
neg
add
sub
call
jle
sbb
cmp
push
push
pop
in
sbb
jno
pop
cmp
cmp
sbb
sbb
jno
imul
mov
fwait
push
add
or
outs
add
or
pop
dec
adc
sbb
jno
stos
dec
data16
add
push
iret
in
sbb
jno
mov
stc
jno
retf
add
div
and
sbb
jno
fwait
outs
aad
sbb
jno
fisub
jno
xlat
pop
fild
sbb
jno
mul
jb
sbb
jno
jno
aas
add
fdiv
ret
add
fdiv
dec
sti
nop
add
xlat
jno
(bad)
aas
inc
add
shl
mov
jno
fist
jno
stos
mov
add
(bad)
jno
ds
add
shl
mov
jno
dec
repz
add
mov
jle
sbb
xchg
add
mov
bound
retf
in
sbb
pop
add
stos
jno
dec
dec
sbb
mov
aaa
jbe
sbb
push
add
popf
jno
xor
sub
sbb
sub
sbb
xor
sbb
jg
sbb
mov
sbb
imul
test
ficomp
cld
add
xor
sbb
push
repz
add
repnz
xchg
adc
dec
jmp
jmp
jbe
adc
pop
add
push
xchg
addr16
xchg
add
sbb
mov
pop
jbe
dec
imul
sbb
and
push
jbe
pop
pop
push
add
push
jbe
mov
dec
jbe
pop
add
sbb
cli
hlt
cmp
add
inc
jbe
pop
xor
jb
scas
hlt
add
aas
jbe
mov
add
cmp
cld
sub
add
xor
or
sbb
sbb
jbe
stos
jecxz
add
sub
(bad)
div
xor
sbb
jbe
fmul
push
add
and
call
jbe
out
adc
sbb
jbe
xor
cmps
add
adc
stos
popf
pop
inc
add
adc
repz
xchg
add
or
pop
sbb
add
dec
add
add
add
push
add
(bad)
jbe
sub
jbe
xchg
jnp
add
div
jecxz
pop
sbb
jbe
test
jbe
pop
or
add
jmp
sbb
jbe
mov
popf
add
loope
mov
pushf
add
fdiv
sahf
dec
mov
sbb
jbe
mov
(bad)
jbe
mov
push
add
shl
mov
int3
jbe
pop
repz
sbb
jbe
lods
mov
add
(bad)
jbe
call
ror
shr
sbb
add
mov
inc
add
mov
mov
sbb
mov
sbb
lock
test
out
fstp
jbe
fs
mov
sbb
repz
sahf
jbe
add
jbe
inc
dec
lock
xchg
jbe
(bad)
adc
add
nop
jbe
cmp
jo
sbb
das
add
mov
sbb
add
xchg
loop
jne
sbb
adc
sbb
adc
ja
shl
add
jbe
push
xchg
test
sbb
push
cdq
push
jbe
sbb
in
cmp
sbb
ret
ret
gs
rol
add
arpl
fistp
ja
mov
pop
ja
fld
ja
mov
or
sbb
jb
xchg
mov
sbb
jae
add
dec
ja
mov
inc
ja
out
rol
inc
ja
sub
aas
ja
imul
sbb
ja
(bad)
ja
mov
add
pop
jg
add
sub
pop
add
sub
xchg
ja
icebp
adc
neg
pop
retf
add
pop
ja
jne
in
add
sbb
aaa
xchg
je
sbb
ja
or
adc
and
or
sbb
sbb
ja
xor
lea
sbb
sbb
sbb
ja
scas
jae
add
std
ja
pusha
xor
add
stc
ja
cmps
fist
sbb
ja
fnstcw
add
lock
outs
push
fadd
sbb
ja
pop
out
mov
sbb
ja
ret
add
out
out
lock
sbb
ja
sbb
add
fdiv
sbb
ja
mov
ja
repz
dec
(bad)
pop
dec
add
int3
ja
fnsave
add
leave
ja
lock
ja
sub
and
sbb
ja
adc
ja
pop
xchg
sbb
jmp
aas
pop
add
mov
push
jmp
ja
xor
add
test
xor
sbb
movs
add
mov
xchg
add
lahf
ja
ss
dec
add
fwait
ja
(bad)
add
xchg
ja
jo
loopne
sbb
adc
sbb
jmp
push
sbb
add
xchg
sahf
stos
jmp
sbb
data16
jge
or
add
jns
mov
jmp
div
shl
mov
(bad)
fild
sbb
lock
je
dec
lahf
mov
push
pop
pop
jp
sbb
scas
icebp
dec
popf
add
pop
je
(bad)
out
push
add
push
je
mov
jno
sbb
out
cmp
add
dec
je
jb
pop
add
dec
je
pushf
out
in
add
inc
je
sbb
sbb
mov
out
add
ds
or
add
cmp
imul
dec
aas
fild
sbb
je
loop
lsl
sub
test
sbb
je
test
fadd
sbb
loop
adc
sbb
je
xor
je
outs
sbb
add
sbb
daa
aam
sbb
jecxz
sbb
je
mov
add
or
int3
add
or
ja
add
add
not
repnz
cmp
jp
daa
pop
add
in
je
retf
(bad)
hlt
add
in
idiv
mov
add
jecxz
push
xchg
xchg
sbb
je
xchg
das
fwait
add
fidiv
inc
cli
add
aam
ret
xchg
add
shl
push
in
add
int
mov
out
sbb
je
aaa
daa
test
mov
cli
add
ret
mov
mov
add
mov
retf
mov
push
sti
addr16
sbb
je
sbb
push
add
stos
je
iret
xor
inc
adc
je
mov
pushf
je
popf
mov
je
jae
lea
sbb
add
xchg
je
xor
inc
add
mov
stos
in
add
mov
dec
add
xchg
xchg
aaa
add
xor
mov
cs
pop
cmc
add
jne
jp
mov
jne
popf
inc
sbb
sbb
push
pop
fbstp
sbb
es
cmp
sbb
jle
sub
add
pusha
jne
pop
sbb
add
pop
jne
jge
jbe
sbb
sub
push
jne
dec
aaa
fadd
sbb
push
scas
adc
add
dec
jne
sti
lahf
dec
add
dec
jne
add
add
inc
jne
test
sbb
sbb
xor
jmp
add
cmp
retf
lar
cmp
jl
jecxz
sbb
jne
mov
xor
jb
cld
add
cs
sub
add
sub
lds
rol
and
jb
outs
rol
sbb
jne
loope
rol
sbb
add
sbb
push
or
add
adc
mov
mov
sbb
jne
pop
out
mov
jmp
jne
(bad)
out
jp
sbb
jne
lea
add
(bad)
jne
dec
sti
jge
sbb
jne
neg
jmp
cli
push
jnp
add
lock
pop
add
in
jne
imul
jbe
jmp
add
out
push
xchg
imul
loopne
push
add
test
fwait
daa
xchg
add
fdiv
call
(bad)
imul
add
shl
(bad)
add
lds
or
ret
shl
out
das
add
mov
and
sbb
or
sbb
arpl
sbb
leave
add
scas
jne
test
add
stos
jne
pop
push
push
add
cmps
jne
mov
jmp
dec
stos
jae
add
popf
jne
fiadd
jne
repnz
jmp
daa
lahf
add
nop
jne
movs
xchg
jae
sbb
repz
mov
lds
jne
mov
xor
sbb
mov
jp
mov
sbb
or
jae
sahf
push
or
mov
jp
fimul
jp
arpl
test
sbb
dec
mov
add
sbb
jbe
out
add
pop
jp
inc
inc
add
push
jp
sti
and
adc
xchg
add
dec
jp
jae
rol
sbb
call
jp
js
xor
sbb
xchg
dec
mov
jp
mov
ss
sahf
mov
add
xor
sbb
das
jp
dec
outs
mov
adc
cdq
add
and
je
sbb
jp
je
xor
sbb
push
add
sbb
mov
pop
jp
cmc
stos
inc
add
adc
call
or
sbb
sbb
jp
dec
call
push
(bad)
outs
fild
sbb
jp
cs
jp
clc
push
sub
sbb
jp
mov
mov
sbb
jp
adc
jmp
stos
in
pusha
add
out
xor
loopne
sahf
loope
pop
add
fnstsw
loope
xchg
add
fidivr
lahf
push
add
aam
jb
pop
xlat
add
sar
cwde
adc
sbb
jp
push
adc
sbb
jp
fidiv
inc
sbb
jp
sbb
pop
add
ret
jp
cmp
jp
(bad)
add
mov
rol
sbb
or
sbb
push
add
stos
jp
pop
push
mov
xor
add
mov
call
xchg
call
sbb
add
xchg
jp
jnp
int3
add
(bad)
jp
(bad)
add
mov
cmps
pop
cdq
add
xchg
pop
retf
int
sbb
jp
dec
add
jnp
into
push
out
add
jbe
mov
sbb
data16
sbb
(bad)
xor
sbb
mov
out
test
sbb
ss
retf
js
sbb
or
pop
jnp
xor
mov
mov
sbb
test
cmps
call
sahf
pop
imul
push
and
mov
sbb
jnp
inc
(bad)
add
xor
pop
(bad)
mov
jnp
inc
cmp
sbb
pop
sbb
jnp
aas
ja
add
daa
jnp
retf
arpl
add
and
(bad)
sbb
sbb
jnp
add
add
sbb
mov
adc
popa
dec
ja
sbb
outs
add
or
xadd
sbb
jnp
inc
inc
adc
sbb
jnp
sbb
jnp
ins
aas
jmp
sbb
jnp
or
jnp
adc
mov
or
jnp
xchg
stos
push
add
jmp
and
push
push
jecxz
(bad)
xor
mov
sbb
jnp
lds
pop
add
fidivr
das
fistp
sbb
jnp
inc
daa
add
sar
xchg
daa
push
add
iret
jnp
jge
adc
sbb
jnp
xor
jnp
imul
jnp
mov
mov
jbe
sbb
add
mov
not
test
sbb
iret
add
scas
jnp
xchg
iret
push
xor
arpl
mov
sbb
xchg
add
popf
jnp
cs
lods
add
cdq
jnp
adc
add
xchg
jnp
jns
cli
add
xchg
jnp
add
cmp
sbb
fiadd
sbb
xchg
add
cmp
pop
cmps
add
jl
mov
xor
add
jnp
call
js
imul
js
mov
mov
sbb
fisub
data16
pop
xchg
sbb
jmp
js
inc
fld
mov
out
adc
sbb
adc
dec
js
push
addr16
add
dec
js
and
add
inc
js
std
retf
xchg
add
inc
js
(bad)
jl
sbb
fbld
js
dec
jecxz
add
xor
and
xor
or
pop
add
cs
pop
mov
js
cld
out
add
and
rol
sbb
js
(bad)
out
add
pop
js
(bad)
arpl
sbb
js
lahf
daa
loope
sbb
jmp
cmps
sbb
sbb
js
sbb
into
add
or
adc
push
add
add
sti
add
add
cld
fisttp
jb
fstp
sbb
js
out
inc
stos
add
bnd
int
cmp
sbb
js
xchg
xchg
inc
add
jmp
jp
pop
add
in
push
xor
add
loopne
push
dec
xlat
add
fnstsw
xchg
js
cmps
mov
add
aam
inc
xor
js
push
retf
push
add
int3
js
xchg
cmp
sbb
js
push
cmp
add
lds
fs
add
sar
mov
js
arpl
add
mov
pusha
add
mov
jb
das
push
adc
scas
js
pop
sub
sbb
retf
movs
js
stos
fbstp
sbb
out
add
lahf
js
mov
cdq
js
cwde
fwait
stc
add
xchg
js
pop
jnp
add
nop
js
mov
inc
add
(bad)
js
imul
add
cmp
das
cdq
add
jge
jp
adc
sbb
bound
cmps
sub
sbb
(bad)
(bad)
aad
sbb
mov
push
jle
sbb
xor
jns
pop
jae
add
gs
mov
sbb
sbb
stos
cmps
daa
mov
or
pop
jns
das
mov
add
push
jns
mov
jns
neg
cmp
sbb
dec
call
dec
jns
and
sbb
cs
jns
lods
push
mov
sbb
jns
jl
add
cmp
jle
jle
sbb
jns
ins
aas
fiadd
sbb
jns
inc
jg
add
das
jns
mov
loopne
sbb
jns
xchg
add
daa
jns
stos
fstp
add
and
push
pop
cmp
sbb
jns
add
cwde
add
sbb
(bad)
adc
add
adc
mov
sbb
jns
push
imul
pop
out
ja
sbb
jns
sbb
mov
sbb
repnz
jmp
add
add
add
add
cld
jns
stos
rcr
stos
das
addr16
inc
movs
add
lock
ss
out
sbb
jns
fsub
jmp
repz
out
and
jns
out
scas
out
add
fdivr
xchg
jmp
ficom
aad
push
pop
mov
add
sar
push
xchg
fnstcw
add
leave
jns
js
cdq
add
(bad)
jns
loopne
mov
shl
xchg
add
mov
xchg
add
mov
dec
add
mov
xchg
popa
xor
add
mov
push
pop
add
lods
jns
xlat
xchg
mov
sbb
inc
sbb
jne
sbb
jae
sbb
cmps
add
call
sbb
add
xchg
jns
xor
jns
loopne
dec
add
mov
cld
pop
and
sbb
push
add
cmp
and
pop
fs
add
jns
mov
outs
mov
sbb
xor
ffreep
add
jo
mov
jecxz
add
outs
jle
imul
sbb
push
push
lds
sbb
add
push
pop
add
bound
adc
push
inc
jns
dec
add
pop
jle
add
jle
int3
scas
outs
add
push
jle
cmp
xchg
sbb
and
lahf
add
dec
jle
dec
fistp
add
inc
jle
rol
add
inc
jle
mov
cmp
jmp
push
mov
add
ss
jmp
xor
sbb
jne
sbb
mov
xchg
icebp
add
sub
xchg
and
add
and
cs
test
inc
push
pop
add
pop
jle
sbb
add
sbb
loop
sub
sbb
out
or
adc
dec
cmps
add
or
add
add
add
or
fist
add
pop
jle
cwde
adc
stos
fild
add
cld
jle
fcomip
adc
sbb
jle
aad
iret
add
bnd
or
sahf
add
out
jle
sub
jle
dec
pop
ret
out
cmp
jecxz
scas
mov
repz
fidivr
arpl
jle
pop
adc
add
xlat
jle
xor
sar
jl
arpl
sbb
jle
fstp
and
sbb
jle
push
fwait
data16
(bad)
jle
add
mov
sbb
jle
iret
(bad)
jg
sbb
or
sbb
in
add
mov
inc
shl
jle
xor
add
lods
jle
test
stos
jle
dec
xlat
inc
add
cmps
jle
jmp
out
loopne
cmp
sbb
mov
sbb
clc
add
xchg
jle
out
push
or
sbb
push
add
lea
push
and
sbb
jp
sbb
fiadd
sbb
aam
sbb
push
test
add
jns
ss
icebp
add
jbe
mul
jo
xor
jmp
and
add
push
sub
aam
sbb
mov
arpl
pop
xchg
imul
pop
jg
pop
jae
add
pop
jg
dec
jmp
add
push
jg
sar
add
push
jg
and
jg
leave
jae
add
inc
jg
sbb
jg
lods
xchg
rol
sbb
jg
shl
jg
stos
dec
add
ss
dec
jg
add
xor
rol
add
sub
aad
sbb
jg
and
and
dec
add
and
or
lods
add
sbb
dec
sub
push
lahf
add
adc
fsubr
add
push
jg
out
lock
or
mov
out
sbb
jg
inc
pop
cmps
add
add
mov
add
std
jg
and
add
clc
jg
push
shl
add
hlt
jg
pop
daa
mov
sbb
jg
(bad)
das
inc
add
in
jg
dec
ja
add
jmp
sbb
jg
fcmovnb
add
fdivr
call
xor
test
and
sar
inc
(bad)
mov
sbb
jg
sbb
add
lds
lods
arpl
add
sar
xor
add
mov
scas
add
mov
xor
sbb
mov
sbb
mov
into
test
icebp
add
stos
jg
fwait
imul
sbb
xchg
add
sahf
jg
repz
add
cwde
jg
inc
outs
fld
sbb
add
nop
jg
xchg
retf
fild
sbb
rol
sbb
jae
sbb
add
cmp
pop
mov
sbb
div
outs
add
jp
sahf
cmp
in
sbb
popa
xlat
push
sbb
push
in
push
add
ins
jl
inc
and
add
push
test
sbb
fiadd
xchg
cmp
mov
fcmovnbe
add
pop
jl
imul
mov
mov
mov
add
push
jl
movlps
and
jae
add
inc
jl
int
xchg
add
inc
jl
imul
jl
repz
add
cmp
fist
sbb
lock
xor
(bad)
push
loop
lahf
add
sub
jae
add
and
jnp
sbb
jl
xor
push
jl
inc
and
jl
repnz
scas
add
adc
push
add
adc
mov
jl
xor
add
mov
add
mov
sbb
jl
jb
test
sahf
xor
push
add
stc
jl
test
add
idiv
xchg
add
repz
std
pop
(bad)
add
out
jl
sub
add
call
int3
add
in
sahf
xlat
pop
add
loop
push
xchg
add
fnstsw
fcmovnb
add
fidivr
and
sbb
jl
sbb
jl
test
iret
jl
or
nop
add
retf
jl
outs
ja
add
(bad)
jl
cmp
jl
rcr
add
mov
cmp
sbb
test
sbb
xchg
add
mov
ds
pop
call
jcxz
sbb
or
sbb
scas
add
mov
pop
add
popf
jl
xchg
add
call
sbb
mov
sbb
dec
add
(bad)
jl
gs
add
mov
aas
lea
sbb
daa
add
cmp
je
sbb
xor
loope
sbb
and
jecxz
add
jbe
ds
push
xor
sbb
push
int
adc
sbb
push
mov
xchg
add
push
add
sbb
bound
out
sbb
cmps
in
push
xor
sbb
es
fld
sbb
add
mov
push
out
and
push
das
in
sbb
(bad)
pop
sbb
sbb
(bad)
in
push
add
inc
jge
mov
mov
sbb
fidiv
jg
add
cmp
push
or
add
ss
bound
repnz
xor
mov
jle
sbb
jge
mov
fild
sbb
jge
ret
cmp
ror
xchg
add
and
sbb
cmp
sbb
jge
dec
jae
add
sbb
cmp
jge
inc
jge
sbb
jge
sbb
or
les
jge
jge
lar
add
jl
outs
add
cld
jge
cs
iret
add
stc
jge
add
pop
add
idiv
leave
xor
add
icebp
jge
in
ret
stc
add
out
jge
push
out
add
call
xor
sbb
jge
and
pop
add
loope
outs
imul
jge
adc
add
fstp
shr
fild
sbb
jge
jmp
sar
out
add
into
jge
fsub
jge
ret
add
(bad)
jge
or
hlt
add
sar
pop
jge
sbb
add
mov
jmp
mov
jge
mov
lods
jge
js
adc
scas
fsub
lea
sbb
xchg
sbb
sub
sbb
cmp
sbb
add
jp
(bad)
adc
sbb
cmp
sbb
add
mov
and
add
test
leave
jae
add
cmp
dec
pop
add
jg
mov
sbb
push
outs
dec
sbb
sbb
es
jbe
sbb
xchg
push
stos
jo
sbb
inc
pop
out
aas
add
push
push
int
add
sbb
and
add
arpl
jno
dec
add
pop
bound
sbb
scas
mov
add
push
(bad)
dec
fld
sbb
pop
mov
stos
add
dec
bound
mov
dec
(bad)
shr
(bad)
cli
mov
leave
add
inc
bound
sbb
mov
push
add
cmp
sti
mul
add
aaa
bound
sbb
(bad)
into
(bad)
retf
push
add
cs
(bad)
sub
pop
out
add
sbb
bound
iret
pop
add
and
mov
pop
bound
sbb
bound
sbb
bound
sbb
(bad)
into
mov
(bad)
add
or
jno
sbb
not
add
out
aad
sbb
bound
ss
add
cli
bound
pop
push
add
hlt
bound
mov
lock
retf
push
add
in
(bad)
ficom
ins
add
call
sub
sbb
bound
or
inc
add
jecxz
cmps
fwait
arpl
(bad)
mov
add
fisub
lds
add
xlat
bound
leave
pop
jnp
sbb
bound
repz
sbb
bound
test
cmps
add
retf
bound
and
add
les
sub
(bad)
sbb
bound
xor
sbb
inc
add
mov
add
jmp
add
mov
mov
jl
sbb
adc
sbb
mov
sbb
mov
clc
add
lahf
bound
sbb
inc
add
xchg
bound
jg
add
nop
(bad)
(bad)
shl
imul
(bad)
bound
jle
mov
lods
pop
add
pop
or
add
and
test
add
jp
sub
fld
sbb
sub
outs
arpl
sbb
jmp
arpl
retf
mov
sbb
pop
aaa
sub
sbb
cs
fld
sbb
sahf
cdq
add
sbb
push
sbb
dec
arpl
and
add
dec
arpl
and
ds
push
sti
add
inc
arpl
hlt
ja
add
cmp
fiadd
sbb
arpl
cmp
add
arpl
sbb
arpl
sbb
arpl
adc
sbb
arpl
fisttp
sbb
jp
jmp
add
and
lds
add
sbb
mov
mov
arpl
sbb
arpl
sbb
arpl
imul
arpl
dec
mov
loop
sti
pop
add
add
pop
lahf
adc
add
add
pop
xchg
push
cmp
arpl
sbb
arpl
sbb
add
repz
jecxz
aas
add
in
arpl
or
lar
jmp
pop
mov
out
loop
xchg
jo
sbb
arpl
or
add
fbld
mov
arpl
push
aaa
stos
add
aad
cmp
push
sbb
arpl
sbb
arpl
mov
retf
arpl
sbb
arpl
jnp
rol
sbb
arpl
sbb
mov
sbb
outs
add
mov
add
ja
add
mov
sbb
lods
arpl
xor
ret
test
mov
dec
mov
sbb
ret
mov
mov
push
and
arpl
out
aad
sbb
add
nop
arpl
sbb
repz
mov
xchg
pop
jo
sbb
dec
add
and
sbb
sbb
inc
das
add
jnp
out
aaa
rcl
cs
inc
add
jo
data16
add
outs
pusha
sahf
sub
xor
sbb
ss
add
gs
(bad)
out
repz
add
popa
pusha
(bad)
outs
daa
fiadd
sbb
xchg
pop
(bad)
add
pop
pusha
push
and
mov
sbb
push
in
aaa
add
push
pusha
or
push
add
dec
pusha
xchg
pusha
mov
xchg
add
inc
pusha
inc
sbb
rol
sbb
mov
add
cmp
push
add
cmp
ret
add
xor
jmp
pusha
jb
arpl
sbb
add
jl
retf
mov
sbb
call
jb
pop
mov
jb
cmp
add
ins
jb
push
xchg
in
sbb
inc
imul
jb
pop
jmp
add
pusha
jb
mov
add
pop
jb
loope
test
xor
push
bound
sbb
out
adc
mov
sbb
mov
sbb
daa
mov
add
dec
jb
mov
inc
jb
cmp
pop
add
inc
jb
stc
pop
cmp
sbb
jb
scas
jecxz
add
cmp
(bad)
daa
repnz
xor
outs
pop
mov
jb
cmps
daa
sbb
sbb
jb
adc
or
sbb
jb
aam
jmp
sti
dec
add
and
ret
add
sbb
in
sbb
jb
sub
xchg
add
adc
into
pop
das
cmp
sbb
jb
dec
fadd
sbb
jb
cwde
pop
adc
pop
mov
add
out
sbb
jb
xchg
or
add
(bad)
jb
mov
stc
jb
jo
sbb
sbb
jb
dec
bswap
add
repz
cwde
fisttp
sbb
jb
test
jmp
bound
sub
sbb
jb
jmp
mov
pop
ins
add
fbstp
aas
push
mov
repnz
cmp
sbb
jb
inc
jg
add
shl
xchg
jmp
add
into
jb
inc
scas
test
sbb
jb
xchg
pop
jb
sbb
jb
pop
pop
cmps
add
ret
jb
mov
cmps
add
mov
add
mov
jmp
sbb
add
bound
scas
jb
push
sbb
inc
jns
test
sbb
push
add
mov
lods
add
popf
jb
daa
jecxz
add
fwait
jb
pop
jnp
add
xchg
jb
inc
add
sbb
inc
add
lea
inc
ret
xchg
add
mov
stos
fwait
std
add
test
ins
stos
rol
sbb
push
add
jl
stos
(bad)
mov
add
jnp
cli
adc
loope
sbb
add
xor
sbb
push
movs
ret
cmp
mov
sbb
repnz
pop
xor
sbb
xor
pusha
jae
fnsave
jae
push
pop
in
sbb
(bad)
into
imul
das
jns
sbb
pop
aam
test
sbb
loop
iret
jge
sbb
mov
daa
repnz
inc
jae
inc
arpl
add
inc
jae
xchg
cmp
add
cmp
add
cs
dec
xchg
add
aaa
jae
and
xor
neg
jae
or
mov
sbb
jae
fcmovne
sub
sbb
jae
inc
push
in
add
and
mov
push
jae
cmp
sbb
jae
mov
pop
jae
jp
repnz
adc
jmp
into
push
pop
jle
sbb
jae
push
xchg
add
push
jns
add
sbb
jae
jge
xlat
add
div
scas
lahf
outs
add
bnd
or
in
jae
pop
adc
jmp
sbb
jae
push
push
fld
sbb
jae
inc
pop
or
sbb
jae
xchg
shl
add
fidiv
pop
outs
retf
aam
pop
jmp
add
shl
add
jae
rcr
jae
mov
lds
jo
js
sbb
jae
in
jae
add
mov
test
sbb
out
add
mov
add
mov
jae
jmp
scas
jae
inc
jecxz
add
test
inc
add
cmps
jae
fnstcw
add
mov
adc
sbb
loopne
sbb
xlat
add
xchg
jae
cmps
lar
sbb
xor
stos
push
jmp
add
mov
mov
xchg
imul
rol
sbb
stos
dec
add
jns
mov
and
add
je
sahf
ret
push
sbb
xchg
xor
add
ins
jo
lods
bswap
add
imul
sbb
dec
leave
ja
add
bound
pop
or
push
adc
add
pop
jo
ret
add
push
jo
or
adc
sbb
mov
dec
jae
xchg
sbb
xor
inc
jo
inc
push
dec
add
inc
jo
rcl
cwde
add
ds
add
cmp
sbb
jo
add
add
xor
cmps
je
add
xor
icebp
scas
aam
sbb
jo
xlat
aas
jbe
sbb
jo
add
jo
movs
xchg
mov
mov
sbb
arpl
sbb
jo
aas
ja
add
adc
sbb
ins
add
adc
int
movs
add
or
lock
or
cmps
iret
and
xchg
jne
jo
sbb
jo
pop
xchg
mov
sbb
jo
xchg
bound
sbb
jo
push
mov
jo
test
outs
add
repz
push
mov
into
ss
inc
add
jmp
sbb
jo
mov
mov
mov
fidiv
jo
jns
sbb
jo
jge
xchg
add
aad
or
(bad)
fadd
sbb
jo
push
out
sbb
jo
(bad)
mov
jo
sub
stos
add
(bad)
jo
cli
(bad)
xchg
add
shl
fisttp
push
sbb
jo
retf
add
mov
xchg
sahf
add
mov
push
pop
fistp
(bad)
sbb
push
add
movs
jo
test
add
mov
out
sbb
mov
sbb
arpl
sbb
add
nop
jo
mul
lahf
add
(bad)
jo
and
mov
push
dec
aas
ja
sbb
rol
sbb
pop
add
jge
out
repz
add
js
fdivrp
daa
mov
(bad)
arpl
sbb
mov
and
sbb
or
movs
add
imul
mov
jno
loope
fadd
sbb
push
xor
inc
add
pop
jno
xchg
outs
add
pop
(bad)
sub
sbb
and
std
add
push
jno
xchg
sub
dec
jno
int3
arpl
add
dec
jno
fisubr
jno
mov
inc
jno
mov
add
ds
pop
mov
add
cmp
ins
test
mov
xor
iret
(bad)
jmp
sbb
jno
repnz
jno
and
jno
cmc
arpl
jmp
jno
ror
mov
dec
push
add
adc
xchg
sbb
jno
cld
imul
sbb
jno
dec
xchg
repz
or
in
repz
push
jno
test
pop
add
add
jnp
mov
ds
ins
add
clc
jno
stos
aas
test
sbb
jno
pop
jnp
add
bnd
mov
jno
dec
mov
cmp
out
push
mov
dec
xchg
iret
add
fdiv
inc
outs
pop
add
(bad)
jmp
aad
jb
jnp
add
shl
sub
xchg
add
int
out
stc
pop
pop
add
leave
jno
and
jno
scas
xlat
test
xchg
mov
mov
sbb
cli
add
mov
mov
sbb
clc
add
lods
jno
loopne
sub
dec
xor
add
movs
jno
jg
add
mov
and
sbb
add
fwait
jno
xchg
jnp
add
xchg
jno
xchg
jno
adc
aam
sbb
xchg
add
mov
push
repz
sbb
movs
add
xor
sbb
es
out
add
jns
fdivp
rcl
add
jne
xor
jbe
jle
xor
sbb
repnz
push
lock
add
fs
sbb
mov
shl
xchg
sbb
and
add
pop
jbe
(bad)
das
add
sbb
add
push
jbe
das
pop
add
dec
jbe
cld
ja
add
dec
jbe
sahf
jg
add
inc
jbe
ins
inc
test
jmp
xor
push
ror
push
inc
pop
xor
sbb
(bad)
sbb
jbe
pop
mov
add
das
jbe
sub
jbe
movs
jmp
add
and
push
ja
pop
add
and
cwde
aaa
ret
sbb
dec
mov
add
sbb
xor
ret
add
push
jbe
out
sbb
sbb
jbe
jle
int
sbb
jmp
sbb
jbe
xchg
add
add
ss
sbb
jbe
in
push
add
cld
jbe
(bad)
jmp
add
cli
jbe
(bad)
xchg
enter
jbe
sbb
add
icebp
jbe
fs
in
add
in
jbe
faddp
inc
add
jmp
sbb
jbe
xchg
add
loope
bound
(bad)
push
add
fdiv
mov
(bad)
and
add
aam
ficom
fild
sbb
jbe
imul
data16
jbe
not
add
les
scas
daa
fwait
add
ret
adc
jbe
push
pop
rol
sbb
push
add
mov
es
(bad)
mov
cs
pop
pop
add
lods
jbe
ficomp
sub
sbb
adc
sbb
rol
mov
cld
add
sahf
jbe
popa
aaa
add
cwde
jbe
adc
add
xchg
jbe
rcr
mov
fbstp
fidiv
lahf
push
add
mov
pop
fcmovnbe
add
xchg
(bad)
lahf
jns
sbb
lods
add
jg
stos
div
pop
sbb
push
jno
pop
add
ja
dec
mov
jae
sbb
ret
add
ins
ja
enter
sbb
ret
push
sbb
sub
(bad)
add
sbb
push
and
pop
ja
mov
push
ja
jne
and
sbb
bound
dec
ja
sub
add
dec
ja
ins
xlat
je
sbb
pop
and
sbb
sbb
adc
sbb
ja
fsubr
adc
sbb
ja
inc
(bad)
push
add
xor
inc
js
hlt
add
xor
pusha
xchg
xor
pop
jl
sbb
ja
iret
jecxz
add
and
rol
sbb
ja
cmc
jmp
add
pop
ja
or
jno
sbb
ja
jle
fld
sbb
pop
add
adc
test
emms
bnd
sub
sbb
ja
sub
scas
add
add
and
ret
fild
sbb
ja
jmp
xchg
push
mov
ja
pop
out
inc
add
div
es
add
icebp
ja
loope
add
in
ja
jl
fadd
sbb
ja
lods
repz
sbb
ja
sbb
loop
cmp
dec
int3
add
fdiv
jecxz
mov
sbb
ja
imul
ja
sbb
sbb
outs
arpl
add
iret
ja
or
enter
sbb
sbb
ja
jg
mov
sbb
ja
(bad)
jg
add
mov
stos
add
mov
jb
sbb
add
mov
push
jmp
scas
ja
xor
test
inc
add
movs
ja
loope
xchg
add
mov
pop
add
popf
ja
push
fistp
add
call
sbb
add
xchg
ja
sbb
(bad)
ja
ret
add
mov
cld
das
adc
sbb
dec
add
xor
adc
add
jl
push
adc
jns
jbe
repz
add
je
dec
and
add
sbb
idiv
pop
movs
add
ins
je
dec
(bad)
movs
add
imul
fs
fxch
fld
sbb
push
call
ss
pop
je
sbb
sbb
sbb
sbb
push
je
je
dec
add
dec
je
(bad)
mov
add
dec
je
pop
aaa
push
add
inc
je
cmp
add
inc
je
call
aas
je
push
mov
(bad)
sub
add
xor
mov
scas
jne
sbb
je
(bad)
fisttp
call
je
ret
add
and
(bad)
out
pop
add
and
aaa
retf
add
sbb
jae
add
push
je
rcr
add
adc
pop
xor
sbb
add
sbb
test
sbb
je
and
std
je
lods
lahf
in
sbb
je
(bad)
add
cmc
je
in
jg
sbb
je
jb
out
sbb
je
xor
jmp
xchg
out
jp
sbb
je
cli
add
sbb
je
pop
inc
add
fbstp
outs
xchg
add
fidiv
sub
sbb
je
test
mov
iret
rol
sbb
je
pop
aaa
mov
sbb
je
jle
rol
les
imul
ret
je
push
push
add
mov
test
sbb
mov
sbb
pop
add
lods
je
xchg
das
jo
sbb
movs
add
movs
je
xor
add
pushf
je
push
fcomip
add
fwait
je
xchg
add
xchg
je
sub
add
mov
lahf
sahf
add
xchg
fisttp
sbb
dec
add
jbe
out
sti
ins
add
jae
ds
mov
jne
sub
pusha
add
inc
jne
jbe
mov
sbb
jne
movs
fistp
add
cs
adc
add
and
push
or
sbb
add
sbb
enter
sbb
add
or
(bad)
push
daa
add
add
out
adc
clc
jne
push
pop
jge
sbb
jne
(bad)
add
out
add
fwait
inc
add
fdiv
adc
mov
sbb
jne
or
add
retf
ficom
mov
mov
ret
jne
aaa
xchg
xor
sbb
add
mov
add
sbb
(bad)
add
mov
mov
sbb
in
sbb
mov
cmps
mov
jne
pop
adc
sbb
add
fwait
jne
in
mov
xor
ret
fiadd
sbb
lsl
mov
and
add
mov
imul
jne
cld
stos
dec
add
xor
sub
add
jg
mov
rol
sbb
pop
rcr
add
jne
mov
sbb
out
push
mov
mov
outs
add
push
mov
dec
mov
fucompp
jae
add
arpl
ins
aaa
add
sbb
mov
pop
jp
pop
stos
lods
add
push
jp
lea
jecxz
sbb
fisubr
dec
jp
lods
arpl
add
dec
jp
and
inc
jp
xor
mov
rol
push
adc
jp
jecxz
jnp
sbb
sub
sbb
jp
and
xor
sbb
mov
dec
jg
add
daa
jp
neg
jp
jge
hlt
add
sbb
jnp
sbb
jp
jle
sti
add
pop
jp
and
jp
arpl
pop
add
push
jp
mov
mov
xchg
add
add
sbb
jp
test
clc
jp
stos
jg
add
hlt
jp
inc
xchg
push
add
bnd
pop
out
loope
sbb
jp
into
or
add
jmp
sbb
jp
mov
xor
sbb
jp
sbb
fistp
sub
jp
stc
retf
das
add
xlat
jp
out
(bad)
cli
add
sar
cmp
sbb
sbb
jp
mov
pop
add
lds
(bad)
xchg
sahf
add
sar
sbb
add
mov
or
sbb
dec
add
mov
ror
repz
sbb
clc
add
scas
jp
push
out
cmp
sbb
sbb
xor
and
add
mov
cdq
add
popf
jp
mov
pop
add
cwde
jp
outs
pop
or
xchg
inc
iret
add
xchg
jp
retf
scas
mov
sbb
dec
add
mov
jae
cmp
pop
xor
inc
sbb
push
add
jle
xchg
jnp
call
jnp
push
lahf
adc
sbb
mov
sbb
xor
imul
mov
jnp
add
add
sbb
push
fistp
jnp
popf
out
add
pop
jnp
inc
jae
add
push
jnp
ret
add
push
jnp
push
ret
adc
sbb
sar
rol
sbb
into
cmps
pop
xchg
sbb
pop
fbld
jnp
outs
int3
add
aas
jnp
push
push
add
cmp
and
push
add
ss
es
dec
shl
add
sub
sub
imul
add
sub
or
es
mov
jns
sbb
jnp
bound
add
sbb
cmps
add
sbb
xchg
jae
add
adc
jno
sbb
jnp
cmp
jnp
cmp
loop
sti
mov
mov
imul
sub
add
cmp
sbb
add
out
call
jno
jge
pop
add
fwait
jno
jns
sbb
sbb
pop
repz
shr
add
sbb
call
jbe
sub
test
sbb
jbe
push
retf
jnp
sbb
ja
sbb
add
ret
xor
rol
mov
adc
sbb
mov
pop
mov
add
cmp
aaa
mov
sbb
je
xor
je
sbb
je
mov
sub
jnp
add
daa
jb
sbb
jno
inc
fcmovne
add
or
sti
dec
jbe
sbb
jp
inc
cwde
add
les
aam
add
shl
ret
add
mov
enter
jno
movs
cmp
sbb
mov
ss
mov
ss
lahf
fld
sbb
push
add
jle
out
jecxz
add
outs
jbe
mov
stos
add
push
test
sbb
data16
scas
add
daa
jbe
mov
icebp
jbe
mov
out
jbe
pop
out
add
jmp
add
iret
jbe
mov
mov
jnp
sbb
xor
sbb
jb
sbb
xchg
add
cmp
push
xor
xor
or
cmp
push
inc
mov
push
jo
into
adc
push
sbb
jae
sbb
cmp
push
cmp
jb
sbb
cmp
push
xor
push
xor
push
sbb
mov
jle
pop
pop
imul
adc
out
jb
adc
and
into
ret
dec
push
xor
push
jg
mov
out
mov
or
xor
push
xor
push
jle
dec
mov
imul
dec
xor
sbb
cmp
push
xchg
jno
or
ds
xor
push
xor
push
bound
sub
dec
push
xor
push
jl
adc
xor
push
xor
push
push
cmp
push
xor
push
xor
push
push
jb
sbb
cmp
push
xor
push
popa
gs
push
jg
ret
cmp
push
xor
dec
push
test
dec
push
xor
push
stc
pushf
dec
push
jle
add
add
sbb
xor
push
xor
push
and
cmp
mov
jp
sbb
add
xor
push
xor
push
fucomp
dec
push
cmp
push
xor
push
xor
dec
push
test
dec
push
and
dec
inc
sbb
les
mov
xor
push
xor
push
frstor
adc
xor
push
xor
call
aaa
xor
push
xor
push
xor
push
arpl
sbb
jle
in
xor
push
xor
push
imul
mov
pop
les
mov
cmp
push
xor
push
xor
push
or
cmp
push
std
or
cmp
int
cmp
push
xor
push
mov
xor
xor
push
xor
push
xor
xor
cli
xor
push
xor
push
stc
pop
int3
mov
cmp
cli
xor
push
arpl
sbb
cmp
push
xor
push
nop
ror
clc
in
cmp
push
jmp
push
xor
dec
push
mov
cmp
ins
xor
push
xor
push
shl
dec
adc
pop
cmp
dec
xor
push
xor
dec
push
data16
fidiv
cmp
push
xor
push
xor
push
outs
jb
sbb
add
sub
sbb
cmp
jmp
dec
push
arpl
es
inc
or
push
jl
mov
cmp
push
xor
push
pop
push
dec
push
xor
push
push
jl
push
xor
push
xor
push
xor
xor
or
cmp
push
pop
ds
xor
push
xor
push
gs
dec
cmp
xor
push
xor
push
dec
ds
xor
push
gs
dec
cmp
xor
push
stc
(bad)
dec
push
fistp
js
xor
push
xor
push
xor
dec
push
jg
mov
test
push
in
dec
add
sub
xlat
pop
xor
push
xor
push
xor
xor
call
dec
push
ja
out
xor
push
xor
xor
jno
dec
push
aaa
popf
loopne
jg
add
xor
push
xor
push
jo
fst
jp
add
push
adc
xchg
xor
push
rol
dec
push
or
and
xor
push
xor
xor
jp
cmp
push
xor
push
imul
sbb
cmp
sub
cmp
push
push
fs
push
xor
push
xor
push
xor
push
aaa
popf
dec
aad
jb
pop
xor
push
mov
stos
psllw
jb
sbb
add
xor
push
xor
push
(bad)
cmp
in
xor
push
xor
xor
jp
cmp
push
xor
push
cs
sub
add
xor
push
xor
push
pop
mul
add
push
and
pop
xor
push
xor
push
xor
aas
jb
sbb
rol
aas
push
jbe
gs
push
clc
add
add
jle
sub
xor
push
xor
pop
sub
cli
pusha
jecxz
pop
jg
sbb
cmp
push
xor
push
std
dec
dec
push
jae
(bad)
xlat
xor
dec
xor
push
cmp
push
mov
push
dec
les
cmp
cmp
cmp
push
xor
push
mov
or
xor
push
jle
dec
mov
cmp
jb
cmp
cmp
push
xor
push
push
movs
dec
push
xor
push
xor
push
xor
push
gs
ds
dec
add
cmp
nop
xor
xor
xor
push
xor
push
xor
push
jno
dec
xor
xor
push
xor
push
outs
ds
xor
push
xor
xor
cmp
cmp
push
xor
push
pop
push
and
pop
dec
push
xor
sub
cmp
push
pop
push
xor
cmp
push
(bad)
jae
popf
xlat
jae
sbb
cmc
cld
int3
addr16
ret
dec
push
xor
dec
push
xor
push
dec
fs
sbb
jae
pop
jg
or
and
sbb
xor
push
xor
push
xor
pop
xor
push
xor
push
dec
fs
sbb
add
into
cmc
cld
int3
addr16
ret
dec
push
xor
dec
push
aad
dec
push
fidiv
aaa
or
and
sbb
xor
push
xor
pop
xor
push
aad
dec
push
fidiv
aaa
or
repnz
xlat
xor
push
add
xor
push
xor
push
cmp
dec
in
cmp
push
xor
push
test
dec
in
push
xor
xor
push
cmp
dec
in
cmp
push
xor
push
xor
jae
cld
int3
and
in
sar
int3
or
push
xor
push
pop
inc
dec
push
xor
push
xor
outs
jb
sbb
cmp
push
xor
push
xor
push
pusha
popa
dec
mov
xor
push
xor
jb
cmp
cmp
push
xor
push
fstp
dec
push
jg
adc
xor
push
xor
dec
push
jo
or
aas
xor
push
xor
push
inc
outs
push
or
add
jae
add
imul
pop
jle
and
xor
push
xor
jnp
idiv
mov
or
xor
push
xor
push
jno
dec
push
popa
add
cmp
push
imul
jmp
jae
xchg
xor
push
xor
push
push
test
xor
push
xor
xor
push
mov
dec
push
sub
or
mov
add
xor
push
imul
dec
push
out
inc
or
cmp
push
xor
push
addr16
xchg
xor
push
xor
push
outs
jecxz
sbb
jg
and
xor
push
xor
push
xor
push
ins
jecxz
add
xor
push
xor
push
xor
push
ins
loop
add
xor
push
xor
push
jo
iret
sbb
xchg
cmp
push
jg
and
xor
push
xor
dec
push
adc
(bad)
jecxz
pop
stos
aaa
inc
sbb
loop
xor
push
xor
push
xor
dec
push
(bad)
jecxz
pop
stos
inc
inc
pop
cdq
imul
push
xor
push
outs
jecxz
sbb
mov
popf
or
jg
add
xor
push
mov
push
cs
xor
push
xor
push
out
inc
push
retf
test
aas
mov
cmp
push
jg
add
xor
push
mov
dec
lds
cmp
push
xor
mov
adc
or
adc
cmp
int
cmp
push
xor
inc
outs
sbb
aaa
mov
push
hlt
xor
sbb
cmp
push
xor
push
pop
sub
aam
cmp
push
xor
push
xor
push
xchg
inc
sbb
rcl
jg
stos
adc
cmp
push
pop
fs
push
xor
push
xor
push
test
cmp
push
jns
dec
push
jg
mov
cs
dec
push
xor
push
xor
push
sbb
xor
push
xor
push
xor
pushf
call
cmp
xor
push
xor
push
and
xor
push
xor
push
out
cmp
dec
push
xor
push
gs
cmp
fnstenv
jg
cmp
dec
xor
push
push
test
xor
push
xor
push
xor
inc
outs
push
or
or
xor
jp
cmp
push
xor
push
lea
mov
cmp
call
dec
push
xor
push
xor
push
xor
inc
outs
push
or
push
add
xor
push
xor
push
xor
and
xor
push
push
test
xor
push
xor
push
xor
push
popa
jmp
ds
push
and
dec
xor
push
xor
push
fs
push
cmp
push
xor
push
xor
dec
push
jg
mov
int
cmp
push
gs
dec
sbb
xor
jp
cmp
push
xor
push
push
pop
and
xor
push
cmp
push
push
pop
and
xor
push
cmp
push
xor
push
ficomp
add
cmp
jmp
push
add
loope
and
xor
sbb
cmp
push
push
fs
push
xor
push
xor
push
xor
push
jl
dec
mov
jg
add
xor
push
imul
dec
push
xor
push
xor
push
mov
int
cmp
push
xor
addr16
xchg
gs
aas
mov
in
xor
push
xor
push
xor
addr16
xchg
popa
push
add
pop
jbe
add
popa
push
add
cdq
imul
push
xor
push
xor
xor
call
dec
push
pop
jb
in
jae
rol
stos
imul
add
into
pandn
add
in
lock
sbb
cmp
push
cs
or
xor
jmp
dec
push
jg
add
xor
push
xor
push
imul
dec
push
xor
push
mov
int
cmp
push
xor
push
or
dec
xor
xor
push
jp
and
xor
push
xor
push
xor
xor
jmp
dec
push
fnsave
push
cmp
sbb
cmp
push
xor
push
push
cmp
dec
push
pop
jle
fnsave
sbb
cdq
std
adc
jg
sbb
inc
mov
adc
push
int
xor
push
xor
push
xor
push
inc
mov
push
push
push
int
xor
push
xor
push
aaa
lods
ins
(bad)
jo
int
(bad)
loop
aas
xor
push
pop
pusha
dec
push
xor
or
cmp
push
xor
push
out
push
es
xor
push
xor
push
push
pusha
dec
push
xor
cmp
cmp
push
xor
push
mov
dec
push
jg
out
or
cmp
push
xor
push
mov
dec
lds
xor
sbb
cmp
push
jne
dec
push
xor
mov
cmp
push
xor
push
ins
pop
or
outs
adc
or
cmp
push
xor
push
xor
push
dec
cmp
dec
push
xor
push
jo
dec
push
xor
push
xor
clc
xor
in
cmp
push
xor
push
jae
int
xchg
pop
adc
push
mov
nop
push
xor
push
xor
xor
push
xor
push
and
cmp
push
xor
push
ins
mov
ins
xor
cmp
push
xor
xor
push
xor
push
xor
push
pusha
mov
loopne
xor
push
gs
dec
adc
ins
jecxz
xor
cmp
push
xor
push
xor
xor
mov
cmp
push
xor
push
mov
jle
or
sbb
jg
push
sbb
cmp
sbb
cmp
push
test
sbb
inc
mov
sbb
(bad)
btc
sbb
(bad)
fidivr
and
sbb
jae
fild
aas
mov
out
shr
out
dec
retf
sbb
adc
sbb
mov
rcl
out
movs
mov
shl
loop
dec
xchg
adc
sbb
mov
or
in
pushf
inc
out
cwde
push
ins
call
in
mov
dec
mov
(bad)
ins
jge
aaa
and
sbb
sbb
out
es
(bad)
fstp
call
paddusb
sub
(bad)
cmp
adc
cmps
fwait
lods
data16
shl
(bad)
in
or
pop
loope
std
es
push
inc
sub
add
cmp
add
jecxz
push
rcr
dec
ret
out
add
sub
movs
jb
sbb
imul
in
movs
dec
shl
pop
daa
inc
cmp
call
fs
sub
or
xor
push
ins
call
test
xor
sbb
mov
add
int3
xor
mov
outs
les
(bad)
jle
mov
mov
dec
mov
stos
inc
push
sub
movs
into
daa
call
mov
cli
or
in
pushf
cmp
daa
adc
movs
and
pop
push
xchg
gs
add
outs
adc
int
bound
data16
ds
pop
mov
add
mov
sub
pop
push
ret
scas
ds
and
sbb
push
or
xlat
mov
push
pop
xor
or
andps
ret
js
fcomp
aaa
xchg
shl
and
imul
arpl
test
cmp
loop
push
std
stos
mov
loop
imul
sbb
test
jns
sahf
jbe
mov
pop
shr
test
cld
stos
mov
pushf
mov
and
test
cmp
cmp
cmps
xchg
push
push
dec
mov
stos
push
pop
xor
jns
lods
cmp
test
inc
jl
mov
pop
test
dec
aam
gs
xor
ret
lahf
pop
adc
jns
jo
cmps
into
loopne
call
xchg
add
and
les
and
mov
add
cmps
xchg
test
jae
jne
rcr
test
xchg
hlt
shr
or
and
movs
outs
cmp
add
pop
std
add
out
pop
mov
ins
push
cmps
mov
mov
test
sbb
sub
les
mov
pop
aas
inc
movs
cmp
dec
push
repz
mov
pop
jecxz
jmp
push
sub
sub
jne
rcr
test
xchg
hlt
and
mov
inc
das
scas
add
jmp
pop
std
add
out
pop
mov
ins
push
movs
mov
nop
lods
int3
cmp
test
sbb
sub
(bad)
(bad)
xchg
and
cli
test
icebp
xchg
inc
movs
cmp
dec
push
repz
mov
sub
push
sub
sub
jne
rcr
test
xchg
hlt
aaa
push
xchg
pop
mov
add
pop
std
add
out
pop
mov
ins
push
movs
mov
iret
lods
int3
cld
xor
ins
push
sbb
sub
(bad)
hlt
clc
and
sar
js
icebp
xchg
inc
movs
cmp
dec
push
repz
mov
and
push
sub
sub
jne
rcr
test
xchg
hlt
(bad)
push
pop
test
loope
movs
outs
cmp
add
pop
std
add
out
pop
mov
ins
push
movs
mov
test
test
sbb
sub
les
jp
cmp
inc
movs
cmp
inc
push
idiv
mov
push
xlat
movs
mov
xchg
test
rcl
test
pushf
hlt
mov
stos
test
push
jmp
pop
std
add
out
pop
mov
ins
push
cmps
mov
test
test
sbb
and
les
sti
aas
cmps
out
push
arpl
(bad)
fadd
jmp
repnz
scas
mov
cmps
movs
dec
cmp
add
pop
std
add
out
pop
mov
or
cmps
ror
mov
gs
jo
arpl
and
mov
bound
jp
aas
xchg
xchg
dec
movs
jbe
dec
push
(bad)
mov
fdiv
test
in
jg
jmp
push
dec
cmps
out
push
arpl
(bad)
fadd
adc
sub
mov
cmps
movs
dec
cmp
add
pop
std
add
out
pop
mov
or
movs
rol
xor
gs
jo
arpl
and
mov
arpl
mov
pop
aaa
dec
movs
jbe
dec
push
(bad)
mov
fdiv
test
ret
arpl
(bad)
push
dec
cmps
out
push
arpl
(bad)
fadd
lahf
push
mov
cmps
movs
dec
cmp
add
pop
std
add
out
pop
mov
push
outs
movs
shl
ret
mov
gs
jo
arpl
and
mov
popa
push
xchg
cli
sar
movs
jbe
dec
push
(bad)
mov
fdiv
test
add
push
dec
cmps
out
push
arpl
jae
popf
cdq
xchg
cwde
dec
arpl
mov
mov
xor
inc
push
pop
push
mov
pcmpgtd
fdiv
daa
xchg
nop
pushf
add
sbb
fadd
mov
and
fdivr
cld
pop
ds
ror
push
dec
cmps
out
push
outs
gs
jae
popf
cdq
xchg
cwde
add
and
xchg
or
push
mov
pcmpgtd
movs
sbb
test
push
jo
daa
xchg
nop
pushf
or
jo
jo
scas
mov
and
fdivr
cld
pop
push
jno
ror
push
dec
cmps
out
push
outs
gs
jae
popf
cdq
xchg
cwde
push
out
sub
xchg
or
push
mov
or
movs
rcr
call
sbb
push
mov
ins
push
movs
mov
arpl
sub
xchg
cwde
fcomp
sub
scas
test
push
into
movs
add
inc
lock
mov
in
mov
sub
daa
jae
popf
fst
movs
repnz
les
test
sbb
push
mov
ins
push
cmps
mov
dec
lods
enter
sub
xchg
cwde
fcomp
imul
test
adc
movs
add
mov
dec
movs
xchg
clc
loopne
xchg
or
push
pop
or
clc
(bad)
pop
add
push
push
jne
jae
sub
pushf
pop
push
add
shl
mov
and
add
inc
movs
repz
movs
fmul
test
push
push
test
and
xchg
xchg
int
dec
cmp
dec
enter
pop
xor
push
pop
or
clc
(bad)
pop
cdq
mov
add
retf
push
sbb
jae
sub
pushf
jg
add
mov
and
add
inc
movs
repz
movs
fmul
and
test
and
xchg
xchg
push
sub
mov
loopne
mov
pop
xor
push
pop
or
clc
(bad)
pop
sbb
stos
pop
(bad)
push
push
jne
jae
sub
pushf
fld
test
scas
mov
and
add
inc
cmps
repz
movs
fmul
test
and
xchg
xchg
push
(bad)
dec
cmp
xchg
or
push
pop
or
clc
(bad)
pop
inc
jg
clc
sbb
push
sbb
jae
sub
pushf
addr16
add
adc
cmp
movs
cld
out
add
inc
movs
repz
sahf
movs
fmul
xor
mov
(bad)
call
shl
add
cmps
sub
push
loopne
pop
and
mov
daa
fld
stos
mov
sahf
mov
dec
pop
sub
xchg
dec
je
jecxz
hlt
stos
sub
push
je
shr
nop
pop
mov
adc
push
fisttp
mov
(bad)
(bad)
mov
jmp
out
movs
jg
in
lock
in
push
cli
int3
out
movs
ja
dec
cmp
(bad)
(bad)
mov
jmp
out
movs
push
shr
push
shr
jbe
out
movs
dec
sar
push
shr
jbe
out
movs
dec
rcr
adc
retf
xor
rep
dec
ror
aam
outs
pop
or
movs
push
rcl
ret
movs
push
sar
xchg
in
mov
leave
mov
imul
cwde
push
ins
call
call
mov
(bad)
and
xor
(bad)
hlt
push
push
rol
inc
fistp
dec
push
or
inc
cmps
xor
nop
int
call
inc
lea
ja
mov
std
shl
push
add
mov
add
addr16
movs
fcom
dec
std
mov
jnp
push
jb
ja
dec
std
xchg
retf
test
adc
dec
shl
ror
ds
inc
mov
push
mov
imul
call
mov
cli
lock
inc
loope
mov
outs
fcom
rol
inc
add
test
pop
push
adc
repnz
std
mov
add
dec
sub
shr
add
dec
rol
stos
sahf
push
add
dec
into
or
mov
mov
cmp
add
adc
lock
add
add
push
shr
cmp
(bad)
sbb
add
push
xor
out
dec
std
fmulp
push
inc
sub
add
cmp
iret
pop
daa
inc
cmps
fild
push
in
ror
imul
in
stc
sub
vmovaps
popf
mov
sub
shl
sub
int
adc
sub
shl
sub
popf
test
popf
scas
jbe
out
stos
mov
mov
sub
popf
test
popf
scas
adc
and
mov
aad
imul
sbb
mov
cwde
fadd
inc
xor
nop
mov
sub
popf
mov
sub
lahf
idiv
popf
mov
sub
shl
sub
popf
jp
rol
mov
sub
shl
sub
popf
cmps
jo
popf
mov
sub
lahf
not
popf
sti
call
aam
xor
sub
popf
imul
pop
pushf
imul
popf
test
sar
and
lds
cwde
xor
jg
push
sub
lahf
imul
popf
test
sar
data16
dec
fsubp
mov
data16
rol
loop
retw
or
sub
popf
mov
imul
gs
test
sbb
cmp
sbb
scas
(bad)
mov
jp
xor
mov
imul
sbb
stos
fistp
scas
jbe
out
fwait
mov
xor
push
mov
sub
popf
imul
sbb
scas
cmps
int
imul
sbb
cdq
sub
movs
imul
sbb
scas
mov
push
sub
popf
imul
sbb
mov
cmp
push
int3
fild
imul
mov
idiv
mov
jg
outs
imul
int
test
fs
fcom
imul
xor
imul
ret
gs
cwde
mov
add
cwde
fcom
mov
sub
mov
lds
jp
sub
cwde
fdiv
sub
aam
sub
popf
idiv
sbb
mov
lds
xor
mov
(bad)
xor
cmc
into
das
inc
int3
and
push
int3
das
jp
xor
xor
sub
adc
imul
sbb
or
xor
sub
popf
mov
sbb
dec
rcl
cwde
fcom
imul
xor
inc
sbb
test
popf
mov
fnstenv
add
xor
shl
sub
popf
lods
data16
ins
sbb
xor
mov
(bad)
xor
cwde
sbb
cmc
xor
int3
and
push
int3
das
jp
xor
xor
sub
adc
imul
sbb
or
xor
sub
popf
mov
sbb
jnp
shl
add
sub
lahf
neg
sbb
inc
cwde
sub
mov
add
cwde
fsub
movs
jo
dec
inc
cwde
int3
push
hlt
sub
shl
sub
popf
and
mov
fcomp
mov
cwde
fadd
adc
nop
sub
xor
cwde
xor
cwde
sbb
out
mov
sub
popf
test
fs
fsub
sub
pushf
imul
sbb
xchg
jno
rol
in
push
imul
sbb
inc
cwde
mov
popf
imul
sbb
mov
jg
pop
imul
int
imul
sbb
mov
cwde
fadd
push
xor
cwde
fadd
inc
mov
nop
inc
cwde
pop
cmovp
xor
cwde
xor
cwde
sbb
out
mov
sub
popf
scas
aad
cmc
inc
sub
sub
sub
popf
test
sar
xor
adc
sub
lahf
imul
sbb
inc
cwde
xchg
pmuludq
leave
shl
sub
popf
scas
add
adc
sub
lahf
test
imul
fst
imul
sbb
imul
xor
sub
popf
imul
sbb
popf
fs
fadd
imul
xor
inc
ret
and
inc
cwde
aam
imul
int
imul
sbb
imul
sbb
mov
sub
popf
fwait
xor
psadbw
sbb
cmps
mov
xor
sub
popf
inc
mov
dec
test
dec
inc
cwde
in
movq
push
out
inc
test
sub
outs
shl
sub
popf
jp
rol
jae
sub
cwde
in
push
mov
xor
sub
popf
inc
cwde
mov
mov
sub
popf
mov
rol
cmp
mov
cwde
cwde
add
int3
shld
shl
sub
popf
adc
popf
dec
mov
xor
jne
out
sub
sub
mov
xor
ror
imul
sbb
test
sub
shl
sub
popf
xchg
adc
sub
popf
scas
push
std
hlt
imul
sbb
test
dec
inc
mov
dec
test
dec
scas
push
test
mov
sub
popf
mov
rol
cmp
sbb
jp
call
out
jnp
sub
sub
popf
imul
sbb
inc
and
sub
mov
test
sub
sub
sub
cs
cwde
adc
cwde
sbb
out
jnp
sub
sub
popf
mov
cwde
fsub
xchg
xor
nop
inc
cwde
in
push
imul
sbb
fs
sbb
xor
cwde
adc
jg
iret
imul
int
imul
sbb
imul
sbb
imul
sbb
stc
sub
vmovaps
popf
mov
sub
shl
sub
popf
dec
movs
sbb
adc
mov
mov
cwde
or
and
xor
sub
popf
mov
sbb
fs
sbb
out
dec
xor
sub
popf
imul
sbb
inc
xor
xor
sub
popf
imul
out
mov
sub
sub
popf
imul
sbb
outs
div
das
movs
mov
aad
imul
sbb
imul
popf
ins
push
das
sar
mov
mov
xor
xor
sub
popf
movs
data16
xor
repz
movs
popw
cli
add
or
jl
rcl
movs
data16
cli
pop
cwde
ins
mov
dec
xor
rcl
lods
xor
(bad)
or
shr
rcl
outs
xlat
iret
xor
shr
inc
inc
loop
xor
repz
shl
(bad)
jmp
push
int
movs
jle
push
dec
rcr
adc
ret
xor
rep
dec
ror
push
(bad)
sbb
sbb
jp
fadd
out
cwde
push
ins
call
inc
cwde
push
mov
fidiv
out
mov
and
les
push
ror
loop
dec
mov
(bad)
xchg
pop
xchg
and
cwde
dec
bt
icebp
pop
lods
daa
adc
outs
inc
sbb
mov
lods
data16
inc
push
shl
retf
dec
sub
arpl
ds
push
ror
ds
inc
mov
cs
jp
sub
lods
outs
aam
hlt
shl
test
fiadd
fidiv
sbb
pop
cli
pop
es
adc
cmp
add
dec
cmc
rcr
movs
push
ror
push
out
dec
std
(bad)
addr16
inc
ins
loopne
add
out
movs
mov
leave
cmp
push
and
or
int3
in
or
mov
xchg
int3
sbb
jmp
or
dec
mov
or
sub
clc
add
inc
pop
mov
sub
or
sub
mov
lock
mov
outs
cmp
lods
add
hlt
shr
test
addr16
arpl
nop
call
rep
lods
add
pop
loopne
cmc
dec
(bad)
cmp
mov
hlt
mov
pop
neg
movs
lods
into
adc
dec
or
inc
cmp
add
adc
cs
inc
scas
ds
sbb
pop
call
fld
push
jmp
push
es
xchg
mov
mov
or
add
sub
cmp
mov
cld
push
and
lods
std
test
jne
push
cmp
mov
jmp
lods
std
sbb
outs
mov
jb
jnp
cld
lods
xor
iret
in
push
repnz
movs
lods
mov
jmp
out
push
(bad)
add
sbb
cmp
in
cmp
out
cwde
push
ins
call
les
(bad)
dec
(bad)
xor
and
mov
movups
sbb
call
dec
pop
cwde
or
mov
xor
and
loope
dec
movs
sub
das
into
inc
and
adc
div
in
movs
push
ins
in
movs
adc
out
inc
mov
outs
in
test
in
movs
into
cmp
cmps
inc
sub
(bad)
and
mov
cmp
aam
ror
hlt
shr
test
daa
inc
pop
xor
jmp
repz
addr16
out
sbb
dec
inc
inc
xor
test
(bad)
mov
loopne
pushf
mov
fisttp
push
pop
lds
cmc
dec
(bad)
push
mov
inc
ins
loopne
clc
cdq
dec
pop
mov
outs
enter
pushf
inc
std
xchg
adc
ds
iret
icebp
cmp
add
adc
xor
dec
scas
ds
jg
rcl
stos
mov
nop
pop
data16
add
sbb
jmp
mov
mov
sub
pop
out
mov
scas
fdivr
std
jp
inc
inc
sub
rcl
scas
ds
and
dec
mov
sub
movs
push
and
sbb
vmread
and
cmp
push
push
add
pop
dec
bound
or
jae
cld
call
dec
jmp
cmp
or
fist
icebp
scas
and
jmp
fimul
fsubr
das
mov
in
es
lock
aaa
dec
ins
xchg
sbb
call
cs
call
cs
call
lahf
and
call
push
and
xor
adc
popa
outs
inc
jns
mov
ds
or
jno
cmp
aaa
xchg
inc
sub
jo
or
sub
jp
sbb
or
jo
or
js
dec
jle
xchg
mov
push
inc
sub
jo
or
aas
add
imul
and
pop
add
mov
into
cmp
add
cmp
cmp
jbe
dec
sub
dec
sub
dec
sub
(bad)
es
dec
sub
dec
sub
pop
push
jns
pop
dec
sub
dec
sub
dec
sub
adc
ins
jbe
dec
sub
dec
sub
dec
sub
mov
pop
push
fs
dec
sub
or
pop
add
jbe
dec
sub
inc
sub
je
push
fs
dec
sub
dec
sub
les
adc
in
dec
mov
dec
int
jbe
push
sub
dec
sub
dec
stos
je
push
gs
dec
sub
dec
sub
pop
dec
sub
mov
xchg
jbe
dec
sub
pop
or
sub
dec
sub
dec
sub
jnp
pop
dec
sub
adc
push
movs
or
mov
push
adc
add
outs
push
adc
mov
ins
push
adc
lds
mov
jns
ds
mov
push
xchg
out
movs
pop
jae
push
mov
sar
daa
dec
daa
sbb
adc
sbb
mov
call
inc
imul
cwde
push
ins
call
jl
fsubrp
mov
jnp
fs
pop
retf
icebp
ret
push
sub
les
cmc
jae
outs
push
or
dec
add
in
ins
cdq
pushf
jmp
pop
out
outs
push
mov
addr16
movs
test
addr16
movs
sub
rep
push
ror
sub
push
mov
ror
pop
ret
pop
daa
in
movs
jg
jmp
inc
mov
push
aaa
pop
fs
cmc
dec
pop
fisttp
push
fsub
std
dec
std
sbb
inc
repz
inc
repz
sub
cmp
mov
into
dec
pop
adc
add
ficomp
or
iret
adc
test
or
add
sbb
test
inc
push
xor
pop
dec
std
fidivr
cmps
fmul
mov
dec
add
movs
das
adc
mov
sub
pop
fld
mov
std
inc
rcl
loope
std
es
push
push
mov
lock
(bad)
fisub
inc
scas
fdiv
or
adc
cs
pop
push
cs
jg
sub
mov
xor
scas
scas
ds
shr
adc
aas
lock
lods
data16
ds
or
outs
mov
cs
clc
ret
sahf
jne
inc
sahf
jge
and
jne
and
jne
and
jne
and
jne
and
je
and
jne
and
lahf
aad
mov
mov
repz
ins
mov
push
sar
push
pand
imul
rcr
mov
xchg
sar
mov
push
adc
xor
je
and
lahf
mov
mov
imul
fcomp
cmp
push
adc
and
sar
mov
push
je
and
arpl
in
xchg
sar
mov
push
imul
sar
mov
sub
imul
sar
mov
sbb
lods
idiv
xchg
dec
and
imul
push
mov
aad
sti
mov
and
(bad)
and
xchg
iret
ret
int
cmp
cmp
push
cmp
cmp
cmp
push
mov
mov
push
cmp
cmp
cmp
push
cmp
cmp
cmp
push
cmp
mov
cmp
push
adc
add
ins
xor
cmp
push
cmp
or
cmp
push
stos
mov
sub
xor
add
cmp
ret
or
cmp
push
stos
mov
sub
inc
imul
push
cmp
ret
or
cmp
cli
dec
jo
daa
sbb
stc
mov
icebp
jne
je
inc
sar
mov
push
cmp
jp
cmp
ret
or
cmp
push
jbe
sub
inc
imul
xchg
sub
cmp
and
cmp
push
mov
pop
inc
bound
and
sar
mov
repz
icebp
and
sar
mov
push
mov
ins
inc
mov
adc
cmp
and
sar
mov
push
mov
fcmovnbe
cmp
imul
mov
mov
imul
fcomp
cmp
push
imul
fcomp
cmp
push
imul
fcomp
cmp
or
cmp
push
cmp
aas
xor
and
adc
xor
repz
push
push
sub
pop
popa
icebp
and
mov
(bad)
icebp
and
xor
ds
xor
arpl
out
sar
daa
dec
dec
sbb
adc
sbb
mov
sar
in
lock
loopne
js
lock
in
jmp
pop
loop
sar
in
lock
in
add
icebp
movs
outs
ror
push
ror
sub
repnz
stos
sub
inc
xor
pushf
jle
mov
push
rcr
push
andps
and
sub
mov
ss
xchg
xor
mov
out
pop
push
popa
in
movs
push
shl
push
ror
ret
out
add
out
add
dec
ror
stos
mov
into
cmp
mov
xchg
int3
xor
xchg
fld
jne
add
jno
adc
mov
hlt
rcl
stos
add
pop
sbb
and
fld
mov
std
push
scas
pop
sub
push
into
cwde
dec
in
dec
mov
outs
adc
daa
xchg
cmp
adc
addr16
or
fsin
or
add
leave
into
or
add
icebp
movs
mov
data16
sub
cmp
or
rcr
inc
(bad)
(bad)
cwde
lods
data16
xor
in
out
mov
sbb
sti
in
movs
push
ins
loopne
lods
test
adc
into
adc
daa
dec
mov
add
cwde
lods
sub
pop
pushf
and
loop
ds
jae
not
dec
std
scas
mov
inc
dec
mov
sub
icebp
pop
jge
std
cmc
mov
add
in
mov
in
mov
and
mov
stos
repz
out
std
or
out
stc
mov
std
xchg
int
stos
dec
and
in
in
mov
in
mov
mov
mov
mov
pop
mov
mov
pop
cmc
(bad)
inc
add
in
mov
and
mov
stos
add
stos
pop
std
mov
stos
out
in
std
in
in
mov
in
mov
add
mov
inc
enter
add
jge
or
(bad)
jae
stos
out
in
std
in
in
mov
in
mov
jge
mov
stos
jecxz
mov
stos
out
in
std
in
in
mov
in
mov
(bad)
out
stc
push
push
in
mov
mov
mov
stos
add
jge
lea
ss
add
push
jne
dec
add
mov
shr
inc
mov
in
mov
in
mov
sahf
or
push
push
ins
jnp
adc
in
in
mov
in
mov
in
mov
lods
or
mov
fisub
mov
aas
cmp
fs
sub
xchg
jne
test
imul
jmp
(bad)
jmp
add
or
mov
std
mov
in
mov
in
mov
stos
or
pop
std
pop
std
mov
in
mov
jge
mov
div
in
in
mov
in
mov
cli
or
mov
xchg
pop
jecxz
push
cmp
aad
push
shl
xor
pop
push
mov
(bad)
mov
(bad)
sub
adc
cmp
mov
out
push
shr
push
shr
push
xchg
out
movs
push
aaa
ret
push
dec
rol
imul
pop
test
shl
ret
fcmovne
add
or
dec
test
jno
int3
and
out
push
mov
leave
mov
xor
outs
cmp
inc
inc
out
fwait
lods
outs
or
int
popa
div
mov
sub
js
mov
inc
sbb
and
in
rol
push
dec
ins
adc
dec
shr
test
test
sbb
cmps
int3
or
ss
push
(bad)
xchg
into
or
cmps
xor
mov
push
inc
daa
mov
(bad)
mov
mov
dec
std
push
out
dec
inc
int
add
repnz
and
in
movs
xchg
ret
out
inc
(bad)
outs
out
movs
push
add
or
cmc
dec
std
sbb
xchg
jbe
cli
sub
mov
push
js
ins
in
movs
inc
adc
rcr
inc
jb
test
xchg
or
movs
iret
sbb
dec
dec
mov
fst
xchg
mov
in
dec
neg
lahf
fwait
mov
cmp
mov
jb
jbe
mov
mov
jb
dec
lods
(bad)
adc
in
mov
mov
xor
sbb
cmp
scas
xchg
cmp
mov
jg
sub
jg
add
mov
mov
inc
iret
int
inc
xchg
jg
leave
ins
xor
leave
ins
xor
pop
in
xor
retf
ins
pop
aad
ins
xor
leave
ins
xor
or
xchg
retf
pop
scas
mov
popa
mov
mov
arpl
pop
mov
arpl
fwait
and
xlat
adc
in
aad
sbb
inc
xor
cwde
push
ins
call
fdiv
out
dec
push
vmread
std
inc
call
dec
movs
sub
int3
and
sub
dec
pop
or
out
dec
push
or
add
scas
dec
out
call
mov
pop
addr16
movs
shl
rol
scas
push
stos
gs
or
cmp
xchg
std
ds
stos
push
ror
adc
std
pop
sahf
pop
push
ror
hlt
shr
test
test
lods
sub
or
ret
mov
into
imul
fcom
jae
bound
add
mov
outs
and
mov
into
jge
cmps
in
or
cmps
movs
or
push
ins
add
std
bound
inc
sub
jl
inc
xor
or
lods
ds
stc
ins
adc
jl
cs
dec
(bad)
call
shl
pop
rol
gs
add
sub
in
sub
adc
fcos
dec
inc
sub
mov
push
or
and
and
nop
jmp
pop
scas
mov
cmps
(bad)
and
pushf
push
add
stos
out
pop
push
fwait
bound
adc
adc
fiadd
aad
repnz
xchg
rcr
pop
sub
xchg
xlat
pop
or
xchg
adc
pusha
imul
outs
adc
rol
scas
shr
push
shr
jb
out
movs
dec
shl
shr
and
adc
fld
mov
add
sbb
add
ss
scas
push
mov
adc
mov
push
add
add
cmp
mov
mov
sti
sbb
cmp
jp
arpl
fild
sub
(bad)
sbb
xor
jne
lods
rol
mov
cmp
aam
add
mov
mov
mov
inc
adc
xor
shr
aas
inc
mov
data16
mov
in
sbb
mov
inc
adc
add
das
dec
test
sbb
add
mov
xor
cmp
outs
xchg
inc
or
and
xchg
sar
pop
lock
xor
or
xchg
js
out
pop
loopne
dec
cmp
fsubr
inc
or
xchg
outs
mov
add
mov
xor
pushf
and
ret
pop
or
fwait
std
aad
cmc
das
jmp
xchg
inc
add
cwde
outs
mov
(bad)
fidivr
dec
add
jb
loopne
push
xchg
add
test
ss
cli
cmp
fsubr
push
mov
cmp
shr
cdq
jl
sbb
dec
adc
cmp
je
mov
fidivr
jg
fwait
inc
popf
adc
out
ja
add
sar
(bad)
bound
repz
add
in
mov
fnstsw
xchg
inc
in
and
cld
adc
jae
mov
(bad)
sahf
ss
adc
bound
cmp
test
and
cli
sbb
jno
call
imul
push
or
pop
jmp
push
cmc
sbb
mov
and
and
xchg
je
mov
fld
arpl
rol
mov
inc
in
adc
bound
loopne
adc
or
mov
aas
popa
xor
push
xchg
inc
pop
push
xlat
mov
add
add
bound
rol
addr16
ins
ins
mov
int3
add
sbb
fld
add
mov
adc
test
xor
loop
push
xor
xor
xchg
add
mov
inc
adc
cmp
test
je
cwde
ja
add
mov
cs
and
call
test
inc
rcl
loop
retf
mov
or
and
jns
pop
mov
mov
out
or
in
and
enter
xor
test
out
test
mov
xor
in
push
add
sbb
cmp
test
icebp
mov
jmp
ins
mov
pop
mov
mov
out
adc
test
dec
add
push
test
push
ret
mov
fidiv
cmp
sub
addr16
push
xchg
add
mov
daa
repnz
(bad)
dec
or
add
sub
jae
test
mov
out
cmps
(bad)
push
jmp
cmp
xlat
push
mov
jbe
jmp
fidiv
add
ret
jge
add
mov
cmp
retf
pop
jl
add
(bad)
jle
repnz
aas
bound
addr16
jns
push
mov
sar
or
jno
ins
gs
pop
call
lds
dec
add
data16
fistp
mov
and
push
int3
sbb
sub
inc
or
pusha
data16
aam
inc
nop
(bad)
fisubr
ror
rol
pop
and
movs
ins
pop
mov
sbb
mov
xor
in
pop
aas
(bad)
push
inc
add
outs
mov
mov
loop
sar
jae
and
xchg
jns
push
mov
mov
out
push
lds
sub
jbe
sub
jp
pop
mov
mov
test
sar
push
inc
jne
es
je
push
mov
mov
jmp
out
cmp
test
jb
je
stos
into
test
add
cmp
adc
xchg
mov
xchg
sub
cmc
or
rcl
mov
dec
scas
ins
sbb
push
int
mul
out
or
cmp
mov
hlt
cmp
jge
inc
mov
popa
mov
mov
xchg
or
mov
daa
pop
add
sbb
imul
sbb
mov
aaa
pop
loop
imul
cmp
imul
or
fisubr
sub
aaa
push
and
mov
fdiv
cmp
imul
dec
fwait
(bad)
shl
cmp
mov
jl
out
mov
mov
cmp
fsubr
dec
add
data16
popf
call
mov
and
in
pop
cmp
adc
bound
or
add
and
scas
int
inc
mov
mov
xchg
fisttp
ret
add
fld
inc
or
bound
fdiv
cwde
sub
stc
or
xlat
imul
jo
jmp
test
sbb
xchg
fild
int3
sbb
sahf
jne
pop
iret
add
shl
xlat
dec
or
add
and
inc
pop
pop
lds
pop
jmp
rol
pop
add
push
jne
cs
jno
mov
adc
mov
xor
xchg
jp
push
leave
xchg
je
out
pop
jmp
lds
imul
movmskps
xchg
(bad)
aad
imul
jmp
call
call
cmp
inc
mov
inc
test
iret
mov
aaa
jb
fist
nop
dec
add
arpl
in
dec
sahf
add
mov
and
jecxz
pop
es
jle
imul
hlt
fwait
xor
fdivr
jae
push
iret
xchg
jge
repz
cmps
repz
or
or
es
jl
scas
xlat
lods
mov
or
xor
outs
push
lods
xlat
mov
xchg
cmp
jmp
dec
add
xchg
jne
repz
movs
clc
sbb
mov
cmp
hlt
xor
call
popa
xchg
inc
add
bound
in
push
xchg
or
or
cs
ins
sbb
icebp
stos
pop
clc
sbb
sbb
add
pop
pop
(bad)
lea
mov
jmp
gs
dec
add
push
mov
out
mov
aaa
loop
xor
lahf
outs
push
lods
rol
dec
leave
pop
jns
and
xchg
inc
or
pusha
imul
imul
push
pop
mov
stos
pop
loopne
int3
sbb
sbb
retf
pop
sub
ins
je
call
stc
mov
cmp
out
cmp
or
mov
stos
push
jmp
mov
and
js
outs
pop
lods
retf
xchg
or
(bad)
rol
int
jge
xor
imul
retf
call
pop
xor
mov
neg
mov
and
xchg
sar
sbb
ds
push
add
addr16
movs
aam
inc
nop
add
loop
push
or
sbb
sub
mov
lea
test
mov
cmp
cmp
enter
xor
jno
push
mov
mov
lahf
or
mov
sub
push
retf
push
xor
push
cmps
aam
dec
cwde
or
mov
sub
leave
sbb
ds
lods
outs
gs
test
mov
aaa
jno
and
stos
into
test
or
(bad)
rol
enter
or
or
into
add
sbb
fidivr
fs
mov
mov
out
xor
sub
ins
sbb
adc
fwait
das
pusha
cmp
adc
js
push
(bad)
xchg
inc
call
stc
or
fwait
jnp
push
rcl
in
or
add
adc
adc
xchg
jp
lock
pop
loope
stc
mov
inc
or
xor
test
jb
add
xlat
pusha
xchg
inc
push
pop
mov
mov
xchg
add
mov
ss
cmp
and
inc
or
pusha
outs
mov
sbb
xchg
cmp
and
jge
inc
mov
retf
test
ds
int3
sbb
sub
cmps
jmp
enter
sbb
mov
add
cmp
rcl
mov
inc
mov
ja
out
test
out
inc
or
cs
(bad)
emms
and
jl
imul
imul
loop
es
ds
sbb
(bad)
mov
lock
jo
mov
inc
adc
popa
mov
nop
jae
jecxz
test
sbb
xchg
sub
dec
sub
jle
jne
mov
or
sub
imul
mov
(bad)
(bad)
push
xor
je
push
call
cmp
in
xor
and
test
test
sahf
ins
sbb
aad
push
out
and
sahf
das
dec
cmp
stos
mov
fld
dec
jb
sub
imul
jmp
cmp
daa
and
jns
test
std
(bad)
mov
add
push
ss
ret
add
daa
out
sahf
das
pop
aaa
and
jne
push
enter
jo
dec
fs
jne
arpl
jne
bound
jno
bound
je
addr16
cmps
in
fs
imul
jb
ins
jne
imul
jns
cmc
jae
fs
dec
mov
pop
mov
pop
fs
imul
leave
xor
dec
fsubr
add
dec
movs
mov
jmp
fisttp
std
imul
addr16
push
pop
imul
adc
retf
leave
fisttp
inc
add
lahf
(bad)
jns
cmp
inc
xor
sub
pop
jne
dec
xchg
pop
leave
jp
repz
or
aam
push
pushf
stc
scas
in
scas
cmc
jae
movs
xchg
or
sbb
out
mov
jb
repnz
repz
jo
dec
jp
in
imul
adc
cmps
xor
cmp
and
mov
inc
lea
inc
mov
jb
and
rcl
in
mov
dec
jecxz
xchg
call
call
nop
push
fisttp
dec
mov
fsub
lahf
mov
sar
lahf
js
and
int
sbb
mov
gs
adc
pop
movs
mov
cmps
jge
jecxz
movd
inc
lea
lahf
jns
fisub
arpl
(bad)
cmc
bound
pop
cmp
movs
and
dec
jns
fbld
div
pushf
pop
test
lea
mov
push
ins
repz
cmps
and
add
cmp
je
js
mov
lods
xor
and
not
push
sub
jne
push
sbb
pop
mov
cdq
gs
adc
sbb
sub
out
push
xchg
shl
and
fsubr
gs
add
jmp
xor
mov
mov
mov
sbb
cmp
and
mov
xor
dec
lods
fs
in
lds
fld
aad
jecxz
in
or
adc
out
cmps
jl
inc
jle
sbb
jmp
fisub
imul
jmp
int3
popa
sbb
leave
pop
outs
movs
pop
mov
xchg
icebp
push
xor
js
cmp
mov
jnp
pop
inc
jo
(bad)
mov
gs
sub
jne
iret
mov
jbe
repnz
nop
out
cmc
xchg
cmp
mov
mov
dec
sbb
dec
mov
sbb
push
xor
jl
test
push
push
mov
pop
jl
leave
int3
jne
cmp
adc
mov
inc
mov
xchg
lods
jp
ins
lds
push
xchg
inc
adc
cmp
mov
popa
push
cmp
add
push
inc
mov
cdq
ins
jne
jnp
(bad)
and
inc
pop
pop
js
jne
sbb
dec
js
aad
frstor
repnz
and
and
outs
xor
rcl
xchg
std
retf
je
cwde
adc
repnz
dec
push
push
and
pusha
(bad)
in
loope
icebp
call
mov
icebp
mov
add
shl
sbb
xor
in
adc
xchg
fwait
popa
inc
jge
and
call
addr16
and
xlat
sub
jo
cmps
jno
lods
pop
popa
push
cwde
xchg
loope
cmc
adc
loop
xchg
jp
and
xchg
arpl
fsub
iret
push
in
jmp
xchg
dec
dec
jbe
ficomp
repnz
adc
pop
pop
dec
cmp
fild
retf
or
pushf
or
mov
sti
outs
(bad)
imul
dec
outs
stc
add
add
sbb
mov
js
push
fisttp
mov
sbb
pop
jae
aas
js
int
pop
(bad)
test
sbb
push
dec
dec
fstp
rol
aad
pop
mov
xchg
jae
call
test
mov
push
bound
sub
cs
cmp
test
xor
sub
adc
adc
lahf
jne
or
jecxz
pop
pop
sbb
xchg
mov
data16
xor
(bad)
inc
and
data16
stc
sbb
pop
loopne
jbe
sub
arpl
fcmovnb
and
xor
mov
push
mov
dec
jne
jmp
(bad)
xor
(bad)
fdivr
push
gs
ficom
rol
inc
shr
out
aam
add
and
xlat
push
adc
inc
cmc
stos
jl
xor
pop
jb
mov
(bad)
push
inc
(bad)
aaa
popf
in
inc
out
dec
addr16
loope
inc
int3
sbb
out
sbb
cmps
inc
dec
retf
jl
adc
pop
sar
jge
mov
inc
cmps
inc
and
call
push
imul
mov
add
push
in
ja
ror
out
cmp
mov
pop
out
dec
dec
dec
sti
loop
gs
mov
aaa
iret
retf
pop
loope
in
mov
pop
stos
cld
adc
hlt
and
imul
jmp
fcom
dec
leave
xlat
iret
cmp
push
sbb
sub
xor
pop
add
or
(bad)
sbb
dec
sar
add
push
xchg
pop
fsubr
outs
out
stos
jbe
rcl
(bad)
(bad)
jns
clc
je
fcmovbe
xchg
inc
ret
iret
cmp
fs
inc
es
mov
cmps
sub
add
jmp
push
or
loopne
add
xlat
jno
test
jp
lock
out
ja
cmp
imul
mov
in
mov
pop
ins
and
sbb
cmp
imul
ins
fdivr
ror
inc
popa
xchg
xor
jecxz
ins
not
movs
mov
and
sbb
cmp
xchg
xchg
sbb
xchg
pop
popf
xchg
stos
or
cmps
add
dec
(bad)
mov
mov
or
jae
and
and
sar
or
push
xchg
in
cld
(bad)
ror
es
jo
jp
xchg
aaa
ror
push
cld
adc
cmp
sub
xor
or
imul
in
or
xchg
cwde
pop
cmp
adc
ds
xlat
cmp
(bad)
js
sbb
fsubr
int3
add
lahf
mov
jbe
mov
sbb
jns
inc
sub
pop
sar
dec
leave
mov
sti
jge
sti
fucomip
adc
(bad)
mov
xlat
jle
out
out
sbb
or
mov
xchg
out
sbb
or
mov
scas
aad
or
pop
test
pop
mov
mov
push
das
test
mov
out
rol
or
mov
xor
cmp
mov
hlt
out
xor
adc
or
mov
jmp
and
lods
retf
sub
and
sub
xor
out
fucomi
ins
jne
sbb
outs
dec
pop
jne
in
xor
sti
sbb
dec
je
or
lock
psubw
mov
(bad)
shl
or
and
stos
jno
push
sub
and
dec
mov
add
and
or
push
psrld
cmp
xchg
mov
adc
mov
mov
sbb
ret
aad
pop
xchg
push
pop
push
xor
sbb
(bad)
mov
mov
mov
(bad)
cmp
data16
adc
in
mov
icebp
stc
cmp
les
cmp
inc
ins
sub
and
cmp
(bad)
sub
in
jae
jae
test
cmp
push
jecxz
mov
sub
xchg
cli
or
and
mov
cmp
les
pop
sub
xchg
jmp
test
xchg
cwde
test
adc
test
int3
and
aas
sub
mov
inc
arpl
dec
call
xor
adc
js
ins
push
adc
bnd
ins
and
jl
and
push
mov
mov
in
test
lods
mov
add
adc
add
push
ret
mov
sub
xor
inc
pusha
inc
sbb
(bad)
shr
mov
ror
shr
call
daa
inc
stos
cmp
sub
xchg
jne
or
sub
dec
jmp
(bad)
repz
cmps
(bad)
in
inc
outs
pop
stc
call
mov
mov
dec
sbb
je
std
add
clc
call
push
or
adc
outs
sbb
loopne
out
adc
mov
hlt
lock
xchg
bound
jne
sbb
or
dec
or
lds
jecxz
mov
bound
cdq
inc
adc
push
adc
sbb
mov
sbb
sar
jns
inc
cmp
stc
adc
or
jbe
or
loop
inc
jns
aas
sbb
arpl
aas
enter
outs
(bad)
stc
call
scas
(bad)
pop
sub
and
cmp
addr16
cli
or
lds
sub
or
test
mov
dec
std
xor
cld
inc
push
cmp
popa
(bad)
ins
add
mov
xor
imul
aas
push
aas
stos
xchg
ror
(bad)
mov
adc
(bad)
shl
scas
or
out
ss
push
ins
cmp
add
add
push
cmp
mov
outs
retf
imul
loope
scas
and
clc
pushf
lock
jg
stos
ja
pushf
cmc
and
inc
sbb
cmp
jo
jg
pop
je
popf
and
daa
(bad)
cs
dec
jnp
shl
xlat
iret
jmp
test
jae
pushf
jne
cmp
(bad)
jb
and
dec
(bad)
sahf
sub
test
nop
inc
outs
sub
sub
sbb
push
xor
lods
fldln2
dec
pop
xor
push
adc
stos
cmc
sahf
or
outs
push
(bad)
mov
stc
sbb
retf
int
mov
cmp
xor
add
mov
(bad)
jmp
lea
push
or
test
out
sbb
ret
pop
xchg
pop
call
or
xor
cwde
fild
or
cmp
jne
test
cmp
ins
inc
mov
or
daa
js
pop
xor
sahf
pop
es
cmp
jnp
ftst
jle
fcom
cmp
fadd
mov
fistp
xchg
xchg
jno
sub
imul
repz
in
jmp
xchg
out
adc
jg
push
pop
je
mov
das
sbb
jbe
jle
inc
cli
sbb
imul
data16
inc
cmp
test
pusha
push
dec
xchg
and
(bad)
nop
lfs
jmp
movs
and
and
cmp
mov
jo
cmp
sti
addr16
nop
pop
cmps
xchg
fwait
jl
jp
jb
hlt
adc
leave
push
xchg
sub
pop
push
rcl
cld
aam
rcr
push
mov
adc
in
cmps
mov
lds
(bad)
sti
pop
adc
pop
(bad)
cmp
in
out
jg
or
loopne
xchg
cld
xchg
mov
mov
mov
and
push
add
shl
push
xchg
shl
sub
jle
movs
inc
stc
or
add
call
sbb
fs
(bad)
sbb
mov
test
cmp
push
jmp
dec
bound
test
push
sub
popf
repnz
call
(bad)
cwde
cmp
mov
jmp
outs
pop
out
ja
pop
mov
inc
inc
das
out
aaa
or
out
arpl
jns
add
dec
mov
sar
idiv
aad
mov
neg
mov
push
sbb
icebp
scas
or
adc
daa
arpl
retf
push
jb
jne
shl
pop
int
sbb
jmp
sbb
cmp
mov
add
sub
or
xor
int3
jp
std
lds
(bad)
jo
loopne
in
mov
pop
hlt
push
xchg
and
and
xor
mov
mov
bound
test
nop
add
mov
(bad)
(bad)
and
js
xor
(bad)
and
addr16
sub
mov
out
data16
adc
inc
out
fst
es
loope
cli
loopne
push
mov
lock
xchg
lea
test
push
mov
shl
and
icebp
jno
pop
lock
push
jbe
push
shl
cmp
loope
fwait
rcl
sar
add
lods
out
xchg
in
push
mov
mov
xchg
xchg
push
push
daa
or
cmp
ret
dec
xor
clc
pop
idiv
dec
ins
adc
mov
fs
jp
adc
pop
imul
mov
je
sub
and
sub
mov
sub
pop
fisubr
outs
test
daa
cwde
sti
in
mov
iret
leave
add
clc
fisub
cdq
jnp
bound
xor
inc
sub
jae
mov
fbstp
stc
sub
movs
fs
ja
daa
leave
stos
sbb
add
jmp
daa
rol
lahf
sub
jg
inc
ficom
jge
sbb
and
data16
jnp
int
add
in
lock
add
jmp
lock
sub
mov
and
out
jnp
push
pop
bound
xchg
xchg
jb
jg
sbb
(bad)
(bad)
aaa
push
jae
pushf
push
jp
xchg
and
outs
mov
adc
adc
pop
add
jl
add
cmps
adc
sub
std
xchg
inc
pop
pop
xchg
sti
lods
retf
jp
jae
add
inc
inc
xlat
loopne
(bad)
push
adc
adc
pushf
push
mov
aad
rcr
ret
push
mov
loopne
jbe
add
ja
and
and
mov
pop
push
add
mov
push
xchg
mov
sbb
xor
and
add
xchg
inc
frstor
loope
loop
inc
pop
scas
enter
mov
sbb
cwde
das
jbe
mov
cdq
(bad)
lahf
pop
cdq
stos
jl
(bad)
enter
out
xchg
mov
sbb
push
inc
stos
dec
fwait
adc
jg
imul
sub
fisttp
idiv
sub
mov
pop
or
retf
or
cmp
(bad)
or
pop
outs
and
clc
aas
sub
add
icebp
sahf
movs
push
ja
mov
push
inc
jae
mov
add
out
leave
sbb
data16
lods
push
jmp
aad
adc
outs
popa
jae
je
mov
jbe
cwde
enter
mov
es
leave
or
mov
sbb
push
mov
pop
adc
retf
inc
push
mov
data16
pop
fwait
das
adc
pop
push
push
and
dec
inc
ror
pop
popa
jecxz
mov
add
push
jp
dec
jp
add
shl
jnp
div
addr16
js
call
loop
xor
aaa
int3
je
inc
and
mov
stos
cmp
inc
shl
pop
or
cld
inc
add
aaa
icebp
sar
in
call
rcl
(bad)
aad
repz
rcr
mov
xor
or
push
sar
jb
cli
inc
push
mov
push
adc
xchg
sbb
add
ror
pop
aad
sbb
xchg
mov
out
push
sub
jmp
dec
jle
and
test
mov
or
gs
dec
test
test
dec
pop
addr16
rol
(bad)
jp
int
mov
cmc
xchg
scas
movs
mov
sbb
mov
pop
xchg
clc
sbb
xor
jg
add
mov
pushf
arpl
popa
xchg
xor
jns
push
mov
add
or
test
mov
add
mov
cmps
push
mov
fst
xor
ins
push
jae
inc
(bad)
adc
loopne
dec
fdiv
jne
mov
push
popa
aaa
add
mov
xor
xor
dec
jns
ins
gs
xchg
jbe
fiadd
pushf
dec
mov
hlt
jb
movs
addr16
pusha
ja
je
into
inc
push
fiadd
jne
mov
adc
jmp
sti
mov
(bad)
retf
movs
les
sti
xchg
adc
jae
mul
adc
div
cld
inc
nop
xchg
sbb
ret
mov
push
cmpxchg
hlt
dec
rcl
lock
inc
mov
jnp
addr16
xor
inc
shl
(bad)
mov
jge
push
neg
xchg
xlat
or
inc
xor
fcom
inc
adc
aad
adc
aad
dec
ror
dec
adc
add
or
popa
cmp
mov
pop
pop
push
xor
mov
cmp
inc
mov
pop
popf
inc
popa
pop
movs
shl
pop
inc
call
fstp
push
push
or
adc
adc
in
sub
lods
pop
repnz
dec
and
dec
push
imul
push
mov
and
cmp
ins
je
pushf
add
cmps
xor
jmp
mov
gs
in
jnp
outs
gs
aas
cmps
in
es
pop
pop
cdq
outs
xor
(bad)
popa
in
(bad)
sub
shl
lea
ins
jnp
clc
xlat
inc
inc
daa
jg
mov
ins
pop
jns
adc
hlt
xor
mov
icebp
stos
mov
or
mov
movs
(bad)
stos
lds
mov
sub
aam
fwait
test
jbe
nop
je
test
xor
xchg
jmp
push
xor
add
push
(bad)
repz
push
add
sar
(bad)
test
or
or
and
adc
inc
int
rol
nop
lods
jnp
jg
push
push
xor
lahf
jns
cmp
jle
repz
shl
into
push
lods
in
sub
sub
test
add
mov
jnp
push
xchg
cmp
retf
lahf
jmp
mov
add
aaa
ror
in
add
push
xor
cmc
pop
popa
jle
push
test
inc
xor
add
arpl
xchg
mov
cld
mul
xor
pop
add
out
in
adc
or
add
nop
out
rcl
push
aas
mov
aam
and
xchg
jno
and
and
movs
mov
sub
mov
ficomp
mov
cmc
int
leave
or
(bad)
repnz
(bad)
dec
pop
je
into
push
mov
ror
repnz
push
jg
mov
int
and
loopne
loope
shr
ins
mov
repz
cmp
mov
fucomip
inc
outs
cmp
push
and
mov
jge
or
(bad)
and
inc
and
cmps
sar
aam
cmp
icebp
jbe
pop
push
cmps
push
frstor
add
cmps
pavgb
imul
aam
sub
jnp
inc
and
fdivr
ja
leave
mov
scas
movs
adc
lea
sar
sub
rcl
unpckhps
leave
dec
mov
jne
xor
pop
pop
cmp
jne
sahf
and
imul
inc
mov
fild
push
add
push
xor
mov
rcr
ja
pop
add
add
adc
cdq
ret
sbb
mov
loop
and
xor
lods
mov
aaa
pop
ret
pop
cmc
out
lods
and
xor
(bad)
inc
pop
(bad)
inc
movs
enter
mov
add
add
jg
rol
mov
ror
xchg
sbb
arpl
mov
jnp
push
fidiv
jns
std
(bad)
mov
and
pop
xchg
aaa
mov
test
add
or
dec
jns
dec
sub
push
frstor
mov
cmp
sub
aas
mov
test
arpl
pop
cwde
adc
mov
jecxz
pop
mov
scas
add
repnz
stc
and
popa
int3
(bad)
push
ss
and
and
rcl
add
rol
mov
mov
push
jg
mov
or
lock
push
scas
fcmovbe
mov
push
mov
mov
js
pop
retf
in
retf
mov
add
scas
jp
call
inc
das
call
pop
sbb
or
or
js
sahf
jmp
or
ja
(bad)
mov
or
lods
jns
dec
or
inc
xchg
or
adc
ins
mov
shl
iret
test
xor
div
jmp
inc
arpl
movs
fs
in
out
xchg
test
or
movs
mov
or
inc
test
movs
cmp
mov
mov
xchg
cmc
add
icebp
aam
cwde
mov
push
(bad)
aaa
xor
xor
pop
test
cdq
ds
or
cmp
test
arpl
xor
pop
inc
sub
fsub
push
sbb
in
js
jg
cmp
les
fist
jle
xor
cmp
sub
ss
inc
jno
shl
lods
add
or
or
jns
ins
movs
add
rcr
jne
cmp
(bad)
mov
or
test
jne
add
push
ja
in
(bad)
icebp
(bad)
cmp
sbb
xchg
mov
mov
cmps
repz
movups
shl
iret
jns
dec
mov
add
leave
scas
mov
je
(bad)
aam
movs
jb
js
pop
push
(bad)
cli
xor
into
jle
imul
mov
imul
mov
stos
mov
ror
not
mov
mov
retf
sar
inc
pushf
push
loope
int
hlt
xor
movs
and
out
and
jne
cmp
ror
inc
xchg
push
cwde
xor
sub
test
xchg
std
cmp
mov
addr16
lock
fcmovnu
xchg
out
loope
loope
xchg
out
xor
jmp
and
and
call
and
out
nop
sub
lock
aaa
mov
test
xor
adc
jp
jg
and
xchg
fs
dec
fild
mov
pop
add
sub
xor
rcl
into
mov
shl
sub
or
shl
jmp
and
add
jne
stos
in
xor
popf
jp
cmp
ret
inc
adc
sbb
jmp
les
jnp
outs
xchg
ret
mov
daa
fcomp
pop
mov
hlt
jecxz
xchg
inc
(bad)
dec
ins
push
shr
xchg
cs
pop
cdq
dec
out
mov
and
fimul
addr16
mov
push
ss
loope
pop
jp
out
std
mov
cmps
sub
out
mul
cmps
fbstp
cmc
cli
push
ss
fiadd
xchg
xor
add
and
(bad)
mov
mov
push
adc
int3
es
sub
and
xchg
std
test
addr16
or
out
aas
inc
or
mov
outs
mov
inc
sub
add
xchg
dec
stc
out
scas
(bad)
out
(bad)
ficom
pop
or
dec
lods
test
push
js
das
pop
ror
outs
clc
sub
mov
dec
pop
test
jmp
fimul
or
retf
rcr
out
test
jb
jmp
mov
popf
mov
jl
sub
pcmpeqd
out
pop
xlat
and
gs
push
jge
inc
adc
push
les
aad
sbb
jmp
je
dec
div
xor
(bad)
cmc
xor
jbe
sbb
push
inc
dec
adc
lock
xchg
bound
aad
js
fdivp
push
stos
div
rol
(bad)
mov
js
lds
aad
cmp
cmps
hlt
mov
push
cs
call
ja
jecxz
(bad)
in
scas
mov
xchg
push
(bad)
repnz
jmp
cmp
jo
movs
and
pop
dec
dec
es
cmc
rol
mov
call
addr16
xchg
div
push
jae
nop
retf
movs
xchg
jmp
pop
push
push
inc
mov
pop
mov
data16
lock
adc
loopne
xchg
xchg
scas
push
ret
ret
fidiv
loope
and
fcom
sub
daa
sbb
mov
mov
cld
mov
inc
out
mov
lock
out
jns
and
mov
inc
mov
frstor
cdq
or
ret
ins
or
jmp
or
in
cs
out
dec
or
jmp
adc
dec
fst
cmp
mov
cmps
fisubr
xor
das
fcomp
dec
fwait
int3
shr
shr
jle
pop
movs
outs
push
mov
jl
lahf
push
imul
lahf
out
xchg
pop
cmp
popa
or
inc
fdivr
pop
aaa
inc
jae
xchg
jns
mov
and
inc
(bad)
mov
xchg
pop
dec
dec
jmp
xor
mov
dec
out
mov
mov
cmc
and
push
dec
imul
inc
rcl
pop
xchg
lds
sbb
pop
test
shl
mov
repz
out
arpl
lea
lods
inc
inc
xlat
xor
mov
shl
inc
sub
ins
lds
(bad)
xor
pop
adc
cs
ss
inc
out
mov
in
test
out
or
popf
xchg
adc
out
push
popa
out
pop
pop
in
pop
jecxz
(bad)
pop
mov
sbb
stos
xchg
pop
xor
mov
div
or
inc
test
shl
jo
xchg
cmp
pop
xor
mov
stos
aas
sub
jne
pop
or
movs
mov
or
and
into
out
cmp
lahf
mov
enter
jb
jnp
fsubr
cmp
inc
stos
inc
mov
cs
mov
mov
cmp
mov
into
mov
mov
test
nop
shr
or
lods
rol
lahf
ja
movs
jae
fimul
dec
fsub
jo
mov
sar
push
adc
push
add
xchg
and
pop
jb
xchg
add
scas
cmp
cmps
mov
xchg
xor
adc
js
xor
xchg
in
xor
stos
scas
(bad)
jecxz
(bad)
in
movs
es
pop
jp
xchg
fdiv
dec
out
retf
mov
push
in
das
cmp
out
sub
cmp
sbb
jle
push
xlat
pop
jae
es
mov
mov
jne
jae
push
or
mov
nop
fild
xor
xor
js
push
nop
lods
ss
loopne
in
stos
call
out
adc
sub
xchg
add
mov
ror
aad
sub
int
xor
inc
pop
rol
ins
xlat
lock
push
mul
fwait
mov
aam
inc
xchg
ins
sbb
dec
adc
js
test
mov
std
cmp
ins
out
mov
mov
pop
or
int3
leave
sbb
mov
jnp
lods
add
xchg
in
(bad)
(bad)
fucomp
adc
push
xor
mov
sub
aaa
adc
adc
in
aad
es
out
test
push
sar
test
jno
xlat
adc
push
mov
clc
xor
ret
sbb
iret
push
adc
xor
mov
lods
aaa
jae
out
pusha
add
out
cdq
push
aam
ret
mov
test
xlat
adc
test
(bad)
sub
out
data16
adc
test
test
xchg
xchg
dec
push
dec
sub
add
shl
js
mov
jne
pusha
mov
dec
cmp
scas
xchg
cwde
mov
stos
mov
pop
mov
test
scas
mov
xchg
fcom
push
jl
mov
push
test
daa
popa
scas
push
and
sbb
xor
lock
and
pusha
sbb
ja
jno
(bad)
in
in
pop
push
imul
mov
mov
mov
mov
(bad)
es
fnstsw
fdiv
lods
cmp
in
pop
shr
gs
(bad)
jge
sar
mov
push
xor
mov
sti
inc
je
and
sub
cmp
mov
jno
in
stos
les
les
cmc
cmps
jecxz
jbe
xchg
jns
in
retf
and
inc
iret
push
bnd
bound
sti
movs
addr16
xchg
mov
bound
and
mov
fs
imul
daa
cmp
loop
movs
mov
mov
test
jns
and
jo
gs
(bad)
mov
mov
cwde
inc
hlt
repz
aad
ja
rol
mov
fwait
std
ja
cdq
in
add
adc
cwde
xor
(bad)
clc
test
push
adc
and
mov
add
ja
imul
(bad)
sbb
pop
ja
js
push
adc
jbe
jns
(bad)
ja
stc
mov
into
outs
mov
xor
(bad)
js
dec
daa
adc
cmc
out
leave
stos
dec
xchg
or
inc
jb
push
(bad)
fild
hlt
inc
ins
es
cmps
imul
nop
js
ja
sbb
out
sbb
pop
push
mov
push
xchg
shl
jae
push
push
add
jmp
mov
pop
or
and
add
movs
addr16
xchg
nop
mov
adc
call
or
lods
add
cmp
mov
cs
push
adc
push
pop
add
dec
sbb
add
push
adc
jge
cmp
sbb
pop
jo
mov
push
mov
xchg
lods
(bad)
push
xchg
push
lea
and
std
adc
mov
ror
mov
mov
jl
shr
add
jle
sub
hlt
mov
test
retf
ret
stos
hlt
div
adc
sub
in
call
pop
js
hlt
(bad)
dec
jbe
sub
arpl
test
pop
jo
pop
loope
inc
shl
cmp
mov
inc
stc
vpsllq
sahf
and
ret
lods
sbb
push
xor
stos
cwde
aas
push
adc
add
add
xchg
loop
mov
shl
jne
jns
test
inc
xchg
lahf
push
sbb
shl
add
inc
and
and
fwait
unpcklps
xchg
and
shr
(bad)
icebp
inc
inc
in
or
and
sti
daa
out
out
test
popa
push
je
dec
aaa
bound
inc
push
inc
mov
movs
aam
aas
(bad)
xor
movs
xchg
sbb
loopne
push
ret
repnz
call
test
adc
pop
add
mov
sti
cmc
cmps
mov
lds
inc
test
hlt
jae
and
arpl
xchg
shl
cli
and
xchg
xchg
dec
fsub
dec
(bad)
shl
add
sbb
scas
rol
es
xchg
xchg
loop
jns
sbb
(bad)
sahf
mov
pop
mov
mov
sub
adc
xor
mov
sub
jmp
push
push
mov
pushf
pop
stos
loope
add
fdivr
ror
xchg
inc
or
stos
out
ror
int3
sub
fmulp
imul
pop
and
stos
gs
add
gs
sbb
out
xchg
loopne
jmp
sub
and
adc
lods
hlt
mov
rol
fwait
in
inc
bound
movs
mov
in
mov
clc
into
test
push
mov
dec
dec
int
inc
mov
jae
cmc
jg
dec
push
pop
inc
sub
sbb
imul
pop
or
data16
ja
jbe
lock
mov
sub
scas
(bad)
jno
jne
xchg
shl
or
mov
bound
fs
sar
inc
xchg
inc
clc
adc
cmp
nop
pushf
push
inc
and
xor
popa
scas
push
add
inc
xchg
and
and
xchg
aad
jmp
aaa
mov
xchg
mov
add
jb
enter
pop
adc
arpl
mov
out
jg
mov
test
inc
out
lahf
rcl
scas
lods
das
call
popa
push
dec
sbb
jnp
xor
pop
dec
ret
push
leave
cdq
movs
mov
ror
push
push
or
gs
sbb
cmp
mov
and
sbb
scas
daa
sub
and
bound
or
cdq
(bad)
stos
xchg
popa
ins
in
js
pop
jae
(bad)
xlat
mov
cmp
xor
sub
inc
xchg
adc
(bad)
xor
imul
in
nop
in
fcmovne
cmp
xchg
loop
test
jmp
xor
imul
addr16
in
stos
sub
hlt
and
mov
push
inc
gs
sbb
ins
mov
js
test
popa
jne
sub
movs
add
add
adc
call
xor
add
xchg
popa
and
jp
popf
and
jns
push
inc
adc
push
cmp
out
(bad)
repnz
lods
movs
add
test
or
xchg
nop
pop
sub
lea
xchg
fwait
rcl
loop
addr16
pushf
out
ja
popa
aam
or
mov
fdiv
daa
or
and
pop
inc
sbb
mov
ins
mov
push
fdiv
xlat
loopne
addr16
jmp
test
call
je
loop
push
cmp
cmps
cmp
xchg
pop
xchg
(bad)
push
pop
push
icebp
push
leave
nop
and
fwait
div
scas
inc
xchg
fwait
push
(bad)
jecxz
not
je
jae
ret
jp
cmps
push
rcl
test
cmp
loope
mov
and
(bad)
out
cs
xlat
add
pop
jnp
out
sahf
push
inc
inc
mov
fnsave
ins
shl
aas
sub
data16
jb
xchg
std
call
mov
ins
call
jno
push
lock
test
shl
inc
or
shl
ret
leave
hlt
vmovsd
gs
pop
pop
cld
xchg
or
pop
dec
mov
xchg
xchg
adc
in
mov
ins
push
xchg
pop
cmc
div
push
push
jo
and
js
sbb
(bad)
and
and
stos
pop
pop
push
jb
les
gs
movs
repz
(bad)
sbb
and
neg
leave
repz
mov
push
arpl
nop
and
mov
cmps
loope
push
xlat
add
xlat
xchg
pop
add
push
xchg
jmp
and
out
es
aaa
jmp
ror
(bad)
xor
icebp
shl
shl
int3
rcl
cmps
sbb
inc
xlat
mov
mov
mov
and
fs
and
cmp
ins
xor
mov
ret
jmp
mov
adc
jle
jecxz
jp
(bad)
xchg
std
rol
shr
in
xor
pusha
jmp
pop
sbb
xor
jo
xchg
ret
je
call
push
leave
xor
and
rol
xor
sbb
pop
adc
mov
xor
loope
inc
sub
add
icebp
cmc
xor
movs
in
mov
neg
and
add
pusha
and
xor
mov
cmc
popa
imul
add
(bad)
fidivr
inc
sub
pusha
rcl
popf
push
jae
xor
test
sub
ret
push
call
push
shl
xchg
nop
jno
push
or
and
lods
inc
mov
mov
jle
retf
nop
(bad)
mov
jg
or
adc
mov
or
mov
popf
ss
test
loopne
fldenv
mov
clc
out
adc
xchg
jno
xchg
xchg
inc
cmp
adc
cmc
ss
sbb
xchg
icebp
sti
push
xlat
jae
xor
icebp
(bad)
imul
retf
jmp
out
das
ja
out
rcr
arpl
movs
adc
pushf
dec
es
rol
test
test
xchg
ret
mov
outs
sub
(bad)
push
adc
mov
adc
xor
inc
pop
sbb
popf
scas
les
xchg
std
mov
repnz
aas
or
shl
add
or
dec
es
mov
jb
call
daa
xchg
(bad)
mov
jmp
mov
jae
and
jne
enter
jge
icebp
jbe
addr16
cdq
push
add
retf
mov
jb
hlt
xchg
adc
cmps
jno
loopne
jb
aam
mov
cmp
xchg
pop
push
inc
mov
je
jbe
pusha
push
xchg
jmp
(bad)
nop
inc
dec
push
je
mov
ror
ja
and
pusha
push
cmp
push
loope
xor
xor
clc
mov
and
adc
sahf
dec
sub
mov
or
inc
jg
push
rcr
and
cmp
mov
mov
movs
push
jecxz
cmp
test
mov
cvtpi2ps
outs
xchg
ret
pop
ror
xor
ds
aad
add
ins
std
popa
sub
jnp
xor
fwait
sbb
push
push
into
jbe
xchg
add
xor
jo
push
hlt
sbb
daa
push
cwde
data16
cli
hlt
push
icebp
fwait
add
js
add
sbb
test
jne
inc
shl
mov
mov
test
inc
inc
punpckhbw
(bad)
shl
jmp
es
les
popf
(bad)
arpl
fs
adc
jae
cmps
add
xor
sub
movs
ror
jae
nop
mov
mov
sbb
jb
add
or
aad
(bad)
test
mov
iret
inc
adc
mov
add
jp
aaa
push
dec
popa
cmp
repnz
gs
pop
push
sar
xchg
sbb
push
mov
mov
out
adc
sbb
push
mov
add
ins
cli
dec
pop
mov
cld
shl
mov
jle
mov
jae
xor
sub
into
aam
ds
lods
sbb
in
xchg
sbb
in
adc
lods
aaa
loop
adc
cmp
adc
xchg
loop
mov
adc
or
sub
ret
push
test
inc
dec
dec
xlat
repz
mov
test
lods
je
lods
inc
and
lods
cmc
adc
loopne
repnz
mov
inc
iret
dec
sbb
push
rol
ins
fcomp
xchg
jnp
hlt
add
xor
xor
dec
jmp
mov
cmp
add
jno
adc
mov
adc
xchg
jae
sbb
jbe
loope
adc
adc
and
ror
lds
xchg
mul
pusha
int3
ja
ja
inc
loope
dec
ja
lock
mul
icebp
sub
ror
mov
nop
fwait
(bad)
jb
mov
js
popa
mov
out
or
ds
lahf
out
or
or
jle
(bad)
mov
pushf
sub
int
push
sahf
test
inc
pusha
and
movs
jmp
leave
adc
and
loop
ds
pop
clc
es
adc
mov
sub
mov
mov
cmp
xor
mov
das
test
mov
sbb
xlat
bound
adc
into
pop
ret
inc
add
stos
jne
loope
xchg
inc
dec
movs
mov
push
jbe
in
shl
dec
es
mov
xor
add
sbb
jae
add
add
mov
inc
enter
jmp
xchg
inc
test
test
in
retf
xchg
not
jbe
inc
test
pop
adc
inc
add
inc
arpl
mov
ds
dec
mov
mov
add
fild
stos
and
out
jnp
mov
lock
loope
inc
inc
inc
cmp
xlat
inc
push
xor
mov
push
adc
sbb
aaa
xchg
cmp
adc
mov
push
in
fcmovb
push
push
push
push
popa
mov
aam
jge
push
out
out
xor
mov
adc
jbe
stos
daa
add
pushaw
xchg
sub
push
lock
and
sub
push
mov
addr16
and
test
cmp
gs
push
push
push
push
pop
cmp
sbb
mov
mov
iret
dec
or
aam
and
sbb
dec
in
cmps
shl
call
inc
pop
rcl
adc
scas
(bad)
js
mov
xchg
cld
cmc
cmp
out
push
mov
inc
fidivr
mov
shl
test
std
cdq
pop
(bad)
int
and
(bad)
clc
mov
pop
dec
pop
fnstenv
cmc
mov
ret
dec
xchg
and
das
cmps
inc
movs
or
xor
fs
fist
je
(bad)
lds
mov
xchg
xor
lds
sti
push
cmps
xor
push
jne
cwde
xchg
test
aas
in
je
xor
test
addr16
lgs
and
add
sbb
arpl
xor
jb
aam
jae
cmc
add
push
aam
clc
test
xchg
push
(bad)
stc
adc
adc
jbe
lds
mov
xlat
rol
mov
(bad)
adc
push
cld
sbb
xchg
je
push
push
mov
mov
adc
and
jbe
out
loope
mov
aam
jo
cmc
loope
test
xchg
les
or
lock
xor
adc
call
xchg
inc
or
in
fdiv
neg
jne
push
(bad)
loope
push
xor
jo
adc
sar
(bad)
aam
sub
pop
shr
dec
pop
retf
inc
inc
lahf
js
push
(bad)
jno
cmc
push
adc
and
pusha
aas
bound
ret
lahf
mov
mov
test
into
xchg
into
push
adc
and
fcomp
faddp
popa
pop
bound
mov
mov
inc
ret
rcr
mov
dec
xor
bound
sbb
fsubr
(bad)
fs
cmc
mov
sub
les
push
loopne
mov
in
jae
movs
xor
popa
jne
js
les
je
jbe
pusha
jne
pop
xor
repnz
div
pusha
jne
sub
(bad)
adc
jbe
pusha
jne
sbb
jbe
addr16
test
inc
bound
(bad)
jno
pusha
jne
test
adc
jbe
addr16
dec
xchg
lds
or
xchg
dec
and
mov
xchg
dec
pusha
jne
mov
in
ja
adc
mov
xchg
mov
leave
arpl
imul
inc
outs
rcr
inc
jne
sub
xor
shl
push
xor
popaw
mov
jne
ins
push
push
push
outs
pusha
in
jne
arpl
push
cmps
jno
adc
dec
and
mul
jb
sub
add
fs
outs
(bad)
shl
and
jno
jbe
ja
jno
rcr
aam
nop
jl
push
jbe
data16
test
push
shl
push
mov
into
inc
repnz
adc
pop
and
mov
(bad)
cli
les
outs
cmps
arpl
les
inc
enter
cmp
daa
loopne
push
inc
add
add
adc
mov
and
and
xor
loop
and
push
jb
mov
inc
mov
jne
ins
push
or
(bad)
outs
adc
jne
leave
inc
out
jl
push
je
popa
jne
cmp
ins
cmc
jo
mov
jne
clc
push
daa
rcr
ret
mov
add
je
rep
in
ja
jb
bound
xlat
or
push
sub
inc
sub
mov
cmc
mov
inc
call
and
hlt
adc
hlt
xchg
push
mov
shl
ror
jne
jo
addr16
sbb
jo
data16
cdq
les
or
ret
jne
push
cmps
jo
addr16
cwde
push
bound
rcr
out
test
push
add
aam
aam
xchg
(bad)
cmc
mov
add
hlt
xor
imul
aam
mov
arpl
bound
rol
and
jb
cmc
shl
aas
and
mov
or
sahf
je
push
and
js
jge
add
add
sbb
ret
adc
inc
jne
sub
mov
mov
je
popa
jne
stos
and
push
outs
mov
ja
popa
jne
call
add
jne
retf
les
ins
xchg
jbe
inc
mov
sti
test
in
je
popa
jne
sbb
ja
popa
jne
mov
adc
jne
jmp
daa
pusha
outs
add
jne
mov
xor
pop
outs
xor
ss
jb
mov
jne
mov
popa
(bad)
mov
mov
jmp
jmp
shl
sub
push
jp
cmps
rol
jp
ins
inc
loop
aam
xor
pop
sbb
add
push
popa
xchg
mov
xchg
cmps
pusha
outs
cmps
xor
mov
push
push
push
mov
jb
adc
popa
aaa
or
xchg
jmp
push
mov
jmp
adc
popa
ins
cmps
inc
imul
in
sbb
mov
hlt
inc
jno
data16
pop
test
jb
icebp
into
cmp
into
mov
mov
js
mov
and
stc
enter
xchg
shl
jb
mov
dec
mov
inc
push
push
ds
popf
adc
(bad)
jns
or
add
ret
pop
sub
out
xor
pop
div
scas
aam
mov
and
test
not
fcom
movs
sub
push
dec
inc
push
nop
outs
push
xchg
je
bound
sti
fs
nop
outs
inc
repz
push
jne
(bad)
je
bound
shr
in
and
sbb
ficom
inc
mov
inc
ja
das
div
jb
and
shr
adc
sti
in
and
push
je
mov
mov
cmc
ret
lods
(bad)
pusha
pop
inc
mov
test
int
xchg
cmp
in
or
jo
stos
imul
push
cmp
mov
adc
pop
cmp
mov
xchg
icebp
push
rcl
fimul
jp
jne
popf
hlt
inc
xchg
scas
dec
enter
or
ss
jo
mov
pop
push
inc
(bad)
arpl
imul
mov
mov
loop
ror
xchg
jg
xor
popa
div
mov
shl
repnz
ss
mov
xchg
xchg
cmps
cmp
hlt
ret
aaa
xchg
ins
inc
jl
pop
ins
jne
enter
pusha
inc
cld
jnp
ins
jne
cmp
pusha
push
fdivr
ins
jne
jmp
pop
pusha
pusha
data16
cmp
adc
xlat
adc
cmp
fnstcw
sub
jp
ins
jne
dec
test
popa
push
cmp
sub
push
stos
add
iret
push
lods
and
mov
enter
sub
jbe
jno
ins
imul
jbe
adc
jge
sbb
inc
or
dec
sbb
sti
inc
push
jno
(bad)
dec
push
lods
ja
jmp
xlat
push
mov
in
stos
sbb
gs
(bad)
loop
stc
in
in
sti
hlt
mul
mov
sub
rcr
in
xor
mov
xor
mov
int3
pop
mov
jb
fs
dec
div
ja
adc
xchg
test
push
add
repz
jecxz
into
push
cmps
push
outs
add
push
aad
sbb
retf
shr
nop
div
push
cs
enter
dec
xchg
adc
xchg
outs
jbe
inc
xchg
popf
sub
mov
out
popa
inc
pusha
aam
adc
pop
fcom
mov
das
pop
test
xchg
test
or
popa
xlat
pop
mov
add
rcl
push
std
cmc
xor
mov
xchg
jl
and
aas
rol
hlt
cmp
cmps
pusha
sbb
push
(bad)
iret
xchg
imul
push
shl
or
outs
jne
dec
fs
pusha
pusha
push
ins
jnp
ins
jne
pop
add
and
jnp
ins
jne
sub
shl
jp
ins
jne
sub
js
ins
jne
call
xchg
int3
jnp
ins
jne
sbb
je
popa
in
jp
sub
inc
clc
test
mov
xchg
(bad)
push
xor
jecxz
inc
xor
sbb
and
div
(bad)
(bad)
cmp
pop
inc
inc
std
aam
out
loopne
fmul
dec
cmps
jb
inc
ss
outs
sub
into
add
sub
adc
mov
cmp
stos
inc
adc
cmc
push
es
popa
cwde
mov
jp
out
loop
mov
push
ins
jge
mov
dec
cli
xor
add
jecxz
add
pop
ja
sbb
fld
cli
test
ds
jmp
pop
pop
je
sub
inc
mov
test
mov
int
daa
outs
sub
mov
lock
lahf
mov
adc
sti
mov
lea
xchg
push
sub
stos
xor
sbb
cmps
or
loopne
fadd
shl
push
nop
(bad)
mov
mov
inc
icebp
add
push
cmps
xor
xchg
mov
aaa
xor
mov
cmc
add
xchg
jae
add
iret
jne
int3
xor
hlt
rcr
bound
xor
shr
dec
or
and
je
arpl
jns
dec
jne
fcomip
xor
sbb
repnz
mov
dec
outs
jne
cli
test
lock
test
mov
in
push
cmc
and
mov
and
push
pop
and
sub
dec
or
dec
cmc
and
adc
icebp
push
cld
fdivr
je
xor
cmp
xor
out
push
dec
inc
or
xor
mov
out
adc
pop
sbb
mov
(bad)
jae
sbb
sbb
and
idiv
push
pop
cwde
sbb
jg
or
xchg
into
sbb
push
mov
dec
sbb
scas
jnp
add
pop
xchg
rcl
cwde
(bad)
out
fistp
loope
int
in
fcomp
repz
out
mov
jl
xchg
(bad)
loopne
push
clc
addr16
lods
pop
and
sub
in
cs
fcomp
jp
jl
sub
shr
or
loope
repz
gs
push
dec
xor
xchg
xchg
(bad)
mov
outs
add
pop
bound
cld
push
xor
push
outs
movs
shl
mov
and
xor
jl
ins
pop
mov
ins
pop
pop
mov
push
bound
adc
call
clc
jmp
daa
jl
pop
or
mov
add
xor
cld
mov
nop
add
sbb
jmp
mov
out
pop
cmp
xor
mov
inc
ret
pop
je
adc
xor
in
cwde
xchg
jne
dec
and
mov
call
push
jb
js
jne
sbb
repz
movs
ret
aam
xor
dec
add
inc
(bad)
cmc
xchg
inc
dec
adc
enter
outs
inc
xchg
aaa
js
hlt
inc
sub
arpl
repz
xchg
movs
sar
movs
jae
cmp
and
shl
add
outs
jbe
call
dec
imul
mov
and
adc
int
xchg
xchg
jmp
and
xor
xor
js
dec
inc
push
aas
movs
xor
xor
imul
je
push
(bad)
mov
in
mov
adc
mov
cmps
repz
aaa
mov
mov
cmp
adc
mov
xchg
mov
jg
add
mov
add
xlat
jnp
hlt
jo
aad
inc
int3
shl
xchg
test
adc
lods
jbe
test
les
jo
or
push
push
and
aas
in
pop
fwait
int
dec
jno
mov
jg
or
fcom
sub
inc
mov
jge
jmp
jbe
push
aas
cmc
add
retf
in
sbb
xchg
data16
push
cmp
xchg
inc
test
pop
add
vmread
xchg
and
gs
pop
inc
lds
xchg
movs
ret
mov
mov
pushf
mov
adc
jb
loop
adc
xchg
adc
bound
adc
xchg
outs
and
push
mov
push
in
lgs
push
test
in
imul
movs
or
jecxz
inc
movs
mov
les
je
jb
mov
jne
xchg
push
inc
xor
cmp
ret
clts
dec
stos
mov
mov
pop
sbb
inc
ret
mov
cmp
ret
jno
bound
push
jns
outs
jne
sbb
sar
jns
push
loopne
inc
rcr
push
stc
or
ret
inc
inc
add
or
push
adc
xor
jg
dec
cmc
jecxz
movs
mov
gs
jmp
dec
push
loopne
mov
(bad)
jns
iret
xor
push
push
rcl
and
ins
and
nop
xlat
mov
(bad)
jno
jl
xor
push
sub
pusha
hlt
enter
call
daa
mov
jno
ins
daa
push
jns
outs
add
icebp
push
daa
outs
dec
jmp
xor
inc
push
inc
js
sub
jne
sbb
inc
mov
das
and
mov
loopne
jle
imul
(bad)
sub
out
bound
test
mov
jne
mov
jecxz
adc
adc
add
jns
add
ret
arpl
popa
jne
pop
hlt
and
in
xor
sbb
push
or
xor
repz
and
xchg
adc
inc
movs
jmp
aad
sar
mov
cmp
hlt
inc
call
push
add
lds
test
pop
ret
das
jne
jne
jb
ret
test
outs
and
mov
lods
xor
fsin
fmul
inc
movs
xor
jnp
dec
call
nop
(bad)
xor
sub
ret
in
jbe
xchg
and
cdq
into
sub
mov
and
clc
inc
mov
and
cwde
test
pop
xlat
jb
hlt
xor
or
stos
and
div
pop
jbe
cld
xchg
shl
and
enter
or
icebp
loop
jmp
and
sub
shl
bound
adc
nop
out
nop
adc
add
enter
mov
add
fld
ins
cmps
(bad)
jns
push
jne
jmp
and
bound
jne
pop
fs
pusha
bound
jns
outs
jne
(bad)
xor
cmps
dec
jns
outs
push
jb
xor
mov
mov
push
enter
bound
test
outs
jne
pop
mov
xchg
pusha
lds
stc
outs
aad
mov
inc
xchg
sbb
mov
paddq
push
js
and
aas
cmc
inc
movs
stc
bnd
test
xor
fbstp
les
and
push
mov
test
push
inc
cmp
jecxz
lds
clc
(bad)
lds
mov
lds
xchg
cmp
movs
cmp
xchg
hlt
sub
cmc
xor
les
mov
add
outs
sti
js
cmp
call
pop
cmp
adc
bound
call
xor
(bad)
jmp
inc
add
push
pusha
sahf
je
stos
je
mov
icebp
push
sar
lods
sub
pop
mov
mov
icebp
inc
push
sub
push
imul
ja
and
jnp
adc
je
arpl
adc
cmp
xor
adc
hlt
fsub
adc
shl
cs
repz
mov
dec
add
mov
out
mov
inc
inc
hlt
test
ja
cld
hlt
inc
(bad)
iret
repnz
jg
pop
push
push
in
je
cmps
bound
jns
mov
lock
fidivr
cmp
mov
out
cmp
outs
movs
sar
push
dec
ds
je
sbb
xchg
loope
aaa
sbb
call
mov
and
scas
jne
retf
adc
scas
clc
test
inc
movs
add
add
add
sbb
xchg
inc
mov
xor
or
add
test
out
in
jecxz
repnz
inc
daa
arpl
add
xchg
fadd
std
in
and
scas
aam
xor
or
repnz
mov
mov
and
je
fadd
push
jnp
mov
repnz
neg
imul
push
lds
mov
pop
lea
jge
stos
xchg
cmp
ror
and
(bad)
out
jmp
mov
(bad)
cmp
jg
mov
sbb
push
cmp
ins
retf
ins
sbb
add
mov
call
xor
idiv
pop
jno
ret
xchg
int3
cmp
mov
jmp
repnz
not
jle
add
bound
pop
push
and
jo
aad
xchg
sahf
adc
fwait
sub
sar
add
adc
and
jp
enter
fisub
xchg
jae
fcomp
and
jnp
mov
jge
cmp
xor
add
mov
repz
or
pop
and
movs
fs
stos
das
mov
mov
lds
xchg
repnz
pop
popf
xlat
and
mov
stos
pop
in
retf
into
or
push
nop
or
xchg
xchg
cmc
cmp
out
(bad)
mov
adc
dec
adc
int
stos
int3
hlt
rcr
nop
mov
and
fsub
rcr
mov
test
movs
push
fwait
push
mov
mov
xor
fcom
shl
bound
inc
xchg
fwait
cmc
hlt
pusha
jno
rol
enter
add
add
cdq
lods
add
sub
cdq
stos
cmp
in
mul
or
stos
dec
mov
sub
mov
out
retf
ror
jb
dec
pop
test
xor
xor
fistp
inc
adc
jns
clc
jp
rcr
push
cdq
ja
enter
neg
aad
setne
leave
jo
mov
sbb
inc
jo
ja
jmp
test
add
mov
inc
mov
push
adc
in
lahf
jbe
aaa
into
mov
ror
mov
loope
popf
lds
add
fs
lea
outs
je
fs
mov
add
ins
push
pop
jmp
jbe
adc
int
retf
push
lock
lds
idiv
dec
cmp
mov
int3
enter
dec
mov
aaa
pop
fwait
div
addr16
(bad)
jmp
int
jmp
push
jecxz
sub
lahf
sbb
and
adc
dec
arpl
mov
ss
mov
into
inc
fst
or
out
adc
aam
sbb
sbb
lea
in
movs
arpl
data16
or
out
xchg
pop
xchg
inc
retf
push
repz
mov
xchg
push
add
es
aad
pop
in
dec
out
mov
adc
fisubr
shl
enter
in
jne
daa
adc
cmp
ffreep
xor
cmc
cmp
cwde
or
ja
xor
iret
push
aaa
jecxz
and
enter
add
fbstp
or
dec
xor
jns
imul
inc
arpl
stc
jns
or
mul
pop
mov
xchg
stos
and
mov
and
mov
daa
rcl
int
stos
dec
mov
xor
ret
repz
sub
mov
jno
sbb
xor
addr16
mov
cmp
cmps
sahf
xor
test
out
fisubr
mov
in
enter
lods
enter
xchg
sub
out
mov
push
mov
cmp
lahf
stos
dec
lods
jmp
arpl
and
call
mov
or
mov
dec
stos
aam
stc
sub
ds
popa
movs
xor
pop
ja
cwde
push
push
xor
mov
pop
mov
xchg
out
fidiv
lods
push
and
push
mov
ret
adc
sub
ins
or
and
mov
dec
push
in
fwait
push
ja
outs
pop
fisubr
aad
enter
pcmpgtd
adc
test
mov
and
cmp
mov
div
nop
adc
dec
test
out
aam
sbb
xchg
sbb
mov
movs
xor
pop
pop
pop
bound
xor
call
mov
and
pop
mov
jg
cdq
push
mov
cmc
adc
out
pop
test
rcl
fsubr
ja
cmp
mov
aaa
jb
lahf
cwde
imul
vphadduwq
je
test
sbb
rcl
in
push
addr16
jmp
mov
sahf
and
movs
icebp
jae
sbb
sub
xchg
add
retf
mov
cmp
mov
push
outs
adc
xchg
outs
pusha
dec
cdq
or
shr
xchg
xchg
sbb
adc
ret
cdq
sbb
xor
sar
fwait
pop
jbe
out
(bad)
ror
addr16
aam
pop
fidivr
push
icebp
xchg
arpl
outs
jle
outs
jne
mov
shl
jnp
fidiv
adc
push
arpl
mov
out
mov
xor
lock
es
inc
or
xor
push
push
loopne
adc
je
js
cmps
inc
and
jnp
ins
add
jae
ss
mov
adc
add
jae
xchg
mov
mov
outs
gs
call
test
add
stos
es
loopne
(bad)
jnp
call
adc
mov
push
repz
and
outs
or
adc
mov
push
outs
xchg
adc
shr
xchg
jg
in
cmps
push
shr
lods
call
in
test
out
cmp
and
sti
aas
jmp
xchg
movs
rcr
(bad)
push
repz
loop
aas
dec
or
int3
movs
popa
je
repz
fidivr
ss
lods
jp
pushf
sbb
in
mov
in
mov
int
mov
inc
pop
mov
ret
(bad)
jbe
retf
jb
or
es
adc
xor
xor
jne
pop
xchg
fcos
and
rol
pop
push
jns
push
xchg
loopne
data16
jns
pop
and
mov
xchg
mov
and
push
and
mov
sbb
add
(bad)
imul
push
retf
gs
pusha
and
outs
xchg
xor
cmc
push
xor
xchg
or
sub
jb
cmc
icebp
jno
popa
cwde
out
imul
sbb
push
inc
xchg
jo
dec
stos
out
div
call
dec
mov
push
nop
lea
pop
out
jns
movs
or
jno
mov
push
stos
call
xchg
sti
mov
mov
jmp
les
and
pop
or
pop
lds
rol
out
push
or
fcom
pop
mov
adc
loop
movs
jecxz
(bad)
std
cmp
(bad)
and
or
cld
rol
add
sub
xor
jne
js
cdq
or
aad
mov
out
pop
leave
in
das
test
adc
add
pop
or
mov
inc
clc
mov
inc
shr
cmp
fst
lds
fild
mov
add
cmp
inc
pop
rcl
fwait
inc
xchg
sar
add
mov
les
xchg
pop
in
push
dec
mov
jbe
push
aam
cmp
mul
cld
lds
sbb
xchg
mov
dec
xlat
arpl
in
and
mov
inc
imul
mov
ja
(bad)
push
nop
cmc
mov
jle
pop
test
push
cmps
jae
xchg
sahf
sbb
daa
adc
dec
xchg
dec
and
mov
xor
add
pop
jmp
adc
add
or
inc
(bad)
rcr
fisttp
xor
inc
sar
push
pop
adc
push
les
sub
scas
push
shl
movs
inc
jnp
ficomp
rol
xor
add
push
call
loope
push
inc
es
mov
add
je
pusha
pusha
(bad)
pop
test
ret
sub
push
cmp
fsub
pop
in
test
pop
mov
icebp
cmp
movs
and
sbb
rol
mov
push
xchg
push
sbb
xor
popa
mov
or
sub
lock
les
imul
inc
inc
mov
outs
adc
repnz
ret
cmp
daa
into
or
adc
outs
call
dec
ds
mov
aad
pop
out
pop
adc
mov
jb
les
cmp
pusha
movs
mov
lea
cmps
cmp
lds
aam
mov
xchg
out
add
pushf
xor
jmp
inc
cli
test
lds
dec
js
xor
daa
sbb
dec
push
pop
icebp
movs
jbe
dec
cmp
jbe
pop
pushw
and
cmc
loope
adc
cwde
test
stos
jne
mov
ja
ds
push
xchg
sbb
lods
movs
test
clc
lods
fcmovnu
xchg
mov
test
add
push
pusha
out
lock
jle
dec
inc
inc
or
div
ja
mov
fdiv
stos
inc
es
jo
pop
jnp
pop
add
not
push
push
scas
sbb
fbstp
lods
not
jecxz
mov
xchg
jmp
jmp
retf
daa
push
lock
mov
xlat
push
jmp
shl
hlt
sar
sub
out
jns
(bad)
and
imul
out
retf
jns
mov
pop
fld
inc
mov
outs
cli
mov
add
jge
sub
cmp
sub
fmul
inc
sbb
xchg
adc
stc
dec
es
(bad)
loope
loop
adc
out
sub
dec
cmp
mov
mov
sbb
sbb
xchg
fcmovb
js
in
sbb
inc
shl
pusha
xchg
in
(bad)
cmp
push
mov
inc
lods
lds
je
ret
jp
inc
shr
inc
and
data16
rol
iret
xor
data16
call
mov
sbb
add
outs
aad
mov
nop
jns
fdivr
nop
pushf
in
inc
adc
js
or
addr16
push
pop
ds
sub
add
xchg
jnp
fmul
adc
xor
cmp
mov
mov
sub
dec
mov
cmp
adc
and
mov
fwait
hlt
and
mov
arpl
sub
je
xor
inc
push
sub
bound
jmp
test
les
(bad)
fdiv
mov
(bad)
in
push
dec
pop
push
sub
jecxz
push
fst
mov
jbe
mov
call
jle
mov
xor
hlt
icebp
dec
(bad)
js
inc
mov
push
cld
js
sub
adc
mov
or
out
jns
xchg
scas
dec
ins
xor
ret
fisttp
retf
je
sub
adc
mov
jmp
mov
inc
sub
and
dec
add
sub
push
cli
int3
stos
xchg
cld
dec
jmp
repnz
lahf
push
push
inc
sub
(bad)
outs
sub
sbb
xor
jecxz
cwde
ret
(bad)
loopne
pop
jmp
arpl
add
lahf
mov
add
lock
push
ret
popf
ret
push
inc
sahf
inc
jb
dec
xor
xchg
fs
xchg
(bad)
pop
fstp
stos
jne
outs
hlt
push
sub
dec
cmp
outs
jne
fdiv
ja
xor
cmp
loopne
or
jl
fnstenv
dec
xchg
adc
pop
dec
or
push
in
sub
or
stos
je
icebp
xchg
or
or
jmp
jae
mov
mov
cmp
stos
xor
sub
test
jae
rcr
in
nop
dec
inc
ffree
js
test
div
jp
repz
test
ja
(bad)
gs
jae
movs
mov
add
aaa
ret
mov
adc
lds
call
adc
inc
sahf
and
aam
fdiv
std
fwait
test
adc
jb
dec
jge
xchg
stos
inc
push
adc
dec
sbb
imul
(bad)
loop
push
jle
test
or
push
xlat
xchg
mov
xchg
xor
ror
imul
aad
shr
(bad)
dec
jo
cli
push
out
cmp
(bad)
sar
das
pushf
leave
inc
cmc
nop
push
iret
mov
xor
lods
popf
or
test
js
(bad)
out
lds
push
cdq
mov
push
xchg
push
mov
cmps
mov
ss
pushf
lock
xchg
fadd
mov
add
adc
or
xor
cmp
mov
fadd
push
pop
iret
adc
or
mov
dec
ja
add
pop
mov
mov
into
fild
sahf
mov
xchg
les
jbe
jmp
jns
je
add
test
push
nop
mov
mov
pop
adc
mov
sahf
mov
xchg
xor
mov
ror
jecxz
xor
lea
(bad)
mov
jno
dec
mov
cmp
push
adc
mul
inc
sbb
daa
xchg
pop
push
xor
adc
mov
jne
loopne
xchg
jae
pop
inc
sbb
mov
cmps
push
call
mov
mov
(bad)
dec
fisttp
xor
adc
iret
test
xchg
ret
scas
xor
jmp
add
xor
icebp
repz
or
fbstp
dec
in
xchg
(bad)
mov
jb
in
mul
shr
leave
iret
hlt
xchg
lods
gs
gs
push
dec
enter
xchg
loopne
xchg
push
jmp
push
pop
mov
cmps
adc
call
inc
mul
push
outs
sbb
xor
jo
ret
outs
mov
and
pop
xchg
cwde
sub
test
adc
mov
mov
in
stos
daa
add
lock
jns
xor
pop
cmps
jo
call
xor
sbb
popa
ret
loop
push
cld
jbe
cmps
cmp
mov
xor
inc
repnz
mov
xchg
movs
das
mov
retf
xor
mov
iret
mov
sahf
mov
xchg
hlt
iret
mov
lahf
mov
xchg
cmps
fisttp
mov
xchg
jae
cmp
sbb
adc
jno
push
sub
test
test
xchg
adc
sbb
jae
adc
xchg
mov
mov
jb
movs
aam
popa
gs
sbb
and
fdiv
mov
adc
inc
sbb
mov
sbb
cmc
bound
in
adc
cmp
arpl
in
ret
mov
cld
xlat
loop
aad
add
in
mov
sbb
mov
mov
fist
pop
and
xchg
test
enter
in
(bad)
push
xchg
mov
add
(bad)
mov
mov
xor
adc
les
inc
mov
xor
div
imul
inc
icebp
pop
jg
push
je
lods
test
add
sub
mov
les
(bad)
jle
enter
shl
and
jg
mov
push
push
movs
jo
mov
cld
mov
inc
in
sbb
mov
or
add
(bad)
clc
imul
xchg
xor
lock
out
jmp
xor
push
mov
scas
mov
nop
pop
push
mov
sub
inc
lahf
mov
xchg
inc
outs
mov
sahf
mov
mov
jg
push
lahf
mov
mov
arpl
lahf
mov
xchg
mov
mov
xchg
repnz
mov
sub
sbb
stos
xor
pop
out
stc
pop
mov
sbb
out
fisubr
call
push
xor
cs
and
push
mov
inc
sub
ds
mov
ja
dec
or
aad
jl
icebp
rol
mov
pusha
std
fs
rol
cmp
in
xor
fs
mov
pop
movs
ret
jne
outs
inc
mov
xchg
dec
push
and
jmp
je
imul
and
jae
aas
dec
cmp
jo
lock
repnz
or
xchg
push
hlt
and
test
cmc
mov
and
imul
xchg
inc
in
sar
sub
outs
(bad)
daa
mov
movs
and
cmps
xor
int3
call
mov
cmp
jno
inc
mov
movs
dec
ret
int3
xor
push
icebp
loop
push
popf
push
les
adc
xchg
out
cmc
mov
int3
push
cmps
jg
outs
inc
loope
mov
sbb
mov
mov
sub
xchg
pop
dec
jnp
aam
xchg
jbe
mov
mov
pop
mov
sahf
mov
lahf
mov
xchg
idiv
(bad)
cwde
mov
xchg
popa
cmp
mov
in
xchg
jno
mov
mov
enter
mul
scas
or
xchg
dec
push
adc
dec
dec
(bad)
out
jbe
cmps
hlt
jno
outs
(bad)
add
inc
stos
dec
lea
xchg
mul
mov
mov
scas
and
(bad)
cld
enter
fbstp
xchg
sahf
push
jno
or
add
pop
movs
loope
test
fdivr
push
mov
mov
out
out
jnp
imul
fs
jb
or
push
mov
inc
(bad)
in
or
jmp
xlat
add
stos
scas
call
je
ret
dec
pushf
or
cmps
ret
mov
aaa
xor
mov
scas
add
fsubr
out
jg
jecxz
mul
sbb
pop
xchg
inc
jg
and
sub
test
cmps
adc
sub
adc
xchg
adc
cmp
inc
jae
mov
and
xchg
nop
add
test
xor
xor
add
movs
pop
xor
in
jno
inc
stos
xchg
add
inc
sub
mov
rcl
mov
sub
xchg
popa
cmp
mov
xor
add
mov
lahf
mov
xchg
loopne
mov
mov
pushf
dec
loopne
xchg
xlat
scas
mov
sub
inc
xchg
test
mov
mov
(bad)
jmp
mov
stos
xchg
xor
fcmovu
push
adc
jo
lock
cdq
or
xchg
push
cld
jbe
add
inc
call
mov
jge
push
cmps
movs
cmps
push
scas
enter
or
(bad)
out
fistp
jns
shr
xchg
jbe
jb
into
sub
cmps
inc
jne
popa
jnp
retf
adc
ret
jbe
mov
lea
jmp
aaa
mov
movs
arpl
lods
adc
jecxz
sbb
ds
bound
stos
and
and
xchg
pop
dec
call
test
or
push
and
rcl
sub
dec
jmp
xor
(bad)
xor
push
mov
cmps
mov
test
mov
jecxz
out
cmc
pop
xor
sub
sub
push
xchg
ret
mov
inc
daa
hlt
icebp
add
add
add
mov
out
loope
xchg
sbb
(bad)
mov
push
xor
pop
push
adc
gs
xchg
ret
imul
loop
rcr
add
outs
push
xor
mov
jg
in
iret
mov
inc
adc
sbb
shl
mov
lahf
mov
dec
jmp
lds
lahf
mov
xchg
pop
fimul
cmp
adc
lahf
mov
sbb
xchg
add
mov
imul
xchg
arpl
xchg
adc
pop
add
push
rol
fistp
sbb
je
shl
fidivr
pop
jne
sti
in
repnz
cmc
mov
imul
sub
push
fadd
in
pushf
mov
call
xor
movs
arpl
mov
xor
pop
call
sti
cmp
pop
push
bnd
mov
mov
push
mov
js
jg
mov
xchg
adc
and
scas
stos
cmp
(bad)
jae
(bad)
loop
cmps
dec
push
jp
pop
inc
jno
ret
arpl
ror
mov
cmps
jae
(bad)
jae
xlat
and
ret
and
or
push
pop
dec
lods
mov
push
jb
xlat
fcomp
jo
xchg
and
mov
mov
add
and
ins
or
jbe
mov
ret
xacquire
jg
xchg
inc
or
xchg
call
lds
add
or
inc
in
repz
cmps
iret
add
mov
out
push
fild
mov
adc
lahf
retf
push
adc
int
in
stc
sbb
xchg
push
mov
popf
or
scas
mov
retf
icebp
rcl
sahf
jmp
mov
mov
call
inc
imul
fdiv
lods
cli
sbb
mov
dec
pop
sbb
sbb
repz
lea
sub
xor
gs
ret
push
xchg
mov
add
jne
add
mov
xor
inc
mov
les
lds
add
rcl
movs
sbb
mov
sub
push
inc
pop
sub
mov
inc
mov
aad
ret
sti
dec
std
jmp
les
fwait
out
sbb
and
xchg
or
call
fs
inc
jmp
jnp
pop
ror
xchg
mov
mov
fisttp
addr16
cs
and
xchg
jge
add
aas
sar
lods
cwde
mov
adc
adc
cmp
fidiv
aaa
xor
shl
xchg
sbb
loopne
call
fs
jno
nop
popf
data16
cmp
icebp
(bad)
rcr
xor
fld
out
sub
nop
xlat
fbstp
test
mov
ja
jne
xchg
pop
out
cli
mov
fcomip
add
addr16
mov
xor
mov
aam
add
jge
dec
push
inc
adc
mov
cmp
je
lahf
les
jmp
daa
push
and
data16
pop
or
aad
shl
daa
lods
retf
jge
cmp
mov
sbb
push
add
inc
lods
movs
sbb
pop
hlt
add
jecxz
cmp
(bad)
cmc
sbb
sbb
sub
mov
rol
in
jmp
push
mov
dec
mov
xor
aaa
add
xlat
mov
inc
pushf
push
int3
xchg
and
mov
add
(bad)
push
inc
adc
jbe
and
jne
jl
lods
dec
cli
xchg
cmps
rol
ftst
arpl
fs
les
div
scas
mov
mov
sub
mov
(bad)
xor
sub
jns
repz
fs
sar
cmp
xor
or
out
mov
ret
cmp
out
pop
sbb
stos
jmp
and
xchg
jnp
pushf
data16
and
mov
mov
das
adc
aam
rcl
out
rcl
retf
and
mov
sti
xchg
and
(bad)
pop
jno
into
test
jne
mov
and
js
gs
retf
cmps
in
push
adc
sub
sbb
std
inc
mov
gs
push
repnz
je
and
jmp
xchg
xor
inc
xor
jl
or
stos
push
dec
mov
popf
sahf
daa
rep
inc
(bad)
push
adc
lods
and
inc
add
cmp
mov
add
repnz
enter
ds
(bad)
mov
test
cmc
rol
jns
add
sbb
into
push
shl
sub
jb
mov
ret
mov
mov
xchg
test
test
mov
add
lds
enter
sti
aad
add
ss
jnp
cmp
add
add
cmp
stos
test
push
mov
daa
(bad)
rcr
pop
imul
pop
fs
scas
mov
inc
pusha
xor
and
push
dec
iret
je
in
inc
mov
adc
imul
mov
enter
pop
repnz
adc
xchg
xor
mov
mov
ja
mov
inc
js
or
nop
(bad)
(bad)
ret
je
xchg
js
retf
mov
aam
add
xchg
push
xor
call
push
push
into
nop
and
shl
sbb
adc
imul
rcl
repz
pusha
scas
cmc
xchg
cs
fimul
dec
mov
mov
test
sbb
push
adc
aaa
or
cmp
out
or
ja
fs
fstp
stos
cmps
mov
leave
stc
test
and
mov
sub
mov
sbb
arpl
add
mov
in
sub
mov
mov
cmps
inc
inc
jmp
inc
scas
push
mov
push
stos
stc
mov
sub
test
outs
mov
jae
aas
or
je
or
dec
mov
pop
aad
rol
xchg
lea
mov
je
xor
or
div
(bad)
push
inc
cmps
mov
push
retf
push
out
repz
sti
sub
mov
jge
push
popa
bound
je
scas
in
test
jl
test
mov
test
cwde
mov
aaa
and
in
loop
out
sub
rcr
shl
fdivr
ja
pop
push
add
mov
and
sbb
adc
les
push
or
mov
mov
inc
add
cmc
shr
jg
sbb
pcmpeqd
ret
sbb
and
outs
shr
and
iret
rol
shl
cmp
loope
call
push
push
add
outs
sbb
cmp
push
retf
sbb
mov
xchg
xchg
out
mov
mov
sbb
push
sbb
mov
xchg
jmp
shl
mov
out
stc
push
or
adc
mov
pop
mov
fs
jbe
rol
cmps
shr
xchg
cmp
sub
inc
or
scas
pop
push
mov
push
jae
fisttp
fcom
push
cld
xor
xor
dec
imul
add
retf
(bad)
pusha
in
xchg
div
pop
test
pusha
or
rol
push
loopne
(bad)
mov
cmps
loope
cmc
push
call
lock
sti
jg
leave
xchg
sub
and
sub
popa
pop
je
js
jmp
addr16
cmp
cli
repz
mov
(bad)
sbb
adc
sar
mov
sti
and
adc
sti
mov
dec
ins
das
retf
xor
outs
loopne
jge
xor
psubw
outs
retf
mov
jp
lods
sub
fisub
shl
pop
xchg
(bad)
retf
scas
mov
add
pop
aas
sub
push
sbb
push
xchg
jae
and
loope
mov
popf
popa
arpl
xor
xor
dec
mov
xchg
mov
(bad)
out
mov
mov
inc
adc
or
jbe
and
or
pop
mov
and
xchg
mov
retf
adc
and
sbb
mov
sti
push
and
mov
jns
dec
test
push
jmp
xchg
add
aad
jle
or
jmp
je
lds
not
test
test
cmps
add
xchg
in
fnstcw
outs
test
or
popa
test
adc
jnp
push
mov
mov
loope
jne
xchg
mov
mov
sub
xor
hlt
sub
or
nop
rol
imul
data16
inc
push
xchg
mov
std
cmps
mov
pop
pop
call
jno
push
push
mov
cmp
inc
xor
js
jns
ror
sub
push
sbb
sbb
cmp
sti
jb
cs
pop
ffree
jnp
fldenv
enter
or
sub
cli
(bad)
repz
(bad)
ds
call
test
iret
(bad)
jmp
lods
sub
cwde
mov
sub
dec
aam
scas
imul
ficomp
and
sbb
test
loope
inc
inc
and
mov
jno
xchg
sbb
ret
inc
(bad)
(bad)
dec
mov
aaa
sgdtd
in
loope
pusha
int3
xchg
je
popa
inc
inc
mov
mov
(bad)
adc
fld
sub
ja
jp
rol
pop
push
icebp
push
ins
addr16
loopne
jl
push
and
loopne
jne
fsubr
clc
or
bound
add
retf
dec
ja
retf
push
out
js
pop
cli
movs
pusha
jl
xor
jbe
outs
mov
inc
push
les
inc
xchg
lahf
js
pop
jbe
imul
add
rol
xchg
jmp
adc
cmc
mov
and
nop
rcl
cli
cwde
cmp
out
inc
pop
das
pop
stos
dec
xchg
jbe
popa
xor
jns
push
mov
jmp
sbb
out
adc
lock
dec
into
xlat
mov
adc
xlat
mov
lds
dec
cmp
shr
xchg
gs
push
mov
mov
push
shufps
xchg
or
das
(bad)
pop
or
scas
cmp
dec
sbb
aam
pop
sahf
mov
sub
jae
outs
dec
gs
into
pop
xchg
fimul
jns
inc
pop
jmp
fdiv
retf
xchg
clc
or
inc
iret
sti
lods
sar
imul
leave
fidivr
dec
fxch
(bad)
sbb
jecxz
adc
add
jnp
lock
or
fs
mov
(bad)
out
xchg
mov
daa
pop
mov
jno
mov
xor
xor
aad
jecxz
cmps
das
inc
mov
adc
mov
cwde
pop
cmp
ficom
inc
pop
sub
sub
mov
xchg
inc
or
jmp
push
hlt
xchg
inc
out
pop
push
dec
mov
xor
cmp
nop
push
in
mov
imul
(bad)
fmul
shl
jo
push
repnz
xchg
(bad)
pop
icebp
lock
cli
jmp
add
ins
hlt
shr
aad
xchg
push
jne
in
cmp
ret
js
cmps
ret
in
mov
or
sub
dec
or
add
test
pop
sti
pop
aad
dec
(bad)
ja
push
in
jnp
sub
xchg
inc
(bad)
std
cli
dec
ins
xlat
xor
(bad)
sub
mov
push
mov
shl
ins
clc
bnd
dec
xchg
aas
add
dec
inc
rcl
jmp
pusha
cmp
pusha
dec
fimul
scas
jnp
clc
add
or
lods
cld
dec
in
aam
icebp
jge
imul
dec
and
or
outs
jbe
sti
cld
cs
inc
jmp
cwde
in
aas
call
xor
sub
push
sbb
pop
cli
pushf
repz
mov
cmp
mov
cmps
add
loopne
addr16
xor
sbb
adc
nop
cmp
mov
fs
jno
inc
pop
popa
adc
bound
iret
hlt
xrelease
dec
repz
lods
or
arpl
dec
jns
cmps
(bad)
xchg
push
outs
or
sti
inc
daa
xchg
xor
mov
jmp
mov
lahf
dec
lea
add
pusha
ss
sti
push
sbb
int
stos
push
not
push
mov
pop
xchg
mov
cmps
mov
in
sbb
popf
and
dec
aaa
test
dec
fwait
mov
pusha
push
pop
and
mov
pop
sub
rcr
mov
ins
push
ror
push
mov
clc
mov
mov
pop
pop
dec
or
enter
loope
mov
ror
push
aaa
mov
and
pop
lock
es
jo
mov
cmp
daa
mov
jo
mov
push
loopne
xor
inc
dec
lahf
jnp
cmps
add
mov
js
sbb
mov
fmulp
retf
mov
add
sbb
scas
nop
adc
les
dec
mov
icebp
int
push
pop
or
inc
or
jg
jmp
jge
in
mov
shr
cmp
idiv
imul
je
or
cmp
cmp
shl
mov
inc
repnz
call
mov
inc
jae
jmp
aam
iret
data16
pop
pusha
ja
int
nop
push
lods
xchg
inc
les
jno
and
jecxz
sub
aam
xlat
xor
mov
icebp
mov
or
jmp
(bad)
call
fs
fs
pop
jg
fnstenv
(bad)
xor
shr
lods
cmp
jecxz
push
aas
hlt
push
and
sbb
pop
adc
cwde
mov
push
push
add
push
inc
movs
mov
push
xchg
add
out
mov
jmp
cmps
sub
stos
fld
mov
test
xchg
cmp
ss
sbb
aaa
xor
pushf
daa
adc
pop
popaw
add
fwait
imul
icebp
data16
stos
dec
xchg
nop
mov
push
adc
lods
addr16
or
(bad)
mov
pop
fsubr
cli
ins
push
rcr
movs
shl
inc
sahf
imul
inc
adc
adc
push
and
test
sti
dec
adc
and
lea
xor
stc
mov
aad
lods
dec
jg
retf
xchg
addr16
and
xchg
outs
add
jb
lea
shl
inc
nop
xor
ja
call
aad
jmp
cld
call
mov
js
sbb
lock
adc
int3
sbb
mov
fstp
icebp
ss
es
push
dec
outs
sbb
std
push
and
xchg
popf
cli
adc
cmp
popf
aad
repnz
mov
jb
inc
cmp
inc
adc
and
jb
arpl
inc
out
cmp
(bad)
test
test
push
jmp
test
movs
pusha
pop
not
aam
jns
mov
es
and
mov
fucom
loope
test
fild
push
jo
fs
jg
pop
add
sbb
icebp
mov
adc
push
js
and
ret
mov
loop
mov
sysexit
adc
ret
test
push
mov
dec
(bad)
ret
shl
fwait
inc
out
dec
lds
add
test
jbe
gs
cmp
pusha
jnp
aaa
inc
xchg
(bad)
int
fwait
in
adc
sub
aaa
repz
cmps
bound
mov
test
(bad)
xchg
shl
fwait
jne
pusha
and
add
pusha
xchg
int3
mov
sbb
pop
dec
pop
cmp
mov
and
pop
sti
sub
mov
xor
hlt
in
mov
iret
movs
loope
xor
cmp
mov
shr
(bad)
imul
push
push
test
shl
inc
add
out
(bad)
test
pop
adc
pop
test
push
popf
les
cmps
xor
inc
test
ins
retf
add
or
int
out
cmp
sti
cmp
add
mov
sbb
sbb
inc
push
mov
repnz
pusha
sbb
movs
int3
or
cmps
scas
gs
hlt
scas
jne
dec
fnstcw
xor
sub
test
neg
jns
xor
loope
or
movs
sbb
push
xor
or
mov
fs
cmps
fisubr
jmp
and
dec
cmp
inc
mov
cdq
test
mov
cmc
mov
adc
into
clc
mov
in
pmaddwd
and
and
push
inc
inc
ffreep
xor
cmps
xchg
pop
in
hlt
pop
repz
retf
cmps
out
fiadd
out
sbb
shr
pop
mov
push
jbe
sbb
inc
test
xchg
gs
mov
inc
adc
js
in
push
cmps
adc
call
(bad)
loop
push
adc
adc
push
out
sub
adc
mov
or
mov
fild
(bad)
shr
in
xchg
push
xor
and
mov
or
lahf
cmc
nop
call
add
movs
int3
fmul
xor
clc
dec
pop
imul
xor
int3
jmp
inc
in
mov
inc
ja
les
fimul
xchg
gs
std
test
cld
push
cmps
out
xor
imul
out
shr
fisttp
push
pusha
mov
cmc
pop
or
out
gs
ror
pop
imul
mov
dec
sbb
popa
dec
add
fisttp
cmp
cmc
lock
cmps
sub
mov
jg
xor
clc
lahf
cwde
stc
and
cmps
and
jle
jns
inc
jno
data16
(bad)
imul
mov
mov
xor
retf
adc
out
xchg
out
lds
enter
js
test
adc
test
fsub
xchg
adc
shl
mov
fisub
xchg
pop
and
mov
xor
or
repnz
inc
adc
movs
arpl
fdiv
add
mov
test
call
xchg
push
push
mov
pop
lahf
sbb
loop
sbb
sub
pslld
and
jbe
or
mov
adc
or
jmp
call
push
js
in
loop
jns
pusha
push
sbb
aas
arpl
outs
jmp
mov
and
cmps
ds
xor
fimul
mov
dec
sbb
mov
sub
pop
push
mov
ror
push
cmps
and
xchg
pop
shr
jne
push
mov
push
inc
jb
mov
out
xlat
repz
mov
ret
shl
hlt
into
and
jne
arpl
nop
dec
adc
clc
dec
or
hlt
push
push
xor
jnp
out
and
shl
push
xor
ins
cmp
mov
inc
ins
cmp
and
shl
test
push
ss
movs
les
mov
fadd
ret
int3
sbb
sub
hlt
icebp
outs
aam
push
push
add
aam
(bad)
jecxz
mov
je
mov
mov
inc
sbb
ret
iret
test
add
bound
mov
movs
jecxz
push
jb
mov
ja
loope
rcl
mov
xchg
adc
push
bound
mov
mov
movs
(bad)
jecxz
push
jne
xchg
fild
(bad)
sbb
repz
icebp
jb
push
mov
jl
jno
or
xlat
or
jecxz
xor
fdivr
scas
pop
pop
pop
push
cld
pop
clc
les
cld
les
fdivrp
push
rcr
jne
loop
cwde
mov
push
movs
adc
or
cli
sub
fdiv
pop
jmp
ret
mov
dec
xchg
fstp
jmp
adc
daa
loopne
pop
xchg
scas
rcl
xchg
ficom
lock
pop
loop
je
shl
adc
(bad)
add
jb
stos
bound
cld
xchg
push
call
xlat
outs
push
dec
scas
jne
xor
or
push
xor
xchg
jecxz
cmc
xchg
scas
pop
sub
mov
aam
push
gs
mov
outs
push
add
ret
mov
push
push
hlt
inc
mov
outs
fprem
adc
in
xchg
leave
push
call
xchg
xor
(bad)
jne
std
xor
pusha
outs
xchg
xchg
push
pop
mov
xchg
ror
test
push
mov
outs
(bad)
jb
fdiv
add
fwait
push
cmps
mov
retf
sub
lock
pop
jno
push
xor
xor
stos
and
bound
mov
jo
add
inc
in
jecxz
push
imul
xchg
call
xchg
hlt
pusha
jle
ret
hlt
cmp
xor
lock
mov
mov
shl
mov
cli
lahf
loopne
outs
xor
repnz
out
inc
add
and
cdq
retf
daa
push
xor
push
xchg
mov
add
iret
retf
jge
rol
movntq
xor
xor
fs
mov
ss
xor
fs
fimul
dec
nop
and
jge
shr
cmps
mov
add
movs
test
push
and
test
call
inc
outs
add
hlt
dec
dec
out
out
push
jo
pop
adc
push
dec
xor
add
es
out
xor
inc
fdiv
mov
push
movs
mov
jae
dec
dec
fdivr
jb
mov
xlat
xor
pop
test
outs
aad
sbb
adc
jmp
push
mov
arpl
setnp
movs
bound
loope
clc
test
lds
mov
bswap
cmp
rcr
mov
movs
adc
addr16
jmp
add
inc
sahf
xor
pop
(bad)
mov
dec
sbb
pusha
popf
push
mul
out
movs
dec
push
in
dec
hlt
out
push
xor
bound
xor
pop
cdq
popa
jne
clc
and
arpl
push
jmp
aam
jecxz
aad
daa
test
les
(bad)
xchg
cmp
fs
gs
pop
push
xor
xchg
hlt
jb
test
and
mov
fnstsw
push
mov
inc
nop
inc
jmp
mov
xor
pop
inc
cmps
inc
push
ss
mov
ret
add
shl
add
pop
add
xchg
push
push
and
loop
bound
pop
push
jmp
shl
loope
and
jmp
push
push
in
jbe
pusha
adc
hlt
xor
pushf
pusha
adc
in
sbb
xchg
push
jne
sbb
inc
dec
xchg
inc
lea
jmp
nop
es
mov
arpl
cmp
add
mov
popa
add
jmp
and
cdq
int
ret
lock
jo
ins
mov
sub
adc
rcr
shl
add
arpl
sar
daa
pusha
jg
adc
gs
inc
xlat
shr
je
bound
sub
outs
xchg
ja
pop
daa
mov
movs
push
mov
inc
adc
stos
test
popa
dec
(bad)
adc
je
clc
add
push
pmullw
bound
aam
pusha
outs
out
pop
jns
jne
or
ja
ja
add
cmps
add
dec
popa
cmc
inc
mov
ins
adc
adc
call
jbe
popa
jne
imul
lock
shl
and
pop
xor
add
ja
addr16
mov
jecxz
jne
ja
pusha
jne
stos
les
test
sbb
jne
sbb
jg
jno
cdq
pusha
jne
enter
ins
test
je
pusha
jne
clc
mov
inc
ins
inc
mov
adc
aam
lock
(bad)
adc
pusha
jne
sbb
mov
cdq
icebp
jne
dec
xor
and
cld
add
repz
pop
bound
ins
je
xor
imul
aas
add
sbb
pop
push
jl
ja
popa
xchg
jbe
popa
jne
cli
in
jno
div
ret
out
ins
out
ja
popa
jne
cli
and
sub
ret
addr16
out
ja
bound
or
xlat
loopne
cmp
push
jmp
ja
popa
jne
jnp
aaa
nop
ins
pop
shl
jne
or
xchg
nop
mov
dec
pop
xor
aaa
nop
inc
cmp
call
hlt
inc
xchg
lock
cld
sbb
mov
add
repnz
fcomp
fisub
mov
popa
int3
sub
mov
xchg
add
sar
jl
add
cld
addr16
adc
int
fdivr
xchg
bnd
loopne
and
ins
fistp
push
shl
mov
jmp
xlat
xor
jecxz
sub
xchg
add
in
inc
outs
not
mov
les
ja
jno
jb
push
cmps
adc
es
test
xchg
push
(bad)
outs
rol
pop
loop
add
shl
inc
fnsave
or
inc
inc
xchg
add
ror
jno
in
xor
mov
loope
mov
arpl
cmp
rol
pop
add
lods
into
jns
lahf
xchg
icebp
shl
mov
jp
and
xchg
inc
cmp
xor
out
mov
out
add
add
in
lods
test
cmps
fist
inc
mov
aad
daa
push
add
push
xchg
adc
retf
adc
xchg
in
xor
aaa
add
hlt
cwde
shl
xchg
pop
aad
push
out
nop
xchg
les
xchg
mov
(bad)
aaa
and
adc
cmp
and
cmp
aaa
mov
and
(bad)
test
cmp
jno
xor
or
aam
loope
ins
dec
movs
dec
clc
outs
or
xchg
in
ficom
mov
fwait
aad
jle
mov
xor
sbb
test
popa
mov
add
push
stos
call
and
cmp
out
cli
mov
pop
into
lods
mov
inc
(bad)
scas
bound
lods
xchg
jno
jno
sbb
lock
rcl
xchg
mov
fcom
jbe
adc
mov
inc
(bad)
cld
movs
stos
and
xchg
add
mov
cmp
dec
test
test
xchg
fidiv
sbb
pop
xchg
sub
xchg
add
mov
add
test
shl
inc
rcr
pushf
cvtps2pd
cmps
inc
icebp
out
push
fmul
xchg
rcl
cld
enter
xor
les
add
mov
inc
mov
cmp
xchg
ret
aad
in
xor
aas
mul
push
inc
mov
shr
neg
jl
or
mov
xor
repnz
aad
neg
adc
pop
loop
mov
in
(bad)
pop
mov
sub
ret
mov
or
xor
das
jno
xor
mov
int3
cmp
enter
repz
sbb
movs
dec
jg
clc
icebp
jecxz
adc
add
imul
ins
or
shl
jmp
mov
enter
mov
or
jne
jmp
div
pop
mov
jns
and
ins
retf
adc
stc
rcl
inc
addr16
test
lahf
mov
mov
push
sub
mov
movzx
test
adc
int3
mov
add
cli
mov
xor
adc
xchg
(bad)
push
add
inc
jb
jp
shl
mov
pop
in
test
add
test
pop
movs
pusha
push
jno
popf
dec
imul
in
retf
xchg
add
jb
push
pop
out
js
mov
aas
push
xchg
mov
rol
invd
aaa
sahf
sbb
and
lods
jmp
push
jl
adc
call
sub
pusha
or
(bad)
in
jmp
nop
aaa
add
cmc
mov
jne
inc
dec
loope
jne
xor
xchg
in
movs
sub
mov
xor
pop
or
pop
push
(bad)
das
ret
sub
inc
lods
(bad)
rcl
mov
icebp
inc
iret
inc
add
inc
repz
jnp
jge
(bad)
sahf
mov
stos
dec
mov
mov
clc
mov
add
sub
stos
call
int3
mov
or
pop
dec
hlt
pushf
or
dec
mov
arpl
xchg
pop
sub
cdq
stc
gs
mov
fsubr
das
jmp
push
cmp
add
sub
js
xor
ins
mov
cmp
push
pusha
xchg
fsubr
(bad)
int
jmp
jb
xchg
fdivrp
jns
sub
xchg
xlat
push
shr
out
fcomp
packsswb
in
clc
js
iret
es
sar
or
data16
sbb
mov
test
pop
jno
jecxz
ds
and
imul
add
or
xor
jge
adc
push
jo
mov
mov
fstp
mov
jle
dec
jne
rcl
int
inc
cmp
cmp
push
adc
jns
push
xor
or
and
in
adc
scas
out
shl
int
push
in
(bad)
sbb
or
add
dec
out
sub
mov
push
push
and
lods
lahf
and
jb
mov
psubw
loope
rol
call
rcl
mov
xchg
mul
jl
jnp
mov
ins
add
int
movs
mov
or
test
mov
inc
jne
(bad)
ss
jnp
dec
mov
adc
dec
pop
add
fild
xor
(bad)
popf
fcomp
retf
mov
pop
dec
in
cmp
and
ret
sub
in
js
not
add
mov
cld
imul
mov
adc
fincstp
pop
or
mov
xor
int3
daa
adc
inc
dec
sbb
cmp
cwde
inc
mov
cmc
and
and
mov
aaa
inc
push
cmp
ror
pop
pop
jp
icebp
test
xor
jg
sbb
and
dec
ds
std
xor
xchg
in
fldenv
mov
(bad)
fs
xor
test
repz
jg
sbb
test
sbb
sub
xor
jbe
mov
push
mov
and
sbb
or
adc
adc
cmp
mov
and
in
call
adc
arpl
lea
jmp
push
pushf
test
cmp
std
or
fimul
lods
mov
cwde
and
xchg
sbb
leave
enter
hlt
loopne
outs
sub
sar
pop
jno
nop
add
sar
jmp
jmp
inc
inc
scas
movs
loope
mov
cmps
mov
popa
sbb
test
pop
rcr
sub
daa
jnp
push
mov
iret
(bad)
(bad)
scas
fstp
rol
sti
ins
aas
stos
xchg
data16
dec
cmp
pop
ss
jae
lods
stos
inc
mov
or
addr16
jmp
xchg
outs
sbb
jmp
mov
jmp
mov
push
(bad)
mov
ficomp
pop
xchg
xor
adc
js
aam
pushf
cmc
rcl
mov
add
push
mov
and
sub
inc
je
loop
adc
cld
add
ret
jmp
vpmaxsw
xchg
loope
fwait
leave
sbb
sub
ins
cmp
xor
cmp
jae
jbe
xchg
outs
adc
in
inc
adc
push
jl
jo
cmp
add
ss
out
xlat
push
loope
sub
(bad)
cmp
xchg
jb
je
ficom
and
adc
mov
push
jnp
mov
jcxz
pop
xor
rcl
inc
sti
jb
or
mov
nop
inc
xchg
clc
loope
inc
std
push
nop
inc
push
bnd
xacquire
outs
push
or
mov
mov
pop
pop
and
jns
pop
cmp
xchg
dec
and
enter
sub
rol
mov
pop
cmp
xor
lods
mov
and
push
push
icebp
cld
nop
(bad)
in
fistp
je
out
stc
pop
iret
mov
or
adc
daa
mov
mov
clc
add
imul
mov
and
scas
jns
jle
pushf
int3
retf
mov
(bad)
imul
jge
xchg
sbb
dec
(bad)
js
jge
cli
sub
mov
fnstcw
add
sbb
outs
(bad)
out
or
(bad)
sbb
bound
jmp
inc
lahf
and
(bad)
call
push
shl
shl
in
push
adc
cmovo
fs
rol
jbe
xchg
inc
out
pusha
jne
(bad)
les
push
fadd
inc
or
inc
lea
cld
bound
repz
mov
ins
push
jecxz
sub
shr
xchg
loope
cld
lock
xor
mov
lock
cmps
adc
or
gs
jo
lds
pop
pop
sbb
adc
test
pop
pop
lahf
leave
rol
rol
lods
cmp
(bad)
mov
movs
and
out
retf
xor
mov
(bad)
shl
cwde
les
mov
retf
adc
jne
popa
ins
xchg
adc
xchg
loope
daa
inc
(bad)
clc
and
retf
sub
inc
xor
ss
sbb
lock
jmp
inc
retf
mov
xor
add
sub
nop
shl
mov
xor
inc
out
sbb
pop
xor
mov
lods
or
jl
jl
imul
les
fcmove
add
push
in
pop
jnp
cmp
jae
stc
imul
mov
stos
push
imul
or
inc
or
and
xchg
sbb
xor
xchg
cmp
cli
and
add
jno
pop
fwait
xor
dec
jo
pop
das
shl
gs
loop
mov
cmc
and
jno
cmp
mov
outs
mov
and
xchg
loopne
sub
push
fsub
rcl
xor
cwde
icebp
movs
xchg
in
xchg
shl
pop
push
loop
cli
and
sbb
rcl
loop
jecxz
cmc
lock
fbstp
in
int3
push
mov
pop
push
jne
dec
data16
mov
sub
mov
mov
cwde
ins
dec
leave
push
dec
outs
mov
(bad)
(bad)
jo
xchg
mov
cmps
cmp
cmp
test
ror
test
repz
inc
xchg
ror
push
daa
jo
(bad)
xchg
ins
xlat
xchg
cmps
jecxz
xor
cmp
or
mov
out
ja
repz
push
fisub
add
and
es
addr16
jbe
(bad)
cmp
mov
mov
jmp
call
movs
test
in
xlat
repz
dec
or
fs
das
fcom
lock
nop
vmwrite
or
inc
div
scas
mov
mov
cmps
das
call
inc
cmp
fsubr
loopne
or
shl
jne
nop
and
pop
push
sbb
or
data16
push
xchg
jmp
xchg
sub
bound
jmp
xchg
sbb
add
adc
adc
pop
shl
cld
jbe
xchg
dec
rcl
inc
dec
loop
jecxz
cmps
xor
add
loope
cmps
inc
hlt
jmp
xor
xor
aam
xor
push
lahf
mov
daa
shr
repz
or
movs
popa
inc
ja
mov
fisttp
dec
ficom
and
jge
addr16
cmp
pop
jbe
inc
sbb
adc
push
mov
in
adc
pop
mov
inc
imul
cmp
rcl
or
jno
pushf
push
mov
shr
mov
mov
push
fcmovbe
mov
dec
lock
(bad)
or
jno
xchg
mov
dec
loopne
cmps
or
adc
or
adc
push
outs
movs
rep
xor
ret
iret
sub
movs
icebp
jae
lods
cmp
out
jo
scas
(bad)
sub
imul
lahf
cmp
mov
cs
cmp
sub
push
movs
or
mov
jmp
neg
ins
cmp
pusha
add
stc
mov
rcr
jnp
ds
push
and
repz
dec
adc
fs
push
and
mov
xchg
xchg
xor
pop
shl
test
push
ret
dec
test
xchg
sbb
mov
or
jae
sti
repnz
and
inc
adc
aas
xor
push
fwait
xchg
mov
adc
jp
push
jno
inc
and
loop
(bad)
inc
in
jno
(bad)
mov
cmc
jo
call
jae
cmp
inc
lods
add
mov
add
cmp
cmp
das
mov
imul
jle
imul
push
push
fnstcw
jne
jno
and
cmp
jne
inc
loopne
test
adc
int
loopne
or
jo
lea
add
fadd
and
adc
adc
jno
push
jp
daa
push
pop
pusha
mov
in
and
pop
bound
mov
icebp
adc
cmps
lods
xchg
xchg
adc
or
mov
adc
lahf
inc
adc
ins
enter
add
push
mov
and
cmps
lahf
fwait
aas
iret
sti
adc
call
rcl
inc
xchg
(bad)
xchg
jg
mov
add
fcomp
int
jp
repz
vpmacssdd
push
xor
and
out
or
push
pop
adc
sub
add
sar
mov
fld
ret
jbe
mov
fnsave
xchg
repnz
cmps
add
add
sbb
adc
mov
xchg
inc
inc
cmc
(bad)
xor
aad
add
xor
(bad)
shr
xor
bound
jl
(bad)
dec
inc
mov
das
xchg
adc
ss
test
xchg
iret
shl
movs
sub
mov
out
ins
(bad)
cmp
inc
jno
jne
dec
ja
mov
adc
or
xchg
mov
stos
imul
stos
xor
mov
inc
mov
scas
mov
inc
fwait
xlat
adc
xchg
xor
jb
in
mov
pusha
push
mov
mov
push
fs
xor
test
arpl
mov
push
das
xor
out
xchg
adc
jge
icebp
mov
mov
adc
int
jbe
in
xor
sbb
adc
sbb
push
pop
(bad)
adc
in
jnp
sub
into
test
pop
jmp
pop
or
outs
push
cmp
jo
jne
dec
pop
pop
jecxz
xor
mov
mov
mov
fisubr
push
retf
mov
lds
std
pop
retf
push
jne
arpl
stc
imul
sahf
xlat
jae
mov
repz
fcom
xor
sbb
icebp
sar
ins
pushf
mov
xchg
lods
cmp
sub
push
add
adc
stos
dec
cmp
cmps
jle
ffree
aas
adc
dec
pop
cmps
inc
out
in
shl
nop
pop
inc
mov
mov
cmp
adc
sbb
jmp
std
test
repz
xor
jb
add
inc
cmps
arpl
mov
xor
jle
mov
mov
ficomp
cs
sbb
rcr
or
repz
clc
xchg
sbb
sbb
(bad)
mov
jl
jns
xchg
adc
arpl
jo
aam
repnz
nop
add
jae
mov
ja
in
dec
cld
push
das
ins
mov
xchg
xor
sbb
xor
call
push
inc
cld
mov
push
outs
mov
shl
mov
aaa
mov
xchg
mov
push
mov
sub
pop
sbb
enter
int
jp
and
add
pop
(bad)
dec
cmps
pop
retf
sbb
mov
mov
test
(bad)
sbb
jns
outs
dec
into
xchg
push
loop
movs
sbb
(bad)
sub
sbb
xchg
mov
jg
xchg
outs
mov
mov
add
in
sub
test
mov
pop
mov
cmps
inc
push
in
push
lods
in
jmp
add
and
gs
and
(bad)
mov
out
repnz
fwait
pop
mov
push
mov
xor
mov
rol
fiadd
sbb
ret
mov
mov
jmp
out
xor
std
movs
into
xchg
mov
mov
(bad)
mov
sahf
ret
jb
sub
out
out
mov
hlt
push
sahf
scas
or
sbb
imul
into
sub
cmp
out
fwait
(bad)
(bad)
imul
cdq
fcmove
sbb
movs
shr
test
int3
(bad)
xor
std
lahf
lds
arpl
push
sbb
cmp
jp
scas
and
ins
ds
pop
sahf
(bad)
and
and
aad
in
cs
repz
lods
add
mov
add
xor
retf
mov
daa
pop
add
push
xor
ret
jl
pusha
push
ffreep
adc
sbb
ss
mov
jnp
stos
jmp
sub
stos
push
push
add
jmp
iret
jnp
lods
cli
inc
cmp
fcomp
xchg
ret
push
dec
scas
daa
mov
or
add
sub
iret
pop
pop
iret
cmp
and
xlat
sahf
sub
or
pop
rol
mov
aas
dec
ins
ins
sbb
adc
fistp
mov
mov
mov
mov
inc
inc
lock
shl
stos
call
retf
dec
retf
cmp
xchg
xor
rol
inc
xchg
ds
ins
xchg
loopne
dec
ins
jle
loope
(bad)
xor
add
(bad)
cwde
dec
scas
data16
jno
xchg
shl
mov
icebp
push
ret
cmc
jo
ins
fimul
mov
add
shl
popa
mov
cmp
xor
pop
out
cli
shl
movs
pop
push
adc
(bad)
aaa
add
jp
jne
scas
and
mov
xchg
adc
imul
or
adc
test
ret
xchg
xor
sbb
jnp
sub
ret
inc
test
dec
add
cmp
xor
jmp
repz
xor
pop
addr16
or
stc
les
mov
bound
xchg
int
cmp
stc
scas
mov
jb
add
cld
sbb
out
enter
in
push
adc
mov
outs
dec
loope
add
cmc
popa
mov
inc
popa
aas
sbb
int
jmp
mov
pop
sub
popa
adc
dec
fwait
in
mov
xor
jmp
xchg
fild
outs
jmp
(bad)
lahf
enter
in
sbb
in
imul
stc
jo
mov
dec
cmp
fwait
stos
add
mov
dec
mov
test
iret
sbb
pushf
lods
pop
pop
cs
rol
cmp
jmp
mov
int3
mov
out
pop
lock
cmp
jl
ror
adc
fdiv
sub
adc
retf
mov
outs
clc
add
mov
adc
inc
cld
out
jg
ins
std
rcr
ds
loopne
popf
and
pop
dec
and
mov
mov
push
add
pop
sub
push
bound
pop
stos
jle
imul
jg
push
lods
mov
ins
fstp
popa
dec
leave
aad
mov
outs
pop
shl
dec
outs
out
fwait
leave
ret
push
out
cmp
mov
aad
sti
pop
(bad)
sbb
leave
mov
cwde
sub
retf
in
inc
cmp
xor
push
into
mov
sbb
bound
sbb
sbb
cwde
movs
xchg
sub
(bad)
push
mov
pop
and
mov
jecxz
push
(bad)
cwd
cli
lods
jle
je
xor
dec
mov
inc
ss
scas
(bad)
cdq
retf
jmp
mov
popa
mov
iret
cmp
jbe
es
(bad)
es
cmp
out
or
mov
sahf
sub
xor
outs
push
fcomp
jp
int
mov
int3
jmp
pop
movs
inc
jge
fs
test
fcmovu
(bad)
or
jmp
inc
dec
pop
fwait
mov
sahf
(bad)
cmps
cwde
stos
das
inc
cli
ror
les
cwde
cmp
add
jns
fs
cmp
xor
scas
scas
(bad)
stc
sbb
jmp
sbb
xlat
scas
or
fucomi
jmp
cmps
fimul
inc
shl
fdivr
sbb
outs
clc
mov
fmul
retf
loop
rcl
mov
push
(bad)
addr16
dec
pop
imul
lods
retf
push
int3
pop
aaa
repz
lds
aam
aad
or
jne
jmp
dec
ss
fld
not
popa
std
cmp
outs
push
ret
shr
push
sar
jo
pushf
test
into
fwait
xchg
fmul
lods
mov
cmp
cdq
retf
pop
call
push
pop
jns
pop
cwde
mov
dec
sahf
movs
jo
pop
jg
dec
stos
jns
sub
retf
mov
pop
mov
(bad)
das
add
mov
(bad)
push
outs
(bad)
retf
push
adc
cdq
call
mov
mov
cld
mov
sahf
scas
ss
test
fstp
rcr
sbb
lahf
es
mov
dec
xchg
xchg
into
scas
push
cdq
pop
fst
mov
mov
popa
sub
xchg
call
inc
sub
pop
fisttp
(bad)
or
mov
aam
das
jle
jns
iret
adc
cs
jb
mov
fisubr
sbb
mov
mov
xchg
jg
sub
mov
in
outs
ja
jnp
mov
jge
stc
movs
cs
sahf
retf
mov
clc
pop
inc
lods
jle
out
clc
pop
jne
icebp
cmp
test
adc
jnp
scas
dec
mov
hlt
xor
or
mov
and
das
retf
mov
inc
and
addr16
push
fwait
scas
je
mov
sbb
push
jo
xchg
sub
and
dec
sub
mov
add
fwait
push
xlat
nop
ins
inc
and
jge
and
dec
xchg
div
int3
out
push
ins
add
xchg
inc
adc
add
shl
in
shl
arpl
xchg
push
xchg
push
out
and
xchg
ins
ret
iret
xchg
in
pushf
mov
ds
jmp
and
mov
ret
dec
mov
mov
sbb
mov
push
xchg
and
into
mov
mov
inc
sub
clc
sub
mov
cs
imul
push
cmc
adc
cdq
jmp
cmp
lods
dec
mov
inc
jb
test
mov
add
(bad)
sbb
jge
mov
pop
test
popf
pop
retf
xchg
xor
(bad)
fsubr
setne
(bad)
bound
inc
pop
addr16
hlt
dec
repnz
js
and
xchg
and
jno
movs
mov
jno
dec
add
iret
bound
pusha
mov
mov
mov
mov
js
pushf
icebp
mov
push
push
sbb
lea
dec
lea
in
mov
outs
(bad)
cmp
inc
sbb
pop
das
fmul
addr16
push
(bad)
sbb
push
inc
add
les
pop
int3
sbb
mov
pop
sub
gs
jo
cld
cmp
dec
stos
cmp
leave
inc
xchg
mov
repnz
xchg
rol
add
jae
xor
mov
inc
psrlw
movs
cli
loop
xchg
pop
mov
add
cmp
and
icebp
pusha
imul
add
inc
cmp
lock
inc
shl
loop
cmps
ins
inc
loopne
pop
xor
xchg
stos
jno
and
mov
adc
xchg
jmp
pop
sti
mov
int
or
xor
fnstcw
and
xchg
mov
stos
lds
fldcw
es
push
inc
add
test
lea
mov
fucomi
cmp
cmp
stos
pop
mov
sti
test
call
shr
cmps
add
cmp
add
rcr
adc
rcl
adc
ds
fs
(bad)
dec
or
adc
jge
addr16
shl
xchg
and
xchg
les
outs
xchg
nop
aam
fdiv
adc
inc
jne
repz
jp
add
(bad)
cmc
ret
adc
jnp
xor
das
push
inc
test
push
and
and
aad
icebp
addr16
push
jg
retf
clc
mov
add
loopne
jmp
(bad)
rcr
mov
mov
call
std
or
or
aas
stos
sbb
test
cmp
inc
std
sub
xchg
mul
and
jge
push
out
loopne
inc
lahf
push
jecxz
dec
xor
lmsw
xchg
cmp
loopne
xor
mov
pop
fdiv
inc
sldt
in
pop
std
je
xchg
and
jmp
jae
or
icebp
push
adc
inc
mov
(bad)
dec
pop
lock
and
and
cs
mov
mov
lods
fcom
call
mov
into
cmp
xchg
mov
scas
aaa
call
xor
cdq
mov
movs
popf
pop
lahf
jbe
mov
(bad)
lods
test
lods
adc
sbb
sub
dec
aam
cwde
out
out
retf
retf
jg
xchg
jg
scas
mov
sahf
xchg
mov
add
or
mov
jo
mov
inc
fucomp
sbb
xchg
(bad)
nop
add
add
call
mov
adc
iret
push
popa
loope
xchg
adc
dec
xor
push
mov
adc
std
adc
inc
mov
mov
int
sti
setae
xor
aaa
inc
stos
add
jl
jg
addr16
dec
add
sub
sbb
push
loope
mov
vcmpps
push
bound
clc
mov
sub
ds
mov
xchg
lea
xchg
retf
or
xchg
cmp
test
aam
adc
mov
push
mov
adc
mov
frstor
in
pusha
mov
icebp
mov
ficomp
jae
adc
ins
lds
inc
mov
je
push
ja
pop
jo
jbe
ret
repnz
adc
(bad)
and
and
imul
push
mov
mov
nop
push
(bad)
lock
xor
pop
sbb
movs
xor
js
mov
pop
popf
rcr
jns
sub
dec
popa
or
cmp
call
aam
test
jbe
call
push
mov
bound
fcomp
add
lahf
cmp
sti
push
cdq
movs
jg
mov
repz
out
imul
or
sahf
push
rcr
popf
push
out
mov
std
test
dec
cmp
cmp
pop
pop
mov
pop
push
dec
sub
outs
addr16
xchg
xor
inc
push
cld
cmp
inc
add
lods
cmp
jecxz
push
sub
sbb
nop
inc
xchg
inc
jae
sbb
push
push
movs
dec
xchg
adc
jbe
jle
push
in
and
push
mov
mov
pop
add
mov
(bad)
cmp
jns
dec
test
out
retf
sbb
jns
int
push
es
push
cld
stc
(bad)
cmps
mov
in
sbb
cmp
sar
sub
mov
sub
lock
xor
movs
clc
mov
and
call
dec
iret
imul
sbb
push
mov
rol
xchg
mov
add
push
(bad)
popf
test
rcr
adc
ds
js
mov
dec
or
cs
(bad)
out
push
cmp
mov
arpl
outs
xchg
inc
call
(bad)
call
mov
xchg
pop
dec
pushf
xchg
call
aam
stos
(bad)
neg
push
mov
mov
mov
sub
fwait
mov
pop
inc
mov
mov
aam
pop
dec
mov
add
xchg
sbb
fadd
sti
cmp
mov
lods
outs
cmp
repz
bound
jb
fistp
ins
sbb
mov
pop
sbb
sub
clc
inc
pop
mov
inc
shl
or
fiadd
add
imul
pop
cld
cli
aas
and
pop
inc
clc
and
sbb
jb
adc
mov
mov
call
in
cmp
xchg
cdq
mov
mov
scas
imul
sub
push
xchg
cs
std
mov
push
sti
and
cdq
mov
mov
stc
scas
imul
mov
js
cmp
mov
stos
outs
cdq
jne
push
ds
mov
cdq
and
js
in
rcr
mov
clc
js
je
mov
sahf
mov
test
lods
add
out
pop
lds
push
and
jle
movs
cmp
fist
mov
inc
push
fmul
dec
jns
xlat
sbb
(bad)
clc
mov
leave
(bad)
fstp
aas
neg
stc
mov
cmp
lods
jbe
mov
xchg
lods
(bad)
mov
imul
jmp
jns
or
pushf
es
push
mov
push
pop
jmp
pop
jnp
jbe
retf
fwait
pushf
mov
inc
dec
mov
add
cdq
sub
mov
(bad)
xchg
push
mov
ins
js
mov
sub
call
nop
mov
lds
(bad)
fldcw
dec
movs
test
or
es
sub
adc
mov
dec
test
movs
jae
pop
aas
xchg
cdq
push
mov
(bad)
arpl
test
popf
or
fistp
call
jecxz
sub
cmp
(bad)
call
xchg
cwde
sbb
cmp
jns
pop
fcomp
ss
in
or
cmp
cs
lahf
ss
fisubr
jmp
cmp
adc
cld
scas
mov
add
ins
mov
loope
int
loopne
pop
test
or
cmp
stc
cs
into
ficom
cs
sti
adc
pop
adc
jns
ins
cmp
dec
test
loop
mov
add
idiv
outs
sbb
jmp
bsr
test
outs
test
push
sbb
inc
call
jmp
sbb
stos
jp
add
jg
mov
add
fistp
push
mov
leave
mov
lahf
sub
stos
mov
mov
or
inc
or
jmp
or
(bad)
cmps
sbb
mov
adc
pop
xor
cld
sub
jl
and
push
jns
loope
movzx
xor
jg
ficom
mov
fdivrp
cld
pop
add
jne
dec
stos
add
out
mov
test
das
xchg
sub
pop
(bad)
sbb
jo
lods
enter
jmp
scas
cmp
scas
inc
mov
mov
repz
test
xlat
enter
sub
and
in
dec
inc
call
hlt
lahf
mov
popf
jb
cdq
jns
cwde
dec
pushf
jbe
stos
std
and
sbb
xchg
(bad)
mov
ins
loop
mov
mov
and
into
cmp
pop
ror
mov
addr16
jl
rcl
xor
inc
cmp
shl
sbb
pop
add
stos
xor
xchg
jl
add
fcom
and
xor
sbb
xchg
push
dec
jno
or
sbb
mov
jp
mov
mov
mov
call
pop
sti
(bad)
sub
popf
jno
sub
data16
sub
dec
fisttp
inc
(bad)
or
neg
pop
in
push
retf
jb
pop
js
fistp
lods
bound
test
cld
out
cmp
test
aas
inc
imul
jns
dec
jnp
inc
sbb
dec
ret
mov
inc
loop
movs
call
push
ret
mov
pusha
ds
push
ret
or
mov
inc
mov
mov
cmp
pop
aad
inc
cmp
(bad)
inc
pop
mov
repnz
xchg
or
jnp
lods
xor
cmp
aas
(bad)
mov
loope
jg
adc
cmps
and
jb
mov
mov
pop
cld
cwde
add
repz
xlat
(bad)
call
hlt
lahf
test
xchg
cdq
call
mov
mov
ds
call
ds
call
mov
hlt
outs
enter
or
and
and
es
out
jno
jbe
add
pop
pushf
and
sbb
push
idiv
add
mov
adc
xchg
fs
push
popa
ins
inc
jecxz
sbb
jae
pop
add
cld
mov
daa
pop
mov
mov
mov
mov
inc
jno
push
add
sbb
and
cmp
fldenv
pop
fmul
sbb
mov
xchg
outs
or
retf
imul
xchg
or
cld
sub
dec
test
pop
lahf
daa
pop
pop
cmp
inc
lods
mov
(bad)
dec
mov
lods
cmp
sub
js
or
retf
jl
cmp
addr16
push
js
(bad)
js
inc
pop
cmp
xchg
xchg
adc
(bad)
repnz
icebp
int
xor
fwait
stos
pop
mul
nop
and
add
add
cmp
push
lahf
push
xchg
ror
xchg
ds
in
adc
rcl
movs
js
div
scas
mov
movs
or
push
inc
stos
loope
dec
aad
xchg
push
sbb
loop
dec
jmp
mov
cmc
mov
push
lds
int3
call
mov
mov
sar
push
cmp
iret
mov
int
imul
test
push
sbb
in
stc
out
jbe
sub
push
(bad)
sar
loope
jbe
add
pop
call
aaa
dec
jb
pop
jge
mov
xlat
fdiv
adc
in
inc
add
mov
xchg
push
pop
and
push
int3
bound
mov
adc
(bad)
jl
lock
add
jbe
mov
cmps
in
and
adc
js
mov
pop
cli
jge
mov
fld
scas
pop
out
fdivr
fistp
adc
iret
ret
jmp
ja
mov
dec
movs
or
loope
or
jle
js
cmp
retf
mov
test
sbb
sub
fs
jns
hlt
fimul
fwait
jne
cmp
pop
mov
(bad)
imul
jno
cmp
adc
jo
mov
test
rcl
lds
xor
cmc
retf
rcr
xchg
and
jl
test
and
inc
jmp
rep
pop
and
ss
lock
push
pop
inc
in
dec
lods
mov
push
push
inc
ficom
stos
jno
mov
mov
inc
adc
mov
ss
xchg
not
scas
add
mov
mov
stos
outs
or
scas
mov
dec
xchg
jnp
sbb
out
cdq
into
jbe
dec
ins
inc
pop
loop
movs
in
dec
stc
imul
jge
fdivr
push
ret
into
xchg
jp
popa
cli
mov
and
leave
idiv
or
repz
mov
inc
popf
aam
rol
pop
scas
xchg
mov
loope
pop
rol
adc
test
lock
xchg
mov
xor
scas
cmps
push
test
jno
pusha
or
mov
(bad)
mov
idiv
push
shl
mov
and
dec
or
das
mov
mov
mov
lods
in
dec
ret
lods
cdq
add
jnp
lahf
or
icebp
repz
retf
cld
in
call
push
mov
adc
ret
mov
mov
jecxz
inc
xor
ins
pop
cmp
mov
pop
jle
out
ficomp
sbb
aas
mov
jmp
pop
sbb
push
int3
sub
sbb
add
out
sbb
fmul
mov
cmps
ret
push
xor
xchg
lahf
inc
ret
xchg
out
loope
lds
mov
ret
mov
icebp
ret
and
push
push
mov
scas
xchg
bound
scas
out
and
and
gs
mov
xor
xchg
call
xor
and
(bad)
ficom
dec
das
and
jecxz
push
cmps
jp
in
jb
imul
jmp
and
fs
int3
call
pop
fimul
mov
and
pop
fist
loope
js
or
js
cs
pop
popa
push
ins
clc
add
test
inc
lock
pop
xor
mov
add
ror
dec
arpl
nop
pop
add
push
in
das
sub
mov
bound
repnz
(bad)
push
jge
(bad)
push
loop
cmp
mov
std
jp
test
ins
mov
out
dec
retf
test
sbb
sbb
adc
leave
cld
or
popa
pop
adc
imul
ret
mov
mov
push
arpl
test
dec
imul
in
pop
jge
cmp
gs
sahf
xchg
xor
dec
pop
push
jle
sub
xchg
(bad)
mov
gs
dec
(bad)
(bad)
fcom
mov
dec
push
ror
aas
jmp
mov
lea
lahf
or
bound
mov
jae
xchg
lods
fisubr
pop
add
cmp
jns
sub
mov
jle
push
pushf
scas
pop
sub
in
xchg
nop
bound
fistp
adc
add
jl
cmp
mov
pusha
retf
mov
pushf
clc
jmp
ss
sub
xlat
outs
call
in
mov
mov
pop
fwait
in
push
xor
cmp
icebp
in
pop
imul
test
retf
mov
or
push
enter
clc
in
mov
sbb
cwde
cs
arpl
(bad)
push
pop
dec
xchg
pop
or
sub
or
test
ins
out
fst
pop
lahf
xchg
add
into
(bad)
enter
clc
punpckhdq
cld
mov
jns
mov
pop
mov
pop
or
push
add
stc
stos
pop
inc
cdq
push
inc
and
leave
popf
sbb
and
(bad)
sub
(bad)
jnp
retf
cmp
pop
pop
cmp
or
sahf
pop
or
in
into
fcmovnbe
mov
add
dec
lods
xchg
adc
push
pop
mov
iret
sar
test
in
jge
out
in
dec
js
loop
cs
jl
leave
push
dec
fld
ror
cmp
(bad)
jle
pop
fcmovnu
nop
mov
add
pop
mov
dec
aad
fnstcw
mov
fwait
ins
mov
ficom
shr
pop
jmp
mov
(bad)
cmp
(bad)
sti
int3
cmp
jg
dec
pop
fild
pop
push
mov
cld
push
xchg
mov
iret
pop
xchg
sub
mov
lock
mov
jno
test
jecxz
dec
dec
inc
fsubr
jge
sub
cmps
(bad)
int
sbb
mov
lods
stos
clc
call
adc
mov
jns
mov
xor
pop
mov
add
int
jae
mov
ror
add
add
test
out
cdq
or
int
pop
ret
pop
das
enter
jl
pop
movs
fidivr
mov
mov
imul
pop
inc
add
dec
dec
inc
out
test
adc
in
mov
xchg
adc
mov
int
shl
adc
stc
sbb
and
mov
int3
(bad)
jl
cmp
clc
(bad)
out
cwde
lahf
cmp
cmps
and
pop
fstp
add
or
or
or
inc
ret
vcvtps2pd
test
popf
mov
bts
sub
pop
mov
ja
imul
cmp
jp
xchg
push
mov
mov
lods
push
loope
jo
adc
mov
repnz
dec
call
inc
loopne
sub
mov
outs
jo
adc
aas
jp
aas
pop
mov
push
mov
dec
outs
cwde
jmp
sub
and
mov
jns
das
mov
retf
inc
ins
ds
cmc
sbb
xor
pusha
popf
jmp
fimul
xchg
fadd
loopne
cld
pop
fs
test
push
inc
jne
or
enter
inc
ret
hlt
cld
jmp
movs
inc
inc
in
dec
xor
fstp
outs
jne
das
je
sbb
js
push
jge
arpl
lahf
jle
push
adc
shl
add
repnz
xchg
in
adc
or
ss
jecxz
retf
push
jbe
adc
je
and
xchg
adc
ins
jl
ja
rcl
nop
mov
mov
cld
inc
inc
mov
mov
popa
(bad)
es
mov
in
(bad)
mov
repnz
retf
and
aad
push
int
in
rcl
sti
jne
out
jle
dec
(bad)
and
sbb
and
sti
(bad)
into
clc
dec
in
mov
outs
pop
mov
ret
xchg
fild
or
fistp
jmp
adc
inc
cmp
movs
fstp
out
popf
fild
mov
pop
out
jle
shl
mov
mov
and
movs
retf
sar
das
mov
cmps
or
test
push
mov
in
inc
mov
fld
sub
scas
(bad)
out
loopne
and
popa
lea
stos
arpl
inc
sbb
jno
and
arpl
add
adc
mov
fidiv
adc
push
jae
(bad)
outs
jne
pop
inc
shl
fistp
outs
adc
ja
push
(bad)
mov
jae
bound
je
mov
mov
sbb
mov
or
inc
xchg
lods
in
mov
push
jo
stos
popa
xchg
int3
div
xor
xchg
or
push
(bad)
and
nop
shl
or
inc
mov
lock
lock
cmps
and
push
push
sbb
add
(bad)
(bad)
mov
mov
inc
scas
cmp
retf
arpl
leave
mov
mov
inc
stc
sub
stos
icebp
aaa
push
inc
jns
mov
fmul
jl
xor
mov
or
xchg
(bad)
cmp
jp
(bad)
popf
sahf
dec
dec
retf
push
inc
(bad)
daa
vprotw
sub
xor
sub
xchg
mov
outs
rcl
iret
push
pusha
mov
xchg
jo
dec
rcl
and
add
aas
push
inc
adc
and
not
fadd
inc
inc
imul
popa
addr16
adc
shl
or
xlat
outs
adc
xor
lock
pop
and
mov
loopne
ja
rol
xchg
data16
push
adc
mov
xor
xchg
jbe
ficom
jl
xor
xor
push
mov
inc
sbb
scas
cmp
lds
xchg
push
dec
inc
arpl
jo
mov
mov
xchg
pop
mov
dec
fcom
mov
pop
or
push
jno
cdq
div
ret
out
pop
inc
shl
mov
ror
out
sbb
in
pop
les
jbe
adc
push
es
xchg
imul
mov
xchg
test
xor
xchg
pusha
pop
push
adc
fwait
je
push
retf
and
aam
push
ins
lods
scas
xchg
mov
loope
(bad)
cmc
mov
sbb
inc
adc
call
lods
scas
xchg
lock
mov
pop
fild
jmp
aam
mov
rcr
pusha
and
jge
or
dec
inc
icebp
shl
frstor
iret
jmp
adc
mov
xor
jb
xor
je
pop
mov
ret
popa
(bad)
int
rcl
pusha
test
movs
es
pop
icebp
out
nop
adc
shr
mov
adc
mov
jbe
aaa
adc
pusha
fnsave
jbe
shl
jno
inc
and
test
xchg
xlat
popa
ins
(bad)
and
pusha
push
push
jmp
jbe
pusha
jne
dec
adc
inc
ins
mov
jno
addr16
fcmovnb
jbe
sub
cmp
rcl
int
bound
mov
and
xchg
shr
sub
test
movs
bound
pop
or
push
inc
add
pop
xor
xchg
(bad)
jmp
out
arpl
popf
aad
(bad)
fiadd
and
jb
mov
ins
inc
ret
mov
repnz
add
cmps
jae
cmps
xor
mov
imul
movs
repz
ja
stc
data16
adc
imul
or
push
ins
mov
jne
sub
and
inc
(bad)
movs
popa
ja
add
xchg
clc
arpl
jge
loope
outs
popa
popf
in
arpl
cmp
ror
les
and
mov
mov
jne
sub
popa
fadd
arpl
mov
rcl
mov
xchg
nop
je
popa
jne
sti
mov
loopne
es
jno
addr16
cmp
addr16
push
(bad)
jno
addr16
stos
add
mov
jbe
jno
addr16
js
out
push
loope
cdq
addr16
mov
mov
mov
push
fwait
les
push
popa
jbe
jo
push
mov
mov
out
and
inc
pop
out
xchg
xor
aam
mov
push
loopne
dec
shl
cmp
inc
(bad)
iret
and
js
xchg
ret
lods
movs
add
into
adc
leave
scas
inc
adc
jae
jne
jge
leave
dec
jne
dec
inc
push
push
xor
push
cwde
mov
jae
add
aad
pushf
cmc
xchg
push
xor
test
mov
mov
ins
movs
xor
push
push
rol
jp
ins
out
dec
cmc
loope
xor
call
inc
xchg
dec
and
pop
add
dec
adc
adc
lds
mov
and
and
xchg
popa
imul
cli
hlt
je
cli
inc
xchg
cwde
add
mov
or
data16
xchg
aaa
cmp
bound
xor
sub
movs
clc
bound
add
xor
cmp
mov
test
xor
push
mov
or
sub
add
ss
lock
and
xor
push
cmp
rcr
ss
inc
xor
loop
je
nop
ins
(bad)
adc
popa
push
sar
div
pop
pusha
jne
or
loopne
aad
jbe
push
jne
fsub
mov
jbe
jbe
pusha
jne
jmp
mul
ins
lds
test
hlt
adc
jo
pop
popa
xor
lock
not
xor
add
sahf
adc
imul
repz
xchg
mov
fild
push
jp
mov
mov
mov
in
and
jge
and
rcl
cli
mov
sub
icebp
lods
aad
lods
sbb
loopne
pop
push
or
sub
cli
xchg
xchg
pop
adc
cld
lods
call
pop
mov
fwait
mov
adc
sub
call
add
mov
adc
cmp
and
jmp
(bad)
outs
mov
xor
sub
jno
aad
ret
std
ss
cmps
sbb
ja
sbb
popa
sbb
inc
push
xchg
mov
mov
mov
pop
aaa
rol
add
gs
inc
mov
in
adc
and
adc
lock
mov
(bad)
not
push
push
and
loop
lds
add
inc
shl
repz
movs
shl
inc
pop
pop
call
push
lock
int3
jmp
cmp
add
and
push
xor
cmc
xor
adc
lods
hlt
(bad)
and
mov
cmp
jb
test
ja
bound
sub
je
bound
stos
adc
add
jb
test
xchg
xchg
pop
dec
push
cmps
out
mov
mov
imul
aad
cmp
arpl
and
sub
lods
mov
mov
or
sub
jp
inc
imul
adc
in
or
in
stos
pushf
iret
jmp
push
lods
imul
add
inc
push
dec
retf
retf
xor
pusha
sbb
rcr
lods
mov
mov
jno
pop
mov
nop
xchg
xor
in
pop
clc
jge
or
ret
inc
inc
aaa
and
leave
loop
xor
xlat
add
push
ficom
push
cmp
icebp
adc
sub
es
scas
aaa
pusha
fidiv
lods
out
push
pushf
(bad)
xor
mov
es
jl
adc
cli
popa
push
add
push
and
out
mov
(bad)
add
jmp
out
or
addr16
adc
aaa
inc
sti
lds
stos
lock
imul
shr
or
cwde
ins
in
in
test
imul
loop
mov
mov
jne
cld
adc
cmp
test
add
pushf
fstp
jne
lods
les
mul
ror
pop
push
test
ins
aam
es
sbb
jmp
mov
push
popa
inc
jge
mov
push
popa
xor
jb
mov
inc
popa
xchg
jb
mov
mov
inc
popa
xchg
dec
mov
leave
push
rcl
xor
mov
xor
pop
int3
retf
mov
repnz
mov
(bad)
jno
lods
fwait
cmps
add
or
imul
ss
sub
xor
pop
into
call
or
or
test
pushf
adc
adc
fs
test
xor
das
cmp
mov
in
movs
mov
push
sahf
(bad)
jecxz
outs
enter
add
test
jp
mov
and
sbb
aaa
pop
nop
call
push
out
imul
mov
mov
add
xchg
inc
jo
xchg
mov
or
out
test
test
pop
jne
inc
sbb
push
xor
out
dec
inc
push
jbe
inc
push
loopne
xchg
lods
fs
fwait
ja
xor
and
ins
adc
test
test
fs
xor
(bad)
mov
sub
or
xor
sub
lea
lahf
or
pop
inc
sbb
js
jge
xchg
std
push
inc
arpl
or
ins
xor
not
and
dec
outs
test
outs
movs
shl
pusha
mov
inc
dec
inc
and
pusha
xor
ins
add
inc
push
mov
or
in
mov
mov
mov
ins
jne
cmp
inc
leave
call
in
cli
(bad)
in
fwait
lods
lods
sub
mov
mov
add
popf
or
(bad)
fld
push
xchg
sar
xchg
test
aad
sar
fcomp
mul
(bad)
jne
inc
shl
out
mov
mov
xchg
fwait
gs
xor
jno
cwde
fld
in
sbb
jecxz
arpl
scas
fstp
mov
loopne
mov
sahf
je
ins
test
mov
scas
test
out
cmc
xor
fwait
jle
ret
sub
pop
pop
pusha
addr16
je
popa
jbe
retf
mov
retf
ss
dec
pop
aaa
repz
xlat
icebp
sbb
xor
add
jbe
xor
push
and
mov
mov
in
ror
out
sub
push
lock
xchg
loopne
jne
inc
imul
lock
mov
adc
ror
mov
xchg
xlat
mov
mov
outs
lds
loopne
int3
js
pop
je
ins
in
xlat
arpl
movs
jb
aam
inc
mov
sbb
jno
mov
sbb
imul
(bad)
jo
sahf
retf
mov
mov
jge
xchg
inc
arpl
lds
add
xchg
push
dec
jnp
mov
rol
push
loopne
sub
and
int3
mov
dec
movs
mov
cmp
add
out
retf
lahf
push
test
push
out
loopne
sub
fdiv
and
push
popa
xchg
add
jmp
ja
retf
je
xchg
pop
int
enter
popf
push
jno
outs
mov
jp
arpl
xor
xchg
jecxz
mov
add
mov
push
adc
ror
xchg
mov
scas
xchg
fsubr
out
movs
sub
push
add
iret
enter
inc
ins
adc
pop
dec
retf
mov
xor
cmc
jmp
xlat
and
adc
(bad)
repz
gs
push
mov
xchg
jae
push
movs
inc
dec
(bad)
sub
fs
inc
add
xchg
icebp
shr
inc
push
pop
xchg
cmps
jo
inc
test
xor
inc
jge
and
imul
xchg
and
mov
push
xor
mov
sub
xor
retf
inc
cmp
adc
shl
cwde
outs
in
pop
adc
or
cdq
scas
movs
push
cmp
icebp
xlat
arpl
outs
fwait
cmp
push
std
mov
pop
and
jg
pop
outs
add
int3
and
xor
sbb
je
cmps
rol
or
scas
sti
sbb
add
sbb
pop
(bad)
bound
ins
js
int
xor
pop
(bad)
sbb
push
adc
arpl
sbb
retf
pop
jne
lea
adc
and
mov
push
mov
out
add
retf
mov
adc
lds
jne
repz
ror
aam
shr
push
mov
mov
and
loop
test
gs
mov
fcmove
xor
inc
shl
repnz
jne
and
out
cmc
push
xchg
or
lods
not
cmp
or
nop
pushf
shl
out
loope
leave
call
aad
out
mov
retf
jge
pop
jno
push
aam
retf
in
add
(bad)
push
nop
dec
adc
rcr
inc
ja
enter
dec
adc
mov
sti
xchg
movs
xor
movs
push
add
pop
ss
mov
xchg
(bad)
pusha
fidiv
mov
sub
rol
push
xor
push
sbb
xchg
mov
jmp
xor
fist
push
add
daa
retf
loopne
xor
addr16
jl
out
imul
gs
and
pusha
push
fistp
int3
movs
shl
ins
push
fsub
pusha
mov
xchg
and
or
(bad)
in
ins
mov
xchg
pop
dec
mov
hlt
nop
push
adc
js
pop
daa
ret
jg
push
inc
repnz
call
int3
mov
jp
ret
cs
nop
dec
data16
jae
sbb
test
in
mov
test
xchg
ja
dec
cmps
inc
test
in
rcr
pop
push
lods
je
cmps
xchg
mov
dec
mov
icebp
(bad)
lock
imul
xchg
jl
mov
mov
cmp
icebp
xchg
inc
inc
mov
fimul
jae
rcr
lahf
xor
popa
push
push
nop
aaa
xor
mov
mov
jb
and
fsubr
push
adc
mov
rol
aam
xor
pop
xchg
cmps
adc
in
mov
mov
test
cmps
add
rol
cli
xor
icebp
in
mul
mov
xchg
xor
in
ja
addr16
call
lock
mov
dec
xchg
xchg
bound
mov
in
pusha
xor
cmc
inc
das
sbb
pop
push
arpl
and
clc
out
ror
ja
xchg
inc
retf
cmp
ja
pop
out
xchg
das
fsubr
pop
pop
xchg
repnz
mov
imul
arpl
mov
and
iret
jns
outs
push
sar
pop
adc
mov
mov
jno
loopne
xor
dec
dec
inc
and
ss
push
mov
xor
push
adc
jns
js
and
and
scas
push
mov
je
test
jb
jnp
ins
cmc
bound
pop
cmp
xchg
loope
adc
int3
or
jl
jo
push
rcl
dec
imul
jno
add
inc
inc
pop
dec
jmp
push
mov
imul
loope
pop
addr16
jnp
xchg
lods
xchg
test
fnstcw
xor
cmps
adc
sub
ins
mov
xchg
inc
cmp
pushf
retf
mov
fadd
cmp
adc
bound
cs
ins
adc
mov
int
sub
jne
lahf
data16
jmp
xchg
int
adc
std
outs
sbb
icebp
jno
(bad)
je
sbb
add
mov
jmp
and
outs
push
mov
push
pushf
aad
fiadd
jg
sub
bnd
or
cmps
(bad)
icebp
nop
rcl
loop
imul
xchg
ret
fist
das
add
adc
vphaddbw
nop
loop
mov
(bad)
mov
dec
inc
popa
out
xchg
cmps
xchg
ror
mov
mov
fcomp
hlt
mov
(bad)
xor
and
in
fldcw
cmp
mov
dec
xlat
jno
rol
je
pop
inc
mov
adc
xchg
adc
rcl
lock
in
js
into
movs
repnz
add
mul
sub
mov
inc
adc
pusha
loopne
jnp
cs
push
arpl
movs
xor
(bad)
test
(bad)
ret
rol
push
test
mov
clc
mov
(bad)
xchg
test
lahf
call
xor
stos
sti
nop
mov
ja
or
int
frstor
xor
lahf
stos
dec
xchg
stc
std
jno
xchg
jb
data16
pop
ins
sub
xor
jge
shr
(bad)
iret
dec
push
fs
in
mov
jne
lahf
movs
jae
pusha
in
cmp
js
push
repnz
or
lea
and
cmp
lahf
aad
scas
xor
dec
xor
mov
call
sbb
iret
(bad)
aas
inc
loope
out
dec
ja
mov
fidiv
push
dec
stos
pop
ss
repz
sbb
(bad)
sub
push
sub
mov
fdivr
dec
icebp
loope
ret
or
jne
dec
pop
pop
jp
movs
lock
mov
out
mov
addr16
fld
dec
ins
jne
sub
mov
push
add
je
(bad)
pusha
out
jnp
ins
add
mov
popf
jne
pop
push
jno
pusha
xchg
dec
jnp
pop
jne
call
js
ins
mov
pusha
inc
fistp
mov
shr
mov
add
push
inc
push
arpl
test
lea
jle
cwde
scas
push
jae
(bad)
mov
ds
call
call
mov
pop
cmp
jb
mov
and
in
push
and
in
push
and
mov
and
dec
(bad)
dec
and
pop
ja
push
mov
sahf
adc
add
mov
inc
sub
mov
push
fadd
lods
call
or
inc
sub
inc
and
jne
aad
arpl
cs
mov
sub
push
sahf
cwde
sahf
call
fwait
lds
dec
cdq
clc
std
loope
pushf
inc
sbb
mov
nop
lods
inc
add
fld
xchg
inc
mov
mov
mov
test
xchg
nop
cmp
xor
aaa
push
or
fst
shl
ins
test
rcr
movs
pop
mov
push
or
mov
xor
jnp
iret
xor
pop
jo
ss
lods
dec
fimul
xchg
pop
loopne
inc
adc
jge
mov
xor
pushf
dec
sbb
xchg
mov
and
mov
ins
jne
call
jnp
mov
adc
leave
sbb
xor
sub
adc
fcomp
lods
inc
loop
fs
cmps
jo
mov
and
cmc
xor
cwde
outs
adc
adc
into
push
pop
jne
xchg
jge
loopne
add
(bad)
adc
jns
sub
and
test
and
sar
adc
xor
adc
gs
(bad)
xchg
mov
arpl
es
xor
push
not
xlat
xor
sbb
xlat
and
daa
lea
test
push
es
sbb
push
xor
shl
fdivr
sub
sbb
mov
addr16
cmc
sub
(bad)
xchg
ret
xor
cdq
pop
cmp
xchg
pop
out
out
lea
xchg
ret
hlt
adc
pop
sbb
daa
inc
out
mov
nop
sbb
mov
fs
mov
pop
inc
xchg
leave
xchg
lds
lods
inc
xchg
xchg
sub
xor
test
stos
xor
ror
lock
mov
pop
rol
or
mov
pop
mov
mov
iret
adc
in
call
xchg
shl
test
push
inc
aas
test
cli
lds
repz
mov
mov
xor
mov
xor
xchg
mov
bound
add
loop
or
cmp
mov
cmc
popa
xor
jne
push
jo
arpl
into
leave
cwde
push
push
cmp
shl
(bad)
jns
test
sbb
ror
jl
mov
jecxz
cdq
js
jg
xchg
lea
and
mov
xchg
mov
push
mov
cmps
add
mov
cmp
rcr
push
ss
fidivr
mov
xlat
dec
mov
std
aam
jp
inc
adc
loopne
sti
mov
jbe
ja
xor
ins
daa
jo
and
mov
mov
mov
fdiv
jle
dec
test
in
push
jb
mov
pusha
mov
jb
fwait
js
in
pop
push
mov
call
test
ss
push
mov
mov
nop
call
cmc
cmps
add
je
call
gs
stos
ja
loopne
inc
add
xor
cwde
inc
pop
(bad)
lahf
xlat
pusha
pop
push
mov
mov
retf
cmps
jmp
test
rcl
(bad)
pop
(bad)
aas
push
add
dec
mov
(bad)
xchg
in
mov
mov
inc
(bad)
xchg
mov
not
pop
sahf
jne
lods
fs
arpl
adc
icebp
mov
jg
jecxz
inc
rcl
and
mov
mov
lods
fs
lds
jmp
mov
out
dec
xor
stc
sahf
sbb
push
mov
and
cmp
arpl
adc
push
and
ret
fimul
test
inc
dec
jbe
out
es
cdq
mov
or
pushf
dec
sbb
mov
loope
mov
nop
dec
push
shl
ret
jmp
push
das
lock
test
lock
adc
mov
sub
test
pop
inc
push
int3
icebp
inc
mov
dec
mov
sahf
xor
dec
mov
ret
aam
mov
mov
imul
aam
fadd
out
sub
sub
loopne
adc
or
ins
enter
shl
shr
mov
loope
inc
aam
dec
shl
aaa
rol
cwde
adc
lea
sub
es
es
jnp
push
sar
pop
mov
jmp
push
scas
ja
or
in
lock
cmps
into
adc
add
pop
loopne
in
cmp
jbe
or
mov
add
adc
fld
xchg
int3
xchg
data16
xor
jmp
xchg
dec
push
mov
mov
push
test
scas
enter
rcr
sbb
cdq
mov
xchg
(bad)
ja
cmp
xor
loopne
out
in
mov
scas
mov
ret
inc
adc
xor
arpl
cdq
sub
xor
jns
add
addr16
repnz
ja
jge
lock
test
out
sbb
mov
lahf
mov
push
xor
xchg
int
pop
rcr
sbb
ds
scas
jle
bound
cmps
sar
jl
retf
nop
sbb
mov
in
mov
lock
pop
mov
mov
inc
xor
mov
mov
out
sub
mov
mov
mov
lahf
stos
sub
out
mov
jb
leave
popf
push
out
int
inc
test
pop
es
mov
and
mov
xchg
mul
pop
xchg
and
stos
and
cmp
ja
or
mov
jnp
xchg
(bad)
push
add
cmp
aaa
adc
and
js
push
movs
push
xchg
inc
and
jb
fisubr
jg
add
addr16
movs
and
mov
mov
mov
jmp
mov
fstp
test
addr16
inc
pop
adc
data16
dec
pop
jmp
je
mov
xchg
or
sub
(bad)
and
push
inc
adc
leave
fnstenv
(bad)
mul
mov
sub
mov
outs
(bad)
ret
and
mov
sub
call
nop
xor
pushf
stos
dec
in
clc
xchg
int3
aaa
(bad)
in
jno
pushf
cmp
xchg
inc
mov
push
sub
xchg
add
xor
jmp
add
cwde
jmp
dec
sub
xchg
pop
mov
pop
or
(bad)
cwde
pop
sub
adc
push
out
sbb
retf
in
jnp
or
test
cmp
int3
mov
ins
sar
(bad)
into
mov
stos
mov
inc
sub
xlat
xchg
scas
dec
sbb
pushf
mov
sub
into
out
dec
push
push
xchg
mov
popa
xchg
int3
daa
and
mov
push
jno
pushf
ror
outs
pop
leave
mov
xor
sub
cmps
xchg
inc
jl
jecxz
sub
aaa
xchg
push
add
pop
and
pop
in
xchg
add
xchg
nop
es
das
cwde
dec
das
rol
xchg
push
cs
outs
dec
nop
out
jecxz
sub
cmp
mov
xchg
in
movs
inc
inc
fstp
and
lahf
pop
arpl
xchg
cdq
fisttp
ss
jl
inc
jb
fild
(bad)
test
xchg
out
add
mov
adc
popf
xor
pusha
xor
push
in
push
adc
jno
sbb
imul
movs
hlt
and
(bad)
sbb
xchg
xchg
xor
bound
lods
sbb
aaa
(bad)
jle
shl
stos
sub
fcom
push
xchg
jl
test
loopne
shl
gs
mov
(bad)
push
scas
add
sbb
dec
retf
jg
rcl
cdq
ja
sub
add
call
push
lahf
setns
and
lea
jecxz
push
loop
cmc
bound
or
ror
push
cmps
push
js
mov
shl
mov
dec
jnp
cmps
and
add
loope
jne
xor
or
sbb
ja
sbb
(bad)
add
xor
cmps
(bad)
and
xchg
adc
cdq
mov
jae
jle
cmp
mov
neg
and
into
(bad)
clc
nop
loope
loope
cmc
inc
repz
int3
jmp
in
sub
in
sub
repnz
jo
xchg
mov
pop
jnp
push
inc
push
scas
xchg
lods
(bad)
repz
aas
lods
dec
repz
sbb
dec
(bad)
and
dec
pop
sar
sbb
inc
daa
pop
inc
lods
inc
push
jno
scas
or
inc
adc
inc
xchg
cmps
mov
fstp
in
mov
inc
mov
mov
and
nop
push
xor
ror
sbb
es
es
nop
int3
xchg
adc
stos
mov
jecxz
cmps
cmps
adc
mov
add
fwait
mov
mov
and
out
mov
mov
stos
pop
sub
and
dec
clc
stos
pop
sar
push
inc
mov
not
lds
cs
cmc
jecxz
ja
rcl
lds
pop
push
test
scas
sub
mov
sub
push
sub
cmps
mov
mov
dec
imul
loopne
mov
mov
jp
cmps
lock
in
xor
sti
add
push
adc
xor
inc
push
es
rol
add
out
push
push
or
push
and
jnp
ja
das
add
mov
sar
jae
sbb
repz
lods
adc
int3
xor
(bad)
mov
mov
xor
ins
cmp
and
mov
jns
test
pushf
add
hlt
fsubr
aas
pop
cmps
out
xor
dec
cli
lahf
xchg
(bad)
pop
xlat
mov
mov
mov
add
fidiv
xlat
sub
data16
out
adc
mov
(bad)
mov
xlat
icebp
mov
gs
or
add
lds
es
pop
out
(bad)
xchg
(bad)
jmp
jecxz
not
sub
adc
je
iret
mov
xlat
mov
mov
das
(bad)
xor
pushf
push
arpl
cmps
inc
or
cdq
cmc
cmp
and
outs
pop
pop
push
cmp
adc
enter
pop
add
push
jae
fisttp
sub
and
popf
jp
ins
inc
cmp
lods
jnp
in
inc
mov
pusha
loope
cli
jns
push
mov
mov
xor
aaa
popf
cmp
xchg
xchg
or
push
mov
not
or
test
xchg
neg
call
push
jo
add
cmp
push
push
push
push
add
sbb
not
xor
pop
inc
or
xor
lds
xchg
nop
jge
popf
mov
mov
sar
push
push
pop
pop
fs
arpl
addr16
bound
es
pop
and
add
rol
add
xchg
mov
ror
xor
or
or
add
not
jmp
call
xor
shl
shr
sub
mov
mov
shr
xchg
and
neg
and
jmp
mov
xor
or
xor
shl
sub
add
add
sub
dec
mov
sub
sub
and
shl
sub
sub
jmp
pop
xor
xor
neg
or
add
sub
jmp
mov
xor
ror
add
or
nop
sub
or
xor
sub
sub
rol
bswap
sub
jmp
push
ror
or
xor
add
or
xchg
and
or
jmp
call
neg
or
add
shr
bswap
sub
or
bswap
not
jmp
push
and
xchg
add
ror
ror
shr
sub
and
mov
or
and
ror
sub
jmp
nop
or
sub
xor
shl
and
mov
add
ror
mov
xchg
xor
jmp
call
and
add
nop
jmp
call
neg
xor
sub
bswap
xor
bswap
add
sub
jmp
push
dec
rol
or
add
xor
rol
or
jmp
push
sub
and
bswap
and
sub
xchg
shl
or
or
not
shr
or
and
and
or
sub
jmp
pop
shl
add
add
xchg
xor
and
xchg
sub
dec
or
jmp
mov
not
add
xchg
xchg
or
xor
bswap
sub
or
xor
jmp
pop
add
mov
inc
and
and
mov
or
and
and
jmp
push
add
neg
and
mov
xor
or
or
sub
xchg
dec
shr
or
jmp
pop
sub
and
shr
xchg
sub
mov
xor
xchg
or
xor
jmp
pop
xchg
sub
sub
xchg
and
shr
add
sub
jmp
pop
or
bswap
and
shl
sub
jmp
push
xchg
mov
or
or
inc
xchg
mov
xchg
xor
mov
bswap
or
jmp
push
ror
dec
xor
add
bswap
or
mov
ror
or
xchg
jmp
ret
mov
or
ror
nop
or
or
and
not
xchg
and
sub
jmp
call
and
shr
or
sub
rol
shl
and
add
shr
shl
xor
jmp
call
mov
xchg
mov
sub
xchg
sub
and
and
or
jmp
nop
dec
xchg
xchg
xor
xchg
and
mov
or
xor
dec
sub
xchg
sub
inc
jmp
mov
sub
bswap
xchg
or
bswap
add
xor
and
jmp
mov
add
sub
or
and
xor
jmp
mov
mov
shl
mov
and
jmp
xor
add
sub
xor
or
mov
mov
or
jmp
pop
shr
xor
dec
and
and
inc
xor
sub
xor
jmp
add
inc
sub
sub
xchg
or
nop
jmp
add
xchg
and
xchg
and
mov
rol
xchg
inc
and
add
or
or
or
shr
xor
xchg
jmp
pop
xor
xor
dec
xchg
xchg
bswap
shr
sub
add
dec
jmp
mov
xor
and
or
inc
sub
mov
mov
inc
xchg
sub
jmp
call
or
sub
not
jmp
xor
xchg
xor
add
or
inc
add
xor
not
xor
mov
bswap
add
sub
jmp
pop
xchg
add
ror
rol
or
sub
mov
inc
xchg
xor
add
add
jmp
push
and
shl
mov
shl
xor
xor
shl
jmp
dec
sub
sub
bswap
ror
jmp
call
not
sub
xor
shr
add
sub
sub
jmp
push
xor
dec
xchg
not
xor
mov
inc
nop
xor
jmp
push
xchg
add
or
rol
xchg
xchg
xor
jmp
push
or
or
sub
mov
inc
xchg
add
add
jmp
mov
add
bswap
add
xchg
mov
add
xor
add
not
sub
jmp
pop
add
shl
sub
not
inc
add
xor
mov
bswap
xchg
or
xchg
jmp
sub
rol
sub
add
ror
add
not
xchg
jmp
call
mov
mov
xor
not
xchg
and
xchg
add
mov
xchg
or
sub
jmp
ret
rol
inc
or
bswap
jmp
nop
dec
shl
mov
sub
sub
add
mov
sub
jmp
call
inc
mov
jmp
push
add
xor
add
sub
inc
xchg
xchg
dec
jmp
pop
and
rol
sub
mov
rol
or
and
ror
add
jmp
movzx
add
shr
sub
or
or
xor
xchg
jmp
call
xchg
sub
or
xchg
mov
or
sub
add
xor
xor
xchg
or
or
jmp
pop
add
and
xchg
or
add
xchg
mov
xchg
jmp
pop
and
shl
inc
jmp
add
xor
add
sub
jmp
call
add
xchg
neg
mov
inc
sub
inc
xchg
jmp
call
dec
or
sub
inc
inc
jmp
mov
inc
or
not
xor
dec
jmp
mov
not
and
and
and
sub
xor
or
and
shl
or
shl
mov
bswap
xchg
jmp
inc
shl
mov
sub
mov
and
mov
add
xchg
sub
sub
jmp
xor
not
xor
mov
bswap
bswap
or
and
jmp
pop
shl
xor
or
or
mov
mov
xchg
xor
xor
xchg
sub
jmp
pop
mov
xor
add
and
or
and
add
ror
or
or
and
jmp
call
or
add
sub
add
xor
shl
bswap
xchg
add
mov
jmp
mov
sub
add
and
bswap
or
sub
mov
xor
rol
jmp
push
inc
mov
sub
jmp
mov
sub
and
or
inc
sub
xchg
rol
mov
shl
sub
and
or
jmp
nop
mov
xchg
xor
xchg
sub
sub
sub
sub
xor
jmp
mov
mov
mov
rol
and
ror
xchg
mov
sub
xchg
jmp
ret
inc
shl
not
or
xor
mov
rol
sub
sub
and
jmp
push
neg
dec
xor
jmp
cmp
jmp
pop
and
dec
xchg
ror
add
ror
neg
and
shr
and
and
inc
neg
jmp
call
rol
mov
and
xor
shl
ror
mov
mov
and
neg
jmp
mov
shl
mov
sub
and
not
and
and
xchg
or
sub
or
bswap
xor
jmp
mov
and
mov
and
add
or
add
sub
xor
xor
xor
neg
jmp
mov
sub
bswap
mov
and
ror
mov
xchg
xor
neg
xor
inc
add
or
mov
or
neg
jmp
push
not
neg
xchg
sub
xchg
or
xor
xor
and
xor
not
and
jmp
add
xor
or
sub
shl
or
and
add
shl
jmp
call
and
add
xchg
xor
dec
xor
mov
xor
xor
xor
mov
or
add
shl
jmp
push
sub
and
or
or
and
or
and
inc
inc
mov
jmp
mov
or
xor
add
or
sub
ror
inc
xchg
sub
shr
shr
jmp
push
sub
or
add
xchg
neg
xchg
mov
and
neg
mov
and
jmp
mul
or
and
inc
xchg
sub
mov
mov
jmp
mov
mov
and
mov
not
or
mov
ror
shl
and
shr
xchg
and
and
jmp
push
xor
add
add
mov
bswap
and
and
mov
ror
mov
rol
rol
jmp
push
and
add
add
mov
inc
rol
xchg
xchg
and
and
xor
xor
ror
or
sub
or
jmp
mov
not
mov
add
rol
mov
rol
jmp
add
xor
neg
or
mov
add
xor
dec
jmp
pop
not
add
or
xor
xchg
sub
jmp
add
not
neg
ror
or
or
jmp
push
dec
and
not
sub
jmp
pop
shr
mov
bswap
xchg
and
jmp
mov
inc
mov
mov
and
dec
shr
jmp
call
and
bswap
sub
or
mov
rol
ror
and
add
not
dec
ror
rol
jmp
pop
xor
shr
or
xor
mov
or
not
jmp
push
mov
and
add
not
mov
rol
mov
mov
xchg
jmp
mov
or
add
add
mov
dec
xor
rol
or
add
and
jmp
push
bswap
xor
or
ror
rol
jmp
push
xor
and
add
mov
mov
add
sub
sub
add
xchg
rol
shl
xor
jmp
push
or
xchg
or
add
add
sub
or
mov
xchg
add
sub
add
rol
mov
jmp
pop
add
dec
ror
not
inc
or
xor
sub
sub
or
jmp
call
sub
and
or
ror
xor
xor
jmp
push
or
sub
and
xor
or
add
xor
add
dec
xor
and
not
add
jmp
pop
sub
xchg
neg
jmp
push
xor
add
inc
xchg
mov
sub
shr
dec
sub
xor
mov
and
jmp
mov
sub
sub
mov
and
xchg
mov
or
mov
xchg
or
mov
add
mov
xor
jmp
push
not
xor
shl
sub
mov
or
or
rol
ror
rol
or
or
jmp
call
mov
neg
xchg
xor
mov
or
sub
jmp
mov
or
add
xor
shr
xor
shl
xor
mov
jmp
xor
sub
not
ror
shr
or
or
mov
mov
and
or
jmp
pop
or
add
rol
sub
xor
rol
add
jmp
mov
neg
xor
mov
xor
sub
xchg
or
bswap
add
jmp
pop
shl
xor
or
dec
sub
and
or
add
jmp
call
neg
neg
add
bswap
dec
sub
and
and
xor
mov
xchg
add
jmp
call
ror
not
bswap
bswap
add
xchg
bswap
xchg
and
shl
xor
xor
mov
or
mov
jmp
push
sub
xor
sub
xchg
xor
mov
and
xchg
mov
rol
add
jmp
pop
sub
sub
mov
mov
sub
inc
mov
neg
or
mov
sub
xor
shl
or
sub
jmp
mov
rol
neg
mov
add
jmp
add
mov
shl
mov
sub
sub
add
neg
mov
jmp
push
and
mov
xchg
dec
or
bswap
jmp
mov
add
add
mov
inc
shl
ror
mov
mov
xchg
shr
and
rol
and
jmp
call
xor
xor
xchg
or
xor
xor
and
bswap
add
neg
dec
rol
jmp
push
xchg
or
add
dec
mov
xchg
xor
mov
not
mov
shl
and
xor
jmp
pop
xchg
or
inc
mov
and
ror
xor
jmp
add
xor
shr
mov
add
or
add
or
sub
rol
add
add
and
add
jmp
pop
bswap
add
and
xor
sub
inc
mov
jmp
push
bswap
or
mov
sub
and
xchg
xchg
mov
and
sub
or
xchg
jmp
mov
add
add
add
sub
add
mov
mov
neg
not
jmp
mov
dec
add
add
sub
bswap
sub
jmp
push
xchg
ror
xchg
bswap
inc
xor
xchg
ror
shr
sub
rol
jmp
call
xor
inc
xchg
add
mov
nop
jmp
mov
xor
xor
add
sub
or
mov
shl
xchg
shl
jmp
mov
and
and
jmp
pop
mov
mov
or
or
add
add
xor
mov
rol
bswap
or
mov
shl
or
jmp
pop
mov
xchg
not
or
neg
neg
sub
jmp
push
xchg
add
and
shr
xchg
jmp
pop
xor
or
xor
add
jmp
call
and
mov
mov
inc
and
xor
sub
shr
shl
and
xchg
jmp
mov
mov
sub
xor
sub
jmp
call
xchg
sub
add
mov
neg
not
sub
shr
neg
mov
bswap
mov
xor
jmp
pop
neg
sub
shl
xchg
jmp
push
mov
mov
sub
not
jmp
push
or
rol
nop
and
shl
add
or
ror
xchg
jmp
pop
add
inc
xchg
mov
or
xor
or
ror
xor
jmp
mov
neg
rol
xor
sub
or
mov
shr
mov
shr
sub
jmp
add
shr
mov
dec
mov
mov
shr
and
xchg
mov
xchg
xchg
jmp
mov
add
and
sub
xor
or
sub
or
neg
xchg
or
add
inc
xchg
jmp
pop
or
neg
mov
shr
and
mov
sub
mov
and
add
or
mov
and
add
xor
jmp
call
ror
mov
neg
not
shl
neg
and
xchg
or
shl
jmp
pop
or
add
add
sub
rol
add
shl
nop
jmp
push
mov
dec
and
jmp
push
mov
xor
mov
jmp
push
xor
inc
sub
not
sub
xor
and
sub
xor
xchg
and
mov
sub
sub
and
not
jmp
ret
xor
or
xchg
sub
neg
ror
or
sub
sub
or
xor
or
ror
sub
add
jmp
mov
sub
sub
mov
or
sub
and
or
rol
sub
jmp
call
dec
mov
sub
rol
shr
mov
and
or
jmp
pop
xor
sub
add
xchg
shl
sub
sub
sub
jmp
mov
sub
and
mov
xor
nop
xchg
mov
not
jmp
push
or
sub
add
and
xchg
jmp
pop
add
xchg
dec
sub
add
dec
mov
add
sub
jmp
call
and
rol
add
neg
shl
sub
inc
sub
mov
and
mov
xor
xor
sub
jmp
pop
add
rol
mov
jmp
push
or
dec
xor
mov
not
mov
dec
xchg
and
jmp
pop
mov
ror
mov
sub
and
xor
or
add
shr
jmp
mov
add
mov
shr
and
rol
xor
shl
mov
sub
mov
xchg
add
jmp
pop
add
xor
add
ror
shl
ror
shl
mov
shl
and
xor
jmp
rol
dec
add
or
add
add
shl
mov
xchg
add
rol
and
jmp
add
mov
sub
sub
dec
sub
sub
not
inc
mov
nop
jmp
pop
sub
mov
rol
and
mov
sub
inc
add
xchg
jmp
pop
and
add
and
mov
sub
xor
mov
add
xor
sub
jmp
mov
xor
mov
xor
or
xor
add
jmp
mov
xchg
or
xchg
xor
dec
xchg
or
xchg
xchg
mov
xor
or
mov
sub
jmp
call
rol
xor
xor
sub
and
mov
mov
add
and
jmp
mul
sub
add
xor
xor
add
shl
jmp
push
add
sub
shl
xor
xor
neg
xchg
xchg
xchg
jmp
push
xor
xor
xor
or
add
inc
mov
mov
shl
or
shl
jmp
pop
and
and
jmp
jne
or
dec
sub
shr
mov
and
sub
shr
add
jmp
push
bswap
inc
xor
mov
mov
add
xor
xchg
add
and
sub
jmp
pop
xchg
bswap
ror
and
add
inc
or
mov
and
mov
xchg
mov
not
jmp
pop
and
ror
xor
xchg
xor
shl
inc
rol
xor
sub
xchg
xor
jmp
pop
shl
dec
or
add
xchg
jmp
call
and
add
xor
and
xchg
mov
inc
dec
or
shl
xchg
xor
jmp
push
xor
ror
xor
ror
inc
or
xor
inc
and
jmp
pop
sub
dec
shl
xor
mov
neg
or
dec
rol
shr
jmp
call
shl
or
add
inc
sub
add
and
nop
rol
dec
shl
xor
add
sub
and
jmp
call
sub
and
ror
and
add
xor
sub
or
add
mov
sub
not
xchg
xchg
jmp
call
xor
xor
sub
mov
sub
jmp
push
xor
xor
sub
ror
xchg
or
xchg
xchg
add
xchg
or
jmp
pop
dec
add
sub
mov
not
and
xor
xor
mov
sub
xor
jmp
mov
and
or
mov
jmp
push
xor
not
dec
not
bswap
dec
shr
add
jmp
mov
mov
xor
and
xor
mov
or
not
dec
jmp
push
mov
mov
add
mov
xor
xor
jmp
push
or
add
ror
xor
xor
xor
add
xor
jmp
ret
and
dec
add
xor
sub
xor
rol
or
jmp
mov
add
mov
and
add
add
and
add
sub
or
add
neg
jmp
pop
mov
shr
mov
inc
xor
not
add
xor
rol
xchg
or
xchg
neg
jmp
push
sub
sub
rol
ror
sub
add
xor
add
not
nop
jmp
push
mov
inc
xchg
xchg
and
ror
shr
mov
xor
dec
or
xor
jmp
mov
add
inc
and
shr
and
jmp
nop
mov
or
dec
rol
xor
jmp
call
shr
add
add
sub
xchg
sub
sub
or
shr
add
and
jmp
mov
not
sub
add
xchg
and
xchg
xor
jmp
pop
sub
and
and
shr
sub
mov
xchg
jmp
push
not
xchg
sub
xor
shl
shl
jmp
call
or
neg
or
sub
ror
dec
or
and
or
or
or
jmp
mov
xor
or
sub
mov
not
sub
dec
add
mov
and
jmp
push
or
or
add
xor
and
or
xor
add
or
add
jmp
pop
xor
ror
mov
and
and
add
not
xor
inc
or
rol
jmp
call
xchg
shr
inc
jmp
push
mov
shr
ror
ror
mov
sub
sub
neg
or
xchg
inc
jmp
push
and
not
or
dec
xchg
shl
add
jmp
push
add
add
xchg
mov
dec
jmp
push
xor
inc
rol
sub
sub
xchg
add
jmp
mov
inc
or
mov
mov
and
shl
sub
not
xchg
jmp
call
xor
and
nop
and
xchg
xchg
add
mov
and
neg
add
jmp
push
xor
shr
add
mov
and
sub
add
mov
shl
and
xor
xchg
jmp
call
xor
xchg
shl
add
mov
jmp
push
xchg
bswap
sub
mov
or
and
xchg
add
shr
mov
inc
xor
jmp
add
xchg
mov
shr
shl
or
and
neg
xor
sub
xor
ror
or
jmp
pop
xor
dec
add
or
or
ror
sub
jmp
xor
mov
and
neg
shr
jmp
sub
dec
xor
mov
add
xchg
bswap
rol
sub
inc
jmp
pop
not
and
xor
add
and
neg
ror
shl
jmp
push
shl
dec
xchg
or
ror
add
ror
rol
or
add
not
jmp
ret
shl
or
mov
add
dec
sub
mov
or
mov
add
dec
shl
neg
not
jmp
push
xchg
mov
mov
mov
add
sub
and
sub
xchg
jmp
pop
and
add
xchg
xchg
mov
add
not
neg
and
or
add
mov
sub
jmp
call
sub
xchg
xchg
add
shl
rol
sub
jmp
call
ror
or
xor
mov
ror
and
mov
and
mov
sub
mov
neg
not
or
jmp
pop
shl
rol
jmp
push
xor
xor
xor
jmp
mov
mov
xchg
ror
xor
jmp
push
xor
bswap
xchg
mov
mov
bswap
xor
jmp
push
mov
or
shl
sub
dec
add
bswap
dec
or
xor
jmp
jne
mov
shl
or
or
bswap
sub
mov
or
xchg
sub
mov
jmp
call
or
add
xor
or
rol
add
mov
mov
sub
ror
jmp
push
or
dec
shr
add
xor
add
or
neg
mov
jmp
push
or
xor
xor
xor
or
xor
or
and
or
dec
xor
xor
or
rol
jmp
pop
bswap
xchg
or
xchg
and
xor
or
mov
and
bswap
sub
jmp
pop
and
xor
ror
shr
add
and
and
xchg
add
shl
jmp
add
xchg
bswap
inc
or
add
rol
jmp
push
xor
shl
xchg
or
dec
xor
or
add
shl
and
neg
or
jmp
mov
xchg
add
xor
and
and
or
mov
add
or
xor
xor
xor
and
shr
jmp
pop
xor
ror
inc
sub
rol
and
or
xchg
xor
jmp
call
add
bswap
and
xor
sub
neg
ror
or
neg
not
xchg
and
jmp
push
dec
sub
neg
mov
or
bswap
not
mov
shr
sub
or
jmp
push
mov
bswap
inc
add
nop
xor
jmp
mov
or
dec
shl
or
and
mov
shl
add
and
jmp
xor
mov
shl
add
mov
mov
sub
xchg
inc
jmp
xor
xchg
mov
shl
or
mov
or
sub
neg
add
not
xor
inc
xchg
or
sub
jmp
push
inc
or
mov
sub
or
and
dec
jmp
mov
shr
or
sub
xor
sub
or
and
xchg
bswap
rol
jmp
pop
mov
shr
xor
xchg
xor
add
jmp
cmp
jmp
cmp
jmp
push
shr
add
bswap
mov
xor
or
mov
mov
add
shr
shl
and
add
shr
jmp
nop
or
mov
mov
xchg
mov
xor
and
add
xor
sub
inc
shr
shl
add
jmp
call
not
xor
xchg
xor
and
and
or
mov
not
inc
and
or
mov
bswap
sub
xor
jmp
call
xchg
nop
inc
add
xor
xor
mov
bswap
or
jmp
push
xor
shl
and
or
shl
or
sub
neg
sub
or
bswap
bswap
mov
jmp
pop
mov
xor
or
shl
sub
bswap
mov
sub
sub
jmp
push
add
sub
and
inc
add
jmp
pop
and
sub
or
sub
neg
mov
xor
jmp
mov
mov
add
xchg
mov
add
and
sub
or
xor
mov
and
jmp
xor
mov
add
and
xchg
rol
and
mov
sub
or
or
jmp
call
shl
or
xor
sub
or
dec
xchg
xor
sub
add
sub
jmp
push
mov
xor
shr
xor
xor
and
or
and
xor
shr
xchg
jmp
pop
ror
or
and
ror
xchg
ror
sub
mov
shr
xchg
sub
mov
jmp
call
add
not
bswap
xor
sub
jmp
mov
xor
add
dec
add
dec
sub
add
jmp
mov
ror
rol
xor
xchg
sub
sub
xchg
shr
add
xchg
jmp
mov
shl
shr
add
or
add
xchg
bswap
xor
xor
and
and
inc
shl
add
rol
jmp
pop
neg
and
xor
add
add
or
neg
jmp
call
xor
xor
sub
and
xor
sub
mov
and
jmp
xor
xchg
inc
and
or
sub
inc
xchg
xor
jmp
pop
or
xchg
xor
add
dec
xchg
add
add
jmp
ret
xchg
rol
sub
sub
xor
add
or
add
or
add
xchg
and
add
ror
jmp
pop
and
xor
and
xor
and
add
xor
or
mov
jmp
add
or
and
sub
or
add
dec
inc
jmp
add
xor
mov
or
mov
xchg
ror
or
add
xor
mov
or
jmp
ret
mov
xor
and
mov
not
xchg
xchg
jmp
push
and
mov
bswap
xchg
and
jmp
pop
bswap
and
xor
xor
bswap
xor
mov
neg
and
neg
mov
add
sub
and
inc
jmp
xor
dec
inc
jmp
pop
mov
xor
mov
sub
jmp
pop
mov
dec
add
xor
or
and
sub
mov
xchg
xor
rol
mov
sub
dec
mov
jmp
jl
or
xor
xor
neg
add
neg
sub
mov
add
sub
and
dec
jmp
mov
xchg
sub
add
xchg
sub
shl
inc
xor
mov
sub
jmp
push
shr
xor
sub
mov
dec
add
add
and
ror
xchg
jmp
mov
and
add
add
and
mov
xor
xor
mov
sub
xchg
jmp
mov
add
and
add
xchg
or
xor
sub
xor
and
xor
jmp
mov
dec
or
xor
shl
add
bswap
mov
and
inc
xor
neg
jmp
ret
xchg
inc
and
sub
and
rol
add
inc
jmp
pop
mov
rol
xor
mov
add
or
mov
or
and
mov
xchg
sub
jmp
call
xor
and
and
add
xor
mov
not
xchg
add
jmp
call
add
sub
sub
inc
or
and
xchg
jmp
mov
and
and
add
jmp
push
dec
ror
nop
mov
and
mov
dec
shl
sub
or
jmp
push
neg
xchg
and
neg
or
jmp
pop
sub
add
sub
xor
inc
and
sub
mov
jmp
call
or
not
neg
rol
and
xor
and
xor
bswap
add
shr
jmp
add
dec
or
or
inc
bswap
shl
xor
or
not
shl
or
and
mov
jmp
push
or
shr
add
sub
bswap
or
xchg
xchg
jmp
pop
or
bswap
mov
not
sub
add
xor
mov
sub
add
and
ror
sub
jmp
pop
or
bswap
and
sub
or
or
sub
sub
sub
mov
jmp
pop
sub
bswap
and
dec
bswap
or
xchg
or
and
ror
not
add
jmp
pop
add
or
bswap
and
sub
shr
jmp
pop
neg
add
xchg
xchg
inc
shl
xchg
sub
jmp
pop
bswap
xchg
or
jmp
push
and
or
inc
sub
sub
xor
sub
shl
and
not
neg
xor
not
jmp
push
sub
and
xor
or
add
mov
or
xchg
and
jmp
push
add
shr
xchg
neg
shr
neg
sub
neg
xor
nop
add
jmp
pop
or
mov
xor
xor
dec
add
and
and
xor
add
xchg
jmp
call
dec
xor
or
shr
dec
sub
and
mov
jmp
pop
sub
add
and
and
and
xchg
xchg
xor
sub
xchg
mov
and
mov
xor
jmp
add
inc
inc
sub
xchg
add
xchg
inc
add
shl
and
mov
jmp
inc
or
xor
xor
mov
xchg
neg
ror
add
jmp
pop
xor
or
mov
mov
and
xchg
shr
add
mov
jmp
call
sub
or
inc
mov
or
jmp
call
xchg
shl
sub
mov
xor
xchg
or
xchg
ror
and
or
jmp
pop
xor
xor
or
xchg
shl
sub
and
mov
and
rol
xor
dec
bswap
and
jmp
call
shl
and
shl
sub
xor
inc
and
add
add
jmp
mov
ror
or
ror
sub
dec
mov
neg
sub
or
or
inc
jmp
call
inc
rol
xchg
or
xchg
jmp
mov
xor
bswap
neg
add
rol
add
jmp
pop
sub
xchg
xor
or
and
add
mov
xor
and
sub
add
sub
jmp
push
mov
and
bswap
not
nop
add
add
sub
xchg
and
jmp
push
sub
sub
sub
sub
sub
jmp
push
ror
and
add
dec
and
shl
and
not
and
jmp
pop
shl
mov
xor
and
ror
and
jmp
mov
mov
mov
xchg
and
rol
jmp
add
xchg
mov
add
xchg
sub
or
xor
and
jmp
pop
bswap
ror
add
dec
mov
and
mov
or
xchg
and
jmp
call
xor
or
xor
not
mov
and
mov
shl
mov
jmp
push
or
neg
and
jmp
mov
mov
add
or
mov
xor
xor
bswap
add
add
xchg
jmp
pop
xchg
xchg
xchg
neg
or
and
add
not
inc
sub
not
and
jmp
call
bswap
mov
xchg
shr
and
mov
xchg
rol
xchg
jmp
call
add
add
xor
xor
mov
ror
jmp
push
mov
dec
mov
dec
sub
mov
mov
add
inc
xor
jmp
add
inc
neg
dec
mov
xor
jmp
mov
or
mov
mov
xor
rol
sub
jmp
mov
mov
neg
not
rol
xchg
jmp
push
add
xor
mov
xor
dec
sub
add
or
mov
ror
bswap
and
jmp
pop
inc
and
add
add
mov
shr
inc
xchg
xchg
shl
xchg
jmp
push
xchg
and
xor
xchg
add
add
and
mov
and
mov
shl
or
or
jmp
pop
not
neg
or
xor
inc
add
or
shr
ror
mov
add
mov
jmp
xor
xchg
sub
xor
nop
xor
ror
sub
ror
shl
or
dec
neg
inc
xor
mov
jmp
mov
dec
mov
not
or
xor
or
and
neg
mov
xor
xchg
jmp
pop
not
ror
add
or
xor
inc
rol
add
inc
or
sub
shr
jmp
add
xor
add
and
and
add
mov
and
not
xor
dec
not
shl
mov
jmp
push
mov
not
sub
jmp
push
add
sub
xor
shl
and
dec
sub
jmp
add
add
add
add
neg
sub
ror
sub
mov
and
or
rol
add
xor
sub
jmp
call
add
bswap
inc
rol
xchg
add
sub
sub
xor
jmp
call
mov
add
add
xor
xor
or
add
dec
inc
dec
xchg
jmp
push
xchg
add
add
rol
bswap
or
add
xchg
xchg
xor
xor
dec
or
shr
dec
or
jmp
call
bswap
or
shl
mov
xchg
mov
mov
and
add
sub
sub
jmp
push
and
rol
sub
xor
or
add
dec
inc
sub
jmp
mov
bswap
add
and
shl
and
xor
jmp
nop
or
shr
add
xchg
jmp
call
and
xor
mov
and
shr
not
xor
or
and
jmp
mov
and
sub
and
mov
sub
add
jmp
mov
xor
nop
or
jmp
push
and
bswap
xchg
or
xor
or
add
xor
mov
and
and
xchg
shl
jmp
push
or
add
sub
add
xor
xor
mov
and
sub
mov
jmp
pop
neg
add
shr
or
jmp
push
and
xchg
or
or
xor
add
jmp
mov
shl
or
and
or
neg
mov
or
or
ror
mov
jmp
push
inc
neg
xchg
bswap
add
and
and
jmp
push
add
sub
xor
and
xor
add
and
jmp
pop
neg
add
mov
xor
or
add
mov
xor
dec
sub
jmp
pop
bswap
and
not
mov
sub
or
or
and
or
or
ror
add
xor
and
jmp
pop
sub
sub
rol
xchg
add
mov
rol
shl
xor
xor
add
jmp
push
add
add
shl
and
xor
sub
mov
or
sub
nop
or
jmp
pop
bswap
xor
or
dec
or
neg
sub
nop
ror
mov
rol
add
shr
xchg
jmp
pop
or
ror
mov
add
sub
neg
jmp
mov
xor
xor
sub
mov
and
add
xor
mov
jmp
pop
inc
or
sub
not
xchg
inc
rol
and
jmp
pop
xchg
dec
sub
jmp
push
shr
add
mov
neg
xchg
rol
sub
inc
sub
mov
xor
shr
jmp
push
and
neg
and
add
inc
and
and
or
xor
dec
jmp
mov
or
dec
xchg
xchg
or
and
nop
shr
xchg
jmp
mov
xchg
mov
add
sub
xor
xor
sub
and
jmp
xor
or
xchg
xor
add
xor
mov
not
not
neg
add
not
or
sub
jmp
pop
add
rol
sub
jmp
push
or
add
or
inc
xor
neg
xor
add
and
and
shl
xor
or
sub
sub
bswap
jmp
pop
mov
shl
and
xor
mov
xor
jmp
call
bswap
or
xchg
or
ror
add
not
sub
sub
sub
jmp
pop
bswap
rol
and
mov
add
add
add
and
and
mov
or
or
jmp
jmp
jmp
jmp
jmp
jmp
