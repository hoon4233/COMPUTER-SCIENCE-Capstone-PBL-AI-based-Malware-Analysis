sub
cmp
pop
cmp
or
cmp
cmp
xor
cmp
dec
outs
cs
jno
adc
or
push
in
jns
sbb
sbb
xor
mov
adc
nop
dec
jne
in
or
adc
ins
mov
adc
jne
mov
outs
out
xchg
xor
xor
cmp
fbstp
sub
(bad)
push
dec
push
jns
sbb
and
xchg
inc
dec
sbb
and
inc
(bad)
lock
test
cli
fst
push
dec
mov
cmp
xchg
mov
xor
cmp
xor
ss
lea
cmp
pop
shl
or
leave
jae
mov
leave
xchg
jp
mov
adc
shl
sbb
hlt
cmp
pop
cmp
pop
or
repnz
mov
fst
jnp
mov
stos
jnp
addr16
push
jns
es
dec
add
mov
jnp
mov
sbb
outs
in
div
pop
xor
mov
xor
xchg
cwde
std
jge
jo
das
(bad)
cli
xchg
in
mov
mov
pop
(bad)
sub
cmp
mov
push
in
xchg
fcmovnbe
or
imul
mov
fdivr
sbb
adc
repz
xor
mov
or
jno
mov
xor
cmp
jno
xchg
or
jns
fbstp
jo
outs
shl
cmp
cmp
or
cs
jae
shl
sbb
cli
cmc
adc
dec
and
inc
jns
cwde
std
jge
sbb
jns
inc
data16
push
aad
repnz
add
sbb
js
sbb
xchg
fnstcw
push
jb
sti
popa
shl
cmp
int3
pop
fdiv
sbb
jns
xchg
fcom
into
jae
leave
jae
push
jecxz
pop
cmp
push
xchg
sbb
xor
cmp
fisttp
push
xchg
pop
xchg
popa
ret
push
call
adc
sbb
pop
xor
leave
jae
push
pop
sbb
jns
cs
jae
(bad)
dec
adc
cs
jae
mov
and
pop
dec
jns
cwde
std
popa
add
mov
int
shl
sbb
mov
jg
jns
sbb
mov
mov
jne
xor
inc
rdtsc
sbb
data16
cmps
jno
dec
mov
add
mov
pop
sbb
pop
sbb
pop
sbb
xor
mov
jns
repz
jns
xchg
cli
cli
retf
jge
fcmovnbe
pop
mov
sahf
leave
retf
mov
pop
sbb
popa
jae
xor
leave
test
xchg
sar
fcos
dec
jns
sub
adc
jae
(bad)
mov
add
mov
xor
cmp
cmc
pop
add
into
sbb
or
fiadd
adc
xchg
mov
lock
int
iret
in
mov
push
cli
sub
(bad)
mov
(bad)
sbb
lods
or
fdiv
int
push
jns
and
jbe
jno
adc
jno
xchg
or
repz
mov
xor
xor
ficomp
or
in
ins
into
outs
and
imul
bound
jns
ffree
or
repz
add
sbb
pop
or
leave
sbb
sbb
jns
lock
lock
mov
add
jns
outs
sar
sub
(bad)
push
or
xchg
jl
popa
jae
jns
sbb
into
outs
xor
inc
dec
sbb
lock
iret
or
add
dec
popa
into
outs
sub
jns
outs
sub
dec
sbb
lock
dec
test
pop
inc
jns
adc
or
cmp
stc
cmp
sbb
mov
outs
inc
lock
fisttp
push
xchg
dec
jne
mov
mov
xchg
loope
jmp
outs
lea
xor
pop
xor
out
lock
in
or
into
lock
je
cmp
(bad)
pop
cmp
sysret
inc
loope
cmp
mov
(bad)
cmp
loop
cmp
outs
sub
and
jl
inc
push
mov
leave
lock
jmp
jmp
mov
stc
in
stc
or
and
or
pop
xor
lock
icebp
xchg
add
inc
je
dec
cli
mov
(bad)
jns
inc
addr16
fsubr
mov
ror
sbb
sub
mov
cmp
sahf
lds
inc
cs
int
mov
iret
in
jl
scas
jnp
mov
cwde
icebp
xchg
add
inc
imul
mov
into
sbb
dec
mov
jecxz
mov
and
xchg
pop
add
int
mov
iret
in
mov
xor
cmp
xor
mov
dec
mov
pusha
dec
outs
cs
adc
mov
pop
(bad)
sub
xchg
pop
repz
xor
mov
cmp
push
mov
cs
lock
mov
mov
pop
icebp
and
addr16
bnd
(bad)
jge
sbb
push
cli
sub
(bad)
push
repnz
pop
(bad)
cmp
adc
mov
xor
into
sbb
xchg
jl
mov
lock
xchg
shr
xor
loop
pop
imul
ret
jle
loop
push
sti
xchg
jmp
mov
ja
out
out
cmp
test
bnd
(bad)
jge
sbb
push
repz
ins
test
bound
pusha
dec
outs
cs
paddd
call
into
push
dec
int
sbb
cmp
adc
jge
xchg
ret
push
ret
nop
je
movs
sub
jl
fstp
and
dec
sti
mov
int
sti
dec
repz
ins
test
(bad)
push
cli
sub
(bad)
push
jno
sar
js
xchg
inc
xor
dec
jne
inc
fdivr
xor
cld
int3
in
lock
mov
cmp
cli
jnp
addr16
test
in
repnz
out
cs
mov
repnz
mov
bound
repnz
pop
xchg
push
and
leave
xor
lock
dec
jno
jae
jns
xchg
call
xor
adc
add
jns
dec
(bad)
or
jno
adc
repz
xor
mov
neg
or
jmp
daa
push
cli
sub
(bad)
push
repnz
adc
rcr
mov
int
(bad)
cli
or
call
xchg
popa
into
dec
xor
ja
(bad)
sysexit
nop
and
xor
cmp
mov
sub
xor
outs
inc
bound
mov
sbb
addr16
mov
cmp
mov
push
cmp
cmp
cmp
xor
loop
xor
mov
ror
rcr
xchg
lock
mov
sbb
mov
xchg
jl
mov
shl
icebp
xchg
jl
cmp
dec
das
addr16
cwde
jae
push
jge
sbb
inc
sbb
lock
jo
adc
mov
icebp
outs
or
rcr
cwde
jae
mov
into
sub
sub
xor
cmp
repnz
icebp
adc
jbe
(bad)
or
sub
cmp
adc
xchg
retf
xchg
into
add
icebp
inc
addr16
fsubr
mov
rcr
addr16
or
add
lock
call
into
sbb
or
test
jns
arpl
jne
lahf
(bad)
js
sbb
int
sbb
cld
jmp
fdivr
jns
outs
and
lods
mov
or
sbb
mov
mov
movs
fidiv
cmp
into
in
jns
sahf
fadd
inc
pop
shl
xor
cdq
jae
mov
shl
mov
cmp
sbb
movs
fidiv
cmp
mov
fdivr
jns
pop
int
mov
pop
imul
mov
out
cmp
xor
jns
cwde
inc
test
adc
pop
xor
cmp
push
jecxz
clc
or
lea
xor
(bad)
jns
outs
adc
jns
in
add
je
add
jnp
inc
sbb
pop
dec
scas
jnp
xor
mov
leave
xchg
loope
jmp
repz
or
jmp
jge
cmp
sbb
bnd
mov
fnstcw
mov
ror
rcr
cmp
cmp
mov
and
adc
stos
push
xor
xor
xchg
pop
cmp
icebp
cli
jnp
mov
and
ins
or
cmp
xchg
jl
cmp
dec
dec
mov
dec
or
sbb
popa
mov
imul
xor
cmp
je
xor
dec
scas
jnp
into
in
jns
pop
xor
xchg
outs
jl
or
mov
in
mov
xor
fsubr
nop
or
leave
nop
jl
or
jbe
xor
sbb
xchg
pop
cmp
ret
into
call
mov
outs
inc
bound
mov
xor
and
pop
lock
sbb
lock
iret
lock
push
leave
xchg
(bad)
cli
push
out
bnd
mov
cld
mov
ror
lds
sbb
lock
push
leave
xchg
(bad)
xchg
inc
xchg
leave
push
jmp
outs
pop
bnd
mov
xor
add
dec
inc
pop
mov
cmp
xchg
jge
xor
jmp
pusha
push
xor
(bad)
adc
jns
fnstsw
xchg
pop
cmp
ret
into
xchg
adc
or
xor
(bad)
cli
dec
out
or
jae
call
xchg
ror
fdivr
mov
inc
pop
add
mov
sub
dec
dec
pop
mov
add
nop
jl
mov
or
sahf
add
int
mov
jbe
outs
xor
add
push
jns
lock
lock
sbb
lock
adc
jno
adc
jno
adc
sbb
cmp
cmps
cmp
repz
xor
mov
leave
jno
adc
jno
sub
imul
nop
jl
mov
pop
mov
cmp
int
arpl
dec
jno
outs
rcl
sbb
pop
jmp
cmp
in
sbb
call
inc
jecxz
inc
pop
sbb
outs
inc
lock
cdq
sbb
jns
jg
jns
dec
outs
mov
jns
cli
lods
push
sbb
lock
fnstsw
pop
(bad)
fnstcw
xor
xchg
adc
(bad)
xchg
imul
mov
xor
xchg
loope
jmp
repz
or
sbb
iret
pop
sbb
lock
mov
xchg
cli
xchg
mov
sub
sbb
xchg
cwde
std
jne
movs
fidiv
cmp
and
sti
mov
pop
cmp
mov
xchg
jl
cmp
dec
shl
sbb
popa
jae
cwde
jae
mov
shl
mov
xor
mov
int
stc
jbe
daa
xor
xchg
loope
jmp
fcmovnb
xchg
dec
cwde
in
pop
cmp
mov
xchg
jl
cmp
ss
adc
jns
dec
cdq
cmp
in
mov
sub
mov
pop
mov
leave
in
xchg
in
sub
fiadd
mov
sub
dec
mov
into
dec
inc
lock
xor
xor
pop
cli
mov
ss
movs
sbb
jns
cmps
les
mov
ds
jno
adc
jnp
mov
in
xchg
and
fbstp
les
(bad)
jns
in
(bad)
mov
mov
sahf
mov
into
sbb
jbe
sub
mov
and
xchg
mov
int3
in
xchg
imul
inc
sbb
cli
cmc
pop
ss
mov
mov
mov
pushf
int
in
jns
es
int
sbb
jbe
fnstsw
jns
xchg
loope
jmp
jae
cdq
jae
push
sub
in
mov
in
jns
cmp
js
aad
cmp
xchg
test
push
std
jne
in
jns
outs
xor
into
sbb
jns
jno
adc
sti
jnp
pop
dec
cdq
cmp
repz
into
in
mov
xor
dec
pop
pop
sbb
rcr
hlt
mov
mov
in
cli
cmc
pop
add
into
sbb
or
into
in
js
sbb
adc
jae
cdq
jae
push
sub
in
mov
in
jns
cmp
js
mov
test
hlt
int3
xchg
cwde
std
jne
in
jns
outs
xor
into
sbb
jns
jno
adc
dec
cdq
cmp
repz
in
mov
xor
dec
pop
pop
sbb
rcr
hlt
mov
mov
in
cli
cmc
pop
add
into
sbb
or
into
in
js
sbb
adc
jae
cdq
jae
push
sub
out
mov
in
jns
adc
cld
test
mov
xor
(bad)
mov
mov
jae
cdq
jae
push
sub
out
mov
in
jns
adc
cld
test
mov
rcr
adc
js
fnstenv
xchg
cwde
std
jne
in
jns
outs
jge
xor
cdq
jae
mov
int3
in
xchg
sub
mov
sbb
rcr
hlt
mov
mov
in
cli
cmc
pop
add
into
sbb
or
into
in
js
sbb
cli
mov
dec
outs
neg
dec
int
sbb
hlt
mov
mov
in
and
or
jl
scas
jnp
xor
call
movs
or
fnstsw
fadd
cmp
xor
mov
lock
mov
sub
in
repnz
outs
and
icebp
adc
mov
mov
mov
jmp
nop
add
int
loope
jmp
out
jbe
movs
cmp
lods
into
in
jns
ret
cmp
loope
mov
ds
lahf
jns
sbb
jns
fdivr
xor
mov
js
sbb
hlt
mov
mov
in
xchg
mov
sub
call
mov
mov
pop
cmp
mov
mov
(bad)
jns
sbb
lock
xor
xor
mov
loope
mov
mov
sbb
jns
pop
(bad)
jle
jns
adc
jbe
sbb
xchg
into
in
sub
in
repnz
outs
inc
mov
outs
adc
mov
in
repnz
mov
dec
add
je
mov
xor
mov
mov
lds
sahf
call
mov
or
jns
sahf
fld
mov
mov
dec
sbb
mov
xor
mov
jns
mov
cmp
into
jae
fnstenv
mov
int3
in
xchg
scas
adc
cmp
in
jns
or
jns
jno
xchg
pusha
ja
jns
leave
xor
lock
mov
test
test
in
sub
fnstcw
xor
(bad)
sub
xchg
xor
mov
jnp
nop
mov
lock
mov
in
sub
mov
shl
mov
mov
imul
lock
mov
retf
cmps
rol
push
in
push
mov
xor
lock
inc
test
adc
push
xor
cmp
xchg
mov
xchg
sbb
popa
jae
cwde
jae
mov
xchg
in
xchg
add
xor
mov
int
cli
inc
sbb
jo
adc
dec
xor
cmp
mov
mov
in
xchg
add
int
loope
jmp
out
jbe
in
jns
cwde
pushf
leave
into
in
jns
cli
cmp
jno
xchg
fs
jns
call
neg
cmp
sahf
mov
dec
in
xchg
imul
into
cwde
aad
mov
sbb
mov
(bad)
cli
fisttp
mov
mov
cmp
call
mov
dec
dec
lock
mov
add
mov
mov
lds
sahf
push
js
sbb
xchg
xchg
mov
sub
fdivr
xor
(bad)
sub
sbb
jns
xchg
jl
cmp
ss
sub
cmps
mov
iret
in
jbe
adc
jns
xchg
mov
sub
(bad)
int3
(bad)
xchg
in
repnz
outs
pop
mov
sub
lock
inc
test
adc
cwde
xor
cmp
mov
pop
xchg
in
jbe
enter
cwde
test
into
in
jns
lahf
(bad)
jns
sbb
popa
in
adc
in
xchg
pushf
call
xor
neg
ins
in
xchg
sahf
popa
xchg
in
mov
int3
in
jbe
xchg
cmp
fdivr
xor
cmp
xor
in
hlt
mov
mov
pop
cmp
mov
mov
sbb
cli
cmc
cmpxchg
mov
in
mov
pop
mov
cmp
(bad)
int3
ins
in
xchg
imul
into
xchg
mov
xchg
ret
sbb
hlt
mov
mov
pop
cmp
mov
mov
sbb
cli
cmc
or
mov
iret
in
or
xor
into
call
mov
mov
in
repnz
outs
jno
sahf
mov
cdq
in
xchg
sahf
mov
cmp
mov
in
repnz
outs
jno
sahf
popf
xchg
in
repnz
outs
jno
call
(bad)
cld
fucom
mov
fucom
mov
shl
xchg
outs
ds
into
sbb
xchg
or
loope
mov
into
dec
mov
into
dec
xor
mov
clc
mov
and
mov
xchg
outs
xor
xchg
dec
mov
into
dec
xor
mov
mov
dec
xor
mov
mov
dec
xor
repnz
sub
cdq
into
in
sub
repnz
push
cli
sub
(bad)
push
xchg
lea
xor
imul
cmp
jg
pop
xor
cmp
imul
sbb
fdivr
inc
sub
lock
sbb
lock
(bad)
(bad)
cmp
sbb
jns
jae
jnp
sbb
sbb
cmp
cmc
pop
xor
rcl
fst
mov
mov
or
lock
mov
into
in
pop
neg
js
sbb
bnd
cli
repnz
repz
cmp
cld
sub
dec
movs
jge
cmp
mov
cmp
in
xchg
inc
and
mov
cmp
sbb
cs
jae
and
rcl
(bad)
adc
sbb
pop
lds
adc
xrelease
sbb
sbb
fs
fdivr
fld
push
mov
pop
in
mov
pop
jns
in
fdiv
je
mov
into
push
dec
int
sbb
jmp
lock
cwde
sbb
scas
pop
cmp
ds
jo
cmp
adc
test
jl
xchg
xor
sar
mov
(bad)
jl
cmp
sbb
jns
jmp
repz
ss
xor
mov
jbe
cmp
es
jns
sbb
test
jns
aas
mov
stc
cmp
cmps
cmp
pop
rcr
xor
cmp
xor
stc
stc
(bad)
ss
icebp
push
mov
cmp
sbb
scas
pop
cmp
mov
and
jo
jns
aaa
and
cld
push
sbb
jns
push
jns
jo
cmp
jo
cmp
js
ficomp
js
mov
fcmovbe
jno
sbb
xchg
cmps
cmp
repnz
sbb
jl
scas
jnp
(bad)
push
and
jo
sub
or
cmp
repnz
sbb
jns
mov
fwait
imul
push
and
jo
cmp
nop
and
cmp
mov
fdiv
je
mov
mov
and
jo
cmp
xchg
push
and
jo
xor
fcomp
cmp
(bad)
push
xor
mov
jns
mov
fwait
cmp
in
xchg
push
and
jo
cmp
mov
cmp
rcl
mov
fidivr
jns
fdivr
xor
cmp
(bad)
push
and
jo
cmp
mov
jmp
sub
cmp
xor
cmp
into
push
dec
int
sbb
jl
test
mov
in
xor
mov
jns
repnz
sbb
js
and
dec
stc
xchg
clc
stc
cmp
cmps
cmp
pop
rcr
fld
cmp
and
jns
sbb
js
adc
jns
sbb
js
and
jns
sbb
jl
scas
jnp
mov
add
jo
cmp
mov
fidivr
jns
repnz
xor
or
xor
cmp
jmp
ja
cmp
popa
mov
cmp
xchg
pop
cmp
ins
cli
leave
adc
into
aas
mov
inc
mov
cmp
pop
add
xor
cmp
or
sbb
jns
push
and
jo
jns
or
cmp
test
xchg
add
cmp
js
fidivr
(bad)
jl
test
mov
pop
push
xor
mov
jns
lock
bnd
sbb
cmp
xchg
clc
xchg
lea
xor
cmp
scas
pop
cmp
ds
clc
jns
sbb
fild
jnp
mov
fidiv
iret
xor
cwde
cmp
ds
jns
sbb
jl
mov
ds
je
ss
je
add
xor
cmp
popf
cmp
fwait
inc
mov
aas
xchg
test
mov
xchg
jl
mov
in
add
xor
cmp
mov
cmp
jns
mov
jge
jo
cmp
fwait
inc
mov
outs
jne
dec
in
aas
or
cwde
cmp
mov
es
pop
mov
and
jo
mov
lock
leave
aas
mov
pop
cmp
push
fucom
jo
mov
(bad)
mov
iret
jl
push
mov
jle
push
xor
jno
cmp
cmp
sbb
popa
mov
pop
test
icebp
xor
sbb
jl
mov
nop
adc
jne
pop
cmp
jmp
cli
adc
test
popa
mov
pop
test
icebp
xor
sbb
jl
mov
nop
and
jne
pop
cmp
jmp
lock
fidiv
fstp
cmp
sbb
cwde
mov
inc
bound
pusha
dec
outs
(bad)
ins
adc
push
xor
(bad)
jl
scas
jnp
pop
adc
xor
mov
pop
or
mov
ins
mov
into
sahf
mov
jae
ret
jae
outs
xchg
cwde
inc
cmp
or
ret
jae
outs
xchg
test
cmp
out
movs
cmp
jae
ret
jae
outs
xchg
mov
sub
ret
jae
outs
xchg
dec
inc
cmp
inc
cdq
cmp
xchg
sar
(bad)
outs
sar
sub
(bad)
mov
cs
or
call
xor
lea
xor
ret
jae
mov
cdq
dec
(bad)
ins
ins
mov
shl
sbb
lock
cwde
pop
xchg
xor
leave
mov
xor
mov
xchg
inc
sbb
jns
jle
jns
push
dec
int
sbb
xchg
and
cmp
jle
jns
pop
loope
xor
cmp
xor
mov
inc
mov
fld
xor
jl
xor
cmp
ret
or
test
cmp
cwde
pop
shl
inc
lds
cmp
mov
push
jns
sbb
imul
jmp
xchg
xor
cmp
xor
adc
in
popf
fincstp
pop
jns
xchg
jl
popa
in
fnstsw
ror
xor
lea
xor
xchg
jns
sbb
pop
sbb
repnz
sbb
jns
outs
fst
into
push
dec
int
sbb
adc
cmp
je
shl
mov
jns
in
(bad)
je
mov
outs
inc
bound
mov
and
add
push
repz
ins
test
jmp
xor
xchg
je
mov
int
add
mov
fst
push
jns
sbb
(bad)
or
jno
hlt
je
imul
into
push
or
jo
mov
(bad)
bnd
mov
sbb
mov
int
cli
sub
(bad)
outs
(bad)
cs
push
jae
jecxz
cmp
outs
xor
into
in
imul
cwde
aad
bound
repnz
adc
or
into
adc
jge
es
jns
sbb
lods
jge
xor
(bad)
jns
sbb
lods
jge
xor
(bad)
jns
sbb
lods
jge
xor
(bad)
jns
sbb
lods
jge
xor
sbb
std
cmp
cmp
pop
sub
jne
cmp
and
fnstsw
adc
cmp
adc
jge
jns
cmp
adc
ins
mov
jbe
mov
jns
xchg
ret
xor
lods
sub
cld
mov
loope
xchg
xor
ins
daa
and
or
xchg
ret
cli
fistp
ss
and
jne
xor
sbb
jns
inc
ss
je
push
mov
pop
cmps
jnp
popa
repz
in
stos
and
cmps
jnp
arpl
(bad)
ins
sbb
lock
mov
imul
jmp
xchg
xor
pop
sub
jne
cmp
leave
cwde
sar
dec
int
and
sbb
pop
lods
jl
pop
fld
lds
cmp
xor
push
xchg
in
jl
scas
jnp
mov
pop
jge
dec
mov
jns
add
lock
cwde
sar
daa
aas
jge
pop
mov
mov
cmp
or
xchg
sar
pop
ss
xor
or
xor
cmp
fstp
mov
outs
mov
xchg
ins
inc
xor
sar
fstp
lock
sbb
sbb
jecxz
stc
or
xchg
sar
sbb
sub
fwait
add
lock
cwde
sar
lods
cmp
jns
outs
ds
fcomp
cmp
xor
mov
nop
ins
imul
jmp
jge
pop
shl
or
mov
cmp
ins
xor
cmp
fwait
add
lock
push
mov
xor
fwait
add
lock
cwde
sar
daa
aas
js
sub
jbe
pop
aas
inc
or
aaa
inc
iret
sbb
jns
sbb
xchg
sbb
or
repz
xor
mov
and
ret
cli
fistp
mov
and
cmp
pop
mov
jns
cdq
mov
sar
sub
(bad)
mov
cs
push
dec
int
sbb
dec
into
lock
or
pop
mov
jns
jmp
inc
or
je
adc
xor
cmp
ins
loope
fcomp
cmp
fnsave
xchg
lea
xor
sub
fcmovu
jnp
daa
sub
mov
xchg
sar
shr
(bad)
in
and
push
dec
int
sbb
iret
xor
sbb
or
xor
dec
pop
mov
lds
adc
(bad)
sbb
ins
aaa
in
test
and
repz
pop
es
xor
sbb
lock
sbb
push
loope
ret
js
sbb
lock
mov
das
sbb
jp
pop
test
jl
nop
mov
js
xor
lock
sbb
js
cwde
sar
pop
sar
add
mov
into
push
dec
int
sbb
hlt
gs
sar
pop
sar
sbb
jns
dec
outs
jbe
dec
sub
and
test
xor
dec
test
in
mov
clc
fsubr
mov
rcl
sbb
sub
sar
in
mov
into
sbb
arpl
cmp
cmp
inc
sbb
cld
rol
mov
in
jns
push
dec
int
sbb
stc
mov
out
into
sbb
lods
mov
stc
or
sbb
or
out
in
jns
or
iret
mov
(bad)
xchg
fwait
add
jns
outs
cmp
ret
xchg
in
mov
xchg
xor
jns
repz
xor
mov
cdq
(bad)
mov
pop
cmp
mov
xchg
into
in
mov
xchg
xor
jns
fcmovu
jnp
mov
dec
and
mov
and
sbb
xchg
pop
cmp
mov
(bad)
xchg
sbb
iret
mov
(bad)
xchg
jo
addr16
cmp
mov
jns
sahf
je
into
in
cld
ret
xchg
adc
in
ret
xchg
stc
cmp
or
sbb
jbe
cmp
xchg
stc
cmp
and
sbb
xchg
push
dec
int
sbb
xchg
adc
out
xor
cmp
mov
in
jl
scas
jnp
mov
in
stos
lock
mov
xor
cmp
xor
(bad)
dec
into
lock
xor
cmp
repz
sbb
mov
mov
(bad)
xchg
pop
mov
jns
xchg
xchg
into
in
scas
mov
in
xchg
lock
cmp
push
dec
int
sbb
xchg
repnz
xor
push
xchg
sbb
xchg
mov
adc
mov
out
mov
mov
mov
in
xchg
jae
(bad)
lock
sar
stc
cmp
out
dec
mov
test
cmp
xor
cmp
(bad)
mov
jns
adc
mov
xor
(bad)
xchg
jg
cli
jns
sbb
clc
retf
jns
ins
pop
retf
in
and
in
jns
sbb
xchg
(bad)
jns
and
mov
mov
pop
cmp
into
repz
cmp
sbb
jbe
mov
xchg
into
in
fwait
xor
jns
mov
in
fadd
hlt
mov
in
mov
lock
int
xor
xchg
out
in
repnz
out
(bad)
xchg
fcmovu
jnp
ret
xor
fdivr
push
lds
fwait
xor
sahf
int
into
in
(bad)
vshufps
lods
(bad)
jl
scas
jnp
mov
fisub
push
les
shl
sbb
lock
out
into
xchg
sti
jp
push
add
in
lods
(bad)
mov
inc
jp
xchg
mov
repnz
out
into
nop
lods
loope
in
cli
repz
cmp
sahf
lods
cmps
into
in
cld
xchg
(bad)
mov
in
jnp
sahf
test
cld
popf
(bad)
mov
in
cld
in
(bad)
mov
(bad)
mov
in
xchg
hlt
dec
cmp
sahf
in
cmps
into
in
cld
(bad)
(bad)
mov
(bad)
mov
in
cld
in
(bad)
mov
in
or
jae
jns
cmp
mov
in
xchg
cmp
(bad)
mov
push
cmp
in
aad
in
xchg
stos
in
or
xchg
clc
fwait
xor
(bad)
push
mov
xchg
xor
jns
lods
lods
mov
in
mov
and
test
xor
(bad)
adc
or
jns
repz
das
xor
mov
add
ss
push
sbb
jns
xor
lahf
add
sbb
xchg
lods
cmp
cmp
adc
add
sbb
std
or
add
jns
nop
mov
repnz
sbb
jnp
xchg
mov
mov
into
sbb
xchg
mov
rcl
xor
lock
or
xchg
leave
cli
fstp
mov
lock
or
xchg
leave
cli
fstp
mov
aaa
fcmovbe
(bad)
jl
scas
jnp
lods
lods
(bad)
in
mov
and
jecxz
into
fwait
mov
js
lods
aas
inc
fcomp
cmp
or
cmp
cwde
rol
mov
in
sti
mov
sahf
int
into
in
sbb
or
mov
out
into
imul
xchg
sbb
iret
movs
mov
fstp
cmps
sub
jmp
(bad)
mov
or
cmp
sbb
daa
add
xor
cmp
add
cmp
sbb
daa
add
xor
cmp
adc
jns
sbb
jbe
icebp
jbe
sahf
call
mov
dec
gs
mov
sub
scas
in
into
in
int3
in
mov
cwde
std
jne
cmps
fisub
jae
pushf
(bad)
fsubp
(bad)
jns
mov
xchg
into
in
fwait
xor
clc
cwde
xor
je
mov
in
lock
hlt
mov
in
jge
sbb
into
push
dec
int
sbb
push
int
(bad)
stc
mov
(bad)
xchg
sbb
iret
mov
(bad)
xchg
jo
addr16
cmp
mov
jns
sahf
push
or
data16
push
cli
sub
(bad)
mov
cs
jecxz
gs
mov
jns
fnstsw
xchg
inc
popf
mov
sbb
mov
xor
jns
data16
hlt
add
test
xor
retf
div
add
test
xor
retf
and
cmp
xchg
xor
jl
xor
das
repz
sub
and
aad
aas
stc
je
cmp
mov
fwait
inc
mov
imul
jns
jle
lock
mov
leave
fnstsw
repnz
lods
ins
(bad)
or
lods
ds
mov
xor
mov
iret
jb
add
xor
cmp
fnstcw
mov
xchg
pop
icebp
sbb
jns
jecxz
or
fwait
jl
xor
cmp
xchg
sti
cli
rcr
xor
dec
jo
jecxz
add
fwait
jl
xor
cmp
in
jp
icebp
outs
xor
xor
cmp
pop
cmp
cmp
fwait
cmp
outs
cmp
bnd
mov
sbb
mov
leave
adc
jp
in
cmp
outs
xor
xor
fwait
jl
xor
mov
mov
daa
xchg
cmp
dec
int3
inc
jne
test
lock
je
cmp
dec
out
ds
nop
jl
mov
dec
shl
add
xor
cmp
adc
cmp
inc
addr16
fsubr
dec
imul
cmp
sub
rcl
push
xchg
sbb
das
pop
sbb
sbb
cmp
rcr
js
outs
shl
lock
stc
or
fnstsw
xor
sar
cwde
(bad)
js
div
cmp
xchg
cli
outs
inc
lock
xor
arpl
xor
(bad)
push
xor
jge
sbb
mov
xchg
mov
lock
dec
jno
sahf
cmp
pop
dec
cmp
sahf
cmp
sbb
jns
fild
dec
(bad)
xchg
rcl
(bad)
outs
sar
sub
(bad)
outs
mov
dec
push
mov
(bad)
jp
sbb
pop
sbb
or
jno
xchg
ror
outs
inc
cli
sub
(bad)
mov
mov
(bad)
sbb
sbb
adc
jae
jns
sbb
pop
sbb
pop
sbb
jns
in
jno
imul
xchg
(bad)
cli
iret
in
pusha
mov
xor
cmp
cwde
sbb
fcmovnbe
sbb
pop
int
div
das
fld
jns
xchg
cli
cli
icebp
or
jno
sub
sbb
dec
xor
into
sahf
mov
jno
cli
dec
pop
cmp
mov
xchg
jl
mov
jmp
xchg
xchg
and
cmp
repz
sub
sbb
clc
(bad)
push
jns
inc
addr16
fsubr
cwde
aad
bound
(bad)
mov
mov
cmp
jno
adc
jno
adc
sbb
mov
hlt
dec
cmp
fnstsw
dec
icebp
lock
ror
(bad)
cld
mov
leave
xchg
(bad)
adc
jno
adc
dec
sar
je
mov
mov
(bad)
cmp
loop
mov
int
push
inc
pop
outs
xchg
and
jns
sbb
pop
jmp
cmp
dec
rol
fld
ror
pop
int
mul
data16
push
cli
sub
(bad)
push
iret
and
sub
lock
adc
pop
push
jns
sbb
xor
stc
xchg
pop
pusha
sbb
lock
or
(bad)
cld
mov
leave
xchg
(bad)
adc
jno
adc
dec
rcl
sbb
adc
xchg
jl
popa
in
imul
lahf
push
pop
popa
sbb
dec
icebp
pop
sar
jecxz
cmp
dec
push
xchg
dec
jno
pop
(bad)
push
adc
je
test
sbb
mov
lods
cmp
inc
dec
pop
inc
lea
sbb
lock
xchg
cmp
pop
cmp
pop
and
cmp
repz
sub
sbb
xchg
and
jge
dec
push
dec
rcr
xchg
movs
dec
cmp
fbstp
cmp
inc
xor
xchg
cmp
cmp
or
add
mov
dec
lds
pop
xor
cmp
repz
sub
sbb
and
fsubr
dec
push
xchg
fs
outs
xor
aas
mov
mov
jns
jae
cdq
jae
ror
sbb
and
in
push
lods
cmp
cdq
jae
rcr
sbb
cli
cmc
adc
(bad)
imul
jns
or
xor
cmp
xchg
sti
push
repz
ins
test
bound
mov
sbb
test
lock
jge
cmp
sbb
cli
push
idiv
cli
push
repz
push
(bad)
cmp
dec
jmp
jnp
mov
cmp
call
loope
repnz
inc
imul
pop
(bad)
nop
jl
lods
jns
mov
mov
into
call
(bad)
cmp
adc
cmp
das
sbb
data16
jnp
pop
mov
mov
cmp
jbe
js
data16
jns
shl
cmp
xchg
jl
fidivr
mov
jns
lods
jl
lods
jge
rcr
stc
dec
in
or
cwde
push
xchg
xor
inc
xchg
outs
out
lock
nop
jl
lods
cmp
adc
into
and
jmp
jns
adc
sub
adc
mov
jl
mov
sbb
jbe
push
fisttp
xor
bnd
ss
jno
mov
cmp
sub
xor
jbe
dec
(bad)
fnstcw
cmp
call
je
ss
jno
mov
cmp
sub
xor
js
push
and
fcomp
mov
sbb
cmp
mov
jmp
dec
mov
inc
xor
or
mov
jmp
mov
mov
jmp
or
test
mov
mov
mov
xor
cmp
mov
sub
pop
mov
inc
pop
test
jno
mov
jmp
mov
imul
jmp
push
repnz
int3
in
sbb
jl
jns
sbb
and
push
rol
test
jns
nop
and
mov
pop
test
jno
mov
jmp
mov
mov
jmp
icebp
pop
test
jns
mov
jmp
mov
test
test
sbb
cmp
dec
mov
xor
dec
test
mov
xor
fdivr
xor
sub
pop
fcomp
mov
sbb
cmp
mov
mov
mov
xor
dec
test
sub
mov
mov
mov
add
test
jmp
mov
mov
mov
mov
jmp
(bad)
adc
dec
mov
dec
mov
jecxz
jmp
mov
sbb
xor
dec
test
test
mov
mov
mov
add
test
jmp
mov
mov
mov
mov
jmp
(bad)
icebp
sub
pop
mov
dec
mov
jecxz
jmp
mov
mov
nop
or
les
aam
aad
bound
repnz
adc
cmp
fdivr
ins
cmp
mov
div
xchg
mov
out
(bad)
mov
(bad)
into
sbb
xchg
jl
mov
pop
leave
jns
repnz
sbb
mov
cmp
xchg
jl
mov
repz
mov
in
lock
ins
xor
(bad)
cmp
sbb
push
fstp
jl
mov
inc
jns
movs
ds
sbb
iret
fs
sbb
mov
bnd
mov
icebp
fs
jge
daa
dec
or
xchg
loope
rcr
and
xor
xor
icebp
and
jge
fstp
sbb
ret
cmp
lods
je
sbb
mov
mov
sub
lock
jno
mov
jns
xchg
jl
popa
repz
xor
ss
je
imul
mov
dec
ret
js
dec
sar
aaa
xchg
jl
popa
xchg
loope
ror
jg
cmp
cmc
aas
and
push
out
cmp
xchg
jl
mov
aas
pop
into
pop
leave
jbe
pop
xor
sti
aas
in
xchg
bound
mov
or
addr16
xchg
push
push
dec
lock
lock
cmps
aaa
xor
xor
sub
sar
cmp
data16
mov
push
hlt
mov
jns
outs
ds
icebp
repnz
xor
mov
ror
or
repz
mov
icebp
adc
xor
cmp
data16
mov
or
test
xor
sub
jns
int3
jbe
dec
rep
jbe
data16
mov
or
test
xor
test
xor
jl
cmp
cmp
sbb
je
imul
stc
cmps
jnp
mov
call
jmp
push
jmp
imul
sbb
je
dec
mov
xor
mov
xor
repnz
test
xor
sub
je
cmp
jns
push
loope
jae
add
imul
jns
pop
in
nop
push
cmp
in
xchg
mov
lods
jmp
ror
xor
jae
sar
jl
cmp
je
rol
jl
cmp
dec
ret
ss
into
xchg
sti
jbe
leave
clc
fwait
and
out
lock
test
xor
cmp
jno
add
xor
stc
les
imul
stc
cmps
jnp
mov
call
jmp
push
jmp
imul
sbb
je
dec
mov
xor
mov
xor
mov
mov
nop
sub
mov
dec
and
in
les
cmp
jnp
or
or
xchg
out
or
test
xor
sub
retf
and
sbb
jns
pop
add
out
sbb
xchg
test
nop
sub
jns
push
in
jae
mov
or
cmp
lock
lock
mov
lods
jl
popa
xchg
loope
xor
test
xor
test
(bad)
cli
cmc
adc
pop
sbb
pop
sbb
pop
sbb
jns
in
jno
daa
jo
xor
mov
(bad)
or
dec
(bad)
or
repz
xor
mov
(bad)
std
mov
loope
inc
jns
cmp
(bad)
jno
xor
stc
cmp
bound
mov
and
sbb
movs
dec
sbb
std
mov
fucom
mov
scas
jnp
fwait
sbb
jns
push
(bad)
cmps
jae
adc
xlat
xchg
mov
lock
into
xor
sbb
sub
loope
mov
mov
cwde
(bad)
cmp
in
xchg
sbb
cmp
sbb
push
(bad)
jb
xor
add
mov
push
mov
cs
lock
mov
mov
pop
icebp
movs
mov
sbb
psubd
mov
jns
xchg
jb
xor
dec
ja
sahf
cmp
into
in
mov
into
sub
popa
jae
fdiv
push
mov
pop
cmp
mov
les
jp
cmp
shl
lock
adc
jno
adc
jno
adc
sbb
cmp
imul
into
in
mov
jmp
mov
mov
repz
xor
push
jns
sahf
leave
test
in
adc
add
jns
jecxz
cmp
in
(bad)
int3
in
xchg
ins
push
cmp
scas
int
into
in
(bad)
ja
cmp
xor
movs
out
pop
cmp
mov
mov
div
jne
xor
(bad)
sub
out
xor
(bad)
sub
cmp
repz
jns
sbb
jl
scas
jnp
pop
fsub
cmp
jae
cmps
jae
mov
into
in
xchg
cmp
fwait
shl
cmp
pop
ja
cmp
jae
cmps
jae
push
jnp
sbb
jns
fild
outs
inc
lock
popa
dec
outs
cs
push
lahf
bound
fadd
jl
scas
jnp
mov
xor
sbb
sbb
int
push
jns
and
jbe
jno
adc
jno
xchg
or
repz
xor
sbb
cmp
loop
cmp
xchg
sar
inc
xor
xchg
or
repz
xor
sbb
or
repz
xor
data16
push
cli
sub
(bad)
outs
mov
mov
cmp
sbb
popa
in
ins
into
outs
sub
cmp
or
sbb
mov
mov
ja
inc
xchg
ror
(bad)
adc
punpckhwd
cmp
sbb
std
popa
outs
inc
cli
sub
(bad)
push
push
mov
adc
jns
pop
shr
pop
lds
pop
sbb
xor
cmp
xor
adc
in
jne
outs
xor
cmp
dec
jge
fcmovnbe
dec
into
outs
and
sub
or
or
repz
xor
xor
int
mov
mov
mov
cmp
outs
lds
add
jns
clc
fsubr
cwde
aad
addr16
mov
and
xchg
jl
mov
jl
push
call
xor
cmp
cld
mov
rcl
cmp
dec
push
pusha
xor
cmp
xor
dec
jne
outs
xor
cmp
dec
jge
fcmovnbe
inc
mov
jno
adc
in
imul
push
cmp
fisttp
into
outs
lds
add
shl
ss
xor
fdivp
je
mov
into
outs
lds
lods
jl
outs
inc
lock
popa
dec
outs
(bad)
xchg
adc
mov
into
jnp
xor
xchg
jl
cmp
repz
xor
mov
leave
mov
add
outs
push
lock
sbb
lock
stc
cmp
and
pop
fdivr
jns
jno
adc
jno
adc
jnp
fnstcw
lds
pop
or
xor
mov
into
lds
sbb
lock
data16
clc
fadd
lock
sub
lock
jge
xor
pop
cmp
popa
adc
sub
(bad)
push
repnz
adc
test
fist
pop
(bad)
xor
lock
cmps
fisubr
mov
push
mov
xchg
leave
js
dec
(bad)
or
repz
xor
mov
push
jmp
pop
cmp
pop
(bad)
sbb
lock
cwde
stc
jnp
imul
hlt
adc
or
xor
lock
push
mov
pusha
mov
sbb
mov
cmp
xchg
jl
mov
xchg
leave
js
dec
rcl
neg
cmp
in
fs
in
imul
nop
jl
mov
dec
(bad)
sbb
xchg
cmp
stc
xchg
ss
outs
inc
bound
mov
sub
addr16
mov
cmp
mov
add
mov
(bad)
stos
cmp
leave
xchg
(bad)
test
cwde
(bad)
jno
jno
xchg
lock
cmp
pop
int
fild
jns
sub
xchg
daa
adc
jge
cwde
leave
or
fisttp
lods
cmp
icebp
xor
jecxz
pushf
push
fdivr
sbb
xor
lods
inc
xchg
lods
add
arpl
sbb
loopne
loop
scas
mov
pop
das
mov
sbb
ret
jle
std
aaa
(bad)
stc
clc
xchg
xor
mov
add
dec
push
and
pop
cmp
fldenv
std
ins
push
in
xchg
lods
jl
or
or
inc
bound
mov
jnp
xrelease
xor
push
movs
inc
add
cmp
mov
cmp
xchg
test
mov
jmp
mov
iret
in
xchg
stc
shl
cli
cmc
adc
jle
fcmovnbe
inc
cmp
cmp
mov
mov
repz
xor
or
xor
dec
ins
fst
mov
shr
cmp
mov
mov
in
les
int3
in
(bad)
jmp
nop
lods
lods
into
out
hlt
lea
cmp
sbb
jno
stos
cmp
sbb
xchg
in
fcomip
mov
mov
push
jge
sbb
xchg
fcomp
jns
jmp
mov
xchg
mov
lock
icebp
xchg
add
lock
repnz
xlat
mov
hlt
xchg
cwde
std
jno
dec
out
xor
dec
jno
fistp
cwde
std
jno
push
out
xor
mov
mov
fbstp
xchg
pop
pop
cmp
adc
jns
or
mov
cmp
and
cdq
jae
(bad)
int3
int
mov
fst
jns
mov
mov
jl
cmp
dec
je
cmp
push
sbb
jns
in
shr
cmps
lds
pinsrw
repz
sbb
xor
sbb
lahf
mov
in
mov
xor
mov
jl
or
rcr
xchg
sbb
sbb
cmps
jae
(bad)
int3
int
mov
(bad)
jge
xor
mov
jl
or
rcr
xchg
sar
cmp
mov
lock
mov
jae
sbb
loopne
loop
xor
xchg
mov
js
jns
or
arpl
(bad)
cs
and
sar
jne
cmp
cmc
or
or
jae
cmps
jae
mov
int
mov
pop
pop
cmp
fild
jns
adc
jns
or
mov
cmp
and
cdq
jae
(bad)
int3
int
mov
pop
adc
cmp
in
test
in
xchg
fs
cmp
fbstp
lock
lock
xor
xor
cmp
(bad)
loop
xor
adc
sti
jnp
into
scas
lds
jne
cmp
cmc
adc
out
pop
cmp
into
repz
cmp
jmp
sbb
loopne
loop
xor
xchg
lock
cmp
js
jns
or
arpl
(bad)
cs
and
rol
jb
cmp
cmc
or
jns
cmp
mov
mov
test
pop
cmp
mov
mov
cmp
mov
mov
mov
sub
out
xor
add
cmp
cmc
cmp
and
cmp
cmp
cmp
in
sar
push
inc
pop
fst
jns
mov
mov
(bad)
int
mov
je
cmp
fild
xchg
adc
cmp
adc
jns
or
mov
cmp
and
cdq
jae
(bad)
int3
int
mov
mov
ins
xor
rol
cmp
cmp
in
sar
push
inc
push
shl
cmp
in
test
in
xchg
sub
jns
fbstp
xchg
in
cmp
adc
jns
or
mov
cmp
and
cdq
jae
(bad)
int3
int
mov
pop
mov
cmp
in
ins
mov
in
adc
repz
xor
mov
cmp
sbb
loopne
loop
xor
adc
lds
into
scas
lds
jae
cmp
cmc
adc
mov
xchg
mov
lock
cmp
sbb
loopne
loop
xor
adc
sti
jnp
into
scas
lds
jae
cmp
cmc
adc
inc
jae
cmp
cmp
cmp
in
sar
push
inc
pop
fnstenv
jnp
xor
mov
(bad)
int
mov
adc
cmp
fild
cli
dec
cmp
jbe
outs
cmp
cwde
pushf
vcvtdq2pd
jns
pop
cmp
fnstsw
mov
arpl
xor
mov
xchg
lock
repnz
mov
mov
mov
cmps
mov
(bad)
jbe
daa
add
leave
mov
mov
sbb
rol
sbb
jns
push
aad
jg
fstp
test
les
push
dec
mov
xor
mov
sbb
data16
xor
mov
push
rcl
test
call
xor
cmp
popa
mov
in
xchg
cld
xor
mov
in
sub
out
xor
aaa
jo
cmp
cmc
add
push
jo
cmp
cmp
cmp
in
sar
push
inc
push
inc
out
xor
mov
jl
cmp
fbstp
lock
lock
cmp
xor
xor
cmp
(bad)
loop
xor
adc
lds
into
scas
lds
jo
cmp
cmc
adc
cmps
jno
cmp
cmp
cmp
in
sar
push
inc
push
jmp
cmp
in
test
in
xchg
int3
pop
cmp
fbstp
clc
mov
mov
mov
repnz
mov
out
jbe
mov
xchg
xchg
mov
lock
lock
mov
xor
mov
sub
in
nop
imul
cmp
in
jbe
push
cmp
xchg
leave
push
rcl
jns
sbb
inc
mov
mov
sbb
repnz
mov
out
xchg
and
pop
cmp
mov
mov
cmp
cmc
pop
mov
(bad)
xchg
daa
cmp
loop
mov
into
out
clc
not
mov
sub
lods
mov
hlt
mov
int
int3
in
xchg
push
sahf
int
int3
in
xchg
cwde
jecxz
xchg
jmp
test
in
(bad)
into
in
xchg
int3
shl
xchg
in
adc
jnp
popa
repz
xor
mov
cmp
sbb
lahf
mov
in
cld
mov
les
push
sbb
sar
cmp
in
sar
push
inc
push
inc
out
xor
mov
hlt
and
jns
fbstp
xchg
mov
cmp
adc
jns
or
mov
cmp
and
cmps
jae
(bad)
int3
int
mov
fld
jns
mov
mov
jl
or
rcr
xchg
inc
inc
xor
mov
mov
out
xchg
fsub
cmp
in
push
xor
(bad)
cld
(bad)
xchg
imul
(bad)
in
cli
cmc
pop
mov
leave
in
xchg
(bad)
cld
mov
mov
in
test
in
xchg
sbb
cmp
fbstp
xchg
fsub
cmp
or
mov
cmp
and
cmps
jae
(bad)
int3
int
mov
(bad)
pop
jns
mov
mov
jl
or
out
pop
cmp
into
repz
sbb
push
rcl
jns
adc
jns
or
mov
cmp
and
cdq
jae
(bad)
int3
int
mov
pop
sub
cmp
in
test
in
xchg
xchg
and
xor
mov
cmp
or
mov
cmp
adc
jbe
xor
sbb
sbb
loopne
loop
repnz
mov
pop
cmp
fst
jns
cwde
std
imul
mov
mov
jl
or
out
pop
cmp
into
repz
xor
mov
sbb
xor
cmp
or
mov
cmp
and
cmps
jae
(bad)
int3
int
mov
fld
add
xor
mov
jl
or
rcr
xchg
ret
sbb
inc
xor
xor
cmp
(bad)
loop
xor
xchg
xchg
cmp
js
jns
or
arpl
(bad)
cs
and
rcr
or
cmp
cmc
or
out
pop
cmp
into
repz
mov
mov
xchg
mov
lock
pop
inc
xor
xor
cmp
(bad)
loop
xor
adc
sti
jnp
into
scas
lds
or
cmp
cmc
adc
out
pop
cmp
into
repz
inc
xor
mov
inc
xor
xor
cmp
(bad)
loop
xor
adc
sti
jnp
into
scas
lds
or
cmp
cmc
adc
out
pop
cmp
into
repz
inc
xor
mov
push
rcl
jns
adc
jns
or
mov
cmp
and
cdq
jae
(bad)
int3
int
mov
mov
in
repnz
mov
pop
cmp
(bad)
add
imul
mov
mov
jl
or
rcr
xchg
repnz
xor
mov
push
rcl
jns
scas
lds
or
adc
pop
or
sbb
jns
in
sar
push
inc
push
jmp
cmp
in
test
in
xchg
mov
fbstp
xchg
js
cmp
repz
or
mov
cmp
jns
nop
test
pop
repz
xor
or
or
addr16
sbb
jns
in
sar
push
inc
push
jmp
cmp
in
test
in
xchg
or
cmp
fbstp
adc
(bad)
jnp
into
scas
lds
or
adc
mov
xor
mov
jl
or
rcr
xchg
mov
mov
inc
xor
xor
cmp
(bad)
loop
xor
xchg
cwde
and
jns
js
jns
or
arpl
(bad)
cs
and
rcr
or
cmp
cmc
or
in
pop
cmp
into
repz
sbb
adc
jno
adc
jno
adc
sbb
cmp
outs
xor
mov
in
mov
into
scas
lds
or
cmp
xor
(bad)
cs
in
test
in
xchg
mov
xor
(bad)
int3
ftst
les
xor
mov
loopne
cmp
jmp
lahf
mov
in
mov
xor
mov
fucom
les
repnz
mov
mov
cmp
(bad)
ins
xor
or
into
sbb
inc
mov
test
xor
ss
je
imul
mov
in
xchg
in
and
jns
sbb
in
pop
cmp
mov
mov
shr
mov
in
repz
add
jns
and
cmp
jae
movs
jae
push
js
sbb
xchg
in
xor
movs
jae
push
xchg
in
pop
cmp
xor
cmp
fldcw
xchg
cwde
std
pop
mov
fsub
repnz
mov
mov
movs
jnp
sbb
data16
mov
je
sbb
mov
xchg
mov
lock
(bad)
jns
pop
xor
or
ss
icebp
cwde
fnstcw
sahf
test
cmp
nop
cmp
jns
sahf
mov
into
in
sbb
shl
neg
outs
xchg
inc
sub
jns
dec
xor
sbb
mov
in
xchg
ins
sub
jns
sahf
inc
test
in
int3
xchg
out
xchg
push
push
jns
nop
ins
jno
xchg
inc
test
in
sub
xor
jnp
movs
add
into
xchg
rcl
(bad)
das
fnstenv
push
jns
xchg
mov
xchg
cs
xor
mov
inc
out
xchg
scas
mov
jg
sbb
repnz
xchg
dec
test
in
sub
xor
jnp
movs
xchg
les
jae
rcl
mov
les
xor
(bad)
sub
das
add
xchg
ror
(bad)
xchg
mov
cmp
repz
inc
xor
push
jge
sbb
hlt
mov
les
in
pop
cmp
test
jnp
pop
sbb
jns
repz
adc
or
dec
shr
icebp
repnz
jnp
sbb
imul
(bad)
adc
sahf
lds
mov
les
add
pop
xchg
in
jmp
test
mov
int3
in
xchg
mov
int3
in
das
mov
in
xchg
or
mov
xchg
xchg
adc
or
dec
rcl
add
cmp
repnz
sbb
in
pop
cmp
mov
mov
leave
sub
lock
(bad)
sub
imul
into
xchg
mov
clc
neg
pop
jns
jno
adc
xchg
mov
sub
daa
add
cwde
std
neg
jge
xor
adc
(bad)
xchg
mov
lock
mov
js
sbb
pop
neg
cmp
cmps
mov
or
fxam
mov
jae
jns
sahf
add
push
in
sub
imul
adc
adc
jno
hlt
mov
mov
xor
stc
jbe
cmc
cmp
in
ror
in
xchg
in
cmp
hlt
mov
int3
movs
out
xchg
out
xor
movs
jae
mov
int
mov
sbb
adc
in
jns
xor
mov
mov
in
adc
jns
pop
or
xor
and
fstp
cmp
xchg
or
adc
in
js
sahf
push
test
in
jl
shl
mov
dec
sbb
xchg
pop
das
cmp
cmps
test
or
xor
shr
add
inc
cmp
cld
mov
push
out
xchg
sbb
hlt
mov
mov
pop
sbb
in
pop
cmp
mov
mov
cmc
pop
add
into
sbb
or
cwde
pushf
in
in
jns
jecxz
cmp
in
clc
fiadd
xor
ds
xchg
xchg
xchg
sbb
popa
repz
dec
xor
mov
jns
repz
jns
scas
popf
test
in
mov
test
or
mov
lods
out
xchg
sbb
mov
outs
inc
bound
mov
dec
outs
cs
sbb
into
sahf
mov
sub
lock
dec
jno
repz
xchg
sti
pop
mov
pop
shl
repz
sub
in
imul
xchg
sti
pop
mov
fisttp
jns
xchg
sti
pop
mov
or
xor
cmp
adc
sub
sbb
jbe
dec
iret
js
adc
sub
xchg
jge
sbb
jns
iret
or
xchg
dec
cwde
inc
xor
icebp
aaa
xchg
ror
(bad)
adc
xchg
leave
cmp
jmp
in
jno
jmp
mov
add
cmp
je
mov
aaa
push
jns
fstp
jns
in
imul
pop
aas
jl
lods
ins
test
push
dec
xor
mov
xor
mov
bound
cmp
xchg
jge
xor
mov
dec
iret
hlt
jne
cmp
fstp
or
xchg
jl
popa
jno
das
pop
lahf
push
xor
adc
repz
sbb
cmp
sbb
js
cmp
repz
dec
xor
mov
leave
inc
addr16
fsubr
mov
shl
add
cmp
addr16
mov
cmp
xor
sahf
test
xor
mov
jns
sahf
test
mov
fld
in
pop
cmp
mov
lahf
mov
add
in
mov
sub
jns
fbstp
jo
outs
sbb
into
in
jne
dec
or
mov
into
sahf
mov
in
mov
outs
fdivr
sbb
hlt
mov
fld
icebp
sti
mov
sbb
jo
outs
add
mov
jns
dec
(bad)
int3
cmc
sti
mov
cwde
std
jno
fisttp
scas
icebp
cdq
into
in
or
repz
sbb
cld
mov
mov
lock
outs
inc
lock
sub
mov
jns
dec
outs
cs
cmp
jne
xor
fcomip
mov
out
into
xchg
call
xchg
jmp
pop
pop
cmp
repz
dec
xor
mov
mov
(bad)
cmp
loop
mov
xor
imul
fbstp
adc
jns
rep
dec
xor
mov
sbb
sbb
lahf
mov
in
cld
rol
xchg
jmp
mov
xor
(bad)
sub
pop
or
jno
dec
jns
mov
mov
jl
sqrtps
mov
fld
add
adc
jns
mov
xor
sbb
jl
xor
fild
sbb
rcl
jns
in
shr
cmps
cmp
imul
cmp
lods
sub
jns
fild
xchg
dec
sub
jns
adc
jns
or
mov
cmp
and
sbb
popa
repz
mov
jae
mov
xor
mov
sbb
mov
xchg
mov
lock
push
dec
xor
xor
cmp
(bad)
loop
xor
adc
sti
jnp
mov
in
xchg
sub
jns
fbstp
xchg
and
cmp
adc
jns
or
mov
cmp
sbb
(bad)
dec
xor
sbb
sbb
loopne
loop
hlt
mov
fld
in
pop
cmp
mov
fld
add
cmp
cmc
or
or
jae
cmps
jae
mov
xor
mov
sbb
popa
repz
repz
sbb
loopne
loop
xor
adc
sti
jnp
mov
in
xchg
loopne
cmp
fbstp
adc
les
mov
in
xchg
mov
cmp
fbstp
clc
(bad)
sbb
xor
dec
dec
xor
xor
cmp
(bad)
loop
xor
adc
sti
jnp
mov
in
xchg
mov
fbstp
adc
les
mov
in
xchg
dec
sub
jns
fbstp
xchg
or
cmp
adc
jns
or
mov
cmp
sbb
push
dec
xor
sbb
sbb
loopne
loop
hlt
mov
fld
in
pop
cmp
mov
fld
add
cmp
cmc
or
out
pop
cmp
mov
fld
add
cmp
cmc
adc
xchg
add
cmp
cmp
cmp
in
sar
push
inc
ins
pop
jmp
cmp
xchg
mov
sub
adc
jns
cwde
std
jno
jmp
mov
pop
cmp
mov
fld
add
cmp
cmc
adc
rol
sbb
sar
cmp
in
sar
push
inc
ins
pop
jmp
cmp
xchg
mov
sub
ror
jns
cwde
std
jno
add
cmp
xchg
mov
sub
scas
or
cwde
std
jno
imul
xor
mov
jl
sqrtps
mov
fld
add
cmp
cmc
adc
jns
outs
xor
xchg
dec
push
push
in
pop
cmp
mov
fld
add
cmp
cmc
or
pop
add
cmp
cmp
cmp
in
sar
push
inc
ins
pop
jmp
cmp
xchg
mov
sub
pop
or
cwde
std
jno
sbb
cmp
xchg
mov
sub
sub
jns
cwde
std
jno
ret
and
in
fcomip
mov
out
into
xchg
call
mov
cmp
or
mov
cmp
and
sbb
popa
repz
sbb
dec
xor
adc
loop
scas
mov
sub
sbb
mov
fld
in
pop
cmp
mov
fld
add
cmp
cmc
or
inc
sbb
sar
cmp
in
sar
push
inc
ins
pop
jmp
cmp
xchg
mov
sub
mov
std
jno
(bad)
xor
(bad)
sub
mov
jns
cwde
std
jno
in
add
sbb
aas
add
cmp
cmp
cmp
in
sar
push
inc
ins
pop
jmp
cmp
xchg
mov
sub
jg
jns
cwde
std
jno
cmp
jns
mov
mov
jl
xor
ja
sbb
rcl
jns
in
shr
cmps
cmp
imul
cmp
xor
cmp
fild
adc
(bad)
jnp
mov
in
xchg
and
cmp
fbstp
adc
jno
adc
jno
adc
jae
jns
pop
push
mov
sahf
lds
jbe
cmp
sahf
cmp
and
cmp
sbb
dec
mov
xor
mov
in
xchg
fdiv
cmp
scas
lds
sbb
cmp
pop
shl
jmp
lahf
mov
in
mov
repnz
mov
mov
mov
xor
push
data16
jb
scas
push
mov
sbb
mov
mov
movs
test
in
dec
(bad)
call
ins
adc
cwde
aaa
cmp
dec
xor
sbb
lock
pop
xchg
mov
into
sahf
mov
in
mov
xor
inc
push
sbb
xchg
and
mov
repz
cld
xchg
out
xchg
push
jns
sahf
popf
test
in
xchg
cld
xor
cmp
xchg
mov
sub
in
xor
movs
jae
push
jnp
sbb
xchg
adc
les
sbb
adc
sahf
lds
mov
les
sbb
cmp
sbb
cld
mov
mov
mov
out
xchg
mov
sub
or
xchg
cwde
std
jne
(bad)
std
dec
sbb
jns
mov
mov
sub
mov
jns
xchg
mov
sub
imul
into
xchg
mov
lock
xor
lock
adc
xchg
mov
sub
add
jns
cwde
std
gs
fdivr
cld
mov
mov
sahf
fld
xor
mov
xchg
outs
and
xchg
in
jns
jecxz
cmp
repz
hlt
mov
les
mov
mov
jno
adc
jno
adc
xchg
mov
sub
sar
sbb
jo
adc
call
test
cli
push
xor
adc
(bad)
xchg
mov
lock
mov
int3
in
adc
les
pop
in
xor
(bad)
sub
mov
jns
cwde
std
imul
in
xchg
pop
call
mov
mov
adc
cmp
fnsave
mov
xor
cmp
mov
inc
or
cmp
mov
ret
daa
cmp
stc
adc
jbe
adc
jns
jae
mov
sbb
xor
sbb
adc
sahf
test
das
(bad)
adc
xchg
ror
(bad)
adc
jae
movs
jae
mov
mov
repz
retf
mov
xchg
sbb
std
std
sbb
jns
sahf
mov
into
in
sub
mov
xchg
cwde
std
jno
(bad)
std
test
cmp
sbb
int3
movs
out
xchg
imul
into
in
xchg
shr
in
adc
(bad)
int3
movs
out
xchg
pop
adc
jae
movs
jae
shr
sbb
sub
in
xor
mov
wrmsr
mov
in
pop
cmp
mov
in
xchg
or
mov
test
enter
mov
repnz
les
popa
dec
(bad)
int3
movs
out
xchg
int
xchg
cwde
std
jne
jecxz
sahf
mov
in
mov
xor
(bad)
cld
lods
out
xchg
sbb
jns
sahf
lea
xor
jns
sbb
int3
xchg
out
xchg
and
jns
xchg
rcl
inc
into
repz
sbb
xchg
bound
mov
dec
outs
cs
daa
loope
mov
pop
shl
dec
shl
sbb
cmp
je
(bad)
or
repz
xor
mov
lds
push
cmp
outs
adc
xchg
jmp
addr16
xor
cmp
(bad)
xchg
jl
mov
xor
jns
outs
xor
sub
sbb
jns
dec
shr
pop
sbb
hlt
je
imul
outs
pop
cmp
xor
xchg
cmp
cmp
fnsave
mov
xor
jns
pop
lds
addr16
pop
xor
outs
xchg
pop
cmp
jns
pop
lds
leave
xchg
(bad)
outs
inc
lock
xor
xchg
pop
jns
dec
outs
mov
adc
mov
fdivp
mov
(bad)
xchg
xchg
(bad)
adc
dec
jno
repz
xchg
push
leave
sbb
lock
iret
or
sub
xchg
jb
(bad)
jbe
sbb
popa
dec
shr
xor
dec
jne
sahf
cmp
jns
mov
in
jns
pop
mov
fimul
mov
jns
sbb
test
cmp
fst
(bad)
outs
inc
lock
fst
outs
(bad)
xor
dec
push
mov
je
xor
pop
mov
fidiv
xor
lods
jl
popa
jae
movs
jae
mov
lds
iret
sbb
cmp
je
imul
xor
(bad)
dec
mov
jnp
(bad)
adc
adc
cmp
cwde
stc
jp
jae
mov
lds
repz
cmp
cmc
add
pop
pop
cmp
in
push
scas
pop
cmp
mov
and
sbb
je
ss
je
mov
es
fsubr
mov
sub
push
leave
xchg
(bad)
adc
jno
adc
jno
adc
cmp
xor
adc
jae
js
sbb
pop
sbb
pop
or
push
sbb
cmp
div
das
pop
sub
dec
mov
jnp
fst
into
jmp
sbb
adc
dec
push
dec
into
cs
jo
ror
sbb
cmp
xor
dec
into
cs
pop
sbb
cmp
xor
dec
into
cs
das
sbb
cmp
xor
dec
into
cs
aas
sbb
cmp
leave
sub
lock
das
pop
sub
dec
sbb
jns
jno
das
pop
sub
dec
adc
jns
jno
das
pop
sub
dec
mov
or
jns
jno
das
pop
sub
dec
inc
mov
adc
xchg
rcl
(bad)
adc
dec
push
dec
into
cs
jo
rcl
xor
dec
into
cs
in
sbb
mov
xor
dec
into
lods
fidiv
shl
xor
dec
into
mov
ret
push
sbb
lock
sbb
lock
xchg
fsubr
data16
fbld
sahf
cmpxchg
int
(bad)
adc
in
xchg
lods
pop
cmp
xchg
cmp
jno
push
test
cs
jo
ror
sbb
adc
in
stc
nop
pop
cmp
xchg
daa
cmps
cmp
jae
push
push
test
cs
ja
sbb
lock
sub
lock
xchg
cmps
cmp
repz
pop
xor
call
popf
jns
pop
out
dec
sbb
call
jns
jno
xchg
lods
cmp
repz
xor
call
popf
jns
pop
out
dec
sub
fistp
jns
jno
xchg
cmps
cmp
repz
pop
xor
call
popf
jns
pop
out
dec
sbb
jns
jno
xchg
cmps
cmp
repz
push
test
cmp
out
popf
jns
pop
out
dec
adc
jns
xchg
sar
(bad)
adc
in
std
nop
pop
cmp
xchg
pop
cmps
cmp
jae
push
push
test
cs
aaa
pop
sbb
es
fsubr
cwde
aad
addr16
xchg
div
cs
jae
mov
cmp
stos
test
in
mov
xor
cld
int
(bad)
cli
cmc
or
clc
ficomp
jns
jno
sub
jae
jns
xchg
jl
popa
dec
rcr
adc
cmp
leave
xor
lock
xchg
cmps
cmp
jno
das
mov
out
imul
ror
pop
sbb
xor
jnp
pop
cli
loop
xor
jnp
sbb
push
pop
sbb
fidiv
js
pop
sbb
dec
add
sbb
or
pop
leave
cli
fnstcw
adc
sbb
cmp
jae
mov
(bad)
sbb
xor
push
jns
cs
jns
cs
jo
push
jmp
je
adc
cwde
rcr
and
dec
push
movs
out
pop
cmp
jmp
jnp
pop
sbb
ret
adc
cmp
push
mov
push
jnp
sbb
pop
push
push
js
sbb
pop
sbb
xor
cmp
xor
adc
jno
xchg
int3
cmp
fnstsw
jns
sbb
add
or
scas
pop
cmp
pop
sbb
dec
add
sbb
dec
jne
js
pop
or
xor
cmp
push
jno
adc
sbb
sub
loop
xor
mov
fst
jns
mov
push
jns
cs
jns
cs
jo
push
imul
inc
adc
jae
jns
dec
push
popa
jmp
jns
sbb
imul
ficom
sbb
dec
add
sbb
dec
jne
js
pop
or
xor
cmp
xchg
sbb
jns
xor
xor
imul
pop
shl
xor
xchg
call
pop
cmps
cmp
call
xor
or
scas
pop
cmp
xor
or
xchg
pop
cmp
and
js
sbb
xor
cmp
sbb
jns
dec
push
imul
pop
cmp
jmp
jnp
pop
sbb
jecxz
sbb
fisub
sbb
dec
add
sbb
dec
push
mov
push
sbb
xor
adc
sbb
cmp
jae
mov
fnstcw
jns
mov
push
add
pop
cmp
xor
js
sbb
sbb
cmp
outs
jecxz
xor
adc
cmp
cs
jo
shr
sbb
adc
in
dec
scas
pop
cmp
xor
or
xchg
pop
cmp
sbb
sub
xor
cmp
dec
jae
jns
dec
push
movs
out
pop
cmp
mov
jnp
pop
sbb
jnp
sbb
fidiv
jecxz
cmp
sbb
into
cs
fnstenv
push
push
xor
cmp
or
sbb
xor
cmp
xor
mov
cmp
jae
mov
(bad)
sbb
mov
ror
(bad)
adc
in
dec
scas
pop
cmp
xor
or
xchg
pop
cmp
and
adc
sbb
jns
jae
jns
jae
jns
dec
push
adc
pop
cmp
jmp
jnp
pop
sbb
sti
adc
cmp
mov
in
leave
pop
xor
push
jns
cs
jns
cs
jo
push
imul
(bad)
jns
sbb
xor
cmp
xor
cmp
pop
dec
jecxz
xor
mov
fstp
jns
mov
push
jns
cs
jns
cs
jo
push
imul
cmp
repnz
jns
sbb
jns
jae
mov
jmp
pop
xor
call
in
dec
scas
pop
cmp
xor
or
xchg
pop
cmp
and
jns
sbb
xor
cmp
push
jae
jns
dec
push
push
pop
cmp
jmp
jnp
pop
sbb
mov
sbb
fcmovb
xchg
mov
fcom
into
cs
jns
cs
jo
push
imul
cmp
xchg
sbb
jns
sbb
jns
jae
mov
jmp
pop
xor
call
in
dec
scas
pop
cmp
xor
or
xchg
pop
cmp
sub
js
sbb
xor
cmp
and
dec
push
movs
out
pop
cmp
xor
jnp
pop
sbb
jns
repz
xor
call
in
dec
scas
pop
cmp
xor
or
xchg
pop
cmp
sub
jns
sbb
xor
cmp
and
dec
push
jmp
xor
jnp
pop
sbb
jns
repz
xor
call
xor
lock
xchg
cmps
cmp
jno
xchg
cdq
cmp
jno
adc
jae
jns
sbb
pop
sbb
stc
popa
jae
cmps
jae
push
js
pop
cmp
xor
cmp
ret
sbb
mov
push
jns
cs
jns
cs
fnstenv
push
popa
pop
jg
mov
sbb
adc
dec
push
movs
out
pop
cmp
xor
jnp
pop
sbb
jns
repz
pop
xor
call
in
dec
scas
pop
cmp
xor
or
xchg
pop
cmp
es
jns
sbb
xor
cmp
das
jae
jns
dec
push
call
jnp
pop
sbb
pop
adc
cmp
test
jb
xchg
mov
into
sahf
mov
repz
or
data16
clc
fsubr
cwde
aad
addr16
xchg
fisubr
xor
mov
cmp
sbb
pop
mul
cmp
dec
shr
(bad)
cli
cmc
or
lock
xor
lock
xchg
cmps
cmp
repz
sbb
fadd
jns
hlt
call
jns
cs
jns
nop
jl
sbb
sub
jmp
adc
jno
adc
sbb
cmp
jae
mov
xor
cmp
xchg
pop
cdq
cmp
jno
xchg
cmps
cmp
jno
sub
mov
leave
xor
repz
sub
push
ins
pop
sbb
stc
popa
jae
mov
jmp
pop
xor
call
pop
add
jno
xchg
cmps
cmp
jno
xchg
cdq
cmp
jae
js
sbb
mov
dec
push
ins
pop
adc
stc
popa
jae
cmps
jae
push
mov
xor
push
pop
xor
call
jno
adc
jno
adc
cmp
xor
adc
jae
jnp
sbb
pop
sbb
pop
psrlw
adc
cmp
div
das
pop
sub
dec
xor
sti
es
jno
xchg
cmps
cmp
jno
xchg
cdq
cmp
jno
adc
sub
jns
dec
push
movs
out
pop
cmp
mov
jnp
pop
sbb
scas
sbb
fcmovu
xchg
mov
fcom
jmp
cmp
xor
js
sbb
dec
fld
es
jae
mov
pop
pop
cmp
in
xchg
lods
pop
cmp
mov
test
or
jno
adc
jae
js
sbb
dec
fld
es
lock
adc
cmp
cs
jo
sar
sbb
adc
in
dec
scas
pop
cmp
xor
or
xchg
pop
cmp
sbb
sub
pop
popa
push
jp
fwait
imul
pop
sahf
jecxz
xor
xchg
or
jns
fwait
cwde
cmp
call
xor
or
scas
pop
cmp
xor
or
xchg
pop
cmp
sbb
daa
push
ins
pop
mov
jns
jae
jns
dec
push
movs
out
pop
cmp
mov
jnp
pop
sbb
sub
cmp
sbb
je
xchg
jno
xchg
cmps
cmp
jno
xchg
cdq
cmp
jno
adc
jne
ins
xor
cmp
xor
cmp
pop
dec
jecxz
xor
mov
fldenv
dec
fdiv
mov
add
mov
pop
sbb
dec
add
sbb
dec
jne
js
pop
or
pop
pushf
cmp
jae
jns
sbb
xor
imul
pop
shl
xor
xchg
dec
add
mov
xchg
cmps
cmp
jno
xchg
cdq
cmp
jno
adc
sbb
jns
mov
pop
adc
sbb
sub
jecxz
xor
mov
fstp
jns
mov
push
jns
cs
jns
cs
jo
push
imul
cmp
xchg
sbb
jns
sbb
jns
jae
mov
jmp
xor
call
in
dec
scas
pop
cmp
xor
or
xchg
pop
cmp
and
js
sbb
xor
cmp
das
jae
jns
dec
push
pop
call
sar
sbb
stos
sub
cmp
dec
mov
(bad)
dec
add
sbb
dec
jne
js
pop
or
xor
cmp
into
sbb
jns
add
imul
pop
shl
xor
xchg
test
cmp
mov
cmp
xor
xchg
cdq
cmp
jno
adc
ss
ins
pop
sbb
stc
popa
jae
(bad)
push
js
pop
cmp
xor
cmp
jnp
jns
mov
mov
jns
sbb
dec
add
sbb
dec
push
mov
push
push
pop
pop
push
ins
pop
sbb
stc
popa
jae
cmps
jae
push
js
pop
cmp
xor
cmp
aas
and
xor
push
jns
cs
jns
cs
fnstenv
push
popa
pop
jg
es
sqrtps
fwait
imul
pop
sbb
cmp
jae
jnp
sbb
xchg
sub
test
pop
sbb
dec
add
sbb
dec
jne
js
pop
or
loop
sbb
adc
cmp
add
imul
pop
loope
cmp
jno
xchg
test
cmp
sbb
into
in
sbb
ror
xchg
inc
addr16
dec
mov
mov
sub
fwait
inc
aaa
pop
clc
imul
xor
jno
adc
sbb
pop
sbb
xor
mov
imul
sbb
lock
lods
jns
sbb
addr16
xor
mov
mov
fsubr
nop
add
jns
jle
jns
pop
int
xor
cmp
je
imul
je
imul
xor
cmp
fnstcw
xchg
cwde
std
popa
or
or
xchg
sub
pop
cmp
gs
into
outs
xor
leave
xlat
in
cli
cmc
add
or
xor
in
imul
cmp
fwait
shr
xchg
in
cli
cmc
add
mov
xchg
jl
mov
sar
sub
(bad)
mov
jns
dec
xchg
daa
clc
div
fwait
leave
jae
mov
xor
mov
sbb
mov
xor
mov
icebp
ins
in
add
sbb
cmps
mov
xor
(bad)
sub
aas
and
fwait
inc
xchg
outs
sub
jmp
sahf
cmp
cmp
cmp
data16
jp
or
sbb
xchg
dec
ror
fist
jns
fwait
inc
xchg
stos
jnp
mov
in
xchg
call
data16
jl
or
sbb
mov
mov
sbb
stc
dec
in
or
jae
enter
cld
xor
mov
sbb
push
xor
(bad)
sub
(bad)
cs
xchg
leave
mov
xchg
mov
lock
sub
mov
jnp
mov
in
xchg
inc
or
jns
data16
jo
or
sbb
mov
mov
sbb
stc
dec
in
or
jae
enter
cld
xor
mov
sbb
push
xor
(bad)
sub
aaa
cs
xchg
leave
push
rcl
or
jae
retf
jae
mov
xor
mov
sbb
push
xor
(bad)
sub
jecxz
jns
fwait
inc
xchg
outs
sub
fs
cmp
ror
push
jns
pop
loopne
xor
mov
xor
mov
sbb
mov
or
jnp
pop
movs
mov
xor
out
sbb
sbb
in
adc
cmp
jns
jmp
jns
cwde
std
push
mov
sahf
rol
aaa
mov
mov
nop
dec
jno
mov
rcl
(bad)
lock
dec
rol
sub
cmp
ins
sbb
cmp
cmp
stc
or
fst
jns
inc
and
cmp
clc
(bad)
xor
dec
outs
pop
leave
dec
rcl
jns
std
mov
aad
mov
pop
cmp
mov
into
xchg
dec
shr
sbb
xchg
add
jns
adc
jns
or
mov
in
(bad)
xchg
outs
sub
popf
test
aam
into
in
xchg
fmul
cmp
cmps
retf
in
or
jae
retf
jae
mov
fsubr
mov
sbb
mov
into
in
or
jae
retf
jae
mov
fsubr
mov
sbb
xchg
test
jns
sahf
aam
into
in
xchg
movs
push
cmp
cmps
retf
in
or
jae
retf
mov
fsubr
mov
sbb
jns
cmps
retf
in
or
jae
retf
mov
fsubr
mov
sbb
xchg
outs
sub
jle
jnp
mov
in
xchg
jo
cmp
cmps
retf
in
or
jae
retf
mov
fsubr
mov
sbb
mov
into
in
or
jae
retf
mov
fsubr
mov
sbb
xchg
outs
sub
fwait
test
jns
sahf
aam
into
in
xchg
fmul
cmp
cmps
retf
in
or
jae
retf
mov
fsubr
mov
sbb
cld
shr
mov
jecxz
xchg
test
jns
sahf
aam
into
in
xchg
pushf
(bad)
jns
cmps
retf
in
or
jae
int
sbb
popa
rep
ins
xor
mov
xchg
outs
sub
adc
aam
into
in
xchg
dec
(bad)
jns
imul
(bad)
in
sub
sbb
leave
mov
xchg
mov
lock
fnstenv
push
test
mov
repz
xchg
fwait
test
inc
push
mov
xchg
adc
dec
xor
cmp
shr
lock
cmp
jno
adc
jnp
fscale
sti
xchg
cwde
std
jno
sahf
aad
into
in
mov
xor
sar
sbb
stc
mov
lds
std
sbb
jns
cmps
lds
mov
cmp
fwait
test
ds
adc
sbb
cld
into
out
xchg
xchg
mov
sub
loopne
xor
(bad)
sub
xchg
and
cwde
std
jne
mov
fcomip
mov
into
xchg
xchg
(bad)
cli
mov
rol
and
jns
mov
push
mov
cs
lock
mov
jbe
test
mov
cmp
cwde
add
lods
pop
cmp
sub
jmp
sbb
jnp
mov
in
xchg
cmp
cmp
cmc
dec
jne
sbb
nop
pop
cmp
cs
mov
in
xchg
ror
mov
and
xor
mov
int
mov
sbb
cld
in
mov
jecxz
xchg
sub
int
mov
sbb
call
out
xchg
dec
shl
cmc
(bad)
cld
int
mov
sbb
mov
cmp
or
ret
jnp
mov
in
xchg
inc
or
jns
fild
adc
xchg
mov
sub
mov
cmp
(bad)
jns
sahf
lds
mov
fbstp
adc
sbb
hlt
mov
lds
popa
repz
outs
xor
pusha
lock
rol
sbb
lahf
mov
in
mov
into
in
jbe
sub
jns
in
or
mov
loope
xor
(bad)
sub
jecxz
jns
cwde
std
imul
mov
sub
aaa
sub
xchg
mov
sub
aaa
sub
mov
pop
nop
mov
stc
lea
lds
and
(bad)
mov
into
in
xchg
ds
mov
mov
into
xchg
sbb
mov
mov
sbb
int3
leave
jecxz
xchg
imul
mov
in
xchg
dec
or
sub
mov
rol
sbb
lock
into
xchg
xchg
test
fldcw
test
dec
sbb
cs
pop
shl
mov
rol
sbb
lahf
mov
in
mov
into
in
xchg
push
push
int
mov
sbb
xchg
test
dec
sbb
fst
jns
xchg
mov
sub
(bad)
int3
vshufps
jno
adc
repz
xor
imul
into
in
sub
scas
aad
into
in
frndint
in
cli
cmc
pop
mov
cmp
ss
ss
xchg
scas
aad
into
in
sub
sbb
clc
idiv
jns
jae
push
sub
rcl
sbb
and
mov
xchg
inc
addr16
fnstcw
rcl
jns
stos
sub
dec
outs
mov
cmp
jg
sbb
adc
sbb
xor
xchg
and
cmp
sahf
popf
xchg
into
in
mov
je
cmp
sbb
xchg
ret
adc
cmp
(bad)
jl
xchg
movs
sbb
jns
call
push
sub
cmp
in
jns
jae
fdiv
shl
sbb
xchg
add
cmp
repz
mov
add
mov
pop
pop
cmp
xchg
mov
sub
outs
xor
pop
sbb
nop
pop
cmp
mov
xlat
xchg
dec
shl
(bad)
cli
cmc
or
into
sbb
jbe
add
cmp
test
jno
ds
int
sbb
jl
scas
jnp
mov
bound
sbb
out
sbb
ret
loop
pop
imul
ret
jle
loop
push
sti
xchg
jmp
mov
movs
mov
mov
js
sub
cmp
cmps
mov
jns
sub
loope
mov
mov
cwde
call
mov
mov
mov
js
sahf
mov
fstp
jns
sahf
xchg
xchg
into
in
xchg
adc
cmp
fxch
mov
mov
aam
into
sub
cld
lahf
test
add
(bad)
sub
cwde
cmp
jae
mov
xchg
test
ins
xor
push
jns
sahf
call
stos
xlat
xchg
dec
shl
and
cmp
mov
aad
into
dec
shr
in
clc
ret
jns
xchg
mov
sub
lahf
inc
pop
sbb
popa
repz
imul
ret
mov
pop
sbb
push
sbb
adc
cwde
cmp
jae
mov
scas
pop
cmp
mov
fdiv
mov
sbb
mov
push
int
pop
cmp
mov
fucom
cmp
jae
fnstenv
rcl
and
cmp
mov
xlat
xchg
xchg
or
out
cmp
sub
cmp
jge
adc
mov
mov
mov
or
jns
ret
or
shl
mov
sbb
mov
push
fucomi
pop
cmp
mov
fucom
cmp
jae
out
sbb
jae
sbb
cli
cmc
pop
mov
(bad)
test
mov
sbb
mov
cli
adc
jno
adc
jae
jns
pop
push
jns
pop
cmp
mov
jno
adc
dec
rcr
sbb
mov
xor
mov
mov
cld
test
mov
sbb
mov
(bad)
cmp
loop
jns
outs
sub
fsubp
(bad)
cs
outs
lea
pop
sbb
pop
jmp
cmp
in
int
cmps
ss
fdivr
adc
jns
pop
sub
into
in
xchg
pop
or
jns
xchg
mov
into
pop
mov
sbb
or
dec
imul
into
dec
(bad)
or
repz
jbe
sbb
mov
sbb
rcr
xchg
adc
sbb
shl
cmp
clc
mov
test
mov
in
mov
rcl
jns
push
fsub
rcl
cli
fadd
pop
cmc
hlt
xor
inc
cmp
xchg
jl
pop
sbb
xor
xchg
adc
mov
xor
lock
push
xor
push
jns
mov
jns
xchg
jl
neg
jns
sbb
adc
repz
cmp
mov
into
call
mov
xor
(bad)
cmp
sbb
jns
fdivr
sbb
jns
pop
icebp
jns
sbb
lock
xchg
jl
popa
repz
jbe
sbb
into
cs
jns
sbb
pop
sbb
pop
sbb
xor
cmp
rol
jnp
pop
cli
loop
xor
xchg
aam
cmp
sbb
in
pop
sbb
adc
sbb
fld
aaa
jns
jno
xchg
sub
cmp
jns
sbb
jns
imul
jns
out
xor
mov
xor
cmp
sahf
xchg
xchg
into
in
mov
fld
cmp
into
mov
cld
popf
cmc
mov
ret
adc
mov
mov
in
sub
lea
xor
mov
test
adc
sbb
stc
fst
std
popa
cmp
dec
jle
ds
int
sbb
mov
xor
cmp
repz
into
in
mov
inc
cmp
sahf
xchg
xchg
into
in
adc
jno
adc
imul
sbb
fpatan
xor
xor
sbb
mov
xchg
dec
push
jns
sbb
inc
pop
cmp
xor
xchg
clc
push
cmp
repz
xor
push
jns
out
cmp
jno
xchg
cmps
cmp
repz
sbb
popa
mov
(bad)
aaa
jns
xchg
loope
jmp
jmp
mov
sbb
pop
sbb
aas
sbb
jo
outs
in
outs
inc
lock
aam
aad
xor
cmp
addr16
xchg
ins
je
jns
cld
mov
int
(bad)
bnd
mov
in
xor
cmp
aas
cwde
sar
push
js
sbb
in
sbb
inc
and
cmp
lahf
pop
jnp
sbb
xor
cmp
xor
ss
dec
adc
jns
and
jns
adc
stc
xor
cmp
mov
push
int
sbb
jbe
iret
cmp
jae
mov
pop
scas
jnp
fld
xchg
int3
in
lock
sbb
lock
mov
(bad)
mov
cwde
std
imul
out
xchg
mov
aam
cmp
(bad)
std
mov
cmp
sahf
std
test
in
xchg
cdq
cmp
repz
sbb
mov
in
out
xchg
sahf
in
test
in
xchg
xor
in
push
movs
ffreep
xchg
and
or
nop
mov
push
mov
les
mov
in
in
stc
out
xchg
retf
dec
dec
pop
sbb
xchg
sahf
loope
into
in
repnz
les
int3
in
sub
push
jns
cs
jo
rol
cmp
cmp
leave
xor
lock
cmp
lahf
stos
jle
sbb
ficomp
jnp
mov
fdivr
jns
fwait
add
test
jns
pop
(bad)
dec
pop
scas
jnp
fsqrt
rol
inc
scas
jnp
xor
and
sbb
xchg
lea
xor
popa
lahf
into
in
nop
jns
cmp
jecxz
cmp
adc
cld
add
sbb
scas
cmp
sbb
jns
sbb
jno
adc
or
repz
sbb
cld
(bad)
mov
sbb
bnd
mov
vshufpd
sbb
jl
mov
add
jnp
inc
daa
add
js
inc
das
add
js
inc
aaa
add
jnp
inc
aas
add
jnp
inc
pop
add
jnp
inc
lar
js
inc
pop
add
js
ds
xchg
jg
sbb
into
outs
sub
mov
in
jl
mov
add
jnp
inc
adc
jl
cmp
push
push
leave
and
cmp
cmp
in
jns
outs
sub
mov
loope
xor
mov
xchg
cwde
pushf
movs
int3
in
jns
sahf
loope
into
in
xchg
pop
pop
cmp
sahf
fld
sbb
lock
sub
lock
jns
sbb
popa
in
xchg
lods
pop
cmp
mov
les
adc
adc
jae
mov
fldenv
xor
in
xchg
lods
pop
cmp
fadd
cmp
xor
(bad)
icebp
mov
les
int3
in
jns
es
int
sbb
jbe
cmp
jns
sbb
popa
in
std
nop
pop
cmp
mov
in
mov
pop
mov
xor
cmp
outs
cli
jnp
mov
in
xchg
int
mov
in
jns
cmp
pop
sbb
jmp
repz
jae
sbb
dec
mov
jnp
fld
jns
repnz
jl
sbb
mov
xchg
mov
lock
(bad)
sub
imul
mov
in
xchg
pop
pop
cmp
fild
adc
sbb
jns
sahf
les
add
lods
cmp
repz
in
xchg
outs
sbb
xor
adc
ret
jnp
pop
sbb
inc
cmp
cmp
xor
shl
sbb
popf
xor
out
xchg
cwde
icebp
xchg
add
cli
leave
or
pop
sbb
pop
cld
out
cmp
jno
xchg
cmp
cmp
cs
iret
cmp
cmp
neg
cmp
int
mov
in
inc
add
inc
or
adc
jno
adc
int3
jnp
pop
sbb
mov
sbb
xchg
lods
cmp
repz
jo
sbb
or
out
xchg
sbb
xchg
in
jo
xor
mov
int3
in
xchg
mov
sub
loope
xor
(bad)
sub
xor
cwde
std
imul
mov
sub
cs
lahf
cmp
cmp
mov
mov
pop
fsubr
cmp
jno
xchg
pusha
adc
jns
cs
xchg
sbb
nop
(bad)
sbb
jns
sahf
les
mov
les
jmp
jmp
cmp
cmp
cmc
or
xor
cmp
mov
mov
fstp
test
cmp
pop
sbb
out
cmp
xor
(bad)
jno
sbb
dec
sbb
xchg
jns
repnz
jp
sbb
jns
sahf
les
mov
les
out
cmp
mov
les
cmp
cmp
cmc
or
xor
cmp
mov
mov
fld
xor
fwait
test
cmp
pop
sbb
out
cmp
xor
mov
dec
sbb
jns
repnz
xor
mov
int3
in
xchg
daa
cmp
loop
xor
jno
adc
sbb
sub
sbb
xchg
cmps
cmp
repz
jle
sbb
xor
loopne
xchg
sbb
inc
lods
mov
repz
les
dec
pop
add
jns
sbb
out
cmp
xor
sub
sbb
dec
sbb
jns
repnz
mov
xchg
xchg
mov
inc
xor
clc
mul
pop
jns
xchg
mov
sub
imul
mov
in
xchg
hlt
adc
jns
fild
adc
sbb
jns
sahf
les
add
cmps
cmp
repz
jle
sbb
xchg
outs
sbb
xor
adc
int3
jnp
pop
sbb
jecxz
sbb
xchg
cmps
cmp
repz
xor
sar
xor
cmp
into
sbb
inc
lods
mov
repz
les
dec
pop
add
jns
sbb
out
cmp
xor
bound
sbb
dec
adc
jns
repnz
sbb
xchg
xchg
mov
iret
in
cli
stc
in
stc
or
adc
in
retf
in
xchg
(bad)
mov
dec
inc
xor
mov
int3
in
xchg
mov
sub
loope
xor
(bad)
sub
out
jns
cwde
std
imul
inc
xchg
nop
mov
lock
adc
jno
adc
jno
adc
sbb
cmp
cmps
cmp
repz
cld
shl
xchg
push
jns
sbb
int3
shl
xchg
mov
xor
cmp
pop
mov
add
(bad)
cmp
loop
mov
fucom
mov
pop
cmp
into
repz
jl
sbb
mov
in
adc
jae
cdq
jae
(bad)
int3
shl
xchg
mov
jns
xchg
mov
int3
in
cli
stc
in
stc
or
jno
hlt
movs
test
hlt
lods
jmp
shl
xchg
fwait
cmp
xor
hlt
mov
les
pop
jmp
cmp
in
mov
in
xchg
push
push
cmp
scas
leave
xchg
in
xchg
sbb
xchg
cdq
cmp
repz
jg
sbb
pop
sbb
pop
sbb
pop
sbb
jns
jae
jmp
xor
jmp
xchg
xchg
ror
(bad)
adc
jno
adc
in
mov
in
xchg
pushf
pop
cmp
push
test
mov
pop
mov
cmp
aad
into
in
sub
fwait
cmp
in
mov
in
xchg
fcomp
cmp
sbb
popa
jno
adc
int
jns
scas
leave
xchg
in
stos
xor
sub
lock
mov
push
sbb
jns
push
push
int
sbb
jns
sbb
pop
pop
push
adc
dec
ret
jnp
pop
dec
lea
xor
jns
fwait
rcr
mov
add
into
cs
jo
shl
leave
sub
lock
sub
and
dec
jne
outs
xor
outs
inc
bound
mov
dec
outs
cs
jbe
sub
fdiv
js
sbb
cld
loopne
cmp
sub
sahf
(bad)
jns
sbb
dec
mov
jnp
inc
adc
dec
fld
cmp
xor
inc
add
movs
cmp
outs
xor
xor
mov
dec
mov
jnp
inc
adc
dec
sbb
outs
cmp
push
scas
pop
cmp
in
movs
pop
cmp
or
and
jb
cs
jo
shl
xor
in
fdivp
je
mov
or
adc
jo
dec
jb
cs
jo
ror
sbb
inc
add
cmps
cmp
outs
sub
cmp
sbb
cs
jo
shr
sbb
inc
add
cmps
cmp
outs
sbb
or
lea
xor
dec
pusha
into
cs
xor
cmp
xor
into
sahf
mov
sub
inc
add
movs
cmp
outs
aas
repnz
lods
cmp
and
nop
pop
cmp
nop
and
scas
pop
cmp
leave
xor
lock
or
scas
pop
cmp
nop
and
scas
pop
cmp
pop
lods
cmp
outs
aas
repnz
test
push
scas
pop
cmp
nop
and
nop
pop
cmp
cmp
repnz
mov
std
nop
pop
cmp
nop
and
scas
pop
cmp
outs
sub
and
dec
jne
dec
ror
xor
xchg
rcl
(bad)
outs
inc
lock
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
pushf
pusha
dec
rol
xor
cmp
neg
push
pop
mov
dec
cmp
xor
lds
outs
adc
neg
jbe
push
pop
inc
loope
gs
xchg
fisttp
mov
sbb
lock
movs
ds
outs
cmp
leave
cmp
pop
sbb
mov
xor
popa
repz
into
in
mov
inc
mov
jns
sbb
jns
sahf
cmp
jns
push
cmp
jns
nop
ins
pop
cmp
stc
ror
mov
ret
into
nop
jge
cmp
retf
pushf
out
bnd
cmp
jns
in
cmp
pop
cmp
mov
in
cmp
mov
in
xor
pop
cmp
mov
in
xor
mov
in
sub
pop
cmp
mov
in
sub
mov
in
and
pop
cmp
mov
in
and
mov
in
sbb
pop
cmp
mov
in
sbb
mov
in
adc
pop
cmp
mov
in
adc
mov
in
or
pop
cmp
mov
in
or
mov
in
add
pop
cmp
mov
in
add
mov
in
stc
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
ret
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
xor
sbb
lds
jmp
.byte
