in
test
or
pop
sbb
stos
repnz
add
test
pop
inc
ror
add
adc
in
add
cmp
or
xchg
fwait
test
xor
mov
loop
in
rcl
inc
sar
push
inc
pop
adc
xchg
ret
rcr
mov
inc
les
inc
push
fisub
out
out
sbb
cmp
cmp
loope
mov
mov
mov
fadd
mov
and
test
aad
ret
stos
push
dec
(bad)
retf
sbb
sub
jbe
mov
ss
int
pop
mov
push
sub
or
cwde
in
and
sahf
xor
(bad)
jecxz
pushf
sbb
mov
lock
lock
jne
mov
ret
rcl
push
adc
ret
cmps
mov
dec
retf
stos
inc
in
stos
gs
loop
movs
jmp
retf
fucomp
add
dec
popf
retf
fistp
ins
sbb
hlt
mov
retf
imul
test
cmps
fistp
test
dec
push
xchg
mov
pusha
pop
into
mov
fucomi
repnz
push
jae
retf
hlt
and
cmp
push
and
mov
mov
xor
push
cmc
or
les
xchg
xchg
pop
xchg
int3
push
mov
xchg
lock
sar
inc
jmp
xchg
adc
inc
test
into
es
aam
push
adc
cmp
jmp
retf
cdq
fld
shl
call
aam
jb
adc
pop
retf
aam
mov
fist
test
sbb
dec
adc
repnz
jnp
stc
test
fwait
into
jmp
mov
pop
ret
dec
sbb
mov
sbb
cli
stos
cmps
int
fs
scas
dec
scas
pop
rcr
mov
add
cmp
mov
xchg
add
mov
movs
or
(bad)
sbb
mov
pop
pushf
xor
cmp
xlat
push
jno
cmc
mov
(bad)
fadd
repz
nop
xchg
fild
mov
push
sar
sub
mov
(bad)
jge
pop
inc
xchg
int
dec
sar
pop
(bad)
mov
adc
xchg
and
mov
mov
cmovae
call
push
fidiv
xor
push
and
jle
inc
loop
mov
dec
outs
dec
fidiv
enter
push
adc
mov
sbb
add
cmp
pop
(bad)
(bad)
ficomp
pop
es
cmp
cwde
sbb
inc
sbb
dec
cmps
or
mov
cwde
or
outs
sub
cmp
cli
sub
aaa
imul
cmp
jmp
ja
in
retf
sbb
daa
sub
daa
mov
mov
pop
xor
add
pop
mov
fld
pop
gs
xchg
pop
(bad)
loop
adc
jp
js
loopne
repnz
pop
adc
into
test
xor
addr16
fwait
cmp
mov
aam
sub
push
jns
fcom
pop
(bad)
(bad)
xchg
pop
(bad)
jbe
sti
mov
xchg
sbb
pusha
mov
sbb
push
addr16
or
sar
xor
mov
pop
sahf
dec
sub
cmp
int3
inc
pop
lods
dec
or
loopne
iret
xlat
jmp
test
or
loopne
daa
mov
lock
ss
sbb
popa
mov
test
cmp
push
test
retf
jmp
sahf
cmp
repnz
dec
pop
les
jbe
cmp
daa
je
cmp
retf
ret
rcr
retf
or
dec
cmps
ds
fist
cmp
cmps
fstp
push
(bad)
int3
xor
inc
push
mov
mov
push
test
ss
das
loopne
push
scas
xlat
in
pop
inc
loop
scas
out
mov
rol
sub
fcomp
out
push
cmps
shr
push
fidivr
fistp
or
jae
stos
mov
stc
out
mov
fisub
popf
cmp
je
sbb
ret
dec
push
dec
mov
pop
pop
test
jbe
mov
popf
inc
inc
mov
cwde
fcmovnb
add
sbb
ds
aas
not
xor
mov
outs
ret
popa
mov
cmp
mov
mov
into
dec
cmp
adc
sub
ficomp
jno
les
mov
jb
call
ret
fldl2e
je
sahf
das
xchg
stc
cli
in
test
or
pop
sbb
stos
repnz
add
test
pop
inc
ror
add
adc
mov
jmp
ret
ficom
jle
scas
(bad)
(bad)
fcomp
and
xchg
mov
add
shl
push
inc
pop
sti
push
dec
(bad)
mov
sbb
jge
inc
push
fisub
add
fidivr
push
pop
cld
inc
and
pop
jb
fwait
in
mov
fucomi
push
adc
adc
inc
inc
mov
shr
cmp
(bad)
inc
js
or
retf
adc
inc
call
popf
div
fst
rcl
adc
jnp
mov
add
push
bnd
pop
int
inc
pop
adc
ins
cwde
ret
dec
test
jns
or
lds
mov
mov
sbb
sbb
fidiv
push
dec
shl
jno
dec
push
jg
mov
outs
stc
fs
or
xchg
aad
pop
inc
shl
jne
gs
mov
fnstsw
jecxz
mov
loopne
jne
jo
and
stc
xchg
les
lahf
test
cdq
lds
repz
cwde
xor
(bad)
push
mov
fwait
jmp
mov
out
shr
mov
jge
imul
leave
sub
cmp
jg
sti
xor
pop
dec
jb
out
adc
add
inc
mov
pop
xchg
inc
mov
cmp
cs
sar
cmp
call
xchg
rcr
aas
push
repz
or
and
jns
popf
dec
pushf
cmp
adc
ss
sbb
rcr
mov
ins
fs
vfnmadd213ps
mov
int3
and
xchg
enter
jae
fist
repz
jo
fnstenv
lds
jl
dec
sub
add
inc
sub
mov
xchg
jl
ror
test
fistp
mov
push
mov
jp
xor
ffree
div
std
cld
mov
fs
rcr
adc
pop
arpl
dec
add
add
pop
push
cmps
stc
xor
fidivr
adc
mov
mov
test
fs
sti
mov
jno
xchg
dec
inc
xor
inc
xor
mov
fisubr
aam
jb
xchg
mov
imul
ret
inc
mov
pop
cmp
movs
push
jmp
loopne
aam
neg
inc
add
ret
jmp
div
pop
adc
cmp
pusha
dec
add
or
inc
pop
repnz
dec
cmp
push
(bad)
mul
inc
inc
xchg
out
les
sub
lods
pop
inc
mov
shl
mov
leave
mov
gs
cmp
(bad)
ins
mov
lock
in
add
ficomp
outs
div
jno
(bad)
mov
movs
push
aad
xor
push
dec
les
jmp
test
push
fbstp
stos
or
rol
repz
mov
mov
dec
addr16
int
dec
mov
ss
xchg
imul
stos
repnz
xchg
sbb
addr16
xchg
push
into
jns
pusha
jb
sti
cmc
mov
sub
daa
xchg
dec
xor
es
cmp
mov
mov
sbb
fdiv
call
les
xor
jg
mov
add
jmp
xor
sahf
add
retf
inc
xchg
jo
push
adc
mov
and
loop
sbb
or
adc
xor
sbb
sub
cwde
mov
jae
sub
cmps
popf
retf
add
adc
test
jo
in
jmp
pop
sub
jp
call
(bad)
pop
mov
retf
int
call
in
ret
push
xchg
out
fcmovnb
popa
jae
sar
add
or
sbb
les
mov
or
les
xchg
xchg
push
mov
or
dec
mov
or
mov
mov
sahf
(bad)
pop
jne
xchg
push
adc
or
fsub
loopne
in
sub
cmp
loop
cmc
enter
popf
push
adc
dec
mov
mov
sahf
or
test
outs
pop
(bad)
aam
mov
in
lea
pop
rcr
cmp
lahf
rcl
or
js
sub
jecxz
test
jno
sub
mov
imul
push
mov
std
push
xchg
les
xchg
jmp
iret
push
(bad)
cmp
lods
fcom
movs
test
nop
std
dec
xchg
adc
sub
xchg
push
mov
xlat
xchg
jle
cdq
lds
jnp
mov
movs
cwde
jge
jmp
pop
mov
cld
or
sub
xchg
inc
mov
dec
adc
pop
adc
pop
stos
aam
mov
(bad)
(bad)
jnp
inc
push
mov
or
mov
enter
inc
popa
call
faddp
loop
push
fisub
gs
adc
in
adc
push
push
fwait
dec
dec
(bad)
ds
push
inc
mov
sbb
test
jns
push
in
outs
adc
repz
loop
scas
icebp
cmp
inc
ret
scas
add
and
push
ror
jmp
neg
in
(bad)
movs
ret
sbb
cmps
xchg
call
dec
sbb
push
xor
mov
(bad)
xor
(bad)
push
call
repz
pop
or
adc
mov
or
dec
mov
pop
xchg
retf
pop
(bad)
pop
jae
push
cmp
pop
jnp
enter
sub
pop
xchg
pop
jno
and
adc
xor
idiv
add
arpl
push
inc
inc
lea
xchg
loopne
test
push
jmp
mov
stos
sub
cmps
fcomp
jg
cmps
jnp
enter
or
fwait
mov
push
or
movs
hlt
xor
cmc
sub
mov
leave
das
loopne
pause
sub
ret
pop
stos
jns
test
rcpps
mov
addr16
aas
dec
adc
js
popf
rcr
add
adc
retf
lds
mov
ret
sbb
adc
sub
mov
lds
jge
push
in
(bad)
stos
dec
pop
out
cmp
les
jl
call
inc
cmp
inc
retf
cmc
add
cmp
shr
jl
fistp
call
mov
fst
out
scas
(bad)
std
fabs
cmp
fwait
sbb
sti
sub
test
jo
cs
or
sar
jns
dec
mov
repz
out
jp
mov
rcl
les
fwait
pop
test
push
out
mov
fwait
lea
mov
add
test
or
adc
dec
sub
in
cmc
fsubr
mov
repz
cmp
arpl
int
fbld
out
push
mov
in
xchg
xor
mov
inc
mov
add
lds
ror
inc
sbb
pop
ss
push
imul
stos
mov
outs
and
les
call
mov
pop
dec
scas
xor
jge
jp
lods
sbb
cli
int3
mov
mov
pop
outs
fst
pop
pop
add
(bad)
sub
stos
ja
shl
fistp
popf
fcomp
jbe
scas
(bad)
xor
sub
jl
cmp
inc
fwait
leave
cmc
xor
adc
mov
mov
dec
(bad)
mov
push
stc
addr16
addr16
fwait
mov
aam
call
mov
sub
cmp
jae
gs
outs
cmps
fcmovne
out
shl
loop
push
dec
add
inc
hlt
xchg
imul
pop
push
and
daa
enter
push
dec
adc
inc
stos
shr
cmp
jae
(bad)
div
shl
mov
repnz
adc
jne
leave
add
add
cmps
mov
enter
push
inc
stc
fisttp
retf
push
sub
(bad)
ror
sbb
jae
inc
adc
adc
cld
or
xchg
or
xchg
cmp
shr
push
mov
jb
mov
sub
inc
int
xor
xchg
jnp
xor
lods
push
loope
js
dec
in
idiv
rol
test
cmp
jp
stc
fisubr
xor
fist
mov
cmp
mov
outs
push
pop
std
sbb
mov
mov
xchg
fdiv
jl
sub
mov
lods
out
push
cmp
inc
pop
(bad)
aam
sbb
into
pop
stos
les
push
mov
inc
xor
lds
ds
mov
movs
xchg
inc
add
aad
add
mov
or
or
cmps
jno
fsub
(bad)
es
mov
xor
or
fld
rcr
push
jae
mov
into
xor
rcr
push
cmp
les
pushf
cmp
add
xchg
add
(bad)
jl
fstp
stc
scas
jle
imul
jecxz
lods
fdiv
mov
pusha
jp
movs
cmp
in
mov
pop
ret
sbb
adc
push
clc
add
mov
rcr
or
es
rcr
and
popa
aam
(bad)
push
cmps
xlat
sub
mov
xor
ins
scas
add
jmp
jns
sbb
aam
test
dec
inc
mov
cmp
cwde
pop
inc
mov
dec
xchg
retf
cdq
sbb
pop
xor
mov
add
lea
popf
jae
add
dec
pop
lds
cmp
test
dec
aaa
add
add
mov
sbb
or
and
or
pmuludq
icebp
imul
xor
popf
dec
cmc
push
push
test
cmp
cld
and
xchg
movs
dec
clc
and
jae
mov
into
ss
rcr
xchg
cmp
push
cmp
shr
jp
xchg
or
xchg
sbb
xchg
fst
movs
fcom
or
adc
cmps
rcr
mov
in
(bad)
jg
fbstp
arpl
jecxz
arpl
iret
rcr
or
push
pop
mov
cmp
mov
rcl
scas
mov
xchg
ins
lsl
fidivr
call
and
das
xchg
enter
push
xlat
sub
movs
jne
out
enter
std
ret
push
xchg
mov
adc
test
call
into
out
(bad)
(bad)
sar
mov
in
(bad)
xchg
lods
add
mov
add
or
ret
xchg
int3
addr16
imul
fisubr
mov
cpuid
push
lods
and
mov
leave
pop
dec
aas
mov
sbb
pusha
cmp
sar
xor
cwde
adc
sub
fdiv
push
stos
shl
push
mov
jae
mov
in
push
mov
jge
push
cmp
jmp
ss
in
jl
aas
add
add
inc
ds
jo
rcr
dec
add
cli
out
push
push
lods
xlat
push
int
sbb
ja
fistp
movs
jnp
imul
iret
sbb
pushf
aam
aaa
es
hlt
xor
aas
adc
cmp
xchg
pop
pop
daa
adc
retf
adc
mov
das
xor
mov
fidiv
jne
inc
inc
xor
fidiv
mov
xor
gs
pop
dec
aaa
adc
mov
loopne
sub
cld
or
inc
mov
xchg
mov
dec
sbb
test
push
lds
add
pushf
test
jmp
shl
sub
movs
(bad)
test
adc
xchg
or
cs
ror
dec
dec
adc
into
lods
dec
movs
cmp
xor
(bad)
jmp
mov
push
repz
push
mov
js
rcl
shl
ja
es
adc
or
dec
inc
mov
les
(bad)
fdiv
cdq
jne
mov
ror
imul
gs
adc
cmp
leave
xchg
cmp
jecxz
jne
dec
movs
xchg
stos
mov
cmc
xor
pop
das
or
push
add
div
jae
cmp
add
clc
cmp
dec
lahf
retf
hlt
mov
inc
test
add
and
mov
div
aad
inc
add
arpl
les
cmp
repnz
stc
push
test
cld
sub
std
mov
mov
int
leave
push
dec
pop
mov
outs
push
cld
nop
imul
shl
push
mov
jb
xor
sti
mov
cmp
inc
test
add
repz
dec
cmc
xor
sub
or
mov
dec
mov
enter
inc
pushf
pop
mov
push
fsub
push
call
push
push
test
push
push
data16
mov
fwait
dec
inc
xchg
pop
pop
mov
mov
hlt
je
test
out
aad
mov
retf
imul
mov
les
inc
inc
mov
stos
fld
xchg
push
(bad)
push
int
inc
ds
cmps
not
in
dec
dec
add
test
cdq
pop
movs
rcr
cdq
cmp
movs
ret
xchg
int3
addr16
xor
cmp
mov
(bad)
movs
jmp
push
idiv
fs
mov
sbb
jno
mov
ins
sbb
fist
cmp
ja
(bad)
mov
sahf
jns
and
adc
retf
jge
and
push
mov
ret
rol
xchg
mov
js
jns
pop
and
leave
aam
imul
xchg
and
fdiv
call
push
mov
outs
push
or
std
and
je
test
mov
jl
adc
dec
sbb
loope
mov
sti
gs
or
sbb
fidivr
push
sahf
xchg
imul
ficom
xchg
iret
(bad)
sar
sbb
pop
and
(bad)
fcmovne
dec
sbb
adc
std
pop
dec
and
ins
cmps
ret
or
push
sbb
test
movs
push
cld
mov
aas
int3
dec
lock
cmp
adc
dec
adc
xchg
test
mov
idiv
add
dec
cdq
and
std
mov
pop
scas
dec
jns
push
pop
jmp
xchg
dec
sbb
scas
dec
call
and
in
mov
ss
adc
push
mov
adc
es
mov
xor
dec
xor
pushf
outs
add
cmps
xchg
xor
stos
mov
push
in
bswap
test
mov
push
pop
out
inc
sbb
and
inc
inc
add
xor
xchg
retf
ins
ror
popf
mov
wbinvd
mov
ret
mov
popf
idiv
repz
cmps
std
mov
inc
add
in
cmp
dec
lock
push
(bad)
xor
nop
pop
retf
mov
cmps
mov
clc
xor
std
mov
scas
dec
sbb
push
lahf
call
daa
sti
xor
mov
mov
in
mov
cli
or
mov
iret
xlat
call
ja
inc
gs
add
and
movs
push
add
push
(bad)
jno
shl
retf
int
loope
lds
rcr
and
add
add
loop
mov
hlt
js
jns
stc
int
je
jmp
je
xlat
cdq
xchg
and
and
fs
mov
jecxz
shl
xchg
ins
sahf
add
std
inc
fscale
dec
inc
xor
loopne
enter
or
hlt
jl
into
mov
sbb
loopne
cmc
mov
pop
das
or
dec
add
retf
gs
fisttp
call
jne
test
lahf
retf
jecxz
add
add
test
hlt
sub
add
sbb
sub
sbb
push
dec
jb
sbb
xchg
dec
xor
mov
mov
mov
pushf
dec
pop
pop
nop
ins
sbb
xchg
cld
ss
xchg
ins
cwde
popa
xor
mov
pop
scas
dec
push
xchg
outs
sbb
mov
jp
lahf
ficomp
xchg
jg
add
cwde
or
aas
adc
ret
jle
adc
sbb
js
pop
cwde
inc
cwde
in
xor
icebp
inc
push
test
test
fsub
jno
in
sub
pop
mov
sti
xor
push
icebp
dec
add
add
mov
stc
and
inc
jne
or
rcr
pop
push
mov
dec
add
in
and
shrd
cmp
and
sar
loopne
test
lahf
retf
jecxz
add
cs
leave
or
dec
inc
pop
repnz
ins
cwde
mov
dec
mov
dec
xchg
dec
and
ror
add
lods
push
test
pop
and
xlat
sahf
mov
cld
sub
mov
test
(bad)
shl
rol
cmp
mov
(bad)
xor
cdq
test
dec
movs
sub
pop
cld
bnd
cwde
out
xor
(bad)
jmp
mov
pop
xchg
cs
sbb
outs
cmps
xlat
popf
dec
stc
and
adc
dec
xor
xor
rcl
repz
mov
in
sub
test
push
mov
xor
(bad)
mov
push
add
xchg
hlt
jb
jl
adc
rcpps
loop
lea
cmp
pop
stos
shl
inc
mov
popf
or
add
sbb
fsub
xor
hlt
mov
shl
xor
xchg
lock
mov
outs
xor
sbb
je
push
dec
jb
mov
add
sub
(bad)
xchg
cli
xor
mov
(bad)
cli
je
aad
push
cmp
dec
mov
call
aam
mov
fbld
jne
inc
sub
mov
movs
push
(bad)
fs
mov
inc
pusha
sahf
rcr
dec
bnd
popf
jecxz
neg
add
out
adc
inc
mov
clc
je
in
push
sbb
aam
jns
dec
xor
imul
cmp
add
(bad)
enter
mov
mov
and
call
add
xor
hlt
push
or
movs
int
imul
popa
dec
mov
jbe
push
inc
mov
cdq
call
push
repz
sbb
add
pop
inc
or
jns
lahf
sbb
ret
(bad)
repnz
adc
mov
js
push
stos
cmp
dec
jb
mov
push
es
push
fiadd
jae
jns
inc
and
sbb
inc
(bad)
imul
jno
dec
ret
push
xchg
mov
dec
(bad)
retf
ins
scas
push
cmp
les
sbb
rol
push
mov
sbb
loope
jno
sar
and
sub
add
ds
or
inc
cmc
out
mov
ins
xor
xor
inc
pop
popf
out
jbe
cmp
xchg
imul
inc
call
test
fwait
mov
mov
or
or
xchg
fxtract
ins
aaa
retf
push
or
mov
dec
inc
xor
add
jp
xor
adc
popf
movs
pop
in
push
pop
adc
sbb
test
mov
in
or
repnz
jo
test
ror
sbb
or
pop
stos
push
lods
xchg
sub
adc
fisubr
sbb
stos
mov
xor
int
arpl
jo
test
jae
les
xchg
fisttp
push
mov
xor
xor
aaa
pushf
add
ja
and
adc
dec
and
popf
scas
(bad)
leave
loop
adc
fild
and
xlat
add
mov
in
(bad)
mov
repnz
jecxz
das
lock
mov
jmp
popf
loopne
mov
fdiv
dec
push
and
sbb
xchg
enter
jl
and
and
mov
mov
in
xlat
or
cmp
loop
xchg
repz
aam
xor
mov
pop
pop
or
repnz
push
dec
aaa
add
jmp
and
nop
addr16
add
xchg
int3
sbb
add
adc
fisttp
aaa
test
jge
pop
sbb
push
dec
rcl
adc
pop
adc
test
xchg
mov
dec
and
scas
xlat
stos
lds
push
retf
jge
mov
jle
fcom
jbe
xchg
xor
scas
(bad)
shr
bnd
into
scas
cmp
and
pusha
and
add
or
add
ja
or
mov
fwait
xor
push
sub
fst
fiadd
jb
fwait
outs
push
ret
cmps
retf
out
cdq
int3
pop
sub
or
jne
dec
cmp
jmp
mov
shl
jmp
repz
pushf
dec
pop
movs
pop
call
fucomip
icebp
clc
sti
mov
out
lds
adc
popa
mov
add
sbb
or
nop
xlat
dec
pop
dec
arpl
aam
sbb
scas
mov
fld
xor
mov
jmp
les
xchg
xor
inc
pop
xchg
xchg
xchg
xchg
add
addr16
rcr
push
adc
mov
fucomi
repnz
retf
(bad)
ds
mov
in
jge
arpl
rol
pop
enter
test
xor
call
push
fdivr
ins
out
fwait
pop
mov
gs
out
(bad)
push
aad
xchg
mov
jle
or
es
cwde
dec
or
rol
out
pop
ret
cmp
stc
mov
arpl
int3
lea
mov
in
xrelease
fistp
aaa
rcr
mov
cmp
adc
popa
push
sbb
fs
test
xchg
xlat
stos
mov
pop
stos
mov
pop
pop
fs
mov
cmp
stc
dec
data16
mov
and
test
adc
push
inc
inc
push
stos
jge
sub
pop
xchg
or
sub
in
call
jnp
xor
(bad)
pop
test
mov
xor
in
stc
sub
cmp
cwde
dec
cmp
cwde
clc
outs
jmp
jns
dec
and
popa
clc
pop
and
or
push
pop
xchg
jae
cld
pop
cmps
fcomp
add
cmp
outs
push
int3
sbb
clc
cmp
push
pop
sub
push
pop
jb
dec
mov
shr
nop
call
test
mov
rcl
mov
sbb
mov
loop
stc
mov
lock
adc
arpl
sbb
add
ret
push
sbb
in
imul
(bad)
and
mov
cmp
aaa
imul
dec
mov
jno
fldcw
loopne
movs
jno
inc
cmp
cld
dec
das
xchg
retf
mov
es
outs
xchg
add
sub
jecxz
fisttp
adc
not
push
inc
in
shr
pop
(bad)
cld
repnz
int
and
stc
popa
std
push
push
pop
jmp
xor
jge
xchg
iret
xchg
inc
cwde
inc
icebp
adc
mov
rcl
in
mov
push
gs
mov
mov
std
loopne
xor
push
adc
sub
inc
inc
(bad)
leave
sbb
or
les
out
rcr
jnp
xchg
out
push
sub
mov
(bad)
sti
scas
retf
in
repz
add
cmp
mov
cld
sti
mov
es
add
mov
cmp
mov
mov
test
jno
dec
mov
dec
pushf
dec
and
inc
lods
push
and
leave
fiadd
mov
sahf
pop
(bad)
stc
dec
cmp
je
fstp
aam
cmp
dec
inc
sbb
ret
fcmovnbe
call
(bad)
xor
xchg
pop
add
sbb
scas
pop
ins
jbe
lods
sahf
jg
fisub
test
cmp
mov
sti
ret
and
and
inc
pop
jecxz
inc
test
dec
cmps
mov
fwait
cmp
xchg
and
mov
and
(bad)
(bad)
xchg
pop
out
mov
pop
fsub
xor
mov
int3
pop
sub
pushf
dec
inc
hlt
je
xchg
push
jmp
mov
push
inc
mov
ffree
pop
push
push
cmp
call
adc
jne
inc
add
pop
adc
in
stc
mov
hlt
mov
shr
add
or
aad
inc
sbb
sbb
popa
fwait
or
in
sbb
(bad)
les
leave
mov
cmp
xchg
(bad)
lahf
pop
in
mov
imul
je
fcomi
cmp
fidivr
xchg
dec
data16
stos
jne
dec
xchg
cmp
fstp
pop
scas
jb
push
cli
icebp
xchg
jmp
popf
fst
jnp
add
scas
(bad)
ds
fidivr
scas
add
dec
jl
cmp
js
or
inc
sbb
test
dec
(bad)
mov
pop
dec
(bad)
and
pop
xor
bound
mov
cli
jae
push
jne
in
xor
cmp
daa
pop
sahf
fdiv
jecxz
sub
sahf
cmp
push
or
xchg
test
push
adc
xchg
pop
xchg
enter
cmc
xor
and
cmc
pop
adc
cld
icebp
mov
aam
test
jecxz
mov
retf
hlt
mov
adc
arpl
sbb
mov
or
ret
or
cwde
retf
aad
or
pop
xor
jno
test
fucomp
pop
test
dec
push
dec
adc
dec
sub
mov
mov
fisttp
pop
xchg
dec
imul
xchg
fcom
stos
nop
test
inc
cmp
sbb
mov
inc
(bad)
imul
jecxz
fwait
popf
xchg
fsub
xor
test
pop
(bad)
neg
mov
call
je
add
dec
and
mov
cdq
movs
jp
cwde
inc
js
imul
or
cmp
pop
cmp
fld
xchg
mov
sbb
add
mov
dec
dec
mov
ret
inc
shr
dec
mov
out
add
int
fsubr
and
fnsetpm(287
sbb
clc
lds
cld
add
mov
sbb
sbb
push
aas
repnz
ret
jp
cwde
pmuludq
add
stos
mov
inc
mov
lds
pop
movs
push
test
scas
mov
shl
fs
(bad)
out
mov
lods
xchg
retf
or
mov
test
or
retf
cli
inc
sub
mov
test
stc
lods
jle
mov
in
push
test
jmp
pushf
sahf
ret
js
pop
movs
cs
jmp
xor
fdivr
adc
inc
sar
pop
pop
sbb
rcr
js
sbb
mov
sbb
imul
mov
(bad)
scas
pop
xor
mov
xlat
pop
(bad)
imul
mov
int3
pop
sub
push
adc
xchg
xchg
jmp
adc
jmp
cwde
and
cmc
pop
pop
dec
popa
mov
mov
imul
sar
imul
mov
mov
nop
push
inc
sbb
inc
aas
repnz
push
int
inc
sbb
sar
ror
stc
and
sahf
xor
jnp
mov
ffree
stc
test
scas
pushf
repz
jmp
push
sub
cld
jo
and
add
imul
push
cs
cld
xchg
sahf
xor
jbe
push
retf
ret
mov
dec
enter
pop
xor
popf
scas
leave
bound
and
fisub
mov
idiv
add
adc
data16
fist
out
push
mov
ret
push
inc
stos
cmp
(bad)
sbb
mov
mov
xchg
fwait
inc
ins
aaa
and
scas
icebp
loope
add
mov
in
cmp
ror
or
add
stos
xor
int3
bound
lods
call
ja
or
test
sbb
outs
cdq
xor
aad
dec
(bad)
pop
xor
clc
mov
xor
or
inc
das
jno
jp
aad
stos
mov
pop
test
push
xor
inc
sbb
stos
aaa
retf
fucomp
ins
cmp
rcr
nop
sbb
mov
nop
test
push
cmp
retf
add
movs
and
scas
ja
test
dec
mov
mov
lds
pop
mov
(bad)
pop
call
xchg
cwde
fist
das
xchg
in
repz
add
mov
inc
mov
stc
sbb
inc
lahf
pop
inc
jp
cwde
fild
leave
aad
jns
shl
or
cmp
(bad)
out
inc
lea
inc
pop
enter
dec
(bad)
imul
jns
mov
push
xchg
mov
sbb
in
and
cmp
mov
lds
add
cs
pop
xchg
inc
movs
xchg
sub
pushf
cdq
push
mov
and
mov
sbb
imul
jge
les
push
cli
sub
mov
push
icebp
fisttp
add
int
lock
(bad)
or
in
dec
bound
sub
fnsave
les
pop
call
inc
sub
sbb
xchg
xchg
sahf
mov
and
push
leave
aad
sar
(bad)
lods
(bad)
xchg
pushf
fist
jl
sub
add
adc
iret
es
mov
out
test
fwait
xor
aam
fsub
sub
(bad)
xchg
ds
mov
push
lds
fsubr
rcl
ret
pusha
ds
jecxz
mov
sub
fwait
int
imul
in
jne
test
fbstp
test
ss
cmp
imul
loop
scas
fcmovnu
call
js
sahf
rcr
rcr
imul
mov
xlat
sbb
rcr
sbb
test
(bad)
push
test
pop
pop
stc
xor
in
dec
dec
add
push
retf
sbb
stos
ret
dec
mov
ret
pop
jns
ret
add
or
push
xchg
push
add
sub
pushf
push
xor
cld
cmps
or
xchg
xchg
mov
cld
cli
repz
mov
pop
sub
fcomi
jecxz
pop
xchg
rcr
and
mov
das
adc
ins
std
xchg
fsub
sti
sub
inc
fnsave
pop
push
ret
xor
repnz
test
fmul
sub
aam
loop
(bad)
fadd
int3
sub
push
pop
pop
mov
pop
adc
lods
cmp
mov
pop
xchg
clts
loop
mov
pop
shr
rcr
mov
mov
lds
out
popa
call
and
cdq
retf
call
sbb
test
lods
stos
push
icebp
(bad)
arpl
lds
sbb
jo
and
add
dec
adc
or
dec
mov
jle
pop
lds
jl
sbb
cld
mov
cmp
loop
xchg
fst
or
cmp
loop
ins
(bad)
mov
sbb
sub
lods
push
imul
fsubr
push
xchg
ins
mov
popf
rol
jne
pushf
sub
sbb
imul
cmp
mov
add
cmp
fadd
add
jl
push
xchg
popa
mov
out
xor
fld
pop
jmp
clc
sti
inc
lahf
div
rcr
inc
fcomip
call
test
jno
jl
adc
dec
hlt
dec
adc
aaa
push
aaa
dec
fsubr
stos
test
push
sub
(bad)
out
int3
(bad)
repnz
in
mov
cmps
xchg
push
nop
jg
xchg
dec
mov
fwait
test
(bad)
pushf
sti
pop
sub
movs
push
mov
sbb
push
xor
fnstenv
push
loope
stc
jg
enter
push
xchg
add
aam
and
pop
retf
jp
xchg
push
and
pop
ja
mov
pop
mov
ins
fild
mov
fdiv
iret
sbb
(bad)
pusha
out
fdiv
mov
test
fisub
jmp
fstp
and
or
ret
jbe
repz
mov
pop
pop
inc
inc
mov
mov
jne
pop
dec
aaa
lds
cwde
push
mov
cld
or
sbb
pop
dec
dec
xchg
dec
and
jne
xchg
ss
test
xlat
test
sahf
jne
pop
sbb
test
adc
mov
xor
pushf
dec
pop
mov
mov
inc
movs
out
xchg
lds
pop
push
xchg
repz
inc
mov
stc
pop
add
push
mov
mov
cmp
bound
aaa
js
(bad)
js
adc
push
loopne
mov
push
xor
push
cli
xlat
sahf
or
dec
popf
icebp
iret
dec
push
leave
imul
inc
loopne
inc
std
pop
fldcw
cmp
pop
out
enter
int
sub
adc
hlt
jl
jbe
mov
out
mov
adc
inc
dec
sahf
dec
mov
mov
push
sub
jae
mov
pop
div
iret
pusha
or
jge
inc
inc
mov
ficom
imul
cmc
loopne
or
sbb
and
adc
xor
ds
outs
mov
jle
push
int3
and
shr
jae
imul
xor
and
movs
(bad)
mov
imul
push
xor
push
push
imul
fwait
lods
mov
rcr
inc
push
(bad)
icebp
scas
fnstenv
mov
fimul
add
pop
nop
out
add
arpl
iret
add
mov
mov
add
add
movs
mov
xchg
mov
sbb
jo
ret
shr
jb
cmp
bound
sbb
mov
loopne
aad
dec
int
out
dec
test
pop
dec
daa
adc
sbb
push
into
loopne
shr
inc
mov
mov
mov
out
repz
fisttp
pusha
xor
jnp
mov
aaa
mov
pop
dec
mov
pop
xchg
jg
pop
push
xor
int3
addr16
add
add
mov
push
sbb
inc
push
movs
dec
out
pop
fld
mov
sub
push
pop
rcl
push
and
fistp
mov
push
jmp
nop
sbb
and
cmps
dec
pop
pop
sahf
mov
sub
ret
(bad)
push
(bad)
fucomi
loope
repz
dec
xchg
inc
idiv
and
sbb
rcl
dec
fidiv
fucomp
or
push
stc
ret
push
sbb
mov
pop
inc
pop
lods
xlat
sub
mov
lahf
(bad)
cmps
ret
out
cmp
fwait
lea
shl
cdq
push
hlt
call
pop
mov
push
mov
mov
jmp
(bad)
ffree
pop
loop
xchg
sti
mov
icebp
out
div
inc
add
pop
adc
mul
fidivr
mov
aam
or
sub
hlt
and
mov
sti
xchg
daa
leave
fsubr
jae
inc
sbb
jg
sbb
stos
xor
inc
inc
mov
mov
fucomp
movs
cmp
popf
retf
add
sub
inc
sbb
fucomi
retf
test
retf
jno
mov
adc
mov
sbb
ficom
jle
xor
aas
iret
loop
xchg
mov
inc
aam
fdivr
fidivr
jge
sbb
data16
push
mov
push
push
jmp
or
lahf
(bad)
cmps
jge
(bad)
call
fcomi
pop
popa
dec
mov
cdq
int3
pop
fsubrp
inc
dec
mov
xchg
xor
and
mov
inc
ja
mov
sub
xor
pop
adc
movs
mov
fcmovnbe
imul
ror
iret
sbb
mov
mov
xchg
les
add
ins
push
pushf
mov
neg
nop
psadbw
xchg
adc
stos
lods
arpl
xor
(bad)
push
fist
mov
clc
test
dec
mov
retf
push
sbb
ret
or
mov
or
(bad)
stos
push
(bad)
mov
inc
ret
loope
cmps
fst
cld
scas
push
pop
icebp
sbb
xor
les
and
add
jecxz
and
cwde
clc
dec
shl
call
rcr
mov
mov
cdq
ins
push
or
enter
outs
push
int3
aad
jne
dec
inc
adc
sbb
add
add
in
rcl
mov
dec
ret
pop
cmc
sbb
fwait
pop
cmps
fisub
mov
(bad)
or
repz
ds
jecxz
(bad)
mov
shl
mov
add
leave
fcomp
mov
push
sahf
cwde
icebp
mov
xor
test
or
cmp
cli
mov
test
inc
cmp
nop
cwde
adc
jno
je
add
mov
mov
mov
or
pop
rcl
pushf
adc
mov
shl
das
ret
or
jle
scas
(bad)
fdivr
pop
(bad)
js
cmp
pop
jae
in
sub
push
fisttp
dec
(bad)
mov
or
and
repnz
aad
inc
movs
xlat
jmp
(bad)
mov
mov
les
cmps
fcomi
cmp
cdq
jge
inc
lds
lea
and
adc
enter
mov
add
in
pop
add
sbb
add
pop
adc
inc
stos
shr
and
mov
sbb
rcr
adc
inc
cmp
aad
inc
in
fldcw
xchg
sub
popf
fsub
dec
mov
and
lds
cli
retf
push
in
(bad)
stos
jae
adc
rcr
pop
in
jmp
pop
lock
test
inc
cmp
leave
or
dec
rol
test
adc
sub
dec
lds
add
xchg
sbb
push
je
leave
ret
loope
(bad)
cmp
xchg
rol
sub
dec
(bad)
(bad)
jnp
inc
push
mov
xchg
sbb
dec
mov
int
dec
mov
fld1
jb
outs
add
xchg
fxch
mov
hlt
xchg
das
jns
add
mov
shr
(bad)
dec
cmp
pop
call
ror
inc
sahf
pop
mov
mov
imul
jb
pop
mov
out
mov
add
sbb
mov
lock
outs
adc
sub
jno
xchg
repnz
sub
mov
shr
xor
(bad)
push
sbb
leave
dec
and
aam
sub
fs
sbb
dec
outs
test
sub
(bad)
pop
pop
jne
fwait
lods
mov
lods
inc
inc
mov
test
xchg
or
popf
scas
inc
inc
mov
cmc
arpl
repz
and
and
add
sub
push
test
adc
imul
jmp
or
fisttp
inc
test
mov
sti
xor
popa
rcr
mov
int3
xchg
jns
es
je
seto
ret
push
dec
mov
inc
cmp
sbb
shr
repz
xor
mov
xor
xchg
iret
sbb
lock
movs
push
aad
fnsave
pop
ror
ins
nop
ret
inc
les
(bad)
in
sbb
inc
cmps
xchg
adc
test
ja
add
inc
inc
mov
stc
or
jmp
shl
or
jge
sbb
mov
sbb
(bad)
or
xchg
add
(bad)
pop
jae
mov
fcom
sbb
push
imul
dec
bound
pop
dec
(bad)
jmp
sbb
sar
mov
xchg
or
mov
call
enter
sub
sbb
aad
push
mov
rcl
jp
mov
out
or
dec
cwde
cmp
lea
or
xor
ds
in
sbb
mov
call
(bad)
imul
or
aad
pop
imul
add
imul
jne
and
ds
mov
mov
fldenv
mov
mov
ror
mov
icebp
cli
pop
out
call
push
(bad)
stc
mov
xor
call
mov
lahf
sbb
sbb
(bad)
push
cmp
ret
jo
test
dec
sbb
lods
popf
popa
mov
leave
xchg
fcmove
xchg
pushf
mov
adc
(bad)
pop
js
pop
push
adc
gs
mov
mov
mov
jno
add
dec
mov
xchg
push
pop
adc
stc
xor
push
mov
and
push
fisub
jmp
or
stos
xor
into
fadd
pop
fsub
jae
cwde
jno
popf
add
add
add
imul
cdq
outs
mov
dec
adc
or
or
mov
pop
test
or
mov
or
mov
lock
xchg
adc
jo
aad
dec
ror
push
adc
(bad)
stos
repnz
scas
inc
std
stos
dec
sbb
test
dec
retf
fucomp
fwait
lock
clc
test
fwait
loopne
xor
push
cwde
nop
sbb
loope
fdiv
xchg
adc
add
sub
jmp
pop
pushf
add
rol
and
mov
cmc
mov
les
cmp
jb
pop
add
add
adc
sub
data16
dec
(bad)
aas
stc
xor
bswap
push
cmp
in
or
xor
cmp
retf
pop
fdivr
jnp
int3
jno
xchg
push
adc
inc
sub
cs
jl
dec
mov
sbb
mov
fistp
(bad)
ins
or
inc
call
adc
push
sahf
jecxz
mov
or
clc
cmp
mov
xrelease
add
rcr
mov
hlt
mov
mov
and
int
sbb
iret
stos
repz
(bad)
stc
mov
ja
repz
gs
dec
add
(bad)
sbb
jmp
clc
(bad)
mov
movs
push
test
or
adc
xchg
retf
add
dec
sbb
push
push
adc
dec
mov
or
or
ins
xor
int3
cmps
sbb
jmp
adc
inc
mov
or
cmp
int
sub
popf
retf
inc
mov
push
in
or
adc
imul
mov
ds
call
(bad)
aad
xchg
mov
cdq
daa
xchg
inc
inc
mov
cwde
fld
es
addr16
add
cmc
mov
pop
cmp
push
and
inc
call
call
mov
pop
(bad)
fsubp
aas
repz
clc
sti
pop
push
rol
idiv
outs
inc
sbb
into
mov
ret
mov
mov
cs
pop
and
mov
imul
inc
inc
inc
lods
cmps
adc
dec
sbb
in
and
push
call
fs
icebp
or
imul
nop
std
das
adc
mov
lock
std
xor
outs
sbb
call
lods
jle
test
cmc
outs
push
iret
pop
test
cmp
ror
sbb
popa
push
pop
fiadd
xchg
lods
pusha
adc
add
iret
(bad)
mov
lock
xor
ret
retf
dec
aaa
mov
inc
fdivr
inc
cmp
clc
in
xchg
xchg
enter
sub
inc
xchg
test
shr
retf
sbb
inc
shl
(bad)
and
adc
call
pop
sbb
jmp
xchg
inc
mov
xchg
xchg
jge
pop
cmp
std
rol
test
das
add
or
sub
fwait
test
cwde
retf
inc
sub
xchg
cmp
(bad)
mov
push
inc
cmps
test
push
xchg
cmp
jae
aas
lock
fmul
arpl
dec
pop
sbb
cmp
retf
or
nop
mov
push
sub
lock
enter
push
xor
cmc
popa
mov
retf
mov
retf
sub
js
push
cwde
add
ins
aam
es
mov
cmp
push
mov
or
ins
and
cmp
xor
sub
enter
mov
cmp
call
xchg
mov
scas
jns
mov
jge
pop
xor
pop
pop
dec
cmps
dec
mov
shr
mov
mov
into
inc
lods
outs
mov
pop
pop
stos
imul
cdq
adc
mov
jmp
lock
movs
sub
retf
in
inc
rcl
outs
movlps
stos
cmp
out
cmps
sbb
jbe
jmp
dec
push
xchg
xlat
stos
mov
pop
mov
push
adc
sub
cwde
pop
mov
popf
jmpw
fistp
push
sahf
stos
(bad)
add
add
aam
and
ret
cwde
pushf
lds
ds
fxch
jge
adc
lds
add
push
sbb
xor
in
loop
and
imul
adc
mov
push
fadd
data16
fldenv
dec
aaa
mov
lahf
scas
(bad)
pop
ds
xor
mov
sbb
push
xchg
inc
or
or
mov
cwde
xchg
sub
jbe
int
jg
pop
adc
call
push
loopne
dec
scas
iret
fisttp
test
into
add
lock
push
xor
ffreep
ret
inc
or
add
ins
push
pushf
mov
fcomi
mov
icebp
idiv
aad
inc
mov
js
sbb
(bad)
test
call
or
pop
fnstenv
jno
shl
dec
mov
daa
or
call
call
pop
cmp
lods
cmp
mov
rcr
std
mov
pop
popf
into
push
fwait
leave
ins
jne
sbb
or
shl
mov
data16
pop
mov
aad
jmpw
(bad)
or
sbb
xor
enter
mov
dec
sbb
enter
rcl
ret
add
sbb
fwait
icebp
mov
xor
loop
inc
(bad)
imul
ret
mov
pop
xor
jb
lea
mov
mov
cwde
test
iret
fwait
cmp
inc
hlt
pop
div
jl
shl
int3
pop
out
mov
ret
lds
popa
fwait
aad
jnp
pop
sub
mov
and
aam
push
mov
sbb
xor
retf
xor
pop
fnstenv
jno
cld
cmp
outs
push
loop
daa
or
cmp
jmp
adc
call
lods
jle
cdq
shl
xchg
fcom
repz
jp
pop
loope
(bad)
jge
sub
or
rcr
cmp
or
test
(bad)
call
fistp
or
mov
std
mov
aam
int
inc
xor
out
jne
repz
cmp
es
in
test
enter
cmc
enter
xchg
push
adc
mov
mov
ds
shr
repz
sbb
mov
sub
cld
aas
in
and
icebp
(bad)
mov
cli
mov
cwde
mov
sbb
stc
pop
into
out
leave
ja
loopne
retf
movs
mov
ja
and
add
jmp
lods
imul
stc
fs
in
and
(bad)
shl
sbb
xor
pop
aad
imul
sbb
sbb
shr
jns
(bad)
push
pushf
add
xor
in
cwde
and
push
sar
add
pop
addr16
rcl
mov
pop
jecxz
xor
inc
ins
out
imul
jmp
adc
(bad)
mov
es
aam
sbb
call
fstp
clc
sub
popf
fist
adc
pop
add
lods
and
adc
mov
ret
(bad)
sti
jns
inc
sbb
add
mov
gs
call
cmp
leave
sar
imul
dec
pop
inc
stos
push
ins
rcl
and
lods
xchg
jmp
pop
es
nop
les
rol
and
nop
xchg
mov
scas
fs
call
pop
jno
lds
pop
and
jmp
mov
popf
fist
pop
mov
stc
and
sbb
outs
daa
add
sub
ficom
dec
aam
adc
test
rcl
mov
repnz
mov
jmp
bound
xor
loop
push
popa
xor
push
lds
les
fstp
xor
sub
int3
inc
pop
add
addr16
sbb
clc
mov
xor
mov
inc
or
fs
mov
or
xor
ret
(bad)
mov
push
out
das
(bad)
dec
and
jb
test
push
retf
mov
imul
xchg
fucom
jmp
pop
xor
inc
mov
mov
push
or
sahf
popa
movs
adc
(bad)
jl
fist
cmps
dec
movs
aad
xor
xor
cdq
idiv
addr16
dec
scas
movs
fdiv
push
xchg
add
clc
mov
adc
mov
xchg
adc
data16
push
cdq
and
xor
inc
jge
imul
stos
cmp
(bad)
call
sti
xor
jns
mov
fidivr
dec
push
or
cmps
gs
mov
sbb
cmps
pop
push
(bad)
int3
sbb
in
xor
mov
repz
sti
pop
push
ret
inc
jnp
xchg
sbb
mov
jo
push
adc
test
inc
test
and
iret
xor
mov
and
jns
lds
mov
fwait
(bad)
pop
jnp
mov
js
in
push
pushf
pop
or
jo
xchg
adc
inc
inc
movs
sbb
sbb
jns
mov
sar
jp
sub
jno
cmc
mov
(bad)
fcomp
sti
and
jmp
loop
xchg
adc
nop/reserved
jns
sub
pop
icebp
addr16
aam
sti
stc
xor
adc
imul
rcr
das
pop
and
les
xchg
xchg
lahf
out
int3
and
cmp
sbb
cmp
mov
push
inc
fwait
retf
ins
or
leave
jae
add
fcomp
cwde
movs
pop
and
daa
cld
rol
pop
cmp
pop
push
jg
js
xor
lock
or
xor
hlt
daa
push
or
add
add
jg
stos
mov
in
sub
add
sbb
inc
mov
addr16
(bad)
int3
jmp
push
jp
jmp
adc
ret
mov
xchg
add
mov
mov
test
mov
fcom
jbe
cmp
xor
adc
pusha
push
jg
pushf
jne
jle
fimul
inc
sar
js
fist
(bad)
push
xor
jmp
fcos
xchg
xchg
pop
dec
loope
adc
xchg
xchg
inc
movs
cli
xor
rcl
gs
out
cmovge
popf
xchg
mov
stc
or
cmps
aam
mov
retf
sub
cdq
add
or
jns
les
jns
pop
mov
test
fwait
mov
jmp
push
pmaxsw
adc
lds
mov
add
ret
mov
sbb
dec
sbb
xlat
or
test
leave
test
cs
cli
cmp
jmp
sbb
adc
add
sub
dec
dec
outs
(bad)
stos
push
(bad)
fcom
jnp
inc
pop
mov
pushf
imul
retf
fild
repz
loop
inc
mov
pop
jb
add
test
sub
and
sbb
sbb
movs
jp
mov
push
loope
push
fidiv
test
xor
lods
mov
jnp
clc
jno
jecxz
mov
ror
adc
jmp
dec
addr16
retf
sbb
or
imul
push
call
push
test
sbb
jmp
cmp
fist
iret
ret
sahf
repz
outs
xor
loop
mov
imul
adc
fsub
pmuludq
sbb
lahf
inc
adc
test
cwde
xor
mov
popf
mov
mov
mov
or
jo
xor
push
sbb
adc
(bad)
loop
lock
sbb
stos
push
push
pushf
shr
sbb
(bad)
sub
dec
jg
(bad)
sbb
dec
xchg
cwde
add
mov
or
mov
mov
xchg
cmc
mov
sbb
ret
sbb
into
clc
xor
std
jb
xchg
mov
int3
pop
and
mov
dec
inc
mov
inc
pop
lahf
mov
sub
xchg
repz
and
shr
movs
pop
call
fucomip
hlt
cmp
fist
iret
int3
sub
loop
loopne
popf
sbb
ret
mov
adc
retf
cmp
mov
mov
sbb
stos
push
cli
mov
pop
mov
mov
xchg
jmp
jno
xchg
out
arpl
test
gs
sbb
stos
nop
neg
or
inc
xchg
push
xor
and
pop
sbb
cmp
xor
inc
sbb
scas
jg
leave
cwde
sbb
retf
test
call
or
sbb
arpl
dec
xchg
lock
cmp
or
inc
ins
xchg
popf
mov
mov
cdq
inc
push
push
sbb
ret
adc
or
mov
cmp
sbb
es
push
mov
stos
pop
aad
dec
cmp
or
retf
add
mov
add
jl
adc
mov
call
fucomip
hlt
cmp
fist
iret
int3
xlat
hlt
movs
ret
aaa
lods
dec
test
adc
mov
mov
push
jno
dec
xchg
jo
imul
jne
les
sbb
mov
shl
xchg
lods
sbb
mov
call
retf
rcr
jae
add
xchg
enter
in
inc
cmp
adc
cmp
(bad)
cmp
les
cmp
or
mov
fmul
fwait
scas
dec
push
lds
ss
adc
mov
test
mov
test
sbb
mov
inc
xchg
jmp
cld
hlt
adc
mov
inc
popf
push
jo
sbb
ret
(bad)
sti
xor
cmps
sti
repz
mov
adc
and
and
aaa
outs
fisubr
sbb
xlat
adc
int
mov
repz
mov
imul
ds
and
push
adc
xor
jns
mov
imul
and
shl
lock
pushf
sbb
(bad)
call
xor
shl
cmc
ins
in
push
and
sahf
les
inc
mov
test
mov
(bad)
adc
push
cmp
and
or
xor
and
(bad)
jp
ror
xchg
out
leave
dec
mov
mov
mov
mov
popf
adc
(bad)
jmp
popf
in
addr16
scas
fbstp
into
mov
inc
jl
dec
xchg
sar
sub
rol
and
fmul
xor
xchg
cmps
or
push
jo
out
add
out
sub
cmps
sti
repz
inc
je
push
and
and
aaa
pop
fisubr
sbb
xlat
adc
int
ja
xor
mov
call
push
sahf
ror
push
dec
fld
sti
mov
imul
retf
pop
movs
xor
or
xchg
or
mov
fwait
add
rcr
cli
push
dec
sbb
xlat
or
push
pop
lods
leave
test
sub
arpl
scas
sbb
mov
jo
clc
inc
and
fdiv
sub
call
push
aaa
xchg
stos
jge
jns
adc
icebp
mov
bound
shr
sbb
cmc
in
mov
leave
loop
in
nop
xchg
sbb
mov
jecxz
add
dec
mov
pop
repnz
out
mov
add
push
or
inc
ins
xchg
imul
xchg
stos
jmp
xabort
mov
fadd
cdq
enter
rcl
dec
or
in
dec
fisttp
add
mov
push
call
int
aas
lea
mov
cld
jecxz
mov
mov
(bad)
in
clc
outs
cdq
les
sub
(bad)
enter
add
dec
cdq
nop
(bad)
daa
call
rcr
mov
movs
fisub
movs
fldcw
fucomp
je
(bad)
push
retf
into
retf
(bad)
(bad)
test
sbb
jno
test
xchg
retf
or
xchg
or
mov
ret
xor
pop
cmps
pop
pusha
ja
lods
loopne
and
jmp
popf
in
adc
bnd
lods
das
fbstp
sub
add
add
jmp
dec
(bad)
mov
jmp
aam
xor
adc
fs
xchg
and
mov
xchg
in
cmovae
push
jecxz
aad
jb
sbb
mov
jmp
mov
add
or
sub
mov
sbb
adc
int
mov
repz
mov
imul
(bad)
push
dec
pushf
iret
sti
mov
imul
add
fidiv
add
mov
div
nop
jecxz
mov
pushf
dec
and
ror
sbb
mov
pop
iret
xchg
cmps
inc
scas
mov
sti
stos
pusha
std
fisttp
retf
xchg
add
xchg
sbb
sbb
popa
add
jge
or
lock
out
dec
cmp
push
out
leave
jne
sbb
jmp
adc
ror
mov
add
dec
mov
out
push
xchg
push
cmp
mov
push
or
retf
jae
mov
test
mov
loope
dec
mov
push
gs
adc
clc
xor
enter
rcl
dec
add
or
mov
enter
lods
cmp
mov
inc
sub
xor
mov
sub
and
cmps
and
imul
inc
adc
repz
cmp
mov
pop
sbb
std
dec
dec
jle
aad
xor
sbb
jecxz
sbb
mov
test
cwde
mov
aaa
stos
xchg
pop
jmp
jmp
popf
(bad)
jmp
or
inc
push
pop
xchg
sub
or
adc
xchg
fst
test
addr16
lods
push
pop
scas
test
mov
cld
loop
adc
xchg
(bad)
mov
retf
sub
clc
xor
push
pop
repnz
out
mov
or
movs
cli
jg
inc
ins
xchg
adc
and
fcom
popf
out
push
ret
retf
cmp
test
push
push
cmps
jns
mov
test
sub
adc
jb
mov
pop
push
mov
les
mov
ret
arpl
inc
repz
neg
iret
sbb
mov
cdq
xor
std
pop
dec
jp
int
repz
sti
jne
xor
test
jecxz
sbb
inc
push
test
cwde
mov
aaa
stos
xchg
test
stos
(bad)
lahf
popf
stos
mov
jae
cli
jo
mov
or
mov
push
sbb
in
add
mov
xor
rcl
cwde
pushf
xchg
sbb
(bad)
jecxz
fwait
cmps
enter
pusha
jle
scas
pop
icebp
leave
arpl
cld
repnz
out
daa
rcr
sbb
mov
or
push
or
retf
js
adc
jmp
movs
jp
enter
adc
call
add
rcl
dec
add
dec
call
enter
int
pop
movs
popf
out
mov
mov
call
adc
aad
mov
jns
into
clc
rep
ret
sahf
repz
pop
and
test
lock
sub
in
dec
stos
push
test
iret
repnz
stc
xor
shl
pop
mov
test
push
in
or
xchg
fmul
(bad)
push
retf
into
jmp
sbb
jno
test
xchg
sub
or
cmp
scas
xor
dec
movs
xchg
mov
pushf
ret
shr
js
pop
push
xchg
inc
fwait
(bad)
imul
inc
or
call
lea
mov
xchg
fmul
movs
cli
jg
inc
ins
xchg
adc
in
and
xor
and
cmp
movs
(bad)
loop
leave
sbb
cmc
enter
int3
push
push
xchg
stos
out
sub
adc
jo
mov
pop
push
mov
ret
mov
pop
test
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
pusha
push
repnz
pop
icebp
addr16
sub
jg
repnz
xchg
out
jl
mov
pop
stos
push
ins
fcmovne
sbb
dec
mov
into
call
mov
fbstp
mov
or
mov
push
sbb
pop
xchg
or
cmp
inc
call
pusha
mov
rol
jnp
(bad)
cdq
sub
mov
iret
js
mov
aaa
(bad)
cld
repnz
mov
rcr
add
shl
mov
movs
xor
dec
mov
fnstenv
(bad)
sti
jmp
xchg
imul
xchg
stos
jmp
(bad)
or
retf
xor
loopne
fstp
mov
enter
mov
xchg
stos
in
adc
enter
mov
add
ins
sub
ret
aas
add
fimul
test
cmp
mov
xchg
cmc
pop
pop
iret
adc
mov
cdq
xor
std
clc
inc
pop
adc
mov
fs
icebp
mov
dec
push
or
mov
sahf
pop
iret
xchg
inc
(bad)
scas
mov
sti
fisub
fbstp
hlt
repz
jmp
inc
cmp
lds
push
pop
push
stos
rcr
xor
mov
adc
xchg
shl
loopne
and
jmp
popf
in
pop
and
js
lods
das
fbstp
shl
or
sbb
inc
jns
dec
nop
lock
mov
cdq
xor
hlt
inc
jge
sbb
inc
mov
cdq
inc
js
sbb
inc
sti
mov
ret
(bad)
mov
inc
inc
mov
or
ds
xchg
fwait
cmp
shr
in
cmc
mov
sbb
pop
pop
and
test
fild
les
fst
dec
mov
dec
js
fisttp
mov
jp
add
(bad)
cmp
mov
popf
or
fsubr
pop
int
sbb
iret
push
not
sbb
sub
push
lahf
push
retf
push
dec
push
dec
fmul
fucomp
jmp
movs
push
jl
sbb
and
dec
imul
jge
dec
fmul
mov
jbe
sbb
pop
pop
pushf
ret
jmp
jnp
scas
popa
lods
(bad)
pop
jo
cmps
pushf
inc
fwait
leave
in
and
inc
or
(bad)
push
inc
shl
add
jge
xchg
sub
sahf
sahf
loopne
fsub
cmp
inc
and
es
repz
dec
jmp
(bad)
pusha
xchg
out
mov
fsub
loopne
jmp
xchg
inc
pop
scas
mov
sub
cmp
out
mov
call
push
sahf
ror
cmc
retf
push
adc
mov
dec
sbb
jns
mov
lock
pop
mov
jbe
adc
retf
lock
pushf
sbb
(bad)
call
xor
shl
aaa
ins
push
test
mov
sbb
int
dec
mov
mov
fiadd
xor
cmp
and
daa
or
lods
aaa
aaa
fisubr
pushf
mov
jns
push
jb
lods
rcr
mov
mov
xor
push
pushf
ror
mov
(bad)
pop
jo
cmps
cmp
(bad)
loope
inc
add
add
push
sbb
inc
jns
dec
nop
lock
cmp
sbb
fcmovu
mov
xchg
xor
test
cmps
jnp
clc
jno
jecxz
cmp
and
dec
mov
shr
mov
(bad)
out
aad
pop
retf
push
pusha
pop
pop
mov
les
mov
arpl
lds
push
dec
adc
clc
(bad)
stc
call
pop
cmps
ret
mov
mov
push
scas
data16
cmp
sbb
iret
cdq
not
sbb
test
push
in
xor
stc
mov
xchg
fdivr
mov
sbb
leave
pop
sbb
dec
call
or
or
inc
sub
lods
jle
mov
fidiv
test
loop
xchg
loop
iret
repnz
imul
mov
sub
jmp
mov
pop
repnz
out
mov
pop
xor
out
pusha
ret
fstp
push
fsub
stos
cmp
jb
pop
mov
mov
shl
enter
inc
cs
mov
je
cmp
dec
ja
adc
ret
lea
out
int3
add
mov
inc
push
sahf
ror
daa
lds
push
xchg
lods
lahf
retf
in
iret
rcr
mov
ffree
xor
add
lods
movs
sbb
aas
adc
mov
cmp
mov
inc
mov
stc
call
stos
ins
lods
jmp
fucom
leave
mov
aas
and
call
test
fsubr
ror
xchg
out
leave
jns
sbb
sub
popf
adc
fimul
mov
dec
pushf
push
mov
out
push
mov
cmp
gs
sbb
mov
(bad)
mov
adc
mov
and
inc
or
addr16
mov
and
std
bound
pop
addr16
mov
ret
cmp
inc
inc
mov
lods
inc
ds
xchg
fwait
cmp
int
gs
das
in
cmc
xor
mov
sub
inc
cmp
into
popf
sub
int
mov
jns
into
std
repz
mov
je
pop
and
test
lock
ins
mov
sbb
leave
jae
retf
movs
ret
ins
test
pop
inc
inc
adc
push
in
mov
jae
mov
arpl
and
inc
ror
fmul
jp
or
in
ficom
mov
imul
cdq
pushf
sti
add
dec
add
sub
mov
lahf
lahf
adc
pusha
hlt
sbb
mov
and
js
mov
mov
jge
dec
inc
stos
sbb
fisub
cmp
inc
in
in
cmovae
fsub
xor
push
and
and
sub
sub
mov
stos
push
dec
mov
std
int
mov
repz
mov
imul
imul
inc
addr16
repz
cmp
mov
out
leave
pop
cmp
add
(bad)
cmp
out
adc
cdq
mov
ror
push
pop
int
sbb
iret
stc
not
sbb
test
push
in
xor
rcl
addr16
sbb
in
or
inc
push
retw
pop
scas
aam
scas
ja
les
xchg
call
into
lods
jle
mov
sbb
(bad)
xor
xor
ins
mov
xor
and
xchg
cmp
sub
rol
and
fcomp
xchg
sbb
dec
inc
adc
data16
jae
loopne
fadd
ret
(bad)
mov
(bad)
jmp
retf
gs
movs
or
sub
sbb
mov
dec
pop
enter
mov
add
ins
sub
ret
pop
add
cmp
test
cmp
mov
xchg
jo
adc
or
mov
cdq
xor
std
enter
sar
fs
out
mov
mov
push
xlat
retf
sbb
inc
lahf
push
std
ds
mov
mov
arpl
lds
xchg
cmps
jae
les
xchg
fisttp
sahf
imul
leave
adc
mov
or
popf
adc
ror
jge
inc
pop
dec
rcl
fimul
sti
out
push
loopne
sbb
lds
push
mov
(bad)
mov
xchg
and
and
push
mov
xchg
cmps
dec
jmp
jo
out
loop
(bad)
sti
sub
cmps
sti
repz
and
adc
and
test
jmp
cmp
fdivp
imul
pop
mov
or
in
call
rcl
dec
push
adc
adc
jnp
mov
sub
imul
scas
pusha
lea
sbb
jecxz
cli
ror
dec
iret
or
push
jge
leave
test
out
(bad)
lahf
popf
stos
mov
jae
jmp
push
mov
retf
add
test
pop
sahf
xchg
fist
fiadd
jae
mov
cdq
shr
cmps
dec
push
fucomi
cmc
mov
(bad)
cld
repnz
jg
imul
push
mov
mov
in
add
push
sti
sbb
rcr
mov
out
data16
mov
test
in
xchg
jmp
ret
xchg
and
sahf
or
cmp
fnsave
out
sbb
aaa
and
mov
dec
dec
mov
cdq
sahf
mov
mov
fsubp
movs
mov
xor
repz
imul
push
xchg
push
jle
xlat
xor
repnz
sbb
inc
mov
inc
sub
push
pop
adc
leave
cmp
test
fistp
sbb
sub
lods
jmp
push
jmp
scas
sbb
mov
repnz
adc
sub
dec
push
sahf
pop
out
(bad)
sbb
add
out
test
pop
cmps
pop
js
enter
test
sbb
leave
es
pop
fist
adc
add
arpl
rcl
mov
cwde
inc
mov
stc
jmp
sbb
mov
and
mov
add
out
xor
fsub
ret
jg
adc
mov
mov
aaa
dec
fisubr
sbb
xlat
adc
int
ja
xor
mov
call
push
sahf
ror
jne
push
adc
mov
jns
mov
mov
sbb
mov
adc
dec
xchg
jo
scas
mov
sbb
jne
clc
aad
inc
cmps
adc
sbb
(bad)
mov
test
mov
mov
mov
xchg
xchg
in
push
sbb
sbb
jmp
imul
jge
dec
mov
pusha
cmp
dec
(bad)
sbb
cmp
mov
pusha
xchg
lods
inc
pop
call
mov
in
mov
leave
loop
in
nop
xchg
sbb
jmp
mov
pop
repnz
out
mov
or
pusha
or
ins
xchg
imul
inc
pop
xchg
pop
cdq
inc
outs
push
sbb
ret
or
pop
out
leave
cmp
sbb
(bad)
icebp
cmc
mov
xchg
nop
fwait
cmp
aam
in
jmp
loop
mov
aad
jae
repz
dec
call
lahf
mov
mov
mov
cmp
cmp
cdq
sub
adc
sbb
add
leave
lds
dec
(bad)
and
cdq
push
div
nop
xlat
dec
sub
and
test
nop
es
test
sub
mov
or
jo
inc
inc
xchg
aad
nop
pop
dec
push
cmp
std
cld
pop
mov
lds
int3
pushf
xchg
sbb
in
adc
ret
scas
scas
pop
icebp
leave
es
pushf
fist
adc
mov
dec
xchg
shl
mov
jmp
sbb
mov
sbb
jmp
movs
jp
mov
xchg
(bad)
call
and
rcl
dec
add
dec
call
enter
std
cmp
lahf
cmp
inc
sub
xor
mov
arpl
xchg
rol
ret
loopne
mov
push
cmc
retf
daa
stc
ds
scas
lock
loop
cmp
lock
leave
sar
imul
mov
sbb
pop
test
dec
sub
push
lahf
push
retf
sbb
popf
fld
jmp
xchg
push
xor
bound
test
retf
or
mov
push
sub
mov
jbe
jb
lods
jecxz
xor
(bad)
push
pushf
ror
mov
outs
jg
leave
push
nop
and
inc
xchg
cli
stc
and
sbb
add
sbb
mov
dec
(bad)
mov
jmp
xor
xrelease
dec
jo
adc
cmp
frstor
out
sbb
inc
cdq
(bad)
jmp
and
mov
inc
dec
mov
ret
add
xchg
push
hlt
dec
addr16
dec
fpatan
jmp
dec
adc
cmp
jne
popa
or
idiv
jno
mov
push
jnp
repnz
push
test
imul
mov
pop
icebp
dec
or
sub
jg
repnz
shr
or
mov
cwde
pop
stos
push
ins
fcmovne
sbb
dec
adc
call
mov
fbstp
pop
jno
inc
fmul
fmul
pop
das
or
adc
add
fistp
push
inc
call
pusha
fild
aam
sbb
ret
scas
cs
icebp
leave
in
mov
push
icebp
xor
jo
mov
sub
add
inc
mov
dec
shl
adc
mov
(bad)
in
cmps
enter
aaa
sbb
out
push
ret
retf
xor
loopne
fstp
mov
enter
mov
xchg
stos
sbb
enter
mov
add
ins
sub
xor
mov
mov
call
loope
pop
mov
repz
cmp
movs
ret
ret
out
pop
test
rcr
test
or
jmp
sbb
jno
lahf
inc
bound
push
test
cwde
mov
aaa
stos
push
cmc
fcmovne
jmp
xor
sti
stos
rcr
loopne
and
les
sbb
shr
or
mov
push
sub
mov
jbe
sbb
xchg
sbb
add
mov
mov
iret
jg
leave
push
nop
jb
scas
inc
xchg
repnz
and
sbb
add
mov
add
jge
xchg
and
jno
push
fisub
cmp
cli
xor
cmp
enter
into
jmp
(bad)
popa
xchg
out
(bad)
pop
and
mov
enter
(bad)
fisubr
sbb
xlat
adc
int
ja
xor
mov
call
push
sahf
ror
mov
push
adc
jne
dec
sbb
jns
mov
add
mov
aam
sbb
mov
test
cmp
shl
clc
mov
sbb
pop
test
dec
sub
push
lahf
push
sub
xchg
out
and
repz
fnstenv
jno
jl
or
xlat
and
push
dec
call
loopne
xchg
stos
jge
jns
adc
imul
je
mov
movs
mov
fucom
cmp
mov
loop
in
nop
xchg
sbb
mov
inc
std
dec
leave
popf
mov
dec
mov
xchg
lock
xor
or
inc
ins
xchg
popf
mov
mov
cdq
inc
pop
push
pop
pop
fs
repz
mov
inc
inc
mov
sbb
imul
imul
fsubp
stos
pop
push
mov
shr
xor
pop
loopne
aas
into
sbb
mov
lock
inc
sbb
loope
fs
sbb
pop
leave
sbb
retf
movs
ret
ins
test
push
sbb
test
push
in
xor
fnstenv
popf
retf
mov
sub
data16
scas
ja
add
or
adc
jae
lods
pusha
retf
add
jecxz
fwait
out
adc
ret
scas
cs
icebp
leave
es
sbb
adc
mov
loopne
and
xchg
rcl
aas
or
mov
stc
jmp
sbb
mov
and
mov
jecxz
(bad)
sti
xor
fsub
mov
adc
cmp
xor
xchg
test
cli
cdq
movs
push
sahf
mov
jmp
gs
pop
sbb
sub
fist
dec
(bad)
pop
out
jmp
sti
pop
es
rcr
repz
sbb
pop
sub
mov
and
and
mov
inc
stos
pushf
adc
mov
test
push
retf
div
retf
xor
mov
sbb
in
push
sbb
sbb
and
imul
arpl
rol
pop
int
push
jbe
sub
jno
push
add
shl
retf
out
stos
(bad)
(bad)
jnp
jg
scas
loope
pusha
sar
or
fdiv
sub
out
dec
shl
sbb
pop
xor
popf
push
mov
inc
mov
mov
xor
cmps
in
popa
outs
mov
adc
cmp
xor
push
int
xor
cdq
sahf
sub
jnp
mov
xchg
repz
adc
push
ins
in
jmp
pop
movs
dec
call
mov
test
push
lock
imul
sbb
ret
mov
adc
retf
cmp
cdq
nop
loop
ror
and
ror
sbb
in
xlat
mov
inc
and
inc
push
rcr
dec
pop
retf
pop
imul
inc
xchg
adc
xchg
adc
cmp
push
outs
les
cmp
or
mov
fmul
fwait
scas
dec
push
xchg
loop
iret
nop
stos
inc
fwait
(bad)
imul
dec
cmp
mov
ror
dec
aam
xchg
xchg
call
ins
xchg
popf
mov
mov
cdq
inc
push
push
cwde
outs
movnti
imul
ds
cmc
ins
dec
cmp
imul
fsubp
xchg
fisttp
or
jg
dec
call
sbb
test
lahf
lds
add
mov
rol
sub
nop
mov
retf
lds
dec
(bad)
push
hlt
mov
fisttp
sbb
or
mov
sbb
mov
popf
int3
stc
mov
clc
mov
or
and
add
adc
sbb
jne
gs
jmp
jl
xor
jp
mov
inc
mov
fst
pop
(bad)
daa
cmp
cmps
neg
leave
es
pop
fist
fisttp
mov
dec
xchg
add
jb
mov
rol
and
retf
dec
not
push
fisub
xchg
imul
cmp
or
mov
(bad)
jmp
retf
cmp
loopne
fstp
out
scas
enter
dec
push
push
xchg
stos
in
mov
xor
xor
pop
push
mov
push
mov
dec
stos
aam
sti
stos
mov
jnp
mov
push
call
mov
aam
mov
add
and
ins
movs
ret
ins
(bad)
xlat
jmp
shl
push
ins
loop
clc
stos
add
ja
sbb
(bad)
mov
ret
mov
xchg
mov
mov
sub
test
inc
scas
ja
add
or
daa
fst
lods
lds
jmp
ret
pushf
sahf
xchg
fwait
(bad)
pop
jo
and
sti
inc
inc
icebp
and
mov
mov
shl
or
push
and
inc
jo
and
sbb
pop
inc
xchg
adc
enter
ret
(bad)
mov
(bad)
jmp
(bad)
pusha
xchg
and
int3
pop
and
mov
dec
dec
mov
inc
adc
mov
sub
(bad)
ret
dec
add
ret
mov
pop
test
cmp
mov
mov
jmp
cld
repnz
sub
pop
add
mov
adc
add
nop
or
mov
jbe
xor
into
adc
fisttp
dec
fisttp
cwde
mov
test
leave
test
cld
mov
push
xchg
js
add
pop
retf
rcr
in
inc
(bad)
fmul
push
cmp
jge
lock
push
sbb
sub
jne
inc
push
retf
stos
xchg
fimul
fisubr
pop
jb
lods
fmulp
dec
mov
sti
push
(bad)
dec
pop
push
popa
mov
ficom
mov
scas
jg
mov
xor
push
out
repnz
(bad)
pop
xchg
xchg
pop
mov
mov
lock
add
or
mov
mov
cdq
inc
cdq
mov
(bad)
mov
jecxz
bound
cmp
(bad)
xor
fadd
xchg
xchg
fwait
out
cmp
fisub
enter
jmp
gs
fild
aam
neg
adc
inc
mov
and
dec
int
lock
mov
sbb
repnz
popf
imul
pop
lock
mov
movs
cdq
inc
adc
xor
mov
not
sbb
gs
dec
sub
push
lahf
push
sub
adc
cmc
mov
jns
sti
mov
shl
retf
daa
sbb
shr
nop
jbe
cld
xchg
cmp
xor
cvtpi2ps
mov
add
inc
mov
loope
dec
lea
jge
int3
scas
rcr
ss
xlat
fdiv
sti
sub
pop
call
mov
cmps
mov
xor
ror
neg
mov
in
and
enter
ins
or
mov
fldenv
mov
fs
xchg
enter
aam
sub
ret
and
test
mov
mov
in
mov
pop
pop
dec
pop
dec
pushf
jecxz
mov
imul
shl
(bad)
push
icebp
ret
sbb
inc
pop
adc
cs
jg
lods
push
sbb
rcr
cli
pop
xor
inc
adc
dec
add
cli
mov
cmp
xor
nop
cwde
nop
sbb
sbb
out
jge
das
or
imul
in
cmps
xchg
stos
jge
imul
in
dec
jne
adc
adc
jg
leave
push
nop
in
scas
inc
xchg
ret
sub
pop
mul
jecxz
sbb
mov
dec
(bad)
mov
jmp
xor
adc
and
mov
xchg
in
cmovae
fisub
xor
push
and
add
mov
adc
mov
rol
(bad)
pushf
in
sahf
dec
movs
adc
fst
imul
lods
pop
call
lahf
mov
mov
mov
cmp
outs
ins
add
sub
(bad)
jmp
leave
lds
dec
sbb
xor
mov
pop
inc
inc
clc
mov
je
pop
iret
sbb
mov
int
jae
ror
retf
pop
imul
inc
les
out
nop
cmc
add
adc
dec
push
dec
mov
xchg
sbb
fiadd
xor
sub
mov
fldcw
icebp
sbb
pop
bound
cmp
or
push
mov
rcl
dec
rol
(bad)
pop
and
pop
ret
loope
fwait
xor
push
sub
cmps
fidiv
test
gs
xchg
test
lds
fnsave
xchg
out
call
loopne
jmp
xchg
inc
pop
add
aad
imul
jp
popa
pop
mov
pop
in
cmp
mov
clc
sti
pop
es
rcr
repz
sbb
pop
sub
mov
repnz
dec
mov
ss
(bad)
sbb
iret
mov
nop
loop
les
pop
test
push
in
dec
push
dec
shr
xchg
or
jl
pop
sbb
js
mov
das
or
push
out
xchg
fild
sub
lods
pusha
sti
xchg
call
movs
mov
cld
loop
dec
cmp
fdiv
sbb
or
inc
add
sbb
mov
pop
dec
shl
adc
mov
add
push
(bad)
mov
cmps
push
fisubr
and
adc
and
test
fsubr
mov
sbb
push
mov
ret
call
mov
movs
sti
and
out
jae
mov
jecxz
push
xchg
mov
jbe
add
mov
pushf
or
inc
push
hlt
mov
fld
adc
adc
adc
ja
loope
popa
test
imul
scas
(bad)
push
(bad)
xchg
xor
pop
lock
data16
scas
ja
inc
xchg
jl
xor
punpckhdq
lock
mov
loope
fst
pop
(bad)
daa
(bad)
rol
jno
in
mov
jp
xor
rcl
add
sbb
out
es
or
mov
xor
ror
neg
mov
loope
cmps
sbb
push
gs
ins
cmovae
leave
add
retf
jge
out
dec
out
xchg
dec
xor
adc
enter
mov
add
ins
sub
ret
call
mov
movs
sti
and
imul
lahf
retf
in
rol
dec
mov
fwait
push
hlt
mov
pop
add
or
sub
nop
jg
repnz
aas
mov
add
test
mov
fcmovne
sbb
dec
mov
ficomp
dec
cs
fbstp
and
add
sbb
xchg
fmul
pop
das
or
xchg
out
xchg
fistp
dec
inc
call
pusha
jecxz
ret
fwait
xchg
adc
ret
scas
cs
icebp
leave
in
mov
jp
addr16
rcl
and
addr16
test
and
and
inc
or
jge
sbb
inc
mov
cdq
inc
jb
push
outs
push
ret
sbb
daa
out
leave
cmp
sbb
(bad)
dec
cmc
dec
dec
inc
xchg
(bad)
jmp
cmps
sti
outs
imul
fsubp
movs
mov
int
cmp
jg
dec
call
cmp
test
nop
jl
lahf
lds
add
mov
mov
fwait
nop
sub
add
retf
lds
dec
(bad)
ss
push
lock
fisttp
seto
dec
sub
ret
sbb
lahf
sub
mov
scas
mov
adc
(bad)
jmp
retf
xchg
push
fst
pop
inc
push
cmps
and
sub
jecxz
sub
mov
aad
mov
add
inc
mov
add
sub
push
xchg
test
xchg
dec
call
mov
or
mov
xor
ror
test
or
xchg
sbb
and
enter
adc
clc
xor
enter
rcl
dec
or
in
dec
mov
add
mov
sub
fld
repz
jne
jae
(bad)
cld
mov
imul
in
(bad)
jmp
jecxz
movs
mov
mov
and
or
aad
cmp
xchg
jo
mov
xor
jne
clc
pop
push
mov
mov
pop
scas
imul
jns
sbb
ficomp
(bad)
mov
test
mov
adc
cmp
rcl
cdq
pushf
xchg
sbb
mov
push
mov
xor
jecxz
js
xchg
cmps
enter
in
and
add
dec
mov
test
adc
lds
xchg
adc
jp
mov
shl
movs
inc
add
(bad)
jmp
fnstcw
mov
mov
cwde
push
sub
sub
mov
daa
sub
mov
int
js
push
dec
mov
xor
pop
mov
xor
into
pop
movs
pop
loopne
call
rcl
mov
call
adc
jnp
mov
clc
add
std
mov
adc
retf
repz
push
jl
xor
test
jecxz
cli
xlat
xor
jb
mov
inc
aam
mov
add
cli
or
sbb
dec
popf
(bad)
jmp
add
add
add
sub
dec
push
outs
shr
mov
xor
add
add
xor
scas
mov
lahf
jecxz
(bad)
cld
repnz
and
rcr
add
mov
ret
and
inc
mov
jo
dec
and
inc
or
push
pop
add
lahf
outs
aas
add
outs
or
or
and
mov
sbb
sbb
(bad)
xor
in
inc
push
xchg
nop
fwait
cmp
int
gs
das
in
jmp
gs
pop
sbb
into
dec
adc
loopne
mov
and
jb
mov
mov
cmp
outs
inc
add
sub
adc
sbb
add
leave
lds
dec
sbb
xor
mov
pop
inc
inc
clc
mov
(bad)
mov
cmp
mov
jns
(bad)
dec
pop
retf
pop
imul
inc
xchg
push
in
inc
pop
xchg
adc
cmp
(bad)
cmp
stos
jecxz
sub
mov
aad
mov
add
dec
fst
addr16
scas
rcr
ss
fdiv
sbb
mov
sbb
mov
mov
and
pop
(bad)
xchg
mov
xchg
cmc
(bad)
xchg
xchg
sbb
inc
mov
jecxz
inc
and
cmps
pop
repz
dec
xlat
push
fld
mov
(bad)
out
adc
mov
test
jb
adc
imul
out
pop
fld
and
arpl
mov
loopne
pop
cmp
mov
jae
mov
jecxz
push
xchg
xor
or
xchg
push
repnz
pop
icebp
and
nop
jg
bnd
icebp
ss
js
das
mov
inc
mov
stc
retf
xchg
scas
sbb
mov
call
dec
rcr
jae
add
retf
ret
cmp
add
retf
stos
xchg
fimul
sbb
pop
sbb
cmp
xor
inc
sbb
scas
popa
mov
jg
(bad)
adc
popa
xchg
cwde
add
mov
in
mov
pop
and
clc
adc
xchg
cmc
(bad)
xchg
xchg
sbb
push
inc
sbb
or
xor
into
clc
xor
mov
gs
movs
sti
(bad)
sub
sbb
or
jne
and
sub
rcr
mov
(bad)
jae
popf
repz
mov
imul
out
jle
adc
jmp
(bad)
in
imul
sbb
ret
mov
adc
retf
cmp
test
pop
pushf
dec
and
ror
sbb
sub
lods
jmp
sub
sbb
arpl
test
xor
xchg
mov
push
cmp
sub
dec
push
mov
shr
fst
mov
scas
inc
sbb
scas
popa
dec
inc
cli
adc
jg
(bad)
adc
pusha
xchg
cwde
add
inc
sar
mov
pop
(bad)
pop
and
mov
mov
rcr
push
in
xchg
jmp
ret
push
ins
fstp
mov
fldenv
pop
loop
adc
add
jecxz
enter
or
fimul
popf
lea
movs
popf
out
mov
mov
call
xlat
stos
pop
std
shr
xor
pop
push
iret
ss
fdivr
movlhps
mov
out
pushf
pop
dec
shl
cli
sub
(bad)
inc
sbb
nop
cmp
lahf
sbb
dec
sbb
lahf
sub
xchg
stos
(bad)
lahf
fisttp
test
or
and
dec
int
mov
push
test
mov
mov
mov
mov
mov
or
(bad)
sbb
fucomi
cmc
mov
(bad)
pushf
repnz
(bad)
pop
push
xchg
push
push
mov
mov
xor
inc
mov
xor
fsub
sbb
adc
mov
fs
and
xor
aam
cmp
movs
(bad)
(bad)
mov
(bad)
out
cmp
push
and
sar
xlat
adc
int
ja
xor
mov
call
push
sahf
ror
mov
jns
rol
in
iret
rcr
cmovp
or
add
inc
mov
icebp
sti
jecxz
sbb
mov
test
cwde
mov
aaa
stos
xchg
pop
jmp
jmp
popf
(bad)
jmp
sbb
xor
sub
dec
push
sahf
adc
jae
xor
shr
dec
push
les
scas
sahf
adc
pop
or
xor
inc
cwde
fadd
mov
and
fcomp
sbb
xchg
xchg
cwde
rcr
or
inc
stc
repnz
movs
ret
jb
xor
cmps
dec
pop
fimul
cmp
(bad)
mov
(bad)
out
adc
adc
icebp
and
popa
mov
sahf
ret
bound
pop
cmc
xor
pop
cmp
cmp
popa
push
mov
shl
(bad)
jp
aas
in
mov
jnp
mov
adc
sub
faddp
mov
push
iret
dec
test
ror
dec
push
lahf
push
sub
xchg
inc
xchg
in
pop
(bad)
mov
mov
fnstenv
jno
jl
or
out
pop
dec
fdiv
sub
call
loopne
xchg
stos
jge
jns
adc
icebp
mov
(bad)
fisubr
sbb
jmp
scas
inc
fsubr
clc
jo
arpl
rcl
clc
jb
mov
rol
sub
retf
inc
xor
bound
test
stos
icebp
mov
dec
adc
inc
pop
dec
shl
(bad)
(bad)
psubw
call
sbb
outs
inc
mov
mov
test
sub
xchg
push
inc
mov
ret
dec
jg
shl
mov
in
call
fchs
call
dec
xchg
(bad)
jecxz
repz
sahf
div
jmp
sbb
loopne
enter
add
rcr
movs
jmp
movs
ret
sbb
push
stos
mov
jnp
inc
in
xlat
xor
stos
loope
xor
xor
(bad)
push
(bad)
xchg
lock
xchg
xchg
in
inc
sbb
adc
out
sub
fisub
dec
outs
les
xchg
sbb
add
add
push
ins
mov
iret
js
jle
scas
pop
adc
shl
or
add
dec
js
add
cwde
shr
mov
rcr
cmp
xchg
mov
mov
mov
and
movs
pop
xchg
sbb
cli
in
push
inc
mov
cmps
data16
jp
out
and
and
test
int3
out
mov
sbb
or
aas
stos
shr
mov
sbb
mov
repz
cmp
lock
pushf
sbb
ret
mov
adc
retf
cmp
test
mov
sbb
mov
pop
add
fisttp
or
aaa
mov
ins
in
mov
pop
sub
les
xchg
or
sub
leave
xchg
fwait
adc
loopne
cmp
or
or
dec
push
cmps
js
dec
jg
scas
push
popa
cmp
jb
js
in
add
xor
(bad)
adc
sub
mov
push
xchg
imul
push
or
dec
pop
adc
rcl
movs
dec
cmps
inc
test
inc
mov
or
in
bound
add
mov
inc
mov
ret
out
mov
push
jne
pop
std
(bad)
mov
adc
mov
loopne
jmp
mov
sbb
mov
inc
cmp
add
rcr
test
or
enter
dec
pushf
inc
stos
cwde
adc
mov
cmc
add
jne
sahf
les
cmps
inc
mov
test
mov
(bad)
ja
cmps
jae
inc
push
cmp
and
enter
and
(bad)
jp
ror
xchg
out
leave
dec
jbe
jb
lods
rcr
(bad)
push
push
pushf
shr
adc
loopne
jb
enter
pusha
repnz
and
add
or
and
xor
adc
jb
js
xchg
sub
cmp
aam
sbb
not
pop
stos
cmp
jb
pop
mov
mov
shl
inc
cs
mov
test
sub
cmp
ret
(bad)
sbb
sahf
dec
movs
adc
fst
imul
lods
pop
call
lahf
mov
mov
mov
cmp
outs
push
add
sub
(bad)
call
leave
lds
dec
(bad)
push
div
nop
xlat
dec
sub
ret
push
retf
clc
test
popf
int3
stc
mov
in
sti
or
sahf
je
mov
sub
adc
sbb
jmp
idiv
dec
mov
jecxz
or
mov
aad
mov
add
dec
loope
and
xchg
jmp
lahf
adc
pusha
lock
mov
adc
or
xor
dec
(bad)
adc
xchg
cmc
(bad)
xchg
xchg
sbb
pusha
mov
jecxz
inc
and
cmps
pop
repz
mov
xchg
(bad)
mov
(bad)
out
cdq
hlt
mov
daa
sub
mov
push
dec
mov
ins
int
mov
repz
mov
imul
in
imul
inc
addr16
repz
cmp
push
and
popf
sbb
ret
mov
adc
retf
cmp
mov
fstp
sbb
sub
push
lahf
cmp
lods
fldcw
ret
mov
mov
add
test
inc
add
add
add
sub
dec
push
sahf
adc
jae
xor
shr
test
scas
mov
lahf
jecxz
enter
adc
bound
sub
mov
adc
and
dec
xor
dec
mov
fnstenv
mov
xchg
sbb
add
movs
jp
mov
pop
jnp
enter
(bad)
cmps
inc
test
jb
inc
mov
jecxz
and
es
imul
and
xchg
jle
mov
das
sbb
mov
add
adc
retf
popa
push
mov
shl
(bad)
jp
aas
in
mov
jnp
mov
adc
sub
cmp
and
iret
aas
int
mov
test
push
test
cwde
mov
aaa
stos
xchg
inc
sbb
mov
call
retf
rcr
jae
mov
or
mov
push
sbb
add
scas
shl
aad
pushf
xchg
sbb
and
enter
pusha
jle
scas
pop
icebp
leave
in
mov
fdivp
xor
sbb
mov
sub
add
inc
mov
dec
shl
adc
mov
or
fwait
sub
daa
lahf
(bad)
xlat
(bad)
cdq
into
clc
xor
cmps
pop
push
xchg
jnp
rcl
adc
adc
push
xchg
cmc
(bad)
pop
push
enter
mov
das
cli
cmc
hlt
imul
pusha
mov
retf
popa
push
mov
pop
std
cmp
mov
clc
sti
pop
es
rcr
repz
mov
inc
mov
sbb
ins
movs
dec
mov
inc
stos
cwde
adc
mov
sbb
dec
push
retf
push
cmps
fild
stc
mov
sub
imul
jae
ror
sbb
test
mov
pop
xchg
lock
pop
mov
lds
jmp
sbb
loope
dec
loope
and
jmp
repnz
fstp
loop
add
or
mov
jae
mov
mov
and
ins
mov
xor
adc
xor
dec
mov
dec
nop
inc
and
movs
pop
repz
fcmovu
push
lds
leave
shl
hlt
sbb
sbb
add
mov
rol
pushf
sub
repz
out
ss
mov
loopne
pop
daa
setae
jecxz
or
fsubrp
dec
in
clc
out
cdq
aaa
test
sub
retf
ret
sbb
dec
stc
adc
retf
repz
inc
hlt
push
sbb
mov
adc
inc
std
xlat
xor
or
xchg
fsubr
(bad)
push
retf
into
sub
adc
ins
inc
cmps
and
xchg
add
jo
push
mov
aam
inc
xchg
fst
fld
sub
sub
sahf
xchg
fwait
inc
das
adc
jmp
mov
and
add
push
call
xchg
sbb
mov
and
movs
xchg
pop
fst
pop
fisub
xchg
pop
fsub
mov
add
xchg
enter
aam
sub
fidiv
retf
and
imul
adc
(bad)
jmp
adc
dec
adc
cmp
mov
clc
sti
pop
es
rcr
repz
mov
sbb
add
mov
and
iret
mov
inc
mov
test
jge
push
dec
sbb
movs
fild
stc
mov
out
sti
dec
into
mov
in
pop
mov
jp
xchg
retf
rcl
dec
xor
dec
cmp
adc
and
ret
mov
fs
lods
loopne
and
or
dec
jae
mov
out
push
xchg
sbb
mov
sub
inc
mov
test
and
and
inc
or
movs
addr16
mov
lahf
outs
aas
add
pop
dec
or
lods
or
in
bound
or
cdq
sahf
ret
jmp
cmp
mov
repz
push
mov
shl
(bad)
jp
aas
in
mov
xor
sub
fwait
add
sub
nop
or
add
retf
lds
dec
(bad)
xchg
out
(bad)
and
popf
fmul
repnz
stos
mov
jnp
inc
in
xlat
xor
add
xchg
fmul
(bad)
push
retf
rcr
test
dec
mov
push
cmp
and
sub
test
xchg
stos
(bad)
stos
ror
xchg
out
leave
popa
mov
mov
mov
jnp
shr
rcr
sub
dec
addr16
js
lods
scas
fbstp
sub
add
add
jmp
dec
(bad)
mov
xchg
and
and
push
mov
inc
ins
xchg
les
mov
fwait
adc
dec
mov
(bad)
mov
dec
les
cmp
(bad)
jno
sbb
push
push
outs
mov
cmc
clc
pop
mov
cmc
mov
add
bound
into
inc
mov
icebp
icebp
dec
stos
pop
out
cmp
mov
clc
sti
pop
es
rcr
repz
mov
inc
mov
sbb
ins
movs
ret
mov
sbb
dec
sbb
xlat
or
test
leave
test
scas
cli
pop
cmp
jmp
or
mov
xor
xchg
add
xchg
movs
sbb
outs
pop
mov
mov
lods
pusha
jae
mul
adc
add
pop
icebp
leave
outs
mov
loopne
and
xchg
cmp
sub
rol
and
retf
sub
pop
xchg
fistp
stos
icebp
mov
dec
adc
enter
or
inc
mov
add
sbb
add
mov
push
dec
mov
ret
pop
inc
mov
push
jne
pop
jecxz
cmp
sbb
adc
mov
loopne
jmp
mov
clc
out
cdq
adc
pop
sub
(bad)
enter
test
hlt
mov
fwait
or
cwde
retf
inc
sub
jge
test
lods
iret
and
cld
mov
test
fcmovnu
jmp
into
ret
xchg
adc
adc
ins
inc
cmps
and
xchg
add
jo
push
mov
aad
inc
xchg
fst
stc
push
imul
inc
pop
scas
shl
aaa
(bad)
xchg
cld
loop
xor
push
jno
adc
sbb
cwde
add
mov
gs
in
inc
mov
out
dec
aam
inc
fisttp
adc
mov
movd
adc
rcl
popa
int
inc
test
jp
inc
mov
sbb
sub
gs
sub
sub
mov
fsubr
push
and
rcr
mov
inc
test
fild
les
fst
dec
mov
in
(bad)
jmp
jecxz
movs
mov
out
loop
cmp
lock
cmps
push
sar
imul
mov
pop
movs
fisub
ja
inc
push
sar
aad
fbld
shl
push
repz
jmp
inc
cmp
inc
dec
push
xchg
add
shr
fcmovne
xchg
fwait
adc
loopne
cmp
or
cdq
fmul
jnp
dec
push
xchg
inc
fwait
(bad)
imul
data16
cwde
add
or
inc
mov
rcl
xchg
mov
ins
xchg
adc
mov
or
fld1
jne
popf
out
push
ret
retf
jne
cmps
movs
dec
pop
sub
sbb
lods
stos
in
push
adc
enter
mov
add
ins
sub
ret
sahf
or
les
pop
mov
arpl
lds
popa
inc
mov
mov
imul
inc
sbb
test
call
push
xchg
push
hlt
xor
retf
ror
dec
add
mov
sbb
dec
sbb
jp
pop
sbb
cli
les
les
push
add
xchg
stos
lds
jne
push
(bad)
sbb
fist
out
dec
adc
push
cli
mov
push
push
mov
xchg
lahf
push
mov
clc
jb
movs
loop
xor
xchg
cwde
in
xchg
sub
mov
xchg
sbb
push
pop
cmps
mov
fcmovbe
or
sbb
jp
xchg
push
movs
fcom
ds
dec
mov
cwde
sahf
inc
inc
dec
inc
mov
cdq
sahf
out
and
in
cmc
xor
in
lea
iret
rol
mov
inc
sahf
sub
xchg
pop
push
dec
(bad)
enter
pop
adc
ret
inc
and
aas
add
inc
pop
adc
cmp
fnstenv
ror
fst
pop
test
in
pop
test
aaa
dec
push
in
cmps
push
lea
retf
pop
clc
sub
xchg
retf
(bad)
shr
retw
mov
cdq
or
push
mov
fcomi
add
mov
lods
js
xchg
jb
mov
jno
aad
ret
push
add
cmp
mov
or
sar
jo
fwait
add
arpl
setbe
or
push
retf
and
jg
stc
mov
xor
push
aas
fwait
retf
in
mov
(bad)
mov
rcr
call
xlat
(bad)
(bad)
mov
jecxz
inc
xchg
adc
inc
push
xchg
inc
lahf
not
icebp
je
push
cs
jne
dec
test
dec
icebp
int3
sbb
lods
adc
mov
push
mov
enter
sti
inc
in
or
xchg
cmp
dec
pushf
mov
pop
push
xor
stc
add
cmp
sub
ret
xchg
pop
xor
loop
gs
adc
dec
push
add
arpl
jb
arpl
jl
pop
sbb
xchg
test
pop
iret
push
adc
cmp
mov
les
mov
stos
push
dec
mov
js
lds
(bad)
xor
mov
fnsave
inc
and
(bad)
fdiv
repz
std
shr
mov
dec
mov
mov
out
ficom
sti
xor
shl
retf
fs
inc
cmp
stos
cmp
(bad)
repz
movq
ret
xchg
dec
arpl
out
inc
push
xchg
inc
dec
mov
bound
sub
loopne
xchg
lods
outs
inc
adc
add
call
adc
inc
sbb
and
and
retf
mov
xor
bound
push
sub
mov
pop
mov
push
pcmpgtw
xlat
push
or
mov
sub
ret
xchg
pop
xor
loop
gs
inc
cmp
dec
stos
mov
inc
js
cli
into
push
sar
mov
sub
mov
xchg
lods
push
stos
std
(bad)
and
mov
mov
cmp
aam
inc
cmp
mov
cld
loop
inc
fdiv
xchg
ror
in
test
or
add
jmp
pop
and
fsub
aad
push
xchg
dec
mov
(bad)
push
lods
shr
(bad)
aas
fisttp
(bad)
jnp
sahf
jae
iret
lahf
icebp
cwde
ret
leave
ror
rcl
add
in
push
inc
test
mov
std
mov
xlat
(bad)
jge
fsub
sub
call
mov
test
mov
hlt
test
sahf
adc
jecxz
popf
fwait
add
jo
pop
adc
jbe
add
lods
cmps
pop
sub
inc
clc
lds
lock
xchg
jle
sahf
sbb
cli
popf
dec
add
(bad)
lahf
cmp
imul
(bad)
fcom
inc
out
sub
ret
fisubr
jmp
dec
ja
enter
lods
adc
xor
aas
mov
retf
icebp
sbb
jo
push
sar
adc
mov
inc
sar
je
or
inc
xor
pop
or
add
inc
mov
aad
repz
stos
jmp
mov
mov
(bad)
lods
mov
out
and
mov
out
hlt
add
pop
ror
pop
mov
inc
test
lods
(bad)
xor
push
add
mov
mov
mov
das
xlat
add
mov
dec
scas
mov
stos
push
aas
(bad)
pop
out
pop
sub
jbe
sub
push
sbb
mov
jmp
aam
sub
push
test
sbb
out
mov
int
test
lods
rcr
dec
jmp
adc
mov
mov
cmc
add
jl
or
xchg
ror
xchg
mov
data16
ds
jle
mov
pop
inc
pop
push
fdivr
sbb
fyl2x
xor
retf
test
xchg
(bad)
nop
cdq
cmp
or
and
scas
cmc
out
jo
retf
repnz
je
pop
adc
jl
cmp
mov
pop
inc
sar
push
scas
std
int3
inc
aas
repnz
out
sub
mov
mov
out
or
mov
xchg
add
leave
pop
pop
fld
jo
(bad)
sub
ins
adc
out
paddq
mov
cmp
mov
inc
inc
icebp
mov
xor
adc
shl
add
mov
cmp
sbb
fs
dec
aaa
(bad)
push
sub
movs
mov
ds
mov
js
pop
fisttp
add
cmp
adc
inc
cmc
mov
les
jne
out
fwait
xchg
dec
jns
enter
pop
push
fcom
xor
sub
dec
pop
jo
sub
cmpxchg
jmp
cld
mov
fcmovbe
xor
out
das
dec
mov
sub
xchg
jbe
popf
jns
dec
(bad)
call
scas
dec
(bad)
ja
popf
jp
lea
mov
xor
fwait
loop
vaddsubps
mov
enter
cmp
repnz
in
mov
int
in
mov
add
test
bound
jns
ss
sti
lods
pop
mov
dec
mov
xor
mov
cdq
sub
adc
das
add
lods
cmps
sbb
dec
mov
xchg
or
add
gs
(bad)
test
retf
dec
inc
xor
adc
dec
movs
push
leave
or
jns
pop
xor
sub
jae
mov
mov
rcr
jnp
leave
pop
mov
ficom
xchg
into
xchg
(bad)
das
test
rcr
cmc
popa
cmp
mov
stos
test
mov
add
pop
fistp
pop
mov
enterw
mov
cmps
(bad)
cmps
ret
cmps
ins
lock
jns
ja
(bad)
jb
dec
fnstsw
int3
pop
sub
rol
xor
leave
or
cmp
mul
fld
sub
movs
(bad)
pop
adc
pop
pop
shr
or
add
in
mov
mov
jl
scas
rol
fcomp
je
and
add
inc
mov
shl
and
mov
test
jp
movs
dec
sbb
scas
mov
fld
mov
add
std
xor
pop
fprem
dec
div
jl
add
push
push
add
and
fs
and
nop
dec
fs
nop
mov
jbe
test
cwde
pop
mov
test
(bad)
repz
cmp
push
enter
sub
push
leave
hlt
inc
test
jo
imul
adc
enter
test
leave
push
fidivr
push
sbb
dec
vpshuflw
mov
int3
inc
cmp
adc
add
dec
cdq
push
es
dec
mov
mov
sub
cdq
neg
mov
mov
mul
loopne
ret
loopne
pmullw
(bad)
dec
dec
inc
lahf
retf
jecxz
(bad)
mov
mov
jae
aaa
add
sbb
cmp
cs
mov
jo
retf
test
scas
je
leave
dec
addr16
out
lahf
push
xor
bound
dec
jbe
jmp
mov
in
movs
mov
jecxz
xor
xchg
dec
stos
xchg
add
pop
stos
pop
setne
ror
cmps
lods
adc
sub
ret
mov
fcomp
pusha
js
lods
cs
movs
cmc
xchg
sub
js
es
add
adc
clc
xor
mov
push
fsub
sbb
aam
stc
mov
xchg
inc
mov
jnp
out
cmps
mov
retf
(bad)
pop
(bad)
repz
aam
and
scas
xchg
sub
mov
hlt
add
aas
ret
retf
mov
imul
mov
out
mov
arpl
jg
data16
fsub
jae
jecxz
jbe
cmc
mov
mov
or
ja
push
pop
mov
sahf
imul
jmp
loop
fsubr
push
dec
dec
pop
mov
rcr
pop
jne
(bad)
push
sahf
loope
retf
xor
in
jmp
hlt
adc
hlt
inc
(bad)
push
add
add
fidivr
fucompp
xchg
outs
or
movs
std
jmp
hlt
jle
jp
add
jno
sub
int
les
and
push
dec
xor
xchg
adc
es
mov
sub
xchg
jbe
popf
je
cmp
movs
ret
lock
test
(bad)
fidivr
push
retf
mov
(bad)
cmc
fcomi
(bad)
lods
test
pushf
pop
mov
and
or
adc
xor
adc
leave
addr16
aad
jno
xor
inc
ins
sub
int3
repnz
popf
sbb
push
cmp
or
outs
aam
dec
sbb
inc
sub
pop
retf
icebp
call
jg
mov
aam
sbb
std
mov
ror
jmp
dec
ds
je
(bad)
aam
jl
ret
add
sbb
scas
ja
test
adc
pop
ret
(bad)
cli
movs
mov
pop
mov
cmp
mov
cld
or
out
push
inc
fwait
inc
and
rcr
add
inc
dec
je
jge
leave
cmps
jl
xlat
mov
inc
jecxz
call
stos
lea
mov
bound
lahf
(bad)
js
fld
(bad)
(bad)
lods
sti
xor
lahf
cli
cwde
add
test
daa
inc
rol
ins
sbb
out
jne
cmp
rol
adc
inc
pop
cmp
leave
sti
int
fadd
mov
pop
jno
pop
fistp
xor
jo
pop
xchg
fld
call
or
mov
and
push
outs
movs
ret
ins
test
out
mov
test
popa
in
jg
push
dec
pop
cmp
dec
and
adc
inc
cmp
dec
movs
jecxz
arpl
cwde
adc
pop
dec
inc
sbb
je
sub
addr16
sahf
out
scas
push
and
into
add
push
lahf
pop
pop
mov
movs
(bad)
fsubr
add
inc
arpl
(bad)
in
mov
cmc
jge
inc
mov
rcr
daa
sbb
xchg
aaa
sbb
stos
xor
xchg
clc
popf
shr
mov
push
lds
jg
jnp
out
xor
sbb
call
adc
and
daa
hlt
xor
and
xor
imul
call
adc
push
add
sub
fisttp
pop
add
idiv
or
aam
push
add
dec
xchg
push
mov
xor
xor
and
daa
lods
movs
aam
jno
pop
cmp
mov
adc
inc
aas
push
mov
ret
sub
int3
push
and
mov
cmp
add
add
add
setne
xchg
sbb
jecxz
adc
(bad)
(bad)
mov
lds
xchg
add
inc
fsub
xchg
ror
in
test
add
test
sub
js
cmp
pop
xchg
sbb
sub
pop
xor
imul
adc
cwde
inc
and
call
pop
jle
lds
out
ror
int3
jecxz
mov
iret
mov
movs
aad
mov
dec
pop
jg
aam
mov
and
test
ds
in
xchg
jno
push
xchg
xor
ins
push
sbb
jnp
fimul
dec
xchg
addr16
xchg
sbb
pushf
inc
stos
xchg
adc
sub
pop
cmc
adc
mov
add
loope
dec
adc
ret
mov
jb
retf
adc
movs
repz
loopne
sbb
icebp
aas
jecxz
call
mov
push
push
daa
scas
inc
push
rep
aam
xor
enter
pop
push
not
add
enter
rcr
into
cmc
cwde
fwait
and
lock
scas
addps
xchg
dec
lock
jl
addr16
sub
jo
inc
int
shl
pop
xchg
pop
(bad)
xchg
mov
pusha
jo
ret
shl
push
outs
neg
xor
mov
dec
push
aaa
adc
inc
or
mov
adc
and
push
inc
push
xor
in
push
inc
movs
(bad)
cdq
retf
mov
addr16
mov
xlat
test
mov
xchg
xchg
mov
xor
dec
in
test
movs
xor
push
int3
sub
imul
lahf
cmp
test
retf
sub
mov
lods
retf
sub
and
mov
retf
fimul
lods
outs
(bad)
xor
ror
pop
retf
pop
test
aad
shl
pop
shr
adc
iret
pop
cmp
inc
fs
jp
and
scas
push
inc
clc
or
fild
bound
adc
or
push
out
push
in
cmp
repnz
enter
cld
mov
jns
jmp
lods
div
stc
into
add
je
sbb
xchg
fabs
mov
mov
mov
dec
data16
mov
loopne
cmc
jmp
(bad)
xor
mov
or
std
(bad)
fwait
js
dec
or
pop
adc
mov
and
(bad)
bnd
fldcw
retf
loopne
ret
sbb
test
pushf
retf
pop
and
lds
cli
(bad)
xor
and
sbb
xchg
enter
loopne
sbb
pushf
mov
adc
iret
ins
rcr
pop
sub
out
pop
loop
dec
xor
mov
push
es
dec
push
sar
xchg
test
and
clc
icebp
jle
scas
(bad)
leave
test
cdq
scas
push
pushf
add
pop
mov
ds
je
out
dec
mov
call
popa
sahf
mov
(bad)
(bad)
xchg
mov
cmps
jno
test
xchg
and
ror
add
inc
mov
out
mov
int
dec
add
(bad)
inc
jbe
dec
je
mov
jb
test
and
ret
es
repnz
enter
jle
ins
and
rol
pop
inc
add
imul
xchg
cld
jg
cmps
xlat
cmc
push
ret
cmp
mov
ins
aad
ins
ficomp
fild
pop
and
dec
jp
mov
dec
pop
adc
loop
lds
sbb
loop
pop
imul
fist
jl
or
or
(bad)
pop
push
stos
inc
(bad)
pop
dec
(bad)
scas
int
pop
gs
lods
pop
adc
pop
cwde
jle
xor
js
in
(bad)
jge
push
xlat
pushf
adc
and
cwde
mov
popa
cmp
loop
mov
jge
fist
push
push
inc
push
test
in
xchg
jmp
lea
mov
ret
fldenv
inc
xchg
adc
pushf
fwait
ss
cmp
and
into
nop
and
(bad)
add
dec
add
arpl
daa
mov
and
push
push
sbb
xchg
shl
popa
shr
push
cmp
rol
cmps
push
or
xor
into
push
mov
ins
aad
or
push
inc
stos
lods
push
imul
out
lods
js
lahf
dec
inc
pop
int3
stc
dec
push
out
stos
jnp
retf
rcl
(bad)
aam
add
add
dec
sbb
gs
fisttp
jbe
pop
jp
cmps
sbb
leave
pushf
lds
xchg
bound
icebp
in
loop
in
nop
xchg
mov
out
mov
inc
pop
mov
push
xchg
dec
and
(bad)
push
lods
shr
(bad)
jg
lahf
sti
xlat
fmul
pop
outs
iret
lahf
icebp
es
clc
pop
int3
rcr
adc
popf
or
(bad)
(bad)
ror
pop
add
mov
sbb
sub
mov
push
jmp
call
or
and
loopne
and
mov
sbb
ds
add
pushf
cld
ds
(bad)
sti
or
or
mov
test
popa
icebp
loope
inc
pushf
mov
mov
inc
test
push
aam
sbb
push
test
iret
jae
pop
xchg
(bad)
fistp
lods
fst
std
sub
les
adc
pop
xchg
cwde
adc
(bad)
stos
jge
pop
sbb
sbb
adc
lds
aam
and
(bad)
pusha
js
lods
fbstp
pop
idiv
cmps
sub
sub
push
stos
cmp
popf
(bad)
push
xchg
lods
out
cmp
out
jecxz
adc
scas
xor
and
add
cmps
mov
jg
(bad)
(bad)
repz
jns
outs
out
fucomi
xchg
les
xchg
inc
jno
sub
add
xchg
mov
pop
xor
ret
rcl
fistp
stc
cmps
inc
call
fadd
sahf
ja
or
xor
adc
ret
ficom
mov
push
sub
shl
inc
popf
mov
icebp
mov
inc
sbb
push
mov
dec
jno
mov
jnp
inc
in
lods
dec
sbb
(bad)
pusha
mov
out
stos
sbb
movs
pop
imul
lods
push
outs
xchg
bound
in
ss
shl
sub
data16
ins
jbe
lahf
enter
lods
xchg
das
cmps
int3
push
mov
sub
aad
and
jmp
cmp
das
push
rol
add
daa
dec
lock
jg
xchg
movs
out
movs
fbstp
repz
and
iret
cmp
repz
xor
fbld
jns
mov
fadd
jb
mov
mov
ret
dec
sbb
hlt
outs
mov
sub
in
int
add
(bad)
lahf
stos
or
movs
out
xchg
dec
sbb
jns
pushf
rcr
mov
or
aaa
dec
sbb
mov
cmps
mov
in
xchg
lahf
xor
dec
icebp
mov
imul
movs
mov
ja
lds
fimul
les
and
(bad)
mov
ret
cmp
add
add
pop
stos
xchg
jne
ins
push
pop
xchg
sub
sub
ficomp
ficom
inc
fiadd
call
pop
and
and
cmove
add
xchg
adc
mov
xchg
pop
inc
fsub
xchg
xchg
test
dec
push
loop
jmp
int
popf
mov
pusha
retf
xchg
call
ins
test
fdiv
dec
push
and
cmp
xor
int3
pushf
hlt
test
cmc
clc
jnp
popf
xchg
push
adc
idiv
rcr
sbb
xor
out
xchg
(bad)
sbb
pop
in
xchg
pop
xchg
into
popa
mov
repz
fcom
das
out
dec
mov
or
mov
rcl
mov
(bad)
add
xlat
stos
mov
or
mov
iret
pushf
ret
adc
inc
jb
dec
mov
retf
paddd
xor
adc
shl
mov
jp
stc
jg
aad
pop
cdq
enter
imul
push
and
mov
jb
sahf
pop
mov
cmpxchg
in
das
test
xor
arpl
das
push
rol
ficom
repz
(bad)
imul
cs
xchg
mov
scas
(bad)
xchg
sbb
pop
push
shr
cli
pushf
xchg
daa
sbb
arpl
fcmovne
cmp
movs
jecxz
and
aaa
jb
dec
mov
stos
pusha
popa
mov
cmp
xor
push
in
push
add
bound
push
inc
push
push
pop
mov
or
lahf
ret
adc
adc
xchg
push
daa
sub
into
mov
aam
dec
and
adc
fdivr
pop
mov
popf
ins
movs
xchg
test
push
aam
sbb
push
mov
pushf
(bad)
fistp
lods
fst
std
sub
les
adc
pop
xchg
cwde
inc
or
pop
sbb
sbb
adc
lds
aam
and
fsub
jp
fbstp
pop
idiv
cmps
sub
sub
push
lods
inc
jo
add
lds
xchg
cwde
cwde
popf
jmp
dec
std
adc
daa
push
int
jecxz
jnp
sbb
jl
mov
fwait
xor
dec
into
les
and
rol
xchg
loope
dec
add
ret
jl
push
popf
xchg
push
sbb
jno
fstp
in
adc
xchg
cdq
mov
jmp
xchg
rcr
mov
jp
lods
(bad)
outs
inc
or
add
ins
mov
pop
mov
push
sahf
movs
and
push
cwde
cmc
pop
pop
pop
js
sti
mov
pop
adc
mov
frstor
imul
addr16
cmps
icebp
or
imul
inc
sbb
or
and
shl
xchg
mov
and
lods
ret
push
xchg
push
jno
cmp
in
loop
add
lock
mov
add
ret
xchg
push
mov
sbb
jbe
mov
sbb
mov
dec
les
jne
cmp
(bad)
ja
add
cld
out
mov
and
cmp
ror
inc
aas
sub
dec
mov
sbb
inc
xor
xor
mov
fwait
(bad)
aaa
mov
pop
ror
repz
std
fs
dec
push
popa
(bad)
mov
outs
adc
movlps
sbb
sbb
cmps
pusha
mov
push
loopne
imul
sub
ja
mov
xchg
pop
pushf
neg
es
(bad)
mov
pop
push
icebp
mov
bound
lock
in
test
or
loope
mov
pop
push
and
sbb
retf
xchg
jnp
inc
push
push
mov
hlt
repz
xor
in
loop
xchg
pop
mov
xchg
push
dec
or
or
ret
push
fmul
xor
xlat
mov
adc
into
cmp
adc
lea
fcomp
inc
cmp
jb
sbb
push
neg
mov
enter
js
(bad)
cdq
or
in
(bad)
mov
mov
jmp
sbb
movs
outs
mov
into
(bad)
dec
push
mov
push
loopne
cli
mov
mov
mov
out
(bad)
outs
adc
inc
movlps
fnstsw
dec
shl
retw
iret
imul
int3
dec
xor
pushf
ins
cmp
fs
mov
pcmpeqw
test
in
sub
mov
outs
sahf
retf
xchg
mov
mov
and
cwde
fs
test
pop
xchg
adc
imul
xchg
stos
(bad)
stos
jbe
mov
pusha
mov
rcr
fstp
sbb
pusha
js
fsub
ss
mov
inc
or
add
mov
adc
dec
add
adc
jo
(bad)
push
retf
xchg
call
pop
pushf
ficom
mov
test
cmp
fcomp
(bad)
mov
in
neg
mul
fdiv
stos
dec
jns
xchg
std
aaa
clc
xlat
mov
and
ret
pop
inc
mov
iret
inc
mov
fcomp
cmp
jno
add
mov
add
xor
pop
leave
iret
imul
int3
dec
xor
std
jl
dec
push
shr
xlat
addr16
dec
(bad)
push
fwait
push
sahf
hlt
ficomp
std
mov
sub
mov
xlat
retf
xlat
adc
das
pop
xchg
mov
jae
mov
mov
jg
aam
push
imul
repnz
gs
lods
jne
sub
sub
int3
bnd
mov
inc
jb
add
aas
and
ss
or
retf
push
mov
push
mov
dec
mov
mov
push
mov
xchg
aas
and
inc
add
adc
mov
push
fxch
push
call
jle
mov
fstp
pop
call
data16
imul
mov
call
pop
inc
fnstenv
(bad)
in
mov
mov
fistp
push
movs
out
jecxz
and
enter
mov
(bad)
sbb
xchg
or
mov
sbb
or
(bad)
addr16
or
jo
in
arpl
(bad)
int
jae
pop
scas
(bad)
fistp
shr
cmp
mov
push
or
push
cmps
push
add
cmp
mov
arpl
fdivr
lods
jl
adc
pusha
arpl
sub
(bad)
scas
je
test
add
arpl
enter
mov
nop
cmp
dec
shl
pop
movs
icebp
jno
push
popa
xchg
inc
add
add
mov
adc
inc
jl
inc
pop
dec
mov
bound
popa
mov
mov
jecxz
out
loopne
shl
in
xchg
imul
push
dec
rcr
fidiv
ret
(bad)
cld
ficomp
inc
leave
int3
jle
mov
clc
daa
neg
or
icebp
mov
xor
adc
add
das
add
(bad)
jae
leave
inc
ds
call
mov
adc
lods
mov
arpl
inc
jmp
(bad)
sbb
xchg
retf
pop
or
dec
or
jnp
sahf
enter
cwde
nop
sbb
stos
outs
inc
adc
pop
xor
mov
ror
inc
xchg
pop
test
pop
std
jnp
pop
cdq
mov
push
cmp
and
scas
jge
push
jo
pop
push
ss
pop
in
fadd
dec
push
dec
(bad)
in
or
dec
xor
add
adc
mov
xchg
lahf
mov
mov
dec
fwait
sahf
cmps
lock
mov
push
into
mov
bound
xchg
inc
(bad)
mov
jge
add
cs
cmp
fimul
xor
mov
shr
daa
out
adc
cmp
xchg
test
or
repz
jns
(bad)
fistp
icebp
mov
(bad)
leave
jl
(bad)
sbb
mov
mov
aaa
ror
(bad)
adc
cmps
outs
and
outs
or
retf
cli
stos
ja
rcr
jp
shl
xchg
jmp
mov
addr16
cmps
pop
or
dec
or
jmp
dec
add
or
sub
outs
mov
ins
(bad)
leave
pop
push
push
mov
xchg
mov
mov
inc
add
in
hlt
adc
jp
test
imul
lock
and
xchg
jmp
push
xchg
clc
mov
inc
sbb
and
pop
xchg
stc
in
cmp
movs
(bad)
adc
jbe
xchg
and
and
xchg
int
push
sbb
mov
jecxz
mov
leave
lock
jmp
in
xor
data16
and
in
repz
dec
rcr
cmps
daa
xor
xchg
lock
or
retf
mov
or
(bad)
stc
mov
xor
retf
adc
sbb
fidivr
jge
icebp
mov
(bad)
lods
inc
adc
jecxz
mov
test
xor
or
dec
mov
mov
inc
or
mov
rcr
nop
int3
rcr
scas
fcom
int
ins
sbb
addr16
test
inc
mov
adc
jp
daa
xor
push
fsub
jnp
jmp
inc
xchg
dec
cld
xchg
(bad)
lahf
in
push
add
lock
inc
add
popf
jmp
add
daa
hlt
mov
push
or
jp
cmps
mov
xchg
jmp
sbb
xchg
jae
mov
inc
stos
repz
add
scas
ret
sar
fistp
int
mov
out
mov
lock
out
call
jecxz
cdq
dec
push
pop
fwait
call
xchg
xor
repnz
mov
fisttp
shr
inc
pop
js
std
mov
mov
ja
fcmovne
pop
push
fsubrp
arpl
fldenvw
(bad)
dec
pop
xchg
into
adc
imul
inc
nop
imul
jbe
sub
or
ror
popf
add
mov
int3
repnz
cmp
out
clc
adc
ja
or
les
adc
xchg
cmp
jo
test
and
fs
int3
xchg
(bad)
inc
cmp
xchg
and
loopne
fbld
jns
rcr
or
dec
ror
xor
dec
mov
pushf
mov
lock
aam
ror
nop
imul
repz
inc
(bad)
ret
inc
lds
clc
mov
(bad)
out
jecxz
inc
sahf
icebp
pop
pop
or
lock
mov
imul
push
lea
push
(bad)
jae
mov
fwait
push
lahf
hlt
ficomp
std
mov
(bad)
mov
popf
push
jns
cmps
shr
mov
sub
cli
(bad)
sub
lds
add
xchg
int3
adc
inc
xor
fidivr
inc
dec
lods
jne
jmp
ret
int3
repnz
xchg
xor
dec
add
or
rcl
sbb
jae
mov
popa
ror
add
adc
mov
adc
and
sub
fbld
xor
popf
outs
clc
pop
out
adc
jecxz
jg
imul
popf
dec
mov
jns
xor
pop
adc
push
mov
inc
call
push
mov
cld
test
jecxz
xchg
mov
sub
lds
add
fmul
push
mov
fwait
mov
jmp
popf
dec
push
ficomp
enter
test
jae
pop
fwait
neg
popf
push
imul
jb
jo
lds
div
test
jmp
arpl
cdq
retf
test
jnp
mov
pop
or
cmp
or
mov
gs
inc
(bad)
dec
add
xor
or
outs
cmp
mov
cmp
sub
int3
mov
xor
xchg
mov
mov
imul
add
stc
pop
pop
out
add
jecxz
jbe
stos
adc
xor
mov
cmps
test
jle
or
add
rcl
sub
xchg
jp
pop
mov
popa
clc
aas
clc
movs
leave
aad
xchg
aaa
inc
mov
sti
je
pop
rol
adc
or
add
movs
mov
mov
test
cmc
pop
pop
mov
out
mov
xchg
int3
lds
xchg
jmp
rcr
mov
jnp
cmps
call
movs
scas
lds
pop
ja
fnsave
test
cmc
xor
(bad)
and
lods
ret
adc
dec
jp
popf
enter
jo
inc
(bad)
mov
out
mov
jnp
dec
(bad)
dec
add
enter
std
lahf
mov
cmps
pop
push
xchg
inc
add
dec
lea
adc
scas
pop
shr
in
cmp
enter
enter
xor
mov
push
sbb
pop
fisub
mov
shr
sub
xor
jmp
jge
mov
test
pushf
into
repz
ret
dec
push
lahf
pop
repnz
or
aaa
ja
cli
hlt
sbb
ror
imul
xor
icebp
pushf
retf
cmp
shl
xchg
lods
xlat
pop
(bad)
imul
ds
xor
adc
hlt
pop
stos
push
add
mov
imul
jmp
leave
lods
cld
fisttp
push
sbb
mov
mov
hlt
xor
in
loop
stc
jp
rol
stos
or
add
add
mov
int3
adc
cmp
pop
xchg
inc
add
mov
adc
lahf
inc
push
push
leave
int
or
out
js
push
loope
addr16
scas
sbb
jp
and
in
sti
ja
int
aas
sti
mov
mov
xchg
mov
mov
pop
pop
addr16
jb
mov
loopne
pop
sar
daa
jmp
jl
or
mov
pop
movlps
mov
cmp
pop
mov
cwde
jge
mov
(bad)
dec
push
or
jnp
stc
jne
push
loope
gs
add
cmc
sahf
retf
adc
cld
(bad)
xchg
pushf
leave
push
pop
js
out
ror
in
imul
inc
(bad)
sbb
mov
pop
xor
enter
scas
std
(bad)
addr16
nop
xchg
mov
inc
and
add
sub
retf
rol
sbb
test
adc
inc
mov
push
into
lods
push
adc
movs
jno
or
lahf
inc
pop
dec
leave
int
fwait
mov
fstp
jae
jg
ret
xchg
sti
gs
fcomp
sub
mov
fdiv
cmps
ins
aam
(bad)
cmp
push
mov
ret
sar
call
daa
stc
sbb
out
mov
lock
dec
cld
pop
out
push
je
pop
leave
iret
lds
or
dec
xor
jno
cmp
push
loop
jae
rcr
pop
in
mov
sub
mov
cmc
imul
(bad)
out
arpl
xchg
leave
add
movs
sti
or
sub
jae
stos
jmp
fimul
xor
(bad)
stos
out
sti
jb
push
fidiv
jge
sbb
or
lahf
mov
dec
cmp
call
cli
fisttp
and
les
loopne
aad
repnz
xor
mov
add
shr
stos
sub
cld
xchg
sub
mov
adc
test
and
test
xchg
call
cmps
jo
dec
data16
jg
dec
inc
push
xchg
imul
xchg
dec
rol
lods
test
jnp
ret
into
dec
mov
ins
mov
fstp
jmp
pop
call
push
mov
iret
xchg
mov
test
ret
inc
fwait
icebp
pop
pop
out
pushf
inc
repz
pop
scas
xchg
adc
mov
js
div
(bad)
leave
adc
push
(bad)
push
adc
fmul
fiadd
call
movs
fst
retf
aas
sub
mov
sub
jecxz
int
lds
pop
xor
pop
or
ins
mov
push
pop
(bad)
retf
lods
in
push
mov
mov
xchg
jmp
xchg
popf
fistp
and
adc
add
or
aad
sti
(bad)
mov
jne
test
lock
fldenv
popa
xchg
jmp
or
inc
call
mov
aas
(bad)
rcl
(bad)
lock
imul
add
jg
mov
dec
(bad)
dec
mov
mov
je
xchg
div
ror
(bad)
(bad)
pop
lods
fst
in
mov
clc
(bad)
clc
mov
in
arpl
loope
mov
add
fsub
mov
pop
out
mov
or
dec
sar
mov
jne
inc
jmp
xchg
iret
jae
(bad)
push
fimul
sahf
stos
mov
xchg
iret
xchg
cld
and
dec
addr16
rcl
repz
stos
div
cli
mov
stos
pop
or
mov
aad
test
xchg
inc
sub
mov
or
push
cmp
call
in
xchg
push
fs
(bad)
cmp
sbb
push
pop
fwait
imul
xor
or
clc
xchg
fldenv
sub
adc
les
dec
jbe
fwait
out
pop
push
shr
bound
(bad)
jg
retf
ficomp
sub
mov
popa
push
fsub
ror
dec
popf
jecxz
dec
shl
inc
movs
push
or
cmp
lahf
in
stc
adc
mov
ret
mov
sub
push
or
mov
call
movs
movs
xchg
mov
xchg
cmc
pop
pop
pop
push
sar
mov
pop
das
shl
frstor
imul
gs
cmps
icebp
or
adc
repnz
and
dec
inc
or
and
shl
scas
mov
and
lods
ret
lds
cmp
in
loop
add
or
aaa
shl
add
ret
xchg
push
mov
sbb
jns
mov
sbb
mov
(bad)
sbb
push
frstor
cmp
pushf
ja
add
aam
loope
push
dec
xchg
and
cmp
ror
inc
aas
jp
dec
mov
sbb
inc
xor
xor
mov
ins
sbb
jge
sbb
test
(bad)
into
repz
std
daa
xchg
dec
push
jnp
mov
outs
adc
inc
test
fcomp
sbb
adc
loopne
imul
imul
test
inc
xchg
pop
xchg
neg
es
pop
push
mov
popf
add
mov
leave
test
scas
cmc
or
dec
mov
fst
and
sbb
retf
xchg
cli
movs
inc
push
push
mov
hlt
repz
xor
in
loop
xchg
sbb
dec
or
or
ret
push
fmul
xor
push
movs
adc
into
cmp
adc
lea
fcomp
dec
cmp
jb
sbb
push
neg
add
aas
rol
js
(bad)
cdq
sub
in
(bad)
mov
mov
jmp
sbb
int
mov
into
(bad)
inc
jmp
push
loopne
cli
mov
out
lods
mov
mov
dec
movlps
fnstsw
cdq
dec
shl
adc
dec
xor
pushf
ins
cmp
loop
mov
mov
fld
push
mov
retf
xchg
mov
mov
and
cwde
lods
mov
mov
mov
stos
(bad)
stos
jbe
cli
cmps
sbb
mov
shl
fst
bound
lahf
leave
xchg
mov
fsub
ficom
repz
push
inc
or
or
mov
adc
dec
add
mov
and
mov
push
pop
mov
cmps
(bad)
push
retf
xchg
call
pop
pushf
ficomp
mov
pop
mov
xchg
sti
popa
mov
fcomp
(bad)
mov
in
neg
ret
aaa
das
push
or
jmp
aad
repz
pop
imul
inc
mov
fcomp
mov
out
outs
push
sub
jecxz
mov
xor
pop
leave
iret
imul
les
cmp
aas
fwait
dec
push
clc
and
xlat
addr16
dec
(bad)
push
fwait
push
stos
aam
sbb
std
mov
jns
sti
mov
xlat
retf
scas
push
add
jge
and
xchg
mov
jae
lods
jmp
fisub
stos
jg
loopne
push
imul
repnz
gs
lods
jne
jmp
push
add
test
inc
add
(bad)
xchg
mov
les
test
ss
mov
inc
sub
aad
mov
xchg
adc
add
adc
xchg
push
fxch
push
call
jle
movs
in
adc
cmc
(bad)
jno
dec
push
pop
call
jp
jmp
(bad)
cli
fstp
jmp
inc
call
pop
inc
(bad)
(bad)
in
mov
mov
fistp
push
int3
out
jecxz
shl
mov
(bad)
sbb
loop
outs
xchg
push
inc
jmp
jmp
adc
or
sbb
push
inc
int
jae
pop
mov
jns
xchg
shr
cmp
mov
push
or
push
(bad)
push
add
cmp
mov
arpl
fsub
and
arpl
call
je
mov
cmp
or
enter
fild
sub
mov
out
dec
push
bound
movs
icebp
jno
push
popa
xchg
inc
add
or
mov
adc
icebp
jnp
inc
pop
lea
test
pop
pop
or
mov
shl
in
xchg
imul
fwait
xor
fidivr
and
cld
ficomp
inc
leave
add
in
mov
clc
daa
out
iret
jnp
pop
stc
sbb
icebp
mov
xor
pop
rol
adc
das
add
hlt
idiv
leave
inc
ds
inc
mov
adc
lods
ins
pop
stos
and
fdivr
inc
jmp
int
jae
mov
test
or
dec
or
jnp
lods
call
nop
call
pop
xor
aaa
ror
inc
retf
sbb
pop
cdq
pop
jp
cmps
sbb
leave
pushf
lds
xchg
bound
in
nop
xchg
mov
das
pop
mov
es
push
mov
push
iret
xlat
hlt
jbe
aas
cwde
fsub
sbb
xchg
ror
gs
inc
pushf
mov
jg
(bad)
(bad)
repz
jns
popf
addr16
sbb
pop
inc
ins
hlt
xor
xchg
shl
data16
sbb
mov
xchg
jle
push
ins
sbb
sahf
xchg
rcl
dec
adc
out
dec
mov
pop
out
xchg
mov
mov
aaa
or
mov
add
test
inc
mov
jns
cmp
xor
stos
popf
(bad)
dec
and
aad
sbb
stc
ud1
fild
pushf
imul
gs
and
into
hlt
mov
rol
shl
je
(bad)
out
xor
sub
dec
stos
inc
in
sub
push
jmp
sbb
pusha
mov
mov
cmp
sub
inc
add
and
sar
mul
into
sbb
movs
cli
jg
in
jbe
imul
pop
fst
pop
mov
imul
gs
cdq
pop
adc
lock
cmp
je
test
loope
and
jecxz
cmp
mov
aam
xor
dec
ror
mov
js
shl
pusha
or
mov
cmp
and
jl
jp
push
fs
xor
ficom
stos
inc
test
shl
stos
fstp
push
mov
stos
in
sbb
push
stc
mov
xor
fisttp
frstor
mov
xchg
pop
in
dec
(bad)
ins
or
xor
retf
rcl
sbb
(bad)
fisubr
adc
or
icebp
enter
mov
fst
cld
int3
mov
mov
jmp
dec
retf
and
pusha
xor
ror
dec
and
mov
or
fwait
cs
xchg
mov
imul
pop
outs
dec
(bad)
call
scas
inc
popa
mov
mov
sbb
shr
bound
inc
sbb
bound
and
es
adc
enter
pop
mov
sub
pop
dec
adc
lock
js
mov
stc
nop
rcl
rol
repnz
test
test
in
xor
ret
push
and
rcl
inc
mov
sub
mov
cdq
mov
ins
aad
ins
ficomp
fldcw
stos
lea
(bad)
mov
fbld
loope
push
lods
cli
fwait
retf
je
(bad)
add
enter
mov
mov
and
test
dec
mov
dec
jne
enter
add
leave
jae
pop
es
dec
pop
movs
sub
fsubr
sahf
push
cmp
enter
(bad)
xchg
cmp
in
imul
rol
dec
jae
xor
jno
retf
and
mov
retf
push
mov
rcr
sti
xor
jb
pop
outs
or
test
pusha
mov
cdq
push
fucomp
loop
dec
add
mov
xor
sbb
push
daa
lea
or
xor
test
and
push
sahf
cmp
xor
and
clc
push
aam
lahf
iret
jecxz
push
dec
iret
fist
test
dec
fdiv
sbb
pop
ins
xor
test
icebp
mov
mov
stos
es
mov
push
adc
ret
xor
jae
pop
imul
inc
sub
sub
add
data16
ss
stos
mov
push
outs
push
sbb
and
pop
mov
popf
jbe
loope
movs
fst
fdivr
not
into
mov
jo
loop
add
dec
inc
add
sub
dec
std
adc
les
inc
movs
push
rcr
jb
mov
ret
icebp
cld
mov
out
inc
and
jg
cwde
mov
test
lods
div
stc
into
add
and
ror
ss
lock
or
or
outs
add
add
neg
dec
cmps
rcr
adc
adc
lds
(bad)
into
repz
ds
std
loope
sbb
and
mov
repnz
lock
cmps
jg
mov
pop
fsub
fs
icebp
mov
movs
lds
nop
lds
clc
mov
loop
call
int3
stc
inc
push
cld
sub
xor
icebp
icebp
or
cmp
mov
cli
and
(bad)
mov
dec
xor
mov
xchg
sbb
and
inc
in
cmps
ret
mov
adc
pop
xor
mov
cs
setb
retf
in
imul
mov
xchg
jg
sub
xlat
mov
pop
xchg
call
push
jmp
fnsave
xchg
push
xabort
mov
add
repz
bound
test
leave
add
fwait
xchg
les
cdq
sahf
sub
out
dec
sbb
push
test
call
mov
scas
fadd
inc
mov
adc
outs
jbe
loope
jecxz
(bad)
mov
mov
jae
icebp
xchg
jle
sbb
adc
cs
mov
xor
ret
scas
arpl
hlt
in
lods
jae
ds
inc
out
xor
into
jae
retf
test
nop
std
pop
mov
or
pop
mov
mov
rcl
push
rcl
fistp
fwait
pushw
add
ret
sahf
inc
and
(bad)
cmp
xchg
and
in
sbb
add
or
aas
and
mov
adc
test
fistp
mov
mov
adc
jb
fwait
dec
popf
ja
hlt
repz
gs
inc
xchg
adc
jbe
test
(bad)
dec
mov
sbb
adc
cmp
fwait
cwde
movs
inc
jmp
xor
stos
push
pop
(bad)
jp
push
sub
div
cwde
rol
addr16
dec
jecxz
mov
test
dec
mov
pop
in
int3
inc
call
inc
pop
stos
push
test
(bad)
xchg
dec
sbb
mov
push
mov
and
jbe
lods
adc
pusha
or
shl
sub
mov
mov
mov
xchg
mov
(bad)
in
mov
push
fisubr
(bad)
les
jno
ins
loop
mov
mov
(bad)
inc
fst
pop
fprem1
jmp
psubq
out
cmp
in
pop
retf
fwait
adc
dec
sub
(bad)
pop
sar
ret
jp
gs
out
call
popf
xchg
mov
test
jecxz
and
jb
dec
sbb
fdiv
ret
or
sub
adc
fist
inc
sahf
cmp
(bad)
repz
push
cld
leave
inc
lahf
retf
jecxz
jmp
or
jl
pop
add
int
(bad)
mov
leave
movs
mov
test
shl
xchg
mov
mov
push
lods
sub
mov
sar
xchg
xor
scas
test
mov
and
add
jp
and
movs
sub
sbb
jle
cmps
or
inc
(bad)
xor
push
push
(bad)
jnp
jg
xor
mov
inc
retf
xchg
mov
or
add
dec
addr16
mov
sub
jne
inc
xor
in
ret
push
icebp
aas
dec
mov
clc
adc
clc
(bad)
(bad)
lea
inc
cdq
retf
cwde
add
test
push
popa
mov
xor
sub
jmp
test
test
push
xchg
rcr
pop
xor
add
mov
adc
xor
shr
(bad)
pop
push
lock
sub
(bad)
std
popa
int
and
hlt
imul
sbb
div
(bad)
fisttp
aad
test
mov
mov
(bad)
stc
inc
repz
adc
imul
arpl
lds
pop
adc
push
mov
ficom
fld
add
stos
fst
in
int3
mov
popf
imul
mov
jmp
mov
and
push
and
pop
jle
scas
adc
frndint
xor
out
xor
into
or
xor
or
jnp
out
mov
out
lock
xor
and
lods
dec
jae
fdivrp
jb
sub
adc
(bad)
(bad)
xor
lods
iret
retf
test
and
test
xor
add
and
xchg
jmp
sbb
mov
fst
inc
pop
cmp
leave
sti
int
fadd
mov
pop
jno
pop
fistp
xor
jo
pop
xchg
fld
call
or
mov
and
adc
outs
movs
ret
ins
test
inc
fisttp
sub
mov
add
loope
dec
adc
and
adc
cmp
xor
dec
inc
sub
sub
or
je
sbb
mov
sub
pop
push
jne
ins
jle
mov
hlt
mov
xchg
push
es
test
pop
and
mov
imul
arpl
lds
sti
ret
or
add
cmc
ror
rcl
fwait
dec
xchg
jo
fld1
stc
add
pop
test
test
add
popa
stos
lods
icebp
sbb
icebp
(bad)
jnp
sahf
sti
lahf
lods
(bad)
call
adc
jp
gs
add
in
rcl
dec
sub
sub
and
cmp
pop
in
adc
and
xchg
test
and
jmp
shl
add
add
cmp
lods
pushf
push
or
int
sbb
cmp
push
pop
dec
dec
pushf
(bad)
movs
ror
push
sub
mov
push
and
bound
imul
jns
loope
pop
in
outs
mov
in
cs
xchg
xchg
sub
movs
xor
inc
xchg
js
push
inc
jmp
mov
in
scas
aas
test
xchg
adc
mov
outs
fmul
push
div
mov
imul
push
add
out
out
xchg
adc
xchg
fldenv
popa
xchg
std
cwde
fidiv
inc
pop
in
sub
mov
xchg
push
pop
out
enter
retf
xor
xchg
dec
xor
retf
fsubr
sbb
or
call
(bad)
xchg
sbb
(bad)
mov
add
cwde
aad
into
scas
xchg
xchg
leave
cmp
mov
popf
sbb
push
int3
in
add
daa
ins
push
sub
push
mov
push
in
or
push
fist
push
aaa
mov
imul
(bad)
mov
jae
retf
sahf
jns
loope
pop
pop
mov
push
or
sub
nop
mov
xchg
add
(bad)
jmp
lahf
fistp
inc
shr
not
pop
xchg
dec
icebp
cmp
pop
stc
add
adc
test
dec
(bad)
mov
push
das
test
or
push
repnz
(bad)
xrelease
daa
mov
jo
mov
mov
int3
into
sbb
aad
dec
movs
dec
or
xor
seto
(bad)
push
rcr
repnz
ins
mov
and
sub
inc
rol
push
add
mov
and
daa
add
test
push
leave
cmps
inc
or
lahf
cld
pop
leave
cmp
xchg
div
and
push
push
retf
pop
stos
inc
in
lods
cmp
inc
cmp
in
cmp
div
xchg
push
jg
sub
add
test
(bad)
and
clc
mov
movs
sar
and
mov
pop
mov
push
inc
sbb
(bad)
rcl
in
and
(bad)
jns
das
push
imul
dec
sbb
xchg
cmp
jg
or
shl
push
icebp
add
aad
xchg
or
inc
into
pop
xor
scas
hlt
fidiv
sbb
inc
retf
loop
fcomip
ss
add
(bad)
(bad)
lods
xchg
mov
cmps
mov
out
mov
imul
push
adc
push
jns
inc
pop
lods
dec
adc
cld
and
cmc
xchg
jge
dec
adc
mov
sti
add
imul
lods
int3
and
imul
movs
ret
aaa
lahf
retf
adc
push
div
test
das
cmps
movs
leave
test
push
adc
cmp
in
dec
mov
aam
or
jg
shl
sub
pushw
inc
fimul
pop
push
lea
ss
repz
inc
jb
sahf
pop
and
sub
mov
jecxz
or
pop
std
and
fdivrp
push
mov
pop
je
ror
or
xchg
pop
inc
mov
push
enter
test
leave
push
fidivr
push
sbb
dec
vpshuflw
mov
int3
inc
cmp
adc
add
dec
cdq
push
es
dec
mov
mov
sbb
cdq
neg
mov
mov
(bad)
cmc
loopne
ret
loopne
dec
xchg
xchg
mov
push
xchg
sahf
xor
and
push
ins
sbb
mov
jle
sbb
data16
sbb
lahf
mov
(bad)
cmp
push
rcl
lea
mov
adc
inc
aas
lea
xor
rol
mov
mov
movs
in
cs
cmp
imul
loope
leave
and
adc
mov
test
dec
pushf
loop
cs
fucomi
das
jns
cs
ins
repnz
mov
mov
int3
pop
push
mov
sbb
(bad)
ins
fwait
adc
add
pop
xchg
mov
pop
aam
retf
fwait
adc
dec
and
scas
fcomp
pop
sar
ret
jp
gs
out
call
popf
xchg
mov
neg
and
jb
dec
sbb
fdiv
ret
or
scas
sbb
fist
inc
sahf
cmp
fbld
stos
iret
mov
add
stc
loop
mov
aas
pop
dec
inc
arpl
add
mov
xor
retf
movs
mov
loop
cld
adc
pop
dec
mov
dec
sbb
outs
push
inc
mov
xor
dec
ret
jno
mul
push
ret
ins
mov
xor
xchg
dec
iret
push
add
pop
cmp
xchg
nop
pop
(bad)
jl
ror
cmps
lods
adc
sub
ret
mov
sbb
pusha
js
lods
cs
movs
cmc
xchg
sub
js
es
add
adc
clc
xor
mov
push
fsub
sbb
aam
stc
mov
test
inc
cmps
lock
test
add
jns
push
retf
mov
(bad)
cmc
fcomi
(bad)
lods
test
in
test
ret
test
shl
iret
or
mov
setne
sbb
push
inc
push
pop
movs
pop
mov
and
daa
lds
push
sub
push
xor
ret
mov
stos
or
pop
cmps
push
icebp
nop
into
mov
ins
push
sub
dec
dec
xchg
dec
push
in
ficom
fcomi
call
mov
add
sbb
nop
fnsave
retf
cs
rol
arpl
sahf
xchg
test
sbb
jo
push
xchg
or
stc
sub
fisubr
or
inc
adc
fistp
ret
inc
cmp
xor
jbe
pusha
mov
xchg
inc
or
or
mov
std
fdivr
xchg
jg
out
daa
add
leave
xchg
xor
or
push
adc
stos
(bad)
sub
cmp
in
pop
in
mov
aaa
inc
mov
(bad)
scas
std
int3
inc
aas
pop
xor
push
(bad)
push
les
mov
or
xor
and
sbb
mov
pop
scas
ret
xor
fst
inc
ret
push
sbb
sar
sbb
jbe
add
scas
jo
leave
mov
dec
mov
fcomp
mov
pop
mov
push
sahf
ret
pop
pop
adc
mov
mov
test
leave
pop
sbb
sub
add
into
pop
xor
jge
call
outs
test
loop
call
pop
fidiv
imul
out
fldcw
pop
cdq
enter
lods
mov
mov
arpl
jo
sub
push
xchg
xchg
dec
aam
pop
mov
inc
rol
fsubr
das
dec
iret
mul
xchg
xchg
mov
inc
pushf
out
sbb
jae
pushf
sub
div
pop
jmp
js
enter
aaa
jo
repnz
pop
shr
loop
je
sbb
inc
push
adc
aad
inc
ret
fcom
test
shl
out
mov
pop
jns
adc
in
sub
ja
sahf
je
ds
cmp
repnz
mov
mov
mov
sub
in
xor
test
xchg
sub
inc
mov
imul
pop
push
ja
lods
mov
popf
div
call
fnstenv
mov
lds
(bad)
xchg
sub
addr16
ins
pop
fwait
enter
mov
call
test
dec
dec
retf
mov
popf
push
push
sub
aas
js
jnp
inc
or
add
or
popf
fistp
mov
rcl
inc
mov
push
fidivr
xlat
sbb
retf
and
sbb
jnp
popf
cmc
ins
pop
mov
(bad)
stc
test
addr16
mov
test
enter
or
out
fcom
imul
sahf
dec
dec
add
inc
rcl
push
test
adc
iret
rol
out
jno
pop
in
xchg
fist
sbb
lock
push
out
dec
mov
or
repnz
dec
cmp
retf
movs
shl
xchg
and
mov
(bad)
rcr
aas
test
mov
std
mov
mov
jne
fcmovnu
mov
imul
fs
xchg
daa
push
push
jl
retf
(bad)
rcr
mov
mov
mov
leave
xchg
inc
mov
push
into
fmul
inc
sbb
cmp
enter
int3
xchg
(bad)
cli
cli
icebp
sbb
xchg
xor
adc
jmp
mov
or
das
aad
pop
outs
dec
(bad)
push
sti
inc
sub
jae
pushf
loop
shl
lahf
(bad)
cmps
repz
in
(bad)
aaa
jmp
jae
iret
rol
mov
enter
lea
or
and
or
call
jge
retf
arpl
pop
movs
pop
mov
and
daa
lds
push
push
loopne
inc
jge
pop
mov
mov
repz
std
popa
int
and
hlt
imul
into
stc
shr
adc
ret
cdq
mov
call
lock
pop
cli
stos
jb
pop
inc
aam
dec
sbb
xor
(bad)
pop
pop
mov
inc
cmp
sbb
push
sub
fnstenv
add
or
cmp
mov
xor
jecxz
cmps
out
in
ret
das
lds
xchg
bnd
or
pop
pop
not
out
mov
popf
(bad)
push
(bad)
cmp
mov
(bad)
mov
xor
xchg
xor
retf
push
(bad)
xchg
lahf
jnp
out
xchg
push
mov
adc
(bad)
(bad)
lods
sti
push
outs
jecxz
fisub
loopne
or
mov
dec
dec
mov
sbb
jb
mov
xor
call
rcr
mov
into
fwait
sbb
xchg
dec
sbb
scas
call
and
sub
or
mov
ror
inc
sub
rcr
sbb
lahf
push
pop
mov
(bad)
mov
sbb
push
(bad)
repz
mov
stc
jnp
sahf
pop
xchg
iret
icebp
icebp
fsub
jbe
lods
cs
mov
inc
test
push
push
iret
jne
jne
dec
adc
mov
lds
sbb
jbe
lods
adc
fsub
ja
lea
push
imul
ror
call
pop
dec
movups
add
xor
or
psraw
(bad)
test
and
mov
jne
ins
cmovl
pop
or
fcomp
outs
dec
push
add
and
mov
test
arpl
xor
imul
adc
and
sti
lods
adc
dec
push
adc
mov
push
ja
fld
pop
jno
dec
out
mov
sbb
or
push
sub
js
movs
xor
cmps
cmp
ins
test
retf
inc
in
dec
lea
mov
std
xor
imul
fisttp
or
aad
push
(bad)
rcl
movs
inc
bound
inc
sbb
adc
xor
nop
imul
add
push
(bad)
pop
and
xchg
pop
and
clc
dec
popf
jno
lahf
jbe
mov
pop
shr
push
adc
in
ror
sbb
(bad)
dec
mov
into
inc
dec
and
lea
mov
xchg
pop
cwde
shl
ja
xchg
pop
push
out
int3
fwait
nop
xchg
xor
gs
rcl
inc
add
bound
push
or
cmp
sbb
daa
jne
jnp
xchg
dec
fst
push
jmp
jbe
fwait
shl
dec
add
sti
mov
mov
mov
adc
push
aam
ss
mov
cmp
mov
ins
cmc
or
outs
xor
and
ss
int
jmp
jle
call
fistp
shr
(bad)
into
ss
mov
ja
aad
cmp
ror
stos
mov
sbb
shl
into
aam
inc
cmp
mov
cld
loop
inc
fdiv
xchg
ror
in
test
or
add
jmp
inc
(bad)
and
out
add
push
ja
call
cmps
scas
div
jp
pop
pop
push
(bad)
jne
sbb
mov
pop
cs
jae
cwde
xor
add
and
test
rcr
xchg
or
(bad)
shr
pop
sbb
cmps
and
sub
enter
(bad)
popa
push
fwait
int3
out
daa
inc
test
dec
jecxz
sbb
cmc
mov
mov
xor
shl
test
cmp
jmp
pop
fisub
movzx
jae
mov
in
in
inc
(bad)
fmul
inc
call
pop
dec
jge
icebp
les
ror
stos
fist
jge
aad
mov
lods
js
inc
shr
cdq
(bad)
mov
xchg
push
pop
mov
inc
in
sti
pop
lahf
(bad)
push
push
(bad)
jo
inc
call
push
pop
int
or
fsub
pop
jmp
das
test
xchg
pop
inc
mov
jg
xchg
push
sahf
cmps
test
xchg
xchg
test
mov
inc
jmp
sub
cs
ror
gs
in
jb
add
je
cmp
dec
pop
xchg
cdq
jl
out
jne
pop
mov
mov
add
inc
sub
repz
fistp
sub
jecxz
and
mov
jecxz
call
les
ins
movs
(bad)
rcl
(bad)
loop
inc
in
test
scas
inc
xchg
pop
cdq
xlat
pop
(bad)
(bad)
pushf
cmp
mov
or
sbb
or
stos
std
cld
jns
push
push
ja
nop
test
repz
lea
sbb
push
pusha
jle
das
pop
icebp
sbb
cmp
fcmovne
loop
add
sub
add
mul
retf
stc
(bad)
dec
movs
dec
push
test
push
cmp
lock
lds
out
cmps
enter
inc
ret
fldl2e
scas
cmp
ds
outs
repz
(bad)
cwde
add
inc
and
xor
std
cmp
dec
inc
sbb
adc
mov
cld
xchg
adc
xor
push
jle
inc
lahf
or
mov
adc
ret
sbb
inc
and
jp
cwde
and
sbb
mov
jb
dec
push
bound
push
lds
mov
and
mov
jl
jp
inc
pop
fnstenv
jno
cld
cmp
jae
les
lds
sbb
adc
call
pop
mov
xchg
mov
pop
iret
xchg
xchg
icebp
jo
sbb
xchg
int3
jo
clc
repz
scas
das
adc
pop
out
syscall
ror
fwait
cs
push
sbb
jecxz
or
shr
dec
loopne
repz
in
lods
clc
adc
clc
int3
pop
into
xor
enter
jae
int3
shr
add
ficom
popa
(bad)
dec
sbb
cs
dec
popa
pop
mov
jg
outs
mov
rcl
mov
sbb
mov
jns
rol
shl
jecxz
movs
mov
cdq
je
cmovg
data16
mov
mov
ins
mov
jne
pop
test
adc
sbb
mov
and
lahf
push
pop
and
adc
inc
ds
movs
ret
xor
dec
inc
mov
lods
push
xchg
mov
bound
dec
mov
push
mov
les
(bad)
push
sbb
call
ins
movs
push
shr
sub
inc
cmps
xchg
aas
scas
shr
(bad)
movzx
outs
jno
mov
bnd
inc
cwde
inc
and
push
out
pop
cmps
mov
xor
xchg
(bad)
push
fisubr
xchg
fisttp
js
out
dec
mov
loopne
jns
dec
ret
push
repz
lahf
in
jnp
lods
gs
sbb
mov
xchg
cmp
popa
dec
pop
mov
sbb
jae
nop
and
xchg
inc
gs
sbb
cli
mov
imul
out
or
and
cmp
push
inc
sbb
shr
push
outs
outs
aaa
dec
(bad)
or
in
cdq
xor
fdivr
mov
push
mov
je
xchg
ja
jmp
stos
ret
call
cmp
int3
es
mov
repnz
cmp
adc
lds
adc
stos
movs
sub
pop
cld
and
(bad)
fstp
cwde
xchg
pusha
or
sti
fstp
sub
inc
fwait
or
push
rcl
dec
std
adc
les
xchg
sub
push
adc
test
sub
inc
into
cmps
iret
shl
mov
jns
fisttp
jno
jecxz
shr
leave
mov
adc
add
invd
and
nop
xor
or
movs
adc
jmp
shr
jb
xchg
jmp
lods
dec
adc
cld
and
xchg
jmp
cmc
mov
dec
adc
mov
sti
add
imul
lods
int3
and
pop
aad
movs
ret
aaa
lahf
retf
adc
push
div
test
das
cmps
movs
leave
test
push
adc
cmp
in
dec
push
jge
cmp
aam
or
or
inc
out
in
scas
sub
jne
ins
jle
mov
hlt
mov
xchg
push
es
test
pop
and
mov
imul
arpl
lds
sti
loop
push
repz
cmp
pop
(bad)
jmp
out
cmp
push
call
stos
push
sub
scas
mov
fisub
mov
loope
pop
cmp
adc
mov
pushf
and
cmp
fisubr
fst
in
or
faddp
pop
test
push
(bad)
xchg
cmp
or
inc
mov
inc
add
xor
out
push
rcr
or
mov
or
sub
js
clc
sub
int
inc
jmp
rcr
rcr
jne
mov
loope
dec
sub
out
cmc
sub
pop
je
fistp
ds
jecxz
les
lock
(bad)
ins
mov
xchg
int3
js
(bad)
rcr
sbb
sub
ins
jle
mov
xor
das
movs
jbe
sub
imul
outs
xor
push
xchg
cmp
dec
fwait
hlt
jl
inc
sar
or
shl
push
or
stc
xor
or
xor
cmp
add
pop
(bad)
popf
xor
fdiv
add
mov
imul
or
push
push
jp
dec
mov
and
dec
and
xlat
leave
jnp
sahf
adc
add
push
inc
mov
(bad)
mov
inc
neg
xor
xor
mov
add
outs
hlt
jmp
dec
push
mov
xchg
pop
enter
int3
inc
push
cdq
mov
lods
daa
mov
hlt
rol
les
mov
jmp
sub
cmc
or
cmps
pop
or
push
repz
push
cld
imul
ficom
outs
shl
cmp
cmps
pop
ins
sbb
(bad)
(bad)
xor
inc
xor
mov
int3
scas
inc
fs
jnp
and
cwde
hlt
inc
sar
jne
or
add
push
mov
add
out
aam
push
jae
jbe
test
pusha
pop
iret
sti
xchg
jne
fst
jno
vmulpd
or
or
mov
dec
dec
mov
sbb
jb
mov
xor
call
rcr
mov
into
fwait
sbb
xchg
dec
sbb
scas
call
and
sub
or
mov
ror
inc
sub
rcr
sbb
jmp
push
push
test
sbb
in
dec
out
imul
mov
cmp
neg
(bad)
fwait
mov
sar
enter
js
or
out
test
and
outs
or
cmp
mov
call
in
mov
scas
jmp
sub
dec
in
popf
sbb
xchg
arpl
(bad)
jmp
mov
mul
in
mov
les
jg
xchg
push
sahf
cmps
test
xchg
xchg
test
mov
inc
jmp
sub
das
xchg
ror
gs
in
jb
add
je
cmp
dec
pop
xchg
cdq
je
out
jne
pop
mov
mov
add
inc
sub
repz
std
mov
sub
jecxz
and
adc
je
or
or
push
stos
data16
push
mov
jb
jmp
cmp
xor
and
jecxz
js
lahf
dec
inc
xchg
call
fistp
shr
(bad)
into
ss
mov
ja
aad
cmp
ror
stos
mov
sbb
shl
into
aam
inc
cmp
mov
cld
loop
inc
fdivr
mov
loope
(bad)
cmp
pop
inc
sbb
cmps
xchg
lods
out
cmp
out
mov
inc
pop
test
loope
dec
popf
pusha
es
dec
mov
cs
(bad)
repz
jns
outs
out
sti
cmps
dec
cli
and
rol
push
jbe
xor
inc
pop
inc
iret
movs
sbb
mov
mov
jmp
repz
add
scas
ret
xor
fst
inc
ret
push
sbb
sar
sbb
jbe
add
scas
jo
leave
mov
dec
scas
sbb
sbb
mov
pop
mov
push
sahf
ret
pop
pop
adc
mov
mov
test
leave
pop
sbb
sub
add
into
pop
xor
pop
daa
mov
(bad)
lods
push
outs
test
jmp
shl
out
fwait
push
xlat
mov
stos
sub
rol
jae
and
jae
in
scas
ret
mov
jmp
je
out
jno
ins
out
pop
mov
pop
(bad)
xor
out
das
dec
lock
jl
das
dec
iret
shl
neg
imul
adc
push
or
mov
loopne
pop
lods
jnp
sbb
cmp
lea
into
or
push
jns
xor
add
mov
nop
xchg
xlat
mov
pop
dec
pop
jno
fstp
addr16
cmp
jmp
push
adc
and
jl
in
xchg
pop
rcr
mov
rol
sub
out
mov
cmp
fnstenv
int
js
rcr
sub
das
push
pop
stos
push
ins
ror
sbb
inc
lahf
mov
and
lods
push
imul
push
ror
push
aas
test
sbb
out
out
sub
mov
push
mov
in
loop
rol
fs
xchg
(bad)
es
dec
dec
test
mov
imul
int
ja
fisub
xor
cmp
mov
pop
jb
add
inc
cmp
fist
mov
call
repz
inc
ins
out
popf
pop
adc
mov
daa
sub
or
inc
mov
je
or
aaa
imul
and
hlt
cwde
adc
dec
rcr
idiv
shr
or
ret
inc
mov
push
or
(bad)
test
fidiv
scas
aaa
sbb
cmc
mov
mov
xor
shl
test
cmp
jmp
pop
fisub
dec
mov
jae
mov
in
in
inc
(bad)
fmul
inc
call
pop
dec
jge
ffreep
add
jp
ror
stos
fist
jge
xlat
scas
dec
fwait
lods
hlt
dec
in
fbstp
jb
sahf
pop
(bad)
mov
mov
pop
xchg
movs
pop
out
lock
jle
scas
pop
out
ret
mov
adc
adc
movs
out
cmp
scas
(bad)
dec
cmc
or
jns
jl
xor
cmp
jle
in
(bad)
jns
fwait
lea
mov
dec
mov
cwde
cmp
addr16
mov
iret
or
aam
stos
dec
fld
and
sbb
push
arpl
mov
cmp
push
inc
add
mov
call
les
shl
mov
push
mov
inc
ret
inc
xchg
outs
xor
int
pop
loop
test
sbb
test
rep
pop
sbb
out
fwait
mov
push
dec
in
clc
popa
mov
pop
or
xor
retf
jnp
jbe
mov
inc
push
push
jbe
lods
ret
aad
mov
add
inc
mov
leave
pop
jnp
pusha
js
in
xchg
pop
(bad)
sbb
retf
adc
iret
inc
sbb
scas
adc
mov
hlt
(bad)
fistp
cli
ds
hlt
jle
imul
ja
clc
cmp
cmps
sti
(bad)
clc
popa
jge
outs
push
mov
and
loopne
or
inc
pop
popf
sar
stos
test
imul
mov
push
xchg
bound
add
mov
dec
clc
jb
mov
(bad)
test
push
ss
inc
cs
jmp
add
rcr
in
mov
imul
in
dec
pop
inc
inc
adc
fcmove
mov
retf
sar
out
jnp
adc
shl
inc
shl
add
push
inc
push
aam
adc
xchg
into
jns
add
jb
sub
and
mul
sbb
in
(bad)
fild
aaa
pop
mov
pop
mov
pop
sub
scas
jbe
mov
pop
stos
ret
push
fsub
pop
lahf
outs
test
push
aam
ret
inc
gs
imul
cmp
enter
ins
add
aam
adc
cwde
xchg
and
gs
inc
push
xchg
nop
adc
daa
sbb
adc
sub
pop
daa
push
mov
pop
mov
rol
sti
push
sbb
cld
cmps
adc
dec
rol
inc
push
adc
push
dec
aad
les
mov
outs
xor
scas
popa
lods
fld
jmp
ret
xchg
out
mov
fild
push
sahf
jns
loope
pop
lods
push
jge
and
push
pop
bound
jg
out
out
out
inc
xor
push
mov
mov
int
or
jnp
rcr
lahf
sub
sbb
add
sbb
sbb
enter
int
and
fcmovbe
cmp
mov
pop
and
adc
cmp
and
xor
xchg
jg
shr
mov
push
gs
sar
call
adc
addr16
add
test
retf
jo
sbb
sbb
arpl
and
ja
es
js
and
push
inc
push
call
add
cld
test
popa
push
push
fst
cwde
mov
sub
mov
xchg
(bad)
xor
fs
outs
xor
push
xor
lea
aaa
ins
scas
dec
sub
mov
frstor
xchg
inc
jno
push
in
movs
mov
ret
fdiv
ficom
lds
inc
pop
setne
ror
cmps
lods
adc
sub
ret
mov
mov
lods
cs
movs
cmc
xchg
sub
js
es
add
adc
clc
xor
mov
push
fsub
sbb
aam
stc
mov
test
cmps
test
or
adc
imul
pop
dec
test
std
test
retf
pop
mov
mov
xchg
sbb
sub
rcr
add
(bad)
push
fwait
and
cmp
or
inc
mov
inc
add
pop
add
jo
cmps
mov
jbe
push
mov
sub
mov
xchg
mov
xchg
scas
pop
mov
aaa
sub
(bad)
add
push
adc
(bad)
sub
in
jne
pop
pop
cmp
ret
or
test
sbb
ja
in
ss
shl
sub
xchg
stos
inc
call
mov
xor
aad
inc
jb
loopne
sahf
mov
clc
dec
pop
bound
add
ja
dec
dec
daa
add
icebp
push
or
xchg
aas
and
je
mov
(bad)
fcom
jbe
fnstsw
mov
retf
xchg
ret
add
bound
cwde
add
dec
xchg
jo
and
bound
xchg
fistp
hlt
inc
or
push
nop
shl
fldcw
leave
inc
rcl
stos
inc
test
jle
inc
inc
or
inc
lods
enter
push
mov
cmc
mov
mov
cmp
retf
ror
in
lods
stos
cmp
jmp
pop
fisub
mov
lods
pop
scas
inc
in
in
inc
(bad)
fmul
inc
call
pop
dec
jge
(bad)
(bad)
mov
adc
aad
mov
lods
js
inc
shr
cdq
fist
mov
xchg
push
pop
mov
inc
in
cmp
dec
push
push
(bad)
jo
inc
call
push
pop
int
or
fsub
pop
cmp
test
xchg
fcomp
adc
xchg
push
sahf
cmps
test
xchg
xchg
test
mov
inc
jmp
sub
sub
hlt
in
jb
add
je
cmp
dec
pop
xchg
cdq
add
mov
xchg
mov
add
mov
jmp
clc
int
shl
mov
addr16
rcl
inc
and
test
cmp
dec
or
cmp
push
aam
mov
movs
mov
cmps
ret
outs
xor
and
ss
int
inc
jno
and
sub
fld
fisub
pop
push
(bad)
scas
adc
dec
add
cwde
mov
or
xchg
add
mov
fsubr
ror
test
xchg
ficomp
push
fsubr
adc
mov
lock
ret
jge
dec
mov
fist
pop
mov
rol
lods
push
rcr
repnz
test
stc
add
pushf
xchg
sub
mov
adc
out
jmp
push
aas
int
pop
clc
jb
xor
out
mov
and
mov
lds
and
sub
(bad)
fstp
les
repz
ret
and
fcmovu
movs
mov
je
imul
bound
jmp
mov
push
icebp
cmps
test
mov
or
cmp
inc
dec
hlt
xor
int
imul
mov
retf
imul
mov
movs
test
mov
(bad)
aad
fild
or
in
dec
and
or
js
adc
cmps
sub
sub
std
std
inc
jnp
push
push
inc
jle
mov
cmp
fs
xor
sbb
popf
scas
inc
(bad)
fst
jnp
sub
or
inc
int3
cmps
inc
test
push
retf
cmc
ret
fisttp
dec
and
push
std
int
and
mov
jp
fidivr
jnp
sti
je
fwait
inc
pop
iret
sub
adc
fidivr
fpatan
leave
sbb
add
movs
jne
mov
daa
popa
mov
fstp
sub
jbe
ficom
or
jg
outs
mov
out
mov
mov
mov
imul
aad
mov
imul
or
mov
lahf
dec
and
push
in
adc
stos
push
fist
push
xor
push
lea
push
retf
imul
push
jne
call
(bad)
popa
xchg
dec
mov
or
dec
sub
repz
push
cmps
fistp
mov
jbe
das
push
push
mov
push
outs
loope
(bad)
jge
or
mov
mov
inc
out
jmp
adc
or
data16
xchg
loope
iret
cmps
jecxz
fsub
mov
lods
inc
mov
ds
xor
add
out
rcr
xchg
outs
add
sbb
adc
pop
dec
adc
imul
test
cs
sbb
in
lock
popa
shr
push
cmp
or
outs
aam
sub
ins
push
imul
in
ins
ficomp
fldcw
fist
push
aaa
mov
dec
pop
adc
jno
fild
cdq
int
dec
inc
fidivr
mov
pop
(bad)
and
xor
in
dec
push
xchg
adc
mov
pop
jno
lds
cwde
test
mov
xchg
fst
mov
dec
mov
sbb
xchg
pop
adc
cmp
and
add
or
inc
sbb
push
dec
jp
mov
xlat
sbb
retf
and
fidivr
jnp
sbb
and
add
test
add
xor
xchg
and
jo
pop
(bad)
nop
les
cld
shl
iret
cli
mov
adc
and
push
inc
push
pop
add
mov
call
push
pop
add
push
and
adc
push
mov
mov
ret
(bad)
pop
xchg
mov
inc
xchg
jbe
pop
inc
mov
mov
fld
jmp
(bad)
movs
leave
pushf
imul
dec
inc
sbb
nop
mov
or
imul
inc
adc
mov
retf
jnp
mov
shl
cmps
fsubr
adc
mov
and
push
pop
popf
fimul
mov
cli
or
repnz
retf
mov
or
mov
js
mov
test
in
mov
test
jmp
mov
ret
(bad)
loope
sbb
loop
add
lahf
sti
cwde
inc
data16
add
xchg
sub
or
and
or
mov
mov
jb
add
mov
dec
pop
ret
fs
fwait
aaa
(bad)
ja
xchg
jbe
mov
rcr
or
call
inc
repz
adc
js
clc
sub
int
inc
jmp
rcr
rcr
jne
mov
loope
dec
sub
out
cmc
sub
pop
je
fnstsw
ds
loopne
(bad)
xor
adc
xchg
mov
sbb
adc
stos
(bad)
stos
pop
stos
xchg
push
pop
loop
inc
pop
mov
shl
dec
arpl
xchg
mov
pop
iret
xchg
fs
sbb
push
xchg
int3
jo
daa
ror
dec
and
mov
inc
lock
fnsave
cmp
xchg
ja
mov
mov
std
push
retf
mov
push
sbb
push
push
mov
iret
shr
sbb
das
xchg
enter
jns
hlt
jl
out
jg
fdiv
mov
imul
sbb
xor
clc
adc
add
inc
mov
cmp
lea
jbe
push
mov
cmp
dec
mov
mov
lahf
dec
and
push
in
outs
xor
and
push
mov
hlt
and
ror
mov
dec
push
cmp
in
imul
fsub
jbe
lods
push
outs
sbb
sub
sub
mov
das
mov
sti
mov
in
mov
(bad)
fcom
ss
ror
add
inc
arpl
(bad)
(bad)
adc
push
aas
pop
sub
sbb
fwait
sub
add
jmp
movs
fist
outs
addr16
xor
cli
pop
lods
scas
jecxz
jae
dec
inc
test
fidivr
fild
mov
mov
mov
jae
and
packssdw
push
jo
ins
das
fidiv
adc
addr16
mov
ret
mov
scas
push
xchg
adc
aaa
call
retf
test
dec
repz
fist
rol
rcr
hlt
scas
lock
sbb
fs
icebp
mov
movs
lds
nop
lds
clc
mov
loop
cmp
jnp
mov
in
mov
outs
mov
pop
sub
inc
sbb
mov
fcom
and
dec
aam
jne
and
sub
lods
xchg
int3
mov
pop
xor
sahf
fsub
jbe
lods
adc
fcomp
lods
add
mov
cmp
das
push
rol
scas
dec
repz
(bad)
jmp
(bad)
mov
int
imul
mov
pushf
mov
aaa
mov
xchg
sahf
test
and
xchg
pop
push
out
int3
fwait
nop
xchg
xor
gs
rcl
inc
add
bound
push
or
cmp
sbb
daa
jne
jnp
xchg
dec
fst
push
jmp
jbe
fwait
shl
inc
add
fidiv
sbb
mov
jbe
or
jmp
lods
outs
sbb
and
and
push
scas
cmp
jno
cmps
aaa
push
lea
mov
in
imul
(bad)
movs
shl
lock
inc
sub
int3
adc
cs
stos
push
repnz
xchg
xchg
and
fcom
xchg
into
push
mov
xchg
fucom
inc
and
mov
xchg
cmp
bnd
popf
jno
ins
rcr
mov
scas
xor
into
cld
xor
ins
cmps
imul
gs
fidiv
pop
lods
fs
call
mov
dec
sbb
push
or
int
or
(bad)
mov
sbb
sub
es
je
seto
pop
xchg
cdq
int3
dec
out
jne
pop
sbb
sbb
les
cmp
sti
stos
inc
sahf
cli
fisub
cmp
mov
aaa
out
mov
jne
dec
je
add
mul
cmp
xor
fdivr
cld
xchg
test
mov
sub
xor
repz
jle
mov
retf
jp
sub
or
pop
mov
cs
stos
dec
add
je
mov
ror
test
xchg
cmp
xor
fdiv
mov
mov
lock
ret
jge
dec
mov
fist
pop
mov
rol
lods
push
rcr
repnz
test
stc
add
pushf
xchg
sub
mov
adc
out
jmp
push
aas
int
fs
(bad)
mul
jle
mov
cwde
inc
data16
or
jb
leave
data16
daa
ss
stos
jae
nop
and
push
or
mov
adc
mov
and
(bad)
(bad)
int3
inc
lds
cdq
arpl
imul
enter
repnz
jo
mov
add
push
aas
lds
inc
rcr
sbb
inc
mov
adc
stos
jb
dec
repz
pop
test
retf
cmp
jae
lahf
hlt
in
push
xchg
mov
ret
movs
jge
add
cmp
or
xchg
dec
pop
stos
pop
bnd
xchg
lods
scas
push
and
sub
es
test
mov
aad
pop
dec
jno
dec
(bad)
fstp
mov
scas
pop
out
ret
cld
jae
cld
sbb
sbb
jae
dec
jmp
xchg
pop
out
or
int
sbb
mov
(bad)
sbb
popf
frstor
rcr
inc
cmp
jne
fwait
push
loopne
adc
inc
inc
(bad)
mov
mov
sbb
and
add
sbb
clc
movs
cmp
outs
ja
add
sub
std
fst
add
popf
mov
dec
lds
adc
pop
aad
ret
outs
ja
cmc
pushf
inc
xchg
and
movs
mov
test
shl
xchg
mov
mov
pop
dec
pop
std
mov
mov
jne
fcmovnu
mov
imul
fs
xchg
daa
push
push
jl
retf
(bad)
rcr
mov
mov
mov
leave
xchg
inc
mov
push
into
fmul
inc
sbb
cmp
enter
int3
xchg
(bad)
cli
cli
icebp
sbb
xchg
(bad)
js
mov
mov
repz
(bad)
push
xchg
lods
cmp
loopne
xchg
pop
jae
pop
stc
ins
stos
test
out
cmps
mov
jg
(bad)
jae
xchg
xor
dec
(bad)
mov
(bad)
push
jo
stos
loope
lea
repnz
leave
inc
xor
popf
inc
aaa
mov
int
add
popa
dec
mov
mov
push
dec
push
adc
inc
mov
sbb
inc
popf
(bad)
repz
jl
mov
rol
inc
mov
out
inc
mov
and
mov
dec
dec
xchg
jle
add
mov
dec
lods
jg
leave
gs
xchg
movs
leave
pop
test
xor
jmp
push
out
fwait
mov
push
dec
in
clc
popa
mov
in
and
(bad)
jmp
retf
data16
jmp
call
pop
xor
sahf
fcom
jae
or
inc
arpl
lea
repz
ds
jo
add
(bad)
dec
add
jnp
or
test
aam
sahf
cmps
(bad)
sub
mov
fist
out
cmp
sbb
sti
mov
in
and
aas
lahf
es
dec
loope
pop
lea
retf
cmp
in
push
or
(bad)
sub
mov
inc
inc
push
add
call
mov
sbb
mov
mov
add
add
sbb
mov
jmp
retf
outs
test
push
stos
mov
push
iret
lods
leave
push
sbb
xor
xchg
jmp
adc
std
(bad)
mov
add
scas
fsubr
adc
sub
and
xchg
fimul
mov
loop
cli
icebp
xchg
jmp
call
xchg
pusha
or
sti
fstp
mov
sub
js
stos
lods
or
lock
jae
fdivp
xor
sub
adc
pop
(bad)
ja
nop
xchg
mov
lahf
(bad)
xchg
mov
aaa
xor
scas
into
movs
xor
mov
and
push
or
je
dec
jle
nop
push
rol
test
or
sbb
xchg
add
and
test
arpl
call
inc
movs
jle
jmp
mov
mov
rol
gs
rcr
repnz
icebp
mov
int
inc
sbb
push
mov
lock
mov
jnp
in
idiv
or
push
xchg
ss
outs
mov
std
fistp
icebp
mov
mov
test
in
and
mov
fcomp
mov
neg
bound
adc
push
jb
shr
stos
adc
pop
and
mov
out
mov
push
rol
scas
inc
or
pop
mov
icebp
(bad)
or
out
les
out
dec
mov
ins
jmp
lods
inc
adc
mov
mov
cmp
enter
out
hlt
or
sbb
hlt
test
cmc
clc
jnp
xchg
push
cwde
sbb
cmp
cmp
test
imul
push
loopne
mov
push
cmc
sbb
mov
pusha
retf
jecxz
cmps
ja
mov
ror
(bad)
sbb
fmul
cwde
dec
xlat
mov
and
scas
arpl
mov
jne
adc
cmp
push
xor
div
(bad)
pop
addr16
dec
dec
test
lahf
or
xchg
cmp
xchg
stos
ja
add
out
and
sub
es
test
mov
into
inc
ja
adc
xor
jl
pop
out
ret
cld
jae
cld
out
daa
add
mov
pop
cld
mov
inc
mov
dec
ins
mov
inc
loopne
imul
pop
out
inc
inc
push
adc
aam
and
scas
xchg
sub
inc
mov
inc
lock
lahf
out
jno
les
jno
dec
jmp
(bad)
sub
pop
mov
rol
jle
jmp
cwde
retf
xor
push
fwait
mov
adc
cli
add
xor
sbb
sbb
dec
test
dec
aas
outs
xor
stos
dec
in
ficom
jmp
mov
jmp
jmp
daa
xchg
lds
sub
into
push
sar
mov
cmp
sbb
nop
push
or
or
push
inc
call
sub
es
fs
lahf
jo
fist
xchg
push
ins
mul
int3
sti
or
fadd
sbb
adc
ror
or
ffree
dec
aam
stc
lock
and
xchg
inc
add
inc
lea
arpl
or
and
out
cmp
mov
iret
ins
mov
pop
pop
and
shl
xor
xchg
sub
(bad)
cs
dec
popa
pop
and
jg
pop
adc
call
lds
jge
xor
or
inc
add
mov
mov
stos
adc
outs
mov
xor
ins
xor
retf
mov
in
addr16
push
cli
add
mov
mov
fld
inc
ds
inc
ret
jnp
imul
nop
ins
shl
ins
or
xchg
mov
xchg
adc
data16
pop
mov
int3
rcr
inc
fcom
iret
push
inc
cmp
cmc
and
adc
jecxz
and
cwde
dec
(bad)
cmp
test
(bad)
sti
and
mov
mov
mov
push
mov
popf
in
(bad)
test
mov
jb
inc
cdq
inc
in
cmp
sub
pushf
ret
sbb
std
sub
xor
shr
pop
sbb
xchg
inc
push
fwait
jp
mov
or
sar
add
sbb
or
shr
jmp
dec
aad
push
arpl
push
lds
ficomp
fcomi
call
sub
jecxz
jge
loopne
int
jae
mov
xor
dec
shr
ins
rcr
mov
cs
sub
movsx
sub
in
xchg
aas
cmps
int3
sub
lods
mov
jae
data16
pop
test
mov
or
btc
and
dec
fwait
jmp
pop
jb
add
inc
cmp
fist
mov
call
repz
inc
ins
out
popf
pop
adc
mov
daa
sub
or
inc
mov
je
or
aaa
imul
and
hlt
cwde
adc
dec
xchg
popa
add
(bad)
xor
add
out
int3
pusha
adc
jl
inc
mov
xor
and
daa
adc
xor
mov
stos
sbb
data16
mov
aad
ins
and
adc
and
lods
fcmovnb
inc
pop
jno
pop
cmp
mov
rcl
mov
fist
inc
popf
retf
push
push
jbe
lods
push
outs
sbb
pushf
mov
xchg
xor
ja
shl
dec
cmps
jle
pop
cmps
push
ins
lea
scas
shr
ret
mov
sbb
xor
push
add
nop
cwde
sbb
adc
fwait
and
cmovge
push
mov
fmulp
mov
ret
(bad)
addr16
xlat
sbb
xchg
push
and
les
inc
inc
mov
mov
jmp
and
dec
mov
out
mov
shl
xlat
dec
fistp
inc
mov
mov
arpl
cld
popf
ret
punpckhbw
loop
inc
or
pop
test
or
loope
not
test
loop
stos
mov
(bad)
imul
stos
jnp
stos
ret
fcom
adc
and
ror
mov
retf
xchg
mov
in
retf
cmp
sub
pop
imul
and
push
pop
jmp
movs
push
fist
inc
add
push
adc
and
or
cmps
push
pop
jno
in
(bad)
mov
cdq
cld
jo
inc
mov
xor
sub
push
fisttp
adc
repnz
xchg
out
mov
aad
inc
stos
adc
fidivr
jp
pop
hlt
mov
out
inc
add
adc
fbstp
sbb
lahf
std
cmps
enter
ror
jmp
jle
nop
lds
sub
adc
ins
pop
sbb
push
inc
push
pop
cdq
sub
(bad)
xchg
in
mov
push
sbb
daa
adc
mov
jle
sbb
data16
pop
mov
mov
push
stos
lods
scas
imul
pushf
mov
xchg
clc
jbe
(bad)
pop
jp
arpl
ror
mov
cs
or
xor
xchg
enter
arpl
push
cmp
dec
mov
int
or
jnp
rcr
fwait
sub
sbb
add
sbb
sbb
enter
int
and
fcmovbe
cmp
mov
pop
and
adc
cmp
and
xor
xchg
cmp
shr
mov
push
gs
inc
add
inc
js
mov
out
cmp
dec
inc
int3
pop
cmps
adc
cmp
pop
loopne
les
fdivr
jge
jl
xor
dec
push
inc
push
pop
push
test
xchg
xor
popa
ret
repz
add
loop
rcl
daa
adc
cmp
mov
jmp
cmp
ins
push
sub
push
mov
mov
xchg
test
push
stos
lea
(bad)
jmp
cmp
adc
jmp
ret
xor
add
sub
xchg
pop
cmc
add
pushf
pop
pop
xchg
xlat
fist
pop
inc
aaa
push
jae
mov
jno
jb
cmp
adc
les
pushf
jne
jle
fimul
inc
shl
inc
daa
adc
cld
dec
(bad)
cmp
or
dec
cli
je
inc
xchg
out
jb
fsub
inc
jb
test
mov
call
cmp
test
pusha
leave
adc
inc
rol
xor
mov
popf
das
jnp
sbb
in
out
mov
mov
(bad)
mov
jmp
stos
mov
pushf
scas
cmp
or
out
out
cmp
adc
lods
(bad)
sbb
in
sbb
icebp
mov
xor
adc
shl
add
mov
cmp
sbb
fs
mov
(bad)
push
sub
movs
mov
ds
mov
js
pop
fisttp
add
cmp
adc
enter
ins
or
xchg
add
test
pop
push
mov
aad
neg
rol
in
mov
das
sub
out
jmp
cmp
das
push
rol
dec
pusha
das
out
ror
cmc
jl
das
dec
xor
cmp
scas
(bad)
dec
mov
pop
scas
(bad)
mov
lods
dec
fst
daa
pop
mov
arpl
sahf
sub
adc
(bad)
jg
fwait
jb
out
lahf
stc
cwde
shl
or
add
lds
mov
(bad)
stos
ror
jecxz
push
mov
rcl
idiv
xor
int
rcr
pop
xor
add
call
fistp
leave
sub
push
mov
adc
shl
ss
push
sti
cmp
scas
mov
vmovntps
ficomp
pop
push
stos
test
hlt
int
aam
sub
mov
(bad)
loop
and
(bad)
mov
je
or
jne
sub
ret
mov
idiv
int3
and
inc
push
mov
pop
mov
jbe
xor
and
pop
rcl
inc
jge
inc
ins
out
fwait
mov
test
bound
mov
into
iret
cmp
cs
push
pop
call
shl
mov
pusha
add
mov
inc
jl
xchg
add
fadd
pop
loop
(bad)
mov
inc
iret
fs
ins
add
call
retf
dec
mov
lea
inc
inc
mov
(bad)
(bad)
pop
int3
add
or
icebp
ds
lock
mov
aad
fsub
mov
cmp
mov
sbb
aas
and
or
xor
sar
shr
jns
in
cmp
sahf
mov
lods
shl
imul
xchg
ret
ror
mov
pop
jnp
int
jns
mov
mov
push
sahf
out
rol
mov
xor
push
arpl
(bad)
nop
jns
ss
sti
fcmovnu
mov
popf
push
push
stc
and
and
or
ret
push
or
stc
xor
or
test
cdq
cmp
jmp
lea
fwait
dec
jg
pop
(bad)
popf
xor
fdiv
add
mov
neg
or
push
push
jp
dec
mov
jbe
xchg
mov
jp
nop
push
dec
shl
push
dec
push
sbb
aam
jmp
popa
shr
loop
les
stos
cmp
icebp
mov
daa
push
mov
mov
ins
push
fsubr
data16
sbb
outs
xor
and
daa
lods
movs
aam
jno
pop
cmp
mov
adc
inc
aas
adc
mov
sbb
adc
inc
adc
pop
inc
or
mov
push
mov
sbb
mov
mov
stos
int
pop
out
adc
adc
mov
imul
loope
(bad)
jg
enter
fs
mov
push
arpl
dec
mov
and
adc
jge
adc
and
ins
in
fst
cdq
sbb
ins
lock
stc
mov
int
jno
jecxz
fcom
mov
nop
fcom
add
invd
xor
pop
dec
sbb
pop
adc
retf
cld
pop
int
fucomi
repz
(bad)
outs
iret
xchg
mov
xchg
(bad)
fist
add
jmp
hlt
arpl
or
iret
mov
xor
dec
(bad)
sbb
rcr
sub
mov
ins
sar
inc
stc
arpl
sub
mov
dec
push
retf
pop
xor
test
or
mov
jge
scas
xchg
iret
jmp
aam
jne
ins
pop
fwait
enter
movs
stos
push
xchg
int3
imul
cmp
imul
bound
pop
jae
loop
jmp
add
mov
ret
fcom
mov
nop
mov
out
lock
mov
mov
retf
pushf
jb
sti
fucomip
and
popf
scas
inc
sar
push
scas
std
int3
inc
aas
ret
mov
push
(bad)
push
les
movs
mov
(bad)
mov
jmp
fist
inc
mov
fstp
pop
out
clc
adc
(bad)
fwait
pop
lds
add
mov
adc
inc
ret
sbb
inc
pop
repnz
loop
sbb
leave
jb
cld
rcr
push
jge
sub
cmp
sbb
lahf
jne
pusha
jns
mov
sti
cli
pusha
std
movs
dec
push
test
(bad)
fwait
mov
rcl
jle
push
inc
sbb
mov
js
out
cdq
sahf
(bad)
stos
scas
push
mov
xchg
lea
mov
sahf
pop
and
test
out
jo
jecxz
pop
mov
fcom
xor
out
das
dec
lock
lods
mov
fs
push
mov
out
jae
pushf
sub
shl
test
jnp
sahf
sub
adc
(bad)
jg
lahf
cmp
hlt
repz
pshufw
repnz
aam
mov
push
imul
in
pop
int
rcl
sub
repz
lods
out
dec
pusha
xor
aam
aaa
test
mov
hlt
test
cmp
dec
or
cmp
push
aam
and
movs
mov
cs
cmps
ret
outs
xor
ret
scas
arpl
lds
in
push
int
fwait
(bad)
hlt
xor
leave
jecxz
bound
ss
outs
test
add
and
and
push
cmp
pop
sub
outs
add
dec
rol
jb
fst
xchg
push
test
es
rcr
push
xchg
shl
leave
bnd
mov
test
bound
mov
into
iret
cmp
cs
push
pop
call
shl
mov
pusha
add
mov
inc
jl
xchg
add
fadd
pop
loop
(bad)
mov
inc
int
lods
(bad)
repnz
xor
mov
jnp
fldcw
xor
cmps
dec
rcr
pop
jno
fstp
addr16
sbb
jmp
push
adc
and
jl
in
xchg
pop
rcr
mov
rol
sub
out
mov
cmp
fnstenv
int
js
rcr
sub
test
ins
ror
sbb
inc
lahf
mov
retf
frstor
jmp
push
dec
aad
imul
into
inc
mov
inc
dec
jg
shl
retf
rcl
mov
fwait
cmps
imul
repz
jno
in
mov
mov
jbe
in
test
xlat
pop
mov
pop
out
push
adc
je
mov
adc
addr16
fdivr
shr
nop
outs
mov
push
fidivr
gs
mov
push
cmp
(bad)
jnp
test
(bad)
stos
mov
and
call
push
xor
xchg
dec
xor
inc
xor
imul
inc
fcomp
mov
mov
mov
push
call
bound
push
pop
add
jmp
rol
aam
sub
mov
in
xor
test
ficomp
xchg
mov
push
aaa
mov
dec
scas
mov
fucomp
mov
xlat
push
mov
mov
and
jae
shl
inc
call
(bad)
stos
jbe
retf
mov
xchg
pop
xor
adc
inc
fdiv
jecxz
fistp
adc
loop
in
dec
and
(bad)
aam
mov
sbb
push
rcl
in
mov
pop
sub
mov
cmp
and
push
test
cmps
mov
pop
ret
push
data16
repz
in
(bad)
es
fs
fcmovb
mov
mov
dec
add
mov
clc
addr16
lahf
jg
dec
push
sahf
sub
mov
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
repnz
mov
ror
inc
sub
xor
lahf
add
push
inc
aad
jle
inc
lahf
push
lock
lods
pop
xchg
jmp
rcr
jecxz
mov
les
cwde
repz
fwait
add
aad
fisubr
scas
inc
push
mov
add
and
push
dec
(bad)
jae
jo
mov
lods
inc
add
inc
cmp
lods
retf
sti
add
inc
arpl
(bad)
in
mov
cmc
jge
or
daa
sbb
xchg
aaa
sbb
stos
xor
xchg
fwait
popf
shr
mov
push
lds
jg
jnp
out
xor
sbb
call
adc
and
daa
hlt
xor
and
int
adc
xchg
pop
pop
call
(bad)
xor
fsub
sub
push
xor
inc
jmp
push
stos
cmp
rol
dec
jmp
dec
xlat
xor
xchg
xchg
mov
cmps
shl
movs
push
push
push
rcl
lea
cmp
mov
xor
mov
inc
adc
fadd
sub
mov
ror
sar
stos
cmc
fisubr
sahf
aam
jne
ins
push
pop
xchg
enter
inc
mov
movs
(bad)
popf
call
and
test
jge
inc
addr16
hlt
lea
les
add
cs
mov
inc
jp
ror
fmul
in
dec
(bad)
cmp
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivr
jge
mov
cmp
xchg
es
and
shr
ret
dec
sbb
hlt
outs
mov
call
lods
dec
pop
mov
fild
inc
jb
call
push
cmove
int
push
pop
add
dec
repz
daa
jne
mov
push
push
adc
push
inc
pop
fbstp
sbb
sub
retf
(bad)
mov
icebp
add
fdivr
cdq
rcr
adc
pop
pop
inc
imul
jge
mov
cmps
and
sub
(bad)
jle
fcom
jbe
fmul
jp
scas
repnz
cmc
or
(bad)
add
retf
test
mov
mov
dec
lock
lods
mov
fs
dec
cwde
(bad)
push
mov
out
jno
push
add
xchg
int3
sbb
dec
inc
jns
retf
sbb
setp
xor
lods
div
stc
into
add
xchg
mov
ss
(bad)
mov
jmp
fdiv
cmp
adc
push
mov
mov
leave
mov
lea
pop
jmp
and
jl
pop
adc
mov
xor
test
fs
add
sbb
clc
jl
push
pop
retf
mov
retf
sar
xor
(bad)
pop
jp
adc
add
xchg
dec
pop
in
enter
add
mov
push
nop
ins
and
push
cmps
push
gs
jmp
aas
mov
mov
push
ret
scas
inc
and
sub
mov
fadd
xchg
push
js
ret
dec
cmps
imul
pop
mov
jno
dec
xor
mov
push
pop
pop
imul
add
mov
xchg
push
test
pop
fld
enter
mov
cmp
push
and
dec
dec
mov
xor
sub
rcr
pop
push
test
movs
outs
push
dec
cwde
jo
fdiv
aaa
sub
sbb
shr
(bad)
mov
inc
test
sbb
jmp
in
push
xor
jmp
jp
mov
in
rcr
sbb
xor
mov
adc
retf
jle
fs
cmps
dec
out
pop
rcr
mov
add
jo
retf
pop
rcl
xchg
mov
lods
inc
pusha
xor
pop
mov
dec
fidiv
adc
test
add
inc
pushf
cmp
loop
push
(bad)
(bad)
sub
xor
jo
jle
scas
pop
out
(bad)
cld
jb
dec
sbb
add
imul
sahf
retf
jg
scas
(bad)
mov
out
jb
fsubr
jbe
(bad)
out
cmps
inc
retf
adc
pop
(bad)
mov
dec
mov
mov
jo
push
pop
sub
out
hlt
add
pop
ror
arpl
pop
sub
mov
sahf
add
xor
add
jnp
pop
jno
xlat
xlat
faddp
ret
ret
xor
xchg
loop
inc
mov
sbb
xlat
inc
aad
imul
retf
repz
xchg
jle
add
mov
dec
lods
jg
leave
gs
xchg
movs
leave
pop
test
xor
jmp
push
out
fwait
mov
push
dec
in
clc
popa
mov
in
and
(bad)
xchg
jmp
call
scas
push
adc
ins
pop
loope
push
adc
adc
or
jecxz
(bad)
pop
and
in
add
pushf
add
adc
cs
xchg
mov
je
ror
dec
rcl
mov
fbstp
loopne
outs
imul
sbb
inc
test
daa
dec
out
jno
pop
fisttp
(bad)
dec
cdq
leave
mov
mov
(bad)
xchg
dec
xchg
mov
rcl
mov
sub
or
lods
(bad)
lods
inc
pop
cmp
push
loopne
mov
cmp
dec
adc
clc
lds
cld
outs
ss
jo
or
fcomp
mov
cdq
xchg
and
mov
test
ror
ss
xchg
scas
pusha
lods
pop
imul
popf
push
ja
pop
imul
lods
or
fsub
mov
shl
call
(bad)
popa
or
xchg
push
es
inc
jb
loopne
pop
jo
sub
btr
outs
mov
lock
ins
mov
js
inc
int3
or
adc
jo
mov
inc
dec
aam
stc
lock
and
xchg
inc
add
inc
lea
arpl
or
and
out
cmp
mov
iret
ins
mov
pop
pop
and
shl
xor
xchg
sub
(bad)
cs
dec
popa
pop
stos
popf
push
mov
pop
adc
call
ret
loopne
jl
mov
mov
mov
in
push
movs
sbb
cmp
xor
pop
into
cld
sub
xchg
das
pop
mov
push
adc
stos
mov
nop
scas
push
test
int
inc
fbstp
outs
aas
sub
jo
fld
std
dec
les
test
rcr
pop
bound
stos
sub
wrmsr
sub
retf
jnp
retf
pop
inc
mov
jb
aaa
or
mov
dec
mov
mov
imul
lea
addr16
fimul
lahf
adc
clc
les
shl
inc
xor
fdiv
add
push
test
xchg
adc
data16
mov
lea
icebp
mov
ret
cmps
mov
fcmovbe
or
mov
xlat
pop
(bad)
nop
int3
inc
cmp
sbb
inc
out
ret
fs
lock
(bad)
stos
cmovne
mov
xor
dec
rol
or
loope
sbb
xlat
pusha
mov
popa
and
es
test
popa
jecxz
loopne
sbb
in
aaa
stos
add
dec
mov
add
int
jg
adc
rcr
pushf
xchg
pop
push
stc
mov
push
mov
push
adc
sub
scas
push
cmc
mov
mov
mov
stc
cmps
jae
test
(bad)
rcl
inc
mov
popa
mov
jl
or
xchg
ror
xchg
mov
add
cmp
push
inc
sbb
das
(bad)
fild
mov
clc
jo
mov
cmp
add
xcrypt-ctr
cmps
(bad)
fadd
xor
inc
and
shr
stos
push
shl
pop
dec
add
mov
fwait
mov
mov
js
data16
rcl
or
and
es
mov
push
loop
xchg
ds
push
dec
mov
cdq
neg
mov
out
les
inc
cmp
or
imul
(bad)
jecxz
add
scas
fwait
aad
in
(bad)
pop
add
jmp
lods
jmp
cmp
fnstenv
xchg
xor
std
dec
clc
xchg
xchg
shl
sub
cmp
or
pop
call
imul
movs
cs
adc
xor
cs
stos
push
or
shl
je
fisubr
cmps
dec
sub
sub
popa
or
xchg
int3
jmp
(bad)
scas
aas
test
xchg
in
cmpxchg
out
jno
ins
out
pop
mov
scas
paddw
add
pop
pop
pusha
sub
ror
jecxz
(bad)
inc
mov
es
mov
pop
and
xchg
imul
add
ret
ret
fldenv
mov
inc
lods
out
std
into
add
and
ror
add
mov
or
je
out
loope
mov
ret
cmp
or
push
push
push
lds
sbb
mov
or
mov
test
cmp
pop
retf
cmp
mov
dec
(bad)
sbb
xchg
cdq
jno
cdq
xchg
and
mov
test
cli
pop
jge
pop
mov
sub
lods
and
out
push
inc
ds
mov
ins
aam
inc
stos
adc
push
cmps
test
shl
stc
punpckhwd
dec
in
dec
pop
sahf
mul
dec
in
les
fistp
inc
pop
dec
rcr
jno
or
sbb
inc
inc
loope
stc
loope
js
test
jl
jge
xor
(bad)
jle
stos
aam
imul
push
mov
jl
cmps
xchg
sub
mov
rcl
in
cmp
xchg
xchg
pop
(bad)
cwde
(bad)
out
cwde
je
enter
rcl
ret
inc
push
jb
adc
mov
sbb
bound
ret
adc
and
cmp
adc
popf
je
pop
pop
in
mov
mov
sbb
sbb
xor
ror
pop
dec
dec
sbb
xchg
out
push
mov
sbb
loop
mov
dec
pop
stos
dec
popa
jmp
push
pop
push
pop
inc
jle
movs
inc
add
cmc
mov
hlt
dec
inc
sub
sub
add
dec
inc
popa
jg
out
ins
dec
mov
cwde
push
and
dec
sub
(bad)
jae
les
mov
int3
repnz
xchg
jo
rcl
lahf
xchg
inc
aam
clc
xor
mov
push
fsub
sbb
adc
stc
mov
movs
inc
push
mov
or
in
jg
fsub
ins
cmp
clc
les
cmp
enter
dec
sbb
sub
dec
push
aam
iret
mov
stc
les
fwait
dec
shl
imul
pop
cmps
pusha
mov
mov
in
mov
je
add
inc
jnp
pushf
out
cmp
adc
push
imul
lds
inc
inc
xchg
mov
pop
dec
sbb
lods
xor
rcr
jne
cmc
fwait
inc
cs
inc
popf
gs
xlat
xchg
cmps
mov
and
xlat
cli
aad
xchg
add
cli
dec
mov
sub
push
popa
fst
movs
fst
cld
test
mov
dec
(bad)
shl
pop
push
fmul
fstp
popa
sbb
in
mov
adc
nop
std
pop
mov
fnstenv
pop
repnz
repnz
test
jnp
je
sub
adc
(bad)
jl
jns
outs
mul
(bad)
or
les
daa
and
add
cdq
mov
movs
(bad)
iret
out
xor
aas
mov
mov
cs
fwait
loopne
test
rol
js
in
dec
jo
push
call
adc
cld
sub
(bad)
adc
ins
jecxz
and
sbb
and
push
dec
cmc
mov
mov
xor
shl
test
cmp
jmp
pop
fisub
or
lods
pop
scas
inc
in
in
inc
(bad)
fmul
inc
call
pop
dec
jge
repz
ror
stos
fist
jge
mov
mov
push
cmp
xchg
stos
sbb
aas
scas
shr
(bad)
movzx
outs
or
leave
loop
arpl
jne
ret
jnp
scas
inc
repz
(bad)
push
fisubr
xchg
add
jg
daa
daa
pop
cmp
movs
jbe
xor
and
mov
xor
pop
in
jnp
sbb
and
add
pusha
cmp
data16
inc
addr16
xor
(bad)
mov
int
push
and
add
mov
and
push
inc
push
push
push
lds
or
sahf
add
ret
mov
hlt
xor
stos
jns
sub
sbb
inc
jbe
xor
out
mov
mov
sub
push
add
inc
push
push
int
jmp
and
call
iret
imul
xchg
xchg
mov
mov
lds
xchg
xor
push
mov
les
call
pop
jno
lds
pop
test
mov
xchg
fst
mov
dec
mov
sbb
xchg
pop
adc
cmp
and
add
or
inc
sbb
push
dec
jp
mov
xlat
sbb
retf
and
fidivr
jnp
sbb
and
add
pusha
cmp
data16
inc
sbb
push
or
push
iret
hlt
aam
stos
dec
sbb
adc
and
push
inc
push
push
cdq
shr
movs
ret
es
repnz
enter
jle
ins
and
adc
popa
sahf
cli
jecxz
cmc
add
popa
outs
into
push
or
cmp
mov
test
hlt
jge
lods
jae
popf
jnp
inc
(bad)
loop
cmp
(bad)
and
fmul
pop
sbb
or
add
dec
jo
dec
dec
pop
pop
push
dec
fs
cwde
push
mov
lods
xchg
push
es
sbb
aas
stos
jmp
iret
test
inc
xchg
(bad)
in
fwait
and
cs
ror
cs
fadd
mov
inc
pop
dec
retf
inc
inc
pusha
test
fwait
lods
(bad)
sbb
(bad)
cld
xor
scas
push
add
cwde
ds
mov
inc
mov
shl
rcl
add
push
retf
inc
mov
pushf
cmp
adc
pop
iret
mov
sbb
sub
test
cmc
xor
movs
sbb
pop
inc
add
mov
and
push
dec
cmp
and
jmp
cmps
ins
inc
sbb
(bad)
in
ja
mov
add
adc
push
ins
xchg
push
mov
outs
xor
and
jge
imul
pop
push
jne
fisubr
push
sahf
jge
loopne
jp
ror
enter
cwde
ror
inc
shl
ficom
mov
xchg
stos
inc
call
imul
dec
jmp
cdq
rol
popa
lods
lds
xchg
cld
add
loope
xchg
fst
into
adc
jmp
cmp
es
cld
dec
cmc
sbb
and
adc
jge
adc
and
int
jns
cli
jle
fwait
sub
sbb
repz
mov
jmp
and
es
fdiv
dec
pop
add
stos
out
stos
call
cmp
rol
xchg
adc
adc
leave
pop
pop
fld
jo
(bad)
sub
ins
adc
out
iret
dec
aas
(bad)
sbb
inc
jg
hlt
loop
inc
sbb
iret
adc
sbb
(bad)
sub
pop
cwde
jl
imul
inc
xchg
lods
hlt
xchg
sub
vandnps
push
aaa
pop
push
lods
fldcw
push
mov
sar
xchg
xor
scas
test
mov
and
add
stc
pop
and
movs
sub
sbb
jle
cmps
or
inc
(bad)
xor
push
push
(bad)
jnp
jg
xor
mov
inc
leave
xchg
adc
cmp
xlat
mov
aad
ins
mov
sub
mov
dec
mov
fisubr
stc
add
fidivr
lahf
sub
out
xor
sbb
add
jecxz
cmp
cmps
adc
mov
mov
sbb
jb
mov
xor
call
rcr
mov
into
fwait
sbb
xchg
dec
sbb
scas
call
and
sub
or
mov
ror
inc
sub
rcr
sbb
jmp
push
push
test
sbb
dec
mov
pop
push
mov
in
daa
push
jle
mov
inc
nop
ins
shl
movs
out
stc
xchg
scas
(bad)
push
mov
dec
outs
sub
test
test
push
shr
fstp
loopne
adc
dec
mov
mov
inc
daa
adc
pop
dec
dec
std
jb
jmp
std
xchg
and
data16
mov
lea
icebp
mov
fdiv
popa
pop
cmp
call
add
enter
ror
dec
adc
cmp
and
(bad)
nop
and
(bad)
and
push
xchg
or
push
pop
lods
arpl
call
mov
stc
adc
inc
ret
shr
in
out
mov
adc
or
and
jmp
add
out
xchg
push
mov
dec
push
in
int3
inc
push
cdq
mov
icebp
sub
push
in
dec
push
test
iret
jae
pop
xchg
(bad)
fistp
lods
fst
std
sub
les
adc
pop
xchg
cwde
adc
(bad)
stos
jge
pop
sbb
sbb
adc
lds
aam
and
cmp
lods
fbstp
push
(bad)
aas
cmps
sub
sub
lods
inc
pop
or
pop
lock
jl
(bad)
xor
jge
jge
outs
jg
cmc
dec
mov
scas
(bad)
push
rcl
xchg
and
std
js
cs
(bad)
icebp
in
jns
popf
outs
fs
add
les
das
outs
add
rcl
adc
retf
rcl
ficom
or
adc
leave
in
jmp
jge
retf
retf
test
mov
hlt
test
sahf
adc
jecxz
popf
fwait
add
jo
pop
adc
jbe
add
lods
cmps
pop
sub
inc
clc
lds
lock
xchg
jle
sahf
sbb
cli
popf
dec
add
(bad)
lahf
cmp
mov
mov
test
dec
push
push
dec
gs
jno
push
mov
test
sub
sar
out
movs
clc
dec
add
test
jmp
sub
mov
out
scas
inc
fwait
xor
bnd
jle
pop
sbb
ds
scas
dec
repz
and
push
call
pop
dec
aam
stc
lock
xchg
inc
add
inc
lea
arpl
or
and
out
cmp
mov
iret
ins
mov
sbb
dec
es
xor
xchg
sub
(bad)
cs
dec
popa
pop
ret
mov
pop
adc
call
cmp
push
cli
pushf
jmp
clc
sti
imul
inc
daa
jne
xchg
test
or
outs
mov
icebp
pushf
jle
inc
scas
(bad)
push
xor
mov
mov
aad
mov
stos
mov
or
scas
bound
cmc
cli
and
aam
(bad)
stc
dec
push
out
stos
jnp
retf
aad
add
scas
add
add
dec
sbb
gs
fisttp
jbe
pop
jp
cmps
sbb
leave
pushf
lds
xchg
bound
icebp
in
loop
in
nop
xchg
mov
das
pop
mov
es
push
icebp
das
push
xor
mov
mov
fnstcw
cmp
jbe
jnp
out
cmps
(bad)
jp
fiadd
(bad)
mov
addr16
into
add
xor
xchg
inc
jno
sub
add
xchg
mov
pop
xor
xchg
mov
cmp
cmp
jmp
aad
repz
(bad)
jne
les
cmp
sbb
imul
movlps
mov
and
(bad)
bnd
fldcw
retf
loopne
ret
sbb
popf
clc
pushf
retf
pop
and
lds
cli
(bad)
xor
and
sbb
xchg
enter
loopne
sbb
pushf
mov
adc
iret
ins
rcr
pop
sub
loope
jmp
enter
fst
xchg
push
mov
aas
test
xchg
adc
pop
mov
pop
mov
pop
sub
pop
cld
repz
out
das
in
ror
mov
fsub
addr16
shr
pop
jae
inc
and
cmp
xchg
fld
add
out
enter
push
hlt
enter
movs
inc
sbb
xchg
cmp
movs
cmp
stc
inc
jp
pop
cs
jbe
mov
jns
adc
in
out
and
sbb
add
mov
inc
rol
push
jbe
push
or
sbb
dec
(bad)
(bad)
es
clc
sub
ficomp
shl
fist
lea
sub
jb
fst
(bad)
movs
shl
lock
inc
sub
sub
inc
pop
jecxz
mov
dec
sub
cmps
dec
sub
cmps
pop
pop
mov
push
stos
push
push
jmp
jae
fisttp
in
out
pop
xchg
std
mov
ficom
mov
clc
dec
xor
and
adc
mov
inc
int
jns
cli
jle
fwait
sub
sbb
repz
mov
jmp
and
es
fdiv
jle
push
popa
mov
call
ja
fistp
hlt
xchg
inc
in
push
add
pop
add
xchg
lods
loopne
mov
pop
(bad)
jle
inc
inc
add
adc
stos
add
inc
mov
and
push
xchg
sub
pop
mov
ins
imul
cli
push
scas
jnp
stos
inc
in
test
scas
inc
xchg
pop
xchg
xlat
pop
(bad)
(bad)
pushf
cmp
mov
or
sbb
or
stos
std
cld
jns
push
push
ja
nop
test
repz
lea
fistp
pop
icebp
sbb
cmp
fs
loop
out
lods
shr
das
jo
sbb
je
jge
leave
cmps
js
fcomip
jbe
mov
jo
pop
sub
adc
cli
mov
mov
sub
jmp
outs
mul
xlat
mov
rol
dec
xchg
icebp
addr16
mov
loop
enter
mov
jecxz
mov
pop
daa
fwait
jge
retf
cmp
mov
ficomp
inc
fldcw
in
mov
add
loop
dec
cmp
hlt
movs
mov
jg
add
mov
leave
iret
inc
sub
cmp
retf
stc
and
sar
mov
sub
and
fs
pop
add
dec
cmps
push
(bad)
fwait
mov
shl
aam
mov
inc
sub
outs
pop
mov
bound
into
or
xchg
stos
enter
arpl
mov
fucomp
loope
sar
sub
inc
add
rol
mov
sar
mul
into
sbb
movs
cli
jg
in
jbe
imul
pop
fst
pop
mov
imul
gs
cdq
pop
adc
cmp
je
test
loope
and
arpl
es
inc
mov
idiv
inc
retf
dec
inc
inc
lahf
sub
push
mov
push
outs
je
add
outs
hlt
jmp
dec
push
ins
jne
inc
mov
bound
add
imul
push
inc
add
lds
inc
in
das
sti
xchg
jmp
jbe
arpl
and
dec
inc
add
adc
dec
jge
mov
jp
pop
test
sbb
or
sar
shl
jecxz
fwait
cmps
mov
mov
cld
or
sbb
loop
push
xor
inc
pop
sub
or
ds
inc
and
add
or
(bad)
xor
je
pop
mov
je
jp
scas
mov
out
in
js
cmp
xchg
mov
test
inc
or
cwde
inc
data16
test
mov
inc
push
adc
je
or
int
push
dec
in
or
sub
xchg
pop
fbld
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
repnz
mov
ror
inc
sub
xor
lahf
add
push
inc
aad
jle
inc
lahf
push
lock
mov
jl
iret
push
test
fistp
les
mov
xchg
push
pop
bound
ins
xchg
(bad)
cmp
imul
push
ror
enter
inc
scas
enter
xchg
test
shr
fisttp
popf
scas
inc
and
sub
loope
pop
mov
daa
add
add
xchg
adc
mov
and
dec
add
int3
mov
in
pop
ins
jbe
jg
sti
xor
jnp
clc
les
push
adc
mov
je
sbb
add
daa
jmp
fisub
or
xlat
mov
xor
lock
sub
jl
in
loopne
ret
jmp
push
pop
xor
lock
retf
add
imul
nop
xlat
mov
stos
xchg
scas
xchg
adc
or
mov
pop
es
mov
int
cmc
fnsave
retf
xchg
jnp
test
rcr
dec
inc
leave
or
pop
push
outs
shl
retf
jns
dec
fst
push
adc
cdq
jl
adc
adc
mov
das
jb
xchg
cmc
xor
cmp
mov
fdiv
sti
adc
push
rol
icebp
mov
(bad)
or
lds
mov
scas
out
mov
mov
mov
leave
adc
(bad)
(bad)
xor
lods
iret
xor
into
or
or
and
mov
aad
add
fcomp
pop
ret
mov
cwde
movs
sub
movs
popf
div
fst
test
clc
cmp
lds
add
sub
(bad)
fs
sbb
xchg
sbb
mov
mov
dec
sbb
push
shr
inc
test
scas
pushf
and
adc
cmp
xor
xchg
push
dec
or
inc
dec
fsub
mov
(bad)
in
pop
call
aad
(bad)
stos
and
jmp
movs
retf
aas
mov
loope
sar
mov
xchg
push
pop
outs
rol
mov
sar
mul
into
sbb
movs
cli
jg
in
jbe
imul
pop
fst
pop
mov
imul
gs
cdq
pop
adc
std
lock
cmp
je
test
loope
and
arpl
es
inc
mov
adc
pushf
pop
mov
call
push
add
mov
les
xor
push
cmp
rol
xor
out
push
push
inc
int
test
or
and
mov
test
popa
in
jg
push
dec
pop
cmp
dec
and
adc
inc
cmp
dec
movs
jecxz
arpl
cwde
adc
mov
mov
gs
sub
addr16
sahf
out
ss
outs
dec
dec
push
adc
(bad)
sbb
scas
cmps
bound
mov
loop
push
xor
data16
rcr
pusha
inc
dec
je
jge
leave
xchg
mov
mov
push
jno
dec
cli
inc
test
push
mov
lods
inc
mov
inc
cs
ss
(bad)
(bad)
in
cdq
xor
mov
repz
popf
jmp
add
test
xlat
loop
xor
rcl
add
xor
mov
(bad)
stc
aas
rol
popf
scas
xchg
cmp
rol
sub
mov
cdq
mov
fst
inc
pop
retf
movs
mov
jg
adc
mov
adc
sbb
mov
(bad)
mov
outs
cmps
je
or
jl
daa
dec
inc
or
cld
xor
and
fisub
pop
outs
les
jmp
lods
mov
frstor
(bad)
ret
lea
jmp
jg
out
jno
mov
int
stc
loope
push
rol
scas
push
repz
(bad)
imul
xor
cmp
out
jae
jp
scas
(bad)
push
rcr
xchg
and
std
xlat
int
adc
(bad)
jg
lahf
dec
xchg
lock
stc
cwde
rcr
pop
jbe
shr
sub
or
pop
inc
popa
sub
adc
or
repnz
pop
movs
pop
loopne
in
shr
sbb
in
mov
mov
leave
adc
sub
lea
jg
or
and
js
pop
adc
dec
xor
test
fs
add
sbb
clc
jl
push
pop
retf
mov
retf
sar
xor
(bad)
pop
jp
jge
pop
out
mov
mov
or
std
(bad)
inc
ret
loopne
pop
mov
scas
shl
sub
es
pop
jb
sahf
fdivr
movzx
cs
retf
sbb
sbb
ret
xchg
sub
mov
sti
dec
mov
cli
push
xor
lds
push
ret
adc
push
loop
dec
sub
xchg
mov
(bad)
jae
int3
(bad)
pop
xor
inc
mov
push
push
ds
push
mov
and
pop
call
scas
inc
lahf
jle
inc
call
in
out
add
mov
sub
jmp
cmovge
call
stc
cmps
cmp
pop
mov
lds
repnz
jae
cmc
imul
(bad)
pop
arpl
pop
and
movs
call
inc
sub
dec
mov
scas
pop
push
gs
shl
or
adc
aad
movs
dec
test
fmul
push
xchg
aam
xor
dec
popa
push
ret
rcl
dec
mov
adc
cdq
dec
bound
jno
(bad)
aaa
jecxz
scas
add
jns
les
rcl
les
ror
mov
loopne
fidivr
cmp
jmp
cld
rcl
mov
mov
lahf
outs
aas
and
les
lds
fsub
addr16
add
sbb
or
cmp
mov
inc
dec
sahf
(bad)
es
sbb
pop
(bad)
xor
int
sar
ret
(bad)
xchg
add
(bad)
mov
add
loope
and
inc
dec
out
inc
rcr
retf
add
sbb
mov
jmp
retf
adc
sub
movs
sub
jmp
out
dec
shr
std
pop
mov
and
test
jb
test
scas
jecxz
pop
mov
mov
rcl
push
rcl
fistp
fwait
pushw
pop
jno
ret
sahf
inc
and
(bad)
cmp
xchg
and
in
sbb
add
or
aas
and
mov
cmp
push
imul
addr16
(bad)
hlt
mov
mov
outs
jmp
aad
outs
test
ss
push
and
mov
shr
mov
leave
addr16
aad
jno
xor
inc
ins
sub
xchg
push
pop
popf
xchg
push
mov
rcl
sub
dec
aam
dec
cmp
pop
mov
retf
fst
dec
mov
mov
mov
movs
pop
imul
sbb
xchg
inc
inc
xchg
or
or
test
shr
push
mov
jne
xlat
add
arpl
les
xchg
jg
push
(bad)
fcomp
and
pop
rcr
pop
mov
mov
imul
jecxz
mov
cwde
jp
jge
pushf
mul
jo
pop
shr
pop
adc
mov
mov
popf
call
inc
retf
gs
inc
cmc
aas
xchg
sub
dec
cmp
add
mov
sbb
jb
and
xor
call
rcr
mov
into
fwait
sbb
xchg
dec
sbb
scas
call
and
sub
or
mov
ror
inc
sub
rcr
sbb
jmp
lods
sbb
test
cmps
and
movs
push
repnz
cmps
aas
dec
int3
or
mov
mov
fisubr
imul
jne
ins
bound
cmp
call
mov
std
pop
mov
popf
enter
jo
outs
sti
nop
adc
es
clc
mov
add
dec
test
dec
je
cmps
xchg
ror
aam
pop
outs
ja
aas
call
jp
mov
cmovae
pop
cwde
cmp
fdiv
cdq
push
adc
fnsave
imul
lock
shl
cmp
es
mov
inc
cld
inc
add
mov
arpl
or
into
jo
cli
test
cli
arpl
cwde
push
and
rcr
add
mov
addr16
mov
fild
ins
retf
mov
and
push
leave
pop
inc
add
mov
push
mov
js
jle
jge
jnp
dec
sub
cli
(bad)
jno
inc
fcom
mov
jl
sbb
or
dec
pop
pop
aam
add
push
add
push
(bad)
pop
and
mov
inc
shr
sbb
pop
cli
xchg
adc
(bad)
cmps
xchg
pop
lahf
mov
dec
rol
dec
push
adc
ror
cmc
jge
mov
div
out
jae
popf
add
sti
stos
xor
test
jge
adc
(bad)
jg
lahf
lods
xlat
retf
cmps
leave
cdq
and
rol
ss
push
and
push
push
and
add
mov
out
int3
ret
(bad)
xchg
test
aam
lahf
jg
iret
inc
fistp
pop
mov
adc
sahf
mov
adc
mov
shl
mov
cwde
sbb
mov
mov
jns
pop
jb
movs
mov
stos
jecxz
push
xchg
push
pop
fucom
cli
mov
mov
(bad)
or
test
and
adc
jns
imul
lds
fwait
fwait
and
in
inc
ror
jae
pop
xor
sahf
fdivr
mov
push
or
inc
retf
inc
sar
js
js
inc
or
cmp
or
popf
fistp
mov
rcl
inc
mov
push
fidivr
xlat
sbb
retf
and
sbb
jnp
popf
cmc
ins
pop
mov
(bad)
stc
test
addr16
mov
test
enter
or
out
call
jmp
loop
int
adc
jo
xchg
test
sbb
push
sbb
adc
(bad)
aas
out
scas
test
pop
dec
lock
sub
inc
sbb
inc
push
mov
sub
retf
(bad)
fsub
xor
xchg
mov
adc
ret
mov
into
sahf
scas
mov
jmp
mov
pop
and
jmp
stc
into
inc
mov
cdq
adc
push
add
xor
repnz
mov
or
inc
mov
mov
pop
jl
pusha
test
ficom
jg
mov
mov
inc
(bad)
or
es
or
push
retf
clc
aaa
jge
push
dec
mov
sahf
dec
dec
aam
inc
addr16
pop
xor
fcom
push
fdivr
ja
mov
lahf
jne
js
call
cmps
inc
cdq
pop
lds
or
inc
es
or
arpl
shr
pop
cmps
dec
cmc
sbb
mov
mov
jmp
repz
test
scas
ret
xor
fst
inc
ret
push
sbb
sar
sbb
jbe
add
scas
jo
leave
mov
dec
mov
mov
pop
mov
push
sahf
ret
pop
pop
adc
mov
mov
test
leave
pop
sbb
sub
or
out
jle
adc
dec
inc
sub
sub
or
stos
fs
or
dec
pop
sbb
jp
jns
dec
lds
fwait
enter
lods
xchg
mov
pop
neg
call
add
jp
jmp
sahf
inc
xchg
dec
scas
jecxz
cmove
add
xchg
adc
std
xchg
xchg
pop
inc
fsub
xchg
xchg
test
dec
push
loop
jmp
int
popf
mov
pusha
retf
xchg
call
ins
test
fdiv
dec
push
and
cmp
xor
int3
pushf
hlt
test
cmc
clc
jnp
popf
xchg
push
adc
nop
add
in
push
inc
mov
cld
xchg
adc
es
test
scas
loope
leave
ss
xchg
dec
ror
adc
push
jmp
imul
jbe
(bad)
into
push
mov
mov
outs
test
push
stos
mov
cmp
sahf
xor
and
and
adc
inc
mov
xor
dec
ret
sub
mov
cs
dec
repnz
mov
mov
fwait
adc
leave
lods
cmc
xor
and
push
sbb
xchg
adc
mov
or
dec
movs
ret
pop
outs
rcl
pinsrw
dec
mov
or
add
inc
mov
aad
inc
aaa
fbld
cmps
icebp
iret
movs
mov
imul
xor
jae
pushf
fwait
cli
and
xchg
inc
mov
adc
inc
or
stos
mov
nop
cmp
or
inc
mov
je
fnsave
or
adc
(bad)
retf
movs
ret
add
and
std
popa
repz
push
outs
je
add
add
in
push
push
xchg
xchg
push
xor
or
mov
call
mov
mov
mov
jne
(bad)
push
sahf
loope
retf
xor
jmp
clc
lahf
shl
xchg
add
mov
add
cli
dec
mov
sub
push
popa
fst
movs
fst
cld
test
mov
dec
(bad)
shl
pop
push
fcomp
fstp
popa
sbb
in
mov
adc
nop
fstp
sbb
and
mov
xor
cmp
jb
adc
pop
scas
sbb
fisttp
lods
div
stc
adc
rol
ss
push
and
pop
je
and
(bad)
rcr
cmps
pop
or
fld
leave
inc
rcl
lods
les
fild
xchg
xchg
adc
sbb
popa
shr
test
rcl
out
inc
mov
dec
sbb
inc
push
loop
adc
jbe
and
stos
mov
ja
not
sub
mov
add
in
add
push
ja
pop
imul
fsub
cmp
bound
xor
add
xchg
inc
mov
mov
sti
mov
xor
sub
es
inc
mov
mov
cmps
in
mov
ins
fisttp
push
push
imul
jmp
push
xlat
mov
outs
shr
adc
cmp
cmps
adc
pop
(bad)
je
pop
push
out
mov
(bad)
xor
iret
jp
popf
call
(bad)
ror
inc
xchg
xchg
or
ffreep
mov
test
out
dec
cmp
fldcw
push
dec
mov
popf
sbb
shr
daa
(bad)
adc
jmp
jnp
adc
jno
or
pop
mov
inc
cmp
xlat
in
ja
push
test
or
popf
adc
mov
(bad)
dec
sub
and
(bad)
loope
jne
mov
pusha
test
push
sahf
jg
pusha
jbe
jae
or
xchg
shl
cmps
jbe
mov
cmps
dec
sub
stos
les
aam
add
das
mov
movs
(bad)
fsubr
popf
popa
jne
fisttp
retf
bound
inc
sar
js
ficom
or
add
or
popf
fistp
mov
rcl
inc
mov
push
fidivr
xlat
sbb
and
sbb
jnp
popf
cmc
ins
pop
mov
(bad)
stc
test
addr16
mov
test
enter
or
out
clc
add
pop
xor
pop
sbb
xor
cs
daa
jo
push
sbb
add
fs
popa
shr
push
cmp
or
aam
icebp
nop
jle
xchg
lahf
cmc
gs
sbb
fwait
aam
sub
repnz
stos
scas
popa
lods
fld
sbb
mov
fwait
xlat
push
movs
shl
lock
inc
outs
xchg
xor
div
inc
mov
mov
sbb
mov
dec
sub
scas
int
pop
out
adc
adc
mov
imul
loope
(bad)
jg
enter
pop
and
mov
push
arpl
dec
mov
and
adc
jge
adc
and
ins
in
sbb
inc
add
pop
jmp
lods
(bad)
out
repz
sub
pushf
add
fwait
ret
mov
cmc
test
scas
xchg
add
sti
mov
popa
push
test
sahf
fistp
cmp
xchg
jmp
sbb
out
mov
test
sbb
add
add
rcr
cld
xchg
div
call
jae
pop
jbe
mov
mov
repz
and
mov
jmp
xchg
dec
repz
adc
pop
xchg
test
gs
mov
pusha
shl
je
(bad)
mov
addr16
fnop
inc
sbb
lods
mov
mov
in
scas
aas
test
ins
scas
in
mov
out
inc
ins
out
pop
mov
push
ror
repz
out
das
add
mov
call
test
out
jae
pushf
mov
jnp
mov
loope
jmp
fild
dec
mov
jne
sbb
xchg
arpl
popa
mov
mov
jl
push
or
jns
dec
retf
mov
jb
mov
test
mov
hlt
test
sahf
adc
jecxz
popf
fwait
add
jo
pop
adc
jbe
add
lods
cmps
pop
sub
inc
clc
lds
lock
xchg
jle
sahf
sbb
cli
popf
dec
add
(bad)
lahf
cmp
mov
or
sbb
ror
mov
sbb
test
je
sub
out
fldcw
dec
xor
sub
int3
jmp
(bad)
scas
bound
xchg
mov
mov
repz
out
rol
popa
scas
push
repz
and
fmul
or
outs
cmp
pop
repz
xor
leave
scas
jmp
or
mov
push
cdq
clc
bound
cmps
or
test
pusha
mov
mov
pop
add
mov
sbb
lds
push
pop
xchg
push
popa
push
test
sahf
call
call
out
mov
test
sbb
add
add
rcr
cld
xchg
retf
hlt
call
jae
pop
jbe
mov
mov
repz
and
mov
jmp
xchg
dec
cmp
mov
push
mov
jp
fs
pop
xchg
test
add
jmp
int
jmp
mov
rol
jb
dec
ds
repz
test
pop
mov
in
mov
test
pop
mov
push
rol
fsubr
das
dec
mov
sub
xchg
jbe
popf
scas
(bad)
mov
out
jae
pushf
retf
push
rcl
popf
lods
push
jae
fidivr
sahf
sub
adc
(bad)
jg
pushf
mov
pop
sar
or
les
xlat
or
adc
cdq
jns
test
jle
sbb
push
xor
mov
xor
dec
add
inc
sbb
cmc
out
jecxz
movs
mov
fcom
and
rol
jb
popf
pushf
daa
and
int
dec
mov
dec
gs
jg
mov
xor
imul
fsubr
sub
mov
fisubr
push
sahf
jge
loopne
sbb
loop
cwde
in
ds
shl
je
sub
out
cdq
ins
jle
popf
enter
lods
sahf
das
movs
int3
jmp
mov
in
mov
retf
inc
sbb
aas
inc
mov
adc
inc
push
sbb
mov
inc
jl
sbb
test
xchg
sub
enter
test
jae
push
jne
sbb
pop
fucom
cmp
es
movs
jne
dec
inc
adc
dec
les
push
hlt
xor
and
gs
adc
gs
das
in
cmc
mov
pop
push
inc
mov
mov
call
dec
pusha
xor
aam
aaa
test
dec
(bad)
jecxz
and
je
sbb
inc
icebp
xchg
jle
sbb
adc
inc
ret
jp
addr16
dec
pusha
ret
inc
(bad)
push
repnz
xchg
call
fistp
shr
(bad)
into
ss
mov
ja
aad
cmp
ror
stos
mov
sbb
shl
into
aam
inc
cmp
mov
cld
loop
inc
fdivr
mov
loope
(bad)
cmp
pop
inc
sbb
rcr
rcl
mov
fbstp
loopne
outs
imul
es
(bad)
je
pop
adc
test
and
jl
cmp
ins
enter
inc
lods
mov
mov
add
lock
mov
loop
mov
pop
mov
add
loop
ret
jle
mov
pushf
scas
cmp
or
out
out
cmp
adc
lods
mov
xlat
cmp
sbb
stos
dec
les
mov
int3
lahf
push
sti
cmp
dec
mov
(bad)
pmuludq
hlt
jns
(bad)
addr16
inc
(bad)
push
jns
retf
sbb
mov
sbb
out
pop
clc
test
dec
sub
daa
sbb
ret
cld
xor
lods
fisttp
mov
les
sbb
jnp
pop
xchg
jbe
xor
jbe
pusha
mov
pop
(bad)
sti
out
dec
hlt
dec
pop
mov
pusha
ror
pop
mov
cmc
jl
das
dec
(bad)
or
jl
loopne
(bad)
call
push
shr
mov
jnp
sahf
sub
jmp
mov
jb
out
test
test
add
sub
loop
push
mov
sbb
adc
mov
mov
test
into
(bad)
lahf
add
push
mov
xor
cmp
cmp
sahf
xlat
xor
mov
cdq
mov
nop
xor
popa
push
sbb
fs
push
sub
stos
mov
inc
movs
icebp
sbb
jmp
jae
(bad)
idiv
sti
dec
sbb
out
jmp
enter
dec
sbb
push
in
pop
dec
xchg
jmp
stos
jge
dec
xor
inc
sbb
or
aaa
jbe
mov
push
push
cmp
fwait
sbb
sti
and
hlt
inc
aam
gs
push
sub
mov
cld
or
data16
xchg
loope
iret
cmps
jecxz
fsub
mov
lods
inc
mov
ds
mov
pop
mov
dec
cmps
dec
mov
pushf
inc
addr16
xor
seto
sahf
imul
(bad)
aam
dec
mov
sbb
push
push
push
lds
sbb
push
neg
call
fidiv
out
mov
sbb
loopne
(bad)
iret
cmps
mov
data16
sbb
jmp
mov
(bad)
shr
push
popf
mov
scas
xchg
(bad)
xlat
xchg
call
fistp
shr
(bad)
into
ss
mov
ja
aad
cmp
ror
stos
mov
sbb
shl
into
aam
inc
cmp
mov
cld
loop
inc
fdivr
xchg
ror
in
test
or
add
jmp
fild
xchg
mul
xchg
jmp
out
addr16
scas
scas
mov
push
call
push
iret
(bad)
lock
jnp
xchg
mov
xlat
ja
pop
into
sbb
bound
fwait
jmp
bound
ror
push
pushf
add
shr
dec
push
xchg
add
inc
jmp
add
sahf
pop
add
xchg
push
in
or
pusha
mov
arpl
ror
test
popa
jecxz
loopne
xor
pop
stos
jns
sub
int
inc
adc
dec
lahf
rcr
sub
ret
dec
retf
cdq
adc
stos
repnz
sbb
lahf
jne
xchg
jns
mov
sti
cli
int
jbe
or
data16
icebp
call
test
sahf
cmp
inc
outs
cmps
sub
call
gs
mov
adc
sahf
rol
in
mov
dec
sub
icebp
inc
dec
aam
pop
mov
out
outs
or
clc
cmc
inc
in
out
das
dec
cmps
cmp
or
idiv
test
mov
sub
in
sti
jnp
xor
call
call
loope
(bad)
loope
xor
inc
sbb
nop
test
dec
mov
ins
test
fstp
test
sbb
stos
cmp
ss
mov
mov
pop
pop
inc
pop
adc
loopne
out
mov
scas
push
or
add
adc
retf
mov
cwde
sti
pop
mov
shl
inc
adc
mov
mov
fistp
stc
jnp
sahf
pop
xchg
iret
loope
pop
rol
inc
jno
xchg
in
push
jg
shl
je
sub
(bad)
loopne
mov
sub
test
movs
jmp
icebp
sbb
dec
in
int
mov
scas
adc
(bad)
adc
pop
int
or
pop
pop
je
sbb
pop
push
inc
out
sub
xchg
inc
add
test
int3
inc
rcr
js
mov
addr16
mov
cwde
stc
add
mov
mov
ret
xchg
mov
ret
push
xchg
sti
mov
fild
mov
ret
arpl
lds
movs
sbb
iret
add
imul
(bad)
repnz
dec
add
or
ins
cwde
ret
daa
inc
addr16
mov
or
mov
xor
scas
lods
fisub
sub
pop
int3
jge
push
fwait
xlat
mul
adc
and
jg
and
ja
in
sub
imul
aam
jne
ins
outs
pop
cdq
enter
pop
push
bnd
in
scas
aas
test
sub
cmpxchg
out
push
pop
jecxz
or
fcomp
sub
mov
shl
repnz
mov
jl
adc
mov
stos
sub
cmps
call
pop
jae
gs
cdq
pop
adc
cmp
lods
inc
test
jns
pop
int3
inc
and
hlt
dec
adc
popa
xchg
adc
sahf
inc
sub
xor
and
pop
jno
repz
ret
loopne
inc
test
cdq
xor
mov
xchg
into
ja
addr16
fcom
out
dec
out
cwde
in
push
paddd
neg
fnstenv
ficom
fcmovnbe
and
xor
mov
jnp
loopne
fucomp
jae
mov
inc
loopne
pop
movs
retf
dec
or
sub
jno
or
dec
dec
pop
jb
mov
or
jnp
leave
cdq
jbe
js
int
(bad)
std
stc
dec
es
jg
xchg
test
cmc
jmp
adc
cmp
and
fwait
and
xchg
jne
pop
ret
inc
lods
xlat
xchg
mov
jle
pop
sbb
fcom
jmp
add
arpl
data16
out
jno
jae
pop
xor
jmp
int
mov
xor
shl
bound
mov
sub
push
test
jl
fbstp
hlt
sbb
push
ret
popa
shr
push
cmp
sub
mov
dec
aad
push
sub
push
xor
push
lds
or
movs
(bad)
dec
and
and
mov
mov
neg
xchg
mov
rcr
pop
pop
pop
(bad)
cmp
inc
mov
mov
movs
xchg
sub
pop
call
ss
xchg
clc
xor
sub
fild
xchg
xlat
test
xor
bound
das
push
sub
adc
jae
(bad)
loopne
in
ror
mov
mov
push
mov
shl
xchg
aam
daa
pop
mov
ss
mov
test
xchg
fistp
les
push
ror
test
ins
lea
cmp
or
inc
rol
cmp
bound
movs
cmps
call
imul
mov
cdq
retf
inc
mov
aaa
scas
stc
(bad)
aaa
push
sub
mov
out
mov
aaa
pop
dec
dec
fimul
loopne
mov
je
or
ffreep
test
mov
and
pop
fcmovne
push
add
dec
add
add
jmp
js
scas
mov
xchg
sub
add
(bad)
pop
push
add
and
adc
addr16
push
js
adc
fst
jg
(bad)
sbb
enter
mov
dec
std
arpl
(bad)
fwait
adc
add
sahf
xchg
mov
inc
cwde
les
sbb
xchg
fisubr
out
mov
mov
stc
adc
mov
mov
inc
cmps
leave
stc
and
rol
ss
bound
push
adc
dec
es
push
imul
rcr
jns
push
test
xor
int
rcr
pop
xor
add
xchg
xchg
(bad)
jg
pop
add
sbb
jns
adc
xor
lods
dec
push
icebp
nop
jle
sbb
outs
and
adc
outs
aaa
mov
in
test
scas
inc
xchg
pop
cwde
xlat
pop
(bad)
(bad)
pushf
cmp
mov
or
sbb
or
stos
std
cld
jns
push
push
ja
nop
test
repz
lea
aas
mov
das
pop
icebp
sbb
cmp
and
mov
repnz
js
sahf
sar
stos
jmp
push
jbe
rol
out
das
sbb
les
pushf
cmp
aaa
mov
xchg
fadd
pop
push
out
int3
fwait
nop
xchg
xor
gs
rcl
inc
add
bound
push
or
cmp
sbb
daa
jne
jnp
xchg
dec
fst
push
jmp
jbe
fwait
shl
push
or
mov
das
pusha
test
shr
or
push
jno
fst
cmc
call
stc
popf
pop
push
(bad)
shl
jae
imul
mov
and
adc
inc
cmp
mov
pop
inc
shl
pop
test
sbb
mov
pop
stos
ja
mov
cmps
pop
scas
mov
leave
cli
sar
call
sbb
sahf
pop
mov
repz
cmp
pop
gs
mov
pop
scas
(bad)
loope
cmp
mov
shl
cs
push
or
idiv
pushf
dec
cmp
jae
pushf
sub
ja
popf
dec
push
enter
xor
(bad)
jg
lahf
lods
xlat
xor
into
add
cmp
hlt
xor
xchg
add
leave
shl
(bad)
mov
pop
dec
inc
outs
nop
cs
retf
jno
push
xchg
in
je
loopne
pmullw
xchg
icebp
(bad)
aas
out
scas
test
pop
dec
rol
out
inc
jmp
leave
cmps
inc
add
shl
in
out
retf
imul
push
pop
adc
mov
imul
out
retf
mov
dec
imul
lds
cmp
sbb
call
(bad)
stos
jbe
stos
movs
sbb
dec
aad
leave
cdq
and
inc
fdiv
jecxz
fistp
adc
loop
in
dec
and
(bad)
aam
mov
sbb
push
rcl
sti
(bad)
mov
pop
sub
mov
mov
nop
(bad)
cmps
jbe
int3
mov
test
xchg
fistp
inc
mov
push
inc
dec
push
cli
mov
ins
je
scas
jge
fs
sub
mov
xor
cmps
cli
repz
rcr
jae
add
inc
scas
loope
xor
mov
outs
fs
add
vpshufbitqmb
cmp
pop
xor
dec
mov
sbb
mov
or
loopne
sbb
test
cmp
pop
dec
sbb
and
fcom
xchg
ret
push
sbb
fwait
xor
rcr
jne
test
adc
adc
sub
mov
xor
push
pushf
cmp
sbb
push
bnd
ins
test
fwait
jmp
sbb
ror
scas
jbe
cdq
(bad)
imul
cmps
cwde
jg
jge
pushf
out
and
jae
cld
sub
div
popf
lods
dec
jae
mov
enter
pop
mov
gs
lods
loope
xchg
or
fild
push
sbb
dec
jmp
mov
fstp
test
sbb
stos
cmp
ss
mov
mov
pop
pop
inc
pop
adc
nop
pop
out
mov
scas
push
or
add
adc
retf
mov
cwde
ficomp
cwde
or
aad
aas
arpl
pop
adc
jmp
fcmovnu
push
jno
mov
jmp
movs
sub
jecxz
push
stos
or
push
dec
out
sub
cmps
jmp
or
shl
sub
and
dec
jb
sahf
ficom
imul
inc
stos
int
cdq
out
push
lock
je
stc
inc
mov
(bad)
adc
addr16
fdivr
shr
nop
outs
mov
push
fidivr
gs
mov
push
cmp
(bad)
jnp
test
(bad)
stos
mov
and
call
lds
xchg
dec
xor
adc
jmp
loop
sbb
lods
adc
and
push
dec
push
pop
mov
out
sbb
xchg
pusha
mov
xor
sbb
daa
add
test
or
(bad)
stos
ds
hlt
movs
dec
ja
push
xchg
fnstenv
pop
mov
test
sahf
shr
cmp
xchg
sbb
mov
xchg
repz
sub
icebp
add
cmp
sbb
nop
push
or
jo
dec
fwait
add
jge
jns
push
sbb
add
movs
adc
cdq
shl
inc
(bad)
dec
je
bound
fwait
inc
and
rol
bound
(bad)
sbb
bound
pop
cmps
xchg
lods
out
cmp
out
std
adc
js
mov
fs
jnp
or
lock
mov
jne
sbb
(bad)
mov
addr16
fcmovb
loope
or
cs
mov
pop
fisubr
push
dec
mov
call
mov
mov
popf
je
mov
in
mov
cmps
push
pop
add
push
cwde
xor
out
ja
int
mov
sbb
aas
xchg
or
xor
cdq
and
mov
push
mov
enter
dec
push
mov
ins
movs
imul
mov
adc
inc
mov
cmp
and
into
outs
xchg
sub
cmps
not
out
jmp
xchg
hlt
pushf
dec
mov
int
or
inc
mov
pop
xor
into
add
sbb
sbb
enter
int
and
fcmovbe
cmp
sbb
(bad)
cmp
and
xor
xchg
pushf
popf
shr
mov
push
gs
lock
call
jmp
inc
or
gs
pop
cmp
mov
xor
dec
test
ss
nop
inc
fs
call
(bad)
ins
call
repnz
gs
push
add
and
inc
movs
(bad)
cdq
retf
mov
movlps
sbb
ror
cdq
ret
push
jnp
fist
retf
lds
push
jns
jne
mov
cmp
or
ret
mov
aaa
jle
xchg
je
mov
sbb
dec
bound
xchg
add
mov
xchg
into
imul
fwait
(bad)
sub
arpl
jmp
iret
in
repz
ins
(bad)
pop
mov
jb
mov
mov
fprem1
jmp
imul
dec
iret
shl
ja
std
pushf
out
out
jb
fsubr
mov
push
jecxz
dec
cwde
jge
aaa
sar
lahf
leave
repnz
arpl
out
fxch
lds
sbb
arpl
shl
(bad)
mov
pop
dec
inc
dec
fmul
mov
addr16
test
sbb
cld
stos
call
jge
dec
adc
mov
sti
add
imul
lods
int3
and
xor
outs
movs
ret
aaa
lahf
retf
adc
push
div
test
das
cmps
movs
leave
test
push
adc
cmp
in
dec
mov
add
(bad)
ins
dec
mov
repnz
sub
dec
fld
ja
into
add
das
mov
retf
jb
loopne
pop
arpl
les
sti
inc
out
push
lock
je
fild
inc
xchg
(bad)
adc
addr16
fdivr
shr
nop
outs
mov
push
fidivr
gs
mov
push
cmp
(bad)
jnp
test
(bad)
stos
mov
and
call
inc
xor
xchg
dec
xor
cmp
fisubr
adc
xor
push
test
cs
arpl
test
mov
int
rcr
push
inc
sti
mov
arpl
(bad)
mov
cld
pop
outs
push
push
or
mov
jmp
jno
or
push
test
faddp
sub
loop
sbb
mov
and
call
imul
mov
add
pop
xchg
into
xchg
inc
call
mov
call
and
dec
fsubr
movs
mov
jle
mov
cld
stc
inc
es
or
xlat
cmp
and
sbb
inc
icebp
or
dec
or
mov
dec
pop
call
xchg
scas
out
mov
js
std
jecxz
inc
div
sbb
fild
mov
jo
add
and
push
shl
cs
lock
dec
jg
add
clc
rcr
pop
jno
cmp
lock
jmp
push
adc
and
jl
in
xchg
pop
rcr
mov
rol
sub
out
mov
cmp
fnstenv
int
js
rcr
sub
lods
push
pop
stos
push
ins
ror
sbb
inc
lahf
mov
jne
dec
fwait
inc
cs
lock
sbb
jmp
pop
xchg
je
(bad)
mov
dec
sbb
jno
enter
imul
push
and
mov
jb
sahf
pop
mov
cmpxchg
in
das
test
xor
arpl
das
push
rol
inc
sbb
add
imul
cs
xchg
mov
scas
(bad)
mov
out
dec
mov
(bad)
jae
pushf
bound
into
pop
test
inc
sbb
es
push
lock
rcl
test
fwait
jno
dec
xchg
push
dec
mov
rcl
mov
sub
or
lods
(bad)
lods
inc
pop
pop
mov
aas
cmp
dec
adc
clc
lds
cld
outs
ss
jo
or
fcomp
mov
cdq
xchg
and
cmps
mov
push
and
(bad)
cmp
jne
jmp
pop
pop
loope
call
stc
movs
(bad)
push
sahf
jno
jecxz
fsubr
cs
stos
adc
add
xchg
xchg
and
xchg
popa
xor
jmp
sub
test
fucomp
inc
icebp
sbb
jo
push
sar
adc
mov
inc
sar
je
or
inc
xor
pop
or
add
inc
mov
aad
repz
stos
jmp
mov
mov
(bad)
lods
mov
out
and
mov
daa
push
lock
mov
addr16
imul
rcr
or
(bad)
or
or
loope
sbb
cmp
mov
popa
not
data16
fdivp
mov
or
xor
outs
fs
add
bound
in
mov
and
inc
mov
ins
in
jbe
fwait
ds
push
inc
in
mov
cmp
dec
mov
jne
dec
jmp
mov
je
mov
lahf
xchg
xor
rcr
mov
outs
or
jo
add
xchg
inc
and
inc
jns
dec
rcr
xchg
mov
xchg
sbb
sub
inc
pop
call
cmp
cmp
leave
loop
jl
inc
dec
out
nop
dec
and
mov
add
mov
ror
out
cmp
sbb
scas
scas
scas
jmp
dec
lods
out
popf
(bad)
cmps
ret
rol
bound
(bad)
pop
add
pop
inc
xor
mov
dec
outs
or
and
push
dec
push
xchg
push
mov
jp
mov
fxch
mov
outs
or
adc
into
pop
mov
(bad)
test
aad
inc
adc
lock
lock
adc
inc
inc
sbb
add
add
gs
ret
sub
(bad)
leave
neg
iret
clc
jge
xchg
mov
stc
and
shr
sub
mov
icebp
fisttp
or
fistp
jl
sbb
mov
xchg
test
or
and
movs
xchg
sub
push
loop
inc
push
mov
xchg
adc
and
inc
nop
mov
sub
sbb
lahf
data16
jl
scas
mov
and
or
xlat
or
retf
lock
jge
dec
mov
jno
dec
inc
sbb
xlat
das
inc
gs
imul
stos
xor
into
fadd
pop
fdivr
jge
mov
cmp
xchg
es
and
shr
ret
dec
sbb
hlt
outs
mov
call
xor
lahf
adc
jecxz
inc
jge
pop
fcomp
adc
cmp
daa
sub
call
fidiv
rol
fimul
push
out
jns
dec
inc
popf
mov
sub
sbb
jne
(bad)
addr16
fld
cld
test
std
add
adc
add
daa
pop
ret
fst
push
sub
lock
mov
xchg
mov
pop
xchg
cmp
mov
cmp
mov
outs
aad
stos
call
cmc
jg
out
xor
into
lock
dec
das
push
iret
(bad)
retf
add
inc
(bad)
call
xor
and
cmp
out
mov
js
cs
(bad)
repnz
jns
outs
ret
lahf
cli
cwde
add
test
add
sbb
and
cwde
push
and
and
and
xchg
push
pop
mov
cmp
push
mov
cmp
mov
mov
adc
and
jns
popf
rcr
cdq
dec
add
or
loopne
ret
gs
adc
adc
xor
ror
or
mov
jo
jmp
popf
retf
mov
data16
push
push
xchg
or
stc
sub
fisubr
or
inc
adc
fistp
mov
leave
jnp
dec
add
push
fld
ficom
inc
(bad)
mov
pop
jmp
iret
call
stc
(bad)
js
inc
es
xchg
xchg
and
jmp
inc
ins
xchg
popf
pop
adc
shl
pop
mov
gs
pop
xlat
xchg
stc
es
iret
out
(bad)
aam
leave
ss
mov
add
mov
dec
adc
adc
xchg
or
out
push
test
or
push
dec
adc
js
fdivp
mov
or
xor
outs
push
inc
test
outs
aam
sub
mov
xchg
push
into
push
mov
ins
aad
or
push
inc
lahf
and
and
mov
or
scas
mov
neg
xlat
add
mov
test
(bad)
xchg
jbe
lods
push
outs
xchg
bound
in
ss
shl
call
(bad)
popa
or
xchg
push
es
inc
mov
sahf
pop
and
iret
test
ds
push
pop
mov
and
cld
mov
xor
adc
xchg
jmp
pop
dec
adc
ds
push
out
add
mov
jae
pushf
sub
adc
fadd
mov
iret
push
xor
cmps
in
(bad)
test
xchg
rcl
into
sbb
mov
xchg
(bad)
lea
rcl
fst
jmp
mov
push
loopne
(bad)
mov
sbb
or
mov
in
inc
rcr
add
loop
cmp
mov
inc
int
js
cmp
pop
popa
inc
das
jno
jp
(bad)
jl
sbb
inc
jne
mov
cmp
pop
add
add
pop
arpl
lahf
shl
xchg
add
mov
inc
shl
sub
jne
sahf
out
or
imul
push
ins
test
scas
jmp
and
enter
popa
add
js
adc
add
dec
ror
push
mov
inc
jmp
or
pop
xor
cwde
cld
jle
ins
sbb
(bad)
mov
daa
jbe
xchg
jne
jecxz
inc
popf
fcomp
add
and
xchg
test
imul
call
adc
push
add
sub
fisttp
pop
add
and
outs
lds
mov
jle
xchg
push
mov
ins
aad
ins
ficomp
shl
popa
lods
fld
jmp
push
sub
pushf
imul
jno
jecxz
out
pop
adc
pop
cmps
retf
dec
sbb
or
imul
scas
aam
jne
ins
push
pop
dec
shl
sbb
push
xchg
je
aad
mov
cmp
clc
jo
shl
inc
xor
fdiv
add
push
test
xchg
adc
data16
mov
lea
icebp
mov
ret
cmps
mov
fcmovbe
or
mov
xlat
pop
(bad)
nop
int3
inc
cmp
sbb
inc
idiv
adc
addr16
inc
test
lods
(bad)
xor
push
add
jno
lds
and
add
enter
adc
cld
sub
push
fwait
mov
call
inc
inc
xchg
cmps
xchg
leave
fsubr
cdq
mov
mov
retf
cli
push
scas
jnp
stos
ret
fcom
adc
and
ror
mov
retf
xchg
mov
in
retf
cmp
sub
pop
imul
and
push
pop
jmp
movs
push
rcl
add
push
adc
and
or
cmps
push
pop
jno
in
(bad)
mov
cli
cld
jo
inc
mov
xor
sub
push
fisttp
adc
repnz
xchg
out
mov
stos
adc
fidivr
jp
pop
lock
xchg
mov
lahf
jb
xor
fisttp
jno
jecxz
fcom
add
and
(bad)
shr
ins
dec
sbb
and
push
das
jmp
jmp
inc
jecxz
iret
xchg
mov
xchg
xchg
sub
cmp
icebp
mov
xor
adc
shl
add
mov
cmp
sbb
fs
mov
(bad)
push
sub
movs
mov
ds
mov
js
pop
fisttp
add
cmp
adc
inc
out
inc
shl
sub
imul
sub
add
mov
cmc
sub
es
test
fisub
imul
(bad)
jmp
xchg
das
jmp
sar
jmp
(bad)
adc
addr16
fdivr
shr
nop
outs
mov
push
fidivr
gs
mov
push
cmp
(bad)
jnp
test
(bad)
stos
mov
and
call
xchg
xchg
dec
xor
inc
xor
imul
inc
mov
pop
pop
mov
xor
dec
arpl
or
aam
aaa
imul
cmc
mov
cmp
arpl
leave
cmps
inc
icebp
xchg
add
and
lds
lds
and
jb
(bad)
mov
(bad)
iret
lods
leave
push
sbb
sub
mov
ins
lahf
dec
adc
std
(bad)
mov
add
scas
fsubr
adc
sub
and
xchg
fimul
mov
loop
cli
icebp
xchg
jmp
call
xchg
pusha
or
sti
fstp
mov
sub
xchg
push
xor
aaa
dec
lock
cmp
hlt
jbe
inc
fmul
pop
jae
inc
pop
dec
aaa
xor
lods
inc
jae
fidivr
fisubr
adc
(bad)
jle
fnclex
outs
out
fld
inc
icebp
or
or
outs
add
fadd
popa
or
push
dec
mov
popf
stc
inc
xor
outs
clc
mov
or
jmp
jnp
adc
jno
or
pop
mov
inc
cmp
xlat
in
ja
push
test
or
popf
adc
mov
(bad)
dec
sub
and
(bad)
loope
jne
mov
pusha
test
push
sahf
jg
pusha
jbe
jae
or
xchg
shl
cmps
jbe
mov
cmps
dec
sub
jge
dec
and
add
das
mov
jecxz
sub
mov
fisttp
adc
clc
add
mov
inc
xor
fdiv
add
push
test
xchg
adc
data16
mov
lea
icebp
mov
ret
cmps
mov
fcmovbe
or
mov
xlat
pop
(bad)
nop
int3
inc
cmp
sbb
inc
hlt
aas
adc
fdiv
stos
into
call
enter
push
dec
push
push
sbb
dec
mov
adc
pop
popf
sub
mov
cmp
out
inc
sbb
cmps
push
icebp
nop
add
movs
ins
push
sub
push
mov
ins
aad
ins
and
mov
popa
lods
(bad)
cmp
cmp
adc
jno
mov
adc
push
test
adc
jecxz
push
scas
xchg
je
sub
cs
lods
mov
scas
aam
cmc
mov
jbe
cmps
jne
dec
int3
sbb
btc
and
jbe
in
sbb
inc
inc
loope
stc
loope
js
mov
cmp
xchg
xchg
jg
sub
mov
mov
pop
xchg
call
push
jmp
fnsave
xchg
push
xabort
mov
add
repz
bound
test
leave
add
fwait
xchg
les
cdq
sahf
sub
out
dec
sbb
push
test
call
mov
int3
mov
imul
test
scas
xchg
mov
arpl
dec
mov
icebp
daa
call
es
xchg
mov
aad
ins
and
adc
and
aaa
push
lea
lahf
aad
and
adc
inc
aas
adc
dec
inc
sub
sub
mov
cs
cmp
mov
aam
xor
in
dec
push
xchg
adc
mov
ret
pop
mov
lods
inc
in
xchg
aas
cmps
shr
sub
movsx
sub
sub
mov
js
dec
je
push
xor
push
and
adc
(bad)
mov
icebp
push
fdivr
pop
pop
imul
add
mov
xchg
push
test
pop
fld
enter
mov
cmp
push
and
dec
dec
mov
xor
sub
rcr
pop
push
test
jne
mov
call
pop
mov
pop
(bad)
mov
in
xor
dec
(bad)
jnp
(bad)
repz
pop
sub
les
popa
stos
int
sub
pushf
dec
and
adc
and
mov
ins
movs
imul
push
mov
scas
iret
sub
jbe
arpl
aaa
jl
call
add
xchg
pop
cmc
add
pushf
pop
pop
xchg
xlat
fist
pop
inc
aaa
push
jae
mov
jno
jb
cmp
dec
adc
les
pushf
jne
jle
fimul
inc
shl
inc
daa
adc
cld
dec
(bad)
cmp
or
dec
cli
je
pusha
xchg
out
jb
fsubr
sar
lods
inc
mov
retf
(bad)
pop
jae
fs
cmps
xor
ror
test
popa
inc
imul
jmp
shl
mov
ret
inc
test
adc
inc
ret
push
sahf
sub
mov
jmp
push
nop
in
jns
push
cld
das
enter
fnstsw
pop
repnz
mov
ror
inc
sub
xor
lahf
add
push
inc
aad
jle
inc
lahf
push
lock
cs
xchg
jmp
rcr
jecxz
les
jg
(bad)
xchg
dec
xor
pop
jae
sbb
pop
xlat
mov
cmps
dec
mov
and
enter
mov
test
clc
aam
or
jl
xchg
out
into
cmpxchg
out
sub
inc
clc
das
push
rol
fcomp
es
imul
stc
fild
shl
idiv
pushf
dec
ds
jae
pushf
nop
pop
mov
shl
inc
lods
push
jae
fidivr
popf
xor
fwait
loop
vaddsubps
sbb
sub
imul
jg
clc
pop
mov
es
inc
mov
adc
and
aas
shl
repz
push
ret
lods
mov
in
cmp
test
out
cmp
les
aad
(bad)
stos
das
retf
jno
pop
fadd
xchg
mov
sbb
fbstp
push
push
test
pop
sahf
in
cmp
(bad)
sub
aaa
jns
outs
cmps
jne
xor
xor
jbe
pop
xchg
nop
mov
sbb
pop
add
push
std
fsubr
mov
push
push
dec
xlat
jnp
(bad)
xchg
inc
inc
sbb
inc
cdq
lds
jl
call
je
leave
jmp
retf
adc
rol
sub
xchg
xchg
pop
inc
mov
add
ins
and
add
mov
pop
(bad)
xchg
cdq
movs
add
jno
lea
sbb
enter
stos
outs
add
lock
ja
adc
jns
std
dec
call
addr16
aam
repz
dec
push
sahf
xor
jg
iret
inc
call
pop
mov
sbb
popf
mov
adc
mov
nop
shl
adc
mov
dec
cwde
popf
pop
mov
mov
jns
pop
jb
movs
mov
stos
jecxz
push
pushf
push
pop
fucom
cli
mov
mov
lds
or
xchg
imul
inc
rol
popa
add
out
cmps
dec
mov
jne
jbe
mov
adc
xor
out
and
outs
adc
jb
jmp
xchg
cs
int3
push
retf
and
inc
mov
fdiv
fist
rol
sbb
test
xchg
sub
clc
rcl
test
mov
push
gs
pop
xchg
jnp
loopne
pop
mov
jne
dec
inc
adc
dec
les
push
hlt
xor
and
gs
adc
gs
das
in
cmc
mov
add
mov
shr
repz
xchg
pop
out
xchg
fistp
sti
push
cld
inc
or
adc
push
das
xchg
leave
arpl
cwde
dec
and
add
jbe
lea
jno
jle
push
test
push
stos
lods
scas
imul
call
(bad)
loop
cmp
dec
mov
jmp
xchg
add
sub
xchg
pop
cmc
add
pushf
pop
pop
xchg
xlat
fist
pop
inc
aaa
push
jae
mov
jno
jb
cmp
dec
adc
les
pushf
jne
jle
fimul
inc
shl
inc
daa
adc
cld
dec
(bad)
cmp
or
dec
cli
je
dec
push
adc
movs
test
(bad)
mov
cmp
js
pop
inc
outs
neg
xor
jno
sbb
fidiv
push
cmps
leave
sub
loop
inc
jge
mov
repnz
dec
pop
stos
and
mov
jmp
sub
push
xor
or
aad
out
sbb
addr16
cli
push
xchg
and
sbb
mov
and
push
leave
pop
inc
add
mov
push
mov
js
jle
jge
jnp
dec
sub
jmp
lods
push
fmul
xchg
test
and
test
test
stos
ja
lahf
push
scas
push
jns
push
ret
mov
pop
inc
dec
je
aas
lods
jle
scas
jns
aam
clc
dec
sbb
jecxz
sbb
cmp
add
cld
jecxz
das
pop
and
in
mov
adc
xlat
sub
in
imul
stos
cmp
call
data16
cmp
leave
cmp
xchg
es
and
shr
ret
dec
sbb
xchg
mov
pop
adc
push
lods
dec
pop
mov
fild
inc
jb
call
rol
sub
mov
mov
or
(bad)
cvtps2pi
jae
sbb
aad
mov
xor
fisttp
frstor
mov
xchg
pop
in
dec
(bad)
ins
or
rcl
sbb
(bad)
fisubr
adc
or
xlat
enter
mov
fst
cld
dec
int3
sbb
mulps
and
mov
das
out
and
aaa
sub
in
sbb
lock
mov
rcl
dec
xlat
inc
(bad)
call
divps
sti
dec
popf
sub
jnp
sahf
retf
xchg
test
icebp
in
mov
stc
xor
into
add
retf
data16
repz
in
jle
nop
lds
dec
mov
jecxz
xchg
ins
pop
sbb
mov
and
(bad)
add
pop
inc
sub
repnz
xor
(bad)
inc
add
je
dec
mov
sbb
aam
adc
xlat
cwde
retf
movs
dec
je
imul
neg
test
vaddpd
ret
mov
je
fld
(bad)
cmp
inc
in
ror
cmp
ins
dec
xor
pop
push
xor
jp
sub
push
mov
les
shr
push
jmp
ja
in
lds
mov
mov
mov
cmp
fisub
fild
repz
inc
aam
retf
fwait
adc
dec
fcom
(bad)
pop
sar
ret
jp
gs
out
call
popf
xchg
mov
test
and
jb
dec
sbb
fdiv
ret
or
das
sbb
fist
inc
sahf
cmp
fbld
stos
rcl
mov
and
daa
and
mov
call
sbb
jmp
movs
add
ds
cmc
imul
test
push
stos
test
sub
lds
in
push
int
fwait
(bad)
hlt
xor
leave
jecxz
(bad)
jno
or
mov
push
in
xor
shl
sub
and
and
fisttp
sub
fcom
pop
fiadd
clc
mov
jecxz
popa
cli
addr16
pop
fwait
or
add
add
xchg
adc
mov
and
dec
add
int3
daa
xchg
push
mov
popf
pop
ins
jbe
jg
sti
xor
jnp
clc
les
push
adc
mov
je
sbb
add
daa
jmp
fisub
loop
mov
movs
mov
inc
push
add
in
call
mov
(bad)
cmp
mov
and
mov
sub
je
in
stc
xchg
push
xchg
mov
int
(bad)
jnp
and
(bad)
out
lods
jmp
into
and
mov
mov
jmp
jmp
aad
ret
daa
or
push
mov
leave
xchg
fwait
adc
sub
test
dec
repz
es
retf
sti
sub
btr
lods
test
retf
xor
inc
scas
pop
push
retf
fiadd
fild
lock
das
loopne
inc
js
lock
xchg
xchg
cdq
xor
movs
shr
retf
push
mov
rcr
sti
xor
jb
pop
outs
or
test
pusha
mov
cdq
push
fucom
loop
dec
add
mov
xor
sbb
push
daa
lea
or
xor
dec
dec
mov
push
sahf
cmp
xor
and
clc
push
aam
out
push
cmp
add
enter
dec
push
dec
rol
into
push
mov
inc
xor
mov
lods
sbb
mov
ror
cmps
push
sahf
jbe
and
lods
adc
fsub
ja
in
xor
mov
push
push
push
mov
jne
dec
scas
(bad)
push
dec
in
dec
scas
popf
adc
scas
hlt
mov
hlt
xor
sub
or
add
jecxz
out
xchg
adc
cmps
js
lds
test
inc
jmpw
(bad)
or
sbb
mov
leave
mov
ret
(bad)
mov
mov
pop
jle
adc
jecxz
mov
enter
shl
xchg
(bad)
outs
xor
xchg
dec
and
push
push
push
imul
arpl
mov
and
in
out
rcl
ds
lahf
retf
in
addr16
mov
aaa
fisub
lds
dec
xor
pushf
or
lds
push
cld
stos
jb
mov
mov
adc
mov
mov
jno
adc
movs
bound
xchg
add
cmp
push
sub
mov
mov
leave
iret
call
cdq
lods
inc
movs
into
fsubr
shr
jo
sbb
xchg
int3
pusha
xor
ror
mul
cwde
scas
push
push
or
hlt
cmc
rcr
ins
xchg
inc
adc
adc
rcr
repz
jb
xchg
std
fwait
mov
cmps
(bad)
xlat
cdq
add
and
rcl
or
and
es
mov
push
loop
xchg
ds
push
dec
mov
cdq
neg
mov
out
les
inc
cmp
or
imul
(bad)
jecxz
add
stos
fwait
aad
in
(bad)
pop
add
jmp
xchg
mov
sbb
loop
mov
dec
pop
stos
dec
popa
jmp
push
sub
push
jae
pop
imul
out
jmp
ins
shl
movs
out
stc
xchg
scas
(bad)
push
mov
pop
and
retf
inc
mov
pop
xor
into
add
sbb
sbb
enter
int
and
fcmovbe
cmp
and
sbb
(bad)
cmp
and
xor
xchg
push
popf
shr
mov
push
gs
sar
call
adc
adc
xchg
and
jno
jle
dec
(bad)
retf
mov
(bad)
and
(bad)
pop
push
call
retf
arpl
sbb
push
sbb
xchg
rcr
push
xor
push
cmp
sub
mov
dec
aad
push
sub
push
xor
push
lds
or
movs
(bad)
dec
and
and
mov
sbb
rcr
dec
jmp
adc
mov
mov
cmc
add
jl
or
xchg
ror
xchg
mov
data16
ds
jle
mov
pop
inc
pop
push
fdiv
sbb
fyl2x
xor
ror
adc
add
mul
mov
pop
sub
mov
dec
xor
push
lods
shr
fnstcw
out
(bad)
mov
sti
xlat
shl
(bad)
mov
jno
jo
(bad)
push
dec
jl
outs
add
sub
sub
xchg
imul
mov
dec
adc
mov
mov
sbb
int3
loop
lods
imul
and
into
add
ficomp
hlt
test
mov
fisubr
out
adc
test
fs
and
mov
jne
cmps
loope
retf
cmp
cdq
popa
pushf
xor
adc
mov
sub
stos
dec
repnz
mov
faddp
dec
cmps
into
sub
stos
mov
push
dec
sub
xchg
mov
fsubr
jg
mov
jo
loop
add
dec
inc
add
sub
dec
std
adc
les
inc
movs
push
rcr
jb
mov
ret
icebp
cld
mov
mov
fsubr
outs
aas
adc
int3
clc
data16
bound
jbe
xchg
xchg
aas
sub
mov
lock
mov
adc
fdiv
push
sbb
leave
bound
mov
add
add
mov
sbb
xchg
xchg
jmp
popa
rcr
sbb
daa
adc
sbb
xor
in
jns
aad
push
sub
push
mov
mov
ror
pop
test
push
stos
lea
(bad)
jmp
(bad)
movs
leave
mov
(bad)
imul
inc
xchg
dec
mov
adc
push
add
push
inc
call
sub
es
test
pop
(bad)
scas
inc
fucomi
in
mov
pop
xchg
movs
pop
outs
lock
jle
scas
pop
out
ret
cld
jae
cld
out
daa
dec
iret
jge
xchg
pop
mov
ror
ret
adc
in
dec
inc
retf
cmps
shl
fidivr
out
pop
lea
fwait
inc
(bad)
jbe
mov
mov
bnd
rol
push
push
movs
dec
jmp
xchg
(bad)
std
sbb
and
or
mov
push
mov
popf
and
test
xlat
jmp
call
mov
cmp
and
sbb
jae
inc
mov
sti
jae
fistp
xchg
addr16
cdq
loop
les
mov
cli
ficomp
enter
push
call
jne
inc
jmp
(bad)
imul
aas
mov
popf
daa
pop
dec
les
jmp
fisub
pop
add
sar
cmp
add
cmp
jle
jbe
lods
inc
in
shr
sti
iret
js
jle
xor
pushf
cli
retf
mov
pop
pop
inc
jg
out
aaa
dec
lock
cmp
sbb
mov
adc
loope
les
(bad)
jp
fisubr
adc
mov
pop
hlt
repz
sbb
pop
inc
dec
and
xchg
and
add
out
call
jmp
loop
sbb
stos
adc
and
push
dec
int
mov
jae
sbb
inc
hlt
sbb
and
test
repz
push
outs
je
add
dec
jne
sub
ja
fs
jmp
inc
mov
xor
xor
jg
sbb
push
shr
jge
out
cmp
enter
and
mov
fsub
sub
add
cli
xor
fcmovne
fcom
mov
fwait
cmps
imul
retf
test
jno
in
mov
mov
jae
or
inc
arpl
lea
fwait
add
jecxz
sti
iret
(bad)
xchg
scas
sar
sbb
pop
or
xchg
(bad)
fstp
xchg
stos
inc
mov
jp
jge
dec
shl
mov
inc
retf
popf
outs
mov
int3
pop
into
mov
ror
add
mov
lods
add
ficom
popa
(bad)
dec
sbb
cs
dec
popa
pop
sbb
(bad)
outs
mov
rcl
mov
sbb
mov
jns
rol
inc
cmc
out
jecxz
movs
mov
cdq
je
dec
dec
mov
or
addr16
mov
call
cmps
repnz
adc
push
push
stos
popf
pop
dec
or
rcr
adc
inc
aas
adc
dec
inc
cs
xor
repnz
cs
stos
push
repnz
sub
mov
adc
xchg
and
sub
sbb
in
scas
mov
mov
xchg
cmpxchg
out
jno
and
cld
mov
call
bound
sbb
ror
add
cmc
inc
clc
dec
and
scas
xchg
scas
out
cmp
ror
pop
add
ins
lods
jnp
sahf
(bad)
mov
int3
(bad)
pop
fwait
int3
inc
mov
push
push
ds
push
mov
and
pop
call
scas
inc
lahf
popf
sahf
inc
call
in
out
add
mov
sub
jmp
cmovge
call
stc
movs
cmp
movs
mov
cmp
retf
movs
mov
cmovp
nop
sub
push
inc
loop
aad
adc
(bad)
xchg
ins
dec
mov
(bad)
(bad)
ins
jo
pop
fnsave
cmps
loop
mov
xchg
inc
mov
or
ds
push
dec
add
rol
or
inc
inc
mov
pop
jno
lds
pop
test
mov
xchg
fst
mov
dec
mov
sbb
xchg
pop
adc
mov
xor
add
or
inc
sbb
push
dec
jp
mov
xlat
sbb
retf
and
fidivr
jnp
sbb
and
add
pop
pusha
gs
mov
xor
ins
inc
sbb
fs
nop
and
push
or
mov
mov
jo
retf
loop
jmp
es
push
cwde
lahf
bound
jo
ins
test
push
pop
stos
gs
add
xor
sbb
sbb
ror
or
sub
aas
outs
xor
stos
dec
in
ficom
jmp
mov
pop
fldl2t
fisttp
mov
xchg
lds
sub
into
push
sar
mov
cmp
sbb
nop
push
or
or
push
inc
call
rcl
fadd
mov
outs
ret
btr
xchg
popf
push
mov
fsub
inc
ret
add
(bad)
call
push
jbe
adc
dec
mov
adc
shr
retf
push
mov
rcr
sti
xor
jb
pop
outs
or
test
pusha
mov
cdq
push
fucom
loop
dec
add
mov
xor
sbb
push
daa
lea
or
xor
cmp
repz
and
push
sahf
cmp
xor
and
clc
push
aam
lahf
mov
lock
nop
pcmpeqb
xlat
inc
aad
outs
dec
sbb
sub
push
or
cld
adc
pop
dec
mov
mov
sbb
outs
push
inc
mov
xor
dec
ret
jno
mul
push
ret
and
cmps
jns
gs
mov
jne
xor
imul
and
mov
push
jb
sbb
jo
push
shl
inc
sar
je
or
inc
xor
pop
or
add
inc
mov
aad
repz
stos
jmp
mov
mov
(bad)
lods
mov
out
and
mov
shl
mov
xlat
(bad)
xchg
dec
and
push
scas
push
test
call
iret
iret
shl
add
jae
and
mov
popa
jmp
add
xlat
aad
mov
sub
xor
mov
retf
shr
push
mov
mov
xchg
(bad)
fld
pop
xchg
shl
sub
xchg
cli
sbb
dec
bound
xchg
movs
add
jge
imul
inc
std
mov
add
pop
cmps
pop
ins
ja
xor
xor
fnstcw
(bad)
js
pusha
xchg
mov
push
inc
xor
ror
dec
and
mov
or
fwait
cs
xchg
mov
imul
pop
outs
dec
(bad)
call
scas
inc
popa
mov
mov
sbb
shr
iret
test
les
lock
cld
adc
cmc
lds
mov
sbb
mov
loope
ins
or
xor
mov
movs
push
mov
jg
cmp
adc
jne
sub
mov
imul
movlps
mov
and
jl
or
push
pop
bound
sub
and
xor
dec
sbb
fnstsw
cwde
adc
movs
ret
xor
dec
inc
sub
sub
add
stos
inc
repnz
sub
shr
push
and
sub
es
inc
jb
sahf
pop
and
sub
and
test
xor
bound
das
push
rol
dec
inc
je
mul
mov
rcr
xchg
xchg
or
fwait
out
pop
jae
inc
and
cmp
xchg
fld
add
out
enter
push
hlt
enter
movs
inc
sbb
xchg
cmp
movs
cmp
stc
inc
jp
pop
cs
jbe
mov
and
shl
jmp
stc
jae
inc
ret
rol
jecxz
mov
aad
ins
mov
rcr
adc
es
repnz
and
movs
mov
cmp
dec
push
dec
sar
movs
xchg
or
(bad)
test
pop
cli
loope
inc
in
xor
xlat
retf
arpl
ss
mov
xchg
cmp
jae
mov
cs
test
nop
cmp
mov
cwde
dec
fcomp
lds
mov
lds
bnd
ins
test
retf
cmp
clc
mov
mov
jg
sbb
and
imul
stc
mov
cmp
fs
fs
pop
aad
pop
pop
pop
stos
jecxz
lods
fidiv
imul
push
frstor
jno
stc
mov
dec
fwait
mov
pop
add
push
pop
icebp
mov
(bad)
dec
sbb
mov
lea
out
int3
add
ret
mov
pop
jo
(bad)
mov
sti
push
cld
iret
or
adc
mov
js
mov
sbb
lock
mov
(bad)
fstp
out
clc
xchg
push
xchg
mov
push
xchg
shr
sub
jmp
or
inc
jns
loope
retf
aam
dec
arpl
out
jmp
or
push
or
inc
leave
push
add
jmp
call
pop
push
(bad)
int3
xor
fld
mov
xchg
dec
and
add
repz
xchg
pop
xchg
fimul
or
or
add
leave
fsubr
fild
mov
inc
cwde
dec
lods
push
out
movs
ret
fmul
pop
mov
lahf
(bad)
cmps
mov
fwait
lea
push
test
out
adc
sub
push
pop
inc
test
ins
push
xor
cs
aam
xor
push
jne
les
pop
mov
pop
add
adc
ret
push
(bad)
adc
fidiv
cmps
jecxz
push
lods
sub
mov
fild
inc
or
sub
cmp
(bad)
outs
movs
aam
mov
daa
(bad)
dec
pop
inc
les
mov
ja
push
in
mov
push
sub
call
jl
or
pop
push
mov
mov
inc
inc
sbb
ja
dec
and
pushf
sub
sbb
(bad)
cmp
xchg
mov
mov
rcr
dec
jmp
pop
mov
pop
mov
mov
into
adc
inc
push
sub
mov
jl
cmp
cmp
in
jne
jb
int3
pop
add
pop
je
pop
xchg
mov
inc
cmp
fstp
sahf
dec
dec
sub
jmp
cld
mov
shl
push
mov
push
ret
or
imul
cmc
loopne
imul
add
dec
xor
(bad)
dec
xor
mov
xor
cmp
stos
repnz
mov
push
and
jmp
adc
mov
test
std
dec
jge
shl
inc
pop
inc
sbb
ins
mov
adc
test
add
inc
pushf
sub
iret
(bad)
cdq
xor
pop
repz
xor
fadd
xchg
jl
add
add
push
mov
xlat
xor
test
ins
out
movs
inc
sbb
cmps
ret
out
xchg
cmp
retf
ins
xor
mov
cwde
push
sub
retf
and
and
xchg
cdq
clc
or
mov
sbb
jmp
repz
adc
test
mov
jno
inc
je
in
lahf
pop
cmps
pop
push
sub
dec
push
adc
add
rcr
sbb
inc
pop
cmp
mov
imul
pop
mov
push
push
clc
xor
scas
or
pop
xchg
jmp
popf
(bad)
jmp
imul
mov
stos
sbb
cld
push
iret
fcmovbe
mov
adc
lods
(bad)
jge
shr
or
jmp
enter
pop
cmc
xchg
fwait
ins
push
dec
test
cmp
pop
sub
iret
and
lea
or
clc
mov
mov
ds
mov
sub
sub
lahf
jle
int3
test
fdivr
mov
cs
or
or
xchg
fcom
retf
mov
clc
sub
aad
into
pop
stos
cmp
aaa
in
movs
div
loop
ja
enter
fisttp
pop
cmp
sbb
call
test
xor
push
lock
jp
sbb
xchg
jae
test
call
push
gs
push
jns
mov
jge
jae
jg
mov
in
jmp
rol
imul
les
retf
add
stos
sub
stos
push
sbb
jbe
sub
sub
inc
push
js
adc
call
scas
inc
fwait
(bad)
push
shl
jge
and
xchg
(bad)
xor
mov
jo
and
je
mov
out
xor
int
out
cmps
ret
fincstp
clc
clc
sbb
jb
xchg
lock
ret
or
rcl
add
or
xor
push
dec
xchg
sbb
mov
jns
ss
and
icebp
cmp
cmps
neg
out
rol
mov
movs
mov
aas
mov
(bad)
cs
or
or
inc
cdq
push
push
cmps
add
jno
les
mov
arpl
mov
add
cmp
in
mov
rcl
cmp
inc
pop
or
aaa
mov
nop
imul
call
jle
jp
mov
jnp
xchg
add
movs
cmps
mov
mov
cmp
jo
jb
dec
nop
sub
or
cmp
sbb
add
sub
push
mov
clc
loop
movs
ret
mov
mov
lahf
(bad)
pop
xchg
fcomip
jb
fwait
outs
push
ret
xchg
imul
jb
or
add
in
mov
push
xchg
jle
push
dec
test
ror
jns
outs
in
movs
sbb
(bad)
lahf
push
adc
adc
movs
inc
sbb
sbb
pusha
lock
jl
call
cmps
sub
sar
sbb
mov
push
sbb
imul
stc
jnp
jns
(bad)
pop
sbb
(bad)
push
xchg
popf
daa
sbb
jae
or
xchg
jp
inc
adc
mov
retf
pop
lods
lds
jl
sbb
pop
into
mov
fucomi
repnz
fwait
leave
ins
xor
pop
aaa
cwde
aam
and
mov
mov
and
xchg
jp
or
test
sub
mov
out
mov
gs
std
mov
mov
xor
test
push
or
add
xor
pop
pop
mov
fwait
cmp
and
int
pop
test
xor
jl
fucomip
sbb
aas
call
hlt
mov
inc
xor
pop
mov
add
gs
aad
jo
aaa
ror
(bad)
sbb
rcr
adc
sub
in
test
fldl2t
fisttp
mov
test
ror
(bad)
rcl
popf
cmp
inc
push
xchg
sbb
dec
mov
leave
xchg
fwait
adc
mov
push
cmp
sbb
scas
(bad)
in
pop
mov
stos
loope
xchg
adc
xor
mov
add
ins
(bad)
aas
ja
push
lods
inc
cwde
dec
lods
push
loope
movs
ret
fcomp
push
mov
lahf
(bad)
cmps
jnp
enter
ins
mov
loopne
loopne
je
cmp
dec
mov
push
adc
jmp
inc
rcl
push
xor
mov
fwait
sbb
arpl
int3
inc
pop
in
mov
(bad)
mov
pop
xor
call
hlt
cld
or
out
or
inc
pop
xchg
mov
ret
xchg
push
aad
inc
sbb
push
add
lds
(bad)
push
push
fxch
mov
push
mov
int
add
call
push
(bad)
sub
lahf
xchg
xor
xchg
mov
mul
lods
add
sbb
stos
lds
jp
ror
test
adc
loop
cli
icebp
xchg
jmp
mov
aad
pusha
mov
jmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
dec
xchg
dec
mov
ins
adc
cld
push
sub
mov
pop
fisub
fcomp
outs
das
sbb
out
clc
hlt
and
and
push
xchg
enter
aam
cmp
fisubr
das
pop
xlat
adc
ret
jmp
mov
fild
mov
(bad)
aad
mov
loopne
ror
ds
daa
idiv
popf
xor
jo
pop
rol
sbb
test
sub
mov
mov
and
int
ret
popf
mov
clc
pushf
retf
js
jne
mov
cmp
pop
retf
jmp
les
(bad)
xor
and
pop
xchg
push
add
scas
ja
test
test
dec
xchg
imul
inc
sbb
adc
dec
and
fcomi
js
fstp
pop
scas
xchg
ja
add
add
push
aas
ins
cwde
dec
and
xor
test
ins
repz
movs
inc
sbb
movs
sti
fdivp
gs
mov
call
int3
pop
sub
loopne
hlt
xor
mov
loopne
mov
lea
push
xor
inc
test
jno
ds
imul
jns
ds
jecxz
rol
call
cmps
ins
xor
jp
xchg
or
lods
jno
pop
xchg
adc
push
mov
xlat
push
aaa
xchg
pop
lahf
shr
jns
in
mov
mov
cmps
dec
cs
pop
in
je
cmp
retf
xor
mov
lock
nop
push
or
mov
aad
sbb
or
sar
gs
lods
cmp
fisubr
pusha
mov
xor
js
ins
push
mov
sar
iret
and
lea
jae
rcr
mov
inc
cmps
pop
ret
pop
xchg
mov
sub
(bad)
xchg
daa
pop
mov
jnp
(bad)
shl
mov
mov
mov
or
and
shl
shr
test
dec
movs
lea
lfs
xchg
dec
out
call
push
ficom
push
mov
fwait
mov
and
dec
push
sti
call
jo
or
or
cdq
js
div
int3
sbb
xchg
shr
stos
sbb
pop
movs
fisubr
retf
jns
popf
xor
or
mov
push
xor
rol
add
sbb
mov
jmp
(bad)
cli
movs
mov
fsubr
ss
sbb
jmp
scas
inc
fwait
(bad)
push
shl
mov
pop
add
or
sbb
dec
and
je
mov
mov
mov
pushf
pop
into
xchg
(bad)
mov
mov
bound
sbb
mov
das
fistp
push
or
loop
jne
pop
lds
mov
movs
adc
mov
pop
stos
rcr
pand
ret
dec
imul
(bad)
dec
aas
mov
jno
pop
stc
ret
jno
add
test
cmp
mov
(bad)
mov
inc
sbb
ins
div
fnsave
lds
push
clc
mov
inc
mov
test
sti
retf
jno
push
mov
cmps
ins
sub
mov
xchg
add
xchg
or
std
dec
sub
(bad)
pop
mov
mov
and
lahf
scas
mov
mov
push
loop
xchg
mov
sar
(bad)
sub
push
mov
rcl
movs
ret
inc
jmp
and
push
pop
or
mov
js
loopne
jecxz
mov
or
loop
jle
dec
pop
leave
cs
jne
dec
nop
imul
dec
sar
sahf
pop
imul
mov
hlt
cmp
dec
cmp
add
movlps
gs
rcr
adc
lods
fs
mov
dec
imul
adc
test
mov
xchg
jne
pop
push
sahf
mov
cmp
pushf
movs
lea
push
pop
daa
sbb
ss
xor
test
les
cmp
fwait
push
xchg
std
scas
shr
push
ret
into
xor
fucomi
repnz
fwait
leave
ins
xor
pop
aaa
cwde
loopne
and
mov
mov
and
xchg
imul
xchg
ins
jg
fwait
lea
aad
sti
mov
scas
sub
sbb
sub
loop
call
call
inc
adc
les
inc
mov
mov
cli
pop
mov
sti
mov
pop
loop
popa
mov
sbb
pop
fcom
fwait
dec
sbb
jne
les
lods
std
dec
pop
fiadd
xchg
push
std
add
sbb
or
add
imul
les
xchg
adc
test
lods
inc
sbb
scas
(bad)
in
xor
popf
scas
cmp
sbb
arpl
or
or
add
nop
fsubr
fild
mov
inc
cwde
dec
xor
xchg
inc
sub
call
push
gs
jmp
jb
addr16
push
pop
fucomp
test
pop
hlt
pusha
inc
dec
or
js
sub
push
repz
gs
daa
fstp
sahf
dec
dec
sub
out
movs
jbe
mov
cmp
loopne
mov
repz
(bad)
fmul
mov
or
push
repnz
imul
ror
inc
sub
rcr
sbb
mov
push
jns
les
pop
retf
push
cmc
mov
(bad)
mov
imul
arpl
lds
sbb
jl
adc
fdiv
mov
pop
or
fwait
lods
mov
mov
push
adc
push
ret
outs
pop
leave
mov
bnd
int3
xor
leave
loop
and
sub
inc
sbb
mov
push
xchg
pop
mov
mov
mov
cdq
pop
clc
push
fidivr
xor
cmps
ret
punpcklwd
outs
push
andnps
pop
xor
mov
push
adc
inc
dec
sbb
pop
fisub
rcl
rol
mov
xor
or
xor
and
in
xor
inc
(bad)
aas
xchg
iret
cmp
outs
aad
lock
fiadd
dec
inc
push
add
add
ret
xchg
push
pop
leave
(bad)
sbb
adc
sub
mov
stos
mov
push
sahf
xchg
push
pop
fst
lahf
dec
sbb
fcom
callw
mov
pop
ret
fld
mov
stos
add
js
mov
or
shr
sbb
scas
(bad)
fcomi
js
add
xor
xchg
into
or
add
add
push
mov
lock
sub
fisttp
cmp
aam
inc
and
(bad)
stc
jmp
mov
sbb
adc
jle
repz
adc
inc
push
adc
test
sbb
or
jmp
push
mov
(bad)
test
inc
fcmovnu
xor
out
mov
mov
mov
sbb
push
outs
sbb
pop
sub
cli
jp
fnsave
fs
inc
inc
mov
sub
call
scas
dec
mov
or
icebp
fisttp
or
fisttp
retf
pop
adc
push
mov
lods
(bad)
cmp
inc
call
(bad)
gs
lods
cmp
or
lahf
push
xchg
cld
out
js
ins
push
leave
pop
leave
loop
sar
pop
sub
iret
and
lea
inc
mov
adc
bound
push
xor
push
jg
fsubr
pop
out
inc
sbb
ds
sti
inc
adc
adc
xchg
mov
add
sbb
mov
push
inc
xchg
sbb
mov
rcr
cmc
fsub
mov
jae
xchg
mov
out
mov
jnp
xchg
push
and
jmp
xor
sbb
xchg
or
xor
cdq
and
ret
mov
popf
jnp
fadd
stos
dec
sub
ins
push
push
in
ja
inc
pop
aad
mov
jl
iret
push
add
fisttp
call
xor
mov
lock
pop
stos
xchg
push
adc
push
mov
add
push
sbb
mov
cmp
fwait
(bad)
push
shl
sbb
and
xchg
cwde
outs
jecxz
dec
mov
sbb
into
and
xchg
mov
pop
fidivr
pop
adc
jb
fwait
jo
(bad)
jmp
cmp
lea
in
mov
push
xchg
and
test
sbb
gs
into
(bad)
fsub
jmp
div
mov
pop
(bad)
imul
ret
(bad)
push
cwde
(bad)
scas
sbb
sub
pushf
or
mov
sub
mov
test
les
stos
cli
popf
dec
loop
dec
fdivr
mov
sti
cli
pusha
std
mov
dec
popa
cmp
rcl
and
nop
or
push
fisubr
lahf
or
sub
(bad)
pop
mov
mov
lods
inc
and
lahf
scas
mov
mov
push
loop
xchg
iret
jo
adc
pusha
sar
mov
repz
dec
xchg
adc
stos
fwait
xor
test
sub
xchg
push
jg
enter
fs
fld1
popf
rcr
sti
xor
adc
sub
je
or
push
or
inc
cmp
push
dec
xchg
lea
call
cmp
cmp
movs
jge
fstp
pop
mov
jns
rcr
add
xor
add
mov
cld
jl
lds
rol
mov
mov
sbb
xor
lods
jno
push
sbb
push
and
leave
loope
push
ss
mov
aaa
push
idiv
fs
mov
pop
fnstenv
jno
cld
cmp
int3
test
sbb
or
jl
int3
stos
xchg
stos
cmp
fwait
push
xchg
pop
sbb
push
stos
mov
pusha
pop
into
mov
fucomi
repnz
fwait
leave
ins
xor
pop
aaa
cwde
enter
inc
inc
sbb
ror
loopne
stos
popf
jecxz
or
dec
or
ret
mov
push
aas
out
xor
lahf
(bad)
cmps
mov
pop
fdivr
lock
mov
and
mov
jno
mov
dec
mov
push
adc
in
shl
fdiv
test
push
push
or
ret
imul
in
cdq
jle
push
sbb
jno
cmp
adc
mov
and
nop
out
sbb
push
xchg
cdq
pusha
or
lahf
mov
stos
push
pop
stos
lods
mov
sbb
(bad)
sub
cmp
dec
or
data16
mov
mov
outs
add
add
imul
xchg
adc
test
lods
inc
sbb
scas
(bad)
in
sub
mov
or
jo
sbb
xor
or
mov
test
jnp
pop
jmp
dec
and
imul
push
add
push
movs
inc
sbb
test
mov
leave
xlat
pop
ffreep
jecxz
sub
jp
pop
sub
in
hlt
mov
xchg
test
repnz
jb
or
pop
mov
push
repz
xlat
mov
inc
sahf
(bad)
sub
inc
push
xor
jns
mov
add
mov
jg
cdq
ret
test
gs
sbb
nop
sub
push
sub
movs
leave
push
push
xchg
xchg
jae
lahf
hlt
in
push
xchg
mov
xchg
test
ins
mov
push
inc
scas
xchg
push
xchg
cmp
mov
stos
add
dec
mov
or
shr
sbb
scas
(bad)
fcomi
js
mov
fsub
xchg
xchg
loopne
popa
mov
ror
cmp
jnp
mov
daa
scas
xor
imul
fst
shr
lahf
cmp
(bad)
dec
xchg
scas
adc
out
mov
add
in
hlt
xor
xchg
int3
and
cmps
stos
pop
lea
xor
icebp
fisub
adc
pop
adc
popf
movs
pop
and
adc
pop
icebp
fdivr
xor
rcr
add
xor
push
repnz
pop
jecxz
repnz
jns
mov
or
inc
mov
lds
mov
(bad)
sbb
ja
stos
cmp
mov
add
inc
shl
or
imul
mov
fwait
lods
(bad)
gs
lods
cmp
cmp
pop
aad
js
ins
push
dec
mov
shl
call
sahf
cs
les
cmp
adc
sbb
jnp
push
cmc
in
xchg
and
push
fild
push
into
inc
fstp
sbb
std
jecxz
sti
int
fsubr
bound
sbb
mov
es
hlt
jle
push
cmps
dec
mov
or
jmp
adc
pop
jnp
sbb
jmp
les
cmp
xchg
iret
and
mov
mov
inc
sbb
fiadd
je
pop
sbb
add
adc
or
sub
sub
aad
movs
dec
or
dec
sub
and
les
mov
ds
mov
cdq
sbb
cmc
int
test
nop
loopne
test
and
cmp
lock
mov
push
dec
inc
test
xor
mov
cmps
sbb
jmp
scas
inc
fwait
out
js
mov
add
xchg
ds
inc
jmp
fucom
dec
aam
stc
mov
adc
out
inc
jge
imul
rcr
push
pop
ins
cmovg
jmp
mov
cdq
pop
xchg
mov
js
sbb
mov
ret
xor
(bad)
and
xchg
imul
inc
xor
xor
mov
arpl
pop
movs
xchg
dec
pop
test
(bad)
popa
clc
cmp
mov
mov
sbb
outs
in
fnstsw
and
inc
dec
or
(bad)
mov
xor
les
push
aad
sbb
sub
test
sub
call
jnp
lods
mov
mov
clc
mov
xchg
push
nop
pushf
outs
xchg
dec
mov
or
sub
imul
adc
pop
mov
test
cdq
lods
inc
and
lahf
scas
mov
mov
into
xor
mov
mov
and
outs
jno
pop
mov
fcom
and
xchg
jbe
pop
repz
cmc
inc
push
into
mov
push
gs
outs
mov
cmp
popf
repz
cmp
xchg
dec
xchg
mov
in
jne
dec
aad
and
cmp
xor
cmp
add
mov
hlt
xor
in
cld
aas
in
and
mov
inc
jnp
pushf
fwait
aaa
test
dec
(bad)
mov
sbb
mov
call
div
aad
dec
sbb
and
dec
pop
inc
cmp
pop
pop
(bad)
(bad)
jmp
popf
retf
add
sub
inc
sbb
or
in
jnp
stos
xchg
stos
cmp
fwait
push
xchg
cmp
shr
push
ret
into
mov
fucomi
repnz
and
nop
adc
adc
fwait
and
xchg
fucomi
or
add
xchg
mov
jmp
inc
cwde
dec
int
push
fidivr
not
xchg
xor
nop
and
call
or
lds
enter
pop
and
add
shr
mov
fimul
mov
fistp
and
lock
mov
lods
pop
mov
jns
ds
mov
mov
jp
mov
imul
xor
or
aad
dec
test
imul
jb
mov
in
adc
stc
ins
mov
mov
mov
xchg
test
dec
mov
push
add
add
dec
les
xchg
adc
test
lods
inc
sbb
scas
mov
out
cmc
out
loope
mov
mov
mov
push
inc
push
mov
mov
push
fidivr
repz
jp
mov
nop
(bad)
cmps
ret
punpcklwd
outs
or
vpsubq
adc
cmc
les
cmp
push
and
or
into
dec
mov
dec
mov
sbb
or
fcomp
push
dec
jne
ret
arpl
lds
rcr
adc
mov
add
xchg
cld
xchg
or
fs
icebp
mov
and
push
dec
or
inc
inc
xchg
mov
mov
jnp
jae
fistp
jo
arpl
pop
sub
inc
sbb
or
(bad)
cmp
movs
pop
jnp
mov
lods
mov
mov
push
adc
jge
inc
aad
in
sti
retf
pop
fild
in
or
sbb
sub
push
xchg
adc
data16
or
mov
loopne
mov
inc
and
retf
gs
stc
outs
push
pop
clc
dec
fcom
loope
(bad)
ds
leave
sbb
fwait
push
mov
xchg
int
pop
inc
push
dec
mov
cmc
hlt
pop
mov
pop
pop
push
sti
jge
jmp
pop
or
pop
stos
in
test
inc
sbb
push
out
inc
sbb
repz
mov
cmps
ret
test
dec
mov
jno
dec
xor
jns
pop
jb
movs
mov
xor
scas
sbb
call
mov
mov
popf
aad
ins
sbb
push
or
xor
push
xchg
popf
cmp
add
push
retf
pop
test
dec
inc
sbb
mov
(bad)
push
repz
cld
mov
icebp
(bad)
xor
pop
sub
(bad)
jg
or
add
xchg
and
mov
sub
cmps
shr
pop
out
inc
sbb
mov
jge
outs
daa
sbb
push
lock
or
dec
push
xchg
inc
dec
sbb
mov
xchg
cmp
cs
mov
push
mov
dec
mov
push
sahf
cmp
mov
push
pop
push
or
fisttp
data16
pop
or
lods
cmps
sbb
popf
xchg
icebp
mov
movs
lds
nop
lds
mov
js
test
jmp
mov
jnp
arpl
dec
sub
mov
or
(bad)
cmp
inc
call
(bad)
gs
lods
(bad)
xor
mov
xchg
stc
test
into
push
and
in
or
out
add
cmp
lds
popf
add
push
into
and
xchg
mov
pop
fidivr
jnp
(bad)
push
mov
xlat
cdq
add
mov
xor
sti
in
and
nop
lea
inc
sub
sbb
das
std
fidivr
sub
fist
inc
sahf
jecxz
cmp
and
and
mov
xor
lahf
sbb
cmp
add
or
ins
call
push
fcomp
jne
fs
adc
inc
push
test
pop
sbb
movs
mov
cmp
lods
rcr
jae
jns
and
retf
xlat
imul
lods
mov
sbb
pusha
scas
xchg
stos
mov
stos
xchg
push
adc
push
retf
shr
enter
(bad)
cmp
es
pop
iret
push
ficom
loop
xchg
pop
jb
add
mov
jae
or
cmp
or
les
xchg
test
push
sub
xchg
pop
pop
cmps
call
jnp
mov
rol
push
adc
sbb
aam
call
retf
push
into
dec
xchg
out
dec
popa
sbb
idiv
shr
movs
pop
sbb
inc
adc
test
call
add
jo
mov
ret
inc
sub
push
pop
jmp
inc
clc
lds
lock
xchg
lahf
pop
retf
fsubr
mov
xchg
leave
js
scas
mov
jecxz
retf
lods
mov
mov
fdiv
jge
xchg
dec
mov
or
mov
imul
adc
pop
xchg
push
mov
aad
jge
sahf
adc
(bad)
js
ja
ins
inc
fwait
leave
or
js
cmp
mov
and
or
add
int
dec
and
pop
ja
mov
aas
cmps
enter
adc
or
enter
jg
xchg
cmp
add
daa
loop
hlt
xor
and
xchg
push
test
xchg
jmp
cmp
jle
shl
mov
lods
sti
lods
int
clc
into
cmp
sbb
pop
lds
jl
out
inc
cmc
out
jecxz
int
mov
dec
rol
pop
inc
pop
jmp
gs
adc
pop
adc
stc
cmp
fisttp
mov
dec
jmp
popf
retf
add
sub
inc
sbb
or
jl
dec
stos
xchg
stos
cmp
fcom
jb
dec
(bad)
jns
arpl
sbb
and
out
push
pop
xchg
push
adc
cmp
sub
dec
jae
and
push
push
scas
push
adc
std
ret
mov
jg
pop
mov
push
mov
inc
fdivr
call
cmp
cmp
pop
or
cmp
ds
mov
movs
sbb
adc
sahf
inc
sub
xor
and
jmp
arpl
xchg
mov
push
into
call
xchg
dec
pusha
fwait
call
lock
add
mov
mov
or
fnstenv
jmp
sbb
and
pop
stos
push
outs
jno
or
int3
in
out
retf
(bad)
stc
pop
in
mov
mov
xchg
test
dec
mov
ret
scas
add
shr
pop
dec
les
fist
sub
jecxz
clc
mov
jno
aad
(bad)
cwde
es
repnz
push
mov
fsubr
pop
add
rcr
sub
in
enter
xchg
sahf
data16
inc
jmp
inc
cwde
dec
int
push
fidivr
cmc
imul
push
mov
bswap
int
mov
mov
data16
rcl
inc
add
mov
jmp
bound
jb
sub
rcr
pop
push
mov
jno
pop
xchg
add
aam
popf
jl
out
fisub
add
push
enter
jae
mov
cdq
jl
cdq
nop
lock
aad
pushf
ret
pop
fidiv
dec
xlat
movs
mov
mov
stos
mov
ja
fild
sti
inc
inc
mov
jo
jae
cmp
sub
popf
retf
add
sub
inc
sbb
or
in
xor
xchg
stos
std
mov
movs
mov
jns
sahf
fisttp
xor
(bad)
icebp
ret
bound
cmp
fwait
leave
loop
jnp
or
mov
sub
xchg
sub
nop
pop
sub
sbb
xchg
adc
data16
push
fidivr
cmp
or
ret
mov
or
hlt
call
jne
cmps
enter
out
pop
fwait
loop
dec
loope
test
dec
in
cmc
clc
jnp
popf
xchg
push
adc
cmp
inc
pop
inc
inc
mov
and
jmp
mov
or
sti
pop
es
or
sahf
rol
add
aad
hlt
rol
xchg
or
push
frstor
push
test
retf
jmp
or
mov
cli
out
jae
fistp
loop
arpl
pop
sub
inc
sbb
or
(bad)
cmp
scas
enter
mov
jne
pushf
adc
pop
lods
jg
outs
inc
sbb
ss
cli
rol
popf
scas
inc
and
icebp
and
cmp
int3
add
add
fdiv
rcl
data16
push
mov
dec
push
push
sbb
mov
sti
inc
es
mov
mov
shr
or
push
ds
xchg
push
hlt
cwde
movs
popf
jecxz
retf
cdq
jns
pop
test
test
je
in
inc
jne
ret
pop
cmc
fidiv
cmp
fist
add
fimul
jae
jecxz
xchg
mov
mov
dec
and
mov
mov
cmp
sbb
xlat
pop
sbb
test
clc
test
sbb
xchg
add
fucomp
cld
std
scas
lods
mov
popf
aad
pop
jb
test
dec
mov
or
call
std
clc
pop
add
adc
mov
cmp
scas
dec
lods
jp
aaa
pop
push
xchg
bnd
pusha
xchg
fbstp
jmp
rep
add
push
aam
add
cmp
rcl
jecxz
mov
rcr
cli
mov
and
push
mov
call
inc
vpor
mov
sub
mov
fcomp
add
and
hlt
sub
push
dec
mov
adc
scas
int3
fwait
jns
scas
push
jmp
pop
in
mov
mov
or
xor
cdq
adc
jecxz
sbb
or
sub
dec
fsubr
pop
imul
mov
pop
mov
dec
cmp
mov
test
pop
cli
cmp
cmps
bound
retf
bound
xchg
dec
inc
shl
or
addr16
outs
xchg
dec
(bad)
jl
fist
test
popf
adc
dec
movs
jae
ins
(bad)
fucomi
sbb
push
cli
xchg
and
jb
adc
mov
jae
or
cmp
rol
xchg
inc
and
aas
mov
mov
and
(bad)
xchg
pop
push
xabort
mov
(bad)
psraw
inc
rol
xor
jge
test
enter
or
out
enter
mov
movs
jne
imul
pop
mov
push
ds
fdivr
aas
push
cmc
cmp
mov
ret
pop
pop
xor
sub
cmp
pushf
int
adc
push
shl
xchg
movs
mov
mov
and
xlat
stos
dec
sahf
pop
cwde
push
test
pop
sbb
sbb
stos
jbe
jmp
popf
retf
fist
les
sbb
inc
sbb
sbb
inc
sub
ret
test
leave
imul
adc
mov
mov
iret
pop
mov
enter
jmp
pop
sub
mov
and
lea
mov
sbb
mov
clc
loopne
mov
mov
lods
inc
test
mov
dec
jno
push
std
lock
mov
int3
xor
xchg
dec
xor
adc
push
xchg
sbb
sub
fild
stos
sub
xor
dec
in
out
and
cmp
sbb
add
push
cwde
mov
mov
mov
add
imul
sub
sub
dec
and
xchg
aad
pop
stos
fsubr
mov
xchg
leave
dec
shr
adc
lods
mov
mov
jne
cmps
xchg
push
nop
pop
xor
add
adc
xchg
ret
fist
add
sub
or
sahf
push
mov
push
pop
pop
mov
lahf
fucomp
mov
pusha
inc
loope
xchg
popf
(bad)
pop
mov
enter
out
mov
xchg
push
adc
cmp
sub
or
mov
pop
mov
xchg
pop
fs
mov
push
mov
lods
jnp
sti
ins
xchg
(bad)
cdq
aaa
dec
movs
out
nop
int3
inc
cmp
sbb
jecxz
cwde
sbb
rol
push
adc
out
cmps
and
mov
movs
push
mov
dec
adc
out
and
fsubr
in
push
dec
adc
clc
lds
mov
repnz
push
pop
sub
dec
popa
xchg
enter
mov
mov
jne
inc
mov
mov
mov
stos
mov
ja
in
test
test
inc
mov
lods
jmp
popf
retf
add
sub
je
mov
mov
movs
sbb
call
or
mov
lods
inc
sbb
jmp
mov
(bad)
adc
(bad)
arpl
in
(bad)
rcr
icebp
inc
aam
clc
mov
adc
cwde
lahf
icebp
mov
lea
mov
push
popa
xchg
jmp
int
popf
pop
jo
fdivr
xor
xchg
jne
lea
xor
push
and
mov
hlt
je
and
inc
mov
sbb
jle
ror
mov
shr
mov
dec
adc
xchg
lods
ds
sbb
aas
mov
xor
imul
cwde
retf
push
sbb
dec
and
pop
stos
push
outs
jno
adc
mov
in
lock
(bad)
stc
dec
pop
lods
mov
mov
xchg
test
mov
inc
cmp
jge
jp
loope
xchg
stos
inc
and
jns
mov
cdq
push
fst
push
jmp
lods
enter
shl
sbb
xchg
outs
xchg
mov
clc
xor
adc
push
fsub
inc
les
cmp
adc
or
fwait
cmps
fsub
sbb
xchg
int3
mov
jb
xchg
call
gs
in
adc
add
mov
es
pop
loope
jb
lea
lods
data16
mov
fstp
call
(bad)
test
sbb
(bad)
adc
jne
sub
lods
inc
sbb
call
sbb
and
stos
(bad)
sbb
add
nop
xchg
leave
fsubr
fnstsw
push
test
retf
sbb
test
movs
mov
pop
cli
jae
fistp
movs
retf
(bad)
test
sbb
jae
sbb
das
sbb
adc
fnsave
std
call
sti
push
retf
pop
pop
adc
cld
arpl
fcmovnu
popf
fsubr
loop
jl
nop
xchg
push
push
mov
clc
js
shl
xchg
add
pop
ss
mov
int
js
fcom
dec
inc
ins
xchg
popf
aad
aas
mov
mov
fmul
cmp
fdiv
cdq
push
adc
fadd
adc
add
xchg
nop
sub
and
dec
mov
or
stos
cmp
adc
int3
inc
pop
movs
or
ret
pop
jae
pop
mov
dec
lahf
retf
ins
mov
movs
mov
pop
xor
mov
and
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
fucomp
cld
std
mov
in
mov
pop
xor
cdq
nop
cmp
or
imul
mov
xchg
jmp
in
sar
fcom
aaa
jge
dec
(bad)
jmp
fwait
push
adc
sub
push
cwde
les
adc
sub
cmp
xchg
push
and
inc
adc
mov
mov
xchg
dec
fsubr
jo
call
(bad)
cmps
enter
ins
popf
lahf
push
and
pushf
and
jmp
mov
mov
loope
mov
aam
movs
adc
fst
imul
imul
(bad)
push
ret
sti
mov
hlt
lock
mov
adc
mov
add
fsubr
pop
imul
retf
fld
mov
and
mov
imul
jge
fld
mov
stos
dec
jl
aas
xor
add
outs
icebp
pop
scas
xchg
stos
mov
outs
les
fcom
mov
pop
icebp
mov
cmp
mov
aad
fstp
xlat
pop
bswap
js
popf
push
fcom
pushf
jae
sub
push
or
cmp
mov
adc
mov
aad
outs
mov
mov
mov
push
(bad)
sti
cmp
fdivr
sti
mov
ret
mov
or
movs
leave
sbb
aaa
inc
in
int
cmp
jne
pop
mov
lea
add
les
inc
cmp
or
dec
pop
ret
repz
sbb
and
lahf
retf
jecxz
gs
jle
pop
sub
sbb
mov
cmps
mov
loop
cli
ret
retf
movs
mov
mov
rcl
cmp
sbb
ins
mov
cmp
scas
mov
jns
mov
in
les
leave
push
sbb
ret
add
add
call
sti
imul
into
mov
icebp
call
xor
cwde
es
repnz
add
(bad)
pushf
imul
mov
add
mov
inc
or
jle
nop
add
mov
sbb
test
sbb
imul
xor
fiadd
cmp
clc
les
movs
inc
(bad)
popa
sbb
cmps
hlt
js
xor
sbb
enter
dec
cmp
sub
xchg
lea
fiadd
cmp
sub
and
mov
repnz
sub
mov
push
pop
mov
sub
sbb
sbb
sub
scas
loope
dec
and
nop
test
pop
stos
fsubr
stos
sub
leave
pusha
pop
scas
mov
cmp
mov
sti
xor
push
cmp
sar
test
sbb
jno
or
xadd
xchg
stos
cmp
or
icebp
mov
jns
enter
(bad)
icebp
fnstenv
push
loope
fistp
or
fdivr
and
je
inc
mov
aam
es
push
test
or
sub
or
fcmovnu
popf
shr
mov
inc
jae
inc
mov
ds
mov
jl
cmp
mov
or
test
cmp
das
in
cmc
mov
movs
xor
add
inc
inc
add
xor
mov
repz
sti
dec
push
ret
jecxz
and
sub
cdq
icebp
dec
sbb
mov
mov
jne
jo
movs
mov
mov
stos
mov
ja
pop
test
test
inc
mov
ror
cmp
mov
lds
mov
xchg
push
fist
sbb
or
imul
pushf
sub
mov
rol
mov
(bad)
icebp
ret
bound
sub
(bad)
stc
leave
cwde
mov
mov
or
adc
xchg
jmp
pop
ret
xchg
sub
cmp
pop
mov
push
pop
push
jp
xchg
fimul
test
pop
test
pop
push
pop
(bad)
jmp
iret
push
adc
inc
jecxz
mov
sbb
retf
cmp
in
jne
dec
mov
pop
dec
pop
jbe
movs
or
pop
mov
daa
pop
mov
iret
fucomip
jl
xchg
jle
dec
lahf
aam
sub
mov
rcr
ret
mov
dec
or
dec
popf
fwait
push
xor
test
xor
stos
jmp
stos
push
outs
jno
push
dec
sbb
fild
xor
int3
lods
shl
fnstenv
cmc
sahf
and
pop
repz
jae
stos
(bad)
inc
rol
cmps
fist
cld
movs
or
sbb
imul
sbb
mov
jno
in
fnstsw
push
fcom
jo
adc
dec
or
mov
in
dec
test
dec
dec
(bad)
cmp
xor
enter
cmp
push
popf
mov
jnp
sbb
(bad)
xor
jne
test
in
push
add
sbb
or
je
add
mov
sub
and
xor
pop
cmp
mov
push
(bad)
mov
imul
jns
jecxz
(bad)
push
sbb
inc
sub
mov
lock
sbb
add
popf
cli
leave
fsubr
fnstsw
push
test
retf
shr
aaa
stos
ror
stos
mov
pop
(bad)
cs
push
or
into
or
scas
xchg
push
pop
xchg
cmp
rol
cmps
int
fcomp
retf
mov
cmp
scas
push
jg
(bad)
je
cmps
(bad)
fwait
add
mov
add
cmp
in
pusha
push
or
dec
repz
pop
inc
test
or
nop
dec
repnz
and
popf
out
movs
push
adc
or
inc
popf
bound
fdivr
(bad)
es
lods
sti
xor
jl
cmps
(bad)
adc
aam
dec
(bad)
xchg
dec
add
mov
mov
cdq
jns
jb
cs
adc
gs
sub
adc
and
movs
mov
jmp
aas
pop
mov
mov
sbb
ins
mov
rol
neg
in
cwde
retf
movs
dec
sbb
xlat
pop
sbb
test
clc
mov
pop
fiadd
dec
ds
pop
int3
jmp
rcl
arpl
jo
test
sbb
xor
cmp
arpl
cmps
add
(bad)
pop
xor
xlat
fistp
push
pop
cmps
push
jg
mov
enter
out
xchg
dec
rcr
les
jmp
inc
mov
dec
mov
(bad)
mov
sbb
adc
fldenv
ins
in
imul
cmps
fcomp
aaa
jo
dec
(bad)
push
ins
ret
inc
mov
lea
or
push
push
push
dec
mov
ret
(bad)
inc
js
or
retf
add
test
lods
cdq
aad
dec
pop
xchg
dec
cmp
mov
dec
sar
mov
lock
mov
adc
jmp
imul
xor
cdq
xchg
dec
pushf
dec
lods
aad
push
retf
fldenv
and
int
xchg
sub
cmp
dec
loope
mov
das
sub
jo
pop
dec
outs
les
jmp
in
sar
pushf
pop
jmp
cli
mov
xchg
jmp
out
rcr
adc
dec
or
rcl
dec
adc
fcomp
mov
inc
repnz
and
mov
imul
pop
mov
sti
aaa
les
popf
and
lods
adc
and
es
xor
test
outs
push
pop
sbb
movs
xor
mov
shl
mov
shr
repz
adc
test
ret
loopne
out
and
fucomip
repz
pop
test
dec
lahf
retf
ins
mov
cmpxchg
pop
xor
mov
and
fisubr
cmps
mov
imul
dec
sbb
xlat
dec
sbb
sub
leave
push
in
mov
or
mov
rcr
cli
cmp
sub
adc
mov
ret
push
inc
cmp
push
xor
pop
icebp
mov
cmp
inc
mov
scas
hlt
mov
popf
fist
fld
mov
adc
jecxz
and
sbb
inc
mov
sbb
test
cdq
xor
jmp
pop
pop
fiadd
or
enter
mov
inc
mov
cmp
cmp
loopne
je
sete
mov
in
std
sahf
dec
mov
into
pop
stos
pop
lods
lahf
fdivr
enter
loope
xor
mov
mov
(bad)
mov
adc
pop
or
sub
(bad)
push
pop
imul
test
pop
mov
in
popf
test
adc
je
fucomp
pushf
inc
pop
cld
das
repz
push
or
into
sbb
daa
jne
dec
(bad)
push
shl
inc
call
xchg
jge
pop
movs
jbe
push
enter
push
mov
jmp
das
push
std
shl
sar
and
cwde
dec
(bad)
js
cwde
fcomp
sbb
and
mov
xor
push
mov
imul
sbb
test
xchg
in
test
hlt
in
adc
xchg
icebp
leave
adc
add
dec
cdq
push
es
loopne
adc
jmp
mov
shl
mov
shr
repz
adc
outs
mov
loopne
out
mov
aas
pop
test
mov
and
fs
xchg
cmps
mov
imul
cwde
retf
movs
ret
sbb
push
xchg
push
jb
mov
lds
cmp
xor
adc
stc
je
cld
rcl
arpl
lock
enter
add
push
(bad)
mov
xchg
push
fcmovbe
sbb
fistp
xchg
std
mov
leave
lods
mov
retf
jno
out
rcr
shl
lds
mov
adc
xchg
push
fsub
sbb
aam
stc
mov
sbb
dec
push
in
xchg
popf
aad
aas
mov
mov
es
cmps
jnp
fdiv
popf
push
adc
adc
rcr
mov
adc
pop
imul
sahf
dec
mov
into
pop
stos
pop
lods
popf
sbb
dec
pop
xchg
dec
add
iret
loope
cmp
mov
imul
cmp
adc
cmp
add
fsubr
adc
mov
mov
mov
fisub
jno
xchg
in
mov
and
xchg
pop
ret
jne
popf
retf
arpl
mov
lock
sbb
xor
test
fisubr
scas
push
test
fist
or
and
adc
mov
popf
lahf
xchg
pop
out
jl
popa
or
shl
dec
sub
mov
inc
les
inc
push
mov
mov
or
jo
fwait
sbb
loopne
pop
mov
jne
popf
push
movs
fadd
mov
and
test
je
or
mov
dec
mov
mov
shr
mov
ret
loopne
dec
pop
add
in
mov
aaa
gs
dec
enter
int
jecxz
dec
sbb
mov
cmps
mov
cmp
mov
fs
xchg
mov
mov
sbb
pushf
(bad)
lahf
sti
mov
cmps
fld
leave
js
(bad)
xor
or
data16
mov
mov
or
pop
cmp
mov
mov
adc
in
rcr
cmps
push
or
int3
repnz
sbb
mov
cmp
fistp
adc
sub
xchg
xchg
aas
inc
mov
mov
mov
call
add
sub
xor
xchg
push
push
(bad)
sti
cmp
fdivr
sti
mov
shl
add
and
mov
shr
inc
cdq
js
mov
jmp
adc
jmp
jmp
push
or
movs
lea
jns
je
mov
or
mov
add
sbb
add
ror
and
mov
or
fnsave
dec
outs
test
test
fisubr
jge
test
jmp
fnsetpm(287
leave
jl
(bad)
mov
rol
sbb
xlat
jno
inc
scas
push
pop
jo
movs
or
(bad)
jns
mov
cmp
fst
pop
inc
(bad)
fstp
xchg
xchg
fadd
repz
cld
into
dec
mov
cmp
add
or
pop
sub
adc
inc
stos
sbb
push
push
fdiv
sahf
mov
cmp
clc
int3
pop
fdivr
jnp
int3
jne
dec
inc
adc
dec
mov
loopne
sub
or
int
imul
push
sub
mov
adc
repz
outs
loopne
mov
repz
sti
dec
push
and
mov
dec
popa
xchg
push
dec
sbb
adc
retf
xlat
scas
mov
jmp
test
neg
aad
int
sub
push
pop
das
retf
sbb
inc
lahf
retf
sub
xor
(bad)
push
sti
es
js
xlat
fcom
outs
jmp
sbb
ins
mov
jo
movs
sbb
fst
xor
cwde
sbb
jecxz
stos
retf
mov
push
dec
xchg
jmp
pop
cmp
hlt
sub
add
mov
fwait
nop
out
mov
xor
jmp
adc
jae
inc
mov
jle
clc
int3
pop
mov
sti
mov
in
and
sbb
pop
mov
dec
and
sub
out
mov
mov
or
fsubr
mov
sbb
mov
shr
shr
adc
and
pop
mov
daa
pop
test
iret
fucomip
jl
(bad)
jmp
dec
mov
xchg
pop
mov
sub
scas
mov
psadbw
icebp
mov
adc
fsubr
inc
in
mov
sbb
shr
fild
loop
jno
rcr
fistp
inc
cmp
dec
loope
mov
das
sub
lock
movs
push
popa
scas
rcr
sbb
mov
xor
sub
pop
(bad)
push
dec
icebp
in
loop
(bad)
out
adc
sub
pop
push
dec
aam
aam
cmp
test
xor
scas
(bad)
mov
push
pop
push
jp
scas
fimul
test
jle
mov
pop
hlt
or
mov
mov
xchg
enter
add
or
mov
imul
sahf
dec
sub
xchg
pop
or
mov
adc
(bad)
mov
cmp
sbb
sbb
sub
mov
lock
pop
dec
add
dec
inc
cmp
push
hlt
sub
push
xor
nop
xlat
push
mov
cdq
inc
in
mov
sub
int
inc
cmp
repnz
rcr
dec
pop
out
cdq
adc
test
xor
aas
arpl
setne
test
jns
dec
ret
movs
mov
lods
fidiv
aad
mov
aad
jmp
fs
leave
jo
shl
dec
std
arpl
inc
call
dec
les
dec
dec
sar
mov
inc
ret
pop
xor
enter
cmp
push
popf
stos
stos
cmp
(bad)
mov
lea
xchg
lea
adc
sbb
mov
int
jle
mov
mov
rcl
mov
shr
repz
adc
in
mov
loopne
out
and
fucomip
repz
pop
sbb
mov
bound
and
shl
push
adc
or
inc
mov
dec
pushf
dec
int3
imul
mov
mov
mov
dec
sbb
int
dec
push
mov
mul
or
or
dec
mov
lods
hlt
xor
dec
mov
rcl
lahf
cmp
retf
xor
dec
sub
sub
mov
cld
jo
inc
mov
pop
jb
add
xchg
dec
push
repz
inc
cwde
fmul
repnz
repnz
and
popf
jmp
xchg
jmp
or
out
iret
(bad)
popf
xor
fdiv
cmps
ffree
(bad)
out
mov
enter
sbb
ret
out
inc
adc
mov
in
retf
sahf
dec
mov
into
pop
stos
pop
lods
xchg
mov
or
mov
adc
sti
mov
in
lock
mov
ret
cdq
push
lock
mov
popf
cli
or
xchg
movs
mov
push
ins
test
push
nop
rcl
rcl
mov
push
cmc
mov
scas
fs
mov
sub
mov
xchg
push
pop
push
jl
ret
or
call
pop
mov
std
xor
pop
jge
in
push
pop
(bad)
enter
mov
mov
xchg
jmp
pop
rcr
sar
js
push
mov
mov
dec
call
sub
fldenv
ins
jmp
or
ins
fcomp
xchg
test
aam
jl
dec
sub
bound
add
and
sub
dec
push
or
fidiv
cs
dec
mov
mov
dec
call
js
ret
loopne
dec
pop
shr
repz
sbb
cmps
aas
lahf
retf
jecxz
mov
ror
push
aas
mov
ins
xchg
adc
xor
cli
fs
retf
mov
repnz
xor
jae
leave
je
pop
retf
sub
push
jl
ret
add
dec
or
popa
and
shl
adc
pop
fs
jnp
or
loope
sbb
scas
cmp
repnz
mov
shl
pop
jl
mov
mov
stos
test
mov
sbb
mov
push
mov
inc
ins
jmp
pop
clc
jecxz
ins
cmp
mov
scas
cmps
inc
cdq
xlat
call
int3
pusha
and
mov
xor
test
fnstenv
mov
jmp
adc
ss
mov
mov
push
sbb
mov
std
mov
cmp
mov
xor
add
or
inc
pop
mov
adc
mov
fdiv
ret
sbb
xlat
stos
mov
xchg
mov
pusha
push
cld
sub
mov
(bad)
scas
repz
inc
add
lods
mov
and
add
movs
hlt
mov
push
or
dec
ins
movs
jmp
fiadd
nop
xor
mov
xchg
cmp
lds
pushf
mov
sbb
sti
fstp
pusha
scas
popa
or
rcl
mov
inc
inc
pop
mov
shl
mov
or
fwait
or
cwde
inc
stos
adc
fidivr
jp
jnp
enter
xchg
pop
fst
pop
mov
mov
fwait
lea
aas
call
iret
sub
mov
dec
(bad)
xor
fisubr
popf
cdq
sub
cmp
mov
or
repz
jecxz
(bad)
mov
repz
sti
pop
push
iret
xchg
push
ror
add
mov
in
aas
or
dec
push
nop
jg
adc
adc
sub
test
dec
cld
lods
sbb
push
lahf
xchg
push
adc
mov
aaa
jmp
add
push
sbb
ja
pop
sbb
xchg
ficom
int
add
push
fist
mov
add
cmc
mov
cli
cli
icebp
sbb
cmc
cmp
lahf
es
add
repnz
lock
mov
push
das
test
or
push
fidivr
cli
pop
lods
inc
int
jns
cli
jle
fwait
pusha
jl
mov
(bad)
cmp
in
jne
inc
mov
adc
mov
dec
and
inc
sti
out
mov
mov
clc
(bad)
mov
sbb
mov
adc
call
pop
mov
daa
pop
(bad)
pop
iret
fucomip
in
dec
mov
jnp
ret
cmp
sbb
add
lds
add
pop
and
sbb
les
imul
ret
shl
pushf
inc
pop
clc
scas
repz
fnstenv
jno
popf
sbb
xchg
sbb
add
pop
mov
stos
test
add
xor
and
mov
pop
sub
cld
or
sbb
inc
(bad)
sub
imul
add
adc
dec
xor
aas
data16
push
mov
jp
fst
jge
mov
mov
xchg
enter
cmps
ret
out
fcomi
fwait
lea
xor
mov
cwde
mov
inc
adc
or
jbe
imul
sahf
dec
sub
xor
pop
sbb
mov
inc
out
mov
jo
call
aas
ret
cli
call
jo
cmp
xor
mov
adc
test
mov
cwde
retf
movs
dec
(bad)
rcr
mov
jge
rcr
jno
les
in
xor
adc
fnstenv
clc
cs
je
ins
test
mov
lds
add
xor
nop
imul
xchg
xor
leave
xor
xchg
push
mov
movs
mov
cld
shr
jle
xor
pushf
adc
in
stos
js
cmp
ret
aam
imul
test
jnp
xchg
sub
jecxz
push
repnz
(bad)
xrelease
push
lahf
xlat
inc
and
call
mov
test
sbb
xchg
or
dec
push
adc
and
mov
int
jle
pop
jmp
mov
shl
mov
shr
repz
adc
daa
mov
loopne
out
mov
sbb
aaa
pop
sbb
jns
add
sub
push
adc
cmp
fsubr
outs
aaa
(bad)
sbb
rcr
stos
jge
sbb
add
xchg
in
mov
and
xchg
push
cld
das
repz
pushf
mov
add
xchg
add
cmp
pop
mov
movs
sbb
mov
enter
stc
stc
push
cmp
jge
(bad)
pop
(bad)
push
enter
and
cmp
lods
and
inc
daa
sbb
(bad)
cmp
fist
nop
jmpw
(bad)
or
sbb
out
xor
int
cmc
arpl
loopne
lea
shl
mov
mov
test
enter
sbb
mov
inc
mov
fmul
in
ret
mov
into
pop
stos
pop
lods
xchg
js
dec
pop
movs
dec
call
fdiv
in
cmp
imul
sub
jno
lock
sbb
cmp
cmps
mov
arpl
sbb
pop
dec
sbb
xor
cs
sbb
popf
(bad)
sahf
sti
(bad)
stc
je
scas
add
scas
out
arpl
adc
test
jl
adc
les
or
mov
sbb
pushf
inc
push
xor
and
cmp
or
(bad)
sbb
dec
mov
sub
iret
xor
scas
xchg
push
or
mov
rcr
jb
mov
addr16
movs
ds
xor
lahf
(bad)
pop
xchg
pop
les
fwait
jl
mov
bound
add
movs
test
inc
mov
dec
push
or
fidiv
sti
mov
dec
mov
mov
fucomp
repz
adc
xchg
mov
mov
sbb
mov
cdq
inc
push
lock
shl
or
mov
dec
and
lods
imul
aaa
push
xor
mov
lods
ficom
test
shr
jne
(bad)
lahf
mov
xor
dec
add
push
jl
or
inc
imul
sub
xchg
hlt
icebp
mov
ror
inc
jge
add
pop
cmps
pop
ins
ja
xor
xor
(bad)
jmp
mov
cmc
mov
mov
ror
jo
shl
inc
cmc
or
jns
ficom
sti
and
iret
test
fdivr
scas
sbb
add
fld1
std
jge
bound
shl
ds
and
mov
xor
mov
out
mov
cdq
mov
inc
adc
dec
mov
mov
push
mov
int
(bad)
movs
push
mov
in
cdq
fisttp
pop
cmp
sbb
aas
call
aad
or
ret
xchg
sbb
sbb
jbe
pop
stos
mov
repnz
push
in
dec
ss
call
xchg
mov
xchg
add
sbb
adc
xor
setne
ss
cmp
mov
xor
jecxz
popf
cmps
(bad)
jno
pusha
lahf
adc
test
sub
sbb
jo
js
adc
or
xchg
adc
es
dec
mov
mov
dec
mov
test
sub
sti
repz
mov
lahf
(bad)
pop
xchg
aas
shl
fwait
jl
dec
mov
bound
add
and
cmovno
or
cdq
jnp
int
je
sub
mov
xlat
idiv
push
add
mov
xor
in
daa
ja
clc
rol
mov
mov
inc
sbb
mov
xchg
or
aam
call
inc
xchg
sub
mov
stos
mov
xchg
mov
pusha
push
cld
sub
aaa
mov
jnp
frstor
imul
lahf
repnz
add
sub
cdq
retf
mov
mov
dec
movs
xchg
mov
add
cmp
xor
fdiv
jecxz
popf
movs
jg
cli
in
(bad)
cli
mov
retf
ror
and
push
ret
add
or
jb
jmp
std
xchg
pop
adc
xchg
jp
(bad)
xor
mov
out
mov
std
jge
stos
cmps
inc
cdq
xlat
call
int3
pusha
ds
adc
xor
fadd
out
mov
cdq
pop
dec
mov
jmp
adc
dec
mov
rcr
mov
or
xor
and
out
daa
push
adc
adc
movs
lds
jg
ret
sbb
inc
pop
call
jg
sbb
dec
and
sbb
bnd
xchg
(bad)
jnp
ror
icebp
fnstenv
fisttp
mov
test
or
cmp
call
xlat
les
pop
or
pop
mov
leave
jns
(bad)
fld
push
leave
pop
call
cs
xor
mov
js
xchg
adc
dec
adc
leave
pop
outs
rcl
pinsrw
fild
mov
inc
cwde
dec
lods
push
std
test
fdiv
sbb
movs
inc
daa
popf
sti
lahf
lahf
(bad)
cmps
mov
fwait
lea
mov
inc
adc
sub
pop
push
or
int
imul
gs
pop
sbb
movs
xor
dec
and
sar
jmp
add
in
daa
div
mov
add
cmps
inc
sbb
inc
sbb
imul
dec
pushf
xchg
rcr
jge
les
push
stos
push
les
scas
inc
xchg
fxch
cs
jmp
sti
ret
arpl
mov
jo
xor
add
retf
scas
push
and
movs
sub
mov
mov
mov
in
sub
(bad)
cdq
cmps
push
enter
xchg
leave
in
test
or
repz
repnz
test
stc
addr16
xchg
jbe
test
adc
xchg
push
sub
mov
jl
mov
(bad)
cmp
jne
adc
and
mov
dec
and
(bad)
(bad)
out
mov
mov
push
retf
sbb
dec
jb
sbb
mov
int
cmp
mov
(bad)
mov
jns
ds
es
push
mov
lock
pop
mov
or
mov
adc
stos
inc
stos
fst
mov
cwde
retf
movs
dec
(bad)
rcr
mov
jge
les
cmps
xor
ins
fdivrp
mov
ja
adc
fistp
ret
push
sbb
inc
cld
cmc
mov
push
or
gs
add
cmp
les
fist
movs
xchg
icebp
dec
aad
mov
fst
cmp
int3
xchg
and
stc
add
fyl2x
xor
inc
stos
adc
inc
mov
or
cmp
sbb
cmp
xor
test
ins
std
pop
movs
inc
sbb
cmps
ret
out
mov
aas
mov
inc
xor
mov
cwde
cmp
xchg
enter
inc
inc
or
mov
dec
mov
ret
mov
xor
pop
arpl
(bad)
aad
mov
loopne
ror
aaa
sar
lahf
retf
or
add
test
neg
frstor
sub
dec
rol
(bad)
sbb
rcr
sbb
les
icebp
or
adc
shl
mov
lods
xchg
(bad)
jno
mov
shl
mov
or
cmp
jl
add
mov
jge
jb
sbb
pop
sub
fsub
jp
fbstp
arpl
retf
sub
js
or
rcr
mov
inc
cmps
pop
xchg
and
fcomi
sub
in
and
call
mov
test
sbb
fwait
mov
dec
push
adc
add
int
jle
sbb
cmp
fst
add
mov
imul
and
mov
dec
cmp
imul
jnp
or
cdq
push
lock
cmp
cmps
mov
arpl
sbb
ror
test
pop
stos
xor
ficomp
lods
add
xor
(bad)
pop
std
mov
push
jle
fstp
dec
pop
xchg
sbb
add
xchg
call
ja
mov
mov
test
stos
lods
ret
pop
cld
pop
addr16
cmp
je
add
jl
int3
xor
mov
in
pop
popa
sbb
in
mov
out
pop
xor
mov
push
and
je
lea
push
out
xor
int
in
out
cmps
ret
fincstp
clc
shl
lea
mov
mov
mov
call
inc
sbb
pop
add
push
adc
enter
je
mov
pop
adc
call
push
sahf
pop
imul
push
das
jmp
clc
add
(bad)
sbb
in
cmp
imul
inc
add
add
jbe
and
test
jp
js
stc
mov
cmp
test
pop
xor
xchg
fild
repz
jge
outs
scas
add
(bad)
mov
inc
push
sbb
xchg
pop
sub
adc
sub
jns
mov
push
xlat
cwde
adc
lahf
xor
sti
iret
js
jle
xor
int
xchg
sub
js
es
dec
pusha
sar
(bad)
sub
push
mov
int3
dec
mov
mov
xor
daa
and
scas
jb
fwait
jl
lea
enter
loop
pushf
pop
sub
dec
push
or
ret
push
int
mov
xchg
xchg
fisttp
pop
pand
inc
sahf
dec
jns
cmp
jno
(bad)
iret
sbb
daa
dec
cmp
rcr
jae
sbb
in
jns
repnz
jno
jns
(bad)
shl
push
dec
(bad)
push
and
ror
(bad)
push
inc
cmp
cs
add
or
mov
sbb
retf
or
call
fimul
mov
aad
jp
fcomp
shl
jecxz
sahf
sahf
xchg
jl
js
jp
mov
mov
gs
pop
aaa
cwde
fcomp
and
mov
mov
and
xchg
jp
int3
xchg
test
sub
cmp
mov
cmp
call
cmps
inc
cdq
xlat
call
int3
pusha
ds
jecxz
mov
sub
push
cmps
mov
das
out
cmc
mov
nop
imul
dec
shr
ins
jmp
(bad)
mov
bound
mov
sbb
push
sar
rol
dec
pusha
xchg
ret
mov
test
jno
pop
and
add
cmp
add
ret
int3
sub
in
mov
(bad)
jmp
inc
imul
arpl
imul
mov
sbb
adc
xor
and
xchg
mov
out
mul
cli
in
(bad)
pop
call
jl
xor
in
jnp
out
repz
xchg
pop
xchg
ficomp
or
ins
(bad)
mov
fild
mov
inc
cwde
dec
lods
push
out
movs
ret
fmul
mov
popf
xchg
cmp
pop
lds
fwait
lea
push
mov
out
adc
sub
push
pop
dec
test
ins
push
xor
cs
aam
xor
push
jne
les
pop
mov
pop
add
adc
ret
push
(bad)
adc
fidiv
cmps
jecxz
push
lods
sub
mov
fild
inc
or
sub
cmp
(bad)
outs
movs
aam
mov
daa
(bad)
dec
pop
inc
les
mov
ja
push
in
mov
push
sub
call
jl
or
pop
push
mov
mov
inc
inc
sbb
ja
dec
and
pushf
sub
sbb
(bad)
cmp
xchg
mov
mov
rcr
dec
jmp
pop
mov
inc
mov
test
adc
les
xchg
js
int3
push
mov
jl
cmp
cmp
in
jne
jb
int3
pop
add
sbb
xchg
mov
inc
cmp
fstp
sahf
dec
dec
sub
jmp
cld
mov
shl
push
mov
push
ret
or
imul
cmc
loopne
imul
add
dec
xor
(bad)
dec
xor
mov
xor
cmp
stos
repnz
mov
push
and
jmp
adc
mov
test
std
dec
jge
shl
inc
pop
inc
sbb
ins
mov
adc
test
add
inc
pushf
sub
iret
(bad)
cdq
xor
pop
repz
xor
fadd
xchg
out
add
add
push
mov
xlat
xor
test
ins
out
movs
inc
sbb
cmps
ret
out
xchg
cmp
retf
ins
xor
mov
cwde
push
sub
retf
and
and
xchg
cdq
clc
or
mov
sbb
jmp
repz
adc
test
mov
jno
inc
je
in
lahf
pop
cmps
pop
push
sub
dec
push
adc
add
rcr
sbb
inc
pop
cmp
mov
imul
pop
mov
push
push
clc
xor
scas
or
pop
xchg
jmp
popf
(bad)
jmp
imul
mov
stos
sbb
cld
push
iret
fcmovbe
mov
adc
lods
(bad)
jge
shr
or
jmp
enter
pop
cmc
xchg
fwait
ins
push
dec
cmps
leave
loop
sar
mov
adc
and
lea
aas
mov
clc
add
enter
mov
xchg
mov
fld
lahf
jle
int3
shr
cmp
mov
mov
inc
and
or
or
xchg
fcom
retf
mov
clc
sub
aad
into
pop
stos
cmp
aaa
in
movs
div
loop
ja
enter
fisttp
pop
cmp
sbb
call
test
xor
push
lock
jp
sbb
xchg
jae
test
call
push
gs
push
jns
mov
jge
jae
jg
mov
in
jmp
rol
imul
les
retf
add
stos
sub
stos
push
sbb
jbe
sub
sub
inc
push
js
adc
call
scas
inc
fwait
(bad)
push
shl
add
add
pop
xor
mov
fisttp
adc
jo
test
out
xor
int
out
cmps
ret
fincstp
clc
clc
sbb
jb
xchg
xor
ret
or
rcl
add
or
xor
push
dec
xchg
sbb
mov
jns
ss
and
icebp
cmp
cmps
neg
out
rol
mov
movs
mov
aas
mov
(bad)
cs
or
or
inc
cdq
push
push
cmps
add
jno
les
mov
arpl
mov
add
cmp
in
mov
rcl
cmp
inc
pop
or
aaa
mov
nop
imul
call
jle
jp
mov
jnp
xchg
add
movs
cmps
mov
mov
mov
or
sub
or
cmp
sub
push
mov
clc
mov
mov
xchg
mov
lahf
(bad)
pop
xchg
fcomip
jb
fwait
outs
push
ret
xchg
imul
jb
or
add
in
mov
push
xchg
jle
push
dec
test
ror
jns
outs
in
movs
sbb
(bad)
lahf
push
adc
adc
movs
inc
sbb
sbb
pusha
lock
jl
call
cmps
sub
sar
sbb
mov
push
sbb
imul
stc
jnp
jns
(bad)
pop
sbb
(bad)
push
xchg
popf
daa
sbb
jae
or
xchg
jp
inc
adc
mov
retf
pop
lods
lds
jl
sbb
pop
into
mov
fucomi
repnz
fwait
leave
ins
xor
pop
aaa
cwde
aam
and
mov
mov
and
xchg
jp
or
test
sub
mov
out
mov
gs
std
mov
mov
xor
test
push
or
add
xor
pop
pop
mov
fwait
cmp
and
int
pop
test
xor
jl
fucomip
sbb
aas
call
hlt
mov
inc
xor
pop
mov
add
gs
aad
jo
aaa
ror
(bad)
sbb
rcr
adc
sub
in
test
fldl2t
fisttp
mov
test
ror
(bad)
rcl
popf
cmp
inc
push
xchg
sbb
dec
mov
leave
xchg
fwait
adc
mov
push
cmp
sbb
scas
(bad)
in
pop
gs
stos
pop
jo
sbb
cld
adc
xor
inc
or
add
(bad)
fsubr
fild
mov
lods
push
loope
movs
ret
fcomp
adc
ret
daa
lahf
(bad)
cmps
jnp
enter
mov
sti
sti
faddp
mov
js
loopne
jecxz
mov
or
out
push
adc
mov
jmp
test
xor
mov
xchg
jne
inc
hlt
out
les
shr
loopne
mov
bound
mov
sbb
in
gs
cwde
enter
inc
ret
lock
mov
dec
test
dec
sar
mov
stos
push
pop
stos
lods
mov
sbb
(bad)
sub
stos
shl
jge
pushf
mov
sub
xchg
xchg
jl
out
retf
add
stos
std
cld
jns
sbb
xchg
mov
xchg
pop
sbb
test
mov
pusha
pop
into
xor
mov
fwait
leave
ins
xor
pop
aaa
cwde
call
es
mov
sbb
cdq
and
xchg
jp
int
test
sub
mov
stos
cmp
out
aas
pop
sahf
push
dec
aad
jmp
inc
or
sbb
mov
js
or
fnstcw
fisubr
and
loopne
cmc
xor
aad
xchg
out
jbe
mov
sub
mov
add
adc
jae
mov
(bad)
xor
mov
cmp
or
imul
xchg
jecxz
sbb
jno
mov
std
cld
push
in
test
leave
pop
sbb
mov
sbb
test
cmp
jmp
fnstcw
inc
outs
cmps
sub
mov
mov
(bad)
ficomp
xchg
sbb
test
sub
sbb
scas
(bad)
in
inc
and
mov
dec
jo
sbb
add
or
or
add
mov
push
mov
cwde
dec
lods
push
out
enter
mov
call
inc
popf
push
loope
int3
xlat
int
(bad)
jmp
fucomp
test
pop
hlt
pusha
inc
inc
or
cmp
fsubrp
mov
mov
dec
sbb
cs
(bad)
xor
dec
shl
movs
neg
loopne
cld
mov
shl
cmp
jae
fsub
cld
add
add
inc
pop
mov
add
imul
gs
sbb
nop
sub
push
sub
movs
leave
mov
dec
push
add
adc
mov
rcr
adc
sub
popa
pop
rcr
pop
or
xor
mov
test
mov
mov
push
adc
outs
pop
dec
popf
jmp
xor
mov
mov
popf
dec
icebp
pop
mov
call
out
jmp
mov
or
xchg
mov
pop
mov
sub
sub
out
dec
(bad)
pop
cmc
stos
popa
jne
outs
push
andnps
pop
xor
mov
push
adc
or
or
adc
mov
jbe
mov
sbb
mov
call
mov
aam
popf
pop
pop
add
out
mov
repnz
or
push
aas
repnz
mov
add
or
inc
mov
lds
popf
retf
push
in
mov
in
mov
dec
sbb
in
inc
add
test
add
cmp
or
ins
movs
mov
std
inc
jnp
push
retf
pop
test
mov
and
fcomi
js
neg
and
xchg
jge
add
add
push
mov
xlat
xor
test
ins
xchg
stc
mov
stos
mov
sti
gs
jmp
mov
sbb
adc
add
sbb
ss
dec
inc
test
cwde
mov
icebp
retf
sbb
inc
and
cmp
jle
pop
stos
cmp
aaa
in
movs
div
pop
ds
cwde
jb
clc
bound
jecxz
ins
xchg
xlat
or
sbb
rol
sbb
inc
pop
sbb
or
sub
sub
aad
movs
dec
or
dec
mov
mov
mov
mov
pop
jne
mov
sbb
icebp
mov
xchg
sbb
or
retf
rcl
mov
scas
mov
sbb
or
cwde
push
sub
gs
lods
cmp
jmp
cmp
ins
push
dec
mov
loop
sar
iret
and
lea
lock
call
cmps
pop
mov
jp
mov
rcl
cli
jnp
jecxz
cmp
add
fwait
lea
cld
and
and
push
xchg
enter
aam
sub
jne
movs
popf
(bad)
push
mov
shl
mov
inc
arpl
int
jns
(bad)
es
iret
inc
(bad)
xor
out
mov
cld
or
or
jo
lock
aas
mov
xchg
push
mov
movs
sbb
pushf
inc
stos
xchg
adc
sub
jmp
mov
inc
fstp
push
cmp
call
jl
or
pop
rcl
xchg
mov
mov
ror
push
push
retf
pop
test
push
inc
sbb
scas
(bad)
fcomi
js
ja
scas
inc
movs
fsubr
nop
xchg
xor
add
add
push
mov
fwait
xor
cmps
xchg
das
push
call
cmp
call
xchg
pop
jmp
call
int3
pop
sub
in
hlt
mov
cmc
xchg
mov
cdq
jne
dec
mov
imul
lods
sahf
dec
mov
inc
add
pop
arpl
int
mov
pop
push
xchg
mov
call
jp
arpl
cdq
test
inc
sbb
lock
cmc
mov
jl
xor
outs
movs
ret
ins
test
iret
add
stos
jb
stos
jecxz
jne
push
and
sub
icebp
fist
adc
icebp
mov
mov
test
inc
sahf
cmp
mov
sbb
inc
call
(bad)
gs
lods
cmp
cli
and
mov
(bad)
bnd
ins
push
or
loop
sar
and
lea
xchg
fmul
test
xchg
out
aam
jne
inc
gs
imul
outs
jle
lahf
(bad)
pop
pop
xchg
std
jmp
cmp
xor
cmp
in
sbb
xchg
fsubr
dec
test
xor
mov
xchg
pop
adc
add
jmp
jge
popf
pop
loop
mov
jmp
popf
cmp
adc
mov
or
fcomp
call
call
test
movs
fisub
gs
push
jns
mov
jge
xor
lods
mov
in
jmp
cld
pop
sub
add
jge
pop
add
jo
imul
adc
pop
mov
mov
cdq
lods
inc
and
lahf
scas
mov
mov
jno
jo
jb
push
dec
sub
or
mov
(bad)
sub
push
mov
fwait
mov
mov
ins
icebp
out
xchg
mov
arpl
(bad)
jne
or
mov
cmp
cmp
pop
cmc
leave
sbb
add
and
js
fisubr
and
loopne
cmc
xor
mov
xchg
pop
cmp
sbb
inc
call
(bad)
ret
imul
(bad)
fdiv
mov
fist
rol
sti
mov
test
mov
cdq
leave
iret
inc
sub
imul
lds
mov
arpl
mov
pop
dec
mov
jae
mov
in
inc
stos
mov
adc
mov
push
or
in
sbb
xchg
stos
cmp
fwait
push
xchg
mov
push
ret
into
xor
sbb
ins
xor
pop
aaa
cwde
clc
add
sbb
mov
lock
jns
rcl
jp
mov
movs
inc
cmps
outs
push
gs
ins
jg
fwait
lea
aad
repz
sbb
mov
inc
or
push
ins
lock
mov
mov
dec
sbb
cs
cmc
mov
mov
cmp
addr16
ins
xchg
cmp
sar
fisub
out
xchg
jmp
mov
pop
push
(bad)
sbb
or
(bad)
movlps
les
inc
int
sbb
cmp
push
imul
adc
mov
sbb
and
sar
xor
(bad)
pop
cmp
mov
clc
lock
dec
retf
aad
push
adc
add
dec
les
xchg
adc
test
lods
inc
sbb
scas
(bad)
in
and
popf
scas
cmp
sbb
cmp
or
or
add
mov
clc
or
sbb
outs
mov
pop
xchg
rcl
xchg
je
fidiv
mov
nop
and
call
or
lds
pop
fld
add
icebp
mov
out
or
cwde
cwde
inc
sbb
in
cmc
(bad)
sbb
fisttp
jae
xlat
mov
xchg
mov
mov
mov
lock
enter
mov
mov
cmp
adc
mov
sbb
pop
inc
test
mov
sub
in
test
fldl2t
fisttp
mov
nop
mov
test
inc
(bad)
fmul
inc
call
sbb
or
(bad)
cmp
movs
pop
sbb
mov
lods
mov
mov
push
adc
pop
dec
sahf
jmp
xor
leave
loop
and
sub
inc
sbb
mov
addr16
stos
popf
jecxz
or
dec
or
ret
mov
push
aas
out
xor
lahf
(bad)
cmps
mov
pop
fdivr
lock
mov
and
mov
jno
mov
dec
mov
push
adc
in
shl
fdiv
test
push
push
or
ret
imul
in
cdq
jle
push
sbb
jno
cmp
adc
mov
and
nop
out
sbb
push
xchg
cdq
pusha
or
lahf
mov
stos
push
pop
stos
lods
mov
sbb
(bad)
sub
cmp
dec
or
data16
mov
mov
rol
scas
imul
xchg
adc
test
lods
inc
sbb
scas
(bad)
in
sub
popf
scas
cmp
sbb
xor
or
stos
push
cmp
rol
jmp
scas
push
adc
mov
xchg
fldl2t
mov
fs
xchg
xchg
lahf
(bad)
fdiv
push
fdivr
clc
sbb
jecxz
xchg
mov
xchg
xchg
lea
add
out
jle
pop
cmp
push
mov
retf
jge
cmp
imul
ja
clc
in
inc
xor
retf
gs
lock
enter
add
rcr
adc
mov
dec
pushf
sbb
jecxz
sbb
jno
mov
std
mov
les
cmp
(bad)
sub
(bad)
fs
jne
sbb
cli
les
push
pop
sub
inc
sbb
or
(bad)
cmp
pop
arpl
jno
loope
mov
push
adc
pusha
mov
jmp
mov
fwait
leave
loop
and
sub
js
adc
dec
dec
mov
adc
inc
jmp
inc
cwde
dec
int
push
fidivr
jae
popa
xchg
pushf
mov
sti
ins
or
dec
adc
iret
test
pusha
test
pop
hlt
pusha
inc
dec
or
cmp
or
dec
mov
in
aam
ins
aam
mov
xchg
ja
xchg
cmp
mov
imul
and
sub
sti
inc
cmp
lahf
(bad)
jno
push
xchg
xor
fld
sti
dec
cld
aad
inc
sub
inc
cdq
pop
dec
or
inc
imul
outs
(bad)
mov
ins
ror
sbb
inc
lahf
stos
and
in
xor
ffreep
xchg
jp
dec
mov
sub
or
mov
dec
les
xchg
adc
test
lods
inc
sbb
scas
(bad)
in
adc
popf
scas
cmp
adc
sbb
ret
add
inc
clc
jp
mov
xchg
dec
inc
push
mov
test
push
fidivr
sub
stos
push
jne
inc
or
jge
ins
mov
xor
mov
push
adc
inc
dec
or
js
fwait
push
fwait
cs
int
pop
mov
cmc
xor
(bad)
mov
pop
pop
lea
ss
dec
out
mov
jmp
in
xor
push
add
cs
push
add
call
mov
pushf
cli
push
dec
sbb
sbb
call
jnp
inc
in
test
or
sub
pop
je
sti
pop
push
inc
and
arpl
pop
sub
inc
sbb
or
(bad)
cmp
movs
pop
imul
fwait
lods
mov
mov
push
adc
pusha
mov
jmp
mov
fwait
leave
loop
and
ror
inc
xchg
adc
cmp
nop
pop
sub
sbb
xchg
adc
pop
in
ret
mov
cli
mov
xor
sti
rol
clc
sbb
xchg
mov
sbb
adc
jle
inc
inc
or
mov
dec
mov
jnp
xchg
mov
loopne
jle
sbb
mov
cwde
test
fistp
add
loopne
pop
in
mov
mov
mov
imul
pop
jmp
sub
and
test
xor
pop
jg
nop
push
call
test
sbb
sub
mov
or
dec
popf
aad
sub
and
xor
inc
scas
xchg
push
xchg
fstp
mov
stos
add
call
retf
pop
test
xchg
inc
sbb
scas
(bad)
fcomi
js
cmp
repnz
inc
ror
pusha
push
mov
inc
sbb
mov
xchg
sub
push
push
xchg
mov
loopne
fdivr
xor
mov
adc
adc
in
movs
sub
int3
sub
inc
sbb
jb
or
push
test
call
imul
push
loopne
mov
repz
mov
imul
(bad)
aad
jo
nop
mov
inc
pop
mov
xchg
push
mov
mov
stos
xchg
adc
sub
jns
dec
push
dec
or
push
xchg
mov
mov
cmp
add
sub
push
sbb
add
imul
mov
gs
lods
cmp
dec
(bad)
pusha
mov
cmc
bnd
jg
(bad)
xchg
push
repz
inc
loope
or
out
add
jge
xchg
sub
adc
xchg
pop
xchg
in
fdivr
call
adc
jb
fwait
jo
(bad)
jmp
test
add
sbb
jg
sbb
retf
cmps
stos
dec
lea
push
pop
push
mov
int
cmp
jmp
(bad)
in
xchg
iret
ret
clc
sti
jno
or
pop
mov
mov
fwait
and
sub
sbb
lock
jo
cmc
mov
jl
ret
aad
movs
ret
ins
test
repnz
scas
inc
dec
jge
push
bnd
call
jmp
popf
retf
retf
es
xchg
pop
xchg
test
and
inc
sub
cli
cld
pop
stos
xchg
push
adc
retf
mov
add
push
sbb
dec
(bad)
fucomi
in
mov
dec
in
sti
mov
cmp
mov
jae
or
push
add
cdq
cmp
inc
clc
loopne
int
push
pop
xchg
and
fs
fld1
popf
rcr
sti
xor
jne
adc
enter
or
or
fisttp
jmp
adc
ret
xor
and
movs
push
mov
pop
test
xchg
dec
jae
mov
inc
(bad)
popf
rol
addr16
fwait
aas
xchg
xor
add
dec
xor
test
fs
jb
(bad)
std
push
xchg
les
scas
mov
jecxz
fiadd
mov
push
mov
xchg
push
nop
mov
pusha
add
or
jge
imul
adc
pop
mov
cwde
mov
lods
inc
and
lahf
scas
jg
leave
jno
mov
clc
jmp
js
cmp
mov
and
lea
push
sbb
sbb
ret
jge
mov
adc
xor
lahf
(bad)
cmps
mov
pop
fdivr
sti
mov
jne
sub
out
dec
test
xchg
dec
inc
pop
adc
jmp
imul
sbb
cmp
adc
shl
mov
and
fst
add
out
and
sahf
adc
mov
or
fcomp
call
cwde
ret
sbb
adc
push
div
test
push
fld
fistp
xchg
jmp
popf
retf
add
sub
inc
sbb
or
jl
in
xchg
stos
cmp
fwait
push
xchg
fdivr
shr
push
ret
into
scas
fistp
daa
pop
sbb
sar
pop
xchg
push
adc
cmp
cmp
and
push
or
les
or
add
leave
xchg
fldl2t
mov
fs
xchg
xchg
lahf
(bad)
fdivr
pop
fdivr
sti
stc
sahf
mov
inc
mov
or
sbb
rol
mov
popf
in
mov
fiadd
call
clc
call
cmp
pop
into
pop
lds
push
inc
adc
sbb
mov
test
mov
cdq
leave
iret
inc
sub
imul
les
sbb
outs
jno
and
sbb
xor
pusha
cmps
lods
mov
mov
xchg
test
dec
mov
adc
inc
scas
add
imul
xchg
adc
test
lods
inc
sbb
cs
fdiv
in
jns
lahf
xchg
mov
in
(bad)
rcr
icebp
inc
sar
clc
xor
xor
addr16
and
or
mov
pop
imul
inc
sbb
test
inc
clc
hlt
pop
mov
loope
and
adc
test
js
adc
sub
movs
jne
pop
adc
test
adc
aas
xchg
pop
sahf
inc
call
xor
stos
into
sbb
scas
or
xchg
iret
sbb
or
(bad)
movlps
sar
int
sbb
mov
inc
mov
mov
mov
mov
aaa
fstp
mov
sbb
mov
js
arpl
pop
sub
inc
sbb
or
(bad)
cmp
pop
inc
push
mov
lods
mov
mov
fst
pop
mov
arpl
dec
jg
call
sbb
scas
xchg
outs
xchg
cwde
les
cmp
aad
add
(bad)
jp
pop
jb
and
int
or
push
repz
xchg
mov
push
fst
stos
xor
(bad)
push
out
adc
inc
add
imul
hlt
or
les
cmp
push
sub
cmp
sbb
mov
movs
cdq
aam
pop
les
movs
pop
in
aaa
call
arpl
adc
jmp
sahf
jb
lock
enter
lock
cmp
adc
mov
sbb
cmp
retf
stc
and
neg
(bad)
xlat
stos
push
test
clc
cs
mov
jge
dec
retf
fucomp
cld
std
mov
mov
popf
aad
push
mov
test
and
xchg
push
xchg
mov
add
dec
mov
mov
test
xchg
enter
addr16
pop
retf
jnp
sbb
jo
std
nop
xchg
ds
cwde
int3
dec
out
arpl
or
stc
dec
sar
dec
out
fadd
rcl
in
xchg
and
push
fild
push
into
inc
(bad)
stos
cmp
dec
mov
sbb
shl
and
mov
retf
mov
(bad)
push
adc
dec
out
mov
sbb
int
jg
pop
adc
call
cmp
stc
retf
push
jae
mov
mov
jns
(bad)
pop
xor
add
adc
mov
scas
fld
inc
das
jno
dec
lods
aad
inc
mov
pop
mov
jl
test
repnz
neg
dec
pop
call
mov
shl
or
imul
nop
xor
lods
mov
ret
call
xlat
std
push
mov
sbb
stc
and
dec
popa
push
add
enter
jb
dec
fmul
dec
aam
jns
dec
adc
out
inc
jge
imul
inc
popf
fld
xchg
call
out
cdq
out
clc
jle
or
dec
push
xchg
inc
inc
(bad)
dec
xchg
lea
pop
and
adc
or
outs
mov
call
adc
sbb
mov
mul
sbb
add
and
mov
lock
dec
inc
nop
aas
and
or
sahf
nop
xlat
stos
dec
sahf
sti
jl
test
pop
sbb
jp
sub
fucomp
jae
jns
xchg
dec
popf
retf
aad
test
mov
and
pop
leave
scas
xchg
stos
mov
stos
xchg
push
adc
add
jmp
pop
fld
fnstsw
mov
bswap
js
popf
push
fcom
fdivr
and
sub
or
xchg
adc
adc
mov
ror
sbb
xor
adc
mov
icebp
imul
mov
cmps
lock
(bad)
xlat
push
fild
movs
xor
bound
mov
hlt
je
popf
jle
mov
pop
ficom
dec
sbb
push
test
call
inc
sbb
test
xlat
pop
adc
or
mov
mov
jl
cdq
jl
lock
push
adc
popa
push
sbb
fs
dec
and
sahf
lods
retf
fsubr
mov
xchg
leave
jl
scas
mov
jecxz
mov
fld
mov
nop
sbb
pusha
add
dec
(bad)
mov
fisubr
lahf
or
mov
mov
mov
inc
sub
jecxz
clc
mov
jno
aad
(bad)
cwde
es
repnz
push
mov
fsubr
pop
add
rcr
sub
in
enter
xchg
sahf
data16
inc
jmp
inc
cwde
dec
int
push
fidivr
cmc
imul
push
mov
bswap
int
mov
mov
data16
rcl
inc
add
mov
jmp
bound
jb
sub
rcr
pop
push
mov
jno
pop
xchg
add
aam
popf
jl
out
fisub
add
push
enter
jae
mov
cdq
jl
cdq
nop
lock
aad
pushf
ret
pop
fidiv
dec
mov
mov
mov
stos
mov
ja
and
sti
sahf
inc
mov
mov
jae
cmp
sub
popf
retf
add
sub
inc
sbb
or
in
xor
xchg
stos
std
mov
and
pop
cwde
fnstcw
xor
scas
(bad)
fs
loope
fnstsw
or
fidiv
sbb
jge
sub
(bad)
adc
sub
push
inc
push
mov
mov
push
fidivr
and
mov
(bad)
sbb
stc
jle
or
enter
push
adc
add
mov
cmp
sar
sbb
xlat
adc
xor
and
mov
mov
fstp
adc
fist
jge
out
xchg
dec
sbb
jns
sahf
rcr
sbb
fiadd
mov
mov
sbb
dec
and
pop
stos
push
outs
jno
hlt
dec
sbb
push
mov
(bad)
stc
pop
push
lods
mov
mov
xchg
test
dec
mov
xor
leave
loop
mov
outs
les
mov
jns
sahf
fisttp
xor
(bad)
icebp
ret
bound
cmp
fwait
leave
loop
jnp
or
mov
sub
xchg
sub
nop
pop
sub
sbb
xchg
adc
data16
push
fidivr
cmp
or
ret
mov
or
hlt
call
jne
cmps
enter
out
pop
fwait
loop
dec
loope
test
dec
in
cmc
clc
jnp
popf
xchg
push
adc
cmp
inc
pop
inc
inc
mov
and
jmp
mov
or
sti
pop
es
or
sahf
rol
add
aad
hlt
rol
xchg
add
fsubr
frstor
push
test
retf
jmp
or
mov
cli
push
jae
fistp
dec
retf
inc
ret
pop
sub
inc
sbb
or
(bad)
cmp
scas
retf
push
mov
jne
pushf
adc
pop
lods
jg
outs
inc
sbb
ss
cli
rol
popf
scas
inc
and
icebp
and
cmp
int3
add
add
fdiv
rcl
data16
push
mov
dec
push
push
sbb
mov
sti
inc
es
mov
mov
shr
or
push
ds
xchg
push
hlt
cwde
movs
popf
jecxz
retf
cdq
jns
pop
test
test
je
in
inc
jne
ret
pop
cmc
fidiv
cmp
fist
add
fimul
jae
jecxz
xchg
mov
mov
dec
and
mov
mov
cmp
cwde
retf
movs
dec
sbb
xlat
pop
sbb
test
clc
test
sbb
xchg
into
retf
fucomp
cld
std
scas
fidiv
pop
fwait
xchg
test
inc
mov
or
call
std
clc
pop
add
adc
mov
cmp
scas
dec
lods
jp
aaa
pop
push
xchg
bnd
pusha
xchg
fbstp
jmp
rep
add
push
aam
add
cmp
rcl
jecxz
mov
rcr
cli
mov
and
push
mov
call
inc
vpor
mov
sub
mov
fcomp
add
and
hlt
sub
push
dec
mov
adc
scas
int3
fwait
jns
scas
push
jmp
pop
in
mov
mov
or
xor
cdq
adc
jecxz
sbb
or
sub
test
push
pop
imul
mov
pop
mov
dec
pop
test
mov
fild
jne
fld
arpl
adc
xchg
dec
inc
shl
or
addr16
outs
xchg
dec
(bad)
jl
fist
test
popf
adc
dec
movs
jae
ins
(bad)
fucomi
sbb
push
cli
xchg
and
jb
adc
mov
jae
or
cmp
rol
xchg
inc
and
aas
mov
mov
and
(bad)
xchg
pop
push
xabort
mov
(bad)
psraw
inc
rol
xor
jge
test
enter
or
out
enter
mov
movs
jne
imul
pop
mov
push
ds
fdivr
aas
push
cmc
cmp
mov
ret
pop
pop
xor
sub
cmp
pushf
int
call
cmps
mov
loop
add
mov
mov
rcl
pop
push
push
test
pop
sbb
test
dec
fucomp
jae
jns
(bad)
dec
popf
retf
fist
les
sbb
inc
sbb
sbb
inc
sub
ret
test
leave
imul
adc
mov
mov
iret
pop
mov
enter
jmp
pop
sub
mov
and
lea
mov
sbb
mov
clc
loopne
mov
mov
lods
inc
test
mov
dec
jno
push
std
lock
mov
int3
xor
xchg
dec
xor
adc
push
xchg
sbb
sub
fild
stos
sub
xor
dec
in
out
and
cmp
sbb
add
push
cwde
mov
mov
mov
add
lock
cwde
sub
sub
pushf
dec
and
xchg
(bad)
retf
fsubr
mov
xchg
leave
dec
ja
mov
jecxz
stos
xlat
fld
jne
cmps
xchg
push
nop
pop
xor
add
adc
xchg
ret
fist
add
sub
or
sahf
push
mov
push
pop
pop
mov
lahf
fucomp
mov
pusha
inc
loope
xchg
popf
(bad)
pop
mov
enter
out
mov
xchg
push
adc
cmp
sub
or
mov
pop
mov
xchg
pop
fs
mov
push
mov
lods
jnp
sti
ins
xchg
(bad)
cdq
aaa
dec
movs
out
nop
int3
inc
cmp
sbb
jecxz
cwde
sbb
rol
push
adc
out
cmps
and
mov
movs
push
mov
dec
adc
out
and
fsubr
in
push
dec
adc
clc
lds
mov
repnz
add
dec
popa
xchg
push
dec
sbb
mov
mov
jne
inc
xchg
movs
mov
mov
stos
mov
ja
jb
shr
inc
mov
dec
jmp
popf
retf
add
sub
inc
push
mov
mov
movs
sbb
call
or
mov
lods
inc
sbb
jmp
mov
(bad)
adc
(bad)
arpl
in
(bad)
rcr
icebp
inc
aam
clc
mov
adc
cwde
lahf
icebp
mov
lea
mov
push
popa
xchg
jmp
int
popf
pop
jo
fdivr
xor
xchg
jne
lea
xor
push
and
mov
hlt
je
and
inc
mov
sbb
jle
ror
mov
shr
mov
dec
adc
xchg
lods
ds
sbb
aas
mov
xor
imul
cwde
retf
push
sbb
dec
and
pop
stos
push
outs
jno
add
mov
in
aaa
mov
(bad)
stc
dec
fldcw
loop
cmps
xchg
test
mov
inc
cmp
jge
jp
loope
xchg
stos
inc
and
jns
mov
cdq
push
fst
push
jmp
lods
enter
shl
sbb
xchg
outs
xchg
mov
clc
xor
adc
push
fsub
inc
les
cmp
adc
or
fwait
cmps
fsub
sbb
xchg
int3
mov
jb
xchg
call
gs
in
adc
add
mov
es
pop
loope
jb
lea
lods
data16
mov
fstp
call
(bad)
test
sbb
(bad)
adc
jne
sub
lods
inc
sbb
jle
lock
push
sbb
and
stos
daa
sbb
add
nop
repz
fsubr
fnstsw
push
test
retf
add
cmp
mov
pop
(bad)
jae
fistp
movs
retf
(bad)
test
sbb
jae
sbb
das
sbb
adc
fnsave
std
call
sti
push
retf
pop
pop
adc
cld
arpl
fcmovnu
popf
fsubr
loop
jl
nop
xchg
push
push
mov
clc
js
shl
xchg
add
pop
ss
mov
int
js
fcom
dec
inc
ins
xchg
popf
aad
aas
mov
mov
fmul
cmp
fdiv
cdq
push
adc
fadd
adc
add
xchg
nop
sub
and
dec
mov
or
stos
cmp
adc
int3
inc
pop
movs
or
ret
pop
jae
pop
mov
dec
lahf
retf
ins
mov
mov
enter
push
mov
pop
mov
mov
jmp
dec
sbb
xlat
pop
sbb
test
clc
sub
sbb
xchg
mov
fucomp
cld
std
mov
in
mov
pop
xor
cdq
nop
cmp
or
imul
mov
xchg
jmp
in
sar
fcom
aaa
jge
dec
(bad)
jmp
fwait
push
adc
sub
push
cwde
les
adc
sub
cmp
xchg
push
and
inc
adc
mov
mov
xchg
dec
fsubr
jo
call
(bad)
cmps
enter
ins
popf
lahf
push
and
pushf
and
jmp
mov
mov
loope
mov
aam
movs
adc
fst
imul
imul
(bad)
push
push
mov
add
(bad)
mov
adc
or
scas
(bad)
push
pop
imul
retf
fld
mov
and
mov
imul
jge
fld
mov
stos
dec
jl
aas
xor
add
outs
icebp
pop
scas
xchg
stos
mov
outs
les
fcom
mov
pop
icebp
mov
cmp
mov
aad
fstp
xlat
pop
bswap
js
popf
push
fcom
pushf
jae
sub
push
or
cmp
mov
adc
mov
aad
outs
mov
mov
mov
push
(bad)
sti
cmp
fdivr
sti
mov
ret
mov
or
movs
leave
sbb
aaa
inc
in
int
cmp
jne
pop
mov
lea
add
les
inc
cmp
or
dec
pop
ret
repz
sbb
and
lahf
retf
jecxz
gs
mov
pop
sub
sbb
mov
cmps
mov
loop
cli
ror
movs
mov
mov
sbb
sahf
cmp
push
test
pop
sbb
lea
scas
mov
jns
mov
or
sbb
push
sbb
ret
add
add
call
sti
imul
into
mov
icebp
call
xor
cwde
es
repnz
add
(bad)
pushf
imul
mov
add
mov
inc
or
jle
nop
add
mov
sbb
test
sbb
imul
xor
fiadd
cmp
clc
les
movs
inc
(bad)
popa
sbb
cmps
hlt
js
xor
sbb
enter
dec
cmp
sub
xchg
lea
fiadd
cmp
sub
and
mov
sub
jns
int
mov
and
mov
fisttp
sbb
or
sbb
sub
scas
neg
enter
fsubr
stos
stos
mov
sbb
scas
mov
cmp
mov
sti
xor
push
cmp
sar
test
sbb
jno
or
xadd
xchg
stos
cmp
or
icebp
mov
jns
enter
(bad)
icebp
fnstenv
push
loope
fistp
or
fdivr
and
je
inc
mov
aam
es
push
test
or
sub
or
fcmovnu
popf
shr
mov
inc
jae
inc
mov
ds
mov
jl
cmp
mov
or
test
cmp
das
in
cmc
mov
movs
xor
add
inc
inc
add
xor
mov
repz
sti
dec
push
ret
jecxz
and
sub
pop
sub
dec
popa
cdq
or
ds
fdiv
jo
movs
mov
mov
stos
mov
ja
inc
test
test
inc
mov
ror
cmp
mov
lds
mov
xchg
push
fist
sbb
or
imul
pushf
sub
mov
rol
mov
(bad)
icebp
ret
bound
sub
(bad)
stc
leave
cwde
mov
mov
or
adc
xchg
jmp
pop
ret
xchg
sub
cmp
pop
mov
push
pop
push
jp
xchg
fimul
test
pop
test
pop
push
pop
(bad)
jmp
iret
push
adc
inc
jecxz
mov
sbb
retf
cmp
in
jne
dec
mov
pop
dec
pop
jbe
movs
or
pop
mov
daa
pop
mov
fucomip
jl
xchg
inc
mov
sub
mov
rcr
ss
aas
or
dec
popf
fwait
imul
xchg
dec
and
pop
stos
push
outs
jno
push
dec
sbb
fild
xor
int3
lods
shl
fnstenv
cmc
sahf
and
pop
repz
jae
stos
(bad)
inc
rol
cmps
fist
cld
movs
or
sbb
imul
sbb
mov
jno
in
fnstsw
push
fcom
jo
adc
dec
or
mov
in
dec
test
dec
dec
(bad)
cmp
xor
enter
cmp
push
popf
mov
jnp
sbb
(bad)
xor
jne
test
in
push
add
sbb
or
je
add
mov
sub
and
xor
pop
cmp
sahf
push
(bad)
mov
test
sti
mov
jecxz
(bad)
push
sbb
add
adc
sbb
add
popf
cmp
fsubr
fnstsw
push
test
retf
shr
aaa
stos
ror
stos
mov
pop
(bad)
cs
push
or
into
or
scas
xchg
push
pop
xchg
cmp
rol
cmps
int
fcomp
retf
mov
cmp
scas
push
jg
(bad)
je
cmps
(bad)
fwait
add
mov
add
cmp
in
pusha
push
or
dec
repz
pop
inc
test
or
nop
dec
repnz
and
popf
out
movs
push
adc
or
inc
popf
bound
fdivr
(bad)
es
lods
sti
xor
jl
cmps
(bad)
adc
aam
dec
(bad)
xchg
dec
add
mov
mov
cdq
jns
jb
cs
adc
gs
sub
adc
push
mov
loopne
out
movs
jp
jmp
aas
pop
mov
lahf
retf
ins
mov
retf
mov
pop
xor
mov
and
shl
cmps
mov
neg
mov
retf
movs
dec
sbb
xlat
pop
sbb
test
clc
mov
pop
mov
ds
pop
int3
jmp
rcl
arpl
jo
test
sbb
xor
cmp
arpl
cmps
add
(bad)
pop
xor
xlat
fistp
push
pop
cmps
push
jg
mov
enter
out
xchg
dec
rcr
les
jmp
inc
mov
dec
mov
(bad)
mov
sbb
adc
fldenv
ins
in
imul
cmps
fcomp
aaa
jo
dec
(bad)
push
ins
ret
inc
mov
lea
or
push
push
push
dec
mov
ret
(bad)
inc
js
or
retf
add
or
pop
stos
pop
lods
cdq
ret
pop
xchg
dec
cmp
mov
dec
pop
sti
mov
es
mov
adc
xchg
or
sub
sbb
cdq
xchg
dec
pushf
dec
lods
aad
push
retf
fldenv
sbb
xchg
sti
(bad)
stc
jl
ret
jne
popf
retf
arpl
xor
mov
inc
movs
out
xchg
adc
add
sub
xchg
leave
imul
sbb
dec
lods
jp
sbb
dec
mov
leave
cmc
and
and
clc
xor
mov
sub
push
mov
sbb
mov
inc
ins
fwait
popf
aad
dec
mov
inc
pop
(bad)
fdivr
sbb
test
iret
in
shl
or
rcl
add
push
lahf
test
push
popf
push
daa
dec
mov
mov
xchg
call
fldenv
ret
loopne
dec
pop
add
repz
sbb
mov
aaa
gs
mov
mov
sbb
mov
mov
loop
rcl
mov
sub
sahf
sbb
xchg
push
bnd
loop
jns
(bad)
lahf
sti
mov
cmps
fld
jmp
pop
xchg
push
xchg
dec
mov
sub
dec
jno
movs
sbb
push
scas
sahf
push
mov
push
pop
pop
cld
inc
jecxz
test
adc
(bad)
retf
push
xchg
inc
fyl2xp1
mov
iret
scas
push
jmp
pop
push
mov
inc
shl
inc
inc
cmp
mov
or
test
aad
inc
stos
adc
fidivr
jp
call
mov
fwait
fwait
(bad)
xchg
call
bt
pop
cwde
imul
cmp
add
mov
cwde
sbb
xor
inc
adc
dec
mov
mov
stos
shr
push
(bad)
sbb
mov
sbb
iret
fcomip
jns
stc
mov
sub
jbe
cmc
mov
mov
add
cld
push
cwde
sub
stos
cmp
lea
xchg
scas
push
mov
retf
sahf
test
jmp
sti
in
je
std
push
pop
sub
les
cmp
adc
lock
mov
sub
popf
movs
call
dec
pop
cld
pop
jecxz
stos
fld
mov
loope
js
enter
lahf
jnp
and
cwde
add
arpl
or
repnz
sub
mov
push
das
test
or
push
fisub
jns
fdivr
stos
xor
sub
jno
jb
sbb
lock
cmp
je
test
inc
pushf
cmp
inc
push
es
mov
jne
dec
sahf
push
sub
mov
(bad)
repz
xchg
loopne
mov
repz
sti
dec
push
add
jecxz
and
lods
sub
dec
popa
call
mov
mov
fdiv
pop
dec
movs
mov
rcr
mov
test
sub
inc
lahf
retf
sub
xor
(bad)
pop
mov
xchg
test
and
div
(bad)
mov
fsubr
loope
xchg
stos
inc
and
jns
mov
mov
mov
push
mov
fcmovnb
pop
mov
sahf
sbb
mov
loop
and
add
pop
lahf
cmp
adc
mov
xor
jg
test
mov
push
clc
rcl
movs
inc
inc
(bad)
das
shr
pop
xchg
call
(bad)
cdq
(bad)
jmp
and
daa
je
clc
xchg
sub
add
add
sub
mov
fsubr
mov
sbb
dec
mov
inc
or
daa
inc
pop
mov
daa
pop
xchg
mov
lahf
aam
sbb
mov
retf
mov
sub
fidiv
cwde
retf
inc
sbb
xchg
jmp
les
jno
inc
in
dec
sbb
shr
fild
jmp
retf
pop
in
cwde
xchg
sbb
cmp
daa
or
pop
adc
fnsave
push
add
pop
cdq
stc
add
pop
bound
lahf
ficom
fstp
adc
and
cmp
dec
mov
sub
les
xchg
sub
xor
xchg
sahf
cmps
(bad)
mov
jb
sar
frstor
jne
(bad)
(bad)
ud1
call
hlt
pop
das
test
jns
pop
or
sbb
imul
sahf
dec
sub
fwait
out
into
pop
mov
xor
mov
add
cmc
js
clc
sti
mov
jecxz
(bad)
push
sbb
and
adc
sbb
add
xchg
push
leave
fsubr
(bad)
aad
imul
mov
sub
int
pop
cmp
mov
popf
adc
fcom
sbb
fst
pop
pop
add
stc
push
mov
xor
adc
sbb
inc
push
or
pop
ja
div
mov
fdivr
and
cmp
lods
outs
repz
daa
sbb
(bad)
cmp
retf
xchg
sub
sub
mov
mov
jmp
jae
sahf
mov
pop
inc
mov
jb
stc
mov
les
mov
popf
es
sbb
adc
mov
int
jle
sub
mov
xor
inc
call
adc
adc
and
fucomip
repz
pop
xchg
mov
push
mov
pop
xor
mov
and
add
dec
mov
dec
inc
scas
cmp
jnp
inc
adc
sub
adc
test
push
in
dec
pop
xchg
or
mov
rcr
into
xchg
sbb
mov
add
icebp
pop
scas
xchg
stos
mov
outs
shl
mov
mov
jge
popa
push
pop
gs
sbb
push
mov
jmp
push
xchg
out
mov
sub
iret
xor
mov
les
jge
dec
dec
(bad)
cmp
xchg
cmc
mov
xchg
shl
push
mov
sti
jp
cmp
mov
lock
add
inc
sbb
inc
adc
or
mov
pop
push
mov
and
add
mov
and
mov
test
(bad)
mov
adc
and
add
fwait
bound
dec
inc
cmp
sbb
adc
sub
test
push
mov
aaa
mov
sub
jmp
rcr
aad
cmp
retf
ret
rcr
inc
push
jmp
sbb
pop
jae
adc
(bad)
and
mov
scas
pop
mov
in
mov
cmc
lahf
loope
ror
or
sbb
inc
icebp
gs
pop
inc
test
and
into
test
inc
push
fidivr
gs
mov
xor
outs
aas
adc
(bad)
dec
xchg
out
ins
push
out
add
adc
inc
test
test
je
add
pop
sbb
mov
in
repz
ret
loopne
dec
pop
inc
(bad)
jmp
clc
sbb
and
retf
jecxz
gs
nop
enter
int
pusha
mov
sbb
mov
(bad)
aam
xchg
sbb
lds
pop
stos
mov
repnz
cdq
jo
shr
pusha
in
mov
lahf
repnz
jno
dec
inc
sub
inc
sbb
jno
add
inc
cmp
ins
mov
out
test
sub
pusha
jnp
mov
icebp
fst
sbb
or
xchg
pop
sbb
and
xor
adc
adc
mul
rcr
mov
adc
xlat
cdq
call
inc
in
in
jl
jmp
xlat
sbb
xchg
push
and
pusha
xor
xor
(bad)
shr
inc
cdq
sbb
mov
jmp
adc
adc
mov
das
push
sub
mov
jnp
iret
fcomip
jns
dec
mov
add
(bad)
mov
sbb
sbb
or
push
jno
jl
adc
ret
sbb
xlat
stos
mov
xchg
mov
fs
clc
sub
shl
inc
mov
ja
fs
mov
mov
jae
aam
iret
scas
dec
mov
pop
adc
add
inc
stos
int
or
inc
add
pushf
mov
lods
jle
mov
sbb
cs
jnp
in
mov
ror
sbb
push
pop
es
or
sar
clc
xor
mov
mov
xor
adc
je
xchg
out
fmul
xor
cwde
push
gs
jl
imul
gs
inc
adc
sub
loopne
sbb
or
int
imul
push
sub
adc
sbb
repz
fsub
(bad)
mov
repz
sti
dec
push
inc
lahf
retf
jecxz
and
test
add
rol
fwait
add
cmp
pop
and
sbb
les
shr
jmp
js
leave
cdq
test
fwait
into
push
or
into
sbb
test
imul
rcr
cwde
pop
or
shl
adc
enter
pop
js
pop
fsub
inc
cwde
sbb
icebp
in
loop
in
nop
xchg
mov
arpl
(bad)
xchg
imul
les
mov
add
xchg
or
pop
cmps
fld
fdivr
cli
xor
rcr
sbb
(bad)
mov
scas
aas
mov
cld
xor
mov
cwde
clc
jp
enter
shr
ror
das
fisubr
pop
dec
lea
sahf
dec
sub
test
mov
add
mov
gs
mov
xlat
clc
sti
mov
jecxz
mov
or
dec
adc
lods
inc
sbb
retf
movs
dec
(bad)
rcr
sbb
xchg
stos
push
test
xlat
test
pop
movs
jmp
pushf
push
(bad)
stc
jo
popf
xchg
rcl
arpl
lock
mov
test
idiv
xchg
fist
fadd
test
pop
pushf
and
adc
(bad)
ja
push
push
fist
(bad)
mov
(bad)
stc
and
imul
or
xchg
aaa
call
cmp
pop
xor
fcomp
push
fdivr
jp
mov
xor
jnp
out
js
fdivr
inc
xchg
int3
pop
sub
push
adc
sbb
mov
int
jle
jnp
mov
xor
inc
call
adc
cmp
mov
aas
pop
lea
lahf
retf
hlt
mov
shr
in
stos
shl
adc
lods
rol
(bad)
sbb
or
and
lds
jnp
jmp
lahf
fwait
in
mov
popf
retf
arpl
mov
lock
sbb
ss
sbb
retf
rol
cmps
int3
test
jp
sbb
mov
xor
out
iret
and
ja
push
pop
xlat
fcomp
sti
and
(bad)
or
dec
adc
jmp
je
adc
repnz
and
inc
test
ss
lds
mov
or
xlat
lea
xchg
mov
mov
dec
sbb
sbb
inc
add
inc
adc
loop
mov
or
es
dec
mov
into
pop
stos
pop
lods
test
mov
adc
mov
jb
sti
mov
pusha
sbb
inc
lods
mov
pop
repnz
sbb
cmp
cmps
mov
arpl
sbb
xlat
stos
dec
push
adc
ret
call
jge
mov
fld
leave
js
(bad)
xor
test
rcr
lds
lds
lock
dec
mov
retf
jns
push
fld
sahf
dec
jno
ret
cli
scas
adc
inc
mov
fadd
and
ds
jge
mov
sub
into
mov
sbb
test
cdq
xor
cmps
xchg
sub
movd
lahf
pop
xchg
pop
jnp
cmp
enter
loop
push
sub
dec
push
or
fidiv
cmp
jb
idiv
gs
cwde
mov
pop
ret
out
repz
ds
mov
adc
nop
fimul
dec
push
lock
shl
or
mov
pop
and
test
dec
and
leave
pop
inc
add
retf
fwait
sbb
lahf
shl
mov
jmp
fnsetpm(287
leave
je
ret
cmp
cs
xchg
into
test
cmp
dec
inc
pop
cdq
xchg
stos
(bad)
stos
(bad)
stos
mov
mov
fcom
jge
scas
stc
retf
retf
in
jmp
(bad)
std
stc
loope
lds
inc
sbb
js
das
jl
dec
inc
cmp
pop
inc
aam
mov
add
dec
sub
test
mov
add
pop
retf
fwait
xor
xchg
mov
mov
std
jge
xor
call
pusha
ds
jecxz
mov
shr
inc
cdq
stc
pop
mov
jmp
adc
jb
mov
xchg
pop
stos
shr
push
test
mov
jle
iret
ffreep
jns
sbb
hlt
mov
jp
cdq
dec
bswap
jae
sbb
in
jns
imul
jno
jns
and
movs
mov
and
pop
push
test
ret
dec
sbb
add
mov
fnsave
(bad)
push
mov
nop
sbb
or
jnp
lock
xchg
adc
mov
(bad)
mov
mov
add
adc
dec
and
mov
das
pop
icebp
sbb
cmp
jl
sbb
inc
fiadd
mov
dec
jb
add
test
lods
adc
mov
or
les
xchg
out
aam
mov
clc
mov
daa
popf
jecxz
lahf
(bad)
cmps
mov
fwait
lea
pop
xchg
bound
out
adc
movntps
(bad)
push
or
int
imul
push
sub
mov
xor
repz
int
(bad)
mov
and
cmp
inc
jns
xchg
rcr
mov
shr
dec
or
sub
adc
cwde
retf
pop
(bad)
shl
imul
mov
lods
pop
shr
fild
loop
jno
(bad)
pop
sti
in
and
ret
sbb
cld
mov
in
movs
jmp
fimul
mov
(bad)
jl
pop
call
test
add
fs
xor
test
test
adc
mov
ror
js
aad
stc
(bad)
js
pop
icebp
or
and
add
js
dec
pop
mov
jl
cmp
(bad)
cmp
in
jne
push
mov
sub
push
dec
repnz
mov
mov
enter
mov
sbb
in
shl
dec
adc
call
pop
mov
imul
inc
mov
xor
ds
push
inc
sar
push
gs
adc
adc
jp
mov
jo
fsubr
popa
(bad)
stos
icebp
ss
lds
mov
iret
sub
int
inc
cmp
scas
stc
cmps
pop
sub
les
inc
or
cmp
add
loop
and
pop
cdq
fmul
cmp
lods
ret
or
inc
enter
jmp
inc
sub
inc
cmp
fstp
and
mov
mov
sar
test
movs
inc
sbb
cmps
ret
out
ret
add
mov
inc
cwde
pop
cmc
xchg
enter
add
out
mov
imul
sahf
dec
sub
(bad)
mov
pop
sub
mov
and
lds
xchg
fist
add
fisubr
sbb
enter
add
rcr
jo
iret
cmps
mov
adc
push
lock
ss
repnz
scas
pusha
adc
test
push
cmc
mov
(bad)
jmp
retf
mov
cmp
or
leave
or
movs
adc
sbb
sahf
pop
(bad)
xor
adc
cmps
dec
jo
jge
or
pop
cmp
inc
(bad)
pushf
imul
mov
sbb
lahf
or
sbb
mov
(bad)
cmp
clc
or
xchg
xchg
lods
mov
xchg
mov
outs
inc
and
call
cmp
test
sbb
xchg
lods
mov
sub
mov
inc
jmp
mov
shl
mov
shr
repz
adc
adc
fbld
jle
or
test
mov
pop
push
add
fcomip
(bad)
mov
mov
popa
nop
adc
or
xor
pushf
call
push
adc
test
push
nop
rcl
rcl
mov
push
cmc
mov
ficomp
call
fdivr
mov
xchg
fcom
lds
add
mov
out
test
mov
mov
test
inc
mov
fst
fwait
enter
retf
push
xchg
sbb
jnp
xchg
jg
or
xor
and
mov
inc
daa
adc
hlt
dec
(bad)
cmp
std
and
inc
sti
push
je
mov
out
xor
gs
cmps
ret
fincstp
clc
in
lea
cs
mov
enter
sbb
add
inc
adc
jl
mov
or
movs
fstp
mov
pop
stos
les
add
int
(bad)
movs
push
mov
in
cdq
fisttp
pop
cmp
sbb
aas
call
aad
or
ret
xchg
sbb
sbb
jbe
pop
stos
mov
repnz
push
in
dec
ss
call
xchg
mov
xchg
add
sbb
adc
xor
setne
ss
cmp
mov
xor
jecxz
popf
cmps
(bad)
jno
pusha
lahf
adc
test
sub
sbb
jo
js
adc
or
xchg
adc
es
dec
mov
mov
dec
mov
test
xchg
sti
jle
mov
lahf
(bad)
pop
xchg
aas
imul
jl
dec
das
enter
loop
lds
xchg
cmovno
or
cdq
cmps
mov
sub
mov
dec
mov
mov
push
add
pop
mov
xor
in
daa
ja
clc
rol
mov
mov
inc
sbb
mov
xchg
or
aam
call
inc
xchg
sub
mov
stos
mov
xchg
mov
pusha
push
cld
sub
aaa
mov
jnp
frstor
imul
lahf
repnz
add
sub
cdq
retf
mov
mov
dec
movs
xchg
mov
add
cmp
xor
fdiv
jecxz
popf
movs
jg
cli
in
(bad)
cli
mov
retf
ror
and
push
ret
add
or
jb
jmp
std
xchg
pop
adc
xchg
jp
(bad)
aaa
test
sub
mov
out
mov
std
jge
and
aam
mov
int3
pusha
ds
movs
jecxz
mov
shr
inc
cdq
pop
cmp
inc
cmps
dec
mov
rcr
sti
aam
jo
xor
and
out
daa
push
adc
adc
movs
lds
jg
ret
sbb
inc
pop
call
jg
sbb
dec
and
sbb
bnd
xchg
(bad)
jnp
ror
icebp
fnstenv
fisttp
mov
test
or
cmp
call
xlat
les
pop
or
pop
mov
leave
jns
(bad)
fld
push
leave
pop
call
cs
xor
mov
js
xchg
adc
dec
adc
leave
pop
outs
rcl
pinsrw
fild
mov
inc
cwde
dec
lods
push
std
pop
movs
ret
fdiv
dec
mov
lahf
(bad)
cmps
mov
fwait
lea
mov
inc
adc
sub
out
push
or
int
imul
gs
sbb
mov
int
cmp
mov
(bad)
mov
jns
ds
es
push
mov
lock
pop
mov
or
mov
adc
stos
inc
stos
fst
mov
cwde
retf
movs
dec
(bad)
rcr
mov
jge
les
cmps
xor
ins
fdivrp
mov
ja
adc
fistp
ret
push
sbb
inc
cld
cmc
mov
push
or
gs
add
cmp
les
fist
movs
xchg
icebp
dec
aad
mov
fst
cmp
int3
xchg
and
stc
add
fyl2x
xor
inc
stos
adc
inc
mov
or
jnp
xor
push
dec
and
xor
test
ins
std
aas
movs
inc
sbb
cmps
ret
out
mov
aas
mov
push
xor
mov
cwde
cmp
enter
inc
dec
or
mov
dec
mov
ret
into
inc
(bad)
xlat
xor
pop
arpl
(bad)
aad
mov
loopne
ror
aaa
sar
lahf
retf
or
add
test
neg
frstor
sub
dec
rol
(bad)
sbb
rcr
sbb
les
icebp
or
adc
shl
mov
lods
xchg
(bad)
jno
mov
shl
mov
or
cmp
jl
add
mov
jge
jb
sbb
pop
sub
fsub
jp
fbstp
arpl
retf
sub
js
or
rcr
mov
inc
cmps
pop
xchg
in
mov
sub
test
inc
call
mov
test
sbb
fwait
repz
add
int
jle
sbb
cmp
fst
add
mov
imul
and
mov
dec
cmp
imul
jnp
or
cdq
push
lock
cmp
cmps
mov
arpl
sbb
ror
test
pop
stos
xor
ficomp
lods
add
xor
(bad)
pop
std
mov
push
jle
fstp
dec
pop
xchg
sbb
add
xchg
call
ja
mov
mov
test
stos
lods
ret
pop
cld
pop
addr16
cmp
je
add
jl
int3
xor
mov
in
pop
popa
sbb
in
mov
rol
xchg
jle
xor
mov
fmul
adc
lds
push
out
xor
int
in
jmp
clc
rol
inc
cmps
fnstsw
mov
call
inc
sbb
pop
add
push
adc
enter
je
mov
pop
adc
call
push
sahf
pop
imul
push
das
jmp
clc
add
(bad)
sbb
in
cmp
imul
inc
add
add
jbe
and
test
jp
js
stc
mov
cmp
test
pop
xor
xchg
fild
repz
jge
outs
scas
add
(bad)
mov
inc
push
sbb
xchg
pop
sub
adc
sub
jns
mov
push
xlat
cwde
adc
lahf
xor
sti
iret
js
jle
xor
int
xchg
sub
js
es
dec
pusha
sar
(bad)
sub
push
mov
int3
(bad)
mov
in
xchg
mov
lahf
(bad)
pop
xchg
sahf
fs
fwait
jl
lea
bound
add
cmps
sub
sub
dec
push
or
ret
push
int
mov
xchg
xchg
fisttp
pop
pand
inc
sahf
dec
jns
cmp
jno
(bad)
iret
sbb
daa
dec
cmp
rcr
jae
sbb
in
jns
repnz
jno
jns
(bad)
shl
push
dec
(bad)
push
and
ror
(bad)
push
inc
cmp
cs
add
or
mov
sbb
retf
or
call
fimul
mov
aad
jp
fcomp
shl
jecxz
sahf
sahf
xchg
jl
js
jp
mov
mov
gs
pop
aaa
cwde
fcomp
and
mov
mov
and
xchg
jp
int3
mov
push
sub
cmp
cmp
call
cmps
inc
cdq
xlat
call
int3
pusha
ds
jecxz
mov
sub
cmps
mov
das
out
cmc
mov
nop
imul
dec
shr
ins
jmp
(bad)
mov
bound
mov
sbb
push
sar
rol
dec
pusha
xchg
ret
mov
test
jno
pop
and
add
cmp
add
ret
int3
sub
in
mov
(bad)
jmp
inc
imul
arpl
imul
mov
sbb
adc
xor
and
xchg
mov
out
mul
cli
in
(bad)
pop
call
jl
xor
in
jnp
out
repz
xchg
pop
xchg
fcompp
adc
xor
xchg
add
ins
(bad)
mov
fild
mov
inc
cwde
dec
lods
push
out
movs
ret
fmul
cmps
mov
lahf
(bad)
cmps
mov
fwait
lea
push
int3
bound
out
adc
sub
push
pop
add
or
xchg
pop
cmp
test
ror
pop
sub
xlat
jg
pop
mov
cmp
cmps
ja
fadd
div
lds
jg
ret
sbb
inc
pop
mov
ins
xchg
ret
leave
call
retf
imul
nop
adc
lods
stc
cmp
test
leave
lods
test
dec
jge
mov
cmp
xchg
(bad)
data16
push
ret
cld
dec
adc
add
sbb
pushf
inc
push
xor
and
xchg
mov
cld
enter
daa
mov
fdivr
and
mov
mov
and
xchg
jp
mov
test
sub
mov
out
mov
ret
fld1
std
jge
dec
cmps
inc
cdq
xlat
call
int3
add
or
jb
inc
es
adc
aaa
xor
pop
push
mov
call
mov
sub
jmp
ds
cmps
ja
iret
ror
mov
add
cmps
inc
sbb
pop
call
push
xchg
or
mov
test
push
dec
(bad)
push
and
lds
jge
push
in
mov
(bad)
mov
imul
arpl
lds
sbb
jae
mov
cmps
stos
rol
mov
ror
inc
jne
add
pop
cmps
pop
ins
ja
xor
xor
cmp
adc
lds
cmp
sbb
jns
or
or
add
inc
fsubr
fild
mov
lods
push
in
movs
ret
fadd
test
mov
(bad)
cmps
mov
fwait
lea
lahf
aam
xor
push
adc
lahf
dec
xchg
jo
mov
dec
nop
lea
lea
rcl
pop
cmp
mov
call
pop
movs
imul
lds
cmp
jecxz
(bad)
pop
mov
or
inc
cmp
push
mov
movs
ret
sbb
xchg
add
adc
mov
push
pop
xchg
push
pop
fst
lahf
dec
sbb
fcom
ffree
push
adc
pop
or
jne
mov
(bad)
stos
mov
adc
pop
pushf
jbe
xor
(bad)
aad
adc
jg
out
cmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
sub
mov
lea
(bad)
xchg
mov
push
mov
or
lahf
mov
jl
mov
(bad)
cmp
jne
jecxz
movs
sbb
test
inc
(bad)
aam
sbb
fisubr
das
pop
xlat
adc
sub
popa
pop
mov
sbb
imul
cdq
in
stc
aaa
sar
lahf
retf
or
add
test
idiv
add
movs
inc
xor
pop
xchg
xchg
adc
add
popa
xchg
aam
xor
(bad)
leave
sbb
add
sub
call
scas
dec
mov
jmp
or
fistp
jl
fidiv
mov
scas
fmul
pop
dec
xchg
adc
pop
pop
and
nop
sbb
lock
mov
xchg
cld
xchg
jb
mov
xor
inc
xor
fdecstp
js
jo
scas
inc
movs
fmul
xchg
retf
sbb
(bad)
jbe
iret
sub
push
dec
and
xor
test
ins
in
movs
inc
sbb
cmps
ret
out
repz
fwait
lea
fsub
movs
mov
daa
loop
hlt
xor
mov
loopne
mov
popf
lea
add
lahf
shl
mov
inc
arpl
fistp
pop
pop
loope
pop
(bad)
iret
ret
xlat
lea
xor
dec
cmp
imul
jo
sbb
or
sbb
cmp
stos
int
sub
dec
xor
stos
dec
sbb
ins
push
push
xchg
scas
inc
pop
aad
mov
xchg
jmp
rcr
loopne
shl
movs
jl
retf
rcl
(bad)
out
stos
add
xchg
call
pop
stos
fst
cmps
adc
loopne
jp
cmps
sbb
leave
(bad)
push
xchg
pop
mov
push
or
sar
iret
and
lea
inc
mov
cld
cmp
repz
mov
sub
mov
bswap
loope
jb
pop
fsub
shl
xchg
fmul
and
shl
shr
test
pop
movs
popf
mov
lea
fst
inc
add
dec
rcr
adc
sahf
push
arpl
jmp
clc
add
(bad)
sbb
in
xor
repnz
jl
out
addr16
xor
pop
leave
iret
inc
sbb
pop
sbb
mov
imul
les
jnp
cmp
fisubr
jns
mov
sti
cli
pusha
std
movs
dec
push
dec
pop
in
dec
(bad)
add
cmp
mov
add
or
sub
stos
jne
add
adc
xchg
xor
pop
cmp
sbb
jmp
scas
inc
fwait
(bad)
push
shl
pop
add
add
fnstenv
sbb
dec
and
je
cmp
test
out
xor
int
dec
ret
fld
clc
xor
add
sahf
aam
jl
xchg
or
fistp
push
or
out
jne
js
popa
in
mov
test
inc
jnp
adc
add
mov
jno
(bad)
iret
sbb
mov
adc
push
or
mov
imul
sbb
push
and
imul
adc
sahf
aaa
push
neg
fs
sar
pushf
in
jae
inc
fadd
cmp
sub
mov
nop
imul
rol
fcmovnu
cwde
mov
js
lds
inc
and
lahf
scas
mov
mov
call
or
adc
pusha
sar
sub
push
mov
cld
pop
mov
daa
xchg
mov
lahf
(bad)
(bad)
xchg
cdq
out
mov
sti
sti
faddp
mov
js
loopne
jecxz
mov
or
out
push
adc
mov
jmp
test
xor
mov
xchg
jne
inc
hlt
out
les
shr
loopne
mov
bound
mov
sbb
in
gs
cwde
enter
inc
ret
lock
mov
dec
test
dec
sar
mov
stos
push
pop
stos
lods
mov
sbb
(bad)
sub
stos
shl
jge
pushf
mov
sub
xchg
xchg
jl
out
retf
add
stos
std
cld
jns
sbb
xchg
mov
xchg
pop
sbb
test
mov
pusha
pop
into
xor
mov
fwait
leave
ins
xor
pop
aaa
cwde
call
es
mov
sbb
inc
and
xchg
jp
int
test
sub
mov
stos
cmp
out
aas
pop
sahf
push
dec
aad
jmp
inc
or
sbb
mov
js
or
fnstcw
fisubr
and
loopne
cmc
xor
aad
xchg
out
jbe
mov
sub
mov
add
adc
jae
mov
(bad)
xor
mov
cmp
or
imul
xchg
jecxz
sbb
jno
mov
std
cld
push
in
test
leave
pop
sbb
mov
sbb
test
cmp
jmp
fnstcw
inc
outs
cmps
sub
mov
mov
(bad)
ficomp
xchg
sbb
test
sub
sbb
scas
(bad)
in
inc
mov
mov
sub
sbb
test
or
or
add
mov
sub
lods
push
out
leave
movs
ret
fsubr
adc
push
loope
int
int
(bad)
jmp
fucomp
test
pop
hlt
pusha
inc
inc
or
cmp
fsubrp
mov
mov
dec
sbb
cs
(bad)
xor
dec
shl
movs
neg
loopne
cld
mov
shl
cmp
jae
fsub
cld
add
add
inc
pop
mov
add
imul
gs
sbb
nop
sub
push
sub
movs
leave
mov
dec
push
add
adc
mov
rcr
adc
sub
popa
pop
rcr
pop
or
xor
mov
test
mov
mov
push
adc
outs
pop
dec
outs
jmp
xor
mov
mov
popf
dec
icebp
and
push
xchg
mov
mov
adc
mov
sub
sub
out
dec
(bad)
pop
cmc
stos
popa
jne
outs
push
andnps
pop
xor
mov
push
adc
or
or
adc
mov
jbe
mov
sbb
mov
call
mov
aam
popf
pop
pop
add
out
mov
repnz
or
push
aas
repnz
mov
add
or
inc
mov
lds
popf
retf
push
in
mov
in
mov
dec
sbb
in
inc
add
test
add
cmp
or
ins
movs
mov
std
inc
jnp
push
retf
pop
test
mov
and
fcomi
js
adc
and
jb
xor
adc
sub
or
xchg
sbb
mov
xlat
xor
test
ins
xchg
stc
mov
stos
mov
sti
gs
jmp
mov
sbb
adc
add
sbb
ss
dec
inc
test
cwde
mov
icebp
retf
sbb
inc
and
cmp
jle
pop
stos
cmp
aaa
in
movs
div
pop
ds
cwde
jb
clc
bound
jecxz
ins
xchg
xlat
or
sbb
rol
sbb
inc
pop
sbb
or
sub
sub
aad
movs
dec
or
dec
mov
mov
mov
mov
pop
jne
mov
sbb
icebp
mov
xchg
sbb
or
retf
rcl
mov
scas
mov
sbb
or
cwde
push
sub
gs
lods
cmp
jmp
cmp
ins
push
dec
fxch
loop
sar
iret
and
lea
mov
call
cmps
pop
mov
jp
mov
rcr
dec
lock
fdivr
jnp
sti
inc
adc
adc
jecxz
inc
rcl
adc
test
cwde
cwde
mov
retf
sub
mov
and
in
and
xor
test
fbld
jmp
popf
cmp
jb
rol
call
mov
and
inc
dec
or
addr16
popf
(bad)
dec
and
aad
sbb
clc
push
cli
sub
fbstp
jae
stc
ins
push
call
xor
inc
cmp
adc
out
add
jo
imul
test
sbb
mov
mov
enter
mov
cmps
sbb
jmp
scas
inc
fwait
(bad)
push
shl
cli
add
add
ins
xor
mov
mov
fisub
push
call
cmp
call
xchg
pop
jmp
call
int3
pop
sub
in
hlt
mov
cmc
xchg
mov
cdq
jne
dec
mov
imul
lods
sahf
dec
mov
inc
add
pop
arpl
int
mov
pop
push
xchg
mov
call
jp
arpl
cdq
test
inc
sbb
lock
cmc
mov
jl
xor
outs
movs
ret
ins
test
iret
add
stos
jb
stos
jecxz
jne
push
and
sub
icebp
fist
adc
icebp
mov
mov
test
inc
sahf
cmp
mov
adc
test
mov
lods
cmp
cli
outs
pusha
mov
js
js
ins
push
or
loop
sar
and
lea
add
rcr
mov
inc
les
shl
or
int3
popa
xchg
lods
sti
jmp
push
inc
popf
retf
mov
fnstenv
xor
out
mov
add
in
push
mov
popa
in
mov
test
mov
mov
in
cmp
lds
bound
jecxz
popa
popf
rcr
addr16
fwait
aas
xchg
xor
add
mov
xor
test
fs
add
adc
retf
pop
pop
xchg
jmp
popf
(bad)
jmp
cli
xchg
test
jae
xchg
add
xchg
lods
outs
lods
mov
pop
stos
xchg
push
adc
mov
dec
jg
shr
enter
mov
cmps
sbb
jmp
scas
inc
fwait
(bad)
push
shl
sbb
retf
push
add
je
sbb
jmp
xchg
out
aam
jne
inc
gs
imul
outs
jle
lahf
(bad)
pop
pop
xchg
std
jmp
cmp
xor
cmp
in
sbb
xchg
fsubr
dec
test
xor
mov
xchg
pop
adc
add
jmp
jge
popf
pop
loop
mov
jmp
popf
cmp
adc
mov
or
fcomp
call
call
test
movs
fisub
gs
push
jns
mov
jge
xor
lods
mov
in
jmp
cld
pop
sub
add
jge
pop
add
stc
fisubr
lahf
or
sub
(bad)
pop
mov
mov
cdq
lods
inc
and
lahf
scas
mov
mov
repnz
xchg
push
das
sub
or
mov
(bad)
sub
push
mov
fwait
mov
mov
ins
icebp
out
xchg
mov
arpl
(bad)
jne
or
mov
cmp
cmp
pop
cmc
leave
sbb
add
and
js
fisubr
and
loopne
cmc
xor
mov
xchg
pop
cmp
sbb
inc
call
(bad)
ret
imul
(bad)
fdiv
mov
fist
rol
sti
mov
test
mov
cdq
leave
iret
inc
sub
imul
lds
mov
arpl
mov
pop
dec
mov
jae
mov
in
inc
stos
mov
adc
mov
push
or
in
sbb
stos
xchg
stos
cmp
fwait
push
xchg
mov
push
ret
into
xor
sbb
ins
xor
pop
aaa
cwde
clc
mov
add
xchg
lock
les
rcl
jp
mov
movs
inc
cmps
outs
push
gs
ins
jg
fwait
lea
aad
repz
sbb
mov
inc
or
push
ins
lock
mov
mov
dec
sbb
cs
cmc
mov
mov
cmp
addr16
ins
xchg
cmp
sar
fisub
out
xchg
jmp
mov
pop
push
(bad)
sbb
or
(bad)
movlps
les
inc
int
sbb
cmp
push
imul
adc
mov
sbb
and
sar
xor
(bad)
pop
cmp
mov
clc
lock
dec
retf
aad
push
adc
add
dec
les
xchg
adc
test
lods
inc
sbb
scas
(bad)
in
and
mov
jp
jo
sbb
adc
or
or
add
mov
clc
or
sbb
outs
mov
pop
xchg
rcl
xchg
je
fidiv
mov
nop
and
call
or
lds
pop
fld
add
icebp
mov
out
or
cwde
cwde
inc
sbb
in
cmc
(bad)
sbb
fisttp
jae
xlat
mov
xchg
mov
mov
mov
lock
enter
mov
mov
cmp
adc
mov
sbb
pop
inc
test
mov
sub
in
test
fldl2t
fisttp
mov
nop
mov
test
inc
(bad)
fmul
inc
call
sbb
or
(bad)
cmp
movs
pop
sbb
sub
adc
ret
outs
pop
dec
icebp
jmp
xor
fwait
leave
loop
and
sub
inc
sbb
mov
outs
mov
and
xchg
mov
in
ret
mov
cli
xor
cmps
ret
punpcklwd
outs
or
inc
popf
repz
outs
push
adc
sub
dec
push
aam
dec
inc
test
cwde
clc
inc
cmp
mov
ret
lods
outs
mov
out
adc
jne
pop
jns
push
loopne
in
mov
jae
mov
adc
jns
(bad)
pop
xor
add
adc
(bad)
mov
sbb
mov
sub
push
mov
in
aaa
(bad)
push
push
fxch
mov
fs
pop
test
in
(bad)
adc
shl
shl
mov
pop
bound
xchg
push
xchg
sbb
mov
stos
add
push
retf
pop
test
mov
and
fcomi
js
cld
popf
scas
inc
movs
fadd
jle
and
add
push
dec
mov
xchg
xchg
sub
cs
push
xchg
mov
in
fdivr
aam
inc
and
retf
gs
std
inc
or
xor
fcom
mov
rcl
adc
xchg
cdq
mov
sub
dec
pop
jnp
sbb
jmp
mov
cmp
pop
sbb
out
ds
jp
movs
fldenv
in
mov
call
dec
mov
ss
xor
iret
mov
sbb
jbe
adc
cli
pop
shl
mov
cmp
pop
test
imul
sar
xchg
leave
sub
xor
or
(bad)
cmp
inc
call
(bad)
gs
lods
cmp
sub
pusha
mov
add
js
ins
push
dec
add
loop
sar
and
cwde
into
add
pop
dec
xchg
adc
xchg
pop
mov
fisubr
and
ins
cmc
xchg
xchg
aas
xchg
in
pop
out
inc
sbb
mov
ins
call
test
mov
gs
sub
pop
rcl
rol
dec
dec
test
or
jmp
cmp
xor
movs
std
aas
std
dec
jmp
dec
in
xlat
pop
push
and
mov
mov
jl
cdq
je
lock
inc
aas
cli
shl
repnz
icebp
cli
dec
xchg
adc
push
mov
xlat
push
aaa
xchg
sahf
lahf
shr
pop
push
in
dec
stos
fild
dec
sub
retf
in
cmc
iret
add
pushf
pop
xchg
test
and
xor
lock
adc
push
mov
test
mov
sbb
jne
fucomi
jge
ret
pushf
scas
inc
fwait
(bad)
push
rol
dec
and
call
jge
adc
rcr
jg
and
xchg
mov
pop
fidivr
jo
retf
cwde
sub
mov
mov
mov
int3
loope
sbb
push
sbb
shl
aam
xchg
fstp
mov
shl
xchg
sbb
aam
popf
jl
(bad)
pop
fisub
add
or
cmc
out
jecxz
movs
mov
cdq
cwde
jmp
sbb
push
xchg
mov
cmp
xchg
xchg
add
fadd
movs
fisubr
pop
inc
inc
pop
dec
or
ret
mov
mov
mov
xchg
push
nop
cld
icebp
xchg
dec
mov
or
icebp
fisubr
lahf
or
sub
(bad)
pop
mov
and
lods
inc
and
lahf
scas
mov
mov
aad
jo
popa
or
mov
repz
rol
or
mov
mov
pop
test
not
in
add
mov
lock
mov
bound
out
xchg
test
inc
cmp
(bad)
mov
mov
sbb
xchg
into
adc
mov
jne
fstp
adc
fist
ins
sti
out
xchg
dec
sbb
jns
pushf
rcr
dec
sbb
out
sbb
ins
div
fnsave
lds
push
clc
sub
mov
pop
sbb
clc
cmp
lods
aad
retf
add
sub
inc
sbb
or
jl
sbb
xchg
stos
cmp
fwait
push
xchg
sbb
shr
push
ret
into
mov
fucomi
repnz
fwait
leave
cmc
xor
inc
stos
sbb
movs
loopne
fdiv
adc
and
push
or
dec
or
ret
mov
pop
jg
call
xchg
lahf
out
cmp
gs
cdq
enter
out
je
cmp
pop
xchg
adc
jbe
or
into
dec
mov
inc
xchg
lea
js
cdq
neg
adc
add
and
jmp
mov
imul
cmps
mov
ja
lahf
rol
adc
lods
fs
pop
mov
into
imul
adc
test
pop
adc
(bad)
cmc
sbb
push
mov
xchg
test
dec
mov
test
retf
loop
mov
dec
les
lock
(bad)
pop
test
lods
inc
sbb
scas
(bad)
in
jae
mov
jmp
mov
fadd
cmp
xor
xor
addr16
and
or
push
scas
push
adc
std
ret
mov
pop
pop
pusha
stos
cmp
mov
es
lea
clc
and
and
test
sub
fwait
inc
mov
xchg
int
ds
in
shl
ins
aam
mov
mov
push
fld
mov
scas
ret
pop
cmc
fidivr
cmp
fist
add
ret
mov
mov
mov
sbb
pop
fcom
fwait
dec
sbb
jne
les
push
rcr
jbe
movs
call
inc
jae
fistp
das
retf
inc
ret
pop
sub
inc
sbb
or
(bad)
cmp
pop
jae
mov
lods
mov
mov
push
adc
pop
retf
jecxz
bnd
int3
scas
pop
fdiv
in
add
sub
inc
sar
(bad)
jo
add
pop
and
mov
imul
dec
add
mov
shl
sub
jb
pusha
repz
push
(bad)
enter
and
inc
scas
inc
mov
mov
cmp
inc
inc
pop
cwde
adc
out
aad
test
xchg
icebp
scas
int3
sbb
scas
jns
jmp
pop
in
mov
mov
sbb
pop
sbb
cmp
fadd
hlt
sub
imul
ror
inc
sub
rcr
sbb
vandnps
test
cmp
addr16
pop
retf
fucomp
cld
std
mov
mov
popf
aad
push
fs
jp
xchg
test
xor
push
xchg
std
movs
mov
stos
fs
enter
push
retf
pop
test
int
sbb
scas
(bad)
fcmovnb
js
pop
cmps
iret
jg
aad
cmp
mov
adc
push
cwde
int3
dec
out
arpl
or
stc
dec
(bad)
cmp
jnp
mov
daa
scas
xor
imul
pop
sbb
into
add
or
mov
mov
call
inc
ins
push
xchg
sti
in
and
xchg
xchg
mov
xchg
mov
out
cmc
mov
add
mov
push
ds
pop
mov
aas
push
cmc
sbb
mov
js
sbb
mov
add
dec
inc
push
loopne
jbe
add
(bad)
mov
pop
leave
(bad)
sbb
rcr
cmps
jmp
xchg
mov
stc
and
lahf
loop
fild
mov
pop
pop
push
arpl
dec
sub
jg
or
(bad)
cmp
inc
call
(bad)
gs
lods
cmp
mov
pusha
mov
out
and
movs
dec
(bad)
stc
fild
and
popa
push
add
int3
dec
(bad)
cmp
adc
sbb
imul
repnz
inc
ins
imul
push
aad
jle
lahf
(bad)
pop
pop
xchg
mov
xlat
pop
jmp
jp
xchg
sub
add
jecxz
hlt
mov
in
and
dec
sub
cs
dec
ret
fild
stos
sub
cmp
dec
in
out
and
stos
push
jae
adc
mov
popf
jp
outs
or
pop
or
imul
and
mov
sbb
or
sbb
sbb
pop
sbb
dec
mov
cmp
sub
jg
fwait
dec
dec
popf
retf
leave
lahf
test
test
xchg
test
and
dec
push
scas
xchg
stos
mov
stos
xchg
push
adc
daa
mov
leave
sub
mov
sbb
xchg
dec
stos
out
jg
mov
dec
xlat
cld
imul
mov
pop
test
adc
js
xchg
adc
es
inc
jmp
fucom
dec
sar
inc
repz
xchg
mov
adc
xchg
mov
arpl
or
mov
mov
scas
jns
jg
xchg
cmp
add
es
jg
pop
sbb
dec
mov
sbb
inc
cmp
ret
push
adc
out
and
jmp
shl
aas
lods
dec
sbb
out
mov
test
mov
xchg
push
and
mov
ret
pop
xor
fistp
xchg
or
xor
mov
scas
pop
rcr
push
jge
sub
cmp
mov
sbb
scas
mov
jecxz
ret
lods
mov
mov
dec
mov
xchg
push
nop
pop
mov
or
(bad)
mov
fisubr
lahf
or
sub
(bad)
pop
mov
test
cdq
lods
inc
inc
pushf
shl
jecxz
push
sar
pop
or
fsubr
pop
add
rcr
and
outs
jno
pop
cwde
ror
cmp
xor
add
mov
xchg
pushf
mov
sti
ins
or
mov
call
add
and
add
or
dec
mov
cdq
mov
jbe
push
sbb
ror
mov
shr
mov
dec
lock
pop
push
add
pop
add
mov
call
sub
pushf
add
mov
mov
push
pushf
sbb
jl
nop
mov
test
test
inc
mov
(bad)
jmp
popf
retf
add
sub
inc
sbb
or
in
imul
mov
xchg
pop
mov
push
adc
pop
fiadd
imul
push
or
fidiv
sbb
cmp
xchg
fucomi
or
add
xchg
sahf
inc
cwde
aam
sar
fcom
test
rcl
xchg
je
fidiv
ins
(bad)
jne
fbld
xor
enter
mov
xor
dec
dec
mov
jne
js
and
mov
call
(bad)
xchg
sbb
jmp
call
adc
out
out
popa
icebp
mov
cld
cmp
lds
rol
mov
sub
jge
push
sbb
sti
inc
cli
shl
scas
fistp
push
outs
jno
dec
dec
sbb
in
retf
(bad)
stc
fs
lods
mov
mov
xchg
test
dec
mov
inc
add
add
imul
xchg
adc
test
mov
pop
or
jmp
(bad)
mov
mov
in
fsincos
cdq
cmps
fwait
leave
loop
jnp
or
cmp
mov
mov
test
adc
pop
in
ret
mov
cli
mov
push
gs
ins
es
push
(bad)
mov
repnz
ret
inc
push
fwait
nop
sub
and
dec
mov
or
dec
cmp
adc
mov
jne
popa
pop
push
or
lods
cdq
jle
addr16
jno
cmp
adc
mov
and
je
lahf
xchg
jno
pop
mov
push
sahf
ret
push
test
retf
cli
int3
shr
jnp
fild
jae
fistp
push
retf
inc
ret
pop
sub
inc
sbb
or
(bad)
cmp
movs
pop
and
fwait
lods
jle
mov
mov
mov
aaa
jg
cli
rol
popf
scas
inc
and
icebp
xor
xchg
into
or
pop
xchg
mov
mov
ror
cs
push
xchg
mov
loopne
fdivr
xor
imul
push
std
or
repz
(bad)
and
adc
add
and
mov
mov
mov
loope
mov
adc
fst
mov
loopne
xor
mov
in
inc
mov
xor
jne
lock
enter
add
rcr
ret
ficomp
cmc
jbe
jmp
jl
nop
xlat
pop
sbb
test
clc
scas
out
mov
jge
cs
fucomp
cld
std
stos
aaa
mov
popf
aad
push
lods
xchg
test
cmp
xchg
test
xor
push
xchg
pop
imul
push
jb
lods
(bad)
pop
mov
and
lods
popf
xchg
cmp
icebp
ins
(bad)
fucomi
sbb
push
and
out
or
or
imul
push
add
cdq
cmp
xchg
in
mov
int3
sub
ds
call
daa
sbb
shl
and
cmps
je
sbb
inc
inc
sbb
enter
dec
cmp
test
aad
mov
int3
sbb
pop
and
popf
movs
imul
into
repz
icebp
fdiv
xor
rcr
add
cli
or
add
cs
jg
repz
movs
mov
mov
fst
fwait
clc
push
test
pop
sbb
add
stos
(bad)
jmp
popf
retf
rcr
test
movs
add
arpl
xchg
stos
mov
stos
xchg
fist
fimul
push
jbe
dec
jle
mov
fst
cmp
lahf
scas
mov
jle
ficom
loop
xchg
pop
repnz
int3
mov
adc
rcl
push
sbb
sbb
aam
aas
xchg
out
lea
mov
cmps
jnp
retf
adc
push
mov
clc
enter
leave
add
sbb
mov
or
mov
pop
fisub
fsubr
in
cmc
mov
add
test
sub
lods
int
cmp
xchg
iret
and
mov
mov
inc
sbb
xor
enter
add
out
push
sbb
sbb
xor
pushf
dec
and
popf
vminss
mov
sbb
scas
mov
jecxz
mov
aaa
mov
shl
cmp
pusha
add
or
mov
imul
push
jb
sbb
jecxz
test
fucomp
mov
pusha
inc
loope
xchg
mov
rep
inc
fwait
leave
or
js
sbb
fadd
ror
xchg
and
push
or
les
aam
cmc
or
sbb
shl
pop
fidivr
cmp
lea
cmp
push
adc
inc
jecxz
mov
pop
or
dec
cmp
in
dec
ret
or
mov
pop
mov
or
test
sbb
popa
clc
cmp
mov
inc
lods
fadd
mov
sub
lds
jne
dec
in
movs
mov
mov
stos
mov
ja
hlt
test
test
inc
mov
cmp
jae
cmp
stos
fs
retf
add
sub
inc
sbb
or
xchg
fist
fimul
addr16
(bad)
add
pop
mov
lods
inc
sbb
jmp
std
pop
cmp
mov
repnz
sbb
mov
mov
addr16
and
or
les
fwait
xchg
out
mov
and
mov
call
bswap
int
mov
mov
pop
stc
mov
test
aad
push
add
sbb
or
add
mov
ret
push
adc
mov
lods
sbb
hlt
cmp
in
cld
aas
in
and
mov
in
inc
inc
or
add
addr16
dec
popf
jp
xor
push
dec
and
pop
stos
push
outs
jno
ins
dec
sbb
push
mov
(bad)
stc
push
cwde
lods
mov
mov
xchg
test
dec
mov
adc
add
retf
fist
mov
mov
aad
add
push
push
pushf
pop
jmp
scas
pushf
pop
sub
bnd
jecxz
adc
out
mov
rol
cwde
rol
(bad)
jo
add
dec
and
(bad)
les
clc
movs
fldenv
sub
mov
pop
pop
inc
pop
mov
jle
mov
mov
das
(bad)
adc
aam
pop
jecxz
xchg
dec
add
mov
mov
cdq
pop
sub
pop
inc
sub
fistp
and
(bad)
sbb
mov
lods
pop
mov
jns
ds
and
iret
hlt
adc
cmp
enter
push
sbb
add
xchg
add
frstor
push
test
retf
xchg
call
test
(bad)
call
test
retf
inc
ret
pop
sub
inc
sbb
xchg
add
(bad)
jmp
lock
mov
aad
call
sti
add
inc
pushf
dec
stc
arpl
scas
(bad)
(bad)
add
adc
dec
mov
push
es
or
arpl
or
stc
dec
sar
pop
in
and
(bad)
mov
push
mov
mov
mov
inc
imul
fidivr
mov
mov
(bad)
repnz
and
push
jp
dec
mov
jne
cwde
adc
inc
mov
add
or
fcomp
or
jne
ret
arpl
lds
cmp
movs
add
cdq
pop
add
mov
and
stos
adc
cmps
mov
test
cwde
retf
movs
dec
sbb
xlat
pop
sbb
test
clc
sub
jge
sbb
std
lods
out
mov
popf
aad
inc
and
adc
xchg
test
xor
add
xchg
mov
xor
mov
xchg
jmp
in
shr
outs
(bad)
pusha
mov
mov
leave
adc
sbb
sti
and
dec
popa
push
add
enter
jns
pop
and
aad
test
xchg
icebp
or
xchg
in
cmp
ins
jecxz
lsl
call
dec
repz
(bad)
iret
in
(bad)
mov
or
rcl
add
nop
sub
and
and
inc
pop
mov
mov
pop
pop
push
sti
ins
iret
jmp
pop
or
js
xor
les
jae
mov
pushf
fiadd
adc
pop
or
sub
xor
push
pop
imul
mov
pop
mov
dec
sub
icebp
fild
bound
sbb
arpl
bound
xchg
dec
data16
push
sbb
xchg
pop
cmp
or
push
dec
in
xchg
cmp
imul
sbb
mov
jno
test
mov
in
pop
in
and
adc
jg
or
inc
pop
mov
je
(bad)
push
mov
sbb
inc
mov
push
fidivr
aaa
mov
sub
ins
push
(bad)
mov
fbld
jge
mov
cmp
xor
loopne
dec
inc
ds
adc
movs
cmc
clc
dec
adc
test
mov
aas
xchg
pushf
sahf
inc
call
xor
pop
mov
cmp
and
retf
scas
sbb
pop
retf
mov
mov
iret
cmps
mov
neg
jecxz
retf
movs
dec
sbb
xlat
pop
sbb
test
clc
test
addr16
(bad)
retf
fucomp
cld
std
mov
aad
jo
xchg
test
mov
push
fmul
daa
sbb
(bad)
cmc
add
ja
stos
inc
call
xchg
jge
mov
cmp
scas
push
je
retf
jle
mov
popf
int
leave
mov
add
arpl
or
sbb
mov
adc
mov
aad
data16
push
mov
push
dec
lea
xor
leave
push
ins
std
dec
jo
pop
fucom
cmp
inc
repz
bound
mov
push
adc
xchg
xlat
mov
movs
cdq
aam
pop
les
movs
pop
in
aaa
call
les
jg
add
sar
xor
mov
adc
dec
add
fsubr
pop
imul
mov
pop
mov
inc
cmp
call
sub
fld
arpl
push
mov
xor
xchg
or
push
(bad)
mov
xchg
push
fcmovbe
pop
cmp
adc
test
popf
adc
push
nop
push
(bad)
js
jp
mov
push
mov
jo
jle
pop
repnz
mov
call
mov
test
adc
test
test
or
xor
pop
sahf
push
mov
push
fst
pop
lods
fimul
mov
fisubr
test
add
adc
dec
out
mov
pop
push
popf
push
mov
pop
sbb
call
aam
push
dec
adc
mov
lahf
retf
jecxz
gs
fmul
pop
sub
sbb
mov
mov
loop
repnz
movs
mov
mov
jl
xlat
stos
dec
sahf
sbb
push
test
pop
sbb
ins
mov
cmp
test
jg
popf
push
dec
popf
retf
mov
stos
pushf
ret
test
mov
jo
xchg
add
fisubr
scas
push
test
leave
imul
sbb
push
xchg
popf
out
jns
rep
inc
fwait
leave
or
js
cmp
sbb
nop
add
test
or
and
es
xchg
jmp
dec
js
fidivr
in
into
mov
xor
jno
ins
ds
fstp
je
fdiv
aaa
dec
(bad)
dec
xchg
xchg
lea
pop
pop
and
adc
or
hlt
outs
mov
call
pushf
div
inc
test
add
hlt
jns
aas
mov
dec
dec
(bad)
mov
dec
mov
mov
add
fwait
push
cwde
sub
cs
pushf
dec
and
xchg
dec
pop
stos
fsubr
movs
in
dec
sbb
scas
mov
jecxz
repnz
mov
loopne
das
jae
mov
sbb
cld
xor
mov
mov
mov
or
sahf
push
mov
push
pop
pop
cld
inc
jecxz
stos
retf
adc
loopne
sbb
pop
cmp
mov
jb
add
aam
les
test
pop
mov
test
cmp
dec
xor
imul
dec
jae
inc
fist
call
push
mov
fld
and
fldenv
mov
hlt
mov
popf
jle
mov
pop
ficom
dec
sbb
push
xchg
call
pop
jb
movs
sbb
scas
inc
fwait
pop
out
clc
sti
dec
push
add
retf
jecxz
and
stos
test
dec
popa
xchg
test
sbb
mov
mov
jne
jl
movs
mov
mov
stos
mov
ja
or
push
call
(bad)
in
jae
push
cld
mov
(bad)
fs
and
and
shl
xlat
jno
inc
scas
push
pop
lock
movs
sbb
call
dec
pop
cld
dec
push
sbb
push
jecxz
fistp
inc
jecxz
adc
out
mov
sar
js
jle
outs
daa
add
dec
(bad)
or
pop
sbb
mov
mov
push
xchg
lahf
aam
jg
das
mov
out
imul
(bad)
clc
popa
jge
outs
push
inc
sbb
clc
int3
dec
dec
adc
cmp
mov
dec
mov
mov
mov
xchg
jmp
and
push
xchg
rcl
mov
in
int
add
inc
daa
pop
mov
mov
lahf
aam
sub
mov
bound
stos
mov
mov
popf
sti
iret
xor
fmul
nop
xor
sub
stos
push
outs
jno
push
dec
sbb
outs
mov
ffree
stc
mov
xchg
push
jae
(bad)
je
cmps
cwde
adc
mov
imul
mov
lock
loope
xchg
stos
inc
and
jns
or
jnp
retf
sar
sbb
icebp
adc
push
dec
imul
pusha
push
or
cwde
mov
(bad)
mov
fwait
xor
enter
sbb
mov
daa
pop
repz
xchg
cdq
xlat
xchg
jle
popf
gs
push
and
cmp
push
call
aas
in
mov
xchg
imul
pop
dec
push
xchg
int3
nop
mov
jns
test
dec
and
mov
clc
sti
mov
jecxz
(bad)
push
sbb
and
lods
ret
add
sahf
push
leave
fsubr
fnstsw
push
test
retf
mov
shr
dec
mov
popf
in
mov
repz
fadd
cmp
mov
loope
mov
das
or
adc
fnsave
push
add
lock
lds
xlat
outs
(bad)
pusha
mov
mov
fist
std
out
in
sbb
les
sub
mov
push
fmul
loopne
aam
inc
les
pop
enter
adc
or
and
fidivr
jnp
test
mov
mov
mov
jecxz
enter
out
dec
fwait
loop
dec
loope
mov
clc
jnp
popf
xchg
push
adc
or
pop
add
sbb
add
dec
adc
sub
and
aas
pop
mov
lahf
retf
ins
mov
lea
push
and
retf
cmps
mov
test
cwde
retf
movs
dec
sbb
xlat
pop
sbb
test
clc
lods
cmp
lods
mov
mov
pop
pop
rcr
sub
test
rol
fst
cmp
icebp
pop
scas
xchg
stos
mov
outs
shl
xor
inc
jb
mov
pop
lods
loope
mov
outs
shl
xchg
imul
clc
mov
ror
test
loope
pop
push
mov
mov
sub
rcl
jmp
jge
adc
pop
ret
push
stos
icebp
mov
xor
pop
fadd
pop
mov
jmp
mov
sub
scas
adc
push
add
and
cmp
push
cwde
sbb
cmp
xor
repz
ret
loopne
dec
pop
inc
mov
repz
sbb
and
aaa
gs
enter
pushf
int
jns
dec
sbb
mov
cmps
mov
loop
jmp
mov
nop
xlat
stos
dec
sahf
pop
mov
test
dec
sbb
adc
push
and
test
push
pop
push
sub
mov
xchg
push
pop
push
cmp
ret
add
add
call
shl
jbe
lea
rcl
push
mov
aad
fnstsw
or
iret
scas
je
fistp
and
or
push
cmp
test
cmps
inc
mov
or
inc
mov
aad
cdq
leave
push
ins
loope
pop
xchg
push
out
xor
xor
inc
loope
xor
cmp
enter
or
out
cmc
fldcw
cmp
stc
inc
jp
adc
cmps
sbb
shr
push
mov
pop
mov
inc
mov
and
mov
and
(bad)
mov
jns
ret
mov
add
dec
push
cwde
sub
lods
mov
push
retf
inc
in
xlat
fldcw
sub
into
lods
push
mov
fs
mov
retf
pop
icebp
add
push
cmp
sar
test
sbb
jno
add
test
nop
adc
fist
fadd
push
jnp
outs
(bad)
pop
test
mov
mov
aad
fnstcw
sahf
pushf
jo
js
sahf
push
mov
mov
add
sbb
inc
and
iret
inc
sbb
cmp
sub
test
xor
mov
adc
scas
cli
jae
loopne
xor
test
jno
push
std
lock
mov
dec
xor
xchg
dec
xor
fwait
jne
push
xor
cs
sbb
into
popa
mov
mov
loopne
mov
repz
sti
dec
push
inc
ror
jecxz
and
sub
dec
popa
fwait
movs
dec
sbb
mov
mov
jne
push
mov
stos
mov
ja
push
dec
push
dec
cmp
fs
das
push
adc
mov
mov
je
(bad)
and
pop
repz
inc
pop
sbb
movs
add
fcmovne
aad
fisubr
mov
xchg
sbb
enter
fist
push
sbb
div
mov
stc
leave
mov
xor
add
xchg
ds
xchg
not
mov
daa
cmp
sbb
pop
xor
imul
int
fwait
push
jo
fidivr
xor
xchg
jne
lea
mov
clc
jns
push
and
mov
inc
push
and
retf
fdiv
pop
dec
and
pop
mov
xor
mov
cmc
(bad)
mov
jmp
(bad)
lock
push
sbb
sub
mov
lock
inc
ins
fwait
adc
fsubr
(bad)
fs
repnz
mov
in
popf
test
adc
je
fucomp
pushf
inc
pop
cld
das
repz
push
or
into
sbb
daa
jne
dec
(bad)
push
shl
inc
call
xchg
jge
pop
movs
jbe
push
enter
push
mov
jmp
das
push
std
shl
sar
and
cwde
dec
(bad)
js
cwde
fcomp
sbb
and
mov
xor
push
mov
imul
sbb
test
xchg
in
test
hlt
in
adc
xchg
icebp
leave
adc
add
dec
cdq
push
es
loopne
adc
mov
mov
idiv
shr
repz
adc
xor
mov
aas
pop
test
dec
lahf
retf
ins
mov
addr16
pop
xor
mov
and
loop
iret
cmps
mov
imul
cwde
retf
movs
ret
sbb
push
xchg
push
jb
mov
lds
cmp
xor
adc
stc
je
cld
rcl
arpl
lock
enter
add
push
(bad)
mov
xchg
push
fcmovbe
sbb
fistp
xchg
std
mov
leave
lods
mov
retf
jno
out
rcr
shl
lds
mov
adc
xchg
push
fsub
sbb
aam
stc
mov
sbb
dec
push
in
xchg
popf
aad
aas
mov
mov
es
cmps
jnp
fdiv
popf
push
adc
adc
rcr
mov
adc
push
imul
sahf
dec
mov
into
pop
stos
pop
lods
popf
ins
mov
add
mov
cmp
sti
mov
xor
cmp
adc
ins
or
sub
mov
imul
add
and
xchg
in
mov
and
xchg
pop
ret
jne
popf
retf
arpl
mov
lock
sbb
xor
test
fisubr
scas
push
test
fist
or
and
adc
mov
popf
lahf
xchg
pop
out
jl
popa
or
shl
dec
sub
mov
inc
les
inc
push
mov
mov
or
jo
fwait
sbb
loopne
pop
mov
jne
popf
push
movs
fadd
mov
and
test
je
or
mov
dec
mov
mov
add
repz
ret
loopne
dec
pop
xor
jecxz
gs
hlt
enter
int
mov
mov
cmps
mov
cmp
mov
fs
xchg
mov
mov
sbb
pushf
(bad)
lahf
sti
mov
cmps
fld
leave
js
(bad)
xor
or
data16
mov
mov
or
pop
cmp
mov
mov
adc
in
rcr
cmps
push
or
int3
repnz
sbb
mov
cmp
fistp
adc
sub
xchg
xchg
aas
inc
mov
mov
mov
call
add
sub
xor
xchg
push
push
(bad)
sti
cmp
fdivr
sti
mov
shl
add
and
mov
shr
inc
cdq
js
mov
jmp
adc
jmp
jmp
push
and
(bad)
lds
adc
fidivr
movs
(bad)
mov
add
sbb
push
add
ror
and
lea
dec
sbb
test
test
fisubr
jge
test
jmp
fnsetpm(287
leave
jl
(bad)
mov
rol
sbb
xlat
jno
inc
scas
push
pop
jo
movs
or
(bad)
jns
mov
cmp
fst
pop
inc
(bad)
fstp
xchg
xchg
fadd
repz
cld
into
dec
mov
cmp
add
or
pop
sub
adc
inc
stos
sbb
push
push
fdiv
sahf
mov
cmp
clc
int3
pop
fdivr
jnp
int3
jne
dec
inc
adc
dec
mov
loopne
cmp
or
int
imul
push
sub
mov
mov
loopne
mov
repz
sti
dec
push
xor
repnz
leave
pop
sub
dec
popa
xchg
push
dec
sbb
adc
retf
xlat
scas
enter
adc
les
aad
int
sub
push
pop
das
retf
sbb
inc
lahf
retf
sub
xor
(bad)
push
sti
es
js
xlat
fcom
outs
jmp
sbb
ins
mov
jo
movs
sbb
fst
xor
cwde
sbb
jecxz
stos
retf
mov
push
dec
xchg
jmp
pop
cmp
hlt
sub
add
mov
fwait
nop
out
mov
xor
jmp
adc
jae
inc
mov
jle
clc
int3
pop
mov
sti
mov
in
and
sbb
mov
sub
hlt
or
fsubr
mov
sbb
mov
shl
shr
adc
and
mov
daa
pop
test
mov
lahf
aam
add
mov
bound
xchg
pop
mov
sub
scas
mov
psadbw
icebp
mov
adc
fsubr
inc
in
mov
sbb
shr
fild
loop
jno
rcr
fistp
inc
cmp
dec
loope
mov
das
sub
lock
movs
push
popa
scas
rcr
sbb
mov
xor
sub
pop
(bad)
push
dec
icebp
in
loop
(bad)
out
adc
sub
pop
push
dec
aam
aam
cmp
test
xor
scas
(bad)
mov
push
pop
push
jp
scas
fimul
test
jle
mov
pop
hlt
or
mov
mov
xchg
enter
add
or
repz
pop
dec
xor
dec
sub
xchg
mov
or
mov
adc
pop
mov
sbb
(bad)
jecxz
(bad)
push
sbb
sub
mov
lock
pop
push
add
dec
inc
cmp
push
hlt
sub
push
xor
nop
xlat
push
mov
cdq
inc
in
mov
sub
int
inc
cmp
repnz
rcr
dec
pop
out
cdq
adc
test
xor
aas
arpl
setne
test
jns
dec
ret
movs
mov
lods
fidiv
aad
mov
aad
jmp
fs
leave
jo
shl
dec
std
arpl
inc
call
dec
les
dec
dec
sar
mov
inc
ret
pop
xor
enter
cmp
push
popf
stos
stos
cmp
(bad)
mov
lea
xchg
lea
adc
sbb
mov
add
mov
xor
inc
call
adc
movs
mov
loopne
out
and
jmp
aas
pop
cmp
mov
bound
and
lock
push
adc
or
inc
mov
dec
pushf
dec
int3
imul
mov
mov
mov
dec
sbb
int
dec
push
mov
mul
or
or
dec
mov
lods
hlt
xor
dec
mov
rcl
lahf
cmp
retf
xor
dec
sub
sub
mov
cld
jo
inc
mov
pop
jb
add
xchg
dec
push
repz
inc
cwde
fmul
repnz
repnz
and
popf
jmp
xchg
jmp
or
out
iret
(bad)
popf
xor
fdiv
cmps
ffree
shl
mov
mov
js
enter
sbb
xor
add
imul
sahf
dec
mov
into
pop
stos
pop
lods
xchg
mov
or
mov
adc
sti
mov
in
lock
mov
ret
cdq
push
lock
mov
popf
cli
or
xchg
movs
mov
push
ins
test
push
nop
rcl
rcl
mov
push
cmc
mov
scas
fs
mov
sub
mov
xchg
push
pop
push
jl
ret
or
call
pop
mov
std
xor
pop
jge
in
push
pop
(bad)
enter
mov
mov
xchg
jmp
pop
rcr
sar
js
push
mov
mov
dec
call
sub
fldenv
ins
jmp
or
ins
fcomp
xchg
test
aam
jl
dec
and
loop
cs
sub
dec
push
or
fidiv
xor
push
idiv
mov
repz
ret
loopne
dec
pop
shl
repz
sbb
cmps
aas
lahf
retf
jecxz
mov
ror
push
aas
mov
ins
xchg
adc
xor
cli
fs
retf
mov
repnz
xor
jae
leave
je
pop
retf
sub
push
jl
ret
add
dec
or
popa
and
shl
adc
pop
fs
jnp
or
loope
sbb
scas
cmp
repnz
mov
shl
pop
jl
mov
mov
stos
test
mov
sbb
mov
push
mov
inc
ins
jmp
pop
clc
jecxz
ins
cmp
mov
jmp
mov
and
xor
pop
shr
inc
cdq
fstp
mov
jmp
adc
or
rcl
mov
das
push
or
pop
mov
mov
jns
js
mov
jae
(bad)
ror
add
mov
in
aas
or
dec
push
nop
jg
adc
adc
sub
test
dec
cld
lods
sbb
push
lahf
xchg
push
adc
mov
aaa
jmp
add
push
sbb
ja
pop
sbb
xchg
ficom
int
add
push
fist
mov
add
cmc
mov
cli
cli
icebp
sbb
cmc
cmp
lahf
es
add
repnz
lock
mov
push
das
test
or
push
fidivr
cli
pop
lods
inc
int
jns
cli
jle
fwait
pusha
jl
mov
(bad)
cmp
in
jne
pop
mov
adc
mov
dec
and
inc
jnp
mov
mov
clc
(bad)
fsubr
mov
sbb
mov
shl
dec
adc
call
pop
mov
daa
pop
(bad)
pop
iret
fucomip
in
dec
mov
jnp
ret
cmp
sbb
add
lds
add
pop
and
sbb
les
imul
ret
shl
pushf
inc
pop
clc
scas
repz
fnstenv
jno
popf
sbb
xchg
sbb
add
pop
mov
stos
test
add
xor
and
mov
pop
sub
cld
or
sbb
inc
(bad)
sub
imul
add
adc
dec
xor
aas
data16
push
mov
jp
fst
jge
mov
mov
xchg
enter
cmps
ret
out
fisttp
fwait
lea
xor
mov
cwde
mov
inc
adc
or
sbb
imul
sahf
dec
sub
sub
pop
sbb
mov
out
mov
jo
jge
mov
and
lock
cmp
xor
mov
adc
test
mov
cwde
retf
movs
dec
(bad)
rcr
mov
jge
rcr
jno
les
in
xor
adc
fnstenv
clc
cs
je
ins
test
mov
lds
add
xor
nop
imul
xchg
xor
leave
xor
xchg
push
mov
movs
mov
cld
shr
jle
xor
pushf
adc
in
stos
js
cmp
ret
aam
imul
test
jnp
xchg
sub
jecxz
push
repnz
(bad)
xrelease
push
lahf
pop
inc
and
call
mov
test
sbb
xchg
xchg
mov
and
mov
int
jle
stc
jmp
mov
shl
mov
shr
repz
adc
daa
mov
loopne
out
mov
sbb
aaa
pop
sbb
jns
add
sub
push
adc
cmp
fsubr
outs
aaa
(bad)
sbb
rcr
stos
jge
sbb
add
xchg
in
mov
and
xchg
push
cld
das
repz
pushf
mov
add
xchg
add
cmp
pop
mov
movs
sbb
mov
enter
stc
stc
push
cmp
jge
(bad)
pop
(bad)
push
enter
and
cmp
lods
and
inc
daa
sbb
(bad)
cmp
fist
nop
jmpw
(bad)
or
sbb
out
xor
int
cmc
pop
cmps
ret
fincstp
clc
loopne
lea
xchg
out
mov
enter
sbb
push
add
inc
adc
imul
sahf
dec
mov
into
pop
stos
pop
lods
xchg
js
dec
pop
movs
dec
call
fdiv
in
cmp
imul
sub
jno
lock
sbb
cmp
cmps
mov
arpl
sbb
pop
dec
sbb
xor
cs
sbb
popf
(bad)
sahf
sti
(bad)
stc
je
scas
add
scas
out
arpl
adc
test
jl
adc
les
or
mov
sbb
pushf
inc
push
xor
and
cmp
or
(bad)
sbb
dec
mov
sub
iret
xor
scas
xchg
push
or
mov
rcr
jb
mov
addr16
movs
ds
pop
and
inc
jb
fwait
jl
mov
enter
loop
jge
sub
dec
push
or
fidiv
inc
mov
dec
mov
mov
fucomp
repz
adc
xchg
mov
mov
sbb
mov
cdq
inc
push
lock
shl
or
mov
dec
and
lods
imul
aaa
push
xor
mov
lods
ficom
test
shr
jne
(bad)
lahf
mov
xor
dec
add
push
jl
or
inc
imul
sub
xchg
hlt
icebp
mov
ror
inc
jge
add
pop
cmps
pop
ins
ja
xor
xor
(bad)
jmp
mov
cmc
mov
mov
ror
jo
shl
inc
cmc
or
jns
ficom
sti
and
iret
icebp
test
sub
ds
sbb
loop
fld1
std
jge
mov
ror
mov
int3
pusha
ds
into
jecxz
mov
shr
inc
cdq
mov
inc
adc
dec
mov
mov
push
mov
add
cmp
jae
mov
lock
sbb
jae
sbb
in
jns
repnz
jno
pop
inc
int
clc
nop
icebp
mov
and
push
int
sub
push
pop
das
retf
push
mov
sub
(bad)
or
mov
adc
ret
(bad)
(bad)
mov
cmp
dec
pop
xchg
cdq
nop
frstor
or
add
or
pop
mov
mov
pop
xchg
jbe
scas
inc
inc
mov
mov
std
leave
push
repz
cmp
sbb
and
xor
adc
rol
aas
jns
dec
lods
push
call
fdivr
sbb
movs
inc
daa
popf
repz
cmps
mov
fwait
lea
sahf
push
bound
out
adc
add
movs
sbb
add
mov
fisubr
popf
xchg
xor
dec
sahf
push
sub
je
mov
sub
movs
pop
gs
fst
add
mov
jns
nop
rcr
mov
shr
dec
or
sub
dec
(bad)
call
retf
inc
std
mov
push
push
inc
lahf
fisubr
fxch
stos
lods
xchg
jmp
popf
in
js
nop
sbb
dec
or
rol
xchg
or
pop
pop
and
nop
sbb
ins
mov
xchg
mov
jnp
mov
scas
scas
ret
jnp
in
mov
ror
sbb
push
pop
es
or
sar
clc
xor
add
adc
cmp
stos
cmp
xchg
mov
push
or
dec
mov
jl
cmp
fld1
jb
cmp
in
jne
jno
int3
pop
xor
and
dec
and
pop
outs
out
mov
mov
test
fsubr
mov
sbb
pop
adc
imul
shr
adc
inc
rcl
fidivr
gs
adc
adc
pop
and
dec
push
repnz
sahf
push
inc
mov
rcl
and
test
push
clc
mov
lods
(bad)
push
fild
jnp
rcl
les
sbb
ret
add
pushf
(bad)
stos
add
xchg
call
pop
stos
fst
call
push
adc
xchg
xchg
jge
mov
iret
scas
mov
and
cwde
cld
inc
sar
js
or
in
ja
jns
data16
push
dec
and
xor
test
ins
jmp
movs
inc
sbb
cmps
ret
out
mov
fwait
lea
xor
mov
cwde
sbb
enter
or
add
out
fstp
imul
sahf
dec
mov
repz
mov
movs
xor
dec
and
sar
jmp
add
in
daa
div
mov
add
cmps
inc
sbb
inc
sbb
imul
dec
pushf
xchg
rcr
jge
les
push
stos
push
les
scas
inc
xchg
fxch
cs
jmp
sti
ret
arpl
mov
jo
xor
add
retf
scas
push
and
movs
sub
mov
mov
mov
in
sub
(bad)
cdq
cmps
push
enter
xchg
leave
in
test
or
repz
repnz
test
stc
addr16
xchg
movs
mov
nop
adc
sahf
push
sub
mov
jl
mov
(bad)
cmp
jne
and
int3
pop
xor
and
mov
dec
and
(bad)
(bad)
out
mov
mov
push
retf
sbb
dec
jb
sbb
mov
int
cmp
mov
(bad)
mov
jns
ds
es
push
mov
lock
pop
mov
or
mov
adc
stos
inc
stos
fst
mov
cwde
retf
movs
dec
(bad)
rcr
mov
jge
les
cmps
xor
ins
fdivrp
mov
ja
adc
fistp
ret
push
sbb
inc
cld
cmc
mov
push
or
gs
add
cmp
les
fist
movs
xchg
icebp
dec
aad
mov
fst
cmp
int3
xchg
and
stc
add
fyl2x
xor
inc
stos
adc
inc
mov
or
ret
push
cmp
dec
and
xor
test
ins
std
shl
daa
(bad)
cmps
ret
out
mov
aas
mov
cmp
cwde
cmp
xchg
enter
inc
push
or
mov
dec
mov
ret
or
pop
rcr
cmps
push
xor
fisttp
pop
add
pop
add
cmp
jns
xchg
rcr
in
sbb
add
add
push
popa
(bad)
stos
icebp
ss
xor
mov
xor
sbb
shr
scas
inc
sub
ror
jno
ja
fcmovne
pop
(bad)
loopne
shl
scas
outs
jae
pop
xchg
push
add
scas
ja
test
xchg
mov
scas
sbb
call
jnp
pushf
mov
pop
inc
mov
repnz
fstp
test
cmp
mov
mov
jge
mov
loope
test
adc
sbb
or
xor
cmp
cmp
in
jne
popa
mov
cmp
mov
(bad)
out
mov
jne
dec
xor
bound
cmp
xor
and
push
cld
mov
shl
adc
inc
rcl
sahf
jb
ins
nop
(bad)
popf
sbb
xor
popa
xchg
rol
sahf
iret
cmps
mov
adc
push
lock
mov
xor
sbb
dec
sub
inc
(bad)
xchg
fxch
cs
jmp
pop
in
je
cmp
retf
xor
mov
hlt
test
push
or
or
(bad)
xor
rcl
cdq
cmps
jle
mov
add
in
int3
xchg
(bad)
cli
cli
icebp
sbb
and
cli
or
repnz
retf
mov
xchg
pop
adc
add
(bad)
jbe
mov
aam
inc
cwde
dec
and
xor
test
ins
jecxz
movs
inc
sbb
cmps
ret
out
mov
aas
mov
sub
out
inc
cwde
fldcw
xchg
enter
inc
or
cmc
fnstenv
xchg
sub
sub
aad
into
pop
stos
cmp
aaa
call
lock
lock
loopne
lahf
pop
adc
inc
sahf
jb
dec
inc
sbb
adc
pop
es
sbb
lock
ret
inc
mov
(bad)
scas
outs
and
pop
stos
inc
std
mov
xor
mov
neg
shl
jge
push
mov
cmps
ins
sub
bound
xchg
add
cmp
jne
lds
or
std
leave
xor
xchg
push
mov
movs
mov
cld
sbb
retf
fstp
sbb
dec
sti
icebp
arpl
cmp
add
add
cli
xor
mov
cld
dec
and
je
mov
out
xor
int
jmp
cmps
ret
fincstp
clc
aam
lea
xor
mov
mov
sub
sbb
push
les
(bad)
pop
jne
jge
push
dec
test
sbb
mov
pop
and
call
ret
loopne
inc
adc
in
popf
jae
ret
xor
hlt
mov
inc
test
mov
mov
xchg
or
ret
inc
sub
add
stc
mov
test
fstp
(bad)
ss
sbb
test
xlat
retf
ins
xchg
add
daa
sbb
aaa
cld
xor
retf
or
mov
scas
sbb
ror
enter
stc
fst
adc
cdq
shl
(bad)
push
repz
retf
(bad)
jp
pushf
cmps
jb
int
sub
or
cmp
sub
push
mov
lock
movs
ret
fwait
int
mov
lahf
(bad)
pop
xchg
mov
jl
dec
ror
xor
mov
inc
inc
mov
ret
inc
(bad)
sub
push
dec
test
ror
pop
sub
xlat
jg
pop
mov
cmp
cmps
ja
fadd
div
lds
jg
ret
sbb
inc
pop
mov
ins
xchg
ret
leave
call
retf
imul
nop
adc
lods
stc
cmp
test
leave
lods
test
dec
jge
mov
cmp
xchg
(bad)
data16
push
ret
cld
dec
adc
add
sbb
pushf
inc
push
xor
and
xchg
mov
cld
enter
add
fcomp
mov
mov
xchg
sbb
dec
and
xchg
jp
mov
push
sub
mov
out
mov
ret
fld1
std
jge
leave
cmps
inc
cdq
xlat
call
int3
add
or
cmc
enter
sbb
aad
add
xchg
push
pop
push
mov
call
mov
sub
jmp
ds
cmps
ja
iret
ror
mov
add
cmps
inc
sbb
pop
call
push
xchg
or
mov
test
push
dec
(bad)
push
and
lds
jge
push
in
mov
(bad)
mov
imul
arpl
lds
sbb
jae
mov
cmps
stos
rol
mov
ror
inc
jne
add
pop
cmps
pop
ins
ja
xor
xor
cmp
adc
lds
cmp
sbb
add
or
or
add
sbb
push
cs
cwde
dec
lods
push
in
movs
ret
fadd
mov
movs
inc
daa
popf
fwait
jle
(bad)
cmps
mov
fwait
lea
lahf
aam
xor
push
adc
mov
xchg
jo
mov
dec
nop
lea
lea
rcl
pop
cmp
mov
call
pop
movs
imul
lds
cmp
jecxz
(bad)
pop
mov
or
inc
cmp
push
mov
movs
ret
sbb
xchg
add
adc
mov
push
pop
xchg
push
pop
fst
lahf
dec
sbb
fcom
ffree
push
adc
pop
or
jne
mov
(bad)
stos
mov
adc
pop
pushf
jbe
xor
(bad)
aad
adc
jg
out
cmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
ja
mov
mov
fisttp
adc
fcom
xchg
js
mov
and
ret
fld1
jb
cmp
jne
jecxz
movs
mov
daa
loop
hlt
xor
mov
loopne
mov
popf
lea
add
lahf
shl
mov
inc
arpl
fistp
pop
pop
loope
pop
(bad)
iret
ret
xlat
lea
xor
dec
cmp
imul
jo
sbb
or
sbb
cmp
stos
int
sub
dec
xor
stos
dec
sbb
ins
push
push
xchg
scas
inc
pop
aad
mov
xchg
jmp
rcr
loopne
shl
movs
jl
retf
rcl
(bad)
out
stos
add
xchg
call
pop
stos
fst
cmps
adc
loopne
jp
cmps
sbb
leave
(bad)
push
xchg
pop
pusha
bnd
ins
push
or
leave
loop
sar
iret
and
lea
xchg
mov
cld
int
mov
pop
xchg
mov
sub
add
jle
iret
loope
jb
pop
fsub
shl
xchg
fmul
and
shl
shr
test
pop
movs
popf
mov
lea
fst
inc
add
dec
rcr
adc
sahf
push
arpl
jmp
clc
add
(bad)
sbb
in
xor
repnz
jl
out
addr16
xor
pop
leave
iret
inc
sbb
pop
sbb
mov
imul
les
jnp
cmp
fisubr
jns
mov
sti
cli
pusha
std
movs
dec
push
dec
pop
in
dec
(bad)
add
cmp
mov
add
or
sub
stos
jne
add
adc
xchg
xor
pop
cmp
sbb
jmp
scas
inc
fwait
(bad)
push
shl
stos
add
add
add
sbb
dec
and
je
cmp
pop
test
out
xor
int
dec
ret
fld
clc
xor
in
sahf
aam
jl
xchg
or
fistp
push
or
out
jne
js
popa
in
mov
test
inc
jnp
adc
add
mov
jno
(bad)
iret
sbb
mov
adc
push
or
mov
imul
sbb
push
and
imul
adc
sahf
aaa
push
neg
fs
sar
pushf
in
jae
inc
fadd
cmp
sub
mov
nop
imul
rol
fcmovnu
cwde
mov
js
lds
inc
and
lahf
scas
mov
mov
xor
jo
jb
or
pusha
sar
sub
push
mov
cld
into
mov
sub
mov
(bad)
(bad)
xchg
cdq
scas
mov
xchg
push
adc
jecxz
inc
rcl
sbb
xchg
fcom
retf
mov
fsub
sbb
out
movs
cdq
xlat
test
xor
ret
loopne
inc
adc
in
cdq
pop
push
add
enter
mov
cmp
mov
pop
(bad)
sbb
nop
pop
ret
cmps
mov
cs
xchg
sbb
pop
push
jnp
sar
popf
dec
add
(bad)
lahf
pop
stos
fs
movs
stc
dec
push
pop
(bad)
jmp
rcl
mov
or
cmp
dec
mov
sbb
jle
cmps
or
push
enter
mov
cmps
sbb
jmp
scas
inc
fwait
(bad)
push
shl
adc
xor
pop
xchg
lahf
or
sbb
dec
and
je
mov
out
xor
push
gs
(bad)
mov
mov
in
mov
jne
aad
sub
pop
rcl
add
pop
xor
mov
push
inc
xchg
sbb
cmps
or
dec
dec
call
jg
pop
mov
cmp
cmps
ja
clc
in
popf
pop
aas
push
fcom
lock
mov
adc
imul
sbb
jg
enter
mov
jae
dec
mov
stos
leave
loope
dec
sub
push
lahf
mov
jae
sbb
inc
jno
mov
mov
push
jle
fstp
dec
pop
xchg
sbb
jo
add
xchg
call
lods
mov
mov
and
or
pop
mov
and
lahf
scas
mov
mov
jmp
jo
jb
into
imul
cmp
sbb
add
sub
push
mov
loopne
mov
das
xchg
mov
cwde
outs
mov
call
mov
push
mov
mov
int3
loope
or
in
mov
push
xchg
and
xchg
sbb
sahf
sbb
int
div
mov
imul
cmc
fsub
hlt
xor
sti
jne
and
mov
push
or
int
inc
sbb
pop
inc
test
inc
imul
outs
(bad)
mov
pop
stos
push
ins
ror
sbb
inc
lahf
arpl
sbb
sub
and
mov
push
out
add
(bad)
mov
inc
push
sbb
xchg
jge
jae
outs
in
add
addr16
ror
push
fisttp
mov
fucomi
repnz
fwait
leave
ins
xor
pop
aaa
cwde
in
xor
sbb
mov
sbb
push
and
xchg
jp
into
popa
test
sub
movs
pop
pop
xchg
inc
rcr
cld
pop
fdivr
ficom
xor
dec
xchg
test
push
or
inc
cmp
jecxz
xchg
ret
push
xchg
sti
mov
stos
shr
or
lea
pop
movs
imul
mov
fmul
mov
inc
ret
shl
adc
leave
mov
sbb
mov
fwait
dec
arpl
or
jnp
inc
in
lods
dec
sbb
lahf
movs
fstp
sbb
call
push
xchg
push
test
or
mov
sbb
retf
or
inc
jns
dec
rcr
xchg
and
pop
test
lods
inc
sbb
scas
(bad)
in
dec
(bad)
mov
dec
loop
xchg
adc
xor
aad
add
ins
(bad)
ds
mov
lods
push
test
and
(bad)
jp
xchg
push
ins
pop
mov
clc
cld
push
jecxz
inc
cdq
enter
loop
je
cmp
dec
mov
push
adc
pop
and
or
sub
popa
pop
mov
sbb
movs
dec
sub
mov
repz
std
fsub
outs
aad
hlt
movs
mov
and
lock
and
test
adc
xor
in
fstp
mov
dec
pop
(bad)
fnstcw
out
imul
arpl
repnz
adc
sub
or
imul
xlat
ficomp
fnsave
inc
movs
pop
add
jno
in
push
(bad)
pusha
mov
jmp
mov
fwait
leave
loop
and
sub
inc
sbb
mov
dec
xchg
or
dec
sub
xchg
mov
xchg
sbb
inc
cli
jnp
jecxz
cmp
add
fwait
lea
cld
and
and
push
xchg
enter
aam
sub
jne
movs
popf
(bad)
push
mov
shl
mov
inc
arpl
int
jns
(bad)
es
iret
inc
(bad)
xor
out
mov
cld
or
or
jo
lock
aas
mov
xchg
push
mov
movs
sbb
pushf
inc
stos
xchg
adc
sub
jmp
mov
inc
fstp
push
cmp
call
jl
or
pop
rcl
xchg
mov
mov
jno
mov
cmc
pop
test
iret
inc
sbb
scas
(bad)
fcomi
js
push
popf
scas
inc
movs
fsubr
dec
xchg
dec
add
add
push
mov
fwait
xor
cmps
xchg
das
push
call
cmp
call
xchg
pop
jmp
call
int3
pop
sub
in
hlt
mov
cmc
xchg
mov
cdq
jne
dec
mov
imul
lods
sahf
dec
mov
inc
add
pop
arpl
int
mov
pop
push
xchg
mov
call
jp
arpl
cdq
test
inc
sbb
lock
cmc
mov
jl
xor
outs
movs
ret
ins
test
iret
add
stos
jb
stos
jecxz
jne
push
and
sub
icebp
fist
adc
icebp
mov
mov
test
inc
sahf
cmp
mov
data16
inc
call
(bad)
gs
lods
cmp
cli
mov
mov
stos
bnd
ins
push
or
sar
and
lea
ret
mov
fmul
test
shl
iret
aad
popa
xchg
lods
sti
jmp
push
inc
popf
retf
mov
fnstenv
xor
out
mov
add
in
push
mov
popa
in
mov
test
mov
mov
in
cmp
lds
bound
jecxz
popa
popf
rcr
addr16
fwait
aas
xchg
xor
add
mov
xor
test
fs
add
adc
retf
pop
pop
xchg
jmp
popf
(bad)
jmp
cli
xchg
test
jae
xchg
add
sbb
fisubr
add
push
sub
mov
in
(bad)
pop
test
xor
sub
pusha
mov
sbb
mov
xor
push
or
std
jle
cmp
or
add
xchg
int
stos
xchg
xchg
jecxz
pop
cmp
xchg
mov
pusha
outs
lahf
ret
pop
mov
fbld
jns
push
or
aam
inc
ret
sahf
push
or
int
push
mov
mov
jae
sub
or
mov
mov
adc
adc
push
enter
xchg
retf
jecxz
add
(bad)
mov
daa
pop
push
or
fmul
ret
and
xchg
dec
sbb
jne
lds
push
clc
sub
adc
nop
dec
xor
fisubr
mov
cld
stos
dec
pop
ins
fcomp
mov
retf
jge
mov
stos
lds
stc
add
xchg
fimul
(bad)
(bad)
(bad)
xor
movs
scas
push
pop
mov
lods
push
pop
sbb
popa
mov
cld
or
add
out
mov
sbb
add
dec
sub
sbb
push
ror
adc
mov
xlat
ins
fst
sbb
mov
sbb
(bad)
(bad)
adc
jecxz
fisubr
xor
clc
push
sbb
jae
cdq
cmp
and
test
cmc
hlt
mov
or
mov
fimul
add
je
imul
inc
inc
dec
ret
std
xor
pop
adc
imul
inc
retf
cmp
retf
(bad)
mov
(bad)
(bad)
ficomp
fisub
idiv
aam
dec
pop
add
cmc
jae
fist
int
psllw
movs
(bad)
xchg
mov
stos
fstp
das
xchg
fisttp
stos
xchg
sti
adc
mov
push
repz
xor
movs
push
mov
jne
mov
push
clc
xchg
ror
(bad)
jmp
lds
sub
sbb
dec
jns
(bad)
stc
mov
sbb
test
or
imul
ins
mov
push
inc
fisub
out
ror
pop
in
jb
std
stc
(bad)
imul
jb
push
sbb
or
sub
cmps
add
xchg
mov
std
and
push
xchg
mov
add
inc
int3
inc
jle
adc
sar
mov
jge
ret
cmp
(bad)
adc
or
pop
dec
and
or
test
mov
jo
retf
(bad)
xchg
dec
and
loop
dec
fwait
jnp
shr
mov
dec
into
sbb
xchg
into
arpl
push
or
int
push
cmp
sbb
sub
hlt
sbb
cmp
add
pop
jae
mov
movs
push
aad
retf
out
mov
jge
adc
and
jae
jg
mov
fs
xcrypt-cbc
cmps
xlat
add
inc
pop
mov
jo
jmp
out
les
sbb
inc
inc
test
int3
(bad)
ja
mov
fldcw
cmps
jnp
call
inc
xor
jb
sbb
mov
xor
dec
inc
mov
fistp
test
mov
fisubr
xchg
pop
mov
and
pop
cmovno
adc
cmps
les
jno
xchg
sub
cdq
dec
xor
jmp
and
add
jg
pop
rcl
fwait
mov
jne
mov
jne
xchg
icebp
fistp
call
xchg
pop
pop
adc
push
mov
ficom
sub
xchg
ins
mov
and
aad
mov
add
pop
jl
pusha
test
ficom
sbb
jo
mov
pushf
repnz
cmp
or
mov
inc
pop
ss
add
jge
xchg
sub
xor
jae
inc
and
mov
aaa
adc
or
cmp
sub
xchg
dec
pop
mov
cwde
xchg
enter
cwde
jns
sbb
loop
cmc
or
push
adc
jle
pop
sar
pop
adc
sub
adc
jmp
ja
sbb
mov
ret
mov
jnp
lahf
shr
test
hlt
scas
jo
dec
cmps
jg
mov
lds
stc
and
(bad)
leave
sbb
add
mov
jmp
ffree
jmp
dec
in
push
mov
xchg
fcom
shl
xchg
adc
xchg
ins
mov
rcr
dec
dec
pop
jb
xor
mov
fcom
jle
cs
sub
cmp
pop
out
and
mov
or
cmp
jnp
daa
push
or
pop
ret
cdq
xor
test
popa
push
fidivr
cli
xchg
scas
call
(bad)
sahf
cdq
call
add
std
mov
sbb
push
cwde
push
or
fisubr
cmp
or
or
sbb
icebp
pop
adc
push
sahf
add
jl
pop
rcr
repz
cwde
in
and
(bad)
sub
cmps
fwait
aaa
hlt
cwde
adc
ret
add
xchg
mov
jno
fs
mov
fistp
shr
mov
mov
in
inc
(bad)
in
mov
xchg
test
sbb
mov
or
stos
in
retf
sub
sub
jp
cmp
cmps
pop
cwde
jp
das
loop
repz
jns
jge
mov
and
mov
lea
xchg
hlt
dec
sar
push
add
mov
push
jns
enter
cmp
enter
fdivr
jge
shl
inc
ret
cwde
cdq
and
cmp
test
sbb
mov
xor
xor
push
loop
stos
jns
test
dec
push
mov
iret
ret
pop
stos
or
scas
std
xchg
dec
test
lock
xchg
and
or
mov
test
mov
xor
ja
les
jp
mov
repnz
int3
loop
scas
mov
fucom
mov
jbe
arpl
mov
add
pop
or
inc
sbb
adc
cli
inc
aad
cmp
(bad)
sub
xor
xchg
xchg
or
pop
xchg
ja
mov
jno
shr
fstp
pusha
repz
cmp
and
adc
inc
mov
clc
mov
adc
dec
test
dec
call
stos
adc
retf
movs
ret
xchg
sub
sub
jmp
into
rcr
out
cmp
fidivr
fcomi
dec
mov
add
movs
int3
pop
sub
hlt
mov
test
out
inc
pushf
mov
in
cmc
mov
es
out
int3
add
ret
gs
xchg
mov
and
daa
clc
add
cmp
retf
lock
inc
sbb
aad
pusha
ret
repz
imul
add
pop
inc
adc
xor
xor
cmp
push
ins
sub
fisub
test
mov
retf
pop
out
movs
mov
ja
leave
cmp
jae
rcr
mov
push
or
mov
add
jl
loopne
xchg
stos
inc
mov
mov
(bad)
or
fst
pop
cld
add
clc
mov
sbb
std
and
test
or
imul
fs
mov
sbb
xor
xchg
lahf
loope
adc
and
outs
popa
call
cmp
loopne
pop
fidivr
pop
xchg
sbb
out
cmp
dec
sbb
dec
mov
push
cmp
and
jmp
clc
jmp
jmp
sbb
inc
call
pop
movs
jmp
jmp
push
inc
out
jnp
(bad)
mov
adc
xor
or
ret
dec
mov
imul
push
test
cwde
xor
mov
fucom
cli
mov
aaa
sub
leave
mov
dec
data16
pop
xor
inc
scas
ja
add
push
fcom
call
(bad)
pop
test
lods
(bad)
jno
pusha
(bad)
add
or
fwait
leave
jmp
rcr
add
inc
mov
sub
mov
xchg
sub
and
push
mov
push
jns
or
sbb
stos
gs
repz
cmp
lock
loop
je
dec
xor
test
shr
mov
daa
popa
mov
sub
fbld
mov
call
pop
retf
xchg
and
and
sti
mov
jno
out
pop
adc
add
add
pop
inc
test
pop
pushf
dec
and
ror
pop
iret
or
sti
push
test
ret
mov
leave
fucomp
mov
rcr
repnz
stc
xchg
add
cmp
adc
xor
popf
lock
jne
vsubss
add
stos
(bad)
adc
loope
pop
sub
pusha
mov
jmp
jecxz
fwait
xor
push
and
stos
jle
(bad)
or
pop
ds
push
xor
mov
xor
dec
or
pop
mov
lahf
out
mov
in
mov
xchg
enter
push
mov
call
fisttp
adc
sub
mov
daa
popa
mov
sub
call
pop
mov
pop
test
cmp
cmps
retf
xchg
clc
pop
mov
aaa
lock
ror
pop
mov
iret
inc
mov
xlat
leave
iret
xor
cmp
mov
call
(bad)
push
lods
push
push
cli
das
shl
push
cmc
test
stos
es
jae
mov
in
jmp
rcr
jno
add
and
(bad)
mov
pop
xchg
out
gs
nop
leave
mov
jnp
xchg
or
movs
loop
xchg
loop
inc
fsub
inc
ror
jmp
xchg
sbb
mov
mov
inc
mov
out
mov
push
xchg
fldenv
jmp
imul
jle
pop
gs
(bad)
pop
cdq
lods
lea
lds
aam
pop
pop
cwde
jge
mov
hlt
xor
cmc
lds
jns
fsubr
mov
pushf
pop
mov
cmc
or
cmp
pop
je
lods
(bad)
in
mov
nop
fnstsw
dec
pusha
lahf
jnp
arpl
add
mov
or
or
and
xchg
xor
retf
dec
loop
mov
push
sub
ror
retf
imul
xchg
sar
dec
sbb
retf
xchg
icebp
add
sbb
xchg
add
sub
es
jge
stos
mov
push
push
inc
(bad)
pop
jnp
dec
lods
(bad)
push
sub
arpl
or
push
pusha
pop
test
sub
jns
jo
inc
int3
cmp
sub
jl
dec
mov
add
arpl
sbb
addr16
jns
leave
repz
ins
je
nop
cmps
test
sub
inc
or
and
mov
int
(bad)
cmp
in
jne
xor
jecxz
mov
shr
mov
mov
out
aad
fsubr
pop
or
xchg
repz
inc
loop
mov
jns
clc
mov
or
(bad)
mov
add
mov
cmc
sub
into
cmc
mov
fadd
xor
mov
fstp
mov
rcl
mov
pop
mov
lahf
mov
retf
fucomp
mov
int
(bad)
icebp
mov
(bad)
mov
sbb
xchg
dec
mov
sub
leave
or
into
stc
pop
stos
xchg
push
adc
push
mov
test
mov
cmps
sbb
jmp
scas
inc
fwait
pusha
loop
or
push
cwde
mov
sbb
add
pop
mov
or
aam
pop
xlat
xor
test
ins
icebp
mov
pop
fidivr
(bad)
adc
bound
dec
sbb
pop
push
xchg
cwde
(bad)
mov
dec
pop
or
int
imul
sahf
dec
mov
xor
imul
mov
adc
jle
mov
mov
fist
add
jp
xor
cdq
adc
mov
cmps
and
mov
(bad)
test
and
dec
mov
in
loop
xlat
stos
test
fwait
dec
lods
push
adc
scas
aad
jne
scas
sbb
aaa
retf
ffree
pop
pusha
daa
push
dec
mov
pushf
fld
add
nop/reserved
das
sbb
lea
mov
push
push
inc
test
jle
cmp
sbb
arpl
arpl
cli
sub
js
call
or
leave
cmp
or
xchg
add
dec
out
(bad)
addr16
outs
xchg
mov
fisubr
pop
jge
adc
ret
mov
fwait
lds
and
sbb
mov
adc
inc
enter
xchg
jb
je
adc
ja
je
pop
daa
popa
lods
mov
and
inc
inc
retf
sbb
and
xor
mov
mov
fimul
add
sbb
mov
cmps
fcomp
add
ds
pop
pop
(bad)
iret
les
xchg
xchg
int3
retf
movs
pop
pushf
inc
stos
cwde
adc
fwait
push
loope
retf
ret
lock
cmps
mov
mov
popf
sbb
in
dec
(bad)
or
pop
or
les
popa
in
cmp
xchg
sbb
sub
call
push
aaa
jp
xchg
dec
int
pop
jns
push
pusha
mov
pop
mov
bound
fwait
out
test
das
rcr
push
mov
clc
jb
mov
rol
popa
ror
cmp
mov
sub
call
xor
lahf
(bad)
cmps
lock
or
out
pop
jl
push
xor
fist
add
inc
mov
test
daa
adc
iret
sub
loope
shl
mov
pop
or
jo
xor
test
repz
sti
mov
sbb
outs
cmp
popf
sti
arpl
popf
out
mov
jmp
pop
xor
call
dec
jge
shr
jne
dec
push
repz
retf
sar
cmp
fnstsw
mov
div
imul
mov
xchg
(bad)
in
clc
and
hlt
xor
gs
mov
inc
mov
loopne
inc
mov
and
xchg
jmp
in
xor
adc
jl
test
mov
(bad)
int
and
lds
fidivr
jp
dec
push
retf
movs
inc
inc
popf
stos
add
xlat
imul
sbb
xchg
(bad)
mov
aaa
imul
mov
daa
adc
inc
dec
sahf
dec
test
int
int3
call
xchg
dec
push
popf
and
add
pop
pop
or
pop
push
shl
(bad)
cmp
jp
ja
lods
mov
sbb
push
or
mov
ror
mov
sbb
nop
mov
out
mov
aad
mov
out
and
(bad)
pop
cmp
xchg
test
dec
xlat
cmp
push
sbb
or
ret
rol
xchg
loopne
xor
mov
xor
stos
push
mov
mov
pop
addr16
adc
popf
(bad)
push
cdq
inc
(bad)
or
push
mov
pop
maskmovq
add
push
mov
hlt
imul
sahf
adc
jbe
cli
mov
out
in
dec
cmps
ret
sahf
mov
cmp
aaa
popf
adc
jb
jns
xchg
jp
mov
lahf
jl
out
mov
sar
push
cdq
retf
inc
mov
mov
in
jmp
and
or
push
inc
shl
and
ret
or
inc
iret
pop
mov
pop
adc
pop
movlps
inc
add
shl
cld
shl
loop
leave
xchg
push
sbb
rcr
sub
fwait
add
test
scas
jmp
push
dec
into
and
(bad)
lahf
cmp
xchg
test
dec
data16
xor
in
es
fisub
stos
jecxz
sub
adc
inc
pop
push
les
jge
(bad)
push
push
fadd
mov
data16
sti
sub
push
mov
mov
cmps
inc
adc
mov
adc
jge
sub
pop
enter
(bad)
fstp
push
inc
xor
push
and
je
aam
push
jecxz
cdq
add
sbb
fs
dec
shl
aaa
mov
and
arpl
repnz
pushf
mov
push
pop
and
pop
es
clc
ds
jecxz
es
cdq
sti
cmc
rol
enter
xlat
nop
cli
cmps
mov
repnz
pop
adc
push
xchg
jl
push
stos
jmp
repnz
stos
or
scas
mov
jns
loope
jne
sbb
cli
les
push
pop
in
mov
ret
test
xor
test
scas
ja
cmc
pop
retf
push
push
or
fwait
pushf
xchg
(bad)
cmps
sub
mov
mov
xor
sub
and
scas
inc
(bad)
cld
mov
adc
popa
pop
inc
xchg
sub
rcl
or
loop
pop
hlt
retf
enter
test
xchg
sbb
nop
mov
xchg
and
outs
add
(bad)
(bad)
dec
xchg
mov
hlt
js
cwde
or
div
pop
pop
mov
dec
push
dec
mov
or
nop
ret
popa
in
shl
mov
pop
jle
cs
xchg
pushf
xor
mov
call
fwait
cli
mov
push
(bad)
mov
add
xchg
inc
pop
sbb
mov
fucomp
(bad)
push
int
xor
adc
movs
test
jns
sub
cli
retf
mov
xor
(bad)
push
ret
add
sbb
inc
xor
add
xchg
(bad)
imul
and
fwait
xchg
xchg
shr
test
fidiv
sub
xor
ds
xor
cmp
jo
push
(bad)
and
std
inc
mov
pop
inc
add
xchg
inc
cdq
or
adc
xor
movs
push
inc
mov
int3
inc
pop
movs
sbb
lahf
xchg
stc
and
call
cmps
lds
push
in
aaa
xchg
aaa
pop
pop
push
popf
mov
and
inc
add
mov
cwde
cmp
adc
cmc
mov
in
dec
jmp
shr
repz
add
(bad)
mov
loope
push
or
xchg
in
dec
or
movs
inc
dec
adc
jbe
add
into
lds
inc
and
sti
cwde
outs
movs
aam
enter
jae
add
aad
test
and
and
mov
xchg
jmp
popf
aad
je
dec
add
cmp
cmp
ret
test
xor
rol
xchg
ficom
mov
sar
leave
lods
pop
jno
leave
and
and
int
push
sub
xor
popf
jp
and
add
cmp
sbb
rcl
dec
(bad)
ss
dec
xor
jp
or
push
lods
xlat
push
fdivr
out
mov
xchg
ds
aam
nop
out
mov
and
jb
and
stc
xor
sti
ins
mov
idiv
push
hlt
mov
das
jge
std
pop
pop
test
rcl
mov
sbb
mov
(bad)
jl
repz
xchg
cwde
clc
retf
or
pop
xchg
mov
sub
add
sbb
call
nop
dec
rcl
cli
test
pop
pop
cld
test
imul
fisttp
dec
popf
retf
(bad)
(bad)
mov
dec
sub
add
push
or
leave
or
test
movs
adc
addr16
fwait
lods
(bad)
pop
mov
add
push
xchg
arpl
out
push
dec
jo
adc
loopne
add
dec
mov
cdq
fidivr
fild
mov
push
(bad)
xrelease
inc
sbb
push
gs
jle
ret
fld1
jb
cmp
popf
fwait
mov
push
or
adc
jg
adc
shl
dec
fsubr
mov
pusha
xor
adc
pop
in
ss
(bad)
mov
hlt
add
mov
sbb
arpl
out
adc
mov
and
iret
inc
stos
imul
test
mov
push
lds
pop
test
movs
sbb
mov
mov
mov
int
dec
popf
into
arpl
shl
aam
daa
sbb
xor
in
xchg
aad
sub
aas
push
cmps
push
push
sbb
jae
mov
push
test
and
inc
fistp
sahf
inc
pusha
lahf
jmp
jmp
xor
fwait
jmp
scas
popa
or
push
mov
push
sbb
add
inc
les
les
add
adc
jge
ret
push
imul
mov
cmp
lea
iret
cmp
pop
out
inc
cmp
(bad)
aam
cmp
mov
and
jae
jne
mov
mov
push
nop
enter
inc
iret
xor
cmp
adc
std
popa
push
and
stc
out
ja
ror
mov
dec
leave
xor
mov
dec
mov
jbe
add
jno
mov
sbb
mov
sbb
push
jp
jg
mov
movs
les
xor
shr
and
add
cs
cmp
dec
inc
mov
inc
fstp
loop
mov
xor
xchg
dec
popfw
sahf
sbb
cmp
sub
push
nop
ja
mov
(bad)
sti
and
cmp
add
cwde
data16
dec
aam
ficom
stc
sub
add
jmp
int3
out
ja
stos
cmp
call
lods
data16
popa
rcr
dec
inc
cmp
jge
ss
enter
jl
out
stos
jp
hlt
dec
mov
lahf
or
rcr
cmp
inc
std
jo
add
arpl
int3
push
pop
lods
pop
call
cmp
pop
and
fwait
outs
mov
mov
add
gs
rcr
repnz
neg
mov
sbb
test
mov
cli
sub
aaa
imul
stc
xor
sbb
cmps
xchg
test
stos
pop
xchg
test
ss
pushf
(bad)
stos
lds
aad
inc
sbb
fild
fisttp
jbe
mov
jno
aad
ror
xchg
fwait
test
xor
push
int
repz
rcl
inc
aam
js
pop
add
mov
xchg
sub
sbb
cmp
xor
call
add
call
sub
gs
out
rcl
add
push
pop
xor
popf
(bad)
adc
out
mov
int
push
and
xor
mov
sub
rcr
mov
mov
test
xor
cld
add
mov
fld
(bad)
pop
or
das
jmp
mov
or
jmp
lds
jns
aam
cli
lods
jmp
jae
sbb
push
cld
mov
mov
in
bound
ds
xchg
pop
mov
or
add
push
pop
(bad)
mov
jmp
push
clc
push
out
pop
pop
mov
or
mov
push
ja
pusha
xchg
inc
and
xchg
sbb
xchg
push
xchg
movs
in
in
dec
fcmovbe
mov
jl
fs
jle
fld
cwde
out
test
dec
xchg
mov
outs
xchg
add
or
(bad)
fwait
(bad)
repz
jne
mov
and
push
int3
daa
in
dec
es
test
ins
lea
popf
xchg
mov
mov
call
cmps
div
xchg
lahf
iret
fucomip
clc
cmp
jb
fwait
pop
in
jns
repnz
add
mov
dec
shl
pop
dec
icebp
cli
sub
(bad)
inc
sbb
mov
pop
stos
push
aad
test
push
cmc
mov
mov
push
inc
rcr
stos
cmp
stos
fcom
les
cld
xor
test
xchg
dec
xchg
fwait
xchg
pop
or
mov
pop
test
add
inc
test
jmp
pop
aad
and
popf
cmp
add
stc
adc
mov
rcr
fldenv
jmp
jmp
aam
repnz
jb
out
stc
(bad)
fcomp
into
fsub
ret
adc
leave
adc
pop
call
scas
gs
imul
rcl
and
inc
rcr
hlt
xor
jmp
mov
add
or
mov
inc
call
cld
stos
add
scas
inc
pop
aad
lods
xor
mov
xor
adc
xor
mov
mov
ss
mov
out
cmp
add
pop
das
and
movs
xor
pop
dec
mov
adc
test
cmps
adc
mov
sbb
das
retf
es
xor
dec
in
gs
sahf
adc
xor
mov
mov
pop
xchg
or
and
jl
shr
lods
(bad)
pop
test
mov
pop
call
shl
sub
xchg
xor
retw
inc
xchg
xchg
mov
test
mov
bound
jg
iret
in
jle
cld
add
sti
(bad)
movs
mov
and
pop
pop
dec
cwde
xchg
and
sub
push
fwait
jb
inc
cdq
in
bound
pop
sub
add
mov
push
or
rcl
adc
ret
xor
mov
jp
pop
test
(bad)
jle
inc
inc
xor
mov
sub
add
and
inc
pop
and
je
xchg
sbb
lock
jle
retf
inc
push
ins
sub
fwait
add
fstp
aaa
xor
dec
out
cwde
aam
mov
test
mov
pop
test
test
stos
vmovupd
pop
sub
xchg
add
jae
sub
cdq
lds
push
pushf
sub
add
dec
ja
out
inc
fwait
mov
neg
shl
push
xor
fs
mov
faddp
pop
rcr
mov
fist
push
out
fs
push
cli
in
mov
xor
xor
rcl
mov
mov
(bad)
sqrtps
inc
add
push
retf
mov
sub
xor
cmp
cmc
hlt
sub
adc
pop
mov
popf
push
bound
in
or
dec
cmp
stos
or
imul
rcr
cmc
mov
pop
push
push
loopne
shr
mov
push
pop
mov
imul
data16
xchg
dec
scas
jae
stc
shl
jge
pushf
repz
mov
mov
dec
bound
add
add
sub
xchg
stos
inc
mov
mov
lds
mov
mov
fucomi
cmc
mov
fwait
leave
jmp
int3
pop
and
or
cmp
les
test
pop
test
or
outs
mov
xor
popf
sub
pop
fidiv
cmp
shr
test
adc
ja
xchg
enter
or
adc
push
shr
mov
jmp
or
cmp
sti
inc
call
push
add
(bad)
mov
in
lods
hlt
inc
dec
lahf
retf
call
pushf
mov
pop
adc
jbe
add
cmps
mov
lock
fist
pushf
dec
and
pop
sbb
test
jecxz
pop
pop
mov
xchg
dec
cmp
jns
adc
mov
dec
mov
sbb
inc
scas
xchg
stos
jge
mov
add
cmps
fadd
(bad)
int3
cmp
pushf
mov
rol
fsub
inc
ror
jmp
nop
frstpm(287
or
and
stc
fmulp
and
call
sti
imul
mov
sbb
mov
mov
rcl
aaa
inc
xchg
fld
dec
mov
enter
mov
inc
inc
adc
gs
cs
aad
test
popf
mov
(bad)
adc
fstp
jg
imul
stc
pop
stc
sti
mov
imul
sub
mov
adc
mov
mov
adc
rcr
ins
mov
sub
jns
scas
push
cli
sub
ja
push
cmc
mov
mov
(bad)
pop
fucomp
jmp
ja
call
inc
pop
jae
push
addr16
lock
gs
jl
fistp
push
shr
and
mov
(bad)
js
sub
inc
fwait
pop
sbb
pop
jb
add
mov
jae
or
cdq
cli
jp
inc
cwde
data16
push
cmp
or
enter
pop
ret
(bad)
mov
inc
cdq
(bad)
xchg
(bad)
test
dec
mov
shr
sti
call
inc
dec
sahf
cmp
jbe
mov
fld
jo
shld
aas
mov
add
mov
movs
scas
cmp
int
call
add
dec
cli
xlat
jno
sbb
jns
pop
mov
rcr
sbb
sub
sahf
mov
ror
sbb
int
imul
dec
mov
retf
popf
xchg
out
enter
mov
dec
bnd
not
ficomp
fnsave
pop
movs
pop
push
push
mov
mov
sbb
ror
div
leave
loope
lds
mov
mov
add
add
adc
aas
inc
adc
and
test
push
cdq
cmps
repnz
movs
mov
lahf
ins
or
inc
fbld
dec
popf
mov
cs
aas
jae
inc
mov
dec
push
or
mov
int
inc
cmp
ret
scas
mov
movs
dec
jmp
shr
xor
xor
(bad)
mov
cmp
lahf
retf
ins
mov
mov
mov
dec
sbb
add
mov
and
or
out
sbb
les
shr
loope
push
mov
pop
(bad)
stc
pop
sbb
sub
jb
mov
dec
add
sub
pop
or
add
xchg
popf
sub
test
stos
ret
cmp
(bad)
pop
cmps
pop
js
test
aad
(bad)
jge
jg
leave
jmp
xchg
jge
dec
lods
scas
popa
or
adc
fdiv
fwait
add
inc
out
shr
test
inc
cwde
dec
xor
xchg
push
loope
sub
(bad)
jmp
add
(bad)
sti
sub
fnstsw
dec
add
dec
xor
xor
xchg
push
hlt
test
iret
adc
inc
cmc
hlt
mov
adc
adc
cs
or
pushf
div
inc
test
add
in
and
cmc
pop
lock
add
fimul
cli
and
pop
(bad)
lods
leave
fsubr
aad
inc
sbb
mov
sahf
call
jp
or
cmps
dec
pop
inc
sbb
xchg
(bad)
pop
or
pop
aad
adc
xor
(bad)
xor
xor
in
rcl
leave
jnp
dec
inc
pushf
or
cmp
push
retf
jns
pop
adc
sbb
xchg
jge
arpl
cmove
rol
dec
(bad)
ds
or
sub
stos
inc
int
jns
cli
jle
mov
ret
call
inc
cdq
enter
rcr
dec
add
cmps
mov
std
mov
dec
rcr
pop
push
or
push
lea
ss
mov
mov
pop
pop
rol
icebp
jno
test
lahf
jg
jno
add
lods
jo
test
sbb
cmp
(bad)
add
aam
xor
leave
int
jns
dec
inc
xchg
(bad)
stos
pushf
retf
jns
push
sti
mov
pop
leave
dec
jmp
sub
xor
(bad)
jmp
(bad)
and
or
sti
xchg
add
push
pop
enter
(bad)
pop
sbb
fwait
lods
(bad)
ja
int3
in
js
lods
inc
inc
mov
leave
pop
cmp
pusha
js
fidiv
xchg
xchg
loop
xor
or
sub
and
movs
sbb
or
mov
pop
xchg
call
lods
js
scas
ret
push
sbb
mov
push
fwait
pop
cmps
mov
out
or
cmp
or
int
aas
inc
fmul
sbb
fbstp
or
pop
mov
inc
sbb
jno
mov
pusha
lds
enter
xor
sbb
add
fsubr
xor
mov
mov
sub
xlat
addr16
clc
out
je
sbb
push
dec
ficomp
dec
mov
ins
test
inc
data16
mov
in
test
sub
cmps
jne
gs
mov
push
ja
das
xchg
dec
lea
lahf
xor
iret
stc
mov
bound
jbe
pop
(bad)
js
das
loopne
add
ins
jl
xor
push
or
mov
daa
xchg
xor
add
sub
adc
dec
int3
adc
movs
fidiv
mov
inc
push
int
push
and
cdq
(bad)
jmp
sbb
sbb
mov
inc
lea
inc
xor
dec
nop
jmp
loop
pop
cmp
loop
std
fnstsw
xchg
dec
inc
popf
push
add
xor
repz
xchg
sahf
dec
lahf
retf
xor
push
mov
(bad)
ret
mov
cdq
pop
pandn
push
push
dec
test
test
(bad)
stos
stos
ja
rcr
call
xchg
dec
(bad)
js
pop
lods
mov
popf
ret
popa
repnz
adc
inc
or
sti
pop
stos
xchg
cmps
leave
call
or
(bad)
and
dec
ins
fdivr
aas
sbb
repnz
fs
jo
jns
js
retf
jl
clc
push
push
pop
jae
jo
rcr
sbb
pop
test
mov
aad
push
lea
push
cmps
fstp
add
cmps
sti
(bad)
fsubr
lds
imul
mov
aaa
inc
aas
loop
dec
mov
sbb
jb
movs
jge
dec
movs
xor
fiadd
repz
dec
enter
add
sub
fadd
mov
sha256msg2
dec
add
cmc
in
cld
dec
out
mov
rcl
retf
xchg
add
fsubr
imul
dec
adc
and
mov
enter
mov
(bad)
and
neg
mov
add
add
xchg
(bad)
imul
scas
dec
stc
sbb
add
mov
test
push
fdivr
sbb
inc
out
sbb
pop
sub
popf
xlat
jg
mov
bnd
les
test
inc
retf
dec
not
push
test
movs
push
mov
mov
ret
cmc
jmp
adc
test
ror
outs
xor
mov
popf
popf
sub
enter
sub
or
push
in
inc
push
mov
jle
in
mov
iret
stos
shl
xchg
ret
mov
ret
in
aas
xchg
iret
sbb
repz
sti
(bad)
adc
retf
mov
sti
je
adc
inc
add
add
mov
js
call
mov
dec
call
icebp
push
pop
xchg
fdivr
mov
jno
mov
cmp
xor
xchg
sbb
or
inc
push
sar
cwde
sub
in
call
(bad)
adc
lods
rcr
xchg
leave
cmp
push
(bad)
cwde
or
xor
in
loop
inc
xchg
sahf
aas
cmps
imul
shl
mov
out
rcr
cmp
adc
xor
push
push
xchg
int
pop
mov
push
mov
repz
sbb
(bad)
push
aaa
popf
xor
mov
enter
adc
(bad)
dec
sbb
(bad)
dec
mov
xor
inc
dec
mov
mov
xchg
sar
mov
sahf
xor
xor
(bad)
xlat
jo
cdq
add
push
in
adc
(bad)
and
pushf
retf
movs
mov
mov
dec
lods
fiadd
cdq
inc
mov
mov
addr16
dec
xor
adc
dec
mov
xor
mov
bound
cwde
or
ret
test
push
jmp
mov
shr
xchg
push
loope
cmp
js
add
stos
mov
movs
into
jo
(bad)
push
aam
ret
inc
mov
and
inc
(bad)
std
xchg
fwait
add
push
pop
xchg
clc
xor
mov
(bad)
mov
hlt
imul
jg
adc
or
pop
fwait
not
push
daa
enter
pop
pop
jle
fimul
xchg
aas
movs
dec
fist
ficomp
xchg
fistp
stos
(bad)
into
pop
sub
repnz
mov
add
(bad)
pushf
and
mov
shl
movs
mov
adc
call
sbb
jb
jle
and
add
adc
fild
imul
ret
(bad)
les
iret
dec
aas
cmc
lds
sub
xchg
ror
xchg
mov
hlt
dec
pop
push
in
inc
(bad)
pushf
ins
jo
fst
and
push
cmp
ins
dec
mov
mov
push
repz
add
enter
xchg
sbb
mov
scas
sahf
mov
aad
mov
sbb
in
jbe
xor
mov
rol
lahf
fisttp
leave
sub
add
rcr
cmp
xor
pop
adc
test
ret
mov
les
shl
stos
xchg
leave
push
(bad)
or
stc
add
fldcw
mov
int3
or
mov
je
sbb
shr
mov
fcomp
xor
sbb
inc
xor
outs
(bad)
and
adc
jns
dec
add
(bad)
gs
mov
or
(bad)
repnz
adc
mov
adc
mov
and
iret
inc
sub
jno
mov
outs
pop
mov
fisubr
pop
leave
mov
fucom
cli
mov
xlat
retf
movs
ins
or
cmp
or
call
adc
test
push
jb
xor
push
loope
cdq
lods
inc
sbb
jle
jp
add
jno
sub
and
leave
or
mov
cmp
mov
add
out
fisubr
test
xor
stos
test
test
adc
sbb
stos
cmp
jb
xor
cmps
mov
out
rcr
dec
inc
cdq
add
sub
mov
popf
xchg
mov
retf
mov
pop
pop
lea
xor
and
cmps
adc
cmp
jno
mov
add
cld
scas
enter
fnstsw
cmc
sub
dec
cmc
mov
lahf
sbb
ror
mov
imul
ficomp
fisub
jne
retf
mov
jne
jae
(bad)
mov
mov
cmp
shr
fdiv
cli
push
inc
fild
sub
pop
push
xor
pusha
bswap
lods
cmp
enter
jns
push
inc
pushf
cmp
dec
enter
pop
and
sbb
jo
mov
aas
lock
inc
sbb
out
mov
jae
xchg
push
mov
ficom
sti
and
xchg
retf
movs
ret
and
(bad)
lahf
outs
add
inc
int
cmp
in
bound
pop
out
enter
dec
loope
jb
(bad)
fmul
xor
jmp
cmps
mov
push
test
sbb
div
xchg
out
xor
xchg
jmp
stc
ds
scas
or
retf
inc
cmovge
cdq
je
(bad)
das
dec
mov
shl
xor
cli
fcmove
xor
pushf
dec
and
test
ficom
imul
dec
mov
xchg
sbb
mov
add
cld
lds
popa
mov
mov
ins
mov
stos
mov
or
adc
sbb
lahf
mov
aad
mov
ficomp
in
(bad)
in
jns
jo
and
and
(bad)
pusha
xchg
cmp
cld
jle
gs
or
adc
inc
imul
adc
mov
or
xchg
and
mov
popf
in
(bad)
out
fwait
cmp
sub
out
enter
or
out
and
in
mov
xchg
pop
jle
mov
push
adc
push
mov
xlat
mov
loopne
xor
pop
mov
imul
or
dec
jmp
inc
inc
sbb
sahf
cmc
sub
mov
xchg
addr16
mov
test
div
test
push
cli
fwait
dec
jmp
xchg
inc
pop
popf
retf
push
fsub
add
sbb
or
addr16
stos
xchg
fist
fimul
pop
inc
mov
test
fst
ins
mov
lods
jne
es
push
fistp
adc
test
fimul
xchg
adc
lahf
es
dec
(bad)
cmp
push
cmc
addr16
aam
repz
sub
mov
xchg
mov
push
(bad)
xchg
inc
in
mov
jne
cdq
out
jl
out
mov
xor
cmp
lea
imul
push
pop
pop
push
test
pop
stos
shl
xchg
push
shrd
cmp
and
ds
and
ret
lock
inc
sbb
outs
xor
sbb
gs
ret
repz
popf
jnp
mov
jb
pop
lahf
outs
shr
inc
pusha
fmulp
pop
add
fisttp
dec
rcr
xchg
mov
pusha
test
sbb
sbb
call
fimul
adc
pop
mov
lods
inc
sbb
mov
aad
loope
(bad)
jg
enter
cmp
sbb
clc
mov
adc
add
dec
xor
test
pop
jmp
popf
stos
ret
jo
push
lea
xchg
inc
and
jmp
mov
mov
pop
jle
(bad)
mov
mov
int3
loope
cwde
sbb
cmc
leave
sbb
adc
cmc
fsubr
popf
xchg
dec
inc
cmc
hlt
mov
lods
retf
add
sub
mov
dec
sbb
mov
in
test
psrlq
sbb
pushf
jge
dec
sub
add
rol
jl
hlt
sub
loop
xor
mov
lds
mov
rcl
dec
sbb
sub
(bad)
sahf
cmp
mov
jp
loop
arpl
ss
ficomp
and
enter
test
xchg
dec
xchg
push
mov
push
sbb
sub
sbb
out
pop
icebp
sbb
xor
fwait
leave
cmc
and
adc
jmp
and
add
enter
jle
rcl
outs
mov
push
fidivr
(bad)
push
sbb
sub
mov
jnp
popf
cmc
hlt
std
mov
sti
and
xchg
aaa
imul
inc
popf
pop
scas
and
imul
jae
out
into
add
xchg
ficomp
movs
imul
xchg
jmp
cli
sub
xor
mov
ret
mov
mov
add
test
aad
(bad)
sbb
fisttp
nop
xlat
xor
inc
dec
jecxz
dec
add
mov
push
sti
ins
mov
sbb
in
sbb
add
mov
fisttp
imul
fmul
mov
sub
mov
and
sub
sti
fstp
rol
xor
or
ds
adc
rol
and
mov
and
xchg
je
cmp
std
dec
lea
(bad)
dec
gs
cmp
cmps
sbb
call
sbb
repz
xor
test
in
aad
ret
push
xlat
mov
or
retf
mov
(bad)
js
dec
aad
push
fnstenv
int3
add
popf
inc
xchg
inc
ja
sub
cmp
adc
rcl
dec
jo
stc
sahf
push
hlt
cs
adc
leave
sar
cdq
gs
dec
ret
push
scas
xchg
xchg
mov
retf
fstp
sbb
mov
popf
int3
stc
inc
out
cdq
push
fistp
test
xchg
mov
push
mov
xchg
lds
ror
stos
mov
push
ret
or
pop
pusha
inc
inc
mov
sub
sbb
and
jmp
pop
nop
jl
or
and
push
fmul
js
or
cmps
adc
lea
xor
and
cmps
fistp
sub
cdq
shl
leave
jp
pop
sub
pusha
jecxz
hlt
je
and
push
and
int
js
pop
mov
pop
xor
jnp
into
pop
or
call
daa
scas
ret
imul
inc
gs
clc
cmp
aaa
inc
cmp
pop
cmp
mov
fld
sbb
rcl
cmc
mov
idiv
xchg
dec
sbb
mov
push
mov
mov
mov
sbb
scas
mov
xor
pushf
vpsllq
data16
mov
sbb
jp
fisubr
sub
(bad)
stos
std
xor
(bad)
mov
in
rol
sub
sub
inc
sub
(bad)
pop
xchg
fmul
and
xor
rcr
fwait
add
push
and
or
inc
rcr
in
mov
mov
mov
push
push
test
in
xchg
call
dec
movs
movs
frstor
ror
pop
xchg
sbb
lock
out
jmp
jecxz
and
out
cmc
fmul
mov
jmp
in
shl
pop
and
pop
or
adc
add
loopne
es
sbb
imul
mov
movs
mov
lods
inc
gs
mov
cmc
cld
sar
fs
fcmovnu
pop
sub
test
or
(bad)
push
test
fst
stos
inc
xchg
xchg
mov
dec
sbb
punpckhwd
daa
xchg
(bad)
mov
sbb
adc
popa
and
(bad)
sub
sbb
pop
cld
imul
scas
cmps
enter
pusha
jle
das
jg
pop
in
adc
out
repz
adc
add
movs
pop
inc
es
dec
aaa
sbb
in
dec
aam
fnstenv
dec
jb
jne
mov
mov
test
(bad)
sbb
sbb
or
(bad)
dec
jne
cdq
jns
dec
adc
bound
(bad)
xchg
hlt
mov
daa
dec
dec
mov
inc
iretw
mov
sub
popf
mov
popf
into
add
les
cmp
mov
repz
lds
jecxz
retf
retf
mov
ja
stos
lock
mov
fsubr
jae
aas
mov
pushf
jmp
xchg
xlat
stos
les
cdq
jnp
test
push
push
int
scas
inc
addr16
mov
fucomp
movs
mov
clc
sub
into
jo
fnstenv
or
fsubr
inc
cwde
imul
popf
fdivr
mov
mov
pop
jle
fcom
jbe
fmul
jnp
xor
(bad)
push
or
push
ins
pop
adc
cmp
cwde
hlt
inc
mov
fdiv
sti
adc
ds
push
or
cdq
sub
div
sub
pop
test
add
cmp
popf
adc
adc
(bad)
sti
xor
fidivr
jnp
push
adc
pop
sub
dec
mov
xchg
lea
mov
imul
test
jle
arpl
mov
je
loopne
(bad)
mov
jno
mov
fwait
sub
and
cmp
out
xchg
hlt
test
mov
lds
mov
dec
and
push
stos
mov
ret
and
retf
push
mov
std
inc
call
shl
icebp
add
and
sub
jns
adc
(bad)
or
fist
jnp
loope
call
in
sahf
jecxz
(bad)
push
fist
mov
xor
adc
cmp
push
xchg
dec
aam
jns
jnp
dec
test
or
jge
cdq
mov
aam
inc
and
jae
inc
shl
ret
lds
bound
pop
xchg
xchg
out
in
or
pop
pop
mov
hlt
je
popf
outs
mov
adc
ds
mov
in
dec
ret
push
pop
mov
inc
gs
call
mov
lds
cmp
cmp
dec
jecxz
(bad)
imul
mov
and
or
repnz
jno
clc
call
movs
shl
neg
out
sbb
jns
xlat
mov
mov
mov
push
in
mov
(bad)
dec
jg
test
in
pop
mov
push
and
mov
add
inc
xor
test
add
sbb
adc
mov
push
inc
mov
ficom
cdq
aas
outs
push
dec
cmc
and
pusha
sub
push
push
sbb
rcr
clc
dec
test
jle
fild
test
mov
mov
jnp
(bad)
inc
leave
or
mov
pop
out
xchg
and
sub
add
or
sub
outs
mov
sbb
sub
das
popw
mov
lock
push
mov
pop
iret
sbb
jnp
std
(bad)
fwait
pop
in
fs
adc
push
idiv
sub
lock
jecxz
and
jg
xor
ins
mov
sbb
xchg
dec
imul
ins
ror
and
lahf
sahf
sub
(bad)
pop
cmp
jmp
jnp
sub
(bad)
test
and
push
add
call
xchg
stos
inc
xchg
lods
and
cmps
pop
mov
pusha
or
icebp
sbb
sbb
ror
add
xchg
fimul
add
shl
dec
je
es
ror
push
in
imul
pop
jns
inc
xchg
imul
mov
add
mov
mov
bound
push
adc
dec
nop
bnd
add
xor
push
adc
repz
adc
pop
jp
arpl
int
call
xchg
xor
pop
and
fdiv
(bad)
sbb
sbb
je
inc
sbb
mov
ret
test
ret
fwait
mov
xlat
mov
ins
push
sbb
sti
or
pop
test
pop
dec
imul
cmps
pop
mov
jne
adc
mov
add
mov
and
xchg
push
adc
mov
mov
add
and
mov
ficom
or
movs
cld
mov
dec
adc
jl
mov
jno
shl
fxch
xchg
xor
mov
clc
push
mov
fldenv
sub
mov
pop
mov
cmp
dec
and
jmp
retf
pusha
aaa
loop
push
adc
push
dec
jl
fwait
mov
int
push
mov
das
jge
mov
add
inc
inc
jns
and
pop
jne
lahf
pop
fild
jnp
mov
lock
pop
adc
pop
movlps
xchg
mov
push
lea
dec
sub
dec
mov
push
mov
pop
stos
fsubr
mov
into
cs
adc
dec
adc
xor
push
jge
cmp
xchg
cdq
sbb
dec
div
pop
stos
xchg
int3
dec
lahf
fisttp
mov
mov
pop
cmp
ins
mov
lods
inc
cdq
and
lahf
xor
iret
stc
movs
les
cmp
and
cld
jle
inc
sbb
add
daa
push
sub
les
jp
cmps
pop
dec
mov
out
dec
pushf
loopne
pop
jnp
sbb
int
aaa
popf
mov
mov
xor
mov
mov
jne
cmp
daa
jmp
mov
pop
xor
stos
shr
repz
pop
div
ds
add
fist
inc
mov
jecxz
enter
sbb
mov
sub
cmc
mov
push
xor
call
in
stc
mov
add
lock
pop
enter
jne
mov
xchg
jmp
push
data16
fcomi
sbb
add
(bad)
retf
call
lds
(bad)
push
cmp
jmp
inc
push
mov
sub
jmp
xchg
out
loopne
shl
idiv
clc
je
(bad)
push
(bad)
cmp
ins
das
test
add
repnz
mov
sub
mov
mov
cmps
jnp
or
xchg
sbb
mov
mov
inc
add
xchg
mov
or
enter
jnp
test
dec
int
mov
mov
push
stc
clc
bnd
push
fistp
loopne
inc
sbb
jae
mov
jecxz
add
sub
in
mul
rcr
fist
leave
int3
dec
xor
xchg
mov
adc
xchg
xlat
or
int3
add
jmp
dec
sub
out
jp
mov
sub
retf
pop
rcl
xchg
mov
xchg
test
pop
repz
mov
out
test
mov
outs
std
pop
pop
(bad)
or
mov
leave
loop
cmp
call
inc
pusha
sbb
or
push
add
dec
cmp
loope
movs
ret
add
xchg
mov
lahf
out
or
clc
jb
sbb
push
push
cdq
enter
mov
adc
jmp
repnz
mov
adc
cmp
adc
mov
xchg
mov
mov
mov
loopne
sti
loopne
mov
jns
sti
mov
mov
(bad)
movs
adc
xchg
mov
cdq
jo
pop
adc
dec
xor
imul
pushf
retf
push
shl
mov
sbb
dec
push
add
jae
push
call
(bad)
fisub
jmp
sbb
js
scas
mov
mov
or
lods
jle
jp
jecxz
mov
mov
mov
push
fdivr
iret
scas
lahf
mov
inc
sti
and
adc
dec
mov
add
xor
nop
std
mov
sub
fbstp
out
push
test
sub
aaa
add
xchg
out
test
mov
lods
fucom
mov
dec
jge
fcomp
or
sub
scas
mov
mov
jo
jmp
rcr
xchg
ret
iret
dec
pop
mov
popf
idiv
adc
or
sti
mov
dec
or
adc
cmc
mov
(bad)
cmp
ins
cwde
mov
ror
inc
lds
mov
inc
arpl
push
es
push
inc
inc
inc
fst
out
sbb
and
rcr
clc
sbb
mov
push
in
push
jl
sbb
push
push
or
call
ror
xchg
mov
sbb
xchg
sbb
les
lods
ret
gs
jg
mov
movs
push
stc
inc
sti
sub
fcom
inc
and
push
dec
add
mov
xor
sbb
mov
fldenv
pop
aaa
mov
pop
popf
pop
shl
mov
xchg
ins
es
jne
xchg
out
push
mov
jb
rcl
xchg
enter
add
aad
inc
pushf
aas
imul
imul
or
dec
jno
cmp
inc
lods
xchg
inc
leave
jmp
call
(bad)
mov
or
aad
hlt
mov
mov
cdq
mov
xchg
ds
dec
push
xlat
cmp
ret
das
sub
mov
inc
mov
adc
pop
call
lahf
xor
jmp
stos
stc
dec
sbb
xchg
in
movs
jge
dec
pop
xchg
aad
or
movs
add
sub
jo
imul
xchg
jb
sbb
mov
aam
mov
mov
sbb
scas
ret
cmp
lahf
adc
(bad)
sbb
xchg
bound
imul
mov
aad
pop
repnz
pop
add
cmc
mov
push
fdivr
in
mov
or
int3
mov
jge
out
mov
inc
dec
mov
in
cmp
dec
dec
mov
daa
sub
test
mov
ficomp
test
cmp
and
and
out
sbb
in
lods
es
sub
sbb
test
call
bound
cwde
jmp
and
push
dec
iret
push
stos
lods
mov
xor
retf
fmul
inc
and
pushf
xchg
xor
cwde
dec
pop
pop
push
xchg
pop
sub
dec
addr16
std
repz
mov
dec
std
mov
pop
scas
dec
(bad)
push
xchg
mov
cli
mov
in
pusha
jmp
popf
in
loope
lock
lods
scas
loope
out
js
mov
adc
pop
rcl
rol
rcr
jb
mov
jns
push
inc
xchg
leave
movs
inc
jne
add
pusha
jo
fst
pop
test
fbld
add
cdq
push
adc
(bad)
dec
sbb
sub
fdivr
inc
inc
xor
mov
int
pop
jl
pop
xlat
inc
sbb
jne
mov
mov
mov
movs
ret
aaa
lods
inc
test
adc
mov
pop
adc
mov
fs
jno
mov
sbb
outs
mov
test
test
sbb
in
clc
mov
adc
sub
jge
push
pop
imul
stos
or
stos
pusha
gs
fcom
push
int3
fisttp
sbb
xor
js
std
repnz
out
mov
and
lds
mov
aam
sbb
dec
int
dec
cmp
and
ja
and
jae
inc
jge
inc
push
int
int
gs
mov
dec
aas
(bad)
(bad)
iret
sar
mov
(bad)
bound
jle
xchg
xchg
jmp
cmps
in
xchg
dec
pop
mov
sub
fistp
iret
push
sahf
xor
mov
imul
inc
push
adc
pop
cmp
call
adc
rol
xchg
fimul
imul
mov
xchg
pop
leave
std
or
lahf
mov
ficomp
scas
out
mov
fs
(bad)
pushf
or
fistp
inc
sbb
cmp
stos
repnz
adc
test
jl
ror
sbb
add
das
ret
pop
pushf
sub
cmp
ret
pushf
mov
mov
cld
test
inc
pop
inc
xchg
loopne
jg
fild
mov
push
push
mov
dec
pop
std
lock
out
xchg
das
pop
push
out
mov
xchg
in
jnp
push
jns
xrelease
or
cmps
std
icebp
sub
push
jmp
mov
mov
cmps
mov
fdivr
jbe
lods
add
push
push
int
repz
or
pop
xlat
bound
shl
rcr
adc
adc
ffreep
push
add
and
leave
into
enter
bound
in
jns
ror
pop
retf
inc
push
push
out
rcl
pop
push
bound
adc
es
arpl
and
push
(bad)
div
lock
out
aas
cmp
mov
pop
mov
jbe
cwde
movs
mov
clc
test
dec
frstor
scas
xor
and
ret
fistp
hlt
pushf
(bad)
mov
aaa
outs
retf
pop
pop
aad
add
jecxz
lahf
jbe
sbb
pop
rcr
fidiv
sub
daa
push
inc
or
xchg
outs
into
mov
iret
ins
mov
pop
std
call
cmps
inc
xchg
xchg
int
loopne
mov
inc
sub
xor
and
js
pushf
dec
jmp
dec
daa
jp
or
xor
or
cmc
iret
pusha
xchg
dec
xchg
dec
out
mov
push
fcomp
mov
lock
lock
adc
pop
mov
xchg
scas
mov
dec
js
hlt
mov
mov
rcr
push
mov
add
aam
push
pop
push
sub
jmp
aam
add
imul
mov
inc
(bad)
movs
push
fsub
xchg
test
call
mov
pop
test
xor
push
pusha
xchg
bound
js
test
cmc
or
dec
cwde
xchg
xor
inc
std
rol
cmps
or
inc
adc
dec
fcos
iret
out
cmc
icebp
(bad)
cld
sti
add
cmps
mov
sbb
mov
pop
mov
mov
lea
pop
adc
fdivr
fadd
sub
iret
cmp
push
sbb
xchg
or
dec
aam
sub
or
push
sbb
and
retf
jecxz
inc
inc
sbb
inc
sub
add
rcr
mov
fiadd
sbb
sub
sub
add
pop
ficomp
scas
mov
cmp
pop
fistp
ins
push
cmp
jl
jmp
and
mov
jnp
adc
add
add
addr16
rcr
loope
cmps
fst
cmp
scas
(bad)
std
stc
in
popf
inc
xchg
pushf
adc
and
sbb
or
and
jo
in
dec
(bad)
in
mov
add
inc
stos
adc
xchg
dec
push
pop
mov
fcom
mov
and
mov
xchg
push
(bad)
out
fmul
mov
push
sub
movs
or
retf
and
ins
cmc
mov
xor
cmp
sub
mov
xchg
dec
pop
mov
jmp
repz
fistp
dec
lahf
retf
jecxz
movs
mov
mov
lock
lds
dec
xor
retf
mov
sbb
clc
fistp
fcom
ror
or
scas
mov
dec
call
sbb
and
cli
test
push
xchg
jmp
pop
outs
les
inc
fstp
movs
push
mov
xor
push
and
mov
pop
scas
(bad)
cwde
sub
js
jg
mov
ss
mov
or
push
push
or
add
mov
rcr
mov
mov
mov
push
mov
cdq
sbb
in
mov
out
push
mov
xor
out
call
enter
or
xor
mov
rcl
cmp
dec
retf
nop
dec
daa
daa
fstp
sub
fisubr
in
dec
pushf
xlat
ror
(bad)
loopne
inc
adc
push
pop
add
pop
stos
popa
iret
ror
push
enter
sbb
inc
cmp
jle
pop
push
xor
inc
add
mov
lahf
add
cmp
xchg
push
dec
mov
xor
fsub
es
push
shl
and
je
adc
xchg
mov
and
mov
fsubr
mov
xchg
sbb
mov
cmp
push
jne
outs
loop
mov
push
stc
or
bound
or
sbb
sub
add
sub
jmp
popf
sar
pop
mov
push
mov
in
jbe
sbb
mov
sub
(bad)
cmps
mov
and
cwde
dec
inc
push
xchg
imul
jecxz
xchg
xor
or
sub
dec
sahf
xchg
push
pop
cmp
dec
leave
mov
stc
(bad)
aad
pop
ret
loopne
ror
cmps
(bad)
jne
xchg
lods
nop
loopne
mov
cmp
mov
retf
(bad)
jg
fs
adc
sar
arpl
push
mov
push
dec
mov
and
out
mov
mov
sub
out
(bad)
xchg
dec
les
adc
jmp
mov
daa
fcmovne
shl
adc
and
and
cmp
mov
retf
leave
mov
bound
xchg
push
mov
je
out
idiv
retf
std
sbb
push
pop
or
sti
stc
mov
fucomip
push
test
sub
(bad)
out
inc
fld
int
jmp
mov
mov
outs
aaa
popf
mov
pop
add
jecxz
adc
mov
retf
cmp
dec
pop
(bad)
xchg
into
adc
arpl
cmp
sub
and
repz
int3
retf
sbb
out
mov
adc
ret
mov
rol
fsubr
sbb
movs
mov
cwde
jmp
nop
xor
cmp
push
(bad)
in
sbb
std
mov
idiv
mov
popf
arpl
add
sub
mov
or
rcr
jne
add
mov
mov
ret
add
mov
push
xchg
pushf
in
pusha
js
lods
popa
xchg
(bad)
mov
stos
aas
lock
adc
jo
das
loope
push
cmp
sti
lahf
movs
test
pop
test
mov
(bad)
ja
fbld
mov
mov
lea
imul
adc
jle
cmp
stos
aas
cmp
test
mov
and
jb
mov
jbe
mov
mov
in
int
fimul
xchg
xlat
jmp
scas
push
pop
adc
cmps
mov
dec
stc
scas
std
pop
pop
sub
leave
iret
inc
sbb
xchg
sbb
mov
pushf
jmp
and
les
push
cmp
mov
mov
scas
pushf
mov
pop
popa
stc
cmps
jmp
jecxz
mov
sbb
sub
sar
or
pop
nop
jbe
fidiv
fnstenv
inc
cld
repnz
call
mov
enter
inc
sbb
add
pop
xor
cwde
dec
cmp
mov
movs
ret
xor
aaa
mov
adc
test
and
retf
xchg
call
cld
mov
pusha
push
fwait
adc
ins
fnsave
push
pop
ror
int
imul
sahf
dec
je
xor
mov
lods
mov
inc
(bad)
mov
pop
pop
pop
jmp
clc
ds
mov
clc
dec
or
ins
push
repnz
lock
in
leave
iret
inc
xor
jmp
and
jno
les
push
test
jb
call
fucomp
push
dec
sbb
stos
push
cmp
test
xchg
cwde
aam
inc
push
loope
jb
mov
stos
hlt
mov
mov
jns
mov
shl
adc
cmp
lahf
cmp
test
or
loop
(bad)
std
rcr
inc
stc
xor
add
fld
mov
cli
test
repnz
(bad)
out
jle
fistp
jno
dec
push
fimul
std
inc
into
cmps
iret
xchg
fild
fisubr
ins
jb
push
fidiv
int
push
and
jle
inc
gs
push
fcomp
out
push
aad
arpl
adc
cmp
mov
jmp
sub
xor
and
cmps
cmp
loope
xchg
iret
ret
mov
pop
adc
xchg
inc
sbb
(bad)
mov
mov
adc
mov
jg
cmps
mov
adc
mov
dec
and
adc
test
and
dec
stc
jne
lods
jmp
(bad)
jg
or
retf
cmps
sti
scas
mov
sub
inc
movs
out
xchg
(bad)
push
cmp
mov
repz
inc
mov
stc
pop
or
sub
push
xlat
outs
loop
mov
push
inc
bound
jmp
pop
mul
or
sbb
js
pop
xor
jp
sbb
neg
out
adc
mov
push
lods
mov
out
sbb
cmp
jecxz
jmp
(bad)
mov
sub
jge
xlat
push
mov
adc
retf
push
mov
and
(bad)
mov
ror
mov
(bad)
(bad)
mov
clc
inc
or
inc
jl
sub
dec
xlat
jne
adc
arpl
cld
inc
or
push
cwde
retf
int
ds
dec
adc
fbld
retf
inc
sub
adc
jmp
in
jae
daa
iret
add
loop
pushf
or
add
aam
iret
mov
mov
pop
fld
sub
mov
ja
dec
inc
call
cmp
push
mov
mov
ficomp
cmp
sbb
in
sbb
aas
cmps
adc
(bad)
aad
pop
mov
rol
fist
mov
inc
call
das
mov
outs
add
loope
fnsave
popf
leave
pop
enter
enter
loope
dec
int
out
jecxz
inc
push
data16
push
dec
lea
push
mov
mov
add
push
sub
xor
loopne
xlat
mov
inc
repz
dec
and
jne
pop
dec
aaa
push
retf
ret
mov
and
dec
pop
push
lods
add
adc
call
push
retf
fnsave
dec
mov
in
adc
ins
push
xor
pop
stos
cmps
pop
outs
fstp
sub
movs
xchg
dec
shr
push
mov
sti
pusha
push
cmp
mov
in
popf
dec
inc
sbb
jmp
lds
jnp
push
hlt
fcomp
call
in
inc
sub
cmp
out
mov
icebp
dec
ret
xchg
push
mov
aaa
xchg
mov
and
pop
mov
(bad)
outs
bound
lahf
(bad)
pop
fdiv
pop
jb
fwait
out
push
into
out
popf
mul
sub
cmp
jns
jle
int
mov
mov
stos
dec
cdq
neg
mov
stos
rcr
pand
inc
pusha
je
pop
jns
inc
fist
or
inc
rcl
fucomp
pop
cmp
scas
push
adc
pop
movs
push
dec
sbb
lock
inc
sub
cmp
dec
mov
sub
cmp
push
ret
mov
xor
(bad)
sub
cdq
push
dec
mov
rol
pop
idiv
ret
inc
and
add
icebp
pop
(bad)
pop
pop
push
jmp
mov
fdiv
mov
stos
xor
sbb
psrld
popf
push
pop
jecxz
jmp
repz
into
xor
add
add
xchg
int
inc
mov
mov
push
jmp
fwait
imul
outs
mov
dec
add
pop
mov
sbb
in
xchg
inc
jmp
sbb
retf
mov
fsubr
mov
shr
mov
adc
push
stc
inc
jae
mov
loopne
cmp
call
iret
fwait
dec
dec
cdq
mov
ss
xor
nop
iret
bnd
push
cwde
(bad)
loope
sbb
stc
sub
out
mov
sub
popf
xor
cdq
jno
(bad)
cmc
mov
popa
mov
xchg
add
sbb
cmp
aad
fst
jp
or
jns
ror
stos
fcmovnb
adc
mov
sbb
fcom
and
mov
test
das
scas
(bad)
jno
sub
int
mov
test
mov
mov
jecxz
mov
ror
loop
jp
mov
out
test
xchg
jp
mov
ins
out
xchg
and
fdiv
std
fwait
cmp
out
les
sbb
cdq
xor
sbb
add
jbe
std
cmp
xchg
repnz
pop
das
or
adc
add
cmp
fsub
loope
mov
xchg
jae
sbb
(bad)
mov
adc
imul
xor
fnstenv
dec
(bad)
sbb
mov
test
adc
xchg
mov
clc
jmp
bound
push
cmp
cmps
cmp
mov
cli
xor
ficomp
add
retf
call
pop
in
jb
(bad)
loope
shr
push
and
test
push
jns
jle
inc
cli
or
mov
pusha
out
or
pop
jnp
in
jmp
cld
retf
mov
pop
push
sub
idiv
pop
ja
pop
lahf
frstor
aaa
mov
fdiv
(bad)
push
test
rcr
sbb
loopne
push
lds
xor
ror
push
(bad)
xor
add
inc
jns
inc
idiv
dec
ret
inc
xor
adc
(bad)
xor
fwait
sti
add
sbb
mov
cmps
pop
mov
jno
cld
jg
xchg
pop
sub
inc
clc
lds
lock
xchg
mov
or
mov
pop
mov
mov
sbb
out
retf
fucomp
je
fild
mov
mov
je
sub
sbb
add
out
popf
or
pop
stos
jne
(bad)
mov
add
shl
adc
ret
test
repnz
ss
aas
cmps
sub
add
adc
add
inc
sbb
sub
jo
test
push
stos
clc
jns
nop
xchg
pop
scas
stos
or
pop
je
(bad)
cmps
iret
lock
rol
add
inc
(bad)
cld
adc
pusha
fisttp
xchg
sti
mov
f2xm1
lds
fisub
sub
mov
repnz
or
or
xchg
dec
or
jl
mov
cmp
add
inc
sahf
pop
out
popa
clc
ret
jl
jg
fbstp
test
pop
mov
mov
in
ja
and
fsubr
push
add
imul
mov
aaa
jb
sub
(bad)
arpl
or
mov
pop
test
mov
jne
popf
icebp
fcmovne
in
sbb
and
fbld
aaa
je
or
inc
xlat
push
add
jmp
mov
dec
sbb
jl
cmp
retf
jmp
rcl
pushf
and
add
or
push
in
or
fild
mov
add
lahf
fidiv
test
fwait
push
cwde
out
jmp
fld
pop
xchg
lea
mov
jb
fdivr
dec
movs
fldcw
clc
add
fisttp
or
add
aas
loop
dec
mov
sbb
jb
movs
jge
dec
mov
into
jae
cmp
nop
clc
aam
push
mov
and
out
cmp
call
inc
cdq
jmp
xchg
in
in
popf
ret
call
pop
repnz
cmps
cli
xlat
ret
xor
mov
fstp
mov
cmc
pop
push
loope
gs
dec
cmp
inc
cmp
mov
push
mov
mov
fst
retf
xchg
push
adc
int3
cmc
push
dec
fcom
and
loope
int
jns
gs
pop
rol
call
mov
dec
test
or
ret
cdq
push
push
out
sahf
test
cs
mov
mov
adc
add
or
push
aad
xchg
daa
push
xor
imul
adc
mov
fwait
xor
pop
fwait
adc
mov
xstore-rng
cmps
inc
rcr
(bad)
mov
adc
mov
push
push
mov
rol
jecxz
cmps
mov
out
pop
test
mov
inc
fld
jl
cmp
mov
cdq
push
pop
sbb
jge
outs
pusha
add
mul
add
lods
cmps
ret
ds
cwde
outs
movs
aam
add
stos
test
push
retf
loop
push
sub
fisub
repnz
push
adc
add
mov
add
iret
xchg
mov
xchg
stos
(bad)
mov
xor
push
sbb
mov
lods
mov
imul
ret
loope
lahf
mov
cld
xor
leave
(bad)
out
add
fnstsw
fisttp
loope
shl
xor
ja
adc
adc
rcl
mov
push
(bad)
(bad)
pusha
jo
sbb
(bad)
(bad)
sbb
pop
iret
scas
aaa
popf
mov
mov
or
inc
sbb
pop
aaa
bnd
daa
adc
loop
or
inc
mov
sti
jo
dec
pop
mov
nop
div
jae
pop
cmps
pop
push
adc
ror
push
mov
jns
jg
imul
pop
div
cwde
xor
push
mov
dec
out
outs
sub
push
fnsave
push
test
aad
mov
mov
sbb
cmc
js
test
dec
dec
xchg
retf
movs
cmp
xchg
test
aad
mov
fsubr
jge
sbb
push
repz
inc
mov
stc
pop
or
xor
outs
loop
mov
call
xchg
imul
loope
dec
lods
jl
out
sbb
pop
pop
(bad)
je
rcr
pop
rcr
out
adc
mov
lods
mov
out
sbb
cmp
jecxz
jmp
(bad)
mov
sub
jge
xlat
push
mov
adc
retf
push
mov
and
fisub
add
xchg
xchg
mov
ins
mov
lods
jge
add
mov
adc
sar
adc
sub
mov
cdq
retf
movs
ret
adc
fsubr
lds
push
pop
enter
jne
and
adc
lahf
fld
xor
ins
mov
sar
dec
inc
sbb
jno
ins
mov
cmp
aad
ficomp
aad
push
dec
in
lahf
pop
xor
sub
jbe
iret
jns
jae
and
(bad)
enter
out
mov
cwde
sbb
push
mov
idiv
add
dec
stc
sub
xor
jo
shr
dec
add
xchg
mov
faddp
jecxz
sub
add
xchg
cmps
(bad)
mov
adc
mov
sbb
(bad)
push
or
mov
fistp
xor
or
dec
jmp
fstp
and
mov
xor
inc
inc
xor
cdq
push
pop
add
clc
and
inc
inc
(bad)
push
mov
push
jo
fidiv
inc
add
adc
rcl
sub
test
into
cmp
xchg
ss
test
xlat
test
pop
adc
aad
add
push
in
dec
cmp
ins
push
jl
jnp
mov
push
pop
pushf
jle
jge
push
mov
mul
jbe
gs
ss
int3
push
ret
sub
scas
mov
fistp
popa
inc
out
in
mov
stc
inc
xor
dec
adc
cmps
mov
scas
and
les
in
push
call
call
jo
out
adc
cmp
fwait
jo
adc
bound
and
mov
pop
lea
inc
mov
adc
and
cs
and
popa
mov
xor
jns
jle
xchg
xor
test
out
jg
lahf
cwde
cmp
pop
jmp
inc
pop
scas
lea
ja
xor
lods
xchg
add
fdiv
cwde
add
cmps
test
dec
pop
div
add
call
pop
popa
das
movs
cmps
aad
sahf
xchg
xchg
mov
int
lock
pop
(bad)
out
or
jl
push
mov
stos
cmp
movs
and
xchg
xchg
xlat
inc
push
inc
inc
push
lea
repnz
inc
repz
and
dec
mov
adc
(bad)
adc
jmp
adc
push
std
or
xchg
repz
lods
xchg
jecxz
pop
cmp
mov
daa
push
inc
or
xchg
outs
into
mov
iret
ins
mov
pop
std
call
cmps
inc
xchg
inc
xor
imul
fsubr
inc
sar
push
add
test
pop
and
sbb
ret
fisttp
push
mov
push
jmp
les
(bad)
out
mov
movs
add
adc
dec
push
iret
dec
pause
fild
pop
and
loop
xchg
pop
and
fist
adc
cmp
xchg
(bad)
adc
in
xchg
inc
or
dec
cmps
dec
hlt
mov
gs
push
mov
loopne
or
mov
in
(bad)
jmp
cmps
xor
and
in
retf
mov
jmp
lds
sub
addr16
hlt
jp
push
addr16
adc
mov
test
lea
cli
sub
xchg
dec
aaa
pop
shr
call
jp
enterw
push
or
mov
mov
dec
push
aam
dec
sub
inc
mov
aam
or
shl
inc
adc
push
pop
or
sbb
pop
div
iret
pusha
or
jge
add
mov
call
inc
lds
jg
ret
add
sub
cld
or
mov
ins
adc
rcr
sub
icebp
or
dec
sub
scas
or
cmp
inc
sbb
movs
retf
fdiv
push
pop
imul
ja
out
and
bound
ficomp
out
lahf
mov
clc
aaa
mov
jbe
mov
fwait
dec
(bad)
(bad)
adc
cld
mov
mov
pop
div
sub
push
push
jmp
repz
mov
mov
in
push
xor
sub
xchg
sbb
adc
or
pop
inc
adc
or
fwait
pop
das
pop
arpl
(bad)
dec
daa
or
enter
pusha
ins
and
push
lods
xor
mov
jnp
or
int
std
adc
js
push
mov
adc
jae
stos
bound
in
sbb
add
outs
cmp
push
mov
dec
into
jg
addr16
dec
nop
adc
rol
fbld
retf
xor
adc
mov
mov
push
xor
in
dec
ins
fldcw
jbe
imul
xchg
add
dec
aas
neg
cmps
push
pop
lock
aad
push
dec
out
cmp
shl
jno
jo
in
leave
pop
int3
pusha
push
(bad)
shr
bnd
xor
adc
mov
dec
lock
clc
xor
sti
push
xchg
shl
xor
ja
adc
scas
mov
test
sbb
rcl
mov
push
sahf
cmp
pusha
jo
adc
xchg
jo
inc
mov
cdq
pop
xchg
mov
mov
dec
inc
mov
adc
xchg
cld
lock
daa
ins
pop
or
mov
pop
xor
xchg
mov
add
pop
and
fbstp
jae
out
dec
cmps
retf
jecxz
daa
outs
jmp
pop
lods
clc
lea
ffree
add
add
jae
fsubr
shr
arpl
dec
xor
inc
test
sbb
ret
push
dec
xor
mov
mov
adc
mov
xchg
cwde
pushf
mov
lock
in
add
ficomp
addr16
test
call
test
push
vpaddusw
loop
mov
mov
mov
jmp
pop
mul
add
sbb
(bad)
nop
pop
pop
hlt
xor
jo
xchg
sbb
rcr
out
push
call
dec
xchg
js
out
imul
movs
mov
xlat
sbb
push
popf
iret
pusha
pop
or
aam
retf
cmp
sahf
xchg
add
or
loope
push
ficom
add
rol
(bad)
sbb
imul
add
jae
or
add
push
cmp
ret
scas
int
mov
inc
dec
add
sub
cld
mov
leave
mov
fsubr
imul
sub
movs
push
dec
jb
pop
sahf
push
sub
call
inc
and
lds
push
push
xchg
stos
jne
and
enter
ins
mov
repnz
sbb
not
push
mov
jbe
jns
push
ja
inc
mov
pop
arpl
fmul
lods
jne
cmp
sub
int3
repnz
cmp
clc
adc
shl
ins
cmp
mov
push
jmp
daa
cmp
sbb
test
xchg
mov
(bad)
xchg
js
inc
sbb
cmp
pop
rcl
into
pop
inc
inc
push
das
xchg
enter
xchg
mov
jp
adc
mov
mov
mov
popa
xchg
mov
sbb
mov
(bad)
add
cwde
ds
inc
movs
dec
pusha
lods
inc
fs
jno
or
push
aas
enter
arpl
aam
fisub
jns
out
cli
fidivr
mov
dec
and
push
lods
leave
xor
mov
mov
inc
fidivr
jae
mov
push
pushf
dec
(bad)
lock
fwait
dec
add
xchg
jmp
outs
ja
sub
xchg
mov
sbb
jecxz
lahf
push
mov
sbb
pusha
js
in
push
fdiv
cmp
jl
rcr
mov
ret
xchg
push
mov
clc
test
mov
pop
mov
ins
jo
pop
mov
pushf
jno
xchg
cmps
inc
cdq
enter
mov
hlt
js
or
inc
mov
pop
fwait
daa
adc
pushf
cmp
scas
push
fstp
cmp
sub
fisttp
and
cmp
jmp
dec
and
mov
pop
test
sti
and
cdq
test
mov
push
data16
ds
neg
cld
jecxz
pop
div
lds
repz
jnp
sub
out
outs
dec
mov
push
mov
sub
in
and
cmp
fild
push
xchg
retf
aad
adc
addr16
ficom
and
add
jae
and
lock
jg
mov
ret
sbb
ds
jl
rcl
outs
jno
sbb
mov
or
jp
retf
popf
adc
cmps
mov
test
rcl
and
out
xor
adc
cmp
fwait
jo
(bad)
push
or
imul
mov
push
jmp
aad
rcr
or
or
xchg
jg
sub
jb
fisub
retf
(bad)
loopne
inc
popa
ja
dec
jb
push
pop
inc
dec
(bad)
fisttp
cwde
jecxz
add
add
add
out
(bad)
nop
aas
mov
imul
mov
and
addr16
or
cdq
and
jae
pop
int3
xor
bound
push
cmp
xchg
dec
data16
xlat
dec
int3
inc
scas
push
pop
test
mov
xor
push
pop
pop
jmp
lea
xchg
jmp
fwait
dec
(bad)
(bad)
add
jns
adc
push
mov
or
xchg
sbb
in
lahf
daa
xchg
sub
dec
mov
or
gs
xor
mov
sbb
pop
mov
int3
not
lea
cli
inc
cld
test
push
bound
sbb
enter
mov
jecxz
fcom
inc
lock
sbb
mov
fsub
dec
pusha
and
cmc
fadd
lods
popf
jne
aad
pop
ret
loopne
ret
pop
xor
add
in
pop
push
jecxz
cmp
adc
add
test
or
pop
dec
leave
aam
xor
imul
test
push
clc
das
rcl
retf
fist
push
jno
mov
scas
arpl
push
or
into
or
fistp
pushf
(bad)
scas
push
neg
dec
mov
pop
(bad)
adc
movs
xchg
(bad)
in
loopne
mov
inc
pusha
dec
cmp
inc
jg
leave
mov
sbb
sahf
cmps
xlat
adc
sbb
add
hlt
gs
push
fisubr
jl
mov
jb
scas
and
ins
retf
add
inc
(bad)
fstp
pop
and
aas
xabort
add
xchg
inc
mov
jo
xchg
cwde
mov
(bad)
dec
daa
or
int
imul
mov
inc
mov
lods
popf
fisttp
pop
add
cmpps
or
pop
mov
lock
adc
loop
mov
ins
jo
pop
cmps
mov
adc
cmp
ret
pushf
xchg
sbb
mov
pop
stos
mov
adc
jne
sub
movs
push
push
repz
pop
popf
cmp
ins
mov
lock
in
pushf
out
ins
movs
pop
cmp
cmp
cmps
jb
or
xor
retf
mov
xchg
cmp
out
jns
sub
xchg
or
jmp
icebp
or
not
mov
loope
je
ret
pop
xor
jbe
cli
mov
(bad)
fbld
sti
inc
test
xor
fs
dec
sbb
jns
xchg
dec
inc
rcl
test
add
xchg
ficom
cmp
stc
mov
dec
pop
jg
rcl
fistp
push
mov
sub
mov
mov
xlat
ss
mov
je
pusha
xor
ret
cmps
(bad)
icebp
jbe
test
jns
dec
mov
xchg
sbb
ret
push
xchg
jmp
and
push
movs
fstp
push
fist
in
xchg
int
out
arpl
pop
jno
dec
push
sbb
push
add
idiv
push
jne
dec
xlat
mov
sub
mov
jle
dec
cmp
mov
sub
in
cmp
jg
enter
ins
cs
fwait
leave
loop
jb
mov
push
div
xchg
push
popf
ficom
cs
cmps
js
aam
leave
inc
retf
lods
dec
fsub
push
fs
xchg
jae
leave
inc
mov
cmps
jnp
and
push
cmp
add
icebp
jo
shl
push
rcl
xchg
aad
push
int
xor
outs
mov
mov
dec
sub
in
mov
mov
add
ins
cmc
out
cwde
enter
mov
ins
test
or
sub
xchg
sbb
xchg
ds
outs
in
scas
shr
call
aaa
stos
inc
test
xchg
ret
lods
cmp
mov
stc
or
jg
sub
sbb
mov
in
enter
mov
pop
xchg
and
inc
inc
pop
sar
int
jne
inc
in
repz
test
aam
fidiv
sub
fcmovb
sbb
in
jo
(bad)
call
loope
sub
js
sahf
sar
stos
jmp
dec
xor
add
test
mov
xchg
clc
cmp
add
cmp
int
mov
mov
bound
rcl
adc
and
cs
mov
pop
fisub
fisubr
test
or
or
mov
lods
push
ficomp
inc
pushw
lahf
push
pop
(bad)
push
idiv
push
mov
pusha
cmp
mov
mov
xchg
or
inc
fmul
movs
mov
call
cmc
add
add
xchg
in
mov
push
mov
mov
dec
xor
jmp
mov
jo
xchg
dec
pop
outs
fsub
cmps
fcom
sbb
mov
xchg
stos
enter
jnp
scas
dec
iret
mov
xchg
push
sub
mov
fild
pop
xchg
mov
sbb
ds
out
imul
les
aad
cdq
fidivr
pop
xor
push
mov
rcr
pop
addr16
mov
ror
enter
enter
xchg
xor
mov
dec
xor
imul
out
mov
sub
push
jb
and
jns
add
repz
xor
add
inc
sahf
cmp
popa
clc
enter
aad
das
jns
lods
outs
aaa
mov
mov
ja
xor
jae
(bad)
call
dec
lods
pushf
fstp
dec
xor
shl
xchg
lock
mov
and
lods
add
mov
adc
push
pop
cmp
ins
mov
int3
sub
ss
mov
adc
dec
fcmovne
xchg
push
mov
xlat
xchg
aaa
dec
aas
xchg
dec
sti
sbb
or
mov
in
fwait
ss
mov
cmp
sti
pop
and
or
xor
mov
loopne
jp
out
loope
jp
adc
xlat
sbb
pop
mov
mov
cmp
pop
pop
int3
fbld
add
sub
pushf
test
push
dec
retf
cmp
mov
test
or
xor
sub
or
push
dec
loopne
cmp
push
mov
xchg
js
or
into
mov
jno
add
das
pop
mov
ret
sbb
cld
xchg
out
call
pop
xlat
ins
cmp
push
mov
sbb
int3
xor
les
test
and
mov
sbb
test
adc
repnz
aam
xchg
sub
aad
(bad)
push
pop
push
fistp
cli
cmp
xor
xor
js
cmps
sti
push
fwait
leave
in
and
jg
sub
jns
sub
push
mov
add
mov
loopne
fldenv
sub
movs
push
out
fwait
and
(bad)
xchg
xchg
faddp
pop
push
mov
ret
sbb
hlt
mov
ins
mov
and
pop
mov
mov
jbe
jmp
popf
sub
(bad)
mov
jns
sti
mov
inc
jmp
stos
les
hlt
(bad)
nop
hlt
iret
pop
mov
shr
rol
or
jg
adc
in
cmps
ror
push
inc
std
cmps
mov
dec
or
push
in
mov
shl
or
test
dec
add
add
mov
pop
push
shr
inc
ror
scas
cmp
xchg
jae
push
inc
sbb
push
xchg
clc
jmp
mov
fs
inc
test
cmps
sub
mov
sub
mov
inc
cwde
dec
and
cmps
mov
imul
icebp
mov
mov
push
push
jecxz
dec
hlt
mov
(bad)
(bad)
movs
inc
rcl
fdiv
shld
aad
(bad)
sbb
sub
test
sbb
mov
dec
fsub
shr
adc
dec
lds
cmp
add
stc
arpl
cwde
sbb
in
aas
leave
mov
mov
movs
xor
xchg
xor
leave
in
dec
dec
pushf
dec
sub
mov
fwait
mov
hlt
hlt
mov
and
or
movs
mov
xor
adc
daa
retf
add
mov
test
jne
enter
or
inc
ror
nop
xor
(bad)
out
mov
mov
(bad)
call
jg
dec
loop
add
adc
mov
in
or
imul
test
aad
mov
fbstp
popf
adc
xchg
fs
or
adc
ins
push
push
out
push
jle
sub
or
outs
adc
ss
popf
xchg
iret
outs
nop
int3
add
fwait
repz
mov
adc
xchg
mov
adc
mov
jmp
hlt
mov
adc
shr
in
jg
iret
inc
call
sti
pop
mov
bound
movlps
sbb
ret
cmps
jge
jmp
dec
and
cmp
add
add
fwait
test
mov
push
out
sub
in
xor
fisubr
jmp
imul
push
(bad)
call
iret
push
add
movs
lods
shr
or
jne
push
mov
sbb
jmp
icebp
adc
adc
repz
ja
dec
sbb
mov
ds
inc
sbb
mov
pop
test
jns
ret
outs
imul
mov
mov
xchg
sbb
loopne
pop
in
mov
stc
mov
sub
sub
or
shl
popf
adc
pushf
pop
das
jo
imul
inc
xchg
enter
out
(bad)
adc
inc
inc
pop
adc
test
jmp
les
sbb
sbb
cmp
xchg
lea
aaa
mov
retf
bound
mov
cwde
xchg
ror
pop
cmp
xor
icebp
sub
add
or
dec
and
gs
sbb
inc
jae
retf
jb
aam
adc
jne
ret
pop
ins
push
aam
clc
push
inc
xchg
jne
(bad)
mov
rcr
pop
scas
lahf
aaa
jp
(bad)
js
mov
mov
sbb
ret
std
dec
xchg
jmp
int3
pop
xchg
imul
sbb
mov
sub
(bad)
cmps
(bad)
mov
jo
enter
pop
das
frstor
xor
aas
mov
inc
repz
aad
shl
mov
(bad)
fisttp
push
jne
or
lods
movnti
cdq
xor
in
jnp
lea
aaa
mov
repz
pop
cmp
add
rcr
clc
and
nop
xlat
dec
add
retf
xchg
push
mov
ficomp
scas
mov
jno
xchg
inc
and
adc
es
arpl
nop
cwde
popf
jge
ins
mov
lock
in
hlt
vmovntpd
lock
add
xor
test
push
test
cmp
and
inc
push
cld
pop
pop
scas
vpsubd
cmps
mov
addr16
sub
jo
rcl
ja
and
icebp
stc
mov
fidiv
xchg
inc
add
inc
js
mov
add
inc
out
sbb
sub
fidiv
push
mov
jmp
inc
rcl
mov
xor
outs
jecxz
xchg
fnstcw
ss
mov
pop
add
ret
or
fwait
pop
icebp
dec
lahf
test
xchg
mov
fmul
inc
ds
imul
mov
dec
sub
pop
dec
jp
pusha
or
ins
stc
mov
retf
xchg
pop
pop
push
test
lods
jno
push
lods
inc
mov
mov
inc
lock
inc
iret
test
nop
pop
push
jnp
mov
cli
or
(bad)
adc
push
scas
dec
push
inc
push
mov
int3
dec
frstor
mov
adc
jno
std
mov
jns
adc
inc
mov
aaa
or
mov
xor
mov
test
in
je
(bad)
(bad)
push
pop
xor
push
popa
xchg
inc
and
pop
jmp
fisubr
add
and
add
inc
je
cmpxchg
mov
int
mov
out
mov
or
arpl
arpl
push
ficomp
mov
movnti
or
(bad)
std
mov
imul
int
imul
push
mul
sbb
fistp
adc
add
jmp
scas
adc
xchg
dec
sub
jne
and
cs
retf
pop
dec
pop
mov
sbb
xor
mov
add
aam
mov
imul
pushf
sahf
pop
scas
cs
cld
out
nop
xchg
inc
push
in
movs
mov
sti
loopne
xchg
jmp
into
rcr
inc
mov
add
xchg
std
jl
(bad)
fmul
dec
sub
xor
mov
dec
aaa
mov
xchg
test
push
sub
aad
xchg
inc
(bad)
sbb
iret
jbe
lea
icebp
stc
mov
sar
aam
add
inc
je
mov
mov
mov
test
stos
(bad)
mov
dec
sub
vunpckhpd
sub
repz
les
mov
imul
add
and
jmp
mov
mov
or
sbb
(bad)
(bad)
int3
mov
fadd
xor
adc
out
xchg
adc
lods
xchg
mov
test
inc
push
mov
xor
lods
(bad)
adc
sub
pop
sub
xchg
retf
or
add
out
leave
inc
push
fiadd
aad
push
add
test
jle
stos
cmp
sbb
fistp
in
xchg
stos
(bad)
stc
loope
ror
test
rcl
enter
(bad)
js
add
daa
in
fwait
js
ret
sbb
xor
int3
jmp
pop
mov
lahf
(bad)
xlat
(bad)
mov
lea
dec
loope
leave
xor
mov
sbb
sub
es
scas
jl
or
aad
ja
int
aas
push
fisttp
mov
dec
jecxz
xor
cmp
dec
push
mov
mov
inc
add
cld
xor
repnz
pop
shl
jecxz
in
or
cmp
xchg
fmul
rcr
sub
push
test
scas
or
scas
inc
popa
scas
lods
(bad)
sbb
loope
pop
lahf
xchg
xchg
js
pushf
dec
and
inc
aam
sub
popa
cmps
idiv
cmps
add
imul
test
mov
nop
outs
sub
add
mov
les
push
bound
popa
mov
idiv
rcl
jo
lods
mov
fs
call
or
test
sub
ja
jno
std
pop
ficomp
rol
adc
add
mov
dec
jl
dec
xchg
mov
rcr
sub
dec
fnsave
imul
pop
(bad)
mov
lds
sahf
add
pushf
mov
enter
sbb
jb
sahf
mov
cmps
jmp
add
imul
and
shl
jno
sub
lea
dec
retf
mov
mov
push
mov
adc
cli
fild
mov
gs
dec
retf
mov
js
add
sub
xor
and
pop
ror
fnstcw
dec
jne
dec
jnp
idiv
jmp
ins
outs
arpl
xchg
mov
leave
jp
inc
and
jnp
xor
(bad)
mov
cmp
inc
mov
int3
jne
pop
loope
ins
xor
or
jl
adc
mov
call
out
pop
movs
(bad)
mov
cmp
mov
mov
mov
shl
arpl
hlt
or
or
xor
imul
call
xchg
movs
cmps
shr
push
test
movs
scas
ret
gs
jl
enter
jae
mov
mov
int
xsavec
sbb
inc
mov
call
mov
pop
ret
xchg
cli
sbb
mov
aad
add
xchg
mov
adc
cmp
xchg
retf
and
push
(bad)
div
lock
out
aas
cmp
mov
pop
mov
jbe
cwde
movs
mov
clc
test
dec
frstor
scas
xor
and
ret
fistp
hlt
pushf
(bad)
mov
aaa
outs
retf
clc
xor
out
jo
mov
addr16
sbb
push
aas
hlt
fnclex
xchg
shr
call
and
fisubr
gs
cmps
(bad)
xlat
cdq
add
mov
add
cmp
fiadd
add
dec
mov
mov
leave
mov
jmp
or
mov
push
cmp
push
mov
(bad)
int
xor
or
jne
xor
mov
into
add
pop
mov
push
mov
leave
sar
xor
and
push
shl
ficom
cmp
retf
daa
outs
cmp
cmp
push
shl
push
imul
aam
adc
sub
push
xchg
repz
sbb
iret
push
inc
scas
dec
jnp
(bad)
sbb
mov
(bad)
aad
xlat
and
inc
jmp
(bad)
inc
js
(bad)
in
or
out
daa
adc
dec
(bad)
dec
and
sbb
mov
(bad)
test
xor
push
mov
dec
lock
pop
sti
fucomip
inc
adc
or
mov
call
dec
imul
inc
or
inc
jmp
dec
xchg
ret
ds
cmp
jg
imul
(bad)
jnp
dec
cdq
pop
iret
add
mov
leave
inc
mov
inc
add
dec
xchg
int3
cwde
dec
xchg
mov
sahf
sbb
test
inc
mov
pop
and
xor
cmc
mov
sub
call
jmp
aad
sub
xchg
into
lods
push
mov
adc
push
imul
xchg
ins
pop
sub
in
js
xchg
sbb
sub
sti
inc
mov
aas
cmps
mov
(bad)
adc
xchg
clc
scas
dec
call
dec
and
adc
mov
xchg
popf
mov
jbe
xlat
mov
adc
push
iret
push
or
leave
aam
cdq
xchg
lds
int3
jge
mov
lods
shr
je
add
cdq
lahf
inc
retf
cwde
hlt
inc
sbb
adc
cli
mov
adc
dec
icebp
inc
call
aaa
mov
mov
inc
sub
ja
and
xchg
ds
aad
dec
hlt
sub
mov
(bad)
call
mov
bound
push
rcr
jbe
inc
mov
fs
mov
push
daa
mov
mov
xchg
cmps
scas
retf
mov
inc
add
enter
sub
dec
fld
jecxz
lods
adc
mov
mov
xchg
inc
fwait
(bad)
cdq
test
jl
shl
jge
add
dec
pop
rcr
cmp
or
(bad)
inc
cwde
dec
ret
dec
fcom
outs
imul
mov
mov
fist
(bad)
pop
out
mov
popa
cmc
ror
inc
leave
aam
inc
and
adc
mov
mov
mov
sbb
(bad)
loopne
stos
shr
xor
jnp
add
setne
and
sbb
xor
cld
arpl
in
ja
inc
add
or
stos
daa
and
fwait
dec
lock
stos
jle
push
mov
test
cwde
ss
sbb
scas
push
adc
push
mov
aaa
mov
xor
jmp
test
nop
add
mov
hlt
adc
call
cmp
test
sub
sbb
test
int
hlt
repz
push
add
ss
push
pop
in
hlt
add
mov
dec
(bad)
in
inc
scas
xchg
int
add
or
xchg
fldenv
popa
xchg
jmp
test
mov
ret
inc
cld
stos
cmp
(bad)
rcl
fdiv
xor
shl
(bad)
xchg
dec
xchg
and
dec
mov
sbb
das
(bad)
xor
popa
mov
lds
jmp
push
mov
push
loopne
fidiv
loopne
out
mov
mov
inc
movlps
sbb
or
mov
stc
xor
xchg
xor
fs
sti
mov
jno
sahf
pop
and
mov
iret
jae
push
cmps
fistp
shr
mov
idiv
fst
lds
adc
xchg
int3
adc
fisubr
in
mul
push
mov
sbb
pusha
js
fisubr
std
sar
aas
add
fisttp
daa
add
add
ret
xchg
push
pop
mov
xchg
inc
add
sbb
mov
dec
mov
jo
jnp
sbb
inc
pop
inc
mov
mov
mov
dec
inc
hlt
mov
mov
(bad)
dec
mov
popa
mov
mov
cmc
jmp
push
pop
or
and
mov
iret
inc
jmp
sti
pop
mov
jno
add
movs
mov
popa
cdq
dec
test
cli
sub
sbb
jp
cwde
push
out
jns
dec
xor
add
sbb
call
xchg
jmp
rcr
or
xchg
jnp
movs
enter
mov
repnz
(bad)
in
mov
(bad)
popf
sub
inc
mov
lods
jne
stc
retf
std
push
int3
lods
push
or
rcr
shl
inc
and
or
std
mov
inc
jl
sbb
test
adc
inc
mov
push
jmp
lds
inc
cmp
clc
clc
loopne
pop
out
xor
mov
sub
fcomp
or
iret
or
enter
mov
in
aaa
push
push
xor
jge
fild
popf
je
mov
mov
adc
or
mov
inc
jmp
aaa
shr
pusha
cmp
sti
jp
inc
mov
xor
fstp
or
xchg
ret
xchg
mov
xlat
push
push
or
je
dec
add
mov
fucomp
fs
jo
dec
ror
les
sbb
sub
in
xchg
lds
jnp
adc
out
mov
gs
lods
inc
sbb
push
cmp
fcomp
iret
scas
dec
mov
add
inc
inc
add
push
dec
les
or
ins
and
mov
test
repz
in
dec
pop
retf
sbb
lea
push
ins
jmp
(bad)
lods
call
pop
mov
jle
push
mov
fisubr
das
adc
pop
sub
neg
xchg
mov
popa
cmp
enter
inc
iret
fucomip
repz
or
xor
jae
jecxz
nop
(bad)
xchg
in
ja
into
cmp
fadd
mov
mov
mov
fs
sbb
enter
stos
inc
and
add
push
and
jg
mov
arpl
sub
xchg
test
bound
test
std
int3
ins
mov
mov
dec
outs
ss
outs
(bad)
push
mov
adc
nop
sbb
jmp
icebp
adc
adc
repz
ja
dec
sbb
xchg
jle
daa
inc
sub
xchg
iret
es
jecxz
pop
ret
fld
call
push
mov
xor
cmp
(bad)
jb
fs
add
push
or
sub
ins
inc
jmp
or
and
and
pop
mov
das
xor
mov
mov
add
push
mov
mov
pop
add
ds
fstp
jno
out
cdq
repnz
sub
rol
(bad)
sub
cld
or
mov
and
mov
jl
out
stos
les
push
stos
add
mov
inc
popa
das
das
popf
inc
call
shl
jno
shr
je
in
mov
repz
push
iret
add
jle
jne
fiadd
inc
sbb
arpl
adc
subps
lock
add
(bad)
pop
pop
not
jnp
dec
mov
fsub
in
scas
addr16
adc
sahf
ret
jbe
pop
adc
pop
jnp
fldcw
push
aad
cli
ficomp
dec
enter
ins
aaa
shl
int3
sub
push
mov
jmp
mov
das
or
(bad)
jne
(bad)
in
jns
dec
xchg
(bad)
cmp
(bad)
xor
or
sub
in
add
vmovupd
mov
jg
xchg
xor
sbb
addr16
add
fcomp
(bad)
mov
sub
inc
mov
(bad)
pop
xchg
fidiv
adc
out
arpl
and
movs
(bad)
test
mov
push
mov
xchg
lds
cmps
push
ja
sub
pop
fidiv
lahf
push
dec
data16
scas
fnstcw
pusha
push
jg
pop
hlt
xor
in
loop
inc
xchg
jl
cmps
push
add
out
adc
outs
idiv
xor
sub
fsubr
out
adc
fstp
cmps
xchg
iret
xchg
lea
(bad)
into
pusha
jo
add
jns
in
jb
jnp
fdiv
leave
or
adc
sbb
pop
shl
cdq
push
pop
cmc
ficom
mov
or
xchg
pop
pop
addr16
jb
clc
lock
sub
or
test
cmps
or
lods
sar
xor
cmps
mov
xchg
rol
push
xchg
push
(bad)
cmp
xchg
loope
fcmove
push
gs
ret
cdq
mov
enter
push
inc
cmp
(bad)
fild
adc
sbb
push
loop
stos
or
mov
in
cmp
mov
test
pop
xchg
outs
dec
sbb
div
jbe
loope
xlat
mov
adc
into
stc
mov
stos
mov
xchg
inc
repz
add
mov
shr
aas
icebp
jno
adc
movs
int
shr
sbb
cmps
ret
pop
aaa
shl
call
mov
mov
add
int3
test
sub
push
or
in
inc
xchg
add
rol
fdiv
hlt
push
inc
fdiv
mov
jge
lea
cmps
enter
fsub
ret
imul
mov
mov
jg
data16
cmp
ss
(bad)
iret
cli
inc
and
ds
xchg
neg
pop
pop
or
fucomi
mov
mov
mov
pop
xchg
sbb
xchg
ins
mov
outs
or
sub
adc
dec
sbb
push
cs
and
dec
pop
and
popf
mov
mov
push
lock
(bad)
mov
aam
and
pop
and
fcmovu
fst
mov
xlat
mov
mov
je
mov
jp
call
lods
jp
sbb
popf
out
retf
sub
out
and
test
pop
mov
out
mov
lock
dec
inc
hlt
mov
pop
aas
adc
retf
ror
mov
dec
in
mov
xchg
sbb
sub
adc
xor
loopne
ret
loopne
mov
or
ds
jecxz
or
add
in
ss
dec
sti
xor
fidivr
clc
cmp
jnp
addr16
add
ret
mov
or
pop
pushf
fwait
inc
sub
aam
push
mov
(bad)
xchg
sbb
mov
lods
add
ss
arpl
popa
mov
cmp
outs
push
idiv
mul
cwde
sub
sbb
lds
sbb
add
sub
mov
es
add
test
lods
loopne
or
fwait
add
in
sbb
lahf
cmps
or
repnz
and
jp
stc
mov
mov
sbb
lods
xlat
push
mov
fbld
pop
retf
jb
sbb
pop
pop
sbb
ret
mov
adc
or
push
adc
mov
add
fdiv
cmp
inc
pop
push
arpl
push
inc
inc
inc
xchg
xchg
clc
cmp
sbb
(bad)
xchg
mov
iret
fist
test
dec
sbb
lock
outs
sub
rcl
mov
lds
pop
xlat
dec
cmp
jmp
rcr
pop
sub
fdiv
jne
add
push
inc
(bad)
pop
or
fwait
sbb
add
jp
and
repz
sar
movs
or
mov
jp
pop
stc
iret
ins
cmp
or
ja
cwde
dec
loop
not
in
icebp
pop
xor
sub
xchg
sub
push
pop
pop
cmp
iret
sub
aad
lahf
(bad)
add
leave
mov
jmp
or
sbb
dec
sahf
dec
dec
es
xor
push
(bad)
in
jne
pop
cmp
cmp
cmp
cmp
and
and
mov
jecxz
(bad)
in
clc
cmp
sub
push
mov
rol
hlt
mov
addr16
lea
dec
adc
push
xor
sub
and
fwait
dec
xchg
(bad)
loop
dec
jmp
pop
fisub
aad
cdq
adc
mov
add
fwait
ja
gs
mov
sbb
dec
cdq
loopne
jns
xor
and
arpl
jge
xor
add
shl
push
xor
fs
mov
faddp
pop
rcr
mov
fist
push
out
fs
push
cli
in
mov
xor
xor
rcl
mov
mov
(bad)
movntq
loope
xor
mov
mov
and
adc
popf
xchg
jbe
stc
jo
les
call
ins
int3
sub
mov
push
jl
and
fwait
mov
arpl
adc
loop
sbb
in
cmp
in
cmp
pop
mov
(bad)
mov
(bad)
mul
lods
sbb
fcom
inc
dec
rol
(bad)
sbb
retf
pop
in
(bad)
popa
mov
add
popa
ret
mov
sub
mov
(bad)
push
cmp
in
retf
mov
mov
dec
pusha
push
pop
test
sbb
xchg
jle
lahf
sbb
xor
inc
not
mov
xlat
push
mov
push
sub
mov
div
pop
cmp
or
dec
movs
cdq
pop
dec
loope
rol
xchg
mov
pop
pusha
jae
push
neg
sar
push
test
jge
fnsave
dec
mov
and
dec
(bad)
add
add
inc
pop
popa
jmp
adc
or
test
xor
bound
adc
xor
in
int3
ret
icebp
mov
dec
add
inc
sbb
jne
pop
ret
das
and
mov
inc
xor
mov
movs
fisub
loop
inc
mov
xchg
jmp
(bad)
les
mov
push
movs
neg
mov
mov
jbe
xchg
adc
adc
push
push
inc
push
ins
dec
mov
fsubr
mov
jbe
sub
push
mov
mov
std
or
repz
adc
das
mov
adc
mov
(bad)
mov
sbb
mov
sub
(bad)
mov
leave
jb
mov
jl
mov
push
iret
repz
pop
pop
push
mov
fnstenv
test
adc
mov
pushf
(bad)
mov
pop
fstp
jns
or
test
or
mov
movs
inc
daa
cmp
jecxz
stc
sti
(bad)
fs
lahf
retf
hlt
jne
fimul
inc
retf
add
or
inc
jg
in
push
(bad)
test
arpl
lahf
jmp
cld
rol
push
lds
pop
and
test
fisttp
or
fdivr
sbb
mov
mov
repnz
in
and
inc
imul
arpl
lods
js
dec
aad
xor
jo
shr
inc
dec
push
addr16
dec
xor
jle
xchg
int3
cmps
dec
sbb
je
out
rol
ins
mov
xor
cmp
imul
xor
mov
dec
loopne
dec
inc
call
test
mov
cli
jne
jp
daa
adc
inc
sbb
xchg
mov
lods
push
inc
inc
imul
mov
xor
int
adc
push
lods
sub
sub
or
(bad)
jg
cmps
xchg
leave
xchg
test
inc
xor
sbb
ror
inc
mov
mov
xchg
(bad)
(bad)
jae
inc
(bad)
fwait
mov
loope
mov
xchg
dec
rcl
test
or
scas
retf
push
fisub
stos
pusha
xchg
or
jns
inc
ror
jae
pop
cdq
sbb
lahf
xchg
movs
aad
fucomi
cmc
mov
je
sbb
shl
pop
adc
or
rcr
add
dec
push
push
mov
jmp
sbb
jbe
fdiv
xchg
inc
and
pushf
es
jbe
sbb
lock
out
jmp
inc
mov
dec
inc
sbb
retf
cs
int
mov
dec
ret
and
(bad)
jmp
sbb
inc
xchg
inc
jno
call
mov
sar
add
(bad)
aaa
hlt
sub
cmp
jecxz
and
scas
sbb
xchg
int3
mov
mov
cmp
retf
stos
stos
es
mov
sbb
jmp
icebp
cmp
push
pop
jmp
aam
inc
dec
das
sub
cdq
cmps
push
push
sbb
mov
cmp
add
xlat
outs
loop
mov
jmp
adc
xchg
pusha
adc
mov
mov
jo
mov
mov
push
ss
addr16
sbb
xchg
call
fidiv
ins
push
enter
aaa
dec
out
mov
data16
jne
mov
inc
xor
xchg
mov
hlt
xor
dec
aas
adc
sti
cld
dec
daa
push
fsub
or
shl
inc
arpl
push
push
clc
pusha
mov
pop
inc
add
cmp
jecxz
cmp
jg
add
(bad)
ror
or
lea
mov
pop
aam
push
or
xlat
push
mov
pop
enter
jne
and
fucomp
jae
push
cld
sub
mov
outs
xchg
pop
jbe
pop
mov
jae
mov
out
mov
pop
xchg
aas
mov
push
lahf
dec
(bad)
pop
jbe
loope
mov
fdivr
push
fistp
inc
jecxz
push
aas
pop
sbb
sahf
cmps
xlat
or
inc
movs
sbb
out
sub
movs
ds
je
rcr
jl
fucomp
adc
retf
jbe
lods
sub
inc
(bad)
test
fs
out
xchg
jmp
pop
fwait
(bad)
(bad)
pop
add
sbb
xor
popa
ror
inc
xor
je
movs
popf
test
(bad)
push
xlat
mov
xor
cdq
sbb
or
out
lahf
pop
ret
loopne
ret
sbb
fucomip
repz
lea
mov
aam
mov
sub
add
adc
xchg
add
clc
std
int3
addr16
hlt
sub
push
or
xlat
push
mov
mov
scas
jecxz
jo
xlat
data16
bound
dec
mov
(bad)
fild
cmc
sahf
lds
xchg
mov
xor
mov
cmp
in
push
mov
dec
fs
cmp
stos
sbb
xor
cmp
cdq
and
hlt
mov
mov
popa
stc
push
pop
push
cwde
jae
out
add
jne
pop
fiadd
clc
ficomp
not
or
inc
xlat
addr16
push
fwait
sbb
mov
enter
cli
inc
int3
pop
sub
mov
sbb
mov
popf
test
lea
mov
leave
jo
sub
push
mov
loopne
ror
cmps
(bad)
jne
xchg
lods
nop
loopne
mov
sbb
xor
ret
je
mov
mov
xadd
pop
arpl
dec
xor
and
repnz
mov
ins
inc
xchg
mov
int3
cmp
mov
jnp
ds
sbb
ins
mov
daa
xchg
pop
cmc
mov
sub
int3
push
xor
cmps
push
imul
pop
enter
add
dec
shl
lods
xor
add
xchg
in
cmp
out
mov
icebp
sbb
dec
cmp
xor
jmp
inc
add
jbe
dec
cdq
cmps
pop
xchg
ins
jo
(bad)
mov
aas
(bad)
fwait
pop
pop
popf
iret
jle
cmp
mov
dec
xchg
pop
ret
dec
mov
sbb
jb
das
jge
dec
mov
jmp
call
push
mov
pop
push
pusha
lods
push
setae
ror
add
shl
mov
cmp
fwait
sbb
pop
div
add
movs
mul
lods
sub
sub
test
and
sbb
xchg
outs
dec
ficom
ins
inc
mov
xchg
fcomp
(bad)
ins
mov
fild
ss
xchg
ret
dec
pop
gs
mov
sub
xlat
jbe
xor
xchg
ds
inc
xchg
js
fidivr
mov
sti
cmp
cmp
pushf
dec
and
or
or
jle
sbb
stc
sahf
bound
xor
fldenv
xlat
ins
out
inc
sbb
cmp
addr16
cwde
or
mov
mov
mov
jg
cmp
inc
repnz
jb
(bad)
mov
cmp
push
sub
sub
mov
fs
(bad)
mov
cld
cmp
xor
jnp
test
aaa
mov
jl
dec
inc
add
pop
fsub
mov
pop
adc
fstp
push
dec
sbb
dec
jb
mov
mov
gs
add
adc
xlat
or
test
adc
and
and
mov
jb
mov
lods
push
ja
add
jp
cmp
ret
repnz
leave
jo
inc
loopne
dec
cmps
xlat
add
pop
leave
sbb
in
inc
out
int
dec
stos
sbb
mov
fwait
in
mov
pop
(bad)
sahf
icebp
out
cmp
fisub
xlat
sbb
jg
ins
aaa
jp
je
xchg
sbb
or
loope
dec
push
sub
popa
sbb
push
sub
xchg
stc
lea
push
adc
pop
cmp
cmp
cli
fisttp
or
daa
fldenv
enter
jg
bound
loopne
ins
jmp
stos
das
mov
and
push
mov
je
dec
test
mov
hlt
xchg
xor
push
sub
mov
gs
or
hlt
dec
dec
in
mov
pop
sbb
inc
in
dec
or
das
retf
gs
(bad)
pop
pop
xchg
cmp
inc
push
mov
pop
bound
adc
push
mov
fucomp
out
int
div
std
mov
dec
fadd
jle
xchg
cmp
scas
dec
sub
jl
stos
mov
inc
pop
sahf
ret
push
jno
mov
jmp
sbb
pop
popf
iret
and
inc
enter
adc
fdivr
mov
int
jge
sub
repnz
or
dec
int
fdivr
or
neg
popa
pop
jne
mov
nop
cli
mov
inc
add
sbb
add
stos
fmul
inc
dec
or
xor
test
xchg
push
sub
mov
xor
and
xlat
ror
ja
push
fsubr
lods
push
dec
mov
and
dec
xor
jle
mov
inc
leave
jecxz
(bad)
retf
jns
mov
sub
imul
cmp
out
dec
clc
gs
xor
leave
lods
ret
movs
std
jnp
pop
cdq
push
push
cmp
mov
fisttp
xchg
mov
xchg
imul
in
idiv
dec
adc
cwde
lock
push
rcr
jb
mov
ret
icebp
cld
js
mov
inc
mov
pop
shl
inc
(bad)
mov
lds
aas
loopne
jmp
inc
jnp
shl
xchg
les
add
inc
je
stos
jecxz
sbb
xchg
inc
xchg
mov
loop
cli
ret
ds
cmp
jg
imul
(bad)
jnp
dec
cdq
pop
iret
add
mov
leave
inc
mov
inc
sbb
pop
fucomi
outs
movs
ret
or
pop
push
or
push
test
push
scas
mov
xchg
mov
jns
sub
push
popa
(bad)
or
gs
dec
out
leave
sbb
cwde
icebp
push
xchg
es
inc
pop
sar
into
gs
inc
out
mov
and
push
pop
inc
pushf
loop
inc
lahf
scas
(bad)
imul
in
cld
out
(bad)
jae
ret
xchg
pop
pop
call
pop
push
mov
ds
sub
sar
test
ret
xor
mov
jne
pop
in
or
add
inc
sahf
popf
dec
push
pop
or
pop
repnz
cmps
cmps
cmps
push
mov
fsubr
mov
popf
sbb
call
jns
xor
pushf
(bad)
mov
aam
sbb
jae
sbb
cld
push
jno
jns
rcr
mov
aam
mov
fmul
(bad)
lahf
pop
dec
dec
mov
outs
shl
jmp
daa
dec
test
stos
mov
add
jae
pop
or
push
aam
dec
mov
xchg
mov
or
(bad)
adc
pop
jle
cwde
xor
dec
xchg
(bad)
pop
test
or
outs
jns
scas
(bad)
fld
mov
les
and
sub
(bad)
pop
out
add
call
fisttp
stc
xor
xchg
(bad)
push
js
retf
push
mov
popf
fstp
mov
pop
hlt
repz
add
sbb
fiadd
rol
mov
(bad)
dec
cmp
cmp
push
add
rol
mov
je
jle
in
aam
in
xor
leave
pop
ret
and
enter
add
mov
or
pop
into
push
pop
jbe
fwait
ds
push
inc
in
and
xor
xchg
jmp
in
icebp
(bad)
xchg
dec
jns
(bad)
mov
push
pop
mov
call
retf
jo
push
shr
mov
arpl
dec
lahf
test
xor
push
fcmovnu
jbe
rol
outs
jg
imul
sbb
je
sbb
fwait
xchg
jns
jge
sub
add
and
icebp
xor
stc
sub
ins
repnz
push
fstp
cld
cwde
aam
xor
fisubr
cli
mov
rol
out
mov
call
mov
clc
retf
outs
mov
sbb
xor
popf
xchg
rcr
test
push
addr16
dec
push
hlt
(bad)
repz
call
mov
add
inc
xor
inc
sti
cmp
jg
loop
outs
enter
test
gs
mov
pop
sub
sbb
sbb
mov
mov
icebp
jns
adc
dec
js
pop
push
scas
dec
loop
loope
jecxz
iret
or
inc
pop
cmp
sbb
push
pop
ret
inc
xlat
push
sbb
popf
rcl
neg
lock
jecxz
shl
push
mov
retf
mov
and
mov
aaa
pushf
or
xchg
ret
mov
pusha
js
lahf
test
xchg
mov
inc
loop
jp
lds
push
pushf
jno
or
adc
es
ficomp
and
in
cmp
mov
jne
repz
pshufw
retf
sbb
sbb
movs
int
push
add
jge
popf
pop
pop
sub
pop
inc
inc
inc
xchg
repz
enter
adc
ds
push
pusha
lahf
jecxz
inc
mov
out
xchg
ins
pushf
inc
adc
mov
leave
sbb
push
lock
fld
nop
xlat
dec
sub
test
enter
inc
ret
outs
mov
pop
xor
fmul
dec
mov
into
(bad)
in
cmp
imul
out
or
sub
adc
hlt
in
test
fadd
aaa
je
arpl
clc
lea
std
cmp
sbb
adc
mov
inc
mov
repnz
jbe
mov
inc
stos
in
sbb
sub
movs
cli
pop
lods
adc
inc
and
retf
sbb
pcmpgtw
cmc
cwde
jns
sbb
push
jmp
popf
(bad)
adc
cs
cmp
cdq
xor
fsubr
push
and
pop
scas
inc
ret
call
mov
add
mov
push
mov
cwde
bound
jg
inc
xor
sub
les
mov
pop
aad
jg
inc
pop
das
mov
adc
int3
jns
outs
loopne
push
push
mov
int
int
jmp
retf
js
pop
push
retf
push
inc
pop
in
push
adc
xlat
ins
pop
js
stos
repz
add
pop
push
mov
sbb
imul
adc
adc
fcom
iret
scas
hlt
xor
repnz
sub
pop
js
inc
int3
fcmovb
add
push
in
adc
sub
(bad)
or
xchg
outs
dec
sub
push
mov
pop
jne
inc
jbe
push
jns
ins
xchg
inc
mov
jne
and
loop
jmp
cmp
hlt
xor
xchg
jge
adc
lea
fadd
xor
or
loopne
cwde
cmp
mov
push
mov
jmp
sbb
push
xor
jecxz
inc
(bad)
int3
cmp
test
inc
cmc
sbb
stos
clc
or
xchg
cmp
add
pinsrw
scas
inc
movs
in
popf
dec
inc
fisub
mov
mov
fistp
shr
and
push
ret
retf
neg
inc
mov
or
stos
std
repnz
dec
sbb
mov
jecxz
cmp
add
xchg
xchg
or
sar
pushf
shl
in
loop
cdq
loop
lock
je
dec
stos
rcl
mov
ja
xchg
adc
mov
pop
(bad)
push
and
xlat
aad
inc
and
retf
and
adc
ror
mov
xchg
dec
xlat
cdq
out
inc
pop
loope
je
add
dec
mov
dec
retf
mov
addr16
push
popa
cmps
push
fstp
pop
sbb
in
shl
movs
push
ficomp
movs
retf
push
test
iret
fucomip
hlt
cmp
test
push
add
mov
xchg
out
aam
or
nop
xor
stc
jg
in
pop
pop
mov
jecxz
(bad)
(bad)
ficomp
ja
add
gs
in
mov
xor
loop
xor
xor
in
fcomp
test
add
idiv
xchg
push
and
test
sub
outs
xchg
(bad)
mov
scas
out
fild
add
ret
lahf
lds
pop
movs
das
push
cwde
or
xchg
pop
xor
mov
pop
sti
mov
lock
or
fwait
test
jl
stos
mov
mov
cwde
rcr
xor
and
sbb
sub
mov
dec
inc
mov
mov
mov
in
xchg
retf
pop
xor
inc
add
add
inc
rcl
mov
push
idiv
sbb
rol
(bad)
hlt
outs
sub
push
xor
mov
push
(bad)
js
mov
mov
push
inc
icebp
movs
iret
cdq
pop
in
sub
mov
es
or
(bad)
mov
mov
sub
and
leave
jp
mov
push
out
fst
call
popf
dec
mov
fist
jb
popf
dec
mov
popf
mov
cmp
lahf
cmp
test
or
loop
(bad)
std
rcr
inc
stc
xor
add
fld
mov
cli
test
repnz
(bad)
out
jle
fistp
jno
dec
push
fimul
std
inc
into
cmps
iret
es
mov
ret
fldcw
lods
cmp
sub
push
test
enter
mov
pop
fistp
mov
(bad)
div
jb
xor
sar
jo
dec
push
nop
jnp
adc
clc
sar
es
cmp
mov
repz
or
jnp
rcr
fiadd
mov
inc
aas
fcmovbe
or
mov
call
and
and
push
scas
shl
int3
pop
shr
push
dec
mov
dec
push
push
mov
leave
jp
xchg
xchg
cdq
xchg
aad
fbld
xchg
xchg
pop
pop
pop
pop
mov
or
mov
or
(bad)
and
in
aaa
fucomi
xor
shr
xor
mov
test
add
adc
add
xchg
imul
add
lds
vreducesd
rol
mov
push
sub
movs
addr16
popf
fwait
jo
int3
lods
mov
call
add
cdq
in
bound
loope
lea
iret
ins
mov
adc
xor
sbb
dec
pop
fcomp
mov
jne
inc
dec
inc
add
mov
jp
fwait
mov
adc
or
jno
and
and
jge
bound
fdivr
mov
cmc
mov
mov
or
xchg
addr16
cdq
fwait
mov
sbb
mov
nop
xlat
retf
jns
inc
test
mov
inc
mov
xchg
mov
arpl
enter
lds
repnz
inc
pop
(bad)
test
mov
pop
lds
sub
test
sub
stos
jbe
mov
ja
cmp
int3
lods
pop
mov
pushf
mov
mov
push
jecxz
fmul
ret
popa
add
jecxz
adc
sbb
lahf
out
mov
aam
jns
mov
push
mov
jmp
push
push
mov
push
jmp
scas
jne
cli
or
cmp
icebp
mov
mov
xchg
test
arpl
fs
sbb
or
in
(bad)
jge
add
mov
js
mov
xchg
inc
pop
sbb
xchg
pop
loopne
mov
pop
fisttp
mov
pop
pop
lods
pop
pop
pop
dec
pusha
cwde
push
mov
test
xor
or
mov
mov
push
ins
test
aaa
push
int3
and
shr
cmp
xchg
aaa
pop
je
icebp
push
pop
nop
pop
and
stos
sbb
ins
mov
daa
xchg
pop
cmc
mov
sub
int3
push
xor
cmps
push
imul
pop
enter
or
fldenv
adc
xlat
adc
dec
int
cli
fistp
sti
pop
fsubr
xchg
sub
and
xchg
jecxz
mov
test
xchg
fwait
inc
movs
inc
cmps
outs
push
gs
mov
adc
popf
sbb
mov
js
dec
mov
cdq
sbb
and
popa
jecxz
mov
test
adc
cs
pop
cdq
pop
xor
bound
imul
inc
jmp
mov
popa
mov
in
add
out
(bad)
and
dec
imul
xchg
sub
test
add
out
xlat
data16
bound
shl
mov
xchg
movs
sub
cmp
fdivr
push
xchg
mov
(bad)
ret
xchg
cdq
ficomp
aad
push
dec
in
xchg
pop
das
mov
fstp
loope
xchg
dec
call
fcomp
push
loop
jl
nop
cwde
fwait
xlat
in
neg
ret
adc
adc
mov
fs
pop
stc
repnz
cmp
push
xchg
pop
cmp
adc
push
test
ja
stos
cmp
or
jo
xor
out
inc
mov
jmp
mov
adc
mov
xchg
div
pop
pop
add
rol
(bad)
sbb
ror
mov
loopne
or
lsl
pop
cmp
sbb
pop
pop
xchg
sub
jg
call
adc
xchg
push
add
and
mov
pop
xchg
mov
sbb
mov
pop
stos
mov
mov
jne
cwde
fs
mov
adc
mov
xor
pushf
dec
pop
mov
mov
inc
movs
out
xchg
lds
pop
push
xchg
repz
inc
mov
stc
pop
inc
movs
push
sub
mov
mov
cmp
bound
aaa
push
adc
cmps
xlat
in
pop
push
loopne
mov
push
xor
push
cli
xlat
sahf
or
dec
popf
icebp
iret
dec
push
leave
imul
inc
loopne
inc
std
pop
fldcw
cmp
pop
adc
push
pop
pop
out
jno
js
dec
mov
scas
inc
xor
cmps
push
popa
jecxz
mov
das
idiv
les
inc
sahf
mov
sbb
xor
jle
(bad)
(bad)
dec
call
(bad)
pop
fs
test
hlt
add
imul
mov
xchg
fwait
ds
hlt
or
and
sbb
inc
ins
add
fisttp
mov
pop
mov
int
popf
add
push
stc
mov
add
call
mov
xor
mov
inc
std
stos
jnp
popf
lahf
adc
add
mov
repz
in
dec
sar
enter
dec
(bad)
cmp
in
push
cmp
enter
jb
pushf
xchg
push
bound
jnp
enter
push
pop
cwde
popa
mov
or
cwde
push
add
mov
iret
or
enter
mov
in
aaa
push
push
xor
jge
fild
popf
je
mov
mov
adc
or
mov
inc
jmp
aaa
shr
pusha
cmp
sti
jp
inc
mov
xor
fstp
or
xchg
aam
enter
jae
add
in
cmps
mov
dec
pop
pop
pop
(bad)
aad
jae
repz
lods
mov
jmp
call
xchg
add
cmps
mov
sbb
loope
xchg
and
add
(bad)
js
push
add
xchg
les
mov
scas
push
pop
add
idiv
pop
mov
je
or
dec
inc
mov
push
mov
and
xlat
mov
adc
mov
xor
xchg
inc
cmps
ret
punpcklwd
pop
cld
fsubrp
addr16
int
sub
dec
loope
jl
imul
xchg
(bad)
jmp
inc
rcl
sbb
int3
push
cmp
push
or
imul
lods
ins
fld
mov
fnstsw
cmp
jo
in
ja
popa
call
cmps
iret
cmps
dec
cmps
and
ret
ins
mov
test
inc
or
mov
mov
lods
pop
test
xor
push
int3
pop
and
push
pop
pop
icebp
mov
daa
sahf
lds
xchg
mov
sti
idiv
and
push
fcom
call
cmp
adc
mov
pop
push
test
xchg
fbstp
jmp
mov
sub
mov
dec
mov
xchg
xchg
js
ds
jecxz
inc
mov
jmp
lods
nop
adc
outs
bound
lahf
(bad)
pop
pop
xchg
mov
xlat
fwait
pop
aaa
popf
iret
pusha
pop
or
mov
mov
fcom
dec
inc
xor
dec
pop
mov
sti
pop
das
or
std
leave
push
repz
repz
adc
div
iret
(bad)
in
xchg
sub
mov
add
inc
test
mov
fcom
aaa
xchg
sub
mov
sbb
adc
addr16
push
lods
push
dec
sbb
inc
push
daa
out
retf
fucomp
pusha
cmp
mov
ins
test
jo
ret
test
xlat
dec
int3
inc
scas
push
pop
imul
dec
cmps
push
std
lods
xor
dec
xchg
jmp
in
sar
push
mov
aas
stc
cwde
(bad)
loop
repnz
push
(bad)
fs
rcl
pop
fist
push
rcr
stc
xchg
int
or
adc
pop
sbb
xchg
or
mov
pusha
jo
cmp
mov
jo
xor
out
inc
mov
jmp
mov
adc
mov
xchg
div
pop
pop
add
rol
(bad)
sbb
ror
mov
loopne
or
lsl
pop
aas
xor
divps
xchg
sub
jg
call
adc
loop
xor
pop
mov
pushf
dec
pusha
test
stc
mov
nop
jmp
xor
mov
xchg
jmp
and
push
cmp
neg
mov
cmc
sbb
sub
scas
xor
push
pop
pop
inc
xchg
dec
data16
cmp
and
or
mov
cmp
ds
jl
inc
mov
jo
sti
repnz
xchg
adc
mov
lock
scas
xor
dec
mov
stos
(bad)
outs
mov
cmp
push
cmp
out
dec
or
(bad)
lahf
test
jp
(bad)
dec
daa
or
xchg
ficom
dec
cmps
dec
mov
into
pop
stos
shr
inc
mov
fnsave
add
loope
(bad)
add
inc
push
cwde
mov
jge
pop
dec
aaa
push
lods
and
jo
cld
jg
inc
sbb
and
push
div
rcl
les
ja
lds
sbb
out
jae
jmp
scas
sbb
gs
pop
mov
jb
push
shl
mov
jns
fild
mov
add
mov
out
pop
test
ret
imul
retf
test
pop
and
mov
add
scas
fbstp
jecxz
rcr
adc
(bad)
in
fdiv
adc
sub
push
fwait
xor
mov
hlt
data16
cmp
es
xor
xchg
pushf
ja
jo
sbb
out
int
rol
mov
popa
ffreep
dec
mov
xor
inc
les
push
int
nop
or
adc
jbe
out
push
(bad)
and
int
ret
aam
sti
pop
sbb
jae
pop
aas
outs
ret
(bad)
repz
mov
sbb
imul
xchg
dec
in
push
xchg
cld
sahf
lahf
mov
into
imul
std
es
(bad)
lds
jns
pop
inc
dec
pop
or
inc
ror
jo
das
mov
int
int3
adc
adc
rcr
repz
(bad)
stos
sbb
xor
test
mov
test
pushf
jmp
jns
enter
out
cwde
inc
sar
or
and
nop
les
sbb
aad
bnd
cmp
dec
add
sbb
fs
adc
movs
fidiv
inc
jl
in
test
fwait
jne
cdq
sar
or
rcl
add
xchg
jmp
mov
xchg
imul
dec
mov
inc
mov
xor
stos
aam
(bad)
iret
cmp
jno
mov
sbb
xlat
(bad)
test
cwde
pop
ret
pop
stc
aaa
pop
adc
pop
dec
fld
inc
leave
out
sbb
inc
icebp
push
hlt
sub
and
test
loopne
and
mov
sub
sbb
pusha
mov
push
mov
push
aad
inc
lds
dec
test
fisttp
sub
push
cwde
test
cs
and
sahf
mov
sub
cs
mov
arpl
xchg
in
mov
popf
dec
pop
and
mov
push
cmp
or
sub
fsub
sti
adc
lods
cmp
sahf
daa
dec
sti
mov
(bad)
fdiv
pop
sbb
sti
mov
in
xchg
retf
inc
xor
xchg
enter
adc
imul
pop
(bad)
mov
call
nop
xchg
jo
dec
mov
movs
xor
xor
jbe
loope
push
ss
int
(bad)
mov
call
pop
cld
ins
mov
cmp
add
mov
call
jae
retf
popf
icebp
fisttp
push
rcr
test
cwde
shl
jo
xchg
adc
jl
shr
sbb
add
mov
(bad)
pop
cmps
pop
ins
jbe
xor
sub
mov
repnz
fstp
shl
cmp
or
sub
rol
dec
loopne
push
adc
jge
ret
sbb
dec
mov
mov
cmps
or
adc
jb
inc
push
in
mov
adc
imul
cmc
test
sahf
or
pop
fisubr
(bad)
int3
jo
inc
jne
jnp
test
pop
sbb
in
shl
fst
mov
mov
imul
lea
jmp
mov
stos
jne
stc
popa
int
inc
(bad)
mov
iret
pop
adc
push
inc
pop
das
(bad)
push
fwait
sub
fwait
cmp
cwde
mov
call
repz
jnp
sub
cmp
retf
out
jae
test
jl
jmp
push
cmp
jnp
retf
pop
jmp
xchg
fisub
and
leave
lods
jle
or
jbe
lods
(bad)
mov
sub
mov
jmp
popf
sbb
sti
and
mov
jbe
pop
adc
or
add
leave
xor
mov
and
fdivr
xlat
add
mov
bound
frstor
push
pop
add
fsub
fst
inc
aad
ret
ss
inc
dec
jo
pop
ja
les
test
jp
adc
adc
add
xchg
mov
xor
neg
ins
lods
lock
mov
mov
cmp
fist
adc
stos
adc
sub
dec
out
mov
js
inc
dec
in
imul
add
(bad)
push
adc
daa
cmp
xor
adc
jns
inc
popf
cmp
lock
xchg
mov
push
aad
xor
cdq
or
pop
and
mov
cli
add
xor
lock
push
push
mov
mov
cmp
and
stc
push
add
xchg
fwait
(bad)
int3
repz
sbb
fsub
sbb
jge
dec
dec
push
shr
shl
push
jge
int
fs
cwde
adc
test
cmp
mov
gs
cdq
mov
mov
mov
cwde
mov
out
sbb
push
iret
sub
and
jbe
pop
xchg
jmp
cmp
ret
pop
add
sbb
add
dec
adc
pop
mov
loopne
pushf
push
pop
(bad)
jns
ds
mov
leave
add
cs
leave
and
mov
add
jno
mov
fwait
dec
rcr
sbb
shr
out
xchg
dec
mov
mov
sbb
push
add
push
les
mov
sbb
ret
sub
mov
push
stos
jbe
mov
call
das
and
aas
jnp
leave
inc
(bad)
and
fucomi
stc
mov
pop
data16
jecxz
rcr
cmc
popa
cmp
inc
mov
int
jmp
inc
fsubr
xchg
dec
xor
push
test
mov
sbb
and
cmps
xchg
jb
pop
test
fbld
mov
mov
jge
jecxz
push
in
and
mov
fstp
imul
push
out
aad
test
fnstsw
sub
mov
pop
test
cmp
and
cmp
in
scas
loopne
dec
xchg
stc
or
call
imul
mov
add
mov
fs
shl
jmp
sub
push
shl
retf
xor
(bad)
fcomp
icebp
mov
xchg
cdq
loope
cmp
ret
and
aas
sub
lods
add
fcmovne
xchg
out
fnsave
xor
jmp
mov
dec
mov
scas
pop
fwait
(bad)
pop
xchg
jle
das
fisttp
loope
dec
pop
xor
dec
test
or
lock
xchg
pop
xchg
imul
adc
mov
sbb
xchg
stos
jmp
in
gs
cdq
mov
mov
mov
cwde
mov
scas
xchg
hlt
je
xchg
aad
jmp
dec
mov
cdq
pop
push
jb
and
(bad)
std
mov
xchg
dec
add
shr
push
pop
fild
(bad)
pop
mov
and
out
inc
sbb
add
std
addr16
dec
sbb
cwde
cdq
mov
jecxz
(bad)
nop
xlat
dec
sub
imul
push
jp
inc
mov
out
ins
repz
lods
jp
mov
jbe
xchg
add
sbb
retf
sbb
repnz
dec
add
(bad)
mov
fcmovu
jp
push
mov
lods
push
neg
sub
mov
jecxz
pushf
test
xchg
ss
sub
mov
loope
xor
sbb
jl
aad
mov
inc
fsubp
xchg
retf
push
xchg
jae
and
xchg
jns
ret
or
shl
out
mov
movs
test
push
(bad)
mov
int3
inc
xor
xchg
enter
sbb
movs
test
dec
or
mul
das
jge
xchg
pop
cld
push
mov
gs
lds
ds
and
arpl
adc
mov
cmps
lock
xchg
mov
ret
fwait
add
(bad)
(bad)
adc
iret
jns
and
retf
call
xchg
mov
dec
dec
in
test
shr
push
mov
or
pop
imul
mov
jecxz
mov
lods
(bad)
xor
(bad)
jmp
popf
(bad)
dec
push
fsubr
jecxz
or
dec
xor
jnp
jne
and
out
pop
fcom
sbb
sub
ret
out
retf
lods
mov
adc
fwait
add
inc
mov
icebp
mov
mov
jmp
retf
inc
inc
mov
cmp
adc
dec
inc
cmp
cs
mov
sbb
or
fld
leave
inc
rcl
neg
mov
sub
out
pushf
pop
sbb
sbb
out
aaa
hlt
jp
rol
dec
inc
sub
ja
and
xchg
ds
aad
dec
hlt
sub
mov
(bad)
call
mov
bound
push
rcr
jbe
inc
mov
fs
mov
push
daa
mov
mov
xchg
retf
sbb
inc
ficomp
(bad)
aaa
mov
cdq
fadd
or
dec
data16
cmp
pop
retf
js
in
mov
ss
mov
lods
add
mov
push
lea
pop
nop
sahf
ins
mov
inc
cwde
loope
popf
push
xchg
cmp
inc
mov
test
pop
cmp
call
and
mov
call
xchg
mov
dec
xor
imul
aam
adc
xchg
lds
mov
mov
fwait
add
aam
lds
cmp
pop
mov
xchg
adc
std
dec
push
cmp
jecxz
and
stos
dec
push
sub
dec
popa
cwde
nop
dec
sbb
sbb
add
pop
loop
shr
jecxz
sbb
in
push
test
cwde
xor
mov
cmp
jae
(bad)
pushf
movs
cdq
xchg
add
cmp
retf
sbb
test
dec
or
dec
dec
xchg
xchg
add
mov
or
dec
movs
sbb
sysret
call
xchg
xchg
mov
sbb
sbb
or
in
mov
pop
sti
add
xchg
jb
pop
mov
lock
das
lock
mov
inc
imul
fcom
lea
lock
int3
mov
mov
sbb
add
mov
std
pop
and
cs
dec
popa
pop
dec
rcl
mov
rep
mov
loopne
mov
repz
fild
add
lahf
dec
pushf
sti
aad
ja
ret
xchg
cmc
test
jno
pop
mov
lods
xchg
sub
adc
mov
sbb
fild
mov
fld
push
cmps
xchg
test
add
inc
xchg
push
icebp
dec
add
and
xor
mov
pusha
pop
add
xchg
cmp
push
pusha
mov
repz
leave
loop
(bad)
cdq
mov
or
mov
nop
add
leave
xor
mov
mov
inc
mov
sub
das
(bad)
mov
dec
mov
cdq
enter
mov
push
add
or
mov
mov
push
sbb
adc
jo
sbb
scas
xor
fiadd
dec
mov
das
jno
xchg
ficomp
mov
loopne
call
lock
std
mov
xor
icebp
mov
pop
dec
loop
cmp
or
mov
cli
mov
cmps
arpl
mov
inc
mov
push
(bad)
mov
retf
fucom
cli
mov
cld
sub
cmp
mov
sub
mov
imul
push
std
ss
loopne
rol
pop
call
xchg
jl
popf
scas
leave
bound
jo
shl
pop
je
lods
idiv
(bad)
out
std
push
dec
shl
clc
je
test
adc
and
push
mov
in
xlat
ins
mov
out
jo
(bad)
mov
mov
jnp
call
adc
lea
adc
ins
lea
xor
xchg
aad
scas
test
dec
gs
or
stos
lahf
push
mov
(bad)
fstp
cmp
pop
mov
loop
(bad)
mov
or
ins
cwde
dec
cmp
retf
xchg
dec
pushf
int3
mov
jae
mov
loope
dec
adc
icebp
and
xor
popf
out
in
mov
popf
imul
add
test
jnp
adc
test
mov
and
imul
mov
xchg
sbb
pop
or
mov
cmc
and
pop
stos
in
imul
or
push
es
int
mov
jecxz
push
loope
aas
ins
jbe
jp
test
lds
jg
jnp
out
stos
xor
lea
xor
hlt
int3
mov
mov
sbb
ret
mov
mov
xchg
cmp
mov
pop
sub
bound
mov
adc
ins
cmp
in
jmp
inc
push
mov
mov
nop
mov
fwait
test
sbb
add
retf
lds
inc
sub
ins
mov
dec
leave
pushf
adc
sub
scas
push
dec
mov
xor
mov
dec
cdq
adc
lods
mov
in
push
cld
mov
outs
mov
xchg
movs
inc
pop
imul
xchg
dec
cmps
adc
inc
idiv
scas
dec
xchg
psrld
test
fidiv
pop
aas
lahf
inc
jg
pop
fstp
lods
repz
jo
inc
loop
das
cmps
xlat
mov
pop
sub
push
adc
call
stos
sbb
cmp
adc
pop
mov
inc
mov
jb
stc
(bad)
pop
sbb
popf
iret
iret
test
inc
cmp
mov
je
sub
cwde
sbb
xor
(bad)
adc
mov
int3
ja
mov
add
mov
ins
push
xor
dec
add
clc
cmp
mov
jbe
mov
clc
or
and
imul
cwde
arpl
sbb
xchg
popf
jae
mov
inc
pop
add
mov
sahf
retf
sahf
mov
test
popf
retf
mov
sbb
test
mov
sbb
jp
movs
adc
leave
imul
cmp
lds
sbb
add
jno
sub
int
push
adc
loop
xchg
ret
and
pop
es
or
mov
shl
add
xchg
mov
xor
aaa
sub
mov
cmp
dec
aaa
cmp
xlat
loopne
out
mov
dec
fidivr
or
or
mov
push
dec
mov
pop
fisttp
shl
pop
pop
dec
inc
inc
fwait
call
pop
xchg
inc
les
ja
ret
push
jmp
inc
jl
sbb
shl
lock
dec
popa
pushf
nop
dec
sbb
adc
lds
push
mov
xor
(bad)
in
dec
cmp
sbb
adc
ss
repnz
fst
ins
pop
dec
rcr
mov
std
out
popf
mov
mov
adc
fcomip
jge
push
in
imul
imul
xchg
or
or
xchg
sbb
dec
cwde
jle
mov
jo
add
loop
inc
(bad)
mov
dec
lea
iret
inc
pop
adc
test
xchg
scas
adc
pop
data16
push
sbb
sub
sub
ret
mov
jne
outs
mov
test
mov
aas
add
pop
hlt
mov
nop
mov
push
adc
outs
mov
jmp
mov
add
mov
mov
mov
add
int3
loopne
movs
dec
sbb
stos
ss
or
mov
push
adc
rol
jo
xor
js
mov
fadd
scas
mov
rol
sub
and
movs
stc
push
lahf
mov
sti
cmps
popf
jae
retf
iret
mov
rcl
retf
mov
jmp
call
lds
loop
aad
fcom
jbe
scas
jle
xchg
mov
mov
(bad)
push
es
leave
ss
(bad)
mov
or
mov
inc
daa
sub
jmp
mov
fidivr
pop
ror
mov
test
(bad)
xchg
push
into
out
pop
fdivr
inc
push
adc
into
jecxz
fnstenv
ja
out
stos
call
mov
mov
jge
jl
pop
lea
ss
shl
call
(bad)
sbb
or
add
xchg
div
sub
popa
lea
mov
rol
xor
pop
repnz
inc
mov
sub
pop
inc
add
sbb
mov
scas
(bad)
sahf
sbb
stc
mov
cmp
je
test
sub
nop
call
loopne
div
add
sbb
jmp
popf
adc
xchg
dec
xchg
mov
sbb
js
pop
fist
xchg
adc
or
inc
add
xor
iret
out
jp
test
mov
xlat
mov
fsub
jno
fisub
shr
push
cmps
inc
test
jp
inc
mov
fcomp
and
pop
jg
lods
rol
out
mov
cwde
cmp
cld
jge
call
cld
int3
sbb
add
mov
mov
pop
pop
into
xchg
add
mov
sti
jnp
popf
sti
jo
sbb
pop
popf
inc
rcr
pop
and
mov
sbb
shr
sbb
les
push
cli
sub
xchg
dec
and
pop
cmp
icebp
clc
push
clc
sub
mov
je
xchg
rol
test
or
add
pop
mov
mov
hlt
or
or
xchg
adc
test
mov
adc
jge
dec
mov
inc
(bad)
fcomp
sti
and
pop
push
rcl
es
xor
mov
sbb
mov
or
mov
sbb
and
fbstp
cmp
out
push
or
std
fwait
mov
aas
add
mov
cmps
sub
movs
mov
push
adc
xor
mov
add
inc
inc
mov
jle
loopne
jle
fwait
js
repz
sti
jno
cli
ret
pop
pop
xor
sub
inc
fild
mov
rcr
add
pushf
iret
mov
xor
(bad)
xor
jmp
push
sub
mov
jge
dec
iret
jge
jae
fisttp
retf
mov
xchg
test
or
daa
or
xchg
in
imul
lods
jb
xor
mov
fst
jp
scas
pop
shr
add
sub
sub
or
sub
mul
call
or
sub
fsubr
lea
lea
and
sbb
shr
cmps
inc
test
push
inc
mov
enter
jg
and
retf
fsubr
dec
sahf
dec
movs
lods
repz
ret
imul
mov
pop
add
loopne
jmp
jae
mov
dec
or
cld
xor
div
pushf
int
and
mov
mov
and
int
sbb
adc
cmc
sub
sub
mov
sbb
xchg
(bad)
dec
ds
loopne
push
leave
stos
mov
fnsave
add
sub
int3
pop
xor
inc
xchg
adc
nop
call
jecxz
sub
mov
aad
mov
add
inc
mov
enter
xor
sbb
jb
inc
(bad)
and
sbb
arpl
outs
bound
xchg
aad
inc
cwde
adc
xor
jb
shl
ret
mov
inc
sbb
lock
mov
(bad)
mov
pop
add
cmp
xchg
xchg
inc
pushf
fs
int
pop
inc
push
dec
test
sbb
sub
xor
lods
into
pop
stos
les
add
aam
test
mov
push
iret
sub
lock
mov
in
mov
(bad)
xor
and
xor
push
inc
xor
push
cmp
lds
dec
dec
test
popa
lds
gs
(bad)
sahf
popf
in
mov
mov
pusha
enter
les
stos
retf
sbb
daa
sbb
shl
cmps
mov
jno
ss
lods
jle
mov
adc
mov
outs
push
fcmovne
push
pusha
out
push
mov
xchg
mov
inc
adc
jmp
xchg
dec
(bad)
mov
dec
(bad)
out
inc
les
xchg
stos
mov
xor
push
sub
int
mov
stc
out
xor
cmps
(bad)
sbb
cdq
push
mov
inc
mov
inc
add
(bad)
cdq
pop
addr16
jmp
adc
shr
adc
int3
fnstcw
sub
cmp
and
mov
lods
sbb
out
(bad)
mov
sub
fs
aas
jmp
aas
retf
movs
pushf
dec
pushf
dec
xor
lods
mov
sub
test
push
cmc
mov
cmp
iret
sbb
mov
(bad)
add
enter
mov
daa
or
test
pop
stos
rcr
jge
jae
mov
lods
(bad)
jge
lds
adc
xor
adc
add
or
jb
adc
js
cwde
add
mov
dec
icebp
jbe
ret
daa
xchg
int
adc
and
add
inc
inc
inc
pop
sub
adc
jns
enter
xlat
adc
clc
call
fidivr
out
xchg
dec
fwait
les
retf
or
xchg
test
arpl
cdq
fiadd
aam
cmps
pop
jbe
mov
(bad)
or
inc
inc
push
inc
out
repz
ds
mov
test
sbb
inc
ret
retf
mov
rcr
cmps
mov
cmp
mul
adc
stos
mov
add
sub
lahf
mov
push
mov
push
cmc
shl
or
sahf
retf
sbb
daa
sub
imul
mov
jno
aad
mov
mov
push
cmp
xchg
mov
fwait
(bad)
sbb
sbb
jge
arpl
(bad)
sub
clc
(bad)
mov
out
data16
mov
test
in
fwait
imul
stos
cmp
clc
les
and
out
enter
pop
mov
mov
retf
sub
movs
mov
jne
jnp
popf
repz
mov
imul
aaa
lock
jle
cmc
sbb
inc
inc
mov
pop
bound
repnz
push
or
mov
jbe
add
ret
cmps
cmp
cwde
retf
pop
mov
ror
fld
push
jnp
pushf
dec
sbb
dec
sbb
popf
and
mov
pop
in
dec
pop
mov
pop
sub
les
xchg
fisttp
dec
test
fist
movs
retf
retf
cli
push
xor
inc
xor
mov
into
scas
call
jmp
mov
sub
add
aam
pop
sar
and
mov
xor
xchg
and
es
push
ins
fwait
ins
lea
cmp
in
and
test
push
pop
jp
dec
mov
sbb
xchg
enter
sbb
gs
shl
and
mov
rcr
pop
mov
lods
sub
ja
ds
mov
jnp
mov
adc
jbe
adc
leave
sbb
and
jecxz
ret
popf
fsub
adc
mov
ja
inc
in
dec
sahf
mov
arpl
jge
(bad)
dec
jge
jmp
ror
call
add
ret
or
or
test
jge
cmp
or
(bad)
push
fcom
jb
cs
mov
aad
mov
cld
loop
lahf
call
inc
cli
or
repnz
retf
pop
inc
fisub
inc
mov
add
mov
pop
mov
xchg
imul
mov
xchg
push
inc
test
xor
nop
dec
adc
or
xor
and
mov
dec
inc
ds
dec
inc
mov
push
imul
in
cmc
fdivr
mov
repz
int3
call
push
into
loopne
mov
mov
arpl
cmp
cmp
mov
stc
or
or
push
hlt
mov
push
stos
mov
fdivr
fs
icebp
mov
and
retf
stos
cmp
lahf
inc
and
lds
retf
push
in
fisttp
dec
dec
(bad)
stc
mov
mov
je
mov
shl
cdq
pop
fst
pop
daa
adc
lods
loopne
jl
ror
imul
pop
mov
xchg
mov
aad
stos
mov
adc
lods
scas
push
jmp
mov
mov
or
adc
cmp
and
inc
fcomp
xchg
inc
cli
mov
push
pop
pop
imul
imul
es
(bad)
rcl
jp
dec
mov
cdq
cdq
add
mov
enter
inc
outs
imul
ret
xor
sub
sub
fist
add
loopne
cmp
or
adc
mov
jnp
sahf
or
jl
cld
scas
shr
add
jnp
mov
imul
mov
inc
loopne
std
lds
pop
jne
sbb
ss
cmp
ret
aaa
div
aaa
sbb
xchg
adc
pop
xor
jae
(bad)
in
ret
xchg
ficom
jge
xor
adc
es
jns
inc
pop
in
cmp
enter
or
movs
mov
in
mov
mov
ret
retf
xchg
add
adc
mul
pop
repnz
and
mov
or
aad
fsubr
cmp
push
or
cmp
(bad)
xchg
cmp
out
jnp
xor
xor
mov
sbb
xor
push
adc
ret
add
test
ficomp
add
mov
iret
(bad)
jp
ds
inc
adc
inc
sbb
outs
arpl
push
lock
jmp
sar
popa
cwde
ret
ins
mov
clc
stos
jb
pop
mul
jno
(bad)
iret
xchg
pop
xchg
scas
mov
sti
fisub
dec
dec
(bad)
(bad)
test
push
cmp
ret
xchg
add
sub
mov
inc
ret
push
fsub
sbb
popf
push
fwait
cmps
push
cmps
fucomi
push
nop
jle
xor
std
loope
or
sub
and
add
cmp
ret
jns
mov
sti
stc
xor
movs
ret
mov
inc
inc
mov
mov
(bad)
fmul
pop
cmp
jne
popf
shr
inc
inc
mov
shr
and
fsubr
jns
mov
push
out
int3
add
mov
xchg
(bad)
imul
lds
ds
das
aaa
in
outs
enter
add
cmp
cli
cmps
ret
inc
xchg
movs
loop
call
dec
sbb
ret
aaa
stos
shl
movs
pusha
inc
js
mov
test
pop
retf
ror
enter
test
ret
test
jo
xchg
shr
stos
lds
mov
dec
cli
test
ss
xor
adc
std
into
sbb
fiadd
inc
popa
je
sub
pop
push
jl
xchg
inc
adc
cli
and
add
(bad)
or
popa
call
push
movs
ret
enter
stos
bound
mov
xor
loopne
cmp
leave
mov
je
or
ret
mov
dec
push
jle
xchg
sub
and
dec
mov
pop
sar
dec
adc
mov
inc
in
test
push
cmc
sbb
mov
pop
xchg
mov
mov
adc
sub
stc
cmps
sbb
cwde
jno
aam
shl
and
inc
dec
mov
adc
lods
(bad)
out
inc
jmp
repz
jmp
sub
mov
sub
or
xchg
fcmovb
mov
enter
cmp
sbb
fiadd
inc
push
(bad)
js
xor
adc
fiadd
mov
(bad)
mov
dec
pop
add
jge
sti
adc
or
sub
cmps
fsubr
pop
fwait
sub
mov
lods
sti
repz
mov
inc
dec
mov
sbb
adc
dec
movs
fcmovb
pop
adc
pop
adc
add
aam
sti
mov
adc
jg
mov
mov
pop
mov
(bad)
mov
mov
ror
ret
fisttp
movs
ret
outs
jle
retf
mov
hlt
mov
fimul
cld
(bad)
adc
sbb
sbb
scas
(bad)
lahf
popf
(bad)
jmp
stc
pop
fwait
(bad)
cmp
or
mov
push
sbb
xchg
call
std
xor
push
lahf
mov
aad
mov
add
sbb
jmp
sub
sbb
clc
fwait
jns
je
arpl
rol
sub
dec
cwde
hlt
jle
pop
adc
xchg
inc
pushf
cli
mov
pop
daa
fyl2xp1
mov
mov
push
gs
ins
out
test
fdivr
data16
pusha
xchg
test
int3
pop
and
mov
sbb
xchg
mov
and
push
xchg
mov
ret
imul
sbb
inc
arpl
aas
aas
jae
arpl
cmp
sti
jae
mov
pop
jbe
xchg
shl
xor
aad
pushf
ret
pop
cmp
and
iret
inc
mov
sbb
les
inc
mov
adc
test
pop
call
les
jl
or
hlt
inc
pop
jnp
add
imul
movs
jbe
lea
jp
inc
xor
aad
lods
jge
or
bound
xor
nop
cmp
sub
and
stos
clc
jb
adc
push
dec
inc
mov
push
fbstp
adc
std
inc
mov
(bad)
cmps
fsubr
pop
fild
jp
inc
push
mov
std
jb
inc
stos
enter
pop
pushf
jbe
daa
hlt
je
nop
add
bound
push
dec
mov
cdq
fisub
in
xor
and
aas
mov
push
rol
(bad)
imul
pusha
sahf
ds
dec
add
cs
add
cdq
js
lock
shl
test
scas
leave
fsubr
adc
jle
ss
sbb
and
les
sbb
sub
pop
fs
fisttp
enter
cmp
popf
pop
sbb
xor
xchg
or
xchg
add
pop
pop
and
jns
leave
add
ss
lahf
scas
jg
or
repz
pushf
inc
stc
sbb
or
add
inc
mov
(bad)
mov
mov
clc
fdivr
test
(bad)
addr16
xabort
sbb
jb
outs
daa
movs
hlt
pop
sub
sbb
or
sub
movs
(bad)
out
xlat
repz
pop
mov
retf
mov
dec
loopne
in
mov
test
jae
addr16
in
(bad)
fist
jnp
mov
sbb
sbb
sbb
and
in
div
inc
mov
xor
shl
push
add
lds
fsubr
mov
inc
(bad)
fs
fisttp
jae
fisub
gs
test
jge
xchg
add
xchg
pop
dec
rol
stos
int
sbb
pushf
xchg
mov
les
sbb
pop
test
scas
fistp
fprem1
cmp
inc
shl
cmp
adc
dec
adc
in
jge
xchg
scas
mov
adc
and
xrelease
mov
lea
retf
in
jnp
fcom
shl
scas
cmps
inc
test
jp
inc
mov
fld
push
inc
mov
dec
inc
ds
dec
inc
mov
cwde
cmp
shr
mov
mov
pop
dec
pop
jbe
movs
or
pop
dec
adc
pop
mov
loopne
out
mov
stc
sti
mov
repz
mov
hlt
mov
iret
mov
fstp
rcr
inc
rol
sub
inc
dec
mov
cmp
lods
(bad)
pop
mov
clc
mov
mov
je
xchg
rol
test
inc
sbb
retf
(bad)
fwait
int
mov
mov
xchg
fcmovb
add
retf
fldcw
xchg
pushf
shr
fwait
nop
leave
retf
call
int3
mov
icebp
jmp
mov
and
xchg
adc
add
inc
cwde
adc
stos
stc
repnz
or
push
ror
add
and
(bad)
neg
mov
popa
cmc
shl
lods
push
sub
hlt
xor
test
mov
int
mov
nop
cmc
xor
pop
cmp
mov
arpl
lea
movs
imul
cmps
loope
cli
sti
mov
jae
push
(bad)
inc
ss
sbb
inc
and
stos
jmp
jg
mov
and
iret
inc
loop
sub
and
jno
(bad)
sar
dec
sbb
loop
cli
mov
leave
test
mov
ror
fisttp
mov
les
inc
scas
ja
aad
pop
mov
inc
call
push
leave
jnp
dec
xor
pusha
mov
imul
jg
(bad)
test
jmp
iret
and
inc
sar
add
jmp
stos
outs
sub
add
jbe
inc
sbb
cmps
adc
xabort
or
inc
cdq
add
mov
pop
or
leave
sbb
mov
ror
ja
sbb
dec
mov
sbb
add
ret
mov
cwde
in
inc
push
mov
xchg
mov
lods
jmp
pop
retf
leave
icebp
lock
sahf
ret
mov
test
popa
sbb
xor
mov
xor
ror
dec
add
lds
sbb
mov
test
mov
mov
xchg
fcom
and
mov
or
addr16
pop
outs
shr
mov
movs
add
jecxz
fwait
popf
loop
cmps
dec
push
pop
call
repnz
popa
or
sub
outs
and
ror
movs
mov
test
aam
inc
mov
stc
repnz
or
sbb
adc
add
fsub
jns
inc
out
add
mov
pop
inc
in
leave
sbb
pop
sub
mov
xchg
out
sub
fnstcw
pop
pop
dec
add
int
pop
lods
inc
mov
or
repz
in
mov
in
clc
add
add
mov
adc
retf
inc
mov
fwait
out
mov
sbb
adc
mov
push
retf
push
test
test
(bad)
nop
sbb
mov
push
jnp
jno
scas
mov
aaa
jmp
push
sbb
ret
mov
inc
retf
or
inc
cmp
test
aaa
push
xlat
jle
mov
push
enter
lahf
scas
mov
out
adc
xchg
dec
repnz
add
leave
test
add
cmp
xor
mov
dec
xor
retf
jmp
mov
retf
inc
and
fidivr
dec
stc
shl
outs
xchg
retf
bound
push
or
mov
and
mov
int
mov
test
sti
mov
or
mov
xchg
sahf
out
pop
fucomip
repz
mov
jecxz
push
fst
dec
pop
add
adc
lds
push
sbb
arpl
test
jb
mov
dec
in
pop
inc
lahf
push
sub
mov
sbb
jmp
push
fwait
arpl
das
jno
inc
push
and
ret
add
das
or
imul
adc
add
xor
pushf
shl
retf
mov
(bad)
(bad)
jnp
jle
scas
push
jmp
mov
or
std
sub
rcl
aaa
and
ret
movs
xlat
ins
imul
add
retf
(bad)
xchg
cdq
(bad)
loop
pop
fsub
jge
dec
pop
mov
test
enter
inc
add
fwait
les
mov
push
inc
mov
pop
mov
pop
adc
aad
jns
fiadd
les
pop
pop
dec
sbb
jae
movs
(bad)
imul
loope
in
ja
nop
xor
mov
adc
push
mov
push
pop
or
xor
in
mov
je
test
movs
adc
ret
dec
scas
sti
pop
les
test
xchg
fadd
invd
pushf
les
or
xchg
jl
rol
xchg
(bad)
outs
sub
xlat
mov
push
inc
pushf
shr
fwait
xchg
lahf
pop
jmp
bnd
enter
pop
push
imul
adc
add
inc
inc
pop
adc
xchg
jge
repz
cwde
dec
and
push
fdivr
xor
inc
jge
imul
push
popf
rep
cmp
fcomp
pop
fsub
gs
icebp
mov
sbb
aam
dec
xchg
xchg
cdq
ja
inc
mov
push
dec
mov
cdq
stc
inc
cmp
mov
lods
fwait
mov
jmp
mov
iret
in
xchg
int
outs
rcr
dec
jnp
mov
mov
clc
jecxz
sbb
and
in
or
sub
fcmovbe
sbb
jno
aad
sbb
and
sbb
xor
inc
mov
test
stos
js
loopne
dec
(bad)
sub
cmps
inc
cmp
jae
xor
aam
out
xchg
int
xor
mov
iret
jnp
(bad)
pop
cld
xor
adc
aad
leave
push
mov
leave
in
test
xchg
leave
loop
and
mov
inc
aam
js
or
push
mul
pinsrw
sub
xchg
inc
stos
push
mov
sahf
inc
ret
stos
pop
inc
mov
cmp
iret
pusha
mov
cmp
adc
push
adc
or
dec
dec
mov
cwde
pop
cmps
and
jnp
mov
neg
add
shl
or
js
push
push
pop
adc
jno
or
jp
ins
call
mov
inc
sbb
ins
pushf
ret
cmps
xchg
adc
sbb
dec
and
jne
les
fisub
and
scas
mov
fisttp
add
jge
(bad)
push
cli
push
loop
cmps
jno
retf
inc
cs
rol
adc
stos
pop
xchg
xchg
sbb
mov
and
mov
rcl
sbb
mov
mov
aad
(bad)
push
cmc
outs
pop
add
push
mov
mov
mov
or
dec
add
add
pop
movs
mov
or
push
sbb
cld
push
sti
test
sbb
in
mov
rcr
xchg
sub
jecxz
lahf
jmp
and
inc
loope
adc
xchg
(bad)
mov
and
es
into
outs
mov
jle
mov
aaa
add
ficomp
sar
sahf
adc
cmp
sbb
imul
ss
jmp
ss
sbb
mov
dec
inc
test
(bad)
enter
test
mov
shl
movs
imul
cli
ss
fiadd
repz
add
and
adc
stos
jne
dec
add
das
sub
retf
lds
sbb
pop
ds
jle
cmp
mov
in
mov
int
jo
dec
rcl
ins
ret
mov
jle
js
sbb
pop
call
(bad)
rcl
push
mov
push
mov
jp
test
imul
ret
fld
call
jae
sbb
jecxz
adc
adc
movs
ret
push
xchg
dec
retf
scas
retf
inc
xor
jb
jmp
fiadd
add
call
les
inc
mov
into
fwait
lahf
lds
bound
lock
inc
sbb
jg
add
aam
jge
cdq
mov
repz
sbb
(bad)
cli
icebp
ss
shl
dec
sbb
add
sub
jne
js
push
sbb
sahf
popf
(bad)
stc
mov
mov
je
mov
or
xchg
push
sbb
pushf
inc
pop
sub
cmp
dec
mov
mov
add
pop
call
ret
pushf
shr
fwait
xchg
adc
pop
jo
or
loop
sbb
add
sbb
jmp
jge
dec
jmp
stos
sbb
movs
pop
push
leave
inc
jge
imul
stos
cmp
call
add
dec
retf
jae
sub
inc
mov
call
das
leave
mov
shr
loopne
xor
int3
call
in
and
pop
mov
jno
sub
mov
inc
sbb
outs
fild
popa
mov
stos
mov
lds
xchg
mov
mov
jb
cmp
dec
sbb
(bad)
sbb
test
cmp
push
outs
mov
les
test
or
sub
aaa
mov
adc
sub
ficom
mov
js
jbe
mov
mov
xchg
out
ret
outs
mov
or
repz
ins
pop
bnd
dec
cmc
enter
or
movs
mov
xchg
push
ror
int3
or
adc
xchg
les
pop
inc
sbb
mov
xchg
call
xchg
or
push
adc
push
mov
mov
push
jae
cdq
pop
dec
mov
ror
imul
sbb
std
arpl
mov
je
loopne
add
fld
neg
out
mov
mov
outs
add
add
push
add
jbe
call
mov
mov
aad
dec
movs
sub
push
sub
jmp
ret
mov
fst
pop
js
cld
sub
imul
je
lahf
jae
aam
cmp
ret
xchg
xchg
leave
mov
sub
jmp
jns
inc
pop
mov
jmp
(bad)
adc
push
add
into
scas
jg
js
xor
xor
cmc
xor
add
mov
repnz
rol
sub
movs
test
push
mov
fild
jae
inc
js
imul
cmp
and
pop
pop
mov
jecxz
adc
pop
jmp
mov
and
fcom
inc
in
dec
stos
call
mov
repz
xchg
or
ss
sub
inc
imul
jmp
in
stc
ds
mov
movs
ret
inc
dec
pop
push
sbb
cmp
dec
lock
fadd
sub
mov
sbb
(bad)
out
jle
shr
pop
sbb
scas
cmp
out
mov
adc
sub
mov
or
(bad)
mov
or
add
iret
daa
jecxz
mov
lods
push
pop
mov
pusha
mov
mov
ffreep
mov
(bad)
mov
cmp
jle
js
sbb
stc
or
xor
dec
mov
adc
test
pop
xchg
and
test
popa
call
cdq
(bad)
rcr
cmps
sti
fisttp
ja
outs
dec
test
sbb
stos
sub
jmp
jmp
outs
imul
sahf
gs
xor
scas
scas
pop
stos
les
scas
mov
push
test
lock
xor
sbb
push
rcr
mov
jbe
call
mov
and
dec
out
xchg
push
stos
les
sbb
repnz
(bad)
es
fucomp
fs
fisttp
add
rcr
xchg
sbb
adc
mov
inc
sbb
xor
xor
add
xchg
xchg
sbb
lods
jbe
fcom
and
icebp
mov
js
popf
jecxz
(bad)
pushf
repnz
and
test
int
mov
cmps
mov
xor
rol
xor
sti
xchg
and
out
int3
popa
sub
jnp
enter
ins
sahf
push
lds
enter
add
sub
dec
or
jecxz
adc
pop
dec
jo
ja
mov
loopne
sub
imul
dec
cld
in
stc
ds
hlt
mov
inc
mov
add
sub
xor
popf
pushf
fs
clc
retf
data16
pushf
dec
and
jno
(bad)
fistp
fldenv
mov
xchg
(bad)
lahf
popf
les
shr
je
jmp
ss
daa
mov
jge
dec
movs
shl
adc
fdiv
xchg
lock
(bad)
aad
mov
jmp
sahf
pop
fs
loop
inc
(bad)
mov
test
or
mov
mov
xor
dec
shl
pushf
xchg
mov
mov
add
(bad)
ror
ret
fwait
lea
lahf
out
call
mov
stos
xchg
enter
sbb
ja
out
test
jne
dec
movs
nop
repz
adc
xchg
pop
push
mov
mov
repz
cmp
std
jl
ret
pop
lds
ds
mov
in
mov
sbb
outs
add
(bad)
xor
add
lods
mov
test
rcr
sbb
sbb
sahf
push
sub
sub
inc
fist
fimul
retf
ins
mov
test
jae
in
adc
mov
movs
push
cmp
movs
mov
cld
jp
add
sbb
lods
jle
stc
ret
mov
cmp
and
cmp
adc
sbb
xchg
add
sbb
mov
push
(bad)
mov
cmp
sti
dec
mov
gs
imul
pop
fisub
mov
mov
cmp
inc
mov
hlt
js
cmc
or
adc
jns
jns
out
stos
stc
jne
dec
mov
in
xor
ret
push
dec
mov
cdq
addr16
cs
or
rcr
(bad)
imul
iret
dec
jg
sbb
ds
mov
jnp
movs
ror
pop
out
mov
adc
retf
inc
sti
or
test
ins
rcr
jmp
leave
mov
sbb
clc
iret
sahf
sbb
cmp
fild
clc
xchg
dec
das
repnz
sub
js
mov
jmp
sbb
pop
mov
in
dec
lods
push
sub
inc
sbb
lods
(bad)
fucomi
repnz
leave
or
mov
dec
mov
pop
sub
xchg
fwait
aaa
mov
sbb
mov
lahf
adc
mov
(bad)
xchg
cdq
pop
(bad)
sbb
daa
sti
repz
adc
stos
enter
and
jl
push
mov
int
jle
push
iret
mov
pop
ds
mov
dec
add
mov
popf
stc
mov
jmp
pop
fist
pop
sahf
repz
movs
dec
int3
cmp
adc
pop
sti
lsl
push
cs
inc
test
cmps
arpl
push
mov
cld
mov
psubd
int
retf
jae
fisttp
mov
inc
(bad)
cmp
pop
xor
retf
imul
inc
cmp
scas
mov
call
inc
pop
in
jmp
cmps
push
jl
shr
mov
ss
xcrypt-cbc
cmps
xlat
in
jecxz
arpl
rcr
ror
push
ror
push
fsub
or
or
ja
mov
jae
stos
mov
fxch
mov
and
mov
mov
add
xor
xchg
pusha
mov
mov
jle
inc
pop
fdiv
js
loop
movs
push
adc
in
cmp
pop
add
(bad)
jmp
jge
jle
jmp
retf
jecxz
popa
mov
pop
add
rcr
es
sbb
fld
jae
scas
dec
xor
ror
mov
inc
and
mov
sub
lods
xchg
push
stc
ss
into
je
mov
sbb
ret
or
or
sub
outs
les
nop
repnz
jbe
das
dec
cdq
lds
xchg
pop
(bad)
xlat
(bad)
in
sbb
dec
lea
nop
sbb
add
sbb
or
les
xlat
mov
add
mov
mov
xchg
ins
out
adc
jp
sti
(bad)
xlat
xchg
(bad)
shr
mov
shl
cmp
push
aas
add
push
adc
bound
cmc
mov
mov
stc
dec
xchg
mov
shr
pop
ins
sbb
pop
movs
imul
fucomip
repz
sti
pop
pop
iret
sub
lock
rcr
rcr
div
jno
inc
sbb
shl
sbb
les
movs
shr
dec
stos
push
in
dec
mov
dec
rcl
xchg
(bad)
pop
fucom
jae
inc
rcr
xchg
sbb
xchg
add
add
stos
cmc
lock
call
jle
mov
sub
mov
jmp
popf
push
rcr
dec
out
xor
rcr
cmps
add
pop
sub
mov
and
xchg
push
inc
cwde
adc
and
xchg
icebp
jbe
pop
test
gs
imul
lahf
(bad)
(bad)
xchg
cdq
out
cmp
shl
mov
mov
je
sbb
int3
inc
add
sbb
loopne
cmc
mov
adc
adc
adc
int
xchg
ja
retf
in
cmc
fbstp
jnp
inc
jmp
add
inc
sbb
inc
dec
cmp
addr16
fadd
or
xor
stos
rcl
mov
inc
in
retf
sbb
sub
scas
mov
std
ss
jmp
push
sbb
rol
fst
pop
daa
push
pop
push
stos
jge
movs
and
scas
in
inc
(bad)
or
inc
pop
mov
loope
fst
pop
cmps
(bad)
jecxz
(bad)
adc
lahf
fbld
(bad)
loop
xchg
adc
rol
push
inc
mov
xchg
and
mov
push
icebp
test
mov
xchg
imul
test
(bad)
xchg
cdq
into
out
pop
fsub
gs
stc
dec
add
pop
pop
pop
push
dec
dec
mov
fdivr
dec
aaa
shr
in
cmc
fiadd
shl
out
mov
loopne
stos
aas
xor
lahf
ret
loopne
pop
adc
clc
inc
mov
ins
repz
mov
cdq
jo
repnz
xchg
sbb
dec
inc
sbb
sub
adc
ret
pop
fadd
adc
mov
fisttp
sahf
mov
push
sub
arpl
mov
lahf
(bad)
push
fucom
out
arpl
test
and
push
push
stos
jge
sbb
(bad)
ret
cdq
fsub
mov
cdq
lods
int
mov
pusha
dec
stos
out
(bad)
fcmovnb
push
cmp
popa
or
sub
dec
test
mov
push
xor
sbb
cmp
addr16
ins
adc
jmp
aad
pop
cmps
(bad)
cmp
popf
and
cmp
fst
fwait
scas
add
cmp
push
aas
add
push
adc
mov
retf
dec
sahf
dec
jo
idiv
rcr
push
sahf
xor
sbb
dec
lahf
in
cld
add
scas
jo
or
int
test
sahf
and
mov
sbb
arpl
adc
mov
and
test
popa
sub
(bad)
fidivr
lods
mov
mov
ret
sbb
dec
cmps
xchg
test
inc
pop
xchg
ret
xchg
xchg
stos
xchg
call
inc
call
jle
mov
cmp
pushf
shr
xchg
sahf
ficom
fwait
(bad)
push
jo
sub
icebp
and
ins
je
mov
dec
fsub
cwde
or
and
dec
and
jns
dec
xor
jp
mov
popf
js
rcr
mov
xor
call
mov
xor
loop
push
je
test
add
mov
inc
shr
loope
jne
dec
mov
repz
arpl
int
pop
movs
rcl
lahf
sbb
in
(bad)
jge
div
sar
dec
inc
call
or
inc
sbb
das
or
daa
mov
pushf
fs
retf
inc
in
scas
rcl
pop
sbb
int
inc
cmp
stc
mov
lock
push
inc
cmp
leave
setne
nop
call
std
adc
xchg
inc
pop
call
add
inc
test
jmp
fwait
(bad)
idiv
fcmovnu
fist
sub
aaa
adc
add
jns
xchg
icebp
pop
test
cdq
cmp
xchg
sub
repz
mov
push
push
ins
cmovae
int
push
fldz
idiv
and
mov
popf
out
clc
jg
and
loope
pop
mov
imul
mov
jns
aaa
cmp
sbb
push
cld
cmp
mov
mov
jae
iret
cmp
hlt
movs
ret
inc
stc
or
or
pop
adc
call
mov
and
aaa
mov
pop
hlt
mov
scas
mov
and
cmc
std
sub
xchg
adc
jae
xchg
add
hlt
push
scas
cmp
fisub
and
aaa
push
pop
jno
cs
dec
and
mov
cmps
mov
mov
or
xchg
movs
pop
jge
in
arpl
inc
push
sbb
mov
adc
and
fs
add
pop
pop
xchg
cmps
jnp
out
xchg
lods
lahf
(bad)
cmps
jnp
test
mov
mov
in
imul
out
leave
cmp
or
jle
mov
aas
adc
jnp
mov
dec
sahf
dec
mov
repz
mov
mov
xchg
dec
add
cmp
retf
in
cmc
adc
mov
or
add
mov
pop
cli
or
rol
pop
sub
popa
call
jno
(bad)
fistp
xchg
xchg
dec
sbb
dec
push
dec
sub
loop
push
(bad)
rcl
test
fcom
inc
cmp
push
imul
push
mov
mov
fcom
sbb
or
push
rcr
bnd
jg
mov
and
xchg
add
xor
mov
out
jp
outs
cwde
dec
and
adc
mov
data16
cmps
shl
fdivr
dec
mov
or
retf
mov
ror
test
xchg
push
mov
jns
call
call
call
icebp
ins
call
loopne
mov
repz
sti
ja
inc
rcr
add
pushf
rcl
or
je
hlt
sub
aad
pop
cmps
jno
dec
and
mov
mov
ss
rcl
imul
xlat
dec
push
retf
mov
dec
cmp
rep
(bad)
(bad)
mov
sar
xchg
xor
(bad)
jge
push
ins
ins
jge
dec
movs
adc
sbb
fist
xchg
sbb
lds
cld
add
call
test
and
or
xor
or
xor
gs
adc
cmp
mov
push
xchg
imul
xor
xchg
dec
cs
(bad)
(bad)
outs
or
pop
(bad)
repnz
out
jmp
jecxz
and
add
xchg
sub
test
loopne
add
fcmovnb
adc
into
add
imul
in
jp
std
mov
ret
scas
add
dec
push
pop
mov
sbb
cdq
mov
fnsave
enter
push
rcr
xor
jne
vandnps
jns
mov
shl
hlt
adc
pop
retf
xchg
ins
jae
lods
repnz
adc
hlt
cdq
les
cmp
add
ret
std
mov
les
pop
xchg
push
jecxz
(bad)
mov
lahf
leave
ficom
sahf
fimul
out
push
repz
add
and
(bad)
ins
xor
add
(bad)
or
iret
and
ror
rcl
jp
cwde
push
call
inc
mov
test
enter
jb
inc
cdq
out
cmp
leave
mov
cwde
inc
mov
push
push
pop
xchg
dec
dec
mov
rcl
cmp
cs
jle
popa
sbb
push
shr
repz
adc
imul
xor
xchg
jmp
sub
call
in
inc
rcr
add
or
sub
pop
pop
mov
fadd
sub
mov
cmp
fwait
shl
xlat
adc
inc
and
les
lods
leave
lods
sbb
ss
dec
rcl
scas
shl
xor
add
add
lock
or
xchg
imul
jge
pop
mov
sub
add
inc
cdq
pushf
adc
push
ret
xchg
dec
data16
jp
cs
ffree
div
sbb
dec
sbb
xchg
sbb
mov
call
inc
test
fwait
imul
xchg
clc
data16
push
xor
push
fwait
mov
push
inc
popf
push
mov
mov
mov
sti
and
xchg
xchg
add
leave
sbb
add
jge
dec
cmp
in
out
cwde
sbb
cmp
in
into
cld
xchg
les
inc
mov
push
jae
in
aas
dec
fsubr
hlt
lock
add
test
ret
test
pop
mov
lods
xchg
sub
adc
fldenv
sbb
cld
mov
xchg
stos
jo
and
mov
sar
xchg
xor
nop
test
dec
mov
or
xor
stos
cmc
add
push
push
cdq
fcom
inc
pop
push
adc
pop
enter
repz
out
js
inc
fdivr
shl
pop
or
les
push
ror
cmc
addr16
sbb
xchg
cmp
mov
aad
inc
xchg
push
in
les
mov
loop
out
je
fcom
hlt
je
test
cmp
jmp
pop
bnd
jle
rcl
(bad)
and
pop
xchg
in
data16
dec
inc
pop
add
leave
(bad)
sbb
imul
jbe
add
lds
loopne
push
adc
mov
jmp
neg
sbb
jge
rol
or
aam
push
mov
xlat
sahf
cmp
fld
cld
aaa
js
loopne
mov
(bad)
ss
aam
cmp
cli
xchg
add
inc
and
mov
jns
dec
inc
pushf
sub
adc
inc
inc
jmp
arpl
sbb
lds
inc
(bad)
mov
rol
loope
mov
add
dec
sar
repnz
les
and
sub
sub
jmp
lea
mov
cmp
fdiv
mov
clc
int3
or
in
aam
call
and
movs
lea
mov
adc
arpl
fisub
into
fild
sbb
xchg
dec
jae
sbb
js
jns
add
xor
pop
add
js
sub
jl
repnz
stc
jbe
and
mov
sbb
jne
les
cli
movs
cmp
jno
pop
push
lock
jle
fs
frstor
jecxz
in
dec
mov
cmp
mov
mov
xchg
add
xchg
jl
ror
outs
cmp
jmp
xchg
jbe
pusha
inc
jecxz
xchg
cmp
js
and
cdq
pop
fs
loop
jg
or
xor
idiv
iret
push
mov
or
stos
aam
mov
(bad)
(bad)
jnp
inc
push
mov
sub
push
mov
sbb
xchg
fistp
jb
pop
fsub
xor
mov
pop
pop
add
cdq
dec
push
and
cmp
imul
dec
mov
jbe
mov
pushf
idiv
shl
jge
iret
cmp
dec
lahf
jmp
outs
xor
mov
sbb
cdq
mov
and
cwde
retf
movs
ret
sbb
push
es
stos
mov
pop
stos
push
and
mov
mov
ret
mov
sbb
cli
(bad)
in
cmc
fst
add
scas
fmul
das
or
imul
ss
mov
shr
arpl
cmp
jp
pusha
mov
cld
or
fcmovnu
lahf
adc
mov
fild
or
add
ja
in
test
push
jmp
mov
(bad)
xchg
mov
cmps
movs
out
addr16
sahf
lea
mov
pop
sbb
hlt
je
or
mov
imul
mov
(bad)
shl
mov
pop
loopne
cdq
test
loopne
mov
lock
lock
jecxz
xor
cdq
adc
(bad)
push
sbb
xchg
mov
mov
ficom
push
push
and
test
fisub
jae
cmp
fistp
repz
scas
cmp
mov
test
push
and
push
scas
xchg
ficom
outs
mov
and
dec
mov
mov
ret
fst
pop
cmps
data16
pushf
lods
jg
leave
in
mov
xchg
push
(bad)
pushf
repnz
mov
in
outs
inc
mov
cmp
test
xchg
and
cmp
push
fisub
adc
ret
push
cmp
call
icebp
inc
cdq
enter
sahf
jnp
pop
add
adc
sub
mov
jne
dec
movs
pop
mov
mov
pop
fnstsw
sar
mov
lods
sti
pop
adc
out
sti
mov
repz
add
fild
das
sub
xor
cmps
mov
test
xchg
and
sbb
test
repnz
test
jmp
push
in
fsincos
(bad)
sahf
popf
mov
mov
mov
arpl
jl
daa
dec
push
sbb
cmp
xchg
stos
lds
xchg
lea
adc
(bad)
pop
test
lods
inc
sbb
mov
(bad)
cmp
js
imul
rcr
fadd
mov
push
pop
xchg
jle
loope
and
mov
mov
pop
cmps
ret
mov
imul
mov
sbb
out
scas
es
sub
jmp
adc
dec
mov
dec
imul
sub
adc
push
retf
push
or
aam
retf
jecxz
push
and
jb
repnz
push
dec
bound
pushf
inc
ss
movs
mov
idiv
les
fsubr
fldcw
ffree
pusha
or
lods
mov
mov
jmp
iret
jmp
adc
xchg
retf
stos
lds
mov
cmp
jnp
push
push
and
mov
test
pop
or
pushf
repnz
ret
rcr
les
xchg
inc
test
aad
pop
repnz
and
dec
les
push
xchg
mov
in
add
stos
mov
sbb
or
mov
call
test
out
sub
dec
push
and
mov
mov
xchg
cmp
mov
sar
jns
aaa
sub
div
pop
scas
les
repz
mov
addr16
add
mov
into
jp
test
inc
sbb
inc
sub
add
out
pushf
pushf
dec
cmps
mov
hlt
lods
sbb
and
(bad)
and
sbb
xchg
(bad)
pop
popf
jae
cmp
lahf
jae
out
imul
pop
or
sbb
leave
out
imul
dec
or
xchg
fild
push
jb
fcom
mov
cmps
pop
push
imul
push
ds
icebp
icebp
fild
mov
add
bound
add
hlt
dec
aam
pop
aam
push
sbb
jmp
cmp
mov
mov
fsub
push
stos
xor
sbb
or
cs
(bad)
(bad)
(bad)
hlt
jns
out
mov
enter
dec
push
or
sbb
mov
mov
test
call
xor
cmp
mov
and
push
sbb
stos
jo
or
add
and
mov
jg
push
test
cwde
retf
(bad)
pushf
dec
and
jne
les
test
mov
mov
dec
popf
mov
loope
xor
xchg
in
mov
(bad)
jmp
dec
mov
sbb
retf
mov
xor
mov
lock
loope
pushf
fst
pop
pop
lahf
inc
lahf
scas
jg
leave
sub
sbb
jo
ja
js
or
or
test
dec
daa
xor
push
std
out
rcr
test
push
scas
xor
push
fisub
and
xor
pop
fsub
es
jne
or
jmp
dec
dec
mov
inc
jnp
mov
push
daa
cmc
xor
mov
lods
ds
dec
cmps
out
xchg
dec
push
sahf
or
mov
cmp
mov
jecxz
inc
add
enter
dec
lock
movs
fst
adc
mov
aas
repnz
mov
pushf
add
jns
sbb
test
xor
out
fist
sbb
fs
fbld
sub
cmps
xchg
cdq
fisub
les
adc
sahf
pop
xchg
ror
xchg
fcmovnb
cmp
push
jb
lods
pop
or
lds
inc
stos
mov
pop
fwait
(bad)
pop
jo
or
cmc
and
cmp
rcr
test
dec
adc
js
je
mov
add
jp
sub
cmps
fsubr
lods
in
xchg
enter
mov
(bad)
xlat
imul
xor
loopne
adc
or
inc
mov
inc
mov
daa
fst
inc
test
cmc
adc
fdiv
cdq
sub
ss
(bad)
mov
imul
das
retf
jecxz
ins
mov
adc
jbe
adc
xchg
and
retf
xchg
dec
pushf
inc
stos
xchg
adc
mov
pop
sbb
shr
dec
sbb
cli
mov
xchg
mov
popf
retf
mov
adc
test
jo
in
jmp
push
outs
les
push
mov
xor
jmp
sbb
aad
mov
jmp
fist
fcmovnu
fidivr
sub
xor
inc
add
adc
mov
mov
fnstenv
imul
add
cmps
jnp
jp
cmp
imul
enter
or
xor
sbb
sub
retf
gs
das
in
cmc
hlt
test
popf
lea
iret
inc
mov
push
jl
jle
loopne
clc
into
fwait
jg
in
repz
hlt
mov
mov
pop
fwait
aad
or
or
or
aam
jnp
cmp
mov
and
retf
pop
stos
push
cmp
push
pop
outs
bound
scas
mov
test
dec
pop
or
test
xchg
sbb
sbb
or
mov
stos
xchg
data16
sbb
sub
stc
mov
jecxz
fwait
retf
cmps
loope
mov
scas
(bad)
push
bnd
jg
mov
adc
or
mov
ret
or
sub
xchg
sub
add
mov
lods
ret
push
stos
mov
(bad)
call
jnp
int3
jne
jecxz
mov
add
dec
xchg
dec
inc
dec
push
and
mov
ins
loopne
mov
fadd
(bad)
arpl
int
mov
in
mov
jae
mov
jecxz
xor
rcr
lock
pop
fsubr
or
out
jno
dec
call
or
xor
lods
adc
pop
pop
movs
inc
adc
scas
mov
imul
fs
(bad)
xchg
sub
add
cmp
mov
stos
sbb
scas
xchg
fisttp
stos
xchg
push
adc
inc
mov
(bad)
pop
test
add
jbe
lahf
dec
das
(bad)
jmp
sub
(bad)
fyl2x
and
add
fild
sbb
mov
stos
push
sbb
sbb
mov
pop
test
ins
xchg
inc
popf
and
stos
and
lahf
(bad)
xchg
frstor
call
cmps
sti
mov
jne
jecxz
repz
sbb
enter
shr
mov
popf
out
jns
sub
imul
push
pop
test
sub
mov
popf
ds
cmp
jae
mov
dec
clc
add
xor
mov
mov
jbe
jbe
iret
cmps
mov
push
mov
jmp
pop
fs
shr
push
and
lds
rol
sbb
stos
adc
xchg
xor
xchg
xchg
arpl
cli
daa
pop
dec
data16
scas
arpl
jge
dec
jle
imul
xchg
jb
lods
mov
mov
fst
pop
cmps
(bad)
aam
lahf
scas
div
dec
in
mov
leave
loop
sub
popa
add
inc
inc
or
sub
jns
dec
and
inc
test
inc
push
fsub
xchg
imul
(bad)
scas
xchg
fldenv
aaa
inc
cdq
enter
mov
inc
nop
pop
xchg
enter
hlt
mov
daa
sub
retf
ret
pop
push
mov
or
gs
fild
aam
icebp
pop
add
test
stos
cmp
jae
fist
inc
ret
sahf
sti
jnp
mov
cli
add
shr
mov
hlt
lods
mov
leave
int3
addr16
ret
sbb
push
es
stos
mov
pop
stos
push
and
dec
inc
jg
inc
mov
jecxz
mov
cmc
aad
stc
push
data16
pop
xor
add
icebp
je
add
inc
and
mov
dec
mov
(bad)
dec
pop
pushf
ret
mov
inc
sbb
scas
pop
pop
enter
jg
mov
adc
sbb
mov
inc
mov
add
push
dec
add
or
push
fisubr
popf
cmps
call
sbb
jbe
pop
out
inc
cdq
(bad)
cwde
fsub
in
fwait
je
mov
inc
ds
dec
dec
pop
mov
jmp
mov
push
sar
shl
mov
ret
loopne
jmp
sti
pop
pop
iret
ret
sahf
and
ret
cmp
sub
inc
aas
cli
or
jg
cld
inc
xor
mov
scas
adc
scas
mov
pop
test
mov
sbb
dec
pop
dec
xchg
test
scas
fld
mov
lock
hlt
mov
daa
sbb
repz
movs
fisubr
mov
stos
fstp
fisttp
cmp
push
enter
jmp
popf
fmulp
cdq
mov
neg
out
push
adc
ror
sar
repz
add
or
mov
jmp
adc
pop
in
cmp
enter
lods
jae
call
or
(bad)
and
mov
sbb
add
call
dec
das
mov
sub
shl
cmp
adc
cld
repz
and
cwde
mov
es
fdivp
jnp
mov
enter
fs
hlt
mov
or
sub
sbb
or
mov
pop
stos
inc
in
dec
push
add
fadd
pop
scas
mov
test
mov
sub
ins
cmp
dec
data16
scas
jne
inc
xchg
jmp
dec
mov
lds
leave
ret
jecxz
cmp
xchg
jl
push
jg
ret
hlt
mov
xor
cs
test
rcl
repz
enter
add
mov
fmul
and
push
fsubr
movs
enter
cmc
pop
fadd
pop
fidivr
sbb
cmp
loop
pusha
in
mov
push
xor
test
inc
push
xchg
ret
dec
mov
fsubr
out
cmc
xor
outs
pop
push
test
jge
xlat
arpl
int
cwde
adc
movs
and
in
call
adc
push
sti
(bad)
mov
xchg
mov
lock
out
adc
cdq
jo
inc
sbb
leave
aad
retf
movs
ret
fs
mov
push
cmps
adc
movs
fldcw
fucomp
je
pop
dec
push
retf
ror
fcom
sbb
mov
test
sub
inc
sub
in
mov
cmc
call
xchg
sbb
add
cmp
call
sub
mov
(bad)
fadd
and
xor
fwait
add
arpl
dec
mov
mov
stc
cmp
mov
xchg
mov
jnp
xchg
push
fisub
mov
cmp
enter
mov
sbb
mov
mov
out
push
adc
jle
push
lods
xchg
mov
sahf
dec
mov
icebp
ja
test
mov
int
pop
movs
fisubr
jge
iret
cmp
or
daa
outs
mov
inc
sbb
pop
add
mov
mov
vpackssdw
adc
ret
sbb
std
imul
or
dec
push
inc
cmp
je
mov
sub
fst
frstor
sbb
mov
add
int3
clc
into
cmp
jne
push
shl
cmps
fsubr
scas
push
jg
fst
(bad)
fcom
sti
and
add
and
adc
les
or
out
fwait
xchg
scas
aam
sahf
xchg
and
mov
inc
mov
cmp
(bad)
sbb
(bad)
xor
(bad)
or
fsub
mov
sbb
and
mov
dec
mov
lock
cmp
mov
add
push
dec
inc
sahf
shr
or
jbe
jg
dec
sar
ret
mov
add
retf
inc
sbb
xchg
mov
lds
xchg
and
ret
inc
sbb
rcr
xchg
or
jp
stos
out
repz
rcr
jbe
movs
call
fisub
(bad)
test
aaa
cli
je
movs
icebp
add
push
sbb
ret
or
jnp
or
pop
outs
les
std
lock
add
mov
fst
cmps
inc
jo
into
mov
icebp
cmp
js
popf
push
adc
leave
loop
xchg
js
mov
into
add
ror
xor
rcl
je
inc
cmp
xchg
mov
aas
add
call
pop
lods
mov
sub
push
mov
push
adc
or
jecxz
enter
sbb
sbb
retf
gs
loopne
push
jne
(bad)
idiv
shr
ss
aam
aas
stos
fmulp
(bad)
pop
sub
in
movs
div
or
ror
js
sar
dec
pop
add
out
sbb
push
lock
scas
in
test
jb
jns
imul
loop
jge
jnp
mov
mov
repz
mov
jp
pop
sbb
inc
pop
add
stos
mov
or
mov
pop
xchg
int3
(bad)
pop
mov
mov
cdq
lods
inc
inc
fsub
adc
cld
push
push
sbb
retf
(bad)
cmp
imul
adc
adc
or
mov
iret
cmp
inc
sti
aam
sbb
movs
jb
cmps
call
mov
in
sub
sbb
add
xor
mov
and
ja
add
mov
push
mov
(bad)
int3
call
mov
pop
ds
iret
je
and
cmc
sub
sbb
sbb
jg
add
(bad)
aam
and
rcl
gs
lock
fst
retf
dec
xor
mov
or
xor
add
pop
push
mov
aad
stc
push
push
(bad)
mov
rcr
test
or
cwde
rcl
retf
mov
les
data16
lds
dec
pop
aam
mov
(bad)
push
and
(bad)
add
adc
(bad)
std
jmp
or
daa
xchg
and
iret
(bad)
ins
xor
rcl
mov
mov
cs
and
frstor
repnz
or
rcl
rol
enter
dec
push
or
xchg
jle
push
dec
(bad)
retf
sbb
gs
pop
fnstsw
into
adc
fistp
push
pop
adc
retf
pop
and
mov
ret
xchg
mov
test
mov
cmp
or
scas
jnp
inc
mov
jp
shl
pop
push
inc
and
xchg
sub
xchg
mov
mov
test
gs
clc
das
xchg
ret
add
or
and
push
std
mov
and
or
lock
scas
adc
cmp
lahf
scas
jns
(bad)
js
jp
mov
mov
in
stc
inc
dec
add
pop
inc
sbb
test
dec
(bad)
mov
ins
mov
iret
out
cdq
xor
inc
jge
adc
in
fidivr
rcr
outs
push
push
test
pusha
mov
clc
(bad)
or
pop
in
sbb
lds
mov
or
rol
dec
int3
(bad)
les
inc
mov
es
fcom
pop
mov
std
ficomp
push
rcl
add
hlt
sub
inc
jp
or
mov
mov
and
iret
cmp
or
in
into
adc
push
div
test
repnz
ficom
(bad)
(bad)
sahf
popf
in
div
lods
mov
rcr
loopne
ss
inc
retw
xchg
mov
call
std
lock
mov
jecxz
fwait
pushf
push
movs
ret
jge
inc
pop
dec
adc
inc
(bad)
fimul
fcmovnbe
push
rol
add
push
push
cmp
ret
push
fld
in
mov
imul
inc
mov
sbb
out
push
xabort
pop
mov
jne
jecxz
mov
out
sub
hlt
je
nop
inc
mov
jle
push
sbb
ret
clc
movs
cmp
dec
adc
pop
ss
aam
(bad)
fst
inc
loope
or
sti
mov
in
lock
mov
adc
sbb
pop
inc
ins
call
mov
mov
pushf
mov
arpl
dec
push
cmp
xchg
jae
jns
jns
iret
pop
add
or
sub
mov
xor
add
mov
push
mov
mov
leave
jnp
(bad)
pop
pushf
sub
sbb
(bad)
jmp
movs
enter
not
inc
cld
add
add
add
mov
add
aam
jns
(bad)
mov
adc
test
push
in
sub
mov
sub
test
push
std
mov
hlt
push
das
test
sub
xor
mov
in
sahf
dec
outs
push
xchg
sti
int3
call
mov
popf
cmp
test
jae
jecxz
pushf
sbb
add
lahf
and
int
ds
inc
xor
rcr
adc
fsubr
lods
test
(bad)
stos
repz
rcr
leave
retf
inc
ret
pop
sub
mov
pop
jae
cmps
add
dec
les
mov
add
push
sbb
push
cmp
jg
jg
pop
ins
xor
pop
retf
add
or
out
mov
ins
test
xchg
loop
test
pop
mov
fcom
movs
cli
mov
push
test
or
jge
adc
retf
sbb
bound
aam
loopne
hlt
or
cmps
popf
jp
push
and
ja
call
mov
dec
mov
jmp
ds
jg
aam
sti
pop
mov
ret
in
icebp
jae
mov
imul
sbb
aas
mov
ror
or
movs
ret
inc
xchg
mov
push
fcomp
dec
(bad)
fiadd
inc
imul
pop
fild
push
mov
cmp
ror
sbb
cs
mov
adc
push
mov
or
mov
(bad)
jmp
rol
pop
and
popa
mov
(bad)
jecxz
mov
scas
jp
out
js
popa
xchg
retf
call
xor
xchg
pop
xchg
adc
test
pusha
inc
cwde
inc
test
push
fsub
xchg
js
dec
xor
cmps
ret
fld
pop
fsub
xor
jo
push
pop
sub
rcl
sub
mov
push
mov
mov
popf
repz
xlat
(bad)
shr
sar
xor
xchg
jge
ffreep
imul
adc
iret
lock
adc
popa
mov
mov
jl
and
iret
inc
cwde
or
test
leave
mov
xchg
dec
outs
mov
cmp
(bad)
pop
fucom
jecxz
jecxz
mov
test
test
sbb
leave
xchg
ja
push
xchg
stos
std
mov
rol
fwait
lods
je
jnp
push
jno
push
jmp
fcmovnb
pop
jo
cmp
cmc
cmp
fild
cwde
add
and
or
cmp
(bad)
ins
and
or
dec
and
out
or
push
push
cwde
cwde
mov
fwait
push
xchg
fistp
cmp
cmps
sti
lea
dec
xor
jae
ret
add
add
jp
push
adc
sub
mov
int
sub
ret
ret
jmp
pop
xchg
into
and
mov
les
std
fst
add
xchg
jecxz
cs
rcr
add
fwait
and
dec
das
mov
push
pop
test
cwde
retf
inc
sbb
add
xchg
pop
lods
xchg
push
shr
push
call
sub
(bad)
lahf
fucom
shl
sbb
add
addr16
inc
push
outs
les
adc
pop
stc
shl
adc
xchg
jp
scas
pop
pop
mov
repnz
and
sub
and
lods
bound
inc
test
mov
rol
dec
push
xchg
mov
push
push
sahf
cli
and
imul
retf
lahf
(bad)
ficom
test
xlat
pop
(bad)
jae
in
mov
icebp
dec
add
mov
or
sbb
xor
pop
mov
jg
pop
cmps
pop
add
jmp
dec
add
jmp
clc
push
dec
sbb
data16
add
cs
fldenv
leave
bound
dec
adc
add
lahf
ror
fsubr
mov
movs
mov
test
(bad)
in
in
stos
push
cmps
xchg
sahf
mov
sbb
fucom
inc
jns
loope
push
clc
mov
fwait
push
je
loop
call
xchg
retw
mov
xchg
leave
cmc
adc
sbb
pop
adc
jle
mov
loope
mov
inc
sbb
arpl
sub
js
std
xchg
mov
sub
push
mov
enter
inc
mov
add
xor
cmp
sbb
stc
imul
stc
fwait
ret
push
stos
mov
(bad)
(bad)
sub
mov
in
push
sbb
(bad)
mov
sbb
lahf
jl
out
mov
sbb
mov
push
cmp
mov
inc
add
stos
das
pop
mov
mov
pop
out
test
repz
test
or
or
mov
shl
imul
test
adc
jg
stos
das
cmp
sbb
dec
(bad)
jb
mov
sub
dec
add
in
(bad)
(bad)
rcr
jae
call
jmp
pop
pop
cmp
xor
and
fbstp
inc
xchg
outs
fisttp
xchg
xchg
cld
ins
mov
fistp
loopne
sub
sbb
test
jmp
das
push
mov
call
adc
add
call
les
xchg
jns
ficom
sti
and
dec
cmps
push
lods
xlat
push
fsub
push
out
mov
fwait
lea
xor
mov
cwde
fnstcw
xchg
enter
ret
push
ficomp
int
imul
push
sub
mov
les
push
fimul
imul
fwait
pop
xlat
in
mov
mov
lock
add
or
cwde
adc
int
inc
sbb
shl
popa
call
imul
leave
push
imul
mov
adc
out
jae
push
cld
sub
imul
add
fsubr
add
iret
call
jge
dec
rcr
adc
push
mov
fcom
sub
pusha
(bad)
jg
sub
lahf
sahf
adc
int3
xor
jo
ja
js
or
or
inc
sbb
mov
push
mov
xchg
out
mov
pop
test
retf
movs
inc
inc
popf
push
stos
mov
(bad)
repnz
mov
popa
in
push
loope
add
add
leave
cwde
pop
(bad)
cmps
sub
lods
lods
fisubr
and
push
adc
ret
pop
push
mov
sti
jmp
xchg
fcmovnb
and
pop
dec
xchg
stos
(bad)
mov
lock
mov
fsubr
adc
sbb
movs
jp
hlt
mov
nop
sub
mov
movs
ret
sbb
fs
stos
mov
aaa
sub
xlat
xchg
lds
pop
lods
bound
scas
mov
out
jmp
js
push
je
loop
call
inc
repz
and
mov
stos
xchg
data16
fsub
pop
test
cld
int
test
(bad)
mov
int3
mov
jno
loope
loope
scas
inc
(bad)
fcomp
repz
nop
xchg
mov
inc
adc
out
idiv
jmp
les
xor
pop
loope
or
and
aad
jle
enter
imul
sahf
xor
and
out
fcomp
jg
cs
test
push
inc
mov
inc
lods
gs
pop
int
mov
arpl
int
mov
mov
jns
enter
das
retf
jecxz
inc
adc
popf
sbb
add
fwait
and
dec
inc
pop
adc
pop
xor
cwde
or
dec
dec
pushf
dec
xor
ror
dec
add
inc
and
lods
movs
mov
mov
fs
(bad)
dec
rcr
add
dec
fbstp
dec
inc
out
test
add
and
adc
xor
jmp
jle
mov
and
jbe
pusha
mov
test
pushf
or
leave
loop
loop
mov
add
test
dec
daa
xor
push
out
sub
pop
data16
push
scas
xor
push
fidivr
cli
mov
and
lods
ins
aaa
imul
cmp
cmps
sti
aad
dec
xor
inc
movs
je
or
cmps
popf
jp
push
xchg
xchg
or
loop
stos
xchg
inc
ror
jmp
retf
sbb
gs
cld
mov
les
scas
mov
imul
inc
xlat
int
add
out
mov
popa
pushf
and
xor
mov
mov
sar
xor
pushf
dec
xor
shl
lods
add
test
jnp
fldcw
xchg
cmp
fistp
repz
scas
cmp
mov
test
push
and
push
scas
xchg
ficom
outs
mov
and
dec
mov
mov
ret
fst
pop
cmps
data16
pushf
lods
jg
leave
in
mov
xchg
push
(bad)
pushf
repnz
mov
in
outs
inc
mov
cmp
test
xchg
and
cmp
push
fisub
adc
ret
push
cmp
call
icebp
inc
cdq
enter
sahf
jnp
pop
add
adc
sub
mov
jne
dec
movs
pop
mov
mov
pop
fnstsw
sar
mov
lods
sti
jae
test
sti
mov
repnz
int3
mov
mov
lods
or
out
pop
ret
repz
xchg
and
sbb
cmps
fnstcw
cli
mov
adc
mov
int
jae
xchg
leave
js
ret
fdivrp
mov
fcomp
or
pop
ret
pushf
outs
shr
in
push
lods
mov
lds
sahf
rol
pusha
mov
jg
leave
ds
repz
inc
fwait
out
js
aaa
ins
js
jmp
sbb
add
cwde
inc
mov
leave
cmp
xchg
imul
inc
mov
cmp
push
sub
fwait
std
stc
ret
(bad)
mov
push
add
cwde
hlt
je
xchg
xchg
in
jecxz
cmp
ret
mov
sbb
mov
mov
cld
pop
pop
out
loopne
dec
loopne
mov
aas
jno
xchg
jl
lahf
in
clc
add
daa
test
cmps
ret
fwait
and
mov
and
push
lock
aad
dec
movs
sub
dec
sbb
adc
scas
mov
test
fs
fbstp
push
sbb
test
dec
sti
mov
enter
leave
outs
mov
cmp
xchg
jge
mov
mov
ret
add
outs
into
mov
mov
pop
jmp
mov
xor
nop
cli
fld
mov
or
les
popa
fsubr
push
aad
or
les
fwait
shl
xchg
mov
xchg
dec
outs
and
std
bound
test
jne
jecxz
jecxz
add
fsubp
mov
(bad)
or
jne
dec
movs
popf
out
push
mov
ficomp
mov
(bad)
movs
push
jmp
popf
fcmovnbe
lods
sti
jae
test
sti
mov
imul
jbe
add
leave
xor
inc
aas
adc
addr16
aam
mov
icebp
ss
mov
add
mov
inc
test
mov
scas
int
sbb
mov
in
jno
(bad)
ret
add
retf
stos
cmc
mov
mov
ja
lds
add
jg
in
(bad)
pop
xchg
jbe
cmp
sbb
scas
mov
mov
out
js
loope
retf
call
adc
mov
(bad)
mov
cdq
rol
mov
adc
test
sub
fdiv
mov
or
cmp
(bad)
mov
and
das
je
or
scas
or
dec
in
inc
nop
push
(bad)
or
(bad)
shr
ss
cmps
cmp
clc
sti
mov
jae
add
mov
pop
jp
pushf
inc
inc
sbb
inc
dec
sub
scas
out
popf
pushf
dec
xchg
mov
div
add
inc
inc
and
vminss
inc
jge
fs
fisttp
or
xchg
cwde
sar
cmp
arpl
push
mov
stos
stc
test
shl
adc
sbb
fdivp
shr
int3
lods
dec
pop
out
pusha
mov
mov
scas
fistp
sbb
jo
jns
js
fist
rol
pop
and
in
and
imul
cwde
mov
lds
cmps
ret
sar
mov
(bad)
xchg
pop
cmp
bound
adc
sar
hlt
or
xchg
shr
adc
adc
mov
jmp
adc
push
mov
mov
jg
pop
xchg
into
daa
repz
movs
sub
pop
scas
add
jmp
jno
xchg
iret
sbb
in
pop
add
daa
test
push
repnz
inc
dec
bound
pop
inc
mov
inc
sub
and
jno
shl
outs
test
fsubr
inc
mov
or
(bad)
dec
cmp
shr
and
les
stos
retf
or
xchg
call
dec
imul
jecxz
pushf
mov
push
int
in
mov
pushf
mov
rcr
add
mov
mov
xchg
adc
dec
and
cld
lock
sub
mov
mov
lea
cmp
xlat
xchg
fld
push
and
cs
pop
sub
scas
or
dec
in
inc
mov
loopne
mov
popf
repz
ss
mov
loopne
jg
les
nop
jl
lahf
aam
pop
inc
mov
adc
inc
pop
adc
fcom
push
retf
movs
mov
idiv
sbb
add
inc
and
(bad)
rol
ss
(bad)
pop
popf
jae
sub
out
cmp
jmp
dec
mov
inc
dec
retf
addr16
ja
stos
xchg
stos
std
mov
mov
mov
add
loopne
(bad)
xchg
pop
cmps
pusha
je
das
(bad)
jg
leave
loope
mov
pop
mov
scas
arpl
pop
das
out
inc
shl
inc
mov
sbb
push
cmp
adc
movs
pop
(bad)
inc
jge
jmp
inc
stos
cmp
call
fs
cdq
xchg
push
shr
mov
int3
inc
add
(bad)
out
mov
sbb
push
adc
ror
retf
mov
sub
jnp
sbb
rcl
mov
lock
das
retf
jecxz
inc
adc
sbb
mov
or
pop
adc
mov
mov
rcl
pop
sbb
test
cld
sub
mov
inc
frstor
call
aaa
mov
gs
xchg
aam
push
cmp
jae
scas
push
inc
and
imul
stos
mov
stos
xchg
xlat
movs
movs
pop
dec
push
mov
lods
mov
mov
xchg
xor
xlat
xchg
xchg
repz
loop
inc
(bad)
mov
or
xchg
adc
or
dec
adc
mov
daa
mov
inc
cmp
imul
stos
jae
lahf
(bad)
xlat
(bad)
(bad)
fdiv
pop
das
mov
cdq
enter
mov
sahf
add
mov
inc
mov
hlt
mov
mov
cmc
enter
jecxz
adc
lods
ins
mov
mov
shr
repz
push
into
inc
adc
lock
(bad)
movs
rol
adc
add
(bad)
aam
sub
imul
sbb
xor
xchg
xlat
dec
sbb
(bad)
cmp
(bad)
sbb
jae
gs
mov
popf
retf
(bad)
(bad)
sub
pop
add
fdiv
cli
push
push
push
sub
xchg
jne
mov
icebp
mov
add
pop
pushf
ret
mov
ret
das
(bad)
jg
sbb
xor
xchg
retf
lock
popa
or
and
push
add
or
xor
or
cli
stc
mov
dec
jbe
aam
inc
sbb
out
xor
push
gs
outs
mov
imul
std
and
push
mov
inc
mov
shr
in
jne
dec
movs
pop
mov
jle
jecxz
sbb
dec
adc
cmp
or
pop
lods
dec
or
loopne
iret
cmps
std
(bad)
stc
sti
mov
dec
cld
pop
xchg
jge
jle
pop
add
xchg
or
stos
imul
mov
call
dec
sbb
fwait
mov
lods
jmp
jae
jns
xor
inc
je
mov
jno
dec
nop
push
icebp
cld
mov
dec
leave
jmp
push
xor
data16
fimul
xchg
cmp
shl
sbb
push
dec
mov
jg
push
xchg
loopne
sub
push
cwde
add
rep
clc
pop
retf
(bad)
neg
stos
xchg
adc
data16
mov
pusha
cdq
imul
(bad)
jl
(bad)
fwait
(bad)
xlat
xchg
fldenv
inc
xor
mov
aad
jae
enter
ret
inc
ds
cmps
sub
lods
lods
fisubr
(bad)
out
push
jmp
or
neg
scas
add
pop
pop
push
add
iret
bswap
in
clc
add
daa
test
push
hlt
mov
inc
and
iret
cmps
jg
call
inc
sub
and
jne
les
repnz
test
cli
test
sub
fistp
fisttp
add
in
jbe
test
adc
adc
push
mov
ror
dec
mov
xchg
sbb
fdivr
fcmovb
pusha
mov
mov
fisttp
iret
fldl2e
jo
loope
or
sub
add
data16
rcl
rol
mov
fwait
cmp
push
sub
scas
mov
fldz
mov
fwait
lea
jb
push
adc
mov
sbb
adc
cs
fwait
jne
dec
mov
int
ins
outs
pop
mov
jg
pop
lods
and
ss
mov
mov
pop
cmc
mov
mov
pusha
icebp
add
mov
push
jp
int
call
adc
retf
or
or
popa
test
clc
mov
adc
pop
pop
movs
inc
adc
scas
mov
mov
push
pop
fucomp
inc
add
xchg
test
mov
sbb
xchg
(bad)
jmp
push
outs
idiv
call
mov
mov
pusha
neg
push
int3
imul
repz
loop
push
sar
sbb
mov
mov
push
or
cmp
repz
inc
and
sbb
shl
pop
fidivr
jnp
sbb
mul
movs
inc
cdq
enter
push
adc
cli
fsubp
mov
movs
sub
add
in
push
mov
movs
(bad)
out
push
adc
ret
(bad)
idiv
ret
mov
(bad)
jmp
pop
pop
dec
in
int
dec
lock
test
hlt
inc
add
sub
or
and
mov
mov
jno
dec
and
rol
sbb
vandnps
bnd
and
shr
jns
scas
(bad)
pop
fucom
repz
pop
jns
pop
and
les
stos
ret
into
xlat
ficom
outs
shl
lea
add
push
stos
mov
mov
jge
inc
call
popf
scas
push
jmp
mov
test
sub
nop
aad
mov
push
(bad)
or
dec
push
xchg
mov
in
add
stos
mov
sbb
or
mov
call
mov
inc
dec
mov
in
push
add
out
cmc
cdq
outs
mov
ret
mov
sbb
xchg
neg
pop
lods
imul
in
and
(bad)
iret
out
(bad)
call
jo
enter
inc
sbb
aas
and
shl
int
mov
aad
dec
sbb
xchg
lods
cmp
arpl
test
jno
dec
aaa
inc
sar
cli
cmp
pop
xchg
test
test
sbb
jne
into
push
mov
mov
mov
out
push
lods
mov
ret
add
pop
sahf
rol
pusha
jg
push
(bad)
fucomi
in
mov
fdiv
sti
cmps
xchg
add
and
or
inc
mov
test
sub
sbb
pop
sbb
xor
inc
pusha
xchg
imul
mov
xchg
iret
(bad)
pop
cdq
(bad)
shr
cmp
jno
in
push
adc
push
mov
leave
sbb
mov
inc
jnp
mov
add
retf
cdq
(bad)
mov
scas
ds
arpl
movs
pop
xor
stos
mov
jno
nop
jl
lahf
fs
lahf
rcr
mov
adc
xchg
and
int
cmp
loope
adc
nop
in
lods
jb
mov
dec
sbb
lea
stos
fucomp
jne
mov
sbb
shl
or
fld
mov
retf
test
ret
adc
mov
stos
ja
dec
(bad)
pop
push
jnp
(bad)
das
and
test
add
fidiv
mov
mov
xchg
loop
add
jns
pop
sub
or
pop
adc
jge
xor
bound
xor
ret
repz
popf
dec
outs
and
mov
fs
cdq
into
cmps
iret
out
mov
and
adc
inc
or
sbb
add
mov
std
pop
adc
(bad)
loopne
arpl
xchg
jle
pop
mov
call
popf
retf
in
call
push
fistp
rcr
and
mov
lock
sahf
pop
adc
lods
(bad)
out
and
adc
test
dec
and
pop
in
and
js
xchg
dec
outs
mov
and
(bad)
lahf
(bad)
retf
mov
push
imul
mov
cmp
retf
add
xor
adc
shl
(bad)
push
fwait
pusha
fimul
out
pusha
mov
retf
fwait
outs
mov
out
js
and
mov
xchg
mov
sub
push
pop
int
dec
shl
jb
shl
ret
rcl
inc
mov
sub
jb
sbb
pop
inc
cdq
enter
jg
stos
add
xchg
int3
jecxz
mov
sub
sub
mov
cmps
cmc
hlt
imul
xchg
jg
pop
xor
cmp
call
mov
sbb
fldcw
adc
mov
add
out
rcr
adc
and
rol
rcr
jmp
test
int
sub
dec
pop
dec
or
(bad)
dec
cmp
shr
and
les
stos
retf
add
xchg
mov
outs
les
push
and
jne
jbe
lods
and
mov
xchg
fwait
(bad)
test
icebp
retf
cmp
mov
add
cwde
or
xor
push
push
or
les
push
xchg
mov
in
add
jmp
mov
(bad)
ins
push
inc
jmp
sti
xor
jne
mov
adc
mov
push
mov
loop
(bad)
fdiv
movs
pop
jmp
pop
aaa
nop
jg
pop
test
mov
in
int
add
(bad)
pop
cmp
xchg
imul
(bad)
(bad)
jge
rcr
cdq
mov
jg
js
sub
jnp
cmps
sbb
les
cli
movs
shr
mov
scas
mov
ss
mov
in
scas
cmp
mov
les
test
mov
xchg
add
xchg
jl
mov
cmc
add
push
or
adc
xchg
sub
(bad)
lahf
ficom
cmp
arpl
sbb
(bad)
addr16
(bad)
aas
jle
push
cwde
lock
xor
das
or
inc
or
(bad)
sti
adc
mov
ret
inc
ins
xchg
imul
or
mov
or
(bad)
loope
rcl
add
push
mov
icebp
mov
out
push
adc
cs
adc
gs
push
mov
shr
sti
in
div
movs
xor
pop
(bad)
les
repz
inc
mov
clc
add
add
leave
xor
inc
aas
adc
addr16
aam
mov
icebp
imul
inc
in
xchg
in
stos
push
imul
(bad)
mov
fistp
pop
retf
ror
nop
sbb
xor
test
push
scas
xchg
stos
lds
mov
mov
jle
mov
shr
sbb
inc
pop
js
jmp
popf
(bad)
fwait
(bad)
js
jle
sub
mov
div
fild
mov
and
xchg
dec
(bad)
mov
push
(bad)
sbb
pop
sbb
sti
clc
inc
add
lods
mov
sbb
xchg
mov
jb
out
(bad)
xlat
pop
fldz
inc
test
mov
sbb
test
loopne
je
fldcw
cmp
sub
push
sbb
mov
into
pop
stos
les
inc
sahf
shr
mov
imul
mov
hlt
mov
sar
stos
cmp
push
cdq
push
add
test
iret
inc
sbb
ror
fucomp
les
sbb
sbb
aad
shl
retf
sub
sub
loopne
pop
or
lds
cld
jo
xchg
leave
not
stos
lds
xchg
(bad)
inc
and
enter
stc
lds
sahf
rol
pusha
mov
div
int3
mov
scas
inc
fwait
leave
loop
data16
ror
add
add
(bad)
pop
mov
dec
aam
mov
mov
fadd
dec
xor
mov
out
inc
and
pop
ret
fld1
gs
outs
scas
ret
(bad)
mov
push
add
cmp
xchg
test
aad
mov
dec
inc
dec
sahf
dec
push
fdiv
out
mov
mov
pop
mov
into
dec
jg
jo
ds
hlt
mov
pop
stos
call
mov
sbb
cdq
mov
repz
mov
and
rol
sbb
scas
vandnps
repnz
lods
jb
pop
dec
xor
jmp
shr
cmp
or
cld
nop
pop
test
xchg
sub
adc
inc
ja
jae
scas
sahf
adc
ffree
pop
cmps
push
jg
(bad)
push
cwde
mov
mov
cmc
cmp
jge
and
(bad)
and
sbb
cmp
push
mov
adc
push
fsub
jno
in
movs
jnp
enter
nop
cmps
sti
repz
pop
je
or
jle
and
(bad)
push
adc
mov
rcl
dec
jg
fwait
aas
loop
lods
neg
push
xchg
sub
(bad)
mov
pop
lock
hlt
mov
push
mov
mov
repnz
push
mov
or
ret
inc
mov
ror
call
add
lds
pop
test
ins
fld
rcr
dec
push
retf
bound
fcom
sbb
adc
sub
xor
xchg
or
data16
ffree
out
leave
dec
mov
mov
movs
inc
rol
test
cmp
jg
or
cmp
repz
loop
xlat
ret
or
add
ret
test
jo
cmps
stc
(bad)
pop
and
add
sbb
movs
xchg
add
adc
fisub
cld
lahf
inc
mov
xor
loopne
(bad)
push
lock
pushf
and
mov
lea
pop
pop
push
retf
mov
cdq
test
ss
cmp
sahf
shr
mov
ja
retf
or
jmp
ficomp
mov
(bad)
mov
dec
cmp
xchg
into
stos
sbb
arpl
test
jb
pop
inc
std
aad
sahf
leave
inc
lahf
mov
retf
fld
xor
pushf
repz
cmp
pop
or
cmp
mov
add
sub
fnstenv
add
test
fist
xchg
jbe
test
mov
aad
mov
fsubr
repz
push
js
retf
fs
fwait
pop
cmp
sub
dec
(bad)
iret
xor
les
rcl
fidiv
fidiv
aaa
and
aam
fst
call
lods
hlt
mov
add
push
and
or
push
mov
mov
neg
sbb
das
push
mov
adc
cmp
mov
mov
pop
adc
ret
fidivr
jns
movs
rcr
mov
lock
jbe
and
iret
gs
idiv
rcl
dec
pop
or
mov
sbb
sub
(bad)
lahf
pop
stos
fs
(bad)
(bad)
push
fld
test
sbb
xor
add
ret
std
lock
add
jbe
(bad)
pop
pushf
jbe
xor
(bad)
shr
(bad)
loop
icebp
adc
sbb
into
pusha
push
cwde
clc
inc
sar
push
mov
jmp
out
or
push
rcr
inc
shl
jne
into
and
cmp
mov
popa
ins
loope
push
lea
mov
sbb
and
cmps
hlt
mov
xchg
lea
mov
adc
pop
jp
push
mov
shr
pop
movs
pushf
dec
pop
movs
imul
pop
(bad)
push
ficom
or
cdq
cmp
sub
leave
inc
sbb
out
sbb
inc
test
les
jmp
lds
pop
stc
xor
mov
inc
fcmovu
scas
sbb
jecxz
push
inc
and
dec
repz
je
(bad)
mov
ret
add
sbb
aaa
pop
push
jns
sbb
ret
imul
and
inc
(bad)
jmp
mov
loop
adc
push
add
push
mov
repnz
add
rcr
push
mov
fwait
xor
enter
movs
or
push
ret
fld1
gs
std
mov
mov
inc
or
mov
shr
dec
int
imul
pop
dec
pop
push
or
inc
lea
ss
mov
loopne
pop
pop
psraw
ret
movs
jl
mov
(bad)
rcr
mov
lock
cmp
adc
sub
mov
js
test
movs
push
mov
jmp
jae
fisub
iret
mov
aaa
jmp
push
sbb
sbb
sub
sbb
adc
sbb
(bad)
cmp
test
call
adc
int3
jmp
cdq
lods
inc
pop
jl
pusha
test
push
xchg
pop
jmp
(bad)
jmp
mov
add
add
clc
es
dec
(bad)
aas
pop
retf
push
lea
mov
or
push
xchg
imul
inc
popf
pop
stos
cmp
bound
cmp
clc
and
adc
add
sbb
or
fisubr
xchg
cdq
push
xchg
jle
pop
pop
test
ret
les
jne
aad
cmp
and
sbb
cmp
adc
ret
fidivr
jae
mov
mov
pushf
mov
mov
xor
mov
in
(bad)
test
sbb
pop
lahf
dec
pop
(bad)
loope
cmp
mov
bound
fcom
retw
mov
xchg
adc
pop
jnp
(bad)
xchg
fist
cli
sub
fcom
cmp
fst
jnp
bound
int3
cs
sbb
imul
icebp
cmp
push
cwde
add
arpl
rcl
ror
mov
out
push
mov
xchg
js
mov
mov
pop
fdivr
pop
mov
gs
lahf
ins
jmp
test
inc
fsub
loopne
hlt
pop
imul
retf
shl
dec
sub
loopne
cmc
mov
mov
add
jl
pop
movs
sub
in
div
aam
test
xchg
int
(bad)
jecxz
pop
xchg
cld
add
sub
(bad)
sbb
leave
inc
mov
int
(bad)
sti
leave
rcr
jno
test
inc
jno
test
movs
fnstenv
dec
(bad)
stc
mov
xchg
pushf
leave
popf
retf
mov
sub
sbb
or
stos
jge
mov
or
imul
sbb
jnp
mov
jmp
fwait
(bad)
js
es
js
inc
xlat
cmps
jb
retf
adc
mov
adc
add
mov
mov
push
aam
ret
inc
sub
cmps
fcomp
pop
popf
and
test
mov
mov
add
int3
inc
cmp
sbb
pop
hlt
sub
movs
jne
dec
movs
lea
lfs
push
sahf
and
stc
lea
push
mov
jns
aas
in
lods
div
test
sbb
aas
loop
loop
push
sbb
aas
adc
movs
ret
xchg
popf
fsub
adc
stos
jb
mov
addr16
cmc
fisttp
enter
cmp
gs
add
cmp
xor
add
fidivr
adc
retf
xor
shl
jnp
xchg
or
sahf
sahf
ficom
mov
(bad)
adc
out
js
xor
xchg
cmp
xchg
inc
shl
clc
jb
adc
dec
shl
pop
xchg
or
data16
imul
push
jns
lahf
sub
(bad)
pop
xchg
pop
call
(bad)
lds
enter
sbb
xor
cwde
cmp
movs
jle
enter
in
aad
mov
mov
lods
mov
arpl
out
or
out
and
xor
rcr
add
loop
popa
popf
sbb
hlt
lods
push
mov
and
iret
inc
cli
or
pop
ret
test
stc
mov
mov
scas
mov
test
(bad)
cli
rol
mov
pop
or
fcom
loopne
stos
(bad)
jnp
xchg
xlat
push
adc
dec
mov
jle
mov
and
inc
(bad)
jmp
movs
sahf
jecxz
(bad)
push
fist
fprem1
xor
add
add
rol
adc
inc
test
xchg
popa
les
fwait
cmp
xchg
cmp
cmps
call
xchg
fld1
jne
popf
idiv
repz
enter
push
movs
fcom
ds
inc
inc
mov
popa
dec
dec
xchg
lea
mov
and
hlt
mov
adc
add
or
mov
jae
add
fwait
js
or
sti
mov
jns
add
scas
push
(bad)
cmp
add
cmp
enter
ror
cmp
cmp
(bad)
je
leave
sbb
dec
jmp
xor
scas
jnp
dec
lahf
pop
sbb
pop
retf
rcr
nop
sbb
or
cmp
test
stos
iret
push
(bad)
pop
mov
push
cld
retf
fst
jnp
pop
pushf
jnp
ficom
jg
sub
icebp
mov
sub
or
inc
add
sbb
mov
rol
adc
dec
not
jge
push
sub
and
cmp
gs
cdq
xlat
xchg
stc
aaa
rcl
cmp
hlt
or
int3
add
fwait
rcl
cdq
pop
cwde
dec
daa
adc
adc
ret
pop
pop
mov
call
aas
div
(bad)
pop
sbb
ret
fdivrp
jnp
mov
or
out
rcr
cdq
jl
movs
ret
inc
mov
icebp
test
sbb
push
mov
inc
bound
pop
dec
jmp
fistp
lahf
cmp
leave
pop
sub
lock
sbb
add
stos
mov
stos
ja
(bad)
stos
xchg
ret
sbb
retf
dec
pusha
das
leave
lods
mov
cmp
pusha
mov
aad
fdivr
pop
loop
add
rcr
or
rcl
dec
pop
cmps
jns
dec
and
add
cmp
jns
clc
and
fdivr
lock
cmps
repz
xabort
pop
cdq
cmps
sti
repz
jne
cdq
rcr
test
pop
mov
enter
mov
inc
sub
add
into
pop
test
xor
pushf
(bad)
mov
aam
xor
jae
xchg
popa
ret
fimul
sti
cmps
rcr
add
jmp
and
ins
push
pop
mov
jbe
loopne
xor
dec
icebp
mov
and
push
dec
sbb
add
inc
and
int3
and
cmc
fisttp
or
scas
(bad)
iret
ffree
loopne
(bad)
(bad)
test
or
test
push
sbb
retf
or
mov
stos
jne
or
add
lds
inc
(bad)
in
nop
int
jg
leave
in
mov
leave
loop
inc
(bad)
mov
enter
rcl
jmp
popa
adc
mov
sbb
loope
ins
xchg
imul
test
lods
int
xchg
bound
cmp
je
xchg
mov
mov
add
or
push
mov
mov
jecxz
adc
ret
pop
(bad)
mov
les
jg
arpl
mov
stc
jg
mov
jnp
sahf
sub
add
add
sub
(bad)
sbb
popa
cmps
ret
sbb
jno
(bad)
fistp
stos
test
movs
fldcw
(bad)
stc
mov
(bad)
test
in
pop
fcom
cmps
lds
ret
int
xchg
push
call
popa
fimul
push
mov
add
push
pop
cmps
pusha
fs
mov
icebp
sub
cwde
xor
pop
dec
xchg
outs
call
mov
and
or
dec
adc
dec
popf
ret
rcr
test
dec
shl
push
loope
or
sub
mov
ret
fld1
jb
outs
(bad)
lds
enter
or
mov
xchg
test
pop
stos
push
inc
mov
pop
ret
pop
sar
retf
popa
(bad)
mov
pop
sbb
mov
jns
aas
sub
inc
jnp
mov
mov
add
mov
add
sbb
data16
sbb
aas
in
popf
mov
fwait
in
add
sbb
in
movs
dec
sbb
xor
(bad)
pop
cli
(bad)
ret
call
ret
mov
les
out
push
fiadd
push
outs
xchg
popf
cmp
mov
sar
or
mov
and
sti
add
jmp
sahf
sahf
xchg
pop
out
test
inc
jmp
cmp
repnz
add
dec
push
sbb
rcl
cwde
inc
mov
stc
mov
xor
imul
repnz
aad
pop
scas
loop
imul
(bad)
mov
xchg
rol
xor
mov
pop
add
xor
xor
push
sub
mov
xor
dec
mov
push
xchg
jns
call
movs
fnsave
frstor
mov
cmp
sar
sbb
retf
jecxz
(bad)
pop
fidiv
or
inc
aas
adc
gs
sbb
inc
mov
rcr
pop
xor
ror
add
aad
sahf
retf
push
in
int
dec
sbb
xchg
fbstp
add
cmp
jae
test
lods
mov
fisubr
pushf
lods
out
loop
call
(bad)
pop
cld
sbb
adc
aad
jp
xor
int3
(bad)
js
ds
js
inc
repz
popa
clc
rcl
daa
js
test
xchg
sub
pop
retf
fwait
xor
enter
mov
and
(bad)
jecxz
fld
call
xchg
mov
loopne
icebp
or
and
test
mov
sbb
gs
xor
mov
mov
add
std
imul
push
mul
xor
cmp
retf
jecxz
scas
jle
lock
xor
sbb
stc
dec
dec
fs
add
push
adc
ret
pop
cld
add
xlat
test
movs
sub
xor
stos
push
in
pop
mov
fucomp
jae
jge
dec
pop
pop
sbb
cmps
bound
lds
les
add
cmp
rol
xchg
fist
cli
cmp
sub
sub
jno
aad
mov
fabs
sub
pushf
sbb
punpcklwd
inc
add
jecxz
cmps
mov
adc
mov
jecxz
test
icebp
in
xchg
mov
pop
call
stos
cmp
popa
ins
fnsave
aas
mov
bound
out
enter
sbb
es
hlt
xchg
cmp
xchg
pop
mov
inc
xchg
popa
xchg
ins
or
xor
and
lods
xchg
pop
adc
pop
pop
jo
pop
mov
push
lock
and
and
xor
pop
sub
dec
popa
mov
lds
inc
test
shl
mov
sbb
retf
lahf
mov
sbb
or
dec
pop
retf
ror
fcomp
jno
push
cwde
daa
sbb
aam
mov
stos
shl
aad
pushf
xchg
fsub
cmp
sbb
adc
jle
das
inc
(bad)
cld
cli
sti
das
mov
js
sbb
pop
xchg
popa
cmp
inc
cmp
mov
call
mov
xor
rol
xchg
data16
cmps
fsubr
fidivr
pop
push
clc
gs
outs
jl
loope
icebp
dec
inc
sub
test
rcl
dec
dec
mov
push
inc
mov
rcr
adc
aad
jns
fiadd
les
(bad)
fucomip
in
std
test
hlt
movs
fwait
aaa
rcr
lods
inc
cmp
add
lods
mov
leave
and
clc
(bad)
xor
sub
sbb
cmp
cmc
test
jmp
jge
xchg
mov
ret
dec
pop
or
test
dec
imul
or
mov
mov
retf
stc
movs
test
cld
repnz
sub
xor
sbb
(bad)
jnp
dec
push
into
inc
fwait
out
js
shl
pop
dec
cmp
or
cmps
aam
cmp
ror
je
gs
inc
gs
imul
push
int
stos
cmp
into
loop
pop
fsub
sti
mov
jno
in
adc
jle
jecxz
push
adc
push
adc
dec
mov
cdq
jns
mov
pop
mov
push
fdiv
jmp
cmp
mov
clc
sti
pop
es
rcr
ret
jae
cmps
xchg
(bad)
xchg
add
cwde
imul
mov
mov
popf
pushf
or
push
pop
int
loop
pushf
dec
lods
aad
stos
mov
pop
test
movs
jnp
push
retf
dec
lock
outs
xchg
retf
fucom
cli
mov
(bad)
aaa
repz
ret
sbb
add
or
inc
adc
aaa
std
mov
mov
lods
stc
add
pop
cld
ret
cmps
retf
bound
popf
(bad)
pop
inc
pop
cmp
fbstp
jmp
jl
shl
inc
jmp
or
inc
pop
adc
cwde
retw
fsub
repnz
movs
ret
push
sub
or
(bad)
xchg
cdq
(bad)
call
sti
xor
mov
xor
xor
add
dec
add
fwait
dec
dec
mov
cwde
sahf
inc
aaa
in
das
in
cmc
hlt
imul
out
les
inc
mov
mov
sti
inc
jmp
push
mov
imul
cmp
lds
pop
adc
jmp
adc
ret
sbb
adc
mov
neg
inc
stc
fisttp
mov
mov
sti
scas
(bad)
sahf
mov
sub
sar
rdmsr
inc
retw
mov
xchg
push
push
stos
jge
mov
inc
or
pop
lahf
jns
inc
ror
cwde
jae
cdq
fmul
jnp
sahf
popa
mov
div
jo
popf
scas
cmp
adc
sbb
mov
inc
xchg
movs
clc
mov
adc
add
xchg
push
mov
fdivr
jo
xchg
and
sbb
sub
fbld
jge
out
out
repz
xchg
pop
ds
es
pop
inc
pop
xchg
xchg
fwait
sbb
int
gs
pop
inc
mov
ror
inc
xor
mov
(bad)
retf
imul
int
in
std
pop
adc
ror
rcr
add
imul
sbb
inc
cdq
xchg
push
hlt
sub
cwde
adc
stos
push
xlat
jp
in
fstp
push
cmc
fstp
stos
dec
or
scas
retf
or
pop
ins
push
jl
or
inc
inc
pop
xchg
retf
or
inc
sub
fst
pop
mov
mov
add
add
in
add
xchg
mov
lahf
addr16
cld
repnz
sub
push
cwde
sbb
es
cmps
mov
xor
fucomip
(bad)
fucomp
push
repnz
(bad)
popf
push
fisubr
add
ins
inc
sub
into
and
outs
ret
or
(bad)
cmp
das
outs
inc
mov
xchg
jno
mov
aad
dec
xchg
or
sar
aas
fsub
aad
dec
xor
jp
neg
push
fld
mov
loopne
les
pop
adc
test
out
aas
not
mov
call
call
popf
das
and
int
clc
or
test
inc
stc
(bad)
cmp
jecxz
push
sahf
mov
fistp
(bad)
pop
sbb
(bad)
fcom
mov
test
sub
pop
add
add
lods
jle
mov
sub
xchg
leave
jge
inc
inc
into
cmc
inc
cmp
pop
(bad)
into
pop
mov
mov
or
sbb
mov
fwait
push
dec
mov
xor
(bad)
out
rol
mov
dec
cmp
fwait
outs
jl
dec
mov
cwde
mov
mov
xchg
test
aad
mov
mov
pop
pop
sub
ret
cmc
test
imul
push
in
in
mov
cli
aas
in
and
cmc
sti
hlt
mov
add
add
out
sbb
sbb
rcr
rcr
jne
les
call
pop
pop
movs
(bad)
nop
dec
(bad)
test
call
repz
je
mov
add
jl
ret
add
add
sbb
jnp
push
stos
xchg
fist
sbb
test
adc
call
lods
cld
xchg
int
jmp
mov
cmc
out
xchg
push
pop
ret
inc
sbb
test
dec
(bad)
cmp
push
(bad)
or
sbb
dec
and
and
es
enter
fsub
fistp
call
adc
adc
(bad)
out
adc
push
sub
dec
inc
mov
jne
dec
adc
mov
pop
pop
add
aad
jns
push
in
push
retf
xchg
addr16
stos
push
adc
mov
jns
cmps
rcr
rcr
imul
jno
dec
and
fcmovnb
sbb
rcr
rep
test
mov
cmp
shl
imul
scas
adc
push
dec
push
retf
shr
fwait
add
or
pop
daa
push
ins
cmp
mov
lock
movs
adc
xchg
xchg
(bad)
iret
imul
(bad)
jecxz
pop
ficom
jle
scas
inc
(bad)
cld
add
and
sub
pop
and
dec
and
push
cwde
dec
and
cmp
aas
icebp
jae
pop
mov
lds
pop
pop
sbb
bound
out
shl
test
inc
ds
dec
inc
or
cs
aad
pop
mov
icebp
pop
adc
movs
cmc
pop
xchg
into
pop
enter
fnsave
jae
or
popa
popf
or
cwde
jmp
mov
pushf
test
push
pop
int
outs
jmp
mov
(bad)
cli
and
rcl
dec
stos
push
jno
cld
sub
retf
dec
pop
sbb
stc
dec
data16
pop
xor
test
push
pop
cmp
xchg
or
dec
out
mov
pop
leave
pop
mov
popf
xchg
jl
push
jecxz
(bad)
arpl
adc
or
and
or
sub
lds
pop
mov
pop
mov
push
jmp
iret
cwde
popf
push
fwait
cmp
xchg
sub
sbb
and
data16
dec
inc
mov
scas
jge
xor
xchg
sub
inc
push
and
sbb
mov
sub
idiv
(bad)
call
add
gs
mov
mov
ret
(bad)
cmp
mov
or
hlt
scas
ror
shl
mov
test
js
les
pusha
xor
push
retf
xor
repnz
int3
mov
cmp
lods
mov
scas
in
push
cmp
les
fcom
jne
or
xchg
fist
cmp
es
jb
sub
icebp
pop
test
enter
test
cs
mov
in
mov
jmp
or
and
and
cmp
dec
cmp
sbb
and
sti
ins
and
push
fdivr
jge
imul
popf
sub
sub
in
fwait
nop
xchg
mov
bound
out
les
push
add
mov
and
and
sbb
rol
pop
push
mov
icebp
arpl
int
pop
xchg
push
mov
jns
ds
and
(bad)
dec
clc
add
scas
push
dec
cli
add
retf
cmc
rcr
mov
dec
jl
xor
test
dec
and
jno
lds
leave
jl
cld
sub
mov
int
sbb
pop
add
lahf
call
pop
sbb
jp
push
push
push
movs
or
call
jle
mov
mov
dec
cdq
aad
lds
leave
inc
dec
loope
sar
ret
stc
and
and
or
mov
push
xchg
jmp
les
movs
ret
fcomp
push
fwait
and
jne
inc
or
cmp
enter
loop
int3
pop
sub
int3
inc
ds
retf
mov
cmp
and
mov
popf
fst
arpl
fxch
inc
(bad)
imul
(bad)
sbb
jno
mov
imul
add
jo
cmc
ss
mov
jno
dec
xchg
jo
popa
mov
sbb
mov
mov
test
mov
sbb
fiadd
dec
push
add
shl
jno
or
nop
rol
pop
dec
imul
pop
push
les
pop
jne
jmp
cwde
jbe
lods
sahf
jnp
shr
inc
jmp
xor
inc
call
je
(bad)
xchg
cmp
jnp
ror
cmp
fist
xchg
clc
push
xor
mov
popa
cmps
fcom
pop
fbld
jge
outs
scas
add
loope
mov
jle
xchg
enter
dec
push
and
mov
fdivr
retf
sbb
ins
add
xor
and
mov
cmp
inc
mov
or
jmp
jae
add
add
xor
mov
cld
jg
inc
sbb
aas
ficom
arpl
mov
jb
call
inc
mov
rcr
cmp
(bad)
out
lahf
jnp
adc
mov
xchg
fst
pop
daa
or
mov
adc
add
add
inc
mov
lods
inc
inc
mov
sahf
xchg
fadd
js
es
mov
xchg
push
lea
add
and
aad
dec
aam
jns
mov
or
les
cdq
mov
aam
cmp
and
jae
push
jne
inc
test
fsub
lahf
dec
(bad)
sti
xor
jno
jecxz
adc
push
push
out
adc
inc
push
jb
into
mov
movs
(bad)
in
and
sbb
or
jg
mov
leave
lock
les
jg
push
add
(bad)
div
mov
das
js
or
jl
hlt
das
jo
push
adc
mov
sbb
imul
sub
mov
sbb
les
shl
popf
dec
inc
lahf
mov
cmp
cmp
stc
push
dec
test
or
jp
adc
fisubr
ror
test
xor
xor
mov
sub
adc
sub
xchg
stos
push
call
stc
and
repz
or
add
push
cmp
test
pop
jmp
lods
add
mov
or
inc
mov
sub
mov
out
cmp
out
jg
jmp
fldenv
loopne
hlt
pop
retf
aad
xchg
push
xchg
xchg
pop
cmp
in
push
adc
ret
sti
push
test
aaa
jmp
cmp
lds
ds
mov
mov
cmp
add
(bad)
mov
inc
pushf
or
add
inc
test
shl
test
sbb
test
push
retf
and
aad
stc
js
scas
(bad)
lahf
fucom
rcr
test
inc
cmp
retf
add
mov
fist
sub
test
loop
pop
pusha
jbe
test
xor
add
xchg
or
jg
mov
mov
mov
adc
es
sub
aam
pop
mov
and
int3
test
aam
sbb
mov
gs
in
out
add
mov
call
jle
add
mov
int3
sub
mov
popf
xchg
xlat
cli
cmc
hlt
imul
mov
cmp
mov
sbb
(bad)
jp
movd
dec
lahf
aam
loopne
mov
loop
gs
loope
pop
dec
adc
mov
stos
fst
pushf
ret
ins
mov
repnz
sbb
inc
mov
sbb
mov
xchg
mov
(bad)
sub
or
repz
mov
in
mov
stos
xchg
xchg
iret
or
or
shr
jnp
mov
pop
sahf
xchg
add
adc
pop
mov
push
mov
inc
aam
clc
xor
adc
ret
and
inc
rcr
jecxz
xchg
xchg
pushf
pop
dec
mov
js
call
jnp
or
imul
into
cdq
hlt
imul
xor
test
inc
push
mov
fadd
sbb
sahf
inc
sub
xor
mov
mov
inc
(bad)
imul
jmp
shl
mov
dec
or
sbb
test
lock
pop
mov
sbb
popa
xchg
ret
sbb
dec
mov
stc
mov
dec
dec
xor
jae
retf
iret
iret
push
(bad)
cmp
in
ret
add
sbb
mov
gs
outs
shr
retf
stc
add
loope
scas
fcom
jp
scas
jg
cmp
cmp
pushf
pop
stc
das
test
xchg
cmp
mov
inc
xchg
and
mov
adc
jns
pop
and
stc
mov
xor
imul
sbb
ret
mov
mov
mov
xlat
xchg
(bad)
mov
mov
mov
xor
add
mov
cwde
sbb
sub
or
or
lods
lahf
pop
mov
imul
(bad)
jmp
clc
(bad)
dec
lds
sub
shl
pop
adc
mov
stos
add
inc
test
shl
mov
sbb
and
sahf
repnz
out
jge
mov
mov
mov
je
mov
jl
ret
add
adc
rcr
nop
call
jge
dec
mov
loope
sub
xor
push
leave
push
fcomp
xchg
sbb
enter
or
xor
add
inc
inc
sbb
xchg
inc
cmp
adc
aam
(bad)
imul
ins
xchg
imul
cdq
in
out
inc
test
push
cmp
popf
jb
inc
lea
fmul
adc
lea
in
iret
jg
sahf
dec
mov
(bad)
pop
stos
shr
push
mov
aam
sti
pop
pop
adc
iret
sbb
inc
in
add
xor
jns
rol
sbb
into
inc
sbb
sub
fwait
mov
or
sbb
les
jno
lds
sbb
mov
cmp
mov
(bad)
jnp
cmps
jae
add
es
dec
mov
idiv
push
stos
jge
mov
add
(bad)
sbb
fstp
pushf
fcom
ja
sub
mov
aad
rcl
mov
in
mov
stc
icebp
and
jge
or
cmp
rcl
xchg
rcl
adc
test
cmps
lods
out
mov
xchg
jle
neg
pop
fisub
popa
jmp
push
cmp
mov
sbb
or
aaa
retf
inc
adc
push
retf
sbb
ins
add
xor
cmp
cmc
pop
sar
call
shr
dec
lds
rcr
iret
adc
mov
sbb
pop
dec
mov
popf
mov
leave
fistp
cwde
jnp
jp
scas
sub
retf
fild
call
dec
jg
lea
mov
mov
ret
cmp
nop
fcom
sbb
or
push
sbb
or
xor
jb
fisttp
cmp
lods
inc
dec
cdq
push
jae
into
lods
jg
dec
push
repz
imul
clc
mov
adc
scas
aas
mov
dec
(bad)
cmp
dec
dec
shl
les
inc
push
fsub
sub
fst
jmp
cmps
ret
(bad)
sti
adc
cmp
cmp
dec
pusha
sub
repnz
jns
adc
mov
jmp
cwde
cmc
xor
sub
sti
mov
pop
pop
mov
adc
inc
inc
mov
sahf
sub
push
dec
push
jae
mov
push
add
cs
pop
xchg
fld
call
or
es
neg
xchg
dec
pushf
dec
and
jge
(bad)
mov
push
push
clc
sub
sbb
dec
push
add
in
jnp
jge
(bad)
push
jp
addr16
xchg
test
mov
cmp
xchg
xchg
stos
(bad)
sbb
mov
lods
(bad)
pop
test
fcomp
scas
pop
pushf
jp
xor
mov
retf
and
aaa
adc
add
ret
or
test
fisttp
mov
sti
and
jge
js
inc
sbb
xlat
iret
stc
into
clc
les
cmp
xchg
enter
push
adc
inc
and
sbb
adc
shr
mov
sbb
xlat
adc
idiv
pop
adc
mov
xor
dec
lahf
iret
fucomip
repz
or
mov
repnz
sub
mov
inc
sbb
imul
mov
mov
and
aad
sbb
outs
push
test
jmp
push
ja
fs
(bad)
push
test
(bad)
jnp
popa
xchg
push
cmp
adc
xor
test
xchg
adc
mov
and
xor
stc
sub
push
push
fucomip
lahf
inc
pusha
fistp
push
or
push
fiadd
or
pop
inc
(bad)
mov
mov
adc
les
fwait
xchg
jmp
lods
out
push
mov
out
inc
and
fmul
push
aad
jp
sbb
ds
aaa
fs
call
push
xor
mov
xor
mov
push
jg
sub
fdivr
stc
inc
inc
xor
jge
inc
inc
mov
fucom
(bad)
dec
nop
cld
aad
ja
mov
adc
lds
ss
adc
inc
pop
test
push
dec
retf
inc
cmp
add
or
mov
jne
inc
fdiv
sbb
push
jl
sub
pop
pop
sbb
test
xchg
dec
shl
push
mov
jb
lods
cmp
lods
inc
sbb
push
cli
int3
iret
fldenv
bound
jae
jmp
clc
pop
sub
lea
ds
jo
cdq
fist
rcr
clc
mov
out
or
daa
cmp
push
call
push
lods
xchg
jo
cmp
fnstcw
pop
out
movs
mov
jmp
inc
xor
xchg
dec
inc
mov
or
jne
cmp
push
or
popa
mov
sti
aad
sub
retf
sub
or
or
loopne
cmp
inc
cmp
or
adc
mov
(bad)
ror
pop
dec
mov
sbb
jg
pop
or
dec
mov
dec
and
mov
push
dec
mov
fbld
sub
push
xchg
pushf
adc
mov
cmp
inc
mov
mov
push
push
movs
or
gs
push
mov
sbb
jecxz
adc
cmps
jmp
pop
push
(bad)
stc
adc
jg
fyl2x
cmc
mov
pop
aas
add
jmp
arpl
pop
mov
ja
or
jp
inc
cwde
dec
and
adc
jbe
sbb
mov
sti
(bad)
popa
jge
in
cld
add
out
cmp
dec
inc
je
sbb
leave
sbb
cwde
aam
dec
inc
push
mov
dec
inc
mov
pop
mov
or
pop
scas
les
inc
inc
mov
cdq
fadd
add
ja
mov
out
rcr
rcl
lock
and
loopne
pop
dec
jno
pop
jae
xor
sbb
sub
stos
push
and
lods
dec
mov
lods
dec
and
dec
jae
pop
pusha
cmc
movs
pop
push
mov
pushf
dec
pop
ins
push
jl
sub
pop
ins
repz
sbb
and
xchg
stos
cmp
fwait
push
sahf
fist
xchg
mov
lods
inc
inc
mov
in
pusha
push
cmp
jmp
fs
je
jl
jae
test
push
add
or
mov
pop
ds
inc
mov
push
les
fwait
cmp
mov
fcom
inc
or
inc
and
sub
pop
je
fwait
jb
mov
sbb
inc
and
mov
hlt
test
outs
aad
or
xchg
dec
push
and
ror
inc
inc
push
repz
or
or
loopne
cmp
cmp
int
call
repz
cmp
enter
inc
inc
add
cmc
cld
or
lds
adc
mov
sub
dec
jb
pop
scas
push
sub
add
sub
inc
pop
fsub
dec
shl
cli
pushf
dec
pop
mov
test
movs
outs
push
mov
cdq
push
pop
fisttp
lea
xor
aas
(bad)
pop
test
hlt
push
inc
lahf
sbb
xchg
jmp
xchg
lahf
mov
xchg
adc
adc
ret
jle
sbb
std
call
out
ds
xchg
aam
dec
out
mov
pop
jmp
lods
mov
out
imul
repz
jns
fs
pop
sahf
out
imul
ins
aaa
sbb
or
push
aas
adc
xchg
popf
xchg
dec
daa
cs
mov
mov
ror
scas
add
int
jl
cmp
push
mov
push
sbb
jnp
mov
rol
add
cdq
test
jecxz
nop
pop
xchg
int3
or
cmps
sbb
dec
xor
shr
push
sub
push
mov
into
xor
in
icebp
cmp
(bad)
ins
mov
shr
push
push
mov
mov
or
pop
movs
push
sub
mov
scas
pusha
push
cmp
bound
jl
jl
dec
jb
add
mov
jo
rcr
bound
xchg
sbb
mov
out
push
jmp
out
inc
xor
fistp
(bad)
jno
fmul
dec
lds
enter
ins
aaa
sbb
or
mov
sub
mov
mov
stc
pop
adc
adc
inc
div
jne
mov
adc
jo
(bad)
iret
sbb
in
fadd
cmps
sbb
lock
lds
sub
mov
dec
dec
and
pop
movs
ror
xchg
clc
sub
ja
push
mov
cli
test
js
iret
push
test
jb
std
fnstenv
jbe
imul
enter
nop
cmp
xchg
fist
jae
mov
jno
aad
mov
add
inc
mov
retf
push
or
inc
fwait
xchg
stc
dec
cwde
pop
aas
cmps
push
sbb
jle
clc
je
std
push
mov
out
jg
stc
hlt
js
out
push
push
lods
mov
out
imul
test
(bad)
fs
movs
sti
mov
popf
iret
sbb
inc
add
inc
jmp
sub
mov
daa
adc
xchg
dec
mov
push
jae
sub
or
jge
jae
cmp
add
adc
or
add
or
pusha
xor
ror
cmp
cld
leave
inc
add
jecxz
cld
mov
movs
dec
and
xor
dec
imul
cmp
call
loop
mov
retf
sbb
int3
and
cmp
outs
push
jbe
sub
push
jne
add
xchg
dec
arpl
imul
imul
aad
xor
push
xchg
jbe
jmp
xchg
and
stc
js
bound
mov
sbb
rcr
test
add
daa
xchg
int
(bad)
jge
addr16
fld
pop
cli
mov
lods
xlat
ins
mov
adc
jo
test
jb
cld
data16
popf
fnclex
inc
or
aam
enter
hlt
xor
jle
adc
sbb
movs
xor
mov
xor
lock
shr
repz
adc
inc
stos
xchg
mov
jmp
std
fist
add
and
popa
out
mov
inc
pop
jmp
aas
jnp
push
hlt
xor
sbb
jecxz
pop
pop
pop
or
ja
mov
sub
std
jae
stos
rcl
adc
sbb
fst
mov
ret
ror
push
sbb
movs
or
js
xor
pop
fst
mov
enter
jmp
push
xchg
cmp
or
or
out
pop
inc
adc
sub
mov
jnp
mov
in
mov
mov
imul
or
mov
gs
call
ret
(bad)
mov
cmps
lock
aaa
and
test
cmp
pop
div
mov
ja
mov
adc
in
div
xchg
fwait
pop
fild
inc
add
pop
in
fsub
mov
push
movlps
sahf
movzx
cmc
aam
push
clc
sub
jg
and
fist
jp
mov
xor
sub
jno
mov
icebp
retf
cmp
lahf
pushf
adc
mov
mov
mov
(bad)
shl
push
jl
ret
sbb
adc
push
mov
std
sub
fsubr
jbe
sub
pusha
jnp
ficom
pop
div
push
xor
mov
shr
retf
in
cmp
mov
mov
fptan
mov
in
rcl
aad
fisub
and
(bad)
xchg
cdq
(bad)
loop
pop
fidivr
cmp
and
je
test
push
ds
inc
mov
cdq
jns
aaa
enter
cdq
(bad)
gs
xor
and
mov
rcr
pop
int
pop
mov
in
std
pop
mov
(bad)
dec
jnp
mov
cdq
test
mov
js
fst
cmp
imul
mov
inc
iret
test
mov
inc
fist
mul
jmp
repz
cli
je
mov
add
ret
or
retf
or
mov
push
sub
xor
pop
or
mov
popf
adc
cmps
pop
push
push
pop
in
std
pop
popf
scas
inc
(bad)
fdiv
sti
mov
push
mov
clc
dec
fdiv
fisub
jns
dec
and
ret
aam
dec
fwait
cmp
add
rcl
cmp
jae
push
jne
inc
(bad)
ret
gs
outs
scas
inc
aad
mov
ss
pop
xor
add
mov
cwde
mov
in
cmc
hlt
jnp
xchg
call
push
add
int
jg
inc
hlt
cmp
mov
mov
pop
push
add
inc
sbb
and
push
repnz
xchg
jmp
nop
arpl
imul
mov
ja
repz
sahf
repnz
out
and
retf
sar
xor
(bad)
pop
cmp
jmp
hlt
xor
add
mov
mov
mov
mov
sbb
or
stos
xor
xor
cdq
(bad)
js
jle
lahf
xchg
jl
dec
ins
inc
adc
pop
jb
add
inc
push
pop
jecxz
sub
dec
test
dec
shl
push
jmp
or
add
test
push
inc
popf
jb
mov
out
cmp
mov
sub
and
je
or
sub
mov
lea
not
ret
pop
std
fdivr
mov
mov
mov
inc
xlat
int
xor
out
and
sar
retf
out
aas
repnz
cli
add
out
sbb
or
hlt
pop
adc
stos
clc
ja
inc
in
retf
push
fisttp
push
mov
pusha
cmc
stos
dec
sbb
pop
jmp
or
and
dec
test
add
sub
enter
add
pop
pushf
sbb
sbb
xor
(bad)
sahf
xchg
sbb
push
fcomip
call
repnz
cmp
es
cmp
pop
inc
mov
lds
call
push
mov
sbb
mov
call
mov
jne
sbb
cmovge
popf
mov
mov
sub
and
dec
mov
xchg
adc
cmp
dec
(bad)
rol
pop
inc
pop
push
(bad)
fcomp
pop
lea
xor
cmps
mov
cdq
pop
loop
xchg
mov
fcom
retf
jmp
and
lock
cmc
dec
add
js
adc
jl
xlat
xchg
push
mov
and
cmps
inc
jmp
dec
sbb
and
add
inc
sbb
sub
xchg
shl
xchg
(bad)
push
mov
rcr
dec
push
jl
fwait
(bad)
repz
sbb
jae
xor
add
test
rol
lahf
sbb
push
cdq
fst
jnp
mov
jno
test
mov
in
pop
loope
or
sbb
cmp
imul
into
dec
mov
jns
dec
xor
imul
mov
inc
popf
sub
call
or
vpunpckhdq
pop
rcl
inc
add
inc
inc
mov
loop
pop
bound
sbb
add
out
push
clc
mov
popf
pop
pop
inc
push
inc
popa
pop
test
sbb
movs
pop
adc
lods
mov
clc
sti
pop
adc
ret
(bad)
jnp
test
dec
sbb
aad
sbb
or
sub
jns
lock
mov
jne
lods
leave
sbb
xchg
jne
jp
inc
fistp
sahf
mov
(bad)
sub
adc
lods
fxch
push
nop/reserved
adc
xchg
or
mov
rol
lods
ficom
jb
scas
jle
or
and
inc
pushf
sub
mov
or
mov
(bad)
fmul
repz
nop
xchg
inc
mov
inc
sti
sbb
mov
or
dec
mul
push
int3
push
mov
jge
imul
mov
pop
mov
fidivr
sti
xor
jne
popf
adc
xor
add
test
jle
push
dec
mov
rcl
out
mov
loopne
cmp
sbb
test
cmp
mov
cmp
push
add
(bad)
cmp
jecxz
sbb
and
fs
cld
or
mov
test
popa
pushf
dec
daa
adc
ret
ins
mov
cli
sub
pop
scas
inc
in
test
sub
(bad)
sahf
sbb
stc
dec
sahf
scas
cmps
jmp
lahf
xchg
xor
rcr
mov
xor
xchg
or
xchg
pop
imul
stos
fist
cmp
jns
dec
inc
mov
fst
mov
into
xor
pop
cmc
xchg
cmp
pop
mov
neg
sub
cmps
jne
or
and
hlt
push
fdivr
cmp
mov
(bad)
sbb
mov
ins
jmp
out
call
int3
pop
add
mov
dec
inc
mov
jmp
das
in
cmc
hlt
sub
cmp
adc
les
loope
push
fimul
cld
pop
pop
add
mov
cmp
imul
neg
add
mov
pop
cli
or
mov
les
pop
rol
mov
clc
stos
push
pop
sub
dec
sbb
push
cmp
test
sahf
mov
cld
xor
mov
dec
or
adc
xchg
adc
xchg
popa
movs
adc
(bad)
or
call
adc
(bad)
push
sbb
aaa
or
and
icebp
dec
in
cmps
loop
xchg
mov
adc
clc
jb
sbb
in
pop
mov
imul
mov
ds
out
pop
in
or
cmp
sbb
icebp
mov
fldenv
dec
(bad)
leave
sbb
(bad)
adc
test
push
inc
or
pop
cmp
out
cmp
adc
mov
xchg
pop
sbb
ficomp
aam
mov
lock
or
sbb
add
ins
mov
test
icebp
sub
add
xchg
fldcw
dec
fmul
add
jno
xchg
cli
in
jl
ret
jo
test
push
cmp
retf
add
inc
cmp
pop
cmp
into
mov
shr
lds
push
test
jmp
cwde
ficom
jle
sub
popa
inc
shl
js
or
inc
aam
fmul
adc
push
xchg
dec
and
into
aam
dec
test
mov
sub
lea
mov
cmps
jnp
cwde
gs
inc
push
(bad)
aad
mov
push
inc
(bad)
or
jae
sbb
or
ret
sub
sub
out
inc
cmp
in
cmc
hlt
mov
pop
add
or
mov
sbb
daa
dec
or
out
and
pop
jo
jp
adc
(bad)
mov
movs
stos
inc
sbb
pop
repnz
test
mov
aaa
xor
sbb
rcr
jno
ror
jmp
repnz
aam
inc
mov
(bad)
sahf
cmp
sub
leave
dec
arpl
das
dec
mov
ins
mov
cmp
add
sbb
mov
push
xchg
cmp
mov
(bad)
mov
(bad)
addr16
xchg
mov
jp
das
jne
(bad)
sub
xchg
push
dec
and
sbb
xchg
xchg
frstor
xchg
xchg
sbb
aam
stc
bnd
pop
loope
or
add
mov
pop
(bad)
cmps
enter
(bad)
jnp
mov
pop
fidivr
jne
shl
into
add
mov
pop
(bad)
and
and
jnp
(bad)
in
adc
stc
pop
xchg
dec
inc
call
mov
inc
mov
mov
cmp
jae
or
xor
jmp
rol
adc
or
add
stos
repz
fcom
xor
loop
dec
lea
and
mov
xlat
test
cmc
sbb
xor
(bad)
pushf
fucom
loopne
dec
push
jno
lods
lock
clc
ret
adc
xor
mov
fisubr
inc
push
pop
mov
rcr
or
mov
and
sti
retf
pop
into
retf
fs
jmp
aas
jns
cmp
ds
mov
xchg
xchg
rcl
dec
sub
sub
popa
sbb
xlat
pop
test
sub
dec
jecxz
repz
js
(bad)
(bad)
add
ret
xor
cmc
pop
enter
jle
and
fst
int3
mov
dec
cmc
retf
inc
sub
lds
loope
mov
ret
pop
sbb
jo
cli
ins
into
rcr
add
add
hlt
lahf
mov
adc
pushf
adc
mov
popa
jae
xchg
adc
or
push
and
mov
call
cmp
std
dec
sub
shl
repz
jo
jl
adc
xor
leave
lea
clc
push
inc
ror
jae
fst
lahf
shr
cdq
int3
dec
add
inc
jne
pop
mov
pusha
or
inc
es
sub
adc
and
imul
movs
inc
jns
dec
mov
jne
jmp
mov
mov
push
xchg
and
inc
stos
pushf
lods
inc
imul
arpl
das
outs
arpl
aad
mov
adc
inc
fscale
daa
xchg
std
out
jp
or
mov
sbb
xor
push
fmul
clc
add
jb
sub
cmp
cmp
adc
pop
fisttp
jg
cmp
and
lock
mov
or
mov
aad
jecxz
or
ss
std
pop
xchg
and
movs
mov
cwde
mov
mov
cwde
mov
and
imul
out
aas
aad
aas
ror
adc
sub
ss
ret
int3
pop
pop
adc
retf
xchg
pop
retf
pop
push
jmp
pop
cmp
les
sub
sub
retf
ficomp
sbb
outs
jno
stc
loope
bound
jo
out
adc
into
adc
lahf
aad
cmc
jp
sbb
stos
scas
adc
movs
mov
movs
or
xchg
inc
mov
sbb
jb
(bad)
sbb
or
idiv
adc
hlt
cmp
mov
int
mov
push
leave
push
cmp
mov
pop
mov
popa
rcr
idiv
pop
mov
jno
pop
ds
mov
mov
in
lods
or
cld
pusha
xchg
ss
sbb
pusha
xchg
xor
mov
and
jne
jle
adc
movs
ds
js
div
ins
cmps
aas
test
out
mov
inc
jmp
pop
inc
popa
mov
pop
cs
mov
mov
mov
pop
cwde
dec
xchg
cli
cmp
stos
xor
xor
xchg
repz
out
sti
outs
inc
jns
scas
icebp
add
inc
(bad)
adc
add
ins
inc
mov
fnstcw
shr
inc
rcr
scas
rcr
cmps
cmp
into
sbb
lahf
(bad)
xlat
pop
stc
and
jmp
(bad)
iret
pop
imul
shl
jp
mov
(bad)
adc
adc
and
inc
push
push
mov
inc
sbb
sub
popf
push
out
ret
lock
jnp
jge
rcr
add
adc
rcr
xchg
and
or
(bad)
int
adc
ret
inc
lods
xchg
push
aad
in
push
int3
mov
xor
ja
in
lock
fidivr
fld
jp
jne
sub
dec
gs
test
iret
adc
or
mov
test
dec
push
mov
test
or
popf
jl
jg
shl
icebp
cdq
jle
(bad)
mov
pusha
cmp
jp
repz
fs
xchg
test
jb
cdq
mov
cmp
jns
push
sub
imul
fld
lea
dec
shl
mov
xor
mov
in
xchg
pop
jne
dec
ja
scas
imul
loopne
outs
test
scas
ret
push
popf
pop
addr16
out
loop
jnp
jbe
fcmovnbe
out
mov
xor
(bad)
out
cli
ja
addr16
fdivr
ret
inc
rcr
jo
lods
mov
lods
and
sbb
push
xor
fild
mov
mov
xchg
fstp
loopne
retf
rcl
enter
pop
jb
stos
cmp
pop
xchg
in
xchg
mov
sbb
lods
rol
enter
les
pop
in
xor
push
loop
loopne
rcr
(bad)
lods
imul
mov
adc
fwait
pop
enter
dec
ds
out
and
sbb
sub
arpl
popf
cmc
je
mov
loop
xor
leave
stc
inc
fs
xchg
bound
jl
in
xchg
iret
scas
and
pushf
push
jge
dec
ds
mov
mov
and
sub
and
mov
adc
sub
add
jecxz
cdq
xor
add
inc
xor
xor
or
inc
mov
(bad)
push
sbb
jmp
jo
sbb
dec
mov
jg
dec
and
dec
xor
sub
dec
mov
call
jnp
stc
dec
ss
mov
xchg
leave
retf
inc
retf
imul
stos
inc
aas
jo
pusha
cmc
add
cmp
xor
pop
mov
push
mov
repnz
pop
mov
jb
push
loope
jb
scas
push
addr16
call
push
and
ss
test
mov
nop
data16
mov
fwait
retf
in
mov
fld
fistp
cli
mov
test
es
xchg
loopne
push
retf
fnstcw
xor
pop
sahf
dec
cmps
xor
retf
(bad)
jmp
adc
pop
stc
mov
daa
(bad)
pop
addr16
ret
dec
test
inc
ror
stc
push
lods
jl
rcr
xchg
sub
mov
retf
or
ins
sub
test
outs
lods
mov
ds
scas
mov
les
pop
mov
mov
sbb
mov
push
xchg
test
sbb
inc
inc
scas
push
sub
add
ror
popf
xchg
sub
cmp
(bad)
fiadd
inc
mov
add
or
lds
js
div
repnz
mov
dec
pop
add
mov
idiv
ror
ret
inc
retf
popa
adc
das
xor
or
inc
cdq
or
xor
xchg
clc
cmc
hlt
std
mov
sti
popa
jns
mov
in
out
cmp
mov
int3
fisubr
fnstenv
mov
sti
xchg
pop
and
arpl
pop
mov
popf
test
fiadd
repz
mov
xchg
mov
add
mov
add
and
adc
addr16
fdivr
mov
aas
or
dec
out
stos
push
test
rcl
(bad)
cmps
movs
les
stos
jge
sbb
addr16
and
imul
into
xchg
mov
xor
xchg
sub
aad
mov
imul
pop
call
(bad)
push
lods
rcr
sbb
inc
jb
jmp
cmp
jmp
mov
mov
in
mov
call
mov
ins
mov
dec
cmp
in
cmp
in
push
dec
test
pop
int3
push
pop
fimul
and
ins
icebp
mov
dec
push
and
cmp
jmp
xor
retf
push
xchg
cmps
fidiv
repz
not
popa
cmp
and
ret
or
call
icebp
pop
mov
sbb
imul
or
mov
lods
int3
xor
ret
jge
jmp
xchg
push
test
add
mov
jne
fld
loope
into
mov
mov
xchg
test
mov
push
inc
imul
cli
or
or
push
or
mov
shl
mov
pop
add
(bad)
sub
ins
cmp
fwait
sbb
xchg
and
pusha
jecxz
clc
cmp
xchg
mov
jns
adc
push
loop
bound
cdq
sbb
sub
mov
pop
cmc
lds
mov
jnp
enter
call
in
int
jmp
mov
into
(bad)
push
or
or
inc
and
nop
movs
pushf
stc
mov
cmc
(bad)
test
int
jno
cmp
test
aam
int3
jne
lea
iret
inc
push
xchg
fs
stos
mov
jle
sbb
lock
xchg
nop
lahf
add
or
neg
xchg
clc
inc
nop
das
rcl
scas
(bad)
and
test
sbb
adc
outs
(bad)
lods
icebp
xor
cmc
cmp
les
and
nop
fild
jnp
retf
xchg
jae
add
push
and
xchg
cli
cmp
stos
xor
jmp
xchg
das
mov
mov
int3
jmp
mov
sub
or
std
add
or
mov
sub
xchg
xor
dec
mov
mov
rcl
and
inc
dec
les
pop
jb
adc
cmps
inc
cdq
aaa
mov
adc
or
mov
jnp
jo
push
jle
leave
mov
test
adc
out
adc
jmp
jbe
cmp
ret
adc
cmp
imul
ds
shr
rol
sbb
enter
hlt
shl
pop
cmc
js
xchg
popa
in
jae
lahf
push
dec
retf
mov
pop
stos
mov
aam
pop
loope
outs
cmp
mov
push
pop
jl
inc
ds
lds
and
inc
ins
push
je
or
mov
push
mov
cmp
jo
xchg
scas
add
cmp
adc
fiadd
jg
fidivr
mov
jl
das
stos
push
push
or
popa
mov
push
dec
and
ins
xor
cmp
sub
lods
or
out
pop
test
sub
mov
and
mov
fs
inc
aad
mov
daa
or
pop
sub
popa
push
push
test
in
jnp
pop
jge
aad
das
je
xor
inc
fstp
sti
outs
ja
add
iret
pop
(bad)
jno
sar
neg
retf
add
sub
ror
aaa
or
dec
and
icebp
scas
ret
or
or
sbb
xor
loopne
lods
or
sbb
cmp
mov
xchg
(bad)
pop
jns
test
push
adc
inc
or
push
mov
mov
in
add
mov
out
test
lods
enter
pusha
jle
lods
sti
mov
es
sub
fcomp
cmp
inc
adc
add
or
pop
pushf
jb
push
test
sub
mov
inc
fwait
ja
sbb
cmps
sti
cmp
cmp
outs
sub
sub
loope
inc
mov
addr16
dec
adc
sub
pop
ret
dec
dec
mov
xchg
adc
jg
scas
jae
cmp
or
int3
mov
mov
mov
dec
cli
out
mov
lock
mov
pop
dec
mov
dec
pop
call
nop
leave
fsubr
ror
fstp
sbb
retf
mov
leave
adc
mov
xchg
ficomp
mov
dec
add
cmp
leave
mov
jp
dec
push
inc
(bad)
(bad)
or
retf
fcomi
add
jnp
mov
lods
ret
aaa
mov
push
adc
cmp
clc
push
jmp
push
xchg
mov
popa
or
pop
test
jecxz
loop
dec
call
rcl
and
stc
cli
fsubr
mov
adc
adc
mov
pop
sbb
and
sub
cmp
cmp
mov
push
movs
sar
and
popf
es
sub
mov
shl
push
mov
dec
ins
dec
mov
jbe
ficom
mov
xor
mov
repz
or
iret
shl
inc
sub
mov
jne
cmp
out
ins
dec
cdq
gs
dec
pushf
dec
and
adc
mov
pop
stos
inc
in
shl
lods
push
adc
lods
push
fwait
pushf
leave
mov
xchg
cmp
je
jle
and
bound
cmps
sub
xlat
stos
lds
test
jecxz
popa
aad
daa
mov
fmul
jnp
jle
pop
push
mov
xchg
bnd
popf
sahf
sar
fisub
pop
test
mov
mov
jae
pop
inc
cwde
call
stos
xlat
add
mov
sub
pop
inc
cmp
mov
and
aas
lahf
dec
mov
cdq
jle
or
adc
cmp
sub
sub
xor
mov
lods
(bad)
fcmovnbe
add
iret
and
cmp
jne
and
mov
fninit
test
sbb
pop
push
fadd
sbb
scas
mov
lds
arpl
fmul
out
out
jbe
push
dec
jb
stos
pop
lods
in
xchg
jae
aam
push
imul
rcr
cmp
nop
push
and
repnz
inc
fstp
(bad)
gs
not
stos
inc
call
pusha
movs
in
test
push
jle
test
scas
(bad)
xor
jnp
out
push
and
push
pop
mov
and
std
dec
mov
dec
and
dec
stc
jnp
or
pop
lods
scas
daa
adc
inc
in
leave
xchg
loope
(bad)
cmps
push
adc
aaa
ror
inc
lock
or
repnz
out
test
(bad)
or
sbb
ja
div
stc
jae
dec
fwait
outs
or
mov
sub
jmp
push
fwait
xor
rol
cs
sbb
xor
sub
repnz
aaa
lahf
int
pop
dec
lea
les
dec
fild
test
ror
fld
shl
retf
fiadd
dec
mov
lds
dec
data16
jbe
or
test
cmp
mov
scas
xor
dec
mov
xchg
mov
enter
fucomp
popa
sbb
ds
cmp
loope
fwait
sbb
push
inc
sar
daa
or
out
dec
add
sbb
adc
mov
sahf
mov
xor
imul
fcom
sbb
aaa
popf
iret
iret
dec
sbb
push
xchg
dec
lahf
dec
ss
add
xchg
test
pop
shr
jmp
fild
std
pop
add
imul
add
and
pop
push
push
mov
mov
ficom
jl
mov
jmp
ins
int3
movs
mov
push
inc
sbb
pop
stos
mov
aaa
mov
enter
lods
inc
imul
pop
xor
jns
jl
mov
shl
add
ss
mov
xchg
push
adc
add
add
sub
xchg
mov
add
pop
push
pusha
jbe
mov
sbb
mov
mov
and
push
out
arpl
shl
and
out
dec
adc
call
mov
add
imul
sbb
pop
dec
stos
adc
repz
fsubr
inc
cdq
xchg
jne
out
adc
pop
cli
dec
hlt
jno
(bad)
hlt
mov
lds
imul
jne
mov
adc
sbb
inc
call
scas
fbld
(bad)
jecxz
add
and
push
lds
enter
stos
jns
dec
sbb
xchg
or
leave
out
pop
mov
sbb
sub
aaa
iret
sbb
push
test
dec
sub
das
test
repz
loopne
(bad)
pop
(bad)
and
jo
inc
dec
cmp
xchg
lods
sub
add
xor
mov
xor
aad
adc
mov
outs
std
mov
(bad)
(bad)
and
mov
in
mov
adc
les
dec
add
dec
xor
ins
daa
dec
ror
push
xchg
fst
(bad)
sbb
mov
bound
jo
ret
(bad)
sar
cmps
inc
sbb
repz
nop
int3
inc
fwait
mov
jecxz
adc
dec
mov
xchg
test
adc
ret
pop
push
mov
push
clc
or
mov
push
jae
loopne
inc
adc
pop
mov
arpl
cmp
adc
dec
inc
sub
jno
cmp
nop
aas
and
dec
pushf
mov
test
mov
or
ja
lds
jge
test
int3
std
inc
xlat
cmp
retf
add
dec
xchg
or
sub
xchg
in
imul
mov
dec
lods
jle
cdq
sub
pop
dec
cdq
aad
mov
es
mov
in
push
jle
jbe
mov
sbb
or
loope
push
push
ret
sbb
and
mov
jge
xlat
sub
inc
and
out
fldcw
test
(bad)
rol
inc
mov
dec
sahf
cmp
js
inc
pop
cwde
mov
dec
mov
fdivr
mov
sub
xor
movs
es
mov
aam
retf
cmp
daa
(bad)
ds
push
scas
or
pop
push
fsub
stc
pushf
cmp
mov
or
shl
xor
ss
jo
xor
jae
or
xor
sub
mov
loop
mov
xor
jae
pop
mov
pop
pop
push
cmp
pop
sub
inc
sbb
adc
test
push
imul
repnz
push
xchg
sti
daa
mov
pop
cdq
fst
jnp
sub
(bad)
sub
ret
call
push
mov
xchg
cmps
mov
inc
cwde
xor
arpl
and
and
js
add
gs
adc
xchg
jp
sub
lahf
(bad)
int
arpl
cwde
xor
popa
xor
enter
in
je
jnp
mov
gs
loope
fwait
aas
ss
mov
(bad)
mov
add
inc
(bad)
jo
xchg
ficomp
(bad)
out
pop
sub
mov
mov
pop
xor
mov
jecxz
cmp
xor
sbb
inc
or
jg
(bad)
mov
outs
xor
mov
xor
fist
add
mov
mov
retf
mov
sbb
mov
dec
sbb
adc
push
stos
bound
cmp
pop
sub
cmp
dec
xor
mov
push
sbb
lods
enter
pusha
jp
cmp
xchg
mov
xor
daa
cwde
mov
sub
nop
sub
push
das
test
adc
push
fwait
daa
fs
add
fsubr
jg
fistp
mov
dec
mov
ret
xor
mov
mov
sbb
loop
out
mov
inc
les
fsubr
test
repz
gs
fild
mov
mov
ret
loopne
mov
pop
mov
jecxz
mov
adc
cmps
(bad)
out
repz
cld
or
dec
sahf
jl
ret
nop
dec
pop
sbb
rcr
rcl
pop
stos
push
inc
rcl
sbb
mov
sar
out
jnp
ja
sti
sub
clc
mov
cld
mov
mov
add
stos
and
dec
mov
pop
sbb
ror
jp
push
pusha
jnp
xor
inc
shr
and
inc
fisub
clc
jb
je
ss
mov
lds
dec
cmp
test
xchg
lds
outs
cwde
stos
push
pop
fisub
jge
(bad)
fsub
call
je
fcom
repnz
sub
adc
es
push
push
mov
cmc
jne
mov
ss
test
(bad)
cmp
movs
sti
lahf
out
fwait
scas
jno
add
scas
mov
lock
jl
jo
or
rol
xchg
or
mov
aad
mov
retf
stc
add
out
and
dec
sbb
dec
sbb
inc
int
mov
mov
mov
add
and
rcl
leave
or
inc
sbb
push
inc
into
dec
(bad)
xchg
lea
dec
pusha
xor
hlt
jle
sbb
out
mov
scas
(bad)
mov
popf
fmulp
mov
and
dec
and
adc
cmp
dec
cwde
dec
and
pop
xchg
aas
jmp
push
stos
pushf
ins
or
popf
test
ds
xlat
and
in
cmp
xor
xor
sub
enter
mov
hlt
cmp
pop
jge
and
sahf
and
push
mov
shr
nop
call
shl
dec
pop
or
sti
mov
cmp
das
jecxz
enter
sar
int
and
pop
adc
xchg
leave
fsubr
ffree
mov
and
pushf
retf
sbb
sbb
test
jne
dec
pop
fidivr
fadd
in
arpl
icebp
xor
inc
sub
stos
xor
mov
fidiv
retf
inc
stos
nop
xor
aad
mov
cmp
in
cmp
jg
mov
js
sub
jbe
(bad)
sahf
pusha
clc
mov
add
dec
arpl
dec
and
mov
mov
mov
stc
pop
je
cmp
ins
jbe
(bad)
mov
(bad)
ret
jns
in
pop
das
mov
loopne
outs
repz
test
push
adc
in
cmps
in
fstp
imul
xor
shl
xor
push
addr16
pushf
loopne
mov
cli
jae
mov
in
inc
pusha
add
aad
add
mov
sete
xchg
(bad)
or
jno
mov
inc
dec
pushf
dec
scas
aad
cmc
mov
pop
stos
push
and
(bad)
int
cmps
push
in
jo
jae
mov
fist
repz
mov
nop
and
pushf
stc
les
sub
xchg
dec
scas
push
mov
or
mov
movs
xchg
outs
dec
or
sub
cmps
dec
leave
shl
push
cmps
cmp
ret
pusha
(bad)
cmc
sub
cmps
xlat
cmp
mov
xor
push
add
pop
dec
xor
mov
test
(bad)
fldcw
inc
adc
shr
mov
cmp
(bad)
jge
(bad)
rcl
sbb
fnsave
inc
mov
ins
punpcklwd
add
push
adc
and
(bad)
mov
les
movs
pop
cld
push
pushf
push
idiv
aam
sti
pop
js
xor
xchg
cmp
cmp
inc
mov
cli
mov
ds
push
(bad)
cdq
pop
(bad)
mov
xchg
mov
cmp
mov
inc
pop
mov
fild
pop
and
scas
mov
outs
dec
dec
test
push
imul
cmps
xchg
test
dec
aaa
shr
ins
xchg
stos
lds
popf
mov
dec
jno
mov
lods
mov
mov
mov
pop
push
loop
mov
icebp
inc
or
push
push
shl
add
xor
shl
div
stc
pop
push
out
shl
push
call
jmp
ret
mov
cmps
stc
sbb
xchg
es
loop
push
dec
jl
dec
jno
int3
push
push
xchg
pop
adc
or
xchg
xor
aad
imul
repz
adc
mov
(bad)
int
xor
ja
mov
(bad)
jp
xchg
(bad)
and
cmps
retf
inc
sbb
xor
add
nop
sub
and
fisub
sbb
xor
dec
(bad)
cmp
movs
das
adc
leave
jg
add
lds
jge
ret
dec
scas
cmp
rcr
clc
scas
dec
das
jge
popa
mov
bound
add
xchg
dec
push
popa
add
jge
jge
mov
imul
stos
mov
add
test
(bad)
and
fidivr
stos
(bad)
test
push
cld
sub
jo
mov
fisub
ret
push
or
pop
mov
rcl
mov
pop
xchg
inc
jnp
push
aad
sub
test
cmp
mov
popa
dec
in
jecxz
cdq
enter
mov
int3
inc
mov
movs
int
or
adc
mov
fcomp
call
mov
fild
pop
pop
scas
ret
or
cli
mov
push
pop
mov
mov
pop
shr
dec
mov
jns
jp
jecxz
mov
inc
loope
into
pmuludq
pop
ret
dec
sbb
mov
xchg
sub
mov
scas
pushf
pop
ret
les
lds
fsub
cmp
sbb
jge
mov
imul
jae
fwait
xchg
cmps
test
mov
lods
push
mov
adc
js
cli
nop
stos
fisubr
jo
sbb
sub
or
ror
or
les
mov
gs
adc
stos
loopne
ret
jae
push
mov
daa
cmp
shl
sti
mov
adc
cdq
adc
and
stc
mov
inc
adc
xor
gs
ficom
fstp
jge
xor
dec
aas
int3
mov
xchg
dec
pop
movs
xor
ins
inc
jecxz
popa
mov
leave
jl
icebp
mov
fwait
cmp
std
rol
or
das
add
inc
test
cdq
push
push
in
outs
ins
test
cmp
push
les
jge
int3
push
clc
iret
scas
sbb
rcr
cli
(bad)
iret
cmp
inc
ror
test
fld
xlat
adc
imul
es
cmps
dec
mov
xchg
inc
aad
mov
push
in
sbb
test
mov
or
jl
inc
cmps
std
jmp
sub
mov
jmp
adc
shl
xor
fmul
mov
mov
sub
pop
sub
(bad)
mov
out
sbb
mov
popa
sbb
xor
mov
int3
pop
cmp
lahf
or
sub
adc
ins
daa
adc
mov
adc
sar
arpl
mov
jbe
xchg
cmc
(bad)
and
xchg
jmp
(bad)
rol
call
sub
jns
ror
add
movs
fs
push
outs
cmps
dec
in
je
mov
movs
test
imul
lahf
pushf
pushf
sub
lock
in
xchg
mov
jbe
jae
retf
call
xchg
pop
rcr
imul
and
cmp
mov
add
adc
addr16
jb
scas
dec
dec
xchg
fistp
sbb
scas
dec
sar
fdivrp
mov
stos
xchg
pop
test
and
mov
push
and
(bad)
std
sub
cdq
jle
popa
stos
out
cmp
push
sbb
xor
movs
add
cmp
cmps
xchg
and
mov
int3
mov
pop
sub
scas
sbb
cmp
push
push
imul
inc
push
iret
cmc
mov
xor
push
repz
outs
mov
arpl
inc
xchg
jnp
inc
xor
ret
(bad)
hlt
cmp
popf
adc
push
push
add
add
or
out
inc
in
dec
xor
movs
mov
hlt
jecxz
cli
xlat
jg
daa
xor
push
sub
mov
retf
out
push
dec
pop
imul
mov
prefetchnta
sub
test
jl
jge
xchg
stos
inc
lds
jo
or
sbb
imul
sub
mov
add
arpl
jmp
inc
fidivr
pop
repz
add
inc
xor
sub
add
xchg
push
repz
add
push
inc
loope
xor
imul
mov
cwde
dec
jo
(bad)
jmp
loope
add
fwait
push
and
call
pop
mov
jae
fcom
or
push
xchg
cmc
cwde
sar
fimul
imul
add
sti
mov
xor
std
ins
rol
dec
or
sub
xchg
push
popf
sar
lock
cwde
retf
inc
sbb
xlat
stos
lds
mov
test
inc
dec
shr
retf
(bad)
mov
das
loopne
dec
popf
(bad)
stc
dec
cmps
jmp
xchg
mov
int3
int3
pushf
xor
test
push
stos
(bad)
add
or
mov
xchg
retf
ret
jecxz
sbb
js
mov
repz
cdq
int
stc
aam
dec
xor
rcr
and
push
adc
dec
shl
fimul
adc
and
bsf
push
mov
fs
mov
add
rcr
ds
test
dec
mov
sbb
out
mov
sbb
dec
pusha
dec
imul
mov
enter
dec
pop
mov
cmp
cmp
neg
scas
fwait
jo
lock
rcr
cwde
pop
sub
(bad)
das
add
gs
push
mov
dec
test
lock
cli
shr
mov
test
repz
ins
call
inc
fnstcw
sbb
fdivr
push
repz
sbb
in
in
ror
or
pop
daa
sbb
or
inc
cmps
sbb
adc
jg
push
mov
fisttp
xchg
int
mov
lods
mov
push
mov
mov
popf
cmps
ret
cmp
jb
mov
adc
loope
and
leave
mov
and
addr16
sub
xor
scas
add
sbb
lods
gs
cmps
push
test
popa
jne
dec
lods
xchg
enter
out
cwde
je
push
and
push
cmp
out
mov
jne
inc
push
xchg
sub
pop
add
les
into
daa
mov
mov
inc
adc
movs
cdq
(bad)
mov
fdivr
out
and
cmp
(bad)
fs
loop
add
adc
mov
xchg
sub
dec
sbb
aad
sbb
sbb
lods
mov
aaa
retf
inc
xchg
mov
fucomp
shl
bound
test
or
mov
or
test
mov
xchg
dec
xchg
xchg
pop
cmp
xor
leave
mov
xchg
xor
leave
loop
inc
lods
push
aas
cmps
push
cwde
lock
loopne
sbb
mov
cmps
mov
cmp
daa
cwde
(bad)
stc
ficomp
fldcw
mov
pop
pop
scas
fcomp
pop
fidivr
mov
fwait
lea
mov
test
ja
retf
int3
ins
push
or
mov
mov
xor
mov
mov
push
int
lahf
je
sub
(bad)
mov
lea
(bad)
xchg
jnp
pushf
sbb
add
repz
cld
ror
mul
outs
movs
ret
push
jnp
stos
test
adc
mov
mov
pop
and
pop
adc
mov
cdq
and
ja
sub
cdq
lock
outs
push
inc
in
mov
or
dec
cmps
push
fiadd
jno
call
dec
mov
and
cmp
(bad)
(bad)
and
cmp
xchg
inc
fwait
leave
in
add
sub
inc
add
xor
or
icebp
mov
jp
vcvtps2pd
xchg
mov
dec
inc
xchg
pop
loope
mov
lahf
(bad)
fiadd
sub
shr
inc
cdq
fdivp
inc
arpl
or
xchg
inc
inc
(bad)
push
pop
inc
xchg
pop
fcmovne
dec
test
nop
in
mov
call
adc
daa
mov
loopne
out
and
loope
sbb
sti
mov
imul
outs
pushf
int
and
imul
ins
popf
cmp
fnsave
fwait
push
adc
cmc
je
pushf
fnstcw
sbb
cmps
pushf
mov
xor
retf
ret
std
shl
test
jo
nop
dec
mov
or
mov
stos
xchg
je
jne
dec
pop
jno
scas
ret
sbb
(bad)
push
lods
pushf
cmp
xlat
jno
cmp
jmp
xchg
jmp
pop
dec
lds
sbb
mov
jge
scas
repnz
mov
sub
ins
adc
or
xchg
mov
fdivr
adc
mov
mov
mov
ret
loope
xchg
test
sbb
xor
fld
dec
mov
lods
jae
adc
call
clc
push
aam
jp
adc
cmp
sub
mov
pop
sbb
jo
in
mov
adc
xor
out
lds
xor
(bad)
bnd
xlat
push
sbb
retf
push
sbb
rcl
repz
fs
push
adc
test
push
adc
repnz
inc
sbb
mov
xor
mov
imul
cmps
movs
(bad)
jno
dec
popa
cmps
std
pop
mov
sbb
js
cld
xor
leave
cmc
sub
sti
mov
iret
add
jmp
cmp
sar
mov
shr
inc
es
or
int3
adc
or
mov
xchg
jle
cmc
xor
or
pop
dec
hlt
into
sbb
enter
dec
jb
pop
nop
sub
out
jne
dec
lods
cdq
mov
mov
repnz
jp
push
adc
sbb
mov
and
mov
mov
cli
mov
outs
rcr
mov
scas
and
or
jmp
sahf
xchg
pop
iret
scas
call
push
lock
scas
into
call
dec
rcl
xor
repnz
sbb
fsubr
adc
imul
inc
jno
xor
movs
jl
xchg
ret
ficom
mov
imul
jnp
pop
js
fwait
lods
push
cs
scas
adc
mov
jbe
xor
loopne
mov
push
cld
sbb
es
movs
pop
inc
cmp
cdq
jo
sbb
gs
fsub
aas
mov
aam
rcl
xor
dec
retf
mov
adc
dec
sbb
fsubr
or
les
push
fsub
repz
dec
mov
jae
mov
sbb
inc
out
mov
or
pop
and
outs
xor
call
jb
cmp
mov
pop
cs
or
adc
push
mov
(bad)
je
add
mov
dec
push
adc
and
cmp
add
sar
fiadd
addr16
pop
movs
(bad)
mov
cwde
fadd
cmps
ret
(bad)
xor
jno
sub
jle
scas
lahf
fxch
loope
xchg
mov
add
pusha
(bad)
or
adc
dec
push
pop
dec
sbb
mov
cmps
jg
sub
pop
xchg
test
fcomp
fcmovnu
sbb
inc
pusha
mov
mov
mov
retf
rcl
ins
or
mov
dec
jb
jp
(bad)
cmps
adc
mov
inc
xor
push
adc
and
mov
imul
mov
repz
pop
aaa
or
in
xor
push
mov
fisub
movs
retf
pop
aas
mov
adc
lods
mov
xchg
inc
test
mov
mov
add
push
inc
sar
pop
mov
add
ins
xor
lods
mov
xchg
and
dec
cmp
sub
xchg
jp
jmp
mov
add
xchg
mov
pop
test
lds
mov
(bad)
pop
icebp
add
add
popa
or
xor
xchg
and
xchg
adc
ds
cmp
and
mov
in
xchg
inc
add
ins
and
aam
rcl
jmp
pop
fsub
sbb
jnp
sbb
jns
mov
mov
xchg
push
clc
dec
push
outs
xchg
(bad)
jmp
mov
mov
nop
in
push
xchg
inc
(bad)
push
inc
movs
test
dec
mov
adc
(bad)
mov
add
jp
xchg
dec
ret
xor
aaa
pop
test
dec
shl
test
in
dec
xor
inc
cmps
jbe
pushf
jmp
(bad)
lds
adc
dec
sbb
scas
dec
call
push
add
test
push
pop
pop
mov
sahf
ret
test
sbb
dec
jns
xor
push
fcmovb
mov
jp
push
rcr
leave
lods
cmp
xchg
int3
sub
dec
mov
mov
add
sbb
dec
gs
jecxz
push
push
cmp
mov
js
aad
jg
dec
push
fyl2x
test
sub
push
mov
cmp
(bad)
xstore-rng
cmps
ret
es
sbb
jnp
lock
or
shl
in
jmp
stos
lods
pop
dec
shr
gs
enter
mov
dec
ja
aad
ss
iret
inc
dec
xchg
sbb
mov
jp
mov
pop
push
sbb
jg
and
fsubr
xor
gs
lock
lods
stos
dec
sub
jmp
mov
fbld
mov
fist
cmps
mov
push
fsub
jmp
pop
sub
mov
scas
addr16
fst
add
mov
xchg
mov
adc
push
sbb
je
and
hlt
cs
shl
adc
idiv
mov
xor
js
pop
add
xchg
jb
adc
and
xchg
jmp
push
mov
inc
push
mov
mul
xchg
xor
pushf
xor
dec
inc
les
and
sar
jl
(bad)
mov
stc
xchg
jmp
mov
cdq
neg
jge
inc
pop
fst
outs
data16
inc
inc
ret
loop
stos
ins
dec
enter
xchg
div
or
push
xor
pop
rol
jo
add
or
lods
and
aam
jle
mov
stos
push
and
fmul
jmp
cli
xchg
mov
in
iret
jae
add
mov
retf
cmps
jae
add
test
dec
push
xchg
pushf
inc
sub
sar
add
lods
fsub
gs
adc
ffreep
jg
mov
xchg
stc
xchg
jne
or
or
loope
add
cmps
cmp
fsubr
scas
or
or
jmp
pop
lea
mov
sub
push
aam
xor
adc
daa
imul
cdq
fs
sbb
int
adc
dec
mov
ret
popa
(bad)
or
xchg
mov
frstpm(287
xchg
mov
dec
movs
into
arpl
fucomip
in
dec
jns
icebp
fistp
in
push
add
dec
adc
iret
das
add
dec
dec
adc
dec
dec
adc
dec
outs
and
ins
mov
cmps
loope
jl
mov
jnp
mov
ret
mov
out
jl
les
sbb
dec
aas
xor
inc
xor
setne
gs
mov
inc
in
inc
mov
add
aas
sbb
push
cdq
les
lahf
scas
(bad)
popa
mov
adc
pusha
test
lds
or
pop
sbb
sub
xor
jae
push
ficom
test
sub
adc
push
lods
out
xor
mov
and
sbb
jg
jmp
(bad)
jp
push
jecxz
or
jle
pop
test
es
sahf
jmp
push
jno
cmp
xchg
fistp
lahf
adc
js
xchg
inc
jo
pop
jae
dec
scas
out
jecxz
mov
int3
test
jge
nop
jge
jg
(bad)
dec
mov
rol
dec
sbb
xchg
adc
push
and
and
(bad)
mov
push
pop
pop
iret
xchg
outs
(bad)
frstor
xchg
test
mov
adc
fisttp
test
ds
dec
pop
addr16
sbb
sbb
stos
fadd
pop
add
ja
rcr
inc
ja
sbb
shl
(bad)
rcl
fsubr
clc
add
movs
in
or
push
dec
sub
gs
push
rcr
mov
mov
inc
jge
mov
push
mov
(bad)
mov
jb
cmp
int3
mov
and
cmp
and
push
ror
mov
pop
faddp
xor
push
aas
fistp
jnp
int
jmp
mov
xor
ss
iret
test
mov
pop
mov
inc
jle
jmp
clc
jbe
ror
mov
add
arpl
fild
call
sub
fld
push
xchg
popa
pop
fistp
lods
dec
sbb
stos
inc
add
retf
xchg
fimul
jg
xchg
mov
clc
cmp
or
cmp
adc
inc
inc
pop
push
outs
retf
mov
pop
sbb
jl
fmul
out
pop
sahf
jmp
jnp
ret
test
jno
ja
loope
js
pop
call
enter
lahf
pop
fwait
adc
add
shl
mov
pop
test
sbb
pop
loop
pop
or
pushf
push
div
jecxz
ret
dec
loop
int3
int
pop
bound
and
pop
in
jecxz
enter
add
xor
sbb
sbb
cli
jmp
fdiv
jbe
stos
fsub
dec
js
inc
push
or
loopne
pop
xchg
gs
lea
pusha
in
cdq
scas
sub
sub
lds
sbb
fwait
add
in
sbb
mov
and
clc
dec
and
ret
mov
iret
jae
cmp
pop
xchg
retf
pop
outs
push
jl
cmps
retf
xchg
test
mov
mov
das
jmp
or
sbb
and
mov
jle
cdq
adc
pop
jae
add
mov
pusha
call
cmp
ror
in
dec
je
test
xor
cwde
cs
mov
inc
shr
mov
inc
call
cs
inc
aas
(bad)
retf
dec
js
repz
mov
add
outs
xchg
dec
fisttp
mov
and
icebp
je
push
adc
mov
shl
sub
call
xor
frstor
mov
(bad)
std
pop
mov
lahf
(bad)
test
loopne
enter
mov
dec
sbb
adc
aad
call
cmps
sbb
mov
dec
sub
inc
mov
(bad)
call
jl
retf
aas
dec
cmp
ss
stc
jo
ret
test
sub
test
xchg
ins
icebp
sbb
inc
jae
mov
mov
mov
lods
inc
sbb
and
lahf
scas
retf
jo
jge
loope
xchg
leave
loop
jb
push
fstp
xchg
jge
jo
or
sub
mov
sbb
pop
dec
xor
test
or
pop
pop
out
mov
jb
fwait
ja
nop
in
(bad)
lock
mov
pushf
sti
mov
enter
dec
inc
dec
stc
push
out
mov
call
mov
das
ins
xchg
jns
pop
add
pop
sbb
lea
push
sub
dec
ret
push
clc
push
inc
(bad)
fcmovb
fdivp
push
fnstsw
enter
arpl
push
mov
pop
or
ret
mov
lods
outs
and
pop
repz
mov
sub
sbb
jae
mov
ficom
mov
adc
inc
gs
ins
rcr
in
xor
movs
xor
ror
and
pop
test
mov
pop
scas
ret
jmp
or
sbb
jg
mov
dec
ret
or
mov
das
adc
jecxz
or
xchg
mov
in
xchg
lea
dec
pop
xor
mov
fadd
(bad)
jecxz
inc
fcom
cmp
fwait
sbb
imul
enter
add
jp
jmp
shl
clc
xor
dec
xchg
fdiv
call
mov
shr
rep
mov
imul
or
int3
out
xor
mov
dec
pop
add
xchg
repnz
mov
xor
shr
call
dec
xor
shl
mov
push
sub
and
mov
mov
dec
fiadd
in
scas
xor
cmp
push
stos
push
push
inc
adc
push
test
dec
lods
(bad)
pop
test
fisttp
push
ror
pop
int3
repnz
push
leave
nop
push
loop
fmul
sbb
add
add
xchg
xchg
adc
fild
fwait
xchg
in
sahf
sahf
fcom
mov
vzeroall
jmp
cmps
ret
fld
clc
rcr
fwait
mov
or
add
xchg
or
jg
sbb
xchg
sub
int
xor
adc
xor
add
repz
les
push
popa
clc
push
sub
inc
push
out
jecxz
and
jo
add
nop
push
lock
add
or
mov
sbb
dec
pushf
fs
dec
adc
outs
ror
sbb
std
or
xchg
ds
jge
into
cs
fdiv
xchg
push
push
shr
jmp
pop
imul
mov
xchg
popa
je
push
mov
push
inc
add
push
lock
rol
ss
xor
inc
dec
cmp
sbb
(bad)
jge
lock
add
dec
enter
aas
sub
inc
inc
pop
cmc
test
adc
pop
xor
sbb
lea
pop
aam
inc
popf
sub
movs
mov
dec
sahf
mov
xchg
mov
cmps
(bad)
rcr
mov
dec
sahf
pop
pop
movs
repz
popa
mov
push
pavgb
mov
js
stos
adc
popf
(bad)
xor
xchg
xchg
mov
(bad)
mov
push
hlt
dec
xchg
jno
ret
gs
inc
xor
ror
or
loope
std
fild
push
fbstp
sub
jg
mov
push
in
test
icebp
out
pop
loope
es
cld
mov
adc
mov
and
xchg
test
fisub
pop
lock
ret
push
mov
jns
cdq
mov
jg
aaa
jg
push
fld
inc
out
std
add
xchg
cmp
mov
mov
cwde
push
fst
arpl
cmp
adc
inc
inc
popf
push
mov
pop
ret
xor
shr
sub
cdq
test
mov
pop
jb
sti
push
jge
jg
out
mov
dec
add
xchg
inc
sbb
idiv
stc
nop
jae
mov
out
mov
hlt
stc
(bad)
(bad)
outs
lahf
retf
jecxz
add
adc
sbb
in
leave
pop
or
xchg
xchg
mov
push
mov
sbb
sub
lahf
xchg
fcomip
mov
adc
mov
sbb
mov
pop
xchg
jecxz
xchg
ror
ins
mov
in
xor
ret
popf
xchg
dec
arpl
fwait
add
dec
pop
ret
movs
js
dec
cwde
dec
(bad)
mov
mov
dec
jae
inc
bound
sti
test
jl
or
adc
clc
mov
sub
mov
adc
shr
push
and
xchg
pop
xchg
cdq
mov
sbb
jmp
sbb
dec
jge
fwait
jle
jle
data16
sub
push
aas
adc
or
imul
cmc
test
cmps
jecxz
ins
jbe
test
popa
sub
xor
shr
(bad)
(bad)
mov
pop
add
mov
clc
repnz
pop
imul
rol
in
mov
push
or
(bad)
cwde
or
dec
push
pusha
outs
sub
push
cmps
sub
jl
dec
or
das
jnp
(bad)
cmps
popf
(bad)
jae
fld
sub
pop
or
bound
mov
clc
stc
cmp
retf
push
cmp
call
xchg
push
mov
sti
xor
bound
mov
or
out
loop
xchg
mov
idiv
aad
call
mov
(bad)
xchg
iret
test
arpl
cmps
inc
xlat
lock
add
inc
mov
loopne
out
lahf
ret
shr
jb
jmp
sbb
mov
add
test
repz
xchg
dec
xchg
mov
shl
retf
mov
pop
adc
dec
mov
dec
hlt
xchg
jns
pushf
ficomp
popf
inc
xchg
lock
inc
ja
in
add
cmp
pop
idiv
mov
add
dec
pop
sub
(bad)
ins
inc
retf
mov
push
xchg
outs
and
leave
popf
dec
adc
leave
mov
cs
adc
and
mov
pop
(bad)
and
adc
test
mov
xlat
add
push
push
cmp
inc
call
cmps
pop
nop
fisubr
inc
pop
fmul
add
cwde
sahf
scas
jns
jmp
jl
dec
fdivrp
cmp
(bad)
sbb
xlat
cmp
shl
sub
(bad)
test
and
fldenv
jb
mov
xabort
rcl
lahf
imul
(bad)
int3
fdivp
dec
push
and
aas
arpl
mov
cmp
inc
clc
pop
je
mov
dec
inc
add
dec
mov
pop
pop
mov
or
loopne
cmp
inc
sti
iret
adc
adc
pop
jns
mov
repnz
mov
enter
mov
call
and
jecxz
outs
movs
add
pop
adc
pushf
cli
inc
sub
mov
mov
imul
cmp
mov
cld
dec
jb
pop
popf
mov
push
outs
push
loop
dec
push
movs
sahf
lds
pop
push
sub
jne
adc
movs
push
inc
in
xor
sub
popa
mov
mov
test
pop
sub
sbb
shl
sti
sub
xor
mov
pop
fcomp
cdq
mov
fucomip
push
pop
lods
xlat
mov
mov
jns
jg
and
jle
mov
fnstsw
mov
push
not
mov
popa
mov
jbe
mov
neg
xchg
or
test
loope
jnp
fwait
cmp
inc
inc
je
out
test
inc
inc
or
std
dec
aad
dec
mov
cmps
mov
fcom
pop
jecxz
adc
outs
and
pop
stos
mov
mov
test
pop
fnstsw
imul
fimul
popa
mov
(bad)
inc
retf
scas
stos
cmc
test
or
xchg
ficom
pop
push
shl
push
ror
nop
push
add
adc
cdq
fmul
adc
in
ret
xor
mov
mov
cmp
jo
mov
push
dec
mov
or
add
scas
fsubr
lock
mov
push
test
mov
fsubr
movs
test
ret
ror
call
daa
in
xchg
xchg
dec
sbb
out
mov
dec
or
cmc
pop
add
xor
pop
inc
retf
push
mov
ret
loopne
fnstsw
add
jmp
idiv
std
call
dec
jl
adc
mov
add
iret
(bad)
stos
sahf
inc
pop
cmp
mov
dec
iret
sti
fbstp
mov
enter
jne
lock
cmp
and
dec
dec
push
les
pushf
mov
stos
mov
not
sub
bswap
jne
call
inc
dec
addr16
aaa
or
xchg
xchg
jmp
push
mov
js
dec
lds
xor
inc
out
std
push
pop
retf
pop
(bad)
je
pop
sub
shl
cmp
add
pop
mov
lahf
in
pop
lds
pop
lea
aam
inc
sbb
adc
mov
cmp
inc
out
and
cmp
mov
sub
bound
inc
fcomp
iret
mov
push
mov
mov
push
mov
push
movs
mov
fucomip
daa
clc
add
mov
in
jecxz
enter
jo
repz
adc
adc
frstor
mov
push
call
jmp
add
(bad)
push
and
ficomp
std
mov
fucomp
jae
cmp
sub
out
mov
adc
mov
nop
jae
daa
sub
mov
pop
mov
dec
mov
icebp
xchg
jmp
popf
fst
add
mov
xchg
xor
push
stc
popa
lahf
add
push
push
cmp
or
or
add
mov
(bad)
out
mov
pop
out
adc
sahf
push
push
fdivr
cli
stos
jnp
jne
ins
or
mov
mov
movs
xchg
and
es
in
xchg
arpl
inc
mov
or
fsubr
xchg
retf
loope
in
pushf
idiv
mov
int3
inc
mov
fwait
pop
lea
clc
sti
mov
jnp
lds
fidivr
mov
adc
retf
out
cwde
mov
cmps
iret
jns
jg
sbb
les
cmps
leave
pop
pop
aas
xor
mov
push
in
mov
mov
(bad)
push
xchg
and
sub
inc
sub
data16
mov
add
push
sbb
stos
fist
adc
test
fadd
(bad)
in
test
jp
sahf
adc
pop
jl
push
je
mov
dec
dec
jmp
jns
dec
mov
mov
add
sub
push
fsubr
retf
call
push
fisub
lods
cmp
jae
in
jo
push
cmp
jmp
out
data16
jns
es
pop
xchg
sbb
or
int3
mov
cdq
(bad)
gs
aam
jmp
les
cmc
stos
les
push
sub
cmp
add
xlat
xor
cmp
add
rol
enter
or
cmps
sbb
inc
scas
pushf
push
ss
lahf
pusha
mov
enter
push
xor
or
popa
ins
mov
lods
add
mov
add
std
mov
sub
cli
jbe
repz
xchg
(bad)
push
ficomp
loope
cmps
mov
js
pushf
ret
cwde
sbb
pusha
mov
sti
cmp
push
test
fild
mov
xlat
add
(bad)
out
mov
fmul
cmp
dec
xor
ret
jmp
test
sub
(bad)
mov
(bad)
js
(bad)
int3
push
xchg
jne
xchg
adc
and
or
imul
fsubr
mul
nop
call
inc
jns
shr
repz
mov
shr
out
mov
pop
mov
fwait
cs
ror
rcl
test
mov
fild
cld
cmc
jnp
dec
and
lods
mov
fbstp
mov
hlt
stos
dec
loope
push
push
ret
inc
add
mov
pop
or
mov
xchg
arpl
repnz
dec
cdq
or
jle
cmps
outs
les
pop
int
test
cmp
push
pop
cmp
je
mov
sub
pop
popf
fist
fucomi
cwde
cwde
rcl
cli
fist
or
push
retf
fadd
pop
adc
fstp
mov
test
push
mov
mov
(bad)
mov
mov
rcr
jle
or
push
bound
daa
in
es
add
inc
(bad)
imul
sbb
jp
push
mov
shl
fwait
aam
outs
in
mov
lea
(bad)
push
inc
mov
push
jg
jmp
fisubr
mov
ret
inc
inc
mov
les
xchg
push
pop
aaa
je
inc
loop
jg
pop
test
scas
sbb
in
xor
retf
xchg
inc
mov
bnd
movaps
rcr
repz
or
outs
sub
test
sub
call
adc
js
cmp
das
in
inc
sbb
aad
mov
(bad)
jg
test
dec
je
outs
cld
jb
adc
inc
push
mov
dec
cmp
js
sub
les
mov
pop
or
push
sbb
ret
xchg
push
fs
int3
pop
aam
inc
cmc
jmp
pop
xor
test
mov
dec
loope
jp
inc
mov
sar
inc
dec
sti
ja
inc
or
or
or
xor
fucomi
repz
shl
fst
add
adc
(bad)
mov
mov
ror
cmp
sbb
leave
inc
repz
test
(bad)
stos
mov
jnp
dec
jbe
fwait
and
daa
sbb
jmp
fstp
mov
jbe
sub
jns
daa
sbb
mov
int
outs
sbb
xchg
and
xchg
call
push
inc
mov
(bad)
fucomi
rep
dec
jg
mov
cmp
mov
adc
push
sub
inc
rcl
inc
test
sbb
inc
sbb
out
mov
and
adc
mov
(bad)
mov
ds
xor
dec
mov
mov
fcomp
daa
mov
(bad)
cmc
pop
(bad)
int3
sbb
test
cmps
ret
push
xchg
iret
mov
sbb
mov
inc
sbb
cmp
fcomp
jb
aaa
jle
fisub
test
inc
push
ja
bnd
pop
sbb
sahf
mov
fstp
out
pop
test
mov
dec
jbe
jp
adc
cli
push
inc
push
mov
jno
mov
ins
push
mov
retf
(bad)
leave
jns
mov
xchg
fldenv
jmp
push
fstp
repz
repz
cmp
adc
(bad)
push
sub
inc
lea
je
addr16
int3
xlat
mov
pop
xchg
push
dec
icebp
cmps
inc
rcr
jmp
mov
add
jb
shl
int
nop
int3
xchg
test
push
or
int
mov
sbb
jmp
into
or
enter
sbb
scas
ret
ins
in
inc
sahf
mov
dec
(bad)
sub
sbb
retf
ret
mov
movs
mov
jecxz
jecxz
imul
in
rcr
es
nop
adc
mov
cmc
mov
shl
hlt
movs
test
test
int
push
cs
mov
rcl
xor
push
adc
cld
jo
and
add
test
xchg
inc
hlt
mov
mov
arpl
inc
data16
or
test
sbb
popf
fild
icebp
fwait
lahf
lahf
inc
mov
fidivr
js
sbb
xlat
js
add
pop
xor
shr
mov
dec
cmps
pcmpeqw
xchg
mov
and
xor
mov
push
mov
fnstsw
xor
dec
or
xchg
enter
inc
or
add
mov
inc
fnstenv
ror
stos
repz
(bad)
mov
and
movs
(bad)
add
mov
mov
xor
or
out
sbb
add
jns
cwde
retf
pop
jp
enter
xchg
fwait
les
imul
mov
inc
inc
pushf
push
mov
fucomip
inc
arpl
jl
daa
dec
inc
retw
xor
push
add
add
xchg
test
test
dec
adc
cmps
xchg
push
push
cwde
in
inc
sbb
scas
(bad)
xchg
fcomp
repz
xchg
adc
js
inc
xchg
xchg
xor
pusha
hlt
inc
(bad)
aas
mov
jne
add
jle
sbb
xchg
xor
popf
stos
jmp
(bad)
je
ins
jecxz
and
out
dec
add
jb
ret
push
xchg
lds
enter
jno
and
fwait
lea
icebp
test
out
popf
repz
jo
movs
push
or
mov
adc
pop
or
sub
lods
add
(bad)
jno
or
rol
inc
ja
or
ret
inc
int
psubq
pop
push
clc
sub
mov
push
cmps
xchg
add
sbb
xlat
and
in
xor
bound
(bad)
mov
pop
inc
jl
cli
mov
add
fs
add
add
inc
sub
push
pop
mov
mov
xchg
popf
cmp
inc
sti
int3
int
aad
push
mov
test
add
pop
sub
xchg
pop
sub
lea
push
fist
pushf
mov
adc
pop
inc
push
sub
mov
push
mov
jb
fwait
out
dec
dec
dec
enter
inc
in
fiadd
daa
xchg
cmp
jp
jmp
xor
cmp
mov
inc
mov
sub
stos
sti
inc
adc
movs
rol
fdivr
(bad)
jmp
movs
std
not
dec
repz
bound
std
retf
ret
sbb
or
icebp
sub
jns
mov
and
pop
test
scas
add
(bad)
pop
xor
jnp
jl
sbb
xor
test
xchg
sbb
sub
ins
xchg
aas
cmp
outs
(bad)
stos
push
push
out
fst
test
and
inc
icebp
mov
(bad)
add
xchg
fisttp
je
aam
js
or
add
mov
fmul
or
cmp
out
xchg
sbb
sub
or
aad
mov
in
fcom
(bad)
xchg
(bad)
mov
in
je
cmp
and
xor
jl
mov
mov
xor
xor
jp
dec
pop
fcomip
out
xor
ss
mov
mov
aaa
(bad)
std
add
clc
sti
popf
iret
mov
inc
mov
shl
ret
mov
adc
retf
in
mov
movs
mov
out
leave
push
nop
xlat
stos
movs
test
lods
test
fwait
jae
jmp
jnp
loop
cmp
retf
or
shl
outs
pop
xchg
aad
pop
mov
inc
scas
or
lods
adc
ins
mov
ss
shr
jnp
inc
sbb
(bad)
and
lea
sti
sti
loop
xor
or
or
add
and
mov
adc
test
fsubr
push
aam
fist
and
je
cmp
sub
inc
jmp
sub
xor
int3
mov
sahf
cmp
and
cs
aad
jge
shl
stos
mov
call
jae
repz
int
lock
(bad)
mov
retf
jecxz
scas
inc
push
leave
and
xchg
ret
stc
sbb
dec
adc
int
stos
dec
rcr
cmp
(bad)
mov
movs
fisub
data16
push
pop
fucomp
jae
sbb
aad
mov
xchg
test
pop
mov
adc
fwait
xchg
mov
andps
and
dec
mov
xabort
jle
mov
or
lods
ret
mov
jae
xchg
retf
sub
or
mov
or
mov
(bad)
loop
xor
addr16
test
jp
pusha
lea
sub
inc
mov
dec
lahf
in
cmps
jnp
(bad)
out
cmp
lahf
es
out
sbb
xchg
xchg
add
retf
cmp
inc
adc
cs
aas
aam
or
ds
shr
repz
adc
out
mov
(bad)
clc
cmp
dec
lahf
retf
or
add
enter
mov
movs
mov
shl
loop
fst
(bad)
mov
jmp
call
scas
xchg
fst
add
fbld
pop
int
dec
sbb
xchg
sbb
jecxz
xor
inc
ror
inc
and
test
or
mov
xchg
mov
lods
inc
clc
rcr
cmc
push
nop
mov
and
mov
add
idiv
pop
mov
jns
sbb
xchg
inc
aad
adc
movs
jno
sar
mov
rol
mov
mov
jb
gs
inc
cdq
into
scas
iret
pusha
mov
jg
loop
inc
fnstcw
imul
push
mov
sub
mov
mov
push
fist
sbb
imul
mov
add
fidiv
ret
pop
in
aam
pusha
fst
adc
sbb
add
cmps
(bad)
leave
fsubr
(bad)
xor
mov
lods
repz
retf
inc
ret
and
jne
sub
push
cmps
fbstp
inc
mov
fistp
jae
cmp
cmp
mov
mov
lds
fcmovnu
xchg
xchg
retf
arpl
retf
mov
dec
(bad)
icebp
test
mov
sti
xor
sub
mov
repz
adc
repz
add
add
adc
fdivr
mov
(bad)
jno
jp
mov
xchg
imul
jno
test
xchg
fisttp
lock
push
or
ja
les
mov
push
or
out
dec
or
dec
push
dec
mov
sbb
pop
pop
into
inc
push
mov
ret
outs
xchg
iret
jl
and
sub
(bad)
jmp
shl
xchg
xchg
or
ret
ds
xchg
fistp
aaa
jp
scas
dec
xchg
push
and
push
test
xchg
lds
fisttp
jae
inc
pushf
cmp
scas
mov
adc
pop
(bad)
into
aaa
inc
icebp
and
add
(bad)
mov
pop
ja
mov
pop
and
pop
test
mov
mov
ret
push
ja
test
scas
mov
push
pop
aas
add
jmp
loope
adc
daa
(bad)
xor
and
fwait
xor
addr16
adc
lahf
cmp
test
sub
xchg
push
daa
lea
lahf
(bad)
cmps
xchg
fldcw
cmps
mov
and
mov
adc
mov
mov
gs
cs
inc
mov
gs
push
or
rol
adc
push
jbe
mov
scas
neg
push
into
push
xchg
scas
lahf
(bad)
clc
jnp
mov
sbb
pop
dec
aaa
jo
sti
mov
(bad)
sub
aam
movs
(bad)
dec
out
xor
inc
or
adc
xor
clc
(bad)
test
mov
fisub
ds
xchg
jnp
dec
sub
push
or
in
call
or
adc
xchg
in
neg
fdivr
lock
sbb
retf
iret
scas
pop
rcr
jl
dec
cs
inc
fwait
lds
loopne
xor
cmp
dec
fidiv
and
test
movs
rcr
sbb
movs
push
bound
in
ret
ins
in
aam
ficom
shl
push
jae
ins
mov
lds
sbb
in
push
and
sub
sub
mov
push
jmp
xchg
hlt
call
fdivr
mov
(bad)
mov
lds
ret
fwait
rol
push
mov
lock
adc
ror
into
adc
ins
xchg
mov
cmp
int
retf
je
xchg
ds
jno
outs
fwait
jno
fstp
loope
mov
aad
mov
inc
push
sub
test
mov
retf
pop
test
jns
addr16
jb
scas
repz
fmul
ds
in
xor
shl
or
inc
jl
pop
mov
stc
or
test
add
cmp
out
loopne
pusha
pop
mov
xchg
jge
aam
cdq
cmp
xchg
jmp
movs
ret
mov
push
mov
mov
fild
add
shr
jmp
cwde
jae
and
shl
in
fdivr
je
or
mov
mov
cmp
mul
add
xor
dec
jae
shr
jne
mov
xlat
jl
test
mov
or
xor
push
inc
add
lods
shl
sbb
jb
inc
fist
jno
cmp
lods
sahf
stos
push
push
push
xchg
call
pop
jmp
std
aad
fs
test
mov
fisub
sub
and
xchg
fcmovne
xchg
cmovno
rol
sbb
outs
(bad)
fisttp
add
fstp
std
movs
(bad)
and
xchg
mov
mov
aam
or
rcl
pop
mov
and
xchg
or
mov
movs
ja
mov
ins
mov
out
cmp
psraw
gs
gs
and
mov
ret
stos
cmps
mov
pop
inc
cmc
mov
lods
(bad)
fst
inc
adc
popf
jo
movs
shl
mov
jl
mov
push
add
movs
jmp
sbb
inc
or
leave
jmp
retf
cmps
push
and
retf
mov
arpl
ror
push
add
dec
jmp
(bad)
pushf
cmc
fbld
test
or
sbb
cmp
mov
xchg
cmps
fcmovne
neg
stos
dec
fs
cmp
mov
sbb
lahf
adc
fdivp
and
xchg
xchg
mov
add
popa
or
pusha
sahf
sar
sti
push
inc
mov
ror
out
aam
repnz
je
fwait
xchg
mov
ja
enter
test
ins
jl
cmp
cmp
in
(bad)
fldenv
jg
enter
sbb
or
dec
mov
and
inc
dec
popa
pop
adc
push
mov
les
push
sahf
xor
sub
sbb
jno
mov
repz
loopne
enter
add
cmp
or
mov
div
rcr
dec
mov
pop
mov
jae
ss
inc
xchg
mov
rcl
repz
mov
sbb
das
icebp
mov
xchg
test
pop
mov
js
sbb
cmps
lds
mov
or
push
mov
mov
mov
push
mov
gs
sub
pusha
mov
scas
jns
out
je
inc
mov
test
rcr
dec
xchg
add
cs
dec
xchg
daa
add
test
jno
dec
movs
fwait
repz
xchg
jmp
jg
xlat
int
out
fcomp
fbld
lock
pop
and
and
pop
xchg
push
ds
ret
lahf
sahf
and
enter
pop
into
cmp
(bad)
mov
fisubr
and
pop
lahf
and
test
cmp
inc
popf
sbb
ja
ins
mov
sbb
xchg
or
stos
cs
push
pushf
inc
inc
stos
dec
or
xlat
cmp
jge
(bad)
sub
jno
xor
int3
mov
xlat
retf
fbstp
cmp
cmp
aam
pop
add
not
rol
retf
bnd
push
not
das
popa
adc
scas
xchg
sbb
ficom
mov
mov
psraw
mov
loope
mov
shld
push
(bad)
gs
rcr
test
movs
xor
add
lahf
(bad)
pop
nop
mov
enter
enter
xor
sbb
sub
add
and
push
or
shr
retf
inc
and
xor
lea
cmp
lahf
xchg
call
or
movs
dec
(bad)
div
mov
lds
fnstenv
sbb
test
mov
test
lock
mov
sub
add
in
mov
sbb
jp
inc
pop
fwait
cmc
cmps
mov
popf
and
stc
movs
aaa
sub
repz
jno
imul
adc
das
test
xchg
inc
(bad)
pop
jmp
mov
(bad)
ret
jp
fiadd
cli
test
fild
mov
jne
outs
(bad)
dec
add
cmp
fs
adc
arpl
arpl
cmp
cmp
pop
fs
cmp
xchg
inc
sub
cdq
in
add
inc
das
sbb
(bad)
xlat
xor
mov
mov
push
or
lea
mov
fsubr
mov
mov
dec
(bad)
popa
inc
or
adc
cwde
fnstsw
shl
sahf
stos
sub
mov
adc
ret
shr
inc
les
xchg
jecxz
clc
div
fcom
mov
pop
xchg
pop
shr
add
loope
mov
sbb
cdq
pushf
push
cld
xor
adc
cld
mov
adc
push
inc
ror
fs
stos
inc
xchg
lods
(bad)
pop
dec
push
cmp
ret
cdq
(bad)
cmp
xchg
sahf
fist
call
inc
pop
imul
test
sub
(bad)
std
jnp
and
out
inc
les
rcl
cmp
loope
lods
xlat
push
sar
cld
xor
ins
dec
in
(bad)
(bad)
pop
mov
pusha
push
mov
mov
cmps
test
mov
neg
sahf
xchg
das
jge
popf
pop
pop
inc
push
pushf
sti
inc
adc
popf
sar
xlat
into
repz
jno
xchg
mov
hlt
mov
pop
sub
mov
aam
cmp
jno
cli
and
gs
pushf
lahf
pop
sbb
and
rcr
shl
pop
mov
push
inc
in
pop
add
mov
mov
shl
into
stos
cld
push
cmp
adc
mov
sbb
push
cmp
das
outs
dec
mov
test
sbb
pop
scas
(bad)
fstp
mov
imul
mov
or
repz
mov
jge
stc
xor
enter
fld
mov
jb
mov
add
lods
inc
push
xor
jns
and
lock
pop
fcmovnu
and
scas
test
nop
jne
inc
mov
dec
fnstenv
das
or
pop
in
test
popf
mov
ins
mov
test
fucomip
hlt
cmp
fsub
hlt
xor
test
cmp
ss
inc
out
mov
gs
cs
sahf
mov
outs
movs
mov
cs
leave
lea
cli
mov
call
dec
add
scas
sbb
mov
fucom
repnz
das
retf
mov
popf
in
mov
pop
adc
rcr
inc
or
arpl
push
rcl
mov
popf
push
test
ud1
sar
mov
cmp
or
repz
in
mov
jecxz
jae
movs
adc
ins
xchg
adc
nop
push
adc
push
mov
call
lock
fsub
jl
frstor
cmp
mov
or
push
gs
sbb
aaa
out
lea
ins
or
jmp
loop
das
int
cmp
jg
shr
xor
dec
(bad)
std
sbb
loop
inc
out
mov
aam
mov
sbb
in
imul
(bad)
fstp
sbb
jl
nop
mov
out
imul
sbb
popa
adc
popa
scas
push
add
into
arpl
and
ds
mov
imul
scas
fldcw
push
ror
mov
jmp
retf
lods
jle
(bad)
fsub
lods
fild
mov
ror
in
repz
nop
xchg
cld
fld
fdiv
sbb
dec
pop
fsubr
cwde
xor
cmps
and
xchg
call
pop
cli
adc
jno
sbb
inc
test
add
aaa
pop
imul
mov
mov
jecxz
jns
out
dec
into
adc
xchg
lds
retf
jge
js
jmp
les
leave
mov
pop
pop
cdq
xchg
ins
jl
fbld
pusha
cmp
xor
xor
cmc
addr16
and
call
leave
ja
int3
fnsave
mov
les
in
sti
mov
sbb
mov
pop
fisttp
mov
jns
icebp
mov
mov
fst
jb
rcr
lahf
push
adc
and
push
mov
repz
push
pop
mov
dec
cdq
lods
inc
mov
mov
lahf
scas
(bad)
adc
push
pop
popf
push
pop
(bad)
cmp
pop
and
aad
mov
or
mov
mov
adc
ror
push
jecxz
movs
ret
aaa
sub
test
pusha
pop
ins
jbe
out
jl
mov
adc
cmp
xor
push
cmps
and
imul
or
fst
mov
cdq
idiv
mov
shl
mov
out
das
movs
xor
hlt
stc
mov
out
mov
xor
mov
mov
mov
jmp
push
popf
adc
push
xchg
retf
pop
and
pop
stos
aam
shr
popa
movs
fild
ror
retf
repnz
mov
pop
fadd
dec
jb
daa
rcr
xchg
cmp
xchg
fisttp
jle
inc
jns
addr16
rcr
test
js
pusha
inc
fisubr
xlat
xchg
jmp
push
es
leave
loop
out
mov
mov
mov
je
mov
repnz
dec
jae
hlt
hlt
jp
inc
mov
pop
adc
(bad)
xchg
aas
and
mov
or
in
xor
cmp
jne
pop
leave
stc
repz
(bad)
out
add
call
or
ins
mov
pop
push
mov
dec
jae
sbb
add
retf
and
pop
inc
inc
jmp
cmp
cmc
js
rol
mov
jg
xor
out
movs
scas
out
movs
dec
and
xlat
enter
push
lods
push
dec
mov
ficomp
xchg
push
rcr
sub
jmp
sub
dec
jbe
pop
mov
push
mov
pop
xchg
adc
push
mov
pop
sub
adc
out
sbb
mov
iret
fwait
call
jle
sub
mov
or
push
jg
movs
mov
mov
mov
bound
imul
jae
lea
mov
mov
fistp
loopne
outs
dec
(bad)
int3
xchg
add
sub
adc
pop
or
sbb
and
jmp
frstor
or
pop
sbb
dec
cmp
cmp
add
inc
lahf
jle
popa
clc
jnp
mov
paddw
xor
test
(bad)
cmp
add
jbe
jmp
test
sbb
(bad)
dec
fist
sbb
jnp
xchg
sub
(bad)
push
jnp
scas
mov
dec
or
aam
push
sbb
dec
das
add
mov
outs
scas
stos
popf
fdivr
xlat
dec
sahf
cmps
clc
(bad)
pushf
cli
push
fdivr
mov
sahf
nop
cmp
js
jns
dec
(bad)
dec
loop
inc
mov
adc
and
pusha
test
xchg
shl
sub
fld
ins
lods
push
lahf
or
mov
jno
repnz
sbb
ret
jb
outs
dec
xchg
xchg
sbb
and
test
inc
loopne
mov
ds
xor
in
jb
lods
xchg
push
mov
movs
call
pop
stos
shr
scas
ret
loope
adc
sub
pusha
pop
mov
scas
push
sbb
cmp
push
sub
mov
inc
lods
or
or
mov
retf
stos
in
or
mov
out
push
jle
inc
aas
popf
lods
push
jg
leave
cli
adc
add
mov
cld
cmp
push
push
test
retf
push
pop
iret
nop
call
adc
les
cli
inc
xor
fild
push
mov
add
outs
push
iret
sbb
mov
imul
call
jl
aas
clc
mov
out
ror
ds
sub
call
lods
push
mov
dec
adc
and
cmp
and
retf
and
bound
push
adc
adc
in
out
fisubr
lods
call
in
pop
push
mov
pusha
repz
inc
xchg
lods
pop
sbb
dec
jno
add
push
(bad)
sbb
jnp
popf
dec
inc
adc
loop
popa
lahf
int
inc
pop
sbb
sbb
jae
jne
jns
sbb
mov
inc
mov
cmp
stos
leave
call
xor
dec
aas
or
cmps
daa
xchg
jle
jp
out
pusha
(bad)
pushf
fcom
and
adc
cwde
dec
aaa
push
pop
mov
jno
push
outs
push
mov
std
es
xchg
(bad)
pop
iret
ret
shl
sti
mov
fs
popa
jb
mov
je
lods
push
dec
call
jo
adc
push
pop
movs
inc
xor
dec
cmps
ret
xchg
cmp
aad
inc
jge
stos
fs
mov
cmp
jns
xor
test
adc
sbb
or
cs
adc
(bad)
shr
and
xor
jb
popf
pushf
pop
mov
adc
sbb
pop
mov
pop
scas
ret
imul
cdq
mov
out
mov
lock
pop
imul
mov
iret
leave
iret
jb
movs
lahf
sbb
ror
jo
mov
and
inc
movs
or
in
sti
mov
sbb
pop
mov
lods
xchg
add
outs
sbb
leave
mov
pushf
(bad)
jp
scas
outs
es
(bad)
push
mov
cwde
and
add
jns
dec
jne
jb
sub
ffreep
test
retf
push
sub
out
jo
shl
add
loope
cmp
nop
add
xchg
int
push
mov
sbb
pop
xchg
jnp
pop
mov
or
inc
and
push
xchg
call
push
dec
inc
mov
int3
pop
sub
lds
ret
push
dec
mov
cli
je
xor
lds
pop
jmp
stos
push
push
jb
pop
jle
push
inc
in
mov
sbb
cmp
mov
aad
loope
dec
outs
test
sar
cdq
pop
test
je
movs
mov
enter
sbb
push
or
push
xor
sbb
outs
shl
push
iret
jae
fld
fucomp
inc
jno
xchg
cwde
push
cli
daa
adc
fist
pop
repnz
stos
aad
jbe
inc
sub
clc
sub
push
shr
push
xchg
jmp
fmulp
fs
dec
daa
mov
(bad)
aas
stos
int3
js
(bad)
shl
jle
xchg
sbb
stos
add
mov
ss
out
and
call
sub
fsub
mov
enter
inc
push
cmp
pop
push
sar
xchg
into
outs
sub
sbb
pop
mov
and
pop
neg
sub
dec
cmp
sbb
iret
cdq
mov
outs
rol
sbb
jae
jno
cli
sub
cld
fs
daa
imul
pop
stos
xchg
or
sbb
rol
(bad)
sahf
jo
dec
sub
imul
mov
lds
test
push
mov
(bad)
mov
jge
mov
push
mov
popa
xchg
fidiv
jbe
addr16
lahf
scas
(bad)
adc
push
adc
je
add
jo
pop
ror
inc
inc
sbb
out
call
dec
cwde
movs
jns
fadd
adc
push
lods
xlat
push
mov
xlat
mov
outs
sub
loopne
out
jmp
dec
inc
hlt
cdq
aam
mov
(bad)
fild
dec
mov
test
sti
enter
or
ins
lds
or
or
xchg
jb
movs
sbb
mov
jb
sbb
push
jl
jecxz
jge
dec
lahf
cmp
stc
cwde
cmp
mov
adc
imul
xor
call
cmp
lods
dec
pop
xchg
out
sub
clc
pop
fnsave
shl
ds
xchg
cmp
xchg
outs
mov
xchg
push
int3
cmp
sbb
inc
push
adc
xchg
xchg
scas
and
add
stos
aam
popa
inc
imul
js
pop
xchg
shl
jo
adc
clc
outs
cmp
retf
or
mov
les
repz
ror
movs
fldenv
sub
mov
inc
pop
(bad)
cmps
ret
fld1
jne
xchg
pop
ins
ss
mov
sbb
push
test
fs
jmp
xchg
int
imul
ss
cdq
neg
movs
mov
(bad)
jmp
lock
(bad)
ins
mov
mov
pop
pop
jno
sahf
fistp
sub
or
repz
sbb
add
and
scas
add
sbb
loope
dec
stos
push
(bad)
mov
dec
and
pop
inc
popa
test
mov
adc
inc
xchg
mov
or
stos
lds
pushf
repnz
ror
adc
lock
sub
add
jmp
pop
push
sbb
fsub
push
ror
cmc
test
aam
jae
adc
xchg
add
add
addr16
cmp
jp
fnstenv
fidivr
cli
xor
ret
sbb
test
pop
cmps
mov
push
jo
adc
out
les
or
aam
inc
fwait
mov
in
mov
loopne
repnz
xchg
imul
add
dec
or
out
xor
mov
inc
dec
rcl
dec
xor
stc
mov
std
je
mov
sub
int3
pop
push
mov
fbstp
shl
cli
sub
ja
int3
in
iret
pop
adc
xchg
outs
and
pop
stos
push
fwait
mov
sbb
inc
mov
mov
fucomp
int
jbe
into
aaa
mov
popa
mov
xchg
sbb
scas
mov
das
idiv
sbb
sbb
fisttp
loopne
or
add
push
mov
jb
xor
push
cmp
inc
push
sbb
stc
sbb
inc
push
or
xor
repz
push
xor
jo
ins
test
shr
repnz
sub
inc
inc
dec
xor
sbb
gs
outs
xchg
pop
mov
dec
push
push
or
in
sbb
xor
test
pop
je
aaa
fisubr
pop
xchg
sub
stos
dec
mov
push
stos
stos
shr
ss
mov
loopne
loopne
div
push
mov
std
jno
int3
ret
inc
sbb
ror
xchg
dec
les
sbb
or
push
lahf
repz
fidivr
fcomip
xor
gs
dec
int
call
out
adc
div
retf
cdq
jmp
jne
sti
imul
(bad)
aad
xchg
mov
adc
aaa
loop
mov
mov
xor
popf
sbb
fwait
mov
mov
sub
dec
mov
ret
outs
cld
or
je
(bad)
cmp
add
movs
shl
pop
cmp
lods
sub
movs
mov
gs
xchg
lods
xchg
adc
xlat
mov
nop
inc
and
movs
dec
mov
mov
push
in
add
stos
dec
sub
adc
or
push
movs
pop
sub
dec
xor
aad
cmp
mov
pop
movs
bound
add
iret
loope
(bad)
jmp
xchg
dec
sub
inc
hlt
inc
mov
out
cmp
mov
leave
iret
(bad)
stos
sahf
pushf
xchg
sbb
retf
div
adc
fwait
dec
shr
mov
fild
fnstenv
lods
aaa
dec
int
push
icebp
mov
mov
mov
mov
das
enter
stos
std
mov
test
dec
repz
xchg
dec
mov
xor
(bad)
mov
push
dec
cmp
icebp
dec
ret
pushf
mov
pop
movs
mov
inc
call
ret
ror
popf
jmp
xor
dec
and
adc
mov
or
rol
mov
or
sahf
add
fisttp
and
in
sub
aam
aam
in
mov
rol
cdq
ds
mov
ret
xchg
das
dec
mov
sub
sti
inc
adc
jne
lahf
pop
fisttp
sti
mov
fdiv
(bad)
mov
add
cmc
mov
inc
mov
sbb
dec
inc
lahf
sbb
shl
cmc
dec
adc
test
out
mov
xchg
push
sub
fld
pushf
(bad)
jnp
push
pop
pop
xor
cs
sub
push
sbb
hlt
mov
pushf
fist
cld
popa
push
jp
(bad)
repz
jo
dec
dec
repnz
lea
js
jecxz
popf
std
(bad)
retf
mov
call
jecxz
les
sub
mov
push
jp
loop
in
fnstcw
je
and
fimul
shl
cld
xor
lods
xlat
ins
cdq
lods
rcr
xchg
mov
movs
faddp
and
and
ins
mov
sbb
inc
pop
add
or
std
fsub
(bad)
mov
pop
inc
or
imul
lock
and
mov
inc
test
movs
xchg
pop
pop
and
in
jecxz
pop
mov
or
dec
jecxz
retf
nop
jns
ja
popf
addr16
ret
sbb
dec
mov
sub
add
sti
sub
aaa
mov
jmp
imul
xor
shl
jo
f2xm1
sub
(bad)
xchg
and
xor
mov
aad
xlat
fs
dec
adc
test
jmp
cmps
push
(bad)
mov
mov
test
gs
cmp
xchg
fwait
jecxz
fs
(bad)
or
ds
jl
adc
mov
loope
or
out
xchg
adc
out
and
call
mov
push
retf
sbb
fistp
js
mov
test
sbb
xchg
jns
sbb
jnp
ret
push
xchg
xor
imul
jne
in
stc
mov
cmc
mov
sub
mov
outs
out
or
mov
repz
jmp
xor
or
std
mov
lahf
sbb
sub
gs
dec
fs
add
movs
sbb
push
jmp
sahf
lock
pop
sbb
aam
pop
aam
loope
mov
iret
jae
push
xchg
or
bound
(bad)
push
adc
iret
mov
scas
xchg
out
popf
inc
frstor
xchg
push
pop
call
adc
jb
cmp
test
add
dec
adc
mov
inc
and
(bad)
or
mov
rcr
rol
cmp
adc
pusha
lods
sbb
jmp
pusha
(bad)
xor
cmp
mov
mov
(bad)
test
cwde
sbb
daa
ret
add
(bad)
mov
in
cs
aad
xchg
je
xor
jo
jmp
ret
loopne
stos
push
inc
(bad)
jecxz
clc
push
fsub
(bad)
rcr
or
add
cli
stc
imul
fidiv
mov
out
fsubr
mov
lods
push
push
xchg
lahf
adc
repnz
call
faddp
fbstp
es
pop
sub
mov
test
or
mov
(bad)
sbb
gs
nop
inc
mov
lds
mov
jg
jns
das
xchg
bound
add
js
ror
arpl
cmp
jp
mov
xor
jnp
and
add
rcl
mov
cmp
pop
ds
or
out
push
xchg
jne
cmc
mov
push
jb
jns
jp
push
jo
test
pop
mov
test
mov
sar
loopne
aam
push
fisub
test
jecxz
jg
test
push
jnp
inc
dec
nop
pop
sti
xor
(bad)
xor
add
push
fs
sub
pop
test
(bad)
call
mov
or
jle
xor
push
repz
pop
(bad)
xor
sub
aam
sbb
mov
add
mov
shr
jge
mov
and
jnp
(bad)
clc
mov
outs
loopne
sub
inc
pusha
loop
xchg
mov
inc
ficom
mov
imul
in
push
stos
jle
into
sbb
loop
jo
xor
addr16
inc
jecxz
cmp
rcl
cdq
push
sbb
mov
popa
outs
enter
cwde
gs
pop
xor
sbb
jecxz
fcomp
or
sub
xor
cs
int
push
mov
inc
pop
jp
pop
enter
mov
es
daa
jb
aas
cmp
sub
in
outs
hlt
call
outs
adc
(bad)
mov
pop
jg
movs
scas
add
int3
sar
repnz
pushf
fs
pushf
adc
jg
inc
aam
dec
mov
sub
or
ins
push
adc
ins
fldcw
pop
adc
test
mov
push
cmps
inc
push
mov
inc
call
(bad)
loopne
lds
pop
into
jno
inc
jg
pop
imul
sbb
cmps
dec
sbb
mov
loop
xchg
push
test
inc
push
aas
vcvtpd2dq
dec
ss
mov
iret
push
paddusw
push
in
xchg
jnp
pop
jp
call
pop
lods
jb
cmps
cmp
and
inc
lahf
pop
adc
sub
xchg
cmp
pop
mov
(bad)
test
cmps
pop
xchg
scas
xchg
mov
or
adc
test
daa
xor
inc
iret
cmp
lea
pusha
sbb
adc
imul
ja
mov
add
imul
cwde
push
fwait
add
cmc
mov
retf
jnp
cmps
shl
into
div
adc
mov
mov
xchg
(bad)
adc
test
in
mov
sub
(bad)
jb
fcmovnu
test
push
arpl
jb
and
sbb
and
fwait
dec
(bad)
cmps
inc
(bad)
(bad)
xchg
cli
cmc
push
xor
pop
sub
xor
sahf
dec
aam
lds
and
or
fbld
cmp
sub
mov
xchg
pop
lock
jnp
lea
mov
iret
mov
in
add
xor
pop
mov
ret
jl
inc
dec
adc
xor
mov
pop
xchg
push
or
mov
mov
push
loopne
cli
fist
inc
xor
adc
xor
and
jmp
push
enter
adc
ja
int3
in
mov
or
push
aaa
scas
mov
push
adc
scas
inc
pop
push
mov
cmp
xor
es
pop
sub
test
xor
push
push
mov
sti
imul
hlt
ja
cmp
fldenv
sub
or
fwait
inc
xacquire
popf
pop
rcr
shl
mov
or
or
daa
xchg
cmp
daa
fdivr
jb
xor
(bad)
cmps
sub
mov
push
cdq
jo
inc
sahf
icebp
dec
(bad)
fisttp
cmp
jo
fsubr
adc
add
mov
push
inc
adc
dec
xchg
loopne
jbe
int3
adc
out
pop
mov
sub
cmp
out
and
cwde
call
fadd
(bad)
clc
mov
hlt
leave
cmp
imul
cmps
outs
mov
xor
fldenv
(bad)
js
or
xor
or
fbstp
mov
aam
cmp
inc
ja
jge
add
fbstp
mov
or
cmp
mov
fisub
add
(bad)
stos
inc
add
jle
cmp
push
jbe
pusha
jle
loopne
imul
fbld
cmp
ins
adc
test
mov
push
adc
xchg
jno
mov
test
and
cdq
push
cmp
sub
mov
ins
int3
dec
imul
sar
jle
inc
cdq
lods
scas
mov
in
pushf
ins
(bad)
and
sub
js
pop
sub
js
test
adc
test
jbe
pop
push
mov
ret
loopne
loop
ja
fucomi
std
shl
repz
inc
fadd
inc
jle
add
and
or
imul
stos
sub
out
sub
call
push
push
aad
std
sbb
loope
xor
in
jnp
jae
in
sub
iret
jne
mov
mov
scas
dec
jns
(bad)
jge
add
shl
cmp
ret
jo
xchg
mov
ins
and
push
ss
mov
lods
push
cdq
jl
fist
(bad)
mov
ins
or
dec
(bad)
inc
and
ret
jo
or
adc
jp
push
cs
fild
sti
test
cmps
push
add
aaa
in
pop
sub
dec
and
sub
and
test
jle
mov
mov
mov
into
pop
push
mov
rcl
cmp
fnstenv
mov
ret
ficomp
cmp
test
pmullw
add
repz
sbb
pop
fsubr
cld
paddsb
jl
jg
mov
test
adc
cld
cmp
aad
aad
fbstp
dec
pusha
retf
cmps
inc
arpl
repnz
add
mov
jnp
xor
or
adc
scas
cmp
mov
mov
xchg
enter
scas
out
jmp
popa
inc
fs
(bad)
cmp
sub
push
das
jecxz
add
addr16
ins
test
shl
out
sub
push
mov
push
push
mov
sti
push
loopne
mov
push
sbb
xor
adc
or
hlt
imul
fbld
fcom
mov
cdq
neg
adc
ins
idiv
mov
arpl
lock
fist
rol
lock
pop
xor
dec
xchg
add
(bad)
daa
push
(bad)
add
dec
pop
ja
sub
dec
cs
in
push
sbb
lods
mov
pop
cmps
dec
call
push
add
retf
mov
push
xchg
pop
(bad)
js
pop
int3
sub
mov
mov
mov
pop
mov
or
shr
test
pop
clc
inc
pusha
sahf
xchg
pushf
(bad)
dec
icebp
adc
ss
cld
add
ret
cmp
dec
fstp
sti
std
mov
mov
sub
jmp
mov
gs
je
inc
cmps
cld
or
aaa
mov
mov
mov
add
nop
inc
lock
cmp
add
shl
cmc
dec
inc
in
cs
inc
je
cmp
jmp
call
sahf
xchg
xchg
popf
xor
sub
inc
push
into
mov
jecxz
cmp
or
jns
mov
scas
shl
push
ror
cmps
add
outs
pop
cmps
addr16
data16
pop
dec
retf
cdq
test
(bad)
xor
leave
sbb
mov
hlt
xor
(bad)
scas
xor
xchg
push
cmp
stc
pop
leave
sbb
dec
pushf
test
ja
push
vpcmpeqd
retf
pop
call
mov
lea
jns
lahf
scas
(bad)
std
mov
mov
aad
cmc
xor
cmp
jl
fld
popf
mov
xchg
push
mov
adc
test
sub
shr
test
cmp
jb
fs
pop
adc
(bad)
call
sub
mov
mov
sbb
mov
inc
xor
adc
sbb
jae
(bad)
jmp
stc
mov
sbb
mov
push
pop
iret
or
cmp
xor
imul
std
lds
enter
sub
xor
mov
push
adc
nop
dec
hlt
mov
sbb
test
in
div
retf
imul
sub
push
dec
sub
pop
jae
sbb
push
inc
scas
xchg
call
stos
mov
cs
fld
mov
mov
mov
cmp
adc
and
jnp
pop
xor
loope
lea
test
sbb
pop
xchg
out
mov
push
sbb
in
pop
push
mov
inc
push
mov
sbb
std
jge
int
inc
cdq
(bad)
jmp
fadd
sub
aam
test
sbb
loopne
jae
ret
or
ret
pop
mov
or
call
cmp
and
inc
shl
shl
dec
or
push
loopne
cmp
cs
ja
pop
push
(bad)
stos
jg
movs
mov
ror
(bad)
sbb
dec
fild
push
cmp
lods
das
push
sub
idiv
xchg
mov
and
mov
cld
stos
cmc
lea
loop
adc
mov
test
loopne
xor
dec
xchg
stos
(bad)
mov
stos
xchg
stos
inc
call
(bad)
pop
test
lods
inc
sbb
scas
(bad)
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
add
add
push
mov
adc
test
sub
mov
lahf
(bad)
cmps
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
(bad)
mov
adc
sbb
add
fsubr
cwde
retf
movs
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fld
arpl
pop
sub
inc
sbb
add
stos
(bad)
mov
stos
xchg
stos
inc
call
(bad)
pop
test
lods
inc
sbb
scas
(bad)
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
add
add
push
mov
adc
test
sub
mov
lahf
(bad)
cmps
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
(bad)
mov
adc
sbb
add
fsubr
cwde
retf
movs
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fld
arpl
pop
sub
inc
sbb
add
stos
(bad)
mov
stos
xchg
stos
inc
call
(bad)
pop
test
lods
inc
sbb
scas
(bad)
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
add
add
push
mov
adc
test
sub
mov
lahf
(bad)
cmps
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
(bad)
mov
adc
sbb
add
fsubr
cwde
retf
movs
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fld
arpl
pop
sub
inc
sbb
add
stos
(bad)
mov
stos
xchg
stos
inc
call
(bad)
pop
test
lods
inc
sbb
scas
(bad)
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
add
add
push
mov
adc
test
sub
mov
lahf
(bad)
cmps
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
(bad)
mov
adc
sbb
add
fsubr
cwde
retf
movs
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fld
arpl
pop
sub
inc
sbb
add
stos
(bad)
mov
stos
xchg
stos
inc
call
(bad)
pop
test
lods
inc
sbb
scas
(bad)
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
add
add
push
mov
adc
test
sub
mov
lahf
(bad)
cmps
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
(bad)
mov
adc
sbb
add
fsubr
cwde
retf
movs
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fld
arpl
pop
sub
inc
sbb
add
stos
(bad)
mov
stos
xchg
stos
inc
call
(bad)
pop
test
lods
inc
sbb
scas
(bad)
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
add
add
push
mov
adc
test
sub
mov
lahf
(bad)
cmps
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
(bad)
mov
adc
sbb
add
fsubr
cwde
retf
movs
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fld
arpl
pop
sub
inc
sbb
add
stos
(bad)
mov
stos
xchg
stos
inc
call
(bad)
pop
test
lods
inc
sbb
scas
(bad)
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
add
add
push
mov
adc
test
sub
mov
lahf
(bad)
cmps
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
(bad)
mov
adc
sbb
add
fsubr
cwde
retf
movs
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fld
arpl
pop
sub
inc
sbb
add
stos
(bad)
mov
stos
xchg
stos
inc
call
(bad)
pop
test
lods
inc
sbb
scas
(bad)
fucomi
bnd
popf
scas
inc
fwait
leave
loop
xchg
adc
add
add
push
mov
adc
test
sub
mov
lahf
(bad)
cmps
ret
fld1
jb
fwait
lea
xor
mov
int3
pop
sub
dec
push
or
int
imul
sahf
dec
mov
into
pop
stos
shr
repz
ret
loopne
mov
repz
sti
mov
jecxz
(bad)
mov
adc
sbb
add
fsubr
cwde
retf
movs
mov
pushf
dec
and
pop
stos
push
test
test
inc
mov
fucomp
jae
fld
.byte
