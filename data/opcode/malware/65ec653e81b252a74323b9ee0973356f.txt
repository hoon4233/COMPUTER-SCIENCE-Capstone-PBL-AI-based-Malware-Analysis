rcr
add
add
dec
add
add
add
add
cmp
add
add
add
add
push
cld
jae
add
pop
add
sub
add
add
inc
add
add
jae
add
or
push
add
or
sub
add
push
sub
sub
add
pop
add
or
add
add
push
push
outs
and
add
sub
xor
add
add
add
add
add
add
mov
and
add
jge
add
add
jnp
add
add
mov
sub
add
or
add
add
push
push
outs
and
add
add
add
push
push
outs
and
add
add
add
push
push
outs
and
add
add
add
push
push
outs
and
add
add
add
add
mov
sub
add
or
add
add
push
pop
outs
and
add
add
add
push
add
add
add
add
add
and
add
sub
add
or
jnp
add
add
xor
sub
add
or
add
add
push
sub
add
or
add
or
outs
and
add
sub
add
or
add
or
jnp
add
add
pop
mov
sub
add
or
add
add
push
sub
add
or
add
or
outs
and
add
sub
add
or
add
or
outs
push
add
push
add
add
add
sub
add
outs
sub
add
add
add
add
mov
sub
add
or
xchg
add
add
mov
add
add
outs
sbb
add
pop
outs
and
add
add
add
push
push
outs
sub
add
add
add
push
outs
sub
add
add
push
jb
add
jo
add
or
outs
adc
add
jb
add
jo
add
or
outs
sbb
add
pop
outs
and
add
add
add
push
pop
outs
and
add
add
add
push
pop
outs
and
add
jb
add
jo
adc
add
jo
das
add
or
sub
add
xor
add
add
add
add
add
add
push
outs
xor
add
mov
add
add
push
outs
xor
add
mov
push
mov
sub
add
or
add
add
push
outs
sub
jb
add
jo
adc
add
jo
das
add
or
push
push
mov
sub
add
or
add
add
push
outs
sub
jb
add
jo
adc
add
jo
das
add
or
pop
mov
sub
add
or
pop
mov
sub
add
or
xor
add
sub
add
or
lods
add
add
outs
push
add
push
pop
outs
and
add
add
add
push
pop
outs
sub
add
add
add
push
pop
outs
and
add
add
add
push
push
outs
and
add
jae
add
or
pop
jb
add
jo
xor
dec
add
jo
jb
add
jo
jb
add
jo
outs
adc
add
outs
add
or
add
jo
outs
adc
add
outs
add
or
aaa
add
or
add
dec
add
jo
add
jo
push
and
add
adc
jb
add
jo
or
add
or
or
pop
or
adc
add
adc
adc
sub
add
push
sub
add
adc
or
add
add
add
adc
add
or
push
jb
add
jo
xor
dec
add
jo
jb
add
jo
jb
add
jo
outs
adc
add
outs
add
or
add
jo
outs
adc
add
outs
add
or
aaa
add
or
jo
add
iret
add
jo
add
add
push
jb
add
jo
pop
jae
add
or
or
push
pop
or
adc
add
adc
sub
add
push
push
adc
das
add
or
sub
sbb
add
add
add
adc
add
or
jae
add
or
or
add
or
sub
add
or
add
outs
cmp
add
adc
cmp
add
or
add
aas
add
or
add
push
add
add
outs
inc
add
or
pop
add
inc
add
or
add
or
outs
cmp
add
adc
sub
add
or
push
pop
outs
inc
add
or
push
outs
inc
add
or
add
or
add
add
outs
inc
add
or
pop
add
or
push
add
inc
add
or
push
pop
outs
inc
add
or
push
or
add
or
push
add
add
or
add
or
pop
outs
dec
add
or
pop
outs
dec
add
or
outs
dec
add
or
lea
add
and
add
and
dec
add
or
add
jo
and
sbb
add
jo
sub
add
or
push
and
or
pop
pop
outs
dec
add
or
pop
outs
push
add
or
sub
add
fidiv
and
or
or
outs
dec
add
or
add
jo
sub
add
ficomp
and
or
or
outs
dec
add
or
add
jo
sub
add
fiadd
push
sub
add
inc
add
add
or
xor
push
add
add
add
push
add
add
add
add
add
add
add
add
push
add
and
sbb
add
add
add
add
cmp
add
sbb
add
and
add
add
add
add
add
add
add
or
jnp
add
add
inc
add
or
or
add
push
add
or
sub
add
add
add
add
add
sbb
add
add
add
adc
push
add
or
add
add
add
or
add
add
add
add
sub
add
jae
add
or
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
jnp
add
add
pop
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
add
push
outs
pop
add
or
outs
or
add
outs
pop
add
or
outs
add
push
outs
pop
add
or
outs
sub
add
outs
pop
add
or
sub
add
add
add
push
pop
outs
pusha
add
or
outs
push
add
push
jb
add
jo
add
inc
inc
pop
sbb
jae
add
or
add
or
outs
push
add
push
and
add
add
add
add
sub
add
outs
sub
add
add
add
push
pop
sub
add
add
add
or
add
or
outs
push
add
push
jb
add
jo
data16
or
outs
push
add
push
pop
jb
adc
add
or
add
or
outs
push
add
push
pop
outs
imul
push
add
push
jb
add
jo
add
or
outs
adc
add
pop
outs
pusha
add
or
outs
adc
add
jb
add
jo
add
inc
inc
pop
sbb
jae
add
or
add
or
outs
adc
add
and
add
add
add
add
sub
add
outs
sub
add
add
add
push
pop
and
add
or
add
or
outs
adc
add
jb
add
jo
data16
or
outs
adc
add
pop
je
adc
add
or
add
or
outs
adc
add
sbb
add
or
outs
adc
add
jb
add
jo
add
or
outs
adc
add
and
add
add
add
add
sub
add
outs
push
add
add
add
push
pop
outs
imul
or
outs
adc
add
jb
add
jo
add
inc
inc
pop
sbb
jae
add
or
add
or
outs
adc
add
sub
or
add
or
outs
adc
add
and
bound
add
jae
add
or
add
or
outs
adc
add
jb
add
jo
data16
or
outs
adc
add
and
add
add
sbb
add
or
add
or
outs
adc
add
sbb
add
or
outs
adc
add
and
add
add
add
add
sub
add
outs
push
add
add
add
push
pop
outs
imul
or
outs
adc
add
jb
add
jo
add
inc
inc
pop
sbb
jae
add
or
add
or
outs
adc
add
sub
or
add
or
outs
adc
add
and
add
add
add
or
add
or
outs
adc
add
jb
add
jo
data16
or
outs
adc
add
pop
sub
add
or
outs
adc
add
and
add
add
sbb
add
or
add
or
outs
adc
add
sbb
add
or
outs
push
add
push
pop
outs
pusha
add
or
outs
push
add
push
jb
add
jo
add
inc
inc
pop
sbb
jae
add
or
add
or
outs
push
add
push
and
add
add
add
add
sub
add
outs
sub
add
add
add
push
pop
inc
and
add
or
add
or
outs
push
add
push
jb
add
jo
data16
or
outs
push
add
push
pop
cmp
sbb
add
or
add
or
outs
push
add
push
sbb
add
or
outs
push
add
push
jb
add
jo
add
or
outs
push
add
push
pop
outs
outs
add
or
outs
push
add
push
push
outs
jo
add
add
add
push
and
add
add
add
add
sub
add
outs
jno
add
add
add
push
jb
add
jo
add
inc
inc
pop
sbb
jae
add
or
add
or
outs
sbb
add
pop
outs
jb
add
add
add
push
outs
jae
add
sbb
adc
add
and
add
and
add
and
add
and
add
and
add
and
add
outs
je
add
add
add
push
and
movs
add
add
add
or
add
or
outs
sbb
add
jb
add
jo
data16
or
outs
sbb
add
and
add
add
sbb
add
or
add
or
outs
sbb
add
sbb
imul
sbb
add
jb
add
jo
jne
add
add
add
push
pop
outs
jbe
add
add
add
push
push
outs
ja
add
add
add
push
and
add
add
add
add
sub
add
outs
js
add
add
add
push
push
outs
jns
add
add
add
push
jb
add
jo
add
inc
inc
pop
sbb
jae
add
or
add
or
outs
sbb
add
pop
or
fild
add
jae
add
or
add
or
outs
sbb
add
jb
add
jo
data16
or
outs
sbb
add
pop
jns
sub
add
or
add
or
outs
sbb
add
sbb
or
outs
sbb
add
jb
add
jo
jp
add
add
add
push
push
outs
jnp
add
add
add
push
pop
outs
jbe
add
add
add
push
push
outs
ja
add
add
add
push
and
add
add
add
add
sub
add
outs
js
add
add
add
push
push
outs
jns
add
add
add
push
jb
add
jo
add
inc
inc
pop
sbb
jae
add
or
add
or
outs
sbb
add
and
add
and
add
add
add
or
add
or
outs
sbb
add
jb
add
jo
data16
or
outs
sbb
add
pop
jns
sub
add
or
add
or
outs
sbb
add
push
outs
imul
sbb
add
jb
add
jo
jp
add
add
add
push
push
outs
jnp
add
add
add
push
sbb
add
or
outs
push
add
push
sub
or
add
or
outs
push
add
push
and
add
add
add
add
sub
add
outs
sub
add
add
add
push
pop
or
inc
add
add
add
or
add
or
outs
push
add
push
jb
add
jo
data16
or
outs
push
add
push
and
pop
jae
add
or
add
or
outs
push
add
push
pop
outs
jle
add
add
add
push
pop
or
add
or
outs
push
add
push
pop
outs
jg
add
add
add
push
push
outs
and
add
add
add
push
and
add
add
add
or
outs
and
add
pop
outs
pusha
add
or
outs
and
add
sub
jge
add
add
add
push
jb
add
jo
add
fs
pop
sbb
jae
add
or
add
or
outs
and
add
and
add
add
add
add
sub
add
outs
sub
add
add
add
push
pop
inc
outs
add
or
outs
and
add
and
add
add
sub
add
jae
add
or
add
or
outs
and
add
jb
add
jo
data16
or
outs
and
add
pop
adc
add
or
add
or
outs
and
add
pop
or
add
or
outs
and
add
jb
add
jo
add
or
outs
and
add
sub
add
outs
add
or
outs
and
add
and
add
and
add
jae
add
or
add
or
outs
and
add
jb
add
jo
data16
or
outs
and
add
pop
and
sbb
add
or
add
or
outs
and
add
pop
outs
test
add
add
add
push
pop
or
add
or
outs
and
add
push
outs
xchg
add
add
add
push
sub
add
or
outs
or
add
push
pop
sbb
add
or
add
or
outs
or
add
jb
add
jo
data16
or
outs
or
add
and
add
add
or
add
jae
add
or
add
or
outs
or
add
pop
outs
test
add
add
add
push
push
outs
test
add
add
add
push
push
outs
xchg
add
add
add
push
sub
add
outs
add
or
outs
add
push
and
add
and
add
or
add
or
outs
add
push
jb
add
jo
data16
or
outs
add
push
pop
and
sbb
add
or
add
or
outs
add
push
pop
outs
test
add
add
add
push
pop
or
test
add
add
add
push
push
outs
xchg
add
add
add
push
sub
add
outs
add
or
outs
sub
add
and
add
and
add
or
add
or
outs
sub
add
jb
add
jo
data16
or
outs
sub
add
pop
and
sbb
add
or
add
or
outs
sub
add
pop
outs
test
add
add
add
push
pop
or
or
outs
sub
add
push
outs
xchg
add
add
add
push
pop
outs
jbe
add
add
add
push
push
outs
ja
add
add
add
push
and
add
add
add
add
sub
add
outs
js
add
add
add
push
push
outs
jns
add
add
add
push
jb
add
jo
add
inc
inc
pop
sbb
jae
add
or
add
or
outs
sub
add
and
aad
add
jae
add
or
add
or
outs
sub
add
jb
add
jo
data16
or
outs
sub
add
pop
jns
sub
add
or
add
or
outs
sub
add
pop
push
outs
imul
sub
add
jb
add
jo
jp
add
add
add
push
push
outs
jnp
add
add
add
push
push
outs
and
add
add
add
push
pop
outs
pusha
add
or
outs
sub
add
sub
jge
add
add
add
push
jb
add
jo
add
fs
pop
sbb
jae
add
or
add
or
outs
sub
add
and
add
add
add
add
sub
add
outs
sub
add
add
add
push
pop
inc
outs
add
or
outs
sub
add
and
jae
add
or
add
or
outs
sub
add
jb
add
jo
data16
or
outs
sub
add
and
jae
add
or
add
or
outs
sub
add
pop
movq
add
add
add
push
jb
add
jo
add
or
and
add
inc
and
add
jae
add
or
mov
add
add
sub
sub
or
add
or
and
add
add
sub
add
jae
add
or
mov
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
mov
add
add
add
push
outs
lea
add
add
jb
add
jo
mov
add
je
add
add
pop
add
add
sub
jb
add
add
or
pop
sub
jb
add
add
or
pop
sub
outs
and
add
outs
xchg
add
or
outs
or
add
outs
xchg
add
or
outs
add
push
outs
xchg
add
or
outs
sub
add
outs
xchg
add
or
push
sub
sub
push
add
add
add
add
xor
add
add
add
inc
or
add
jae
add
or
add
add
add
pop
sub
pop
push
outs
xchg
add
or
add
add
add
jnp
add
add
pop
sub
pop
push
outs
cwde
add
or
push
add
add
add
and
add
add
add
push
add
add
add
and
add
add
add
push
add
add
add
and
add
add
add
push
add
add
add
and
add
add
add
push
add
add
add
add
xor
add
add
add
add
adc
inc
add
add
jae
add
or
add
add
add
pop
sub
pop
push
outs
xchg
add
or
add
add
add
jnp
add
add
pop
sub
pop
push
outs
cwde
add
or
push
add
add
add
and
add
add
add
push
add
add
add
adc
add
aaa
add
add
add
adc
inc
push
add
push
jae
add
or
add
add
add
pop
sub
pop
push
outs
xchg
add
or
add
add
add
jnp
add
add
pop
sub
pop
push
outs
cwde
add
or
push
add
add
add
add
xor
add
add
add
add
adc
inc
add
add
jae
add
or
add
add
add
pop
sub
pop
push
outs
xchg
add
or
add
add
add
jnp
add
add
pop
sub
pop
push
outs
cwde
add
or
push
add
add
add
and
add
add
add
push
add
add
add
adc
add
aaa
add
add
add
adc
inc
add
sbb
add
add
add
pop
sub
pop
push
outs
cdq
add
or
add
add
add
jnp
add
add
pop
sub
pop
push
outs
call
jnp
add
add
and
add
add
add
push
add
add
add
and
add
add
add
push
add
add
add
and
add
add
add
push
add
add
add
and
add
add
add
push
add
add
add
add
xor
add
add
add
add
adc
inc
pop
add
push
jae
add
or
add
add
add
pop
sub
pop
push
outs
xchg
add
or
add
add
add
jnp
add
add
pop
sub
pop
push
outs
cwde
add
or
push
add
add
add
and
add
add
add
pop
sub
pushf
add
or
cmp
outs
popf
add
or
xchg
add
sub
push
sub
push
sub
pop
sub
push
sub
inc
add
aas
add
push
outs
dec
add
push
sub
(bad)
jle
add
add
sub
jb
add
add
add
push
add
or
add
or
add
or
jle
add
add
sbb
add
add
push
add
sub
xor
add
jb
add
add
add
cmps
add
or
test
add
je
add
add
jle
xor
add
jb
add
add
add
cmps
add
or
test
add
je
add
add
xchg
jae
add
push
sub
add
sbb
add
stos
add
or
test
add
sbb
add
push
add
stos
add
or
pop
sub
lods
add
or
sub
add
push
outs
lods
add
or
sbb
add
push
add
add
add
adc
add
add
inc
jle
add
add
push
sub
or
adc
sub
sbb
add
add
adc
push
cmp
add
jae
add
or
add
or
sbb
add
or
sub
push
sub
jle
add
add
add
add
add
add
adc
or
add
add
sub
add
push
sub
add
mov
add
sub
jle
add
add
mov
add
sub
jle
add
add
mov
add
sub
jle
add
add
mov
add
sub
jle
add
add
mov
add
sub
jle
add
add
mov
into
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
sub
sbb
add
add
add
adc
mov
add
sbb
(bad)
(bad)
push
or
add
outs
mov
mov
and
add
sub
and
add
or
add
sub
add
outs
mov
and
add
inc
add
add
rol
or
add
or
ret
or
jle
add
add
or
add
sub
add
adc
ret
add
or
add
add
or
arpl
add
add
sub
and
or
pop
outs
lds
add
adc
add
inc
(bad)
adc
jb
push
add
lea
add
and
add
or
add
or
or
outs
lds
add
jae
add
or
and
add
or
add
sub
add
outs
mov
or
sub
add
add
add
add
xchg
add
je
add
add
ins
add
adc
push
add
push
or
add
outs
enter
add
adc
sub
add
stos
add
or
add
sub
leave
add
or
push
add
retf
or
ror
add
add
push
add
or
push
add
retf
add
or
bound
add
add
add
add
add
jge
add
add
jnp
add
add
xchg
add
jnp
add
add
sbb
sub
jb
push
add
int3
add
or
add
add
add
add
sub
ror
add
add
push
add
or
add
add
xor
add
add
or
add
add
or
add
add
or
add
or
sub
add
adc
sub
int
add
mov
add
sbb
add
or
add
jle
add
or
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
adc
add
pusha
push
add
pop
adc
add
push
je
imul
add
push
add
and
add
add
adc
add
and
dec
inc
add
add
add
ror
add
inc
ins
outs
bound
add
add
add
add
add
push
sbb
add
add
add
add
add
add
add
jne
add
or
add
and
add
push
add
add
add
int
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
clts
add
and
ltr
add
push
add
add
jecxz
push
add
pop
jecxz
push
add
add
pop
jecxz
push
add
push
jecxz
push
add
add
add
inc
pop
jecxz
push
add
add
add
push
or
adc
or
add
push
ja
push
add
add
es
femms
add
adc
or
adc
adc
add
add
or
adc
add
or
xor
add
add
add
adc
add
lea
adc
mov
add
push
add
adc
mov
lea
push
add
in
or
add
add
push
and
push
add
push
and
adc
fmul
adc
in
or
add
push
sbb
add
imul
xor
mov
in
or
add
pop
and
or
lods
push
mov
push
xchg
add
add
or
or
adc
add
lods
or
add
inc
or
add
xor
push
jno
or
arpl
xchg
add
add
add
add
add
into
or
add
or
add
mov
adc
push
arpl
or
xlat
or
xchg
add
add
add
add
add
add
or
or
add
or
or
add
adc
add
push
add
add
or
add
or
add
or
or
add
add
adc
or
dec
add
or
or
add
ja
push
add
add
or
add
or
push
add
arpl
push
add
add
arpl
push
add
adc
push
add
add
add
add
add
add
add
add
adc
add
add
add
adc
add
adc
push
add
add
push
add
add
arpl
push
add
add
add
or
add
add
arpl
push
add
add
or
add
or
loope
jno
push
add
adc
or
add
loope
adc
arpl
les
mov
pmullw
or
or
jno
or
call
add
paddsw
adc
in
adc
push
add
or
or
add
add
add
add
add
add
add
add
add
sbb
inc
add
add
add
add
add
add
add
add
add
add
adc
adc
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
push
adc
add
add
add
add
add
adc
adc
add
add
add
adc
add
and
inc
add
sldt
inc
add
add
add
add
add
and
push
add
add
aaa
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
je
dec
add
add
add
add
xchg
add
add
lods
add
add
aad
inc
add
add
add
add
add
add
add
add
add
add
adc
sbb
pop
add
add
add
add
add
or
in
adc
add
add
imul
add
jae
xor
pop
or
movs
or
xchg
sti
add
cdq
add
add
hlt
add
add
add
push
sbb
add
add
add
add
jecxz
popf
add
add
add
add
add
aad
popf
add
add
add
add
add
stos
add
and
add
add
add
push
and
add
add
add
add
add
add
or
and
add
add
add
add
add
add
add
ret
or
and
les
add
add
add
add
loop
push
add
add
add
add
inc
or
add
add
and
inc
or
add
xor
add
add
xor
les
sbb
ret
xor
add
add
ds
add
add
xor
add
add
adc
les
sbb
aam
add
and
inc
or
leave
add
add
xor
add
add
icebp
add
add
in
add
and
inc
or
add
add
out
xor
add
add
pop
add
add
add
add
ins
add
add
add
add
jns
les
push
add
xor
add
add
test
leave
add
add
add
add
inc
or
add
add
add
add
and
inc
or
add
add
add
add
add
gs
add
add
add
add
jno
jmp
add
add
daa
add
add
add
add
xor
jmp
add
add
jge
lock
add
xor
add
add
mov
cmc
add
add
inc
or
add
inc
or
add
add
add
inc
or
add
add
push
xor
inc
or
add
add
pusha
xor
inc
or
add
xor
inc
or
mov
xor
inc
or
add
add
and
inc
or
add
add
fld
mov
xor
inc
or
add
xor
inc
or
add
inc
or
add
xor
inc
or
add
add
add
xor
inc
or
add
add
add
xor
adc
pop
or
add
add
add
add
push
sbb
add
add
add
les
or
push
add
add
add
add
adc
les
jo
add
add
adc
or
ja
add
add
adc
adc
add
add
add
adc
imul
add
add
add
or
add
add
sbb
rdtsc
add
in
add
add
push
sbb
add
add
add
adc
xchg
adc
aaa
add
add
push
or
add
add
add
or
jnp
add
add
push
sbb
add
add
or
xor
add
add
or
add
add
or
cmp
add
add
or
adc
add
add
or
inc
add
add
add
sbb
rdtsc
add
add
aaa
add
add
adc
cmp
dec
add
add
cmp
add
add
add
push
add
add
add
sbb
add
add
add
adc
cmp
add
add
add
test
xor
sub
add
add
add
add
aaa
cmp
add
add
add
mov
cmp
add
add
or
popa
add
add
add
add
push
or
data16
add
add
add
adc
cmp
add
add
add
test
xor
jge
add
add
add
add
aaa
cmp
add
add
add
mov
cmp
add
add
add
add
xor
lods
cmp
add
add
add
push
add
add
add
sbb
add
add
or
lock
add
add
sbb
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
mov
add
add
adc
add
add
es
add
add
add
add
adc
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
mov
add
or
add
add
add
add
jbe
add
add
adc
jle
add
add
adc
jbe
add
add
jbe
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
icebp
add
or
loope
retf
add
add
adc
stc
add
dec
add
add
add
add
add
add
stc
add
or
inc
or
add
add
add
adc
mov
add
add
adc
add
test
icebp
add
mov
icebp
add
adc
stc
add
or
clts
add
mov
add
rcl
add
add
add
add
push
fild
adc
push
adc
add
add
add
add
add
pusha
add
add
movups
icebp
add
or
icebp
add
or
mov
add
adc
add
add
adc
add
add
adc
add
add
adc
add
or
add
adc
add
add
or
add
add
add
add
or
add
add
adc
jno
ror
sub
jns
clc
add
push
xor
add
add
fld
dec
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
adc
add
push
add
mov
or
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
pop
or
add
push
push
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
test
loope
xchg
push
push
add
add
scas
add
add
push
adc
or
add
add
adc
mov
xor
mov
test
add
add
add
add
add
add
rol
and
mov
fadd
add
add
loope
out
adc
add
add
add
in
add
add
add
add
add
add
add
add
adc
adc
add
add
or
or
or
or
or
add
mov
and
pop
add
or
add
or
add
add
adc
adc
add
add
std
or
mov
fcom
inc
add
add
adc
add
add
add
jne
pop
add
push
add
mov
or
add
add
pusha
add
add
in
jno
add
mov
or
add
or
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
or
add
add
add
add
add
add
leave
add
adc
add
add
add
add
add
add
lds
jns
lds
add
add
add
add
add
adc
add
mov
movups
push
add
hlt
add
add
adc
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
inc
add
gs
gs
imul
add
mov
add
add
jmp
add
in
add
add
add
add
add
in
add
in
add
in
add
cli
add
in
add
inc
pop
mov
add
add
in
add
or
ret
add
add
add
add
in
add
in
add
in
add
pop
push
jecxz
fwait
add
push
jecxz
mov
add
in
add
and
add
mov
add
add
add
jmp
add
xor
and
mov
add
add
add
add
in
add
aas
push
inc
add
add
add
pop
pusha
add
add
in
add
dec
push
arpl
mov
add
gs
in
add
in
add
pop
push
mov
add
in
add
addr16
rol
add
add
in
add
je
loopne
jnp
in
add
in
add
xchg
add
jnp
in
add
in
add
xchg
push
and
jnp
in
add
in
add
sahf
push
inc
add
in
add
in
add
scas
push
dec
add
add
in
add
in
add
rol
add
add
in
add
in
add
rol
mov
add
in
add
fiadd
rol
add
add
in
add
pop
or
add
in
add
push
and
jnp
in
add
jnp
inc
add
in
add
(bad)
jnp
in
add
pushf
or
add
stos
or
add
in
add
in
add
in
add
in
add
in
add
icebp
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
repnz
add
add
xchg
add
add
in
add
repnz
pop
mov
in
add
icebp
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
icebp
add
icebp
add
icebp
add
icebp
add
icebp
add
icebp
add
in
add
icebp
add
in
add
icebp
add
in
add
icebp
add
in
add
in
add
in
add
in
add
icebp
add
in
add
in
add
icebp
add
rol
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
jno
add
and
jno
add
add
jbe
add
jo
jbe
add
mov
jno
add
out
jnp
add
jne
add
aaa
add
add
add
add
add
push
add
add
add
add
add
add
jno
add
loope
pop
add
add
outs
or
adc
adc
adc
push
cmps
add
add
dec
push
mov
add
adc
btc
add
rol
pop
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sub
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
xor
add
cmp
add
add
add
add
add
cmp
add
dec
add
add
add
cmp
add
push
add
add
add
call
add
add
add
add
sbb
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
in
or
add
add
add
or
arpl
add
add
sub
add
pusha
jg
add
add
add
add
or
or
or
or
or
or
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
jecxz
mov
sti
add
add
add
inc
add
add
add
inc
outs
ins
ins
arpl
outs
pusha
xor
push
push
push
popa
gs
bound
arpl
outs
jbe
fs
xor
dec
imul
xor
addr16
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
ins
pop
inc
outs
jb
xor
addr16
inc
outs
jb
xor
jae
je
inc
outs
jb
xor
addr16
inc
jne
je
outs
xor
jae
je
inc
jne
je
outs
xor
addr16
push
jb
addr16
jae
inc
popa
jb
add
je
push
jb
addr16
jae
inc
popa
jb
add
je
push
imul
gs
push
imul
gs
push
imul
outs
js
add
je
push
imul
outs
js
add
je
inc
outs
ins
bound
outs
js
add
je
inc
outs
ins
bound
outs
js
add
je
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
je
xor
addr16
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
addr16
inc
jne
je
outs
xor
jae
je
inc
jne
je
outs
xor
addr16
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
gs
inc
outs
js
add
je
push
gs
inc
outs
js
add
je
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
addr16
inc
jne
je
outs
xor
jae
je
inc
jne
je
outs
xor
addr16
push
imul
outs
js
add
je
push
imul
outs
js
add
je
dec
popa
bound
xor
jae
je
dec
popa
bound
xor
addr16
push
imul
outs
js
add
je
push
imul
outs
js
add
je
dec
popa
bound
xor
pop
dec
popa
bound
xor
fs
gs
jp
inc
add
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
outs
push
arpl
je
add
outs
ins
inc
jb
bound
ins
jae
outs
jb
imul
push
jae
dec
outs
gs
outs
outs
imul
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
imul
je
push
imul
jae
arpl
inc
outs
jb
xor
outs
popa
add
fs
dec
outs
popa
add
add
je
push
gs
je
inc
outs
popa
bound
add
je
inc
outs
jb
popa
je
imul
ins
gs
je
dec
jae
imul
add
inc
outs
jb
inc
imul
je
add
outs
arpl
outs
outs
imul
je
outs
ins
add
outs
add
jae
ja
jb
add
je
dec
jae
imul
jae
popa
outs
arpl
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
addr16
inc
gs
outs
jae
popa
outs
arpl
fs
jne
je
outs
jae
popa
outs
arpl
imul
add
je
popa
jae
inc
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
imul
add
je
inc
jne
outs
push
imul
add
arpl
gs
outs
js
imul
add
je
outs
je
arpl
imul
add
jne
outs
ja
dec
outs
fs
je
dec
ins
popa
add
je
dec
gs
popa
add
imul
add
fs
popa
outs
add
imul
ins
add
jae
je
bound
jae
je
push
imul
push
jne
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
arpl
jae
imul
add
je
push
je
ins
add
je
push
push
ja
push
je
ins
add
outs
addr16
jae
inc
popa
jb
je
ins
add
je
inc
outs
jb
gs
je
ins
add
je
inc
ins
popa
je
je
ins
add
outs
je
je
ins
add
addr16
outs
js
je
ins
add
je
dec
popa
ins
add
gs
popa
ins
add
arpl
outs
jb
jns
arpl
imul
popa
ins
jne
push
jns
add
je
jns
add
je
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
jne
arpl
jne
je
jb
add
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
inc
popa
jae
add
je
outs
outs
inc
popa
jae
add
jo
imul
push
gs
imul
add
je
outs
js
popa
jae
add
outs
jae
add
jo
jae
add
imul
jae
bound
je
je
add
gs
fs
je
je
arpl
je
imul
push
inc
push
push
inc
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
imul
outs
gs
je
fs
je
jb
bound
add
imul
jne
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
imul
jae
bound
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
imul
imul
je
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
addr16
jb
ins
gs
jb
inc
je
jb
bound
add
jne
addr16
imul
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
je
push
popa
ins
jne
add
push
push
push
je
je
arpl
ins
jne
add
je
inc
jbe
outs
je
push
popa
ins
jne
add
je
bound
arpl
ins
jne
add
jbe
add
ins
outs
jbe
add
je
outs
ins
fs
add
je
push
imul
pop
inc
jne
outs
push
imul
pop
inc
ins
imul
add
jne
jo
jb
dec
outs
imul
add
jae
gs
cs
push
imul
je
ins
cs
jne
je
ins
gs
gs
imul
addr16
push
jae
inc
outs
ins
jo
je
bound
gs
push
outs
fs
outs
add
je
push
jae
inc
outs
ins
jo
je
bound
gs
push
outs
fs
outs
add
je
gs
jne
arpl
je
imul
je
imul
jo
jae
outs
add
jae
gs
cs
jb
ja
outs
add
je
push
gs
dec
outs
addr16
add
outs
arpl
je
add
je
inc
ins
popa
arpl
push
imul
imul
pop
push
imul
outs
jbe
pop
push
imul
je
outs
xor
ins
imul
je
jb
inc
outs
js
pop
inc
ins
imul
je
outs
xor
ins
imul
gs
xor
ins
imul
je
outs
xor
ins
imul
pop
inc
ins
imul
outs
jbe
pop
inc
ins
imul
ja
jb
inc
jb
fs
je
popa
ins
add
outs
imul
outs
ins
jo
jb
dec
bound
arpl
jne
ins
add
je
dec
outs
je
jb
popa
ins
add
gs
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
dec
bound
arpl
fs
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
jae
gs
cs
gs
dec
popa
imul
ins
popa
imul
imul
je
outs
ins
add
je
outs
outs
je
outs
ins
add
push
arpl
outs
ja
outs
outs
je
outs
ins
add
je
inc
outs
popa
bound
jae
add
je
dec
je
ins
add
jae
gs
add
je
inc
jb
ins
add
je
dec
popa
imul
dec
outs
inc
jb
popa
je
dec
popa
imul
jb
jae
jne
arpl
popa
outs
add
outs
outs
ins
gs
outs
add
je
dec
ins
popa
addr16
ins
imul
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
imul
dec
arpl
add
je
pop
aaa
xor
pop
inc
outs
ins
fs
arpl
dec
arpl
add
je
inc
jo
ins
imul
add
inc
jo
ins
imul
add
je
dec
outs
arpl
imul
je
ins
cs
outs
outs
imul
je
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
je
jb
arpl
outs
add
jae
gs
cs
gs
arpl
outs
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
imul
jae
outs
ins
ins
arpl
outs
add
push
arpl
ins
ins
arpl
outs
add
je
arpl
outs
je
outs
ins
ins
arpl
outs
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
addr16
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
addr16
outs
jbe
arpl
imul
jo
imul
popa
ins
imul
imul
jo
imul
jo
js
gs
imul
pop
dec
outs
outs
gs
js
gs
imul
jne
outs
je
js
gs
imul
je
outs
add
outs
add
fs
push
push
ja
add
je
push
outs
add
ins
je
jb
dec
outs
outs
add
je
popa
jo
jae
je
push
popa
bound
outs
jo
push
jb
addr16
jae
inc
popa
jb
jae
je
push
popa
jae
ja
jb
inc
push
pop
inc
jo
dec
bound
arpl
outs
jbe
fs
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
ins
pop
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
ins
pop
dec
jns
outs
jb
jae
bound
arpl
outs
jbe
fs
jae
outs
fs
addr16
push
gs
jne
arpl
popa
outs
popa
addr16
inc
outs
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
push
outs
dec
outs
je
addr16
popa
fs
popa
outs
fs
gs
push
push
ja
inc
jbe
outs
je
popa
outs
fs
gs
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
push
imul
outs
outs
je
imul
je
push
jae
jb
inc
outs
ins
jo
jb
dec
bound
arpl
gs
je
jb
inc
outs
je
jb
addr16
inc
outs
ins
jo
je
jb
dec
jns
outs
ins
jo
je
jb
push
gs
gs
jae
je
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
inc
popa
arpl
outs
ins
outs
jb
jae
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
inc
ins
gs
jb
jb
push
arpl
jb
jb
push
gs
jb
push
arpl
jb
jb
jae
je
push
jae
push
popa
imul
add
je
outs
jne
gs
je
jb
inc
arpl
popa
je
jb
arpl
add
arpl
outs
jb
dec
outs
outs
imul
je
ins
cs
imul
imul
jb
jae
data16
push
imul
jae
arpl
inc
gs
arpl
add
je
push
bound
jb
imul
push
bound
jb
imul
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
gs
cs
gs
jne
arpl
add
je
outs
ins
fs
jns
push
gs
jne
arpl
add
je
outs
ins
fs
outs
jb
xor
jb
jae
jne
arpl
add
je
outs
ins
fs
gs
jne
arpl
cs
jae
jne
arpl
add
jne
imul
jae
jae
je
inc
outs
popa
bound
imul
jns
gs
addr16
push
gs
imul
je
push
popa
jbe
push
gs
imul
push
gs
imul
outs
je
jb
jae
jae
je
inc
jne
outs
inc
ins
ins
imul
gs
inc
jb
fs
je
popa
ins
jae
push
gs
outs
arpl
jno
popa
ins
jae
push
je
ins
jae
addr16
inc
outs
outs
je
outs
ins
jae
addr16
dec
je
ins
jae
push
jns
je
ins
cs
imul
inc
outs
jb
jae
addr16
inc
outs
jb
jae
dec
jns
outs
jb
jae
jae
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
outs
outs
jbe
jb
imul
jae
gs
cs
outs
ins
ins
arpl
outs
jae
push
jne
je
ins
gs
gs
jo
jb
add
gs
je
jb
add
imul
jae
inc
jb
ins
inc
fs
jae
add
arpl
imul
gs
inc
je
popa
arpl
outs
je
add
ins
jo
outs
outs
je
add
arpl
add
outs
arpl
add
fs
bound
arpl
outs
fs
bound
arpl
outs
outs
arpl
outs
popa
je
dec
bound
arpl
fs
popa
outs
fs
gs
outs
arpl
bound
arpl
gs
bound
arpl
gs
push
jne
push
arpl
jns
jb
push
arpl
jns
je
ins
cs
gs
inc
outs
fs
outs
imul
dec
outs
imul
imul
add
je
push
popa
jbe
dec
jns
gs
imul
js
je
jae
je
push
popa
jbe
dec
jns
gs
imul
js
je
addr16
inc
gs
jne
je
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
dec
jae
inc
outs
js
gs
ins
je
push
ins
je
inc
ins
imul
je
arpl
outs
je
inc
outs
outs
je
outs
je
ins
imul
add
imul
inc
outs
ins
jo
outs
outs
je
addr16
push
jb
outs
jae
popa
jb
outs
je
addr16
inc
jne
jb
outs
je
push
outs
imul
pop
inc
outs
outs
je
jae
je
push
outs
jb
add
je
dec
outs
jae
add
jb
fs
je
popa
ins
jae
jns
outs
jae
add
je
push
outs
jo
outs
jae
add
jae
outs
fs
popa
jns
jne
add
jae
ins
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
jbe
dec
gs
add
je
push
gs
add
je
push
gs
add
je
inc
jb
outs
pop
gs
ins
outs
ja
addr16
ja
jb
fs
outs
pop
je
outs
imul
arpl
pop
bound
bound
imul
jb
cmp
pop
fs
js
jb
add
je
push
popa
bound
fs
push
imul
outs
js
jae
je
dec
popa
js
ins
imul
dec
jae
inc
outs
js
inc
outs
ins
bound
outs
js
push
gs
inc
outs
js
ja
je
outs
ins
fs
jns
jae
je
inc
outs
fs
inc
outs
outs
je
imul
addr16
inc
jae
gs
bound
dec
jns
gs
imul
jo
jb
jns
add
add
push
push
add
push
add
inc
add
and
push
add
push
add
add
push
add
dec
add
and
push
add
pop
add
add
inc
add
dec
add
and
inc
add
push
add
add
add
add
add
dec
add
push
add
add
add
push
add
push
add
inc
add
and
push
add
push
add
add
push
add
dec
add
add
inc
add
je
add
and
pop
add
jne
jb
and
push
add
push
add
add
jae
add
outs
add
ins
add
add
jb
outs
add
and
push
add
add
outs
add
ins
add
add
inc
add
je
add
and
pop
add
jne
jb
and
push
add
push
add
add
popa
add
jae
ja
outs
add
add
sbb
jb
outs
add
and
push
add
jae
jae
ja
outs
add
add
xor
ins
add
je
popa
add
add
imul
xor
add
add
popa
add
ins
add
add
outs
add
add
ins
add
jp
popa
add
xor
xor
xor
inc
add
outs
add
add
imul
arpl
outs
add
add
dec
add
jp
popa
add
and
dec
add
ins
add
arpl
add
dec
add
imul
jp
popa
add
add
outs
add
add
and
add
add
imul
popa
add
add
popa
add
add
outs
add
add
sbb
jne
arpl
imul
add
xor
xor
xor
xor
xor
xor
add
jae
ins
add
add
add
add
add
add
outs
add
add
imul
jb
ins
add
ins
add
arpl
xor
xor
xor
xor
inc
add
popa
add
outs
add
add
outs
add
add
and
and
push
add
data16
popa
add
add
popa
add
add
outs
add
add
adc
ins
add
imul
je
outs
add
add
or
jb
outs
add
and
add
popa
add
and
jae
add
je
add
push
push
add
outs
add
add
add
add
ins
add
imul
inc
add
imul
add
add
add
push
add
and
push
add
jb
je
and
dec
add
ins
add
add
add
sub
imul
outs
add
outs
add
je
and
push
add
outs
add
and
push
add
jb
imul
dec
add
bound
add
add
adc
push
add
push
add
inc
add
inc
add
add
or
bound
add
add
adc
inc
add
push
add
dec
add
inc
add
add
adc
add
je
inc
add
js
xor
add
push
add
js
je
inc
add
js
xor
add
bound
add
add
or
dec
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
adc
outs
add
bound
outs
add
outs
add
xor
add
inc
add
je
je
outs
add
xor
add
inc
add
dec
add
push
add
push
add
add
inc
add
je
je
outs
add
xor
add
inc
add
dec
add
sbb
jb
outs
add
jb
add
jae
inc
add
jb
xor
add
bound
add
add
add
add
pop
push
add
arpl
je
jne
jb
add
outs
add
xor
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
inc
add
je
je
outs
add
xor
add
push
add
jae
je
add
bound
add
add
and
popa
add
add
add
jns
cmp
and
dec
add
inc
add
ins
add
jb
add
push
add
add
arpl
outs
add
add
inc
add
jb
ins
add
add
sub
push
add
add
outs
add
add
add
add
add
popa
add
add
and
xor
add
add
and
je
pop
add
outs
add
add
add
add
outs
add
jb
arpl
add
add
aaa
add
add
js
sub
add
add
arpl
outs
add
dec
add
outs
add
add
add
jb
ins
add
add
data16
je
popa
add
imul
add
imul
outs
add
bound
jns
pop
add
ins
add
arpl
imul
add
outs
add
jo
cmp
xor
sub
add
add
popa
add
ja
add
push
add
outs
add
outs
add
ins
add
pop
add
add
jne
jb
jae
imul
inc
add
jb
ins
add
jb
add
je
add
xor
outs
add
outs
add
ins
add
pop
add
add
dec
add
outs
add
jb
inc
add
arpl
add
je
imul
add
add
outs
add
add
je
jns
and
arpl
popa
add
and
outs
add
ins
add
and
bound
add
add
add
add
add
add
outs
add
add
outs
add
add
add
xchg
dec
enter
dec
(bad)
(bad)
dec
mov
call
add
add
or
and
add
adc
add
push
add
add
add
push
push
and
add
and
push
push
push
add
sbb
and
add
sbb
sbb
add
add
add
add
sbb
add
adc
add
add
sbb
and
add
add
adc
or
sbb
adc
push
push
push
push
push
push
or
adc
add
add
push
add
sbb
sbb
add
add
sbb
adc
add
add
and
push
pop
add
push
push
push
push
adc
or
push
push
push
push
push
or
adc
push
pop
or
adc
jge
adc
adc
push
push
adc
adc
adc
adc
push
adc
push
add
add
add
sbb
adc
adc
add
sub
sub
and
add
jns
and
adc
or
push
push
add
add
cmp
sbb
in
adc
add
sub
and
add
dec
or
add
adc
and
add
or
add
or
add
or
and
add
sbb
sbb
and
add
imul
add
xor
xor
cmp
cmp
add
and
add
or
add
adc
add
adc
add
adc
sbb
push
and
add
sbb
pop
add
sbb
adc
pop
add
sbb
adc
add
add
add
add
push
push
and
add
sub
and
add
inc
add
sbb
and
adc
add
adc
sbb
adc
sbb
or
add
cmp
add
add
sbb
add
add
add
and
add
add
add
sbb
adc
or
adc
sbb
adc
and
adc
sub
pop
add
add
sub
push
add
add
sbb
add
push
push
sbb
add
add
add
add
add
cmp
push
adc
add
or
adc
add
add
add
adc
add
push
adc
add
add
add
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
jae
ins
add
add
add
add
add
add
outs
add
add
add
add
add
add
push
sbb
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
push
adc
add
push
adc
push
add
push
adc
sbb
push
adc
or
push
adc
sbb
push
adc
and
push
adc
sub
adc
or
and
add
jno
and
push
adc
push
push
push
push
push
push
or
add
add
push
add
push
add
add
pop
add
pop
add
add
pop
add
pop
add
add
popa
add
popa
add
add
gs
gs
add
imul
adc
and
add
ins
add
push
add
rol
push
add
add
add
add
adc
add
jno
add
adc
add
adc
add
adc
fld
add
and
add
adc
pop
adc
add
add
add
xor
add
adc
add
in
add
add
or
or
add
push
add
add
pop
add
add
pop
add
add
popa
add
add
gs
add
imul
or
adc
adc
adc
adc
or
adc
or
adc
fld
add
and
or
adc
add
add
or
add
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
add
add
add
sbb
add
push
outs
je
inc
outs
ins
and
outs
gs
je
jb
jbe
xor
add
add
or
popa
jb
jae
push
push
inc
add
pop
add
adc
je
inc
outs
ins
and
outs
gs
je
jb
add
add
push
dec
popa
jp
jb
jae
push
push
inc
and
jo
jb
addr16
and
xor
xor
add
add
add
add
and
cmp
xor
xor
sub
sub
sub
xor
fs
add
or
add
xor
xor
xor
xor
add
add
cs
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
adc
jb
ins
gs
jb
inc
imul
popa
ins
adc
dec
inc
push
and
popa
ins
gs
jb
and
xor
add
add
add
add
add
adc
add
push
imul
outs
js
add
or
add
dec
popa
bound
xor
add
add
push
dec
popa
bound
xor
add
gs
inc
outs
js
add
or
gs
inc
outs
js
add
or
add
dec
popa
bound
xor
add
add
or
ins
bound
outs
js
add
or
add
inc
jne
je
outs
xor
add
add
inc
jne
je
outs
xor
add
add
or
jb
addr16
jae
inc
popa
jb
add
or
add
push
imul
or
add
dec
popa
bound
xor
add
add
or
arpl
gs
outs
js
add
adc
add
push
imul
outs
js
add
adc
add
push
imul
outs
js
add
or
add
inc
jne
je
outs
xor
add
add
push
dec
popa
bound
xor
add
dec
jns
gs
jo
popa
je
or
xor
xor
xor
xor
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
push
jns
je
ins
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
add
or
cs
gs
imul
add
or
cs
outs
ins
jo
je
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
jns
inc
outs
jb
jae
add
add
push
dec
jns
push
bound
jb
imul
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
es
add
add
add
add
adc
add
add
and
push
add
add
and
add
add
add
add
add
xor
add
add
add
adc
add
add
and
sub
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
dec
cmps
iret
xor
ret
sub
test
mov
push
fwait
mov
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
dec
(bad)
mov
inc
movs
rcl
dec
jbe
call
cmp
cwde
mov
jmp
xchg
pop
ja
dec
mov
inc
(bad)
mov
dec
test
add
(bad)
inc
(bad)
(bad)
inc
inc
lea
mov
xor
xchg
lods
(bad)
aas
ja
(bad)
cmp
inc
cmp
jne
jmp
test
imul
stos
rol
add
add
(bad)
(bad)
inc
xor
int3
xchg
push
bound
jmp
sub
adc
jne
jmp
xchg
jmp
fs
push
test
call
xchg
(bad)
cmp
sbb
dec
mov
das
sbb
cmps
stc
and
cwde
jmp
jg
call
dec
jnp
adc
call
pop
xchg
call
outs
test
call
jl
call
imul
pop
sahf
mov
cmp
movs
sti
inc
xchg
shl
pop
mov
and
test
call
push
cmp
mov
call
arpl
call
jo
call
jo
call
jo
inc
(bad)
(bad)
cmp
int3
xchg
pop
mov
call
pusha
mov
push
jae
jmp
jp
jmp
xchg
aad
sbb
call
pop
lahf
call
jge
call
cmps
call
push
call
mov
fldenv
mov
call
pop
mov
sbb
mov
dec
(bad)
jmp
mov
jmp
cmp
push
push
call
pop
xchg
call
xchg
call
arpl
jmp
test
out
das
jp
call
pop
mov
and
jmp
mov
inc
iret
push
ret
jmp
jl
jmp
jle
call
pop
cwde
call
pop
xchg
dec
push
cmp
jb
jmp
scas
idiv
cmps
ror
das
mov
sub
mov
inc
leave
call
retf
fwait
sar
inc
mov
call
arpl
call
jae
jmp
jp
xlat
dec
shr
inc
cwde
mov
push
jp
call
(bad)
(bad)
aas
xchg
push
out
pusha
ret
sub
cmps
call
ja
call
pop
(bad)
jmp
push
(bad)
cmp
push
xchg
retf
shl
sub
sar
arpl
movs
inc
cmps
push
leave
inc
shl
inc
mov
(bad)
call
jne
call
fwait
ret
sub
(bad)
(bad)
inc
jbe
lock
int3
call
leave
jmp
test
push
mov
call
ret
jge
call
outs
pushf
inc
mov
inc
xchg
xchg
or
adc
(bad)
(bad)
inc
addr16
test
jmp
rcr
inc
cdq
mov
xor
movs
push
test
inc
mov
pop
mov
lods
inc
scas
ror
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
push
in
xchg
loopne
mov
rcr
jmp
retf
jmp
enter
mov
jmp
sar
inc
mov
jmp
or
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
loopne
sub
(bad)
in
or
fcomip
push
leave
out
lea
hlt
sub
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
add
add
add
add
add
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
daa
dec
outs
add
dec
xchg
mov
cdq
cmp
mov
stc
cmp
mov
leave
dec
sahf
les
push
xchg
mov
es
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
adc
mov
aad
cmp
(bad)
cmp
mov
dec
cmp
dec
data16
inc
addr16
inc
jo
(bad)
cmp
xchg
jmp
push
xchg
mov
and
dec
add
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
dec
xchg
lods
xlat
in
ds
mov
call
cmp
push
outs
call
xchg
bound
xchg
push
je
call
je
push
jno
call
call
cmp
inc
xchg
mov
push
mov
cmps
adc
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
dec
cdq
shl
stos
fidivr
inc
and
dec
jns
dec
jp
pop
mov
push
(bad)
jle
ret
inc
mov
jmp
call
test
call
jle
dec
ins
js
cmp
std
dec
popf
ret
(bad)
push
lea
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
dec
xchg
lds
cmp
mov
xor
push
push
push
jno
dec
call
ret
xchg
dec
xchg
dec
(bad)
call
mov
pop
adc
pop
adc
test
xchg
call
xchg
pop
jo
(bad)
cmp
mov
inc
nop
mov
cmp
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
dec
call
sbb
movs
call
arpl
xor
movs
push
(bad)
scas
push
outs
mov
das
gs
sub
jmp
pop
je
sub
jmp
ins
(bad)
cmp
dec
cmp
test
xchg
pushf
push
lods
jmp
mov
pop
ja
(bad)
aas
outs
mov
cmp
mov
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
inc
xchg
mov
mov
push
pop
cmp
ins
xchg
push
xchg
sar
popf
ret
jmp
mov
call
pop
jns
pop
pop
jge
pop
bound
jmp
xchg
(bad)
jmp
mov
cwde
call
bound
and
jmp
pop
ins
inc
cmp
push
mov
jmp
jmp
(bad)
(bad)
cmp
(bad)
cmp
mov
adc
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
dec
stos
fidivr
cmp
sbb
jmp
jle
jmp
xchg
(bad)
call
xchg
call
push
jns
adc
call
mov
adc
call
jno
call
push
call
xchg
jmp
lahf
sar
sbb
outs
mov
and
and
push
pop
jbe
dec
xchg
jp
(bad)
jmp
lods
call
mov
sub
xchg
ret
aaa
dec
add
(bad)
inc
add
add
push
stos
aad
xor
call
push
jp
and
xchg
mov
call
push
jnp
adc
adc
call
pop
mov
adc
call
mov
call
mov
call
bound
call
outs
cdq
call
jo
jmp
je
jmp
ins
test
and
lea
jne
(bad)
call
xchg
inc
xchg
jmp
xor
add
js
add
out
and
js
push
imul
mov
call
push
jle
adc
dec
dec
jle
cmovg
call
popa
movs
call
push
nop
call
push
mov
sbb
(bad)
call
bound
jmp
(bad)
leave
call
outs
pushf
call
xchg
call
jae
call
jo
jmp
xchg
scas
call
into
call
test
push
xchg
enter
jb
pop
mov
adc
adc
push
test
xor
jmp
pop
(bad)
call
push
js
cmovge
cmovle
call
outs
mov
(bad)
mov
or
jno
adc
call
mov
call
jl
call
pop
xchg
call
push
test
adc
xchg
call
push
call
ins
xchg
call
jnp
call
js
(bad)
cmp
int
cmp
cmps
(bad)
cmp
retf
jmp
popa
mov
aam
adc
jmp
fs
jmp
je
call
scas
call
cmp
push
cmp
push
xchg
push
jnp
call
xchg
call
pop
sahf
call
dec
test
adc
sbb
mov
push
dec
xchg
cmovg
call
push
(bad)
call
jp
call
jae
call
pushf
call
bound
dec
out
xor
mov
dec
leave
push
adc
mov
mov
adc
jmp
fs
(bad)
cmp
(bad)
call
push
jge
adc
call
pop
mov
and
mov
call
outs
scas
call
jg
jmp
xchg
sar
push
mov
call
lods
dec
jnp
call
or
adc
call
push
mov
pop
jns
call
ins
mov
call
imul
mov
jmp
xchg
sar
xchg
(bad)
dec
fcomp
cmp
sahf
call
pop
xchg
jmp
jne
jmp
cwd
call
fs
call
cwde
call
xchg
inc
fdivrp
cmp
call
outs
scas
call
jae
dec
push
xchg
call
mov
sbb
fcos
sbb
call
imul
call
arpl
call
mov
jmp
mov
inc
fcmove
mov
push
jmp
imul
adc
call
push
jle
pop
jae
call
jno
call
outs
mov
jmp
ins
cdq
jmp
jmp
xor
in
sbb
pop
xchg
jmp
xchg
(bad)
cs
dec
push
xchg
dec
dec
cmp
jno
call
jnp
call
pop
mov
call
pop
call
arpl
call
jo
jmp
xor
sbb
mov
jmp
xor
call
popa
xchg
inc
mov
push
popa
xchg
call
push
jp
and
call
je
call
jae
push
xchg
(bad)
jmp
retf
lock
imul
lods
jecxz
xor
dec
dec
xchg
sbb
mov
dec
push
xchg
call
pop
xchg
call
pop
xchg
call
xchg
dec
push
test
adc
sub
(bad)
cmp
in
out
jae
jmp
ins
xchg
(bad)
aas
xor
sbb
jmp
jle
call
jl
push
xchg
(bad)
(bad)
cmp
mov
shl
sub
call
popfw
inc
out
dec
cmps
fdivrp
adc
push
mov
sub
sar
adc
dec
push
xchg
call
pop
xchg
call
pop
xchg
call
pop
nop
dec
push
jg
adc
adc
popf
call
je
call
cwde
push
nop
(bad)
div
out
fldcw
movs
call
jae
push
mov
call
pop
cmp
test
call
pushf
retf
(bad)
cmp
jmp
(bad)
sub
and
push
mov
in
pop
jb
call
push
mov
dec
scas
loopne
dec
cmps
(bad)
adc
call
pop
pushf
call
pop
cwde
call
pop
xchg
call
push
mov
push
dec
jle
adc
call
jnp
call
bound
out
int3
hlt
mov
test
inc
fcos
sbb
call
pusha
mov
das
and
and
into
inc
push
(bad)
idiv
sub
jae
push
lock
in
pop
jae
call
pop
(bad)
push
out
pop
mov
call
push
mov
call
pop
xchg
call
pop
mov
cmovge
adc
call
imul
adc
xchg
retf
lds
hlt
xchg
call
cmp
mov
pop
gs
push
jbe
jmp
mov
call
sar
cmp
dec
mov
jmp
cmps
jmp
ja
dec
(bad)
and
nop
jmp
(bad)
call
retf
ins
cmps
call
arpl
call
push
mov
push
dec
jp
daa
push
test
sub
call
mov
lock
inc
mov
movs
call
sar
test
jmp
bound
push
xchg
mov
outs
mov
(bad)
jmp
imul
sbb
xchg
push
(bad)
(bad)
js
clc
jmp
(bad)
popa
xchg
call
pop
xchg
call
pop
(bad)
call
push
mov
adc
test
adc
movs
call
fwait
dec
dec
jle
adc
jmp
ins
call
cbw
jmp
cmp
(bad)
out
adc
icebp
(bad)
(bad)
jmp
sar
arpl
stos
call
test
push
(bad)
push
cwde
mov
push
(bad)
cli
call
stc
call
cli
jmp
(bad)
call
idiv
inc
shl
xor
in
push
cmps
fdivrp
pop
jae
jmp
xchg
int
sbb
adc
push
cmp
pop
nop
call
(bad)
sahf
(bad)
call
addr16
cmps
rcr
sub
sar
test
(bad)
inc
call
push
scas
(bad)
jmp
sub
dec
xchg
test
push
test
dec
fwait
mov
add
jmp
std
push
in
call
(bad)
call
test
pusha
scas
aad
xchg
call
push
test
adc
mov
push
xchg
mov
(bad)
aas
jp
jmp
xor
add
(bad)
inc
addr16
repz
dec
lahf
sar
xchg
mov
bound
test
jmp
mov
push
call
mov
(bad)
bound
call
mov
int
ins
mov
jmp
int3
push
sub
xor
jge
call
xchg
call
popfw
(bad)
cmp
call
dec
stos
call
pop
mov
inc
mov
jmp
mov
sub
add
add
add
add
jns
clc
jno
retf
dec
sahf
mov
jmp
loopne
aas
cdq
mov
jmp
xchg
inc
call
stos
call
mov
(bad)
inc
mov
jmp
(bad)
push
(bad)
jmp
loope
sub
sar
jle
call
ins
sahf
jmp
cdq
sar
mov
mov
dec
mov
in
jge
daa
xor
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
push
ret
hlt
or
ret
dec
fwait
mov
outs
mov
mov
push
mov
jmp
xchg
inc
fwait
call
stos
call
call
mov
inc
mov
aas
cwde
mov
sub
outs
cwde
call
ja
jmp
jb
call
ret
inc
sar
imul
push
mov
ud0
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
outs
shl
sbb
rcl
push
scas
(bad)
(bad)
js
out
push
popf
mov
push
mov
push
and
jae
jmp
(bad)
jmp
xchg
jmp
jnp
jmp
jg
jmp
jge
jmp
jae
inc
jmp
ret
call
mov
call
mov
lahf
fsubr
(bad)
loopne
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jns
cli
sub
fcos
addr16
push
call
mov
inc
scas
jmp
jg
jmp
stos
push
pushf
mov
(bad)
cmp
sahf
(bad)
jmp
xchg
mov
call
mov
push
(bad)
push
fwait
mov
jmp
sar
fsubr
fld
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
jo
repnz
(bad)
sti
jns
retf
jmp
inc
jecxz
(bad)
jg
(bad)
jmp
inc
mov
dec
mov
cmps
dec
jmp
(bad)
dec
jecxz
jl
loop
cmp
mov
popa
mov
hlt
mov
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pop
(bad)
sti
or
call
fdivrp
jge
iret
push
int3
push
retf
jmp
into
push
leave
jmp
int3
(bad)
jae
(bad)
jmp
ret
jmp
sar
push
lods
enter
sar
mov
call
out
jmp
push
mov
or
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jg
stc
and
out
fistp
rcr
inc
ror
jl
iret
push
enter
iret
jmp
sar
pop
rcr
pop
enter
leave
repnz
test
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
and
add
not
jg
clc
inc
xchg
in
xchg
loop
xlat
xchg
cmc
jmp
(bad)
jmp
(bad)
xlat
jb
idiv
pusha
int
inc
arpl
icebp
adc
xchg
les
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
ss
cwde
adc
mov
dec
cwde
les
mov
mov
xchg
ret
mov
out
inc
mov
test
ret
cdq
sar
lahf
ret
xchg
mov
ss
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
outs
cdq
adc
push
cmps
aad
cmp
rcr
cs
sti
sub
movs
call
gs
jmp
imul
jmp
imul
(bad)
cmp
sar
movs
retf
fstp
int
pop
xchg
mov
cmp
sbb
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
and
inc
add
mov
or
in
xor
mov
dec
xchg
call
(bad)
jmp
jmp
cmp
push
push
call
imul
pop
jb
call
call
jg
inc
imul
jo
push
xchg
mov
repz
lahf
ror
push
jb
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
cs
or
dec
mov
(bad)
das
nop
mov
call
xchg
call
call
js
dec
imul
push
jo
call
test
pop
jp
call
jnp
push
jo
call
jno
push
ins
call
jns
pop
js
call
jge
push
jno
dec
mov
xor
cmp
mov
fstp
mov
adc
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
sahf
add
lds
push
mov
sar
loop
xor
mov
inc
je
inc
data16
dec
jb
call
cmp
push
ja
mov
push
cmps
push
push
jmp
xchg
jmp
xchg
pop
jae
call
cmp
outs
jne
push
jb
call
call
jbe
dec
jno
push
xchg
mov
int
xchg
mov
daa
push
jns
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
pushf
les
lods
fcmovne
xor
mov
dec
xchg
call
call
cdq
dec
jge
dec
outs
js
pop
xchg
jmp
push
(bad)
jle
retf
inc
ror
(bad)
(bad)
xor
jmp
xchg
jmp
xchg
push
pushf
call
jnp
fs
jmp
xchg
call
outs
dec
jno
inc
je
push
sub
push
xchg
mov
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
cmp
dec
fwait
enter
aad
and
ret
jle
push
test
das
popa
jb
xor
push
push
(bad)
aas
jne
jmp
(bad)
jmp
call
mov
call
mov
dec
dec
mov
dec
jb
call
mov
pop
adc
call
mov
jne
cmps
call
mov
mov
pop
jnp
call
jge
push
ins
je
dec
ins
jl
sub
call
xchg
mov
or
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
dec
fwait
(bad)
pop
ds
shl
push
jns
jmp
jno
push
jnp
(bad)
cmp
cdq
(bad)
aas
mov
push
lods
retf
(bad)
cmp
cdq
inc
sahf
inc
fwait
inc
inc
test
inc
outs
cmp
outs
jg
inc
push
dec
cmp
jb
call
mov
pop
xchg
call
xchg
jmp
dec
test
push
jmp
xchg
call
jl
pop
jbe
dec
jnp
sub
xchg
(bad)
jmp
xchg
mov
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
add
enter
shl
sbb
sbb
xchg
call
pop
jge
sbb
jne
jmp
sbb
das
jg
jmp
and
jmp
pop
jne
and
call
push
jo
and
jmp
outs
jmp
pop
outs
jmp
pop
outs
push
push
addr16
cmp
jno
pop
test
call
xchg
call
(bad)
jmp
sahf
(bad)
jg
mov
call
mov
pop
jnp
call
jmp
imul
dec
lea
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
push
mov
xlat
int
jns
call
push
call
pop
cmp
aaa
pushf
ret
xchg
mov
xor
mov
and
data16
sbb
jae
sbb
sbb
call
arpl
call
ins
nop
jmp
fwait
sar
xor
mov
sbb
js
sbb
jns
and
jmp
push
push
sub
(bad)
aas
push
nop
jmp
cmps
jmp
mov
inc
scas
mov
jmp
dec
jmp
ins
popf
inc
(bad)
xlat
push
nop
mov
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
xor
fdivr
adc
push
jnp
sbb
jmp
jns
jmp
jp
jmp
mov
sar
pop
lea
call
push
jns
adc
call
fs
adc
popa
mov
push
xchg
jmp
mov
xor
mov
jmp
outs
xchg
and
call
gs
push
push
ins
jmp
ins
(bad)
cmp
call
test
push
inc
cmps
mov
ins
xchg
movs
call
mov
dec
jae
jmp
jo
inc
int
jo
adc
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
pop
stos
rcr
mov
stos
call
push
jge
adc
call
jne
push
call
sbb
popa
mov
adc
call
dec
jbe
adc
call
pop
mov
adc
call
mov
adc
call
lahf
call
jns
call
cmp
gs
jmp
jo
push
in
push
xor
and
jmp
outs
xchg
and
call
pop
jbe
and
(bad)
cmp
push
mov
push
(bad)
js
(bad)
mov
cmps
call
mov
cmp
jmp
jge
call
mov
add
(bad)
inc
add
add
add
add
add
add
push
cmps
shr
inc
mov
rcr
cmp
dec
outs
call
pop
xchg
and
xchg
mov
and
(bad)
call
push
jge
adc
call
dec
jne
adc
call
pop
xchg
adc
call
push
xchg
adc
call
imul
push
mov
jmp
xchg
sar
adc
mov
push
ins
xchg
jmp
(bad)
call
xchg
push
jo
jmp
jne
jmp
je
jmp
jno
call
push
outs
jmp
pop
jne
dec
(bad)
cmps
call
mov
(bad)
jge
retf
xchg
stos
dec
test
dec
je
jmp
ins
popf
(bad)
cmp
mov
add
add
add
add
(bad)
(bad)
inc
dec
mov
jns
mov
sti
adc
call
push
jg
adc
cmp
jle
push
jge
push
xchg
mov
call
pop
mov
adc
jp
adc
dec
dec
jg
adc
call
push
mov
adc
dec
push
test
adc
call
cmps
dec
dec
jnp
pop
jae
call
xchg
fdivr
and
test
adc
call
outs
xchg
jmp
ja
call
xchg
sbb
je
jmp
jbe
jmp
outs
xchg
sbb
push
dec
scas
dec
mov
outs
mov
aad
push
adc
inc
jge
jmp
cmp
(bad)
inc
add
add
(bad)
(bad)
inc
cmp
jmp
push
test
or
jno
call
mov
dec
stos
(bad)
jmp
xchg
int
adc
call
dec
jbe
adc
dec
dec
jl
cmovge
cmovge
cmovge
call
gs
call
cmps
dec
inc
je
sbb
call
mov
call
je
call
pop
mov
adc
call
ins
call
jns
call
push
xchg
call
ja
jmp
ja
call
data16
mov
mov
inc
call
test
inc
int
cmp
sbb
add
add
add
add
(bad)
push
inc
mov
cmps
dec
dec
ja
adc
jmp
ins
xchg
push
ja
jmp
cmp
adc
call
push
jbe
cmovle
cmovle
cmovg
dec
dec
cmp
adc
dec
inc
jb
or
jp
call
mov
call
mov
call
push
call
push
mov
adc
call
pop
xchg
sbb
call
xchg
fcos
sbb
call
arpl
jmp
jge
jmp
jl
call
mov
and
push
test
inc
mov
inc
lods
push
xchg
inc
xchg
mov
cs
int
push
call
cmp
in
stos
xor
pop
(bad)
dec
dec
je
adc
push
inc
mov
dec
push
jg
sbb
call
push
jl
cmovge
dec
cmp
dec
jg
adc
call
jle
call
jae
dec
inc
jbe
or
jae
or
jnp
call
xchg
fdivrp
sbb
dec
pop
pushf
dec
dec
cmp
adc
call
push
xchg
adc
call
or
call
addr16
sbb
jns
call
popa
test
and
push
mov
call
lock
cmp
cdq
(bad)
cmp
jmp
xchg
(bad)
call
fdivr
pop
scas
(bad)
sub
repz
xchg
mov
call
pop
xchg
sub
jmp
jl
call
imul
push
pop
jl
adc
call
push
test
adc
adc
mov
and
dec
inc
jl
adc
call
dec
jl
or
jge
call
(bad)
fdivr
push
jb
dec
push
cdq
dec
dec
jp
adc
call
mov
adc
call
pop
(bad)
call
xchg
call
gs
call
jbe
call
mov
call
lea
dec
(bad)
in
push
jns
(bad)
cmp
(bad)
inc
(bad)
pop
popf
mov
push
jp
icebp
cmc
cs
call
push
jg
adc
jo
(bad)
cmp
mov
call
push
ja
adc
call
pop
(bad)
call
pop
mov
adc
jmp
xchg
iret
jmp
test
pop
ins
mov
sbb
sbb
int
xor
test
sbb
call
xchg
fdivr
push
jno
dec
inc
jg
pop
mov
call
js
call
fs
call
push
mov
pop
jge
call
je
call
ins
call
jns
call
push
ret
xchg
jmp
lea
cmp
mov
sti
push
lods
rcr
retf
jmp
mov
out
jmp
pop
mov
adc
call
bound
push
js
call
jne
dec
inc
ins
jmp
pop
jle
adc
call
arpl
sbb
das
xchg
leave
call
dec
test
sub
sar
sbb
fdivr
sbb
test
call
or
call
jno
dec
push
cdq
dec
dec
mov
adc
xchg
fdivrp
sbb
lods
call
addr16
call
pop
xchg
call
add
push
ins
mov
call
imul
and
mov
jmp
xchg
mov
push
mov
dec
ror
fwait
aam
call
dec
js
sbb
jmp
jae
push
jle
jmp
bound
call
dec
jne
and
call
xchg
call
cwd
call
outs
test
ss
ret
dec
dec
jnp
ins
shr
inc
lods
loop
dec
mov
(bad)
aas
scas
in
and
(bad)
call
add
push
xchg
(bad)
sub
test
push
inc
cmp
push
xchg
call
adc
call
add
adc
mov
dec
dec
test
pop
jl
call
xchg
call
arpl
call
jo
call
imul
daa
mov
jmp
xchg
jmp
scas
xlat
mov
xchg
(bad)
adc
call
push
jmp
js
push
(bad)
call
push
mov
adc
call
call
outs
mov
call
jae
push
(bad)
sar
inc
jb
pop
mov
jmp
cmp
loop
adc
dec
dec
cmp
add
pop
xchg
(bad)
xor
mov
or
inc
jl
adc
call
jns
call
xchg
call
scas
call
pusha
movs
dec
dec
cmp
adc
adc
bound
call
pop
(bad)
call
xchg
call
xor
call
ja
jmp
fcom
mov
mov
call
push
cmp
sub
inc
stos
call
pop
xchg
call
push
test
sbb
jp
call
je
call
jbe
call
je
call
jl
(bad)
cmp
jmp
in
jmp
out
push
stos
out
mov
cmp
and
retf
push
stos
in
dec
mov
scas
dec
dec
xchg
cmovge
call
jp
call
test
call
pop
sahf
call
push
xchg
dec
outs
mov
call
call
fs
call
pop
(bad)
call
bound
jmp
xor
push
imul
dec
(bad)
out
pushf
(bad)
loope
mov
call
pop
mov
sbb
(bad)
cmp
dec
mov
sbb
adc
call
pop
test
es
call
jnp
call
jb
call
jno
call
jge
inc
call
dec
jle
outs
(bad)
out
dec
scas
jmp
dec
dec
test
adc
jmp
mov
(bad)
cmp
mov
cmovg
call
pop
fwait
call
into
dec
pop
pushf
call
push
cdq
dec
jnp
adc
call
push
mov
adc
call
xchg
call
xchg
call
pop
mov
adc
call
xchg
jmp
jp
call
pop
cmp
ja
inc
shl
(bad)
fdiv
fnsave
retf
call
popa
xchg
jmp
gs
call
mov
push
xchg
mov
call
dec
cmp
sub
call
jnp
call
sub
sbb
scas
(bad)
cmp
jg
mov
repnz
mov
in
call
push
mov
adc
jmp
xchg
sar
inc
mov
call
in
sbb
xchg
dec
push
mov
sbb
sub
xlat
call
pop
pushf
dec
jl
adc
call
push
mov
adc
adc
call
pop
nop
dec
push
test
adc
call
pop
test
adc
call
jae
call
outs
popf
call
xchg
call
ins
cmps
inc
iret
cmc
adc
aad
scas
iret
call
pusha
xchg
call
mov
and
call
ins
mov
call
push
mov
and
jmp
and
sbb
call
lods
jmp
test
call
push
cmp
mov
enter
(bad)
icebp
call
push
mov
adc
push
sahf
aad
push
mov
out
sbb
pop
cdq
dec
push
mov
sbb
stos
(bad)
cmp
loop
sbb
call
pop
call
imul
adc
adc
call
push
mov
rcpps
call
pop
xchg
adc
call
jle
call
jg
call
data16
in
jno
repz
sbb
call
outs
mov
push
mov
call
xchg
jmp
pop
jle
test
call
jp
jmp
mov
call
push
cmp
(bad)
idiv
scas
loopne
call
hlt
call
bnd
pop
(bad)
call
push
mov
push
lods
(bad)
pop
shr
push
mov
call
cwde
fdivrp
adc
dec
dec
test
sub
call
in
jmp
out
sbb
call
pop
call
jbe
call
push
(bad)
call
pop
xchg
call
pop
xchg
call
push
mov
rcpps
dec
push
cmp
imul
sbb
call
mov
shl
repz
sbb
call
pusha
xchg
(bad)
cmp
mov
mov
call
push
ja
xor
lods
call
sub
call
sar
adc
(bad)
jmp
(bad)
idiv
push
(bad)
hlt
call
pop
(bad)
call
pop
mov
pop
mov
jmp
bnd
call
call
popf
call
push
mov
aaa
test
push
call
or
adc
dec
dec
cmp
jle
call
pop
nop
call
pop
xchg
call
pop
xchg
call
push
mov
push
dec
jge
adc
call
push
xchg
adc
mov
call
jb
call
pushf
call
je
inc
iret
mov
leave
hlt
jno
leave
hlt
std
and
movs
call
gs
(bad)
cmp
call
jle
call
dec
jns
cmp
jmp
mov
jmp
mov
jmp
aam
pop
popa
mov
mov
in
cld
(bad)
jnp
stc
push
clc
call
pop
mov
arpl
idiv
imul
jmp
cmps
out
push
push
call
push
mov
cmp
hlt
dec
xchg
aam
adc
cmps
dec
dec
cmp
jp
call
bound
adc
call
push
mov
or
push
mov
and
mov
call
addr16
cmp
inc
iret
test
dec
dec
retf
xchg
jmp
mov
call
sar
js
call
gs
aaa
(bad)
stos
jmp
mov
aas
sahf
(bad)
jmp
sar
pop
pop
mov
pop
lahf
sar
cmps
(bad)
call
dec
mov
call
pop
mov
outs
mov
clc
push
cmc
push
mov
call
pop
xchg
jmp
ins
xchg
call
mov
jmp
jnp
call
pop
xchg
dec
push
mov
pop
jnp
call
fs
call
fs
inc
jno
adc
das
ins
xchg
push
jge
push
jbe
jmp
imul
sti
push
cmps
(bad)
pop
push
mov
stc
iret
xor
xchg
(bad)
cmp
call
adc
xor
inc
mov
push
nop
scas
dec
(bad)
push
aam
sbb
call
popa
mov
sbb
call
gs
call
xchg
call
popa
(bad)
call
mov
jge
in
mov
(bad)
clc
(bad)
aas
mov
test
adc
call
push
mov
adc
call
push
xchg
adc
adc
adc
call
jge
call
gs
call
pusha
xchg
dec
dec
ja
adc
dec
inc
jae
xor
inc
dec
ret
call
imul
movs
int
xor
mul
xor
mov
call
mov
jmp
jae
call
popa
mov
xor
dec
mov
ds
mov
dec
imul
inc
test
(bad)
cmp
mov
retf
dec
out
call
retf
idiv
cmp
(bad)
jmp
pop
jmp
mov
call
mov
call
push
mov
push
fs
call
mov
call
outs
mov
dec
dec
jbe
adc
call
xchg
ins
movs
int3
(bad)
test
call
push
mov
sbb
loope
cmp
inc
pop
(bad)
push
shl
(bad)
cmp
xchg
mov
jmp
aad
push
scas
sar
sbb
mov
call
pop
cmp
mov
inc
mov
inc
jns
push
aad
jno
(bad)
jmp
(bad)
call
std
call
sti
jmp
std
jmp
loopne
call
stc
call
clc
call
(bad)
cmp
mov
jmp
jb
push
cmps
fdivrp
and
mov
call
push
cmp
push
mov
adc
jg
cmp
(bad)
(bad)
js
sar
cmp
call
imul
pop
scas
xlat
pop
add
add
(bad)
(bad)
inc
cmp
aad
fild
loopne
inc
xchg
mov
call
(bad)
in
and
movs
jmp
jp
jmp
arpl
dec
mov
push
stos
(bad)
xlat
jmp
(bad)
cmp
iret
out
stos
jmp
std
call
in
(bad)
mov
out
dec
(bad)
call
fdivr
jmp
(bad)
mov
sub
jmp
in
aaa
call
pop
jo
call
push
xchg
adc
call
pop
mov
xor
call
aam
imul
call
pop
mov
push
xchg
in
cmp
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
push
clc
outs
data16
stc
inc
lahf
(bad)
test
add
call
int
sub
jmp
test
jmp
outs
xchg
call
scas
call
mov
call
(bad)
inc
jle
dec
lock
call
repnz
dec
out
(bad)
push
call
(bad)
call
in
call
call
jge
call
call
jnp
call
jp
call
imul
jmp
fs
call
ret
inc
mov
jmp
pop
xchg
pop
bound
sti
push
mov
add
(bad)
(bad)
inc
add
add
add
add
arpl
mul
js
cli
retf
pop
shl
dec
mov
scas
jmp
(bad)
jmp
leave
call
(bad)
jmp
jnp
jmp
mov
jmp
outs
nop
jmp
mov
pusha
lods
mov
call
mov
inc
xchg
jmp
mov
jmp
mov
call
mov
dec
xchg
mov
push
xchg
mov
dec
xchg
mov
cmp
mov
dec
sar
push
test
call
ins
sahf
call
push
test
sbb
call
popa
xchg
call
mov
pusha
mov
mov
call
mov
xlat
push
mov
das
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
push
test
clc
sti
pusha
mov
dec
mov
inc
mov
enter
cmps
push
xchg
mov
jmp
addr16
dec
mov
push
pushf
stos
jmp
retf
outs
mov
mov
outs
mov
mov
push
pushf
mov
push
call
push
mov
jmp
mov
mov
call
imul
call
popa
(bad)
jmp
imul
jl
call
call
pop
cmp
sub
fs
push
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
xor
jmp
scas
jp
bnd
(bad)
(bad)
cmp
mov
data16
ret
(bad)
fdivr
push
test
inc
mov
(bad)
cmp
stos
call
pusha
cmp
ja
call
mov
inc
(bad)
sar
mov
(bad)
dec
(bad)
fdivr
xchg
xlat
(bad)
jnp
sar
outs
mov
(bad)
push
test
mov
and
call
addr16
call
js
call
jo
dec
mov
(bad)
jl
sar
arpl
mov
es
jmp
loopne
jno
in
mov
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
ins
iret
mul
jnp
jmp
fwait
mov
ins
mov
(bad)
dec
sar
lea
jmp
test
sub
pushf
call
arpl
inc
lahf
dec
mov
call
mov
pop
cmps
mov
dec
cdq
stos
inc
test
aas
xchg
lods
(bad)
cmp
cmps
jmp
bound
jmp
lods
jmp
gs
cmp
call
ret
xchg
call
cdq
(bad)
jl
sar
mov
icebp
int
shl
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
and
add
clc
cmp
aam
jmp
sar
lahf
mov
dec
(bad)
inc
mov
lods
jmp
(bad)
mov
aaa
mov
push
xchg
jmp
gs
daa
ins
mov
cs
push
jp
jmp
xchg
jmp
imul
push
pusha
test
push
jae
push
xchg
sar
sub
inc
mov
jmp
(bad)
call
mov
jmp
jo
jmp
gs
inc
fdivp
div
out
and
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jns
cli
dec
xchg
jmp
out
ja
int
pop
lods
(bad)
call
sar
xchg
fucomip
push
lock
leave
dec
mov
call
ins
mov
xor
(bad)
dec
int
cmp
scas
jmp
and
xchg
(bad)
cmp
push
mov
jmp
jne
call
mov
call
sar
data16
ret
inc
test
(bad)
cmp
sar
mov
hlt
jecxz
retf
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
inc
mov
cli
dec
fwait
jmp
jnp
retf
jmp
call
ret
call
fsubrp
push
(bad)
push
fdivr
inc
cdq
mov
sub
sbb
xor
mov
push
mov
push
popf
(bad)
test
push
(bad)
(bad)
(bad)
ja
aad
jg
(bad)
outs
mov
cmps
jmp
jno
(bad)
cmp
fdivr
stos
loop
test
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
je
idiv
cdq
call
repz
retf
call
int3
jmp
jmp
fsubr
call
ret
push
xchg
stos
push
mov
push
test
(bad)
cmp
jmp
(bad)
push
leave
dec
retf
mov
in
adc
dec
ret
jmp
jae
push
test
(bad)
jle
jmp
enter
add
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sbb
add
stc
and
stc
stc
mov
loop
add
(bad)
jl
into
jmp
sar
addr16
fdivrp
mov
icebp
dec
aad
jmp
ret
inc
into
loopne
mov
mov
(bad)
call
lods
dec
stos
jmp
in
inc
into
(bad)
aas
xchg
scas
(bad)
ds
mov
inc
fwait
sar
mov
jmp
repz
js
cmc
mov
xor
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
xor
aam
dec
mov
out
cli
stc
mov
loope
(bad)
(bad)
sar
mov
sar
push
lods
mov
call
aad
pop
test
aam
fwait
aam
jmp
int3
(bad)
jg
leave
push
sar
cmp
sar
mov
(bad)
dec
inc
(bad)
dec
leave
cmc
stc
pop
sar
shr
repnz
xor
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
jno
sti
and
sti
fbld
fucom
call
iret
inc
ror
jl
retf
inc
ret
jb
mov
push
(bad)
jmp
(bad)
jmp
sar
pop
mov
loopne
dec
mov
hlt
call
mul
pop
retf
div
vmovaps
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
inc
mov
sti
inc
call
int
in
cli
icebp
call
inc
retf
jns
(bad)
jne
fdivrp
ins
(bad)
loopne
enterw
shr
jmp
cmc
jmp
clc
repz
cli
shr
test
cmp
out
or
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
aaa
mov
icebp
and
mov
cld
outs
mov
sti
lahf
mov
sti
mov
xchg
cli
jecxz
loopne
in
(bad)
xlat
jp
cli
mov
ins
(bad)
cli
jae
aad
dec
pop
(bad)
lock
mov
or
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
(bad)
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jmp
add
add
add
add
add
add
add
add
add
inc
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
and
imul
push
mov
ss
dec
inc
sub
ret
push
cwde
ret
xchg
ret
xchg
ret
xchg
ret
repz
call
pop
sahf
ret
cdq
mov
cmp
mov
adc
and
add
push
sbb
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
prefetcht2
add
pusha
test
dec
lea
aas
inc
nop
mov
mov
cdq
leave
icebp
inc
cdq
into
push
xchg
retf
cmp
push
jae
jmp
je
jmp
stos
jmp
jbe
jmp
jns
jmp
jnp
jmp
xor
call
int3
call
(bad)
repz
sahf
sar
cwde
mov
and
and
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
ds
or
mov
addr16
mov
shr
mov
ret
jmp
mov
cs
push
jbe
push
mov
cmp
inc
jg
inc
addr16
inc
push
jl
cmp
push
arpl
addr16
jo
push
js
push
and
call
(bad)
in
push
mov
shr
mov
inc
jne
or
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
xor
add
mov
pop
mov
jns
scas
fld
inc
scas
fdiv
xor
mov
inc
dec
xchg
call
mov
pop
jnp
call
cmp
jne
call
jl
pop
jno
call
outs
dec
call
imul
push
call
jne
pop
jb
call
jge
dec
outs
js
inc
ins
jl
inc
jb
(bad)
cmp
push
mov
dec
not
mov
dec
and
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
xor
adc
push
mov
loope
aaa
test
ret
nop
mov
dec
xchg
call
xchg
pop
jb
dec
jo
dec
outs
dec
imul
imul
cmp
jge
call
jge
push
jo
call
jne
dec
push
call
outs
call
ins
call
jb
push
jno
call
cmp
jnp
call
jl
dec
jb
inc
(bad)
push
mov
not
retf
(bad)
popa
mov
xchg
sbb
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
ss
add
mov
popf
dec
mov
fdivrp
sub
xchg
mov
push
mov
dec
cmp
dec
push
dec
outs
inc
imul
dec
push
call
mov
ins
nop
fwait
jmp
xchg
jmp
xchg
jmp
cwde
jmp
xchg
jmp
mov
pop
jp
call
call
jne
push
push
call
jbe
push
ins
jae
dec
push
call
jge
push
jno
call
jl
dec
jp
push
je
(bad)
cmp
retf
test
stos
inc
sub
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
sub
sahf
or
lds
mov
(bad)
aas
mov
imul
lahf
iret
push
mov
dec
nop
scas
inc
cmp
aas
pusha
imul
addr16
inc
push
call
test
push
mov
dec
jnp
arpl
mov
jns
mov
jns
mov
jp
mov
inc
xchg
fwait
jmp
mov
or
jo
call
outs
jae
pop
jne
call
dec
push
dec
gs
call
test
inc
jno
jmp
je
(bad)
aas
fwait
(bad)
stc
push
test
mov
sub
sldt
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
sub
mov
fsubp
xor
inc
mov
(bad)
cmp
call
movs
call
mov
pop
cdq
stos
call
nop
inc
jb
dec
ins
jbe
dec
jne
jmp
mov
push
(bad)
mov
(bad)
jge
into
(bad)
jle
iret
inc
(bad)
sar
mov
aad
nop
(bad)
xlat
inc
scas
mov
jmp
(bad)
jmp
(bad)
(bad)
jle
stos
jmp
call
jmp
(bad)
(bad)
jns
mov
dec
dec
ins
call
mov
sub
push
mov
jmp
fwait
mov
adc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
xor
aas
mov
mov
mul
(bad)
int
and
mov
cmp
ins
cmp
pop
ins
jmp
pop
ins
push
pop
jb
xor
(bad)
cmp
cmp
xchg
cmps
jmp
int
imul
call
call
xchg
mov
dec
mov
inc
jne
inc
jnp
inc
data16
dec
imul
push
jp
call
mov
pop
jle
jmp
fwait
call
mov
outs
xchg
popf
call
ret
je
mov
call
jge
push
jno
call
jns
push
gs
jne
push
addr16
jp
dec
leave
std
push
call
sbb
cmp
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
pop
sar
and
cmps
jmp
jge
jmp
cmp
jp
xor
mov
cmp
(bad)
cmp
inc
cmps
inc
mov
pop
mov
call
sar
inc
mov
inc
(bad)
(bad)
aas
jae
inc
xchg
dec
fwait
call
fwait
call
mov
call
cwde
call
jmp
movs
call
popf
call
xchg
call
xchg
push
jns
call
xchg
jmp
mov
inc
mov
push
mov
jb
movs
push
popf
jmp
xchg
pop
js
call
ja
push
jno
(bad)
cmp
cmp
inc
cdq
(bad)
xchg
mov
and
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
scas
cmovg
sar
sbb
jo
jmp
ins
xchg
jmp
gs
jne
push
mov
push
and
cmp
mov
(bad)
mov
(bad)
cmp
inc
pushf
(bad)
ds
(bad)
cmp
push
pop
jne
das
push
outs
jmp
push
jmp
push
outs
jmp
push
push
push
push
cmp
inc
addr16
push
js
call
xchg
call
call
mov
(bad)
jns
mov
jmp
jmp
mov
call
test
pop
js
call
cmp
jo
inc
xchg
daa
jno
inc
(bad)
std
push
xchg
mov
adc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
sub
lods
pop
push
mov
aad
push
jnp
call
ins
mov
call
pop
jg
sbb
push
bound
push
test
ss
scas
jmp
and
xor
popf
push
jb
jmp
fs
and
jo
and
jmp
pop
je
and
call
pop
je
sbb
imul
and
jmp
push
ins
jmp
push
ins
jmp
push
push
push
gs
ds
push
jl
call
xchg
call
fwait
call
xchg
call
(bad)
call
cdq
jmp
lods
inc
lea
call
mov
pop
js
call
jp
inc
outs
mov
and
mov
std
push
xchg
mov
ud0
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
inc
jne
add
retf
push
inc
mov
(bad)
call
push
call
gs
push
pop
jp
pop
pop
cmp
jno
jmp
mov
push
(bad)
scas
(bad)
cmp
jmp
(bad)
mov
daa
jge
jmp
jno
jmp
arpl
call
push
je
sbb
call
pop
jge
pop
pusha
cmp
fs
sbb
call
mov
icebp
jmp
xchg
(bad)
call
ins
(bad)
call
js
sbb
call
pop
jae
and
jmp
jmp
push
gs
cmp
dec
mov
push
adc
popa
xchg
movs
jmp
mov
jge
sar
mov
(bad)
jge
sar
xchg
movs
call
mov
pop
jg
call
mov
cmp
mov
pop
outs
cmps
inc
enter
mov
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
dec
xchg
ret
stos
fcmovnb
sub
mov
call
jge
push
pop
test
sbb
xchg
jmp
jnp
jmp
nop
mov
(bad)
cmp
aam
daa
xchg
sar
xchg
sar
jne
call
pop
cmp
adc
ja
adc
jge
adc
test
adc
test
push
mov
pop
push
mov
sbb
call
mov
jmp
mov
lods
(bad)
cmp
leave
call
gs
ins
test
and
call
gs
pop
pop
jno
and
sub
ins
(bad)
cmp
jns
dec
ja
call
test
pop
lea
inc
mov
inc
(bad)
popf
jmp
pushf
jmp
nop
call
xchg
xor
jmp
ja
std
inc
xchg
leave
iret
dec
mov
add
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
xor
ficomp
sbb
call
nop
call
push
jle
adc
call
push
lahf
jmp
jae
push
mov
jmp
xchg
sar
imul
dec
jb
adc
call
pop
test
adc
mov
adc
bound
adc
test
adc
jge
call
mov
call
push
call
pusha
test
sub
out
and
ins
xchg
call
jo
jmp
jo
jmp
push
jmp
addr16
pop
pop
jo
and
push
pop
je
inc
jo
call
cmps
call
cmps
jmp
scas
(bad)
jnp
int3
(bad)
jge
(bad)
(bad)
jle
mov
jmp
cwde
dec
jnp
push
jnp
call
pop
mov
sub
mov
test
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
pop
scas
aam
cmp
(bad)
int3
call
addr16
call
push
jl
adc
call
mov
and
jmp
js
(bad)
cmp
(bad)
jmp
xchg
retf
xchg
sar
adc
push
jne
adc
call
dec
ja
adc
call
pop
mov
adc
call
pop
mov
adc
mov
adc
adc
call
addr16
call
jp
call
arpl
call
outs
cwde
call
pop
jle
sub
in
and
(bad)
call
xchg
and
jmp
outs
xchg
and
jmp
outs
test
and
push
push
imul
pop
jbe
aaa
addr16
push
(bad)
cmps
call
jmp
mov
push
(bad)
push
jmp
jmp
stos
call
jle
dec
sbb
jmp
cwde
mov
add
add
add
add
add
add
add
(bad)
(bad)
inc
or
sbb
inc
call
mov
movs
call
push
call
imul
xor
sar
push
xchg
sar
adc
call
push
jns
adc
call
dec
je
adc
call
push
test
adc
call
pop
mov
adc
call
push
cmp
push
mov
adc
call
outs
test
call
push
jle
and
fdivrp
adc
push
jle
and
mov
(bad)
call
gs
sbb
call
jo
jmp
je
jmp
jne
jmp
je
jmp
outs
xchg
sbb
jmp
pop
jne
sub
xchg
lods
call
mov
push
sar
jns
(bad)
jmp
mov
pop
nop
mov
dec
cmp
jbe
jmp
jns
inc
leave
lds
stos
cmp
and
add
add
add
add
add
add
add
add
cmp
outs
cmp
mov
call
gs
dec
push
jns
push
inc
push
sbb
jmp
(bad)
mov
xor
xchg
retf
fwait
aad
adc
call
push
ja
adc
dec
jns
cmovge
adc
call
push
xchg
adc
call
pop
mov
adc
call
push
mov
adc
mov
adc
lods
call
push
xchg
adc
call
jle
jmp
mov
jecxz
adc
pop
(bad)
call
pop
cmp
sub
mov
call
addr16
sbb
call
jb
call
jae
jmp
jae
jmp
jbe
jmp
je
call
push
jno
es
js
das
gs
dec
xchg
scas
dec
mov
pop
stos
sar
rcl
jbe
retf
jmp
mov
ds
dec
js
dec
cwde
jmp
outs
mov
test
cwde
sldt
add
add
add
add
add
(bad)
(bad)
inc
push
stos
shr
dec
mov
loop
push
jb
call
push
cmp
dec
jne
sbb
jmp
nop
(bad)
cmp
mov
xor
int
adc
dec
dec
je
push
push
jns
adc
cmovge
adc
dec
push
cmp
adc
cmovle
call
push
mov
adc
dec
inc
je
adc
test
call
xlat
jmp
sahf
fdivrp
adc
scas
call
mov
adc
jmp
sub
call
gs
call
ins
mov
sbb
je
call
je
jmp
je
jmp
je
call
pop
ja
and
ins
test
inc
xchg
mov
dec
cwde
mov
pop
lods
leave
push
(bad)
jl
(bad)
inc
ins
cmp
mov
inc
scas
jmp
cmp
dec
xchg
mov
add
add
add
(bad)
inc
aaa
mov
pop
pop
mov
in
out
and
dec
dec
jns
or
je
call
jle
dec
sar
sub
dec
push
jns
adc
jnp
push
dec
jp
cmovl
cmovge
cmovge
cmovge
push
dec
jnp
rsqrtps
call
scas
call
push
mov
or
inc
je
adc
call
or
sbb
xlat
call
mov
adc
stos
call
push
mov
adc
adc
call
jl
jmp
popf
fdivr
sbb
xchg
call
imul
call
je
jmp
jp
jmp
jbe
call
pop
jne
and
jge
inc
mov
call
(bad)
inc
lea
dec
test
inc
sbb
(bad)
cmp
(bad)
outs
xor
xchg
or
add
add
add
add
iret
sbb
lahf
inc
mov
mov
sqrtps
sqrtps
adc
call
pop
cmp
xchg
mov
jmp
test
dec
push
cmp
dec
jbe
sbb
dec
dec
cmp
dec
jg
cmovle
dec
dec
jge
or
push
(bad)
call
mov
adc
dec
jo
or
jb
or
movs
call
adc
sbb
aam
adc
call
movs
call
push
xchg
adc
call
pop
mov
adc
call
js
jmp
cwde
fdivr
sbb
call
mov
sbb
call
js
jmp
jle
jmp
jnp
call
pop
jle
sub
(bad)
cmp
mov
inc
scas
jmp
iret
inc
mov
aaa
jns
(bad)
cmp
lea
inc
retf
mov
cwde
mov
add
dec
push
xor
xor
fdivr
sbb
push
dec
jae
adc
call
pusha
xchg
call
fs
inc
mov
cmp
lods
call
cmps
call
bound
call
push
jns
adc
dec
dec
jp
cmovge
adc
dec
dec
cmp
adc
call
jp
call
(bad)
dec
dec
test
or
ins
dec
aas
outs
dec
je
or
cmps
call
test
call
xchg
fdivrp
and
mov
dec
dec
cmp
push
cmp
push
mov
adc
call
dec
jge
sbb
call
aam
push
jns
call
nop
call
fs
sbb
call
jnp
call
jns
call
imul
ss
mov
jmp
xlat
call
loopne
cmp
jg
(bad)
cmp
(bad)
cmp
xchg
(bad)
inc
shr
dec
pushf
lds
push
jns
cmp
loop
arpl
icebp
sti
xor
xchg
or
bound
call
imul
xor
mov
call
dec
jae
push
push
jp
adc
dec
push
cmp
push
cmp
push
test
cmovl
adc
xchg
call
jl
call
or
adc
or
jb
adc
dec
inc
jae
or
cmps
call
mov
call
(bad)
push
xchg
dec
pop
fwait
dec
push
xchg
dec
dec
jg
cmovg
call
push
xchg
adc
adc
call
retf
call
ja
call
xchg
call
jo
call
mov
call
jno
call
pop
jle
sbb
mov
xor
mov
push
(bad)
out
gs
(bad)
ds
aad
das
js
push
jns
(bad)
cmp
push
(bad)
inc
fcos
inc
cwde
ret
jg
jle
or
leave
adc
out
arpl
in
push
xchg
call
push
cmp
pop
mov
xor
mov
call
jl
call
fs
dec
push
js
adc
jg
adc
call
push
xchg
adc
adc
call
pusha
xchg
jmp
mov
call
xchg
dec
jae
adc
scas
call
ja
call
imul
or
movs
call
mov
call
mov
call
jns
dec
push
xchg
dec
inc
jnp
push
inc
js
adc
call
jno
call
pop
call
data16
call
jns
call
xchg
call
push
call
js
call
mov
call
imul
daa
sub
cmp
jmp
jnp
jmp
jp
(bad)
ds
mov
cmp
(bad)
push
test
mov
sbb
popa
mov
pushf
call
dec
jge
adc
xchg
call
push
mov
dec
xchg
dec
into
call
cmps
dec
push
test
sbb
call
pop
cmp
push
test
adc
call
pop
(bad)
call
push
xchg
adc
xchg
into
jmp
xchg
int
sbb
dec
inc
jle
push
outs
mov
sbb
call
jnp
jmp
nop
aam
xor
sar
dec
cmp
bound
call
xchg
fdivr
sbb
dec
dec
mov
or
pop
xchg
jmp
xchg
int
sbb
je
call
fs
call
dec
jge
adc
call
jnp
call
popf
call
ja
call
ja
call
jb
call
ins
xchg
jmp
mov
jmp
mov
jmp
mov
push
xchg
mov
push
movs
(bad)
call
fdiv
push
mov
loope
(bad)
fdiv
sti
data16
jmp
pop
mov
adc
call
cdq
call
fs
call
push
jg
cmp
mov
dec
push
jns
sbb
call
pusha
nop
call
pusha
xchg
call
pop
nop
call
pop
xchg
jmp
test
push
xchg
sar
sbb
push
cmp
jl
call
xchg
call
jns
call
mov
jmp
xchg
fdivrp
push
xchg
fdivr
sbb
call
outs
scas
call
aam
sbb
jnp
dec
push
xchg
dec
push
xchg
dec
dec
mov
adc
nop
fdivr
and
vmovsd
adc
call
pop
xchg
dec
dec
jle
adc
call
test
call
jae
call
ins
sahf
call
outs
pushf
call
outs
call
mov
adc
jmp
mov
jmp
mov
xor
sub
test
push
mov
in
mov
arpl
stos
(bad)
call
push
cmp
push
mov
adc
js
call
pusha
xchg
push
jo
call
lahf
call
pop
call
pop
cmp
arpl
call
cwde
call
cdq
call
xchg
jmp
mov
jmp
mov
push
inc
jnp
cmp
mov
cmp
aad
sub
loope
and
loopne
pop
xchg
(bad)
and
call
mov
call
add
andps
dec
dec
mov
adc
call
adc
call
mov
call
push
call
mov
adc
cmovg
call
push
call
imul
call
mov
adc
call
movs
call
xchg
jmp
sar
and
test
jmp
mov
ret
shl
lods
in
jmp
call
dec
jbe
sbb
call
push
mov
jmp
popa
(bad)
call
pop
cwde
call
push
mov
sbb
imul
call
imul
jmp
test
call
(bad)
call
dec
loop
dec
mov
inc
push
cmps
loopne
pop
xchg
call
(bad)
call
(bad)
aam
sbb
xchg
sar
adc
call
pop
popf
dec
dec
mov
adc
mov
call
xchg
fdivr
and
into
call
jo
call
movs
dec
dec
cmp
jne
call
fs
call
gs
call
popa
mov
adc
call
jge
call
jp
jmp
mov
jmp
sub
sub
call
int
mov
jmp
call
call
dec
ja
sbb
pushf
jmp
jbe
jmp
jp
push
mov
call
dec
cmp
cmovnp
pop
cmp
push
outs
fwait
call
outs
sahf
call
ins
lahf
call
imul
sub
jae
inc
xchg
ret
mov
jmp
aas
scas
in
cmp
int3
call
nop
dec
dec
jg
push
imul
(bad)
cmp
(bad)
adc
pop
mov
dec
push
nop
call
jno
call
jg
jmp
push
call
imul
call
mov
adc
call
pop
xchg
call
xchg
call
xchg
call
xchg
call
pop
(bad)
call
pop
xchg
sbb
call
arpl
call
js
jmp
mov
call
jbe
jmp
jle
jmp
mov
lds
fucomi
call
cmps
call
dec
jbe
push
push
mov
sub
jmp
jo
dec
mov
call
push
je
and
jmp
js
call
jb
call
je
call
jne
call
jb
call
jb
jmp
xchg
enter
mov
push
inc
outs
inc
sar
mov
in
push
mov
mov
dec
push
mov
sbb
jmp
fcos
sub
loope
adc
pop
mov
dec
dec
cmp
inc
jnp
adc
call
mov
call
bound
call
push
xchg
dec
scas
call
pop
mov
call
cdq
call
fs
call
cwde
call
pop
xchg
dec
push
cmp
jp
call
xchg
call
mov
call
imul
sbb
cmps
jmp
call
cdq
(bad)
out
retf
movs
fsubr
dec
cmps
call
pop
mov
sbb
call
movs
inc
mov
call
pop
mov
push
data16
dec
pusha
xchg
sub
sbb
call
je
call
jne
call
jne
call
je
push
xchg
retf
mov
dec
(bad)
jmp
out
(bad)
jge
lock
cmp
out
and
test
dec
dec
test
adc
call
jb
jmp
mov
out
pop
mov
call
lods
call
pop
lahf
dec
dec
mov
cmovle
call
xchg
jmp
xchg
fcos
adc
dec
pop
fwait
dec
push
(bad)
dec
imul
adc
xchg
call
cdq
call
xchg
call
cdq
call
pop
(bad)
dec
push
jl
adc
arpl
jmp
test
call
imul
pop
imul
out
xchg
aam
fstp
mov
call
pop
mov
and
jmp
mov
call
fs
call
bound
jmp
jl
call
jl
call
js
call
jo
call
outs
pushf
call
jne
(bad)
cmp
mov
dec
leave
(bad)
jle
icebp
call
mov
push
test
(bad)
call
push
xchg
adc
pop
jbe
(bad)
cmp
jmp
call
jno
call
stos
dec
dec
mov
adc
dec
dec
test
sbb
sbb
(bad)
sub
movs
call
pop
mov
dec
jns
adc
dec
push
xchg
call
push
xchg
adc
adc
cwde
call
xchg
call
xchg
call
pop
(bad)
dec
push
jns
sbb
adc
jmp
xchg
(bad)
jmp
addr16
dec
xchg
mov
call
pop
cmp
bound
call
aam
mov
lock
shr
inc
stos
call
pop
xchg
jmp
xchg
jmp
inc
stos
(bad)
jp
aam
sbb
call
inc
outs
jmp
addr16
cs
call
jns
call
jl
call
sub
sbb
jmp
xchg
enter
mov
call
retf
dec
cmc
call
lock
in
push
xchg
enter
mov
adc
call
jbe
jmp
lahf
fdivrp
dec
mov
jmp
js
call
push
xchg
dec
push
mov
adc
jmp
popf
loope
xor
mov
adc
dec
push
xchg
dec
jp
adc
call
pop
pushf
call
push
mov
adc
adc
call
pop
xchg
call
pop
nop
dec
push
xchg
or
ins
sahf
dec
push
jnp
adc
call
jns
call
push
call
pusha
xchg
call
cmp
test
icebp
retf
or
inc
lods
call
bound
adc
jmp
jb
call
pusha
cwde
call
push
cmp
or
mov
das
and
call
stos
call
scas
call
jl
jmp
cdq
int
xor
jg
bound
idiv
mov
idiv
fs
bnd
icebp
dec
call
pop
mov
adc
jmp
mov
cmp
in
push
mov
in
call
enter
xchg
dec
push
mov
adc
jmp
xchg
sar
xor
in
sbb
call
jno
call
push
xchg
dec
jns
adc
adc
call
push
mov
adc
adc
adc
call
push
(bad)
dec
push
test
or
gs
dec
dec
ja
adc
call
jnp
call
jl
call
jle
call
outs
mov
call
movs
shr
jl
lock
inc
mov
call
fs
call
je
inc
retf
call
addr16
call
pop
xchg
call
dec
jns
sub
xor
test
sbb
jnp
call
lods
call
mov
mov
jmp
iret
jmp
in
push
repz
repnz
into
call
push
mov
adc
sub
dec
out
push
mov
in
call
xchg
call
pop
xchg
dec
push
xchg
adc
xor
jmp
call
ins
mov
adc
or
push
call
pop
mov
call
pop
xchg
call
pop
xchg
call
pop
(bad)
call
push
mov
rcpps
call
fs
dec
push
jle
adc
call
js
call
cmp
outs
mov
call
ja
call
rcr
jo
out
mov
inc
xchg
mov
call
imul
jmp
cmp
push
test
es
cmp
test
pop
sub
sbb
movs
call
jge
inc
(bad)
inc
ret
push
cmp
stos
iret
call
loopne
jmp
cmc
inc
inc
iret
call
pop
mov
adc
push
xchg
call
jmp
out
call
xchg
fdivrp
sbb
xchg
dec
dec
test
adc
(bad)
dec
fdivr
push
retf
in
call
xchg
call
jae
call
push
xchg
dec
jae
call
popa
movs
call
push
(bad)
call
pop
xchg
call
pop
xchg
call
pop
nop
call
push
xchg
rsqrtps
call
pop
(bad)
dec
dec
js
adc
popf
call
jne
call
jnp
call
jne
call
pop
(bad)
call
movs
rol
pop
ret
fs
(bad)
ds
retf
pusha
(bad)
call
pop
mov
sub
fcos
ds
xlat
call
jnp
call
popa
(bad)
call
gs
call
push
jnp
xor
jmp
mov
call
jle
call
mov
inc
(bad)
inc
ret
call
test
ins
scas
sar
test
loopne
call
idiv
dec
shl
inc
mov
nop
call
pop
mov
cmp
jmp
fs
bnd
out
call
jg
call
popa
cdq
call
push
mov
push
pop
(bad)
call
(bad)
xchg
fdiv
dec
mov
call
je
call
push
xchg
dec
jns
call
cmps
call
pop
mov
adc
call
pop
xchg
call
pop
nop
call
push
mov
push
dec
jge
push
dec
jle
adc
dec
push
cmp
imul
call
jo
call
sahf
jmp
test
call
into
mov
popa
sar
(bad)
cmp
(bad)
call
imul
inc
sar
inc
stos
loop
push
js
call
jbe
call
ja
xor
xchg
push
mov
jmp
xchg
jmp
test
call
call
pop
mov
jnp
(bad)
(bad)
mov
call
clc
call
idiv
dec
cmps
sar
adc
xchg
call
pop
(bad)
(bad)
cmp
in
inc
retf
bnd
loope
sbb
gs
call
push
mov
pop
pusha
xchg
call
(bad)
xchg
(bad)
repz
mov
call
js
call
pop
fwait
dec
dec
cmp
adc
lods
call
pop
xchg
call
pop
xchg
call
pop
xchg
call
pop
xchg
call
push
mov
push
inc
js
adc
call
push
cmp
pop
xchg
call
ins
stos
jmp
jp
jmp
jne
call
call
xchg
sar
inc
xchg
(bad)
jns
shr
pop
iret
idiv
aaa
scas
fdivr
and
stos
call
outs
pushf
jmp
sub
aaa
cmps
loop
and
sbb
call
jns
call
push
jge
xor
push
xchg
mov
mov
jmp
mov
call
(bad)
call
pusha
mov
xchg
cld
(bad)
(bad)
cld
call
fdivr
jmp
(bad)
call
pop
mov
aas
(bad)
mov
call
shl
jmp
out
jmp
cwde
sar
push
imul
(bad)
jle
loope
mov
jecxz
inc
in
and
sar
adc
dec
cmp
jb
call
stos
call
mov
call
pop
xchg
call
push
mov
or
push
test
adc
dec
ret
push
call
push
stos
push
jg
call
pop
mov
sbb
inc
(bad)
(bad)
cmp
in
pop
int
(bad)
xchg
and
sub
aad
ins
lods
iret
(bad)
aas
test
call
pop
cmp
test
jmp
mov
jmp
mov
(bad)
pop
xchg
sub
(bad)
cmp
lea
push
sub
adc
xchg
call
pop
mov
inc
xchg
mov
dec
aam
(bad)
cmp
fdivr
sbb
movs
call
pop
xchg
call
pop
mov
daa
ins
cwde
(bad)
cmp
stos
jmp
jno
call
push
mov
adc
pop
jns
call
imul
call
popf
call
pop
xchg
dec
dec
cmp
inc
jb
cmovl
adc
jmp
mov
inc
mov
jmp
js
call
pop
(bad)
call
push
mov
sbb
dec
(bad)
out
push
cmps
shl
push
scas
rcl
pop
retf
dec
leave
hlt
jmp
enter
(bad)
jmp
jl
push
xchg
sar
fwait
sar
lea
call
push
stos
call
push
jge
cmp
(bad)
ds
stos
push
xchg
mov
xor
mov
outs
ret
fs
mov
sbb
call
fs
call
gs
call
addr16
call
push
call
xchg
call
fs
call
mov
dec
cdq
mov
call
(bad)
inc
hlt
push
cmps
(bad)
push
jae
call
pop
nop
call
pop
mov
adc
call
pop
(bad)
call
push
(bad)
call
push
mov
adc
call
pop
nop
call
push
(bad)
call
ja
call
cmps
call
fs
call
fs
call
pop
mov
push
inc
jne
cmovl
cmovns
push
dec
jbe
xor
jl
push
fdivr
sub
call
fs
jmp
test
mov
sahf
ret
test
pop
pop
sar
sti
cmp
jmp
mov
call
mov
jb
into
jmp
xchg
jmp
jns
call
pop
mov
and
dec
mov
(bad)
cmp
push
in
jae
retf
fs
and
jmp
jae
jmp
jne
jmp
popf
jmp
jae
jmp
jo
jmp
outs
xchg
call
(bad)
call
in
jmp
retf
idiv
cmp
in
sub
call
gs
call
arpl
call
pop
mov
adc
dec
dec
cmp
push
mov
sbb
mov
adc
outs
mov
call
push
cmp
adc
call
dec
jg
adc
jmp
(bad)
push
jnp
(bad)
cmp
lods
call
push
test
pop
jae
(bad)
cmp
fdivr
inc
mov
test
adc
inc
add
cmc
das
pop
shl
xlat
aas
mov
enter
sar
mov
inc
scas
jmp
xlat
call
cmps
jmp
ja
jmp
je
call
push
jg
inc
jg
call
mov
inc
mov
mov
dec
mov
jmp
xlat
(bad)
js
cmc
jmp
clc
call
idiv
push
retf
idiv
dec
leave
cmc
dec
idiv
gs
call
call
sti
push
stc
call
idiv
dec
ret
repnz
lock
scas
jmp
cmps
in
sub
call
lods
jmp
fdivr
sbb
call
jo
call
jb
call
xchg
dec
dec
jge
adc
call
push
mov
adc
jmp
mov
call
mov
(bad)
cmp
adc
xchg
call
scas
(bad)
push
lods
xlat
cmp
(bad)
(bad)
inc
pop
(bad)
lock
pusha
iret
not
movs
iret
push
lea
call
mov
push
fdivrp
xor
lahf
jmp
jg
call
xchg
call
arpl
dec
mov
inc
fwait
mov
push
stos
(bad)
shl
dec
mov
push
fdivr
jns
(bad)
jmp
(bad)
jmp
(bad)
call
std
call
sti
call
cld
push
push
in
jmp
stc
dec
clc
call
clc
call
clc
dec
idiv
inc
mov
icebp
(bad)
ds
leave
call
push
jmp
jg
push
xchg
sar
sbb
call
jo
call
pop
(bad)
dec
dec
jge
adc
call
outs
cmps
call
(bad)
dec
mov
call
call
push
mov
sbb
push
movs
(bad)
dec
mov
stos
push
cmps
rcr
add
add
(bad)
(bad)
inc
cmp
not
aad
jmp
dec
mov
mov
jmp
mov
call
(bad)
push
sub
call
pop
xchg
sub
call
stos
dec
lods
dec
mov
pop
mov
call
shl
dec
mov
inc
out
jmp
loope
dec
loop
call
jmp
std
inc
cli
inc
fdivr
dec
cli
call
mov
cwde
inc
mov
pusha
mov
aam
sbb
jb
call
outs
popf
call
pop
(bad)
dec
dec
jl
adc
call
push
mov
sub
inc
ret
jmp
loop
arpl
sar
sub
xchg
call
mov
repz
mov
cmp
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pop
(bad)
repz
pop
shl
dec
(bad)
cmp
scas
call
fcomi
(bad)
jnp
out
dec
(bad)
xor
mov
and
call
push
jl
aaa
jl
call
scas
call
mov
jmp
(bad)
call
(bad)
in
dec
mov
call
out
(bad)
(bad)
mov
out
(bad)
dec
out
(bad)
inc
in
(bad)
(bad)
mov
out
jmp
jecxz
call
in
jmp
in
(bad)
jge
sar
sub
inc
mov
jg
out
pop
mov
jmp
mov
sbb
call
jns
call
imul
adc
call
gs
call
pop
mov
push
xchg
mov
dec
(bad)
out
dec
test
call
outs
lahf
push
jmp
xor
xor
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
cmp
ins
fsqrt
jmp
ret
dec
mov
mov
call
mov
dec
xchg
mov
cmp
movs
jmp
imul
call
jo
call
pop
cmp
jle
jmp
mov
pop
lods
mov
jmp
ret
call
fucomp
dec
call
iret
fdivrp
retf
(bad)
fpatan
(bad)
(bad)
fpatan
(bad)
inc
out
(bad)
push
jmp
push
in
jmp
call
cld
jmp
sar
es
xchg
(bad)
cmp
mov
js
in
jmp
(bad)
sub
lods
call
jge
call
jb
call
pop
(bad)
call
push
cmp
and
(bad)
cmp
dec
stos
call
mov
popa
call
sbb
call
xchg
sar
mov
out
inc
cdq
leave
or
add
add
(bad)
inc
add
add
add
add
add
shl
jns
stc
lods
outs
(bad)
dec
retf
scas
int3
jmp
mov
inc
rcr
jbe
fdivrp
dec
sahf
mov
push
mov
mov
pop
pop
jg
aaa
jp
jmp
scas
jmp
mov
call
mov
test
jmp
dec
cdq
(bad)
cmp
inc
mov
inc
mov
(bad)
cmp
sahf
push
jp
jmp
js
push
jp
jmp
jnp
jmp
jbe
call
xchg
call
loope
mov
push
test
call
xchg
call
push
jle
sbb
call
pusha
xchg
jmp
outs
call
stos
xlat
jmp
call
mov
call
xchg
and
mov
call
out
mov
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
ins
shl
push
jl
cli
fldcw
hlt
call
sar
movs
(bad)
xchg
mov
jmp
inc
(bad)
xor
mov
sbb
mov
movs
call
pop
cmp
jo
call
call
lods
call
call
test
push
scas
call
pushf
dec
fwait
dec
sahf
dec
pushf
dec
popf
inc
pushf
inc
fwait
(bad)
cmp
(bad)
cmp
(bad)
cmp
jl
dec
mov
inc
loope
and
mov
call
jno
call
pop
xchg
adc
call
jne
call
arpl
jmp
imul
jmp
lea
call
arpl
call
icebp
jecxz
shl
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
stc
lea
cli
repz
ret
(bad)
ds
mov
jmp
repnz
jg
in
push
loope
inc
mov
nop
(bad)
aas
lahf
(bad)
mov
call
fs
jnp
call
call
test
pop
lahf
scas
call
out
push
lock
mov
out
inc
out
(bad)
mov
loope
call
icebp
push
(bad)
dec
mov
mov
and
scas
call
imul
adc
jnp
call
push
xchg
call
push
enter
(bad)
call
call
pop
cmp
pop
(bad)
call
(bad)
jmp
lock
in
fwait
cmp
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
push
ret
hlt
daa
mov
stc
mov
out
sti
mov
fs
(bad)
push
stos
inc
scas
push
iret
jmp
ret
xchg
stos
(bad)
cmp
stos
jmp
ja
(bad)
cmp
mov
call
arpl
inc
dec
lahf
call
lods
jmp
mov
jmp
mov
jmp
ret
stos
sar
cmps
mov
dec
dec
mov
inc
sar
sahf
ret
mov
call
je
call
fs
call
xchg
call
jp
call
fs
jmp
outs
pushf
jmp
sar
push
mov
(bad)
call
leave
push
sub
sbb
xchg
mov
jg
in
std
jg
lock
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
ins
into
test
cli
xlat
test
hlt
jmp
sar
pusha
lods
ret
dec
jmp
(bad)
inc
ret
sar
inc
movs
ret
cdq
mov
sub
xchg
jmp
xchg
(bad)
cmp
sahf
call
pusha
test
sub
(bad)
cmp
inc
mov
call
movs
call
scas
call
mov
pop
movs
mov
dec
call
inc
xchg
test
ds
stos
(bad)
cmp
cmps
jmp
jl
jmp
imul
pop
data16
call
js
jmp
jnp
jmp
jno
call
fs
dec
nop
mov
pop
mov
mov
ss
mov
call
mov
sbb
mov
push
mov
call
mov
aam
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
cmp
clc
pop
xchg
out
out
xchg
out
push
sar
pop
stos
sar
mov
(bad)
test
icebp
inc
mov
leave
(bad)
cmp
mov
xor
scas
(bad)
cmp
mov
push
sub
sbb
and
jno
push
jns
push
jg
(bad)
cmp
xchg
push
jns
jmp
xchg
jmp
outs
mov
and
call
bound
call
jb
jmp
mov
call
jne
(bad)
cmp
scas
jmp
sar
test
mov
call
mov
call
lea
jmp
(bad)
call
or
add
add
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
cmp
cli
jne
call
in
push
sar
push
test
(bad)
jnp
in
(bad)
fldpi
push
loopne
dec
mov
dec
mov
jmp
jle
jmp
jle
push
test
inc
ret
cmps
enter
mov
call
jae
call
imul
call
addr16
sbb
jmp
jp
jmp
cwde
sar
call
es
call
imul
ja
inc
test
jmp
enter
mov
inc
lods
jmp
outs
xchg
jmp
imul
popf
into
fdivrp
scas
loop
test
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pop
xbegin
jnp
jmp
lock
jp
sar
jge
retf
call
(bad)
mov
dec
fcomip
inc
(bad)
fdivr
pop
stos
(bad)
lea
call
imul
sub
jmp
(bad)
mov
aaa
xchg
mov
inc
mov
int
dec
stos
int
dec
test
call
leave
call
retf
dec
int
inc
mov
mov
jmp
outs
xchg
jmp
ja
call
push
push
mov
dec
(bad)
call
fcos
pop
lods
retf
push
int3
(bad)
cmp
jmp
addr16
and
call
mov
repnz
scas
xlat
sbb
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
pop
enter
(bad)
jae
jmp
in
cdq
jmp
(bad)
inc
mov
movs
(bad)
jg
call
call
(bad)
mov
jmp
(bad)
ds
inc
sahf
mov
jmp
mov
jmp
jbe
jmp
ins
xchg
and
xchg
jmp
and
push
mov
scas
call
jmp
test
jno
(bad)
push
mov
sar
add
dec
test
jmp
imul
data16
call
loop
test
mov
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
cmp
stc
pop
fwait
jmp
cli
sti
mov
out
jp
ret
dec
test
fdivrp
ins
fcomi
call
fsubrp
inc
idiv
mov
xlat
dec
lods
jmp
push
jle
jmp
xchg
mov
sub
jmp
arpl
xor
lahf
inc
mov
pop
mov
into
push
leave
call
mov
popf
shl
dec
mov
out
inc
fdivr
sub
call
xchg
jmp
dec
(bad)
fistp
out
imul
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
stc
inc
fwait
out
mov
out
sti
icebp
pushf
jmp
(bad)
jnp
int
mov
sar
ja
iret
call
into
call
loopne
jne
in
call
in
call
aad
push
inc
mov
(bad)
mov
jno
enter
sar
cmp
stos
(bad)
cmp
xchg
stos
jmp
mov
jmp
in
dec
iret
jmp
jo
loopne
pusha
stos
(bad)
push
test
aas
cwde
mov
jmp
call
cmc
test
test
(bad)
out
push
xor
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pop
(bad)
sti
daa
xchg
loop
mov
out
idiv
xchg
fsub
inc
(bad)
jae
(bad)
jmp
retf
(bad)
fdivr
jno
fdivr
imul
dec
enter
mov
inc
into
(bad)
ret
(bad)
call
fsub
dec
ret
jae
sar
mov
int
xchg
shl
jmp
(bad)
mov
push
scas
retf
xchg
scas
push
mov
sar
inc
mov
call
bnd
clc
fbstp
hlt
xchg
push
mov
mov
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
xor
aad
push
popf
jmp
sti
jmp
mov
jecxz
(bad)
int3
xlat
dec
mov
mov
jmp
call
retf
call
sar
push
cmps
mov
(bad)
jge
xlat
call
(bad)
sar
mov
aam
scas
ret
mov
jmp
inc
mov
dec
(bad)
dec
ret
dec
mov
dec
aad
inc
mov
inc
out
call
imul
popa
sar
mov
retf
repnz
cmp
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
pop
enter
(bad)
gs
out
lods
mov
out
idiv
xchg
loopne
dec
rcr
inc
ror
js
leave
push
into
push
enter
sar
(bad)
aam
jno
(bad)
jmp
mov
jbe
leave
push
int
lods
mov
jmp
int3
jmp
xlat
jmp
fcos
pop
mov
loopne
inc
mov
bnd
in
push
int
mov
iret
imul
mov
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
push
or
add
cli
pop
outs
sar
and
xchg
in
xchg
cwde
out
xlat
movs
out
cli
sti
movs
out
idiv
nop
fucomip
dec
fsub
dec
int
(bad)
jle
aad
jle
sar
jle
sar
jns
into
push
sar
jno
(bad)
jmp
(bad)
ins
(bad)
(bad)
addr16
loop
pusha
(bad)
in
push
(bad)
jmp
jmp
clc
sti
pop
sar
fstp
popf
(bad)
iret
neg
vmovaps
out
or
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
bndstx
add
mov
sti
pop
mov
sti
das
jle
cld
pop
xchg
sti
cdq
xchg
in
xlat
fwait
jmp
cli
jmp
call
repnz
fcomip
inc
fdiv
push
icebp
push
(bad)
jns
idiv
jnp
stc
push
stc
sti
outs
xlat
stc
frstor
clc
lahf
pop
retf
clc
popa
imul
hlt
sbb
mov
pop
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
adc
mov
adc
cld
das
(bad)
into
cli
pop
jae
cli
add
sti
mov
test
cli
fld
(bad)
rol
xlat
stc
movs
push
enter
int3
clc
xor
sbb
adc
pop
ja
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
add
add
add
add
or
push
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
mov
mov
daa
add
add
add
add
aaa
add
add
js
sub
add
add
arpl
outs
add
dec
add
outs
add
add
add
push
ja
outs
add
ins
add
add
data16
je
popa
add
imul
add
imul
outs
add
bound
jns
pop
add
ins
add
arpl
imul
add
outs
add
jo
cmp
xor
sub
add
add
popa
add
ja
cmp
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
xchg
cmp
add
mov
inc
or
add
or
add
add
add
dec
or
add
add
mov
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
dec
inc
inc
push
js
mov
pop
push
push
fnstcw
(bad)
sbb
cmp
fisubr
out
add
xchg
mov
pushf
jae
cmp
inc
lds
addr16
jmp
loop
ds
ja
aas
(bad)
cwde
scas
mov
lods
cli
jmp
clc
popa
rcl
ins
jmp
cld
stc
mov
out
push
xor
pop
jmp
retf
mov
popf
xor
jae
jbe
sahf
mov
mov
scas
pop
xor
out
mov
int
shr
sub
aaa
jge
jb
std
je
xor
std
shr
jnp
out
lahf
mov
ins
ret
call
stc
icebp
rcr
(bad)
daa
(bad)
jl
loope
mov
(bad)
sar
fcmovb
std
jg
idiv
or
jl
jmp
jnp
xchg
sub
mov
sub
ja
pop
push
mov
(bad)
mov
cmp
inc
out
shl
jl
sbb
iret
(bad)
icebp
stc
and
iret
jge
hlt
fidiv
out
outs
mov
cmp
jmp
call
sahf
aaa
lods
stc
(bad)
jle
cwde
out
lea
lahf
fcomip
(bad)
fistp
out
fprem
mul
pop
mov
pop
xor
not
clc
fwait
pop
pop
adc
mov
push
sub
fimul
lds
fcomp
jmp
jo
(bad)
sbb
push
pop
loope
add
scas
xor
movs
pop
pop
je
stos
loope
retf
outs
cmp
movs
mov
ret
jmp
pop
mov
cmps
dec
repz
out
dec
sbb
mov
mov
aas
das
repnz
sub
outs
add
jg
rol
cld
stc
stc
mov
stc
mov
setg
lods
jmp
call
call
iret
push
lock
data16
fwait
sub
pop
ins
mov
loope
outs
dec
les
cmp
inc
addr16
into
mov
loope
xchg
pusha
pushf
aas
sbb
jle
add
iret
and
pushf
lods
jno
pop
test
dec
adc
stos
icebp
cli
clc
sub
mov
pop
mov
jae
pop
and
inc
in
stos
sbb
icebp
sti
jmp
(bad)
jg
cmps
mov
(bad)
fninit
repz
xchg
test
out
vaddss
fldenv
mov
cmp
mov
stos
rcr
sbb
(bad)
adc
cmp
push
xchg
mov
jno
inc
or
stos
jne
pop
(bad)
sub
lods
(bad)
popa
pop
loop
call
in
(bad)
jecxz
mov
ds
adc
or
test
lock
(bad)
sar
inc
addr16
in
pop
mov
(bad)
xlat
hlt
jg
(bad)
repnz
cmc
jbe
data16
scas
sbb
in
xor
cdq
jecxz
arpl
pop
retf
ret
pop
adc
scas
inc
push
ret
and
inc
arpl
push
cmp
loop
out
lea
out
test
ja
jno
inc
xor
lock
mov
daa
out
test
adc
pop
mov
scas
push
mov
dec
enter
cwde
adc
imul
mov
and
and
mov
loopne
sub
inc
repz
int3
xchg
out
sti
(bad)
cld
pop
sbb
fcomi
mov
fisttp
cmc
mov
std
mov
test
jge
mov
push
or
vpslld
cmp
push
bswap
jmp
in
and
in
push
mov
inc
in
das
lds
push
test
in
ds
(bad)
mov
mov
push
mov
fsqrt
enter
add
cmp
cld
repnz
mov
cmp
push
fcom
test
je
sub
dec
repnz
pop
scas
pop
mov
pop
lock
mov
jnp
shr
lods
jg
mov
(bad)
fistp
jmp
and
fs
js
push
cdq
loop
arpl
pushf
or
je
scas
(bad)
fwait
imul
jge
mov
inc
adc
cmp
test
cmp
mov
sub
fidiv
push
lahf
int
sbb
push
sbb
popa
jmp
das
pop
add
nop
lods
mov
pop
jns
stc
sub
icebp
stos
ret
pop
out
mov
or
xor
inc
inc
fmul
xor
scas
(bad)
in
inc
sbb
leave
sbb
outs
inc
loopne
dec
mov
xchg
fadd
or
neg
(bad)
aas
mov
fbld
scas
stc
mov
mov
jecxz
pop
dec
sbb
mov
cmc
or
retf
dec
aam
(bad)
xlat
hlt
fcomp
jle
mov
outs
clc
lock
(bad)
dec
lock
iret
xchg
jno
mov
inc
inc
rol
leave
and
pop
push
sub
outs
cmp
adc
nop
loop
sbb
sahf
aaa
movq
add
pop
test
sub
pop
dec
push
inc
jecxz
mov
push
pop
int
out
fisttp
mov
movs
cmp
ins
and
pop
sub
inc
test
jl
sub
and
push
pop
ja
pop
mov
xchg
lock
in
popa
mov
jo
cmps
add
hlt
fmul
retf
add
sbb
mov
xor
adc
mov
pop
dec
sar
lods
push
ja
js
xor
shl
xor
into
add
xor
push
mov
adc
dec
sbb
xlat
es
dec
pop
sbb
jp
lock
sbb
loop
hlt
and
and
(bad)
gs
mov
adc
test
inc
jae
fsubr
outs
out
sub
popa
push
adc
arpl
out
mov
or
clc
test
outs
outs
fs
mov
out
retf
adc
pop
cmp
(bad)
lahf
inc
cli
ret
clc
fdivr
(bad)
pop
cmps
loope
outs
xor
xor
aad
leave
push
and
mov
(bad)
xchg
pop
scas
sbb
inc
inc
ret
xchg
(bad)
call
test
cmp
stc
mov
in
bound
mov
cmp
or
lods
push
outs
xor
repz
push
mov
adc
adc
dec
and
dec
sbb
add
mov
stos
ret
mov
xor
dec
push
pop
inc
fs
sub
cmp
sar
inc
push
ds
ret
fstp
ins
pop
shl
dec
js
arpl
mov
pop
hlt
mov
ret
sahf
cld
jno
xchg
(bad)
cs
push
cmp
enter
cmp
push
lahf
mov
dec
pop
fwait
xchg
in
inc
inc
in
stos
and
push
mov
icebp
in
fidiv
adc
adc
push
aas
pop
push
js
mov
cwde
push
aas
(bad)
pop
or
out
jecxz
adc
mov
mov
cmc
push
aam
into
or
test
movs
push
popf
test
adc
pop
jne
dec
cmp
test
fld
jmp
and
fstp
test
jmp
jo
fild
mov
std
clts
mov
cmps
out
fmul
push
iret
outs
stc
mov
daa
in
push
adc
mov
jo
xchg
dec
icebp
cmc
gs
mov
or
push
movs
(bad)
and
icebp
mov
push
xor
icebp
repnz
cmp
mov
les
mov
cmp
dec
mov
add
jp
or
pop
inc
mov
and
xchg
(bad)
sub
sub
cmp
mov
mov
loope
mov
or
xor
mov
cmp
dec
movs
mov
add
jl
mov
push
movs
adc
jmp
loop
and
(bad)
xchg
ss
mov
mov
std
jge
lock
jg
(bad)
sub
sahf
ins
cmp
mov
pop
mov
dec
fcmovnbe
mov
out
gs
jecxz
pop
fidiv
inc
jne
scas
push
adc
les
mov
mov
loopne
out
or
repz
jns
fst
and
push
frstor
fnstsw
jb
mov
cmp
aad
mov
push
push
nop
sbb
jmp
jg
xor
jle
pushf
sbb
pop
mov
popf
ret
xchg
push
shl
loopne
and
dec
shr
push
cmps
out
inc
mov
sub
(bad)
icebp
ins
gs
sub
in
cmp
cmp
add
loope
cs
pop
or
out
dec
pushf
cs
jb
mov
sbb
popa
mov
xchg
mov
mov
sbb
outs
cmp
aas
shr
jmp
bound
mov
retf
push
jge
and
scas
sbb
aad
and
(bad)
inc
test
add
jne
adc
daa
retf
nop
sbb
sub
push
inc
dec
sahf
xor
popf
sub
xchg
movs
xor
retf
sub
test
pop
or
mov
xchg
adc
xchg
and
inc
ret
outs
(bad)
in
sbb
jns
adc
idiv
sbb
les
arpl
inc
mov
adc
or
fnstsw
fdivr
push
rcl
jecxz
mov
ja
adc
jnp
lds
je
sbb
dec
xchg
shl
add
jno
ret
cdq
cmp
pushf
lods
xor
hlt
push
in
into
loope
or
arpl
(bad)
data16
push
mov
jbe
icebp
mov
sbb
aas
xchg
push
xchg
jmp
in
push
xor
mov
xchg
jo
fadd
mov
fwait
loopne
fstp
mov
mov
jmp
cmp
cli
movs
mov
stos
mov
inc
cmp
jg
dec
in
inc
pop
enter
pushf
xchg
lahf
xchg
inc
ins
icebp
and
ds
sub
call
push
lea
pop
lea
cmp
push
in
or
xor
dec
push
add
outs
dec
icebp
lock
fimul
mov
fist
push
jg
jge
outs
test
sti
jl
loopne
iret
pop
out
push
ins
jbe
or
pop
jbe
test
clc
xor
ja
lock
jp
pop
jne
loope
(bad)
add
ins
sbb
xchg
xor
sub
adc
sub
or
jno
es
push
push
xchg
lods
mov
aaa
mov
cmc
inc
sbb
into
jns
repz
div
push
cmp
jmp
loop
outs
mov
pop
fs
or
bndldx
or
sbb
pop
add
test
adc
and
push
daa
test
(bad)
fiadd
das
mov
jmp
jl
mov
add
sar
lds
jp
out
addr16
out
loop
test
addr16
std
iret
sub
movntq
out
mov
jle
loopne
out
inc
ins
mov
inc
mov
xor
xlat
jmp
js
mov
(bad)
shr
xor
(bad)
mov
gs
daa
xchg
xchg
dec
push
in
xor
mul
lahf
cmps
pop
ins
inc
jno
mov
stos
xchg
mov
or
ficomp
mov
imul
fidivr
and
and
popa
push
and
out
fdivr
pop
inc
pop
dec
inc
movs
(bad)
mov
mov
or
or
repz
fist
sub
push
stc
retf
mov
cmps
mov
daa
add
push
or
jnp
popa
mov
sub
inc
mov
or
jmp
jl
sbb
repz
mov
or
xor
jge
stos
mov
xchg
or
cwde
cld
loope
fwait
cli
adc
jge
js
femms
cmps
lods
lds
mov
popf
mov
xchg
ins
cmp
clc
mov
aad
jo
bound
ret
in
sub
mov
test
rol
cdq
sub
inc
mov
icebp
loop
and
sub
fdiv
dec
inc
mov
int3
inc
mov
int
pushf
mov
mov
and
inc
cwde
and
push
pop
les
cmp
pop
pop
cmp
icebp
hlt
cwde
sub
sub
das
push
push
aad
call
pushf
or
xchg
xor
xor
sub
mov
loope
cmps
sbb
ror
cwde
lods
sbb
push
push
imul
pop
jecxz
add
movs
and
sti
clc
xchg
clc
loope
push
sbb
jbe
pop
jmp
sub
or
stos
das
dec
adc
dec
repz
push
das
inc
imul
ja
lods
inc
mov
xor
add
aad
push
xlat
pusha
push
push
inc
pop
(bad)
dec
cmp
xchg
sbb
pop
nop
adc
adc
ret
ret
xor
xchg
(bad)
pop
xchg
rcl
push
and
dec
add
cmovnp
mov
ficomp
mov
pop
mov
sahf
retf
adc
lock
movs
adc
and
xchg
mov
adc
retf
mov
movs
and
mov
cmc
enter
(bad)
out
xchg
fcom
mov
test
loopne
add
or
js
xor
jg
das
jmp
jo
(bad)
stos
mov
cmp
ret
add
mov
aam
or
mov
ficomp
(bad)
outs
xchg
lock
and
sbb
adc
jecxz
mov
enter
and
test
pop
jo
add
das
(bad)
xchg
xchg
sti
xchg
sbb
jo
int3
pushf
mov
ret
rcl
sbb
lock
or
std
add
mov
jbe
mov
fs
push
cmp
(bad)
out
dec
js
ret
not
mov
add
pop
push
cdq
out
mov
and
jb
(bad)
loopne
test
xchg
dec
add
cmps
and
jle
fdiv
fdiv
scas
xor
jmp
or
pop
fcom
mul
aad
sti
pop
ficomp
scas
out
mov
push
mov
into
mov
pop
scas
mov
sbb
cmp
xor
dec
push
pop
mov
sbb
imul
dec
fbstp
pop
in
rol
ins
js
sub
in
jp
in
lock
fs
sub
inc
div
sub
or
or
mov
adc
adc
mov
jnp
dec
repz
call
jl
pop
xor
pop
mov
ret
sbb
mov
inc
xchg
mov
xor
push
int
push
xchg
(bad)
int
test
arpl
cmps
jl
xor
(bad)
cdq
aad
xor
loope
lea
js
adc
js
cmp
je
dec
pop
xlat
fcomip
dec
mov
mov
xor
mov
daa
shl
loope
test
ret
sub
push
xchg
adc
adc
push
add
movs
push
sbb
mov
test
cmp
sub
xor
xor
call
imul
mul
loope
or
idiv
icebp
icebp
aam
into
sub
lahf
iret
jmp
jl
test
lock
mov
fmul
mov
rcr
mov
enter
or
mov
sbb
mov
push
xchg
(bad)
test
jbe
into
adc
sbb
mov
sbb
inc
pop
hlt
or
jmp
jp
mov
jns
imul
sub
int
out
daa
jo
jo
fstp
push
lds
retf
xchg
jmp
or
retf
fs
cmps
(bad)
ins
inc
dec
cli
push
adc
push
call
lock
shl
cmp
jnp
adc
or
adc
cmp
cmp
jmp
lods
call
push
pop
jl
mov
mov
mov
loopne
stc
inc
cmp
cwde
adc
adc
mov
daa
shr
xchg
js
jecxz
in
fmul
stc
adc
push
adc
push
bound
sbb
cli
and
movs
aas
rcr
adc
int
jo
jne
call
mov
dec
push
mov
in
cmp
cmp
popf
mov
mov
or
mov
sti
loope
aad
jg
mov
test
mov
outs
sub
ffree
loope
imul
repz
pop
test
ret
cdq
ins
mov
imul
fsub
jge
cmps
jns
pop
test
pop
pop
pop
jecxz
xor
movs
push
jns
stos
loopne
and
dec
mov
loop
and
mov
xchg
lock
push
mov
fisttp
shl
rcl
hlt
fsubr
mov
add
lods
(bad)
jecxz
cmc
js
mov
(bad)
popa
jmp
adc
xor
loop
jmp
mov
or
in
cmp
in
add
inc
add
fs
call
sub
outs
inc
int3
je
pushf
pop
cli
arpl
mov
xor
into
xchg
bswap
ins
and
aad
jecxz
xchg
sbb
aam
mov
sub
jl
xchg
sahf
scas
cmp
test
adc
retf
loope
stc
js
jnp
ret
popf
mov
cmps
loope
jo
fst
cli
mov
test
and
push
shl
out
dec
pop
sub
ret
mov
mov
mov
imul
dec
adc
retf
pop
mov
icebp
ret
inc
jns
test
push
mov
sub
inc
dec
mov
outs
sub
stc
cdq
outs
mov
fild
test
fdiv
add
fwait
xchg
jno
pusha
clc
ins
out
fidivr
adc
mov
adc
inc
mov
(bad)
adc
mov
sbb
sti
or
xchg
sub
outs
push
sub
jp
je
adc
lea
adc
push
pop
(bad)
arpl
dec
aam
ins
cli
add
cmps
jecxz
jnp
sbb
(bad)
into
inc
mov
sub
(bad)
ret
and
sub
cs
fsubr
retf
cdq
or
cdq
sbb
fs
sub
mov
and
sahf
out
inc
je
out
mov
xchg
cdq
dec
inc
or
xor
push
jnp
xor
sub
xor
pop
dec
lock
stos
cmc
xchg
mov
mov
je
sbb
imul
jae
retf
jle
or
xor
push
pop
xchg
aad
mov
arpl
test
nop
les
or
add
sbb
and
sbb
inc
xchg
cdq
add
arpl
pusha
leave
movs
call
cmp
cmp
xchg
mov
xchg
call
pop
mov
mov
(bad)
fidivr
lahf
pop
test
mov
sbb
(bad)
hlt
mov
out
js
(bad)
in
retf
aam
inc
adc
sbb
shl
adc
dec
inc
ret
and
in
dec
inc
mov
adc
push
dec
mov
cmp
je
mov
je
pop
test
jle
and
pop
pop
lahf
scas
inc
loopne
push
sbb
fidiv
sub
mov
jae
mov
rol
sbb
sbb
(bad)
mov
xlat
sbb
cli
inc
or
mov
popa
xchg
add
sbb
dec
es
sub
jo
push
clc
sbb
int
mov
stc
adc
add
in
test
sub
fnstcw
loopne
add
xor
mov
inc
jno
pop
push
push
dec
adc
cld
(bad)
mov
jg
scas
sti
out
pop
jmp
mov
inc
push
push
and
stos
std
jle
inc
out
(bad)
stc
sub
jns
inc
mov
mov
or
imul
adc
loopne
in
push
xchg
clc
pop
mov
xchg
mov
inc
cwde
scas
cmp
mov
(bad)
xchg
xlat
ja
rcl
fst
pop
and
(bad)
xchg
inc
icebp
mov
in
jmp
add
xor
dec
and
and
cmp
daa
loopne
in
bound
mov
add
(bad)
push
sbb
xchg
xchg
cmps
shl
cmp
sbb
ret
xchg
popa
rcl
push
inc
or
pop
arpl
fdiv
cmp
xchg
pop
adc
cli
xchg
std
popf
test
dec
xor
cdq
(bad)
lea
rol
lea
or
fs
movaps
xchg
dec
jecxz
(bad)
popf
ds
out
and
pop
test
leave
lock
repz
fs
sar
lds
mov
sub
mov
scas
xchg
test
push
adc
push
xor
cmp
mov
loop
mov
xor
adc
inc
out
jecxz
call
into
rcl
in
les
push
test
xchg
lock
or
pushf
pusha
mov
es
inc
mov
and
dec
jbe
sbb
stc
inc
gs
cmp
mov
(bad)
ss
rcl
sbb
jo
test
add
fistp
mov
pop
imul
xchg
pop
cmc
retf
dec
sub
inc
adc
xchg
cmps
push
rol
sbb
call
pop
ins
and
lods
cmp
sbb
lods
xlat
jmp
push
pop
int
sbb
in
lods
inc
jmp
jae
pop
jo
jnp
fldenv
aaa
stos
inc
dec
cmp
rcl
out
popf
cmp
pushf
sbb
xchg
inc
stos
popf
and
adc
jae
cmp
test
repnz
ret
out
in
jo
ds
es
mov
mov
or
mov
dec
cmp
in
sub
mov
dec
sbb
dec
mov
cmp
jp
js
fcomp
outs
fs
lea
xchg
ret
push
pop
push
xchg
out
sbb
(bad)
push
aas
and
sbb
pushf
rcr
sbb
adc
ret
adc
pusha
js
pusha
and
inc
sub
jl
push
dec
cmps
pop
mov
int3
(bad)
ds
ror
jns
xchg
sub
loop
jecxz
out
fild
mov
add
jbe
mov
sbb
jne
or
mov
xlat
cmp
xchg
into
pop
adc
sbb
jecxz
adc
cmp
cdq
cmps
jae
movs
xchg
in
test
sbb
sub
add
mov
fist
mov
mov
push
fidiv
add
gs
lds
jge
xlat
xchg
add
vmovlps
xchg
sub
cmp
pop
in
repnz
xchg
ror
cmp
mov
ffree
push
dec
xor
addr16
or
adc
std
or
(bad)
adc
mov
jecxz
inc
mov
push
data16
leave
xor
xor
(bad)
and
cmps
cmp
mov
pop
pushf
das
shr
sbb
cld
xchg
inc
outs
dec
xchg
and
pop
inc
add
sbb
mov
jecxz
push
cmps
retf
inc
xchg
out
lock
cs
cmp
shr
pop
int3
je
inc
mov
or
xor
cmp
jmp
cs
loopne
mov
jl
xlat
test
push
or
sub
cli
enter
mov
jns
mov
scas
movs
das
fimul
loop
pop
fmul
cmp
add
stos
mov
pop
(bad)
imul
test
jle
pop
sub
mov
adc
pop
lock
inc
add
xchg
div
push
sbb
mov
mov
dec
xor
inc
adc
(bad)
dec
mov
dec
jne
mov
aam
pusha
mov
ss
sbb
cmp
call
iret
fucomp
push
xchg
sbb
xor
and
je
or
dec
test
dec
in
mov
add
test
sub
add
xor
sub
mov
bound
popa
jecxz
jmp
adc
outs
sbb
fwait
shl
xor
call
xor
jo
cli
push
cmp
fisttp
jle
or
and
fld
pushf
das
cmc
and
leave
sub
stos
pop
mov
(bad)
rcr
sub
mov
aad
add
scas
paddw
jns
adc
adc
jne
call
xchg
mov
loope
pop
in
push
jo
dec
push
test
mov
dec
loop
xchg
cmp
adc
not
ds
add
jmp
sti
je
sbb
arpl
in
dec
and
out
mov
add
sub
ror
sub
push
(bad)
sbb
inc
fst
pop
sbb
adc
pop
aam
push
jbe
dec
xor
inc
xor
fsub
test
mov
or
in
dec
aad
cmp
jecxz
ret
jbe
cmp
mov
push
call
scas
je
pop
push
inc
(bad)
and
add
sub
push
lods
inc
cmp
stos
not
cld
sub
(bad)
sub
push
mov
or
lea
int
sub
mov
or
dec
aas
shl
lock
inc
push
pop
jmp
mov
dec
mov
cmp
jmp
mov
pop
test
ins
ror
fimul
mov
adc
and
pushf
push
mov
push
or
dec
and
adc
push
retf
ja
dec
jo
inc
mov
daa
sbb
sub
xchg
out
and
add
fwait
scas
into
cli
adc
xchg
int
xor
stos
icebp
movs
jp
mov
push
aas
xchg
fcom
add
fmul
popf
and
cmp
cld
test
dec
mov
dec
sti
dec
and
cmp
popa
add
jg
push
fsub
xchg
inc
push
push
lea
fistp
sbb
adc
std
test
jbe
or
(bad)
mov
adc
mov
adc
pop
mov
sub
leave
retf
mov
inc
and
inc
add
call
mov
inc
das
into
xchg
clc
mov
dec
fisub
test
dec
and
pusha
sbb
in
mov
scas
adc
dec
lds
mov
out
in
mov
inc
test
dec
data16
xor
inc
xchg
xchg
sub
jl
loop
stos
cs
push
js
icebp
iret
pop
push
outs
into
stc
jecxz
inc
xor
out
pop
xchg
mov
mov
rol
rcl
dec
jge
xchg
sub
pop
or
sti
test
cmp
fnstenv
mov
es
add
and
mov
mov
inc
cmp
sbb
ins
xchg
cmp
sbb
sub
mov
jle
xor
xchg
loopne
leave
push
inc
ins
clc
bound
mov
test
push
jp
call
(bad)
(bad)
imul
mov
mov
inc
sbb
jno
xor
inc
push
mov
addr16
sbb
sub
mov
jl
call
push
mov
lds
daa
mov
jns
daa
xchg
xor
loop
stc
lods
inc
pop
das
mov
cmp
pop
mov
jecxz
aaa
addr16
inc
popa
mov
cmps
cdq
(bad)
jmp
pop
mov
(bad)
pminsw
enter
add
cmp
(bad)
add
sub
dec
lahf
mov
lahf
mov
sar
and
cmp
movs
xchg
add
inc
iret
xchg
inc
shr
stos
cmp
jbe
xchg
jns
aas
push
arpl
sbb
sub
sahf
adc
lock
out
and
push
scas
or
jo
jno
cs
stos
mov
push
repz
cmps
cmc
fcomp
xchg
ret
mov
jno
jae
fist
mov
movs
es
aad
add
and
imul
xor
mov
fild
repz
pusha
mov
ss
mov
jne
leave
add
sub
sbb
jecxz
dec
ret
sbb
add
mov
outs
jns
int
cmp
xor
mov
pop
mov
jecxz
aam
inc
xchg
mov
and
mov
xchg
icebp
stos
lahf
and
fnsave
dec
push
sbb
mov
je
or
test
cwde
or
rcl
jb
mov
jne
push
xchg
jns
add
mov
dec
movs
scas
inc
mov
adc
dec
inc
loope
(bad)
inc
in
xchg
inc
cdq
popf
xor
fs
inc
addr16
(bad)
fld
dec
push
adc
mov
mov
cmovae
sub
cmp
mov
movs
sub
out
inc
popa
mov
push
pop
jae
ror
push
out
loop
fwait
retf
les
(bad)
stos
push
rol
shl
inc
cmp
cmp
jno
dec
mov
jl
dec
mov
xchg
mov
dec
mov
arpl
mov
or
outs
call
sbb
and
mov
sbb
jmp
cmp
mov
test
inc
adc
movs
push
pop
fadd
sbb
mov
sbb
into
push
fistp
xchg
jno
mov
mov
test
or
or
fucomi
sbb
rep
push
out
push
shl
jae
mov
test
mov
and
adc
add
cmps
sub
or
neg
cwde
jge
clc
mov
push
mov
mov
push
daa
(bad)
retf
fmul
push
imul
push
mov
(bad)
jmp
jns
or
adc
xchg
loope
mov
shl
sbb
inc
cmps
gs
jbe
in
xor
cmps
loope
cmc
dec
in
or
pop
jbe
and
fs
jmp
adc
test
cmp
cdq
out
jae
inc
fucomi
and
push
dec
jne
mov
lock
xor
dec
inc
and
rol
push
ds
fs
push
out
mov
mov
fild
je
adc
or
nop
outs
cmp
test
mov
xchg
or
dec
jg
imul
adc
adc
push
xor
nop
arpl
gs
xor
pop
cld
xchg
ss
cld
push
mov
push
xchg
cmps
loop
icebp
push
test
int
xor
scas
int3
cs
or
pop
xchg
sbb
rcr
imul
cmps
repnz
mov
das
cmc
mov
jmp
or
int
mov
jge
loope
push
or
add
retf
test
arpl
mov
or
and
push
adc
test
dec
xor
adc
into
movs
dec
(bad)
dec
test
arpl
cmp
pop
push
sub
adc
call
ds
inc
mov
push
add
or
adc
adc
arpl
dec
mov
test
mov
mov
neg
inc
ror
and
icebp
pushf
dec
adc
xor
in
pusha
inc
cmp
daa
loop
mov
data16
test
sbb
dec
ret
jns
in
outs
xor
pop
mov
out
jo
pop
arpl
ror
into
pop
and
xlat
ret
and
daa
ins
xor
clc
dec
mov
test
or
shl
mov
pop
and
push
mov
inc
cwde
sahf
or
arpl
or
jp
jo
jbe
je
in
mov
xchg
cmps
jno
xchg
mov
add
call
jne
pushf
dec
cdq
(bad)
mul
dec
js
push
or
popf
dec
pop
xor
push
addr16
dec
mov
or
lods
or
mov
test
lods
mov
inc
push
loope
add
xchg
mov
daa
arpl
dec
inc
adc
leave
pop
adc
test
outs
add
jno
pop
dec
jecxz
out
adc
cmc
cld
ds
fnstenv
mov
xchg
cmp
xor
jmp
adc
inc
mov
sar
arpl
cmps
out
inc
leave
loop
repz
xor
sub
mov
movs
sub
nop
mov
and
(bad)
push
lahf
js
pop
pop
adc
and
sahf
(bad)
nop
aam
jp
jecxz
sbb
and
push
cmp
and
pusha
sub
jg
sub
pop
clc
stos
inc
push
sti
out
cmp
test
mov
xchg
mov
push
pop
cmp
xchg
cdq
push
lock
vmovntdq
call
xchg
lods
push
adc
(bad)
xor
inc
movs
movs
or
push
pushf
sbb
inc
or
push
js
loop
add
int
jmp
adc
stos
sub
outs
es
cmps
repz
mov
mov
dec
adc
mov
inc
aam
cdq
aaa
adc
jo
icebp
mov
cmovbe
(bad)
lahf
loopne
shl
dec
jecxz
fiadd
sbb
sbb
sbb
adc
push
adc
ins
inc
adc
or
jnp
in
push
shl
xchg
les
jo
push
aas
and
jno
sub
cmp
cs
mov
sbb
dec
pop
mov
cld
sub
pusha
push
stos
add
std
adc
xchg
scas
call
sbb
jae
xor
and
lea
mov
test
xchg
dec
push
imul
gs
mov
cmp
xor
push
mov
clc
mov
std
test
ret
addr16
out
or
stc
lea
and
or
dec
dec
mov
jno
add
pop
(bad)
mov
mov
mov
add
mov
add
cwde
or
inc
xor
in
(bad)
push
adc
sub
call
ins
leave
jno
inc
mov
push
popf
movs
loope
xor
mov
inc
es
in
cmp
pop
test
les
enter
jo
lahf
push
sbb
(bad)
jp
out
xchg
iret
(bad)
leave
inc
popf
dec
add
add
(bad)
jge
bound
mov
iret
out
mov
xchg
inc
xchg
mov
call
in
aam
mov
mov
lds
mov
scas
mov
mov
cdq
mov
jns
or
call
pop
xor
ss
pop
ret
ror
mov
fadd
stc
pop
cmc
je
aaa
arpl
inc
in
movs
xor
push
xchg
mov
xchg
in
inc
scas
in
push
pop
repz
je
rcr
pushf
hlt
xchg
rol
or
xchg
or
dec
in
mov
inc
cmps
mov
adc
fist
and
fst
mov
jo
jle
mov
mov
je
jecxz
ret
dec
test
inc
inc
loopne
cmp
(bad)
icebp
int3
dec
push
or
sbb
and
(bad)
jp
fsubr
shr
and
mov
sti
outs
sub
xchg
inc
add
icebp
retf
jnp
pop
dec
inc
addr16
retf
dec
clc
test
mov
inc
fsubr
xchg
in
inc
popf
jo
add
loope
xchg
lahf
pop
push
stos
jmp
pop
leave
ret
dec
xor
mov
jl
mov
xchg
jnp
add
xchg
inc
mov
sbb
jecxz
sbb
adc
adc
jmp
sbb
mov
sbb
ret
movs
rcl
mov
sub
mov
into
mov
mov
test
leave
mov
data16
sub
mov
or
lea
or
mov
adc
mov
inc
fst
inc
pop
xchg
or
sahf
mov
push
iret
mov
push
aaa
stc
ror
xor
add
xchg
je
sub
adc
sub
push
(bad)
xchg
jge
lock
adc
xchg
je
dec
(bad)
nop
inc
mov
mov
xor
and
popf
pop
add
or
sub
hlt
dec
xchg
add
xchg
loopne
loopne
xchg
inc
dec
add
mov
shr
mov
xor
push
test
mov
or
test
jecxz
xor
adc
pop
das
aad
add
or
ins
fyl2xp1
out
jb
not
rcr
pop
sbb
inc
push
outs
mov
dec
push
mov
ins
inc
pushf
retf
push
xchg
test
mov
xchg
enter
or
jnp
inc
ins
call
cmp
(bad)
jae
sbb
je
in
ret
movs
mov
sbb
popf
cmp
xchg
test
repz
pop
dec
push
dec
mov
hlt
cdq
mov
retf
leave
mov
scas
bound
adc
sub
lahf
loopne
sub
neg
add
pop
ins
pop
mov
jg
ins
cmps
xor
add
sub
sub
adc
out
and
enter
in
xlat
test
sbb
sbb
dec
data16
sbb
fs
mul
and
fs
retf
in
lds
xchg
arpl
adc
xor
cwde
add
adc
leave
sbb
jns
jb
fidivr
loope
and
dec
std
jno
dec
pop
mov
dec
retf
jo
bound
pop
lahf
rol
int
(bad)
mov
pop
or
cmp
add
fwait
xchg
xor
xlat
pusha
(bad)
cmp
jecxz
xchg
dec
sbb
dec
arpl
or
pop
adc
and
ss
sbb
sub
jb
aaa
mov
shl
inc
retf
xchg
pusha
dec
sbb
xor
xchg
ror
adc
pop
push
aaa
test
shr
push
in
in
or
fist
test
or
jp
arpl
ja
xor
ja
(bad)
push
jo
jo
out
ror
fidivr
or
add
xor
pop
push
mov
arpl
sub
dec
(bad)
lock
mov
mov
cmp
jmp
pop
cmc
out
sub
xchg
mov
adc
adc
xchg
sub
lods
xchg
dec
aaa
sbb
mov
(bad)
and
jo
clc
cli
or
ds
daa
xor
rep
es
jns
scas
out
inc
and
hlt
xchg
ins
sbb
(bad)
sub
add
cmp
jge
mov
adc
inc
jmp
cmp
adc
ret
fcom
stos
ins
lds
into
add
mov
cmp
stc
and
nop
ret
pop
xchg
inc
rol
ja
pop
jecxz
lods
inc
test
mov
(bad)
and
dec
scas
out
retf
mov
mov
inc
mov
cmp
cmps
or
in
inc
test
mov
pop
int
jmp
divps
ror
mov
jbe
fnstsw
push
jbe
ror
push
mov
out
jo
jecxz
inc
jge
xor
(bad)
imul
cmp
dec
dec
mov
(bad)
mov
mov
inc
add
xchg
loop
stos
int3
ja
cs
sub
fst
xlat
mov
pop
or
pop
and
mov
gs
nop
add
in
dec
in
jno
cmp
lahf
add
mov
sbb
shl
or
daa
xor
push
ja
pop
push
outs
mov
inc
clc
in
sub
xchg
mov
enter
fsub
cmp
dec
adc
xchg
and
fs
sbb
inc
pusha
inc
and
jno
sub
retf
test
adc
adc
mov
jno
pushf
cmp
mov
es
icebp
fild
adc
mov
pusha
adc
xor
stos
cmp
loope
cmp
fist
ss
pusha
jbe
arpl
sbb
scas
mov
pop
sbb
lds
push
aam
retf
mov
push
xor
mov
(bad)
ja
add
mov
add
out
lock
test
ror
fcom
rcr
inc
and
or
retf
pop
retf
mov
test
dec
and
push
push
push
fs
movs
cmp
inc
ins
mov
pop
push
call
push
lahf
xchg
mov
clc
in
mov
rcr
call
fs
push
cmp
aaa
mov
sub
cmp
(bad)
and
ins
xchg
(bad)
or
jg
jb
push
ror
sbb
repz
jecxz
mov
addr16
mov
add
add
cmp
aas
sbb
mov
mov
arpl
data16
cmp
sub
pop
addr16
sbb
cmc
add
cmp
rcr
mov
dec
aam
dec
rcl
and
cmp
call
pop
dec
inc
lods
pop
add
shl
sub
fldenv
mov
or
(bad)
jae
movs
xor
daa
dec
sbb
jge
adc
sbb
xor
fsub
(bad)
pop
nop
adc
xlat
arpl
gs
dec
sbb
std
jecxz
xchg
jge
xor
fild
and
mov
iret
mov
addr16
inc
inc
sbb
inc
nop
xor
pop
repz
out
iret
add
mov
repz
mov
mov
xor
inc
and
pop
pop
jle
push
bound
push
and
out
or
cmp
push
loope
jecxz
xor
leave
rcl
out
iret
cmps
ret
mov
sub
js
aam
xchg
loope
mov
jmp
sub
cmp
mov
sub
and
outs
mov
ins
pop
add
sub
jbe
pop
test
push
(bad)
push
arpl
cdq
lods
rcl
out
retf
dec
xor
sbb
fsubr
mov
dec
sbb
pop
xchg
mov
and
les
push
add
loop
cmp
pop
loope
jnp
adc
mov
inc
or
add
sbb
jp
loopne
movs
sub
cmps
dec
fs
ret
adc
jo
and
add
sub
pop
adc
and
icebp
jbe
push
(bad)
ins
cwde
imul
fwait
jmp
and
jg
and
mov
pop
cmps
mov
sbb
mov
and
ret
pop
or
mov
mov
push
mov
mov
(bad)
cmovge
or
cmp
jmp
mov
rcl
xor
mov
fsubr
add
mov
cdq
mov
ret
push
pop
push
push
or
jo
nop
cmp
mov
and
fwait
xor
dec
rcl
cmps
arpl
loop
icebp
and
cmp
pushf
push
cmp
jne
mov
pop
and
js
cli
mov
fmul
or
ret
push
arpl
in
jne
push
outs
push
and
pop
sbb
hlt
fimul
mov
mov
mov
jecxz
mov
ret
or
mov
adc
push
jno
pop
movs
cmp
ret
mov
aaa
(bad)
lock
sbb
xchg
push
ja
dec
inc
cmp
sahf
dec
adc
jp
xchg
fmul
dec
push
or
jp
or
fldcw
pop
mov
clc
cmp
nop
jmp
rcl
adc
pop
push
cmp
popa
scas
and
pop
xchg
mov
fsub
xor
ret
lods
test
sahf
fisub
pop
or
dec
rol
sbb
aad
loopne
and
push
dec
inc
jnp
add
push
jl
push
inc
sub
jmp
mov
dec
and
jl
aas
sbb
jmp
cwde
and
push
imul
ins
popa
pop
push
xchg
mov
sahf
out
jo
sub
jg
out
jg
inc
nop
xor
in
cmps
dec
mov
pop
rcr
dec
and
pusha
mov
shl
repz
inc
call
inc
das
inc
nop
fst
cmp
inc
mov
dec
inc
inc
call
or
lahf
or
cmp
push
pop
push
loopne
cmp
pusha
mov
sub
ss
xchg
xor
or
ins
sbb
ret
popf
xchg
fldcw
inc
out
dec
jne
pushf
mov
and
dec
pcmpeqw
sbb
and
xchg
inc
fidivr
fist
dec
shl
adc
inc
arpl
bound
add
xchg
(bad)
cmps
cmp
fldcw
subps
loope
(bad)
icebp
xchg
fdivp
xchg
pop
sub
ja
pusha
xor
xor
lds
fdiv
mov
(bad)
ds
stos
mov
es
pop
mov
aaa
sub
(bad)
in
movs
shr
call
pop
enter
scas
cmp
add
out
mov
cmps
xor
push
pushf
xchg
cmps
stos
repz
cmps
mov
loopne
mov
cdq
loope
test
aaa
inc
jno
adc
dec
xor
mov
adc
add
dec
mov
inc
mov
loop
sub
jmp
inc
mov
push
sbb
inc
xchg
xchg
or
dec
mov
test
adc
sbb
add
das
addr16
test
ficomp
sbb
cmps
pop
xchg
xchg
push
push
or
aad
je
mov
bound
and
jo
mov
xchg
mov
pop
fld
sbb
loope
mov
adc
mov
cmp
fild
add
mov
inc
push
fst
stos
(bad)
mov
cdq
hlt
mov
ficomp
mov
add
dec
mov
ins
mov
pop
jmp
mov
inc
pop
mov
adc
loopne
stos
or
sub
leave
dec
or
mov
push
jo
pop
mov
ret
imul
pushf
ret
mov
out
in
sbb
imul
test
push
sbb
xlat
rol
push
jmp
cmps
rcl
loopne
mov
adc
fs
dec
push
fcom
xor
cmp
wbinvd
adc
or
fiadd
jg
xor
fstp
xchg
xor
ins
or
inc
cwde
xchg
fsubr
fs
call
(bad)
cmp
push
pop
sbb
outs
pop
adc
xchg
movs
adc
dec
ja
xchg
int3
fldenv
fidiv
pop
dec
imul
mov
pop
leave
mov
push
stos
cli
mov
arpl
test
std
loope
jg
mov
in
xchg
mov
in
fwait
psubusb
cmp
enter
or
(bad)
ret
pop
stos
(bad)
mov
pop
clc
mov
bound
pusha
sbb
aas
inc
pop
dec
jo
(bad)
mov
add
leave
mov
cmp
rcr
push
int3
ins
or
mov
test
clc
mov
mov
xchg
or
and
or
movs
lea
jns
fisub
xchg
xlat
shl
jnp
rcr
jb
es
not
cs
sub
push
ret
out
jae
clc
retf
mov
sbb
shl
les
test
rcr
sub
call
(bad)
cli
mov
rcl
mov
mov
adc
(bad)
pop
xchg
imul
cdq
xor
pop
in
cmps
jb
xor
mov
dec
pushf
cmp
das
clc
mov
pop
mov
inc
dec
xchg
add
add
push
sbb
push
sub
mov
xor
sbb
(bad)
xchg
jmp
scas
movs
jmp
sti
xlat
and
aas
sbb
outs
imul
pop
mov
mov
inc
ja
xor
pop
xor
xchg
test
cmc
push
rol
sub
js
ins
test
aad
stos
mov
loopne
mov
adc
fisub
and
(bad)
enter
inc
and
push
movs
and
data16
cld
cmp
add
fwait
popa
gs
cmp
ja
pop
in
push
pusha
int
xor
mov
inc
jle
or
test
dec
ret
lds
sbb
loopne
cli
(bad)
fild
jecxz
sti
cli
bndldx
jg
clc
fisttp
xor
push
xchg
(bad)
xchg
xchg
in
push
push
aas
adc
(bad)
mov
mov
nop
adc
ud2
popf
or
out
sbb
inc
ss
add
pop
mov
mov
dec
inc
or
ds
xlat
rol
scas
add
and
cmp
jne
loope
shl
pop
repz
xor
and
sub
mov
popa
stos
cmp
sub
aas
mov
xor
out
(bad)
in
pop
retf
cs
hlt
lahf
stos
xor
jo
fistp
mov
popf
push
in
jecxz
test
xor
stc
repnz
pop
dec
sahf
mov
pop
jns
mov
out
imul
add
push
dec
rcl
or
cmp
stos
iret
mov
pop
lods
movs
leave
dec
call
out
xor
(bad)
pop
mov
pushf
jmp
mov
or
bound
jmp
mov
enter
mov
mov
xchg
movs
xchg
test
scas
cld
iret
(bad)
ja
jmp
fidiv
fist
scas
inc
(bad)
adc
das
aas
cmp
test
test
jo
outs
sbb
js
and
dec
xchg
inc
jbe
push
cmp
and
dec
mov
ret
fwait
add
and
add
lods
fldcw
inc
paddd
and
xor
xchg
into
or
test
and
jp
jmp
mov
inc
jnp
out
outs
mov
aam
jbe
inc
sbb
or
xor
pop
call
mov
hlt
cmps
xor
psubusw
(bad)
cdq
cmp
shr
ja
retf
aaa
mov
sti
leave
mov
es
int3
jbe
lock
push
icebp
push
sbb
lock
cs
or
mov
jo
push
or
pop
push
lock
dec
xor
inc
cdq
sti
add
mov
jo
pop
or
xor
cwde
cs
mov
pop
and
es
pop
std
out
pop
popf
scas
xor
div
std
pop
cld
push
arpl
mov
sub
sub
xchg
scas
lock
not
pop
leave
pop
xchg
push
xor
out
sbb
xchg
inc
mov
fs
out
mov
shr
push
xchg
lock
sti
xchg
rcr
mov
add
jne
push
ins
xchg
fwait
clc
sub
mov
sbb
cld
in
push
cmps
xor
mov
loopne
std
jecxz
sti
(bad)
mov
sbb
mov
andnps
xchg
dec
cmp
or
jmp
lds
push
fisttp
call
aaa
(bad)
xchg
adc
jl
xor
std
(bad)
xchg
sub
adc
inc
stos
xchg
fwait
into
xlat
repnz
out
je
pop
xor
(bad)
ja
xor
outs
mov
sti
sti
sbb
ret
inc
fld
mov
aam
mov
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
jbe
pop
add
mov
inc
or
add
or
add
add
add
add
or
add
add
js
cli
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
xchg
add
mov
add
std
push
add
add
add
mov
add
jae
test
add
cmp
inc
push
push
push
push
inc
inc
and
outs
imul
(bad)
popf
xchg
ja
push
xlat
push
xchg
mov
xor
push
xchg
mov
xchg
pop
inc
popa
cwde
sbb
add
xor
and
call
push
and
inc
mov
adc
mov
and
sub
sbb
sub
inc
(bad)
mov
repnz
jecxz
outs
in
mov
mov
pop
pop
add
push
dec
add
cmp
jmp
in
add
sub
dec
push
inc
mov
adc
retf
int
sahf
and
pop
add
lock
mov
xor
movs
pop
jmp
add
fwait
mov
sbb
pop
mov
and
iret
mov
sbb
adc
mov
popa
xchg
or
mov
mov
lds
cmps
mov
fldenv
adc
inc
les
mov
adc
sub
aaa
loop
push
push
xor
add
ins
pop
jo
mov
adc
mov
adc
and
in
loopne
or
fcom
loopne
or
xchg
jb
dec
iret
loope
adc
add
fst
ficomp
movs
jo
add
add
sub
rcl
cdq
mov
cld
pop
xor
fcmovbe
inc
inc
mov
mov
mov
xor
xor
stos
push
push
outs
dec
(bad)
inc
jp
clc
mov
mov
scas
cld
rcr
add
mov
repz
sub
(bad)
cmp
and
cmovge
mov
inc
mov
push
xchg
adc
hlt
paddw
mov
and
out
(bad)
repnz
icebp
dec
popa
mov
sub
movs
xor
mov
pop
pop
(bad)
jne
push
inc
pushf
js
lahf
ret
adc
mov
mov
(bad)
out
mov
neg
(bad)
movs
lds
adc
mov
jle
pop
sub
adc
sar
lds
mov
and
loope
xchg
mov
out
aaa
std
shl
fwait
lock
and
repnz
test
add
sub
call
lods
sub
clc
adc
or
push
dec
add
or
inc
push
fadd
inc
xor
or
sub
sbb
push
cmp
sbb
pusha
adc
and
mov
popa
and
inc
and
rol
ud1
push
adc
lds
adc
adc
shl
sbb
sub
push
cmp
popf
xchg
push
xchg
ror
sub
ret
or
or
add
push
into
test
loopne
jo
fadd
pop
test
loopne
lock
aas
and
adc
sbb
les
js
(bad)
lods
inc
mov
inc
mov
xor
sbb
ins
push
sahf
test
adc
mov
mov
push
sub
jp
aaa
push
arpl
sbb
mov
add
push
mov
inc
mov
das
mov
scas
xor
or
mov
bound
xor
mov
adc
ds
sbb
sbb
adc
mov
pop
jge
sbb
or
push
in
pop
in
adc
sti
push
inc
les
mov
(bad)
stos
rcr
es
js
mov
(bad)
jcxz
lock
clc
inc
jl
(bad)
cmp
mov
adc
or
test
es
and
lock
dec
and
adc
jno
mov
js
js
cmp
dec
xchg
and
xchg
pop
dec
shl
imul
jmp
dec
(bad)
and
xchg
mov
jb
stc
add
adc
lea
sub
inc
bound
mov
ror
mov
scas
fs
or
jmp
xor
sub
aam
test
and
rcl
push
imul
and
push
movs
cmps
fs
pop
xor
ins
cdq
add
(bad)
sub
inc
popf
loop
popa
push
ss
sbb
pop
sub
push
or
fwait
jmp
mov
gs
leave
xchg
retfw
(bad)
enter
movs
and
push
dec
cmp
cmps
mov
imul
lods
dec
xchg
jae
jecxz
adc
xchg
jnp
dec
xchg
ja
dec
xchg
fbld
add
nop
movs
mov
loope
ret
jmp
dec
(bad)
das
mov
sub
sub
scas
cmp
xchg
scas
push
movs
je
imul
movs
pop
scas
jl
jns
test
sub
stos
repnz
cs
ja
cmps
shr
jmp
inc
push
dec
push
mov
jmp
mov
jne
cmp
pop
mov
push
inc
inc
ret
dec
and
inc
jecxz
es
xchg
mov
mov
jae
dec
pop
sub
push
cmps
(bad)
xchg
mov
mov
jbe
jbe
test
mov
or
popf
push
popf
pop
mov
mov
fstp
jp
sahf
test
pop
(bad)
fidiv
pop
fist
stos
mov
ins
pusha
ins
shl
xor
xor
cmp
data16
mov
lea
lea
sbb
xor
xor
push
shr
fist
(bad)
mov
hlt
ja
cmp
fldcw
stc
push
repz
retf
hlt
xchg
jno
in
pop
jbe
and
mov
mov
xchg
and
fimul
sub
stos
(bad)
push
inc
gs
dec
sbb
(bad)
sbb
mov
fcomp
stc
int
shl
fdecstp
mov
aam
in
in
in
retf
(bad)
in
aam
cwde
jbe
jbe
div
sti
add
mov
xchg
xchg
mov
mov
(bad)
dec
daa
pop
cmps
and
mov
pushf
stc
into
in
into
repz
into
mov
inc
scas
add
outs
mov
(bad)
fcom
fcomp
addr16
pushf
repz
jnp
js
repnz
push
repnz
jnp
jp
jns
repz
cmc
and
add
push
sti
cmp
aad
in
jbe
sar
mov
pop
rcr
paddb
or
push
pop
adc
arpl
xor
mov
lock
nop
imul
cmp
clc
dec
lock
out
rcl
ret
xor
mov
mov
mov
jo
lock
ror
jecxz
jne
xlat
and
push
fsubr
mov
lods
pushf
mov
pop
movs
mov
aad
stos
push
push
lahf
mov
mov
xchg
push
mov
hlt
addr16
loop
loop
jecxz
pop
lods
mov
jbe
jnp
arpl
sub
dec
(bad)
fcmovnb
xchg
lds
fsub
je
lods
dec
pushf
loope
jo
mov
jmp
and
imul
in
lock
jns
imul
jmp
mov
pop
xor
mul
aaa
gs
sbb
ror
push
mov
cmp
stc
sub
inc
mov
ss
mov
jnp
fs
jnp
mov
push
imul
repnz
repz
lods
jae
push
mov
mov
or
fiadd
mov
cld
mov
push
fwait
ret
aaa
ja
sub
loop
movs
movs
push
mov
aad
imul
aam
out
mov
in
out
stos
mov
sub
pop
pop
sub
jle
ret
cli
(bad)
jmp
ficom
mov
je
dec
int3
dec
fmulp
loope
push
mov
in
(bad)
out
neg
fst
das
das
sub
daa
iretw
xchg
mov
jne
or
jnp
sub
mov
push
mov
pop
jecxz
rcl
pop
mov
jnp
sar
std
lods
jne
jne
jne
push
jo
fsubr
shr
cmp
dec
arpl
fbstp
adc
mov
sbb
fldcw
xchg
rcl
mov
xor
call
jmp
xor
mov
pop
add
test
sahf
jle
sti
std
lock
jecxz
daa
sbb
pop
jg
cld
mov
aam
jne
je
jbe
jbe
jbe
jbe
sahf
hlt
ds
ins
fcmovnu
(bad)
mov
test
jnp
hlt
or
dec
rcr
popf
dec
aas
aaa
jae
loope
js
dec
iret
std
or
pop
outs
cmc
push
test
hlt
mov
movs
or
jge
das
fistp
jne
out
leave
stos
mov
jne
pop
hlt
mov
fs
push
sti
and
(bad)
jne
jmp
aaa
lods
outs
je
cs
cmp
in
je
cmps
jmp
dec
mov
outs
pop
mov
jo
lock
xchg
call
cmp
push
out
mov
loope
mov
pop
inc
shld
push
cmp
jl
lock
iret
ins
mov
pop
(bad)
cli
pop
pop
aas
mov
test
out
daa
or
stos
dec
ss
cdq
dec
popf
call
ror
data16
(bad)
mov
mov
jae
lods
jg
bound
add
dec
pop
retf
hlt
push
stos
sahf
mov
push
pop
das
int3
pop
mov
sub
lock
or
mov
sub
call
repz
shl
add
call
or
pop
jae
add
adc
add
adc
add
cmc
inc
dec
inc
inc
push
js
in
mov
xchg
xor
fidivr
inc
adc
and
jnp
and
mov
sbb
test
dec
aaa
ss
mov
es
and
je
xchg
leave
pop
mov
xor
jmp
mov
pop
jmp
lahf
jae
jnp
fisubr
cli
dec
add
mov
push
cmp
mov
mov
arpl
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
ret
push
cmp
mov
push
cmp
or
retf
pop
mov
sti
jg
(bad)
jae
ins
lds
out
push
lock
cld
out
jmp
out
or
pop
cmp
imul
sahf
bound
mov
fstp
call
aaa
jecxz
in
lock
scas
cmc
sar
lods
pop
mov
mov
xor
or
int3
or
aaa
fwait
xor
retf
jl
dec
popa
push
cdq
stc
dec
xor
push
or
pop
jg
xlat
add
mov
dec
mov
aas
fistp
int
cli
iret
(bad)
cld
dec
jne
imul
xor
xor
das
gs
mov
mov
xchg
ja
jae
daa
call
mov
mov
or
ret
push
pop
repz
pop
icebp
call
(bad)
mov
inc
xor
daa
mov
add
cmc
xor
push
rol
lahf
in
jl
shl
lods
mov
adc
outs
or
sbb
pop
rcr
std
(bad)
jae
(bad)
addr16
iret
shl
iret
test
test
fwait
dec
cdq
xchg
fwait
neg
gs
int3
jl
sbb
stos
xchg
mov
jmp
xor
(bad)
jae
xlat
cmps
fsubr
sti
jnp
lahf
outs
mov
(bad)
sbb
sub
shr
mov
pop
idiv
in
mov
pop
sbb
aas
std
jmp
ret
pop
cmp
neg
ins
or
inc
psrad
(bad)
xchg
sti
fadd
in
mov
call
ror
xchg
sub
(bad)
pop
imul
push
(bad)
addr16
iret
shl
iret
test
test
fwait
dec
cdq
xchg
fwait
neg
gs
int3
jl
sbb
stos
xchg
mov
jmp
xor
(bad)
jae
xlat
cmps
fsubr
sti
jnp
lahf
outs
mov
(bad)
sbb
sub
shr
mov
pop
idiv
mov
jmp
dec
and
sti
(bad)
(bad)
mov
(bad)
std
cli
xlat
mov
cli
aad
jg
retf
pop
jle
loopne
gs
fucomp
jle
sbb
add
add
cmp
add
stos
ja
xor
push
int
imul
jb
js
xlat
cli
test
xchg
adc
aaa
gs
stc
cmp
xlat
icebp
dec
cwde
popa
push
pop
xchg
cmps
xchg
imul
mov
int3
ja
icebp
mov
out
(bad)
mov
imul
mov
pop
cli
stc
out
int3
imul
popf
add
popa
(bad)
pop
popa
push
fcom
int3
inc
fcom
int3
inc
imul
jno
xchg
add
push
fimul
xor
xor
xor
xor
dec
lahf
lahf
std
in
addr16
leave
dec
jle
enter
mov
aas
(bad)
icebp
arpl
imul
imul
sbb
jge
(bad)
push
lahf
daa
mov
test
push
xor
adc
outs
or
mov
mov
mov
mov
xor
or
int3
or
aaa
fwait
xor
retf
jl
dec
popa
push
cdq
stc
dec
xor
push
or
pop
jg
xlat
add
mov
dec
mov
aas
fistp
int
cli
cmps
adc
jge
(bad)
out
fmul
lods
out
pop
inc
jg
push
shl
mov
or
xor
in
test
enter
(bad)
lock
or
jp
sbb
pop
push
test
sbb
mov
push
mov
add
cli
test
jp
mov
bound
std
test
clc
ror
mov
clc
lock
bsr
jg
std
push
lock
clc
jecxz
addr16
lahf
(bad)
stc
lahf
cmp
jmp
(bad)
jmp
call
movs
lock
out
add
push
shl
xlat
(bad)
xor
int
cli
fisubr
mov
mov
lods
(bad)
cmps
adc
rcr
std
(bad)
jae
(bad)
addr16
iret
shl
iret
test
test
fwait
dec
cdq
xchg
fwait
neg
gs
int3
jl
sbb
stos
xchg
mov
jmp
xor
(bad)
jae
xlat
cmps
fsubr
sti
jnp
lahf
outs
mov
(bad)
sub
call
int
int
sbb
js
pop
dec
or
pop
retf
push
lea
mov
dec
jg
sbb
pop
out
mov
(bad)
pop
xor
xchg
or
pop
nop
mov
or
mov
mov
gs
mov
jg
outs
jp
xor
xor
xor
outs
mov
pop
jns
xchg
mov
into
popf
cmp
pop
jl
(bad)
fnstsw
js
out
out
mov
ret
pop
(bad)
mov
pop
push
dec
sbb
scas
mov
or
and
sbb
push
add
sbb
mov
jge
xchg
pop
ret
pop
mov
cwde
push
sub
mov
out
mov
mov
cld
int
dec
retf
int
lods
iret
xor
rcl
push
mov
not
icebp
jge
mov
jb
sub
push
adc
div
push
mov
pushf
fcompp
mov
mov
mov
mov
aas
fistp
int
mov
add
div
outs
(bad)
and
call
shr
arpl
(bad)
push
xlat
shl
rcr
cmps
je
lods
pusha
xchg
test
jno
mov
(bad)
jns
in
cmc
pop
or
mov
push
pop
pusha
and
add
push
cmp
idiv
and
shl
jmp
call
lock
mov
pop
cmp
clc
icebp
jecxz
cmp
ja
sbb
pop
mov
cmp
jg
clc
ins
sbb
(bad)
idiv
xchg
pusha
xlat
add
cmp
repnz
jbe
je
cmps
xchg
push
int
push
mov
jge
repz
inc
jae
pop
iret
dec
sbb
jne
adc
adc
pop
outs
fisubr
xchg
stc
mov
popf
mov
lods
in
hlt
pushf
push
or
and
jg
cli
std
cld
push
sbb
clc
lea
cmp
jg
hlt
repz
cwde
xlat
int3
das
stc
inc
jne
div
fdivr
mov
call
xchg
lods
iret
mov
push
out
cld
push
pop
icebp
int3
jae
mov
fmul
xor
(bad)
jo
cs
fcom
ins
repnz
cmps
popa
cmps
push
aad
movs
mov
mov
push
inc
gs
pusha
into
sar
aaa
cld
pop
test
das
or
movs
mov
push
and
fmul
pop
icebp
dec
fcos
adc
mov
ror
sub
mov
outs
fnstsw
jno
lock
in
fidiv
mov
pop
mov
cmps
sbb
fadd
fdiv
sub
in
sub
mov
popa
inc
ror
push
shl
mov
xor
xchg
fwait
icebp
lods
jb
js
xlat
cli
enter
mov
out
mov
fwait
xor
retf
jl
xchg
jmp
es
xor
int3
fild
fdivr
sub
cmp
js
add
push
not
mov
mov
ror
and
mov
(bad)
daa
mov
pop
cmp
scas
and
stc
ret
inc
movs
pop
lahf
arpl
sub
(bad)
sub
call
int
int
mov
or
sub
sub
sub
xor
(bad)
mov
xchg
jecxz
test
fdiv
xor
cdq
(bad)
mov
add
dec
sub
pushf
dec
(bad)
mov
jg
fcom
add
das
mov
push
adc
jp
test
or
fdivr
xchg
test
or
(bad)
pop
jg
repz
pop
mov
pushf
cmp
sbb
cmc
jnp
mov
mov
inc
push
push
xor
rcl
xchg
adc
add
loope
mov
xchg
adc
mov
add
ds
imul
or
pop
push
adc
inc
push
xchg
lock
mov
cwde
push
sub
mov
out
mov
mov
cld
int
dec
retf
int
lods
iret
xor
rcl
push
mov
test
jns
pop
xchg
sub
outs
jle
xor
and
(bad)
or
fldenv
lock
jle
das
xor
xor
xchg
popf
add
mov
mov
or
call
mov
mov
inc
out
mov
and
mov
mov
outs
fidivr
ins
std
clc
or
mov
xor
and
push
mov
jmp
or
(bad)
dec
ins
shr
mov
mov
and
and
dec
jbe
neg
outs
outs
mov
dec
popf
cmp
pop
pop
mov
test
popf
adc
ins
test
mov
movs
and
and
adc
das
inc
in
dec
aad
jo
shl
pushf
cmp
fadd
imul
or
mov
scas
adc
test
add
jge
or
add
inc
sar
fisttp
push
mov
jge
xchg
or
xor
retf
jl
xchg
jmp
es
xor
int3
fild
fdivr
sub
cmp
js
inc
shr
retf
cld
data16
sub
lahf
or
push
mov
inc
movs
dec
shr
jl
xor
mov
cmp
cmp
retf
test
inc
inc
jle
adc
(bad)
mov
xchg
cld
mov
add
div
outs
(bad)
and
sub
jge
adc
repz
cli
mov
add
inc
cmp
push
sbb
jne
out
iret
scas
pop
mov
pop
mov
push
das
mov
mov
aaa
fistp
sbb
into
clc
jl
dec
(bad)
xor
jmp
mov
ins
or
add
loop
and
pop
xor
mov
addr16
fidivr
adc
pop
sbb
xchg
jge
push
sub
mov
popa
iret
sahf
sub
pop
ins
and
and
xchg
pushf
xchg
test
cmps
dec
in
fdivr
lds
imul
aas
mov
mov
push
icebp
jmp
and
adc
xor
or
push
mov
xchg
or
xor
retf
stos
push
xor
int3
push
cwde
adc
pop
outs
fisubr
xchg
stc
mov
popf
mov
cli
cmp
es
lahf
dec
mov
xchg
test
mov
push
mov
adc
mov
imul
add
iret
out
loopne
rcr
bnd
adc
out
pusha
mov
out
std
(bad)
pop
call
cwde
pop
jbe
pusha
sti
sahf
out
int
test
pop
xor
and
out
cmc
push
or
dec
pop
push
pop
jg
cmc
jnp
and
xchg
sahf
into
iret
leave
xchg
daa
jno
enter
mov
mov
out
fnstcw
cmp
cld
cmp
pushf
cmp
call
popf
and
retf
dec
lock
outs
cli
aas
or
mov
sub
int3
jae
ins
lds
jecxz
out
inc
loopne
jg
leave
push
test
test
pop
mov
fwait
aaa
and
daa
sbb
jle
xor
ins
cmp
popa
inc
push
es
jb
xchg
movs
mov
xchg
adc
push
out
fisttp
xchg
call
(bad)
mov
mov
test
sbb
mov
(bad)
ret
(bad)
fcmovu
push
xchg
fld
fbstp
adc
ins
xchg
pop
ret
pop
mov
cwde
push
sub
mov
out
mov
mov
cld
int
dec
retf
int
lods
iret
xor
rcl
push
mov
div
inc
aas
inc
mov
mov
dec
add
test
inc
dec
ds
test
in
mov
pop
js
or
jle
pop
mov
aad
dec
push
mov
cmps
(bad)
mov
(bad)
add
cld
and
iret
test
cld
mov
add
div
outs
(bad)
and
add
mov
cmc
rol
adc
dec
xor
jmp
jp
cli
mov
mov
jge
sbb
ins
add
cmp
push
es
push
popa
popa
and
ss
test
pop
pushf
stos
or
mov
imul
sbb
cs
mov
or
fild
aad
cli
jg
cmps
lods
(bad)
xor
pop
push
add
iret
lods
mov
iret
mov
mov
loope
int
fs
push
les
hlt
fcomp
dec
dec
retf
push
push
mov
int3
cdq
xor
mov
les
xor
inc
cmp
ret
cli
mov
mov
or
sub
mov
and
xchg
push
popa
stos
jmp
lods
lods
or
mov
push
xchg
jecxz
lds
or
ins
add
cmp
dec
xchg
std
lods
stos
pop
ror
xchg
pop
ret
pop
mov
mov
cmps
mov
xor
or
int3
or
ret
xchg
dec
retf
int
lods
iret
xor
rcl
push
mov
div
mov
cmp
push
xchg
xor
xchg
mov
push
sbb
push
pusha
(bad)
(bad)
std
or
pop
add
int
adc
scas
cmp
test
add
cmp
pop
ins
int
or
loopne
cdq
jle
lods
xor
xchg
popf
add
mov
mov
call
or
xchg
in
lods
ds
outs
adc
inc
xchg
push
jbe
push
lahf
jno
je
jge
mov
fild
jecxz
lods
pop
inc
xor
mov
mov
test
retf
inc
jno
es
xchg
mov
xchg
rol
lods
test
jmp
cmp
sbb
sub
inc
inc
shl
std
call
shr
jne
push
call
ins
or
lods
xchg
fiadd
xchg
in
pop
inc
ja
sbb
jp
sbb
inc
jecxz
repnz
push
push
xlat
and
aaa
sbb
xchg
sub
out
iret
ret
adc
jne
push
mov
popf
lahf
(bad)
jp
jl
or
lahf
inc
add
in
popf
lahf
jnp
pop
jb
mov
dec
loope
inc
jl
add
or
imul
fld
push
cmp
loopne
neg
imul
push
add
mov
push
dec
int
mov
sub
mov
lods
(bad)
cmps
adc
rcr
std
(bad)
jae
(bad)
addr16
iret
shl
iret
test
add
dec
cmps
in
std
(bad)
addr16
out
push
fild
sti
cmp
mov
in
mov
xor
inc
imul
scas
and
aas
sbb
loopne
mov
dec
xchg
xchg
cmp
movs
movs
movs
(bad)
(bad)
xor
cmp
xchg
stos
imul
in
movs
in
movs
adc
in
mov
xchg
mov
stos
mov
push
mov
lods
lds
gs
mov
(bad)
mov
push
jmp
pop
sbb
(bad)
imul
retf
stos
lods
je
rcl
jns
popa
xchg
xor
cmp
or
mov
cmp
mov
mov
mov
adc
fwait
jmp
nop
mov
nop
xor
dec
xchg
cmp
aam
mov
cdq
cmp
dec
inc
inc
dec
sbb
ret
ret
adc
pop
mov
or
and
sub
aas
(bad)
lods
hlt
inc
fs
or
in
dec
aad
sbb
jl
push
scas
pop
shr
pop
jle
int
es
sub
rol
in
call
xlat
or
push
jg
fcom
add
das
mov
imul
sbb
xchg
jecxz
add
not
rcr
arpl
loope
inc
mov
shl
cmps
and
mov
jmp
call
sbb
add
in
sub
arpl
push
aaa
pop
mov
sbb
hlt
out
test
(bad)
jg
icebp
icebp
rcr
sub
jecxz
xchg
sahf
xchg
sub
pop
fs
in
pop
mov
pop
add
stos
fldenv
mov
enter
call
repz
cli
cmp
jb
xlat
cli
push
fdivr
(bad)
jae
(bad)
addr16
iret
shl
iret
test
test
jae
jle
mov
ja
adc
xchg
cdq
out
xor
std
popf
sbb
iret
imul
mov
ja
mov
call
xor
cmp
cmp
xor
push
mov
mov
mov
mov
inc
inc
aaa
enter
dec
adc
xchg
inc
mov
icebp
cli
loope
xor
mov
sub
jnp
jecxz
xchg
pushf
pushf
or
popa
mov
test
add
lods
outs
rcl
add
add
mov
clc
fwait
mov
repz
imul
jle
mov
lahf
sub
cmps
test
int
jle
sub
cmps
bound
inc
mov
iret
rcl
push
nop
sahf
sbb
xchg
mov
mov
add
mov
cld
in
pop
repnz
cmp
test
lds
cmp
inc
push
add
retf
pop
mov
jmp
add
jmp
call
clc
jne
imul
and
pop
adc
mov
jb
xlat
pop
add
and
push
int3
sub
sbb
jp
loopne
push
push
outs
inc
pop
dec
adc
push
in
mov
jp
retf
call
jmp
adc
js
jb
or
mov
in
call
push
xchg
mov
push
hlt
push
xor
inc
push
and
cmp
xchg
ret
int
inc
lods
sub
hlt
aam
adc
adc
test
pushf
push
int
sbb
ret
div
adc
mov
adc
jb
aaa
dec
ficom
stos
xor
and
arpl
add
and
mov
fwait
xor
retf
jl
xchg
jmp
es
xor
lods
in
retf
mov
mov
sbb
out
int
jg
sbb
ins
sub
rcl
fstp
lahf
sar
rol
arpl
inc
inc
add
ror
dec
inc
jle
mov
jns
and
sub
push
push
jle
mov
mov
vmovapd
sub
inc
imul
iret
sbb
stos
sti
repz
test
cmc
lods
or
addr16
xchg
and
lahf
and
inc
nop
call
icebp
icebp
jno
dec
mov
test
fst
aad
mov
mov
push
jno
and
or
add
mov
pusha
mov
jne
sbb
push
out
ftst
iret
(bad)
sub
sub
outs
scas
jne
out
mov
sub
movs
and
mov
pop
sti
not
sar
cmp
in
test
fistp
jo
enter
push
mov
leave
or
push
cmps
and
dec
sbb
and
adc
and
jmp
enter
mov
and
fistp
idiv
and
jmp
imul
fiadd
jg
cdq
adc
and
pop
pop
xchg
ret
mov
add
mov
cwde
adc
mov
rcl
js
rol
pop
and
inc
cmp
out
test
add
dec
int3
popf
xor
add
or
aaa
movs
pusha
dec
lahf
dec
js
mov
arpl
push
and
jg
bound
mov
out
sub
dec
mov
xchg
out
out
sub
lods
add
es
pop
mov
nop
or
jnp
adc
xchg
ffreep
pop
add
sub
sub
out
ins
jmp
mov
mov
mov
xor
or
int3
or
shl
sub
retf
jl
dec
popa
push
cdq
stc
dec
xor
fild
mov
xlat
(bad)
lahf
stc
inc
inc
dec
pop
jg
xchg
or
fwait
xlat
mov
xchg
nop
cwde
or
dec
push
push
fidivr
outs
mov
dec
repnz
lahf
(bad)
sbb
mov
cld
repz
mov
pop
push
jl
loopne
in
scas
adc
and
sti
mov
call
in
cmp
sahf
stos
aas
jge
jmp
jmp
sbb
ds
jg
jl
fdivr
loopne
cmp
mov
adc
stos
test
loopne
add
scas
push
mov
add
adc
mov
sbb
mov
out
xchg
cld
mov
add
div
ficomp
test
scas
lahf
jns
and
dec
lock
fst
lods
push
in
mov
lods
push
sti
mul
cmps
int
sub
adc
cmps
arpl
mov
ins
stos
into
inc
push
jp
(bad)
jp
(bad)
aam
arpl
idiv
bound
sbb
sbb
fcom
test
mov
loope
(bad)
mov
scas
call
ficom
js
mov
ins
jne
pop
add
popf
pop
jmp
jl
xor
into
cmp
popf
pusha
cmp
sub
mov
push
cld
icebp
inc
xor
sbb
stos
sbb
in
sub
inc
add
xor
mov
jno
and
stos
imul
(bad)
loop
daa
mov
xor
pop
mov
dec
iret
ret
jge
xor
in
and
dec
xor
je
nop
pop
popf
mov
jae
stos
aaa
push
bound
test
dec
jle
retf
cmp
mov
adc
inc
test
ins
push
test
movs
inc
js
repnz
mov
ins
sbb
cmps
pop
add
xor
mov
xchg
fbld
test
hlt
out
mov
stos
jns
(bad)
int3
or
(bad)
jae
(bad)
addr16
iret
shl
iret
test
test
fwait
neg
gs
int3
jl
sbb
outs
inc
pop
jns
pop
cli
cld
mov
iret
push
push
sbb
shl
repnz
loope
sbb
out
ja
stc
das
jle
std
stos
pop
(bad)
cli
mov
leave
ja
and
dec
lock
dec
xor
fwait
or
(bad)
rol
fwait
loope
pop
pop
mov
push
popa
push
ds
pop
(bad)
cmp
fcmovnu
loopne
jle
arpl
hlt
cmps
dec
icebp
mov
(bad)
stc
aas
fwait
out
aad
pop
cld
cld
fcomip
loope
out
loop
mov
jo
(bad)
push
mov
mov
sahf
cmp
or
push
fst
adc
and
mov
inc
dec
add
in
xor
(bad)
sub
pop
cwde
jns
pop
xor
cmp
jo
loopne
(bad)
lahf
mov
jmp
arpl
push
scas
pop
lds
test
enter
sbb
cdq
mov
lods
cmp
fisub
neg
daa
icebp
fcom
fild
enter
jb
(bad)
(bad)
outs
ret
neg
jl
pop
and
int
xor
std
add
imul
(bad)
(bad)
iret
add
pusha
cmc
dec
ja
dec
sbb
inc
push
pop
push
mov
dec
and
mov
outs
xchg
out
daa
mov
bound
mov
push
fcom
add
das
mov
imul
cdq
jno
stos
sbb
in
sub
hlt
shr
cmp
lahf
dec
call
xchg
xchg
and
adc
jp
lds
aas
xchg
ins
lahf
inc
mov
addr16
pop
xor
(bad)
jmp
jae
dec
(bad)
loop
xor
outs
xchg
push
out
and
xchg
js
hlt
jmp
fwait
test
and
ds
cmp
push
es
dec
dec
push
mov
loopne
leave
jecxz
sub
push
inc
jle
sbb
pop
mov
xor
and
cld
sub
lods
and
test
mov
lods
push
sub
mov
out
mov
mov
pop
ds
retf
int
lods
iret
xor
rcl
push
mov
mul
(bad)
lahf
gs
inc
iret
lahf
les
lock
aad
ret
data16
enter
(bad)
(bad)
loopne
(bad)
aas
sub
ret
sbb
cwde
neg
mov
fcom
mov
ds
leave
in
inc
not
xchg
push
mov
xor
(bad)
xchg
sar
dec
(bad)
lahf
(bad)
hlt
inc
mov
icebp
into
dec
sub
test
pop
loop
test
hlt
xchg
pop
loopne
lods
sbb
xchg
cmp
pop
jo
call
lahf
call
rol
ret
sub
in
sub
fld
sub
inc
dec
inc
sar
add
cmp
int3
cmp
scas
cdq
pop
jbe
pusha
sti
push
jecxz
sub
ss
jns
xor
retf
pop
scas
or
popf
and
fistp
fisubr
fisub
mov
jmp
pop
dec
jo
ret
mov
pop
add
dec
jge
data16
test
(bad)
ss
mov
mov
cs
push
cmp
ds
addr16
out
inc
gs
xchg
fwait
inc
xchg
xchg
pushaw
out
xor
test
ja
jnp
xor
sar
mov
arpl
and
cld
add
lods
rol
jne
jmp
sbb
mov
pop
das
mov
imul
cdq
jno
stos
sbb
stc
push
mov
adc
ficom
pop
ret
mov
cmp
ret
clc
cli
js
push
mov
or
icebp
mov
sti
ja
div
iret
mov
cmps
shl
sbb
test
dec
pop
pop
mov
add
cmp
xchg
fsin
cmp
scas
inc
inc
outs
xor
and
and
jl
mov
dec
add
clc
and
ds
cmp
retf
adc
mov
daa
call
fsub
cld
dec
xchg
or
sti
pop
dec
dec
data16
jnp
mov
cwde
cld
dec
pop
rcl
xor
popa
lea
arpl
jl
xchg
jmp
es
xor
clc
or
xor
retf
jl
dec
popa
push
cdq
stc
dec
xor
xchg
sbb
xor
push
iret
lahf
rep
test
aas
pop
push
fidiv
clc
mov
mov
loop
shl
ret
aad
add
aad
and
in
retf
mov
loope
pop
sbb
xchg
retf
sub
enter
mov
test
into
sbb
jb
inc
(bad)
jbe
mov
loope
sbb
ins
or
or
and
inc
ret
xchg
mov
clc
loopne
push
cwde
cmp
fsub
dec
cld
add
out
fsubr
add
psadbw
fld
aaa
xchg
add
repz
popa
mov
push
mov
xchg
aad
cmp
int3
cmp
scas
cdq
pop
jbe
pusha
repz
out
shl
and
ret
in
xor
hlt
test
paddq
(bad)
xchg
test
jp
popf
pop
out
jl
icebp
jb
int3
adc
dec
mov
daa
das
outs
add
jecxz
and
loopne
loop
cmp
ins
sub
aad
daa
icebp
fisubr
aaa
aas
cdq
xor
jp
ins
xchg
loop
int
cmp
ret
pusha
aam
sub
cld
(bad)
das
push
das
aas
adc
(bad)
push
cmc
fnstsw
(bad)
push
int
sub
push
test
pop
pop
lods
sahf
push
add
push
cmp
cmps
stos
jns
push
mov
push
fcom
add
das
mov
imul
cdq
jno
stos
sbb
fcom
xor
sub
dec
add
push
sbb
pop
jp
sub
push
push
fwait
mov
das
pop
mov
adc
je
mov
mov
add
fstp
inc
outs
and
inc
jmp
inc
cmp
in
mov
adc
xchg
mov
cmps
arpl
add
stc
and
js
xor
and
sbb
repnz
jg
mov
add
xchg
adc
xchg
xchg
xchg
mov
pop
jnp
jno
push
mov
pop
and
popa
rcr
add
jb
or
mov
push
add
out
je
jl
inc
inc
pop
cdq
pop
pop
outs
ret
mov
jl
stc
cmp
xlat
icebp
dec
cwde
popa
push
pop
retf
xchg
cmc
pop
out
pop
or
icebp
dec
call
jg
pop
jmp
imul
cmp
push
cmp
mov
pop
mov
(bad)
(bad)
call
and
stos
outs
out
push
inc
mov
dec
mov
pop
aas
and
(bad)
mov
test
lods
sahf
push
cmp
scas
lods
jns
add
mov
mov
clc
cld
xchg
call
imul
mov
dec
ret
adc
cmp
and
jnp
or
rcl
xchg
sbb
stc
(bad)
aas
popa
test
inc
inc
(bad)
pusha
dec
jne
jbe
stos
ror
jbe
rcl
or
cmp
and
or
sub
les
dec
cld
or
push
ss
mov
add
aaa
jmp
movs
iret
jmp
lods
push
sbb
les
ficomp
jp
cmc
ret
out
fistp
xchg
push
push
cmp
dec
inc
dec
push
adc
and
adc
adc
jp
inc
bound
ds
xchg
int3
ja
jle
jmp
add
(bad)
add
sbb
je
out
dec
and
iret
adc
outs
inc
ins
pushf
das
inc
cmp
rol
repnz
xor
mov
fwait
adc
inc
ins
fdivr
fdivr
add
(bad)
mov
scas
sbb
mov
jne
jmp
mov
fdivr
sub
les
pop
in
out
daa
mov
sub
mov
sub
in
xlat
movs
test
pop
push
pop
mov
and
ret
arpl
(bad)
mov
ins
rcl
ins
push
icebp
out
jnp
outs
lea
fcmovnb
inc
pop
mov
scas
mov
shr
or
inc
pusha
(bad)
movs
rcr
dec
jbe
xchg
dec
pop
iret
inc
nop
sbb
mov
scas
inc
outs
dec
xor
sub
push
pushf
sub
push
test
stos
jmp
call
mov
out
fwait
ins
and
not
xor
out
add
inc
mov
call
dec
retf
or
jl
xlat
(bad)
jae
data16
sub
popa
push
lock
outs
jge
stc
mov
popf
data16
cmp
cmps
xchg
rcr
iret
lahf
int
int3
inc
mov
push
sahf
jg
or
hlt
lahf
(bad)
mov
jmp
(bad)
lods
pop
add
sub
push
popf
push
pusha
shl
pop
(bad)
por
push
retf
mov
(bad)
or
pxor
out
adc
mov
jno
xor
jecxz
xor
lahf
and
arpl
sub
fidiv
fiadd
outs
jb
sbb
jnp
mov
jg
in
xlat
adc
out
cwde
xor
test
mov
mov
loopne
cmp
sub
data16
inc
ja
or
mov
cmp
jmp
jp
sub
nop
xor
(bad)
popa
test
xor
jecxz
dec
arpl
fbld
cmp
inc
(bad)
in
push
aas
aas
pop
stc
shr
test
js
call
call
mov
or
sub
mov
addr16
mov
fmulp
xchg
jle
out
mov
push
fdivr
dec
je
mov
adc
jb
mov
jl
add
xor
repnz
(bad)
push
jg
lods
pop
mov
ret
jb
jns
add
adc
dec
and
std
cmps
inc
sub
push
add
dec
sbb
leave
lods
(bad)
scas
adc
add
(bad)
dec
ins
rcr
js
fsub
sub
inc
mov
adc
lods
and
into
sub
loop
jae
push
inc
movs
push
loop
jmp
adc
mov
and
mov
or
in
ror
or
jmp
mov
sub
or
cmp
push
int3
popf
xchg
stos
test
adc
xor
mov
or
lock
fs
pop
ins
mov
mov
sbb
push
push
sub
sub
or
jmp
push
shr
pusha
mov
dec
dec
pop
cmps
mov
pop
adc
mov
mov
xor
cmp
cbw
adc
sub
retf
jl
dec
popa
push
cdq
stc
dec
xor
sti
ss
stc
fwait
sahf
mov
scas
lea
lea
jl
stc
pop
mov
dec
adc
push
stos
lods
xchg
inc
dec
dec
sbb
cmp
cmp
aas
sti
cwde
js
(bad)
mov
add
les
dec
mov
add
xchg
imul
adc
and
fadd
dec
je
cmc
cmp
mov
add
sbb
in
add
stc
int3
not
fiadd
aam
loop
mov
repz
push
pop
fld
xchg
std
dec
cwde
xor
repz
pop
nop
lods
pop
add
scas
adc
dec
lea
push
push
push
mov
sub
mov
cld
aad
add
imul
jmp
add
pop
add
cmp
dec
(bad)
dec
(bad)
jmp
cs
jmp
fwait
outs
pop
loopne
ds
jb
aas
mov
mov
cmp
xor
popa
popa
inc
loop
add
test
push
je
lods
nop
mov
pop
pop
stos
xor
das
sub
xor
loop
pusha
inc
jle
and
xlat
(bad)
(bad)
popa
sbb
test
mov
dec
dec
or
add
outs
out
pop
in
ficomp
mov
and
jns
ror
cs
ss
nop
test
aas
data16
add
out
cmp
scas
push
pop
mov
nop
cmc
stos
xchg
add
imul
ins
pop
push
lods
xor
dec
pop
in
cmc
pop
or
mov
push
pop
mov
dec
jae
popa
sub
mov
shl
pop
add
sub
or
dec
add
xlat
jo
int3
pop
in
(bad)
xchg
inc
mov
sub
or
adc
cmp
adc
(bad)
lods
push
dec
add
call
aam
push
cmp
rcl
inc
mov
inc
and
inc
out
test
(bad)
arpl
cmp
mov
int
iret
call
mov
inc
jne
adc
mov
pop
pop
mov
add
push
rcl
sbb
sbb
inc
inc
ret
loop
or
ret
clc
lods
and
jp
mov
leave
sbb
rcr
or
cmp
or
(bad)
jl
sahf
fwait
xor
cmp
cbw
adc
sub
retf
jl
dec
popa
push
cdq
stc
dec
xor
iret
lahf
retf
cld
int
(bad)
cmps
icebp
ud2
or
pop
cmp
fisubr
jg
shl
aam
mov
xor
cmp
cld
dec
and
test
daa
pop
je
add
lods
sbb
add
loopne
bound
mov
push
clc
clc
lods
xchg
xchg
sub
dec
lods
pop
mov
pop
add
movs
mov
lock
call
add
out
popf
(bad)
stc
or
arpl
mov
add
out
ret
push
pop
sub
out
xchg
repnz
xor
iretw
call
sahf
test
mov
sbb
cmps
sub
stc
div
sbb
mov
test
std
lahf
inc
dec
dec
cs
inc
inc
push
dec
inc
jae
inc
(bad)
xor
add
inc
jmp
mov
cdq
pop
inc
or
jmp
adc
and
outs
pop
stos
push
jnp
lods
jecxz
lahf
imul
mov
test
test
call
in
fnstenv
sub
sahf
cmp
pop
jns
sbb
test
or
inc
retf
mov
jo
int3
jle
cmp
sbb
imul
push
add
sbb
lahf
lahf
xchg
xchg
inc
ja
pop
cmp
into
fistp
cmps
xchg
inc
iret
mov
call
pop
es
iret
sbb
pop
xor
xor
cmp
or
pop
lahf
adc
add
cld
mov
(bad)
sbb
lahf
jl
sar
dec
popf
int3
repnz
shl
pop
or
lock
adc
push
cmp
outs
jae
inc
lahf
xor
mov
jge
sbb
adc
cmp
psubq
fstp
inc
movs
dec
iret
fwait
dec
icebp
mov
push
mov
mov
add
daa
daa
stos
aad
ret
loopne
out
daa
or
pop
inc
cmp
fiadd
imul
cs
bound
push
adc
and
sub
out
or
sub
mov
adc
or
sub
jp
enter
xchg
cmp
or
imul
jnp
hlt
fdiv
mov
imul
div
cmp
adc
adc
and
cmp
retf
outs
ds
mov
xor
dec
cdq
into
aaa
jmp
cmp
imul
xor
retf
jl
dec
popa
push
cdq
stc
dec
xor
cdq
xor
cld
int
jg
stc
mov
lahf
repz
(bad)
repz
dec
dec
mov
(bad)
aas
xchg
icebp
pop
cld
div
mov
fbld
cmp
inc
daa
icebp
call
test
(bad)
aam
sar
imul
stc
push
enter
std
ja
stos
jmp
mov
ds
xor
ds
div
shl
test
inc
cld
call
aas
cld
push
mov
sbb
push
xchg
lock
out
fcom
xchg
arpl
or
mov
daa
int3
popf
cmp
xchg
jne
mov
cmp
pop
scas
pop
xchg
repnz
and
fdivr
add
dec
inc
in
ins
out
sbb
push
into
cld
xchg
addr16
mov
lods
popa
fisub
(bad)
aad
icebp
jne
std
or
cmp
dec
mov
rcr
cmp
add
xlat
out
gs
in
imul
cmp
es
dec
(bad)
jno
call
cmp
jg
(bad)
mov
cmc
fwait
mov
into
(bad)
(bad)
std
in
(bad)
inc
pop
(bad)
ret
fs
sahf
sub
and
xor
jg
inc
scas
inc
push
jb
mov
push
loop
test
cmp
jge
push
mov
sbb
pop
mov
cli
stc
cmps
aad
call
(bad)
lock
xchg
push
lods
popf
xchg
pushaw
cdq
sti
xor
iret
lahf
cmp
inc
popa
or
je
adc
arpl
xchg
shl
hlt
pop
mov
sbb
ss
xchg
int3
push
dec
jmp
sub
int3
test
adc
dec
add
sub
jns
call
inc
stos
cli
fild
ret
jmp
mov
dec
nop
out
ret
push
cmp
outs
jae
inc
lahf
jmp
xor
cmc
mov
popf
sbb
mov
loope
bound
cmp
xor
sbb
mov
mov
jb
mov
stc
stos
lods
dec
dec
icebp
and
dec
dec
dec
adc
mov
mov
mov
out
loope
std
shl
outs
add
scas
inc
add
or
push
test
out
repz
inc
pop
push
mov
xchg
popa
stos
mov
aas
inc
sahf
popf
adc
(bad)
and
add
mov
enter
sub
add
mov
mov
fcomp
xor
add
xchg
dec
jle
push
test
add
ror
dec
ja
mov
mov
xchg
out
sub
jb
jle
mov
ja
adc
xchg
cdq
out
xor
xor
xchg
xor
idiv
cdq
scas
push
iret
lahf
pop
xchg
push
(bad)
pushw
cmp
jg
or
imul
xor
dec
jl
pop
sbb
mov
and
idiv
xor
leave
dec
dec
leave
sti
in
movq
cld
hlt
lahf
imul
jle
inc
jl
(bad)
popf
jae
outs
fidivr
adc
mov
mov
jg
sti
(bad)
punpckldq
jns
stc
iret
jg
dec
ds
outs
fdivr
pop
jge
ds
std
xchg
aas
push
js
mov
jno
out
dec
pop
mov
mov
mov
dec
push
cmps
out
cmp
cmp
shr
xchg
js
repz
clc
popa
aam
test
sub
loop
popf
fwait
jg
or
out
add
and
add
or
mov
popf
(bad)
lods
jb
xlat
aaa
mov
mov
mov
jno
mov
cld
outs
repnz
lods
scas
adc
or
sub
cmp
adc
aas
retf
and
sbb
rcr
jmp
inc
push
div
daa
daa
les
and
or
(bad)
enter
push
fs
jae
sub
mov
movs
adc
inc
push
pop
es
ret
jmp
pop
cmp
inc
fucomip
lods
shr
in
and
sbb
xchg
xor
push
shr
inc
xor
jl
jae
pusha
lea
lds
cmp
mov
jne
(bad)
pop
push
pop
icebp
sti
stc
pop
pop
scas
test
dec
je
push
xchg
push
and
shld
aas
or
daa
ret
mov
pop
(bad)
fmul
jb
jae
sub
ds
jmp
xchg
ja
sub
movs
cmps
cmps
retf
push
shl
or
pop
dec
push
fdiv
jo
enter
jo
into
popf
push
xchg
xchg
mov
push
call
neg
test
xchg
jge
ret
mov
fcomp
(bad)
mov
inc
inc
popa
cs
and
stos
loope
bound
jl
mov
enter
shl
nop
rol
jae
or
in
xor
fcomp
cmp
(bad)
jno
test
inc
test
jmp
rol
push
xchg
jmp
jmp
es
xor
int3
mov
fisubr
xchg
stc
push
sbb
xchg
mov
hlt
lods
push
mov
push
retf
or
mov
cdq
cmps
icebp
xlat
int
ins
pop
aad
(bad)
je
jg
fs
xchg
xchg
call
push
fwait
cld
imul
jle
pop
xchg
(bad)
fnsave
pop
mov
addr16
ret
test
scas
dec
pop
mov
adc
xchg
out
adc
rcr
jg
sub
xlat
outs
pop
lds
enter
adc
mov
mov
inc
adc
cli
int
xlat
jo
hlt
xor
and
pop
ds
scas
imul
test
cmp
or
jg
pushf
(bad)
xchg
xor
adc
sub
dec
hlt
jmp
push
(bad)
cmp
cmp
pusha
scas
xchg
jmp
js
out
(bad)
(bad)
mov
jns
or
or
jecxz
dec
mov
mov
inc
or
mov
pop
adc
repz
inc
add
imul
clc
dec
sbb
int
jle
hlt
lods
add
cmp
cwde
jne
dec
cld
and
pushf
mov
cwde
ficomp
dec
inc
pop
adc
sbb
nop
adc
out
and
cmp
dec
sub
mov
push
mov
add
mov
rcl
and
stc
enter
xchg
nop
add
xchg
loop
sub
mov
mov
jp
add
popf
lahf
inc
out
(bad)
mov
mov
fld
push
(bad)
or
int3
sbb
movlps
push
imul
pop
and
int3
sub
jno
jmp
mov
cmc
adc
test
jne
aas
rol
ror
dec
lahf
or
add
adc
popa
sub
mov
loope
fcom
pop
in
stos
adc
mov
xor
and
sub
mov
lods
add
adc
(bad)
jno
cmp
and
push
jmp
daa
les
test
inc
push
mov
ror
dec
outs
mov
cmc
push
ret
push
push
call
movs
and
es
(bad)
lock
inc
xchg
cmp
add
retf
(bad)
ror
mov
inc
adc
adc
arpl
(bad)
dec
push
popa
adc
outs
jmp
aas
jle
xchg
add
xor
mov
mov
nop
xor
and
icebp
push
(bad)
popf
int3
hlt
mov
je
push
retfw
adc
adc
sub
jle
push
xchg
or
and
pop
adc
fprem1
sar
jecxz
dec
cmc
sbb
out
push
xchg
or
ss
and
hlt
pop
push
loope
or
cli
or
mov
pop
cld
sbb
mov
sahf
cmps
xchg
inc
sbb
or
inc
xchg
mov
das
dec
add
sub
xchg
add
push
clc
in
setg
addr16
(bad)
cmp
rcr
add
jg
or
adc
out
mov
push
lock
ja
or
adc
std
adc
cmp
mov
shl
jae
aas
(bad)
mov
dec
sub
jno
int3
jno
ds
push
and
test
retf
push
ret
adc
(bad)
jo
pop
call
sti
(bad)
aas
popa
(bad)
sbb
(bad)
loop
mov
loope
xchg
outs
cld
out
jnp
jle
pop
push
mov
add
xor
pop
leave
fwait
and
in
inc
mov
and
int3
mov
push
cs
call
sub
ss
lods
jnp
loopne
cwde
mov
xor
bswap
sbb
pop
clc
hlt
cmp
icebp
push
cmps
dec
dec
cmp
pop
mov
rcl
bound
mov
mov
pop
and
fld
mov
in
scas
inc
in
scas
int
pop
pop
test
xchg
mov
and
aas
cmp
in
xor
mov
(bad)
fs
sbb
mov
ret
sbb
cli
jne
or
ds
loope
jb
cmps
dec
jo
jmp
inc
hlt
jmp
ds
outs
sbb
ins
xor
mov
ret
dec
nop
adc
ror
aad
mov
xchg
je
fcomp
lea
mov
call
adc
dec
add
sub
stc
cmps
jecxz
(bad)
pop
daa
cwde
(bad)
jg
ins
or
lods
xchg
fiadd
or
icebp
int3
mov
jae
sub
ds
jmp
ds
dec
xchg
mov
xor
pop
jmp
(bad)
inc
push
into
inc
int3
or
inc
or
test
jae
jno
test
ret
fist
lea
push
sub
cmp
daa
punpckhwd
imul
out
cmps
(bad)
fucom
mov
sahf
aaa
ret
add
sbb
fcom
loop
and
daa
and
aam
inc
loope
xchg
xchg
push
mov
xchg
sub
data16
push
and
and
idiv
jae
add
stos
add
dec
add
fst
push
lods
js
sub
xor
jge
or
into
je
mov
jns
out
sar
inc
cdq
sub
icebp
dec
cwde
popa
push
cwde
jns
retf
mov
mov
out
pop
add
cmps
shr
cmp
cld
mov
push
push
std
or
jecxz
int
adc
jnp
mov
jg
dec
stc
jg
jecxz
loopne
aas
clc
sbb
(bad)
pusha
jo
outs
sbb
fadd
in
sahf
jle
xchg
mov
add
cs
sbb
icebp
enter
stos
imul
(bad)
fistp
out
stos
ud0
jb
stc
cmc
jnp
sub
mov
jmp
sti
std
mov
jecxz
mov
dec
loope
sbb
adc
(bad)
loopne
lds
mov
aam
pop
adc
in
test
shl
mov
into
sahf
cmp
(bad)
lea
sti
lods
push
lds
movd
xor
cdq
mov
dec
xchg
out
mov
mov
mov
das
loope
and
xlat
scas
sahf
mov
cmp
mov
sub
sbb
add
shl
arpl
xor
sbb
xchg
ss
or
js
pop
imul
jno
sub
inc
ret
cmp
daa
xlat
dec
iret
loopne
adc
lahf
imul
jb
push
xchg
daa
pop
ss
fs
cmp
sbb
hlt
mov
je
push
adc
and
xchg
xchg
mov
jle
call
and
pop
pop
mov
add
popf
fwait
jo
test
push
iret
aas
mov
in
fisub
mov
jl
cs
js
mov
call
xlat
(bad)
sbb
jge
xor
xor
sbb
or
js
cmc
dec
inc
add
mov
add
dec
sbb
cs
mov
cmp
cwde
ss
imul
nop
lods
inc
je
fsubr
jns
sub
xchg
movs
fstp
dec
mov
dec
sar
sbb
mov
in
xchg
pop
repnz
or
scas
adc
jg
ins
or
lods
xchg
fiadd
or
icebp
int3
mov
pop
sbb
es
cmp
pop
call
dec
iret
jo
jl
pop
cmps
fstp
mov
adc
hlt
cmps
mov
or
imul
(bad)
jmp
lea
test
push
and
jne
push
(bad)
call
sub
loopne
sbb
mov
shl
(bad)
cli
scas
inc
jb
cmp
retf
push
mov
mov
mov
push
xor
ret
adc
push
lods
sbb
and
(bad)
fnsave
sbb
gs
cli
or
add
shr
sub
(bad)
push
sbb
rol
in
xor
or
inc
scas
pop
repnz
inc
data16
cmovno
cmps
inc
push
push
xchg
jl
dec
jle
push
cmps
cld
push
inc
sub
or
clc
mov
cmp
inc
repz
imul
pop
test
ds
test
jmp
scas
jle
and
cld
sbb
aaa
retf
loope
lahf
pusha
(bad)
fdivr
js
mov
push
lahf
mov
or
xor
jecxz
add
pop
jle
pop
retf
aas
sti
imul
jecxz
pop
jmp
scas
ffree
jmp
mov
(bad)
pop
fdivr
(bad)
shr
fnstsw
kunpckbw
jo
fadd
out
jle
iret
popf
push
xchg
fimul
pop
jno
lock
pop
xchg
repz
mul
clc
sar
js
test
pop
jo
cld
imul
outs
loopne
sti
outs
(bad)
retf
js
icebp
inc
loopne
mov
stos
push
xor
pop
mov
popf
fwait
out
jg
in
aas
stc
fdivrp
outs
stc
mov
repz
sbb
xchg
sbb
dec
adc
mov
sub
loopne
es
(bad)
in
imul
adc
dec
repnz
or
and
mov
aad
and
iret
or
cmps
cmps
test
mov
out
inc
cmp
inc
sbb
pop
and
pop
movs
out
imul
shl
(bad)
das
xchg
jae
fcomip
popf
jb
out
and
jns
rcl
in
gs
cmp
mov
out
jl
icebp
cmp
mov
pop
outs
fiadd
pop
jl
adc
bound
fcom
cmps
mov
movq
rcl
cmc
mov
sahf
cmp
mov
pop
xchg
sub
lock
inc
lahf
dec
iret
(bad)
fadd
ds
cmp
xchg
mov
test
repnz
mov
xor
adc
adc
push
aam
shl
pop
mov
ins
movs
and
push
into
pop
bound
movs
sahf
sbb
into
adc
push
and
in
and
jmp
in
push
ins
jne
push
cld
xor
fdivrp
nop
pushf
icebp
xor
mov
cld
cmp
repnz
mov
cmps
mov
fdivr
sub
les
add
and
int3
jo
outs
retf
dec
(bad)
mov
adc
pop
push
add
or
rcr
fld
jg
jbe
(bad)
loop
fwait
pop
and
pushf
push
dec
mov
fnsave
cmp
hlt
push
pop
mov
inc
nop
pop
cwde
test
retf
xor
hlt
pop
test
add
sub
mov
sub
sbb
pop
sub
outs
test
adc
jle
xor
fadd
adc
or
xchg
std
dec
or
cmp
(bad)
jl
jae
mul
shl
imul
sub
xchg
sahf
je
call
mov
(bad)
add
push
ds
jnp
les
add
xchg
cdq
inc
cmps
out
push
clc
dec
adc
push
pop
cld
cmp
loop
lock
adc
(bad)
std
xchg
aas
imul
xchg
jmp
shl
(bad)
or
jle
xchg
jg
add
aas
clc
mov
cld
jns
int
jg
into
mov
xor
in
lahf
stos
cdq
add
es
cmp
xlat
mul
ds
std
jns
mov
xchg
mov
pop
(bad)
cli
xchg
js
popf
xlat
jo
out
pop
mov
stos
mov
jnp
outs
mov
adc
aaa
imul
mov
jmp
cmp
pop
xor
ja
add
icebp
ror
aas
mov
mov
out
pop
sti
dec
outs
dec
add
push
pusha
xchg
sbb
(bad)
je
cdq
(bad)
cli
xor
(bad)
dec
sbb
test
mov
or
and
out
jo
xchg
fbld
push
mov
pushf
int3
(bad)
add
popf
adc
xrelease
push
pop
mov
arpl
imul
jne
and
and
dec
push
adc
sub
push
clc
fstp
adc
xchg
mov
cmp
sub
sahf
sbb
mov
inc
push
in
push
sbb
push
mov
dec
add
add
jne
add
jnp
or
(bad)
dec
inc
cli
(bad)
mov
pop
jmp
adc
adc
dec
dec
inc
cmp
test
ins
test
inc
and
ins
fdivr
push
push
sub
mov
jle
aaa
jb
or
and
inc
loop
std
(bad)
push
or
inc
push
(bad)
mov
xor
lods
pop
or
mov
fild
scas
and
push
nop
cld
jp
scas
out
mov
addr16
call
dec
mov
push
pop
mov
dec
jae
popa
sub
dec
scas
iret
jne
cwde
loope
fcom
rcl
hlt
cmp
and
push
xor
jmp
(bad)
retf
add
outs
es
xchg
fwait
adc
movs
mov
cmp
shl
adc
add
pusha
fldenv
sbb
jp
mov
ja
pop
in
cmp
cmp
push
xor
jno
sub
arpl
xchg
xor
adc
pop
and
cmp
dec
stos
test
pop
jno
shr
push
adc
mov
rcr
(bad)
or
mov
push
mov
xchg
dec
sbb
xor
adc
jl
fild
xor
mov
and
imul
mov
mov
in
push
loope
jl
dec
sbb
xor
xchg
inc
mov
(bad)
fcomip
cld
mov
jge
mov
mov
mov
std
fdivr
jae
in
(bad)
inc
por
clc
mov
add
movs
cmp
pop
lahf
(bad)
adc
cmp
(bad)
jmp
jg
pop
fist
std
cmc
mov
lahf
std
cld
addr16
imul
daa
imul
hlt
(bad)
in
cs
lea
jb
and
adc
mov
mov
jecxz
icebp
jmp
icebp
repnz
loop
mov
call
adc
mov
jg
scas
mov
ja
push
cmp
and
pop
mov
mov
loope
cmc
repz
adc
js
test
mov
cmps
and
pop
lods
sub
movs
mov
jp
lock
push
inc
xchg
pop
pop
jbe
int3
mov
sub
adc
or
stc
or
dec
xchg
jns
(bad)
cs
cmp
mov
jmp
jbe
xchg
pop
shl
mov
mov
lock
mov
push
test
push
retf
retf
jl
and
inc
lds
inc
cmps
aam
xchg
mov
aad
mov
enter
bound
inc
inc
imul
(bad)
xorps
xchg
psubsw
adc
cli
jbe
mov
int3
call
inc
add
xchg
adc
into
inc
sbb
cmp
jb
ficom
nop
popa
addr16
push
lea
jmp
xlat
adc
popf
sbb
mov
pop
call
mov
jmp
into
jae
adc
test
(bad)
cmp
repz
repnz
cmp
mov
push
pop
mov
dec
jae
popa
sub
dec
scas
iret
jne
cwde
loope
fcom
xlat
sbb
cld
xchg
sahf
sar
dec
rcl
add
push
mov
push
add
add
mov
fsubr
in
push
in
adc
jl
xchg
(bad)
ret
nop
cdq
pop
and
or
test
lea
stos
adc
aaa
and
jecxz
sub
jle
out
cdq
add
sbb
stos
fimul
adc
and
mov
xchg
cmp
mov
xchg
jp
inc
inc
inc
and
inc
stos
cmc
inc
(bad)
adc
cmps
jb
xchg
xchg
dec
(bad)
lods
mov
xchg
out
add
stc
sbb
test
push
(bad)
cmps
push
(bad)
loopne
int
adc
jno
cmp
push
pop
fdivr
test
inc
movs
retf
test
xchg
push
scas
sub
dec
(bad)
sti
stc
sbb
sub
inc
iret
xchg
inc
jmp
and
pop
outs
xchg
sbb
stc
shl
loop
pop
cld
in
jg
mov
loope
cwde
mov
in
fistp
ds
retf
lock
repz
aas
(bad)
push
xchg
sbb
mov
fcom
adc
js
(bad)
add
sub
xchg
mov
and
stc
test
adc
les
imul
cmp
mov
dec
xchg
cmps
mov
mov
aad
and
pop
(bad)
cli
mov
xor
sbb
sub
inc
push
popa
cs
shl
imul
cmp
and
xor
out
inc
pop
jb
stos
aaa
xchg
loopne
mov
cwde
xor
pop
test
cmps
inc
push
inc
add
cmps
punpcklwd
sbb
fisttp
sar
jp
shl
adc
pop
mov
mov
cwde
out
int3
aas
rcr
xor
push
mov
sub
pop
mov
jnp
sbb
jbe
adc
out
adc
sbb
xor
dec
xor
repnz
retf
mov
bnd
xchg
fnsavew
pop
add
outs
sbb
cwde
cmc
xchg
dec
add
jmp
mov
jecxz
pushf
sub
daa
daa
dec
jns
xchg
jl
push
out
cmp
jns
xor
ins
and
cmp
(bad)
rol
cmp
fs
ret
ds
sbb
loopne
pop
ret
cs
push
pusha
into
mov
lock
inc
jo
mov
add
sub
sub
(bad)
retf
fstp
(bad)
or
loop
jo
adc
or
aam
sbb
inc
(bad)
sahf
fisttp
xor
mov
call
jmp
add
(bad)
cmp
mov
xor
sub
imul
cdq
jno
jecxz
retf
into
adc
pop
lahf
fwait
xor
dec
stc
pop
mov
cmp
sbb
aam
inc
enter
fwait
push
adc
cdq
push
jns
movs
inc
test
inc
das
xchg
or
dec
jge
cs
(bad)
icebp
mov
push
aad
imul
sbb
mov
lock
hlt
repnz
aam
scas
sbb
mov
pop
inc
pusha
hlt
mov
sbb
loop
fnstenv
fsub
in
cmp
add
mov
outs
xchg
xchg
jmp
or
xchg
inc
test
xchg
sub
adc
mov
pop
sub
push
sbb
pop
mov
dec
sbb
bound
inc
jmp
mov
enter
movs
pop
stc
mov
(bad)
or
gs
test
cld
push
sub
movs
push
xchg
dec
push
push
push
push
hlt
(bad)
jmp
xor
(bad)
jo
cmp
jecxz
or
in
fistp
lahf
jns
(bad)
fcomi
cld
in
scas
mov
popf
icebp
jmp
mov
cld
adc
lds
add
xchg
jmp
lahf
(bad)
(bad)
neg
sti
out
ja
inc
mov
test
add
icebp
stc
cmps
xor
gs
xor
xlat
out
fadd
cmps
ins
aad
adc
pop
push
pop
sub
movs
test
mov
dec
repnz
imul
sbb
stos
sub
sub
enter
jnp
xchg
scas
imul
out
cmp
aam
and
sti
push
(bad)
arpl
jbe
xchg
in
sub
dec
adc
sbb
lds
fs
and
add
repz
sub
dec
icebp
adc
or
hlt
xchg
cmp
mov
(bad)
jecxz
add
int3
cwde
mov
sti
xchg
call
loopne
(bad)
daa
sub
adc
fbstp
ins
sub
push
sbb
pop
xor
retf
and
push
retf
sbb
pop
add
mov
jb
sub
mov
xor
push
(bad)
stc
inc
(bad)
(bad)
fiadd
imul
mov
mov
jl
push
mov
jne
loopne
or
mov
xor
adc
iret
(bad)
(bad)
ffreep
mov
test
popf
cld
inc
cmc
jge
jle
idiv
sti
js
sti
pop
mov
in
jne
gs
sub
iret
mov
xchg
inc
outs
adc
push
mov
xor
and
call
mov
add
jmp
loop
leave
mov
stos
mov
and
cmp
stos
jl
(bad)
out
aaa
mov
cmp
and
jmp
je
xor
sbb
mov
int3
jle
cwde
dec
icebp
hlt
push
push
dec
arpl
adc
cmp
mov
cmp
and
test
scas
pop
mov
cld
cdq
(bad)
popf
jns
out
xlat
movs
cdq
mov
or
fidiv
or
lods
xchg
and
and
(bad)
lods
loopne
mov
mov
test
ins
lea
adc
mov
xor
(bad)
shl
hlt
cmp
mov
cmp
lods
jb
es
test
cmp
cmp
push
mov
push
mov
shr
(bad)
fidiv
lea
popf
or
outs
mov
popa
and
out
push
lahf
pop
xlat
jmp
push
xchg
bound
aad
ror
ret
(bad)
dec
sbb
loope
mov
inc
pxor
ins
int3
inc
int3
cdq
cmp
mov
adc
xchg
and
das
sbb
jecxz
aad
cmp
test
pop
mov
jecxz
sbb
push
in
ficomp
mov
cmps
and
jge
(bad)
stc
(bad)
fwait
(bad)
fistp
popa
pushf
add
mov
cwde
pop
ror
cdq
ss
xchg
mov
test
pop
or
arpl
push
stc
adc
fimul
xor
push
pop
loop
clc
mov
rol
retf
popf
outs
ffreep
in
mov
scas
outs
sbb
ins
lods
sbb
mul
shl
and
mov
pop
mov
outs
fdivrp
cld
(bad)
lods
jmp
outs
fdivr
test
mov
pop
push
sub
je
mov
sti
out
addr16
in
pop
dec
bound
pop
ds
hlt
iret
fwait
aaa
pop
(bad)
(bad)
aas
rcl
pop
(bad)
lea
into
iret
ds
mov
das
fist
jecxz
dec
cmp
push
mov
lods
sub
scas
mov
shl
scas
stos
fisubr
ss
mov
lods
sbb
adc
jp
loop
js
out
and
xchg
sbb
inc
movs
movs
or
and
add
test
push
icebp
dec
lahf
cmp
fistp
out
mov
aas
pop
mov
fs
mov
mov
cmp
jmp
jecxz
adc
sbb
lods
pop
mov
xchg
adc
mov
or
clc
jns
adc
mul
call
mov
mov
mov
mov
loope
into
push
and
or
paddq
adc
enter
lods
mov
cmp
mov
pushf
gs
sbb
inc
inc
scas
lea
in
sbb
nop
sub
addr16
outs
fistp
(bad)
popf
mov
fsqrt
into
fucomi
outs
jge
(bad)
xor
sub
xlat
lock
inc
lds
fnstsw
aaa
out
mov
jno
out
mov
cld
jecxz
(bad)
int
sbb
pop
jp
out
das
dec
push
pop
jnp
adc
into
cmp
mov
jb
push
pusha
xchg
rol
shr
int
(bad)
std
bt
jns
mov
mov
mov
aaa
outs
mov
mov
cmp
jnp
outs
mov
lods
push
adc
out
and
xor
push
sbb
loop
and
and
push
adc
nop
mov
sub
ja
test
inc
jo
pop
and
loopne
lods
pop
sbb
jne
loopne
in
loope
mov
cmps
(bad)
jne
or
jns
hlt
pop
and
push
or
add
cmp
lahf
add
jmp
aaa
test
aaa
scas
mov
(bad)
fdivr
jnp
aad
(bad)
xor
cmp
(bad)
imul
inc
aam
mov
jp
xchg
and
adc
jb
mov
call
shl
lock
push
xor
sub
imul
cdq
jno
gs
mov
int3
test
cs
sub
cmc
mov
xchg
mov
sub
xchg
aad
sbb
lahf
xchg
test
in
sbb
ror
mov
loopne
(bad)
test
adc
lahf
add
dec
mov
cmp
dec
push
mov
fsub
ror
lock
mov
mov
push
sub
or
or
push
repnz
in
dec
dec
dec
mov
push
hlt
push
add
in
pop
pop
mov
fistp
in
sub
fidiv
mov
mov
xor
xor
jl
jg
or
cmp
or
pop
into
jae
and
(bad)
fldcw
out
ss
jb
add
jmp
inc
enter
js
inc
cwde
dec
mov
pop
xchg
and
test
into
push
loop
push
das
cmp
pop
fcom
movs
or
jmp
pop
sbb
bnd
enter
cmp
push
mov
lods
rol
out
test
les
mov
xlat
push
dec
jg
and
dec
(bad)
adc
inc
cmp
and
(bad)
adc
fidivr
das
sahf
jg
icebp
mov
xchg
sub
lods
fild
std
mov
xchg
aas
push
pop
pop
lods
mov
cmp
(bad)
in
bnd
shl
ins
enter
ret
push
and
mov
xchg
cld
or
cmp
rol
cld
mov
pop
imul
sar
daa
test
aad
out
jns
popf
sub
aas
push
mov
jb
rcl
pop
mov
test
cs
mov
mov
call
popa
jle
mov
inc
cmps
nop
test
out
sahf
lods
cwde
xor
or
dec
cmp
xlat
ss
shl
jae
imul
repz
mov
add
sbb
fcmovnb
mov
sbb
or
lahf
push
and
jns
repnz
mov
fmul
jb
repz
dec
aad
ret
(bad)
push
jne
outs
push
lahf
rol
(bad)
popa
jl
mov
(bad)
mov
jae
adc
mov
gs
mov
ins
rcl
add
enter
(bad)
shl
int3
mov
mov
imul
jne
cmp
dec
cmp
out
(bad)
outs
fidivr
mov
dec
xlat
jecxz
jnp
mov
pop
retf
outs
push
rcl
xchg
pushf
sbb
mov
jne
les
inc
js
mov
stos
retf
mov
mov
inc
(bad)
test
jecxz
push
retf
arpl
sbb
inc
dec
rcr
out
fcomp
push
lods
inc
call
lea
loopne
add
into
xor
fldcw
xor
sbb
sti
pop
(bad)
xor
xchg
jne
fld
inc
and
shl
adc
or
cmp
and
sti
imul
dec
mov
retf
int
push
jecxz
jbe
lock
adc
push
cmp
scas
lods
or
jno
mov
shl
cwde
xor
int
xor
jb
mov
xor
sbb
or
jo
cdq
icebp
add
push
xor
cmp
push
sub
sub
jae
pusha
aad
int
adc
sbb
adc
sbb
iret
and
sbb
in
add
jle
xor
das
mov
(bad)
adc
out
inc
mov
stc
loop
push
and
lds
cdq
sub
inc
mov
cmp
cld
push
ret
aaa
loop
inc
pushf
sahf
stos
enter
push
test
mov
pop
js
ret
dec
movs
inc
and
mov
xor
xor
adc
das
adc
fild
cwde
fwait
mov
xchg
xchg
or
rcl
loop
fsub
xor
adc
sti
xor
lods
shr
sbb
les
into
test
sbb
test
push
fadd
xor
dec
mov
inc
inc
mov
lea
lods
sbb
add
repnz
adc
xchg
jne
adc
mov
icebp
out
daa
scas
out
jg
out
mov
mov
sub
pop
dec
in
sti
daa
or
(bad)
(bad)
cmp
xchg
adc
clc
jg
sub
jmp
pop
in
fisub
(bad)
cmc
and
clc
push
outs
fld
call
pop
mov
test
push
add
xor
and
push
jns
mov
dec
inc
dec
call
mov
xor
std
mov
jnp
outs
pop
das
jge
not
out
sar
cmp
call
sub
pop
lods
sbb
inc
mov
pop
adc
loop
and
lods
lar
xlat
and
jo
xchg
test
or
test
ret
and
test
xor
jno
or
add
mov
(bad)
iret
cmp
mov
and
into
sbb
sbb
pop
ins
scas
fldcw
adc
push
mov
xchg
pop
xchg
sub
les
push
retf
or
mov
js
mov
fmul
mov
adc
push
inc
xchg
jmp
aad
push
inc
aad
push
mov
stos
mov
mov
and
inc
es
stc
lods
xchg
sti
dec
or
repnz
mov
xor
outs
ins
clc
into
retf
cmp
or
lahf
cmp
inc
inc
push
bound
jmp
push
and
and
cs
dec
mov
dec
dec
mov
and
and
xor
or
mov
or
push
ins
lods
fisttp
repz
adc
xchg
sbb
mov
test
dec
out
pop
retf
je
js
mov
xchg
repnz
push
nop
scas
xchg
(bad)
push
push
icebp
sbb
pop
aam
cmp
es
lock
pop
popf
adc
xor
add
pop
inc
iret
pop
inc
sbb
cmp
cmp
sub
aaa
ret
mov
out
call
xor
popa
daa
add
(bad)
add
xor
jecxz
retf
push
xchg
jge
or
pop
pop
repz
cmp
sub
popa
jl
sbb
inc
fdiv
add
add
(bad)
lds
and
or
xor
les
sub
jae
(bad)
push
xchg
mov
adc
scas
ret
loopne
ret
(bad)
mov
jo
fstp
cmp
inc
lahf
into
jo
jb
in
cmp
jns
fnstenv
inc
xor
jns
dec
dec
inc
data16
sbb
leave
mov
mov
mov
stos
out
push
in
mov
xor
and
arpl
mov
dec
and
ret
sbb
shl
test
test
mov
fst
shl
mov
push
push
inc
outs
outs
sahf
sbb
mov
fwait
mov
push
sub
cld
loope
pop
adc
xor
pop
dec
jno
mov
es
ds
lods
pop
test
and
movs
inc
and
sub
cli
or
and
inc
je
and
mov
sub
xor
in
add
mov
and
dec
scas
xor
fild
fbstp
lods
adc
jg
pop
push
cmp
ffree
test
aad
cmp
dec
jg
out
(bad)
or
(bad)
push
jecxz
sbb
(bad)
fdivp
mov
sar
sbb
jns
mov
jg
das
jmp
adc
mov
mov
xchg
adc
out
shl
das
sub
push
fld
inc
lds
add
sbb
fidivr
mov
adc
jge
ins
and
push
or
retf
push
lods
fcmovb
mov
pop
mov
fwait
xor
xor
or
pop
add
retf
out
arpl
inc
mov
ror
inc
pop
je
push
loop
xchg
xchg
sbb
mov
push
rol
dec
dec
or
xchg
pop
inc
add
push
and
push
push
and
mov
cmp
push
or
nop
(bad)
xchg
add
ja
fstp
icebp
(bad)
dec
cmp
push
adc
and
enter
popa
stos
adc
shl
xor
jne
dec
or
sbb
loope
add
sub
stos
popf
cmp
sub
xor
push
shl
sbb
pushf
mov
pop
pop
mov
sbb
ret
(bad)
xor
scas
cdq
xchg
xchg
lods
cmps
enter
test
xor
lock
mov
or
jb
and
cmp
stos
(bad)
mov
and
add
cmp
push
lds
or
or
and
mov
cmp
sbb
or
jno
ret
mov
movs
cmp
pusha
aad
gs
xor
jnp
in
out
sbb
cmp
xchg
inc
xadd
lea
adc
xor
xor
push
inc
cwde
pop
dec
cmp
ds
adc
push
jno
mov
(bad)
jmp
dec
not
dec
xor
test
xchg
xor
test
or
jae
imul
jmp
and
ds
ret
call
scas
cmc
mov
out
xor
test
add
std
xlat
pusha
push
fcom
ins
mov
rcr
mov
mov
inc
cmp
xor
cli
push
adc
mov
ja
jecxz
loope
mov
scas
ret
clc
dec
xor
call
test
ins
xlat
call
cmp
mov
dec
sahf
and
pusha
dec
dec
lods
sub
xchg
xchg
sahf
test
jp
aad
inc
aaa
or
call
bound
scas
loop
jne
xchg
arpl
fwait
in
push
fbstp
mov
or
adc
sbb
rol
enter
sbb
and
inc
push
aad
popa
dec
rsm
fdivr
sub
sbb
mov
call
pop
adc
repz
xchg
or
test
pop
sbb
call
xchg
xor
imul
in
mov
adc
xchg
sbb
lods
mov
push
imul
and
popa
faddp
adc
je
(bad)
lods
pop
mov
pusha
outs
xor
mov
inc
rcl
mov
or
call
fldcw
inc
push
or
lods
movs
lea
xchg
sbb
icebp
push
call
pop
xor
imul
cmpeqps
jp
mov
xor
hlt
lds
dec
outs
fidivr
push
push
pop
sub
cdq
and
dec
jns
lds
push
fistp
mov
or
jmp
mov
into
popf
mov
cli
mov
cld
sahf
fcmovu
xchg
cli
jno
aas
out
hlt
neg
std
out
fidivr
mov
jl
sbb
sbb
lahf
fwait
int
and
into
ds
adc
cmp
cmps
(bad)
or
inc
push
stos
adc
xchg
(bad)
pop
mov
xchg
sbb
xchg
cmp
dec
(bad)
rcpps
push
and
test
rcr
loope
dec
mov
mov
lods
pop
mov
jle
mov
mov
or
dec
add
push
xchg
cmps
mov
mov
enter
dec
pop
adc
aas
sub
dec
mov
pop
add
push
es
mov
leave
stos
cwde
cwde
or
add
sbb
leave
push
repz
adc
push
test
fisub
es
or
loopne
(bad)
dec
adc
jno
push
cmp
(bad)
xor
xchg
aam
and
push
inc
jecxz
loop
sbb
add
iret
dec
dec
mov
bsf
or
inc
dec
dec
push
(bad)
mov
pop
jno
out
lods
iret
neg
pop
enter
xchg
into
sub
sbb
mov
adc
dec
(bad)
cli
mov
stos
stos
es
jle
stos
aam
sbb
push
test
or
psrad
icebp
push
dec
lahf
lods
sub
dec
sbb
popf
or
jge
cmp
add
call
cdq
(bad)
pop
hlt
xchg
ror
push
mov
xchg
jae
out
inc
inc
inc
scas
pop
jge
jge
pop
sbb
outs
xchg
aam
(bad)
out
cmp
and
rcr
js
pop
pop
sbb
push
xor
fwait
mov
pop
fbld
mov
cmp
xor
jl
mov
or
add
mov
sbb
enter
ja
mov
sub
pop
stc
in
int
ucomiss
movs
mov
sub
sub
sub
sub
inc
sub
rcl
xchg
arpl
mov
(bad)
(bad)
mov
inc
adc
test
mov
sbb
rol
movs
mov
push
lods
div
inc
pusha
rcr
loop
cmps
data16
leave
push
in
push
test
lds
sbb
mov
retf
cs
or
sub
dec
and
sbb
mov
mov
xor
mov
(bad)
mov
xlat
popa
mov
test
(bad)
stc
popa
xchg
iret
sub
push
mov
cs
mov
out
shl
movs
push
dec
int3
pop
aas
adc
inc
mov
sbb
xchg
mov
std
aad
jbe
ret
jl
popf
cdq
scas
mov
mov
loop
ins
fstp
mov
pop
xor
mov
mov
or
push
out
repz
mov
fild
mov
stc
cmps
sub
ds
rcl
movs
dec
icebp
clc
ja
lea
push
cmp
or
xlat
add
sti
hlt
inc
scas
out
fst
mov
jae
fdivr
dec
stos
out
scas
int
call
fisubr
push
jb
(bad)
imul
retf
mov
ficom
out
and
inc
stc
repz
aas
daa
mov
or
ds
jmp
mov
mov
push
sbb
mov
mov
cmp
or
pushf
xchg
loop
addr16
(bad)
repz
ds
mov
lock
jp
lods
stc
lods
bnd
jmp
iret
ss
les
ss
mov
add
mov
(bad)
mov
cli
into
into
sbb
mov
stos
xor
adc
mov
ds
push
sub
adc
ss
movs
shl
cmp
js
mov
movs
rcl
rcl
xchg
dec
dec
and
dec
adc
mov
test
loope
dec
mov
aas
mov
xor
xchg
test
leave
dec
pop
dec
cmp
cld
std
les
pop
cmps
push
aam
mov
sub
mov
icebp
dec
test
ds
xchg
lahf
xchg
sub
xor
pop
imul
imul
jns
sbb
or
iret
loop
jmp
mov
or
xor
fild
ins
mov
jae
pop
or
inc
dec
jae
popa
in
mov
and
push
mov
in
and
pop
mov
outs
mov
push
imul
jb
ss
in
clc
test
adc
jmp
mov
pusha
or
hlt
sub
mov
mov
push
dec
sbb
cmp
pop
icebp
mov
mov
jo
mov
ss
or
outs
cwde
(bad)
retf
inc
xchg
ins
cmp
cmp
jnp
jg
es
aad
addr16
ss
mov
je
aaa
inc
imul
in
pop
cmp
aad
scas
and
ss
jns
call
shl
(bad)
mov
xlat
iret
and
popa
daa
add
(bad)
add
xor
jecxz
retf
push
xchg
jge
or
pop
pop
repz
push
pop
jno
shl
fwait
mov
cmp
sti
hlt
mov
pop
ret
loopne
out
test
and
cdq
cmp
cmp
out
cmp
cmc
xlat
pop
mov
push
mov
xchg
dec
xchg
ins
push
movs
pop
inc
scas
mov
in
adc
pop
out
(bad)
mov
fadd
jmp
push
ror
out
sbb
sbb
cmps
cmp
ror
bound
sub
jmp
imul
scas
pop
or
shl
xchg
jb
xchg
sbb
rcl
adc
mov
xchg
inc
inc
and
ror
das
cs
test
or
xchg
mov
xchg
sub
mov
cmp
push
jg
sbb
push
ss
out
iret
into
jb
lds
mov
mov
stos
push
sub
iret
jle
cmp
xchg
rcr
or
das
pop
test
or
or
pop
mov
enter
and
in
sbb
leave
dec
jge
xor
xchg
dec
jae
jmp
icebp
and
les
mov
push
and
enter
push
jmp
xchg
ret
mov
repnz
mov
adc
into
adc
xchg
inc
push
push
rcl
adc
push
cs
inc
push
es
clc
inc
div
fidivr
(bad)
mov
jle
pop
jo
rol
mov
lock
imul
test
cmp
sbb
cmps
fwait
adc
inc
lahf
scas
jo
jecxz
and
ret
cli
jbe
nop
ficomp
push
mov
(bad)
out
sub
ror
shl
cmp
(bad)
cdq
(bad)
pop
adc
add
cli
jecxz
loope
(bad)
retf
push
pop
outs
out
retf
in
mov
and
test
loop
(bad)
jb
adc
retf
retf
pop
mov
jmp
neg
out
rcr
or
adc
pop
popf
fld
hlt
out
ror
fld
dec
into
fld
pop
dec
push
imul
imul
mov
cwde
sbb
jp
adc
inc
push
cmp
in
lock
call
jnp
aas
and
(bad)
mov
lea
adc
sbb
js
std
push
mov
sub
xor
lds
inc
jb
sub
xchg
sbb
push
pop
xchg
cmp
data16
mov
test
mov
out
cmp
xchg
(bad)
or
iret
mov
pop
mov
adc
clc
js
ja
test
dec
dec
cmp
in
add
nop
fsubrp
fistp
js
outs
or
fisttp
add
je
aas
or
rcr
dec
and
or
call
std
jp
les
cli
xor
cli
scas
inc
inc
inc
add
cmp
ret
and
inc
dec
nop
xchg
dec
pop
pop
add
dec
clc
or
das
fistp
xchg
mov
adc
lahf
pop
sbb
lahf
push
sub
jg
xor
adc
loopne
sub
mov
(bad)
(bad)
enter
add
sub
or
test
fadd
shr
jbe
shr
jae
or
jge
int
xchg
shl
jnp
test
cli
aam
mov
hlt
adc
jb
pop
jmp
xchg
je
jns
cmp
xor
xchg
push
ret
lods
jb
(bad)
push
repz
lahf
jmp
or
dec
fmul
rcl
xchg
repz
sub
sbb
(bad)
js
xlat
test
mov
shl
cwde
xor
int
xor
adc
out
rcl
cbw
sub
sbb
jl
xor
sub
inc
in
fmul
dec
adc
clc
ret
stos
sub
cld
sahf
xchg
xchg
sub
loop
sub
cmp
arpl
push
ror
jecxz
sti
popa
mov
cmp
mov
or
pop
ja
arpl
jbe
push
das
inc
in
into
push
das
inc
movs
js
lds
pop
pop
scas
gs
out
mov
stos
push
ret
sub
jns
jae
pop
dec
pop
cmp
jae
(bad)
jecxz
cmc
adc
push
outs
popf
(bad)
mov
sbb
pop
push
jl
mov
pushf
lods
(bad)
cdq
dec
inc
jno
out
movs
aas
mov
xlat
out
fistp
out
jns
popf
mov
inc
test
loope
mov
loopne
jns
mov
push
ror
loope
mov
arpl
mov
or
push
dec
push
dec
les
add
or
lss
push
and
les
imul
(bad)
cmp
push
iret
pop
(bad)
loopne
mov
in
xor
and
enter
sub
sbb
sub
(bad)
jns
int
fstp
test
(bad)
fwait
ds
mov
clc
iret
call
out
ja
aas
cld
fiadd
dec
std
stc
in
gs
lock
sbb
(bad)
jle
out
xor
arpl
test
call
mov
shr
sbb
cmp
jne
es
out
mov
adc
mov
dec
repnz
or
add
inc
jge
xor
aaa
cmp
cmp
jnp
inc
icebp
(bad)
das
test
iret
call
test
sbb
pop
mov
das
das
push
int
icebp
bound
movs
cmps
pushf
xchg
test
lahf
push
fs
mov
pop
xchg
xchg
call
lock
or
sbb
movs
mov
cwde
inc
test
and
adc
cmp
add
repz
js
retf
xchg
into
inc
mov
mov
mov
dec
cmp
xchg
xor
(bad)
mov
dec
mov
arpl
cld
jge
nop
adc
(bad)
adc
dec
inc
add
inc
push
jp
and
push
jns
mov
sub
mov
sub
(bad)
dec
stc
lods
inc
in
into
dec
icebp
mov
sub
mov
bound
xchg
repnz
das
aaa
push
push
scas
dec
fnstcw
retf
nop
xchg
dec
(bad)
jle
js
jmp
xchg
push
mov
inc
inc
aam
sub
jle
out
mov
rcr
xor
lahf
das
in
mov
sti
stc
ror
or
fucom
popa
mov
push
(bad)
cmp
in
in
jb
test
(bad)
pop
mov
mov
icebp
call
cwde
adc
movs
dec
out
fld
rol
dec
in
dec
push
daa
and
push
pop
sub
test
lds
sub
(bad)
jle
cld
call
mov
aad
(bad)
out
pop
jbe
mov
pop
out
repnz
scas
inc
jbe
push
pop
dec
movs
aam
lahf
jp
cmp
dec
pop
inc
je
pop
and
loope
sbb
pop
je
push
xchg
mov
cwde
cmc
dec
xor
inc
lahf
pop
ret
int3
imul
stc
cmp
not
pop
outs
push
xor
sub
(bad)
clc
xabort
sbb
sub
push
mov
sbb
jge
lock
ret
and
jmp
xor
cmc
mov
aaa
pop
xlat
mov
sbb
sbb
popa
mov
cmp
xor
lock
or
inc
ja
call
rol
push
cmp
add
cmc
xchg
sub
jmp
daa
cmps
movs
test
push
cwde
cmp
nop
add
push
and
pusha
stos
stos
sbb
jo
sbb
das
iret
cmp
jno
mov
stos
push
fimul
mov
ret
fstp
inc
xchg
inc
mov
cwde
aas
outs
xchg
push
mov
pop
sbb
xor
mov
mov
adc
ins
lods
pop
ds
retf
inc
loope
sahf
xor
dec
mov
loop
mov
fsub
mov
adc
xor
jo
pushf
xor
mov
fidivr
sub
xor
lds
hlt
lds
fstp
pop
jp
jmp
sub
pop
jns
int3
lahf
setg
(bad)
jmp
lods
mov
mov
pop
mov
mov
push
push
adc
mov
xor
mov
iret
es
mov
jecxz
jo
xchg
rcr
cmps
cmp
test
cwde
xor
push
ror
xchg
sub
dec
mov
fdivr
js
loopne
out
xchg
jns
mov
add
add
aam
pop
sbb
(bad)
jg
lock
push
pusha
xor
dec
jbe
(bad)
hlt
shl
xor
cwde
pusha
cmp
add
xchg
enter
cmps
adc
jl
dec
xchg
inc
and
cmp
js
mov
jecxz
adc
(bad)
in
imul
cmp
cli
aam
aad
push
and
and
js
cmc
mov
mov
push
std
cli
mov
add
pusha
int3
rol
sbb
fadd
icebp
lahf
xor
cwde
cld
fsubp
cwde
es
hlt
jno
aam
xchg
adc
pop
enter
popf
xchg
bound
xor
mov
mov
hlt
stc
lea
mov
ja
add
add
push
int3
inc
mov
xchg
add
sti
sub
ss
fsub
mov
pop
cmp
xchg
das
call
imul
jb
cld
sbb
push
inc
fs
xchg
and
xchg
sbb
adc
and
add
sbb
mov
pop
pop
psllw
mov
mov
mul
rcl
pop
out
sbb
(bad)
fcom
sub
jo
scas
js
imul
add
sub
enter
jnp
ret
(bad)
mul
imul
xor
jns
dec
into
dec
adc
sti
and
pop
enter
stos
lds
xchg
inc
lods
inc
xchg
nop
cwde
adc
dec
jge
pop
mov
retf
push
sub
and
xchg
(bad)
or
mov
xlat
mov
and
not
dec
inc
ds
jmp
cmp
cmp
mov
xchg
lock
jmp
shr
push
pop
call
ins
cmp
inc
pop
pmaxub
std
ret
mov
xchg
sub
fdivr
cmp
xor
xchg
push
xchg
jnp
imul
and
popa
daa
add
(bad)
inc
push
repz
dec
es
add
gs
cmc
adc
fwait
sbb
jo
lods
mov
cdq
ret
shl
cmps
int3
or
pop
pop
repz
push
pop
jno
pusha
cwde
(bad)
ds
xchg
xchg
jmp
or
mov
jo
inc
adc
mov
or
shr
shl
pop
into
lahf
cmp
in
inc
mov
adc
xchg
xchg
mov
enter
pop
and
mov
call
cwde
cmp
out
sbb
adc
sahf
dec
bound
jmp
mov
icebp
ror
mov
nop
and
imul
or
pop
sbb
sbb
mov
jmp
cmp
push
dec
jbe
loop
mov
js
jecxz
mov
pushf
or
xlat
inc
adc
mov
ror
xor
or
popf
daa
push
pop
xchg
js
inc
cmp
cmp
mov
sti
aaa
out
pop
mov
in
ret
sbb
add
pop
lds
jmp
xchg
cmps
mov
cwde
xchg
adc
inc
mov
sbb
or
inc
movs
sbb
and
xchg
mov
xchg
fist
pop
mov
cmc
ret
popf
loope
cmps
adc
fs
mov
in
sbb
jbe
(bad)
vmovdqu64
icebp
(bad)
fld
mov
(bad)
jg
pop
out
and
pop
xor
bound
add
adc
xor
add
and
cmp
leave
cmp
xor
arpl
dec
inc
and
and
dec
les
add
adc
mov
jge
fs
mov
pushf
push
pop
inc
mov
rcr
inc
test
pop
xchg
cld
enter
in
movs
and
(bad)
movs
clc
sub
in
xor
or
(bad)
into
inc
and
enter
push
fiadd
stc
push
sbb
jno
fsub
lock
adc
jo
and
cli
js
dec
sbb
or
fld
mov
ja
or
or
mov
stos
repnz
mov
pop
retf
je
cmp
push
(bad)
ins
les
and
pop
mov
adc
push
mov
js
mov
cmps
mov
mov
dec
adc
push
add
aas
pop
cmp
push
pop
inc
lds
shl
nop
pop
nop
test
enter
mov
sub
xchg
and
push
and
adc
movs
mov
jnp
xlat
bound
or
mov
mov
jmp
cmp
lea
(bad)
fsub
rcr
push
and
pushf
push
arpl
mov
pop
mov
adc
test
lea
jge
ja
jmp
(bad)
ret
dec
hlt
jmp
xchg
mov
shl
mov
pop
or
xchg
xor
out
clc
push
push
cwde
xor
cmp
dec
fincstp
cmc
inc
dec
dec
cmp
dec
dec
mov
jbe
retf
test
outs
push
push
sbb
mov
dec
outs
fistp
addr16
sahf
ds
xchg
xchg
leave
add
fidivr
push
cmps
xor
sbb
test
sbb
adc
(bad)
xchg
jnp
imul
and
popa
daa
add
bnd
(bad)
sbb
inc
and
loop
aaa
xor
adc
shl
enter
sbb
into
jae
lods
xchg
mov
std
jno
jae
int
jmp
ins
lds
hlt
mov
dec
cmps
jecxz
add
lods
xor
sub
jge
test
lea
mov
pop
or
hlt
add
fdivr
adc
xchg
jle
lods
xor
pop
or
adc
adc
push
lahf
cmp
adc
mov
sbb
dec
aaa
adc
xor
and
(bad)
pop
(bad)
pop
mov
ret
cmps
cmp
jno
and
sahf
ins
sub
(bad)
mov
popa
mov
or
call
loope
push
popf
xchg
xlat
add
mov
retf
mov
xor
or
mov
out
inc
aam
fimul
xchg
sbb
int3
sub
imul
dec
or
in
mov
cmps
push
in
test
mov
sahf
or
jns
adc
es
xchg
cwde
push
mov
push
rol
lds
mov
pop
(bad)
in
cmc
mov
scas
aas
mov
imul
sub
leave
mov
sub
test
and
adc
ja
sbb
cwde
cmp
rol
lea
mov
mov
in
xor
jecxz
clc
(bad)
jb
adc
adc
sti
out
mov
rcr
aas
cmp
add
out
cmps
pop
add
cmp
mov
pop
or
sub
mov
(bad)
jle
cmp
pushf
pmaxsw
sbb
sbb
unpckhps
leave
mov
mov
add
sbb
cmps
or
test
mov
push
jns
adc
ret
mov
sub
sub
(bad)
mov
ins
scas
ret
jnp
jmp
mov
repnz
aad
mov
les
in
and
das
pop
mov
mov
lds
ror
repz
fs
call
retf
fadd
inc
icebp
in
cmc
pop
test
cmp
imul
fimul
fisubr
pop
scas
scas
sbb
sbb
add
mov
cmp
stos
cmps
sahf
(bad)
repnz
xor
stos
xchg
and
enter
mov
push
(bad)
mov
sar
dec
jo
test
rcr
(bad)
fs
pop
mov
fucom
mov
les
and
outs
sub
aam
sub
neg
xchg
fdiv
fisttp
inc
mov
or
mov
adc
mov
popa
aam
jle
mov
cs
jo
hlt
jle
mov
aaa
dec
cmp
inc
push
sbb
loopne
hlt
int3
pop
aam
scas
ret
mov
test
pop
cmp
fcomip
lahf
cmp
sbb
dec
je
in
inc
movs
addr16
and
dec
mov
(bad)
int
adc
popf
fld
stc
cli
popf
mov
neg
fadd
int
std
ficomp
xchg
jl
and
outs
(bad)
and
cdq
xor
popa
(bad)
je
int3
xchg
jecxz
ror
and
rol
pop
mov
stc
stos
inc
scas
or
or
mov
jmp
mov
arpl
add
fidivr
pop
repz
pop
lea
inc
xor
sub
mov
cmps
lods
mov
lock
lods
inc
jge
lea
fcom
xor
xlat
not
pop
outs
push
xor
and
xchg
ror
lods
ss
sub
sbb
inc
iret
xchg
not
lock
jecxz
or
inc
or
sbb
and
dec
in
cmps
xchg
add
jb
test
stos
outs
or
popf
imul
sbb
xlat
loop
shl
inc
call
dec
(bad)
mov
xchg
and
mov
mov
inc
dec
sbb
adc
out
mov
popa
sbb
in
dec
add
out
(bad)
std
sti
(bad)
imul
sbb
and
(bad)
(bad)
jle
test
loope
cmp
data16
js
cs
dec
adc
pusha
neg
pop
mov
adc
out
mov
add
add
inc
inc
push
add
das
cdq
or
add
push
dec
inc
mov
or
add
les
(bad)
es
aad
dec
push
jg
or
fild
fisttp
push
into
xchg
dec
test
and
aas
push
cmc
stc
push
ds
popa
xlat
sbb
in
mov
push
movs
mov
in
daa
and
and
mov
sub
or
dec
jle
fcom
and
sub
adc
push
and
add
xor
test
xchg
stc
scas
pop
mov
mov
lea
ror
add
stos
jne
sbb
aas
xor
das
mov
cs
push
add
imul
stos
dec
frstor
pop
hlt
push
sbb
outs
ud1
test
sti
ret
jno
js
ret
xchg
fdivr
(bad)
call
(bad)
mov
add
cmp
add
pop
hlt
jmp
adc
mov
mov
outs
and
dec
sbb
(bad)
imul
(bad)
lea
mov
jmp
sbb
jbe
fdivr
ret
addr16
mov
sub
repnz
adc
pusha
and
adc
fist
fnstsw
mov
add
loope
daa
(bad)
cwde
dec
cld
into
sbb
xlat
mov
push
inc
fwait
out
inc
(bad)
mov
sar
mov
and
das
or
loope
mov
call
je
(bad)
into
sbb
or
xlat
mov
out
and
jns
fsubp
cmc
out
pop
and
enter
mov
out
push
sbb
mov
xor
arpl
pushf
jno
adc
mov
call
cmp
and
es
xlat
fmulp
cmp
push
xchg
jne
jg
sbb
pop
stos
push
push
xchg
mov
fstp
sub
int
lea
std
cmp
repnz
cwde
out
lds
les
movs
test
lock
push
mov
ja
neg
xchg
and
pop
(bad)
out
adc
mov
inc
mov
dec
jb
jae
sub
jmp
push
pop
mov
inc
dec
retf
jnp
push
mov
inc
mov
lods
inc
dec
stc
push
lods
lock
or
sahf
ret
mov
push
outs
dec
movs
test
cwde
aaa
adc
cwde
movs
imul
int3
popf
xor
dec
cmp
inc
mov
mov
xor
xor
loop
lods
pop
divps
jne
push
aaa
jmp
imul
clc
mov
adc
adc
sbb
mov
lods
into
mov
xlat
xlat
aam
cli
ficom
jmp
mov
fdivr
cmp
popa
mov
pop
mov
cmc
mov
repz
(bad)
and
jecxz
call
push
jmp
jecxz
scas
or
mov
ins
or
add
pop
neg
fdiv
push
cmp
movs
hlt
cmp
imul
and
mov
xchg
iret
mov
sub
in
mov
xor
add
std
adc
cs
mov
mov
xlat
shl
sub
mov
icebp
ds
pop
fwait
popa
mov
lea
or
popf
cmovno
mov
lahf
mov
out
sub
imul
fstp
into
int3
pop
jbe
push
push
xor
cwde
pop
int3
pop
jbe
sar
mov
pop
jg
push
cmp
retf
dec
aaa
sub
int3
cdq
add
pop
and
cmp
mov
jne
inc
repz
mov
js
mov
(bad)
or
and
arpl
dec
popf
loopne
mul
inc
jbe
xor
icebp
in
data16
xor
and
pusha
rcl
fiadd
inc
jbe
and
pop
mov
loopne
jl
cli
jbe
or
icebp
sbb
mov
(bad)
cmp
fcmovnb
jae
jg
daa
dec
pop
ds
pop
mov
rcr
jbe
and
loop
(bad)
push
mov
jb
push
push
pushf
or
outs
xchg
xchg
adc
or
adc
das
dec
fisttp
and
adc
mov
adc
mov
mov
add
pop
add
and
jne
out
jg
sbb
ficomp
jecxz
add
cmps
loope
dec
add
jle
in
(bad)
popf
cmp
inc
ja
loopne
mov
push
out
mov
push
mov
inc
xchg
xor
das
ret
and
std
adc
mov
mov
not
adc
xor
call
dec
push
mov
ret
cmp
pop
imul
lods
ret
rol
hlt
rcr
sbb
mov
xchg
cs
ror
xor
mov
ret
adc
(bad)
movs
sahf
push
stos
cmc
std
imul
mov
aad
aas
inc
enter
cmp
in
dec
mov
jno
hlt
push
mov
aas
stc
loope
outs
aas
sti
jmp
fistp
repz
mov
clc
clc
mov
xchg
cmp
fcomp
mov
pushf
adc
es
and
iret
sbb
cli
sub
rol
inc
(bad)
push
xchg
pop
and
inc
test
daa
xchg
and
cmp
xchg
add
mov
outs
sub
rcl
jmp
xchg
add
(bad)
lods
test
call
jle
sub
fs
call
mov
addr16
push
push
cmp
and
dec
shl
mov
sub
into
sahf
add
mov
arpl
push
or
fisttp
or
into
inc
dec
jp
adc
mov
test
popf
daa
cli
cmp
stos
inc
(bad)
in
mov
sahf
mov
mov
xchg
xchg
sbb
add
cld
int3
adc
push
outs
jge
idiv
jmp
not
adc
out
sub
pop
lock
mov
dec
pop
iret
push
das
jg
cmps
dec
jbe
pushf
cdq
jecxz
mov
pop
dec
sbb
adc
out
vpmovzxwd
inc
outs
es
pop
and
adc
dec
(bad)
lock
add
pop
mov
mov
lock
jmp
mov
iret
mov
dec
jmp
jmp
dec
shl
js
xor
lods
xor
cmps
iret
dec
cwde
jno
cwde
loope
mov
sub
mov
inc
retf
jne
add
ds
add
dec
adc
popf
xchg
repnz
cmp
inc
pop
push
push
adc
pop
sub
imul
pop
push
pop
popf
dec
push
sub
add
mov
sti
test
sub
xor
push
bound
sbb
sbb
pop
push
je
xlat
in
addr16
mov
sub
loopne
push
nop
imul
mov
mov
out
and
mov
es
ss
popf
ret
add
shr
ins
jl
xor
sbb
jmp
cld
mov
data16
ror
xor
cmps
xor
or
mov
aaa
dec
sbb
hlt
and
xchg
test
das
das
pop
sub
mov
in
(bad)
lds
data16
add
xchg
jmp
sub
cmp
fstp
(bad)
jp
lock
imul
and
mov
sub
inc
cmps
dec
jne
(bad)
mov
inc
shr
sbb
mov
jne
mov
jmp
in
scas
(bad)
mov
dec
jo
and
jl
add
xchg
pop
and
cmps
mov
loop
lea
mov
mov
lahf
mov
cmp
aas
neg
ret
sahf
std
(bad)
inc
xor
push
adc
mov
and
shr
test
lods
xchg
push
pop
mov
mov
pop
mov
add
lods
inc
pusha
lock
add
jecxz
scas
test
jo
xchg
test
iret
mov
xlat
scas
shr
mov
jae
add
pop
mov
loopne
cmp
mov
cs
out
fldenv
pop
inc
pop
gs
jae
and
outs
loop
in
cmp
or
lahf
cmp
scas
and
cs
(bad)
jle
pop
call
stos
sbb
addr16
into
add
sub
pop
popa
int3
cwde
sar
jle
add
mov
daa
add
call
mov
pop
cmp
movs
or
(bad)
sbb
popa
shr
inc
pop
mov
setg
add
mov
std
imul
xchg
(bad)
imul
js
out
pop
scas
fdivr
cs
lock
scas
push
adc
aas
stc
lock
iret
lahf
jl
and
xchg
push
mov
test
pop
adc
xlat
and
aam
xchg
(bad)
cmp
jmp
or
cmc
jmp
push
iret
cmp
and
xchg
rcl
ds
push
pusha
sar
or
mov
xor
pop
ror
inc
enter
mov
lds
mov
xchg
or
sahf
test
pop
outs
sahf
(bad)
in
(bad)
mov
jo
ret
pop
mov
jns
icebp
(bad)
lds
(bad)
(bad)
in
(bad)
aam
adc
jmp
cwde
xor
add
mov
adc
popf
adc
pop
mov
cld
xchg
and
ficomp
or
xchg
sbb
stc
mov
int
xchg
cmp
into
pop
cmp
inc
mov
inc
mov
loopne
cmp
hlt
sub
es
mov
ror
mov
sbb
cmps
popa
add
cmps
ja
sub
xor
mov
sbb
pusha
int3
sbb
popa
cdq
cmp
lods
inc
pop
pop
cwde
adc
stos
xor
pushf
retf
cmp
mov
mov
stc
imul
jmp
jns
xchg
addr16
mov
adc
std
inc
lock
nop
mov
stos
dec
lahf
fwait
xor
call
cdq
loope
into
outs
mov
lods
iret
cmc
jge
mov
pop
or
inc
xor
test
or
shr
fnstenv
rcr
sar
pusha
push
fcom
ins
mov
xchg
aas
sahf
or
inc
inc
out
xchg
mov
in
inc
jb
or
sub
das
fldcw
dec
xchg
sbb
push
jp
xor
jl
mov
xor
dec
jb
and
mov
adc
or
pop
or
call
in
sub
ins
push
adc
outs
xor
add
js
mov
xor
in
stos
pusha
mov
scas
cs
outs
mov
xchg
gs
nop
mov
sbb
or
clc
sbb
or
xor
cmp
fucom
ds
test
les
arpl
xor
icebp
shl
dec
mov
mov
hlt
shr
jge
xchg
mov
or
pop
(bad)
in
sub
repnz
js
and
push
loope
push
jne
js
sti
pxor
jnp
mov
(bad)
jmp
dec
sbb
fnstsw
bswap
cwde
xor
sbb
adc
pop
adc
or
loop
add
jl
test
pop
jns
out
int
outs
fdivr
dec
dec
sub
jo
call
mov
ins
inc
std
mov
adc
test
sub
inc
sub
pop
jns
cmp
push
arpl
(bad)
clc
scas
shr
sahf
loop
jp
xchg
scas
daa
cmp
lds
(bad)
jns
mov
push
out
popf
mov
mov
mov
fsub
js
lods
xlat
fdivr
neg
ins
cdq
cmp
push
outs
jo
into
push
sub
xchg
lods
add
lock
in
out
(bad)
das
jle
dec
cld
div
mov
adc
pop
push
test
jne
adc
mov
jge
aam
inc
(bad)
aas
cli
sbb
fsubr
arpl
add
fcomp
loop
fcos
enter
jno
pop
dec
sbb
div
cmp
or
(bad)
pop
mov
(bad)
fcmovbe
das
push
mov
call
inc
xlat
push
lods
xor
test
inc
iret
cs
jnp
xor
jecxz
cdq
jp
jo
aas
out
pop
xchg
pop
mov
pushf
(bad)
in
lds
dec
loop
sti
ja
pmaxsw
sar
dec
xor
sbb
push
sbb
cmp
or
or
or
fs
jns
inc
jl
or
call
add
jl
jl
xor
fcomp
and
pop
test
cld
inc
push
outs
sub
shl
mov
and
xchg
cmp
movs
out
jle
cmp
ret
lods
cmp
mov
hlt
shr
cdq
mov
mov
outs
lods
adc
std
and
stos
and
inc
dec
jae
and
push
sbb
push
outs
adc
rcl
sub
stos
xchg
arpl
cmp
add
cli
loop
leave
add
and
push
push
xor
movs
and
sub
jmp
shr
pop
cmp
mov
xor
mov
imul
ds
outs
sub
mov
stc
mov
xchg
fs
aas
jo
cmps
dec
sbb
inc
xlat
and
xor
es
(bad)
aaa
mov
jno
ins
cs
loopne
jg
dec
std
push
jmp
scas
and
pop
movs
pop
pushf
shr
cmp
ror
retf
or
scas
or
fcomp
xlat
push
cwde
sbb
xlat
cli
pop
fbld
push
dec
scas
retf
mov
jmp
jmp
xor
sbb
or
out
arpl
mov
mov
mov
outs
jp
push
or
ins
or
lods
xchg
or
mov
sub
and
arpl
movs
icebp
pusha
adc
or
call
in
xchg
imul
lock
push
push
pop
(bad)
and
mov
cmps
sub
das
mov
call
and
(bad)
mov
sbb
pop
or
sar
pop
mov
xor
ins
push
sub
lea
push
pop
or
pop
loop
mov
or
hlt
clc
pop
jle
imul
pop
xchg
sbb
rcl
rcr
adc
cmc
adc
fxch
inc
mov
mov
imul
or
cmp
int3
das
out
in
idiv
xchg
xchg
xchg
and
mov
sbb
mov
popa
push
jp
fdiv
ds
es
xlat
sbb
mov
leave
dec
mov
imul
fld
xor
jno
mov
sub
sbb
add
and
pop
das
pop
std
int
xor
out
xchg
pop
jle
das
push
fcmovbe
mov
sub
cli
scas
inc
bound
mul
cmp
not
fisubr
sub
call
retf
fdivr
cmp
or
ret
movs
stos
cmps
push
adc
stc
sub
push
push
pop
(bad)
fnstsw
mov
scas
lds
in
in
xchg
addr16
ins
sub
mov
test
adc
stos
sub
bound
std
test
icebp
xchg
push
lods
repnz
sahf
jo
mov
rcl
adc
push
mov
mov
xchg
mov
ret
xchg
and
jmp
lock
add
ror
inc
jle
fs
dec
lock
add
icebp
push
push
fdivrp
xchg
stos
outs
add
popa
pop
push
pop
adc
inc
ins
ficomp
mov
adc
and
test
mov
ds
mov
sar
je
std
out
cmp
scas
fild
fistp
sbb
repz
jno
test
add
(bad)
cwde
enter
das
mov
shr
jmp
cmp
pushf
sbb
mov
jne
xchg
sbb
movs
fdiv
in
fist
mov
inc
in
scas
stos
shr
out
jnp
(bad)
cdq
pop
pop
mov
cmp
mov
mov
sub
popa
dec
mov
push
jne
je
fisttp
fistp
mov
lods
pop
popa
fld
xchg
and
mov
leave
(bad)
mov
inc
mov
push
outs
mov
es
mov
fcom
dec
mov
mov
into
xchg
or
pushf
cmp
js
inc
inc
or
jno
jecxz
mov
outs
aas
push
cmp
or
add
loop
pop
push
cmps
arpl
clc
or
dec
pop
cmc
adc
push
push
pop
cmps
or
cmp
push
clc
push
sub
add
push
loope
pusha
and
push
sub
xor
sub
mov
mov
mov
shr
pop
cmp
xor
ret
xor
jo
push
cmp
popf
push
enter
inc
jge
mov
xor
pop
xor
sbb
jo
push
xchg
pop
mov
dec
xchg
int
mov
inc
add
test
clc
scas
inc
push
adc
push
lods
add
cmc
pushf
jp
cmp
aas
jmp
jp
aam
pop
call
cmc
and
xchg
sub
cdq
cmp
jge
sbb
into
fwait
or
iret
xor
popa
(bad)
xor
fimul
xor
mov
fbld
pop
mov
retf
aaa
mov
jb
out
and
enter
cmps
sbb
jp
div
mov
adc
xor
fcom
add
das
adc
shl
cwde
push
sub
xor
hlt
cli
jmp
pop
sub
movs
gs
ret
or
sub
mov
mov
ins
push
dec
xchg
add
push
jns
rol
sub
jno
in
jo
ins
out
jecxz
cmp
(bad)
fdivr
mov
jnp
mov
or
pop
call
clc
lea
popa
push
mov
cwde
adc
in
pusha
inc
aaa
data16
das
and
retf
sti
clc
sbb
dec
mov
pop
lods
mov
out
fwait
shl
sbb
ds
or
or
xchg
pop
cli
int
sbb
pushf
aas
jg
cmps
iret
pushf
(bad)
jmp
fs
pop
adc
sbb
in
xchg
sti
outs
mov
fist
mov
fdivp
sbb
call
cmp
sbb
mov
jecxz
jae
lock
repnz
les
lea
repnz
stc
or
cmp
in
mov
jecxz
(bad)
fidiv
add
icebp
retf
cmp
cmp
cs
test
movs
data16
mov
xor
iret
out
(bad)
mov
jno
test
fst
shl
test
or
stc
mov
jno
into
lds
das
mov
outs
pop
(bad)
cld
test
out
aas
jl
mov
loop
inc
dec
aam
mov
test
mov
imul
out
lods
add
ja
mov
jmp
call
and
inc
mov
xor
les
jl
(bad)
pop
mov
mov
jo
xor
ret
inc
or
(bad)
(bad)
jge
push
mov
std
int
or
fmul
dec
jb
inc
dec
mov
ds
das
or
aad
mov
adc
into
int
cmp
mov
cdq
adc
cli
mov
(bad)
mov
mov
cmp
add
fldcw
dec
push
fcom
jmp
(bad)
mov
mov
in
jnp
jle
and
mov
out
ins
stos
cs
mov
push
mov
ins
(bad)
cmc
sub
movs
cmps
inc
sub
pop
and
lods
iret
xor
xor
ds
mov
mov
idiv
xchg
xchg
push
pop
mov
mov
add
cmps
lahf
js
sub
sub
dec
inc
mov
cmp
sbb
ret
mov
sbb
sbb
std
loop
aaa
outs
sbb
ds
clc
xchg
das
call
mov
sar
sbb
test
and
ins
sahf
jnp
pop
dec
and
and
cmps
lea
fcomip
sbb
mov
push
jo
push
sub
fs
aaa
pop
int
pop
mov
inc
xor
cwde
aas
outs
and
data16
stc
sub
hlt
iret
push
xor
vandnps
movs
xchg
pusha
dec
cwde
xor
xor
inc
js
pop
and
add
jno
inc
mov
outs
xchg
pop
lea
clc
jg
mov
fs
ins
xor
or
(bad)
lods
shl
jae
push
cmp
jae
dec
test
lock
mov
sti
arpl
(bad)
test
push
cwde
es
gs
lods
popf
cld
mov
pop
test
sub
cmp
xor
bound
xchg
loopne
in
xchg
cmps
rcr
xor
xchg
stos
jge
pop
add
in
inc
sbb
dec
push
scas
aaa
in
and
cmc
sahf
ss
aam
mov
xchg
inc
mov
ds
mov
jle
popf
inc
inc
xlat
aam
shl
fadd
lea
int3
or
jb
inc
sahf
jae
xchg
outs
jns
xchg
and
clc
(bad)
sub
xchg
fdivr
sti
(bad)
rol
xchg
js
lock
out
sti
jg
icebp
inc
xor
stc
in
std
cdq
mov
xor
dec
pop
mov
jecxz
lods
xchg
jg
push
test
cs
xor
sub
sub
xor
hlt
cs
dec
mov
push
inc
test
dec
popa
pop
test
loopne
sub
adc
fcomp
sti
push
sub
and
pop
inc
test
sub
stos
inc
inc
in
and
mov
imul
popa
stos
rol
pop
jo
enter
jno
popa
xchg
retf
mov
fst
or
nop
mov
adc
dec
push
je
mov
lea
out
jnp
lods
add
sbb
(bad)
enter
xor
shl
or
(bad)
out
loopne
lock
lods
rcr
ins
xor
out
rcr
sti
jmp
(bad)
loop
test
push
mov
pop
mov
mov
rcr
and
xchg
lds
jno
xchg
mov
inc
and
div
jge
or
dec
rcr
mov
in
fwait
aaa
outs
adc
sub
mov
ins
xor
and
cmp
dec
push
std
test
add
fst
xor
push
or
sbb
pusha
xchg
sbb
int
pop
dec
mov
push
push
sub
ss
sub
fadd
xchg
xchg
popf
sub
ficomp
mov
inc
js
cwde
test
adc
rol
imul
and
pop
les
imul
std
lahf
mov
loopne
cmp
cmps
into
or
cmp
sbb
mov
pop
or
adc
ja
fldcw
or
aaa
outs
inc
inc
push
or
mov
psraw
and
pop
push
pop
jbe
mov
popa
cdq
sbb
push
add
and
jnp
jmp
into
in
aas
xchg
ins
std
out
ja
mov
sub
mov
xchg
fnstsw
pop
lahf
dec
cmps
js
fnsave
loope
xlat
pop
inc
(bad)
ins
loop
test
rcl
jmp
das
push
cmp
sbb
lock
fistp
mov
pop
cmc
out
and
pop
cmp
mov
ins
xchg
fdiv
adc
push
xchg
inc
jbe
fmul
jge
jle
add
loop
adc
and
lods
adc
cvttps2pi
sbb
fsubr
and
push
loopne
dec
cmp
cmp
iret
aas
repz
ret
push
mov
out
ins
inc
fdivr
mov
imul
divps
mov
and
out
or
stos
sbb
xchg
push
repz
xchg
pop
push
int
mov
cmp
stc
addr16
xchg
out
in
or
scas
push
sub
and
in
retf
cmc
sahf
enter
hlt
jno
inc
add
adc
(bad)
sbb
xor
cmp
xchg
inc
popa
push
xchg
ja
aas
or
les
inc
pop
mov
push
mov
fadd
push
mov
inc
ret
(bad)
pusha
leave
sub
jno
out
sbb
test
in
or
jno
dec
or
jp
xchg
xchg
arpl
sti
cdq
xor
bound
or
cmp
int3
jge
out
popf
mov
(bad)
shl
cdq
pusha
cli
in
cwde
sub
cmp
dec
cmp
sbb
mov
std
xor
dec
lods
pop
mov
pop
jns
enter
or
xlat
jp
vmovupd
push
out
cmp
pusha
mov
retf
fcmovne
add
imul
mov
popa
push
inc
jb
fidiv
mov
aad
and
and
add
clc
inc
popf
(bad)
icebp
cmp
popf
cmps
pop
hlt
pop
xchg
arpl
pop
jmp
or
mov
and
mov
jg
xchg
mov
nop
outs
ret
ret
(bad)
mov
(bad)
js
sbb
lea
cwde
ss
cmps
rcl
mov
sub
mov
test
jecxz
mov
inc
scas
fidivr
fwait
xlat
aas
out
test
out
fisubr
es
(bad)
push
cmps
icebp
cmps
lahf
(bad)
jae
jmp
push
mov
push
ret
mov
pop
push
test
mov
shl
xor
or
push
mov
sub
movs
mov
cmp
(bad)
popa
mov
xor
mov
push
shl
clc
scas
out
pop
and
mov
ss
dec
retf
inc
push
data16
sub
add
scas
sub
addr16
out
call
iret
(bad)
push
ins
push
dec
rcr
or
sbb
ret
clc
dec
xor
hlt
mov
inc
mov
pop
inc
xor
mov
xor
and
loopne
jns
pop
jl
fldenv
loope
ja
mov
cmp
sub
test
(bad)
(bad)
push
mov
jo
mov
mov
pop
out
jae
mov
adc
out
push
fcmovnb
push
mov
mov
fsubr
fidiv
leave
ror
mov
les
mov
scas
and
stos
or
jge
nop
mov
sbb
iret
movs
loop
test
sub
xor
adc
pop
(bad)
fmul
add
nop
ret
sti
ja
repz
xor
aaa
es
(bad)
push
(bad)
adc
pop
shl
mov
jae
mov
lds
mov
push
pop
nop
xchg
push
pop
mov
xchg
sub
test
push
add
cmps
push
mov
xor
pusha
sbb
mov
push
push
cs
mov
pop
adc
jo
dec
(bad)
fdivrp
jne
adc
and
call
sar
mov
cmp
outs
cmp
xor
ins
adc
rcl
mov
and
lea
dec
push
lahf
adc
mov
lods
adc
imul
lods
adc
shl
mov
push
scas
pop
xchg
out
fld
dec
mov
sub
mov
(bad)
stc
fadd
nop
movs
add
sbb
sti
cmps
xor
das
mov
icebp
jg
movs
fist
mov
and
inc
jns
cmp
test
mov
jge
icebp
enter
jbe
arpl
ret
push
aas
jge
mov
test
sbb
pop
(bad)
sti
fild
(bad)
mov
ret
dec
aam
icebp
mov
cmc
pop
sub
and
(bad)
mov
add
lods
ret
cmp
cmp
pop
lods
fcmovbe
scas
addr16
or
sti
xor
ret
std
jno
jle
not
xchg
loopne
out
int
jge
xor
mov
fdivr
mov
bnd
jl
jns
out
xchg
mov
outs
cli
clc
inc
add
mov
mov
and
ins
lahf
jg
jle
dec
push
push
xchg
mov
fadd
sub
mov
cs
mov
out
je
aam
std
jp
and
sahf
jo
cmp
fiadd
cmps
mov
fisub
mov
xchg
mov
repnz
jmp
mov
mov
add
retf
push
adc
add
in
ds
mov
cmp
call
push
sub
and
fist
adc
das
add
or
add
fwait
cli
inc
bound
xor
cmp
mov
dec
ror
add
rcl
in
and
jge
or
(bad)
or
and
mov
jbe
xor
mov
pop
cmp
mov
stc
fcomp
add
jle
inc
mov
jge
loope
in
cmc
jmp
and
cmp
dec
fdivr
nop
and
(bad)
mov
jae
dec
push
fist
push
out
je
mov
mov
out
mov
jmp
mov
retf
pop
mov
lahf
mov
fs
(bad)
cmp
sbb
pop
out
sub
das
and
cld
and
retf
or
(bad)
ins
mov
idiv
cdq
aad
scas
test
lods
into
sbb
(bad)
int
cli
mov
aam
and
dec
add
in
adc
pop
cmp
cmp
inc
(bad)
ss
inc
jge
aam
dec
jae
cmp
fdivrp
cld
cmc
xlat
pop
mov
inc
push
das
xchg
inc
lock
jl
mov
test
fstp
gs
push
fcom
sbb
fisttp
or
dec
mov
shr
rcr
mov
or
mov
ret
xor
or
into
sbb
add
pushf
dec
ret
(bad)
jmp
into
adc
mov
add
adc
sub
xor
jno
mov
dec
dec
inc
inc
cmp
retf
push
sti
mov
xchg
xchg
push
dec
movs
fadd
loopne
in
sahf
repnz
sub
mov
push
imul
mov
dec
inc
arpl
lods
sub
rcr
sar
cdq
les
add
jl
out
xor
jl
or
ffreep
imul
pop
sbb
jmp
std
outs
push
push
jnp
repz
xchg
pop
mov
lock
fcmovnbe
retf
inc
call
inc
push
push
sub
add
loop
mov
add
loop
aad
imul
pop
push
xchg
repnz
aam
frstor
xchg
sub
jle
rol
push
push
sub
out
pop
sbb
retf
inc
cmp
xor
arpl
(bad)
jle
mov
xchg
add
and
jae
jne
and
rcr
outs
pop
outs
mov
inc
mov
inc
(bad)
ds
ins
scas
int3
adc
aas
or
mov
loopne
ret
xor
ja
push
aad
fs
mov
xor
add
mov
push
mov
in
outs
fst
inc
jle
jbe
lods
adc
outs
sub
in
push
mov
sahf
add
push
daa
inc
xchg
fdivr
xlat
(bad)
(bad)
out
sub
push
scas
inc
in
into
or
fadd
adc
sbb
clc
and
ds
popa
jmp
jbe
aaa
mov
mov
(bad)
in
jecxz
loop
test
pop
mov
cli
mov
aad
ret
scas
mov
xchg
pop
stc
ss
imul
dec
test
jg
jns
push
pop
scas
sahf
(bad)
(bad)
(bad)
xchg
out
sti
lds
jbe
or
sub
inc
mov
repnz
cmp
popa
pusha
lahf
scas
sbb
stos
fisub
push
add
hlt
dec
test
aaa
popa
test
stos
sub
jo
enter
sahf
das
xchg
mov
mov
dec
cwde
cmp
pop
add
mov
lock
xchg
daa
cmp
lds
je
movs
pop
add
std
xor
(bad)
inc
xchg
imul
sub
mov
fcomi
jmp
popf
imul
mov
sbb
sahf
fidiv
clc
iret
inc
enter
xchg
jmp
jns
sub
lods
or
adc
jg
push
aam
cmps
popa
inc
push
or
sub
xor
push
cli
jno
out
ror
cmp
xlat
adc
inc
jne
mov
pop
cmp
or
iret
adc
pop
cmp
movs
jae
rcl
inc
adc
lds
cmc
adc
mov
lods
xchg
mov
out
cs
cmc
jl
(bad)
cmps
dec
sbb
mov
push
out
dec
jecxz
cmp
mov
icebp
mov
or
dec
fwait
loopne
or
(bad)
mov
adc
imul
mov
ret
mov
ficomp
cmps
cmp
push
and
cld
fisub
repnz
cmp
dec
adc
fadd
sti
rcr
stos
jl
and
push
stc
xor
imul
or
in
fst
jg
ins
js
sub
stos
push
stos
adc
movs
jbe
int3
int3
int3
inc
jno
ret
test
ja
frstor
push
or
cmc
sbb
jmp
cmp
test
test
dec
fidiv
call
(bad)
mov
push
pop
push
jmp
xchg
push
push
mov
push
rcr
sar
sub
jb
pop
mov
mov
xor
and
cmp
pusha
lods
(bad)
pop
cmp
(bad)
iret
ficomp
mov
frstor
xor
lea
sbb
cmp
ja
loop
mov
int
in
fistp
addr16
lahf
xchg
hlt
mov
in
rol
dec
in
enter
outs
out
and
imul
mov
fdivr
inc
mov
xor
and
dec
xor
inc
ins
adc
adc
daa
ins
jns
js
dec
jo
xor
inc
pop
cmc
inc
fild
shl
fnsave
push
pop
repz
mov
neg
das
adc
int
jns
and
inc
mov
leave
pop
mov
enter
pop
jmp
adc
jmp
adc
sbb
fcomp
lds
popa
and
sub
cdq
jecxz
push
scas
sub
test
pusha
cmps
mov
mov
mov
cwde
in
cdq
inc
fld
fwait
aad
retf
shl
shr
or
sbb
js
loopne
pusha
icebp
jns
fs
sub
or
sar
push
push
mul
jl
sahf
outs
stos
test
push
jle
cmp
inc
or
cmp
jbe
les
icebp
or
icebp
xchg
jb
and
xor
js
int
pusha
ror
pop
cmp
loop
test
inc
or
or
and
idiv
xchg
out
enter
retf
sbb
arpl
fcomip
std
(bad)
(bad)
jae
and
push
lds
xor
sub
fsub
mov
ficomp
cmp
idiv
popf
xchg
shl
jmp
imul
xchg
loop
out
out
fcom
lea
xor
adc
mov
fadd
in
xor
sub
or
mov
out
shl
rcl
pushf
retf
fucomi
retf
stos
shl
int
int
ficom
stos
lods
in
(bad)
scas
adc
js
fisubr
ins
das
inc
popa
test
dec
leave
mov
adc
sbb
gs
(bad)
and
cmp
jo
stos
gs
emms
loope
pop
cwde
sub
loop
xor
xor
mov
pop
push
loopne
aad
mov
sub
cmp
adc
aam
sub
push
mov
icebp
xchg
xchg
ret
and
cli
int
mov
mov
ins
xor
mov
mov
hlt
push
xchg
adc
sahf
pop
dec
icebp
call
and
pop
bound
fstp
shl
add
bound
or
mov
ss
mov
sbb
adc
test
js
cs
xor
cmp
imul
dec
jo
ror
(bad)
ja
in
rcl
jbe
pop
push
inc
jb
or
sbb
stos
jo
mov
jge
idiv
jbe
out
pop
aas
mov
aaa
or
push
inc
jg
adc
das
pop
or
cmps
sar
add
add
lock
mov
fwait
or
mov
shl
xchg
(bad)
mov
xchg
sbb
and
mov
data16
jmp
xor
aas
imul
xor
(bad)
mov
cwde
aas
jnp
push
or
cmps
dec
jae
les
dec
or
es
push
ja
out
inc
and
push
sub
shl
imul
and
pusha
mov
loop
ja
add
out
fnstsw
out
lods
and
cmps
add
(bad)
sahf
pop
ror
inc
(bad)
ficomp
js
dec
xor
push
sbb
je
movs
or
cwde
xor
(bad)
or
fs
xor
push
mov
sbb
cwde
ss
jle
je
pop
xor
out
out
out
push
out
sbb
stc
or
call
jge
jge
inc
shl
add
add
push
popf
call
sbb
pop
xor
cmp
mov
sbb
sbb
cmp
add
enter
dec
pop
js
(bad)
fcomi
aam
je
je
aaa
or
jbe
jmp
or
pop
js
cmp
jns
shr
iret
not
int
mov
inc
mov
repnz
push
ja
fisttp
jp
jp
cmp
shl
repnz
xchg
sub
sbb
test
mov
pop
out
stos
push
mul
(bad)
int
lahf
repz
and
and
cld
push
cmps
inc
jecxz
and
mov
inc
inc
mov
dec
popa
dec
mov
cld
mov
fs
xor
fs
xor
cmps
dec
popf
push
fisub
lods
loop
xchg
and
inc
inc
inc
cmp
ret
inc
mov
popf
aas
cmp
cmp
movs
icebp
scas
jo
adc
push
je
fwait
mov
sbb
inc
pusha
icebp
lods
jno
mov
or
scas
pushf
mov
push
das
inc
test
sub
adc
das
push
int3
(bad)
jae
mov
movs
xchg
cmp
pop
rol
inc
ret
cmps
xor
enter
push
repnz
mov
xchg
gs
pop
ss
fisubr
pusha
or
fs
stc
jle
in
movs
push
mov
xor
inc
mov
neg
(bad)
lock
jnp
pop
repnz
int3
fisttp
ror
inc
inc
fldenv
iret
stos
xor
push
cmc
mov
cmps
mov
(bad)
pop
rol
pop
push
jmp
cmps
cmp
cli
jle
sub
sub
aas
cmp
mov
lods
push
adc
ficomp
jecxz
mov
sbb
cmp
shr
sub
icebp
pop
mov
sar
fimul
(bad)
xor
cmp
imul
sbb
sub
data16
nop
aaa
icebp
push
ja
push
sahf
add
add
int3
fwait
outs
mov
mov
bound
shl
mov
sub
pusha
lods
(bad)
outs
jmp
stc
repnz
inc
fldcw
pop
ds
enter
(bad)
call
pusha
mov
push
lahf
in
mov
jmp
or
inc
jns
in
lods
test
fsubr
mov
das
outs
fidiv
js
mov
add
cmps
pop
push
ss
popa
adc
adc
in
inc
jnp
pop
leave
sub
dec
mov
xor
(bad)
jle
xchg
bound
pop
fnstcw
dec
dec
jecxz
inc
leave
sub
mov
fcom
xchg
lods
cmp
and
jo
push
xchg
ja
xchg
je
sbb
hlt
push
stos
mov
lods
std
ds
int
jo
xchg
sbb
mov
(bad)
stc
repz
popa
aas
mov
jge
jno
sar
call
rol
pop
icebp
aam
(bad)
and
fidivr
mov
cmp
sbb
fidivr
out
sahf
rcr
cmps
and
aaa
or
imul
jecxz
and
sub
adc
les
pop
outs
aad
into
and
lods
xlat
loope
add
cmp
pop
rep
jno
xchg
ja
fcom
dec
or
mov
lea
mov
das
fnstsw
lods
test
cmc
mov
leave
xchg
stc
pop
mov
imul
push
outs
fcmovne
arpl
mov
repz
xlat
jecxz
mov
add
(bad)
loopne
loope
pop
ds
scas
ja
mov
ja
and
and
in
xchg
cmp
adc
cmp
adc
call
add
shl
mov
in
cmps
add
bnd
ffreep
jae
aas
or
rol
pushf
ja
and
(bad)
mov
jnp
stos
imul
xchg
pop
or
xchg
(bad)
fcom
mov
mul
repnz
mov
jle
into
mov
add
cmp
cmp
pop
dec
sahf
fisttp
rcl
sub
xchg
mov
ds
popa
push
ds
sub
call
push
xor
mov
enter
inc
scas
inc
push
jae
mov
scas
je
les
scas
call
mov
xchg
xor
jp
cmp
xchg
mov
call
loopne
cmp
pushf
pop
ret
jno
pop
hlt
xchg
fbstp
call
sbb
lods
aas
xchg
mov
cmp
test
shl
mov
pop
movs
mov
arpl
ret
adc
or
inc
sub
xchg
pushf
pushf
lods
hlt
or
inc
inc
and
sub
jg
add
mov
cmp
jno
out
or
pop
test
inc
mov
push
sbb
pop
sbb
mov
xchg
mov
inc
xchg
sar
call
int
fisubr
mov
cld
push
rcr
imul
ret
(bad)
sub
or
pop
push
sbb
mov
lods
mov
out
test
inc
inc
lods
mov
cdq
outs
sub
dec
dec
dec
mov
push
push
retf
adc
sbb
fs
retf
stos
outs
adc
loope
into
daa
mov
and
out
loop
sar
mov
or
or
pop
or
fs
xor
(bad)
dec
fidiv
dec
xor
mov
ss
jno
sbb
mov
dec
jne
dec
pop
out
inc
lahf
scas
call
sub
add
pop
retf
test
into
push
out
push
arpl
stos
rol
dec
pop
pop
outs
inc
jg
sbb
jecxz
(bad)
imul
jl
and
sbb
mov
data16
inc
loope
add
les
sub
ret
js
push
(bad)
in
xchg
mov
adc
sahf
stos
mov
adc
adc
ror
out
and
mov
dec
dec
fsubr
push
jecxz
(bad)
loop
push
or
fadd
loope
ins
xor
lods
fidivr
rol
dec
or
retf
jb
mov
jno
add
mov
pop
cmp
ss
xlat
mov
pop
and
jns
data16
cmp
fcomp
add
jo
mov
jle
sub
xchg
sbb
or
mov
pop
shr
push
dec
xor
(bad)
lods
pop
sub
or
mov
cmp
icebp
inc
fidivr
test
popf
pop
and
aaa
inc
cmp
adc
sbb
leave
mov
adc
xor
cwde
and
xchg
stos
lods
jno
inc
fcmovb
and
xchg
and
pop
pop
movs
mov
mov
out
loop
int
lahf
fistp
and
and
jns
loop
sub
sbb
pop
dec
mov
loop
loop
rol
mov
jne
mov
jo
aad
mov
sbb
mov
cwde
xor
mov
rcl
ucomiss
aaa
cmp
jbe
jmp
pop
cwde
cmp
xchg
sub
mov
lahf
aas
mov
mov
fld1
fbstp
ret
adc
and
jecxz
dec
jp
stos
shr
sub
ret
pop
mov
push
jae
hlt
and
leave
out
and
and
xchg
shl
push
nop
es
pop
and
inc
and
xor
sahf
fwait
mov
pop
and
adc
xchg
cmps
adc
mov
aad
mov
stos
xlat
retf
mov
mov
popa
xchg
es
loop
push
inc
pop
xor
jmp
neg
sbb
push
shl
std
mov
(bad)
out
call
xchg
dec
and
or
mov
cs
(bad)
out
jnp
sbb
pop
cs
vpand
push
pop
mov
add
push
adc
jmp
mov
add
mov
or
add
lods
jne
imul
sub
cli
dec
mov
jecxz
cli
popf
aad
mov
sbb
pop
dec
mov
jae
mov
movs
mov
mov
loope
imul
xor
sub
test
dec
test
rcr
dec
mov
jb
ficom
cmp
loope
cs
ins
inc
and
ins
xchg
push
dec
mov
(bad)
inc
ins
cs
(bad)
sar
push
ficom
jmp
mul
in
rcr
(bad)
loop
fucomip
test
(bad)
call
out
inc
scas
movs
jae
sub
enter
fnstcw
add
aam
into
in
fisub
nop
ret
jg
push
jns
inc
or
mov
mov
movs
pop
dec
fidivr
xor
cmp
push
adc
fistp
sub
ins
ds
xchg
jecxz
cs
hlt
shl
out
idiv
js
repz
mov
(bad)
cli
sti
ja
cmp
fst
pavgw
leave
popf
cmp
cmp
cmp
adc
scas
adc
in
fstp
or
int3
(bad)
out
icebp
stos
mov
test
or
popf
xor
leave
mov
add
push
mov
adc
jmp
test
jg
pop
xchg
mov
push
mov
sub
mov
fiadd
test
and
xor
loop
movs
out
pusha
inc
dec
and
mov
push
mov
mov
lds
ja
fisttp
rcl
cmp
test
cmp
mov
daa
push
or
fsub
pop
cmp
push
in
inc
push
mov
push
push
mov
sub
inc
(bad)
and
add
leave
or
loop
cld
pop
test
daa
mov
adc
in
adc
pop
mov
loope
fnstsw
in
inc
adc
pusha
mov
jne
mov
cmc
cmp
add
aaa
or
fist
sbb
and
mov
mov
stos
push
push
inc
fwait
inc
sub
std
hlt
fisubr
movs
push
jle
inc
jne
pop
(bad)
xchg
sub
daa
dec
xor
shr
xchg
push
xchg
sub
shr
mov
add
pop
and
iret
push
dec
pop
add
dec
repz
ret
out
push
xor
cmc
out
push
xlat
push
and
xchg
in
push
pop
jmp
aaa
sar
fdiv
lahf
das
add
movs
adc
cdq
ins
xchg
and
data16
or
sub
hlt
test
fdiv
(bad)
out
ss
nop
jb
cmp
nop
and
and
sub
popa
mov
cmp
push
bound
push
movs
inc
mov
aas
xor
mov
or
and
push
add
popa
sbb
fcomp
inc
xor
fwait
js
repz
loope
or
nop
xor
sbb
adc
bound
cmp
cmp
int
add
pop
ficom
pushf
jl
fcomp
add
sbb
xor
pop
call
adc
xchg
pop
push
pop
and
mov
in
push
xor
sbb
mov
or
daa
jbe
fimul
stos
aaa
or
sbb
repnz
fcomp
sbb
ret
adc
and
add
and
xchg
lds
jns
(bad)
popa
mov
dec
xor
mov
inc
mov
add
xor
pop
icebp
and
add
push
and
pop
xor
inc
(bad)
test
addr16
out
inc
mov
dec
cmps
rcl
mov
data16
popf
fcmovnb
dec
out
jae
fadd
adc
pusha
mov
and
sbb
cmp
repz
lods
dec
scas
loop
lods
push
jae
adc
inc
cmp
in
push
data16
add
jno
cwde
repnz
cwde
scas
sbb
enter
pop
inc
cwde
hlt
dec
and
(bad)
inc
mov
pushf
aam
fs
jge
popa
in
lock
cwde
cmp
mov
jo
jmp
rcr
push
test
add
mov
jecxz
sahf
cmc
sbb
lahf
mov
push
mov
adc
ror
or
adc
cmp
mov
mov
inc
or
push
cmp
sub
stos
xchg
retf
test
out
icebp
arpl
imul
adc
into
movs
pop
jge
and
cli
lods
inc
inc
je
js
pushf
(bad)
out
xor
jg
stos
movs
pushf
mov
push
scas
pop
or
pop
cvttps2pi
cwde
cmp
(bad)
ret
aad
sbb
(bad)
add
cwde
cmp
adc
mov
bound
sti
hlt
jmp
shl
mov
cs
cmp
jecxz
inc
xor
call
mov
sbb
mul
xchg
out
add
cmc
fisub
push
mov
and
daa
xor
adc
cmp
push
inc
rol
jnp
(bad)
jmp
push
jae
or
fwait
(bad)
mov
jae
cmp
arpl
out
lods
stos
leave
jg
jbe
in
retf
push
pushf
add
xor
imul
mov
mov
out
lds
xchg
xor
pop
out
cmc
int
lods
jecxz
sub
mov
je
aam
adc
adc
call
dec
jns
jbe
(bad)
dec
sti
scas
and
scas
hlt
dec
adc
and
out
pop
add
mov
mov
xor
mov
inc
nop
mov
retf
stos
push
push
stos
push
sub
fstp
xor
xor
pop
mov
dec
or
mov
out
and
ret
mov
in
mov
jge
xor
dec
or
jl
push
scas
pop
cmp
(bad)
push
inc
std
sar
pop
mov
adc
das
push
or
and
xlat
adc
mov
dec
popa
mov
pop
adc
out
dec
add
and
cmp
out
fld
dec
stos
xor
je
push
je
jb
shl
js
lea
mov
pop
pop
ret
inc
jno
ror
scas
fdivr
sbb
adc
clc
sahf
pop
js
popf
pop
icebp
adc
pusha
jmp
cmc
sbb
(bad)
sub
fbstp
(bad)
jno
mov
addr16
jp
repz
test
jmp
lahf
pop
out
jbe
out
test
(bad)
test
inc
sbb
dec
mov
mov
xor
mov
test
inc
pop
aam
jo
cmps
into
das
pusha
push
(bad)
nop
rol
mov
retf
and
daa
jns
jle
dec
push
inc
ins
arpl
stos
jmp
int
xchg
fldenv
imul
cli
nop
xchg
test
arpl
sbb
inc
mov
loopne
lds
rol
cld
retf
jge
gs
stc
(bad)
arpl
repz
je
dec
jno
mov
(bad)
outs
loopne
cmc
xchg
cmp
mov
adc
pushf
aas
adc
es
out
pop
dec
xor
jns
dec
cmp
(bad)
cmps
push
xchg
or
xchg
sbb
mov
int3
repz
pushf
cmps
sbb
pop
cmp
fld
sahf
in
mov
fimul
or
fwait
lods
push
stos
jo
add
shr
cli
out
mov
mov
add
div
mov
dec
mov
mov
rol
lahf
mov
in
mov
out
aad
mov
xchg
je
mov
out
cmp
dec
mov
mov
mul
xor
fwait
pop
xor
pop
outs
daa
or
test
pop
push
pop
or
lods
push
ins
cdq
push
(bad)
sub
cld
inc
ja
(bad)
cmp
sti
js
cmps
(bad)
xor
mov
push
fiadd
fisttp
inc
ror
fmul
js
ds
inc
rcr
test
out
mov
mov
jbe
sub
repnz
das
sub
xlat
clc
add
sti
lock
cmp
jmp
or
or
xor
test
mov
jns
xor
mov
in
pop
pop
sbb
jmp
test
rcr
dec
and
mov
cmps
sbb
ret
lods
xor
cmp
dec
xchg
and
iret
sub
fwait
xchg
cwde
test
jns
in
mov
jno
in
movs
fnstenv
pop
and
cmp
and
xor
push
hlt
mov
mov
sub
enter
xor
sub
sbb
fcomp
cmp
fnsave
cld
sbb
mov
mov
inc
mov
push
jb
cmp
cmp
stos
mov
adc
jl
test
sub
adc
mov
stc
and
or
add
sbb
repz
jns
test
mov
lds
pop
inc
and
add
xor
or
jecxz
js
aad
or
rcl
push
inc
or
test
pop
mov
outs
pop
adc
lahf
sbb
psubb
pop
inc
dec
lods
wbinvd
inc
sbb
dec
ds
call
xor
in
test
dec
inc
push
mov
mov
ret
scas
cld
jmp
sub
pop
jno
mov
and
ja
cmp
inc
and
mov
adc
out
and
and
and
dec
fild
xor
test
and
and
dec
lods
mov
repz
cmc
push
mov
int
inc
jle
jp
inc
popa
jle
xor
and
push
daa
mov
inc
mov
adc
add
mov
cmp
xchg
das
ffree
jmp
mov
xadd
pop
xchg
add
pop
cmps
jno
mov
sti
push
ja
jmp
or
push
mov
ja
xchg
jno
iret
int
mov
push
out
enter
repnz
xchg
mov
or
sub
movs
jb
test
imul
adc
mov
ins
or
das
adc
into
sub
js
out
or
pop
sub
retf
ror
jmp
pop
pop
bound
inc
pop
out
inc
ja
lods
sub
pusha
mul
sti
mov
add
addr16
fs
xchg
dec
pop
movs
push
cmp
test
xchg
test
in
cmps
icebp
ja
std
in
outs
adc
call
aaa
adc
cwde
sbb
adc
jns
cld
mov
mov
sbb
adc
xchg
xchg
popa
inc
add
xchg
ret
sahf
mov
lock
mov
ja
loop
dec
pavgb
aas
lea
dec
jo
loop
in
pop
jnp
xor
cmp
pop
jge
push
das
cmp
lods
mov
inc
add
mov
jno
scas
cmp
into
xlat
adc
jb
mov
ja
dec
fwait
call
pop
adc
inc
fmul
retf
jo
(bad)
pop
jl
ror
dec
lock
xchg
dec
xor
rol
not
pop
dec
int3
hlt
jecxz
lds
mov
inc
xchg
dec
outs
aas
mov
(bad)
mov
inc
loop
xor
xchg
mov
cmp
es
jo
clc
xchg
adc
jo
jno
addr16
and
lahf
and
adc
or
xor
adc
adc
pop
xchg
test
and
pop
and
or
ret
sbb
(bad)
dec
loop
aad
cmp
sub
jae
mov
push
(bad)
dec
iret
arpl
add
cld
popf
movs
mov
xchg
xchg
pop
fwait
xor
xor
ins
push
daa
int
mov
adc
and
xor
xchg
imul
xchg
dec
xchg
adc
jo
daa
adc
push
dec
or
mov
fnstenv
or
push
or
lahf
xchg
jns
das
mov
and
loopne
inc
inc
pusha
mov
test
cmc
jg
mov
add
sub
aaa
and
hlt
mov
jmp
inc
mov
div
(bad)
push
mov
adc
out
cwde
in
push
add
xor
(bad)
mov
rol
push
xchg
lock
jge
xchg
stos
or
(bad)
pop
psllw
sbb
mov
push
mov
mov
dec
xchg
pop
sub
in
ror
or
push
mov
xchg
and
sbb
add
cmp
outs
and
mov
mov
jnp
(bad)
xchg
imul
inc
scas
and
leave
mov
mov
cmc
jmp
mov
fadd
mov
aaa
jno
repnz
and
jge
mov
xchg
push
cmps
out
xor
scas
mov
xor
clc
xor
nop
inc
pop
clc
push
sbb
ins
adc
gs
lock
outs
lods
push
sbb
in
stos
fs
lock
shl
out
mov
scas
dec
arpl
bt
sbb
mov
xor
mov
xor
movs
das
push
dec
jnp
arpl
jecxz
sbb
(bad)
adc
shl
ja
xchg
dec
data16
rcr
dec
(bad)
out
or
inc
push
and
test
repz
push
push
inc
sbb
xchg
mov
inc
dec
loopne
mov
add
fbstp
xchg
pop
cmps
push
mov
movs
out
fidiv
cmp
xchg
mov
adc
data16
repz
test
jle
xor
add
and
or
shl
enter
and
xlat
cwde
repz
mov
jo
out
mov
and
sbb
shr
ja
mov
mov
or
inc
xchg
(bad)
and
pop
adc
in
mov
or
push
inc
jl
or
bound
sbb
or
jp
xor
cld
xchg
sbb
dec
loop
xor
pop
add
pop
xchg
mov
ret
(bad)
idiv
loopne
mov
adc
jb
dec
mov
inc
pop
jb
repnz
stc
fidiv
push
dec
or
dec
add
inc
adc
int3
jmp
call
dec
inc
sub
ret
jmp
adc
int3
arpl
loope
test
and
jns
push
stc
call
ror
icebp
ds
add
and
fistp
xchg
stos
in
xor
(bad)
iret
imul
add
(bad)
in
lock
iret
aas
xor
pop
cld
jmp
(bad)
std
out
lock
(bad)
jo
in
cs
cmp
jnp
sub
dec
stc
mov
rol
jbe
dec
hlt
mov
into
retf
mov
jecxz
mov
(bad)
sti
jbe
push
mov
lahf
mov
mov
ja
sbb
fnstsw
xchg
dec
aad
das
inc
add
inc
addr16
push
cmp
sbb
and
and
outs
and
push
mov
(bad)
jecxz
enter
mov
dec
int3
cwde
ins
test
or
js
sti
sub
jnp
or
fistp
pop
pop
jns
fsincos
xchg
pop
pusha
popf
add
and
xor
sti
imul
xchg
sbb
push
add
and
and
push
and
mov
int
cmp
mov
call
test
shld
xchg
jl
push
cs
jmp
inc
dec
jo
jo
out
scas
adc
push
stos
loopne
cmp
adc
jb
pop
dec
adc
call
out
mul
mov
je
sub
add
iret
dec
mov
jg
jmp
adc
dec
push
xor
cwde
push
and
je
xchg
movs
popa
in
fsubr
mov
mov
fdiv
pop
cs
inc
jo
daa
jp
pop
dec
sbb
dec
cwde
psrld
push
pushf
xor
clc
ds
cmp
sbb
div
push
add
or
push
push
xchg
dec
jne
in
cmps
pop
mov
adc
inc
sbb
push
(bad)
out
cmp
rol
jle
inc
call
lods
pop
pop
xor
mov
les
sub
dec
(bad)
out
(bad)
xor
fisttp
cmp
or
push
adc
cwde
pop
sbb
pop
pop
mov
push
push
jl
loop
mov
push
pop
iret
jns
jnp
mov
movs
in
pop
jns
adc
xchg
ret
stos
pop
daa
or
add
sbb
out
or
adc
hlt
mov
jno
call
push
inc
retf
fist
mov
jl
mov
jb
mov
shr
mov
mov
stos
test
dec
sub
mov
nop
mov
int
sbb
and
inc
add
mov
dec
jbe
lea
jno
dec
pop
(bad)
and
test
out
iret
and
ret
(bad)
mov
aas
addr16
stos
call
cmp
inc
mov
dec
or
add
ror
mov
mov
std
stc
out
loope
push
out
mov
movs
mov
jp
sar
rcr
iret
inc
fild
add
popf
cdq
jecxz
sbb
pusha
aas
pop
push
pop
call
or
push
push
loop
or
inc
add
cmp
pop
inc
or
fmul
push
sub
(bad)
test
dec
xor
outs
mov
push
pushf
pop
mov
imul
adc
jecxz
xchg
cs
and
gs
mov
mov
test
push
push
push
push
or
sub
sub
mov
push
add
pushf
adc
push
push
sti
sub
mov
mov
in
pop
adc
imul
inc
jns
add
ret
stos
sar
aam
shl
mov
xchg
push
sahf
mov
dec
sbb
repz
cmp
mov
mov
jns
ja
ins
mov
cld
mov
adc
test
xchg
scas
outs
cs
in
and
les
sub
push
fisub
mov
inc
push
mov
ror
mov
sbb
add
dec
push
adc
in
adc
nop
adc
lock
mov
and
test
test
mov
add
in
test
inc
les
and
aad
rcr
dec
or
push
inc
aas
and
add
repz
(bad)
xchg
and
rol
mov
mov
cwde
pop
loop
cmp
ret
adc
ds
lock
mov
lods
pop
xor
mov
mov
inc
rol
jmp
pop
fs
retf
dec
or
ror
dec
cmp
or
inc
data16
cli
and
retf
mov
and
jnp
xor
sbb
mov
and
icebp
inc
mov
pop
push
and
dec
mov
sub
mov
mov
movs
in
in
cmps
inc
mov
out
mov
test
and
push
cmc
mov
fisttp
test
jecxz
clc
fcomip
lds
les
pop
mov
jmp
das
jg
das
mov
push
aas
jle
addr16
adc
cmp
push
cmp
push
aas
test
push
iret
sbb
mov
ror
es
int
or
jbe
jo
clc
cmp
pop
cdq
sub
pop
cmp
js
movs
(bad)
cmc
cld
(bad)
aad
mov
scas
sbb
(bad)
aad
xor
jns
pop
push
ins
cmp
xor
inc
es
scas
mov
mov
or
leave
lds
or
mov
cmps
mov
daa
push
es
cld
or
jns
push
into
int3
jecxz
ja
loopne
xchg
adc
pop
add
(bad)
mov
or
or
lock
cmp
fldenv
arpl
or
stos
retf
cdq
out
push
jp
je
cmp
jb
dec
push
test
jnp
call
mov
das
mov
aaa
stos
daa
addr16
lods
push
adc
adc
dec
cmp
int3
in
add
dec
loope
test
xchg
inc
hlt
cwde
jl
shl
push
mov
push
cdq
push
(bad)
push
mov
in
jae
xchg
lock
cmp
dec
sub
adc
mov
js
cld
add
sbb
iret
loop
sub
(bad)
or
jle
test
inc
jge
cdq
leave
cmp
test
inc
mov
inc
aad
mov
loop
scas
xchg
(bad)
fsub
cdq
jmp
inc
push
jae
test
in
cmp
cld
and
sbb
push
push
lock
mov
mov
std
xchg
jp
fsub
std
mov
xchg
fcom
clc
outs
mov
cdq
in
xor
pop
push
push
int3
sub
dec
pop
pop
(bad)
or
cmc
sub
icebp
dec
mov
inc
mov
stos
push
mov
test
test
inc
xchg
dec
inc
push
pop
ins
xor
jp
lea
push
add
mov
fimul
adc
sub
cmp
(bad)
sbb
les
jl
sub
shl
mov
fs
adc
lods
iret
jmp
xchg
test
or
dec
push
xchg
push
sub
pop
inc
rol
mov
jbe
call
jnp
mov
add
push
xchg
stos
int3
push
push
dec
push
and
or
dec
call
mov
repnz
mov
sar
cld
and
jp
clc
or
mov
(bad)
jg
add
dec
jnp
dec
add
lds
sbb
rol
test
stc
nop
adc
inc
std
fwait
jg
aaa
xlat
adc
scas
push
mov
xchg
xchg
dec
stos
inc
std
fld
ins
sub
iret
jge
mov
mov
in
movs
mov
mov
push
push
ins
dec
inc
sub
jb
popf
xchg
test
xchg
fs
lds
cmp
aam
repz
sbb
jo
push
jns
sbb
mov
cmp
jno
or
push
mov
repz
clc
fwait
daa
icebp
ficom
cmp
out
loopne
ret
jmp
inc
mov
mov
(bad)
fidiv
or
test
push
inc
inc
inc
adc
pop
and
mov
movs
and
and
sbb
add
sbb
xor
push
mov
arpl
push
xchg
lods
sahf
pop
shl
mov
jge
xor
dec
xor
or
cmp
sbb
adc
inc
icebp
imul
pushw
inc
xor
lea
adc
cmp
shr
mov
cmps
mov
jns
dec
gs
fidivr
cmp
and
push
inc
sub
das
int3
fist
int
sub
or
lods
fdiv
imul
aaa
push
jmp
mov
mov
fwait
or
lods
adc
(bad)
sbb
cmp
xchg
mov
clc
fisub
fcmovu
adc
add
dec
mov
xor
sub
iret
add
inc
cs
xor
or
pop
test
cmp
inc
out
(bad)
leave
(bad)
cmp
aaa
les
shl
(bad)
repz
mov
test
push
jle
adc
retf
ins
std
jge
cs
ret
stos
xor
push
xchg
sbb
mov
lods
jecxz
out
push
and
fsub
mov
scas
lock
or
cmp
mov
sub
xchg
add
adc
inc
loopne
xchg
mov
pushf
inc
dec
je
mov
jle
fld
loop
or
mov
cld
mov
addr16
aas
std
out
clc
in
mov
mov
out
pop
sar
push
stc
lahf
out
jmp
dec
jecxz
sbb
ins
scas
lds
adc
add
push
sti
pop
inc
adc
jne
mov
push
mov
sbb
dec
das
loopne
out
cmp
clc
mov
mov
jle
lea
mov
or
arpl
dec
inc
sub
jnp
ins
xor
inc
mov
ror
mov
test
sub
adc
out
jo
add
jne
adc
or
xlat
iret
das
loop
xchg
scas
bound
pop
xor
jecxz
daa
mov
xor
sub
mov
push
es
(bad)
rol
sbb
push
ss
adc
jecxz
pop
mov
push
push
add
add
repnz
jae
xchg
sbb
out
imul
dec
mov
or
dec
xchg
or
das
sbb
dec
dec
cmc
cwde
std
js
lock
mov
es
mov
push
outs
nop
fs
fsubr
xchg
add
popa
cdq
fcomip
rol
stos
mov
scas
stos
sub
pop
cmp
dec
push
xor
(bad)
push
outs
mov
push
js
inc
(bad)
dec
loop
stc
mov
cwde
adc
test
dec
aaa
rcr
pop
or
pop
cmp
pop
jge
xor
mov
cmp
arpl
scas
mov
jo
rcl
cmp
mul
cmp
out
mov
ror
(bad)
and
pushf
pop
inc
add
jno
pop
adc
mov
sub
retf
fiadd
add
dec
into
loopne
in
mov
inc
jb
dec
iret
out
nop
mov
mov
mov
sub
jo
rcl
pop
fldcw
pushf
sub
pmovmskb
inc
xchg
call
mov
adc
mov
mov
inc
pop
dec
iret
stos
cmps
enter
xor
push
jmp
jae
mov
add
dec
adc
and
stos
fcmovnb
scas
fistp
pop
mov
xchg
out
bnd
hlt
cmps
mov
mov
test
repz
and
push
neg
pushf
or
sub
icebp
push
push
push
mov
retf
add
(bad)
in
into
retf
pop
icebp
repnz
pop
mov
mov
cmp
dec
inc
bound
rcl
push
test
pop
and
sub
add
mov
sub
adc
and
jno
xchg
(bad)
je
stos
mov
and
iret
xchg
(bad)
mov
mov
add
xor
stc
paddw
iret
sbb
xor
lea
call
ins
in
outs
movs
jb
and
ins
jl
shl
jg
add
(bad)
mov
jmp
mov
stos
push
mov
dec
outs
push
jbe
div
or
rcl
inc
loopne
and
and
push
and
adc
imul
mov
or
int
mov
js
and
jge
test
dec
add
jmp
jmp
das
dec
mov
pop
sbb
shl
fdivr
pop
lds
movq
mov
cmps
add
xor
pop
ret
iret
jecxz
jecxz
cmp
movs
mov
je
push
and
scas
aam
adc
aam
pop
es
add
lds
xlat
icebp
xor
(bad)
cmc
sti
pop
jno
jmp
or
dec
(bad)
and
repz
cs
movs
mov
addr16
cmp
and
and
lahf
push
shl
xor
daa
jecxz
jbe
or
scas
popf
xor
es
fwait
out
inc
sub
cmp
cld
adc
mov
fwait
inc
xchg
popf
call
aam
sub
lds
cmc
imul
mov
inc
jmp
fs
push
push
adc
shl
push
fsubr
fisttp
ja
inc
jg
push
xor
dec
fst
sbb
mov
adc
nop
sbb
scas
or
test
cmp
cmp
inc
test
mov
out
cs
loopne
dec
ret
jne
push
and
ja
pop
cs
push
cdq
xchg
popf
mov
mul
nop
sub
xor
out
not
mov
ja
int
bsf
(bad)
add
push
mov
mov
movs
cmps
or
out
ss
xor
xlat
(bad)
dec
es
add
ins
js
cwde
je
dec
push
sti
pusha
mov
cmps
jno
out
and
xchg
push
cmp
add
inc
inc
mov
add
cmc
int
push
xor
add
ffree
(bad)
(bad)
pop
scas
loope
neg
ret
jnp
pop
jl
adc
jge
sub
repz
icebp
loopne
fstp
fsubr
scas
pop
cmp
rcl
je
aaa
loop
outs
or
imul
ins
setae
inc
inc
dec
cmp
push
xchg
pop
and
cmp
inc
mov
inc
jl
repnz
adc
fidivr
mov
call
inc
push
jno
push
and
cli
popf
int
push
lods
fwait
jmp
clc
jge
fdiv
lods
dec
mov
xor
or
scas
sub
lds
hlt
popa
push
add
sar
cmp
mov
jecxz
pop
call
xchg
call
das
xchg
(bad)
mov
pop
add
push
es
loop
jle
jae
je
addr16
bts
fidiv
loope
or
inc
movs
pop
(bad)
daa
inc
and
aam
sahf
ficomp
push
or
cmp
gs
scas
(bad)
xchg
push
int3
dec
(bad)
dec
xchg
push
xor
mov
popf
call
daa
mov
inc
aaa
mov
sbb
mov
enter
jp
sub
int
mov
and
div
xchg
push
pusha
mov
xor
add
or
pop
pop
fwait
and
dec
xor
sub
adc
pop
inc
ret
mov
and
cmp
and
(bad)
idiv
jl
or
mov
repnz
jge
(bad)
aaa
shl
(bad)
cld
rol
push
fcmovbe
aas
rol
or
lods
dec
and
fistp
ds
inc
and
jecxz
inc
es
pusha
and
ret
mov
fild
adc
pusha
cmp
jnp
xor
pusha
mov
outs
das
addr16
mov
neg
push
mov
cmp
push
or
cdq
push
pop
add
fs
or
call
test
mov
push
pop
inc
adc
int
push
or
inc
pop
dec
aaa
xchg
dec
or
xchg
cmp
ins
sar
xor
jecxz
adc
inc
js
mov
mov
cmp
mov
jecxz
repnz
cld
sub
mov
adc
ds
fstp
xor
rol
mov
mov
and
pop
(bad)
lods
loope
and
push
mov
mov
dec
xor
mov
ds
and
sub
adc
jns
jns
fiadd
mov
imul
arpl
and
or
mov
test
mov
mov
lds
movlps
idiv
(bad)
jmp
jmp
add
jo
rcr
mov
shr
push
enter
sti
and
arpl
repnz
fs
and
repz
sahf
or
sar
nop
not
xchg
fmul
and
jb
or
xchg
xchg
pop
pop
push
push
arpl
outs
mov
je
pop
cmp
adc
xchg
nop
rol
xchg
mov
xchg
adc
and
push
or
push
shl
fild
inc
sahf
jmp
mov
inc
leave
adc
push
test
xor
and
shr
retf
dec
or
push
inc
pop
imul
aam
jg
out
inc
xor
dec
mov
mov
inc
push
in
es
mov
rcl
xchg
outs
jae
aas
mov
ret
std
sub
lock
repz
pop
ds
pushf
pusha
scas
(bad)
sbb
mov
mov
mov
push
add
jo
fidivr
pushf
and
cmp
popa
add
add
mov
dec
xlat
push
mov
and
and
stc
fwait
sahf
(bad)
sahf
cmp
sub
or
enter
xchg
inc
inc
dec
test
aaa
in
mov
cmp
pop
xlat
pop
jnp
stos
leave
push
pop
pop
outs
mov
push
stos
xchg
xor
or
cmp
xchg
aad
mov
jg
mov
dec
pop
xor
mov
mov
jbe
and
push
cdq
int3
add
(bad)
mov
stc
xchg
sub
mov
rcr
aaa
rcr
xchg
lods
loopne
test
data16
jp
in
xchg
icebp
hlt
aad
js
jmp
jge
jge
(bad)
pmaxsw
pop
cmp
jmp
push
dec
cmc
xchg
popf
push
mov
adc
xor
cld
add
push
scas
ss
mov
add
dec
push
pushf
push
out
xchg
mov
js
outs
sbb
mov
cmp
outs
inc
and
leave
lods
pop
push
dec
add
(bad)
(bad)
or
or
pop
aas
jns
jp
fcmove
sahf
(bad)
jnp
mov
fwait
(bad)
scas
jecxz
neg
and
aas
(bad)
stc
addr16
repnz
pop
outs
pop
aas
mov
fsub
fidiv
test
test
movs
inc
inc
addr16
cmp
and
addr16
sub
cmc
call
cmp
adc
push
sar
in
pop
jle
(bad)
sbb
inc
inc
gs
xchg
push
pop
mov
adc
sbb
addr16
fsub
adc
ja
(bad)
idiv
outs
retf
inc
pop
or
mov
adc
sbb
jl
in
cmp
cmp
mov
(bad)
mov
aaa
pop
stos
or
out
and
imul
outs
dec
fdivr
ror
(bad)
mov
push
test
in
fidivr
test
iret
iret
int
or
mov
popf
mov
rcr
fistp
add
and
lods
add
add
xchg
adc
cmp
out
jno
out
js
aad
mov
dec
lds
and
mov
(bad)
mov
in
or
xchg
cwde
pop
and
fmul
mov
aas
aas
add
cs
emms
popa
jb
sbb
xor
add
dec
les
test
push
push
iret
into
bound
inc
and
add
mov
jg
cmp
xchg
test
scas
push
inc
jnp
cs
cdq
ss
pop
daa
adc
icebp
fisttp
jmp
sbb
xchg
nop
adc
xchg
pusha
retf
sub
inc
mov
dec
leave
mov
jl
cmp
fwait
mov
bound
xchg
scas
pushf
xor
xchg
adc
fimul
xchg
movs
scas
mov
fcomp
push
imul
push
es
xor
(bad)
scas
rcl
xlat
push
in
(bad)
les
mov
fsub
rol
pop
mov
push
cmp
jle
mov
mov
lods
sub
mov
xor
and
pop
and
jmp
dec
data16
push
jecxz
dec
mov
ins
adc
push
mov
aam
jg
push
outs
loope
jbe
das
and
or
call
dec
lods
cmp
jle
inc
push
or
mov
push
push
ret
call
fmul
aaa
inc
add
retf
jecxz
popa
and
sbb
mov
pop
adc
mov
les
mov
add
bound
rol
lds
mov
fisubr
and
ins
f2xm1
jp
dec
loope
ins
or
dec
cwde
and
ret
dec
cmp
clc
and
jle
call
xlat
mov
jl
dec
call
cmp
inc
lahf
xor
mov
pop
pusha
arpl
loopne
loopne
xchg
shr
add
pop
adc
std
sub
loope
rcl
and
mov
imul
mov
pop
inc
and
sbb
add
(bad)
dec
dec
dec
inc
or
sub
mov
or
push
dec
add
mov
xchg
(bad)
jl
sahf
and
icebp
sub
mov
scas
mul
lds
xchg
in
xor
or
fisub
stos
cmps
ret
add
mov
ds
mov
loop
push
mov
xchg
dec
rcl
mov
xchg
scas
scas
dec
loope
adc
add
inc
lods
cmp
push
jb
lods
std
sbb
std
cld
mov
js
in
sti
js
loopne
jmp
xor
repz
addr16
jmp
ror
(bad)
cmp
lahf
out
xlat
mov
mov
and
repnz
pop
mov
gs
xor
stos
ja
loope
std
jae
jg
lods
jp
nop
mov
push
push
adc
dec
pop
mov
(bad)
xor
rol
sub
cwde
or
and
pextrw
add
out
mov
jmp
mov
jbe
cmp
imul
hlt
jp
imul
mov
and
mov
mov
(bad)
enter
lahf
cmp
shl
mov
call
(bad)
and
je
out
mov
test
sub
and
pop
mov
js
lock
cld
retf
rol
mov
pop
ja
jp
push
mov
shl
aad
popa
jne
add
out
pop
shr
dec
sub
js
push
inc
cmp
jae
mov
pop
js
ret
aaa
icebp
shl
out
loopne
dec
faddp
pop
out
mov
fwait
push
shl
mov
leavew
test
ror
ds
test
dec
mov
dec
or
and
adc
loopne
add
jp
das
lods
imul
vcvtss2si
mov
fistp
(bad)
push
pop
mov
loopne
lahf
jge
dec
test
(bad)
dec
sbb
int
shr
jne
stos
scas
jg
ja
adc
and
scas
mov
ds
mov
adc
sbb
sar
scas
sub
adc
push
xchg
out
jg
mov
sbb
push
nop
sahf
stos
int3
mov
or
mov
xchg
fiadd
mov
loope
aad
mov
inc
jno
jecxz
ja
ret
cld
cmp
lea
inc
pusha
scas
sub
inc
add
cmps
xor
sub
loope
outs
or
enter
add
in
mov
je
js
sub
clc
adc
test
and
xor
ja
add
jp
nop
push
pop
mov
or
sbb
stos
jb
xchg
sbb
mov
inc
add
imul
xor
scas
mov
addr16
jp
push
in
mov
sti
dec
sbb
pop
in
and
push
mov
fmul
inc
popa
jbe
mov
mov
push
push
ret
jnp
ficom
ds
inc
fidivr
clc
icebp
mov
scas
mov
add
push
aam
fmul
pop
dec
nop
cs
dec
jge
jno
out
inc
and
(bad)
fcomp
pop
test
cmp
xor
push
pop
mov
push
fstp
xchg
rcr
aas
cs
mov
adc
pop
pop
fwait
es
mov
cdq
xchg
and
pop
xor
or
xor
rol
(bad)
mov
pushf
xchg
scas
loop
cmps
aaa
mov
xor
(bad)
mov
retf
xor
gs
fwait
or
xor
idiv
aad
enter
jge
dec
push
adc
mov
and
cwde
pop
nop
pop
bound
(bad)
cmp
cli
lahf
mov
add
retf
rol
mov
mov
mov
or
mov
enter
int
jge
jle
and
cmp
sbb
cld
jmp
aas
mov
xor
(bad)
jno
sub
mov
mov
inc
dec
and
fucomp
mov
outs
mov
xchg
jl
sbb
adc
mov
aam
icebp
cmp
or
mov
cmp
adc
push
dec
data16
daa
push
pushf
lds
xchg
les
xchg
imul
test
stos
(bad)
sbb
mov
cmps
jo
sbb
push
pop
call
sar
jl
loop
cs
jbe
ds
sub
sub
adc
leave
sub
fnsave
(bad)
sbb
test
es
lods
mov
jg
test
mov
dec
fsubr
push
clc
mov
and
mov
cmps
adc
jmp
fsub
idiv
add
cmp
mov
sti
clc
fst
mov
jl
push
call
cmp
inc
lahf
xor
jg
jns
in
loope
xlat
ja
pop
in
jne
mov
outs
cmp
xlat
add
std
pushf
dec
adc
pop
je
add
adc
push
lds
sbb
push
adc
ffree
out
push
push
adc
data16
fwait
lahf
bound
inc
jle
sbb
cmp
sahf
xor
pop
jge
mov
std
jne
pop
adc
jo
pop
inc
mov
xchg
pusha
xor
repz
or
bound
dec
aas
mov
xchg
jae
xchg
and
and
fisubr
inc
imul
fs
test
ss
cmp
adc
mov
mov
mov
repnz
scas
scas
cdq
mov
mov
scas
das
retf
add
jo
xchg
sbb
rcl
lods
pushf
pushf
cmps
push
cdq
movs
dec
sbb
scas
inc
mov
pop
jp
dec
and
je
adc
inc
mov
cmp
test
test
cli
xchg
cmp
ja
jae
push
pop
push
imul
jbe
sbb
neg
sub
fadd
outs
xor
inc
lds
inc
mov
dec
dec
xor
ret
(bad)
add
xchg
gs
mov
sbb
push
scas
adc
sub
or
fmul
mov
es
repz
xchg
mov
sub
cmp
fild
xchg
ret
leave
add
imul
sbb
cmp
cmp
repnz
mov
xchg
bound
imul
cmp
jb
mov
inc
inc
fsubr
xor
mov
push
fist
lds
xchg
ret
push
xchg
lds
loope
sar
ins
or
scas
popf
mov
pop
(bad)
retf
(bad)
out
jae
movs
cwde
sbb
push
add
das
pusha
mov
aad
js
cli
retf
mov
sahf
clc
in
mov
jecxz
leave
enter
(bad)
sub
xlat
xor
xor
mov
lock
sbb
(bad)
add
push
pop
mov
jns
not
and
cdq
lahf
push
xor
cmps
xchg
xlat
push
xlat
clc
add
inc
out
loope
jg
icebp
jg
and
adc
xchg
js
aam
repnz
ror
ror
sub
or
mov
sar
adc
(bad)
pop
sti
cmc
mov
sub
cmps
push
cmps
xchg
push
adc
sbb
out
(bad)
sub
out
sbb
xor
rol
dec
sub
jbe
cmp
retf
xor
dec
sbb
mov
push
lods
int
mov
cmps
popf
loopne
mov
outs
(bad)
cmp
rcr
ficomp
jmp
xchg
out
xchg
pop
and
ret
push
adc
cmp
xchg
pushf
fbstp
cmps
xor
mov
pop
mov
dec
mov
push
xchg
aaa
loop
cmp
jp
ret
cmp
mov
jne
lods
mov
fidiv
pop
les
xor
push
or
dec
xchg
test
sub
push
sub
sbb
outs
push
xchg
dec
sub
daa
sub
xchg
(bad)
and
adc
loopne
dec
loop
add
ins
jbe
adc
popf
pop
(bad)
imul
mov
test
inc
adc
jl
jle
dec
inc
js
cwde
or
pop
pop
xlat
pop
xchg
and
ficomp
xor
mov
mov
movs
lods
(bad)
icebp
lea
mov
jp
sbb
push
fmul
out
imul
into
iret
dec
inc
push
out
mov
and
sub
mov
arpl
nop
movs
popa
adc
out
sub
sahf
inc
jecxz
sbb
sbb
and
data16
dec
push
inc
push
aad
scas
fistp
dec
and
add
jbe
movs
jl
mov
push
or
inc
or
mov
xor
push
(bad)
jae
out
sbb
(bad)
cmc
pushf
inc
mov
xor
daa
jo
cli
or
je
jmp
adc
aas
cmp
jp
mov
outs
push
in
stos
cmova
and
sbb
adc
stos
fst
inc
add
into
in
cdq
dec
and
daa
rol
daa
retf
sub
push
push
push
int3
jbe
fisubr
mov
outs
xor
int3
sbb
push
cmps
adc
mov
scas
lods
xor
mov
sub
fbld
inc
add
test
es
jae
scas
shl
xor
bnd
sbb
jnp
mov
out
into
clc
ds
jmp
push
aaa
jbe
mov
pop
popa
and
dec
sub
jmp
test
in
jle
push
lock
xor
mov
cld
loop
jl
xchg
sbb
mov
aaa
outs
pop
ret
fnstenv
cmps
leave
adc
dec
mov
sub
pop
xor
and
dec
dec
and
pop
pushf
dec
push
test
aam
adc
inc
fiadd
push
add
fldenv
adc
retf
xor
inc
xchg
adc
shl
int3
call
dec
or
adc
retf
pop
aaa
js
sbb
neg
ret
nop
adc
push
mov
jo
sub
stc
cmp
add
call
inc
daa
mov
jp
mov
sub
fidivr
adc
and
mov
(bad)
sbb
imul
jmp
mov
jmp
(bad)
mov
ins
inc
pop
addr16
sub
dec
mov
adc
loopne
pop
ja
js
adc
push
jg
push
lahf
or
jge
mov
or
sub
or
(bad)
xchg
fistp
outs
dec
xchg
pop
mov
cmp
aaa
xor
sbb
jo
and
xor
sub
push
and
hlt
mov
mov
pushf
stos
dec
sti
xchg
pop
cmp
xor
sar
jne
jno
jg
mov
ret
adc
push
dec
mov
inc
adc
adc
xor
and
cmp
xlat
xor
xchg
fcom
in
inc
inc
and
or
js
add
outs
bound
(bad)
and
xor
test
test
in
test
je
cmp
push
inc
mov
in
sti
cwde
retf
inc
jns
fistp
outs
loop
push
or
sub
mov
pop
add
xor
pop
sahf
push
dec
mov
mov
rol
mov
jmp
inc
inc
xchg
mov
pop
shr
adc
lahf
xchg
jl
arpl
repz
xor
or
jmp
cld
(bad)
loopne
cmps
(bad)
es
jmp
fucom
jecxz
cmp
stc
push
mov
jo
sbb
mov
in
jns
pop
mov
sub
xchg
pop
stos
fwait
sahf
jg
push
out
movs
mov
or
shr
jbe
mov
and
jecxz
cmp
out
xchg
outs
pop
cmp
xchg
pop
cmp
rcl
idiv
retf
inc
and
jmp
sti
jo
iret
outs
mov
or
pusha
pcmpeqd
mov
mov
xor
push
(bad)
into
(bad)
adc
mov
mov
and
shl
inc
jb
mov
add
and
(bad)
enter
mov
xor
rcr
(bad)
adc
adc
push
aam
mov
or
jo
repz
cmp
popf
fist
add
push
push
cmps
inc
jbe
sub
mov
mov
rol
into
xchg
mov
into
mov
adc
fwait
inc
pusha
and
mov
add
inc
(bad)
repz
sar
mov
pop
out
mov
jb
inc
mov
adc
mov
icebp
add
(bad)
fcomp
fimul
sbb
xlat
xor
icebp
push
ins
mov
cs
addr16
repnz
mov
loope
ja
jnp
stc
jnp
inc
cmp
sbb
loop
jo
into
dec
push
dec
dec
mov
jno
out
scas
push
add
(bad)
(bad)
xchg
mov
stc
imul
xor
cmp
xchg
pusha
xchg
inc
xchg
pop
push
push
clc
pop
call
mov
sub
out
adc
sbb
cmps
inc
adc
dec
or
ins
inc
pushf
sub
sbb
ja
idiv
mov
adc
inc
ret
jecxz
inc
jo
imul
cs
pop
(bad)
int
xlat
lock
jnp
in
push
call
adc
dec
dec
jecxz
cmp
mov
pusha
dec
xchg
push
cmps
cmps
test
mov
rcr
jb
jl
mov
xor
mov
xor
mov
mov
push
cs
mov
aad
call
pop
ds
lock
aaa
inc
outs
cld
fdivr
fs
repz
or
sub
test
push
lahf
xchg
xchg
or
aas
add
cld
xchg
dec
push
xor
add
enter
adc
inc
add
inc
sub
shr
cmps
dec
mov
cmp
push
(bad)
repnz
rep
js
mov
xchg
xor
push
pop
daa
jo
outs
nop
add
inc
add
sbb
pop
lea
jl
shl
xor
test
fdiv
jmp
dec
in
dec
int
fcom
dec
cs
cmps
lea
out
(bad)
pop
pop
pop
mov
pop
in
jle
fdivrp
js
cmc
aaa
mov
cmp
or
xchg
xchg
test
daa
test
mov
push
push
mov
mov
enter
scas
int3
and
les
pop
cs
out
iret
shl
push
or
test
mov
int3
jae
xchg
add
or
xchg
and
div
and
mov
xchg
xor
push
call
mov
test
rcr
stos
movs
ins
dec
sub
push
neg
int
dec
pop
in
push
int
mov
xchg
adc
out
inc
xor
push
je
xor
push
ror
push
inc
xchg
push
(bad)
pusha
das
stos
or
mov
aas
sub
out
xchg
loope
xor
jnp
in
push
cdq
pop
scas
(bad)
fisttp
xchg
xchg
and
adc
lds
mov
bound
stos
loopne
inc
arpl
adc
inc
shl
mov
pop
test
mov
enter
sbb
pop
dec
jne
dec
add
and
jecxz
xchg
stos
jl
mov
or
and
dec
adc
add
sbb
push
stos
repz
mov
inc
pop
cmp
fstp
sbb
sbb
rcl
arpl
inc
and
xor
sub
adc
sub
xchg
pop
in
nop
movs
and
and
xor
cmp
jnp
int3
jnp
cdq
sbb
jne
or
test
or
mov
jne
push
add
mov
sub
mov
sub
stc
jmp
mov
and
adc
fcmovnb
fdiv
(bad)
xchg
(bad)
ffreep
mov
pop
(bad)
xor
jl
(bad)
(bad)
in
aaa
jo
cld
jno
dec
or
cmp
daa
push
xor
imul
pop
pusha
gs
dec
cld
ds
fistp
pusha
(bad)
imul
jb
adc
(bad)
push
loopne
mov
pop
cmp
cmp
push
jo
repnz
fdivr
int3
push
adc
cwde
xchg
sub
and
cdq
add
jnp
inc
cmp
dec
sub
add
push
mov
out
dec
inc
aaa
out
pop
cmp
test
add
mov
push
xchg
and
stos
push
test
sbb
inc
outs
add
int3
xor
sbb
dec
or
push
or
fimul
fist
mov
xchg
push
pop
mov
rcr
fisttp
js
ret
and
loope
outs
mov
fstp
xchg
inc
jg
xlat
aas
std
loopne
lahf
mov
ret
popf
pop
pop
jo
jmp
out
clc
mov
mov
arpl
jno
sub
ss
cmps
pop
mov
pop
adc
fwait
in
inc
dec
pop
sbb
push
lods
pop
xchg
popf
pop
pop
push
lds
dec
xor
fcom
movs
cmp
icebp
jnp
pop
inc
xor
inc
fwait
inc
xchg
jne
or
and
arpl
jge
sbb
mov
movs
call
mov
and
jmp
or
dec
enter
dec
adc
in
mov
inc
lds
ja
cdq
ins
xchg
xor
ja
and
test
loopne
fldenv
xchg
sar
mov
jle
cmps
test
mov
mov
push
adc
adc
sub
add
xchg
fsubr
fbstp
sub
xchg
in
ror
les
mov
mov
sub
cmp
or
pop
cmp
xor
daa
sbb
and
jns
add
dec
ret
fsubp
mov
sbb
loop
cmp
bound
jne
mov
pop
outs
xchg
enter
add
mov
mov
jmp
jle
mov
jne
cmp
pushf
inc
aas
xchg
test
fcomp
sub
and
pop
add
pop
pop
pop
and
mov
cdq
cdq
(bad)
movs
movs
enter
in
mov
ror
jge
sbb
mov
mov
mov
dec
sahf
pop
xor
or
and
inc
add
in
xchg
pop
inc
js
cld
xchg
out
push
jo
mov
or
icebp
sub
jnp
test
loope
popa
jmp
stos
add
jg
jle
sbb
dec
adc
movs
xlat
mov
sbb
mov
cmps
lock
cmps
js
aaa
in
in
fstp
pushf
cmp
cmp
cmc
(bad)
shl
out
mov
add
mov
into
pop
das
inc
push
dec
and
clc
pop
jecxz
pop
ja
adc
jecxz
(bad)
push
mov
jl
mov
(bad)
adc
(bad)
sbb
push
enter
push
repnz
adc
push
xchg
xor
ds
and
xor
or
bound
xchg
jne
call
(bad)
or
adc
test
mov
das
sub
sahf
xchg
fisub
cmps
xchg
mov
cmp
in
xchg
inc
lods
dec
mov
push
xor
xor
fs
xchg
inc
loope
mov
loope
push
inc
retf
mov
out
movhps
test
inc
add
mov
pushf
int
push
in
in
mov
adc
xchg
sbb
das
movs
pop
sub
xor
retf
jae
push
xchg
arpl
call
jmp
pop
inc
sub
or
push
fidiv
adc
rol
(bad)
loop
sub
(bad)
test
mov
cmp
adc
dec
imul
test
inc
test
repnz
dec
test
xchg
ret
repz
je
xchg
mov
test
nop
adc
test
out
mov
xor
dec
stos
sti
ret
push
in
and
mov
sbb
and
fistp
jp
and
cmps
xchg
push
iret
lds
jo
icebp
cmp
adc
in
push
pop
movs
sar
and
test
push
sbb
push
mov
pop
cmps
and
adc
xchg
ficom
mov
in
das
jb
pop
les
repz
xchg
push
xchg
mov
cmp
sbb
pop
lods
js
mov
jae
add
js
mov
inc
movs
stc
jge
rcl
sub
pop
mov
fwait
lods
and
add
push
ins
xor
sub
test
sbb
fsubr
pushf
cmp
test
sub
cmp
clc
out
imul
push
pop
mov
inc
inc
jne
in
js
pop
dec
fs
sbb
fwait
xchg
cmp
out
xor
or
and
loope
sbb
imul
movs
test
adc
xchg
out
aas
lea
pop
adc
push
push
ret
mov
dec
inc
xlat
test
add
je
cmp
dec
xchg
xor
inc
shl
out
xchg
out
jmp
inc
jb
aaa
dec
leave
push
pop
pop
in
inc
fs
xlat
sti
and
jns
or
aaa
aas
jg
rep
fdivrp
out
ds
xlat
fidivr
lods
fwait
jmp
into
loopne
pop
xlat
lock
sbb
loope
imul
stos
ja
clc
xchg
fstp
movs
or
(bad)
sbb
jg
mov
imul
jecxz
sub
icebp
loopne
adc
jp
sbb
jp
(bad)
fistp
icebp
jg
dec
mov
adc
and
test
mov
inc
hlt
fdiv
sbb
test
dec
call
dec
mov
loopne
xor
ror
mov
int
sbb
jno
retf
jmp
push
inc
xchg
push
loope
cwde
push
adc
cmp
in
xchg
in
and
cmp
daa
xchg
test
xchg
scas
leave
cs
push
jp
test
sti
jb
retf
ret
push
and
jnp
sub
jb
nop
xchg
adc
jne
add
cmp
inc
mov
adc
adc
lods
mov
pop
cmp
(bad)
or
xor
mov
stos
xchg
icebp
push
dec
dec
ja
out
xchg
inc
xchg
xor
pop
daa
and
pop
push
int
pop
pop
pop
in
inc
dec
inc
cmp
popf
(bad)
and
xlat
sbb
cwde
out
loope
cmp
retf
inc
adc
bound
jp
inc
ret
add
jno
iret
push
mov
shl
mov
in
scas
daa
ret
ins
bound
push
call
inc
clc
or
adc
lea
fisub
xchg
cmp
adc
cmps
iret
movs
cmps
and
daa
jnp
adc
mov
int
out
je
mul
(bad)
fcmovb
xchg
sub
dec
jne
mov
sub
xchg
or
or
add
push
out
pop
add
add
aas
xchg
or
xchg
sbb
and
xlat
jmp
dec
daa
mov
movs
in
pop
clc
dec
mov
xchg
sub
and
or
mov
adc
sbb
pop
inc
call
sti
mov
sub
rep
jp
xchg
popf
ins
mov
sbb
dec
push
bound
add
mov
je
adc
cmps
mov
add
jp
cdq
pop
mov
mov
cmps
jb
adc
or
ficomp
adc
inc
xchg
mov
and
jecxz
rcl
in
pop
jg
(bad)
or
(bad)
push
std
sub
adc
popf
jmp
mov
hlt
mov
pop
pushf
mov
sub
in
mov
inc
cmp
mov
xchg
inc
adc
cmc
stos
cmp
in
outs
dec
add
pop
sub
mov
fild
push
pop
dec
push
lock
mov
mov
ret
loope
push
test
leave
mov
jmp
stos
in
rcl
popf
cmp
cwde
lahf
out
inc
mov
jnp
push
in
fs
jns
mov
(bad)
mov
mov
jae
dec
xor
cmp
test
push
inc
aaa
outs
pop
and
lahf
inc
xor
pop
mov
retf
sub
add
mov
test
push
inc
inc
xchg
push
cdq
dec
das
push
push
mov
cmps
and
(bad)
adc
iret
dec
xchg
pop
in
icebp
cld
mov
test
popa
mov
ret
mov
xor
ror
pop
bound
dec
mov
ds
xor
sub
cmp
jge
xchg
push
sub
je
mov
sub
fs
ror
push
out
test
fisubr
or
sub
xchg
jle
ins
imul
ins
or
ss
loop
jb
out
fimul
mov
pop
ret
stc
(bad)
dec
mov
inc
je
sbb
jp
fiadd
mov
popf
(bad)
mov
idiv
mov
cld
in
aaa
mov
and
inc
aad
push
push
inc
std
ins
cwde
fwait
push
les
sub
leave
shl
imul
pop
pusha
add
pop
dec
in
fnstsw
cmp
pop
mov
iret
int3
lock
mov
sbb
pop
outs
fadd
daa
outs
mov
push
add
and
dec
dec
sub
push
jp
lods
dec
adc
(bad)
rcl
mov
pmaxsw
push
xchg
xchg
mov
pop
fsubrp
inc
mov
xchg
mov
aaa
inc
push
cmp
(bad)
mov
xlat
or
lock
mov
cmp
sub
sub
ficomp
lea
rep
cmp
sub
das
sub
mov
test
sti
in
xor
ins
adc
push
in
fstp
dec
(bad)
data16
and
cmp
dec
in
imul
xor
push
and
fnstsw
data16
out
test
(bad)
cmp
pop
sbb
sbb
jo
dec
jecxz
leave
ror
xor
icebp
imul
loope
int
mov
dec
dec
lahf
cmp
or
dec
clc
cld
repz
fmul
in
inc
adc
cmp
stc
stc
and
mov
ds
cmp
shl
xchg
(bad)
xor
fild
sti
fidivr
mov
or
mov
ret
ins
enter
movs
dec
push
retf
in
cli
cli
bound
scas
inc
adc
out
push
aaa
pop
dec
(bad)
jno
lds
sub
mov
int
les
sub
inc
stos
pop
sub
(bad)
dec
icebp
push
and
jmp
mov
dec
add
jmp
mov
jle
mov
les
push
xchg
jne
mov
mov
cwde
push
out
js
scas
xlat
xor
fidivr
int3
sub
test
sub
and
sbb
cmp
cmp
es
lds
enter
nop
aad
jge
out
or
aaa
and
push
pop
adc
cmps
adc
je
in
add
scas
xor
adc
add
mov
pushf
adc
cmp
(bad)
ins
cmps
outs
mov
dec
mov
push
dec
iret
xor
jmp
mov
addr16
inc
inc
inc
cmp
sbb
repz
cmp
sub
and
sub
jnp
sub
mov
gs
sub
iret
and
xor
jge
inc
push
sub
test
push
les
inc
cwde
cmps
cmp
sub
lods
in
nop
xlat
pop
add
pop
mov
and
mov
add
ror
stos
stos
repz
test
div
cli
dec
lea
clc
inc
inc
mov
pop
inc
mov
scas
std
adc
xor
aad
add
je
iret
popf
pop
out
pop
mov
test
mov
mov
(bad)
jmp
dec
adc
pop
rol
cmps
js
mov
xor
fadd
fdiv
and
dec
sahf
mov
push
(bad)
stc
xor
xchg
and
jae
cmp
and
mov
fcmovu
adc
cmp
fmul
pop
mov
shl
cmp
sahf
adc
clc
sub
mov
pop
ja
cdq
ins
sub
jns
jmp
fneni(8087
outs
mov
jb
inc
mov
push
mov
test
dec
dec
push
cdq
or
push
or
pop
adc
push
mul
and
test
xchg
adc
shl
clc
not
pop
sub
push
adc
in
out
jo
ret
icebp
and
daa
adc
jmp
pop
jmp
push
scas
test
and
xor
(bad)
adc
mov
mov
push
push
pop
rcl
push
mov
cdq
inc
stos
loope
int3
dec
add
push
inc
cmp
sbb
xchg
push
inc
mov
lahf
sbb
pop
stos
xchg
push
adc
push
add
adc
in
cmps
push
xchg
sub
sub
add
dec
or
xor
ds
push
cmp
push
xor
out
mov
and
jno
inc
dec
xlat
pushf
or
test
push
loopne
dec
dec
or
sub
push
xchg
xor
stos
dec
ror
push
test
into
inc
inc
pop
cmp
jae
cli
mov
dec
mov
outs
fdivr
(bad)
(bad)
cwde
sub
or
es
loopne
add
or
inc
rol
push
into
jecxz
das
enter
inc
js
xchg
dec
add
xchg
sub
ret
leave
rol
adc
inc
stos
retf
add
xchg
mov
cmp
or
stc
test
jae
cmp
add
ins
clc
hlt
jecxz
jo
dec
cmc
(bad)
dec
jne
cmp
cs
dec
mov
cmps
daa
cli
clc
fwait
in
and
sbb
imul
js
repz
mov
adc
(bad)
jo
jge
dec
pop
dec
add
cmps
out
out
in
jecxz
mul
mov
shl
jns
adc
dec
xchg
mov
and
add
xor
xor
pop
or
and
arpl
mov
add
repnz
mov
sbb
js
rol
aad
push
lea
adc
add
mov
arpl
adc
xor
jno
out
call
inc
inc
jbe
test
popa
movs
mov
push
aad
adc
pop
test
pop
fwait
loopne
fstp
ss
mov
mov
div
sbb
sar
ret
rcr
fsubr
fldcw
dec
repz
cwde
inc
cmp
inc
cld
(bad)
jle
jb
jae
mov
lea
xor
out
or
sbb
rcr
repz
pop
xchg
push
mov
clc
(bad)
adc
and
cmp
mov
stos
jmp
xchg
popa
xchg
jmp
xor
mov
mov
popa
je
adc
(bad)
lods
sbb
inc
sub
push
outs
pop
add
retf
mov
nop
dec
xchg
scas
(bad)
adc
adc
mov
daa
aam
xchg
hlt
(bad)
xchg
fs
jae
jb
(bad)
int
push
pop
push
mov
shr
lock
ins
sub
(bad)
xchg
imul
fadd
sub
fidivr
push
pop
jg
cs
mov
adc
outs
mov
pop
outs
mov
mov
pop
icebp
in
(bad)
hlt
sahf
test
or
add
mov
ins
mov
mov
cmps
sbb
sbb
mov
jle
dec
cmp
gs
xchg
test
cwde
jmp
xor
icebp
push
leave
pop
sbb
out
xchg
mov
dec
ficom
sub
mov
stc
je
add
das
lds
loopne
push
and
or
icebp
jge
imul
ss
mov
in
adc
shr
iret
adc
pusha
in
(bad)
cmps
repz
add
lahf
jmp
lods
mov
aam
push
xchg
rol
mov
jmp
jne
xchg
inc
inc
fcmovnbe
sbb
loope
bound
pop
mov
mov
xchg
add
add
test
push
and
pop
call
jecxz
lahf
sbb
jl
xchg
test
add
mov
sub
call
and
jmp
dec
mov
push
shl
push
jns
sub
cmp
cmp
xor
mov
mov
rol
call
call
xor
leave
add
dec
push
mov
and
ja
jo
xchg
adc
paddsw
inc
jg
mul
sub
inc
ss
push
mov
mov
bound
test
push
in
pop
mov
sub
ss
and
xor
sbb
and
xchg
mov
aam
pop
les
pusha
nop
xchg
aaa
sub
and
dec
push
mov
jbe
fldenv
cld
test
adc
jp
rcr
mov
pop
pop
ror
jmp
sbb
cmp
or
les
xchg
retf
addr16
(bad)
sub
jg
test
xchg
repnz
jae
cmps
cmps
sub
sub
mov
fsubr
or
push
sti
arpl
mov
cmp
push
pop
xor
inc
rcr
xor
jl
lahf
(bad)
nop
add
and
addr16
stc
ins
cwde
scas
or
movs
fnstcw
dec
mov
dec
fs
ret
adc
ins
arpl
add
test
mov
sub
ror
mov
ficomp
int3
sbb
std
lahf
sbb
clc
aam
push
(bad)
dec
arpl
fmul
into
push
adc
neg
mov
cmp
or
adc
jl
and
les
xchg
int3
lods
sub
scas
pop
daa
mov
not
fidivr
ds
(bad)
stos
jg
mov
(bad)
in
aas
cld
cli
(bad)
mov
lock
jg
fld
mov
out
outs
jle
(bad)
(bad)
stos
das
jg
call
daa
push
xchg
adc
js
add
hlt
leave
add
push
int
add
jmp
es
mov
push
or
lahf
sbb
rcl
ror
in
jmp
jmp
or
inc
and
xchg
scas
inc
inc
and
mov
fwait
loopne
call
inc
cmp
add
inc
pop
xchg
cdq
and
mov
cmps
mov
std
mov
xor
ret
outs
bound
ins
test
sub
adc
(bad)
mov
mov
stos
int
mov
pushf
pop
sbb
scas
pushf
cdq
ret
addr16
lahf
mov
lea
enter
loope
movs
inc
mov
adc
or
xlat
rol
std
mov
xchg
or
test
mov
mov
ins
cmp
dec
add
test
xlat
push
pop
and
aam
sub
cmc
push
sub
ja
xor
int3
aam
dec
out
dec
and
inc
popa
mov
jge
fild
int
sahf
mov
jnp
ss
int
call
aas
addr16
in
in
push
fdiv
ret
xchg
add
dec
mov
sbb
fldz
test
out
add
aas
cmp
add
cmp
push
cmp
pop
daa
out
or
out
mov
stos
push
fs
test
std
dec
push
jae
ja
and
aas
(bad)
call
and
div
rcr
into
scas
push
gs
mov
jb
mov
mov
sub
mov
mov
call
outs
or
out
lahf
movs
pop
lods
cmps
retf
stos
dec
mov
xchg
sbb
or
test
xchg
jl
xchg
stos
push
jmp
sar
out
popf
fisub
daa
and
hlt
or
inc
popa
inc
adc
jecxz
jbe
and
and
pop
or
jmp
retf
inc
mov
push
div
nop
retf
and
and
enter
imul
mov
and
adc
jne
push
gs
ins
test
inc
outs
jbe
sbb
aas
aaa
pop
push
lea
mov
scas
mov
mov
xchg
test
repz
cdq
push
push
fs
mov
fidivr
lds
push
and
xor
js
xchg
jno
xchg
adc
test
leave
leave
dec
adc
leave
(bad)
gs
cmp
mov
mov
mov
inc
sbb
scas
fsub
jg
dec
and
mov
inc
mov
sub
mov
jle
call
pushf
cmp
movs
inc
shl
xchg
inc
scas
stos
test
test
loopne
imul
mov
enter
stos
scas
loope
aaa
faddp
fwait
outs
mov
pop
jnp
test
mov
inc
and
dec
shr
(bad)
fwait
enter
inc
or
(bad)
out
jmp
jb
sbb
shr
js
pop
cmp
out
clc
ds
jmp
push
cmp
adc
outs
inc
daa
cld
rol
loopne
sub
and
adc
loop
push
push
inc
xchg
call
stos
adc
xchg
test
fcom
inc
movs
daa
inc
mov
in
or
xor
scas
and
out
jmp
in
fbstp
nop
fldcw
test
lods
sahf
mov
jp
movs
arpl
cmp
cmps
inc
fwait
xor
(bad)
retf
add
out
(bad)
push
hlt
push
lds
xor
int3
adc
nop
sub
test
inc
leave
jbe
enter
adc
push
mov
(bad)
cmc
pop
add
add
jne
pop
dec
cmc
sbb
adc
push
jmp
mov
mov
xor
pop
adc
test
adc
push
or
fist
scas
push
xor
jbe
dec
inc
ss
mov
push
inc
push
sbb
or
adc
es
pop
lea
test
mov
sub
sbb
and
hlt
dec
inc
inc
push
mov
int
adc
outs
popa
retf
stos
outs
xor
loope
cdq
arpl
(bad)
loop
mov
and
push
ins
mul
in
push
jmp
outs
jmp
pop
jae
int
mov
js
test
aad
pop
imul
pop
lahf
sbb
call
xor
dec
ret
fadd
xchg
adc
loop
xchg
sar
jno
sbb
dec
add
push
pop
mov
cld
(bad)
dec
js
ret
daa
clc
call
mov
jecxz
stc
in
out
(bad)
imul
mov
xor
test
imul
jg
int
push
mov
cmp
ins
add
cmp
(bad)
loope
movs
and
xchg
fadd
sti
pop
cmp
cli
stos
scas
mov
aaa
or
idiv
(bad)
out
scas
jg
(bad)
aas
(bad)
cld
xchg
pop
std
pop
sub
push
out
and
xchg
add
pop
rol
add
mov
push
push
inc
push
adc
test
cmp
popf
test
(bad)
repnz
sbb
mov
jnp
out
(bad)
mov
pop
adc
jp
ja
pop
jle
stc
cmp
sbb
sub
pop
test
rcr
in
(bad)
pop
(bad)
cli
mov
jl
idiv
push
mov
mov
pop
pop
(bad)
aas
ret
repz
sbb
ss
xor
add
outs
dec
mov
mov
and
das
ins
jle
je
push
push
adc
fdiv
sub
xchg
inc
mov
rol
fwait
out
(bad)
movs
rcl
push
dec
call
inc
bound
inc
dec
dec
mov
sbb
(bad)
sbb
add
add
pop
sbb
cmp
mov
xor
xlat
jp
inc
pop
movs
and
jmp
stc
not
in
or
push
cwde
push
fnstsw
(bad)
icebp
and
test
arpl
push
xchg
ret
imul
dec
shl
in
in
push
jno
aam
pop
cmp
cmp
mov
(bad)
int
nop
dec
jp
mov
movs
clc
mov
stos
jno
push
imul
mov
sub
or
cmp
cmps
mov
inc
push
or
xchg
ret
adc
aam
aas
test
xchg
or
and
or
mov
pushf
sub
pushf
inc
std
sub
lods
dec
mov
inc
xor
and
and
jge
push
xlat
aam
xchg
sbb
mov
pop
into
jne
dec
movs
sbb
loope
xchg
enter
or
imul
fidivr
stos
jge
in
and
js
ins
(bad)
mov
adc
xor
sub
repnz
and
add
repz
mov
out
mov
inc
cmp
mov
bound
jb
imul
loopne
sti
adc
inc
sbb
out
sub
push
sub
lods
outs
pop
mov
fsub
js
(bad)
arpl
jns
inc
cmp
jns
repz
int3
std
xor
pop
sahf
(bad)
pop
xchg
into
add
cs
cmp
mov
and
mov
div
mov
sub
adc
jmp
dec
in
call
sar
fcomp
push
jno
adc
push
lods
jnp
push
clc
cmp
in
xchg
xchg
mov
repnz
mov
adc
dec
bound
(bad)
jmp
add
and
adc
fcomp
(bad)
arpl
stc
adc
imul
lea
leave
loope
cs
fptan
sbb
sbb
scas
sub
pop
mov
mov
cdq
dec
mov
push
lods
into
shr
(bad)
jecxz
cmp
dec
out
stos
xlat
scas
loopne
lea
lock
jmp
sbb
and
das
mov
dec
sahf
mov
mov
fistp
mov
sti
repnz
das
push
mov
in
mov
add
push
sub
mov
sti
pusha
jmp
jecxz
das
(bad)
sar
push
loopne
jg
add
pop
xchg
sub
and
add
ds
call
push
clc
push
in
test
mov
jnp
icebp
retf
or
repnz
cmp
sahf
test
ds
dec
mov
push
xor
add
sbb
xchg
push
sub
jl
jl
pop
jmp
mov
movs
sub
pop
cdq
add
aad
cmp
push
xchg
add
fwait
push
daa
adc
bound
cmp
enter
push
mov
std
inc
cmp
cmp
inc
xor
hlt
rcr
les
mov
or
leave
dec
and
dec
dec
xor
xchg
in
cmp
or
imul
int
fnsave
push
cmp
outs
jnp
aas
ins
sub
ret
outs
fcomp
and
xchg
stos
jo
sar
mov
fwait
pop
add
outs
mov
fcmovbe
push
retf
out
add
cs
retf
cmp
pop
xor
jge
jmp
jp
aaa
or
jg
sub
gs
cmp
imul
xor
mov
dec
and
lahf
retf
add
in
inc
cmps
shl
neg
xchg
dec
xchg
mov
xchg
xchg
leave
sub
sbb
out
dec
bound
pushf
mov
dec
movs
mov
retf
xlat
into
loop
aaa
push
loop
neg
jnp
mov
lock
cld
xchg
jg
hlt
jmp
(bad)
in
pop
jl
(bad)
aas
std
lds
clc
retf
fistp
jg
out
jg
mov
adc
adc
sbb
cli
clc
xor
test
pop
mov
pusha
push
movs
push
xchg
xchg
jmp
xor
out
push
js
retf
fwait
js
std
xbegin
mov
jmp
mov
cld
aad
jl
neg
std
retf
das
jg
xchg
xchg
push
pop
jmp
mov
dec
inc
dec
sub
and
adc
in
enter
jle
test
mov
mov
dec
push
ja
mov
inc
adc
das
add
fsqrt
add
or
mov
cmp
(bad)
lock
gs
sar
shr
or
pop
jle
sti
xchg
out
pop
ret
xor
cmps
pop
int
cmp
dec
sbb
je
sub
bound
pop
shl
addr16
int3
lock
xchg
dec
das
add
pusha
inc
ret
ins
inc
bound
mov
rol
inc
add
retf
data16
clc
sub
sti
jo
fidiv
jle
xchg
daa
call
pop
jb
out
lds
xchg
shr
imul
mov
fld
into
aam
adc
shl
sbb
xlat
retf
adc
push
jns
pushf
bound
call
mov
(bad)
data16
aaa
xchg
push
into
push
sbb
inc
cmp
adc
push
dec
jecxz
repnz
pop
lea
ror
mov
add
mov
mov
lahf
jecxz
fidiv
add
fnstenv
fisttp
fiadd
cmps
push
xor
adc
adc
and
shr
ror
sbb
cmps
mov
ss
xor
xchg
adc
cmc
cmp
loop
add
adc
popa
inc
push
adc
mov
adc
xlat
aam
sub
pop
xchg
mov
stc
pop
mov
sub
aad
pop
test
dec
xor
mov
scas
out
std
dec
cmps
fst
xor
pop
or
or
or
je
or
mov
jge
popf
jns
ins
mov
or
clc
mov
div
icebp
jb
jo
sbb
out
push
rol
mov
pop
stos
das
push
xlat
jno
aaa
adc
int
lds
leave
inc
push
add
or
mov
outs
stos
cwde
stos
in
add
add
in
lds
fidivr
fnstenv
pop
(bad)
lods
in
enter
sub
push
add
(bad)
int
aas
push
adc
ja
jle
mov
bnd
loope
fst
cmp
dec
or
xor
aam
inc
add
cmp
imul
inc
jle
dec
push
mov
and
syscall
push
stos
mov
jl
add
xor
sub
pop
cdq
sbb
push
(bad)
stos
loopne
push
pop
mov
sbb
in
retf
test
repz
leave
inc
push
scas
xchg
pop
out
ds
js
jp
jle
adc
or
loop
pop
sub
mov
or
jo
mov
gs
sar
popf
pop
call
jg
inc
inc
sub
cmps
xor
cmp
cs
sbb
or
fisubr
pushf
cmp
cmps
iret
sahf
ret
out
icebp
repnz
jge
mov
pusha
jg
jmp
mov
mov
xchg
ficom
adc
mov
loopne
push
aas
mov
xor
into
js
mov
xor
add
fistp
push
add
ins
mov
push
jg
cmps
dec
ffreep
std
xchg
out
jecxz
mov
cmp
int3
icebp
ret
mov
mov
sbb
loopne
sub
or
dec
and
out
push
inc
push
and
mov
sub
mov
fs
mov
ss
or
cdq
sub
mov
add
pop
add
add
loope
lods
in
aam
push
jge
repnz
jae
shl
pusha
jmp
loope
sub
test
outs
stos
jg
ret
adc
jg
int
(bad)
sbb
jae
gs
das
pop
xchg
inc
and
pop
aad
adc
inc
sub
inc
sbb
jno
aad
sub
mov
jo
jle
lods
imul
mov
into
fiadd
ds
inc
adc
xchg
inc
sbb
xchg
or
xor
dec
pop
push
sbb
cdq
in
and
cmp
div
call
icebp
ror
add
neg
jg
cld
adc
pop
cmp
scas
lods
cdq
icebp
(bad)
div
in
out
inc
mov
push
cmp
retf
mov
fisubr
sub
adc
dec
sub
cmps
mov
movs
adc
push
adc
sub
popf
pop
(bad)
mov
leave
sbb
movs
inc
lods
push
dec
icebp
cmc
arpl
jns
cdq
mov
mov
jecxz
mov
mov
stc
loopne
jl
jmp
cmc
icebp
fst
std
retf
out
jge
das
(bad)
jmp
js
les
shr
ffreep
jecxz
xlat
mov
xor
(bad)
sub
jle
add
call
(bad)
daa
cmp
cmp
jle
icebp
jno
fcomp
scas
pop
pop
vpsubq
jno
rcl
cmps
pop
cld
repz
sbb
jg
(bad)
mov
std
jmp
dec
aas
inc
addr16
in
retf
clc
ficomp
push
mov
fwait
not
xchg
add
xchg
push
mov
js
jmp
test
and
pop
inc
sbb
mov
call
push
push
jp
jbe
aad
push
inc
or
xchg
fs
ja
popf
xlat
cli
retf
iret
fbld
rcl
mov
xor
cmp
push
cs
fdivr
imul
iret
sbb
movs
jae
mov
sti
clc
jne
std
sub
mov
pop
cwde
sbb
in
rol
xchg
mov
or
xchg
and
cmp
out
and
es
and
and
ret
repnz
setbe
xor
adc
aad
test
pushf
movs
dec
adc
movs
imul
add
push
pop
pop
push
in
loope
clc
sbb
inc
dec
sbb
mov
pop
jecxz
ficomp
push
xchg
dec
inc
leave
and
cli
repnz
push
mov
xor
pop
or
sub
xor
sar
and
ins
cmps
add
jg
sbb
xchg
ins
ins
daa
mov
and
scas
push
xchg
cmp
mov
dec
movs
out
cmc
mov
imul
out
inc
and
pushf
push
sbb
fmul
cmps
inc
fndisi(8087
jp
pop
cmp
test
ins
test
jb
fldlg2
fld
mov
xchg
or
inc
pop
mov
loop
cmp
xchg
js
mov
imul
gs
pop
cmp
push
adc
imul
cmps
and
mov
xchg
fwait
ror
push
loop
dec
sbb
mov
fnstcw
or
inc
scas
xlat
pop
rol
mov
loope
mov
push
push
push
add
push
jp
push
push
add
jmp
fdiv
jecxz
sub
adc
mov
inc
push
ins
push
jne
adc
bound
xor
or
xor
sub
es
push
ret
movs
sbb
mov
in
push
sbb
sub
sbb
dec
push
int
mov
push
and
sub
cmp
sub
cdq
and
sub
cmc
xchg
out
femms
hlt
mov
mul
pop
jo
jmp
mov
xchg
mov
xchg
dec
fimul
or
ins
dec
xor
xchg
mov
pop
(bad)
daa
push
inc
dec
jbe
xor
inc
xchg
xlat
push
mov
mov
hlt
mov
arpl
adc
cmp
mov
test
or
lahf
jmp
pop
imul
push
sub
fst
bound
stos
mov
xchg
enter
pop
push
scas
inc
sub
loopne
or
ret
or
jne
mov
and
stos
retf
faddp
arpl
loop
je
mov
mov
or
fwait
jmp
call
cmps
bound
dec
xchg
xchg
movs
out
mov
test
mov
mov
aad
scas
test
mov
test
mov
les
(bad)
imul
pop
(bad)
or
ret
out
jecxz
dec
cmp
clc
enter
(bad)
stc
out
mov
loop
adc
test
cmp
(bad)
pop
jno
ffreep
jmp
xor
lea
call
or
cs
test
jmp
out
mov
jae
mov
test
inc
sub
or
int
shr
sti
(bad)
push
xor
test
aad
sub
adc
inc
xor
jmp
jp
inc
stos
das
push
fwait
add
pop
push
rcr
pop
mov
dec
and
sub
ja
adc
and
push
retf
mov
dec
push
int3
inc
mov
repz
push
adc
(bad)
out
out
inc
stos
mov
mov
cwde
mov
mov
adc
xchg
mov
push
mov
loop
add
and
es
pop
sbb
(bad)
outs
xor
jbe
and
mov
mov
xor
jmp
cld
gs
mov
cwde
adc
xchg
test
jns
push
adc
retf
cmp
dec
jl
test
loope
fsubr
outs
mov
fidiv
out
sahf
aaa
int
push
xchg
jae
jle
dec
stos
adc
stos
pop
and
pop
scas
hlt
mov
arpl
dec
lock
out
inc
fdivr
or
lds
ret
push
inc
jecxz
dec
adc
jecxz
and
sbb
mov
adc
loope
xchg
popf
pusha
div
push
mov
adc
icebp
sti
cs
in
mov
xchg
cmp
movs
in
xchg
call
hlt
add
std
loopne
mov
leave
aas
jg
stc
jnp
in
(bad)
(bad)
inc
xchg
aas
push
lahf
mov
in
aaa
jg
retf
xchg
jle
fwait
scas
(bad)
(bad)
stos
outs
ds
out
aas
and
jg
in
js
std
push
lock
outs
loop
cmps
mov
mov
test
leave
inc
dec
jno
aad
xor
xchg
xchg
test
lahf
xlat
loopne
xor
pop
pop
(bad)
movs
retf
sub
inc
shl
cli
dec
cmp
stc
sub
jp
out
jge
add
icebp
pushf
add
dec
(bad)
icebp
or
sub
fnstcw
xchg
out
ret
lahf
inc
faddp
outs
aas
xchg
test
add
es
xchg
and
push
adc
outs
repnz
or
sahf
mov
fadd
imul
and
xor
js
mov
loope
repz
jno
movs
jmp
maxps
xor
retf
mov
xor
mov
out
lds
mov
xlat
dec
loope
xchg
xor
pop
idiv
fisubr
cwde
movs
cli
pop
sbb
mov
rol
or
out
cmp
stos
cmps
inc
xchg
mov
cmp
sbb
push
in
ins
mul
imul
rcr
push
xchg
xor
jmp
jecxz
sbb
scas
dec
adc
push
into
aas
sbb
sahf
sub
cmp
xor
jo
loopne
ins
jge
(bad)
or
mov
inc
or
pop
xchg
inc
jmp
push
out
(bad)
cdq
or
(bad)
jno
pop
in
stos
out
mov
mov
push
les
add
ss
sub
pusha
xchg
fnstcw
pop
pushf
jmp
mov
or
arpl
push
je
mov
sbb
sbb
fldenv
sti
in
(bad)
icebp
jg
iret
mov
ds
adc
cmps
call
or
push
addr16
je
inc
push
frstor
(bad)
mov
aas
xchg
xchg
pop
push
mov
(bad)
fisub
ds
and
icebp
jne
jl
and
xor
arpl
mov
mov
ficom
cmp
push
pop
mov
dec
inc
stos
rol
jmp
out
lods
sbb
inc
adc
std
cmp
cmp
test
pusha
jmp
imul
addr16
loop
fwait
in
add
jle
nop
les
xchg
ss
ss
fstp
adc
pop
jmp
pop
(bad)
mov
xor
cwde
mov
lahf
dec
in
fwait
sbb
iret
loope
loop
lods
imul
cmp
out
imul
call
mov
aas
mov
adc
loop
sub
or
movs
sub
xchg
(bad)
loope
fsub
mov
(bad)
adc
jl
sbb
in
jecxz
dec
jecxz
repnz
pop
out
xchg
rcr
or
push
sub
mov
lds
jp
test
(bad)
cld
mov
test
in
adc
adc
outs
cmps
test
xchg
mov
cmp
push
(bad)
cmp
sub
cmp
rcl
cmps
(bad)
adc
into
jp
(bad)
cmp
stos
xor
outs
inc
sub
cmps
rcl
jnp
mov
jl
js
push
jo
sub
mov
ficom
mov
xchg
push
hlt
cmc
push
mov
shr
add
push
push
pop
push
xchg
(bad)
push
sub
mov
stc
aad
inc
fcmovnbe
rol
aam
out
out
(bad)
lock
out
cmps
jns
push
jno
cld
sbb
outs
mov
push
jo
or
sub
sbb
ds
jmp
push
xor
rol
in
rcr
jb
aaa
add
mov
push
push
jmp
stc
xchg
retf
repnz
into
imul
or
sbb
sbb
imul
push
push
cmp
call
jge
in
sbb
imul
enter
mov
inc
pushf
xor
mov
xor
imul
test
aad
cdq
sbb
push
mov
adc
xor
mov
sub
mov
cld
sbb
inc
jns
ret
xchg
ret
add
imul
cwde
inc
out
in
popw
ja
pop
xor
add
xor
jmp
dec
xor
jb
adc
jmp
data16
mov
aad
mov
sub
stc
xchg
jl
daa
ucomiss
cmp
mov
cmp
aam
scas
fnstsw
lea
dec
pusha
xchg
retf
push
jae
or
cmps
(bad)
je
fwait
and
int3
or
sbb
es
lods
int
jmp
iret
xlat
icebp
neg
scas
loop
das
aas
stc
xchg
jmp
into
jno
inc
and
mov
dec
push
fisttp
sub
ss
(bad)
jecxz
pusha
mov
xchg
lea
in
adc
scas
fnstsw
repnz
add
mov
cdq
scas
cmp
cmps
stos
jg
jecxz
or
add
iret
faddp
(bad)
stos
mov
lods
xchg
cld
retf
inc
push
ret
hlt
adc
cld
in
mov
out
mov
adc
(bad)
xchg
aaa
pop
ret
mov
adc
addr16
push
xchg
(bad)
jnp
aas
(bad)
cmc
jnp
jo
cld
ret
pop
push
icebp
lahf
ss
sub
(bad)
(bad)
cmps
js
mov
jecxz
fld
xchg
xor
jmp
jmp
xchg
in
mov
cmc
xlat
pop
jmp
pop
aas
push
pop
(bad)
in
(bad)
repnz
mov
dec
mov
push
sub
ds
jp
dec
xor
das
sti
inc
es
sbb
cmp
loopne
pusha
aas
or
dec
pop
daa
add
cdq
mov
dec
cmp
(bad)
lds
pop
adc
mov
(bad)
hlt
je
call
out
out
cmp
mov
xchg
repz
clc
popf
inc
cwde
mov
retf
mov
repnz
mov
shl
stc
js
adc
adc
ret
push
sbb
sbb
xor
dec
and
arpl
cmp
int
call
dec
xor
das
sub
(bad)
xor
inc
add
std
cmp
mov
(bad)
fidiv
mov
sbb
xchg
xchg
(bad)
mov
nop
stc
sub
and
add
pop
loope
sbb
cs
and
cmps
add
cmp
inc
loope
stc
sbb
jecxz
shl
fs
push
mov
adc
add
push
test
(bad)
rcl
dec
mov
pop
pop
cdq
and
mov
aaa
fild
retf
pop
mov
retf
mov
retf
jnp
(bad)
push
movs
retf
je
mov
into
pop
into
jnp
arpl
imul
idiv
xsave
daa
and
or
mov
and
scas
retf
test
stos
xor
lea
ficom
push
or
mov
pusha
inc
ret
sub
mov
loope
iret
mov
out
mov
jo
or
adc
inc
stos
into
add
ret
cld
clc
ds
mov
pop
add
jl
pop
inc
retf
popf
mov
jmp
dec
or
icebp
fisubr
pop
fstp
jne
add
repnz
mov
div
xor
loopne
xchg
scas
sub
ret
fimul
scas
xchg
mov
jl
pop
test
in
gs
es
add
or
call
fistp
rcl
xchg
ins
(bad)
dec
xchg
mov
enter
sub
inc
mov
call
jns
loopne
mov
mov
mov
push
push
inc
ret
sub
adc
add
jae
or
xor
and
fsubr
push
inc
adc
jb
arpl
push
mov
fisttp
push
ins
sub
push
test
(bad)
xor
and
imul
adc
mov
inc
pop
xor
mov
and
cmp
dec
bound
pop
push
pop
test
into
scas
(bad)
out
push
les
mov
sub
mov
mov
loopne
cmc
sub
inc
loopne
dec
cmp
test
pusha
xor
clts
add
or
lds
sbb
cli
shr
jae
sub
add
test
inc
adc
test
scas
push
and
jmp
dec
or
push
pop
mov
mov
std
xchg
mov
xchg
mov
mov
lods
pop
push
aad
sub
inc
outs
scas
sbb
and
push
sub
lock
cmp
mov
neg
jnp
or
adc
inc
cmps
cmp
mov
(bad)
(bad)
ds
lods
push
or
adc
lahf
(bad)
pushf
loopne
cli
imul
sbb
imul
pop
xor
jnp
xor
js
fsubr
test
xchg
(bad)
mov
cmc
fsubrp
cmp
leave
sbb
jo
jno
inc
cli
cmp
add
jb
push
gs
inc
sub
jae
sub
outs
ds
and
push
cdq
outs
(bad)
ja
test
inc
or
sbb
popf
stos
int
shr
and
popf
cwde
ss
push
add
adc
jns
add
scas
sbb
cmc
pop
addr16
mov
pop
js
frstor
js
jmp
xor
out
loop
daa
bswap
mov
int3
pushf
ins
dec
pop
sbb
daa
mov
or
inc
test
cmp
and
scas
loop
popf
stos
push
repnz
loop
lahf
jg
das
mov
(bad)
jmp
xchg
pop
loope
scas
ds
ret
dec
ds
sar
cmps
scas
jle
lds
std
in
xlat
pop
std
(bad)
das
mov
stc
loop
jl
ror
stc
repz
aas
std
ret
aaa
mov
sti
mov
(bad)
out
std
fldcw
mov
jmp
mov
dec
adc
(bad)
xlat
aas
(bad)
cld
lahf
ds
cli
mov
xlat
ds
cld
add
imul
jge
shr
pop
xor
aad
mov
mov
xchg
icebp
clc
adc
sar
jae
jge
push
daa
stc
js
pop
adc
clc
test
js
sbb
das
push
test
mov
dec
xlat
jno
ficom
mov
imul
add
xchg
pop
fadd
ret
mov
pop
test
and
mov
xchg
pop
push
sahf
mov
mov
in
aas
mov
test
push
mov
lds
mov
and
sar
repz
jmp
aaa
ins
cmp
popf
pop
add
mov
jo
jle
push
out
jle
(bad)
in
aaa
out
loop
fisubr
out
(bad)
cmp
dec
loop
(bad)
jmp
sub
cmc
arpl
mov
pop
xor
cmps
inc
fwait
ror
xchg
dec
add
add
or
mov
adc
jmp
ja
arpl
adc
loopne
inc
pop
rcl
addr16
push
jmp
push
ins
jmp
or
sti
mov
fild
push
call
jnp
fwait
int3
test
pusha
pop
mov
xchg
pusha
mov
mov
(bad)
jp
pop
call
or
xchg
arpl
xchg
pushf
jbe
mov
gs
imul
outs
or
arpl
pop
movs
add
dec
cmc
fisttp
mov
pop
aaa
dec
add
shl
(bad)
in
out
retf
sbb
int
or
lds
mov
rcr
neg
frstor
js
jmp
fiadd
jo
dec
inc
jnp
push
sbb
ss
das
aam
push
loope
repnz
inc
int3
jbe
retf
loope
jo
mov
push
pop
mov
pushf
pop
test
cmp
in
out
repnz
aas
sti
hlt
or
ins
adc
rol
jae
cdq
pop
rcl
or
jbe
pop
retf
jmp
xor
outs
ja
cmp
loop
mov
push
aaa
xor
cmp
out
push
pop
arpl
dec
and
cmps
and
sub
sbb
pop
arpl
ins
add
mov
mov
xor
cmp
xor
or
adc
fnstenv
dec
and
mov
sbb
enter
sbb
pop
sub
outs
mov
adc
sbb
loope
pop
in
retf
shl
add
icebp
add
pop
arpl
jge
cmp
cmp
ror
mov
xchg
lock
daa
add
icebp
xchg
push
int3
dec
jne
mov
test
dec
aad
dec
dec
or
fisttp
stos
xor
cmps
or
cmps
mov
pop
inc
xor
push
push
push
and
mov
mov
es
mov
fistp
or
pop
cmp
fcmovnbe
fstp
repz
mov
jb
push
mov
int
imul
push
mov
mov
dec
mov
mov
mov
daa
adc
mov
rcl
jb
dec
xor
adc
dec
imul
fidivr
mov
dec
dec
push
scas
sub
mov
push
add
pop
adc
imul
push
aad
es
pop
cmps
mov
push
into
adc
(bad)
adc
(bad)
out
mov
xchg
imul
cdq
mov
aad
in
shl
inc
pushf
fst
mov
fisttp
jb
mov
fbld
adc
jne
mov
scas
mov
dec
inc
mov
std
pop
(bad)
div
cli
dec
lea
clc
inc
jecxz
aas
retf
adc
push
or
inc
or
xor
adc
mov
inc
loopne
xchg
pop
ss
xchg
xchg
arpl
push
sbb
cmps
sub
mov
pop
xchg
mul
aaa
mov
pop
int
pop
dec
not
(bad)
add
imul
mov
imul
sar
add
inc
mov
call
xchg
sbb
popa
sbb
dec
xchg
mov
dec
mul
cmp
and
mov
iret
(bad)
out
addr16
adc
(bad)
fisttp
cmp
sbb
das
pop
cmp
push
outs
out
cmp
xlat
pop
and
je
into
mov
or
mov
xchg
inc
push
jmp
loopne
sahf
int
inc
shl
into
arpl
bound
sbb
fs
dec
sub
xchg
mov
mov
aad
movs
mov
cli
push
(bad)
sahf
(bad)
xor
xchg
ret
popf
mov
(bad)
leave
aad
pushf
cmp
inc
in
xchg
movs
sub
fs
mov
jg
push
icebp
mov
test
jge
mov
jb
arpl
xchg
mov
push
std
in
sub
les
ss
push
cmp
pop
mov
fidivr
loopne
(bad)
jmp
fistp
ja
xchg
div
pop
das
push
(bad)
movs
or
push
dec
push
jmp
out
lock
inc
ja
out
dec
ins
rcr
scas
loop
lods
dec
js
into
and
out
hlt
daa
push
cmps
ror
push
rol
loope
psubq
inc
add
pop
sbb
ins
push
aas
ja
add
cmp
mov
and
push
movs
push
pop
in
cmps
pop
cmp
(bad)
sub
xchg
add
ret
jnp
shl
test
mov
xchg
cdq
mov
rcl
push
push
cmps
xchg
add
mov
out
lods
mov
in
rcr
pop
mov
rcr
nop
sub
jge
jns
mov
pop
loopne
push
outs
loop
mov
(bad)
call
add
das
(bad)
jmp
popf
mov
cmp
icebp
sbb
shr
pop
aas
mov
std
cmc
xchg
(bad)
jmp
ds
(bad)
test
loop
xchg
jno
or
dec
pop
cmp
add
xor
xchg
aad
lds
mov
neg
xor
pop
sbb
mov
mov
add
push
ret
dec
cmp
adc
pop
cmp
sub
in
out
test
cmps
inc
sbb
int3
in
xor
inc
add
das
mov
es
mov
rol
xor
adc
and
or
das
scas
lahf
lahf
(bad)
fisttp
js
jne
mov
or
adc
int
inc
or
inc
xor
test
fs
add
or
jecxz
mov
xor
and
jno
add
mov
xlat
mov
aad
mov
jo
xchg
push
data16
jnp
jno
clc
xor
jmp
rol
pop
xchg
mov
adc
mov
jmp
ror
pop
mov
hlt
jo
xabort
add
xchg
sub
fistp
retf
idiv
add
xchg
mov
lods
sub
hlt
(bad)
jmp
jo
and
cmp
xor
mov
jg
hlt
aaa
mov
in
lods
fsubr
repz
aaa
mov
and
(bad)
pop
ret
and
mov
dec
jge
sub
xor
shl
ss
clc
cmp
(bad)
in
pop
pop
es
cmps
js
pop
stc
ja
jnp
stos
stos
sub
repnz
enter
mov
adc
dec
pop
aas
dec
mov
shl
push
adc
push
dec
shl
mov
shl
pop
mov
leave
jl
and
call
xchg
pop
push
cld
pop
sub
inc
bound
shl
bound
xor
lock
xchg
and
nop
js
cli
mov
pop
cmp
dec
and
stos
out
cmp
cmp
or
and
lods
adc
(bad)
mov
sar
mov
xchg
inc
add
retf
aad
les
add
fild
fiadd
cmc
bound
ins
xor
cmp
aam
push
mov
and
mov
fsub
sub
inc
sub
hlt
dec
dec
xchg
and
push
and
mov
inc
xor
xchg
movs
inc
(bad)
jge
jae
push
icebp
jne
xor
xchg
xchg
(bad)
jmp
sbb
add
(bad)
jae
sbb
pop
outs
xor
aad
enter
leave
and
fcomp
scas
mov
popa
movs
sub
outs
hlt
push
fmul
or
push
sahf
sub
cmc
lahf
sbb
jl
xchg
xor
ins
and
jnp
sbb
jmp
jp
mov
mov
call
xlat
xchg
and
or
dec
dec
(bad)
pop
xor
or
mov
mov
mov
sub
push
sbb
test
sbb
adc
pusha
movs
daa
xchg
and
leave
cmp
enter
mov
es
rcr
fwait
add
cmps
mov
aaa
into
jl
stos
xchg
and
jl
imul
sbb
outs
jbe
movs
div
jnp
pop
jbe
mov
dec
sub
call
dec
inc
retf
xor
call
jae
fiadd
fwait
inc
cmp
xchg
xor
or
jecxz
push
inc
push
test
mov
and
shl
call
adc
repnz
ins
mov
loopne
mov
or
ret
push
sbb
mov
mov
add
(bad)
xlat
mov
popa
outs
lds
xchg
fidivr
ja
lods
or
adc
xchg
out
mov
mov
and
adc
shr
mov
jle
cmps
sbb
jmp
pusha
movs
push
in
sub
or
movs
stos
mov
retf
stos
movs
mov
cmp
retf
add
clc
cmp
jno
stc
cmp
in
(bad)
cvtpi2ps
cmp
xchg
retf
js
xor
int
mov
fild
cmp
pop
lahf
sti
adc
std
dec
sbb
enter
aad
pop
leave
shl
dec
arpl
mov
lahf
push
outs
mov
jb
cmp
and
in
stc
cmp
fcom
loopne
cmp
aaa
sub
add
es
loope
neg
loopne
jg
rcr
xchg
xchg
adc
loopne
outs
add
sar
sti
jg
mov
xlat
push
pop
rcr
ret
mov
jnp
push
fidivr
jmp
or
lds
retf
mov
(bad)
(bad)
loopne
fidivr
out
pop
jno
ret
mov
paddsw
mov
cmp
in
cdq
movs
popa
dec
adc
fwait
or
shl
lea
std
jmp
push
dec
test
mov
cld
daa
aaa
mov
sbb
pop
popa
das
iret
(bad)
cmp
rcl
xor
rcr
push
mov
loope
sub
mov
fcomp
js
out
mov
pushf
inc
jae
sbb
repz
mov
je
dec
aad
js
int
jo
add
sbb
mov
xor
cli
fwait
jo
out
inc
cmc
jnp
repnz
xor
dec
mov
add
xor
pop
pop
movs
imul
xchg
aad
pop
or
xor
js
inc
cld
ret
(bad)
push
cmps
aas
jns
xlat
jmp
ds
adc
js
add
mov
aaa
lock
outs
jecxz
setg
xchg
setle
std
ja
rcr
push
call
adc
mov
mov
pop
mov
xor
rol
aas
outs
jnp
aam
loope
mov
je
xor
or
mov
icebp
xor
mov
mov
not
nop
jp
in
aaa
sti
in
xchg
icebp
inc
sub
push
adc
add
or
ss
or
xchg
push
movs
(bad)
mov
bound
call
xchg
mov
mov
arpl
or
pop
retf
or
jp
mov
push
push
movs
mov
cmp
pop
mov
xor
js
inc
mov
xchg
inc
mov
sar
sub
add
inc
jb
test
fld
add
ja
cli
jnp
sub
sbb
mov
adc
das
sub
adc
ins
jmp
push
ficomp
js
mov
fidivr
stos
or
call
mov
xor
(bad)
out
ins
jg
movs
inc
fwait
shr
ret
xor
sub
dec
fst
ficom
push
mov
cli
lods
cmp
mov
jge
cmps
sbb
or
call
push
ret
dec
js
mov
mov
pop
stos
aas
loopne
out
mov
fadd
popf
sbb
out
xchg
xchg
inc
cmp
jno
test
nop
sub
mov
clc
sub
add
ror
arpl
push
scas
daa
stos
aad
jp
ret
mov
cmc
cli
add
push
cmps
jle
clc
icebp
outs
mov
add
dec
aad
adc
add
sbb
fbld
pop
(bad)
div
cli
dec
lea
clc
inc
jecxz
aas
clc
inc
in
add
jb
jmp
fidivr
pop
out
or
cmp
loopne
scas
mov
test
dec
inc
mov
xchg
push
xchg
pop
inc
rol
(bad)
loope
popa
rcl
xchg
dec
dec
or
dec
rcl
in
aam
push
dec
outs
bound
mov
cmp
push
cdq
push
das
dec
push
xor
movs
psllw
fld
ds
mov
scas
mov
stc
scas
jp
imul
add
in
dec
out
mov
dec
mov
or
cmp
mov
mov
push
dec
mov
jne
jnp
push
adc
aaa
jecxz
into
pop
jo
(bad)
es
cmp
ins
and
out
dec
push
dec
pushf
or
lods
(bad)
repz
xor
dec
shl
add
mov
daa
push
in
fadd
mov
popf
add
dec
push
lahf
in
mov
inc
ret
mov
div
in
sub
call
fldcw
in
fsubr
sub
inc
inc
adc
xchg
fild
jbe
mov
or
cld
pop
test
or
inc
inc
sub
push
push
pop
mov
push
mov
jge
test
sub
imul
xchg
mov
cli
push
xor
pop
inc
sbb
test
dec
and
dec
mov
jmp
xor
pop
sar
lods
push
pop
and
pop
jecxz
and
or
mov
mov
(bad)
push
add
and
add
jmp
add
mov
mov
add
enter
pop
repz
sbb
cmp
push
xlat
xchg
test
adc
rol
pop
cld
ds
jns
jmp
lods
loopne
sbb
pop
fidivr
sub
pop
out
stos
inc
push
imul
movs
jno
jle
(bad)
sub
loopne
pop
clc
mov
jne
mov
fldcw
aam
dec
push
and
cs
das
push
retf
fistp
leave
retf
clc
in
jecxz
mov
(bad)
fcmovnbe
dec
aad
push
xchg
add
push
mov
jl
push
iret
dec
bound
popf
retf
inc
icebp
das
dec
jne
cdq
mov
inc
ins
ror
ret
out
dec
iret
aas
mov
dec
adc
stos
iret
xor
call
lahf
ret
(bad)
repz
stos
xor
push
out
inc
jns
es
(bad)
cwde
cmp
sub
aam
sub
push
mov
cmc
jns
mov
mov
outs
sbb
adc
push
fdiv
dec
mov
push
inc
adc
cli
rol
cmc
push
loopne
and
push
(bad)
cmp
and
(bad)
jo
jae
data16
sbb
(bad)
xor
lods
retf
(bad)
shl
push
or
add
mov
loopne
sbb
cmps
cs
(bad)
fisub
mov
lods
push
mov
fs
test
xchg
push
cwde
cdq
adc
inc
xchg
xchg
sub
dec
jecxz
and
jg
in
stos
dec
loop
test
mov
pusha
inc
add
dec
in
mov
inc
inc
pop
xchg
or
inc
iret
movs
mov
add
aam
push
sti
hlt
mov
xor
cmp
xchg
inc
sti
loopne
cmp
pop
inc
dec
ss
fisub
push
cdq
jne
dec
xchg
cmp
mov
out
xchg
mov
pop
out
xor
mov
sub
mov
lds
bswap
push
adc
nop
and
arpl
xlat
outs
nop
xchg
sbb
ss
fcmovnbe
sbb
sbb
(bad)
xlat
retf
or
das
sbb
lea
xchg
fisub
pop
cmp
push
ja
jmp
cmp
push
xchg
cmp
fmul
out
jecxz
sub
dec
xor
mov
inc
mov
xor
inc
and
adc
fwait
aaa
push
jl
test
or
das
scas
das
pop
xchg
cli
in
(bad)
out
dec
mov
sbb
mov
(bad)
into
xchg
dec
jg
jbe
test
fbld
xor
sbb
cmp
push
jecxz
dec
cmps
sub
adc
jno
add
test
or
add
out
mov
shr
cmp
fadd
xchg
pop
ins
pop
or
xchg
mov
in
in
arpl
add
and
push
cmp
movs
mov
push
and
and
(bad)
xchg
mov
and
call
es
dec
sub
xchg
loop
pushf
retf
xchg
dec
fwait
mov
jp
sahf
lock
bound
jb
movs
cmp
stos
or
sbb
cmp
add
sbb
sub
loopne
js
cmps
(bad)
xor
mov
les
stos
add
scas
fistp
xchg
fild
inc
sub
and
imul
lea
sbb
outs
cwde
or
jmp
cwde
mov
cmp
dec
or
adc
xchg
cmp
test
jecxz
xor
inc
jns
xor
es
aaa
xor
add
push
push
push
scas
fmul
fs
nop
mov
mov
cmps
stos
mov
push
push
mov
push
adc
lods
test
rsqrtps
dec
sbb
out
inc
cmp
cmps
stos
leave
test
aas
mov
cld
sub
mov
mul
cmp
inc
or
in
or
mov
nop
mov
ficomp
xor
popa
fistp
stos
and
xchg
aad
dec
(bad)
lods
call
pusha
adc
pop
cs
jnp
in
sbb
fcomp
loop
out
push
add
daa
test
popa
inc
adc
push
xchg
cmps
enter
cmp
jb
int
push
pop
xchg
xchg
sbb
sub
inc
cmps
loopne
add
or
adc
lahf
push
mov
cmc
push
arpl
sub
ds
out
ss
lock
cmp
aad
das
das
dec
mov
in
xchg
xchg
push
nop
ret
sti
mov
es
pushf
adc
push
jl
push
add
mov
jo
pop
add
dec
jo
inc
rcl
enter
cmp
fiadd
scas
(bad)
pushf
adc
mov
jns
lds
add
and
cli
cdq
ds
xor
push
add
pop
adc
mov
retf
ret
mov
cld
mov
jnp
inc
or
lock
mov
dec
(bad)
sub
int3
test
xchg
inc
les
adc
sbb
adc
(bad)
pushf
dec
xchg
clc
(bad)
sbb
lock
aas
(bad)
sti
mov
movs
add
jo
(bad)
dec
sub
xchg
add
(bad)
in
(bad)
mov
movs
push
hlt
mov
mov
mov
outs
sub
ins
add
out
fistp
jecxz
mov
test
xchg
push
xor
bswap
mov
cwde
pop
add
test
lds
nop
add
xchg
mov
push
test
cmps
and
cmp
adc
fcmovbe
and
rcl
add
sbb
cmps
inc
and
cmp
jle
repz
adc
dec
pop
jmp
or
lods
and
cdq
push
(bad)
dec
add
sbb
ret
mov
sub
sub
fldenv
pop
and
lea
arpl
inc
mov
das
push
out
mov
loopne
push
ins
cmp
jnp
(bad)
mov
dec
(bad)
cdq
js
ins
add
fdiv
fstp
pushf
mov
cmp
dec
les
test
mov
stos
aam
and
popa
and
pop
sub
push
je
sub
xchg
bswap
(bad)
repz
into
and
sbb
call
loop
sub
push
inc
inc
bound
sbb
push
fisttp
pop
(bad)
jmp
ja
add
out
stc
repz
jg
cwde
and
mov
out
xchg
shl
xor
sbb
mov
sbb
retf
daa
test
outs
imul
cld
test
shl
mov
cmp
js
adc
cwde
fwait
scas
pusha
retf
popa
cmp
inc
adc
cli
lahf
mov
and
cld
or
fsub
add
es
or
scas
xchg
xchg
add
jo
dec
mov
push
jge
popa
sti
repz
inc
outs
dec
adc
or
add
dec
das
jecxz
jmp
xchg
(bad)
jnp
adc
pop
cmp
loop
in
mov
mov
xor
xor
aaa
lds
sar
clc
xchg
test
xchg
jl
mov
pop
push
push
bound
out
push
mov
jo
push
push
mov
stos
pop
mov
dec
pop
mov
outs
addr16
lds
and
sub
or
leave
fs
lods
sub
loopne
test
xor
mov
push
sub
mov
stos
and
ins
cmp
div
(bad)
in
sub
xor
je
dec
xor
sbb
dec
xchg
in
mov
ret
xchg
mov
les
or
mov
imul
shl
fdivr
and
adc
cmc
xchg
jo
int
shl
outs
or
sub
stc
add
pop
fptan
xchg
pop
loopne
(bad)
jmp
sub
mov
std
fstp
inc
adc
jl
mov
nop
daa
loopne
in
add
cld
pop
lods
(bad)
jae
xor
mov
jbe
jne
outs
xor
push
rcr
jg
idiv
dec
fdivr
cmc
fwait
mov
out
popf
mov
sti
std
add
imul
mov
add
or
push
in
mov
mov
dec
and
inc
sub
xor
xor
retf
(bad)
call
cmps
cmp
test
aad
push
gs
iret
dec
fldcw
dec
push
inc
jge
repz
or
push
call
or
shl
popf
push
inc
xchg
popf
inc
ds
push
pop
add
test
add
dec
pop
xchg
pop
retf
ss
xchg
jl
int
push
nop
push
jp
xchg
sub
pushf
hlt
in
leave
out
push
inc
pop
jmp
movs
xor
jg
bound
ss
mov
mov
mov
cmp
mov
cmp
test
jns
outs
sub
add
and
and
or
jmp
scas
sbb
das
push
(bad)
jmp
out
pop
add
add
dec
dec
js
mov
nop
loopne
xchg
xchg
sbb
lock
push
inc
push
mov
inc
mov
xor
cdq
pop
push
jnp
ret
call
sar
push
(bad)
sar
pop
jns
push
das
lahf
inc
call
bound
stc
ds
or
adc
mov
cld
popf
dec
pop
test
stc
cmp
xchg
sbb
scas
pop
ins
cmp
or
xchg
fisub
inc
sub
stc
fcmovb
push
mov
dec
dec
mov
jg
push
ds
fwait
call
adc
xor
push
pusha
push
cmp
push
and
cmp
mov
std
div
xchg
adc
push
or
pop
das
or
mov
fimul
(bad)
jmp
add
lds
pop
add
mov
in
push
push
jge
fidivr
and
not
push
imul
(bad)
dec
cmp
xor
mov
movs
jmp
loopne
or
or
mul
mov
sbb
outs
and
push
pop
mov
nop
dec
sub
clc
inc
(bad)
(bad)
out
scas
(bad)
shl
daa
cmp
fadd
xor
popf
movs
xchg
mov
movs
fdivp
fcmovbe
int
mov
loopne
cmp
jmp
rcl
call
stos
ret
dec
scas
push
push
mov
fisub
mov
outs
xor
xchg
add
adc
push
daa
mov
ret
aad
stos
shl
mov
sub
mov
scas
xchg
aas
cmp
dec
add
(bad)
adc
add
xor
jmp
mov
or
jnp
xchg
dec
adc
jne
ret
cmp
popa
loop
and
movs
mov
addr16
adc
cdq
dec
xchg
rol
inc
jb
mov
outs
retf
mov
mov
or
and
adc
and
sbb
inc
and
cmp
movs
rol
jmp
jmp
sub
fstp
loope
jg
in
inc
push
pop
fcmovbe
out
mov
stos
pop
mov
mov
data16
cmc
inc
shl
aam
test
clc
fild
cmp
mov
and
adc
mov
loop
jg
or
paddusw
xchg
loop
repnz
dec
lds
hlt
push
cmp
gs
mov
les
aaa
and
(bad)
push
inc
xchg
popa
adc
sti
ins
jne
xchg
icebp
pop
mov
leave
es
enter
lahf
pop
ins
call
xchg
repz
mov
ds
sub
sub
mov
inc
xor
dec
mov
iret
leave
mov
fmul
js
push
pusha
cmp
mov
test
fisubr
jmp
xchg
mov
jle
xor
mov
add
fwait
and
jl
ja
bnd
push
xor
(bad)
inc
mov
push
imul
cmp
stos
rcl
test
cmps
leave
mov
sahf
sbb
vminsd
ss
repz
mov
mov
adc
dec
loopne
push
push
cwde
push
add
scas
pop
pop
repnz
pop
cdq
ss
les
pop
sub
jb
pop
mov
sbb
in
dec
fld
iret
shl
nop
inc
test
add
sbb
xchg
add
xchg
inc
and
cmp
push
fild
jmp
pop
lods
popf
cmp
jmp
jecxz
lock
mov
push
mov
in
add
add
rol
popa
test
addr16
lock
ja
(bad)
outs
cmp
mov
outs
aas
nop
loop
sar
nop
dec
and
lock
jg
cmp
imul
xchg
movs
cli
in
out
jmp
sbb
jmp
push
push
pop
push
add
rcl
js
push
and
stos
xor
(bad)
mov
fs
stos
inc
ins
arpl
or
(bad)
mov
loop
in
push
lods
or
test
push
cli
adc
inc
add
call
scas
sub
xor
loop
pusha
in
lock
addr16
cmps
xor
in
xchg
sbb
xchg
fbld
mov
and
jnp
add
imul
fs
push
fistp
mov
mov
sub
jb
push
adc
cmps
jle
push
push
out
stos
stc
scas
cld
pop
dec
mov
stos
and
add
stos
jge
mov
cwde
loop
pop
movs
rcr
and
or
in
retf
(bad)
out
xor
call
jae
mov
scas
push
push
movs
(bad)
aad
and
(bad)
rcr
cld
mov
pusha
sbb
mov
push
out
xchg
mov
jnp
or
inc
fsave
sti
mov
jne
aam
ret
and
jbe
int
xchg
fldcw
xor
adc
cmp
aad
cmp
movs
int3
movs
inc
test
sub
imul
mov
dec
enter
push
scas
scas
stos
xlat
sub
aas
popf
xlat
bound
adc
pop
stos
jecxz
push
xchg
gs
mov
sub
test
aad
mov
cmp
nop
mov
cmp
push
dec
(bad)
nop
inc
adc
push
aaa
sbb
xchg
jle
push
mov
adc
mov
or
add
rcr
inc
scas
out
and
xchg
jo
les
jle
into
aas
test
mov
ret
mov
xchg
popf
mov
and
(bad)
pop
sti
rol
fisttp
in
mov
in
cmps
mov
and
ret
rol
cs
jecxz
shl
and
inc
lock
ret
cmp
jg
mov
mov
fiadd
pop
dec
sub
jg
es
push
dec
cmc
aas
dec
in
ficom
mov
(bad)
jo
loop
adc
ins
pop
cmp
addr16
rcl
aas
dec
push
xchg
test
pop
outs
xor
sbb
(bad)
ficomp
getsec
loop
pop
das
cs
nop
fdivr
push
rol
arpl
or
cld
push
inc
push
dec
adc
loop
push
pop
adc
cmps
loop
push
fs
mov
call
pop
push
push
mov
mov
sbb
repz
repz
call
aad
in
icebp
ds
xlat
ja
fmul
mov
mov
and
sbb
aaa
push
xor
popf
fwait
or
add
mov
cdq
ds
(bad)
clc
outs
jg
repz
jg
out
jmp
jecxz
push
outs
loope
xchg
outs
loopne
(bad)
js
out
pop
mov
push
lds
pusha
cmc
int3
adc
fwait
mov
loop
push
montmul
cmps
inc
fcmovbe
fstp
popf
mov
sub
jno
mov
aad
ror
ret
btc
test
pushf
push
or
mov
inc
fisttp
sbb
and
scas
inc
jbe
outs
out
push
in
(bad)
and
(bad)
mov
call
fsubr
shr
xlat
mov
pop
into
pop
pusha
retf
imul
push
mov
push
push
pop
xlat
xchg
jg
jo
test
aad
scas
jge
std
fs
cmps
cmc
jmp
test
les
dec
shl
jns
dec
repnz
add
jmp
xchg
loopne
jg
xchg
sub
mov
and
out
and
call
jnp
xchg
in
fisttp
inc
dec
mov
in
xchg
scas
pop
jg
or
xchg
aad
test
daa
bnd
fbstp
and
pop
dec
fsub
aad
pop
inc
pop
imul
fbstp
jp
imul
xchg
inc
inc
fist
dec
adc
jmp
pop
mul
jl
mov
jle
ret
stos
xchg
inc
fstp
in
lahf
iret
sti
cli
sbb
xor
test
icebp
push
bound
aam
sub
aam
js
test
adc
pop
fild
jbe
mov
test
and
shl
leave
and
(bad)
test
jge
mov
and
pop
dec
cmps
push
out
fld
jne
jnp
imul
mov
sub
adc
jmp
js
out
test
mov
jmp
lea
sahf
pop
push
pusha
jp
xor
mov
push
push
adc
daa
jo
cli
push
xchg
sbb
loope
lahf
loop
aas
sti
stc
aas
sub
loopne
cld
xchg
loopne
inc
add
jne
idiv
fucomi
cmp
or
adc
jg
sti
outs
add
or
xchg
out
scas
inc
mov
sub
xchg
aad
jmp
cs
mov
fwait
mov
repz
hlt
xor
es
test
fadd
mov
jp
push
aad
sub
sub
mov
nop
cmp
or
adc
lock
loope
push
adc
push
mov
call
mov
scas
bound
jb
pop
stos
jo
lahf
cmp
xlat
jp
sub
mov
xor
mov
loopne
push
in
xchg
cmp
mov
add
or
retf
push
ins
rol
test
loopne
pop
repz
ins
leave
ret
and
sub
ins
mov
(bad)
out
test
repz
test
jecxz
not
pusha
test
int3
and
sahf
popf
pop
xchg
inc
ror
jg
push
dec
movs
imul
jno
push
(bad)
and
mov
push
adc
stos
adc
push
mov
inc
movs
adc
mov
sahf
ja
push
mov
int3
pop
pop
sub
mov
fs
nop
out
mov
dec
and
cmc
mov
loop
outs
jle
mov
jg
daa
xchg
pop
adc
in
retf
imul
inc
in
popa
cmp
js
cwde
cs
cwde
sub
xor
repz
mov
das
sahf
mov
ret
add
ja
cmps
mov
mov
jbe
idiv
fwait
cmp
xchg
xchg
pop
sbb
and
ins
mov
and
ins
js
es
cmp
mov
pop
rcl
loope
push
mov
mov
ror
push
hlt
test
int
sub
mov
stc
cmp
and
mov
adc
dec
ret
sbb
dec
test
adc
icebp
cld
cmp
mov
dec
jae
mov
sub
push
push
out
xor
push
lds
adc
pop
(bad)
clc
pop
xchg
dec
lds
movs
sar
and
push
mov
sub
push
das
sub
pushf
std
or
mov
movs
jmp
cmp
jae
sbb
mov
or
xchg
adc
jo
mov
cdq
rcl
and
mov
mov
xor
push
mov
xchg
or
mov
ret
xor
cwde
cmp
xchg
dec
add
outs
movs
dec
dec
and
jne
add
adc
mov
test
call
pop
inc
outs
jae
repnz
dec
hlt
jbe
leave
ins
dec
cmp
dec
push
push
mov
cld
inc
pop
xchg
xchg
and
(bad)
loope
sti
loopne
add
pop
ins
fidiv
jle
push
mov
(bad)
jl
cmp
cmp
push
loope
in
shr
lea
adc
or
pop
(bad)
adc
not
inc
inc
mov
ins
and
std
popf
and
lods
sbb
push
mov
outs
jb
lds
mov
mov
popf
sbb
retf
mov
scas
jnp
call
call
movs
js
sub
repz
add
ins
adc
cmp
fisttp
and
sti
cmp
mov
in
adc
push
ins
xchg
aaa
out
mul
cmp
sub
pop
test
pop
out
loopne
jecxz
or
movs
cmp
or
pop
jecxz
cmc
mov
test
enter
jmp
inc
and
inc
adc
sbb
sub
popf
xor
cmp
(bad)
iret
xchg
mov
pop
ins
iret
(bad)
mov
out
pop
outs
jbe
sbb
mov
imul
sub
out
scas
and
lds
jl
inc
cmp
stc
inc
push
jns
push
push
inc
adc
and
leave
pushf
cmp
cld
cmp
(bad)
test
pop
jecxz
push
setne
pop
rol
jno
cmp
jbe
mov
adc
cmps
sub
xor
inc
mov
add
sub
sub
ror
and
jmp
mov
jae
fadd
xchg
inc
rol
cmps
mov
or
icebp
call
fs
into
cld
mov
ins
stos
mov
xchg
adc
clc
pop
jno
lods
dec
inc
push
push
cmp
retf
push
stos
jmp
outs
ja
mov
sub
and
cmc
and
ss
cmp
sbb
es
pop
cwde
mov
outs
les
cmps
inc
jmp
aaa
in
xor
pop
add
ins
imul
lods
loope
aad
js
retf
xchg
mov
push
lea
bnd
ret
mov
iret
(bad)
in
pop
sbb
jl
xchg
jg
popa
ret
cmc
das
push
mov
sub
in
fistp
int
mov
cmp
std
rol
movs
mov
sub
mov
dec
xor
xchg
and
sub
pop
sbb
add
dec
dec
lock
ror
inc
xchg
add
shl
loopne
fadd
and
mov
dec
adc
mov
add
sub
mov
xchg
pop
jne
arpl
adc
repz
adc
inc
ror
fcomp
pop
push
pop
fistp
popf
adc
push
jns
stos
xor
cmp
std
enter
scas
and
pop
outs
ja
iret
mov
or
rcr
xor
and
push
xchg
data16
fldenv
push
retf
std
daa
pop
popf
or
jae
cmp
mov
mov
daa
pop
mov
xor
stc
mov
test
dec
movs
adc
dec
inc
dec
xor
jae
adc
pop
adc
mov
fcmovbe
mov
jne
ja
sti
call
(bad)
(bad)
jmp
dec
dec
(bad)
in
xchg
sti
retf
call
fiadd
fimul
loope
jbe
bound
push
sub
repz
ds
pop
pop
pop
and
dec
pushf
jns
jmp
pop
or
and
jnp
sub
cmp
adc
cmp
xor
inc
fst
aad
push
dec
sub
pop
repnz
adc
stos
mov
mov
push
xchg
retf
jl
mov
stos
fisubr
and
sub
les
push
adc
rcr
icebp
sub
call
pushf
pop
inc
push
arpl
adc
std
inc
add
and
test
xchg
repz
repz
test
fcomp
dec
inc
dec
cs
xor
repnz
mov
cmp
cmps
and
jno
ds
loopne
dec
sbb
push
fidivr
lea
jp
andnps
fdiv
jno
mov
lea
enter
mov
push
rcr
lea
mov
inc
push
shr
das
int3
loop
jmp
popa
xchg
jmp
int
daa
cli
test
call
stos
les
retf
adc
sbb
(bad)
(bad)
add
mul
fmul
xchg
in
test
xor
ret
dec
shl
cmp
or
rol
aaa
outs
jp
imul
pop
pop
add
jmp
fld
dec
mov
lods
movs
es
mov
or
or
out
push
push
jb
sub
inc
push
sahf
out
(bad)
cs
dec
bound
loopne
in
fbstp
(bad)
fdiv
adc
jo
es
xor
pop
xor
stos
test
in
fs
imul
dec
dec
mov
and
jecxz
xchg
adc
fist
sti
cmp
repz
dec
jo
mov
dec
xchg
push
and
scas
sti
adc
lods
scas
mov
mov
outs
dec
add
movs
int
xor
jns
pop
mov
or
cdq
xor
call
test
add
inc
xchg
into
pop
add
sbb
adc
xor
fcmove
je
(bad)
pusha
movs
and
push
inc
xchg
xchg
iret
cmc
cdq
dec
adc
out
push
inc
xchg
and
jmp
shl
push
stos
jp
dec
inc
bound
lea
dec
enter
mov
not
jno
cdq
sbb
jle
cmp
stos
pop
test
jnp
add
adc
retf
add
cmc
ss
cdq
sahf
push
mov
cmp
rol
bound
mov
mov
xor
int3
or
loop
imul
push
pushf
pop
fwait
(bad)
cld
adc
pop
xor
xchg
in
adc
or
cmp
imul
add
mov
jmp
fistp
imul
cs
arpl
mov
jmp
and
add
das
add
data16
pop
cmps
sub
mov
sub
jo
fisubr
dec
mov
lea
and
push
fld
call
sahf
test
mov
pushf
pop
jb
mov
or
es
fiadd
addr16
and
mov
or
aaa
lods
lds
pop
sub
and
(bad)
ficomp
mov
mov
and
in
sbb
dec
mov
and
outs
cmp
icebp
mov
cmps
aam
fwait
stos
pop
(bad)
adc
fstp
adc
push
and
(bad)
dec
add
adc
imul
loopne
dec
sub
addr16
sub
stos
std
mov
sti
xchg
(bad)
ja
into
pop
pushf
cmp
jecxz
imul
mov
push
mov
aaa
daa
imul
add
repz
fwait
jg
sbb
aaa
aas
xchg
cmp
and
ins
mov
rcl
xor
push
dec
xor
ret
in
cmp
lods
out
sub
dec
inc
push
sbb
dec
jo
rcr
mov
nop
and
xchg
cmps
adc
or
cmp
in
inc
mov
mov
and
push
dec
outs
popf
pop
retf
mov
int3
xchg
or
mov
ja
lock
je
push
sahf
mov
xor
or
sub
xchg
fisubr
mov
aaa
loope
leave
pop
ret
push
notrack
push
rcl
push
mov
xor
and
aaa
cwde
sbb
adc
dec
cmp
jns
dec
xor
jno
cld
jmp
fild
sub
and
aaa
mov
cwde
mov
xchg
sbb
mov
dec
int
cdq
in
mov
lds
add
jne
adc
inc
test
push
and
or
mov
lods
imul
inc
jo
mov
cmps
mov
mov
aad
sbb
add
mov
ss
jmp
cwde
sub
cmp
jae
adc
(bad)
cli
push
adc
pop
mov
test
inc
out
xchg
cmp
cmp
lock
movs
adc
sub
push
xor
push
(bad)
dec
(bad)
mov
fxch
pop
pushf
xor
cmp
test
jb
mov
mov
movs
fcomp
fimul
or
into
cmp
adc
pop
ja
inc
jo
aaa
pushf
imul
adc
push
cmps
push
or
push
mov
aad
push
sub
ds
jecxz
cdq
sahf
sbb
cmp
jecxz
cdq
sbb
addr16
call
cmp
cmp
inc
shr
add
jns
cmp
arpl
jmp
mov
fimul
push
mov
fmul
ss
lds
xchg
into
xor
fbstp
jecxz
popf
add
outs
pop
cmp
pop
sbb
mov
loopne
and
test
add
mov
mov
stos
push
lods
mov
mov
mov
mov
ins
sbb
imul
jmp
jno
mov
rcl
or
jmp
rcr
add
add
clc
and
ficomp
in
sub
push
ret
or
cmp
dec
in
ins
pusha
arpl
enter
scas
jmp
adc
addr16
icebp
jmp
mov
rcr
add
out
jb
mov
sar
mov
bound
aam
pop
xlat
add
ins
mov
loope
inc
inc
out
mov
fmul
mov
mov
inc
sbb
and
jne
movs
ror
mov
popf
push
or
or
aaa
mov
add
sbb
das
stos
retf
lock
mov
pop
pop
cs
jecxz
lods
gs
js
scas
test
ror
daa
daa
sbb
int
xor
fisttp
and
(bad)
loope
cmp
mov
loope
adc
and
outs
into
dec
or
icebp
xchg
mov
lea
push
mov
xchg
lea
push
mov
inc
adc
push
dec
xor
test
sbb
dec
jge
push
ficomp
mov
adc
std
fisttp
das
dec
inc
inc
inc
sbb
daa
sbb
mov
xor
xor
fld
and
xchg
lock
lock
fisubr
ficomp
lea
push
cli
mov
xchg
cmps
xor
mov
push
xor
and
lea
icebp
jno
mov
inc
push
repnz
xor
outs
jl
sub
cwde
sub
popf
xor
dec
mov
push
cmp
mov
pusha
xchg
ins
adc
in
mov
stc
xchg
xor
mov
std
xor
cmp
repz
out
in
jmp
inc
fimul
rol
fmul
jmp
pop
pushf
add
gs
push
mov
lods
jae
leave
mov
jp
and
xor
fdivr
movs
mov
push
xor
repz
mov
inc
sti
mov
lds
movs
(bad)
sbb
movs
and
push
gs
stos
push
retf
fcom
inc
xor
int
stc
shl
jg
push
jg
mov
fidivr
pop
loopne
ins
add
addr16
test
addr16
loop
mov
scas
jge
inc
cld
imul
int3
inc
adc
mov
aas
jg
add
test
arpl
cmp
js
mov
sbb
fwait
sbb
pusha
sub
stc
jmp
popf
add
ins
push
jae
out
sub
pop
sti
xor
or
and
jl
adc
inc
pop
adc
dec
lds
cs
test
pushf
cmps
cmp
add
jmp
jno
in
mov
push
xchg
adc
adc
enter
jle
jns
cmp
cmp
shl
icebp
jnp
stc
mov
xchg
jne
loope
inc
adc
ins
or
in
push
and
retf
mov
sbb
mov
adc
or
enter
sub
inc
daa
adc
outs
fbstp
pop
xchg
mov
sbb
sar
fistp
xchg
jecxz
rcr
cmp
adc
jae
pop
push
icebp
mov
dec
popf
lea
cwde
and
in
ret
in
push
push
daa
or
or
cmp
(bad)
sbb
sub
sbb
stc
imul
pop
inc
rcl
add
or
pop
jle
adc
movs
into
jns
cmp
add
mov
or
adc
cmp
pop
movs
cmp
icebp
jp
in
push
sub
mov
jmp
inc
std
leave
test
add
push
mov
xchg
pop
shl
sar
cmps
(bad)
cmp
and
popa
bound
stos
dec
or
add
xchg
pop
addr16
dec
push
and
bound
jecxz
inc
ret
mov
repz
sahf
sbb
push
push
xchg
data16
lea
push
adc
cmp
cld
push
jae
fcom
mov
fwait
cli
loope
push
ret
repz
cmp
aad
retf
xchg
mov
cld
or
xor
mov
sahf
repz
scas
cmc
ins
movs
call
das
jle
(bad)
int3
pop
gs
mov
repnz
push
es
fs
loopne
xlat
jbe
sti
out
xor
xor
faddp
cdq
jecxz
js
fidiv
fsub
sub
fisttp
aas
xchg
pop
sbb
fs
xchg
mov
cmp
enter
adc
sbb
rol
pop
lahf
(bad)
fcmovb
pop
mov
cmp
(bad)
iret
pop
mov
mov
jmp
in
or
mov
(bad)
loop
adc
mov
(bad)
shr
les
mov
cmp
and
dec
push
in
push
push
test
rol
ins
(bad)
pop
ds
outs
lods
loop
outs
ffreep
(bad)
xchg
out
xlat
pop
fwait
dec
test
aam
inc
and
pop
popf
sbb
mov
mov
test
in
mov
(bad)
sub
aaa
(bad)
or
in
nop
push
loopne
mov
call
ins
iret
arpl
mov
cmps
jae
xor
js
and
mov
pop
mov
call
mov
inc
jno
sub
mov
push
dec
test
adc
xchg
push
in
or
and
push
data16
imul
scas
pushf
jp
stos
repz
ficomp
jae
and
cmp
jnp
fsubr
out
mov
pop
sub
std
push
pop
pop
in
(bad)
and
mov
cli
sub
xor
mov
mov
pusha
je
push
mov
cmp
jmp
mov
xchg
jmp
sbb
sbb
mov
data16
arpl
xchg
push
pop
xchg
push
(bad)
aam
or
(bad)
push
cld
inc
pop
dec
popf
push
out
stos
inc
pop
mov
mov
sbb
cs
adc
or
push
movs
rol
cmp
cli
call
imul
jnp
cmp
and
jae
jns
enter
scas
loope
xor
lods
sub
dec
sub
inc
(bad)
mov
les
std
adc
add
pop
fwait
jns
sub
xchg
jb
xor
shl
popa
dec
push
cmps
in
xlat
rol
pop
les
inc
xchg
and
jnp
call
add
fisub
ja
pop
das
pop
fimul
cmps
inc
repnz
pusha
push
sub
xor
idiv
fcom
out
pop
fwait
loop
dec
or
or
cmp
jmp
xchg
movs
sub
fadd
push
xchg
dec
adc
add
imul
mov
mov
test
inc
daa
inc
inc
xor
dec
addr16
out
adc
gs
push
fdivr
jle
jbe
or
push
inc
xlat
push
and
mov
adc
cmp
dec
inc
push
imul
(bad)
jno
push
and
or
retf
cdq
or
pop
xor
cmp
sbb
call
jo
(bad)
jge
cmp
sub
sub
push
or
xor
stc
loop
lea
pop
in
std
imul
scas
mov
dec
jno
fidiv
inc
int
inc
push
popa
or
ret
mov
jecxz
fistp
rol
push
jno
pusha
sub
iret
loope
pop
loopne
jg
mov
(bad)
movs
icebp
dec
cdq
retf
xor
jno
add
xor
xchg
or
pop
xchg
ret
out
retf
test
stc
adc
(bad)
jp
std
push
xchg
jb
lahf
sub
ins
adc
outs
cmc
xor
xchg
dec
adc
pop
adc
loope
add
rcl
and
xchg
xchg
(bad)
mov
push
clc
mov
or
adc
dec
movs
xlat
test
iret
in
(bad)
mov
mov
sbb
fidiv
or
into
dec
mov
rcr
mov
pop
mov
or
mov
retf
(bad)
loopne
les
daa
ja
add
fs
mov
jl
cmp
adc
mov
add
adc
xchg
xchg
ret
push
add
cmc
or
adc
inc
pop
adc
pop
pop
push
pop
pushf
inc
arpl
dec
movs
rol
aad
mov
cmp
popa
xor
into
cmp
inc
xor
jo
xchg
inc
pop
jecxz
or
pop
retf
pop
mov
stos
xchg
push
es
mov
lods
(bad)
inc
jmp
jae
push
xchg
push
test
push
jno
out
jle
and
jae
ror
mov
fldcw
data16
(bad)
stc
les
jnp
dec
std
add
or
inc
pop
cmp
mov
sub
loope
jae
icebp
mov
push
mov
aad
vphadddq
mov
add
inc
out
or
fnstsw
mov
call
adc
mov
and
xor
popa
xchg
call
mov
or
pushf
cs
test
test
pop
xor
mov
adc
in
shl
inc
in
cmps
sub
inc
sub
addr16
pop
add
xchg
xlat
int3
fistp
add
xchg
arpl
shr
pop
fdivr
xchg
push
mov
in
xchg
daa
cmp
fsub
out
pop
fwait
jmp
jecxz
iret
mov
mov
cmp
xlat
dec
xor
aam
movs
mov
stc
push
cmp
shr
call
into
xor
adc
mov
out
or
jbe
in
icebp
shr
loopne
leave
ss
mov
aaa
mov
mov
arpl
int3
jmp
push
retf
in
mov
jo
icebp
add
into
mov
mov
mov
and
or
scas
popf
pushf
inc
and
inc
xchg
mov
aas
push
add
xor
dec
xor
cmp
xor
sbb
aad
aaa
adc
add
or
xor
and
and
sbb
or
and
stos
jmp
push
adc
push
push
or
xchg
setne
pop
jns
sbb
pushf
xchg
push
push
addr16
popa
outs
cmp
ss
es
setae
pusha
cmc
push
(bad)
mov
xchg
cmp
or
ret
(bad)
jno
retf
cmp
xor
or
push
jp
or
pop
popa
add
fild
jle
adc
cmp
add
add
(bad)
and
push
lds
xor
fisubr
push
in
jecxz
mov
xchg
and
dec
mov
xor
rol
(bad)
adc
ss
cmp
xchg
pop
xchg
repz
adc
out
out
(bad)
adc
ret
stos
ror
push
dec
push
pop
pop
test
fisubr
mov
sub
popf
enter
push
dec
jb
pop
lahf
inc
gs
sbb
js
mov
cli
fisttp
into
stos
ret
cmp
push
pop
in
xor
aad
mov
out
fdiv
add
imul
adc
add
jl
push
jbe
popf
test
shl
push
mov
push
sti
mov
sbb
cmp
pop
push
push
jo
add
push
sub
iret
mov
and
fisttp
or
mov
loop
in
dec
out
lods
lea
fld
mov
stc
and
leave
pushf
xchg
ds
or
(bad)
arpl
leave
repnz
xor
mov
dec
repz
pop
in
std
addr16
pop
(bad)
jns
or
test
jae
cmp
pushf
jae
mov
out
push
sbb
out
mov
add
cmp
push
xchg
dec
dec
mov
sbb
(bad)
div
ins
imul
or
retf
(bad)
out
mov
iret
cmp
scas
pop
cmc
scas
mov
jp
sub
jne
adc
pop
adc
mov
das
inc
pop
xchg
cmp
mov
loop
movs
int3
xor
mov
jne
adc
pop
pop
imul
sub
pop
adc
ja
cdq
imul
push
ja
sbb
pop
xor
cmp
push
iret
mov
dec
xchg
daa
xor
dec
sbb
in
jmp
shl
test
xor
sbb
inc
adc
(bad)
push
dec
sbb
stc
mov
sub
add
dec
pop
arpl
pop
push
push
jp
mov
call
mov
push
dec
std
mov
dec
dec
cli
data16
adc
movs
push
sub
mov
ret
mov
jb
mov
xchg
push
mov
retf
or
retf
ins
stos
(bad)
in
cmps
mov
outs
sbb
jg
or
mov
sti
sbb
out
mov
inc
ret
or
imul
jbe
dec
call
int
imul
add
cmp
nop
sbb
and
push
lds
retf
mov
mov
test
mov
es
and
inc
pmaxsw
and
push
les
sbb
shl
xor
gs
cmp
fcomp
xchg
sbb
adc
mov
lds
jns
arpl
mov
sub
pop
dec
or
sbb
xor
rol
and
mov
pusha
push
pop
aad
sub
test
fisttp
push
push
push
ins
add
jo
dec
xchg
in
inc
leave
push
lods
mov
pushf
pop
iret
push
pop
sbb
fs
shr
sub
loopne
mov
adc
es
into
test
sub
jle
fnstcw
imul
lahf
das
leave
mov
jp
xchg
mov
in
dec
xchg
mov
or
pop
cmp
loopne
scas
inc
xor
test
and
inc
adc
push
(bad)
jae
not
ins
mov
pusha
lods
dec
clc
xor
(bad)
(bad)
stc
stc
jno
neg
sbb
xchg
stos
push
movs
ror
test
cmp
rol
pushf
daa
inc
cdq
gs
popa
data16
xor
pop
pop
adc
jle
nop
dec
cs
xchg
inc
imul
mov
aam
adc
shr
(bad)
aad
(bad)
xlat
mov
(bad)
shl
dec
sbb
inc
inc
int3
(bad)
fst
and
xchg
jnp
inc
push
add
or
jl
fiadd
les
pop
mov
scas
sub
jns
sbb
pop
ins
lods
lods
dec
add
ins
repz
jle
sub
xor
mov
ds
xchg
inc
adc
daa
push
ja
mov
mov
fldenv
push
cmp
sbb
xor
inc
push
dec
sub
mov
mov
call
mov
or
pop
iret
loope
jae
push
sbb
and
fwait
mov
jecxz
cmc
cwde
in
imul
sub
sub
sbb
xor
aam
(bad)
xchg
cmps
adc
(bad)
out
outs
into
or
lock
push
mov
ss
and
jmp
imul
test
jmp
dec
mov
std
call
cmps
sub
xor
enter
dec
in
in
in
aas
aas
dec
js
mov
cmc
(bad)
pop
mov
scas
pop
xchg
fucom
fdiv
push
xchg
and
dec
adc
ss
sub
mov
pop
mov
sub
sbb
hlt
ror
jp
nop
pop
ja
cwde
mov
out
mov
and
ja
add
pop
sub
aad
jb
mov
xor
movs
mov
scas
int3
jo
clc
pusha
xchg
repz
fwait
adc
(bad)
fmulp
icebp
(bad)
pop
retf
mov
add
sbb
xor
aaa
sbb
jae
push
cmp
sti
fldenv
aaa
pop
sub
adc
(bad)
lock
xor
mov
dec
sub
(bad)
mov
les
js
scas
cmps
sub
and
mov
cmps
test
sahf
daa
and
and
jns
mov
movs
jle
(bad)
not
scas
inc
ja
add
sub
std
ins
dec
out
dec
mov
mov
lods
inc
push
jne
or
out
mul
loopne
push
bound
dec
or
push
jnp
push
mov
movs
stos
or
cmc
adc
lea
and
add
xchg
in
pop
out
outs
inc
jp
inc
sahf
adc
pusha
fst
jns
test
imul
inc
push
pop
sahf
bound
xchg
sbb
and
pop
adc
sti
and
xor
sub
dec
cmp
or
push
dec
push
push
dec
xchg
push
es
cdq
cmp
cmp
std
cmp
stos
fdecstp
adc
int
mov
pop
xchg
icebp
mov
xor
jmp
adc
cmp
dec
lds
jno
push
adc
sbb
push
dec
adc
cmp
bnd
pop
fwait
pop
sub
movs
inc
cdq
fsub
lds
icebp
mov
inc
sub
xor
in
fldcw
leave
mov
ins
enter
inc
clc
fcom
test
add
mov
add
sub
es
ins
aaa
stos
adc
pushf
cmp
movs
push
cli
retf
fldcw
inc
(bad)
cld
jle
loopne
cmp
repz
in
push
lock
fdivr
mov
ffreep
leave
push
cmps
fmul
sbb
add
inc
mov
retf
push
test
jmp
jnp
cmp
arpl
dec
sub
sub
in
mov
dec
loopne
es
shl
or
mov
mov
lods
pop
popa
jle
mov
mov
mov
stos
or
dec
inc
sub
rol
imul
mov
je
loopne
cmc
in
inc
and
fld
jb
and
iret
xchg
fisttp
add
push
int
imul
ror
dec
jle
xchg
cmp
fisubr
sub
cli
mov
pop
cmp
mov
stos
sub
dec
jecxz
mov
fwait
in
sahf
fmul
ficom
pop
js
sbb
xchg
push
xor
push
test
jmp
or
mov
dec
sahf
fcom
inc
rcr
inc
ds
scas
xor
test
test
shr
out
test
pop
cmp
cdq
das
sub
dec
adc
mov
pop
jno
push
sbb
(bad)
push
mov
dec
sbb
or
icebp
mov
out
outs
(bad)
mov
cmps
shl
and
mov
jo
arpl
in
dec
mov
bound
jbe
xchg
in
and
adc
cld
popf
bnd
(bad)
sub
scas
xchg
into
jnp
shr
lods
mov
mov
sbb
ficom
es
inc
pop
jmp
dec
ret
sbb
in
mov
xor
jbe
call
int
gs
aaa
sahf
push
mov
adc
push
ret
int3
lea
or
sbb
push
or
push
xchg
add
shl
xor
fsin
(bad)
pop
and
and
inc
sub
dec
popa
pop
cmp
jl
pop
shr
out
push
dec
stos
adc
cmp
js
rcl
pop
dec
nop
dec
jb
retf
add
test
mov
push
and
sbb
dec
mov
dec
cmp
cmp
js
mov
retf
jne
pop
add
sub
dec
add
mov
xor
cli
loopne
dec
push
cdq
xor
adc
mov
aam
lds
xchg
inc
outs
aaa
mov
pusha
gs
dec
cwde
sbb
scas
inc
lock
push
je
ror
mov
sbb
adc
adc
(bad)
pusha
sbb
push
fadd
mov
out
xchg
jle
cmp
lea
fcmovnu
addr16
pop
out
mov
outs
shr
xchg
push
scas
sub
xchg
es
cmp
inc
stc
sub
ficomp
or
repnz
lock
and
das
jmp
xchg
in
addr16
test
push
movs
mov
push
sub
movs
mov
ret
(bad)
mov
test
push
sub
add
test
daa
cmp
in
les
hlt
xchg
mov
pop
dec
mov
out
loop
(bad)
lods
pop
imul
sbb
js
xchg
sub
cld
retf
jbe
mov
fcom
imul
(bad)
pop
sbb
pop
fist
mov
inc
add
sub
call
daa
sub
jns
shr
aad
mov
movs
repz
jecxz
jns
add
imul
out
or
dec
aam
inc
cmp
adc
dec
adc
stos
mov
add
iret
pop
dec
xor
div
jle
and
fnstsw
push
fcos
adc
pop
xchg
into
jle
adc
mov
or
and
push
mov
out
and
dec
imul
add
scas
and
test
cmps
push
and
scas
aam
(bad)
push
jmp
mov
push
sbb
and
pop
(bad)
jmp
loopne
aam
dec
mov
mov
mov
cmp
imul
or
pop
and
test
and
xor
clc
retf
stc
jg
in
fild
scas
icebp
mov
inc
fiadd
mov
mul
and
shr
retf
mov
mov
ins
cmps
lods
sahf
call
sbb
jg
in
push
or
sbb
jp
rcr
push
mov
in
push
in
sti
mov
es
stc
lods
clc
mov
xchg
xor
ror
ds
call
rcr
sahf
mov
rcl
mov
daa
adc
dec
adc
fdivr
xchg
fcom
xchg
push
fs
mov
test
and
push
movs
lods
wrmsr
shl
jmp
dec
fisub
cmp
mov
test
cmps
cmp
(bad)
sub
(bad)
cmp
adc
ret
test
mov
xor
nop
mov
jo
rcl
out
adc
cdq
enter
cmps
mov
mov
pushf
dec
fiadd
cmps
cmps
cmps
jo
les
xor
add
sbb
pop
add
fdivrp
xchg
pop
xchg
xchg
cld
mov
mov
sti
mov
sub
xchg
sti
push
adc
int3
rcr
test
out
imul
sub
test
add
push
add
mov
rcl
dec
ins
fisub
xchg
jne
lea
mov
popa
and
mov
xchg
mov
mov
sbb
mov
xor
arpl
cld
dec
mov
movs
fisttp
jns
sti
pop
cmp
mov
mov
jge
or
retf
call
fld
mov
xchg
test
cmps
div
adc
xor
retf
leave
in
xchg
mov
xor
xchg
je
and
lods
dec
jmp
xor
push
ja
stc
movs
es
ins
push
mov
stc
pushf
mov
pop
add
lods
sbb
test
leave
mov
fdiv
(bad)
dec
or
push
mov
xchg
arpl
mov
pusha
ror
call
popa
push
push
js
xor
dec
dec
jbe
lods
cmp
int3
jns
lock
xchg
test
stos
and
push
dec
adc
or
les
fs
push
cmp
mov
xor
xor
jecxz
or
das
ja
adc
das
shr
adc
adc
cmp
js
mov
dec
dec
xchg
sar
mov
push
mov
lahf
adc
dec
rcr
push
jnp
xchg
sub
push
push
push
imul
inc
popa
pop
add
mov
jnp
mov
fld
xchg
xchg
pushf
xchg
test
dec
lock
cmps
mov
cmp
aaa
xchg
xchg
xor
retf
call
add
mov
xor
imul
push
push
sbb
jo
dec
xchg
xchg
inc
dec
mov
jp
add
(bad)
jb
lea
(bad)
jp
jecxz
mov
xchg
pop
xchg
sar
cmp
(bad)
lods
adc
into
retf
jmp
popa
in
fdivr
sbb
ins
sbb
out
push
ins
sahf
ins
(bad)
mov
arpl
jnp
push
leave
sti
repz
neg
in
adc
inc
out
push
inc
pop
jmp
(bad)
push
xchg
push
and
jmp
outs
in
pop
clc
push
cmc
xchg
xchg
add
icebp
jge
xchg
mov
mov
sbb
pop
sub
mov
ss
out
dec
or
sysenter
sub
push
ins
(bad)
cdq
inc
pop
dec
mov
jbe
adc
in
xchg
repnz
mov
cdq
lock
or
adc
pop
outs
pop
divps
push
sahf
lea
arpl
cmp
repnz
pop
ins
cmps
test
lods
pop
dec
adc
add
jg
xchg
or
jmp
add
imul
jg
aad
xor
jo
add
jb
lods
pop
push
das
pop
dec
mov
aaa
xchg
add
and
cdq
xchg
loope
xlat
pop
(bad)
in
cmps
dec
push
jns
sbb
pushf
sbb
push
rcl
(bad)
and
das
daa
adc
mov
(bad)
(bad)
and
stos
pop
aad
xor
cmp
xor
pop
arpl
push
sub
or
cmps
inc
movs
ins
shr
push
lahf
jge
pop
or
repz
aaa
lods
iret
inc
pop
ins
fild
iret
push
mov
mov
add
into
div
mov
mov
fstp
pop
mov
push
push
sahf
inc
bound
inc
jb
(bad)
daa
in
inc
and
lahf
sar
(bad)
jns
aas
mov
sub
in
aam
xchg
mov
pop
mov
add
out
xchg
mov
cmps
push
mov
xchg
dec
nop
sub
js
out
push
rcr
add
xchg
mov
and
lods
and
pop
mov
repnz
dec
xchg
out
dec
bound
jmp
dec
xor
and
lahf
add
test
dec
adc
jmp
clc
dec
es
jmp
adc
clc
push
mov
adc
push
mov
pop
mov
ins
(bad)
fistp
fimul
push
pop
xchg
or
xor
pop
test
dec
push
daa
xchg
fs
xor
fnstsw
stos
dec
sbb
in
(bad)
scas
push
repnz
mov
repz
pop
sbb
aas
dec
fwait
pop
imul
and
in
dec
inc
ret
icebp
lods
dec
jg
xor
xor
inc
and
(bad)
retf
xlat
gs
icebp
test
mov
mov
pop
adc
push
pushf
mov
add
pop
cdq
push
adc
lods
aam
pop
es
(bad)
leave
mov
push
xchg
sub
or
popa
pop
jmp
iret
dec
inc
adc
popf
push
popa
push
stos
enter
mov
xor
mov
mov
xor
dec
pop
or
js
dec
loopne
iret
pavgb
xchg
inc
fdivr
mov
sar
in
pop
add
adc
(bad)
jns
mov
add
mov
mov
cmp
jno
aam
mov
cmp
cmp
mov
mov
mov
pop
sbb
lods
push
inc
sbb
cmps
scas
add
pop
dec
stos
mov
rcr
(bad)
sahf
jmp
dec
sar
(bad)
movs
out
dec
add
inc
popf
push
fs
add
mov
push
imul
leave
ins
inc
jl
push
loope
xor
push
repnz
(bad)
lahf
retf
nop
push
fcmovne
and
lock
arpl
and
inc
push
add
jne
lock
jbe
xor
inc
add
adc
mov
mov
dec
inc
push
shr
rol
xchg
fmul
sub
push
retf
jecxz
js
jmp
mov
pop
test
jno
leave
mov
retf
or
xchg
nop
dec
and
xchg
add
outs
mov
ficom
inc
cmp
imul
xchg
xchg
xchg
dec
and
std
dec
or
dec
dec
or
jmp
pop
mov
fidiv
and
cwde
jmp
and
lds
inc
mov
jno
fld
fisubr
ret
leave
test
xlat
cdq
mov
mov
in
outs
xchg
push
sub
dec
adc
mov
mov
and
sbb
mov
pop
jmp
jg
adc
cmp
jne
in
sub
(bad)
aas
pop
bound
psrld
cdq
dec
jg
shl
stos
imul
std
push
pop
adc
xchg
fadd
nop
inc
inc
pop
nop
loop
bound
and
inc
cmp
div
aaa
leave
test
inc
adc
xchg
inc
xor
and
push
fild
dec
add
xchg
xchg
test
sahf
add
fldenv
shr
clc
xchg
shl
push
sbb
inc
ins
add
movs
cmp
mov
lea
dec
or
add
stos
adc
cli
xchg
mov
adc
pushf
in
loope
pusha
ret
mov
call
jno
cdq
inc
mov
dec
das
es
call
bt
sub
das
fcom
push
cs
sub
sbb
lods
or
(bad)
or
cmc
inc
test
jg
in
inc
adc
adc
dec
adc
cmp
sub
stc
dec
sub
jne
push
pop
or
sahf
fisttp
cwde
mov
adc
pop
les
pusha
sub
jb
sub
cmp
or
inc
mov
cmp
pop
lods
movs
push
cmps
xchg
sbb
ror
jno
sub
rcl
arpl
adc
inc
outs
(bad)
cdq
add
xchg
mov
sti
adc
mov
or
inc
sub
pop
xor
stos
sub
les
cmp
mov
xchg
jno
push
div
or
ret
into
fnstenv
fiadd
daa
imul
icebp
sbb
idiv
mov
sar
sahf
fisttp
je
or
dec
lea
mov
in
sub
dec
or
fstp
push
ins
fstp
push
adc
add
jge
popf
sbb
cmps
icebp
data16
aaa
pusha
bound
xor
mov
dec
sbb
(bad)
cmp
sbb
fs
pop
test
xchg
mov
pop
mov
ror
in
call
or
mov
inc
jae
push
call
sbb
dec
int3
inc
xor
pop
dec
rcl
push
lods
in
and
jb
imul
ror
cwde
sub
loope
jp
xchg
test
and
out
mov
loopne
rcr
xchg
into
xor
add
jns
inc
aas
sub
add
test
push
inc
fs
mov
sub
stc
mov
pushf
pop
mov
mov
sub
arpl
cli
cdq
call
ja
xchg
ins
cs
mov
call
xchg
movs
add
imul
push
fwait
sbb
xor
idiv
fs
shr
jo
xchg
dec
or
cmp
ret
pop
push
sahf
mov
clc
and
in
sbb
clc
call
adc
xchg
xor
inc
ret
pop
in
stos
xchg
add
mov
call
clc
repnz
sub
add
pop
xchg
and
rcl
movs
xchg
or
aas
push
outs
or
sub
and
sbb
movs
cmp
sub
pop
movs
cmps
pop
xor
push
inc
sbb
cmp
mov
mov
loope
stos
jl
inc
sbb
ins
jb
das
out
popa
sbb
in
add
ds
fld1
and
and
dec
movs
mov
addr16
cmp
jo
add
(bad)
and
imul
pop
mov
leave
(bad)
pusha
or
sub
ja
neg
cmps
xor
xchg
retf
(bad)
and
pop
cmp
imul
inc
jne
cdq
or
and
mov
pusha
mov
xchg
sbb
or
xchg
fs
cmp
leave
xchg
fcom
inc
and
and
aaa
pop
or
jge
mov
xor
add
in
dec
(bad)
les
rcl
inc
adc
pop
scas
aad
mov
xchg
pop
retf
xchg
jne
ret
mov
jo
cmc
leave
jle
into
xchg
or
or
jb
push
popa
fs
popa
data16
cdq
and
push
retf
int
dec
loopne
into
push
sub
inc
push
fidivr
mov
stos
push
fidivr
in
retf
sbb
mov
fcomp
sub
pop
scas
push
inc
adc
pop
in
sbb
xchg
adc
pop
xchg
or
jge
cwde
sar
cmps
jne
aad
xor
shr
adc
push
adc
scas
rol
pop
push
add
cs
test
add
mov
mov
sar
fcom
pusha
addr16
lds
sub
sbb
arpl
xor
rcr
inc
add
mov
or
inc
aad
ret
data16
sbb
mov
and
xchg
adc
mov
cmp
xor
pusha
cmps
mov
loope
cs
repz
inc
cs
test
mov
sub
(bad)
xor
and
add
sub
push
fldenv
imul
cmp
mov
fcmovu
jo
ret
js
aaa
int
es
inc
and
loop
inc
add
and
mov
pop
or
sbb
inc
gs
adc
adc
out
jmp
xor
pushf
dec
adc
jp
out
add
sub
pop
push
mov
jmp
test
scas
mov
cmps
lods
cmc
dec
mov
rcr
stos
adc
fwait
xchg
push
popa
xchg
xlat
popf
lahf
in
les
je
xor
shl
hlt
jb
lahf
xchg
in
ins
ins
mov
stc
adc
movs
daa
adc
sub
jle
(bad)
(bad)
stos
loope
in
mov
cmc
inc
inc
add
sub
add
popa
and
mov
push
push
fdivr
mov
rcl
and
cmp
jp
aas
aad
sub
jecxz
test
lea
inc
fs
retf
dec
pusha
mov
jge
iret
out
data16
push
sbb
mov
or
and
out
or
fist
push
pop
sub
cs
cmc
cmp
ror
(bad)
jmp
aad
mov
cmps
and
jnp
jp
out
retf
cmp
(bad)
cmp
fsubr
fld
cmp
adc
and
imul
push
(bad)
mov
mov
addr16
mov
data16
pop
push
xor
xchg
push
fs
xchg
jno
movs
push
xchg
(bad)
test
sub
and
into
inc
cld
xchg
jo
push
adc
stos
ror
mov
inc
imul
add
mov
xor
loopne
(bad)
pop
pushf
xchg
sbb
pop
push
inc
push
mov
cld
inc
push
cld
and
call
lods
inc
ja
and
xchg
add
icebp
mov
sbb
mov
adc
inc
inc
cmp
mov
add
mov
xchg
sub
cdq
repz
xchg
mov
push
test
mov
mov
or
xor
cmps
push
cwde
jmp
add
pop
outs
dec
add
das
xchg
jbe
daa
or
cmc
into
dec
(bad)
loopne
push
push
dec
popa
mov
or
mov
push
sbb
mov
ret
jbe
(bad)
mul
mov
mov
nop
add
daa
xchg
cwde
push
push
int3
ror
ins
jecxz
inc
push
dec
es
cmp
xchg
and
or
shl
iret
inc
push
ss
call
push
adc
ins
dec
mov
push
xor
pop
cmp
add
imul
mov
ins
ins
int3
xor
scas
mov
add
rcl
adc
jb
aaa
jmp
bound
aaa
sar
mov
dec
cmp
daa
cmps
cli
retf
push
cmp
adc
sbb
or
mov
xchg
sub
fidivr
loope
push
dec
pop
mov
out
xchg
nop
dec
mov
sub
jnp
xchg
ds
hlt
imul
ins
pushf
inc
adc
mov
push
xchg
mov
jne
fistp
inc
push
(bad)
(bad)
xlat
jl
mov
out
and
mov
add
and
dec
das
push
adc
jecxz
inc
fdivr
outs
lds
pop
in
pop
sbb
pusha
or
and
sti
cmp
jns
shr
mov
dec
add
mov
faddp
test
pop
mov
out
pop
in
movs
and
mov
mov
add
lods
xor
enter
(bad)
sbb
imul
pop
mov
fwait
in
dec
mov
lea
data16
or
lods
sbb
hlt
mov
and
cmc
icebp
xor
push
test
add
or
and
xor
ret
or
in
mov
(bad)
jmp
(bad)
pop
fnstenv
pop
mov
dec
inc
dec
and
(bad)
push
fldenv
sti
mov
adc
ins
cs
movs
mov
mov
sbb
cmps
out
repz
cli
dec
cmp
imul
imul
add
mov
mov
inc
cmp
mov
lea
mov
in
xchg
or
or
cmp
das
mov
jno
jnp
add
jmp
sahf
imul
sar
je
dec
jecxz
inc
push
retf
and
mov
xor
fisubr
lea
pop
iret
and
cmc
aam
or
test
arpl
nop
inc
rcl
push
sub
push
pop
dec
add
sub
push
neg
jnp
jle
add
cmp
clc
mov
arpl
sbb
adc
(bad)
pusha
mov
add
bnd
adc
arpl
mov
mov
mov
push
adc
sub
(bad)
das
cmp
inc
mov
cmp
inc
jnp
and
push
mov
adc
jl
rcl
sbb
test
and
inc
fst
sub
(bad)
mov
and
jge
push
mov
sbb
pop
mov
popf
mov
mov
mov
inc
mov
mov
push
js
dec
pop
push
nop
mov
and
mov
adc
dec
cwde
mov
add
mov
xor
fucomp
or
adc
jge
add
test
out
cmp
xlat
adc
cmp
push
mov
and
mov
and
and
jmp
mov
cld
cmp
push
out
movs
xchg
sahf
adc
adc
or
es
jbe
bound
inc
jg
mov
in
cwde
jmp
outs
loopne
adc
into
sbb
mov
mov
mov
bound
push
and
imul
jge
adc
pushf
inc
adc
adc
or
scas
sbb
xchg
sub
(bad)
lods
jbe
out
xchg
mov
lock
adc
ins
sbb
or
fdiv
xchg
in
shr
inc
dec
mov
cmc
or
fcmovu
rcl
push
push
mov
xchg
adc
xchg
adc
je
shl
add
push
jmp
jecxz
mov
shl
data16
jge
(bad)
(bad)
jecxz
sub
adc
enter
xchg
shr
iret
retf
pop
add
jle
jl
mov
test
cwde
test
dec
add
imul
mov
add
test
rcl
fs
mov
adc
mov
mov
and
dec
add
ss
aam
lods
int
push
iret
es
test
fwait
clc
mov
(bad)
dec
dec
cmp
test
jmp
sub
clc
sbb
mov
jb
or
or
dec
jle
pushf
adc
iret
sub
adc
and
scas
lods
ja
pop
mov
test
pop
dec
xor
mov
test
loop
mov
jecxz
dec
and
adc
mov
ins
mov
js
jmp
not
fbstp
inc
xor
push
stos
xchg
fimul
test
dec
loop
mov
(bad)
xor
add
pop
sbb
mov
repnz
push
xchg
sbb
daa
xchg
pushf
bound
jno
mov
and
jae
(bad)
nop
(bad)
les
jnp
scas
dec
inc
dec
pop
sbb
ror
mov
and
sub
fisub
jno
in
push
addr16
popa
jge
or
push
jo
or
retf
iret
jbe
jmp
aaa
xchg
test
dec
push
cmp
adc
jg
inc
pusha
mov
cli
cwde
xor
fwait
in
stos
leave
xor
gs
lods
es
push
ds
push
shl
push
jge
or
arpl
mov
xchg
mov
ficom
out
mov
sub
inc
ins
sub
cmp
dec
rcl
dec
add
scas
adc
cmps
pop
adc
fsubr
push
sbb
sbb
push
dec
inc
add
dec
sub
call
inc
push
into
int3
rcl
js
mov
call
lods
and
push
jno
cmp
push
mov
xlat
dec
xchg
pop
iret
mov
inc
mov
inc
fdivr
rol
ud1
sub
add
xchg
sbb
repz
and
dec
pop
jo
call
mov
mov
and
xchg
mov
cli
cmp
push
out
push
inc
imul
stos
sub
pop
leave
in
scas
xor
not
mov
dec
push
dec
in
push
ins
ss
gs
int
adc
jo
cwde
sub
jge
pop
enter
mov
xchg
push
in
arpl
repnz
mov
sub
mov
xchg
adc
mov
jecxz
sub
pop
gs
adc
pop
adc
inc
and
pop
push
pop
xchg
cmp
enter
(bad)
jo
and
imul
push
cwde
(bad)
dec
scas
xor
mov
adc
pop
(bad)
jmp
test
add
ret
adc
dec
adc
push
push
and
stos
out
xchg
fcomp
xor
sbb
inc
adc
mov
div
fistp
xlat
fst
push
sub
sub
(bad)
fldl2t
imul
aam
sub
ss
rcr
push
push
leave
add
je
movs
bound
adc
sahf
(bad)
(bad)
pop
sub
mov
rcl
(bad)
and
mov
sbb
jmp
sub
out
outs
enter
pop
push
dec
dec
lock
popa
dec
xor
jmp
sbb
or
pop
push
ss
push
sub
sti
movs
jo
mov
fnstcw
bound
int
pop
xor
mov
or
repz
mov
xor
fmul
shl
cmp
(bad)
xchg
sbb
pop
retf
jbe
out
lods
rol
xchg
in
aas
mov
stos
cmp
jmp
jmp
dec
and
dec
add
sbb
pop
mov
pop
pop
ds
adc
xor
fisub
ror
inc
es
in
cs
jp
cmc
cmovno
push
mov
dec
or
adc
mov
(bad)
shr
fwait
xchg
mov
loop
test
sahf
sbb
fldenv
(bad)
push
mov
iret
adc
adc
test
inc
shl
mov
arpl
(bad)
cmps
and
adc
lds
and
add
jbe
dec
mov
jle
iret
in
leave
(bad)
sub
jge
add
add
enter
fsub
push
pop
in
call
pop
dec
xchg
pop
sub
cmp
jno
stc
add
add
sar
aaa
jl
xchg
pushf
retf
cs
(bad)
mov
int
aad
push
sar
int3
mov
xchg
movs
mov
xchg
cmps
lea
ret
sti
push
push
inc
cmp
or
and
dec
mov
gs
outs
sbb
push
mov
retf
mov
sysret
stos
in
in
(bad)
mov
bound
adc
es
push
lahf
outs
cmp
push
sbb
inc
and
and
jnp
mov
or
sub
fsub
sti
cdq
cmc
jmp
mov
js
(bad)
jb
push
aad
and
xchg
pop
mov
pop
icebp
call
jecxz
nop
scas
jb
retf
gs
(bad)
jae
imul
xor
push
dec
stos
or
dec
push
std
fstp
pop
inc
outs
fs
mov
mov
push
into
enter
jb
xchg
add
dec
and
dec
or
pop
or
jg
dec
scas
jb
in
es
lock
cmp
in
or
mov
cmc
enter
je
scas
in
sub
pop
mov
adc
and
fst
(bad)
ja
and
push
jg
xchg
inc
dec
retf
sbb
dec
jl
pop
cld
ins
xchg
and
popa
add
imul
arpl
add
xchg
ret
cmp
mov
sti
jne
add
test
fstp
fdivr
xor
xchg
ret
ss
lock
push
push
aam
xchg
adc
test
dec
mov
or
enter
or
ins
inc
pop
push
mov
dec
test
mov
dec
fwait
xchg
dec
adc
pop
mov
cmc
fst
xor
sub
cmp
lods
and
ret
sbb
mov
adc
push
lods
(bad)
mov
je
nop
test
and
pop
addr16
arpl
je
add
movs
xchg
aas
mov
pusha
xchg
mov
sub
cmp
shl
add
pop
push
mov
es
cmp
mov
rol
popa
in
(bad)
mov
out
sub
mov
aad
inc
adc
movs
sti
sahf
lahf
jmp
cwde
loope
test
(bad)
out
(bad)
loope
xlat
pop
(bad)
xlat
mov
add
pop
and
mov
push
push
jp
mov
mov
sbb
sub
push
jo
out
mov
iret
(bad)
stc
cmp
mov
mov
mov
mov
scas
add
sub
jo
and
mov
sbb
or
pop
clc
xchg
mov
adc
xchg
jl
pop
xor
gs
xor
add
hlt
ja
enter
push
xor
mov
(bad)
repz
mov
scas
or
jl
mov
push
icebp
popa
mov
push
jg
xor
fldcw
xor
aaa
std
push
in
int
and
gs
sbb
add
cmps
add
fsubr
or
mov
inc
and
sub
cmp
in
in
in
cld
ficomp
je
or
imul
push
sub
daa
pop
sbb
mov
mov
iret
jae
or
pusha
mov
add
pop
xchg
adc
ror
nop
cmp
mov
cmc
pop
dec
in
aad
(bad)
in
inc
mov
add
add
pop
xchg
xchg
mov
mov
dec
mov
adc
fadd
shl
push
int
aam
(bad)
(bad)
pop
mov
call
mov
cli
pop
adc
jbe
add
aam
gs
test
pop
or
retf
xor
lods
loope
lods
mov
push
and
jae
sbb
inc
ret
rcl
push
jo
outs
add
dec
xchg
sub
call
jb
mov
jmp
lahf
pop
rcr
inc
and
add
or
ror
cmp
dec
push
test
push
mov
ror
sub
jmp
sbb
cmps
repnz
test
sub
mov
ret
jb
jns
popf
add
mov
mov
daa
cmp
mov
jg
lahf
jge
rcr
push
cs
enter
and
dec
inc
jg
addr16
sti
gs
inc
dec
ds
cmp
mov
push
and
mov
or
fimul
dec
imul
loopne
push
not
(bad)
stos
xor
mov
lods
fdiv
fimul
je
daa
xchg
cs
retf
xsave
and
or
mov
add
out
inc
outs
test
sub
xchg
rcr
or
scas
ret
push
pop
shl
jnp
(bad)
call
push
test
xchg
adc
mov
gs
leave
adc
inc
es
and
ds
push
lods
ss
jne
xor
sbb
jge
pop
mov
mov
arpl
mov
hlt
scas
pop
int3
push
push
arpl
test
enter
push
and
dec
cs
jo
out
or
xchg
mov
sub
xor
cmp
or
dec
ror
arpl
rcl
or
dec
or
push
jnp
add
push
mov
sbb
retf
cli
jl
dec
test
xlat
call
pop
push
xchg
addr16
jne
dec
xor
push
lds
lock
or
(bad)
cmp
imul
sub
dec
fild
pop
adc
out
mov
aad
fisub
xchg
mov
dec
gs
test
leave
lahf
out
cmps
mov
fcmovb
push
jle
fisubr
dec
test
cmp
sbb
arpl
fadd
popf
mov
cmp
xor
rcr
mov
(bad)
pop
adc
mov
adc
pop
leave
aam
dec
test
fnstenv
jns
inc
lods
dec
popa
jge
in
or
(bad)
jnp
inc
sti
ss
inc
adc
cmp
mov
movs
cdq
ss
ins
or
inc
sub
xchg
inc
jne
loopne
pop
xchg
(bad)
sbb
es
stos
ss
jb
mov
inc
ins
mov
or
dec
dec
shr
adc
sbb
sub
xrelease
jno
jno
enter
loop
xor
cld
sar
ja
pop
or
pop
xchg
inc
shr
and
push
add
sub
int3
enter
mov
test
or
outs
cmps
(bad)
mul
push
and
in
sbb
and
test
movs
pop
push
pop
sbb
adc
enter
ins
sub
mov
jb
je
xchg
test
sub
mov
mov
dec
push
push
dec
shr
jge
pusha
fnstsw
gs
pushf
add
rcl
mov
push
mov
sar
cmp
outs
bound
repnz
pop
or
cwde
jp
sub
fisttp
adc
or
or
bound
sub
in
(bad)
in
mov
aaa
or
jo
repnz
lahf
sahf
les
sub
jmp
mov
mov
into
ja
mov
add
fistp
sbb
hlt
loopne
adc
xor
(bad)
xchg
cwde
inc
cmp
retf
sbb
xor
ds
jo
mov
pop
inc
neg
into
shl
inc
add
movs
sub
mov
dec
xor
cs
jne
sub
(bad)
lods
rcr
sbb
xor
inc
add
fld
and
pop
sbb
lods
(bad)
sahf
imul
ja
(bad)
cs
mov
sub
test
dec
rcr
dec
xchg
jge
popf
mov
mov
cmps
mov
lahf
add
pop
fimul
iret
pop
out
inc
packssdw
inc
adc
sbb
add
pop
xor
pop
and
and
adc
mov
mov
cmp
sub
or
dec
pop
int3
push
pop
mov
xchg
test
push
jbe
int3
inc
pop
dec
adc
inc
push
sbb
cwde
cmps
push
xor
scas
imul
xchg
retf
cdq
fwait
dec
xchg
inc
cmc
lahf
sub
cmp
stos
ror
popf
and
ins
and
dec
push
push
add
cwde
fwait
jmp
call
test
mov
lds
repnz
mov
ror
loopne
out
lds
cmps
push
retf
pusha
mov
test
popa
jo
dec
scas
inc
mov
sahf
xor
sar
stos
jnp
sbb
dec
test
dec
dec
add
stos
in
inc
xor
pop
dec
retf
bound
xchg
and
(bad)
xor
ret
cs
mov
into
fmul
fisub
pop
shl
nop
push
ins
jnp
or
add
gs
mov
add
ret
sbb
mov
and
sub
or
movs
xchg
jle
mov
in
add
into
bound
retf
cld
ds
inc
daa
shl
and
pop
repnz
sub
cli
inc
imul
lahf
(bad)
in
mov
xchg
push
cld
sbb
xchg
adc
inc
adc
push
in
das
adc
ins
add
jmp
rcr
jbe
out
xchg
test
ror
jp
rol
cmp
pop
pop
gs
add
popf
dec
fst
jecxz
inc
pop
sbb
add
les
cmp
rol
jo
mov
mov
jno
push
imul
mov
ss
(bad)
push
stos
(bad)
fnstsw
test
addr16
sar
xchg
les
aaa
movs
mov
mov
or
in
push
sub
sbb
push
jl
movq
xor
leave
sbb
arpl
aam
push
sbb
out
(bad)
ss
xor
ins
dec
shr
in
pop
add
imul
mov
ins
mov
aaa
fisttp
push
or
dec
dec
cmp
push
pop
nop
mov
jl
adc
xchg
and
xor
sub
xor
dec
movs
pop
adc
dec
xor
inc
loop
mov
pop
push
xchg
or
stc
mov
inc
xchg
nop
out
inc
jns
test
cmove
jns
sub
ss
daa
inc
rcr
arpl
or
sahf
jl
ficomp
xchg
mov
xchg
adc
call
adc
outs
outs
test
lahf
pop
outs
push
sub
(bad)
sbb
rcl
adc
lds
mov
mov
pop
inc
pop
dec
sbb
popa
movs
xchg
xor
jbe
pop
inc
pop
imul
adc
jbe
dec
push
jo
test
leave
add
push
cmp
or
aas
ror
sbb
mov
xchg
and
and
xchg
test
(bad)
aam
cmp
dec
lods
and
sbb
in
cdq
bound
test
dec
add
fs
jbe
push
cmp
outs
xchg
or
sbb
inc
xor
pop
xor
aaa
fwait
arpl
icebp
mov
jno
loop
xchg
xchg
push
or
or
bound
xor
push
sub
add
popf
outs
in
inc
outs
push
push
jbe
jne
sub
js
sub
aaa
inc
jno
loopne
dec
lea
adc
adc
(bad)
adc
cmp
cs
xor
xchg
xlat
pop
push
lds
ss
push
pusha
ins
mov
xchg
ret
xor
xor
popf
int
test
mov
das
lea
dec
or
sar
imul
cmps
or
xchg
test
mov
cmp
mov
xchg
and
aam
add
mov
and
imul
aad
outs
movs
push
inc
adc
dec
mov
add
imul
jne
jns
(bad)
in
hlt
add
sbb
mov
xlat
outs
loopne
xchg
pop
xchg
in
imul
cwde
sub
xchg
sti
(bad)
(bad)
adc
sbb
xchg
xchg
cld
mov
stos
mov
cmc
and
test
int3
inc
dec
or
fnstsw
push
scas
pop
lds
xor
cdq
dec
gs
mov
lds
cdq
or
jne
ror
jbe
in
xor
lock
xchg
mov
lods
xchg
call
and
sbb
push
outs
stc
xor
cmp
sub
sbb
imul
jae
ficomp
adc
mov
push
sbb
in
lods
int3
push
pushf
sbb
and
adc
in
ins
out
movs
(bad)
xchg
add
or
mov
xchg
lods
mov
mov
jmp
in
push
jb
dec
xor
add
sub
repz
lea
xor
stc
inc
jnp
sbb
adc
lods
scas
daa
aas
sub
mov
(bad)
cli
(bad)
or
cmc
ret
dec
xchg
retf
adc
sbb
std
cmp
bound
mov
adc
dec
inc
fxch
add
into
xchg
pop
xor
sar
fs
jae
or
mov
and
xchg
inc
and
push
test
push
push
sbb
add
cmp
gs
(bad)
jp
nop
int
push
inc
(bad)
aam
pop
mov
loop
movs
push
jmp
xor
xchg
out
les
cmp
xlat
test
sbb
sub
or
mov
jbe
and
mov
fistp
cmc
pushf
cmp
bound
lods
int
sub
xchg
dec
mov
mov
jb
shr
inc
sbb
stos
sub
adc
mov
push
pop
sahf
iret
add
add
or
addr16
movs
out
arpl
and
dec
jae
int3
and
out
or
pop
mov
popf
and
fsub
jecxz
mov
fbld
test
sub
cmp
sbb
mov
scas
stc
fst
in
iret
mov
retf
mov
ins
dec
les
and
and
xor
add
inc
pop
mov
movs
hlt
aaa
dec
hlt
loope
out
or
ss
ror
xchg
fwait
in
ja
outs
push
inc
imul
in
scas
pop
add
adc
int3
xlat
inc
adc
in
mov
pop
xchg
mov
shr
pop
cwde
sbb
mov
jge
jle
adc
ds
aad
push
cld
sub
dec
xor
push
call
loope
nop
lahf
xchg
add
push
stc
and
jle
clc
das
and
lock
test
in
shr
sti
cwde
jmp
cld
jmp
xor
cmp
xlat
dec
ins
inc
inc
arpl
in
(bad)
lods
xor
jle
ins
in
pop
or
dec
add
and
test
call
push
js
push
ret
sahf
add
ins
mov
mov
lods
adc
push
add
pop
jecxz
shl
cmp
mov
ins
jge
dec
xchg
xor
lods
cmp
pop
dec
stos
test
add
add
mov
sub
retf
in
ret
and
or
sub
and
into
jecxz
int
sahf
rcr
shl
or
aas
cmps
jge
cmps
mov
mov
inc
jno
cmp
js
in
adc
sub
dec
and
repnz
dec
or
sub
scas
push
xchg
cmps
cdq
movs
cmp
sub
inc
cmp
mov
lods
pop
in
pusha
ins
imul
ficomp
add
add
les
addr16
push
cmp
xchg
ret
jecxz
retf
arpl
xlat
cs
adc
dec
sbb
mov
sub
xchg
cmps
call
bound
push
popf
pop
(bad)
sar
xchg
pop
ins
dec
inc
push
nop
push
rcl
and
dec
outs
and
cmps
popa
jl
mul
cmp
and
out
adc
xchg
inc
mov
int
sbb
mov
js
pushf
loopne
ins
stos
sbb
ins
stos
pop
(bad)
xor
inc
xor
pop
bound
daa
or
cmp
bound
mov
jne
out
test
cmp
push
ficomp
imul
inc
popf
xchg
and
add
and
xor
fdiv
test
in
test
and
mov
push
rol
in
lea
xchg
dec
push
inc
scas
jmp
sbb
stos
mov
pop
inc
jb
pushf
ins
push
push
imul
or
jle
dec
sbb
std
rcl
imul
loop
pushf
lods
and
out
mov
push
rcl
cdq
and
dec
inc
ret
sub
inc
push
or
add
fld
popf
mov
cmc
adc
xchg
push
and
in
iret
pop
pop
and
push
lds
hlt
and
outs
fild
into
popf
addr16
hlt
mov
jns
sub
das
dec
(bad)
jg
add
pop
cmps
add
jnp
mov
shl
neg
inc
lds
sbb
jle
mov
xchg
popa
mov
test
dec
xor
fcmovbe
add
fimul
pop
push
(bad)
jb
push
in
repz
(bad)
sbb
dec
cmc
push
dec
xchg
xchg
neg
push
mov
bound
push
jns
mov
dec
and
inc
add
scas
mov
xchg
cmp
sub
push
bound
push
or
push
fsubr
cmp
and
outs
dec
cmc
sbb
or
(bad)
sbb
outs
mov
adc
adc
adc
xchg
fsubr
mov
push
dec
sbb
and
daa
add
cs
in
cwde
xor
xor
dec
and
ds
or
and
sbb
sub
test
add
sti
xor
outs
int3
es
push
push
jae
cdq
adc
dec
popa
inc
out
push
xor
call
xchg
add
jecxz
imul
dec
pop
es
mov
xor
arpl
into
push
or
retf
retf
loope
or
push
fwait
movs
inc
cmp
shl
mov
xchg
movs
push
sbb
inc
xchg
sbb
cmp
mov
sbb
ins
test
inc
dec
jp
add
and
mov
imul
lea
enter
into
fisubr
das
mov
vpinsrw
in
inc
fwait
mov
ror
or
pop
div
movs
xor
imul
xchg
mov
js
int
sub
jl
jmp
sub
test
push
mov
adc
and
or
xchg
jns
jmp
int
jb
adc
xor
or
retf
inc
xor
ret
lods
pop
out
pop
int
dec
fs
jp
push
sub
or
push
xor
and
sbb
or
adc
fistp
xor
adc
inc
inc
push
in
push
or
adc
adc
and
sub
push
out
push
cmp
xchg
mov
jmp
ret
push
push
lods
pop
mov
fdiv
fild
cmps
inc
stos
test
cmp
enter
sbb
into
push
cwd
lahf
xchg
dec
lahf
bound
or
div
and
jnp
mov
and
push
out
call
adc
lea
jle
pop
(bad)
sahf
fimul
adc
and
mov
xchg
neg
out
test
mov
enter
mov
and
mov
xchg
mov
gs
aas
sti
fisubr
(bad)
mov
shr
call
mov
pop
in
ins
ins
mov
inc
sbb
push
cld
jge
nop
inc
ret
adc
dec
and
iret
dec
and
jne
(bad)
and
or
in
inc
push
outs
cmp
or
repnz
cmc
mov
xchg
and
repz
xchg
sbb
mov
dec
iret
dec
sub
cmp
sbb
out
les
xchg
inc
jno
mov
mov
inc
inc
imul
pop
push
sbb
inc
push
in
push
movs
scas
inc
outs
mov
jb
mov
sbb
mov
dec
push
inc
and
(bad)
(bad)
dec
mov
xchg
mov
jl
xchg
cmp
add
push
movs
mov
les
shl
sahf
adc
leave
mov
shrd
popw
stos
mov
add
xor
mov
and
xlat
push
sbb
dec
or
or
stc
mov
sar
xchg
in
jmp
mov
mov
cmp
loop
js
in
push
dec
pop
and
repz
jle
push
or
xor
jbe
jge
int3
aad
lods
call
inc
popa
adc
sbb
pop
mov
data16
and
cmp
sahf
adc
loop
or
fcom
dec
test
sbb
sub
fisub
xchg
sub
dec
jb
cmp
or
fwait
in
iret
rol
adc
jp
clc
cmp
ss
sub
push
enter
test
fwait
pop
adc
ins
outs
add
pop
imul
sti
test
mov
cmp
mov
jmp
inc
cld
mov
in
test
adc
or
mov
fidivr
daa
or
fisub
adc
dec
or
and
mov
call
push
(bad)
jbe
xchg
(bad)
int3
sbb
xchg
cli
fstp
test
fld
mov
test
cmp
jmp
pop
cmp
add
cs
or
push
sub
pop
push
rcr
retf
jae
xor
imul
sbb
pop
loope
inc
pop
call
stos
xor
dec
mov
jle
fidivr
mov
mov
xchg
dec
(bad)
push
sar
das
in
adc
cwde
sub
pop
mov
jg
jns
shr
test
lds
mov
pop
test
push
outs
fidivr
shl
adc
arpl
scas
in
dec
fs
loop
cmp
sub
push
add
sub
and
scas
js
cmp
xor
ror
les
xchg
movs
repz
add
xor
in
xor
pop
dec
adc
pop
dec
pop
mov
pop
test
in
xchg
mov
imul
out
stos
mov
add
and
ins
xchg
ret
pop
sahf
or
dec
gs
cmp
xor
sahf
jl
xchg
xor
inc
mov
xchg
sbb
adc
dec
popa
out
push
retf
and
in
or
stos
mov
cmp
jecxz
push
or
ins
dec
or
sbb
sub
fisubr
aad
sbb
inc
rol
jmp
pushf
call
retf
inc
outs
addr16
dec
or
xor
inc
enter
cmp
bnd
retf
gs
dec
call
mov
cmp
sub
xchg
in
xchg
mov
and
jns
xchg
loope
mov
or
loopne
mov
cmp
cld
sbb
fdiv
xchg
and
movs
cdq
ret
bound
push
mov
push
push
clc
pop
jecxz
jo
pop
mov
stos
add
lea
ins
or
push
sbb
jno
mov
test
adc
out
sbb
xchg
adc
or
mov
test
out
out
sub
not
call
push
cdq
or
dec
fcom
mov
lea
mov
in
xlat
mov
in
jb
movs
daa
sti
and
arpl
mov
dec
ds
(bad)
xchg
loopne
ror
push
adc
dec
pop
fisttp
adc
stos
popf
rol
lock
jg
jae
cmp
adc
out
adc
ret
nop
adc
or
ins
or
rcr
ss
mov
bnd
scas
or
rcr
clc
lods
pop
mov
std
ins
mov
mov
xchg
push
pop
push
cmp
jmp
pop
pusha
jb
cmp
fdivr
add
retf
push
jns
add
jge
inc
xchg
xchg
sbb
mov
aam
push
scas
pop
dec
in
imul
fimul
scas
cmp
les
pop
adc
xchg
out
xchg
or
and
out
adc
inc
pop
loopne
inc
add
ror
xchg
das
mov
imul
cld
jmp
adc
fld
pop
ins
mov
pop
scas
mov
sbb
sbb
(bad)
ficomp
inc
out
jb
sub
xchg
dec
xchg
stos
adc
push
ins
loope
or
es
mov
pop
(bad)
mov
mov
jl
test
inc
sub
leave
lahf
xchg
cdq
or
ror
push
shr
lahf
and
adc
dec
ja
les
inc
sahf
adc
mov
sti
movs
das
ins
mov
xchg
(bad)
std
cli
push
xor
scas
ret
cli
or
jecxz
dec
xor
adc
pop
add
mov
in
jo
mov
adc
mov
push
cwde
sbb
ins
sub
bnd
dec
dec
outs
fisubr
xor
dec
xor
adc
sbb
fwait
test
mov
jg
push
(bad)
rcr
or
and
mov
cmp
dec
pop
fst
imul
mov
mov
adc
inc
mov
xchg
inc
aaa
add
pop
cdq
jmp
xor
scas
pop
or
gs
mov
ins
mov
mov
mov
jb
or
mov
aaa
shl
inc
inc
icebp
xor
sub
push
mov
mov
(bad)
retf
inc
cmc
cmp
or
pop
lods
mov
fistp
fs
dec
sbb
xchg
xlat
mov
cld
mov
cmp
data16
fstp
hlt
icebp
(bad)
jnp
push
arpl
and
sbb
mov
mov
fs
hlt
inc
call
lods
inc
xchg
pusha
fst
adc
push
cld
shr
imul
imul
sbb
sub
pop
sub
push
imul
push
mov
dec
mov
outs
mov
std
mov
add
data16
aam
lea
inc
ret
xor
movs
pop
nop
loopne
out
inc
push
ror
in
outs
test
(bad)
mov
mov
dec
xor
and
int
std
mov
pop
xor
mov
imul
pop
pop
or
clc
mov
aam
add
add
cmp
jne
test
inc
add
les
in
int3
sbb
sbb
outs
not
mov
add
imul
cmc
mov
jl
xchg
pop
mov
pop
push
push
jp
mov
cld
repz
push
out
add
mov
shr
je
cwde
mov
pop
pop
mov
lahf
ret
aam
ins
repz
sahf
sbb
inc
jnp
lea
mov
dec
sbb
xor
(bad)
or
xchg
fisttp
pop
xor
and
gs
xchg
ficom
rol
test
div
and
fsub
mov
xor
outs
add
int3
inc
aas
mov
and
lea
fisubr
sub
pop
das
xchg
scas
sub
in
ja
mov
push
imul
sub
lods
lahf
ss
enter
fsub
ret
lea
mov
sbb
cmps
xor
add
dec
and
xchg
and
call
pusha
inc
jne
xchg
out
xor
and
fs
retf
push
jmp
inc
ins
mov
iret
das
jb
xor
adc
pop
lods
adc
(bad)
(bad)
xchg
sub
les
mov
or
jnp
inc
dec
sbb
xchg
pop
mov
outs
mov
inc
imul
pop
ja
call
adc
xchg
out
shl
les
std
dec
or
mov
cmps
(bad)
fcmovb
inc
and
aad
pop
cdq
add
inc
push
pusha
push
sbb
test
push
adc
outs
pop
cmp
inc
ret
jmp
mov
sub
push
pusha
mov
jns
dec
jno
and
mov
cmp
(bad)
push
sbb
es
(bad)
ja
push
sbb
mov
rcr
cwde
dec
push
div
dec
ds
fs
cwde
xor
mul
push
div
adc
lock
pop
ja
lea
xor
sahf
dec
movs
mov
fs
mov
and
fdiv
inc
daa
mov
add
pop
cmps
ret
push
pop
dec
shr
test
inc
push
sub
leave
daa
mov
push
movs
push
push
push
inc
das
mul
sub
sub
shl
clc
pop
adc
pop
pop
mov
jbe
hlt
fs
fld
jp
or
push
(bad)
cli
pop
mov
mov
adc
test
mov
dec
cmp
xlat
inc
add
sti
xchg
add
mov
inc
push
pop
sbb
jno
add
call
mov
jl
add
sbb
inc
in
enter
jge
push
push
mov
dec
dec
cmp
inc
push
in
or
inc
jecxz
nop
cli
pop
or
cld
jl
lea
pusha
aad
sbb
shl
lds
std
leave
jnp
lahf
shl
add
fwait
loopne
ins
mov
sub
(bad)
mov
inc
lahf
iret
push
xor
loope
sbb
stc
push
or
pusha
adc
(bad)
and
mov
mov
fst
leave
sti
push
imul
imul
iret
xchg
dec
loop
and
adc
xor
dec
pop
fbstp
pushf
int
push
stos
and
add
mov
inc
mov
aad
scas
fisubr
cmc
ja
mov
pop
data16
sub
leave
or
stc
sub
dec
sbb
(bad)
lea
mov
arpl
mov
lods
xor
std
into
int
sbb
into
and
add
sbb
sub
rcl
jno
xchg
mov
sub
xchg
jmp
ins
dec
lds
enter
inc
or
ins
adc
popa
scas
lods
mov
mov
(bad)
shr
lds
adc
mov
mov
push
retf
fld
sub
xchg
stos
or
es
sub
aaa
mov
leave
and
pop
xlat
lahf
inc
and
xchg
into
jno
mov
popf
adc
xor
inc
sbb
add
sti
mov
push
xchg
xlat
sub
out
jbe
(bad)
adc
pop
push
ja
enter
jmp
call
test
aam
mov
repz
pop
addr16
je
cmp
pop
mov
inc
imul
push
and
ss
out
mov
push
cwde
out
sub
inc
sub
inc
jge
call
mov
shr
and
shr
int3
and
mov
and
push
mov
mov
xchg
add
iret
jg
mov
add
add
rcr
(bad)
inc
sub
repnz
shl
adc
cdq
shr
enter
mov
adc
sahf
stos
rcl
dec
pop
xor
movs
js
sub
pop
xlat
js
and
int3
popf
fistp
cld
stc
test
(bad)
out
mov
int
(bad)
test
scas
dec
pop
cmp
lds
mov
mov
call
mov
push
lds
mov
xchg
shr
mov
adc
scas
xchg
or
(bad)
(bad)
scas
jge
popf
call
repz
add
and
imul
add
add
scas
add
and
dec
sbb
in
sub
add
pusha
daa
(bad)
pop
imul
cmovno
jp
ds
in
mov
mov
adc
imul
mov
aad
mov
movs
or
mov
sbb
cs
jp
sar
sub
lea
push
imul
push
sub
add
mov
xor
movs
(bad)
in
rcl
inc
sub
arpl
pop
jl
mov
dec
sub
inc
push
je
pop
popa
push
xchg
add
sahf
aas
xchg
rcl
xchg
xor
in
pop
mov
nop
fsubr
in
or
xchg
popf
stos
cmp
jmp
adc
ficomp
adc
push
dec
and
dec
push
pop
ret
dec
inc
loop
mov
pop
jecxz
jns
sub
mov
jmp
in
loopne
sbb
cmp
and
movs
mov
int3
pop
call
push
(bad)
div
push
push
add
repnz
js
std
jnp
scas
xor
cmp
das
pop
test
dec
ret
jmp
imul
push
cmp
mov
mov
aas
mov
dec
shl
inc
jecxz
xchg
imul
lock
test
repnz
mov
je
sbb
in
xchg
and
rcr
inc
and
pop
addr16
xchg
push
push
sub
sbb
and
imul
push
cmp
push
fwait
sbb
rcr
mov
jecxz
lea
push
sar
jmp
ret
mov
es
cmps
loope
or
cmp
repz
ja
nop
cmp
pushf
jmp
adc
jnp
fcomp
aad
push
push
test
call
aam
pop
int
lock
imul
test
jnp
clc
sub
add
fsub
lods
push
adc
not
into
(bad)
push
dec
div
mov
mov
dec
adc
out
sub
inc
sbb
or
sbb
sar
ds
shr
jb
inc
jg
add
addr16
pushf
push
mov
xchg
repnz
aam
mov
imul
addr16
fbld
cli
pop
js
(bad)
repnz
push
pop
call
repnz
pop
inc
mov
mov
loop
repz
inc
stos
in
dec
rcr
clc
add
or
mov
fwait
jo
sbb
loopne
jecxz
movs
xor
push
push
mov
jnp
inc
out
and
repnz
nop
lods
sub
mov
test
fimul
rcr
and
sub
push
test
stos
aas
push
sbb
sub
and
mov
stc
push
xlat
in
sbb
jmp
es
cmps
xor
xlat
imul
test
icebp
inc
fsubr
mov
mov
dec
adc
dec
(bad)
loopne
icebp
inc
or
cmp
pop
arpl
fadd
nop
xlat
xchg
cmps
call
bound
mov
jmp
and
lods
push
in
dec
cmc
mov
push
test
test
mov
jo
mov
in
aaa
sub
adc
inc
push
mov
xor
jecxz
aad
mov
sbb
imul
cmp
mov
or
ins
mov
sub
shl
test
xchg
jno
mul
nop
push
xchg
inc
imul
add
aas
inc
stc
int3
bound
pop
js
idiv
or
lahf
outs
ret
int3
dec
or
pop
stos
aam
sub
adc
fld
mov
push
imul
hlt
inc
idiv
dec
not
(bad)
dec
bound
jle
xchg
add
int3
iret
fwait
stos
shr
cmp
cmp
arpl
push
sahf
push
imul
fimul
arpl
lock
dec
and
loope
adc
outs
dec
dec
lahf
sbb
out
sub
(bad)
fs
mov
sbb
sti
sbb
cmp
and
and
dec
stos
movs
gs
push
push
js
push
cmp
cmp
inc
mov
loope
scas
dec
lods
scas
dec
and
dec
pusha
pop
cmc
xor
add
(bad)
jno
fs
and
or
leave
js
xchg
cmps
and
data16
jbe
fiadd
mov
mov
jmp
aas
fisub
pop
xchg
cmps
pop
push
test
cld
xor
(bad)
mov
push
push
pop
mov
xchg
ret
xor
mov
rol
dec
inc
in
inc
sub
jns
cmp
js
jmp
push
into
popf
cmp
popa
jns
cwde
fidiv
dec
fild
sbb
adc
repnz
fwait
aas
mov
lods
hlt
jae
imul
fcmovu
sub
retf
xchg
sbb
data16
mov
cli
pop
repnz
pop
mov
cli
mov
imul
popf
xor
jle
and
and
mov
sbb
popf
or
inc
push
push
fcmovnbe
jo
jno
add
lahf
mov
repz
je
mov
mov
mov
movs
mov
in
lods
fs
test
rol
clc
jae
cmp
loopne
cmps
inc
repz
jb
mov
imul
rcl
daa
lea
cmps
rcr
loop
sub
pusha
int
imul
lds
das
inc
leave
rcr
inc
adc
inc
jno
push
rol
mov
mov
sbb
adc
and
sbb
push
fisubr
pushf
sahf
add
dec
add
cmp
and
pop
jbe
iret
sti
and
sub
shr
lods
inc
les
out
jne
push
test
or
cmps
cmp
inc
add
inc
fst
push
popf
fist
sar
fcom
jge
mov
pushf
push
rcr
adc
xor
pop
push
test
cmc
or
push
out
mov
push
jbe
dec
jo
xchg
iret
mov
out
push
sbb
lods
scas
repz
jp
dec
bound
or
retf
nop
inc
jecxz
dec
gs
out
mov
add
adc
test
dec
mov
call
add
retf
mov
xor
dec
cmp
dec
loopne
jo
dec
and
pop
mov
jo
xchg
mov
cmps
push
jno
mov
xchg
inc
stc
and
mov
test
xchg
cdq
in
gs
inc
jecxz
and
into
in
ror
sub
cmps
stos
inc
push
cmc
xchg
data16
test
xchg
mov
movs
jbe
hlt
mov
div
mov
(bad)
fabs
rcr
xor
sub
(bad)
mov
cmp
data16
pop
stos
jae
aam
sbb
inc
xchg
pushf
sbb
mov
in
push
packuswb
mov
cmp
xor
xchg
add
mov
push
pop
push
adc
pushf
aas
mov
cmc
pop
pop
call
push
inc
loopne
and
repz
mov
out
das
div
aad
inc
and
and
dec
repnz
pop
push
mov
jne
cli
pop
ins
pop
test
neg
xor
pop
movs
lods
nop
lods
xchg
xchg
add
inc
les
add
sahf
xor
sbb
sbb
and
lds
xor
call
(bad)
aam
rcr
jbe
sub
bnd
neg
xchg
sbb
shl
ins
jnp
adc
jl
sub
and
pop
and
xor
sbb
xchg
and
(bad)
jbe
(bad)
sar
popa
sbb
jb
pop
psrlw
in
fisttp
xor
and
inc
xchg
rol
dec
sbb
and
retf
retf
aad
jno
adc
and
sbb
or
xchg
jbe
xor
std
sbb
jns
mov
ret
and
push
xchg
and
inc
call
test
aam
adc
imul
mov
vmptrld
dec
add
mov
sbb
mov
sahf
sbb
cdq
push
inc
test
push
enter
(bad)
out
add
pop
jbe
mov
push
pop
enter
xchg
fcom
mov
dec
and
or
outs
sub
push
or
in
dec
push
jecxz
in
test
jno
jb
jbe
mov
jl
mov
enter
dec
div
dec
cmp
aam
pop
push
sti
push
sbb
ficomp
(bad)
fwait
(bad)
mov
dec
add
dec
mov
push
dec
and
mov
and
and
rcr
or
inc
and
xchg
sbb
mov
xchg
or
jno
push
mov
add
jnp
mov
adc
sub
push
and
inc
imul
inc
sbb
push
adc
mov
adc
dec
shl
xchg
out
scas
iret
(bad)
hlt
clc
inc
mov
mov
inc
sti
fstp
bound
jns
mov
popa
jle
(bad)
cld
sahf
mov
in
scas
fcmovu
nop
mov
sub
mov
aad
les
sub
adc
xchg
jl
in
sbb
out
fld
(bad)
in
fstp
mov
icebp
aad
jl
fwait
pop
jle
pop
dec
retf
jno
sar
loopne
out
cli
das
pusha
pop
mov
(bad)
push
mov
movd
jl
sti
gs
and
and
inc
jno
aas
sti
fxch
dec
mov
inc
adc
aad
pop
xor
jo
shl
sti
imul
(bad)
mov
cmp
xchg
leave
dec
popa
(bad)
mov
inc
cmp
in
or
add
and
adc
hlt
or
inc
sahf
xchg
call
stos
mov
pushf
aad
pop
lds
pop
call
gs
stc
push
sub
pushf
aaa
or
jno
pop
dec
rcr
inc
adc
xchg
pop
lods
ret
retf
sub
ret
jbe
aad
xor
xlat
cs
mov
jns
inc
cmp
lods
xchg
adc
test
dec
adc
call
or
repnz
cmc
in
jp
daa
xchg
sbb
pop
leave
dec
mov
add
xor
mov
push
adc
push
push
xchg
and
dec
mov
sub
add
rcr
push
imul
adc
inc
mov
lea
and
movs
shr
push
cmp
sub
scas
or
jmp
push
enter
sub
pop
(bad)
jmp
(bad)
into
pop
push
sti
aam
and
mov
nop
xchg
clc
lock
xor
mov
out
out
pusha
fnsave
xor
loope
fdivr
pop
push
adc
and
mov
and
push
dec
jle
ins
pop
push
mov
xor
pop
pop
scas
jp
(bad)
xchg
(bad)
repz
cli
sar
sbb
mov
ins
push
xchg
aad
dec
arpl
push
xchg
fmulp
push
cmp
and
retf
into
repz
push
sub
jmp
mov
xor
mov
push
adc
pop
jns
push
or
cld
dec
fiadd
ror
sub
pop
sub
cmp
cmc
aad
mov
rcl
(bad)
cmp
popa
in
dec
inc
jmp
fisub
pop
sbb
push
gs
push
add
inc
psubb
mov
pusha
dec
xor
xchg
push
and
mov
and
stos
(bad)
div
call
dec
sub
(bad)
adc
mov
iret
sub
mov
sbb
(bad)
rcl
or
push
adc
pop
adc
xchg
push
inc
and
vmovntdq
addr16
daa
add
stc
push
icebp
mov
ficomp
dec
add
out
std
call
mov
fdiv
mov
xchg
or
cdq
std
cld
add
(bad)
cmp
sahf
push
jg
test
sub
ret
out
imul
mov
mov
lock
aad
sub
push
or
data16
rcl
dec
add
xor
(bad)
lods
mov
push
dec
mov
repnz
test
dec
leave
arpl
lea
test
loope
es
neg
jle
mov
xchg
pop
cmp
xor
push
cmp
lods
pop
mov
jb
adc
retf
mov
fidivr
pop
daa
sub
stos
or
dec
xchg
jge
pushf
cmp
call
mov
dec
mov
mov
xchg
mov
mov
mov
imul
stos
jae
mov
jns
add
adc
in
mov
xchg
mov
dec
cdq
cmp
adc
pop
jmp
or
mov
mov
int3
pop
jns
std
sub
add
add
imul
popa
cmps
sub
and
push
ja
xchg
push
sbb
sub
mov
sti
pop
mov
push
mov
jecxz
sbb
stos
mov
scas
xor
movs
mov
or
jge
sbb
xor
pop
dec
push
aad
sbb
or
mov
xlat
mov
into
jle
pop
xchg
inc
loopne
fwait
nop
movs
out
js
cmps
sub
fucomp
jae
push
fmul
push
cdq
fmul
adc
retf
retf
xchg
(bad)
or
fwait
arpl
imul
jle
in
mov
dec
movs
hlt
or
mov
mov
in
cmp
aas
jg
mov
adc
ficomp
gs
stos
fdiv
lock
aad
mov
mov
jbe
and
sbb
cmp
fwait
leave
repz
ret
sti
or
aam
add
jmp
and
es
jae
jg
repz
push
mov
xchg
push
imul
adc
mov
pop
outs
fbstp
ret
xchg
int3
xchg
dec
clc
mov
das
and
xchg
cmps
pop
scas
jg
out
jge
std
cmp
push
push
push
mov
mov
jb
outs
sbb
jle
fadd
adc
sub
push
add
sbb
rol
cwde
sbb
lods
test
pop
sbb
jp
sti
push
sbb
mov
test
fstp
ret
les
cmps
cmps
xor
or
cpuid
lods
mov
ins
sub
xabort
add
mov
and
mov
aas
aas
cmp
mov
jb
pop
cmps
xchg
and
cwde
sbb
jecxz
inc
dec
outs
jmp
fbstp
cwde
(bad)
xor
add
lea
call
mov
sub
cmp
sub
mov
mov
sub
and
sub
jmp
sub
dec
pop
cmp
retf
xchg
imul
mov
fbstp
sbb
gs
mov
mov
xchg
sub
push
repz
imul
adc
pop
cdq
inc
in
dec
xchg
sbb
test
retf
iret
loop
xchg
sbb
sub
ret
out
add
imul
inc
xchg
jmp
das
in
xchg
cmp
sub
push
es
mov
rcr
jno
cli
shr
jns
sub
xchg
loope
xchg
sub
imul
neg
pop
pop
or
cdq
xchg
sub
jmp
shl
dec
adc
cli
imul
pop
ficomp
mov
rcr
lods
push
inc
or
cmp
shr
xor
and
push
pop
jge
jbe
jmp
leave
bound
lahf
popa
adc
or
and
push
cmp
test
cli
sub
cmp
call
sub
mov
adc
or
push
push
loopne
xchg
inc
stc
cmp
cdq
sub
pop
leave
nop
pop
mov
lea
push
loope
scas
dec
in
jp
push
stos
sub
jle
xchg
pop
jns
xor
xchg
add
sub
fs
add
push
dec
mov
fs
cwde
mov
inc
mov
push
mov
pop
sub
cmp
mov
outs
imul
(bad)
imul
mov
arpl
add
dec
jle
dec
and
stc
xor
adc
aaa
daa
jecxz
mov
pop
mov
or
ins
imul
sbb
cmp
mov
cmp
jno
fadd
aam
mov
fcmovnu
xchg
dec
xchg
mov
aaa
xchg
cmps
popa
mov
adc
rcr
je
push
(bad)
(bad)
(bad)
pop
lock
shr
cmp
outs
jle
mov
mov
aaa
loop
je
push
cmp
jp
pop
mov
add
sbb
cmps
in
mov
mov
or
in
add
lds
inc
xchg
sub
mov
push
pop
mov
out
dec
repz
cmps
adc
push
xchg
int3
pop
mov
test
shl
fldcw
es
cdq
mov
sub
int
and
pop
sbb
retf
push
sbb
and
or
xchg
sub
jle
ja
add
(bad)
jns
hlt
ror
mov
jnp
cmp
(bad)
loop
icebp
push
fdivr
cmps
rcr
(bad)
push
sub
mov
movs
test
xchg
pusha
push
dec
test
loop
or
xchg
dec
bound
mov
lods
lahf
xchg
adc
sbb
imul
and
fcmovbe
and
enter
les
rol
pop
sub
and
push
xchg
cmp
inc
bound
sub
pop
pop
rcl
leave
push
add
sub
in
push
movs
push
mov
ins
sbb
dec
sbb
xchg
jns
gs
aam
data16
rcr
xor
call
push
pop
imul
test
shl
shl
mov
nop
mov
fisttp
js
rcr
ficomp
dec
cmp
add
pop
mov
sbb
push
fcom
add
xchg
movs
sub
shl
sub
sub
sub
pop
(bad)
movs
cmc
xor
or
cmps
add
and
hlt
mov
mov
and
popf
movs
ds
push
add
push
pop
outs
mov
fst
aad
retf
loop
inc
es
or
mov
out
imul
out
test
fsub
addr16
adc
mov
push
jns
mov
aad
dec
fst
and
xchg
(bad)
adc
mov
sti
ss
fbstp
xor
push
retf
std
fidivr
enter
pop
data16
test
jmp
jbe
(bad)
jle
push
arpl
pop
push
push
jp
mov
ret
cs
aam
or
sbb
push
shl
sbb
js
mov
mov
xchg
or
cmps
enter
shl
in
shl
and
je
or
sbb
test
punpcklwd
mov
mov
ins
jle
(bad)
popf
fdiv
mov
jb
outs
and
int
fdivr
test
pop
pop
out
aaa
arpl
aas
fwait
jecxz
pop
sbb
cdq
fld
jne
outs
push
fwait
aaa
iret
icebp
cmp
mov
xor
cmps
xor
cmp
dec
dec
pusha
ins
bound
jg
sbb
js
ins
adc
fwait
(bad)
pop
xor
(bad)
fucomip
push
test
sbb
sbb
cmp
es
mov
daa
dec
(bad)
hlt
pop
lahf
ins
sbb
fs
out
aaa
or
dec
int
xchg
inc
xor
xor
mov
es
mov
mov
add
add
add
xchg
and
adc
xchg
or
repnz
call
aaa
push
jp
jns
pop
sahf
jnp
arpl
inc
std
sbb
jmp
cmps
and
ja
sar
int3
inc
aas
fcomip
mov
std
cld
jg
scas
ret
cwde
sbb
pop
sbb
idiv
xchg
mov
icebp
cmp
cmp
das
jmp
retf
neg
and
mov
mov
and
stos
ss
mov
ins
xchg
(bad)
fmul
es
sbb
xchg
jne
cmp
mov
cdq
dec
bound
test
shl
imul
pop
(bad)
xlat
call
sub
mov
sbb
mov
test
ret
mov
cwde
(bad)
js
inc
jge
sbb
out
loope
jbe
cmps
mov
call
push
aaa
mov
jp
xchg
data16
sub
xlat
pop
mov
lods
inc
ja
adc
inc
or
add
push
inc
test
test
sub
dec
cs
jno
mov
push
jmp
ret
enter
inc
sar
(bad)
mov
es
pop
(bad)
mov
es
ja
mov
pop
jmp
pop
aaa
mov
pop
jmp
mov
add
aaa
xchg
push
mov
xchg
(bad)
loop
ins
adc
and
sub
test
xchg
jp
cdq
std
mov
jg
lahf
cmp
cmp
mov
(bad)
bound
(bad)
pusha
fist
arpl
dec
xchg
add
add
add
daa
mov
jo
dec
add
pop
fisttp
fistp
sub
jmp
xchg
sar
aam
xchg
call
jns
cmp
in
pushf
(bad)
fstp
loopne
xchg
call
or
nop
fstp
pop
jg
mov
jecxz
ds
sub
xlat
jecxz
out
and
and
pop
pop
xchg
loopne
rcl
and
inc
jno
push
retf
jne
inc
push
fstp
cmc
cmp
jmp
lds
ss
jmp
test
sti
xchg
cmps
or
fwait
sub
or
inc
scas
arpl
lods
cs
ds
xchg
sar
jb
stos
retf
repnz
jns
lahf
dec
das
jbe
lahf
(bad)
jle
cli
shl
sbb
cwde
mov
rcr
cmp
mov
pop
nop
scas
in
(bad)
aaa
cmp
push
and
ficom
mov
loop
in
pop
mov
ror
xor
pushf
dec
or
dec
daa
mov
inc
pop
inc
sbb
dec
retf
xchg
leave
loope
xchg
inc
bound
xchg
sbb
jne
scas
ins
mov
pop
adc
daa
adc
js
xchg
xor
mov
adc
in
push
loop
xchg
jecxz
add
rcr
mov
mov
leave
inc
or
dec
into
mov
ret
inc
cmp
cwde
mov
jns
push
sahf
cmp
mov
das
pusha
retf
dec
mov
push
pop
xchg
mov
mov
sub
loop
push
mov
je
jmp
xchg
into
push
bound
dec
inc
sbb
imul
lods
in
rcl
mov
dec
leave
enter
or
in
xchg
push
imul
mov
ss
dec
lock
mov
daa
jns
jne
jecxz
cmps
sti
jnp
push
fwait
xor
jno
dec
jbe
nop
push
repz
dec
leave
aam
pop
(bad)
and
cmps
inc
pop
inc
mov
lods
sub
add
xchg
popf
adc
or
mov
jbe
das
cmp
pop
rcr
rol
pcmpeqb
cmps
test
mov
dec
icebp
and
mov
fstp
sbb
xor
psadbw
(bad)
in
push
fcmovb
loope
(bad)
outs
inc
mov
scas
frstor
fnstcw
outs
and
lahf
(bad)
xlat
int3
inc
jp
sahf
pop
jmp
jno
int
test
clc
fbstp
daa
mov
test
pop
retf
bound
jle
jns
inc
pop
sub
push
gs
and
movs
inc
sub
je
retf
sub
pop
jl
and
js
xchg
xchg
lock
js
mov
dec
loop
fisttp
mov
jecxz
jecxz
loope
(bad)
outs
loopne
cmc
imul
jp
xchg
cs
les
jae
xchg
popa
cmc
fidivr
stc
call
cmp
sbb
push
mov
cli
pop
cmp
stc
jmp
inc
xchg
pusha
push
rol
rol
mov
cmp
arpl
dec
push
mov
mov
icebp
(bad)
in
cmp
into
popf
cmp
mov
scas
in
fdiv
xor
ffree
fild
fdivr
jmp
mov
je
cmps
stc
(bad)
ins
pop
js
ins
cwde
fistp
iret
neg
(bad)
fistp
mov
les
iret
ss
fwait
lahf
lahf
and
outs
es
ins
mov
lods
mov
shr
xlat
int
fnstsw
mov
fnstcw
fistp
ins
cmp
mov
and
(bad)
jp
xor
iret
out
pop
retf
faddp
mov
mov
sbb
mov
cmp
dec
cdq
in
pop
mov
(bad)
icebp
ja
(bad)
aaa
scas
mov
or
jae
pop
mov
pop
test
jmp
dec
ins
mov
mov
es
cmp
fbstp
iret
cmp
std
cmp
mov
xor
adc
stos
mov
jnp
jne
cdq
fwait
shl
or
jge
pushw
rcl
retf
mov
fistp
xchg
or
fcmovnbe
aam
out
stc
mov
cmp
dec
add
(bad)
pusha
pushf
add
bound
bound
push
xor
or
jmp
leave
and
loop
or
dec
dec
sub
enter
les
shr
outs
data16
xchg
retf
dec
inc
aaa
mov
inc
and
sbb
mov
jnp
or
scas
outs
inc
jne
and
popf
xchg
(bad)
in
les
popa
mov
pusha
arpl
pop
stos
repz
test
push
das
rcl
cmp
sbb
cmp
(bad)
gs
xchg
push
mov
loope
xchg
fstp
mov
mov
fnstsw
mov
and
movs
jno
int3
dec
ss
mov
push
stc
or
data16
repnz
icebp
movq
xlat
mov
jno
loopne
outs
sbb
out
lds
mov
sbb
out
adc
mov
or
mov
je
shr
xchg
inc
push
(bad)
pusha
ins
push
test
in
xor
lock
fadd
jl
jl
cmps
dec
int
push
mov
jecxz
cwde
xor
fwait
mov
mov
aam
dec
jg
addr16
cmp
or
into
jecxz
(bad)
outs
sbb
out
inc
pop
jge
cmp
clc
(bad)
aaa
mov
pop
sub
neg
fdivr
sbb
pop
mov
jnp
push
xor
xor
adc
mov
inc
add
rcl
xor
out
or
in
or
lock
xchg
sub
dec
repnz
sbb
rcl
sub
sub
mov
mov
mov
dec
or
mov
jmp
mov
inc
test
ins
cmps
hlt
mov
jne
mov
lods
pop
sbb
xchg
ins
mov
xchg
out
aaa
mov
cmps
mov
test
cli
js
pop
(bad)
scas
xchg
add
stos
mov
mov
sbb
add
and
cdq
add
or
adc
ret
mov
sub
push
sbb
std
mov
or
sbb
stc
jmp
out
xchg
pop
cdq
daa
stc
pop
sbb
jge
pop
pop
clc
jns
outs
aas
sti
jg
dec
jae
jmp
mov
stos
in
mov
and
dec
sub
mov
(bad)
lahf
repz
adc
lods
(bad)
enter
add
xlat
call
imul
addr16
mov
jno
(bad)
icebp
mov
xor
in
ss
in
in
and
jbe
loope
outs
in
mov
pop
pop
pop
push
jnp
lock
cmp
xlat
(bad)
push
jg
imul
mov
ret
ins
neg
addr16
cmp
call
retf
fnstsw
out
dec
cmps
enter
in
aad
adc
ret
retf
(bad)
push
push
cmc
jmp
mov
jg
jns
shr
btc
inc
retf
inc
push
(bad)
xchg
xor
inc
inc
inc
or
fsub
adc
mov
repz
sti
jmp
dec
mov
jmp
ja
cli
jmp
loop
xlat
ffreep
retf
scas
mov
push
ja
iret
fdivr
mov
jp
mov
js
aaa
pop
mov
fwait
sub
mov
in
test
push
mov
stos
fdivp
fcom
clc
sbb
pop
jno
sbb
pushf
cmp
add
sahf
cmp
lahf
shr
push
and
jp
jns
pmuludq
jecxz
test
call
adc
rcl
xchg
push
mov
mov
(bad)
jo
(bad)
in
icebp
arpl
jbe
je
jecxz
mov
cmp
scas
(bad)
(bad)
mov
clc
mov
and
test
xchg
lock
sbb
inc
and
das
retf
ds
push
gs
(bad)
mov
clc
and
cmps
mov
mov
xlat
cmp
ret
jno
jmp
jmp
dec
push
mov
jmp
mov
data16
psllq
xchg
mul
jl
inc
movs
aam
paddusw
cmp
nop
sub
jg
enter
loope
(bad)
js
adc
jae
cmp
mov
cmp
jnp
jns
in
leave
mov
mov
into
mov
iret
test
fst
pop
push
inc
cmp
out
pop
cmp
add
js
sub
sar
mov
and
out
fisttp
enter
(bad)
outs
je
loopne
(bad)
mul
and
les
mov
sub
jg
inc
and
stc
push
push
jl
popf
jbe
pop
enter
sbb
mov
(bad)
call
mov
rcr
jge
and
nop
cmp
mov
mov
jmp
xchg
inc
arpl
add
call
dec
add
xchg
(bad)
jbe
push
push
pop
push
xchg
mov
lea
pop
and
dec
lock
sbb
xor
(bad)
pop
loope
out
daa
addr16
and
push
call
fidiv
xchg
sbb
cmp
push
stc
jmp
or
sar
and
cvttps2pi
add
stc
fprem
pop
push
jg
pop
out
ffree
in
inc
mov
mov
xlat
fs
jmp
(bad)
aam
sub
out
mov
gs
call
lock
shl
rcr
(bad)
adc
outs
and
fs
sahf
ja
and
inc
jecxz
inc
mov
sahf
gs
repz
loop
ins
fistp
mov
std
scas
not
inc
imul
ss
jge
cmp
push
and
mov
jno
inc
in
pop
and
jg
and
aaa
dec
pop
dec
add
jns
ins
jle
or
mov
loop
mov
lea
mov
scas
test
sahf
cmc
neg
xchg
hlt
add
mov
inc
(bad)
and
fs
hlt
jle
inc
xchg
jge
mov
pop
cmp
bound
mov
fisub
(bad)
sbb
ds
mov
(bad)
fucomip
xchg
and
jge
gs
sahf
into
iret
call
cmc
aam
data16
cmp
mov
mov
cmp
sti
test
iret
jmp
aad
push
fs
sub
jmp
sub
nop
outs
sbb
out
or
and
mov
or
int
xor
mov
(bad)
call
inc
push
mov
iret
icebp
mov
in
les
fisubr
fst
lds
addr16
sar
push
pop
iret
pop
rol
popa
shl
or
mov
(bad)
repnz
movs
dec
cld
cld
and
js
push
loope
lds
jmp
and
dec
fisub
dec
sub
mov
or
jnp
pop
adc
(bad)
loope
jg
repnz
sti
mov
mov
iret
imul
cmp
pop
push
(bad)
jmp
lods
cmp
loopne
xchg
xchg
unpckhps
inc
scas
mov
mov
adc
outs
push
out
js
sub
loopne
(bad)
in
fstp
jecxz
in
stc
ror
js
jnp
sti
dec
ficom
popa
xor
(bad)
cli
xlat
mov
stc
hlt
pop
lds
adc
scas
jecxz
xchg
pop
ret
sahf
(bad)
repz
xchg
ds
xchg
daa
outs
cmp
sub
push
outs
mov
jle
push
outs
icebp
repz
jl
cld
icebp
(bad)
dec
out
xchg
sbb
outs
cwde
xchg
dec
enter
jp
xchg
retf
and
sub
push
pop
(bad)
sti
test
sub
ret
repnz
test
neg
clc
call
std
out
mov
mov
and
int3
iret
push
int3
jmp
idiv
fsub
jae
sbb
leave
pop
sub
jg
cmp
jg
mov
adc
scas
jnp
aam
cli
mov
div
mov
jmp
shr
cmp
cs
pushf
(bad)
jns
mov
sar
xor
imul
repz
push
mov
xchg
add
ja
in
stos
mov
iret
inc
iret
ret
xchg
pop
or
(bad)
push
sub
mul
jmp
or
pop
jns
dec
shr
sbb
iret
iret
iret
mov
pop
(bad)
pop
pop
sbb
pusha
mov
ins
jno
cmc
push
sbb
dec
inc
rcl
add
stos
push
sbb
mov
in
icebp
dec
sbb
inc
movs
mov
push
pop
and
repnz
push
test
retf
mov
inc
jne
or
xchg
sahf
or
inc
mov
scas
jns
jbe
or
sub
sbb
add
pop
dec
adc
mov
leave
add
jb
and
in
lahf
ret
xchg
pop
(bad)
mov
inc
imul
pop
lods
rcr
or
js
ret
mov
cmp
sub
ins
rcr
cmp
adc
push
cwde
fwait
and
push
xchg
push
test
scas
inc
jae
mov
jo
push
(bad)
jecxz
les
pop
sbb
das
add
bound
sub
fwait
or
jle
sub
cdq
imul
sti
scas
test
or
mov
aas
and
bound
lods
jle
hlt
ror
loopne
jnp
sbb
ss
xchg
jnp
xchg
iret
mov
mov
add
js
lds
daa
lahf
pusha
pop
mov
jnp
and
cmp
jbe
shl
sahf
daa
out
push
inc
test
inc
xor
sti
add
and
lahf
mov
nop
pop
popf
inc
inc
(bad)
hlt
cmp
shl
hlt
stos
sub
call
adc
repnz
retf
neg
mov
dec
mov
sti
div
xchg
mov
mov
mov
out
test
(bad)
cld
sbb
fistp
xlat
outs
ds
daa
out
inc
out
int
(bad)
mov
jns
jae
jge
inc
add
mov
repnz
outs
loope
mov
pop
and
dec
(bad)
inc
xor
mov
out
out
jmp
in
clc
adc
sbb
sub
mov
jge
imul
fidiv
js
push
mov
das
mov
(bad)
mov
out
push
sti
(bad)
out
(bad)
push
or
pop
pop
push
dec
leave
dec
das
sbb
jl
xlat
test
(bad)
fcmovbe
(bad)
fwait
add
jg
mov
std
lds
pop
pop
loope
lock
fidiv
movs
vmovdqa
cld
inc
pop
jecxz
ret
retf
(bad)
arpl
inc
movd
fadd
push
mov
sub
cmp
das
push
push
aam
sbb
jp
inc
in
inc
sahf
sbb
mov
mov
stos
sbb
pop
mov
pop
push
sbb
in
sahf
movs
mov
hlt
push
in
retf
repnz
mov
mov
mov
rol
psubq
sub
(bad)
lock
xor
push
pop
pop
and
push
pop
or
pop
or
inc
or
dec
sbb
and
cmp
arpl
xor
outs
repnz
aas
(bad)
cwde
imul
outs
aas
mov
mov
out
scas
repz
dec
mov
mov
call
or
inc
sbb
jecxz
mov
fdivr
sbb
in
fs
in
pop
pop
push
aas
push
or
out
sub
test
inc
ret
sub
scas
fucomip
mov
(bad)
into
test
add
push
hlt
pop
cmp
lea
pop
push
imul
and
out
retf
out
mov
jnp
cli
int
and
sahf
add
and
(bad)
jge
push
push
pop
test
mov
mov
push
enter
jnp
sbb
cdq
inc
inc
jb
xchg
das
pop
or
sub
clc
push
loope
iret
dec
dec
les
mov
jecxz
leave
fnstsw
cmp
test
xor
fist
sub
and
cmp
sahf
pop
mov
adc
in
xlat
(bad)
jmp
loop
push
scas
popa
iret
js
test
jecxz
sbb
nop
push
mov
aaa
xor
arpl
cmp
cmp
fcmovnu
imul
es
daa
dec
fnsave
xor
add
mov
pop
mov
arpl
movs
pop
fidiv
pop
cld
mov
aam
dec
pop
out
(bad)
jae
repz
lahf
shl
push
or
and
arpl
add
pop
iret
aas
call
xor
adc
jmp
sar
shl
shl
imul
mov
imul
sub
xlat
js
mov
addr16
hlt
mov
iret
sub
(bad)
repnz
outs
cmp
add
xchg
pop
test
(bad)
mov
les
jnp
mov
sbb
pop
sub
repz
int3
xor
xor
pop
push
cdq
mov
mov
jns
retf
jge
rol
adc
out
fist
ror
out
aas
std
hlt
sar
mov
pop
push
das
rcl
ss
push
jmp
inc
sbb
imul
pop
dec
pop
jb
retf
(bad)
jle
lahf
out
add
arpl
out
popa
in
add
mov
shr
btc
pop
sub
adc
retf
xor
in
pop
int3
stos
add
push
inc
aaa
das
xor
sbb
push
pop
add
call
push
test
pop
mov
push
int3
dec
cvtps2pd
dec
test
push
pop
or
jp
mov
push
push
imul
outs
stc
sahf
in
(bad)
dec
push
push
jg
repnz
sub
pop
out
popf
sub
pop
jl
stos
mov
(bad)
fld
add
loopne
inc
xchg
cmc
das
push
jg
loopne
push
stos
sbb
mov
push
sbb
inc
add
push
sub
sub
jge
sbb
cwde
adc
inc
lds
sub
retf
cmc
jne
pop
push
in
inc
add
stos
xchg
mov
xchg
push
inc
ins
cdq
jle
not
mov
dec
out
mov
adc
adc
cli
xchg
add
sti
test
aam
mov
or
mov
stos
shl
jbe
stos
jmp
adc
loop
in
adc
div
hlt
mov
or
inc
sti
xchg
mov
add
push
mov
mov
jbe
jmp
mov
cs
jo
ja
xchg
xchg
and
imul
sbb
inc
push
mov
lods
xchg
sub
or
mov
xor
sbb
pushf
fcomp
and
ret
dec
dec
push
inc
aaa
cmp
add
jle
jmp
out
xchg
jnp
sub
push
mul
mov
dec
adc
mov
pop
ficomp
mov
mov
cmp
call
cmp
(bad)
(bad)
cli
test
test
cmp
fisubr
push
rcl
lods
ins
sub
test
stc
lods
ficom
push
push
cld
fbstp
jno
fdiv
sub
scas
mov
pop
(bad)
jb
retf
jnp
jmp
or
mov
sub
fnstsw
jnp
stc
cld
rol
cmps
sbb
jp
jp
jp
and
jecxz
cmc
sbb
add
sbb
add
aas
jmp
pop
aas
mov
mov
in
push
and
pop
mov
sahf
push
mov
add
cmp
popf
test
push
test
push
cld
cmp
(bad)
sub
in
pop
std
inc
in
adc
repnz
push
iret
add
addr16
inc
test
out
(bad)
mov
xchg
push
mov
(bad)
jmp
sbb
fwait
gs
jl
pop
add
fist
push
push
xlat
xchg
in
dec
mov
out
gs
not
pop
jecxz
jnp
call
pop
push
mov
mov
ds
stc
mov
sti
cmp
jbe
jns
int
imul
retf
mov
push
aam
sub
pusha
add
stos
push
cmp
js
add
ja
stc
std
cli
(bad)
mov
fistp
inc
xlat
push
fnsave
sbb
xlat
mov
adc
bound
mov
mov
hlt
cmp
je
fisttp
jae
adc
call
inc
mov
sub
outs
popa
out
jp
mov
rcl
push
dec
pop
pop
iret
ret
popf
pop
scas
add
test
push
xchg
addr16
mov
push
sub
outs
ins
ss
xchg
rol
lahf
sahf
adc
push
out
(bad)
int3
sub
js
pop
loopne
out
outs
not
nop
daa
mov
dec
pop
inc
ins
pop
or
jmp
clc
jp
xchg
push
push
cwde
cmp
mov
(bad)
repz
jbe
jecxz
mov
jno
(bad)
cmp
aaa
mov
pop
mov
scas
ins
fisub
mov
inc
fprem1
es
lods
cli
mov
dec
dec
test
repz
shl
jg
clc
mov
loop
pop
fsubr
hlt
(bad)
pop
sub
mov
xchg
jecxz
iret
aam
inc
push
sub
sub
je
cmp
popf
push
je
xchg
sti
pop
cld
jmp
arpl
(bad)
fnsave
jbe
je
repnz
xlat
xchg
jge
(bad)
xchg
lds
pop
sub
push
pop
jl
mov
mov
hlt
jge
stc
sub
jge
xor
mov
jae
push
push
in
push
pop
add
imul
inc
mov
shl
iret
dec
test
cs
mov
pop
sahf
arpl
sub
add
inc
or
hlt
(bad)
fist
mov
shr
push
out
jge
mov
mov
loop
lock
mov
sub
std
mov
cwde
repnz
sar
push
add
test
push
add
dec
push
adc
pop
dec
or
sub
adc
lds
test
cmc
mov
mov
add
pusha
out
repnz
pop
dec
repz
push
mov
sahf
pop
pop
xchg
xlat
add
mov
dec
retf
jmp
and
mov
and
js
mov
xor
(bad)
jnp
cmp
hlt
hlt
xchg
cmp
mov
mov
push
pop
ja
je
sub
xor
sar
sti
lahf
sub
mov
dec
and
std
xor
cmp
out
mov
or
jge
jmp
or
mov
mov
cmp
pop
xor
push
mov
push
popf
mov
loopne
mov
dec
adc
sbb
div
aad
mov
scas
mov
clc
pop
adc
jmp
sub
arpl
mov
xor
(bad)
rol
mov
mov
imul
mov
mov
iret
gs
xor
leave
mov
pop
jns
fs
and
and
mov
test
pop
mov
retf
mov
cld
sahf
out
fbstp
fwait
ss
push
jne
mov
mov
inc
out
jae
mov
xor
(bad)
lock
pop
or
ds
dec
pop
shr
in
outs
inc
jge
and
movs
cmps
or
pop
mov
and
out
clc
fmulp
sub
dec
and
aas
add
pop
pop
stos
jl
cmp
fsub
mov
push
stos
lods
loopne
arpl
jbe
shl
retf
push
pop
xchg
(bad)
jg
aas
inc
fistp
push
dec
int
loopne
jecxz
js
shr
sbb
cmp
std
jno
arpl
sbb
sbb
hlt
cmps
inc
mov
repz
dec
(bad)
jmp
jmp
pop
mov
mov
js
jge
aam
popa
mov
pop
inc
inc
jp
fist
jnp
outs
sbb
fistp
pop
repz
ret
jle
test
fistp
jge
loope
sub
pop
jns
dec
jg
fisttp
aad
fs
sub
fst
idiv
mov
push
cs
push
mov
jo
rcr
stos
icebp
cld
sbb
lahf
fistp
aas
out
xchg
inc
inc
fs
ja
(bad)
repz
imul
mov
out
dec
mov
loopne
sbb
sbb
out
cdq
movs
ret
cld
fucom
xlat
out
mov
arpl
inc
dec
in
hlt
(bad)
ret
sub
(bad)
js
sub
mov
cli
scas
jmp
test
add
jmp
mov
add
cli
or
mov
jmp
jmp
mov
push
je
and
hlt
xchg
and
push
jp
pop
inc
xor
aam
cmp
cmps
mov
fnstsw
inc
inc
inc
mov
mov
sbb
jp
imul
cmp
dec
pop
ror
call
add
ret
adc
dec
mov
push
pop
cmps
and
daa
out
inc
mov
pop
pop
push
push
(bad)
das
sub
cmp
pop
std
inc
inc
aaa
icebp
loopne
pop
(bad)
jg
or
scas
scas
sub
inc
mov
sbb
cdq
xor
or
les
adc
icebp
hlt
xor
cmc
popf
ret
shl
push
test
adc
pop
mov
fdiv
jge
or
jo
call
ret
jns
or
sahf
aas
mov
arpl
ffree
xor
in
sub
cdq
daa
dec
es
and
mov
scas
or
ins
ror
repz
mov
sbb
jbe
pop
das
mov
pop
cmp
imul
jno
hlt
push
pushf
mov
lahf
(bad)
xchg
jecxz
or
sub
push
test
out
cmp
das
into
pushf
cmp
loopne
aad
cmp
sub
pop
pushf
ds
daa
mov
or
clc
stc
popa
(bad)
or
aas
pop
inc
das
push
xchg
fsubr
pop
pop
jmp
mov
out
loope
aad
js
neg
jge
sub
cld
clc
in
mov
icebp
into
sbb
fdivr
xor
pop
cmp
(bad)
jmp
aaa
fwait
pusha
lods
dec
fwait
push
fdiv
retf
fld
test
out
xor
jae
adc
mov
sub
ds
sar
dec
or
xor
dec
dec
(bad)
pusha
mov
jae
(bad)
out
xchg
sbb
ret
cmp
enter
mov
mov
not
popa
or
xor
or
xchg
ror
test
out
dec
test
pop
retf
repz
lahf
popa
jl
adc
sbb
iret
jbe
(bad)
arpl
xor
enter
aas
(bad)
adc
sbb
mov
add
aas
jo
mov
loop
mov
shl
scas
imul
xor
add
pop
push
fsubr
in
push
push
shr
cmps
lahf
jle
ja
daa
mov
call
mov
pop
int
pop
mov
imul
lea
xchg
mov
int
push
ds
sbb
xor
pop
cld
jg
lea
out
push
xchg
icebp
dec
call
push
xchg
fmulp
mov
out
dec
rol
cli
int
shl
mov
push
or
mov
pop
xchg
inc
cs
sbb
lea
pop
cmp
clc
fcmovu
pop
rcr
lea
xlat
mov
aad
sbb
rol
mov
xchg
ret
(bad)
fldlg2
sbb
jne
lods
loope
mov
cmps
push
pop
push
xchg
cmc
aas
loope
mov
jns
iret
lahf
popf
sar
pop
ret
fnstcw
call
fimul
stos
arpl
xor
sub
enter
stos
iret
out
aas
mov
test
mov
dec
stos
js
xchg
daa
mov
cmp
jmp
ret
and
call
mov
sbb
out
repnz
jae
and
jns
jecxz
xlat
out
xor
jno
pushf
in
ds
addr16
jecxz
sub
mov
mov
into
ins
fisttp
out
cli
mov
sahf
jnp
rcl
cmp
mov
dec
shr
pushf
cmps
pop
mov
jns
sub
aas
int3
inc
and
cmp
in
shl
add
jbe
and
xchg
and
sahf
or
jae
and
fidiv
fadd
js
inc
push
out
ret
(bad)
jge
inc
pop
es
idiv
cmp
xchg
in
mov
popa
jmp
cdq
push
inc
mov
adc
add
jae
lods
hlt
hlt
mul
ins
test
bound
push
icebp
fadd
jns
into
int
mov
mov
ins
(bad)
and
xchg
mov
cmp
or
adc
inc
cmp
loope
pop
cmps
ss
pushf
push
(bad)
add
cmp
or
sti
jno
xchg
mov
int
outs
add
addr16
in
inc
addr16
ins
arpl
(bad)
add
cmp
shr
pop
es
cmps
psubq
fldenv
jle
fld
fdiv
ss
movs
fstp
(bad)
loop
cmc
retf
jl
xchg
in
ja
mov
data16
sahf
inc
pop
imul
ss
cmps
mov
mov
xlat
outs
lock
mov
(bad)
aad
inc
jo
mov
mov
pop
fcmove
ss
aas
into
mov
ror
stos
or
call
add
cmp
repnz
jns
popa
mov
add
call
aam
pop
xor
mov
test
ds
out
jno
sti
(bad)
and
(bad)
xor
push
push
in
pop
mov
jg
call
das
mov
ret
mov
dec
sub
cmc
xchg
imul
stos
dec
or
pop
rol
xlat
outs
popf
ret
or
data16
inc
aas
std
hlt
ret
pop
(bad)
in
pop
jle
sti
out
std
jmp
(bad)
xchg
scas
(bad)
repnz
pop
stc
lahf
pop
jg
fisubr
push
fistp
daa
(bad)
leave
push
jle
jecxz
jge
xchg
out
std
clc
jecxz
mov
jg
jnp
(bad)
lock
out
imul
fadd
aas
mov
xchg
(bad)
hlt
fistp
jg
int
jg
addr16
sti
leave
mov
repz
jl
pop
pop
cli
leave
fistp
xchg
pop
stc
clc
(bad)
cmc
out
jl
icebp
mov
icebp
fdivr
pop
lock
loopne
sbb
test
ret
ins
pop
mov
sbb
sub
jl
stc
hlt
aad
stc
(bad)
cmp
fnstcw
mov
ret
pop
stos
shl
lahf
ret
cmp
loopne
test
jge
retf
scas
loop
lahf
mov
mov
fidivr
push
call
iret
icebp
ja
lock
loop
outs
mov
jns
xlat
out
jge
add
repz
push
mov
mov
mov
jle
(bad)
out
mov
ds
(bad)
in
leave
cmp
mov
jp
mov
xor
xor
mov
adc
mov
icebp
test
dec
pop
jns
pop
popa
sbb
jmp
and
in
das
cmp
cmp
cli
loopne
mov
cmc
(bad)
push
out
jmp
fsubp
std
aas
mov
addr16
loope
xlat
scas
repnz
shl
sar
in
out
push
cmps
ja
call
sub
lea
sub
xor
mov
rol
or
jge
fiadd
mov
mov
jno
stc
dec
js
out
(bad)
aam
pushf
mov
cmp
out
sub
cmp
ja
in
in
mov
aas
jnp
push
jge
lea
loope
mov
add
xchg
(bad)
push
fnsave
iret
adc
pop
or
jbe
sbb
xor
out
loopne
pop
adc
sti
aam
addr16
mov
fxch
daa
lock
jne
out
cmp
jp
sbb
push
gs
or
out
imul
and
xor
xor
fisttp
push
ret
gs
or
add
or
jmp
inc
addr16
sbb
stos
push
rcl
push
xchg
(bad)
sahf
cmc
xchg
cwde
and
cmp
daa
xor
dec
pusha
mov
cs
add
getsec
add
js
stc
repnz
push
pop
push
cmp
inc
dec
ds
imul
ins
ret
mov
data16
sub
xor
mov
adc
or
fwait
aad
pop
jb
or
xchg
push
sub
xchg
ficomp
(bad)
in
loope
(bad)
cld
jg
test
xor
stc
mov
(bad)
jg
out
(bad)
aas
dec
mov
ret
scas
(bad)
jmp
pop
fistp
aaa
aas
clc
sar
mov
adc
(bad)
jmp
loope
mov
das
jg
push
pop
mov
lahf
loop
push
dec
icebp
mov
dec
stc
loope
clc
(bad)
ja
(bad)
aaa
mov
fimul
clc
sar
loop
ja
ret
xlat
ds
lahf
jle
push
mov
bnd
stc
stos
das
loopne
lahf
mov
(bad)
mov
fdivrp
nop
add
in
fist
lock
imul
lock
out
inc
jecxz
cmp
js
aas
(bad)
xchg
dec
lock
in
clc
cmp
pop
mov
in
add
jg
fidivr
or
fstp
mov
pop
sub
push
dec
inc
pop
adc
ret
cli
into
sub
fsub
jl
in
js
mov
js
test
dec
ficom
mov
cld
in
mov
hlt
xchg
(bad)
jg
sbb
lock
xlat
pop
mov
mov
mov
mov
fwait
sub
fwait
xor
push
xlat
mov
in
sar
jmp
push
jecxz
xchg
aas
mov
or
aas
jno
das
fistp
xor
cmp
mov
add
add
jg
cmp
mov
fidivr
cmp
inc
jb
sub
sub
jo
jg
jmp
xchg
addr16
(bad)
ss
les
mov
dec
sbb
and
mov
scas
add
stos
inc
push
arpl
enter
(bad)
jmp
loop
fistp
lahf
jle
pop
jl
rcl
arpl
scas
ds
xchg
mov
test
mov
mov
stc
fistp
div
ret
scas
fadd
jmp
fsub
into
loop
movs
cmp
jge
loopne
mov
pop
icebp
xchg
scas
mov
mov
mov
pop
mov
inc
rcr
lea
(bad)
jno
loopne
mov
pushf
cmp
sahf
popa
jnp
jmp
mov
scas
mov
je
popf
std
mov
and
xchg
push
xor
dec
xor
jecxz
and
sbb
or
adc
pop
adc
icebp
retf
adc
pop
push
mov
pop
mov
adc
loopne
das
and
xchg
out
stc
lock
jp
jb
mov
call
out
popf
stos
push
scas
inc
or
push
mov
out
pop
mov
je
daa
(bad)
div
popa
mov
push
lods
jbe
je
adc
sar
hlt
xchg
and
ins
sbb
stos
(bad)
jns
inc
adc
loope
mov
sub
retf
ds
pop
std
loopne
pop
sahf
cmp
pusha
fistp
stos
loopne
sub
test
dec
sbb
mov
addr16
push
pusha
out
dec
mov
out
ret
xchg
mov
inc
adc
mov
shl
mov
push
sbb
retf
jmp
pop
(bad)
into
pop
xchg
inc
mov
outs
jl
xor
scas
sub
retf
push
fld
in
sbb
sub
retf
push
push
pop
test
ss
aas
xchg
jg
loop
mov
repz
mov
sub
pop
imul
aaa
fdivr
lods
cmp
and
and
xor
out
fdivr
movs
fistp
loop
jmp
xor
out
sub
test
scas
addr16
aaa
(bad)
std
cli
inc
push
push
push
xchg
add
ffree
popf
xchg
cs
into
xor
jbe
arpl
sti
jmp
ins
stos
fwait
ins
cmp
mov
fs
mov
fld
fnstsw
mov
call
(bad)
fstcw
cwde
cdq
out
and
fmul
jbe
cmp
(bad)
xor
jae
fisub
retf
jg
loopne
add
sbb
dec
jo
ins
ins
xor
or
lds
or
inc
jmp
pop
mov
int
test
pop
mov
(bad)
and
cmp
lods
retf
(bad)
cmp
inc
and
sbb
(bad)
cmp
pop
gs
cli
xchg
scas
jl
aaa
scas
mov
std
adc
popf
mov
mov
mov
xchg
xchg
or
xor
hlt
int3
push
xchg
mov
push
lahf
imul
xlat
rcl
fild
in
sub
mov
cmps
xchg
cmc
out
les
mov
xchg
sar
mov
(bad)
mov
shl
mov
mov
and
inc
and
and
jmp
mov
sbb
xchg
pop
xchg
(bad)
hlt
mov
jecxz
leave
pop
enter
leave
sbb
aas
cmc
(bad)
movs
retf
lods
push
push
push
gs
mov
jns
add
lahf
les
xchg
push
mov
gs
in
sbb
mov
icebp
(bad)
jno
jmp
push
inc
add
push
repnz
enter
loop
clc
cli
mov
ror
lds
test
shl
dec
ds
cmp
dec
jl
stc
mov
dec
test
sbb
mov
dec
(bad)
out
mov
iret
int3
jbe
retf
(bad)
add
and
pop
repz
inc
ss
aaa
pusha
mov
cmc
fcomp
mov
test
and
cmp
scas
mov
push
(bad)
push
ins
fmul
jecxz
mov
sti
outs
daa
out
mov
pop
push
adc
test
dec
cmps
add
fidivr
add
shr
push
push
push
hlt
mov
mov
cmp
call
xchg
inc
jno
addr16
retf
mov
sbb
sub
arpl
inc
cmp
out
punpcklwd
scas
xor
cmp
aaa
ror
cmp
or
(bad)
rcl
mov
cwde
rcl
sbb
push
(bad)
fcomi
outs
mov
in
pop
sti
ffree
inc
or
ficom
hlt
je
mov
jmp
xchg
cmp
dec
movs
xchg
pop
xor
pop
inc
movs
pop
xchg
loope
and
cmp
xor
sbb
mov
test
dec
inc
pop
jne
sti
fs
pop
aaa
data16
inc
pop
xchg
xor
popf
pushf
ret
fwait
iret
in
shr
or
mov
pop
push
mov
shl
lock
ror
out
into
dec
hlt
or
arpl
iret
bound
sbb
dec
cwde
cdq
jmp
sbb
sbb
push
push
dec
cmp
mov
je
xor
mov
and
fimul
jg
sar
loope
push
hlt
(bad)
inc
pop
pop
xor
ret
loop
add
mov
push
pop
fwait
adc
inc
mov
rcl
push
xchg
sti
(bad)
jno
into
imul
mov
mov
sti
neg
and
mov
fidivr
mov
dec
call
jg
repz
dec
stc
or
test
les
retf
pushf
cld
mov
push
arpl
(bad)
std
pop
shl
retf
out
call
cld
into
pop
push
push
xchg
pop
push
push
jp
mov
ret
cs
xchg
ret
outs
test
rcr
sub
push
jp
jp
or
mov
mov
out
jnp
mov
(bad)
pop
inc
jnp
scas
pop
mov
stos
push
pop
shr
mov
leave
dec
in
mov
sub
into
fidivr
push
dec
jo
hlt
pop
cld
cld
scas
jle
adc
push
ins
mov
cmp
aad
xchg
arpl
aas
mov
mov
push
data16
xor
mov
jp
into
jbe
lods
xlat
pop
arpl
cmp
outs
cmc
div
jae
outs
loop
(bad)
jmp
ss
mov
sahf
lods
dec
jg
fild
scas
jecxz
imul
cmp
lahf
jnp
xor
mov
retf
loopne
in
mov
pop
mov
and
xor
xchg
adc
(bad)
into
ins
ret
push
scas
iret
jb
cmp
and
mov
ins
out
inc
div
mov
sub
lock
popf
mov
std
cmp
mov
jmp
js
fs
neg
mov
push
dec
mov
sahf
fimul
mov
jl
add
scas
pop
adc
ins
fist
imul
jne
imul
clc
push
(bad)
scas
pop
gs
pop
imul
pop
ret
jnp
cmp
cmp
cwde
mov
clc
stc
jnp
xor
sbb
mov
pop
outs
cmp
push
mov
sahf
(bad)
dec
outs
cmp
addr16
mov
xchg
in
lea
push
xor
fwait
jp
dec
jle
in
sub
ja
jbe
outs
ins
cmp
out
jg
jmp
fcmovnu
lods
and
inc
sub
push
sahf
movs
rcr
pop
jmp
mov
cld
jl
push
pop
add
dec
sub
xor
cmp
sbb
lods
mov
push
cmp
adc
jle
lods
pop
(bad)
jmp
(bad)
fidiv
dec
ds
jne
sub
out
stos
iret
test
jle
ins
jle
dec
out
ins
ins
fsub
aaa
lods
mov
stos
and
xchg
sub
sbb
mov
ja
js
mov
frstor
or
int3
test
in
sub
(bad)
sti
cdq
dec
mov
cli
rcl
fmul
call
mov
out
loope
sbb
xchg
popf
sahf
shl
adc
loop
sub
mov
(bad)
jle
ja
outs
rcr
mov
pop
cmp
and
call
jecxz
addr16
ss
adc
cmc
push
fidivr
popf
iret
xchg
fisubr
ror
jge
dec
push
cmp
mov
mov
xchg
mov
repz
push
mov
rcr
jne
aas
lods
out
pop
lds
mov
xchg
test
pop
addr16
leave
addr16
ss
cmp
sahf
addr16
lods
loope
mov
aas
fs
(bad)
addr16
sahf
sbb
mov
mov
jb
and
xor
push
mov
pop
pop
icebp
mov
mov
in
xchg
out
pop
sub
push
pop
jno
lock
stos
cmps
adc
and
in
dec
cmp
out
mov
or
adc
xchg
adc
and
dec
add
mov
push
stos
pop
aas
pop
mov
pop
inc
mov
fdivrp
dec
push
arpl
cmp
jecxz
xor
xchg
and
aas
xchg
test
sbb
fbstp
add
xor
mov
(bad)
movs
xor
scas
pop
(bad)
ss
imul
retf
mov
jmp
loope
xchg
popf
sbb
lods
arpl
push
repnz
xchg
sub
adc
(bad)
push
fld
mov
mov
push
xchg
dec
add
es
dec
cs
into
loopne
outs
mov
mov
lods
pop
dec
sbb
mov
test
je
and
jns
xchg
in
dec
dec
leave
jb
iret
xchg
cmp
jmp
cli
enter
inc
inc
xchg
or
(bad)
mov
jge
or
jmp
lds
ret
popa
xchg
les
dec
ror
test
lods
pop
pop
pop
inc
daa
cmp
mov
div
hlt
je
cmp
ds
xor
hlt
or
cmp
loop
jbe
cmp
dec
aam
sbb
sbb
jecxz
inc
jb
add
jg
add
jmp
cmc
outs
sub
add
(bad)
sub
xchg
add
out
pop
repz
mov
sub
sar
hlt
lea
js
ds
cs
xor
sbb
(bad)
xor
xor
push
ds
mov
jbe
pusha
adc
pop
(bad)
push
mov
jle
daa
lahf
cld
in
jmp
clc
ror
repnz
std
sti
addr16
cmps
pop
inc
mov
push
call
mov
call
or
jle
mov
fnstsw
pop
push
jmp
jmp
xlat
mov
mov
shl
or
mov
sub
jmp
out
fyl2x
ins
or
jbe
call
mov
fdivrp
(bad)
jae
push
jns
xor
mov
popf
aas
ja
popf
ficomp
mov
jmp
dec
xor
clc
jnp
sbb
adc
lea
ror
cmp
xor
in
aaa
pop
jg
out
cld
div
repnz
sbb
inc
outs
dec
and
ficomp
loope
popf
retf
ins
aas
sbb
sbb
mov
adc
push
push
jp
cmp
int3
sub
sub
outs
dec
mov
int
dec
mov
xchg
dec
add
in
mov
ror
neg
rcl
xor
mov
adc
aaa
loope
mov
lods
out
mov
cmc
xor
(bad)
lods
jnp
and
test
mov
out
fidivr
das
and
(bad)
(bad)
and
push
hlt
jns
aas
clc
cli
jmp
jle
and
sub
lock
xchg
pop
xor
add
nop
popa
cwde
les
scas
(bad)
outs
sbb
inc
nop
scas
imul
retf
mov
push
push
cmp
stos
(bad)
out
(bad)
cmps
arpl
imul
pop
(bad)
xor
jbe
div
jae
pop
fpatan
sti
push
jne
dec
or
inc
imul
aam
aaa
icebp
(bad)
fld
mov
lds
jge
gs
std
fwait
cmp
movs
inc
mov
outs
fcmove
fimul
xor
ficomp
(bad)
arpl
inc
dec
adc
lahf
mov
jb
mov
in
jg
aas
std
(bad)
pop
js
loopne
in
loopne
pop
mov
or
cmps
mov
shl
(bad)
lea
shr
gs
jle
mov
dec
jmp
mov
pop
push
push
cmps
mov
(bad)
outs
(bad)
std
das
xor
scas
jmp
or
mov
loopne
out
popa
xchg
sub
rcl
pop
mov
fistp
add
lock
push
dec
pop
jb
ja
aad
pop
int
jne
jno
mov
popf
popa
(bad)
iret
pushf
popf
(bad)
js
rcl
add
dec
mov
mov
popf
lds
fild
fs
or
xor
sbb
mov
pop
test
dec
add
cmc
sbb
pop
sbb
sub
mov
inc
jecxz
addr16
pop
shl
popf
jge
test
int
ret
int
sub
dec
iret
or
and
cmp
ja
xchg
xchg
sti
ret
cmp
fs
bnd
jge
sub
jmp
pop
mov
ins
rol
ja
cmp
cdq
pop
test
aas
std
(bad)
fstp
mov
xlat
sub
xchg
loop
(bad)
mov
test
(bad)
xchg
les
push
je
sahf
mov
jns
xchg
push
inc
(bad)
xlat
jb
fcmovb
aad
xchg
iret
rol
fcom
xor
dec
ss
mov
cwde
fcmovnu
mov
into
into
(bad)
jecxz
das
loope
outs
mov
push
cmp
iret
jmp
(bad)
imul
inc
les
sub
adc
fldenv
fldenv
ss
and
xchg
cs
lds
iret
pop
dec
mov
scas
bound
cmp
(bad)
fs
jae
loop
pop
addr16
mov
and
jl
dec
dec
xor
aad
mov
xchg
dec
mov
adc
fnsave
mov
cmp
popf
and
jbe
inc
or
rcl
add
mov
pop
push
int
sbb
mov
(bad)
fucom
aas
or
mov
cld
in
inc
add
loopne
pop
or
push
push
test
sub
movs
gs
mov
fidivr
iret
loope
(bad)
in
lahf
call
idiv
pop
nop
outs
cmp
enter
push
mov
mov
xchg
loope
not
or
jnp
mov
icebp
cmc
fistp
clc
mov
(bad)
(bad)
in
pop
dec
dec
ucomiss
sub
inc
or
adc
push
jne
jge
stc
xor
pop
jbe
test
retf
pop
cmc
psadbw
jg
push
mov
adc
and
jp
aad
test
rol
outs
aam
mov
dec
sbb
jl
sub
loope
shr
pop
(bad)
push
shr
pusha
push
test
xchg
xchg
into
stos
arpl
push
adc
jl
(bad)
(bad)
rcr
retf
rcr
ds
mov
std
fisttp
xor
jmp
cli
jnp
xchg
add
rcr
shr
dec
jmp
scas
gs
push
add
dec
push
rcl
xchg
adc
pop
out
pop
ins
mov
mul
cld
out
add
loop
adc
icebp
hlt
fisttp
jmp
rol
fldcw
ss
xchg
(bad)
sar
fidiv
push
add
ins
or
pop
sbb
jmp
arpl
adc
xchg
add
cmps
lahf
cmp
idiv
fsub
out
or
push
xchg
push
scas
pop
mov
jecxz
(bad)
or
out
retf
xchg
fadd
dec
fneni(8087
stos
inc
jae
xchg
ror
dec
add
or
push
push
sti
test
repnz
mov
outs
imul
and
xchg
xchg
add
test
xor
push
xor
inc
jp
xchg
pop
add
(bad)
ror
lods
mov
mov
push
inc
ins
lea
(bad)
fcomi
aam
repz
jmp
xor
push
(bad)
out
popf
rcr
sbb
jg
scas
(bad)
jmp
mov
jecxz
dec
xchg
(bad)
(bad)
sbb
jmp
cmp
lds
out
loope
idiv
push
lock
cld
jecxz
loope
inc
jg
lahf
(bad)
stc
lahf
jecxz
(bad)
mov
repnz
sub
stos
mov
das
xchg
mov
sbb
push
cdq
jl
sbb
xchg
jbe
in
jmp
dec
and
scas
push
and
push
ins
sub
xor
(bad)
dec
and
jmp
push
das
add
mov
cs
aas
arpl
daa
retf
mov
int
mov
inc
mov
inc
mov
jge
xlat
dec
dec
pop
mov
mov
fcmove
js
push
(bad)
push
sub
inc
adc
xor
xor
aad
(bad)
repnz
ins
hlt
pushf
aad
das
pop
cmp
sbb
mov
enter
inc
sub
aaa
scas
stc
add
pop
cmp
adc
cmp
adc
sub
fst
inc
sbb
pop
fsubr
adc
leave
and
je
loopne
cmp
repnz
mov
lods
xchg
jecxz
fnsave
in
repz
mov
xor
mov
popf
(bad)
addr16
cmp
push
(bad)
jb
or
fisttp
adc
lods
lods
lods
popf
in
mov
ret
lock
jmp
pop
jno
fist
lods
popf
pushf
xlat
mov
imul
lock
pushf
pop
lahf
mov
imul
or
(bad)
fcmovnbe
adc
and
dec
mov
dec
out
loope
mov
fs
gs
xchg
and
mov
add
in
out
add
and
gs
js
xchg
retf
and
push
dec
mov
xchg
sbb
xchg
adc
jno
pop
adc
addr16
test
pop
fcmovb
aad
pop
sub
arpl
ins
iret
and
mov
iret
sub
adc
fisttp
adc
test
cmps
push
fwait
es
in
cmp
aaa
cs
arpl
lods
jo
push
nop
xchg
pop
jp
mov
out
jg
jnp
out
mov
mov
repnz
scas
lds
adc
aas
xlat
xor
out
call
cld
into
pop
push
push
xchg
pop
push
push
jp
mov
ret
cs
xchg
ret
outs
test
ret
(bad)
jp
jp
mov
aam
lea
mov
inc
retf
gs
std
clc
fstp
aad
jg
xchg
xchg
dec
shl
xchg
jb
test
sub
sbb
sbb
xor
or
push
repnz
jl
jnp
(bad)
jmp
ror
pop
(bad)
int3
sub
mov
idiv
(bad)
(bad)
call
xor
std
fyl2xp1
dec
clc
test
repnz
xor
mov
pop
cmp
xor
pop
in
clc
pop
ja
aas
push
push
pop
ret
je
cmp
out
in
out
into
mov
daa
das
aas
adc
cmc
adc
jp
xor
jg
cmp
js
push
jmp
mov
pop
das
fiadd
iret
cdq
push
int
jmp
rcl
imul
imul
inc
and
mov
sbb
pop
pop
mov
in
(bad)
adc
sbb
jmp
aad
pop
mov
add
mov
dec
inc
sbb
pushf
in
push
cwde
(bad)
add
jae
sub
mov
cld
sahf
push
xchg
aam
dec
inc
jmp
out
ss
mov
xchg
out
ds
idiv
js
jmp
sbb
xor
cmp
cmp
xlat
ret
xor
repz
fstp
push
cmp
sub
out
call
pop
inc
and
mov
inc
or
and
pop
jge
gs
jg
mov
cli
xchg
or
push
sti
inc
sbb
ja
shl
arpl
aas
mov
repnz
lods
and
or
scas
dec
lock
repz
mov
sub
aas
nop
push
rcr
push
mov
add
das
sbb
scas
push
loopne
xchg
out
mov
fist
push
outs
outs
das
inc
(bad)
bound
rcr
aad
mov
adc
mov
retf
add
mov
push
pop
(bad)
mov
pop
es
fistp
and
inc
fwait
jno
retf
and
jb
jmp
mov
jne
cmps
ja
loop
push
xor
(bad)
adc
adc
sti
loope
daa
jo
ficom
mov
xlat
movq
inc
cld
int
cld
or
push
push
ud0
mov
in
(bad)
movs
leave
popf
scas
icebp
cmps
aad
dec
mov
mov
jg
pop
cwde
sahf
pop
js
repnz
dec
or
adc
dec
xchg
sub
mov
lahf
daa
lahf
mov
aad
adc
and
inc
ins
cmp
test
ins
jmp
mov
pop
dec
adc
test
fnstsw
loopne
and
loope
ja
dec
xchg
push
(bad)
xor
jne
mov
lock
pop
ret
(bad)
lahf
mov
push
mov
add
pushf
pop
sbb
add
jp
sub
sbb
xlat
cmp
test
cld
push
mov
sahf
cmc
xchg
ins
inc
js
std
(bad)
rol
xchg
cdq
cdq
mov
cld
and
sbb
xor
in
mov
aam
fisttp
cmp
dec
jo
shl
aam
xchg
in
jnp
sar
sbb
out
and
(bad)
or
mov
xchg
sub
cmp
sar
inc
loop
test
mov
shl
xchg
jne
dec
lea
js
sbb
cld
cld
fnstenv
outs
lock
rol
les
cmp
sbb
jno
pop
out
or
mov
cmp
(bad)
in
pop
daa
neg
addr16
ret
test
push
xchg
add
fnstsw
lods
dec
dec
dec
(bad)
arpl
into
bound
test
xlat
imul
dec
ins
inc
daa
addr16
add
cmp
mov
jl
cmc
in
mov
mov
loop
push
scas
jecxz
or
icebp
cs
adc
dec
pushf
ins
adc
push
shr
pop
push
(bad)
imul
(bad)
pop
outs
cmp
inc
aam
int3
(bad)
div
add
and
imul
inc
add
shl
jge
pop
dec
sahf
fcmove
jno
or
adc
out
mov
sar
not
lahf
(bad)
jmp
cmp
sub
inc
sar
mov
add
ins
icebp
jmp
lahf
std
adc
add
lea
sbb
add
in
aad
mov
mov
inc
cld
cmc
das
jg
retf
fxch
mov
pop
xchg
bound
xchg
mov
adc
pusha
pop
dec
and
je
loop
ret
xchg
out
push
gs
jnp
fs
pop
out
enter
into
(bad)
push
enter
ss
sub
sbb
jecxz
inc
loopne
shl
cld
pushf
mov
add
jle
aad
sahf
mov
out
lds
dec
ins
scas
jecxz
fmul
and
mov
xor
xor
xor
js
(bad)
(bad)
push
jl
lea
(bad)
fist
dec
fistp
popf
movsx
push
fs
icebp
sbb
lahf
retf
cwde
or
jle
pop
xor
div
xchg
(bad)
xchg
(bad)
ror
cdq
(bad)
xchg
loopne
lock
stos
xchg
ins
fst
and
imul
inc
outs
jge
mov
std
ffree
jo
pop
jp
xor
int3
add
(bad)
adc
popa
adc
mov
push
push
mov
fsubr
cld
pop
pop
aas
ficomp
and
or
(bad)
adc
dec
xchg
loopne
addr16
retf
add
adc
push
retf
sbb
cmc
and
xor
das
jmp
xor
ins
pop
jp
push
xchg
ret
xor
sar
stc
jae
int3
rcr
ja
fwait
aaa
rol
popf
shl
aad
mov
mov
mov
mov
cmps
xor
add
(bad)
ins
adc
lock
sti
mov
mov
sbb
in
es
cmp
add
into
ins
xor
jb
fist
mov
adc
jge
(bad)
mov
push
arpl
inc
dec
inc
adc
arpl
push
adc
shl
add
loopne
cmp
stos
dec
(bad)
mov
inc
add
mov
jb
out
dec
int
loop
stc
and
mov
pop
lods
mov
add
dec
push
dec
inc
dec
repz
cdq
mov
js
movs
cmps
icebp
mov
out
loopne
inc
in
in
out
jno
(bad)
cld
inc
sbb
fiadd
cli
sbb
lock
mov
xor
push
cmp
fsubr
repnz
(bad)
aas
(bad)
(bad)
in
(bad)
lahf
(bad)
jmp
or
mov
jp
jne
cmps
es
jnp
inc
cld
repnz
ss
xlat
cmp
xchg
or
cmc
pop
add
fcomp
jge
push
add
push
nop
in
adc
adc
fdiv
push
lock
jecxz
enter
js
and
cmp
out
mov
and
jo
and
xlat
ins
pop
fild
jecxz
aaa
pop
inc
js
mov
cmp
jnp
fadd
mov
loopne
push
stos
f2xm1
pop
pop
mov
das
fadd
jo
pop
sub
mov
popf
outs
jge
cmp
dec
pop
pop
xor
inc
mov
jp
popf
popf
lea
inc
neg
cdq
in
pop
dec
or
mov
xor
retf
js
ret
js
xchg
sbb
dec
push
in
mov
dec
mov
loop
std
xchg
vphaddudq
xor
addr16
mov
sahf
shl
mov
fld
add
out
sub
jo
dec
dec
ins
or
inc
ret
frstor
xor
and
mov
mov
aad
lahf
xchg
sub
mov
mov
and
(bad)
retf
js
aam
add
pop
jge
and
(bad)
mov
mov
sbb
inc
movs
aaa
sbb
pop
pop
or
das
adc
das
das
mov
adc
inc
inc
jo
mov
arpl
mov
(bad)
sub
cmp
add
mov
mov
ficom
test
pop
rcr
xlat
rcl
mov
sbb
retf
dec
xchg
or
xchg
mov
cwde
cmp
aam
outs
push
sbb
mov
xor
mov
std
rcl
xchg
adc
and
add
push
xchg
inc
cwde
hlt
scas
xchg
jmp
add
lock
mov
sub
rcr
fisub
mov
push
pushf
out
adc
movs
dec
outs
in
mov
cld
pop
(bad)
in
xor
dec
cmps
adc
das
int3
cdq
sub
cmp
inc
scas
add
cvtpi2ps
cmp
call
hlt
in
lock
iret
loope
xchg
outs
jo
stc
sbb
and
lods
into
lods
sbb
add
mov
and
mov
mov
cmp
pop
sbb
rcl
pop
gs
xlat
outs
loope
leave
popf
mov
ins
sbb
mov
mov
mov
pop
lock
adc
add
sbb
mov
fldcw
outs
sbb
ja
lock
ins
outs
fs
rol
fsubr
outs
inc
xchg
fidiv
inc
xor
xor
or
inc
dec
js
lea
ins
daa
sbb
inc
out
lock
outs
add
push
ret
xchg
add
int
into
add
js
dec
lods
mov
and
pop
jl
jmp
fistp
aas
lahf
mov
inc
mov
jb
pop
mov
fisubr
pop
dec
jmp
std
imul
and
add
mov
js
or
push
loop
cwde
call
add
dec
test
pop
iret
and
test
ins
ret
imul
sub
mov
std
cmp
js
push
jp
jnp
fcmovu
test
fistp
jecxz
or
push
pop
pushf
mov
push
adc
in
add
(bad)
test
cld
imul
movs
inc
jecxz
int
sbb
aam
mov
out
push
add
stos
mov
fnsave
push
sbb
out
call
xchg
jle
mov
ret
pop
test
adc
xor
sub
test
push
int3
mov
cmp
imul
add
push
dec
inc
inc
push
adc
aad
jecxz
mov
sbb
enter
out
adc
std
fldenv
mov
outs
ret
cmps
jno
jmp
jb
dec
adc
push
mov
outs
push
repnz
cmp
or
jp
pop
jnp
pop
pop
cmp
or
xchg
lock
mov
les
mov
mov
inc
clc
pop
shl
sahf
ret
pop
out
push
stc
jmp
xchg
jae
loope
mov
ret
jle
sbb
or
xchg
aas
stc
adc
pop
mov
sub
retf
lock
jg
add
inc
inc
mov
pop
stc
adc
push
mov
out
push
fnstsw
add
ins
cmp
jle
sbb
inc
jl
mov
push
push
icebp
loope
xor
add
call
push
add
xchg
cmp
cmp
js
cmp
(bad)
jecxz
aad
xchg
lock
mov
dec
jae
mov
adc
repz
mov
and
sub
xchg
add
lahf
loop
cmp
rcl
mov
cmp
stc
stc
stc
xchg
mov
mov
sbb
mov
jbe
push
sub
dec
add
daa
shl
xchg
push
inc
inc
repnz
and
lods
adc
add
das
xchg
cwde
movs
mov
cdq
cdq
imul
fld
sub
es
sbb
jnp
pop
ret
or
cmp
je
and
sub
sub
out
and
sar
pop
cmps
add
add
jns
cmps
push
pop
int
xchg
adc
adc
and
add
jg
fdivr
adc
jmp
pop
cmp
push
adc
sbb
repz
sub
icebp
jno
mov
in
es
mov
jbe
sahf
rcr
cmp
ins
sbb
cmp
add
fnstsw
cmps
xchg
mov
jecxz
inc
mov
pusha
scas
iret
xor
and
pusha
mov
pop
pop
dec
dec
jnp
fwait
imul
not
dec
iret
into
ret
retf
adc
dec
jl
(bad)
sbb
mov
hlt
enter
pop
js
arpl
leave
mov
rcl
xor
add
pop
pop
inc
clc
cmc
popa
lahf
std
adc
or
add
imul
jmp
xor
mov
mov
sub
mov
jmp
push
push
rcr
pop
mov
lahf
leave
sub
scas
das
pop
mov
xchg
scas
pop
(bad)
cmc
xor
call
mov
jno
mov
push
push
inc
push
pusha
fwait
adc
in
pop
aam
stc
pop
adc
adc
jnp
fistp
loopne
dec
add
lds
mov
cmp
xor
(bad)
fimul
xchg
and
popa
mov
or
dec
shl
stos
enter
es
inc
mov
jns
mov
mov
pop
add
push
push
and
imul
in
in
inc
es
add
inc
and
sbb
mov
call
into
push
mov
stos
ud1
les
sbb
jbe
pop
aas
xchg
mov
mov
pop
outs
das
mov
dec
adc
xchg
cwde
push
fistp
fwait
jecxz
cmp
push
inc
xchg
xchg
push
fsub
ror
cmps
xchg
lea
xor
jb
xchg
cli
adc
pusha
push
mov
inc
sub
xor
shl
dec
push
cld
test
(bad)
or
cdq
cld
sub
js
out
adc
cmp
or
pop
cmp
fidivr
arpl
inc
xchg
stc
mov
retf
jo
dec
pusha
adc
inc
add
movs
movs
sub
jge
xor
scas
out
(bad)
shr
adc
jmp
or
or
and
jnp
dec
loope
cdq
int
inc
mov
mov
inc
scas
(bad)
jo
mov
xchg
pushf
mov
add
dec
mov
jmp
ja
xchg
pop
sbb
dec
iret
inc
in
add
nop
add
stc
pop
add
dec
and
outs
mov
rep
or
loop
adc
stc
in
cmp
adc
and
rcl
out
imul
xchg
xor
lock
mov
mov
mov
xor
xlat
xchg
les
leave
in
mov
xchg
mov
pop
cld
adc
nop
pop
and
push
adc
nop
pop
inc
sub
int3
push
in
push
ret
dec
fiadd
sub
mov
adc
test
ret
ret
inc
jp
pusha
or
shr
aas
mov
inc
sub
mov
(bad)
es
mov
ret
dec
mov
enter
dec
jle
and
jg
sti
je
add
in
jmp
(bad)
push
(bad)
dec
(bad)
push
ret
icebp
xchg
mov
outs
sbb
gs
iret
sbb
xor
getsec
imul
cmp
dec
(bad)
bound
or
es
xchg
mov
int3
dec
lds
xchg
adc
jae
push
cmp
push
mov
arpl
int
ud1
mov
and
nop
or
div
aas
and
pop
popa
and
data16
lahf
ins
loop
icebp
mov
push
jns
loop
cmovg
in
mov
adc
rcr
scas
arpl
repnz
dec
pusha
data16
cdq
call
ins
(bad)
ss
shl
bound
adc
cld
jno
dec
mov
dec
and
jno
sar
sub
mov
das
daa
push
mov
pop
adc
(bad)
mov
dec
dec
in
daa
mov
add
xor
xchg
add
dec
cmp
mov
cmps
fidiv
jle
jmp
add
fsubr
inc
cmp
dec
in
int3
fisttp
out
int3
jnp
imul
outs
lds
sub
jo
loopne
(bad)
fldcw
mov
cmps
movs
pop
or
cld
xor
pop
or
add
cmp
mov
mov
cmp
pop
imul
(bad)
(bad)
mov
(bad)
rcl
fucom
iret
pop
test
jnp
lock
das
inc
retf
add
ret
dec
cs
and
aaa
xchg
jmp
add
ja
or
xor
dec
add
push
inc
daa
add
xchg
stos
out
out
mov
neg
jle
retf
idiv
jl
test
jne
adc
add
mov
cdq
dec
imul
les
fdiv
test
pop
cmp
arpl
je
adc
mov
jg
fnstsw
sub
mov
ins
mov
or
sar
pop
fidiv
mov
mov
jle
and
pop
dec
pop
in
push
cmps
pop
xor
add
js
sbb
cmp
lea
add
retf
cmp
mov
test
int3
out
cmp
je
aas
das
ja
xchg
xchg
js
jle
test
or
push
in
jo
(bad)
sub
pop
sbb
loop
pop
leave
and
add
out
jae
rcl
dec
inc
pop
cwde
xchg
push
xchg
in
sub
mov
fidivr
mov
jg
sub
xchg
hlt
lods
movs
push
loope
std
push
and
xor
push
out
mov
inc
mov
sbb
(bad)
jnp
and
daa
jb
push
and
push
pop
dec
sti
push
sub
jmp
fdivr
jmp
das
jmp
cli
mov
ficom
(bad)
xor
pushf
jb
sub
retf
lods
lods
sub
gs
nop
clc
inc
xor
add
sar
add
add
sub
inc
add
cmp
aas
outs
or
adc
out
out
jmp
add
cmc
cmp
outs
jmp
pop
pop
retf
lods
jmp
cmp
jmp
inc
cli
imul
cmp
add
stos
call
pop
mov
sbb
out
out
jae
hlt
inc
loope
or
nop
add
jnp
icebp
add
push
add
int3
mov
jbe
fidiv
mov
rcr
popf
push
add
adc
push
adc
adc
cli
loope
test
sub
movs
cmp
inc
fld
add
push
fwait
ret
mov
sbb
pop
mov
fs
and
idiv
ror
inc
stos
fld
lods
in
pushf
mov
cmp
add
add
jg
shr
repz
das
aas
nop
sbb
lahf
add
mov
enter
repnz
jle
adc
das
jg
jae
ja
mov
mov
leave
mov
jo
fisubr
das
mov
pop
leave
jg
outs
call
out
cld
pop
(bad)
jno
add
pusha
add
add
stc
pop
mov
inc
aas
(bad)
pop
sbb
repz
inc
ror
sbb
and
xor
adc
fdiv
cmp
jae
cmp
ret
and
add
jnp
les
sti
test
add
inc
sti
test
ficom
loopne
add
mov
sbb
ss
or
stc
ror
std
sti
add
sti
fistp
aas
lods
or
sbb
int
mov
or
clc
out
add
cmc
xchg
inc
pop
test
or
es
outs
pop
and
push
add
fbld
outs
mov
cmps
adc
dec
jb
stos
pop
add
rcl
add
add
cmp
and
pop
cli
and
adc
ins
test
add
fadd
das
outs
mov
pop
cmc
add
pop
iret
sbb
inc
jnp
add
out
fsub
sub
mov
fcmove
and
xlat
fiadd
psubsw
cs
(bad)
loopne
hlt
sub
fs
jmp
or
aas
add
dec
xchg
push
mov
mov
sar
dec
out
push
mov
stc
in
adc
pop
hlt
aas
pop
sub
ror
ret
inc
sar
(bad)
lods
jb
ror
lock
int3
std
xor
push
and
fimul
lods
jg
in
fidivr
fidivr
out
les
loop
and
sub
dec
or
repnz
dec
aas
jge
pop
jnp
movs
mov
(bad)
ficomp
retf
pop
mov
push
loope
and
call
ja
inc
cli
adc
pop
or
mov
lock
mov
mov
stc
jae
xor
jo
xor
call
pop
push
gs
mov
dec
mov
fmul
pop
jmp
loope
mov
dec
jmp
sub
sbb
or
sub
add
mov
add
pushf
(bad)
dec
rcr
rol
fcomp
xchg
cdq
fst
jle
jnp
dec
(bad)
jg
jecxz
dec
dec
dec
push
(bad)
scas
add
push
inc
jo
fxch
or
or
int
add
in
xchg
xor
outs
inc
daa
mov
push
ds
lock
cmp
fwait
cmp
sahf
shl
cmp
gs
add
es
add
mov
add
stc
icebp
stc
repz
bswap
fst
fcom
cmp
dec
rcr
push
mov
and
je
rcr
(bad)
ja
mov
jb
add
push
cmp
cmp
pop
pop
icebp
les
and
jecxz
dec
mov
pop
mov
loopne
xchg
add
mov
ins
xchg
mov
out
scas
jmp
sbb
xor
ins
push
jge
ins
sbb
sbb
sahf
push
in
adc
out
fnsave
repz
repz
jecxz
aas
jo
push
pushf
retf
or
inc
xchg
ins
and
sbb
in
les
mov
js
pushf
js
sar
add
rcr
add
rol
pop
scas
xchg
mov
mov
aad
fnstenv
fld
das
mov
call
add
ficomp
mov
add
test
js
jmp
mov
fisub
mov
add
in
(bad)
mov
add
add
mov
cmp
pop
inc
inc
pop
in
mov
jl
std
push
outs
add
fadd
dec
ins
add
xor
pop
mov
add
cmp
mov
cmps
or
push
or
cld
pushf
or
aas
fcomp
loopne
and
aaa
hlt
or
and
test
dec
inc
data16
xor
xchg
sub
dec
(bad)
jl
in
pop
inc
inc
enter
in
xchg
add
outs
jmp
and
repnz
test
retf
add
jge
mov
inc
(bad)
in
addr16
xchg
(bad)
cld
lahf
push
(bad)
cld
jae
add
pop
sbb
inc
sbb
in
(bad)
in
pop
rcl
push
movs
rcl
dec
add
xchg
xor
cli
sub
repnz
lea
sub
xchg
js
dec
push
test
stc
loopne
fist
out
test
adc
add
push
(bad)
push
or
daa
adc
jp
mov
cmp
push
xlat
push
enter
xchg
aam
sbb
out
push
add
loopne
ret
cmp
add
and
jl
ss
(bad)
sbb
cmps
cli
add
pop
mov
popa
cmp
dec
ds
retf
aad
das
and
xor
inc
into
pushf
cmp
aas
clc
(bad)
movs
mov
pop
pop
aaa
sub
and
mov
int
or
je
(bad)
fwait
adc
jecxz
je
movs
and
bound
push
lahf
sbb
mov
fldenv
das
leave
fimul
jo
xchg
adc
mov
(bad)
in
adc
xchg
xchg
adc
aaa
cmp
inc
inc
push
retf
push
retf
cmc
loope
mov
lock
repz
and
sub
mov
add
mov
xchg
repz
popf
sub
fidivr
mov
add
mov
xchg
mov
fdiv
ja
popf
add
mov
mov
sub
ins
sti
jecxz
addr16
xlat
call
mov
mov
ja
loopne
iret
push
xchg
test
push
js
(bad)
scas
xchg
(bad)
add
stos
(bad)
jo
xchg
dec
mov
mov
dec
mov
retf
hlt
mov
ja
addr16
(bad)
ja
rcr
push
mov
cmp
gs
in
retf
shl
(bad)
in
imul
les
push
mov
or
scas
mov
std
push
add
fstp
jb
(bad)
arpl
add
cdq
sbb
daa
and
cmps
(bad)
fcomi
jmp
fsubr
jecxz
shr
jb
into
mov
in
test
jae
dec
dec
je
loope
jl
cmps
cmps
pop
mov
leave
mov
and
repnz
and
dec
outs
sbb
pop
mov
or
rol
jg
or
fnsave
sub
scas
scas
inc
loopne
jg
mov
daa
(bad)
adc
repnz
push
jp
mov
pop
out
ja
scas
pop
push
add
sbb
and
jb
and
retf
dec
outs
ficom
cmps
out
cmp
shr
dec
xchg
jle
popf
mov
enter
inc
sub
clc
js
xlat
sbb
cmp
add
cmp
loope
cmc
adc
out
sbb
(bad)
cmp
sbb
sbb
fcom
outs
fdivr
add
push
pop
call
push
adc
pop
es
test
in
sub
mov
xchg
add
or
ja
xor
cs
movs
cmps
xor
cli
cmp
mov
sbb
add
or
iret
push
dec
xor
imul
sub
and
adc
inc
pop
pop
nop
scas
jg
sbb
test
add
adc
pop
cmps
in
popf
xor
ins
mov
mov
adc
test
stos
leave
lahf
out
imul
jnp
enter
out
jg
inc
xor
dec
(bad)
adc
dec
sar
push
jmp
test
test
xor
add
push
push
pop
mov
pop
xchg
(bad)
aas
jle
outs
fistp
dec
popf
lods
push
cli
push
je
mov
lahf
ds
xchg
movs
and
in
mov
sbb
int3
cdq
rcr
sbb
(bad)
add
fist
into
stc
std
test
(bad)
(bad)
mov
or
les
mov
mov
add
jmp
or
or
adc
int
imul
fsub
push
ja
add
mov
adc
mov
into
stos
ficomp
addr16
shl
push
and
test
inc
add
xchg
rol
sar
call
cmp
sub
mov
popa
cmp
(bad)
aas
jge
call
(bad)
aaa
inc
test
dec
adc
data16
fs
xor
push
sti
cmc
hlt
fldcw
add
xor
add
add
cmp
shl
ins
jge
and
and
repz
push
sub
or
jne
sbb
icebp
cld
bound
sbb
scas
fdiv
jge
push
sbb
add
push
add
push
push
cmp
sbb
aam
sbb
dec
loopne
mul
cmp
jnp
jl
dec
push
jmp
jmp
pop
jo
aas
sbb
push
cwde
inc
mov
inc
aad
pusha
pop
repnz
inc
jle
add
push
sti
dec
mov
iret
sbb
mov
neg
movs
and
fcomp
add
shl
loopne
add
pop
scas
into
pushf
out
xor
das
sbb
dec
add
icebp
jmp
test
fmul
push
scas
and
add
cmp
dec
clc
jmp
out
inc
mov
out
(bad)
lods
mov
imul
and
add
lahf
sub
leave
dec
imul
sahf
mov
nop
lahf
jb
sbb
or
pop
cmps
dec
scas
fstp
ret
pusha
(bad)
sbb
or
adc
hlt
mov
dec
out
xchg
push
xchg
push
cmp
out
cmp
dec
mov
test
sbb
jb
int
xchg
sub
(bad)
sub
jl
(bad)
and
xchg
xchg
dec
cmovge
sbb
js
add
sbb
xchg
(bad)
retf
jmp
ficom
dec
lods
fist
jecxz
dec
push
test
data16
xor
outs
push
xchg
shl
cmp
das
pop
mov
in
scas
fist
jg
dec
test
jno
push
cmp
fidiv
dec
cmp
ins
test
mov
mov
jne
mov
add
movs
mov
push
dec
mov
mov
sub
xor
clc
jo
xchg
push
xor
rcl
xlat
add
repnz
mov
mov
jne
stos
xlat
scas
enter
xchg
xor
push
adc
js
(bad)
test
jns
inc
ret
ja
push
mov
ins
lds
jl
inc
mov
cmp
mov
fisub
es
or
ins
inc
stc
add
rol
xor
jmp
sti
cmp
lahf
fucomp
rcl
je
nop
aaa
dec
in
ds
sar
loopne
inc
in
test
add
mov
xchg
cmp
jnp
ds
ins
inc
cmp
mov
(bad)
or
mov
pop
wrmsr
inc
mov
int
pop
mov
mov
test
rcl
pop
mov
cmp
sahf
cs
jno
cdq
add
call
add
sbb
loop
jl
mov
pop
lods
out
pop
pop
mov
inc
aas
fldcw
add
xor
fbld
add
fmul
call
dec
xchg
(bad)
add
mov
add
and
dec
inc
adc
icebp
cmp
xor
mov
mov
sahf
jecxz
jl
fidivr
cmp
push
cld
inc
retf
inc
push
push
test
dec
dec
push
pop
jae
lea
std
aaa
gs
dec
jecxz
jo
add
shl
jmp
jae
and
mov
push
call
addr16
loope
stos
jmp
lds
push
sub
add
push
clc
jecxz
call
xchg
dec
cmp
div
mov
mov
or
sahf
push
jo
sbb
sbb
lods
rcl
mov
cli
or
mov
jae
les
add
ins
fadd
adc
repnz
mov
nop
dec
hlt
and
mov
sub
cs
mov
lods
xchg
and
(bad)
lea
leave
sti
pop
fiadd
pushaw
sbb
(bad)
sub
push
dec
inc
js
cmps
pop
add
adc
jmp
sub
mov
sub
add
bound
movs
ret
lahf
jl
or
cli
add
adc
sub
popf
cmp
out
xchg
pop
lahf
inc
fld
jae
jno
or
cmp
jmp
(bad)
xor
fptan
lds
clc
cwde
jl
lds
xor
fsubr
lods
mov
repnz
inc
mov
in
leave
add
jl
js
lock
cmp
cmp
xor
aas
sar
sub
cmp
mov
xchg
not
sbb
loopne
lea
add
mov
outs
aaa
cli
xor
xor
out
push
push
cmp
ficomp
gs
push
and
mov
aam
mov
gs
into
cmc
sti
add
adc
jo
jg
(bad)
movs
(bad)
mov
sub
(bad)
in
das
pop
xchg
pop
das
sbb
enter
xchg
enter
in
faddp
gs
sar
stc
xor
inc
in
pushf
mov
dec
adc
gs
sbb
inc
lock
outs
fdiv
int
cs
sbb
(bad)
ss
mov
and
retf
call
(bad)
sub
xor
xor
sub
outs
into
dec
pop
inc
movs
jo
ret
sub
leave
imul
add
in
(bad)
movs
das
popf
int3
popf
add
fs
retf
call
add
dec
pop
xor
popa
add
xchg
outs
jo
add
loope
cmp
div
jns
mov
cli
mov
jnp
inc
or
add
mov
push
sub
jo
cdq
push
cmp
ja
jle
mov
outs
mov
mov
mov
pop
dec
add
imul
out
test
push
rcr
mov
lea
scas
inc
popa
call
jmp
fsubp
call
add
ss
push
xor
popf
jp
cmp
mov
ja
mov
mov
cmp
jecxz
cmp
test
sti
pushf
addr16
sbb
mov
adc
cmps
pop
xchg
cs
and
(bad)
jb
les
cmp
lods
fs
sbb
sahf
(bad)
hlt
loop
repz
cmc
movs
ja
test
ins
ins
test
ret
mov
mov
out
sbb
fistp
ror
or
pop
out
inc
aas
add
gs
je
cli
ja
jae
jge
mov
inc
ss
fild
inc
add
xchg
retf
mov
imul
and
mov
call
cmp
mov
xor
add
lods
imul
in
rcr
add
out
sbb
pusha
js
ins
lds
mov
loope
mov
lds
pop
test
and
clc
icebp
(bad)
popf
add
xchg
or
outs
fistp
shr
sub
stos
xlat
(bad)
dec
pop
pop
es
jmp
and
or
and
xchg
push
adc
xor
and
adc
inc
pop
ss
adc
adc
mov
pop
mov
add
(bad)
std
aaa
or
repnz
or
xchg
jge
icebp
jmp
rol
stc
adc
cdq
xchg
push
(bad)
pop
outs
jmp
imul
fnstsw
ins
(bad)
cmp
add
push
mov
aaa
jg
adc
or
cld
jmp
(bad)
adc
repz
loope
int
add
(bad)
add
cmc
xchg
outs
jmp
icebp
xor
int
aad
or
loopne
mov
test
xor
in
pop
in
jle
push
fld
add
cmps
leave
or
mov
(bad)
inc
sbb
mov
movs
dec
add
adc
shl
scas
mov
enter
cli
fcmovnbe
or
retf
movs
test
mov
add
jle
mov
clc
cmps
add
std
inc
jl
xchg
daa
xor
adc
fdivr
imul
mov
and
dec
cmps
add
jne
and
and
xchg
imul
add
scas
imul
cmp
add
inc
add
repnz
mov
pop
inc
pop
das
enter
push
push
pop
sub
stc
loop
cmp
dec
push
das
add
or
jp
(bad)
out
out
mov
push
adc
cmp
dec
cs
and
ficom
scas
pop
cmps
jns
cli
shl
mov
add
or
push
inc
and
and
inc
add
(bad)
loop
outs
pop
xchg
into
out
pop
jl
and
cmp
(bad)
mov
addr16
pop
add
add
push
mov
jecxz
ror
movs
mov
and
fwait
dec
movs
test
pop
cmp
add
push
add
cmp
cli
aaa
ret
cli
shl
stc
pop
mov
or
mov
sbb
mov
outs
popf
dec
jl
or
push
dec
pushf
fs
and
mov
fld
imul
jns
jne
xchg
rol
xor
dec
push
xchg
xchg
push
test
retf
add
jnp
int
inc
mov
int3
mov
pushf
xchg
mov
add
clc
lds
jmp
retf
aad
sbb
mov
movs
push
(bad)
fiadd
scas
test
nop
add
dec
add
dec
ins
xor
shl
pop
sbb
pop
sbb
sub
call
(bad)
xchg
gs
and
inc
rol
shr
dec
pop
stos
frstor
adc
xchg
retf
sbb
popf
(bad)
xor
gs
bound
repnz
outs
inc
daa
cmps
and
or
add
retf
xchg
sbb
or
xchg
hlt
pushf
cmps
scas
movs
inc
push
nop
fild
loopne
in
cmp
and
loope
mov
sar
cmp
(bad)
lahf
cld
out
popf
aas
sti
retf
aas
mov
leave
iret
jg
daa
mov
outs
inc
fild
push
inc
pushf
xchg
shl
jl
sbb
xor
add
in
vandps
jge
sbb
in
leave
xor
ins
pop
lea
xor
sahf
xchg
out
sar
(bad)
aas
mov
xchg
or
push
inc
and
aam
push
nop
in
or
mov
adc
pop
sbb
cmc
add
jno
dec
jecxz
and
rcr
inc
pop
jnp
push
fiadd
adc
lahf
out
xchg
in
(bad)
mov
xchg
sar
mov
sbb
add
xchg
and
aad
ror
aam
cmps
nop
call
aaa
enter
pop
mov
add
jb
add
mov
jb
into
sub
in
rcl
ret
repnz
jnp
sar
fwait
in
adc
adc
sbb
jge
adc
shl
or
cmps
sub
inc
rcl
fiadd
xchg
xchg
xchg
or
mov
rcl
push
add
(bad)
loope
mov
cmps
xor
jne
aad
pop
adc
lods
xchg
mov
pop
push
jle
imul
dec
cmps
sub
push
aas
add
add
add
fstp
adc
add
shl
or
cmp
(bad)
cmp
add
add
xchg
push
add
(bad)
mov
cmp
jo
retf
add
adc
adc
addr16
cmp
loopne
int3
push
sbb
daa
dec
dec
pop
mov
pop
jl
(bad)
mov
or
jae
aam
ss
mov
pop
xor
jl
aam
aaa
fimul
imul
leave
lock
ds
cmp
mov
push
or
mov
imul
fdivp
(bad)
jecxz
mov
and
xor
push
stos
inc
out
prefetchwt1
icebp
ret
cmp
pop
mov
pushf
and
add
jp
jns
ja
mov
mov
shl
cld
shl
inc
adc
clc
clc
aam
fdivr
cmp
pop
add
bound
and
mov
rol
add
sti
test
jge
sub
arpl
mov
repnz
cmc
into
xor
xor
fmul
(bad)
jbe
push
int3
imul
bnd
sti
sub
out
ins
call
arpl
add
xor
pop
sbb
js
mov
daa
jmp
xchg
pop
mov
pop
mov
loopne
add
push
out
dec
pop
lock
fnstsw
sub
dec
out
cli
mov
or
pop
dec
inc
addr16
(bad)
push
push
addr16
shr
(bad)
sbb
add
movs
iret
adc
pop
mov
jge
lods
scas
nop
hlt
mov
cdq
cmp
fst
dec
in
jle
adc
mov
test
xchg
repnz
stc
jnp
sbb
inc
mov
inc
dec
ret
cmps
in
out
mov
out
in
add
and
xchg
cmp
jo
xchg
loope
pushf
repnz
(bad)
out
adc
inc
fisubr
add
xchg
(bad)
in
popf
mov
fnstsw
dec
mov
jno
jo
jae
fld
add
mov
dec
daa
sbb
sbb
in
test
leave
stc
fidivr
push
dec
push
pop
lock
push
std
stos
retf
xchg
xchg
and
retf
(bad)
jg
das
jmp
push
into
fistp
xchg
std
xor
jb
enter
in
mov
repz
fist
and
push
xor
sbb
pop
push
cld
xchg
(bad)
ins
inc
pop
cmps
jo
loop
jmp
mov
pushf
mov
(bad)
shr
or
or
loopne
jecxz
add
push
or
mov
sub
outs
sbb
and
sbb
jl
and
fimul
push
push
mov
sti
push
cmc
sub
jo
adc
ret
mov
mov
jbe
push
xor
mov
dec
dec
fsubr
or
rcr
jne
inc
inc
sar
loope
mov
jnp
mov
jecxz
cld
hlt
(bad)
jg
(bad)
fwait
out
cmp
add
fs
out
or
leave
inc
jo
or
and
ja
aam
stc
mov
pop
das
retf
mov
add
push
mov
inc
pcmpgtd
jns
xchg
gs
add
pop
push
mov
int3
jp
repnz
add
fistp
fdivrp
loopne
jns
add
jmp
mov
movs
sub
and
or
loop
and
dec
je
mov
inc
add
jb
xor
loop
fisttp
pop
inc
jnp
rcr
jnp
enter
pop
xor
xchg
xchg
add
pop
add
pop
mov
and
mov
sar
jmp
mov
jnp
lahf
aas
iret
and
mov
jo
add
out
loope
jb
inc
repz
push
xor
shr
out
into
enter
adc
jmp
jne
dec
pop
jle
aaa
xor
inc
cmp
xor
cmps
das
test
dec
fistp
jecxz
jb
fsub
jns
adc
out
ja
jecxz
ds
mov
mov
pop
xchg
sbb
les
add
pop
xor
std
mov
je
ja
dec
pusha
pop
add
jg
xor
add
jnp
cmp
add
and
addr16
jge
out
fnstsw
mov
stos
add
mov
cmps
add
loopne
loope
cli
dec
(bad)
jmp
das
(bad)
loop
inc
jmp
and
leave
pop
retf
ja
repz
push
fiadd
lock
push
inc
pop
pop
mov
dec
hlt
retf
inc
lahf
mov
xlat
in
aas
std
inc
ds
xchg
cmp
jecxz
jl
popf
xlat
in
fistp
ds
pop
jns
test
leave
retf
scas
pop
add
fsub
pop
add
jnp
sbb
dec
push
dec
retf
adc
jo
xchg
or
and
loop
push
stc
xchg
shl
fidivr
pop
ds
out
stos
repnz
mov
mov
mov
dec
pop
jnp
pushf
aam
out
jmp
or
pushf
or
add
mov
xchg
and
cld
cmp
and
test
adc
push
les
push
inc
out
cmp
dec
pop
jp
mov
fdivr
cmp
dec
sbb
mov
dec
mov
pop
dec
lock
fidivr
adc
sub
ins
mov
push
and
pop
cmps
xchg
scas
retf
push
addr16
ja
enter
repnz
sbb
clc
mov
or
scas
jmp
xchg
pop
mov
invd
jo
pusha
scas
(bad)
div
and
add
mov
mov
stc
mov
mov
aad
fld
and
in
mov
cmp
dec
dec
or
cmps
cmc
test
test
add
arpl
gs
shr
ja
sbb
jmp
inc
push
cmp
inc
jle
jmp
fdivrp
repnz
mov
mov
mov
mov
or
enter
iret
aad
mov
mov
or
movs
inc
push
leave
jmp
push
pop
jg
jns
ja
mov
xlat
in
int3
push
leave
add
adc
jg
shl
sub
cmp
inc
enter
pop
stos
mov
shr
sub
sar
or
dec
push
ficomp
rcr
xor
cld
call
add
call
inc
add
inc
scas
add
fwait
add
ja
cmp
lods
xchg
in
lahf
mov
mov
inc
xor
das
cmp
mov
push
mov
arpl
rcr
fcmovnu
push
test
js
mov
add
jnp
shr
les
std
add
leave
jp
out
dec
cmp
mov
add
jle
je
ror
mov
cmp
add
shl
and
inc
mov
fdivr
iret
dec
pop
sbb
fadd
test
shl
sbb
imul
jmp
cli
push
movs
push
or
xor
mov
mov
icebp
cmp
retf
pop
cld
retf
aas
mov
add
xor
jp
mov
push
out
adc
adc
pushf
arpl
enter
pop
jae
jmp
adc
into
jbe
cmps
in
adc
mov
sbb
or
mov
sub
cwde
cdq
mov
or
fmul
mov
inc
cmps
(bad)
(bad)
lds
(bad)
out
jge
pop
outs
aas
jg
dec
or
enter
arpl
xor
inc
fld
(bad)
leave
sbb
push
pop
or
test
cmps
adc
pop
mov
push
es
dec
ins
scas
inc
inc
test
mov
mov
mov
inc
sbb
or
ret
add
ins
inc
into
cmp
or
test
sar
add
add
shl
push
add
add
cmp
xlat
lahf
cmp
leave
mov
adc
push
add
pop
rcl
sbb
xchg
add
test
ja
shl
dec
push
push
pop
dec
cdq
hlt
sysexit
jmp
ret
jp
fidivr
mov
es
cmp
mov
jo
fwait
rol
xchg
push
jb
xchg
in
outs
mov
daa
sub
jecxz
adc
call
or
mov
int
sbb
pop
mov
iret
sahf
(bad)
jmp
cs
sbb
adc
push
test
jno
lea
sbb
jl
jnp
aad
popf
and
sti
in
pop
retf
jle
sbb
pop
je
movs
jg
aaa
sub
outs
xchg
cmps
out
fnstenv
sbb
mov
push
jmp
xchg
xor
in
xor
and
fst
das
pop
add
in
pop
pop
dec
lods
mov
push
add
pushf
call
or
mov
dec
aas
jnp
dec
int
dec
ins
push
xor
dec
jae
cdq
adc
movs
dec
push
pop
xchg
hlt
sysenter
retf
sbb
cmp
or
popa
xchg
jo
das
add
dec
neg
cmps
or
adc
pushf
bound
adc
out
bnd
ja
inc
cmp
test
mov
in
icebp
jno
add
xchg
lahf
add
aas
pop
xor
shl
popf
dec
pop
jns
mov
lock
jbe
and
cmps
mov
adc
retf
jmp
jno
stos
dec
mov
in
test
test
inc
mov
out
stos
cmp
fsub
cmp
mov
dec
jnp
clc
inc
pop
fucomip
mov
out
test
xchg
cmp
cmp
mov
mov
sahf
xchg
shl
pop
mov
xchg
pop
test
cmps
push
add
xchg
mov
addr16
fdivr
cmp
inc
dec
stos
adc
push
xor
jmp
mov
xor
outs
push
iret
pusha
in
adc
scas
lea
inc
push
addr16
push
xchg
ja
jns
xchg
jmp
cmp
add
nop
jl
lea
rcr
pop
hlt
enter
xor
mov
hlt
popf
bound
fs
xor
mov
add
in
mov
sub
jno
push
push
push
mov
fsub
add
scas
nop
movs
dec
mov
xchg
push
xor
cmp
xor
ror
or
push
lock
test
mov
mov
out
sbb
jns
shr
adc
jmp
cld
inc
jbe
add
aaa
mov
mov
movs
mov
cmps
in
pop
iret
dec
push
jne
jle
mov
int
popf
sub
mov
push
inc
cwde
sbb
sub
int3
in
add
cmp
dec
out
or
fmul
(bad)
push
inc
popa
ins
add
fwait
sub
add
fadd
outs
test
mov
shl
add
fistp
pop
aaa
or
arpl
mov
inc
mov
pop
rol
gs
push
mov
ror
cmps
jae
int3
loope
cmp
push
loop
mov
pop
pop
imul
out
sti
add
fdiv
pop
cs
int
xchg
rol
dec
add
push
push
mov
dec
lods
mov
loopne
stos
cmps
into
out
xchg
adc
push
lahf
lds
test
mov
jns
sub
lods
xlat
ss
icebp
mov
int
add
push
pop
data16
pop
repnz
jg
and
adc
and
dec
stos
dec
aad
nop
push
fisttp
sub
push
mov
fldenv
mov
dec
jnp
xchg
mov
jle
push
fisub
cs
fiadd
xor
pushf
aas
cmc
inc
cmp
inc
add
add
arpl
cmp
out
enter
mov
in
test
add
js
loope
lock
add
add
add
popf
cmp
jb
movs
scas
mov
enter
push
pop
add
mov
mov
or
push
cmp
push
fdivr
movs
test
mov
scas
out
xchg
inc
xchg
lahf
mov
mov
dec
test
push
sbb
dec
mov
or
xchg
xchg
xchg
sub
jge
and
aam
aam
lock
jl
add
sbb
push
cmp
in
sahf
repz
popa
add
or
jae
hlt
dec
add
cmc
adc
jbe
jg
inc
cmp
clc
scas
or
aaa
fidivr
pop
jns
push
xor
ins
jo
sbb
loop
je
ins
ins
cmp
lods
cld
cmp
xor
(bad)
hlt
fs
nop
xchg
sub
fcom
not
push
in
(bad)
jne
sub
mov
inc
pop
jb
mov
sbb
mov
add
xor
add
sub
imul
xchg
jbe
ror
jle
jno
xchg
cdq
sub
cmps
es
inc
push
and
inc
mov
dec
add
pop
in
les
(bad)
and
add
fimul
xchg
xchg
jecxz
cmps
cmps
pop
scas
cmp
fst
and
sar
cli
mov
clc
mov
cmp
sub
mov
xor
cmp
push
mov
gs
push
int
std
pusha
add
call
mov
(bad)
lock
js
mov
pop
data16
add
scas
and
add
lea
js
sti
jns
add
and
xchg
mov
or
push
cmp
add
inc
push
mov
mov
gs
es
add
test
dec
add
test
repz
idiv
cmp
push
mov
xor
loopne
cmp
dec
pushf
pop
xchg
sbb
aad
test
cdq
cmp
jl
jmp
mov
mov
(bad)
gs
xor
xchg
pop
jns
std
(bad)
clc
or
sub
xchg
outs
jge
cmps
into
fcmovnb
inc
inc
dec
popa
inc
sahf
je
aam
arpl
inc
mov
jp
mov
cmp
sti
retf
xchg
cdq
push
loopne
xchg
sbb
push
in
loope
imul
add
sbb
push
add
aas
popf
add
out
xor
sti
sub
adc
mov
ret
dec
cmp
(bad)
ret
ret
ret
jb
into
add
sbb
pop
sahf
fwait
stc
shl
dec
push
in
ins
(bad)
jbe
add
pusha
cmps
dec
dec
mov
xchg
in
dec
retf
push
or
lahf
inc
shl
push
or
js
popf
xchg
inc
inc
scas
rcr
movs
mov
sti
pop
fcmovb
jl
in
inc
js
lods
adc
(bad)
test
mov
or
sub
dec
jp
xor
mov
sbb
mov
out
dec
add
movs
imul
retf
xchg
aam
js
fdiv
out
pushf
stos
pop
mov
test
xor
loopne
outs
js
or
push
sbb
mov
xor
sbb
cmp
push
mov
retf
leave
popf
ror
test
cwde
and
sub
push
rcl
inc
cmps
mov
std
scas
inc
dec
retf
enter
sub
frstor
cmc
(bad)
cmc
push
push
xchg
stos
into
outs
xor
rol
mov
sbb
mov
xor
push
cs
push
xchg
ja
mov
cmp
mov
lods
das
pusha
fs
add
dec
mov
and
clc
(bad)
jl
dec
ret
in
retf
pop
gs
mov
sbb
add
jge
cmc
add
mov
add
xchg
ret
mov
js
sub
mov
dec
pushf
sar
adc
fidivr
je
test
fs
push
sbb
inc
push
push
test
std
jb
fldenv
repnz
fist
lds
sub
rcr
and
or
pop
rcr
pushf
mov
cmp
out
retf
bnd
dec
jno
xor
xor
idiv
outs
adc
lods
sbb
js
nop
or
xor
adc
xor
loop
in
adc
jmp
push
lods
pop
add
mov
and
or
and
imul
jecxz
stos
push
loopne
cmp
cwde
out
rcl
(bad)
psraw
scas
ret
lods
adc
mov
and
xor
fidiv
mov
jecxz
dec
and
xor
dec
dec
lahf
pop
push
xor
(bad)
push
data16
out
sbb
sti
xlat
push
jge
jecxz
push
pop
jg
mov
inc
jp
shl
add
mov
retf
stos
push
cmps
jp
rcr
(bad)
xlat
xchg
push
pusha
in
add
push
in
inc
cmp
mov
cmp
dec
add
cs
jno
add
mov
cmp
fdiv
imul
cmp
mov
enter
fdiv
xor
push
inc
inc
fcom
or
int3
lahf
and
mov
jb
in
call
mov
mov
ja
outs
fistp
sub
call
add
mov
daa
xor
lds
pop
xchg
ins
imul
add
fbstp
push
add
fwait
out
add
and
jmp
xchg
xor
imul
icebp
ins
ja
into
cdq
adc
sbb
pop
add
xchg
lock
not
neg
jle
out
adc
loopne
cmp
cwde
and
call
das
movs
mov
movs
xchg
pusha
jbe
or
or
sub
add
jle
test
push
add
dec
and
jecxz
add
inc
fcomip
dec
mov
iret
outs
out
jmp
sahf
jne
cld
in
rol
dec
dec
mov
fdiv
add
mov
test
scas
cmp
mov
mov
mov
out
push
adc
and
xchg
inc
jb
lock
add
sub
rcr
out
pop
xchg
out
jae
sar
pop
add
xchg
mov
push
cmps
xchg
ins
in
daa
push
add
rcl
nop
fwait
aaa
fcom
cld
repnz
xchg
aad
fcmovne
mov
les
push
inc
inc
push
enter
sub
rcl
shl
add
out
xchg
mov
addr16
fadd
idiv
xor
jge
jmp
daa
xor
jge
adc
cld
xchg
inc
lahf
cmc
dec
movs
pusha
cli
inc
and
fs
outs
jno
cmp
dec
add
fwait
adc
pop
xchg
push
inc
add
int
sbb
jnp
scas
shl
or
add
popa
mov
ret
push
or
or
pushf
pushf
fcomp
icebp
movs
xlat
sahf
xchg
outs
inc
fcom
add
jmp
mov
or
pusha
push
pop
jle
repz
cmp
bound
sbb
jge
pop
inc
cdq
jecxz
add
inc
mov
fcomp
and
mov
dec
sahf
xchg
movs
dec
cmp
cmp
push
test
out
mov
out
ffree
add
cmp
mov
aas
push
lods
xor
mov
pop
fldenv
outs
mov
aam
loop
mov
ins
mov
int
mov
adc
pop
and
in
push
ret
arpl
fs
pop
scas
scas
mov
add
sahf
add
add
sahf
sbb
(bad)
mov
add
pusha
lock
jne
scas
pop
fstp
outs
dec
or
ret
jl
clc
jmp
add
fs
dec
test
loope
stc
hlt
pop
pop
mov
dec
or
test
xor
in
inc
xchg
add
mov
retf
retf
dec
xchg
pop
(bad)
call
(bad)
jne
sub
xchg
stos
stos
push
xor
fstp
fst
fcmovnbe
or
inc
jp
sti
and
and
and
sar
mov
call
mov
push
add
and
push
push
pushf
push
sbb
pop
ret
mov
push
(bad)
frstor
lods
lods
ins
push
push
push
(bad)
mov
mov
mov
int
sbb
pop
xchg
mov
mov
mul
movs
add
dec
dec
nop
mov
pop
pop
cli
adc
std
inc
or
mov
or
mov
add
test
int
mov
jno
enter
mov
outs
iret
xchg
lea
popf
jmp
mov
(bad)
fcmovne
leave
aam
and
or
sub
mov
out
cmp
into
cwde
adc
jg
loope
ss
rol
mov
add
and
or
(bad)
lods
dec
cmps
int3
pop
pop
ds
inc
aad
pop
pop
das
cdq
add
pop
or
call
xchg
pushf
mov
jb
xchg
lahf
push
add
pandn
xchg
xor
jge
ret
(bad)
add
mov
cwde
cld
test
ins
jl
add
lock
mov
das
push
cs
fs
push
hlt
std
popf
cmp
stos
xor
ficomp
mov
pop
out
shl
stos
fild
or
cmp
mov
out
lahf
push
outs
mov
sub
pop
inc
fld
jno
push
or
add
add
jecxz
xor
mov
dec
jbe
xor
cmp
cmp
rcr
add
push
movs
call
enter
cmp
add
addr16
mov
test
sbb
mov
loopne
or
cmp
clc
les
push
xchg
cmps
lahf
xchg
(bad)
outs
ja
sub
push
gs
iret
shl
sti
pop
in
aaa
lahf
add
cmp
out
dec
retf
ss
push
and
scas
pop
xchg
xlat
pop
jg
cmps
mov
std
les
cld
cmps
call
call
add
push
(bad)
sub
add
jo
shl
push
inc
xchg
pop
xchg
sub
mov
jmp
retf
cmp
inc
fsubr
fmul
push
sbb
mov
jmp
push
popa
retf
or
push
or
add
mov
sahf
jmp
sbb
icebp
aad
ja
cmp
repz
rcl
mov
cmp
add
mov
cmp
jno
test
fstp
or
mov
add
push
mov
sub
xlat
ins
fsub
dec
popf
fwait
xchg
shl
xor
dec
sub
cmp
inc
stc
hlt
mov
inc
or
push
inc
(bad)
out
push
adc
and
xlat
shl
add
inc
mov
pop
outs
xchg
jg
scas
loope
add
pop
(bad)
dec
arpl
inc
or
adc
imul
dec
jb
sbb
jg
fidivr
stos
and
add
mov
mov
jle
cwde
push
sbb
sbb
out
imul
dec
jae
pop
jl
aam
gs
pop
neg
add
push
scas
fist
fadd
or
dec
enter
retf
push
sar
mov
add
fnstcw
je
xor
add
adc
sar
pop
push
xchg
imul
mov
dec
dec
lahf
retf
xchg
scas
inc
jns
dec
mov
aas
jge
aam
adc
adc
jo
and
and
daa
movs
addr16
adc
movs
sub
mov
jns
mov
adc
data16
lods
xor
aam
ins
shl
jmp
cmp
lock
ds
and
scas
xchg
xchg
xchg
test
scas
scas
test
jmp
jmp
cmp
lahf
std
cld
xchg
fistp
repz
(bad)
cld
jnp
cld
out
idiv
cmp
xchg
hlt
cmc
mov
or
jmp
push
dec
loope
rol
cli
fwait
das
retf
in
jnp
retf
out
enter
xchg
dec
pop
iret
inc
arpl
and
popf
(bad)
sub
rcr
add
enter
cmps
fs
sbb
dec
pop
outs
cmp
or
xor
aad
gs
adc
xor
add
xchg
mov
lods
cwde
add
cmc
mov
pop
test
ror
icebp
mov
leave
xchg
xchg
int3
jne
add
les
jno
aas
fsubr
cdq
cmp
mov
shl
ss
inc
mov
gs
and
fs
shl
cmp
test
and
arpl
xchg
mov
das
(bad)
fisttp
pop
cmp
rcl
test
pop
pop
cmp
loope
add
mov
jecxz
xchg
cmps
int
push
cli
pop
(bad)
les
jp
xor
in
call
outs
add
addr16
cmp
mov
sub
maskmovq
test
mov
ret
test
fidivr
repz
mov
mov
lea
adc
icebp
jge
jno
inc
(bad)
sub
enter
mov
(bad)
jmp
jo
push
ret
jmp
jo
xor
add
(bad)
push
jl
les
in
xchg
mov
out
sub
neg
test
and
mov
(bad)
dec
jp
stos
jne
std
dec
cmp
js
mov
ss
add
add
js
adc
push
sbb
mov
or
lods
gs
add
shl
shl
jmp
cli
cld
sub
xchg
dec
inc
ja
mov
xchg
dec
push
imul
push
retf
imul
out
sub
sbb
cs
lahf
or
nop
lods
loopne
stc
push
push
cmp
loopne
inc
xchg
fnstcw
lock
push
gs
xor
cmp
push
sahf
xchg
pushf
push
inc
out
loopne
nop
jecxz
sbb
add
add
or
ret
(bad)
in
cld
mov
pusha
mov
movs
gs
add
dec
addr16
cmp
and
call
cmp
fcmove
mov
call
adc
loop
xchg
enter
aaa
fisub
daa
and
mov
add
mov
push
shl
fadd
jmp
inc
out
cmp
sub
in
xchg
les
pop
add
aaa
push
inc
shr
nop
inc
(bad)
test
add
out
jmp
mov
sbb
fwait
jmp
xor
ja
pop
aaa
cmp
inc
shr
add
fs
mov
mov
fmul
fidivr
lea
pop
push
push
xlat
push
leave
mov
add
push
shr
sbb
cdq
and
and
je
push
ror
stos
add
js
add
lds
dec
pop
sbb
out
mov
cmps
dec
rcl
fmul
sub
pop
xor
cdq
mov
jecxz
or
add
adc
add
fs
pushf
push
add
push
mov
jge
(bad)
out
ja
add
cmp
add
and
loopne
mov
sbb
outs
cdq
sbb
sbb
add
add
pushf
jecxz
outs
jle
cmp
and
and
add
add
sti
push
dec
int
inc
ins
dec
adc
xchg
and
(bad)
fsubr
push
lahf
jmp
aaa
(bad)
out
cli
mov
push
das
sub
xchg
cld
cld
pop
add
xchg
aas
sti
sar
sahf
cld
aas
jmp
out
outs
push
(bad)
cld
pop
(bad)
cli
pop
(bad)
xchg
aas
stc
mov
(bad)
fcmovnu
std
leave
cmps
(bad)
std
(bad)
mov
addr16
hlt
(bad)
xchg
pop
std
in
stc
loope
mov
inc
into
pop
cwde
xchg
leave
icebp
popa
test
cli
es
cmps
push
retf
pop
out
pop
xchg
xchg
retf
ja
(bad)
mov
das
in
aas
std
push
mov
leave
mov
add
inc
jno
dec
out
mov
pop
xchg
outs
jg
sbb
(bad)
(bad)
jecxz
lahf
xchg
jnp
cmps
in
pop
(bad)
pop
xchg
scas
jg
xchg
jl
fnsave
in
outs
fcom
out
jl
pop
out
mov
lock
fidiv
iret
shl
adc
xchg
inc
jp
sub
sbb
xchg
jge
ror
pop
ds
cld
sbb
adc
arpl
ret
mov
sbb
mul
inc
and
mov
daa
loopne
adc
mov
pop
or
int
(bad)
ds
imul
jecxz
inc
(bad)
add
icebp
lea
mov
data16
(bad)
jge
push
jb
dec
xchg
fs
dec
jb
cmps
fs
mov
call
das
jns
pop
outs
mov
jle
in
rcl
lock
jbe
int3
in
sub
dec
mov
repnz
daa
push
cmp
jle
jmp
in
(bad)
add
dec
test
and
ins
sahf
sbb
inc
and
jnp
xor
mov
or
xchg
or
jnp
pop
dec
or
out
enter
fwait
jno
fild
in
mov
push
add
in
iret
cmc
(bad)
mov
mov
repnz
ds
fld
and
dec
xchg
mov
sub
hlt
fcom
cmps
in
inc
fadd
shr
fist
add
and
xchg
jecxz
loop
jno
jae
inc
sub
movs
mov
inc
into
sahf
aas
and
fwait
xchg
mov
or
aad
jecxz
lea
mov
mov
and
aas
adc
sub
(bad)
std
loope
inc
aam
xchg
sub
cmp
cmp
xchg
push
scas
cmp
add
dec
call
dec
sbb
jae
add
(bad)
(bad)
inc
jb
(bad)
mov
clc
shl
sbb
pop
scas
lsl
imul
adc
or
xor
pop
xor
cmp
loope
mov
cmp
add
or
mov
xchg
gs
jl
cmp
mov
dec
ss
loope
add
enter
js
sbb
iret
dec
out
adc
sub
test
(bad)
xor
push
enter
lock
cmp
or
and
add
push
mov
xor
retf
mov
ret
jo
sub
ja
mov
clc
fild
cmps
sub
or
add
xchg
test
loopne
inc
mov
dec
mov
pop
xchg
fst
pusha
cdq
push
test
ret
js
je
dec
bound
add
inc
push
mov
mov
in
jne
aas
sbb
mov
sbb
lods
and
xor
enter
inc
mov
add
dec
(bad)
or
in
ins
test
cmp
add
xor
inc
inc
push
cmp
jb
loopne
add
and
into
add
pop
add
add
adc
ja
pushf
cmp
(bad)
iret
mov
gs
add
push
clc
push
lock
or
test
xor
sti
movs
stos
mov
and
lds
call
(bad)
mov
add
push
imul
mov
stos
and
out
cmps
pop
(bad)
fucomp
fwait
aaa
and
cmp
sub
jne
mov
(bad)
mov
int
jg
rcr
mov
ficomp
adc
ds
ss
lea
xchg
sbb
mov
xchg
bswap
addr16
mov
xlat
(bad)
(bad)
std
pmaxsw
jmp
pop
and
cdq
jns
outs
jb
jl
test
pop
push
daa
loope
sbb
cmp
dec
xchg
movs
mov
outs
pop
inc
test
pusha
shl
pmaddwd
lea
mov
retf
fdivr
add
dec
dec
test
fistp
jl
or
sub
mov
and
jbe
mov
mov
dec
dec
mov
js
hlt
add
sbb
mov
fdivrp
lock
adc
mov
shl
sub
sahf
mov
push
sub
adc
cmp
push
jl
jne
jae
dec
pop
sub
dec
jb
test
dec
xchg
clc
xchg
push
dec
iret
dec
test
std
jb
(bad)
sub
into
mov
icebp
outs
adc
ja
mov
fbstp
test
aad
pop
jmp
enter
stc
push
inc
mov
pop
add
ins
or
gs
jecxz
cmp
push
xor
push
fidivr
mov
jge
clc
int
hlt
xor
repnz
popf
add
and
jae
ds
iret
mov
jl
and
sahf
imul
jns
mov
mov
popf
push
imul
pushf
in
in
push
push
push
dec
and
pop
imul
mov
sub
das
mov
repnz
dec
or
and
imul
fadd
dec
xor
ja
popf
xchg
loop
cmp
sub
xchg
mov
mov
and
sbb
icebp
xchg
popf
popf
test
sub
(bad)
xchg
sbb
xlat
scas
pop
shl
fcom
mov
rcl
imul
add
sbb
stc
repz
dec
mov
rol
ja
hlt
pop
call
sbb
icebp
xchg
xor
call
or
inc
push
mov
cmp
dec
sahf
mov
repnz
loope
in
lea
lahf
shl
add
sub
in
sti
aam
leave
add
mov
sbb
(bad)
iret
shl
dec
out
sbb
jge
and
pushf
retf
loop
dec
jp
pop
cmp
sbb
fdivr
in
or
or
dec
or
add
inc
iret
or
std
or
enter
jg
add
add
xchg
pushf
cmp
lock
dec
xchg
lea
add
and
dec
mov
add
pop
out
and
jb
add
(bad)
sub
test
dec
and
or
sar
xchg
xchg
mov
dec
inc
inc
dec
mov
test
push
pop
fisubr
dec
fs
int3
arpl
add
es
adc
ins
or
cli
mov
hlt
push
es
mov
mov
mov
fst
inc
call
arpl
dec
add
mov
movs
adc
add
(bad)
outs
pop
shr
and
out
jae
sub
inc
add
imul
add
push
cmp
inc
cdq
repz
inc
or
das
aad
and
dec
xchg
xor
sub
scas
hlt
(bad)
xor
push
or
jb
scas
mov
pop
scas
retf
data16
daa
mov
fsubp
aam
push
and
push
test
mov
jl
fidivr
cld
mov
vmovddup
xchg
movs
push
or
mov
(bad)
jmp
mov
sbb
outs
xor
mov
jge
and
loope
data16
dec
sub
ret
in
repz
pop
call
into
cdq
xor
fsub
mov
in
fnstenv
lds
cli
cmp
lds
xchg
out
sbb
jnp
arpl
pop
pop
ret
pop
adc
cwde
stos
xlat
scas
inc
aas
out
sbb
addr16
xchg
pop
das
pop
nop
outs
and
fcom
cmp
fild
cld
push
sub
push
mov
aaa
jecxz
scas
je
in
sbb
push
sbb
dec
jg
or
jg
sbb
int
add
sbb
or
pop
cmp
outs
mov
cld
push
test
adc
xchg
icebp
dec
mov
cmps
push
and
scas
push
loopne
aad
push
push
out
sub
and
sbb
or
es
jne
jb
mul
sub
xchg
adc
adc
nop
push
sahf
push
add
inc
and
test
add
or
cwde
daa
dec
out
in
out
adc
and
push
nop
ins
push
pop
pop
test
add
pop
mov
mov
dec
add
add
daa
popf
add
test
mov
adc
retf
adc
add
add
inc
add
lock
cs
jge
movs
mov
ja
ret
xchg
lea
leave
xchg
sbb
shr
stos
stos
xchg
jecxz
dec
pcmpeqd
add
jmp
jl
repz
dec
in
xchg
psllq
(bad)
stc
adc
pop
mov
out
icebp
jno
jae
add
or
imul
sub
xchg
mov
or
mov
popf
shl
(bad)
xor
(bad)
pop
xchg
dec
xchg
cs
cmp
rcr
hlt
cli
cmps
lahf
shrd
or
(bad)
fwait
jg
inc
pop
inc
movs
shr
or
inc
in
fbld
cld
stc
pop
inc
adc
idiv
shld
rcr
cmps
xchg
add
jbe
add
sbb
fimul
cli
jnp
clc
hlt
xchg
iret
jne
div
test
jb
fidivr
icebp
xchg
jae
fcmovnu
mov
pop
mov
into
adc
add
(bad)
sahf
sbb
add
jp
or
cmp
add
add
or
cmp
push
out
xor
push
int
xor
jae
test
push
test
sbb
jl
into
xchg
xor
test
mov
das
pop
and
les
aam
xor
push
push
xchg
adc
cdq
inc
in
add
push
pusha
call
inc
test
or
or
add
xor
push
sbb
or
and
nop
dec
out
dec
cli
lods
adc
or
js
add
bound
inc
push
movs
mov
adc
int
push
jb
out
sub
pop
cmp
adc
dec
xor
xor
xor
inc
dec
dec
test
jmp
(bad)
xchg
push
in
jb
mov
retf
rcr
leave
ins
cmp
pop
xor
xor
ins
pop
xchg
shl
inc
push
ret
fmul
mov
mov
stc
(bad)
cmp
nop
int3
pop
add
mov
inc
add
cmps
pop
aam
jp
nop
gs
imul
mov
stos
cmp
add
(bad)
je
mov
nop
popf
cmp
sub
adc
dec
and
cmp
jecxz
ret
sti
ror
and
sub
add
adc
dec
lea
mov
(bad)
aad
std
ror
mul
dec
(bad)
in
ja
cli
retf
out
mov
jge
or
popf
ret
push
push
mov
std
push
sub
and
sar
int
(bad)
or
push
cmp
ficom
mov
ja
leave
mov
data16
(bad)
push
loope
push
mov
arpl
mov
icebp
sbb
mov
stc
sbb
jns
loopne
lea
lods
fild
dec
add
sub
xor
push
cli
push
fimul
test
mov
out
cmp
mov
adc
pop
sub
or
sub
inc
(bad)
cmp
pop
scas
add
fmul
loope
shl
(bad)
(bad)
pop
jmp
or
sub
sbb
outs
mov
icebp
cli
mov
mov
dec
sbb
inc
jp
add
loop
fdivr
or
jnp
sub
rcr
cli
or
adc
popa
jns
jmp
adc
mov
scas
inc
fwait
jno
xor
cmp
sub
retf
push
pop
push
mov
mov
cs
int
jns
adc
push
repz
popf
jmp
ins
out
fist
pushf
out
xchg
(bad)
out
mov
sti
inc
or
mov
mov
or
add
inc
cmp
(bad)
mov
jl
inc
nop
scas
mov
inc
mov
dec
ja
mul
push
push
pushf
movs
dec
(bad)
jae
or
aaa
inc
repnz
xchg
mov
xor
push
push
mov
gs
mov
scas
mov
pop
lods
add
repnz
in
in
leave
dec
popa
jb
dec
xchg
pushf
cmp
dec
jno
or
adc
inc
push
xor
ins
popf
push
mov
mov
push
xchg
daa
dec
sbb
imul
enter
add
out
sar
jb
mov
adc
xchg
jne
cs
(bad)
rol
pushf
test
dec
mov
inc
imul
inc
cdq
(bad)
xor
sub
sub
call
lahf
mov
and
mov
lock
std
pop
daa
gs
push
sbb
ins
addr16
xchg
fs
jae
popf
xchg
inc
adc
pop
movs
cmps
mov
inc
add
adc
pop
add
scas
mov
iret
sub
and
jg
jmp
add
push
add
in
in
cmp
jb
fld
jb
popf
cmp
fadd
std
scas
xchg
add
sar
out
mov
or
call
xchg
jmp
jmp
enter
inc
test
or
stos
enter
inc
fidivr
xor
jecxz
push
repz
add
add
icebp
and
pop
sub
(bad)
and
mov
sub
mov
sbb
mov
cmp
sbb
xchg
mov
imul
adc
push
pop
and
and
add
mov
mov
je
(bad)
or
pop
cmp
and
mov
add
leave
add
inc
sub
add
add
or
nop
fwait
test
test
xchg
aam
inc
ins
pusha
popa
pop
xor
fimul
xchg
mov
outs
add
shr
and
mov
sar
mov
mov
mov
inc
push
and
mov
repnz
push
and
cs
xor
mov
sahf
loope
movs
mov
clc
jns
push
jnp
pop
std
jmp
jg
rep
mov
call
sbb
or
dec
rcl
sbb
inc
aaa
hlt
pop
adc
jb
or
pop
push
xchg
xchg
pop
mov
in
sbb
mov
add
pop
hlt
or
fdiv
mov
repz
fist
iret
adc
mov
push
movs
push
leave
jno
jno
popa
mov
rol
js
mov
mov
mov
cmp
dec
int
jmp
mov
add
cmps
push
pop
pop
add
sbb
outs
xchg
(bad)
les
dec
daa
add
jmp
stc
(bad)
idiv
xchg
mov
fisub
ss
push
fsub
in
cmp
(bad)
mul
mov
enter
pop
lods
gs
xchg
pop
push
cld
sahf
add
ins
das
(bad)
movs
jns
mov
cmp
xor
cwde
shl
shl
sbb
mov
test
daa
rcl
pushfw
adc
sti
or
rcl
mov
mov
sbb
jb
int3
mov
cmp
xor
lahf
jne
nop
mov
inc
adc
jbe
stos
xlat
cli
xchg
sub
jmp
mov
ja
loop
xor
pop
mov
or
push
fidiv
hlt
std
aad
popa
sub
fiadd
or
sbb
jmp
adc
(bad)
popa
mov
idiv
(bad)
gs
and
sub
or
push
sbb
sub
xchg
add
leave
leave
retf
xchg
shl
jmp
xor
add
push
loopne
pop
int3
imul
mov
and
push
sbb
dec
sbb
mov
inc
rcr
aam
and
jns
xchg
xchg
dec
dec
dec
lods
mov
mov
enter
sub
retf
pop
push
mov
cld
dec
mov
popa
aam
jg
out
(bad)
(bad)
xchg
xchg
jae
ret
es
mov
jae
cmps
shr
shr
mov
in
dec
add
pop
cld
shr
pop
std
fidiv
daa
outs
mov
cwde
fidiv
cmp
loop
cmp
pop
cwde
(bad)
sbb
adc
shl
push
imul
jae
sbb
inc
lahf
adc
data16
add
jmp
iret
arpl
inc
imul
mov
cmps
sub
nop
aaa
leave
cmps
leave
(bad)
call
jmp
fnstsw
push
sub
add
cwde
sysret
sub
fnstcw
mov
ins
add
sbb
jne
sub
into
xchg
xchg
daa
xchg
(bad)
jae
sub
sub
clc
jmp
push
xchg
loopne
mov
cmps
(bad)
pop
mov
and
fdivr
xor
cmp
pop
sbb
dec
adc
nop
cmp
stc
in
xchg
jecxz
inc
movs
mov
mov
inc
mov
dec
outs
(bad)
jbe
retf
dec
stos
add
add
aaa
movs
mov
es
lea
outs
jle
sbb
mov
xor
pop
cdq
cld
dec
xchg
xchg
or
mov
shl
dec
mov
pushf
ds
cdq
add
cmp
add
cmp
fwait
sub
cs
outs
mov
loop
or
mov
ins
dec
pop
inc
enter
fxch
mov
mov
pop
mov
retf
in
sbb
leave
cmp
mov
test
or
sbb
mov
xchg
and
aad
enter
nop
mov
mov
retf
(bad)
jg
jecxz
fnstenv
je
jge
sbb
(bad)
(bad)
add
pop
inc
sti
stos
adc
or
jae
clc
cs
nop
sub
fild
mov
not
add
or
sub
cmp
adc
mov
jge
dec
mov
shl
mov
adc
push
cmp
pop
repnz
aaa
in
test
add
ins
push
pop
out
add
and
mov
adc
ja
xor
add
jecxz
add
jmp
(bad)
jg
or
int3
popa
sbb
cmp
jne
pusha
mov
inc
stos
add
in
xor
jmp
mov
adc
(bad)
jmp
test
xchg
or
xchg
test
out
adc
jb
vaddsubps
xor
imul
xor
test
into
pusha
jge
and
sbb
or
push
mov
rcr
xlat
add
sbb
dec
xchg
outs
xor
mov
add
or
xchg
movs
mov
xlat
push
cdq
call
iret
dec
add
std
push
clc
scas
and
jb
jns
push
add
(bad)
xchg
idiv
add
jns
sub
pop
add
and
dec
sub
shr
cli
mov
pop
pop
cdq
xchg
xchg
push
dec
inc
inc
and
push
pushf
cmp
xchg
ja
jle
(bad)
gs
or
pop
pop
lods
ds
mov
mov
add
aas
shl
lds
add
xchg
inc
pop
mov
sbb
add
xchg
push
dec
pop
pop
lods
xchg
cmps
dec
jmp
icebp
xchg
jl
jmp
ud0
pandn
(bad)
xor
pop
loope
fadd
nop
cmps
(bad)
in
repz
push
push
add
mov
jne
mov
pushw
enter
in
xchg
add
data16
mov
sbb
adc
ins
xchg
test
mov
pop
adc
test
pop
sbb
mov
sub
jl
push
xor
dec
mov
add
dec
xchg
mov
mov
mov
dec
sahf
cdq
nop
test
ret
dec
xor
jmp
clc
push
push
fimul
int3
jns
push
fisttp
in
icebp
test
add
int
(bad)
icebp
and
in
bound
push
or
sbb
ret
mov
jo
aas
xlat
xor
sbb
adc
sbb
ds
pop
dec
mov
jp
jae
pop
ins
push
xchg
xchg
sbb
in
sar
sub
add
ds
cs
fldenv
outs
fild
lea
cmc
and
and
sar
inc
clc
adc
adc
mov
add
fcomp
pop
xchg
adc
xor
push
retf
dec
cmps
mul
daa
mov
inc
cdq
scas
outs
sub
int3
and
outs
push
inc
jg
(bad)
mov
add
add
add
adc
arpl
jae
pusha
inc
add
nop
fwait
dec
mov
pop
xchg
movs
ret
popf
adc
cdq
(bad)
shl
cs
jecxz
add
inc
cmps
cmps
add
jns
loop
or
cmp
add
sub
xor
or
fmul
nop
nop
dec
(bad)
outs
or
or
iret
loopne
ins
push
push
xchg
unpckhps
clc
pushfw
daa
cmps
lds
lahf
xchg
mov
cmp
ret
or
inc
add
mov
pushf
add
fild
pop
je
add
sbb
movs
inc
sbb
pop
push
sub
or
jns
xchg
fdivr
add
add
mov
jl
mov
sbb
sub
(bad)
xchg
fist
inc
mov
dec
jno
jo
ds
cwde
loop
cld
sub
xor
and
clc
popf
scas
(bad)
jge
arpl
(bad)
lock
xchg
sbb
inc
sub
fldenv
fmul
sub
jns
add
add
(bad)
add
mov
outs
xchg
dec
add
imul
mov
pop
sub
and
mov
clc
push
inc
push
push
outs
mov
daa
mov
out
push
mov
retf
(bad)
lahf
ins
pop
cli
imul
cmc
test
cmp
test
inc
not
push
(bad)
(bad)
popf
sti
xchg
js
out
nop
jmp
dec
std
(bad)
add
cmp
sbb
sahf
mov
or
jge
(bad)
fcomi
xor
(bad)
sbb
mov
pop
fld
or
push
ds
lock
sahf
dec
dec
mov
pop
pop
es
in
pop
imul
mov
inc
sub
push
or
popfw
add
ins
inc
push
mov
pop
outs
cmovl
ret
les
aas
shl
sti
cmp
sbb
ss
push
pop
js
clc
cwde
add
dec
jecxz
dec
mov
mov
shr
push
arpl
xchg
mov
(bad)
repz
outs
addr16
aas
mov
add
int
test
call
add
add
pop
cmp
adc
mov
or
inc
in
ins
fs
sub
sub
cmp
iret
jnp
pop
adc
mov
pop
add
add
mov
repnz
call
sbb
or
xor
and
in
add
sub
jp
dec
push
inc
stc
push
mov
sbb
sbb
sbb
xlat
inc
pop
jae
dec
sahf
jae
push
xlat
rcl
cwde
(bad)
movs
ret
retf
movs
mov
leave
test
stc
arpl
enter
gs
leave
mov
outs
retf
test
movs
pusha
mov
loopne
cdq
push
aad
xor
adc
add
(bad)
out
xor
jno
ins
mov
dec
inc
push
or
cmp
mov
inc
out
mov
xchg
mov
jb
test
cmp
sbb
mov
jb
mov
mov
or
aam
or
es
fninit
jg
sub
push
ins
(bad)
xchg
or
add
push
shl
add
push
retf
mov
sbb
arpl
mov
push
mov
mov
int
enter
jge
repz
ret
dec
ficom
aam
push
add
js
pop
add
mov
inc
pop
sub
mov
outs
mov
jb
sub
outs
mov
mov
sbb
(bad)
hlt
js
dec
add
retf
mov
mov
sahf
adc
loopne
push
mov
mov
cmp
je
mov
pop
fst
fisttp
hlt
int
movs
jo
out
arpl
ins
popf
dec
add
cmp
or
loopne
jle
shr
popa
jnp
sub
mov
fidiv
(bad)
enter
push
mov
mov
inc
ds
mov
(bad)
fwait
lea
sbb
les
data16
cmp
mov
int3
mov
sbb
call
mov
add
fimul
push
rcl
jmp
pusha
jp
push
cs
lahf
xchg
movs
aam
hlt
fld
cmp
ja
jmp
int
retf
jae
fs
xor
fstp
xor
shl
(bad)
mov
loopne
sub
sar
mov
shl
jge
dec
nop
dec
daa
rcl
dec
jge
dec
cli
inc
stos
xlat
enter
add
jp
ds
pusha
mov
call
add
mov
jl
dec
mov
push
leave
int
shr
or
push
push
fcmovbe
shl
jmp
mov
mov
lods
adc
movs
mov
adc
lahf
adc
into
sbb
pushf
inc
adc
push
cmps
addr16
rcl
jp
int
sub
nop
stos
fcmovu
cmp
dec
sbb
loop
arpl
test
xor
mov
out
pop
loopne
addr16
cmps
shr
shr
int3
push
inc
inc
inc
ins
mov
or
repnz
dec
in
fwait
xchg
jmp
popf
xchg
ja
mov
retf
fsubr
jo
lds
xchg
js
mov
dec
ror
ds
in
xchg
dec
ficomp
jl
push
or
push
popf
adc
xor
iret
and
and
jne
sbb
push
xor
cmc
shl
push
das
push
shl
cmps
mov
push
rcl
fwait
jl
or
mov
cmps
aaa
xchg
inc
std
pop
nop
cmps
xor
fwait
dec
xchg
xlat
adc
daa
iret
dec
push
loopne
aam
test
test
cwde
push
mov
aam
gs
ss
pop
mov
adc
test
lea
pop
(bad)
loop
add
jns
xor
mov
push
cmp
sub
sub
(bad)
xor
(bad)
or
(bad)
jmp
mov
or
dec
mov
jne
test
cld
xchg
or
mov
ins
xchg
sahf
mov
add
add
test
cli
add
xchg
add
dec
add
pusha
(bad)
xchg
scas
ds
add
add
add
and
inc
outs
jl
popa
or
or
jl
aad
lods
sbb
inc
push
add
cwde
mov
xor
or
inc
jo
pop
ror
push
mov
dec
dec
push
xchg
xchg
pop
and
inc
les
rol
in
outs
out
cmp
adc
pop
lods
pushf
imul
stos
arpl
lods
mov
adc
or
daa
out
mov
loope
fnstenv
pop
jge
sub
sbb
dec
sti
sahf
or
pusha
scas
(bad)
adc
add
add
mov
mov
jbe
xor
xor
inc
in
in
add
jecxz
pusha
add
push
cdq
(bad)
fcomp
pop
aas
es
add
jmp
adc
daa
xchg
das
push
xchg
jnp
inc
(bad)
(bad)
jge
cli
jmp
or
xchg
(bad)
shr
(bad)
test
push
ret
out
sar
js
and
mov
into
pop
fsubr
movs
in
ret
pop
push
mov
jnp
pop
push
shl
xchg
jg
ja
adc
xor
xor
pop
or
adc
jmp
jge
adc
mov
test
jmp
in
add
mov
cmps
fcomp
mov
sub
sbb
in
jbe
sub
jecxz
push
nop
pop
xor
not
neg
mov
cdq
jns
(bad)
in
mov
sub
mov
test
bound
mov
pop
sub
push
xchg
push
outs
imul
pop
adc
ins
mov
xchg
cs
sbb
add
push
pop
xchg
push
jp
pop
(bad)
and
add
dec
fstp
cld
outs
lds
and
dec
and
ins
xchg
shl
push
cdq
fidivr
and
lea
xchg
sbb
neg
jmp
sbb
(bad)
xor
pop
pop
fnstenv
jmp
lock
push
leave
fild
add
cmp
cmp
jp
mov
fistp
and
out
sahf
nop
call
adc
sbb
pop
cmp
dec
cmps
sub
and
and
es
xor
sbb
xor
or
pop
adc
mov
cwde
sub
jecxz
out
iret
xchg
mov
(bad)
xchg
dec
out
outs
jle
jo
sbb
xlat
sub
jle
outs
out
inc
mov
adc
xchg
lds
and
mov
retf
shl
jb
ret
inc
mov
sub
add
ror
imul
jae
pop
push
(bad)
xchg
loope
test
xchg
mov
je
pop
mov
call
mov
mov
imul
fimul
jno
push
push
mov
aad
jnp
xor
loope
int
or
xor
push
fs
(bad)
stc
jge
daa
push
add
sub
pop
cs
jns
fcom
test
and
pop
test
adc
push
cmps
aaa
test
lock
les
retf
stc
retf
push
pusha
push
popf
mov
je
xor
sbb
pusha
js
push
cmps
jnp
lahf
add
push
jae
aam
push
pop
(bad)
mov
enter
loopne
jecxz
add
ret
and
cmp
or
add
shl
pusha
add
cmp
test
mov
add
pop
mov
inc
es
dec
mov
or
cmp
ret
int3
mov
out
mov
call
into
xchg
cld
not
hlt
sbb
pushf
popf
xchg
xchg
fistp
das
std
mov
fisub
retf
xor
xchg
xchg
fistp
mov
cs
sbb
cmp
jnp
mov
push
xchg
arpl
jp
push
ss
xor
adc
aaa
jge
push
dec
(bad)
fcmovbe
cwde
ret
mov
push
loop
arpl
call
pop
dec
lea
(bad)
cmc
add
or
iret
mov
jle
lock
lods
pop
(bad)
(bad)
mov
es
shl
add
adc
lahf
sbb
pop
scas
dec
dec
inc
push
mov
(bad)
daa
loop
cmps
retf
in
mov
cli
add
outs
imul
mov
or
push
pop
push
out
gs
(bad)
icebp
retf
js
retf
lods
imul
mov
ret
pop
adc
dec
mov
pop
pop
mov
xor
(bad)
outs
pop
mov
(bad)
retf
dec
(bad)
fld
cmp
stos
sbb
mov
lahf
jge
cmc
mov
fdiv
fldcw
fidivr
mov
push
jmp
xor
scas
mov
movs
movs
movs
push
push
jmp
rcl
fist
and
ja
jne
movs
xor
push
leave
or
xchg
sahf
data16
mov
pop
mov
add
ins
shl
xor
push
xlat
aaa
in
aam
sbb
sub
cmps
pop
mov
cmp
mov
cmp
jb
cwde
retf
(bad)
call
(bad)
cld
cmp
call
sub
cmps
sahf
push
xchg
(bad)
add
retf
cdq
(bad)
adc
adc
cmp
jno
popf
daa
jecxz
dec
dec
dec
adc
mov
xchg
cmps
xor
pushf
add
mov
outs
and
gs
and
push
data16
mov
pusha
test
imul
pop
pop
xchg
cmp
cmp
mov
and
mov
mov
push
xor
and
retf
std
jmp
add
sbb
cmps
ret
mov
jnp
push
mov
test
les
test
add
dec
pop
mov
mov
pop
push
push
jae
xchg
popa
xor
sar
rcl
lock
hlt
mov
cmp
ret
ffree
enter
xchg
mov
add
cmp
xor
push
or
aaa
bound
pushf
scas
jmp
jmp
jo
add
movs
in
shl
pop
daa
xor
pop
neg
cmp
mov
jp
lahf
push
adc
aam
xor
mov
add
dec
mov
cwde
mov
add
sbb
dec
sahf
in
sar
(bad)
pop
add
add
mov
cli
dec
push
pop
add
daa
imul
call
shl
jl
jns
pop
scas
pop
aas
mov
dec
popf
call
ret
adc
popf
sti
mov
out
retf
jae
(bad)
in
lods
jge
pop
xchg
mov
sub
sahf
fidivr
repz
mov
clc
rol
cmp
sub
pop
mov
or
ss
cmp
sub
push
scas
pop
mov
movs
jb
out
sub
mov
mov
dec
lock
ins
lahf
sub
mov
push
sub
mov
or
or
pushf
pushf
ins
leave
into
retf
inc
jb
jae
adc
pop
mov
jg
inc
mov
fidiv
fist
std
pushf
xlat
inc
sub
xor
repz
movs
ja
(bad)
adc
and
or
pop
xchg
mov
jnp
mov
call
jge
inc
add
mov
jbe
lahf
sbb
mov
je
pop
mov
jno
mov
jp
fld
bound
mov
and
dec
leave
or
push
mov
hlt
sub
fsub
jl
out
daa
mov
mov
aam
jge
sub
push
mov
retf
sbb
mov
jns
sbb
push
test
dec
rcl
jle
lahf
mov
addr16
and
rol
sbb
shl
add
jbe
imul
jg
(bad)
add
ins
and
repnz
sar
sar
and
aaa
pop
sbb
fwait
movs
mov
dec
neg
mov
jmp
and
ficomp
lea
add
lods
mov
pusha
test
sbb
and
push
inc
mov
jle
pop
jne
xor
fcomp
cmp
push
sub
add
int
in
iret
aas
shr
cmp
shl
repnz
fidivr
out
cmps
stc
repnz
xlat
rol
gs
adc
mov
jmp
jae
add
xor
in
jno
mov
pop
sub
daa
mov
inc
shl
add
dec
push
inc
loope
xor
or
sub
and
add
popf
xlat
enter
and
add
jnp
xor
out
sar
test
mov
out
imul
dec
dec
test
add
in
in
fs
xor
repz
xor
movs
outs
test
jp
stos
xchg
inc
push
fld
cmps
gs
aaa
retf
bound
xor
jb
stos
jmp
cmp
cmp
je
aam
addr16
mov
int
xor
jo
aad
and
int
imul
dec
iret
xor
inc
jnp
in
cmp
loope
arpl
ficom
and
jp
fld
jne
aam
mov
add
dec
xlat
or
xor
jle
(bad)
cdq
mov
dec
sub
cmp
pop
nop
pop
add
pop
jle
ja
cld
rcl
add
pop
loopne
leave
xor
xor
and
xchg
add
mov
or
inc
out
repz
inc
outs
dec
lahf
xchg
inc
add
lods
push
jae
and
adc
sbb
ss
das
sbb
add
and
loop
shl
pop
add
sub
popf
pop
push
push
inc
in
in
mov
das
fild
add
int3
mov
xchg
std
cmps
mov
inc
jle
addr16
lds
pop
nop
stos
xchg
ud2
test
jp
add
je
jmp
push
retfw
cdq
push
std
xor
xchg
xchg
test
and
sbb
fptan
cmp
out
das
mov
leave
mov
xchg
pop
mov
retf
(bad)
retf
jnp
out
retf
mov
xchg
jl
int
jo
pop
mov
jmp
in
in
icebp
fsubr
cmps
mov
mov
mov
add
inc
adc
in
push
mov
inc
scas
je
xchg
stos
test
or
pop
daa
aas
cld
shl
push
lods
push
(bad)
sub
mov
nop
aas
daa
sub
pop
jecxz
les
ret
outs
outs
push
add
xchg
push
pop
imul
pop
out
stos
ret
loopne
pop
adc
pop
jmp
scas
xor
inc
std
ret
adc
and
scas
aas
ja
out
mov
inc
xchg
cmc
and
adc
add
sbb
push
test
aas
add
stc
mov
retf
cmp
aas
ds
mov
fmul
mov
push
(bad)
pushf
sbb
lock
mov
xchg
sbb
mov
fiadd
in
mov
in
cmp
xchg
xor
jge
add
jbe
je
shr
(bad)
sbb
sbb
mov
(bad)
fisubr
std
add
sub
sbb
cmps
dec
add
jmp
in
push
or
mov
mov
sahf
push
js
jo
cmps
jno
mov
inc
stc
pop
cmp
aas
cmp
dec
cdq
popf
fisttp
shl
xor
enter
stos
sub
or
cmp
paddw
sbb
add
or
call
inc
or
jl
sub
out
cld
pusha
cld
jo
and
jae
out
aas
clc
shr
ja
jecxz
or
sbb
cmp
daa
(bad)
bswap
dec
xor
test
jo
pusha
or
popa
out
sub
cld
add
movs
lods
stos
dec
test
ror
leave
js
test
cmp
iret
jmp
loop
popf
xchg
fs
(bad)
fsubp
and
lods
jno
inc
mov
mov
lock
mov
aas
fistp
sbb
push
out
add
pop
int
xchg
push
pop
inc
push
pop
mov
jl
mov
sub
cmp
adc
xor
retf
push
sub
xor
pop
sub
pop
dec
push
and
mov
xchg
clc
mov
movs
sub
and
nop
mov
repz
imul
ja
leavew
jb
inc
rol
rol
imul
leave
mov
shr
dec
lods
adc
dec
or
push
shl
add
dec
pop
inc
mov
outs
pop
ins
cmps
add
inc
or
adc
pushf
cmp
or
lock
out
int3
pop
add
ret
(bad)
add
inc
add
add
pop
jnp
xor
push
fild
aam
push
jbe
test
sub
and
or
sbb
and
xor
push
out
mov
into
ds
shl
sbb
pop
or
fidivr
in
and
lock
add
shr
cld
(bad)
cmp
leave
repnz
adc
add
cmps
jmp
syscall
inc
jbe
mov
mul
or
xchg
popa
jb
imul
cs
pop
sub
imul
add
mov
arpl
pop
fs
sub
mov
lods
add
xchg
mov
cmp
aad
inc
jnp
and
xor
adc
dec
mov
push
dec
xchg
inc
inc
inc
mov
xchg
jae
and
std
jmp
fdivr
stos
stc
pop
shr
add
jl
rol
cmp
aas
jno
out
adc
fcmovnbe
dec
dec
push
pushf
and
fmul
(bad)
enter
add
(bad)
sub
lods
mov
dec
retf
dec
js
xor
cli
push
aad
pop
ds
mov
fidiv
xor
jno
pusha
dec
cmps
ficom
out
clc
iret
(bad)
test
shl
xchg
and
push
ds
add
mov
ins
push
push
fcom
icebp
dec
sub
jns
addr16
inc
outs
mov
mov
jl
inc
loope
shl
xor
cmp
iret
sbb
jecxz
mov
int3
aaa
dec
popa
inc
sbb
xor
jno
out
add
mov
xlat
int3
mov
mov
and
gs
sub
fisub
and
fldenv
in
push
jp
gs
cwde
in
fwait
sahf
(bad)
sub
out
xor
cmp
add
shl
clc
mov
scas
jg
sub
outs
or
rol
sub
clc
push
sub
sbb
(bad)
(bad)
jge
mov
in
aad
push
or
retf
add
add
pushf
mov
jno
mov
xlat
and
cwde
add
cwde
sub
test
pop
add
inc
bound
dec
cmp
arpl
sub
jns
fild
movs
es
dec
inc
pop
mov
bound
mov
test
sbb
sbb
pop
cmp
retf
mov
xchg
xchg
call
xchg
cmps
xchg
adc
dec
es
retf
shl
scas
dec
aam
js
jmp
and
and
jl
in
imul
loopne
test
addr16
stc
call
add
or
dec
nop
cs
rol
stos
jmp
push
push
clc
ds
mov
xor
adc
mov
test
mov
movs
data16
ret
test
mov
ss
int3
sbb
xchg
fadd
pop
sub
movs
xor
rcr
pop
mov
mov
mov
int
jge
pop
xor
pop
retf
inc
dec
retf
fimul
add
and
sbb
mov
and
les
push
inc
and
cmps
enter
fs
scas
movs
movs
inc
imul
ja
sbb
shr
jae
test
imul
sub
mov
mov
add
add
retf
das
popf
inc
pop
mov
dec
mov
gs
das
cmp
enter
add
sub
test
inc
jbe
movs
movs
and
cs
cmps
jns
and
loop
inc
or
mov
jmp
pushf
cmp
sbb
aaa
aaa
sahf
mov
add
fbstp
fsub
sahf
retf
add
arpl
mov
dec
call
fidiv
test
pop
lahf
in
aaa
outs
or
test
scas
mov
inc
sub
jmp
inc
adc
dec
sub
jecxz
dec
loop
(bad)
std
xor
mov
pop
adc
nop
cmp
mov
scas
cmp
push
shl
ds
and
jno
and
arpl
jl
lahf
cmp
cmp
ror
pusha
clc
xchg
imul
cwde
(bad)
into
jns
loope
test
cmp
cmps
cmp
outs
rcl
popa
adc
add
fidivr
loopne
rol
push
xchg
arpl
mov
xchg
ret
xchg
add
pop
pop
mov
cwde
sub
(bad)
adc
mov
xor
xchg
rcl
clc
ins
mov
mov
push
adc
and
aaa
pop
and
push
lea
mov
pop
(bad)
daa
xchg
pop
mov
cmc
push
jne
mov
add
sbb
shr
or
cmp
mov
loopne
daa
rol
ds
inc
add
add
dec
ds
inc
push
add
int3
inc
fistp
and
add
mov
aam
mov
leave
inc
(bad)
into
scas
popf
popf
or
jnp
add
int
jae
aad
inc
cmp
sbb
jbe
repz
jo
mov
xchg
sbb
enter
cmps
push
jmp
iret
ins
cmp
popa
mov
movsx
fs
scas
test
mov
dec
dec
iret
add
das
rcr
add
mov
push
jge
push
ss
jae
aam
cmp
into
xchg
shl
iret
icebp
push
xor
dec
mov
or
int
cmps
lods
ins
mov
(bad)
stc
pop
sbb
sub
ja
pop
mov
shl
scas
inc
stos
jmp
mov
leave
pusha
dec
mov
sub
ret
inc
fimul
adc
and
das
out
xchg
cdq
(bad)
sbb
popa
and
out
add
in
sti
add
dec
jmp
int
and
stos
add
mov
xlat
pop
pop
lock
add
mov
xchg
inc
pusha
xor
add
mov
xor
add
add
sbb
jbe
pop
add
frstor
popa
jnp
sub
and
idiv
sahf
jge
fistp
dec
push
inc
pusha
out
enter
xchg
fisub
sub
scas
cwde
ret
or
fwait
(bad)
mov
test
out
mov
cmps
lea
and
add
xchg
mov
xchg
mov
ins
leave
dec
retf
and
hlt
mov
addr16
push
hlt
(bad)
ins
push
in
leave
push
jno
fldcw
addr16
mov
mov
fwait
aam
xor
scas
inc
adc
jne
movs
rcr
pop
sub
add
enter
inc
cs
cmp
cmps
aaa
sahf
add
arpl
ss
sbb
in
pop
and
ret
in
cli
out
aas
xchg
test
(bad)
push
lock
adc
inc
stc
xor
lods
xchg
pop
ins
cmp
into
fnstenv
push
cmps
popa
or
test
outs
push
or
cwde
bound
aam
and
dec
jge
mov
push
fbstp
pop
out
ds
mov
icebp
fdiv
or
xor
fcom
arpl
jl
cld
mov
inc
ds
jnp
(bad)
or
test
fs
mov
jg
in
aas
ror
dec
push
add
scas
add
mov
pavgb
movs
or
push
dec
addr16
xchg
push
push
push
dec
inc
pop
or
pop
sub
and
pop
jae
add
into
out
adc
push
rcr
push
mov
sbb
mov
mov
mov
scas
xor
arpl
mov
dec
sub
xchg
dec
cmc
add
jns
cmp
or
jl
cmp
frstor
or
push
inc
je
xchg
add
pushf
xchg
add
mov
jnp
dec
neg
adc
and
push
push
and
fcom
mov
call
or
push
xchg
or
push
jns
out
iret
push
cmp
nop
dec
jbe
repz
inc
cmp
cmp
mov
lea
sti
dec
imul
inc
inc
mov
icebp
jno
push
add
fnstsw
es
add
in
movs
sar
pop
daa
shl
push
pusha
shr
push
xchg
and
movs
mov
gs
or
bnd
adc
aad
inc
loopne
jmp
jnp
adc
add
sbb
and
fdiv
dec
xlat
or
xchg
(bad)
inc
fist
in
and
clc
enter
test
cmp
cmp
test
cmp
mov
dec
(bad)
shl
sub
mov
mov
pushf
ds
and
loopne
pop
cmp
add
add
pop
loopne
or
or
jl
test
mov
mov
pop
jle
jbe
sbb
mov
fisubr
mov
jns
add
adc
adc
stos
jl
mov
adc
xor
ja
pop
dec
push
push
clc
or
add
test
sub
movs
add
popf
sbb
neg
push
jo
add
add
imul
pusha
jp
inc
cdq
repnz
mov
lahf
pop
adc
int
ins
dec
fist
or
or
xchg
xor
push
dec
jae
call
call
hlt
jns
and
adc
sub
into
dec
xchg
jge
(bad)
push
and
push
inc
mov
and
lea
sbb
dec
and
add
add
bound
sub
jl
sbb
add
xor
pop
xor
ja
jg
scas
jmp
mul
shl
jno
clc
add
cmps
add
inc
mov
(bad)
inc
sub
pop
into
lahf
aas
and
push
cmc
dec
pusha
mov
mov
sti
fucom
repnz
out
das
shl
int3
(bad)
loop
sbb
jb
cs
jge
nop
leave
jae
fnstenv
neg
stc
pop
adc
aas
shl
cmc
cmc
cdq
enter
jl
movs
ins
cmps
dec
dec
push
or
and
jecxz
mov
jle
ins
add
pushf
and
test
push
mov
lahf
imul
xchg
dec
je
cmp
xchg
imul
icebp
sub
sub
pushf
in
imul
addr16
js
in
(bad)
je
fstp
xor
and
fsub
or
aaa
and
inc
push
xchg
mov
jge
int
or
(bad)
cld
add
jecxz
mov
cli
cmps
jg
loope
adc
pop
adc
add
test
ror
cmc
scas
mov
out
fisub
inc
jbe
add
leave
xchg
add
cs
scas
mov
je
data16
push
pop
fisubr
std
inc
cmc
push
pop
pop
and
ins
ror
push
add
in
aam
rol
js
pop
hlt
bnd
test
or
sti
jbe
pop
(bad)
dec
es
mov
cmp
inc
cmps
dec
sub
xlat
iret
retf
pop
xchg
jecxz
and
bound
pop
mov
cmp
rcl
loopne
fwait
ss
mov
jb
jno
sbb
inc
call
movs
fs
push
jp
hlt
(bad)
xor
push
adc
xor
or
cmp
sbb
getsec
dec
jnp
rol
cdq
sbb
cmps
out
sbb
xchg
mov
mov
imul
sub
dec
bound
pop
cs
dec
adc
mov
jmp
mov
push
das
imul
scas
inc
cmp
inc
add
push
jge
ins
mov
out
cwde
cli
add
nop
add
rol
xor
or
rcl
shl
dec
lods
and
xor
and
lods
add
xchg
popa
or
or
push
mov
dec
push
sbb
mov
jno
mov
in
cmps
add
xlat
jmp
inc
fisttp
repz
add
inc
sbb
push
leave
mov
scas
or
and
addr16
and
fcomip
fadd
fdivr
pushf
mov
jne
ret
cmp
sub
jg
xor
pushf
sti
cmps
and
xor
jo
cmp
cld
imul
out
(bad)
cmp
add
add
fsub
xchg
and
movs
test
sbb
ficomp
inc
repnz
mov
jbe
cmps
in
cmp
sub
sti
push
jl
addr16
add
scas
dec
in
imul
or
xor
rcl
mov
loop
sub
push
and
das
pop
ds
out
daa
jb
in
or
ret
ds
clc
sub
dec
int3
mov
fwait
(bad)
cld
outs
jg
mov
mov
cmp
loope
jmp
retf
or
cmp
rcr
push
in
and
enter
in
xchg
jge
mov
mov
in
inc
adc
imul
imul
push
(bad)
fst
aam
mov
fs
cmps
imul
lahf
mov
lahf
push
xchg
out
cs
aam
xor
in
jg
scas
into
in
push
pop
push
shl
shl
outs
out
jle
add
and
cwde
push
imul
sar
add
add
shl
cmps
in
mov
cwde
sbb
jb
cld
clc
nop
add
xchg
out
jmp
xchg
push
xor
jle
add
daa
inc
retf
fs
test
cmp
fmul
inc
fnsave
jb
jnp
enter
add
int3
pop
dec
pop
pop
test
loope
inc
in
jmp
push
hlt
xchg
iret
in
(bad)
loopne
mov
stos
sbb
out
cmps
stc
repnz
xlat
rol
adc
push
inc
scas
into
sub
(bad)
jmp
push
imul
add
enter
test
test
shl
out
xor
into
mov
lock
test
dec
pushf
pop
sub
pushf
iret
xor
mov
(bad)
push
pop
xor
cmps
inc
loop
ss
repnz
test
sbb
mov
rcl
mov
jno
push
rcl
popa
add
ror
cmp
add
gs
jbe
mov
push
pop
pushf
arpl
push
sahf
sbb
jl
enter
xor
add
ret
and
nop
clc
mov
ret
je
xchg
cmc
es
addr16
inc
jae
(bad)
cli
push
jae
sbb
xchg
mov
sbb
leave
sub
jmp
(bad)
cmc
retf
int3
rcl
repz
iret
jl
mov
or
jmp
sbb
mov
int3
cli
loopne
pop
add
sbb
push
test
mov
pop
sub
xchg
add
cs
test
mov
shl
jmp
push
mov
pop
daa
test
inc
or
cmps
pop
mov
pop
stos
or
xchg
fwait
ins
inc
mov
mov
or
mov
call
repnz
mov
add
inc
xchg
data16
mov
inc
mov
add
cwde
add
loopne
aam
jne
movs
cli
xor
inc
cmp
pop
dec
fidivr
mov
push
or
scas
and
arpl
push
imul
ret
push
lea
pop
lea
dec
inc
div
(bad)
ins
pop
inc
frstor
hlt
retf
into
pop
fcmovnbe
(bad)
mov
mov
int3
mov
jg
out
lods
imul
fstp
repz
rcr
push
or
lock
mov
lods
pushf
repnz
ins
push
test
pop
jecxz
test
enter
aaa
fistp
enter
push
dec
pop
cmp
pop
popf
mov
cdq
add
stc
jmp
pop
dec
aad
inc
inc
enter
gs
cmc
mov
mov
stc
mov
cmps
jg
jp
pop
in
and
or
ss
retf
push
out
mov
iret
popf
(bad)
xor
retf
jp
pop
push
xor
jne
jmp
in
std
(bad)
ficomp
les
jns
retf
gs
test
popa
mov
fsubr
mov
stos
movs
cmps
mov
fistp
dec
add
jmp
cmp
mov
sub
movs
movs
mov
xor
push
and
dec
xchg
rcr
lahf
scas
xchg
jle
dec
retf
xor
xchg
test
and
out
jns
inc
add
cmps
int
nop
dec
cmp
mov
xor
jne
cwde
popa
sar
pop
call
(bad)
cmp
add
pushf
add
out
(bad)
outs
inc
or
jl
sub
fimul
lods
add
or
(bad)
ficom
pop
addr16
hlt
(bad)
sub
sub
mov
in
aam
xor
mov
pop
add
ja
sub
aas
push
mov
popf
shl
mov
sahf
aad
stc
rcr
(bad)
ret
inc
pop
fwait
jae
sub
or
jle
cmp
shl
data16
inc
dec
add
xchg
and
mov
ss
movs
lods
sbb
imul
cmps
gs
push
ss
jne
test
jmp
rol
and
jns
push
jmp
pop
jg
test
(bad)
aas
pop
sti
mov
jg
ror
dec
mov
shl
pop
sub
xchg
sahf
add
jmp
clc
fadd
shr
sub
js
cli
and
pop
adc
sbb
jae
dec
mov
add
inc
add
add
lock
mov
arpl
sub
ficom
add
add
cdq
sub
(bad)
imul
xor
xchg
dec
jb
and
xchg
and
jns
jae
dec
push
mov
add
xor
cmps
ins
pop
xchg
js
out
fnstenv
and
push
xchg
sub
out
add
push
add
pop
scas
fistp
es
outs
int3
push
(bad)
sbb
add
push
jmp
sar
cmp
sub
int
retf
xlat
cmovs
test
sub
jp
inc
mov
add
pop
out
(bad)
mov
ins
mov
stos
in
bnd
pop
imul
loop
mov
in
stc
sbb
(bad)
mov
rcr
cmps
int3
sbb
adc
ja
gs
lods
cmp
ins
pop
cmp
jno
jp
inc
pop
test
jmp
jge
fcmovb
mov
push
imul
daa
dec
jmp
cmp
call
or
dec
sub
mov
sbb
in
pop
mov
cwde
inc
imul
and
lock
call
inc
inc
push
leave
leave
and
xor
nop
pop
sbb
add
fsubr
enter
add
idiv
jbe
mov
aam
inc
inc
mov
xchg
xchg
inc
jns
sbb
imul
retf
dec
repz
mov
ror
mov
fs
mov
jmp
retf
ds
enter
cmp
rcl
push
sub
mov
sub
lock
cli
gs
inc
popf
add
mov
adc
add
(bad)
(bad)
add
xchg
dec
inc
inc
mov
in
add
adc
dec
push
dec
mov
jne
dec
addr16
mov
hlt
aad
add
lahf
jge
in
mov
cli
cmp
pusha
cdq
dec
lods
add
rcl
xchg
das
lods
ins
add
push
loop
ds
lods
mov
std
mov
mov
test
leave
dec
fidivr
cmp
out
push
jb
in
jg
fs
add
add
leave
xchg
xchg
xchg
test
mov
cmp
ds
push
sbb
arpl
add
movs
sbb
cmp
push
imul
dec
xchg
or
nop
xor
xor
shl
mov
les
dec
imul
shl
shl
xor
pop
repnz
idiv
arpl
aam
and
jmp
and
xchg
cmp
sbb
stc
jecxz
cmp
es
jp
xchg
xchg
fs
mov
mov
add
out
jnp
adc
push
out
jbe
add
pop
add
xchg
ins
aas
dec
dec
xor
pop
xchg
mov
in
cmp
mov
jmp
sti
cld
sbb
add
dec
xchg
mov
dec
leave
retf
dec
add
pop
popf
adc
sbb
ins
cwde
xchg
int
repz
pop
mov
jg
cmps
scas
es
fidivr
cs
stos
add
clc
loopne
stc
div
push
iret
ds
dec
aaa
adc
cmp
fs
jnp
js
push
ss
mov
add
xor
test
mov
push
rcr
aad
pop
xchg
add
mov
xchg
int3
push
sbb
jmp
jl
aas
mul
xor
inc
ret
cli
mov
test
pop
call
out
pushf
std
push
aam
stc
pop
add
mov
inc
in
mov
dec
pop
pop
ss
arpl
add
iret
xor
adc
outs
call
push
jne
in
sar
jae
imul
out
xchg
jle
push
fs
push
call
movs
mov
pop
loop
mov
div
hlt
xchg
pop
fnstsw
iret
repz
fld
out
jge
arpl
xchg
push
add
rol
cli
jnp
imul
push
xchg
lods
(bad)
add
out
jae
lahf
jge
pop
mov
xchg
repz
add
aaa
inc
clc
aaa
inc
dec
adc
pushf
cmp
sub
retf
add
cmp
gs
addr16
mov
mov
addr16
jmp
jg
jns
retf
fs
stc
lahf
cmp
or
iret
mov
pop
enter
mov
push
push
xchg
cmp
mov
sbb
push
mov
mov
pop
inc
mov
jae
stos
je
jbe
jg
iret
mov
pop
pop
pop
jne
sub
sub
sub
pushf
in
jl
int3
retf
dec
shl
test
mov
(bad)
mov
pop
(bad)
(bad)
jg
jns
and
sbb
push
scas
xchg
stos
jmp
test
aas
and
das
pop
xchg
xchg
pop
jp
ja
sbb
xchg
addr16
jns
xchg
mov
add
add
or
lahf
sbb
data16
mov
mov
shl
add
jl
jecxz
in
sti
iret
retf
jmp
int3
mov
add
pop
dec
cmp
ins
pop
loop
xor
int3
or
xor
cmp
sbb
pop
mov
repz
xor
leave
into
push
xor
popf
adc
sub
mov
xchg
adc
add
in
or
pusha
add
test
cmp
jmp
les
add
fs
dec
mov
xor
push
pop
or
dec
in
les
shl
sub
sbb
dec
or
cmp
into
out
xchg
ins
mov
out
repnz
ss
xor
pusha
push
xor
outs
xchg
sub
aaa
push
add
mov
cwde
and
add
movs
movs
mov
jo
inc
mov
cmps
mov
add
push
xor
pop
cmps
pop
sbb
daa
pop
dec
mov
fisttp
inc
jb
int3
pop
mov
sti
out
jnp
stc
out
retf
idiv
test
dec
and
or
dec
cmp
jle
add
push
xchg
test
enter
out
cmp
xor
xchg
lods
lahf
adc
push
out
jbe
call
inc
push
adc
loopne
icebp
and
arpl
std
retf
div
arpl
cwde
stos
adc
xchg
ret
mov
loop
test
push
fcmovnu
mov
in
push
adc
sub
out
xchg
and
sti
xor
sbb
jl
add
cmp
aas
add
arpl
cwde
mov
xchg
dec
xchg
test
xlat
cwde
(bad)
pop
out
sti
out
(bad)
push
mov
and
(bad)
aaa
fldenv
add
add
fs
cmps
in
jo
scas
jecxz
mov
hlt
jns
stos
add
xchg
xor
mov
jnp
mov
jl
jmp
push
sub
sbb
popf
cwde
cs
fbld
aaa
jne
ss
cmp
inc
inc
jmp
fcomp
cmc
(bad)
lds
dec
lea
cmp
push
inc
ret
mov
outs
repz
mov
shl
mov
push
fidivr
xor
mov
into
cdq
jg
xor
mov
(bad)
(bad)
xor
out
div
jo
xchg
ret
mov
add
aaa
dec
cmp
imul
mov
int
int3
fisttp
pop
cmp
inc
aas
sahf
arpl
dec
mov
inc
mov
pop
pop
mov
(bad)
pop
mov
sbb
jg
adc
push
jmp
xor
outs
sbb
add
sbb
movs
test
cmps
jno
mov
xor
jb
pop
lock
call
mov
ror
xchg
jo
imul
add
cli
imul
out
jns
aam
jl
std
jmp
rcr
mov
or
loopne
(bad)
stc
lahf
cmps
(bad)
hlt
cmps
aas
std
test
or
loop
jb
fdivr
cdq
cwde
loopne
aam
xor
(bad)
mov
cmp
or
xor
adc
mov
in
call
lea
add
pushf
lahf
mov
into
push
cmp
in
xchg
pop
push
xchg
sub
frstor
inc
dec
dec
data16
mov
adc
rcr
out
mov
cmp
pop
inc
xor
xor
movs
and
push
cmp
xor
out
fwait
push
arpl
cmp
cmp
test
call
xchg
repz
pop
or
sub
in
sub
enter
sub
or
xor
mov
leave
add
outs
sbb
mov
sub
imul
sahf
wrmsr
xlat
sub
add
pusha
jo
jnp
mov
dec
jae
ins
push
pop
ds
xchg
dec
fistp
xchg
mov
imul
jecxz
(bad)
lods
sbb
cli
sbb
(bad)
pop
jg
je
std
div
mov
pop
jle
scas
pop
mov
sbb
gs
call
test
adc
jp
jge
pop
lock
jno
imul
ficom
pop
add
fs
inc
scas
dec
dec
imul
shl
xchg
bound
cmp
pushf
sbb
cmp
fcomp
arpl
pop
std
mov
adc
(bad)
leave
in
stos
in
inc
sahf
scas
outs
adc
imul
mul
das
or
cwde
sub
xchg
rol
je
ins
mov
sub
(bad)
mov
sub
rol
pop
jbe
xchg
or
movs
ja
pop
loop
rol
add
jmp
cmp
les
sbb
inc
fwait
movs
sbb
mov
mov
push
call
sub
js
std
rcr
popf
out
mov
cwde
sti
or
addr16
mov
repz
jmp
add
retf
scas
sbb
fsub
push
push
mov
sbb
sbb
ins
scas
stc
dec
daa
es
fxrstor
call
adc
mov
dec
rol
xchg
jmp
xchg
cs
push
leave
sahf
xor
dec
outs
inc
lods
cmps
inc
mov
shl
sbb
mov
stos
pop
std
sbb
aas
jecxz
push
fdiv
ret
in
add
xor
jnp
adc
(bad)
dec
dec
dec
mov
stos
lods
xchg
call
push
pop
and
gs
pop
pop
add
pop
sub
inc
js
test
test
stos
sub
movs
mov
mov
test
and
sub
mov
and
jl
iret
adc
sub
and
les
cli
cs
repnz
retf
test
(bad)
xchg
xchg
lahf
sub
cmps
push
enter
in
mov
aam
dec
dec
add
xor
sbb
or
mov
mov
add
not
mov
sub
fst
shr
or
in
fcom
loopne
mov
fild
aam
xor
lea
sbb
sub
repz
test
sbb
shl
iret
cmp
and
je
ja
xchg
or
add
dec
jle
mov
add
adc
cwde
or
xor
and
mov
sbb
push
shl
and
daa
pop
call
xor
mov
add
mov
xchg
(bad)
cmp
int3
cmp
add
stc
repz
jg
call
jb
(bad)
neg
pop
outs
cmp
fcom
add
fwait
inc
jnp
call
scas
shl
mov
retf
push
shl
cli
fsub
arpl
shr
into
jae
ss
add
inc
ret
jl
mov
imul
out
scas
pop
mov
mov
neg
sti
sar
aas
xchg
dec
aas
std
push
mov
imul
fst
lea
lahf
xchg
scas
outs
out
inc
pop
sub
frstor
sahf
shl
mov
xchg
inc
pusha
adc
fs
inc
pop
test
lods
rol
push
push
xchg
cmps
dec
mov
mov
mov
shl
popf
jnp
ja
jne
inc
scas
dec
push
shr
jl
out
pop
popa
into
jmp
call
lds
adc
mov
inc
(bad)
sbb
lahf
ins
fidivr
sbb
in
int3
xchg
test
cmp
push
cmp
mov
pop
idiv
cmps
ins
repz
lahf
cmp
jle
loop
inc
cs
cmp
mov
pop
sub
cdq
rcr
pop
and
adc
cld
fisub
xor
(bad)
loop
adc
sub
xchg
xchg
add
ror
inc
les
xchg
das
cmps
repz
add
dec
sahf
imul
jge
pop
iret
daa
sti
lahf
jge
mov
call
gs
xchg
stc
retf
fisub
test
clc
and
(bad)
sbb
add
jae
mov
xchg
sub
xor
in
aas
jbe
cmp
std
xor
mov
xlat
in
jne
outs
dec
xchg
lds
outs
sub
std
xchg
gs
pusha
sub
out
adc
in
mov
loope
sbb
data16
adc
or
mov
adc
jg
dec
shl
xchg
mov
xchg
add
clc
enter
div
outs
outs
stos
dec
dec
cmc
enter
sub
xor
push
daa
mov
push
sub
push
mov
add
arpl
add
int
imul
jg
dec
cmps
popf
jmp
movs
inc
dec
popa
jno
and
push
stos
adc
repnz
das
push
out
jb
xchg
dec
jle
pop
or
sahf
dec
call
repz
mov
cmps
dec
adc
(bad)
(bad)
clc
(bad)
das
jge
jnp
add
fcom
cmovge
inc
xchg
mov
retf
sbb
(bad)
fs
cmp
add
add
cli
call
inc
xor
sbb
xor
out
(bad)
sub
sbb
dec
aaa
pop
mov
inc
add
cmp
inc
and
mov
and
cmp
ror
mov
ins
mov
dec
cmp
jae
jecxz
int3
ret
mov
enter
(bad)
pop
sub
lea
fs
imul
cs
cmp
fld
out
pop
lods
or
mov
jne
cmp
or
jae
shl
mov
add
lock
xchg
add
jmp
fidiv
xchg
mov
loope
push
or
fbld
loopne
stos
mov
mul
inc
add
(bad)
cmp
iret
ds
lods
add
pop
rcl
aad
(bad)
push
sub
xchg
mov
cmps
outs
mov
jae
xchg
push
leave
retf
pop
mov
pushf
shl
ja
out
sub
mul
ins
push
mov
inc
loopne
imul
ins
dec
inc
test
mov
cmp
adc
adc
jmp
pop
cmp
aaa
sbb
xchg
xchg
rcl
pop
out
or
sar
daa
into
dec
dec
push
pop
scas
(bad)
adc
dec
sub
push
push
addr16
loop
fstp
rcl
cmps
pop
adc
add
add
je
sbb
add
imul
jmp
mov
xor
dec
pop
jne
or
inc
lods
ss
inc
mov
std
jae
aas
mov
sar
into
imul
add
xor
or
(bad)
inc
cmps
(bad)
jnp
mov
fisub
ss
fcomi
int3
js
xor
push
sti
fs
push
test
call
xlat
cld
sti
into
stc
fdiv
cmps
mov
push
mov
int3
pop
fwait
jbe
jl
mov
adc
pop
not
mov
jb
xchg
push
pop
setnp
nop
inc
mov
push
adc
lea
pop
xor
push
arpl
add
stos
inc
fidivr
or
add
cmp
outs
pop
xchg
adc
inc
dec
ds
xchg
xchg
cld
lock
xchg
aam
gs
lods
and
movs
rcr
or
or
repz
ror
pop
repz
stc
sub
(bad)
sub
inc
push
xor
in
repz
hlt
rol
cwde
shl
xchg
cld
mov
repnz
xlat
rol
out
cmps
xchg
xchg
repz
inc
into
loope
xchg
pushf
fstp
je
mov
lahf
cdq
add
sub
add
cmp
dec
lods
(bad)
xor
or
xor
jnp
ret
mov
push
sbb
fild
sub
xchg
lods
ins
xchg
xchg
aad
sub
xchg
cmp
sbb
je
push
push
and
in
push
imul
cmp
call
aad
sbb
sbb
cmp
dec
push
add
mov
test
add
mov
cmp
inc
in
shl
or
fidivr
jl
cmp
js
ficom
xlat
iret
inc
inc
(bad)
(bad)
xchg
clc
in
xor
jle
repnz
scas
(bad)
cld
sti
jl
es
inc
div
shl
sbb
popf
add
adc
cmp
arpl
mov
cmp
push
mov
push
push
add
jnp
hlt
mov
mov
pusha
aas
jp
mov
mov
mov
mov
loope
mov
cmp
push
into
into
retf
mov
xlat
dec
arpl
mov
xchg
enter
and
push
pop
pop
pop
add
dec
mov
loopne
dec
fnstenv
fwait
imul
mov
aam
sub
xchg
add
pop
pop
movs
movs
cmc
xor
and
retf
inc
outs
inc
jg
push
test
and
mov
ret
imul
cdq
jbe
adc
aaa
fisttp
mov
test
inc
fwait
(bad)
push
cli
push
retf
shl
mov
sahf
in
lea
sub
cmc
xor
lea
out
or
sbb
xlat
stos
add
fist
sbb
cmp
fcomp
ins
call
mov
sahf
xchg
lods
cmp
sub
repnz
loop
jecxz
in
add
cmp
aas
jnp
lock
(bad)
pop
jne
adc
dec
pop
inc
mov
add
xchg
shl
pop
sti
or
fstp
aad
xchg
xchg
ins
ret
ja
cwde
fcomp
or
icebp
push
(bad)
sar
icebp
inc
mov
loop
(bad)
push
out
pop
loope
xor
mov
popf
fs
loop
mov
add
outs
popa
inc
sbb
sub
xor
cdq
imul
jg
call
jmp
in
dec
jp
test
adc
or
rol
ins
loop
mov
jbe
fsubr
(bad)
mov
mov
test
call
pop
test
inc
dec
push
adc
dec
inc
push
add
add
xchg
enter
mov
dec
fistp
seto
lods
pop
mov
add
or
and
mov
xor
loope
cmp
push
daa
loopne
std
sar
popf
mov
inc
adc
sbb
cdq
std
and
lock
push
ror
add
jecxz
jmp
or
jp
movs
in
fwait
sahf
aam
repnz
mov
push
cdq
jbe
fld
ret
jne
ss
(bad)
dec
inc
mov
in
pop
loope
jmp
lahf
and
fimul
in
inc
mov
sub
pushf
mov
and
dec
retf
mov
outs
ins
ins
sbb
xchg
xchg
mov
icebp
fxam
jo
fs
pop
ins
dec
jae
int
mov
cwde
push
setp
enter
jmp
pop
xor
dec
retf
xchg
fadd
dec
xor
aam
mov
test
test
sbb
lock
pop
add
or
pop
mov
xchg
icebp
call
inc
inc
movs
lods
mov
add
jno
dec
repz
inc
xor
cs
fstp
rcr
or
mov
(bad)
fnstsw
and
add
xor
sahf
ins
outs
pop
dec
(bad)
dec
mov
popf
xor
aad
imul
add
cmp
pop
aad
and
cmp
imul
test
push
in
jno
stos
xor
mov
xor
and
add
mov
dec
pusha
inc
jmp
add
arpl
bound
or
mov
pop
aaa
jl
es
and
arpl
pop
mov
into
int
aam
and
adc
popa
add
xor
mov
add
cmp
inc
mov
shl
(bad)
lea
into
(bad)
cmp
(bad)
aas
inc
test
shl
rcr
mov
fwait
sbb
cmp
adc
sub
dec
add
bound
imul
lds
and
mov
push
mov
arpl
mov
cwde
xor
daa
mov
cmp
out
cmp
xor
add
movs
mov
das
addr16
movs
mov
mov
es
xor
aas
aaa
(bad)
pushf
mov
arpl
adc
test
int
sar
(bad)
xchg
leave
sbb
cwde
rcr
adc
fsub
or
cmp
sub
imul
aas
fistp
push
fcmovbe
stc
repnz
js
add
push
jmp
mov
call
adc
pop
pop
daa
sub
inc
xchg
push
adc
mov
sahf
jl
inc
das
cmps
lahf
xchg
shl
push
rcr
push
mov
xchg
xchg
adc
add
inc
inc
mov
mov
ds
mov
inc
jge
mov
mov
clc
jl
mov
imul
push
push
lahf
jnp
xchg
stc
jne
add
sub
mov
adc
sti
mov
inc
xor
dec
mov
int
rol
ds
hlt
fcomp
xchg
jne
xchg
sti
(bad)
repz
clc
icebp
xchg
xor
(bad)
pop
pop
test
hlt
in
enter
xchg
shl
int3
fcom
cmp
sbb
movs
mov
dec
mov
cmp
xor
pop
gs
imul
jmp
and
es
sahf
hlt
sub
int
xchg
repnz
icebp
jb
stos
jmp
pusha
pop
sub
xchg
sahf
cmp
sti
dec
xor
out
test
or
sub
leave
iret
xor
daa
test
pop
lahf
popa
sub
hlt
outs
add
out
mov
and
in
popf
cmp
in
jnp
sbb
pop
push
mov
pop
push
stc
dec
push
push
xor
inc
push
mov
loopne
movs
les
or
xchg
or
push
mov
add
xchg
popf
xchg
sub
fld
xlat
jns
popf
(bad)
jle
jo
leave
xchg
popa
push
shr
mov
jno
out
sbb
dec
ins
in
sbb
or
dec
fdiv
ret
sbb
mov
dec
dec
retf
cmps
xor
sbb
mov
push
pop
ins
pop
push
out
stc
inc
jg
lds
fdivr
pop
ss
xor
data16
ret
imul
bound
or
mov
xor
jbe
shr
lods
retf
xchg
nop
xor
add
into
movs
xor
ins
inc
mov
inc
cmps
inc
fwait
(bad)
sbb
fs
das
fbld
and
out
pushf
pop
inc
or
cmp
jbe
movs
iret
imul
lea
cld
push
cld
data16
fadd
pop
xchg
lea
aaa
out
sbb
and
add
fs
jno
adc
sbb
inc
pop
daa
fstp
push
adc
cmps
dec
dec
inc
mov
test
add
jns
in
shl
test
cmp
iret
jle
fcmovb
pushf
push
js
nop
pop
and
sti
mov
clc
pop
sbb
or
imul
xchg
cmp
sbb
movs
mov
pop
push
ficom
dec
push
test
xchg
test
sti
sahf
test
push
fst
xchg
(bad)
jecxz
xchg
xor
(bad)
sbb
out
les
int
mov
les
push
fdecstp
jnp
js
push
outs
mov
shl
ret
and
jecxz
or
outs
add
add
outs
outs
test
(bad)
rcr
jmp
pop
jae
mov
shr
push
dec
push
lods
(bad)
(bad)
stc
dec
dec
pop
mov
add
sbb
jb
add
xchg
hlt
sbb
aam
jecxz
sub
rcr
add
adc
sub
retf
retf
jns
addr16
stc
xor
pop
jecxz
cs
inc
icebp
mov
mov
or
js
push
sbb
sub
enter
inc
mov
and
adc
push
mov
imul
idiv
cmp
out
push
jp
add
dec
add
jb
and
cs
mov
mov
xor
sub
xor
push
or
ss
dec
ja
nop
jae
pop
rol
sar
dec
loope
add
fwait
sub
out
fbstp
xlat
mov
call
es
add
loop
aad
aad
cdq
xchg
adc
xor
aas
push
stos
stos
rol
ret
fld
or
mov
xor
push
mov
mov
or
enter
pop
push
sbb
int3
cdq
iret
mov
cmp
jb
or
je
ret
push
jae
mov
aad
out
sti
lods
jge
dec
ret
pop
xor
push
jp
push
aam
adc
mov
mov
retf
mov
fdivr
ins
or
sub
adc
outs
xchg
les
inc
dec
dec
jnp
xor
xchg
sub
push
or
fiadd
repnz
test
push
xor
clc
out
xchg
into
ds
jecxz
adc
jp
ins
in
add
and
stos
pushf
les
cmp
jne
popf
xchg
xchg
xchg
dec
outs
push
sub
dec
pushf
out
retf
sbb
loope
fcmovb
jl
mov
pop
add
rcl
stos
inc
test
push
in
aaa
cmp
mov
mov
dec
jns
ss
mov
cmp
cli
mov
aam
gs
js
push
lods
fwait
jns
(bad)
mov
or
es
mov
imul
outs
pusha
cli
xor
inc
sahf
pushf
xchg
xchg
sti
sbb
pop
mov
inc
imul
sub
add
out
push
dec
or
pop
and
call
sub
movs
mov
push
repnz
cmc
in
jp
mov
leave
sbb
xchg
mov
adc
nop
and
or
(bad)
out
mov
cmp
dec
sti
aas
out
push
aam
cmp
daa
inc
push
cmps
leave
test
cs
(bad)
imul
arpl
arpl
push
movd
sahf
int3
jae
jb
mov
mov
fstp
shl
mov
test
into
nop
nop
and
inc
mov
in
lahf
xchg
mov
fisttp
xchg
shl
mov
mov
push
ins
mov
out
inc
bound
mov
pop
clc
outs
ins
aas
add
int3
mov
push
daa
pop
aas
mov
jge
cwde
jmp
sbb
(bad)
test
dec
ret
cdq
pushf
retf
shl
ja
(bad)
sub
cmp
sbb
jbe
adc
mov
out
fsubr
cmp
jmp
add
sub
inc
pop
in
push
mov
cli
bnd
mov
ds
mov
out
lods
pop
int
scas
clc
mov
shl
pop
dec
dec
or
das
mov
jg
jmp
mov
add
dec
jo
aaa
dec
sbb
mov
mov
shl
inc
inc
cs
push
push
scas
add
jo
cmp
mov
cwde
jmp
imul
test
sub
test
pusha
mov
cmp
out
inc
popa
inc
mov
test
pushf
pop
push
cmp
ja
stos
outs
sub
aaa
fidivr
outs
in
and
mov
lahf
and
imul
aaa
popf
sbb
push
xor
add
mov
mov
add
dec
add
mov
mov
dec
(bad)
or
jne
and
and
movs
movs
mov
mov
inc
add
xchg
xor
cmps
xor
xchg
rcr
scas
retf
xor
ret
pop
daa
inc
mov
and
sub
xor
inc
mov
mov
cmp
adc
add
test
xchg
dec
sub
and
mov
inc
pop
mov
inc
cmp
xchg
sub
fdivr
ja
rcl
mov
retf
mov
sub
xchg
jb
fsub
push
sbb
mov
movs
mov
mov
(bad)
hlt
adc
test
push
and
push
or
xor
xchg
icebp
out
sti
call
adc
dec
sub
in
mov
add
xchg
or
test
repz
aad
mov
test
and
pusha
mov
ss
dec
cwde
cdq
add
ja
ja
iret
repz
lock
out
push
mov
ss
call
out
imul
fucomp
retf
xor
mov
fcmovnbe
pop
ret
gs
inc
xchg
movs
enter
sbb
out
mov
in
fwait
(bad)
(bad)
jle
loopne
test
mov
dec
out
push
mov
fisubr
and
shl
pop
das
ret
mov
push
iret
cmp
movs
xchg
fst
pop
(bad)
into
arpl
(bad)
repz
hlt
dec
in
pop
popf
sub
fst
push
push
and
(bad)
pop
(bad)
aas
ficom
(bad)
jae
jg
or
je
jb
mov
aaa
jne
pushf
ins
aas
xor
dec
mov
out
imul
mov
and
cmps
arpl
sbb
cmp
xor
dec
sub
loopne
cmp
out
ss
xchg
mov
ss
mov
mov
pop
add
cmc
movntq
(bad)
outs
js
nop
xchg
test
xor
ins
retf
xor
aas
daa
pusha
pusha
fild
cs
add
call
dec
mov
test
add
dec
movs
addr16
inc
jl
sub
out
mov
inc
popf
mov
add
ret
xchg
mov
outs
add
test
retf
or
adc
add
xor
sbb
or
dec
dec
mov
mov
call
sub
xchg
xchg
pop
shr
or
cmp
cmp
lea
adc
icebp
icebp
icebp
inc
inc
pop
or
dec
out
cmp
sbb
jbe
adc
movs
test
pop
sahf
jg
dec
cmp
sbb
cli
sbb
xlat
mov
loop
arpl
aaa
fisubr
lods
and
cmp
xchg
push
and
cmp
retf
and
fadd
pop
inc
xchg
(bad)
or
xchg
xchg
cmps
adc
mov
(bad)
dec
sbb
loopne
xchg
inc
movs
fwait
pop
test
(bad)
sti
lods
lahf
lods
das
shl
scas
aad
xchg
adc
add
adc
fcom
mov
inc
fs
lods
push
pop
dec
adc
inc
adc
push
pop
pusha
and
cli
pop
lahf
mov
sahf
fld
inc
jae
div
nop
cmps
mov
fst
and
or
es
retf
ret
xchg
shl
jae
dec
push
xor
mov
dec
in
iret
enter
rcr
pop
sub
cs
xchg
out
or
cli
push
lods
stos
nop
sbb
arpl
pop
stos
xchg
cli
xchg
adc
sub
pop
popf
bswap
sub
cli
pop
leave
das
dec
add
jo
in
jp
and
jbe
add
jmp
adc
(bad)
div
xor
pushf
xchg
push
gs
xchg
jae
and
dec
jae
ficom
repnz
jnp
test
test
loope
and
outs
dec
or
fsub
mov
mov
push
xor
mov
sbb
out
shr
jb
or
mov
vpinsrw
sub
dec
aad
mov
dec
sbb
(bad)
push
mov
out
fucomp
shl
rol
inc
mov
jno
aas
or
cmp
mov
pop
pop
pusha
and
imul
out
pop
jbe
push
sub
cmp
push
ja
(bad)
gs
push
xlat
pop
dec
jbe
mov
daa
inc
mov
jmp
cld
test
shl
cwde
in
dec
sbb
push
add
pusha
fcmovbe
jl
mov
in
adc
add
add
jle
add
repz
xchg
out
jmp
cli
sti
cmp
xchg
add
adc
arpl
xor
ja
jge
scas
sub
fdivr
std
test
dec
mov
repz
jne
xchg
jge
iret
iret
dec
pop
fcmovne
and
sub
add
out
push
scas
add
jecxz
idiv
out
pushf
ss
or
dec
cmp
add
gs
jmp
fidivr
sahf
sbb
sub
pop
cmp
ins
mov
(bad)
mov
adc
jae
pusha
xchg
dec
test
inc
gs
jp
jb
jp
pop
or
add
add
sub
xchg
cmp
add
pop
add
sbb
sbb
cld
(bad)
add
(bad)
sbb
jbe
xor
mov
shr
(bad)
cmc
fdiv
in
rol
adc
test
xchg
xchg
adc
push
xchg
in
mov
dec
xchg
int3
jo
(bad)
cmc
adc
sahf
push
push
xor
into
iret
addr16
hlt
dec
adc
sbb
retf
dec
sbb
ins
xchg
aam
sub
out
push
(bad)
cs
cld
and
jp
out
popa
mov
fs
dec
xor
cli
adc
mov
sahf
xchg
cld
ret
retf
inc
popa
dec
xlat
jae
pop
imul
retf
sti
pop
outs
or
or
jns
xor
pop
leave
xchg
sub
adc
je
cmp
loope
adc
sub
push
and
mov
outs
iret
out
inc
xchg
push
outs
pop
daa
dec
in
in
sub
or
jns
sbb
add
fbstp
out
nop
fdivr
sbb
mov
in
into
cmp
in
fisubr
aad
pushf
sti
inc
mov
call
dec
cdq
pop
sub
xor
and
mov
dec
inc
xchg
and
mov
(bad)
aaa
shl
jmp
xor
scas
xchg
adc
mov
sub
pop
cmps
add
add
pop
or
addr16
mov
cmp
arpl
test
aam
cmp
(bad)
int3
pop
gs
repz
jmp
fbstp
movs
mov
push
shl
in
ror
or
sti
(bad)
mov
inc
or
retf
sub
cmp
imul
mov
sub
(bad)
cld
ss
lahf
std
mov
cld
jnp
pop
and
aas
push
push
fldenv
std
xchg
popf
xchg
cmp
jns
add
dec
nop
mov
or
cli
push
pop
leave
dec
stos
bound
xor
dec
mov
call
and
in
mov
pop
(bad)
mov
cmps
add
sub
fidivr
pop
(bad)
jne
xlat
enter
mov
jne
push
push
test
neg
jle
xchg
add
aaa
test
fdivr
mov
arpl
dec
ret
mov
sbb
push
cmp
(bad)
movs
mov
arpl
sub
loopne
jle
jle
fldenv
ins
outs
repz
pop
push
dec
idiv
mov
sub
(bad)
imul
aad
iret
call
mov
sbb
std
mov
bound
in
fdivr
(bad)
out
repnz
mov
mov
mov
add
sub
dec
add
add
pop
stos
pusha
dec
stc
xchg
repz
add
cwde
out
xchg
jmp
xor
xchg
push
dec
data16
sub
and
sti
mov
push
out
ins
mov
or
xor
mov
xchg
add
dec
jle
add
pop
add
add
icebp
or
add
test
rol
cli
aaa
mov
push
retf
and
add
ror
pop
jae
add
(bad)
sahf
nop
add
ja
mov
push
sbb
pop
add
mov
into
sbb
scas
cmp
inc
es
lods
mov
mov
xchg
add
lock
jge
push
pop
gs
xor
repz
mov
retf
inc
jmp
arpl
sar
mov
mov
push
leave
iret
dec
adc
loopne
loope
inc
into
int3
sub
pop
adc
pop
xchg
inc
sbb
mov
sbb
loope
and
cmp
xor
leave
cmps
inc
xor
xor
adc
ja
ficom
mov
outs
and
sahf
popf
jnp
out
psrlq
aaa
sub
inc
push
cmp
xor
and
inc
inc
jnp
mov
inc
(bad)
xor
jge
bound
mov
push
sub
cmps
je
push
test
cmp
mov
sub
(bad)
cwde
add
arpl
(bad)
adc
cmp
jnp
pop
cmp
in
fsub
jno
popa
adc
dec
xor
cmp
std
mov
push
mov
movs
xchg
push
and
and
cs
gs
test
lahf
pop
adc
adc
push
mov
(bad)
fidiv
mov
mov
cli
ja
and
fsub
xchg
les
mov
xchg
ins
retf
mov
mov
mov
dec
stos
jmp
sbb
add
jl
sub
in
or
mov
push
leave
inc
pop
dec
dec
lock
sahf
pop
out
push
or
imul
sbb
shl
gs
push
xchg
ins
data16
inc
ss
mov
jmp
ins
push
mov
outs
and
in
test
ins
dec
and
dec
movs
mov
mov
jae
sbb
sahf
inc
jnp
jmp
pop
sbb
mov
push
int3
sbb
retf
lods
push
pop
jnp
lds
sbb
cld
icebp
aaa
aas
sub
adc
lea
xchg
adc
dec
push
mov
aaa
dec
jns
mov
lock
not
jb
mov
pop
pusha
cdq
mov
fbld
adc
pop
dec
(bad)
call
ins
ins
sbb
cmp
mov
in
clc
sub
int3
mov
mul
fcom
xor
cmc
shl
xchg
jmp
adc
and
cmp
sar
cli
rcr
jb
pop
pop
es
popa
sbb
scas
adc
aad
add
sub
add
inc
imul
repnz
xor
rcl
sbb
pushf
jge
cld
ins
cmp
shl
xchg
pop
(bad)
loop
mov
jns
jnp
mov
xchg
push
imul
mov
fild
dec
push
add
add
mov
pop
test
sub
(bad)
dec
add
clc
and
jg
mov
add
sbb
loopne
in
push
jb
xor
add
cmp
add
add
mov
mov
jecxz
jmp
cmp
jg
retf
ds
in
jns
stc
sti
jb
aam
cdq
sahf
sahf
xchg
out
dec
sub
dec
xor
cmp
popf
cmp
iret
pusha
nop
rol
(bad)
outs
mov
adc
call
xor
sub
mov
ins
or
jg
push
mov
fisttp
cdq
jmp
and
rcr
jne
pop
les
or
bound
repz
push
and
mov
sub
add
cmp
sub
iret
popf
loope
out
test
mov
sbb
popf
mov
mov
jl
mov
mov
outs
add
mov
sub
fldln2
loope
push
test
sti
xchg
iret
in
jno
mov
fnsave
push
call
sahf
jbe
shl
gs
popa
scas
dec
cmp
push
pop
or
cwde
adc
jns
sbb
inc
fs
retf
cli
cmp
movaps
pop
xor
push
std
test
jbe
jns
in
outs
fcmovne
je
mov
ret
and
out
pushf
dec
push
push
call
ret
clc
sub
or
loopne
pop
call
arpl
and
xor
sar
nop
mov
(bad)
sub
fldenv
push
(bad)
mov
fwait
cld
shr
mov
sbb
rcl
movs
mov
pop
mov
adc
pop
cdq
push
sti
mov
mov
and
xchg
mov
pop
dec
out
pop
and
add
xor
out
call
dec
mov
inc
inc
pop
sub
add
pop
cwde
ins
jmp
in
dec
(bad)
pusha
mov
inc
mov
ss
adc
add
sbb
lods
inc
(bad)
div
mov
mov
je
xchg
and
mov
fld
jecxz
test
imul
popa
cdq
fsubr
bound
xchg
sbb
out
dec
cmp
xor
dec
and
dec
gs
retf
jle
mov
xchg
jge
movs
popa
repnz
mov
push
js
or
jmp
sbb
and
popf
in
loope
push
sti
ds
jmp
(bad)
in
lahf
jmp
lods
shl
lds
add
(bad)
jp
xor
inc
sbb
fistp
out
retf
enter
dec
bound
outs
push
pop
int
jne
add
mov
xchg
aaa
xor
push
push
mov
adc
jmp
add
adc
mov
mov
cld
and
imul
adc
out
cmps
loop
ja
int3
dec
xchg
dec
outs
fdivr
sahf
add
add
retf
repnz
repnz
mov
push
test
jge
jmp
rcl
cmps
aas
sti
lds
mov
jmp
sahf
and
or
sbb
sbb
sbb
data16
sar
xor
or
sbb
or
adc
adc
iret
or
sub
and
push
outs
pop
mov
test
retf
pop
je
int3
aam
(bad)
and
push
mov
push
inc
add
pop
lods
sub
and
aad
or
cmps
sub
jle
and
dec
sahf
pop
out
iret
sub
add
push
in
mov
outs
gs
int3
retf
(bad)
sar
outs
push
push
jo
dec
out
adc
and
aam
dec
rep
scas
cmp
jp
sbb
out
dec
mov
jle
push
push
add
add
push
and
dec
ror
movs
lods
push
mov
fnstenv
mov
into
xlat
mov
test
rcr
arpl
mov
adc
pop
and
call
add
mov
bound
jge
jmp
mov
jno
in
pop
add
add
push
adc
nop
inc
and
or
mul
ds
mov
jmp
adc
dec
outs
imul
push
ds
rol
or
out
xor
push
mov
movs
stos
dec
adc
nop
ins
xor
(bad)
sti
adc
aam
push
mov
push
popa
pop
movs
xor
jmp
jmp
test
aad
xor
add
xor
push
mov
ret
sar
cmps
jns
mov
mov
push
jmp
add
imul
(bad)
rcr
jecxz
fsubr
(bad)
or
sbb
scas
cmps
mov
out
inc
mov
sub
std
stos
inc
adc
fs
mov
mov
add
in
xchg
rol
fnstenv
mov
pop
jmp
lahf
adc
dec
dec
rcl
jne
rcr
adc
imul
icebp
aas
fwait
scas
mov
out
(bad)
and
pop
xor
shl
out
js
jle
cmp
stc
pop
add
daa
add
rol
add
pop
aaa
outs
xor
les
mov
mov
not
loopne
mov
retf
adc
arpl
loopne
mov
adc
cmp
jl
outs
test
push
adc
jnp
jecxz
or
xchg
adc
daa
sbb
loope
mov
ins
enter
dec
lahf
in
call
in
mov
std
jmp
or
in
mov
and
inc
add
(bad)
mov
cmps
mov
xchg
(bad)
add
retf
movs
or
retf
cld
outs
(bad)
in
pop
cli
inc
pop
(bad)
loop
das
mov
in
adc
dec
dec
dec
leave
call
in
xchg
mov
or
mov
or
div
(bad)
jmp
push
in
icebp
jae
scas
cli
int3
in
cmp
sbb
xor
arpl
repnz
cmp
sahf
imul
jl
mov
mov
push
dec
dec
dec
(bad)
sub
js
adc
movs
adc
in
fsub
add
xlat
xchg
ret
cmps
out
into
stc
xchg
js
idiv
and
sub
or
xor
jae
xor
sbb
add
adc
xor
test
ret
ret
jge
dec
jo
push
sub
sub
inc
mov
push
aad
adc
jo
shl
call
imul
repnz
cdq
adc
ret
aaa
shr
aad
int3
sti
into
fs
ret
mov
cli
mov
(bad)
into
popf
inc
and
jae
sub
js
(bad)
fs
push
mov
xor
jg
sub
cmps
out
bswap
mov
lds
in
jae
xor
inc
lods
ins
cmps
sti
ss
dec
or
(bad)
sbb
mov
and
xor
not
addr16
mov
mov
dec
es
je
mov
mov
out
nop
sub
cmps
sbb
dec
rcl
pop
and
test
std
xor
test
jo
inc
jae
cmp
fs
cmp
ins
xchg
mov
xchg
aam
pop
sbb
sbb
sub
xor
neg
mov
mov
jl
lods
pop
fisubr
inc
add
cmp
and
and
mov
jge
mov
xchg
xor
ja
fs
inc
arpl
mov
dec
data16
cmp
cmp
ja
jns
shl
fisttp
inc
xor
fisttp
jno
mov
add
arpl
mov
out
dec
add
(bad)
jle
adc
jle
fwait
retf
lock
push
loope
cmp
mov
imul
adc
aad
fcos
or
es
xor
push
(bad)
repz
fcmove
stc
fsub
rcl
and
out
xchg
xchg
adc
dec
add
rol
xchg
inc
call
aas
test
sbb
out
jle
shr
mov
xchg
jne
xchg
cwde
cmp
xchg
cmp
call
bound
mov
mov
sbb
(bad)
dec
xor
or
xchg
stos
add
adc
and
fistp
(bad)
xchg
inc
(bad)
in
and
jnp
cld
mov
cdq
test
clc
stos
mov
hlt
inc
jg
out
(bad)
mov
jb
fidiv
sbb
outs
scas
xchg
fstp
mov
es
and
js
inc
or
icebp
xchg
test
pop
mov
fnstenv
inc
gs
mov
call
int3
pushf
sbb
out
pusha
sbb
(bad)
push
xor
xor
and
push
xor
or
xchg
int
xchg
jae
jns
jmp
sbb
hlt
jg
lahf
iret
pop
loop
pop
push
jnp
mov
xor
xor
sbb
es
inc
mov
cli
xchg
adc
inc
fidivr
ins
jge
inc
inc
ror
dec
xchg
(bad)
add
sub
mov
jp
mov
add
add
fwait
xchg
rcl
adc
call
scas
xchg
push
jo
lock
add
fistp
add
xchg
adc
iret
cmps
outs
fisttp
std
call
pop
(bad)
adc
xchg
aam
leave
leave
dec
nop
dec
fwait
cmp
lods
add
lahf
pop
push
push
ins
fmulp
fs
clc
xchg
sti
or
clc
push
retf
pop
mov
mov
sub
adc
push
mov
xchg
sti
ins
and
fistp
inc
mov
loope
lahf
push
int
fistp
aad
(bad)
retf
mov
dec
push
jb
mov
add
push
cmp
test
pusha
(bad)
imul
mov
imul
jmp
dec
jbe
test
sub
push
cmp
push
loope
int3
cld
dec
add
cmp
lods
pop
cli
jb
jae
push
xor
jp
sub
xor
cmp
xor
(bad)
pop
inc
retf
mov
seta
fcomp
imul
int
scas
test
add
int3
cmps
gs
or
bound
and
inc
mov
mov
pop
pop
out
cmp
cmc
xchg
enter
adc
and
cdq
push
push
xchg
lea
or
adc
jnp
cld
bnd
mov
imul
fdivr
hlt
mov
jnp
mov
mov
fwait
out
jle
pop
mov
jl
sbb
xor
ins
pop
stos
and
mov
ret
sbb
fistp
inc
loop
add
das
cmp
(bad)
(bad)
or
pop
sub
test
push
and
loope
mov
hlt
lods
mov
pop
loope
dec
es
xchg
push
push
xchg
sub
punpcklbw
cmp
(bad)
adc
push
in
das
mov
out
dec
pop
nop
or
push
sub
test
inc
repz
scas
mov
push
retf
and
mov
out
(bad)
std
push
pop
dec
cld
into
movd
retf
ja
jnp
outs
fdivr
xchg
xchg
loope
or
jae
call
jae
push
sub
pusha
mov
into
leave
inc
hlt
dec
push
or
mov
loop
gs
dec
jbe
fisubr
iret
dec
retf
jne
into
test
ins
nop
loopne
pop
or
not
popf
cmps
int3
mov
ret
ret
push
cmps
clc
stc
rcl
mov
cli
jno
inc
loop
gs
(bad)
pushf
out
call
stc
lahf
lods
mov
jge
add
shl
adc
and
pop
mov
inc
cdq
dec
pop
idiv
xchg
data16
dec
add
mov
and
dec
jp
jne
aam
enter
test
mov
movs
out
mov
jnp
cmp
or
aaa
sub
adc
daa
jmp
je
mov
mov
leave
(bad)
add
(bad)
cmp
push
xor
outs
call
jno
rcr
arpl
mov
hlt
sub
xor
xchg
ins
cmp
inc
out
out
lahf
and
mov
mov
(bad)
in
jmp
jo
inc
shl
inc
jnp
dec
ret
dec
aam
cli
xor
repz
fldcw
sbb
loop
inc
ficomp
jae
jb
aaa
xor
gs
sub
inc
pop
ss
dec
dec
push
pushf
movs
cmps
inc
cmp
loope
repz
aaa
daa
add
mov
fwait
push
ss
stos
lock
sub
out
push
xchg
xchg
adc
fidivr
push
or
xor
sbb
shr
fdiv
test
inc
mov
jae
xor
fcmovbe
outs
sbb
xchg
mov
mov
test
cld
neg
add
gs
mov
sub
call
cmp
mov
sbb
cmp
dec
int3
aas
sub
dec
push
or
xlat
outs
pop
add
sbb
neg
cmp
(bad)
retf
push
ret
shl
cld
mov
or
shr
mov
adc
ins
pop
and
fcomi
ins
(bad)
dec
pop
ficomp
push
jae
pop
(bad)
imul
xor
fidiv
inc
add
and
sub
adc
in
imul
pop
xchg
adc
mov
call
outs
dec
jns
test
sti
pop
mov
xchg
adc
sahf
jmp
xor
push
or
fidivr
movs
fstp
pusha
sahf
xor
fdivr
sti
fist
neg
loopne
sub
and
cmp
fdiv
in
ret
cmp
inc
sbb
or
aaa
adc
sahf
pop
jb
aad
or
fs
imul
out
inc
jg
bswap
mov
pop
jle
sbb
pop
aas
and
cmp
(bad)
in
movs
pushw
int3
fadd
add
je
mov
pop
mov
inc
sti
(bad)
or
mov
data16
(bad)
lods
(bad)
fincstp
in
cmp
inc
ins
pop
dec
xor
outs
ja
scas
adc
mov
cld
xor
mov
(bad)
mov
fwait
or
push
ror
inc
es
in
push
mov
int3
fwait
xlat
adc
mov
mov
xor
ds
push
int3
adc
ret
pusha
or
push
dec
xchg
pop
aaa
retf
add
cmp
xor
mov
push
pop
js
mov
xchg
dec
xor
sub
cs
mov
xchg
adc
adc
adc
fisub
inc
mov
xor
pop
push
add
call
inc
jno
pop
adc
mov
inc
popf
retf
bound
stc
(bad)
fld
dec
aas
repz
cmp
stc
dec
jp
mov
cmps
xor
xchg
stc
push
adc
pushf
out
sub
sbb
retf
int
jno
mov
sub
xor
and
aam
xor
out
cmps
loope
cs
jne
sti
inc
cmps
mov
inc
outs
mov
xchg
loope
push
dec
shl
ins
dec
inc
(bad)
jns
add
xchg
add
xchg
push
ret
movs
test
dec
fcmovu
cmp
inc
bound
es
daa
adc
dec
pop
pop
stos
mov
mov
inc
push
add
stos
in
ja
adc
or
xchg
dec
inc
pop
mov
lahf
mov
sti
fcom
addr16
cmp
pop
push
ins
mov
mov
jg
xchg
and
add
mov
rcl
adc
mov
pop
inc
adc
aam
fwait
and
inc
inc
shl
mov
sub
clc
std
dec
jns
mov
(bad)
cwde
repz
or
dec
loopne
mov
dec
stos
dec
xchg
in
and
and
out
mov
push
mov
sbb
pop
cmp
cmp
inc
adc
fistp
add
out
stc
cld
fidiv
fidivr
add
mov
xlat
inc
sub
add
sar
mov
ret
push
popa
mov
jecxz
repnz
fbld
dec
popf
shr
add
sahf
adc
out
ja
push
test
mov
pop
dec
sar
cmp
cmps
cmps
daa
add
cmps
cmps
into
popf
mov
and
jg
jbe
in
aas
in
mov
in
push
inc
or
in
daa
rol
push
hlt
fsub
cmps
inc
jbe
add
jae
and
repz
aas
das
cmps
dec
popf
add
sbb
xchg
dec
xchg
pushf
fdivr
test
push
in
cmp
popf
pop
mov
pop
(bad)
xchg
mov
cmc
lds
fldenv
ins
sbb
mov
(bad)
iret
jae
adc
fsubr
(bad)
scas
inc
out
xor
inc
in
movs
xor
xor
jne
mov
inc
inc
inc
stos
stc
xchg
inc
sub
addr16
retf
or
leave
mov
and
or
or
sub
fisub
and
out
movs
cmps
dec
push
das
int
fisubr
adc
loope
add
adc
lea
test
mov
sbb
ds
sbb
adc
xor
and
stos
sbb
imul
mov
outs
jmp
pop
out
sub
xor
xor
and
push
sbb
data16
sti
mov
cmps
mov
retf
outs
(bad)
int3
fstp
imul
xchg
mov
jg
add
sbb
xor
adc
mov
pop
dec
lea
xlat
jl
stc
enter
mov
or
aas
inc
adc
ret
and
and
jmp
bound
retf
mov
enter
or
popa
mov
lods
out
push
std
mov
xchg
into
das
int3
nop
adc
dec
leave
mov
adc
pop
imul
jle
out
mov
lahf
and
push
sub
xlat
pop
mov
push
cmps
cmps
cmps
fistp
je
inc
jnp
(bad)
out
sar
stc
and
push
dec
ret
pop
jns
(bad)
pop
fdivr
pop
test
out
imul
xor
dec
mov
fild
out
pop
bound
iret
cmc
push
imul
ret
aas
adc
call
leave
rcl
jle
or
in
jecxz
jle
mov
in
fsub
scas
pop
mov
add
sbb
pop
inc
sub
push
add
int
sub
dec
hlt
pop
fsub
mov
sbb
add
mov
out
pusha
xor
sbb
mov
mov
inc
add
inc
push
ror
mov
ret
push
add
add
dec
and
in
in
imul
sub
pushf
xor
shl
sti
push
jmp
mov
arpl
imul
dec
dec
dec
(bad)
clc
sub
mov
aaa
and
cmp
jae
into
dec
cmp
ror
or
shr
add
sbb
iret
in
sub
ins
call
aaa
add
repz
adc
in
test
cdq
cmp
push
lahf
xchg
aaa
fidivr
mov
jmp
in
sar
mov
test
xchg
push
stc
mov
sub
sahf
add
sti
fxch
jle
fldenv
jmp
sahf
xchg
add
(bad)
sbb
jae
sbb
sbb
mov
mov
cmps
mov
sbb
mov
int3
lds
push
hlt
hlt
mov
out
jno
pop
or
outs
pop
retf
das
pop
pop
or
popf
xchg
xchg
xchg
sub
inc
push
pop
pop
lods
retf
movs
dec
in
xchg
xchg
mov
cmc
cld
inc
dec
cdq
adc
push
xchg
mov
shl
popf
mov
shl
add
cmp
imul
xor
adc
je
push
(bad)
pop
and
add
leave
dec
xchg
pusha
inc
loope
rcr
mov
mov
inc
aad
sbb
mov
and
rcl
xchg
daa
jle
pusha
dec
mov
aad
xor
add
xor
sub
and
xchg
or
pop
push
(bad)
and
int3
sbb
mov
retf
pusha
retf
pusha
repz
fidivr
dec
jnp
(bad)
repz
retf
repnz
xchg
lds
mov
mov
push
sbb
push
test
mov
mov
pop
mov
mov
shl
pushf
(bad)
sub
and
cmp
imul
(bad)
loop
adc
or
stc
xchg
popf
xchg
add
push
and
sbb
push
push
sahf
sub
and
(bad)
out
test
loopne
push
xchg
jae
cdq
pop
out
mov
clc
push
jecxz
in
neg
add
dec
adc
jae
mov
inc
add
sti
fwait
mov
xchg
pushf
mov
mov
xchg
jp
fmul
sbb
pop
mov
mov
sub
shl
pop
ins
pop
in
sbb
xor
retf
rcl
test
sbb
cdq
shl
in
mov
sbb
xor
xor
sar
and
or
ss
xor
shl
ret
clc
retf
xchg
mov
sub
and
push
pusha
xchg
jl
jecxz
jle
(bad)
xor
div
mov
popa
sbb
or
add
js
pop
test
jne
mov
add
je
hlt
psubusb
inc
and
or
sbb
mov
sbb
inc
shr
rcl
xor
cmp
push
out
jecxz
sbb
shl
mov
icebp
aas
mov
or
mov
out
cli
cli
jns
shr
pop
push
add
mov
dec
jl
(bad)
js
outs
push
(bad)
cli
call
sbb
in
loop
jmp
xchg
in
push
adc
add
mov
nop
mov
and
lahf
xlat
into
add
xchg
dec
ja
add
imul
xchg
or
hlt
inc
pop
ins
xchg
xor
retf
mov
pop
jge
or
mov
int
pushf
inc
loop
ins
lahf
inc
call
repz
mov
cmps
dec
and
inc
cmp
add
repnz
call
xchg
jnp
jl
and
jnp
adc
jne
ss
add
clc
inc
mov
aas
int
mov
add
push
mov
inc
(bad)
xchg
movs
xchg
or
outs
push
jo
mov
inc
inc
xchg
jns
ror
cmp
xor
inc
ds
mov
xchg
mov
fstp
push
push
and
push
push
pop
pop
stos
retf
cmps
jmp
repnz
pop
jge
cld
test
sar
outs
ret
pop
push
push
add
into
movs
hlt
sbb
cdq
add
sbb
stos
cmc
aas
(bad)
leave
(bad)
push
(bad)
aam
or
push
sub
out
jmp
ins
add
jmp
(bad)
jb
ins
ret
lock
cmps
xchg
push
dec
inc
inc
add
dec
data16
je
(bad)
dec
pop
cwde
mov
mov
dec
dec
mov
test
out
push
adc
jae
push
cdq
mov
xchg
stos
movs
cmps
xchg
shl
lods
pop
pop
lock
test
mov
mov
mov
loop
into
iret
cmp
xchg
pop
(bad)
(bad)
fsincos
or
mov
push
xor
rdpmc
xor
sbb
xor
xor
(bad)
in
cwde
and
cdq
cdq
cdq
cmp
fsubrp
jmp
idiv
neg
push
aas
retf
xchg
stos
movs
push
test
dec
and
js
loopne
xchg
fsub
cmp
sub
ins
add
adc
mov
(bad)
xchg
cmp
pop
fwait
adc
sbb
mov
sbb
pop
(bad)
jo
int
jmp
test
and
das
sub
mov
mov
inc
les
dec
(bad)
aas
jp
pop
sbb
pop
jg
fmul
fiadd
push
adc
fist
xor
fstp
(bad)
cmp
call
push
cmp
adc
sti
dec
add
add
loopne
add
scas
jo
inc
xlat
outs
fst
scas
pop
pop
push
sub
add
iret
xchg
jmp
movs
xor
push
push
cmp
pusha
mov
shr
or
out
jo
xchg
lods
lods
ins
movs
retf
ins
(bad)
or
cmp
jp
inc
mov
out
ja
ror
push
and
push
mov
sub
jge
jo
adc
pop
outs
lods
aas
bound
pop
sub
mov
xor
(bad)
stos
lahf
dec
cwde
popa
mov
(bad)
push
cmp
jae
add
pop
inc
xchg
xchg
xchg
mov
test
inc
ret
cmp
jle
inc
imul
or
inc
push
mov
sbb
ret
sbb
cmp
mov
xchg
jmp
or
mov
loop
fiadd
jmp
loop
inc
rcl
push
or
sub
sahf
rol
xlat
xchg
lea
hlt
ins
inc
xor
xlat
rol
popf
mov
adc
ds
adc
test
push
lahf
sti
cmp
push
mov
std
add
or
adc
in
repz
dec
mov
lock
imul
(bad)
mov
or
ds
cmps
std
or
(bad)
xchg
popf
inc
jbe
out
fistp
fwait
mov
lahf
clc
les
pop
mov
call
jb
cld
xor
loop
call
into
ret
add
lea
jbe
push
sahf
js
(bad)
sbb
addr16
add
test
fstp
and
push
hlt
jmp
jne
xchg
push
popa
mov
bound
ds
popa
xchg
mov
mov
or
xlat
sub
inc
(bad)
mov
jmp
or
out
xchg
adc
xchg
push
stos
push
scas
es
jle
out
(bad)
cmp
fidivr
xor
cdq
push
lods
enter
enter
mov
jge
xchg
(bad)
mov
scas
mov
mov
jo
push
(bad)
out
(bad)
xor
xor
les
je
sub
and
fadd
fcomp
dec
retf
or
(bad)
adc
in
test
mov
lahf
pushf
inc
xchg
mov
inc
sbb
jb
pop
in
xchg
cvtps2pi
inc
ins
mov
sub
add
xchg
aad
xchg
and
xor
xor
movq
hlt
push
mov
ss
iret
in
jbe
mov
jle
daa
jle
xchg
dec
dec
(bad)
repz
fld
push
cmp
mov
cwde
mov
(bad)
js
out
xchg
pop
push
push
in
jp
dec
rol
cmp
and
fcmovnu
pop
pop
jle
sub
mov
int3
jno
sar
dec
shl
jl
(bad)
xor
enter
in
sbb
add
or
dec
adc
fdiv
xchg
push
adc
popf
dec
and
push
lea
cwde
adc
adc
lds
dec
jmp
(bad)
ret
sti
mov
jecxz
sub
aas
outs
mov
fisttp
sbb
mov
dec
imul
or
out
or
ret
int3
sub
mov
adc
sbb
inc
fistp
je
push
jno
and
mov
mov
add
inc
dec
pushf
aas
aad
es
or
dec
xsaves
or
jle
add
mov
fist
pop
xchg
mov
fimul
cmp
loopne
mov
and
cwde
scas
inc
xor
cmp
mov
mov
pusha
stos
sub
ret
jmp
xor
pushf
mov
mov
sahf
sub
pop
mov
or
das
pop
cmps
bound
popa
imul
addr16
mov
add
es
dec
into
test
mov
sub
pop
mov
cmp
fsub
outs
adc
lods
icebp
icebp
xchg
(bad)
jae
adc
mov
ffree
jb
jb
div
ins
and
pushf
test
ret
pop
lods
(bad)
adc
xor
sub
push
aad
push
es
nop
les
xor
lea
leave
xlat
jb
cld
mov
fwait
add
retf
scas
movs
cmp
out
sbb
or
jp
mov
(bad)
cld
add
pop
fcomip
mov
mov
or
pop
jl
fist
loopne
sbb
cmc
jo
rol
iret
lds
test
pop
add
pushf
pop
std
sti
or
mov
leave
adc
fdiv
dec
mov
pop
ds
cmp
out
adc
retf
jnp
mov
sar
aaa
and
push
(bad)
outs
fild
xchg
pushf
js
daa
pop
(bad)
add
sahf
cmp
inc
iret
pop
popf
push
nop
mov
push
mov
mov
ja
imul
(bad)
jp
push
js
sub
nop
(bad)
fcmovnbe
sbb
call
shr
jae
loop
enter
or
mov
add
jno
mov
mov
jge
mov
inc
shl
fld
cmp
dec
shl
jg
out
fisttp
cld
jns
scas
fs
sub
sub
push
mov
movs
xchg
inc
mov
and
cmps
mov
repz
mov
clc
sbb
leave
mov
cmp
mov
in
arpl
or
sahf
test
pop
test
add
sub
xchg
push
sub
adc
leave
xor
int3
adc
or
ins
or
xor
or
push
inc
mov
sub
inc
mov
push
loop
sub
es
xor
(bad)
mov
fcom
push
fwait
leave
pop
test
(bad)
sbb
push
ja
mov
into
push
mov
into
sti
sbb
dec
add
or
xchg
outs
dec
out
out
(bad)
sub
lods
jns
xchg
or
push
sbb
adc
popf
mov
sbb
(bad)
jge
adc
pop
jecxz
sbb
jecxz
cli
rol
icebp
xor
jg
add
add
retf
push
(bad)
pop
xor
pop
and
pusha
pop
jmp
push
push
aaa
xor
and
mov
dec
dec
xor
rcr
pop
addr16
fdiv
sti
xchg
movs
mov
sub
dec
pop
ins
sub
je
bound
adc
(bad)
cld
cmps
fucomip
stc
js
inc
inc
push
adc
imul
mov
dec
lods
pop
adc
pop
pop
sbb
scas
pop
popa
and
lds
pop
icebp
mov
mov
xchg
adc
xor
into
mov
loopne
(bad)
loopne
int3
popa
fdivr
shl
pop
push
xchg
jns
lds
dec
shl
retf
cmc
mov
into
pop
mov
sub
pop
sub
sub
and
in
cmc
xchg
ficom
test
jmp
jns
xlat
repz
xchg
ror
movs
push
test
aad
sbb
cs
sub
movs
lds
add
or
or
out
imul
imul
cmp
adc
fidivr
cmp
add
pushf
ja
mov
add
fcom
and
mov
push
fs
rcr
add
push
push
mov
lods
mul
bound
pop
or
jge
adc
ficomp
punpckhdq
cmp
(bad)
sub
into
fcmovne
mov
ret
lods
xlat
pop
mov
scas
sbb
inc
lods
fisub
jmp
and
mov
jns
cmp
xchg
repnz
cmp
mov
sbb
sub
add
or
adc
push
add
xor
jns
addr16
das
fist
sbb
push
jge
xchg
sbb
sbb
fist
imul
loop
pop
mov
aas
dec
lock
or
mov
jnp
pop
pushf
sti
js
popa
shl
pushf
pushf
hlt
mov
mov
pop
jle
add
sbb
ja
push
icebp
jmp
scas
movs
cmp
iret
fcom
aaa
fdiv
xchg
inc
outs
pushf
std
addr16
nop
fwait
jmp
js
and
jo
into
fnstsw
dec
push
jnp
push
sub
(bad)
aas
dec
pop
sub
or
push
and
mov
inc
xchg
mov
sbb
int3
fadd
mov
adc
push
popa
mov
(bad)
xchg
sub
cmc
jmp
pusha
mul
ins
pop
(bad)
xchg
or
sub
pop
push
stc
repz
movs
mov
les
clc
jmp
cld
js
cmp
push
sbb
lods
dec
add
xchg
enter
push
movs
retf
ins
stc
(bad)
sbb
cdq
popf
jle
sbb
adc
fs
sbb
adc
adc
xchg
cmp
div
adc
and
cmps
(bad)
pop
sbb
pop
adc
mov
and
iret
bound
xor
dec
shl
mov
je
cmp
sub
push
mov
mov
sbb
and
sbb
pushf
sub
movs
dec
(bad)
lock
ss
jbe
(bad)
cwde
leave
lahf
repz
inc
int3
stc
sbb
sbb
adc
xchg
and
sar
cmp
stc
sbb
jo
pop
or
ror
out
push
cmp
iret
ret
mov
adc
jmp
fstp
mov
iret
inc
inc
stc
mov
mov
lock
je
lahf
jnp
cmp
lahf
(bad)
inc
fimul
std
repnz
sub
dec
dec
iret
cmps
or
adc
sbb
mov
lds
add
mov
sbb
pop
mov
fisubr
loop
dec
movs
pop
mov
jg
ror
repz
(bad)
out
sti
movzx
jb
jo
in
push
shl
and
cld
or
daa
jno
push
sbb
into
inc
add
out
cwde
pop
add
out
jo
jae
scas
prefetch
or
aad
movs
jae
push
les
sub
cli
fstp
hlt
xchg
sub
mov
pop
sbb
push
sub
pop
outs
jns
add
jbe
fdivp
out
bound
ss
sub
mov
dec
int3
aas
push
rcl
pop
iret
cmps
out
inc
mov
popa
imul
xchg
add
gs
inc
lock
mov
aam
or
scas
and
add
stc
or
jmp
fs
fisttp
mov
neg
lods
pop
repz
adc
gs
cwde
inc
lds
inc
sbb
or
add
push
(bad)
(bad)
inc
les
(bad)
test
xchg
adc
sti
addr16
push
mov
repnz
pop
or
je
mul
das
pusha
and
pop
adc
(bad)
mov
clc
fidivr
aad
retf
sub
div
xchg
jg
jnp
ins
mov
push
ds
jecxz
cmp
push
jne
push
and
out
mov
cmovns
xchg
or
psubb
pop
mov
inc
nop
mov
dec
dec
icebp
jae
cmp
xor
ror
aaa
cmp
adc
and
in
cmp
mov
iret
fs
aaa
jb
test
mov
mov
imul
jne
sahf
lods
retf
or
mov
xor
imul
scas
inc
cmp
xchg
fnstsw
xor
xlat
add
hlt
jo
ss
cld
(bad)
cmp
fidivr
iret
and
and
dec
cmp
repnz
jg
pop
add
or
nop
in
pop
sbb
mov
ins
fwait
or
pushf
cmp
inc
xchg
pop
jg
and
mov
pop
loop
push
mov
cmp
(bad)
lods
pusha
scas
nop
sbb
jg
cmp
scas
lahf
mov
push
mov
dec
icebp
jecxz
lds
scas
arpl
out
mov
add
jecxz
inc
int3
or
ret
fstp
gs
icebp
mov
addr16
test
arpl
or
movs
repnz
or
les
sub
(bad)
cli
cmc
imul
loopne
loopne
dec
xor
les
es
jp
clc
dec
bound
out
push
xor
jmp
js
in
dec
inc
loop
or
repnz
xchg
and
inc
push
or
retf
ret
adc
shr
add
int
inc
stc
or
adc
or
jle
xlat
fild
cmc
mov
stos
in
gs
xchg
or
mov
lea
mov
ret
inc
mov
sub
push
cmp
loop
add
xor
repnz
int3
loop
cmp
out
in
dec
imul
push
push
arpl
stc
jmp
in
cmp
les
and
call
and
ret
sbb
mov
xchg
sbb
mov
in
mov
(bad)
scas
xor
(bad)
push
pop
add
adc
ins
xor
dec
jno
mov
retf
sahf
or
in
fist
daa
out
mov
cmp
div
jo
xchg
inc
cmc
and
sbb
jecxz
inc
jg
push
(bad)
mov
scas
mov
retf
(bad)
iret
pop
sbb
push
inc
fimul
shl
push
outs
pop
pop
xor
push
dec
fwait
cmps
repnz
mov
and
fdivr
ret
jmp
mov
inc
in
push
push
mov
or
mov
dec
js
scas
mov
push
frstor
ins
ss
fistp
or
lods
(bad)
call
mov
mov
jle
mov
push
nop
mov
mov
das
(bad)
outs
pop
mov
jmp
das
lock
es
scas
xchg
aas
xor
pop
test
jmp
jo
and
mov
aas
dec
dec
daa
mov
sahf
or
mov
fist
lds
inc
sahf
fsub
clc
add
cdq
mov
cmp
aaa
jno
and
pop
ds
das
(bad)
or
push
popa
hlt
lods
sub
loopne
les
mov
mov
jns
pop
mov
ins
adc
dec
mov
and
mov
ja
add
jns
popf
lock
cmc
push
inc
lds
jl
xchg
add
jmp
cmp
cdq
les
mov
dec
es
sub
rcr
icebp
pop
or
repz
xchg
clc
imul
outs
sti
pop
jg
jns
mov
jbe
rep
push
(bad)
clc
mov
out
mov
scas
xor
inc
mov
mov
xchg
clc
scas
test
in
push
mov
push
stos
inc
sbb
cmp
pop
mov
jg
and
xchg
repz
rol
sti
scas
and
cmp
mov
in
pop
mov
add
and
adc
pop
pop
sub
mov
cmp
jle
mov
inc
sahf
clc
int
push
jns
sub
ins
ror
pop
daa
ins
xor
leave
inc
or
jnp
lods
inc
or
addr16
(bad)
xor
sub
pop
outs
jnp
xchg
sbb
aam
xchg
repnz
adc
dec
mov
not
out
mov
stos
fdiv
jae
out
sbb
mov
div
cmp
neg
xor
jnp
sbb
(bad)
call
hlt
jmp
(bad)
out
bound
mov
xchg
retf
and
into
(bad)
xor
sbb
addr16
push
jno
lds
jle
shl
imul
icebp
cmp
(bad)
loop
lods
pop
mov
jecxz
mov
clc
push
cmp
mov
fprem
sahf
in
fstp
push
xchg
ja
aas
enter
leave
and
dec
out
test
arpl
aam
pop
adc
adc
test
not
jecxz
test
dec
aas
test
fimul
and
data16
int3
(bad)
div
mov
mov
mov
mov
retf
pop
aad
dec
fwait
les
lods
pop
xchg
sub
jo
in
loop
sbb
sahf
test
pop
(bad)
jnp
mov
adc
repnz
pop
and
sbb
adc
sgdtd
xchg
push
jnp
sbb
loope
test
jmp
in
cmps
dec
fwait
mov
shl
and
ret
fdivr
(bad)
dec
das
addr16
data16
inc
xchg
add
fisub
call
mov
xchg
aaa
push
test
add
stos
xchg
icebp
test
scas
push
push
scas
or
cmp
jbe
repnz
cld
inc
inc
ret
jo
mov
movs
adc
pop
inc
inc
ds
mov
ss
int3
inc
into
iret
shl
icebp
pushf
add
je
(bad)
or
cmp
inc
imul
rcl
sub
jmp
sub
movs
shl
rcl
not
mov
pop
mov
push
cmovge
in
mov
mov
scas
shld
cmp
fwait
dec
and
push
and
in
ret
sbb
daa
(bad)
jp
stos
mov
push
mov
push
xchg
les
sub
loop
and
ins
add
sbb
xchg
fmul
xchg
mov
and
(bad)
jmp
scas
mov
mov
nop
or
inc
inc
repnz
jmp
mov
call
mov
iret
shl
jae
sbb
or
xchg
inc
xchg
ja
scas
jg
aam
pop
or
dec
loop
jg
inc
adc
push
mov
mov
or
mov
repz
cmp
ficom
add
clc
and
sub
xchg
cli
cmc
imul
test
xchg
jnp
jno
retf
dec
jp
test
(bad)
bound
loopne
pop
push
mov
xor
iret
push
test
ja
xchg
scas
adc
lods
jl
enter
cli
or
xlat
pop
out
int
cmp
or
or
(bad)
push
mov
or
and
or
out
idiv
sub
sbb
popa
or
or
test
xchg
enter
retf
push
aam
inc
jge
ds
mov
into
inc
mov
in
je
sub
stc
pop
scas
dec
xor
retf
pop
movs
xor
mov
pop
stos
es
test
push
aad
pop
loop
jns
daa
pop
popf
xchg
xchg
jmp
jl
loope
shr
push
scas
or
jo
mov
add
ins
sub
push
jge
jne
ret
inc
in
iret
xchg
ins
mov
jle
inc
xlat
(bad)
shr
and
mov
xor
dec
xchg
mov
popa
inc
mov
push
mov
push
jnp
sub
bts
pusha
sbb
out
inc
(bad)
jmp
ins
xchg
loope
(bad)
aam
cmp
jb
loop
das
fst
dec
adc
fistp
call
cmc
(bad)
in
sbb
pop
mov
in
fistp
fimul
dec
add
mov
pop
or
or
sub
push
add
mov
test
test
and
aas
pop
fidivr
add
lds
mov
sub
(bad)
es
popf
sub
inc
loop
pusha
mov
mov
jp
pop
outs
and
repnz
or
pop
retf
ja
lea
loop
pop
emms
inc
mov
int3
leave
leave
mov
cmp
cs
lahf
and
ret
jg
adc
cmp
lahf
jmp
jecxz
mov
push
scas
lds
(bad)
jns
sbb
out
jg
sub
in
pop
jg
mov
sbb
mov
mov
pop
(bad)
sbb
repz
pop
push
jl
or
je
xor
add
mov
inc
inc
fadd
pop
mov
repz
leave
lea
xchg
mov
jne
out
(bad)
retf
dec
cld
(bad)
cmp
(bad)
push
pop
add
(bad)
inc
jnp
mov
jns
rol
or
out
dec
lea
sbb
sbb
ficom
(bad)
pop
jecxz
push
int3
pop
fimul
or
jb
mov
sub
and
es
xchg
cli
loopne
and
push
xchg
pop
push
mov
aaa
outs
adc
scas
int3
cwde
xor
sub
outs
sbb
ficomp
add
mov
or
xor
(bad)
sub
bound
cmp
and
loope
add
xchg
aaa
or
push
inc
jnp
enter
jle
fwait
xchg
mov
(bad)
mov
fiadd
push
outs
push
sahf
ficom
sbb
add
pusha
mov
push
loope
jbe
inc
mov
cmp
inc
retf
push
sub
mov
fld
aad
push
inc
fs
add
out
and
or
and
xor
out
adc
cwde
lea
outs
stc
stos
pusha
cmp
cwde
cmp
or
jno
jae
sahf
in
mov
sbb
pop
in
or
mov
or
sbb
dec
cs
(bad)
repnz
and
inc
wbinvd
sub
mov
dec
stos
xlat
inc
adc
test
xchg
icebp
icebp
adc
in
sbb
inc
jmp
adc
xor
test
push
cmp
xchg
movs
mov
(bad)
lahf
jmp
in
jg
mov
popf
daa
dec
mov
or
mov
cmp
(bad)
pushf
cmp
pop
stos
cmc
jmp
arpl
mov
loop
gs
or
mov
or
cmp
push
loope
xchg
lock
mov
add
adc
or
dec
pop
aad
jl
push
sub
and
aaa
imul
in
(bad)
dec
clc
cmp
add
fs
xor
push
int3
sub
and
les
je
cdq
mov
test
je
sar
arpl
je
test
popa
ret
sbb
sbb
xchg
adc
inc
inc
and
fimul
xchg
out
loope
lahf
mov
outs
fiadd
data16
lahf
jmp
xchg
pmullw
retf
push
pop
pop
mov
inc
nop
push
movs
repz
jno
mov
(bad)
pop
xor
mov
(bad)
push
sub
leave
cld
push
jmp
in
shr
sbb
or
and
adc
sbb
imul
jb
cmp
mov
fiadd
jg
fld
lods
aaa
std
out
dec
in
fimul
pop
cmp
sbb
pushf
cmps
daa
mov
fidiv
mov
sbb
push
pop
mov
cs
int3
outs
dec
aam
pop
or
stc
shr
(bad)
dec
add
test
jb
adc
inc
or
outs
pop
pop
jnp
push
mov
aas
ja
pop
mov
outs
scas
pushf
pop
xchg
push
mov
imul
(bad)
mov
out
sub
cmp
rcl
inc
(bad)
aad
retf
ficomp
jmp
push
mov
fsubr
pop
cmp
sbb
push
and
stc
loope
stos
push
scas
push
inc
in
adc
int3
pop
stos
xchg
(bad)
xchg
movlpd
fidiv
cmps
popf
clc
mov
out
loope
dec
stc
shl
stc
popa
outs
scas
mov
adc
mov
cmp
retf
jnp
jns
aas
outs
xor
jl
(bad)
cmc
leave
mov
mov
(bad)
mov
and
into
(bad)
xor
sbb
addr16
popa
inc
mov
enter
lsl
fs
xchg
xchg
push
mov
push
cmp
adc
clc
fucom
jbe
(bad)
xchg
push
mov
sbb
(bad)
int
mov
repz
push
xor
mov
je
mov
in
jns
push
jg
movs
xor
or
out
ficom
jmp
push
nop
ret
clc
fmul
sbb
push
sbb
and
repnz
rcr
test
retf
lock
or
sahf
mov
inc
lahf
xchg
in
add
(bad)
inc
adc
mov
mov
or
sbb
test
jns
cld
test
push
(bad)
jno
sub
aas
retf
scas
push
mov
cmp
(bad)
mov
les
(bad)
les
loope
ficom
and
and
push
nop
sub
and
imul
cmps
lods
xor
jns
jge
mov
mov
cld
inc
or
fist
in
enter
fist
pop
outs
hlt
in
inc
fstp
mov
daa
mov
dec
jl
push
pop
xlat
mov
(bad)
jnp
mov
fiadd
pushf
sub
cmps
jne
imul
cmp
xchg
retf
lods
xlat
gs
xchg
js
loop
pop
(bad)
repnz
mov
(bad)
repnz
mov
jnp
jecxz
out
fbstp
addr16
leave
into
or
cmps
cld
imul
jle
pop
daa
jbe
call
or
xor
add
popf
cmp
add
aad
cmc
fdivr
ds
cmps
mul
ficomp
adc
lahf
cdq
mov
cmps
xlat
loop
leave
cmp
addr16
loopne
std
jne
fadd
xor
sbb
into
ror
hlt
adc
int
jg
jmp
xchg
mov
jmp
stos
mov
call
enter
mov
add
test
cmps
stos
dec
lahf
jle
fdivr
pop
mov
xchg
shl
jp
in
inc
ins
test
push
or
dec
cmc
push
ret
push
cmp
mov
fldcw
mov
sub
out
popf
das
(bad)
(bad)
xchg
cmp
cmp
mov
(bad)
jns
out
(bad)
push
push
scas
dec
mov
mov
jmp
sbb
iret
outs
fnstsw
outs
xor
pop
repz
call
fnstsw
call
jg
hlt
pop
rol
cmps
mov
mov
rol
dec
adc
ins
and
or
fcmovbe
xchg
jmp
lahf
xlat
mov
ret
jne
ret
xchg
jmp
jmp
mov
outs
dec
iret
ficom
xlat
cs
sub
mov
loopne
out
dec
mov
push
xlat
shr
jp
fst
leave
xlat
pop
pop
push
retf
fimul
inc
iret
frstor
js
scas
(bad)
fldcw
ins
(bad)
jge
ret
ss
inc
jmp
xchg
jne
or
cmp
xchg
xchg
xchg
sbb
imul
dec
jmp
loope
ror
jg
xchg
xor
movs
cwde
scas
jbe
cmp
mov
cmp
mov
mov
sbb
retf
mov
and
jl
mov
inc
xchg
leave
jae
dec
sub
in
iret
mov
cs
lods
mov
pop
or
xchg
test
(bad)
repnz
mov
retf
push
adc
sti
jno
in
cdq
push
aaa
outs
ficomp
icebp
call
addr16
xchg
sbb
js
fdiv
leave
fild
mov
xlat
sar
outs
aaa
std
or
test
ret
add
pop
pop
in
add
mov
fs
dec
in
mov
outs
aam
pusha
and
jp
call
jmp
std
(bad)
sbb
push
mov
shl
mov
push
retf
lahf
xor
call
xor
sub
jbe
hlt
push
scas
pop
pop
into
retf
sbb
adc
rcr
cld
loope
scas
aam
or
adc
pop
jecxz
outs
pop
bndstx
jge
xor
inc
lds
gs
fcomp
sbb
dec
out
and
fs
and
cmp
jae
cmp
xor
fsubr
nop
repz
mov
mov
sub
cwde
sbb
retf
pusha
das
shl
dec
clc
call
lds
xchg
xor
stc
std
push
push
jmp
mov
cs
ss
ins
jne
repz
lahf
cdq
repz
fwait
mov
sbb
jb
je
nop
or
cmp
jmp
sub
je
adc
out
outs
xchg
or
or
mov
adc
loop
mov
mov
add
in
movs
jae
jae
in
iret
pushf
xor
mov
mov
sbb
loop
sbb
pop
out
jne
inc
or
xchg
fild
xchg
jnp
mov
scas
fmul
xchg
jg
sbb
push
push
retf
(bad)
jp
cmp
mov
frstpm(287
mov
push
(bad)
xchg
out
fmul
psubb
cld
cmp
sbb
ds
xchg
xor
xor
out
div
lods
enter
in
(bad)
push
daa
lods
cmc
sub
mov
mov
xchg
adc
lea
xchg
sti
scas
in
in
fild
sti
idiv
sbb
sub
jns
cmc
addr16
adc
(bad)
pop
pop
fs
shr
xchg
ds
in
push
mov
int
aas
fiadd
mov
cmp
and
jne
(bad)
fwait
ss
mov
mov
imul
xchg
cs
lods
sbb
mov
and
stc
(bad)
std
movs
xchg
ret
dec
mov
pop
(bad)
cld
ins
lock
xor
dec
inc
pusha
add
mov
loopne
jg
clc
mov
(bad)
sti
pushf
cmp
movs
in
(bad)
jecxz
dec
jle
jno
or
sbb
idiv
add
push
es
mov
cmp
sbb
repz
fistp
xchg
pop
inc
ds
int3
adc
fdivp
xor
xor
jmp
jle
les
xchg
jb
add
(bad)
popf
out
iret
(bad)
call
inc
sar
cmp
jo
ins
rcr
ds
ja
leave
out
clc
jl
aas
sub
mov
pop
div
adc
jecxz
mov
out
or
fpatan
mov
mov
repnz
ds
es
xchg
jmp
fcmovnu
mov
out
jecxz
stc
jbe
aas
sbb
rcr
pusha
xchg
fsubr
ss
xchg
mov
sbb
xchg
sti
loope
mov
js
bound
cs
fisubr
(bad)
and
jp
sahf
pop
mov
mov
jl
jnp
xchg
(bad)
mov
mov
jb
sbb
iret
mov
mov
gs
jmp
aas
xchg
cmps
lahf
jnp
dec
pop
aas
mov
jbe
test
mov
sbb
dec
xchg
mov
jb
mov
scas
ud0
stc
aaa
xchg
lahf
sbb
retf
das
mov
aas
add
ins
stos
adc
lea
in
or
lahf
leave
scas
dec
stc
sbb
int3
in
jne
jmp
xor
mov
setg
out
rcl
loop
cmp
jb
push
fcomi
repnz
outs
cmp
sbb
mov
out
mov
gs
movs
loopne
out
repz
cld
scas
aas
dec
clc
arpl
jns
cmp
lahf
mov
(bad)
(bad)
adc
in
aas
inc
scas
cmp
xchg
sub
pop
xor
movs
cmp
adc
scas
xor
test
loope
lahf
add
and
inc
cwde
ss
inc
enter
shr
push
cmp
or
imul
scas
dec
inc
lds
xchg
shr
xchg
add
sbb
shl
retf
jbe
sbb
loopne
mov
or
add
fistp
lock
jmp
stc
(bad)
in
cmp
cmp
cmp
sar
clc
aaa
push
dec
sbb
cmps
xchg
jecxz
stc
lods
cmp
out
clc
jl
pop
mov
daa
ins
loope
cld
push
fidivr
jle
sbb
cdq
cmp
ins
test
les
pop
cmp
ret
cmp
movs
sbb
outs
rol
std
push
adc
es
daa
xchg
push
xor
in
nop
mov
or
and
and
sbb
pop
addr16
loop
fldln2
bound
sbb
fild
pop
ds
gs
jae
push
cmp
(bad)
push
jecxz
icebp
inc
loop
mov
inc
inc
xor
imul
xchg
or
sbb
mov
das
outs
push
pop
xchg
xchg
fld
adc
out
cmc
icebp
jb
cmp
fbstp
push
aaa
(bad)
cmps
repz
lods
push
cmp
out
pop
rcl
and
idiv
pushf
pushf
cmc
rcl
fcomp
loop
sbb
sub
pushf
enter
jb
(bad)
icebp
in
jns
in
mov
fxch
enter
in
mov
out
int
outs
out
arpl
out
clc
aaa
pop
pop
clc
mov
loop
data16
loopne
xchg
in
das
pop
mov
icebp
out
pop
xchg
add
xchg
out
jl
cmp
ins
iret
pop
js
cmp
dec
jecxz
cmp
cld
mov
dec
(bad)
out
push
mov
mov
std
js
cwde
leave
lahf
jnp
jae
mov
(bad)
daa
push
push
enter
nop
fisttp
loop
fnstcw
js
sub
inc
add
pop
fdivr
test
shr
or
jns
mov
enter
scas
popa
repnz
dec
jmp
out
pop
lahf
aas
jg
mov
stc
xchg
das
pop
js
mov
mov
inc
and
and
or
ficom
lahf
inc
iret
jno
loop
inc
in
xchg
sti
sub
pop
sbb
sar
aaa
pop
push
les
push
fistp
sub
int3
out
add
(bad)
stc
rol
dec
movs
jae
push
fadd
test
pop
mov
ficomp
jle
out
mov
pop
mov
push
adc
clc
or
sub
and
jg
out
aas
or
lahf
sahf
std
add
in
xchg
pop
jmp
nop
nop
cmp
jg
call
movs
ret
xchg
pop
xchg
push
dec
cmp
cmp
fist
lods
add
mul
fdivr
pop
retf
mov
in
and
outs
sbb
mov
cmps
nop
test
fild
fdivr
(bad)
cdq
ret
jnp
out
enter
mov
xor
fs
sbb
sub
pop
(bad)
loop
lods
mov
pop
clc
adc
jmp
and
out
js
jl
push
sbb
push
and
push
sbb
enter
retf
adc
mov
cdq
mov
pop
sbb
popf
xchg
mov
cmp
xchg
xchg
mov
mov
pop
pop
xchg
xchg
call
jmp
out
pop
pop
mov
xlat
out
in
or
mov
test
daa
call
cmps
cmp
jmp
leave
adc
cmp
push
ucomiss
mov
ret
cmp
lds
push
aas
mov
mov
ret
add
fsubr
inc
jmp
inc
fisub
jl
in
aaa
mov
jl
fld
(bad)
shufps
xor
les
pop
ds
adc
xor
sahf
fadd
dec
push
push
push
ficomp
stc
ja
repnz
sub
in
jmp
dec
ret
daa
inc
in
ror
push
xchg
leave
jmp
retf
or
or
jae
into
aas
mov
out
cld
loop
mov
mov
sbb
pop
mov
fcmovu
mov
(bad)
sub
out
pop
mov
jnp
jecxz
fimul
dec
pop
enter
jae
loopne
sub
popf
cmp
test
sbb
in
fbld
mov
sahf
pop
xchg
cmp
cmp
pusha
jg
mov
into
movs
jno
mov
enter
addr16
pop
mov
jae
hlt
fwait
in
mov
test
jo
sbb
mov
and
mov
fcmovne
jmp
pop
call
nop
jo
aam
xchg
inc
dec
sbb
mov
or
xchg
neg
sbb
mov
in
adc
jmp
jmp
mov
and
stc
dec
pop
cmp
mov
mov
pop
fild
(bad)
sbb
xor
iret
retf
mov
and
cmp
(bad)
retf
jno
dec
out
pop
idiv
mov
out
fstp
inc
in
(bad)
xchg
add
push
fdivrp
pop
ret
jmp
or
sar
and
or
out
and
fld
inc
js
sub
add
mov
aad
into
jecxz
mov
lahf
repz
mov
es
mov
hlt
sbb
stos
loopne
mov
mov
inc
repnz
dec
or
stos
test
or
and
outs
dec
sub
test
pop
xchg
mov
inc
or
outs
fnsave
xchg
inc
lock
inc
xchg
(bad)
sbb
or
das
jo
cmc
call
push
push
je
mov
hlt
mov
or
cmp
dec
jmp
js
lahf
ret
rol
pop
push
test
xlat
xlat
and
retf
outs
pusha
or
cmp
sub
jne
hlt
test
out
mov
retf
xchg
das
sbb
arpl
movs
adc
xchg
cdq
cmp
std
mov
dec
fwait
push
pop
fidiv
xchg
out
pop
xor
cli
mov
sbb
test
mov
inc
mov
mov
pop
xchg
jne
cmp
imul
mov
outs
push
pop
pop
xchg
fs
or
push
(bad)
icebp
mov
or
dec
jle
add
loope
movs
call
outs
mov
jmp
mov
fmulp
and
fcomp
push
add
mov
xor
int3
or
xlat
add
loopne
retf
cs
jae
push
(bad)
arpl
and
mov
sub
or
mov
pop
add
fsub
mov
add
popa
fldenv
fisub
adc
(bad)
cmp
inc
cli
jns
shr
pop
xchg
out
lds
in
sbb
movs
lock
mov
int
fimul
movs
sbb
fs
movs
sti
sahf
icebp
inc
fimul
jl
jmp
pop
adc
popa
outs
and
pop
mov
dec
mov
repz
pop
aas
jl
out
scas
dec
cmp
leave
mov
(bad)
push
mov
add
cmps
and
or
ds
xchg
loopne
add
arpl
shl
inc
retf
jl
push
sbb
xlat
push
mov
pop
ins
jl
rcr
pop
div
(bad)
cmc
xchg
icebp
imul
adc
push
mov
ret
sub
js
or
xor
test
pusha
inc
add
ret
retf
iret
push
lock
cmp
push
add
daa
push
ret
in
push
jns
call
mov
mov
inc
mov
mov
(bad)
mov
add
xchg
loop
loopne
pushf
jmp
mov
sbb
push
sbb
sbb
sub
fild
xchg
ja
mov
sub
stos
dec
xchg
and
in
push
aaa
jae
lahf
es
cdq
shr
mov
std
and
clc
push
xlat
dec
iret
jne
(bad)
repnz
xlat
ss
addr16
inc
xchg
ss
shl
fdivr
sti
not
and
lods
dec
cmc
mov
mov
sub
and
push
ds
ss
xchg
push
cs
ins
in
add
fstp
adc
mov
pop
sbb
ins
retf
loopne
inc
push
dec
std
mov
cs
jg
pop
inc
and
inc
(bad)
(bad)
push
lods
lds
mov
(bad)
scas
and
fs
sub
mov
addr16
repnz
das
push
stos
xchg
sub
imul
jbe
loope
pop
jmp
cmc
cmps
dec
popf
ins
dec
jno
out
leave
mov
data16
cmp
lahf
ins
inc
xchg
or
ret
stc
ja
mov
pushf
popf
xor
push
outs
add
rep
mov
stc
cmp
jmp
and
jl
adc
jg
test
jle
pop
jl
cmp
addr16
sub
ja
xor
dec
jmp
lock
sub
mov
lods
push
stc
mov
pop
shl
rcl
aas
mov
(bad)
repz
inc
pop
or
jns
xchg
mov
int3
retf
push
aaa
adc
pop
ret
push
ss
fptan
mov
outs
jnp
xor
push
call
xchg
sar
jl
call
(bad)
out
or
(bad)
icebp
jo
je
icebp
std
and
adc
cld
cdq
xor
int
sub
mov
int
cmp
lods
push
(bad)
xor
xchg
xchg
jae
xor
iret
push
shr
push
xchg
je
hlt
or
cmc
in
out
ror
(bad)
repz
pop
mov
mov
sti
hlt
mov
out
call
ja
jp
hlt
shl
pop
retf
or
jne
xchg
cmp
sbb
or
fisttp
push
push
mov
lea
cmps
add
js
iret
mov
aas
call
sahf
jbe
loope
cmp
pop
sub
loop
aas
add
std
push
add
retf
and
in
aam
icebp
cmp
jb
adc
inc
nop
jno
adc
add
imul
shl
cmp
mov
(bad)
sub
outs
enter
xchg
pop
jb
sbb
clc
dec
sub
stos
pop
movs
fidiv
and
mov
pop
dec
std
nop
jb
sbb
je
push
pop
addr16
xchg
jle
mov
shl
mov
inc
retf
jl
push
jl
dec
icebp
popf
and
jno
jle
in
mov
sbb
and
add
or
sub
and
add
test
or
adc
xchg
add
fsubr
mov
mov
inc
dec
pusha
movs
add
dec
imul
inc
retf
repz
adc
jae
pop
mov
sbb
ins
(bad)
xlat
test
adc
ficomp
out
pop
cmp
pop
adc
js
xor
aaa
jbe
ds
scas
stos
(bad)
into
sbb
in
stos
lods
shr
daa
add
icebp
jns
sub
xor
jl
adc
data16
jmp
jge
mov
push
pop
jmp
mov
mov
stos
enter
sbb
pop
retf
ret
(bad)
loopne
add
push
xlat
xchg
loope
cmp
pusha
push
sub
ret
jmp
mov
push
bound
xor
push
inc
(bad)
clc
inc
dec
sbb
retf
dec
sub
lahf
fsub
mov
in
push
into
call
in
in
jbe
(bad)
xlat
or
hlt
or
jo
stos
adc
in
and
ret
cmp
(bad)
xchg
(bad)
pop
ret
jmp
push
sbb
loopne
jmp
mov
xchg
mov
out
mov
mov
repz
xchg
mov
(bad)
lea
pop
mov
xor
test
inc
inc
fmul
inc
outs
nop
adc
xchg
jmp
pop
mov
(bad)
mov
fsubr
leave
loopne
fmul
sbb
aaa
ds
out
mov
ret
or
ficomp
mov
cmp
jl
int
xor
mov
addr16
outs
repz
cdq
or
outs
add
jno
mov
xor
jecxz
mov
jg
mov
mov
test
fwait
or
dec
pusha
adc
fsub
rcl
in
outs
add
push
data16
dec
or
mov
push
movs
cmp
and
and
xchg
icebp
rol
in
or
mov
lock
mov
pop
jbe
jmp
outs
imul
adc
movs
(bad)
jmp
xchg
or
out
out
lods
sub
outs
jo
rol
stos
loop
cmps
scas
loopne
ss
xor
ins
cld
in
in
jg
jo
lahf
in
imul
xchg
dec
lahf
adc
das
adc
pop
das
(bad)
daa
mov
mov
push
push
loop
mov
jae
pop
cli
out
ret
add
jns
clc
mov
adc
sub
jno
cdq
sbb
jecxz
mov
fist
mov
push
or
cdq
or
sub
gs
add
inc
mov
dec
hlt
mov
lea
fcom
mov
xor
iret
xchg
dec
dec
pop
inc
push
std
mov
shl
sub
adc
mov
retf
inc
daa
and
fs
jb
loop
add
lods
push
loop
jb
adc
call
dec
and
adc
(bad)
pop
test
dec
in
pop
shl
std
xchg
add
cmp
jns
xor
adc
push
mov
faddp
aam
cmp
inc
ret
adc
inc
jmp
(bad)
and
clc
jl
test
adc
ds
movs
mov
and
shl
jne
mov
scas
inc
loop
sub
sti
ret
call
mov
inc
repnz
clc
mov
inc
in
sub
gs
pop
mov
sbb
clc
inc
mov
mov
dec
fsubr
mov
outs
enter
arpl
loop
dec
nop
ds
mov
(bad)
cdq
(bad)
xor
scas
and
leave
inc
jb
push
ret
test
dec
test
and
and
xlat
xor
adc
push
sub
test
push
jo
movs
push
ja
cmp
adc
cmp
in
pop
jge
into
aam
loope
xchg
int
(bad)
sub
push
shl
ret
sbb
stos
stos
(bad)
sahf
mov
add
xor
push
inc
sub
and
scas
adc
sbb
or
sahf
aam
push
std
movs
mov
in
sub
hlt
push
mov
and
mov
pop
xor
push
fimul
popf
fwait
fwait
inc
push
ror
(bad)
icebp
push
test
stos
xchg
sub
sub
mov
neg
stos
(bad)
cmp
inc
into
mov
seto
test
jl
jecxz
movntps
mov
xchg
sar
xchg
sub
mov
fnstsw
(bad)
cmp
fidiv
add
cmp
outs
pop
mov
test
in
dec
push
cmp
cdq
push
mov
jle
out
push
ins
retf
ins
loopne
cdq
hlt
ins
adc
fsub
out
pusha
or
sub
jmp
and
sbb
addr16
pop
fmul
xchg
mov
clc
js
cmps
xchg
lods
inc
mov
loopne
ret
iret
shl
inc
jo
cmp
je
out
jmp
dec
and
mov
das
mov
mov
or
mov
stc
ret
xchg
mov
popf
xchg
div
add
loope
mov
ret
xchg
adc
pop
and
bound
mov
push
lods
push
dec
lea
sbb
in
(bad)
cmc
inc
pushf
or
jg
jno
sbb
loop
dec
xchg
mov
cli
cmp
xlat
arpl
pop
les
in
fsubr
bnd
jmp
or
test
jecxz
push
and
rol
push
aas
retf
dec
test
int
int3
sub
mov
scas
sub
mov
add
ss
fcomp
fmul
inc
fidivr
push
scas
inc
pop
out
adc
stos
mov
mov
jbe
icebp
cmps
push
mov
fstp
js
fisttp
outs
mov
das
imul
mov
or
pop
mov
das
push
adc
cmp
xchg
dec
cmp
call
or
lods
xchg
loope
or
loop
sub
mov
into
adc
sahf
aam
(bad)
enter
loope
call
inc
inc
or
out
(bad)
test
loop
or
jb
xchg
add
loopne
sar
lahf
inc
add
xor
in
test
adc
add
gs
loopne
adc
ja
xchg
mov
push
enter
sbb
sahf
int
pusha
cmp
fs
daa
ret
stc
add
dec
xor
adc
adc
scas
aaa
and
push
leave
imul
(bad)
or
jmp
and
or
popa
mov
addr16
dec
jno
xchg
xor
in
aam
mov
xchg
mov
or
frstor
popa
cmc
popa
cwde
add
arpl
js
inc
mov
lea
inc
pop
adc
div
popf
mov
push
shl
dec
imul
data16
stos
int
mov
test
adc
mov
xor
jb
sbb
movs
mov
or
sub
cli
nop
neg
cmp
idiv
je
xchg
addr16
or
addr16
sbb
ja
cli
dec
inc
daa
loope
imul
cmp
pusha
aam
je
imul
dec
dec
lods
fwait
stos
pop
adc
adc
and
cld
ss
mov
jmp
adc
adc
jo
in
pop
xchg
aaa
scas
pop
push
icebp
div
mov
mov
daa
dec
mov
les
xchg
imul
fsubr
jl
lock
repz
xchg
cmc
iret
lahf
cmp
pop
jmp
cmc
imul
mov
cmp
mov
jecxz
in
mov
mov
mov
jb
addr16
std
jne
mov
add
push
std
out
out
xor
sbb
lea
fsubr
addr16
jb
shr
retf
inc
cli
movs
mov
mov
dec
ror
mov
cmc
loopne
nop
imul
and
sub
sbb
lods
and
loop
pop
push
or
sbb
and
pop
inc
xchg
pop
push
jmp
inc
iret
scas
movs
hlt
cld
(bad)
or
pop
inc
nop
adc
cmp
cmps
shr
movs
adc
sub
xchg
call
es
push
rcr
lea
and
sub
and
std
int3
xchg
jle
sti
sbb
es
jg
mov
jne
dec
push
daa
and
jne
dec
arpl
dec
outs
pop
cmp
dec
ds
xchg
cmp
push
cmp
adc
les
pop
dec
ja
sub
es
test
jge
test
add
or
(bad)
jecxz
fidivr
pop
fild
fcomp
pop
mov
jo
imul
or
xchg
cmp
dec
fsubr
loop
daa
jge
lock
aaa
mov
(bad)
xlat
mov
clc
cmp
test
sbb
mov
and
(bad)
mov
push
push
nop
push
mov
push
movs
lahf
je
push
jns
imul
imul
js
push
xchg
loop
xlat
add
xrelease
xor
sbb
icebp
cmp
not
fdivrp
push
xor
cmp
cmc
mov
xchg
into
mov
ds
xor
repz
adc
fimul
adc
das
push
pop
xlat
mov
sub
nop
jb
or
mov
jg
sbb
mov
ja
gs
daa
sub
mov
sbb
js
rcl
sbb
adc
cmp
sub
popa
pop
dec
xlat
lods
mul
shl
sbb
in
test
xchg
sar
lea
or
ror
fs
push
loope
jo
(bad)
fwait
dec
jno
mov
sbb
lea
or
fnsave
xor
idiv
cmp
gs
jnp
loope
aaa
add
mov
push
das
mov
fsubr
shl
pop
ins
sub
inc
inc
sub
loopne
jge
not
mov
fisubr
lea
jns
call
pop
cmp
stos
xchg
ss
ds
dec
xlat
push
pop
mov
xchg
in
test
int3
rcr
sbb
cmps
sub
stos
fdiv
or
mov
dec
adc
jns
movs
and
push
mov
adc
xchg
mov
rol
(bad)
mov
repz
push
dec
mov
jl
cwde
popa
ret
movs
jmp
lods
xchg
popf
cmp
jno
jmp
fs
fdivr
dec
rcl
pop
push
and
jp
cdq
ins
sub
iret
and
add
inc
or
test
jno
std
into
mov
and
sbb
cwde
pop
div
pop
lahf
ins
repz
or
cmp
(bad)
loopne
and
sub
outs
or
mov
cmp
xchg
ret
push
aaa
sub
not
inc
sub
test
daa
xor
cmc
push
mov
mov
mov
mov
xchg
jmp
fstp
div
or
add
mov
cmp
sbb
inc
cmp
(bad)
jmp
xchg
xchg
push
inc
(bad)
mov
fnsave
pop
out
mov
or
mov
push
dec
inc
inc
push
or
mov
pcmpeqb
cmp
xor
pop
add
shl
scas
sub
push
sbb
loope
jns
imul
sbb
mov
fcom
test
pop
mov
movs
scas
cmp
xor
cmp
push
cmp
loop
inc
and
imul
xlat
cmp
pop
dec
and
rcr
mov
lock
ins
add
hlt
rol
sahf
js
(bad)
sbb
push
loop
cmps
push
cmp
pop
add
inc
or
into
or
lods
test
add
push
(bad)
loope
jmp
stc
fmul
(bad)
js
lds
iret
mov
loop
push
xchg
pop
outs
or
stos
sub
or
(bad)
sti
movs
fidivr
aam
out
(bad)
jns
cmp
jle
mov
out
xlat
and
fisubr
xor
aas
ds
hlt
inc
jmp
xlat
adc
pop
adc
scas
or
int3
movs
std
stc
pop
dec
pop
loopne
das
repz
adc
jl
inc
iret
lock
repz
mov
jl
(bad)
stos
daa
push
xchg
mov
cli
push
pop
movs
sar
shl
push
shl
cmp
mov
or
and
or
aas
imul
mov
out
adc
aaa
push
loopne
push
adc
cld
mov
cmp
sub
push
jnp
iret
mov
or
scas
(bad)
int
push
add
sahf
add
mov
add
in
pusha
rcl
adc
pop
test
ja
or
and
rcr
arpl
sbb
mov
out
aam
loope
fimul
push
mov
inc
adc
aas
and
and
cmp
sub
pop
rcl
sub
mov
cmp
xlat
js
mov
pushf
aam
pop
inc
xchg
fsub
sub
inc
jnp
inc
xor
adc
sub
mov
(bad)
rcl
cmp
inc
sar
push
test
sbb
pop
shl
xor
pusha
and
arpl
(bad)
mov
std
dec
inc
mov
(bad)
out
mov
div
loopne
neg
or
out
mov
call
outs
(bad)
call
retf
scas
aas
inc
scas
sbb
test
mov
mov
dec
xor
lods
inc
stos
ror
pop
popf
inc
dec
sti
cmp
movs
pop
adc
in
in
popf
pushf
sbb
inc
pop
aad
add
dec
mov
and
fadd
cmp
fild
cdq
test
jno
jl
bound
rcr
add
cmc
retf
jmp
rcl
adc
xchg
adc
push
adc
dec
and
mov
mov
cmp
or
push
push
cmp
js
fmul
rsm
jmp
mov
or
fistp
mov
shl
mov
mov
push
pop
test
ins
jne
ror
(bad)
pusha
add
add
xor
sbb
pop
adc
test
or
in
into
pop
mov
not
sti
mov
sub
push
(bad)
jmp
in
jb
sub
sub
jmp
repnz
pop
adc
ret
sahf
cmp
mov
sbb
mul
rol
mov
movs
lock
xchg
ja
inc
repnz
push
xlat
adc
shl
movs
inc
add
test
mov
xor
and
and
aaa
xchg
add
inc
fcmovnb
mov
movs
mov
(bad)
xchg
inc
fimul
jecxz
movs
jns
hlt
mov
and
pop
pop
(bad)
iret
and
daa
adc
pop
jp
jae
adc
xchg
sbb
cli
ins
dec
adc
test
in
(bad)
mov
cmp
mov
mov
push
into
js
inc
xor
movs
js
pop
xchg
fucom
clc
fcomp
in
dec
dec
sbb
mov
and
mov
push
loop
outs
das
cmp
addr16
jmp
enter
loopne
pop
cmp
cs
dec
mov
ins
in
and
int
je
adc
jmp
stos
sbb
arpl
out
popa
and
sub
fldcw
inc
xchg
mov
enter
mov
mov
xchg
fisttp
jno
dec
icebp
mov
pop
jbe
stos
sbb
mov
mov
out
scas
xchg
fistp
xor
xchg
sub
test
rcr
das
add
mov
mov
(bad)
pop
add
mov
scas
add
nop
imul
cld
jg
aam
push
das
mov
(bad)
rcl
adc
aad
or
xor
dec
dec
loope
cmc
imul
sbb
push
sbb
jp
mov
xchg
arpl
ja
mov
inc
add
mov
stos
jns
nop
mov
jge
mov
push
xchg
stos
icebp
jne
addr16
inc
popa
mov
nop
shl
xchg
fnstenv
dec
stc
sub
bnd
inc
push
dec
mov
cmc
inc
retf
fadd
mov
je
push
es
shl
gs
mov
sbb
sbb
lock
nop
add
add
inc
and
cwde
mov
mov
sar
into
cmp
(bad)
mov
mov
cs
jmp
repnz
adc
sbb
sbb
adc
mov
mov
mov
dec
das
loopne
add
icebp
push
loopne
adc
lahf
imul
add
adc
hlt
mov
fiadd
ja
push
pop
int
scas
xchg
je
pop
mov
jno
gs
xor
ror
lods
fnstsw
frstor
adc
cdq
jo
jle
push
adc
pop
pop
cmp
ret
test
jg
ret
jbe
ins
fcmovbe
add
push
cli
ja
add
adc
mov
mov
shr
not
lods
lea
mov
(bad)
(bad)
sbb
not
add
std
xchg
mov
out
test
inc
inc
nop
dec
add
repz
or
sub
js
scas
jbe
loop
cmp
stos
jle
mov
mov
(bad)
xlat
inc
movs
lea
pop
mov
sbb
fimul
mov
xchg
js
xlat
push
adc
xlat
cmp
mov
outs
jbe
sbb
minps
push
cdq
cmp
test
mov
or
push
xor
push
push
fld
sbb
pop
adc
sbb
lock
pushf
add
daa
adc
jge
adc
and
push
inc
adc
gs
aam
inc
(bad)
mov
and
aad
daa
ret
inc
jg
mov
fisttp
mov
nop
dec
add
add
cwde
lahf
pop
sub
mov
push
push
sub
add
repnz
mov
aas
aaa
xor
addr16
inc
clc
mov
cld
add
jecxz
cs
ds
mov
pop
sub
aam
test
pop
mov
movs
data16
movs
ret
leave
dec
cs
cmp
jbe
imul
jmp
inc
stc
fstp
dec
repz
imul
mov
inc
pop
ja
aaa
fst
rcr
(bad)
iret
stc
pushf
mov
in
and
retf
mov
call
xchg
cmc
mov
cs
sbb
mov
mov
aam
pop
ror
dec
dec
sbb
mov
imul
jmp
lods
lea
ror
fs
xchg
jb
out
pop
mov
movs
or
sub
push
(bad)
repnz
jbe
push
inc
mov
cmc
leave
repz
and
ret
push
jg
loopne
fs
(bad)
adc
in
jl
jle
mov
test
aam
enter
mov
mov
mov
cmp
setbe
in
and
in
sub
jno
ss
out
push
clc
pop
fcmovu
cmps
jecxz
mov
dec
movs
jge
retf
mov
fisub
loope
rcl
cmp
call
movs
les
retf
enter
(bad)
sub
in
addr16
sub
mov
nop
dec
dec
push
test
in
jno
in
pop
loopne
ss
mov
xchg
xchg
add
ins
inc
(bad)
mov
dec
cmp
push
iret
pop
adc
jecxz
out
mov
scas
pop
push
nop
adc
mov
adc
enter
mov
cmp
aas
inc
mov
sbb
js
xlat
dec
and
pop
sub
or
push
(bad)
sub
icebp
pop
movs
jmp
mov
cmp
loopne
pop
xor
hlt
aam
jb
add
xchg
push
jmp
pop
lea
aas
enter
adc
dec
xchg
fucomp
sub
jno
jg
arpl
ss
bound
sub
push
xchg
bound
or
or
and
sahf
push
push
repnz
mov
cdq
lahf
cmp
inc
test
jae
xchg
and
movs
cmp
mov
aad
scas
loope
cmps
jne
adc
mov
fild
cmc
shr
jb
jge
inc
pop
fmul
lea
ret
pop
in
addr16
inc
jne
pop
es
inc
dec
inc
into
dec
movs
adc
mov
loope
ds
test
ror
mov
fcomip
lahf
inc
scas
sbb
enter
pop
mov
adc
push
mov
xchg
cmp
shr
inc
inc
mov
lds
inc
addr16
xor
out
sub
fisub
lahf
shl
loop
push
je
ror
mov
mov
cmc
xor
xchg
je
cmps
push
xor
xor
mov
jno
hlt
sub
ins
sbb
shl
test
xchg
dec
cmp
test
sbb
and
mov
out
xchg
cmp
pop
cmp
sahf
aad
rcr
add
cmps
test
int3
scas
sub
loop
pop
lods
scas
loope
int
inc
enter
stc
sbb
pop
dec
inc
add
aas
or
sbb
aaa
xchg
test
add
jl
push
sbb
dec
inc
sub
or
mov
movs
adc
or
idiv
call
pusha
sti
retf
and
mov
sub
(bad)
mov
repz
ror
pushf
push
push
out
jae
(bad)
leave
out
xchg
inc
or
dec
mov
test
push
xor
inc
add
out
repz
jbe
test
and
sbb
inc
loope
fs
jb
jmp
out
inc
clc
aas
stos
lock
and
jecxz
sbb
das
xchg
or
push
shl
outs
mov
and
test
aas
push
pop
adc
stos
inc
(bad)
dec
or
sti
or
lahf
rol
inc
ins
add
inc
in
mov
inc
jne
rcr
add
push
push
lea
jo
mov
jl
pop
fld
sbb
and
arpl
pop
xchg
aad
ins
sbb
sub
sub
or
or
mov
inc
pop
aam
and
and
outs
outs
push
ror
sbb
sub
add
inc
loop
popa
inc
inc
sbb
xor
(bad)
mov
push
adc
dec
add
mov
pop
add
add
leave
jb
shl
addr16
imul
jl
pop
add
xchg
sub
dec
in
lods
push
lods
ror
sbb
cmp
adc
fs
je
or
rcr
and
ja
adc
mov
mov
cdq
xchg
neg
arpl
jl
push
call
jle
aad
dec
cmp
sub
ja
mov
add
lods
scas
cmp
sbb
inc
push
inc
pop
data16
cdq
movs
gs
cmp
push
ror
or
sub
sar
and
hlt
sbb
add
xchg
icebp
shr
and
in
icebp
scas
stos
sbb
out
mov
pop
xchg
(bad)
dec
push
(bad)
jmp
mov
ds
xor
sbb
loope
cmp
ret
inc
jl
sub
push
mov
ror
(bad)
add
ja
clc
mov
pop
stc
push
xchg
ja
push
xor
icebp
imul
fwait
or
push
and
adc
jmp
lahf
or
addr16
call
adc
mov
cmps
and
sub
cld
add
int3
ins
movs
and
mov
test
mov
loopne
sub
in
rcl
movs
or
cmp
mov
icebp
jmp
cmp
mov
add
sti
imul
test
iret
pop
jecxz
in
hlt
add
js
imul
jecxz
pop
mov
lahf
or
jnp
icebp
mov
push
pop
xchg
xchg
cmp
lods
mov
pusha
call
and
sbb
inc
in
fisttp
add
jl
call
mov
test
lock
shl
add
add
ins
es
dec
or
sbb
mov
sub
pop
add
into
push
mov
not
imul
arpl
sub
push
sub
xchg
xor
xchg
lods
adc
cmp
pop
mov
or
ret
dec
ret
cdq
xor
pop
and
jae
sub
xor
and
sbb
xor
jmp
call
add
enter
inc
shl
stos
jb
popf
arpl
es
inc
jl
add
and
push
mov
cld
cmps
popa
and
les
push
and
or
dec
(bad)
push
enter
inc
cs
movs
dec
jecxz
xchg
cmp
retf
add
mov
loope
daa
scas
out
jmp
and
or
out
out
jbe
cwde
scas
test
xor
jmp
inc
xchg
nop
xlat
pop
lahf
push
fmul
pushf
pop
leave
iret
mov
pushf
mov
push
int
bound
mov
xchg
pushf
xor
mov
(bad)
bound
lods
retf
fadd
xor
and
ret
xchg
dec
pop
fsubr
dec
(bad)
div
jge
inc
fsubr
loop
push
dec
hlt
fcomp
xchg
aad
fcom
test
rol
fild
xchg
jge
ret
lea
out
inc
ficomp
in
pop
es
cli
push
mov
cmp
adc
pop
retf
(bad)
ins
(bad)
mov
cli
pushf
enter
into
arpl
jne
pop
sahf
jge
sbb
sub
ret
addr16
lahf
mov
or
outs
jb
sbb
repz
mov
sar
xor
lock
inc
pop
inc
ror
movs
sti
call
xchg
and
jmp
dec
or
in
and
std
inc
pop
(bad)
test
sbb
nop
mov
mov
xchg
bound
lock
add
mov
and
iret
call
xor
push
sbb
mov
and
pop
not
ds
loope
pop
add
icebp
or
jae
adc
inc
test
add
mov
inc
sbb
push
rcr
push
lods
mov
rcl
pop
push
adc
leave
inc
test
scas
dec
les
enter
mov
out
retf
shl
std
inc
push
imul
out
mov
push
rol
pop
mov
(bad)
pop
mov
enter
xor
pop
adc
xor
dec
cmp
call
lsl
or
add
lock
mov
iret
xchg
sbb
mov
leave
add
xchg
ret
sbb
jns
xor
fist
mov
icebp
sbb
clc
sbb
mov
xchg
push
test
adc
adc
or
pop
cmps
mov
retf
cmc
and
fcomp
sbb
scas
in
out
mov
sbb
push
or
ss
ss
div
push
and
out
push
add
jecxz
cmp
retf
sbb
aad
push
into
stos
xchg
jl
call
inc
pop
mov
add
push
pop
push
or
sub
ret
aam
push
clc
mov
adc
jb
ins
sub
and
lds
in
fcom
xchg
in
daa
xchg
cmps
cwde
ficom
mov
jmp
loope
push
and
js
add
mov
js
push
mov
and
addr16
std
loope
dec
jg
mov
stc
sub
push
enter
fidivr
adc
push
push
pop
pop
ror
jle
mov
iret
loop
repz
js
repnz
mov
das
loopne
retf
sub
js
add
push
xlat
lock
test
gs
(bad)
jmp
xchg
or
mov
sti
adc
hlt
add
cmp
mov
(bad)
adc
js
lock
pop
cmp
sbb
xchg
mov
das
outs
outs
shl
(bad)
jmp
lock
out
cmp
mov
iret
out
out
les
cs
jnp
das
fidivr
inc
fmul
ins
(bad)
ror
icebp
cld
int3
adc
lods
inc
jmp
sbb
ds
add
repz
jl
and
outs
outs
and
or
repz
movs
into
icebp
push
xchg
js
or
xchg
xor
xchg
lahf
inc
add
jmp
cmp
sbb
fldcw
je
sbb
stos
cmp
or
in
adc
iret
sbb
jg
loop
sbb
rcr
push
jecxz
dec
lahf
dec
out
imul
xchg
aad
fst
pop
sbb
mov
adc
nop
xor
xor
push
mov
xchg
push
ror
inc
scas
push
fxch
nop
iret
dec
mov
into
dec
mov
xor
cmc
mov
jmp
dec
push
sbb
mov
call
rol
mov
xchg
cmp
repnz
dec
adc
pop
in
and
sub
ja
cmp
mov
push
adc
add
into
in
ret
mov
inc
and
or
mov
lahf
jecxz
and
add
add
add
lds
(bad)
jg
push
and
add
mov
push
or
dec
cmps
push
dec
in
mov
xchg
mov
and
jo
leave
or
cmp
(bad)
mov
add
adc
lahf
sub
out
cmc
test
push
lock
and
mov
loop
cmc
or
hlt
dec
push
cs
adc
xchg
inc
mov
dec
dec
sbb
movs
call
and
mov
xchg
sbb
push
jbe
out
sar
sub
(bad)
fmul
jb
and
and
rcl
mov
jl
sbb
stos
add
mov
push
mov
add
mov
jecxz
sub
adc
sbb
pop
imul
cmps
xchg
mov
xor
xchg
outs
and
jecxz
movs
mov
int3
add
or
outs
scas
loope
xchg
lods
mov
out
cwde
mov
mov
jb
jbe
pushf
mov
repnz
cld
retf
int
cmps
adc
xchg
lds
jns
arpl
ss
daa
cld
xchg
daa
ins
pop
clc
and
repz
pusha
repz
xor
int3
sbb
in
mov
and
int
xor
cmp
arpl
rcr
(bad)
pop
cmp
ja
sbb
push
dec
(bad)
jne
mov
sbb
lods
sahf
clc
add
cli
add
cmps
cmc
and
les
fs
cmp
add
jmp
js
add
in
js
outs
adc
in
mov
cmc
xchg
icebp
gs
or
daa
call
push
cwde
mov
outs
inc
adc
dec
xchg
xor
sub
push
enter
adc
xor
mov
clc
repnz
arpl
aas
pop
mov
add
cmps
lahf
sbb
bound
lock
or
pop
jmp
mov
push
mov
stos
jno
test
lods
sub
pusha
jbe
add
bound
psubw
gs
adc
test
imul
sbb
cmp
mov
mov
push
mov
sti
(bad)
jge
in
pop
mov
xlat
fisubr
rol
inc
cs
loop
xchg
push
jbe
call
stos
jp
aam
dec
add
stc
fist
je
movs
dec
add
sub
adc
nop
adc
add
cmp
mov
sbb
std
es
movs
adc
rcr
in
mov
mov
clc
dec
or
xchg
mov
push
jb
inc
movs
xchg
test
or
xchg
or
add
push
dec
aad
or
mov
push
mov
mov
outs
es
jns
pop
jbe
dec
add
pop
sar
(bad)
pop
ja
es
jae
movs
pop
je
addr16
xchg
data16
push
mov
je
jmp
jmp
or
out
je
or
xor
jmp
mov
jne
test
(bad)
fsubrp
add
adc
ins
test
ret
mov
push
mov
das
or
repz
push
mov
lea
addr16
inc
ret
mov
iret
idiv
xor
xchg
push
ja
retf
dec
dec
mov
push
(bad)
pop
and
jge
dec
sub
fcomp
adc
das
dec
jecxz
stos
mov
ss
sub
xlat
sahf
add
sub
adc
stos
pop
sub
mov
and
ret
int3
(bad)
stc
xor
int
sub
popa
jb
pop
dec
outs
pushf
setae
in
movs
(bad)
xor
xor
push
xor
pop
clc
xchg
mov
pop
or
fwait
push
ret
stc
icebp
push
sbb
pop
adc
and
mov
(bad)
ror
sbb
mov
xor
jle
pop
aad
and
and
pop
xor
aad
sar
or
pop
mov
xchg
pop
pop
out
adc
jl
mov
lods
test
cli
dec
and
fiadd
ror
fprem
jp
push
loopne
adc
hlt
pop
movs
ins
push
lock
adc
std
push
or
sub
aas
or
ret
push
out
nop
mov
add
sub
iret
sahf
mov
dec
jecxz
mov
mov
adc
and
out
and
push
icebp
mov
xchg
shl
pop
and
add
dec
or
pop
or
xchg
mov
inc
sbb
rol
sbb
xchg
mov
push
mov
dec
push
lahf
inc
pop
pop
push
dec
loop
pop
xchg
in
push
lods
jnp
and
jg
mov
pop
fsub
and
jne
fiadd
imul
test
mov
or
fistp
jne
cwde
dec
add
movs
add
shl
fisttp
lahf
leave
sahf
popa
int3
xchg
pop
adc
push
(bad)
out
fsub
mov
(bad)
jg
mov
cld
daa
rol
dec
xchg
sub
and
movs
and
xor
imul
adc
xchg
add
test
(bad)
leave
lods
adc
pushf
jne
jo
pop
jge
outs
pop
ror
scas
mov
mov
pop
aas
frstor
xor
jp
push
retf
xor
jnp
xor
enter
dec
sub
inc
in
sub
jecxz
sar
(bad)
push
sbb
das
mov
stc
add
sub
cmp
rol
sbb
xlat
pop
test
cmps
cmp
mov
add
lea
nop
cmp
ds
loopne
jnp
loop
test
cld
adc
std
aad
pop
and
aam
inc
mov
daa
sbb
cmc
fisttp
and
faddp
push
repnz
mov
cmp
ds
lahf
les
fild
pop
push
shl
push
push
lods
imul
xor
outs
ins
sub
inc
adc
rcl
test
cmps
xchg
xlat
arpl
mov
es
shl
imul
jno
jne
mov
pop
inc
xchg
and
in
test
scas
sbb
add
pop
dec
jnp
sub
sti
data16
mov
and
xlat
adc
pop
pop
outs
inc
xor
push
add
xor
inc
xchg
mov
pop
mov
(bad)
mov
aas
xchg
xor
inc
jnp
pop
ror
xor
push
fistp
imul
rol
dec
cmp
mov
(bad)
cs
ret
dec
mov
stos
popa
cmp
push
icebp
dec
sbb
cmc
dec
xor
xor
add
sbb
adc
sar
and
add
cmps
or
adc
stos
nop
mov
or
mov
retf
adc
inc
cld
fs
icebp
xor
ja
dec
sub
jecxz
int3
stc
cs
call
inc
cmp
retf
and
cmp
ins
shl
and
stos
or
push
shl
clc
xor
shl
(bad)
mov
xor
(bad)
test
xchg
pop
inc
inc
popf
adc
fdiv
push
sbb
in
mov
or
cwde
iret
clc
lods
pop
mov
std
cdq
xor
push
call
sar
adc
xchg
add
and
mul
cmp
add
or
(bad)
sti
out
add
loop
retf
mov
push
add
ins
add
leave
push
test
clc
imul
shr
mov
or
sbb
push
or
add
push
add
mov
push
dec
inc
movs
push
dec
aam
mov
shr
outs
and
fcomp
pop
adc
scas
mov
jle
es
jbe
push
js
rcr
pop
aaa
shl
mov
xor
pop
jbe
xchg
jl
xchg
jb
pop
dec
cmp
and
ja
das
or
loopne
outs
push
cmp
shl
mov
jns
mov
stos
dec
add
push
mov
lds
retf
or
mul
sbb
jge
and
mov
lock
nop
xchg
dec
(bad)
shl
or
retf
test
pop
retf
rcr
(bad)
dec
pop
jo
leave
sbb
and
cmp
(bad)
icebp
(bad)
cld
stc
add
pop
aas
or
xchg
ret
xchg
add
push
adc
js
fcom
aaa
push
pop
jnp
arpl
or
inc
bound
dec
lods
imul
fwait
sub
and
movs
sub
(bad)
xor
mov
int3
inc
jns
jns
lahf
adc
mov
std
fisub
mov
cmp
cmc
xor
mov
data16
adc
popf
xor
or
hlt
fidiv
or
jmp
pusha
jbe
push
dec
movs
repz
xor
les
sub
mov
shufps
aas
xor
jmp
lock
mov
jb
cmp
xchg
jle
stos
jecxz
and
hlt
ins
pop
dec
std
or
jmp
int3
xchg
xchg
xchg
(bad)
jae
xchg
(bad)
adc
inc
jns
inc
test
lds
mov
mov
adc
dec
dec
dec
popf
dec
in
(bad)
(bad)
fnstenv
dec
add
adc
sbb
loopne
push
and
imul
cmp
add
sbb
and
adc
cmp
push
imul
pop
inc
sbb
in
lahf
dec
or
or
jl
xchg
iret
pop
lea
add
dec
mov
xor
xor
add
inc
repz
adc
jne
aaa
movs
mov
into
imul
js
das
test
test
daa
xchg
arpl
dec
sbb
scas
nop
add
stc
sti
adc
inc
inc
clc
ja
sbb
add
out
(bad)
lods
adc
(bad)
clc
jbe
in
lods
add
jmp
jb
cld
mov
clc
dec
inc
daa
xchg
dec
je
mov
std
push
push
movs
xchg
sub
push
push
push
jno
pop
mov
lods
push
retf
mov
pop
test
push
retf
loopne
xchg
out
mov
(bad)
hlt
jbe
iret
jb
ror
xor
pop
sbb
jne
pop
rcr
out
into
ins
sbb
call
push
pop
jmp
loope
pop
icebp
arpl
pop
or
cmps
inc
scas
or
push
inc
or
sbb
xchg
aaa
push
xor
inc
add
pop
mov
inc
jl
addr16
cmps
in
adc
fimul
loopne
and
push
sbb
je
cwde
test
cli
push
sub
push
movs
inc
or
lea
sti
cdq
mov
mov
daa
xchg
xchg
xchg
jp
enter
(bad)
movs
lock
neg
test
into
lods
popf
mov
push
and
fiadd
outs
sbb
xchg
arpl
imul
sub
jge
test
pop
(bad)
xlat
hlt
lds
jge
push
or
inc
fild
xor
push
xadd
push
inc
push
or
sbb
movnti
sti
popa
pop
and
lea
adc
xor
or
sub
xor
xor
or
iret
fisttp
sub
mov
ficomp
push
(bad)
add
xor
xor
rol
pop
add
test
pop
ror
sub
jne
mov
repnz
dec
ret
jo
lods
loop
(bad)
gs
xor
ins
cmp
gs
fnstcw
mov
xchg
xchg
jle
addr16
sub
repz
and
(bad)
iret
jb
push
in
lods
jae
pop
repnz
aas
iret
adc
mov
movs
std
stos
inc
jmp
xchg
inc
or
inc
jmp
add
inc
jno
clc
call
and
xchg
dec
sbb
mov
pop
xor
push
inc
or
pop
push
push
rol
add
pop
cmp
push
xor
push
sbb
push
gs
or
jae
mov
and
mov
imul
mov
fnstsw
scas
std
jecxz
sahf
mov
mov
push
jmp
pop
(bad)
dec
test
xchg
hlt
nop
dec
mov
or
test
or
dec
and
nop
adc
inc
inc
rcl
hlt
add
mov
xor
sbb
dec
fchs
jge
cmp
call
pop
dec
add
stc
push
dec
inc
outs
imul
or
ja
dec
pop
mov
lods
(bad)
push
sub
stc
retf
xor
push
sub
jb
ret
rcl
dec
mov
sbb
test
fisub
pushf
in
push
dec
mov
test
fisubr
dec
pushf
mov
outs
nop
mov
push
ds
and
in
stos
int3
test
out
cwde
fnstcw
sbb
mov
call
xchg
inc
adc
(bad)
(bad)
popa
pop
push
daa
dec
sub
mov
test
sbb
jle
and
mov
test
mov
movs
inc
jb
adc
dec
add
dec
add
arpl
add
pusha
sbb
and
popa
and
cmps
adc
lea
lock
sub
sub
ins
(bad)
jl
push
pop
sub
nop
mov
lock
(bad)
stc
dec
std
cld
out
jle
jmp
cmps
cmc
shr
das
push
mov
dec
mov
pop
push
mov
(bad)
popa
ins
popf
inc
or
loopne
jle
fst
stos
adc
push
pop
je
ret
mov
adc
ret
jl
lods
cwde
das
cmp
cmc
inc
cmps
and
pop
les
in
or
pop
and
sub
mov
mov
jge
mov
call
jp
mov
ror
gs
adc
jae
mov
xor
mov
push
jo
pop
pop
mov
jae
and
and
adc
dec
sti
ins
repz
pop
push
test
(bad)
push
ret
dec
mov
mov
ret
or
push
or
pop
push
(bad)
jge
arpl
(bad)
mov
in
fwait
mov
test
dec
mov
daa
loop
into
push
js
scas
xor
call
push
mov
adc
sub
sbb
test
sbb
xchg
and
or
icebp
data16
cmp
inc
jg
test
mov
sub
inc
in
test
lock
sub
jne
loop
and
inc
jmp
retf
dec
add
mov
jb
lea
popa
nop
add
cmp
mov
lods
or
sbb
call
add
cmp
(bad)
cmp
out
cmps
test
mov
mov
xchg
push
cmp
popf
mov
sub
mov
in
sbb
mov
inc
xor
aam
xor
dec
dec
cld
fisub
or
sbb
pop
add
add
adc
in
nop
in
test
clc
sbb
dec
add
add
stos
jle
mov
cmps
ror
adc
popf
dec
movs
xor
or
mov
je
and
pusha
(bad)
jmp
into
(bad)
leave
mov
dec
es
cli
mov
sbb
ret
dec
add
call
adc
pop
and
sbb
nop
sbb
in
sar
xchg
loope
hlt
and
or
(bad)
adc
loop
sbb
xor
sub
pushf
test
shl
add
add
jno
sub
xchg
mov
jbe
adc
inc
adc
mov
jle
and
cmp
mov
inc
out
pop
xchg
xchg
jno
mov
sbb
pop
xchg
(bad)
cmps
cld
mov
out
ret
fcom
in
mov
aas
xchg
jbe
(bad)
(bad)
push
aad
mov
out
xchg
add
test
rcr
mov
test
adc
push
xor
stos
xchg
xchg
(bad)
cwde
call
mov
inc
popa
push
lea
test
test
aad
xor
ret
mov
xchg
inc
repnz
or
sub
sub
sub
mov
jg
sub
cmp
push
jbe
sti
cld
dec
push
outs
es
mov
fimul
int
loopne
mul
(bad)
jne
mov
mov
ds
and
lds
xchg
cmp
mov
push
jo
div
push
inc
add
(bad)
push
xchg
inc
int3
test
loope
add
mov
xor
xlat
bound
mov
adc
cwde
mov
daa
out
sar
ds
popf
sub
shl
push
inc
ret
jl
ins
xchg
sub
jge
or
popa
paddsb
add
arpl
fs
pop
cmp
rcl
push
pop
lock
sbb
scas
sbb
adc
pop
adc
mov
jmp
jb
cmp
mov
ror
push
pushf
push
jp
sub
shl
add
int
add
call
mov
inc
popa
lods
cmp
add
xchg
mov
add
sub
movs
dec
sub
(bad)
(bad)
repz
repz
aad
inc
outs
cdq
jbe
or
stos
outs
jb
sub
adc
inc
and
xchg
pusha
dec
rcl
stc
sub
adc
push
loope
(bad)
adc
outs
adc
xor
sbb
xchg
cmp
adc
loopne
in
adc
add
add
mov
xor
fild
push
test
je
aam
sub
push
push
inc
cmps
xchg
retf
movs
sbb
movs
push
shr
je
xchg
int3
and
jmp
mov
lea
add
or
sbb
lea
ror
ret
sbb
scas
adc
push
and
jg
jecxz
sti
test
rol
push
sbb
push
test
gs
mov
je
(bad)
iret
scas
les
ret
cmps
dec
es
scas
movs
(bad)
mov
xor
aaa
add
aad
or
fwait
vminps
push
and
push
add
jmp
int3
fnstenv
mov
xchg
mov
xor
push
outs
out
and
sbb
add
push
jmp
and
inc
fidiv
std
repz
xchg
jb
or
int3
push
mov
jo
xchg
fcom
stos
xor
mov
(bad)
unpckhps
sar
test
mov
xchg
loop
(bad)
test
mov
ds
ins
cwde
inc
popa
or
(bad)
cmp
pop
mov
xchg
loope
mov
mov
pop
inc
clc
inc
vpsllq
repz
int
in
pop
cmp
ret
shl
pop
xor
sti
xchg
dec
(bad)
xchg
mov
leave
add
pop
xor
jnp
inc
fdivr
retf
or
imul
jle
cmp
pop
inc
aaa
(bad)
or
arpl
pushf
sbb
into
mov
imul
stos
es
ret
cmp
pop
aaa
lods
and
mov
loop
lea
mov
popf
pop
ins
or
and
xor
sub
cli
adc
adc
mov
popf
pop
add
data16
loope
js
jmp
or
mov
icebp
jle
jno
std
fst
out
cmp
gs
mov
pop
fsubr
or
mov
or
shl
xchg
les
add
or
xchg
loope
add
mov
jb
dec
xchg
loop
jo
out
pop
or
pop
xor
in
ror
cmp
push
pop
fs
push
inc
mov
aaa
mov
and
loopne
cmps
mov
xchg
adc
scas
push
mov
cld
cmp
(bad)
shr
inc
sahf
xor
cmp
(bad)
iret
jecxz
cmp
adc
aad
pushf
push
test
cmps
pop
out
jb
pop
das
mov
push
xchg
nop
(bad)
adc
and
call
xor
jg
push
cdq
push
inc
nop
inc
inc
push
adc
inc
dec
and
inc
xor
dec
cmp
(bad)
fadd
mov
shl
inc
add
daa
xor
das
mov
mov
mov
xor
fisttp
sub
pop
mov
lods
pop
cs
mov
or
and
mov
ins
sar
push
mov
shr
jl
jne
and
push
add
movs
push
enter
in
push
sub
or
leave
xchg
(bad)
in
push
sub
xchg
in
xor
jp
dec
jne
inc
ficomp
push
add
enter
fiadd
mov
daa
xchg
mov
mov
pop
int3
sub
in
test
xor
js
pop
adc
sbb
adc
push
dec
idiv
ret
rcr
in
pop
and
ja
iret
xlat
loopne
cmp
fcomp
cmovg
mov
xchg
out
nop
mov
bound
sub
mov
xor
sahf
loope
movs
ins
mov
aaa
or
xchg
jb
iret
push
and
aas
test
push
jne
inc
fbld
adc
loop
cmp
adc
and
mov
in
inc
out
dec
enter
rcr
sbb
popa
loope
xchg
shr
and
and
xor
mov
jle
data16
pop
movs
cmps
mov
dec
js
aam
addr16
mov
and
loope
ds
xchg
lahf
scas
and
out
and
fiadd
xlat
jnp
stc
inc
(bad)
icebp
(bad)
cmc
ret
ins
mov
push
pop
sar
cmps
adc
hlt
xor
inc
xchg
loope
(bad)
cdq
pop
cmp
mov
xor
sbb
mov
xchg
pop
inc
pop
mov
aas
mov
test
sbb
jnp
ret
mov
mov
cmp
cld
sub
or
fcomp
(bad)
retf
sbb
cmp
pop
add
retf
(bad)
shl
dec
sti
push
sub
jl
push
dec
cwde
jge
popa
(bad)
jmp
pop
pop
jmp
and
fwait
inc
xchg
inc
gs
mov
xor
loopne
xor
dec
sti
dec
jno
sbb
jmp
mov
stos
mov
mov
xor
test
test
mov
mov
pop
es
xor
push
iret
(bad)
mov
push
pop
push
stc
or
or
vcvtsi2sd
repnz
pop
cdq
jo
push
mov
mov
push
jmp
fs
mov
sub
ror
add
inc
out
ret
inc
std
xchg
aas
add
or
and
cld
add
inc
sbb
jg
addr16
adc
jg
dec
cld
mov
mov
rcr
mov
add
xor
arpl
mov
xchg
pushf
mov
test
and
imul
mov
das
test
push
cdq
dec
movs
(bad)
push
xchg
outs
into
out
data16
ret
dec
jge
mov
add
cmc
xor
and
mov
data16
and
loope
xchg
sub
into
push
or
mov
jns
shr
ror
popf
jecxz
call
loope
xchg
adc
pop
xchg
jbe
int3
bound
int3
sub
sbb
dec
aad
loop
xor
dec
jge
sar
sar
add
jne
lods
shl
ins
mov
clc
cmp
repnz
shld
nop
xchg
mov
push
sub
xchg
cwde
xchg
sub
std
pop
or
xchg
lock
adc
arpl
bound
das
sub
push
mov
xchg
add
in
push
outs
mov
cmps
dec
and
sub
arpl
popf
mov
popf
(bad)
retf
mov
neg
test
pop
mov
pop
add
fs
std
cdq
xchg
adc
gs
push
or
xchg
cmp
call
xchg
div
or
jns
sub
xor
movs
fistp
jg
fdivp
adc
dec
sti
sbb
or
rol
jnp
stc
loop
mov
xchg
fdivr
mov
mov
popa
inc
xor
xchg
bound
sub
jno
fst
xchg
retf
add
packuswb
(bad)
retf
icebp
cli
(bad)
or
cmp
das
into
dec
inc
loop
jmp
pop
sbb
mov
sub
fmulp
xor
jne
sbb
scas
xchg
shl
inc
adc
adc
retf
sbb
xchg
jge
jle
or
jp
mov
gs
and
add
inc
fidiv
clc
cmp
push
add
mov
loopne
xor
addr16
popa
jbe
xor
dec
cwde
or
cld
aam
in
movs
inc
sbb
sbb
scas
push
and
inc
popa
adc
cmc
mov
inc
lahf
pusha
gs
and
arpl
xor
sub
les
fdivr
jbe
ss
repnz
push
cmps
ss
or
aaa
cdq
mov
aam
es
les
adc
and
mov
push
jg
or
xchg
mov
sbb
cmp
cmp
xlat
lahf
xchg
cld
fsincos
dec
jecxz
add
imul
shr
mov
int3
xor
inc
cs
xchg
dec
mov
inc
cmps
xchg
leave
in
and
mov
sahf
dec
lods
push
dec
gs
clc
pop
outs
mov
pop
test
sti
jge
push
stc
je
popf
fs
nop
pop
jno
(bad)
lock
inc
jge
iret
and
push
xor
fiadd
mov
cmp
push
into
fild
cmc
ret
sub
mov
add
adc
sub
stos
jmp
retf
cmps
xchg
push
int
pop
fld
pushf
enter
leave
add
ins
xchg
add
aad
and
push
clc
dec
loope
addr16
lds
dec
mov
mov
cwde
dec
xchg
xchg
cmc
add
leave
dec
mov
std
cmps
and
jmp
mov
sar
data16
mov
ret
mov
ins
jle
shl
push
add
mov
sub
push
pop
xlat
mov
das
cmp
cdq
sbb
stc
cmps
adc
xor
call
dec
dec
int
out
add
sbb
aas
mov
enter
hlt
cmovs
daa
jp
enter
pop
add
jp
mov
js
jg
mov
jp
sti
das
nop
xchg
icebp
sbb
mov
movs
fiadd
repnz
push
retf
sbb
ds
loop
fwait
js
out
push
pop
fimul
int
jge
jg
or
pop
jnp
popa
iret
hlt
pop
sbb
push
or
das
inc
mov
adc
mov
std
sub
arpl
retf
jle
ficomp
test
mov
fs
test
push
sub
jmp
fmulp
push
ret
dec
mov
push
add
mov
sub
and
icebp
iret
ins
cmp
shl
sbb
jmp
xchg
test
stos
add
jns
adc
push
retf
rcr
jo
test
mov
cmps
or
retf
sbb
push
jle
push
test
call
xchg
movs
inc
inc
repnz
arpl
test
push
(bad)
and
psrlw
mov
cdq
mov
mov
sar
mov
pop
jnp
cwde
ds
dec
sahf
stc
or
cmp
cdq
mov
pushf
add
cmp
jmp
in
jno
and
jle
adc
mov
jmp
adc
addr16
dec
nop
gs
inc
push
mov
add
ss
mov
adc
cld
jne
imul
jl
mov
push
or
pop
nop
retf
xor
adc
push
sbb
or
test
dec
and
sar
in
cmps
jae
add
repz
sbb
daa
jns
gs
(bad)
(bad)
mov
cmp
dec
xchg
movs
push
xchg
sub
aam
sahf
adc
scas
dec
mov
lds
cdq
push
ret
xor
mov
pop
cmp
outs
push
cmp
adc
(bad)
sub
adc
stos
mov
mov
ss
ret
jbe
push
ror
fwait
stos
fsub
sbb
jge
mov
push
dec
xchg
movs
dec
sbb
in
add
or
fadd
pusha
das
sbb
sub
int
cmp
daa
xchg
loopne
retf
and
mov
adc
xor
out
jg
leave
dec
jle
iret
xchg
push
jecxz
aam
cwde
pop
lds
imul
sbb
add
stos
inc
(bad)
(bad)
call
pop
rcl
inc
push
xchg
xlat
lahf
call
or
adc
or
xor
cmps
and
leave
fcomip
dec
and
popf
rcr
and
pop
pop
or
push
mov
jmp
xchg
xor
enter
add
mov
shl
push
mov
(bad)
sub
ret
xchg
js
sub
(bad)
out
adc
cmp
psraw
clc
clc
loop
ds
(bad)
iret
das
iret
adc
pop
inc
jmp
scas
pop
pushf
(bad)
in
dec
jnp
inc
push
pushf
cmp
ins
(bad)
fisttp
jmp
clc
repnz
mov
(bad)
std
xor
repz
ret
inc
cmp
adc
loop
popf
mov
and
sub
pop
or
push
rcr
rcl
xor
hlt
loop
jl
mov
cdq
outs
push
add
xchg
and
pop
mov
cmps
inc
jecxz
jl
fs
mul
jno
xchg
add
mov
fs
xchg
and
sbb
xchg
mov
ror
or
xor
popf
arpl
iret
jp
sbb
ret
stos
adc
sub
inc
and
pop
gs
push
xor
cld
and
loope
mov
fdiv
and
daa
inc
fwait
sbb
add
push
xchg
adc
cmp
dec
sub
add
pop
xchg
jno
pop
pop
fidiv
push
dec
cdq
in
mov
nop
(bad)
in
adc
aas
adc
(bad)
and
loop
dec
sub
mov
pusha
and
inc
call
(bad)
jb
mov
sub
nop
adc
and
inc
fwait
or
cmp
inc
mov
jecxz
mov
jecxz
(bad)
sbb
jbe
mov
out
fild
add
mov
mov
movs
pop
mov
push
cmp
cmp
pushf
sub
mov
(bad)
dec
stos
les
push
test
bound
xchg
inc
pop
add
rol
add
adc
adc
xchg
jge
push
cmp
jp
xlat
mov
adc
xor
mov
push
xlat
or
jge
ins
lods
out
ins
xor
adc
(bad)
xor
inc
adc
cmc
inc
cmp
push
leave
mov
inc
and
or
cs
add
nop
mov
mov
sbb
xchg
into
and
sub
leave
cdq
push
jno
lahf
jge
cmps
jmp
or
cmps
inc
mov
hlt
ret
stc
mov
dec
sbb
pop
ja
(bad)
jle
pop
adc
ret
nop
mov
xchg
adc
and
and
mov
add
adc
mov
inc
jl
or
adc
add
ss
adc
loop
std
and
xchg
lahf
(bad)
xchg
mov
xor
loop
pop
(bad)
fist
addr16
(bad)
popa
cmp
jnp
out
mov
aas
mov
dec
or
cmps
(bad)
icebp
repnz
mov
(bad)
fldcw
jno
out
jmp
into
in
ret
jmp
icebp
in
cmp
mov
dec
scas
ins
(bad)
jmp
jmp
in
push
and
fild
data16
jge
add
rcl
popa
call
xor
jp
jae
mov
pop
aas
mov
outs
sub
mov
dec
lock
sbb
adc
pushf
bnd
jae
cli
and
jecxz
inc
or
in
pop
jle
nop
(bad)
mov
iret
mov
dec
and
or
in
aas
and
xlat
and
adc
mov
add
add
mov
xlat
push
push
nop
pop
push
pusha
push
in
in
mov
into
push
push
not
mov
jns
and
(bad)
aad
xchg
jo
mov
inc
test
add
fs
jecxz
mov
cmp
or
xlat
shl
leave
jnp
inc
js
scas
nop
dec
repnz
dec
push
nop
add
popa
add
pop
mov
add
add
outs
inc
lock
inc
fadd
and
ss
xchg
push
add
cwde
call
aas
outs
stc
cwde
add
aaa
inc
scas
sbb
cwde
xchg
jb
push
and
sub
jb
mov
inc
xchg
or
(bad)
hlt
xchg
jmp
js
out
(bad)
or
shl
push
jnp
inc
or
push
lds
push
pop
mov
cmovnp
pop
cmp
popf
sub
aam
int
mov
adc
stos
mov
cmp
push
enter
push
or
add
test
mov
cwde
pop
pop
adc
fcom
adc
or
(bad)
(bad)
mov
ror
pop
fsubr
les
je
push
mov
loop
sbb
outs
popf
sbb
push
call
sbb
imul
cmps
add
and
std
cmp
xor
shl
ret
xchg
retf
sti
mov
push
inc
dec
imul
xor
mov
in
mov
add
pop
xlat
jp
jno
and
fcomp
sahf
aas
xchg
jge
dec
xor
loop
cld
pop
push
in
mov
mov
repnz
retf
dec
imul
loop
dec
lahf
nop
xchg
icebp
push
or
iret
xchg
nop
hlt
xchg
inc
lds
adc
xchg
outs
stc
cwde
sar
or
jl
dec
outs
das
loope
repz
and
loop
jle
out
mov
fidivr
test
ja
jmp
test
jle
nop
mov
jbe
int
inc
add
or
mul
out
repnz
dec
ins
les
cld
push
mov
outs
ins
ret
jmp
fwait
icebp
loope
push
fs
mov
in
stos
test
jmp
cmp
test
sbb
pop
inc
aaa
sub
push
push
xchg
(bad)
test
or
call
jne
sahf
sahf
pop
add
pop
cmps
and
imul
lock
cmps
add
jbe
call
imul
mov
and
pop
or
jg
popf
outs
xchg
ret
fwait
and
mov
mov
mov
push
push
xchg
pusha
inc
dec
add
or
adc
mov
and
call
adc
fisub
int3
jbe
ss
add
mov
add
pushf
xor
in
xor
mov
dec
adc
js
movs
mov
fidiv
sbb
xchg
icebp
or
mov
test
push
mov
dec
or
xchg
or
add
add
sub
sbb
in
push
mov
ret
inc
loop
mov
sub
ins
loopne
push
(bad)
(bad)
pop
add
dec
xchg
imul
jl
mov
mov
(bad)
(bad)
mov
and
adc
dec
or
adc
adc
dec
ja
repz
lahf
push
movs
mov
aam
pop
jmp
jne
nop
push
rcr
imul
push
fimul
sub
jo
adc
sbb
mov
and
xchg
test
sub
adc
mov
xor
std
iret
sub
sub
test
jbe
pop
fild
fst
mov
and
mov
mov
add
cmp
mov
cmp
fisubr
fcomp
test
(bad)
pop
and
int
loop
stos
in
jg
scas
cmp
dec
in
cmps
mov
dec
in
sbb
pushf
mov
lods
cmp
in
sbb
jmp
popa
dec
jecxz
call
sbb
push
sub
jp
mov
or
ret
cdq
jmp
xor
push
jp
sbb
sar
xor
mov
dec
iret
push
test
adc
les
mov
dec
dec
in
jnp
jmp
cld
clc
jb
cdq
outs
scas
and
lds
aas
ds
mov
sbb
out
(bad)
mov
data16
mov
(bad)
fistp
mov
retf
mov
lock
inc
mov
scas
in
(bad)
xchg
(bad)
fidivr
cmp
lds
repnz
ret
and
lock
jbe
cmp
and
mov
scas
scas
out
mov
pop
add
stos
mov
arpl
add
sub
jp
sub
mov
mov
icebp
out
(bad)
cmp
mov
inc
(bad)
lods
dec
shl
mov
cwde
or
fnclex
loope
and
ds
cmc
inc
(bad)
pop
jg
int
(bad)
fwait
xchg
cmp
add
not
mov
add
test
int3
loop
or
mov
popa
pop
or
scas
sub
add
xor
and
jmp
int3
add
or
mov
jl
push
adc
aam
mov
mov
sbb
mov
sub
xchg
jne
pop
pop
aad
ins
push
mov
test
push
adc
js
and
std
aam
xor
stc
pop
pop
mov
popa
xchg
(bad)
dec
cmp
push
retf
pop
sub
inc
enter
js
pop
mov
daa
push
and
xchg
clc
xchg
adc
pushf
inc
shl
fcmovnb
mov
jb
cld
mov
clc
ja
sub
add
in
mov
cmps
push
xchg
add
or
push
retf
movs
popa
cwde
repz
jp
pop
je
mov
sar
les
ret
inc
dec
lods
jecxz
iret
ins
push
ins
into
ins
push
enter
lea
or
push
sub
xchg
sub
mov
mov
push
leave
pop
xchg
or
inc
mov
jb
and
jg
jno
add
mov
xchg
xor
pop
fisttp
add
mov
and
ret
push
cmp
jge
adc
scas
jae
std
jne
cmp
in
mov
dec
pop
and
int
cmp
sbb
arpl
add
push
ret
(bad)
fld
mov
call
mov
dec
and
mov
(bad)
shl
call
pop
sbb
(bad)
mov
ja
mov
xchg
xchg
lock
cmp
stos
adc
adc
adc
inc
push
mov
js
out
push
jp
push
sub
xchg
xchg
xor
adc
imul
jne
xchg
cwde
cli
push
lahf
xchg
lahf
and
in
sub
out
enter
retf
xchg
jnp
or
cmovg
in
int
js
jne
sahf
pop
(bad)
adc
mov
ja
ficomp
mov
pop
aaa
loope
aad
clc
jo
(bad)
xchg
(bad)
loop
icebp
mov
jp
adc
and
mov
mov
lods
ret
stc
jge
jno
enter
mov
bswap
scas
add
cmp
add
call
push
outs
outs
sbb
(bad)
cmc
or
call
jge
push
add
addr16
xchg
mov
jmp
mov
jmp
sbb
loope
es
mov
add
add
push
and
shl
and
imul
xor
and
pushf
ins
es
aas
or
cmp
adc
mov
fimul
les
pusha
das
or
push
adc
stos
test
dec
stos
cmp
inc
push
or
push
mov
sbb
enter
fiadd
cmp
sub
rcl
add
add
xchg
xchg
pop
retf
cmp
stos
jmp
sub
adc
jnp
and
retf
and
scas
adc
lahf
and
and
loop
dec
call
adc
adc
pop
and
adc
or
add
sbb
add
inc
inc
nop
gs
retf
pusha
and
fmul
fbld
or
sbb
arpl
loopne
xchg
jecxz
(bad)
pop
push
xchg
rcl
adc
in
cmp
aam
xor
fisub
into
cmps
jnp
idiv
popa
addr16
stc
fwait
sar
sti
inc
fisub
pop
stc
retf
xor
mov
fwait
adc
jg
inc
add
sbb
mov
push
ret
jb
pop
push
seto
in
mov
or
movs
xchg
sbb
retf
test
mov
mov
out
cwde
jno
test
jo
xchg
adc
jle
loopne
aas
adc
jne
sbb
ret
cmp
fldl2e
mov
stos
add
out
test
and
repnz
cmp
das
add
les
sbb
aas
ja
fwait
cmps
cmc
(bad)
fcom
pop
out
or
repnz
cwde
fnsave
mov
out
mov
rcr
dec
sub
and
adc
xor
enter
cmp
mov
sub
jle
jg
clc
jle
or
and
shr
dec
sbb
mov
and
xor
nop
out
sbb
jge
pop
(bad)
pop
movs
cmps
jge
push
retf
cmps
repnz
call
and
fwait
dec
js
or
dec
add
jno
imul
ins
(bad)
in
repz
imul
lock
out
and
mov
sahf
adc
aas
mov
sti
jg
jnp
sahf
pop
fld
fsubrp
lea
lock
shr
adc
outs
mov
fdivr
mov
out
push
mov
out
test
cs
(bad)
adc
(bad)
(bad)
stos
rol
inc
xor
jb
lock
sub
add
mov
or
loope
mov
inc
(bad)
cmp
pop
das
std
mov
push
jle
cmps
dec
cmp
mov
test
add
(bad)
and
or
pop
dec
xchg
out
not
inc
pop
or
mov
xchg
repnz
fimul
add
inc
(bad)
pop
hlt
mov
int
jbe
push
push
and
xor
cmp
cmp
dec
or
hlt
or
mov
cs
cdq
push
enter
test
adc
mov
sbb
ror
dec
retf
retf
xchg
dec
cmc
add
es
xchg
cmps
inc
dec
test
add
dec
add
and
jo
dec
lahf
inc
ror
push
ret
cld
jmp
or
test
inc
pop
xchg
push
test
inc
or
clc
adc
or
adc
add
adc
(bad)
loopne
fcmovnb
ins
icebp
(bad)
push
xchg
jp
dec
mov
and
cmp
xlat
shr
mov
adc
xchg
inc
cs
dec
adc
adc
xchg
sbb
fdivr
leave
test
ret
adc
shl
lds
dec
sub
jns
cmps
dec
std
retf
popa
mov
jne
daa
out
cmps
div
adc
jnp
dec
mov
pop
xor
inc
std
adc
bound
dec
add
enter
rcl
mov
inc
dec
push
mov
repz
xor
gs
push
dec
dec
xchg
jmp
inc
(bad)
fist
sti
sbb
shr
add
or
xor
mov
or
cmp
jmp
pushf
and
stc
movs
adc
cmps
cmps
adc
adc
adc
pop
mov
sbb
ins
sbb
mov
pop
data16
(bad)
in
out
clc
mov
xor
scas
lea
aam
movs
and
stc
add
xchg
adc
cmp
imul
(bad)
cld
lods
jg
es
in
pop
(bad)
lods
std
(bad)
jg
lahf
inc
and
or
mov
fs
lods
pop
mov
dec
mov
lock
cld
in
mov
out
outs
loopne
repz
out
sub
fstp
daa
loop
adc
sbb
fimul
inc
pop
icebp
lock
push
ret
mov
push
shl
xchg
in
into
inc
cmp
dec
(bad)
ja
jecxz
and
stc
call
xchg
js
or
out
call
mov
mov
mov
(bad)
movs
sbb
dec
push
call
pop
add
jecxz
(bad)
lahf
shl
repz
dec
imul
push
int3
pop
pop
or
push
cwde
push
lods
test
xchg
movs
lock
mov
outs
sub
lock
cmp
fdivrp
adc
shl
xchg
mov
pop
mov
fisttp
aaa
mov
adc
cmp
mov
mov
adc
(bad)
adc
(bad)
lock
xlat
inc
cmp
adc
cmp
jmp
or
push
pop
shr
outs
mov
loope
imul
sbb
arpl
sub
xor
mov
not
push
repz
add
jbe
mov
add
xor
rcl
jmp
and
push
and
in
stos
xchg
icebp
adc
inc
aas
test
es
loope
or
out
or
mov
(bad)
rol
push
mov
mov
push
jo
cmp
dec
test
add
sahf
adc
adc
and
mov
mov
sub
enter
sbb
add
icebp
xlat
inc
scas
sbb
nop
repz
jle
xchg
inc
es
leave
adc
mov
jne
ror
xor
dec
dec
push
jle
cmc
sahf
jbe
jge
(bad)
stos
push
jnp
push
nop
inc
aas
lds
jl
pop
enter
add
mov
jle
inc
fild
gs
mov
scas
xchg
loope
sub
cmp
int
lods
add
sbb
push
mov
add
sbb
mov
or
shl
pop
push
leave
add
imul
sbb
test
aad
aad
test
dec
mov
adc
sbb
jmp
nop
mov
ret
xchg
jle
or
xchg
sub
lahf
mov
cmp
cmps
and
aaa
jl
fwait
data16
dec
dec
or
push
aaa
cld
sar
retf
cmp
bound
dec
hlt
mov
push
hlt
test
jmp
(bad)
and
push
rcl
sub
sahf
and
dec
jno
and
and
out
call
test
mov
xor
mov
mov
adc
adc
cwde
pusha
popa
or
mov
pop
xchg
dec
js
mov
pop
dec
cmps
ins
pop
jmp
fst
xchg
cwde
je
pop
mov
dec
dec
mov
mov
js
or
or
fadd
xchg
fwait
dec
(bad)
je
mov
cld
sbb
cmp
cli
add
lahf
sbb
cld
popf
std
clc
js
sub
fistp
xchg
test
mov
add
loop
ds
mov
xlat
jae
mov
scas
test
inc
push
push
jno
add
sbb
stc
mov
adc
xchg
test
(bad)
pusha
adc
das
js
data16
sbb
mov
cmp
sar
es
and
aas
fild
cmc
mov
jecxz
dec
and
or
jo
nop
sbb
cli
outs
ja
loope
sysret
pop
ins
xchg
xor
add
sbb
pop
mov
push
mov
(bad)
in
jo
mov
mov
or
mov
jle
cwde
fild
gs
loop
xor
nop
mov
test
rcl
mov
imul
int3
es
jp
pop
dec
repz
or
jl
ret
mov
jbe
enter
inc
jle
dec
cmp
mov
push
mov
inc
inc
push
outs
mov
dec
mov
jnp
js
sbb
ss
mov
rol
adc
ins
in
push
add
les
pop
ss
mov
dec
mov
sbb
out
clc
ja
test
mov
xor
pop
cld
iret
mov
pop
mov
(bad)
mov
ret
and
clc
pop
pop
sar
out
xchg
repnz
data16
push
and
sub
pop
push
aam
ds
enter
retf
mov
mov
mov
popa
mov
jno
mov
mov
dec
cli
dec
push
cmp
mov
push
mov
repz
xor
cmp
push
out
pop
(bad)
int
rol
fcomp
push
loop
dec
cmp
mov
out
jle
loop
cmp
and
icebp
inc
(bad)
scas
fcmovb
fst
rcl
inc
ret
cwde
sahf
mov
aam
movs
xor
push
iret
iret
ins
(bad)
out
mov
or
adc
mov
pop
sbb
adc
jmp
lods
daa
das
pushf
pop
fcmove
and
rcl
xchg
nop
dec
inc
popf
xchg
xchg
mov
scas
pop
nop
adc
push
imul
movs
daa
jge
mov
je
push
inc
and
(bad)
and
cmp
jg
test
adc
movs
clc
adc
add
dec
movs
lock
pcmpeqb
cmp
xchg
xchg
cli
push
test
mov
enter
loopne
xor
ins
movs
jle
test
daa
(bad)
push
xchg
fistp
sub
ret
and
scas
scas
into
loope
retf
jae
cli
cli
cmp
jbe
sbb
js
into
and
call
nop
icebp
repnz
pop
push
mov
mov
mov
sar
ds
cmp
aad
(bad)
clc
cli
push
ret
repnz
int
mov
mov
daa
cli
adc
jbe
sbb
push
mov
push
rol
arpl
in
dec
mov
test
stc
call
nop
xor
cmc
lock
cmps
dec
pop
jmp
and
xchg
jp
cmp
lds
sahf
or
jecxz
ja
outs
jbe
loope
addr16
dec
sub
loope
xchg
std
std
push
jp
out
mov
fsubr
rol
lods
lods
cmp
test
inc
jle
pop
lds
mov
inc
inc
xor
movs
clc
and
rol
push
(bad)
sub
push
sub
xchg
push
pop
data16
dec
dec
ja
enter
retf
push
stc
add
jns
inc
cs
sub
dec
idiv
sub
ds
inc
outs
cdq
or
lock
jae
and
movs
imul
sbb
mov
and
adc
sub
mov
shl
jb
cmp
nop
(bad)
fsub
add
fmul
fist
add
sti
and
shr
jg
xor
sar
pop
(bad)
jb
and
xor
and
sahf
mov
mov
push
jge
and
jno
test
rcr
inc
or
pop
dec
sub
pop
xchg
addr16
push
xor
mov
arpl
inc
hlt
or
mov
inc
add
add
or
in
inc
mov
sub
sub
test
cmp
add
xor
out
mov
loopne
cmp
mov
mov
int3
ins
pop
cli
retf
dec
lea
cmc
mov
cmps
jnp
in
mov
dec
jg
xchg
clc
call
inc
sub
xor
faddp
cmps
sub
jo
jl
dec
stos
jecxz
dec
xor
xor
in
push
add
xchg
inc
jmp
jns
mov
jle
in
fistp
aaa
iret
lahf
inc
or
xor
mov
daa
and
pop
xchg
(bad)
cld
adc
(bad)
gs
mov
nop
cli
jmp
(bad)
into
and
in
dec
fs
(bad)
ffreep
sti
(bad)
addr16
xchg
lock
fnstcw
mov
push
les
out
sub
pop
sahf
inc
retf
enter
js
pop
clc
mov
ds
addr16
int
jl
je
outs
aas
aas
inc
inc
sub
cmp
lock
lahf
push
loope
mov
sub
(bad)
mov
cmp
jne
jge
sub
stos
pop
push
loop
xchg
push
js
and
push
mov
jmp
bound
daa
xchg
loop
adc
loop
mov
outs
popf
mov
(bad)
loop
scas
mov
out
in
call
fidivr
ja
and
mov
jecxz
movs
pop
pop
push
repz
mov
stc
dec
sbb
sbb
scas
sbb
cmp
pop
pop
xor
push
int
ret
js
jae
pop
out
push
test
mov
fcom
out
inc
jecxz
xor
fcomp
loope
daa
ret
popf
lock
adc
and
or
dec
jno
mov
jmp
es
in
xchg
pop
push
js
dec
shr
xor
xor
mov
js
push
xchg
arpl
add
sbb
das
pusha
push
add
cmps
jae
(bad)
pusha
dec
ret
jl
dec
push
repnz
inc
inc
enter
popa
dec
jp
pop
pop
and
and
std
les
fucomp
and
in
jle
popa
lahf
mov
push
(bad)
jp
test
mov
and
cmp
leave
movs
dec
std
fs
mov
sbb
or
and
cs
hlt
scas
jb
in
jecxz
add
stos
hlt
and
sbb
jmp
push
mov
jg
and
es
cld
push
push
leave
outs
lahf
or
test
out
mov
add
add
sub
enter
aam
lods
pusha
scas
ror
sub
dec
mov
inc
cs
mov
lods
pop
mov
retf
test
ss
mov
xchg
xlat
cmp
gs
inc
retf
push
mov
push
pop
mov
ss
push
xchg
cmc
mov
sub
sub
push
xchg
push
or
scas
daa
adc
mov
fidiv
mov
inc
mov
inc
mov
ins
test
(bad)
xor
or
(bad)
dec
adc
aaa
daa
xor
movs
jbe
or
mov
add
adc
cld
lods
rol
jns
jl
adc
pop
jmp
test
xchg
jns
jle
jecxz
je
cs
lds
xchg
xsha256
cmps
(bad)
jb
scas
lods
cld
mov
jae
jle
sbb
test
stos
push
jle
cmp
sub
push
cmp
dec
mov
or
js
call
xchg
aaa
(bad)
jecxz
in
mov
jl
cmp
outs
pushf
lds
hlt
cs
mov
dec
cs
ret
sbb
or
rol
outs
popf
fld
or
scas
ret
dec
jo
repz
(bad)
or
ins
pop
or
out
adc
out
das
out
ror
cmp
iret
adc
xor
cmps
jbe
(bad)
cmc
xor
in
leave
dec
mov
sbb
mov
(bad)
adc
lds
fdivr
out
mov
jecxz
pusha
std
aam
fdivr
jnp
mov
sbb
inc
arpl
in
adc
jge
xchg
dec
out
xchg
push
sti
(bad)
std
pushf
rcr
clc
inc
in
pop
ss
mov
or
mov
adc
arpl
ss
sbb
pushf
mov
in
xchg
out
pop
pop
aaa
mov
(bad)
dec
out
test
lods
add
cmp
out
mov
mov
mov
ins
call
mov
inc
or
fsub
das
out
push
mov
sbb
cwde
les
pushf
lahf
fist
scas
enter
arpl
outs
lods
jmp
pop
jmp
loopne
shr
cmp
jns
stos
retf
xor
push
push
xor
frstor
and
pop
sbb
mov
dec
jno
mov
fcomp
push
adc
pop
pop
pop
cmp
mov
pop
xchg
js
cmc
in
pusha
sub
mov
pop
je
jecxz
cmp
popa
imul
outs
pusha
ret
cmp
int3
cmps
rcr
xor
add
movs
cmp
sub
lds
mov
mov
mov
(bad)
cmp
inc
scas
fsubr
cs
ins
ja
dec
data16
and
jge
xchg
std
(bad)
pop
leave
adc
mov
dec
and
or
shr
add
leave
dec
and
cli
xchg
add
dec
add
inc
xor
add
cmp
add
fmul
push
outs
or
lods
adc
cs
sub
and
mov
inc
inc
test
and
outs
or
pop
test
xor
(bad)
in
jmp
inc
idiv
icebp
pop
add
mov
cld
mov
lock
repnz
pop
stos
xlat
stos
movs
es
mov
cmp
int
jecxz
ret
adc
fld
(bad)
out
int
jb
iret
fwait
repz
pop
dec
or
sub
gs
stos
test
in
lods
loope
pop
push
cmp
push
or
mov
fs
mov
mov
add
loope
daa
adc
inc
mov
cmp
xchg
xor
push
push
mov
ins
test
(bad)
ror
js
pop
mov
call
jle
ins
mov
mov
push
xchg
icebp
jno
sbb
cmps
js
jno
imul
xchg
xchg
xchg
cld
adc
in
cmps
adc
repz
jp
xor
aas
loopne
vpsubusb
mov
pop
mov
pop
sahf
call
jnp
add
lds
jbe
mov
(bad)
add
shl
jo
ja
mov
lods
(bad)
jne
xor
jo
into
cld
(bad)
fdivr
ds
sti
int3
xor
ja
stos
idiv
retf
je
inc
bound
xchg
or
cwde
aaa
mov
push
enter
xor
jle
daa
imul
cmp
or
in
pop
lea
(bad)
loope
xchg
int
jb
pop
sahf
pushf
fadd
(bad)
lea
in
pop
mov
cmp
cmp
or
out
cmc
leave
fdiv
dec
ret
mov
sub
pop
jmp
ret
fcom
xlat
imul
aaa
movs
dec
shl
xor
mov
scas
pop
pop
inc
push
fiadd
sbb
pop
lock
out
nop
std
stc
sub
cmp
sbb
icebp
cwde
(bad)
mov
jl
rcr
dec
dec
sbb
test
call
mov
mov
ins
xor
cmp
call
cld
(bad)
into
pop
xor
inc
fimul
push
(bad)
add
sbb
mov
xor
int3
sbb
or
inc
rcl
push
dec
sbb
push
jmp
xor
fmul
pop
aaa
(bad)
mov
mov
add
add
int3
jmp
pop
sbb
push
mov
ret
(bad)
bound
hlt
adc
stos
mov
jmp
repnz
cmp
sub
fs
jmp
lock
xor
(bad)
jecxz
lock
push
das
pop
retf
das
(bad)
sti
cmp
loop
cmp
jnp
xor
sub
adc
nop
adc
mov
and
retf
mov
(bad)
mov
into
add
ficomp
(bad)
xlat
push
popa
jno
adc
js
das
int
xor
jecxz
sub
sbb
or
cmps
sub
lods
xor
mov
ins
mov
arpl
pushf
jns
retf
mov
fst
sub
cmp
sub
sbb
shr
xchg
test
mov
sub
sti
mov
pop
push
test
in
les
inc
leave
aad
and
mul
push
push
stos
jb
js
(bad)
sub
add
sbb
rcr
aas
xor
or
jg
add
aas
or
dec
(bad)
jns
lock
mov
int
frndint
jg
add
inc
(bad)
imul
cmps
pop
gs
adc
scas
inc
jno
mov
xchg
in
fimul
cmc
or
jo
mov
sub
jo
xchg
jg
add
scas
mov
movs
add
(bad)
aam
(bad)
aam
jg
pop
pop
mov
xchg
or
add
push
xor
add
scas
inc
mov
or
inc
cmp
bound
xor
dec
arpl
lea
shl
pusha
xchg
sbb
xchg
push
(bad)
nop
xor
mov
ss
push
add
xchg
into
inc
jle
sar
fcomi
jmp
jnp
inc
dec
lea
vshufps
movs
jbe
lahf
stos
cwde
(bad)
fmul
frstor
sbb
jmp
out
mov
lahf
or
xlat
xlat
js
loopne
outs
push
test
rcr
mov
(bad)
icebp
int
jno
xlat
(bad)
fdivr
mov
ret
xor
cmp
jg
xlat
mov
test
sbb
in
pop
cmp
jmp
cmps
loop
into
push
sbb
pushf
sub
and
stos
cmp
add
xchg
sub
xchg
loope
cmps
test
cmp
sbb
test
fistp
inc
popa
rcr
sbb
icebp
push
in
mov
jo
(bad)
sbb
jbe
daa
test
test
dec
sbb
add
mov
rdmsr
es
inc
(bad)
in
pop
xor
mov
aaa
push
into
sbb
ins
cmp
lea
mov
pop
jg
cwde
aam
dec
(bad)
ja
loop
pop
mov
dec
push
sub
fst
dec
ret
loop
addr16
sub
pop
lds
or
cld
push
ins
dec
sub
sbb
and
or
out
fld
sar
shl
fs
dec
in
test
adc
data16
(bad)
pop
arpl
inc
hlt
cs
mov
bound
je
cmp
or
cdq
test
mov
ret
pop
icebp
gs
fisubr
test
mov
icebp
mov
dec
pop
sbb
xchg
jo
mov
shl
sbb
add
scas
ror
dec
cmp
popa
js
inc
shl
loop
pop
sub
js
xchg
xor
xchg
ss
in
lea
imul
xor
dec
inc
and
push
ficomp
repnz
xor
pop
add
and
push
mov
fwait
mov
outs
mov
mov
mov
adc
and
or
in
cmps
pop
inc
(bad)
push
dec
mov
push
push
lods
jne
in
pop
add
cmp
ds
xchg
ja
pop
mov
dec
mov
inc
mov
cmp
(bad)
sub
cmp
movs
and
enter
cli
xor
adc
sbb
std
pop
std
and
aas
pusha
retf
xchg
mov
addr16
inc
adc
and
scas
sti
(bad)
cld
clc
aaa
jg
jle
stc
(bad)
dec
sahf
add
add
mov
stos
adc
mov
adc
pop
iret
mov
push
pop
push
std
je
addr16
mov
cli
xchg
(bad)
mov
xchg
adc
pop
(bad)
push
sbb
aad
push
ss
jmp
mov
mov
xchg
xor
stc
cmp
sbb
outs
add
pop
jne
pop
push
ins
mov
mov
mov
or
push
mov
leave
or
adc
jl
xor
add
imul
lahf
inc
push
stc
std
adc
mov
pop
data16
add
sti
xor
xor
push
lods
inc
add
push
xor
mov
cwde
xlat
mov
inc
loope
(bad)
enter
cdq
outs
sahf
loopne
ret
imul
cmps
or
(bad)
lea
in
pop
dec
adc
mov
lods
ret
ror
mov
fdivr
mov
(bad)
xchg
arpl
repnz
stc
call
(bad)
jmp
add
ror
adc
push
imul
xchg
inc
bound
add
cmp
scas
dec
(bad)
into
xchg
mov
mov
mov
mov
frstor
nop
icebp
add
adc
enter
cmp
popa
out
xchg
pop
xor
sar
and
dec
dec
shl
aaa
xchg
dec
in
mov
mov
and
stos
lea
xchg
xchg
xor
mov
cmp
pop
movs
dec
call
bound
xchg
xchg
add
or
add
ficomp
test
add
and
sub
adc
add
in
or
mov
sbb
jp
jb
sbb
xchg
movs
sub
jp
call
xor
jmp
es
jmp
das
push
sub
icebp
jl
sub
jbe
and
xor
rol
fidivr
fmul
sti
test
jmp
push
fucomi
xor
dec
push
jnp
add
stos
sbb
leave
loop
and
fsubr
int
push
push
ja
(bad)
jp
adc
mov
ret
sahf
(bad)
cmp
mov
jecxz
lods
push
jnp
imul
jo
adc
popw
daa
lods
stos
and
(bad)
xchg
sbb
and
push
(bad)
push
mov
and
jle
pop
xchg
in
repnz
lea
arpl
in
sbb
out
and
cmp
jmp
xor
mov
cwde
call
or
loopne
aad
cdq
lods
mov
adc
cmp
out
dec
fdivr
or
add
inc
dec
add
ja
lock
add
jns
adc
add
xchg
adc
lahf
ror
jle
xlat
loopne
popf
mov
(bad)
cmps
and
pop
add
stos
and
scas
xchg
xor
lods
test
stos
cwde
movs
xor
add
pop
or
jmp
fadd
(bad)
je
stc
je
push
dec
(bad)
mov
pushf
jge
pop
rcr
pop
ror
ss
popf
mov
xchg
push
xchg
pop
push
fistp
stos
xchg
cmp
(bad)
fst
into
cmp
cmp
lea
dec
push
(bad)
cli
pop
imul
fst
push
test
pop
loopne
mov
push
cmp
xchg
add
adc
ss
inc
mov
or
push
inc
icebp
xchg
mov
xlat
ins
xor
loop
jns
or
and
pop
push
in
ret
shr
inc
mov
dec
aas
dec
mov
ret
loopne
neg
std
push
sub
or
fisub
xor
sbb
imul
hlt
(bad)
clc
lock
cmp
out
sbb
push
pop
fadd
into
mov
mov
sbb
lods
adc
lock
outs
push
fisttp
cli
shr
cmp
inc
jg
sbb
sub
mov
cmp
dec
ret
shl
xchg
or
fnsave
jecxz
mov
fistp
mov
sub
mov
inc
push
inc
ins
push
sar
jl
fist
xchg
add
shr
bsf
mov
and
adc
in
sub
loope
add
jae
push
iret
sbb
and
stos
data16
cli
mov
pop
in
and
fnstcw
sbb
xor
sbb
icebp
cmp
out
out
and
or
cmps
cwde
fsubr
ret
(bad)
out
cmc
xor
fadd
or
popa
loope
pop
and
push
xor
pop
sbb
call
sbb
fwait
xchg
inc
and
and
pop
into
push
ret
stos
cmp
test
imul
cwde
(bad)
push
aaa
push
(bad)
or
and
cmps
clc
mov
sub
mov
loopne
adc
cmp
popa
test
xor
jmp
cmp
dec
inc
xchg
mov
nop
popf
pusha
(bad)
push
inc
xor
mov
int
adc
je
or
test
sbb
bound
(bad)
push
push
ss
retf
or
cmp
lock
sbb
(bad)
pop
dec
sbb
addr16
cs
jb
sub
bound
iret
dec
push
push
leave
dec
xchg
sbb
in
xchg
or
sbb
mov
jl
call
sub
dec
ja
inc
add
jo
push
add
loope
loopne
js
shufps
mov
and
inc
add
mov
out
jecxz
add
cmp
jg
sar
(bad)
cmp
xor
iret
fild
out
dec
xchg
jmp
test
cdq
inc
loop
push
movs
jns
mov
add
ja
mov
mov
mov
cdq
push
outs
pop
out
mov
enter
xchg
mov
(bad)
cwde
adc
fsubr
mov
mov
leave
mov
mov
push
inc
fldenv
and
or
jnp
sbb
fild
in
mov
rol
out
sbb
mov
shr
and
sub
mov
enter
cdq
mov
nop
stc
in
xor
repz
jl
data16
pop
add
(bad)
mov
mov
xchg
jp
outs
mov
cmps
xlat
mov
jb
aas
sar
loope
sbb
call
adc
and
retf
xor
jg
mov
scas
loopne
mov
xor
pop
cmp
ins
ror
push
or
aad
inc
xchg
cld
pop
mov
pop
cmp
sar
push
pushf
fbstp
ret
lds
sbb
push
dec
ret
mov
cmp
sbb
adc
dec
cmp
imul
in
pop
mov
push
(bad)
loopne
mov
out
addr16
sub
stc
add
xchg
mov
xor
in
xchg
clc
sub
arpl
push
xchg
fadd
test
mov
dec
fcmovnbe
mov
ins
and
push
lock
fwait
xor
inc
mov
and
pop
test
dec
mov
popf
cmp
fwait
adc
arpl
movs
push
push
leave
ja
shl
xor
mov
int
popf
cwde
shl
mov
push
pop
jecxz
xlat
rol
int3
sbb
sbb
xchg
call
adc
or
xchg
lea
jae
loop
mov
add
xor
test
sahf
sub
mov
push
inc
sub
jnp
add
jns
test
(bad)
int
stos
loope
push
sbb
pop
fiadd
fdivp
mov
mov
and
ja
(bad)
div
pop
push
dec
loope
adc
cmp
bound
inc
aad
inc
arpl
push
gs
push
add
or
imul
sbb
das
jecxz
icebp
mov
push
xchg
(bad)
cmp
int
jb
push
push
cmp
fwait
icebp
and
or
bound
sbb
leave
loope
sub
sahf
mov
xor
jmp
inc
sar
dec
in
mov
mov
sbb
push
bound
out
xor
lahf
sbb
or
pop
outs
mov
ins
push
mov
imul
push
cmp
dec
mov
sub
adc
cld
sbb
aad
or
push
add
jmp
les
outs
jmp
js
inc
in
ret
js
mov
sbb
jmp
popa
ins
lea
into
ret
sbb
jge
inc
and
inc
(bad)
out
mov
iret
cld
jns
lock
mov
int
fstp
add
pop
jle
jmp
xor
sub
add
and
jo
stos
fcmovne
outs
mov
nop
aas
sbb
daa
jg
mov
sub
sbb
jg
add
xor
adc
inc
sbb
ss
arpl
sub
jmp
aam
arpl
shl
and
rcr
dec
mov
movs
sbb
xor
add
jmp
jno
mov
inc
pop
pop
cmp
shl
sub
cmp
jno
iret
pop
inc
jne
arpl
les
mov
mov
or
xor
bound
xor
rol
mov
add
push
je
in
cmc
jno
(bad)
or
sbb
fs
dec
loopne
or
jnp
sbb
pop
cmp
lods
rol
out
push
cmc
jg
pop
cmp
ss
jbe
shl
imul
fdiv
ret
test
out
push
push
mov
lds
cld
imul
ret
jae
pusha
arpl
add
cmp
mov
xor
arpl
retf
mov
cdq
fs
xor
ja
out
mov
mov
sub
cld
mov
cmp
pop
aas
cmp
hlt
sahf
je
xchg
mov
jns
daa
out
sbb
(bad)
loopne
mov
mov
mov
and
ss
mov
sahf
or
test
ins
call
out
xor
xor
xchg
(bad)
jmp
fs
cmp
dec
jmp
movs
outs
lea
call
cli
aaa
mov
sub
addr16
pop
sub
jp
loope
leave
cmp
inc
pop
xor
xor
inc
inc
dec
push
mov
cmc
mov
sbb
sub
mov
push
imul
add
sbb
into
xchg
inc
scas
push
or
fbstp
inc
fbstp
or
(bad)
aad
retf
loop
(bad)
js
mov
mov
stos
jecxz
bound
jl
xlat
adc
sbb
jae
inc
jl
mov
stos
mov
mov
fwait
dec
fcom
add
or
repnz
xor
ret
repz
(bad)
sub
add
xor
lahf
imul
and
jo
xchg
loope
std
inc
dec
mov
mov
icebp
inc
rcl
add
int
pop
(bad)
enter
jae
pop
movs
xchg
shl
test
int3
repnz
or
pop
out
or
std
pop
aad
(bad)
ds
pusha
das
dec
add
push
mov
mov
dec
xchg
out
sub
and
in
dec
add
jp
mov
pop
pushf
in
add
inc
add
ret
add
das
jecxz
jle
xchg
dec
add
add
jg
aaa
xchg
iret
sar
rcr
loope
or
aas
inc
fmul
pop
mov
ror
std
fild
or
dec
mov
(bad)
daa
clc
test
xchg
test
and
ror
dec
xor
xchg
icebp
adc
mov
ss
aas
fsub
fxch
xor
neg
push
jg
adc
xchg
jns
lods
outs
(bad)
test
adc
int3
jo
xchg
rol
jecxz
add
sub
das
push
lea
and
sub
jnp
dec
cwde
fadd
adc
dec
imul
pop
or
scas
lds
ins
lods
movmskps
jg
ret
daa
stos
clc
jnp
ret
pop
cmp
mov
or
icebp
rsqrtps
test
push
inc
mov
loop
sbb
mov
inc
aam
inc
jb
sub
(bad)
add
call
nop
cmp
add
stc
sub
cld
adc
sti
push
lock
or
outs
outs
inc
add
xchg
sub
imul
jecxz
into
xor
fdivr
cmps
sbb
pop
xor
retf
push
fnsave
ror
sub
sbb
pop
shl
jae
imul
ret
repz
jecxz
in
pop
cmp
xchg
push
mov
gs
and
sar
push
jecxz
lods
adc
cld
dec
or
fiadd
xchg
sub
cli
test
repz
out
push
ins
lods
dec
adc
out
sahf
(bad)
fnstcw
dec
shl
shl
xor
(bad)
jnp
loop
dec
daa
adc
mov
push
ss
pop
fidiv
push
pop
xchg
(bad)
pusha
std
in
loope
cmp
ss
adc
dec
push
sbb
dec
add
or
jb
adc
sbb
dec
mov
and
mov
cwde
fldenv
mov
std
pop
pusha
push
jg
out
pop
mov
repnz
inc
sub
outs
xchg
sbb
pop
cwde
dec
xor
mov
and
stos
mov
dec
sbb
or
inc
mov
mov
xor
retf
shr
lods
xor
push
mov
jne
mov
push
inc
pop
dec
ins
xchg
fninit
dec
jp
outs
int3
scas
(bad)
(bad)
imul
xchg
push
inc
jle
and
fwait
cmp
pusha
sbb
mov
adc
ins
cmp
mov
mov
mov
mov
or
cmc
scas
out
pop
scas
(bad)
icebp
jbe
test
sbb
je
jno
mov
jl
and
ret
push
xor
and
cmp
push
cmp
mov
xchg
(bad)
mov
sub
popa
push
mov
jb
idiv
sbb
jo
push
jecxz
call
leave
pop
jp
jbe
xchg
icebp
pop
fnstsw
adc
(bad)
retf
out
mov
sbb
es
push
ins
dec
push
mov
adc
outs
adc
jnp
es
xchg
add
stos
jg
dec
add
sbb
dec
or
adc
jg
add
and
aas
mov
fdivr
or
mov
daa
(bad)
mov
clc
gs
jle
aas
inc
dec
lock
cmps
out
push
int
adc
sti
sbb
test
push
outs
mov
outs
shr
call
iret
cmp
ret
jp
jae
mov
mov
sahf
call
adc
iret
jo
and
mov
pop
push
call
ficom
push
arpl
inc
sub
out
mov
adc
and
or
stos
(bad)
mov
pop
cld
rcl
jmp
adc
inc
sbb
mov
add
jnp
cmp
enter
jmp
xchg
mov
pop
(bad)
and
cmp
fild
mov
pop
shr
fdiv
adc
loop
xor
or
jno
fbld
jg
fsubp
(bad)
dec
mov
fidivr
out
jecxz
in
mov
lock
fidiv
mov
scas
sbb
pop
call
fadd
out
cmp
cmc
shl
ficom
fdivr
sbb
mov
push
imul
jno
out
pushf
(bad)
mov
pop
inc
shl
(bad)
out
mov
jno
fadd
mov
cdq
iret
push
inc
adc
fdivr
sub
add
adc
imul
add
inc
push
(bad)
inc
cmp
mov
inc
ss
jecxz
mov
add
xchg
cwde
pop
ficomp
loope
or
out
stc
mov
in
dec
popf
mov
imul
call
jo
push
sub
adc
in
pop
aas
leave
enter
xlat
or
je
fidiv
pop
and
test
jmp
pop
sbb
(bad)
cmps
pop
or
cmp
or
cmp
and
sub
pop
fdiv
cmp
mov
push
pop
inc
jne
push
leave
push
adc
jns
dec
jne
or
push
arpl
xor
out
adc
pop
pop
rcl
push
jmp
push
icebp
and
mov
leave
mov
mov
push
xchg
popa
ins
dec
push
daa
loop
mov
xchg
jecxz
jg
pop
out
movs
sar
push
xchg
outs
mov
cmps
push
xlat
jp
mov
(bad)
or
cli
dec
js
xchg
jg
lds
and
add
fs
mov
lahf
es
and
mov
mov
mov
push
mov
xchg
dec
fdivrp
pushw
mov
in
pop
movs
call
iret
sahf
pop
repz
mov
sbb
xchg
out
mov
sbb
mov
sbb
jmp
in
mov
das
pop
push
js
inc
and
loopne
std
cmovno
(bad)
or
inc
loope
and
pushf
jle
xor
and
clc
out
(bad)
out
shr
jg
fwait
call
push
stc
xchg
add
pop
sar
sub
or
push
enter
push
loop
jne
push
mov
xor
mov
stc
pop
stos
imul
mov
ret
lods
into
adc
(bad)
shl
repz
sbb
jb
jnp
xor
lods
and
jmp
loopne
std
lods
in
xor
js
and
xchg
push
bound
cmp
inc
and
or
repz
or
pop
xor
sub
sbb
sub
xchg
sub
(bad)
fcmovnu
jg
inc
push
pop
adc
mov
(bad)
out
mov
xchg
jmp
pusha
je
pop
stos
inc
arpl
nop
inc
sbb
and
imul
mov
outs
loop
std
fstp
in
fidivr
mov
jecxz
xor
jo
sub
pop
cmp
cmc
adc
in
bsf
loopne
lods
mov
scas
push
fadd
mov
(bad)
in
stos
jno
jmp
pushf
fdiv
xchg
xchg
or
shl
mov
sahf
xchg
(bad)
mov
cmovg
push
test
mov
mov
dec
add
scas
lock
aaa
sub
jle
inc
mov
iret
add
mov
loope
scas
xor
fcom
loop
dec
lahf
pop
cmp
xchg
(bad)
cmc
sar
(bad)
int
fdivr
outs
xor
sub
mov
sbb
jno
popf
inc
and
not
jg
add
cmp
pop
dec
fwait
mov
add
pop
dec
rol
mov
or
aam
pop
pop
xchg
rol
stos
es
(bad)
call
fcom
sub
mov
aam
ret
rcl
sbb
lods
mov
rcr
rol
(bad)
rcr
mov
ret
rol
xor
sbb
or
mov
not
fadd
out
stos
mov
pushf
adc
call
fld
ret
mov
or
arpl
jae
add
pop
jmp
push
outs
movs
xchg
(bad)
mov
jb
pop
push
adc
adc
jno
xchg
pop
cmp
push
add
dec
retf
pop
add
cmp
cs
shl
outs
pop
push
cmp
arpl
(bad)
sub
mov
mov
cmp
lea
pop
dec
mov
leave
push
cmp
xchg
shl
add
mov
push
xor
and
ror
add
mov
xchg
dec
pop
shr
push
lods
lock
(bad)
ss
fldcw
cmp
push
retf
and
mov
xor
(bad)
mov
fisub
fucomi
and
out
xor
sahf
call
mov
scas
xor
out
and
mov
push
and
sbb
fild
clc
add
add
xchg
cld
xchg
sbb
aas
repz
aad
jg
mul
xchg
popf
mov
scas
pop
mov
sbb
aas
add
loop
inc
sub
xchg
push
push
nop
push
test
cmp
push
call
(bad)
and
pop
cmp
out
loope
out
xor
fcom
lds
inc
sbb
(bad)
and
getsec
inc
icebp
or
pusha
scas
cmp
aas
fisubr
(bad)
jo
ror
adc
add
movs
push
mov
pop
or
push
clc
test
mov
shl
inc
xor
ins
ins
and
call
add
mov
sbb
push
in
push
mov
xchg
mov
hlt
outs
mov
sub
xchg
inc
jp
pop
xchg
arpl
in
pushf
rcr
pushf
cmp
push
pop
mov
rol
imul
mov
fidiv
pop
mov
loope
call
das
popf
and
mov
cs
dec
(bad)
into
aad
fdivr
int3
shr
and
into
sbb
mov
(bad)
pusha
in
adc
popa
adc
test
icebp
std
mov
repnz
lods
call
fidivr
mov
out
sub
ss
mov
ins
inc
faddp
fcomi
and
das
int3
jle
loop
xlat
sub
jl
cld
xor
lock
stc
test
add
enter
das
outs
pop
ret
stos
jno
shl
pop
fist
int
inc
aad
dec
stos
hlt
inc
pusha
cmp
mov
fiadd
lahf
xor
daa
cmc
inc
fcmove
out
cwde
aas
and
or
cs
cmp
mov
call
pusha
icebp
loopne
dec
jmp
mov
bound
jecxz
cld
xchg
cwde
xlat
xchg
jl
mov
or
out
(bad)
jp
(bad)
sub
cli
dec
sbb
push
cwde
sar
mov
dec
gs
imul
pushf
push
jne
xchg
cli
pop
cmc
mov
repnz
sub
push
adc
jp
les
add
jge
or
xor
hlt
cmp
mov
cmps
cmp
icebp
(bad)
stc
cmp
pop
pop
pop
or
xchg
mov
mov
push
std
lods
sar
imul
and
test
ins
inc
adc
stos
jae
fiadd
fcmove
sub
push
mov
mov
into
les
test
stos
(bad)
mov
lods
ret
sbb
inc
out
or
cli
cmps
stos
jg
or
cmp
sub
adc
mov
jecxz
sbb
jo
xchg
mov
bnd
jb
pop
xlat
ret
inc
jns
ja
in
test
fcomp
(bad)
cs
repz
nop
lahf
les
sub
(bad)
adc
mov
stc
mov
sbb
sbb
(bad)
mov
inc
add
pop
clc
iret
add
push
retf
sti
int
xchg
(bad)
out
or
xchg
sub
or
fnstcw
dec
rcl
scas
pop
sub
push
cmp
fidivr
in
dec
arpl
loope
cwde
sub
fbld
sti
mov
inc
aas
push
mov
aad
adc
scas
xchg
cmp
push
sbb
mov
rol
push
inc
mul
out
test
retf
xchg
cdq
push
inc
jge
mov
loop
cmp
cdq
and
pop
mov
mov
(bad)
xchg
jmp
dec
sbb
loope
xor
mov
lds
xchg
jns
mov
pop
pop
pop
(bad)
movs
mov
mov
arpl
and
mov
mov
scas
cmp
ficomp
pop
fiadd
bound
pop
or
jecxz
jle
cmp
mov
or
xlat
inc
sti
pop
xor
call
push
psadbw
adc
inc
add
les
pop
inc
shl
rol
inc
ins
jecxz
pop
xor
repnz
mov
hlt
inc
jecxz
fisubr
fidiv
sbb
test
cs
add
cli
mov
xchg
pop
mov
repz
shl
pop
aam
jbe
fst
aam
gs
and
jge
movs
in
jle
dec
inc
idiv
fwait
enter
add
push
xchg
xor
aas
inc
jno
add
repnz
rcl
loope
in
mov
sbb
(bad)
lea
cmp
(bad)
(bad)
mov
xor
je
or
mov
fwait
and
fldenv
jp
mov
mov
sbb
sbb
mov
jmp
out
ins
mov
imul
sahf
push
push
pop
hlt
fmul
sbb
pop
dec
rol
int
lea
out
mov
and
mov
mov
test
mov
sti
(bad)
xchg
pop
mov
mov
call
dec
xchg
cwde
pop
fistp
stos
fidivr
int3
aam
js
mov
mov
sub
std
xchg
push
add
into
ja
ret
and
pop
xchg
add
arpl
or
mov
xor
test
cmp
jle
leave
and
and
add
xchg
lock
mov
push
pop
sbb
fs
push
adc
adc
xor
stos
out
jb
in
ret
jle
pop
(bad)
pop
loopne
push
(bad)
xchg
push
or
adc
movs
cli
lods
jo
sub
ins
div
sbb
mov
lods
mov
jbe
lea
adc
out
stc
retf
dec
xchg
(bad)
cmc
adc
aaa
mov
or
stos
and
mov
adc
jle
in
repz
enter
adc
aas
jo
sbb
repnz
jo
jno
pushf
jle
loop
outs
(bad)
pop
cld
mov
aaa
call
and
dec
jmp
sub
cmp
mov
sub
xor
test
or
pop
repnz
neg
aaa
xor
aas
or
aad
dec
lods
mov
iret
(bad)
inc
pop
jo
mov
icebp
mov
rol
push
lods
sbb
pusha
and
push
sbb
ret
xor
ret
nop
out
addr16
mov
fimul
(bad)
sar
je
push
mov
dec
mov
push
cmp
popf
push
or
sti
push
in
xchg
and
test
push
nop
jns
popf
add
fxch
add
outs
stc
repz
lds
pop
(bad)
add
sbb
(bad)
icebp
(bad)
sahf
fcomp
jmp
jmp
mov
mov
shr
test
popa
adc
xchg
or
mov
div
mov
mov
xchg
test
push
pusha
adc
test
dec
(bad)
gs
lock
sbb
and
and
push
mov
adc
xor
mov
das
inc
lds
push
and
mov
call
pop
mov
jno
(bad)
adc
lea
nop
stc
jmp
xlat
jnp
mov
pop
fstp
pop
(bad)
sti
sbb
fiadd
jmp
mov
outs
pushf
test
cmp
loope
xchg
fnstcw
mov
hlt
(bad)
cli
test
lahf
adc
pop
cdq
rol
jmp
add
(bad)
dec
mov
adc
(bad)
retf
xor
cmp
add
dec
jge
sbb
ins
test
cli
cmp
xchg
or
std
mov
sub
ja
mov
mov
sar
stc
repnz
mov
ss
out
push
popf
(bad)
es
jne
and
into
pop
or
cmps
sbb
push
push
sub
bound
jnp
scas
test
mov
mov
mov
dec
mov
push
fcomp
add
mov
push
pop
dec
or
fnstcw
in
stos
inc
push
jg
xchg
retf
sub
bound
mov
fidivr
ret
xchg
cli
sbb
imul
lock
mov
or
push
xor
ficom
mov
cwde
loop
das
sbb
je
dec
pop
jne
bound
mov
ret
xchg
fidiv
jg
push
cmc
lds
(bad)
sbb
(bad)
mov
mov
call
jae
mov
imul
xchg
fcomip
and
or
fcomp
adc
das
or
pop
les
add
mov
sub
(bad)
dec
jle
cmp
add
jl
dec
mov
push
mov
into
(bad)
imul
lock
repnz
jns
ja
dec
lahf
push
xor
mov
dec
jb
and
adc
add
outs
imul
in
ins
in
pop
dec
xor
mov
in
sub
lods
addr16
jae
mov
out
lds
add
xchg
add
pop
jae
js
cmc
cmp
add
or
call
add
loope
rol
call
fwait
mov
sub
les
adc
push
fs
mov
add
jnp
ret
xlat
inc
adc
or
inc
stos
dec
add
pop
pop
ret
add
mov
mov
(bad)
adc
sub
aaa
(bad)
stc
and
icebp
inc
scas
sbb
call
ret
aaa
sub
or
adc
add
rol
xlat
push
jne
and
ds
push
inc
cmp
jne
jns
shl
aam
dec
and
jb
jg
mov
cmp
mov
scas
xchg
test
xchg
je
pop
imul
xor
ficomp
add
or
push
cmp
pop
cmp
add
stos
in
inc
into
fucomi
enter
pushf
(bad)
fsubr
mov
repnz
or
jg
add
sub
scas
pop
pop
mov
stos
mov
xchg
xor
fist
dec
dec
pop
fst
(bad)
push
cmc
aas
mov
mov
mov
leave
or
sbb
inc
sub
sub
inc
mov
push
or
mov
xchg
push
retf
mov
mov
push
sar
mov
push
(bad)
stos
xchg
cmp
pop
or
ret
mov
dec
push
aad
cmp
imul
mov
lods
arpl
mov
test
jae
mov
mov
shr
fldenv
or
mov
jbe
pop
rcr
pop
pusha
imul
sar
stos
mov
cs
mov
mov
dec
(bad)
fcomp
inc
ret
sbb
push
push
and
(bad)
retf
lods
test
ret
jb
xor
sbb
inc
retf
jno
popf
sbb
loop
pushf
mov
inc
mov
(bad)
sti
adc
jl
lods
inc
rcr
cmp
sub
std
cmp
jne
jo
cmp
outs
les
mov
dec
xchg
sbb
lock
jge
das
mov
int
retf
in
mov
jge
sahf
xchg
push
leave
outs
sti
xor
push
and
setb
jge
xchg
inc
add
out
push
add
jmp
add
cmp
add
push
add
sbb
and
test
inc
mov
cld
push
mov
into
(bad)
jmp
iret
loope
aas
and
lds
pushf
push
xchg
jno
cdq
pop
ror
imul
mov
dec
int
push
arpl
jb
data16
movs
xchg
call
mov
in
test
mov
or
shr
pop
stos
icebp
outs
test
mov
xchg
shl
jb
push
test
mov
nop
lahf
push
inc
jecxz
mov
push
ret
or
cmp
add
test
pop
mov
mov
das
ret
jo
cs
stos
js
fisttp
sbb
inc
(bad)
ret
ds
pop
repz
or
cli
jb
pop
pop
sar
sbb
ins
or
mov
ins
adc
xor
or
repnz
cdq
add
pop
mov
jo
les
and
fcom
cmp
shl
test
scas
adc
inc
mov
hlt
lods
sbb
cdq
xchg
call
push
fsubrp
dec
scas
jmp
movs
mov
mov
outs
push
daa
loope
xchg
(bad)
fisubr
out
test
dec
mov
pusha
pop
jmp
js
jp
add
out
cli
js
inc
fild
movs
jg
test
sbb
repnz
lahf
scas
and
fstp
mov
pop
or
adc
std
mov
push
cmp
movd
outs
lahf
cmps
and
in
mov
push
xchg
adc
inc
mov
sub
cmp
rcl
aad
lea
rcl
lds
pop
xchg
shl
fcmovb
add
popf
int3
rcl
aad
lods
fsubr
sbb
or
ror
rcl
inc
mov
add
aam
or
push
int
ins
inc
(bad)
mov
mov
imul
sub
loop
popf
sar
jno
imul
pop
or
call
xor
aaa
(bad)
in
stos
push
pop
(bad)
fadd
cli
ret
xor
loope
ret
inc
(bad)
(bad)
das
daa
add
push
dec
sbb
add
fiadd
pusha
jns
add
xchg
dec
add
call
or
int
das
push
ret
xchg
(bad)
add
cmp
jno
mov
daa
pop
xor
inc
stos
in
sti
jge
xor
mov
sbb
ret
in
cs
mov
mov
dec
sbb
xchg
arpl
push
xchg
leave
or
fisubr
mov
xchg
outs
bound
cmc
movs
xchg
cmps
in
xchg
jb
cmp
pop
add
jle
inc
pop
jmp
mov
aas
sahf
(bad)
cmc
adc
pop
xchg
xor
sahf
xchg
loopne
sub
jmp
add
jmp
jne
daa
sahf
sbb
adc
sbb
or
les
sub
repnz
gs
out
lds
cmp
scas
retf
(bad)
lock
pop
add
jno
lods
and
dec
adc
int3
in
and
or
or
arpl
ficom
movs
mov
and
mov
cmc
jne
mov
sbb
sub
mov
inc
cdq
arpl
sbb
lock
inc
(bad)
je
xchg
nop
add
rcl
repnz
lock
sbb
mov
arpl
add
popf
in
sbb
push
push
(bad)
call
inc
gs
push
call
retf
sbb
dec
xchg
jns
movs
or
pop
repz
and
cld
ins
adc
push
dec
push
(bad)
imul
lds
pop
mov
fild
jmp
cs
fild
retf
or
inc
xor
or
mov
call
sub
cli
dec
push
je
in
cmp
mov
push
and
stos
xchg
ret
in
mov
inc
or
ins
movs
shl
push
ret
xor
pop
push
inc
push
inc
fucomip
mov
jge
test
sub
test
xchg
mov
enter
sbb
shl
xor
jno
inc
push
push
xchg
sub
ret
(bad)
js
(bad)
push
adc
cmps
jo
jnp
jl
dec
aas
div
jno
xchg
fdivr
mov
lahf
push
push
inc
sar
cmp
loop
adc
cli
arpl
int3
outs
pop
cmps
xor
inc
xchg
imul
or
adc
test
and
popa
or
adc
(bad)
push
pop
jbe
cmc
mov
imul
mov
mov
pushf
fwait
adc
jl
ror
fistp
pop
add
sub
in
pusha
pop
mov
add
(bad)
fadd
mov
repnz
fsub
jmp
cmp
jno
ins
mov
and
add
shl
add
cmp
sub
mov
test
xchg
add
mov
mov
out
ret
int
movs
icebp
cmp
lds
(bad)
daa
sbb
mov
xchg
add
xchg
xor
xchg
add
push
pop
popa
stos
pop
sar
sbb
push
mov
test
repnz
ret
add
bound
mov
lock
xchg
xchg
das
dec
lds
test
fsubr
in
inc
pop
loope
mov
sub
popa
imul
and
(bad)
pop
push
cs
cmps
retf
out
outs
sub
pop
stos
imul
sahf
pop
mov
pop
das
adc
pop
es
call
sahf
cmc
hlt
pop
pop
jae
xchg
scas
in
sub
in
cwde
jnp
jmp
pusha
enter
dec
inc
inc
and
nop
jns
pushf
fmul
inc
or
pop
dec
clc
call
cmp
fyl2xp1
fwait
jg
(bad)
fisttp
jg
ins
inc
mov
sti
test
add
cdq
inc
test
div
mov
pop
inc
shr
pop
mov
aam
dec
movs
or
aad
sub
mov
sti
popa
add
sub
sti
push
cmc
aad
xchg
push
pop
or
pop
out
dec
add
xor
push
sub
in
mov
mov
shr
callw
sbb
retf
push
mov
cmc
mov
popf
gs
iret
lock
ins
test
std
inc
aad
xlat
movs
mov
cmp
cmp
in
add
jmp
sub
xchg
xor
mov
retf
pusha
jb
push
movs
mov
adc
scas
xchg
cli
aam
push
scas
adc
push
lds
add
je
scas
or
sbb
fild
adc
push
cwde
push
lea
retf
jl
mov
test
mov
aad
repz
jnp
add
and
or
and
popa
call
(bad)
ficom
dec
cs
mov
add
mov
mov
mov
lea
call
loopne
jp
adc
mov
imul
fdivr
mov
dec
outs
(bad)
inc
nop
repz
xor
push
adc
(bad)
cld
add
xor
js
pop
cmp
stos
bound
cmp
cmp
pop
data16
cmps
imul
push
fwait
and
add
adc
gs
ss
inc
aas
daa
je
jbe
cmp
je
nop
out
sbb
mov
mov
test
popa
sahf
call
loope
and
ds
mov
mov
sub
mov
mov
cmp
add
xor
jg
pop
or
adc
(bad)
imul
icebp
and
pop
retf
ret
int
mov
adc
push
jns
dec
xor
inc
xor
and
add
out
ja
js
sbb
mov
xchg
and
sub
mov
adc
daa
add
sub
jne
std
pop
popa
dec
mov
or
and
xor
add
jbe
xchg
or
or
(bad)
sbb
or
pop
jl
loopne
inc
lea
stos
ret
jo
mov
mov
cmp
push
ret
repnz
inc
sbb
bound
jecxz
push
test
inc
in
mov
xchg
push
mov
ret
cmp
jge
dec
test
out
push
call
adc
xsavec
loopne
aas
aas
xor
out
inc
pop
jns
xchg
(bad)
inc
adc
adc
mov
fisttp
test
cmp
pop
dec
sub
movs
rcr
in
xchg
cmc
fwait
mov
int
(bad)
cmp
pop
mov
xor
pop
das
leave
add
inc
pop
xchg
jg
aas
daa
cmps
mov
or
xchg
pop
in
movs
pusha
mov
lods
je
ficomp
mov
fs
jl
adc
jl
and
outs
mov
nop
outs
inc
loope
pop
xor
pushf
outs
cmp
xchg
nop
add
push
fiadd
push
mov
xor
mov
xor
dec
inc
das
aas
adc
retf
add
lods
sub
mov
or
enter
mov
ins
das
ret
fwait
js
out
mov
push
test
cmps
add
push
std
outs
sbb
das
pop
lahf
lahf
pop
ret
or
push
and
xchg
cwde
sbb
test
int
bound
inc
or
mov
mov
add
mov
and
test
pop
hlt
sub
lea
push
shl
sbb
(bad)
adc
jge
inc
mov
scas
pop
xchg
ins
adc
hlt
cmp
add
(bad)
xor
lea
push
ds
sub
jnp
or
repnz
adc
xchg
sub
xchg
inc
retf
jle
cmp
cwde
das
stos
cmp
xchg
cdq
test
stos
jecxz
adc
je
test
imul
(bad)
jnp
in
loop
fdivr
mov
(bad)
pop
icebp
in
add
sbb
daa
push
clc
test
xor
and
popa
loope
es
sbb
jne
mov
xor
lods
cmp
loop
aad
mov
imul
inc
aad
mov
mov
push
gs
dec
inc
ror
jle
cld
test
mov
lea
sub
dec
rol
ds
test
cmp
fist
mov
(bad)
ror
lea
in
neg
(bad)
imul
ss
int3
xchg
movs
retf
push
sbb
ins
xor
mov
or
pop
adc
add
dec
add
jecxz
jb
fmul
adc
movs
lock
outs
sub
ins
call
cli
sbb
aam
mov
sbb
mov
dec
or
xchg
and
sub
pop
push
push
(bad)
std
int
lock
mov
into
mov
loope
push
or
xchg
xchg
out
js
adc
push
pop
(bad)
mov
or
sub
test
in
imul
xor
test
inc
adc
inc
fs
push
rcl
mov
scas
jae
int3
and
cld
cli
jb
adc
fcom
dec
cli
sbb
sar
jl
lds
pop
cmp
sub
ja
mov
xor
test
dec
adc
(bad)
icebp
jl
jp
lods
comiss
js
xchg
mov
mov
xchg
add
fs
mov
and
xor
and
push
loopne
xchg
nop
adc
mov
outs
iret
das
cmp
fwait
jmp
(bad)
lock
and
xor
inc
js
out
jg
icebp
jg
add
xchg
retf
push
pop
inc
aam
out
cld
cs
ins
xchg
pop
arpl
push
cmp
retf
sbb
test
cmp
retf
pop
mov
mov
ins
addr16
cmp
test
(bad)
xor
mov
xchg
and
nop
xchg
sub
xor
mov
out
mov
dec
aaa
xor
sub
lea
mov
add
mov
arpl
jae
(bad)
aad
push
and
inc
jmp
or
jmp
loope
lods
repnz
xor
clc
mov
add
add
xor
cmp
icebp
stc
inc
sbb
cmp
mov
jle
adc
xor
lds
sub
bound
stos
cli
mov
sbb
push
mov
clc
mov
or
inc
pushf
mov
(bad)
xor
inc
sub
sub
xor
push
(bad)
pop
stos
add
mov
sbb
out
shr
and
loop
push
mov
push
loopne
add
mov
retf
and
ret
mov
push
or
and
push
lds
adc
jno
dec
cmp
push
pop
pop
ficomp
clc
jbe
das
ds
test
pop
push
loopne
rcl
fidivr
pop
push
imul
lock
neg
mov
int
out
fnsave
dec
out
lea
jp
rcl
js
sbb
cmp
mov
fcom
pextrw
js
cmp
push
imul
mov
mov
xor
or
cmp
jb
daa
stos
into
lea
jp
cmc
fistp
and
out
mov
and
scas
inc
add
push
fcomp
pop
and
test
jno
dec
retf
push
ret
fisttp
and
fild
out
sub
outs
push
imul
pop
xor
mov
mov
push
pop
rcr
adc
inc
loop
cmp
mov
ret
jo
call
cmps
mov
out
mov
loop
adc
push
movs
das
lods
sub
ret
movs
xchg
mov
lods
dec
push
mov
adc
xor
popa
xor
mov
mov
adc
pop
stos
jno
mov
loopne
das
aaa
sbb
jmp
cwde
sbb
jmp
xchg
adc
mov
fcom
sbb
fwait
mov
jb
ror
mov
sub
test
adc
add
jb
in
cld
adc
push
(bad)
jl
int
aas
inc
jle
push
mov
pop
sbb
arpl
enter
pushf
pop
fst
leave
aad
xchg
pop
jnp
mov
inc
xchg
cld
add
nop
add
mov
mov
mov
xor
add
je
add
jle
mov
jle
sar
outs
(bad)
stos
cld
lods
(bad)
aad
xchg
or
and
sbb
adc
xor
test
mov
movs
(bad)
sub
add
cwde
push
dec
fsubr
pop
jecxz
jnp
jge
jb
cdq
sbb
cmp
out
or
cs
retf
int
mov
movs
add
sahf
push
stc
mov
inc
push
jmp
add
cld
gs
xchg
enter
pop
sub
mov
add
cdq
cmp
rcl
fscale
lods
jno
xchg
push
jmp
call
xchg
pop
ror
dec
shr
ins
(bad)
xchg
arpl
push
inc
lea
ror
in
dec
adc
dec
mov
fst
loopne
jle
add
mov
jl
add
shl
and
cmps
adc
out
xor
xchg
ret
aam
adc
loop
mov
test
rcl
in
dec
mov
bound
pop
sub
cmp
add
add
sbb
ins
pushf
test
jg
das
out
loope
adc
shr
enter
mov
sub
inc
xchg
inc
xchg
in
(bad)
das
test
inc
shl
std
shl
add
push
jns
xchg
popf
push
inc
sbb
repnz
(bad)
repnz
lock
mov
push
(bad)
cmp
clc
inc
addr16
loope
xchg
stc
mov
mov
jmp
mov
addr16
dec
(bad)
icebp
pop
aas
mov
(bad)
mov
cmp
test
fdivr
test
mov
gs
mov
mov
jp
sar
aad
xor
cli
cs
call
cmp
xor
or
rcr
ret
retf
push
lods
(bad)
jbe
ja
movs
retf
in
gs
sub
lock
call
fcmovnu
aad
test
jae
cmp
adc
push
mov
inc
pushf
fwait
sbb
xchg
popf
push
sbb
ins
xchg
dec
cmp
push
xor
inc
push
aaa
dec
lods
loope
sub
xchg
pop
fist
mov
push
pop
dec
lods
cmp
jb
jl
sbb
popa
mov
ret
test
adc
aaa
bound
adc
xchg
in
adc
test
mov
xor
ret
xor
xchg
ror
sub
sbb
cmp
dec
les
push
pusha
gs
jl
std
ja
xor
movs
test
cmps
mov
(bad)
out
xchg
dec
sub
push
adc
ss
das
call
xchg
push
pop
pusha
pop
mov
outs
not
inc
xor
jmp
or
xor
shl
ins
arpl
(bad)
ror
cmps
test
add
jmp
dec
cmc
jl
pop
xchg
xchg
and
not
fs
xchg
test
adc
imul
or
inc
faddp
sti
cmp
sahf
add
sub
jecxz
add
clc
repz
aaa
jg
jle
stc
(bad)
ja
sub
sbb
jg
ret
xchg
leave
gs
xchg
into
dec
scas
xor
or
into
cmp
or
arpl
cwde
mov
xchg
dec
mov
pop
fcmove
mov
div
push
sar
cmp
jmp
sub
jl
stos
call
lds
adc
jmp
sub
movs
inc
inc
mov
test
sbb
xor
xchg
add
cmc
adc
sahf
or
loope
sbb
pop
lea
or
mov
cmps
fwait
test
outs
jecxz
clc
aam
or
mov
mov
rol
sbb
xchg
add
inc
repnz
test
inc
mov
es
stos
cmp
mov
xor
ss
mov
loope
push
add
mov
js
mov
sub
test
das
dec
inc
mov
stos
adc
mov
or
mov
and
pushf
mov
and
pop
mov
sbb
dec
pop
mov
cmps
mov
movs
jecxz
(bad)
push
mov
xchg
pop
aam
mov
sub
stos
xchg
inc
xor
sub
mov
das
adc
add
lds
and
cmp
cdq
sbb
inc
or
aas
pop
pop
pop
inc
xchg
jg
scas
push
in
imul
test
jg
loopne
lods
sbb
lahf
outs
ins
vpmaddwd
mov
mov
(bad)
cli
leave
in
mov
fs
fld
imul
ret
xchg
imul
arpl
inc
jns
inc
sub
push
sub
and
xchg
(bad)
pusha
mov
outs
sub
lock
dec
fbstp
out
stos
sbb
(bad)
sti
mov
adc
retf
xchg
cmps
jle
gs
mov
loop
jge
retf
xor
mov
mov
cmp
cmp
stos
rcr
push
test
xor
lock
cwde
inc
jmp
sub
popa
dec
push
imul
jno
lods
xor
mov
loop
dec
add
into
or
and
in
jno
xchg
out
fld
adc
or
sbb
lods
lods
and
jns
push
retf
fwait
popa
outs
and
shl
inc
jns
cwde
sbb
in
mov
adc
push
bound
imul
ret
clc
push
adc
bnd
jge
jbe
or
jge
push
sbb
pop
jmp
sub
xor
cmp
ret
ror
dec
lds
cmp
repnz
ins
pop
mov
out
sub
mov
mov
scas
add
ret
sahf
fist
cmp
aaa
xchg
arpl
scas
sub
fcom
push
or
jo
jo
sahf
or
sub
sti
shr
cli
add
mov
rcl
cmp
fcom
jbe
add
fdivr
hlt
pop
xor
adc
fsubp
idiv
add
adc
mov
aaa
mov
add
mov
add
sub
jb
int3
inc
xchg
retf
xor
jg
dec
cmp
ins
gs
jmp
out
sub
sar
inc
mov
es
test
stc
mov
push
mov
(bad)
mov
icebp
fs
sbb
cwde
dec
and
add
xchg
sub
add
dec
sub
enter
xchg
enter
sub
cmps
vcvttpd2dq
scas
sub
jmp
or
(bad)
push
mov
test
lock
(bad)
push
out
call
pop
bt
sub
push
dec
add
loopne
inc
cmovl
xchg
push
in
sub
xor
sti
mov
xchg
test
shr
cmp
shl
jnp
and
lea
shr
pop
ins
and
jne
push
lods
and
mov
imul
or
or
pop
pop
aam
jmp
cld
jle
mov
adc
mov
(bad)
adc
sbb
push
ffree
sbb
sbb
ror
xlat
add
sbb
or
adc
cmp
add
add
mov
aas
mov
xchg
div
mov
mov
scas
pop
dec
rcl
(bad)
mov
fsub
mov
mul
ret
aad
cmp
mov
loop
int
jb
dec
lods
lahf
fadd
sub
les
lock
sub
shl
mov
mov
or
add
call
inc
pop
adc
mov
adc
fcom
popf
sbb
(bad)
jmp
mov
mov
lods
dec
push
fcmovne
sbb
sbb
push
sub
(bad)
adc
sbb
ds
in
inc
cmp
sahf
pop
fbstp
rcr
retf
rcl
jno
inc
inc
inc
or
xor
popf
sbb
jmp
sbb
xchg
mov
add
or
arpl
push
fld
push
stos
(bad)
mov
scas
sub
ds
movs
push
ret
sub
mov
aaa
div
pop
push
xchg
jne
retf
popa
popa
add
arpl
sub
and
mov
mov
fidiv
and
sbb
and
xor
int3
rcl
mov
cmp
and
ins
mov
xor
das
mov
or
and
xchg
dec
icebp
(bad)
shr
inc
in
cmp
stos
jb
inc
cs
pop
in
cmp
ret
sbb
and
shr
in
dec
and
dec
add
nop
add
add
mov
inc
push
movs
xchg
stc
fld
leave
rcl
pop
cmp
pop
push
mov
cmp
add
mov
icebp
push
cmp
add
dec
sub
cld
and
add
jbe
out
call
(bad)
(bad)
jg
pop
inc
popa
das
jmp
add
mov
add
push
daa
call
outs
fucomip
adc
in
pop
lahf
aaa
xchg
pop
into
mov
sub
ret
push
mov
out
jmp
(bad)
xchg
mov
xor
add
xor
add
and
dec
adc
pusha
clc
cmp
and
cdq
ds
push
mov
test
enter
sbb
rcl
lahf
cli
cmp
dec
pop
sub
or
push
fcom
mov
mov
aam
(bad)
rcl
out
mov
push
adc
xlat
hlt
aad
add
xchg
add
add
dec
inc
xor
fsub
lea
sub
fld
(bad)
push
jno
jge
push
adc
xchg
jno
stc
and
push
loopne
mov
cmp
lods
pop
xor
or
and
pop
cmp
jnp
int3
ret
out
xchg
jae
addr16
sub
les
cwde
sub
syscall
ins
inc
les
mov
jnp
mov
push
sub
dec
call
out
jmp
stos
clc
shl
pop
jmp
inc
lock
mov
push
mov
retf
js
bound
push
lahf
pop
mov
jnp
lock
mov
(bad)
shl
nop
cmp
(bad)
mov
mov
mov
rol
adc
pop
(bad)
(bad)
pop
cmp
scas
cmp
adc
out
pop
ficomp
jge
xor
and
jge
jge
retf
fist
icebp
adc
sub
js
inc
lods
xchg
xchg
cmps
xor
sub
(bad)
push
jmp
hlt
shr
sub
xor
(bad)
out
ret
push
jo
jno
mov
dec
mov
jle
ss
out
xchg
std
mov
cwde
xlat
mov
out
mov
pushf
cwde
cmps
cwde
push
mov
cmps
shl
daa
push
lock
shl
push
dec
or
bound
sbb
sbb
lods
xchg
out
jnp
mov
add
nop
add
sub
or
inc
rcl
pusha
pusha
mov
repnz
cmp
inc
pop
sbb
movs
and
leave
mov
xor
hlt
sbb
(bad)
inc
or
push
bound
cwde
(bad)
(bad)
and
dec
shl
(bad)
fdiv
ret
call
mov
sbb
xchg
xchg
or
cld
and
sub
pop
dec
fdiv
push
je
sbb
or
sub
mov
mov
out
retf
movs
ins
addr16
mov
jge
mov
loope
icebp
outs
nop
les
add
add
add
push
xchg
add
ret
mov
stos
call
sub
in
mov
inc
mov
pushf
xor
lea
xchg
adc
pop
pop
adc
push
or
add
adc
jle
and
push
cmp
fyl2xp1
fwait
mov
out
lock
fidivr
aas
out
(bad)
jge
iret
scas
xchg
push
jne
out
cmp
out
push
pusha
lods
inc
stc
fistp
int
and
hlt
xchg
icebp
mov
rol
inc
sub
cmp
imul
pop
test
sub
fs
mov
jecxz
jnp
pop
sub
lahf
in
sar
xlat
xchg
jp
fwait
iret
std
cmp
xor
mov
fld
dec
icebp
cmps
lahf
or
inc
in
push
shl
pop
ret
sub
sbb
aas
push
push
xor
test
das
fisttp
or
pusha
adc
xchg
add
dec
mov
retf
dec
cmps
cmp
dec
dec
sbb
xor
repz
pop
ret
and
push
jo
lods
sbb
shr
xor
loop
sti
sub
jl
pop
repz
cmp
std
xor
cmp
inc
sub
and
xor
mov
mov
xchg
xor
out
out
lahf
shl
push
mov
fild
fwait
xchg
jle
add
out
pop
mov
ds
sub
adc
jl
jl
daa
out
in
in
jns
fadd
stos
pop
enter
cmp
scas
and
fldenv
bswap
out
(bad)
mov
icebp
call
pop
sub
xchg
fwait
cmp
in
std
in
jns
icebp
repz
into
and
cmps
inc
or
mov
sbb
fld
or
fld
icebp
hlt
les
cmp
sub
in
inc
sub
(bad)
lock
out
mov
rol
jne
or
jne
ficom
ins
mov
jg
sub
push
pop
or
mov
xchg
jp
and
sub
test
jp
stc
mov
push
mov
fidivr
or
sub
jmp
mov
jo
jmp
(bad)
xchg
mov
inc
shl
inc
sbb
sbb
sub
(bad)
mul
out
fst
jp
(bad)
and
into
cs
fwait
adc
ins
or
and
shl
aas
ins
sbb
mov
stos
pop
lea
imul
xchg
cmp
je
push
pusha
xor
fdiv
stos
mov
dec
scas
bound
jo
adc
movs
ss
mov
pop
js
push
sbb
sub
mov
outs
mov
and
push
pop
cli
leave
jno
and
xlat
out
mov
adc
sub
test
adc
sub
les
adc
nop
adc
mov
les
das
adc
xor
inc
das
add
jmp
popa
outs
mov
bound
jnp
je
adc
push
push
mov
popa
pusha
test
push
lahf
jo
adc
stc
adc
(bad)
mov
xchg
dec
outs
ret
aam
daa
and
and
adc
push
sub
and
cwde
loopne
or
std
inc
mov
lahf
sub
daa
leave
jmp
dec
bound
push
mov
adc
mov
inc
push
adc
sub
pop
daa
add
adc
adc
sub
lahf
xchg
enter
jl
outs
sahf
or
loop
pop
outs
sahf
ja
loope
imul
xlat
jns
add
adc
fidivr
das
cmp
xlat
xchg
retf
mov
mov
call
or
dec
add
cld
cmp
xor
and
cli
movntps
movs
mov
mov
sti
das
mov
enter
dec
je
icebp
xchg
sbb
leave
add
imul
xchg
mov
mov
daa
(bad)
es
movs
jbe
(bad)
rol
add
lods
ret
(bad)
out
mov
out
mov
push
push
inc
lds
sub
clc
rcl
dec
push
mov
inc
or
(bad)
push
outs
in
and
xor
pop
ror
mov
loop
(bad)
enter
jnp
pop
push
loope
add
dec
(bad)
jae
inc
adc
inc
or
test
xchg
mov
cmp
inc
add
xchg
pop
cmc
add
aas
cmp
push
mov
mov
inc
and
xchg
jae
cmp
int3
pop
push
das
mov
sbb
xor
inc
test
lds
mov
(bad)
sti
or
push
mov
cmps
or
sti
and
ret
lock
xor
call
mov
push
xchg
jnp
out
mov
add
cdq
mov
movs
mov
test
bound
sbb
or
loop
mov
into
mov
inc
sub
add
aam
js
es
mov
shl
sti
ins
cmp
call
test
js
xor
(bad)
dec
sti
sub
nop
jne
adc
pushf
pop
mov
test
sub
(bad)
in
xchg
jp
int
cmp
aad
mov
sub
mov
cmc
mov
outs
or
call
out
cld
xlat
xor
adc
cmp
ins
rcl
iret
sbb
pop
sub
iret
ror
mov
(bad)
mov
std
popf
mov
aad
add
add
ja
pop
pop
or
inc
(bad)
and
adc
inc
pushf
movs
aas
and
shl
add
sahf
mov
jnp
lahf
fcom
jecxz
pop
ins
sbb
sbb
les
arpl
and
xchg
and
call
movs
and
bound
inc
jp
xor
adc
jno
inc
fmul
(bad)
dec
mov
loope
cld
push
clc
cmp
sbb
(bad)
xor
sbb
xchg
into
loope
aaa
xchg
dec
sbb
loop
mov
test
pusha
dec
cmp
ror
xor
popa
dec
mov
hlt
repz
arpl
int
sbb
mov
mov
mov
xchg
popa
test
or
adc
pushf
aas
ret
mov
cmp
stos
outs
xor
or
mov
jnp
jne
jno
push
loop
in
or
mov
adc
mov
add
lahf
sbb
sahf
sub
sub
mov
add
mov
popa
mov
or
repnz
push
push
repnz
xchg
jl
gs
pop
cdq
stos
cmps
mov
push
rol
(bad)
jb
test
outs
and
dec
loopne
jns
lods
pushf
daa
iret
test
cmp
xor
int3
xchg
mov
add
retf
pop
adc
add
jecxz
jb
lock
mov
int
sbb
pushf
push
add
adc
sub
and
daa
add
cdq
pushf
and
jle
sub
sub
cmps
push
jg
gs
inc
into
pop
sub
pop
pop
mov
mov
pop
movs
mov
adc
into
mov
xor
and
jb
ins
nop
daa
arpl
lods
in
dec
(bad)
lods
outs
adc
xchg
cdq
mov
repz
loope
mov
fistp
sub
scas
mov
retf
popf
cmp
xlat
ds
(bad)
sub
lds
cwde
lods
add
les
imul
and
ret
adc
cmps
inc
icebp
inc
xor
mov
xor
jmp
push
push
push
lahf
loope
xor
push
fimul
ffreep
push
das
cmps
push
(bad)
xlat
inc
push
mov
jno
push
add
loop
xchg
xchg
cmp
pop
pop
rol
fwait
add
outs
mov
jp
mov
stos
xchg
shl
push
fld
mov
and
sub
inc
inc
push
push
jb
ds
xchg
mov
out
lahf
cmp
icebp
mov
jge
sbb
daa
aaa
jecxz
mov
and
fstp
sbb
shl
mov
call
add
mov
sbb
xchg
or
dec
das
pop
aam
push
xchg
or
ror
pop
mov
add
out
pop
(bad)
dec
aad
icebp
movs
clc
jo
sub
out
sub
cs
push
and
cs
xchg
ss
jmp
je
ins
and
pop
xor
push
jmp
icebp
es
adc
or
lea
ins
push
push
int
int
ror
pop
cmp
sti
mov
cmp
pop
mov
cmp
mov
mov
into
sub
imul
nop
ja
adc
lahf
lods
inc
test
clc
imul
fidivr
pop
mov
(bad)
loop
mov
enter
das
scas
sub
nop
xor
xchg
ins
retf
and
stos
mov
stos
and
stos
mov
xor
push
mov
inc
das
push
std
jl
dec
mov
int3
stos
dec
add
mov
(bad)
push
fcomp
aas
add
cmps
push
lds
xor
xchg
and
popa
outs
adc
dec
stc
add
cmp
inc
dec
js
inc
les
add
mov
bound
push
jecxz
jb
adc
popa
push
dec
hlt
not
pusha
nop
mov
cwde
jmp
mov
shl
mov
mov
ret
std
js
icebp
cmps
xlat
js
mov
(bad)
(bad)
stos
cmps
fcom
adc
sbb
xchg
adc
or
pop
mov
xor
scas
movs
push
out
jb
data16
ds
gs
add
cmps
std
and
aas
push
fs
inc
add
and
jmp
cmp
push
add
iret
in
std
cwde
stos
push
add
mov
loopne
int
inc
jne
jg
mov
fimul
outs
in
and
arpl
inc
cs
push
pusha
sub
add
xchg
pop
iret
push
and
or
add
add
xor
ror
cmp
sbb
test
jl
add
addr16
call
aas
xchg
aas
pop
retf
jae
inc
adc
xchg
dec
(bad)
fwait
test
adc
xor
pop
cld
out
or
push
sub
cdq
jmp
(bad)
mov
or
jae
mov
push
jb
add
pop
add
sub
retf
jp
mov
jbe
dec
pop
fsub
setg
into
lahf
ins
(bad)
out
pop
imul
in
out
push
lahf
repz
fisub
je
out
ins
daa
push
jl
ror
fs
into
sub
or
not
sub
jae
push
dec
inc
push
or
stos
push
inc
imul
rcr
adc
xor
or
fs
sbb
cwde
cmps
(bad)
rcl
sub
loopne
push
jbe
sbb
pop
lea
mov
pusha
adc
(bad)
push
push
fbld
aad
clc
repnz
cmp
das
sbb
fsub
mov
in
es
call
pusha
adc
inc
mov
xor
fistp
mov
jge
shl
dec
cwde
inc
jb
and
xchg
cli
test
clc
sbb
lods
jae
jo
or
pop
mov
cmps
je
pop
aaa
pop
xchg
cmps
loopne
mov
sbb
popf
mov
push
in
out
inc
repz
mov
inc
(bad)
and
and
or
xchg
xchg
ret
add
jmp
pusha
inc
bound
cmp
pop
outs
iret
fs
(bad)
fs
xchg
mov
(bad)
xor
out
dec
adc
xchg
cli
push
(bad)
sub
icebp
pop
inc
push
cmc
mov
mov
fs
outs
and
xchg
inc
inc
lahf
cmps
pop
inc
add
gs
mov
push
or
cmps
sti
jle
ds
addr16
ja
pop
outs
jae
mov
add
lods
int
push
adc
sub
aad
jno
loope
jl
idiv
outs
xor
fwait
test
addr16
lock
hlt
pop
mov
outs
sub
icebp
out
jb
and
enter
(bad)
dec
and
fstp
adc
pusha
jb
sbb
inc
popa
data16
dec
scas
pop
mov
es
fild
stos
inc
mov
add
retf
stos
jnp
or
int3
mov
fs
mov
sub
pop
movs
icebp
es
icebp
gs
or
mov
sbb
cmp
and
pop
dec
cmp
push
xor
push
inc
push
push
retf
jo
adc
pusha
js
mov
and
add
(bad)
pusha
inc
adc
jbe
xor
inc
mov
inc
sti
shl
push
cmc
pshufw
inc
aad
pop
ret
inc
push
mov
(bad)
mov
push
cwde
out
inc
jne
gs
xor
push
or
mov
cmp
pop
push
aam
pop
pop
pop
pop
sub
inc
or
jecxz
stc
repnz
add
icebp
sub
and
cmc
xchg
mov
and
sbb
movs
add
ins
test
movs
xchg
push
fs
popa
mov
mov
adc
lahf
dec
std
inc
cwde
mov
sbb
ror
outs
jg
fmul
dec
loopne
jp
lods
xchg
cmp
mov
pop
iret
pop
js
pop
ins
pop
sahf
sub
loopne
retf
or
test
cmp
cmps
in
or
pop
add
(bad)
cld
mov
aaa
jg
and
test
sub
arpl
outs
out
jl
xlat
add
lea
scas
xlat
test
jae
push
xor
push
test
cdq
push
fimul
loopne
jne
fiadd
adc
sub
ficom
outs
popa
scas
mov
test
popf
push
ret
retf
push
push
xchg
dec
adc
sbb
jns
xor
mov
cmp
sbb
retf
out
mov
mov
mov
scas
loop
cmc
ss
fidiv
xchg
fst
stc
pop
jbe
mov
scas
jno
cld
das
icebp
pop
loope
fisubr
imul
cmp
sub
enter
ja
jns
in
(bad)
lock
xchg
dec
push
call
or
push
cmp
inc
mov
push
sub
pusha
xchg
or
in
mov
(bad)
dec
imul
ret
xchg
jbe
dec
aaa
daa
add
loope
pop
jnp
fwait
push
xchg
add
add
shl
ss
(bad)
shl
inc
dec
into
add
dec
mov
cmps
aaa
or
mov
mov
add
sbb
sub
arpl
ret
retf
repz
hlt
sahf
js
mov
std
sbb
inc
xchg
jno
add
sub
sahf
loope
mov
cmp
dec
(bad)
pop
imul
pop
ds
(bad)
dec
(bad)
(bad)
sub
adc
pushf
fild
repz
jb
retf
mov
js
mov
mov
out
adc
(bad)
(bad)
jle
and
call
(bad)
sbb
mov
push
dec
rcl
xchg
xchg
ret
add
pop
mov
cmps
shl
cmc
(bad)
sbb
retf
pop
ss
dec
dec
add
mov
or
ss
fidiv
movs
imul
xchg
shl
mov
and
les
push
cmp
fisubr
(bad)
pop
stc
mov
mov
push
div
test
xchg
push
fist
push
add
inc
bound
fidiv
adc
in
mov
cs
sbb
lds
push
or
cmp
add
bound
sbb
imul
push
cmc
inc
and
mov
les
pop
xchg
sbb
and
jno
in
rol
dec
ret
xor
mov
pcmpgtd
(bad)
in
sub
lods
ins
imul
cmp
shl
push
dec
sub
dec
adc
xor
inc
xor
out
adc
push
sbb
outs
sbb
and
push
adc
jnp
enter
test
pop
hlt
jbe
mov
cmp
sbb
pusha
or
xchg
(bad)
std
pop
sbb
sti
jo
or
xor
xchg
inc
mov
ret
jp
out
inc
jge
ins
mov
mov
outs
int
rcr
xchg
arpl
mov
into
in
xchg
mov
aas
(bad)
mov
sbb
loop
dec
out
add
in
inc
mov
mov
dec
or
xchg
or
sbb
mov
stos
xor
in
cmps
adc
in
mov
inc
dec
mov
movs
test
jb
mov
xchg
push
cmp
and
daa
clc
repnz
fwait
mov
pop
mov
pop
sahf
jne
mov
pop
dec
js
or
pop
inc
out
(bad)
cmp
arpl
stc
fwait
mov
jg
test
add
add
xadd
sub
lods
mov
outs
push
push
bound
and
mov
aam
lea
(bad)
aas
scas
aam
pushw
pop
scas
loop
aad
fiadd
pop
mov
push
adc
sub
es
ins
mov
push
dec
sbb
loopne
pop
sti
mov
repnz
mov
sub
(bad)
mov
ja
(bad)
xlat
dec
aaa
xchg
sahf
fsubr
jg
ds
in
inc
cmp
xlat
pushf
mov
pushf
pushf
out
mov
outs
jge
mov
int
rcl
pop
dec
sbb
ds
adc
mov
cmp
jecxz
inc
adc
sbb
add
popf
add
add
push
imul
inc
rol
adc
jae
cmps
icebp
push
js
pop
dec
adc
loopne
imul
mov
jecxz
add
popa
clc
jo
stos
(bad)
fld
into
xor
rcr
jbe
inc
add
test
pop
dec
stos
out
dec
js
jnp
or
cli
arpl
cld
mov
enter
jg
add
xchg
sub
and
jl
jno
inc
adc
fcomip
push
jl
mov
(bad)
jo
ret
ficom
xor
push
sub
cmps
popa
iret
push
ror
ds
iret
lods
(bad)
sbb
inc
mov
imul
jp
ss
(bad)
mov
mov
pushf
aas
push
fisub
and
jbe
imul
xchg
add
fdiv
xchg
stos
inc
js
ds
sbb
mov
dec
mov
es
out
(bad)
enter
cmps
xchg
and
(bad)
mov
or
xchg
pop
ins
int3
(bad)
scas
mov
push
aad
fidivr
mov
mov
mov
jne
leave
push
or
cmp
ins
rcl
pop
pop
and
dec
ins
sub
inc
mov
sub
loope
aam
mov
dec
outs
sub
cs
pop
mov
addr16
(bad)
sbb
outs
das
inc
out
jecxz
mov
dec
imul
ss
(bad)
retf
and
xor
adc
fisubr
jae
xchg
inc
(bad)
retf
pusha
mov
adc
dec
add
xor
shl
lods
xor
dec
lods
mov
retf
pop
loope
push
cmp
scas
(bad)
fcom
xchg
mov
cmp
adc
and
push
lea
push
(bad)
out
mov
popa
ins
arpl
lods
mov
mov
mov
popa
dec
or
(bad)
popa
mov
rol
inc
inc
xchg
mov
test
push
and
sbb
scas
ret
add
sbb
lods
push
test
xor
cmp
in
inc
dec
hlt
mov
mov
sub
fmul
inc
pop
adc
stos
sub
retf
jno
sub
pop
xchg
ds
push
stos
push
ror
xor
mov
dec
add
xchg
adc
xor
clc
sub
mov
sub
scas
pop
pop
sbb
or
jb
(bad)
or
jmp
out
sub
add
out
and
lds
rcl
and
lea
cld
sub
adc
movs
lock
or
mov
cld
jge
gs
(bad)
fimul
or
not
or
daa
sub
sub
lea
adc
push
lea
(bad)
and
inc
iret
mov
or
mov
push
sub
dec
jmp
dec
inc
leave
jns
fs
xor
adc
int3
push
xor
mov
jmp
lea
retf
add
push
(bad)
lods
mov
mov
hlt
dec
add
hlt
shl
pop
inc
push
sub
cmps
cmp
loope
mov
mov
test
stc
xchg
fst
cdq
fistp
xchg
fstp
adc
mov
jb
hlt
xor
enter
dec
and
fstp
aad
or
es
pop
mov
mov
mov
mov
or
or
push
mov
sbb
jle
sbb
ja
jo
adc
pop
and
inc
(bad)
mov
xchg
idiv
mov
rcl
inc
add
xchg
mul
add
inc
fild
sub
mov
jl
lods
xchg
sbb
mov
aaa
push
daa
lea
mov
adc
das
test
jg
sar
js
xchg
call
mov
scas
dec
add
rep
jmp
cli
sbb
push
(bad)
out
jecxz
jae
js
dec
sbb
cmp
ss
into
push
or
imul
push
or
scas
mov
aas
add
mov
cmp
jnp
mov
or
jne
cmp
xchg
add
mov
psadbw
(bad)
xor
cmps
(bad)
(bad)
xchg
mov
push
jecxz
(bad)
aad
mov
lods
ret
jmp
adc
aad
(bad)
shl
sub
xor
dec
sti
sub
lods
retf
arpl
jp
call
test
dec
add
inc
mov
pmuludq
inc
mov
cmp
inc
lods
mov
mov
test
jecxz
xchg
outs
mov
adc
arpl
and
dec
ins
(bad)
jecxz
jnp
neg
add
mov
movs
loope
lea
or
xor
sbb
sbb
mov
sbb
imul
add
cmovne
push
movs
mov
rcr
adc
les
adc
adc
and
xor
mov
movs
cmp
mov
loopne
adc
test
in
mov
or
mov
sahf
mov
fdivp
push
loopne
inc
xor
rol
lods
cs
pusha
imul
(bad)
adc
cmp
add
retf
adc
adc
dec
sbb
and
sbb
mov
jle
mov
jae
jns
sub
or
mov
mov
pop
xor
cmp
les
test
cmp
into
pop
pop
aam
push
pop
fadd
xchg
sub
mov
adc
mov
test
dec
mov
repz
jns
and
sti
loope
jo
pushf
jecxz
xchg
cld
fst
inc
enter
repz
cld
push
ret
movs
mov
cli
ss
nop
fs
stos
jmp
jmp
pop
jmp
lods
scas
data16
pop
pop
movs
out
xchg
fldl2e
adc
push
enter
cld
add
xlat
xchg
ins
sub
jmp
movs
sub
cmp
sbb
add
jle
stc
fwait
mov
aas
clc
push
cmc
or
cli
mov
scas
xchg
leave
and
push
(bad)
lods
cdq
pop
movs
push
push
arpl
xchg
(bad)
repz
xchg
and
retf
jg
fistp
xor
push
and
or
xor
repz
dec
pushf
mov
jb
dec
cs
sub
dec
into
ret
xor
mov
dec
dec
int3
and
push
pop
mov
inc
cmp
cmp
lods
mov
daa
stc
pushf
cwde
xor
out
cwde
pop
fsubp
js
xchg
cmc
xchg
jne
stos
sti
daa
retf
retf
pop
cmp
stos
jp
mov
mulps
add
jl
dec
sub
xchg
bound
cmps
add
add
push
pushf
icebp
cmp
inc
into
xchg
or
cli
jno
xchg
xor
repnz
fmul
pop
test
mov
sub
xor
sbb
inc
stos
icebp
mov
or
arpl
in
add
mov
and
jge
iret
iret
jbe
loopne
sahf
and
push
call
jne
nop
push
fistp
jge
shl
retf
jp
or
mov
repnz
push
call
jl
mov
lahf
xor
mov
rcl
mov
cmps
dec
(bad)
(bad)
mov
push
ret
mov
lea
sti
(bad)
in
(bad)
pop
xchg
rol
sbb
loop
(bad)
cdq
clc
arpl
xor
(bad)
out
mov
out
jo
jg
dec
mov
pop
out
adc
inc
call
adc
sbb
hlt
shr
je
aas
mov
aaa
ja
ret
shl
jecxz
(bad)
cmp
mov
or
icebp
repnz
jl
mov
lahf
into
scas
shr
sbb
pop
mov
call
xor
push
imul
fucomp
bound
sbb
adc
sbb
dec
(bad)
cld
out
inc
add
popf
ds
adc
add
cmp
mov
xor
push
adc
xor
add
push
xor
ret
mov
sbb
mov
cdq
mov
mov
popf
pushf
sbb
dec
icebp
cmc
push
mov
std
push
shr
js
fs
(bad)
lea
xor
jbe
hlt
pop
and
mov
mov
mov
mov
mov
mov
pop
sub
sub
mov
stos
add
xlat
shl
imul
push
add
cli
sbb
sub
and
inc
fs
retf
js
mov
stos
nop
aas
dec
xchg
inc
adc
cmp
mov
xchg
popa
push
jns
cmc
in
push
xchg
gs
push
leave
mov
add
or
or
dec
movs
inc
lahf
sbb
popa
sbb
mov
xchg
rol
ss
xchg
mov
xchg
sbb
push
jo
xchg
or
adc
stos
enter
ret
popa
pop
out
cmp
gs
aad
in
cmps
outs
or
mov
mov
sbb
inc
icebp
add
test
xchg
sub
inc
xchg
adc
or
nop
mov
fild
dec
jp
xabort
popa
cmp
adc
and
pop
and
adc
daa
mov
mov
ret
out
adc
stos
or
in
sbb
sti
imul
fimul
mov
mov
mov
popa
or
std
inc
ss
fnstsw
scas
sbb
jo
int3
test
inc
dec
add
repz
(bad)
sar
fyl2xp1
fwait
mov
jg
add
dec
mov
and
sub
outs
stos
aad
push
stos
(bad)
stos
push
jb
push
sub
in
pop
stos
nop
adc
scas
xchg
or
loopne
add
bound
pushf
xor
mov
idiv
inc
loop
dec
adc
in
out
jecxz
test
loopne
dec
add
dec
int3
js
cdq
and
dec
test
and
push
cmp
sub
pop
das
pop
and
dec
jmp
mov
in
in
lods
into
ins
sub
mov
clc
mov
xor
jmp
jae
xchg
repz
sub
pop
sub
xor
lods
mov
and
test
cmp
ffreep
stos
lock
aad
push
xor
xor
es
jl
push
inc
fwait
je
lods
(bad)
mov
mov
jecxz
pusha
sbb
je
mov
push
pop
mov
jge
pusha
js
or
jns
sub
pop
clc
hlt
js
imul
jmp
call
repnz
xchg
les
add
std
cmp
pop
imul
popa
out
inc
adc
xchg
adc
cmp
and
mov
push
lods
(bad)
out
mov
fmul
into
xchg
rcr
cdq
xor
fwait
out
(bad)
cli
in
pop
fimul
fwait
push
shufps
shl
aad
int3
pop
adc
jo
sub
xchg
push
(bad)
sbb
out
add
in
imul
push
into
cmps
test
es
or
retf
xor
test
inc
push
loop
test
aad
push
jno
std
and
pop
aaa
sbb
dec
add
mov
iret
movs
push
add
vpaddq
pop
aam
or
jp
(bad)
xchg
push
dec
mov
pop
inc
sub
scas
mov
lea
mov
sub
ja
sbb
mov
cmp
jmp
mov
or
pop
mov
cld
popf
ror
xlat
or
pop
cmc
mov
add
mov
sub
or
fnstcw
icebp
jb
adc
and
mov
(bad)
ret
pop
or
sub
mov
xchg
loopne
mov
enter
js
adc
call
jle
push
sbb
or
push
jl
pop
cmp
push
or
mov
cwde
push
(bad)
pop
xor
pusha
js
sub
xor
sub
xor
bound
sub
pop
imul
push
pop
pop
cmp
push
pop
jns
sbb
int3
jne
xchg
add
cld
leave
add
mov
shr
das
jp
lock
add
pop
xchg
adc
lea
push
push
xor
xchg
dec
push
pop
push
into
adc
xchg
jp
sub
push
std
sbb
mov
cmp
or
sbb
pushf
scas
dec
adc
xchg
sub
cdq
or
aad
dec
or
cmp
add
imul
adc
xor
push
pop
(bad)
fxch
mov
or
arpl
cmps
into
repnz
pop
cld
cmp
cmps
and
mov
pop
popa
add
cmp
inc
inc
jbe
pop
shr
fdiv
push
leave
pop
scas
cmps
push
pop
ins
bound
in
jae
int
(bad)
mov
int3
(bad)
int
push
push
int
mov
movs
xor
hlt
add
xor
stc
js
std
cli
inc
adc
inc
fcom
sahf
push
adc
or
outs
or
sbb
retf
into
(bad)
mov
out
out
dec
iret
(bad)
aas
test
and
pop
movs
push
dec
sub
jb
movs
xchg
inc
inc
dec
movs
mov
aam
dec
sub
cmp
and
xor
pushf
test
adc
adc
dec
add
call
loop
jne
shl
push
adc
out
xor
pop
sub
sbb
mov
into
push
outs
retf
pop
xchg
adc
adc
outs
mov
push
push
cmp
xor
xlat
inc
into
cmps
(bad)
je
sar
add
outs
dec
sub
jg
cmp
jb
mov
out
ss
mov
in
leave
mov
cmc
popa
mov
pop
sub
push
ins
div
pusha
lea
mov
popf
xchg
aas
xlat
sbb
xor
call
dec
push
jb
mov
fisubr
ins
push
mov
inc
iret
lods
xor
fwait
pop
repz
xchg
pop
sbb
jne
lock
xchg
ds
mov
popa
xor
xchg
sti
stc
sbb
in
aaa
lock
fcomp
inc
sbb
mov
add
adc
jg
or
les
std
nop
(bad)
(bad)
cmp
xor
(bad)
mov
cli
icebp
adc
xlat
fwait
mov
fwait
and
test
pop
cmp
jecxz
mov
dec
rcl
(bad)
ja
pop
out
movs
popa
fdivr
ja
mov
sbb
imul
xchg
cmp
push
inc
mov
add
mov
xor
inc
or
mov
lock
mov
adc
add
cmp
push
rol
cmp
dec
fdivr
xor
push
loopne
mov
mov
lods
popf
sub
es
lds
ret
lea
xor
cmp
imul
ror
pop
jae
push
(bad)
push
nop
aam
xor
mov
(bad)
icebp
jne
xor
retf
cmc
add
fstp
xchg
or
mov
jmp
loopne
test
mov
(bad)
dec
sahf
push
push
cmp
mov
inc
jne
inc
inc
popf
or
sub
aaa
(bad)
mov
outs
sbb
jecxz
mov
enter
sub
xchg
enter
pop
xlat
pop
add
mov
mov
(bad)
call
ret
or
imul
cmp
test
hlt
shr
ret
inc
dec
rcr
jmp
ja
mov
and
popa
adc
jecxz
adc
xor
mov
retf
sbb
in
retf
fcmovbe
pushf
add
push
repnz
pop
nop
dec
add
xchg
add
mov
dec
mov
(bad)
pop
sub
cmc
and
pop
outs
stos
ret
or
sbb
sbb
shl
jge
not
push
pusha
jg
or
addr16
ins
stos
stos
ret
cmp
push
gs
or
(bad)
or
jp
ins
lods
(bad)
jns
pop
mov
aaa
mov
les
or
cmc
add
in
cmp
sub
sahf
add
push
imul
sbb
in
xor
aaa
pushf
leave
mov
or
int3
mov
(bad)
or
cmps
mov
fnstcw
mov
fs
retf
stos
(bad)
sub
push
aam
jno
mov
fld
mov
(bad)
fmul
mov
pop
outs
outs
sub
(bad)
pop
outs
(bad)
(bad)
pop
test
and
push
leave
mov
pop
pop
int
push
dec
ins
and
rol
adc
lods
mov
test
mov
aaa
jmp
stos
adc
sar
fist
mov
adc
inc
and
pushf
cld
sar
pop
xchg
or
mov
retf
imul
pusha
mov
(bad)
push
jp
outs
outs
popa
sub
cwde
jmp
dec
add
adc
inc
test
pushf
lods
dec
or
fs
popf
fnstcw
mov
dec
add
dec
leave
fst
pop
push
pushf
pop
movs
and
adc
cdq
ret
outs
imul
jmp
in
ficomp
imul
ins
mov
scas
dec
push
jbe
push
push
xor
jbe
stos
cli
sar
cmp
cdq
das
jnp
pushf
mul
pop
inc
out
cmp
mov
xchg
jns
cmp
imul
into
jmp
and
dec
push
ret
inc
jle
dec
leave
movs
jg
(bad)
mov
push
ins
push
shl
mov
sbb
gs
pop
cli
jmp
or
inc
adc
cmp
(bad)
out
cld
neg
rol
push
cmp
cmp
pop
xor
fld
test
cwde
cmp
adc
push
clc
jmp
xor
(bad)
pop
out
mov
jg
mov
cmp
(bad)
(bad)
jae
pop
pusha
addr16
out
shr
ja
push
shl
add
lods
sbb
sub
push
icebp
test
jecxz
(bad)
sbb
popf
sub
mov
loopne
popf
xchg
sahf
(bad)
test
mov
jo
mov
pop
daa
(bad)
cmp
outs
push
fcomp
add
lods
lahf
mov
sbb
cmp
sbb
loop
mov
(bad)
mov
je
dec
push
sub
cmp
aad
add
cwde
xlat
stos
cmp
jecxz
popa
je
adc
cmp
sbb
vmovsd
mov
sbb
lea
pusha
stos
inc
jae
adc
dec
sbb
scas
cmp
movs
sub
dec
shl
aas
push
ins
push
mov
mov
test
outs
mov
jns
xchg
and
rol
loopne
push
push
out
push
(bad)
int
fwait
and
push
rcr
mov
call
outs
dec
sub
mov
and
jae
clc
pusha
push
push
ja
or
(bad)
in
outs
enter
add
mov
xor
mov
jne
mov
pop
pop
lods
mov
cmps
xor
and
jne
cwde
in
pushf
jno
inc
push
push
jb
sub
jo
pop
(bad)
cdq
loopne
dec
add
outs
cmp
test
inc
fsubr
std
int
cs
mov
push
sbb
mov
icebp
ss
xchg
sbb
(bad)
in
push
mov
ret
mov
xchg
xor
mov
cmp
cs
adc
pop
xor
ret
mov
enter
cs
sbb
test
mov
call
stos
outs
mov
stc
movs
mov
jmp
fcom
xor
mov
dec
xor
gs
div
into
inc
js
fld
mov
mov
div
xchg
cmp
in
loopne
pop
imul
pop
scas
ins
and
jnp
inc
mov
xchg
mov
aas
(bad)
lea
inc
and
xchg
arpl
push
or
jmp
fsub
gs
(bad)
ficomp
(bad)
icebp
jmp
iret
std
fild
and
cld
push
sub
dec
es
inc
dec
push
adc
in
test
xchg
ror
inc
rcl
inc
in
test
pop
mov
add
xchg
or
cwde
test
push
xor
aas
faddp
(bad)
in
pop
mov
adc
into
push
mov
into
dec
addr16
xor
rep
aam
into
ret
mov
rcr
ficomp
(bad)
or
push
jb
pusha
pop
retf
jae
pusha
mov
popa
cmp
xchg
and
inc
dec
and
out
inc
mov
push
adc
mul
retf
adc
jmp
mov
sub
jnp
push
pop
mov
in
mov
adc
xor
mov
sub
lods
lock
lea
fsub
pushf
jge
enter
outs
rcl
inc
sahf
ret
sbb
jmp
imul
mov
dec
add
inc
in
aas
mov
mul
(bad)
lock
into
sbb
dec
imul
adc
inc
push
aaa
xor
mov
cmps
xlat
popf
ret
mov
js
jmp
scas
into
and
ret
gs
mov
cmps
das
xchg
add
ret
fstp
fdiv
jg
(bad)
dec
out
lea
lods
mov
mov
sbb
jo
sti
sub
pop
cmp
pop
test
(bad)
outs
mov
into
(bad)
push
ss
ret
out
js
mov
jne
sub
sbb
mov
cmp
out
scas
imul
adc
cmps
loop
(bad)
sbb
jecxz
je
das
pushf
pop
fstp
mov
dec
shl
pop
int3
push
cli
popa
dec
and
inc
and
mov
mov
shr
je
mov
loope
shl
inc
or
jmp
cmps
lock
in
in
outs
fidiv
dec
lahf
das
ficom
jbe
pushw
mov
sbb
cli
sub
ret
test
cmp
ins
sahf
mov
std
push
mov
(bad)
int
into
int
sub
adc
adc
cs
clc
out
(bad)
ds
inc
aaa
inc
push
jnp
xchg
cmps
jle
add
stos
jbe
push
pop
ror
ror
sub
xchg
push
fist
jecxz
pop
mov
add
xchg
xor
jmp
cmp
enter
iret
xchg
aaa
rol
add
or
inc
xor
movs
lahf
out
sbb
add
pop
xchg
nop
aaa
lds
iret
push
push
pop
cmp
dec
cmp
lock
mov
cmp
xchg
jecxz
pushf
sbb
jb
outs
inc
loope
inc
lea
add
push
cmp
push
(bad)
arpl
cmp
and
jle
xchg
add
mov
push
xchg
dec
and
nop
pop
cmp
sub
ins
cmp
jecxz
(bad)
mov
call
test
test
outs
ins
and
iret
adc
aaa
mov
in
jne
retf
push
aad
pop
lahf
(bad)
dec
cmc
mov
mov
in
push
xchg
mov
pop
pop
mov
fcmovnu
dec
out
cmp
sub
jne
xchg
ds
out
(bad)
cmp
push
icebp
out
loop
js
vaddsd
aad
jp
repnz
adc
adc
jmp
(bad)
int
xchg
sbb
pop
mov
jbe
stc
jmp
add
or
cld
repz
jg
jle
stc
fwait
mov
sub
fsub
(bad)
enter
aam
adc
adc
cmp
js
cmc
dec
sub
adc
xchg
dec
pushf
mov
popa
lods
sub
fwait
cdq
xchg
jae
push
std
xchg
push
bound
cli
sub
jb
out
shr
jno
cmp
aad
js
dec
(bad)
fadd
inc
addr16
outs
test
xchg
pushw
dec
cmps
nop
dec
jb
jecxz
sbb
lods
ins
stc
fisttp
(bad)
mov
imul
scas
sbb
push
inc
std
jmp
cmp
adc
aas
(bad)
adc
repz
and
adc
retf
int
mov
adc
test
sbb
add
sahf
fcmove
xchg
xor
mov
loope
dec
adc
jp
daa
ins
int3
mov
jmp
adc
xchg
add
dec
aad
mov
mov
hlt
add
scas
inc
(bad)
(bad)
enter
clc
jp
out
outs
sub
out
jns
xor
push
jecxz
push
rcl
das
adc
sti
pop
and
addr16
cmp
cld
out
jle
mov
and
cmp
mov
dec
inc
fwait
mov
clc
js
pop
outs
into
jecxz
mov
repz
jnp
outs
out
in
cwde
aas
adc
cmps
push
call
shl
leave
inc
cli
xor
xor
pop
mov
(bad)
mov
jecxz
fs
pop
inc
pop
mov
mov
xor
jo
in
lods
inc
adc
rcl
add
adc
std
adc
(bad)
adc
aas
cwde
test
cmps
dec
mov
adc
xlat
mov
mov
mov
dec
lods
call
outs
(bad)
into
(bad)
pop
repz
pusha
push
pop
cmp
jl
mov
or
aam
add
stos
mov
mov
retf
ins
xchg
test
jecxz
ins
mov
cmp
fnstsw
rcl
pop
mov
data16
inc
pop
adc
cli
loop
int3
pop
clc
mov
sub
scas
sbb
popa
stos
cld
iret
int
push
cs
pop
ins
inc
xor
sbb
pop
lahf
into
int3
inc
icebp
in
movs
js
outs
add
push
popa
cwde
rcl
or
pusha
pop
fst
pop
fdiv
push
clc
pop
popa
push
mov
iret
dec
add
ret
xchg
(bad)
push
das
add
adc
push
iret
add
cmp
jecxz
mov
sbb
jmp
fst
jp
jno
shl
enter
das
mov
sbb
popa
cwde
cmps
inc
not
fst
mov
ret
sti
pop
adc
not
cmp
lock
test
dec
mov
test
or
fidivr
adc
data16
fcomp
push
sbb
cmp
mov
mov
idiv
mov
in
out
mov
in
lock
push
scas
fcmovu
loopne
pushf
adc
cmp
mov
mov
ins
stos
addr16
cmp
dec
push
fmul
pushf
adc
jno
mov
std
add
repnz
add
aad
div
push
gs
push
gs
push
gs
push
jge
imul
lods
mov
stc
mov
outs
loop
fisubr
in
dec
das
ja
ret
inc
jg
(bad)
data16
cmp
lahf
aam
xchg
outs
xchg
push
jae
inc
inc
jbe
lahf
jecxz
add
cld
bound
rcl
mov
cmp
dec
js
icebp
int3
ficomp
jp
jmp
iret
repz
in
fisttp
gs
(bad)
(bad)
mov
xchg
push
mov
mov
cs
sbb
push
or
cmps
adc
inc
loopne
(bad)
(bad)
retf
jne
inc
cmps
xchg
icebp
xchg
pop
loopne
out
(bad)
repz
clc
mov
and
dec
and
into
rol
cdq
push
clc
fwait
retf
adc
in
jbe
or
pop
or
sub
mov
(bad)
or
(bad)
push
outs
mov
pop
pop
ror
repz
rcl
iret
iret
mov
mov
xor
rcl
cwde
and
inc
mov
sbb
cmc
push
lods
cmps
jmp
fisub
push
mov
ret
or
inc
jecxz
add
mov
add
movs
push
jbe
sub
cmp
out
fs
fs
cmp
ss
add
lahf
call
xor
inc
shr
enter
clc
js
out
scas
sub
scas
les
cmp
fisttp
mov
cwde
sbb
enter
add
and
ror
jl
jb
imul
sar
push
cmp
mov
outs
out
sbb
and
xchg
push
cmp
loop
mov
push
inc
mul
lahf
fadd
imul
ror
pop
mov
(bad)
mov
ja
ror
and
mov
sub
push
xlat
push
lock
shl
mov
sbb
mov
popf
sub
xor
ror
icebp
mov
in
fwait
sub
(bad)
loope
jmp
das
pop
mov
sti
loope
jb
sbb
in
xor
sti
jecxz
(bad)
sub
cmp
(bad)
mov
ficom
adc
mov
mov
pop
fdivr
(bad)
mov
inc
cwde
sbb
add
pushf
rol
inc
inc
pop
or
popf
fsubr
(bad)
cmp
int
dec
scas
or
jp
pop
cwde
mov
jmp
add
addr16
jb
or
enter
(bad)
popa
mov
xchg
lock
les
aas
cmp
js
add
dec
into
ret
ss
fsub
arpl
pop
int3
lods
adc
mov
adc
sbb
mov
ret
enter
jne
sbb
xor
push
and
push
arpl
imul
sbb
jp
mov
jg
and
loope
sbb
add
lds
xor
adc
push
clc
cmp
sub
fwait
icebp
jmp
outs
test
ret
rol
or
test
in
push
scas
cmps
fistp
and
add
adc
rcr
setge
fidiv
lock
enter
ret
int
mov
scas
or
lds
cmps
inc
pop
sbb
mov
sbb
mov
aaa
pop
ins
imul
ficomp
mov
sub
out
call
jecxz
out
not
repnz
mov
dec
mov
popf
lods
adc
mov
fst
or
loope
mov
js
in
push
mov
mov
aas
hlt
repz
scas
test
jbe
test
inc
inc
(bad)
push
mov
lods
daa
push
add
lock
js
xchg
or
les
cwde
shl
sti
xchg
add
rcl
xchg
jg
dec
cld
out
shr
jg
xlat
inc
div
sub
shr
sub
mov
sbb
mov
jmp
and
and
cli
add
or
enter
add
gs
and
das
adc
(bad)
cdq
sub
repnz
dec
outs
cmps
loop
int3
adc
(bad)
dec
mov
cmp
sbb
dec
int
sub
js
cmp
stc
fiadd
adc
pop
and
cmp
in
aas
bound
std
test
sar
xor
outs
cwde
les
xor
popa
movs
xchg
mov
outs
xchg
push
ret
cmp
push
push
inc
sti
lods
push
mov
aas
add
(bad)
lock
xchg
and
cmp
mov
lock
out
daa
jns
jmp
mov
cmp
mov
xchg
fist
jmp
(bad)
out
mov
sar
clc
sub
sub
push
ja
sub
sbb
stc
loope
fdivr
ins
(bad)
mov
jl
hlt
pop
jb
pop
inc
test
js
jnp
pop
nop
adc
mov
iret
(bad)
sahf
add
mov
mov
popa
jmp
pop
pop
cmp
je
cli
jns
jo
stc
js
ficomp
popa
leave
call
or
mov
xor
mov
stos
push
sub
rol
dec
pop
lods
push
mov
or
sbb
xchg
jne
mov
xor
shl
sub
mov
and
jae
arpl
cmp
sub
sub
push
fmul
and
cmp
pop
xor
jmp
xchg
out
pop
adc
push
jns
or
or
mov
inc
xchg
scas
push
add
(bad)
clc
aas
or
stos
dec
add
ficom
aad
add
sub
or
cli
and
ins
mov
test
lahf
(bad)
cwde
mov
cmps
cmps
loop
fldl2t
js
ins
xor
pushf
sahf
or
out
loope
mov
push
rcr
and
jle
data16
sub
mov
inc
xchg
or
in
aas
or
mov
push
ins
inc
movs
(bad)
sti
add
in
mov
or
pusha
ins
push
cli
dec
push
inc
fimul
adc
adc
data16
int3
and
mov
push
dec
outs
dec
popf
cmp
mov
and
and
push
push
call
repnz
push
xchg
pushw
sub
add
pop
jle
or
and
shl
ret
mov
xchg
xor
ss
sti
or
sti
mov
xchg
(bad)
cmc
cs
dec
add
jbe
loope
pop
or
mov
dec
fs
jecxz
mov
iret
mov
cmp
daa
mov
xor
stos
mov
mov
aad
jae
pop
adc
call
sub
out
movs
sub
in
leave
out
popa
addr16
(bad)
fnstenv
(bad)
xchg
sub
(bad)
(bad)
retf
pop
in
into
repnz
jns
stc
jecxz
(bad)
cld
leave
movs
aam
dec
push
in
xor
jnp
out
out
scas
call
into
pop
xchg
imul
mov
dec
add
clc
out
and
and
add
(bad)
sub
rcl
(bad)
ins
cld
inc
xchg
add
adc
mov
scas
mov
mov
jbe
out
lea
mov
imul
mov
scas
push
sbb
icebp
rcr
call
retf
fwait
push
mov
xor
sbb
or
pop
adc
sbb
data16
ins
hlt
sbb
lods
push
jmp
push
dec
into
ficomp
cwde
sub
or
ja
aam
fstp
pop
jmp
js
rol
jmp
adc
fdiv
scas
dec
in
fiadd
hlt
idiv
mov
fst
pop
cli
icebp
jns
ret
pop
inc
loope
mov
ret
xor
call
std
scas
xor
push
jl
push
loope
push
push
iret
daa
rol
cmc
es
dec
adc
out
add
mov
cmps
rcl
dec
sbb
(bad)
sub
jno
pop
mov
out
jl
cmp
cmp
jp
push
int3
mov
mov
push
call
call
ins
mov
sbb
jl
pmulhuw
push
loope
cdq
or
fidivr
or
addr16
cmc
repnz
(bad)
jns
jns
jg
not
loope
sbb
mov
int3
int3
mov
pop
xchg
gs
sub
int3
int3
int3
int3
int3
int3
int3
xor
adc
dec
in
cmp
les
arpl
mov
cwde
cdq
and
cmp
out
sahf
jge
ds
ja
dec
dec
jne
jne
lahf
mov
stos
cli
adc
mov
stc
sbb
mov
std
popf
test
inc
mov
sub
pop
stos
xchg
xor
test
and
(bad)
cmps
dec
mov
jne
aam
sbb
push
test
les
xchg
dec
dec
rcr
fdivr
rol
cmp
adc
mov
loop
inc
add
add
inc
jmp
sub
or
into
xchg
ret
aas
cmp
xchg
jno
xor
mov
loopne
in
mov
loope
adc
sti
mov
cmp
(bad)
dec
sbb
fimul
arpl
movs
jo
mov
add
xor
xchg
adc
push
mov
xchg
inc
add
sub
jno
add
add
push
ficomp
cmp
shr
fmul
outs
xor
sbb
shr
movs
mov
(bad)
mov
ret
and
div
loopne
pop
sbb
loope
adc
push
loopne
or
cdq
mov
popf
dec
xor
imul
retf
pop
imul
cmps
add
xchg
xor
and
sar
fs
ds
xchg
rcl
retf
cmp
xchg
sbb
and
mov
ds
aaa
in
sbb
adc
fsub
mov
pushf
repnz
iret
loopne
xchg
mov
fwait
loope
aaa
push
add
jmp
fist
outs
or
adc
mov
pop
xor
cld
sbb
nop
rcl
jb
add
pushf
push
sbb
jo
inc
adc
std
sbb
and
jg
cwde
bswap
mov
or
arpl
and
ja
mov
xor
lds
rcl
and
aaa
lods
xchg
pop
call
pop
into
jle
mov
bnd
mov
sti
cmp
movs
test
stos
mov
out
xor
dec
mov
div
sub
ins
mov
jg
ror
cmc
mov
adc
add
sti
data16
div
jmp
sub
out
ja
(bad)
lahf
scas
loopne
aas
pusha
retf
arpl
ret
xlat
gs
push
ret
and
clc
sub
stc
sbb
add
nop
(bad)
push
pop
(bad)
bound
mov
push
lock
lock
pop
aad
jg
jg
cld
ret
lea
(bad)
mov
cmp
fs
cmc
cmp
inc
jb
xchg
stos
adc
add
dec
add
sub
and
sub
push
adc
pop
xchg
adc
pop
and
pop
xchg
adc
popa
xchg
loopne
test
mov
retf
sub
push
bound
(bad)
call
imul
repnz
mov
sub
mov
push
mov
inc
fdiv
loop
mov
xchg
ficom
mov
arpl
es
dec
mov
popf
repz
dec
push
fmul
push
jnp
das
pop
in
cmc
std
je
mov
retf
pop
out
out
inc
push
cmp
std
fild
(bad)
repz
js
pop
push
dec
daa
gs
test
or
push
inc
jnp
inc
loopne
pushf
cmp
test
inc
loop
add
out
loop
add
xor
repz
icebp
test
add
or
(bad)
fld
lock
jle
and
sbb
scas
loop
test
mov
lea
and
retf
pop
dec
loope
nop
xchg
mov
(bad)
cmova
in
xchg
js
lock
lahf
(bad)
jecxz
lahf
jecxz
cmc
adc
repz
(bad)
stc
inc
jl
sar
(bad)
xlat
jecxz
ja
ds
rcl
ret
xchg
(bad)
push
in
jmp
mov
mov
sub
data16
jnp
sub
test
loopne
dec
pop
or
pushf
(bad)
adc
add
adc
xchg
cmp
stos
pop
fidiv
add
(bad)
in
xor
out
mov
aad
ins
jl
xchg
or
sbb
pop
je
std
aaa
xchg
clc
outs
mov
jecxz
(bad)
sbb
mov
jno
out
pop
int3
les
ins
mov
aad
fwait
adc
push
arpl
adc
js
xor
xchg
adc
xchg
and
mov
xchg
dec
jns
rcl
mov
loop
call
int
xchg
fistp
jecxz
inc
xor
dec
shl
add
inc
adc
(bad)
lock
aaa
jo
push
mov
aad
pop
test
cmp
mov
inc
xor
or
ins
adc
adc
push
lods
xchg
inc
xchg
or
push
xor
mov
cwde
jb
(bad)
pop
cld
shl
sbb
pop
mov
inc
inc
call
iret
mov
cld
jne
adc
lods
movs
pop
pushf
mov
mov
mov
fwait
cmps
cmc
ja
ret
int3
cmp
dec
movs
imul
out
adc
in
adc
jnp
loopne
sbb
pushf
out
and
retf
and
ret
ds
or
dec
ret
adc
xchg
shr
xorps
pop
mov
test
mov
loop
std
cmp
out
daa
mov
sub
adc
repz
jae
or
scas
bound
and
mov
repnz
dec
sbb
das
hlt
sub
pop
test
adc
pop
enter
enter
enter
enter
mov
test
or
mov
mov
mov
sti
add
jp
mov
imul
pop
ret
xor
dec
pop
mov
pop
mov
push
dec
push
(bad)
mov
xor
dec
sti
dec
push
cmps
fs
popa
jl
clc
sbb
xor
push
xchg
and
sahf
inc
add
mov
inc
cld
sbb
aaa
(bad)
sti
jo
mov
lahf
ret
xchg
jno
jne
inc
cmp
inc
aaa
es
pop
pop
lods
sbb
pop
(bad)
fcmovnu
xor
stc
xor
sub
dec
dec
pop
mov
std
fild
out
js
mov
int3
into
pop
ror
or
pop
cmps
xor
loope
pop
pop
push
xchg
pushf
sbb
adc
cmps
xor
sahf
dec
jbe
adc
stc
cmp
cdq
pop
push
dec
outs
outs
cmp
sbb
inc
fisttp
out
test
jmp
pop
outs
fidiv
xchg
icebp
lock
retf
and
stc
xor
test
mov
and
pop
pop
inc
adc
clc
pop
cmp
xor
es
mov
or
cmp
cmc
dec
push
jle
adc
adc
in
add
mov
sbb
cdq
shl
das
rol
pcmpgtd
dec
es
xchg
push
jne
sbb
sub
mov
pop
mov
mov
or
movs
aam
jno
ja
loop
and
jp
xor
call
(bad)
(bad)
xchg
jnp
nop
nop
inc
es
or
repnz
imul
xor
ins
lods
sub
fdiv
pop
sbb
xor
in
jg
(bad)
in
cld
stos
in
and
push
pop
inc
dec
inc
mov
cs
xchg
rcl
nop
pop
data16
(bad)
mov
movs
movs
mov
dec
push
push
dec
pop
dec
pop
xchg
xor
test
dec
push
push
add
inc
pop
mov
push
pushf
(bad)
and
jmp
xor
adc
jg
popa
adc
bound
das
das
test
or
lahf
ror
leave
inc
mov
ins
sbb
das
xor
push
test
bnd
adc
inc
push
pop
dec
pop
dec
dec
inc
pushf
sub
daa
and
movs
mov
mov
dec
nop
and
test
dec
ds
mov
sub
cmp
mov
jle
enter
lods
aaa
(bad)
mov
pop
fild
jl
and
or
out
push
(bad)
jmp
add
dec
es
icebp
outs
pop
cmp
ins
add
sub
and
xchg
sub
fucom
shl
addr16
imul
add
push
(bad)
(bad)
push
jno
jecxz
movs
cmp
mov
mov
sbb
push
repnz
mov
push
inc
cmp
and
call
(bad)
xor
bound
jle
clc
adc
jno
or
mov
jecxz
int
or
loope
lahf
pop
loope
aad
jno
fcom
call
lds
sbb
add
(bad)
es
jbe
sub
xchg
popa
cmps
and
add
push
shl
push
xchg
inc
sar
add
mov
hlt
push
mov
jl
(bad)
(bad)
add
test
pusha
sbb
add
mov
push
aas
ins
stos
shl
maxps
fs
outs
adc
sbb
or
add
pushf
sbb
inc
adc
jmp
adc
mov
mov
adc
sub
pop
test
pop
mov
cmp
jg
xor
add
and
push
jg
ss
or
movs
test
pusha
mov
loopne
je
into
je
loopne
ja
mov
xchg
push
mov
out
iret
ret
mov
jns
jno
test
aam
ficom
add
pop
sar
loopne
mov
pop
pusha
enter
scas
data16
xor
push
push
(bad)
rcr
aad
push
pusha
test
add
jg
inc
lods
sbb
ja
loop
into
jo
ds
inc
push
into
rcl
pusha
rcl
scas
mov
sbb
and
jae
(bad)
fld
fadd
cmp
mov
mov
and
push
enter
adc
or
pop
icebp
lahf
(bad)
jns
inc
retf
dec
loopne
jb
mov
lock
push
mov
inc
add
add
inc
xor
mov
rol
icebp
or
cmps
std
adc
sub
xor
sbb
loopne
dec
push
sahf
adc
and
loope
sub
add
das
push
(bad)
out
xor
cmp
mov
cmps
or
sbb
fmul
cdq
js
inc
add
dec
inc
push
lods
sub
adc
test
(bad)
xor
aad
int3
bound
add
lock
in
not
pop
cmp
ins
mov
leave
dec
in
xor
jns
mov
out
sbb
add
inc
add
(bad)
iret
dec
push
fimul
add
xchg
sub
xchg
dec
loop
inc
loope
add
bound
mov
inc
and
pop
lock
jmp
fcomip
fist
push
mov
mov
lods
mov
xchg
ja
pop
and
pop
pushf
lods
icebp
dec
add
int
sub
enter
xlat
push
ss
mov
jge
or
neg
ins
lahf
data16
daa
int
inc
xchg
mov
mov
sbb
xor
jns
and
push
add
pop
xor
add
or
inc
inc
dec
loop
adc
cmp
cmp
xchg
cmp
loop
cld
sub
inc
dec
adc
inc
sub
or
sub
push
repnz
ins
jle
mov
cmps
mov
(bad)
xor
icebp
mov
fisttp
xor
movs
sub
mov
push
fidiv
dec
das
inc
repnz
cli
imul
stc
push
lahf
or
sub
(bad)
pop
fsubr
js
inc
scas
lods
dec
or
test
or
mov
add
sti
cmp
add
adc
jle
pop
push
not
add
xchg
add
popa
jno
sbb
mov
sbb
outs
(bad)
retf
pop
cmp
enter
cmp
and
and
jo
inc
xor
inc
cdq
mov
nop
mov
adc
call
jecxz
out
and
in
jle
cmp
dec
inc
push
pop
ja
and
cmp
sbb
xor
loope
jge
ret
inc
push
clc
jo
pushf
ins
inc
mov
push
push
add
add
jbe
in
xor
adc
test
jb
jg
add
add
dec
add
adc
cld
shl
add
add
or
adc
pop
and
and
adc
sub
aas
ins
stos
(bad)
neg
retf
icebp
fnsave
push
(bad)
jae
jns
xor
mov
dec
mov
sti
outs
mov
xor
pop
cmp
xchg
mov
fcomp
outs
ret
add
fcom
fcom
rcr
cdq
pop
mov
push
adc
mov
cmp
movs
loope
(bad)
mov
add
jecxz
mov
cld
mov
add
inc
mov
lds
and
(bad)
jecxz
test
add
xlat
jecxz
popf
daa
xchg
or
add
adc
lods
inc
scas
xchg
sbb
mov
jmp
ds
push
mov
mov
mov
(bad)
pushf
fwait
add
into
and
jb
shl
ja
and
ficom
sbb
add
sbb
std
mov
sbb
jnp
mov
pop
or
sti
enter
loope
cmp
pop
dec
repnz
pushf
xor
mov
arpl
xor
inc
in
inc
jns
xchg
lock
scas
cdq
popa
(bad)
sbb
lahf
push
(bad)
mov
dec
into
mov
adc
add
js
es
and
aas
dec
out
loope
mov
jecxz
outs
push
jl
adc
ret
mov
pop
test
test
and
stos
add
cmp
xchg
ret
inc
jl
iret
ret
pop
fdivr
add
dec
or
and
lea
imul
mov
add
data16
or
mov
pop
adc
and
into
xchg
xchg
jns
retf
ret
cmp
ret
ret
sti
enter
ja
jecxz
jg
mov
out
xor
(bad)
jb
outs
rol
or
(bad)
lahf
movs
test
sbb
jne
lods
push
jae
dec
div
data16
sub
ret
mov
cmp
or
cwde
pusha
inc
inc
daa
cdq
and
sbb
inc
(bad)
mov
xor
mov
popa
pop
pop
sbb
cwde
mov
mov
test
retf
or
dec
pop
or
mov
dec
retf
inc
sbb
pop
fnsave
mov
push
aaa
mov
sbb
dec
sar
jecxz
imul
aaa
xor
or
(bad)
shl
(bad)
mov
ret
les
pop
pop
inc
sbb
shl
pop
pop
ss
ss
push
es
ror
in
xchg
xor
pushf
mov
cmp
xor
fs
aaa
mov
cmp
test
je
or
in
popf
cmp
aaa
lahf
add
cmps
fistp
outs
pusha
ss
(bad)
dec
into
jno
xchg
cdq
fstp
mov
jmp
cmp
sub
jb
xchg
fnstcw
mov
fnstenv
(bad)
pop
data16
out
jge
fdivr
movs
jmp
jecxz
(bad)
mov
add
mov
int
xchg
fcmovnu
lods
retf
mov
pop
fwait
movs
stos
movs
cli
push
dec
dec
in
(bad)
and
mov
push
call
aad
sti
cwde
pushf
(bad)
pop
fwait
cmc
imul
inc
cli
int
push
pop
mov
jne
push
fadd
retf
loopne
ins
sti
sbb
xchg
adc
mov
adc
loope
retf
lods
call
scas
add
ins
imul
xchg
add
pop
inc
xchg
sub
movs
and
mov
mov
and
sub
and
es
test
adc
mov
adc
das
lock
cs
int
sub
out
push
addr16
mov
mov
mov
lock
push
push
ja
add
xchg
loop
mov
out
xlat
icebp
loop
mov
icebp
jbe
or
addr16
js
xchg
es
daa
xor
les
outs
scas
sub
add
and
cmps
test
inc
scas
or
ins
jne
loop
or
fild
fdivr
or
dec
or
popf
in
bound
loopne
xchg
add
mov
sahf
mov
mov
mov
mov
jge
pop
jg
mov
aas
(bad)
xchg
fwait
daa
lock
pop
js
pop
(bad)
(bad)
sbb
aas
and
mov
xor
cmovbe
mov
sub
jno
sub
cmp
mov
xor
fstp
adc
aaa
xlat
loope
sar
cli
and
mov
xchg
mov
adc
test
inc
test
sbb
cmc
xchg
adc
lds
loopne
add
cmp
(bad)
cmp
lods
clc
jbe
sbb
stos
add
es
rcl
cwde
leave
(bad)
fs
fcom
mov
aam
mov
scas
les
sub
add
std
in
mov
leave
xchg
add
inc
sub
add
xor
in
dec
adc
dec
sbb
or
push
dec
sbb
retf
pop
inc
nop
sub
sub
jecxz
sahf
pop
cs
mov
movnti
fld
lods
push
clc
mov
cmp
jne
push
push
jg
iret
add
loope
xchg
das
mov
mov
inc
hlt
cmp
mov
push
cmps
sbb
mov
inc
dec
jae
add
bound
push
das
adc
es
xchg
pop
and
clc
lods
fisttp
out
jbe
jecxz
xchg
and
push
pop
fdivr
cwde
(bad)
(bad)
std
jbe
push
ds
mov
sub
dec
fisttp
jle
cmp
pop
iret
aas
(bad)
mov
inc
pop
clc
(bad)
(bad)
call
sub
mov
jecxz
pop
xchg
js
push
push
outs
aaa
mov
pushf
repnz
and
out
js
dec
and
inc
mov
sub
pop
leave
cld
mov
sub
leave
in
push
or
cwde
dec
xchg
ret
sbb
jge
pop
movs
iret
cmp
xchg
shl
adc
or
lock
ret
cmp
popa
ret
or
fidiv
sub
pop
inc
sub
add
push
test
sub
call
cmp
pop
or
fsub
xchg
fnsave
in
test
cwde
stos
and
out
and
repnz
push
push
lock
or
aaa
mov
mov
pop
cmp
jb
push
push
pop
sbb
mov
lods
sub
pop
arpl
stos
repnz
cmps
mov
fstp
iret
ss
sub
stos
ficomp
pop
fnstsw
xor
sbb
mov
ret
js
stc
xchg
icebp
or
mov
jmp
add
retf
ins
mov
jae
outs
leave
xchg
and
shl
dec
xchg
or
sbb
cmp
cmp
or
pop
pop
mov
mov
cwde
and
and
jg
sar
push
mov
call
add
js
or
add
xor
lahf
jg
add
je
sub
add
mov
jmp
dec
dec
xor
or
pop
xchg
test
out
daa
daa
or
loope
mov
aad
adc
push
dec
dec
jbe
js
add
sub
fs
aas
xchg
xchg
and
rcl
(bad)
mov
adc
fs
pop
mov
mov
clc
fs
clc
jns
inc
add
or
jb
rcl
mov
je
and
mov
xchg
mov
or
mov
stos
mov
mov
nop
mov
and
aas
lahf
xchg
cdq
sbb
dec
dec
sub
hlt
clc
call
hlt
js
cmp
loop
dec
rcl
mov
aas
ins
xchg
pop
js
and
fisubr
(bad)
push
cmp
add
sub
test
mov
add
mov
popf
(bad)
xlat
fwait
add
dec
aaa
icebp
loopne
addr16
mov
call
sbb
or
aaa
cmp
jmp
cmp
xor
jle
mov
inc
and
jle
adc
xchg
cmp
adc
enter
pop
add
rcr
mov
out
sti
jno
(bad)
and
out
cmp
cmc
sbb
push
adc
cld
jb
das
out
jl
jns
dec
(bad)
iret
add
mov
lock
push
cmp
pop
lea
jns
aam
jo
mov
mov
xor
jnp
or
loope
and
push
add
mov
je
fimul
popf
lahf
mov
inc
or
hlt
xchg
adc
dec
pop
mov
jo
add
inc
and
cdq
sub
jo
sub
pop
(bad)
out
fcomp
mov
mov
add
inc
jecxz
pop
and
in
sub
das
mov
pusha
cmp
es
xlat
popa
ss
or
jecxz
mov
(bad)
cmp
sbb
xor
adc
in
mov
fld
inc
nop
adc
pop
add
or
pop
inc
mov
inc
or
push
mov
push
push
inc
add
xor
dec
pop
sbb
and
pop
movs
or
or
mov
adc
ins
dec
adc
fcomp
mov
inc
jl
add
sbb
cmp
jno
sbb
or
lods
les
pop
xchg
movs
cwde
or
mov
mov
jge
aam
adc
aaa
add
mov
loopne
push
pop
fcomp
mov
mov
pop
pusha
xchg
push
aaa
pop
loopne
inc
in
sub
add
dec
loopne
or
std
pop
adc
repnz
push
inc
mov
pop
dec
loope
cmp
test
inc
add
stos
sbb
lock
lea
mov
mov
popf
push
js
adc
mov
add
outs
call
add
das
nop
sub
xchg
sub
xchg
rcr
dec
or
rcl
mov
dec
adc
and
xchg
mov
cmp
popf
pop
outs
retf
(bad)
icebp
scas
dec
push
jg
retf
loope
xchg
adc
jmp
retf
mov
cdq
jmp
loop
sub
push
in
xchg
add
mov
lods
xchg
mov
jge
sbb
std
std
call
retf
test
shl
dec
fs
(bad)
lods
pop
sub
sub
or
ins
imul
fist
dec
and
(bad)
into
lea
pop
adc
imul
or
jmp
call
aas
xor
movs
mov
and
bound
mov
data16
dec
add
xchg
mov
inc
push
ins
adc
lds
or
push
lock
aas
lsl
ds
test
add
jge
retf
add
add
jmp
pop
pop
xor
adc
ds
(bad)
xchg
(bad)
jge
or
pusha
outs
outs
leave
lods
mov
and
adc
push
pusha
jmp
call
pop
adc
dec
and
icebp
das
add
fistp
sub
pop
or
cmp
sub
inc
pop
jge
mov
sub
push
push
lahf
inc
aaa
push
mov
push
pop
xchg
sub
in
mov
adc
dec
inc
inc
push
cmp
repz
push
out
test
bound
add
cmp
mov
in
ficom
imul
xor
outs
sub
jns
mov
xchg
push
popa
std
fild
add
ss
sahf
xchg
xor
mov
push
push
inc
push
inc
inc
xchg
lods
mov
dec
dec
rcl
inc
test
push
xchg
push
adc
gs
and
imul
icebp
cli
rep
inc
fwait
(bad)
adc
das
es
cwde
mov
add
mov
movntps
fldenv
ror
mov
adc
into
jae
fidivr
clc
lock
push
imul
cmp
add
sub
dec
arpl
push
repnz
add
js
addr16
xor
js
mov
ret
mov
jl
sbb
jb
adc
push
and
nop
inc
mov
jl
movs
rcr
fimul
jg
cmp
jg
ja
cmp
(bad)
mov
add
lahf
jecxz
sub
jo
das
outs
lahf
(bad)
in
data16
mov
pop
or
loopne
xchg
ds
mov
jo
ds
lods
les
stos
adc
mov
lahf
cmp
ror
out
repnz
add
cmp
or
push
inc
xor
outs
push
cmp
sub
pop
fdivr
add
cmp
dec
lock
dec
pop
jecxz
inc
cmp
jmp
ret
jmp
xchg
mov
jae
sbb
(bad)
test
xchg
(bad)
(bad)
imul
(bad)
popa
cmp
sbb
sbb
jecxz
mov
cmp
imul
(bad)
fild
inc
xchg
call
dec
add
lea
add
add
loopne
mov
(bad)
mov
and
jns
sbb
xchg
jo
sub
ja
outs
in
retf
pop
and
add
(bad)
icebp
loopne
cmp
push
sbb
xor
mov
xchg
arpl
pop
pusha
test
pusha
int3
fild
jae
sub
in
outs
mov
gs
sbb
mov
sub
mov
in
add
jo
ret
sbb
ss
fidivr
add
popf
xor
repz
imul
dec
outs
pop
adc
mov
(bad)
lock
sub
scas
or
daa
or
fnsetpm(287
clc
jg
icebp
mov
leave
stc
pop
pop
xchg
std
jl
arpl
mov
lds
mov
or
retf
loopne
sbb
inc
sbb
cs
shl
inc
cld
dec
adc
pop
mov
lods
and
adc
mov
pop
rol
sub
outs
and
xor
cmp
(bad)
shl
inc
inc
fs
mov
xchg
in
mov
es
push
xor
sbb
xor
fiadd
ss
or
sub
cdq
test
xor
fnop
rcl
(bad)
push
add
lods
xor
or
test
aaa
mov
movs
sbb
in
jmp
test
iret
sub
fist
fimul
fisttp
shl
inc
aaa
ret
adc
jmp
cmc
push
adc
imul
xor
sbb
(bad)
xor
retf
ins
inc
jae
push
les
movs
jl
retf
adc
jle
or
sub
test
leave
inc
pop
push
sbb
icebp
inc
dec
adc
add
inc
jl
pop
cmp
adc
jb
pop
adc
ds
lds
inc
loop
aas
push
ins
arpl
inc
cmp
inc
cmp
add
in
jmp
add
mov
push
push
jbe
popa
mov
ds
xchg
push
inc
inc
add
xlat
xchg
fsubr
out
imul
inc
into
xlat
in
add
lods
lods
push
xor
lods
xlat
push
test
mov
mov
dec
push
push
pop
jle
pop
pop
cmp
and
je
xchg
test
add
and
daa
sbb
xor
push
test
daa
and
inc
data16
jb
rcr
pop
inc
adc
test
xor
inc
sbb
xor
pop
loope
pusha
or
jmp
dec
push
inc
pushf
movs
iret
jns
mov
and
xchg
and
mov
jmp
or
push
and
xor
cmp
ins
ins
mov
mov
call
cmps
scas
sub
pop
call
dec
or
or
dec
mov
xor
sbb
aam
pop
clc
out
data16
aas
mov
sub
push
mov
jmp
mul
push
js
sahf
jne
das
cs
sub
jmp
mov
shl
cmps
in
cmp
sbb
idiv
and
mov
push
sar
push
cmp
les
sbb
(bad)
and
add
out
iret
pop
adc
in
and
mov
int
ins
js
popa
das
ds
or
mov
mov
ror
adc
test
aam
les
sbb
std
jo
imul
fild
pop
rcr
pop
jno
repnz
inc
add
sti
or
pop
popf
(bad)
repz
pop
jecxz
leave
imul
jo
stos
push
lahf
(bad)
push
loope
push
and
iret
mov
loop
std
popf
cmp
jge
jns
ret
mov
inc
loope
jmp
add
add
and
in
pop
add
imul
mov
mov
mov
imul
mov
loopne
fs
ins
dec
lds
mov
fisttp
or
xor
sbb
xor
sbb
or
fcom
scas
test
xor
pop
add
add
add
push
push
cmp
push
enter
or
jb
mov
xor
add
or
jmp
pop
jl
push
or
mov
adc
imul
fstp
loop
mov
cmp
pop
lea
lds
mov
es
icebp
xor
mov
pusha
int3
ror
dec
cli
cwde
repnz
xchg
and
ins
or
inc
lahf
lea
sub
add
popf
add
and
fcmovnu
sbb
jae
fucom
xchg
mov
mov
and
xor
retf
sub
add
pop
retf
add
adc
cld
int3
(bad)
fwait
dec
bound
or
imul
loop
lahf
mov
inc
out
push
imul
and
fmul
imul
sub
jge
(bad)
daa
pop
test
adc
scas
jbe
bound
cmp
xchg
test
push
cmp
cmp
fadd
(bad)
jo
add
adc
mov
and
aaa
cdq
bound
ror
je
or
jb
sub
and
xor
dec
adc
pushf
inc
and
mov
(bad)
movs
fcom
xchg
leave
sub
sub
or
inc
imul
dec
xchg
fisttp
mov
pop
rcl
fadd
jb
pop
or
lods
pop
mov
push
push
push
inc
dec
pushw
mov
or
mov
fsubr
enter
pop
mov
xchg
and
jo
jg
cmp
or
jmp
xor
call
rol
inc
jno
adc
push
cwde
(bad)
int3
bnd
push
aam
mov
sbb
inc
add
xor
jg
mov
test
xchg
sti
or
jg
or
sub
sub
rcl
sub
sbb
xor
stos
sub
inc
sbb
mov
adc
sbb
and
retf
loop
sbb
jnp
inc
and
sbb
(bad)
dec
rcl
mov
sbb
stc
sbb
(bad)
jno
or
or
jno
ins
in
push
mov
inc
cmp
jge
popf
xlat
test
movs
(bad)
push
out
pushw
stos
scas
sub
jge
pop
movzx
pushf
rcl
xchg
sub
imul
mov
fwait
clc
xor
jle
sub
loope
jae
in
inc
and
ds
push
jmp
icebp
fsub
dec
out
adc
or
add
sbb
mov
mov
dec
cmp
fwait
ret
or
xchg
or
xchg
push
fist
push
sbb
cmps
adc
aaa
pshufw
adc
movs
sahf
or
imul
push
pop
pop
xchg
push
push
push
pushf
pushf
mov
inc
(bad)
xor
(bad)
push
dec
jle
cmp
ret
rcl
adc
mov
pop
(bad)
cmp
push
adc
lea
sub
lods
and
movs
mov
mov
push
stos
or
fcmove
repz
mov
js
and
stc
in
and
repz
mov
mov
mov
fstp
hlt
hlt
xlat
adc
xchg
pop
(bad)
retf
mov
ficomp
lock
push
jle
push
pop
jl
cs
mov
(bad)
stc
imul
je
shl
mov
test
adc
push
add
cmps
js
jg
add
add
clc
mov
lock
push
sbb
xlat
pusha
icebp
jmp
cmp
mov
xchg
jmp
test
pcmpeqb
push
gs
mov
or
xchg
dec
xor
and
adc
int3
aad
loop
lea
into
(bad)
not
dec
lds
sahf
fdivrp
add
(bad)
cld
or
outs
sbb
jno
(bad)
push
cld
jle
aas
mov
cmps
stos
jo
mov
add
loope
mov
sbb
lods
rcl
lahf
push
jne
xchg
mov
adc
ins
xor
jmp
add
dec
and
or
gs
mov
bound
lds
fld
ss
(bad)
out
adc
dec
xchg
jo
daa
xchg
add
sbb
ss
loopne
out
dec
pop
ficomp
lock
jmp
loopne
ss
fstp
sub
pop
(bad)
shl
test
aas
and
cmp
(bad)
not
ins
dec
je
(bad)
movs
or
inc
and
dec
push
xchg
and
das
xchg
fs
and
push
dec
shl
or
adc
cwde
adc
sub
xor
ret
ja
adc
stos
fiadd
fbstp
sti
loop
dec
jg
shl
xchg
mov
xchg
popf
sbb
in
int
cmc
clc
ins
push
push
mov
push
or
ret
mov
or
js
lds
xchg
add
push
pop
fisttp
add
adc
or
add
inc
or
rol
mov
add
xchg
add
imul
xchg
out
dec
pop
jecxz
in
jp
fisttp
xor
jecxz
pop
and
fild
xchg
ret
push
pop
scas
retf
(bad)
inc
ret
mov
sub
scas
mov
or
mov
pusha
icebp
lea
fdivrp
mov
jno
add
cld
jns
pop
ja
push
pop
fcmovb
loopne
addr16
jmp
sub
add
jge
add
and
push
lock
mov
push
mov
mov
daa
mov
pop
push
mov
adc
mov
fdiv
and
lock
push
inc
lock
jl
fisttp
xor
sub
pop
in
outs
ret
pop
(bad)
popa
mov
or
push
push
push
rcl
shr
cmc
stos
push
scas
ret
imul
in
mov
xchg
sub
xchg
sub
sbb
pop
or
ror
(bad)
mov
(bad)
and
pop
test
ret
jl
sub
in
push
lods
pop
adc
mov
sbb
sub
ror
test
xchg
and
jmp
stos
or
sub
push
dec
test
adc
push
jns
lahf
and
xchg
push
and
cmps
push
adc
cdq
xchg
inc
cmps
movs
and
adc
mov
add
jns
dec
mov
sub
inc
mov
and
mov
test
dec
mov
lock
push
xchg
or
lods
mov
push
adc
inc
jne
sub
add
rcl
push
pop
std
aaa
add
inc
icebp
aaa
add
mov
jno
pop
and
push
jmp
cdq
push
push
jmp
loop
cld
mov
(bad)
jp
xor
fiadd
int3
cmc
popa
repz
cwde
(bad)
(bad)
mov
mov
mov
pop
mov
out
sbb
(bad)
sub
inc
jne
push
retf
mov
pop
or
scas
add
or
aad
mov
pop
adc
push
sbb
test
dec
adc
data16
int3
in
pusha
cmp
push
xor
add
mov
xchg
mov
stos
mov
jnp
inc
inc
xor
xchg
cmp
test
pop
mul
and
ret
outs
in
jb
inc
and
cmp
jno
mov
mov
or
add
and
sbb
sub
dec
pop
xchg
xchg
and
loop
call
sub
ds
push
and
jle
sub
xor
add
xchg
xchg
xchg
out
push
nop
pop
adc
xchg
adc
nop
xchg
adc
adc
adc
xor
adc
iret
xor
fnsave
pusha
cwde
jnp
push
mov
jp
mov
jmp
out
(bad)
push
xor
fucomi
cwde
lds
jae
pop
pop
cmps
xor
jge
pop
fsubr
cmp
jns
lock
cld
or
ror
and
push
adc
cmp
int3
(bad)
out
or
mov
jl
mov
mov
or
pop
(bad)
stos
jl
sti
mov
mov
cmps
cmps
jno
pop
or
inc
sbb
add
out
mov
push
mov
adc
xchg
sub
jge
(bad)
cmp
xchg
mov
ret
int
mul
cli
btc
ret
mov
add
sti
daa
js
loop
repz
sbb
cld
idiv
dec
pushf
cmp
mov
in
cmp
xchg
arpl
stc
cmp
sahf
sub
mov
or
mov
jnp
mov
adc
cmps
sbb
in
sbb
add
out
adc
xchg
xchg
add
inc
clc
nop
imul
addr16
aaa
sbb
or
mov
loope
add
retf
xlat
or
jle
test
mov
inc
scas
adc
add
test
inc
or
and
and
fcom
mov
jg
add
movs
push
xor
add
dec
push
push
inc
cwde
nop
sbb
add
ret
dec
cs
cmc
ds
mov
pop
out
mov
into
mov
loopne
pop
and
fs
fistp
jo
and
sti
xor
and
cmp
(bad)
popa
mov
test
jp
neg
or
ret
push
cli
mov
or
push
push
add
popa
bound
popa
mov
cmp
mov
shr
push
(bad)
es
jp
adc
sbb
sub
mov
pop
mov
push
sub
sub
inc
rol
js
jmp
xor
retf
out
adc
cld
cmp
ret
or
lea
mov
pop
adc
pcmpeqw
les
aas
push
fimul
sbb
add
push
sub
push
int3
pusha
and
js
and
cdq
sub
retf
dec
ret
pop
sub
adc
mov
add
into
inc
mov
and
sbb
cmp
add
adc
test
test
popa
adc
jle
lock
or
adc
push
push
and
mov
imul
leave
ret
sbb
or
inc
jnp
daa
mov
mov
out
add
push
dec
inc
inc
push
stc
fnstenv
xchg
and
lds
sbb
sub
xor
sub
arpl
adc
popa
dec
fmul
push
or
jecxz
dec
shl
push
pop
mov
movs
sub
mov
adc
pop
imul
xor
jo
adc
out
and
mov
adc
enter
sub
xor
mov
adc
push
arpl
test
jns
add
cdq
pusha
inc
pop
push
add
pop
stos
fsub
xchg
mov
or
ret
cmc
fcomp
adc
iret
inc
inc
inc
jae
xchg
pusha
and
daa
(bad)
fnstenv
icebp
das
add
inc
mov
popf
push
shl
outs
pusha
dec
stos
push
mov
out
fs
rcl
add
pushw
jmp
add
inc
mov
imul
inc
daa
(bad)
retf
(bad)
push
rcr
jle
push
dec
pusha
outs
push
mov
fs
clc
addr16
(bad)
out
ins
in
sub
inc
or
fwait
repnz
sub
enter
mov
sbb
loop
cmp
repnz
adc
icebp
aad
fst
(bad)
icebp
cdq
push
ins
sbb
push
ds
(bad)
and
or
addr16
or
addr16
add
mov
pop
mov
mov
int
test
dec
inc
push
pop
push
sahf
pop
push
pop
outs
ins
mov
pusha
pop
and
jns
pop
inc
shr
mov
sub
movs
dec
inc
pop
arpl
aaa
mov
push
mov
jbe
data16
shrd
inc
in
xchg
xchg
push
aaa
adc
adc
adc
jmp
lock
enter
dec
mov
movs
movs
pop
mov
add
xchg
pop
sub
adc
adc
pop
inc
inc
pop
pop
inc
push
push
mov
nop
lds
and
cs
shl
and
adc
scas
rcr
inc
inc
in
mov
rcr
aad
and
jg
mov
jmp
sub
test
(bad)
sbb
(bad)
js
sub
cwde
lahf
and
mov
mov
push
cmp
pop
ja
add
adc
mov
repz
popa
fidivr
test
push
sbb
or
ss
test
sbb
stc
jae
mov
push
sti
mov
sub
push
out
(bad)
xor
pop
les
sbb
sbb
xchg
pop
(bad)
loop
scas
aaa
loope
jae
fdivr
jecxz
sbb
pop
push
cmp
mov
idiv
mov
in
ret
clc
jmp
(bad)
loope
cmps
jmp
xchg
clc
lahf
cdq
test
pushf
pushf
sub
pop
xor
outs
in
jmp
les
push
pop
add
loope
ret
inc
xor
shr
or
push
inc
cwde
cmps
or
push
in
inc
fistp
add
add
cmp
xor
xor
cmps
sti
adc
xor
out
and
fcomi
and
call
jle
or
into
ja
std
xchg
imul
pop
(bad)
lods
inc
out
sbb
cwde
mov
sub
cmp
add
dec
mov
mov
pop
ins
lea
ret
cli
and
pop
pop
adc
xor
aam
mov
mov
add
movs
test
adc
ret
nop
bound
in
loope
push
sub
mov
loope
sbb
push
jmp
lods
sbb
jbe
loope
loope
cld
mov
xchg
mov
mov
jg
addr16
mov
out
or
mov
(bad)
pusha
(bad)
iret
or
adc
or
lea
add
jnp
mov
call
stos
mov
or
inc
sbb
pop
sbb
add
cmp
neg
add
fstp
push
outs
pop
and
hlt
lock
sub
pop
jl
adc
sahf
imul
pop
cmp
pop
or
das
add
add
movs
pop
add
xchg
(bad)
mov
xchg
(bad)
mov
ret
xchg
xchg
into
iret
adc
push
cmp
mov
xchg
sub
sbb
(bad)
ffreep
add
xor
ret
push
pop
xchg
repz
lea
ficom
or
push
cmp
iret
push
js
cmp
push
mov
or
lds
push
inc
sub
data16
add
pop
mov
sbb
fsubr
fs
test
outs
(bad)
and
(bad)
out
mov
outs
push
xchg
stos
sub
xor
or
call
aad
js
mov
jbe
jbe
imul
mov
inc
in
out
lods
scas
adc
std
pop
push
imul
in
jmp
test
pop
pop
imul
pop
inc
dec
dec
and
adc
jns
and
fisttp
and
inc
dec
inc
push
adc
xchg
xchg
xchg
popf
mov
and
cmp
stos
call
shl
adc
xchg
push
(bad)
lock
test
sbb
enter
outs
imul
adc
dec
test
imul
adc
pop
jo
aas
les
es
bound
into
push
cmp
adc
jb
pop
push
jae
pop
push
xlat
fdiv
push
xor
xor
mov
inc
xor
jge
div
mov
push
push
xchg
jge
scas
out
cmp
pop
pop
sbb
adc
lahf
cmp
fwait
xchg
push
xor
cmp
xor
(bad)
xchg
push
(bad)
cld
or
or
pop
fcmovbe
iret
jae
stos
fwait
pop
ins
dec
pop
lock
data16
cdq
pushf
cld
xchg
pop
dec
sub
pop
aad
in
cdq
pushf
jne
and
jp
rcl
pop
inc
imul
cmp
mov
xchg
cdq
adc
adc
ror
jo
xchg
inc
mov
and
xchg
xchg
xchg
popa
sub
xor
jae
call
test
aam
mov
cmp
mov
inc
mov
jne
or
push
ror
sbb
iret
push
mov
push
pop
sahf
cmp
daa
ror
movs
sar
push
adc
push
xchg
rcr
xchg
mov
push
mov
lods
or
arpl
push
add
jp
sbb
xchg
adc
adc
retf
or
dec
dec
repnz
scas
cli
add
repz
movnti
ret
xor
lock
xor
mov
pushf
jge
test
add
xor
bound
mov
and
mov
ds
jecxz
popa
icebp
jmp
call
xchg
sbb
cmp
sbb
enter
push
mov
out
ja
rcl
push
in
bound
aaa
dec
push
movs
stos
dec
adc
jb
sti
sub
add
xchg
add
bound
push
add
jo
movq
loope
mov
jle
or
cld
daa
adc
and
jl
adc
jmp
xor
adc
retf
inc
push
xor
loope
and
xlat
movs
shr
int
rcr
and
fucomip
(bad)
sbb
fwait
cmp
push
cmp
mov
mov
mov
outs
and
(bad)
jo
enter
ss
je
dec
or
loopne
dec
sbb
into
aad
fwait
int
clc
jp
adc
out
inc
xchg
fucomi
push
sbb
dec
inc
mov
sub
or
add
mov
jne
test
and
or
test
js
pusha
outs
and
add
(bad)
xor
push
pop
cmp
or
adc
(bad)
sub
into
movs
loopne
lods
cdq
cmp
(bad)
jecxz
movs
dec
loopne
push
fdivr
fiadd
mov
inc
dec
enter
pop
pusha
sub
sbb
xchg
lods
mov
lds
fwait
loop
mov
into
push
fnclex
pop
shr
shl
ret
adc
add
gs
and
xor
dec
or
arpl
push
cwde
test
imul
dec
mov
loopne
ja
jle
hlt
(bad)
aaa
xchg
outs
cmp
sbb
jge
mov
adc
jg
jle
dec
ret
mov
jnp
cli
cwde
(bad)
retf
cmp
mov
xchg
push
jecxz
in
ins
or
(bad)
mov
in
or
cmp
rol
rol
shl
mov
cmp
jp
loopne
adc
xor
or
push
mov
or
mov
loop
jns
addr16
or
sbb
dec
(bad)
(bad)
dec
int3
fist
add
aad
loop
jne
pop
add
push
ret
retf
bound
retf
arpl
jbe
and
mov
loope
ds
fbld
icebp
jl
and
add
out
jl
add
nop
loope
popf
and
xchg
std
cmc
dec
loopne
out
cmc
push
in
jmp
loopne
test
dec
xchg
(bad)
adc
iret
mov
push
clc
mov
sbb
(bad)
jns
xchg
mov
push
or
mov
pop
mov
out
lods
mov
sbb
mov
and
sub
sub
pop
pop
addr16
pop
jb
or
stos
sub
imul
pop
pop
push
(bad)
mov
cli
add
hlt
mov
pop
sbb
imul
lahf
xchg
xchg
fadd
leave
lds
or
cwde
pop
pop
mov
xchg
popa
enter
jp
push
repnz
daa
push
sbb
xor
add
icebp
inc
pop
bound
loop
or
leave
std
fwait
inc
pop
inc
adc
and
adc
xchg
push
push
mov
jae
and
and
and
sbb
adc
call
xchg
(bad)
aad
xchg
repnz
pop
pop
(bad)
repnz
push
xor
ja
sub
push
imul
inc
xchg
mov
dec
xor
dec
test
jmp
adc
and
push
shl
lds
or
jns
cmc
mov
repz
dec
or
xchg
adc
loope
loopne
das
cmp
mov
push
mov
add
inc
add
mov
xchg
stos
shl
xor
ret
test
push
call
lods
in
xor
nop
sub
sub
idiv
inc
push
sub
sub
cmp
xchg
jp
mov
or
outs
adc
adc
in
in
pop
mov
fwait
add
push
add
dec
mov
mov
vgatherqps
loop
xchg
xchg
pop
mov
mov
inc
inc
cmp
cs
adc
xor
mov
jp
mov
push
mov
stos
mov
add
stc
inc
neg
jmp
shl
mov
mov
push
xchg
jmp
cmps
mov
sub
movs
in
mov
add
push
sub
push
adc
mov
xchg
ficomp
fstp
dec
xor
xchg
add
test
cld
cld
lods
dec
add
cld
gs
push
pop
cmp
sub
add
sbb
dec
inc
dec
dec
test
and
sub
stos
(bad)
push
fs
sbb
inc
and
xor
pop
int
lds
imul
pop
mov
std
mov
scas
sar
xor
pop
sti
or
xchg
push
add
xor
inc
js
dec
push
mov
add
loopne
(bad)
shr
sbb
add
dec
adc
in
icebp
sbb
pop
mov
in
cmp
cmp
pop
mov
add
scas
jg
xchg
push
cmp
and
aas
dec
or
dec
sbb
add
push
xchg
lock
lds
add
sub
ror
lods
clc
popf
test
ss
sub
mov
dec
loopne
pop
and
jle
xchg
(bad)
loop
cmp
cmp
dec
xchg
inc
ja
ds
sub
push
shl
addr16
jecxz
ins
and
das
fstp
jo
es
mov
jp
int
ror
pop
mov
in
inc
adc
add
sub
pop
push
push
scas
add
test
imul
lock
repz
dec
les
adc
jp
or
addr16
jno
cs
cld
(bad)
jl
sti
jno
mov
out
(bad)
(bad)
pop
into
mov
xor
sub
sub
dec
in
dec
mov
pop
xchg
cmp
inc
pop
arpl
cmp
popf
dec
xchg
inc
stc
lock
sub
mov
adc
adc
movs
jno
(bad)
xchg
movs
or
movs
nop
lods
es
aas
popa
push
test
test
sub
cmp
jno
cmp
xchg
pop
cmp
test
jl
call
js
and
jo
leave
adc
faddp
cwde
repz
cmp
imul
pop
or
stc
das
(bad)
push
jb
sti
and
pusha
ret
xchg
cmp
dec
add
add
cmp
sub
lock
sbb
mov
fsub
std
mov
mov
and
outs
sub
cdq
cs
xchg
sti
jg
add
xchg
add
fnsave
ins
sub
and
mov
out
mov
out
test
movs
xor
and
adc
or
in
xlat
fcmovne
(bad)
mov
sub
ds
into
ret
add
xor
sub
push
dec
jo
adc
scas
mov
mov
xchg
dec
loopne
cs
or
daa
xor
add
jno
inc
or
mov
ret
jns
outs
lds
dec
call
mov
movs
fs
gs
sub
xor
xor
arpl
lock
jae
inc
pop
adc
jecxz
xchg
sahf
fwait
xchg
call
cs
lods
xchg
xor
and
cmc
enter
inc
pop
push
loop
push
loope
loop
xor
and
mov
or
dec
push
inc
rcl
xchg
lea
cmps
std
rcl
ror
in
xlat
shl
pop
push
push
fild
mov
mov
add
cmp
push
enter
mov
add
inc
ret
(bad)
sbb
(bad)
jmp
cmp
pop
pop
and
xor
jo
pop
mov
add
ja
push
repnz
push
inc
jns
stos
lods
and
inc
inc
inc
sbb
aad
and
add
add
test
mov
inc
inc
inc
push
fnstsw
fwait
cdq
mov
and
xor
aad
repnz
addr16
jns
rol
sub
invlpg
or
bnd
adc
pop
sub
ret
ror
jbe
adc
out
sub
fcmovnbe
(bad)
out
or
inc
data16
mov
mov
or
add
jg
mov
lods
in
mov
mov
repz
jle
sub
jnp
xlat
xchg
xor
rcl
je
call
and
cmp
ret
dec
fdivr
ins
(bad)
fadd
cmc
adc
int
push
dec
hlt
mov
ins
xor
(bad)
inc
adc
sub
push
repz
in
call
sub
mov
inc
or
ja
xchg
jmp
test
fldenv
and
mov
jno
xor
mov
pop
xor
or
retf
dec
add
mov
inc
call
mov
adc
and
test
imul
(bad)
imul
mov
jne
add
dec
mov
sbb
sub
aad
sub
jbe
sahf
repnz
addr16
mov
pop
cmp
push
add
push
add
or
jb
add
lock
adc
and
(bad)
aas
mov
jo
push
sbb
and
adc
adc
add
inc
sbb
into
pop
or
fadd
or
test
scas
adc
stos
push
aas
out
or
leave
jnp
inc
ror
xchg
mov
pop
sar
xor
iret
sbb
sbb
adc
es
stc
cmp
push
scas
push
retf
inc
and
mov
arpl
pop
ficom
mov
cld
push
(bad)
les
jo
adc
jbe
scas
dec
sbb
push
lahf
sub
mov
js
mov
xchg
dec
(bad)
push
jae
stos
pushf
push
xchg
popa
test
sbb
push
fld
and
dec
or
and
add
sbb
std
js
jecxz
fdivr
mov
inc
jg
xlat
dec
(bad)
loope
movs
xchg
dec
or
loop
fdivr
cmp
jecxz
add
mov
sysret
fcmovnbe
mov
and
pop
adc
clc
bound
jo
push
sbb
outs
ins
rcr
sub
jmp
xchg
xchg
or
add
add
enter
sbb
in
or
push
xchg
out
(bad)
fwait
inc
jno
sub
pop
retf
mov
cli
loop
outs
or
dec
and
cmp
sbb
mul
sbb
loop
pop
ins
fcom
mov
push
bound
sbb
arpl
xor
stos
mov
int3
or
cmp
pop
dec
or
cld
sub
or
and
sbb
jmp
stos
xor
xchg
and
movs
mov
jg
push
test
mov
mov
add
clc
lods
das
push
xlat
cmp
jo
and
jnp
or
inc
lock
mov
into
xlat
cmp
dec
cmps
pop
sahf
ins
int3
(bad)
aad
sub
xor
int3
mov
jae
xchg
fcomp
inc
xor
dec
scas
fild
adc
in
ret
dec
add
cmp
push
mov
lock
mov
jnp
popa
lahf
fwait
cmp
clc
mov
mov
es
cld
xlat
sub
inc
in
icebp
repnz
rcl
or
push
pop
jp
mov
push
icebp
mov
(bad)
xchg
loop
arpl
ss
out
or
push
mov
or
jle
push
pop
pop
xor
(bad)
xchg
pop
mov
inc
lock
outs
jmp
jbe
jg
mov
jp
sub
aam
xor
test
or
xchg
mov
and
jne
sbb
mov
lahf
(bad)
mov
pop
daa
std
movs
mov
jne
cmp
ret
pop
retf
call
dec
jae
test
adc
push
lds
addr16
mov
adc
mov
ret
imul
adc
jb
push
push
push
jae
adc
adc
and
and
and
jo
mov
jb
cmp
cmp
aaa
xchg
repz
test
lods
imul
(bad)
sbb
ror
push
push
or
mov
retf
add
stos
push
pop
push
or
push
out
or
add
and
rol
adc
mov
or
std
xor
test
mov
xchg
mov
add
cmps
and
(bad)
aad
ins
sub
and
inc
pop
inc
or
or
or
imul
enter
adc
int
popa
es
clc
cmp
xor
xor
pop
ja
dec
inc
mov
inc
and
stc
stc
js
(bad)
andps
or
sar
sub
push
xor
pusha
je
or
or
jb
sbb
pop
ss
aam
(bad)
sti
test
push
sbb
bound
sbb
xor
aaa
add
aas
or
sub
add
add
inc
test
pop
dec
js
inc
dec
addr16
fucompp
cmps
out
addr16
popf
xchg
outs
mov
push
sub
repz
les
mov
jb
ffree
call
arpl
cmp
sub
test
xchg
popa
push
push
call
pop
or
or
mov
xor
dec
lods
pop
imul
jae
stc
cmp
(bad)
adc
mov
fs
and
dec
aaa
test
adc
mov
stc
mov
inc
pop
or
retf
aam
mov
mov
pushf
cmp
xchg
cs
shl
lds
(bad)
lahf
icebp
call
stc
jae
jne
aaa
dec
sahf
fimul
rcr
fs
and
sbb
and
loop
xchg
mov
add
aaa
and
jmp
push
xchg
push
cmps
adc
pusha
bound
(bad)
xchg
jae
sbb
push
xchg
dec
imul
mov
and
inc
test
(bad)
enter
adc
mov
or
and
jl
mov
fwait
xchg
xchg
pop
out
xchg
adc
aad
adc
aad
xchg
adc
xchg
xchg
adc
xchg
adc
rcl
adc
cmp
mov
sti
imul
retf
cdq
mov
mov
enter
xchg
pop
mov
mov
and
pop
dec
jecxz
repz
arpl
dec
div
sub
rol
sti
jecxz
pop
pop
cmps
mov
aas
fisubr
(bad)
in
or
push
adc
dec
imul
sbb
add
cld
xor
add
out
mov
add
jne
js
add
popf
aad
outs
sub
pop
sub
rol
mov
(bad)
(bad)
xchg
out
pavgb
test
scas
xchg
(bad)
loope
das
mov
daa
push
icebp
adc
aaa
dec
mov
aad
jnp
repnz
pop
fcmovbe
mov
ss
xor
fcomp
lea
cmp
je
or
outs
enter
ins
pushf
popf
scas
(bad)
jmp
test
push
sub
ds
enter
inc
cwde
cmps
sub
xor
adc
fdivr
loop
nop
adc
adc
mov
jne
out
sub
(bad)
xchg
sbb
jl
out
out
aaa
inc
jecxz
out
cld
dec
out
(bad)
fidivr
add
les
fdiv
loopne
adc
ins
mov
int
add
data16
jl
mov
and
sbb
sub
repz
add
in
sbb
adc
dec
cld
add
mov
jo
fst
mov
jno
and
jo
sub
icebp
arpl
loopne
fisub
iret
repnz
imul
inc
scas
shr
popa
mov
jb
jb
mov
outs
cli
fsubr
data16
add
adc
shr
dec
ins
jae
inc
xchg
cs
fimul
add
adc
rcr
or
ds
je
cmp
inc
mov
or
(bad)
mov
lock
and
cmp
iret
dec
add
icebp
in
adc
jae
(bad)
mov
sbb
pop
add
mov
and
xchg
mov
sub
shl
call
sub
sahf
lds
fld
test
and
sub
add
sub
adc
sbb
add
fsubp
sub
dec
cmps
sbb
lds
jle
push
xchg
dec
cld
aas
lea
adc
jl
ins
imul
mov
or
test
xor
push
mov
pop
cmp
pop
push
pop
retf
lea
mov
mov
or
and
cs
mov
psllq
inc
out
ds
add
lock
test
aas
fdivr
pop
dec
push
lods
xor
ja
cmc
push
fmulp
sub
or
push
pop
push
pop
sub
retf
int
div
pop
dec
clc
xchg
les
or
add
jno
mov
retf
sub
xor
inc
popa
adc
adc
je
in
and
ror
push
sbb
mov
xchg
and
popa
mov
push
enter
ins
outs
inc
gs
stos
cmp
or
ret
pand
fiadd
mov
jae
xor
sbb
ror
sbb
cmc
jmp
icebp
jmp
mov
cdq
int
loope
and
and
fwait
jns
ins
ins
ds
xchg
adc
inc
iret
retf
ret
inc
out
lahf
pop
push
mov
movs
imul
jmp
pop
mov
repnz
stos
sub
inc
and
push
adc
adc
or
cmp
mov
ins
out
stos
stos
addr16
jecxz
and
scas
daa
int
xchg
cdq
out
dec
data16
push
and
pop
sub
dec
xor
daa
dec
fadd
iret
push
daa
cmp
jle
popa
push
jmp
jbe
cs
xor
jnp
xchg
pop
jns
push
xchg
aaa
push
ret
ins
(bad)
outs
push
adc
sub
in
adc
push
sub
gs
test
dec
inc
jnp
add
sbb
mov
mov
sbb
pop
clc
push
fadd
enter
jb
mov
xchg
xchg
xchg
test
adc
sub
push
or
inc
sub
dec
icebp
inc
pop
dec
or
mov
push
xchg
das
std
sahf
sbb
sbb
shr
pushf
cmp
mov
sti
xchg
lock
pop
popf
rol
push
ins
(bad)
mov
xchg
jo
clc
adc
cld
js
xchg
data16
and
cmp
rcr
cmps
jnp
mov
mov
dec
and
adc
pusha
and
call
cs
xchg
rcl
xchg
enter
cdq
jg
mov
pop
mov
hlt
std
call
in
in
mov
cmp
out
jo
stc
fdivr
lods
mov
inc
jl
add
(bad)
ins
inc
mov
inc
pop
inc
xchg
dec
pop
inc
pop
inc
dec
inc
push
inc
dec
dec
push
pop
pushf
inc
inc
inc
xchg
lds
retf
push
dec
or
sub
mov
push
adc
mov
das
pop
dec
bnd
mov
repz
out
aad
(bad)
mov
pop
je
cs
xor
sbb
sub
xchg
jmp
shr
adc
out
sbb
daa
retf
dec
sub
push
sar
mov
scas
mov
jp
retf
cmovnp
(bad)
push
jne
xor
jge
shr
or
stos
or
or
adc
cld
sub
add
xchg
mov
inc
pop
or
xor
ret
add
(bad)
movs
dec
aaa
jo
(bad)
jmp
sub
mov
jl
mov
sbb
mov
jbe
stc
stc
(bad)
data16
div
xor
mov
mov
cmp
pop
hlt
fs
push
push
mov
push
je
jecxz
add
mov
mov
rcr
pop
scas
ins
jmp
test
cmp
push
movs
xor
push
cdq
mov
inc
sahf
outs
lods
mov
mov
pop
loope
mov
dec
ret
push
xchg
aaa
into
test
mov
jge
sbb
jae
jo
sbb
call
push
iret
test
ins
or
fst
mov
mov
xor
jg
inc
mov
nop
scas
sub
jl
push
adc
jb
inc
call
mov
fild
adc
not
add
pop
dec
mov
mov
out
cmp
jg
or
cmp
je
dec
sub
add
and
sub
test
xor
mov
cmp
pusha
(bad)
xchg
adc
or
adc
push
fsub
outs
adc
pop
mov
loope
add
jle
pop
in
ja
add
loope
add
cmp
mov
mov
lods
icebp
ins
lahf
add
sbb
add
out
push
imul
and
(bad)
stos
daa
cmp
fcom
outs
out
cs
add
jnp
(bad)
repz
sbb
daa
(bad)
xor
mov
adc
loop
jno
sahf
lea
xchg
add
xor
(bad)
jae
lock
rcl
push
das
dec
jns
mov
or
sbb
inc
or
or
js
and
adc
or
mov
(bad)
pushf
sbb
add
push
lock
dec
js
aad
shl
adc
fstp
sub
inc
cdq
pop
stos
mov
add
aad
mov
fmul
mov
(bad)
pop
popa
mov
bound
adc
mov
cmp
fdiv
sub
cmp
cs
inc
jl
es
mov
xchg
nop
xchg
xchg
in
les
ret
js
xor
push
aad
or
mov
cmp
ror
or
mov
call
and
fs
mov
dec
inc
js
aad
sbb
mov
and
sub
ins
cmp
enter
fld
mov
push
sbb
push
sbb
loop
xchg
adc
adc
inc
(bad)
lea
xor
xor
rol
ja
mov
lea
imul
mov
movs
cmc
sub
mov
and
aaa
mov
into
ins
fidivr
jmp
popa
mov
and
cmp
jb
dec
retf
arpl
das
ret
xor
stos
gs
xor
or
ins
and
retf
in
ins
sub
dec
shl
adc
fwait
(bad)
cmps
fld
(bad)
cmp
xchg
faddp
or
or
aam
fild
lock
add
adc
dec
sbb
and
push
sub
daa
outs
jns
inc
nop
outs
jbe
jb
gs
cli
mov
ins
sbb
and
or
fadd
cmps
sbb
fstp
adc
in
jp
push
movs
jo
retf
jne
neg
push
cmp
dec
inc
les
mov
add
loope
inc
push
dec
add
or
xor
loope
push
je
addr16
xchg
and
pop
shl
xchg
bound
cmp
jmp
mov
imul
jns
xchg
pop
xchg
xchg
adc
mov
in
popa
scas
add
pop
jae
inc
cmp
and
test
test
loopne
xor
mov
cdq
pop
ins
sbb
movs
cld
les
ja
(bad)
out
jbe
dec
aam
out
push
popa
jmp
ss
cmp
mov
pop
pop
sub
jge
add
imul
in
or
dec
jne
sbb
add
xor
out
mov
and
lahf
push
add
test
sub
mov
daa
sbb
sub
cli
and
dec
cwde
popf
sbb
cmp
div
lods
sbb
sbb
rcr
xlat
mov
and
mov
mov
in
adc
loope
mov
adc
in
pop
push
out
adc
push
aam
adc
push
in
add
sbb
push
sub
and
and
and
stos
das
retf
jg
dec
xor
xor
sbb
out
sbb
or
int3
sti
dec
repnz
out
lea
int3
iret
imul
inc
xchg
and
repz
sub
arpl
cmp
popa
cmp
jg
(bad)
mov
pop
sbb
aas
push
(bad)
mov
jl
je
pop
ja
repz
pop
xor
cli
and
(bad)
pop
cmp
icebp
jmp
push
outs
mov
pusha
icebp
jecxz
cmp
push
inc
scas
mov
loopne
xchg
(bad)
mov
add
xchg
test
xchg
inc
and
scas
retf
movs
push
sbb
(bad)
ret
cmc
test
pop
jo
pushf
call
jmp
hlt
loopne
addr16
mov
sahf
fadd
int
mov
inc
cmp
mov
ds
fwait
dec
inc
mov
ss
(bad)
jnp
lock
pusha
cs
cmps
arpl
cmp
ins
dec
(bad)
fdivp
adc
test
sub
loopne
das
test
sub
and
adc
jmp
push
cld
cs
mov
or
dec
xchg
mov
xlat
sbb
aaa
push
jecxz
xchg
sbb
or
push
loope
(bad)
jmp
lock
pop
mov
cdq
js
(bad)
mov
outs
cs
add
mov
cmp
js
mov
cmps
fcomp
mov
pop
adc
cwde
push
pop
pusha
pop
mov
jge
and
in
mov
inc
mov
push
sub
push
inc
mov
pop
adc
or
loopne
adc
inc
fisttp
jno
dec
mov
(bad)
sar
out
mov
arpl
sbb
(bad)
cmp
cmps
inc
push
fcomp
mov
jo
shr
and
mov
add
push
dec
fld1
xchg
jbe
arpl
pop
add
in
xor
fstp
sti
pushf
cmc
lock
or
mov
add
loopne
out
repnz
mov
cmp
cli
fwait
push
jns
jmp
sbb
fnstenv
sbb
std
aaa
ret
push
int3
aas
rol
retf
(bad)
test
retf
icebp
repnz
push
pop
mov
(bad)
pop
mov
pop
push
and
scas
pop
add
add
std
dec
sbb
dec
jno
dec
sbb
inc
mov
icebp
cmp
(bad)
adc
cmp
scas
mov
lock
sbb
stc
add
test
mov
test
into
test
inc
data16
fst
loope
mov
and
and
jo
hlt
xor
lods
pop
mov
(bad)
cmps
mov
push
sbb
cdq
xor
or
arpl
outs
or
jmp
neg
mov
cmp
cs
int
test
fnstcw
pop
arpl
jge
cmp
cmp
push
dec
or
ins
sbb
test
fs
jmp
mov
xchg
pop
mov
inc
je
daa
clc
push
add
adc
and
sub
daa
or
sub
jns
add
leave
lods
push
mov
mov
std
add
call
and
push
sti
shl
push
movs
es
xchg
xor
inc
push
push
pop
gs
fwait
xchg
test
pusha
dec
in
xchg
and
lods
sub
inc
push
pop
xor
inc
out
mov
int
test
jecxz
inc
dec
push
push
push
inc
jns
loopne
ds
adc
rcl
aam
ret
adc
into
movs
inc
mov
xchg
jl
repnz
push
adc
and
in
cs
pop
jecxz
iret
jmp
adc
adc
adc
push
cld
ret
call
dec
lock
ds
push
inc
daa
cmps
inc
cmp
add
lahf
adc
clc
clc
fidiv
sbb
mov
mov
shl
lds
sub
stos
stos
jae
aaa
xor
sbb
add
inc
push
sbb
test
in
sub
jbe
lods
adc
ins
mov
push
ins
add
xor
mov
bound
cdq
or
mov
mov
push
dec
mov
arpl
cwde
mov
ss
jns
mov
push
lahf
(bad)
out
sbb
das
and
fimul
mov
shl
lods
lods
call
ja
xchg
or
mov
dec
xchg
aaa
xor
mov
stc
into
ret
mov
sub
mov
scas
(bad)
aam
xor
add
stc
test
or
cmp
psubq
pop
in
fcom
mov
add
jmp
push
cli
jle
repnz
push
out
mov
test
retf
mov
and
repnz
or
pushf
sbb
ficom
pop
adc
push
and
pop
inc
nop
popf
sbb
xchg
cmps
mov
aas
inc
pop
jns
sub
mov
ins
xor
sub
in
int
and
retf
and
and
and
sub
enter
adc
in
sbb
cld
lods
jbe
inc
fisubr
gs
inc
adc
and
push
mov
stos
stc
sub
dec
daa
sbb
icebp
fdiv
xchg
data16
mov
(bad)
adc
mov
call
mov
cmp
push
adc
and
mov
lock
and
lahf
rcr
pop
sbb
ret
dec
add
push
mov
loop
cmc
adc
push
jge
mov
aas
push
jle
adc
add
sbb
add
out
aas
push
shl
or
shl
cmp
aas
mov
arpl
je
mov
add
lea
retf
add
jle
sub
sbb
jg
sbb
add
(bad)
mov
fistp
jmp
lds
std
mov
jle
mov
ds
jmp
jbe
enter
rcl
or
outs
mov
(bad)
mov
in
test
(bad)
jecxz
pop
cmp
xchg
mov
xor
mov
add
sbb
pop
add
adc
inc
enter
retf
and
push
and
xor
dec
cld
or
push
fcom
mov
pop
xor
fistp
(bad)
das
pop
inc
jno
cmp
jno
das
add
push
inc
loope
ins
cmp
out
dec
(bad)
xor
pop
pushf
ins
ret
test
das
inc
mov
xor
data16
pop
xor
fistp
mov
lods
xor
mov
dec
retf
cmc
nop
inc
bound
inc
add
cmps
xor
or
sub
gs
stos
and
sub
and
cmp
and
shl
jne
hlt
(bad)
cmp
in
jo
lds
lahf
cmps
pop
jecxz
ins
jnp
das
jno
add
lock
jnp
outs
jbe
pusha
outs
fsubr
adc
or
push
(bad)
pushf
fst
adc
int3
fisubr
lods
mov
jl
imul
arpl
xchg
jns
js
aad
push
xchg
jo
mov
addr16
or
lods
sbb
js
ins
dec
popa
adc
push
add
push
int3
jmp
nop
sti
out
shr
or
outs
or
in
mov
push
scas
sbb
pop
pop
aaa
mov
jno
sbb
cmp
lock
pushf
mov
(bad)
and
push
(bad)
outs
outs
or
rol
idiv
test
mov
mov
iret
jecxz
add
or
punpcklwd
dec
add
xor
addr16
test
mov
stc
cmc
fstp
mov
push
daa
jns
rol
or
and
ja
ja
inc
inc
sbb
adc
loopne
jmp
jo
and
or
sar
les
das
into
mov
enter
pop
dec
adc
xchg
rcl
mov
fwait
ret
add
ficom
or
xor
call
ror
cmps
es
mov
dec
adc
jne
mov
arpl
ret
adc
hlt
or
aad
fidivr
mov
adc
es
xor
dec
into
leave
mov
es
fimul
fadd
je
mov
std
std
push
outs
das
cmp
push
sar
jge
inc
outs
inc
xor
push
and
pop
mov
mov
clc
add
or
mov
cmps
ins
jle
sub
inc
dec
dec
pop
dec
sbb
xchg
pushf
pushf
xchg
xchg
je
and
or
mov
xor
cmp
js
stc
dec
or
sbb
out
pop
(bad)
xor
xchg
(bad)
shr
sub
sub
frstor
inc
rol
test
pop
test
int3
lods
sbb
mov
das
jmp
dec
push
movs
inc
movs
movs
dec
ja
add
fcom
hlt
aaa
add
pop
add
iret
iret
lea
xor
inc
sub
movs
push
inc
outs
pop
pop
jnp
jno
cmps
xchg
push
fnstcw
rcl
xchg
jae
out
ja
mov
loope
jne
sahf
ins
daa
loope
ret
pop
out
cmc
jb
jmp
hlt
shl
mov
mov
xchg
mov
sbb
sbb
(bad)
sbb
std
loope
popa
add
pop
pop
sub
je
cdq
inc
push
inc
or
add
sbb
cmps
lea
cmp
dec
lods
pop
mov
jnp
es
jmp
mov
aaa
pop
sub
xor
mov
stos
sub
stc
jns
enter
push
sub
ret
pop
adc
fs
hlt
aam
adc
les
sub
dec
int3
aam
jp
push
and
lds
mov
fcomi
ss
jmp
pop
in
fadd
xor
fstp
inc
(bad)
cmp
mov
(bad)
out
rcl
add
ja
fidivr
push
push
adc
fcomp
lods
inc
and
cmp
add
outs
mov
stos
or
adc
sub
jmp
add
icebp
inc
sub
aaa
cmp
adc
adc
xchg
pop
and
sub
mov
(bad)
loopne
inc
je
xor
cdq
out
sub
ret
sti
sub
or
das
int3
daa
ret
retf
sub
ret
cwde
sub
xor
mov
add
push
adc
push
or
pop
sub
ja
movs
sbb
rcr
loopne
call
(bad)
mov
out
dec
lods
pop
shl
inc
sbb
mov
pop
(bad)
and
mov
mov
ja
and
push
cmp
cld
cmp
sti
pop
or
jno
mov
inc
ins
loopne
sub
add
sahf
push
ret
cld
mov
je
push
dec
push
jo
loopne
ja
pop
mov
mul
ret
into
sbb
mov
or
push
mov
inc
imul
jb
loopne
das
inc
jno
in
cs
sbb
push
adc
stos
lahf
or
pop
aas
sbb
jecxz
mov
push
pop
pop
xchg
mov
sbb
sbb
lods
sub
rcr
fcom
sbb
mov
add
popa
out
push
xor
rol
adc
or
inc
mov
jl
inc
loopne
(bad)
rcl
add
(bad)
or
ror
sub
sbb
push
lock
xchg
fwait
jecxz
jecxz
pop
fdivr
mov
popa
ja
and
sbb
push
imul
mov
sbb
scas
ret
scas
push
imul
sub
les
and
or
mov
sbb
add
xchg
stos
mov
add
add
test
jecxz
mov
mov
or
pushf
dec
pop
(bad)
push
pop
jbe
fwait
out
test
sub
sbb
ss
sti
lods
lds
and
pop
dec
into
fadd
fwait
sbb
popa
mov
cld
(bad)
(bad)
enter
adc
fldcw
jl
or
mov
mov
jecxz
aas
add
mov
iret
cmps
int3
icebp
je
sbb
mov
jo
loopne
xor
sub
fs
stc
rol
mov
inc
adc
out
stos
popa
loope
xor
push
mov
scas
add
loope
outs
pop
fsubr
jo
mov
and
mov
repz
push
bound
mov
dec
loop
mov
and
loopne
ins
dec
push
jle
pusha
jo
loop
das
sbb
or
or
mov
(bad)
rcr
mov
dec
inc
arpl
push
cli
push
inc
loop
jno
leave
cmp
or
inc
int
(bad)
out
fidivr
fnstenv
push
imul
xchg
repz
scas
pop
mov
push
push
nop
test
adc
mov
inc
test
and
sub
cmp
xor
inc
inc
pop
push
call
in
fst
test
aas
pop
push
hlt
cmc
mov
or
and
xor
jl
gs
mov
rcl
adc
push
jmp
loop
push
lahf
loopne
add
inc
and
push
push
sub
jb
push
ror
nop
pop
pop
inc
out
mov
add
ins
test
and
mov
mov
xor
jne
adc
mov
scas
(bad)
add
call
mov
add
clc
inc
inc
test
es
shl
(bad)
in
adc
ds
mov
mov
jae
fstp
mov
cli
popa
xchg
stc
sub
test
push
inc
push
sub
fdiv
xor
lods
or
loop
xchg
push
loopne
out
pop
popa
dec
add
dec
add
mov
retf
iret
mov
dec
push
out
add
inc
rol
cmp
leave
mov
cmps
lahf
imul
inc
cmp
add
xchg
cmp
and
aas
lds
lods
sahf
idiv
pop
pop
xchg
jge
repz
xchg
jl
mov
mov
movs
icebp
fsub
sti
jp
repnz
ins
xor
adc
mov
mov
push
xchg
es
int
mov
inc
add
cmp
rcl
dec
push
mov
xchg
not
int
nop
sub
add
sbb
data16
sub
dec
mov
rol
sbb
lea
cmp
arpl
and
dec
into
mov
inc
pop
in
xor
xor
sub
fwait
mov
sbb
jb
aam
movs
ret
(bad)
push
scas
rol
pop
adc
ss
popa
mov
push
jae
add
sbb
and
dec
add
xchg
loop
shl
jl
stc
and
jle
mov
scas
shr
sub
imul
mov
inc
test
mov
mov
push
loope
inc
dec
test
adc
adc
dec
out
mov
jl
in
sti
and
inc
pop
xchg
or
push
dec
outs
or
cdq
shl
test
leave
and
movs
jmp
into
in
and
jmp
adc
ret
cmp
mov
mov
mov
or
leave
xor
xor
inc
iretw
sub
mov
stos
and
mov
stos
sub
data16
and
xlat
bound
mov
out
test
out
retf
jl
loope
mov
jmp
stc
arpl
scas
pop
les
inc
nop
sti
ret
sub
leave
loop
stos
sub
and
jne
shl
test
fdiv
ret
icebp
jmp
mov
xchg
ins
cmp
inc
push
outs
scas
jmp
mov
in
jg
or
pop
aam
ja
rol
rol
pop
fdivr
cmps
lock
popa
jl
xchg
xor
movs
sub
inc
ret
cmp
add
js
mov
pop
pusha
and
pop
aaa
ds
(bad)
xchg
arpl
jo
add
dec
push
jb
or
jecxz
(bad)
cmp
xlat
or
sahf
pushf
(bad)
mov
adc
test
rol
arpl
shr
sub
imul
mov
inc
sbb
mov
xchg
add
add
mov
(bad)
dec
pusha
adc
mov
add
js
enter
xchg
add
arpl
repz
adc
hlt
(bad)
loope
push
jecxz
pop
es
ins
iret
rcr
xor
repz
fdivr
pushf
xchg
xchg
popa
xor
fwait
push
xlat
mov
add
into
add
pop
sub
add
popa
mov
sbb
test
jne
dec
or
inc
test
pop
xor
icebp
push
inc
adc
sub
push
test
ret
pushf
add
leave
push
lds
jecxz
clc
pop
jl
loopne
scas
xor
pop
gs
pop
mov
mov
adc
mov
int
mov
add
add
mov
add
sub
daa
sbb
pusha
sub
or
in
mov
rcl
push
lahf
sti
sbb
sub
inc
or
test
sub
ret
in
iret
movs
dec
jecxz
push
sub
pop
inc
lock
add
dec
icebp
bound
xchg
mov
jnp
js
pop
or
out
fistp
pop
jl
xor
mov
pusha
dec
add
cmp
lods
mov
sbb
loopne
add
adc
in
pop
sub
jg
adc
mov
ret
loop
imul
lahf
popf
inc
icebp
mov
loopne
or
xlat
or
out
add
loopne
push
in
(bad)
xor
jp
add
push
pushf
xchg
mov
xchg
popa
adc
inc
cmp
enter
pop
jle
(bad)
xchg
adc
sbb
das
jg
cmp
rcl
sbb
(bad)
xchg
and
stos
shl
imul
cdq
xlat
(bad)
add
and
enter
aas
cmp
gs
mov
mov
dec
add
dec
push
shr
cmp
ret
fadd
or
jmp
inc
xchg
and
add
inc
inc
adc
push
and
and
xchg
xchg
adc
xchg
xor
push
cli
cmp
push
adc
adc
call
jmp
ins
mov
sbb
sbb
jmp
mov
and
jl
push
adc
mov
or
jmp
scas
add
xchg
aad
fcos
or
nop
pop
pop
(bad)
jge
pusha
jge
daa
sbb
cmp
ror
push
lea
inc
cmp
xchg
loop
sbb
fs
adc
leave
imul
aad
popa
inc
xlat
test
pop
pop
mov
xor
aam
ror
inc
outs
xchg
jge
dec
sbb
push
dec
dec
mov
test
mov
add
dec
dec
sar
add
aas
add
mov
add
movs
jg
add
sbb
stos
scas
div
or
push
retf
dec
xor
inc
dec
inc
push
das
rcl
dec
into
mov
clc
fild
inc
dec
dec
adc
add
mov
int3
xor
(bad)
sub
jb
mov
out
imul
sub
xlat
pop
into
mov
out
in
cld
pushf
jmp
(bad)
mov
call
sbb
iret
inc
push
dec
cmp
call
cs
fidiv
mov
mov
rcl
inc
in
or
mov
jb
mov
icebp
dec
dec
mov
mov
jp
loope
dec
dec
icebp
inc
jb
add
jmp
or
xor
pop
(bad)
ins
(bad)
mov
xchg
adc
adc
jg
add
pop
add
call
pusha
xor
cmp
jecxz
imul
mov
mov
dec
push
retf
xchg
sub
adc
jno
in
in
and
sbb
inc
out
add
push
sbb
push
xor
mov
or
push
jmp
jbe
ins
ret
hlt
(bad)
or
in
test
test
fdiv
imul
movs
push
jge
inc
test
dec
inc
dec
gs
cmp
xor
and
push
pop
add
aad
ins
mov
dec
mov
jp
cmp
xchg
loope
add
out
xor
jp
mov
dec
inc
push
pop
mov
sub
push
sub
fwait
ret
fadd
push
fldcw
mov
push
add
aad
pushf
adc
fcmovbe
(bad)
cli
hlt
adc
push
into
sbb
les
add
adc
les
ins
and
test
push
push
and
sub
inc
inc
hlt
cmps
cdq
mov
scas
imul
or
jl
les
dec
(bad)
in
pop
lods
daa
lock
xor
lds
pop
call
sub
fsubr
add
fbld
repz
xchg
adc
paddusb
dec
xlat
jecxz
lahf
es
dec
adc
das
sbb
dec
loope
jp
push
outs
sbb
fucomip
jecxz
pop
xchg
mov
lahf
xor
mov
pusha
icebp
js
pop
add
cld
fadd
cld
xchg
es
mov
outs
and
stos
xor
inc
mov
add
xchg
dec
mov
push
cmc
jecxz
mov
or
aas
jge
inc
xor
pop
cs
sub
js
push
popf
call
sahf
sub
push
clc
xchg
clc
mov
mov
push
les
xor
mov
loop
pop
cmp
xlat
inc
popa
and
adc
sbb
dec
xchg
lea
mov
loop
pop
aam
adc
xchg
inc
dec
add
or
add
jno
rcr
repz
jno
cmp
jecxz
(bad)
sbb
(bad)
int
xor
ss
mov
aaa
cmps
jecxz
mov
pop
fst
sbb
gs
icebp
add
mov
ss
mov
cli
enter
jmp
mov
xor
fcom
retf
es
pusha
int3
outs
add
push
dec
sbb
add
repnz
xchg
inc
mov
sbb
aam
push
stos
cmp
popf
mov
jl
in
xor
in
icebp
pop
mov
jle
add
xor
add
cli
and
push
lea
and
mov
inc
sbb
add
push
sbb
adc
hlt
or
sbb
push
(bad)
sub
fst
cmps
add
mov
pop
jecxz
or
lods
adc
sbb
xchg
rcl
jl
cs
mov
shl
fisub
push
fcmovnbe
loopne
popa
jae
fsub
add
(bad)
push
(bad)
fwait
imul
je
mov
xchg
xlat
cmp
stos
cmp
dec
add
jle
pop
lds
pop
add
call
xadd
pusha
jmp
pop
in
xor
shl
or
(bad)
jns
or
mov
dec
cmp
int
pop
pop
test
cmp
sbb
xor
and
adc
cmc
inc
jle
push
pop
sti
mov
fidiv
and
mov
dec
inc
push
jecxz
inc
into
fcmovb
aas
add
cs
mov
mov
mov
adc
call
lods
in
lods
loope
loope
and
xchg
fidiv
xor
fidivr
or
jo
jl
adc
sbb
stos
iret
push
adc
jmp
push
shl
push
push
xchg
mov
jmp
rcr
sub
or
cmps
loopne
prefetch
adc
fidiv
popa
pushw
sub
sub
pop
or
push
jb
ror
mov
adc
xchg
dec
out
mov
cdq
and
dec
cmps
xor
mov
add
inc
enter
push
cmp
sub
retf
or
repnz
push
aam
(bad)
repnz
xor
ja
scas
dec
out
and
lods
and
fwait
lahf
inc
push
cmps
add
inc
xchg
xchg
nop
sub
mov
push
mov
sub
shl
xchg
pop
rcl
adc
enter
jmp
cmp
xor
push
stos
xchg
call
inc
push
ret
inc
add
(bad)
add
vmread
jle
out
test
mov
pop
xchg
mov
mov
cwde
hlt
lods
sbb
mov
outs
ins
call
add
and
loopne
add
test
mov
shl
cdq
cdq
xor
retf
xor
push
inc
inc
inc
push
jmp
jmp
sub
add
sbb
push
mov
adc
bound
and
lds
sar
inc
cmp
push
(bad)
mov
(bad)
lahf
outs
ret
addr16
out
rcl
jecxz
scas
pavgw
jmp
inc
jl
loope
in
fdiv
jb
mov
pop
call
pop
adc
bound
adc
xchg
and
ficom
and
stos
mov
xchg
jmp
add
mov
arpl
or
sbb
mov
push
xor
inc
cs
mov
sub
ffree
leave
call
movntq
add
xchg
xchg
sbb
sub
jle
mov
inc
inc
pushf
daa
xor
push
pop
fwait
mov
mov
jne
jae
xor
sbb
push
popa
fcmovne
jbe
(bad)
mov
ja
neg
jge
mov
mov
test
bound
cmp
add
dec
jb
imul
add
jne
push
scas
inc
inc
sahf
aas
jmp
add
jo
aaa
or
inc
inc
xchg
cmpps
ja
ret
xchg
adc
sbb
mov
mov
movs
mov
inc
nop
xchg
sbb
mov
call
es
xchg
xlat
mov
add
push
dec
out
sbb
mov
mov
mov
sahf
jge
pop
pop
in
arpl
rcr
xchg
xor
lods
aad
jl
mov
mov
loope
test
hlt
add
test
pop
cdq
test
xor
add
test
cmp
loopne
and
xchg
dec
lock
xor
xor
add
cld
sub
clc
fcomp
dec
or
mov
xchg
icebp
jmp
cmp
jnp
or
imul
loope
adc
push
sub
repz
push
lock
push
loopne
dec
js
shl
outs
enter
xor
adc
test
add
fwait
rol
mov
adc
test
pop
into
ins
lods
(bad)
daa
rol
push
xor
fnstcw
adc
ror
jmp
inc
cmp
push
add
add
cmp
xor
cs
or
add
cdq
idiv
dec
inc
add
jmp
push
iret
add
sub
and
adc
test
add
cmc
adc
dec
inc
mov
adc
dec
fistp
inc
in
int
rcr
lahf
push
adc
add
jns
add
dec
sbb
(bad)
(bad)
loopne
push
xor
ins
mov
or
lock
ins
cmp
push
in
mov
jecxz
(bad)
call
cmp
cwde
stos
popa
push
scas
loopne
pop
xchg
frstpm(287
mov
add
retf
mov
sub
movs
mov
push
test
xor
add
adc
nop
inc
mov
stc
adc
iret
mov
jl
jno
rcl
pop
cmps
add
add
and
or
or
cs
cmp
pop
outs
cmp
xchg
or
ret
sub
les
xor
push
pop
sub
cwde
pop
and
cmp
mov
xlat
push
in
icebp
push
loopne
dec
adc
mov
add
pop
sub
ror
add
cmp
dec
cmp
(bad)
and
jbe
sub
(bad)
fcomp
dec
push
jmp
adc
loopne
add
xchg
ret
sbb
add
pop
js
push
sbb
or
bound
retf
in
fadd
xor
sub
ss
ret
jle
xor
mov
cmp
or
jno
inc
add
sbb
jo
test
ja
test
xor
aas
out
mov
xchg
dec
div
push
add
cli
sar
dec
into
mov
cmp
dec
pop
push
xor
push
push
mov
xchg
add
pusha
push
adc
inc
inc
dec
in
popa
jmp
or
cmc
push
add
call
xchg
mov
aaa
sub
loope
in
push
inc
outs
and
movs
and
adc
push
pop
cmp
std
call
mov
jns
int3
iret
inc
js
and
adc
test
popf
inc
cmc
xchg
pop
sbb
sbb
xor
outs
out
ret
movs
mov
adc
ret
cli
pop
dec
add
in
pop
pop
outs
js
add
xor
adc
mov
(bad)
push
rcl
pushf
inc
cmp
adc
mov
movs
out
and
neg
out
add
cmps
jge
or
jb
jb
inc
jo
xchg
xchg
sub
mov
mov
std
add
lock
in
mov
fs
xor
pop
pop
jae
out
mov
mov
les
sub
adc
push
jmp
xor
push
popa
xchg
xlat
aam
or
inc
add
xor
cmp
movs
cmp
enter
rol
mov
ins
or
sbb
adc
inc
inc
inc
adc
(bad)
out
fdiv
xor
mov
jbe
xor
outs
das
add
rcl
(bad)
icebp
aaa
add
retf
div
je
aaa
loope
loope
and
jo
div
pop
push
nop
jne
retf
(bad)
xchg
mul
dec
and
pop
test
xchg
js
stos
ins
push
push
std
leave
rol
pushf
jle
rol
fnstcw
lea
add
cmp
xor
dec
into
jae
fmul
cmp
pop
jl
adc
popf
fmul
adc
mov
clc
daa
pop
mov
adc
xor
sbb
inc
fdiv
mov
mov
adc
adc
mov
pop
xchg
pusha
inc
inc
xchg
inc
loope
mov
adc
and
adc
adc
jbe
adc
xlat
loop
adc
mov
xor
sub
push
sbb
retf
xor
sahf
mov
xchg
sbb
jo
add
ds
add
sbb
mov
imul
sub
fiadd
sub
pop
sub
xor
add
sar
int3
xor
(bad)
mov
fnsave
popa
fucomi
jle
sbb
ins
test
ret
jne
pop
pop
or
jne
xchg
aad
jecxz
and
sub
daa
dec
xchg
or
popf
(bad)
bound
je
sbb
mov
loop
aam
inc
mov
ins
sbb
rol
aad
sbb
mov
xchg
and
and
daa
inc
add
dec
xchg
shr
retf
cdq
xor
pop
inc
(bad)
sub
int
pop
fdiv
sub
jecxz
mov
jmp
pop
(bad)
xchg
xor
jg
rcl
mov
ror
dec
pop
dec
rol
xor
test
test
adc
mov
ret
test
cdq
sub
adc
xchg
pusha
popa
push
push
outs
cli
clc
lock
test
out
mov
xchg
into
pusha
(bad)
add
push
jb
mov
add
sti
add
mov
outs
add
jecxz
jmp
aaa
ret
xchg
mov
ret
mov
mov
pop
cmp
mov
daa
sub
call
add
pushf
sbb
inc
popf
icebp
test
inc
pushf
popa
sub
mov
inc
stos
mov
jl
test
outs
rol
mov
or
out
outs
shl
ja
repz
cs
lahf
outs
cs
cmp
push
lock
lods
js
jb
daa
sti
jae
test
cs
xchg
cmp
xor
pop
(bad)
lock
jnp
ds
dec
(bad)
mov
sbb
and
or
test
or
mov
adc
add
adc
loope
dec
sti
mov
fs
xchg
lds
or
neg
cmp
push
sub
mov
push
sub
jge
or
inc
imul
mov
mov
jnp
lods
xor
mov
jne
adc
mov
xchg
inc
mov
or
pop
xlat
push
cwde
jae
or
pop
in
mov
sub
loop
add
push
xor
adc
test
mov
gs
and
and
pop
add
out
mov
cmps
adc
jo
lds
aas
mov
sbb
inc
je
iret
add
test
pop
jo
xor
fcomp
jno
iret
or
data16
pop
mov
cwde
pop
and
lods
push
ret
add
jl
imul
push
dec
in
mov
loope
push
ret
adc
ds
adc
xchg
and
call
fld
out
push
jp
or
mov
je
(bad)
icebp
out
sub
jle
loopne
jns
add
pusha
rol
scas
xchg
loopne
add
call
mov
ret
sub
cs
add
popf
pop
cwde
pop
mov
arpl
mov
ret
dec
ins
xor
ret
cmp
push
nop
les
xchg
ret
pop
cld
cdq
stos
mov
pop
and
enter
sub
sbb
idiv
neg
ror
push
xchg
clc
xchg
xor
retf
cmps
out
and
cmp
push
and
adc
mov
leave
in
js
mov
add
add
pusha
mov
dec
pop
imul
pop
pop
js
jns
xor
and
sbb
and
xor
adc
jmp
test
add
out
(bad)
jge
pusha
arpl
ret
dec
dec
mov
fmul
xchg
ficom
aad
inc
xchg
jb
dec
fdivr
cmp
aad
or
add
(bad)
cmovb
or
scas
xor
dec
int3
retf
leave
es
daa
(bad)
dec
add
cmp
adc
and
sahf
mov
sbb
sbb
xchg
mov
call
and
cmp
jne
pop
adc
retf
mov
jne
sub
inc
jl
daa
adc
xchg
pop
push
or
addr16
sub
inc
dec
inc
lahf
test
scas
ret
pop
mov
and
push
xor
icebp
hlt
pop
test
cmp
adc
xor
mov
or
xchg
arpl
sbb
mov
add
mov
ror
and
imul
ret
cmp
gs
adc
cmc
cmc
int
dec
add
add
add
mov
and
sbb
xor
scas
mov
push
or
mov
jbe
sub
inc
inc
inc
add
push
jmp
and
jno
ds
adc
or
scas
aas
add
cmp
and
test
int
pop
jp
or
out
sbb
fdivr
ins
sbb
sub
jmp
in
inc
jnp
and
aaa
aam
push
stos
or
mov
push
sbb
imul
in
data16
and
fcom
inc
add
out
dec
dec
fimul
push
je
cmp
(bad)
adc
outs
scas
or
mov
push
retf
xor
xchg
test
sbb
xchg
repnz
cmp
add
mov
outs
cmp
push
nop
sahf
sbb
out
mov
and
dec
dec
icebp
or
rol
inc
xchg
mov
pop
mov
outs
inc
push
cmp
and
mov
adc
sub
dec
jo
mov
and
add
retf
push
loope
into
arpl
data16
mov
sub
sub
pop
push
adc
inc
jge
sub
call
into
xor
into
mov
inc
outs
inc
cmp
and
(bad)
sar
dec
xchg
jmp
and
or
pop
fidiv
dec
test
sub
adc
pop
cmp
inc
sub
push
jns
stos
cmps
sbb
and
popf
xchg
xchg
(bad)
scas
(bad)
cmp
xlat
pushf
mov
jle
push
adc
test
fld
clc
pop
out
repnz
(bad)
dec
ins
mov
out
mov
loop
test
loop
mov
out
in
stos
inc
adc
cmp
cmp
push
mov
mov
xor
sbb
inc
mov
mov
ret
loopne
xor
out
cdq
loop
dec
stos
sar
mov
sbb
pextrw
xchg
mov
pop
add
test
iret
aas
sub
mov
xchg
loopne
push
sbb
cmova
ss
in
xor
arpl
push
and
or
fnstcw
inc
mov
ds
sub
mov
add
iret
data16
and
ins
sub
add
fwait
lock
or
mov
dec
add
hlt
lds
lds
jbe
sti
arpl
pop
ds
jo
movs
cmp
lds
jbe
add
push
out
inc
mov
mov
and
mov
test
dec
(bad)
jnp
pop
add
jo
fimul
fbstp
pop
out
mov
mov
cwde
mov
jmp
(bad)
int3
(bad)
stos
repz
mov
loopne
loope
sbb
mov
add
and
push
inc
sti
pop
add
sbb
xlat
adc
(bad)
shl
sub
and
pop
int
adc
mov
push
inc
jo
mov
xchg
mov
xchg
and
ins
xor
dec
fiadd
xchg
xchg
xchg
cmp
imul
mov
cs
loop
xchg
adc
js
jbe
cmp
ja
add
mov
pushf
stc
(bad)
xlat
sub
mov
xor
adc
cmps
and
mov
and
cs
lods
sar
outs
pop
into
xchg
ss
fmul
inc
sbb
icebp
dec
and
scas
xchg
test
add
jecxz
div
mov
mov
cld
addr16
pop
add
iret
repnz
test
jg
or
xor
retf
mov
xchg
rcr
mov
jle
cmp
cld
gs
jbe
adc
push
adc
(bad)
(bad)
mov
pop
stos
add
cmp
loop
scas
xor
test
les
or
lods
int3
inc
dec
add
xchg
xor
jbe
ja
mov
mov
leave
cmp
retf
push
outs
push
mov
and
shl
and
mov
and
push
rcl
or
repnz
pop
ror
pop
mov
pop
xor
xor
sub
mov
fsubr
sub
lea
mov
or
jge
pop
xchg
lock
cmps
movs
and
push
stos
scas
xor
rcl
in
cmc
mov
ror
(bad)
(bad)
or
rcl
xchg
cmp
add
mov
xchg
xlat
adc
cmps
cmps
and
cmp
mov
mov
sbb
and
jmp
out
fwait
(bad)
call
(bad)
or
push
fsub
popa
pushf
rol
movs
add
std
pushf
loop
and
and
xor
rdtsc
and
stc
movs
test
dec
and
sub
arpl
and
sbb
pushf
repz
ss
popf
repnz
adc
stc
lea
movs
mov
sbb
mov
movs
mov
cmp
pop
push
push
push
nop
push
adc
mov
fwait
xor
add
dec
dec
dec
mov
dec
neg
adc
cmc
jne
ins
mov
pushf
popa
jg
dec
ja
loopne
mov
xchg
leave
int3
mov
jl
aaa
adc
ret
in
mov
mov
and
xchg
dec
adc
movs
in
in
and
adc
sub
inc
and
and
iret
and
push
add
inc
jns
cmp
xchg
les
call
outs
xor
popf
and
repnz
in
test
sbb
sub
clc
(bad)
jp
dec
ja
sub
mov
adc
test
mov
or
push
mov
aas
or
or
scas
(bad)
jp
jns
xchg
daa
ret
popa
inc
fldcw
adc
dec
or
call
jp
or
cmp
jo
add
jge
pop
dec
cmp
popf
adc
inc
cs
out
sar
rcr
adc
adc
(bad)
leave
jno
test
sub
or
imul
dec
mov
es
adc
gs
retf
pop
inc
push
test
jge
mov
sub
in
mov
out
mov
jo
xor
inc
cmp
push
jno
hlt
adc
pushf
test
mov
push
fimul
dec
adc
mov
call
add
inc
lds
and
push
popa
mov
and
inc
jp
sar
in
adc
jmp
inc
(bad)
mov
xchg
push
jl
pop
cdq
adc
jb
xchg
out
cs
lods
fst
icebp
aas
in
aam
(bad)
jo
adc
cli
sub
cli
dec
fcom
icebp
out
cmps
mov
pop
xchg
sbb
test
rol
mov
aas
inc
fs
cmps
vpaddusw
inc
inc
(bad)
pop
or
jno
push
retf
lods
push
pop
cwde
aad
das
aad
fsubr
(bad)
mov
dec
inc
pushf
popf
data16
(bad)
cmp
std
jne
jno
popa
icebp
mov
pushf
(bad)
push
loopne
pop
arpl
mov
jo
add
push
or
push
loope
cmps
xadd
sbb
iret
(bad)
add
lock
xchg
cmp
mov
jno
ror
or
add
lea
sti
jno
dec
add
push
fcmovne
jo
inc
dec
sub
jo
cs
pop
jbe
loopne
out
js
bound
xchg
mov
cmp
cmp
xor
out
mov
add
mov
popa
xor
or
sbb
ins
lds
fcomp
mov
sub
ror
dec
adc
sub
(bad)
push
adc
mov
inc
loopne
into
or
movs
or
fbstp
cmps
gs
mov
aas
add
out
xor
(bad)
jecxz
mov
ret
shr
(bad)
dec
sbb
mov
ins
cwde
sub
popf
mov
dec
out
gs
test
pop
xchg
inc
add
inc
rcl
movs
mov
and
movs
retf
push
xchg
and
pusha
mov
add
nop
inc
cmps
mov
add
or
clc
xor
sbb
ret
xlat
loop
js
jl
xchg
xor
std
out
loope
test
loope
xchg
pop
push
test
push
pop
test
int3
scas
push
shl
or
sbb
or
jbe
std
xor
lods
(bad)
fld
gs
add
enter
cmp
mov
dec
(bad)
clc
cmp
lock
add
pop
xchg
int
sbb
cmp
cmps
js
dec
push
out
mov
sar
and
and
js
and
js
dec
in
mov
retf
adc
mov
scas
into
sub
lea
fsubr
xlat
mov
sbb
(bad)
dec
inc
dec
ins
mov
(bad)
xor
aaa
jecxz
aaa
xchg
mov
or
jp
pop
sbb
push
xchg
int
jecxz
mov
xlat
dec
aas
fld
and
pop
mov
mov
adc
and
push
or
cmp
mov
dec
inc
jl
cmps
mov
and
sub
cmp
idiv
icebp
push
mov
or
xchg
inc
inc
inc
or
dec
pop
cmp
xor
push
imul
add
fdivr
xor
mov
pop
push
xor
xor
xor
and
out
dec
jo
bound
pusha
pop
ja
add
push
push
inc
adc
sbb
push
cmc
in
push
mov
adc
xchg
and
mov
add
adc
adc
add
jo
std
retf
int
push
adc
nop
leave
or
dec
movs
adc
movs
xchg
repz
dec
xor
mov
lods
inc
fdivr
inc
ficomp
leave
jno
in
mov
mov
bound
data16
stos
les
xor
enter
retf
ins
cdq
gs
dec
push
push
aas
and
in
sti
out
mov
push
outs
mov
pop
fs
inc
inc
inc
push
int3
scas
jg
(bad)
sub
cmps
push
test
loop
cwde
sahf
es
mov
cmps
mov
lods
mov
mov
pushf
fmul
mov
test
jbe
dec
jae
mov
pop
bound
xchg
lds
and
enter
lahf
xchg
sub
xchg
sub
test
push
lock
(bad)
aad
test
mov
enter
mov
pop
addr16
ins
in
xchg
cmps
add
cmp
movs
mov
jl
cmps
cli
mov
je
div
sbb
cmp
sbb
and
sti
outs
stc
jg
add
xchg
push
in
fild
sub
adc
lahf
sub
nop
ss
into
into
adc
pop
imul
and
pusha
jecxz
pop
sub
out
rcl
bound
dec
mov
pop
imul
fs
loop
imul
or
sbb
mov
repz
xor
mov
mov
push
mov
retf
sti
int
ins
ficom
(bad)
leave
or
jecxz
call
mov
adc
jbe
xor
mov
les
xchg
nop
in
fld
aaa
mov
loope
out
and
push
adc
pushf
or
cs
repnz
in
or
lods
into
bound
xchg
fnstsw
(bad)
mov
stos
add
xor
aaa
daa
mov
xor
fiadd
test
int3
xchg
call
jns
add
movs
gs
adc
das
push
fimul
fcomp
leave
lea
push
(bad)
gs
call
fstp
bound
inc
or
add
xor
xor
in
(bad)
mul
push
mov
ins
stc
fnstsw
or
leave
call
sbb
bound
inc
add
ror
mov
and
cdq
dec
dec
arpl
mov
leave
xor
movs
or
xlat
nop
sub
xchg
aam
imul
cmp
dec
or
xchg
test
fwait
push
inc
or
xor
mov
sub
pop
aas
out
mov
sbb
pop
ins
mov
sti
div
popf
pop
(bad)
out
outs
stos
add
mov
test
pop
dec
cdq
xor
dec
push
iret
out
and
sub
mov
in
push
xor
addr16
std
jno
jb
lods
sbb
push
scas
out
pop
sub
cs
in
mov
jo
jmp
arpl
dec
or
xor
jnp
or
fsub
test
(bad)
mov
pop
pushf
jns
adc
or
add
pop
mov
test
movs
call
mov
mov
imul
jmp
js
fidiv
ficom
add
add
cmc
pop
add
rcr
jnp
sbb
pop
fmul
fstp
(bad)
daa
sti
mov
dec
inc
(bad)
(bad)
stos
push
push
push
xchg
dec
xor
sub
fsub
enter
ss
sbb
imul
lods
mov
enter
rcr
mov
xor
mov
nop
and
sbb
push
or
lahf
mov
iret
aad
lock
dec
add
outs
retf
loopne
mov
xchg
lahf
pcmpgtd
ret
jge
pushf
jge
adc
repz
ins
cmp
in
ret
sbb
push
cmp
jmp
mov
hlt
xor
jo
and
push
sahf
retf
leave
lahf
movs
inc
test
mov
mov
pop
inc
mov
adc
out
scas
aaa
lahf
ds
gs
pop
dec
int
mov
nop
out
sbb
not
out
js
sahf
mov
fmulp
mov
std
cmp
ds
mul
(bad)
out
mov
out
jg
xor
loope
data16
ins
sub
mov
xor
daa
cld
lea
dec
mov
pop
xchg
jno
shl
out
jb
xchg
cmc
pop
int3
mov
call
(bad)
in
mov
pop
mov
cli
lods
loopne
add
(bad)
cld
je
stos
pop
retf
test
cld
loope
je
ds
mov
mov
and
(bad)
sub
jg
add
mov
or
jle
sti
in
xchg
or
pop
mov
(bad)
aaa
imul
push
outs
pop
add
dec
clc
mov
dec
arpl
mov
fstp
idiv
loope
cmps
pop
cmp
xor
cdq
iret
cmp
lds
cmc
je
xchg
push
stos
es
neg
jno
pop
out
mov
pop
imul
popa
push
aas
sbb
lds
or
jecxz
hlt
xor
repz
in
repz
test
add
push
jle
popa
and
imul
or
pop
xor
xor
aad
jo
or
dec
or
xor
xor
cli
call
sbb
loopne
in
repz
leave
and
xchg
scas
cmps
and
mov
es
repz
stos
xchg
in
sbb
add
jae
sub
push
pop
cmps
into
sub
push
call
xchg
into
jg
push
mov
dec
je
stos
push
call
mov
xchg
xchg
xchg
lahf
(bad)
mov
adc
dec
dec
fnstcw
jno
ins
push
xor
stos
mov
test
ins
daa
inc
loopne
fmul
xchg
clc
in
pop
sbb
cmp
xchg
xor
arpl
stos
mov
xchg
adc
out
das
adc
packuswb
or
jne
and
pushf
(bad)
cmp
and
aad
adc
retf
add
add
call
sbb
jb
out
push
sahf
clc
pop
clc
arpl
(bad)
xchg
xchg
sbb
mov
mov
cmps
pop
int3
addr16
iret
jge
inc
iret
je
hlt
imul
fidiv
addr16
je
add
call
ja
inc
jo
mov
inc
outs
jbe
inc
inc
push
inc
inc
inc
inc
mov
mov
cmc
push
xchg
mov
mov
(bad)
test
jmp
(bad)
fistp
push
inc
fist
add
in
mov
rcr
pushf
dec
jle
or
jle
call
ror
outs
mov
pop
inc
mov
cwde
fcomp
add
aas
scas
cmp
jb
or
mov
clc
push
sub
pop
xchg
push
mov
sub
mov
jmp
push
add
or
imul
mov
mov
nop
adc
jbe
dec
dec
or
jae
(bad)
xchg
pop
xor
out
mov
xor
mov
mov
mov
push
push
jp
aaa
mov
mov
mov
jb
push
(bad)
arpl
or
movs
(bad)
mov
xchg
sbb
daa
daa
test
bnd
push
test
mov
and
or
adc
push
pushf
xchg
xchg
push
scas
push
add
xchg
xchg
in
retf
and
mov
adc
int
inc
daa
les
or
adc
add
or
jmp
inc
sub
sub
hlt
or
or
adc
xlat
pop
dec
outs
dec
mov
inc
ds
ins
test
loop
imul
es
sbb
add
lahf
dec
jae
or
adc
inc
jp
mov
mov
bound
jne
mulps
cmp
and
popf
jle
add
imul
cmc
cwde
xlat
in
test
mov
push
sbb
fimul
jecxz
add
dec
fwait
stos
cmp
xor
mov
mov
fdivr
mov
shl
shl
rcl
push
jo
out
or
vpaddw
rcl
dec
pop
sti
aad
retf
push
jmp
cmp
aas
cmp
fisubr
cmps
sahf
scas
pop
xlat
xlat
ret
cmp
stos
in
pushf
jge
and
push
cmps
rcl
test
mov
ins
jmp
jl
add
mov
dec
loop
imul
loope
xchg
div
sar
mov
popf
dec
mov
fistp
sbb
jne
js
adc
mov
xchg
iret
out
in
pop
jne
cmp
fnstcw
xchg
sar
sub
inc
cmp
test
arpl
xchg
fcom
dec
xchg
bound
mov
sbb
add
sub
icebp
pop
inc
sahf
add
out
push
xlat
cs
aas
add
call
mov
or
in
into
adc
int
cld
mov
leave
loope
mov
cmp
jmp
loopne
cdq
sbb
fadd
cmc
pop
iret
rol
outs
(bad)
loope
add
mov
aam
pushf
inc
leave
cmp
push
iret
mov
mov
xor
xchg
and
sub
xchg
mov
out
dec
sbb
leave
nop
or
repz
sahf
ins
rol
jl
jmp
scas
ins
mov
jmp
call
sahf
push
xor
cmp
push
sbb
pop
retf
or
clc
sub
mov
inc
push
out
push
add
jp
scas
enter
mov
cmp
(bad)
dec
jecxz
mov
xor
push
scas
ds
aad
jge
push
or
fcmovu
jbe
jle
adc
aam
or
jle
adc
push
pop
jmp
out
mov
or
call
(bad)
stc
pushf
mov
xchg
and
data16
pop
add
popf
and
add
fxch
out
xchg
popf
sub
call
fnstcw
lods
ins
mov
pop
imul
mov
dec
mov
push
xchg
dec
shl
jecxz
jecxz
aam
mov
pushf
shr
int
pop
retf
test
adc
fadd
inc
cmp
mov
jo
push
dec
jmp
enter
test
int3
xchg
pushf
dec
adc
inc
inc
mov
pop
or
xlat
fisttp
dec
dec
push
pushf
pop
sbb
add
frstor
cmp
(bad)
ins
add
cli
pop
imul
sub
sub
and
sub
cmp
jno
adc
mov
add
push
call
add
adc
imul
icebp
push
mov
push
imul
pop
neg
shr
sti
push
call
enter
fimul
es
push
es
push
pop
pop
inc
inc
dec
sub
cmp
adc
mov
sub
sub
xchg
mov
xchg
mov
nop
fild
inc
jnp
add
sbb
xchg
xchg
inc
dec
push
cmp
iret
adc
jb
leave
xchg
fcomip
hlt
repz
dec
imul
cmc
and
iret
(bad)
xchg
les
bound
lock
ror
inc
test
or
xor
cmp
mov
mov
(bad)
mov
push
push
repnz
aas
jg
xor
push
push
pop
sub
inc
jne
cmp
outs
sbb
lods
stos
jg
pusha
(bad)
add
imul
pop
mov
cdq
mov
scas
add
dec
mov
sbb
mov
enter
mov
fsubp
push
call
stos
dec
mov
aas
xchg
scas
ins
call
xchg
and
(bad)
cdq
cmc
cmp
aad
push
(bad)
ss
movs
addr16
push
pop
es
pushf
and
movs
mov
or
adc
push
in
push
out
stc
inc
loope
lods
popf
lock
adc
js
dec
xchg
dec
arpl
mov
jb
int
add
or
sbb
test
push
jno
dec
sub
inc
pop
es
adc
test
push
add
fst
fs
adc
in
mov
xlat
ret
pushf
into
into
or
je
lea
or
call
lods
jmp
(bad)
enter
sbb
ins
pop
pusha
mov
mov
dec
mov
sbb
mov
cmp
into
repnz
push
sbb
imul
int
loop
push
add
xor
sub
pop
xor
std
add
hlt
in
fcom
pop
ja
test
or
mov
pushf
ins
mov
mov
xchg
out
add
daa
mov
push
call
dec
dec
fld
jns
clc
in
mov
leave
out
fs
pop
popf
dec
jle
or
jle
cmp
pop
loopne
cmp
push
scas
pop
and
test
add
test
push
push
pop
xchg
and
and
push
xchg
inc
cmps
mov
lds
mov
pop
sbb
outs
clc
mov
das
es
sbb
aam
(bad)
mov
mov
out
jo
pop
xchg
dec
inc
fdivr
popf
sbb
push
jo
retf
pop
mov
sbb
stos
fwait
lds
lahf
xor
jl
arpl
sbb
shl
lea
cli
repz
cmc
pop
sub
jle
mov
out
pop
jnp
adc
pop
and
xor
mov
repnz
loope
lods
loop
(bad)
js
and
add
inc
jno
mov
retf
test
pop
dec
xchg
leave
sbb
mov
xchg
ins
cmp
cmp
push
mov
jp
adc
loop
pop
mov
test
mov
pop
fidivr
sahf
loopne
mov
js
xor
into
push
mov
clc
inc
jno
dec
sbb
ss
icebp
jo
sbb
mul
iret
(bad)
repz
jnp
cmp
pop
enter
jg
sbb
retf
movs
mov
das
aam
inc
scas
add
loop
test
jbe
inc
stos
push
add
popa
jnp
mov
rol
mov
repz
(bad)
mov
sahf
pop
add
add
retf
jae
lock
cld
imul
fist
std
test
lahf
add
rcl
push
push
outs
loopne
push
and
or
out
(bad)
je
rcr
mov
sbb
mov
sbb
repz
dec
lahf
fisubr
cli
cmc
xchg
dec
sub
dec
jg
cmp
mov
stos
inc
cld
out
add
movs
sub
add
(bad)
out
adc
out
fadd
int3
test
sub
lahf
(bad)
mov
std
icebp
mov
fsubrp
jns
dec
mov
jl
jns
jge
(bad)
out
(bad)
stc
cmp
mov
pusha
bound
mov
ss
repz
push
mov
loope
jns
loope
add
pop
push
dec
pop
jle
xchg
shl
sbb
scas
jle
sub
jecxz
mov
push
jg
xor
loope
sbb
sub
cmp
movs
and
sbb
jne
mov
fild
fisttp
clc
jge
xlat
out
mov
ficom
jnp
dec
pop
into
inc
out
rcr
popa
cmps
sar
out
xchg
jecxz
shl
out
mov
and
jb
and
mov
sbb
repz
int
cmp
xchg
mov
loop
adc
fdivr
(bad)
out
mov
inc
mov
mov
pop
adc
add
xor
rcl
mov
aad
pop
outs
mov
lea
pop
mov
jae
dec
and
fld
es
lock
aaa
sahf
push
cwde
inc
inc
jbe
mov
imul
sbb
iret
lods
pop
cmps
cmps
lods
aad
sub
inc
pushf
jb
pop
pop
push
out
je
dec
xlat
dec
pop
xchg
inc
cmp
popa
xchg
cmp
std
sbb
ror
sbb
adc
mov
(bad)
and
lds
xchg
sub
aad
jl
xchg
mov
test
adc
adc
mov
retf
or
jmp
mov
popa
data16
jp
call
stos
in
jne
test
dec
dec
dec
adc
stos
dec
retf
or
adc
mov
cwde
cmp
jbe
les
nop
xchg
call
adc
rcl
dec
iret
int
sub
adc
cld
add
add
push
jl
xlat
pop
sbb
test
push
push
add
pop
outs
and
mov
(bad)
retf
iret
and
pop
fsub
or
rcr
push
addr16
inc
in
sbb
jno
jbe
(bad)
into
push
ja
xor
movs
cmps
(bad)
push
pop
xchg
sub
lods
mov
mov
push
leave
ins
mov
sbb
popf
imul
cli
xchg
call
add
inc
cmps
or
int3
or
dec
into
iret
int
pop
xchg
lahf
std
pop
dec
popa
div
sbb
test
or
mov
fsubr
jo
mov
xchg
imul
lahf
and
pop
fidiv
call
jne
sbb
shl
inc
lods
pop
xor
push
in
jmp
loop
sub
imul
ror
xchg
add
cld
std
pop
test
sbb
xor
sahf
ficomp
mov
out
jb
jl
movs
lock
xor
cmp
std
sub
add
add
push
xchg
imul
test
hlt
int3
adc
push
mov
js
mov
and
sub
sub
ins
in
ss
pop
(bad)
outs
jbe
out
arpl
(bad)
and
fdiv
ret
dec
lock
popa
sahf
jge
xor
aas
mov
dec
xchg
dec
mov
movs
mov
outs
mov
scas
mov
adc
not
sbb
(bad)
jb
popf
out
xor
dec
sub
or
xchg
clc
retf
mov
pop
sbb
mov
ja
pop
not
outs
sub
adc
inc
pop
outs
fstp
inc
add
fnstenv
sbb
mov
sbb
xchg
and
imul
sub
(bad)
(bad)
sub
jbe
mov
xor
ret
popf
cmc
stos
fdiv
or
jae
cmp
mov
out
imul
pop
jecxz
jo
dec
push
jecxz
ss
sbb
int3
mov
sbb
scas
call
mov
cmps
ds
fwait
retf
aaa
test
xor
sbb
std
xor
outs
pop
shl
push
lahf
movs
imul
xchg
push
aas
xor
add
scas
dec
and
pop
add
(bad)
fnstcw
sub
movs
adc
adc
test
pop
scas
mov
into
aam
jae
mov
xchg
test
jb
cmp
repz
(bad)
lock
sbb
sub
push
in
mov
push
xor
pop
mov
outs
outs
dec
pusha
jmp
jl
push
aas
out
(bad)
ret
stos
js
dec
or
in
sub
stc
pop
add
dec
out
push
scas
pop
mov
loop
in
mov
lods
mov
xchg
int3
sub
mov
xchg
jge
cmp
call
dec
jnp
arpl
sti
repz
jns
ret
pop
int3
and
or
scas
rcl
into
es
out
cs
push
dec
daa
jp
push
sub
cmp
jns
pop
xchg
jns
fst
jl
push
retf
outs
cmp
cmp
cs
sbb
loope
and
pop
outs
out
and
jno
sbb
xor
outs
jno
test
cmovne
jg
cmp
inc
fdiv
jo
sub
sbb
push
xchg
or
cmp
mov
hlt
imul
push
imul
mov
dec
fcmovnb
test
xlat
pusha
inc
jnp
idiv
icebp
lods
in
sti
leave
and
or
iret
mov
mov
jnp
(bad)
jl
push
jl
ins
(bad)
(bad)
or
retf
jo
adc
cmp
(bad)
jne
sbb
jns
jnp
dec
stc
lods
loopne
loopne
mov
imul
sar
(bad)
div
gs
mov
mov
add
dec
call
mov
cmp
lds
mov
xlat
fcomip
out
mov
xor
sbb
enter
adc
dec
jecxz
jecxz
stc
in
stc
mov
outs
add
in
pushf
or
mov
jo
mov
dec
sub
xchg
scas
frstor
imul
mov
push
pop
in
push
sbb
inc
loopne
ds
adc
xchg
push
xchg
cdq
sbb
out
push
movlps
ja
mov
daa
arpl
test
sub
mov
(bad)
dec
es
xchg
cmc
mov
mov
sbb
out
push
jns
(bad)
icebp
ins
mov
ins
addr16
sub
popa
pop
sti
mov
test
test
sahf
outs
push
popf
aaa
or
push
xlat
xlat
inc
dec
ja
in
in
push
sti
mov
sub
sub
cmp
or
nop
and
jno
jne
xchg
repnz
(bad)
shr
les
mov
(bad)
repz
xchg
xor
pop
int
mov
gs
rol
aam
pushf
nop
cmp
imul
sub
sub
icebp
data16
jge
movs
cmc
mov
scas
mov
leave
sub
es
into
dec
jle
test
push
inc
jns
xchg
ins
xlat
and
fucomip
xor
push
sub
fmulp
sub
xchg
icebp
shl
sbb
addr16
or
lods
mov
and
mov
mov
ins
sub
pop
xor
or
lock
xor
add
pop
mov
and
dec
push
cmp
fnclex
in
sbb
je
cmp
sub
adc
sbb
bound
mov
xchg
sub
cmp
outs
fdivr
daa
and
or
dec
ins
sub
in
push
js
js
sub
outs
outs
xchg
or
pop
ret
dec
dec
mov
push
mov
mov
sti
clc
(bad)
sub
jnp
sti
scas
pop
sti
ret
loopne
xor
sar
jecxz
fucomi
stc
jg
add
imul
pop
adc
xchg
xchg
push
push
push
pop
pop
js
jno
out
stc
jns
dec
fisub
jno
pop
inc
xchg
sub
mov
daa
cwde
xchg
loop
sub
bound
pop
inc
pop
push
adc
inc
pop
pop
sbb
and
enter
outs
enter
inc
add
inc
lods
adc
stos
call
rcr
jmp
rol
push
scas
popf
cmps
push
jmp
bound
mov
sub
xor
call
mov
add
and
loopne
movs
cmps
test
lahf
je
cmc
sub
lock
jecxz
add
adc
out
outs
ret
cs
scas
mov
iret
mov
or
pop
add
xchg
shl
ss
mov
push
pop
jge
inc
push
(bad)
loope
ss
aaa
or
scas
out
push
xor
ss
sub
sub
cmp
and
jno
pop
inc
fmul
aam
ret
pop
xor
outs
outs
or
jbe
mov
out
int
scas
mov
sbb
test
pop
and
jge
rol
jb
out
sub
inc
ins
fisubr
scas
ja
test
mov
in
adc
mov
inc
(bad)
outs
add
inc
mov
mov
mov
adc
cmp
jp
pop
and
sbb
(bad)
mov
xchg
pop
mov
pop
clc
push
fmul
xchg
inc
jge
cmp
mov
xchg
addr16
xor
cli
(bad)
and
sbb
(bad)
int
cli
stos
fs
xchg
jae
jb
daa
sub
push
aad
jle
push
xlat
xchg
cmps
shl
sar
pop
je
fidivr
lahf
(bad)
push
cmps
icebp
sahf
cmp
pop
jmp
call
clc
cmc
adc
inc
dec
(bad)
popf
loop
pop
xor
add
pop
or
js
scas
add
cmp
cwde
test
dec
sub
aam
arpl
mov
xchg
repz
dec
mov
push
xor
push
nop
data16
mov
sbb
xor
push
sbb
in
out
loop
stos
sti
clc
cld
mov
mov
outs
test
cmp
xor
retf
mov
scas
in
out
repz
mov
(bad)
ficom
addr16
sar
pop
xchg
adc
movs
repz
dec
cmc
cmps
repnz
ficomp
fstp
shl
in
sub
es
add
pop
repz
pop
xor
nop
sti
cmp
in
xchg
inc
fs
imul
leave
rcl
loop
sar
inc
add
call
sub
(bad)
pop
add
adc
mov
test
cmps
xor
dec
cmps
adc
aas
in
sub
mov
aaa
out
sbb
push
dec
mov
icebp
inc
sbb
loop
sbb
add
(bad)
dec
imul
mov
lea
sub
sub
push
xchg
imul
xor
add
and
rcr
int
mov
sub
adc
add
addr16
jl
ins
into
xchg
movs
out
(bad)
into
aam
xor
test
add
xacquire
cmp
inc
mov
arpl
js
adc
fs
mov
mov
jns
je
(bad)
fstp
lahf
xchg
not
jb
inc
xchg
mov
adc
mov
sbb
loope
jae
jge
cs
iret
mov
fwait
pop
pop
aas
sub
lds
cmps
mov
bnd
rcr
jl
inc
xor
sbb
add
cdq
aas
push
jno
fild
std
test
repnz
sub
sbb
in
cmp
sub
mov
aad
outs
xchg
arpl
stos
and
mov
aaa
dec
test
fmul
(bad)
in
mov
fistp
(bad)
arpl
ja
adc
jnp
or
out
fadd
push
add
pop
out
addr16
or
movs
ja
cdq
adc
pusha
mov
(bad)
mov
add
out
cmps
scas
mov
mov
dec
retf
leave
sub
and
and
jecxz
jae
xchg
dec
push
imul
repz
jmp
pop
daa
out
fst
and
adc
jge
and
xchg
cs
aad
lods
adc
mov
shl
add
sub
push
imul
sbb
mov
retf
iret
retf
and
cmp
jno
mov
aad
jg
mov
enter
inc
fs
push
pop
push
dec
inc
push
or
addr16
dec
test
add
pop
neg
inc
dec
sub
fnstsw
aaa
(bad)
xchg
sbb
inc
pop
outs
and
and
pop
push
inc
jmp
in
mov
add
mov
(bad)
retf
push
retf
xchg
mov
fldenv
das
pushf
and
test
dec
add
cmc
mul
scas
xor
lea
xchg
xlat
scas
pop
mov
mov
les
stc
call
xor
xchg
cwde
cwde
push
xor
bound
mov
or
imul
dec
mov
adc
add
rol
loop
loope
dec
loop
jecxz
inc
dec
push
add
adc
and
mov
or
rcl
aad
fist
je
popf
popf
xchg
fistp
hlt
rol
xchg
jmp
add
dec
nop
lods
neg
and
aam
ficom
in
les
imul
movs
push
std
out
or
out
mov
ins
outs
push
cmp
(bad)
movs
xchg
dec
adc
push
push
aam
les
adc
jmp
mov
nop
out
dec
repnz
mov
jl
cmp
imul
repnz
pop
ins
push
jb
and
xor
pop
lods
lods
je
mov
vshufps
xor
push
clc
cmp
inc
or
(bad)
and
add
es
pop
sbb
out
mov
mov
cmc
push
(bad)
adc
jp
nop
add
cdq
mov
cmp
sub
mov
fidiv
leave
out
outs
rcr
pop
sbb
inc
addr16
movs
cmp
jbe
repz
test
cmp
test
iret
cmps
mov
and
mov
mov
xor
jge
xchg
dec
pusha
jg
mov
retf
and
ss
int3
mov
or
into
inc
mov
xchg
or
add
std
mov
add
pusha
inc
test
mov
fldcw
mul
push
pop
sbb
and
and
mov
cmp
and
aad
aaa
addr16
mov
xor
int
mov
lods
pop
and
mov
lds
test
mov
cwde
cmp
mov
sbb
or
cmps
mov
and
jg
div
enter
sbb
add
jns
inc
and
xchg
dec
stos
mov
mov
test
xor
mov
sbb
aaa
jmp
inc
or
imul
add
pop
aas
inc
add
std
jns
into
cmp
inc
pushf
js
sub
shl
outs
add
lahf
pop
ret
jnp
mov
cmp
dec
inc
jmp
dec
test
(bad)
sbb
pop
lods
in
daa
mov
add
popf
mov
sub
xor
add
ss
dec
pushf
mov
mov
xor
pop
adc
test
mov
fidivr
aam
fwait
xchg
in
pusha
and
test
fwait
push
jbe
or
je
out
pop
pushf
adc
js
push
or
jo
mov
loope
push
out
dec
loop
cli
xor
lods
or
aaa
add
movs
cmp
and
xor
imul
pushf
cmp
lds
inc
neg
inc
xchg
call
dec
sar
iret
pop
fwait
and
push
mov
sbb
(bad)
(bad)
fwait
sar
mov
inc
xchg
mov
mov
mov
pcmpeqd
jo
jmp
mov
das
in
mov
lock
mov
iret
mov
mov
icebp
inc
mov
repnz
mov
(bad)
add
movs
jns
add
pop
or
je
xor
test
mov
sub
arpl
and
and
out
sub
ss
xchg
repz
imul
xchg
pop
ret
xor
(bad)
clc
sub
mov
pop
repz
sub
mov
lahf
repz
xchg
and
setae
das
shr
rsqrtps
mov
fist
les
fnstenv
and
mov
ret
and
pop
cmps
or
imul
sbb
jmp
mov
popf
mov
sbb
cmp
sar
jle
vcomisd
icebp
fisttp
sbb
jmp
lahf
jbe
fld
repz
pop
(bad)
jp
aaa
mov
push
icebp
imul
pop
rcr
dec
in
mov
out
sub
das
cmps
mov
jo
xor
cmp
test
cli
mov
and
dec
xor
mov
call
xchg
lods
fld
cwde
mov
cmp
adc
adc
jbe
xchg
iret
jbe
aam
repz
ins
cmp
xchg
fistp
lahf
lods
fwait
jmp
pop
mov
sti
sti
add
pop
test
lods
xchg
retf
or
or
or
sub
and
xor
mov
icebp
test
imul
xor
aam
adc
jle
lods
aad
pop
cwde
test
mov
jg
jge
dec
mov
adc
sbb
sbb
push
push
jno
cdq
and
fs
xchg
xchg
inc
jbe
push
test
and
push
sbb
(bad)
cmps
jno
xchg
xor
sti
enter
mov
jne
mov
jecxz
jecxz
pop
pop
adc
fsubr
inc
adc
repnz
test
mov
ins
movs
inc
cdq
sbb
cmp
or
mov
into
test
pop
cmovg
movs
ret
pop
and
out
push
cs
mov
mov
pop
je
xlat
popa
bound
lahf
mov
add
cmp
inc
daa
inc
adc
adc
je
push
icebp
loope
aam
ins
adc
push
push
nop
inc
push
fdivrp
mov
pop
test
mov
xor
jmp
jmp
in
inc
sbb
dec
dec
dec
ret
adc
pushf
in
jo
mov
ror
or
xor
sub
imul
icebp
and
retf
and
daa
xchg
dec
mov
sti
in
neg
out
scas
jns
enter
add
lea
pop
pop
pop
jo
push
push
fisub
imul
mov
push
rcr
pop
mov
push
push
dec
es
pop
sbb
mov
or
pop
outs
mov
jnp
rcl
cmp
adc
loop
add
inc
je
add
stos
inc
je
stos
lds
and
out
imul
fwait
mov
jecxz
xor
test
ret
mov
xor
jbe
mov
imul
sub
xchg
xchg
(bad)
push
pop
sbb
mov
adc
sbb
sbb
shr
in
sub
and
stc
push
mov
sub
pop
(bad)
fisttp
into
jecxz
add
push
cmp
jb
sbb
dec
pop
add
repnz
adc
dec
mul
push
rol
sub
loopne
inc
popa
xor
add
hlt
pop
mov
xchg
or
dec
(bad)
lods
cdq
cwde
in
gs
fidiv
(bad)
ss
adc
in
adc
inc
adc
and
in
in
sub
loop
js
adc
movs
xor
call
xchg
out
dec
neg
push
and
push
dec
adc
mov
(bad)
mov
sub
mov
or
xor
inc
jns
mov
jge
mov
inc
pop
push
push
daa
xlat
movs
push
into
push
push
and
inc
aad
adc
add
cwde
in
aaa
outs
mov
daa
add
mov
mov
pop
push
mov
fwait
xor
mov
cwde
dec
int3
adc
cdq
mov
cmp
cdq
push
popf
pop
inc
push
pop
and
jb
fwait
in
je
sar
ror
pop
add
iret
pushf
jp
push
cmp
hlt
mov
mov
loop
cmps
stc
pushf
scas
fwait
lds
push
clc
popa
sbb
jbe
loope
int3
cdq
mov
in
mov
daa
pop
cmp
mov
(bad)
pop
shl
in
add
dec
or
cmp
int3
cmc
mov
pop
xor
pop
scas
cmp
sub
(bad)
std
iret
addr16
test
imul
pop
or
cld
dec
add
cmp
lods
xor
cmp
dec
ins
out
imul
sub
mov
scas
sti
pop
js
pusha
jmp
add
retf
pop
fcom
clc
hlt
scas
data16
jp
or
mov
call
inc
repz
sub
addr16
xor
xor
cmp
shr
mov
in
push
(bad)
loope
jnp
loope
pop
leave
stos
out
stos
mov
in
sub
or
nop
cmp
hlt
jns
jmp
jl
sahf
lods
hlt
in
jb
sahf
sub
push
jno
mov
leave
js
sbb
mov
f2xm1
into
js
out
adc
pop
push
push
repnz
or
fs
xchg
iret
es
inc
mov
(bad)
sbb
mov
add
cmp
xchg
mov
ins
mov
mov
imul
outs
stc
and
iret
cmps
jae
je
jmp
out
dec
dec
sahf
getsec
loopne
mov
(bad)
jmp
push
mov
pusha
sar
xchg
int3
xlat
in
sbb
repnz
jmp
push
mov
icebp
dec
cwde
adc
and
lock
add
or
shl
push
cmp
xor
cmp
xor
cmc
pop
ret
add
mov
cmps
sbb
mov
adc
(bad)
loop
adc
into
jge
iret
jmp
fwait
pop
pop
cmp
shl
jp
jle
rcr
addr16
icebp
imul
jle
add
dec
(bad)
jae
das
loope
cmps
jb
push
xchg
sti
in
pop
cmps
cld
xor
xchg
out
call
ja
std
ja
pop
xlat
ja
jb
gs
aaa
xor
push
and
mov
push
xlat
in
xchg
mov
dec
mov
sub
std
and
mov
imul
adc
inc
add
lock
in
repnz
(bad)
ins
cmp
fsub
ds
lock
repnz
cmp
or
mov
outs
jb
rol
ret
in
cmp
push
pop
push
arpl
mov
ds
jnp
imul
repnz
mov
dec
push
xchg
out
stos
ins
jmp
and
sbb
xchg
inc
xlat
int
dec
retf
cld
cmp
jo
mov
vdivpd
je
call
and
and
mov
scas
cmp
push
retf
cld
cmp
lahf
scas
(bad)
jecxz
adc
in
and
retf
ins
inc
inc
mov
(bad)
rcl
aas
dec
arpl
sub
jmp
xchg
mov
mov
mov
push
inc
popa
inc
test
dec
mov
mov
jns
dec
inc
outs
das
jne
sbb
sbb
and
push
inc
dec
jnp
(bad)
out
jmp
jle
fisub
rcr
pop
mov
sub
cli
fcomp
pop
adc
loop
inc
pop
mov
das
and
sub
(bad)
in
xchg
adc
in
jns
fbstp
repz
xor
das
dec
nop
rcr
test
adc
stos
in
add
mov
int
fstp
xchg
bound
jecxz
cs
imul
add
cs
test
cmp
in
or
or
mov
xor
adc
jo
ss
outs
mov
(bad)
jmp
call
sbb
adc
aaa
inc
add
dec
fdiv
imul
(bad)
pop
fisttp
outs
sub
ins
es
mov
push
xlat
cmps
dec
rcr
cmp
pushf
int3
push
bnd
enter
sub
mov
fnstenv
add
sbb
test
adc
jne
adc
push
icebp
inc
pop
push
mov
jbe
mov
mov
or
scas
mov
mov
xor
sbb
jne
je
sub
fcom
sti
or
in
int3
push
neg
xlat
or
mov
fnstenv
xchg
rcl
pop
inc
push
push
nop
or
sub
dec
daa
sar
add
cli
add
cmps
push
inc
add
jb
call
(bad)
popf
aam
pop
jne
mov
dec
nop
cdq
sbb
mov
push
dec
xchg
into
adc
and
cmp
or
push
mov
mov
sbb
sbb
lods
add
pop
jmp
mov
push
ins
push
fidivr
ret
lods
xchg
push
(bad)
enter
in
ins
xchg
push
fwait
xor
mov
and
xchg
inc
adc
or
rcl
xchg
dec
addr16
sbb
cmp
mov
icebp
in
cmp
shr
cmp
mov
xlat
leave
faddp
int
jne
xchg
sahf
out
dec
mov
test
into
les
adc
scas
jbe
hlt
bnd
mov
aaa
rol
inc
jbe
or
xor
push
and
fcom
call
jne
not
mov
jmp
mov
jecxz
(bad)
adc
sbb
dec
sub
xor
cmps
repz
sahf
push
pop
push
int
loop
sbb
xchg
pushf
push
or
push
scas
push
out
inc
loopne
jbe
repnz
cmps
pushf
clc
inc
fwait
aas
pop
adc
ja
es
jno
jmp
cs
(bad)
jno
push
mov
jno
shl
xchg
sub
add
loop
and
faddp
cdq
aaa
jmp
jecxz
push
jg
add
retf
mov
(bad)
in
xor
fst
shl
mov
in
sub
sti
adc
js
sub
ror
imul
jns
push
xor
push
ret
imul
scas
out
adc
inc
xor
ds
sbb
pop
adc
xchg
xchg
cmp
out
push
sahf
in
dec
out
jnp
movzx
outs
and
pop
pushf
jle
xor
push
xor
sub
ror
out
mov
rol
std
iret
and
ds
add
dec
les
jae
push
sub
xor
sahf
sub
loop
(bad)
push
pop
imul
test
or
call
mov
mov
pop
stos
jae
mov
adc
icebp
push
add
mov
add
cmp
xchg
sbb
cmp
xchg
dec
jns
inc
sti
leave
or
sahf
lea
neg
mov
add
push
push
cs
cmps
mov
fsubr
retf
into
or
xchg
xor
test
dec
fdivr
pop
pop
mov
fimul
out
je
ds
mov
jecxz
jae
call
iret
sti
cdq
fidivr
(bad)
outs
lods
outs
dec
in
retf
loope
or
cmp
jb
ds
add
lock
rol
outs
test
lea
leave
xchg
pop
push
dec
in
lock
add
xor
add
or
jl
fstp
mov
mov
add
test
test
cmps
pop
jo
fsub
mov
jecxz
scas
loope
ja
mov
xor
(bad)
jae
sti
xchg
pushf
jg
sahf
pop
cmp
jmp
jne
mov
loop
push
retf
mov
fistp
(bad)
jecxz
stc
push
cmp
or
adc
xlat
mov
push
sub
dec
pop
push
cmp
mov
mov
(bad)
jmp
(bad)
ja
xor
push
stos
std
aaa
sub
and
jg
rcl
ss
fcmovne
loopne
jbe
(bad)
es
clc
and
fwait
mov
mov
inc
dec
enter
ins
popa
je
add
sbb
ja
rcl
pop
fnstenv
push
jbe
cmp
adc
mov
or
hlt
push
aad
daa
ret
push
ins
mov
mov
clc
lods
je
arpl
idiv
pop
shrd
and
mov
stc
into
fcomp
test
mov
mov
inc
sbb
out
pop
sbb
lods
mov
jbe
dec
cmp
lods
test
push
test
loopne
out
and
mov
add
jmp
add
sbb
(bad)
fiadd
pop
pop
push
imul
ins
pusha
xchg
ret
sub
mov
mov
mov
mov
fwait
test
sub
xchg
sbb
inc
popa
popa
and
rol
test
sbb
ret
xor
lock
sbb
adc
int3
or
push
inc
and
xor
stos
or
mul
push
sub
dec
aam
test
dec
inc
inc
xchg
loope
mov
push
dec
pop
xchg
mov
std
movs
cmp
push
cmps
div
fcmovnbe
push
add
cmc
ins
adc
rcl
rcl
ret
jmp
out
push
in
mov
xor
hlt
adc
jge
mov
sbb
xchg
add
test
push
repz
jo
jl
xor
outs
cmp
fisttp
into
clc
dec
add
sti
cld
outs
jno
add
bound
ss
xchg
out
pop
fist
jae
test
ds
inc
aas
in
ret
jge
sub
mov
aam
mov
jno
dec
adc
popf
inc
push
arpl
jge
lds
push
pop
sahf
inc
pop
gs
lea
shr
rcl
aam
sub
and
dec
add
dec
pop
mov
sbb
mov
sbb
nop
pop
sbb
jle
lea
call
sub
sub
dec
jnp
mov
lods
lods
mov
jne
adc
jecxz
push
movs
mov
add
push
out
dec
test
mov
call
pop
and
mov
add
test
mov
ins
adc
mov
add
mov
aam
pop
shl
icebp
dec
jne
cmp
popf
hlt
ins
pop
mov
jo
rol
data16
jb
gs
mov
xor
rol
int
push
push
push
pop
mov
loop
jne
pop
mov
or
sub
ret
pop
mov
sub
stos
movs
stc
push
and
ficom
rcl
fist
lds
lea
inc
gs
call
sar
ins
fcomp
pop
les
cmp
mov
into
ja
jns
pushf
scas
cmp
and
push
loopne
xor
adc
jns
pop
dec
mov
pushf
loopne
xchg
aaa
icebp
call
call
push
inc
sbb
cmp
xchg
cdq
adc
fs
jbe
inc
mov
out
sub
movs
hlt
retf
enter
sub
cmp
test
push
and
popf
jle
movs
daa
test
into
and
jnp
xchg
xor
mov
xchg
xor
repz
scas
mov
add
push
dec
pop
aam
neg
cmc
cs
sbb
sub
cld
aad
ret
pop
xlat
psubusw
push
popf
push
(bad)
or
push
mov
int3
lea
out
fdivr
cmc
clc
lods
ja
scas
in
loop
call
ja
out
mov
dec
into
fbstp
int
mov
adc
out
in
jno
sub
ficom
add
bound
loope
sbb
mov
mov
inc
xchg
bound
xchg
push
imul
movs
ins
cwde
lds
mov
lahf
push
(bad)
jnp
xor
and
ss
xchg
ja
icebp
in
inc
mov
cs
push
jo
dec
cmp
aaa
inc
dec
les
cmp
jge
lahf
or
fidivr
int3
aam
ja
sti
xchg
(bad)
in
iret
mov
addr16
and
push
mov
xor
inc
popf
add
jg
cmp
push
or
sub
inc
fdiv
data16
(bad)
sete
mov
adc
(bad)
(bad)
leave
jl
sbb
cmp
cmp
leavew
adc
xchg
imul
jnp
stc
cmc
push
sbb
push
sbb
(bad)
fwait
icebp
inc
mov
iret
daa
pop
repnz
adc
hlt
js
xor
sbb
add
pop
lods
cmps
inc
and
pop
mov
or
add
outs
pop
mov
hlt
or
mov
cdq
dec
mul
inc
in
xor
push
popa
ss
adc
jle
push
out
jmp
jno
lahf
addr16
icebp
popa
fiadd
fimul
in
sub
(bad)
ins
mul
(bad)
loope
scas
out
retf
dec
outs
fimul
or
imul
in
mov
xchg
std
xchg
repz
lock
ds
out
pop
sbb
fild
aad
jge
add
pop
retf
or
push
mov
pop
and
pop
repnz
daa
and
add
iret
out
cmps
mov
xchg
call
loopne
and
test
clc
jmp
cmp
(bad)
pushf
push
pop
jg
int
or
out
out
mov
pop
lods
in
cmp
mov
(bad)
(bad)
xor
xlat
bound
mov
retf
dec
iret
adc
call
loopne
and
nop
xlat
arpl
lds
mov
repnz
cdq
std
dec
bound
fadd
lock
cli
ss
shl
es
out
jg
mov
movs
add
push
xchg
push
imul
outs
push
cli
pop
sub
push
fdivr
push
(bad)
sbb
or
sbb
popa
mov
adc
ret
fld
test
xchg
fdiv
add
(bad)
out
xchg
pop
cwde
mov
dec
push
adc
sub
mov
dec
leave
(bad)
xchg
sahf
cmps
cmps
adc
pop
pop
inc
pop
jns
add
cmps
adc
adc
and
inc
(bad)
daa
xor
cmp
pop
mov
ins
mov
mov
jp
outs
movs
inc
(bad)
push
sti
enter
retf
fwait
aam
adc
inc
test
jmp
mov
or
adc
adc
adc
stc
inc
stc
inc
mov
pop
test
ins
mov
push
retf
xchg
xor
xor
jle
aas
push
push
fcomp
sub
cwde
mov
and
mov
mov
or
loop
sbb
test
sbb
in
add
cmc
in
cmc
les
jp
jns
push
push
daa
cmps
and
pop
xchg
(bad)
mov
sbb
fcomp
sbb
pop
and
adc
fcomip
(bad)
fcmove
call
int3
sub
sub
xor
adc
mov
inc
into
addr16
and
in
jmp
test
jg
jg
stc
dec
push
out
mov
jge
rcr
aad
mov
movs
test
ss
leave
aam
jo
xor
call
mov
inc
sbb
in
sub
xlat
rcr
out
adc
sahf
inc
xchg
mov
pushf
mov
imul
push
dec
adc
dec
mov
outs
xchg
shl
mov
adc
pop
sub
sahf
in
and
fdiv
or
mov
or
and
in
inc
sbb
leave
add
pop
inc
lods
sub
adc
pop
shl
mov
sti
pop
adc
js
xor
xor
mov
or
xor
sub
dec
stos
loop
or
and
and
push
add
dec
add
pop
push
and
retf
adc
push
sti
or
xchg
xchg
popf
test
fstp
std
adc
imul
mov
aad
xchg
mov
popf
adc
in
push
xchg
sbb
cmp
xor
outs
mov
in
xchg
jecxz
lea
xor
pop
fcmovnbe
and
mov
sub
xchg
jmp
xrstor
xchg
push
(bad)
or
sbb
xor
sar
fsub
jg
mov
pop
loop
inc
cli
fdiv
dec
inc
inc
dec
stc
jmp
clc
jns
push
xchg
lahf
test
rol
jno
aad
rcr
xchg
dec
dec
inc
ds
repz
rcl
lahf
inc
jge
sub
cmp
jo
push
or
pop
cdq
sub
in
or
jb
and
in
xchg
cmp
into
je
loope
out
adc
test
jl
cmp
les
jno
fild
mov
lds
cld
push
stos
ror
mov
sbb
dec
jp
hlt
xchg
xor
(bad)
adc
stos
pop
or
sbb
xor
pop
test
les
fwait
sub
out
dec
push
(bad)
cmps
pop
cld
ss
xor
inc
sub
hlt
fwait
dec
pop
sti
ins
pushf
mov
or
mov
dec
mov
sub
sub
imul
retf
pop
ffree
jmp
adc
clc
fs
(bad)
jp
(bad)
test
add
dec
adc
out
addr16
mov
mov
xor
mov
xor
dec
adc
fucomi
cmp
js
xlat
pop
fcmovne
aam
mov
(bad)
fcmovb
xchg
add
fwait
ret
fsubr
fild
sar
add
cmp
pop
gs
daa
ror
jae
pop
xor
mov
shl
sub
push
jb
push
sub
jecxz
jns
mov
and
fimul
cmc
jo
push
repnz
jns
movsx
pop
pusha
leave
je
push
inc
hlt
jecxz
js
rcl
std
jmp
and
inc
(bad)
fisttp
sahf
scas
cmp
cmps
shl
inc
(bad)
fdivr
adc
stos
out
mov
data16
imul
pop
jmp
mov
aas
push
inc
jo
xor
jmp
or
jb
mov
js
das
aas
ss
dec
xchg
or
call
sub
retf
mov
push
jnp
sbb
xor
out
test
(bad)
jns
jl
pop
and
and
pop
in
arpl
add
xchg
add
call
mov
push
jge
aas
sbb
aam
test
xor
mov
pushf
std
rcl
clc
pop
xor
mov
aam
movs
jecxz
rcr
rcr
xor
not
cmp
sbb
in
xor
repnz
imul
sahf
mov
outs
cwde
jb
jb
aas
cmc
enter
je
cmp
xor
nop
xchg
adc
gs
and
jmp
fsubr
bound
(bad)
mov
repnz
adc
mov
inc
or
mov
and
test
mov
bound
(bad)
push
push
inc
xor
sbb
cmp
outs
in
pop
mov
movs
outs
bound
loop
rol
push
inc
lock
push
icebp
fisttp
mov
std
int
or
cmp
xchg
call
gs
movs
(bad)
out
mov
xchg
push
test
cwde
push
stos
push
jmp
and
ds
in
xchg
xchg
mov
retf
mov
cmp
in
push
xchg
xchg
pop
xchg
sub
mov
sub
adc
pop
inc
jne
mov
jae
fs
bound
imul
jne
xor
stos
mov
pushf
or
and
les
and
ds
cmps
pop
leave
mov
(bad)
out
push
shl
mov
or
mov
test
das
inc
je
test
cmp
inc
das
pop
das
sub
mov
cdq
adc
push
inc
pop
push
add
and
pop
clc
jecxz
add
cmc
call
inc
jle
cmps
xchg
(bad)
jmp
cmp
scas
push
add
cli
test
das
daa
cmps
mov
int3
adc
iret
adc
cwde
and
adc
mov
mov
loopne
sub
sbb
fistp
jp
and
dec
mov
mov
xor
inc
daa
sbb
mov
sub
mov
xor
inc
xlat
repnz
cwde
lds
jle
test
mov
jg
jg
stc
dec
pop
sbb
aas
arpl
mov
mov
mov
adc
and
nop
pop
inc
pop
dec
cmp
xchg
loop
jmp
rcl
lods
scas
dec
mov
out
call
out
fs
sub
lahf
inc
mov
pop
fwait
mov
mov
push
mov
stc
scas
xchg
or
sub
sub
push
cmp
mov
sahf
retf
outs
inc
and
inc
sbb
lods
inc
inc
xchg
pop
add
and
pop
sub
nop
and
mov
in
lock
pop
imul
rcr
pop
lods
nop
push
mov
pop
outs
dec
mov
push
adc
inc
arpl
mov
and
jb
out
dec
dec
push
xchg
sub
inc
push
adc
dec
fdivp
pop
sbb
push
inc
or
test
test
cmp
sub
or
dec
or
shr
lds
mov
(bad)
sbb
(bad)
cli
xchg
fwait
adc
push
cmp
shr
nop
aam
xchg
iret
pusha
jg
std
std
retf
dec
movs
es
mov
pop
mov
data16
les
cmp
and
sub
fld
mov
pop
scas
mov
jno
test
je
dec
out
inc
add
(bad)
mov
adc
pop
inc
sub
jmp
call
fidiv
mov
lods
aam
sbb
inc
mov
ins
adc
dec
xor
and
test
and
jne
mov
dec
inc
(bad)
sbb
sbb
inc
not
or
and
inc
dec
dec
mov
jnp
stc
imul
cs
jmp
dec
pushf
std
pop
push
xor
mov
fsub
test
ins
stos
cmp
xor
stos
xor
xor
(bad)
fbstp
int
in
dec
scas
mov
clc
std
and
into
adc
mov
sub
jbe
jecxz
test
xor
xchg
fdiv
xchg
or
pushf
fiadd
adc
(bad)
jmp
pop
jnp
cmp
mov
cli
out
xchg
hlt
pop
pop
rcr
test
(bad)
sub
call
sbb
inc
fsubr
call
test
cmp
repnz
push
mov
test
or
movs
lock
push
dec
cmp
int
pop
out
loope
and
mov
push
push
repz
lea
div
mov
ds
cdq
inc
sbb
stc
pusha
sub
lea
loop
loope
pop
outs
dec
sar
adc
cmps
adc
push
repnz
adc
aaa
addr16
jae
xor
loop
loop
ds
dec
loop
(bad)
sbb
sbb
les
mov
rcl
scas
ret
mov
add
repz
adc
jle
adc
lds
xor
cdq
xchg
xchg
sbb
and
pop
add
(bad)
daa
inc
jne
cmp
adc
in
jns
int3
mov
xor
pop
mov
add
lods
adc
jl
in
add
pop
(bad)
into
in
das
jno
leave
push
pushf
push
test
xchg
enter
add
adc
sbb
ja
jo
xchg
jo
fsub
ret
aaa
adc
mov
loope
cs
dec
push
jo
jecxz
ins
and
shl
mov
pop
lds
retf
clc
cmp
add
mov
test
test
xor
test
loope
xchg
cmp
das
mov
leave
push
jl
mov
loope
cmps
sbb
push
out
js
out
inc
scas
cld
call
cmp
icebp
jb
jl
xchg
sub
lods
test
(bad)
or
nop
not
pop
cli
push
lahf
rcr
shl
push
cdq
push
(bad)
jge
jl
int
cmp
cmps
mov
cmp
fwait
jecxz
sbb
sub
mov
retf
xor
jb
push
js
inc
js
fucom
cld
pop
es
sub
add
sbb
scas
add
cmp
ja
fcom
popf
and
popf
mov
ss
shl
ror
inc
mov
cwde
pop
loop
sti
in
dec
shl
outs
push
call
lea
or
nop
sub
ins
push
cmp
or
mov
mov
xor
pop
mov
push
mov
fild
(bad)
fisttp
jnp
gs
xchg
xchg
retf
xor
pop
dec
gs
mov
add
stos
sub
mov
call
jle
out
mov
add
(bad)
in
jmp
test
(bad)
hlt
in
ins
adc
sub
and
retf
pop
inc
sub
int
arpl
enter
add
mov
pushf
jg
pushf
retf
ficom
inc
pop
call
retf
imul
xor
adc
inc
adc
push
mov
inc
ins
mov
sbb
and
jae
adc
or
jns
movs
sbb
push
mov
retf
mov
nop
push
xchg
dec
jb
mov
jmp
mov
gs
push
mov
inc
dec
cdq
pushf
movs
jbe
mov
mov
mov
push
cmp
xchg
int3
fsub
pop
jo
jbe
test
xchg
xor
stos
dec
mov
sub
sub
xchg
ret
mov
mov
mov
inc
pusha
test
gs
add
and
inc
aam
jne
movs
scas
cwde
mov
xchg
jnp
popa
lea
out
mov
(bad)
repz
(bad)
mov
sar
jg
jl
nop
ja
push
les
xchg
les
inc
mov
mov
inc
jae
cmp
pop
add
cdq
xor
mov
mov
mov
adc
mov
mov
and
inc
das
cmove
mov
stos
jmp
shl
stos
leave
ins
jmp
dec
or
push
(bad)
push
and
mov
pop
iret
push
ret
push
jb
imul
loopne
xchg
nop
adc
xchg
xchg
jp
sbb
mov
mov
popf
ins
or
mul
cmp
lahf
xor
jmp
jnp
and
mov
adc
and
into
add
push
or
call
or
int3
ins
add
jae
add
mov
cmp
push
(bad)
sti
xchg
fwait
sbb
cwde
daa
mov
pop
sub
xor
les
pop
sub
mov
xchg
mov
push
js
fdivr
or
xor
retf
cmp
je
sub
push
test
enter
scas
add
pop
cwde
sbb
sbb
(bad)
cmc
xor
mov
add
xchg
xor
push
inc
inc
arpl
inc
pushf
sub
mov
xchg
pop
ret
loop
cmp
test
pop
dec
and
adc
jmp
jge
or
xchg
or
push
push
xchg
dec
pop
ja
mov
popf
add
mov
fnstcw
xor
pop
leave
out
lds
adc
xchg
pushf
adc
inc
or
add
dec
dec
fmul
mov
mov
adc
hlt
mov
inc
lock
pop
pop
cmp
cs
test
push
in
and
xchg
mov
adc
pop
jmp
cmp
mov
pop
cmp
cmp
mov
(bad)
pop
repnz
cmp
push
or
scas
pop
xor
mov
data16
js
xlat
lds
(bad)
addr16
loop
mov
pop
cmp
loop
dec
cmps
pop
das
loope
jmp
pop
jl
pop
add
pop
(bad)
enter
sbb
xor
pop
hlt
add
aam
dec
and
fs
ja
in
mov
or
inc
pop
stc
(bad)
mov
sahf
fucomip
scas
push
cmps
loopne
cli
inc
xor
outs
outs
cmp
jo
std
sbb
fistp
rol
outs
dec
jbe
idiv
xor
push
mov
leave
in
mov
lahf
pop
not
mov
rcr
inc
cmp
pop
aas
mov
xchg
stos
mov
add
rcl
or
cmp
icebp
data16
pop
ss
and
push
ret
cmp
adc
imul
inc
add
clc
push
(bad)
xchg
ja
ret
retf
popf
lock
adc
or
sbb
fcmovnu
add
fs
pop
adc
jg
push
lahf
daa
ret
les
ins
movs
or
pop
ds
test
pop
mov
sub
pop
inc
out
pop
je
call
mov
dec
sar
arpl
and
sub
loope
xlat
and
jbe
shl
js
lea
and
test
retf
outs
mov
mov
dec
out
add
retf
(bad)
cmp
jle
mov
sti
sub
mov
pop
popa
jae
sub
xor
cmps
aad
mov
jo
ret
xchg
inc
jge
icebp
mov
gs
sbb
sahf
jg
sub
pushf
imul
cmps
and
add
fadd
lock
leave
jmp
call
jg
sub
jo
xchg
cmps
int
repnz
dec
scas
mov
push
cmp
ss
test
cld
mov
xchg
or
mov
mov
addr16
push
cmp
and
push
sahf
mov
xchg
jg
mov
pushf
fadd
dec
aad
imul
sub
jl
sahf
lea
arpl
jmp
ss
xchg
jmp
mov
push
scas
cmps
lods
popf
or
fbstp
pop
pop
(bad)
in
fist
rol
fdiv
push
add
add
gs
cmps
or
enter
scas
mov
out
sbb
cmps
outs
pop
jle
inc
mov
fdiv
lock
add
addr16
out
jge
fidivr
(bad)
xor
dec
enter
push
stos
(bad)
fimul
sub
push
in
or
cmp
and
or
bound
es
push
push
adc
movs
and
cmp
push
pop
and
(bad)
push
out
add
pop
pop
dec
pop
pop
sbb
das
add
int3
imul
xchg
pop
adc
adc
test
int3
dec
and
sbb
or
call
xchg
push
das
in
pop
xor
or
adc
mov
popf
inc
inc
inc
imul
stos
div
push
retf
jno
into
push
inc
pop
daa
or
ss
push
(bad)
fcomp
call
mov
or
or
int
mov
repnz
adc
jno
xor
daa
xor
xchg
push
push
aam
dec
pop
ins
int
fnstsw
pop
mov
aam
mov
(bad)
sub
test
shr
pusha
push
jnp
jecxz
and
aaa
rcl
inc
faddp
mov
test
or
loope
movs
or
inc
xchg
xchg
push
inc
push
ss
pop
jmp
aam
xchg
jle
in
inc
mov
repz
inc
cld
xchg
cmps
jmp
(bad)
jno
jg
data16
sbb
leave
sbb
and
push
rcl
mov
xchg
in
xor
dec
adc
pop
rcl
fisubr
test
jge
jne
imul
inc
pop
push
sub
mov
push
movs
lods
and
popf
xor
pop
sbb
popf
add
push
mov
dec
add
inc
xor
lock
fimul
ins
lods
movs
and
sub
movs
or
xchg
pop
adc
outs
popa
mov
cs
adc
mov
add
mov
cmps
or
push
inc
jmp
mov
adc
fcomp
inc
pop
test
inc
lods
or
mov
dec
push
test
fimul
imul
mov
push
rcl
mov
cmps
jns
clc
sub
pop
and
inc
xor
fcomp
sub
dec
cmps
or
dec
popf
or
and
push
push
push
dec
mov
xchg
xchg
add
ins
sub
rcr
icebp
jbe
ret
lds
cmp
scas
mov
or
imul
test
pop
popf
dec
mov
jae
sbb
xchg
mov
mov
data16
int
xchg
add
jp
mov
jne
push
loop
jmp
jp
sbb
cmp
adc
and
ins
mov
inc
test
scas
pop
mov
cld
dec
xchg
adc
mov
icebp
push
inc
daa
dec
fnstenv
xchg
stos
sbb
xchg
pop
push
inc
es
inc
mul
icebp
or
add
dec
mov
neg
and
adc
ins
ins
test
and
daa
in
mov
mov
dec
stc
xor
mov
dec
add
adc
lock
xchg
push
xchg
inc
xor
cmp
jns
xlat
out
shl
int3
sbb
inc
sbb
adc
jge
cmp
mov
pop
xchg
mov
iret
loop
neg
sbb
mov
loop
out
ins
dec
cmp
xchg
cmp
add
imul
dec
mov
sbb
out
mov
fist
cmc
scas
repz
fistp
stos
in
push
stos
leave
and
cmps
jno
cmp
sub
mov
outs
loopne
pop
fwait
cmp
hlt
and
sbb
clc
push
or
dec
arpl
push
cmps
ds
les
mov
and
lahf
sbb
jmp
mov
cwde
outs
mul
rol
jl
retf
dec
scas
in
sub
xchg
lahf
mov
lock
push
cmp
int
pop
xor
pop
add
rcr
call
aaa
pop
ds
leave
loope
fiadd
(bad)
in
dec
push
add
jecxz
mov
fbstp
mov
sub
clc
movs
das
nop
outs
mov
movs
xchg
scas
cmp
js
fmul
sub
mov
sbb
xor
mov
cmc
js
inc
xchg
mov
les
repnz
mov
adc
or
push
sar
xor
sti
sbb
clc
sub
test
cmp
cmp
fild
jge
mov
mov
push
xor
sbb
pusha
jmp
sahf
sub
adc
sub
cmp
sub
and
ss
scas
je
js
sbb
scas
in
enter
movs
iret
pop
ins
neg
pushf
jmp
out
and
loopne
sbb
jo
add
push
jo
push
out
xchg
cmps
and
ficom
retf
aas
cmp
inc
dec
into
dec
mov
sub
add
jno
xchg
imul
mov
aaa
lods
cwde
cli
fild
jae
enter
jecxz
imul
dec
bound
aaa
ds
iret
mov
enter
xchg
inc
test
sub
das
mov
loope
adc
int
mov
push
mov
out
sbb
or
xchg
enter
xchg
mov
xchg
out
mov
sbb
inc
ins
inc
fs
clc
fwait
sti
xchg
in
push
daa
mov
xabort
div
push
shr
outs
aaa
sub
or
cmp
dec
jge
add
adc
shl
jle
jl
push
mov
pusha
arpl
jno
or
or
mov
push
out
push
call
loop
pop
btr
shr
icebp
popf
cmp
xchg
mov
fsubr
pop
(bad)
dec
imul
xlat
push
stos
repz
addr16
nop
xchg
lahf
dec
push
jle
and
loop
aaa
pusha
bound
add
mov
fwait
stos
xchg
adc
push
pop
push
enter
and
es
mov
ins
push
and
inc
mov
xor
xchg
daa
inc
and
sub
frstor
jg
xor
sub
sub
pop
retf
and
jo
jb
add
out
jp
out
data16
in
lock
jb
fstp
push
push
xchg
mov
jp
sbb
push
scas
pop
into
xchg
inc
repz
aaa
(bad)
int
sahf
and
sub
xor
pop
dec
sub
test
imul
retf
call
retf
adc
fnstcw
and
pop
pop
mov
(bad)
sahf
add
lods
lods
sahf
xor
xchg
(bad)
cdq
push
mul
mov
adc
or
rcr
xchg
mov
sub
mov
aaa
sub
js
push
xchg
mov
lea
mov
jne
pop
cld
mov
and
mov
sar
adc
mov
das
push
lea
rcr
ret
jmp
cs
add
sub
push
xchg
aad
movs
mov
sbb
fwait
and
pop
test
test
dec
cmps
mov
inc
in
pop
shl
addr16
xchg
mov
mov
pop
aam
mov
inc
in
xchg
push
das
ret
jge
sub
xor
test
iret
mov
retf
or
stc
call
or
inc
daa
cmp
das
mov
not
jb
rol
jb
or
push
mov
ja
push
sbb
aam
(bad)
push
jmp
mov
and
mov
loop
sbb
mov
adc
inc
pop
lods
mov
xchg
jecxz
data16
leave
out
and
nop
xchg
cs
or
enter
and
test
or
or
fs
test
xchg
xchg
cmps
mov
xchg
(bad)
ficomp
dec
sbb
push
int
dec
push
or
xchg
rcr
xchg
dec
jns
cmp
test
mov
sub
xor
push
stos
xchg
in
ins
sbb
int3
enter
pop
call
jae
mov
out
(bad)
and
mov
cmp
in
mov
aad
or
nop
cwde
shl
mov
loope
dec
and
das
movhps
mov
mov
jb
js
mov
dec
fwait
cmps
rcl
jae
cmp
add
inc
test
aam
add
xchg
cmp
(bad)
neg
jge
not
addr16
and
jecxz
loopne
btr
sbb
mov
ret
pop
inc
inc
add
jg
cmp
lock
call
or
dec
mov
push
repnz
into
xor
out
xchg
add
sbb
out
lods
stc
jge
xor
xchg
inc
add
stc
(bad)
sar
ja
push
push
pop
pop
out
mov
cdq
sbb
dec
jg
add
jmp
cmps
jnp
mov
jmp
fmul
retf
fwait
data16
push
or
xor
aas
imul
retf
faddp
cld
cmc
sub
pop
adc
cmc
fst
cs
scas
jl
xor
in
pop
mov
dec
add
bound
push
popf
push
dec
mov
shl
and
aas
ret
jbe
jecxz
cmp
out
fcmovne
movs
cmps
inc
cmp
pop
pop
out
sub
xchg
lea
mov
test
cmc
jno
movs
or
nop
std
and
xchg
mov
pop
add
ret
cmp
leave
leave
jnp
clc
in
jl
ficomp
cld
mov
mov
jno
(bad)
jecxz
stos
clc
jge
and
and
xchg
xor
sbb
into
shl
inc
scas
jnp
call
mov
pop
mov
icebp
inc
outs
es
les
aas
nop
xor
sbb
pop
jle
repnz
push
sub
(bad)
loope
add
(bad)
cmps
and
jns
(bad)
call
xchg
pop
inc
or
aam
dec
lods
out
inc
pop
fimul
setle
mov
xchg
not
push
mov
pop
cmp
mov
xor
push
(bad)
cli
das
aam
mov
ins
fimul
aaa
dec
jae
pop
cdq
aaa
addr16
clc
mov
xchg
arpl
loopne
es
adc
push
fcom
sub
sub
jnp
or
adc
into
pop
fnstsw
outs
test
leave
xchg
xor
xchg
fidiv
fist
mov
pop
scas
cmp
inc
cmps
mov
jo
retf
(bad)
test
aas
pop
int3
in
repnz
data16
loope
leave
cmp
das
add
xchg
add
sti
pop
pushf
(bad)
fcomp
cld
and
icebp
lea
out
pop
ret
cmc
lahf
mov
cmp
jno
stos
ss
scas
jmp
or
mov
cli
lock
sti
or
cmc
imul
iret
loope
pop
mov
arpl
int3
cwde
shr
mov
pop
dec
push
mov
adc
lea
lods
cli
push
es
push
sbb
repz
ins
adc
aas
ds
out
mov
cmps
(bad)
add
aam
daa
ret
arpl
dec
mov
push
mov
add
(bad)
dec
arpl
fld
mov
or
imul
ins
das
jmp
pop
cli
imul
leave
not
fisubr
jmp
inc
test
test
mov
and
adc
fidiv
xchg
lea
je
sbb
inc
retf
movs
outs
ret
push
xchg
mov
fdiv
cwde
fdivr
mul
pop
jno
lea
pop
call
sub
cli
dec
adc
enter
and
xchg
dec
adc
mov
cmp
sbb
push
push
test
adc
gs
jle
dec
cmp
xor
mov
mov
and
retf
cmp
jb
xchg
in
sbb
xchg
xchg
adc
scas
lds
ja
jns
movs
data16
mov
xchg
xor
cwde
inc
xor
pop
mov
mov
sbb
fdiv
imul
ins
int3
rcl
xlat
(bad)
jmp
cwde
mov
adc
sbb
and
jle
jle
add
mov
mov
mov
jno
rcr
popf
mov
mov
dec
dec
es
pusha
ret
int
inc
add
xchg
enter
loop
enter
daa
jne
dec
mov
push
dec
mov
xchg
add
ret
lea
pusha
inc
es
mov
xchg
lea
and
xchg
mov
push
out
xor
pop
sub
ds
jno
cmp
mov
push
clc
aas
loop
xor
aas
icebp
(bad)
sub
cmp
loop
call
jae
xchg
mov
pop
pop
call
and
pop
dec
add
loop
sub
xchg
test
repz
mov
mov
fistp
or
sbb
ficomp
and
push
push
xchg
dec
dec
pop
sbb
mov
push
xchg
pop
dec
inc
jno
cmc
xchg
jno
(bad)
les
pop
push
in
or
call
arpl
iret
and
pop
call
aas
mov
mov
dec
jne
les
pop
or
xor
and
xor
aam
fnstsw
pop
mov
cdq
mov
fisttp
fs
jo
sub
add
adc
in
es
les
xchg
fdivr
jg
add
jg
adc
dec
je
add
adc
mul
xor
xor
adc
sub
mov
pop
leave
and
or
test
loop
xchg
mov
movs
mov
imul
and
scas
int3
push
fadd
loopne
test
jns
cmps
and
or
cli
ja
mov
sbb
mov
dec
ins
mov
imul
int
into
pop
or
mov
mov
test
sbb
nop
adc
mov
int3
add
outs
imul
(bad)
mov
je
mov
mov
sub
aam
aad
mov
or
xor
inc
push
dec
sub
cmc
stc
ins
(bad)
ret
fidivr
push
test
xchg
push
sbb
mov
out
push
or
sahf
fdivp
pop
pop
outs
rcr
cmp
and
shr
pop
add
and
pop
ins
add
xchg
push
int
ror
sbb
mov
adc
jge
test
call
(bad)
sbb
into
jne
jo
push
sbb
(bad)
outs
and
mov
or
mov
dec
popa
mov
cli
iret
imul
xlat
daa
hlt
cdq
fisub
imul
into
ins
stos
add
cs
add
jle
inc
push
jg
iret
mov
outs
jecxz
adc
sub
mov
jp
cmp
add
and
addr16
fsubr
and
jno
jmp
cmp
div
mov
jp
data16
lahf
ins
into
loope
add
pop
jg
test
out
into
jo
fistp
icebp
cmc
lods
pop
jg
xchg
dec
(bad)
ja
sti
sbb
aas
sbb
mov
mov
or
call
call
adc
clc
pop
loop
in
movs
pushf
mov
adc
cmp
je
rcr
or
add
mov
xchg
mov
cmp
sbb
scas
ins
ds
lahf
push
arpl
fcom
add
pop
loopne
push
(bad)
aad
int
inc
push
cmp
imul
sbb
push
jle
cmp
mov
sbb
(bad)
sbb
jl
in
int
(bad)
push
in
aam
inc
iret
lods
jmp
icebp
lahf
xabort
fstp
pop
ror
leave
out
add
enter
cs
xchg
shr
pushf
in
icebp
in
test
add
in
mov
sbb
int3
fstp
cmp
and
pop
dec
xor
pop
cld
call
into
xor
push
jmp
mov
pop
push
(bad)
sbb
mov
in
sub
adc
(bad)
paddusw
rol
loop
stc
jp
hlt
fwait
or
jae
mov
into
jl
ret
cdq
jg
rcr
(bad)
cmp
into
jg
mov
inc
xor
aas
mov
mov
outs
shl
mov
inc
ror
mov
mov
nop
sti
lock
outs
sar
and
out
jle
sub
jmp
adc
dec
mov
xor
dec
mov
jno
adc
pushf
adc
mov
sahf
cs
std
xor
mov
mov
jne
outs
mov
mov
jnp
imul
lahf
mov
jle
jp
call
loopne
ins
cmp
jg
add
or
shl
sub
out
call
sti
scas
out
in
cmps
mov
dec
std
jle
inc
jmp
xor
hlt
sub
add
std
xchg
pop
in
daa
sbb
dec
xchg
pop
and
stos
lahf
mov
or
shr
fist
and
dec
sub
or
stos
mov
mov
lods
adc
repz
stos
enter
jg
pop
mov
cmps
add
push
jno
sbb
pop
fs
addr16
push
push
test
div
int3
add
cmp
xchg
xlat
fcmovbe
xchg
sub
push
or
mov
or
dec
push
jb
fs
xchg
xchg
inc
pop
dec
sahf
xchg
jae
les
push
mov
lods
movs
sbb
and
add
jbe
arpl
sub
ins
icebp
div
rcl
pop
retf
sbb
sbb
or
mov
in
jp
mov
lds
out
int
sbb
lods
cmps
mov
lea
js
sbb
cmps
cmps
push
stos
(bad)
scas
inc
jnp
push
cmp
push
mov
arpl
cs
jmp
aas
sub
imul
sbb
mov
dec
sbb
or
xor
aad
xlat
int
push
fldenv
cmps
sbb
mov
cld
scas
mov
test
xchg
iret
int3
mov
call
movs
jmp
stc
fist
xchg
pushf
mov
xchg
pushf
sbb
call
imul
ret
(bad)
sub
add
and
fcmovne
push
iret
mov
and
and
push
xor
addr16
test
xlat
pop
sub
and
push
pop
inc
ins
inc
add
mov
imul
xor
cmp
ret
dec
mov
dec
and
daa
mov
fcomp
xor
or
in
jmp
pop
inc
test
cld
in
cmp
add
pop
in
jo
in
ins
xchg
pop
sub
cmps
sub
aam
das
outs
pop
mov
mov
inc
and
iret
mov
cmp
retf
ficom
mov
xchg
xchg
mov
sbb
push
and
scas
xor
pop
inc
mov
jae
shr
test
inc
pop
inc
mov
fnsave
das
call
hlt
or
dec
les
sub
dec
dec
jnp
cmp
jns
mov
repz
sub
xor
sub
int3
sahf
leave
pushf
cmp
mov
pop
or
and
ins
arpl
adc
inc
push
pop
sbb
push
cmps
int3
into
xchg
repz
push
adc
and
out
(bad)
cld
outs
outs
das
imul
jno
scas
in
inc
rcl
push
enter
xchg
fwait
sti
push
daa
dec
pusha
sub
jne
xor
pop
rol
imul
cdq
cmp
imul
and
retf
pop
jb
sbb
inc
sbb
leave
mov
push
pop
mov
jecxz
or
sub
mov
scas
ficom
outs
jmp
mov
pop
int
pop
dec
cmp
xor
jae
xor
jo
iret
jl
jg
int3
cmc
scas
xchg
clc
mov
imul
xchg
inc
jmp
jno
pusha
and
mov
cmp
cmp
nop
inc
jnp
dec
cmp
cli
cmp
jecxz
mov
pop
ret
fst
sti
in
jp
sub
jmp
sbb
mov
dec
sbb
dec
mov
inc
test
mov
push
pop
mov
push
cmp
mov
call
(bad)
outs
dec
mov
in
loope
pop
lds
fcomp
int
movs
scas
ins
retf
xor
fstp
daa
push
lock
lea
(bad)
dec
inc
cmp
in
jo
pop
outs
dec
jecxz
jge
pushf
mov
fs
jo
lahf
or
repz
ret
mul
sbb
retf
mov
mov
lock
pop
push
pop
jecxz
test
mov
inc
enter
movs
ret
mov
jl
shl
adc
adc
mov
outs
mov
mov
adc
inc
cs
ret
fisttp
cmp
rol
inc
xchg
xchg
icebp
test
or
(bad)
or
pop
stc
inc
mov
mov
pop
inc
cmps
(bad)
je
in
(bad)
pop
dec
jecxz
and
fs
inc
sub
cmp
ret
leave
adc
cs
jnp
mov
(bad)
retf
dec
out
jno
sti
mov
dec
clc
jb
imul
mov
xor
cmp
fmul
lds
aaa
pop
xchg
(bad)
xchg
(bad)
icebp
inc
stos
push
jg
sbb
cmp
jb
fist
enter
dec
idiv
jae
jmp
jae
outs
jl
xor
repnz
int
and
lss
mov
out
inc
sbb
(bad)
sub
fsub
loope
add
add
scas
push
pop
retf
cdq
xor
push
add
push
cmps
add
cs
pushf
fld
aam
stos
mov
jl
push
inc
pop
aad
mov
fstp
add
and
sub
mov
mov
mov
push
les
jge
ror
sub
cmp
scas
pop
sbb
xchg
cmp
push
sub
test
outs
cmps
dec
test
inc
push
cmp
sub
in
dec
fucom
test
pop
das
std
mov
rcl
daa
mov
fisub
loop
push
mov
ror
stos
xor
imul
push
pop
sbb
shl
lods
hlt
add
xor
xor
or
xor
shr
nop
ss
dec
xlat
fmul
jecxz
popf
mov
add
adc
jb
add
adc
in
aam
imul
xchg
push
or
xchg
aad
push
fnstsw
mov
add
jne
or
adc
adc
outs
cmp
mov
ret
fidivr
dec
cmp
pop
(bad)
xchg
loope
cmps
xchg
push
nop
inc
push
jns
adc
push
push
pop
adc
push
add
push
xchg
mov
mov
jae
fdivr
fsub
cmps
lds
push
rcl
push
sub
and
mov
adc
add
mov
rol
xor
jo
dec
out
popf
sub
out
ins
mov
aad
add
cdq
mov
data16
dec
data16
pushf
lds
ret
fidiv
inc
imul
repz
out
xchg
mov
inc
mov
add
ret
or
adc
mov
xchg
or
jg
push
jae
shl
mov
(bad)
cld
fcom
enter
imul
(bad)
ja
movs
imul
sub
(bad)
mov
mov
arpl
xor
and
mov
and
pop
popf
push
mov
inc
pushf
jle
test
dec
cmp
push
pusha
and
sub
mul
xchg
push
pop
dec
gs
gs
loop
repz
int3
dec
and
fist
(bad)
sub
aaa
sbb
cmp
ror
stc
int
gs
xor
xchg
adc
in
dec
xchg
add
or
sub
hlt
ror
or
pop
jnp
push
cs
xor
adc
pushf
popf
ins
test
or
pop
add
xchg
(bad)
fild
adc
mov
cmp
jo
sub
dec
fstp
lods
add
pop
mov
leave
imul
out
inc
lds
lahf
test
add
retf
int3
sub
icebp
rsqrtps
or
ins
lds
adc
jecxz
(bad)
call
jmp
pushf
inc
jnp
and
cli
jecxz
outs
and
ret
mov
jne
xchg
ins
ins
ins
aaa
mov
mov
mov
push
hlt
in
shl
nop
inc
mov
int3
rcl
int3
cmps
mov
fwait
out
outs
pop
fist
pop
outs
and
not
pop
test
sub
aad
add
fiadd
inc
aaa
xchg
outs
test
sti
adc
sbb
push
and
mov
arpl
push
mov
fwait
jb
in
sub
mov
inc
daa
sub
push
data16
fild
ins
in
adc
jns
sub
inc
inc
or
cmps
test
jns
push
cmp
mov
out
mov
jge
cdq
fisub
pop
mov
push
mov
pop
pop
jnp
dec
test
adc
lock
out
push
mov
push
pop
and
loopne
xchg
inc
pushf
ins
pop
int
mov
test
pop
mov
push
into
cmp
add
pop
(bad)
pop
repnz
mov
add
cmc
popa
adc
lods
loop
jmp
dec
sbb
jbe
leave
ins
jns
movs
scas
addr16
inc
scas
jecxz
clc
sbb
cmp
mov
or
ja
leave
sbb
xchg
mov
(bad)
loope
inc
out
sub
out
dec
aas
outs
retf
ja
push
mov
jnp
int
mov
sar
jns
and
or
out
imul
add
mov
sub
cmp
cmp
in
dec
and
ins
adc
fistp
jle
and
int3
iret
pop
mov
mov
push
(bad)
out
shl
sbb
iret
rcr
fs
mov
jp
cmp
xor
xchg
cmp
mov
xchg
or
ficomp
jne
mov
jns
idiv
ss
imul
cmp
mov
push
cld
je
aaa
fadd
(bad)
xchg
(bad)
in
push
mov
icebp
je
adc
cwde
movs
rcr
xchg
scas
xchg
ins
clc
stos
aam
rcl
cs
push
mov
mov
scas
mov
sti
mov
outs
fcom
mov
jnp
mov
cmp
mov
loop
ins
ins
ds
pop
retf
mov
(bad)
jmp
cdq
or
repz
ss
enter
into
cld
push
arpl
mov
cwde
or
pop
push
pop
push
sbb
lock
push
iret
in
mov
outs
ins
xor
jno
mov
dec
loopne
pop
dec
pop
adc
mov
or
jl
int
pop
inc
hlt
(bad)
lods
in
jmp
int
or
sbb
or
add
add
and
inc
mov
out
sti
mov
jmp
cld
xor
jnp
es
daa
lods
test
lods
adc
into
adc
push
ret
xchg
(bad)
fidivr
mov
inc
and
nop
xlat
lea
push
rcl
mov
inc
sub
cmp
cli
dec
adc
fldenv
das
into
pop
(bad)
mov
jo
jo
mov
mov
mov
jle
out
adc
in
add
int
aas
add
gs
mov
frstor
mov
jle
pop
pop
outs
idiv
jp
inc
pushf
fnsetpm(287
pop
(bad)
int
mov
and
push
xor
mov
push
push
and
stos
jmp
popf
or
push
stos
mov
jge
push
lea
push
jg
lods
sub
rcl
(bad)
stos
in
mov
jmp
mov
(bad)
mul
dec
pop
cwde
dec
jbe
xchg
ds
xchg
retf
imul
nop
out
sub
xchg
push
push
push
push
sub
pusha
imul
pop
add
les
mov
xchg
fwait
push
dec
inc
jp
or
loope
mov
fdivr
add
pop
retf
jmp
sbb
and
fcom
dec
add
cdq
sub
push
dec
imul
int
imul
add
push
jbe
cwde
pop
cdq
arpl
sub
arpl
xor
jecxz
and
das
adc
xlat
pusha
jmp
xor
xor
jmp
mov
xor
xor
cdq
nop
mov
add
mov
jo
mov
test
(bad)
test
xor
pop
xchg
data16
lds
rol
xor
imul
mov
std
call
dec
sar
adc
mov
cmp
pop
push
mov
xchg
in
mov
xchg
call
push
add
or
mov
daa
xchg
sbb
outs
cmp
sub
mov
ret
int
sub
add
in
in
imul
mov
movs
rcl
inc
dec
jns
in
leave
adc
retf
dec
mov
and
rcr
cwde
in
xor
repnz
and
cmps
jno
not
mov
cmp
mov
mov
xor
inc
cs
pop
jne
xchg
(bad)
pop
adc
add
sub
adc
cwde
call
add
das
out
cmc
sub
ret
imul
aaa
imul
push
sbb
bound
jecxz
loop
inc
pop
mov
push
fwait
and
fcmovu
iret
or
xor
xchg
in
xchg
cmps
add
cmps
sub
add
dec
push
repnz
push
adc
repnz
or
scas
outs
mov
repnz
pop
aam
out
test
rcl
push
lods
mov
enter
data16
inc
ds
push
and
push
dec
out
inc
adc
push
mov
dec
sub
imul
push
shr
shl
sbb
ss
jnp
pop
cmp
hlt
sar
pop
sub
nop
test
aam
pop
pop
pop
mov
inc
add
mov
push
mov
mov
push
retf
das
mov
fimul
mov
pop
into
loopne
xor
adc
pop
leave
pusha
inc
les
mov
fnstcw
fiadd
jp
leave
sub
add
stos
test
sub
retf
dec
loopne
inc
movs
jmp
movzx
ret
add
jne
imul
sbb
xor
lock
shr
imul
xor
xor
aas
out
jecxz
repnz
cld
fnstcw
cmp
xor
cmp
scas
cmp
int
cmp
std
(bad)
and
aaa
ds
ret
pushf
jp
or
es
pusha
es
pop
hlt
jnp
bound
jb
test
adc
shl
xchg
mov
pop
xchg
mov
sbb
test
push
loop
mov
pop
mov
mov
retf
mov
cmp
(bad)
into
add
jbe
sbb
mov
pop
or
push
scas
cmp
jmp
mov
mov
pop
stos
ins
stc
imul
cmp
inc
clc
push
pop
hlt
ror
mov
leave
inc
cmps
push
ins
out
in
dec
mov
outs
and
mov
out
mov
jb
add
in
mov
add
cmps
xchg
mov
cmp
clc
jne
mov
xchg
inc
sbb
push
jno
std
sbb
mov
int
retfw
mov
mov
pop
fimul
imul
mov
pop
xor
dec
jg
outs
stc
sbb
lods
or
mov
into
push
fucom
retf
push
sbb
in
popf
imul
cmp
jae
dec
inc
cld
shl
sbb
add
pop
xchg
not
push
enter
xor
xchg
push
fld
pushf
iret
xor
pop
clc
cmp
aad
jb
or
les
and
retf
fbld
loopne
mov
jl
xor
outs
mov
fwait
stos
imul
add
add
cmp
lds
(bad)
icebp
mov
dec
add
jle
sahf
sbb
or
lods
jecxz
test
add
adc
xor
xchg
fs
mov
mov
push
jbe
mov
mov
cmps
(bad)
inc
or
jae
retf
mov
xchg
into
out
data16
cwde
pusha
repz
fisttp
outs
mov
loope
cmp
xchg
sbb
jnp
sub
(bad)
jbe
add
xor
pop
jno
jne
in
add
popf
and
add
push
loop
(bad)
mov
and
popa
gs
in
popf
mov
mov
push
std
scas
ss
out
aad
jne
and
hlt
or
mov
or
int
jae
prefetch
leave
jle
push
sub
loopne
inc
push
daa
mov
jmp
xchg
fucomip
pop
aaa
fild
jne
inc
gs
pop
pop
and
cmp
out
sahf
and
inc
pop
push
ja
(bad)
xor
xchg
jae
aam
xor
mov
xchg
mov
mov
sar
repnz
inc
push
jae
movs
xor
add
push
mov
test
outs
xchg
call
sub
pop
call
test
les
es
sbb
loop
dec
movs
jl
scas
into
call
ins
and
les
or
jno
dec
push
inc
gs
add
jno
out
push
cmp
and
dec
pop
arpl
add
push
jnp
mov
xchg
mov
lock
icebp
ror
adc
popf
jno
cmp
xor
(bad)
jmp
pop
pop
imul
pop
dec
sub
cmps
test
mov
xchg
int3
sbb
inc
inc
mov
(bad)
stos
popf
adc
push
push
push
fisttp
fisttp
sahf
in
repz
scas
test
mov
mov
out
jg
jecxz
jnp
clc
xbegin
icebp
(bad)
sub
cmp
rcl
adc
bound
sub
(bad)
in
lods
rcr
jbe
test
call
ja
adc
ins
sub
and
sbb
and
movs
push
daa
into
mov
cdq
je
addr16
fs
add
in
jmp
addr16
push
xchg
mov
das
adc
dec
mov
mov
outs
ss
adc
xor
push
dec
imul
in
mov
retf
mov
(bad)
aam
push
push
es
lahf
inc
dec
ins
add
mov
mov
aad
mov
xor
adc
mov
xchg
and
cmp
and
into
int3
dec
pop
int
cmps
int3
adc
add
sti
push
and
fcomp
test
and
and
call
out
sub
pop
or
jnp
inc
jp
movs
ror
jmp
mov
sub
das
mov
or
pushf
out
adc
dec
data16
int
add
mov
inc
movs
dec
and
pop
mov
retf
test
aam
add
mov
rcr
push
test
inc
push
mov
out
inc
push
dec
sahf
mov
mov
jecxz
or
pushf
test
xlat
dec
xor
popa
iret
or
scas
les
into
xor
jmp
cmps
pop
inc
dec
pop
push
cmp
inc
retf
push
div
es
sbb
sub
sbb
or
mov
cmps
data16
in
bound
mov
shr
push
mov
cmps
ja
test
cmps
adc
inc
dec
sbb
pop
ret
rol
inc
es
retf
mov
xchg
fucomip
pop
test
shl
in
in
(bad)
push
mov
dec
icebp
adc
jb
mov
(bad)
cld
cmp
pop
bnd
cmp
pushf
retf
cmp
fdivr
lods
leave
aam
mov
jae
mov
in
fldz
test
js
dec
les
ins
push
outs
sub
push
xor
aaa
mov
repnz
mov
add
jno
ins
or
mov
in
jnp
mov
ds
(bad)
cli
loopne
ins
pop
cld
jo
ja
dec
gs
xchg
push
fstp
rcr
out
mov
fsub
mov
es
xchg
push
cmp
gs
xchg
xor
lods
loopne
pop
jp
hlt
not
sahf
sbb
sahf
cmps
adc
sar
aas
push
scas
or
mov
out
sub
sahf
bound
push
cmps
pop
xor
mov
sub
in
int3
mov
sbb
add
jle
test
out
cmps
or
repz
mov
fwait
jecxz
and
mov
(bad)
out
add
jle
sbb
xlat
cmp
mov
addr16
xchg
shl
loope
in
mov
imul
ficomp
ret
cdq
icebp
adc
dec
sub
sar
in
scas
adc
fcom
leave
stc
mov
and
inc
add
pop
scas
loop
mov
cmp
mov
icebp
data16
mov
jecxz
push
daa
mov
js
mov
in
out
pop
jbe
out
sub
mov
pop
lock
mov
jno
ficom
in
repnz
mov
ja
xor
or
add
add
outs
idiv
mov
loop
shl
int3
daa
jmp
cmp
(bad)
jae
adc
dec
arpl
push
dec
pop
lds
pop
jno
fisttp
push
push
test
pop
jb
push
lahf
pop
loop
repz
push
aas
xchg
dec
fisub
sub
in
in
imul
push
dec
popf
int
shl
pop
cli
ficom
popf
add
jle
dec
call
cmps
jle
in
jno
add
jno
inc
fcom
sar
push
pop
rcl
add
repnz
daa
daa
or
push
pop
es
mov
(bad)
ss
out
movs
xchg
sahf
adc
cmps
mov
mov
fidivr
mov
rol
lds
adc
push
mov
mov
imul
(bad)
(bad)
addr16
mov
mov
into
sub
and
push
shr
add
dec
add
mul
mov
mov
jno
aaa
sti
sbb
dec
je
cli
pop
add
movs
cmp
cmp
jmp
xchg
jge
mov
js
out
sub
sub
mov
dec
jae
test
outs
push
push
sbb
sub
mov
inc
dec
adc
sub
push
scas
pop
leave
adc
or
into
popa
loope
mov
xor
mov
rcl
sbb
mov
in
inc
push
fisubr
nop
and
rcl
sub
push
imul
dec
mov
fwait
cmp
movs
or
mov
fwait
mov
ret
push
xchg
call
add
outs
sub
lods
sar
fcom
sahf
xlat
(bad)
(bad)
cli
aaa
sbb
and
xchg
iret
pushf
pop
pushf
les
test
in
popf
xor
pop
mov
or
sub
cmp
push
sub
sbb
mov
adc
mov
(bad)
pop
ficomp
shl
imul
(bad)
les
push
sbb
xchg
bound
xor
andnps
fsub
out
bound
and
or
sub
adc
adc
and
int3
in
int3
inc
hlt
dec
int
(bad)
push
sub
push
not
adc
jg
(bad)
inc
aas
imul
(bad)
ja
cli
js
outs
imul
adc
mov
add
fidiv
in
jmp
(bad)
pop
mov
mov
js
adc
jmp
inc
jecxz
inc
pop
xor
aad
aam
cmps
test
rcr
xchg
sub
cmp
cmc
or
or
sub
or
cli
adc
sub
repnz
sub
leave
retf
inc
fsubr
outs
add
add
lea
loop
or
jge
mov
sbb
and
daa
jns
pop
int3
xor
mov
mov
ret
dec
mov
pop
leave
xlat
out
inc
pop
movs
add
or
sbb
cmp
dec
jne
aad
or
bnd
scas
pop
lds
adc
vsubss
xchg
rcr
rcl
fwait
pop
or
cmp
cli
mov
ret
test
sbb
and
mov
fsubrp
jl
retf
mov
mov
dec
icebp
xchg
jo
sub
inc
dec
sbb
mov
push
cli
or
clc
retf
xor
xchg
es
lahf
xchg
push
dec
push
xchg
add
ss
jb
fimul
rcl
ins
ins
inc
push
aad
push
pop
adc
popa
adc
xchg
ret
mov
aaa
mov
xchg
rcr
push
and
pop
add
jo
add
fbld
ret
adc
adc
mov
ret
rol
push
movq
mov
dec
sbb
mov
les
jo
enter
dec
dec
pop
clc
test
fild
rcl
sub
inc
loopne
sbb
push
(bad)
cmps
in
xor
scas
xor
hlt
in
mov
pop
add
hlt
or
jo
cmp
and
shl
adc
pop
jmp
je
repnz
xchg
sti
imul
pop
imul
into
(bad)
out
mov
push
out
lods
sub
xor
out
(bad)
popa
ja
xor
jnp
loopne
sub
dec
xor
cmp
cmp
icebp
push
(bad)
sbb
outs
pop
leave
stc
lea
jge
push
mov
mov
outs
lock
ret
(bad)
jnp
stc
stc
dec
pop
add
loop
push
(bad)
ret
sbb
jnp
fcomp
dec
dec
fmul
sub
mov
jmp
cdq
aam
bound
sub
lds
(bad)
sbb
test
sbb
popf
inc
fcom
iret
ret
movs
sbb
add
mul
xchg
jmp
aas
fld
jns
push
xchg
out
outs
in
fst
scas
xchg
jns
mov
and
popa
xor
dec
loop
loopne
rcl
jle
not
sub
out
push
aas
(bad)
aad
ret
nop
sahf
dec
mov
stos
imul
sbb
push
aam
push
into
out
mov
ret
mov
retf
repnz
out
pop
or
mov
cmp
mov
and
call
ret
xchg
jbe
jns
pop
xchg
ja
(bad)
fdiv
push
cmps
pop
jg
add
mov
loop
add
sub
adc
pop
sbb
push
data16
in
mov
jb
fstp
jo
cmp
inc
leave
add
and
das
xchg
retf
mov
push
enter
cmp
call
jle
pop
rcr
mov
(bad)
xlat
out
cmp
jae
cld
mov
loopne
cmps
xor
pop
es
push
cmp
mov
jmp
sub
cli
dec
out
add
lods
dec
pop
jg
dec
dec
xlat
sub
cmps
scas
add
sub
add
icebp
pop
jg
jl
scas
(bad)
jmp
and
jmp
dec
pushf
pop
ret
jb
dec
sbb
push
or
sub
pop
xor
xor
shl
fs
fs
pop
psrld
push
pop
pop
inc
mov
data16
cmp
jbe
sbb
pop
pop
jb
jns
jmp
xchg
push
enter
mov
popa
imul
mov
das
pop
and
cmp
(bad)
fst
lock
stos
cmp
retf
sub
xchg
xlat
and
lods
in
xchg
retf
mov
add
pop
pop
jge
xchg
mov
repnz
sbb
adc
inc
arpl
inc
dec
mov
mov
in
or
and
push
das
adc
sub
nop
jge
addr16
repnz
les
mov
adc
mov
or
dec
mov
lods
mov
lods
and
sahf
mov
xchg
test
inc
pushf
mov
retf
je
jne
push
fcmovnb
xchg
mov
sar
sahf
lds
hlt
rol
cdq
sub
cmps
movs
dec
add
xchg
sub
cdq
movs
outs
jl
loopne
fwait
or
scas
add
imul
mov
push
pop
pop
and
push
inc
mov
rcl
dec
retf
push
rol
adc
imul
(bad)
lods
push
out
pop
sub
pop
pop
push
jno
pop
fcmove
adc
cmp
clc
jg
cmp
lods
ins
xchg
cmp
aam
add
or
rcl
aad
rcl
stos
cmps
cmps
addr16
mov
dec
mov
inc
pushf
mov
div
xor
push
push
jo
dec
ret
pop
add
sbb
ror
push
or
adc
das
and
cdq
pusha
dec
sbb
(bad)
scas
push
adc
stc
sti
cli
dec
mov
nop
xchg
mov
pushf
aaa
dec
rcr
and
adc
cmp
dec
retf
jnp
loope
push
(bad)
clc
(bad)
mov
push
cld
jecxz
dec
dec
or
mov
pop
mov
pop
sbb
push
cmp
sub
xor
scas
(bad)
vcvtpd2ps
dec
in
in
test
loope
add
add
push
mov
stc
mov
pop
dec
hlt
and
retf
test
jnp
test
rcl
pop
inc
dec
mov
fsubr
add
cmp
xchg
mov
mov
lods
and
cmovg
adc
sub
shr
push
push
cdq
sub
adc
movs
xor
inc
mov
xchg
or
mov
pop
mov
cmp
in
push
dec
add
lods
pop
sub
mov
movs
es
retf
sbb
in
inc
dec
mov
adc
out
inc
inc
mov
dec
test
pop
int
adc
out
(bad)
jg
adc
shr
(bad)
jp
imul
(bad)
pop
cmp
cmp
xchg
in
(bad)
mov
inc
mov
jl
popf
loopne
pop
mov
pop
dec
mov
sub
retf
lea
and
mov
repz
jo
push
xlat
das
push
fwait
pop
call
lods
mov
out
and
jle
sbb
std
loope
int
dec
mov
and
mov
xchg
pusha
add
in
icebp
xchg
sbb
or
dec
jl
cmp
test
in
push
or
xchg
pop
es
(bad)
sub
and
stos
movs
mov
and
cmp
loop
int
hlt
lea
xor
out
add
pop
retf
xchg
test
mov
jp
xchg
(bad)
stos
inc
cld
jmp
push
adc
lahf
inc
call
inc
mov
mov
call
cmp
arpl
dec
mov
rcl
or
dec
sub
fidiv
xchg
int
sar
jbe
out
movs
sbb
dec
pushf
push
iret
js
in
pop
div
je
dec
pushf
rcl
test
sbb
rcl
adc
in
and
std
mov
cld
jb
nop
xchg
cmova
cmc
imul
ret
pop
(bad)
mov
jno
test
out
sbb
jle
and
imul
xchg
push
push
cmp
sbb
loop
sbb
fcompp
int
ja
icebp
retf
not
(bad)
push
test
test
rol
fcomp
(bad)
fcomp
addr16
in
icebp
inc
fcom
out
pop
jmp
icebp
ret
and
aas
outs
sub
fdiv
and
push
or
jmp
pop
mov
lahf
aas
mov
cmps
adc
cmc
in
inc
dec
mov
leave
sub
iret
jecxz
icebp
je
xchg
std
outs
jno
in
out
push
ds
push
jecxz
rol
sbb
call
pushf
fcom
into
in
test
jmp
push
leave
fcomip
in
xor
mov
cwde
pop
ins
push
lock
pop
sahf
mov
iret
mov
mov
jmp
mov
pop
mov
cld
nop
out
(bad)
jmp
retf
repnz
cmp
mov
pop
stos
mov
push
xor
mov
clc
mov
add
jmp
ja
jno
mov
loop
push
xor
jecxz
pop
fcom
outs
movs
(bad)
cld
xchg
stos
leave
mov
retf
and
pop
(bad)
imul
sbb
jg
push
sti
xlat
in
mov
cmp
or
int3
jns
pop
sub
popa
mov
lahf
mov
outs
xchg
sub
push
cmc
cmp
sbb
mov
scas
or
sub
loopne
aas
(bad)
dec
popf
test
fwait
add
ss
push
adc
arpl
pop
push
add
jle
xor
push
pop
adc
mov
lds
mov
push
fdivr
or
fmulp
push
fsubr
jecxz
mov
mov
mov
ins
sbb
pop
push
xchg
out
popf
mov
sub
mov
mov
push
nop
dec
pop
jb
stc
fldcw
fst
sub
dec
sub
cmc
sar
rol
inc
inc
ins
jnp
mov
mov
movs
or
sub
std
fwait
inc
clc
sbb
mov
fldcw
out
pop
and
cmp
outs
xchg
cdq
cmc
aam
jnp
arpl
in
stos
mov
dec
fld
cmp
jmp
fld
pop
daa
or
add
jne
push
mov
xlat
or
enter
push
daa
fld
aad
aad
sbb
dec
ins
xchg
leave
ds
mov
adc
sbb
push
aad
lock
and
ss
xchg
and
dec
or
(bad)
bound
dec
xor
pop
mov
xor
inc
into
popf
xchg
pop
add
mov
xor
rol
fcmovnu
jbe
add
mov
(bad)
jo
std
ja
fst
inc
push
data16
dec
jle
add
sti
fcmove
stos
sub
shl
push
(bad)
(bad)
fiadd
cmps
pop
mov
rcr
mov
jg
mov
lods
pop
mov
sbb
push
mov
idiv
imul
pop
dec
imul
imul
push
es
or
repz
in
lahf
cmp
addr16
sub
jo
mov
nop
mov
test
push
sti
adc
fbstp
push
jmp
push
pop
sub
push
nop
xchg
imul
push
hlt
push
dec
pop
pusha
and
inc
(bad)
push
cmp
add
cmps
data16
pop
add
xor
fdivr
lock
sti
popf
idiv
ffreep
jg
stc
dec
arpl
popa
int
in
lahf
cmp
jb
or
jmp
lods
popa
cmc
repnz
outs
rcl
popa
rol
rol
rol
ret
pop
push
mov
jb
sub
and
rol
mov
sub
sub
xchg
repnz
xchg
mov
push
es
out
sub
xchg
(bad)
xor
jae
nop
adc
mov
sub
jnp
mov
mov
mov
xor
dec
loop
bound
adc
inc
sbb
push
dec
leave
call
dec
inc
mov
(bad)
jg
out
es
pop
pop
cmp
xchg
das
pop
shr
dec
aam
rcr
pop
dec
sub
pop
push
adc
add
sub
add
ror
and
push
sahf
aaa
imul
fadd
outs
(bad)
add
dec
xor
hlt
xor
jb
out
inc
inc
cmp
ja
mov
pop
test
pop
or
clc
inc
jno
mov
or
sub
test
pushf
mov
in
(bad)
es
movs
inc
dec
fs
push
gs
xchg
push
pop
xchg
dec
arpl
cmp
dec
push
push
ss
cdq
test
mov
or
push
shl
fst
xchg
mov
mov
loopne
and
and
dec
dec
addr16
and
cmps
lods
mov
fmul
push
daa
aas
ss
sub
mov
xchg
test
arpl
std
ret
add
mov
fidivr
or
jmp
mov
inc
dec
mov
sub
movs
mov
mov
mov
add
xchg
add
pop
sub
popa
ficomp
cmp
sahf
pushf
fbld
dec
cmp
sbb
xor
js
push
xchg
neg
neg
js
push
sub
jno
bound
xchg
sub
push
pop
outs
sahf
shr
or
jl
rcr
xor
out
push
jge
sub
ror
mov
adc
je
mov
lods
gs
mov
ins
mov
mov
popf
push
stc
inc
mov
call
jnp
xchg
iret
jbe
lock
pop
add
ret
xor
pusha
loopne
push
inc
outs
(bad)
xor
out
dec
mov
out
adc
push
lds
push
mov
pop
cmova
loope
scas
aas
rol
fstp
aas
and
pop
ss
rcr
(bad)
mov
lock
aas
aas
or
icebp
(bad)
xchg
push
jmp
stc
and
fs
cmp
sahf
ret
pop
jle
icebp
loop
xor
adc
dec
scas
pop
into
in
shl
out
out
fcom
cmp
lds
cmp
mov
daa
sbb
(bad)
pop
popf
cmc
jns
inc
xchg
ja
mov
cmp
xchg
dec
mov
dec
add
cmp
imul
ss
jle
push
std
loop
aaa
and
arpl
jl
mov
repz
(bad)
lahf
xchg
mov
pop
push
pop
xor
jecxz
or
out
mov
pop
xchg
or
and
inc
add
mov
sub
pushf
or
aad
dec
cmps
loop
add
xchg
sub
add
dec
aaa
in
rcl
jne
nop
cwde
into
(bad)
(bad)
jae
popf
mov
mov
retf
mov
movs
repz
mov
or
mov
adc
retf
aad
xchg
pop
cld
rol
jno
scas
std
outs
iret
mov
mov
mov
jae
int3
xor
pop
pop
into
in
jmp
jle
pushf
test
push
sbb
jno
fisttp
ja
repz
fld
or
ins
push
xor
dec
push
push
mov
into
leave
adc
mov
(bad)
mov
or
and
add
jbe
sub
inc
loop
mov
sub
leave
mov
mov
push
mov
aad
stos
popf
add
mov
push
jp
femms
push
das
push
pop
dec
add
rcr
sub
mov
and
mov
(bad)
fild
add
and
mov
retf
jmp
xchg
add
and
dec
ins
inc
mov
fisub
pop
push
inc
pop
jnp
mov
dec
imul
pop
cmp
sub
shr
jecxz
movs
iret
inc
push
xor
aam
push
fcom
dec
push
cmp
inc
lds
adc
aas
jle
ds
cmps
or
stc
stc
mov
je
cmp
and
into
push
(bad)
mov
arpl
loope
in
mov
sti
dec
imul
fisttp
dec
cmp
or
shl
cmp
cmp
push
or
and
and
(bad)
stos
call
vcvtps2dq
rol
rol
mov
push
cmps
js
mov
shl
mov
mov
lods
adc
xchg
repnz
mov
inc
aaa
bound
ret
sub
pop
mov
mov
mov
scas
mov
mov
mov
loop
out
sub
or
aad
and
test
retf
adc
jle
hlt
xlat
sub
mov
int3
sub
aad
ds
loop
mov
cmp
ins
loope
imul
jnp
xchg
and
adc
pop
xchg
and
ins
(bad)
mov
and
sbb
and
xor
int3
cli
(bad)
pop
arpl
pushf
fwait
jmp
iret
lahf
out
(bad)
test
jns
in
fidivr
or
stos
xor
std
pop
dec
add
loop
xchg
xlat
in
fbstp
add
sbb
jno
mov
cwde
jle
std
loop
(bad)
fld
cld
mov
rcr
test
js
in
in
ins
xchg
xlat
movs
mov
push
dec
lds
outs
js
dec
sbb
cmp
daa
and
adc
sbb
idiv
call
shl
dec
hlt
cmc
xchg
bound
sti
xchg
stos
pop
mov
bound
and
mov
sar
fs
and
fcom
jo
or
jl
fwait
xlat
dec
nop
xor
sub
sbb
out
xchg
cmps
dec
mov
mov
and
push
stos
mov
xor
out
stos
aam
out
jge
test
fsub
push
push
sahf
dec
or
data16
imul
jns
cld
push
push
cwde
call
add
lods
ins
dec
adc
pop
push
sti
cwde
retf
add
scas
cmp
imul
lds
pop
adc
mov
mov
jp
xor
or
aad
cmp
scas
inc
mov
mov
push
call
push
jge
cmp
jecxz
mov
jo
xchg
out
xor
xchg
mov
jns
and
or
push
push
pop
mov
(bad)
test
icebp
mov
ss
jl
sub
push
jnp
retf
mov
mov
cmp
out
sar
mov
adc
xlat
popa
stc
stos
sbb
test
stos
xor
push
mov
outs
nop
push
mov
inc
movs
iret
inc
ins
inc
or
outs
sbb
fdivr
clc
inc
in
mov
pop
pushf
test
pop
and
xor
xor
and
add
rcr
inc
mov
out
test
adc
call
mov
pop
lods
or
jl
outs
cdq
sub
fild
arpl
dec
mov
out
mov
(bad)
popf
adc
icebp
push
pop
cmp
pop
loopne
mov
cmp
nop
arpl
sahf
shl
push
popf
pop
cld
lahf
mov
ja
add
and
mov
mov
or
jecxz
sub
cmp
div
pushf
sti
push
xchg
out
(bad)
dec
cmp
jo
lods
and
sbb
fistp
dec
imul
pop
mov
imul
xchg
pop
(bad)
iret
outs
pop
mov
scas
or
fstp
loopne
not
push
mov
and
push
loopne
sti
imul
mov
cmp
push
sti
mov
(bad)
push
pop
cdq
mov
imul
test
retf
les
scas
ds
mov
movs
bound
xor
sub
pop
inc
mov
cmp
scas
sub
sar
pop
xchg
out
lods
ret
lods
cwde
mov
cs
and
jnp
repz
sahf
sub
test
int3
xor
repnz
and
cwde
in
loopne
ret
cdq
sbb
icebp
iret
repnz
movs
cmc
(bad)
pop
jbe
fdivr
jg
jbe
cwde
xchg
call
sub
xor
bound
mov
ja
loop
pop
push
jl
jnp
cs
and
jmp
pop
fisttp
push
loop
xchg
pop
into
je
loopne
dec
and
mov
xor
mov
jb
aaa
mov
jl
test
mov
ret
pop
lea
mov
mov
enter
dec
mov
mov
rcl
push
jl
mov
loop
lods
pop
cwde
jns
adc
mov
rcl
push
push
dec
sbb
and
mov
or
out
mov
pushf
jo
mov
rcr
xor
add
jnp
or
cmp
add
loop
xchg
xchg
mov
mov
(bad)
or
jg
in
cmp
fdivr
add
stos
push
push
aad
sub
dec
mov
scas
or
and
xchg
idiv
sbb
and
call
mov
adc
mov
jae
cmp
dec
lea
add
mov
ins
cmp
lods
popf
(bad)
dec
xchg
adc
adc
push
inc
out
push
push
cmc
scas
rcl
fist
inc
es
push
dec
push
in
dec
mov
and
shr
or
bound
nop
dec
add
inc
and
pop
mov
mov
or
pop
jle
xor
lds
dec
inc
out
les
lds
push
cmc
stc
jnp
fdiv
mov
and
push
cmp
sub
pop
in
jge
call
sti
adc
cmp
cli
adc
aaa
fmul
aaa
cmp
repz
fistp
ror
jne
ror
cmp
mov
sub
cmp
pop
cmps
div
ret
ret
cmp
loopne
(bad)
push
call
pop
pop
lds
ror
fimul
jbe
(bad)
and
(bad)
xor
popa
dec
adc
cmc
adc
jle
sub
aam
pop
movs
mov
sub
or
cmp
into
jbe
ret
jl
adc
inc
adc
and
inc
push
sbb
(bad)
xchg
cmc
jno
fiadd
in
stos
cmp
mov
xor
inc
clc
and
jecxz
arpl
mov
jle
add
lds
and
add
and
add
or
(bad)
fs
aaa
fbstp
int
neg
outs
je
(bad)
(bad)
pop
fld
popa
cli
mov
mov
addr16
mov
imul
adc
xchg
aaa
xor
ja
jo
addr16
xor
dec
js
mov
retf
pop
outs
push
rol
push
int
push
(bad)
mov
sub
dec
in
sbb
xchg
lods
xor
cld
stos
push
ja
sub
or
pushf
add
sbb
push
adc
int
dec
and
movs
stos
ins
ror
adc
fnsave
inc
jno
mov
xor
jg
shl
mov
ins
mov
pop
add
stc
jns
sbb
test
test
shr
and
lds
cmp
(bad)
nop
cmc
dec
out
imul
sub
cmp
jbe
es
push
inc
add
jg
xchg
inc
stc
and
dec
adc
adc
sub
daa
stc
sub
adc
or
push
scas
and
mov
movs
mov
and
pusha
jge
ss
out
pop
int3
cmc
aaa
pop
sbb
jno
jge
push
rol
jmp
push
ret
icebp
call
push
or
sbb
stos
retf
sub
jl
outs
lea
cmp
jmp
lods
(bad)
mov
lods
retf
mov
push
movd
mov
pop
push
sub
and
mov
sbb
xchg
sbb
mov
xchg
mov
ret
jge
mov
sub
enter
and
and
jmp
jnp
push
sbb
xchg
out
fmul
ror
cmp
mov
or
xor
mov
inc
push
inc
ins
aaa
fst
jo
dec
out
lock
inc
sahf
repz
sbb
xchg
adc
pop
mov
loope
mov
push
(bad)
mov
lods
icebp
fimul
xchg
call
or
push
shl
fwait
pop
std
lock
cmc
cmps
clc
loope
imul
add
fisubr
aaa
cmp
int3
inc
cmp
gs
sti
xchg
cwde
std
pusha
adc
mov
ja
add
in
add
pop
inc
pop
pop
mov
adc
neg
paddsb
sahf
je
in
retf
jb
dec
or
mov
popf
in
ret
mov
mov
aaa
lea
icebp
push
cmp
sahf
mov
mov
lock
sbb
sub
add
lock
inc
sbb
imul
and
sbb
dec
es
add
lock
jle
mov
retf
les
xor
shl
mov
lods
dec
ret
(bad)
pop
or
out
push
pushf
mov
pushaw
ja
sub
(bad)
loopne
int
sbb
popf
lock
fisub
inc
fild
pop
mov
not
mov
(bad)
int3
jge
mov
ficomp
pop
stos
stc
mov
loope
jp
(bad)
xchg
adc
xchg
cmp
cmp
push
pop
jne
js
rcr
scas
addr16
loop
push
pop
mov
mov
fsubr
push
sbb
ss
and
jne
cwde
fst
(bad)
call
ret
lds
mov
mov
cmp
xor
mov
pop
sbb
test
push
pop
int3
jbe
add
movs
pop
inc
add
mov
add
xor
or
push
mov
pop
xor
cmp
repz
out
ins
xor
adc
jbe
fisubr
arpl
in
jo
push
pop
pop
(bad)
popf
push
clc
and
mov
(bad)
loope
dec
leave
cwde
cmp
mov
(bad)
scas
cwde
std
call
xchg
test
jmp
pinsrw
mov
not
jle
and
sbb
or
jmp
xor
mov
jmp
jge
ja
lods
fdiv
push
pop
push
adc
mov
push
push
xchg
pop
jecxz
xchg
or
ds
push
stos
imul
inc
(bad)
call
mov
inc
mov
xchg
(bad)
xor
out
mov
xchg
sbb
in
es
mov
int
cmp
aaa
pusha
bound
sub
test
add
pop
mov
pop
fcmovu
aam
cmp
retf
idiv
adc
dec
push
les
push
adc
add
sub
aad
clc
fwait
imul
outs
pop
ins
sbb
xchg
sbb
pop
xchg
and
pop
mov
xchg
stos
xor
jle
scas
pop
mov
int3
inc
add
cmp
int3
fild
and
adc
test
and
mov
jg
inc
enter
jnp
cmps
push
or
pusha
inc
ds
outs
fisttp
lea
cwde
inc
test
(bad)
push
sub
(bad)
pop
fcom
push
scas
mov
sub
cwde
shl
in
ins
lods
loope
outs
or
dec
stos
imul
sub
xchg
popf
dec
xor
and
and
iret
retf
clc
hlt
cli
pop
add
int
iret
dec
push
or
cmp
fnstcw
leave
mov
aas
ss
or
add
adc
xor
loop
cld
jge
sub
jae
(bad)
inc
pushf
and
aas
cld
cld
fcom
enter
push
push
rcr
and
outs
dec
sub
das
pop
xor
xlat
sahf
dec
hlt
cmp
xchg
mov
into
jnp
add
push
imul
push
(bad)
mov
push
es
pop
es
xor
pusha
icebp
xchg
add
cmps
mov
mov
and
(bad)
dec
jns
out
imul
scas
mov
or
aam
mov
push
xchg
retf
fidiv
push
sub
(bad)
and
cmp
cs
dec
cmp
rcr
xor
imul
inc
cmp
cmp
popa
or
test
jnp
stos
push
push
outs
inc
push
jp
mov
loop
push
xchg
and
inc
pop
push
mov
dec
add
push
push
add
and
(bad)
sbb
pushf
stos
seto
pop
dec
nop
mov
jae
pop
and
xor
inc
mov
mov
je
sub
xchg
xchg
rcr
cdq
inc
adc
rcl
rcr
std
xchg
mov
ds
out
imul
jl
dec
or
jno
push
push
aas
iret
rcl
inc
add
test
and
or
xor
xor
mov
or
cld
add
or
lds
retf
pop
retf
test
lods
rcl
inc
mov
aas
sub
sti
jne
pop
mov
pop
in
loope
jmp
loop
repz
jmp
xchg
mov
in
mov
jo
xor
mov
shl
adc
cmovge
adc
xchg
mov
cmc
outs
in
lds
(bad)
lahf
pop
mov
xchg
jmp
xor
enter
xchg
jecxz
scas
and
xchg
pavgw
pop
and
sti
js
jne
jg
xor
adc
retf
(bad)
cdq
gs
sbb
aaa
push
mov
jb
clc
icebp
cli
clc
jno
jnp
adc
in
xor
pop
mov
shl
popf
sbb
pop
inc
mov
cwde
adc
push
(bad)
js
retf
mov
loopne
dec
xchg
clc
jo
add
aad
ret
mov
inc
clc
jo
cmp
dec
xchg
mov
push
pop
mov
ja
js
jmp
(bad)
imul
adc
jecxz
pop
icebp
cmc
sub
loopne
add
add
arpl
outs
sub
mov
aam
bound
fnsave
jle
bound
and
(bad)
lahf
push
aad
mov
out
cmp
popf
test
sbb
icebp
ins
jnp
(bad)
aam
ror
test
fidiv
js
cmp
jmp
jne
inc
addr16
mov
adc
pop
jmp
into
push
sbb
mov
or
xchg
loopne
lea
ficomp
mov
inc
ins
and
bndldx
mov
lods
xor
mov
push
loopne
cs
(bad)
cmp
xlat
int
jecxz
jl
ret
call
dec
xor
ds
arpl
repnz
outs
push
add
dec
je
pop
xchg
jl
lea
jle
push
aas
(bad)
cmp
lds
add
sbb
icebp
mov
or
cmp
push
jecxz
mov
fstp
mov
loop
(bad)
jnp
test
sub
cmp
push
add
dec
push
pop
out
in
push
mov
pop
jecxz
adc
mov
sbb
sbb
aam
pusha
mov
sbb
fnsave
rcl
repnz
stc
dec
and
xor
adc
cmp
add
lock
ins
xchg
cmp
mov
mov
fneni(8087
loop
sar
or
xchg
sub
stos
cmp
jl
mov
pop
and
pop
cmp
int3
push
mov
stc
iret
test
inc
out
pop
test
push
in
pop
sub
xor
jo
inc
pop
cmp
fwait
cmp
push
in
inc
bound
lahf
and
inc
movs
mov
ins
ins
and
les
ins
sbb
lock
ins
fild
dec
mov
cmp
cmp
xchg
stos
cli
cld
adc
rol
lahf
inc
jne
jmp
jg
and
jno
hlt
inc
push
push
push
cmp
pop
inc
movs
ds
pop
push
push
out
retf
inc
rcr
ror
push
out
mov
sbb
adc
imul
es
fadd
pop
dec
push
and
xchg
nop
aas
icebp
out
clc
(bad)
cmp
sti
loopne
fbld
and
nop
movs
inc
mov
xchg
ins
sbb
fisubr
and
jns
dec
xchg
push
mov
std
jecxz
xor
les
xchg
and
cmps
cmps
push
in
test
(bad)
xlat
sub
xor
nop
cld
add
mov
les
jne
mov
sar
inc
and
or
and
dec
jbe
mov
(bad)
les
call
mov
enter
add
cmp
push
push
lea
cmp
mul
cmps
aaa
mov
loop
imul
fiadd
and
xchg
add
adc
hlt
fs
mov
js
(bad)
mov
and
sub
and
adc
adc
xchg
xchg
imul
cmps
retf
popa
shr
cmps
mov
adc
cmc
add
pop
and
daa
fwait
imul
sbb
dec
mov
or
adc
xor
sub
ss
push
in
pop
jmp
or
out
fidiv
ror
das
popa
cli
mov
mov
mov
(bad)
jmp
aad
popa
data16
mov
pop
bound
add
mov
enter
loope
push
mov
jle
lock
or
movs
pop
inc
sbb
hlt
dec
mov
pop
lock
xor
ret
call
and
mov
mov
adc
sbb
sbb
pop
fwait
repnz
push
xchg
mov
or
and
jl
add
rcl
push
mov
enter
inc
add
mov
xchg
adc
and
mov
or
pop
and
mov
mov
sbb
xchg
xchg
sub
lea
mov
cmp
fisubr
xor
adc
nop
nop
ret
pushf
fadd
out
call
pop
mov
cmp
call
lock
xor
stos
movs
outs
test
into
inc
dec
inc
and
inc
xchg
pop
test
dec
inc
adc
inc
bound
sbb
cmp
inc
imul
inc
sub
inc
sbb
pop
xor
fadd
inc
sbb
inc
jbe
inc
jp
movs
cld
aad
std
and
xchg
add
int3
add
popa
mov
jne
mov
inc
daa
pop
or
in
jne
or
mov
xlat
(bad)
ds
outs
jmp
add
je
push
stos
div
push
dec
jne
pop
adc
adc
mov
movlps
mov
adc
retf
dec
test
outs
cwde
or
mov
in
fdiv
(bad)
out
mov
fbstp
mov
je
pop
mov
retf
jmp
imul
xor
xor
aas
dec
jbe
ss
add
mov
neg
mov
lock
cmp
ins
test
xchg
sbb
jmp
popa
test
inc
xor
gs
jecxz
bound
adc
leave
and
xor
adc
lds
mov
xor
fstp
es
inc
aas
adc
ja
and
add
ficomp
(bad)
(bad)
add
add
ins
(bad)
leave
aas
psrad
lods
imul
add
(bad)
xor
xchg
nop
cs
and
sub
cmp
push
xor
mul
scas
retf
stos
icebp
pop
xchg
sbb
es
popf
sub
fild
(bad)
ds
mov
mov
mov
cmp
iret
cmc
(bad)
loopne
add
fbstp
jl
mov
mov
repz
test
ds
cld
aad
mov
mov
push
xchg
fld
and
sbb
test
inc
and
pop
in
add
and
stc
adc
ins
and
mov
cmc
cwde
mov
ffree
retf
mov
pop
not
mov
(bad)
fwait
leave
jle
mov
sbb
lods
cmp
lahf
bound
pop
call
loop
lock
pop
add
push
fld
js
ins
adc
sub
aas
pop
pop
or
jnp
lock
inc
loopne
sbb
jb
push
lahf
ja
loopne
pusha
or
adc
fisttp
add
mov
fstp
(bad)
xchg
popa
mov
rcl
pop
ins
mov
dec
or
gs
arpl
(bad)
fwait
rol
mov
or
xchg
div
xchg
cld
xor
jo
(bad)
cmc
(bad)
cmc
sub
(bad)
cmp
xor
inc
fimul
(bad)
and
xchg
or
jp
xchg
mov
pushf
std
mov
call
push
cmp
add
add
ficom
pop
mov
mov
fld
repnz
push
mov
cmps
xor
fs
test
push
dec
ins
jae
outs
mov
out
pop
cwde
and
or
push
xchg
sub
adc
neg
xchg
push
rol
add
jo
xor
aad
adc
iret
out
mov
adc
mov
jb
xchg
(bad)
rcl
or
or
loop
add
int
call
or
mov
arpl
cli
aad
mov
mov
add
xchg
je
and
mov
das
dec
jle
jge
inc
add
loope
sub
mov
sbb
jle
push
jnp
sbb
add
inc
cmps
cmps
shl
mov
and
jg
add
jp
retf
sub
jbe
xchg
mov
sbb
rol
or
(bad)
aad
fidiv
in
scas
push
ret
xchg
sub
mov
mov
(bad)
std
inc
push
loope
pop
xchg
mov
push
dec
rcl
(bad)
icebp
dec
adc
jns
sub
dec
pushf
inc
icebp
mov
retf
jg
add
jge
(bad)
out
shl
sub
xchg
add
pop
and
mov
or
sbb
mov
and
inc
(bad)
test
(bad)
retf
retf
ret
or
ds
add
cmp
mov
inc
jg
add
mov
mov
mov
mov
imul
and
push
mov
cld
js
std
add
mov
adc
adc
add
or
in
imul
mov
mov
mov
push
xlat
aad
mov
mov
fsub
fcmove
mov
std
adc
out
mov
clc
cwde
mov
add
pusha
inc
lock
bound
add
aam
iret
and
push
pop
mov
add
xchg
repnz
xchg
and
nop
loopne
les
pop
xchg
pop
sub
jnp
lods
daa
xor
popa
mov
add
mov
into
pop
lods
sahf
sbb
(bad)
or
push
lods
sbb
inc
xor
sub
outs
in
ficomp
jp
test
jmp
adc
aaa
out
stos
pushf
and
push
sbb
aam
push
inc
push
sbb
mov
stos
outs
sub
cld
pop
aad
lds
nop
retf
xchg
xor
scas
or
outs
and
inc
add
mov
mov
icebp
add
das
pop
test
add
icebp
fstp
ins
xchg
and
push
sbb
repnz
nop
xor
pop
cmp
stos
jg
add
test
dec
std
pop
xchg
dec
adc
xor
jecxz
sub
inc
mov
xchg
ret
pop
sub
cmp
push
mov
or
jns
test
mov
test
mov
push
fld
sub
pop
adc
or
lea
dec
push
and
jns
sbb
jp
cmp
pop
bt
push
push
movs
inc
mov
push
pushf
movs
push
mul
and
inc
dec
pop
mov
cmp
in
mov
adc
movs
push
add
jno
sub
dec
hlt
icebp
push
mov
adc
dec
mov
mov
mov
mov
jmp
pop
dec
shl
push
cwde
pop
and
imul
mov
popa
push
pop
mov
pop
push
xchg
add
mov
sbb
in
ss
fld
dec
ss
push
inc
jb
xchg
sbb
loope
dec
loop
push
pop
sbb
imul
lds
arpl
jns
push
outs
fucom
mov
or
in
fisttp
iret
xchg
sub
cvtdq2ps
int3
(bad)
rcr
outs
pop
sbb
and
mov
or
daa
dec
xor
not
adc
fistp
(bad)
leave
aaa
pop
jno
and
xlat
xor
cmp
cmps
gs
fstp
mov
cmc
fsubr
(bad)
sub
call
dec
inc
mov
sbb
fwait
stos
sbb
(bad)
repnz
shl
jmp
xchg
xchg
sti
fidivr
scas
xor
mov
ret
pop
mov
pop
cld
icebp
in
push
(bad)
fisttp
(bad)
cmc
or
dec
cwde
jge
ds
arpl
arpl
popa
mov
int3
(bad)
test
or
jl
pop
or
cmp
sbb
mov
div
icebp
(bad)
pop
loopne
sbb
ds
xlat
jg
add
(bad)
aaa
sbb
and
sub
js
fld
outs
movs
mov
mov
fcomp
stc
jl
adc
out
test
aaa
imul
loopne
retf
inc
mov
sti
cdq
loopne
add
js
jmp
retf
lods
and
jnp
cmc
mov
aaa
push
pop
lahf
mov
fwait
stos
mov
add
test
int
gs
cmp
sub
mov
mov
xchg
xsaves
xchg
test
and
pushf
leave
mov
retf
dec
ja
push
ja
fstp
mov
(bad)
push
stc
(bad)
cmp
out
shl
call
imul
loopne
xor
push
pop
jle
(bad)
fldcw
imul
loopne
jno
(bad)
fbstp
xchg
repz
or
push
dec
outs
or
dec
xchg
lock
jb
cmps
movs
sbb
js
pushf
dec
sbb
lds
retf
xchg
push
mov
lahf
add
movs
and
mov
(bad)
popa
retf
sahf
pop
cmp
sub
test
movaps
std
adc
imul
sub
idiv
add
call
sub
inc
sbb
mov
add
arpl
stos
cld
ins
inc
dec
pop
stos
sub
rcl
sar
outs
mov
mov
cmp
sub
imul
icebp
inc
mov
xor
imul
ror
xor
or
push
mov
les
popa
stc
cmps
lea
pop
sub
and
in
ret
adc
mov
mov
dec
and
movs
mov
std
jp
mov
add
inc
jns
sbb
shl
sub
lds
aad
pop
pop
xor
xor
call
adc
xchg
aas
call
push
jle
push
std
sbb
or
nop
xor
mov
jmp
pop
and
and
mov
xor
bound
fstp
mov
sub
cdq
pop
pop
push
rcr
xchg
outs
mov
jg
mov
aaa
mov
push
pop
pop
(bad)
adc
shld
lock
add
mov
jp
push
es
mov
xchg
inc
mov
sti
test
test
add
mov
inc
stos
jg
add
jnp
in
lock
lock
jnp
jns
xchg
(bad)
add
dec
sub
std
push
cmps
aaa
ins
xor
jle
shr
(bad)
outs
xor
mov
(bad)
adc
(bad)
jnp
lds
push
adc
pusha
(bad)
fwait
pop
rcr
inc
or
xchg
inc
cmc
fwait
dec
push
stos
dec
or
pop
arpl
cs
mov
ror
sbb
sahf
sbb
addr16
sti
ficom
xor
repnz
movs
je
clc
push
ret
adc
sub
adc
xor
push
test
mov
gs
rcl
(bad)
ficom
adc
not
push
aad
sub
pop
mov
stos
ins
sub
je
pop
jmp
cmp
add
pop
or
add
fcomp
jbe
adc
cmp
pop
xchg
fadd
and
xchg
aam
sub
jae
dec
and
(bad)
sbb
jae
pop
pop
pop
sub
and
ins
push
sub
(bad)
inc
push
mov
mov
movs
and
inc
add
pushf
imul
pushf
inc
and
adc
adc
push
inc
stos
std
retf
push
in
aaa
mov
adc
add
test
lds
test
into
inc
ins
pop
ds
xor
mov
sub
enter
xchg
adc
cs
sti
mov
pop
or
dec
pop
enter
lods
push
(bad)
sbb
push
iret
inc
dec
dec
sbb
jge
cmp
adc
adc
rol
mov
adc
jg
pop
aad
add
mov
dec
push
adc
add
and
mov
jmp
daa
or
icebp
sahf
sub
or
fwait
call
pop
dec
push
mov
mov
arpl
sub
stos
and
jg
es
cmp
jp
lahf
adc
jle
xchg
jne
popa
or
ror
adc
out
xchg
outs
mov
pop
aaa
hlt
jecxz
xchg
and
icebp
data16
mov
or
movs
int
jbe
and
adc
inc
xor
into
out
repz
cld
and
push
stc
das
ret
mov
sti
bound
adc
ficomp
and
or
aas
popf
(bad)
(bad)
scas
jbe
jmp
(bad)
loope
or
cmp
mul
add
in
or
icebp
test
jne
inc
fcomp
cld
jno
xchg
sbb
inc
xchg
sub
shr
cmp
cmp
lock
jl
mov
sub
jmp
stc
js
xor
pop
jnp
add
or
repz
scas
das
dec
ret
xchg
or
pop
addr16
outs
bnd
or
mul
aad
pop
les
out
pop
test
push
cmp
mov
(bad)
aaa
stc
sbb
xchg
sbb
cmp
mov
ficom
mov
test
stos
add
sbb
dec
and
ficomp
out
pop
mov
push
loope
xchg
cmp
fisubr
adc
xchg
push
mov
mov
pop
dec
mov
retf
cmp
xchg
loope
jg
inc
loope
xchg
mov
ins
dec
icebp
and
cld
into
fild
das
xchg
sub
imul
mov
loope
pop
and
cmp
fld
out
outs
int3
les
fild
addr16
inc
loop
dec
xor
jmp
xchg
xchg
mov
loop
and
dec
push
mov
xchg
xor
adc
jle
adc
jecxz
pop
dec
aaa
(bad)
aaa
pop
stos
jo
lds
pop
test
dec
int3
outs
and
clc
jae
leave
push
and
dec
lds
mov
(bad)
push
loopne
or
paddd
sti
xchg
xor
jge
xchg
inc
dec
and
stc
icebp
mov
pop
mov
and
or
push
and
mov
dec
adc
nop
js
cs
data16
lods
movs
lods
add
add
sbb
jne
sbb
clc
mov
adc
cmp
aad
in
push
and
jnp
sti
mov
std
mov
daa
jo
and
fcmovbe
or
div
hlt
jb
stos
xor
sub
sbb
pop
lds
jle
ins
cwde
push
cmps
outs
adc
ins
adc
pop
sbb
in
inc
das
jmp
test
inc
push
arpl
dec
or
mov
pop
mov
dec
stc
pusha
fnstcw
xchg
imul
dec
sbb
enter
cs
add
rcl
movs
in
sub
or
mov
add
adc
(bad)
sub
jb
push
dec
ins
pop
lods
sbb
cmps
mov
jecxz
or
ins
ret
retf
add
xor
pop
pop
sahf
dec
popa
xlat
mov
fiadd
xor
adc
arpl
pop
hlt
pushf
mov
daa
stos
pop
pop
fs
in
cdq
fild
adc
jg
add
adc
mov
out
ffreep
fist
add
or
sub
add
pop
and
inc
sub
mov
push
dec
jle
sbb
and
adc
and
imul
fisttp
je
mov
repnz
mov
add
es
ins
ins
cmps
sub
mov
pxor
clc
adc
add
dec
inc
dec
add
jb
sub
dec
add
sub
sbb
push
(bad)
mul
xchg
xchg
enter
(bad)
mov
xchg
jne
outs
fidiv
pop
jnp
(bad)
outs
fldenv
outs
repz
mov
imul
sub
dec
ss
add
pop
cmp
dec
dec
(bad)
push
jnp
enter
mov
mov
push
sti
clc
dec
lods
loop
push
popa
add
rcl
jge
add
in
xchg
mov
in
or
jmp
sub
sub
inc
add
jo
outs
mov
stos
(bad)
adc
xor
das
add
adc
stc
pop
leave
sbb
test
test
xchg
ins
adc
jne
sub
dec
add
pop
arpl
cld
or
dec
dec
xor
iret
xor
and
mov
sbb
or
add
push
sub
loope
jbe
xchg
add
shl
repz
add
outs
push
pop
push
pop
retf
and
das
mov
(bad)
iret
jecxz
in
lock
mov
loope
mov
loope
lea
inc
test
or
mov
hlt
dec
inc
inc
push
add
in
push
sub
adc
mov
or
lds
and
es
adc
movs
mov
push
movs
push
jno
push
mov
call
test
ret
test
xchg
push
push
shl
xor
out
rol
xor
xchg
xchg
mov
xchg
and
push
adc
movs
in
data16
adc
loopne
pop
mov
sbb
fldenv
mov
inc
xrelease
movntps
arpl
mov
pop
mov
retf
xor
aaa
sbb
aas
sub
pop
pop
ja
popa
(bad)
sahf
and
fnstcw
mov
aaa
xchg
fist
popf
cs
nop
mov
fidivr
hlt
div
test
sub
xchg
rcr
pop
test
enter
xor
dec
dec
push
jb
hlt
cli
and
enter
push
jecxz
cwde
dec
outs
test
call
push
es
dec
sbb
xchg
daa
pop
jmp
nop
in
test
jl
ins
xchg
fisttp
cmp
add
mov
jecxz
dec
cmp
int3
ret
leave
popf
(bad)
cmp
mov
in
stos
add
ret
push
cld
inc
cmps
jo
shl
sti
imul
sti
arpl
jae
mov
lahf
in
les
adc
nop
imul
push
fcom
callw
sbb
pop
test
fdivrp
jge
add
xor
or
xchg
cs
mov
loope
push
cmp
ja
ficomp
dec
(bad)
(bad)
test
mov
sub
loope
stos
call
ja
les
(bad)
fisttp
hlt
imul
fistp
adc
push
adc
mov
sub
jno
push
xor
inc
cmp
mov
cmp
out
fdiv
push
jge
add
adc
pop
fwait
arpl
in
inc
sub
(bad)
(bad)
cmps
jecxz
mul
lods
ins
dec
cld
stos
and
lahf
in
loopne
xor
cld
and
add
xor
cmp
sar
jl
pop
cmp
add
jg
mov
mov
movs
in
(bad)
(bad)
out
(bad)
or
int3
mov
loopne
mov
div
jb
push
loopne
mov
(bad)
dec
add
cmp
or
or
(bad)
aad
pop
sbb
je
sbb
mov
retf
or
inc
sbb
(bad)
xchg
or
jl
mov
mov
in
cwde
imul
mov
add
pop
xor
mov
and
(bad)
add
cmp
sti
iret
adc
cli
inc
adc
loop
(bad)
rcr
or
jmp
xor
repnz
mov
mov
push
pop
fwait
(bad)
sub
inc
or
movs
mov
arpl
adc
loopne
dec
or
mov
mov
icebp
bound
mov
jle
test
es
sbb
call
retf
sub
or
push
pop
mov
into
int
inc
pop
or
jnp
mov
popa
fistp
inc
sub
imul
sub
out
shl
add
push
scas
out
out
add
inc
test
inc
daa
loope
jmp
dec
sbb
(bad)
retf
mov
jb
and
mov
mov
pop
cmc
cmp
mov
(bad)
cmps
shl
sub
mov
fld
das
imul
mov
test
inc
jne
mov
mov
adc
outs
and
fwait
push
in
sub
mov
mov
dec
mov
cmp
xchg
sbb
fist
daa
jmp
test
lds
and
scas
inc
cdq
pusha
sbb
add
mov
(bad)
ficom
mov
push
mul
sbb
in
(bad)
xchg
mov
jb
cmc
cmp
dec
xchg
cs
sub
add
jo
adc
mov
scas
adc
loopne
dec
jno
cmc
ror
aad
xor
or
add
push
pop
fcmovne
jne
adc
xchg
test
outs
push
jle
and
inc
(bad)
out
xchg
or
invlpg
add
add
dec
xor
leave
pop
and
lods
dec
ds
cld
dec
and
jp
lods
mov
aaa
and
pop
ja
stc
jg
add
rcr
ja
call
push
push
xor
adc
dec
pusha
dec
movs
jp
push
cmp
icebp
out
test
int
dec
xchg
add
pop
inc
inc
clc
inc
inc
test
rcl
repz
inc
pop
jns
(bad)
arpl
xor
ins
xchg
sbb
test
add
or
retf
addr16
pushf
test
clc
pop
or
add
jo
add
mov
call
lods
and
or
adc
xor
adc
add
adc
adc
xchg
inc
jns
jl
mov
xor
fmul
and
xchg
fmul
stos
inc
pop
mov
loopne
or
sbb
lods
adc
shr
nop
mov
push
mov
lds
not
push
add
mov
inc
jns
mov
xchg
adc
jmp
or
aam
dec
add
pop
pop
or
add
rcr
retf
sub
push
jle
movs
ins
scas
dec
pop
lods
lods
cs
mov
stos
mov
push
pusha
je
sbb
push
(bad)
icebp
inc
push
push
movs
jae
or
fs
push
cmp
int3
dec
lock
std
mov
pop
mov
xlat
(bad)
(bad)
retf
(bad)
adc
repnz
fwait
push
sub
and
xchg
pop
cmp
mov
imul
(bad)
in
lds
mov
xchg
sbb
popa
sti
scas
inc
mov
aas
cmp
inc
ret
mov
fild
imul
mov
fwait
xchg
adc
adc
and
xchg
lods
fst
jmp
pop
enter
stos
les
and
or
mov
dec
add
loop
cmp
mov
mov
faddp
sbb
cmp
jae
push
loop
pop
outs
js
jp
(bad)
nop
test
push
loop
or
fimul
ja
or
xor
xchg
pop
cwde
mov
lock
fild
sub
cs
lods
jo
nop
sub
es
pop
fisubr
shl
stc
rol
pushf
cli
inc
pop
mov
outs
ret
dec
loop
mov
push
cld
ins
pop
adc
jne
fidiv
pop
lahf
out
test
mov
mov
lds
jecxz
cmps
sbb
pop
mov
or
xchg
or
xchg
test
sub
out
stos
icebp
into
dec
push
dec
xchg
lock
dec
ret
pop
cld
test
jmp
icebp
int
cmp
mov
and
mov
test
adc
cmp
mov
or
push
or
adc
std
fimul
int3
(bad)
mov
int3
ret
test
xor
or
aam
stos
(bad)
sbb
push
cs
mov
xlat
jecxz
lods
test
mov
pop
lahf
mov
xchg
add
jl
out
jg
mov
mov
cmp
sub
jl
gs
fimul
jno
repz
push
call
or
mov
add
test
pop
cld
and
jbe
cmp
mov
stos
or
packssdw
ficom
rcl
mov
loop
xchg
adc
push
fisub
fimul
mov
stos
jg
sbb
or
mov
popa
inc
clc
sub
or
xchg
loop
mov
cs
jecxz
sub
xchg
das
(bad)
pop
jo
cdq
add
mov
mov
pop
es
(bad)
sbb
jmp
push
cs
loopne
push
inc
push
out
and
cs
add
outs
sbb
shr
into
ret
out
pop
push
push
pop
or
addr16
sub
pop
ret
pop
mov
jno
neg
dec
mov
aas
or
inc
fst
add
adc
rcl
popa
dec
dec
and
lea
cmp
inc
pop
fsub
add
inc
pushf
rol
dec
or
ret
sbb
or
xchg
push
push
push
sub
sub
inc
int
xor
adc
ins
pop
xchg
or
mov
ret
xor
inc
jb
or
xchg
adc
pop
clc
adc
xchg
in
(bad)
loopne
mov
cs
sbb
xchg
sbb
enter
mov
mov
(bad)
cmp
je
arpl
or
(bad)
xchg
lock
rcl
add
cld
outs
ret
dec
sub
jle
push
add
jp
jge
sbb
add
(bad)
sub
sbb
retf
jnp
sub
jmp
aam
in
pop
mov
in
jns
icebp
xchg
inc
dec
nop
js
xor
or
mov
loope
mov
mov
dec
aas
dec
not
arpl
and
adc
nop
xchg
xor
lock
mov
cld
inc
jg
push
(bad)
push
sub
cmp
push
cld
jae
mov
push
jne
add
add
inc
ret
cld
or
sbb
pop
or
or
add
or
inc
popa
pop
sub
lds
cwde
add
cmps
mov
movs
pminub
push
jmp
imul
sub
add
cmp
lock
and
and
xchg
cmp
cmps
jle
jle
add
lahf
loopne
nop
xchg
push
outs
push
(bad)
adc
and
mov
fiadd
mov
call
loopne
(bad)
push
add
rcr
lods
es
adc
push
push
push
cwde
cdq
pop
popa
jmp
mov
cmp
(bad)
sahf
cdq
adc
test
fistp
inc
gs
repnz
xchg
xlat
push
mov
mov
or
out
adc
test
shl
ja
mov
stos
mov
xchg
xchg
sub
retf
dec
mov
or
ret
inc
(bad)
mov
adc
and
cwde
ins
mov
mov
pop
call
sbb
jp
shl
xor
push
xchg
(bad)
in
retf
mov
and
and
xor
iret
aad
add
sub
push
leave
pop
sub
inc
rol
dec
dec
loopne
jo
neg
mov
js
dec
mov
leave
cmp
add
(bad)
int3
fwait
cmps
push
add
das
cmp
inc
or
data16
sbb
pushf
jl
add
push
out
dec
dec
loop
les
rcl
add
mov
data16
repz
stc
es
xchg
mov
stos
mov
mov
jg
adc
sbb
sbb
dec
sub
retf
(bad)
adc
jns
aad
test
dec
dec
push
cmp
call
bound
pop
mov
repz
lock
dec
(bad)
mov
fldenv
cmp
les
in
fnstcw
ret
xchg
add
cmc
and
or
cmc
lds
xor
pop
test
pop
scas
fisttp
pop
mov
je
sub
cmps
lods
cmp
pop
push
mov
jge
es
mov
stc
mov
dec
cs
push
jns
(bad)
or
cmp
cmps
or
mov
and
les
and
mov
cdq
mov
adc
int
mov
shl
adc
jecxz
and
in
sbb
pusha
bound
imul
mov
jl
arpl
outs
test
fisub
push
add
cmp
cs
add
fdivr
jecxz
int
cmp
inc
xor
scas
push
push
in
lar
dec
add
ins
(bad)
stc
(bad)
es
dec
dec
cmp
dec
add
mov
add
sahf
cdq
rcr
shl
mov
popa
pop
adc
xor
neg
je
(bad)
mov
mov
loop
stos
sub
scas
jmp
mov
pop
cmp
pop
cmp
sbb
sbb
xchg
xlat
mov
loop
sar
arpl
jbe
stc
mov
jmp
icebp
and
ret
or
aad
in
inc
jle
outs
imul
mov
xchg
sti
cli
js
ins
jl
rcl
repz
(bad)
cmp
fimul
jo
sbb
push
loopne
jge
cmp
add
loope
loopne
adc
dec
scas
daa
ds
hlt
mov
sahf
js
rcr
jmp
xchg
loopne
mov
(bad)
pop
sahf
aaa
(bad)
xchg
jmp
lock
pop
dec
mov
(bad)
fimul
cmc
sar
cs
imul
iret
add
and
ret
sbb
data16
int
sti
adc
aaa
adc
and
xchg
imul
mov
adc
mov
or
mov
xchg
js
stos
(bad)
jge
add
dec
jno
fadd
sub
mov
sub
neg
lahf
repz
ds
adc
lahf
push
sti
(bad)
rol
dec
vpavgw
cmp
or
lahf
jo
int3
jns
loopne
sub
les
imul
push
call
push
into
jns
inc
mov
jae
scas
dec
inc
dec
pop
cmp
in
or
cdq
mov
xchg
pushf
sub
add
pop
dec
or
clc
test
into
jae
and
xchg
fucomp
push
call
movs
push
jge
push
xchg
out
or
xchg
pushf
hlt
bound
and
add
and
loop
bound
std
sbb
nop
xor
xor
stos
outs
adc
mov
rcl
add
stos
shl
xor
clc
push
xchg
fst
fld
leave
pop
or
jno
push
inc
mov
in
adc
lods
pop
adc
adc
add
call
pop
sti
fcomp
mov
xor
(bad)
mov
in
and
fiadd
mov
das
fisub
cmp
movs
mov
mov
cmp
outs
fbld
ss
loop
and
jp
jg
cs
outs
pop
lea
dec
xor
sub
movs
stos
pop
sbb
jns
mov
sbb
push
or
sbb
pop
jg
je
inc
pop
xchg
jl
sbb
xchg
sete
test
jno
(bad)
push
call
jl
xor
nop
jecxz
cmps
mov
sti
pushf
adc
lahf
pop
mov
and
out
movs
inc
pop
pop
cmp
pop
xor
push
adc
cs
(bad)
jb
jne
jp
jno
out
push
jne
idiv
inc
inc
push
js
mov
mov
sub
nop
lahf
(bad)
pop
mov
mov
pushf
xor
mov
ds
push
add
xchg
fidiv
mov
rcl
in
mov
scas
scas
push
inc
cmp
sub
rcl
adc
push
add
imul
idiv
jg
add
sti
mov
mov
dec
sub
fwait
pop
adc
xchg
rcr
cmps
(bad)
ins
stos
pop
cs
push
mov
push
into
mov
jo
mov
leave
or
xor
das
push
xor
popf
enter
jmp
mov
add
xchg
lods
add
adc
std
or
mov
mov
inc
ss
and
cmp
out
out
sub
push
xor
pop
mov
push
pop
inc
lock
inc
arpl
stos
retf
add
cmp
cwde
lds
mov
add
mov
and
jmp
enter
dec
cmps
call
or
outs
pop
sbb
adc
dec
sub
xor
push
xor
jb
outs
sub
inc
adc
xchg
cdq
adc
jl
push
push
sbb
sahf
sub
push
pushf
dec
adc
adc
adc
sub
sub
add
mov
add
sub
dec
dec
xor
or
mov
dec
dec
inc
mov
int3
add
dec
(bad)
imul
(bad)
outs
mov
in
pop
mov
dec
inc
mov
retf
mov
push
test
into
loope
inc
in
mov
sub
cmp
mov
inc
mov
mov
pushf
dec
dec
xor
ficomp
into
push
xchg
mov
push
mov
arpl
call
push
sub
(bad)
mov
rcr
push
test
dec
dec
ja
pusha
mov
inc
and
dec
xchg
loop
fadd
icebp
pushf
xchg
xchg
aad
pushf
or
cmp
adc
sahf
push
retf
jmp
mov
test
and
or
sub
push
jae
add
retf
and
(bad)
iret
adc
js
mov
loope
push
pop
pop
outs
mov
cmp
cmc
nop
sbb
sub
cmp
cmc
xchg
dec
ds
dec
cmp
xchg
jno
scas
adc
mov
ret
xchg
ret
sbb
int
jl
jb
mov
dec
add
(bad)
(bad)
icebp
mov
or
push
call
in
cmps
pop
mov
rcr
mov
pop
out
mov
ja
cmp
scas
sbb
sbb
cs
sar
push
cld
mov
fs
loope
jl
out
dec
xchg
loope
int
js
pop
sbb
push
mov
test
jecxz
cwde
xor
jae
stos
sbb
mov
and
dec
ret
into
or
dec
mov
dec
mov
mov
and
mov
js
sbb
(bad)
xchg
xchg
or
jge
or
fcomp
xor
xor
loope
jle
adc
pop
adc
push
mov
inc
fild
sbb
mov
daa
mov
add
mov
popf
loope
dec
and
fidiv
(bad)
fistp
push
out
stc
repnz
adc
js
retf
div
iret
cmp
scas
stc
inc
js
jle
ds
shr
stos
hlt
sub
imul
hlt
ret
sub
add
sbb
(bad)
or
jl
xor
loope
and
pop
sub
jmp
mov
ja
push
clc
loope
xor
mov
cmp
xlat
call
xchg
mov
out
mov
xchg
xor
scas
(bad)
loopne
adc
stc
sahf
xlat
popf
retf
or
(bad)
mov
jle
in
les
add
adc
xor
add
fld
dec
or
es
mov
adc
sbb
mov
sbb
dec
aam
mov
and
dec
add
sbb
dec
and
or
fadd
and
adc
sbb
push
push
push
add
enter
and
lods
pop
daa
pop
cld
inc
xor
test
imul
xchg
jmp
sti
xor
out
ds
std
dec
lods
pop
mov
add
leave
adc
jb
iret
xchg
add
cdq
xor
inc
sub
add
sub
adc
lahf
(bad)
jmp
push
cmp
fisttp
fstp
and
bnd
sbb
ins
fild
stc
push
ins
fnsave
jbe
cmp
lock
aam
sbb
and
and
xchg
mov
movs
or
inc
iret
rol
cmp
xchg
cdq
fwait
lds
or
push
popa
pop
inc
adc
icebp
xchg
adc
push
sbb
adc
push
adc
pop
or
pop
adc
leave
and
out
das
and
inc
add
mov
push
dec
sbb
fnstenv
inc
add
adc
jmp
mov
pop
inc
pop
cmps
cmps
mov
and
add
dec
push
in
in
inc
sub
loop
(bad)
aas
adc
imul
lahf
and
test
mov
pop
dec
popa
xchg
sbb
je
mov
ins
ja
lds
push
aas
cmp
jb
pop
add
vcomiss
out
mov
je
test
popf
repnz
xor
and
loop
adc
out
stc
test
jp
cmp
call
movs
push
adc
fs
mov
pusha
icebp
loop
retf
ds
mov
push
adc
jecxz
add
mov
and
fild
mov
inc
inc
adc
sar
dec
cmovs
jl
ds
push
mov
cmp
icebp
popa
sub
xchg
and
out
pop
daa
mov
add
mov
mov
jg
jns
push
xchg
repnz
xor
xor
mov
gs
inc
add
arpl
xchg
test
mov
adc
nop
xchg
dec
push
lock
das
sbb
xor
sub
xchg
jge
dec
and
int3
rcl
push
stos
dec
mov
imul
pop
and
cmp
mov
push
or
or
mov
enter
mov
pop
lods
bswap
push
cs
jecxz
in
sub
mov
daa
arpl
sti
push
movs
mov
and
mov
xchg
xchg
or
or
add
lods
cmp
in
cdq
enter
leave
nop
movs
inc
pop
call
pop
cmp
js
and
pop
ret
loop
repz
cmp
cmp
(bad)
adc
aam
int3
jg
(bad)
je
shr
test
lods
cwde
jmp
addr16
mov
pusha
iret
fidiv
test
jno
sbb
mov
popa
cmp
(bad)
and
and
sbb
ret
enter
dec
ss
stc
retf
call
fdiv
push
cmp
clc
popf
js
mov
cmp
fistp
outs
das
dec
shl
(bad)
pop
ror
jae
jg
dec
dec
in
jo
addr16
and
xchg
push
pop
test
and
add
cwde
xchg
sbb
retf
dec
or
movs
inc
repz
mov
rol
mov
xchg
cmp
out
leave
dec
(bad)
jecxz
shl
or
pop
fldenv
retf
sti
sbb
jle
or
ins
pop
or
jl
lods
jg
fistp
mov
jle
sbb
dec
adc
(bad)
or
cmp
fxch
ja
aas
ins
mov
jecxz
sbb
mov
(bad)
lods
push
(bad)
mov
lea
movs
sbb
mov
mov
mov
add
sbb
into
inc
jnp
aam
test
or
lahf
dec
in
rcl
(bad)
jecxz
inc
cmp
pop
sbb
popf
push
aaa
test
je
fwait
xchg
inc
mov
fnstsw
mov
rcr
or
xchg
cmp
inc
or
mul
mov
xlat
loopne
arpl
mov
push
(bad)
(bad)
push
mov
loopne
pop
retf
cdq
es
jge
cmp
or
fst
mov
push
js
rcl
cmps
fwait
loope
ins
pop
jl
jecxz
out
repz
jno
and
stos
push
xchg
(bad)
lock
mov
ds
dec
clc
cmp
sbb
daa
lock
add
jl
jmp
(bad)
fst
sbb
cs
mov
cmp
rcr
push
cmp
mov
adc
retf
ret
jno
xor
out
cld
jno
jns
lods
(bad)
loopne
mov
mov
sub
push
aad
mov
add
or
ret
dec
pushf
fcom
mov
das
(bad)
dec
mov
(bad)
shr
js
dec
pushf
dec
les
xor
loop
sbb
aas
out
mov
daa
dec
cli
into
mov
mov
dec
pop
repz
inc
dec
inc
push
xchg
push
pop
push
les
or
dec
or
xchg
lods
jge
jmp
(bad)
mov
mov
mov
mov
pop
popf
pushf
adc
push
test
or
push
push
lods
push
inc
sub
or
cmp
enter
cmp
mov
xlat
dec
in
mov
pop
sbb
sti
cld
mov
push
or
mov
fdiv
push
in
xchg
add
pop
bound
mov
outs
inc
push
imul
dec
shl
add
fadd
lahf
fs
mov
in
xor
add
cwde
mov
cmp
dec
sub
sbb
and
adc
cdq
pushf
(bad)
loopne
xor
inc
pop
xchg
xor
cmp
ss
test
jbe
ret
outs
ret
punpckldq
cmc
sti
mov
fild
push
loope
pop
mov
ror
mov
mov
(bad)
ror
push
pop
mov
or
mov
mov
out
ds
sub
sub
pop
push
(bad)
aas
daa
daa
mov
xor
sub
cli
adc
add
lea
mov
xor
leave
(bad)
mov
push
cld
sar
adc
ror
ja
add
inc
leave
sub
cmps
movs
and
or
jno
xchg
test
or
push
sub
sbb
in
add
nop
sub
sbb
and
dec
test
lock
cmc
and
fadd
std
out
cld
test
sbb
jp
jle
add
jl
jl
aaa
(bad)
emms
cmp
push
fs
fld
add
jo
push
cmp
and
add
dec
and
jmp
pop
neg
cmps
in
mov
add
retf
inc
in
push
sub
xor
mov
adc
scas
bound
sub
movs
in
adc
mov
inc
sub
and
lea
iret
jno
sbb
adc
mov
mov
and
push
popa
inc
inc
add
pop
retf
pop
jns
fiadd
bound
and
ret
push
cwde
pop
(bad)
test
cmc
movs
or
xchg
mov
jnp
mov
jge
pop
in
cmps
add
out
cwde
mov
outs
push
out
and
dec
inc
jge
in
enter
out
aad
(bad)
ficom
xchg
add
cmp
daa
sub
add
gs
mov
shr
xchg
loop
ror
add
adc
outs
and
fstp
or
popa
iret
xor
mov
nop
lahf
pop
hlt
sbb
mov
sub
pop
pop
icebp
clc
jp
aas
sub
push
push
pop
xchg
dec
push
jmp
jl
dec
sub
and
mov
push
mov
mov
dec
test
sub
and
and
push
gs
and
test
mov
xchg
and
xchg
dec
pop
xchg
sahf
adc
push
mov
xchg
adc
popa
jecxz
push
sbb
cmp
mov
sbb
retf
or
lods
lea
es
ja
adc
sbb
inc
imul
aam
std
dec
push
fst
jnp
or
rcr
in
(bad)
hlt
lock
ror
pop
fdivr
dec
push
pop
sub
pop
ins
add
push
pop
xlat
nop
mov
push
repnz
ja
or
das
(bad)
clc
js
adc
inc
adc
loop
mov
or
bound
xchg
xor
inc
xchg
or
icebp
std
push
jle
add
and
rcr
cmovle
(bad)
call
jge
xchg
clc
bound
jo
add
neg
loope
aad
icebp
shl
call
inc
cwde
(bad)
fstp
fwait
adc
loopne
aad
xchg
pop
(bad)
ror
(bad)
pop
jno
out
jecxz
pop
imul
shl
xchg
loope
sbb
jmp
data16
mov
mov
xchg
popa
addr16
cmp
fisub
mov
frstor
mov
inc
mov
jle
out
aam
loopne
or
ss
arpl
cmp
adc
lea
(bad)
repz
popa
mov
adc
(bad)
scas
das
jbe
jns
push
pop
aas
fsubr
pop
mov
cld
xor
adc
bnd
repz
add
daa
cmp
mov
jnp
scas
cmp
xchg
adc
out
test
mov
dec
cwde
std
jne
lock
xchg
jle
xchg
or
xchg
popa
sbb
cdq
mov
or
(bad)
cmp
popf
xor
dec
pop
cmp
jecxz
pop
inc
cld
push
loop
jecxz
ds
dec
jecxz
neg
dec
lock
xor
mul
xchg
sub
jl
loopne
vmwrite
mov
rol
ss
pushf
mul
ja
and
je
(bad)
scas
dec
(bad)
lock
ret
cmp
cmps
aaa
ret
shl
pushf
jmp
pusha
pusha
xor
mov
cld
fsub
mov
dec
int3
icebp
jns
adc
adc
push
cwde
sub
xor
mov
jns
cwde
lods
je
cmps
mov
lock
scas
push
leave
les
push
or
cld
xor
pop
dec
cmps
popa
jbe
adc
enter
mov
not
(bad)
int3
aad
loopne
aaa
jo
sbb
dec
xchg
sub
inc
jnp
adc
xlat
push
test
sbb
ds
(bad)
jne
adc
imul
shl
xor
xchg
jb
into
mov
jl
xlat
mov
cmps
add
push
or
popa
js
pushf
pop
pop
push
test
(bad)
ret
loop
lods
fnstcw
jmp
fisttp
call
fld
(bad)
out
stos
mov
int
cmps
dec
sbb
nop
adc
pop
aaa
(bad)
mov
cmc
gs
mov
imul
cmp
jmp
stc
push
adc
mov
outs
push
pop
fcmovnu
rcl
mov
mov
sub
sbb
sub
pop
xchg
mov
sbb
add
mov
ins
or
pop
xor
ror
sbb
add
or
imul
shl
ins
(bad)
aam
mov
outs
push
xor
adc
or
cwde
or
pop
scas
jle
jmp
xor
dec
push
hlt
inc
xor
jns
mov
in
(bad)
fld
outs
outs
mov
lock
add
and
mov
sub
mov
add
dec
pop
mov
enter
and
cmc
scas
dec
dec
inc
xchg
and
add
xchg
fisttp
retf
dec
jecxz
mov
cmp
push
mov
(bad)
adc
xor
aad
xchg
aam
sub
imul
(bad)
rcl
jo
xchg
add
scas
movs
cli
push
les
mov
fisttp
(bad)
push
(bad)
pop
mov
inc
fldenv
call
dec
idiv
test
sbb
adc
lds
rol
and
cmps
cmps
mov
add
pop
scas
fnsave
and
test
xlat
fisubr
mov
mov
sti
es
push
xchg
cmps
cmps
(bad)
mov
loope
add
addr16
test
int
mov
cmp
pop
add
add
jo
mov
jecxz
imul
cdq
das
and
adc
ror
fwait
fwait
inc
push
mov
jge
inc
mov
(bad)
jmp
hlt
imul
cmc
push
adc
and
jle
add
jl
jle
or
imul
mov
mov
xor
push
jno
add
enter
add
sub
xor
sub
adc
inc
sbb
add
inc
dec
fwait
ror
mov
aaa
clc
sti
mov
leave
pop
stc
push
cmp
fcomp
rcr
stos
icebp
inc
dec
jl
or
test
loopne
adc
and
out
lock
jno
xchg
test
jns
loope
mov
push
fld
mov
mov
add
push
and
push
push
imul
enter
or
mov
sub
dec
out
sbb
add
add
and
and
retf
inc
inc
push
adc
inc
push
leave
pop
sbb
dec
fdiv
cmp
ins
sbb
xchg
inc
push
inc
sbb
xor
dec
pop
inc
retf
fnsave
mov
sub
xchg
lods
push
movs
movs
and
aaa
lods
sub
sbb
add
call
stos
cmp
les
(bad)
imul
adc
pop
mov
dec
mov
jo
xchg
mov
lods
sbb
std
pop
js
jmp
ins
leave
mov
push
movs
push
inc
xchg
fcmovnb
and
jbe
dec
or
fs
pop
jb
movs
gs
push
inc
call
cmps
jmp
or
mov
fimul
psadbw
xchg
jb
mov
jg
lahf
mov
ror
cmps
push
mov
jl
mov
sub
adc
aaa
cdq
loopne
ins
mov
rep
sub
mov
pop
cld
push
adc
or
loopne
sbb
loope
loopne
dec
pop
std
bound
(bad)
ror
cld
xchg
(bad)
shr
in
inc
js
arpl
outs
sub
and
pushf
out
mov
sahf
ja
jns
inc
mov
ss
adc
nop
mov
xlat
mov
(bad)
in
sbb
pop
push
sbb
sub
clc
fistp
fcomp
xchg
(bad)
sbb
adc
cld
sub
jg
and
call
mov
inc
xchg
and
dec
in
retf
mov
dec
cs
cld
mov
mov
hlt
jecxz
std
fnstsw
std
pusha
sub
scas
mov
ret
inc
loopne
in
mov
mov
jl
loope
out
xor
jo
mov
retf
xchg
dec
jnp
lahf
gs
pop
or
mov
add
pop
lock
scas
sbb
lock
mov
idiv
das
jl
loopne
das
jecxz
lock
adc
les
ss
push
fild
and
arpl
or
jo
sbb
sbb
add
jae
mov
test
xabort
cmp
aas
call
rdpmc
stc
dec
or
push
mov
int
icebp
jge
adc
iret
add
lea
repz
pushf
clc
xor
out
es
cdq
je
jl
scas
pop
or
stc
mov
cmp
adc
cs
loopne
mov
mov
xchg
mov
mov
sub
sub
aad
xchg
inc
int
jmp
cmc
daa
and
fdivr
add
(bad)
jbe
dec
jno
adc
and
xchg
rol
je
lods
aam
and
(bad)
loopne
inc
mov
xor
jnp
bound
push
loopne
rcl
jb
xchg
mov
pop
jg
hlt
int3
adc
sbb
mov
stos
xchg
inc
mov
pop
xor
ins
rcl
push
in
fdiv
jno
inc
lods
fbstp
cwde
pop
mov
enter
nop
and
lods
popf
add
mov
fdiv
fnsave
out
mov
dec
retf
int
and
ss
or
dec
lods
push
pop
test
sub
loopne
sar
or
dec
push
inc
cmp
rcl
(bad)
mov
jno
es
and
add
dec
cmp
pop
xchg
mov
lea
and
sar
add
popf
jnp
pop
cld
bnd
leave
js
cld
dec
add
cld
jge
mov
jbe
push
cmp
mov
push
jno
imul
mov
clc
das
lock
fild
mov
into
(bad)
cmp
cmp
sar
mov
stc
inc
loop
push
mov
jg
sbb
dec
xchg
xor
bound
clc
push
jge
xchg
adc
ins
lods
lahf
jmp
and
pop
int3
jmp
bound
bound
or
dec
push
mov
arpl
jl
or
push
or
(bad)
lock
and
mov
push
jg
repnz
(bad)
in
sbb
test
push
lock
jns
popa
popa
mov
xchg
dec
inc
idiv
arpl
retf
push
mov
sub
les
push
pop
jge
bound
js
jb
lods
cwde
pop
dec
loop
(bad)
fld
pop
jp
mov
mov
jl
adc
mov
dec
mov
xchg
jmp
and
dec
inc
cmp
pop
mov
inc
sub
lods
nop
add
push
nop
sub
mov
fwait
mov
pop
fsubr
cmp
dec
repnz
test
dec
mov
arpl
ins
dec
xchg
fidiv
jge
mov
jae
push
xchg
jg
sar
lahf
addr16
shr
in
mov
mov
retf
xchg
(bad)
js
mov
xchg
adc
bound
nop
test
inc
dec
bound
rol
push
xchg
xor
push
lock
les
and
loop
ret
cmp
push
ins
add
cmp
int
xchg
inc
pop
test
fld
jmp
or
push
lahf
pop
(bad)
es
or
fs
in
mov
test
inc
adc
pushf
dec
test
mov
xor
or
mov
or
jae
or
jnp
bnd
popa
dec
mov
or
dec
rcl
inc
dec
outs
cmp
dec
xor
adc
ss
(bad)
std
mov
aam
das
inc
cmps
xchg
in
xchg
xchg
ror
cmp
jmp
and
jns
jp
cmps
hlt
or
sub
sub
inc
xor
js
jno
inc
and
ffree
add
sahf
push
mov
jg
mov
std
test
pop
jnp
sti
dec
push
push
push
jge
jp
xchg
push
fisub
fadd
or
push
or
int
xlat
xchg
mov
inc
jo
dec
or
and
pop
mov
jb
pop
mov
push
mov
sbb
and
fist
mov
mov
enter
ins
sub
jns
ds
das
shl
(bad)
cwde
(bad)
fsubr
repz
loope
arpl
cmp
mov
add
pop
(bad)
div
jl
mov
xor
sub
push
cmp
out
les
test
lahf
and
sbb
(bad)
xor
mov
loope
add
sbb
pop
mov
in
icebp
inc
mov
(bad)
cmc
and
fidivr
push
loope
es
mov
or
xor
xor
popf
mov
cmp
je
mov
outs
cmpxchg
sbb
int3
sbb
test
loope
daa
cmp
out
cmps
adc
lock
mov
(bad)
cmps
add
or
stos
pop
push
push
loopne
(bad)
sbb
mov
psubb
cmp
fistp
loopne
xchg
loop
shl
shl
mov
dec
popf
icebp
iret
add
sbb
jo
stc
bound
sub
ret
ja
retf
jne
xchg
or
sub
mov
js
fcomp
sysenter
rol
clc
ds
fbld
jp
stos
js
jl
arpl
aaa
rcl
cmp
int
jl
mov
loope
out
and
pop
xor
cmp
cmp
inc
xchg
push
pop
cmp
jo
sub
inc
rcr
pop
les
aad
(bad)
in
inc
inc
rol
dec
push
mov
cs
clc
repnz
clc
out
or
aas
mov
loopne
test
xchg
jle
add
add
xor
pop
sbb
sahf
mov
xchg
jae
push
(bad)
cmp
xchg
mov
jl
lea
in
mov
and
(bad)
in
enter
cmp
sub
or
add
push
sti
outs
fmul
test
dec
lods
ja
push
push
retf
stos
dec
pusha
mov
push
imul
aaa
sub
inc
test
adc
lods
inc
dec
add
shr
test
xor
fnstcw
dec
sub
xchg
mov
add
xlat
into
enter
xor
loop
or
mov
pop
pop
scas
(bad)
stc
jecxz
push
retf
nop
dec
mov
arpl
jbe
fisttp
mov
(bad)
ret
scas
std
sti
jo
int
popa
jmp
fstp
jno
retf
aam
mov
push
test
fidiv
ds
xlat
in
out
rol
adc
xchg
jbe
sbb
push
add
and
ret
lods
sub
fdiv
or
out
xchg
movs
pop
hlt
push
push
mov
push
fsub
sbb
ins
lods
sbb
ins
in
push
and
xor
add
adc
adc
add
jecxz
push
mov
sbb
gs
ss
adc
loope
xchg
aas
push
mov
test
mov
mov
mov
das
and
sbb
dec
add
pop
adc
les
adc
xor
shl
sti
shr
sbb
add
xchg
and
icebp
pop
dec
jmp
add
xlat
xlat
push
mov
jo
cwde
xchg
and
add
scas
dec
dec
adc
inc
add
and
pop
pop
pushf
sub
and
retf
push
test
pop
out
xchg
mov
aad
sub
pop
mov
test
shl
xor
retf
sub
retf
dec
sbb
dec
xchg
add
dec
lods
stc
fcomip
cld
mov
aas
fcmovnb
mov
jns
daa
(bad)
cmp
imul
jno
jae
mov
sub
ins
add
sahf
jle
inc
sbb
mov
mov
outs
mov
push
xchg
sub
xchg
imul
ins
dec
push
mov
xor
jo
and
jo
adc
and
sub
gs
dec
adc
je
pop
pop
pop
xchg
mov
push
push
sub
(bad)
sbb
lods
xor
aas
sub
and
mov
test
rcr
push
sub
mov
push
nop
test
add
clc
pusha
movs
push
cmp
repnz
mov
jo
call
or
jne
leave
inc
or
lods
sbb
ins
test
and
mov
loop
cmps
inc
add
ret
jl
into
call
inc
mov
jg
and
mov
sti
test
xchg
adc
inc
and
mov
mov
test
push
fst
dec
push
into
jno
push
test
adc
sub
dec
daa
adc
cmp
bound
stos
ret
repnz
pop
and
push
and
sbb
dec
aam
mov
cmc
adc
xchg
xchg
and
mov
dec
fst
dec
test
sub
dec
data16
add
sub
inc
mov
inc
(bad)
iret
dec
sub
outs
mov
xor
push
and
scas
lods
push
jb
and
xchg
in
mov
sbb
scas
ret
fld
in
or
es
cmp
mov
fcom
out
call
inc
xor
xchg
jo
enter
mov
aas
dec
sub
sbb
and
xor
div
xor
jecxz
mov
sbb
je
add
retf
lea
adc
mov
std
dec
add
xchg
es
adc
dec
adc
mov
loop
sub
ret
iret
or
cs
jmp
les
fnstcw
in
pushf
xchg
fwait
int3
cmp
jmp
out
jl
les
cli
and
add
add
inc
arpl
or
(bad)
(bad)
pop
xchg
das
dec
add
push
loope
pop
sbb
xchg
ret
cmc
xlat
xchg
add
ins
(bad)
in
mov
mov
les
cmp
push
loop
js
fsub
out
adc
ja
mov
mov
scas
dec
jbe
nop
ret
jl
cwde
sbb
cmc
push
in
jne
ret
pop
fcom
loop
lock
fucom
push
mov
imul
jmp
(bad)
jns
ja
sbb
xor
ret
sahf
cmp
cmp
sbb
int3
std
push
shl
rol
jg
aas
mov
fisttp
push
dec
pusha
fadd
cld
popa
and
cmp
or
sub
or
retf
adc
xor
push
push
loop
mov
add
and
shl
mov
pop
jl
in
(bad)
out
hlt
dec
clc
dec
imul
lea
push
ins
jo
rcl
(bad)
mov
cmp
out
arpl
mov
int3
rol
cmp
(bad)
sti
push
data16
dec
jecxz
outs
mov
icebp
ins
sahf
aas
mov
mov
imul
xchg
fwait
add
inc
and
xor
in
xor
xchg
std
sub
pop
(bad)
fs
pop
mov
sti
pop
or
sbb
daa
rol
sub
pushf
pop
aad
into
cwde
mov
arpl
out
ja
push
aad
test
lods
inc
ins
inc
xor
xor
aad
cmc
pop
push
popa
aad
xor
xchg
adc
or
nop
dec
ret
call
fwait
rcl
push
stc
vshufps
inc
xabort
fldl2t
movs
and
cmp
push
adc
pop
das
aaa
mov
adc
shl
fwait
xor
adc
mov
rol
mov
stos
dec
dec
loopne
ret
iret
xor
push
sub
adc
out
or
daa
pop
pop
sbb
cmp
sbb
push
mov
xchg
jbe
mov
xlat
sbb
mul
mov
xchg
push
or
rcr
sub
dec
sub
(bad)
loope
adc
xchg
sbb
sti
xor
stos
outs
scas
and
test
(bad)
sbb
hlt
frstor
addr16
(bad)
mov
fdivr
enter
fnstsw
dec
scas
pop
mov
xchg
loope
mov
mov
mov
mov
mov
mov
xchg
(bad)
xor
jl
fcmovne
lahf
and
repnz
imul
lds
sub
inc
mov
mov
pop
mov
dec
add
test
in
adc
push
adc
xlat
or
cmp
cmp
fisttp
push
ret
adc
add
add
into
je
mov
shr
adc
dec
pop
mov
sbb
jnp
xchg
pushf
or
ins
mov
js
movs
(bad)
dec
and
movs
aas
pop
jmp
mov
xor
adc
and
push
fld
or
bound
scas
aad
push
fist
cld
out
and
xchg
mov
sub
adc
jb
and
call
push
jb
cwde
std
xchg
stc
cwde
stos
aam
adc
out
stos
nop
push
comiss
mov
xor
xor
jg
mov
rcl
mov
(bad)
repz
rcl
or
stc
or
mov
ja
popa
mov
and
retf
add
sub
jl
rcl
xor
pop
arpl
add
outs
sahf
xor
(bad)
mov
js
push
stos
lds
sub
mov
inc
mov
or
adc
ins
into
add
ficom
add
into
mov
enter
dec
sbb
test
test
sub
mov
cmp
sbb
shr
push
fild
cwde
xchg
sbb
xchg
outs
push
mov
cmp
mov
cmp
movs
test
mov
xor
mov
add
mov
inc
push
movs
aas
mov
xor
idiv
retf
sub
xchg
adc
call
sub
and
adc
xchg
sbb
test
lds
push
mov
repz
xor
bound
enter
sbb
stos
xchg
sbb
sbb
movs
in
in
int
lods
add
repnz
dec
cs
cmps
retf
adc
push
xor
push
es
icebp
clc
xor
dec
in
in
js
sar
repnz
rol
mov
out
adc
or
in
ret
(bad)
popa
stos
mov
pop
xor
xchg
inc
imul
es
test
mov
mov
f2xm1
repnz
mov
jns
mov
loopne
sbb
int
enter
xor
cli
rcl
push
pop
mov
icebp
iret
enter
jle
pop
adc
movs
push
cmps
pop
sahf
pop
and
les
bound
dec
push
mov
jge
icebp
mov
test
ror
cdq
push
or
cs
std
call
jg
ds
mov
xor
sar
pop
loopne
out
shl
int3
jle
xchg
scas
pop
jecxz
out
lock
pop
loopne
data16
inc
int3
(bad)
mov
sar
push
fistp
lea
and
outs
outs
dec
rcr
fcomp
sub
out
iret
hlt
lds
pop
mov
out
dec
mov
enter
pop
(bad)
retf
sbb
xor
cmps
and
fcomp
out
aad
mov
popf
or
cs
lods
(bad)
add
bound
push
or
sub
loopne
sub
push
pop
dec
add
push
sbb
mov
push
jmp
mov
jl
adc
rcr
add
fild
lock
movsx
jecxz
scas
pop
into
movs
cmp
push
stos
or
mov
leave
ins
ja
iret
pinsrw
clc
xchg
(bad)
pop
and
(bad)
xchg
jge
and
pop
(bad)
adc
cmp
push
cmps
push
sbb
cs
add
je
or
cmp
pop
arpl
cmp
or
neg
dec
adc
mov
neg
arpl
cmp
mov
cld
cmp
xchg
cmp
add
pop
fldcw
cld
ss
arpl
icebp
ds
xchg
fs
jg
loop
pop
cwde
cmp
xor
add
add
movs
fs
pop
or
or
fst
mov
fisub
sbb
movs
xchg
mov
ins
dec
popa
addr16
or
iret
inc
or
jge
push
pop
mov
test
push
and
or
add
xchg
add
pop
and
daa
xor
imul
pop
cdq
ret
(bad)
mov
jnp
mov
sub
pop
pop
push
and
dec
and
xor
sti
repnz
outs
movs
sahf
mov
cmc
arpl
stos
push
push
popa
fist
and
cwde
cmps
push
xchg
cmps
push
and
jae
adc
pop
aaa
pop
xchg
ja
jb
xor
xor
sub
push
jbe
xlat
pop
icebp
push
iret
inc
push
jnp
cmps
daa
mov
out
outs
fdiv
in
mov
(bad)
mov
ror
sbb
push
xchg
inc
vpmaxub
sub
pavgb
pop
mul
rcr
mov
cmp
test
int3
repz
je
cmp
jmp
and
lahf
ins
into
add
pusha
std
pop
fild
repnz
jno
xchg
ins
jge
push
aaa
ss
test
push
adc
ins
mov
dec
aam
inc
or
sub
ror
loopne
clc
dec
jb
das
mov
lock
dec
and
mov
test
xchg
or
inc
pop
add
lahf
inc
mov
or
cmp
mov
cmp
adc
es
dec
in
xchg
retf
mov
jb
lods
lods
and
push
xchg
pop
(bad)
nop
nop
jo
xchg
lods
add
js
aad
imul
lahf
jg
jl
test
cmp
ror
mov
hlt
push
jbe
sahf
cmps
cmp
xchg
bound
sti
mov
mov
fs
mov
add
xor
mov
xlat
push
dec
xchg
and
cmps
xlat
int
mov
(bad)
iret
ss
retf
(bad)
addr16
jl
and
cmp
imul
lods
mov
int3
dec
int
mov
ds
dec
and
and
xor
adc
icebp
push
xchg
or
xchg
pop
rol
pop
xchg
add
sbb
dec
femms
cwde
adc
not
add
aaa
pop
xor
js
jmp
imul
stc
fst
push
mov
mov
cmps
repnz
and
adc
cmp
jb
rcr
inc
push
leave
dec
cmp
xor
ficomp
xchg
xchg
sahf
rcr
stc
or
xchg
imul
cmp
push
(bad)
call
dec
xchg
push
(bad)
push
js
mov
call
push
sub
adc
or
adc
retf
mov
loope
in
mov
adc
dec
lds
fild
jno
mov
jne
ss
sbb
mov
sti
(bad)
repnz
dec
inc
sub
mov
dec
adc
nop
int
inc
add
mov
in
add
popa
mov
mov
or
add
or
or
dec
and
lock
push
sub
mov
inc
inc
xor
xchg
lds
xchg
fbstp
lds
mov
pop
jmp
cwde
pop
cmps
pushf
adc
push
or
shl
nop
movs
dec
cmc
or
data16
lods
dec
push
jno
xor
mov
retf
xchg
movs
inc
pushf
adc
test
mov
arpl
fnstsw
cmp
inc
stos
cmp
sbb
cmc
mov
(bad)
scas
or
xor
xor
mov
sar
jno
dec
mov
cs
out
nop
cld
(bad)
cmp
(bad)
cmp
sub
fisttp
jb
in
cmp
shl
cmp
dec
dec
adc
sbb
jg
loop
cmp
pop
cs
sbb
arpl
out
pop
mov
sub
jl
and
fwait
int3
ret
pop
xlat
cmp
int
inc
clc
repnz
movs
push
enter
xchg
inc
clc
xlat
ret
inc
cmp
aaa
arpl
sbb
jmp
and
or
mov
jmp
es
push
into
mov
sbb
sti
and
lahf
ins
(bad)
stc
push
(bad)
lock
add
scas
mov
rcr
xchg
out
(bad)
retf
pusha
xchg
push
test
jbe
in
div
ret
or
mov
outs
and
pop
mov
lods
ins
test
js
(bad)
adc
sub
sbb
imul
xchg
jecxz
add
sbb
xor
pop
or
fcomp
mov
jae
sbb
lahf
imul
jo
inc
add
sbb
add
aam
sub
jmp
lock
xchg
cmp
or
imul
mov
fdiv
stos
cld
or
cld
cdq
sbb
dec
int3
in
loop
xchg
nop
jg
fwait
loopne
scas
movs
clc
es
fcomp
dec
je
stc
push
inc
pop
dec
ja
xchg
fld
adc
(bad)
sbb
loop
jno
imul
cwde
loop
aam
cld
test
xor
movs
cwde
leave
mov
push
jo
ficomp
daa
call
lods
ja
mov
xor
mov
cmp
cmp
cld
xchg
mov
inc
push
jno
jnp
scas
sahf
retf
out
out
sbb
sbb
icebp
cwde
mov
lock
inc
sub
int
popa
inc
add
in
push
jae
movs
push
jnp
and
mov
imul
sbb
inc
sub
inc
pusha
outs
sub
outs
mov
jle
bound
fnstenv
pop
popf
xchg
ds
popf
xchg
jo
loopne
xchg
and
mov
xor
pop
sbb
mov
jne
ror
fimul
lods
adc
arpl
test
rcl
adc
pop
push
test
stos
inc
push
ja
push
dec
rcr
mov
jg
sbb
push
mov
cs
xchg
xchg
enter
sub
xor
fist
rcl
mov
call
rcr
mov
and
pop
adc
inc
lock
inc
dec
push
cmp
jp
adc
cli
pop
psrad
ins
mov
fisttp
test
ins
inc
dec
inc
and
ja
mov
dec
push
ret
mov
out
jmp
sbb
jp
sbb
loopne
push
cmp
stc
cs
or
push
mov
pusha
das
pop
inc
div
(bad)
xor
mov
mov
out
out
adc
push
and
add
cmp
jo
xor
fld
(bad)
add
sbb
dec
das
test
dec
(bad)
jl
ss
cli
mov
pop
jmp
inc
cli
and
inc
pushf
ss
(bad)
push
bound
pop
pushf
sbb
dec
gs
call
dec
sub
sbb
push
ss
hlt
adc
mov
das
pop
or
add
(bad)
jecxz
push
aas
push
push
cli
and
retf
(bad)
aas
retf
(bad)
fcomp
pop
sub
in
inc
push
loop
xchg
and
push
mov
mov
cld
out
cld
jne
in
das
dec
jg
cdq
cdq
enter
or
repnz
aam
pushf
pop
mov
sar
push
mov
mov
hlt
imul
(bad)
iret
mov
push
mov
imul
arpl
imul
out
dec
cmc
outs
add
addr16
xor
xor
lods
mov
mov
popa
dec
or
cs
mov
pop
mov
mov
add
out
mov
and
cs
dec
das
or
sbb
mov
mov
jmp
xchg
cmps
push
dec
adc
out
jmp
xchg
cmp
inc
pop
sub
xchg
adc
loop
pop
dec
or
jmp
fcmovnbe
mov
xor
cdq
fs
inc
dec
out
cmp
and
sub
pop
rcl
imul
dec
data16
inc
enter
inc
cmp
xchg
xor
xchg
sbb
xchg
stos
push
pop
out
pop
mov
adc
or
jl
or
sahf
and
loop
and
cdq
adc
inc
or
inc
jbe
mov
mov
inc
push
icebp
cmps
adc
sub
dec
cmp
jmp
adc
out
(bad)
test
repnz
int
xchg
dec
pop
xchg
fsub
push
(bad)
in
pop
js
les
cmp
push
jnp
(bad)
pop
pop
xchg
inc
lock
inc
or
mov
or
(bad)
and
sub
jmp
sbb
int
leave
mov
inc
or
push
push
pop
xchg
dec
xchg
ror
mov
mov
fistp
push
(bad)
rcl
ds
jb
jno
mov
inc
inc
push
rcl
inc
push
or
loope
jmp
xchg
add
cld
mov
sub
mov
iret
xchg
lods
cmp
jo
loope
call
cmc
call
aaa
sub
pop
cmp
add
push
or
repz
and
ss
cdq
icebp
add
icebp
out
test
aas
pop
add
rcl
jecxz
out
add
fisttp
sti
mov
ds
mov
std
movs
ins
dec
test
fnsave
jmp
pushf
jp
sbb
push
add
aas
pop
or
add
xor
jno
das
sbb
repnz
into
xor
sar
hlt
sti
push
mov
push
jnp
mov
cmp
xchg
in
pop
gs
shl
push
popa
sbb
nop
test
inc
cmp
cmps
sub
fcomp
lock
mov
jle
icebp
shl
dec
cld
inc
out
test
es
mov
neg
mov
mov
or
xor
xchg
jno
jg
mov
ja
loope
sub
and
push
jo
cmc
or
sub
cmps
adc
mov
loop
inc
or
xchg
sti
jecxz
scas
pop
into
movs
cmp
ins
or
ror
in
pop
cwde
int
(bad)
(bad)
test
mov
sahf
daa
adc
mov
test
and
add
pushf
jo
rcr
cmp
add
pop
rcr
loop
(bad)
adc
leave
adc
shr
ins
pop
pop
xor
loopne
xchg
cmp
out
or
or
mov
jb
sbb
sub
in
daa
(bad)
rcl
sti
out
cmp
pop
adc
push
ss
stc
out
out
out
out
out
rcr
adc
(bad)
loope
iret
imul
pop
lea
fisttp
aaa
mov
fnstsw
lahf
push
push
dec
sub
cmp
jo
cmp
xor
jge
add
pop
mov
movs
push
pushf
xchg
sub
mov
add
cmp
pop
xor
add
adc
jnp
dec
xor
out
add
movs
in
lods
sub
imul
mov
loop
add
xchg
mov
addr16
add
scas
sbb
jb
jmp
fdiv
lea
cdq
daa
push
and
xor
dec
lods
sahf
loop
scas
movs
and
mov
(bad)
or
sub
sbb
mul
loopne
dec
popf
loopne
and
mov
mov
mov
sar
sti
xor
push
ins
fmul
adc
aam
(bad)
mov
pushf
mov
mov
sub
add
jo
mov
dec
or
and
mov
icebp
mov
cs
jecxz
push
test
mul
xchg
(bad)
xchg
lock
fld
pop
mov
clc
daa
adc
jg
sahf
cmp
out
mov
movs
shl
jecxz
in
add
mov
jecxz
dec
add
pop
mov
mov
ds
adc
adc
and
jge
std
jl
(bad)
and
jb
mul
arpl
pop
sub
jb
adc
mov
loop
js
fnstenv
mov
std
mov
jg
out
cmp
inc
lahf
add
adc
test
stos
pop
jg
mov
mov
push
icebp
dec
jo
out
dec
push
sub
sub
push
sti
adc
pop
das
and
in
mov
test
or
fwait
js
push
xchg
xchg
and
scas
call
jg
outs
loope
test
fmul
sub
lods
nop
pop
push
jbe
xchg
xor
pop
sti
lds
push
mov
jmp
sbb
cmp
pop
dec
pop
pop
imul
lods
add
push
mov
in
xchg
pop
push
sbb
movs
pop
sahf
mov
lods
mov
test
cmp
out
dec
add
adc
test
push
jge
adc
lds
dec
ficom
stos
and
inc
scas
or
mov
sbb
push
xor
add
stc
call
mov
das
iret
repz
push
ds
jmp
push
out
mov
mov
(bad)
cmps
inc
mov
into
or
div
mov
sub
mov
fisubr
(bad)
pushf
xchg
xchg
in
mov
adc
or
mov
mov
js
and
dec
loop
and
loope
ds
dec
bound
mov
xchg
ds
push
scas
dec
fiadd
in
das
mov
cli
div
rcr
enter
xchg
sub
stc
add
sahf
sub
adc
movs
and
push
movs
or
mov
daa
push
add
add
retf
push
xlat
shl
sub
and
mov
into
and
(bad)
dec
mov
(bad)
xchg
rcr
ret
rcl
test
dec
bound
scas
lods
fwait
adc
lahf
or
mov
mov
xchg
cmp
mov
xchg
add
mov
stc
push
(bad)
(bad)
pop
test
jbe
xchg
stos
test
shl
adc
sub
inc
inc
mov
jb
aam
inc
stos
cmp
ins
adc
in
or
xchg
jae
sub
mov
push
inc
or
xchg
push
cli
mov
dec
adc
mov
jg
jns
rcr
sub
jl
in
adc
addr16
out
(bad)
dec
loopne
repz
xchg
xchg
fcmovnu
punpcklwd
dec
and
push
(bad)
(bad)
and
dec
js
fisubr
pushf
ds
dec
rcl
xchg
das
(bad)
loope
sbb
jo
adc
loopne
aas
pop
stc
les
daa
pop
jae
ja
jp
call
jbe
scas
jl
or
jmp
es
stc
dec
sbb
cdq
iret
cmps
xor
jno
xlat
xor
push
imul
jg
add
push
pop
push
clc
dec
mov
cmovne
fcom
jecxz
mov
(bad)
sbb
cmp
cld
rcl
lods
adc
jmp
fild
icebp
xor
adc
jge
mov
(bad)
or
sbb
mov
add
icebp
cmc
(bad)
xor
adc
or
imul
sbb
ret
aaa
jecxz
mov
cmp
xor
fidivr
sbb
mov
fldcw
cwde
sub
add
sti
icebp
mov
push
jl
mov
mov
loope
xchg
test
mov
test
add
jle
jmp
sbb
mov
loopne
or
aas
int
push
xor
imul
sbb
sbb
fbstp
inc
pushf
cmp
inc
lock
add
mov
in
jo
pop
adc
stc
pop
mov
jl
adc
jmp
xchg
iret
cmps
test
mov
mov
sub
mov
jae
push
mov
mov
push
cmp
aas
jmp
fistp
push
pop
or
push
pop
mov
pusha
push
jb
scas
fwait
mov
adc
xor
and
mov
and
cmp
stc
dec
mov
dec
sub
adc
add
ror
sbb
add
xchg
mov
retf
inc
xchg
add
xor
sahf
jbe
inc
cmp
test
push
shl
xchg
mov
loop
jge
lock
mov
jecxz
fld
dec
jg
jmp
js
in
push
pop
pop
movs
mov
les
dec
stos
add
mov
or
repnz
jno
ins
or
and
jge
adc
mov
inc
inc
or
mov
stos
push
jne
dec
(bad)
jbe
mov
cmp
sar
(bad)
sbb
retf
(bad)
adc
or
dec
aad
pop
add
out
and
mov
cs
dec
push
mov
(bad)
fcomp
nop
add
sti
xchg
dec
or
mov
cmovb
cmp
mov
adc
fidivr
add
push
lds
(bad)
mov
pop
pushf
inc
test
std
shl
xchg
(bad)
cmc
xchg
xchg
out
inc
sbb
mov
in
fwait
scas
scas
xor
retf
pop
cld
jg
(bad)
daa
in
dec
add
ja
adc
adc
scas
shl
jb
mov
mov
inc
inc
inc
add
cmp
xchg
and
push
mov
mov
(bad)
dec
out
test
cmp
add
not
mov
pop
push
cwde
lock
pop
mov
movs
mov
test
cld
or
sub
xlat
mov
cmps
sbb
sub
in
push
add
and
div
xor
mov
das
ins
out
jmp
(bad)
cmp
lods
std
loop
(bad)
fst
or
push
scas
sbb
call
stos
jg
xor
das
adc
pushf
cmps
dec
dec
xchg
xor
push
add
add
push
mov
sbb
icebp
add
mov
fdivp
push
xchg
es
mov
mov
sbb
push
aaa
jnp
mov
aad
jge
push
inc
sub
outs
dec
mov
pusha
cs
mov
dec
mov
jns
rcr
add
outs
inc
shr
daa
fsub
popf
popf
lods
or
retf
push
cld
es
mov
push
mov
and
bound
cmps
push
add
and
or
mov
sbb
mov
or
sub
fs
dec
daa
adc
daa
add
aad
nop
aam
push
push
ror
inc
in
div
es
jg
data16
mov
dec
add
jns
sbb
jb
dec
add
dec
add
dec
push
push
sub
xchg
aad
mov
dec
js
add
mov
push
xchg
loop
mov
ret
pop
xchg
or
sub
clc
cmp
mov
add
fnstcw
movs
xchg
and
retf
or
ret
pop
gs
xor
inc
sub
dec
cdq
push
jecxz
int3
je
daa
xchg
fwait
retf
push
adc
sbb
cmc
pop
into
dec
xchg
inc
add
ins
mov
xchg
push
xchg
jp
movs
cmp
jmp
repz
sub
jl
jno
push
sub
(bad)
arpl
cld
test
les
int3
adc
inc
push
xor
push
rcr
mov
sub
and
and
aam
mov
repnz
pop
xor
xlat
outs
add
push
stos
mov
ficomp
mov
test
hlt
xor
loope
loope
sbb
aaa
pop
addr16
mov
mov
lahf
mov
inc
loopne
mov
sbb
rcl
mov
add
stc
les
ret
aas
ja
test
imul
cmc
jo
stc
and
push
jg
pop
dec
mov
fisttp
pushf
jl
push
inc
pop
cs
xor
ss
mov
(bad)
cmps
js
pusha
push
push
iret
pop
mov
push
(bad)
in
pop
cld
dec
mov
ret
pusha
movs
adc
jle
cmp
lock
push
push
fnstsw
loop
icebp
pop
stos
jmp
icebp
jo
cmp
outs
pop
sub
sub
cld
mov
push
ins
add
xchg
iret
xor
out
jmp
jno
cmp
xchg
loope
cmps
fidiv
ret
xor
mov
stos
jo
cmp
addr16
ret
jo
cs
gs
mov
stc
outs
cwde
sub
mov
(bad)
or
mov
aas
jae
and
pop
retf
xchg
pusha
xchg
add
stos
jmp
popa
fimul
mov
push
dec
add
or
jmp
rcl
inc
cwde
int
inc
xor
push
icebp
repz
pop
push
cmps
clc
push
adc
mov
dec
bound
shr
es
inc
or
pop
push
addr16
or
or
dec
pop
cmc
mov
cs
fdiv
and
sub
inc
inc
outs
pop
mov
add
sub
jb
xchg
xor
mov
inc
cmp
push
scas
dec
ss
test
xor
lea
in
fwait
test
mov
pop
movs
stos
data16
push
mov
jl
mov
and
jnp
sub
mov
loopne
add
(bad)
push
in
inc
mov
jnp
and
les
dec
push
xor
mov
stos
sbb
jmp
rcl
mov
xor
std
int
sbb
shr
in
cmp
push
adc
test
xor
cmps
inc
vxorps
xlat
sub
xor
ret
repz
dec
mov
mov
cmp
mov
test
enter
push
stos
fnstcw
fdivr
outs
cmp
aam
js
fnsave
loope
pop
dec
aam
sub
loop
sbb
loop
mov
pop
dec
aad
pusha
add
xchg
stc
pop
adc
and
loop
cmp
cmp
sub
icebp
inc
les
mov
dec
adc
movs
shl
mov
adc
stc
pop
inc
cld
add
movs
(bad)
mov
dec
sub
aas
push
jg
dec
xchg
in
shl
push
lods
jo
icebp
xchg
jno
popa
aas
stc
sbb
xor
mov
dec
out
xchg
pop
cld
test
in
lods
ins
cmp
or
test
push
ret
test
mov
xchg
cmps
pop
mov
je
mov
sti
mov
adc
in
adc
les
and
das
cmps
jg
and
arpl
add
out
lock
xchg
pushf
add
pop
loop
das
dec
(bad)
clc
daa
call
and
stos
push
mov
int3
gs
movs
xchg
mov
sahf
mov
vpaddq
aad
fcom
shr
rcr
ret
aam
out
and
mov
xlat
fisubr
mov
retf
movs
cmc
or
jns
pop
cwde
pop
rcl
lods
add
pop
test
jmp
cdq
rol
xchg
or
push
fcom
int3
pop
xor
jbe
push
jl
pop
stc
or
xor
mov
adc
adc
js
or
push
or
jmp
xchg
add
pusha
push
bsr
scas
into
lods
jg
add
jle
or
add
sub
bound
cli
xchg
leave
push
and
pop
rcr
cwde
std
mov
mov
in
pop
jbe
inc
mov
ret
jecxz
dec
xor
nop
sub
nop
lock
dec
mov
(bad)
lock
xchg
movs
(bad)
daa
push
and
adc
popf
popa
dec
push
cs
rcr
add
mov
test
xchg
cmp
add
inc
stc
pop
imul
xchg
and
adc
inc
xchg
out
pusha
adc
inc
cmp
xchg
add
and
sbb
retf
fbld
mov
loop
sbb
add
jge
movs
inc
jmp
sub
or
test
sub
rcl
mov
dec
inc
inc
jle
leave
dec
sbb
mov
xchg
ss
dec
test
mov
dec
xchg
loopne
mov
mov
int3
mov
rcl
pop
xchg
call
ror
(bad)
icebp
popf
cmps
mov
and
mov
jne
or
push
adc
aad
aad
inc
inc
idiv
jge
in
xchg
cli
(bad)
add
pop
retf
mov
jae
xor
in
scas
sub
ins
mov
pop
ret
ins
sub
(bad)
sbb
div
hlt
jo
inc
cwde
mov
test
cmp
dec
out
jne
sahf
dec
dec
lock
cdq
or
cs
ins
jmp
stc
jnp
adc
mov
loopne
fist
lock
and
mov
les
rcl
cli
popf
push
pop
lea
fsubr
in
pop
sbb
jl
lock
cs
lea
call
outs
jle
mov
scas
add
jmp
in
(bad)
jno
shr
jae
sub
outs
jb
scas
xor
jecxz
sbb
pushf
mov
sbb
mov
cmp
outs
cmp
icebp
mov
fimul
dec
adc
lahf
mov
loopne
sbb
sub
cmp
outs
mov
lods
xchg
adc
sbb
pop
test
test
or
mov
cwde
mov
dec
lds
aas
add
bound
fcom
xchg
jno
mov
cmp
sar
sahf
(bad)
push
loopne
sbb
cmp
sbb
test
xor
pop
xchg
clc
add
inc
pop
pop
leave
inc
dec
jl
ins
mov
pop
sub
jo
(bad)
or
ins
icebp
mov
xchg
dec
test
les
xor
arpl
and
add
and
imul
push
cmp
jl
mov
lods
jo
rcr
(bad)
mov
pop
jns
push
push
mov
ds
pushf
ins
shr
cmp
movs
xchg
enter
mov
jg
or
adc
dec
(bad)
bound
call
imul
ret
enter
lahf
and
sbb
clc
xor
push
jne
out
sbb
cmp
popa
add
(bad)
pop
hlt
enter
pop
jp
ror
adc
leave
mov
cmps
daa
sub
xor
das
and
adc
repz
push
mov
lds
jmp
imul
outs
add
and
add
leave
and
push
sbb
sbb
inc
loopne
out
out
ret
mov
push
scas
arpl
out
ins
shl
mov
data16
dec
dec
dec
dec
loope
sti
out
rol
xchg
out
push
aam
loope
fld
enter
mov
jp
pop
sbb
xor
mov
std
xchg
clc
jno
cwde
pusha
mov
push
popa
pop
add
mov
adc
xor
xor
push
lods
pop
adc
std
in
outs
and
adc
mov
xadd
rol
sub
add
cmp
or
dec
sub
call
out
call
inc
add
or
fsub
pop
push
jae
idiv
sahf
lock
jae
mov
mov
popf
push
push
inc
aas
cmp
clc
sbb
cmps
xchg
add
(bad)
cli
xchg
or
out
push
inc
jmp
pop
ret
xchg
sub
and
adc
xchg
xchg
scas
inc
pop
cmps
dec
cmp
mov
push
sbb
or
add
(bad)
rcr
retf
xchg
mov
cld
xchg
out
cs
jg
pop
(bad)
hlt
jg
add
clc
cli
ror
xchg
pop
inc
in
pop
push
leave
xor
das
cmp
sahf
dec
and
mov
pop
pop
jbe
xor
mov
je
repz
lock
and
mov
sub
sub
popf
and
fld
jge
jmp
in
pop
(bad)
lahf
fisubr
and
pop
lds
les
es
pop
mov
sahf
xor
in
cmp
loope
push
jo
mov
cs
stos
sub
aas
lahf
inc
add
or
lds
or
mov
add
xor
push
popf
dec
in
jle
or
sub
les
xchg
and
jo
cli
or
mov
xor
sub
fisttp
cmps
xchg
xchg
rcl
inc
push
sub
xchg
mov
xor
jg
icebp
mov
mov
sub
rcl
xchg
cwde
hlt
inc
push
in
sub
add
sub
pop
das
and
inc
inc
pushf
or
dec
aam
xchg
inc
xchg
cmp
add
pop
gs
sub
fmul
jp
add
fs
xchg
sti
and
pop
push
sub
mov
and
daa
xchg
stos
aas
sub
and
jb
sub
dec
inc
jle
add
add
movs
js
or
xlat
(bad)
loope
imul
and
jb
dec
pop
xor
imul
loop
sbb
sub
push
jmp
xchg
sbb
sub
push
sbb
jae
jb
mov
xchg
(bad)
dec
test
pop
inc
mov
sub
push
popa
mov
sbb
cmp
and
lahf
push
or
push
in
xchg
arpl
loop
retf
lds
pushf
add
push
push
fild
inc
mov
dec
retf
inc
ja
sbb
dec
xor
pusha
inc
inc
lds
xchg
ret
(bad)
sub
aad
pop
add
push
int
push
pop
sub
dec
jo
aaa
and
cld
jge
adc
jecxz
push
aas
push
push
jnp
xchg
jmp
and
push
test
out
or
aam
movs
mov
popa
inc
sub
ins
or
sub
daa
(bad)
loop
sbb
icebp
jmp
fist
push
stc
add
ret
into
cwde
std
ret
fistp
sub
fwait
test
lahf
jmp
pop
cmp
retf
inc
push
in
pop
pushf
sti
inc
xor
iret
cmps
jecxz
mov
ret
cmp
stos
jb
mov
sbb
aad
loop
mov
js
gs
cwde
imul
cmp
xor
sahf
dec
jo
out
loop
lock
sbb
inc
cwde
loopne
xor
cmp
and
outs
je
(bad)
ins
push
inc
js
loopne
sar
retf
fiadd
jae
cmp
xchg
aaa
mov
jo
adc
dec
jg
xchg
and
das
mov
jp
cmp
sub
ret
enter
aam
cmc
xlat
add
popa
push
jmp
cmp
ret
es
les
mov
pop
(bad)
mov
sbb
div
push
lods
xor
adc
add
inc
inc
shr
fldcw
pop
loopne
sub
loopne
sub
lods
es
add
loop
data16
je
loop
jb
mov
ror
push
mov
pop
loope
or
adc
inc
dec
or
or
mov
ret
in
imul
mov
xor
cmp
xor
ja
xchg
jl
stos
and
mov
sub
or
adc
dec
add
shl
dec
and
(bad)
push
sti
jmp
adc
mov
fst
test
jnp
push
push
and
inc
dec
add
dec
pop
and
adc
ja
imul
xchg
cli
push
pop
dec
lods
call
popa
xchg
in
mov
add
call
(bad)
fst
(bad)
daa
push
(bad)
mov
fld
out
scas
xchg
ror
inc
sahf
test
das
pop
adc
jge
dec
xor
dec
xchg
xor
inc
sbb
xor
push
aas
js
pushf
enter
aad
pop
pop
arpl
add
xchg
sbb
mov
push
sub
jns
inc
xchg
test
cmp
mov
and
xchg
nop
pop
dec
fsub
push
push
dec
(bad)
mov
pop
push
ret
aaa
out
aas
addr16
add
and
bound
push
add
dec
shl
bnd
dec
push
icebp
and
push
cs
fs
mov
dec
inc
mov
pop
fst
xor
xchg
enter
xchg
dec
mov
test
dec
mov
test
xchg
xlat
pop
add
lods
mov
test
iret
xlat
jns
test
and
jmp
out
mov
adc
loopne
sbb
inc
xchg
test
mov
cmp
pop
dec
test
pop
sbb
cmp
xor
popa
nop
retf
pushf
std
(bad)
(bad)
mov
sub
and
loop
mov
sub
pop
and
pop
dec
jns
fs
test
inc
lods
dec
loop
imul
push
jmp
adc
outs
dec
cmc
hlt
call
pop
pop
mov
div
dec
mov
fwait
stos
or
popa
push
(bad)
mov
lock
pop
mov
fiadd
mov
or
push
das
pop
test
add
jmp
lds
in
enter
xor
rol
rcr
and
push
mov
ins
enter
and
dec
jle
and
sar
lods
pop
xor
fcom
inc
data16
ret
nop
sbb
dec
aad
dec
lds
add
aam
xchg
sub
lock
loopne
or
mov
and
mov
xchg
cmp
rcr
xor
loope
or
loopne
fs
loope
inc
and
mov
je
jg
cmp
bound
dec
cmp
adc
or
fiadd
popf
bound
xor
cwde
int3
dec
dec
sbb
dec
xor
test
sbb
daa
sahf
add
and
push
inc
add
sbb
into
leave
mov
push
add
push
loop
lds
inc
stos
mul
inc
mov
jmp
push
ins
ins
dec
or
test
add
nop
pusha
or
lock
les
and
add
or
xchg
pop
scas
adc
mov
push
push
pop
push
cmp
daa
adc
sbb
sbb
test
jmp
(bad)
cmc
adc
cmps
es
sub
ds
push
addr16
add
jae
xor
jmp
int
sahf
mov
retf
fidivr
mov
fistp
mov
dec
lods
and
stc
retf
and
sahf
mov
or
or
cmps
mov
xor
push
test
sbb
mov
jno
icebp
cmp
adc
loop
(bad)
fsub
inc
xchg
int3
(bad)
repz
adc
cwde
aam
add
je
dec
dec
or
data16
dec
push
mov
push
enter
xor
mov
mov
jae
and
mov
int3
test
adc
push
js
iret
imul
jle
(bad)
mov
cdq
loopne
pop
push
mov
or
stos
(bad)
cmp
icebp
jecxz
xor
icebp
pop
sbb
jge
shr
cmp
(bad)
xor
ret
icebp
aas
sbb
and
jo
xlat
lds
inc
sbb
fpatan
lock
add
lods
fcom
scas
gs
outs
pop
daa
cld
and
mov
sar
cmp
jecxz
icebp
fwait
sbb
cmp
outs
mov
ret
int3
lock
cmp
xchg
mov
loopne
xchg
es
in
xor
mov
fs
out
push
outs
int
in
(bad)
sbb
cmp
sub
ror
push
add
out
add
xchg
retf
adc
jecxz
imul
cmp
fist
mov
data16
mov
add
mov
jl
xor
inc
inc
dec
jno
fiadd
addr16
push
into
es
jl
add
in
jecxz
mov
mov
sbb
fcmovnu
test
lock
sbb
rcr
pusha
out
outs
add
sub
mov
push
ror
in
movs
loopne
bound
shl
and
ss
in
or
ins
fst
mov
xchg
(bad)
mov
mov
inc
adc
outs
ret
cmc
cwde
fidivr
adc
mov
inc
jnp
sbb
pop
jmp
jne
jmp
fstp
sub
jmp
or
arpl
adc
sbb
les
inc
test
pop
adc
sub
rol
or
add
inc
into
xchg
and
das
out
das
sub
sub
dec
ret
mov
push
scas
mov
inc
jecxz
xor
push
jge
retf
rcr
fld
loope
mov
push
pop
leave
dec
xor
jbe
es
inc
add
xchg
je
out
add
sub
int
fisub
add
xchg
outs
enter
es
or
leave
pop
sub
and
and
faddp
lds
in
or
sub
shl
adc
adc
sub
shl
inc
shl
dec
xchg
aas
add
fdiv
mov
shl
lods
add
mov
sub
lock
jmp
in
add
dec
jmp
jg
sub
test
lods
and
cwde
dec
mov
lods
idiv
add
add
xor
or
cmp
dec
inc
sbb
test
xchg
out
mov
and
sti
xchg
cwde
sbb
mov
jmp
sbb
jle
or
loop
sub
dec
inc
cwde
das
rcr
add
dec
idiv
and
loopne
adc
(bad)
mov
test
nop
(bad)
xchg
in
or
sbb
aad
cmp
je
sbb
sahf
mov
push
popa
adc
sub
sub
xchg
add
pop
dec
jg
jg
(bad)
xor
cmp
sbb
clc
fild
and
out
je
adc
or
imul
(bad)
leave
xchg
dec
call
jmp
pop
sti
lds
jmp
inc
add
cmps
fnstenvw
mov
xor
adc
js
sub
(bad)
pusha
test
and
sub
in
sub
push
fwait
push
lods
add
out
loopne
inc
jbe
out
jnp
mov
sbb
call
and
add
cli
or
(bad)
inc
nop
and
pusha
bound
add
movs
push
cmc
ja
add
mov
and
lods
(bad)
lods
clc
movs
sub
fidiv
in
mov
dec
dec
push
rcr
mov
pop
mov
out
stc
xchg
lds
(bad)
inc
retf
inc
sub
in
dec
in
leave
mov
adc
inc
or
retf
fsub
push
lods
cdq
pop
loop
sbb
sbb
sbb
test
fmul
add
scas
xchg
add
mov
sub
xchg
cmp
test
retf
add
sbb
cmp
pop
push
push
lods
cmps
movs
lds
jne
pusha
fwait
pushf
adc
dec
loope
jno
mov
sub
stos
and
repz
dec
push
add
lds
and
sbb
push
sub
idiv
test
mov
les
fmul
mov
dec
test
xor
and
xlat
mov
and
les
and
ret
mov
stc
adc
jle
ins
sbb
mov
inc
lock
dec
ror
push
jns
dec
jg
adc
pop
adc
mov
sbb
nop
pop
mov
push
adc
cmp
lds
dec
inc
rol
sahf
xlat
(bad)
or
and
ds
stc
mov
fnsave
icebp
shl
call
and
dec
loop
pop
test
mov
nop
mov
bound
or
sbb
mov
nop
or
add
retf
pop
(bad)
push
add
inc
jnp
fdiv
(bad)
sub
aaa
loopne
xchg
lock
lahf
lods
lock
lea
jae
loopne
or
and
stos
out
jo
js
jle
and
inc
ds
test
test
aam
sub
xchg
jecxz
or
cli
icebp
js
jg
adc
adc
jg
mov
(bad)
xchg
out
xor
or
out
mov
jl
mov
or
adc
add
add
push
icebp
dec
adc
shl
sub
or
dec
test
rol
sbb
xor
push
mov
mov
add
fnstsw
pop
fsubr
pop
push
pop
pushf
cdq
aam
in
dec
jl
pop
or
add
jle
add
movs
cmp
iret
xchg
add
loopne
pop
add
add
fcomp
inc
add
jl
loopne
int3
ja
jle
aaa
(bad)
jns
xchg
jae
(bad)
inc
xchg
and
leave
xor
leave
int3
lds
mov
push
(bad)
fldenv
adc
or
loopne
xor
ficom
push
stc
scas
and
cwde
(bad)
in
xchg
push
pushf
popf
imul
dec
dec
add
jno
cmp
lea
push
mov
adc
and
stc
sub
or
xchg
push
dec
lods
pop
xchg
mov
cmc
push
dec
mov
sar
pushf
sar
adc
push
aam
push
mov
adc
add
and
jecxz
mov
and
mov
add
fnstcw
xor
or
mul
jae
jns
cld
movs
hlt
mov
movs
jle
add
xchg
int3
and
ret
fcom
or
mov
xor
pushf
cmc
inc
out
add
daa
imul
imul
arpl
retf
xchg
dec
inc
in
out
jmp
call
push
cmc
call
or
sub
ror
jmp
mov
inc
sub
push
aad
out
ss
mov
rol
int3
fwait
aaa
dec
test
dec
add
icebp
inc
mov
or
push
nop
mov
and
in
in
lds
(bad)
jb
pop
fwait
and
push
sar
cmp
out
stos
(bad)
loopne
adc
into
or
call
jg
jns
xor
jle
(bad)
adc
dec
xor
loope
mov
movs
or
shl
mov
cmp
xchg
popf
pop
cmps
add
adc
outs
and
add
mov
xchg
fs
mov
pop
adc
mov
xchg
xchg
xchg
or
jnp
gs
test
cmp
sub
adc
add
mov
rol
adc
enter
out
add
inc
push
call
icebp
call
test
mov
xchg
nop
or
dec
dec
dec
push
into
xchg
out
push
push
pop
mov
fsubr
xlat
outs
and
shl
fst
shr
fs
jns
daa
out
mov
push
dec
ins
stc
in
shl
(bad)
call
outs
xor
jb
imul
loop
cwde
push
cwde
cwde
jle
je
xor
(bad)
and
sub
rol
fldenv
cwde
sbb
movs
inc
pop
add
imul
mov
lea
and
ins
enter
jns
xchg
push
fimul
add
icebp
fsubr
cli
cmp
jp
and
rol
call
push
cmp
and
ror
int
aas
fadd
mov
movs
and
jmp
add
fs
adc
aas
dec
repnz
dec
or
hlt
dec
loop
out
jg
jb
xchg
push
fistp
inc
push
jo
int3
aaa
xchg
out
sub
les
out
mov
int
stos
inc
cs
pop
cmp
imul
push
dec
mov
lds
jb
inc
cmp
lds
add
push
xchg
xchg
or
es
test
inc
sub
inc
dec
jmp
cmp
dec
sbb
jecxz
ins
push
into
cwde
rcl
add
cmps
mov
dec
fs
outs
fs
adc
push
xchg
jns
leave
mov
and
repnz
hlt
pop
loopne
jb
cmp
jle
fidivr
mov
inc
and
xor
and
(bad)
nop
sub
(bad)
in
mov
or
mov
mov
dec
dec
mov
adc
aaa
xchg
pushf
fidivr
lock
mov
jmp
mov
add
mov
into
inc
jmp
jp
retf
pop
lea
pop
lea
(bad)
fimul
mov
pusha
retf
dec
and
dec
sbb
cmp
adc
or
dec
add
sbb
mov
inc
das
pop
pop
retf
inc
stos
adc
dec
in
sbb
mov
popa
mov
adc
arpl
jge
cs
cmp
xchg
das
jne
je
and
iret
iret
xchg
fcom
dec
dec
mov
bound
xchg
movs
repz
adc
mov
pop
outs
cmp
cmp
repnz
int3
pop
and
mov
lds
arpl
jle
fadd
aas
mov
rol
(bad)
sub
mov
(bad)
sahf
dec
lds
xor
mov
lods
xor
ja
clc
jp
add
mov
arpl
lock
repnz
cdq
loope
push
push
pop
lock
and
cld
xor
push
das
and
jecxz
jp
cmp
imul
mov
sbb
nop
add
fcmovu
sbb
fstp
loope
lods
add
adc
xchg
add
or
ja
into
outs
pop
dec
stos
mov
adc
cmc
mov
or
aaa
and
scas
scas
ror
dec
add
dec
add
jo
aam
outs
and
ja
loopne
inc
and
xor
pop
jmp
(bad)
jmp
popa
xchg
std
push
loopne
cwde
or
rcr
leave
idiv
in
(bad)
stc
pop
arpl
(bad)
mov
mov
sbb
aas
mov
jecxz
ss
pop
sbb
ja
dec
movs
(bad)
loopne
cdq
xor
or
fwait
jo
cmps
xchg
sub
jno
dec
sbb
into
adc
addr16
clc
push
jp
cmc
aaa
mov
movs
add
xchg
or
pop
xchg
(bad)
aam
sub
dec
sbb
fidiv
xor
ds
rol
or
mov
lods
cmc
or
lds
sub
imul
sbb
enter
mov
or
mov
addr16
prefetch
(bad)
push
push
push
int
loop
adc
dec
test
shl
xor
les
xlat
jmp
test
mov
pop
and
push
inc
adc
mov
jge
pushf
pop
mov
arpl
ss
fild
push
sub
call
mov
ins
ins
push
cld
cmc
enter
fist
cli
and
xlat
ficomp
and
and
jne
dec
adc
adc
mov
add
sub
ror
leave
sahf
imul
jno
or
adc
icebp
sbb
sti
sbb
sub
nop
retf
xchg
mov
(bad)
lds
inc
bound
inc
test
xor
in
inc
jp
sbb
push
inc
scas
mov
sbb
mov
add
inc
dec
or
jg
movs
das
adc
jae
jl
add
fdivrp
iret
retf
or
push
and
mov
and
and
inc
or
cmp
fidivr
jp
loopne
cmp
cmp
push
js
dec
dec
xchg
add
push
adc
pop
and
push
idiv
aas
dec
test
daa
fldcw
xchg
jno
lahf
loopne
in
out
dec
jl
jecxz
push
scas
cli
jmp
pop
repnz
mov
mov
loope
ss
push
cld
push
push
and
lods
movs
stos
lods
jmp
rcl
lods
push
cmps
dec
mov
pop
pop
jb
mov
out
dec
jb
int3
pushf
ins
mov
mov
and
test
inc
cmp
in
mov
(bad)
sti
mov
pop
ret
pop
sti
lds
jmp
inc
stos
add
push
adc
sub
sbb
cmp
pop
push
and
xchg
sbb
es
popa
fst
loope
dec
inc
into
sub
in
cmp
jns
jmp
or
cmc
inc
add
jbe
bound
test
retf
movs
cli
pop
pop
stos
(bad)
mov
jb
fst
clc
ins
fsubr
out
add
cmps
ret
clc
fimul
xchg
cmps
test
out
or
mov
(bad)
bound
xchg
enter
mov
add
add
test
out
inc
dec
xchg
xor
inc
push
(bad)
retf
loop
leave
gs
sbb
inc
adc
loopne
mov
inc
imul
mov
sub
adc
pop
add
das
and
xchg
aas
sbb
pushf
jne
and
inc
sbb
mov
clc
xchg
xor
shl
push
rol
sbb
call
jbe
fadd
adc
jle
add
sbb
push
and
add
stos
jb
rcl
adc
and
(bad)
in
loop
jns
retf
fs
mov
jne
push
fdivp
inc
jo
cld
pop
js
cmp
push
mov
and
inc
sar
inc
test
jb
dec
inc
ins
pushf
fs
hlt
out
jb
inc
sub
(bad)
mov
mov
enter
mov
pop
xor
fucomi
test
or
jno
dec
call
fsubr
retf
dec
adc
sub
cmp
hlt
sub
(bad)
sbb
loop
nop
xor
call
xor
nop
dec
adc
gs
add
jnp
and
lds
in
push
movs
(bad)
and
xchg
dec
xchg
xchg
fbld
xor
push
add
dec
mov
mov
pop
(bad)
mov
sbb
push
add
pushf
sub
mov
fchs
fwait
mov
ss
xchg
jg
add
sub
out
dec
jl
jmp
sbb
sub
xchg
pop
outs
add
sbb
pop
outs
lds
outs
mov
ret
lods
or
ins
(bad)
cmp
xchg
data16
repz
icebp
outs
sahf
pop
(bad)
sahf
in
push
shr
icebp
xlat
push
jnp
pushf
cmp
mov
ins
lock
dec
add
jae
sub
push
les
into
cdq
dec
aas
pop
xchg
mov
bound
or
iret
rcr
dec
clc
imul
xchg
or
and
push
pop
lods
add
es
retf
dec
sbb
push
cmp
loopne
pop
and
jne
loope
inc
and
jne
jecxz
cmps
pop
cs
push
jecxz
mov
into
ja
ins
or
jno
int3
maxps
loopne
aas
and
ss
sti
cmp
cmps
mov
jp
sbb
xor
test
or
std
jno
ror
jbe
loope
push
mov
push
push
xor
in
mov
fwait
dec
shl
adc
fsubrp
mov
rcl
shl
jmp
jg
inc
mov
stos
lods
fwait
mov
jecxz
sub
mov
cmp
iret
xchg
dec
adc
jmp
stos
jmp
xchg
jmp
call
pop
xchg
mov
push
xlat
push
int
adc
call
sub
mov
call
or
push
xchg
cmp
scas
test
pop
push
xor
push
push
ja
jne
inc
xor
dec
sub
xor
daa
jno
into
mov
fmul
cmp
(bad)
in
add
mov
dec
mov
pop
(bad)
out
test
xlat
pop
out
jle
mov
ds
push
and
ret
(bad)
(bad)
pop
xchg
ficom
test
addr16
inc
loopne
sbb
in
xchg
jmp
push
cmp
ret
add
mov
mov
jecxz
leave
jnp
in
inc
mov
fistp
sub
das
popa
jp
push
arpl
icebp
test
mov
lods
xchg
imul
loop
sub
mov
in
xchg
rcl
xchg
mov
fld
dec
sbb
mov
stos
mov
add
xchg
jl
dec
cs
xor
ret
loope
fwait
rol
xchg
pop
xor
outs
mov
loope
leave
ret
cmp
adc
jecxz
rcl
fdiv
dec
cmc
sub
iret
add
cli
es
fild
pop
cmp
push
dec
push
mov
es
fwait
aam
sub
inc
push
ja
bound
add
add
nop
js
iret
pop
xchg
inc
repnz
mov
and
xchg
test
inc
test
xchg
mov
gs
and
push
jg
into
sahf
push
xchg
jbe
pop
call
shl
jmp
mov
loopne
jne
mov
pusha
add
add
cmp
popa
pop
push
test
(bad)
loopne
push
xlat
inc
cmps
shr
and
inc
add
mov
sahf
and
push
jne
(bad)
call
jp
dec
pop
stos
ins
sbb
(bad)
enter
jp
jno
icebp
dec
mov
sahf
outs
out
jmp
jle
jno
pop
fild
add
add
aam
dec
adc
cmp
fadd
lods
loop
out
and
minps
ja
clc
cmp
outs
xchg
fnstsw
cwde
out
dec
in
fdiv
cmp
cmp
push
jecxz
adc
fistp
mov
daa
mov
arpl
enter
dec
xor
pop
and
icebp
out
inc
xor
jmp
mov
sub
mov
lods
fdivr
xchg
movs
gs
add
mov
mov
in
cwde
pause
aaa
pusha
out
ins
(bad)
jae
push
add
mov
and
mov
sahf
dec
out
and
cmp
push
or
xchg
mov
or
cdq
in
into
inc
arpl
into
sub
fcomp
cmps
jle
jns
aas
cmc
sbb
push
test
inc
adc
dec
loopne
jb
push
test
xchg
mov
fsubr
fld
dec
popa
cs
mov
dec
adc
out
xor
or
pop
pop
add
hlt
xchg
sbb
add
push
stc
xchg
adc
stos
imul
test
out
push
push
adc
xor
ss
push
fwait
stos
out
inc
push
jnp
and
inc
jo
xchg
jb
enter
stc
xchg
pop
jno
in
push
jmp
imul
(bad)
and
les
push
push
mov
test
dec
xor
fiadd
int3
mov
pop
into
xchg
pop
pop
or
es
mov
xchg
lea
sbb
int3
je
cmps
daa
jnp
jbe
fsubr
jae
mov
and
xchg
sbb
scas
mov
icebp
cmp
fisttp
mov
xor
aaa
inc
xchg
movs
pusha
retf
pop
sbb
rcr
pop
inc
and
out
push
push
cwde
lods
inc
outs
mov
inc
push
call
in
stos
out
(bad)
scas
inc
pop
cmp
call
adc
inc
test
imul
push
xor
or
push
dec
(bad)
and
jnp
sbb
jle
movq
sbb
icebp
stos
sbb
jae
ror
out
mov
icebp
(bad)
(bad)
loopne
mov
push
mov
or
mov
mov
xchg
repz
jmp
popa
clc
inc
ins
sub
push
pop
(bad)
das
xlat
inc
jecxz
dec
inc
lock
jg
dec
sbb
jg
add
cld
pop
shl
jl
loop
jl
jo
(bad)
lods
cmp
fisub
cmp
into
(bad)
rcl
retf
cdq
inc
fdivr
adc
(bad)
jne
(bad)
mov
jnp
(bad)
ja
jnp
add
rol
jmp
jge
sbb
movs
loopne
push
xor
dec
shl
sub
jno
sub
clc
imul
sbb
and
mov
inc
mov
fidiv
jmp
js
cs
add
mov
aas
rol
jno
jo
sbb
shl
mov
mov
inc
jo
loopne
(bad)
clc
das
(bad)
sbb
lds
outs
xor
iret
call
lock
inc
cmps
dec
push
std
lahf
(bad)
leave
pop
pop
movs
cli
aas
xchg
and
xchg
rcr
inc
adc
(bad)
in
pop
(bad)
scas
or
stos
lods
sub
fdivr
sub
mul
cld
int3
inc
cmps
std
in
mov
jg
loopne
mov
dec
dec
lea
jp
call
pop
mov
inc
pop
cmps
push
in
push
rcr
ffree
jne
mov
stc
adc
pop
mov
push
scas
mov
bnd
stc
stc
cdq
out
inc
iret
or
iret
loopne
jge
jecxz
xchg
ss
icebp
(bad)
nop
or
mov
lods
sbb
pop
sbb
ret
call
xchg
rcr
mov
cli
cmp
adc
or
in
retf
pop
test
add
xchg
adc
fdivr
movs
test
sub
adc
aam
test
shl
fwait
scas
mov
sbb
mov
add
sbb
nop
sahf
sahf
int3
mov
or
mov
add
aaa
(bad)
nop
and
adc
adc
jle
xchg
(bad)
out
js
hlt
cmp
jmp
std
repz
push
std
push
(bad)
fisub
add
mov
xchg
fwait
pop
add
jp
es
loopne
repnz
fucomi
lahf
and
clc
cwde
(bad)
out
adc
mov
cmp
sub
sbb
add
shl
and
outs
sbb
clc
jle
cli
in
in
in
inc
inc
push
sub
fstp
and
xchg
xchg
and
mov
jge
movs
cld
or
adc
cdq
push
jecxz
nop
push
lds
adc
icebp
sub
shr
in
xchg
mov
int3
dec
xor
or
inc
arpl
pop
retf
push
pop
pop
sbb
xchg
shl
neg
cwde
nop
push
sub
pop
ins
and
retf
dec
add
add
repz
and
sub
fucomip
sbb
out
jno
neg
ja
icebp
in
xchg
mov
adc
in
cmps
cmp
lds
mov
mov
enter
jmp
add
dec
push
aad
sbb
inc
pop
sub
pusha
ja
adc
and
inc
sahf
dec
push
cs
push
pop
jmp
repnz
pop
lea
cwde
aas
outs
test
adc
fisttp
(bad)
(bad)
sub
mov
stos
aad
adc
out
and
hlt
xor
jmp
stos
cmps
xor
ins
out
cmp
sbb
sbb
add
mov
mov
pop
dec
mov
adc
mov
mov
out
and
push
popf
jecxz
sub
push
mov
fs
sub
inc
inc
nop
imul
add
dec
lock
xor
adc
or
mov
push
ins
or
test
jge
pop
and
lods
adc
pop
add
stos
and
xor
test
daa
and
pop
pop
sub
sahf
test
pop
push
bound
mov
test
push
in
(bad)
lock
xor
icebp
cld
in
ja
mov
adc
sub
in
loop
fxch
(bad)
(bad)
out
mov
retf
jno
push
push
fadd
sub
fwait
sub
enter
mov
xchg
movs
in
xor
cmp
(bad)
or
mov
daa
push
jns
test
mov
rol
js
pop
mov
and
mov
(bad)
int3
push
dec
adc
lahf
and
push
lds
push
mov
movs
stos
cmps
mov
popf
adc
test
inc
cmp
arpl
or
in
pop
add
xor
dec
xor
fiadd
ja
sbb
push
mov
inc
and
fidiv
adc
mov
leave
shl
xor
dec
pmaxub
mov
aas
pop
dec
add
sldt
lea
jp
adc
pop
mov
aad
(bad)
loopne
jg
rol
movs
(bad)
in
(bad)
add
sti
push
cs
jae
fdivrp
xchg
cli
jl
scas
std
out
lock
add
lods
cmp
sub
test
dec
dec
cmp
mov
(bad)
lds
bound
jl
ror
pop
das
or
aaa
cmp
and
and
sbb
sub
push
movs
aas
cmp
(bad)
(bad)
mov
dec
push
add
or
(bad)
jecxz
and
lock
sets
clc
not
cld
push
or
rol
test
add
lahf
dec
(bad)
aad
xor
cwde
mov
repz
mov
fnstenv
jo
dec
loopne
out
xchg
test
sub
dec
sbb
and
int
jno
adc
adc
imul
aas
sbb
ror
dec
shl
outs
fnstsw
mov
xlat
psrad
lea
sub
jg
push
mov
sub
repz
jmp
fdiv
scas
mov
shl
adc
call
and
clc
jle
js
or
mov
cmp
and
aas
out
iret
popa
data16
adc
sbb
out
and
ret
(bad)
mov
fcom
add
sbb
jno
repz
punpckldq
adc
shr
push
push
xor
fadd
pop
sbb
leave
cmp
cmp
mov
hlt
cmc
je
xor
cmp
push
(bad)
aam
add
addr16
add
xchg
add
in
daa
lock
popf
fwait
vpsubq
jecxz
aas
mov
lahf
js
(bad)
cmp
cli
or
lods
adc
push
(bad)
push
(bad)
repnz
cwde
pop
pop
ror
cmp
cmps
or
js
mov
stc
loopne
push
cmps
mov
jb
or
mov
lods
or
test
adc
test
lods
scas
fdiv
cmps
add
and
xchg
sub
sub
pop
scas
mov
push
mov
lahf
popf
loopne
mov
mov
data16
and
add
in
sar
push
stos
fbld
push
stos
ins
test
jg
pop
hlt
pop
in
or
out
add
fidivr
arpl
fisttp
push
mov
outs
and
retf
dec
push
push
adc
sub
mov
jle
(bad)
push
push
icebp
and
jno
rcr
mov
dec
xor
jns
fcmovu
jmp
and
mov
add
and
(bad)
add
mov
rcl
jb
xchg
add
cld
inc
aaa
in
xchg
popf
mov
mov
repz
mov
js
cli
and
test
enter
and
test
mov
mov
mov
mov
xchg
push
stos
push
jnp
hlt
add
call
mov
push
int
and
gs
popf
je
pusha
scas
neg
aam
icebp
fbld
jp
nop
mov
sub
and
ja
jmp
xor
or
cld
fsub
pop
adc
xchg
daa
test
mov
retf
fisttp
or
lds
mov
sti
mov
movs
adc
dec
xor
add
mov
(bad)
out
rcl
inc
xor
scas
popf
test
cmps
cmps
(bad)
and
outs
pop
jbe
xchg
ret
inc
and
mov
push
cld
inc
push
sbb
test
adc
sub
loope
lds
repnz
pop
adc
ins
sbb
xchg
movs
shl
daa
jae
inc
adc
inc
cmp
pop
ins
xor
and
test
cmp
sbb
out
mov
cmp
ret
bound
stc
xchg
clc
cmp
inc
lds
jb
test
jmp
nop
scas
inc
and
pushf
or
ret
sar
inc
and
test
xor
adc
or
lea
cmps
add
fistp
stos
sub
nop
dec
or
jne
aaa
mov
or
icebp
dec
dec
push
leave
shl
sbb
jl
icebp
pop
xchg
fisub
mov
in
xor
sbb
cmps
adc
push
sub
cmp
adc
popf
lahf
sub
pop
xor
mov
mov
lahf
in
add
inc
or
stos
mov
and
dec
mov
leave
ret
mov
loope
dec
(bad)
in
fst
sbb
inc
xchg
mov
push
mov
lahf
or
or
ss
pop
mov
shr
lods
push
jnp
mov
cmp
push
test
push
cli
push
mov
jg
neg
mov
jmp
cmp
faddp
cmp
mov
sub
sbb
add
jns
or
xchg
xchg
fstp
mov
nop
cli
and
stos
int3
sbb
scas
div
in
sub
jg
or
mov
mov
dec
and
xchg
mov
adc
pop
dec
mov
sbb
fstp
sbb
pop
add
push
push
out
add
icebp
mov
mov
in
dec
pop
clc
inc
sbb
sahf
sub
iret
push
jno
sbb
aad
pop
loope
call
sbb
sahf
out
add
addr16
retf
clc
cli
ins
sbb
mov
aad
pop
out
lea
mov
ja
xor
inc
pop
jl
mov
(bad)
(bad)
lds
ins
ret
jno
push
cld
jnp
sbb
fbstp
ret
xlat
loop
pop
or
popf
mov
call
sar
adc
cmp
(bad)
push
xlat
(bad)
mov
outs
fcomp
push
in
mov
fs
xchg
test
jecxz
imul
push
sar
push
sbb
add
test
and
sbb
(bad)
pop
pop
and
xlat
dec
lods
paddsb
es
jo
and
fcomp
sub
mov
mov
call
adc
ret
mov
loope
mov
mov
jle
adc
jnp
rcr
inc
and
jb
mov
in
push
pushf
ds
mov
das
neg
aas
dec
cmc
jg
addr16
add
aas
jo
push
popf
mov
(bad)
(bad)
adc
mov
lock
lods
scas
cwde
test
loope
push
hlt
test
push
xchg
in
ret
xor
or
jnp
mov
and
test
xor
bound
popa
pushf
jae
or
ins
jge
and
(bad)
inc
xor
inc
inc
ja
fidivr
shl
xor
xchg
lods
(bad)
jle
jmp
or
std
push
ja
retf
cld
cmp
jl
imul
cdq
addr16
les
fisttp
out
jg
or
xor
push
push
(bad)
sar
rol
add
cmps
data16
xchg
fisubr
mov
pop
inc
or
xchg
push
mov
rdpmc
mov
cmp
mov
test
aam
ins
inc
push
icebp
adc
repnz
dec
std
imul
inc
and
retf
pop
sub
scas
test
or
daa
js
lds
dec
mov
xchg
stos
or
lds
mov
mov
jns
mov
clc
imul
or
ja
push
dec
dec
pop
or
sbb
nop
or
sbb
mov
adc
js
and
push
(bad)
ficomp
call
rcr
cwde
add
scas
cmp
add
push
icebp
xor
sbb
xchg
xchg
adc
ds
or
and
in
inc
cmp
aad
mov
rcr
mov
add
or
xchg
sbb
and
xor
jge
add
add
int
sar
adc
imul
rol
mov
xor
jae
setp
xchg
adc
mov
mov
repnz
(bad)
push
sub
mov
pop
stc
test
mov
mov
mov
inc
(bad)
sbb
cmc
and
shl
lods
mov
leave
jno
aas
jl
jge
add
and
repnz
inc
inc
int
in
rcl
inc
inc
jp
das
cmps
or
data16
fst
out
xchg
pop
inc
and
dec
add
mov
and
shl
add
mov
or
test
xchg
inc
cmps
mov
fmul
and
inc
cwde
std
jl
call
fwait
cmp
loope
ss
icebp
sub
sub
es
xor
imul
inc
div
inc
cmp
cwde
adc
mov
aaa
arpl
sbb
loope
out
loopne
xchg
test
sahf
push
jnp
add
or
fwait
dec
ret
add
jmp
in
in
popf
sub
enter
loop
int
fsub
in
push
fs
sub
mov
push
enter
dec
or
mul
sbb
sub
or
xchg
outs
daa
add
into
(bad)
inc
dec
and
sti
cwde
pusha
mov
and
fcomp
mov
and
push
les
and
jno
dec
retf
sti
movs
cmp
jns
adc
scas
or
or
adc
adc
adc
leave
jnp
dec
loop
imul
(bad)
scas
int
cmp
mov
mov
xchg
ins
enter
xor
xor
push
pop
adc
pop
sbb
retf
push
mov
push
push
arpl
cld
push
add
and
pop
xchg
sub
or
push
(bad)
jo
ror
fisttp
jge
xor
js
add
jnp
xor
jns
xchg
aad
pop
push
dec
ret
xchg
push
(bad)
jecxz
call
aad
sbb
xor
push
mov
jle
inc
in
mov
in
scas
rcr
mov
aam
inc
and
ret
jg
rol
mov
out
and
push
icebp
push
stos
mov
(bad)
jge
add
cmp
inc
and
ror
popa
xor
loope
stc
loope
iret
fs
neg
pop
es
xchg
popa
pushf
dec
jle
nop
hlt
lahf
or
fcmovbe
or
push
push
mov
xor
jg
inc
loope
sub
sbb
cmp
icebp
ret
mov
retf
mov
ror
sar
sub
and
pop
push
mov
into
aas
(bad)
xor
call
movs
aaa
lahf
imul
mov
sub
jae
xchg
loope
jg
xor
icebp
mov
ds
fst
enter
sbb
jo
mov
mov
data16
inc
jne
jle
mov
or
aas
mov
mov
adc
xor
imul
jno
je
pop
cmp
movs
push
xchg
jg
sbb
xlat
into
(bad)
in
(bad)
jge
jo
or
mov
xchg
outs
dec
loope
mov
xor
mov
ficomp
xor
scas
sar
ins
jmp
xor
mov
dec
jecxz
std
out
cmp
cmp
out
dec
cmp
lea
push
(bad)
(bad)
jecxz
mov
call
or
jecxz
push
sbb
outs
sbb
jge
retf
mov
lock
not
dec
sbb
clc
ret
mov
add
or
push
test
pop
(bad)
aam
cmp
out
fisttp
repnz
enter
mov
mov
cmp
push
inc
and
push
adc
loopne
mov
cmps
repnz
and
ss
aad
pop
sub
aas
stc
into
addr16
int3
cmp
mov
out
lock
mov
jl
in
sti
lahf
in
pop
in
das
repz
push
pop
dec
cmp
test
(bad)
xor
sub
arpl
and
sahf
inc
cmp
adc
dec
cmp
fstp
jnp
dec
dec
sub
mov
jnp
std
dec
in
mov
aaa
test
loopne
adc
popa
aam
mov
scas
cmp
gs
or
or
retf
push
xchg
mov
dec
pop
push
mov
in
scas
cwde
fisubr
jp
add
into
or
call
sub
sub
pop
ret
jo
enter
xchg
adc
repnz
cld
mov
mov
nop
pop
and
call
ror
pop
dec
fistp
pop
or
scas
call
dec
sti
pop
dec
sub
or
sbb
retf
xchg
jp
mov
jle
cli
push
add
fldcw
xchg
and
cdq
adc
push
jp
or
test
push
pop
mov
push
test
(bad)
mov
test
jecxz
leave
out
int3
xchg
or
hlt
div
and
push
shr
ss
imul
mov
movs
nop
inc
sub
adc
mov
lea
fbstp
lea
paddw
out
jne
call
mov
test
push
ficomp
or
pop
adc
xchg
loopne
xlat
jno
jb
daa
inc
add
and
cdq
(bad)
sbb
and
mov
enter
adc
jge
bound
sub
neg
or
rol
pop
sub
out
jge
inc
inc
jb
mov
loop
js
mov
cmp
mov
push
out
test
ror
les
out
mov
lea
in
lods
push
out
push
fwait
leave
mov
add
dec
(bad)
popf
xchg
adc
jp
mov
fldcw
outs
fcmovnbe
dec
fdiv
add
pop
add
jno
shl
inc
pop
stos
jo
cmps
xor
and
repz
dec
dec
jo
or
stos
test
pop
sub
and
pop
fnstcw
aam
and
xchg
mov
loop
xor
icebp
in
movs
sahf
add
cs
add
cs
xor
add
mov
pop
pop
ret
les
pop
aaa
or
mov
and
pushf
(bad)
(bad)
mov
std
sub
lods
cmp
sbb
repnz
aaa
cmps
mov
hlt
mov
mov
xchg
and
sub
shl
dec
push
(bad)
mov
test
test
in
aaa
inc
jge
sub
or
inc
mov
jle
inc
jo
ss
nop
xchg
sbb
mov
jl
mov
inc
jmp
xchg
mov
cmp
pusha
gs
push
int3
loope
leave
push
cmp
in
cmp
hlt
cmp
sahf
xor
add
stos
mov
lock
rcr
neg
cwde
and
sub
jnp
cli
jp
add
jmp
mov
jg
adc
and
lods
shl
or
inc
xor
jnp
(bad)
scas
bound
xchg
xor
retf
jno
or
std
jp
jo
sbb
sti
loope
jg
add
or
rcr
popa
in
stc
inc
loopne
pop
mov
cld
push
pop
(bad)
and
stc
stos
xor
fdivr
shl
jns
das
mov
jl
add
or
icebp
xchg
mov
add
xchg
clc
loop
out
in
clc
xor
lock
cmp
xor
in
fwait
jno
fstp
pop
jns
add
daa
mov
push
mov
pop
mov
(bad)
jle
xor
ret
(bad)
lods
test
stos
jge
(bad)
data16
mov
jecxz
mov
jae
mov
shr
mov
icebp
mov
jbe
pop
iret
fld
aas
or
adc
jp
jo
iret
pop
xchg
(bad)
test
addr16
jmp
icebp
mov
loopne
jnp
cld
pop
mov
outs
in
(bad)
stos
xchg
es
shl
and
xchg
test
cmps
aas
rol
jnp
mov
mov
bound
push
jnp
push
mov
cli
sbb
mov
rol
in
inc
sub
clc
ja
jno
jmp
cmps
xchg
push
xor
xor
(bad)
cs
xchg
push
rcl
imul
pop
fadd
stos
in
(bad)
xchg
push
hlt
pcmpeqd
popf
jecxz
mov
mov
jns
(bad)
cmp
in
push
(bad)
xor
popf
std
inc
push
jno
call
hlt
lods
push
frstor
in
adc
ret
lods
sub
and
std
sub
test
xchg
clc
fstp
(bad)
xor
psllw
mov
push
loopne
sbb
jno
sti
push
out
(bad)
sub
cmps
xor
xor
jne
xchg
cld
push
icebp
rcr
cmp
adc
popa
mov
jmp
inc
sar
pushf
push
jecxz
adc
stos
adc
pop
inc
xchg
sub
cmps
cmp
inc
fcmovnbe
push
xchg
loopne
retf
mov
ds
and
add
inc
fcmovu
sbb
ror
and
adc
call
xchg
(bad)
xchg
stos
arpl
dec
xor
adc
add
imul
adc
fild
jo
mov
out
out
mov
loope
test
fist
mov
mov
jne
stos
pop
mov
push
dec
cmp
inc
dec
pop
mov
test
fwait
jmp
push
call
out
in
fndisi(8087
xor
outs
or
sbb
idiv
je
mov
jmp
dec
xchg
fnstcw
in
sub
fistp
jge
nop
fwait
jecxz
cmp
call
mov
and
hlt
aam
test
sub
jp
test
les
loop
xor
adc
in
fstp
sub
scas
sub
inc
lds
in
sub
adc
jmp
outs
aaa
mov
daa
dec
push
fnstenv
aam
jnp
addr16
test
inc
shr
or
or
and
jl
test
cmp
jb
jns
stos
inc
popf
dec
inc
adc
mov
loopne
inc
xchg
jecxz
arpl
mov
and
xor
cmp
xchg
mov
or
push
cld
pop
mov
std
add
out
add
mov
sbb
sbb
out
and
lods
lds
int
pusha
adc
imul
mov
push
add
inc
sub
mov
dec
(bad)
out
push
sbb
add
add
push
add
shl
mov
repz
and
inc
pop
mov
dec
dec
add
mov
dec
cmps
(bad)
fisub
mov
les
mov
inc
xchg
mov
mov
arpl
mov
inc
xor
scas
stos
enter
add
sub
fstp
adc
inc
imul
add
adc
inc
add
add
call
push
and
loop
ret
mov
inc
out
jnp
jecxz
add
movs
ins
mov
fsubr
add
xchg
inc
fld
xor
hlt
dec
imul
shl
add
adc
mov
lahf
and
pop
xchg
jno
cmp
xchg
inc
mov
sub
cmps
sub
(bad)
pop
mov
aad
dec
dec
mov
add
mov
out
and
ins
sub
loop
aaa
sbb
mov
inc
push
push
sbb
cld
bound
fidivr
pop
test
jbe
fnstenv
loopne
nop
or
loopne
pop
(bad)
repnz
sbb
xor
inc
or
jmp
lds
jmp
ror
stos
cld
rcl
push
xchg
mov
lahf
stos
vandps
push
xor
and
inc
sbb
(bad)
retf
push
(bad)
icebp
add
mov
std
sub
adc
test
enter
mov
cli
je
scas
mov
mov
jecxz
mov
in
cld
cld
push
cmp
imul
and
imul
sub
clc
inc
sbb
(bad)
movs
add
mov
(bad)
ss
fnstsw
(bad)
jmp
je
repz
or
mov
daa
jle
pop
adc
lock
lea
jle
jmp
movs
fadd
out
xchg
add
adc
mov
pop
jnp
cmp
sar
popf
xchg
mov
aas
pop
add
xchg
push
loope
dec
xchg
add
out
and
sbb
cmp
mov
or
sub
pop
sbb
pusha
and
push
inc
loopne
fs
pop
adc
add
loopne
jns
pop
jo
shr
cmp
ds
sbb
mov
retf
xchg
clc
in
sub
mov
and
fdiv
jmp
xchg
dec
jecxz
dec
loopne
push
lock
adc
jmp
(bad)
pop
pop
das
(bad)
aad
pop
(bad)
cli
outs
sbb
es
fcomip
enter
pusha
fdiv
xor
lods
pusha
data16
in
test
je
and
and
cli
xor
mov
fisubr
ja
(bad)
idiv
std
fdivr
or
or
arpl
xor
fcom
xchg
pop
xor
aaa
test
mul
cmp
movs
add
xchg
pop
dec
hlt
ja
lahf
cmp
cmp
mov
mov
test
and
fnstenv
cs
jmp
stos
popa
aaa
sbb
rcr
aaa
mov
shl
or
jo
cmp
mov
sbb
lock
dec
cld
test
and
fcom
jnp
fdivp
hlt
cmp
pop
sti
xor
mov
out
and
adc
dec
arpl
xchg
mov
cmp
add
xor
xor
push
mov
adc
sti
cli
sub
inc
fidivr
adc
add
sub
dec
push
aad
jp
rcl
dec
mov
es
leave
mov
inc
mov
or
cmp
adc
jmp
jmp
js
dec
jns
push
icebp
push
cs
xor
shr
sub
(bad)
aas
push
int
in
xor
dec
xchg
movs
icebp
mov
int3
push
stos
jle
and
jns
and
dec
fs
fstp
fbstp
or
or
or
cld
daa
div
or
adc
lds
inc
mov
cmp
retf
stos
sub
push
(bad)
mov
movs
push
mov
and
inc
data16
fstp
shl
adc
movs
scas
rol
loope
ror
and
or
stc
(bad)
clc
jnp
xchg
iret
dec
and
ret
xor
push
push
cmp
(bad)
fist
mov
scas
xchg
push
(bad)
fisub
add
ret
xchg
stc
pop
dec
dec
xchg
repnz
idiv
in
lock
mov
mov
retf
int3
repz
cmps
(bad)
push
(bad)
movs
mov
loope
mov
fidivr
ja
icebp
in
(bad)
dec
add
outs
lea
addr16
ins
pop
pop
sahf
cmp
mov
mov
inc
push
mov
adc
ins
ins
sub
fs
mov
pusha
and
push
pusha
sbb
add
fst
lock
or
push
stos
xchg
mov
mov
adc
stos
les
or
push
xchg
lods
sbb
or
sub
ja
pop
sub
inc
jmp
(bad)
cmp
fdiv
jmp
jp
out
sub
sub
pusha
cmp
enter
adc
fwait
dec
mov
inc
stc
jae
xchg
idiv
push
inc
mov
jo
fmul
adc
adc
fwait
cmp
nop
inc
push
cs
sub
(bad)
ins
or
in
pop
nop
addr16
pop
loop
inc
sbb
and
jmp
push
inc
pop
add
dec
dec
jbe
jmp
and
sub
dec
loope
icebp
mov
test
(bad)
mov
stos
push
xchg
push
sub
pop
(bad)
mov
push
xor
and
shr
lock
jg
outs
or
add
add
call
aaa
jnp
add
adc
and
xchg
pop
dec
adc
ret
and
into
es
nop
int
lahf
cmp
fiadd
and
pop
repz
mov
adc
push
push
mov
es
imul
mov
outs
pop
neg
jmp
lea
jb
ds
pop
push
lock
pop
fnstcw
xor
mov
mov
fild
ss
mov
popa
retf
cmc
xchg
arpl
(bad)
jmp
stos
int3
hlt
in
ins
adc
cmps
dec
push
aam
jp
inc
std
daa
data16
cmp
xor
pop
mov
loope
dec
mov
movs
cmp
fs
sub
pop
mov
dec
add
iret
or
movs
inc
pushf
jmp
cmp
dec
outs
(bad)
retf
lahf
icebp
lds
test
js
sbb
scas
push
loope
adc
mov
push
inc
shr
(bad)
lods
outs
or
cld
fbstp
addr16
fdiv
cmc
sbb
dec
ja
fsubrp
mov
test
sub
test
mov
(bad)
(bad)
not
push
xlat
mov
stc
leave
sub
push
adc
dec
xor
dec
mov
jmp
lock
add
cmp
add
fistp
test
add
xor
and
pop
pop
arpl
push
aad
fwait
jge
mov
or
mov
push
pop
(bad)
xlat
or
jl
add
xchg
outs
jg
xor
xchg
ficomp
pop
outs
jl
sbb
repz
(bad)
inc
ror
pop
mov
add
mov
in
retf
add
(bad)
xchg
pop
ret
and
into
loop
add
loope
icebp
adc
loopne
push
jae
push
push
xor
xor
movs
stos
add
mov
out
sti
test
bound
and
ret
call
jno
push
mov
sub
sbb
ret
in
cld
add
mov
sbb
xchg
push
scas
mul
out
rcr
fadd
xor
sub
mov
js
xor
and
(bad)
lahf
in
cmp
push
lahf
(bad)
out
lds
clc
cmp
inc
lock
stc
and
test
into
icebp
cmp
xor
cmp
or
aad
push
pop
ins
and
mov
ins
and
or
and
xchg
adc
std
sti
jno
test
popf
fadd
loope
retf
aaa
or
jbe
in
cs
loopne
in
pop
clc
test
or
jge
repnz
cmps
inc
sahf
push
shl
loopne
xor
jp
jne
repz
sahf
add
sub
sahf
arpl
enter
pop
dec
mov
push
mov
add
adc
test
mov
xchg
push
mov
and
mov
or
xor
pop
hlt
jecxz
xor
scas
ja
push
clc
fidiv
lock
add
mov
movs
lds
xor
push
in
cmps
jge
inc
jne
mov
scas
(bad)
and
cld
popf
pusha
and
gs
mov
clc
fsubp
ds
add
adc
cmc
push
xchg
cmp
pop
and
scas
sub
cmp
add
frstor
or
sub
stos
out
push
in
stos
or
ror
rcl
xor
xor
mov
stc
mov
pushf
shl
mov
fs
ja
sbb
jle
pop
and
mov
ror
mov
fisttp
mov
cmc
dec
ja
jmp
xor
lea
out
cmp
jns
adc
(bad)
cmp
and
adc
lahf
fadd
int3
int3
push
mov
mov
sub
jnp
daa
xor
jb
ins
aaa
xchg
mov
js
ss
stc
add
xor
cli
jb
ins
fistp
inc
mov
and
leave
fs
test
arpl
mov
add
leave
enter
in
dec
cmps
and
loop
xor
jnp
pop
fucom
jb
movs
push
mov
mov
sub
cmp
ins
icebp
cld
fidivr
or
or
xor
pop
inc
(bad)
dec
add
mov
ds
sub
or
push
ret
and
popf
into
je
mov
cmp
push
inc
inc
aaa
cmp
int3
xchg
push
int
push
test
retf
cmp
inc
popa
sub
cmps
bound
add
popf
push
jbe
inc
jge
jmp
pop
out
jecxz
mov
add
xor
test
pop
xchg
leave
fs
loop
fld
fsub
das
add
xchg
dec
jns
lock
mov
adc
pop
shl
sub
jmp
push
aam
mov
mov
cmp
push
mov
fsubr
inc
push
enter
add
cmp
push
enter
js
rol
pop
push
push
push
popa
jbe
sbb
cmc
inc
das
push
push
push
ror
add
sbb
jne
pop
call
out
sti
dec
mov
pop
adc
mov
mov
loope
mov
sub
add
fiadd
mov
jmp
jmp
in
xor
push
xor
and
enter
add
sub
mov
call
es
les
xchg
xor
push
(bad)
pop
dec
(bad)
fimul
fcomi
ret
ror
icebp
ret
test
add
xlat
push
sbb
jno
cli
xor
xlat
sub
cli
pop
dec
jno
aas
sbb
hlt
dec
lods
call
jle
mov
iret
xchg
add
pusha
rcr
jmp
ficom
pop
xchg
add
sub
aas
jl
mov
fistp
leave
ret
sahf
add
jne
clc
sti
gs
jmp
ss
aas
dec
jne
adc
out
in
mov
cld
jecxz
js
mov
jl
clc
(bad)
adc
shl
in
iret
(bad)
aad
or
jmp
mov
inc
jo
and
jmp
in
ror
xchg
inc
push
fcomp
loopne
jne
pop
das
test
mov
pop
dec
(bad)
mov
sub
(bad)
sbb
loope
inc
scas
(bad)
jmp
and
fild
lods
cmp
jo
retf
mov
jge
mov
mov
in
mov
push
or
push
and
and
sbb
jp
inc
mov
scas
or
mov
pop
fidiv
loopne
add
dec
popf
shr
into
loope
cmps
push
(bad)
lock
jmp
repnz
test
out
xor
xor
es
in
xor
fcom
push
adc
pop
dec
gs
mov
out
ss
sub
icebp
mov
nop
int3
push
mov
imul
mov
push
jae
cmps
mov
mov
inc
cmp
sbb
mov
or
xor
aas
xor
mov
dec
xor
jnp
aad
jge
jg
idiv
mov
scas
jg
pop
js
fldenv
leave
jmp
js
lods
int
pushf
mov
push
scas
js
rcl
xor
mov
mov
stos
push
jbe
(bad)
dec
add
sub
bound
mov
in
push
leave
push
and
jge
jb
ret
test
fsubr
sub
ror
stos
leave
scas
enter
push
push
nop
xchg
sbb
in
inc
arpl
cmps
and
sbb
fisttp
jo
iret
aas
(bad)
in
sbb
add
sti
dec
neg
mov
mov
aam
mov
inc
test
adc
sub
cs
stc
jmp
out
test
fst
dec
sbb
xor
xchg
inc
dec
nop
xchg
daa
mov
(bad)
dec
fimul
dec
loopne
jb
inc
push
mov
aaa
sub
(bad)
add
mov
sub
outs
fcomp
fisub
cli
dec
stc
jnp
call
das
lock
mov
inc
pop
sub
mov
lea
xor
add
addr16
xor
jle
jmp
outs
jg
not
(bad)
jg
push
mov
out
scas
imul
mov
test
hlt
loope
dec
aaa
loop
inc
call
mov
movs
mov
sbb
dec
xchg
enter
push
nop
jb
movs
lock
xchg
push
push
xchg
push
xlat
ins
clc
call
iret
fidiv
(bad)
fadd
pop
enter
test
mov
mov
dec
cmc
imul
and
mov
add
gs
test
fwait
sbb
movs
mov
add
call
or
aaa
ins
ret
mov
xor
mov
push
sbb
mov
stos
xor
imul
pop
mov
repz
int3
sub
iret
and
or
test
fst
loope
mov
mov
das
push
xor
and
nop
add
xlat
sub
xor
andnps
push
inc
shl
xor
jp
or
inc
icebp
push
or
in
stos
mov
and
cs
push
cmp
cmps
ins
add
and
sub
call
cmps
adc
das
mov
mov
(bad)
nop
add
enter
movs
pop
idiv
xchg
xor
scas
test
aam
sub
retf
stos
and
adc
push
sub
push
imul
outs
push
out
inc
cmc
adc
or
sub
inc
adc
ds
clc
ja
adc
sahf
adc
std
cmps
cmp
xchg
push
xor
js
sbb
push
xor
cmps
xor
repnz
dec
lods
out
push
in
popa
sbb
cmp
(bad)
aam
or
xchg
sti
xor
(bad)
xchg
movs
sbb
xlat
mov
popf
sbb
inc
jae
mov
stos
test
js
fdivr
int
pusha
bound
lahf
inc
pusha
dec
sahf
adc
mov
add
bound
sbb
sbb
sti
push
mov
shl
push
gs
ficomp
dec
scas
or
pop
mov
leave
(bad)
pop
jno
pop
icebp
mov
call
or
rcr
and
cmp
(bad)
jo
test
stc
jns
fdivrp
push
sbb
scas
sbb
fadd
cld
fs
into
add
std
pop
cmp
iret
in
or
pop
jbe
xchg
into
pop
js
sub
outs
or
mov
cld
lock
sbb
lock
xor
mov
test
cmp
lds
aad
lods
cmps
or
pop
xor
std
dec
push
icebp
mov
fimul
cld
pushf
retf
cmps
jo
pop
cs
gs
inc
cmp
or
or
loopne
js
(bad)
out
add
cmp
dec
movs
jecxz
cmps
push
mov
pop
out
(bad)
aad
dec
fcomp
dec
rcr
js
and
mov
pop
mov
mov
jg
es
pop
mov
(bad)
arpl
pop
jmp
in
jnp
pop
xlat
scas
es
in
inc
adc
jns
add
add
out
int
jae
movs
push
pop
mov
out
int3
mov
(bad)
sbb
lea
pop
sub
xor
mov
test
or
mov
ror
test
add
push
mov
imul
adc
or
test
jno
sbb
inc
push
jnp
jp
inc
ror
pop
push
push
inc
jnp
dec
loope
out
dec
in
dec
out
push
fwait
push
sub
jno
sti
fld
jo
sub
(bad)
call
sbb
inc
dec
and
push
add
stc
xchg
jg
mov
xchg
call
js
dec
in
inc
sub
lods
adc
inc
rcl
fisubr
ins
push
xchg
jb
pop
add
or
push
add
(bad)
cmp
dec
stc
call
inc
inc
and
jp
rol
xor
sbb
sahf
(bad)
ins
pop
dec
push
mov
mov
sub
inc
sbb
sti
repz
cmp
jnp
stc
sbb
imul
fst
xor
add
cmp
stos
mov
(bad)
(bad)
and
inc
mov
lods
in
int
cs
out
in
arpl
nop
sub
ficomp
rcr
add
mov
pop
jns
or
inc
adc
fsubr
inc
outs
dec
arpl
cdq
push
lea
jp
jae
repnz
dec
rcl
fld
adc
mov
ret
lahf
mov
mov
sbb
jmp
push
mov
or
enter
ret
test
push
(bad)
(bad)
lds
stos
sbb
icebp
out
nop
repnz
test
pop
sub
mov
(bad)
pushf
add
inc
xchg
mov
add
les
xchg
sbb
call
es
sub
cdq
sub
lea
repnz
jge
stos
stos
or
ficomp
fcom
push
mov
cli
in
(bad)
pop
pop
jl
icebp
loopne
addr16
cmp
or
mov
cmp
mov
inc
xor
inc
xchg
sub
push
sub
aaa
das
sub
ret
ins
dec
daa
inc
jno
sub
rol
inc
xchg
inc
or
xor
mov
cs
xor
cmp
fiadd
add
cmp
mov
jp
adc
in
and
jl
ja
add
ins
movs
inc
mov
pop
push
push
pushf
mov
mov
stos
adc
div
push
mov
nop
or
sti
mov
std
imul
fs
shl
shl
ror
repz
mov
sbb
lea
sub
aad
inc
xchg
lock
(bad)
std
lods
fild
or
sti
sbb
leave
enter
jae
rcl
mov
jl
pop
call
enter
xor
dec
data16
mov
jg
xchg
mov
push
fidiv
add
and
inc
inc
pop
rcl
inc
add
mov
ja
xchg
mov
les
inc
inc
ficomp
add
jg
in
out
xor
(bad)
mov
(bad)
pop
adc
fs
leave
popf
(bad)
push
aad
sub
xchg
ret
test
push
pop
cmps
mov
movs
in
je
xchg
push
mov
or
stos
fstp
mov
or
dec
popf
sbb
fwait
in
into
mov
sahf
xlat
jbe
add
stos
scas
sbb
inc
mov
btc
in
call
sbb
into
cmc
call
cld
dec
add
push
int3
iret
mov
xchg
(bad)
jae
lods
fsubp
shr
push
and
ret
adc
ret
hlt
je
mov
mov
push
pop
pop
ror
fisub
add
adc
mov
es
std
fs
cs
sbb
clc
sbb
mov
stos
rcr
xchg
rol
aad
pop
lock
iret
stos
jo
xchg
mov
stc
pop
loopne
and
jg
xor
int
stos
adc
into
not
mul
cld
mov
add
jae
ret
fist
(bad)
cmp
icebp
mov
dec
sub
arpl
jae
mov
mov
lods
jge
add
cli
xchg
pushf
aaa
int
sahf
mov
pop
push
ror
lds
dec
shl
pop
lods
lods
movs
add
in
mov
xchg
icebp
js
cmp
xchg
in
les
cmp
xor
jecxz
pusha
xor
outs
or
sahf
retf
sahf
jo
js
pop
xchg
mov
mov
cli
dec
adc
aas
mov
pop
add
push
mov
ret
dec
in
repnz
int
pushf
jg
cmp
mov
movs
and
out
or
mov
xchg
(bad)
fdivr
hlt
repnz
hlt
sub
jg
jno
mov
das
mov
mul
jb
mov
inc
pop
cdq
sbb
out
push
xchg
aas
lds
lds
push
jg
dec
jmp
xor
rcl
shl
add
inc
movs
sbb
enter
test
pop
dec
pop
pop
aad
xor
mov
sbb
mov
retf
cmp
adc
push
data16
xlat
imul
ja
xor
push
(bad)
loope
sti
xor
xor
sbb
xchg
and
sub
loope
add
or
mov
mov
not
mov
jb
enter
and
enter
sub
call
add
sahf
sub
es
neg
mov
or
repnz
push
push
push
push
(bad)
adc
mov
pop
lock
jb
cmp
cmps
push
lods
ror
jecxz
push
gs
jns
adc
mov
ret
test
or
adc
(bad)
js
cli
cs
pop
mov
test
nop
mov
adc
mov
pop
test
mov
adc
dec
test
gs
into
pushf
cmp
mov
mov
sahf
js
and
arpl
lods
dec
out
jne
stos
cmc
clc
or
fwait
aas
in
or
or
mov
sar
repz
lahf
cwde
movs
stos
mov
ins
add
mov
int3
mov
repnz
inc
xchg
(bad)
call
dec
ins
jae
fstp
push
daa
loopne
push
es
mov
mov
ficom
add
or
add
xchg
inc
add
stos
loop
sub
movs
(bad)
aas
mov
mov
loopne
adc
jle
cmp
stc
sbb
cmps
jg
jno
pop
fild
ds
mov
fdiv
call
cld
mov
add
jo
mov
das
inc
add
loope
push
jl
mov
or
fldenv
and
ret
aad
lea
out
or
rcr
xchg
cwde
popa
sub
xchg
sub
pop
inc
out
adc
add
leave
ret
fst
(bad)
mov
addr16
fisttp
sbb
mov
push
mov
or
repnz
sbb
nop
popf
xchg
pusha
xor
aam
push
xor
faddp
mov
cmps
cwde
mov
into
dec
add
pop
dec
je
pop
inc
jae
test
inc
jb
inc
sbb
aam
or
test
xor
lahf
push
jnp
test
int
jb
xor
js
xor
ss
mov
cmp
fldenv
push
sar
push
and
sub
and
out
sub
ficom
adc
loope
add
push
test
dec
add
outs
add
popf
mov
jmp
imul
out
add
jp
add
xor
ja
aas
ja
fistp
(bad)
cli
mov
fiadd
jnp
std
sbb
icebp
fsubr
test
mov
push
fwait
(bad)
cmc
das
sub
jg
mov
jns
test
inc
add
xchg
xor
push
in
movs
adc
sbb
bound
xor
stc
test
sub
outs
gs
cmps
inc
or
scas
ret
cdq
xor
pop
mov
(bad)
cs
pop
cwde
imul
jl
xchg
pop
mov
in
ds
jne
outs
mov
cwde
call
inc
sbb
push
or
push
jns
add
sbb
xchg
test
int
aam
(bad)
(bad)
jecxz
ds
or
pop
scas
jl
adc
aad
stos
aas
scas
lds
cmp
outs
ret
xlat
jecxz
mov
jo
pop
sbb
shl
adc
pop
mov
in
and
cs
inc
loop
and
js
xor
xlat
cmps
in
mov
xchg
add
lock
aam
clc
mov
xor
aad
aas
out
add
mov
outs
jle
seta
mov
scas
jle
or
lock
enter
leave
ret
pop
shr
mov
rcr
sar
data16
aad
sbb
in
ror
lock
dec
outs
sub
adc
sti
push
jno
cmovs
aam
loopne
jnp
(bad)
pop
(bad)
cli
ficomp
loope
xchg
(bad)
jno
loop
pop
mov
xchg
mov
pop
outs
fisttp
sbb
jmp
out
js
add
dec
popf
repnz
les
sub
dec
pop
push
or
lahf
pop
adc
dec
stc
xor
cmp
es
xor
bound
adc
push
cmp
loope
(bad)
xor
push
stos
mov
dec
data16
dec
mov
rcl
sub
xlat
sar
sahf
mov
std
sub
ds
push
add
sti
mov
inc
fld
or
cld
dec
jne
add
call
pop
rcl
es
sbb
pusha
outs
aaa
jg
xchg
ss
xchg
mov
push
mov
push
dec
dec
xor
in
sub
mov
into
cmps
or
cmp
in
or
dec
mov
sub
cwde
mov
mov
add
jne
pop
mov
iret
imul
ins
repnz
fadd
xor
pop
fsub
call
pop
sbb
add
ficom
adc
xchg
add
hlt
popf
and
mul
mov
nop
shl
dec
cli
das
iret
fistp
call
outs
cmp
jg
mov
cmp
and
sub
imul
push
push
xor
pop
fwait
push
xor
int
push
bound
fld
ds
jg
leave
(bad)
adc
mov
and
jbe
(bad)
jg
mov
repnz
xor
cmp
or
mov
xor
xchg
mul
leave
cmp
mov
bound
and
jmp
adc
sub
xchg
pop
push
mov
inc
adc
ret
retf
lock
les
enter
mov
fadd
add
lds
ficom
addr16
es
(bad)
ds
das
mov
enter
fbstp
xchg
mov
xchg
movs
and
(bad)
(bad)
fimul
mov
adc
xchg
add
imul
js
popa
add
dec
ficom
cli
dec
inc
push
rcr
arpl
jmp
inc
cmp
add
sub
push
push
mov
dec
push
push
xor
push
int
pop
stos
in
mov
js
jbe
or
mov
ficomp
or
test
mov
pop
pop
adc
cmp
inc
scas
stos
and
and
push
push
pop
xchg
inc
ret
add
sub
iret
push
add
xor
cmovs
fdivr
jl
and
cmps
mov
bound
mov
aad
retf
or
push
xor
popf
mov
mov
and
repz
adc
xor
cmp
push
cmps
sub
in
and
loop
and
leave
mov
xor
ficom
lock
stc
sar
xchg
jb
outs
(bad)
mov
cmp
scas
outs
fdiv
cwde
mov
jno
sub
dec
movs
loop
clc
add
hlt
out
adc
mov
aad
(bad)
mov
in
dec
outs
aaa
push
shld
stos
sti
mov
mov
cmp
hlt
sub
daa
mov
call
jp
enter
add
mov
mov
lahf
push
mov
ret
repnz
push
in
pop
in
(bad)
repnz
push
xchg
xchg
pop
cmp
and
xlat
nop
sub
data16
mov
popa
div
retf
lods
rcl
xchg
pop
sbb
mov
inc
sub
test
enter
loop
adc
xchg
sbb
sub
adc
add
xchg
fist
cwde
or
loop
outs
arpl
inc
inc
dec
data16
cmp
jbe
add
imul
mov
xlat
(bad)
jmp
das
std
xor
push
jle
xchg
fs
sbb
cli
mov
fdivrp
outs
or
dec
test
jp
outs
(bad)
mov
xchg
mov
imul
out
int
(bad)
or
pop
icebp
popf
ror
mov
add
imul
out
(bad)
outs
lds
out
shl
stc
std
(bad)
(bad)
adc
fisttp
cld
in
sbb
js
das
jmp
cmps
cld
scas
xchg
push
stc
jge
jno
adc
jl
fcomip
repnz
and
cmp
jo
jno
pop
sub
enter
call
mov
(bad)
popf
xchg
retf
(bad)
mov
inc
lods
pop
stc
xor
outs
mov
ret
mov
(bad)
scas
or
scas
jnp
cld
popa
int
pop
imul
jmp
clc
sti
jg
in
repz
push
or
jmp
sub
adc
loope
sub
xchg
push
enter
inc
mov
dec
scas
mov
repnz
xlat
aam
test
jge
std
shl
loope
jo
mov
sub
xor
out
and
sbb
xor
inc
or
fisubr
cmp
imul
scas
(bad)
lods
jne
test
stos
loop
stos
inc
add
mov
cli
pop
xor
(bad)
aad
movs
xchg
jns
jnp
sbb
jge
imul
out
and
daa
cmp
rcl
mov
mov
shl
xchg
and
adc
fwait
call
stos
sti
adc
dec
cmp
mov
fwait
mov
rol
lods
mov
pop
imul
xor
out
pop
aam
pop
(bad)
xchg
sbb
fst
mov
push
sub
outs
ds
and
jp
aad
mov
xchg
add
icebp
dec
adc
cmc
push
shr
rcl
in
or
inc
outs
and
mov
sub
stos
jae
xlat
push
pusha
scas
cmps
inc
add
jle
add
outs
sub
movs
adc
not
push
out
pop
dec
jae
scas
mov
mov
fcom
loop
ins
mov
adc
shl
iret
jae
or
inc
or
test
(bad)
mov
mov
fstp
mov
fmul
inc
es
out
xchg
imul
movs
movs
shr
mov
mov
ja
out
aam
mov
scas
out
(bad)
gs
push
std
pop
repnz
cmps
in
fild
pop
push
push
mov
dec
xchg
mov
out
and
pop
test
mov
push
daa
int3
push
add
and
or
std
lea
mov
sub
and
cmp
fisubr
out
xor
cli
loop
lea
movs
cmp
jno
sar
test
in
pop
fmul
and
jg
outs
xchg
xchg
inc
sub
push
push
ins
pop
push
test
xchg
fwait
stos
push
xchg
cmp
dec
out
jae
(bad)
mov
dec
aad
mov
jb
stc
rol
push
adc
push
mov
test
xor
push
imul
sub
sub
mov
not
pusha
xchg
pop
pusha
das
lock
ins
and
test
jmp
xchg
add
jmp
out
test
icebp
adc
pop
adc
dec
loopne
fsubr
mov
pop
xor
jmp
mov
add
mov
dec
and
push
inc
mov
mov
or
push
xor
dec
das
cmp
xchg
cld
push
repz
icebp
pushf
or
cld
mov
xchg
shl
add
add
and
lock
xor
pop
inc
mov
call
pop
sub
push
add
sti
jbe
push
or
push
das
and
add
xor
xchg
sbb
push
retf
mov
push
adc
jge
pop
cdq
xlat
add
lahf
push
mov
sub
pushf
popf
int3
inc
test
mov
adc
std
cwde
fwait
pop
xor
cmp
in
lods
retf
xor
xchg
jne
adc
mov
sub
les
jp
push
leave
cmp
push
add
retf
lahf
fwait
(bad)
jmp
loopne
clc
cdq
adc
call
mov
lds
cld
test
dec
add
retf
add
test
and
adc
inc
adc
inc
push
je
ds
(bad)
out
aad
push
cld
ja
jecxz
and
push
xor
and
mov
dec
or
scas
pop
mov
in
sub
lds
mov
imul
out
push
and
sub
loope
aas
ss
iret
cmps
jecxz
stos
jle
ins
ret
cmp
call
jo
adc
jmp
fcomi
int
sub
hlt
add
cld
or
loope
outs
dec
loope
call
or
push
ja
rol
hlt
loopne
(bad)
popf
clc
fnstenv
(bad)
in
add
xchg
loopne
mov
jecxz
mov
add
and
pop
imul
or
add
jmp
stos
push
test
mov
repnz
jo
lahf
les
dec
push
outs
mov
(bad)
in
adc
jecxz
pop
jmp
mov
inc
push
jno
or
outs
(bad)
loope
(bad)
jecxz
jg
test
cli
ret
and
out
test
adc
mov
sub
push
xchg
rcl
xchg
adc
retf
nop
pop
push
int3
out
xchg
xor
loopne
lds
add
sub
movs
xor
sub
test
in
in
pop
mov
retf
sti
jo
fadd
mov
out
xor
pmaddwd
(bad)
xor
les
push
pop
sbb
sub
mov
test
retf
lea
lea
(bad)
nop
or
lock
rcl
fsub
repz
enter
jo
rcl
jle
ds
cmp
(bad)
movs
and
test
ins
sbb
lea
jmp
push
les
movs
clc
xchg
arpl
cmc
adc
mov
scas
adc
movs
imul
call
(bad)
jne
popf
loopne
(bad)
jmp
mov
cmp
push
xchg
hlt
add
test
jge
pop
xor
inc
add
stos
lahf
scas
das
ins
out
mov
sub
mov
push
mov
inc
inc
inc
outs
jge
adc
dec
mov
ret
jo
xor
out
iret
arpl
in
pmulhw
cmps
out
std
cmp
mov
cli
(bad)
int3
fidivr
inc
lds
pop
ror
mov
pop
jb
fstp
fdivrp
add
pop
je
or
cwde
cdq
sbb
(bad)
std
mov
movs
les
ret
inc
(bad)
jecxz
jp
pop
inc
repnz
imul
pandn
cmp
imul
push
enter
icebp
hlt
pop
cmp
add
cmc
das
mov
mov
xchg
fisubr
(bad)
xchg
xchg
cld
movs
cli
adc
scas
lahf
movs
movs
movs
mov
in
xchg
pushf
pop
pushf
sbb
mov
sub
arpl
push
jmp
jo
mov
sbb
les
or
leave
cs
call
adc
sub
cmp
push
in
mov
sbb
or
jmp
outs
aaa
add
mov
cmp
ret
call
arpl
xlat
out
sub
xor
in
mov
mov
sub
pop
and
sbb
mov
xchg
xor
aaa
sti
movs
fiadd
test
mov
sub
push
jle
daa
jne
sar
lea
rol
pop
pop
fild
out
and
xchg
xchg
cmc
push
mov
test
repnz
lea
add
sbb
add
mov
add
adc
jae
inc
sbb
xchg
xor
jns
and
(bad)
push
stos
mov
push
inc
add
dec
dec
inc
loopne
xchg
out
shr
movs
mov
repz
retf
or
jb
in
in
fwait
dec
xor
or
mov
daa
ret
hlt
lock
es
dec
dec
mov
loop
mov
mov
mov
pop
mov
mov
jl
mov
stos
jp
and
mov
(bad)
fistp
cmp
enter
mov
jp
jae
bound
add
sub
aad
mov
rol
xchg
sub
mov
xor
loopne
cmc
xchg
sbb
push
sub
push
js
and
js
loop
fcomp
push
icebp
movs
sbb
scas
ret
in
cmp
push
mov
sub
rcr
push
inc
xchg
push
inc
push
pop
(bad)
popa
js
xchg
add
xchg
arpl
adc
and
js
adc
jae
ffree
lds
call
pusha
push
pop
pusha
xchg
fs
jne
mov
(bad)
cs
ins
sub
test
popa
push
sahf
mov
(bad)
sar
sub
sub
xchg
dec
adc
push
call
in
out
xor
and
ror
aam
pop
jecxz
out
push
loope
repz
js
xchg
inc
pop
jge
test
pop
shr
jno
cmp
fdivr
(bad)
push
lods
jge
sbb
(bad)
pop
loopne
jp
cmc
popf
cs
push
add
and
add
push
jno
cmp
(bad)
or
cmps
ins
sbb
dec
pop
sar
icebp
sti
cmp
xchg
add
lods
sbb
jg
pop
cld
bound
clc
cli
and
jg
add
xchg
add
cmc
std
inc
mov
adc
aaa
loopne
mov
add
scas
or
xor
cmc
(bad)
adc
mov
inc
call
mov
adc
ins
adc
lock
jno
jb
outs
pop
lea
dec
mov
jns
xchg
xor
loopne
out
pop
test
(bad)
and
jmp
xchg
xchg
add
mov
jns
or
add
in
mov
int3
not
(bad)
out
rep
and
cmp
or
add
fdiv
aas
dec
(bad)
add
and
jnp
or
jbe
fwait
sub
push
and
and
aad
push
xor
out
mov
add
in
add
lahf
pop
pop
(bad)
xchg
xchg
xchg
std
out
shl
(bad)
call
out
mov
mov
add
mov
sub
nop
pop
arpl
aam
inc
mov
in
or
retf
jmp
loop
iret
sbb
nop
rcl
and
xchg
pushf
mov
push
out
inc
jnp
pop
cmc
pushf
pop
dec
dec
xor
dec
sub
sub
loop
push
out
add
test
or
xchg
dec
xor
mov
add
xor
push
or
mov
lahf
jg
mov
mov
cmp
outs
dec
out
push
jmp
inc
sar
js
retf
pop
pop
push
mov
hlt
test
(bad)
mov
sbb
in
imul
mov
test
mov
fadd
daa
(bad)
popa
jle
sbb
mov
and
ins
or
div
inc
jg
cmp
dec
jmp
jp
dec
add
mov
addr16
ins
jg
jle
cmc
aad
push
xor
push
in
push
add
add
pop
cmps
lods
xchg
scas
cs
repnz
sbb
aad
js
leave
inc
or
cmp
les
imul
push
add
push
pop
fcomp
mov
sbb
arpl
sbb
out
cli
loop
(bad)
fild
inc
cvtpi2ps
rol
jae
jle
mov
or
pusha
xor
add
mov
push
addr16
sar
add
adc
outs
stos
int
pop
sub
push
data16
pop
lds
(bad)
rol
outs
dec
dec
adc
leave
mov
adc
or
ja
lock
jmp
add
lahf
ins
add
mov
fld
mov
scas
aad
enter
mov
jg
cmc
in
ins
or
retf
das
add
push
adc
add
ins
jmp
and
sub
add
push
cmps
lods
xchg
out
mov
jns
xchg
cmc
jmp
lahf
test
dec
dec
es
(bad)
jecxz
adc
push
shl
and
dec
dec
jns
sub
cmp
mov
stos
iret
das
scas
xor
mov
jbe
idiv
add
add
push
fwait
add
cmp
cld
ja
test
bnd
je
je
ja
add
adc
test
inc
ins
call
fsubr
gs
adc
stos
xor
pop
and
mov
adc
fadd
mov
mov
mov
test
mov
pop
imul
fisub
jno
fld
jmp
outs
add
daa
fwait
xor
jle
dec
ja
add
xor
mov
push
dec
adc
jne
sti
xchg
cs
and
xchg
sub
and
add
sub
lea
outs
jecxz
pop
cmps
and
adc
inc
mov
xchg
lods
nop
sub
or
icebp
and
test
add
jle
or
pusha
mov
push
push
push
cmp
lock
dec
ret
sub
test
inc
xchg
sbb
add
sub
or
icebp
mov
cmc
int
mov
call
(bad)
sahf
and
clc
fstp
push
loopne
retf
cmp
hlt
xchg
pop
jg
cs
loopne
aad
clc
mov
push
jl
mov
(bad)
fldlg2
(bad)
mov
and
fdivr
fdivr
adc
cmps
cmps
sub
jecxz
pop
sub
stos
mov
pop
cmp
sbb
push
(bad)
addr16
sub
mov
mov
loopne
dec
xor
xchg
xchg
daa
and
(bad)
pusha
jl
pop
add
clc
js
(bad)
mov
push
call
repz
cs
xchg
(bad)
cmp
cmc
sbb
mov
hlt
scas
clc
loopne
fidiv
pop
pop
fild
add
arpl
sbb
pop
in
mov
pop
in
add
mov
xor
mov
(bad)
mov
adc
test
bound
add
stc
mov
jnp
stc
cdq
ret
rol
out
in
sar
xchg
push
push
stc
fsub
add
popf
cmp
arpl
loope
test
fsub
movs
aam
pop
div
shl
pushf
je
dec
or
pop
xor
icebp
xor
popa
cmp
cmp
jge
sub
or
inc
rcl
fild
lock
movs
(bad)
gs
outs
retf
mov
and
fmul
ja
jmp
xlat
scas
jge
test
daa
shl
sbb
sar
xchg
aam
push
popf
push
or
repnz
fwait
push
pop
pop
sub
mov
sbb
stc
pop
sbb
aaa
clc
test
sbb
mov
mov
ja
dec
cmc
icebp
mov
es
sahf
bound
idiv
push
lock
mov
addr16
xor
loop
loopne
xchg
fcmove
xchg
jnp
cmp
add
push
adc
xchg
dec
mov
mov
adc
push
(bad)
inc
pusha
dec
mov
cmp
push
pop
out
adc
xchg
imul
jnp
mov
dec
icebp
adc
mov
idiv
jne
aad
clc
dec
arpl
inc
fbld
lds
mov
dec
dec
inc
fs
mov
sub
test
sahf
push
(bad)
cmps
(bad)
aas
rcr
xchg
adc
xor
jae
push
jmp
(bad)
mov
hlt
lock
xchg
mov
mov
movs
test
mov
sub
xchg
ss
fidivr
and
aad
jle
inc
pop
test
dec
shl
nop
loop
mov
retf
retf
mov
outs
clc
in
icebp
fistp
jbe
scas
das
mov
lock
xor
ret
fsubr
in
add
xor
xchg
mov
xor
movs
sbb
sub
inc
or
or
and
(bad)
dec
pusha
dec
inc
push
xchg
push
xlat
(bad)
mov
test
xchg
or
adc
jmp
sbb
mov
test
pop
or
fs
ins
pop
in
or
clc
mov
call
(bad)
xlat
mov
fs
aad
out
cmp
aas
fwait
xchg
ret
xchg
sahf
cmp
cmp
dec
cmp
lods
leave
inc
cmp
shl
fidiv
outs
fwait
add
dec
or
mov
inc
jnp
outs
mov
retf
cmp
push
xchg
pop
lea
xchg
push
sbb
jo
inc
push
hlt
psubusb
sbb
leave
stos
scas
mov
add
aas
pop
jecxz
dec
cld
ds
in
xor
mov
out
dec
movs
mov
pop
out
inc
or
push
dec
test
mov
fwait
inc
sbb
sbb
xlat
and
fistp
push
idiv
lods
and
outs
shl
adc
ja
pop
inc
xor
(bad)
cmp
cmp
dec
and
or
adc
jge
in
dec
jp
ins
in
adc
mov
sub
sub
icebp
adc
adc
mov
mov
xor
arpl
or
mov
sbb
cmp
aad
cmp
or
cs
add
dec
fnstcw
cmps
inc
push
mov
punpckhdq
mov
or
pop
mov
sbb
iret
mov
xor
aas
add
push
aam
cmp
aad
dec
inc
sbb
movs
into
lea
push
arpl
adc
xchg
pop
cwde
outs
ret
or
pop
pop
mov
cmp
(bad)
fstp
mov
xor
imul
adc
call
xlat
pop
or
stc
xchg
arpl
or
jl
push
imul
js
fwait
adc
mov
addr16
shl
cmc
jmp
or
ret
and
xor
fcomp
(bad)
pop
push
add
aas
dec
add
cmc
inc
jecxz
pmaddwd
jmp
popa
loopne
retf
mov
jecxz
pop
cs
enter
dec
mov
pop
sbb
or
jnp
xor
add
retf
jo
cmp
das
mov
lds
lods
(bad)
xchg
pop
lods
bnd
push
(bad)
fiadd
retf
mov
das
sub
arpl
add
jp
push
cmp
pop
mov
push
xor
pop
and
inc
lds
and
pop
xchg
jmp
int3
movs
or
inc
mov
pop
dec
jb
das
pop
xor
push
pop
push
inc
mov
movs
dec
mov
xchg
out
inc
and
and
test
jo
mov
fs
jecxz
add
cmp
or
test
sbb
je
inc
dec
pop
add
jge
xchg
sbb
jl
adc
xchg
xchg
rcr
fldenv
add
lea
pop
and
pop
rcl
xchg
rol
cmp
mov
aas
mov
daa
mov
out
sbb
les
pop
pop
or
sub
sahf
dec
or
sub
push
fidivr
dec
push
mov
push
jns
push
shl
cmps
shr
cmp
fisttp
xor
out
pop
nop
cdq
adc
add
sub
adc
(bad)
mov
mov
sub
sbb
test
pusha
mov
adc
push
pop
pop
mov
adc
dec
jns
out
add
lds
jns
ins
bound
loop
jnp
add
mov
sti
mov
jmp
stos
hlt
add
int3
or
std
xor
adc
xchg
popf
lods
sbb
fst
dec
stos
jge
mov
mul
sti
mov
or
pusha
bound
repz
pop
mov
mov
shl
(bad)
loop
sbb
add
mov
mov
outs
sub
inc
cmp
adc
mov
es
mov
jmp
stos
push
inc
adc
repnz
add
jbe
pop
mov
mov
mov
add
mov
mov
jmp
mov
push
test
push
inc
push
jns
sbb
and
inc
xchg
mov
xor
adc
enter
push
stc
jl
mov
push
lock
out
jg
dec
jmp
fiadd
lahf
call
xchg
aam
and
push
imul
lds
idiv
sti
into
popf
or
sar
push
dec
imul
imul
mov
pop
jl
sbb
push
cmp
jae
push
(bad)
popa
loope
retf
cdq
std
jne
jnp
lock
mov
retf
and
pop
movs
mov
mov
xor
imul
ins
and
jbe
ret
and
stc
sbb
aad
mov
mov
adc
(bad)
push
rcr
push
mov
jle
out
rcl
or
or
push
push
dec
add
or
jno
sbb
into
mov
and
and
mov
test
mov
call
jmp
fsubr
jmp
enter
add
or
or
imul
(bad)
cmp
aad
xlat
push
dec
mov
repnz
sub
(bad)
xor
jno
rol
nop
les
pop
mov
pop
pusha
cmp
sub
repz
jl
test
out
jbe
jl
movs
jmp
or
push
xor
inc
and
push
mov
jmp
hlt
pop
sub
cmc
dec
push
pop
bound
stos
pop
xchg
sbb
mov
in
movs
adc
js
mov
std
xchg
xchg
retf
push
popa
and
int3
jne
dec
mov
pop
add
mov
cld
push
mov
xor
mov
popa
je
push
xor
and
popf
fdivr
xchg
mov
aam
jb
mov
cld
into
sub
sub
cmps
retf
outs
inc
pop
jno
retf
adc
test
es
mov
cdq
pop
inc
push
ins
or
dec
dec
xor
cmp
(bad)
stos
ret
cdq
sbb
out
jbe
popa
iret
sahf
data16
in
outs
shr
jbe
scas
mov
popa
test
xor
inc
adc
mov
sbb
cmps
dec
adc
pop
jle
cs
mov
mov
mov
in
pop
jg
add
mov
jecxz
dec
call
and
lods
add
jle
push
clc
in
or
in
fwait
push
adc
and
xchg
mov
xor
lahf
pop
(bad)
sti
loope
jmp
add
dec
lahf
call
jb
or
push
lods
std
std
add
aas
pushf
(bad)
xchg
push
xor
shl
xor
loopne
pop
imul
int3
inc
arpl
pop
push
(bad)
pop
js
aaa
add
mul
cmp
jmp
dec
popa
std
(bad)
push
pop
mov
out
lds
gs
scas
or
call
mov
and
ret
push
fadd
jnp
dec
mov
pop
add
aam
(bad)
rcl
mov
sub
sti
mov
xor
ret
das
and
xchg
push
lods
dec
mov
xchg
sub
xchg
lods
and
(bad)
cmp
lock
stc
fidivr
(bad)
pop
mov
outs
and
sub
push
scas
cmp
xchg
push
repnz
push
push
push
int
stos
int3
sti
jb
push
movs
cmps
cmps
repz
enter
daa
inc
jl
jns
neg
pop
(bad)
xor
aas
clc
and
call
fdivp
dec
(bad)
jge
fpatan
lahf
pop
fld
(bad)
(bad)
mov
lods
int
xchg
in
(bad)
outs
mov
out
js
test
cmps
inc
pop
sbb
or
cli
ds
mov
adc
inc
sub
mov
leave
cmp
arpl
sub
xor
out
inc
mov
or
out
das
out
jo
and
pop
out
mov
add
jge
adc
push
sbb
fdivr
ja
cli
or
mov
test
dec
aas
cs
push
cli
mov
xchg
stos
xchg
inc
fidivr
clc
pop
mov
pop
cld
mov
ficom
gs
push
out
or
mov
pop
pop
inc
jb
mov
repz
jp
cmp
push
inc
add
sbb
pop
retf
call
ds
jg
fxch
loopne
xchg
call
or
cmp
pop
fimul
cli
icebp
icebp
add
pop
rol
pop
xchg
std
int3
stc
adc
xchg
xchg
cwde
mov
mov
cmp
lods
and
sub
stos
cwde
test
push
xchg
shl
cmc
mov
mov
ficom
cli
retf
in
lahf
cdq
xchg
xchg
mov
or
fs
xor
cli
lods
ins
ficomp
add
loop
xchg
shr
rol
lock
xchg
sbb
push
fnstenv
xchg
lock
ja
mov
(bad)
sti
dec
(bad)
fsubp
loope
into
ins
cwde
cdq
push
pop
in
pop
push
or
dec
(bad)
bound
inc
xor
cdq
mov
mov
mov
sbb
fisubr
xor
mov
dec
xchg
xor
inc
popa
pop
xchg
repz
pop
cmp
adc
push
test
adc
mov
jg
cmp
lea
cdq
mov
or
mov
inc
inc
add
lock
(bad)
repz
pop
outs
aaa
mov
mov
push
es
dec
gs
enter
inc
push
imul
jge
cmps
rcl
pop
dec
jo
inc
dec
lods
test
jp
add
sbb
or
loopne
lds
in
stos
mov
aaa
mov
(bad)
mov
mov
ss
dec
cmp
or
cdq
(bad)
adc
enter
mov
test
test
xchg
mov
xchg
ret
stos
bound
push
ficom
call
xor
mov
in
sbb
dec
pop
xor
fwait
aas
popf
jg
hlt
rcl
in
sbb
ret
push
cmp
add
(bad)
push
call
pop
push
cmp
dec
jg
jl
and
jmp
or
mov
push
sbb
inc
fdivr
pop
mov
jo
xor
nop
ror
adc
imul
sub
fisub
add
stos
outs
inc
jg
or
hlt
mov
pop
lods
cmp
add
xchg
shl
sub
sti
mov
fbstp
imul
sbb
inc
jg
bnd
loope
ror
jne
cmp
xchg
or
leave
jl
sbb
and
(bad)
cmp
inc
js
ss
test
nop
fistp
stos
retf
imul
jp
xor
push
sub
ss
imul
std
sti
cmp
out
fcmovnbe
into
jecxz
rcr
adc
out
mov
fmul
lea
mov
push
cmc
cmc
inc
xor
xor
add
jns
jecxz
(bad)
push
cmp
jne
cs
(bad)
add
imul
les
(bad)
stos
aas
sub
iret
mov
ror
cld
jl
clc
jmp
adc
syscall
loopne
fstp
mov
jp
xor
mov
loope
adc
(bad)
fild
lea
push
loopne
and
jg
lea
sbb
push
add
mov
ret
pusha
lods
shld
push
cld
push
sbb
call
loop
push
mov
add
sub
mul
mov
cmp
jno
xor
pop
iret
add
popa
sbb
sbb
fisub
jl
sti
sar
sub
adc
mov
shl
lock
mov
shl
ret
adc
push
mov
add
push
add
push
lahf
mov
or
(bad)
out
and
push
jmp
and
adc
push
inc
lock
xchg
push
jg
jmp
push
cmp
fsubr
outs
lahf
xchg
dec
loope
sbb
daa
lock
and
push
ret
punpcklbw
mov
cwde
pushf
pop
sar
cmp
jg
cmp
adc
sub
in
lock
add
sub
jbe
jae
shl
int
jo
dec
int3
(bad)
stos
loop
mov
xor
(bad)
adc
jl
idiv
ins
lods
inc
add
in
dec
inc
arpl
in
ins
test
push
sbb
pop
or
pushf
cmps
gs
sbb
mov
mov
sub
add
mov
mov
std
shl
sub
inc
lds
or
pop
and
adc
adc
and
stos
mov
xor
les
pop
or
pop
inc
lds
shr
xchg
and
dec
push
pop
push
dec
and
mov
cs
pop
pop
jnp
jbe
pop
inc
(bad)
call
mov
sub
data16
stos
dec
lock
fdivp
(bad)
mul
jge
jp
push
pop
fmul
mov
into
cmp
sub
out
mov
cmps
pop
jns
dec
cwde
dec
je
iret
pop
outs
jg
pop
xchg
faddp
imul
push
stos
adc
push
pop
pop
retf
jnp
dec
mov
cmps
and
xchg
adc
aas
iret
test
and
xor
add
mov
popa
stos
ins
mov
adc
jb
retf
std
das
sti
mov
mov
push
pop
test
dec
dec
stc
or
call
out
sbb
scas
jno
pop
fild
iret
int
fisub
jle
ret
in
int3
in
mov
lock
adc
lea
(bad)
mov
test
inc
sub
or
sbb
ins
in
mov
xchg
xchg
inc
test
or
cmps
sub
call
or
(bad)
int
mov
mov
mul
adc
sbb
push
retf
iret
sbb
scas
jg
sbb
in
and
jge
adc
or
test
je
push
jnp
fild
pop
retf
gs
and
inc
jns
test
mov
mov
ret
mov
test
xor
mov
add
push
ret
mov
jae
inc
push
call
dec
test
push
ror
in
adc
sub
cwde
or
loop
sahf
popf
adc
out
in
mov
pusha
add
xor
sbb
jbe
dec
cmp
push
pushf
test
pop
cmp
pop
ja
stc
fwait
push
cmc
add
fwait
popa
and
push
ins
push
fwait
lahf
and
xchg
dec
mov
(bad)
dec
out
lea
and
inc
bound
ja
cs
pop
cdq
sbb
(bad)
pop
or
fdivp
mov
xchg
les
jmp
add
jbe
lea
or
xchg
add
mov
bound
scas
adc
in
xor
call
push
lds
add
cmc
loope
test
rcl
jge
cmp
add
xchg
aaa
and
ins
loope
into
ss
std
add
prefetch
sar
xchg
xchg
mov
neg
(bad)
mul
add
push
bound
lds
call
sbb
cmp
cwde
jecxz
and
sbb
jbe
fld
adc
int3
lock
xor
mov
jne
mov
sbb
and
adc
test
(bad)
clc
mov
sar
and
icebp
out
in
stc
jae
js
mov
pop
(bad)
jle
mov
pavgb
jg
loopne
pcmpgtd
cmps
pop
ja
adc
jno
aam
sbb
add
adc
pop
cmp
clc
dec
fld
jnp
push
scas
jl
pop
mov
jb
xchg
lahf
ins
(bad)
or
push
cld
mov
jno
(bad)
and
jge
mov
pop
(bad)
jmp
push
sbb
aas
inc
dec
(bad)
lahf
(bad)
xchg
cmc
lock
jp
jmp
mov
dec
(bad)
cli
lea
lods
(bad)
adc
sub
xchg
dec
je
rcl
pop
lods
push
shl
dec
or
push
xchg
xchg
sahf
inc
inc
lods
xchg
scas
jl
inc
pop
and
or
jns
ja
adc
lahf
not
retf
(bad)
push
xor
mov
fdiv
outs
xchg
push
in
xlat
push
pop
out
jno
out
jb
call
fnstenv
cmp
inc
cmp
mov
inc
push
cmps
xor
jo
mov
in
fisttp
(bad)
mov
addr16
in
adc
mov
mov
sbb
add
sti
xchg
out
inc
mov
or
jp
sti
cmps
aam
loop
inc
adc
jl
add
pop
ins
jne
loopne
push
add
call
cmp
cmps
jns
imul
ret
inc
sbb
pop
test
sbb
enter
(bad)
xchg
mov
in
cmps
fmul
mov
pusha
test
cmp
xor
(bad)
les
bound
add
retf
(bad)
xchg
loop
jo
les
mov
push
rcr
cmc
cwde
xor
test
adc
adc
scas
imul
scas
pusha
ds
repnz
div
test
add
xor
mov
les
mov
(bad)
and
push
movs
stc
call
inc
xor
loope
mov
pop
in
fcom
pop
enter
mov
imul
(bad)
jb
out
dec
xor
jb
mov
mov
fisttp
push
aam
pop
sar
(bad)
dec
and
adc
sub
inc
fist
loope
push
or
xchg
jecxz
dec
test
mov
das
es
frstor
add
retf
xlat
sub
mov
cld
fcmovnu
js
sub
mov
mov
lea
call
mov
sub
icebp
sub
pop
in
(bad)
movs
loop
(bad)
mov
test
gs
cmps
movs
push
(bad)
ja
(bad)
cmp
push
inc
(bad)
mov
fstp
pop
sbb
pop
lea
popf
in
std
mov
jno
inc
add
in
and
pop
sti
test
inc
adc
inc
je
data16
loope
mov
pop
repnz
dec
aad
movs
cmps
cmp
jg
shr
cmps
nop
cmp
scas
loopne
lods
mov
fidiv
arpl
in
adc
aaa
sub
data16
sar
push
adc
in
jbe
mov
retf
pusha
in
jbe
mov
add
dec
or
imul
mov
rcr
push
test
mov
fidivr
int3
mul
clc
icebp
adc
add
arpl
add
cmp
bound
les
lds
aad
inc
inc
pusha
shl
jnp
add
sar
xchg
xlat
ret
das
pusha
pop
inc
ret
std
or
or
cmp
(bad)
sub
push
pop
call
gs
inc
loopne
(bad)
xor
cwde
lahf
add
loop
ds
nop
dec
adc
push
pop
outs
mov
fbstp
addr16
mov
sub
push
int3
mov
inc
xchg
andnps
enter
cdq
xchg
mov
lea
aaa
mov
xchg
adc
test
lock
out
mov
jmp
add
(bad)
out
xchg
xchg
out
sub
(bad)
jmp
shl
dec
das
fisttp
add
aad
and
mov
call
dec
aam
jp
ror
jmp
adc
dec
mov
out
in
and
ja
adc
xor
sahf
mov
int3
das
je
xor
daa
stos
fwait
mov
mov
and
bound
(bad)
and
pop
out
inc
pop
push
ds
mov
rcr
adc
pop
adc
pop
push
mov
shl
mov
or
femms
pusha
inc
(bad)
jecxz
jge
sbb
fmul
mov
cmps
clc
xor
cmp
addr16
hlt
or
cmp
sub
jle
mov
adc
sub
stos
scas
mov
int
mov
cmc
out
xor
cli
mov
sbb
lahf
imul
cmps
xor
jmp
jp
adc
add
cld
inc
and
shl
lds
sbb
jl
adc
pop
jl
outs
adc
(bad)
int3
outs
ret
cli
ins
sub
push
ins
mov
dec
leave
mov
aaa
test
in
jno
lods
pavgw
mov
jno
dec
mov
outs
mov
test
arpl
rcr
pop
mov
cmp
mov
shr
aaa
mov
ja
or
sub
sar
adc
in
push
xchg
inc
stos
scas
je
inc
push
fnstsw
cmp
xor
stc
xor
ja
scas
adc
push
ja
lahf
add
sti
sub
mov
push
stc
pop
ins
pop
sub
xchg
xchg
int
imul
inc
mov
rcl
ret
and
fmul
adc
dec
dec
movs
cmp
jnp
mov
idiv
repz
out
mov
mov
sahf
rcl
(bad)
sahf
sub
test
push
dec
lock
xor
retf
out
mov
dec
dec
movs
dec
fist
inc
inc
xchg
and
adc
dec
mov
dec
or
push
push
sbb
inc
or
adc
push
cld
push
or
and
inc
and
mov
rcl
scas
push
xchg
xchg
bound
ins
sbb
jne
inc
dec
or
loop
sbb
jae
push
inc
push
movs
lock
test
aam
popa
cmp
xchg
inc
mov
sbb
ds
adc
push
hlt
push
mul
bound
ror
xor
fwait
sahf
rol
sbb
push
and
inc
xchg
inc
(bad)
popa
mov
in
hlt
add
mov
add
push
sub
mov
mov
lods
stos
sub
dec
jl
outs
xor
adc
cmp
inc
jnp
ficomp
aam
xor
stos
inc
nop
cmp
ins
lods
xor
outs
push
and
fwait
dec
mov
jnp
leave
dec
xchg
push
rcl
out
stos
dec
mov
or
vmwrite
adc
outs
cmp
mov
add
cld
test
pop
and
inc
jb
test
xor
nop
xchg
out
inc
loopne
cli
ja
mov
xchg
push
jae
pop
hlt
cmc
cmc
mov
inc
in
jl
js
aad
nop
aaa
and
rcr
mov
push
inc
push
fadd
repz
sub
cdq
test
inc
mov
dec
add
xchg
(bad)
loopne
pop
push
test
aad
fdiv
imul
stc
scas
sub
fwait
jge
out
sbb
out
cli
loop
or
hlt
div
iret
jae
dec
shl
inc
(bad)
jmp
add
or
adc
push
or
ret
(bad)
lods
add
and
jo
cmps
and
(bad)
cmp
add
or
mov
jne
or
ficomp
cmp
jno
sub
fwait
and
push
push
xor
leave
in
mov
adc
or
adc
mov
cmp
loop
movs
stos
imul
std
fadd
dec
pop
mov
repz
(bad)
mov
push
inc
loopne
sbb
mov
mov
es
sbb
or
cmp
xchg
adc
or
popa
or
ins
fisub
sub
out
fdiv
int3
cmp
sub
aas
cmps
jle
outs
add
inc
test
out
xor
je
out
and
das
in
adc
push
sahf
cmp
aam
mov
pop
add
inc
adc
cmc
in
imul
jg
mov
sub
cmp
or
scas
jle
repnz
push
rol
cmp
and
leave
icebp
or
repz
mov
mov
sub
lea
and
adc
xor
outs
aas
cmp
mov
cld
inc
out
jg
push
(bad)
enter
iret
out
push
and
add
push
inc
test
das
lea
push
add
jb
(bad)
sbb
cdq
loope
cmc
jle
inc
cdq
adc
test
jmp
(bad)
mov
adc
push
stos
(bad)
loop
lahf
dec
adc
mov
xchg
pusha
ror
xchg
(bad)
xchg
sbb
retf
push
push
pop
pusha
and
ins
cmp
jne
lods
stos
mov
xchg
jae
mov
ds
pusha
jl
sbb
ins
pop
pop
jmp
repnz
add
(bad)
shl
add
dec
mov
xor
inc
xor
das
call
xchg
sbb
dec
or
mov
neg
adc
mov
jp
add
push
into
pop
add
mov
or
out
and
sub
sbb
test
lock
mov
test
lods
mov
(bad)
das
dec
pusha
std
sub
pop
cmp
mov
outs
(bad)
int
pop
pusha
cmp
xlat
cmps
and
repz
dec
test
push
cld
lock
mov
jo
dec
adc
push
sahf
pop
icebp
ror
sti
sub
and
adc
pop
sti
adc
scas
cmp
shl
(bad)
jo
inc
mov
fld
pop
(bad)
mov
jo
pop
repz
ret
dec
push
dec
pop
call
jmp
push
in
icebp
xor
loope
dec
push
jne
add
sahf
and
jle
test
out
int3
loop
loop
enter
fiadd
stos
adc
pop
add
test
sbb
push
arpl
push
mov
repnz
xchg
(bad)
ss
je
sub
xor
daa
inc
xor
cmp
or
outs
stos
stc
shl
les
loope
lock
pop
and
ds
in
xor
icebp
loopne
push
push
bound
das
cmps
es
je
xor
dec
(bad)
fiadd
push
gs
add
jb
xchg
xchg
xchg
cwde
mov
and
xchg
cmp
sar
xchg
mov
inc
stos
std
out
xor
cmc
in
mov
test
pop
jno
mov
pop
mov
adc
enter
xchg
dec
cmps
retf
mov
mov
bound
adc
loope
add
jbe
fs
out
les
ins
sub
fadd
ror
sbb
outs
and
fstp
xor
sbb
pop
or
sbb
fdivr
adc
shl
nop
dec
and
cmps
jae
jb
xchg
add
repz
adc
repz
lock
mov
mov
cmp
xchg
(bad)
mov
mov
test
sahf
js
pop
adc
mov
jmp
(bad)
dec
daa
pop
call
cs
jl
sub
mov
shr
push
les
ins
inc
jle
add
jmp
dec
loopne
fst
xchg
nop
outs
call
outs
adc
xchg
mov
dec
pop
(bad)
dec
retf
adc
fmul
aaa
in
leave
cmp
cmp
hlt
push
xor
inc
push
enter
sbb
and
adc
add
jp
call
mov
mov
ds
adc
inc
inc
adc
dec
and
dec
add
daa
dec
call
adc
ins
bound
mov
in
or
adc
xchg
pop
cmp
mov
(bad)
iret
(bad)
xchg
and
fmul
jmp
outs
aaa
pop
call
ins
xor
inc
loop
mov
shl
adc
push
jmp
fnsave
(bad)
fstp
mov
push
fimul
xchg
in
mov
bound
push
stos
and
dec
movs
xchg
pop
inc
imul
mov
push
ror
mov
or
xlat
push
xor
cs
dec
dec
or
dec
and
adc
pop
pop
push
fs
sbb
out
add
push
and
fcmovbe
pop
dec
loopne
(bad)
fdivr
or
js
test
mov
in
arpl
pop
or
call
jg
pop
mov
jb
pop
dec
adc
jg
lahf
in
cmp
data16
xchg
inc
xor
jge
in
sub
shr
cmc
leave
and
enter
dec
test
cmp
sub
jne
cld
in
(bad)
mov
jne
inc
mov
mov
mov
cmp
in
pop
add
mov
fidivr
mov
and
out
cmovno
aad
push
ins
add
cmp
rcr
pop
lds
inc
push
dec
and
call
dec
ja
adc
lds
outs
push
cmps
and
xchg
dec
aam
fdivr
aad
and
jne
push
scas
xor
les
repz
inc
push
dec
push
inc
mov
sbb
xor
cld
adc
mov
test
jmp
push
push
cmp
push
inc
and
pop
jno
push
cmp
jo
add
push
fnstsw
in
scas
inc
push
mov
sub
shl
pushf
lods
cs
pop
and
inc
cmp
xor
cmp
aam
js
mov
pop
call
cmp
sbb
mov
(bad)
daa
jo
mov
pop
fld
pop
jo
loopne
mov
aaa
mov
fidiv
pop
lea
adc
adc
hlt
xchg
adc
and
and
cli
mov
xlat
push
jno
stos
fwait
dec
mov
xlat
scas
aaa
loope
xlat
stos
jo
int
pop
jns
or
aad
loopne
sub
fcom
pop
stc
mov
mov
repz
ins
xor
mov
aas
adc
sti
push
fsubr
loop
pop
fimul
add
and
xchg
psubb
pop
dec
in
ror
test
iret
aas
inc
shl
and
sbb
xchg
(bad)
mul
xchg
fwait
mov
jmp
mov
jmp
(bad)
fisttp
mov
or
ret
jbe
mov
jmp
(bad)
inc
pusha
jmp
outs
test
cmp
in
inc
add
movs
mov
add
and
push
dec
and
pop
jmp
ins
push
adc
xchg
es
clc
push
mov
sbb
out
xor
repnz
push
nop
inc
add
mov
movs
loop
mov
xchg
fld
shl
mov
xor
js
xor
push
es
mul
aam
xor
jle
adc
lahf
ds
cmp
cmp
or
sti
adc
jnp
dec
sbb
ja
stos
xchg
xchg
mov
dec
dec
mov
test
push
add
sub
dec
(bad)
push
jns
pop
sti
(bad)
icebp
cwde
stc
cmp
pusha
inc
mov
in
mov
mov
dec
lea
retf
jae
dec
dec
inc
bound
mov
push
inc
or
fwait
inc
cmp
xor
mov
mov
xor
pop
cmps
ror
and
je
mov
lahf
mov
xor
enter
and
fstp
add
and
sub
popa
xchg
imul
push
pop
jo
out
sub
out
pop
les
pop
mov
pop
rol
sti
cmps
jb
add
or
dec
dec
jg
sub
imul
inc
mov
adc
retf
cmp
test
loop
mov
adc
(bad)
cld
sbb
dec
push
inc
dec
jp
fnstenv
repz
and
and
cli
call
adc
adc
push
cmp
add
fld
pop
push
and
jne
push
adc
or
mov
fs
ins
jl
cmc
mov
dec
mov
add
inc
std
popa
mov
fidivr
cmp
outs
jb
int
and
das
mov
pop
cmp
inc
sbb
mov
adc
out
cs
(bad)
and
dec
or
mov
ja
lods
rol
xor
leave
pushf
jp
push
add
pop
xchg
xchg
(bad)
movs
lods
daa
or
je
cwde
int
(bad)
push
jg
mov
xchg
lahf
aas
test
jmp
(bad)
ffree
outs
arpl
fisttp
mov
push
add
dec
jle
es
pop
xchg
fcomp
add
call
adc
add
nop
popf
cli
lock
std
dec
adc
cmp
push
push
dec
push
test
and
(bad)
pop
xor
sbb
xchg
dec
shl
stc
popf
xchg
xchg
popa
sub
mov
xchg
and
sbb
sub
sub
and
sub
inc
jg
adc
cmps
or
in
es
jnp
cmp
sub
xchg
repnz
jecxz
fld
adc
lock
and
inc
cmps
dec
gs
out
(bad)
clc
call
adc
js
and
cmps
loop
dec
or
push
jo
inc
inc
sbb
xchg
hlt
cmp
out
xchg
push
push
cdq
lea
mov
cmp
xchg
cld
je
xchg
adc
mov
ret
mov
add
jg
push
int
sub
and
adc
push
cdq
dec
ss
imul
sub
push
sbb
icebp
enter
shl
enter
adc
and
cmp
add
push
hlt
rcpps
cmc
aam
sub
and
iret
dec
ss
add
jg
fist
inc
dec
outs
aam
xchg
mov
mov
mov
add
sub
(bad)
mov
and
and
push
adc
dec
push
shl
dec
jne
cmp
add
push
or
sar
pop
dec
es
fwait
mov
mov
mov
rcl
push
mov
enter
dec
movs
xor
add
xchg
(bad)
jno
cmp
pop
mov
xor
sar
inc
in
(bad)
mov
jnp
or
add
arpl
icebp
xor
xor
mov
mov
push
(bad)
in
cs
dec
mov
mov
push
rol
push
dec
xor
adc
pop
popa
push
and
jb
outs
add
and
test
and
pop
out
add
out
push
test
stos
mov
std
mov
cli
inc
xor
repz
movs
mov
(bad)
fiadd
retf
scas
dec
in
(bad)
cli
pop
or
data16
dec
mov
mov
sub
cdq
pop
pop
jo
fimul
jecxz
daa
pop
ror
or
mov
adc
mov
mov
outs
out
ror
inc
cmc
lahf
(bad)
adc
shl
cwde
cwde
lahf
(bad)
call
daa
fidivr
sub
and
mov
mov
imul
test
in
lea
pop
sbb
mov
and
mov
test
dec
fst
xchg
inc
test
dec
xchg
movs
cli
or
xchg
add
xchg
mov
dec
pop
sbb
adc
(bad)
repz
mov
dec
or
les
jle
jmp
cmp
hlt
xor
enter
ds
push
jg
cmps
ds
js
test
sti
mov
call
xor
cmp
add
or
push
mov
cmp
daa
retf
push
jae
les
lds
jmp
mov
mov
adc
loopne
and
xor
movs
fldcw
into
mov
sub
out
loop
mov
mov
and
inc
pop
shr
pop
sbb
movs
mov
clc
and
cmp
icebp
adc
or
ins
push
inc
mov
add
jae
sub
mov
je
xchg
dec
xchg
sub
cmp
jecxz
repz
pop
pushf
and
sub
push
inc
mov
shr
jge
and
outs
add
mov
popa
push
ret
jae
sbb
xor
call
and
adc
xlat
(bad)
xchg
repz
mov
pop
fsubr
pushw
jns
pop
mov
cdq
cmps
dec
loop
mov
mov
lods
sub
mov
inc
clc
xchg
aas
sti
xor
lock
rcl
out
mov
mov
aaa
pusha
outs
jne
dec
test
jmp
mov
inc
sti
pushf
shr
mov
add
sub
and
jns
sbb
jecxz
jno
add
pop
std
daa
mov
inc
pop
jns
retf
retf
clc
pop
fidiv
loope
xchg
cmp
ds
adc
xor
add
jb
sub
xor
mov
dec
adc
ins
sti
sub
imul
dec
pop
or
sbb
fwait
scas
push
retf
rcl
xor
enter
jb
clc
jge
outs
arpl
fisttp
ret
push
nop
idiv
or
fdivr
fs
sub
add
(bad)
sub
inc
lods
daa
inc
movs
and
sbb
mov
mov
xchg
cdq
xchg
mov
cwde
xor
pop
xchg
pop
push
jmp
add
test
lods
leave
lahf
fbstp
mov
test
loopne
add
xor
dec
add
popf
sub
push
xchg
or
mov
add
push
movs
rol
mov
dec
sub
fwait
push
(bad)
cmc
add
pop
add
rol
jae
and
and
mov
inc
mov
mov
aaa
jg
pop
(bad)
in
movs
push
int
xchg
adc
gs
mov
add
add
movs
or
mov
and
scas
sbb
ins
or
fisttp
arpl
sub
lods
mov
push
popf
cmp
rcr
(bad)
fdivr
inc
mov
pushf
add
push
test
push
adc
rcl
mov
dec
xchg
test
hlt
ss
sub
call
and
jb
pop
push
pop
or
jbe
jb
daa
jns
pop
cmc
pushf
or
dec
inc
adc
and
pop
mov
movs
mov
fsub
mov
jecxz
test
rol
inc
(bad)
push
(bad)
fld
jle
add
sbb
cmp
jmp
sub
outs
jge
xchg
xchg
cwde
fucomi
std
xor
int
mov
adc
mov
xchg
xchg
in
xchg
dec
ins
adc
xor
(bad)
sbb
loopne
pop
sub
mov
rcr
(bad)
lods
and
retf
jle
xor
inc
sub
adc
into
jmp
mov
jne
sti
pusha
or
lahf
aad
inc
sub
jae
ja
cmps
data16
js
stc
test
mov
mov
add
xchg
fs
sub
inc
xchg
push
jecxz
imul
xor
cmp
push
pusha
fild
mov
sbb
mov
sar
jno
push
cmps
out
popf
ret
mov
jno
in
dec
lahf
call
test
hlt
push
xchg
and
cmp
test
retf
inc
pop
jne
es
cmp
(bad)
cmp
not
mov
popf
ins
sar
or
jno
sbb
and
xor
sbb
push
or
and
or
out
std
sar
xor
shl
mov
jnp
std
rcl
cs
pop
shl
pop
loopne
cmp
sub
stc
mov
pop
jle
jb
scas
lods
cli
loope
push
outs
in
mov
fild
xchg
lea
mul
js
popa
stos
dec
pop
jl
inc
loopne
pop
jecxz
cli
push
push
sti
addr16
(bad)
jge
mov
cli
outs
fidivr
xor
jmp
add
mov
(bad)
lods
cmp
inc
or
xrelease
pop
fld
sbb
test
fisubr
(bad)
mov
inc
xchg
les
mov
mov
mov
(bad)
rep
shl
loop
mov
in
out
out
cmp
add
sbb
daa
lea
lahf
dec
sub
pop
pop
push
pushf
(bad)
and
or
mov
and
add
aad
ins
xor
dec
mov
cmp
mov
aam
ins
fdivr
pop
cli
lock
jo
mov
add
hlt
adc
stos
jg
pop
mov
fdivr
adc
ds
or
std
jnp
ss
inc
and
cmp
mov
fst
cld
or
mov
retf
jbe
test
mov
int
jb
xchg
push
push
dec
popa
sbb
(bad)
push
aas
ja
mov
cli
pop
push
out
ins
xchg
cwde
or
push
(bad)
xchg
int
jge
add
ins
xchg
retf
xor
(bad)
jns
bound
xchg
repnz
popf
jmp
outs
cli
test
add
pop
movs
xchg
fadd
repnz
jbe
daa
add
cld
inc
add
xor
into
sahf
outs
add
(bad)
std
sbb
repz
mul
shl
(bad)
cld
loop
aam
xor
sbb
(bad)
(bad)
push
repz
push
adc
dec
or
je
add
repz
in
jmp
sbb
retf
fidivr
popa
scas
dec
shr
out
jmp
mov
dec
bound
fild
mov
xor
sub
rcr
ss
push
push
mov
push
movs
lds
clc
ins
cmp
mov
aam
sar
hlt
cmp
retf
add
inc
in
jmp
sbb
popa
xor
inc
js
lods
cdq
and
(bad)
pop
add
lock
cmp
mov
test
mov
ins
pop
and
pop
lea
inc
ins
jl
ins
cdq
test
cld
lods
mov
scas
mov
mov
stos
retf
in
jmp
out
lds
movs
xchg
pushf
jp
sbb
stos
mov
(bad)
dec
cmp
dec
dec
pop
mov
mov
xor
lods
sbb
icebp
fistp
jbe
scas
das
mov
mov
ins
repz
xchg
adc
push
shl
xor
push
retf
pop
sti
push
stos
dec
pop
push
dec
jo
xor
add
leave
cwde
lds
xchg
dec
push
xchg
dec
test
dec
xor
cmp
(bad)
add
mov
fimul
mov
adc
stos
xchg
fsub
adc
cli
outs
and
jno
xor
jp
daa
outs
sub
jmp
xchg
jno
sti
cmp
jns
ds
and
lahf
out
stos
add
jns
inc
stos
dec
jo
mov
and
stos
in
fs
loopne
in
popf
mov
push
leave
pop
imul
and
jmp
or
dec
add
lea
adc
pop
adc
(bad)
lock
sbb
inc
(bad)
or
fsub
mov
push
mov
call
jmp
adc
cmp
(bad)
inc
adc
mov
xor
fsub
add
fs
in
add
or
daa
jg
pop
add
out
adc
xchg
mov
jae
loope
and
sahf
popf
mov
and
sahf
inc
jecxz
inc
ins
inc
or
xchg
and
popa
push
out
push
ja
xchg
test
pop
addr16
sub
sub
lea
mov
push
or
jmp
pushf
movs
enter
cmp
push
repnz
add
js
cmps
inc
shl
mul
xor
and
enter
int
loopne
(bad)
dec
nop
mov
inc
and
jp
or
sub
mov
sbb
push
(bad)
jno
sbb
fild
sti
fwait
mov
inc
mov
inc
push
adc
sbb
mov
leave
or
es
imul
dec
mov
pop
mov
arpl
mov
xchg
add
loop
mov
int3
adc
popf
sahf
shl
or
lahf
lods
inc
push
popf
xchg
movs
sub
es
mov
call
add
mov
mov
sub
scas
mov
xor
cmp
stc
pop
pop
fidivr
sahf
adc
xor
fidivr
(bad)
mov
pop
mov
out
lock
cmp
ret
jbe
clc
out
clc
sar
cmp
test
outs
push
fiadd
adc
sbb
xor
ret
js
out
fidiv
mov
xor
cld
scas
mov
xlat
jno
imul
pusha
in
retf
push
adc
inc
jecxz
int
pop
and
lods
pop
fnstcw
push
std
dec
pusha
jo
lahf
fs
sbb
dec
xchg
push
dec
jge
cmps
shr
into
inc
pop
ins
sub
or
xlat
rol
ds
pop
sub
imul
repnz
inc
and
dec
js
in
pushf
jg
jne
mov
xor
fst
(bad)
adc
rcl
cmp
and
jne
lea
sahf
not
push
push
xchg
fucomi
enter
shufps
jmp
mov
aas
cld
mov
retf
clc
hlt
aas
jg
call
xor
pop
out
in
in
jmp
xor
add
mov
adc
shl
or
add
sub
(bad)
cmc
mov
mov
into
and
jno
push
enter
inc
lds
sbb
test
push
cmp
xchg
inc
lock
cld
inc
inc
ins
jmp
adc
push
dec
lods
(bad)
mov
push
scas
sub
ins
in
outs
test
push
out
aam
js
popa
sub
dec
cmps
loop
sbb
and
sub
jecxz
(bad)
mov
pusha
xchg
xlat
push
in
fld
sbb
xchg
ins
ins
inc
push
push
test
mov
call
(bad)
es
sahf
adc
ficom
add
out
jmp
sti
mov
pop
(bad)
sbb
push
ins
add
ror
repnz
pop
in
inc
addr16
push
in
mov
scas
push
or
xchg
lock
daa
jno
rcl
and
retf
loop
push
stc
xor
mov
bound
adc
cmc
adc
mov
lods
inc
inc
inc
and
and
cmp
jge
push
cmp
xchg
retf
retf
cmp
ss
outs
and
push
(bad)
lods
into
mov
leave
mov
and
push
adc
and
loope
inc
(bad)
aas
jl
test
fistp
mov
mov
out
add
jmp
xchg
xchg
sahf
cli
loopne
lahf
sbb
scas
mov
icebp
mov
out
dec
xor
or
outs
dec
pop
stos
fld
lds
pop
inc
enter
fsubr
pop
aaa
outs
xchg
sub
and
mov
sbb
div
mov
push
push
call
pop
mov
cs
xchg
push
push
xor
popf
pop
jne
or
lods
rcl
cmp
mov
ins
sub
push
mov
jle
xchg
cmps
pop
mov
cmc
out
lods
jbe
call
call
push
frndint
scas
xor
push
dec
outs
cmps
test
fwait
add
adc
scas
je
xchg
or
xchg
test
and
add
lock
mov
and
nop
cmp
dec
add
xor
and
sub
pop
mov
div
mov
lods
fs
and
js
adc
stos
sub
cmps
xor
adc
sbb
ficomp
xchg
sub
lds
outs
es
mov
xchg
aad
dec
hlt
pop
push
aam
push
push
xchg
mov
add
cmp
fld
jae
dec
or
nop
rcr
hlt
call
mov
movs
xor
fwait
mov
jg
imul
dec
out
js
sub
enter
pop
pushf
mov
stos
(bad)
repnz
fincstp
mov
xchg
pop
inc
stos
pop
shr
mov
aad
push
xor
mov
xor
add
imul
shl
push
aam
stos
(bad)
inc
jb
dec
ret
cwde
test
jmp
add
dec
(bad)
sar
push
push
(bad)
stc
addr16
mov
dec
dec
dec
in
sub
mov
push
test
dec
imul
fs
cmp
out
fidiv
pop
gs
mov
fadd
cmp
dec
pushf
fwait
and
sbb
cmp
sbb
shl
ret
cmp
adc
jae
scas
xor
stos
retf
out
and
xor
push
adc
mov
jl
xor
mov
cmp
jnp
or
jmp
push
int
pop
out
jmp
(bad)
jle
iret
movs
dec
rol
cs
popf
(bad)
stc
xlat
inc
jo
xchg
cmp
mov
jnp
test
lods
jge
sbb
rsqrtps
pop
mov
mov
movs
pop
cmp
pop
sti
pop
jne
dec
jle
xchg
(bad)
aad
aas
test
jle
and
das
scas
sbb
jno
rcl
sub
sub
fisttp
fwait
or
jecxz
mov
jb
sbb
mov
sbb
and
sub
dec
sub
shr
shr
hlt
fstp
cmp
call
pop
pop
test
movs
add
mov
retf
stos
push
push
push
popa
push
add
or
xchg
mov
sub
mov
sub
mov
sbb
pop
lea
jge
shl
enter
popa
scas
sbb
jno
xor
fadd
(bad)
mov
add
in
aas
xchg
loopne
cmp
ds
icebp
(bad)
jecxz
pop
clc
add
push
cmp
jg
add
xchg
xchg
push
inc
jne
and
stos
pop
stos
fld
mov
add
mov
sti
cmc
add
or
inc
test
in
adc
mov
push
xchg
xchg
push
xlat
cmp
int3
dec
xor
scas
sub
cmp
mov
pop
sub
dec
push
ss
mov
mov
sahf
imul
nop
xlat
inc
sub
and
add
mov
and
loope
or
cmps
mov
aam
popf
les
das
lahf
test
or
inc
(bad)
pop
adc
sbb
call
pop
inc
jb
bound
(bad)
jns
out
cs
icebp
std
cmp
add
addr16
imul
sub
out
jae
xchg
jg
sar
xchg
mov
jae
jecxz
sbb
and
mov
in
sbb
and
and
jl
jle
push
mov
cwde
loope
pushf
push
jecxz
test
sbb
inc
ja
mov
adc
ret
jg
popf
mov
xor
and
stc
jmp
inc
test
cs
dec
jge
loopne
add
test
push
aad
repnz
popf
adc
sub
and
and
xor
jge
sub
xlat
lea
xor
jecxz
retf
cmps
in
xor
mov
loopne
leave
mov
in
ret
xchg
inc
int3
retf
inc
push
cmps
or
test
jp
mov
push
push
pushf
test
ret
int3
jb
cmp
lock
neg
mov
out
cli
loop
lea
mov
rcl
lds
or
and
mov
xor
iret
xchg
and
cmp
xchg
xchg
ins
add
push
xchg
push
dec
daa
mov
(bad)
push
add
aam
pushf
lods
lds
cmp
dec
lea
push
cmp
sbb
push
inc
push
mov
das
adc
fs
and
inc
mov
iret
test
and
ss
add
inc
movs
aas
leave
add
xchg
repnz
and
imul
call
push
sti
test
inc
and
das
xor
cmps
sbb
sub
and
push
sbb
rol
loope
jne
mov
inc
xchg
adc
pop
mov
jnp
daa
xor
jnp
push
jmp
xor
push
arpl
add
aad
cmp
and
retf
mov
pop
loope
pusha
daa
xlat
mov
and
movs
fadd
in
movs
icebp
pop
and
jmp
(bad)
sub
mov
outs
bnd
xor
adc
sub
test
iret
mov
test
or
dec
rcl
inc
mov
movs
xor
inc
inc
scas
int
dec
fistp
cld
pop
pop
inc
loop
push
jg
lea
mov
rcr
mov
xchg
add
jo
movs
icebp
jle
xor
or
sub
jg
jbe
or
jg
fdivr
sub
or
icebp
cmps
mov
(bad)
jmp
cdq
push
inc
xchg
mov
dec
(bad)
lds
fwait
sti
pop
pop
dec
inc
call
push
sub
mov
das
xchg
push
test
adc
into
adc
int
clc
dec
pop
inc
sub
jmp
aaa
pusha
jle
pop
dec
sub
pop
fnsave
dec
loopne
and
sbb
adc
pop
das
mov
xchg
cmp
adc
xchg
fcmovbe
fucom
inc
pop
push
sbb
fwait
popf
call
mov
test
sti
fsubrp
or
xlat
popa
imul
push
nop
xor
or
and
cwde
pushf
push
inc
jo
(bad)
lods
pop
ret
mov
pop
out
ret
mov
push
mov
jmp
and
std
ds
stos
jno
std
cs
loop
ins
cld
loopne
sbb
(bad)
js
pop
inc
inc
loopne
dec
add
aas
push
fdivr
xor
jnp
push
pop
cmp
out
fmul
jno
xchg
inc
fisttp
push
lods
pop
ja
jge
pop
pop
dec
shl
inc
sbb
idiv
lock
dec
aad
lods
push
push
mov
xor
mov
mov
imul
adc
sbb
in
push
jo
nop
xor
mov
ret
dec
mov
inc
pop
push
adc
stos
stos
pop
or
retf
cmps
(bad)
into
retf
das
xor
jge
inc
sub
aam
pusha
adc
mov
test
loope
push
mov
sahf
fld
adc
xlat
dec
sub
jns
xor
cmp
fild
push
jle
push
fsubp
add
jle
neg
retf
xor
les
jmp
stos
(bad)
mov
xchg
stos
xor
push
stos
push
jns
dec
test
outs
sub
cmps
cmp
add
daa
(bad)
icebp
mov
retf
adc
ret
scas
add
push
pop
push
pop
cmp
(bad)
rcr
lahf
stos
or
dec
(bad)
in
call
stos
ficom
cmp
or
cmp
pop
cs
pop
test
iret
jmp
mov
xor
and
pop
ficomp
leave
out
jmp
mov
div
jne
sub
(bad)
in
push
in
aas
jns
stos
and
arpl
pop
fdivr
call
adc
popf
int
(bad)
push
mov
sbb
and
ror
xchg
out
hlt
mov
pop
pop
(bad)
fmul
mov
mov
mov
pop
stc
jge
xor
mov
mov
jae
mov
repz
xchg
xchg
inc
sahf
enter
and
jne
arpl
xchg
or
imul
sub
stc
sbb
sub
xchg
aam
and
push
cld
fwait
fwait
imul
mov
jg
rol
mov
cmp
inc
push
data16
int3
call
sbb
mov
mov
push
(bad)
xchg
xchg
ss
add
push
mov
and
fdiv
inc
out
nop
add
push
dec
inc
inc
push
mov
lds
mov
push
mov
ins
into
inc
cmc
lahf
imul
mov
outs
mov
add
sbb
iret
test
push
movs
mov
dec
sub
cmps
and
xchg
and
test
pop
and
push
push
ss
jp
xchg
adc
and
dec
and
int
push
xor
mov
leave
mov
sub
mov
push
sbb
movs
ret
and
in
rol
pop
mov
sub
cmp
loop
out
loop
and
test
xchg
or
outs
or
sub
dec
sub
sub
push
mov
mov
ins
adc
pop
push
inc
loopne
push
mov
inc
cmp
sbb
jns
mov
xchg
mov
lods
jo
inc
addr16
jnp
into
mov
and
scas
cmp
test
and
xchg
add
(bad)
aam
aaa
lea
shl
fmul
(bad)
gs
movs
and
movs
sub
add
adc
mov
dec
adc
xchg
mov
ficomp
mov
jbe
fwait
push
mov
int
sub
mov
fimul
dec
lds
js
cld
es
mov
inc
xor
stc
xchg
jo
icebp
pop
mov
mov
ja
xchg
cmps
dec
lock
enter
jns
add
xor
xchg
adc
int
aad
iret
retf
mov
mov
and
sbb
mov
(bad)
sti
mov
in
adc
sub
add
cmp
sub
or
dec
pop
sti
aas
clc
repz
mov
(bad)
arpl
add
jg
jecxz
cmc
aas
push
mov
pusha
cmps
test
mov
sbb
fwait
sub
adc
fsubr
mov
dec
inc
jb
adc
cmp
mov
aas
push
(bad)
fidivr
xchg
pusha
aas
xchg
data16
push
cmp
sbb
iret
or
les
jno
arpl
xchg
je
popa
mov
mov
cwde
call
sti
js
jmp
and
movs
sbb
and
not
js
sbb
jecxz
es
mov
ins
push
jno
mov
stc
sbb
mov
mov
jns
retf
mov
in
pop
pop
ret
cmp
and
fistp
outs
out
add
mov
lahf
sbb
jae
test
xchg
ds
jg
dec
xor
mov
mov
in
bnd
imul
idiv
test
daa
mov
arpl
aas
jg
mov
pop
(bad)
test
add
cli
pop
add
out
jmp
mov
pusha
pop
mov
pop
hlt
jbe
sbb
(bad)
pop
test
icebp
inc
mov
mov
mov
sub
sbb
cwde
pushf
shr
and
test
dec
pop
dec
rcl
dec
pusha
pop
and
sbb
sub
out
sbb
and
das
xchg
sub
stos
mov
test
sub
jmp
daa
icebp
mov
(bad)
lods
cs
or
sub
sub
sbb
shl
mov
ds
dec
cmp
adc
fnstsw
js
shl
sar
adc
sbb
push
pusha
inc
test
or
out
enter
push
iret
sti
jge
mov
push
imul
aad
mov
mov
fsubr
adc
and
push
mov
movs
jne
bound
jge
mov
mov
pop
dec
inc
push
push
xor
add
jp
mov
xor
mov
mov
icebp
pop
mov
xor
push
test
mul
mov
retf
imul
js
int3
push
repnz
cmp
fcmovu
fstp
ffree
mov
mov
sbb
cmp
push
mov
mov
cmp
nop
mov
xlat
add
(bad)
sbb
aam
lea
call
mov
call
std
sahf
adc
mov
test
xchg
and
pop
xor
pop
mov
mov
test
sub
not
inc
and
and
test
mov
add
mul
leave
or
sbb
ret
sub
dec
xor
dec
in
mov
sbb
clc
in
xchg
cmp
mov
mov
mov
xor
push
dec
(bad)
mov
mov
mov
addr16
les
mov
dec
movs
es
and
sub
add
adc
jbe
js
mov
jg
std
cmps
adc
xchg
xchg
and
dec
cmps
mov
cmp
in
push
jge
cmp
mov
sub
mov
xor
sbb
mov
(bad)
(bad)
int
repnz
std
fbld
es
(bad)
ds
das
mov
dec
or
data16
mov
cld
jge
or
add
push
dec
(bad)
or
push
cmc
stos
push
push
or
sub
sbb
dec
dec
or
call
mov
neg
jnp
push
adc
mov
push
lock
adc
ret
mov
dec
add
fcmovnu
cli
clc
in
and
daa
sar
shr
pop
sub
mov
and
adc
stos
pop
jg
call
aad
or
add
mov
push
ret
mov
test
and
adc
mov
mov
add
jl
sub
test
jne
call
push
cwde
stos
fdivr
bound
push
scas
cmp
mov
gs
dec
loop
or
push
add
dec
cdq
add
dec
adc
lea
stos
or
pop
int3
das
push
popa
jle
aad
dec
mov
outs
mov
adc
mov
in
gs
aad
and
fst
inc
push
dec
and
dec
jns
mov
repz
mov
jae
movs
popa
sub
ins
and
scas
shr
pop
push
push
adc
xchg
adc
or
jmp
add
mov
sti
stos
bnd
es
pop
test
xor
pop
adc
js
jl
mov
inc
xchg
xchg
and
and
ins
or
inc
xor
js
out
loope
or
dec
and
dec
dec
push
pusha
out
adc
lock
neg
xchg
inc
cmp
js
popf
pop
xchg
add
push
and
pop
and
dec
and
inc
xchg
xchg
mov
xchg
div
mov
rol
mov
dec
mov
mov
mov
test
inc
or
ins
aas
xchg
push
xchg
shr
add
neg
fs
loopne
or
ret
mov
std
cmp
adc
dec
lock
mov
rcl
(bad)
loop
add
jmp
pop
push
and
cmp
addr16
cmp
int3
shr
xor
fcomp
push
adc
jecxz
lods
xchg
push
call
push
mov
aas
std
sub
hlt
sub
adc
xchg
add
(bad)
pop
sti
fidivr
pop
(bad)
aas
mov
lock
xchg
out
jmp
ja
std
repnz
clc
mov
pshufw
xchg
test
jae
in
adc
dec
arpl
stos
adc
push
cld
and
sti
mov
xchg
int
lock
cmp
in
dec
int3
int
mov
xchg
mov
movs
mov
(bad)
jmp
adc
sub
push
sbb
retf
jae
daa
xor
add
mov
in
cmp
shl
jns
(bad)
lock
push
add
adc
test
adc
pop
pop
push
inc
jb
add
xchg
jg
call
rcl
fs
adc
(bad)
out
dec
and
in
sub
add
sbb
outs
push
or
pshufw
jmp
pushf
jnp
jle
test
inc
or
test
(bad)
jle
adc
mov
clc
sti
add
xor
pushf
push
xchg
fisub
dec
into
inc
lea
adc
call
or
push
retf
pop
stos
push
add
sub
adc
das
adc
jb
cmps
repz
xor
push
or
stos
cli
cmp
sub
xchg
push
jl
xchg
dec
mov
mov
mov
push
jp
cmc
call
rcl
imul
inc
dec
jae
icebp
xor
iret
into
loop
test
add
sti
div
fisubr
movs
test
out
mov
cld
dec
stos
inc
pop
out
xor
cmp
push
ins
div
mov
stos
push
push
mov
mov
mov
mov
push
ret
(bad)
xchg
(bad)
xor
out
addr16
mov
call
adc
retf
pushf
adc
and
repz
fwait
lahf
inc
(bad)
call
add
inc
pop
cmp
test
cli
sub
inc
add
add
xchg
mov
call
cmp
and
jg
dec
int
stc
retf
retf
mov
pop
in
add
pop
int
jbe
mov
mov
inc
xchg
sbb
mov
imul
js
movs
lock
(bad)
ins
jnp
out
and
push
retf
data16
sub
pop
mov
mov
lods
es
pop
inc
xchg
leave
not
push
push
pop
or
or
ja
neg
fmul
scas
jg
mov
out
push
call
pusha
iret
mov
enter
in
cmp
mov
mov
mov
xchg
sbb
jo
ror
jno
loope
cdq
rcl
xor
sbb
mov
push
cmp
call
in
xor
dec
cmc
add
cwde
dec
inc
inc
inc
xor
and
leave
leave
mov
dec
add
xor
aad
cmp
fs
cmps
cs
add
cwde
add
add
pop
pop
cs
jb
ficom
cmp
push
test
retf
ins
test
enter
dec
add
mov
cld
or
daa
adc
ins
adc
stos
jp
test
pushf
ins
add
int
dec
pop
jl
xor
cmp
and
adc
sbb
retf
out
push
lea
imul
lods
mov
push
pop
and
cmp
sub
cmp
call
pop
(bad)
(bad)
test
punpcklbw
xchg
and
xor
movs
test
sub
ficom
repz
dec
(bad)
cdq
retf
jo
push
nop
cmps
mov
aad
inc
test
jle
push
mov
enter
aaa
mov
pop
inc
jp
adc
pop
mov
dec
adc
icebp
add
dec
cs
jns
fsubr
push
xchg
das
adc
cmp
mov
jbe
fsubr
sub
adc
inc
xchg
jo
clc
and
test
pop
ror
dec
or
jl
(bad)
retf
loop
int3
xor
and
cld
mov
mov
stos
xchg
es
mov
sti
cmp
loopne
dec
call
mov
std
sti
xchg
fdiv
aad
adc
mov
add
dec
push
loopne
icebp
mov
sbb
(bad)
(bad)
and
mov
mov
movs
lods
push
mov
mov
daa
add
sbb
inc
imul
and
test
test
fisub
es
xchg
xor
push
pop
pop
mov
inc
cmp
push
mov
mov
ja
inc
dec
xor
push
imul
jo
shl
scas
pop
mov
stc
xor
iret
push
jecxz
das
dec
loopne
sbb
cmp
mov
jmp
add
iret
sbb
sbb
sub
inc
enter
add
jg
pop
mov
ja
xlat
mov
into
sub
jns
popf
mov
inc
dec
dec
sbb
xor
cli
clc
fcmove
les
sub
mov
push
add
mov
or
jbe
jle
lahf
adc
cmps
out
jo
sbb
jecxz
les
adc
push
mov
std
clc
pop
fwait
sar
ror
outs
mov
or
dec
loopne
cmps
ret
ins
dec
xchg
int
xchg
adc
dec
or
imul
mov
daa
loopne
lds
(bad)
jle
(bad)
ds
popf
cmp
arpl
call
or
call
aam
mov
jne
add
fstp
mov
scas
mov
lock
sub
inc
add
sbb
xor
mov
(bad)
fmul
xor
(bad)
clc
mov
push
add
xchg
fs
addr16
pop
mov
jle
pop
push
jle
xchg
loopne
ss
cmp
je
pusha
or
mul
ret
pop
cmp
mov
ficom
sbb
rcl
shl
scas
scas
mov
rcr
and
inc
xor
outs
int
xor
push
mov
call
cmp
cmps
xor
xor
pusha
jb
push
retf
xor
dec
add
rol
leave
inc
mov
sbb
int3
mov
dec
xor
pop
sub
int3
imul
cmp
jns
(bad)
adc
xchg
mov
aas
je
xor
sahf
cmp
sub
mov
dec
xchg
(bad)
add
mov
mov
lods
icebp
or
hlt
mov
sbb
adc
xchg
sub
xchg
dec
and
mov
js
adc
fcomp
pop
mov
call
and
cs
ret
push
(bad)
hlt
inc
lea
daa
mov
test
aad
cld
jle
div
ja
jg
adc
inc
adc
push
mov
(bad)
loop
and
push
fiadd
or
push
inc
rcr
dec
sub
popf
ss
xchg
cmp
or
dec
add
lahf
mov
push
mov
push
sbb
dec
or
cmps
pusha
or
aas
and
jbe
or
fbld
es
(bad)
ds
das
mov
cld
mov
pop
push
inc
add
repnz
mov
sbb
pop
add
std
jl
cdq
add
imul
inc
add
add
idiv
adc
das
mov
jno
dec
push
test
rcl
rcl
or
popf
fst
and
icebp
mov
and
or
sub
repnz
xchg
mov
gs
ins
cmc
or
cmps
push
shl
(bad)
out
mov
mov
mov
test
push
push
xchg
fwait
retf
xchg
mov
push
scas
add
push
add
add
inc
aad
xchg
ja
or
(bad)
adc
jo
jecxz
call
adc
arpl
push
add
jnp
adc
mov
(bad)
sub
lahf
pop
mov
ins
dec
and
mov
cmp
jne
sbb
add
jbe
popa
mov
push
dec
inc
sbb
mov
pop
jge
add
inc
xor
scas
(bad)
out
lods
xor
inc
jne
pop
cli
pop
dec
outs
out
(bad)
fidiv
mov
movs
push
jmp
cmp
nop
inc
shr
push
mov
pop
fsubr
add
xor
and
mov
retf
sub
(bad)
ins
adc
inc
add
into
push
jns
stc
xchg
mov
stos
call
mov
mov
ret
jle
into
jmp
inc
and
ret
stc
mov
add
jns
jae
es
xor
xor
lea
stos
hlt
ins
adc
dec
in
mov
fiadd
push
and
movs
or
ins
lea
mov
pop
push
aad
xor
pop
scas
sub
mov
and
cs
fcmovb
test
mov
xchg
iret
(bad)
fucomip
mov
mov
pop
femms
sbb
jge
jno
aad
imul
(bad)
xlat
mov
jp
mov
nop
ret
in
pop
fstp
and
mov
mov
cmp
(bad)
call
shl
int3
jne
push
jo
push
xchg
sub
jb
mov
int
mov
icebp
(bad)
lahf
jmp
ret
jo
in
add
pop
cmp
lods
adc
push
adc
dec
jne
pop
xchg
(bad)
pop
rol
jl
add
jg
jo
and
cmp
jo
pop
jo
(bad)
push
xchg
cmps
sbb
stos
dec
sub
jae
mov
pop
cwde
xchg
imul
in
cmp
outs
inc
pop
push
adc
outs
mov
jb
push
sub
sbb
cmp
sti
or
push
mov
stc
pushf
sub
imul
xchg
jo
xchg
stos
lods
lea
test
inc
add
sub
xchg
imul
mov
cmps
adc
loope
fcom
imul
sbb
imul
jle
jecxz
rol
xlat
lahf
loop
cmps
lahf
ror
cmps
or
cwde
call
cmps
mov
push
inc
mov
scas
mov
mov
jo
cmp
and
stos
jbe
repz
mov
inc
test
adc
mov
add
xchg
or
push
test
stos
adc
adc
xchg
(bad)
data16
and
xor
fs
mov
xchg
or
xchg
xchg
add
push
push
push
mov
(bad)
mov
loope
jmp
call
imul
test
shl
mov
aas
mov
cmp
pop
cmps
aad
mov
xchg
les
data16
int
call
imul
add
imul
and
lods
push
inc
mov
out
daa
leave
(bad)
aam
push
call
inc
jg
and
pop
mov
xor
mov
addr16
loop
pop
pop
ror
push
dec
aad
pop
adc
popf
pushf
inc
push
sbb
jne
aam
push
scas
cmp
and
pop
adc
cmc
xor
pusha
pop
imul
ficomp
leave
xchg
retf
dec
cwde
mov
cmc
sub
clc
sub
inc
ficomp
jp
mov
aam
jp
(bad)
cmp
push
fiadd
pop
pop
mov
adc
adc
punpckhdq
adc
sbb
sub
xchg
xor
sbb
xchg
shl
push
cmps
and
popf
mov
std
xchg
mov
add
add
sbb
mov
lahf
and
clc
mov
mov
outs
aaa
repnz
(bad)
aas
sbb
jae
scas
fstp
jg
ins
and
aas
in
mov
add
jne
jge
push
pop
inc
dec
sub
xor
cmp
cmp
or
push
sub
xor
pop
add
and
sahf
shl
jg
or
test
adc
sbb
mov
fst
enter
add
stos
pop
in
outs
mov
mov
(bad)
sbb
pop
movs
sub
aad
ins
sar
sbb
in
loopne
jmp
int
push
mov
pop
dec
adc
jne
pushf
imul
sbb
lds
js
push
mov
adc
enter
mov
or
inc
jo
mul
out
(bad)
jg
sti
movaps
mov
sbb
leave
xor
jne
out
stos
scas
out
jmp
pushf
jae
rcl
out
int3
popf
fwait
xchg
movs
stos
jnp
test
ss
mov
xor
or
pop
mov
pop
pop
dec
sub
mov
lock
and
push
push
pop
icebp
jge
jnp
fmulp
jns
std
sub
and
sbb
inc
and
jnp
push
sub
(bad)
or
jg
in
push
clc
jl
aaa
je
cmps
cmps
cdq
adc
sub
(bad)
cmp
jmp
mov
push
add
pop
les
push
mov
inc
outs
cmp
mov
adc
js
loop
nop
pop
rcl
inc
sahf
dec
adc
stos
mov
inc
dec
stos
xchg
call
pop
mov
cmp
lds
add
push
jno
rcl
js
add
jecxz
es
push
pop
push
xchg
and
retf
xchg
dec
pushf
cmp
iret
inc
mov
rcl
out
push
stc
push
mov
es
repz
loopne
mov
scas
jno
inc
je
(bad)
gs
movs
mov
mov
push
sahf
xchg
sbb
out
into
sub
adc
nop
push
ret
xchg
retf
out
ds
xchg
mov
pop
jle
iret
mov
xor
xor
cld
adc
mov
xchg
jnp
stc
inc
outs
ficomp
fstp
shl
pop
pushf
sbb
jno
in
rol
push
idiv
jo
xor
xchg
mov
sub
push
mov
mov
dec
mov
sbb
sub
mov
dec
mov
push
jmp
es
xlat
inc
pop
xchg
or
jmp
push
sbb
inc
jo
outs
mov
rol
fidivr
add
inc
add
clc
in
(bad)
loope
mov
sub
cs
add
adc
cmps
dec
add
icebp
ficomp
inc
icebp
fidiv
ret
stc
int
lods
ins
scas
bound
pop
push
imul
mov
fcmovnu
inc
cmc
aam
add
inc
imul
test
test
jne
in
jmp
mov
push
fdivr
(bad)
push
adc
or
or
sti
cmps
(bad)
fcomp
ffreep
fcmovbe
sub
xchg
push
adc
ins
jl
aaa
mov
sbb
jg
jne
jae
xor
xlat
or
dec
xchg
push
or
into
outs
daa
cmp
mov
mov
cmp
cmp
adc
(bad)
(bad)
adc
repz
xlat
idiv
cmp
cld
mov
jg
mov
aam
mov
test
dec
fucom
push
fwait
lods
repnz
retf
or
add
and
and
and
jmp
sahf
or
xchg
sub
daa
sub
dec
push
dec
data16
mov
cld
rcr
mov
std
mov
sbb
and
ficom
pop
test
shl
or
push
mov
adc
mov
inc
cmps
inc
lds
iret
aad
aad
push
aad
sahf
out
mov
adc
sahf
mov
(bad)
retf
xchg
xchg
xlat
dec
pop
rcl
inc
fwait
adc
adc
dec
push
pop
cdq
mov
iret
xchg
lds
scas
jp
enter
inc
lods
out
stos
jmp
xchg
test
es
(bad)
jmp
push
outs
pushf
sbb
jg
sti
add
add
cmp
cmp
xor
dec
loope
mov
jecxz
out
rol
inc
and
sub
dec
ret
xor
leave
fmul
aas
mov
ss
push
jge
push
pop
jge
dec
bound
xor
loop
cmps
je
add
mov
movs
xchg
(bad)
lods
sbb
sti
test
jg
pop
cmc
icebp
outs
out
repnz
xor
test
test
cmps
lods
dec
push
or
push
shr
in
and
xor
cs
in
adc
pop
movs
mov
enter
xchg
out
out
dec
inc
inc
cmp
test
and
pop
push
add
es
or
mov
lock
mov
std
pop
sbb
icebp
fadd
aas
push
pop
or
xchg
mov
cmc
call
mov
repz
mov
mov
mov
bound
xor
cmp
add
rdmsr
lods
sub
pop
cmp
adc
adc
adc
pop
mov
xor
pushf
nop
and
cdq
jp
outs
mov
xor
inc
add
out
mov
mov
mov
callw
mov
inc
mov
lahf
or
fisttp
hlt
mov
mov
lds
cld
mov
push
movq
add
add
inc
add
push
pop
nop
inc
push
cdq
pusha
retf
test
xchg
in
inc
loopne
jne
lds
out
push
dec
and
ds
in
xchg
pushf
shl
dec
adc
div
out
cmp
inc
xchg
add
es
cmp
div
jnp
dec
int
inc
mov
jge
pop
enter
and
int
jb
hlt
inc
(bad)
rep
mov
cmps
mov
xor
push
aam
cdq
scas
mov
adc
pop
in
retf
inc
xchg
add
jne
mov
add
add
sub
(bad)
mov
jmp
sar
push
push
shl
(bad)
popa
dec
int
outs
inc
loope
push
push
(bad)
nop
push
nop
mov
ror
stos
xor
(bad)
iret
xchg
sub
and
mov
cli
in
repnz
sbb
test
mov
dec
lods
mov
daa
xlat
inc
push
dec
test
xor
xchg
xchg
mov
or
jne
sub
cmp
or
mov
inc
xor
in
test
xchg
add
lods
cwde
ins
and
mov
mov
sub
lods
inc
jae
jae
cdq
add
inc
jo
(bad)
lea
adc
jnp
jl
loopne
out
(bad)
sar
div
cmp
idiv
idiv
aas
es
sbb
cld
sub
in
mov
push
std
pop
pop
popf
out
sbb
rcr
push
popf
movs
movs
nop
rol
and
pop
mov
in
inc
(bad)
cmp
xchg
repz
ss
mov
sahf
(bad)
loopne
xor
out
mov
lea
mov
sti
not
lock
cmp
jecxz
mov
les
(bad)
push
fidivr
or
mov
jmp
loope
ja
icebp
out
xchg
clc
cli
out
pop
les
outs
in
pusha
imul
frstor
adc
outs
js
lods
sbb
ss
sbb
aad
dec
cmp
jne
jns
hlt
inc
fdivr
fadd
sar
dec
lds
cmc
mov
lods
jmp
test
inc
arpl
jecxz
mov
aaa
or
(bad)
jmp
fcomp
fld
int3
hlt
test
pop
cdq
stc
dec
stos
je
push
mov
fsubrp
in
in
into
dec
in
fs
pop
lods
xchg
repz
jp
cmp
inc
sahf
jge
jne
mov
dec
mov
mov
mov
sub
dec
xchg
fs
out
push
scas
pop
mov
fsubr
pop
cmc
test
push
(bad)
fucomip
jno
daa
inc
(bad)
test
das
cwde
stos
sbb
mov
cli
adc
enter
arpl
mov
mov
sbb
cmp
or
add
add
stc
or
sti
aas
cmp
cmp
test
mov
mov
in
push
xchg
adc
push
pop
sub
test
outs
ins
ret
in
repnz
rcl
dec
into
jae
and
cdq
pushf
sahf
loope
out
inc
cmp
pop
pop
stos
pop
pop
outs
sub
cmps
sbb
dec
fstp
imul
pop
add
xlat
xchg
enter
jb
fisub
jae
mov
pop
out
jl
push
js
repnz
in
pop
ficomp
sbb
sar
in
fild
outs
(bad)
out
add
pop
cmp
cmp
cmp
xchg
ds
and
daa
ja
and
cmp
push
mov
hlt
hlt
mov
pop
lahf
fnstenv
test
(bad)
nop
test
ficom
pop
mov
sub
push
bound
ror
push
inc
xchg
jo
repz
sub
lock
inc
in
lds
stos
aam
sti
std
inc
jg
cmp
int
clc
xor
fisttp
gs
fstp
imul
mov
xchg
inc
fcom
imul
jmp
outs
enter
jmp
pop
imul
pop
and
dec
add
test
cmp
stc
inc
test
dec
adc
push
div
inc
push
jg
sti
hlt
stc
call
neg
(bad)
jge
add
add
das
push
pop
xor
jg
mov
pop
adc
shl
push
test
pop
mov
xchg
fsub
imul
jle
pop
lahf
adc
push
or
mov
cs
add
clc
aaa
add
xchg
jne
sub
mov
mov
pop
in
adc
leave
push
dec
dec
or
mov
inc
sbb
sbb
(bad)
xor
fsub
mul
xor
mov
xor
inc
pop
scas
xchg
and
inc
jne
adc
push
(bad)
adc
push
loopne
ret
sbb
popf
push
sub
hlt
imul
mov
cmp
iret
fcmovnbe
test
add
fs
dec
and
out
das
dec
inc
dec
jle
mov
mov
jmp
adc
repz
js
(bad)
in
leave
lea
loope
sub
pop
pop
pop
es
mov
sub
les
stc
mov
xor
inc
inc
or
add
icebp
out
(bad)
loopne
das
mov
or
xor
xchg
(bad)
int3
mov
sbb
add
mov
or
xchg
cmp
push
lea
dec
or
dec
add
mov
mov
cwde
test
sbb
or
cmps
cmps
les
xchg
movs
rol
inc
xor
mov
xor
or
mov
mov
add
out
lahf
call
add
xchg
mov
sahf
push
pop
les
sbb
inc
adc
stos
not
cdq
mov
jle
bound
xor
dec
in
and
stc
jae
xchg
xchg
jle
add
das
das
test
inc
cwde
jl
cmps
push
aam
rcl
aad
xor
sbb
out
sub
push
jg
inc
adc
nop
ret
call
jb
data16
bound
jbe
inc
jno
aaa
mov
cmc
loopne
mov
in
ins
jbe
jg
cmp
(bad)
ror
dec
idiv
in
mov
jp
mov
rcr
dec
retf
mov
xor
xchg
loop
ja
add
and
or
sbb
sahf
int3
loope
popf
or
mov
mov
inc
pusha
sub
(bad)
jmp
adc
imul
dec
pusha
call
das
out
icebp
ficomp
icebp
out
sbb
js
cmp
mov
icebp
fidivr
(bad)
sub
jge
sbb
jle
push
jg
dec
push
inc
cmp
inc
add
cwde
add
xlat
jg
or
pop
sbb
cld
xchg
clc
cdq
(bad)
cmp
dec
and
ds
mov
arpl
int
cld
xchg
test
push
les
xor
cmp
retf
call
mov
fsub
out
leave
shl
pop
sub
fadd
in
shl
out
push
mov
mov
vunpckhpd
pusha
dec
jnp
cmp
and
retf
cwde
jecxz
ss
rol
mov
inc
imul
jne
jnp
push
mov
adc
jg
je
mov
out
in
arpl
adc
adc
mov
pop
pop
rcl
or
sub
pop
mov
(bad)
stos
push
fmul
mov
add
cs
mov
loope
pop
push
int3
iret
pop
pusha
(bad)
jae
push
jmp
push
xchg
in
stos
xchg
inc
add
mov
test
test
fwait
push
jae
or
cld
and
call
mov
cld
rcr
pop
pop
in
push
int
sub
inc
inc
sbb
imul
ret
pop
jnp
pop
out
push
mov
sti
push
sahf
and
fbld
or
outs
outs
mov
adc
out
push
dec
daa
mov
aad
call
test
push
cmps
sbb
mov
in
lods
sbb
sbb
in
out
and
mov
ffreep
es
cli
into
shr
jbe
out
outs
jmp
ins
out
pushf
cmp
dec
cwde
es
dec
cmp
pushf
jno
cmp
jns
mov
sbb
cmp
ret
fcomp
iret
loope
cmp
pop
call
ja
lods
xor
sub
imul
pop
dec
inc
pop
dec
mov
stos
cld
push
retf
push
sbb
xchg
ss
jl
push
ds
sti
push
jns
aaa
stos
shl
into
push
aas
cmp
cld
in
cmp
xor
dec
ds
jns
imul
add
les
or
rcl
xchg
sub
push
cdq
adc
jns
gs
or
mov
cld
mov
mov
test
sbb
xchg
jnp
mov
lock
(bad)
lahf
(bad)
jmp
(bad)
jecxz
sti
das
bound
loopne
gs
das
xchg
test
in
or
pop
movs
jmp
push
adc
add
adc
ret
or
aad
mov
sub
push
addr16
xchg
cdq
jmp
jp
adc
fisttp
rcl
lea
cmp
jnp
leave
dec
dec
mov
and
or
mov
arpl
fild
shr
pop
xchg
test
jle
mov
popa
data16
sbb
arpl
xchg
add
pop
sbb
fimul
shl
mov
pusha
mov
mov
mov
add
mov
dec
dec
add
retf
and
adc
xchg
inc
pop
dec
xchg
push
cwde
sbb
xchg
add
ja
inc
dec
sti
shr
lock
lock
inc
add
mov
mov
cli
sub
lock
aaa
pop
shl
push
data16
je
push
dec
dec
dec
mov
xor
adc
enter
daa
sub
mov
sub
xchg
pop
push
push
and
and
jbe
jge
mov
jge
push
mov
adc
stos
dec
push
call
test
sub
cmp
xchg
bound
mov
repz
(bad)
jnp
pop
int
cld
cwde
mov
and
lea
inc
add
mov
jns
retf
pop
inc
(bad)
leave
retf
pop
ins
push
retf
clc
xchg
push
xchg
fadd
mov
adc
mov
movs
loopne
(bad)
out
and
in
mov
cwde
imul
sub
dec
jne
pop
fistp
adc
in
push
mov
mov
sub
and
cmp
into
leave
mov
fiadd
adc
xor
pop
dec
cmp
mov
sub
ins
sub
arpl
xchg
cmc
dec
sbb
stc
dec
add
jo
ror
outs
push
popa
jne
psllq
jmp
and
cld
pop
pop
(bad)
jge
jno
mov
cmp
and
dec
dec
jne
out
jo
cmps
aaa
push
jo
leave
sub
jmp
cmp
daa
and
pop
dec
cmp
fidiv
test
cmc
in
cld
fsubrp
mov
ja
jle
fistp
mov
adc
jnp
cmp
aas
or
mov
int3
js
int
ds
mov
div
lea
sbb
iret
fcmovnu
clc
das
fisttp
out
sub
xchg
lds
cmp
sti
aam
fsub
mov
fstp
ror
(bad)
je
mov
sub
xchg
cwde
sbb
pop
inc
add
fst
and
in
adc
xchg
stc
mov
sbb
retf
popa
ins
jnp
test
jbe
mov
(bad)
push
push
xlat
xor
mov
lds
in
shl
and
xor
adc
and
and
add
(bad)
scas
cld
sbb
std
jecxz
mov
xchg
aaa
(bad)
dec
aam
rcr
fisubr
jmp
lods
sar
iret
jecxz
ss
jno
in
imul
mov
movs
and
xchg
add
shl
xchg
das
cdq
cmc
ret
in
cli
dec
movs
(bad)
mov
mov
xor
js
test
rcr
ins
jne
aaa
inc
dec
dec
outs
xor
nop
and
inc
and
jmp
fst
inc
push
pop
push
dec
mov
mov
jge
fcom
lea
push
mov
ss
cmp
retf
test
pop
sub
repz
dec
sub
sbb
sub
xor
cmp
outs
push
adc
out
jecxz
movq
cmp
xor
push
xchg
shr
out
in
(bad)
jmp
and
dec
mov
or
pop
mov
ss
push
cmp
push
retf
fcmovu
pop
loopne
and
pop
pop
cdq
ret
ror
sub
pop
mov
dec
pushf
jno
cmp
rcr
sub
pop
add
jne
cs
pusha
and
(bad)
out
inc
or
(bad)
mov
out
jmp
pop
mov
not
iret
mov
retf
cmp
mov
rcl
jae
stos
loopne
or
sbb
mov
push
(bad)
xchg
mov
js
ss
out
rcr
outs
xchg
and
loop
leave
push
aad
push
retf
add
js
scas
test
lock
dec
cmps
sub
push
shl
and
bound
pop
stc
cdq
cmps
adc
xchg
cwde
ins
xor
sbb
xchg
push
sbb
adc
nop
std
xchg
xchg
push
aad
push
pop
out
outs
xchg
stc
jg
cmp
ror
pop
out
mov
push
add
aas
dec
icebp
retf
test
push
add
or
lahf
xchg
nop
mov
push
fidiv
repnz
xchg
scas
cli
sar
adc
and
xor
xchg
adc
or
sub
lods
xor
sbb
inc
popf
sbb
enter
mov
cdq
sbb
stos
cmp
lea
movs
das
enter
stos
fsub
cmovo
jg
add
sub
inc
add
jmp
cwde
sbb
or
add
sbb
scas
ret
push
mov
or
or
inc
int
cmp
stc
test
gs
gs
gs
cmps
mov
lea
adc
push
pop
loope
mov
or
sub
xchg
xchg
and
enter
enter
pop
std
in
or
push
xchg
sub
and
popa
inc
push
add
xchg
and
mov
in
adc
sti
test
pop
add
(bad)
or
cmp
(bad)
pop
pushf
inc
(bad)
pushf
ret
cmc
adc
lahf
dec
or
(bad)
loopne
inc
adc
inc
ins
xchg
adc
ret
fidivr
sub
retf
xor
mov
lea
adc
cmp
and
cmp
leave
cld
arpl
mov
repnz
popf
or
adc
nop
cwde
movs
mov
push
(bad)
pop
xor
pop
cmc
push
jp
pop
es
and
lock
imul
into
movs
pop
mov
cs
pop
cmp
mov
mov
out
test
or
test
ins
inc
pop
dec
xor
icebp
xchg
popf
mov
inc
bound
xchg
fdiv
add
xor
xor
test
popa
sub
dec
les
into
xchg
lods
into
mov
jne
sbb
popf
out
rcl
pop
or
cmp
cmps
or
sub
pop
(bad)
pop
push
loop
add
inc
mov
nop
dec
mov
jecxz
gs
or
call
jne
shl
retf
cld
xchg
sbb
into
out
mov
dec
mov
mov
cmps
sbb
jecxz
lods
or
out
dec
in
(bad)
jg
mov
cli
(bad)
ds
mov
int3
icebp
or
int
jl
int
mov
rcr
sbb
in
fild
or
lea
cld
shr
js
neg
cmp
sbb
sbb
call
cmps
mov
mov
mov
sub
dec
pop
out
imul
sbb
test
outs
ffree
adc
arpl
in
mov
fimul
mov
retf
mov
repz
(bad)
aaa
jo
mov
out
icebp
cmc
jl
(bad)
add
mov
pop
mov
and
cmps
xchg
in
(bad)
xor
retf
fmulp
jl
xchg
cdq
pop
cli
or
mov
mov
ficomp
pop
pop
cmps
xchg
sbb
sub
cs
retf
rcl
pop
dec
xor
and
repz
(bad)
pop
push
sbb
mov
shl
xor
sbb
push
cmp
inc
adc
aaa
xchg
add
or
lea
pusha
xchg
ins
mov
aad
pop
fsub
or
add
sub
adc
out
mov
lods
xchg
mov
js
push
icebp
cld
mov
jecxz
aas
repnz
add
xlat
jg
aas
clc
xchg
pop
xor
jle
xchg
mov
sbb
mov
xchg
mov
adc
sbb
lea
test
push
pop
inc
mov
add
mov
push
sahf
jle
gs
fild
pop
pop
pop
inc
outs
outs
pop
xlat
add
loope
mov
xor
jmp
mov
push
xchg
xchg
push
or
mul
mov
adc
xchg
inc
cmp
jns
daa
imul
clc
(bad)
or
lock
ins
pushf
cmp
mov
sub
jp
mov
bound
and
xchg
lds
push
inc
or
xchg
sbb
push
sub
stc
dec
cmp
jp
scas
scas
mov
push
add
xor
jle
clc
sub
das
mov
cld
adc
aas
or
push
pop
loop
js
fneni(8087
out
push
mov
std
cmps
cdq
rcl
sub
jb
xor
daa
xor
ins
xchg
gs
test
es
and
cmp
jb
sub
in
rol
inc
repz
mov
sbb
and
push
push
mov
(bad)
xchg
xchg
xchg
(bad)
pop
jno
pop
sbb
shl
dec
clc
sar
std
aas
xor
sti
loopne
or
mov
sub
add
mov
add
(bad)
pop
push
cwde
scas
cs
pusha
inc
xor
pop
test
fs
dec
pusha
and
dec
mov
mov
es
xchg
test
jmp
rcr
movs
xor
mov
pop
add
cmp
ins
add
imul
xor
fdivr
cmp
mov
sbb
dec
xchg
int3
xlat
test
and
jecxz
push
xor
aad
push
sbb
fistp
lock
(bad)
adc
xor
aas
dec
lock
or
in
sar
aaa
add
push
jge
sub
shl
xor
ret
dec
mov
adc
jb
pop
call
adc
test
sub
pop
mov
mov
sbb
mov
cmc
jne
adc
xor
cs
cmp
ret
mov
lods
sahf
sbb
push
out
aad
push
(bad)
or
fsub
movs
sar
xchg
or
and
inc
and
adc
std
jns
xor
leave
retf
iret
mov
inc
xchg
xchg
adc
jp
lahf
mov
pop
movs
push
sbb
and
and
int3
lea
repnz
and
push
mov
xor
outs
jg
cld
mov
cs
test
shl
call
or
and
outs
or
sbb
sbb
das
loop
in
out
pop
mov
mov
test
push
or
pop
xor
or
mov
pop
nop
add
xchg
add
push
ret
adc
dec
push
xchg
pusha
adc
(bad)
repnz
stc
or
pop
lea
cmps
inc
push
or
call
jo
or
popa
sub
(bad)
mov
cmp
pop
and
sbb
xchg
(bad)
sub
xor
jno
xchg
jle
stos
sbb
int3
das
mov
fcom
cmp
in
and
lock
mov
cld
xchg
dec
loope
lahf
jg
js
mov
mov
int
test
adc
inc
push
xor
cmp
push
outs
inc
add
and
fwait
ss
pop
out
std
adc
lds
icebp
lods
ja
jecxz
fadd
pop
mov
sbb
mov
out
std
push
lock
int
scas
shr
ja
test
out
data16
cmp
xlat
adc
add
(bad)
jge
jbe
fcom
jmp
jb
(bad)
fcmovbe
ss
(bad)
xor
ffreep
fsubrp
ins
lods
in
push
bound
cwde
scas
pop
lds
push
mov
clc
jg
ja
pop
pop
sti
(bad)
mov
loopne
(bad)
push
clc
fidivr
pusha
jb
adc
cwde
mov
(bad)
add
aaa
pop
jmp
mov
idiv
in
xchg
jg
lahf
stc
repnz
lock
inc
pop
(bad)
sbb
xlat
push
xor
arpl
mov
neg
(bad)
call
call
es
les
or
mov
dec
mov
inc
in
bnd
cs
inc
pop
ins
jo
loopne
dec
pop
dec
and
sub
cmp
mov
in
cmps
xor
add
jmp
mov
push
(bad)
cmps
cld
add
in
mov
jmp
sti
mov
dec
std
pop
sahf
popf
sar
cmps
clc
loop
jle
jle
lahf
std
sbb
pop
std
inc
mov
and
cs
cmps
mov
mov
jo
js
loope
and
jae
adc
jmp
jg
cmp
jl
leave
and
out
cmp
add
jge
inc
mov
fcomip
jne
xchg
xchg
xchg
mov
adc
sbb
xchg
or
or
jmp
add
sub
out
sbb
(bad)
in
fsubr
ins
jae
in
mov
popf
fsub
adc
in
push
aas
sbb
cmp
sbb
xchg
add
fwait
sub
push
xor
test
pop
jecxz
leave
jecxz
outs
and
mov
adc
jns
pop
stos
sub
jmp
mov
add
repnz
cmp
add
cli
jp
sbb
rcl
aam
aad
(bad)
faddp
jle
pop
xchg
into
jae
fidiv
sub
leave
pop
call
mov
sub
int
and
xchg
in
fwait
cmp
lahf
bound
xor
mov
xor
pop
int
movs
clc
in
and
sub
sbb
jp
call
fisubr
loope
pop
fdivr
pop
mov
pop
xor
int3
jg
mov
xchg
xchg
call
adc
retf
xor
xor
push
dec
dec
pop
test
inc
es
inc
aas
in
cmp
stos
test
sbb
(bad)
push
push
add
test
push
jns
xlat
scas
test
scas
call
scas
pop
mov
xchg
lods
stos
inc
daa
sbb
mov
shr
lods
xor
(bad)
and
push
push
cmp
fld
frstpm(287
inc
dec
cmps
retf
adc
push
add
xchg
retf
mov
mov
lea
pop
repnz
add
or
int3
fdiv
bnd
pusha
aas
xchg
adc
repnz
movs
cmp
retf
dec
push
mov
push
add
sub
mov
sub
mov
adc
(bad)
mov
jmp
xor
inc
cs
data16
pop
jg
dec
mov
movs
cs
mov
or
pop
pop
clc
push
stc
xor
test
add
ja
lods
fs
addr16
inc
pop
out
enter
popf
pop
nop
mov
jle
loop
xchg
xor
xor
adc
cs
dec
mov
dec
mov
das
dec
jns
xchg
pop
pop
cmp
push
adc
inc
pop
jbe
dec
lods
leave
iret
int
jns
xor
cmovno
jle
or
dec
ins
jns
ror
xchg
cmps
sub
jg
sub
jmp
push
sub
mov
mov
push
dec
sub
xchg
lahf
jg
jae
ret
push
pop
jb
mov
ror
out
repz
rol
and
loopne
jne
inc
retf
outs
mov
add
leave
and
cmp
pop
in
ret
bound
fs
and
mov
jo
fwait
dec
cmp
lds
(bad)
ss
and
or
adc
sub
mov
inc
cmp
push
sub
outs
sbb
outs
fstp
ret
mov
ffree
dec
scas
fsub
call
cmc
sbb
std
cdq
xchg
lock
cmp
xchg
aas
je
ja
adc
test
cwde
mov
add
rcl
fimul
mov
(bad)
mov
sub
out
inc
adc
inc
lock
fild
rcr
lea
jl
das
jecxz
cmp
pop
mov
mov
outs
dec
mov
(bad)
je
sub
in
push
cmp
imul
pop
jg
retf
sbb
cmp
jg
js
das
lods
iret
mov
lock
mov
gs
fisubr
push
push
mov
mov
arpl
(bad)
cli
fidiv
(bad)
div
stos
mov
into
xlat
scas
bound
div
mov
movs
in
cmp
pop
(bad)
adc
cmp
cmps
adc
aaa
jo
std
enter
scas
ins
pusha
jno
sbb
call
jbe
jbe
in
out
jge
fist
sbb
test
add
inc
dec
dec
dec
mov
scas
dec
dec
ds
jmp
cmps
repz
clc
cmp
ret
push
sub
test
pop
cld
pop
jne
pop
into
cmp
loop
jecxz
int
iret
leave
inc
inc
adc
add
adc
inc
jno
enter
push
cmp
pop
dec
bound
in
sub
cli
xchg
inc
xor
add
or
xchg
inc
push
inc
shl
(bad)
stc
(bad)
cli
xchg
add
pop
cdq
sbb
fldcw
jge
aas
repz
lea
out
dec
repz
sub
daa
pusha
cmp
sub
push
ror
cmc
push
test
in
scas
pop
outs
and
or
sbb
adc
push
or
add
cmp
js
aad
jo
ficomp
hlt
adc
dec
ins
adc
mov
(bad)
sub
test
fcom
rcr
cmp
pop
shl
daa
js
out
xor
je
mov
hlt
adc
shl
push
popf
mov
sti
repz
sub
aam
das
pop
ficom
xchg
or
and
test
push
movs
inc
jmp
ret
pop
sub
dec
sub
mov
outs
push
out
in
(bad)
cmp
mov
out
xchg
sbb
out
sahf
movups
xchg
cmc
scas
repnz
adc
stc
push
add
jne
xchg
jbe
pushf
adc
adc
jno
dec
and
sub
push
(bad)
jg
dec
mov
jae
aam
inc
jns
xor
xor
pop
and
fwait
jecxz
and
mov
out
aaa
push
sti
loopne
lea
cld
push
xor
aaa
adc
lock
in
jl
or
fld
inc
pop
in
xchg
int3
adc
loopne
loop
xchg
popf
bound
popa
fs
mov
dec
xchg
int
xor
ret
out
retf
push
scas
jb
push
in
popf
enter
jmp
sbb
shl
repz
dec
mov
xor
jmp
lea
push
add
or
pop
adc
bnd
sbb
rol
ret
stos
sbb
sub
xchg
sbb
inc
and
fabs
inc
dec
mov
in
gs
add
repnz
dec
jns
movs
adc
ret
adc
mov
in
ins
ret
mov
mov
cmps
inc
inc
jno
loope
dec
es
add
fwait
dec
sbb
in
jne
sub
jae
ss
(bad)
dec
cmc
hlt
mov
cmps
fisubr
stos
mov
pop
push
cmp
retf
xor
into
mov
cmp
jg
hlt
jl
les
out
rep
jecxz
or
and
add
retf
add
dec
dec
xor
retf
push
scas
mov
xchg
shr
push
pop
sub
out
imul
ins
cmps
nop
xor
mov
push
sbb
inc
gs
push
mov
sbb
fwait
test
mov
push
pushf
iret
mov
lds
cld
popf
jns
stc
dec
je
push
xchg
sbb
add
add
icebp
pop
aad
jno
mov
mov
mov
dec
xor
sub
retf
out
cmp
sbb
dec
or
aad
push
nop
mov
loopne
xchg
add
imul
cmc
and
add
and
icebp
dec
push
mov
dec
sar
aam
xchg
cmp
lahf
aas
and
pop
jecxz
addr16
loop
cmps
clc
cld
out
rcl
cmps
pop
les
sub
fldenv
ss
(bad)
stos
ficomp
movs
test
or
jne
jo
pusha
je
add
icebp
xor
clc
out
es
push
imul
fld
fidivr
adc
test
jle
sbb
out
jl
push
push
lock
xrstors
jle
or
icebp
loope
jl
lds
(bad)
sub
jns
das
mov
cmp
ss
xor
add
dec
mov
(bad)
pop
ret
rcl
mov
retf
push
xchg
cmp
retf
jge
leave
and
inc
loopne
(bad)
sahf
imul
retf
pop
xchg
mov
mov
(bad)
mov
arpl
push
push
mov
scas
clc
int
push
ret
push
ins
xchg
pop
in
fidivr
mov
(bad)
push
mov
out
out
xor
(bad)
out
clc
dec
clc
clc
pop
xchg
(bad)
jnp
push
and
push
fwait
mov
xchg
push
mov
mov
mov
cmp
cs
sbb
dec
mov
sbb
push
xlat
push
rcl
xor
mov
dec
xor
sbb
sar
movs
xor
adc
xlat
fisub
pop
adc
mov
xchg
outs
mov
xor
int
je
out
jno
mov
jmp
je
(bad)
out
dec
outs
add
mov
or
jge
add
mov
xchg
pop
retf
out
out
es
std
retf
jmp
shl
jne
adc
pop
mov
mov
(bad)
sub
arpl
dec
mov
rol
mov
jl
in
push
dec
xor
je
leave
je
and
call
cli
and
xchg
push
dec
into
iret
loopne
neg
sbb
mov
or
cpuid
xchg
jmp
jg
add
sub
aam
pop
movs
jle
inc
stc
out
cld
pop
xchg
push
push
cmp
xor
adc
adc
xchg
add
push
cld
jo
push
(bad)
sub
mov
enter
fisub
jle
out
lods
test
ds
stc
mov
jg
sbb
dec
pop
or
pop
jmp
stc
mov
mov
test
push
mov
push
xchg
sbb
adc
xor
int3
xlat
test
out
enter
and
fs
mov
out
jl
push
scas
fild
test
sbb
loope
jae
xor
jmp
jns
cld
nop
adc
xchg
gs
adc
mov
sbb
pop
dec
sub
wbinvd
add
cmp
fs
add
test
sub
aam
mov
mov
popa
mov
loopne
pop
dec
out
popf
(bad)
mov
das
xchg
mov
mov
mov
jecxz
mov
mov
mov
arpl
jmp
pushf
sub
push
test
or
add
sbb
sub
xor
ins
and
pop
retf
add
ss
call
clc
sti
sbb
call
bound
mov
inc
mov
ret
xor
add
aad
mov
and
and
pop
(bad)
in
cmp
inc
add
inc
(bad)
jge
xor
fs
loopne
neg
fiadd
in
push
int
sub
neg
out
xchg
in
pop
dec
gs
push
sub
bound
and
cmp
xchg
fwait
mov
inc
xchg
xor
mov
sahf
int3
xchg
jl
fs
push
das
jl
add
pop
and
or
outs
inc
dec
sbb
sub
jg
ja
mov
cmp
xchg
adc
inc
xor
rcr
jg
popa
and
pop
mov
adc
popf
rcr
pop
dec
add
ja
mov
sub
(bad)
push
or
mov
inc
outs
sub
or
cmp
xor
jo
pop
xor
sbb
enter
pushf
jp
mov
and
mov
fcmovu
inc
and
jae
add
loope
push
ds
sbb
js
je
jecxz
pop
inc
mov
mov
mov
stos
mov
add
pop
mov
add
imul
mov
add
jnp
jmp
jl
ret
aaa
icebp
(bad)
dec
loopne
lahf
jp
das
mov
push
or
cs
push
div
fcom
call
shr
xchg
pop
sbb
or
xchg
pop
lock
fchs
mov
shr
sbb
(bad)
repz
xchg
cmc
scas
pop
ret
jp
outs
jmp
or
ja
sub
sbb
cmps
xchg
sbb
jg
add
clc
push
or
clc
jle
fidivr
aas
clc
mov
ret
clc
in
inc
mov
jge
xor
icebp
fsubr
bound
ret
cs
iret
jecxz
imul
jl
push
aaa
div
cmc
lods
xor
repnz
int
mov
in
out
push
icebp
scas
adc
test
(bad)
(bad)
cmpxchg
(bad)
fcmovu
and
ret
push
push
aaa
mov
sbb
mov
sbb
xchg
jns
fdivr
mov
pop
stos
(bad)
popa
dec
icebp
mov
jl
retf
pop
ret
std
sbb
movs
repnz
cmp
rcl
and
gs
mov
or
and
hlt
jbe
inc
fcomp
(bad)
jecxz
inc
repnz
stos
mov
push
ret
pop
repnz
or
xchg
in
imul
xchg
inc
add
retf
mov
sbb
mov
icebp
dec
adc
shl
loop
jp
sub
bswap
cdq
xor
jg
js
dec
mov
stos
mov
loopne
add
xchg
je
stos
dec
stos
xchg
int
ins
sahf
dec
mov
inc
loopne
mov
mov
inc
xor
in
mov
and
jb
xchg
icebp
dec
arpl
pop
out
pop
test
lods
dec
jo
retf
retf
push
push
pop
dec
loop
dec
lock
and
stos
stos
mov
add
push
sub
outs
jecxz
std
addr16
(bad)
jge
fst
mov
mov
pop
xlat
lods
fmul
iret
stos
jae
jp
popf
loopne
aam
adc
dec
push
sti
ror
xor
mov
xlat
mov
std
push
mov
xchg
popf
cdq
addr16
add
push
clc
or
jg
xor
imul
sar
jle
fyl2x
push
repz
pop
sub
jne
hlt
cmc
bound
push
mov
aaa
fdiv
sub
cmp
sbb
push
in
nop
add
and
popa
test
jg
push
movs
xor
shl
fs
xlat
shl
mov
repnz
stos
mov
outs
xlat
lods
and
cmps
cmps
push
and
movs
in
mov
pop
dec
mov
sar
dec
sub
addr16
add
xor
cmps
jmp
ret
pop
sbb
xchg
xor
xchg
out
aaa
push
sti
loopne
(bad)
mov
dec
add
dec
les
xchg
adc
fadd
sub
pop
mov
dec
test
fld
or
fisubr
mov
icebp
les
inc
or
jge
ins
add
fldcw
and
add
push
mov
nop
or
push
imul
or
xor
or
or
push
daa
mov
ja
shr
(bad)
mov
and
dec
or
inc
inc
fild
mov
jle
mov
std
data16
test
inc
dec
or
ret
int
mov
add
pop
jp
mov
lods
add
or
scas
retf
rcl
push
push
adc
jp
sbb
dec
push
test
imul
(bad)
mov
shl
sub
shl
and
ficom
leave
xchg
xchg
(bad)
in
cdq
mov
sbb
sar
sub
mov
jmp
push
jle
rol
or
push
rol
aad
(bad)
xchg
or
test
pop
add
push
jecxz
push
cs
jl
ror
aaa
pop
jo
out
jmp
xchg
cmps
jp
push
xor
push
pop
clc
sub
and
sahf
in
jb
scas
pop
ds
pop
adc
mov
or
push
(bad)
out
retf
jl
cmp
clc
jnp
mov
mov
push
jne
add
daa
popa
imul
loop
fist
jbe
stos
out
jb
mov
cmps
or
fidiv
pop
inc
mov
rcl
fwait
pop
ja
and
mov
jae
retf
rcr
pop
mov
(bad)
popa
adc
ss
fwait
or
rol
sub
xchg
punpcklbw
cmps
xor
les
pop
les
and
mov
adc
fwait
movs
dec
sbb
imul
mul
jo
mov
cmp
int3
sub
jmp
out
leave
dec
mov
pop
pop
stc
enter
out
push
out
das
iret
adc
cmp
cmp
(bad)
mov
dec
in
adc
clc
movs
or
xchg
mov
mov
loopne
clc
mov
sbb
daa
xlat
lock
jmp
adc
outs
jmp
ret
mov
sbb
dec
rcr
loope
fdivrp
and
lock
repz
sub
fldenv
repz
lods
pop
pop
icebp
iret
pop
sub
push
aaa
xchg
lea
adc
outs
cmp
inc
pop
pop
fcmovnb
jmp
jge
jne
aam
out
push
push
cwde
mov
out
sub
mov
int3
jle
cld
mov
ret
lods
cwde
cld
sbb
inc
ss
jae
ins
in
ins
popa
mov
fnstsw
in
adc
add
push
cwde
lahf
call
data16
adc
addr16
daa
mov
push
test
sbb
dec
ja
setl
aad
cmp
cli
sbb
push
fcmovbe
(bad)
mov
ja
js
add
fmul
mov
mov
xchg
pop
xchg
int
pop
push
xchg
or
sbb
pop
arpl
ja
mov
dec
inc
retf
stc
fisubr
fcomp
sub
cdq
retf
imul
inc
and
mov
clc
inc
push
add
inc
cwde
mov
jmp
lds
leave
push
cmp
xchg
movs
jno
lea
inc
cmp
jns
fistp
aad
cmp
dec
jne
sbb
loope
movs
mov
push
repz
dec
inc
adc
adc
aam
cld
inc
add
call
pop
jnp
fisub
adc
add
xchg
sub
pop
inc
and
jl
in
outs
mov
jbe
cli
lods
and
(bad)
dec
out
cmp
loope
xor
cmp
and
repz
jnp
sbb
ja
fs
xor
push
inc
and
cmp
mov
fwait
add
pop
in
stc
adc
adc
loopne
adc
stos
push
bound
rcr
(bad)
push
(bad)
mov
stos
sahf
orps
pushf
or
cld
into
or
and
mov
iret
(bad)
loope
adc
dec
or
xor
jbe
push
outs
es
push
movs
cmp
add
xchg
ret
xchg
cmc
push
stos
movs
scas
mov
retf
test
and
dec
adc
(bad)
ins
cmps
pop
push
ja
and
sub
sbb
jmp
cmp
or
fwait
and
out
js
js
inc
mov
loope
sti
(bad)
(bad)
ds
inc
jecxz
inc
std
xchg
xor
inc
sbb
stos
ins
sub
clc
jg
push
cmc
or
sbb
mov
retf
push
(bad)
pop
push
xchg
arpl
call
dec
add
adc
scas
leave
add
add
inc
test
jl
pushf
loope
push
in
fisttp
lahf
scas
jo
jl
sbb
cmc
sub
or
inc
stos
and
xchg
add
pop
rcr
out
sbb
push
or
sub
pop
repnz
mov
cmp
out
pop
clc
cmp
add
cmp
cmc
xchg
push
inc
mov
and
cmp
dec
ja
mov
push
push
out
mov
ins
je
out
jbe
in
jne
stos
mov
lods
mov
jle
pop
and
stos
test
adc
nop
fisubr
push
into
inc
inc
idiv
gs
cs
cmp
push
adc
test
ret
iret
and
or
movs
iret
loope
pop
mov
in
cmp
hlt
sub
dec
fidivr
bound
add
retf
push
repnz
imul
jle
xor
outs
jg
sub
sbb
push
repz
add
push
in
repz
mov
xlat
addr16
loope
scas
inc
xchg
iret
inc
shl
scas
mov
mov
outs
jg
sbb
xchg
es
jno
adc
fwait
dec
rcl
pop
dec
inc
loopne
add
int
fucomp
pop
hlt
nop
add
pusha
and
xor
in
in
jns
sbb
mov
add
xor
test
sbb
test
xchg
repnz
push
movs
arpl
xchg
mov
push
cmp
fwait
push
imul
pop
mov
dec
add
jge
fld
pop
std
call
addr16
(bad)
aas
xchg
jge
and
mov
push
jne
or
and
mov
mov
cdq
mov
pop
imul
mov
pop
retf
and
dec
test
push
adc
mov
mov
fisttp
(bad)
dec
xchg
add
std
dec
cld
loope
inc
loop
inc
and
les
mov
rol
stc
xchg
adc
jns
imul
sub
sbb
repz
clc
in
daa
and
xchg
sbb
xlat
lock
push
or
retf
mov
cmc
aas
cmp
int
dec
nop
or
cmp
(bad)
mov
es
and
not
repz
cwde
popf
(bad)
cli
out
ss
out
lods
mov
dec
into
into
mov
call
shl
out
pop
jne
scas
jae
imul
ins
push
stc
jle
mov
ret
cmps
mov
rol
rcl
fcmovnb
mov
mov
test
push
pop
xchg
xchg
or
rol
call
rcl
cmp
and
call
rol
repnz
xor
je
out
pop
lods
push
and
imul
cmp
mov
cmc
sub
shl
xor
inc
aam
xlat
pop
add
fsub
icebp
repz
mov
push
sbb
cmps
mov
fs
in
and
jnp
dec
pop
cmp
pop
dec
and
ds
adc
(bad)
(bad)
fwait
sbb
jne
in
lock
test
shl
adc
push
push
sub
jmp
inc
add
xor
cmps
push
xchg
sub
repnz
pop
push
add
push
(bad)
out
add
adc
pop
pop
les
jecxz
lahf
jns
aaa
sahf
jl
je
push
shl
fadd
ja
mov
push
push
mov
popa
xor
cmc
mov
retf
and
mov
jmp
inc
and
movs
inc
cmps
fmul
enter
inc
in
sub
iret
int3
and
push
or
push
out
push
aas
and
in
adc
push
push
jnp
lods
int
and
popf
cwde
sbb
dec
xor
cld
jns
xchg
loopne
ret
stos
call
xor
mov
sub
mov
inc
call
mov
fild
stos
sub
(bad)
lahf
jmp
and
test
and
inc
cs
test
and
jns
sahf
and
shr
jl
adc
xchg
cmp
inc
add
jmp
sar
test
in
dec
and
and
sub
mov
lds
mov
mul
cmc
das
add
pop
xchg
add
jmp
(bad)
mov
jbe
loopne
dec
add
jno
rcl
cmps
push
pop
cmp
jle
pop
pop
jno
shl
pop
pushf
mov
repnz
loop
mov
retf
inc
das
and
xor
mov
sub
and
ja
push
sub
mov
inc
sub
xor
scas
(bad)
cmp
or
or
dec
shr
jbe
popf
lods
loope
fnstsw
(bad)
ja
mov
icebp
enter
jge
jo
sub
mov
test
or
enter
outs
test
jae
fsubr
xor
push
xchg
inc
xchg
xchg
push
jne
add
add
ss
rcl
and
inc
xchg
adc
sub
xchg
and
push
int
les
jns
pop
adc
in
fcomp
push
xchg
ja
jo
dec
adc
push
pop
jmp
hlt
lock
nop
dec
cmps
cdq
or
data16
or
sub
adc
call
repnz
mov
or
push
push
and
shl
xor
mov
scas
xor
adc
ja
push
sbb
out
push
mov
sti
ror
hlt
push
cmc
aaa
mov
sbb
xchg
(bad)
(bad)
and
adc
sbb
es
push
and
pop
xor
xor
nop
iret
and
push
or
arpl
addr16
adc
pop
retf
sub
push
pop
mov
nop
in
inc
push
sub
test
loopne
lea
cld
cmps
icebp
jmp
dec
lods
lods
dec
mov
mov
jbe
adc
push
xchg
xchg
out
jns
shl
outs
push
pop
dec
push
pop
daa
test
in
sahf
xchg
loop
movs
nop
je
cmps
repnz
sahf
fist
xor
pop
iret
fild
sbb
stc
aaa
das
loopne
std
pop
or
call
lock
lock
in
dec
clc
into
cmp
jg
or
xor
iret
loope
(bad)
imul
daa
mov
pop
jae
mov
mov
js
fldenv
out
jnp
jnp
fdivr
cmp
ins
gs
popa
out
hlt
add
jl
arpl
xchg
iret
jo
sti
sahf
test
rcl
add
mov
mov
sbb
mov
les
cmp
(bad)
jmp
inc
(bad)
xor
out
mov
jecxz
jle
sub
clc
out
mov
aas
xchg
lods
popa
jl
or
das
inc
outs
imul
add
in
int3
sub
bound
adc
push
sbb
mov
lahf
cwde
inc
(bad)
cmp
inc
sar
xor
sahf
popa
jle
dec
pop
cli
push
add
fdiv
sub
or
dec
jb
es
add
jbe
pop
(bad)
out
ins
sbb
push
xchg
add
jl
mov
mov
lods
cmp
adc
mov
dec
pop
inc
bound
cmp
test
and
jmp
jp
imul
mov
imul
sub
sub
xor
test
and
jns
inc
or
adc
mov
pop
ret
out
pop
pop
dec
inc
not
adc
out
and
ss
call
xlat
inc
ret
fdivr
je
popf
es
scas
scas
mov
xchg
push
iret
imul
lods
ror
inc
ins
mov
(bad)
imul
xchg
xchg
icebp
loopne
xchg
mov
mov
mov
jnp
cmc
mov
fisttp
fisubr
ret
push
int3
cmp
mov
pusha
mov
leave
(bad)
mov
repnz
movs
lock
fxch
pushw
add
sub
out
mov
mov
inc
ror
add
and
cmp
loop
(bad)
je
xchg
lock
loope
sahf
sahf
call
into
out
add
mov
push
cmc
retf
sbb
mov
rcl
movs
add
push
fild
leave
dec
hlt
xchg
and
xor
inc
mov
sbb
sti
add
jmp
jne
adc
loopne
addr16
out
stos
jne
and
pop
mov
mov
push
add
mov
stos
inc
and
push
sub
dec
xlat
(bad)
jmp
and
xchg
push
inc
inc
pop
loope
jne
sub
add
div
ffree
dec
dec
mov
inc
jae
push
into
add
sbb
add
leave
cmps
adc
xchg
pop
hlt
sub
jg
mov
neg
sbb
push
cmc
je
and
mov
adc
adc
lock
cld
jmp
clc
cwde
(bad)
faddp
ror
daa
mov
shl
mov
cmc
mov
pop
loopne
jo
ja
out
popa
outs
data16
pushf
mov
adc
xchg
sub
add
in
nop
xchg
mov
push
lods
in
nop
jae
jb
or
xchg
pushf
cmps
inc
dec
mov
in
gs
repz
add
xchg
add
pop
mov
test
aad
pop
jmp
pushf
fstp
ret
nop
pop
mov
pop
in
iret
iret
rcl
fadd
dec
mov
cmp
test
mov
in
ins
ins
popa
cmp
or
(bad)
jg
pop
sbb
clc
pop
adc
push
mov
cmp
sub
shl
xchg
dec
and
adc
mov
inc
mov
sahf
retf
int
jl
lahf
retf
or
ret
rcl
or
(bad)
and
mov
mov
arpl
add
popf
push
shl
gs
repz
add
test
or
mov
aas
cmp
mov
xor
test
mov
dec
or
(bad)
lahf
rcr
sub
inc
(bad)
outs
push
test
ret
sub
sub
sahf
jmp
fs
and
mov
in
xlat
xor
rol
rcr
jp
cmp
pop
add
sbb
pop
dec
adc
mov
dec
push
dec
xchg
lahf
iret
cmp
nop
(bad)
shl
stc
push
cdq
dec
cmp
mov
push
test
inc
mov
pop
sub
int
inc
imul
or
fs
jl
sbb
cli
in
jl
sti
into
loope
jle
add
stc
out
xchg
imul
add
clc
aaa
rol
(bad)
jge
out
jl
or
sti
ret
lods
aaa
or
dec
add
cmps
loop
mov
xchg
int3
out
retf
test
movs
std
in
sub
test
in
sub
ret
and
popf
fnstsw
ret
xchg
dec
aas
mov
neg
jno
std
aam
cmc
aad
(bad)
out
xor
loopne
(bad)
or
pop
jl
mov
cmp
mov
sub
(bad)
call
dec
mov
sub
fstp
mov
call
loopne
pop
(bad)
dec
scas
mov
ins
sar
test
jle
sub
and
sbb
call
xor
mov
test
scas
pusha
popa
ins
lea
int
cmp
jg
std
jl
out
nop
dec
ror
std
add
add
and
and
inc
and
lods
popf
(bad)
call
and
iret
mov
sub
jmp
sbb
aam
movs
fadd
and
ret
adc
stos
mov
data16
xchg
test
or
leave
cmp
jmp
call
bnd
adc
cmp
and
adc
xchg
sbb
and
and
dec
dec
dec
inc
and
xchg
mov
ror
xchg
mov
loope
dec
push
inc
jge
sub
cs
xlat
inc
das
sbb
dec
lds
xor
popf
or
mov
aad
xchg
and
xchg
arpl
pop
dec
shr
fcmovu
ss
dec
nop
or
std
rol
xor
and
int
aas
adc
adc
andnps
or
inc
mov
bound
inc
aad
add
sti
stos
add
xchg
fs
and
sti
mov
add
cld
pop
xchg
sub
scas
ins
or
jae
arpl
dec
or
push
cmp
and
push
out
scas
cmps
rcl
fsubr
(bad)
mov
or
stc
add
sbb
cmp
xlat
stos
sbb
fs
pop
nop
fwait
cmc
xor
xchg
imul
push
pop
popa
adc
mov
add
jg
mov
sub
sub
sub
or
adc
cmp
rol
jecxz
cli
std
(bad)
arpl
cld
mov
pop
lds
rol
arpl
xchg
test
sahf
xchg
mov
xor
or
add
sub
add
(bad)
xchg
push
sbb
dec
fs
mov
pusha
popf
aas
addr16
test
cmps
nop
stos
neg
fs
leave
inc
push
sbb
pusha
dec
add
and
push
inc
cmp
mov
push
xchg
lea
repnz
push
sahf
cs
add
data16
jg
shr
or
(bad)
call
imul
xchg
jp
xlat
popa
mov
(bad)
xor
loopne
lock
sub
or
stc
stos
enter
push
les
pop
pop
in
ffree
push
and
sub
jecxz
mov
mov
sub
and
mov
retf
lock
stc
scas
fidivr
mov
(bad)
mov
pop
push
repz
pop
js
adc
imul
add
dec
inc
jmp
retf
mov
inc
add
push
leave
mov
jmp
retf
out
sbb
sub
mov
xor
push
cmp
xor
out
ds
daa
cmp
pusha
test
(bad)
aas
rcr
in
retf
pop
test
cmp
xlat
jbe
mov
mov
and
pop
loopne
add
sbb
add
in
adc
lock
xchg
cmp
pusha
mov
imul
mov
inc
shl
add
push
jle
sbb
add
mov
inc
xor
not
scas
xchg
xchg
mov
(bad)
mov
imul
(bad)
cmp
stc
pop
mov
aam
push
pop
pop
dec
jne
inc
and
loop
xchg
ret
sub
loope
xchg
call
fsub
jno
jb
out
leave
out
push
test
retf
jl
xchg
jae
(bad)
jmp
lock
jg
and
daa
das
loopne
mov
dec
loopne
and
aas
sbb
out
ss
rcr
js
pop
push
fidivr
test
jp
xchg
pop
dec
das
xchg
sub
mov
jo
jb
mov
pop
int3
loop
mov
stc
pop
mov
addr16
or
(bad)
ror
cli
lods
xor
xchg
xchg
xchg
mov
mov
mov
push
ins
out
outs
jecxz
(bad)
push
iret
ret
and
cld
jle
stos
lods
sbb
and
in
adc
fcom
push
and
mov
or
stos
mov
sub
inc
mov
mov
imul
jle
repz
cwde
pop
pop
ret
or
mov
add
lock
mov
test
mov
scas
push
mov
mov
mov
sbb
rcl
lods
mov
jle
div
mov
mov
xor
je
add
dec
or
cmc
mov
and
fisubr
ret
cmc
mov
stos
adc
mov
imul
sahf
jb
js
movs
daa
(bad)
and
sbb
dec
inc
fs
je
test
mov
xor
sar
cmp
jb
adc
pop
aam
test
add
in
arpl
add
movs
mov
sbb
cmps
inc
fmul
push
ss
adc
mov
and
add
pop
adc
aaa
inc
dec
sbb
leave
test
loopne
lods
lds
cdq
movs
adc
xchg
jno
fidivr
in
pop
(bad)
mov
std
add
and
cmp
mov
pop
sti
jmp
mov
sub
fidivr
pop
pop
retf
dec
xchg
inc
leave
dec
mov
in
outs
jge
(bad)
imul
std
mov
dec
rcr
aam
xchg
mov
clc
cmp
int
mov
in
ret
and
or
add
(bad)
and
cs
loop
mov
jnp
aad
enter
test
push
aam
outs
mov
jnp
call
pusha
addr16
ins
mov
and
test
out
retf
shl
rcl
jmp
pusha
std
xchg
xor
xchg
out
aaa
push
sti
loopne
lea
or
popa
inc
and
cmp
xor
xor
sub
add
and
int3
add
arpl
loopne
adc
out
call
dec
ds
dec
(bad)
and
xchg
inc
je
shr
xor
mov
aam
jl
mov
mov
push
adc
sbb
ja
daa
dec
pop
in
pop
mov
pop
fadd
push
stos
(bad)
aad
xchg
popa
sub
push
out
cmp
push
(bad)
mov
ins
mov
mov
add
inc
mov
es
mov
mov
in
ret
mov
aaa
add
inc
sbb
lods
sub
or
jle
mov
lds
mov
or
cwd
jmp
adc
add
lock
xchg
xchg
mov
ror
push
(bad)
xlat
xchg
popa
xchg
(bad)
les
outs
aam
push
push
mov
and
cmp
or
pop
pop
sbb
mov
retf
(bad)
sahf
aaa
sti
int
sub
out
adc
mov
inc
aas
or
adc
sahf
sbb
xchg
popa
mov
shl
dec
cmc
out
and
jge
fmul
iret
stos
inc
push
jae
call
pop
pop
or
jnp
mov
nop
add
fcmovbe
xlat
jmp
pop
sub
xor
loop
(bad)
mov
and
in
jp
jg
sahf
mov
cld
adc
add
mov
cld
dec
fs
adc
xor
ja
enter
xor
adc
xchg
cmp
shl
inc
sub
pop
jbe
cdq
inc
sbb
in
and
retf
inc
inc
test
add
inc
dec
gs
cmp
mov
cmp
add
lahf
jecxz
aam
sbb
mov
les
adc
stos
mov
adc
or
mov
or
or
movs
(bad)
addr16
adc
lods
jo
int3
mov
int
fwait
or
fcmovu
ja
sbb
sbb
out
jl
sbb
fwait
loope
idiv
movs
cli
push
add
cmp
clc
mov
or
in
fimul
jge
sbb
pushf
gs
(bad)
push
(bad)
adc
mov
sub
loope
mov
xor
cmp
leave
mov
adc
stc
xchg
test
pop
pop
inc
pop
js
hlt
push
mov
call
clc
scas
outs
jb
push
stc
lahf
push
jecxz
into
sbb
ror
aad
ins
retf
inc
psrad
(bad)
ffreep
dec
scas
mov
dec
xchg
shr
mov
mov
scas
or
mov
cwde
pop
pushf
and
iret
fwait
std
jmp
pusha
dec
push
add
dec
pop
pushf
ret
aam
or
fwait
xor
and
lea
aaa
cmp
add
push
mov
or
sub
mul
jne
ret
dec
in
(bad)
popa
mov
cmps
lahf
jmp
add
push
xchg
push
stos
aad
xchg
stos
jmp
mov
loop
push
data16
push
inc
sahf
or
mov
fadd
cs
and
cdq
test
clc
aad
data16
mov
mov
cld
inc
push
xor
fimul
dec
in
in
call
imul
dec
adc
push
xlat
fmul
addr16
loopne
retf
lea
cmp
mul
jo
add
pop
sbb
das
pop
(bad)
mov
sub
xor
inc
out
adc
aas
ss
adc
mov
xor
pop
(bad)
sub
or
into
fild
push
ret
popf
les
jle
into
(bad)
aam
xchg
test
hlt
push
push
lds
jg
cdq
pop
jle
xchg
adc
mov
mov
fisubr
jle
sbb
sub
sbb
mov
cmc
lods
loop
(bad)
mov
xlat
fs
add
inc
repz
push
and
in
adc
jge
adc
inc
(bad)
cld
jns
sub
add
inc
mov
mov
push
call
pop
jmp
sbb
jecxz
stc
scas
jb
or
repnz
dec
iret
pop
es
jg
ins
add
movs
arpl
jmp
jmp
jb
dec
mov
imul
sbb
leave
or
aad
ss
sub
xlat
jb
mov
ret
sti
mov
mov
cmp
mov
mov
(bad)
mov
xchg
pop
pop
loop
retf
push
mov
fdecstp
pop
hlt
jbe
psubusw
mov
or
adc
ins
add
pushf
out
jp
jl
push
leave
imul
leave
add
fisub
fsubr
mov
stc
retf
(bad)
adc
(bad)
xor
stos
cmp
das
jle
cdq
add
fadd
movs
sub
sub
add
lods
sahf
loopne
push
xchg
ins
(bad)
sub
pop
push
xchg
ins
adc
mov
dec
mov
xchg
adc
pop
popa
xchg
push
push
ja
sbb
push
pop
call
xchg
sub
xor
jg
xchg
call
dec
dec
in
add
xlat
mov
lahf
dec
lahf
xchg
jmp
(bad)
in
mov
adc
jmp
sbb
loope
fcmovne
jmp
test
lock
sub
mov
mov
inc
jge
and
fld
dec
mov
(bad)
sbb
or
movs
clc
(bad)
es
add
lock
mov
pop
xor
inc
xor
rol
(bad)
fisubr
jno
out
pcmpeqd
popa
push
add
xchg
dec
mov
call
dec
(bad)
cli
sti
cmp
clc
pop
mov
cmp
dec
jne
adc
cmps
shr
enter
sbb
das
leave
in
ror
mov
jmp
ds
push
push
cmp
mov
xor
iret
out
fmul
cmp
push
out
scas
mov
dec
out
das
loope
sbb
popa
js
sti
xchg
lock
mov
sub
shr
add
xchg
cdq
mov
rcr
(bad)
jecxz
xchg
fs
cmp
add
mov
push
pop
jae
and
mov
jno
iret
push
sbb
pop
fidivr
outs
jmp
cmc
fdiv
sbb
mov
sti
ss
push
test
outs
loop
(bad)
jle
aaa
sahf
mov
fsub
xor
in
add
add
repnz
stc
test
jns
dec
mov
pop
pop
pop
(bad)
in
int3
add
sti
pop
js
push
inc
mov
dec
fstp
in
cmps
mov
dec
xchg
inc
cmc
aas
ss
int3
lods
test
and
pop
pop
rol
xor
pop
add
arpl
sbb
fwait
les
dec
inc
mov
(bad)
ds
sub
jmp
push
es
cmp
jnp
pop
sub
mov
fidivr
mov
mov
pop
popf
(bad)
push
push
pop
push
arpl
lahf
xlat
imul
loopne
test
pop
jl
call
lock
inc
mov
mov
sub
push
mov
in
sub
sti
add
movs
dec
pop
aad
jae
adc
bound
repz
jae
addr16
scas
pop
and
mov
sbb
xchg
inc
in
int
lods
les
cdq
mov
sub
out
jnp
dec
repnz
out
xor
inc
and
mov
push
xchg
add
stos
jno
mov
xor
ja
push
cld
mov
test
cmp
adc
mov
popf
cld
in
push
xchg
and
retf
fmul
xchg
cld
add
jns
pop
pop
std
cmp
cmp
jle
mov
cmp
jbe
push
outs
popa
mov
xchg
mov
mov
add
cmp
out
clc
sub
add
loopne
fs
icebp
mov
(bad)
adc
push
mov
into
pop
inc
test
arpl
movs
out
mov
push
dec
lock
loopne
sub
jle
test
repnz
mov
push
scas
mov
movs
mov
(bad)
(bad)
sbb
jne
inc
lock
aas
add
das
js
and
stos
adc
ins
pop
jp
retf
scas
push
xchg
call
inc
add
or
inc
inc
adc
push
(bad)
mov
dec
outs
out
push
cmp
push
mov
add
test
sub
cmps
push
pop
fisubr
sub
fs
sti
mov
xor
push
push
pop
push
xlat
das
fisubr
aam
ins
push
xchg
in
and
(bad)
and
mov
imul
fisub
push
hlt
adc
aad
xchg
mov
jmp
adc
iret
ss
mov
out
sahf
push
jle
jle
mov
lods
int3
in
fwait
add
or
push
(bad)
cld
cmp
sub
and
xor
lahf
pusha
dec
mov
adc
and
and
push
lea
jl
sub
add
and
dec
retf
inc
mov
call
xor
and
jb
xchg
adc
adc
and
shl
rcl
xchg
ret
dec
push
clc
test
mov
mov
or
fnstenv
cs
jno
inc
push
pop
scas
in
cli
cmp
push
movs
cli
cmp
lock
sbb
jo
call
shl
inc
mov
xor
jle
in
add
mov
stos
and
cld
inc
or
ins
cdq
call
call
(bad)
aas
paddd
xchg
ins
out
lahf
cld
in
loope
sub
arpl
lahf
cmp
sub
or
push
inc
cmp
les
dec
in
and
lea
pop
inc
or
push
pop
mov
cmp
nop
pusha
es
xchg
xchg
inc
and
sti
lahf
or
jb
push
daa
mov
adc
in
loop
sbb
mov
retf
lds
cmovae
ins
or
fidivr
scas
stos
cwde
pop
jle
sub
jecxz
scas
ja
lods
push
scas
loop
pop
mov
sbb
ret
xor
out
dec
xchg
shr
les
cdq
mov
(bad)
out
mov
out
fwait
mov
out
and
jecxz
les
push
sbb
sbb
push
push
sub
sub
mov
and
dec
dec
dec
xor
xchg
mov
pop
mov
inc
clc
inc
or
xchg
out
into
mov
pop
ret
dec
pop
cli
xor
iret
outs
arpl
in
jnp
(bad)
cmp
or
jp
push
sbb
ins
loopne
(bad)
or
bound
pop
pop
cld
lods
push
mov
sbb
outs
sbb
jle
pop
rep
imul
mov
lea
sub
call
sbb
call
cmps
xor
adc
loope
jbe
push
mov
mov
jl
mul
add
xchg
pop
or
(bad)
aas
inc
mov
and
pop
inc
pop
jmp
jp
jnp
jae
mov
push
xchg
sub
push
mov
cld
push
push
jne
mov
in
push
xchg
push
add
leave
jle
xchg
inc
or
push
add
mov
sar
popa
sub
add
jno
xchg
(bad)
jmp
adc
stos
gs
sub
ss
test
stc
repnz
enter
add
lea
or
int3
dec
inc
push
inc
or
sub
dec
mov
(bad)
jbe
rcl
jp
jmp
(bad)
dec
mov
aaa
mov
cli
push
xchg
mov
cli
xor
jle
jae
lods
fst
mov
jmp
fwait
in
add
mov
dec
fs
cwde
aas
or
stc
inc
adc
cmp
(bad)
mov
sbb
fs
jae
mov
adc
jns
fdivr
inc
sti
cld
(bad)
(bad)
iret
inc
push
movs
mov
jmp
call
mov
movs
dec
push
sbb
push
xchg
icebp
or
xor
mov
pusha
scas
lock
dec
and
xor
mov
dec
dec
scas
(bad)
fisubr
mov
push
iret
pop
imul
out
stos
cmp
sub
imul
aad
pop
ja
in
ret
mov
jno
std
jle
mov
jle
js
sub
push
mov
dec
add
mov
adc
push
xor
fild
jmp
retf
add
leave
xchg
cmp
ret
cmc
adc
enter
ins
jb
call
imul
xchg
dec
push
push
and
retf
or
dec
test
sub
rcl
or
fprem1
xchg
jl
aad
push
adc
or
loop
leave
mov
add
mov
fcmovu
popf
pop
sbb
call
and
cs
push
dec
mov
push
add
(bad)
cwde
cdq
sbb
add
add
dec
lods
mov
mov
loope
clc
fcmovnb
or
push
fwait
inc
inc
lods
loop
ins
mov
fld
or
mov
in
and
xchg
stc
push
adc
and
xlat
cmps
es
mov
fs
into
dec
mov
add
(bad)
iret
mov
nop
dec
dec
pop
lods
adc
gs
push
enter
arpl
mov
leave
push
adc
arpl
or
rcr
add
retf
fbstp
push
hlt
sbb
pop
or
sbb
jg
sub
dec
inc
aas
pop
iret
rol
add
std
cwde
xchg
lahf
ins
shl
inc
mov
cmp
stos
jl
dec
dec
rcl
lods
cmp
inc
jne
mov
test
add
inc
inc
jmp
sub
xor
lock
(bad)
cmp
repz
rol
enterw
out
xor
push
lock
enter
inc
add
jo
scas
add
xchg
sbb
push
pop
cmp
shl
add
add
and
retf
out
nop
cmp
test
mov
push
and
mov
loopne
mov
(bad)
xor
stos
jne
repz
mov
iret
xchg
int3
in
repz
xor
xor
xlat
jg
sbb
cli
jmp
lods
jg
adc
jecxz
js
push
scas
add
sbb
jg
sbb
mov
arpl
js
cmp
mov
ins
pushf
xchg
xor
push
retf
and
xchg
or
(bad)
test
xor
push
jae
leave
inc
dec
leave
ins
retf
push
push
ror
or
xchg
inc
xchg
or
push
xchg
and
addr16
mov
cmps
dec
xchg
mov
sahf
jnp
(bad)
mov
repnz
mov
scas
pop
aaa
scas
sbb
hlt
and
mov
cmp
out
and
jbe
faddp
loope
fwait
add
sub
adc
jg
fcom
int
bound
xchg
repz
fwait
call
xchg
fcmovnu
xchg
mov
add
rol
out
sbb
mov
push
pop
rcl
fild
lahf
fisttp
pop
mov
push
pop
inc
out
aam
mov
or
mov
adc
mov
sbb
cmp
ror
test
jnp
repz
push
bound
inc
pop
mov
sub
pop
into
cmp
cmp
cmp
cdq
pop
adc
push
in
cwde
(bad)
jmp
sub
call
sub
push
pop
out
out
sbb
pop
pop
push
pop
inc
test
jns
(bad)
rol
out
sbb
xchg
or
add
adc
dec
inc
inc
push
add
shl
iret
into
add
mov
lea
inc
cmp
dec
xchg
enter
jle
ror
cmp
mov
and
mov
aas
iret
xchg
jg
add
xchg
cdq
dec
mov
push
push
leave
jge
cmp
mov
mov
mov
sub
and
and
adc
jecxz
xor
sub
and
enter
movs
aam
stc
jno
stos
mov
rcl
mov
jns
bound
dec
enter
sbb
mov
pop
xor
jne
sti
jmp
and
repnz
push
adc
mov
scas
lock
inc
inc
add
pop
xor
xchg
and
ja
ror
pop
mov
pop
pop
out
fistp
sub
stos
cmp
inc
push
jo
mov
or
push
das
in
add
test
cmp
xor
popa
loope
push
jb
pop
int3
or
sbb
test
syscall
jp
jl
jmp
stos
ficom
cli
(bad)
fistp
stos
adc
add
push
arpl
arpl
fdivr
adc
faddp
ret
pop
hlt
lods
and
div
pop
cmp
test
mov
repnz
cs
leave
bound
cmc
push
movs
push
hlt
sbb
sbb
ficom
movs
cmp
cmc
fnstcw
test
jl
stc
test
push
sti
repnz
and
inc
jb
imul
nop
mov
push
mov
ret
dec
mov
test
or
inc
mov
fadd
ror
into
iret
dec
mov
xchg
xchg
(bad)
jle
out
sub
leave
jl
xor
stos
ja
or
cmp
outs
shl
cmp
cmp
cmp
add
dec
sbb
jl
pop
in
ss
mul
add
int3
iret
icebp
out
sbb
jg
add
mov
das
movs
dec
in
cli
mov
jl
mov
jns
ret
cld
jg
scas
adc
cmc
bound
popf
mov
add
(bad)
sbb
arpl
test
aam
inc
xchg
add
push
push
adc
or
mov
and
daa
int
retf
into
mov
es
retf
push
inc
mov
dec
or
daa
add
adc
cmp
mov
mov
cs
cs
mov
pop
bound
pop
sub
loopne
cmp
jb
xchg
stc
sub
into
and
push
loopne
lahf
cmp
shl
popf
jg
add
xchg
adc
mov
or
mov
imul
mov
xor
jne
jg
and
into
adc
das
adc
mov
or
mov
add
push
adc
cmp
pop
push
mov
dec
sub
mov
(bad)
cmp
and
xchg
pushf
arpl
xchg
call
js
ret
pop
lds
jg
daa
lock
ds
add
aaa
dec
xor
test
add
xchg
mov
aas
cmp
icebp
cmc
adc
mov
out
xor
push
dec
sbb
adc
jmp
mov
and
lods
bound
in
test
pusha
push
push
and
add
add
xor
add
ficomp
inc
call
xchg
(bad)
mov
aas
dec
adc
cmp
mov
cli
cli
xchg
inc
mov
lea
imul
or
outs
in
xor
fisub
dec
cmps
and
ss
arpl
loope
test
add
or
in
xchg
xchg
cmps
push
sbb
push
adc
mov
movs
call
pop
test
addr16
add
mov
cld
in
pop
push
pop
leave
div
(bad)
jns
call
cmp
add
push
jb
inc
cmp
dec
xor
sbb
cmp
adc
mov
call
jne
mov
adc
stos
and
inc
sub
shl
cmp
enter
sar
(bad)
imul
cdq
cmps
popf
scas
mov
retf
retf
sub
test
pop
inc
sahf
sti
cmps
test
cmps
rcr
adc
lods
adc
call
push
mov
or
dec
mov
in
cmps
sub
in
lods
jbe
repnz
push
fwait
ja
lods
sub
rcr
push
xchg
movs
mov
sub
jne
mov
outs
mov
movs
sub
pop
aad
and
mov
out
shl
mov
add
addr16
pop
add
idiv
push
pop
int3
jg
jecxz
js
jle
mov
jle
js
(bad)
call
cmp
jg
cmp
push
js
jne
ins
sub
xchg
and
movs
sub
mov
xchg
xor
rcl
inc
ror
sub
iret
fld
adc
(bad)
mov
push
and
jbe
jb
ret
adc
pop
xor
fsub
fist
xchg
xchg
adc
pop
jl
scas
popf
xor
and
out
inc
pop
mov
mov
jnp
pushf
loopne
mov
nop
dec
repnz
or
cmps
mov
cwde
fs
xchg
xchg
repz
aam
sahf
sub
inc
jmp
add
and
add
sahf
mov
push
loopne
cmp
sar
stos
jno
inc
test
add
loopne
mov
jbe
xor
push
pop
sub
popf
iret
iret
dec
dec
push
lahf
in
jo
mov
xchg
adc
inc
cmps
retf
fild
test
out
jns
retf
push
mov
enter
in
cmp
and
test
push
clc
pop
movs
inc
push
push
test
lds
add
lods
and
add
scas
les
lock
repz
jne
imul
sub
mul
test
sub
jmp
add
pop
out
mov
outs
int
jmp
and
mov
test
or
cmp
jle
inc
aas
adc
add
adc
push
arpl
out
(bad)
ret
movs
repnz
cld
cmps
es
push
xchg
mov
mov
rcl
out
mov
dec
in
xchg
inc
in
inc
inc
pop
(bad)
jns
or
lods
xor
pop
xchg
pop
aam
in
mov
and
xlat
dec
add
into
jecxz
push
addr16
mov
std
or
div
or
lods
fidivr
je
jns
mov
in
sbb
push
push
pop
rol
sahf
jmp
pop
sub
stc
jge
dec
fs
ins
mov
sub
xor
popf
inc
(bad)
repnz
aas
sar
fisub
ret
mov
stos
pop
cmp
mov
call
jl
and
cld
sahf
out
add
repz
push
push
stc
stc
mov
mov
jmp
dec
ja
mov
dec
stos
jge
mov
xor
mov
inc
push
int3
iret
xor
dec
sahf
xor
push
aam
jmp
enter
in
and
mov
sub
aaa
(bad)
inc
sub
pop
xchg
push
data16
test
jns
aad
dec
pusha
sub
loope
das
inc
push
scas
mov
push
sbb
fwait
cmp
test
in
sub
ins
arpl
adc
pop
pop
shr
xor
(bad)
cmps
out
cwde
pushf
loope
jns
and
call
in
inc
data16
push
inc
sar
xor
lock
dec
shl
imul
scas
iret
fbld
add
ds
je
inc
pop
call
in
inc
jbe
dec
(bad)
repz
cmp
in
ret
inc
cmp
inc
mov
add
mov
scas
inc
add
cld
mov
repnz
call
and
mov
enter
inc
shl
sub
les
into
retf
es
push
and
repz
sub
sub
aas
into
pop
stos
fsubrp
push
sub
add
xor
fmul
or
add
push
(bad)
jne
cld
fmulp
(bad)
lock
sbb
mov
xor
add
mov
sub
jno
sub
(bad)
stos
pop
push
repz
les
int
jp
adc
cmp
das
add
scas
test
xchg
ret
jmp
mov
or
pusha
sub
in
inc
inc
in
xchg
mov
dec
jecxz
retf
jecxz
retf
xor
add
loope
jae
(bad)
adc
xchg
je
mov
sbb
fisubr
push
add
repnz
push
sbb
lds
pop
mov
out
mov
mov
jg
jecxz
js
jle
mov
jle
clc
repz
fnsave
inc
or
sbb
push
hlt
call
adc
push
ror
test
pop
cmc
sti
push
and
test
cs
(bad)
dec
es
xlat
xchg
push
and
test
fwait
dec
jne
(bad)
pop
ror
daa
ret
xor
nop
jp
mov
push
push
cmps
xor
dec
or
sahf
nop
test
test
popf
test
retf
lock
adc
call
aad
imul
gs
xchg
mov
inc
jle
dec
ds
xchg
fldenv
ss
hlt
retf
daa
clc
dec
sub
dec
xor
(bad)
lahf
mov
add
and
jp
mov
push
int3
iret
push
sbb
rol
adc
push
cs
ins
cld
int3
push
cld
dec
push
xchg
inc
add
xor
mov
les
inc
inc
enter
mov
xor
mov
jb
xchg
sub
retf
popa
scas
into
xor
jo
jmp
rcl
pop
push
mov
dec
dec
xchg
add
inc
dec
or
fmul
mov
xchg
lea
lods
outs
hlt
arpl
or
jp
push
push
cli
xor
fbstp
ret
out
sub
pusha
add
add
fsubr
push
jp
and
out
inc
shl
dec
loopne
inc
call
js
push
loopne
xor
inc
xor
pop
movs
push
add
dec
cwde
loop
call
jp
push
fsubr
push
cmp
ja
sub
pop
or
xchg
dec
cs
dec
xor
sub
pusha
out
scas
inc
pop
sbb
pop
push
stos
leave
cmp
mov
or
ret
ss
and
mov
jns
or
push
inc
and
push
add
pop
mov
push
inc
mov
cmp
inc
sub
enter
dec
adc
dec
mov
mov
and
js
mov
jl
fistp
pop
(bad)
mov
pop
and
cmp
lock
popf
xlat
mov
fwait
or
cmp
clc
mov
retf
clc
daa
jae
cmp
dec
cmp
loop
dec
xchg
fwait
inc
push
pop
pop
pop
ret
ins
enter
sbb
inc
call
jecxz
ds
ss
clc
jg
into
jb
or
sub
mov
push
push
(bad)
mov
mov
and
retf
clc
in
mov
add
add
dec
int3
or
mov
iret
mov
ins
jno
iret
arpl
(bad)
cwde
dec
int
dec
pusha
push
push
aam
add
sub
clc
mov
jmp
sub
cmc
and
lock
jmp
pop
cwde
(bad)
loopne
mov
(bad)
hlt
repnz
rcr
or
adc
rcr
adc
add
xor
mov
pop
fimul
or
nop
mov
sbb
and
std
mov
mov
test
push
std
sub
mov
outs
pop
sbb
dec
(bad)
jp
pop
stos
and
push
aam
xor
shl
sub
mov
adc
xor
xchg
in
stc
sub
mov
add
push
add
lds
mov
push
and
test
mov
mov
js
cmp
dec
sbb
xchg
and
inc
mov
test
mov
sub
cmp
xchg
bnd
dec
push
mov
pop
dec
push
push
call
and
repz
mov
inc
and
je
in
push
add
and
and
fisubr
loopne
xor
iret
jae
mov
dec
push
and
out
sbb
dec
mov
xchg
es
sub
mov
mov
xchg
lds
inc
xchg
lock
jge
push
xchg
(bad)
not
out
fisub
push
std
dec
int
sbb
pop
imul
mov
dec
xchg
push
fsubr
scas
xchg
mov
dec
jno
cmp
movs
push
cld
xchg
xchg
sti
add
mov
cmp
call
jle
bound
pop
into
aaa
imul
pop
scas
mov
(bad)
call
lock
ds
mov
add
or
imul
xchg
out
shr
je
xchg
sbb
inc
jbe
nop
rcl
jb
stc
stos
nop
pop
push
fnstenv
sbb
sar
push
push
pop
xor
mov
add
xchg
pop
int
mov
dec
and
and
inc
add
rcl
fld
add
out
pop
sbb
cmp
aad
push
mov
mov
push
out
inc
push
mov
mov
xor
xor
outs
and
mov
jno
rol
cld
retf
add
imul
mov
(bad)
repnz
ins
ins
or
imul
push
imul
out
push
imul
dec
push
and
div
mov
sar
retf
fst
add
mov
cld
adc
pop
inc
push
xor
xor
xchg
or
mov
shl
test
mov
mov
or
mov
ja
cld
mov
scas
les
sub
idiv
outs
ins
outs
mul
jnp
add
inc
inc
inc
pusha
jae
dec
add
xchg
inc
ds
inc
adc
(bad)
bound
out
ja
or
adc
clc
xor
add
imul
push
pop
add
sbb
cmp
adc
(bad)
in
clc
cmp
mov
mov
jmp
sbb
and
lock
js
add
or
repz
lods
fsub
ja
mov
mov
sbb
and
mov
push
inc
push
cmc
inc
inc
test
xor
rol
mov
(bad)
int
xchg
mov
fwait
sub
imul
retf
xchg
mov
test
scas
lods
mov
stos
or
mov
ret
jo
mov
das
xor
jne
sbb
fdivr
push
outs
cld
jle
fdivrp
das
push
lock
aas
aas
xchg
ins
or
pop
dec
add
ret
retf
les
ret
icebp
xor
and
into
stos
push
xor
retf
dec
cmp
fist
popa
ret
mov
inc
sub
inc
push
scas
sbb
hlt
rcr
bound
js
gs
sub
mov
daa
adc
jmp
dec
mov
mov
int3
xchg
jle
pop
sti
(bad)
das
loop
repz
sbb
cdq
movs
xchg
push
push
mov
je
stc
loope
add
cmp
clc
cmp
add
cli
data16
loopne
call
mov
hlt
cmp
adc
stc
cli
test
in
into
outs
popa
mul
or
repz
pop
(bad)
out
ss
jbe
mov
dec
mov
mov
out
dec
push
out
and
rcr
and
ror
inc
or
add
pushf
aaa
add
mov
and
sbb
jae
cmp
push
adc
cli
cmp
mov
mov
leave
cwde
push
test
into
dec
adc
adc
not
mov
pop
aad
mov
jp
mov
ret
cmp
out
jbe
cld
retf
loope
je
loop
inc
inc
sub
jle
movs
xor
push
inc
adc
mov
mov
scas
jmp
stos
ret
sub
les
mov
sub
adc
gs
enter
xor
or
sbb
jae
xor
leave
mov
dec
add
iret
adc
lock
call
adc
xchg
movs
fcom
inc
lock
call
(bad)
pop
pop
cmp
mov
fild
dec
mov
sub
ins
test
jb
adc
pop
je
ins
jmp
or
xor
cmps
or
aam
pop
test
xchg
lea
inc
dec
mov
enter
add
inc
inc
call
and
das
call
mov
(bad)
cmps
and
js
jle
mov
jle
clc
repz
fnsave
push
adc
mov
jbe
cmp
mov
xor
mov
inc
jb
adc
sub
dec
div
data16
mov
push
sub
shl
add
outs
inc
pop
inc
add
mov
mov
out
sbb
adc
inc
cmp
dec
cmp
cmps
dec
mov
push
cmc
mov
push
jg
pop
adc
sub
xchg
jnp
ret
push
xchg
aam
push
sub
popf
push
or
gs
loope
test
lods
in
pop
pop
mov
lods
adc
ss
mov
inc
(bad)
push
(bad)
test
inc
jg
xor
out
dec
pusha
ja
inc
pusha
fwait
movs
add
stos
push
aaa
fild
adc
mov
mov
aaa
shl
dec
lahf
add
and
pop
dec
push
das
or
cs
push
movs
cmp
mov
cs
pop
daa
fwait
rcr
das
jmp
xor
push
add
pop
fwait
or
femms
cdq
clc
mov
clc
std
jb
hlt
call
lods
sub
dec
in
mov
test
mov
lods
outs
icebp
ja
or
addr16
cld
int
and
dec
sbb
pop
loop
pop
xor
aam
mov
mov
int3
jbe
adc
push
les
in
sub
adc
cmp
push
and
and
std
or
mov
dec
add
mov
lock
xor
jns
xor
sub
or
push
cmp
iret
and
mov
repnz
es
bound
adc
das
inc
ins
(bad)
and
gs
stc
jns
and
fnstsw
xor
out
sbb
mov
gs
jae
stos
lods
xchg
(bad)
jg
xchg
xchg
sbb
mov
in
movs
push
popf
das
mov
aam
xor
ins
pop
test
ja
mov
dec
cmp
jp
sub
aas
(bad)
jno
lock
clc
imul
(bad)
clc
cli
(bad)
pushf
ret
cmp
adc
mov
in
loop
loop
lock
adc
push
imul
push
pop
ja
pop
mov
or
in
add
adc
icebp
xor
push
sub
sub
nop
push
xchg
push
mov
js
pop
clc
xchg
pop
lds
lahf
js
imul
fstp
and
shl
xor
sahf
jmp
push
daa
mov
push
addr16
sub
adc
(bad)
mov
sub
js
push
ret
adc
push
daa
or
xchg
(bad)
or
push
imul
mov
lods
addr16
(bad)
mov
addr16
fstp
(bad)
ficomp
push
cmovs
xlat
xor
adc
les
adc
(bad)
cmps
data16
add
shl
add
adc
cld
sahf
ret
data16
sub
inc
add
in
push
pop
inc
daa
fidivr
adc
xor
pop
mov
in
in
and
sbb
lods
push
sbb
rcr
add
add
push
push
mov
lock
sbb
adc
call
or
lock
sbb
and
(bad)
push
mov
dec
js
imul
ds
inc
outs
pushw
dec
jns
xchg
test
scas
test
inc
repnz
(bad)
cld
jl
(bad)
pop
fcom
push
test
aam
mov
sbb
ins
cld
sbb
pop
mov
jo
inc
push
or
jle
(bad)
jmp
es
pusha
mov
inc
sub
iret
mov
jns
movzx
call
push
push
dec
stc
sub
outs
nop
xlat
rcr
sub
push
adc
jae
and
fild
push
movs
and
sub
push
inc
xchg
mov
adc
out
or
cmps
xchg
es
add
push
in
push
sub
aad
dec
fld
mov
push
(bad)
push
push
push
stc
add
or
inc
mov
pop
add
sbb
(bad)
jge
add
fnstenv
push
inc
loopne
xchg
inc
push
and
push
fist
adc
mov
and
pop
mov
fldlg2
icebp
fs
jg
or
test
popf
dec
push
fldenv
fcmove
and
fistp
dec
jge
push
sub
xor
fsub
mov
pop
mov
push
sub
adc
in
sub
mov
leave
(bad)
xor
push
data16
push
stc
jno
fisttp
xchg
jmp
xchg
sbb
rol
xchg
jmp
add
retf
add
adc
fisttp
hlt
popa
popf
cmp
sbb
mov
inc
or
out
in
lea
inc
push
push
clc
and
sub
scas
je
je
mov
loopne
aaa
fild
push
adc
ficomp
push
cmp
push
arpl
test
mov
jno
mov
stc
in
push
dec
adc
div
adc
ja
push
adc
adc
push
mov
jbe
mov
xor
in
sti
sub
mov
pop
adc
xchg
add
cmc
rcl
mov
clc
stc
pop
mov
fld
sbb
mov
xor
test
dec
add
imul
xchg
aas
cmp
retf
xor
add
inc
dec
xor
dec
rcl
mov
xor
fiadd
lahf
push
sub
rcr
data16
sub
dec
iret
hlt
push
mov
xor
push
in
imul
ds
jl
out
sti
clc
cmp
dec
push
xchg
int
jns
popf
popa
fdivr
jnp
les
arpl
shr
imul
inc
outs
xchg
sbb
pop
xchg
adc
in
push
sub
add
push
or
inc
jo
js
clc
jle
out
lods
int
sbb
out
and
adc
call
adc
inc
mov
sbb
push
mov
(bad)
(bad)
jnp
enter
cmp
outs
std
pop
or
cld
ins
and
jp
movq
jg
popf
sub
and
stc
mov
add
pop
cmp
repz
ja
test
(bad)
test
add
test
push
retf
fistp
inc
dec
xor
adc
aam
cmp
retf
outs
adc
jb
cdq
(bad)
adc
cli
fstp
das
jle
mov
fwait
push
loop
jmp
and
mov
pop
cmp
and
es
xchg
ss
pop
push
sbb
iret
std
ret
push
js
sub
(bad)
arpl
sbb
pop
stos
cwde
and
cmovg
add
add
mov
hlt
mov
dec
push
jmp
test
cmp
jle
neg
scas
arpl
push
pop
(bad)
out
ins
popa
jle
aad
adc
popa
jo
push
or
es
es
or
xor
cmp
iret
cwde
ret
or
arpl
call
sub
in
add
add
mov
dec
mov
ja
jmp
sbb
pop
push
xor
mov
ror
adc
or
aad
scas
mov
sbb
lock
in
push
fwait
sub
and
jmp
xchg
push
push
pop
jae
lods
sub
data16
push
xchg
mov
xor
dec
or
addr16
and
aad
in
jg
cmp
stos
inc
mov
add
push
xchg
adc
sub
inc
ins
adc
sahf
out
cmc
not
push
loopne
inc
sub
mov
fidivr
aaa
xor
mov
xchg
fs
fwait
pop
cmps
iret
adc
jne
in
sbb
ret
cmp
dec
cmp
pop
mov
xor
dec
dec
mov
mov
or
(bad)
mov
cmp
leave
sbb
(bad)
repz
sub
outs
xchg
sub
adc
pop
std
sub
inc
shr
xchg
push
into
jg
ss
pop
je
cmp
jecxz
mov
cmp
aas
push
xchg
mov
mov
enter
ror
or
fbld
in
adc
xor
jno
jmp
ins
dec
or
mov
pusha
mov
xchg
push
lea
fldcw
jbe
push
mov
setne
pusha
xor
mov
add
fiadd
adc
push
out
inc
pop
inc
or
ret
lahf
push
xchg
stos
mov
inc
(bad)
jns
(bad)
push
cmp
dec
add
mov
adc
cmp
inc
lock
movs
loop
(bad)
cmp
std
and
out
pusha
add
sti
ret
sbb
push
sbb
sbb
mov
sbb
in
outs
outs
test
pusha
or
int3
mov
pop
es
pusha
jno
or
popa
mov
xor
ror
sub
inc
xchg
(bad)
inc
mov
ins
mov
in
push
out
sub
mov
sub
and
and
pop
rcr
push
dec
js
iret
stos
mov
rcl
gs
add
add
enter
mov
clc
dec
stc
imul
jge
pop
fwait
fwait
and
ins
in
or
and
xchg
(bad)
and
sbb
loope
pop
pop
push
jno
out
imul
mov
jp
xchg
add
leave
mov
jbe
sbb
or
ds
dec
ja
cmp
sub
push
fwait
loopne
hlt
hlt
jp
pop
xchg
mov
add
cmp
(bad)
nop
sub
mov
mov
test
dec
push
jl
cmp
xchg
cmp
sub
xor
mov
xchg
adc
fbstp
xor
fist
mov
stc
push
add
push
dec
(bad)
push
jmp
jmp
sbb
xor
retf
add
sbb
popf
jb
xchg
sbb
inc
mov
and
lock
ja
sbb
pushf
mov
pop
test
std
fisttp
dec
push
test
retf
cmp
(bad)
push
lahf
in
les
push
ret
ja
sub
(bad)
ins
or
jecxz
clc
(bad)
inc
inc
icebp
mov
std
sub
leave
jmp
adc
sub
xchg
inc
std
lea
cld
jle
pusha
stos
lods
push
mov
and
sub
xchg
aad
push
push
and
repnz
push
test
fptan
jg
push
push
bound
pop
das
mov
icebp
xlat
icebp
hlt
or
loope
push
pop
(bad)
div
aad
hlt
sysret
clc
sti
sbb
push
jno
ret
icebp
mov
pop
mov
(bad)
lds
in
test
or
cmp
jmp
mov
out
es
dec
bound
and
inc
ret
shl
cs
repz
xor
or
movs
mov
or
jno
dec
ins
sbb
add
cmp
inc
xor
mov
cld
daa
dec
add
mov
sub
xchg
sbb
and
ds
xor
shl
or
inc
ja
pop
pop
cmp
jnp
or
dec
sbb
push
in
push
stc
ss
test
(bad)
mov
ret
adc
in
fcomp
out
inc
push
jae
sbb
scas
xchg
(bad)
mov
mov
out
into
jecxz
mov
lea
cmp
xor
push
popf
mov
mov
out
test
ret
cmps
fidivr
scas
stc
adc
in
stos
jnp
repnz
sub
nop
sub
sub
scas
push
ret
ss
inc
sahf
or
adc
mov
cmps
push
mov
cmc
pop
pop
out
loope
push
inc
mov
or
retf
mov
cmp
adc
cmp
iret
lahf
add
jmp
call
inc
sbb
out
push
adc
js
xor
repz
sbb
lea
sub
fnsave
mov
cmp
mov
jnp
leave
fwait
xchg
pop
mov
pop
in
gs
out
or
xchg
xchg
in
adc
add
mov
loop
cs
fnstsw
call
add
push
in
ins
sub
xchg
mov
ret
std
inc
and
cmp
jecxz
jge
pop
xchg
sub
fs
int3
sub
cdq
pop
cmp
pop
outs
jns
push
lods
sub
sub
arpl
loop
in
clc
mov
pop
mov
and
stos
icebp
(bad)
ss
inc
inc
xchg
xchg
pop
mov
sub
mov
push
sbb
or
ja
push
pop
pushf
mov
or
and
inc
rol
in
or
sbb
(bad)
test
sgdtd
ror
test
cmp
sbb
add
ret
shr
add
cmp
xchg
xchg
jno
popf
int
cmp
mov
(bad)
(bad)
cmps
push
adc
sub
jmp
pop
mov
fisub
or
sub
(bad)
push
dec
iret
or
push
dec
fimul
or
ins
push
add
lods
sub
mov
scas
and
push
xor
xor
iret
jle
(bad)
sub
scas
mov
call
mov
cmps
sub
and
fidiv
rcr
das
mov
arpl
push
arpl
lock
push
xchg
fimul
pop
pop
mov
sbb
pop
call
jp
and
imul
(bad)
mov
(bad)
pop
addr16
push
inc
cs
dec
xchg
sub
sbb
into
fidiv
jg
arpl
add
cdq
pop
jle
repz
and
enter
addr16
cmp
sub
inc
movs
ins
mov
fild
dec
jg
dec
aas
jae
jecxz
(bad)
(bad)
daa
inc
or
inc
stos
stos
mov
cmp
xchg
xchg
int
test
sub
stos
inc
push
and
xchg
(bad)
add
pop
mov
test
mov
adc
push
xor
sbb
sbb
add
xchg
dec
adc
ins
xchg
push
mov
inc
stos
push
movd
outs
mul
pop
test
aaa
fild
and
test
jle
or
and
or
xor
pop
sbb
adc
and
out
fcmovbe
adc
outs
dec
mov
mov
dec
jae
add
fld
and
stos
xor
xchg
std
dec
imul
pop
ins
and
out
ret
mov
repnz
lock
ret
fstp
pusha
jb
nop
(bad)
jno
add
pop
inc
dec
xlat
ins
add
pop
leave
mov
mov
outs
fs
adc
in
fs
add
aad
sub
bnd
add
aaa
cmc
test
lahf
sbb
repnz
and
cmp
div
jo
push
dec
jnp
pusha
push
inc
test
cwde
pushf
fwait
(bad)
(bad)
fnstsw
mov
jp
nop
xchg
fldenv
and
(bad)
cmp
cwde
pop
cwde
and
test
inc
cmp
cmp
icebp
add
setne
rol
(bad)
adc
adc
aas
cli
sti
pop
shl
cmp
push
push
and
xor
leave
cmps
xlat
jecxz
iret
cmps
mov
add
jp
or
pop
cmp
xor
icebp
lock
mov
cmp
and
in
add
aas
mov
mov
pop
add
or
push
mov
stos
cmp
fwait
mov
cmp
stos
and
loopne
ja
retf
adc
test
stos
ret
xchg
fs
cwde
test
and
adc
cmp
pop
sahf
pop
xchg
imul
lods
out
mov
(bad)
jp
out
xchg
add
inc
mov
jg
movs
mov
push
jg
inc
xor
pop
jle
or
mov
std
pop
stc
jnp
add
fstp
test
in
xor
push
inc
sahf
in
jg
rol
adc
mov
add
dec
test
popa
pop
cs
cmp
inc
inc
xchg
mov
sub
movs
sbb
nop
xchg
sbb
test
jg
ins
sub
nop
inc
in
stos
adc
sbb
js
push
aas
dec
mov
(bad)
mov
std
(bad)
arpl
cld
mov
cmp
das
xchg
xchg
push
aas
movs
add
add
rcr
adc
loop
or
mov
dec
pushf
call
lea
in
int
lods
mov
push
in
test
push
in
and
dec
push
mov
add
push
adc
imul
push
(bad)
pushf
out
adc
mov
dec
retf
sub
call
xor
ror
adc
add
pop
cwde
fwait
ins
ret
pop
mov
jnp
cli
std
add
sub
and
xor
cmps
pop
cmps
addr16
sbb
cmp
push
gs
jo
xor
xor
inc
add
dec
sub
fcomp
jmp
hlt
jno
adc
cli
or
ret
add
rcr
jmp
inc
dec
or
shl
mov
push
stos
jnp
cmp
fisttp
(bad)
and
xor
and
add
out
pop
add
or
mov
add
or
inc
lahf
in
(bad)
and
retf
cmc
das
pop
cli
daa
mov
rcr
and
xor
push
(bad)
sub
xor
pop
or
dec
dec
jl
repnz
pop
pop
push
movntps
pop
pop
call
mov
mov
lea
or
sbb
sbb
lods
pavgw
or
sbb
shl
mov
movs
repnz
loopne
out
dec
lock
cmp
xor
aas
xor
leave
out
sbb
hlt
(bad)
mov
dec
mov
jns
xchg
stc
cld
sbb
sbb
push
xor
outs
xchg
add
mov
push
nop
xchg
pop
movs
fs
es
add
mov
imul
aas
cdq
xchg
xchg
mov
sub
add
fwait
fwait
cmp
push
cmps
jb
loope
push
mov
retf
sub
or
cwde
or
xor
hlt
(bad)
out
popf
ja
icebp
in
outs
jne
mov
popa
add
cld
lock
cld
lods
repnz
clc
fs
or
cmp
xchg
bound
js
out
pop
dec
mov
pop
in
sub
aas
push
fst
xchg
int3
into
dec
out
push
add
loop
push
aam
repz
loope
and
ds
jecxz
jg
inc
jl
retf
aas
sbb
loope
shr
sbb
in
addr16
inc
mov
cs
mov
xlat
jecxz
dec
out
sbb
mov
cmp
scas
aas
and
loope
stc
jae
jp
mov
sti
jno
or
shl
xor
or
dec
add
add
das
pushf
inc
outs
inc
mov
and
and
fidiv
mov
jne
jmp
jmp
cmc
inc
mov
loopne
ja
(bad)
push
add
(bad)
std
add
jge
or
movs
addr16
std
or
cmp
(bad)
out
add
aaa
xor
gs
pop
js
test
xor
cmp
dec
sub
pusha
sbb
add
rcl
push
mov
add
xor
add
call
inc
arpl
cmc
pop
shr
mov
(bad)
mov
push
inc
dec
inc
mov
mov
repz
mov
cmps
pop
ds
into
scas
pop
mov
cmp
pop
or
lods
push
cmp
push
call
test
and
mov
in
je
outs
sbb
mov
fs
jle
or
fcomp
test
outs
sbb
inc
pop
xor
jae
push
pop
dec
mov
dec
mov
jae
xchg
adc
mov
sar
xor
dec
ds
xchg
dec
adc
mov
jg
jns
sti
xlat
jnp
pop
adc
sbb
jae
mov
fisttp
ja
psrlq
mov
xchg
dec
repz
enter
adc
adc
xor
stc
and
dec
inc
push
ret
inc
mov
add
and
sbb
mov
and
sub
leave
push
xchg
inc
cdq
dec
push
mov
ins
gs
pop
retf
lods
mov
out
or
ret
jmp
sbb
jecxz
idiv
cmp
in
out
adc
push
enter
clc
aas
(bad)
push
dec
shl
js
sbb
or
int3
inc
arpl
hlt
scas
iret
into
mov
push
imul
std
dec
std
mov
call
popa
aad
mov
je
pushf
sti
js
popf
add
enter
inc
and
xchg
imul
arpl
mov
push
jbe
cs
test
inc
test
cmps
adc
lahf
outs
(bad)
fisubr
inc
lds
daa
fcom
cld
test
xchg
and
test
jno
(bad)
jmp
xchg
cmp
cmps
ret
sub
pop
add
adc
out
out
(bad)
lock
mov
fcomp
shl
mov
or
pop
pop
out
pop
mov
mov
sub
std
data16
dec
in
pusha
ss
sti
lea
cs
adc
shr
scas
mov
out
jae
xlat
xchg
add
jg
inc
push
rcr
jne
or
test
jg
test
(bad)
ficomp
std
add
ds
jnp
std
and
in
adc
mov
pop
(bad)
push
jo
icebp
dec
and
add
stc
pop
lahf
sbb
mov
push
push
adc
in
adc
mov
(bad)
mov
ret
arpl
xchg
mov
pop
xor
ja
ins
adc
(bad)
lods
fucomi
mov
fisttp
inc
or
scas
scas
lock
sbb
xor
leave
fsubr
or
adc
mov
mov
pop
mov
sub
(bad)
stos
sub
jns
sub
cmp
pop
test
push
mov
cld
add
cmp
dec
sbb
fcomp
pop
ret
in
or
or
mov
test
adc
mov
loope
pop
push
xchg
vmaxsd
test
in
mov
xchg
sub
popf
pop
mov
neg
adc
(bad)
push
sbb
push
mov
nop
cwde
mov
xchg
mov
sahf
mov
cmp
leave
mov
stos
inc
jae
lea
mov
push
(bad)
pop
and
in
inc
sbb
out
ret
xchg
icebp
imul
rol
(bad)
neg
cs
aad
imul
cmc
test
xor
nop
pop
retf
push
call
and
bound
dec
mov
repz
mov
addr16
inc
sub
pop
adc
mov
sbb
test
push
inc
adc
xchg
in
and
aaa
dec
jg
add
movs
xchg
jns
ror
out
inc
jnp
or
pop
pop
bound
imul
mov
inc
test
mov
mov
inc
add
xchg
dec
iret
xor
pop
(bad)
mov
sbb
xor
cmps
xchg
fidiv
or
add
and
add
(bad)
and
pop
inc
shr
out
or
popf
lods
in
test
xchg
mov
xor
pop
sar
(bad)
cmp
pusha
and
fisttp
ss
lods
(bad)
add
jp
mov
jle
sub
add
jle
inc
mov
clc
push
dec
int3
(bad)
mov
loop
scas
scas
push
sub
mov
rol
jp
jl
sbb
cmp
fsubrp
jecxz
ins
movs
cmp
mov
ficomp
dec
and
xor
lea
inc
xor
jg
rcl
ret
nop
dec
adc
push
mov
xlat
xchg
mov
pop
mov
lods
ret
jmp
aas
or
mov
mov
pop
mov
xchg
adc
mov
dec
pop
es
pop
push
popa
xchg
mov
and
inc
push
(bad)
cmp
pop
jns
jmp
inc
test
mov
sub
inc
movs
mov
adc
and
push
test
retf
retf
mov
rcr
push
lds
or
cmp
add
jb
es
stc
in
mov
xchg
mov
js
sbb
push
pop
mov
lods
inc
cmp
jbe
sub
cmp
sub
addr16
mov
push
mov
(bad)
and
and
push
sar
cwde
cwde
pop
movs
movs
jb
mov
jb
aam
shr
loop
or
push
push
sti
fiadd
ret
inc
xor
add
add
add
or
in
cs
test
adc
sbb
enter
es
(bad)
xchg
push
dec
(bad)
push
lods
imul
cli
sbb
cmp
shr
sti
out
scas
and
daa
cmps
and
add
jg
xlat
scas
or
mov
aas
enter
(bad)
cwde
leave
test
in
cmc
jmp
mov
adc
jl
adc
aaa
push
pcmpeqd
cld
dec
popa
imul
or
repz
rcl
outs
hlt
adc
pop
jp
mov
fisttp
sysenter
mov
sti
jnp
pop
mov
lods
movs
ficom
mov
test
jb
scas
xchg
inc
loopne
(bad)
loope
arpl
popf
push
and
jg
out
ret
add
lock
(bad)
shl
rcr
loopne
ins
xchg
not
or
ficomp
xchg
inc
iret
inc
or
push
xor
mov
test
scas
xchg
adc
dec
leave
jmp
or
pop
mov
shl
ret
jl
test
dec
mov
in
aas
(bad)
jns
mov
repnz
push
jnp
shl
dec
jmp
mov
nop
jecxz
fs
cmps
mov
lea
sahf
out
and
retf
bound
adc
jmp
cmp
arpl
mov
push
cmp
cld
fcmovnu
cli
add
cli
outs
cmp
cmp
test
out
inc
dec
stos
xchg
or
outs
imul
push
je
add
dec
test
js
cmp
push
dec
test
pop
mov
mov
iret
mov
outs
rol
ins
lock
popa
and
(bad)
test
push
icebp
cmp
lds
push
xor
aad
mov
popf
mov
jecxz
cwde
(bad)
pop
inc
xor
add
jmp
ret
pop
jle
or
mov
lock
repnz
iret
loope
test
call
mov
push
outs
idiv
adc
lds
(bad)
cli
scas
and
mov
xchg
sahf
call
cs
sub
ds
scas
std
hlt
xchg
repz
jge
iret
jge
ret
mov
fistp
bound
or
xor
test
xchg
loop
fisubr
sub
lock
and
popa
and
pop
loope
xchg
in
mov
xchg
movs
jno
out
mov
rol
out
pop
ret
gs
sbb
fsub
in
cmps
ins
lock
sub
ss
ret
gs
ins
dec
sbb
xchg
adc
out
adc
or
mov
repnz
cs
jo
dec
arpl
adc
dec
xor
mov
test
cmp
pop
and
fcomp
mov
and
iret
adc
cmp
mov
dec
call
add
cdq
or
(bad)
sahf
pusha
(bad)
ror
imul
pop
xchg
add
bnd
xchg
icebp
push
mov
repnz
popf
call
sub
je
(bad)
cmp
mov
xor
fbld
rcr
push
mov
mov
cmp
out
xor
cmp
push
mov
pusha
cmp
cmp
push
xchg
add
movs
scas
xor
xchg
pop
xchg
and
dec
xchg
dec
add
inc
das
and
jae
sbb
push
push
repnz
cmps
inc
fpatan
sub
push
(bad)
cmps
shl
adc
or
out
call
pop
gs
jmp
test
add
mov
jae
movs
push
mov
dec
sub
sti
(bad)
push
in
stc
(bad)
dec
mov
jg
test
es
add
sub
push
push
and
inc
cmps
push
inc
inc
mov
mov
push
ins
adc
mov
ficomp
mov
aas
or
jno
std
jle
mov
jle
js
sar
mov
mov
mov
xchg
test
push
mov
dec
pop
cmp
fimul
push
add
add
adc
push
or
(bad)
push
pop
loopne
dec
adc
fst
sub
dec
inc
dec
data16
enter
add
add
add
in
adc
mov
rol
test
sub
rcl
jmp
mov
outs
add
clc
mov
xlat
jecxz
les
push
mov
jmp
xchg
sbb
mov
mov
je
inc
jle
fwait
fwait
and
dec
jg
cmps
mov
sar
cmp
in
and
rcr
add
fld
inc
and
retf
(bad)
push
or
movs
mov
mov
test
ins
adc
inc
jo
aas
ret
out
push
dec
inc
sub
cli
lods
out
and
movs
fbld
cld
fisttp
jecxz
add
clc
jmp
adc
(bad)
lock
sub
mov
iret
into
enter
xor
fld
sahf
fbld
mov
mov
add
mov
push
dec
or
out
jl
(bad)
mov
int
call
or
pusha
mov
adc
cmp
cmp
xor
adc
dec
cwde
push
and
mov
repz
inc
enter
les
(bad)
jae
push
add
iret
repz
neg
(bad)
repnz
and
ret
and
pop
mov
aas
data16
dec
xchg
adc
pop
sbb
loopne
rcl
(bad)
xchg
pop
mov
aad
and
xor
mov
je
fisub
xor
call
jns
sub
out
sahf
push
hlt
psubd
es
int3
lds
mov
add
dec
repnz
repnz
setne
mov
sub
leave
pop
jne
call
imul
aas
shr
adc
inc
std
outs
fdivr
int
sub
clc
leave
mov
clc
fstp
sahf
jnp
push
bound
dec
or
adc
push
push
out
out
es
or
(bad)
das
lock
mov
outs
ffreep
icebp
int
cmp
pop
pop
pop
ret
ret
xchg
inc
mov
sub
cmc
cmp
sbb
shl
out
shl
dec
mov
lea
jno
mov
dec
sub
sar
into
inc
pop
inc
push
xor
adc
xchg
inc
gs
in
fild
mov
and
push
mov
and
push
xchg
and
xchg
and
retf
and
push
add
mov
mov
lea
fcomp
sbb
cwde
out
fst
xor
fidivr
mov
push
cmp
jns
sbb
adc
cmps
test
mov
mov
mov
fs
cmps
pop
sub
xchg
sub
inc
inc
scas
in
or
jle
cmp
xor
ror
mov
cmp
cmp
xor
pop
ret
cmp
leave
lods
fnstenv
outs
out
in
inc
push
pop
sub
cmp
fnstcw
jae
dec
pusha
arpl
mov
xchg
mov
adc
rcl
fmul
jns
mov
scas
pop
pop
mov
aaa
xor
lock
xor
test
test
mov
out
scas
or
xchg
adc
xchg
pop
in
daa
and
xchg
dec
ror
xchg
xchg
push
int
cwde
dec
jle
stc
mov
jge
fistp
xchg
not
add
mov
jge
call
jg
movs
push
lods
xchg
or
cmp
jmp
mov
adc
stc
jge
mov
dec
xor
dec
movs
inc
xor
push
jno
sahf
aas
cwde
xchg
mov
adc
stos
test
xor
and
movs
outs
aam
jnp
push
jmp
inc
xor
iret
mov
mov
and
bound
cli
pslld
shl
mov
xor
and
adc
push
adc
aad
mov
int
dec
cmps
repnz
push
dec
xor
mov
or
add
fmul
in
aad
nop
or
daa
pop
or
push
fs
mov
xchg
sub
mov
into
xor
inc
gs
sub
(bad)
int3
les
jl
cs
mov
pop
sub
or
mov
or
pop
aas
sbb
adc
pop
mov
jnp
js
dec
dec
sub
aas
dec
cmc
aas
xchg
aaa
out
stos
mov
cmps
xlat
inc
sbb
aaa
fidiv
stc
add
and
sbb
adc
and
fcomp
loopne
jae
(bad)
fist
cmp
adc
out
push
iret
pop
mov
movs
ret
in
movs
mov
push
sbb
(bad)
mov
mov
and
cli
pop
sbb
je
shr
xchg
xlat
inc
cmp
cmp
out
mov
jmp
nop
hlt
dec
in
and
test
jle
out
(bad)
int3
and
pop
movs
fs
jne
adc
outs
sub
aaa
das
iret
jbe
mov
sub
fild
mov
ret
push
jg
out
mov
call
mov
push
jmp
test
mov
data16
xchg
add
scas
xchg
add
cli
mov
jecxz
jp
push
addr16
test
aas
cdq
(bad)
std
pop
xchg
sti
mov
sub
and
or
js
pop
mov
je
pop
sbb
cmp
xlat
mov
push
cld
es
dec
loope
cdq
dec
shl
jo
cmp
pop
and
sub
imul
fwait
stos
outs
mov
sbb
fdiv
mov
jle
or
jno
or
(bad)
cmp
and
jge
out
out
(bad)
pusha
pop
pop
jo
dec
adc
ret
mul
aaa
outs
fidivr
xchg
leave
jno
jno
stc
lahf
push
jg
out
std
mov
das
(bad)
(bad)
enter
sub
les
(bad)
and
popa
lods
and
imul
out
lds
mov
mov
pop
(bad)
daa
mov
into
pusha
jb
sbb
aas
inc
test
push
adc
ror
(bad)
lods
ret
cmp
fidivr
or
mov
xchg
iret
mov
pop
push
arpl
mov
push
loope
xchg
sbb
dec
dec
inc
cmps
push
jmp
or
jae
jno
loop
mov
mov
mov
leave
mov
add
pop
sub
inc
sub
sub
push
cmp
xor
jne
pop
pop
sbb
pop
pop
mov
loope
pushf
les
leave
into
in
rol
inc
xchg
push
outs
imul
(bad)
xor
iret
dec
mov
mov
xor
in
popa
xchg
push
pop
or
adc
sbb
not
mov
xchg
jmp
push
add
daa
loopne
cs
cdq
or
int3
dec
pusha
jbe
leave
inc
push
(bad)
cmps
dec
sub
aaa
(bad)
popf
inc
ds
pop
or
iret
bound
sbb
repz
icebp
pop
ficom
leave
pop
sar
sbb
jmp
imul
xchg
data16
mov
pusha
aam
jl
popf
int
pop
jb
loope
sub
dec
dec
cmp
push
push
dec
test
fcmovu
mov
inc
shl
mov
jmp
jns
or
hlt
sub
sub
xchg
xchg
xchg
dec
pusha
lods
test
stos
pop
sub
shl
xchg
cld
cwde
and
(bad)
jle
clc
sti
clc
fild
dec
cs
fnstsw
add
repz
sub
fld
dec
scas
and
inc
ss
mov
sub
ss
call
cmp
pop
dec
stos
sub
add
xchg
mov
push
fdiv
and
cli
push
clc
mov
std
dec
adc
rcl
lock
(bad)
ja
js
mov
jle
mov
jle
jo
push
addr16
pop
popf
dec
and
xchg
cmp
sub
add
jae
loop
(bad)
jl
pop
or
stos
das
mov
xchg
movs
and
and
retf
ret
cmp
xchg
loopne
adc
aam
out
jmp
xchg
es
fistp
loop
xor
sbb
pop
pop
loop
mov
xor
mov
push
stos
into
fs
and
in
cmps
shr
gs
dec
pop
pop
outs
mov
je
cmps
sbb
and
pop
pop
stos
add
adc
add
push
daa
test
fcomp
fs
jns
cli
lea
pushf
adc
outs
fisub
mov
xchg
cmps
mov
cli
sbb
test
dec
fs
or
inc
jecxz
jno
idiv
and
and
push
popa
lahf
(bad)
aaa
iret
push
mov
and
pushf
push
dec
xchg
retf
push
add
xor
cmp
push
or
add
xchg
pop
fwait
test
call
repz
stos
icebp
push
stc
cmc
ja
in
test
or
mov
repz
in
(bad)
retf
ficom
jns
mov
add
repnz
xchg
sgdtd
mov
popa
repz
mov
and
mov
cmp
in
out
call
cdq
or
mov
jnp
lock
pusha
jbe
xchg
test
ins
lea
or
mov
fs
fcomp
pop
repz
jmp
retf
mov
sub
ss
xchg
int3
clc
fcmovu
cld
push
xor
xlat
outs
inc
dec
xchg
test
ins
inc
jae
xchg
movs
movs
mov
xchg
mov
sar
and
and
dec
stc
retf
cli
test
pop
dec
jae
daa
and
jp
xor
mov
sub
jmp
aam
aam
cmp
pop
dec
adc
rcl
aad
lock
aas
dec
inc
lea
lods
push
cs
and
cdq
jmp
pop
nop
adc
stc
cli
jmp
ja
or
and
(bad)
mov
cdq
lahf
stc
cdq
jmp
ret
inc
call
xor
call
cmps
ja
pop
or
pop
fdivr
mov
cmp
xchg
aas
div
push
xlat
data16
cmp
scas
xor
std
jge
or
add
jne
sbb
xor
pop
das
mov
add
loope
jo
push
test
jmp
xchg
ss
test
inc
dec
(bad)
int
aad
(bad)
pop
js
cmps
sbb
pop
pushf
adc
or
gs
and
cmp
imul
push
outs
fnstenv
daa
les
movs
inc
add
leave
int
adc
adc
(bad)
rcl
fiadd
in
and
fiadd
out
mov
pop
add
ret
push
stos
add
xor
add
imul
jl
adc
adc
inc
aad
adc
aaa
cmp
outs
push
sbb
fbld
add
sub
xlat
push
dec
scas
sub
inc
sub
adc
imul
cwde
pop
ffreep
in
mov
int3
retf
cmps
out
inc
mov
ret
mov
pop
(bad)
imul
stos
repz
ficomp
repz
jmp
mov
pusha
je
test
nop
arpl
xchg
ss
push
and
xor
push
cmp
shl
xor
inc
pop
xor
test
mov
or
in
ficom
(bad)
sbb
outs
pusha
pusha
xchg
and
into
mov
adc
xchg
jae
cmp
mov
jns
pushf
adc
cmp
arpl
xor
cmp
pop
sub
xor
imul
mov
aaa
mov
and
push
retf
in
pop
outs
dec
xchg
repz
pop
popf
sub
test
pop
sub
sbb
call
add
in
mov
adc
shl
popa
cmp
fidivr
icebp
fadd
aas
push
push
xchg
pop
imul
push
xor
lea
push
loop
or
and
daa
push
popf
int
ficom
push
stos
repnz
dec
mov
inc
test
sub
mov
jne
retf
fbstp
or
mov
push
stos
mov
xor
jmp
mov
mov
add
inc
xchg
(bad)
dec
inc
es
sub
retf
push
sub
and
cmp
fstp
fwait
sbb
ret
lods
mov
sbb
ss
jnp
mov
push
test
icebp
add
daa
sbb
mov
mov
mov
sbb
or
push
jmp
shr
mov
imul
inc
cmp
fstp
dec
rcr
pop
loopne
xor
adc
(bad)
cmp
ror
cmp
ret
cmc
jecxz
pushf
lock
jecxz
fdivr
sbb
jnp
pop
mov
cs
lods
jne
pop
inc
jo
sub
stos
sub
loopne
rcr
pusha
and
nop
ja
adc
adc
cmp
inc
test
mov
pop
dec
jge
(bad)
dec
sbb
daa
xchg
or
mov
int3
iret
push
sub
aam
cmps
or
ror
push
dec
mov
in
(bad)
fmul
aaa
inc
mov
cmp
pop
std
cmps
jge
fstp
xor
lods
and
jne
cli
add
jbe
xchg
cmc
and
(bad)
cld
fidivr
je
jl
sbb
mov
loope
and
cmp
lea
out
ins
loop
je
test
cmp
mov
pop
sbb
repnz
add
push
pop
jl
xchg
mov
push
scas
and
popf
and
in
int
adc
test
int3
inc
jno
out
data16
or
pop
or
adc
mov
cmc
push
add
adc
sbb
imul
dec
fcmovne
lds
mov
cmp
jg
xor
mov
out
jp
xor
stos
cmp
mov
stos
stos
mov
stos
iret
out
aas
cmp
ds
hlt
in
test
cmp
or
clc
jmp
popa
jl
stos
pop
or
jmp
fist
pop
inc
push
add
aaa
mov
mov
lock
pshufw
xor
outs
in
scas
loope
or
xor
fmul
mov
rcl
cs
(bad)
or
setbe
xchg
cwde
test
xor
(bad)
adc
dec
and
test
push
aam
pop
jb
inc
xor
mov
push
xchg
cmp
addr16
and
push
lds
sub
gs
mov
dec
and
nop
fild
aad
and
fchs
push
imul
dec
dec
cs
mov
adc
pop
fcomp
ffreep
loop
or
jmp
pop
pop
mov
push
push
xchg
mov
pop
out
inc
scas
push
call
sbb
pop
pop
shl
cmp
test
mov
push
and
dec
sub
fwait
push
lds
pop
cmps
xchg
ffreep
jmp
dec
add
in
ins
pop
test
sbb
popa
jecxz
push
pop
jnp
adc
mov
mov
ins
ins
ins
jb
cmp
fisubr
fbld
aad
sbb
bound
or
shl
dec
repz
ins
add
and
push
inc
adc
test
inc
cmps
inc
cmp
ins
pusha
je
cmp
fstp
push
inc
or
push
lock
not
xchg
(bad)
rcr
fld
push
out
xor
es
test
bound
movs
push
out
push
dec
jns
dec
xchg
inc
inc
push
xor
loop
push
inc
adc
jl
dec
test
in
mov
add
mov
cmp
push
xchg
(bad)
mov
mov
das
in
push
cwde
mov
push
mov
aad
sti
test
jmp
xor
jne
out
fidivr
icebp
fadd
aas
push
push
xchg
sbb
mov
aas
push
adc
adc
or
push
and
or
je
clc
xor
int3
bound
mov
add
retf
sub
mov
(bad)
sbb
inc
xchg
sub
dec
dec
adc
adc
xor
cs
cli
cmp
pop
test
fisub
fld
daa
jno
int3
xor
rcl
leave
cmp
aad
dec
dec
xor
sbb
popf
ins
add
inc
(bad)
fst
pop
fcomi
push
mov
mov
push
out
cmps
jo
xchg
imul
jo
(bad)
or
outs
or
dec
add
dec
outs
mov
cwde
out
xlat
fucomip
dec
call
push
push
into
idiv
push
mov
sbb
shl
pop
mov
xchg
jnp
inc
add
(bad)
xor
(bad)
(bad)
retf
popa
jno
push
mov
rcl
in
xor
add
in
and
cs
jecxz
fisttp
fsub
fimul
mov
hlt
stc
test
icebp
xlat
push
pop
xlat
nop
adc
or
lods
scas
xor
pop
sbb
adc
mov
ret
mov
mov
xchg
xchg
jnp
add
cmps
adc
adc
or
aad
outs
inc
or
fucomi
(bad)
rcl
push
js
xlat
add
into
push
jo
cli
and
xor
ror
out
int
pushf
mov
cmp
mov
xchg
pop
fs
push
mov
jecxz
xchg
jb
or
mov
cmp
xchg
jl
iret
imul
leave
xchg
stos
sbb
mov
sub
jbe
stos
jno
jecxz
and
dec
or
enter
dec
push
in
stos
jmp
sub
or
mov
adc
ja
mov
bound
fs
ins
cmp
das
add
mov
(bad)
repz
das
scas
test
clc
sub
mov
lahf
jnp
iret
aas
test
mov
push
push
icebp
fmul
and
inc
(bad)
mov
cmps
movs
loopne
dec
xchg
pop
nop
inc
add
and
mov
push
xchg
aaa
and
inc
sbb
inc
shr
sbb
in
sbb
ss
inc
call
lods
push
clc
cmp
inc
adc
inc
push
push
pushf
or
adc
out
sbb
push
iret
clc
or
sub
sub
mov
and
cmp
jmp
gs
xor
repnz
adc
xchg
xlat
push
adc
xor
add
bound
leave
adc
add
leave
inc
inc
addr16
mov
mov
jl
add
imul
std
pop
int3
dec
dec
bound
sub
fwait
loopne
jle
xor
les
fwait
inc
sti
mov
jno
dec
sub
out
mov
mov
jle
repz
xchg
fdivr
fdiv
inc
dec
out
mov
add
mov
and
xchg
inc
dec
sub
xchg
fs
aas
ss
leave
sub
push
adc
leave
jge
scas
das
xchg
xchg
sub
and
adc
cmp
in
xchg
movs
inc
dec
ret
inc
call
pusha
adc
aas
dec
dec
div
repz
hlt
cmp
sub
repz
or
dec
scas
xchg
mov
xchg
nop
and
sub
mov
sub
into
stc
pusha
pop
stc
jb
push
pop
dec
inc
mov
or
push
dec
adc
dec
xor
mov
xor
xchg
and
xchg
aas
pop
jo
les
add
mov
test
aam
cmp
push
scas
(bad)
sbb
jecxz
cmc
jnp
cmp
add
jne
(bad)
rcr
push
nop
lahf
sti
adc
shl
cmp
out
jne
or
xor
cmp
push
jb
mov
mov
cmp
(bad)
mov
xchg
mov
dec
xor
push
stc
sar
and
sub
mov
adc
call
clc
fdivr
mov
adc
lds
outs
retfw
cmc
xor
xchg
popa
jb
sar
fsubr
xchg
jno
xchg
cmp
das
cmps
and
fistp
mov
add
sbb
aaa
xchg
jecxz
out
xchg
sub
sbb
in
cmp
add
imul
xchg
cld
call
push
pusha
or
add
mov
jbe
lods
sbb
xchg
dec
push
cmp
loopne
sbb
arpl
mov
dec
add
add
dec
jo
imul
out
cmp
mov
jb
push
ret
fs
out
jnp
cld
xchg
je
int
inc
add
movs
mov
outs
adc
div
jno
ins
sbb
ja
add
pop
push
and
dec
fsub
jno
(bad)
jecxz
int
in
out
push
lock
dec
dec
(bad)
mov
mov
jae
add
sbb
jae
cmps
mov
or
lods
iret
cmc
arpl
or
cld
dec
mov
lods
das
or
add
mov
into
fist
scas
mov
mov
xor
inc
push
dec
sbb
mov
cmp
test
pushf
dec
nop
retf
lea
xor
sub
fs
push
loop
push
cmp
inc
jb
jae
adc
stos
mov
dec
in
mov
test
inc
inc
es
add
lea
aad
ret
jecxz
jle
movs
movs
jmp
bound
ss
adc
test
out
adc
std
pop
(bad)
iret
(bad)
cld
iret
xchg
aam
std
fst
xchg
pusha
jae
adc
pop
cld
lock
and
addr16
mov
call
push
jmp
xor
hlt
cli
fwait
adc
aad
sub
enter
cwde
dec
jno
xchg
add
jge
adc
scas
sub
xor
push
outs
out
jp
adc
sub
bound
adc
fcom
int3
(bad)
retf
adc
or
stos
adc
stos
repnz
pop
(bad)
mov
push
sbb
xlat
cmps
nop
in
cmps
and
and
mov
(bad)
stc
jns
jmp
lahf
cmp
or
loopne
mov
xor
int
pusha
push
mov
jne
pushf
or
mov
nop
xchg
aaa
repz
loope
xor
out
mov
dec
pop
adc
imul
enter
xor
inc
jp
add
aas
fisub
sub
jo
daa
dec
fadd
fcompp
or
js
push
push
xchg
mov
fst
xor
cmp
mov
stos
hlt
dec
scas
sbb
fdivr
cmp
into
leave
or
mov
sbb
and
jno
lds
addr16
and
push
shl
xchg
clc
mov
sbb
stos
stc
leave
sbb
xchg
(bad)
mov
in
mov
mov
jo
mov
xor
out
sbb
lock
sub
dec
xchg
test
loopne
xchg
lahf
xor
xchg
sbb
out
scas
lock
pop
and
jno
dec
and
test
nop
dec
loop
inc
and
dec
push
mov
out
(bad)
adc
lock
pop
push
add
imul
stos
pop
ds
dec
scas
iret
icebp
xchg
loop
dec
dec
test
jg
out
pop
pop
fldcw
aad
sbb
(bad)
call
add
mov
xlat
mov
pop
stos
stos
repnz
push
jle
cdq
stc
and
stc
jmp
das
sub
inc
pop
cld
fimul
push
mov
jmp
xor
push
repz
push
and
stos
or
jnp
or
sar
mov
push
test
jle
or
mov
xor
sub
stos
mov
ins
mov
adc
xchg
inc
jb
xor
sahf
or
aad
push
cmc
adc
(bad)
fistp
(bad)
cli
inc
scas
mov
sbb
add
or
add
(bad)
mov
aas
mov
add
add
cmp
sti
and
add
jno
and
dec
push
jo
xchg
xor
or
jg
cld
or
mov
daa
fwait
mov
aam
lock
inc
outs
scas
jmp
ds
les
pop
out
xchg
xchg
jb
jmp
or
je
or
pusha
xchg
jmp
pop
icebp
sub
mov
stc
and
dec
fisttp
xchg
mov
test
or
fdiv
push
ins
dec
leave
and
mov
daa
out
int
xor
add
add
jno
iret
fistp
adc
mov
pop
sbb
pop
cmps
adc
cmc
cwde
or
sbb
jp
xor
out
add
retf
stos
sbb
(bad)
jb
adc
ficomp
mov
xchg
mov
or
and
or
jmp
loopne
ret
repz
cdq
ret
xchg
imul
push
in
mov
mov
sbb
pop
mov
add
mov
pusha
in
ins
aad
(bad)
in
push
mov
mov
pop
jnp
gs
xor
mov
cmc
es
mul
mov
xor
cmp
cmps
cmps
or
(bad)
out
adc
clc
addr16
(bad)
lds
or
lds
lds
sti
pop
mov
cld
lahf
clc
mov
mov
and
ficomp
aam
(bad)
push
pop
xchg
mov
stos
retf
ret
cmp
mov
sbb
(bad)
mov
cmp
fstp
or
sbb
add
cmp
iret
int
dec
movs
and
cmp
jl
sbb
movs
sub
ror
add
push
pop
ret
inc
adc
(bad)
out
inc
xchg
into
jmp
leave
shl
xchg
push
adc
inc
rol
ins
dec
outs
sbb
jmp
inc
popa
push
add
jmp
ss
mov
int
push
push
dec
lea
les
jge
and
or
pop
xchg
adc
dec
jg
inc
out
xor
mov
jbe
dec
push
(bad)
cmps
fisub
loopne
lahf
jmp
mov
imul
cmps
adc
push
in
mov
push
loope
push
div
out
imul
jg
jns
cmp
out
push
mov
cmps
(bad)
sub
dec
inc
mov
pop
jecxz
cmp
int
xchg
xchg
and
stos
sub
add
dec
push
mov
pop
or
movs
xchg
les
dec
or
arpl
out
cmps
clc
cli
add
pushf
shr
idiv
mov
daa
xlat
shr
jne
add
cld
mov
cmp
repnz
dec
jo
stos
mov
test
mov
mov
sbb
xlat
push
(bad)
jb
aam
inc
in
repnz
iret
iret
iret
xor
add
sub
loopne
sub
push
test
xchg
dec
adc
xchg
xchg
(bad)
cmc
mov
pop
aaa
ss
dec
add
loopne
ins
cld
ficomp
(bad)
mov
test
sbb
push
retf
icebp
out
cmp
sti
push
cmp
xor
cs
push
outs
jmp
xchg
adc
je
mov
mov
mov
xchg
pop
ror
xor
sub
or
dec
add
xchg
adc
push
outs
mov
adc
push
or
arpl
mov
push
mov
das
adc
xor
fimul
or
(bad)
dec
dec
enter
jb
xchg
stos
lahf
int3
jge
wbinvd
clc
xlat
dec
add
outs
adc
outs
popf
or
adc
cld
into
int
cmp
les
out
fbld
fiadd
xchg
add
mov
fcomp
ret
cmc
push
cmc
or
and
punpcklwd
fucomip
mov
mov
jae
call
fadd
ja
outs
test
inc
fdiv
push
dec
jae
mov
or
ja
pop
loope
jne
std
jnp
(bad)
sub
cwde
sbb
pop
not
(bad)
push
cmc
ja
mov
adc
fmul
jnp
in
mov
jle
mov
mov
ja
mov
pop
ret
int
retf
and
retf
js
jmp
push
out
fstp
clc
das
loope
pop
imul
mov
xchg
xchg
inc
aaa
div
mov
jne
jecxz
xchg
add
sbb
jnp
adc
sbb
pusha
jl
mov
or
test
push
(bad)
ss
jl
push
mov
mov
xor
xchg
cmps
adc
dec
push
aam
xor
cmp
dec
pop
inc
sbb
popa
mov
sbb
dec
addr16
xlat
in
inc
fld
xchg
xlat
js
mov
xchg
cmp
jecxz
push
xor
stos
inc
imul
inc
jne
scas
pushf
jae
scas
jmp
in
test
jp
mov
mov
stos
pushf
add
sub
dec
or
xchg
mov
add
mov
sbb
jae
jns
inc
lods
xchg
bound
add
fsubrp
(bad)
rep
jmp
pushf
repz
adc
jle
adc
sbb
xchg
xchg
jb
jnp
aam
push
dec
pop
cs
mov
sub
jl
enter
xor
hlt
pop
inc
inc
fist
repnz
std
mov
fcmovnbe
xor
cld
retf
adc
lock
iret
jge
jnp
stc
iret
jmp
outs
ds
fcom
pop
mov
das
enter
push
in
cmc
mov
test
dec
dec
lea
xchg
pop
push
inc
cld
xor
and
pop
popa
cmp
(bad)
push
int3
bound
fs
jns
add
es
xor
mov
push
dec
mov
mov
rol
int
movs
test
in
inc
aaa
mov
lea
aam
cs
data16
mov
pop
test
mov
mov
sbb
push
inc
adc
das
dec
shl
adc
outs
les
adc
nop
idiv
jmp
xchg
sub
ss
cmp
add
or
mov
adc
movs
adc
fimul
loope
dec
pop
push
dec
mov
jmp
ins
fs
arpl
call
xchg
int3
xchg
push
ja
xchg
cmp
add
mov
aad
aaa
xchg
retf
shl
xchg
retf
dec
fist
stc
pop
aaa
in
movs
dec
mov
cmc
mov
mov
xchg
clc
fcomp
shr
loop
pop
bound
test
stos
and
jae
cld
xlat
in
in
push
icebp
add
leave
stc
sbb
and
std
out
leave
sbb
retf
jb
int3
sub
adc
xchg
inc
mov
lock
fnstcw
pop
pop
fisubr
cmp
cwde
pop
sar
and
or
dec
cmp
xchg
lods
dec
shl
cmc
and
inc
push
out
xchg
and
out
mov
jge
mov
and
sbb
mov
push
mov
cmps
stos
add
pop
ss
jbe
dec
mov
sub
movs
test
mov
mov
push
sbb
cld
add
clc
(bad)
mov
fsubr
and
mov
out
int3
cmps
inc
push
aad
test
sbb
mov
or
pop
outs
outs
lahf
pop
add
fs
fiadd
sti
cmp
loope
cs
cli
scas
cld
fwait
bound
sub
adc
mov
fs
sub
add
aam
push
shl
ret
pop
aad
and
jmp
adc
sub
bound
aaa
push
xchg
xor
pop
dec
ret
ss
inc
mov
mov
inc
aad
aam
sub
or
dec
inc
or
mov
pop
in
ins
ins
sub
mov
loop
mov
fcomip
aam
or
cs
test
addr16
out
sbb
add
pop
out
inc
jo
jb
ins
dec
into
lods
dec
leave
in
pop
in
or
(bad)
aad
jb
fiadd
frstor
std
cmps
in
int
jb
ror
pop
add
adc
xchg
xchg
and
mov
stos
push
aas
aas
adc
scas
shl
movs
iret
ins
adc
xor
and
xor
fmul
mov
pop
mov
mov
sbb
or
cmp
sbb
mov
add
rol
inc
inc
jbe
sbb
mov
lods
sbb
xchg
mov
sub
jb
loop
mov
fld
leave
fistp
xchg
addr16
aas
sub
cmps
pop
push
xchg
addr16
sahf
les
and
addr16
pushf
xchg
pop
sahf
mov
push
push
cmp
es
pushf
xchg
mov
test
mov
sti
in
fisubr
mov
xchg
inc
out
cli
inc
popa
nop
inc
push
mov
jbe
(bad)
loopne
clc
or
ins
push
movs
clc
pop
ins
fiadd
test
xchg
outs
push
jge
or
xor
mov
and
popa
dec
sbb
cmps
sub
fimul
mov
scas
mov
das
aas
jg
data16
sub
je
je
xchg
mov
jmp
(bad)
push
sub
jp
ss
cmp
aaa
lods
sbb
out
ror
int
std
or
mov
xchg
out
aad
dec
mov
cmp
lock
jmp
mov
mov
shl
out
and
cld
lock
ins
dec
dec
cmp
enter
or
mov
sbb
outs
sar
(bad)
arpl
aas
mov
mov
inc
xlat
aam
or
xor
das
mov
dec
inc
ret
int3
loop
dec
ins
adc
mov
cwde
inc
pushf
mov
(bad)
test
test
jae
popf
imul
aaa
inc
adc
jns
pop
dec
jae
push
out
jnp
add
rcl
add
mov
adc
xchg
mov
call
retf
adc
aam
jge
jmp
sub
push
add
js
xchg
pop
das
push
or
mov
xor
(bad)
sub
fs
push
xchg
fs
repnz
int3
das
int3
leave
loop
dec
mov
mov
neg
cmp
pop
dec
cdq
dec
xchg
adc
mov
scas
mov
cmp
bound
push
jg
jecxz
mov
inc
xor
test
out
shl
or
retf
sub
dec
(bad)
test
mov
mov
mov
les
and
daa
dec
enter
mov
into
enter
push
and
add
xchg
jae
and
lock
ds
xchg
pop
lods
sar
pusha
sbb
mov
outs
sub
jge
jmp
dec
inc
imul
fldcw
mov
pop
and
mov
adc
iret
fnstsw
scas
call
cld
sub
das
xchg
dec
xchg
nop
ret
add
stos
das
pop
adc
adc
mov
dec
push
jle
mov
(bad)
push
aaa
mov
loop
mov
daa
sar
xchg
iret
(bad)
cs
pusha
inc
in
stc
jo
jno
mov
inc
xchg
pop
pop
and
aad
int
(bad)
add
cld
mov
jmp
add
push
hlt
loopne
lock
add
dec
les
call
stos
leave
bound
ret
push
mov
out
jo
pop
int
(bad)
mov
shr
push
sahf
add
push
mov
push
mov
pushf
lods
lods
xchg
sbb
iret
arpl
fwait
movs
push
cmc
out
data16
add
stos
sub
xchg
retf
or
lea
stos
cs
stos
inc
add
and
push
adc
std
mov
sti
sbb
cmp
mov
out
icebp
add
pushf
cmp
and
cmp
and
dec
dec
retf
and
mov
or
mov
in
fwait
adc
ja
test
test
push
push
lock
out
jmp
mov
push
rol
ret
sbb
push
adc
pop
popf
mov
jae
std
ficom
and
jge
cmp
jge
push
add
(bad)
outs
leave
cld
mov
mov
jge
cmp
dec
cmp
jnp
adc
add
xchg
jno
shl
pop
in
sbb
aas
and
(bad)
sub
in
mov
test
cmp
dec
enter
outs
sub
xchg
jmp
in
xor
cld
and
out
retf
push
xchg
pop
iret
sbb
sub
sahf
xchg
sti
test
dec
fdivp
(bad)
sbb
loop
ja
movs
aaa
fist
cmp
loopne
scas
inc
in
ret
jmp
xchg
ret
pop
mov
scas
sbb
xor
sahf
xchg
lods
adc
pop
cwde
out
xchg
sub
inc
pop
(bad)
and
and
lahf
ret
inc
pop
push
sub
mov
pop
nop
outs
add
mov
or
scas
lods
xchg
int
lock
pop
cwde
hlt
int
fsubr
jne
mov
and
out
addr16
ds
test
adc
hlt
in
push
push
xchg
xor
lea
and
xchg
pop
scas
outs
or
mov
jg
iret
sahf
cdq
mov
mov
lea
es
add
jg
aad
mov
cld
pop
mul
dec
popf
in
adc
idiv
push
dec
cmp
mov
clc
mov
rcr
fld
inc
add
inc
mov
sub
cmp
push
dec
(bad)
in
hlt
out
xor
es
into
rcr
and
shr
xor
push
pop
aaa
aaa
xor
jge
ret
ins
fstp
push
(bad)
popa
jmp
mov
cmps
or
sub
add
in
gs
sub
fld
push
push
in
mov
ret
cmp
and
in
cmp
sub
sub
add
fiadd
icebp
(bad)
inc
sbb
adc
inc
addr16
popf
aam
call
jne
or
out
mov
sub
in
clc
cmp
pop
push
push
loopne
pop
ret
mov
das
repz
(bad)
gs
mov
mov
ret
das
test
mov
pop
push
hlt
shl
das
xchg
xor
and
js
pop
cs
xchg
or
leave
mov
in
xchg
jmp
movs
repz
(bad)
dec
mov
mov
and
inc
cmp
dec
dec
lods
push
xchg
xor
dec
leave
xor
loopne
in
cmp
xchg
(bad)
sbb
add
pop
xchg
and
clc
(bad)
and
(bad)
push
fnstenv
pop
xchg
push
mov
test
ret
in
test
out
pop
mov
fiadd
(bad)
in
popa
pop
add
xlat
add
push
fimul
daa
mov
cli
push
imul
(bad)
push
mov
retf
ss
or
ja
(bad)
adc
xor
mov
pop
sub
add
out
clc
cmp
mov
ret
ret
call
and
movs
call
loopne
jge
mov
mov
in
push
mov
sub
mov
pop
xchg
xchg
out
add
(bad)
out
repz
sti
mov
jne
cld
mov
fcom
pusha
dec
xor
push
jp
dec
or
sub
xor
dec
or
mov
iret
ins
outs
ss
or
imul
mov
int3
push
or
bound
cs
repnz
push
sbb
into
adc
jns
shl
xchg
cmp
xchg
fisub
add
retf
ds
xor
sbb
aad
adc
cmp
jne
mov
cmps
(bad)
lea
mov
fisubr
inc
push
mov
lds
jb
call
out
adc
fnsetpm(287
test
fiadd
outs
cmps
mov
adc
mov
lahf
(bad)
and
pop
in
fistp
mov
in
lahf
(bad)
jno
ret
and
call
xchg
(bad)
xor
in
std
sub
shl
inc
xchg
(bad)
push
jmp
xchg
fcomp
push
mov
out
xor
push
xor
enter
js
pop
in
mov
jb
enter
cdq
xchg
jecxz
cmp
ja
mov
inc
in
cdq
jns
jbe
mov
test
sub
and
out
sbb
and
outs
ficomp
cmps
pop
pop
xchg
addr16
pop
push
shl
outs
fild
lods
popf
cmp
jbe
cdq
and
cmp
add
gs
sub
ins
inc
jp
or
add
bt
mov
push
(bad)
pop
mov
add
push
push
sbb
mov
xor
movs
mov
arpl
add
or
outs
xchg
sub
cld
hlt
jbe
fwait
shl
loope
xchg
lea
jge
retf
jg
sub
xor
mov
pop
pop
pop
sbb
popf
fwait
popf
push
sbb
jmp
mov
(bad)
in
dec
add
clc
(bad)
jg
mov
test
(bad)
ins
jmp
shl
out
leave
loop
adc
popa
dec
ja
cli
gs
cmovb
cli
mov
pop
xlat
adc
push
or
sbb
or
je
ins
mov
sbb
fs
inc
cld
cmps
scas
push
xchg
jo
lods
and
and
dec
or
cli
xchg
call
arpl
lea
mov
repnz
popa
jge
lock
pop
push
imul
fldcw
mov
popa
push
inc
arpl
int
cmp
imul
add
inc
jne
adc
push
adc
mov
js
add
js
mov
jnp
mov
and
les
cmp
dec
or
sbb
inc
cmp
retf
aas
adc
push
ds
and
inc
add
cli
mov
fidivr
in
mov
mov
movs
jnp
fdivp
fsubp
gs
test
ror
cmps
add
xchg
pop
push
add
nop
retf
xlat
scas
ret
mov
jge
scas
pop
cmp
pop
iret
scas
retf
(bad)
in
test
push
cmp
mov
push
mov
xchg
xchg
out
retf
sub
enter
jb
fdiv
cmp
in
aas
mov
mov
inc
in
retf
or
ror
and
cmp
mov
inc
retf
xchg
iret
xor
push
inc
(bad)
es
dec
lahf
in
cmp
ja
loopne
xor
adc
mov
cmp
sbb
outs
mov
out
out
in
ss
pusha
dec
sub
(bad)
sbb
xchg
sub
cmp
jle
jns
sbb
loopne
push
xor
jns
retf
test
nop
add
add
loopne
inc
js
push
shl
popa
inc
imul
enter
std
std
sub
inc
rol
jge
add
int
rol
mov
xchg
inc
mov
shl
add
pop
sub
rcl
retf
push
xor
or
jno
das
(bad)
fimul
sti
mov
ret
xchg
lods
sbb
fiadd
add
pop
inc
jle
call
cmps
sub
dec
push
mov
and
adc
adc
fisubr
bound
ja
ror
ins
xchg
jl
inc
mov
hlt
enter
sbb
in
xchg
inc
dec
pop
cmp
push
leave
jmp
xchg
xor
jb
jg
into
and
out
push
push
in
lahf
xchg
push
add
adc
and
sbb
pusha
dec
push
sbb
repnz
sti
inc
stc
rol
(bad)
retf
inc
ds
jle
cdq
jg
adc
xchg
repnz
das
jge
ds
jmp
cld
mov
idiv
pop
push
or
push
push
and
mov
imul
cmp
mov
or
das
cmps
xlat
jbe
jmp
retf
add
shr
jo
and
sbb
cmp
test
jo
ins
add
outs
mov
(bad)
sub
pop
nop
cld
cmp
test
in
ret
or
and
xor
shr
sbb
fld
popa
mov
xor
or
pop
out
pop
popa
fdiv
jmp
fs
lock
and
push
lock
and
adc
ins
jbe
dec
stos
pop
jns
fwait
ss
mov
out
nop
ins
or
xor
xchg
movs
xchg
jnp
jg
pop
push
(bad)
mov
add
gs
ja
sub
mov
in
xchg
pop
dec
inc
rcl
xchg
xchg
ins
stc
retf
div
(bad)
aas
int3
mul
xor
fstp
mov
aaa
xor
int3
(bad)
xchg
or
jmp
jle
pop
jle
test
es
cmps
in
jae
stos
dec
push
jnp
push
mov
cmps
aad
cdq
je
ret
in
shl
sbb
icebp
int3
(bad)
fcmovnb
and
out
lahf
sahf
cdq
mov
rcr
mov
mov
inc
in
push
adc
and
adc
iret
inc
xor
or
leave
call
xchg
mov
add
add
je
in
ins
adc
mov
pop
test
mov
push
fidivr
jg
mov
push
stc
pop
popf
pop
jmp
adc
and
xor
adc
fsub
pop
pop
inc
cdq
fisub
lock
push
mov
mov
mov
stos
adc
push
outs
paddq
inc
sub
xor
(bad)
adc
pop
call
jecxz
ss
aaa
mov
stc
fnsave
inc
mov
and
xchg
imul
shl
xor
mov
in
jmp
mov
xchg
imul
enter
and
xor
mov
xor
into
pop
pop
xchg
mov
iret
sub
and
push
scas
sbb
mov
into
retf
mov
mov
(bad)
jmp
or
and
pop
push
adc
pop
jno
jb
imul
sbb
lds
mov
(bad)
shl
xor
jge
cmp
nop
movs
jp
xor
add
fnstsw
xlat
mov
adc
js
mov
das
out
test
pop
push
jbe
sub
inc
and
pushf
sbb
cwde
pusha
dec
int
mov
jle
(bad)
data16
push
push
xor
pop
pop
stc
sti
push
dec
ss
stos
or
inc
pop
mov
jecxz
sub
mov
pop
stos
sub
ds
add
fmul
jmp
aad
popf
push
cmp
push
cmp
mov
inc
je
inc
ret
pop
pop
stc
out
fidivr
ds
inc
(bad)
or
pop
loop
mov
add
js
pop
hlt
pop
mov
ffree
lahf
sub
fild
ret
ret
push
pop
or
cmp
mov
ret
sahf
mov
xor
bound
cwde
pop
les
sbb
adc
cmp
and
mov
and
adc
or
xchg
and
pop
adc
pop
cwde
push
shl
dec
pop
pop
mov
dec
out
adc
mov
pop
xchg
lds
add
sahf
nop
movs
xchg
mov
or
xchg
and
jnp
clc
inc
jg
sub
dec
dec
jg
sub
std
cmp
(bad)
retf
shl
inc
sbb
ret
ins
and
(bad)
push
mov
xlat
jnp
enter
push
stc
icebp
dec
mov
xchg
inc
cld
das
leave
out
inc
stc
cli
das
std
xor
(bad)
(bad)
push
stc
aaa
(bad)
(bad)
imul
(bad)
mov
inc
sbb
sub
icebp
in
scas
or
in
cmp
cmp
in
in
xchg
sbb
push
push
in
test
pop
mov
jle
dec
scas
repnz
inc
sbb
mov
(bad)
std
xlat
addr16
xchg
gs
jp
mov
jmp
pop
jle
pop
jl
xchg
out
xchg
fdivr
or
loopne
mov
std
cmps
das
retf
in
xor
xchg
pop
or
push
ja
and
sub
mov
sbb
push
push
xor
push
das
(bad)
jecxz
ret
pusha
mov
mov
test
adc
ret
sub
pop
pop
out
pushf
cdq
cli
test
jnp
jmp
retf
jge
js
xor
mov
repz
adc
pop
pop
push
gs
or
push
scas
cmp
clc
jp
fsubp
adc
fsub
cdq
xchg
popf
scas
out
frstor
xlat
sbb
sbb
out
iret
(bad)
call
inc
(bad)
cmp
lock
cli
fiadd
mov
sub
or
xchg
adc
jp
sub
in
add
jle
push
mov
jl
stos
jns
xor
mov
mov
inc
rol
out
int3
int3
into
jmp
xchg
shl
cld
aad
cmp
pop
push
rol
(bad)
cli
sbb
sub
out
jns
and
(bad)
das
div
hlt
call
popf
popf
popf
mov
mov
push
je
jge
scas
mov
popa
outs
imul
lods
(bad)
fisub
rcl
test
cmps
les
mov
jmp
jecxz
adc
cmp
add
push
cdq
daa
ror
xchg
xor
jno
nop
ds
push
arpl
and
dec
or
popf
in
lock
push
jno
inc
aam
pushf
nop
jnp
fmul
hlt
iret
shl
push
xor
fwait
and
add
push
add
mov
(bad)
mov
sub
iret
out
data16
sub
jmp
and
xchg
addr16
stos
nop
(bad)
cdq
xchg
inc
in
mov
pop
aas
daa
mov
dec
sub
mov
mov
adc
(bad)
into
pop
nop
mov
outs
leave
cmc
sbb
in
in
and
imul
out
pop
mov
enter
push
es
icebp
xor
pushf
xchg
movs
pop
mov
and
or
pushf
sti
imul
rcl
add
mov
(bad)
rol
mov
and
xchg
gs
test
rcl
loop
dec
cmp
or
cmp
(bad)
aad
and
or
dec
adc
rcl
or
movs
adc
or
stos
adc
mov
jo
mov
inc
retf
fadd
mov
pop
shr
mov
outs
jl
mov
xor
nop
mov
and
dec
jge
cmp
mov
push
push
ins
in
ds
inc
(bad)
or
(bad)
jne
js
mov
je
inc
es
jno
pop
test
popa
xlat
inc
and
imul
sbb
push
fadd
sub
ins
and
sbb
jbe
cmps
pop
(bad)
sbb
pavgw
cmp
mov
aad
sub
xor
mov
dec
test
dec
fsubr
in
add
mov
xlat
lods
xchg
push
sub
inc
mov
sub
mov
xor
sbb
push
and
jno
outs
mov
mov
fnstenv
lahf
push
and
fs
movs
push
arpl
jge
cmps
push
ss
cld
cld
add
pop
jb
out
call
aas
(bad)
xchg
jl
dec
out
xchg
(bad)
cwde
loope
test
stc
jmp
cli
mov
pop
xchg
idiv
stos
dec
dec
cmovnp
mov
arpl
sti
addr16
inc
sbb
or
inc
mov
out
sbb
cmp
lahf
xchg
es
xor
out
push
and
stos
cmp
loope
aas
and
in
js
xchg
add
fdivr
fstp
rol
xchg
aaa
mov
or
cld
or
loope
pop
xchg
or
and
aaa
cmp
add
xchg
xchg
mov
(bad)
in
mov
test
out
ja
or
(bad)
out
rcr
add
stos
inc
add
and
loopne
sbb
ins
imul
fbld
dec
push
mov
and
iret
or
pop
push
push
sahf
xchg
leave
leave
jle
icebp
(bad)
test
rcr
mov
jbe
je
pop
inc
pop
or
jne
inc
push
pop
or
icebp
xor
sub
inc
lahf
fistp
frstor
lea
jne
jge
pop
sbb
jo
loop
out
rcl
lods
sbb
popf
sbb
jp
sub
arpl
arpl
ins
cmps
cs
ds
add
mov
cmp
daa
and
fistp
(bad)
test
push
xor
mov
mov
inc
aaa
xor
call
sbb
pop
in
out
out
jg
sub
call
cdq
jle
jo
push
int3
jp
push
sub
push
add
adc
mov
(bad)
dec
stc
cmps
mov
ss
fimul
fisubr
sbb
dec
push
int3
std
gs
arpl
or
push
scas
mov
clc
cwde
dec
add
jne
retf
retf
sahf
pop
lock
bound
(bad)
jmp
sub
retf
dec
dec
lds
pop
rcr
add
dec
and
mov
mov
mov
(bad)
mov
out
aaa
aaa
mov
add
(bad)
stos
in
ret
dec
fwait
sbb
dec
push
data16
bswap
(bad)
(bad)
in
or
mov
dec
cs
pusha
movs
dec
mov
push
neg
(bad)
mov
mov
popf
xchg
repz
into
shl
pop
cs
xchg
or
mov
(bad)
dec
pop
and
loopne
and
xor
retf
jb
rcl
repnz
pushf
repz
into
jns
cmc
jmp
inc
pop
bound
faddp
test
in
xor
pop
sbb
out
xchg
sbb
add
dec
enter
js
adc
and
in
cmp
push
inc
icebp
test
push
push
stos
or
mov
mov
les
(bad)
mov
pop
aaa
ds
test
inc
fst
and
mov
xor
movs
dec
inc
cmp
hlt
mov
je
jl
sbb
adc
lods
jmp
jo
sub
jg
mov
and
xlat
xor
call
int
jnp
out
je
pop
jl
push
in
cdq
movs
retf
sbb
daa
dec
popf
cdq
rol
push
xchg
sbb
data16
sbb
dec
push
pop
adc
pop
les
out
jo
inc
xchg
or
jnp
add
dec
lods
xchg
inc
mov
xchg
sbb
mov
inc
and
push
add
nop
(bad)
lods
mov
mov
mov
loopne
dec
cmp
nop
push
sbb
ja
loope
rcl
sbb
cmp
xor
cmp
mov
mov
pop
xchg
xchg
imul
loopne
fist
jl
jecxz
add
in
jle
and
mov
jg
jle
lahf
jge
jle
pop
mov
(bad)
in
aas
inc
mov
dec
or
jno
jecxz
jmp
gs
inc
(bad)
or
mov
test
and
aad
outs
xlat
scas
jle
add
fnstcw
adc
rcl
or
retf
je
mov
cs
cmp
scas
gs
mov
sahf
jp
or
(bad)
mov
imul
pop
nop
pop
push
ficom
mov
jp
into
lods
in
xchg
jecxz
push
inc
cli
arpl
aam
and
inc
mov
arpl
xor
mov
adc
pop
xchg
dec
fcmovb
pop
xor
arpl
es
and
and
jb
outs
stos
inc
inc
cld
mov
or
dec
xor
mov
jo
cmp
mov
cli
mov
std
xor
mov
jp
rcl
pop
sub
es
fidiv
cs
xchg
mov
or
inc
addr16
mov
or
cld
inc
ret
sbb
jb
je
lahf
inc
pop
add
or
and
mov
jp
fidivr
pop
pop
call
mov
cmp
retw
mov
out
loopne
inc
das
lods
scas
scas
jns
lahf
cmp
fs
outs
jmp
add
or
sbb
(bad)
add
jne
mov
pusha
push
xlat
or
into
mov
pop
pop
pop
or
xchg
scas
mov
xchg
push
add
into
jno
mov
xor
jge
std
cmp
pop
mov
add
push
repnz
xchg
cmp
stos
test
push
movs
xor
push
push
rcr
push
pop
pop
adc
loopne
rcl
mov
out
inc
mov
and
xor
dec
sbb
inc
out
mov
aam
cld
ja
aam
mov
add
nop
sbb
aad
clc
xchg
mov
sub
fisub
popf
cmp
xchg
scas
pop
xchg
sti
iret
ds
loopne
mov
mov
and
std
pop
nop
dec
xlat
outs
retf
or
enter
in
(bad)
jle
dec
pushf
aas
sub
stos
aaa
outs
retf
lea
sti
loope
jb
fidivr
pushf
adc
mov
in
adc
(bad)
in
and
jmp
and
cmps
xor
sbb
retf
mov
(bad)
je
xor
sub
iret
pushf
and
retf
icebp
rol
in
aad
xor
xor
jo
stos
add
pop
inc
and
ss
or
ins
test
sahf
jg
push
test
out
pop
jmp
bound
sbb
out
aaa
pusha
mov
dec
aas
cmp
fucomi
mul
mov
jo
lods
jle
inc
jo
sbb
(bad)
jb
xor
jge
add
mov
add
adc
jp
pop
adc
pop
div
out
jmp
or
ret
inc
nop
clc
dec
into
and
(bad)
xor
stos
add
pop
popf
fld
ror
in
adc
loopne
mov
adc
fisub
or
dec
jno
mov
pushf
leave
pop
inc
shl
lods
sbb
push
xor
and
inc
mov
and
xchg
icebp
cmp
lock
das
ror
movs
cmps
pop
loop
mov
fidivr
push
int
outs
fidivr
sub
mov
imul
jg
add
and
stc
in
add
xchg
(bad)
jge
popf
repnz
cmp
pop
mov
stos
ds
mov
fcom
rcl
loop
jo
ror
adc
inc
inc
push
jp
xor
cs
sbb
test
shr
out
test
in
xchg
sub
sub
sbb
pop
cmp
push
xchg
cmps
out
pop
nop
mov
jae
jbe
lahf
ret
aaa
mov
dec
jbe
sub
or
je
int3
dec
cmc
enter
cli
mov
sbb
add
and
mov
cmp
push
dec
xchg
push
adc
test
scas
mov
adc
test
ds
cmps
xchg
sbb
mov
jmp
(bad)
clc
cs
scas
adc
xchg
daa
(bad)
rol
adc
pop
loopne
jne
outs
outs
or
retf
sbb
call
add
pop
pop
dec
jmp
dec
call
sti
push
adc
(bad)
div
pop
(bad)
out
or
fs
cmc
pop
fwait
sbb
ficom
cmps
inc
clc
sbb
jb
jne
(bad)
jmp
dec
sahf
(bad)
lods
sbb
scas
cmp
mov
and
inc
adc
xchg
add
and
inc
repz
jbe
push
sar
mov
mov
nop
pop
xor
mov
xchg
mov
mov
lods
jnp
mov
fs
add
(bad)
imul
push
mov
inc
adc
(bad)
mov
xchg
and
adc
jns
jle
jns
test
ss
push
add
xor
sar
int3
cmp
dec
push
mov
or
cmp
jl
cmp
push
test
pop
in
cmc
stos
repnz
ret
pop
repnz
sti
jb
retf
mov
sub
ficom
movs
(bad)
push
ret
sbb
jb
(bad)
pop
or
jnp
in
cmp
out
xchg
hlt
sbb
retf
sahf
xchg
fisttp
and
ds
push
outs
fist
mov
and
scas
lods
dec
jle
sub
sbb
xchg
or
mov
enter
cmp
js
mov
loopne
int3
in
pop
xchg
inc
inc
add
bound
cmp
pop
xchg
nop
xchg
lea
mov
push
jnp
outs
sbb
cmp
fsub
xchg
and
mov
add
(bad)
and
ds
push
add
jl
or
les
adc
cmp
jo
inc
mov
or
shl
jmp
add
jmp
inc
inc
add
inc
rol
pop
(bad)
call
jle
out
dec
jne
mov
add
pop
xchg
aas
retf
mov
test
jmp
mov
xor
xchg
mov
mov
loope
cs
mov
sub
or
or
movs
clc
popa
fcom
mov
neg
mov
dec
dec
aaa
sar
es
loop
mov
and
push
fimul
xor
add
fnstcw
fcomip
sahf
out
mov
inc
mov
or
fdivr
movs
das
jg
mov
lahf
sti
mov
(bad)
aas
icebp
es
(bad)
jbe
cwde
fs
mov
mov
shl
mov
adc
pop
sbb
fdiv
mov
mov
(bad)
mov
in
dec
test
lea
movs
das
es
and
push
sbb
leave
scas
in
cmp
mov
fild
cmp
retf
daa
popa
ror
inc
pushf
pushf
nop
mov
jnp
(bad)
arpl
cli
or
jg
sbb
leave
fsubp
sub
inc
mov
cwde
pop
dec
adc
fwait
in
xchg
leave
mov
test
cwde
push
inc
and
mov
out
lahf
jecxz
loope
jecxz
and
xchg
sbb
inc
or
adc
or
lods
adc
call
mov
ins
sti
mov
repz
pop
call
dec
and
outs
or
cmps
xor
int
sbb
add
fistp
in
ins
stc
ss
ja
mov
sti
dec
(bad)
and
ds
fiadd
mov
pop
add
in
cli
retf
push
mov
adc
mov
jl
popa
xor
push
fs
push
mov
(bad)
popf
cmp
inc
push
add
ins
fdiv
and
dec
cmps
adc
jle
mov
mov
sub
stos
add
out
xor
xchg
dec
jge
cli
xor
push
and
and
popa
es
stc
mov
(bad)
std
inc
sub
mov
push
pop
fwait
cdq
cwde
sbb
pop
ins
out
lods
jge
lahf
push
test
mov
mov
nop
movs
outs
je
mov
int
iret
fadd
shr
call
sti
loop
lahf
xchg
fwait
ja
sub
jmp
mov
sub
rcr
or
mov
mov
adc
jge
scas
fnstsw
jmp
or
stos
push
outs
loopne
xor
sti
out
xchg
stc
leave
inc
jmp
das
or
(bad)
cmp
xchg
dec
xor
cmp
ss
div
daa
inc
xlat
loope
xor
shl
jecxz
sbb
jb
mov
sbb
cmp
pop
or
aad
xlat
in
aaa
fidiv
outs
(bad)
push
dec
imul
rcr
xchg
retf
sub
cmc
cli
loopne
les
sub
inc
es
mov
adc
nop
jmp
(bad)
popa
ins
test
cdq
mov
xchg
repz
test
adc
jle
pusha
jo
aas
xor
mov
shrd
pop
mov
dec
inc
xor
loopne
shl
add
outs
aaa
aam
mov
sar
test
or
stos
adc
dec
js
add
xchg
inc
and
inc
scas
repnz
ins
ret
mov
add
pop
lods
cmp
inc
jmp
pusha
pop
mov
sbb
sbb
push
movs
mov
add
sbb
stc
aam
dec
sbb
mov
fcmovu
pop
sub
dec
sbb
pop
outs
sbb
pop
push
add
dec
cmp
aaa
push
std
call
xchg
and
dec
stc
dec
stc
hlt
fild
jmp
pop
jle
mov
outs
cld
out
sub
jl
jae
adc
adc
push
loope
jae
std
push
mov
sar
aad
cmp
cmp
and
mov
cmp
fs
push
ss
jne
adc
loop
leave
loope
in
add
outs
mov
dec
(bad)
in
mov
lock
enter
in
movs
add
jns
cld
inc
jns
mov
add
add
sti
in
leave
inc
cmp
stos
repnz
xor
jns
adc
jno
cmp
jnp
sub
inc
and
movs
loopne
mov
mov
dec
inc
pop
adc
cmp
and
sbb
xchg
push
mov
sbb
or
jae
(bad)
jnp
adc
stc
fs
mov
sbb
cmps
ret
addr16
add
ja
ret
data16
fld
fs
test
mov
mov
inc
cmp
mov
nop
jae
mov
nop
jb
cdq
sbb
jmp
adc
cdq
lahf
(bad)
jge
repz
sar
hlt
loopne
pop
imul
dec
and
add
xlat
sahf
fnstsw
mov
rcr
jbe
inc
pop
add
adc
add
mov
loope
xor
lock
(bad)
out
(bad)
lock
xchg
add
and
jae
retf
leave
addr16
mov
popa
sbb
(bad)
or
inc
es
push
sbb
int
dec
and
test
sbb
ret
outs
push
add
push
pushf
mov
jmp
ror
movs
and
pop
pop
daa
xchg
ret
test
add
clc
les
jmp
mov
xchg
pop
fcomip
xchg
mov
into
ror
popf
sti
pmulhuw
std
sti
adc
mov
fidiv
mul
test
mov
stc
mov
xchg
rcr
arpl
inc
in
and
push
pop
push
imul
xchg
mov
mov
push
pop
addr16
mov
xchg
mov
jae
cli
jp
sub
adc
jnp
inc
xchg
cwde
mov
mov
neg
mov
stc
mov
aad
xchg
(bad)
loopne
mov
adc
sub
les
hlt
or
inc
xor
add
xchg
bound
xor
rcr
mov
fild
mov
xchg
shl
mov
push
xchg
mov
out
inc
mov
sti
cmp
retf
cmc
mov
loopne
rol
pop
not
cdq
nop
(bad)
push
lahf
sbb
ret
ins
lock
sbb
xor
enter
iret
mov
push
mov
loop
mov
ins
push
les
pop
or
inc
add
dec
lods
jge
sub
xchg
dec
xchg
mov
adc
push
mov
(bad)
cmps
jmp
pop
xchg
mov
jle
jo
or
hlt
jne
loope
mov
lea
sub
xlat
inc
jns
sti
pop
xchg
dec
jg
std
repnz
test
loop
jle
mov
pop
stc
retf
mov
lahf
push
stc
add
dec
in
lods
push
cmps
test
pop
sub
leave
add
jp
fisubr
ja
jbe
jecxz
fdivr
or
or
or
inc
sbb
jmp
cmp
mov
sti
xchg
in
ret
in
sbb
(bad)
out
retf
adc
jnp
loopne
add
into
sbb
ja
mov
out
fdivr
enter
add
and
stos
arpl
and
loop
dec
and
je
scas
imul
jge
jbe
outs
mov
mov
nop
test
sub
js
sbb
cmps
cmp
dec
inc
in
js
adc
xor
clc
jl
mov
push
and
ficom
nop
dec
and
xor
or
into
out
call
out
cmc
(bad)
push
sbb
psadbw
retf
ja
cld
sub
xor
or
popf
add
pop
je
pop
test
cmp
add
cmc
rcr
jge
xor
out
sar
jge
sbb
xor
jnp
lock
call
jmp
cmp
lock
xchg
cmp
sti
mov
fsubr
mov
fcmovnbe
push
stos
mov
loope
pop
jnp
sub
pop
pop
(bad)
cmc
retf
inc
or
and
dec
test
and
push
push
and
pop
(bad)
sbb
sub
inc
jae
dec
int
or
xlat
scas
scas
dec
jae
mov
repz
xchg
cmp
aaa
outs
(bad)
or
call
ins
adc
adc
pop
int3
push
js
lods
je
cwde
xor
cmp
jae
out
fistp
sahf
jnp
or
mov
addr16
dec
push
(bad)
retf
jb
fiadd
pop
mov
xchg
pushf
cmp
in
in
aas
jl
neg
pop
mov
or
cld
dec
pop
out
cmps
in
jmp
outs
sub
std
or
ret
xchg
xchg
ja
jbe
dec
mov
in
jmp
mov
push
push
xchg
ins
mov
ficomp
daa
cld
jno
jae
push
sub
stos
out
test
mov
dec
test
gs
out
fwait
clc
je
lds
xchg
adc
inc
test
cwde
jo
lods
rol
in
jmp
cmps
(bad)
dec
repz
push
cld
add
xchg
int
dec
mov
jg
popa
jmp
les
ds
inc
(bad)
or
xor
xlat
and
inc
into
adc
loopne
(bad)
(bad)
ds
adc
leave
sahf
and
sahf
(bad)
fnstenv
daa
fimul
add
pop
mov
push
test
sub
jno
inc
sbb
shr
sub
xchg
or
test
mov
mov
shl
popa
shl
push
xchg
xchg
mov
xchg
push
rcl
aam
jbe
adc
paddsb
(bad)
ins
jecxz
cmps
mov
and
mov
int
in
pop
jns
jl
or
xchg
lahf
std
addr16
xchg
iret
jge
arpl
xchg
mov
daa
sti
idiv
add
cmp
sbb
sub
mov
or
popa
outs
into
(bad)
int
jbe
sbb
sbb
aaa
(bad)
jo
pop
mov
inc
inc
(bad)
ins
add
js
shr
fdiv
outs
stos
xchg
xchg
repz
fs
jne
pop
mov
test
mov
loop
adc
jbe
test
hlt
pop
pop
sbb
imul
sub
pop
push
bound
and
ins
mov
out
test
push
lock
cmps
out
fabs
add
in
xchg
inc
enter
mov
jno
or
ret
repz
std
sbb
aas
outs
cmp
mov
mov
jmp
int3
ins
cdq
mov
mov
mov
cld
out
mov
fistp
add
or
jmp
fsubr
jae
outs
outs
es
adc
aas
add
add
push
hlt
std
adc
dec
call
inc
adc
push
add
jecxz
out
rcr
mov
mov
mov
mov
sub
mov
(bad)
fisttp
add
cmc
jp
icebp
js
(bad)
mov
lea
test
aas
add
fwait
cmp
ret
xchg
outs
jae
and
bound
ins
lods
or
sub
push
sbb
and
pop
retf
pop
repz
fdivr
cmp
ret
cmp
dec
xor
(bad)
xchg
(bad)
(bad)
mov
and
adc
adc
mov
jnp
sbb
daa
popa
adc
adc
add
add
adc
jns
shl
out
bsf
cmp
sub
pop
xchg
and
scas
pop
mov
mov
jb
ins
dec
mov
pushf
and
mov
into
das
xchg
out
xchg
mov
aaa
sub
mov
gs
gs
pop
(bad)
repz
retf
aaa
aad
shr
inc
or
retf
dec
iret
and
out
xchg
in
jae
mov
cli
xor
and
sub
aad
xchg
in
pushf
mov
arpl
pop
add
call
add
retf
push
mov
es
shr
add
sub
sbb
loopne
std
std
std
sti
push
or
mul
inc
out
test
and
pop
mov
xchg
movs
dec
mov
ret
xor
data16
arpl
push
mov
jne
cmp
sub
jno
mov
inc
fcomp
xchg
jmp
scas
imul
mov
sub
inc
sbb
xor
out
sub
pop
clc
lock
test
ficomp
add
or
pop
mov
(bad)
in
lds
lds
rcr
xchg
idiv
outs
leave
test
cmp
lods
ds
test
fild
rcl
cld
fiadd
enter
or
(bad)
ret
into
ins
out
sbb
xchg
dec
sub
retf
in
xchg
dec
lds
push
cmp
and
ins
fisubr
scas
scas
leave
fstp
imul
inc
mov
mov
imul
add
iret
das
add
popa
addr16
leave
loope
dec
cmps
data16
and
xchg
push
ss
sbb
cwde
pop
shr
cmp
xlat
pop
cmps
(bad)
iret
cmp
sub
or
sbb
das
pop
repz
xor
mov
mov
xor
jge
xor
fcomp
add
add
dec
add
(bad)
mov
adc
ins
enter
in
jle
xchg
or
xor
cdq
call
fldcw
add
jmp
add
push
imul
cmp
(bad)
sbb
in
mov
cmp
or
iret
xor
add
dec
cmp
test
pop
ret
cmps
pop
ins
mov
or
shl
outs
adc
mov
cmp
adc
pushf
je
fadd
scas
xor
cmp
and
xchg
ins
popa
je
jae
sbb
and
mov
xchg
leave
xor
inc
xchg
sub
popf
adc
test
rcr
es
jecxz
lock
js
cmp
ret
in
repz
xlat
in
repz
enter
gs
inc
and
push
jb
call
and
xor
jnp
dec
es
stos
sar
mov
jns
fdivr
les
sahf
xchg
aad
aaa
in
dec
outs
xchg
inc
xor
outs
adc
lea
inc
or
fsubr
sub
xor
das
lods
int
bound
sbb
jbe
ret
gs
mov
xlat
push
(bad)
and
cmps
ss
mov
inc
mov
setnp
dec
jno
adc
std
mov
or
push
sti
cli
cli
into
inc
add
cmc
imul
jl
pop
dec
nop
scas
pop
push
add
loopne
stc
cmp
lods
dec
or
gs
adc
ja
pop
adc
fwait
xchg
mov
mov
dec
cld
call
sbb
add
mov
js
loope
fwait
xchg
test
shl
jmp
sbb
adc
int
mov
mov
fisubr
leave
push
or
pushf
popa
ror
push
push
add
std
mov
ds
loope
retf
or
out
cs
dec
mov
mov
pop
adc
or
xor
fld
xchg
outs
(bad)
loop
sub
jl
es
js
jo
dec
ss
xchg
ror
scas
pop
fmul
ret
pop
sbb
sub
aam
ret
jecxz
jo
call
daa
jbe
xchg
retf
sub
int3
mov
cmp
sbb
lds
mov
jmp
mov
imul
imul
bound
pop
or
pop
js
int
add
jb
push
cmp
mov
and
mov
cmp
or
outs
pop
inc
dec
pop
mov
and
aas
mov
pop
dec
les
xor
sbb
shl
movs
cld
add
and
inc
cmp
sahf
inc
push
(bad)
out
mov
loopne
shr
int3
cld
bnd
sahf
pop
cs
push
mov
mov
nop
jp
sbb
add
imul
lods
push
cld
jle
pop
cmp
in
sbb
mov
ss
push
imul
xchg
aad
dec
dec
and
jno
test
(bad)
fild
xchg
sub
ss
or
fidiv
push
test
sub
adc
out
lods
mov
rcr
jmp
inc
adc
aad
sbb
pop
cmp
or
cdq
dec
sub
mov
inc
cmp
pop
out
out
stos
repnz
dec
sahf
jg
add
jle
mov
mov
pushf
lahf
push
xchg
test
and
mov
mov
jmp
sbb
int3
xchg
shr
leave
movs
sbb
cdq
out
and
mov
(bad)
imul
jne
retf
add
or
enter
jb
nop
and
cmp
in
xchg
sar
(bad)
jmp
cmp
and
push
mov
sub
push
or
add
dec
cld
adc
aam
dec
cmps
pop
jb
fdiv
add
fadd
or
sbb
frstor
mov
jl
pop
dec
mov
dec
and
cdq
test
clc
sbb
out
(bad)
out
gs
mov
(bad)
and
les
jl
dec
mov
(bad)
popa
inc
cs
(bad)
cld
xchg
push
es
mov
scas
inc
or
cs
pop
ss
stos
pop
call
mov
in
push
aam
add
shl
into
in
add
repz
pop
add
std
xor
int3
cli
idiv
pushf
jb
gs
jb
or
jbe
ins
mov
pop
sbb
pop
xlat
test
test
fldcw
fiadd
mov
cwde
mov
shl
jns
lock
inc
aad
mov
fcomp
sbb
adc
in
loope
in
out
sbb
xchg
sbb
fwait
sub
cdq
xchg
cmp
(bad)
or
jns
(bad)
clc
add
std
sbb
and
stos
xchg
xchg
imul
or
jno
cld
add
neg
les
iret
and
aas
mov
add
sbb
cs
test
xlat
lock
(bad)
fsubr
lea
pusha
int3
(bad)
out
add
push
and
jecxz
rol
push
pop
ficom
push
mov
vhaddpd
arpl
adc
shl
loope
and
fild
xchg
rcr
loop
cmp
mov
cmp
mov
rol
push
test
inc
sub
(bad)
es
push
jmp
call
mov
sti
lea
inc
add
xor
xchg
push
bound
inc
mov
push
inc
test
inc
mov
or
jmp
iret
sub
jp
pop
sahf
and
adc
mov
std
std
pop
mov
cmp
das
das
mov
jnp
and
daa
gs
dec
out
cmp
pop
xchg
jge
fcom
stos
push
das
leave
mov
xor
les
mov
jo
(bad)
in
das
mov
shr
sbb
sbb
jp
push
inc
mov
mov
mov
mov
ss
jns
sbb
in
call
dec
nop
mov
cli
mov
xor
dec
xor
iret
sub
or
add
push
repz
mov
fwait
adc
inc
and
clc
std
movs
fimul
cmps
idiv
jp
mov
sti
cmp
sbb
js
add
xor
mov
(bad)
fcomi
es
loop
icebp
into
test
add
(bad)
ror
jge
or
xchg
sub
ror
mov
cmp
cmp
dec
leave
outs
sub
test
movs
aad
jl
cs
stos
sbb
fimul
ror
lds
add
aaa
shl
jns
mov
bound
bound
inc
push
mov
shl
inc
mov
lds
push
in
lea
(bad)
clc
add
sub
fdiv
fsubr
ret
or
push
and
adc
sbb
push
imul
push
sbb
nop
dec
and
add
das
fwait
xchg
and
inc
and
sbb
push
ja
mov
push
or
mov
xlat
mov
pop
sbb
cwde
dec
dec
jle
mov
mov
cmp
sbb
mov
pop
sub
fisubr
adc
or
mov
cmp
or
or
pop
and
jle
movs
pop
lea
mov
xor
or
mov
sti
(bad)
pop
xchg
in
push
loope
jo
add
fwait
dec
lds
push
pop
add
movs
sbb
packssdw
loopne
sub
inc
and
pushf
push
xchg
mov
inc
and
lods
mov
mov
fistp
je
add
mov
add
push
lods
pop
imul
cmp
dec
or
push
js
jne
push
(bad)
push
push
iret
sahf
mov
mov
pop
jmp
pop
cli
push
jp
imul
sub
repz
add
in
cmova
test
and
outs
push
xor
mov
jo
jb
or
pop
sbb
sub
jmp
inc
or
retf
int3
in
mov
jg
sahf
pop
mov
mov
xchg
sar
cwde
sub
cwde
xchg
jmp
das
enter
cmp
pop
xchg
dec
xlat
scas
stos
or
adc
sti
loopne
loopne
pusha
inc
xor
cmc
pop
aad
movs
jp
jl
jb
pcmpeqd
xor
ret
dec
movs
adc
imul
cdq
std
jle
push
xchg
mov
push
mov
and
fidiv
adc
mov
xor
push
pop
(bad)
iret
xlat
or
loopne
cmp
xchg
int
or
mov
mov
jl
pop
dec
mov
add
inc
pop
xchg
pop
xor
stos
sub
mov
push
push
addr16
or
and
xchg
or
rol
mov
rcl
aad
inc
cli
pop
scas
add
xchg
ds
mov
adc
pop
loopne
dec
and
shl
adc
enter
inc
xor
shr
ja
rcl
mov
data16
xchg
pop
fiadd
sti
paddq
xor
jp
pop
cmp
test
cli
adc
pushf
cmp
(bad)
lds
jno
sti
xor
xor
xchg
or
inc
xor
(bad)
jmp
push
mov
jbe
add
mov
xchg
je
test
ja
mov
push
or
lock
ja
cmp
xchg
addr16
mov
inc
ret
cs
cmp
stc
inc
cdq
popf
retf
cmp
xchg
leave
js
jae
stos
mov
test
popa
add
icebp
push
xchg
mov
stos
ror
cdq
sahf
add
mov
xor
mov
mov
dec
mov
(bad)
aas
or
(bad)
adc
dec
dec
popf
and
mov
lock
and
add
out
(bad)
arpl
repz
and
fld
(bad)
cli
aas
addr16
nop
mov
xchg
sub
cmc
into
push
mov
add
xor
pop
pop
movs
jb
sbb
int3
add
dec
jnp
imul
xchg
inc
lock
int3
or
sub
add
cmp
and
dec
jp
pop
(bad)
push
or
xor
cs
and
in
xor
mov
jb
add
(bad)
mov
xchg
out
jg
scas
pop
cmp
pop
das
scas
retf
lahf
xchg
imul
retf
(bad)
pop
in
pop
pop
xchg
mov
in
pop
repnz
iret
jge
out
xor
out
pop
mov
xor
lea
(bad)
sti
fbstp
jl
fwait
pop
push
sti
ja
loope
cmp
mov
cld
dec
sysret
and
arpl
add
cwde
lahf
mov
dec
dec
nop
sub
push
out
push
pop
sub
mov
sti
std
lds
jb
mov
mov
jl
loopne
mov
add
pusha
gs
(bad)
and
jae
imul
cmp
js
sub
add
add
inc
mov
jecxz
jns
adc
lods
mov
test
mov
loope
sub
mov
mov
push
cmp
xor
(bad)
pop
das
or
cwde
xor
mov
mov
ror
adc
xor
dec
adc
cmps
inc
and
mov
aaa
pop
in
arpl
loopne
lds
fwait
les
pop
jae
inc
add
fcom
push
xchg
hlt
and
adc
outs
mov
ss
xor
sbb
and
enter
fisttp
sub
or
test
mul
mov
fwait
mov
pop
js
cmp
ins
pop
pop
mov
xchg
mov
sbb
cmps
or
mov
stos
and
adc
mov
outs
test
jne
push
js
mov
adc
jbe
or
dec
mov
sub
pop
cld
dec
and
add
loopne
dec
add
mov
inc
lahf
lahf
test
inc
inc
(bad)
fucomi
pop
jnp
adc
pop
and
cmp
mov
mov
or
inc
or
stos
mov
pxor
stos
popa
xchg
mov
xor
mov
xchg
(bad)
lds
mov
mov
cmp
cmps
sub
movs
dec
pusha
ret
popf
inc
fcom
or
mov
(bad)
lock
jmp
int
into
pushf
jne
add
test
fist
add
(bad)
(bad)
sbb
pushf
mov
std
(bad)
push
mov
lock
repnz
dec
jl
xor
je
shl
mov
mov
or
cmp
in
push
mov
sub
jns
jb
add
or
mov
and
cmp
xchg
jge
jo
xor
ds
shl
and
sbb
mov
lods
add
sub
inc
inc
push
stc
icebp
jnp
bnd
mov
icebp
pop
mov
xlat
cmp
call
movs
loope
and
enter
aad
fcom
pop
hlt
jb
cmp
add
les
sub
rdpmc
pop
cwde
mov
sar
data16
xor
sbb
mov
js
add
test
cmp
loop
push
ficomp
loopne
arpl
inc
adc
inc
jmp
adc
or
sub
mov
in
pop
pop
push
cmp
cmp
mov
inc
and
mov
push
jae
sbb
and
scas
jbe
xor
sbb
repz
sub
jb
ret
dec
sub
mov
(bad)
sub
test
mov
pop
fisubr
xchg
in
xchg
test
sub
push
xor
stos
shl
adc
mov
xchg
adc
mov
sub
push
neg
inc
pop
xor
out
rcl
dec
movs
mov
rcl
mov
add
sar
cs
sbb
xchg
xor
xchg
add
push
add
loopne
dec
add
and
aam
iret
cmc
div
push
cmps
jmp
ins
lods
dec
jg
pop
add
adc
add
add
pop
inc
out
pushf
int
pusha
xor
(bad)
rcr
mov
ret
mov
jno
and
inc
mov
jecxz
or
pop
enter
xor
cmp
dec
sahf
xchg
adc
mov
mov
jmp
ins
fwait
cmp
fcomp
mov
inc
sbb
ja
data16
xlat
loope
mov
mov
mov
pop
xchg
pop
sti
clc
inc
in
aas
cmc
push
adc
stos
add
mov
and
int
sub
cmp
or
inc
jle
cmp
(bad)
cmp
lahf
shr
push
mov
add
hlt
cmp
ds
js
mov
add
cmp
mov
cmp
push
mov
xchg
mov
mov
frstor
dec
mov
std
xor
call
or
sub
sbb
dec
shl
loop
cmp
xchg
loope
inc
add
or
mov
fmul
mov
sub
fsubr
mov
add
xor
in
push
xchg
add
ds
and
sub
fcmove
nop
bound
cmps
jne
loope
sti
jl
pop
into
cs
retf
or
shr
pop
shl
movs
and
sbb
mov
pop
add
mov
sbb
mov
or
arpl
push
cmps
dec
jp
and
jb
xchg
sub
fwait
xchg
dec
xor
nop
xchg
(bad)
sahf
adc
inc
adc
mov
xor
and
iret
movs
rcl
fdiv
jge
xor
sub
xor
or
inc
and
jle
mov
dec
enter
xor
xchg
xor
ss
loopne
repz
sahf
call
je
mov
add
test
imul
add
in
retf
jmp
fadd
(bad)
ins
ss
icebp
sti
jge
xor
mov
mov
xchg
adc
or
pop
sub
(bad)
les
xlat
xor
aad
cli
div
xor
dec
(bad)
mov
sbb
jmp
mov
mov
push
inc
fcmovnu
in
mov
or
in
adc
xor
inc
repz
mov
ja
outs
fsubr
test
xchg
pop
cmp
(bad)
dec
sahf
adc
lods
push
push
lea
and
ins
imul
or
jnp
sub
jecxz
adc
xor
mov
test
mov
div
pop
rol
inc
aaa
sbb
sbb
sbb
and
inc
xchg
aad
pop
add
xchg
aas
mov
pop
xchg
aad
mov
ins
in
ds
inc
(bad)
or
dec
lock
mov
xor
in
(bad)
mov
pop
ins
and
inc
push
add
fld
mov
inc
adc
add
outs
add
add
cmp
xor
(bad)
cs
or
mov
push
imul
cli
dec
add
push
and
sahf
mov
lahf
retf
imul
sahf
arpl
clc
mov
push
sub
inc
test
(bad)
cmps
xchg
imul
lahf
movs
fistp
or
test
in
(bad)
icebp
call
scas
xchg
jnp
fdiv
adc
jp
adc
out
fwait
mov
xor
retf
in
and
sbb
push
imul
out
fbstp
and
and
inc
sub
cmp
(bad)
outs
xchg
rol
inc
sub
adc
scas
cmp
jne
sahf
sbb
(bad)
inc
pushf
and
cmps
cmps
addr16
mov
mov
add
scas
and
xor
mov
jne
sub
fwait
sahf
jne
frstor
xchg
dec
push
jne
add
cs
popa
popf
mov
test
mov
lea
out
clc
movs
add
cmp
cs
cld
mov
retf
sub
movs
movs
mov
fcomp
sbb
jo
cmp
adc
outs
and
repnz
fdiv
dec
arpl
and
add
arpl
in
and
fidivr
sti
xchg
aam
sbb
fist
into
or
fwait
sub
or
push
stos
gs
adc
lods
push
or
mov
int
(bad)
xlat
outs
imul
adc
sbb
lea
pusha
in
or
mov
mov
pop
xchg
add
jp
lea
sbb
cmc
jp
xlat
inc
out
fbld
mov
test
clc
aaa
test
test
inc
add
push
ds
shl
push
loopne
push
add
jbe
push
push
sti
jne
dec
pop
or
or
add
add
dec
shr
sti
pop
jne
push
add
inc
cmp
jle
sub
xchg
cmp
ins
pop
aam
hlt
cld
fistp
xchg
stos
pop
shl
jmp
sbb
and
jo
into
loopne
dec
cmps
daa
sti
gs
sub
inc
jmp
push
mov
mov
add
les
and
rcl
xchg
sub
sub
sbb
stc
loop
mov
into
dec
jl
or
fcomp
popa
push
dec
lock
ins
mov
test
jno
mov
(bad)
dec
sub
rcr
inc
add
inc
xor
xlat
mov
call
mov
xchg
add
jmp
add
mov
scas
pop
test
imul
sub
cmp
push
inc
push
mov
cli
jnp
and
jge
cmps
inc
pop
js
fsubr
outs
add
bnd
lock
dec
ds
cwde
mov
mov
sbb
call
ds
imul
cmp
aaa
adc
nop
lea
call
lock
out
xor
mov
and
jl
push
jns
clc
jle
pop
fdiv
and
in
sub
jae
pop
dec
pop
pushf
adc
jnp
loope
(bad)
and
popf
sbb
adc
xchg
mov
mov
shl
push
(bad)
mov
xor
jmp
cmp
or
(bad)
cmp
test
ds
adc
adc
or
pop
data16
or
mov
test
out
outs
xchg
and
fisubr
(bad)
push
inc
push
pusha
jno
call
or
arpl
inc
dec
and
test
sub
mov
mov
aaa
sbb
mov
cwde
int3
dec
push
dec
xor
adc
push
push
sti
loop
or
movs
lods
mov
loope
dec
mov
push
popa
jecxz
cmp
ss
shl
push
sar
mov
xor
sub
xor
ins
push
loop
or
shr
ds
lock
sahf
retf
inc
dec
lods
inc
sbb
sbb
ins
call
daa
fs
into
mov
sbb
popf
ins
dec
scas
add
xor
pop
outs
cmps
pop
fistp
xor
mov
add
ret
fdivr
add
fs
pop
pop
push
ret
loope
xchg
cmp
popf
push
add
stos
mov
dec
jnp
enter
movs
mov
pop
fwait
jmp
mov
mov
repz
sub
scas
lods
movs
push
sbb
movs
mov
ins
jo
cmp
int3
inc
jb
pushf
sub
fmul
cmps
int
jl
out
adc
(bad)
pop
mov
inc
arpl
pop
mov
repnz
scas
lods
nop
xchg
stos
cmps
loope
cwde
push
add
std
dec
cmp
lea
mov
adc
inc
test
(bad)
jmp
adc
stc
aam
mov
lahf
adc
xchg
or
or
in
call
fwait
xchg
cmp
xor
shl
gs
xchg
popf
arpl
outs
ss
sbb
iret
out
stos
sbb
mov
ds
inc
(bad)
or
stos
loope
adc
pop
aad
add
push
jl
ret
outs
mov
test
or
add
add
mov
out
inc
bound
mov
pandn
in
add
lock
mov
mov
pop
sbb
mov
sub
xor
pop
jp
js
or
out
mov
hlt
sub
iret
ins
test
or
push
mov
mov
dec
cmp
push
or
loop
mov
mov
ins
push
and
or
inc
xchg
rcr
bound
call
jno
scas
dec
lea
retf
aam
pop
sbb
or
jl
das
shr
adc
test
xor
sbb
sbb
xor
and
test
inc
cmp
mov
jno
data16
repz
fsub
cdq
je
sbb
push
inc
push
add
and
ret
add
add
inc
add
add
jge
dec
dec
jecxz
dec
cmp
rcl
cdq
dec
inc
xchg
and
cmp
movs
(bad)
mov
mov
pop
add
pop
data16
shr
fnstenv
pop
inc
mov
push
imul
xchg
adc
lods
sbb
loope
push
sub
fwait
jecxz
cwde
jmp
push
call
push
jmp
loopne
mov
out
fwait
dec
pop
mov
fst
or
out
ins
fdiv
dec
pop
pop
(bad)
cmps
dec
lea
jnp
aad
ins
repnz
lar
mov
mov
xor
shr
pushf
out
and
jo
je
test
xchg
pop
ret
or
pop
xchg
xchg
lahf
xchg
inc
xlat
jmp
and
mov
out
jo
xor
xchg
xor
jno
sub
sub
mov
sub
ja
aaa
inc
xor
ret
push
mov
loope
sti
cmp
dec
and
mov
lods
cmps
mov
mov
daa
inc
mov
cs
lock
mov
and
xchg
cld
inc
dec
xchg
ja
xchg
pop
cmp
test
or
test
sbb
sub
mov
adc
mov
aam
dec
pushf
cmp
add
ins
ss
xchg
ret
adc
leave
and
xor
pushf
xchg
ins
mov
mov
imul
add
adc
sbb
jg
in
dec
js
jae
js
movs
sbb
cdq
(bad)
mov
ds
xchg
mov
mov
(bad)
mov
dec
(bad)
out
cmp
push
sbb
dec
and
jmp
dec
add
push
push
(bad)
les
or
dec
add
pop
mov
neg
add
test
or
int
inc
xor
pop
leave
jnp
fstp
jbe
and
pusha
adc
mov
push
dec
cmp
mov
gs
je
cmp
data16
ins
data16
or
lds
out
pop
jmp
mov
adc
mov
loopne
xchg
lods
cmp
std
aas
dec
adc
ins
jno
ins
add
pop
pop
ret
mov
sbb
xchg
ror
addr16
or
pusha
pop
pop
fstp
and
dec
mov
fidiv
lock
xchg
les
out
or
hlt
icebp
or
ins
adc
and
ror
pop
add
mov
push
or
xor
sar
sub
push
leave
es
push
dec
movs
jl
pop
(bad)
in
jecxz
mov
sti
ja
inc
xor
divps
xor
mov
sub
aaa
sub
loopne
fsub
and
dec
adc
stc
mov
xor
enter
fadd
push
mov
mov
add
or
push
dec
cmp
inc
adc
rcr
sub
fimul
sub
push
jns
sbb
leave
in
in
sbb
mov
repnz
ret
sbb
jno
mov
and
sub
fwait
jmp
mov
mov
movs
retf
gs
mul
test
sbb
push
and
repz
dec
clc
push
outs
dec
in
dec
mov
repz
and
leave
je
mov
dec
loopne
pop
nop
mov
adc
call
jb
std
jle
mov
push
jae
out
cwde
cmp
std
and
xor
pop
and
jns
je
stos
std
jbe
fild
mov
and
jmp
cmp
push
and
inc
add
mov
and
adc
xor
xchg
xchg
add
iret
iret
dec
mov
mul
popa
sbb
mov
shr
data16
repz
adc
pop
cmp
inc
inc
fwait
lea
dec
sbb
retf
mov
lahf
popf
fidivr
xchg
fwait
mov
in
test
shr
test
inc
clc
cs
imul
(bad)
mov
sbb
imul
in
jne
dec
or
cld
aas
out
mov
xchg
movs
mov
sub
nop
sub
test
inc
xor
add
test
xchg
aad
pop
call
push
stc
std
mov
mov
or
cmp
push
in
xlat
push
outs
xor
js
adc
push
out
push
js
inc
out
imul
sbb
sub
mov
das
and
cs
sub
mov
xchg
fiadd
push
in
mov
dec
mov
retf
in
test
mul
shr
fnstcw
mov
mov
push
push
das
outs
xchg
cmp
xor
shr
fwait
xchg
sahf
fsubp
lahf
data16
lahf
jmp
cmp
xor
enter
(bad)
pop
pop
push
es
(bad)
xchg
or
xchg
clc
popf
pop
cs
retf
lds
out
mov
dec
cmps
mov
sahf
push
pop
mov
int
mov
and
dec
add
pusha
sbb
jno
into
fnstsw
lock
call
push
dec
xor
jno
or
cmp
mov
outs
retf
sub
add
es
icebp
lods
push
pusha
cmp
adc
daa
dec
aad
cwde
ret
xor
das
daa
(bad)
repnz
icebp
pop
inc
and
cmp
neg
stc
adc
sub
and
xor
adc
add
jecxz
add
adc
add
push
jnp
jecxz
dec
neg
inc
mov
add
ss
dec
or
jo
lahf
or
fucom
adc
xchg
arpl
movs
add
dec
inc
xor
mov
dec
inc
xor
rcl
sub
add
push
inc
inc
fnsave
push
add
arpl
lea
pop
pop
js
in
in
test
pop
push
(bad)
ins
jle
in
or
dec
mov
(bad)
(bad)
mov
add
adc
or
add
shl
fstp
fcomp
stos
nop
repnz
shr
int3
cmps
idiv
cmp
sahf
xchg
xchg
dec
cmp
outs
mov
repz
pop
fwait
stos
push
dec
pusha
xchg
or
pusha
test
pop
xchg
icebp
add
inc
daa
sahf
xchg
adc
mov
xchg
adc
iret
dec
(bad)
dec
pop
cs
(bad)
fcomp
fld
adc
xor
xchg
or
enter
push
adc
leave
(bad)
(bad)
fidiv
into
nop
pusha
sub
shl
(bad)
mov
aam
loop
psubd
xchg
dec
(bad)
(bad)
fist
idiv
in
cmp
popa
pop
fild
and
fwait
leave
add
xchg
pop
test
inc
pop
cmp
ror
add
push
pop
inc
mov
lods
lods
clc
sub
bound
pop
and
pop
lock
int
xor
ins
inc
mov
cmps
mov
arpl
imul
adc
js
sbb
pop
mov
mov
movlps
dec
retf
enter
mov
jmp
xor
sbb
pop
inc
inc
sub
lahf
or
pop
add
mov
repnz
(bad)
pop
sbb
lahf
inc
or
fwait
test
adc
push
sbb
push
data16
call
adc
lds
ret
pop
mov
adc
clc
and
in
adc
out
xchg
hlt
dec
lods
or
sub
popf
outs
addr16
int3
push
movs
mov
cmps
xchg
jae
cwde
or
movs
cmps
repnz
adc
xchg
in
dec
mov
test
xchg
mov
test
fst
push
push
sub
cmp
jbe
xor
push
test
mov
jmp
imul
jecxz
in
and
js
std
(bad)
test
mov
mov
push
inc
sbb
test
sbb
repz
les
adc
and
cmp
push
mov
xor
jecxz
inc
xor
mov
aaa
scas
mov
dec
cmc
and
ins
xor
js
bound
sbb
jae
adc
jne
add
adc
call
popf
dec
shr
dec
in
fwait
pop
mov
retf
inc
stos
aad
(bad)
mov
repnz
clc
arpl
jle
fistp
mov
cmp
push
popa
popa
inc
aaa
xor
sub
pop
mov
ins
ss
sbb
push
ins
adc
push
or
stos
push
mov
sbb
dec
popf
fld
or
arpl
in
sub
push
xchg
les
leave
cmc
addr16
add
jp
mov
adc
push
ret
cmp
pmaxsw
dec
xor
pop
cmp
push
scas
retf
int
popa
rol
ins
std
retf
sub
or
enter
ins
mov
fdivr
jmp
mov
(bad)
ja
shl
aad
add
cmps
loope
dec
add
ror
clc
pop
nop
dec
test
pop
(bad)
and
clc
mov
cmp
push
sti
daa
or
pop
mov
pop
mov
push
cmp
aaa
jle
fimul
adc
sub
ret
rcl
arpl
cmp
fbld
dec
xchg
pop
sbb
add
or
jae
aas
inc
div
lods
dec
jb
pop
push
xchg
(bad)
mov
aas
cmp
push
xor
jbe
adc
mov
sti
std
mov
adc
or
fs
cmps
push
and
sub
icebp
test
cld
lds
inc
cmp
sti
lds
push
iret
iret
adc
push
movs
ror
inc
inc
cmp
inc
or
add
add
sbb
outs
pop
js
mov
into
(bad)
call
mov
lock
mov
repz
rol
add
test
xchg
call
add
mov
inc
add
fbstp
ins
dec
mov
ja
outs
jbe
jp
add
mov
loope
xor
gs
(bad)
shl
fimul
ins
out
jo
sub
sub
(bad)
test
lods
or
sar
pusha
push
xchg
ret
leave
fdiv
icebp
rcr
cmp
ins
inc
cmp
cmc
popf
retf
test
jp
push
pop
push
push
and
lods
sub
push
sub
out
cmp
cdq
cwde
enter
or
sbb
dec
repnz
aad
push
jbe
fist
add
pop
adc
sbb
arpl
jg
jnp
lahf
(bad)
cmc
cmp
or
repnz
imul
test
out
dec
daa
cmc
pop
cli
mov
mov
movs
sbb
(bad)
ins
jmp
lea
les
inc
(bad)
ret
movs
rol
mov
(bad)
mov
mov
(bad)
movs
and
mov
jo
push
fwait
jnp
add
jl
clc
popf
pop
rcr
xchg
and
jecxz
jl
and
xchg
sar
fadd
movntps
leave
pmaddwd
loopne
inc
xchg
out
iret
loope
adc
int3
adc
rol
pop
push
pop
iret
xor
mov
and
sbb
xchg
dec
inc
add
xchg
popa
cdq
cwde
sbb
jnp
xchg
add
sti
and
fiadd
xor
iret
cwde
int
fadd
xlat
popa
out
mov
aad
test
sar
sub
adc
arpl
(bad)
adc
or
fst
or
sub
ins
xchg
mov
das
xchg
mov
mov
dec
in
loopne
mov
out
cdq
sbb
cmp
add
(bad)
mov
jbe
movs
jg
sub
add
aam
or
mov
data16
arpl
out
add
mov
adc
push
cmp
nop
mov
es
fwait
int3
pop
jg
cmp
xchg
data16
loopne
jae
xor
lock
mov
pop
lahf
test
pushf
xchg
pop
mov
adc
(bad)
sbb
stc
retf
in
rcr
lods
enter
lea
fbld
xor
cld
ins
or
mov
cmp
sbb
and
es
jo
xchg
shr
js
mov
inc
push
jno
xchg
(bad)
inc
jb
imul
pop
xchg
mov
loop
push
dec
adc
repnz
pop
inc
les
imul
jecxz
mov
push
adc
sbb
inc
xor
test
out
daa
in
sbb
add
ret
(bad)
fisttp
add
ja
and
push
popa
ret
shl
pop
pop
inc
cli
cli
jnp
aas
fdivr
out
jl
jg
retf
gs
add
imul
push
(bad)
jle
or
dec
add
jno
hlt
jmp
icebp
mov
xchg
mov
mov
aam
and
int3
into
or
(bad)
cmp
sbb
or
enter
push
jbe
push
fild
(bad)
and
mov
das
iret
pop
test
sbb
jle
or
stos
push
inc
mov
cmps
inc
or
or
fcmovbe
sub
in
outs
fwait
dec
(bad)
out
and
aas
cmps
push
(bad)
mov
jbe
or
xor
rcl
mov
adc
sbb
les
sti
add
icebp
mov
xchg
outs
aad
into
into
add
xchg
xor
imul
sub
dec
sub
sbb
pop
or
mov
jb
daa
pop
pop
retf
jb
popf
lods
stos
jae
addr16
push
or
cld
iret
and
dec
add
jno
or
sbb
(bad)
xor
idiv
imul
mov
ins
pop
xchg
out
mov
pop
inc
(bad)
push
xchg
push
cmc
cmp
daa
cmp
xchg
or
dec
adc
jbe
out
repnz
mov
push
and
aaa
and
fdivr
mov
addr16
dec
sub
dec
dec
inc
or
xor
sahf
xchg
ins
fcmovnb
gs
popa
dec
inc
inc
cli
aam
add
jnp
shr
add
cld
or
lea
cli
popf
ret
and
xchg
add
adc
sub
adc
push
sbb
in
push
(bad)
jle
or
dec
add
mov
cmp
lahf
out
call
cmp
sbb
inc
jno
mov
pop
std
xor
mov
jno
or
scas
lods
push
inc
iret
dec
jge
or
out
mov
rol
(bad)
ficomp
movs
scas
mov
lods
js
stc
push
or
outs
add
cmp
push
fisub
xor
push
and
cmp
xchg
or
mov
sbb
movs
and
push
shl
mov
fs
into
sbb
out
bound
rcr
pop
pop
pop
aam
add
dec
xor
scas
xchg
(bad)
mov
sbb
or
adc
pop
imul
xchg
test
mov
jle
fcomp
loopne
sub
popf
jae
cmp
dec
xchg
inc
or
adc
inc
jg
and
pop
mov
(bad)
pop
lods
retf
in
addr16
test
std
std
sub
sbb
call
cwde
xchg
movs
movs
dec
fmul
in
aas
push
bound
es
adc
loope
add
jl
pushf
add
mov
out
repnz
nop
dec
and
mov
gs
shl
jnp
cdq
inc
jp
lds
call
loopne
inc
hlt
sbb
add
inc
add
and
inc
test
inc
loopne
add
add
xchg
vpavgw
pop
addr16
pushf
ret
jnp
pop
dec
cdq
call
mov
jmp
fs
push
pop
sub
popa
pop
sub
ss
arpl
adc
push
test
xor
leave
imul
jns
jmp
push
mov
lods
xchg
sub
jge
clc
and
jo
fdiv
sbb
inc
xor
sbb
mov
xchg
add
add
adc
in
dec
ror
inc
sbb
fdiv
jle
dec
and
jmp
inc
shl
shl
cmps
loope
sub
cmp
inc
(bad)
or
xchg
pop
imul
pop
push
add
jbe
out
xlat
aad
jmp
test
fcom
call
xchg
mov
sub
cmp
nop
jne
or
fwait
cmp
xlat
out
push
popf
cli
push
retf
ror
jmp
mov
add
(bad)
rcr
gs
sub
jecxz
lods
cmp
add
iret
daa
and
ja
sub
out
mov
pop
mov
push
ret
hlt
cld
dec
clc
int3
or
adc
mov
mov
fcos
and
pop
inc
pmulhuw
adc
call
repnz
das
or
sbb
add
pushf
cmp
jnp
repnz
or
(bad)
mov
dec
ss
ins
or
pop
sbb
pop
jo
cmp
mov
mov
xlat
fiadd
mov
sbb
leave
icebp
rcr
pop
sti
push
mov
loopne
ja
cmc
stos
mov
mov
jmp
cmp
lods
stos
jbe
add
jmp
shl
adc
movs
inc
mov
pusha
jg
jmp
adc
test
inc
test
jo
ss
imul
jne
addr16
(bad)
sbb
dec
jo
push
(bad)
(bad)
xlat
enter
loopne
adc
add
cmp
call
add
inc
add
nop
and
inc
jcxz
out
loope
or
pop
add
ret
(bad)
int3
in
jle
mov
jb
pop
adc
dec
cmp
mov
scas
sub
loopne
scas
ret
and
or
sbb
cmp
retf
ins
sub
icebp
xor
movs
mov
adc
or
mov
sub
lahf
ret
xor
aad
adc
mov
push
add
add
xlat
call
mov
fisub
add
add
xchg
pop
cmps
dec
popf
(bad)
sbb
jnp
fsub
popa
cmp
add
and
add
mov
mov
mov
out
mov
cdq
lea
test
adc
push
mov
mov
push
stos
push
dec
jle
ret
and
pop
and
cmp
adc
sbb
(bad)
push
scas
mov
fistp
add
pop
data16
inc
sub
mov
add
mov
mov
push
stos
(bad)
in
mov
fwait
into
in
jb
add
pop
inc
mov
in
sub
dec
js
xchg
imul
gs
ss
in
out
sbb
pop
pusha
inc
nop
jg
mov
int
jae
stos
cdq
sti
addr16
cmp
int3
mov
stc
aad
push
clc
cmc
xchg
stos
ins
xchg
call
sub
xchg
aas
retf
jno
pop
enter
xchg
imul
cmp
into
in
jbe
ss
mov
xor
mov
jecxz
retf
stc
xchg
clc
inc
cmps
stos
add
mov
cld
loopne
jg
sbb
std
mov
loopne
mov
mov
clc
shl
popf
imul
mov
cmps
push
mov
lods
out
in
fidivr
outs
mov
mov
fdiv
rol
sub
pop
pop
jge
cmp
out
adc
add
push
push
mov
adc
sbb
(bad)
fisttp
rol
cmp
push
cmc
jg
hlt
mov
cs
pop
in
not
mov
shl
push
add
and
or
(bad)
jmp
dec
add
cmp
sbb
push
jl
pop
dec
bound
jle
xor
adc
pop
test
pop
arpl
in
mov
into
outs
pop
inc
adc
outs
sub
sbb
cmp
lods
adc
mov
test
xor
pop
or
fidiv
stc
jae
xchg
rol
xchg
fnsave
mov
add
xchg
loope
in
jb
sbb
cmp
cld
dec
cld
and
xchg
mov
out
rcr
and
mov
dec
lea
sbb
inc
add
scas
pop
popf
add
mov
push
xlat
mov
in
cmp
fnstenv
ins
jnp
out
mov
cmps
push
test
imul
imul
cmp
sbb
fcomp
stos
out
cmp
rol
inc
xor
push
dec
dec
push
xchg
xchg
xchg
xchg
test
add
jmp
jb
mov
dec
push
push
movs
mov
push
mov
out
inc
ret
cmp
lahf
mov
std
xchg
adc
aad
in
dec
in
outs
dec
outs
push
mov
ss
push
(bad)
sub
lock
jecxz
in
icebp
icebp
leave
or
or
and
inc
xor
shl
ja
mov
push
(bad)
mov
mov
in
int3
mov
or
xchg
aas
pop
ins
rcr
dec
test
sub
mov
or
push
jo
jns
jp
sub
xlat
rcr
and
lahf
inc
aad
xor
out
idiv
inc
in
dec
dec
and
xchg
int
fs
push
in
out
mov
jo
and
dec
std
mov
lahf
sbb
xchg
mov
mov
add
das
lea
mov
loope
pusha
push
cmps
or
dec
add
mov
lahf
pop
aad
aas
jg
repz
mov
jnp
and
(bad)
scas
push
mov
add
call
retf
(bad)
push
(bad)
and
xchg
dec
or
dec
std
stos
push
(bad)
imul
out
jne
inc
(bad)
and
push
xchg
mov
loope
ja
stos
stos
sbb
fisub
mov
or
mul
(bad)
pop
scas
and
call
(bad)
fstp
jecxz
or
scas
jae
imul
out
(bad)
(bad)
xlat
enter
loopne
lock
shl
and
add
sar
repz
jge
sbb
sbb
repz
dec
fbld
lahf
in
add
pop
or
out
mov
pop
test
jmp
mov
mov
jns
in
pop
int3
pushf
pop
into
(bad)
jae
push
mov
xor
test
mov
inc
and
push
cmc
sti
rcl
pop
or
xchg
push
mov
out
adc
dec
sub
iret
push
cli
cli
jp
in
add
mov
and
add
and
jns
ja
hlt
sub
jmp
mov
out
xchg
imul
fistp
fisubr
push
xchg
cdq
cdq
pop
pop
push
movs
fiadd
mov
mov
jl
lahf
je
hlt
sbb
test
out
pop
sub
push
jmp
addr16
and
adc
rol
fsubr
cmps
dec
stos
lods
sub
repz
pop
push
hlt
mov
scas
hlt
cmc
cmc
ins
addr16
ins
mov
pop
and
rol
movs
loope
inc
mov
lock
inc
inc
adc
sbb
std
outs
ins
fnstenv
mov
(bad)
jge
jno
xor
test
fnstsw
jg
sub
or
mov
mov
sahf
(bad)
mov
int
stos
cmp
arpl
dec
sub
dec
mov
ja
or
sbb
pop
mov
hlt
pop
cmp
add
or
imul
(bad)
imul
add
int3
cdq
push
loopne
out
hlt
jmp
out
popf
xlat
popf
cmp
sar
js
cli
out
pop
xchg
cmps
add
and
push
pop
push
sub
jmp
lds
xlat
popa
adc
cmps
je
mov
mov
retf
mov
xchg
sbb
and
or
cmc
cmc
fild
icebp
xlat
mov
pop
mov
xchg
push
hlt
loopne
or
ret
test
adc
jmp
sbb
xor
jns
sbb
dec
push
or
mov
out
xchg
add
mov
fnsave
sbb
push
pop
sbb
(bad)
push
scas
mov
sbb
iret
gs
push
lahf
pop
rcr
jmp
mov
sahf
dec
inc
mov
shr
pop
dec
sbb
dec
xlat
jecxz
aad
and
xor
push
adc
add
xchg
mov
add
mov
ja
clc
enter
sbb
sti
out
sub
add
test
pop
add
into
jle
in
sub
and
into
hlt
ja
mov
stos
or
fcomp
fisub
xchg
js
scas
lahf
ss
sbb
sbb
out
popf
fisttp
mov
push
in
sbb
mov
jl
adc
fdiv
ja
int
test
mov
pop
xchg
rcr
fwait
loope
outs
or
add
push
mov
jbe
(bad)
out
ins
jbe
and
jae
(bad)
jbe
movs
outs
or
dec
jle
xchg
dec
in
dec
and
pop
sbb
push
cmc
xor
add
add
call
adc
mov
shl
std
pop
and
push
je
into
lahf
rcr
popa
popa
loope
fucomip
std
pop
inc
arpl
pop
ss
xlat
test
jbe
lods
scas
scas
nop
mov
and
pop
sub
mov
and
xchg
mov
or
or
stos
imul
push
adc
inc
sub
cmp
inc
(bad)
or
mov
mov
loopne
pop
cld
dec
nop
cli
mov
jo
movs
(bad)
jecxz
mov
mov
xor
out
dec
sub
push
mov
dec
cld
adc
sbb
rol
sbb
arpl
xchg
dec
jne
arpl
and
inc
movs
call
mov
mov
lar
xchg
call
gs
std
push
loop
adc
(bad)
popf
ret
sbb
mov
outs
jno
inc
mov
out
mov
push
cmps
in
xlat
or
loopne
bound
enter
cmc
pushf
pop
mov
pop
inc
popa
cmp
mov
and
jmp
xchg
push
and
xor
push
sub
cmp
inc
(bad)
or
mov
seta
pop
or
cmc
push
mov
aas
rcl
sar
outs
mov
aaa
fld
retf
ins
add
outs
arpl
push
imul
das
or
push
sbb
inc
xchg
leave
call
xchg
mov
test
in
leave
and
div
jno
jg
cmps
or
dec
add
in
mov
jg
add
pop
pop
pop
(bad)
int
iret
jmp
imul
fild
mul
jb
cmp
out
push
add
std
pop
dec
jp
add
mov
push
stos
xchg
fild
out
mov
mov
mov
loope
fnstsw
sub
add
mov
jp
dec
sub
scas
ja
sti
sahf
jle
add
inc
add
xchg
mov
mov
jmp
popf
in
pop
pop
push
mov
pusha
dec
pop
lods
(bad)
or
mov
mov
jbe
jnp
fist
mov
ja
jmp
(bad)
cmp
aad
mov
cmc
mul
std
std
(bad)
pop
ss
add
inc
add
or
or
std
push
loop
and
push
pop
mov
ret
(bad)
fstp
cmc
leave
js
mov
pop
dec
jecxz
or
aam
imul
inc
add
dec
jae
jae
in
mov
jne
rcl
cld
arpl
adc
test
add
sbb
pop
fild
jp
add
sbb
shl
push
or
mov
inc
or
mov
rol
mov
lea
mov
jmp
inc
punpckhdq
mov
sbb
aaa
mov
aam
inc
add
sbb
outs
adc
test
add
sbb
pop
fild
jp
add
sbb
shl
push
or
mov
inc
or
mov
rol
mov
lea
mov
jmp
inc
punpckhdq
mov
sbb
aaa
mov
aam
inc
add
sbb
outs
adc
test
add
sbb
pop
fild
jp
add
sbb
shl
push
or
mov
inc
or
mov
rol
mov
lea
mov
jmp
inc
punpckhdq
mov
sbb
aaa
mov
aam
inc
add
sbb
outs
adc
test
add
sbb
pop
fild
jp
add
sbb
shl
push
or
mov
inc
or
mov
rol
mov
lea
mov
jmp
inc
punpckhdq
mov
sbb
aaa
mov
aam
inc
add
sbb
outs
adc
test
add
sbb
pop
fild
jp
add
sbb
shl
push
or
mov
inc
or
mov
rol
mov
or
std
jmp
loop
or
add
add
dec
inc
scas
inc
pusha
or
add
add
add
add
xchg
mov
add
add
add
add
sbb
cmp
push
pusha
ret
lods
pop
pop
dec
lods
push
cs
and
mov
add
pop
push
jae
jb
pop
ins
popa
jp
xor
inc
gs
je
jo
ja
je
outs
ins
fs
ja
je
outs
ins
fs
outs
bound
push
gs
gs
jae
pop
ja
je
outs
ins
fs
bound
add
les
ficomp
add
add
rcr
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
